push
call
ret
ret
xchg
orps
push
push
shrb
es
cld
fldenv
xchg
insl
adc
sbb
inc
sub
push
test
or
sarb
ds
add
adc
xor
pop
xchg
orb
mov
mov
xchg
xchg
shr
loope
mov
cltd
fists
lcall
test
or
std
xor
pop
mov
sbb
jno
jmp
dec
stos
inc
jp
out
in
xchg
inc
lock
and
lret
scas
andb
icebp
negb
es
rorl
cmc
xchg
int3
xor
inc
fisubl
add
push
lods
lods
pop
ret
inc
out
in
mov
hlt
adc
push
jp
and
das
mov
inc
lret
es
popa
jb
repnz
movsl
lretw
lea
pop
fildll
mov
jmp
lcall
lods
clc
or
mov
andl
leave
mov
in
xor
popl
ja
add
popa
icebp
inc
out
faddl
lods
icebp
leave
mov
roll
out
nop
clc
push
and
int3
add
cmc
nop
or
mov
add
incl
paddsw
scas
mov
add
pop
jbe
jge
or
sahf
push
in
mov
push
insb
xlat
lea
mov
scas
mov
adc
fsubrl
clc
test
jle
mov
mov
je
mov
aam
into
fs
in
in
test
aad
or
test
andb
in
lret
xor
xor
fbld
test
daa
mov
xchg
jb
dec
ds
stc
or
adc
mov
sbb
in
dec
cmp
test
adc
push
push
int
mov
push
xchg
icebp
mov
sub
int3
je
mov
jns
test
dec
mov
fdivrs
pop
loop
cmpsb
test
loop
cmp
lahf
test
mov
and
fmulp
imul
xchg
jle
pop
mov
lods
mov
test
or
in
xchg
mov
out
push
nop
add
sub
xchg
pop
movsl
jge
mov
mov
jb
in
fimull
popf
scas
and
rcrl
xor
daa
xchg
out
roll
movsb
es
movsl
adc
test
adc
mov
icebp
mul
pop
adc
shll
mov
push
fnsave
dec
or
das
mov
out
pop
dec
pop
dec
lods
popf
sbb
mov
insl
test
mov
andb
jl
lods
push
sub
or
or
or
mov
cwtl
sbb
shll
xchg
sub
int3
pop
jge
jno
mov
fwait
push
loop
jecxz
or
stos
or
add
ja
and
aaa
mov
mov
daa
sub
popa
sub
out
adcb
mov
ds
mov
mov
mulb
pop
mov
insl
cmp
in
loope
aaa
pop
cmp
inc
xchg
je
push
daa
jno
cld
lock
jo
and
inc
mov
mov
or
jmp
nop
test
scas
inc
cmp
stos
int
xchg
and
add
push
mov
mov
sbb
jmp
cmp
mov
jecxz
pop
push
lcall
xchg
mov
and
movsl
out
in
or
cmp
mov
push
pop
mov
inc
aaa
jl
inc
dec
sub
mov
in
and
cltd
jo
jbe
inc
scas
sbb
mov
aad
dec
xor
add
sub
cmp
shrl
sub
adc
jae
mov
inc
popa
sub
jne
out
lcall
loop
lret
mov
mov
test
push
mov
jmp
cmpsb
icebp
jns
test
lahf
push
rcll
daa
push
out
mov
mov
dec
lret
dec
icebp
in
cmp
dec
fisubl
aaa
xchg
push
fcmovnbe
mov
ror
aam
aas
adc
sub
xchg
cld
popf
cmp
jnp
pop
jo
adc
enter
mov
jmp
imul
ljmp
adc
adc
subb
mov
sarb
lods
xchg
lock
mov
mov
dec
xchg
mov
sub
shlb
add
ror
add
dec
cli
or
in
fdivrl
in
push
ss
jns
add
in
ss
xchg
mov
xor
sbb
add
push
aad
loop
pop
shrb
cwtl
das
and
pop
jne
add
movsb
inc
xchg
push
jb
sbb
insw
push
popa
lods
pop
pop
loopne
aad
sub
int3
mov
std
inc
xor
jno
sub
dec
mov
xor
push
mov
sub
movsb
dec
clc
add
cmp
and
mov
add
pop
shll
xchg
mov
pop
xchg
cwtl
sub
mov
xlat
jle
stos
sti
pop
inc
jne
and
mov
dec
in
pushf
out
sub
or
dec
mov
fwait
adc
lahf
jnp
or
subl
pop
hlt
mov
cld
dec
cmc
add
pop
xor
fmul
shlb
jecxz
aad
arpl
add
rcrb
outsl
jecxz
inc
sub
and
cli
sbb
scas
inc
mov
or
pop
gs
cmpl
gs
aad
xorb
in
es
mov
mov
xor
sahf
subb
mov
and
mov
sbb
and
pop
pop
js
pop
movsb
push
adc
addb
sub
and
push
jne
jecxz
pop
push
cltd
shrb
lds
repz
in
shl
cmpsb
xchg
jbe
mov
mov
out
sub
dec
iret
loopne
pop
test
jno
rclb
test
imul
dec
cmpsb
or
into
ror
sbb
loopne
sbb
sahf
xor
scas
sbb
movsb
insb
inc
iret
call
xor
iret
xchg
out
icebp
pop
push
inc
aam
aam
outsb
imul
lods
pop
iret
add
jle
add
arpl
mov
fs
sahf
mov
js
out
dec
insl
push
push
out
jl
lds
pop
cmp
cmpl
lcall
filds
mov
or
punpcklwd
pop
cmpsb
outsb
xchg
push
pop
cmp
orl
roll
ljmp
rclb
inc
data16
cs
les
add
sbb
sbb
jmp
pop
mov
dec
xor
dec
xorl
pop
ljmp
popa
xchg
ds
pusha
pushf
mov
popf
fxch
int3
sti
mov
xor
xor
ds
jecxz
mov
xor
sahf
aas
ja
jae
jne
sbb
daa
pop
gs
fdivrl
lcall
xlat
or
aaa
adc
add
push
loop
mov
or
cwtl
stos
jnp
mov
xchg
lahf
pop
int
mov
and
xchg
mov
push
out
test
or
inc
push
sarl
int
not
fists
test
insb
ficompl
cmp
insl
and
imulb
decb
rorb
in
imul
shl
cltd
xchg
mov
mov
and
ja
adc
sub
jge
addr16
dec
sub
sbb
xor
incl
mov
test
movsb
addr16
jbe
inc
cld
mov
shl
shr
jmp
mov
cmp
aas
roll
mov
cwtl
fists
xchg
mov
xrelease
or
cmc
cmc
sub
loope
adc
adc
mov
fbstp
or
cli
jl
rorb
pop
leave
out
jle
shl
mov
add
adc
mov
add
sbb
pop
and
aas
fmuls
inc
clc
call
and
in
ds
lcall
xor
and
push
enter
cwtl
xor
arpl
mov
dec
push
addr16
outsb
insl
jb
mov
pop
xchg
cmp
pop
adc
fnstsw
cwtl
mov
arpl
pop
xchg
movsb
mov
sbb
xor
mov
xadd
nop
xchg
add
mov
lods
pop
addl
or
mov
subb
imul
leave
movsl
lods
stc
cs
test
sbb
out
mov
cmp
aad
mov
cld
aad
mov
lock
or
jg
jle
jg
dec
addr16
adc
js
orb
fidivs
dec
inc
into
jmp
dec
mov
jbe
dec
add
mov
pop
hlt
test
sarb
popf
ljmp
cmpsl
cmp
adc
sbb
add
add
mov
ss
push
je
lret
stc
sub
jae
clc
sbb
jp
mov
ficoms
in
sti
add
xchg
out
fldenv
mov
jle
adc
dec
hlt
pushf
mov
and
call
add
mov
xchg
faddp
std
xchg
repnz
iret
fmull
lods
mov
mov
shlb
imul
jb
iret
mov
lods
mov
ljmp
gs
and
fwait
cmc
test
push
push
jno
ds
iret
repz
pop
imul
push
lods
or
pop
jo
push
dec
stos
mov
xchg
test
cli
aaa
mov
aad
ljmp
or
mov
jo
aas
push
jecxz,pn
jnp
and
fdivrl
xor
inc
mov
mov
mov
inc
fcompl
cmp
lea
enter
fmul
jmp
xor
mov
popa
lret
enter
test
int
iret
cmp
outsb
push
or
dec
lock
lahf
lods
mov
cltd
repz
or
inc
add
sub
test
inc
rorl
push
or
push
sub
cmpsb
pop
jg
pop
push
and
lds
add
mov
es
cmp
mov
adc
fwait
mov
mov
cld
pop
push
cs
dec
inc
repnz
cwtl
in
inc
mov
adc
flds
xlat
shrb
pop
inc
cmp
xorl
dec
fcoml
shlb
dec
adc
pop
imull
les
add
pusha
fcmovbe
pop
cmp
aaa
lods
jmp
mov
mov
pushf
sub
jecxz
or
xchg
adc
xor
cmpb
push
sbb
push
cltd
mov
push
scas
pop
fbstp
aad
pop
or
add
mov
aaa
dec
mov
icebp
cmp
hlt
jge
lcall
add
sbb
shlb
in
jae
arpl
push
stc
xlat
xlat
aad
mov
insb
dec
mov
or
add
enter
fsts
hlt
mov
and
aam
cwtl
pushf
inc
enter
sbb
mov
sbb
xchg
loopne
sbb
jbe
leave
dec
stos
push
scas
xor
mov
or
insw
push
mov
filds
add
mov
xchg
test
pop
bound
and
cmp
lret
adc
adc
pop
inc
icebp
ret
sub
scas
inc
sub
mov
push
test
mov
lods
stos
in
mov
pop
shl
test
jbe
pop
cli
mov
or
push
or
sub
inc
mov
or
cmp
dec
inc
and
mov
movsb
pop
ljmp
push
inc
scas
xchg
xor
jnp
test
aam
jl
xor
jl
sbbl
test
mov
and
mov
xchg
ljmpw
dec
nop
pop
andb
call
lret
icebp
xchg
int
popf
insb
aas
adc
imul
movsl
cld
rcll
adc
leave
xor
cld
lea
cmp
add
stos
shll
shrb
mov
push
clc
push
sar
insl
xchg
loope
cld
clc
lret
fs
xchg
mov
fs
push
mov
sub
mov
iret
lea
dec
ret
bound
fwait
ljmp
xchg
jle
and
cmp
outsb
xor
mov
test
stos
add
mov
sub
cmp
push
popf
stos
push
nop
xorb
out
out
popf
mov
cmp
inc
and
sub
mov
jo
cmp
jae
xor
js
test
into
push
cmpsl
in
adc
aaa
xor
mov
jl
cs
adc
data16
xor
mov
push
cs
mov
jne
cmp
cli
mov
shlb
lret
ret
dec
idivl
xor
pop
outsb
fsubrs
cmp
push
shlb
loop
loope
outsl
sub
loopne
or
dec
jno
or
fs
adc
es
idivb
jle
jge
loope
into
iret
lahf
fstpl
mov
jp
leave
inc
push
call
fbstp
loopne
dec
js
mov
bound
sbb
xor
orl
pop
pop
in
mov
jle
jo
adc
or
loop
jb
and
imul
out
stos
inc
cmp
cmp
or
mov
stc
mov
and
xor
cmpsb
add
ret
icebp
imul
jo
lcall
jns
adc
or
daa
mov
xchg
bound
mov
add
gs
lcall
jbe
cmpsb
shrl
cld
sub
cli
call
push
bnd
movsl
rcl
lret
pushl
push
adc
push
insb
inc
iret
loop
repz
jb
xchg
dec
cs
mov
lahf
stc
imul
inc
je
inc
mov
xchg
lea
xor
rolb
push
pop
jmp
lcall
bound
popf
or
int
xchg
xchg
fidivl
add
loopne
test
sarb
jbe
les
pop
jnp
mov
call
addr16
inc
inc
mov
xchg
daa
dec
inc
cmc
jmp
es
mov
cmp
mov
cwtl
bound
into
adc
cmc
mov
sarb
mov
lods
mov
push
rorl
cmc
jecxz
inc
inc
sub
jmp
mov
xor
cld
cmp
cmp
jge
sbb
jae
ret
inc
xacquire
cli
jl
pusha
jo
int3
cmp
js
cmp
push
or
imul
xchg
and
or
dec
insb
xor
lods
popl
fmul
pop
or
dec
cmp
inc
pop
je
test
push
dec
sub
xchg
dec
adc
xorl
mov
sbb
insl
sbb
cltd
std
push
sub
mov
jno
add
mov
lcall
xchg
sub
fsts
xor
add
inc
ffree
push
or
repz
test
push
decb
sbb
push
xor
jmp
fs
fstl
push
mov
sbb
test
lea
push
rcrl
xor
push
negb
adcb
push
lods
imul
movsb
adc
fisttpll
cmp
pop
mov
jl
adc
in
leave
faddl
popf
arpl
push
int3
xchg
aad
jle
pop
xchg
leave
mov
cmpb
jp
push
icebp
inc
out
lahf
lahf
sub
xor
lea
pop
xor
inc
mov
xlat
adc
orb
and
in
xor
sub
sti
xchg
pusha
adc
xlat
and
jo
ljmp
sbb
sahf
sub
sub
scas
xor
imul
ljmp
xlat
ljmp
test
adc
les
inc
scas
jl
or
movsl
iret
pop
jecxz
mov
dec
shl
flds
inc
mov
in
pop
adc
cmp
and
fs
mov
test
mul
jb
xor
cli
jno
xor
jnp
rolb
jecxz
mov
and
sahf
imul
dec
pop
sti
das
jle
adc
inc
loop
sub
sbb
push
aaa
int3
aam
xchg
mov
jb
pusha
or
sbb
xchg
pop
insb
cmp
cmpsl
test
xchg
cwtl
xor
cs
outsl
shll
dec
push
mov
dec
mov
aas
in
inc
mov
sbb
cmp
xor
inc
mov
jl
sub
clc
push
rep
lahf
mov
mov
jl
cmp
clc
mov
mov
push
sti
mov
add
stc
mov
xor
sar
cmc
xor
cmpsl
popa
loopne
pop
xchg
cs
adc
mov
inc
adc
mov
and
pop
add
adc
out
jl
mov
lock
sbb
hlt
jo
fcompl
jmp
sahf
inc
fisubrl
dec
fisubrl
daa
aam
cli
fistpl
cltd
lods
ja
pop
repz
xor
rcll
xchg
sbb
leave
in
lret
int3
mov
jae
adc
push
inc
out
mov
inc
cmp
dec
push
fdivl
cltd
ss
dec
mov
enter
or
mov
or
and
ja
and
fldl
xchg
push
popf
lods
adc
jle
or
insb
hlt
xorb
test
cmp
push
pop
fidivl
adc
iret
pop
or
or
sub
dec
sub
dec
shrl
dec
xor
arpl
inc
cmpl
lods
nop
xchg
mov
push
in
es
mov
xchg
mov
sbb
mov
or
nopl
stos
or
pop
jns
ja
repnz
ret
push
into
xchg
mov
out
fidivs
xor
add
and
in
roll
mov
mov
cmp
pop
or
sbbb
test
push
mov
pminub
pop
enter
pop
or
sub
jmp
xchg
cli
dec
sbb
xor
mov
mov
or
and
push
scas
inc
sub
lods
je
mov
xchg
gs
das
mov
adcb
shlb
add
adc
test
movsb
dec
inc
sbb
xchg
cmp
and
decl
and
pop
pop
adc
push
fisubrs
aad
jmp
pop
push
mov
test
loope
popa
sub
loop
cld
pusha
inc
inc
and
dec
popa
or
test
subl
xchg
xchg
or
rolb
aam
in
lds
popa
mov
sbb
lods
inc
jl
pop
mov
adc
mov
into
fsubrs
enter
xchg
dec
sbb
xchg
enter
iret
jne
sub
movb
fsubrl
xor
outsl
mov
dec
fwait
inc
cmp
test
xchg
mov
pop
ds
mov
jns,pt
adc
add
fcmovu
bound
mov
testl
inc
mov
mov
xchg
jns
mov
popf
push
push
xchg
sahf
mov
xor
inc
xchg
shlb
and
pop
mov
cli
insl
mov
xchg
adc
pushf
dec
dec
xchg
jmp
minps
testb
push
pushf
xchg
imul
mov
jae
addr16
fisubrl
lock
ds
jns
setle
and
push
and
or
dec
ds
push
add
adc
inc
sbb
fwait
cmp
dec
mov
push
fstpt
and
dec
fdivrs
fnsave
and
pop
xorb
insl
loop
cltd
dec
dec
adc
jne
aas
ja
pop
dec
inc
or
mov
scas
pop
aam
push
sti
mov
in
jnp
mov
add
sub
mov
push
mov
lret
inc
bound
out
nop
in
inc
hlt
or
add
xor
lods
add
sahf
pop
mov
cmp
and
aaa
push
int
push
push
fcompl
int3
repnz
dec
inc
jbe
sbb
xor
shll
cmp
dec
into
daa
adc
jo
lods
and
iret
jmp
or
movsl
sub
sub
fdivr
std
cmp
int3
push
push
cmp
mov
push
or
hlt
ljmp
cli
adc
cltd
xlat
xor
stos
jno
jg
mov
jp
push
sub
rcrl
mov
xchg
cmp
mov
out
cmp
fidivl
jge
cmpb
sahf
mov
push
arpl
mov
jle
xchg
pop
xchg
mov
sbb
xor
iret
push
movsb
loop
jmp
stc
add
push
and
out
test
sub
dec
clc
jg
inc
cmp
jg
out
mov
stos
fcmovnb
mov
dec
insb
push
movsb
repz
lahf
cmp
pop
pop
xchg
shl
rclb
jns
push
jo
ret
mov
stc
loopne
push
ficompl
and
mov
jp
gs
imul
adc
cld
sarl
cmp
scas
aaa
mov
shrb
inc
aam
lret
rcrl
cmp
sub
test
dec
push
xor
popf
push
inc
jae
inc
push
cmc
stos
cli
lods
cmp
js
pop
jbe
push
int
cld
stc
mov
adc
hlt
gs
jmp
ljmp
loopne
or
in
jecxz
out
fwait
xchg
negb
jl
leave
daa
dec
shl
sahf
mov
out
dec
ja
int
into
nop
out
adc
jns
xchg
xchg
fwait
pop
mov
les
imul
shll
push
iret
dec
gs
jecxz
pushf
lahf
cld
mov
rol
mov
int
or
fs
ret
in
imul
ret
mov
xchg
jae
inc
fsubs
repnz
and
repz
lock
adc
jb
inc
dec
fdivl
stc
jge
rcll
and
xor
jnp
fiadds
pop
and
mov
and
jns
inc
aad
popa
ds
push
int
outsb
cwtl
cwtl
push
int3
sub
insb
sub
push
imul
push
sub
push
inc
adc
arpl
xor
cmp
xchg
loop
push
pop
jbe
out
or
pop
xchg
cmc
jae
int
enter
sub
mulb
sbb
inc
mov
mov
iret
mov
add
sbb
movb
je
or
adc
and
cs
jb
inc
adc
aaa
scas
les
ja
push
mov
add
mull
mov
mov
mov
adc
enter
int
insl
pop
or
inc
cli
test
clc
mov
add
movsl
fidivl
sbb
xor
sub
hlt
out
in
adc
pusha
shl
push
sub
push
inc
sbb
fidivrl
loop
in
pop
outsb
je
lods
test
fdivrl
mov
dec
mov
cs
or
js
icebp
inc
stc
xchg
pop
jp
notl
cmp
jecxz,pn
out
dec
dec
inc
mov
movsl
xlat
stos
pop
fdivl
sahf
bound
adc
fisubrl
enter
es
stos
pop
out
outsb
sbb
adc
cmp
push
lahf
adc
xor
ja
push
jge
jl
out
cld
cmp
and
loopew
or
lea
hlt
mov
inc
test
jl
shrb
and
adc
sar
and
and
xchg
arpl
stos
ficompl
adc
icebp
sbb
xor
fnstsw
lock
std
scas
sahf
leave
and
insl
sub
push
cmp
push
insb
divl
scas
stc
aas
iret
pop
pop
stos
dec
inc
inc
fucom
mov
mov
xchg
lahf
sahf
insl
and
inc
jno
ret
lods
dec
ret
shrl
loopne
insb
jl
xor
jle
adc
pop
lods
xchg
divps
std
jno
jne
cwtl
jecxz,pn
loopne
dec
xchg
xor
ret
mov
xor
js
inc
xor
push
movsl
lds
push
fld
push
xchg
mov
lea
loope,pt
nop
or
xchg
xor
jo
push
sub
xorb
in
mov
cmpsb
and
cmp
outsb
push
dec
inc
subl
stos
shrb
jg
test
xchg
std
movsl
sbb
ds
xchg
mov
fbld
inc
inc
subl
and
popf
mov
push
cmp
jbe
jl
call
sbb
pop
xchg
push
jns
hlt
inc
popf
push
jnp
mov
add
jmp
xlat
lahf
mov
das
xchg
jl
push
mov
aaa
mov
push
ja
test
sarl
into
das
int
stc
cltd
xor
xchg
in
insb
ds
jb
xor
cmpsb
insb
pop
pop
int
jo
inc
jae
outsb
mov
gs
movsl
xor
popa
popa
and
inc
pop
out
imul
xchg
lds
inc
mov
lock
or
mov
bnd
mov
pop
inc
adc
add
push
data16
pop
push
jbe
fidivs
ficoml
dec
pop
mov
stc
insb
nop
mov
push
cmpsb
gs
enter
popa
jmp
mov
enter
decl
testb
fstpt
pushl
add
lahf
in
push
sub
xor
or
jo
sti
mov
cwtl
and
xchg
pop
cmp
insl
inc
lea
insl
mov
push
push
bound
addr16
arpl
test
push
dec
sub
jmp
push
andb
mov
mov
push
inc
jo
pop
lahf
rcrl
and
int
xchg
cmc
mov
pop
frstor
int
push
pop
lds
lret
add
ret
lods
lods
lds
cmp
sti
pop
dec
aam
fcoms
loope
cmp
mov
mov
mov
rclb
fstpt
mov
subl
inc
jbe
mov
pop
cmpsl
dec
dec
add
arpl
cmpsl
insb
and
fcoml
out
ljmp
test
es
pop
add
testl
lcall
xor
les
xchg
mov
pop
cmp
and
sbb
sbb
shll
inc
mov
inc
lret
stc
mov
out
mov
xor
mov
stos
dec
ljmp
cmp
and
fisttps
push
jecxz
xor
popf
rep
and
cld
lret
pushf
mov
sti
lcall
pop
sub
out
scas
dec
lahf
xor
ja
sub
mov
jb
jecxz
gs
jge
out
test
loope
clc
fwait
mov
add
add
mov
in
xchg
jns
sbbl
mov
inc
hlt
popa
lret
btr
insl
out
cs
or
add
dec
or
jge
push
andb
jno
lcall
mov
jecxz
mov
icebp
dec
rclb
fcomps
xchg
sti
dec
sarb
loop
pop
adcl
sub
jmp
dec
mov
out
mov
and
lock
xchg
and
mov
clc
rcl
mov
add
in
fiaddl
or
or
jno
mov
push
sub
cmp
repz
ficoms
and
jno
cltd
push
jno
call
mov
movl
mov
sbb
cmp
inc
inc
xorb
and
repz
pop
stc
and
pop
or
inc
mov
adc
mov
mov
adc
jmp
cmp
adc
mov
loopne
jne
add
dec
mov
mov
stc
pushf
out
mov
in
push
loopne
pusha
mov
push
je
sbbb
dec
and
mov
push
mov
inc
mulb
push
scas
sub
mov
lret
test
fiaddl
fcmovu
movsb
mov
nopl
jle
rcl
fisubrs
fnstcw
jecxz
dec
and
inc
pop
imul
jb
inc
je
je
add
test
into
outsl
and
out
pop
pushl
adc
jmp
add
repz
push
fdiv
or
fistpl
add
inc
sbbb
shrb
xchg
stc
jne
leave
sub
adc
aaa
fmuls
loopne
insb
int
mov
mov
cmp
mov
mov
cmp
cli
nop
stc
jle
cmpsl
mov
lret
cld
ret
sub
or
adc
popa
mov
and
addl
mov
pop
dec
out
aas
pop
repnz
in
in
lods
div
xor
xchg
jae
aam
dec
stos
xlat
stos
cmp
in
cmp
xor
je
inc
cmp
aam
loope
idivl
stos
arpl
pop
dec
loopne
mov
mov
ss
filds
das
insl
push
dec
pop
ret
dec
addb
insb
pop
or
push
jmp
shll
rorb
jge
mov
inc
fnstenv
sbb
dec
pop
jl
or
dec
jle
int
adc
lret
cli
mov
insb
sbb
ss
scas
shlb
flds
xchg
xlat
fdivl
lahf
jp
push
or
test
pop
mov
testl
mov
jmp
xor
sub
push
and
repz
add
adc
jl
shll
sbb
xor
xchg
pop
les
loope
add
xchg
xchg
mov
mov
push
or
sbb
sub
es
adc
add
dec
in
fs
jp
add
add
test
xor
in
push
jmp
or
mov
lret
test
bound
cmp
dec
lods
lcall
dec
dec
pop
adc
jle
or
aad
adc
mov
loopne
mov
movsb
mov
pop
sub
gs
shrb
cwtl
inc
jb
pop
mov
ljmp
push
ljmp
call
fstpl
mov
jp
in
dec
jns
xor
sub
cmp
test
and
or
sub
add
cltd
imul
in
xchg
test
fstps
in
mov
jno
or
ljmp
xchg
cmpb
hlt
fcomps
mov
rolb
sub
loopne
mov
sub
andl
cld
xlat
push
mov
test
gs
fcomps
iret
loop
insb
scas
jl
out
inc
xchg
dec
cwtl
pusha
or
mov
ds
and
out
imul
int
and
xchg
jecxz
ss
pop
jecxz
inc
filds
cmp
rol
addr16
xor
leave
aaa
bound
lods
imul
xchg
lock
sarb
add
mov
ffreep
clc
outsl
pop
pusha
out
clc
jne
xchg
lahf
popa
dec
call
jns
sbb
fcomps
js
inc
pop
jnp
mov
loope
dec
dec
push
sub
shll
lods
icebp
sub
dec
cmp
xlat
sub
mov
push
add
add
dec
scas
xchg
test
sti
lret
call
or
mov
enter
push
pop
loope
xor
lret
inc
push
push
mov
jg
mov
dec
es
jecxz
pop
repnz
mov
adc
int
out
ss
sub
lahf
movsb
jbe
fnsave
push
ret
inc
test
in
dec
cmpsl
xchg
insb
aad
in
dec
cmc
adc
dec
or
push
xchg
adc
insb
pushl
loop
and
xlat
dec
psrad
scas
outsb
and
in
push
test
mov
aad
inc
jecxz
xchg
enter
mov
add
jne
mov
loopne
ror
aad
push
pop
cmp
in
inc
and
xchg
aam
inc
outsb
push
pop
in
adc
xchg
lahf
int3
aad
xor
inc
push
pop
fidivs
mov
jmp
add
mov
or
nop
pushf
hlt
cmp
loope
jne
lods
icebp
sbb
jnp
dec
pop
test
lods
daa
sti
call
sub
mov
repz
mov
and
sbb
cmpl
xor
jbe
rclb
les
cmpsl
mov
test
adc
inc
adc
imul
sbb
loope
jb
mov
lahf
mov
add
or
fwait
pop
mov
clc
sub
and
jbe
pop
cmpsl
push
cmpsb
xchg
cli
cltd
cld
lock
out
popl
dec
lret
jecxz
or
push
push
and
cld
push
cmp
adc
mov
aad
seta
xor
add
inc
popa
bound
std
cltd
xor
sbb
je
clc
loop
adc
andb
ds
test
ret
mov
in
or
lret
rorl
sahf
jo
and
mov
sbb
ss
adc
xchg
mov
mov
jecxz
std
xchg
xor
jge
adc
stc
sub
mov
ss
add
pop
fs
sbb
incl
xchg
or
or
push
sar
mov
loopne
insb
fwait
lea
jne
push
mov
insb
dec
imul
out
scas
aam
cmpsb
push
ljmp
add
into
fisttpl
pop
xchg
pop
inc
pop
sub
clc
insb
xchg
popf
scas
sbb
scas
mov
dec
pop
in
pop
jae
sbb
mov
in
rolb
divb
or
js
movsb
mov
sbb
mov
les
dec
mov
sbb
jno
xchg
lock
daa
jbe
test
pop
loopne
push
aad
dec
jl
fmul
daa
cmp
out
notb
popa
mov
adc
mov
lcall
add
adc
xor
imul
xor
es
outsl
cli
aam
test
push
shlb
inc
mov
jle
out
nop
loop
arpl
icebp
into
ja
lret
insb
and
and
cwtl
gs
aas
pop
loopne
jle
mov
or
movsl
dec
jb
dec
mov
in
or
sbb
addr16
xchg
rorb
ds
loop
adc
adc
xchg
mov
cmp
cs
loopne
out
adc
fdivrl
xor
push
cmpsb
in
shrb
inc
mov
imulb
mov
imul
and
jecxz
std
ljmp
xchg
repz
push
cmp
fldenv
pop
cmp
mov
mov
or
mov
push
mov
mov
push
clc
adc
hlt
inc
xor
fwait
and
lods
mov
cmpsb
movsb
or
loopne
mov
mov
cld
addr16
cmpsb
icebp
fwait
mov
daa
outsl
shl
jmp
sbb
xchg
ss
push
stos
insl
dec
je
or
lfence
push
out
std
jp
int3
cld
and
mov
in
push
ficomps
push
xchg
push
mov
repz
leave
mov
in
scas
movsb
jo
int3
mov
dec
bound
out
dec
and
jo
mov
pop
add
fdivrl
cld
imul
daa
jle
mov
dec
and
xor
dec
or
pushf
ffreep
addr16
or
xor
loop
and
mov
stos
sbb
mov
push
fidivl
pop
movzwl
xor
std
adc
or
cld
dec
pop
in
push
ds
sbb
xchg
das
xchg
mov
mov
inc
rcll
push
push
sahf
stc
addr16
lock
int
push
repnz
loopne
pop
jnp
notl
or
adc
jg
mov
and
std
std
nop
incb
and
pop
jb
dec
jae
out
hlt
std
loope
cmp
mov
or
cs
push
jbe
insb
adc
or
pop
adc
out
loope
fidivrl
sub
je
jge
mov
lea
das
mov
movsb
cmpsb
sub
mov
imul
lret
pop
lahf
arpl
pop
loop
test
cmp
clc
loope
sarb
test
mov
add
mov
iret
rolb
in
repz
xchg
rcll
roll
pop
mov
sub
jne
mov
rcl
andb
enter
loopne
or
mov
mov
cmp
dec
inc
popa
cmpsb
jno
int
outsl
mov
dec
in
lahf
js
jge
insb
xor
test
cld
mov
call
jno
imul
pop
jecxz
mov
int3
xchg
pop
dec
fucom
sbb
shl
add
test
adc
jns
xor
lret
sub
or
jl
insl
and
jns
adc
cmc
shlb
jno
dec
rcll
shll
repnz
cwtl
movsl
xor
insb
stos
cmp
mov
add
mov
dec
movsb
adc
incb
jmp
xchg
outsl
mov
inc
push
imul
aas
fsubs
hlt
or
jbe
ja
insl
sub
stc
mov
dec
push
mov
pop
movsl
xchg
dec
into
out
je
ss
hlt
aam
stc
pop
xorl
lea
mov
fmulp
daa
pop
ja
sti
adc
dec
push
arpl
imul
lret
je
imul
sti
imulb
in
xchg
adc
sub
fstpl
mov
mov
jae
xchg
shl
mov
stos
push
xorl
cmp
filds
mov
scas
xchg
je
or
into
pop
inc
dec
out
shll
xchg
jmp
cmc
pop
scas
push
clc
mov
std
das
sti
lcall
lea
shrb
ret
jg
xchg
in
mov
inc
aam
popa
into
inc
fists
lea
sbb
inc
xchg
and
cltd
cmp
xchg
lea
cmp
jae
mov
push
ds
aaa
jnp
popf
dec
leave
out
loope
lret
and
incb
sbb
es
add
stos
and
outsl
xchg
cmpsl
pcmpgtd
lcall
sbb
in
jecxz
xlat
dec
xchg
mov
sbb
add
push
adcl
push
fimull
dec
push
arpl
mov
orb
or
or
ret
loope
mov
dec
jne
mov
and
test
sub
hlt
and
mov
insl
xor
aas
lods
and
and
stc
mov
xchg
jne
adc
mov
sbb
sti
add
inc
jmp
loope
mov
pop
enter
push
adc
xchg
mov
inc
xchg
cmp
dec
bound
popf
cli
push
sub
out
js
inc
movsl
xchg
push
test
call
add
insl
add
out
sub
popa
and
leave
jle
imul
fldl
outsl
in
mov
pop
jmp
lea
add
scas
pop
loope
jmp
push
adc
cmp
mov
add
pop
dec
pop
jmp
in
push
ljmp
pop
sbb
aad
inc
mov
mov
loope
cmp
int3
inc
inc
imul
std
fstpl
in
jp
stc
adc
fs
mov
adc
xchg
out
rorl
das
movlps
mov
dec
pop
dec
out
lods
adc
push
push
icebp
lock
mov
pop
test
push
hlt
sub
pusha
testb
mov
popa
sbb
inc
pop
ja
nop
adc
insl
adc
iret
lods
inc
enter
das
lea
lret
push
test
pop
dec
cwtl
push
cli
cmp
lods
xor
sahf
adc
mov
sbb
test
insl
push
xchg
push
cmp
mov
ret
sbb
test
lcall
shl
cmp
or
dec
add
pop
and
xlat
cli
xchg
pop
mov
pop
jb
test
or
push
sbbb
imul
sub
shr
mov
push
fbld
xchg
loop
pusha
xchg
cmp
addl
inc
cmp
fcmove
cmp
dec
repz
sbb
dec
insb
cmp
pushl
mov
ss
add
fs
enter
jp
add
xorl
pop
push
lock
dec
sbb
mov
rcll
jb
or
aas
mov
enter
inc
lods
push
fiadds
icebp
inc
test
je
mov
mov
lds
lcall
arpl
rolb
mov
out
out
xor
arpl
jbe
mov
call
popa
cltd
repnz
mov
pop
mov
push
popa
fcmovnbe
repnz
and
loop
adc
jae
sbb
sbb
fistpl
jecxz
push
mov
mov
cmp
sub
outsb
push
popf
xchg
mov
inc
mov
cmp
mov
test
jo
cmp
scas
out
popa
add
xor
bound
jp
cli
push
loop
outsb
daa
inc
push
inc
xor
idiv
fidivrl
add
mov
popa
mov
and
arpl
ffree
fs
aaa
into
or
pop
mov
sbb
fimull
dec
mov
cmp
mov
jecxz
pop
addl
cmp
mov
lods
out
sub
dec
xchg
sahf
sbb
cs
in
pop
pop
test
mov
jp
or
inc
push
sub
inc
inc
xchg
rorb
push
out
fisubl
adc
add
fadd
mov
sub
sub
mov
fisttps
lock
mov
pop
cmp
roll
int
clc
or
fists
pop
cmp
mov
jae
sub
jb
test
bound
cmpsl
sbb
cmp
add
aaa
add
les
insb
lahf
and
fsubrs
xchg
dec
inc
inc
fimull
jae
and
pop
lret
dec
mov
jmp
daa
push
icebp
pop
add
mov
pop
inc
cmp
fsub
es
or
push
int
aas
dec
cmp
sub
pop
jne
xor
std
xor
xor
add
xlat
mov
sti
daa
xor
xchg
outsl
sahf
movsl
mov
mov
mov
jbe
les
jnp
pop
data16
pop
fistl
loopne
inc
inc
push
xchg
add
lods
addr16
aas
jge
mov
sbb
jg
cli
inc
cmpsb
mov
cmp
mov
rcrb
adc
cmc
in
in
mov
loop
mov
mov
mov
adc
dec
stos
push
rcll
enter
fwait
adc
je
ja
jns
sbb
dec
mov
inc
imul
imul
xor
add
sbb
shlb
xchg
mov
addr16
pop
stos
xchg
pusha
adc
mov
sbb
inc
jg
pop
addr16
push
add
add
xchg
cmc
adc
jbe
addr16
dec
test
dec
sbb
adc
mov
jp
xchg
and
loope
xchg
jns
mov
sub
and
mov
movups
mov
xlat
cmp
aas
inc
mov
mov
aam
sbbl
ss
in
rcrl
jnp
inc
xchg
jp
sub
rorb
pushf
jns
pop
jmp
pop
adc
jno
fistpl
sar
push
icebp
cwtl
loop
dec
xchg
int
jecxz
push
aam
xchg
cmpsl
gs
push
lret
add
xchg
je
sub
adc
xchg
ljmp
xchg
gs
test
int
clc
rcrb
jo
xchg
fldt
ret
mov
lds
ret
fs
js
mov
sti
push
out
cmp
fcmovnbe
and
and
lods
mov
dec
es
pop
sbb
mov
inc
adc
mov
inc
out
adc
or
and
add
ja
pop
mov
push
mov
mov
mov
pop
ja
rorl
jb
inc
sbb
loopne
sbb
push
mov
ja
inc
pop
arpl
cmp
addr16
push
xor
shlb
test
jl
sub
lds
push
movsl
add
test
xchg
int3
mov
jge
push
idivl
or
lods
int3
into
cmp
fisubs
not
mov
in
pop
enter
adcb
adc
lret
mov
lds
addb
testl
dec
stos
fstpl
lret
push
adc
mov
aaa
sarb
or
ret
cmp
pop
dec
dec
pop
sbb
loope
xchg
test
pop
das
add
divb
mov
fstpt
int3
push
arpl
int
cmpsb
xor
out
or
mov
add
imul
les
dec
inc
and
hlt
sbb
sub
dec
mov
inc
stos
adc
fbstp
lds
push
cmp
xchg
dec
xor
jge
dec
imul
ja
enter
and
cmp
push
shll
insb
jne
add
mov
pop
test
xor
cmp
push
test
js
or
and
dec
mov
mov
cltd
push
in
scas
sti
cmp
inc
or
fists
inc
out
mov
lcall
int
jo
jmp
pop
push
popa
shl
int
xchg
and
sub
push
pushf
sbb
outsl
sti
popf
dec
dec
or
fldl
dec
stos
mov
mov
mov
cmp
xor
xor
cwtl
bound
lret
or
loope
xchg
mov
rcr
xchg
xor
and
mov
aam
clc
mov
pop
inc
or
outsl
xchg
repnz
popf
jns
add
lock
pop
stos
out
pop
fdivs
pop
jmp
fimull
incl
or
nop
pop
push
push
js
cld
ljmp
cmp
fisubl
mov
cltd
pop
out
xor
push
orl
inc
and
fdiv
lods
pop
loope
lahf
test
pop
or
lret
push
fdivs
mov
dec
sub
popa
mov
in
inc
and
add
jnp
jbe
push
xchg
xchg
divl
insl
sbb
or
xchg
inc
add
je
inc
cli
ja
xlat
dec
adc
dec
aas
movsl
jns
cmc
lock
add
icebp
cld
fcoml
stc
mov
leave
je
dec
dec
sbb
fistpl
imul
sub
push
arpl
loope
sbb
in
jns
sbb
mov
and
icebp
sbb
sbb
and
icebp
fildll
scas
inc
pop
push
or
xlat
xchg
jmp
push
add
inc
adc
scas
mov
push
push
orl
push
mov
repnz
fldl
test
scas
aaa
xor
fwait
add
mov
xchg
inc
in
out
mov
insb
jne
xchg
mov
dec
es
shll
cmpl
or
lock
jne
mov
pop
sbb
dec
in
jge
pushf
xchg
iret
addr16
xchg
sub
pop
lahf
sbb
pop
clc
and
jb
shll
xor
sarl
fdivrs
cmp
gs
sbb
mov
insl
lcall
mov
pop
jnp
outsl
add
xchg
push
or
outsb
mov
enter
fldenv
stos
cmp
loop
dec
decl
aas
or
fwait
push
movsb
pusha
jmp
bound
xchg
push
in
jb
adc
xchg
andb
adc
pop
les
arpl
fcompl
sahf
addl
clc
pushf
xchg
mov
mov
lods
scas
add
mov
mov
xor
adc
push
leave
sbb
or
pop
enter
jl
push
imull
jle
stc
das
sti
cltd
add
cmp
pop
inc
imul
dec
rcr
scas
mov
add
and
hlt
mov
mov
lret
int3
leave
xor
repnz
int
nop
mov
stos
adc
jo
orl
or
and
ficomps
pop
sub
inc
dec
and
pop
cmp
xabort
jl
lods
add
cmp
loope
mov
leave
sub
das
push
fadds
loope
inc
sti
mov
in
push
addr16
mov
push
xchg
push
push
xchg
dec
mov
ja
mov
addr16
sub
sub
rorl
pop
cwtl
ds
rcll
mov
jp
cmp
jg
sarb
mov
pop
push
push
stos
mov
stos
pop
adc
add
adc
movsl
jb
cmpsb
push
popa
jmp
out
jge
icebp
adc
mov
add
mov
pushl
mov
adc
movsb
xchg
fsubs
and
push
mov
cmpsb
cmp
aad
repz
mov
movsl
imul
daa
je
pop
xchg
add
nop
shll
js
push
or
cmp
bnd
mov
jne
push
jo
es
hlt
cmp
add
jae
ljmp
dec
add
ljmp
loope
or
loop
out
mov
xor
mov
cltd
jnp
push
imul
fildll
xor
sbb
sbb
int
enter
inc
mov
sub
xor
mov
jp
andl
jp
fsts
sti
nop
dec
inc
dec
out
sarl
outsl
dec
adc
shlb
iret
push
popa
std
mov
xchg
ljmp
sub
or
rclb
and
jg
in
test
iret
sub
into
int3
inc
in
adc
nop
inc
js
cmp
mov
cs
dec
cmp
xorb
and
dec
add
fnsave
xor
sub
xchg
mov
push
insb
out
sub
push
and
jns
or
cmc
fsts
pushf
inc
and
sub
push
das
sub
repz
hlt
jg
pop
mov
stos
ljmp
push
xchg
pop
push
mov
dec
jp
fs
lret
dec
cmc
jno
push
stos
inc
mov
push
mov
dec
push
adc
dec
cmp
data16
dec
jo
inc
rolb
scas
or
stos
pop
fnstcw
fwait
mov
ret
es
push
imul
cld
cmp
into
jae
mov
xchg
into
add
mov
mov
xor
in
dec
out
sub
call
sbb
and
ret
stos
daa
je
pop
xor
cltd
push
shlb
aas
out
adc
mov
xor
into
in
sbb
je
jno
orb
fldt
pop
pop
adc
ret
pop
int
addr16
imul
in
xor
mov
ret
or
dec
cmp
mov
jb
cmpl
cld
push
or
adc
add
outsl
pop
inc
fadd
lods
rcll
lcall
push
pusha
inc
push
or
call
dec
lds
pop
jmp
fildll
xchg
call
inc
sub
in
pop
jbe
push
lea
mov
dec
and
bound
loope
add
or
mov
push
lret
xchg
out
add
rdmsr
jne
sub
pop
cmpsb
in
mov
dec
sbb
movsl
stos
aaa
rorb
cmpl
pushf
lds
add
popf
movsb
rcrl
int
xlat
push
or
lret
imul
add
dec
int3
jo
popa
add
push
xor
sub
rcrb
xor
in
insl
push
dec
add
decl
in
mov
fidivl
pop
sub
xor
movsb
and
aaa
mov
js
sbb
in
mov
mov
rclb
pop
jecxz
cli
pop
mov
sti
jne
lods
cmpb
test
dec
rcr
mov
xchg
clc
ret
cwtl
sti
xchg
sbb
mov
mov
pop
scas
mov
jbe
jnp
cmp
mov
jl
icebp
inc
jns
mov
shrl
sub
or
pop
lahf
push
mov
xor
jb
movsb
add
mov
inc
cmp
sub
pop
push
jno
jb
sbb
bound
and
test
das
ret
mov
in
jbe
inc
imul
stos
call
sbb
inc
sbb
sub
hlt
pop
cmp
lcall
std
test
jnp
xor
xchg
jp
push
sbb
pop
fcmovbe
out
rcrb
filds
inc
ret
jmp
test
test
xchg
and
imul
adc
pusha
leave
dec
inc
shlb
cmc
add
cmp
jnp
mov
xor
pop
outsb
iret
mov
das
xor
int3
push
lods
leave
stc
leave
lea
add
mov
or
pushf
cld
andl
jne
push
testb
jecxz
test
enter
imul
out
imul
xor
mov
push
sti
lret
adc
dec
clc
jg
ljmp
test
pusha
xor
inc
mov
das
push
sub
test
and
or
out
push
sub
dec
cmpsb
mov
add
cmc
inc
test
mov
call
clts
lock
lock
jge
imul
int
mov
bound
pop
repz
out
mov
ret
dec
inc
mov
mov
test
mov
mov
inc
and
jle
insb
xorl
arpl
leave
push
inc
sahf
add
das
sub
les
and
gs
and
jp
lcall
push
test
and
test
push
jo
xor
pop
aas
cmp
sub
jmp
dec
stos
fsub
loop
dec
jle
pop
stos
lcall
pop
sahf
pop
or
mov
stos
adc
sub
cltd
outsb
mov
mov
and
mov
mov
push
jae
cmp
out
loop
jp
xor
inc
fidivs
dec
mov
inc
cmp
dec
sub
inc
ret
sub
lods
bound
push
cmp
mov
jbe
in
xlat
orl
adc
xor
test
cmp
rorb
pop
ret
repnz
and
mov
enter
shrb
lahf
lret
rorl
push
orl
out
mov
xor
cli
jecxz
shl
and
sub
inc
out
xchg
fcoms
push
fstps
bound
in
cmpsb
loopne
xchg
aaa
fst
lock
movsl
push
scas
jecxz
dec
jmp
xlat
mov
aam
push
jg
mov
dec
sub
pop
adc
sbb
sub
out
add
push
movsl
push
mov
jae
aaa
sbb
mov
aad
rorl
icebp
rcr
mov
add
ret
push
or
inc
flds
ds
xchg
sbbl
aam
xor
out
in
add
loopne
test
sbb
int3
cwtl
sbb
mov
movsl
xchg
in
or
subl
xchg
pop
insb
data16
sub
lock
dec
rolb
scas
int3
sub
jbe
call
arpl
xchg
ja
out
outsb
xchg
push
insl
inc
dec
jne
mov
pop
jp
cmp
daa
insb
cltd
mov
xchg
mov
mov
nop
add
loopne
sbb
mov
or
mov
jecxz
xchg
mov
push
cmp
inc
sbb
jg
dec
cmp
xorl
adc
cmp
cmpsl
pop
iret
jge
mov
mov
out
sub
adc
out
fsts
xor
sbb
das
fsts
ret
sbb
call
dec
scas
cmp
add
inc
xchg
pushl
adc
dec
cli
xor
pop
pop
mov
enter
add
push
es
jp
xchg
lods
cli
pushf
lods
mov
leave
push
sti
xchg
ljmp
neg
popa
and
mov
fistl
ficoml
movsl
xor
out
addr16
jmp
and
inc
dec
mov
dec
cmp
notb
mov
inc
lock
add
dec
jmp
pushl
pop
insl
arpl
mov
sbb
pop
adc
adc
fdivl
mov
das
call
add
imulb
subl
gs
into
adc
mov
jmp
pop
push
dec
dec
and
push
push
div
cltd
out
pop
out
or
jnp
mov
jl
pop
divb
clc
push
dec
push
cli
pusha
ljmp
push
push
add
pop
call
in
jecxz
adc
pop
mov
hlt
js
sbb
xor
stos
mov
in
push
sbb
mov
xor
enter
cmpsl
pop
subl
dec
and
pop
pushf
fs
adcb
adc
or
or
sub
dec
xor
loope
jp
leave
sub
mov
nop
sub
ret
jle
xchg
hlt
loop
inc
rclb
mov
data16
aam
push
insl
loopne
xor
outsl
pop
pop
std
lret
stos
cwtl
repz
test
clc
jns
hlt
imull
aas
sar
scas
loope
shrb
mull
mov
cmc
fildll
push
mov
scas
add
cld
sub
sub
daa
cmp
repz
adc
xchg
and
mov
ljmp
or
insb
aam
xchg
aaa
xor
xor
clc
and
or
rcl
nop
movsb
adc
xor
mov
or
jmp
out
jnp
mov
xchg
insb
xchg
jp
xor
shrl
mov
jo
sbb
loop
jne
int3
pop
lea
ret
mov
popa
cwtl
inc
insl
push
mov
int
or
test
ja
jg
lods
add
jb
ds
push
in
xchg
mov
dec
add
repz
bound
arpl
lds
push
fwait
aam
pusha
inc
adc
subl
push
pop
add
mov
mov
adc
movsb
hlt
jnp
ret
xor
push
push
or
lahf
jge
push
push
repz
mov
xlat
mov
sub
push
fisubl
pop
pop
inc
xchg
mov
jbe
dec
jae
sbb
cltd
iret
push
cmp
xchg
mov
repz
std
pop
mov
jg
mov
inc
sbb
sbb
call
arpl
aaa
dec
shll
dec
sbb
xchg
pop
pop
xchg
add
hlt
pop
insl
test
push
scas
fstpl
push
arpl
subl
cmpsb
cmp
sahf
pop
stc
in
fstpt
mov
out
xchg
mov
es
sub
push
push
xchg
push
lret
imul
or
add
insb
pusha
ljmp
sub
sbb
subl
adcb
fdiv
in
xchg
pop
push
sbb
mov
pshufw
pop
in
pusha
jmp
inc
add
andb
movsl
in
int3
cmp
adc
fdivrs
pop
in
dec
lret
adc
adc
cld
imul
jae
bound
cltd
out
out
or
push
out
pusha
adc
xor
fsubs
aaa
inc
jmp
aad
push
jb
jb
fistpl
cli
cwtl
add
sub
mov
lret
adc
rcrb
test
ljmp
push
ret
mov
mov
jo
xchg
movsl
mov
out
mov
mov
negl
sahf
sub
les
out
ljmp
ss
mov
cmp
lcall
jg
pop
push
mov
inc
fistpl
dec
stos
sbb
cmpsb
inc
pusha
pusha
out
or
cmc
bound
jl
in
sbb
pop
xchg
in
push
rep
ss
push
push
loopne
test
pushf
or
sbb
adc
adc
stc
sbbb
jne
aam
hlt
sarb
call
ja
aad
pop
pop
fdivl
jle
pop
inc
sahf
mov
mov
clc
addb
nop
aam
adc
jnp
movl
dec
xlat
mov
mov
popa
stos
in
lret
sbb
sahf
adc
mov
sbb
aaa
in
mov
dec
outsl
and
pop
jp
fisubrs
inc
fs
scas
cmpps
pushf
or
add
sub
cmp
sbbl
scas
mov
fnstsw
shll
jl
sub
shrl
dec
mov
xchg
icebp
add
std
dec
mov
or
add
or
mov
or
sbb
mov
jle
lods
push
inc
adc
pop
notl
xor
mov
lods
inc
inc
stos
add
fldl
inc
es
adc
stos
nop
sub
mov
aad
or
xlat
outsb
repnz
mov
pop
mov
sub
adcl
xchg
xor
sbb
mov
cwtl
mov
jmp
adc
inc
mov
mov
sub
fistps
pop
into
cmp
xchg
iret
xor
mov
push
cmp
hlt
enter
and
inc
fidivrl
add
adc
inc
pop
mov
or
xor
jo
cmp
out
ja
subl
aas
subl
cmp
jo
adc
pop
cltd
sub
inc
cs
cmp
xchg
cmp
xlat
call
xor
xchg
sub
jo
leave
shll
movsl
pushf
inc
lret
push
inc
sub
test
dec
pop
jg
cmp
pop
idivl
sbbb
sbb
subl
dec
pop
cs
rol
adc
lret
mov
and
popf
mov
xlat
orb
jl
test
leave
dec
cmp
ffreep
mov
test
xor
sahf
aas
jecxz
filds
out
aas
fcomp
dec
js
es
push
push
mov
mov
xor
pusha
lods
ret
sahf
mov
or
jl
sahf
addb
in
mov
leave
dec
push
test
stc
cmp
adc
mov
push
mov
cmpsb
int
les
cmpsb
inc
in
xchg
out
scas
aad
lea
push
or
pop
fbstp
mulb
clc
pop
js
xor
pop
xchg
dec
jbe
leave
pop
hlt
sub
popf
insl
mov
sahf
cs
lods
pusha
adc
mov
out
push
in
and
cld
outsb
leave
mov
les
jle
pop
pop
leave
or
sbb
arpl
shlb
xchg
push
jmp
iret
movsl
sub
test
cmp
mov
call
adcb
inc
out
popf
faddl
and
pop
push
ja
xorl
xchg
int3
cmpsl
jl
fwait
into
in
loop
mov
dec
mov
sub
pop
mov
xlat
popf
inc
addr16
fs
rorb
in
insl
popa
cmpl
mov
xor
int
dec
sbb
imul
lret
inc
pop
or
cmpsl
mov
pop
dec
jno
aam
and
xorb
xor
jl
adc
sub
fidivl
lods
insl
push
mov
loope
push
push
push
iret
movsb
popa
sub
and
mov
xchg
cmpsl
sbbb
inc
je
addr16
mov
sbb
mov
mov
and
and
mov
aad
shll
and
popa
outsb
jns
shr
scas
popf
nop
scas
imul
dec
shlb
cltd
mov
ds
pushf
jne
repz
or
inc
jno
xchg
dec
outsb
xchg
dec
and
jl,pn
rclb
pop
daa
adc
repz
in
sub
or
ret
jge
ja
push
inc
dec
arpl
test
push
bound
out
sbb
bound
fs
clc
ds
enter
mov
adc
cmp
sbb
pop
push
jge
daa
mov
cmp
mov
fdivrs
mov
inc
outsl
sti
jae
inc
fldcw
leave
mov
fs
mov
jg
push
movsb
ss
mov
inc
sub
mov
aam
sub
xchg
mov
jno
negl
xor
iret
std
jmp
test
jne
icebp
lods
aaa
xlat
inc
ret
out
imul
jge
adc
xchg
jo
cmp
stos
pusha
fiaddl
push
xor
push
mov
xchg
or
adc
fwait
icebp
aam
and
in
repnz
push
shlb
call
in
dec
ret
insl
lods
outsb
mov
add
cmp
ret
pop
fcoms
popf
fcmovbe
movsb
stc
out
cmp
fmull
iret
sbb
stos
push
cmpsb
pusha
adc
movsb
ss
in
or
orl
sarl
mov
ja
out
mov
and
sub
adc
or
or
test
dec
shrb
mov
cmp
pop
cmp
pop
addl
dec
lods
out
dec
pop
mov
or
arpl
fwait
jns
pusha
ss
cmp
int
daa
jmp
sub
ret
mov
movsl
jle
icebp
movsl
fucomip
lret
jecxz
jae
and
xchg
mov
ret
or
inc
xchg
dec
mov
into
test
mov
pushf
jecxz
adc
or
xorl
popf
dec
cwtl
mov
int3
push
jb
jge
je
ret
aad
push
inc
xor
inc
dec
dec
mov
mov
movsl
fisttpl
ret
lods
push
pop
outsl
lods
dec
hlt
idivb
imul
js
ljmp
or
mov
pop
test
pushf
inc
ds
pop
mov
adc
les
loope
loopne
cmp
cmp
aas
mov
cmp
pop
fmul
fs
sbb
adc
cmp
inc
test
pop
aad
pop
call
lahf
pushl
ja
mov
clc
sub
out
pop
out
xchg
test
mov
scas
aas
add
mov
std
cmp
sub
xchg
jno
lods
loop
mov
fisubrs
xchg
daa
cltd
sbb
imul
in
mov
push
cmp
loop
or
inc
mov
dec
les
cmpsl
push
mov
popa
imul
addb
orl
mov
sbb
jl
adcl
cld
lods
xchg
les
push
inc
ljmp
outsl
jnp
xorb
sub
imul
ja
and
xchg
or
loopne
iret
arpl
int3
sbb
bound
mov
sub
and
push
in
insb
jns
cmpsb
xchg
les
cmp
dec
sub
cmp
jp
adc
jns
rcl
mov
mov
imul
loopne
mov
jle
lcall
pop
std
cmpsb
mov
clc
aad
out
xor
inc
lods
pop
push
inc
sbb
mov
scas
ja
icebp
fld
push
stos
xor
call
mov
jns
pushf
stc
in
in
push
sub
mov
sbb
add
popf
jle
push
fdivrl
sahf
mov
test
dec
lret
push
push
and
movsl
sbb
mov
sbbl
call
add
mov
insb
mov
jp
out
and
mov
movsb
scas
fs
mov
xchg
fs
cmc
inc
add
xor
lret
or
inc
dec
inc
or
or
and
shlb
adc
push
adc
lahf
lods
cmp
loopne
and
xchg
push
lods
stc
incl
mov
repz
ds
or
fwait
jl
in
xchg
daa
test
in
sbb
gs
icebp
sbbb
callw
mov
lea
cmp
loop
shr
and
inc
insb
mov
lock
cld
xchg
lock
adc
xchg
cmp
push
push
ffreep
inc
fisttpl
test
sbb
aam
sbb
push
jmp
push
jo
mov
push
leave
or
xor
jge
aam
cwtl
loopne
aas
adc
out
repnz
mov
loop
outsb
xchg
xrelease
pusha
in
inc
jbe
lods
mov
push
int
jl
adc
push
sti
pop
add
dec
or
bound
call
sub
test
jge
or
mov
pop
loopne
mov
mov
rcrb
fdivs
lcall
cmp
mov
pop
jnp
xlat
fsubp
cmpsl
test
xor
jo
mov
mov
fwait
scas
js
add
repnz
repnz
dec
rorl
pop
xor
test
pop
scas
mov
push
mov
subl
sub
outsb
punpcklwd
dec
sub
cli
dec
pop
in
and
jno
in
loop
outsl
mov
mov
jmp
mov
loope
cmp
xchg
cmp
stos
cmc
inc
scas
mov
mov
sub
call
daa
sbb
aam
ds
inc
cmp
scas
das
pop
orl
xchg
notl
hlt
jle
or
mov
push
out
add
sahf
push
sbbb
aas
inc
gs
cmpsl
aam
jno
mov
push
jg
jbe
das
bound
xor
mov
outsb
loope
and
cltd
or
dec
je
mov
jnp
dec
repnz
mov
cmp
rclb
sahf
scas
or
lea
pop
inc
in
out
and
and
imul
push
xchg
xchg
pop
jle
mov
scas
add
mov
xchg
or
push
data16
add
enter
mov
inc
or
and
scas
imul
daa
xor
lock
inc
addr16
sbbb
or
fisttpll
mov
add
xor
arpl
pop
mov
xchg
push
fstpl
mov
outsb
aaa
popa
inc
sbb
and
fisttps
add
sbbl
das
rol
outsb
mov
les
sbb
inc
hlt
das
xchg
mov
inc
pop
jb
pop
arpl
xchg
mov
clc
sahf
sub
mov
aaa
adc
subb
jnp
outsb
push
sbb
dec
sub
push
scas
xor
jbe
sarb
aas
ret
pop
out
or
pop
sub
and
mov
jg
jecxz
jg
bound
push
test
and
into
mov
fisubrs
rol
mov
xchg
aas
cmp
add
sahf
nop
adc
sub
dec
pop
mov
push
repnz
inc
repz
outsb
cwtl
lcall
and
rolb
jne
jne
iret
arpl
faddp
in
rolb
das
adcl
jne
cmp
mov
rcrb
stos
xchg
imul
cltd
cmpsb
fwait
push
pop
cli
clc
jns
jo
push
fcmovbe
push
cwtl
mov
lret
ret
inc
ja
jae
push
jp
out
mov
js
bound
hlt
mov
pop
ss
jmp
and
sub
adc
mov
push
and
lock
pop
jmp
adc
sti
push
dec
mov
hlt
jg
in
mov
mov
xor
lea
add
mov
sub
daa
add
lock
in
jge
mov
ljmp
ljmp
mov
push
inc
iret
add
popa
cmp
in
es
mov
pop
stos
mov
adc
pop
inc
add
sbb
push
fidivl
lds
aas
xor
jp
fdivr
mov
cmpsl
addl
pushf
outsl
pop
inc
lds
int3
jp
jo
fmuls
cmp
cmp
cmp
sub
roll
pop
mov
dec
xchg
adc
aam
cmpsl
insl
int3
lods
rcrb
xchg
dec
pop
dec
scas
and
subps
push
popa
int3
sub
loope
fs
xchg
imul
push
aad
mov
or
jo
xchg
aaa
sti
lods
inc
adc
mov
push
xor
add
adc
jno
pop
add
add
jnp
jae
push
lods
aas
cmp
pushf
out
push
and
or
add
idivb
ret
outsl
sbb
out
sub
adcl
mov
jno
lret
jg
nop
in
je
jmp
out
test
sahf
fnstenv
adc
mov
mov
hlt
cmp
test
mov
jmp
cmc
mov
lcall
mov
arpl
dec
loop
push
dec
jp
in
dec
mov
cmp
in
push
jmp
sub
pop
out
insb
in
popa
adc
es
test
sub
imul
push
xor
and
sub
fldcw
scas
imul
mov
mov
dec
push
insl
sbb
in
xor
das
mov
mov
test
dec
jl
aam
lcall
pop
pop
sub
in
aad
adc
add
ficompl
pop
mov
mov
xchg
loopw
cld
push
rcll
fisttps
pop
loop
sub
pop
daa
jnp
dec
dec
xchg
mov
inc
or
fstpl
sbb
mov
mov
cs
adc
mov
push
mov
out
mov
jl
test
in
das
or
mov
lods
movsl
sbb
jo
pop
lods
ljmp
add
mov
unpckhps
gs
mov
xchg
insl
and
bound
out
mov
rol
lods
push
or
outsb
add
mov
or
les
fdivrs
dec
xchg
fildl
loope
mov
inc
dec
xor
push
adc
dec
gs
fiadds
jmp
jnp
cmp
repz
pusha
imul
loopne
dec
add
filds
xorb
push
jl
icebp
out
in
adc
or
adc
or
mov
sub
nop
dec
into
xchg
lahf
pop
sahf
adcb
fsubl
cld
push
jae
ficompl
lret
fcmovne
test
cli
mov
ret
frndint
push
aam
push
xor
mov
enter
repnz
sub
lea
ljmp
aas
cmpsb
add
cld
cli
call
or
adc
test
mov
adc
jne
fcompl
mov
sub
jecxz
cmp
lods
or
adc
cltd
pop
xchg
add
dec
insl
lods
xchg
fs
cld
and
test
sbb
fisttpll
aam
sbb
in
popf
xchg
jecxz
loopne
gs
mov
ss
lcall
sub
push
push
push
dec
out
and
mov
insl
xlat
add
sbb
push
push
mov
mov
xchg
bound
adc
and
mov
mov
xchg
call
imul
out
rolb
ljmp
std
mov
xor
cwtl
aas
xchg
shrb
data16
sub
pop
inc
mov
rolb
imul
into
je
and
push
sahf
dec
push
sub
xor
ret
inc
cmp
xchg
ret
nop
imul
es
sub
cmp
add
into
aam
jmp
mulb
pop
fidivl
cwtl
mov
sbb
dec
les
xchg
daa
call
xor
faddl
mov
addr16
pop
pushf
xor
mov
push
shrl
out
push
or
pop
push
out
pop
push
bnd
add
cmp
pusha
in
and
mov
outsl
int
lock
adcb
incb
dec
inc
add
mov
addl
jl
mov
loope
stos
dec
jmp
sub
shlb
fnstsw
loop
or
mov
cmpsl
in
dec
mov
rorl
std
sar
sbb
pusha
repz
int
lahf
outsb
cmp
inc
and
push
inc
jb
or
test
addr16
sub
push
bound
or
lcall
pop
into
gs
or
imul
jecxz
test
mov
out
daa
scas
call
shrb
cli
roll
aam
out
movsb
movsl
in
sub
imul
xor
test
pusha
cmpsl
dec
mov
fwait
notb
sub
sahf
aam
pop
cs
push
xchg
popf
sbb
cmp
xor
dec
lea
xor
jnp
pop
fildl
insb
adc
insl
lcall
pop
mov
sub
or
or
sbb
pushf
sbb
or
je
movsl
fcmovnbe
add
loope
cmpsb
fadds
leave
inc
dec
or
in
sub
xchg
add
mov
mov
invd
idivb
mov
xlat
xchg
cli
cld
call
pop
jb
icebp
pop
scas
pop
in
ja
arpl
xor
inc
pop
jle
sti
test
out
aaa
inc
rcll
or
sbb
mov
or
int3
pop
out
hlt
pushf
jecxz
and
push
sub
push
cmp
sub
pop
sbb
fistps
push
data16
pusha
or
sbb
mov
mov
jae
mov
pop
lahf
shrb
xchg
shlb
adc
cmp
pop
into
loopne
aad
lds
sub
test
scas
cld
stc
scas
adc
cmpsl
jne
or
jmp
aaa
lea
xor
mov
fiadds
pop
pop
push
outsb
fwait
pop
loope
or
and
clc
dec
xor
std
pop
fcomps
mov
data16
cld
aaa
outsb
adcl
inc
iret
push
aad
sub
inc
sub
aam
loop
dec
mov
cmp
test
dec
ja
sub
mov
daa
stos
lcall
mov
test
sub
flds
loopne
dec
xor
adc
es
addr16
add
test
cwtl
fidivs
adc
js
inc
hlt
pusha
ds
xchg
je
pop
pop
lret
mov
fldt
sbb
jbe
fldcw
jmp
push
pop
xchg
and
adc
xchg
bound
or
ficompl
rol
int3
push
mov
sbb
push
xchg
cltd
das
cmpsb
pop
insb
dec
lods
fs
adc
mov
mov
mov
cmp
adc
sub
mov
pop
lret
xchg
cmp
cmc
push
add
stos
adc
scas
loopne
and
in
push
pop
jmp
jno
mov
mov
mov
mov
aas
lds
outsl
in
lret
xchg
xlat
lods
xchg
pop
test
or
cmp
pop
ss
rclb
lret
gs
insl
cmp
add
sar
mov
or
in
scas
fs
sahf
cltd
pop
sbb
cmpsb
fildll
jl
mov
dec
mov
decb
aas
inc
jno
sub
push
in
mov
orl
sub
gs
sbb
fxch
pop
in
mov
inc
xchg
test
xchg
push
cmp
add
xlat
jo
push
pusha
mov
test
xor
mov
sub
sub
push
pop
lret
add
cmp
das
cmp
test
sti
and
pop
inc
push
push
mov
or
xor
cmpsb
adc
xchg
repz
add
xchg
mov
xchg
cmc
hlt
data16
dec
out
push
mov
ja
popf
ret
pusha
insl
mov
cmpsl
push
test
daa
pop
gs
sti
stos
pop
lock
daa
xchg
in
push
mov
cwtl
and
adc
jge
loope
fadds
scas
dec
lods
cltd
pop
and
push
sbb
inc
dec
adc
imul
gs
and
out
mov
lods
pusha
fsubl
iret
cmp
insb
and
inc
ficoml
lds
adc
jne
pushf
sti
ss
inc
push
icebp
int3
scas
mulb
fdivrl
push
jle
jmp
push
cmp
lock
xor
mov
les
xor
adc
dec
inc
cmp
cmp
cmpsb
test
jb
popf
dec
leave
cmp
jno
mov
mov
adc
xchg
fldl2t
fcompl
push
jnp
mov
orl
movsb
aad
das
jmp
cwtl
fisttpl
fsubrp
outsb
cwtl
lods
jmp
ret
and
xchg
ljmp
or
rcl
inc
jecxz
add
cmp
gs
jg
out
data16
movsl
xchg
push
mov
jb
in
call
lock
add
dec
pop
outsb
lcall
into
adc
xor
xchg
out
test
ret
popa
mov
mov
lds
test
adc
jae
jecxz
jb
in
test
dec
lahf
and
xor
push
mov
call
repnz
out
sub
pop
mov
and
xor
add
push
idivb
testl
xchg
xchg
and
int
and
andl
dec
and
and
mov
inc
in
mov
dec
jne
pop
insb
xchg
jne
aas
test
cmpsl
push
scas
insb
adc
sahf
mov
xor
repz
jbe
ljmp
test
mov
nop
ja
shl
inc
xlat
xchg
push
and
sub
pop
stos
jns
mov
pushf
icebp
pop
fwait
jecxz
out
call
ljmp
popf
mov
cli
or
mov
or
push
inc
daa
mov
lds
mov
push
in
push
or
fbstp
in
in
mov
cmp
orb
lods
dec
std
mov
adc
shl
js
les
std
inc
adc
out
pop
pop
aas
push
arpl
fwait
adc
cld
jecxz
int3
data16
jl,pn
imul
mov
or
mov
testb
jg
imul
adc
sar
adc
mov
imul
pop
xorb
add
push
gs
mov
mov
js
xor
and
mov
sub
jae
and
test
jns
repz
fs
push
ljmp
sbb
stos
into
cmp
sub
mov
addl
inc
loope
sbb
rol
sbb
insl
popf
push
push
or
test
mov
adc
pusha
leave
addr16
aad
push
cmpsl
loopne
outsl
rcr
sub
sahf
push
dec
cmp
imul
and
fbstp
cli
mov
lods
dec
sub
xchg
mov
aaa
imul
scas
push
inc
or
movsl
imul
or
sbb
add
push
mov
stos
imulb
add
inc
bound
and
pop
repnz
int
outsl
insb
cmp
scas
push
mov
push
imul
dec
in
and
fistps
adc
lock
or
dec
mov
mov
pushf
lods
inc
mov
sbb
out
movsb
push
out
aas
mov
xor
xchg
jg
stos
inc
and
dec
repnz
mov
sub
je
xor
xchg
sbb
xlat
fiadds
iret
push
xchg
shll
mov
les
add
push
inc
mov
lret
mov
xchg
mov
outsl
or
xchg
sbb
arpl
and
jge
fisubs
jnp
cwtl
mov
lret
lret
iret
xchg
xchg
jle
xor
cmpsl
sti
test
sbb
or
fwait
enter
cmp
enter
ret
mov
popa
mov
arpl
and
fxch
das
insl
stc
lds
add
and
jmp
xchg
das
mov
cmpsl
icebp
sub
rcl
movsb
movsl
scas
add
mov
sub
cmp
cmpsb
sub
outsb
push
add
push
mov
pop
std
sub
jle
jge
mov
jl
mov
mov
pop
cmp
sti
lret
test
and
icebp
adc
aaa
jnp
cli
dec
jg
mov
lods
dec
into
aad
cwtl
mov
and
dec
jbe
mulb
add
xchg
scas
mov
rol
and
daa
cwtl
inc
lods
cmp
adc
mov
mov
xchg
lcall
pusha
sbbb
insl
jo
or
adc
and
xchg
dec
test
sub
xor
cmpsb
mov
cmp
mov
wbinvd
xor
test
out
mov
xchg
test
or
sub
cld
cld
xchg
xchg
fstl
mov
mov
lds
adc
fsubrp
jp
repz
xchg
mov
aad
push
jmp
push
xchg
jmp
les
mov
fcompp
popa
dec
jnp
mov
int
jo
ror
int
pop
fstpl
shrl
fs
loope
lea
lock
jne
int3
jl
mov
popl
out
and
mov
add
mov
xor
cmp
jns
enter
and
repz
rcrb
data16
xchg
jge
and
jb
mov
test
test
pop
or
scas
mov
icebp
clc
in
ss
cmp
pop
test
mov
push
sbb
popa
out
leave
loop
jl
in
and
mov
mov
daa
jmp
in
cmc
in
into
add
xlat
cs
inc
jl
fisttpll
outsl
xor
mov
orl
xchg
cld
jp
sbb
xchg
or
jp
das
push
rcr
scas
push
cmp
adc
test
lret
sub
push
push
mov
mov
loopne
repnz
shl
inc
mov
jp
xor
add
adc
test
das
enter
lahf
jae
ds
insb
loop
xor
add
adc
ds
loop
xor
push
xor
pop
sbb
push
je
mov
sarb
popf
cmp
sub
mov
mov
jnp
fwait
push
repz
inc
or
subl
imul
ret
pop
add
push
push
insb
xorb
int
add
icebp
call
dec
mov
dec
idivl
je
cmp
lock
xor
loop
xlat
jo
test
ja
int3
movsb
pop
je
fwait
mov
and
pop
imul
jge
mov
rcll
aad
or
fcompl
xchg
xor
lret
negb
lds
iret
and
arpl
aad
or
in
jge
add
hlt
xlat
ljmp
or
pop
push
call
or
iret
and
cmpsb
xchg
sub
sbb
shll
push
xchg
pop
sub
sub
test
sub
jp
cmp
loopne
xchg
mov
sbb
mov
sarb
xchg
push
shrl
pusha
lods
adc
enter
mov
cmp
dec
xlat
mov
jae
roll
das
mov
frstor
scas
lea
cwtl
pop
inc
mov
inc
icebp
aas
or
push
orl
rolb
pcmpeqd
mov
sahf
sbb
divl
ds
sqrtps
sti
icebp
aam
fistps
push
ret
xchg
pusha
das
sbb
dec
fdivrl
js
inc
mov
ss
jbe
arpl
sbb
inc
repnz
addb
std
lret
xor
adc
lret
test
bound
sbb
inc
sub
jae
cmp
pop
sbb
aad
jp
pop
es
push
aas
lea
xchg
xor
push
lods
std
add
mov
popa
imul
rcrl
adcl
stos
or
sbb
pusha
xchg
popa
add
orb
fdivrs
test
mov
sbb
inc
sub
inc
inc
inc
mov
aaa
out
je
jecxz
test
xchg
dec
cli
jl
rol
pop
adc
adc
dec
test
mov
mov
cs
nop
jmp
fimuls
imul
sbb
inc
lds
mov
xchg
nop
cmp
aaa
pop
repz
jg
cwtl
push
jecxz
popa
cli
daa
dec
fstpl
mov
jmp
jle
loopne
test
cwtl
push
loopne
sub
incl
fwait
cmp
jecxz
and
xor
dec
lahf
fisttpll
sbb
and
cltd
add
js
xorb
push
aad
inc
adc
lock
int3
popf
movsl
adc
dec
mov
pop
and
xchg
sub
inc
or
test
xorb
cmp
jns
ljmp
mov
outsb
jae
and
xor
fsubrs
repnz
or
test
in
or
fs
aaa
jmp
cli
sub
xchg
push
mov
lret
xor
xchg
lret
icebp
nop
xchg
or
gs
inc
xchg
pop
mov
popa
imul
jno
shll
out
xor
xorl
push
adcl
insb
push
cmp
fidivl
sbb
add
fwait
aaa
cld
loopne
or
cmp
push
out
lret
nop
cltd
inc
push
jg
aad
inc
jmp
xor
sbb
loop
jns
stc
mov
fidivl
mov
mov
xchg
daa
cmpsl
mov
cmp
cld
and
cli
lds
xor
sbb
test
push
inc
sarb
sbb
adc
lret
push
dec
ds
and
mov
mov
sarb
imul
in
xchg
aam
dec
mov
mov
popf
clc
or
or
xchg
dec
fs
and
mov
aam
imul
push
cwtl
cwtl
les
lret
adc
adc
sub
fnstsw
pusha
jne
mov
movsl
jo
lret
xor
outsl
aam
aam
adc
sub
dec
lahf
test
addr16
cmp
das
outsl
shrb
jo
lds
adc
outsb
aaa
scas
cmp
mov
popf
push
fwait
arpl
dec
and
inc
into
mov
nop
cmp
add
dec
xchg
pop
add
jne
adcl
inc
mov
dec
gs
test
outsl
int3
lret
into
enter
mov
cmp
mov
loopne
jecxz
and
sub
test
lock
fimuls
stos
adc
cmpsl
sahf
andl
jb
repnz
inc
scas
test
dec
mov
lock
adc
mov
inc
lcall
and
call
xchg
addr16
inc
push
jmp
int
insl
icebp
mov
gs
adc
outsb
sbb
dec
mov
ds
mov
pop
push
fcmovu
mov
cmp
mov
inc
and
push
xor
jge
adc
mov
jmp
jno
xchg
jnp
fcoml
cld
add
cmpsb
jp
imul
into
bound
mov
call
adc
nop
sbb
insb
xchg
jns
shlb
dec
divps
cmpsl
and
inc
gs
les
mov
jecxz
in
addr16
rcr
cmp
push
sbb
jg
xor
push
pop
mov
cmp
cmp
rcr
jbe
ficomps
cmp
sbb
mov
xlat
push
mov
fwait
dec
popf
fwait
test
ret
inc
pop
daa
cmp
jg
fstpt
add
cmpsb
dec
icebp
ret
jo
icebp
orb
cmpsl
add
sub
sti
pop
aam
add
jl
stos
add
sub
lea
and
gs
pop
push
push
jnp
ret
ljmp
dec
mov
push
sti
nop
push
jb
loopne
adc
push
dec
int
xor
pop
repnz
mov
aaa
pop
push
cmc
and
jno
jae
push
mov
lock
and
adc
mov
imul
jp
dec
out
mov
cltd
pop
popa
mov
jp
iret
insb
push
mov
hlt
out
mov
pushf
loope
std
cmc
jae
jmp
adc
nop
lahf
faddp
popa
inc
mov
inc
pop
lcall
loopne
pop
out
dec
repz
pop
in
shll
add
or
outsl
shlb
pushl
cld
push
inc
sub
jno
std
test
mov
fwait
testb
int
out
jmp
sarb
jl
cmpsl
xchg
mov
jmp
repz
andb
pushf
xor
jae
psubb
pop
cs
fcmovu
pushf
mov
dec
lret
adc
push
xchg
int
in
mov
mov
int3
cwtl
leave
popf
adc
cmp
sahf
nop
mov
inc
das
stos
push
dec
xchg
aas
push
or
rcll
xchg
mov
inc
adc
mov
push
popf
imul
dec
insl
adc
xchg
dec
inc
sub
js
loopne
push
lea
ja
loope
mov
xchg
scas
sar
in
pop
imul
pusha
fiadds
mov
test
movsb
mov
fwait
xchg
push
ds
idiv
xor
lahf
dec
sub
sbb
jno
cltd
jecxz
loop
lods
xchg
jne
pusha
into
dec
adc
or
cwtl
jae
sbb
cmp
inc
movsb
inc
sti
jb
pop
sub
shr
ja
aaa
and
shlb
pop
push
jl
imul
dec
aaa
ja
xlat
jnp
lds
pop
xchg
jbe
xchg
out
loope
out
sbb
xchg
imul
ret
push
sub
xchg
push
and
subl
push
addr16
jp
fucomp
mov
loop
stc
xchg
or
fstl
or
mov
js
pushl
sub
sub
or
xchg
xor
rol
dec
je
adc
sub
fstl
or
aaa
sub
sub
hlt
lock
test
shrb
out
bound
and
inc
cmp
mov
stc
push
mov
popa
arpl
cmp
sub
loopne
add
mov
xchg
fcmovne
fsubrl
call
loope
fwait
add
imul
out
int
clc
ret
push
mov
mov
das
lods
insb
mov
jecxz
push
pop
popa
xchg
xchg
add
jecxz
repnz
xchg
sub
aam
cli
cli
cmpsb
lret
std
into
das
daa
aas
lcall
cs
adc
and
and
fdivrl
jbe
cmc
add
idivl
bound
aas
adc
and
shlb
inc
idivb
pop
jbe
test
push
mov
icebp
rorl
xor
test
mov
dec
xchg
adcl
adc
arpl
xor
std
and
outsb
fiadds
enter
and
lea
mov
ret
jno
mov
movsb
loope
testb
jne
insb
sub
mov
mulb
sub
jge
movsl
jne
or
addl
pop
or
test
shlb
mov
pop
mov
xchg
cmp
fistps
inc
in
inc
add
or
push
jmp
xchg
cmp
out
push
push
ja
pop
jo
lea
inc
or
cmp
xchg
sub
sbb
push
mov
sub
sbb
test
nop
add
enter
push
sub
lahf
or
xor
jnp
dec
fisubs
aad
mov
arpl
rolb
dec
sub
icebp
rcl
push
insl
mov
out
dec
dec
inc
aam
pop
adc
jmp
rcl
cmp
pop
fsincos
push
call
sbb
and
shlb
es
loop
cmp
popa
ss
xchg
mov
push
lea
bound
xor
inc
push
xchg
mov
jg
add
popa
sub
int3
cmc
cmp
cli
int3
push
push
fdivl
sub
lds
dec
jne
in
cmp
jae
lcall
sbb
jns
add
in
xchg
pop
jnp
xor
test
and
mov
adc
push
mov
and
stc
shr
rcrl
pop
in
cwtl
inc
cltd
iret
arpl
sbb
or
jne
daa
xchg
push
inc
push
nop
fisubrs
inc
push
in
mov
sbb
mov
mov
mov
push
addr16
inc
inc
pop
jo
mov
xor
dec
jl
stos
ret
jmp
fcmove
adc
and
dec
xor
xchg
and
leave
mov
outsl
vhsubps
sbb
jb
testb
clc
dec
jae
jb
jecxz
mov
cmp
rclb
fstpl
in
push
cwtl
fcmovnu
iret
movsl
push
int
push
lods
push
aam
or
and
ja
jnp
xchg
cld
cld
push
loopne
lock
shrl
push
imul
jl
ret
inc
pop
mov
mov
jb
mov
fs
sub
loopne
xchg
jle
cmp
std
xchg
jb
xor
add
mov
adc
pop
cwtl
sahf
popf
andb
mov
or
dec
xchg
rol
repz
jmp
inc
fnstsw
xchg
sub
repnz
inc
inc
push
and
in
cmpsb
sbb
std
cmpsl
adc
aaa
mov
adcl
xchg
ja
out
gs
or
mov
subb
xor
icebp
insl
test
xchg
mov
pop
in
in
jno
call
fsubrl
pop
fwait
shl
jnp
mov
stos
add
and
cs
insb
mov
pop
push
fst
push
in
lods
popf
arpl
je
nop
pusha
cld
dec
pusha
sbb
dec
pop
mov
lret
scas
or
or
jae
rclb
je
ror
and
dec
ret
loope
dec
push
loope
sub
jmp
and
xor
mov
add
adc
shlb
iret
adc
mulb
sub
ja
popa
cmp
inc
jne
mov
jp
cmc
scas
fdivl
test
jne
xchg
cmc
xchg
add
nop
sbb
add
xor
int
stc
mov
bound
pop
daa
cmp
xchg
xchg
inc
jp
mov
notl
jg
cld
mov
leave
mov
cmpsl
inc
sbb
and
mov
sbb
fucomp
aam
mov
cmp
adc
sub
pop
ficoml
adc
dec
iret
push
sub
sahf
rcrb
sbb
xor
faddl
addr16
lret
aas
into
ss
rorb
jl
ret
jno
dec
rol
imul
add
js
scas
js
mov
lds
jne
sub
sub
mov
mov
inc
shl
call
and
rcrb
fidivrl
js
pop
jns
xor
in
loop
xor
out
stos
dec
shr
fdiv
mov
cmp
imul
loopne
mov
and
sub
mov
fdivrs
daa
mov
mov
int
mov
dec
std
mov
outsb
out
addb
lods
push
int3
or
daa
in
fidivrs
adc
shlb
out
push
fbld
inc
mov
negl
push
inc
push
add
adc
lahf
inc
lahf
xchg
sub
stos
rol
xor
xor
xor
imull
out
ss
and
sub
cmc
nop
je
cmp
pop
xchg
movsb
lods
outsb
popa
scas
dec
jbe
sbb
dec
mov
xor
aam
pusha
inc
mov
out
bound
push
cmpsl
in
pushl
decb
into
fistps
xor
cltd
mov
fisttpll
scas
test
lods
mov
or
mov
mov
adc
es
push
jle
jbe
negb
das
adc
lret
mov
leave
dec
jno
xchg
adc
and
shrl
subb
out
push
ss
or
rclb
mov
jl
dec
lahf
sub
cmp
sbb
nop
das
arpl
je
pop
cli
sbb
gs
sti
and
sub
dec
fs
fnstsw
inc
iret
mov
out
cltd
fbstp
movsb
xchg
rcrl
cmpsb
sub
mov
mov
cmpsl
je
popf
push
pop
mov
xlat
adc
cmpsb
xchg
dec
mov
cmpsl
sub
adc
cli
clc
pop
mov
dec
xchg
stc
mov
dec
xchg
test
loopne
sub
xor
mov
bound
in
xchg
mov
pop
mov
es
fcoms
dec
fsubl
or
sub
fdivr
xor
into
cmp
lahf
test
insl
xchg
add
cmp
cmp
lock
xlat
xorl
pushf
push
pop
scas
push
mov
lea
mov
es
imul
cwtl
jno
mov
jne
mov
mov
xchg
jnp
push
fs
pop
dec
cmpsl
adc
fdivp
hlt
xor
xor
pushf
sbb
imul
mov
loopne
in
sub
adc
xchg
cli
outsl
shll
jo
sub
mov
and
pushf
pop
pop
enter
dec
lret
add
sub
repz
push
mov
xchg
test
sbb
inc
xchg
lret
xor
testl
xchg
cmp
mov
int3
dec
adc
pop
mov
cwtl
inc
dec
inc
push
into
xorb
ror
shrl
rcrb
inc
push
push
out
hlt
jecxz
mov
add
and
orl
push
sub
xlat
call
mov
test
sti
negl
sub
push
mov
aad
sar
adc
dec
mov
sub
mov
push
call
mov
test
jg
lcall
fcomp
mov
sbb
cmpsl
or
mov
es
loope
pushf
in
cltd
jbe
pushf
cmp
adc
ds
sbbl
test
js
cmp
je
cmpsl
movsl
adc
insb
xor
iret
adc
sbb
mov
loopne
inc
fsubp
push
or
pusha
or
cld
jmp
push
jle
icebp
pop
repnz
push
lods
cmp
ljmp
in
mov
test
or
int3
jmp
lock
jns
push
pop
or
into
insl
add
mov
sbb
mov
repz
fldl
shrl
fs
cld
cli
rcl
mov
fnstenv
pop
cmp
lcall
bound
mov
cmp
mov
mov
and
or
xlat
pop
dec
pop
dec
adc
rcrb
pop
out
arpl
cltd
jbe
addr16
int3
sub
ds
pop
pusha
mov
scas
jno
and
cwtl
fwait
and
lret
test
and
pop
dec
fildll
outsb
pop
iret
xchg
jp
pop
xchg
shrb
mov
loop
jmp
imul
out
or
cld
sbb
jbe
testl
push
mov
rorb
jmp
push
mull
loope
sbbb
cmc
and
in
pushf
les
lock
sub
mov
xchg
lock
stos
call
add
stc
pop
push
cmpsl
sti
mov
scas
mov
xchg
push
aam
jbe
xor
and
cmc
test
cwtl
xlat
rorl
mov
xchg
cmp
les
cmp
outsb
jp
jnp
xacquire
scas
xchg
outsl
jg
xor
mov
roll
xchg
pop
dec
jns
pusha
mov
or
jo
mov
divl
adc
subl
jecxz
cltd
pop
jle
nop
out
dec
mov
cmp
cld
jecxz
push
mov
aam
pop
lods
adc
cltd
int
cltd
mov
sbb
dec
push
adc
notl
iret
wbinvd
sbb
rorb
sub
dec
pop
lds
mov
mov
sub
call
pop
push
pop
pop
jno
sub
ljmp
lahf
add
aad
jno
movsl
push
fwait
pop
inc
pop
les
insl
mov
fwait
sbb
daa
lea
hlt
xchg
pop
in
jne
stos
sub
mov
gs
mov
xorl
or
not
pop
push
adc
sbb
shr
jb
lcall
xchg
jg
mov
dec
fmul
stos
xor
inc
fnstsw
jge
ret
outsl
mov
and
repz
xchg
fdivrs
bound
and
vpminub
fisttpll
jno
or
ret
jg
cmc
lret
lcall
out
and
xor
or
sti
loope
lret
sub
mov
push
sbb
sarb
mov
pop
xchg
or
outsb
or
lds
jb
or
ret
fldt
dec
lret
arpl
scas
and
stos
ss
ret
sub
sahf
sti
xor
fdiv
jmp
sub
enter
and
adc
mov
push
out
shll
cmp
fstps
hlt
pop
ja
gs
dec
pusha
mov
adc
dec
sub
shlb
out
fmul
push
add
mov
sarb
or
and
cmp
paddsb
loopne
lret
push
sbb
mov
lock
fdivl
mov
ret
in
push
cmp
inc
mov
and
or
sbb
ficoml
negl
divl
arpl
inc
jns
movsl
loopne
popf
mov
jnp
mov
mov
xchg
insl
data16
sbb
mov
mov
daa
fstpt
jns
xchg
orl
pop
push
out
repz
mov
pop
push
jns
hlt
mov
push
andb
cmp
xchg
inc
sub
or
jl
pusha
leave
mov
lahf
sbb
jp
mov
lcall
pop
int3
fldenv
sub
xchg
arpl
xchg
dec
aaa
push
xchg
add
and
mov
arpl
mov
sbb
xchg
mov
cli
cmpsb
es
push
jp
cmp
mov
rcrl
adc
fisubrs
inc
push
or
push
push
mov
movsb
icebp
sub
std
test
pop
ja
cld
cmp
inc
ds
xchg
addr16
ficomps
or
lret
xchg
js
stos
push
or
fwait
mov
pushf
xchg
add
jne
fistpll
nop
pop
testb
add
xor
push
push
lods
mov
repnz
add
test
mov
mov
mov
sub
push
xor
out
in
rorb
xchg
inc
pop
movsb
and
scas
std
fisubl
jo
loope
fildll
addr16
xchg
jp
mov
arpl
xor
lret
fidivs
and
mov
inc
jg
cmc
movsl
sub
fstl
mov
push
pslld
mov
or
jmp
repnz
enter
pop
dec
xchg
loope
gs
jae
aam
adc
in
out
pop
adc
int
inc
adc
leave
cltd
aam
aas
movsl
pop
movsl
xlat
data16
push
movsl
ljmp
mov
jnp
insb
mov
jmp
or
rcr
cmp
test
repnz
inc
mov
mov
or
push
lret
cli
xchg
ja
getsec
xlat
insb
xchg
hlt
scas
icebp
fdivrs
outsl
adc
lret
int
cli
cmp
mov
jb
adc
push
push
fucomp
test
outsb
lea
shlb
outsl
in
xlat
push
es
fucom
cltd
adc
pop
call
pop
aad
arpl
insb
popf
push
inc
adc
mov
xor
lock
jg
add
xchg
fistpll
sub
arpl
js
mov
scas
mov
adc
sti
adc
cs
xchg
adc
push
dec
inc
cmp
mov
pop
xchg
jmp
imulb
adc
push
je
adc
cmp
sub
dec
jne
out
xchg
pushf
adc
sti
xchg
push
inc
adc
inc
mov
add
and
shlb
mov
cmp
bound
and
add
arpl
fmul
sti
jae
add
testl
jns
test
fldt
xchg
pop
lret
clc
loope
adc
ja
xor
mov
jbe
cmp
rcr
xor
dec
mov
push
push
sbb
jo
iret
mov
cmp
lret
int3
adc
mov
cwtl
scas
adc
pop
repz
adc
cmpsl
lea
gs
fisttpl
icebp
mov
das
mov
ret
xrelease
out
sbb
loopne
mov
nop
or
pop
rclb
hlt
cmp
fbstp
push
sub
lcall
fnstenv
mov
adc
mov
pop
jb
adcb
push
xor
mov
mov
mov
movsb
and
fnstcw
inc
stos
jl
push
fadd
dec
cld
ljmp
sarb
cwtl
push
pop
xchg
sbb
popf
add
imul
inc
sub
daa
imul
pop
faddl
or
mov
aad
les
hlt
push
aam
addr16
xchg
cmp
sarb
push
fmuls
ficoml
pop
mov
nop
and
jnp
icebp
inc
pop
pusha
sarl
je
rorl
inc
mov
pop
push
pusha
push
fidivs
fsubp
in
jo
insb
pusha
mov
mov
inc
pop
inc
mov
pop
adc
pop
in
mov
inc
in
dec
ficompl
ja
or
xchg
pusha
mov
mov
jge
dec
int
rorl
mov
jb
ds
popa
fwait
adc
sbb
xchg
cmp
rolb
sbb
mov
out
cmp
repz
push
jecxz
ds
pusha
jnp
push
data16
test
orb
lcall
mov
cmp
outsb
inc
push
jb
bound
fisttpll
insb
add
mov
stos
pop
mov
jns
dec
cld
fsubrp
inc
pop
xchg
push
cmpb
test
push
insl
jae
or
push
add
add
mov
adc
dec
in
mov
mov
push
js
icebp
imul
mov
je
cmp
inc
sbb
jmp
or
addr16
or
and
pop
cld
sbb
jne
stos
xor
xchg
pushf
adc
jecxz
stos
mov
ds
inc
inc
les
fdivrp
dec
cwtl
mov
pushf
iret
adc
std
dec
lea
jbe
outsb
pop
neg
dec
pop
cmp
or
fsubl
push
or
aam
aas
dec
cmp
aam
lock
into
or
inc
add
add
loop
mov
inc
xor
xchg
cmpsl
mov
pop
cmc
es
mov
scas
cmp
rcll
lods
call
and
lret
sbb
inc
inc
cmp
mov
or
push
mov
jbe
mov
in
stos
fcoms
ss
sbb
je
lods
jp
pop
mov
outsl
mov
jmp
push
xchg
mov
sub
xor
sub
fstps
cmpsl
push
icebp
inc
pop
and
and
loop
sub
pop
out
imul
daa
aaa
push
mov
pop
add
mov
push
sarl
jmp
test
inc
pushf
loopne
cmp
addr16
arpl
imul
mov
cmp
scas
or
add
cmpsl
sti
or
inc
dec
shrl
add
push
inc
imul
mov
call
add
sbb
mov
pop
push
pop
sbb
jbe
jg
out
jb
aad
adc
movsl
xorl
sahf
leave
push
popf
push
jmp
aas
popf
sub
adc
aad
mov
pop
xor
dec
sbb
jns
mov
push
data16
orb
cli
mov
fmuls
mov
std
xchg
mulb
out
jbe
pop
push
cmp
mov
sbb
mov
cltd
fiadds
enter
sbb
mov
mov
out
push
test
cli
fiadds
push
xchg
lcall
aad
ds
stos
mov
lret
cmpsb
pushf
push
dec
mov
icebp
inc
fisubl
dec
mov
stc
add
push
stc
push
inc
push
adc
and
dec
and
js
and
dec
sahf
arpl
mov
test
mov
add
cli
add
sbb
jo
inc
rolb
fiaddl
outsb
dec
jne
ret
addr16
test
and
stos
stc
mov
xchg
mov
test
fwait
addl
sub
cmp
sub
pushf
push
xor
fistpll
mov
hlt
and
aad
mov
jecxz
loop
xchg
clc
mov
inc
xchg
scas
or
popf
dec
daa
push
sbb
dec
mov
sub
test
mov
xor
fmulp
daa
lcall
mov
ja
and
mov
pusha
out
iret
jle
add
jp
xor
loope
add
mov
loop
xor
mov
dec
cmp
add
pop
rcll
jecxz
add
dec
ficoml
sahf
out
adc
int
mov
sbb
mov
lret
sbb
inc
jmp
xor
mov
mov
mov
mov
xchg
out
ja
es
sbb
addb
mov
mov
cmp
scas
cld
es
fsub
pop
loop
and
ret
daa
std
and
iret
mov
push
jb
frstor
orl
lock
and
pop
fimull
out
or
rcr
jg
das
pushf
iret
jmp
mov
sbb
ret
lcall
ret
out
xchg
cmp
jae
and
xchg
insl
jg
dec
rorl
psllw
push
loop
inc
sahf
and
xor
mov
adc
lods
pop
fistpl
cmp
and
imul
cmp
std
add
das
mov
loop
movsl
movsb
inc
xchg
shl
mov
xor
enter
sbb
cmp
into
cld
out
fs
fstl
inc
cmc
cmp
movsb
mov
jge
out
mov
dec
cmp
arpl
dec
pop
aaa
xor
ja
push
jbe
mov
sub
js
mov
and
jmp
or
inc
in
adcb
insl
mov
in
cltd
mov
mov
test
mov
pop
xor
mov
rcll
dec
xchg
mov
jae
add
cwtl
gs
cmp
mov
inc
aas
and
or
sahf
fidivl
mov
jns
push
cmp
test
cmc
lock
in
std
xlat
in
popa
sbb
jne
sbb
repnz
popa
pop
cwtl
dec
adc
sub
jle
icebp
mov
mov
mov
lahf
mov
pop
loopne
pop
movb
push
sub
pop
cld
mov
call
jecxz
mov
lahf
dec
mov
in
add
and
sub
leave
into
dec
pop
daa
dec
and
mov
cmp
jnp
pop
mov
out
or
ljmp
lods
gs
imul
cmpsl
pop
rcrb
mov
inc
sbb
pop
xor
add
popf
ja
xchg
jae
int3
scas
es
shrb
test
movsl
pop
scas
mov
push
dec
data16
mov
ficoml
dec
jns
push
jno
push
push
data16
sarl
lret
sbb
inc
ja
lret
xor
aam
rorl
sub
cmp
movsb
lret
and
dec
rolb
and
aas
cmp
das
test
jge
xor
mov
in
inc
in
inc
subb
mov
stc
aaa
movsl
push
xchg
xchg
xor
rcr
stos
in
mov
mov
iret
xchg
shl
and
push
fs
aad
and
les
or
pusha
es
inc
lods
add
pop
imul
aas
mov
jne
inc
adc
notl
into
int
cmp
inc
fs
in
idiv
fisubrl
and
jg
or
lret
mov
subl
cmp
mov
or
jecxz
cmp
cmc
outsb
lock
hlt
push
shr
fdivrl
xchg
push
cli
inc
mov
or
xor
jg
lds
idivb
hlt
xlat
or
rorb
dec
mov
ljmp
push
adc
fbld
insl
roll
nop
lret
pop
inc
inc
aaa
addr16
adc
out
mov
xor
dec
mov
jge
ds
fs
scas
mov
lahf
loope
repz
pop
sub
mov
ret
ja
out
sbb
and
call
inc
jge
int
dec
iret
or
repnz
jmp
mov
bound
into
xchg
roll
sub
add
test
adc
mov
xchg
insl
pusha
mov
pop
and
add
mov
mov
mov
test
call
nopl
scas
filds
mov
ljmp
imul
mov
dec
dec
mov
sbb
xchg
push
jl
pop
mov
aas
mov
ret
shll
sbb
mov
out
cmpsl
loopne
lock
stos
in
adc
popf
pop
cld
jmp
push
push
das
mov
clc
xor
sub
bound
sti
in
add
cmpsb
and
cmp
daa
mov
je
shrl
fsubrs
lahf
pop
xor
dec
or
rcr
incl
push
repz
mov
mov
in
inc
mov
jne
jb
ret
decl
inc
pop
mov
nop
jnp
aam
aas
test
lahf
in
out
inc
addr16
mov
rcll
aas
mov
lret
mov
mov
mulb
adc
test
jg
xor
lret
addr16
pusha
ret
cli
insb
cli
inc
mov
jo
imul
sub
pop
sbb
movsb
rcll
push
fld
icebp
inc
call
sbb
jp
or
dec
cmp
fwait
mov
aam
es
xor
jns
jno
fcoml
xor
pop
dec
inc
cmc
push
sub
mov
out
pusha
dec
lret
jmp
arpl
fs
stc
sub
ret
and
ret
or
xor
loopne
out
mov
fiadds
les
adc
jg
lret
js
lret
xor
clc
ret
es
lock
sbb
test
fdivrl
scas
push
jo
pushf
pop
jns
arpl
dec
inc
inc
adc
fistl
mov
dec
and
push
dec
test
mov
int3
pop
mov
aam
jl
xchg
sub
test
add
leave
lahf
or
cs
fisubrl
ret
xchg
scas
pusha
jg
cmc
mov
mov
jle
pop
orl
dec
or
lret
pop
adc
shl
arpl
ror
cmp
dec
mov
shrl
mov
aas
push
or
and
mov
adc
mov
rcll
sub
mov
loope
ss
jne
pop
sbb
arpl
adc
mov
pop
xchg
out
aaa
lods
mov
ret
mov
sub
imul
xor
jne
jge
loop
test
stc
add
repnz
andl
leave
cvtdq2ps
xor
push
mov
sarl
push
bts
xlat
mov
out
jns
nop
xlat
sub
dec
movsl
cmp
movsl
rolb
ret
mov
adc
cmp
xor
sub
sbb
js
xor
jecxz
divb
je
div
and
lahf
xor
pop
xor
jae
mov
ja
mov
pop
jb
jl
jnp
jns
sub
inc
and
test
sub
popf
ret
das
movsb
fnstcw
inc
mov
gs
adc
ja
jg
cltd
std
lret
xor
sub
inc
out
push
sbb
pop
dec
dec
loop
cli
pop
mov
cmpsl
push
dec
sbbl
pop
js
adc
subb
fprem
lods
pop
xchg
rorl
ljmp
push
cmp
cmp
out
xor
xchg
jbe
and
push
cmc
mov
sub
sub
movsl
xchg
insl
jp
adc
xchg
inc
dec
call
mov
icebp
jne
pop
je
fs
call
push
xchg
sahf
in
rcrl
inc
add
and
cs
cmp
jns
iret
xor
lret
jbe
add
imull
push
jecxz
lcall
pop
ret
add
repz
clc
or
mov
in
jbe
pop
cmp
push
aaa
movsb
xor
or
sub
out
pop
shll
push
add
stos
aaa
cwtl
outsl
cmp
incb
int
cli
leave
sbb
mov
or
mov
or
outsl
daa
xor
jle
addr16
pop
sub
pop
mov
xchg
rcl
pop
gs
pushf
loopne
fisubs
xchg
idivb
insl
sarb
mov
ss
fsubl
daa
inc
adc
dec
inc
inc
lret
xor
test
cli
adc
jb
repz
lods
andb
sub
inc
imul
pop
sti
fistps
adc
add
cld
lcall
divl
insl
testb
inc
sahf
mov
push
loopnew
cmc
jmp
popf
xchg
loop
add
out
pop
mov
std
mov
popf
push
cwtl
sbb
cvtps2pd
pop
pop
mov
pop
clc
mov
and
pop
aas
add
pop
lods
adc
pushf
xchg
pop
jle
push
push
mov
inc
xor
data16
leave
sub
stos
xor
mov
es
and
sti
sub
pusha
sub
in
scas
mov
out
aaa
into
pop
inc
sub
jbe
sti
lahf
add
xor
repnz
pushf
or
daa
aad
rcr
pop
mov
mov
andl
mov
cmp
dec
ret
sbb
inc
or
mov
in
fs
xchg
xchg
or
dec
sub
and
push
or
hlt
push
mov
outsb
mov
jo
pop
mov
push
lret
jle
out
pop
std
mov
and
popa
and
mov
sahf
loope
add
jecxz
test
pop
sbb
lods
nop
mov
rcrl
jge
arpl
push
or
add
test
adc
adc
insl
add
adc
push
and
rolb
hlt
sahf
inc
inc
loop
icebp
ss
dec
dec
hlt
mov
dec
mov
je
shlb
mov
ljmp
aas
jae
push
sahf
or
mov
mov
jno
fdivrs
mov
leave
call
add
int3
ret
ja
mov
push
test
cmp
push
and
stos
push
mov
push
adc
sahf
cwtl
cmp
push
jns
insl
aad
scas
push
scas
jbe
gs
pop
xchg
mov
cld
mov
out
adc
mov
and
or
inc
loop
add
scas
dec
jne
movsb
sar
sub
cmp
in
xchg
cmpsl
jle
test
xchg
or
insb
dec
jmp
sbb
cmc
dec
stos
gs
jae
mov
pop
in
ja
sub
xor
dec
inc
mov
xchg
out
cmpb
adc
out
sbb
fldcw
adc
scas
stos
scas
sub
fwait
xlat
add
fcmove
or
mov
push
push
into
call
sub
mov
nop
inc
repnz
push
xchg
xchg
rorb
stc
push
mov
daa
aaa
test
push
add
dec
mov
out
mov
fldl
jbe
add
lock
dec
inc
mov
xchg
mulb
insl
xor
pop
popf
adc
sarl
lea
daa
or
pushl
shrl
xchg
mov
test
sub
and
jo
lea
inc
mull
cwtl
inc
sti
cwtl
daa
je
pop
iret
stc
scas
add
int3
stc
adc
out
int3
std
out
daa
mov
push
dec
sbb
and
jp
sbb
mov
lret
dec
cmp
jae
mov
lods
mov
daa
push
jne
icebp
mov
sbb
fistpll
fs
mov
jo
fwait
mov
pop
and
push
lahf
repz
je
push
in
loope
xchg
mov
lds
dec
jb
mov
jbe
leave
aam
loop
mov
mov
fs
jae
cli
ret
pop
dec
cmp
loop
and
push
mov
jmp
dec
xorb
xor
sti
jge
test
and
fcmovne
jp
mov
mov
imulb
pop
out
inc
mov
adc
xor
or
stos
clc
inc
mov
out
mov
mov
jb
pushf
mov
sbb
mov
sub
pop
inc
mov
fsubrl
outsl
ret
notl
and
add
enter
xchg
fcomps
pop
and
push
int
test
lcall
dec
arpl
inc
loope
mov
pop
popa
lcall
xchg
jmp
cmc
adc
insl
pushf
jno
inc
push
test
dec
stos
mov
clc
aam
imul
nop
cmp
xor
push
pop
jno
xor
andl
lcall
sarb
add
mov
in
out
mov
cs
jno
ret
dec
sbb
data16
mov
or
or
dec
and
push
divl
pop
mov
cmp
xchg
pop
rcll
mov
inc
and
std
fidivs
jmp
sub
outsl
shrb
aaa
jmp
inc
xor
ss
and
inc
inc
stos
pop
xchg
jbe
subb
and
cmp
in
fnstsw
in
aad
push
xor
jl
fs
xchg
mov
loop
popa
or
adc
push
inc
push
in
xor
push
mov
mov
fidivrl
test
outsb
fwait
adc
imul
xchg
sbb
xchg
and
jge
ds
fists
sbb
mov
mov
and
in
ljmp
cmpsl
mov
dec
lds
movsb
mov
push
mov
cmp
xor
aam
ret
shlb
or
xor
dec
clc
or
dec
xlat
jnp
aas
insb
push
shlb
scas
enter
icebp
push
int3
mov
dec
pop
pop
movsl
lret
jbe
cmp
cmc
cwtl
roll
adc
mov
sbb
xchg
test
sub
push
mov
sahf
xchg
adc
or
adc
cmp
pop
loop
enter
sbbb
or
ret
ja
push
push
aad
mov
pusha
aam
push
push
push
mov
daa
imul
stc
xor
sbb
cmp
cld
mov
data16
xchg
pushl
adcl
das
repnz
mov
out
loop
xchg
mov
add
or
fst
out
je
ss
jle
push
sbb
sbb
lret
cli
adc
xchg
mov
jg
divl
out
dec
jl
pop
cmp
sbb
gs
jl
lahf
add
mov
adc
or
bound
pop
ljmp
hlt
mov
sti
inc
rorb
std
out
lret
dec
lds
dec
cmpl
cltd
imul
cmc
fsubrl
and
repz
mov
lea
dec
inc
imul
mov
roll
mov
rorb
dec
push
xchg
ret
ss
call
outsb
inc
stc
imul
lcall
cmc
push
mwaitx
dec
les
mov
xchg
or
xchg
test
adc
sar
pop
rol
lea
sub
pusha
xor
mov
xor
or
mov
shl
pushf
rep
dec
dec
dec
scas
lods
cltd
aaa
out
ja
jae
dec
scas
les
gs
dec
xchg
jge
ja
cmp
sahf
push
insl
enter
sbb
sub
dec
out
int
jne
jb
shlb
pusha
data16
xlat
push
add
sahf
xor
fidivrs
les
push
inc
xchg
mov
jl
lds
push
fnsave
jbe
in
mov
hlt
daa
nop
js
stos
repnz
gs
es
mov
nop
pop
leave
aaa
rclb
add
arpl
xchg
nop
lcall
test
push
mov
test
and
inc
adc
mov
push
xchg
xor
mov
pop
movsl
or
and
jb
daa
sbb
or
mov
cmp
inc
shlb
inc
and
mov
push
mov
xchg
pop
popa
pop
jecxz
jb
scas
adc
xor
and
pop
insl
xchg
push
lods
xorl
out
popf
mov
das
xchg
xchg
xor
mov
adcb
xchg
mov
cmp
stc
mov
mov
inc
fstpl
mov
fimull
cltd
arpl
mov
adc
inc
and
push
popf
inc
or
jno
jno
fcoml
cmc
cmp
les
dec
jno
sbb
sbb
mov
cmc
dec
push
repnz
fsubs
push
sti
cmp
hlt
enter
fcomip
xor
add
fisubl
cmc
mov
insb
lret
fs
sub
jne
push
adc
mov
push
cwtl
mov
cmp
fidivs
outsb
in
xor
add
repnz
ret
push
gs
in
lds
push
lret
jns,pt
insl
je
cwtl
scas
push
or
repz
test
cmp
inc
sti
rep
lahf
bound
mov
pop
negb
sub
jl
inc
push
lods
xchg
outsb
mov
mov
aas
subl
mov
sbb
jb
inc
xchg
inc
mov
inc
adc
cwtl
mov
aas
pop
jl
sahf
out
int
int3
inc
je
mov
cwtl
bswap
addb
shll
add
iret
cmpsb
adc
fmul
out
das
xchg
pusha
das
arpl
and
push
cwtl
sarb
in
mov
jle
pusha
mov
scas
pop
lea
shlb
cwtl
ss
mov
imul
ja
repnz
jnp
roll
cs
adc
pop
das
data16
and
repz
jbe
xor
push
push
out
loopne
popa
sub
fbstp
pop
xor
adc
das
int
pop
sub
popf
vpsllq
ds
jp
sbb
sub
xor
hlt
mov
pop
ss
add
sbb
fistpl
roll
lods
ljmp
aaa
movsb
and
jae
and
jnp
sahf
mov
dec
shll
and
lcall
pop
add
pop
or
pop
scas
xlat
pop
fldenv
inc
cld
scas
pusha
je
ror
inc
jmp
in
cmp
stos
jbe
outsb
push
clc
add
inc
xchg
mov
insl
clc
ja
ret
int3
lahf
mov
rcrl
pop
les
and
mov
ljmp
ja
cltd
push
sbb
mov
ss
mov
adc
enter
pop
in
jmp
cltd
add
and
scas
push
add
sbb
push
dec
in
sar
dec
mov
and
and
sbb
mov
xor
cmp
xchg
pop
stc
pop
lock
mov
mov
in
dec
ds
pop
orl
xor
scas
hlt
cmp
insl
mov
clc
sub
lret
das
and
mov
frstor
adc
mov
ss
ret
inc
lahf
mov
mov
cmp
xchg
jl
push
mov
mov
cmp
aam
mov
leave
pusha
xor
mov
and
imul
or
jbe
out
sbb
push
imul
mov
enter
push
push
dec
out
scas
lock
mov
xorb
leave
inc
jg
aas
jl
sbb
pushf
push
cwtl
jo
movsb
aas
das
adc
pop
loop
gs
scas
dec
clc
repnz
push
rclb
push
lods
mov
call
leave
push
and
xchg
xchg
dec
sub
push
push
das
fmuls
popa
lcall
dec
lods
fs
lea
and
scas
add
xlat
or
ds
pop
xchg
xor
test
pop
cmp
jno
adc
push
fsubl
cmp
xor
call
mov
clc
ss
cmp
push
push
je
mov
xchg
loope
sarl
or
or
sbb
or
cs
rcrb
pop
or
test
mov
popf
cld
sub
sub
sahf
test
insl
push
xchg
cmp
pop
pop
iret
movsb
mov
mov
ds
icebp
lret
xchg
inc
jnp
add
aas
out
aam
add
sbb
pop
sbb
pop
leave
inc
ljmp
lods
ljmp
call
lret
dec
push
ret
int3
dec
nop
iret
cmc
mov
mov
adc
lahf
or
popa
stos
jb
roll
roll
sub
fists
mov
cmp
sbb
add
add
pushf
lcall
lock
sub
mov
or
repnz
mov
in
scas
add
insb
sub
jmp
pop
mov
sub
inc
imul
mov
mov
and
and
mov
adc
sbb
sahf
and
and
dec
push
rol
xor
mov
mov
push
mov
pop
jmp
out
popa
and
cmp
sub
clc
pop
adc
xor
out
jmp
inc
lock
pop
test
add
out
enter
addr16
in
cmp
lahf
adc
ljmp
mull
in
loopne
movsl
pinsrw
adc
jne
adc
cs
jl
jl
and
pop
xchg
add
repz
mov
inc
inc
xchg
fnstenv
or
fcmovnu
sub
test
inc
gs
ss
jns
ja
movsb
stc
inc
fbld
fimull
inc
mov
xchg
ss
stc
ret
out
je
repnz
imul
dec
je
lods
inc
xor
add
push
mov
aad
leave
mov
cld
jp
adc
jo
ficomps
pushf
mov
out
frstor
ret
test
mov
lods
mov
pop
push
test
push
xor
adc
cmc
jbe
mov
inc
sbb
loop
or
orb
cmpsb
xor
je
jg
enter
inc
xchg
fwait
mov
push
inc
in
sbb
inc
popf
fmuls
popf
pop
mov
xchg
stos
call
sub
add
jmp
sub
mov
cmpsl
loope
pop
aad
mov
jl
lods
xchg
xchg
jge
out
into
leave
gs
aas
jg
mov
fsubl
test
pop
mov
ffree
cmpsl
aad
xor
dec
mov
pop
stc
fmul
xor
insb
cmp
inc
cmp
mov
orl
bound
addr16
add
popl
cli
or
sahf
cmp
int
cmpsb
fcmovbe
push
mov
std
adc
mov
pop
insb
bound
js
cltd
push
pop
or
xor
pop
pop
xchg
loope
ljmp
xor
xchg
mov
test
rolb
mov
lret
ror
test
xchg
addr16
stc
sub
push
shl
icebp
cmp
xchg
xchg
cli
jmp
adc
mov
sub
inc
out
fwait
sti
sbb
mov
iret
cli
mov
and
or
rcrb
frstor
popa
lcall
inc
cmp
dec
fcomi
push
xchg
inc
mov
aaa
lahf
push
lods
jg
mov
pusha
cmp
sbb
push
mov
mov
and
jno
lea
cmp
imull
cmp
push
orb
int3
dec
cmp
ljmp
rcr
xor
enter
jne
enter
push
lret
loop
xchg
loop
aam
loop
push
pop
in
or
jns
xchg
inc
scas
pop
in
xor
xlat
loope
add
addr16
or
sar
cld
aas
jmp
inc
sbb
mov
sbbb
test
jge
cmp
jecxz
push
pop
adc
pop
mov
xchg
inc
lods
lahf
clc
call
and
ret
scas
add
cmpsl
cmp
test
loop
push
add
sarb
jns
push
pop
cld
add
loop
add
incl
cltd
es
push
mov
adc
aas
filds
jne
and
sti
out
sbb
psubb
push
outsl
ret
lods
sub
mov
in
dec
nop
sbb
push
jo
andl
push
cmp
hlt
fs
push
lcall
push
rcrl
imul
sub
mov
xorb
jecxz
sub
add
inc
loop
push
mov
divl
movsl
xor
lret
addr16
push
lahf
add
xchg
xorl
sbbl
and
stc
xchg
popf
ret
movl
loope
or
rsqrtps
daa
cli
cmp
adc
adc
cmp
mov
in
repnz
shlb
roll
xchg
lods
pop
sahf
sti
mov
jecxz
or
pop
rcl
adcb
push
int
loope
cmpsl
and
in
mov
mov
inc
push
sub
mov
scas
nop
and
jg
push
jecxz
rcrb
or
mov
jg
xor
adc
fs
adc
or
nop
mov
popa
adc
jge
out
mov
clc
cmp
cmp
in
mov
and
mov
or
popl
add
rorl
stos
ljmp
inc
cltd
imul
cmp
jne
fsubrs
stos
dec
iret
leave
pop
sbb
stos
jbe
jne
sbb
ss
jmp
jg
and
pop
sub
sbb
test
jae
lods
jbe
jb
int3
lret
ds
xchg
out
dec
outsl
or
inc
jl
xchg
daa
fisubs
into
mov
leave
mov
idivb
push
idivb
mov
pop
mov
lcall
add
adc
repnz
stc
out
mov
mov
sub
add
outsl
dec
test
imul
inc
pop
divl
push
dec
int
and
mov
sahf
mov
mov
fs
pop
or
and
sbb
add
cmc
add
cmpsb
or
lcall
popf
dec
sbb
sub
xor
das
shl
cltd
push
or
loope
std
push
or
sbb
lods
outsb
sbb
jno
pushf
xor
ja
adc
ss
xchg
popf
xchg
sub
jne
imul
repz
outsl
pop
data16
xchg
mov
pusha
sysexit
inc
lods
shrb
xchg
sub
lcall
insb
rolb
aam
cmp
push
push
jne
movsl
lods
sti
mov
in
rcrl
push
adc
pop
ja
cli
add
inc
xor
push
decb
adc
mov
push
sahf
mov
inc
movsb
adc
outsb
or
movl
jle
test
in
xor
mov
cmpsb
mov
sbb
mov
pop
adc
cltd
stc
jae
adc
addr16
jmp
sbb
xchg
std
dec
pop
mov
pop
add
and
dec
test
aad
cmc
and
jbe
pop
in
inc
std
jcxz
xor
sub
jae
jmp
or
lahf
jne
inc
adc
popf
sti
jno
insb
xchg
std
aas
sti
nop
popa
mov
jmp
jg
mov
lret
xchg
sti
cmp
jne
push
stos
stos
hlt
xchg
jmp
ja
sbb
lock
cmp
push
pop
adc
clc
test
cmp
mov
pop
lret
iret
inc
sbb
inc
adc
notb
fidivl
loope
push
lods
pop
add
sbb
fmulp
jle
and
push
movsl
cmpsl
xor
push
xchg
adc
fdivrs
and
xor
xchg
push
fwait
adcb
leave
xchg
xchg
scas
mov
jl
cmc
fisttpll
pop
aaa
outsl
insb
xchg
mov
lahf
test
rolb
push
fs
leave
dec
xchg
inc
in
push
mov
ficompl
ja
pop
fcoms
pop
js
xchg
xor
mov
and
in
test
fildl
loope
xchg
andl
or
inc
test
scas
mov
xorl
cli
lea
xchg
push
pop
lret
push
sub
pop
xor
jmp
imul
and
jno
jns
flds
imul
lret
xchg
cmp
imulb
insl
inc
xchg
xorb
and
ds
xchg
adc
pop
and
mov
mov
pop
idivl
fcmovnu
idivl
addr16
jle
gs
cwtl
mov
les
test
jge
out
loope
cmc
or
stos
mov
rclb
mov
pop
arpl
repnz
jmp
inc
loop
movsb
push
adc
push
popf
mov
xchg
inc
int
push
movsl
out
pop
mov
ss
nop
outsl
inc
mov
push
pop
adcl
push
cmp
add
movsb
add
push
insl
dec
outsb
call
into
mov
xchg
bound
and
call
loopne
mov
push
push
sub
mov
or
loopne
in
stos
mov
xchg
scas
repnz
insl
loopne
jl
push
je
es
rcrb
loop
mov
mov
daa
push
stos
xchg
push
sbb
out
cmp
jl
and
les
sub
or
mov
mov
es
sbb
jns
cmp
jg
dec
jnp
jns
pop
xadd
sbbb
nop
pop
pop
and
scas
imul
adc
dec
push
not
iret
xchg
lods
test
mov
adc
mov
out
inc
mov
push
test
mov
and
cmp
push
mov
xchg
ljmp
out
cmpsb
jge
icebp
ss
ds
lods
xor
data16
mov
mov
ja
push
insl
or
popl
arpl
mov
dec
mov
loope
mov
das
hlt
es
jecxz
icebp
out
outsl
pop
lahf
jbe
or
arpl
andb
xor
jns
mov
sarb
insl
add
mov
lahf
fisubl
popf
xchg
insl
sahf
out
cmp
je
lahf
sbb
and
scas
sub
js
and
int3
dec
int3
dec
mov
and
hlt
jp
xchg
add
jecxz
add
jmp
fsubrl
ja
flds
shll
and
mov
js
sarb
lcall
dec
and
in
call
push
dec
aaa
in
xor
mov
fwait
std
das
fists
jbe
faddl
xchg
lods
outsb
xchg
inc
ss
cmp
fxtract
inc
sub
pop
pop
std
jmp
insb
pop
adc
mov
out
filds
push
add
mov
ja
push
test
add
aas
mov
push
lea
pop
adc
pop
lock
loop
aaa
vmread
ja
mov
or
inc
push
dec
cltd
jmp
push
mov
movsb
lds
std
jp
fsubrl
setnp
adc
fisubrs
lock
dec
outsb
ja
test
xor
lea
jne
rol
xchg
xchg
daa
adc
mov
xor
daa
push
stc
jnp
cmp
pop
mov
cmp
loop
xchg
sbb
aad
adc
dec
mov
dec
int3
sar
ret
xchg
pusha
pushf
jns
popa
test
pop
arpl
mov
popf
dec
sub
push
and
dec
movsl
shl
inc
xchg
lock
enter
test
push
jmp
enter
mov
inc
incl
xchg
adc
std
push
push
andl
mov
adc
jecxz
mov
inc
sub
sub
cmpsl
repz
inc
cld
popf
dec
sub
dec
pop
xchg
dec
inc
cltd
in
jl
rcl
xchg
pop
xchg
push
mov
push
push
push
dec
cwtl
loope
cmc
rorl
add
or
and
jns
inc
rorl
in
pop
inc
jnp
inc
xlat
jnp
nop
int3
repz
mov
or
call
dec
enter
popl
stos
negl
dec
pop
ljmp
jle
sbb
popf
dec
jge
ret
xchg
stc
rolb
pop
pop
jne
cli
sbb
mov
jbe
popa
xchg
idivb
push
std
movsl
adc
xor
or
mov
in
bound
rorb
pop
add
jns
lods
aam
fiaddl
dec
gs
push
into
mov
and
stos
rcr
push
and
jl
mov
mov
dec
and
imul
jne
adc
aaa
xor
and
call
loope
mov
popf
mov
pop
jge
push
mov
pop
movsl
jne
mov
dec
mov
fisubl
mulb
cltd
fcmovnb
xor
call
xor
pop
mov
cli
in
out
out
loop
push
mov
jle
das
outsb
sbb
push
sub
mov
sahf
stos
out
test
dec
add
fiadds
dec
mov
movsl
or
repz
or
outsb
jno
clc
pop
stc
xchg
jge
repz
ss
stc
lds
sbb
cmp
dec
or
cmpsb
adc
ret
mov
in
mov
mov
mov
adc
aam
les
nop
push
dec
arpl
and
push
pop
fsubrl
jns
ucomiss
fcoml
jns
mov
mov
test
sbb
imul
pop
adc
mov
or
mov
ds
inc
std
and
jne,pn
in
fnstsw
in
shl
push
jecxz
add
dec
or
pop
and
pop
fidivl
cmpb
popa
inc
int3
and
popf
jns
jb
ds
adc
jmp
xchg
in
rorl
test
mov
lret
mov
pusha
or
scas
imul
inc
cs
rcr
das
out
xor
in
push
and
sub
pop
mov
lock
push
test
lock
push
mov
or
inc
push
jnp
gs
xchg
mov
xor
mov
pop
rolb
and
inc
pop
aas
add
and
std
push
cmpb
clc
mov
pusha
lret
add
and
mul
clc
and
mov
jb
jbe
mov
loopne
adc
das
mov
nop
and
aas
adc
fisttpl
nop
mov
fists
repnz
in
push
cmp
in
cs
mov
or
jp
sbb
stos
movsl
out
ss
mov
and
ret
lock
aas
stos
cmp
inc
dec
mov
pop
jns
add
fsubr
rclb
dec
ud0
lds
xchg
fidivrs
mov
cmp
dec
xchg
xchg
stos
je
lcall
pop
mov
or
jp
dec
div
dec
add
lock
stc
in
pop
push
iret
fnstsw
fsubs
cwtl
js
fidivl
or
vpcmpeqw
pop
add
mov
cli
xchg
test
out
inc
fildl
orl
aaa
mov
xor
insb
int3
sbb
jno
sub
pop
lahf
dec
sub
pushf
fs
dec
add
cli
mov
cmp
mov
push
jmp
mov
int3
arpl
push
and
hlt
popa
xor
ret
jp
test
enter
ja
adc
xor
les
lret
imul
pop
hlt
roll
pop
mov
addb
mov
pusha
mov
and
mov
daa
mov
inc
pop
or
mov
adc
push
lods
repz
ljmp
ljmp
stos
or
dec
jns
aam
mov
imul
and
inc
les
fiadds
faddl
gs
test
icebp
into
fwait
mov
cs
fildl
in
popf
add
pop
das
lahf
xchg
xchg
jns
mov
xor
mov
adc
movsb
jmp
mov
adc
pop
mov
pop
inc
lret
imul
ds
ret
adcl
arpl
jo
aaa
push
repnz
push
mov
into
imul
lock
addb
cmp
add
xchg
push
mov
jmp
and
out
arpl
scas
loopne
outsl
xor
sbb
xchg
lahf
scas
sub
sub
pop
icebp
cmpsb
xchg
mov
popf
lea
aaa
mov
stos
cmp
lret
pop
pop
lret
pop
lods
or
outsl
lcall
push
pop
or
xchg
int3
add
inc
add
push
push
dec
push
cmp
dec
data16
flds
int
add
je
pop
leave
sub
movsb
adc
inc
mov
test
or
lea
add
lea
add
fisttps
cmp
lods
or
pop
mov
fwait
jno
ror
sbb
and
bound
sub
inc
cs
movsl
dec
or
sub
or
jb
mov
int3
pop
mov
jp
mov
xchg
std
sub
enter
mov
push
and
loope
pusha
mov
inc
in
mov
js
jecxz
scas
int3
push
adcb
lret
xor
push
sub
mov
mov
and
flds
out
lahf
shrb
outsb
xor
mov
mov
lods
sbb
mov
mov
aaa
movsb
testb
data16
in
mov
sbb
push
repnz
call
cmp
xlat
shrb
mov
push
pop
sbb
pop
cmp
inc
cmpsl
push
cmp
cmp
insl
sbb
ret
push
rcll
mov
push
lods
mov
xchg
xchg
adc
testl
push
push
das
std
jle
cwtl
idiv
popf
push
cwtl
add
sub
mov
lea
mov
sbb
cld
jg
fwait
mov
jns
push
xchg
mov
push
icebp
daa
push
shlb
fldl
mov
or
add
xchg
sbb
pop
mov
push
loop
or
sbb
dec
xor
push
ds
cmc
cmp
inc
dec
mov
pop
mov
rcll
mov
cmp
jb
dec
lgs
lcall
xchg
xlat
ret
sub
xchg
es
sbb
mov
test
add
test
clc
cmp
push
fwait
out
cltd
push
mov
dec
xchg
sbb
sbb
inc
incl
inc
pop
mov
dec
push
xchg
loope
push
aaa
push
add
push
mov
fadds
jle
adcl
jns
adc
int3
lods
pusha
fcoms
pop
test
scas
fcompl
leave
and
lret
jg
cwtl
cli
call
clc
and
add
add
pop
and
data16
jne
fld
mov
jns
cwtl
ret
and
add
repz
fs
mov
push
mov
jg
js
inc
dec
cltd
test
mov
mov
dec
out
pop
hlt
mov
or
adc
inc
fdivs
push
jle
push
movsb
repnz
mov
xchg
xchg
push
dec
mov
jmp
mov
rorl
jge
cmc
push
cmp
dec
shl
mov
xchg
mov
out
std
jmp
scas
in
movsl
mov
jle
mov
xchg
pushf
push
jb
ja
sbb
adc
pop
in
std
mov
ljmp
test
dec
insl
popa
pop
mov
loop
mov
test
xchg
arpl
inc
cmpl
pop
jbe
adc
int
xchg
sbb
lcall
jno
je
sahf
mov
cmp
icebp
push
aad
into
icebp
mov
dec
dec
mov
sbb
mov
cmc
and
in
movsb
mov
jg
iret
push
push
movsl
lcall
sbb
dec
inc
aaa
out
test
sahf
outsl
idivb
dec
into
scas
and
test
mov
jp
rcl
cmc
leave
in
jmp
add
add
stos
das
fsubl
nop
push
sub
mov
jle
sub
enter
jl
and
adc
ret
js
ljmp
dec
mov
data16
fsubrs
adc
stos
and
mov
mov
jb
ljmp
movsb
mov
stos
rorb
jae
jns
jp
sub
fwait
add
ret
ss
xlat
into
sub
int
jo
rol
decl
nopl
mov
push
les
stc
std
mov
mov
cmpsl
xor
jmp
jecxz
mov
push
cltd
push
imulb
mov
pop
mov
in
xchg
sub
xor
jbe
pop
fadds
rclb
scas
jecxz
imul
push
idivb
dec
mov
cmpb
cwtl
inc
xchg
pop
dec
push
movsb
and
dec
xchg
lock
imul
xchg
and
or
add
repnz
insb
into
or
sarb
pop
pop
sti
pop
pop
outsb
lods
adc
cmp
in
xchg
popf
push
test
pop
xor
xchg
cmp
fimull
aam
js
fmul
cltd
je
add
stos
imul
and
out
mov
dec
aas
aad
leave
out
xor
scas
pop
addb
mov
movsl
dec
cs
fs
push
add
lods
push
adc
cmovne
je
xchg
pusha
test
popa
fstl
mov
push
popf
subl
aas
repz
xchg
cld
jp
dec
stc
lcall
push
daa
dec
sub
add
push
aam
push
orb
or
call
dec
aaa
push
push
idivb
out
lret
insb
xchg
jbe
xlat
pop
bound
inc
outsl
int3
cmp
xchg
mov
adc
pop
xor
out
fbld
xor
jmp
test
jnp
sub
mov
or
nop
push
mov
xchg
test
pop
jle
into
cltd
cltd
and
aaa
jbe
loop
sub
mov
cwtl
mov
or
leave
sub
out
push
lahf
dec
xor
pop
pop
dec
inc
lods
add
mov
adc
cmp
add
sbb
sub
mov
xchg
jg
pop
xchg
pop
jge
push
out
sbb
push
jno
jo
gs
inc
jne
dec
and
jge
and
das
push
cmpsb
mov
lret
or
push
fmull
fdivl
roll
je
scas
sbb
mov
xor
std
fmuls
sbb
xchg
shll
ror
neg
stos
push
dec
mov
out
sbb
dec
jb
dec
and
fstpl
ret
inc
jnp,pt
repz
sbb
aam
nop
jns
push
cmpsb
mov
mov
xorl
out
cmpsl
mov
mov
adc
arpl
xchg
cmp
repnz
ja
pop
mov
ja
xchg
shlb
mov
dec
repnz
mov
aaa
add
leave
je
xor
loop
iret
cmpsb
cmpsl
test
js
cwtl
mov
adc
xchg
push
and
and
in
lods
loop
sbb
xchg
and
push
add
mov
mov
xor
adc
lcall
mov
xchg
mov
test
loop
and
and
ret
shll
jno
xor
repz
pop
js
xor
ja
stos
cmp
leave
dec
fs
add
std
pushl
adc
mov
add
inc
mov
inc
sarl
sub
cmp
cmp
mov
jl
and
fmull
jecxz
add
push
test
lods
adc
lret
sbb
inc
stc
mov
rol
frstor
add
pop
xchg
add
mov
xor
dec
addr16
js
cli
cmp
mov
and
fnstenv
xor
lods
ljmp
gs
icebp
mov
dec
mov
out
std
insl
cmpsb
ficomps
ss
repnz
mov
dec
aad
test
jne
test
frstor
es
add
fiadds
jmp
cmp
cmc
cwtl
dec
stos
lods
mov
test
cmp
jae
enter
nop
jns
pop
xchg
lahf
push
sub
inc
jns
sub
insl
in
fsubr
cmpsl
cmp
push
cmp
jmp
mov
lock
jmp
sub
inc
les
add
cmp
inc
lret
mov
test
ss
push
push
out
icebp
ljmp
stc
cli
push
aam
jmp
stc
lods
mov
xor
roll
jl
mov
add
out
mov
gs
or
test
mov
faddl
cmp
pop
inc
mov
cmp
je
lret
add
lods
insb
push
push
addr16
incb
jb
iret
or
popf
jmp
std
lods
aam
cmp
ds
jecxz
lcall
xchg
pop
idivl
lret
cmp
or
inc
stos
push
cmpb
rcrl
loope
jmp
outsl
test
stos
mov
mov
cmp
or
cmp
xchg
cltd
push
ror
push
out
lock
inc
fs
cmp
adcb
mov
sbb
in
adc
or
popf
scas
addl
sub
mov
daa
movl
rorb
sub
out
mov
imul
push
cwtd
std
xchg
xor
jecxz
jno
cmpsl
or
lods
mov
jl
sub
cwtl
inc
sbb
out
in
xor
inc
in
lret
decl
int3
add
adc
mov
or
test
pushf
xchg
rcrb
int
inc
inc
es
push
and
ds
jno
push
fsub
pop
xlat
inc
lahf
aaa
dec
decb
mov
mov
jnp
mov
out
repz
sbb
insb
cmpsl
shlb
sbbb
xchg
xor
es
ljmp
push
test
arpl
jno
adc
push
push
jecxz
faddl
sahf
shrl
es
aad
push
daa
fsubr
mov
sub
repnz
shll
and
stos
sbb
testb
les
xchg
data16
jmp
dec
popf
jp
lcall
and
in
in
dec
pop
pop
idivb
mov
inc
inc
push
add
push
jbe
movsl
loope
pop
xlat
sbb
adc
leave
cmp
inc
dec
out
sbb
sbb
in
sbb
sbb
push
sbb
test
cld
dec
lcall
push
mov
jns
xchg
ror
ja
scas
lret
xchg
adc
mov
add
popf
in
ror
pop
ss
cmp
adc
xorb
outsl
in
sahf
dec
inc
or
jne
push
jg
ss
mov
push
daa
xorl
movsl
cmp
jb
jne
sahf
popa
jp
mov
shll
cmpsl
push
ret
ret
fldl
mov
stos
repnz
ret
repnz
dec
pusha
jg
jecxz
inc
xor
notb
movsl
adc
sub
inc
inc
mov
add
add
xchg
lea
cmpsb
push
adc
mov
pop
xor
andl
lods
pusha
adc
push
pop
xchg
shl
mov
mov
xchg
mov
dec
xchg
js
sarb
inc
loopne
dec
jns
mov
rolb
ds
scas
addr16
mov
sbb
aam
mov
loop
push
jmp
xor
cmp
sub
jmp
ror
movsb
sbb
jecxz
xor
or
xchg
mov
inc
in
add
xor
sbb
inc
mov
sbb
out
sahf
fcomip
popa
mov
push
xor
push
dec
in
push
mov
push
inc
rcrl
xchg
xchg
push
inc
push
in
and
stc
loopne
loop
xchg
dec
push
jp
test
shlb
mov
push
in
cmpsb
adc
inc
dec
inc
push
cmp
inc
lods
loope,pt
lahf
jno
push
push
sbb
jo
out
cmp
js
scas
popa
jecxz
int
mulb
sub
lret
or
iret
cltd
jge
movsb
cmp
and
jmp
repz
clc
addl
out
sub
in
incl
cmp
je
sti
dec
pop
mull
sub
int
jle
ficoms
mov
repz
jmp
mov
push
repnz
sub
mov
mov
mov
shl
mov
jg
aaa
sbbl
cmpsb
clc
xchg
pop
sti
jmp
adc
gs
pop
push
cmp
rcrb
dec
int
jne
repnz
xor
sbb
push
xor
push
adc
lret
xchg
mov
sti
jg
cmc
push
xor
ds
in
dec
or
and
xchg
mov
test
mov
inc
out
or
pop
shlb
jg
rolb
cwtl
inc
xchg
mov
xlat
push
aas
fdivs
and
pop
sti
punpckhwd
roll
ja
cwtl
inc
jg
or
movsl
lahf
dec
adcb
sbb
divb
lods
inc
xor
xchg
xchg
pusha
rcll
mov
fidivrs
imulb
scas
xor
rcll
mov
outsl
and
sub
aam
filds
dec
stos
add
dec
movl
out
and
xchg
aam
rcll
xchg
xor
cmpsb
fisubrs
sub
and
xchg
xchg
shrb
push
jg
out
cli
cmp
fistpll
jge
mov
cs
mov
xchg
or
and
clc
mov
jl
jle
js
fs
inc
jecxz
loop
sbb
xlat
dec
and
xchg
aad
xchg
ror
fmuls
sub
rcr
out
repnz
inc
and
push
pop
jg
pop
xchg
sub
das
out
ficompl
jmp
stc
and
test
popa
fmull
xor
outsl
fldenv
and
xor
loopne
mov
in
mov
sub
addr16
sbb
fnstsw
and
cld
fldt
ret
mov
dec
mov
and
mov
inc
out
and
insb
stc
inc
mov
imul
ss
mov
pushf
jne
movsb
xchg
leave
mov
mov
cltd
xchg
scas
popa
and
add
in
lods
jbe
add
sarb
push
jbe
fdivl
push
mov
adc
sub
mov
xchg
lea
mov
mov
fnstcw
fnstsw
scas
sbb
jecxz
cli
rorl
repnz
mulb
mov
xlat
scas
rclb
and
loopew
into
cmp
jne
jmp
shl
or
sbb
ret
cmpsl
lret
in
jnp
pop
jl
cwtl
loope
mov
jo
insb
push
daa
cmpsl
ljmp
jmp
jae,pn
push
cmp
cs
ror
out
jmp
add
js
inc
sub
movsl
ret
xorb
xlat
sbb
notb
out
jecxz
sar
hlt
movsb
test
xor
xor
pop
arpl
enter
xor
negl
int3
mov
sarb
sti
jno
or
test
xor
push
mov
mov
daa
nop
mov
ljmp
stc
out
push
add
call
cmpl
sbb
sbb
jns
add
out
cwtl
shlb
and
pop
cmpsb
xchg
pop
cld
sbb
push
test
fnstenv
aas
pop
in
ret
push
mov
aam
push
aad
fsubp
jne
lea
lock
dec
bound
dec
cmc
lock
pop
xor
mov
dec
or
out
mov
sub
fldcw
dec
data16
xor
sbb
nop
std
push
dec
outsb
jb
push
das
hlt
mov
orl
add
cmp
xor
fisubrs
xor
xchg
xor
push
scas
gs
xchg
lock
into
pusha
xchg
xor
dec
sbb
mov
xor
jmp
pusha
paddusb
mov
jg
jo
pusha
aam
stos
mov
leave
inc
or
sub
and
sti
and
or
cld
pop
test
popa
adc
lods
cmp
sbb
push
test
push
jbe
push
adc
mov
dec
fists
mov
mov
sub
repz
mov
inc
mov
call
imul
inc
sub
addr16
in
std
inc
fdivrp
loope
dec
pusha
add
jbe
ljmp
and
pop
ljmp
outsl
xor
gs
aas
pop
push
add
jno
mov
push
xchg
xor
mov
adc
imul
cmp
inc
ret
iret
or
leave
cmp
mov
pushf
xchg
cmp
sti
cmpsb
pop
gs
es
and
and
out
mov
imul
nop
jp
dec
sarl
jmp
sub
pop
rorl
arpl
or
ret
mov
pop
push
dec
int
icebp
ja
pop
daa
je
lods
and
shlb
loop
bound
adc
movsl
sbb
inc
mov
adc
mov
or
or
xchg
pop
stos
add
inc
rolb
test
mov
pop
mov
push
lret
ljmp
push
xor
jmp
aaa
aad
xlat
divl
push
xchg
cmp
cmp
popf
lret
leave
call
hlt
and
subl
popf
movl
pusha
pop
sbb
les
dec
in
xchg
lss
out
aad
adc
iret
inc
jno
sbbl
loop
xor
das
popa
adc
shrb
adc
sbb
in
test
rcrl
jmp
adc
xchg
fsubp
push
repnz
mov
popa
adc
dec
je
cli
jmp
fs
mov
js
test
fmull
cmp
adc
sbb
xchg
in
cli
jecxz
clc
mov
xchg
xorl
fidivl
sub
mov
jecxz
add
sbb
movsl
loope
jbe
sbb
xorb
xchg
jno
int3
fldl
sahf
cs
lret
adc
push
fucomip
ret
lahf
jle
mov
cmp
xlat
pop
into
adc
call
xchg
lcall
fwait
aas
ret
dec
xchg
ss
xorb
fiadds
pop
mov
or
enter
insl
enter
mov
push
sbb
xchg
jae
mov
inc
les
xchg
je
adc
insb
js
loop
mov
repz
fucomi
pop
push
sarb
add
mov
test
and
push
test
pushf
test
mov
rcrl
lahf
std
fwait
or
fwait
jmp
push
pop
cmp
shl
outsl
jmp
cli
and
in
push
add
fiadds
aam
nop
jl
mov
out
xchg
jp,pt
outsb
push
and
sub
and
jmp
mov
pop
int3
fs
xchg
rcl
jge
inc
add
mov
je
addb
add
fildl
popa
fiaddl
fidivrs
fidivrs
popf
shlb
adc
vreducepd
or
push
movl
fstp
int3
loope
push
popf
sub
in
and
or
xchg
push
lea
inc
es
scas
add
push
std
cwtl
sbb
nop
or
jns
cmpl
mov
add
test
xor
mov
xor
or
pusha
out
clc
in
int
mov
push
sbb
rol
xor
fs
leave
xor
faddl
loopne
sub
fwait
out
out
lea
lea
leave
push
leave
fistps
outsl
cmp
ficompl
pop
jnp
adc
out
inc
pop
sbb
cmp
sahf
fcoms
or
jmp
add
popa
std
fs
mov
fisttps
pop
cmp
or
cltd
adc
inc
test
negl
push
push
xchg
test
cs
xor
push
shrb
mov
jo
int
jae
int3
mov
insl
jmp
xchg
sbb
stos
enter
xor
cmp
mov
sub
movsl
mov
dec
insb
xor
push
add
xchg
mov
xchg
pusha
add
inc
sahf
xchg
lcall
bound
ja
pop
pop
rorl
ret
mov
outsb
clc
push
add
out
dec
or
pop
fcoml
ret
int3
push
outsb
outsl
pushf
or
dec
arpl
sub
cmp
mov
push
jne
sbb
xor
rolb
out
xchg
ret
mov
pop
divb
fwait
outsb
push
sbb
aad
mov
fiadds
sbbl
pop
arpl
xor
insb
lret
push
pop
fstpt
ret
push
jnp
das
xor
add
sbbl
imull
cmp
xor
mov
pop
int
imul
into
mov
mov
rol
mov
inc
sbb
int
mov
fdivl
mov
std
jle
pop
bound
xor
or
stos
mov
jg
daa
sub
xorl
arpl
test
les
push
or
out
and
mov
jne
movsb
mov
jp
lcall
jnp
int3
inc
xchg
aas
adc
xorl
mov
scas
xchg
mov
pop
mov
or
enter
fdiv
and
stos
mov
ds
push
enter
hlt
rcrl
sbb
fcomps
in
pop
rolb
int3
rclb
outsb
mov
mov
dec
push
ret
es
dec
jl
test
frstor
xor
mov
pushf
push
or
les
test
xchg
fcmovne
mov
add
mov
lret
in
mov
adc
std
pop
adc
lock
fimuls
in
sub
push
fwait
add
data16
aam
popa
jbe
pop
sbb
hlt
lahf
aam
arpl
add
mov
loope
and
cmp
mov
mov
mov
neg
cmp
je
jb
mov
or
andb
push
cmp
jns
mov
sub
divl
nop
bound
pop
fnsave
xchg
div
mov
mov
push
lahf
rcll
fisttps
stos
sbb
pusha
pusha
push
pop
push
push
rcrl
sub
pop
dec
jg
jge
mov
sahf
adc
in
repz
jge
in
repz
jle
packssdw
cwtl
push
je
movsb
cld
xchg
push
push
jno
or
jecxz
cmp
leave
cltd
mov
int3
hlt
xchg
fildl
lret
cmc
es
sub
in
push
les
js
ret
in
adc
pusha
loope
cmp
js
mov
lret
sbb
sbb
adcl
fwait
cli
movsl
cwtl
sbb
cli
ror
hlt
pop
or
add
dec
or
push
fldenv
push
inc
mov
xchg
cmp
inc
divl
mov
into
lods
xor
push
pop
data16
sbb
or
mov
sub
mov
sub
or
jge
mov
xor
pop
sarl
fstpt
jmp
scas
inc
call
push
hlt
inc
jl
add
ljmp
pop
out
cmpsb
ret
push
arpl
pop
popf
std
mov
or
mov
xor
movd
test
add
push
pop
out
xchg
cmpsb
leave
aaa
loopne
mov
xchg
fnstcw
fldl
mov
xor
rclb
xor
jno
lock
pop
xor
aam
dec
movsb
rolb
lret
fsubl
in
mov
out
sub
mov
sbb
jl
mov
ret
inc
insl
lahf
loopne
pop
cmpsb
mov
je
xchg
lods
call
sahf
cmp
das
mov
imul
xor
in
and
adc
aad
jnp
insl
jae
push
daa
and
mov
adc
fs
jecxz
jne
scas
sbb
ljmp
mov
xor
and
loopne
arpl
shlb
std
push
out
orb
jne
lret
test
sub
sub
xor
jno
push
sub
dec
mov
add
cmc
xchg
mov
jecxz
mov
mov
aam
and
jle
adc
push
outsl
push
jmp
or
out
movsb
shl
std
sub
inc
adc
pop
push
add
push
idivl
cmp
pop
out
xchg
sub
push
xchg
xor
popl
outsl
push
test
jmp
popf
add
xchg
lret
inc
sbb
mov
loope
mov
in
ja
fcoms
repnz
ds
divb
adc
je
shrb
rcl
dec
out
mov
cmpsb
in
dec
dec
mov
or
dec
jnp
mov
or
mov
pop
int
jnp
sbbb
dec
insl
les
xchg
lahf
fisubs
cmp
repz
mov
cmp
xchg
xchg
les
or
and
scas
inc
jbe
mov
stos
xchg
add
dec
add
mov
fwait
lahf
outsb
data16
adc
jecxz
ret
cmpsl
shlb
mov
or
scas
pop
sub
mov
mov
add
icebp
jae
add
jl
inc
roll
pop
fadds
xchg
mov
je
addr16
mov
dec
aaa
dec
test
call
cmp
adc
shlb
xor
or
xchg
pop
je
imul
or
jbe
pushf
mov
dec
add
pop
mov
cs
lcall
and
push
mov
out
mov
xor
lds
sub
repz
imul
push
aam
aad
push
xlat
cmp
sub
ss
cmpsl
mov
into
mov
std
xor
add
fists
xchg
outsb
clc
sub
push
fldenv
lock
repnz
adc
shl
mov
je
inc
fxch
mov
mov
enter
push
imulb
pushf
xor
ret
fwait
xor
jne
lcall
push
out
lret
mov
testl
xor
adc
push
sbb
jnp
dec
cmp
mov
jnp
and
jecxz
dec
imulb
mov
add
sub
and
sub
xchg
pop
cmp
mov
mov
inc
sbb
jg
push
subb
idivl
push
sub
add
lods
push
and
dec
in
cmp
test
test
and
cwtl
hlt
jg
fimull
test
add
iret
scas
sarl
icebp
push
repz
add
cmpsb
xchg
jns
cmp
xlat
in
and
cli
cmpsb
outsb
dec
fisubs
clc
pop
fstpt
les
add
mov
lcall
xlat
push
dec
mov
popf
add
mov
xchg
js
mov
lods
pop
cmpsl
cmp
xchg
sbb
in
pop
shlb
lods
mov
push
push
scas
dec
xchg
xchg
pop
push
mov
push
cwtl
xor
mov
out
and
xor
adc
insb
dec
add
aad
mov
dec
xor
mov
call
dec
jae
aas
mov
shlb
jg
pop
in
call
add
rorl
loope
jns
ja
pop
mov
fdecstp
jns
pop
jg
sub
inc
gs
push
push
out
add
pop
pop
push
inc
pop
insl
jmp
jl
popa
dec
xlat
movsb
and
mov
leave
dec
jle
mov
push
mov
xor
inc
mov
mov
or
xchg
test
mov
adc
mov
in
jne
imul
xchg
push
jns
loopne
jo
push
xchg
test
mov
mov
push
clc
mov
addr16
push
rcll
enter
dec
xor
cmp
stos
rorb
mov
pushf
into
cmpsb
mov
sub
popa
in
shrl
sub
push
mov
mov
fcom
ret
repnz
xchg
jbe
nop
movsb
and
ret
pop
lods
fwait
call
xor
and
imulb
jp
push
pop
adc
lods
inc
outsb
outsb
xor
popa
shl
shll
sbbl
jbe
or
pop
int
xchg
sub
sbb
aad
cmc
xor
repnz
push
cmp
cmpsb
cs
cmp
push
mov
out
xorb
lret
dec
cmp
arpl
fnstcw
jne
fs
cwtl
imul
mov
jg
rolb
add
sbb
pop
pushf
fisubrs
adc
popa
sarb
pop
jno
fsubrs
lea
mov
mov
mov
push
push
outsb
inc
mov
cmc
lock
cltd
adc
push
insb
xchg
add
adc
scas
sub
popf
in
sbb
in
testl
cmpsl
fisubrl
loop
dec
cmp
jmp
mov
mov
and
pop
jl
sub
mov
clc
outsb
pop
ret
mov
in
sbb
inc
cmp
sub
shlb
or
fsubrs
scas
dec
fidivs
pop
push
outsl
dec
xor
and
std
xor
lret
icebp
jnp
arpl
pop
decl
mov
ds
scas
jb
insl
int3
ds
daa
and
mov
jno
arpl
cmp
popa
and
xchg
and
push
bt
fists
std
sbb
or
jecxz
push
scas
aad
imul
or
push
in
cmp
or
xchg
pop
xor
lahf
clc
rol
sub
inc
inc
mov
or
test
movsb
cwtl
pop
clc
mov
mov
mov
push
stos
xchg
adc
pop
mov
lea
sub
or
out
test
cmp
mov
mov
jp
cmpsl
aas
cmp
loope
in
fildl
adc
ret
ljmp
pop
push
std
cli
mov
sub
pop
jl
sub
das
adc
sti
cltd
xchg
add
pop
push
add
les
hlt
data16
sub
mov
xor
mov
dec
xchg
jge
mov
sbb
in
in
fsts
loop
ss
gs
lock
inc
jle
mov
scas
les
or
cltd
dec
cld
sub
inc
sarb
sbb
xchg
imul
mov
mov
push
cmp
gs
outsb
inc
enter
xchg
je
cli
cmp
call
mov
jbe
movsb
cs
lods
outsl
nop
test
loopne
fs
and
lock
stos
iret
inc
sub
dec
mov
adc
leave
popf
mov
mov
jp
xchg
addl
lea
mov
jae
sti
push
adc
shrl
cld
call
mov
inc
out
les
inc
sar
push
sbb
bnd
aas
test
fcmovb
pop
mov
adcl
mov
add
jno
stos
cmp
iret
xchg
xor
add
outsb
cltd
lcall
jp
xchg
mov
mov
jbe
insb
es
ss
outsb
imul
pop
insl
movlhps
add
fisubrs
pop
pop
lods
arpl
sbb
test
jo
sbb
pop
sub
mov
dec
out
push
xchg
add
stos
jl
ret
shll
jp
jns
adc
push
sbb
iret
inc
mov
push
js
mov
ja
sub
sbb
std
xchg
and
push
mulb
inc
das
mov
popa
mov
ja
std
cs
or
and
mov
decl
stos
arpl
xlat
jbe
mov
pop
xchg
out
ja
int
jp
cmpsl
xor
adc
ret
out
fidivs
push
loopne
cmc
mov
inc
jmp
loopne
xchg
dec
xor
popf
pushf
sub
out
push
repz
inc
lcall
pushf
popl
xor
lods
js
dec
xchg
cmp
shl
inc
out
push
divb
pop
fcoml
popa
aad
xchg
lods
call
inc
mov
mov
xor
into
sbb
xor
shr
mov
cmpb
dec
fistpl
test
mov
test
sub
xor
push
leave
rcrl
add
push
mov
lret
lods
stc
mov
xor
xor
fildll
inc
popl
mov
dec
xor
scas
jbe
jnp
rcll
andl
inc
push
push
mov
inc
mov
xadd
movsl
add
fneni(8087
mov
iret
dec
int
dec
pop
sbb
lods
or
dec
into
pop
sub
clc
int3
inc
or
pop
xchg
int
mov
mov
inc
inc
mov
fdivrs
xor
or
mov
pushf
lahf
cld
les
iret
lret
inc
ficompl
dec
jo
inc
push
pushf
lds
pop
fst
mov
sub
sbb
cmp
addr16
arpl
rcr
mov
inc
add
inc
push
cmc
in
pop
cmpsl
les
jnp
mov
stos
ljmp
cmp
add
xor
pop
add
loop
xor
fisttps
ficoml
pop
call
jl
push
push
in
test
into
std
sbb
mov
xchg
or
test
outsb
pop
or
ficoms
ja
jb
push
jecxz
mov
sbb
dec
mov
xchg
divb
push
lret
fdivrl
test
insb
pop
pop
push
sbb
rcrb
nop
aaa
imul
push
orl
sbb
out
idivl
aad
sbb
cld
cltd
repnz
xor
mov
jl
xchg
stc
jecxz
sub
jmp
cmp
dec
rorl
out
cmp
fabs
adc
lret
jnp,pt
cltd
push
mov
ret
ja
cmp
cmp
adc
sbb
sahf
dec
out
mov
jb
jmp
cmpsl
mov
mov
arpl
loopne
lret
clc
cmp
mov
xor
xor
pushf
stos
lods
push
test
int
js
int
push
test
sub
xchg
adc
jmp
addr16
mov
and
pop
call
loopne
mov
test
mov
mov
push
out
je
ds
mov
pop
dec
loopne
mov
mov
inc
sub
xor
test
or
sbb
pop
pop
aam
mov
pop
adc
mov
js
cwtl
or
rorb
mov
cltd
popf
fsts
sarb
jecxz
aas
test
pop
cmp
sbbl
xor
je
inc
cmp
sub
xchg
push
xchg
pop
jo
xchg
in
sbbb
jmp
xlat
mov
loopne
addl
pop
jle
sub
repz
gs
mov
mov
lret
sbb
mov
jge
inc
mov
shlb
xchg
out
pusha
ret
xor
nop
jo
mov
or
gs
repz
push
sbb
iret
stos
adc
jnp
inc
js
js
jle
testl
mov
jmp
cmp
daa
sbb
dec
cltd
test
mov
mov
push
adc
push
test
into
or
fwait
mov
pop
int
inc
enter
mov
mov
ret
out
aaa
inc
andb
mov
test
lcall
lret
push
mov
aad
push
jne
imul
scas
mov
bound
dec
xchg
sub
iret
lods
mov
int
call
addb
into
mov
dec
jo
pop
sbb
test
xchg
or
es
cld
or
leave
mov
bound
out
jge
mov
icebp
push
psadbw
popf
cmp
mov
add
push
fsubrs
and
inc
lock
pop
std
cmp
dec
sub
aad
pop
scas
sub
pop
mov
repnz
pop
inc
push
aas
pop
sub
subb
mov
repz
jb
cwtl
mov
sub
push
fucomi
mov
inc
xchg
xor
mov
add
jl
cmp
stos
lea
inc
cmc
cmc
mov
cmc
jl
nop
mov
sub
int3
jae
loopne
aas
xchg
outsl
popa
mov
and
cmp
repz
cwtl
imul
sbb
xchg
mov
push
mov
push
fnclex
cs
cmp
sbb
cmpsl
xchg
aad
scas
dec
cwtl
je
fcom
scas
sbb
pushf
cmp
push
lock
sub
sub
imul
jnp
test
push
ds
scas
fwait
imul
jbe
mov
lahf
cmpsb
test
mov
push
ret
leave
xchg
mov
stc
rol
lcall
repnz
xlat
in
mov
xor
out
ljmp
xchg
mov
imul
pop
sbbl
sub
add
xchg
data16
iret
outsb
pushf
mov
pop
or
insb
ljmp
mov
xchg
push
js
int
push
pop
xchg
xor
outsb
lret
mov
dec
jne
es
xchg
subl
mov
xchg
fistpl
repz
in
jnp
mov
xchg
repnz
sbb
dec
pop
sbb
dec
pop
jno
mov
idivb
icebp
xchg
cmc
cmp
comiss
push
dec
repz
jns
cwtl
jbe
iret
fstpl
bound
push
mov
inc
add
adc
hlt
and
inc
jns
loop
sub
dec
sub
fdivrs
xor
or
cmp
testb
xchg
shlb
lahf
jmp
scas
es
pop
cmp
pushf
data16
sbb
out
cmp
rcrl
pop
dec
fisubrl
push
sub
test
rcll
dec
fsubs
xor
in
xchg
dec
adc
rcrb
jge
xor
movsb
jno
inc
xor
leave
and
and
xchg
cltd
sahf
inc
lret
inc
adc
cmp
mov
adcl
test
sar
lahf
sub
push
insl
jbe
xor
pop
mov
pop
push
pop
sbb
mov
cmpsb
out
lods
stc
xor
sti
frstor
lahf
xchg
sbb
sbb
leave
push
jmp
cmp
mov
pop
xchg
adc
fmull
lods
mov
adc
pop
push
add
or
inc
lcall
xchg
or
fnstcw
ljmp
or
pusha
and
cmp
data16
lret
cmp
ljmp
das
xchg
inc
pop
add
mov
andb
scas
mov
jbe
pop
in
in
jbe
adc
les
call
mov
imul
cmp
fistpl
stc
loope
or
cmpsl
test
fwait
xchg
mov
flds
xchg
andl
and
arpl
stos
rcrb
rclb
cmp
push
je
jge
mull
out
ljmp
xchg
cmp
loop
data16
movsl
xchg
fistpll
shll
xchg
fisubs
mov
push
pop
subb
aad
sub
dec
cmp
pop
adc
pop
pop
mov
push
sti
add
ja
ss
test
ljmp
mov
out
cmp
mov
dec
add
mov
adc
xorb
pop
xchg
or
xor
movb
mov
inc
fists
mov
dec
sbb
inc
add
mov
xor
mov
adc
movsb
pop
loop
and
sbb
mov
lods
popf
mov
mov
inc
mov
rclb
inc
adc
push
rcrb
stos
dec
fsubrs
pop
mov
xchg
cmp
sbb
fdivr
pop
inc
push
fdivrl
rolb
popf
push
cmpsb
and
and
lods
jmp
cmp
mov
inc
xchg
pop
push
lods
test
pop
sbb
iret
xchg
add
or
scas
das
out
fs
out
lcall
mov
jp
stc
repz
xchg
loopne
lods
mov
scas
not
xchg
aad
push
and
and
pop
loope
ret
cmpsb
cli
push
in
aam
mov
out
rolb
out
inc
inc
mov
adc
test
adc
movsl
xor
jmp
rolb
sub
icebp
test
insb
inc
dec
loopne
inc
ret
or
loopne
jg
adc
pop
or
fwait
les
clc
mov
or
push
in
mov
dec
mov
adc
jmp
in
rcll
push
pusha
enter
outsb
lock
xchg
dec
cmc
jmp
dec
add
mov
addr16
push
mov
or
and
inc
xor
cmp
mov
clc
les
mov
dec
jno
pop
mov
lcall
icebp
xchg
arpl
push
dec
lods
stc
push
jmp
lds
xchg
punpckhbw
lcall
jbe
jb
cmp
push
jmp
inc
fwait
push
sub
rcrb
lret
iret
mov
js
or
pusha
mov
fcomp
je
pop
mov
xchg
cmp
mov
pushf
aam
or
push
cmp
add
mov
mov
push
movsb
sarb
gs
cwtl
cmpsl
stos
and
aam
xchg
xchg
clc
std
imul
movsl
adc
jmp
dec
sub
sub
mov
mov
repz
sbb
idivl
dec
dec
out
xor
aaa
sbb
sbb
xchg
clc
push
pop
gs
sub
je
iret
outsb
adc
jge
rcrb
mov
aad
push
xchg
cmpsb
fsubp
insl
push
jg
insb
xor
jnp
xor
rorl
iret
add
xchg
insb
or
stc
call
cmpsb
movsl
sub
filds
cmp
pop
pop
mov
pop
int
pop
mov
or
test
fwait
xor
aas
inc
lret
mov
data16
outsl
push
or
popa
outsb
sbb
pop
fistpl
mov
jge
hlt
jg
out
mov
pusha
or
mov
cmp
es
insl
insl
push
into
in
xlat
mov
aam
movsl
mov
dec
lods
fbstp
mov
add
jno
ret
jo
or
cmpsl
fptan
fdivrs
mov
sbb
ss
mov
mov
loopne
rolb
repnz
jbe
and
cmp
aam
push
jl
lea
sub
je
cmp
xchg
and
rcrb
out
dec
xor
roll
mov
sub
xchg
cmp
mov
xchg
int
sbb
jecxz
inc
adc
lret
stc
fdivrl
cmp
stc
mov
adc
rcll
je
pop
dec
insb
xchg
inc
xor
mov
pop
imul
pop
fucomip
lcall
jbe
xor
sub
xorl
pop
cmp
scas
cmp
repz
jle
das
clc
and
in
insl
mov
sbb
pop
jb
pushf
adc
dec
mov
aas
arpl
inc
push
arpl
jle
insb
loope
insl
aad
arpl
jge
movsb
mov
sub
push
lahf
xchg
mov
mov
mov
adc
imul
icebp
add
jno
nop
fucomip
ret
out
std
cmp
adc
ljmp
out
dec
mov
sub
xor
lcall
pop
jnp
push
adc
ljmp
cmp
je
cmpb
mov
sub
iret
fwait
inc
xor
idivb
dec
loop
adc
cmp
inc
cli
cmpsb
imul
sti
fnsave
push
lods
xor
cld
int3
filds
and
mov
loopne
jp
scas
mov
push
les
cmpsl
xchg
jecxz
mov
cmp
cmc
xlat
sub
cmp
inc
repz
inc
into
push
dec
mov
into
mov
xchg
je
out
aaa
and
adc
or
in
pop
clc
shrl
jecxz
and
mov
loop
adc
push
ljmp
inc
mov
dec
jbe
pop
gs
enter
out
or
xor
leave
xlat
int
fs
inc
and
inc
test
test
repz
stos
dec
int3
pop
cmp
jmp
movsb
or
mov
das
add
xor
sub
sbb
adc
inc
data16
inc
xorb
xlat
jl
jg
sub
mov
mov
daa
icebp
cmp
dec
imul
xchg
stos
or
push
stc
cmp
clc
mov
jge
or
jns
pop
arpl
sbb
sti
pop
dec
pop
out
xchg
and
scas
mov
bound
inc
jle
and
xchg
cmp
pushf
jno
xchg
inc
add
popa
pop
or
or
imul
es
lret
es
icebp
mov
imul
rep
rcr
mov
push
or
add
test
mov
push
pop
cmp
push
mov
add
aas
sbb
ss
pop
add
testb
xor
cmp
pop
or
cltd
inc
test
xchg
cmpb
test
push
or
push
push
dec
dec
es
insb
mov
sbb
jecxz
dec
cmp
aaa
lcall
outsl
sbb
pop
and
sarb
icebp
enter
shrb
lea
add
cwtl
mulb
int
cmp
jo
andl
movntq
ret
into
inc
inc
leave
add
xchg
lret
loope
inc
sub
fistl
das
jecxz
mov
faddp
mov
inc
dec
jb
ljmp
roll
orb
stos
sbb
and
sub
xchg
mov
cmp
les
inc
insb
xor
sbb
testb
fxtract
dec
push
xor
in
sub
push
je
cltd
push
and
jmp
push
in
hlt
into
inc
movsb
or
mov
fdivs
push
loope
inc
mov
pop
les
insb
push
rcll
les
mov
lcall
and
adc
in
inc
stos
bnd
popa
xor
jne
or
out
inc
pop
lock
fs
sub
arpl
and
je
lock
in
in
jne
jnp
mov
adc
notb
inc
je
flds
adc
mov
jno
xor
hlt
je
fdivs
je
xlat
push
mov
lods
mov
xchg
jle
insl
aaa
int3
rclb
hlt
add
xchg
push
xchg
inc
ljmp
lcall
xor
leave
out
and
pop
or
or
xchg
repnz
jno
xor
xor
jl
dec
in
dec
cli
sbb
cmp
loop
push
data16
jae
jecxz
aam
lods
imul
sbb
jno
mov
and
popa
mov
push
xchg
cmpsl
mov
call
add
sbb
inc
jbe
jb
inc
fsubl
test
dec
mov
test
gs
inc
outsl
or
sub
xor
cmp
or
aaa
lods
sub
push
pushf
adc
push
sub
and
or
mov
daa
jmp
mov
or
pusha
dec
push
cmp
inc
push
mov
mov
clc
ss
pop
adc
adc
push
pop
hlt
fwait
lock
push
stos
popf
ja
push
imul
inc
pusha
ret
dec
arpl
and
push
ljmp
mov
xchg
cmp
add
cmp
cmc
sub
pop
lret
std
add
sub
mov
aaa
xor
in
fdiv
mov
data16
jle
add
sbb
mov
call
mov
rorl
std
jge
in
mov
in
popa
xor
cmp
and
dec
in
adc
push
inc
test
sti
pop
adc
andl
mov
aaa
sbb
sub
nop
xchg
inc
add
stos
sbb
fildll
or
into
cmp
mov
loopne
push
inc
xchg
leave
ret
sub
jge
fldt
xchg
adc
je
push
das
fwait
and
push
xor
lea
push
dec
insb
push
test
fistl
aam
xor
or
sub
js
aas
or
int3
jge
cld
cmp
pop
cmp
adcl
outsl
jge
scas
cmc
inc
push
arpl
frstor
xchg
mull
jae
inc
adc
rcll
cmp
xor
push
out
adc
xor
mov
mov
negb
mov
insl
shrl
test
pop
pop
push
push
push
outsl
add
scas
cmp
jns
cmp
fwait
leave
test
mov
int3
xchg
fistps
jbe
subl
mov
sub
xchg
lcall
mov
add
insb
popf
lods
cmp
std
pop
fiadds
int3
cli
test
mov
bound
aam
cmp
xchg
subl
fwait
and
lods
in
mov
addr16
movsl
popf
inc
jmp
jg
push
mov
pusha
mov
sahf
mov
add
push
jmp
icebp
dec
inc
cmc
imul
mov
mov
xor
push
out
lret
mov
mov
adc
mov
mov
fistpll
jnp
lahf
mov
xchg
ds
leave
leave
hlt
jg
ret
jp
loop
xchg
loope
pop
clc
jo
in
dec
ss
xchg
jle
out
xchg
lods
lods
rcl
pop
jecxz
or
push
and
or
jecxz
out
adc
loope
sub
jge
or
mov
mov
fcomps
and
ret
cmp
xor
mov
inc
cmp
pop
loope
stc
pop
xchg
push
into
xchg
pushfw
sti
dec
leave
xor
jns
ljmp
popa
and
test
les
push
cmpsb
ljmp
negl
push
adc
pusha
in
cmpsl
xorb
je
jecxz
mov
lea
dec
xchg
adcb
xchg
out
and
int
aas
clc
insb
rorb
mull
xchg
xlat
in
xchg
sub
add
inc
or
push
adc
outsb
test
out
cmp
xor
lahf
cwtl
jle
insl
std
inc
rcl
jb
imul
cwtl
ret
in
and
lods
mov
xchg
stos
xlat
jae
or
add
xchg
sbb
test
and
shrl
mov
repnz
les
repnz
pop
or
fildl
loopne
in
or
pminsw
icebp
pop
daa
or
push
mov
movsl
xchg
ret
lds
insb
sub
jp
pop
lret
insl
out
mov
jb
addr16
mov
leave
mov
mov
shll
dec
xchg
and
or
ja
lods
in
sub
popa
cmp
cwtl
dec
xor
test
mov
out
mov
mov
mov
pushf
jbe
orb
xor
inc
pop
out
sub
cwtl
mov
add
xchg
mov
in
and
cltd
ja
cld
scas
cmp
out
pop
aad
push
jl
sbb
xchg
outsb
push
push
adc
add
mov
push
lahf
cmp
sbb
pop
sbb
fdivl
in
adc
and
cmp
and
mov
cmp
sbb
loopne
cmp
jno
data16
cmp
mov
mov
lahf
mov
cmp
mov
add
pop
xchg
ret
dec
or
pop
push
pop
inc
xor
mov
call
push
test
mulb
repz
sti
pop
loope
push
xchg
repnz
cli
push
or
lds
xor
xchg
lods
movsl
incl
push
stc
pop
jmp
outsb
lret
mov
jae
lds
mov
sub
mov
and
or
or
mov
int3
das
sbb
ds
mov
mov
mov
roll
fimull
imull
das
xor
out
outsb
aas
mov
std
sub
orl
push
and
data16
xor
or
mov
or
mov
cs
ja
pushf
xchg
inc
jns
cmp
push
push
mov
pop
add
lahf
arpl
rcrb
pushf
in
xchg
or
inc
pop
test
pop
lea
mov
cmp
jo
sarl
mov
mov
sbb
mov
sahf
sbb
xlat
xor
out
pop
in
cmp
push
or
add
jo
mov
mov
scas
or
mov
sub
jnp
jmp
dec
test
das
leave
mov
movsb
xor
fdiv
call
pop
lret
js
cmp
xchg
xchg
popf
rcl
push
les
jbe
add
fistpl
cmp
shll
out
movsl
leave
inc
cli
and
mov
sub
mov
cmp
aad
in
sbb
mov
dec
int
cmc
in
sub
stos
cld
or
scas
ljmp
adc
push
movsl
jbe
stc
dec
dec
cld
sbb
leave
or
mov
xchg
jmp
int3
cmpsb
pusha
nop
and
scas
pop
mov
inc
pop
cmp
or
mov
call
rorb
mov
or
sub
dec
mov
cmp
mov
mov
out
shrl
andb
adc
lcall
loop
in
rclb
cwtl
pop
cmpb
xor
lods
test
inc
insl
pand
rcll
cmp
pop
mov
cmpsb
jmp
orl
jbe
mov
scas
cmp
dec
add
in
xor
repnz
cld
and
sarb
mov
or
xchg
stos
loopne
and
push
lret
fbld
lret
orb
mov
xlat
hlt
fmull
push
out
lret
sbb
movl
xchg
dec
push
mov
sub
hlt
loopne
fnstsw
sahf
fwait
dec
mov
hlt
pop
repz
out
xchg
xor
mov
push
mov
push
fwait
stos
fldt
cmp
push
arpl
pop
loope
xor
pop
adc
inc
or
repnz
mov
jge
mov
aas
sub
je
or
leave
int3
mov
xor
dec
xor
shlb
or
pop
xchg
leave
push
aad
dec
pop
inc
paddusb
enter
ret
test
inc
adc
cmpsb
push
cmpsl
adcl
xor
mov
aaa
sbb
push
lret
jae
pop
mov
cmp
sbb
or
xor
jno
cmp
repnz
pushf
shlb
jae
into
jmp
and
rcrb
cltd
or
add
push
sub
sub
xchg
xor
repnz
movsl
xor
gs
dec
aad
jp
aaa
ffree
dec
dec
mov
ficompl
cmpsl
lahf
mov
jnp
and
push
inc
mov
and
out
jecxz
je
inc
dec
into
mov
lahf
mov
push
xor
je
adcl
fldcw
test
mov
cs
cwtl
or
outsb
or
loop
jbe
fimull
dec
cmp
ljmp
aad
add
jo
pop
jg
add
xor
lahf
mov
out
pop
mov
jp
sub
repz
int3
dec
aas
inc
or
fnsave
dec
push
or
inc
push
xor
cld
repz
dec
jl
push
pop
mov
mov
or
jl
jns
push
xor
or
hlt
mov
push
push
lods
add
test
sbb
mov
add
movsb
mov
push
xor
dec
and
cmpsb
push
lret
and
scas
jl
dec
lcall
icebp
inc
mov
xchg
outsb
gs
xchg
loop
lock
add
lock
idivb
or
dec
loope
jno
cmp
cli
jp
mov
mov
jmp
add
je
sahf
pop
pusha
push
push
jmp
sub
les
cmp
push
sub
imul
int
arpl
adc
adc
cmc
mov
or
cmp
sub
mov
dec
push
lret
cmp
loope
mov
and
mov
push
int
imull
mov
jl
pusha
ljmp
xor
jecxz
stos
push
ljmp
push
jae
adc
mov
xchg
inc
out
xor
sub
mov
mov
or
dec
jae
cs
das
xor
outsl
mov
or
andb
mov
mov
imul
pop
in
mov
cmp
js
xor
mov
repz
out
ljmp
sti
setge
lock
jge
loopne
mov
andl
call
test
outsb
dec
js
adc
std
push
jne
and
pop
cmp
mov
adc
push
shlb
cmp
scas
or
mov
subl
and
stos
cld
xor
push
lcall
inc
sbb
lods
mov
sbb
mov
jae
or
int
clc
shlb
jg
sub
dec
cmp
inc
adc
pop
movhps
dec
jae
cmpl
xor
xor
fcmovnu
jmp
xchg
mov
and
mov
test
pop
roll
jne
fistl
or
loope
pusha
mov
push
mov
sbb
movsl
push
lret
stos
and
push
push
loopne
popf
rolb
jb
or
inc
dec
jle
sbb
mov
xlat
add
aad
test
mov
pop
mov
call
cmp
mov
lret
icebp
shll
ds
jg
stc
xor
push
aam
ficoml
mov
ficoms
cmovl
dec
adc
mov
inc
mov
inc
int
js
aad
cmc
cmp
inc
iret
adc
imul
je
jb
add
sub
idiv
icebp
mov
fsubs
ja
add
fwait
push
or
ret
lds
xor
adc
cmp
push
lock
add
cltd
ljmp
add
cmp
pop
imul
push
popf
leave
ficoms
dec
sbb
int3
jge
xor
out
lret
sub
sub
add
test
mov
aaa
loop
push
push
pop
or
sbb
push
sbb
lret
out
sti
int3
dec
mov
scas
add
jae
push
movsl
addb
and
xchg
jg
sub
cmpsl
cmp
lea
and
xor
iret
cmp
pop
lods
js
rcll
dec
cmpsl
dec
lea
pop
stc
pop
cltd
dec
cmp
or
lcall
roll
fidivrl
pop
adcl
sahf
sub
das
testl
fisubrs
repz
adcl
jae
dec
jne
sbb
xor
jl
mov
data16
sbb
or
mov
sub
fistpl
push
loop
push
outsl
or
lea
in
shll
xor
pop
adc
xchg
stos
enter
dec
js
nop
inc
pop
daa
xchg
lcall
add
clc
xor
test
insl
lret
ja
sbb
xchg
incb
adc
sbb
adc
insb
mov
sahf
movsl
inc
loop
cmp
cwtl
xchg
cmc
js
sbb
loop
out
imul
test
leave
adc
arpl
fisubrs
popf
mov
and
fdivrl
lret
mov
ja
or
test
mov
inc
shrb
arpl
push
and
es
sti
inc
dec
bound
aam
push
enter
test
out
ljmp
es
sarb
shll
inc
adcl
adc
jo
or
xor
dec
push
push
mov
sahf
lods
add
repnz
mov
repz
out
arpl
fmull
daa
mov
jnp
mov
inc
in
inc
stos
std
add
and
jno
rcl
push
jmp
or
cmp
add
or
jl
ds
adc
jns
xor
push
movsb
loop
push
fwait
inc
rcrb
xchg
imul
js
adc
or
or
or
jb
or
or
pop
inc
js
loope
xchg
inc
mov
pop
loop
iret
pop
cmp
adc
add
xor
rcll
mov
lods
ret
fcmovu
and
sub
cmp
cmp
aas
mov
pop
ja
xlat
test
ljmp
ds
pusha
adc
lahf
cmp
and
int
insb
sbb
aaa
inc
sub
aad
adc
add
stc
enter
add
inc
leave
cmp
outsb
loopne
popw
push
cwtl
dec
xor
shl
dec
push
pop
das
dec
popf
fidivrs
push
or
push
imul
rorl
mov
xchg
outsb
hlt
push
cmpsl
mov
adc
xor
adc
jmp
cmpb
xchg
push
mov
in
aaa
lods
xchg
iret
mov
loope
mov
cli
sbb
cmp
aam
divb
cmp
cmpsb
cs
test
fwait
push
lods
inc
jp
and
jmp
aaa
dec
ds
pop
pop
adc
jl
xor
jg
lods
addr16
test
push
pop
leave
mov
adc
lods
cmc
cmp
lret
jne
cmp
sub
sbb
repnz
push
or
push
call
push
sbb
jo
inc
sub
pusha
aad
mov
mov
lret
sub
add
jmp
iret
or
jl
sub
cmpsl
loope
jl
popa
or
cs
cmp
push
imul
out
lcall
xchg
sub
sub
and
clc
xchg
sbb
adc
cmc
std
pop
inc
cmc
inc
pop
pop
adc
mov
cmpsb
jns
jg
outsb
filds
sbb
or
sub
test
dec
pop
cld
sti
ljmp
inc
dec
and
sbb
mov
add
scas
xchg
xor
shr
inc
sbb
inc
mov
dec
lcall
inc
enter
scas
mov
mov
cmp
sarl
lret
nop
mov
fwait
ret
test
filds
cltd
outsl
int
cmp
fcoms
dec
shr
pop
or
mov
xor
add
jle
and
cwtl
mov
sub
outsl
sub
add
mov
into
or
or
push
add
aad
das
movsb
pusha
dec
in
push
stos
imul
mov
jns
fiadds
aas
test
aam
pusha
jno,pn
xchg
mov
shll
popa
or
adc
cmp
fimull
repnz
fdivrl
popf
fmul
negb
dec
mov
pop
clc
jle
fcoml
sub
scas
pop
dec
cmp
sbbb
out
jle
ret
pop
mov
mov
test
pop
pop
lret
lds
fcom
loope
mov
dec
in
lock
add
add
mov
xchg
call
jmp
xchg
lods
add
add
test
cmpsl
sbb
pushf
lds
sub
pop
add
fisubl
inc
push
mov
jge
pusha
incl
or
cmpsb
xchg
dec
dec
test
push
out
ljmp
dec
cmp
xchg
in
pop
mov
mov
insl
ljmp
lea
outsl
jp
pop
pop
or
aas
dec
repnz
or
insb
ret
popa
cmp
pop
jb
and
mov
fdivs
shl
imul
push
xor
xor
jne
push
fisubrl
jl
addr16
or
add
and
mov
xchg
inc
les
pop
jl
add
fists
mov
xchg
pminub
fistpll
push
mov
sbb
jae
mov
adc
cmp
xchg
hlt
pushf
imul
jmp
dec
fdivl
shl
movaps
jb
roll
sti
inc
imulb
int
sub
pop
mov
push
mov
jmp
out
xchg
adc
jns
mov
pop
scas
push
xor
push
dec
mov
dec
dec
data16
in
and
adc
inc
inc
sbb
sub
ja
stc
jnp
ljmp
sub
idivl
outsb
or
out
mov
out
sub
popf
mov
push
cs
aam
cmpsl
mov
arpl
or
pop
fisttps
and
out
stos
dec
lea
jmp
movsl
and
add
or
xchg
cmp
push
cmp
sti
mov
sahf
lcall
call
xor
push
pop
mov
ret
mov
mov
adc
jne
pop
loop
xor
mov
inc
fsubrl
call
fadds
sub
push
cmp
pusha
and
push
lahf
pop
in
sbb
add
sbb
pop
repnz
mov
pop
rcrl
pop
jge
pop
or
push
outsb
fwait
cld
xorl
add
jg
ds
std
jae
mov
mov
popa
ljmp
leave
or
pop
pop
push
dec
push
stos
iret
test
rcr
pushf
sub
nop
xchg
lret
stc
cs
mov
sub
loop
clc
sub
jg
orl
scas
mov
mov
push
insl
fstl
add
testb
popa
movsb
in
or
imul
xorl
fnstsw
sub
insb
and
mov
push
jb
mov
mov
dec
pop
test
cmc
jg
mov
je
mov
pop
inc
push
mov
ja
in
daa
xor
mov
ljmp
test
xchg
pop
sahf
ret
fwait
stc
test
dec
out
push
loope
mov
js
iret
cmc
lcall
fildl
cmp
js
or
rol
mov
shrb
bound
repz
jo
dec
int3
jo
pop
fcompl
fidivs
test
popf
test
push
sub
inc
cmp
push
sub
leave
sbb
shl
fsubl
movsb
movsl
bound
mov
addr16
popf
jbe
popa
inc
pop
shll
aam
mull
loop
cmp
sub
out
rcrl
in
inc
loopne
jo
cld
in
in
aam
jle
test
lret
inc
gs
cmpsl
ret
xor
fldcw
jne
add
mov
fisttpl
push
mov
cmpsb
repz
lods
pop
out
popf
cltd
ds
mov
out
pop
push
xchg
dec
ljmp
movsb
jge
push
cmp
cmp
add
xor
into
sbb
pop
dec
add
out
jg
insb
xchg
test
add
hlt
imulb
test
popf
dec
rolb
dec
jg
jnp
fs
test
arpl
imulb
mov
push
icebp
dec
push
daa
ficomps
mov
inc
xchg
sbb
test
lea
sbb
add
inc
test
ja
mov
mov
loopne
push
popf
sub
mov
xor
pop
and
jp
dec
mov
mov
test
inc
push
andl
inc
mov
adc
lds
sahf
adc
dec
push
movsb
into
test
pop
fnsave
cmp
shl
mov
cli
fbstp
jne
mov
jb
mov
or
sbbb
imul
adc
shl
bnd
test
cmpb
aas
repz
sub
dec
mov
cmc
mov
jno
and
es
cltd
lret
inc
cmpsb
fistps
sub
addr16
inc
addb
mov
cwtl
pop
push
xor
ficompl
ret
mov
mov
mov
les
mov
fstpl
pop
call
mov
push
sbb
sbbl
or
arpl
cmp
imul
popa
scas
sub
pop
cmp
xchg
push
or
mov
ja
insb
sbb
in
sub
push
aaa
scas
fwait
out
add
xchg
arpl
mov
repnz
dec
xchg
xchg
inc
lahf
pop
push
adc
mov
jg
mov
popf
lret
sbb
gs
xor
or
pop
cmp
pop
push
hlt
in
mov
adc
jmp
xchg
ja
in
and
test
xor
popa
pop
or
test
xchg
sbb
stos
fs
mov
push
popa
in
movsb
sub
push
hlt
mov
sbb
mov
mov
mov
adc
mov
ret
sbb
rcll
call
dec
iret
xchg
pop
push
push
lods
out
sarb
lods
aaa
adc
in
testb
loop
add
sub
fs
dec
ficoml
outsl
mov
and
loop
mov
into
mov
push
subl
int3
scas
lds
fdiv
out
shll
movsb
ljmp
shrb
push
mov
in
aaa
subl
shrb
xchg
es
pop
sti
and
sbb
imull
sub
jp
jo
adc
sbb
add
outsl
xchg
add
ja
rclb
leave
es
or
pop
lcall
in
movsl
or
push
xor
adc
pop
jge
enter
sub
mov
ret
push
leave
in
test
jo
sbb
push
jae
or
adc
xor
sub
push
shrd
sbb
push
loopne
out
jb
mov
pop
nop
loop
xchg
pop
imul
adc
mov
inc
sub
out
ds
mov
push
mov
sub
pop
mov
out
push
hlt
pop
rorb
mov
jns
cmp
jmp
xorl
shl
pusha
cli
pusha
jne
movb
push
sub
mov
mov
jecxz
ret
and
rolb
jo
lea
cmp
fwait
lods
sbb
unpckhps
lret
cmpsb
pop
in
pop
movsb
into
das
test
jge
call
or
push
jge
pop
jbe
xchg
push
inc
pop
ret
stc
sub
sub
fisubs
jmp
outsl
rcll
inc
je
rcrb
cld
pop
push
sub
xchg
scas
jb
mov
je
push
bts
clc
inc
push
pop
xor
cmp
cli
add
or
xchg
xchg
sbb
jecxz
cmp
je
lods
mov
lock
imul
pusha
jmp
push
clc
jae
enter
mov
out
aaa
xchg
inc
xchg
out
ljmp
andl
out
xor
mov
push
imul
mov
push
sub
loope
sub
push
push
cltd
sbb
push
mov
mov
sub
cltd
rolb
leave
std
popa
adc
add
leave
idivl
dec
inc
cmp
outsl
cmp
sbb
repz
and
aam
rorl
mov
outsl
test
data16
pop
jl
shll
sbb
aad
dec
sub
loopne
add
pop
test
cwtl
push
sub
movsl
shlb
lds
mov
xor
and
pop
push
std
outsl
dec
cmovae
xchg
sahf
or
xchg
inc
pop
cltd
pop
inc
inc
pop
mov
add
xor
ss
sti
enter
add
pop
or
push
outsb
dec
sub
addr16
fcmovnbe
jg
xchg
leave
insb
pop
outsl
sub
in
cmpsb
cmp
pop
lea
in
pop
sub
mov
xchg
loopne
aas
aas
lahf
lds
repnz
push
adc
repz
iret
jl
and
xchg
jge
ljmp
mov
xor
lock
daa
adc
subl
and
adc
dec
pop
adc
cmp
lret
push
push
xchg
xor
xchg
or
jne
cmp
out
cmpsb
pop
in
icebp
cmp
mov
outsl
adc
les
ljmp
loop
movsl
add
ds
popf
iret
orb
rorb
cmp
mov
mov
fiadds
mov
fiadds
gs
loope
dec
movsl
mov
hlt
mov
inc
mov
dec
and
mov
loop
adc
and
mov
lock
stos
push
popf
sub
aad
fdivrs
inc
adc
jg
stc
push
push
in
jnp
sbb
inc
ljmp
dec
push
inc
repz
cmp
xchg
lds
popf
mov
mov
mov
pushf
push
test
sub
mov
sub
lret
adc
mov
in
jo
jp
out
incb
daa
aaa
cmp
in
jno
mov
xor
outsl
sub
aam
pop
or
fnstenvs
aam
or
test
fwait
out
xchg
add
bound
inc
jns
sti
lret
mull
arpl
out
rcll
fwait
stc
lods
andb
jb
stos
inc
repz
mov
cmp
test
xchg
das
mov
push
mov
fcompl
daa
test
mov
ljmp
add
sbb
push
xor
pop
call
lret
sahf
adc
cmp
push
lcall
ds
mov
jl
push
cmc
mov
mov
lods
loopne
dec
movsl
xchg
outsb
out
je
pop
or
addl
dec
popf
sbb
fisttpll
xor
dec
ret
ficoms
das
pop
rcl
pop
jno
filds
jno
pop
test
or
outsb
cwtl
ljmp
insb
jl
insb
dec
aad
cltd
inc
jl
cmp
mov
add
fsub
push
aaa
jnp
sahf
mov
outsb
adc
fwait
cmpsl
dec
aad
fsubrl
xchg
sbb
in
cmp
xchg
pop
test
jae
je
fs
mov
faddp
popf
xchg
add
sub
xchg
lret
rsm
lcall
pop
and
inc
movsl
sub
sub
stos
fwait
cld
leave
enter
push
dec
mov
mov
aam
stos
lret
xchg
inc
inc
lds
cwtl
rol
mov
xchg
and
testl
pop
mov
sar
mov
dec
nop
jo
pop
inc
fucomp
es
loopne
mov
cmp
add
push
insl
into
cmp
rorl
fwait
or
dec
out
or
leave
pop
bound
out
in
lea
clc
mov
jmp
push
adc
js
out
test
aam
js
dec
mov
or
data16
adc
jg,pn
imul
adc
rclb
mov
test
pop
call
mov
dec
cli
or
pop
dec
hlt
dec
xchg
mov
shll
cmp
inc
pop
xchg
cmc
xlat
mov
push
rol
push
dec
movsl
pop
in
push
test
cltd
add
in
testb
cmpsb
mov
inc
dec
roll
mov
loopne
mov
call
decb
scas
cmp
or
adc
in
or
xor
xchg
jo
sarl
or
jle
nop
cli
test
cmc
or
xor
xchg
jno
fisttps
cmpsb
mov
push
pop
mov
sahf
popa
lahf
sub
adc
jno
div
mov
pop
dec
adc
dec
mov
jp
jne
out
mov
sub
adc
mov
js
mov
inc
or
push
in
test
aaa
insl
sbb
inc
repz
jmp
lahf
adc
stos
mov
pop
stos
clc
dec
mov
inc
add
jecxz
ss
test
mov
cs
jmp
rolb
pushl
and
xor
out
pop
inc
jmp
loop
data16
enter
mov
sar
cli
cmpsl
dec
fldenv
sbb
mov
stc
inc
and
notl
in
and
push
mov
mov
jecxz
pop
sbb
add
lea
or
xor
mov
test
add
mov
mov
mov
std
jne
mov
or
int
sub
lods
sub
jp
fdivr
xchg
ljmp
jae
or
cmp
xchg
dec
adc
sbb
scas
inc
loope
push
sarb
mov
mov
cmp
sbb
or
out
sub
push
loop
dec
sbb
dec
jl
aam
sub
dec
mov
test
clc
stos
inc
ja
sub
sub
xor
jl
je
std
bound
cmp
mov
jno
negl
ja
into
and
add
cmp
lds
aad
mov
mov
mov
dec
stc
into
lcall
sub
call
mov
stc
daa
inc
xor
xor
cmpsb
and
push
mov
in
fmul
jno
sbb
push
js
movsb
nop
push
pop
shll
add
mov
repz
or
dec
icebp
mov
dec
adc
fisttpll
add
rcll
push
sbb
and
test
push
xor
adcl
mov
mov
sub
out
sar
cmp
mov
dec
adcb
imul
into
mov
dec
or
fmuls
push
push
daa
in
aam
loop
stos
insl
cld
push
mov
xlat
mov
sbb
bound
movb
out
lods
iret
mov
je
jns
arpl
mov
xchg
dec
imul
xchg
mov
pop
jb
or
dec
dec
int
mov
or
insb
inc
fstl
sbb
jb
out
cltd
fildll
push
aaa
das
mov
mov
fucomp
idiv
repz
nop
test
repz
out
or
leave
cmc
aaa
sub
cli
or
mov
cmp
cmpsl
mov
jb
aas
mov
nop
jnp
scas
pop
mov
inc
cmp
cmp
fdivrl
xchg
lds
hlt
mov
out
lret
mov
loope
lock
sub
fs
fidivl
push
cmc
dec
adc
fdivl
xbegin
rorb
cld
xor
rol
lret
pushf
sbb
and
decl
jecxz
xlat
nop
sti
dec
sub
ja
rorl
cwtl
or
and
pop
mov
cwtl
outsl
xor
mov
mov
mov
std
jnp
sub
jg
jno
inc
lret
fsubrs
mov
push
out
iret
add
adc
mov
out
imul
fsubr
push
xor
mov
scas
xchg
std
inc
movsw
sub
call
sub
lock
cmp
mov
add
daa
fldl2t
xchg
dec
enter
outsl
push
dec
pop
jle
cmp
imul
mov
push
lea
pop
mov
fidivrl
inc
enter
xchg
mov
in
mov
test
jge
inc
pop
push
jg
or
xchg
je
or
cli
leave
xchg
adc
fdivl
push
dec
lret
mov
lea
nop
push
mov
pusha
dec
sahf
gs
add
bound
cld
movsl
dec
mov
mov
inc
mov
jno
loop
mov
cmp
mov
int
leave
daa
pop
jnp
cmp
mov
mov
fistps
inc
xchg
sub
adc
sbb
pop
hlt
lds
jo
mov
pop
push
sub
mov
cmc
add
and
aam
fs
ja
xor
sub
cmp
mov
xor
sub
push
cmp
jp
test
popl
int
and
mov
mov
test
rcrb
jg
push
and
and
out
fcoms
outsb
xchg
push
stc
and
repz
pop
cmpsl
popa
mov
ja
test
cltd
xchg
movsb
data16
mov
imul
sti
ja
mov
inc
dec
pushf
jecxz
pop
movsb
mov
cmp
and
adc
mov
cltd
fbstp
clc
inc
and
inc
xchg
ljmp
out
cvttps2pi
cmp
leave
insl
xchg
fcmovnb
in
movsb
mov
xchg
mov
fdivrp
push
sbb
mov
popf
push
push
xlat
test
fidivl
push
outsb
mov
fsubl
push
aam
push
popa
sub
sub
cmp
jns
popa
int3
xor
pop
fnsave
push
mov
push
mov
fsubl
mov
nopl
insb
stos
mov
adcb
xorb
cmpsb
dec
loope
sbb
sub
jle
dec
xor
lds
xchg
insl
and
mov
and
mov
xlat
or
xor
mov
inc
mov
loopne
bound
in
mov
rol
push
mov
adc
inc
jbe
into
loope
mov
or
in
push
mov
xor
adc
loopne
push
hlt
in
sbb
nop
jae
jo
xchg
gs
sub
cmp
xchg
xchg
cmp
and
add
mov
fwait
sbb
cld
add
dec
aaa
ss
push
mov
mov
or
sbb
mov
lret
rorl
les
and
jge
shll
test
sub
mov
xor
mov
mov
push
jnp
std
leave
imul
mov
testb
mov
mov
xor
and
mov
pop
and
sti
insl
das
or
or
aas
cli
adc
pop
arpl
add
cmpsb
jp
pop
sbb
das
adc
xchg
sub
xlat
dec
test
pop
out
or
sbb
stos
pop
fildl
push
or
and
insl
mov
pop
sub
jae
out
jle
add
xchg
push
jae
sub
xchg
add
hlt
popl
jl
mov
mov
mov
mov
jl
scas
ror
mov
mov
filds
outsb
fs
stos
inc
movsb
std
ret
jg
cmpl
fwait
aaa
mov
push
lcall
or
notl
sbb
in
sbb
mov
or
xor
lcall
mov
ret
rcrb
or
cmp
jl
sqrtps
insb
xor
lods
sub
orb
push
pop
out
mov
cmc
jl
cmp
clc
push
into
setae
testb
add
push
push
and
fdiv
push
jo
cmpsb
add
push
dec
das
adc
sub
cmp
push
xorps
mov
addr16
test
lds
xor
ret
sbbl
inc
inc
daa
jbe
out
sub
push
jp
lcall
cli
and
lods
jne
jecxz
pop
xchg
or
adc
push
push
je
jmp
or
inc
dec
pop
aas
movsb
fnstcw
push
push
and
ret
fcmovnbe
mov
lret
mov
jae
test
push
adc
cli
push
bound
mov
mov
cmp
mov
xchg
mov
ljmp
test
pop
ja
adc
fsubrl
jne
dec
add
aas
lods
scas
sub
pop
stos
sbb
xor
mov
jmp
xchg
adc
pop
mov
inc
pop
adc
pop
cmp
aas
addr16
leave
arpl
repz
push
sbb
fisubl
in
clc
inc
movsb
mov
pop
arpl
cmp
push
xchg
dec
les
mov
daa
adc
shrl
sub
das
leave
sub
add
es
pop
pusha
push
ffreep
outsl
pop
sbb
std
jb
shll
inc
add
lds
sbb
cwtl
cmc
or
into
mov
aam
nop
mov
adc
dec
out
jecxz
adc
push
in
inc
mov
dec
in
sti
mov
stos
jo
mov
or
inc
gs
clc
or
orl
xchg
fs
repnz
orl
imulb
lods
xchg
int3
mov
jecxz
rclb
negl
fiadds
lahf
adc
jmp
out
rorb
pop
addl
out
push
es
outsb
nop
movsl
or
out
imul
cmpsb
sbb
in
sbb
fcos
movsb
and
pop
xor
rclb
dec
mov
cmpsb
in
xor
in
int
add
int
xor
mov
mov
adc
lret
jo
push
mov
ljmp
or
movsb
push
and
arpl
xor
cli
ds
push
push
mov
ljmp
mov
and
mov
inc
dec
imul
or
and
xchg
movsb
shrl
sahf
sub
lods
add
jb
adc
test
test
jns
cmp
inc
cmp
notb
lock
push
mov
fwait
movsl
mov
push
add
xchg
and
lret
jno
shld
dec
aad
shrb
xor
lock
aam
sbb
mov
idivl
or
inc
int
cs
imul
add
testb
lahf
lods
jne
mulb
dec
imul
xor
pop
sti
mov
jns
pop
aam
scas
jg
pop
adc
repnz
fcompl
mov
ficompl
js
dec
stos
fistpl
call
mov
sbbl
cmp
inc
data16
clc
sub
dec
cmpsb
pop
daa
adc
repz
inc
cwtl
dec
iret
inc
jecxz
pop
ret
push
hlt
ljmp
cli
rolb
mov
jmp
xor
add
adc
outsb
jbe
cmp
xor
mov
jnp
jge
jbe
stos
leave
in
popf
out
mov
jbe
dec
in
xchg
push
mov
clc
inc
jp
pop
cmp
hlt
add
dec
push
mov
shrl
dec
fldenv
mov
xor
cmp
xcrypt-ctr
loope
test
mull
sahf
stos
hlt
cltd
jns
scas
or
adc
adcl
outsl
jne
rclb
inc
leave
stos
stos
stos
gs
cld
and
cwtl
jle
shr
cmp
sahf
test
rorb
pop
push
sub
out
outsb
pop
in
sbb
inc
lahf
inc
sbbb
loope
sbb
push
pop
jmp
adcl
mov
lds
sahf
sahf
imul
pop
sub
aam
test
clc
leave
jle
jg
jp
sub
cmp
sub
rol
fldenv
test
repz
add
lods
fsts
stc
scas
and
pushf
ss
inc
lret
movb
or
mov
push
pop
decb
adc
leave
xor
cmp
rcll
xchg
xor
jp
jnp
mov
aaa
mov
pop
fs
call
cwtl
cmp
mov
and
or
and
sahf
xchg
ret
or
push
mov
jmp
faddl
fisubrs
mov
ds
xchg
cwtl
out
int3
xor
cmp
sbb
inc
movsl
test
out
icebp
push
fistpll
insb
add
imul
ja
inc
aam
mov
or
sub
cmpsb
xchg
lahf
imul
xchg
or
add
or
inc
mull
mov
lds
dec
mov
xlat
sbb
fstps
push
mov
rcrb
jge
jbe
popa
into
scas
icebp
jecxz
add
adc
add
sbbb
ja
add
inc
jne
sub
push
jns
clc
cmpsb
faddl
and
cmp
mov
inc
inc
pop
push
mov
shl
push
dec
xchg
xlat
stos
jge
cmp
sbb
mov
sbbl
inc
mov
mov
and
mov
xchg
and
aam
std
xchg
in
ljmp
in
cmc
jo
inc
out
enter
in
jns
mov
push
cmpl
cmpl
and
mov
pushf
xchg
adc
clc
add
scas
mov
mov
jno
add
mov
sbb
xchg
scas
fdivrl
pop
sub
insl
xchg
lods
pop
mov
lret
rcr
stos
cmp
mov
add
push
shlb
sbb
ret
sub
mov
in
xchg
sti
pop
pop
add
push
fwait
xchg
shr
or
aad
cmp
xlat
adc
inc
mov
and
push
stos
sbb
cs
pop
imul
mov
mov
mov
xchg
ss
mov
push
sub
mov
dec
outsl
inc
jb
sbbb
int
inc
fnstsw
sub
push
jbe
int3
mov
std
xor
dec
xlat
out
ljmp
stos
push
push
ljmp
xchg
sahf
pop
loope
jo
adc
in
ss
in
mov
inc
movsl
into
sbb
out
call
inc
cmp
mov
mov
fsts
out
push
xor
ja
adc
jp
mov
xor
pcmpeqb
fildl
mov
loopne
xchg
cli
lcall
mov
jns
mov
inc
popa
mov
sub
arpl
arpl
pop
cmp
shl
jmp
jg
and
ljmp
fnstcw
xchg
adc
xor
sbb
cli
in
out
pop
std
cmp
je
or
cltd
mov
jg
or
dec
dec
sbb
mov
mov
push
xchg
xchg
jp
adc
sbb
in
jo
xchg
into
dec
xor
jl
ror
or
sahf
jne
loop
mov
outsb
sub
loopne
xchg
sti
js
mov
cmp
not
adc
int3
int3
cmc
xchg
push
incl
loope
xchg
lods
fiaddl
adc
dec
add
mov
in
add
dec
xor
xor
das
jge
jo
ret
int3
xchg
jns
mov
mov
jl
adc
mov
or
inc
or
in
jge
pop
sub
jg
mov
mov
ret
rorb
push
popf
or
pushf
pop
mov
scas
pop
sbb
mov
sub
push
in
push
dec
in
lods
fmulp
push
xor
out
xor
jnp
cmpsl
push
adc
push
insl
test
xor
sbb
in
addr16
mov
repz
popa
and
movsb
and
jb
mov
test
loope
addr16
or
sub
xchg
call
mov
push
push
jge
sbb
cld
sbb
ret
adc
sbb
cld
fsts
insl
andps
and
sub
jne
push
sub
fnsave
push
aad
cmpsl
xor
jmp
inc
add
mov
mov
fcom
cmp
xchg
xchg
ret
sti
jno
arpl
pop
aaa
gs
push
xchg
shl
xchg
adc
int
es
xor
lds
lds
nopl
cmpsl
pop
xchg
xchg
icebp
adc
jge
or
dec
fsubl
add
sub
clc
jp
dec
sbb
sbb
jmp
jae
xchg
bound
rcrb
add
out
ret
inc
cmp
shl
mov
xchg
cmpsb
ret
mov
aas
fs
scas
xchg
stos
adc
pop
push
cmpsb
inc
sub
leave
jl
dec
mov
pop
and
arpl
repz
cmp
inc
jmp
lods
data16
or
pop
scas
add
fidivrs
pop
adc
push
scas
out
ds
push
mov
pushf
repz
int3
adc
out
jns
mov
imul
int
adc
dec
aad
test
sbb
push
ljmp
jle
pop
xor
pop
sbb
test
int3
inc
lahf
fcmovu
ficomps
rclb
fcmovne
mov
sbb
pop
push
pop
icebp
push
add
and
push
aad
test
and
mov
mov
mov
dec
loop
xchg
cvtpi2ps
or
adc
push
push
fstl
pop
fcompl
sbb
ja
jns
jae
js
dec
pcmpgtd
jno
lock
cwtl
jae
or
dec
push
cmp
xlat
dec
jne
in
cmpsl
cmp
xor
fbstp
jmp
scas
lea
xor
mov
sbb
mov
movsb
insl
mov
test
scas
push
jnp
mov
lret
das
pop
push
aaa
clc
mov
cmp
add
xor
mov
adc
mov
jb
je
fstps
mov
fwait
ljmp
push
push
jge
mov
push
mov
lea
adc
jo
fsubs
mov
les
imul
das
jl
fisubrl
push
cmc
and
aas
in
gs
hlt
fidivl
mov
fwait
repnz
sbbb
pop
sbb
mov
jl
xchg
mov
lock
mov
testl
into
aas
std
enter
stc
movsl
bnd
stos
scas
in
cmp
pop
cmp
push
cs
add
aaa
inc
xor
stos
or
sub
mov
orb
and
or
fstps
in
mov
rcrb
jae
push
xchg
lods
xor
ficoml
pop
jbe
sub
movsl
enter
movb
adc
jl
add
xor
inc
push
aaa
lea
inc
mov
or
cli
fldl
or
nop
cld
lret
adc
arpl
xchg
outsl
fstl
imul
mov
bound
cmp
xor
ja
das
sub
sub
stos
sub
aam
push
or
push
movd
dec
aam
mov
in
mov
sub
scas
filds
outsl
in
into
fsubr
popl
dec
out
aam
ret
pop
into
mov
outsl
cmp
scas
popf
fmull
cld
push
mov
out
or
cmp
pop
jnp
inc
shrb
mov
es
rolb
mov
mov
scas
and
xchg
jle
sbb
pop
cmc
mov
out
jae
mov
lahf
mov
mov
push
clc
adc
cmc
movsb
push
mov
add
sti
ret
ja
and
sbb
lcall
icebp
add
push
out
insb
std
pop
icebp
inc
cmp
push
test
sahf
test
add
mov
or
dec
int
ret
out
xor
std
mov
push
das
add
add
or
and
jo
fcomps
and
in
adc
lret
ss
push
pop
inc
sub
scas
dec
jg
jbe
jnp
add
xchg
shrl
pand
sub
mov
mov
adcb
jp
push
cmp
sbb
pop
fcmovnb
mov
hlt
test
push
and
xor
jno
cmp
adc
in
scas
mov
pop
mov
rorl
pop
add
mov
mov
pop
lret
dec
pop
mov
cmp
pop
lock
stos
xchg
mov
adc
je
sbb
out
ret
sbb
dec
cmpsl
sarl
aad
xor
inc
lahf
jne
add
inc
xchg
or
xchg
push
sbb
fmull
push
je
lock
fs
shlb
out
out
je
idivl
dec
mov
imul
das
mov
and
jnp
decl
dec
adc
test
inc
sbb
iret
mov
fsubrl
in
pop
ret
add
jo
jp
gs
out
div
ss
pop
iret
out
rorl
movsl
xchg
add
pop
into
push
lods
cld
cli
aaa
repnz
enter
inc
pop
xchg
jle
and
adc
nop
sub
les
cmp
insl
imul
inc
cmpsl
and
jg
or
or
sbb
inc
jmp
mov
or
inc
cltd
and
ljmp
clc
sub
mov
out
add
and
sarl
aam
cmp
push
cli
mov
cmp
sbb
iret
jle
lods
js
xor
xor
cli
and
mov
xlat
jb
xlat
jne
int3
subb
insb
xchg
out
dec
add
sbb
popf
pop
out
rorl
add
or
dec
xchg
in
mov
sahf
mov
sub
cli
fistps
xchg
decb
push
fnstsw
or
mov
push
or
dec
jmp
inc
pop
int3
movsb
or
dec
loopne
daa
xchg
pop
jp
orb
jle
add
jo
push
ret
or
dec
lods
and
test
jg
xchg
pop
jl
movsb
nop
gs
and
mov
shll
loopne
subb
mov
xchg
js
pop
jge
mov
sbb
lcall
push
or
lea
leave
mov
add
daa
mov
lahf
jae
sbb
jmp
xchg
mov
mov
sbb
out
in
cwtl
ret
push
mov
loope
inc
add
fisttpll
insb
in
roll
cli
adc
imul
sbb
pop
popa
inc
sub
xchg
in
push
fbstp
push
sub
stos
cmc
es
or
push
jmp
jl
jno
or
adc
iret
mov
push
mov
scas
mov
fistps
inc
gs
mov
mov
mov
mov
cmpl
and
adc
fisttpll
sub
inc
mov
jae
pop
ret
adc
pop
xchg
aas
xor
mov
scas
sbb
jle
add
sub
sub
dec
push
pop
or
fs
mov
xchg
xor
pop
out
icebp
inc
adc
fwait
ljmp
mov
into
loope
add
mov
inc
mov
test
xor
jae
pusha
xor
popf
repnz
daa
lock
out
bnd
ja
into
enter
icebp
insb
out
inc
jge
lds
cmp
scas
jle
mov
negl
pop
adc
sub
inc
scas
xor
fwait
mov
daa
aam
mov
sti
push
lea
pop
mov
mov
mov
or
addr16
add
iret
xchg
imul
dec
cmp
cmp
cmp
inc
mov
xor
imul
sbb
dec
inc
dec
jmp
insb
leave
inc
dec
sub
leave
pop
add
fildll
loopne
stos
enter
sbb
jg
aaa
xor
call
sub
mov
in
out
add
or
push
sub
and
xchg
les
ficoml
divl
faddl
jnp
pop
inc
push
add
xchg
les
out
lahf
movsb
inc
mov
jg
imul
mov
in
dec
and
sbb
shlb
xchg
adc
and
test
loop
pop
jns
mov
mov
xchg
pushf
push
sti
cs
push
icebp
lods
paddusw
xchg
push
cmpsl
dec
xchg
imul
push
mov
incl
mov
rorb
mov
iret
inc
add
adcl
ret
jg
sub
dec
test
add
sub
add
das
dec
pop
aad
jle
and
xor
pop
mov
andb
pop
divl
cwtl
jecxz
fistpll
movsb
scas
subb
je
aam
pop
lock
mov
mov
lahf
xlat
fistpll
imul
out
fcmovnb
lock
mov
mov
mov
in
leave
rorl
inc
icebp
adc
pop
jne
insb
jbe
sbb
ja
das
jl
or
or
clc
xchg
jge
sbb
xchg
inc
lret
jns
fmuls
and
mov
or
xor
push
mov
pop
mov
adc
mov
out
mov
dec
push
or
pop
or
nop
mov
scas
mov
push
mov
inc
cwtl
pushf
pushf
adc
dec
push
sti
xor
cld
dec
out
lret
sub
or
cmp
in
xor
push
sbb
imul
xchg
scas
sbb
fmull
in
fsts
mov
mov
stos
mov
das
es
test
stc
les
push
in
loop
push
movsb
dec
or
ss
adc
mov
pop
ficomps
out
pop
mov
into
xor
data16
adc
pop
test
mov
jno
out
add
lock
pop
and
adc
test
int
sahf
int3
pop
xchg
ret
fisubs
stos
lea
and
push
arpl
mov
in
add
mov
mov
in
adcl
jge
mov
pop
jae
add
push
cmp
sub
mov
and
or
insb
nop
cld
loope
jmp
jg
jne
sub
adc
jno
xchg
sbb
xchg
jmp
mov
push
or
sub
sub
ret
add
and
add
mov
sbb
pop
enter
fsubrp
dec
ret
dec
sub
pop
cmpsl
cmp
hlt
rcrb
xchg
or
scas
sub
test
movb
adc
je
sbb
fsubrs
push
sbb
mov
aam
adc
lea
subl
stos
add
dec
xor
push
pop
or
addl
jp
cmp
pop
daa
cmpsb
data16
sub
mov
enter
inc
add
and
jmp
push
mov
push
aaa
mov
fcmovne
xor
mov
and
lret
movsb
aaa
lods
dec
lock
pop
jmp
cmp
sub
adc
push
mov
push
and
inc
aaa
mov
lcall
mov
and
add
in
lea
rcrl
test
in
rolb
rorl
xlat
inc
out
je
ljmpw
data16
jnp
mov
add
movsb
push
fistpll
popa
rclb
mov
cmp
lcall
stc
pop
xchg
sub
mul
mov
xchg
pop
mov
cli
xchg
fiadds
cmc
sub
jg
pop
sbb
adc
mov
stos
ljmp
shlw
out
arpl
int
adc
movsb
dec
dec
es
sahf
in
sub
mov
pop
and
jle
es
add
mov
sahf
sbb
loop
jge
fists
in
jmp
imul
add
xor
inc
les
cs
lock
rcrb
jo
cmp
leave
int
mov
ficompl
bound
test
cmp
xchg
add
mov
jnp
push
stos
in
lds
adc
adc
fcmovnb
lcall
mov
popl
test
in
inc
mov
cmp
mov
push
pop
out
stos
subb
jnp
cmpsl
jb
lods
mov
fildl
mov
test
add
in
stc
xchg
mov
push
sub
outsb
mov
mov
add
jl
cmp
pop
shr
mov
xchg
mov
pop
mov
gs
mov
inc
mov
mov
cmpsb
clc
fldl
or
aas
adc
mov
gs
out
dec
push
les
or
out
xchg
or
repnz
loope
mov
stos
outsl
addr16
popa
mov
lock
push
jecxz
inc
inc
popw
dec
xor
adc
sarb
icebp
gs
lock
imul
std
mov
xchg
pop
sti
sbb
sbb
ds
outsb
and
outsb
add
jecxz
inc
shlb
or
push
imul
ret
mov
cwtl
pop
mov
test
aas
loope
dec
popa
iret
addr16
sub
fwait
cmp
and
xchg
xor
cmp
orb
lcall
or
in
cmp
in
sbb
jge
push
mov
test
mov
mov
mov
or
pop
push
jl
jae
pop
ret
test
mov
add
rolb
push
xchg
sub
in
jge
repz
cli
mov
daa
outsb
loop
pop
push
or
and
icebp
mov
sti
loope
cmp
add
sub
xchg
sti
jmp
je
dec
dec
mov
push
or
ret
xor
enter
outsb
bound
mov
aad
sbb
cld
dec
je
test
aam
loop
testl
xchg
pop
jb
lret
dec
test
add
add
fwait
or
cmp
dec
jmp
movsb
fxch
jbe
ljmp
rclb
push
pop
mov
mov
sbb
out
dec
sbb
sti
loope
mov
or
sbb
and
clc
popf
add
sub
mov
leave
pop
fistpl
xor
push
fbstp
dec
and
xlat
sub
jo
sub
imul
xchg
and
dec
pop
sahf
push
mov
popf
mov
and
xchg
out
sub
pushf
pop
inc
shl
xchg
cmpsb
fsubrs
ljmp
mov
popf
pop
cmc
inc
pop
pop
fdiv
inc
xchg
scas
jns
fdivl
stc
adc
jne
repz
and
push
fdivrs
mov
pop
scas
shll
ret
out
jb
fistl
aas
push
cmpsl
push
jle
sub
iret
xor
dec
shlb
sbb
ret
nop
pop
aam
ds
fisubrs
pop
call
nop
imull
or
divl
sub
hlt
ret
das
sub
inc
mov
cltd
inc
cli
rorl
xor
fistps
test
fdivs
add
dec
out
ss
lahf
bound
pop
insl
test
inc
xor
lods
jno
and
out
jne
adc
or
adc
pop
dec
outsb
imul
sbb
xchg
cmpsb
xlat
add
stos
jae,pt
sub
push
mov
sub
in
or
addr16
vpavgb
pusha
or
pop
dec
push
and
xchg
mov
jo
dec
sub
fs
test
mov
inc
jg
cmpsl
cmpsl
imul
push
frstor
inc
push
cmp
dec
movsl
dec
ss
jb
dec
lahf
test
xchg
cli
inc
mov
movsb
sbb
inc
ret
cmpl
add
jge
pop
fadd
pop
ret
push
and
call
dec
popa
mov
arpl
aad
out
in
pop
pop
lret
or
out
or
popa
shlb
jle
mov
mov
push
nop
add
cmp
lock
clc
mov
push
mov
mov
in
mov
xor
add
cmp
xchg
das
push
fs
xchg
push
mov
push
or
or
jge
iret
mov
dec
ret
add
int3
cmc
jmp
adc
and
popf
pop
and
and
pop
aam
pop
add
sub
test
dec
xor
faddp
lea
xor
mov
push
addr16
arpl
sbb
mov
xlat
mov
cltd
sarb
fimuls
lret
out
int3
pop
xlat
jbe
cltd
insb
pop
je
xchg
mov
movsb
lods
movsb
stos
cmp
xchg
ja
faddp
jp
lahf
push
arpl
dec
mov
or
popl
push
das
jns
sbb
sahf
lds
nop
movsl
push
insl
leave
inc
ret
jae
inc
call
sub
mov
or
xor
fsubrl
dec
or
mov
cli
pop
xchg
lock
or
jno
lret
mov
imul
mov
sbb
pushf
pop
lods
sub
push
cs
call
mov
mov
inc
aaa
loop
mov
aam
lds
in
sti
push
inc
xchg
mov
dec
stc
ret
fnsave
mov
and
inc
xor
dec
iret
popf
ja
test
lods
aad
dec
xchg
jge
hlt
popf
arpl
aam
push
out
inc
adc
aad
sbb
xor
mov
and
sbb
inc
sbb
or
push
pop
mov
fidivrs
mov
in
les
pop
adc
fs
sub
sbb
mov
daa
mov
jp
pop
mov
and
iret
insl
ja
xchg
lea
pop
fucomip
xchg
or
inc
add
fwait
ret
push
inc
cmp
pop
push
mov
and
std
je
mov
fmull
sub
out
cmp
push
pop
sub
or
stc
adc
mov
jl
inc
leave
adc
stc
pop
imull
mov
lahf
imulb
mov
pop
adc
pop
mov
cs
push
repz
and
shl
pop
xor
jg
decl
mov
xchg
gs
rcrb
sbb
xchg
mov
pop
sti
sub
jae
and
or
mov
mov
scas
sub
and
push
mov
aam
daa
imul
sbb
dec
inc
fnstcw
leave
movsl
sub
ja
and
sub
daa
iret
leave
xor
adc
fstl
jae
add
shl
in
popf
sbb
jno
sahf
movsb
sarl
push
push
ficompl
mov
push
pop
movsb
imul
daa
sbb
in
js
sub
jp
mov
stos
icebp
fistpll
cltd
inc
pop
js
pop
les
xchg
mov
push
inc
and
je
std
push
or
add
lret
movsb
jle
cs
add
jp
xchg
fdiv
scas
add
lea
push
cmp
es
call
lds
outsl
cmp
and
pop
dec
pop
es
push
dec
rcr
or
jg
cmova
cmp
cmp
fcoml
sti
imul
aaa
add
addr16
inc
mov
push
mov
jmp
imul
mov
jo
loope
push
sub
and
enter
pop
add
adcb
pop
xchg
mov
jp
lret
ss
dec
in
popa
loope
lods
xor
xchg
rorl
sbb
xor
and
sbbl
mov
xchg
loope
lods
dec
setb
push
adc
iret
pop
sub
push
cli
adcb
inc
adc
testb
xchg
mov
add
mov
xchg
sbb
testb
dec
cltd
inc
gs
mov
pop
pop
xchg
pop
stos
clc
inc
sub
fnstenv
scas
lcall
aad
sahf
inc
push
cwtl
aad
repnz
mov
clc
test
divl
mov
sub
push
loop
and
xchg
inc
sbb
add
cmpsl
or
or
lods
cmp
xchg
and
arpl
loope
inc
adc
aam
jl
sub
mov
sub
sub
lret
jp
mov
stc
in
mov
out
xchg
dec
or
inc
call
xor
test
mov
fcomps
dec
in
lcall
xor
iret
arpl
loopne
mov
xchg
sub
mov
or
addr16
arpl
ljmp
xor
imul
dec
jecxz
lock
test
mov
repnz
test
idiv
xor
xor
xchg
sub
mov
aaa
pop
mov
adc
push
call
test
retw
jae
pop
loope
cli
js
mov
push
aam
std
aad
adc
out
popf
or
fnstcw
insb
dec
xchg
xor
jl
dec
mov
sub
xor
xor
mov
cld
lret
ss
and
out
adc
mov
in
out
mov
jecxz
pusha
sbb
push
dec
mov
scas
aaa
jp
xor
add
sbb
cltd
lea
xor
cmpb
adc
and
mov
js
adc
das
inc
cmp
repnz
add
fld
loope
fcompl
in
sbb
imul
xchg
sbb
popf
out
push
dec
pop
pop
pop
fistpl
out
scas
jns
in
stos
imul
xor
add
mov
inc
and
imul
js
pusha
adc
adc
add
mov
pop
shlb
lahf
das
cmp
je
mov
test
mov
outsb
subb
xor
fstps
inc
xor
or
pusha
push
repz
int
std
cmp
inc
loopne
mov
pop
push
adc
in
and
int
jmp
pop
cwtl
inc
enter
imul
xor
out
xor
push
int3
xchg
ret
xchg
not
or
fsubs
fdivr
cmp
jbe
cmp
push
mov
mov
test
cmp
insb
pop
dec
mov
lcall
rorl
add
mov
mov
adc
in
xor
cmp
and
in
les
frstor
js
in
add
faddl
aas
xor
xor
ljmp
mov
divb
or
aam
wbinvd
das
dec
insl
dec
test
in
loop
test
insb
mov
pop
jp
add
cmp
push
xchg
and
jg
inc
mov
inc
mov
mov
xchg
popf
adcl
ja
inc
push
lods
pop
shll
jmp
xchg
mov
in
testl
dec
shrl
push
push
xchg
out
cmp
popf
xchg
rolb
inc
add
lock
mov
out
ret
jno
mov
push
jecxz
lds
leave
inc
cmp
mov
sbb
mov
rcrl
mov
rorl
xor
cs
push
ss
imull
clc
lcall
data16
dec
pop
xchg
insb
and
xchg
cmp
addr16
add
mov
popa
movl
outsl
aas
les
frstor
test
icebp
push
das
iret
test
add
dec
inc
pop
xchg
fdivr
dec
cli
fildl
adc
sbb
sub
ficomps
jae
pop
aas
nop
icebp
call
sbb
outsb
mov
aas
mov
shld
lea
push
push
push
ljmp
aam
lods
sub
fxam
imul
dec
nop
mov
cmpsb
add
mov
in
in
sub
or
sub
lret
ljmp
in
stos
mov
dec
mov
add
lods
ljmp
dec
mov
or
lcall
mov
outsb
frstor
dec
lahf
jecxz
adc
lds
pop
fisubrs
push
scas
insl
xlat
les
adc
and
jl
xor
mov
push
cli
push
jnp
or
add
lods
sub
mov
jl
or
jle
adc
lahf
lahf
lret
xor
lahf
adc
or
in
mov
xchg
adc
cwtl
outsl
mov
cltd
int3
test
ds
mov
frstor
out
jl
lock
int
jl
rcrb
pop
push
cmp
jns
into
dec
and
dec
or
call
jmp
ret
jb
cld
pop
loop
xor
jecxz
pop
push
in
or
xchg
fdivs
test
fdivrp
adc
inc
mov
fwait
push
pop
out
scas
cwtl
and
push
xor
sbb
sbb
jns
cmc
pushw
lods
add
sbb
pushf
push
sbbl
push
jge
loop
cld
cmp
shll
int
stc
pop
adc
jl
leave
jb
dec
je
or
stos
scas
jns
ror
out
movsb
and
xchg
xor
mov
jecxz
dec
bound
sub
mov
adc
sub
cli
jo
pop
xchg
rclb
jg
bound
ss
int3
inc
sahf
dec
xchg
inc
test
cmp
repz
insb
mov
xor
ficoms
into
aaa
lods
adc
daa
xchg
push
mov
or
arpl
sbbl
loop
dec
lret
or
leave
enter
pop
inc
cmpsb
jle
adc
scas
adc
ret
dec
scas
sbb
lret
mov
frstor
pop
cmp
lds
sbb
fnstcw
out
outsl
and
imul
mov
hlt
or
fs
aad
cltd
aas
ret
mov
leave
push
adc
mov
in
inc
pop
fsts
push
lret
inc
negl
add
jl
xchg
push
aad
jmp
cmp
das
push
push
mov
sti
repnz
or
loope
scas
loope
cmp
cmc
ret
outsl
sub
into
adc
bound
xlat
mov
sub
push
loope
xlat
ror
popf
movl
cltd
xlat
xchg
data16
xrstor
hlt
jns
pop
dec
push
mov
mov
add
jne
inc
cmp
inc
js
jl
xor
mov
xor
mov
mov
or
sbb
cli
mov
sbb
mov
mov
or
inc
push
adc
pop
jmp
enter
paddd
std
orb
int
scas
and
dec
adc
enter
cwtl
and
pop
je
and
inc
adc
push
data16
mov
and
mov
inc
test
jo
mov
jp
ficompl
inc
mov
icebp
out
test
cmpsl
mov
rol
icebp
mov
pop
popa
xchg
mov
lret
push
adc
adc
daa
adc
or
and
jo
mov
jle
and
mov
fildll
or
mov
mov
subb
les
clc
pushf
or
and
pop
cmp
push
popa
xchg
cmp
sbb
lea
call
pop
dec
push
jl
repz
cmp
loopne
mov
sarb
dec
into
les
inc
xchg
ficompl
fldcw
cld
sbb
call
pop
and
mov
repz
scas
inc
les
popa
jb
aad
adc
cmp
pop
inc
xorl
sbb
lcall
call
mov
gs
ret
rorl
sub
or
xchg
pusha
jbe
mov
ja
flds
out
or
mov
xor
push
add
cmp
jo
scas
pop
push
xchg
jl
pop
jo
icebp
test
sub
repnz
adc
mov
test
xchg
inc
xchg
and
xchg
call
xor
inc
ficomps
or
or
mov
mov
sub
cli
jae
sub
lahf
and
cmp
test
and
hlt
insl
xlat
xchg
enter
and
xor
int
in
stos
fnstsw
les
rcl
dec
inc
sti
das
popf
mov
scas
jecxz
and
mov
ret
cmc
dec
outsl
movsl
jo
xchg
mov
mov
int3
push
xor
xchg
xor
jbe
xchg
and
in
sbb
sbbl
dec
xor
test
andb
inc
mov
arpl
push
jle
cli
into
cwtl
sbb
lods
jno
jl
aas
xchg
fdivp
push
or
push
bound
xor
or
adcb
or
in
dec
and
push
aad
mov
push
scas
test
xor
cmp
fadd
mov
jb
xchg
push
shrb
fnstsw
pop
mov
subl
mov
cmp
xchg
xor
outsb
popf
jno
pusha
mov
xchg
inc
push
adc
mov
ret
das
inc
add
leave
icebp
out
mov
lahf
push
aas
mov
jne
test
lret
mov
mov
xor
dec
mov
fxch
add
push
sahf
adc
mov
mov
lds
and
xchg
or
std
mov
imul
sbb
addb
adcb
adc
lahf
lds
jae
nop
sbb
loope
inc
icebp
pop
mov
or
dec
mov
cmp
sbb
pop
mov
cmp
aaa
ret
mov
js
cltd
push
repz
je,pn
aas
jo
push
sub
or
int
mov
into
fs
adc
fcoms
fstpl
xchg
lret
push
mov
xor
mov
std
sbb
push
in
outsl
pushf
inc
or
xchg
jge
adc
ja
adc
fcmovnb
mov
stc
dec
inc
lea
out
pop
pushf
insl
jl
test
jbe
cs
mov
ss
ret
inc
mov
mov
loope
or
imul
xor
pop
xchg
cmpl
and
inc
xor
jl
mov
imul
imul
push
lods
jne
cmpsb
or
sbb
sub
bound
pusha
xorb
roll
test
fucom
divb
loope
out
das
xor
shll
push
lret
into
pop
arpl
insb
mov
cmp
inc
push
or
push
pusha
dec
add
push
push
test
dec
pop
lods
imul
les
push
dec
mov
leave
loop
jno
jo
cld
pop
int
mov
jae
xchg
lret
test
mov
imul
push
or
dec
aam
pop
adc
cltd
push
jle
jo
stos
rcrl
sbbl
fucomi
mov
enter
int
test
cwtl
push
push
mov
cltd
pop
shr
das
fcomp
out
imul
sbb
cli
ljmp
loope
in
cmp
and
sub
js
cmpsb
test
cmp
xchg
subb
loop
subl
jmp
hlt
and
adc
movsl
cmp
in
test
push
ret
decb
jp
push
add
cmpb
aam
insl
hlt
imul
jmp
ret
sarl
pop
fisubs
imul
jbe
mov
aas
in
leave
pop
xor
inc
scas
cmp
xorb
lea
ljmp
sahf
fxch
les
sub
adc
jp
mov
inc
jp
shrl
shlb
sub
out
popa
addr16
sbb
and
sbb
clc
and
mov
cltd
cmp
leave
js
mov
jl
out
inc
fadds
inc
pushl
push
mov
mul
fsubs
adc
cmpsl
or
add
fcomip
sub
movsb
sub
scas
mov
dec
mov
mov
dec
std
sbb
adc
xchg
push
mov
pop
mov
call
std
or
dec
shrl
push
pop
sahf
cltd
push
and
mov
movsb
cli
mov
shr
sub
mov
sbb
push
push
mov
xchg
inc
call
dec
and
inc
nop
sub
sub
push
ret
pusha
mov
pop
rol
xor
xchg
scas
aaa
ds
mov
fdivrl
pop
das
mov
or
jmp
je
jge
ret
xlat
or
nop
and
push
iret
mov
mov
mov
jnp
or
jl
xlat
cli
pop
movsb
in
push
push
mov
ret
out
jne
punpckhbw
cltd
inc
pushl
inc
movsl
mov
jno
add
mov
xorb
sub
rolb
dec
in
push
loope
fisubrs
mov
adc
repz
repnz
add
mov
ret
rorl
add
pop
xchg
popa
fldl
shlb
adc
cmp
inc
enter
xchg
movsl
cmp
icebp
jno
mov
stc
inc
lds
jbe
repz
pusha
imul
dec
push
arpl
lret
inc
js
and
repnz
adc
mov
push
test
add
test
pop
jo
insl
movsl
jmp
jae
push
adc
js
gs
pop
sbb
int
nop
aad
push
and
icebp
push
or
mov
gs
in
pop
ds
dec
outsb
int
or
mov
mov
xor
jns
lcall
shlb
xor
sbb
push
repnz
insb
cmp
xchg
into
aad
adc
jns
jb
clc
aaa
mov
or
popa
xchg
test
adc
fisubrs
in
xchg
push
testb
sbb
adc
add
jecxz
add
sub
repnz
idivb
xchg
pushf
aas
inc
inc
add
repnz
pop
int3
mov
dec
ret
push
neg
lea
std
mov
adc
lock
mov
add
jnp
into
push
add
test
cmpsb
cmpsb
inc
addb
pushl
mov
out
dec
pop
lret
arpl
shlb
fidivrl
arpl
mov
xor
cmp
sbb
cld
pop
xor
shl
aaa
mov
cmpb
sbb
xchg
inc
out
popf
movsb
push
cmp
dec
test
sahf
lds
gs
ret
loopne
dec
jns
inc
out
push
cmpb
loopne
jnp
loopne
dec
insl
inc
sub
pop
xor
xor
mov
push
pusha
sub
sbb
and
ficompl
xchg
call
insb
inc
nop
fld
xlat
dec
stc
je
add
push
imul
jae
and
frstor
sub
jb
fcmovu
or
sbb
insb
adc
mov
into
incl
sub
nop
push
pop
cmc
faddl
jo
imul
xor
inc
cmc
addr16
sti
sbb
inc
ss
mov
mov
cltd
jl
test
lods
mov
xchg
icebp
add
lds
cmp
ret
xor
nop
push
stc
fwait
xchg
and
and
mov
xor
add
xchg
push
push
std
push
mov
imul
dec
xchg
push
push
or
out
mov
insl
sbb
cmpsl
clc
movsb
repnz
sub
pop
sbb
call
and
rolb
jg
rcll
add
mov
and
cltd
bound
xchg
and
cmpsl
iret
cmc
int3
imul
pushf
or
mov
je
push
mov
test
int3
cmpsl
mov
sub
aaa
cmpsl
lahf
mov
cmp
je
xor
pop
inc
daa
cwtl
mov
fidivs
out
shrb
pop
inc
dec
and
fwait
repnz
stc
mov
dec
imul
stc
out
sbb
mov
sbbb
cmp
add
call
dec
pop
lock
and
js
adc
jo
repz
js
repz
mov
lcall
mov
xchg
movsl
adc
push
gs
dec
inc
sbb
inc
sbb
jae
mov
ret
fnsave
into
mov
mov
mov
pusha
sahf
cmp
frstor
and
cmp
ljmp
lahf
repz
mov
jo
ja
int3
push
loopne
xchg
push
dec
dec
fs
lods
add
outsl
lods
or
ret
mov
ret
je
dec
mov
add
inc
pop
lahf
push
push
adc
cmc
cld
pop
dec
add
repz
je
jae
mov
sarl
pop
mov
cs
adc
frstor
mull
cmp
push
popf
bound
sbb
add
int
pushf
mov
mov
popf
adc
push
dec
sub
pop
sbb
js
pop
mov
cld
popa
mov
or
fadds
xchg
jl
sub
mov
add
jecxz
xor
mov
faddl
popw
cmp
lock
arpl
dec
ffreep
and
push
ja
add
cmc
shrl
mov
call
mov
dec
movsb
cmp
xlat
cmpb
mov
inc
leave
ss
test
out
dec
loopne
roll
incl
scas
ret
shr
int3
stos
das
sbb
std
fdivrl
loopne
xor
push
dec
sbbb
push
dec
add
outsl
rcrl
cmp
sbb
cld
je
loopne,pn
pop
xchg
aaa
pop
loopne
stos
xchg
push
mov
sub
push
dec
lret
push
jl
cmp
shll
xchg
mov
fistpll
mov
jb
cmpsl
pusha
iret
dec
add
sbb
mov
lds
adc
xor
dec
dec
inc
in
and
xchg
jmp
out
lods
xchg
syscall
mov
movsb
pusha
inc
jmp
xchg
jecxz
das
test
pop
or
cmpsb
scas
mov
mov
mov
or
or
dec
jns
jns
mov
jnp
stc
pop
loope
add
pop
outsl
add
test
fwait
jne
daa
sti
test
mov
mov
xor
push
mov
mov
cmpsb
jl
inc
pop
mov
mov
pop
xor
jnp
lds
pop
mov
mov
mov
inc
xlat
imul
jns
jge
aad
dec
and
inc
or
adc
fmuls
mov
mov
xor
lods
dec
in
pop
int
out
nop
sbb
mov
std
cmp
xchg
insb
pop
je
and
xor
pushf
inc
fsubl
int3
add
adc
es
or
xor
cli
cmp
jl
mov
test
test
cmpsb
lahf
mov
insl
outsb
fistl
lock
adc
loopne
jl
or
jle
xchg
out
push
cmp
lea
dec
dec
out
orb
inc
imul
pop
call
int3
xchg
pop
sbb
pop
adc
sbb
fimull
insb
xchg
push
mov
mov
popa
rorb
int3
test
dec
jmp
aam
pop
jecxz
push
mov
sbb
les
cwtl
fstpl
scas
cmp
and
push
sbb
sarb
and
xor
cmp
lea
aad
mov
enter
cld
cmp
jmp
test
fnstenv
cwtl
fisubrs
jl
mov
fbld
shr
lods
and
pop
repz
add
jb
xbegin
les
mov
mov
sub
hlt
mov
fs
leave
cmc
fs
sbb
xor
test
add
jns
sahf
in
jo
dec
and
rclb
cmpsb
daa
mov
mov
jmp
ret
xor
lcall
int3
xor
cmp
test
push
inc
xchg
xchg
imul
loop
movsl
lods
enter
arpl
xchg
adc
and
mov
insb
mov
push
xchg
hlt
mov
adc
mov
fists
sbb
xor
mov
lcall
fnstcw
or
xor
cli
aad
sub
ljmp
mov
sub
ds
xchg
lods
push
xchg
pop
adc
lret
push
mov
popa
sbb
arpl
ret
xchg
mov
xor
je
cltd
mov
loope
in
sub
sbb
cmp
cmpsb
jns
add
mov
mov
loopne
repz
aaa
or
fucomi
dec
push
cmp
enter
aas
jecxz
mov
jb
xchg
std
mov
arpl
jp
rolb
xchg
adc
mov
pop
mov
sub
daa
sub
dec
dec
or
mov
pop
and
sbb
and
fnsave
sbb
mov
mov
mov
xchg
push
push
mov
jo
pop
inc
jo
lds
xor
daa
inc
test
aad
sub
mov
push
test
mov
and
pusha
popa
or
and
mov
mov
mov
dec
push
scas
shll
jp
push
inc
xor
das
mov
xchg
cmpsb
sbb
insl
insb
negb
les
sbb
adc
test
lds
sbb
cmp
jmp
popa
aad
stos
xor
lcall
dec
lret
mov
icebp
scas
js
insl
and
outsl
xor
push
int3
sub
xchg
or
pop
cs
movsl
mov
jo
push
das
lmsw
push
js
lcall
pop
in
test
jp
iret
stos
mov
sbb
push
cmp
movsb
xlat
outsb
sbb
loopne
cwtl
push
mov
outsb
ljmp
inc
cmpsl
addb
sbb
add
adc
lcall
popl
das
hlt
push
push
mov
in
addr16
dec
out
outsl
add
std
mov
andl
das
rcll
pop
ljmp
push
gs
jp
cmpsl
jb
add
jo
std
jmp
adc
stos
out
sub
sub
cmpb
mov
fistpl
or
ret
dec
lcall
cltd
out
ljmp
js
xlat
fwait
mov
setge
push
mov
stc
int
les
inc
in
movsl
xchg
iret
add
xchg
jecxz
sbbb
sbb
xchg
push
in
nop
arpl
pop
mov
fsubr
push
sar
mov
sub
lret
movsb
xchg
repz
xchg
jne
push
ret
lock
test
rorb
pop
mov
push
push
incl
mov
push
hlt
lahf
pop
fs
or
cld
xor
mov
call
mov
jne
adc
insl
xor
sbb
rcl
xchg
xchg
pop
mov
cs
jns
cmp
cmp
out
and
gs
iret
inc
and
sbb
xor
push
push
sbb
insb
jg
int3
shrl
jecxz
int
pop
out
mov
mov
out
lods
add
and
sbb
or
push
dec
les
add
outsl
jl
pop
adc
and
pop
jmp
adc
dec
mov
add
es
pop
icebp
loope
std
xchg
rcr
lcall
sbb
jmp
mov
mov
test
arpl
xchg
push
movsb
sub
and
lret
cwtl
or
xchg
jns
in
movsl
loopne
jo
and
lret
xor
pop
xchg
dec
pop
mov
hlt
xor
lcall
jns
loopne
adc
adc
cmp
inc
popa
dec
leave
push
xchg
mov
pxor
jmp
jnp
cmp
mov
sti
jns
repnz
mov
mov
mov
pop
adc
imul
mov
out
mov
pop
pop
pushf
push
pop
mov
jno
gs
fimuls
stos
mov
sbb
or
push
sbb
adc
daa
call
or
mov
and
add
sub
and
aam
sub
std
shl
mov
push
loop
add
push
sub
out
sbb
jb
js
dec
mov
int
mov
addl
mov
es
fmull
mov
cli
cmc
push
rorb
filds
or
sarb
mov
jecxz
push
push
inc
addr16
xchg
adc
sub
lock
cmp
into
pop
inc
scas
pusha
addb
sti
nop
and
push
cmp
std
add
add
test
mov
mov
pop
inc
cmc
xor
cmpsl
sub
data16
xchg
inc
in
pop
push
mov
jle
or
xlat
jl
sarl
mov
or
xchg
add
adc
scas
xchg
icebp
out
jecxz
es
cmpb
cwtl
fs
clc
jl
pop
std
jnp
mov
cmpsb
mov
add
out
scas
xchg
ss
ja
push
xor
cld
push
test
sub
inc
xchg
mov
out
mov
pop
and
xor
pop
push
dec
cmp
das
adc
stc
lock
or
test
lret
popf
jno
in
rcll
sahf
fwait
sbb
jnp
or
rcrb
mov
push
adc
dec
dec
dec
jmp
es
aas
out
push
popa
sub
rcrb
or
fildll
lods
stc
jmp
sbb
xchg
pop
aad
mov
fs
sbb
push
imul
add
cmp
cmp
shrl
iret
inc
neg
xchg
outsl
cmp
ja
aam
cs
in
mov
test
xchg
or
push
nop
mov
enter
mov
pop
aad
sub
mov
pop
divb
scas
sbb
dec
rorl
aas
xchg
lock
sbb
scas
pusha
lcall
mov
add
cmp
xchg
outsb
pop
repz
xchg
or
fcoml
scas
fwait
push
mov
adc
rclb
mov
and
das
xchg
repnz
rclb
repz
push
lcall
jae
inc
or
push
fs
add
mov
sbb
push
daa
pop
insb
ret
jp
mov
adc
pusha
aaa
cld
in
data16
loopne
jbe
push
arpl
mov
into
adc
mov
mov
mov
test
adc
jne
clc
cmp
mov
xchg
popf
adc
bnd
cmpl
cwtl
adc
out
jmp
or
bound
xor
xchg
cmp
pop
cmp
push
inc
push
inc
cmpsl
in
outsb
std
repnz
frstor
mov
ret
dec
ds
xor
addr16
aam
hlt
push
aam
addl
cltd
rolb
mov
jmp
xchg
adc
arpl
add
mov
test
pop
jne
xor
sbb
push
stos
add
jns
inc
pop
mov
out
mov
mov
mov
cmp
test
int3
jnp
push
inc
test
dec
pop
cmp
pop
mov
mov
push
push
popa
pusha
rorl
je
pop
jecxz
ficompl
pop
sahf
fcomps
imul
inc
jg
xchg
xchg
mov
pop
and
pop
lods
mov
sub
or
fisubs
cld
mov
shlb
lahf
sarb
adc
arpl
fistpl
test
sub
push
ljmp
adc
adc
lret
mov
mov
mov
ret
pop
pop
fildl
mov
call
cld
inc
add
mov
or
enter
jg
and
pop
sub
mov
xor
out
mov
jmp
mov
mov
pop
or
movsb
pop
adc
pop
stos
and
test
adc
add
mov
push
mov
jp
cld
jle
mov
xchg
jno
mov
xchg
ljmp
sarl
mov
aad
mov
add
test
sti
pushl
cli
loop
lock
push
lcall
and
jne
adc
test
mov
dec
mov
add
mov
out
jae
mov
push
sbb
lods
jae
cmp
fisubrs
or
add
hlt
mov
sbb
mov
dec
aad
pop
and
mov
push
out
fsubl
call
pop
popf
in
je
mov
js
lea
sti
popa
add
push
divb
xchg
cmp
pop
imul
out
cmpsb
out
es
mov
je
mov
xchg
enter
mov
cli
insl
sub
sub
push
repnz
jle
or
jo
shlb
movsb
mov
dec
pop
mov
sub
dec
jb
lods
push
pop
xor
adc
or
fildll
test
adc
mov
cmp
and
add
inc
mov
xchg
inc
notb
or
inc
mov
or
xchg
inc
lahf
ret
int
push
adc
sub
shlb
fdivs
inc
xor
fildl
or
in
repz
xchg
xchg
push
nop
aaa
pop
dec
add
jno
mov
cmp
cli
test
inc
xor
add
cmc
push
movsb
roll
rclb
scas
dec
dec
xor
cmp
fstpt
cmp
cmp
mov
movsl
cmc
jb
push
cli
lock
push
loope
loope
outsl
cwtl
pop
cmp
lods
mov
scas
mov
push
call
sbb
hlt
xchg
mov
in
cmc
stos
mov
xor
aad
shr
and
fs
dec
in
rcl
xor
pusha
xor
aaa
mov
mov
mov
daa
mov
int3
aam
dec
inc
sti
call
push
sarl
shll
sbb
push
cli
rorl
xor
test
adc
aaa
sub
je
push
lods
lcall
mov
mov
jo
cmp
iret
cmp
mov
push
dec
sub
pop
inc
mov
in
jecxz
xor
imul
sahf
das
popa
xor
lea
inc
pop
sub
icebp
test
dec
xor
mov
mov
imul
mov
jne
mov
inc
sbb
lret
or
leave
jbe
fisubrl
rorl
std
sub
loopne
and
out
ss
xchg
xchg
add
adc
push
cmp
adc
add
cmpsb
icebp
sub
mov
fistpll
adc
aaa
sub
xor
or
cmp
cmp
ss
lock
es
adc
inc
cmp
lret
rolb
cli
push
mov
ljmp
or
pop
lahf
ja
dec
mov
mov
and
xor
test
pop
inc
xor
aam
int3
pop
cmp
xchg
lods
mov
lock
pushf
or
mov
shrb
mov
xlat
jecxz
hlt
out
dec
repz
jecxz
gs
push
pop
jns
gs
pop
and
xchg
mov
cmp
aas
mov
es
mov
or
lcall
cli
push
sbb
leave
sub
adc
in
mov
mov
lds
jg
jecxz
lds
sub
mov
mov
fsts
addr16
rorb
xor
pop
test
loopne
out
ficoms
jae
add
dec
pop
sbb
loop
push
jge
xlat
gs
test
stos
cmpb
fisubrl
cli
xchg
das
sbb
sahf
int3
fidivl
dec
or
iret
insb
pop
notb
cmpsb
mov
xchg
or
movsl
xlat
lods
push
pop
pop
sub
leave
jbe
inc
sbb
js
popf
inc
fcomi
sbb
cltd
pop
dec
cld
es
add
cmpsl
inc
pop
xor
pop
xor
push
sahf
jp
arpl
outsl
or
dec
pop
imul
insl
mov
in
cli
rorb
fs
out
adc
out
mov
leave
loop
lret
jb
scas
jp
and
ljmp
das
add
mov
mov
add
in
xchg
jmp
mov
outsb
rcrl
and
out
test
negl
aam
jae
mov
loope
xlat
scas
xchg
imul
sti
pop
cwtl
rclb
sbb
xchg
inc
mov
pop
lods
lods
mov
jae
mov
inc
inc
test
cld
aaa
mov
in
cli
sub
movsl
int3
sbb
repnz
out
test
je,pn
cmp
lods
movl
and
and
jne
adc
fdivrp
inc
jne
mov
sbb
sbb
mov
xchg
lret
in
out
mov
rcrb
inc
movsb
mov
and
pop
mov
gs
pushf
inc
js
mov
jle
rep
out
das
inc
hlt
jge
inc
dec
scas
pop
ret
pop
movsb
add
inc
mov
rcr
xchg
int3
cli
pushf
js
mov
dec
xchg
stos
mov
leave
dec
orl
mov
fsubrl
jmp
add
sbb
cltd
decl
dec
clc
adc
lea
or
mov
jne
jb
addr16
enter
pop
mov
pop
or
in
shll
loop
sahf
or
ror
cltd
push
addr16
sbb
jns
insb
frstor
add
pop
ret
add
push
mov
out
pop
sub
mov
movb
adc
add
add
mov
mov
xchg
imul
fs
in
and
bound
mov
into
aam
out
icebp
stos
jae
es
xchg
inc
dec
pushf
mov
cmova
mov
xor
adc
cltd
test
fstps
and
mov
fstpl
mov
call
mov
rcl
mov
xchg
das
stc
mov
push
push
gs
dec
enter
add
jg
sub
repnz
cs
mov
insb
fdiv
inc
dec
and
xlat
jbe
xchg
xchg
js
xlat
add
xchg
push
mov
mov
inc
popa
dec
push
and
cmpsb
std
jp
stc
loope
mov
pop
xlat
or
lea
out
mov
pop
int3
sbb
push
iret
xchg
cmpsl
out
pop
cmp
pushf
testl
scas
repnz
push
push
scas
je
mov
cmp
insb
jae
das
xchg
add
stc
leave
mov
push
idiv
lods
push
xchg
movsl
jne
dec
test
mov
out
add
clc
jmp
mov
push
sub
enter
adc
xlat
jp
ret
sub
sahf
push
shrl
cmp
adc
or
dec
lods
lahf
fistps
call
mov
adc
push
shll
icebp
dec
inc
stos
imul
push
inc
jne
jo
mov
ljmp
outsl
xchg
cli
jge
divl
into
fmul
insl
lahf
xchg
push
or
xchg
movsb
mov
jle
in
jmp
or
lcall
popf
in
add
xor
xchg
and
sub
stc
imul
cli
cmp
lock
or
sbb
clc
arpl
dec
fwait
xchg
or
daa
out
mov
aas
jns
mov
or
inc
lock
push
or
mov
cmp
jg
sbb
mov
sahf
stc
ret
xor
popa
es
dec
out
xlat
jle
and
iret
stos
and
xchg
dec
sub
and
int
ja
lahf
insl
adc
add
in
xchg
gs
iret
fsts
lret
xor
mov
sub
mov
pop
jb
lcall
push
pop
ljmp
or
sbb
fwait
imul
xorl
out
pop
shll
push
imul
cmc
xchg
aad
xor
repnz
les
fldl
pop
cwtl
cmp
sti
mov
icebp
add
push
daa
andb
repnz
movsb
jo
fiaddl
cli
jnp
jbe
je
fdivl
pop
xchg
pushf
je
sbb
xchg
adc
mov
cmpb
ja
push
aad
fcmovnbe
push
jge
xor
clc
clc
fwait
hlt
test
xchg
push
xchg
stos
and
in
movsb
notl
sub
in
int3
xchg
rclb
or
loopne
push
cmp
push
dec
jo
nop
inc
imul
dec
inc
roll
pop
insb
fs
mov
fsubrp
outsl
popf
mov
xchg
int
mov
ljmp
ljmp
aaa
push
jle
test
les
testl
popf
fildl
mov
xchg
xchg
arpl
or
test
popa
into
cwtl
hlt
mov
dec
mov
repz
mov
bound
rorl
lods
jge
insb
lret
fucom
mov
out
ljmp
sbb
cmp
clc
jg
xor
xchg
fcomp
push
test
les
loope
out
jae
push
int
cmpsb
jno
add
addr16
fwait
jbe
test
sub
nop
mov
jl
jb
insl
loop
insl
leave
or
dec
xor
mov
call
cs
add
or
test
test
in
fcompl
fcmovb
cmp
mov
inc
sub
and
aas
and
pop
pop
fld
push
scas
and
addr16
push
dec
out
cmp
xor
mov
push
vpmullw
add
xchg
fcmovb
jb
cmp
jns
shl
and
xor
cmp
push
ss
cmpb
fildl
push
jge
leave
mov
mov
xlat
jge
fwait
ret
xchg
test
ret
xor
test
cmp
inc
incb
add
lret
and
loopne
push
fwait
movsl
push
sub
out
jge
test
pop
jo
decb
in
dec
aas
fldt
jg
dec
je
scas
cltd
sub
sbb
xor
sub
or
cmpsl
cwtl
loopne
movsb
jecxz
lods
out
scas
repz
js
fisttpll
aad
inc
loop
xor
test
mov
inc
arpl
inc
and
repz
es
sbb
fwait
cmp
adc
add
scas
and
xchg
cmp
mov
xchg
repnz
mov
lods
fwait
mov
xchg
jl
cmp
xchg
fwait
adc
test
call
scas
fldl
mov
jge
mov
pop
inc
sahf
stos
pop
xchg
inc
and
mov
dec
xor
mov
mov
and
mov
inc
fwait
ss
sub
push
das
bound
fdivr
icebp
jmp
push
ror
inc
inc
addr16
xor
cs
inc
out
jo
movsl
call
pop
lea
push
fs
add
fwait
xchg
out
pop
pop
mov
popa
lds
xlat
cmp
sbb
xchg
leave
mov
push
ja
call
mov
std
into
jg
mov
cld
addb
cmp
call
int
xchg
mov
add
push
mov
out
sbb
scas
pop
sub
or
jp
jbe
push
daa
out
stc
les
divl
adc
adc
adc
int3
and
sub
sbb
in
or
sahf
xchg
pop
push
imul
cmc
and
xchg
int3
pusha
xchg
push
pop
outsb
mov
ror
bound
aas
in
out
hlt
mov
int
shl
ds
sub
pop
dec
leave
sbb
shll
shlb
mov
sbb
jns
add
out
out
jae
adc
leave
jg
aam
xor
dec
sbb
push
sbb
arpl
mov
xchg
lret
sub
cmp
movsb
pop
inc
adc
imull
push
cld
arpl
push
push
imul
in
dec
cmpsb
gs
pop
mov
cmc
filds
movsb
sbb
jno
stc
xchg
bound
inc
dec
add
jb
sarl
and
cmp
xorl
pop
jmp
cmp
xor
imul
rorb
outsb
rorb
xlat
je
xchg
mov
cmp
pop
or
lret
lret
add
sbb
out
push
or
mov
adc
scas
inc
cmc
xor
ljmp
aas
xor
or
pusha
dec
sub
in
imul
push
mov
iret
popf
xchg
popf
pop
test
outsl
adc
test
sahf
pop
jae
xlat
mov
outsl
xor
push
inc
mov
mov
pop
insl
je
dec
in
je
test
out
add
push
xchg
scas
aaa
mov
inc
and
push
dec
add
xchg
cmpsl
orl
and
dec
mov
andb
lret
jg
jmp
jbe
add
jmp
mov
lahf
fnsave
jecxz
cmpsb
lret
cmc
pop
clc
loope
or
into
cli
or
fisttpl
stos
xor
push
xchg
mov
stos
or
push
jno
add
loopne
movsl
imul
frstor
mov
jmp
push
sbb
test
out
and
ficompl
popa
or
fildll
pop
test
inc
iret
arpl
cmc
stos
or
sbb
mov
jp
mov
imul
test
sbbb
add
roll
push
insb
cltd
mov
lret
insl
movsl
insl
ja
xchg
pop
shrl
sarl
imul
test
negl
stos
cmp
iret
ret
ret
xchg
ss
mov
sub
fucomip
sub
adc
imul
sar
sub
inc
cmp
mov
mov
push
pop
scas
scas
pop
pop
fs
cltd
or
jbe
adc
out
inc
movsb
and
lods
mov
insb
jo
mov
stc
dec
jne
std
xchg
and
inc
repz
adc
fs
mov
fidivl
cmpl
lahf
test
mov
jne
movsl
mov
lcall
cmp
mov
sbb
xchg
std
adc
mov
arpl
pop
rorl
je
jle
mov
lret
daa
jnp
repz
xor
or
sbb
std
inc
mov
mov
icebp
je
dec
adc
test
insb
pop
and
fmuls
sub
dec
cs
js
repnz
les
lahf
mov
or
aam
add
pushf
pop
inc
or
inc
loope
jo
xchg
loope
imul
xchg
rorl
or
mov
or
lds
loop
xchg
xchg
fwait
insl
or
lds
jns
mov
jne
inc
push
push
scas
jbe
push
cld
popf
sbbb
xor
ss
lea
ds
cld
push
jns
and
inc
nop
shll
push
vmwrite
adc
sbb
movsb
cmp
movsb
add
into
xor
push
mov
js
lcall
imul
add
adc
mov
xor
js
xchg
repnz
jo
rcrb
aaa
mov
shrb
lods
xchg
les
mov
sub
xchg
push
ret
jg
pop
xchg
pop
repz
in
xchg
mov
je
push
roll
push
mov
hlt
out
decl
fdiv
pushf
sub
mov
cld
mov
scas
adc
adc
call
xchg
fwait
cmp
adc
in
aaa
xchg
jmp
push
fistpl
add
add
sbb
adc
mov
pop
or
jns
xchg
pop
shl
jo
mov
in
mov
lahf
and
dec
orb
loopne
cwtl
shlb
mov
outsb
xchg
pop
and
sarb
mov
pop
add
loopne
xchg
rcl
dec
roll
stos
test
sbb
outsl
outsl
in
sbb
fwait
rorb
cwtl
jbe
imul
insl
xchg
fwait
cwtl
pop
popa
popa
loope
xor
push
clc
idiv
lret
mov
jp
je
push
ja
xor
dec
pop
pop
sub
lahf
fs
daa
add
scas
sbb
push
mov
es
js
sahf
and
mov
xchg
sahf
or
or
cli
push
icebp
cmp
jb
sub
test
and
in
push
stc
lock
sbb
out
ss
xor
int
mov
inc
adc
cmc
lahf
sbb
mov
cwtl
cmpl
call
sub
xchg
mov
xor
loopne
mov
test
popa
add
iret
out
dec
outsb
popf
imul
out
loop
xchg
xchg
testb
and
push
xor
and
and
ret
call
enter
cmp
jns
sub
mov
push
xabort
cmp
enter
ljmp
mov
xor
insl
jge
daa
add
sahf
psubsw
fldpi
in
aad
dec
stos
jno
inc
fsubr
int
add
out
nop
es
push
sbb
aas
shll
enter
xor
push
adc
aad
cmp
insb
xchg
jno
sarb
push
imul
insb
pop
jg
sti
inc
insb
lret
cmpsl
into
stos
std
fcoms
jbe
xchg
adc
aam
add
jecxz
dec
or
fldenv
mulb
xchg
jb
or
or
arpl
xor
jbe
mov
stc
add
cmpsb
jmp
mov
jno,pt
jl
test
xchg
and
mov
sub
sahf
mov
jecxz
cmpsb
pushl
bound
cmp
jl
jns
push
test
jns
pop
sbb
mov
inc
dec
mov
xor
adc
pop
pop
jno
imul
cmp
lods
stos
fmull
dec
jo
mov
and
or
pop
imul
popf
sub
xchg
cmp
mov
shll
gs
idivb
lds
std
das
loope
push
cld
cwtl
mov
fs
aas
lcallw
xchg
xchg
or
pop
movsl
fistl
ret
inc
out
enter
cltd
lea
xchg
sbb
mov
push
dec
fwait
and
dec
inc
xchg
neg
xchg
push
jl
add
sbb
dec
lods
xorb
je
cmp
out
jp
cld
adc
fxch
lods
pop
pop
insl
dec
les
pushf
push
and
std
sbb
jne
pop
pusha
sbb
ljmp
stos
orl
push
fldenv
jae
and
jl
mov
mov
inc
andb
aaa
mov
imul
adc
sbb
jl
clc
mov
idiv
dec
sbb
outsb
mov
daa
aad
add
cmp
lods
cld
mov
loopne
mov
cmpsl
outsl
sbb
mov
lcall
cmp
in
stc
rcr
or
in
jecxz
mov
adc
outsb
xchg
outsb
test
lods
imul
mov
push
sub
or
push
mov
inc
push
test
dec
push
xchg
mov
insl
subb
lea
sti
loopne
inc
repz
cmp
fwait
pop
add
jmp
int3
mulb
dec
mov
mov
daa
pop
xchg
inc
and
sarb
mov
adc
loope
inc
out
adc
pop
xchg
push
jecxz
dec
leave
inc
xchg
jbe
scas
or
xchg
adc
mov
jae
push
inc
xchg
jge
jmp
mov
mov
scas
mov
iret
aaa
int
or
test
sbb
out
negb
mov
pusha
mov
push
decl
pop
repz
jmp
cmp
inc
mov
jecxz
out
pushw
out
daa
jmp
hlt
pusha
inc
pop
in
mov
cli
jbe
test
pop
cmp
jo
inc
xor
mov
pop
and
test
dec
aam
and
dec
jge
loope
fistpl
inc
pop
popa
mov
cmpsl
jbe
jg
add
mov
push
mov
aam
mov
mov
mov
pop
lahf
or
js
rcl
inc
xchg
popf
flds
jl
loop
or
in
cli
and
or
popa
js
xor
push
mov
repnz
mov
xchg
decl
push
mov
jo
aad
aad
sbb
jle
scas
push
idivl
into
mov
mov
cltd
movsl
jno
and
push
sahf
cmpb
inc
sub
mov
mov
sti
aaa
push
call
jo
inc
leave
push
push
mov
fcomps
xchg
mov
mov
sub
and
out
cli
or
pop
int3
push
add
fstp
pop
or
arpl
repz
jle
jnp
cmp
fwait
hlt
push
scas
aad
insb
and
outsl
or
aam
sub
cld
and
xchg
and
and
inc
jmp
xchg
sub
fists
inc
lods
pop
aas
mov
xor
test
xor
bound
imull
out
daa
push
stc
sbb
test
push
test
ja
cmp
cmp
cmp
adc
loope
jns
lret
push
hlt
movsl
shll
pop
sti
lret
xchg
add
and
adc
sub
cmpsb
es
and
addr16
add
pop
fstpl
out
mov
push
inc
cmp
or
loope
pop
aam
test
sar
cwtl
dec
push
push
js
add
jmp
mov
fsts
adc
cmp
popa
sbb
adc
lock
testb
pop
cltd
into
push
imul
repnz
aaa
inc
xor
pop
push
dec
and
sbb
xor
sahf
negb
push
cmp
mov
lret
pushf
xor
push
sub
xor
aas
mov
ss
rcl
out
push
das
sbb
subl
ret
ret
pop
inc
cmp
sbb
arpl
mov
push
mov
xchg
or
xchg
bnd
repz
inc
fistpl
jnp
or
ficoml
mov
nop
pop
push
xchg
pop
jne
push
testl
jmp
sub
xor
fs
mov
sub
clc
ficomps
dec
jl
jp
xchg
insl
jg
cmpsl
int3
mov
stc
ss
pop
pop
adc
gs
fs
movsb
push
ss
clc
push
lret
repz
sub
cmp
sti
jns
xchg
outsl
icebp
xor
jae
cmp
dec
push
mov
jle
aas
imul
xchg
xor
sti
adc
cmp
dec
dec
xchg
pop
pop
or
out
and
cmpsb
insb
stos
rclb
mov
repz
dec
jo
test
cwtl
sub
scas
cmp
or
pop
ja
push
dec
ret
fimull
and
lahf
add
nop
notb
dec
mov
jae
cmp
out
mov
movsb
push
jl
mov
aad
sbb
xor
shrl
lret
cmp
add
repnz
je
add
je
xor
lods
sub
in
mov
jg
mov
iret
cmpsb
testl
pop
test
push
jle
mov
iret
rep
cmp
inc
sbb
mov
pop
data16
cmp
fdiv
xchg
aam
cwtl
ds
and
pusha
lock
xchg
push
jmp
not
insl
mov
or
push
mov
xchg
loope
sbb
sbb
vorps
lret
sbb
jg
jbe
arpl
test
mov
adc
inc
cld
push
outsb
repz
mov
cmp
cmp
jp
xchg
xchg
mov
in
fwait
outsb
adc
inc
mov
push
push
push
outsb
not
shl
les
and
imul
push
addb
mov
dec
out
aad
lahf
cmpsb
jae
cmp
or
sbb
pop
jae
aaa
rclb
out
cmc
popf
cwtl
push
mov
dec
in
sbb
into
cmpsl
xor
adc
gs
mov
stc
das
and
push
stos
inc
rorl
leave
sub
imul
mov
sti
rolb
bound
sbb
stc
lcall
repz
xor
sub
xor
jne
test
lds
push
popa
or
aaa
push
daa
aad
fsts
es
dec
out
aaa
sub
mov
int
push
adc
popf
insl
arpl
jb
cmc
lock
sub
mov
daa
pop
data16
outsb
in
adc
orl
seta
lahf
lods
in
stos
mov
or
sub
xchg
repz
sub
pusha
lods
pop
sub
packsswb
and
imul
fsubrl
mov
mov
loope
imul
ja
xchg
in
cwtl
ret
dec
cmp
pop
es
dec
into
sub
divl
and
cmp
push
add
int
adc
sub
jg
inc
ljmp
cmp
ret
lcall
stos
jge
rclb
jg
jmp
jl
hlt
add
add
cmc
add
fdivs
inc
ljmp
and
test
pop
push
decb
mov
adc
push
cld
cli
add
mov
lahf
cmpsl
fadd
js
arpl
fs
pop
cmc
add
jmp
push
shrl
pop
test
push
jl
test
pushf
jle
iret
insb
pop
repz
xchg
cwtl
sbb
cmp
cld
push
xchg
pop
negl
fdivrs
sti
or
in
sub
shl
pop
xor
mov
sahf
jmp
out
xchg
dec
nop
xlat
aas
push
cmp
div
cmp
fstps
push
mov
insl
fsts
orl
ds
mov
pop
movsl
fwait
outsl
lret
in
orl
inc
xlat
repnz
cmp
aad
and
dec
inc
add
pushf
les
repnz
ljmp
ss
pop
inc
hlt
incl
lahf
jg
leave
mov
mov
shrl
mov
sub
cpuid
jb
loope
cwtl
adc
sar
nop
mov
sub
xor
cmp
dec
out
aas
popa
bnd
test
into
dec
and
push
pushf
sti
mov
es
adc
push
pushf
scas
cmp
and
inc
mov
mov
xchg
cmc
push
stc
sbb
lods
jb
mov
decb
shll
adc
out
in
dec
mov
cld
mov
and
mov
out
mov
cli
pop
cmp
or
dec
or
xor
aad
xor
sarb
fdiv
je
js
std
adc
test
int3
xchg
fcmovne
mov
shrb
arpl
lahf
sbb
fistl
leave
cmp
es
shl
jl
loop
fwait
dec
lea
jmp
jmp
ret
pop
pop
movsl
mov
or
nop
stc
andl
gs
mov
push
jne
and
jnp
push
mov
jecxz
inc
and
mov
mov
int3
push
mov
stos
divb
mov
push
lea
cs
jl
repnz
xchg
and
or
pusha
popa
loope
ror
lods
dec
inc
mov
xchg
clc
cmpxchg
push
das
push
and
pushf
or
xor
mov
add
cmc
dec
data16
hlt
test
jle
push
shrb
push
iret
cs
rcr
add
dec
aaa
pop
test
clc
xchg
or
sbbb
or
xlat
icebp
add
test
out
push
mov
mov
sarl
mov
sbb
xlat
xchg
add
push
dec
fs
test
xor
lret
cmp
adc
aad
lret
xor
pop
sub
adc
subl
adc
cmpsb
scas
or
sbb
js
test
cwtl
add
dec
push
push
jnp
repz
pop
fisubrl
outsl
cmp
fdivl
in
lret
lret
adc
mov
jmp
xchg
nop
rcrb
mov
xlat
fucom
pop
jns
adc
repnz
xchg
add
inc
mov
lcall
addr16
inc
mov
pop
fst
test
inc
inc
jecxz
fsubs
popl
sub
pop
sub
pop
xor
rorb
loopne
ret
mov
dec
inc
sbb
jo
sub
add
cmp
add
adc
mov
stos
sahf
mov
mov
xor
fmull
inc
test
imul
cmp
fsubl
mov
adc
in
lock
jns
and
push
adc
dec
push
jnp
out
push
adc
into
mov
jl
jno
out
mov
dec
lock
pop
cmp
ss
addl
and
loop
stos
sub
xchg
cmp
dec
inc
test
mov
dec
sub
pop
divb
test
cmp
movsb
outsl
sahf
sbb
sarl
xor
sbb
test
lcall
adc
mov
sbb
out
fildl
pushf
lret
xchg
push
mov
mov
test
lahf
pop
ss
cmp
dec
and
movsl
sahf
aaa
fdiv
cwtl
in
fs
sbb
jg
stc
inc
jo
jns
repnz
pop
and
xchg
test
shlb
fistpll
mov
adc
and
insb
fidivl
aam
sub
push
sti
je
or
push
pop
repz
cmp
mov
pop
mov
fstps
adc
sbb
lods
andl
in
imul
fidivl
stos
or
mov
std
sbb
fbld
aaa
ja
or
xlat
lea
sub
cmp
je
xchg
outsb
mov
aas
inc
dec
dec
mov
loop
dec
cli
jl
xchg
mov
mov
jbe
mov
inc
test
sub
idivl
mov
sbb
frstor
les
les
ficomps
mov
sub
cmp
pop
lret
loope
fsubr
xchg
lcall
cmp
mov
inc
hlt
repz
pushf
mul
repz
mov
push
cmp
sub
rclb
sbb
sar
repz
pop
outsb
icebp
xor
shl
clc
ficoml
mov
imul
int
adc
out
sub
loop
mov
cmc
cmpsl
jns
jns
push
inc
cmp
dec
cmpsb
adc
icebp
sub
ret
and
push
mulb
dec
cmp
sbb
mov
shll
mov
cs
sti
lock
lods
sub
ret
xor
lods
mov
add
push
call
pop
das
inc
outsb
mov
pop
push
pop
pop
loop
adc
push
adc
sbb
shl
xchg
sbb
int3
push
jge
in
out
jmp
or
jo
rorl
cmp
jbe
mov
mov
fs
faddl
ret
cmp
jecxz
adc
jne
outsb
cmpsb
mov
push
mov
pop
in
lods
xchg
xchg
sahf
outsb
mov
test
cmp
adc
mov
dec
xor
xchg
mov
inc
lret
sbb
enter
pop
dec
daa
out
out
pop
adc
mov
and
pusha
mov
lock
jg
mov
mov
jl
je
lock
mov
inc
nop
arpl
rcll
fs
sarl
mov
in
addr16
icebp
pop
xchg
mov
cmp
or
push
cmp
stos
cmp
inc
in
push
lds
repnz
sub
fsub
stos
test
mov
imul
xor
jne
xchg
xor
jae
jo
sub
in
push
bts
dec
sbb
lods
dec
dec
insb
xchg
int
jle
out
mov
aam
mov
cmp
out
cmp
or
call
out
das
js
int3
push
lock
jp
ret
cmp
add
bound
les
jae
mov
push
cmpsl
jns
push
and
cld
out
mov
cwtl
adc
fdivp
mov
jecxz
scas
in
nop
cltd
mov
adc
iret
push
pop
adc
add
jns
bound
adc
sarl
jge
mov
jne
push
cmp
inc
pop
dec
and
cmpsl
jb
jmp
mov
mov
jns
cli
and
push
mov
ljmp
add
dec
push
stos
outsl
sahf
scas
inc
sub
sub
push
dec
test
jae
mov
inc
sti
mov
xchg
pop
inc
clc
aam
stos
cmp
pop
insl
je
aas
sbb
add
sbb
pushf
enter
js
and
dec
cmpsb
xchg
shlb
inc
xchg
sahf
imul
fmuls
addr16
mov
loopne
aad
lahf
arpl
test
pop
dec
ret
sub
mov
mov
fs
pop
cs
je
cmc
inc
and
xchg
pushf
dec
cmp
pop
sbb
push
loope
outsl
dec
jmp
or
repnz
sahf
lods
rorb
into
push
gs
leave
jo
xor
popf
xlat
xlat
jns
sbbl
testb
jbe
aas
add
pop
dec
dec
and
mov
cli
cmp
mov
nop
jae
cmc
int3
inc
lcall
push
dec
test
sub
out
std
jmp
enter
adc
cmp
push
sub
les
shlb
jg
xlat
mov
fwait
mov
fistps
sbb
in
jae
sbb
leave
minps
cmpsl
fcmovbe
ja
movsb
ljmp
jp
mov
addr16
in
js
mov
adc
stos
cmp
cmp
cmp
loopne
shll
push
sahf
fisttps
xchg
loop
iret
jne
loope
shrl
xor
cmp
mov
ret
in
mov
jns
shll
iret
dec
xchg
add
lret
hlt
sub
ja
dec
movsb
jmp
jl,pt
or
out
fwait
xchg
mov
xor
sbb
ja
pushf
mov
idivl
or
sti
xor
jb,pn
loopne
sub
cltd
lods
les
or
aas
arpl
scas
das
repnz
andl
ficoml
mov
xor
mov
jl
cmpsl
push
aaa
cmpl
lahf
popa
add
pop
movsb
sti
pop
test
mov
jnp
and
jmp
cs
mov
push
movsl
repnz
jnp
pop
sbb
icebp
cld
sub
js
and
pop
xor
fistpl
or
push
fadds
sbb
in
dec
push
mov
test
mov
lods
imul
or
nop
les
sub
mov
das
jb
mov
out
xor
cmp
cmp
int3
gs
or
fs
mov
xchg
add
adc
scas
bound
repnz
lcall
lret
mov
hlt
test
clc
stos
jnp
fs
aaa
jecxz
jae
pop
xor
sbb
pop
dec
mov
testb
cmp
cmpsb
cmpsb
mov
scas
mov
lahf
outsb
jb
push
mov
pop
call
mov
repnz
cmpsl
mov
shrb
inc
test
inc
sti
push
fmull
pop
das
cltd
mov
and
sahf
mov
sub
xchg
lahf
or
lret
fsub
pop
mov
cli
aam
fdivrs
in
outsb
sub
add
mov
jp
push
dec
nop
fdiv
dec
fldt
roll
jno
aam
sbb
mov
mov
loop
pop
icebp
pop
xor
sub
popf
rclb
int3
jmp
mov
lahf
aaa
in
pop
pop
loopne
and
dec
pop
add
clc
cwtl
scas
xchg
addr16
fs
xchg
repz
sbb
das
cmp
mov
dec
sti
stc
out
xor
mov
fcoml
clc
scas
fimull
jne
pushf
jo
mov
test
push
push
test
add
adc
add
mov
out
push
out
push
out
mov
mov
orb
ret
mov
mov
pop
mov
sbb
and
lods
xchg
pop
mov
jge
mov
lcall
xchg
push
cmc
call
stos
and
bound
cmp
jno
push
lcall
pop
mov
inc
mov
fists
aam
add
int3
cs
jae
jb
or
inc
xchg
lds
inc
movsb
push
in
add
mov
mov
cmp
ss
mov
pop
jnp
dec
jecxz
dec
es
lret
and
add
sti
push
inc
add
mov
fstpl
dec
test
inc
sbb
mov
sbb
push
sub
dec
jbe
sub
xor
mov
aas
js
pop
mov
das
test
sbbl
xchg
out
fwait
test
popf
jg
ljmp
jns
xor
icebp
lock
cli
xor
ret
dec
fucompp
xor
sub
mov
clc
sub
jl
cmp
xchg
and
dec
sti
fldl
xchg
push
inc
inc
imull
mov
or
pop
loop
lret
repz
and
mov
icebp
push
cmc
xor
cmp
dec
nop
mov
push
aaa
adc
inc
add
adcl
stos
xor
cmp
or
adc
ret
stos
inc
aam
lds
pop
aaa
sub
call
xchg
es
mov
data16
mov
lcall
xor
std
cmp
vpsllq
add
test
or
push
outsl
fildl
into
xchg
xor
sub
sbb
in
cmp
idiv
sbb
scas
mov
aam
lods
rcrl
data16
dec
add
pop
pop
cmpsb
dec
mov
loope
cmpsb
sbb
mov
mov
shl
pushf
arpl
in
imul
mov
daa
inc
fsubrl
lock
popf
ljmp
into
push
std
out
xor
or
push
push
fists
cmp
sub
in
inc
insl
push
jnp
sahf
in
out
lea
ljmp
dec
xor
fnstenv
cmp
adc
popa
mov
push
das
mov
xor
sub
movsl
jmp
aas
sbb
adc
jecxz
jne
scas
negb
mov
sbb
fstps
stos
adc
ficomps
rcr
lret
pop
mov
pop
cmc
sti
lahf
fcmove
push
xchg
add
sahf
cmc
nop
xor
mov
or
jmp
test
sbb
pop
adc
orb
mov
fiadds
push
mov
cmp
add
mov
lods
outsb
pop
dec
xchg
fs
movsb
mov
std
testl
push
push
mov
out
mov
push
push
adc
rolb
inc
scas
sbb
push
pop
and
add
mov
jne
imul
pop
add
cmpb
add
pop
add
xor
mov
and
iret
dec
sarl
inc
mov
jecxz
mov
mov
or
loop
xchg
jecxz
jl
inc
sbb
jbe
movsl
fisttpl
aam
ret
xchg
mov
jge
lret
adc
push
sbb
out
xchg
and
int3
mov
loope
idivl
cs
xlat
dec
insl
fwait
repnz
out
lret
pop
lcall
clc
adc
outsl
enter
or
inc
add
enter
bound
cld
mov
mov
inc
iret
sub
mov
add
aad
in
sahf
data16
enter
stc
rorb
out
icebp
stos
add
push
ret
ljmp
popa
in
je
je
sbb
icebp
mov
xchg
sti
xor
pop
scas
std
imull
xor
push
mov
fbld
cwtl
or
sbb
int
jo
out
inc
sbb
or
aad
notb
add
mov
lea
decl
add
mov
pop
push
pop
mov
nop
scas
or
mov
rorb
jne
xchg
inc
out
test
or
inc
jmp
pop
gs
and
jmp
and
mov
inc
stos
nop
sub
movsl
add
movsl
ret
jb
leave
xor
jbe
cmp
fiadds
mov
or
aaa
mov
sbb
repnz
lret
lahf
lret
fisttps
ja
mov
sub
test
aas
in
inc
sbb
loope
mov
cmp
roll
cmp
ret
int3
ret
mov
imul
xor
push
daa
daa
xchg
jmp
mov
dec
dec
push
cmp
jns
inc
sti
or
orl
lock
loop
dec
xor
cmpsl
lret
push
push
cmp
and
imul
fldenv
negb
cs
fsubrs
dec
clc
stos
scas
xor
in
xchg
cs
cs
inc
or
pop
adc
in
inc
hlt
add
xchg
push
and
idivl
addr16
pop
test
in
xor
mov
and
mov
iret
out
pusha
js
sub
mov
xchg
cld
inc
inc
inc
inc
dec
mov
fcomps
xlat
cwtl
imul
rcrl
push
ja
sub
mov
cltd
mov
movsb
test
inc
inc
lds
setae
mov
inc
lahf
das
loope
dec
xorl
mov
pushf
sub
mov
fnstsw
mov
pushf
and
addr16
mov
arpl
sti
dec
mov
jbe
loopne
xchg
inc
inc
das
mov
cli
pop
xchg
jg
fwait
lea
insb
mov
xlat
xrelease
dec
push
repnz
and
pop
jp
ljmp
and
out
sbb
mov
rol
adc
ret
ficoms
loopne
adc
sbb
cmpsb
es
mul
push
lret
cmpsl
mov
notl
fidivl
out
repnz
es
sub
lds
jb
dec
aad
dec
in
xchg
scas
add
inc
xchg
jecxz
sbb
sbb
inc
mov
pop
add
arpl
mov
dec
dec
pusha
orb
hlt
lret
push
test
ljmp
rcll
jg
or
in
jmp
test
pop
out
push
ret
fwait
lahf
in
fstl
fimull
adc
inc
xor
lcall
adc
enter
push
lock
icebp
scas
lods
mov
loop
lcall
imul
call
movsl
dec
movsl
loope
mov
xor
sbbb
or
cmp
mov
dec
orb
xor
iret
jg
ss
inc
sbbb
aas
lcall
flds
lret
pop
mov
mov
cmp
sbb
add
xlat
testb
test
cmpl
cmc
lea
mov
mov
sbb
test
out
pop
cmp
in
push
rcrb
mov
adc
adc
lahf
inc
lahf
cld
jmp
push
ss
imulb
imul
mull
and
in
pop
push
mov
cmp
jl
xchg
incb
iret
leave
adc
xchg
pop
adc
test
mov
stc
jae
lcall
add
aad
iret
jg
adc
movsl
sub
shll
sub
out
push
or
rorb
je
jle
mov
imul
scas
mov
inc
ljmp
and
pop
mov
mov
push
dec
mov
sbb
lea
push
test
dec
pop
jle
jle
adc
movb
mov
mov
or
dec
test
cmpsl
jecxz
shlb
fisubrs
rcrw
and
adc
mov
cltd
cwtl
pop
inc
ljmp
cmpsb
dec
pusha
xchg
lcall
xor
jle
sub
orb
xor
iret
test
mov
das
lock
les
mov
arpl
push
dec
mov
xchg
push
sub
sahf
sbb
into
sub
fistpl
jno
stos
lock
mov
mov
sub
adc
jg
fisttpll
and
stos
jno
pop
jp
jp
add
push
rorb
mov
pop
or
stos
dec
push
or
sarl
jmp
insb
mov
mov
mov
and
cmp
mov
sub
sub
cltd
rclb
cmp
xor
int3
bswap
add
adc
lahf
in
inc
pop
inc
mov
test
stc
push
rorb
inc
adc
dec
jae
mov
xor
push
dec
mov
cmc
popa
repz
aad
hlt
dec
pop
xchg
add
sti
call
fisubs
xchg
mov
cld
pushf
enter
rolb
push
pop
aad
rorb
mov
pop
push
sub
cli
mov
inc
jno
adc
jmp
mov
push
and
int
push
lods
jbe
jne
cmp
nop
ljmp
xor
or
aam
sti
xchg
out
jl
outsl
ret
andb
jno
inc
jecxz
cmp
add
pop
cwtl
pushf
xchg
mov
inc
sbb
stos
jno
mov
and
movsb
xchg
incb
mov
pop
gs
and
and
nop
lods
out
mov
adcl
add
cli
mov
jb
and
and
and
shll
js
push
or
or
arpl
mov
int3
fldcw
and
movsb
addr16
lret
cmpsl
xlat
xchg
mov
mov
test
dec
sub
rcrl
loop
out
and
popf
in
dec
daa
mov
cmp
jmp
mov
inc
jp
cmpb
or
push
xorl
pop
dec
cmp
pop
mov
add
mov
test
fldt
mov
ret
outsb
mov
lret
js
jo
cmc
mov
adcb
inc
push
int3
ret
push
mov
adc
lock
subl
xor
leave
lds
aaa
shrl
aas
pop
ror
fwait
decl
adc
xchg
cs
sub
iret
jmp
push
mov
lahf
cmpsb
fdivs
push
dec
xchg
ljmp
in
jp
cmpb
jb
push
dec
push
nop
or
leave
jmp
jne
inc
movl
jge
push
xchg
or
inc
and
xchg
dec
sub
xchg
push
pop
mov
lds
jb
jnp
iret
cld
sub
add
pop
ret
movsb
orb
cmp
pop
mov
xlat
inc
notb
fcoml
jp
pop
lret
add
jbe
test
mov
jle
arpl
fsubrp
pop
mov
fwait
xor
js
test
repz
xor
mov
push
xchg
mov
cs
push
adc
in
sahf
adc
or
repz
or
fstpt
cmp
cmp
and
pop
or
sub
ret
adc
sarl
push
lods
movsl
push
or
mov
mov
fistl
out
or
enter
pop
pop
mov
lds
mov
movsb
xor
pop
inc
jne
pop
mov
ret
and
sub
sarb
daa
test
mov
nop
adc
jp
jge
jge
jmp
xor
or
mov
sti
fnstsw
cmp
repz
add
sbb
movsl
popf
pop
jp
sti
cli
inc
jmp
std
xchg
jmp
testb
push
sbb
ret
xchg
js
ret
lods
jne
stos
pop
adc
inc
xchg
cmp
xchg
sub
into
cmp
fdivr
testb
ror
push
jae
cmpb
mov
mov
in
aad
dec
push
daa
fidivs
test
into
movswl
ja
ds
add
dec
std
mov
inc
popf
pop
lahf
dec
sbb
idivb
pop
or
cltd
repnz
mov
push
mov
in
fcmovu
pop
jo
add
mov
cmpb
xor
cmp
add
lret
push
push
dec
movsb
in
pop
dec
sbb
mov
jno
or
inc
in
into
jns
adc
cmp
lods
shl
mov
cmp
pop
or
pop
pop
lret
xchg
jne
jbe
jl
pop
fwait
adc
xchg
clc
and
test
xchg
xchg
lds
aam
addr16
fdivrl
fistpll
or
repnz
push
loopne
test
sbb
rcl
mov
out
in
xor
jne
adc
icebp
arpl
sbb
pop
call
lcall
test
in
jo
mov
test
or
sti
aam
push
jmp
out
pop
addr16
lret
stc
cmp
xor
fisubrs
cmpsl
jne
pop
lea
mov
inc
into
cwtl
daa
pop
daa
sub
mulb
sbb
push
data16
out
scas
fdivl
ljmp
sbb
call
jbe
dec
lock
adc
out
repnz
or
or
mov
or
inc
mov
push
sbb
xor
dec
inc
add
out
mov
xchg
jnp
dec
sub
cmp
pop
and
cmp
int3
imul
outsl
sbbl
jp
lds
inc
and
xchg
sbb
inc
or
sbbl
movsl
push
xchg
test
dec
mov
stc
insb
dec
aad
xor
into
cltd
shrb
cmp
insl
lcall
adc
cmp
lds
addb
sub
push
cmpsb
in
dec
inc
lods
mov
or
xor
in
cmp
mov
pop
sub
shrb
or
insl
into
fildll
push
or
push
push
fistpl
and
mull
dec
aad
push
and
adc
mov
or
sahf
inc
je
or
dec
xor
icebp
adc
and
insb
loopne
movsl
fcomps
ljmp
aad
push
mov
insb
pop
add
push
xor
js
adc
fdivrs
in
pusha
notl
add
test
xchg
test
icebp
xchg
and
adc
xor
mov
das
fbstp
fs
in
push
dec
ret
cmp
mov
cmp
pop
shrb
sub
cmpsb
inc
xchg
stos
imul
add
and
lcall
js
xlat
xchg
inc
lret
mov
dec
jle
in
cli
inc
test
xlat
mov
xchg
mov
sub
and
cmp
sub
and
xchg
xor
and
fdivs
popa
call
adcb
dec
xor
mov
into
lret
fs
call
mov
decb
hlt
mov
cltd
mov
dec
cmp
cs
and
jmp
aas
mov
fists
dec
mov
push
sub
xchg
sbb
es
or
jo
sarl
dec
jo
outsb
cwtl
mov
push
mov
sahf
rol
or
lea
in
dec
decl
test
and
dec
mov
fs
sbb
bound
and
scas
pusha
dec
xor
add
in
sub
pop
sbb
xchg
fmuls
jnp
add
outsl
lods
shrb
bound
xchg
outsl
daa
fnsave
roll
or
mov
dec
inc
test
lret
jg
movsb
dec
insl
mov
mov
in
mov
ds
jmp
xchg
mov
adc
pop
sub
pop
pop
loopne
jp
xor
xlat
addr16
test
fldenv
push
jp
outsb
mov
sbb
imul
aam
mov
and
cld
push
hlt
js
gs
xor
push
mov
neg
jmp
mov
out
pop
hlt
mov
xchg
into
add
pop
jnp
dec
fwait
or
sbbl
and
push
adc
jl
xchg
cs
jp
xor
mov
adc
ficomps
pop
push
pop
repnz
icebp
in
bound
aas
out
mov
jns
xchg
test
rolb
leave
mov
push
xchg
cltd
adc
or
repz
pop
incb
sti
scas
hlt
xor
push
adc
lods
sub
fsubs
imul
clc
call
clc
das
aam
xor
sub
cmp
pop
pop
pop
cwtl
aam
inc
sub
xchg
add
sub
mov
push
notl
imul
xlat
out
test
cmpsb
mov
lea
cmc
pop
scas
pop
xchg
xchg
in
call
push
mov
arpl
leave
jecxz
xchg
mov
mov
mov
lea
push
lods
jae
xchg
test
leave
fimull
dec
bound
adc
jmp
test
mov
pop
cmp
decl
jns,pt
shlb
pop
cmpsl
and
call
push
dec
add
mov
lds
inc
inc
mov
cmp
scas
push
lahf
shrl
xor
pop
pop
jo
int3
pop
cld
and
insb
xchg
xchg
sbb
add
call
mov
dec
push
adc
mul
dec
mov
xorl
add
mov
pop
pusha
pusha
outsb
lea
mov
jb
int3
mov
jae
or
imul
mov
push
sbb
idiv
and
test
mov
stc
loopne
push
push
jno
lods
nop
flds
adc
lcall
adc
fistpl
add
add
bound
cs
paddw
mov
imul
sub
jo
in
mov
repnz
sbb
scas
fwait
mov
clc
mov
xchg
cwtl
xor
lock
gs
or
jl
dec
inc
xlat
or
pop
push
addr16
fimuls
cmp
push
fists
scas
mov
add
mov
lods
or
sub
addr16
sub
cltd
daa
mov
adc
and
or
pop
mov
scas
push
dec
sti
in
xchg
dec
or
push
sub
sbb
ss
test
in
or
mov
adc
pop
push
outsb
inc
cmp
call
inc
mov
push
mov
lahf
adc
mov
xchg
or
cmp
imul
dec
fsubs
ret
dec
push
fs
inc
mov
push
lods
dec
adc
sbb
scas
in
sbb
or
xchg
movsl
gs
rcr
pop
bound
sbb
scas
stc
xor
out
cmp
add
js
rcll
and
mov
bound
fs
push
pop
inc
xor
xor
movsl
jbe
lods
andps
jbe
ljmp
sbbl
sti
dec
mov
into
pop
nop
inc
arpl
jmp
sarl
pop
dec
ret
dec
aam
scas
cwtl
dec
xchg
dec
xor
movsl
data16
ss
sbb
shlb
lret
mov
sbb
jne
pop
and
pushf
sti
mov
and
pop
xchg
pusha
lock
pushf
lds
mov
data16
cwtl
push
xor
popf
aaa
faddp
fnstsw
xor
ret
adc
pop
rorb
cmp
jecxz
lods
ret
jnp
xor
jbe
bound
dec
fbld
or
popa
jge
push
adc
jge
mov
rcll
in
mov
out
lds
sub
lods
jb
popf
push
inc
addl
xor
push
dec
push
stos
sub
or
int3
or
jecxz
jne
fildl
and
shlb
out
fisubl
inc
and
das
es
or
aaa
mov
push
mov
sub
mov
outsl
stos
push
in
cmp
jb
mov
mov
inc
pop
sub
enter
xchg
test
imul
inc
int
xchg
mov
lods
iret
jns
and
sbb
aam
mov
outsb
mov
movsl
dec
fsubl
outsl
sbb
pop
mov
xor
or
xchg
dec
in
xchg
nop
xchg
jmp
push
enter
js
and
push
subl
and
pop
data16
push
insl
add
sbb
inc
fstpt
lods
lods
stos
mov
cmp
push
mov
xlat
aaa
pop
cmp
inc
lret
loope
push
int
sti
cmp
test
jnp
scas
xchg
push
dec
call
aaa
popf
jmp
lret
pop
loopne
insb
js
xchg
cmpsl
cmp
mov
and
mulb
leave
pop
aaa
mov
mov
mov
lea
inc
jmp
incb
xchg
or
mov
mov
sub
pop
cmp
push
fsubrl
mov
add
in
inc
jg
loop
sbb
jge
jmp
pop
sub
insl
and
mulb
xlat
test
and
mov
mov
imul
mov
add
cmc
iret
cmp
call
xchg
pop
pop
enter
nop
popa
sbb
subl
fsub
dec
dec
call
das
push
cs
gs
pop
aad
cmp
sbb
stos
popf
int
cmp
cli
addr16
test
mov
adc
push
or
xor
mov
and
inc
gs
sbb
stc
ret
shlb
mov
xchg
inc
push
sbb
add
jno
mov
mov
mov
pop
inc
les
inc
sti
sub
sub
push
loope
sub
xchg
pop
jno
popa
imull
dec
push
jle
cltd
jo
jl
mov
data16
xchg
fwait
xchg
sub
add
xchg
mov
sbb
jle
hlt
cmc
xchg
testl
test
push
icebp
sahf
jecxz
pushf
nop
fcoms
and
inc
xor
adc
ficoml
fsubl
push
mov
js
adc
sub
or
pushf
pop
sbb
cmp
shll
inc
outsl
or
add
sbb
push
mov
cmp
inc
movl
lahf
jmp
outsl
sbb
xor
and
lahf
pushf
repnz
je
push
mov
mov
mov
lea
xor
cmp
cwtl
fnstcw
cmpsb
sti
jo
push
xor
xchg
mov
sahf
pop
ljmp
push
mov
jae
sti
and
repnz
pop
loopne
ljmp
iret
popa
shll
loopne
roll
pop
jl
iret
sub
mov
push
pop
push
int3
mov
mov
push
cmp
adc
xchg
mov
js
mov
mov
faddp
inc
sbb
ljmp
dec
jg
bound
dec
aad
sarl
ja
lcall
scas
lret
shr
xchg
add
ret
in
out
mov
icebp
shl
in
ljmp
insl
cmp
or
xor
stc
cmpsl
shl
cld
sarl
and
daa
jmp
mov
int
cmp
repz
mov
inc
leave
js
outsl
lods
sub
jbe
pushf
add
add
mov
mov
push
fdivs
jg
mov
ja
or
xchg
pop
mov
movsb
negl
movsl
pop
repnz
jecxz
or
fidivrl
pop
jns
mov
popa
je
das
ffreep
bound
and
scas
sbb
lahf
jg
cwtl
nop
push
adc
add
data16
sahf
pop
or
mov
dec
xor
pop
aas
cmp
fisubrl
mov
mov
pop
cmp
mov
test
rcr
push
mov
xchg
dec
mov
pop
hlt
std
inc
lods
loop
push
xchg
insb
xchg
in
inc
mov
shl
mov
lock
adc
insl
mov
mov
lahf
movsl
das
cmc
mov
or
push
mov
insb
dec
aas
fldl
sbb
xchg
pop
pop
xchg
pop
mov
mov
lock
push
pop
out
pop
fnstenv
push
das
das
iret
scas
add
jg
fmuls
push
inc
cmp
jl
cmp
push
and
les
inc
or
ja
dec
dec
test
cltd
mov
clc
inc
iret
mov
mov
test
jne
xchg
aaa
bound
inc
inc
pushaw
xor
mov
inc
or
shrl
addr16
mov
jmp
pop
push
ja
iret
mov
push
cmp
repz
mov
adc
fisttpll
cltd
repz
lea
dec
add
mov
pusha
or
xchg
inc
jmp
int3
or
dec
push
in
push
xor
rcrl
and
push
adc
aad
adc
mov
mov
out
insb
aam
push
lret
pop
inc
add
push
mov
jecxz
ljmp
pusha
ss
fdivr
mov
jno
xor
add
sub
xor
aam
sub
mov
cwtl
adc
mov
jo
loope
ss
cmp
jbe
fisubrl
movsb
arpl
mov
xor
mov
andb
push
subb
sub
sbb
pop
repz
outsb
push
push
aaa
sub
mov
repnz
pop
arpl
mov
inc
lcall
shll
movsb
inc
add
mov
xor
sub
dec
push
outsl
cwtl
imul
dec
stc
cld
fstp
and
leave
push
mov
push
sti
enter
out
xor
fstpl
sbb
jae
aaa
jl
mov
sub
arpl
rolb
or
insb
xchg
aaa
mov
cwtl
push
das
neg
cld
rorb
test
pop
push
lea
mov
loopne
int3
fsubrs
pop
loope
push
sahf
in
pop
mov
or
in
jecxz
repz
lret
scas
dec
ljmp
in
adc
mov
hlt
add
cmp
xlat
nop
jbe
or
add
jae
arpl
popf
cmp
and
add
pop
loope
push
mov
jno
imul
and
xchg
mov
mov
push
mov
jmp
dec
ss
daa
xlat
mov
mov
imul
xlat
adc
mov
mov
mov
or
sbbb
pop
out
ds
cld
les
push
setp
aaa
outsb
inc
in
data16
jl
mov
push
andb
pushf
aam
pop
lret
jge
cltd
xor
int3
mov
movsb
push
lods
mov
xor
or
das
fcompl
dec
mov
mov
cmpsl
xchg
imul
in
cmpsb
jo
sbb
or
stos
adc
adc
push
xor
jbe
mov
mov
into
clc
or
push
and
imul
xchg
xor
or
adc
and
fs
pop
sti
mov
jnp
lods
jmp
imul
movsb
bound
pop
inc
inc
fldenv
or
or
and
xchg
addr16
test
jo
out
hlt
fs
push
gs
bound
addr16
jmp
leave
xchg
es
filds
adc
aaa
jg
dec
aaa
fnstcw
sub
cmp
lret
mov
cmc
xor
lret
in
mov
loopne
inc
sub
adc
movsb
xor
sbb
mov
pushf
push
or
shlb
int3
mov
mov
repnz
stos
lret
stc
mov
inc
dec
movsl
mov
jbe
int
jno
out
adc
lss
mov
fbstp
imul
or
cmp
test
xor
ficoms
pop
ljmp
fsubr
js
shrb
daa
mov
lret
xchg
inc
jge
enter
sub
or
imul
pop
fadds
push
fsqrt
mov
cmp
sbb
repz
out
mov
lcall
inc
sbb
dec
mov
mov
lahf
rorb
out
sub
pop
mov
call
inc
or
pop
sub
pushf
lcall
push
push
pop
cmp
mov
fsubrl
daa
adc
in
aaa
dec
mov
sahf
scas
inc
add
cmp
push
mov
pop
and
les
adc
pop
stc
or
sahf
rorl
cmp
inc
inc
mov
push
jge
cmpps
adc
or
cwtl
in
pop
stc
mov
push
shrb
inc
cwtl
inc
stc
or
jo
add
mov
sahf
rclb
cmp
aas
xor
add
inc
iret
loop
adc
inc
mov
and
cltd
sbb
ret
stos
adc
xchg
xchg
jns
dec
or
add
call
mov
push
loopne
ret
cmp
cmp
cltd
sub
ficompl
mov
jecxz
mov
jbe
mov
mov
mov
jl
adc
push
cli
sbb
add
mov
aam
vmovaps
out
inc
mov
cmp
add
mov
xchg
xor
xchg
dec
pop
push
adc
fs
fstl
jbe
addr16
sub
pop
cmp
sub
xchg
xchg
mov
js
dec
dec
mov
xlat
lcall
pop
in
pushf
xchg
inc
mov
push
repz
xor
stc
mov
sahf
stc
mov
cwtl
jo
adc
sub
add
mov
add
fdivl
cmp
dec
cltd
imul
movsl
add
mov
cmpsl
add
pop
pop
lds
mov
mov
cmp
ljmp
push
aam
dec
popf
cmpl
sbbl
inc
mov
aad
faddl
cld
test
hlt
sbb
lock
insl
xchg
test
dec
mov
mov
cwtl
jae
mov
lret
fcmovb
mov
mov
daa
xchg
and
cmp
jmp
mov
push
lods
test
js
xchg
mov
je
ljmp
sub
pushf
mov
inc
add
das
sub
jecxz
ja
shrl
push
repz
sbb
add
pushf
or
mov
js
add
mov
sub
rcrl
xor
or
mov
and
fucomi
dec
outsl
dec
scas
dec
movsl
jg
dec
es
mov
jb
xor
and
jge
inc
or
push
jae
in
loope
dec
lcall
or
mov
test
sti
xlat
sti
dec
dec
test
cmp
dec
adc
pop
popf
cltd
jmp
daa
scas
aam
push
xchg
or
sbb
das
nop
inc
mov
mov
ljmp
sub
jg
inc
mov
pop
cmpsl
cmp
jno
dec
push
inc
and
aam
sub
or
js
int
or
lcall
xchg
cld
lahf
xchg
cmp
shll
push
loope
pop
scas
movups
push
jge
mov
jmp
pop
aaa
jae
pop
xor
repz
dec
addl
xor
out
lcall
outsl
leave
mov
pop
mov
mov
fmul
mov
mov
xor
js
cmp
cmp
stos
push
mov
rolb
push
inc
fs
loopne
push
xlat
dec
push
mov
adcl
mov
jge
dec
repz
mov
sub
xor
jmp
cmp
lds
test
ret
xchg
arpl
out
xor
or
lock
dec
mov
xchg
xchg
lahf
movsl
cmp
push
test
outsl
fwait
je
adc
mov
imulb
lods
fmuls
xor
loope
adcl
dec
in
mov
or
loop
jmp
mov
lods
adc
ljmp
mov
inc
fst
sbb
sub
and
into
dec
fcmovbe
in
aad
lock
fcoml
cmp
mov
add
lret
aas
dec
fstpt
sub
test
sti
insb
data16
xchg
std
mov
pop
sub
and
push
xchg
or
data16
push
cmpsl
cmpsl
cmp
adc
ljmp
movsl
mov
aam
cmp
mov
int3
jl
imul
addb
jge
or
push
inc
pop
test
test
cwtl
mov
sub
insl
test
int
imulb
fistps
scas
fmuls
cwtl
cltd
xchg
into
fs
stos
repz
jg
fdivs
pop
sbb
lock
cmpsl
jl
adc
jmp
cli
pop
mov
inc
jg
aam
xchg
xchg
mov
sarl
mov
sbb
mov
jns
loop
pop
sbb
and
fildl
push
shlb
ja
daa
pop
loopne
push
mov
loopne
jnp
pop
jmp
lret
sarb
push
inc
idiv
loope
or
enter
push
cli
scas
in
lods
stos
out
pop
push
test
loopne
xor
scas
lret
inc
xor
lods
sub
icebp
clc
aam
repz
test
outsl
ja
ret
test
shrl
les
repnz
into
sbb
jb
ret
hlt
mov
dec
mov
mov
cmpsl
xor
ds
ds
scas
sub
test
push
mov
andl
leave
mov
insl
xor
inc
xor
je
mov
push
and
dec
test
rorl
loop
hlt
bound
cmc
pusha
aam
add
int
mov
mov
push
scas
pop
cwtl
ret
mov
dec
stos
scas
icebp
pushl
xor
lret
lds
icebp
add
lret
and
dec
mov
mov
dec
popf
lods
mov
movsb
popa
mov
cmp
scas
jns
in
jle
pop
push
mov
test
cmpsb
dec
pop
js
stos
int
loopne
in
movswl
out
pushf
mov
sub
mov
xor
mov
test
and
fdivrl
cmp
loopne
rcll
cmp
cmc
hlt
aad
inc
pop
fdivrl
adc
ljmp
fnstcw
cmpsb
mov
mov
cmc
into
or
mov
mov
add
or
fcos
cmp
push
adc
mov
or
inc
xchg
mulb
mov
int3
clc
sbb
mov
push
xchg
pusha
cmpb
push
sar
mov
rclb
ds
sbbl
mov
sub
push
push
jecxz
inc
popf
sub
out
mov
xchg
or
std
movsb
roll
stos
or
ret
fbstp
test
pop
jb
insl
insb
sbb
ret
adc
mov
push
loop
mov
xlat
pop
inc
das
test
inc
dec
inc
in
jmp
or
dec
cmp
fincstp
pop
inc
or
xchg
cmc
pop
mov
push
movsl
inc
sbb
adc
mov
repz
jbe
sub
jp
repz
mov
sbb
push
cld
leave
movsb
in
xchg
mov
dec
xor
jp
push
imul
xor
xor
mov
leave
sti
mov
std
jne
pop
push
adc
mov
xchg
push
lods
inc
mov
imul
insl
inc
cmp
hlt
es
fsts
mov
insl
hlt
es
sub
dec
imul
test
dec
ret
inc
ds
jnp
std
sub
cmpsb
and
jae
ficoms
mov
pop
arpl
repz
mov
loop
das
pop
stos
and
fsts
mov
dec
sub
mul
mov
sbb
inc
out
inc
inc
outsl
push
xor
or
sahf
incb
inc
and
cwtl
inc
xor
imul
in
jp
lea
insl
nop
and
or
jb
cs
and
push
push
jo
out
leave
ja
lret
dec
test
lods
andl
jl
daa
and
lds
adc
pop
sub
filds
stos
addr16
and
add
lret
pop
sbb
sbb
inc
jne
sbb
rorb
sbb
jp
inc
jp
jg
mov
pop
inc
popa
fcmovbe
shlb
jge
fcomps
ljmp
fsubs
imul
and
or
scas
pop
mov
in
hlt
sub
dec
inc
les
pusha
cmp
out
mov
and
or
xor
lods
test
cmpsb
cmp
push
push
push
adcb
inc
int3
imul
repz
in
stc
inc
adc
push
adc
pop
mov
rcrl
int3
xchg
loop
xor
stos
push
jae
stos
mov
cmp
arpl
ja
daa
pop
cmp
fmuls
add
repz
jp
pop
rcl
cmp
push
test
cmp
scas
xor
sar
outsl
cmp
data16
popf
mov
and
je
mov
aad
ret
mov
inc
jecxz
cli
stos
imul
push
repnz
push
jl
test
fdivr
in
mov
gs
adcb
and
add
add
push
mov
call
out
xchg
repz
or
negb
pushf
je
mov
daa
aad
cmp
popf
push
or
jbe
xchg
imul
pop
nop
popa
fiadds
jb
mov
and
or
sub
push
fwait
popa
push
inc
sarl
pop
and
xor
lahf
adc
dec
loopne
pop
or
aam
push
cli
or
out
ja
dec
xor
sti
xlat
movsl
cmpsl
es
pop
jge
std
xchg
cmpsb
push
add
and
leave
fs
enter
xchg
hlt
add
movsl
inc
fisubl
lds
mov
inc
fcompl
jl
jbe
shll
aas
pushf
mov
add
jne
push
dec
loop
mov
jae
subl
cwtd
out
out
sbb
jp
imul
dec
ret
ja
shlb
mov
lds
mov
popf
ja
ficompl
int
add
iret
nop
cmp
sbb
cmpsb
popf
cltd
movsb
push
adc
mov
imul
sar
cmp
inc
movsl
cmpsl
jle
sbb
dec
hlt
stos
test
sub
orb
jle
mov
inc
aad
outsb
leave
aas
rolb
cli
pop
ja
mov
aaa
std
jo
xor
scas
push
movsb
or
imul
mov
in
inc
jmp
cmp
cmc
cmp
xchg
rcr
inc
xor
lods
mov
ds
jg
in
shl
ds
fimull
xor
jo
in
movsb
aam
xor
addb
xchg
mov
ret
mov
mov
andl
or
enter
enter
cmp
hlt
test
mov
inc
push
mov
xor
gs
sarl
pop
sub
clc
pusha
insb
ret
stos
mov
cwtl
cmp
jns
xor
cmp
enter
gs
aad
pop
push
mov
shufps
aas
out
xchg
pop
pop
orb
pop
les
out
add
imul
sub
and
xchg
xor
or
or
sub
ljmp
mov
jnp
ret
inc
gs
push
mov
mov
xchg
rclb
insl
sub
loopne
mov
inc
test
jnp
push
fsts
stos
mov
push
popa
mov
pop
xor
jb
mov
shll
loopne
out
scas
loopne
or
push
iret
inc
sub
inc
sub
jae
push
jmp
push
push
sbb
push
gs
sub
dec
hlt
adc
lahf
mov
cmpsb
loope
rcr
fs
and
lahf
cmp
pop
xor
xchg
cmp
lock
fwait
xchg
or
inc
nop
mov
adc
sbb
repnz
popf
push
cmp
mov
mov
ja
ret
cli
or
imulb
dec
or
repz
inc
imul
shlb
cmp
mov
arpl
xor
push
sub
lods
gs
stc
sti
add
arpl
push
das
pop
adcl
jl
xor
pop
sub
inc
inc
out
out
in
pop
into
outsb
lods
ljmp
addb
xchg
stos
xor
pop
adc
cmp
int3
mov
ja
adc
subb
std
int3
pop
dec
loopne
pop
sub
popl
and
jmp
mov
inc
mov
lods
or
lcall
incl
mov
lock
push
mov
pop
or
sti
psraw
jg
stc
and
pop
int
leave
or
and
aad
lret
sahf
in
mov
adc
sbb
jmp
cltd
push
lods
sub
popf
xchg
xor
outsl
xor
in
pop
call
clc
cmp
insl
jae
and
hlt
push
gs
sbb
loop
mov
cmpsb
mov
add
xchg
dec
jns
push
ss
pusha
movsl
lds
mov
and
call
fwait
pushf
cld
cmpsl
fisubs
pop
in
xor
inc
fnsave
pop
in
mov
mov
jmp
adc
imull
fcompl
xchg
sub
mov
mov
test
fwait
xor
add
or
lret
ret
imul
adc
inc
fisttpll
xor
out
movsl
and
add
in
inc
imul
or
add
aam
xchg
mov
inc
fnstsw
sub
or
cmp
lahf
movb
ds
ss
xchg
test
push
mov
sub
inc
or
inc
adc
rorb
mov
mov
icebp
aad
xchg
adc
jno
jnp
or
add
push
lret
and
push
gs
hlt
psubw
inc
xor
jae
sarb
fidivrl
test
scas
fiaddl
add
mov
lcall
mov
adc
test
push
xchg
xchg
mov
iret
pop
and
scas
ret
adc
xor
sub
mov
out
jp
stos
popf
jmp
loope
or
idivl
sbbl
push
sub
xlat
and
jmp
repz
imul
fdivrs
xor
mov
mov
in
lock
loop
movsb
push
pop
mov
jl
lds
incl
outsl
call
imul
xchg
xchg
aad
add
mov
add
stos
jecxz
mov
mov
xchg
in
jns
dec
jno
xchg
pushf
psrlq
xlat
fadd
xor
jle
push
mov
adc
xchg
xor
mov
and
mov
js
xchg
shl
and
jp
data16
pop
insb
cmpl
imul
inc
and
xchg
js
dec
lahf
pop
test
imul
cmp
sub
sub
sub
sarb
cmp
adc
nop
mov
xor
je
mul
push
repz
inc
sub
mov
lret
xchg
jae
cld
jmp
dec
mov
por
aas
mov
push
push
jg
js
pop
inc
icebp
xchg
sub
std
iret
sbbl
idivl
lcall
sbb
inc
push
and
mov
enter
and
and
or
out
out
adc
lods
sbb
imul
nop
pop
sbb
shl
push
mov
push
and
in
push
scas
shlb
pop
jg
roll
shrb
push
xchg
push
add
adc
ja
inc
inc
mov
jmp
pop
aam
jecxz
leave
call
push
cld
jecxz
scas
call
rorl
arpl
rol
push
or
stos
sub
in
int3
jns
js
rclb
movsl
fisttpl
adcb
rorl
nop
addb
jmp
clc
aam
lods
inc
or
lock
cmpsb
ret
xchg
std
cmp
in
or
shrb
mov
and
ret
imul
loope
jb
jecxz
adc
repnz
jecxz
jmp
pop
frstor
sbb
push
lea
or
sub
cmp
cmp
push
xor
dec
out
test
ja
pop
xchg
fdivr
movsb
lods
xchg
pushf
out
dec
js
into
mov
jo
cli
cmp
dec
sbb
ret
pop
jns
jnp
jp
lods
and
or
clc
js
dec
inc
movsb
mov
adc
cmp
pushf
fdivr
test
mov
xchg
popa
or
cmp
push
out
lea
push
mov
push
cmpsb
ljmp
in
xchg
jnp
enter
pop
mov
sbb
std
loop
pop
mov
jge
jmp
cmpsb
cmpsl
adc
jb
xor
out
jecxz
mov
and
data16
or
pop
cmc
mov
test
dec
into
sbb
mov
sbb
int
inc
push
fistpl
pop
stc
mov
rolb
lods
pop
sub
push
addr16
aas
jecxz
addl
testb
lahf
or
jnp
mov
sub
jb
jmp
lods
and
pop
cmpsb
into
or
jl
notl
sub
push
adc
rorl
sbb
mov
sub
jp
push
popa
dec
fldcw
jbe
mov
sbb
ljmp
mov
mov
int
mov
movsl
cmp
mov
mov
xchg
push
fs
jns
lds
out
ljmp
pop
pop
jno
and
nop
adc
mov
pop
mov
sub
in
xchg
movsb
inc
cmp
ljmp
sahf
fwait
daa
in
lock
cli
push
push
or
or
sti
test
mov
int
ss
repnz
std
aad
fldenv
xorb
adc
mov
mov
cltd
insl
xor
add
and
and
push
in
leave
insb
xchg
int
popf
fsubrl
push
mov
or
mov
mov
arpl
mov
xor
lret
out
sbbb
jae
sbb
mov
gs
stos
inc
in
jg
fimuls
pop
loopne
xlat
or
push
pop
cmpsb
icebp
mov
inc
jmp
jge
jle
insb
daa
push
shrb
fwait
sbb
bound
in
repnz
in
jae
cmp
jnp
or
pop
movsb
dec
mov
test
inc
loope
pop
es
and
stos
out
daa
pop
repnz
push
jle
out
inc
pop
push
pop
pusha
mov
mov
inc
xchg
loope
repnz
adc
sahf
in
roll
xchg
cwtl
stos
xchg
cmpb
scas
aas
add
pop
xor
fdivs
addl
das
jg
jle
aaa
sub
aaa
mov
xor
pop
push
mov
jg
mov
sbb
hlt
dec
sbb
push
or
dec
into
in
xchg
jns
loopne
mov
ljmp
xor
jmp
push
adc
jg
outsb
dec
mov
sarl
pushf
mov
dec
sub
push
pop
in
mov
std
pop
xor
jmp
mov
fxch
out
jle
scas
xor
ss
and
out
jle
cld
jmp
int
arpl
insl
add
ja
divb
jle
sti
cmp
popa
jg
adc
outsb
inc
dec
mov
inc
enter
inc
scas
call
jnp
dec
inc
xchg
xor
imul
stos
ret
or
or
in
jge
dec
imul
fwait
add
dec
ds
jge
or
repz
xchg
sar
mov
out
movsb
mov
clc
xor
add
pop
xchg
ljmp
mov
jmp
jmp
cmp
mov
cs
jns
inc
test
test
mov
pop
sbb
cmpb
mov
push
scas
push
ljmp
into
insb
xor
movsb
pop
dec
fidivrl
pushf
mov
iret
jle
xchg
adcb
repnz
xchg
xchg
jmp
stos
jnp
outsb
xor
out
push
jbe
stos
cmpsl
ret
sbb
xlat
sbb
jp
cs
loope
rclb
cltd
adc
or
aas
mov
das
out
or
pop
push
xor
jecxz
push
sbb
and
sub
cmpsl
sarl
mov
loop
mov
movsb
pop
mov
test
pop
lods
test
cs
popa
outsl
jg
and
jl
lods
mov
cmp
stc
xchg
push
and
sbb
add
std
pusha
int3
test
mov
xchg
int3
outsl
jecxz
sbbl
inc
cmp
xor
cmpsb
lahf
bound
and
sti
movsl
jno
ret
clc
jecxz
jmp
dec
mov
dec
leave
in
pop
mov
cmp
outsl
push
fldl
outsb
loope
aaa
ficoms
or
sti
ljmp
dec
pop
mov
dec
adc
outsl
fdivrs
in
dec
xor
sbb
xchg
std
sub
cmp
pop
or
sbb
cli
add
insb
pop
push
xchg
ret
xor
out
imul
mov
mov
mov
cld
push
pop
mov
xchg
les
jge
push
sub
pop
int3
orb
cmpb
dec
pop
mov
leave
mov
xchg
push
pop
int
cli
popf
fs
lret
mov
enter
fcmove
jns
xchg
fnstsw
sahf
mov
int3
sub
in
sbb
add
pop
mov
dec
add
push
fdivr
popa
movzwl
lock
pusha
lea
fdivr
insl
jmp
pop
test
or
subb
jp
shrl
mov
adc
loopne
das
mov
in
mov
mov
inc
push
mov
ds
sbbb
lea
jbe
pop
adc
xchg
mov
rclb
enter
mov
and
jmp
cltd
pop
std
cltd
iret
dec
cwtl
notl
adc
bound
into
jb
inc
sbb
popf
pop
mov
fucomi
mov
rcrb
fucomp
js
jb
cmp
std
xor
dec
lea
or
addb
sub
fldenv
jnp
cwtl
pop
fsubl
rcll
imul
push
mov
lods
scas
fldenv
stos
push
movsb
repnz
fcomps
outsl
inc
addl
ret
outsl
ljmp
jne
test
imul
mov
push
mov
and
cmp
insb
xchg
fldt
mov
mov
dec
js
push
or
xor
ljmp
and
dec
jle
pop
jmp
lods
pop
pop
movsl
xor
lods
out
notb
aad
add
adc
fidivl
xor
fisttpl
mov
aam
sti
sbb
jnp
lea
test
dec
js
mov
jns
xchg
out
ljmp
xor
jl
nop
setge
adc
mov
mov
push
mov
mul
jb
mov
aaa
std
mov
lock
insl
stos
and
pushf
out
test
mov
fs
sbb
lods
pop
mov
movsb
push
pop
fdivp
pop
xchg
jae
subl
test
push
xlat
xlat
aam
outsb
pop
and
cmpsb
cs
lcall
mov
push
loop
loop
jbe
mov
stc
cmpsl
lret
popa
repnz
movsb
sbb
lods
flds
xchg
lods
sub
xor
inc
cltd
and
repz
pushf
in
loop
sub
dec
hlt
fistpl
mov
jmp
out
mov
inc
mov
fdivrp
sar
ret
or
ljmp
jno
ja
push
adc
in
sub
pusha
pop
jbe
imul
aaa
mov
lahf
fistps
push
pop
stos
push
push
add
pop
shll
cltd
cmpsl
lea
dec
add
add
shll
fwait
jg
sbbb
out
int
xor
sbb
mov
xlat
out
in
lock
sub
push
jno
fmull
dec
out
mov
les
int3
jg
mov
std
imul
jge
mov
cmp
dec
rclb
outsb
lods
scas
pusha
das
or
mov
popa
add
dec
mov
cs
js
sarb
call
scas
sarl
cmpsl
bound
jp
sub
cli
testb
popf
div
mov
das
les
push
push
aas
adc
jmp
mov
inc
add
mov
inc
sub
mov
xor
shlb
ret
jae
sbb
inc
and
sub
jbe
repnz
dec
inc
rolb
adc
out
cmp
gs
ret
ret
out
les
aaa
mov
add
push
or
lret
arpl
cmp
ret
dec
pop
sub
push
lret
push
lret
or
das
sahf
pop
push
cmp
xchg
lods
mov
test
push
repnz
insb
add
outsl
push
aad
roll
out
mov
jno
inc
fcompl
stos
pop
push
je
sub
push
adc
cmp
xlat
mov
das
inc
jb
sub
outsl
dec
add
js
or
cmp
inc
sbbb
stos
adc
fwait
adc
je
cmp
loopne
outsb
decl
cmp
jnp
mov
or
push
fcmove
pop
stos
pop
mov
xorl
inc
inc
fstps
or
lods
out
sub
mov
leave
mov
outsb
jno
cmc
jecxz
sub
mov
ficoml
sub
inc
sub
jae
push
das
push
xchg
adc
dec
mov
mov
imul
leave
push
dec
jae,pt
imul
jo
add
or
in
pop
pop
add
cltd
mov
push
adc
shlb
testb
add
pop
or
add
xor
mov
mov
mov
cmp
loopne
pushf
mov
jmp
mov
sub
and
adc
cmp
iret
add
mov
sub
pop
vmread
xchg
jle
fidivrl
adc
jg
xchg
inc
in
sbb
inc
pop
mov
stos
mov
int
mov
loopne
mov
dec
lea
mov
sbb
xor
frstor
push
shrl
clc
vmread
cli
xchg
out
inc
int
xchg
xchg
test
and
test
outsb
or
rclb
mov
fistpl
in
sbb
add
mov
pop
inc
xor
bound
push
inc
jnp
jno
and
dec
std
fcmovne
icebp
add
and
out
cmp
pop
add
xchg
mov
sti
out
rolb
aaa
rcll
add
bnd
push
mov
dec
ss
mov
sbbl
sub
dec
dec
aas
dec
cmc
movsb
mov
lcall
dec
cld
pop
xor
adc
fildll
push
std
pop
cmc
pop
aaa
add
cmc
xlat
pop
dec
push
cmp
fidivs
cmp
push
sbb
ffree
cltd
xchg
pop
hlt
or
leave
sbb
shll
sbb
pushw
pop
je
rclb
sbb
mov
mov
pusha
shll
and
insb
push
andb
ret
jb
dec
push
loope
dec
fdivs
int3
stos
enter
loope
dec
test
sbb
xor
add
ljmp
lret
cltd
xchg
in
and
mov
adc
sahf
mov
xchg
pop
bound
mov
pop
jns
lret
cmp
imul
je
into
fs
pop
pop
aas
xor
xor
pop
mov
add
dec
mov
push
sbb
arpl
xchg
js
sub
enter
mov
jg
mov
mov
mov
pop
movsb
loopne
fisubs
mov
sbb
pop
test
popf
lcall
sti
or
add
stos
cltd
es
xchg
in
into
xchg
rolb
cmp
xor
inc
xchg
jnp
lahf
sub
lea
mov
inc
pavgb
iret
mov
jbe
xchg
xchg
test
cmc
outsb
in
data16
cmp
add
xlat
gs
pop
mov
addr16
adc
nop
xchg
fimuls
cmp
scas
sbb
scas
sbb
cld
stos
sub
test
pop
jne
push
push
jmp
mov
nop
ret
jg
dec
aaa
aaa
ds
decl
inc
pop
lea
or
addr16
cmpsb
sub
sbb
xor
imul
or
ret
mov
rcrl
pop
fcom
movsl
fsubrl
lret
movsb
cltd
jno
xor
cmp
das
lods
shl
aaa
aam
jns
nop
jns
stc
jno
pop
out
inc
leave
aam
xchg
mov
add
inc
loopne
mov
adc
in
in
pxor
push
jns
push
cmp
push
mov
test
xor
lcall
cld
cmpb
ja
hlt
cmpsb
dec
insl
jg
push
inc
fwait
inc
repnz
notl
aas
into
fsts
push
fs
mov
mov
mov
inc
ss
inc
enter
push
inc
ss
push
xchg
sub
insl
fstl
test
dec
adc
cmp
xor
push
jg
rclb
push
mov
lock
add
bound
mov
dec
or
mov
int3
xchg
xor
ja
mov
mov
cmc
test
scas
lods
insl
pop
cld
jno
pop
out
fcompl
lock
adc
rolb
cmp
cmp
cmp
pop
xchg
push
inc
sahf
sbb
lahf
mov
jp
jnp
lret
jmp
pop
sub
push
rorl
stos
pop
pop
mov
ret
pop
push
push
fdivp
daa
aad
rclb
cld
cltd
rcrl
adc
leave
adc
testl
jl
adc
jbe
cmp
jne
or
sub
dec
mov
fdivp
mov
push
adcb
fs
stc
mov
pop
loopne
cwtl
stos
cmp
and
jne
sub
push
sub
and
nop
sbb
jb
ds
xor
or
mov
inc
or
test
cld
imul
sub
sarl
out
shl
dec
pop
jp
in
pop
mov
std
pop
mov
imul
scas
mov
jo
imul
push
push
in
add
push
sbb
xchg
mov
repnz
xchg
jle
repnz
and
jne
cmpsl
xor
std
fidivs
xor
sbb
push
add
loop
test
negl
cmp
push
xchg
dec
pushf
or
or
cltd
data16
inc
cmp
pop
insl
cld
cmpb
xchg
dec
adc
repz
pop
movsl
and
inc
jmp
mulb
xor
cwtl
dec
aam
arpl
push
testl
int3
adc
outsl
jo
outsb
adc
enter
outsl
cltd
aas
xchg
adc
arpl
pop
pop
arpl
mov
lcall
adc
cmc
cmp
movsl
sub
dec
pop
out
mov
xchg
xchg
jno
sub
subl
xor
jae
popf
mov
lahf
aas
pop
jb
ss
and
cltd
pop
mov
or
inc
into
mov
mov
inc
lahf
lock
mov
aas
sub
into
in
sti
add
sub
mov
dec
addb
cmp
addr16
ret
pop
add
xor
cmpsb
add
dec
jle
je
jb
mov
adc
mov
push
mov
lods
xlat
lret
ja
pop
add
push
cmp
cmp
into
jge
mov
adc
imul
jbe
xchg
loope
hlt
clc
and
aam
jecxz
jo
cmp
popa
aaa
inc
add
pop
xor
xorb
xlat
xchg
fstl
inc
push
sti
aam
xchg
sub
push
and
dec
leave
xchg
out
shl
inc
test
ja
std
insb
imul
xchg
mov
aad
cmp
in
cmp
jp
sbb
cltd
andb
xchg
cmp
push
je
dec
pop
push
fiadds
lods
ror
and
pop
scas
test
push
mov
insb
pop
scas
cmp
scas
push
adc
add
mov
mov
aad
dec
popf
cli
cmp
mov
xchg
cwtl
sti
jecxz
clc
sub
fsubs
and
negb
and
mov
shl
mov
inc
rcrl
out
adc
push
push
dec
outsl
fs
jbe
outsl
xchg
and
movsl
in
mov
imul
or
mov
or
dec
cli
loope
movsb
fs
cmp
jmp
in
out
shr
xchg
sbb
mov
ror
mov
mov
inc
xor
push
into
iret
mov
mov
push
mov
aam
or
cmp
lods
js
fldcw
push
mov
push
xchg
xchg
loope
inc
fistl
push
scas
push
cmpsb
into
loope
and
test
push
mov
add
dec
cmp
jne
std
push
push
lock
into
shrb
xchg
jecxz
mov
sbb
ret
nop
lea
int
sub
fisubs
mov
mov
mov
mov
cli
pusha
sub
pop
sbb
mov
or
cmp
and
pop
rcrb
stos
daa
jg
pop
xchg
out
mov
lods
ljmp
test
push
xchg
push
imul
add
lret
scas
and
inc
or
jmp
pop
inc
lret
jl
ja
gs
stos
adc
inc
dec
dec
add
inc
xor
pop
es
enter
pop
inc
adc
test
mov
adc
inc
lods
mov
adc
faddl
shrb
add
xchg
idivl
pop
imul
inc
jecxz
aam
xorl
aam
push
and
push
jmp
loop
push
xlat
pop
jp
cmc
xorl
mov
and
push
bound
add
out
mov
arpl
push
sub
imul
jle
out
mov
mov
addb
cmp
lods
sar
into
jl
jb
inc
into
inc
out
daa
mov
call
or
testl
scas
add
cmpsb
and
enter
mov
adc
xchg
mov
sbb
inc
pop
xorl
lret
ja
movaps
add
cmp
shrb
add
in
movsl
sub
popa
popf
dec
adc
jp
sti
dec
cmpsb
jns
jne
cli
mov
popf
movsl
jge
imull
inc
sub
fnstsw
cmp
lahf
leave
or
mov
mov
dec
jg
test
inc
aas
and
dec
aad
xlat
push
ficoml
scas
inc
insl
je
sarb
mov
mov
lods
fwait
enter
das
sbb
roll
push
dec
mov
add
jle
xor
inc
mov
mov
xchg
imul
cltd
or
dec
out
lods
adc
xor
rorb
cmpl
aam
loop
fsubs
xchg
ds
mov
mov
push
call
cwtl
daa
rcrl
popa
fnstcw
add
bound
cmpsb
add
jle
pop
jae
outsl
test
faddl
fwait
mov
pop
or
push
adc
fwait
leave
jbe
and
arpl
lods
push
adc
adc
icebp
push
add
ds
imul
mov
sahf
and
mov
flds
movsb
cld
cmc
scas
add
add
mov
adc
in
add
fistpll
push
jnp
mov
and
lds
push
cmp
das
les
das
jg
es
outsb
mov
shrb
xor
mov
lods
je
pop
and
sbb
jge
inc
push
mov
push
data16
mov
adc
cmc
movsl
push
bnd
cmp
pop
out
loope
jnp
ja
mov
fistpl
shrl
add
ja
dec
scas
mov
repnz
dec
arpl
cwtl
push
fstps
pop
jnp
mov
xchg
fstps
es
std
jl
mov
out
orl
xorb
ds
lahf
clc
jae
xchg
jle
in
in
ret
dec
test
cmpsb
hlt
pop
xchg
aam
sbb
clc
shrl
fmul
mov
rorl
dec
fcmovu
hlt
pop
hlt
adc
push
add
sbb
icebp
fwait
icebp
fsts
jbe
xor
into
sar
lods
xor
in
inc
mov
sub
insl
lds
inc
sar
stos
test
mov
mov
mov
lret
out
or
bound
jl
and
andb
aam
lcall
ret
rcrl
push
scas
sahf
cmpsl
out
inc
sbb
iret
rorb
into
and
cmp
push
fdivrl
stos
push
add
jno
dec
sbb
sbb
or
fmul
mov
jmp
mov
stos
fmuls
mov
sub
mov
divl
xchg
sahf
popf
push
clc
int3
push
adc
inc
cmp
cvtps2pi
ljmp
call
cmp
jb
stc
add
ret
inc
adc
pop
mov
ljmp
push
movsb
in
stos
das
call
mov
lock
pop
add
sub
out
adcl
movsl
mov
ja
or
mov
aas
in
das
add
jno
mov
and
push
jmp
loope
fwait
ja
out
or
imul
aad
and
movq
in
mov
cmp
sahf
and
mov
ljmp
sbb
push
mov
add
mov
movsb
imul
shrl
test
int
mov
pop
xor
pop
dec
inc
push
or
xchg
inc
fimull
aas
xchg
or
jne
out
shlb
inc
daa
pop
dec
js
out
adcb
out
incb
push
testl
stc
lods
jle
lods
pusha
imul
sub
xchg
in
cltd
lcall
les
fdivrp
sbb
call
enter
lock
adc
sub
and
filds
jno
mov
pop
outsl
cmp
aad
add
out
pop
xchg
sub
mov
test
sarl
int
das
in
imul
dec
dec
cmpsl
sbb
sub
jns
insb
jb
cmp
dec
sub
pushf
dec
cmp
cwtl
and
mov
int3
iret
push
sub
or
pop
cmp
sti
in
lods
inc
xchg
es
je
push
inc
insb
mov
mov
lods
xlat
push
xchg
push
pushf
std
jmp
rcll
mov
inc
fildll
inc
pop
sbb
sub
mov
test
sub
aaa
sbb
add
clc
pushw
cld
sbb
jecxz
in
and
mov
xchg
lea
sub
mov
sub
pop
aaa
shll
and
popl
inc
in
aad
add
mov
in
js
dec
sbb
jge
sbb
xchg
xor
subb
fstpt
jge
aaa
dec
cmpsl
roll
or
in
shlb
bound
test
test
dec
pop
ficoml
jecxz
ja
push
movsb
sbb
leave
xchg
scas
jnp
fldcw
jmp
and
push
push
push
mov
call
jo
sub
dec
jecxz
sbb
cmp
in
jb
cld
out
test
icebp
jl
pushf
jns
xchg
hlt
add
repz
push
cmp
lret
notb
repz
push
test
push
push
pop
popa
jle
cmpsb
mov
dec
sub
mov
push
cli
xorb
sbb
add
icebp
sub
rol
mov
iret
push
inc
add
cs
xchg
dec
daa
xchg
data16
adc
jl
scas
sahf
mov
in
int
daa
mov
sbb
fs
pop
jno
jecxz
ja
mov
enter
daa
cmp
cmc
fcom
enter
lods
mov
enter
outsl
inc
dec
xchg
jmp
sub
jnp
cmp
jne
cmp
cmpl
cmp
cmp
xor
mov
mov
fists
jnp
jb
xchg
cmp
sub
and
les
adc
jle
xchg
xchg
out
cltd
cmp
mov
dec
enter
and
or
test
jg
iret
mov
cld
std
inc
lods
cli
dec
mov
push
sbb
scas
adc
dec
xchg
pop
dec
imul
cmc
addr16
adc
mov
pop
dec
cmpsl
sahf
xchg
pop
push
inc
in
xchg
lea
mov
add
sub
repnz
jge
movl
and
push
pushf
mov
or
or
arpl
mov
mov
pop
mov
iret
push
fadd
out
mov
add
xchg
mov
push
dec
test
inc
loopne
clc
pop
out
lock
dec
inc
popa
ret
jle
movsl
test
enter
mov
inc
or
jae
or
inc
shll
fstpl
jle
test
ffreep
out
dec
int3
push
in
sub
lods
fsin
and
mov
mov
push
repz
inc
movsl
and
jbe
scas
lods
pop
adc
sub
iret
mov
insb
xor
mov
gs
push
fs
in
xor
clc
pushf
mov
pop
xchg
sub
lahf
sbb
pop
add
push
leave
rol
mov
outsb
cmp
outsl
negl
mov
jbe
out
sbb
sub
push
lock
daa
dec
mov
push
dec
mov
cmp
jo
mov
mov
mov
xchg
fsubp
loope
xchg
out
jmp
xchg
pop
lret
and
stos
fcoml
aas
sbb
adc
mov
cmp
jnp
mov
loopne
inc
pop
inc
pop
in
jne
ret
int
and
and
notl
testb
les
jle
pop
dec
xchg
mov
xor
mov
mov
in
pusha
and
clc
add
decb
adc
rcll
ficoms
scas
lret
cltd
and
and
mov
jecxz
imul
leave
rorb
jae
sub
aas
fnstenv
dec
inc
das
clc
sbb
push
enter
push
sti
cmpsl
push
inc
pusha
mov
inc
inc
fsubrl
out
inc
push
aas
rcl
sub
in
leave
lods
and
in
sbb
pop
lods
inc
xor
sub
incl
xor
dec
dec
add
icebp
fs
out
pop
sub
dec
mov
jp
fidivrl
test
and
and
cmpsb
push
test
cltd
jmp
in
mov
jmp
xlat
mov
xchg
pop
xchg
sahf
test
out
mov
pop
aad
jg
pop
and
xchg
fwait
rcrl
imul
std
sbb
loope
push
dec
pop
std
xchg
fwait
jbe
dec
cltd
inc
dec
aam
cmc
or
test
xor
pop
mov
sub
out
sub
test
int3
in
das
es
in
push
sub
leave
cli
jb
mov
jg
mov
xor
and
jns
jno
mov
sbb
mov
sarb
xchg
lret
pop
mov
or
lahf
inc
pop
push
fimuls
cld
sbb
cmp
je
repnz
subl
adc
sarb
jnp
test
sbb
xchg
cwtl
xchg
xor
pushf
cmpsl
subb
scas
les
push
sub
mov
movsl
cmpsb
test
loop
call
push
nop
push
jnp
fadds
sbb
sarb
mov
and
push
lahf
adc
jae
xor
leave
int3
je
in
fs
lahf
lea
sbb
mov
mov
pop
cmpsl
and
pop
dec
ret
push
test
adc
ds
es
fnsave
leave
shr
sbb
popf
das
dec
and
loope
push
fdivr
jecxz
pop
inc
ja
stos
push
dec
subb
inc
enter
notl
pop
inc
adc
stos
dec
dec
in
jg
mov
aas
cld
mov
and
ret
mov
pop
pop
lret
push
int
and
dec
mov
fstpt
rolb
jae
pop
pusha
adc
push
mov
mov
mov
cld
aam
cmpsl
jbe
aam
fldcw
pop
adc
cli
sub
mov
mov
xchg
ret
or
pop
xlat
xor
cmpsb
jmp
mov
decl
jno
xor
cwtl
pushf
push
ficoml
mov
push
scas
push
adc
repnz
stos
fidivrs
leave
arpl
addr16
test
movb
jmp
imul
adc
stos
lahf
xchg
rol
es
jno
repz
pop
loopne
jmp
pop
and
push
mov
stc
fiadds
aas
and
pop
stc
mov
mov
dec
dec
ret
xor
aaa
ss
cltd
roll
mov
xchg
movsb
mov
arpl
push
in
mov
mov
and
cmp
movsl
mov
and
adc
cmp
stos
in
int3
in
sub
add
loop
dec
loop
fsubl
mov
mov
out
int
dec
xor
fnstcw
jl
pop
push
push
test
je
hlt
js
test
subb
es
lods
pop
push
jno
add
push
sub
inc
sbb
minps
add
rcl
stc
xor
das
sub
mull
shrb
pop
xor
adc
jl
and
adc
add
sbb
add
mov
sbb
cmpsb
call
cmp
addl
mov
xchg
jle
jecxz
or
icebp
mov
aaa
or
adc
pusha
insb
daa
sahf
pop
push
jae
int3
add
stc
jmp
jp
shll
sbb
push
xor
ret
dec
popf
jmp
xchg
cmpl
rorl
cmp
fimull
xchg
mov
mov
popf
idivb
jno
mov
js
cmpsb
jb
lock
incl
lods
jle
jae
cmpsl
shrb
shlb
xlat
adc
or
or
and
test
enter
sub
mov
xchg
pop
sahf
adc
es
fidivl
scas
aaa
and
dec
mov
pushf
xchg
pop
fsubr
mov
loopne
loope
push
sub
lret
xchg
out
in
ss
cmc
mov
leave
cmp
test
dec
jg
aad
push
dec
or
add
ret
sbb
xor
xor
ret
imul
mov
pop
jecxz
inc
mov
inc
jg
jl
sbb
lds
add
xchg
test
and
loop
xlat
cmp
cltd
push
lret
mov
mov
pop
mov
cli
adc
xchg
testb
sub
sub
jecxz
sarb
ret
push
push
mov
jns
imul
stos
jg
test
xchg
dec
mov
in
cltd
and
sti
or
stos
into
cmp
rorb
out
or
in
incb
sub
pop
out
scas
push
out
stc
add
mov
pop
mov
sbb
or
arpl
movsb
orb
push
jb
pop
aas
sub
je
sahf
mov
adc
and
xchg
in
mov
mov
pop
ja
movsl
jnp
push
push
pop
lret
rolb
xor
jp
outsl
jg
add
enter
std
sarl
mov
sbb
adc
cwtl
sbb
push
stos
mov
imul
sub
xor
jecxz
int
sub
adc
out
mov
mov
lods
xor
sti
mov
cmpl
pushf
xchg
fprem1
ficoml
add
mov
pop
scas
ljmp
pop
sub
lods
inc
jne
rorb
int3
cmp
xor
je
jg
inc
lret
sbb
sbb
add
sub
fwait
iret
aam
adc
xchg
pop
stos
sub
add
add
in
rcrl
aam
xchg
jle
cwtl
stc
scas
sbb
mov
insb
jbe
test
js
jge
jecxz
lds
mov
daa
and
push
mov
icebp
xor
push
push
or
imul
mov
cs
setne
adc
enter
ss
out
lcall
divb
or
popf
repz
cmpsb
iret
fidivs
jl
ja
sub
je
jle
into
adc
adc
cwtl
mov
push
outsb
lods
in
into
fisttpll
push
movsl
les
jl,pn
out
out
out
adc
pop
mov
imul
addr16
and
inc
sub
mov
dec
shl
mov
insl
ret
and
push
and
stos
sti
in
dec
mov
add
frstor
fstpl
arpl
adcl
mov
aad
mov
aad
push
mov
mov
outsl
sbb
xchg
cmp
movq
jb
push
push
clc
mov
xchg
in
mov
push
dec
and
fnstenv
pop
pop
add
imul
xor
arpl
cmp
mov
xlat
add
stc
loopne
mov
sbb
sbbl
sti
int
adc
sub
jg
mov
arpl
push
pop
lods
hlt
mov
setns
and
mov
mov
xchg
or
xchg
imul
ror
test
aas
sbbb
loope
movb
push
pusha
sbb
in
aad
dec
xchg
rolb
jne
movsb
sbb
sub
mov
pop
mov
adc
cmp
mov
mov
jle
mov
jno
sahf
fidivs
xlat
jbe
xchg
xor
jo
and
jns
out
pop
js
addr16
mov
repnz
push
pop
inc
lret
icebp
pusha
rcrl
xor
xor
sahf
leave
mov
outsl
pop
jnp
pop
lahf
lods
sub
pusha
mov
dec
sub
sbb
lcall
imul
roll
cs
xor
and
adc
sbb
pop
cmpsb
and
int3
addb
bound
jmp
push
pop
mov
enter
add
shlb
call
jge
sub
cmpsb
ret
adc
dec
clc
in
sub
xor
js
adc
lahf
lods
jge
shlb
cwtl
rcll
jg
jl
cmp
or
and
leave
cmp
adc
xor
inc
inc
out
movsb
sbb
mov
and
inc
xchg
sbb
dec
lds
or
mov
xor
addr16
insb
or
cli
ret
daa
jno
es
mov
inc
cmp
popf
lahf
sbb
mov
pop
hlt
movsb
in
inc
dec
mov
inc
out
pop
hlt
push
jl
mov
xchg
jg
enter
pop
mov
call
push
add
adc
popf
or
loopne
mov
mov
pop
sub
mov
or
sbb
into
fs
pop
loopne
hlt
dec
lds
xchg
mov
js
push
sti
push
pop
roll
roll
pop
fdivl
cmp
and
int
test
pushl
mov
inc
sbb
adc
push
call
rcr
prefetcht1
pop
mov
or
imul
je
bound
jmp
inc
je
test
adc
pop
add
ret
mov
pop
push
out
imul
leave
cmp
mov
fisubl
jg
jmp
inc
pop
push
addr16
pop
inc
cmp
adc
sbb
scas
lds
push
jl
out
jne
add
add
push
or
fisttps
loopne
cmp
ret
imul
and
jb
dec
fstp
or
scas
negb
pop
cmpsb
xchg
fwait
aaa
jge
inc
mov
add
lock
iret
dec
jno
pop
cmp
lds
paddsw
sbb
mov
leave
add
daa
in
dec
addr16
movsl
push
cli
and
mov
std
movsl
test
outsb
mov
jmp
cmpsb
pop
lock
es
loop
testb
xchg
pop
xor
mov
dec
pop
gs
sbb
cvtpi2ps
xchg
add
mov
fnstsw
les
sti
pusha
inc
adc
pop
mov
cmp
mov
sti
int3
dec
jne
mov
stos
xor
in
or
mov
mov
pusha
daa
and
pop
xlat
scas
pop
cs
imul
jl
pushf
sub
xor
xchg
jmp
jl
ljmp
js
and
mov
xchg
pop
lock
push
mov
test
arpl
inc
push
pop
push
sbb
hlt
pop
cmp
sub
fmull
mov
cwtl
dec
sbb
pop
setno
je
jp
sbb
int
adc
pop
je
shlb
mov
pop
xchg
inc
rorb
popa
jnp
dec
stos
cmpsb
mov
inc
add
or
sbb
xlat
pop
loop
xor
inc
adcl
mov
inc
inc
add
xchg
mov
mov
add
add
mov
adc
xchg
repz
pushl
cmpsl
sbb
lock
mov
test
sbbl
cmpsl
push
addb
mov
sub
aad
push
sbb
xor
jae
mov
faddl
cmpsl
fnstcw
std
pop
nop
leave
mov
xor
jbe
push
sub
sarl
inc
push
es
fmull
shll
lret
push
add
cmp
add
xchg
addps
outsl
and
in
sahf
mov
mov
adc
pusha
push
add
add
stos
addb
adc
jecxz
push
aam
repnz
fisttps
in
cltd
sub
or
outsb
mov
cmp
ret
xchg
inc
mov
sahf
add
and
in
daa
in
insl
cmc
pusha
inc
mov
sbb
mov
shlb
xor
pop
adc
mov
cmpb
jno
into
inc
mov
add
fists
les
xchg
orb
insl
insl
xor
lret
push
cltd
and
lret
jmp
jp
cmp
lea
xor
mov
jno
push
add
dec
outsl
add
xchg
loop
jg
pusha
adc
int3
push
dec
mov
jecxz
ret
fnstenv
jecxz
pop
or
imul
clc
rcr
adc
inc
mov
fimuls
and
and
inc
sbb
mov
es
jl,pn
mov
jne
popl
lret
and
xchg
jbe
sub
sub
clc
xor
outsb
inc
push
dec
out
jbe
mov
jecxz
pop
xor
dec
popf
loop
push
dec
sbb
jnp
pop
or
xchg
cmc
and
mov
loop
jo
sbb
inc
ret
adc
lods
pushf
xlat
mov
nop
test
sbb
test
repz
jno
mov
or
popaw
js
outsl
lcall
pop
fstpt
fisttpl
mov
pop
adc
mov
std
push
xchg
jl
sbb
dec
rorl
xchg
rcr
adc
bnd
je
push
imul
test
insl
lret
test
clc
call
and
subl
mov
inc
scas
mov
pop
mov
xlat
sbb
xor
pop
xor
arpl
loopne
add
lds
sub
in
xchg
mov
lret
fcomi
mov
cmp
insb
mov
add
jge
sti
sti
dec
pop
mov
adcl
addr16
shll
push
sbb
pop
adc
pop
mov
out
xor
mov
je
fnsave
sbb
stc
adc
xchg
jne
inc
jo
stos
mov
pop
fcoml
repz
add
fisubrl
lea
nop
fsubrs
ja
fs
push
add
arpl
icebp
jo
sub
repz
push
nop
xchg
loope
jecxz
xchg
mov
xor
addl
dec
out
js
orl
jno
lret
xchg
out
sbb
cmp
call
and
jg
and
es
loop
and
jbe
subb
lods
xlat
fdivrp
xchg
out
mov
or
loopne
xlat
jo
mov
imul
add
adc
jne
sahf
push
mov
mov
cmpsb
xor
ljmp
call
lahf
in
imul
adc
fcmovb
data16
mov
xchg
xor
add
fidivrl
mov
jmp
pop
push
sbb
inc
shrb
cmp
and
addr16
int
aam
jp
jl
xchg
or
mov
pop
xchg
loope
ret
ss
inc
sbb
and
xchg
pusha
or
les
cmp
mov
ljmp
hlt
adc
mov
jnp
jne
inc
filds
dec
sahf
daa
out
push
movsl
in
xchg
jne
jecxz
lret
pusha
xlat
mov
mov
xor
lock
lahf
in
test
jo
sub
dec
loopne
iret
rorb
popa
cwtl
pop
jle
testb
xchg
push
insb
xchg
xor
push
pop
jle
adc
icebp
or
cmc
inc
mov
xchg
mov
mov
and
jmp
out
xor
div
test
aam
add
dec
xor
sub
shll
jge
xchg
rol
shll
mov
les
mov
loopne
lods
sbb
push
and
in
jae
jecxz
das
mov
xchg
mov
xchg
pop
fbstp
loop,pt
mov
cmp
mov
dec
rcrl
daa
lock
stos
adc
xchg
xchg
xlat
inc
pop
sbb
enter
faddl
mov
sub
cmp
addr16
loop
and
cwtl
sbb
leave
xchg
and
sub
faddl
mov
gs
inc
repz
or
movsb
lods
sbb
mov
fwait
aad
dec
addr16
inc
jp
lods
cs
cmpsb
or
jnp
jp
and
jo
xchg
or
arpl
and
out
dec
fstps
mov
cmp
xorb
or
xchg
fistl
push
les
pop
pop
cmp
inc
dec
test
clc
mov
fcos
dec
dec
mov
sarb
jnp
in
fisttpll
cmp
pushf
jmp
dec
xchg
adc
movl
repz
frstor
jo
gs
mov
dec
mov
roll
loope
adc
sbb
cmp
xchg
xchg
xchg
mov
inc
and
imul
dec
in
aaa
lea
xchg
arpl
fbld
scas
imulb
test
xor
aam
popf
push
stos
icebp
popf
and
loopne
rolb
push
fbstp
gs
inc
cwtl
lods
sbb
imul
push
inc
test
xor
aaa
dec
mov
jl
sarl
dec
mov
stc
into
pop
add
mov
xor
fidivrs
adc
enter
lds
mov
xor
hlt
pop
inc
adc
int
pop
and
out
mov
xchg
cmp
jbe
mov
out
test
mov
adc
push
jnp
mov
mov
rol
lock
xor
push
leave
nop
imul
loope
sub
fists
jp
enter
add
jns
sub
jp
out
pop
js
jne
hlt
and
ljmp
dec
inc
ss
sahf
xorl
jmp
sub
push
jbe
pop
xchg
jmp
sbb
add
cltd
dec
push
stos
int3
aad
rcl
cmc
movsb
enter
inc
mov
adc
int3
sti
sbb
xchg
inc
ret
test
stos
test
lret
pop
daa
cmp
mov
add
mov
sbb
loopne
inc
jg
cmc
push
clc
jbe
xchg
lret
and
inc
repnz
or
pop
aad
push
push
cmc
aam
jge
inc
stos
or
aad
cmp
stos
xor
inc
test
add
je
adc
mov
pop
jae
mov
adc
pop
mov
jno
cmc
inc
cld
mov
mov
pop
shlb
push
ja
mov
es
addr16
bound
add
xabort
dec
cli
shlb
sbb
test
pop
adc
mov
mov
push
jg
nop
loope
in
pop
mov
dec
movsw
adc
ficomps
popa
mov
jge
fdivrl
xlat
inc
jnp
scas
push
pop
xchg
add
mov
lret
and
les
mov
sbb
jmp
sar
jae
jl
push
rcll
aam
mov
lcall
sbb
xchg
out
jne
shlb
push
mov
inc
xchg
outsl
jns
xorl
pop
leave
fdivs
mov
repz
sbb
jge
mov
sti
sub
or
mov
movsb
clc
push
mov
pop
push
sti
and
jmp
sub
and
sub
or
out
xchg
add
stos
scas
lret
inc
pop
dec
and
adc
add
enter
mov
pop
inc
xor
shll
fists
jmp
sub
xchg
mov
dec
shrl
add
stc
dec
clc
daa
push
je
xor
xor
in
es
pop
xor
inc
jns
adc
stos
mov
xor
xchg
jnp
test
imul
or
mov
popa
xchg
lea
xchg
mov
xlat
jbe
fisubl
repz
repnz
jecxz
test
cmp
fdivs
mov
jno
popf
mov
ljmp
adc
push
fistpll
aad
push
mov
sbb
outsb
mov
leave
out
inc
fldl
daa
into
aas
mov
pop
int3
cltd
add
adcl
or
mov
fstps
sbbl
mov
cmp
sub
xlat
adcl
xchg
or
sbb
insl
xor
fwait
sarl
aad
les
xor
or
cmc
outsb
mov
push
jns
cmp
sbb
pop
dec
cli
mov
aaa
dec
xchg
jns
fwait
imul
std
cltd
jecxz
arpl
mov
sub
push
jmp
imul
lds
pop
scas
mov
in
jge
add
scas
xor
popf
sub
sti
push
dec
mov
test
cmc
cmp
push
fwait
xorl
insl
outsb
idiv
fcmovb
in
adcb
mov
int3
fnstenv
mov
xor
lahf
les
push
aam
in
insl
inc
xor
xchg
mov
loope
mov
popf
pop
xor
mov
test
pusha
clc
xchg
dec
pop
addr16
fdivrl
pop
adc
outsb
aad
daa
jp
in
xor
or
aas
pop
mov
inc
mov
push
or
fiaddl
iret
aam
or
sysret
mov
pop
test
xchg
clc
fcoms
sbb
mov
add
hlt
std
jb
push
mov
sbb
fucomi
xchg
les
fsubs
stc
in
push
xor
and
fs
adc
mov
xor
iret
dec
iret
push
jns
jg
mov
push
imul
rcll
mov
xchg
sub
orl
mov
in
jo
pop
das
inc
into
adcb
jp
xchg
and
mov
pop
jp
jmp
mov
adc
into
ret
add
mov
sbb
fwait
xchg
outsl
ja
xlat
lahf
les
dec
or
dec
lods
popa
xchg
mov
mov
sub
cmc
inc
xor
lds
lods
xchg
mov
mov
dec
test
lcall
and
pop
sbb
sub
xchg
mov
jno
adc
rcll
and
xchg
dec
stos
jp
icebp
in
and
outsb
in
mov
push
movsb
xchg
pushf
jne
fdivs
jae
shlb
mov
outsb
push
movsb
xchg
fldcw
xchg
jp
pop
mov
cmp
shrb
mov
insl
pop
rorl
mov
ss
int
mov
dec
xchg
imul
call
lcall
in
sbb
repnz
sub
add
icebp
scas
stc
pop
mov
mov
or
add
cli
sbb
mov
and
sub
sub
or
mov
shlb
aas
adc
cmp
pop
int
add
sbb
dec
ret
dec
push
sbb
aam
cmp
pop
popf
out
or
mov
fxch
sarb
fmul
cs
testb
mov
in
mov
repz
mov
sbb
aas
pop
shrb
mov
cmp
inc
xor
xor
lret
out
xchg
xor
dec
mov
xchg
xchg
je
and
xchg
jge
add
data16
aam
dec
mov
scas
push
cmp
pcmpgtd
aad
aad
mov
arpl
clc
cmp
nop
cmpb
and
lcall
cld
inc
gs
pop
call
scas
xchg
adc
inc
mov
or
repz
ret
ds
rolb
scas
pop
movsl
cmpsb
push
das
daa
movsb
iret
stos
clc
push
mov
push
daa
shlb
xchg
rcl
lock
test
addr16
in
push
dec
addb
push
fsubr
xchg
hlt
cmpsb
subb
lret
nop
xchg
or
xchg
or
xor
dec
sahf
loop
jno
jbe
push
cwtl
mov
inc
fiaddl
addr16
cmp
xchg
scas
push
xchg
cmc
fs
dec
inc
push
cmpsb
xor
ss
push
cmpsb
push
adc
sbb
push
push
pop
jb
sti
scas
insb
jge
lret
sub
push
adc
pusha
mov
dec
aas
pop
lret
dec
es
dec
inc
sbb
test
push
mov
pop
push
loop
add
mov
bound
sub
mov
jbe
cmpsb
in
aam
fs
js
mov
mov
mov
xlat
xchg
adc
inc
push
mov
and
push
loopne
in
loopne
or
loopne
imul
mov
jg
repnz
gs
std
hlt
adc
call
imul
mov
sbb
or
loop
inc
adc
in
or
sub
aaa
enter
cmp
mov
xchg
aad
add
jno
add
jns
imul
mov
jb
and
aas
lret
inc
ror
mov
icebp
xor
cwtl
dec
or
push
adc
mov
dec
bound
ja
arpl
mov
sbb
xchg
data16
xchg
and
ja
shll
and
xchg
ret
xchg
xchg
mov
loope
adc
mov
push
std
inc
lds
ret
push
push
stc
mov
fidivl
orl
mov
and
jl
into
cltd
cmp
or
pop
pop
lret
mulb
sbb
lea
adc
pop
xorl
push
push
int
sbb
jo
jne
jne
or
or
pop
test
adc
mov
xor
adc
shr
or
xchg
sti
and
nop
fmuls
fldt
jp
aas
mov
pop
inc
or
adc
ds
lock
int3
push
movsl
fisttpl
stos
loop
sti
andb
or
addr16
mov
xorb
xchg
jns
aad
dec
mov
pop
xor
pop
ret
xchg
pop
enter
pusha
adc
lcall
jge
fwait
adc
pushf
pop
inc
hlt
pushf
or
andb
stos
xor
fildll
mov
xchg
fdivrl
pop
js
bound
lods
test
mov
jbe
lods
nop
out
cmc
adc
sub
pop
stos
js
mov
pop
in
push
test
push
sub
pushl
rcll
into
es
lret
cmp
aad
and
add
rsqrtps
and
or
ss
pop
add
xor
jae
xor
movsb
or
jg
scas
inc
push
jmp
inc
cmpsb
test
jmp
jb
imul
out
jno
pusha
sub
mov
bnd
mov
mov
jns
ja
mov
push
icebp
in
jmp
rorl
push
aad
int
hlt
pop
add
leave
stos
negb
les
pop
sub
push
pop
loope
sbb
ljmp
repz
xor
aaa
aaa
xchg
testl
mov
cwtl
fisttpl
daa
xbegin
mov
aaa
test
mov
shll
xchg
pop
jg
lods
sub
adc
lret
cmp
ficoms
es
gs
cmp
sarb
and
mov
sahf
fldl
pop
mov
push
or
stc
fstl
xchg
btr
xor
push
aad
lods
xlat
sbb
inc
outsl
je
js
mov
lods
add
xchg
adc
and
cwtl
arpl
std
loop
pop
lret
ficoml
fstl
add
movsb
imul
inc
push
dec
cli
in
lds
xchg
movsb
rorb
lds
loopne
push
mov
inc
lods
add
lret
and
cmpsb
push
sti
pop
ror
mov
and
imul
cli
mov
or
sbb
hlt
mov
aaa
lahf
or
inc
add
imul
pop
test
dec
inc
cli
add
dec
mov
clc
mov
xchg
sahf
daa
cmp
cmpsl
out
mov
xchg
loopne
mov
mov
jecxz
loop
xorl
mov
sub
jnp
xchg
test
cmp
inc
ss
ret
adc
test
out
sub
mov
fcoms
fwait
int
sbbb
push
sub
and
fldcw
sub
or
and
out
iret
stos
push
mov
cmp
jp
icebp
loopne
xchg
push
shlb
out
xlat
test
ret
xchg
xor
dec
stc
add
inc
xor
sbb
scas
frstor
jae
fwait
xor
sbb
mov
xchg
sbb
jns
pop
cmp
pop
es
xor
mov
and
arpl
mov
lahf
mov
in
mov
jg
sbb
out
rol
loope
jbe
adc
aam
idivl
adc
gs
cmp
or
nop
jno
sub
ret
mov
addr16
daa
xchg
mov
in
adc
std
xor
out
int3
outsb
fists
mov
push
neg
mov
inc
push
sub
int3
pushf
push
in
sbb
mov
out
xor
pop
sub
mov
adc
sar
roll
push
dec
jns
jmp
xchg
pop
data16
mov
rorl
lret
jne
aaa
push
mov
xor
icebp
push
fstpt
mov
sub
push
sahf
divb
mov
mov
aaa
lahf
cmpsl
add
push
js,pn
pop
out
mov
je
pop
jp
mov
mov
pop
andl
xchg
sub
arpl
jp
rcll
sbb
movsl
shll
add
mov
popa
add
mulb
in
or
inc
repz
jl
jae
mov
loopne
adc
inc
mov
mov
inc
adc
xor
pop
insb
xchg
or
fsub
and
dec
adc
fisubl
mul
in
lds
mov
cmp
add
int3
xor
inc
sbb
cld
cmpsb
adc
dec
xor
xor
cmp
push
test
or
inc
or
sub
mov
cs
roll
inc
push
sbb
lret
arpl
ret
sbb
mov
push
or
or
fadds
or
insl
xchg
xchg
lods
jp
imul
data16
test
stos
xchg
jp
pop
push
gs
test
insl
mov
jcxz
in
fistl
mov
cli
ret
enter
add
pop
shrb
popf
aas
lea
jae
popa
popf
cmpl
push
xlat
popf
xchg
pop
mov
repnz
jge
subb
push
jmp
stc
pushf
lcall
out
jae
xor
call
cmp
dec
enter
out
mul
push
xor
push
xor
call
cmp
cmp
or
cmp
jge
cmp
pop
inc
and
or
sub
lea
cld
pop
or
mov
xchg
sbb
adc
xor
jo
arpl
enter
int3
ja
outsl
mov
daa
mov
call
aas
or
push
outsb
mov
pop
cmc
push
gs
xchg
xchg
movsl
dec
dec
shl
hlt
scas
shlb
shlb
jle
pop
pop
xchg
add
mov
cltd
xchg
xchg
movsl
sub
in
imul
leave
idivb
mov
pop
jnp
into
push
mov
mov
shl
ror
mov
sti
mov
mov
lds
inc
sub
adcb
xorl
rorb
pusha
out
mov
xchg
cmpsl
popa
push
jge
mov
stos
pop
pop
sbb
mov
lret
sbb
sarb
movsl
lret
adcl
fbstp
int3
dec
bound
ss
jns
and
pop
int3
mov
adc
shrl
ficompl
jae
out
stc
and
ss
dec
xchg
scas
je
int3
dec
test
push
adc
pop
mov
cmp
aad
insl
ds
add
addl
mov
mov
cs
mov
pop
mov
or
test
aaa
adc
xchg
mov
dec
in
jno
repz
jg
xchg
repnz
mov
out
mov
sahf
test
dec
and
pop
adc
test
mov
icebp
movsl
sub
cmpsb
jns
ds
mov
mov
adc
es
ds
aas
mov
insl
iret
jb
jle
sub
mov
cmp
jbe
rcr
sbb
stos
int
lock
jbe
movsl
in
and
enter
lock
push
out
mov
xor
jbe
and
rcrl
repnz
ljmp
inc
stos
cltd
outsb
or
and
test
mov
mov
lods
pop
data16
insl
cmp
cmpsl
fisubl
in
mov
lret
scas
push
push
pop
push
icebp
ja
test
add
push
fistpl
sub
call
push
mov
push
cmp
mov
jle
stos
xchg
shlb
clc
lea
adcl
mov
or
das
sub
and
clc
cmpsb
mov
jge
dec
mov
scas
jmp
mov
fdivl
lods
xor
adc
mov
sub
les
mov
pop
icebp
scas
lods
cmpb
lods
add
xchg
out
jle
fstpt
repz
in
sbb
push
mov
imul
out
cltd
pop
or
cs
push
pop
lods
pop
fmuls
movsb
pop
inc
dec
xchg
add
xor
xchg
js
push
mov
ss
adc
gs
movsb
std
insl
sub
ljmp
pop
js
call
xchg
pop
cmp
dec
xor
pusha
or
dec
fisubrs
xchg
jge
xorl
and
into
pop
and
dec
ljmp
jne
or
repz
fistpll
and
xchg
loopne
pop
and
daa
pop
lods
dec
lds
test
sarb
mov
inc
cltd
xor
call
insl
lcall
dec
mov
jno
add
scas
loope
stos
dec
ja
push
cmp
cmp
or
sub
dec
push
outsb
ja
sbb
rorl
sub
aaa
rcrl
cmp
add
dec
inc
jp
mov
sub
fildl
seta
dec
xorl
push
inc
xchg
or
inc
sub
mov
xor
sbb
stos
insb
imul
shr
sub
jmp
jge
jp
sub
sbb
idiv
mov
insb
ss
nop
and
scas
mov
or
aam
into
movsb
insl
ja
es
rclb
mov
add
fcom
mov
addr16
jmp
adc
and
loop
sub
push
es
ret
sub
outsl
lods
mov
movl
mov
mov
mov
or
mov
adc
cs
ror
xchg
test
mov
adc
fisubrl
loopne
ds
cmp
inc
cwtl
pop
iret
lcall
mov
add
jo
ja
testl
cmp
lea
pop
loopne
notb
mov
xchg
fs
push
insl
rolb
push
imul
fadds
mov
mov
fiaddl
dec
fdivrs
out
and
xchg
sub
sbbl
jnp
dec
mov
adc
outsb
cmpsb
int
lret
dec
add
push
sbb
sahf
or
fisubrs
out
and
rcrb
test
pop
sbb
lcall
test
jb
jl
test
or
and
lret
sub
jg
mov
and
jmp
inc
or
sub
and
add
pusha
mov
rorl
mov
mov
nop
ret
cmp
cltd
inc
inc
adc
int3
sbb
ret
shrl
loope
lock
lds
inc
jmp
inc
or
dec
clc
mov
xor
test
insl
in
xchg
shlb
xor
pop
out
hlt
pop
inc
repz
fdivp
imul
sti
mov
pop
mov
add
outsb
and
xchg
xchg
ret
push
pop
or
dec
popf
out
mov
adc
aas
out
and
popa
push
sub
outsb
sbb
out
pop
cs
add
test
inc
ror
int
dec
je
xchg
test
lea
and
cltd
bound
gs
jg
cwtl
jg
mov
pop
dec
in
aam
mov
xor
sub
rcrl
xor
mov
sbb
xchg
js
xor
pop
lock
call
nop
ds
stc
mov
push
cmc
push
mov
ljmp
test
in
mov
cld
fnstcw
mov
pop
cli
int
das
imul
push
popa
insb
incb
pop
xchg
jp
xchg
les
hlt
mov
jnp
dec
clc
loope
andb
lea
stos
jle
leave
dec
fiadds
sub
cmp
xchg
cmp
test
pop
cwtl
daa
pop
dec
enter
inc
shl
outsl
push
or
mov
sahf
aad
mov
jecxz
fistps
out
mov
out
fisttpll
xchg
fwait
sahf
jo
mov
adc
push
xor
adc
pop
aam
arpl
adcl
pop
mov
add
dec
sbb
xchg
jne
inc
rol
dec
pop
mov
andl
or
push
xor
xor
int3
arpl
xchg
jg
adc
sub
aam
mov
cmc
stos
adc
in
inc
push
push
pop
rcll
pop
out
mov
mov
adc
ljmp
repz
jmp
cmp
adc
into
cmp
jg
movsb
push
lods
test
mov
orl
repz
mov
jmp
push
gs
idivl
adc
int
bound
mov
xchg
mov
dec
rorl
mov
jl
jmp
clc
jecxz
xchg
shrd
pushf
in
call
xchg
dec
sbb
cmpsb
cmpsl
sbb
mov
mov
mov
add
mov
ret
outsb
aad
jl
rcrb
add
sbb
push
imul
add
mov
shr
lret
sub
outsb
jbe
mov
pop
out
add
int
insb
mov
jmp
xchg
mov
jno
push
add
aas
mov
fidivrl
push
fdivr
push
aam
mov
push
dec
xchg
inc
mov
and
call
fdivs
sbb
jg
jecxz
and
xchg
dec
testl
and
pop
mov
fdivp
bound
xchg
add
add
push
adc
lods
add
jbe
std
pop
mov
add
testb
add
mov
mov
test
stos
xchg
sub
loop
mov
sub
dec
int
xor
push
je
or
mov
jmp
test
xor
dec
aaa
xor
xor
dec
xchg
mov
sbb
inc
mov
pop
dec
in
jg
sbb
lret
mov
inc
xor
pop
inc
inc
test
push
pop
mov
stc
xor
addr16
mov
std
inc
pop
scas
push
jle
mov
in
scas
ljmp
jge
sti
mov
adc
subl
adc
push
clc
sahf
arpl
dec
iret
dec
fdivr
push
addr16
pop
pop
cmp
ret
imul
mov
pop
je
fisubs
aam
imul
shll
sbbb
out
mov
add
mov
add
dec
add
push
mov
popl
dec
push
push
push
dec
cmp
inc
push
outsb
or
loop
xor
cmp
inc
dec
dec
xchg
fs
test
lret
pop
shr
inc
outsb
adc
pushf
mov
xchg
sar
mov
lret
lret
divl
jnp
sub
jns
lret
into
lods
insb
dec
add
sbb
push
jne
jb
int3
push
sbbl
in
in
arpl
and
ljmp
ret
mov
lcall
sbb
xor
movsl
adc
in
push
or
pop
push
test
mov
arpl
stos
mov
fs
cli
xor
into
lds
lea
or
rolb
sahf
mov
mov
fdiv
jg
mov
cmp
jne
jp
xor
sbb
jg
fcmovbe
jb
pop
inc
mov
add
xchg
je
ret
inc
ds
xchg
sarl
and
or
jno
fisubl
pop
es
push
lret
or
cmp
popa
cmpsb
mov
or
lea
insl
inc
jecxz
insl
pop
or
xor
pop
stc
divl
into
imul
cli
cmp
sub
mov
cli
leave
jle
xchg
stc
xor
fwait
out
jmp
push
popa
jmp
mov
push
imul
cld
nop
mov
cmp
push
dec
sbb
dec
aam
sbb
jnp
add
rol
cmp
adc
push
sti
fucompp
imul
sub
pop
scas
repz
sub
or
es
lds
in
jb
sbb
inc
mov
fs
lcall
inc
aam
dec
xchg
xchg
fs
sbb
cmpsb
test
outsb
bnd
cmp
rcr
mov
push
push
pop
mov
pop
arpl
out
xor
adcl
stc
push
pop
sbb
stos
cmp
mov
das
mov
fistps
lret
movsb
addb
fmul
in
cwtl
jp
dec
xchg
notl
fidivrl
sub
test
push
and
bound
mull
dec
test
loop
pop
shll
cs
dec
cmpb
mov
xchg
call
repz
hlt
ljmp
push
pusha
test
add
dec
jmp
mov
mov
movsb
or
shrb
lcall
cld
test
cmc
mov
xchg
iret
pop
or
sub
imul
adcb
lret
jbe
mov
push
and
pop
fwait
jmp
sub
or
andb
in
push
mov
inc
je
and
and
cltd
out
sbb
stos
cld
push
jg
sub
je
cmc
fbld
xor
ret
sub
inc
dec
data16
jp
sub
sarb
add
cmp
cwtl
lret
or
jecxz
jmp
jb
sahf
lea
inc
pop
stos
mov
loop
cs
xorl
dec
aas
sub
add
mov
cld
add
mov
inc
push
add
int
push
and
dec
jmp
sub
mov
insb
daa
mov
shrl
pop
ljmp
sbb
xchg
and
jnp
stc
pop
outsl
into
pusha
mov
movsl
pop
test
fs
aad
testb
rcrl
in
scas
or
insb
fmull
imul
add
fcom
ja
hlt
cltd
mov
popf
push
fwait
mul
jle
push
sub
cmpsl
dec
fmuls
lock
dec
sbb
fdivs
jno
out
push
xchg
stc
adc
and
push
cmp
sub
fs
add
adcb
js
xor
add
adc
fiaddl
out
add
sbb
scas
fs
daa
add
lods
in
sbb
shrl
gs
cs
subb
fwait
jecxz
inc
push
movsl
mov
xor
or
add
in
ret
add
add
inc
vpperm
cwtl
addb
aad
pop
test
mov
sub
orb
arpl
enter
push
dec
pop
and
cltd
sbb
xchg
imul
cltd
ficompl
dec
insb
mov
outsl
fidivs
add
or
adc
rcrb
into
xchg
push
ret
movsl
pop
dec
adc
loop
sbb
jg
xchg
add
andb
mov
ja
mov
fwait
cs
insb
out
jbe
push
mov
cmp
int3
jl
dec
insl
cmp
scas
call
inc
pop
pusha
inc
lock
jle
ds
or
dec
idivl
and
xor
cmp
mov
outsl
in
push
lock
pop
cmc
jbe
arpl
in
xchg
inc
adc
mov
xchg
add
pop
push
sub
add
inc
lock
mov
jg
push
jne
add
mov
push
pop
or
cs
inc
popa
lods
stos
fistps
push
fidivrl
sbb
cmpsl
vorps
sbb
mov
or
inc
push
mov
push
in
and
add
fnstenv
push
test
fwait
lahf
int3
dec
cmpsb
jmp
dec
xor
xchg
ss
mov
movsb
pusha
testl
or
cmp
call
sbb
lock
je
fbld
outsb
push
fidivl
loopne
int
xchg
cmc
jo
or
jmp
cmp
call
arpl
pusha
and
movsl
aam
pusha
imulb
xorps
sub
iret
cwtl
movsb
cmp
push
mov
jle
mov
es
push
stos
inc
scas
jno
inc
popa
lds
icebp
xchg
dec
incl
sub
nop
in
fcoml
jmp
clc
leave
inc
std
insb
gs
or
pop
rorl
push
loop
test
mov
insb
out
mov
shlb
bound
imul
jnp
dec
dec
cmp
or
xor
pop
mov
insl
dec
adc
push
adc
sbb
ljmp
xchg
into
xor
out
je
jbe
jb
sub
cmp
adc
aas
mov
lret
cmp
adc
aas
pop
fbld
mov
mov
or
xorl
ljmp
ret
fadds
insb
lods
mov
inc
and
movsl
mov
jecxz
mov
in
arpl
nop
dec
lret
mov
pop
push
loop
pop
pop
or
mov
push
pop
jp
sbb
daa
jp
clc
push
adc
clc
into
cltd
pop
add
stos
call
jl
leave
stc
imul
mov
imul
dec
sub
sti
jo
repnz
adc
ja
inc
enter
mov
loopne
mov
ds
adc
jmp
loop
xor
lret
arpl
push
push
enter
or
aam
jecxz
es
dec
or
or
jg
sub
imul
adc
jne
xchg
out
daa
nop
mov
std
test
add
loope
add
or
decb
cltd
shll
xor
sbb
inc
popf
rorb
into
xchg
in
call
in
xchg
data16
addl
in
lea
fs
pop
hlt
dec
ljmp
das
add
lret
xor
mov
xor
test
sahf
out
inc
mov
ja
roll
dec
fwait
insl
or
insl
movb
leave
pop
xchg
pop
pop
push
mov
filds
leave
sbb
rol
std
mov
shrb
mov
push
mov
test
jnp
pop
mov
jbe
pop
mov
mov
sub
jecxz
imul
sbb
sub
rorl
push
xchg
imul
mov
andb
xchg
outsl
loope
xor
das
push
dec
sarb
imul
stos
sub
lret
pop
xor
hlt
out
cmp
out
popa
cs
movsb
neg
mov
jno
inc
movsl
sub
add
cld
enter
sbbb
sub
and
filds
mov
fistpll
add
in
aad
jl
jne
stos
test
femms
inc
jo
out
pop
stos
inc
hlt
loopne
xchg
add
pop
sub
xchg
adc
hlt
scas
or
fwait
cmp
xchg
sub
sub
ja
lret
jo
testb
call
cmp
xor
cltd
gs
inc
mov
nop
add
sbb
dec
or
push
insb
jns
jmp
sbb
stc
jp
mov
rclb
mov
inc
xchg
fld
shll
int
cs
pusha
pop
push
or
std
add
sarl
sub
stos
lea
xor
xchg
sbb
sub
jno
mov
xlat
scas
pop
adc
add
imul
cltd
jp
push
mov
pushf
or
scas
mov
add
test
lock
sub
sub
mov
leave
cwtl
int3
push
rorl
aaa
stc
mov
inc
cmpsb
add
lahf
dec
mov
rcl
fdivp
ja
and
mov
dec
and
push
ret
sub
leave
dec
jnp
mov
xchg
in
add
add
out
jb
jp
fistpll
cmpsb
pop
in
jo
dec
cmp
sbb
mov
enter
and
jge
test
cld
xchg
es
scas
call
subl
inc
pop
jns
fadds
xchg
mov
mov
enter
push
mov
mov
push
iret
mov
out
cmp
daa
call
lds
dec
push
add
pop
mov
cmpl
js
outsl
pop
mov
sbb
hlt
mov
in
mov
aam
mov
mov
lret
lods
or
mov
push
test
les
mov
lods
inc
stos
sbb
in
cmp
sub
scas
or
jbe
jbe
sub
adc
pop
inc
and
stos
fwait
es
lods
aam
cmp
fmull
lahf
popa
adc
stos
pop
cmp
std
xchg
mov
dec
mov
xchg
out
cmp
dec
aas
das
dec
inc
fcoml
add
cmp
call
out
std
xchg
clc
frstor
clc
xchg
in
xor
push
push
cmp
sbb
mov
icebp
xchg
incb
nop
pop
adc
cld
scas
cli
mov
outsl
add
out
lahf
sbb
out
push
mov
sbb
outsl
fisttpll
adc
mov
fsubrs
sbb
arpl
arpl
test
adc
popa
jecxz
ret
dec
mov
aad
dec
cwtl
inc
inc
sub
inc
xlat
mov
movsl
pop
xchg
out
fdivs
loope
add
pop
inc
mov
std
mov
enter
push
iret
imul
cpuid
push
jge
or
dec
and
movsb
xchg
xchg
sbb
inc
iret
add
je
jne
lret
push
bswap
adc
stc
fimull
repnz
push
inc
fcoms
xchg
adc
cwtl
loopne
loope
mov
sub
adc
fisttps
arpl
sub
add
repz
int
xchg
jne
pushf
jo
cmc
mov
shll
ljmp
js
ja
in
js
adcb
adcb
push
pushf
cmpsl
mov
cltd
sbb
lea
or
ror
or
xlat
loope
rorb
pop
push
das
scas
push
enter
adc
test
add
call
repnz
dec
cmpsb
jb
aad
dec
lret
jge
inc
and
shlb
jl
pand
in
test
push
xchg
push
pop
fsubrl
pop
or
ja
aaa
sahf
loope
ljmp
mov
mov
pop
mov
push
test
and
adc
lahf
xchg
aad
mov
mov
out
jb
add
cmp
mov
fwait
ja
pop
sar
stc
push
xor
call
inc
xor
sub
jmp
jecxz
pop
fidivrl
xchg
faddp
shl
push
outsl
mov
xchg
jl
into
outsb
cmp
imul
rcrb
nop
addr16
mov
sarb
fwait
push
int
cwtl
clc
sbbl
xchg
mov
push
mov
popl
fmul
jo
ror
cld
jmp
adc
adc
nop
jb
test
out
addr16
inc
xchg
pop
dec
or
loope
sbb
outsl
add
and
or
cs
or
iret
int3
bound
mov
std
push
psubd
mov
stos
sub
xlat
cwtl
or
js
ja
pop
shrb
sarl
dec
mov
xor
sub
int
test
leave
cmp
sub
push
xchg
test
or
jmp
movsb
inc
clc
mov
adcb
add
inc
pushl
clc
out
jnp
mov
inc
mov
sub
rclb
enter
sub
arpl
movsl
jmp
into
jns
dec
pop
xchg
or
sub
lret
fwait
mov
and
sbb
pop
outsl
sub
push
idivl
adc
cmpsb
fistpll
movsb
jns
cmp
lcall
outsb
sub
movsl
add
inc
inc
sub
mov
mov
inc
mov
loope
fs
les
aad
sub
dec
sbb
rcrb
out
or
mov
jg
leavew
movsb
daa
pushf
dec
lret
sbb
mov
mov
push
push
push
and
ds
jae
adc
lret
jle
dec
clc
mov
repz
sub
sti
xor
outsl
and
out
jae
sbb
mov
cmpsl
xchg
or
test
xorb
add
and
in
mov
lea
mov
cmp
enter
loopne
pop
loope
pop
sbb
xchg
lret
pop
mov
xchg
lret
aaa
mov
inc
bswap
cli
mov
dec
mov
sbbl
repz
outsl
out
les
pop
jg
dec
sbb
mov
cmp
or
inc
enter
movsl
xorl
cli
mov
pop
in
enter
andl
sbb
ljmp
adc
or
xchg
lret
lods
cmp
je
test
fsubl
inc
shl
cmpl
sub
sbb
sbb
or
and
push
lret
adc
sub
jecxz
jbe
inc
insb
loopne
inc
jl
stos
imul
outsl
dec
ds
xor
js
cmp
adc
push
in
mov
mov
mov
dec
cwtl
pop
out
fstp
es
push
rcl
mov
pop
pop
sbb
dec
pop
loopne
jp
pop
imul
jl
fxch
leave
rorb
mov
and
stos
and
inc
sbb
mov
orl
push
dec
add
push
test
xchg
movsb
repnz
lcall
jge
jmp
jns
pushf
inc
push
mov
loopne
dec
loopne
jae
cmp
fcompl
ds
add
cmp
pop
scas
adc
sbb
jbe
mov
cmpsl
jo
ret
cmp
mov
loop
adc
jns
lods
sub
push
or
cmp
cmpsb
or
mov
pop
mulb
sarl
pusha
push
clc
test
in
mov
dec
mov
in
and
es
cli
xlat
jmp
bound
pop
sbb
lahf
cmp
mov
push
inc
ret
pop
push
xchg
mov
arpl
frstor
and
jg
inc
mov
loop
adc
cmovbe
nop
dec
adc
clc
mov
rorb
test
sbb
sbb
iret
aaa
fstl
mov
scas
lret
in
stos
mov
or
push
aad
aad
pop
mov
out
mov
roll
cmp
jnp
movsl
xchg
outsb
push
pop
cmpsb
sarb
mov
imul
fdivrl
das
sub
lcall
xchg
xchg
ljmp
and
lret
dec
sahf
adc
jbe
adc
mov
and
sbb
or
lods
comiss
xchg
sti
push
stc
inc
mov
frstor
add
xor
or
xor
push
inc
cwtl
in
xor
sub
addr16
add
aaa
mov
insb
ret
inc
add
xchg
mov
mov
xchg
incl
pop
fwait
shl
inc
testl
or
cmp
sub
push
pop
cmp
push
inc
pop
mov
mov
jp
sbb
cld
dec
add
push
fcmovb
sub
jmp
adc
push
inc
inc
orl
xor
add
fwait
mov
shll
mov
or
pop
or
pop
test
hlt
es
mov
jge
sub
jno
lds
push
jmp
fadds
lahf
xchg
push
add
mov
xor
negb
pushf
xor
mov
push
orb
sub
sub
loopne
jns
imul
mov
es
jne
jmp
cmp
in
and
xor
dec
add
leave
das
cmp
push
push
push
orb
push
sbb
sbb
dec
push
jne
mov
out
std
push
mov
sbb
ja
xchg
je
fnstcw
ljmp
xchg
lods
rol
sub
jl
lods
out
mov
inc
pop
mov
loope
imul
mov
or
fs
in
cmp
sbbb
test
repnz
pop
mov
shl
sahf
fdivs
add
adc
jo
jmp
and
lds
inc
xchg
out
xor
js
xor
xor
mov
xchg
sbb
xor
cmp
cmpsb
repz
fidivrs
imul
cltd
or
cmp
loopne
rolb
js
pop
xor
jo
mov
pusha
mov
and
mov
sti
out
xor
mov
lds
daa
fidivrl
xchg
test
scas
out
loope
repz
push
or
lods
fcomp
repz
arpl
adc
pop
je
out
add
rorl
addb
lretw
cltd
push
dec
vunpckhps
mov
mov
lahf
sub
aad
hlt
ret
xchg
mov
and
ret
mov
stos
lret
push
cli
sbb
dec
cmc
jae
cltd
lret
add
mov
adc
xchg
xchg
call
jl
mulb
xor
push
daa
outsl
incb
jecxz
test
xchg
adc
jmp
mov
push
js
mov
je
mov
mov
and
adc
inc
jne
mov
js
or
out
sub
jle
jb
cmp
les
cmpsb
sbb
pop
mov
push
pop
push
dec
rorb
mov
aam
or
icebp
dec
push
mov
shl
pop
adc
icebp
fwait
lods
xor
jnp
aam
es
push
push
jle
pop
insl
sub
cmc
leave
imul
loopne
sbb
aas
mov
inc
inc
int
push
test
mov
inc
jg
cmp
or
pop
add
mov
or
arpl
rclb
in
jp
or
nop
xchg
cli
push
xor
or
adc
or
lcall
cltd
or
or
lcall
adc
push
dec
xor
mov
inc
lea
mov
fidivrl
or
mov
lret
add
aad
or
das
jo,pt
in
jb
and
pop
data16
fs
and
push
mov
cli
test
int
iret
push
dec
ficomps
jl
mov
call
adc
test
xor
mov
test
mov
out
mov
adc
inc
adc
out
mov
mov
and
pop
inc
fcmovu
mov
iret
mov
sbb
aas
adc
or
mov
in
xor
push
push
add
shl
add
cmp
js
or
loopne
sahf
fldcw
add
ret
jge
pop
and
test
and
dec
jmp
cmp
mov
inc
fwait
jge
iret
sub
scas
lock
pop
mov
jecxz
inc
pusha
pop
push
ljmp
mov
hlt
push
push
push
int
sub
inc
mov
xchg
cmp
test
push
outsl
sub
pop
nop
clc
or
push
cmp
push
pop
cmc
sbb
in
test
mov
cmpsl
sub
push
mov
pop
aas
xchg
lahf
xchg
mov
pushf
sub
je
cmc
dec
sbb
dec
xchg
in
sbbl
jne
sar
cmp
mov
pushl
xor
sbb
adc
pop
lahf
dec
pop
push
test
aaa
mov
loope
sbb
mov
cltd
test
mov
lea
add
push
mov
sbb
xchg
inc
pop
and
popa
ret
ficoms
pop
movsl
and
hlt
mov
xlat
pop
sbb
fwait
cmpsl
add
test
divb
cltd
mov
ffreep
in
insl
xlat
pop
pop
or
or
dec
das
loope
pop
je
pusha
ljmp
cld
inc
dec
leave
sbb
adc
repz
jbe
hlt
decl
xor
push
jp
sbb
in
enter
loop
loopne
cmp
push
jmp
sbb
imul
ffree
in
into
test
mov
les
inc
adcb
jae
cmp
loopne
mov
in
aas
push
push
movsb
sub
or
shl
int3
sbb
int3
xchg
or
sbb
subl
mov
jg
cmp
aas
xor
fldenv
js
cld
rolb
and
dec
lods
dec
pushf
inc
mov
and
xor
stos
ljmp
mov
shll
test
das
mov
clc
pop
addr16
imul
jmp
movsl
cltd
add
sub
mov
fisubrs
sub
arpl
addb
mov
out
inc
movsb
ja
mov
pop
iret
adc
adcl
dec
inc
inc
cmp
arpl
dec
mov
push
mov
lahf
push
cmc
mov
movsl
adc
loopne
xchg
jge
push
sub
sbb
sub
inc
sub
or
jbe
cli
inc
sahf
aas
icebp
xor
xlat
popf
pop
xchg
js
push
inc
into
add
cmc
adc
std
nop
sub
dec
aad
jne
out
xchg
mov
push
jnp
leave
dec
cld
stos
jmp
sbb
stc
dec
jecxz
adc
or
shrl
filds
and
stos
mov
daa
loope
repz
add
rep
fmul
test
dec
bnd
adc
stc
sbb
mov
and
mov
xor
inc
mov
xchg
jmp
xchg
in
sbb
adc
ret
fiaddl
inc
cmp
pop
sbbb
xchg
dec
adc
cmpsb
sub
cmp
dec
sahf
lea
gs
jl
std
dec
jns
shrb
mov
jo
fcoml
pop
aad
add
pop
lret
fdivrs
js
sub
dec
pop
mov
repnz
imul
adc
or
sbb
std
push
push
out
jns
cmp
andb
and
fcomip
push
push
mov
mov
pop
int3
leave
in
xlat
orl
pop
shlb
loop
push
dec
cmp
mov
mov
mov
aam
arpl
dec
lds
jmp
imul
cld
loop
sub
lods
loop
mov
or
pop
jbe
das
or
inc
popf
xchg
sarb
and
mov
sbb
pop
mov
inc
movsb
jo
pop
cmp
out
add
andl
test
dec
test
je
push
repnz
add
xchg
mov
cmp
adc
loopne
add
pop
int
push
mov
ds
arpl
or
jmp
push
call
cmp
jno
mov
repnz
shl
push
xchg
mov
into
out
pop
push
jge
ss
add
repnz
mov
cmp
sbb
push
out
mov
fiadds
push
dec
add
lret
push
sub
cmp
mov
rcl
bnd
xchg
xor
adc
loop
or
inc
mov
inc
jb
mov
cmpsl
adc
mov
in
xor
xchg
arpl
icebp
pop
fldt
mov
jecxz
popa
out
lret
add
and
pop
stos
dec
push
jo
icebp
dec
mov
mov
leave
jnp
into
lds
int
bound
xchg
lods
insl
push
jae
cmpsb
and
aam
jmp
lock
sub
add
mov
icebp
mov
daa
hlt
cld
or
inc
fldenv
adc
mov
jbe
pushf
lds
lret
cmpsl
xor
sub
sub
addb
stos
decb
out
jmp
shl
in
pop
mov
jmp
jl
mov
incl
cmp
jne
rolb
daa
aad
mov
mov
dec
mov
xor
mov
mov
inc
xlat
mov
scas
js
mov
dec
dec
pushf
arpl
mov
xor
stc
fs
outsb
jp
jb
test
mov
cmp
lods
sti
push
stos
and
hlt
fcomps
fidivrs
dec
jae
pop
arpl
jnp
hlt
cmp
jp
xor
and
daa
jne
mov
stc
inc
mov
pop
fsubrs
movsb
pushf
repnz
jne
xor
xchg
adc
fwait
sbb
sub
push
test
cs
test
push
inc
nop
std
push
jle
mov
out
jnp
jp
adc
call
or
into
repnz
push
fnsave
filds
sub
lahf
sbb
push
jnp
sbb
scas
stc
cld
push
enter
flds
jns
rcl
adc
scas
lods
sub
pusha
jno
mov
mov
jne
std
shlb
shl
rcrb
sti
call
shrl
in
inc
mov
dec
fmuls
xor
inc
loop
inc
or
cmp
movsl
test
xchg
lock
pop
inc
adc
sub
dec
repnz
adc
out
mov
fwait
out
ret
mov
in
repz
cwtl
out
cmp
clc
outsb
pop
sbb
lret
mov
mov
jle
jp
bound
ja
pop
andl
mov
and
push
scas
fisubrs
pop
lahf
repnz
jns
mov
and
or
xor
gs
sub
push
push
fcoms
push
in
fsubl
inc
shrb
push
rcrl
adc
mov
adc
gs
jno
mov
into
dec
insl
pop
in
jmp
cmc
nop
xchg
jb
ja
lahf
punpckhbw
dec
push
jbe
push
pop
xchg
je
std
ret
lds
loopew
mov
sub
cmc
aam
dec
jae
inc
sub
aaa
push
popl
fsubs
xchg
arpl
aaa
and
pop
sub
mov
xchg
sub
push
push
push
jns
int
cmpsl
sub
lea
int3
lea
mov
test
imul
repz
push
xor
mov
mov
pushf
mov
mov
scas
pop
pushf
mov
nop
stc
sub
cmp
inc
cld
ja
mov
call
loop
loope
pusha
into
repnz
jp
pop
in
test
mov
push
mov
mov
push
into
hlt
adc
icebp
out
dec
dec
xchg
ds
inc
gs
popa
outsl
into
inc
mov
sti
fwait
lret
ret
fadds
sarl
pop
adc
jp
xchg
cmpb
bound
std
enter
push
mov
in
imul
iret
sbbl
sbb
out
cmp
add
jl
add
sar
cmp
dec
cmp
pushf
inc
les
aad
dec
lcall
stos
adc
popa
stc
jb
mov
jmp
in
cltd
xor
cmpsb
cmp
andb
dec
dec
call
xor
std
in
lods
ret
fnstsw
sbb
adc
or
add
sbb
ja
fs
jecxz
je
pushf
fsubr
cld
cs
inc
xor
pushf
cwtl
hlt
sbb
into
adc
enter
xchg
dec
test
daa
inc
xor
push
lds
or
add
add
ljmp
jl
data16
mov
lret
add
mov
pop
or
fiadds
or
push
mov
ror
aad
jno
stos
aas
and
aam
loopne
mov
out
xor
int3
faddl
jne
loopne
scas
mov
leave
xchg
loopne
push
inc
rcrb
sub
jo
cmpsb
xchg
fnstenv
gs
movsl
adc
int3
insb
js
gs
push
pop
test
into
sbbb
inc
sti
inc
mov
mov
lahf
je
and
insl
mov
adc
sarb
xchg
cltd
fdiv
and
insb
inc
fidivrl
cs
add
jge
xchg
add
into
js
sbbl
adc
xchg
sbb
push
mov
stc
and
cld
cmp
sub
add
xchg
outsb
xchg
add
dec
pop
call
std
repnz
mov
xor
jle
adc
xchg
les
mov
fwait
xor
cmpsl
and
mov
dec
cvtps2pd
mov
push
lock
loop
adc
dec
and
dec
fldln2
fcomp
loop
sbb
and
pop
data16
pusha
fildl
dec
push
jns
std
jo
aad
les
rorl
ss
nop
add
fs
dec
aad
inc
mov
in
fldt
ss
inc
fwait
pusha
push
pop
daa
cli
fdiv
mov
rorb
iret
xor
lret
cmpsb
mov
mulb
inc
clc
or
and
lods
pusha
es
daa
fcmovbe
add
mov
push
push
lahf
jns
js
push
jo
adc
cmp
and
mov
mov
and
xlat
sti
pop
insl
mov
adcb
fiadds
push
jge
xchg
pusha
push
inc
mov
mov
lea
and
loope
add
pop
sarl
pop
dec
fiadds
rorl
aas
push
es
add
inc
cmp
popa
int3
cmp
sub
or
rol
mov
xchg
xchg
daa
mov
imul
test
ja
push
iret
movntq
push
es
mov
sahf
inc
xor
mov
or
push
dec
orl
popa
pop
arpl
cmc
in
hlt
xlat
mov
pop
inc
and
hlt
mov
xor
ja,pn
lret
ss
xchg
xchg
sbb
dec
mov
ret
in
ret
aas
por
fdivrl
adc
mov
sbb
imul
out
add
and
inc
xlat
push
divl
jbe
stos
mov
pusha
or
xor
inc
push
xchg
pop
xor
stos
xchg
ret
cmp
inc
xor
add
out
les
scas
movsb
add
mov
mov
xor
out
shll
sarl
ds
int
sbb
xchg
loop
inc
mov
push
mov
add
into
loop
lods
cmp
rorl
push
sbb
in
add
outsb
push
adc
fisubs
push
out
movsb
cmc
fisubrs
int
mov
fnstsw
test
call
aaa
xor
pusha
in
pop
push
push
add
add
lret
dec
dec
lds
movsb
pop
push
push
push
mov
jge
faddl
sti
sbb
js
sbb
jl
es
xchg
mov
loope
rcrl
mov
or
pusha
add
lds
mov
dec
out
call
sbbb
xchg
fcos
pop
nop
sub
mov
push
mov
imul
ljmp
add
push
orl
push
pop
jae
cmpsb
xor
xchg
popf
mov
sbb
pusha
mov
shlb
cld
or
insb
mov
inc
adc
fisttps
jnp
xchg
jns
aam
xor
adc
jecxz
cmp
test
dec
sub
repz
push
cs
test
add
out
push
pop
lods
shlb
jp
inc
or
jb
or
add
or
mov
jge
int3
insl
push
hlt
jae
cs
lock
adc
fiaddl
or
sbb
nop
mov
aas
popf
dec
jb
mov
enter
out
sub
jae
mov
adc
cmc
add
mov
xor
xor
xchg
sub
xor
movsb
insb
scas
setbe
inc
cs
dec
or
fildl
or
dec
fwait
ret
and
pop
dec
shrl
jno
jbe
lret
inc
mov
ljmp
or
cmp
stos
sub
out
lahf
in
movsb
clc
jg
lcall
sbb
push
aad
pop
and
jge
cld
lods
add
sarl
rcll
pop
inc
int3
xchg
xchg
cwtl
adc
and
mov
add
push
xor
inc
cmp
insl
sbb
std
pop
push
dec
push
inc
cwtl
sub
sti
mov
add
push
sub
pop
and
fmull
or
stos
mov
dec
lock
sbb
nop
pop
push
mov
xor
adc
inc
mov
jns
xor
into
cmpsl
movsl
into
mov
cltd
and
and
or
jl
jmp
jecxz
xchg
mov
or
adc
jne
cmp
xor
sbb
cmpsb
mov
mov
pop
idivl
push
adc
cmpsb
lds
lret
cmpl
and
orl
in
into
daa
jl
in
ret
ljmp
xor
inc
push
sti
adc
sbb
adc
pop
adcl
lret
stos
aas
jmp
and
cmpsb
daa
dec
mov
jecxz
shrl
dec
jle
jbe
push
movq
mov
dec
sti
jp
inc
cmp
into
lods
cmp
or
pop
js
sbb
fnstcw
mov
negl
jo
out
or
pop
in
xchg
test
cmpsb
xchg
push
mov
dec
or
pop
mov
or
xchg
mov
lahf
test
mov
mov
outsb
adc
add
cmpsb
pmulhuw
cmp
jmp
or
mov
cmp
xor
hlt
inc
mov
xor
pop
repnz
mov
or
lods
jge
fadd
std
sbb
imul
not
dec
js
adcb
hlt
lret
lea
fistl
cmp
arpl
cmc
enter
fcmovb
xchg
mov
popf
out
or
mov
adc
repz
push
xlat
jmp
cmp
xchg
xchg
mov
sbb
jp
ret
lcall
sbb
loopne
ja
imul
ret
mov
lret
sahf
aad
cmp
test
mov
adc
repz
test
fs
je
sub
lret
pop
bound
jo
ds
sub
mov
xor
xchg
pop
jns
mov
les
dec
jb
fdivl
flds
push
js
inc
outsb
inc
out
hlt
movsb
insb
cmpsl
lahf
or
xor
andb
cmp
pop
das
out
or
hlt
jge
and
fiadds
popa
test
fisubl
jb
leave
jl
je
jns
in
push
jge
test
nop
mov
pop
lock
pusha
xchg
out
sbb
int
shlb
add
cltd
inc
or
xor
push
lods
adcl
mov
rolb
mov
loop
jb
push
mov
fbld
pop
fucomi
inc
imul
pop
rorb
adc
je
mov
popa
lret
cmp
cld
xor
fucomi
sub
adc
aam
dec
cmp
mov
fcmove
mov
or
loop
inc
sti
movsl
pop
fcmovnu
xchg
jno
test
xchg
loopne
cmp
jae
repz
xor
push
xor
movsb
mov
test
or
pop
fstps
and
push
cmp
sub
or
cmp
aaa
cmpl
jnp
cmpsl
testl
push
clc
add
pop
inc
inc
ret
dec
aas
pop
xchg
lret
ja
and
mov
dec
xor
or
xchg
out
sub
fnsave
cmp
xchg
enter
int3
pop
mov
and
pusha
aaa
ljmp
enter
cltd
xor
pop
pusha
fucom
mov
jp
mov
mov
sbb
nop
mov
out
les
mov
mov
mov
mov
mov
sub
rcll
inc
jo
jl
push
mov
mov
scas
ljmp
mov
sbb
mov
inc
cmp
cli
dec
fdiv
sub
jo
repnz
lods
loopne
sarb
xchg
insl
adc
pop
adc
out
cltd
sbb
arpl
pop
cmpsl
jle
fistps
dec
lcall
arpl
cs
mov
xlat
mov
cmpsl
dec
ror
sbb
sub
mov
aad
push
lods
lock
pusha
jno
mov
ret
adc
push
mov
enter
xor
in
and
ffreep
sbb
mov
in
icebp
mov
mov
xchg
dec
lret
pop
fs
adc
mov
cmp
pand
setb
leave
int
stos
add
les
jmp
icebp
shll
jl
jp
dec
out
mov
xchg
push
sahf
jecxz
jl
iret
popa
cld
aaa
jl
popf
dec
and
jmp
lahf
sti
lcall
mov
push
jg
push
jge
icebp
mov
cmp
pop
mov
insb
stc
repnz
jp
lahf
xchg
cmp
sbb
jno
iret
mov
adc
dec
pushf
xor
shll
and
enter
imul
pop
xchg
ljmp
je
in
and
xor
js
in
xchg
ds
xchg
stc
dec
xchg
xchg
stos
push
hlt
push
les
push
lock
xchg
lea
jne
push
push
mov
xor
mov
sbb
push
out
imul
cmp
xor
test
xchg
sbb
xlat
and
fmull
pop
jae
ret
sbb
adc
xchg
sbb
leave
mov
ret
jns
jno
mov
mov
loopne
lahf
or
aad
cmp
bswap
and
rolb
jmp
mov
dec
cmp
mov
adcl
test
and
xor
pop
mov
mov
dec
lret
pop
test
sbb
imul
mov
in
inc
aaa
jnp
dec
popf
xor
or
sub
loope
push
fiadds
out
ret
in
aas
adc
test
fstpl
inc
jmp
push
push
pushf
jmp
jge
dec
cmpsl
dec
je
mov
mov
arpl
dec
leave
stos
inc
ljmp
push
pushf
mov
sti
sub
test
lods
xchg
adc
cltd
das
and
sti
mov
sub
inc
sub
mov
out
je
movsb
mov
jne
xchg
loop
popa
jmp
sub
movsl
jnp
add
into
or
call
mov
pop
add
incb
bswap
sahf
daa
aam
push
mov
add
pop
aam
lret
and
imul
jns
xor
xchg
lods
addb
xlat
add
std
ret
pop
mov
jne
add
add
stc
insb
sahf
sub
shrl
jo
xchg
sub
xchg
xchg
pusha
cmp
test
mov
inc
sahf
sub
sbb
push
cmc
mov
xlat
pop
lds
iret
sti
dec
mov
enter
shl
or
cmp
mov
sbb
addr16
inc
mov
stos
jp
pop
xor
inc
lea
adc
and
add
mov
mov
or
lcall
dec
out
mov
mov
pushf
adc
add
repnz
lea
cmp
out
fs
jg
cli
out
cmpsb
pop
pop
out
out
stc
sahf
loope
mov
pop
dec
scas
insb
iret
stos
cmc
mov
fcmove
sub
jp
inc
sahf
pop
mov
dec
mov
pop
cmc
xchg
loop
adc
int3
pop
adc
aas
mov
stos
sahf
sub
test
dec
aaa
jmp
sbb
mov
mov
movsl
rcrl
test
cli
jne
inc
mov
sub
mov
fwait
dec
mov
jge
fucomip
mov
xchg
fs
cmpsl
sbb
mov
and
sbbl
xor
cmc
aam
sarl
aas
xchg
test
rcll
push
mov
cs
js
jge
jno
push
cmpl
xlat
mov
aaa
adc
in
add
mov
cwtl
das
fcomps
fwait
int
cmp
mov
inc
mov
add
adc
pop
lea
outsb
pop
sbb
test
push
sbb
pop
mov
xchg
jne
cld
mov
mov
call
inc
and
jp
add
test
out
push
jnp
cmp
jae
sub
es
push
call
loope
pushaw
in
mov
push
pop
movsb
pop
dec
cli
lea
dec
movsl
sahf
outsb
push
mov
mov
popf
out
je
lods
imul
xor
clc
pop
xchg
clc
daa
rcll
xchg
dec
rolb
iret
aam
xchg
out
push
dec
adc
mov
mov
clc
mov
sub
pop
pop
mov
das
pusha
in
jnp
inc
lret
xor
adc
mull
add
or
loope
popf
cwtl
loop
xchg
sub
loop
push
cmpb
sbb
mov
mov
cmc
in
push
adc
in
push
fwait
ret
inc
fidivrs
lds
stc
std
dec
sbb
arpl
dec
mov
mov
pushf
ss
stos
aam
mov
mov
adc
jge
pop
mov
repz
pop
int
or
or
cmpsb
adc
data16
xchg
test
cmc
mov
ror
cmp
push
idivl
out
mov
jg
test
sti
dec
sub
lods
add
add
add
mov
jmp
adc
xor
cmp
mov
jmp
addr16
push
nop
ja
addr16
aaa
rcrb
jae
xor
negl
loop
lret
scas
mov
add
mov
outsl
rolb
dec
fimuls
outsl
dec
pop
int
push
adc
out
lea
sbbl
fs
dec
faddl
sbb
sarl
idivl
cmp
or
test
push
inc
mov
pop
inc
dec
jecxz
cld
fsubrl
sbbb
mov
sahf
xchg
xchg
sbb
lret
jge
dec
and
jae
movsb
xchg
fwait
loopne
jb
cmp
pop
fidivrs
imul
cli
lret
xchg
push
add
hlt
xchg
rcrb
pop
fnsave
insb
loopne
sbb
pop
and
jne
stos
mov
dec
pop
sub
adc
lcall
or
jmp
mov
inc
stos
pop
mov
scas
fiadds
in
or
ja
xor
pop
or
adc
ret
add
gs
call
pop
rol
insb
dec
jecxz
icebp
dec
pusha
fstl
jno
sti
mov
into
shll
push
ds
mov
push
cmp
push
jl
icebp
loopne
je
pushf
pop
js
fldenv
mov
lock
push
es
inc
lods
clc
in
in
fcomip
and
or
xor
push
mov
dec
sub
mov
mov
ljmp
push
mov
adc
push
test
jae
mov
jb
ja
aad
and
test
ficompl
or
lea
xchg
lods
mov
adc
ror
jno
jl
xchg
leave
cmc
addb
cmpsb
fcoms
jae
fwait
int
imul
rorl
ds
js
dec
lret
rcr
out
inc
mov
mov
jne
xchg
pop
lds
sub
mov
pop
or
sbb
test
cld
lock
sti
es
mov
sahf
xchg
jne
rclb
ret
es
cli
loop
or
mov
ret
sbb
sbb
test
loopne
or
sbb
mov
adc
std
ret
mov
add
mov
adc
sbb
maxps
arpl
imul
push
hlt
or
ljmp
or
adc
rolb
mov
inc
or
rclb
and
les
imul
add
fwait
dec
fwait
dec
and
or
mov
lret
add
testb
adc
mov
dec
loop
fdivrs
mov
icebp
adc
cmp
mov
js
pop
pusha
add
adc
repnz
cmc
aam
mov
repz
lock
add
cmp
cwtl
xor
daa
test
mov
lods
push
add
nop
in
inc
mov
dec
mov
jmp
jecxz
dec
mov
nop
push
mov
sahf
stos
mov
frstor
lret
inc
movsl
stc
in
out
xchg
inc
aam
repnz
pop
jg
cmpsl
or
fs
or
adc
pop
gs
loopne
or
push
push
in
cmp
mov
cmp
jl
pop
or
cmp
in
push
push
sbb
iret
cmp
fistps
mov
js
dec
dec
inc
inc
jmp
js
mov
out
sbb
movsl
aad
add
out
adc
jge
popf
cmp
cltd
sub
repnz
sub
movsb
mov
cltd
aam
pop
cli
cmp
and
jmp
gs
imul
jle
out
and
adc
lcall
jle
in
xor
add
cmc
add
or
mov
imul
out
sbb
rcrl
es
mov
pusha
sahf
std
push
sbb
push
ja
sub
sbb
rcl
pop
or
fisttps
mov
popf
pop
xor
ficompl
je
cmp
inc
jb
cmp
mov
fwait
out
repz
mov
add
fdivrs
inc
scas
fldl
adc
int
pop
push
imul
inc
mov
and
ror
cld
outsb
or
test
xchg
mov
sub
sbb
stos
sbbb
pop
out
incl
cmpsb
sub
mov
push
out
movsb
jns
les
sbb
sbb
cmc
in
int
and
je
or
jecxz
ret
sahf
inc
fldl
imul
sub
nop
push
pop
ja
xchg
pop
and
stc
lret
sbb
std
repnz
cltd
dec
or
repnz
jle
push
cmpsl
sub
sub
jp
cmpsl
int
mov
pushf
jnp
rorl
outsb
ret
push
clc
in
jno
movsl
mov
add
mov
pop
imul
xor
pop
add
sub
mov
mov
iret
aaa
rorl
dec
xor
cli
cmp
mov
pop
xor
pop
in
lock
pop
pop
inc
cmp
xor
int3
or
pop
test
pop
daa
jle
sbb
xchg
bound
push
ror
mov
push
cmpsl
mov
icebp
test
xor
repz
sub
xor
stc
mov
test
push
fdivs
and
dec
or
movsb
adc
mov
xchg
dec
jae
mov
ja
fsub
cwtl
stos
not
imul
sub
adc
lret
push
push
jo
int
incb
mov
sub
adc
push
popa
cmp
andl
addl
and
mov
push
pop
sbb
mov
xor
cmp
pop
dec
xchg
jnp
out
lret
dec
out
aaa
lock
insl
mov
jno
dec
std
js
test
inc
cli
dec
out
clc
in
out
ret
inc
testb
ret
iret
lods
fcoml
fidivs
xor
sbb
mov
xchg
mov
daa
and
push
aam
stos
xor
sub
cmp
clc
inc
in
xchg
incb
mov
insb
imul
jg
fsubrl
pushf
sar
ret
fwait
sti
test
shll
ja
fadd
xchg
pop
adc
sub
adc
cmp
shlb
mov
add
jg
clc
clc
jno
cmp
mov
push
fcoml
push
inc
cmp
push
mov
fdivs
or
mov
jae
cmpsl
out
packsswb
js
sahf
pop
shll
jb
jne
fs
inc
mov
pop
push
push
and
inc
inc
lret
popf
in
cmpsb
pop
mov
rcrb
mov
icebp
or
into
fldcw
mov
andl
and
outsb
cmc
push
xor
jl
cmp
mov
outsl
dec
cmc
mov
addr16
mov
arpl
sbb
cmp
aam
call
mov
test
fwait
mov
mov
sbb
sbb
push
inc
testb
mov
loopne
sarb
adc
xchg
fabs
inc
jno
cmp
fcmovnbe
mov
daa
mov
xor
add
bound
arpl
jb
pushf
sub
push
sub
mov
mov
push
xchg
movsl
pushf
xchg
adc
aas
rorb
xor
stos
sub
lcall
shrb
fiadds
sbb
pop
mov
xchg
sub
mov
xor
clc
testb
push
addr16
push
insl
jne
pop
lods
mov
mov
rcrb
repnz
xchg
sbb
sti
push
les
adc
lahf
xchg
xchg
mov
lret
push
mov
mov
daa
out
subb
sub
pop
scas
inc
sub
in
push
pop
out
movsl
adc
xor
cs
cmp
pop
inc
ret
push
mov
pop
push
out
xchg
add
lods
in
pop
ret
dec
adc
mov
pushf
and
cltd
leave
pop
xor
arpl
push
out
out
stos
inc
les
push
dec
dec
jg
andl
adc
loope
sub
nop
stos
inc
out
add
imul
fsubrl
out
call
stc
sbb
call
xlat
adc
adc
adc
sub
hlt
add
in
push
jmp
decl
pop
xchg
sar
push
cld
jmp
mov
bound
int
inc
jo
int
xor
addb
out
rcrl
pop
cmp
lret
pop
inc
mov
xchg
in
push
test
insb
sbb
cmc
daa
adc
dec
sub
xchg
fwait
jecxz
pop
push
xorb
push
push
cmc
sub
mov
add
flds
jbe
add
es
dec
jl
push
inc
adc
scas
hlt
out
pushf
pop
jno
jae
and
and
fnsave
pop
push
pusha
push
shll
push
movsl
xor
jmp
sub
add
fstps
lock
inc
add
cmp
inc
pop
sub
add
cmc
std
repz
lods
jmp
mul
outsb
icebp
sti
sub
pop
pop
cltd
cmp
fsubrs
add
aas
mov
stos
pop
lods
arpl
repnz
sbb
cmp
sub
jbe
loop
push
nop
lret
push
fnstenv
dec
push
jns
movsl
dec
gs
jecxz
loopne
mov
push
js
lods
or
jae
mov
jbe
inc
icebp
bound
fwait
rolb
push
stos
inc
movl
lahf
setg
ja
test
out
sub
adc
icebp
cmc
push
dec
xor
jno
xchg
sub
inc
sbb
xchg
and
sbb
cmp
les
dec
icebp
adc
in
push
dec
pop
iret
mov
shrb
lds
jle
je
cmpsb
clc
ss
pop
xchg
push
filds
sub
pop
iret
lret
adc
dec
push
lds
stc
push
push
adc
inc
rol
imulb
dec
xchg
xchg
std
sbb
flds
dec
mov
xchg
jb
sbb
jns
add
add
andl
clc
andl
call
loop
mov
lock
repnz
add
sub
xor
mov
sub
xchg
xchg
aam
mov
bound
dec
sti
and
scas
jle
jecxz
or
xor
or
sub
or
lret
xchg
adc
cmpl
mov
cld
dec
lods
adc
test
sbb
xchg
mov
mov
insb
into
mov
inc
aad
sti
lods
rolb
pop
and
lret
or
movsl
fwait
lods
lret
test
mov
xchg
xchg
mov
lcall
icebp
adc
fildll
cwtl
dec
push
call
adcb
add
repz
adc
mov
sub
outsl
ds
neg
push
mov
ja
xor
adc
pop
pop
inc
enter
out
in
adc
sahf
mov
mov
jl
aad
mov
adc
pop
cwtl
add
add
fsubs
js
out
xchg
aam
test
sub
push
setl
fstps
dec
int3
xchg
sbb
ficoms
bound
shlb
xor
and
cmpsb
adc
push
adc
xor
in
pop
lods
pushf
aad
daa
jns
out
fcomps
iret
dec
ljmp
lret
sub
testl
stc
mov
fsubl
pop
inc
adc
lods
js
mov
mov
xchg
xorb
std
pusha
mov
mov
gs
adc
ret
test
fsubrs
xchg
pop
adc
clc
lea
push
pop
xchg
mov
ffree
out
cli
fistpl
push
out
push
and
cmp
rcrl
push
sti
push
test
les
test
ret
lods
sahf
mov
leave
lcall
mov
nop
mov
jmp
cli
jecxz
rclb
ja
mov
sbb
lea
gs
cmp
mov
push
dec
pop
enter
push
pop
lcall
push
jbe
in
loope
pushl
out
cmc
sbb
je
adc
mull
outsl
dec
cmpsl
sti
js
push
lret
lods
inc
mov
mov
sbb
fisttps
int3
imul
in
das
and
sbb
pop
jecxz
cwtl
mov
les
cli
arpl
cli
dec
xor
inc
ja
or
stc
mov
sbb
pop
test
sbb
jle
xchg
leave
ja
aad
and
inc
movsl
or
fcoms
push
call
mov
loop
imul
xor
lea
lahf
cmp
inc
sbbb
stos
adc
jmp
xor
mov
clc
fistpll
lret
fistl
lods
mov
xor
mov
gs
mov
sbb
mov
jno
mov
push
ds
pop
imul
aas
in
outsl
mov
iret
sub
loope
test
test
fnstenv
adcb
out
adc
lret
les
fsubrs
inc
push
push
add
pop
notb
jl
xchg
imul
pop
sub
outsl
jb
xchg
cltd
jmp
mov
test
push
push
mov
or
sub
pop
aaa
insl
mov
jne
adc
cmp
mov
fstpl
test
jne
mov
push
lahf
clc
or
stos
mov
mov
and
ljmp
out
pop
leave
test
fwait
rcrb
mov
imul
pop
dec
push
jne
jg
mov
add
jns
in
scas
ret
xchg
dec
js
pop
es
jl
scas
sub
push
mov
cwtl
inc
ret
out
mov
cmpb
mov
cwtl
addr16
cmp
ret
in
xchg
js
mov
leave
pop
sbb
xchg
scas
decb
pop
repnz
pop
aas
sub
xlat
pop
int3
in
lock
es
xor
std
roll
cld
push
push
jmp
push
inc
dec
xchg
into
cmpsb
dec
ret
dec
jbe
out
cmp
repnz
jmp
inc
dec
sub
push
pushl
sbbl
jp
les
daa
xchg
lahf
jno
xchg
cs
cltd
sbb
jl
sbb
test
stos
dec
push
js
bound
push
int
test
mov
cmpsl
jecxz
pop
jmp
pop
ljmp
dec
inc
movsb
add
arpl
sbb
or
je,pt
or
jae
mov
sub
stos
int
jl
popa
fwait
inc
call
ljmp
das
cmp
into
mov
pop
pop
dec
hlt
lock
sbb
out
fwait
add
bound
sbb
add
aas
add
test
call
in
shll
cltd
sub
add
int
pop
in
xchg
and
push
xor
add
out
sub
daa
cwtl
jbe
ljmp
mov
xchg
pusha
ret
add
xor
je
cli
loope
push
fists
shrb
pop
mov
pop
mov
addb
mov
cld
and
rorb
lret
loopne
add
stc
movsl
sbb
out
add
jg
call
dec
sub
movsb
test
loopne
push
pop
adc
mov
call
mov
les
adc
xor
xor
cs
sbb
or
fldcw
sbb
mov
in
dec
mov
mov
icebp
inc
adc
adcb
xchg
xchg
test
push
aam
sub
mov
out
outsb
outsl
int
popa
cmp
push
cld
xor
mul
lea
adc
or
faddl
and
xlat
xor
push
dec
insl
cld
mov
xchg
fsubp
sbbb
pop
ss
sarb
out
push
sti
xchg
sub
sub
cltd
push
adc
filds
pop
inc
jecxz
pop
cmc
cld
sub
sbb
hlt
xor
push
loop
pop
inc
inc
push
dec
pushf
fstl
dec
in
rorb
jne
int3
add
gs
jle
xor
imul
dec
or
test
popa
insb
jo
cmp
cmp
jg
popa
jmp
push
mov
hlt
int
push
and
ret
daa
leave
xchg
or
pushf
hlt
clc
inc
xchg
jae
jp
mov
dec
lret
push
mov
sbb
adc
ljmp
ljmp
insb
pushf
enter
loope
roll
adc
push
subl
pop
mov
aaa
pusha
dec
popa
aas
xor
mov
incl
shrl
jne
rolb
jp
or
call
dec
xchg
xchg
jno
push
pop
mov
ljmp
into
dec
add
loopne
into
bound
rclb
stos
mov
pop
in
xchg
mov
adc
movsl
mull
out
popa
xchg
jecxz
mov
popl
stos
fnsave
adc
notl
mov
call
add
int
lea
imull
xlat
lods
pop
push
mov
hlt
icebp
dec
adc
sbb
cmc
fs
test
add
test
sbb
ss
sar
and
insb
hlt
pop
push
lock
daa
movsl
and
pop
fdivr
fistpl
in
out
inc
sub
idivb
sbb
imul
mov
cmp
test
outsb
clc
sti
scas
jmp
icebp
dec
or
xchg
fwait
aad
jmp
sub
stc
adc
push
cltd
repz
fimuls
scas
test
idivb
in
inc
xchg
xchg
adc
imul
lret
cld
jle
cmp
and
inc
push
pop
imul
test
xchg
sahf
stos
ret
punpcklwd
jnp
adc
test
mov
les
aas
fsubl
das
ds
rcll
cltd
push
and
mov
mov
or
aas
jne
sub
jmp
mov
mov
or
mov
imul
subl
in
dec
insl
lock
cmc
icebp
in
inc
cmp
xchg
xchg
fwait
sub
dec
loop
xor
popa
lcall
jb
cmp
sbb
sbb
js
mov
or
jbe
movsl
bound
sarb
icebp
pusha
mov
inc
loop
ret
insb
adc
dec
lcall
pop
push
inc
inc
dec
nop
sub
mov
sbb
leave
sub
lret
pop
xchg
sbb
inc
mov
out
and
call
into
adc
xchg
lahf
xor
sbb
xchg
jmp
fisubrs
add
arpl
shrl
out
jo
daa
cmc
loope
repz
fisubrl
mov
mov
or
pop
pop
inc
xchg
sbb
push
push
pop
dec
cmp
jne
lods
dec
dec
dec
sti
cmpsl
add
adc
call
or
push
or
adc
adc
and
or
imul
repz
dec
or
ds
popf
sahf
push
jbe
jl
sub
cld
add
fadds
stc
shlb
pop
or
add
jp
sub
xchg
cld
jno
add
mov
push
movsb
jo
enter
aad
jl
jae
outsb
xchg
out
jecxz
mov
rcrl
scas
add
lea
insb
push
mov
aad
filds
or
movzwl
out
push
add
out
add
mov
fdiv
mov
mov
jb
lcall
push
imul
inc
mov
mov
in
mov
iret
cld
pop
bound
notl
jle
xchg
mov
loopne
adc
sti
cmp
sar
adc
data16
adc
bound
test
jno
icebp
les
cmp
scas
shr
xchg
stc
jno
xor
or
or
sub
test
xchg
mov
add
lods
imul
pushl
jecxz
out
mov
int3
add
push
daa
mov
mov
cli
push
fldcw
xlat
adc
enter
ret
cwtl
dec
xchg
push
cmp
dec
cmpl
dec
bound
xchg
mov
test
fidivrs
lock
jge
push
je
aad
add
shrb
arpl
aaa
jle
iret
cmpsb
inc
out
cmp
rolb
add
lock
int3
aaa
mov
les
or
idiv
cltd
pop
fsubrs
dec
imul
movsb
outsb
push
loope
dec
pop
les
iret
pop
sub
pop
mov
pop
inc
dec
test
sub
push
cmp
pop
push
push
sbb
cmpsl
push
mov
cs
subb
cmp
idiv
adc
mov
jp
xchg
sbb
lods
xor
dec
pop
cmp
lret
out
lcall
adc
mov
jne
notl
jb
insb
push
dec
fstpt
jl
adc
adc
ret
in
mov
sahf
pop
push
fwait
dec
test
push
mov
cmpl
push
and
mov
push
mov
stos
jbe
out
cmp
movsl
or
dec
ret
xorb
xor
or
aaa
sbb
enter
xor
jbe
push
add
movsl
cmp
pusha
popf
or
int
lcall
rcrb
es
hlt
repnz
or
je
mov
sahf
insl
in
clc
jae
adc
mov
pop
fsubrs
enter
leave
int
add
jle
push
pop
pop
out
inc
aaa
sub
loop
lret
cmp
cltd
jle
dec
cmp
mov
jecxz
push
fidivs
lahf
jo
adc
jle
hlt
add
cmpl
loopne
xlat
mov
pop
jns
lds
cmpsl
cli
mov
leave
movsl
out
ds
jb
mov
out
in
shrb
push
xor
add
sub
scas
or
jmp
adcb
aad
clc
lods
in
sub
xorl
cmp
mov
in
imul
add
and
or
imul
mov
inc
stos
outsb
push
pop
mov
das
mov
mov
decl
pop
mov
mov
xchg
mov
aam
test
jns
dec
mov
dec
fiaddl
cmp
pop
push
sti
jl
andl
or
aas
cmp
hlt
mov
mov
pop
ret
sub
and
cmp
sub
sarb
fwait
call
mov
mov
inc
hlt
push
rclb
cmp
insb
in
or
insl
add
cmc
cmp
sub
adc
jns
test
mov
and
pushl
or
repnz
mov
or
sahf
cltd
loope
mov
notl
cmpsl
add
cmp
outsl
xor
inc
mov
jno
xchg
and
cwtl
jmp
sub
xor
or
daa
rcr
push
out
mov
hlt
pop
dec
nop
xchg
mov
and
aaa
or
popa
pop
enter
sbb
sarb
jecxz
cmp
insb
sub
pop
mov
cmpsb
jne
jno
testb
stc
dec
adc
bound
mov
out
nop
mov
sbb
les
mov
cwtl
xchg
pop
and
mov
and
fisubrl
xor
rclb
aad
mov
mov
add
xchg
mov
insb
mov
jmp
scas
popl
jmp
daa
cs
cltd
push
jne
fwait
cld
cmpsb
push
jnp
pop
jb
scas
mov
jmp
dec
fistpll
movsl
push
imull
fs
cmp
js
sub
lock
bound
aad
push
lods
sbb
gs
in
xor
in
inc
enter
lret
scas
jp
inc
pushf
test
fdivrl
jge
push
mov
sti
sbb
ljmp
inc
fcmove
dec
cld
outsl
push
pop
outsl
push
aaa
jae
mov
mov
sbb
pop
mov
cmc
xchg
popf
lahf
js
jmp
and
cwtl
dec
jns
adc
fadds
jge
mov
xchg
lods
repz
sub
shll
fistps
jg
jne
shrd
popf
sbb
push
mov
pushw
push
dec
mov
popf
loop
pop
test
or
ss
dec
loop
mov
cmpsb
and
sbb
add
repz
sahf
int3
cld
jne
fidivs
popa
lods
das
push
sub
in
movsl
fidivrl
xlat
xchg
sbb
sub
and
dec
and
jb
jle
inc
nop
daa
push
mov
testl
rorl
add
lahf
lods
dec
lret
sub
into
xor
lahf
cld
aaa
cltd
sub
sahf
shrb
lcall
mov
add
in
mov
mov
insb
cmpsb
stc
or
je
dec
in
inc
das
cs
mov
cmp
xor
imul
and
pop
and
add
cmc
push
clc
push
inc
je
mov
mov
mov
sbb
ss
lds
cmp
cmp
ss
ja
lahf
jmp
xlat
ja
dec
flds
dec
sarl
dec
outsl
adc
jg
push
adcl
arpl
lods
cld
add
sbb
call
mov
dec
mov
jge
cmp
clc
lret
es
adc
adc
fucom
push
in
lods
jnp
call
insl
inc
push
repz
cmp
fnsave
js
mov
cwtl
lods
sarl
mov
cmpsl
sbb
out
inc
sbb
stos
pushf
add
jmp
aad
out
repnz
xchg
sbb
adcb
mov
sbb
adc
or
mov
pop
mov
test
jae
aaa
notl
pop
test
ja
scas
inc
shlb
add
push
push
test
in
add
push
rol
cs
dec
push
pop
mov
sahf
mov
push
xchg
in
xor
pop
push
out
xacquire
inc
mov
out
in
xchg
imul
cmpsl
stc
repnz
xlat
xchg
cmc
or
test
test
or
push
lea
pop
inc
iret
and
imul
push
mov
sti
jg
jb
mov
mov
jno
jecxz
mov
jg
xchg
lds
aaa
inc
pushf
std
inc
xlat
in
xchg
ljmp
xchg
int
pop
inc
mov
add
xor
out
xor
cltd
iret
aaa
inc
out
push
leave
mov
mov
leave
and
dec
sar
stos
xor
in
insl
and
outsb
xchg
arpl
stc
lods
and
mov
xchg
scas
movsl
inc
cmp
fimull
mov
repnz
mov
inc
dec
das
out
sub
in
inc
push
gs
pop
jne
lds
shrb
jae
and
sbb
inc
pusha
or
pop
jecxz
mov
lret
xor
hlt
in
lahf
cld
into
out
call
sti
clc
stos
sbb
and
popa
movsl
xor
adc
hlt
rcll
decl
fsubs
xchg
cld
cmp
or
sub
adc
xlat
shll
ljmp
hlt
daa
xchg
fmuls
loop
push
repnz
test
loop
pop
push
or
fbstp
mov
mov
test
pop
and
cmp
data16
mov
das
jbe
mov
popw
out
add
mov
cmp
add
adc
sarl
sub
mov
cmp
mov
int3
mov
inc
or
xchg
mov
je
popf
jle
xchg
es
leave
imul
in
es
mov
ds
and
repnz
daa
sahf
js
mov
push
setg
adc
sbb
or
cltd
aas
cmp
mov
imul
hlt
xor
arpl
popf
xor
sub
pop
insb
lcall
out
inc
xchg
in
fisubrl
adc
int
loop
std
icebp
sub
jecxz
or
mov
sti
mov
ja
fiadds
jb
dec
sub
adc
out
orl
inc
cmp
mov
movsb
popl
shlb
fstl
aaa
pop
push
shlb
push
push
xchg
mov
popa
push
cmp
mov
or
or
je
jg
sub
xor
pop
pop
push
fld
sarb
xorl
out
and
push
adc
xchg
xor
loopne
push
cmp
push
outsl
pop
out
inc
cmp
imul
add
bound
adc
cld
mov
mov
mov
cltd
sub
and
or
lret
popf
xor
fidivrs
or
mov
jmp
outsb
dec
push
ss
dec
cmp
push
dec
inc
adc
inc
sbb
dec
cmpsl
mov
sbb
push
mov
mov
push
mov
in
add
outsb
lods
jne
xor
pop
or
lret
idivl
mov
ret
pop
dec
cmpl
enter
aam
loope
dec
jbe
hlt
fwait
std
popa
scas
push
mov
ljmp
or
dec
sbb
dec
stos
pop
add
mov
push
pop
pop
sbb
add
cmp
in
adc
and
repz
das
mov
dec
fcoml
lods
jno
sub
dec
call
sarb
xchg
dec
test
popa
das
int3
into
popa
and
adc
icebp
add
stc
gs
and
outsl
fldl
mov
sarl
icebp
cmpsl
mov
or
idivb
stc
cli
dec
test
inc
arpl
inc
and
ja
out
mov
and
aas
pop
inc
add
pop
inc
xchg
add
out
add
fdivrl
enter
pop
mov
mov
sub
inc
testl
sub
insb
test
iret
dec
fadd
mov
dec
aaa
pop
dec
pop
imul
jne
mov
imul
popf
cmc
out
fbld
push
call
shlb
pop
xchg
add
mov
jns
pop
dec
dec
test
push
xchg
test
and
imul
cmp
mov
arpl
mull
pop
pusha
mov
or
xchg
stos
in
pop
jno
or
cs
scas
xchg
stos
add
pop
imul
and
adc
mov
in
jmp
or
or
in
loopne
orl
loop
lsl
fildll
in
sbb
fistpll
lret
repz
imul
adc
dec
cmpl
shll
pusha
orb
pushl
or
ss
pop
inc
test
cmp
mov
adc
movsb
or
cmpsl
out
push
hlt
pop
adc
pop
push
mov
icebp
add
push
call
addr16
mov
cmp
xlat
push
inc
sbb
cmc
rcr
sbb
lea
imul
adc
dec
xchg
pop
mov
shrb
dec
fcom
cmp
add
pop
adc
mov
xchg
dec
push
xchg
shll
sbb
andb
in
in
call
mov
mov
test
mov
push
cld
mov
dec
dec
sub
mov
movl
dec
mov
push
loop
pop
dec
iret
sub
lods
lock
mov
ds
notb
add
adc
addl
mov
push
mov
inc
mov
aas
pop
stos
lret
mov
add
aas
out
int3
gs
dec
pop
gs
ljmp
mov
dec
fidivl
add
cli
adc
cs
clc
out
in
mov
outsb
mov
dec
mov
jl
roll
imul
dec
push
xor
xor
mov
loop
jmp
mov
fistpll
cmp
jo
fmul
ret
das
negl
or
jle
mov
inc
mov
or
test
add
js
stos
mov
add
and
test
idivb
or
sub
decl
inc
inc
and
in
mov
aam
pushf
mov
subl
call
fsub
lds
mov
or
dec
xchg
aaa
leave
push
iret
inc
loope
sub
or
xor
or
andb
test
js
movsl
sbb
pop
mov
cmpsl
aam
ja
lret
das
jmp
xchg
push
fwait
cmp
xor
sbb
loopne
js
jecxz
shll
and
push
in
xchg
call
push
stc
mov
jns
fs
cmpsl
inc
mov
lods
and
into
andb
adc
stos
in
sub
mov
pusha
xchg
pop
pop
xchg
outsb
inc
test
ret
or
int
dec
mov
xchg
sbb
or
jecxz
mov
mov
stos
push
pop
enter
mov
pop
ss
popf
call
push
mov
movsb
add
jo
xchg
movsb
cmp
cmpsb
xchg
xor
push
lods
lods
in
push
fucomip
dec
mov
int3
add
inc
push
sub
inc
ljmp
mov
les
mov
mov
iret
pop
xor
shr
lcall
int
inc
mov
cwtl
faddl
jo
push
pop
das
inc
scas
repz
icebp
subl
prefetchw
jg
xchg
lcall
xchg
xchg
mov
ljmp
jg
jb
mov
xor
cmp
pusha
movsb
sbb
cmp
out
movsl
fdivrs
mov
jg
insb
cld
adc
mov
and
mov
jo
outsb
xchg
jae
aam
mov
sbbl
pop
xor
test
jnp
push
xor
mov
and
xchg
add
scas
aam
sub
cmp
enter
rorl
xor
xchg
sub
ss
pusha
sbb
jecxz
notb
xchg
pop
adc
sbb
dec
out
mov
lahf
rcr
fcoms
mov
pop
xlat
lds
jne
sub
pop
cld
xchg
sbb
xchg
in
dec
add
mov
adc
pop
mov
adc
xor
push
dec
sub
and
cli
add
sub
mov
xchg
mov
les
cmp
das
lcall
and
and
jecxz
lret
mov
cli
nop
push
pop
inc
lock
add
xlat
in
cmpsl
jmp
lcall
das
insb
data16
xchg
cmpsb
pusha
or
push
lret
pop
in
aam
push
xor
stos
aam
cmpl
cs
push
xchg
pop
push
xor
add
jb
mov
ljmp
fbld
cli
pop
lahf
adc
jmp
mov
cli
lds
adc
fmuls
lahf
pop
outsl
dec
shll
lock
fsubs
mov
cwtl
les
push
es
jno
pop
mov
mov
cli
sub
xor
jl
mov
popf
add
daa
int3
sbb
mov
dec
push
adc
pop
xchg
in
rorl
jae
xchg
push
scas
shlb
aaa
pop
cld
aaa
mov
cmp
jae
into
mov
xor
mov
pop
pop
adc
leave
or
pop
dec
pop
cmp
mov
pop
pop
pop
pop
fs
mov
arpl
jns
sbb
mov
and
mov
incb
imul
push
nop
out
dec
loop
stos
sub
dec
push
pop
pop
mov
fdivl
hlt
push
xchg
cmp
cmp
lcall
cmc
das
loope
enter
imul
in
fucomi
lea
cmp
ficoml
mov
pushf
mov
add
pusha
jns
jge
mov
cs
xlat
adc
dec
shlb
repnz
jns
cli
pop
lea
cmpsl
test
dec
pop
or
add
pop
mov
aam
adcl
mov
cltd
popf
pushf
adc
jmp
in
push
jae
in
push
cmpsb
inc
or
test
inc
mov
fdivrp
repnz
test
mov
lods
adc
xchg
out
mov
dec
add
movsb
ret
adc
xor
mov
dec
in
mov
lods
icebp
lods
adc
cmp
push
add
mov
jecxz
or
cmpsb
cmp
movsb
xchg
push
gs
ficoml
and
adc
jge
repz
pop
les
push
dec
or
inc
clc
addl
push
enter
ljmp
sub
pop
sbb
nop
jnp
shlb
push
mov
xchg
jno
adc
in
movsl
in
sti
jns
sbb
loop
repnz
mov
pop
out
mov
add
mov
sbb
cmp
icebp
add
enter
xchg
pusha
mov
mov
insl
sahf
and
lods
mov
xor
out
and
ja
push
adc
pusha
xor
fdivr
lahf
rcrb
fidivs
fisttpll
dec
mov
mov
sti
int
cmpsl
es
and
leave
xchg
and
mov
cmpsl
icebp
jl
sar
in
int
mov
mov
or
movsb
fisubrl
lret
cwtl
lret
int3
in
jo
fdivs
push
cmp
sbb
out
out
sub
cld
orb
pop
insl
outsb
rcl
stos
or
insb
mov
fidivs
xor
fs
mov
shlb
roll
mov
xchg
or
imul
xor
sub
mov
or
jnp
mov
aas
test
pop
ljmp
jbe
imul
cmpsb
sub
orb
test
push
sti
and
insb
cmp
iret
and
imul
sbb
fwait
test
jp
mov
sub
adc
push
xchg
lds
notb
sbb
lcall
xchg
adc
cmpl
mov
js
push
adc
jmp
pop
xor
rorb
mov
xor
lret
sbb
outsl
push
imul
pop
pop
jp
fcoms
dec
push
sub
pop
jns
movsb
iret
jnp
js
andl
gs
or
inc
insb
sarb
mov
push
je
mov
test
addw
jb
mov
shrl
add
je
xchg
sub
sub
aad
sahf
popa
arpl
aad
fldenv
inc
push
inc
inc
inc
xchg
mov
lcall
jmp
repz
mov
int
enter
xchg
sub
pop
dec
jne
mov
mov
shrl
in
sbb
jns
std
in
push
mov
je
sbb
imulb
dec
mov
push
and
shrl
push
test
out
sti
loopne
inc
mov
push
jbe
es
inc
dec
ret
xor
js
stos
cwtl
xor
popf
mov
cmp
xor
push
les
clc
bound
inc
enter
push
mov
hlt
test
xor
mov
int
lods
jecxz
mov
fwait
add
mov
mov
es
shlb
stc
cltd
sbb
gs
sub
outsb
sbb
fisttps
call
cmp
add
mov
cmovle
mov
aas
mov
inc
pop
sub
mov
rcl
js
mov
xchg
jge
lds
mov
sub
mov
stos
jne
pop
movsb
fstpt
push
mov
sbb
sbb
inc
mov
inc
cmpsl
mov
or
lds
xchg
das
mov
cmp
popf
xor
xchg
arpl
repnz
add
mov
sti
and
jp
dec
nop
pop
dec
fnstenv
invd
fwait
cmc
lret
aaa
jmp
cmp
ja
push
hlt
mov
push
jmp
sahf
movsl
adc
push
lahf
mov
rorl
jl
dec
lds
fdivr
push
jbe
push
push
adc
out
sub
das
cmp
clc
jmp
dec
daa
mov
and
jne
add
or
and
sub
mov
fsubs
mov
push
cwtl
fwait
iret
jb,pt
and
ja
leave
inc
cmc
or
sub
fwait
sti
out
mov
call
add
repz
lds
loopne
orb
jge
mov
pusha
xor
xor
jecxz
mov
loop
inc
jle
test
push
icebp
fucomi
dec
inc
imul
cs
inc
dec
fucomip
or
sub
es
lock
sbb
sbb
jecxz
push
dec
test
es
ss
adc
add
adc
push
jmp
xchg
dec
popf
mov
es
out
movsl
mov
xchg
sti
decl
jo
or
mov
sub
inc
jp
pop
scas
hlt
out
sarb
aam
pop
or
xchg
call
adc
and
xchg
sbb
cs
pushw
sbb
mov
dec
inc
mov
add
flds
outsl
xor
aam
push
inc
jp
out
ss
push
sti
int3
mov
mov
jmp
idivb
shrb
incl
incb
rorb
out
cmp
mov
jg
xchg
or
mov
pushf
pop
cmp
add
insl
in
pop
xchg
inc
jmp
xchg
cmp
and
iret
out
or
dec
mov
mov
mov
fdivrs
dec
out
push
and
arpl
stos
xor
gs
in
mov
in
stc
bnd
sub
and
adc
movsl
push
incl
je
ret
loop
mov
xchg
push
pop
pop
les
adc
lods
mov
enter
stos
lock
sar
or
es
dec
adc
idivb
jno
andb
cmc
push
xchg
repz
mov
fwait
insb
fdivrs
ret
jne
mov
xor
leave
xchg
jb
sbb
cmc
push
repz
aaa
mov
xchg
sub
sbbl
xchg
sar
sti
ss
and
add
dec
mov
xor
hlt
mov
bound
sub
or
inc
pop
adc
popf
xchg
adc
ljmp
lods
xor
push
adc
aam
mov
sub
xchg
pop
into
jecxz
adc
cli
cltd
push
into
repz
adc
rclb
je
ljmp
imul
loopne
pop
mov
sub
dec
aad
pop
jnp
mov
jl
icebp
popf
das
mov
sti
out
add
add
pop
and
imul
add
push
nop
jae
dec
pop
jo
addr16
inc
cwtl
js
mov
mov
add
sbb
outsl
add
push
or
icebp
cwtl
cld
into
cmp
sti
sub
add
cmp
shlb
enter
lock
mov
pop
dec
insb
idivl
ret
loope
sub
adc
test
sub
ss
popa
outsl
pop
in
add
lret
push
sbb
pop
sbb
push
or
loopne
mov
bound
aaa
insb
divps
cmpb
jmp
shrb
ret
fmuls
jecxz
sbb
idivl
push
mov
cmc
insb
ret
and
leave
add
mov
add
jmp
and
xor
mov
arpl
or
ljmp
ja
cmpsl
and
xchg
push
mov
lock
pop
je
mov
addr16
mov
push
shrl
stc
and
xchg
jo
cmp
mov
sbb
inc
push
sahf
je
test
mov
adc
popf
push
or
popf
call
movsl
adcl
lock
cmp
fwait
xchg
sbb
cmp
ficomps
call
push
mov
loope
sbb
in
xlat
inc
adc
das
xchg
mov
lea
ret
xchg
sbb
mov
push
sbb
mov
into
or
rorb
mov
adc
xchg
sub
inc
mov
pop
je
into
jp
imul
jmp
lcall
xchg
popa
pop
cmpsl
fs
push
dec
movsb
or
jno
mov
stos
ret
sub
cltd
test
xchg
jmpw
scas
bound
push
cltd
nop
clc
outsl
lea
rol
js
fwait
mov
jmp
or
cmc
mov
add
stc
les
lock
or
cmp
insb
cltd
xchg
adc
fisubrs
push
push
lret
lahf
push
dec
cmp
jmp
std
or
int3
int
fcoms
and
push
loop
sub
inc
mov
xchg
jnp
adcb
icebp
leave
dec
jb
mov
fwait
js
sub
jae
lret
dec
xchg
or
cmp
or
pop
and
mov
rcll
and
pop
or
js
pop
sti
fdivs
push
adc
dec
seta
in
dec
inc
mov
je
cmp
add
jae
mov
jg
mov
insl
arpl
sub
or
mov
push
mov
mov
ret
mov
xchg
fdivs
rclb
insb
sbb
insl
and
jbe
es
xor
or
in
enter
adc
inc
fists
clc
sbb
push
test
cmpsl
mov
push
enter
lock
icebp
pop
or
mov
test
orb
and
icebp
fnstenv
data16
cmp
stos
xchg
sbb
push
inc
stos
lret
fwait
cltd
mov
mov
lret
das
sbb
ja
lods
and
lods
jecxz,pn
mov
or
scas
stos
or
jmp
mov
mov
mov
or
dec
out
jmp
insl
mov
popa
pop
xlat
mov
shrb
repnz
or
lods
xor
mov
jb
pushf
xchg
sarl
int3
pop
mov
popa
xor
push
xchg
mov
cmp
or
cwtl
je
adc
or
push
in
push
lods
add
ja
dec
push
mov
out
inc
jo
cli
repz
cmp
pop
ficoms
fdivl
jmp
xor
xor
mov
sub
out
outsl
xorl
cmp
mov
dec
pop
adc
test
mov
xchg
lret
fbstp
pop
dec
cmpsb
ljmp
imul
jge
mov
es
push
sub
int
push
xchg
je
inc
icebp
lods
mov
std
mov
or
fadd
add
jmp
lds
sub
subl
xor
test
fldenv
push
mov
push
mov
jle
out
add
mulb
aas
test
and
cmp
adc
or
shll
push
out
mov
scas
inc
xor
std
imull
xor
xor
enter
lcall
mov
cmp
test
jb
mov
push
cmp
leave
ds
inc
fidivrl
out
xchg
inc
jo
xor
or
mov
fisttpll
rcrb
jl
or
cmp
inc
dec
imul
idivb
imul
push
clc
lcall
adcl
scas
pop
adc
sbb
movsb
pop
scas
push
inc
pop
pushf
xor
stc
sub
add
outsl
cmp
lods
adc
xchg
mov
cmc
push
movsb
mov
cmp
test
mov
xchg
cs
jno
sub
andnps
icebp
int
push
mov
loope
inc
cmc
adc
push
scas
jo
orb
add
and
shrl
cmpsl
in
inc
sbb
fistps
cmp
sbb
push
mov
push
js
adc
cmp
fldcw
xchg
orb
stos
popf
or
dec
mulb
std
mov
sti
mov
ret
jle
mov
mov
mov
xchg
out
pop
adc
ljmp
or
dec
inc
fisubl
pop
loope
add
mov
sti
repz
xor
aam
sub
xor
out
inc
lret
hlt
lret
mov
inc
adc
mov
je
es
pushf
int
addl
out
and
je
inc
aam
loopne
push
jb
push
xchg
and
data16
pushf
add
in
das
sub
pop
cmpl
out
stos
iret
movb
xlat
inc
fdivr
mov
mov
in
cwtl
or
dec
jae
aam
add
xor
jp
mov
cmp
cli
add
mov
add
int3
fidivs
or
push
xor
rep
add
arpl
and
xchg
pop
and
mov
jmp
shll
pushf
xchg
lret
inc
es
mov
pop
push
mov
jb
movsl
fildll
pop
push
mov
ret
sahf
sbb
jle
adc
cmp
inc
xchg
xor
addr16
shll
xlat
and
jno
jbe
mov
or
icebp
pop
sub
in
xor
leave
push
add
inc
mov
test
gs
lods
into
adc
es
and
shrl
aad
mov
daa
mov
adc
call
pushl
lods
xor
dec
xor
test
inc
jo
jle
int3
inc
sbb
mov
inc
sti
out
xor
mov
push
push
pushf
sub
mov
dec
mov
aas
insb
rorl
rcl
lret
loopne
jo
sbb
outsl
lock
and
fdivl
into
jmp
test
mov
int3
fildll
mov
adc
sti
inc
mov
or
repz
lahf
add
sub
stos
fsubr
shl
test
cmp
testl
mov
enter
scas
cmp
repz
pop
inc
lds
inc
shrd
adc
arpl
cmp
jo
out
sbb
ret
inc
std
fsubrl
popf
call
mov
ret
or
dec
xchg
imul
scas
in
aaa
rorb
outsl
xor
movsb
in
pop
pop
mov
test
pop
ficompl
jo
fxch
std
inc
pop
and
push
out
fbstp
lcall
xchg
adc
icebp
cli
jge
adcl
pop
mov
push
data16
sub
insb
sbb
insb
add
mov
dec
clc
out
mov
ret
mov
mov
jmp
lret
jp
cmp
mov
stc
cmp
testb
push
cwtl
fucom
cmp
adc
sbb
psrlw
inc
xor
mov
mov
cli
xor
jne
loop
lods
push
mov
sub
or
orb
popf
cs
mov
pop
test
sbb
mov
push
push
mov
and
int3
negb
stos
lret
xchg
push
xchg
rcl
insb
sub
mov
pop
pusha
jmp
lock
imul
mov
inc
aad
sbb
sub
xor
pop
cmp
pop
xchg
shl
inc
xchg
je
push
stc
xor
or
pop
push
out
jbe
daa
xlat
dec
rolb
jle
push
sbb
cltd
ljmp
adc
pop
aas
mov
fldt
nop
in
loope
cmc
pop
sti
stc
imul
movsl
stc
test
insl
jne
leave
test
jae
shlb
dec
frstor
jmp
enter
push
mov
pop
ja
add
imul
call
lds
dec
test
pop
cmp
push
test
or
sub
rorb
in
xchg
sbb
push
test
jno
push
cli
cwtl
mov
adc
clc
outsb
pop
sub
mov
jmp
lahf
cmpsl
adc
sbb
ret
or
dec
sub
repz
cmp
adc
or
mov
jecxz
fiadds
jnp,pt
cli
mov
mov
mov
test
aam
fists
sub
or
cs
int
and
pop
ss
jg
icebp
jge
and
xor
fstpt
cmp
int
mov
pop
jge
pop
lret
jae
mov
stos
or
sbb
sahf
inc
xlat
sbb
xchg
push
lahf
imul
je
cmpsl
lods
dec
lcall
pop
dec
dec
or
mov
imul
cltd
jecxz,pt
in
scas
xchg
pusha
loop
mov
mov
pop
pop
and
sbb
call
sti
loope
xchg
lret
out
lret
outsl
push
cmp
pushf
mov
mov
aas
out
fwait
test
xchg
xchg
mov
fwait
popf
ret
outsl
cmp
cmpsl
sti
push
aaa
cmp
sub
test
adc
movl
leave
xor
push
and
addb
cmp
imul
in
jl
sbb
stc
iret
out
mov
xchg
outsl
mov
adc
je
pusha
stos
aaa
and
outsl
fistpll
mov
pushf
sbb
adc
out
imul
add
adc
bound
call
add
mov
shll
jo
mov
roll
mov
popf
xchg
sub
jae
ss
ficoml
xchg
sub
int
pop
js
xchg
sub
repnz
fsubr
hlt
mov
daa
sarb
pop
mov
es
sar
fidivs
sub
jnp
loope
fstps
sbb
dec
popa
push
adcb
sub
add
adc
pop
inc
rcl
jnp
pop
pop
js
jo
or
dec
ds
mov
int
xor
subl
push
xlat
pop
testb
push
jmp
lock
and
rcrl
les
add
popf
loope
pop
movl
data16
and
mov
sbbl
mov
roll
push
mov
xorl
dec
cmpsl
lods
fs
mov
push
fmull
int3
mov
pop
or
aad
sbb
xchg
mov
mov
cmp
add
xchg
pop
in
loop
aas
push
shlb
dec
or
xor
jb
xor
cli
ret
xchg
movsl
nop
sti
sub
pop
outsl
xor
dec
sub
jns
fwait
pop
mov
testb
ret
into
xchg
daa
aas
popa
mov
sbb
ficoml
fiadds
mov
xchg
aad
fwait
xlat
shlb
movsl
mov
cmp
pop
out
dec
and
adc
pushf
icebp
cmp
cmp
mull
sti
incb
pop
test
xchg
inc
push
js
dec
stos
out
or
cmp
neg
jg
pop
push
sbb
rcr
into
sub
or
cmp
test
out
or
xchg
arpl
add
dec
shlb
out
in
xor
pop
push
popa
adc
jl
fnstcw
adc
imul
adc
outsl
out
jle
cmp
add
movsl
lock
clc
inc
lret
xor
and
jecxz
xchg
clc
test
jbe
filds
jae
mov
adc
mov
jbe
or
xor
mov
outsb
clc
insl
or
out
nop
lea
push
adc
ds
mov
test
pushf
mov
push
pop
insl
es
pop
pop
jecxz
test
nop
inc
ficompl
adc
hlt
or
popf
adc
insb
stc
adc
xorl
pushf
push
pop
dec
test
jge
shrb
ljmp
movsb
imul
mov
or
ss
addr16
movsb
xchg
jmp
dec
pop
out
into
arpl
sbb
xor
push
mov
shrl
adc
jg
sub
or
and
xchg
mov
cmpsb
mov
push
and
jcxz
mov
adc
arpl
pusha
xchg
mov
push
and
add
rorl
pop
test
sub
inc
int
pusha
jecxz
pusha
push
cli
mov
pop
push
es
lret
cmpsb
cmp
daa
out
xor
or
imul
sbb
mov
jnp
es
inc
ret
xor
je
stos
mov
out
adc
push
push
sti
in
adc
movsb
add
mov
xor
loop
xchg
jae
sub
leave
or
mov
sbb
lea
out
roll
fsts
rclb
xchg
pop
or
adc
nop
imul
test
imulb
add
shrb
and
xor
ret
fbstp
jo
scas
sarb
push
sarl
aaa
jmp
add
aam
add
push
test
imul
add
sarl
adcl
add
and
shll
lea
loope
adc
mov
sti
mov
rcl
scas
fistpl
mov
jge
jle
les
dec
mov
cwtl
scas
call
imul
mov
jge
pushf
das
or
pushf
fsubp
inc
fisubrl
jne
sbb
loope
jg
adc
jl
inc
je
cs
loope
mov
mov
outsl
or
mov
lock
inc
pushf
dec
or
lret
adc
pushw
in
into
or
cmp
sti
lods
and
xor
repz
js
aaa
lock
pop
fimuls
adc
cs
js
push
xchg
or
adc
cs
nop
jle
adc
inc
out
loopne
mov
test
adc
test
cltd
lock
nop
aaa
movsb
movsb
enter
test
xor
lcall
jno
jecxz
rclb
popa
cmp
mov
xchg
cmp
mov
out
cmpsl
push
dec
lcall
jo
pop
xchg
lcall
cltd
outsl
mov
xchg
xor
ljmp
ret
cmp
lods
push
mov
jmp
pop
xchg
cmp
xor
je
cld
push
mov
sbb
lret
xor
mov
xor
adc
dec
xchg
sub
jmp
mov
insb
push
and
xor
xor
mov
push
add
mov
sub
mov
dec
jecxz
sbb
lret
gs
ja
rep
xchg
pop
and
cmp
jb
xchg
jp
jns
ret
inc
mov
jg
mov
cmp
adc
je
aas
push
push
inc
sub
sub
andb
iret
push
sbb
jmp
xchg
arpl
pop
rcrl
fsubrl
into
mov
jbe
loope
out
mov
or
stos
xchg
ds
flds
cli
jnp
leave
inc
in
mov
add
mov
pop
xchg
popa
pop
outsl
add
jle
jl
outsl
or
pop
xchg
fstl
outsb
pop
ret
int3
or
int3
inc
fs
jecxz
push
in
fst
mov
add
lds
dec
lret
sbb
pushl
into
add
rorb
dec
stos
xchg
shl
cld
enter
adc
addb
add
xchg
out
inc
mov
clc
cli
sbb
cli
sub
popf
jg
jle
faddl
push
aaa
mov
daa
inc
or
jae
cmc
sub
xor
loopne
mov
cmpsb
ljmp
inc
inc
arpl
push
push
shrl
and
adc
mov
test
mov
inc
xor
mov
mov
push
inc
stos
and
and
lock
sub
sbb
imul
mov
mov
xchg
out
xlat
mov
into
fbld
jmp
stos
inc
sub
pushf
jno
mov
subl
xchg
test
dec
cmpsb
jns
mov
xor
mov
inc
push
cmp
dec
popf
test
mov
fnstcw
loope
pop
mov
adc
stc
inc
adc
xor
adc
push
orl
outsl
or
mov
bsf
xor
xchg
cmp
sbb
rcr
js
and
jmp
mov
adc
mov
mov
aaa
mov
adc
mov
sbb
add
test
loope
jb
cltd
cmp
jb
xchg
aam
lret
clc
xchg
sbb
xchg
mov
xchg
imul
jl
cli
sub
mov
outsb
bound
sbb
jno
pop
add
fstpl
mov
leave
adc
sub
lret
call
mov
add
mov
in
and
add
mov
sbb
mov
cmpsb
jecxz
add
movsb
shll
sahf
mov
xchg
arpl
sub
out
js
or
call
cwtl
sbb
loopne
xchg
cmp
push
push
dec
ja
xchg
and
sub
lock
addr16
sbb
xchg
mov
add
jl
xchg
dec
icebp
dec
ss
sub
repz
iret
hlt
sahf
inc
fisttps
or
cmp
aam
mov
loopne
add
and
inc
cltd
inc
out
pop
imul
cmp
mov
test
subl
imul
int3
pop
bound
cs
xor
shl
dec
push
jno
popf
inc
mov
addr16
mov
jo
cli
and
mov
aaa
test
xor
leave
je
xor
xchg
lds
aas
sar
push
xor
mov
xor
divl
mov
sti
xchg
daa
mov
int3
ret
addb
cmp
push
push
or
dec
cmpsl
inc
mov
sub
inc
jle
or
das
mov
popf
ds
dec
fistpll
add
adc
sub
xor
or
mov
jecxz
xchg
sub
lock
xchg
movsb
add
cli
dec
sub
jecxz
xor
rcrb
or
sub
pop
ja
xor
ss
mov
xor
cmpsl
xchg
dec
mov
push
mov
push
sbb
imul
in
mulb
lock
test
jp
cmp
pop
outsb
xchg
cmp
into
jno
cmp
inc
aaa
add
je
pop
jae
fldenv
push
adc
test
in
inc
cmp
je
lock
jge
das
cmc
adc
inc
lret
ret
pop
mov
sti
lcall
xchg
mov
ret
add
imul
fists
lock
aad
push
fwait
jbe
test
aaa
setnp
movsl
test
cmpsb
add
loopne
sbbl
mov
push
pop
cmpsb
ds
cmpsb
mov
sub
inc
inc
enter
fnstcw
nop
cmp
roll
cmp
xor
insb
stc
insb
add
shll
or
lcall
into
ja
mov
scas
aas
mov
fidivl
sub
cmp
jle
ljmp
add
adc
imul
movsb
mov
call
gs
push
cwtl
scas
mov
add
mov
sbb
test
lods
inc
mov
mov
mov
repnz
or
lret
xchg
lods
adc
add
insb
sahf
cmp
xchg
idivl
fwait
and
ret
jmp
outsb
xor
and
xchg
xor
sub
popa
dec
ds
outsl
pusha
imull
xchg
and
jg
sbb
push
xchg
sbbl
mov
imul
call
pop
adc
out
xorb
outsb
mov
dec
mov
sahf
add
cli
mov
mov
xlat
push
btr
xlat
xchg
mov
push
push
out
jecxz
jp
lcall
cmp
pop
push
clc
cmp
shrl
cmpsb
sub
xchg
jno
push
lret
cmp
adc
je
frstor
jne
fistpll
xor
es
ficoml
mov
xor
movsb
add
or
and
nop
mov
mov
inc
or
pop
ret
in
flds
or
aam
stc
js
ficomps
cmp
mov
or
fs
add
mov
insl
cmpl
adc
push
jbe
std
popf
test
das
inc
sti
adc
mov
sbb
popf
cmp
stos
pushf
cmp
loop
fidivl
orb
insb
xchg
jg
or
mov
arpl
and
or
mov
pop
or
xchg
pop
pop
xchg
int
inc
aas
jp
daa
in
or
dec
xchg
lret
adc
sub
rcrl
addr16
inc
stos
rorl
ret
mov
sti
cmp
push
fadds
inc
fiadds
jbe
pop
inc
inc
mov
mov
push
xchg
jns
xor
cmc
int
je
add
fs
jmp
cs
bound
ljmp
mov
mov
lahf
pmulhuw
call
mov
insb
push
adc
fsts
add
or
jae
ret
rol
movsb
ds
push
dec
adc
cmpsl
in
daa
jae
pushf
addb
xor
enter
mov
mov
xchg
adc
push
das
or
enter
jmp
cmp
pushf
add
fstl
popa
inc
jae
insl
jns
fcmovnbe
pop
shll
icebp
roll
mov
in
push
mov
fistl
jns
mov
and
lds
and
jb
addr16
dec
adc
iret
lods
in
pop
dec
popf
aaa
pop
pop
inc
xchg
in
pop
mov
shlb
dec
bound
or
nop
rep
fdivrl
fsubp
lret
cmp
pop
pop
gs
push
mov
data16
xchg
insl
mov
and
scas
data16
lods
cmp
dec
lock
pop
enter
mov
stc
adc
jecxz
loop
inc
rorb
xor
into
push
and
or
push
jle
inc
xchg
out
push
pop
jmp
jmp
in
repz
dec
mov
sub
das
xlat
inc
mov
push
push
jnp
pop
outsb
scas
dec
inc
cld
mov
pop
cld
scas
add
mov
push
arpl
dec
xor
loop
repz
push
out
into
int3
sbb
sbb
push
repz
lods
cltd
push
stc
loopne
lret
and
lret
pop
call
mov
or
push
or
gs
mov
pop
jmp
push
mov
mov
les
or
mov
in
dec
adc
arpl
sbb
xchg
mulb
cli
jns
or
and
sub
cmp
fcoms
inc
xor
bound
jne
pop
xor
sbb
jns
repnz
test
inc
jns
repnz
or
gs
or
lahf
arpl
out
mov
mov
mov
pop
jg
aam
jge
and
mov
xchg
push
lods
mov
and
outsb
pop
adc
addr16
xchg
cwtl
xchg
mov
lea
faddp
insb
in
dec
mov
repnz
mov
gs
mov
imul
add
xchg
mov
mov
cmp
std
rcrl
sbb
rorl
sub
add
loope
test
xor
cwtl
xor
cmp
out
push
jp
fadds
jecxz
xlat
mov
sbb
add
cmc
pop
cmp
push
test
xor
enter
fsubrs
ret
adc
add
cmp
rorb
gs
xlat
lock
mov
dec
jl
pop
in
mov
add
xchg
mov
inc
gs
pop
sub
test
mov
inc
push
dec
lahf
scas
into
cmp
jmp
movsb
adc
lods
in
adc
fcoml
loopne
loopne
outsl
jae
sbb
mull
xor
dec
xchg
or
push
sub
push
mov
imul
fsubr
dec
dec
push
xor
cmc
aas
into
sbb
bound
fs
aas
test
int3
stc
loopne
imul
out
and
sbb
sub
mov
xchg
jle
mov
aaa
mov
cmp
mov
data16
test
mov
pop
adc
and
sbb
mov
xchg
test
jmp
clc
insb
jae
stos
sub
lea
ficomps
bound
dec
or
cmp
push
inc
das
jle
adc
ja
dec
mov
mov
jno
daa
jno
ret
loopne
fsubr
pop
aam
fsubrl
jne
inc
push
inc
aam
mov
loope
jg
push
scas
aaa
sub
sbb
lret
add
scas
mov
inc
lcall
push
jmp
loope
add
test
sti
call
mov
scas
add
outsl
ret
dec
data16
icebp
fldl
sbb
pop
fstpl
lret
repz
jb
aad
or
add
cs
repz
pop
add
adc
popa
lea
call
pusha
mov
rcll
mov
test
dec
sbb
add
movsl
sub
data16
sub
add
jg
stos
push
mov
xor
jg
js
inc
jmp
mov
movsb
imul
hlt
pop
sbb
mov
pop
pop
cwtl
xlat
jge
repnz
mov
sbb
cltd
jns
mov
sbb
inc
sub
outsl
sbb
add
test
loope
into
ret
sub
loopne
and
cs
jae
mov
je,pt
nop
cmpsb
push
aas
into
pop
jle
popf
jecxz
xorl
ss
les
dec
cmp
test
mov
lods
lea
das
xor
sbb
xor
fbstp
mov
sub
push
push
mov
cmp
ljmp
aad
pop
movsb
jecxz
ljmp
dec
rorl
mov
and
data16
and
push
lods
or
lahf
jbe
xor
cs
fistps
fwait
jbe
jmp
xor
fadds
ja
add
pop
aaa
or
adc
mov
xchg
cmpsl
out
lods
add
fs
and
fcoml
xchg
shll
mov
outsl
xchg
cwtl
jns
add
fistps
outsb
es
adc
mov
xchg
subb
pop
out
lock
and
or
idiv
daa
inc
subl
sub
mov
cmpsl
jo
bound
fwait
insb
leave
inc
lret
dec
lods
inc
or
test
data16
in
popa
xor
mov
or
movl
mov
roll
jmp
repz
push
jl
sbb
pop
dec
push
pop
lds
and
negl
pop
push
cmp
cmpsl
or
outsl
shrl
test
add
sub
test
loop
xchg
inc
cmp
in
xor
push
adc
ret
xchg
sub
mov
push
stos
jbe
decl
push
xor
mov
sub
mov
push
inc
data16
popf
enter
mov
movsl
push
jp
pushf
inc
add
xchg
jmp
push
jg
dec
or
loop
movsl
mov
call
mov
test
mov
push
clc
jp
dec
xor
insl
nop
add
or
adc
and
into
adcb
in
adc
in
stos
movsb
cld
in
jg
imul
or
pop
gs
or
ret
insb
repz
mov
stc
inc
dec
push
ret
cmp
xchg
dec
pop
sub
lods
xor
push
pop
inc
pop
std
outsl
push
xor
mov
fisubl
and
cmpsb
inc
movsl
dec
dec
pop
sub
outsb
outsl
pop
mov
jmp
adc
lods
ret
rcr
and
movsl
orl
jne
mov
fnstsw
xchg
test
les
xor
pop
and
in
push
in
pop
sahf
fnstsw
sub
mov
test
pop
iret
loope
rclb
xchg
scas
inc
push
arpl
or
pop
in
pop
inc
inc
xlat
data16
loop
aas
lret
call
xchg
dec
mov
loop
bound
dec
and
push
jp
shll
pop
lds
imul
popa
fstpt
or
inc
ljmp
outsl
sub
and
sbb
mov
push
test
sub
subl
and
cli
ret
jmp
jno
xchg
mov
or
test
sbb
pop
cltd
mov
pop
lock
decl
xchg
add
lods
jb
push
in
adc
ret
sbb
cmp
sbb
aam
rolb
mov
pop
fldl2e
add
jb
icebp
sarl
pop
mov
rcr
ljmp
jecxz
jo
fbstp
add
jecxz
in
push
jg
je
les
cltd
and
push
ja
scas
and
daa
xchg
aad
cmp
jnp
push
test
cmpsl
cmp
fnsetpm(287
out
nop
rcll
pop
dec
mov
aas
sub
int3
sub
xor
mov
lret
andl
mov
jmp
push
jg
dec
inc
gs
mov
cld
into
scas
jl
mov
dec
xchg
ror
aaa
testb
and
lret
repnz
mov
clc
aad
xor
sbb
lret
stos
ss
dec
jmp
subl
push
ss
xchg
jg
scas
mov
push
cmp
aad
xlat
mov
or
push
popa
in
cli
or
mov
or
ds
mulb
mov
xchg
ret
or
xlat
repnz
jg
ret
pop
pop
sub
mov
jbe
sub
mov
divb
xor
sar
and
cmc
imul
adc
xchg
fisttps
mov
dec
mov
mov
mov
jo
dec
fbstp
dec
add
xor
mov
call
xor
cmp
and
cwtl
cmc
adc
insb
or
sub
mov
stos
adc
mov
pop
mov
mov
mov
testb
cmpl
imul
test
mov
mov
push
cmp
fsubrs
add
inc
push
xchg
aas
test
pop
sbb
add
ret
dec
call
gs
imul
mov
and
cld
jo
push
dec
shr
sub
pop
lock
loop
sbb
je
mov
andl
or
movsb
cld
clc
and
push
mov
pop
dec
inc
pop
jmp
pop
jbe
icebp
cld
pop
and
daa
lcall
in
or
push
lret
or
in
push
or
insl
outsl
or
aad
add
out
popf
inc
cmp
xor
sbb
out
pop
push
test
dec
orb
pop
fwait
movsl
or
scas
cmp
movsl
addr16
mov
les
jae
mov
not
aaa
xor
ds
and
mov
pusha
push
mov
push
xor
cmc
cwtl
push
inc
rcrb
imul
adc
and
mov
popa
mov
outsl
xchg
pushf
adc
mov
xor
inc
pop
or
out
mov
cmp
adc
or
in
imul
xor
xor
scas
add
test
ja
mov
lahf
in
cmp
xchg
add
push
lods
aam
bound
pop
xor
hlt
test
nop
or
mov
sub
push
aam
sub
cmp
ret
cmp
xchg
aaa
pop
pop
into
sbb
andb
lcall
ljmp
add
cld
into
sub
int3
xor
sbb
inc
lea
jg
scas
jecxz
mov
fbstp
or
pop
fdivl
pop
xchg
rcl
xlat
clc
mov
sub
fcompl
outsb
cli
jg
cmp
aaa
mov
shlb
sub
mov
cmp
movsl
sub
jg
mov
or
mov
gs
mov
popf
push
aad
aad
lea
or
imulb
mov
sbb
data16
fs
out
sar
aas
ja
jb
mov
cmp
sub
cmp
add
inc
fmull
mov
dec
imul
fsubl
xchg
or
pop
cld
aam
sub
inc
mov
or
adc
pop
arpl
dec
cmpsl
or
xor
ja
sbb
sbb
pop
loopne
adc
jns
inc
cmp
add
inc
pop
cmp
dec
scas
call
inc
fildl
push
enter
ljmp
or
rcr
or
adc
xor
xchg
std
lret
cmpsl
and
push
dec
popa
xor
xor
cmp
rcrb
imul
jo
das
addr16
adc
sahf
mov
xchg
popf
xchg
repz
xchg
sbb
cld
mov
inc
inc
scas
cld
dec
insb
pop
ret
xchg
push
stos
jae
call
or
pop
clc
mov
iret
fiadds
lods
lods
pop
adc
test
mov
je
xor
pop
inc
mov
fidivs
mov
jmp
cmp
fldl
andb
inc
pushf
ja
jo
sbb
add
pop
idivl
push
stos
das
push
pop
lea
ret
xlat
mov
imul
mov
in
mov
jno
loop
loop
push
mov
xchg
sub
lret
lret
lock
adc
push
xchg
mov
mov
dec
pop
xchg
dec
sbb
and
push
xchg
mov
cmpsl
push
or
icebp
loop
sbb
xchg
lret
mov
lcall
sub
mov
aaa
mov
push
cmp
aam
mov
stos
lods
sti
clc
mov
or
bound
fisubl
jecxz
jmp
movsl
xchg
clc
clc
xor
mov
fs
add
cmp
sub
fldcw
rcrb
xchg
xor
rcr
xor
gs
jg
stos
sti
aad
outsb
jge
sub
lahf
adc
mov
scas
lea
push
bound
inc
outsl
sahf
mov
popa
arpl
add
mov
fadd
lock
test
push
enter
lcall
iret
inc
push
repz
clc
dec
dec
lret
push
mov
dec
pop
sbb
cmp
xchg
and
in
divl
shlb
loop
mov
lahf
out
icebp
mov
in
js
lcall
and
dec
cmp
add
or
sub
fdivs
push
std
cmp
lods
jge
sub
inc
push
fwait
jno
addr16
pusha
jl
dec
inc
mov
test
rolb
pop
lahf
xchg
add
movsl
inc
mov
cs
les
dec
ja
jmp
fidivrl
push
lods
movsl
and
mov
cmp
imul
push
sbb
inc
in
insl
bound
fidivs
cmpsb
shlb
jno
push
jg
push
adc
jnp
cwtl
aam
int3
jg
aas
mov
pushf
lds
pop
scas
cmp
cltd
push
into
movsl
rcrb
in
idivb
sbb
sbb
mov
cld
mov
int
out
insb
pushf
stc
xor
or
dec
xchg
push
pop
xor
jns
cmp
fisttps
aad
sbb
idivl
sub
mov
sbbl
add
adc
ffreep
sbb
adc
mov
xor
and
fldcw
xchg
or
mov
sub
pop
in
bound
shll
out
aas
fsubrs
and
pop
and
cs
notl
in
cmp
out
xchg
push
xchg
lahf
sahf
and
cli
sti
setns
dec
add
jno
lea
inc
sbb
and
hlt
mov
push
cmp
iret
je
pop
inc
mov
sub
adc
mov
push
mov
scas
mov
ret
out
jo
xchg
and
clc
and
sub
out
and
xchg
outsl
push
fwait
idiv
push
xor
mov
adc
mov
push
andl
jmp
subl
out
sbb
pop
insl
and
cmp
out
aam
pop
adc
andb
fwait
cmp
outsl
and
mov
imul
mov
cmc
pushf
adc
das
shlb
sub
enter
das
sbb
sub
mov
or
adcl
mov
mov
cmp
xchg
xlat
fmul
shlb
addr16
jbe
stos
inc
mov
pop
das
out
mov
or
inc
loopne
sbb
or
mov
mov
push
mov
cmpsb
jg
mov
jae
pop
pop
cmpsb
mov
add
rcrl
push
pop
cmp
push
push
mov
in
stc
nop
mov
ljmp
imul
loop
popf
sbb
call
xor
in
mov
fistl
cmp
and
inc
mov
fbstp
lds
xor
push
jno
add
and
xchg
ret
push
sahf
out
addr16
out
mov
cmc
mov
movsl
jg
ljmp
mov
push
cmp
lods
shrb
stos
jge
and
ljmp
mov
fs
push
jb
loop
jbe
adc
jle
bound
push
das
add
sti
sub
fcmovb
call
fsubrp
pop
aaa
cmp
lret
lahf
lods
xor
dec
imulb
pop
dec
rcrl
xchg
mov
jg
rcrb
pushl
push
jno
fwait
push
jmp
mov
xchg
scas
rcr
and
dec
inc
leave
jo
sbb
js
lcall
and
inc
mov
call
dec
jns
pop
fldenv
xor
scas
out
mov
cmp
xchg
jg
add
mov
in
mov
pop
xchg
sbb
cmpsb
daa
jmp
loop
and
lahf
cmp
mov
fisubrl
outsl
jecxz
aas
scas
aas
stc
pop
hlt
iret
xor
scas
imul
pop
arpl
inc
xchg
and
jae
movsl
dec
mov
add
stos
mov
mov
xor
jmp
mov
mov
sub
sub
jbe
rolb
push
pop
xlat
sbb
adc
jb
pop
mov
clc
xchg
mov
jo
inc
das
imul
sarl
mov
sub
jecxz
stos
pop
shl
sbb
jnp
inc
sarl
sub
jg
popa
loop
das
xchg
notl
adc
sbb
jo
mov
sub
pop
sti
js
push
add
addb
cmp
sbb
fisttpl
cmpsl
hlt
or
addr16
sub
ficoml
int3
push
paddusw
lods
data16
int
xor
push
mov
push
push
scas
inc
sbb
stos
loop
imul
mov
lret
cmp
jb
and
or
push
fistpll
push
insb
andl
push
hlt
sbb
pop
sbb
pushf
aas
ss
ret
sbb
push
cs
jecxz
popa
add
or
lahf
and
lods
and
jmp
sub
aad
cmp
add
xchg
cmpsl
dec
pushf
cs
add
iret
sbb
scas
xor
data16
jecxz
jb
fsubrl
mov
mov
inc
insl
mov
out
mov
cmp
mov
ficomps
cwtl
jne
leave
imul
add
jno
out
adc
pop
xchg
mov
lret
adc
jns
dec
test
enter
scas
add
xor
sbb
mov
inc
loopne
mov
dec
add
ljmp
shlb
xchg
xor
aas
lods
pop
jge
xchg
lret
sti
and
jno
jg
xchg
pop
xchg
dec
arpl
and
dec
sbb
imul
cmp
popf
cwtl
pop
lret
clc
pop
std
test
ljmp
or
in
scas
lods
push
jno
adc
xchg
mov
and
lret
push
fisttpll
pop
icebp
dec
jecxz
loope
addr16
out
cld
sbb
sub
sbb
xor
mov
pop
int3
ud1
lret
or
les
add
pop
cli
mov
inc
fsts
pop
dec
repz
cmc
sbb
stos
in
sbb
add
pop
add
push
and
push
pop
insb
jnp
mov
adc
ljmp
out
jb
push
dec
js
fidivrl
imul
lods
popa
add
mov
pop
outsb
ds
scas
aad
orb
mov
cli
cmc
jmp
jae
push
adc
out
in
push
fistps
inc
loope
sbb
in
jb
cmp
sub
out
cmp
inc
push
dec
sbb
ret
orl
sbb
decb
fdivrs
inc
arpl
cwtl
iret
pop
fdivs
lds
aas
pusha
adc
push
es
mov
int3
lods
into
add
pop
and
outsl
imul
mov
ja
mov
cmp
or
out
push
cmp
pop
outsl
inc
mov
and
adcb
mov
lahf
push
leave
mov
add
push
shr
add
shll
sub
repz
cmpsb
aam
inc
mov
mov
cmpsl
push
inc
popf
sub
test
sbb
mov
push
shl
adc
call
shrl
mov
cli
notb
jae
push
jg
mov
into
xchg
jg
fwait
bound
jge
xchg
sub
ds
rcrb
mov
sbb
loop
push
push
roll
push
inc
data16
les
pop
sbb
mov
loopne
sar
dec
test
test
cmp
sbb
sbb
cmp
push
push
out
xchg
mov
pop
fldcw
mov
dec
cltd
test
fcompl
test
pop
in
rcrl
push
ja
out
ds
cld
adc
inc
mov
dec
mov
enter
popa
gs
xchg
sbb
popa
std
dec
mov
orl
cltd
imul
lods
cmp
rcll
or
pop
mov
test
push
scas
or
fistps
mov
imul
pop
push
ret
inc
out
lock
sub
into
mov
cli
pop
sbb
int3
andb
in
adc
ss
pusha
imul
and
aaa
push
dec
jl
sbb
mov
out
adc
fyl2xp1
rcl
cmp
pop
popa
lret
lahf
mov
repnz
jl
in
pop
adc
test
jmp
rcl
popl
dec
in
push
xchg
ror
mov
lds
std
bound
push
or
imul
mov
pop
iret
arpl
out
push
push
adc
lock
sbbl
imul
int3
pop
rep
jecxz
or
fstl
push
xor
pop
dec
jl
pop
pushf
leave
dec
orb
inc
repnz
mov
jns
adc
jp
pop
sub
incb
lret
sti
mov
imul
pusha
icebp
adc
sub
cmp
inc
lret
push
jl
js
adc
test
jp
xchg
rorb
ret
in
inc
sti
dec
lods
fadd
inc
jl
scas
dec
mov
addr16
out
jbe
imul
mov
push
mov
bound
xor
mov
dec
xor
inc
and
mov
movsl
aaa
inc
repnz
fucom
push
in
loope
xchg
lahf
addl
cmp
xchg
mov
je
dec
mov
lahf
mov
scas
jns
jns
shrb
pop
mov
out
pop
dec
mov
xchg
or
pushf
dec
int3
mov
ja
cs
and
push
js
frstor
mov
ja
data16
mov
mov
adc
cmp
cwtl
rol
mov
push
mov
stos
insb
lcall
pusha
cmp
adc
je
add
jb,pn
cwtl
imul
cmpsl
pop
push
cmp
and
mov
negl
enter
mov
and
imulb
out
sahf
rorl
sub
fs
mov
insb
aam
jge
aad
ja
xor
ss
bound
jl
repz
mov
mov
inc
xlat
lock
fwait
insb
cmp
adc
icebp
pop
js
test
sbb
jnp
aad
adcb
xor
int3
popf
pop
cmp
les
in
cmp
gs
ljmp
adc
sub
fadd
mov
jge
cmpb
and
mov
bound
pop
push
add
or
sbb
in
cs
shr
pop
fwait
and
test
cli
sub
fsubrp
mov
jp
loope
arpl
push
cs
out
sbb
out
mov
cmc
lods
add
sub
btc
xor
in
push
mov
inc
mov
imul
inc
xlat
lods
icebp
jmp
icebp
nop
jnp
cs
sbb
or
clc
push
fs
cltd
or
insl
xchg
ds
or
imul
jo
cmpl
inc
sarb
cmpsl
fs
aam
pop
sub
mov
push
pop
push
or
das
inc
dec
jne
jae
inc
mov
or
lret
adc
outsl
cwtl
es
cld
fildll
inc
rclb
xor
mov
xor
xchg
pushf
pushw
sub
push
dec
fists
sub
cmpsb
adc
push
push
jnp
int3
cmp
mov
push
sar
sub
js
jecxz
cmp
std
js
pop
sbb
imul
pop
js
imul
jecxz
cmp
sub
and
mov
lds
cmp
add
or
xchg
or
xor
test
testl
xchg
adc
xlat
in
xchg
inc
pop
fdivrs
xor
dec
stos
inc
hlt
arpl
xchg
scas
or
insl
pop
pop
jo
jae
out
pop
in
aaa
push
adc
xchg
or
out
dec
mov
push
xor
cmp
scas
mov
out
fcomp
adc
jns
jno
lds
mov
mov
xor
aad
and
xchg
sbb
fucomp
std
js
jle
lret
int
dec
int
xor
lcall
ja
and
mov
ss
clc
jl
adc
lock
inc
or
adc
jmp
push
rcrl
roll
pop
negl
out
or
shrb
pop
mov
repnz
add
xor
cmpb
fbld
cmp
push
bound
adc
cmp
test
pop
pop
and
lock
dec
adc
mov
inc
adc
add
hlt
mov
jg
xchg
mov
xchg
jne
and
adc
xor
sahf
out
push
lcall
sub
testb
stos
xchg
push
xchg
lcall
cmpsb
mov
pop
or
imul
imul
in
dec
icebp
fdivl
dec
lods
ja
or
rorb
insb
mov
add
orb
adc
out
ret
lret
hlt
sub
push
xchg
shll
ljmp
mulb
test
aas
pop
es
add
dec
mov
fisttps
nop
pop
stos
add
int
gs
xor
xor
mov
movsb
dec
nop
ds
popa
pop
addb
pop
testb
out
test
xlat
aad
push
push
dec
cmpsl
fdivrl
adc
xchg
mov
out
pop
push
push
pop
jnp
pop
in
int3
xor
lea
sti
push
dec
mov
cmpl
cmp
sbb
mov
stos
mov
pop
jge
lcall
call
lret
pop
xor
cmpb
xchg
push
push
or
sub
scas
pop
and
test
pop
ja
mov
pushaw
xchg
daa
sub
in
repz
mov
mov
mov
out
sub
or
mov
xchg
cld
lods
and
mov
pop
mov
adc
jae,pn
jg
and
or
aad
dec
mov
ljmp
movsb
xor
hlt
jp
inc
pop
cld
jp
fstp
and
cmp
iret
adc
sbb
roll
push
jmp
shrl
and
aam
sbb
movsl
mov
repz
fiadds
or
movsl
pop
and
sbb
jmp
and
in
sub
insb
xor
sub
decl
jnp
mov
mov
xchg
or
in
dec
xchg
xlat
sub
pop
add
mov
xor
outsb
inc
repz
xchg
inc
out
shll
in
je
imul
push
pop
fsubl
mov
into
lods
leave
jmp
out
lds
mov
xchg
pop
xchg
sahf
inc
enter
rolb
inc
mov
mov
fwait
xor
lods
push
inc
xor
outsl
sbbl
jle
pushf
adc
ds
repnz
adc
push
mov
mov
bound
cmc
push
scas
aad
sub
push
into
rclb
and
cmp
pop
outsb
ss
lods
mov
jmp
push
icebp
mov
dec
push
mov
std
sub
and
jge
xchg
test
jmp
outsl
and
int3
cmc
lods
mov
xchg
sbb
sahf
out
jg
pop
inc
cmc
dec
mov
xor
push
je
mov
pop
inc
test
mov
or
pushf
cmp
jbe
sbb
mov
xor
mov
sub
lret
pop
xor
xor
add
jo
dec
fidivs
movsl
jno
jnp
fidivs
inc
and
xchg
sti
enter
div
cs
es
xchg
and
pop
mov
push
jge
clc
or
jns
loop
test
in
adc
repnz
or
jp
xor
aad
pop
pop
xchg
mov
xchg
pop
mov
leave
xchg
mov
rcr
cmp
out
cltd
movsb
sbb
sti
mov
cmp
sub
jmp
das
mul
stos
setge
cmpsb
inc
das
sbb
xchg
jae
inc
shlb
or
push
and
or
repz
sub
repnz
scas
cmp
hlt
rol
loopne
push
or
or
jle
popf
scas
data16
pop
je
ss
cwtl
les
mov
pop
stos
shl
mov
dec
clc
into
and
faddl
and
push
dec
sbb
mov
jne
jae
movsb
out
inc
jbe
popf
jl
shll
js
xchg
pop
loopne
xchg
dec
or
mov
xor
pop
and
mov
push
or
add
push
call
arpl
movsl
add
mov
loope
lock
lcall
inc
lock
sub
cwtl
or
std
addr16
rcrb
leave
dec
and
mov
aaa
js
addr16
in
xchg
out
in
adc
nop
jne
mov
mov
cltd
pop
sub
std
aam
loopne
lret
cmpsb
leave
sub
shll
xor
outsb
mov
or
stos
imul
in
push
fwait
dec
in
jne
push
lcall
fldcw
mov
ret
xchg
pusha
sub
xchg
insb
dec
out
mov
lods
hlt
fidivs
cmp
mov
stos
fld
iret
aad
inc
xchg
iret
decb
pop
mov
push
add
sbb
xchg
mov
popf
lods
stos
dec
pop
sbb
cmp
push
or
popa
mov
addb
cmp
mov
mov
xchg
sbb
sbb
adc
add
sub
xchg
or
xor
loop
lcall
mov
mov
mov
scas
sbb
sbbb
push
cmp
and
lods
sub
ds
pop
mov
fldenv
sub
sbb
sahf
mov
loop
add
mov
mov
sub
or
and
push
inc
inc
pop
dec
mov
pusha
xchg
mov
sbb
jb
imul
push
jae
out
cmc
lret
dec
lock
popa
stos
jg
mov
or
jmp
insb
pop
pop
mov
rcrl
mov
fdivr
imul
neg
cmp
cmp
cmp
sti
popa
xchg
or
mulb
arpl
push
popa
loopne
test
fwait
pop
xchg
mov
mov
fwait
addb
mov
jge
test
jecxz
inc
push
test
in
ss
mov
push
ds
push
addl
xor
int3
xchg
lret
mov
cmc
cli
lock
fistps
jnp
dec
adcl
outsb
out
mov
inc
adc
imul
jno
fdivrl
push
cld
int3
mov
mov
xor
inc
inc
push
ljmp
mov
mov
mov
ret
jmp
dec
repnz
sub
xlat
dec
outsl
xchg
ret
popa
jbe
movsb
inc
mov
stos
getsec
int
mov
rcrl
ss
push
xor
lahf
out
sbb
fwait
shl
test
push
ja
and
xor
sbb
xchg
test
adc
cmp
dec
cmp
cld
jecxz
and
jae
dec
jo
imul
and
push
out
bound
fimuls
pop
cmpsb
sub
cmc
pop
mov
dec
data16
inc
fdivrl
pop
hlt
shrl
in
adcb
outsb
jns
lret
mov
ds
jo
fdivrs
js
rcrb
bound
jnp
cmp
scas
movsb
add
pop
sbb
icebp
stos
mov
loop
faddp
add
mov
cmp
sbb
jp
pop
addr16
mov
jecxz
dec
push
les
and
inc
test
jg
ss
mov
ljmp
cmp
dec
bound
lea
sbb
ljmp
mov
movsl
inc
leave
or
jmp
nop
dec
mov
hlt
lea
mov
popa
or
lret
xor
inc
lods
push
fsubs
push
ja
lods
ficomps
xchg
out
adc
xor
push
rorb
xor
dec
rcrl
pop
jo
fiaddl
sbb
imul
add
cli
dec
jnp
cmpsl
cmc
add
add
pop
sbb
loope
in
jecxz
push
add
xchg
push
push
ficoml
mov
lret
fwait
cmp
adc
and
dec
ret
mov
sarl
pop
ficompl
xor
sbb
xor
ret
sub
inc
mov
xor
cmp
or
sbb
inc
mov
arpl
sub
daa
ror
repnz
mov
lods
jl
scas
shl
leave
jo
dec
test
fldpi
loopne
add
xchg
sbb
push
or
out
fnsave
loopne
in
mov
xchg
dec
movsb
jecxz
fcmovbe
mulb
pop
cmp
xor
push
push
cmc
andl
jmp
into
mov
popf
arpl
push
leave
sub
je
jne
mov
nop
aaa
fyl2x
ja
aaa
ds
out
dec
pop
in
addb
dec
bound
xor
adc
mov
out
and
inc
push
in
xchg
lret
mov
imul
insl
sbb
fcmovne
inc
push
xor
lds
enter
popf
xor
add
mov
sbb
jle
dec
push
cmc
xor
jns
stos
rorl
or
int
fsubrs
jg
jp
sbb
adc
insb
mov
mov
cmc
incl
sbb
add
or
mov
aam
mov
test
push
mov
jnp
dec
mov
clc
dec
insb
mov
mov
addr16
imul
clc
aaa
jne
and
callw
add
aad
push
fcomp
lds
or
inc
adc
mov
ss
flds
das
out
scas
dec
lods
mov
loope
clc
pushf
xor
push
icebp
mov
cwtl
sarb
pop
popf
add
jmp
pop
bsr
es
popf
pop
cmp
scas
sti
push
adc
push
cmpsb
ljmp
fidivl
pop
lea
adc
cltd
out
fisttpll
outsb
inc
idivl
mov
fisubs
pop
repnz
fwait
mov
test
les
data16
movsl
add
ret
mov
or
in
dec
addr16
inc
addl
dec
mov
jge
aaa
ret
push
rcrb
scas
les
or
scas
shl
notb
fs
add
out
outsl
divb
rcll
sub
nop
mov
mov
cli
imul
and
lds
mov
daa
inc
test
xor
mov
leave
je
jmp
sub
jmp
or
inc
xchg
push
add
mov
ret
inc
inc
xor
insb
pop
cli
inc
roll
jp
jmp
das
and
pop
pop
cmpsb
sbb
lds
lahf
mov
xor
fwait
rclb
mov
or
sub
cmp
cli
movsb
mov
shll
fidivrl
shll
aas
jle
sub
sbbl
movsb
xchg
test
mov
or
inc
add
or
popf
scas
jnp
shlb
out
imul
sub
pop
pop
es
xor
dec
and
jbe
mov
cwtl
sbb
jnp
lahf
mov
push
loope
xchg
fimull
sbb
add
popf
scas
lret
jecxz
adc
clc
push
mov
xchg
xchg
leave
add
cmp
jp
cmp
fcmove
leave
or
sub
push
rcrl
mov
in
sbb
es
fs
xor
icebp
out
cmp
loope
push
test
cmpsb
popl
imul
cmc
mov
mov
add
add
lods
mov
rorb
outsl
fs
cmp
inc
lahf
sbb
fsubrl
int3
int
pop
ds
dec
repz
out
insl
push
aad
pop
pop
popa
pop
sbbb
xchg
test
push
xchg
in
out
sbb
xor
push
les
movaps
jbe
sbb
mov
loope
dec
push
or
shlb
imul
adc
adc
js
mov
cmp
lret
jne
jmp
xchg
mov
mov
add
sub
cmpsb
aas
mov
mov
jecxz
dec
cld
inc
and
jb
and
and
sub
cmp
fwait
cld
cmpsb
rorb
ret
inc
fbld
roll
xchg
dec
or
test
popf
test
popf
cmp
loope
xchg
iret
fwait
xchg
mov
pushf
std
or
test
icebp
mov
es
xchg
int3
testl
and
sub
and
push
test
fisubrs
cmp
push
aas
add
fdivr
rorb
xchg
jmp
pop
mov
mov
scas
xchg
arpl
gs
cmp
das
gs
mov
push
inc
add
cwtl
stos
mov
jns
jne
inc
sub
imul
lret
ret
cltd
loop
adc
repz
repz
sarl
cli
scas
dec
add
xchg
add
fidivrs
jb
and
xor
jle
dec
icebp
cmp
add
pop
xchg
pusha
das
sub
cmp
jp
lret
fcomps
pop
out
jecxz
adc
jg
arpl
add
dec
jnp
fwait
call
repnz
stos
cmp
adc
popa
test
lock
roll
dec
outsb
lds
out
push
xchg
idivb
in
xchg
scas
pop
push
sbb
inc
push
or
je
in
mov
imul
xor
jmp
lret
in
jmp
inc
fnsetpm(287
mov
lea
or
xchg
faddl
loope
push
mov
lds
jg
arpl
push
jne
insb
rol
test
push
daa
enter
cmp
test
pop
cmp
or
insb
sar
ss
jecxz
mov
jmp
fistpl
dec
push
jo
aaa
divb
fisubs
rorb
jae
mov
xchg
test
and
subb
or
dec
stos
and
pop
test
xchg
fwait
cmp
sub
fidivl
mov
cli
out
pusha
push
push
call
out
mov
hlt
and
insb
dec
hlt
sahf
mov
push
not
pusha
cmp
dec
adc
xchg
dec
push
cmpsl
frstor
lret
fimuls
cmp
adc
imul
mov
and
jecxz
xchg
xchg
int3
dec
fdivrs
lcall
aaa
icebp
jecxz
jae
lcall
cmc
loop
mov
idivb
out
les
mul
mov
adc
es
sub
arpl
jne
int
sbb
jmp
sbb
dec
xchg
mov
bound
sub
out
int
imul
jno
cmc
xorb
sub
mov
stos
loopne
test
imul
mov
jae
cmpb
push
add
cwtl
aaa
and
push
xchg
adc
xchg
jmp
lock
xchg
xor
or
pop
adc
mov
sub
lcall
mov
cmp
cmpsb
sub
cmp
inc
push
out
in
int
xor
push
jp
insl
pop
inc
xchg
lods
xchg
fsubrl
sbb
popa
jecxz
popf
inc
inc
popa
dec
push
test
shl
xchg
ss
sbb
mov
iret
xchg
ret
test
adc
cmp
mov
lret
xor
imul
dec
cmc
fiadds
sub
or
jl
cmp
lret
sub
in
push
insb
push
shlb
aam
jns
int3
push
lds
cltd
outsl
enter
xchg
cmp
rcll
loop
jecxz
sbb
adc
std
or
or
dec
inc
inc
lock
and
lds
and
push
push
xor
push
jne
push
jge
adc
pop
outsl
idivb
and
push
mov
ret
and
inc
inc
popa
int
shrb
or
cmp
xor
mov
push
std
cld
push
inc
and
xor
scas
mov
jae
cmpsl
ss
icebp
mov
test
ds
push
mov
xor
push
jb
mov
push
xor
aad
lcall
pop
mov
xchg
ds
mov
fimull
push
outsl
inc
addr16
cmc
xor
xchg
es
aas
dec
mov
pop
xor
mov
cli
roll
xor
and
xlat
ljmp
into
jnp
mov
imul
mov
push
push
pusha
imul
push
adc
jp
mov
pop
addb
and
sub
orb
stos
xchg
aas
and
notl
movsl
xchg
dec
and
lahf
in
int3
push
shll
jns
push
aad
lea
mov
clc
mov
xor
mov
adc
or
xchg
mov
or
call
test
cmpsl
push
mov
lret
imul
lds
dec
push
inc
fiadds
xor
sub
fimuls
int
pop
push
mov
mov
mov
jecxz
push
sbb
int
shl
jmp
mov
and
mov
cli
lods
pop
and
rclb
pop
call
aas
cs
sldt
dec
loope
stos
inc
in
xchg
out
lea
push
jb
gs
sbb
lods
mov
jge
cli
push
xchg
add
in
add
mov
pop
movb
pop
mov
pop
lods
mov
xor
adc
xchg
inc
incl
rorb
cmpsb
pop
sub
scas
aas
ficomps
jne
imul
mov
push
cld
jp
jb
adc
lock
inc
xchg
pop
je
add
outsb
cmpsl
xchg
cmp
push
rclb
sub
adc
mov
fists
cmp
das
enter
enter
out
adc
movsl
mul
jge
gs
outsb
cmp
in
mov
or
xlat
mov
cmpsl
dec
pop
adc
or
bound
out
cmp
mov
add
ret
push
cmp
dec
xchg
leave
cmpsb
subb
idivb
xor
mov
scas
dec
and
mov
test
ljmp
outsl
ss
dec
insb
roll
cwtl
dec
test
or
test
xchg
jbe
adc
scas
ret
popa
pop
pop
sbb
loopne
jbe
xchg
sbb
movsl
pop
add
adc
out
and
cwtl
dec
pop
pusha
xchg
out
and
enter
jg
jl
test
cltd
push
cs
mov
dec
lcall
cmp
jo
pushf
jmp
aam
xlat
scas
add
sbb
enter
outsb
lret
pop
test
jnp
inc
xchg
fldenv
inc
sahf
or
int
out
sbb
test
sbb
out
pop
or
and
testb
jne
xlat
stc
lret
inc
add
xlat
repnz
js
add
je
xchg
fists
add
xchg
pop
xlat
mov
mov
lahf
adcb
js
pop
call
pop
aad
aam
xor
shl
pop
pop
or
pushl
es
dec
cltd
inc
mov
loop
jmp
and
fsubs
shll
push
sbb
lcall
xchg
push
lock
enter
mov
insb
lret
sbb
inc
arpl
pmulhuw
roll
xor
pop
push
mov
mov
data16
cmc
cwtl
push
scas
fwait
jno
mov
push
rclb
sbbb
and
aas
sub
or
add
hlt
or
xor
inc
jbe
jae
stc
js
into
or
dec
pop
and
adc
jmp
xor
mov
mov
pop
sub
pop
loop
loopne
adc
jne
xchg
adc
inc
jnp
and
add
jge
or
xchg
xor
movsb
inc
inc
rcl
prefetchw
mov
minps
or
sub
test
push
ss
and
sbb
mov
jp
insl
xchg
cmp
outsb
outsb
pop
adc
int3
push
and
inc
repz
push
lock
pusha
pusha
pop
or
adc
rcl
add
inc
leave
enter
sub
inc
and
fidivrs
or
mov
jae
sbb
call
sti
sti
inc
adc
adc
cltd
add
lds
lods
inc
mov
das
movsl
std
andl
jge
ficoml
dec
push
xor
int3
ja
dec
shll
fwait
mov
add
lods
jg
or
pop
ss
and
leave
inc
jmp
add
scas
outsl
xor
adc
outsl
sbb
in
out
fisttpll
imul
sbb
lcall
aad
mov
adc
cmp
fsts
jl
subl
xchg
xlat
push
gs
xchg
adc
dec
cmp
jae
int
mov
push
lret
cli
jns
cmp
and
jnp
jle
push
jg
dec
sub
addb
lea
fwait
lahf
sti
mov
popf
in
out
push
pop
and
sahf
cltd
shrl
ss
sub
sbb
addr16
sahf
push
lcall
decb
xlat
pop
adc
add
popf
rcrl
shl
sbbb
push
mov
fiaddl
dec
mov
scas
xor
mov
xor
sub
inc
xor
dec
and
mov
fildll
pop
mov
mulb
insb
and
int
inc
or
push
jecxz
mov
pushf
fcompl
jg
nop
ds
xchg
hlt
setp
sarb
fnsave
ljmp
dec
push
sbb
fimull
in
iret
fcom
fsubr
jae
add
in
xor
and
imul
fwait
lea
pop
xor
cmc
mov
push
cmpb
jle
xor
pop
inc
cltd
loop
xchg
repz
xor
jp
pop
jl
push
stc
xchg
pop
lods
lods
sahf
test
stos
dec
sti
sub
xor
xchg
testl
cli
js
mov
cmp
xor
xor
rol
jg
movsb
mov
jae
jecxz
pop
clc
inc
push
out
aaa
clc
call
fucom
popf
das
scas
adcl
das
pop
sbb
adc
frstor
push
inc
jmp
cmp
aaa
mov
cmp
arpl
into
daa
or
lock
or
xchg
in
push
std
jmp
adc
lret
loop
dec
test
sbb
sbbb
movsl
pop
adc
xorl
enter
pop
test
lds
sub
or
jmp
lahf
inc
lods
mov
jl
push
mov
in
andl
pop
push
add
invd
mov
xchg
shll
xchg
dec
adc
xor
xor
add
adcb
test
leave
lock
jg
in
push
mov
jg
test
testl
mov
push
movsl
mov
imul
sub
push
add
dec
popf
shrb
sub
or
loopne
loop
test
add
lds
adc
pop
mov
insl
icebp
call
ret
out
mov
ja
sub
ret
xchg
push
daa
pusha
je
mov
mov
lret
push
std
js
inc
test
xchg
xchg
cltd
mov
lods
int3
sbb
sub
jl
arpl
xchg
adc
adc
pop
sbb
subb
xor
aad
or
cli
shll
cmp
push
jb
push
ja
mov
and
aad
ret
jecxz
ret
mov
sbb
and
loope
and
pop
sub
pop
stc
jno
mov
sahf
mov
inc
xor
ror
and
pop
sti
int
packsswb
or
jmp
icebp
in
mov
add
sub
jmp
jg
rol
fiaddl
lods
jo
inc
mov
add
push
aas
out
push
shll
and
sbb
jmp
es
mov
sbb
loope
icebp
xor
lods
pop
test
arpl
xchg
xor
xor
cmp
outsb
idivl
xor
ljmp
jmp
es
mov
loope
aad
sahf
push
and
mov
pop
lret
fcmovnbe
xor
aas
mull
sbb
outsl
mov
shrl
repz
loop
test
roll
push
hlt
stos
push
lret
push
pop
cld
and
mov
inc
imul
in
and
es
push
cmc
lret
dec
gs
dec
pop
or
into
jno
cmp
xor
adc
xchg
lea
insb
pop
cmp
add
jmp
add
xor
dec
fcoms
inc
adc
and
getsec
sub
ss
out
mov
mov
mov
shll
adc
mov
push
jp
mov
lret
xor
mov
out
xchg
xchg
sahf
movsb
adc
out
in
mov
mov
jg
jb
repnz
mov
dec
adc
dec
fcomi
xor
sub
push
mov
leave
pop
leave
and
xor
insl
or
xor
mov
cmp
shlb
xor
inc
lret
push
faddl
or
test
aaa
xlat
cld
neg
ret
mov
fldenv
inc
inc
xchg
xor
jp
and
jns
jg
out
jb
pop
xlat
xchg
aas
icebp
mov
or
je
in
imul
pop
in
lahf
xor
jnp
iret
mov
lock
push
adc
xlat
push
jl
mov
call
imul
lret
mov
or
xchg
mov
out
pop
aas
mov
adc
out
cmp
add
scas
jnp
outsl
mulb
push
mov
subl
mov
pop
gs
repnz
outsl
faddl
pop
jg
jbe
jb
out
mov
sbb
ja
in
int3
stc
pop
push
fdivl
pop
addr16
jge
clc
dec
popf
pop
xchg
out
popf
ja
mov
test
aam
mov
jb
push
xor
in
out
inc
lea
xor
pop
adc
cmp
pop
ret
clc
xor
ss
iret
inc
add
inc
les
popf
mov
and
cwtl
sbb
test
andb
js
mov
call
inc
push
stos
stos
xor
mov
icebp
and
xor
add
pop
es
les
ret
sub
pushf
xchg
or
repnz
sub
xchg
adc
data16
out
popa
into
xor
mov
adc
aaa
das
mov
popf
das
pop
dec
cmp
sub
out
adcb
xlat
xchg
sbb
jge
xchg
mov
xchg
int
mov
or
mov
ljmp
repz
ljmp
icebp
es
sub
cmc
rclb
dec
shl
push
sbb
adc
lea
xor
pushf
idivl
dec
inc
xchg
les
mov
fildl
mov
cltd
icebp
inc
pop
add
xchg
inc
test
out
arpl
mov
cld
ljmp
les
pop
loopne
inc
call
mov
sub
rorl
sub
jmp
mov
inc
mov
sti
mov
adc
jge
pop
fcomi
jbe
mov
fmuls
out
dec
cmp
out
push
repnz
jmp
out
mov
mov
test
inc
rolb
mov
and
inc
xchg
out
jle
dec
dec
out
imul
sub
mov
xchg
lcall
and
jp
mov
pop
push
stos
and
out
iret
jp
push
pushf
xchg
adc
xor
add
xchg
pop
push
dec
pop
cwtl
imul
jl
dec
jb
pop
jmp
pop
sub
or
add
inc
imul
pop
sbb
lods
call
pop
dec
mov
add
jne
mov
sbb
sti
arpl
sbb
jb
shrl
or
dec
movsb
movl
add
mov
in
jp
in
xchg
jle
cmp
shrb
xor
loop
loop
shrb
pop
rclb
loop
pop
mov
jae
dec
dec
jle
fcmove
xchg
out
xchg
pop
ret
mov
test
movsb
xor
or
mov
jle
data16
cmp
xchg
pop
imul
addl
add
fwait
fstps
iret
fists
inc
leave
arpl
lcall
repz
movsl
mov
out
xchg
pusha
dec
leave
fcmovne
inc
jg
dec
wbinvd
movsb
js
arpl
mov
inc
jno
xor
sub
xchg
ja
add
mov
roll
dec
xor
jl
cld
enter
push
add
adc
jmp
dec
add
inc
mov
ds
jl
repnz
dec
out
pop
lcall
jb
imul
mov
cmp
inc
xor
pop
adc
xchg
lds
mov
mov
pop
or
ds
push
and
ds
scas
ret
data16
cmp
mov
sbb
scas
sub
dec
ret
test
gs
clc
adc
loop
shrb
insb
ret
pusha
mov
out
scas
jle
sahf
ljmp
aaa
dec
icebp
sub
lahf
lahf
jmp
mov
sub
bts
inc
mov
inc
sbb
sahf
jbe
and
and
fwait
or
enter
sbb
sbb
popa
or
in
mov
mov
mov
sbb
cmpsb
data16
mov
je
cs
call
dec
mov
jl
cli
dec
add
fs
stos
imul
sar
push
cmp
ss
loop
lret
adc
jle
in
xor
xchg
dec
int
ljmp
xchg
aam
or
mov
aas
push
xchg
xor
iret
scas
scas
je
ss
mov
stc
fnsave
cmp
jle
fcompl
lods
cmp
sub
and
or
xlat
movsl
lea
mov
xor
mov
inc
pop
mov
and
push
bound
sbb
and
cmp
iret
decb
sbb
push
jp
ja
mov
or
xor
or
dec
in
dec
add
mov
mov
jle
mov
lock
push
and
push
add
cld
in
add
movsb
xchg
push
lea
pop
clc
cld
pushf
dec
mov
movl
push
lds
nop
mov
fs
pushf
out
sub
dec
lea
divb
fmulp
dec
or
nop
pop
popaw
xor
pop
fmull
fsubl
fcomps
or
mov
add
nop
xchg
sarl
aam
hlt
in
mov
cwtl
mov
mov
sub
test
inc
inc
int3
adc
ss
fisubl
les
ja
cltd
enter
pusha
loopne
sbb
cwtl
jmp
out
xchg
clc
push
xchg
mov
push
fstps
inc
adc
and
inc
stc
jl
jns
test
pushf
sbb
jmp
not
ds
jg
pop
aam
xor
mov
dec
add
and
mov
icebp
push
mov
xor
xor
xor
imul
xor
cmpsb
and
and
setno
mov
outsb
cmp
and
daa
std
fsubr
xor
in
sub
inc
adc
inc
mov
adc
sub
ja
or
dec
jp
or
call
into
add
sbb
cmpsb
push
xchg
insl
loop
dec
sbb
mov
fbld
outsl
add
loopne
cmp
lret
adc
sarl
cmpsl
sub
pop
je
rclb
in
push
outsb
dec
mov
inc
jnp
js
push
cmpsl
add
mov
test
lcall
push
adc
jmp
xchg
xchg
pop
adc
xor
cmpsl
adc
sbb
int
pop
or
push
dec
xchg
push
mov
pop
lea
ret
pop
sbb
or
cmp
or
adc
mov
test
jg
pop
mov
outsb
dec
mov
leave
iret
add
cli
mov
jp
cmpsl
jg
les
or
or
xchg
fnstsw
xor
es
and
or
and
sub
out
xor
jecxz
imul
pop
mov
frstor
les
mov
dec
out
jo
movsl
and
or
test
shlb
cmpsb
in
and
movb
in
push
jp
movb
lock
or
std
xorb
movsb
andl
adc
sub
mov
jne
pushf
cld
in
pushf
insl
mov
mov
daa
incb
mov
mov
sbb
movsl
push
adc
cmp
jecxz
xor
scas
aad
mov
dec
nop
jg
jecxz
pop
mov
pop
mov
jle
ja
clc
cmp
mov
in
data16
out
pop
les
fwait
cmp
fs
mov
add
hlt
jns
iret
ret
ret
stc
push
adc
fmuls
xchg
jecxz
out
xor
aas
xchg
mov
mul
jb
icebp
scas
lods
lock
pop
push
push
push
and
pop
stos
cli
xor
and
dec
jbe
out
adc
and
mov
fidivrs
int3
pop
mov
xor
popa
es
jae
push
lea
test
or
inc
mov
lds
dec
inc
gs
pushf
cwtl
jge
dec
inc
mov
add
jle
mov
mov
add
dec
dec
mov
jnp
or
jae
dec
mov
es
test
mov
push
cs
push
adc
cmc
mov
mov
stos
cmp
sbb
jp
sub
sahf
or
lods
aad
xor
addr16
inc
mov
incb
arpl
fldpi
popf
mov
loopne
out
das
popa
sub
push
or
mov
jno
mov
outsb
out
mov
inc
inc
es
popf
rorb
adc
fs
mov
movsl
sub
mul
loop
inc
sbb
mov
dec
nop
add
stos
jb
das
mov
sbb
pop
mov
mov
mov
addr16
push
arpl
fstps
add
add
lahf
hlt
hlt
test
cmp
mov
out
xlat
movsl
sub
test
cmpsb
sbb
test
cmp
or
out
pop
xchg
pop
xor
add
xorl
push
xchg
in
add
jp
outsb
dec
push
mov
mov
iret
inc
gs
fisubrl
pop
pop
jl
ds
mov
popf
xchg
ja
rclb
jl
pop
mov
cwtl
lea
test
int
test
or
lods
loope
jg
dec
imul
jno
or
mov
stos
loop
int
fwait
jnp
aas
idivb
mov
or
sub
cmpsl
idivb
icebp
daa
jb
scas
fimuls
mov
test
xabort
pop
add
sbb
jns
cli
cltd
daa
je
outsb
gs
or
adc
dec
out
cmp
sub
push
and
in
mov
jg
fidivrl
shl
inc
js
inc
xchg
xor
popa
xchg
into
jl
or
inc
outsl
adc
lds
lret
dec
and
mov
out
push
dec
add
outsl
cs
adc
and
add
xor
sti
jl
lea
dec
in
setp
rolb
test
repnz
test
iret
inc
ja
lds
test
pop
outsb
stc
mov
iret
add
pushf
sub
sub
push
jno
daa
leave
xchg
xchg
mov
lahf
jmp
outsl
in
pop
loope
int
add
imul
out
mov
pop
jbe
ror
into
mov
lock
mov
fisubs
enter
scas
mov
in
sub
lahf
in
out
fcmovnbe
mov
test
cmp
sbb
xor
sbb
jge
or
cs
lods
ret
mov
dec
push
cmpsl
in
call
in
jp
sbb
push
push
jb
aam
xor
cmp
inc
pop
test
sbb
mov
jl
dec
aas
sub
adc
push
jno
sub
and
jge
xchg
addl
imulb
jmp
out
jns
cld
loopne
dec
dec
jp
scas
xchg
sarl
xchg
cld
cmp
fwait
js
push
outsl
pop
test
xchg
imul
int
dec
push
shlb
es
dec
pop
mov
hlt
faddl
jne
push
aad
int
pop
mov
mov
pop
sbb
lret
pop
imul
mov
loope
str
inc
and
cli
mov
pop
mov
mov
mov
add
lahf
outsb
mov
fldcw
insb
inc
stos
add
jg
cmp
test
mov
fs
fs
fldenv
mov
xor
sub
js
cmp
push
loopne
mov
pop
inc
add
sarb
frstor
xchg
and
loop
lods
pop
cwtl
jbe
pop
cltd
test
cmpsl
roll
popf
push
push
ljmp
xchg
and
inc
movsl
mov
inc
jp
pop
addl
xchg
mov
inc
imul
cmp
pop
sti
mov
mov
ficoml
shl
inc
enter
gs
mov
les
xchg
cltd
out
fcmovnbe
fisubrs
sbbl
lods
inc
cli
jmp
adc
ret
jp
xor
into
lock
jmp
push
mov
addr16
popa
push
in
push
cmp
sub
mov
jecxz
das
push
shll
lock
add
sbb
loope
dec
push
jle
sub
pop
cmp
test
pop
cmpsb
pop
adc
mov
nop
and
inc
aaa
pop
lods
sub
cmp
and
mov
adcb
leave
jae
pushl
xor
jp
pop
in
daa
pop
sub
push
dec
addr16
jl
int
push
mov
jo
or
push
lods
push
xchg
xchg
inc
mov
jno
sub
jns
pop
dec
lret
adc
imul
mov
shlb
repz
cmp
xrelease
push
scas
mov
pop
mov
icebp
in
xor
mov
cmp
mov
mov
gs
sbb
add
repz
addb
out
mov
mov
adc
inc
mov
or
insl
cmpsb
add
and
icebp
push
dec
pop
fucomi
in
in
mov
into
xchg
stc
stos
xchg
xlat
pop
add
push
mov
add
sub
mov
sbb
call
in
ss
stos
mov
in
cmp
adc
sarl
push
and
les
mov
or
sbb
mov
or
daa
ret
xchg
push
pop
cmp
roll
jnp
jno
gs
imul
adc
jl
data16
sarl
cmp
decl
lea
jl
push
mov
loopne
mov
cwtl
dec
js
sub
sahf
lods
mov
fistpl
mov
push
lds
xchg
sbb
je
mov
jecxz
push
and
adc
sub
int
xchg
add
or
clc
jnp
xchg
daa
gs
clc
leave
cwtl
xor
add
sbb
call
fildl
xor
std
fsubs
out
cmpsl
into
mov
aad
mov
xlat
out
addr16
aad
icebp
dec
pushf
ret
mov
test
cmpsb
dec
push
mov
ss
outsl
idivb
xor
pushf
adc
stos
jno
cmc
lods
mov
stos
loope
inc
incl
cld
cmp
shrb
xor
aam
xor
xchg
inc
ja
add
cs
shrb
add
jmp
inc
add
push
or
mov
bound
xor
imul
loope
loopne
push
mov
cmp
int
iret
nop
lahf
shrl
or
pop
rcrl
psrad
test
mov
sbb
pop
imul
popa
add
adc
mov
loop
or
pop
and
adc
cmpsl
cld
sbb
jo
dec
mov
sbb
cs
sbb
lcall
mov
addr16
mov
push
cmc
scas
outsb
sbb
push
push
mov
je
stc
lret
push
xchg
cpuid
xchg
xchg
mov
adc
adc
mov
cli
ret
xchg
pop
push
adc
adc
xchg
push
outsb
icebp
out
pop
test
or
mov
push
jg
push
push
les
and
aas
das
outsb
xchg
stos
iret
in
push
movsb
sbb
mov
mov
stos
jmp
sbb
cmp
cmp
add
cmc
cmpsb
data16
pop
mov
aas
imul
dec
cltd
mov
add
sbbb
adc
xchg
lcall
add
push
sbb
sub
or
dec
sti
cmpsb
mov
dec
and
out
daa
cmp
ds
repz
ja
xchg
jno
addl
enter
xchg
pop
adc
lea
je
and
fisubrs
or
pop
enter
cmp
sub
fisttpll
aas
test
push
cmpsl
pop
call
mov
fldl
pop
push
jnp
sbb
lret
and
jecxz
leave
add
int3
xchg
pop
mov
jp
push
cmp
mov
loope
add
ret
sub
or
push
xchg
loope
dec
xchg
fiadds
scas
in
dec
or
dec
push
pusha
pushf
loop
push
mov
int3
inc
xchg
aaa
mov
cmp
scas
loopne
daa
or
mov
sub
add
jle
mov
or
clc
dec
push
jp
inc
mov
cmovbe
imul
inc
xor
or
push
js
mov
inc
cmpsl
cmp
pop
add
fs
lock
xor
sub
xchg
add
and
js
and
pop
gs
inc
idivl
out
inc
jae
mov
add
mov
popf
enter
out
stos
cmp
dec
aad
icebp
jb
mov
inc
jl
sarl
loope
sbb
xorb
dec
int3
ret
lods
out
iret
xor
pop
push
lds
mov
test
dec
inc
dec
jo
shrb
sbb
cmp
imul
jecxz
mov
xchg
push
add
push
mov
cld
es
fldenv
add
repnz
push
shll
imul
cld
dec
jge
pop
jbe
insl
nop
cmp
sti
addr16
rcrb
add
es
push
jne
mov
inc
and
rclb
add
cmp
push
mov
imul
imul
pop
or
jg
xor
mov
push
xorb
call
sub
dec
scas
and
xor
push
shlb
mov
in
jl
ficomps
xchg
mov
mov
push
pop
jle
daa
stc
pop
ljmp
push
xor
push
pop
push
jbe
cmp
jns
test
mov
sbb
mov
mov
arpl
pop
push
xchg
mov
int3
lret
xchg
repnz
jns
push
insl
cmpsb
jno
pop
loop
aam
ret
emms
sub
lea
pop
gs
pop
in
push
add
ja
push
leave
scas
ds
cmpsl
add
sbb
lods
jae
or
filds
sub
je
push
jle
int3
xchg
mov
andl
jbe
scas
das
pop
push
or
sub
cwtl
fiaddl
cmp
sbb
in
repz
rcrb
lods
mov
js
jp
mov
dec
outsb
mov
sub
and
iret
push
inc
and
inc
mov
ds
push
jge
das
mov
test
xchg
xor
push
ret
pusha
jle
cmpsb
jle
xchg
jnp
nop
jns
push
push
es
mov
sahf
lea
ret
jo
sbb
mov
fwait
in
xchg
cmc
ret
enter
roll
and
out
pop
aad
mov
jmp
sti
les
add
mov
pop
call
cmp
mov
pop
int
ja
sbb
jg
cmpsb
lcall
aam
bound
pop
repnz
adc
out
mov
loope
xor
shll
imul
pop
sub
out
mov
xor
in
sbb
sub
repnz
dec
adc
sbb
push
sbb
icebp
sbb
jl
icebp
stos
and
mov
div
add
mov
sub
cmp
sbb
mov
mov
cmp
jbe
or
cwtl
daa
idivl
int
into
hlt
shll
into
sub
js
add
pop
mov
xchg
rcl
fs
jbe
dec
fxch
xchg
push
cmc
inc
ret
sbb
sbb
jg
movsl
ficompl
divb
data16
inc
adc
pop
pop
mov
ret
gs
loopne
ljmp
fsub
jge
popf
xor
gs
outsl
incl
nop
mov
pop
leave
sub
push
ja
cmp
jae
pop
xchg
adc
cmp
sahf
das
cs
in
movsl
lds
mov
in
xor
rcr
in
je
repz
lock
mov
push
or
xchg
sti
mov
jns
mov
and
test
mov
cmp
push
pop
mov
pop
and
jo
xchg
inc
sub
jg
or
adc
shl
popa
and
ret
cmc
call
jl
inc
mov
fidivs
pusha
pop
jae
cmpsl
sub
cli
and
rep
les
fmull
repz
scas
xchg
sub
xor
in
ret
or
adc
aas
gs
xchg
hlt
inc
mov
cld
outsl
jmp
incl
cmp
cmpsl
aaa
jae
push
addr16
cmpsl
sbb
ror
cmpsb
jns
sub
sub
add
hlt
test
push
mov
push
in
xor
aas
loop
gs
divl
les
push
and
xchg
sahf
adc
sbb
xorb
ljmp
arpl
gs
out
fwait
jg
insl
arpl
xchg
in
mov
lret
lds
lret
dec
popf
xchg
xchg
outsl
adc
sahf
xor
push
syscall
jle
in
stos
dec
rorb
ljmp
pop
out
dec
arpl
pop
xor
mov
mov
mov
cli
xor
int3
fnsave
hlt
adc
inc
iret
clc
adc
mov
mov
dec
imul
js
cwtl
out
or
popa
adc
mov
inc
mov
jb
push
push
jmp
dec
pop
shrb
xchg
push
decb
sub
repz
data16
int3
insl
faddl
cmp
fldcw
out
ret
imul
test
push
mov
xchg
ror
inc
push
mov
cmp
loop
and
jns
push
cli
or
and
fildl
hlt
xchg
imull
jne
push
mov
push
repnz
xor
sbb
jo
mov
cwtl
outsl
xchg
out
xchg
mov
pop
faddl
sbb
not
bound
pop
xor
pop
fidivrl
shrb
pop
jbe
jmp
cwtl
dec
mov
lcall
xchg
jne
out
pop
mov
movsl
push
sbb
fdivl
dec
adc
add
mov
pop
push
pop
and
push
fistpll
mov
adc
xchg
shrb
cmp
adc
add
mov
arpl
imul
jp
outsb
pop
fdivrl
ficompl
lahf
je
loope
xchg
repz
push
pop
or
jns
fisubrl
xchg
sarl
iret
or
rorl
and
pop
sub
jo
cmp
int3
imul
js
xor
int3
inc
nop
notb
lea
ret
js
fwait
sbb
push
pop
jnp
xchg
xchg
mov
out
arpl
mov
cmp
mov
in
lcall
push
push
lret
les
sub
xor
daa
xchg
pop
test
imul
data16
scas
add
push
cmp
adcb
mov
test
imul
in
movsb
add
cltd
mov
test
pusha
lret
or
scas
mov
xor
mov
out
pusha
cmc
xor
sbb
pusha
push
jge
xorl
int3
std
sbb
xlat
imul
mov
push
andb
mov
repnz
fs
dec
mov
jmp
cmp
out
movsl
arpl
fs
mov
sub
ret
cmp
mov
inc
xchg
cmp
jne
out
mov
in
push
jge
pop
sbb
adc
push
jge
mov
std
xchg
mov
xchg
pop
push
cmp
int3
shl
jns
lahf
push
shrl
ds
pusha
mov
and
test
xor
clc
xlat
ret
or
pop
idiv
movsl
movsb
xlat
push
xchg
call
rcr
xor
fsubr
jl
rcr
push
inc
mov
jp
jg
pop
pop
movsb
pusha
xchg
pop
mov
punpcklbw
neg
mov
shl
jmp
add
icebp
mov
jle
xchg
imul
cmp
mov
mov
xchg
mov
rol
push
cmp
loope
adc
enter
and
hlt
out
or
dec
cwtl
mov
int
adc
push
push
lods
jae
jmp
push
or
in
pop
iret
mov
xor
sbb
mov
mov
data16
pop
insl
loopne
lea
in
aad
or
subl
dec
ss
loop
jmp
or
and
test
lds
ret
sbb
hlt
xor
test
jmp
push
lock
pop
cmp
mov
rorb
test
adc
cmp
sbb
movsb
jbe
push
lock
js
mov
sub
std
data16
jo
and
mov
lcall
add
rclb
int
push
dec
adc
pop
stos
mov
in
nop
jbe
ret
ss
and
popa
and
dec
inc
push
pop
push
pushf
xchg
mov
lea
lds
dec
shrl
pusha
fisttpl
dec
fldt
sub
mov
dec
dec
imul
in
lahf
lods
outsb
cltd
push
dec
pop
mov
push
in
dec
ficomps
dec
pop
mov
cmp
mov
and
and
les
cmp
mov
pop
es
lods
jle
jbe
or
cmp
mov
cmc
adc
push
lods
adc
outsb
jne
inc
and
xor
mov
mov
mov
mov
dec
mov
push
sarl
adc
or
arpl
daa
pushf
imul
aas
scas
daa
add
shl
xchg
cli
mov
add
cmp
pop
jge
jecxz
xchg
cmp
add
aad
pop
shlb
inc
adc
pop
fnstenv
xchg
cs
cmpsb
dec
jg
pop
push
and
cmp
pop
fucomp
mov
popa
jmp
ret
loop
sub
nop
push
insl
adc
test
gs
lds
jp
mov
push
cs
add
add
cmp
call
cmp
pushl
outsb
andl
fbld
ljmp
imul
subb
add
sub
subb
jns
lret
xchg
sbb
cmp
jb
fcom
and
jbe
lods
enter
cmp
int
out
mov
sbb
cld
mov
imul
inc
fcoms
outsl
sbb
loop
mov
inc
data16
xchg
bound
cmp
mov
mov
lods
shlb
test
xchg
scas
and
fiaddl
roll
daa
mov
push
outsl
sti
jno
push
xor
pop
aam
adc
push
das
xor
push
repnz
cmovo
or
pop
mov
outsl
mov
xchg
push
enter
sbb
mov
shlb
enter
negb
out
and
les
or
pop
stc
outsl
add
cwtl
movsb
js
dec
aaa
xchg
cltd
in
inc
push
test
out
jp
and
xor
sbb
and
jmp
xor
loopne
dec
into
push
inc
xchg
pop
test
jecxz
jae
in
pop
xchg
addb
xchg
insl
mulb
dec
scas
jne
dec
sbb
loope
inc
mov
xchg
mov
and
mov
jo
mov
sbb
sub
dec
stos
push
dec
sti
xchg
lods
rcll
test
call
es
ret
sub
lahf
fimull
and
jb
out
popa
sbb
adc
daa
stos
addr16
aas
inc
cmp
lods
aaa
icebp
jecxz
or
cmp
movsl
lds
stos
in
xchg
adc
roll
mov
jle
mov
imul
sub
repnz
mov
les
push
lahf
xor
mov
movsl
inc
mov
dec
mov
jae
xchg
mov
adc
lcall
push
scas
jne
stc
les
and
dec
inc
imul
lahf
ficompl
dec
popf
mov
push
fnstsw
push
sbb
out
clc
negl
mov
fistpl
jmp
inc
sbb
adc
inc
sub
mov
cli
nop
test
enter
cmp
into
push
pusha
pushf
pop
fs
mov
xchg
xchg
jmp
les
or
mov
lock
jmp
gs
jbe
dec
or
sbb
js
pop
movsb
das
dec
loop
int3
cld
pop
xor
inc
insl
out
xchg
mov
in
int
jno
cmp
fbstp
test
mov
and
sbb
jp
push
cmp
push
jns
out
or
stc
mov
fnstcw
jg
xor
jbe
xor
or
shrb
ds
pop
push
lods
add
push
xor
jne
sbb
sbb
inc
xor
push
icebp
in
mull
and
mov
gs
pop
and
and
dec
mov
pop
popf
cmp
pop
inc
rorl
mov
dec
fisubrl
cmp
sbb
movsb
cltd
fsts
sub
xchg
or
lret
inc
jb
into
xchg
mov
jb
in
pop
cs
lock
push
jecxz
add
and
mov
pusha
dec
lock
mov
stos
insl
das
scas
stc
xchg
add
mov
xchg
jnp
jmp
cmp
rorl
sub
fisubl
inc
popf
jno
ficoml
pavgw
or
mov
outsb
xor
mov
jnp
jle
leave
ss
out
mov
sub
insb
jns
outsb
xchg
lods
test
push
mov
aas
loope
mov
stc
or
leave
ret
jae
xchg
cs
adc
int3
xchg
xor
cmp
or
ss
lea
lds
push
lock
dec
mov
cmp
sub
adc
into
jl
push
repnz
mov
mov
add
jl
aas
insl
push
and
sbb
or
mov
imul
mov
mov
scas
lret
in
stc
mov
and
sti
mov
pop
test
cmc
into
cmp
push
repz
test
popa
or
mov
popa
movsl
push
fiaddl
mov
aad
outsl
sti
add
fwait
xor
jbe,pn
push
inc
cmp
outsb
dec
adc
push
aas
das
inc
in
adc
jg
xchg
mov
push
xor
insl
sbb
sub
int
ljmp
and
jle
cmp
popa
push
mov
jo
mov
jl
ja
push
pop
fs
jo
mulps
pop
mov
inc
shrl
add
mov
add
inc
ret
fldcw
pusha
xchg
cmpsl
mov
pop
push
imul
sub
repz
push
jb
ja
test
ret
loope
and
mov
jae
lea
loop
rcll
cltd
aaa
sbb
scas
xor
jne
lahf
out
rclb
sub
in
xlat
mov
cwtl
imul
ljmp
jp
push
je
add
mov
aas
sub
ljmp
popf
fs
pop
dec
test
jg
ficomps
std
mov
add
sbb
dec
js
rolb
enter
int3
addb
rcl
repnz
xchg
in
ret
cmp
and
push
dec
mov
ljmp
pop
mov
jnp
dec
daa
loope
das
pop
mov
xchg
rol
xchg
mov
shl
ficoms
add
xlat
insl
fwait
in
test
push
inc
inc
and
mov
mov
jmp
lret
ror
fsubrl
sub
jecxz
int3
orl
rcr
lea
out
stos
mov
imul
mov
jnp
jne
test
pop
rorb
inc
ret
mov
dec
das
inc
xor
add
adc
and
repnz
or
and
inc
jo
sti
push
jo
leave
in
mov
bound
cs
push
data16
sahf
repz
test
jae
mov
or
out
nop
push
sub
and
adcl
cld
mov
push
adc
and
sbb
jns
jbe
repnz
or
stos
dec
add
enter
adc
lcall
je
sub
sub
inc
mov
aad
enter
inc
in
inc
in
xor
jl
mov
jmp
xlat
sbb
cmp
pop
push
ja
scas
push
icebp
sbbl
adc
lahf
subb
pop
out
adc
push
and
insl
dec
fbstp
inc
sbb
mov
cltd
mov
pushf
shrl
add
imul
ds
inc
push
repnz
cmp
add
movsb
std
add
xchg
in
mov
lds
aad
repnz
xor
sahf
push
sbb
inc
addl
pop
call
fldt
adc
outsl
stos
ret
test
xchg
inc
cld
loope
andl
pop
pop
xchg
inc
test
outsl
cmc
cmp
sub
pop
inc
xor
sbb
bound
faddp
dec
repnz
push
mov
jo
call
filds
loopne
adc
sub
ds
rorb
je
push
cmpsl
cmp
cmp
xorb
cmp
pusha
mulb
cmc
xchg
jnp
ret
jb
and
iret
adc
fisubs
outsb
call
adc
push
xchg
lea
sbb
push
xchg
push
adc
or
leave
notl
sbb
int
xchg
je
or
aam
div
push
clc
dec
js
enter
jmp
sub
fiaddl
adc
push
sub
pop
inc
fiadds
arpl
inc
push
rolb
mov
cltd
push
cltd
lock
push
jp
xchg
xchg
enter
dec
xor
ret
sbb
scas
int3
cmp
mov
jnp
xorl
ror
stos
cmp
or
mov
stos
ret
pop
rcrl
or
iret
jle
fdivl
adc
or
test
std
pop
cmp
pop
stc
cltd
pop
add
jnp
lret
pop
pusha
sub
loopne
cmp
jns
mov
rorl
pushf
fwait
xchg
dec
lahf
cmp
stos
pop
gs
push
xchg
push
out
imul
pop
ret
popf
jge
out
sub
std
adc
or
push
mov
jae
dec
push
mov
mov
fadd
pushf
test
pushw
push
rorl
add
scas
pop
push
scas
test
ret
test
sahf
jns
arpl
cli
sbb
aas
dec
push
test
cmp
lods
les
cmc
or
mov
push
sbb
cmp
outsb
push
sbb
lods
xor
inc
inc
cld
inc
mov
test
aad
testl
ret
sbb
inc
and
out
jnp
and
es
xlat
or
cmp
pop
xchg
fwait
call
and
in
cmp
sbb
aas
mov
mov
repz
jae
or
out
xor
stos
into
int3
pop
out
mov
push
sub
dec
das
and
dec
xlat
xor
push
mov
mov
pop
jle
adc
mov
jae
add
nop
xchg
insl
aas
or
sub
adc
stos
push
lret
and
xchg
or
and
xor
xchg
fsub
je
push
push
xchg
mov
lock
rorb
inc
shrb
sbb
mov
pop
or
xchg
mov
pop
mov
dec
loope
call
add
popa
adc
cmp
mov
leave
mov
jmp
clc
mov
gs
pop
sub
pop
xchg
repnz
jge
scas
dec
movsl
adc
dec
jecxz
add
jb
es
xor
pop
mov
lods
enter
jbe
xor
lret
int
rclb
out
xor
cwtl
dec
out
dec
or
jne
aad
push
insl
mov
or
dec
cmp
push
dec
cmp
adc
and
bound
inc
out
int
out
loopne
lret
inc
data16
push
insl
test
xchg
jbe
scas
inc
dec
popa
mov
mov
push
mov
mov
sub
push
push
xchg
add
adc
test
stc
out
leave
push
mov
lds
aaa
out
and
sbb
stc
data16
shll
mov
ja
fs
cmp
mov
lods
nop
test
mov
inc
mov
inc
push
sub
cmpsl
adc
jne
call
das
loope
pop
sub
mov
jecxz
mov
adc
insl
mov
adc
pop
fidivrl
rol
push
sub
hlt
mov
mov
pop
mov
xor
add
js
mov
dec
jecxz
adc
fcom
mov
pop
imul
fcomi
adc
push
mov
rcr
shlb
mov
test
jle
lcall
cmpl
push
popw
imul
lahf
fisttps
jle
out
adc
sbb
mov
int
dec
outsl
outsb
and
pusha
xor
jnp
out
xchg
jno
and
icebp
and
mov
dec
sbb
add
lcall
loop
xchg
sub
call
mov
psrlq
in
loop
pop
sub
mov
rcr
andb
inc
rol
sub
xlat
test
jne
inc
loop
aaa
shl
std
dec
push
mov
or
stc
add
push
rclb
lret
stos
in
dec
int3
push
lret
xor
xchg
insb
dec
idivb
lods
or
call
cmp
repz
movsl
and
cmp
out
outsl
and
pcmpgtb
push
dec
jo
jl
xchg
pop
mov
push
inc
and
push
rolb
jns
addr16
pusha
lods
cltd
push
dec
ficoms
push
fs
jge
popa
xlat
iret
jno
shlb
jo
mov
add
pop
lock
cmp
sub
xor
loope
subb
inc
or
mov
loopne
mov
mov
lret
pusha
mov
or
push
leave
sti
cmp
incb
into
and
pusha
fstl
add
aad
int3
icebp
fiaddl
rolb
loope
sub
lea
mov
stc
fdivs
dec
insb
leave
jbe
les
jecxz
shl
jbe
push
add
push
mov
sub
addr16
das
push
and
or
sar
pop
and
sahf
lods
sbb
add
sub
loop
adc
clc
jg
jl
mov
insl
dec
inc
or
cld
mov
sti
xchg
xor
lods
scas
and
jg
pop
push
xorl
pop
xor
mov
daa
flds
sbb
xchg
aam
add
sub
popa
xchg
lret
add
push
inc
push
push
repnz
sarb
repnz
ds
dec
adc
imul
sbb
dec
in
jg
pushf
ret
jno
popa
cmpsl
jae
out
jle
fstpl
jnp
cmp
jns
shlb
orl
clc
aad
insb
pop
jle
scas
pop
call
ret
jl
test
gs
ret
or
push
mov
orb
hlt
jp
mov
mov
movsl
fsubs
mov
inc
pop
imul
rcrl
cmp
ret
or
mov
subb
jmp
in
pop
push
cmp
neg
ljmp
insb
insl
lret
sbb
xchg
cmp
dec
cs
and
fbld
and
call
xchg
cmpsl
cs
out
push
scas
popa
mov
mov
testb
lret
inc
or
dec
inc
push
in
scas
cmpsl
xchg
sbb
xchg
mov
lret
inc
mov
lds
xchg
rcll
dec
mov
add
ror
push
sar
jnp
mov
aaa
xchg
dec
fmul
icebp
xor
rorb
test
xchg
and
jmp
push
push
mov
cmpsl
mov
mov
mov
inc
shlb
aaa
mov
xor
in
lea
sbb
sahf
cmpsl
mov
leave
mov
xchg
cmp
xchg
jp
das
sbb
mov
jbe
in
jns
outsb
jle
cld
ss
inc
sub
je
sbb
push
jge
in
fnstcw
imul
jbe
or
fsub
push
xchg
psllq
push
mov
fistpl
lods
jle
push
xchg
clc
js
add
mov
add
mov
jge
inc
mov
xchg
repz
and
sbb
mov
xor
imul
xchg
push
mov
inc
ja
pusha
and
pusha
hlt
lret
or
dec
enter
stos
in
outsb
insb
lret
lea
inc
mov
cmpsl
add
cmp
mov
inc
ja
test
lret
mov
mov
aam
xchg
lcall
faddp
adc
cmc
out
pop
sahf
dec
pop
and
pop
inc
adc
pop
dec
sub
mov
add
jle
sbb
and
mov
push
outsl
repnz
cmc
pop
push
sub
sahf
xchg
cmp
xlat
lock
stc
imul
clc
enter
nop
mov
dec
sub
in
in
test
ror
sbb
out
sub
push
fisttpll
inc
xchg
adc
mov
add
jecxz
jo
lds
scas
mov
bound
sbb
pop
ljmp
test
fwait
push
into
pushf
ss
mov
xor
adc
adc
or
pop
test
jbe
pushf
and
mov
lcall
inc
addl
aaa
inc
data16
mov
ja
cmc
and
pop
rolb
inc
inc
add
cld
push
push
movsb
pop
bsf
ljmp
fimull
aaa
enter
jg
inc
repnz
push
sbb
xchg
out
out
or
int3
jns
adc
mov
xchg
inc
cmp
fwait
ja
shll
je
inc
js
insb
xor
mov
dec
std
mov
stos
out
dec
inc
xor
shlb
and
gs
mov
mov
dec
push
sub
pop
xchg
loopne
mov
dec
xchg
xchg
inc
pop
cld
mov
test
pop
xchg
testl
sub
mov
loope
addr16
jno
insb
scas
dec
xchg
dec
sub
int3
je
mov
xor
adc
cld
sub
push
cmc
ficoml
sbb
mov
or
pop
xchg
in
adc
negb
or
mov
dec
mov
xchg
int3
mov
mov
nop
scas
adc
idivb
cwtl
stos
add
cmp
iret
in
adc
jns
in
cmp
gs
scas
sbbb
jbe
xor
orl
adc
pushf
mov
push
fistpll
push
ds
sbb
mov
xlat
sbb
ret
xor
inc
popf
in
outsl
sahf
push
nop
movsl
adc
test
mov
xchg
testb
test
and
in
inc
icebp
in
mov
gs
lock
pop
push
pop
pop
cmp
mov
jg
push
fstpt
push
jecxz
ljmp
ss
aad
aad
das
cmp
mov
fdivrl
sub
movsb
bound
pop
or
mov
push
mov
lods
push
in
aaa
testb
or
in
mov
or
push
push
subb
inc
fisubl
subb
push
xor
jne
int
cmpsl
inc
aam
push
mov
iret
inc
pop
pop
sbb
cmp
dec
sub
shl
dec
adc
fsubl
add
ret
xchg
lds
jp
loope
int3
fdiv
and
mov
int
mull
or
fildll
lret
out
inc
je
adc
test
push
add
mov
adc
adcl
adc
outsl
out
xchg
push
rclb
stos
xchg
add
xlat
addl
xchg
adc
xor
pop
dec
or
sbb
insb
andl
test
xor
std
jo
nop
outsb
arpl
imul
shrl
cmp
mov
loopne
or
pop
into
hlt
xchg
jge
jne
pop
mov
leave
xor
xchg
adc
inc
lock
rorb
shlb
mov
jb
pushf
cs
pop
shlb
cmp
je
or
jnp
loop
scas
mov
aam
clc
fbstp
cltd
ja
xchg
or
xor
sub
add
mov
rcrb
push
pusha
mov
and
mov
rorl
mov
popf
cmp
mov
sahf
pop
xor
mov
pop
mov
das
data16
push
push
pop
xchg
or
push
sub
lea
fnstsw
push
cmp
pushf
outsb
rcl
cld
adc
jns
fbstp
and
pop
sub
mov
mov
es
xlat
mov
or
cmp
notb
flds
mov
pop
push
jo
add
test
mov
jnp
and
jp
sbb
mov
adc
inc
sbb
in
adc
sbb
fs
or
pushl
fisubs
adc
std
xor
jmp
xchg
sub
xchg
xor
adc
out
mov
repnz
inc
pushf
rol
mov
cmc
mov
jg
push
mov
enter
or
imull
std
push
fsubs
out
mov
adc
imul
or
jg
mov
jmp
or
fwait
out
pop
fnstcw
mov
out
jmp
test
push
sub
xor
test
jne
pop
cmp
sbb
push
push
dec
mov
sbb
mov
inc
lds
or
dec
addr16
rclb
sub
mov
jbe
mov
cmpsl
mov
push
sub
jl
sub
push
cs
ljmp
mov
or
ret
and
inc
mov
mov
jb
mov
add
or
hlt
push
push
int
push
scas
dec
xor
arpl
mov
dec
xor
mov
sahf
test
add
add
or
and
bound
imul
add
icebp
imul
mov
mov
aas
sbbb
or
sub
movsb
mov
fiadds
sbb
les
popa
xor
inc
xor
mov
outsl
fs
jmp
pop
ss
movsb
dec
fsubrs
cs
jl
clc
das
enter
popf
inc
mov
scas
xchg
ljmp
shr
jp
jae
adc
shlb
mov
mov
std
mov
inc
jns
adc
fst
inc
aaa
push
and
dec
scas
or
cmpsb
push
or
xor
xchg
inc
pop
push
lds
inc
addl
mov
call
stc
pop
jae
dec
mov
iret
out
cmpsb
sub
mov
adc
ja
add
dec
in
enter
inc
pop
xor
icebp
ret
or
sbb
lods
movsb
repnz
sbb
xorb
pop
test
fs
stc
add
enter
xchg
inc
add
sub
lods
sbb
icebp
and
jns
jne
cmc
mov
mov
test
loop
mov
test
and
imulb
ret
and
cltd
xlat
pop
sbb
jns
repnz
outsb
cmpsb
jb
cmp
dec
adc
xor
adc
les
pop
aad
push
mov
add
sbb
or
dec
jb
aas
fsubp
push
stos
push
push
adc
imul
inc
int3
cmc
lods
push
push
scas
out
pop
jmp
push
mov
mov
call
test
shll
xorl
sub
in
iret
adc
pop
xchg
icebp
sub
fwait
mov
jno
ret
fimuls
idivb
jo
loopne
xor
bound
mov
shrl
cli
push
das
outsb
mov
inc
stos
mov
out
add
sub
pop
cmp
xor
insl
mov
cmp
out
cmp
xorb
pop
imul
jns
imul
in
daa
add
cmpsl
ret
loope
js
fisttpll
les
loopne
das
inc
mov
mov
mov
cld
fnsave
scas
repnz
jle
scas
insl
ss
movsl
clc
adc
mov
mov
out
and
jle
ret
fwait
enter
rolb
rcrl
cmp
dec
lretw
push
out
jb
add
jge
push
aam
mov
mov
fmuls
or
ljmp
jge
xchg
test
insl
orb
pop
sub
mov
fsubl
xchg
stc
pop
das
cmc
mov
sbb
aad
aas
mov
pop
cltd
dec
add
std
mov
inc
adc
es
dec
imul
addb
hlt
das
and
sub
mov
inc
or
sbb
loop
dec
sbb
lods
or
enter
pop
add
cmp
push
adc
pushf
stc
or
bound
rep
out
divl
jae
rol
test
adc
mov
clc
push
pop
ret
ds
sbb
sbb
jbe
enter
push
jg
mov
addr16
or
cmc
pushf
and
cmp
shll
mov
fists
inc
jno
cwtl
ljmp
sub
xor
jp
sahf
jno
jl
xor
dec
dec
add
lds
push
sbb
leave
push
incl
push
dec
dec
rcll
fdivs
jl
pushf
xchg
push
mov
ss
pop
in
call
push
jecxz
mov
xor
test
xor
nop
sbb
dec
mov
sub
movsl
cli
aam
or
xlat
das
push
pop
lods
and
clc
xchg
jp
and
js
jl
add
in
pop
ret
stos
test
arpl
fdivrs
fisubs
push
pop
and
xor
dec
aam
test
sbb
xchg
pusha
es
loope
mov
mov
fbld
test
adc
dec
pop
or
shlb
das
pop
fcmovne
xchg
pop
negb
mov
rclb
sub
xchg
cltd
aas
dec
pushf
cmp
inc
mov
mov
outsl
mov
xchg
mov
cwtl
js
lret
push
lret
xchg
dec
adc
out
psubb
mov
push
inc
test
dec
pop
outsl
add
std
inc
mov
aas
xchg
aam
sbb
loop
pop
adc
or
popf
cs
in
lods
iret
shl
lods
jb
enter
outsl
aaa
adc
sub
cmp
rcll
dec
sbb
mov
xchg
push
shrl
adc
dec
or
mov
insl
adc
cld
add
xor
push
adc
add
in
test
push
add
insb
jns
inc
call
add
pop
loopne
pop
punpckhdq
outsl
pop
sahf
adc
cmp
mov
add
jb
adc
and
sbb
xor
loop
or
dec
jecxz
jle
push
int
jmp
fs
stos
mov
fnstenv
out
mov
decb
setg
push
mov
xor
cvtps2pi
lods
cmpsl
fstps
mov
test
add
in
pmaxub
sbb
into
fidivrl
cmp
pop
adc
cmc
repz
fsubs
push
call
mov
cli
add
ret
stc
push
mov
sub
sub
xor
push
rolb
dec
xchg
fisubs
add
dec
cmp
int3
ds
sbb
iret
pop
nop
or
movsl
mov
js
sub
xlat
int
sahf
jle
test
or
push
jno
sbbb
les
push
xorl
inc
xchg
add
push
push
in
or
jnp
add
iret
je
dec
pop
mov
lds
sbb
in
je
js
cmp
aam
out
lahf
mov
xchg
andb
imul
repnz
add
sbb
test
mov
pop
inc
fs
ljmp
iret
xor
adc
pop
addl
dec
xchg
ljmp
add
lret
mov
ja
leave
leave
ret
in
xchg
xchg
shr
pop
push
xor
dec
jl
jae
jg
mov
and
gs
std
dec
cmp
and
outsb
cs
mov
lret
xor
xchg
mov
js
test
gs
jecxz
mov
in
inc
pop
sahf
sub
jns
icebp
jmp
hlt
adc
fs
mov
mov
xchg
pushf
xor
mov
adc
jmp
sahf
sub
inc
aaa
jbe
shlb
sub
push
daa
stos
xorb
cmp
jl
pop
cmpsb
xchg
xchg
lock
cmpb
mov
pop
into
adc
leave
pop
cs
test
enter
stos
loopne
repnz
mov
fimull
push
xorl
inc
fwait
loop
ss
mov
into
rcrb
mov
sbb
inc
lds
mov
aam
out
ret
xchg
icebp
mov
loopne
lods
jne
nop
add
xor
lods
cmp
inc
adc
sub
inc
lret
sahf
into
mov
loopne
mov
js
into
in
rcrl
arpl
xchg
mov
stos
xorb
imul
add
xchg
or
pop
and
sahf
sbb
xor
stc
push
std
notb
or
push
xchg
cmp
enter
movsb
xor
push
mov
jb
or
test
sub
or
rol
enter
fldenv
je
js
and
jne
sbb
mov
pop
icebp
in
femms
sahf
test
jns
aaa
dec
mov
and
data16
push
jmp
push
mov
je
inc
shll
and
xor
adc
divl
das
xchg
push
push
push
dec
outsl
pop
push
mov
xlat
dec
arpl
lds
arpl
xor
fnstenv
in
pop
out
push
push
add
jmp
dec
cmc
sbb
cs
nop
mov
decb
jl
lcall
push
into
push
dec
call
pop
lahf
lods
and
inc
mov
in
or
mov
es
cmpsl
daa
shr
adc
adc
push
sub
xor
loop
sub
sbb
pop
inc
push
cld
push
pop
xor
xchg
test
or
clc
out
jne
sti
dec
je
xchg
fnstcw
arpl
out
pop
jp
inc
rcrl
aas
push
pop
jle
dec
mov
pop
lcall
lcall
dec
mov
je
mov
arpl
ficompl
in
lods
inc
leave
scas
gs
cmp
nop
inc
pop
or
and
push
and
pop
mov
out
insb
push
fisubl
lods
cmp
dec
mov
or
lods
fs
pop
daa
inc
into
mov
or
rorl
xchg
sub
inc
lcall
imul
shlb
xchg
sub
jg
and
idivb
dec
popf
in
arpl
fisubrs
mov
ds
arpl
mov
insl
divl
test
stos
mov
ret
icebp
cmpsl
fnstcw
test
pop
sti
dec
stc
sub
gs
mov
mov
loope
lret
push
pop
sbb
out
or
dec
addl
pop
and
push
mov
stc
xor
repz
daa
xchg
adc
dec
jp
data16
fmull
sbb
shlb
xchg
outsl
mov
sbb
xor
dec
movaps
xor
cmp
cmp
ficoml
scas
je
or
stos
iret
mov
mov
cld
rcl
cmpl
sti
add
xor
mov
out
dec
push
cmpsl
shr
xchg
xorb
icebp
add
push
cmp
jo
lock
pop
adc
mov
out
adc
stos
adc
or
sub
mov
mov
arpl
cmp
cmp
aas
mov
xchg
shll
sbb
loope
pop
push
test
cli
pusha
cmp
xor
fldcw
lcall
xor
enter
xchg
fwait
push
test
add
mov
and
dec
in
cld
mov
push
int
mov
jne
xor
dec
cmp
ljmp
jp
xchg
sbbl
xchg
xor
fmuls
dec
xchg
outsl
in
subl
mov
test
lods
pop
int
movb
jl
or
push
sahf
adc
mulb
mov
les
cmp
xor
insb
push
jg
mov
shlb
std
sbb
dec
test
jmp
lea
arpl
xlat
out
pop
dec
jmp
popl
outsl
xor
cltd
outsl
mov
ret
mov
cmpsb
imul
stc
adc
ret
inc
inc
xchg
cmp
mov
shl
lock
jo
or
rcrb
sub
into
jnp
xchg
cmp
pop
and
add
push
xchg
dec
cmpsl
outsb
repz
or
add
and
decb
mov
jne
out
ss
je
and
xchg
movsl
mov
popf
cmp
scas
icebp
lret
cld
pop
mov
cmp
out
outsb
adc
lods
mov
stos
or
mov
shl
pushf
inc
sbb
ljmp
incl
pushf
mov
pop
sbb
sub
aad
dec
fs
push
xor
in
inc
xchg
lods
scas
scas
push
loopne
jle
cmp
jmp
popa
sahf
ffreep
push
loope
pop
stc
add
call
cmp
in
add
adc
das
test
sub
imul
mov
das
into
pop
in
mov
int3
xor
mov
xchg
arpl
pop
push
fisubrl
adc
repnz
dec
ss
xor
cmp
nop
push
or
mov
cmpsl
push
jnp
mov
xor
inc
movl
fnstsw
out
xchg
das
dec
roll
mov
mov
inc
iret
scas
rcrb
push
nop
fwait
adc
cli
sti
add
int
lods
int3
push
mov
xor
enter
jp
rolb
and
pop
lahf
and
cmp
jnp
jo
faddl
fs
xchg
and
xchg
cmc
pop
outsb
xchg
cld
sub
into
enter
repnz
and
xchg
mov
clc
dec
out
inc
fwait
sbb
arpl
cmp
loope
in
sub
xor
push
pop
or
add
call
sti
xchg
xchg
mov
mov
lock
outsb
pop
out
xor
icebp
xor
push
inc
jae
jns
lahf
inc
cmp
cmp
mov
pop
xor
mov
fchs
lock
nop
ret
imul
sbb
mov
jb
jae
jp
in
imul
andl
pop
sbb
adc
mov
xor
pop
push
daa
mov
cld
mov
aam
cmp
movsb
or
test
popf
fsubrs
mov
push
aaa
std
add
int3
call
nop
xchg
in
pop
clc
rcll
and
and
jae
jae
adc
scas
xor
or
pop
mov
pop
cmp
pop
test
es
cmp
and
xchg
dec
js
popf
push
jle
out
loop
dec
dec
pop
shl
adc
pusha
cmc
xor
stos
stos
mov
push
mov
xorb
or
aas
test
scas
js
lret
push
mov
dec
mov
xor
mov
js
aam
sbb
jns
test
sub
inc
pusha
pop
rclb
fwait
inc
pop
loop
jno
add
cltd
mov
jb
xor
fwait
add
xor
test
inc
aas
fcmovnb
cmp
repz
and
mov
jmp
repz
pop
push
pop
jbe
outsb
mov
popf
popf
mov
inc
daa
ljmp
sbb
sarb
sti
xchg
mov
shll
push
xchg
mov
sbb
cltd
mov
sub
push
fwait
mov
mov
jns
mov
sahf
out
sub
mov
adc
cltd
in
mov
scas
imulb
shlb
loope
outsb
sbb
pop
jl
fists
fcomi
inc
cli
testb
inc
rcr
push
std
pop
fnsave
sub
roll
fsts
out
and
xchg
lea
or
xor
inc
ljmp
sbb
adc
cwtl
xor
mov
cmp
pop
addr16
loop
add
xorb
enter
mov
movsb
add
cld
test
cmp
popf
push
loopne
aad
ret
and
pop
inc
dec
cmp
into
aam
mov
out
pop
inc
cmp
leave
add
mov
xor
push
les
mov
push
pmaxsw
cmpsb
push
jo
out
dec
xchg
stc
fcomps
mov
xor
or
cmp
rep
movsl
je
and
xlat
jbe
push
addl
mov
jo
fsubs
fxch
inc
ja
mov
push
call
jb
test
inc
fnstenv
rcll
imul
fisubrs
enter
insl
pop
cmpsl
data16
fcmovne
mov
test
std
sub
dec
push
emms
bound
and
add
xchg
scas
cltd
icebp
scas
lock
jnp
mov
sub
cmp
psubsw
jg
mov
int3
inc
adc
popf
adc
push
movsb
jg
scas
roll
es
fildll
sub
out
mov
dec
mov
lock
cmpsl
or
sub
inc
pop
dec
arpl
jb
push
push
test
ds
xor
fisubrs
jae
and
mov
mov
pop
pop
add
xchg
lcall
xchg
fwait
add
push
sbb
loop
adc
out
out
or
cld
mov
mov
in
mov
fstpl
jb
ljmp
sub
xor
pop
xchg
inc
repz
inc
inc
ret
es
scas
js
sbb
xchg
in
ljmp
cmp
mov
or
mov
dec
icebp
xchg
push
add
dec
lahf
jno
addl
rcrb
sub
xor
test
pop
adc
outsb
dec
mov
xor
cld
add
test
repz
push
inc
add
and
jmp
mov
daa
arpl
clc
sub
jl
push
movsb
mov
insl
mov
ja
cs
cmp
push
mov
lret
add
cs
dec
icebp
ret
cmp
mov
scas
sub
mov
mov
sub
cltd
and
xchg
out
std
xor
popf
add
xor
jmp
inc
subb
lock
lcall
in
test
test
xlat
push
in
xor
cmp
pop
xchg
lods
adc
mov
mov
insb
out
sub
mov
aas
lret
outsb
je
dec
pop
fidivrs
pop
inc
sub
add
jno
andb
xchg
push
and
xchg
xlat
das
xor
test
sbbb
inc
cmp
dec
cmp
pop
call
mov
jns
lcall
sub
inc
les
pop
xchg
in
sahf
popf
pop
addr16
ja
and
jae
fcmovnb
out
loopne
test
push
xchg
add
into
cmp
sti
and
int3
xchg
sbb
cltd
in
xor
in
add
jno
mov
repnz
adc
and
jae
fcompl
imul
push
je
jo
inc
mov
sahf
divb
push
sahf
cmp
in
sahf
in
nop
push
xor
stos
je
or
push
adc
inc
loop
mov
int3
mov
enter
pop
outsl
dec
dec
out
lock
sbb
in
hlt
shll
push
mov
shrl
les
jp
mov
loope
lea
inc
push
mov
and
cmc
stos
sbb
aas
mov
out
adc
fucomp
pop
les
mov
jl
popa
jno
xor
inc
dec
sbb
lds
shrl
inc
cmp
fbld
jecxz
push
fisubl
jecxz
std
xchg
mov
xchg
loope
push
popf
inc
pop
stos
mov
mov
mov
jg
popf
subl
xchg
push
int
jg
cltd
mov
dec
mov
jb
pop
dec
adc
ficompl
test
call
xorl
xor
add
mov
in
fsubp
mov
mov
cmp
jns
movsb
xchg
sub
pop
jno
mov
and
mov
xorl
out
in
clc
cmpsb
mov
das
sbb
aad
xchg
adc
pop
jae
push
test
in
je
and
sbb
jae
jae
push
and
cs
aam
shr
in
dec
repz
repnz
dec
rcl
dec
pop
iret
push
test
mov
fidivrl
jne
sbb
inc
sysexit
adc
pusha
jbe
jmp
add
aam
orl
xlat
mov
pusha
scas
into
dec
or
inc
clc
divl
adc
fiaddl
nop
repnz
fidivrl
shlb
or
stos
jg
push
lods
scas
push
nop
out
sbb
sbb
sub
cmp
divb
push
lcall
test
in
in
mov
and
push
mov
movsl
push
add
push
js
mov
push
cmp
jb
fisubrl
add
and
pop
add
push
cltd
sub
test
insl
add
gs
mov
movsl
aam
ja
adc
mov
mov
stos
mov
cwtl
sub
outsl
or
les
cmpsl
adc
mov
push
jns
pop
adc
inc
ror
jg
inc
mov
sbb
mov
insl
test
dec
pop
maxps
add
push
inc
jbe
jo
call
inc
shr
data16
ret
dec
test
es
jns
out
and
mov
push
nop
lods
outsb
jae
fldl
adc
inc
insb
call
mov
movsl
in
xor
pop
fists
data16
outsb
daa
or
mov
lds
xchg
push
icebp
leave
sahf
aam
fwait
mov
xchg
jb
sbb
lods
jno
mov
cld
sbb
inc
xchg
xchg
xchg
into
lret
pop
ret
test
in
sub
jnp
sti
mov
cli
sti
xchg
leave
test
pop
fildl
mov
push
arpl
icebp
out
or
outsl
jne
pop
cmp
aam
shrl
loope
push
subb
and
popa
mov
mov
push
cltd
int
in
xchg
pop
dec
rcll
xchg
mov
push
jp
shlb
scas
sub
rcll
bound
cmpsl
aad
inc
loop
mov
pop
call
sbb
mov
sbb
mov
ljmp
and
cmp
sbb
or
jbe
call
mov
jb
xchg
imul
repnz
jp
sub
push
xor
dec
scas
dec
icebp
arpl
pop
addr16
inc
xor
mov
inc
insl
loop
add
adc
das
sub
je
or
fldpi
lock
xchg
jbe
pop
cmpsb
rcrl
popa
pusha
icebp
stos
pop
divl
xor
imul
jmp
xchg
add
mov
cwtl
add
ds
sub
add
pushf
pop
sub
adc
mov
adc
cmp
dec
and
mov
dec
inc
push
loop
dec
pop
addl
jp
xor
inc
xchg
jle
xchg
sub
sarl
add
mov
mov
or
jle
sub
and
cli
imul
dec
loop
xchg
and
mov
mov
xor
fsubrp
pop
iret
xor
cmp
aaa
enter
aad
and
imul
cwtl
xor
in
loope
xlat
addl
push
xor
dec
sbb
stc
dec
mov
cmpsb
push
push
add
cltd
pop
mov
ret
push
and
lcall
mov
pusha
fisttps
iret
pop
sbb
daa
and
je
mov
hlt
and
icebp
or
pop
add
cwtl
mov
dec
imul
test
mov
mov
lgs
outsb
mov
pop
js
mov
mov
int3
int
jno
mov
xor
sub
sti
cwtl
icebp
popa
and
mov
cmp
inc
repz
cmp
hlt
in
mov
insb
cmp
fldcw
addr16
in
add
pop
andb
sub
xlat
xchg
sbb
pop
xchg
shll
imul
mov
push
pushl
add
xchg
mov
jg
pop
in
gs
arpl
out
out
int3
mov
xor
xchg
jns
fisttps
pop
cmpsb
sbb
arpl
aad
shlb
aas
mov
sbb
call
in
xor
push
sub
out
mov
movsb
imul
inc
fcoms
xchg
xor
mov
inc
adc
cmpsb
iret
push
sarl
dec
js
insl
lock
mov
lea
cmp
cltd
inc
xor
or
add
sub
stos
xor
mov
xchg
jno
data16
add
lret
aas
dec
jae
cld
std
cli
cmp
sub
notl
pop
enter
and
and
iret
iret
mov
dec
mov
mov
mov
sub
push
or
iret
xchg
or
ljmp
cmpsb
and
pop
cltd
xchg
or
push
fidivl
std
cmpl
mov
orl
cli
ja
in
inc
aas
inc
or
or
mov
mov
dec
cli
dec
outsb
push
bound
add
sbb
add
loop
pop
in
xchg
jmp
dec
jmp
dec
sub
cmpsl
rcrl
jae
lahf
mov
cli
mov
fistps
xchg
sti
arpl
adc
pop
fiadds
rclb
fldenv
push
mov
jb
cmp
push
nop
jp
out
ljmp
leave
push
dec
push
jne
outsl
orl
fmul
aaa
test
dec
cmp
xchg
inc
aad
insl
sbb
xchg
mov
jne
xlat
mov
cwtl
xchg
inc
dec
dec
fbld
inc
or
mov
push
ja
push
xchg
add
add
stos
xchg
cmc
cld
cmp
inc
or
cmp
mov
adc
loopne
or
leave
out
adc
daa
lahf
push
jns
xchg
xchg
ret
movsb
dec
popf
inc
add
mov
jo
sub
mov
mov
ja
push
repnz
pop
push
xchg
arpl
jbe
jge
orl
scas
cmpsb
imul
push
xchg
fstps
ficompl
mov
les
mov
repz
cmp
mov
outsb
mov
ss
and
popl
loopne
jno
sbb
jp
aas
sahf
out
mov
adc
ds
mov
dec
sub
jle
rorb
nop
in
stc
lods
in
xchg
sbb
adc
iret
push
mov
negb
inc
ret
add
test
lea
ja
inc
popf
out
fwait
leave
mov
mov
push
das
push
pusha
or
scas
fcomps
adc
push
std
xor
enter
inc
pushf
in
sar
std
mov
aad
pop
xor
idivb
dec
mov
add
lea
xchg
int
and
adc
pushf
repz
arpl
adc
mov
adc
cli
ss
jb
jl
cli
xor
lods
lcall
dec
sub
xchg
pop
mov
mov
jae
insl
lds
aad
or
test
mov
cmp
add
out
xchg
repz
movsl
dec
icebp
mov
ja
and
insb
daa
mov
xor
inc
lds
inc
dec
jecxz
lret
pop
xor
mov
pop
int
call
pushf
add
xor
sub
dec
gs
mov
aad
fs
cmp
xchg
shll
popa
mov
dec
clc
loope
in
pop
xchg
inc
daa
jb
xor
push
sarl
das
jo
add
loope
lock
pop
jnp
cmp
xorl
jns
dec
push
inc
outsl
mov
pop
outsb
and
mov
pop
pop
jmp
mul
inc
cmp
addr16
pop
sub
sti
mov
push
jge
mov
out
add
call
sub
adc
sarb
bound
push
pop
jg
aaa
outsl
enter
dec
addl
dec
aad
ss
push
sub
cmp
scas
mov
div
jno
rorl
push
and
mov
xchg
lcall
sub
xchg
lret
daa
stos
in
jne
shrb
mov
cs
ljmp
popa
cli
push
or
mov
arpl
push
mov
in
jge
lcall
jne
sti
sub
hlt
popa
out
mov
rcll
idivl
jae
xchg
into
add
push
and
aad
dec
xor
divb
icebp
int3
ds
or
outsl
fisttpll
push
stc
sahf
seto
add
add
pop
les
push
test
push
in
popf
popa
lret
cmpsl
push
xor
cltd
in
imul
adc
aam
fbstp
pushf
mov
xchg
ss
and
sub
pop
pop
mov
push
lds
repz
pop
imul
hlt
mov
out
test
pop
mov
arpl
int3
push
shrb
jmp
pop
in
mov
pop
sbb
mov
lds
ljmp
dec
arpl
aas
push
jg
xchg
add
mov
add
jmp
test
mov
mov
repz
xchg
dec
mov
inc
cmp
testb
mov
std
popf
mov
rolb
movsb
sarb
and
jmp
ffreep
imul
push
lret
scas
push
xchg
jbe
shlb
dec
mov
mov
dec
pop
stos
mov
sub
test
in
push
mov
int
test
fwait
loop
mov
or
pop
outsl
insb
repz
repz
and
fwait
sbb
insl
idivl
or
xchg
adc
jecxz
out
jge
dec
sbb
and
adc
gs
repz
bound
rcrl
inc
outsb
stos
les
lock
test
lret
or
jmp
loop
divb
or
cmpsl
ss
std
or
fwait
rcl
push
push
imul
inc
xchg
scas
fbld
mov
sbb
inc
arpl
outsb
arpl
lahf
mov
inc
fdivr
push
jg
fidivrl
das
outsb
std
cmp
pop
pusha
scas
aaa
cmpl
shll
sti
pop
sti
mov
das
cltd
lret
jae
add
pop
in
fs
test
push
sub
mov
mov
jne
inc
fdivr
lods
dec
push
mov
jge
dec
jle
or
xchg
jne
or
cmp
xor
and
mov
shr
shll
cmp
cwtl
push
mov
ja
xchg
scas
inc
mov
notl
mov
daa
sub
jne
lods
pop
test
mov
cmp
jmp
lock
rep
adc
push
loop
push
mov
fstps
cs
ret
add
fisttpll
xlat
sti
pushf
dec
repz
dec
xchg
inc
ret
repz
lret
mov
add
jecxz
mov
fisttps
imul
sti
sub
xor
mov
cmp
add
mov
jecxz
cmc
jb
mov
push
xchg
sarb
std
in
cli
pop
outsl
inc
push
ret
stos
add
xor
into
shrb
movsb
push
pop
pop
int3
pop
addr16
mov
pop
test
xor
pop
cltd
mov
orl
int3
mov
mov
or
push
mov
notb
fdivrl
les
sub
push
insl
hlt
mov
sbb
cld
and
dec
push
xor
jmp
lcall
lods
sbb
adc
push
daa
cltd
mov
xlat
aam
cmp
out
pushf
in
xchg
imul
jecxz
inc
bnd
mov
cmp
nop
xchg
pusha
js
cmp
adc
ja
sti
xchg
push
outsb
fstps
sti
test
jns
jp
mov
int
jns
add
push
pop
jnp
xor
sub
jl
rcrl
xor
or
jle
xchg
scas
pop
sbb
jns
pop
and
repnz
jp
andb
cmc
dec
jge,pn
sub
push
mov
dec
in
dec
mov
in
and
jae
mov
loop
or
sub
lahf
sbb
inc
pop
dec
es
xor
mov
xor
push
adc
rorb
aad
cmp
push
inc
sub
setge
fcom
fidivs
or
jp
out
icebp
cmc
imul
stos
mov
push
xor
lds
fadd
imul
jo
push
adc
out
jg
pop
push
mov
and
stos
and
xorl
mov
fwait
enter
push
sbb
rorb
jns
jns
push
insb
adcb
int
push
ret
xor
popa
lds
push
movsb
adc
jo
aad
adc
arpl
push
in
stc
xor
sub
daa
mov
aaa
data16
pop
pop
jmp
pop
mov
pop
pop
test
push
inc
mov
mov
scas
outsl
out
sti
xchg
pause
popf
fbstp
cltd
out
adc
mov
jae
notl
or
inc
push
pop
idivl
out
pop
mov
lcall
int3
adc
es
rclb
sti
jge
sbb
lods
jnp
dec
popa
jmp
xchg
mov
cmpsl
outsl
pop
push
cmp
scas
mov
stc
movsb
repnz
jae
addb
test
sete
sahf
js
dec
xor
ret
imul
cltd
dec
into
dec
adc
clc
sbb
shrb
pop
fisubl
jmp
rcrb
out
jge
mov
dec
inc
push
pop
insb
dec
mov
jl
xchg
out
cmp
xor
jge
push
mov
ds
fildl
mov
sbb
xchg
ret
leave
lods
arpl
jle
push
cltd
dec
push
aad
ret
lds
pop
idiv
pop
jl
sbb
cmp
lret
je
rcrl
nop
cmp
int
jnp
or
inc
fwait
and
mov
cli
lods
movb
loope
shlb
sub
inc
sub
not
xor
push
sti
cmpsb
xchg
pop
sub
jmp
addr16
pop
out
sbb
or
mov
push
mov
adc
in
jns
and
inc
or
lcall
cmp
movsl
leave
inc
sub
and
jb
ja
dec
xor
pusha
mov
xchg
or
lods
cmp
mov
in
push
adc
movsb
jno
fsubr
fldl
loop
xchg
imul
and
int
push
testl
xchg
xor
mov
imul
pop
test
jmp
scas
inc
pop
sub
stos
xor
or
adc
aaa
icebp
xor
repnz
ljmp
test
jbe
jb
aam
outsb
sbb
mov
je
xor
inc
and
aas
xchg
mov
mov
rcrb
inc
pop
in
xor
cmc
xor
into
xor
ds
cltd
and
mov
call
enter
out
mov
jmp
and
addr16
and
shr
andb
xchg
jge
add
loop
jmp
test
pop
or
gs
jae
sbb
sub
pop
iret
int3
insb
ljmp
repnz
dec
jg
call
inc
cmovbe
push
pop
mov
outsl
dec
or
xchg
ret
xchg
xchg
mov
inc
testb
sub
mov
inc
adc
leave
fidivrs
stc
loope
ja
xchg
in
mov
pop
inc
pop
aaa
jae
cmp
les
movsb
inc
jno
push
cld
nop
cmc
dec
imul
les
cwtl
mov
cmp
cltd
dec
lret
jno
test
lea
loop
adc
sbb
loope
imul
mov
lds
jp
mov
push
mov
sahf
ljmp
fsub
mov
loope
cmp
or
icebp
jno
mov
fwait
lods
data16
sbb
gs
pushf
inc
or
out
jns
ret
call
mov
scas
sti
sbb
or
jp
clc
xor
cmp
mov
pop
pop
fbstp
repnz
mov
subl
stos
xchg
leave
xor
mov
mov
stc
pop
xchg
xor
test
sti
push
or
xor
dec
das
mov
ret
icebp
std
jecxz
adc
lods
jle
test
mov
jb
outsb
sub
push
inc
jg
mov
cwtl
sub
adcl
outsl
test
movsb
jle
add
dec
mov
divl
mov
imul
subb
aam
insb
xchg
lcall
mov
test
push
repnz
and
push
jp
test
mov
mov
shld
jno
inc
out
push
adcb
sub
iret
movl
add
lods
gs
lods
je
fnstsw
push
push
xchg
pop
dec
movsb
clc
xchg
mov
mov
jl
outsb
mov
out
cmp
mov
data16
hlt
dec
inc
inc
out
cmp
sbb
dec
push
ja
popf
out
je
and
push
jae
xor
out
dec
adc
lahf
outsb
ljmp
pop
mov
sbb
out
jbe
cmpsl
insl
mov
cmp
add
cmpsl
add
lods
rorl
fistpll
jle
jne
in
push
mov
fdivrs
fcompl
fstpt
jns
xor
data16
push
loopne
enter
adc
jno
int3
jns
and
xor
xchg
push
mov
and
jg
cmc
rcrb
enter
xor
sub
or
mov
pop
dec
dec
scas
pop
adc
movsl
mov
dec
mov
data16
cmp
js
dec
or
shrb
lret
dec
inc
inc
repz
push
insb
push
inc
aaa
mov
or
mov
out
subl
loopne
sahf
push
cltd
jmp
aaa
sbb
adc
data16
psadbw
mov
mull
jg
xor
test
and
mov
cs
push
stos
and
sub
aad
cmp
dec
inc
sub
mov
pop
stc
mov
push
inc
lcall
lods
mov
sarb
pop
pop
and
lret
in
jo
loop
or
inc
mov
jmp
cmovs
xchg
pop
lahf
inc
cmp
inc
adc
mov
cmp
push
lret
xor
outsb
ret
ds
xor
xor
lret
cmc
mov
pop
divb
add
sub
out
test
sbb
out
mov
data16
mov
push
dec
fisttps
push
hlt
loop
repz
negb
shl
icebp
rol
add
adc
mov
arpl
or
mov
ja
mov
cmp
xchg
pop
mov
nop
fdiv
ljmp
dec
fcoml
lea
scas
sbb
lahf
in
sbb
inc
cmp
mov
or
loop
mov
push
ss
fwait
ljmp
cs
out
xchg
xchg
mov
fists
xor
adc
lods
cwtl
pop
popa
addr16
push
pushf
mov
mov
fstp
mov
pusha
pusha
fstpt
adc
lret
pop
aaa
inc
ret
push
mov
lcall
pop
pop
ds
jne
popa
jae
sub
lret
clc
mov
addr16
mov
shl
mov
xchg
sbbb
mov
xor
lea
rclb
and
adc
cmp
leave
lcall
sbb
insb
fnstcw
jp
push
mov
and
inc
cmc
stos
enter
xchg
sub
lock
nop
incb
and
jae
jbe
test
cmp
dec
nop
inc
pop
shll
xor
cmc
add
shlb
push
ljmp
and
and
inc
xchg
dec
mov
pop
or
dec
pop
insb
push
movsb
cmpsl
outsb
mul
loop
lods
mov
iret
lret
push
int3
mov
jmp
andl
cmc
call
scas
and
adcb
test
inc
loopne
mov
clc
daa
pop
inc
test
mov
xchg
idiv
adc
add
dec
clc
xchg
sarb
fcomps
push
cs
sub
adc
stos
and
push
nop
jns
call
adc
add
mov
sbb
mov
xor
sahf
mov
cwtl
in
add
fnstenv
or
nop
fwait
xchg
mov
rclb
sub
and
daa
jns
ss
jmp
jecxz
xor
stos
scas
stos
aad
arpl
fstl
cwtl
iret
std
lret
es
in
fistpll
shlb
scas
add
or
push
mov
js
stos
xchg
mov
mov
test
fimull
xor
push
or
jbe
iret
mov
aad
fstps
rorb
stc
test
xchg
or
mov
cmpb
adc
rorl
and
jne
lds
adc
push
movsl
fisubrs
sub
fldl
arpl
inc
pusha
cmp
lcall
mov
arpl
cmp
roll
out
sarb
sbb
test
sbb
fidivl
out
int3
nopl
mov
out
jle
jmp
xchg
jnp
nop
xchg
mov
fwait
xchg
mov
add
cmpsb
mov
imul
and
data16
mov
pop
jnp
jne
lret
or
jo
jno
mov
pop
add
cmp
push
fdivrl
or
imull
inc
jg
imul
fstpl
pop
lock
mov
inc
and
xchg
in
in
sub
push
pop
movsb
sbb
out
xchg
and
add
add
mov
xor
repnz
pop
xchg
mov
push
sub
mov
jo
jns
push
rcrb
dec
gs
lret
push
cmc
push
jne
xchg
mov
cmp
movsl
xchg
or
mov
cmp
dec
iret
pop
pop
dec
aam
fnstcw
out
pop
lea
popa
xor
cmp
stos
fwait
xchg
into
xor
ja
aam
pop
xchg
in
mov
cmp
ror
mov
shlb
jbe
aam
and
sbb
pusha
lahf
inc
popa
push
sahf
cmp
adc
push
jmp
sub
sub
cmpsl
fisttps
sbb
in
enter
mov
dec
cld
jle
xor
lret
dec
lock
fisubl
mov
and
out
icebp
aas
imul
mov
jecxz
fs
clc
cmp
out
popf
outsb
shl
ss
push
sub
incl
adc
out
cltd
adc
push
pop
xor
adc
out
mov
lock
inc
sub
xor
pusha
mov
bound
js
cmp
divl
das
xor
fwait
insb
clc
xchg
not
mov
fdivrs
push
or
add
ficoms
sub
xor
lret
inc
xchg
mov
adc
push
incl
clc
jbe
jg
push
add
addr16
jb
std
sti
popf
mov
popa
test
std
js
pop
jbe
imul
mov
popa
in
push
mov
loopne
xchg
xchg
int
push
and
pop
idivl
ficoml
pusha
jmp
xchg
sbb
and
ss
stos
jmp
pushf
fldenv
dec
test
mov
fsubrp
pop
call
or
in
sbb
hlt
sbb
ja
jecxz
icebp
rcr
lahf
push
xor
push
leave
add
jecxz
add
clc
fnstcw
jb
mov
dec
adc
xchg
xchg
xlat
insl
or
lret
and
imul
in
clc
and
test
jno
xor
sarb
push
aas
sub
adc
pop
int3
push
dec
stos
fwait
cmp
andl
fildl
sahf
clc
vmovsd
pop
dec
sti
outsl
test
sbb
mov
rol
push
add
popl
cmp
mov
xchg
inc
mov
xor
xor
aas
push
test
cmp
mov
std
or
pushf
xor
xor
sub
sti
cmpsl
std
push
pop
cmpsb
fimull
or
add
mov
push
test
add
sahf
adc
push
jg
in
loopne
imul
cmpsl
gs
dec
icebp
mov
dec
mov
sbb
leave
stos
arpl
jmp
inc
dec
mov
sub
push
add
int
andl
int
aad
hlt
lahf
ljmp
test
adc
icebp
cltd
jbe
push
mov
cmp
dec
mov
xchg
test
mov
xor
dec
ret
or
cmpsl
lods
jnp
sub
lods
mov
pop
jmp
stos
push
idivl
add
outsl
mov
xchg
cmp
ja
scas
gs
imul
scas
adc
pusha
and
and
in
test
push
movb
aam
dec
adc
pusha
push
inc
push
mov
loope
shlb
fiadds
test
pop
enter
pop
push
xchg
cmp
cmp
push
add
mov
movsl
xchg
aas
scas
adc
call
iret
lcall
pusha
roll
bound
pop
rorl
mov
add
movsb
aam
in
and
cwtl
int3
fstl
inc
mov
sub
std
std
mov
mov
aaa
insl
push
adc
mov
lret
jne
call
sbb
outsb
or
and
sub
sub
add
inc
dec
inc
cmp
in
mov
fneni(8087
insb
das
or
pop
xchg
stos
pop
jbe
stos
and
aaa
mov
sbb
inc
adc
xchg
pop
adc
bound
rcrb
push
and
pusha
or
xchg
outsl
jl
test
das
lea
cwtl
out
int3
adc
sbb
sahf
mov
rcrb
clc
jle
and
imul
int
and
es
sarb
xor
in
mov
fstpt
out
mov
pop
sub
lcall
gs
push
aas
jnp
cmpsb
jns
daa
or
and
das
test
flds
out
and
sbb
std
addr16
pop
in
add
add
push
mov
inc
push
lea
adc
jle
rolb
fcoms
ds
cmp
adc
xorb
xor
pop
pushf
or
fs
cmp
loopne
lds
decb
cmp
ss
add
cmp
cs
jp
or
jle
lds
aam
in
movsb
inc
mov
mov
xchg
pop
inc
fsubl
mov
cltd
dec
scas
mov
shrb
pusha
or
jl
or
mov
add
jecxz
pop
dec
sbb
mov
adc
add
nop/reserved
mov
cmpsb
pop
cltd
hlt
inc
movsl
mov
aas
pop
jb
mov
lock
cmp
test
jnp
and
pop
xchg
sub
addps
popf
maskmovq
or
mov
mov
jnp
sub
sahf
or
and
cwtl
in
sub
sar
and
sahf
inc
popa
inc
cmp
cmp
inc
inc
xor
adc
sahf
lahf
pop
test
adc
mov
cmpsb
icebp
cmp
pop
lahf
xor
dec
push
jge
pop
or
jp
jmp
icebp
sbb
xchg
mov
stos
jo
push
nop
idiv
jae
mov
int
add
ret
mov
ret
test
jo
ds
or
adcl
inc
cmp
xor
push
add
inc
fsubr
out
dec
mov
fs
cmpsl
or
cmc
decb
mov
mov
test
mov
lea
push
stos
sub
xor
push
or
aaa
inc
stos
mov
push
mov
dec
jecxz
or
adc
sbb
int
sub
imul
repnz
insb
xor
adc
xchg
fwait
mov
imul
lret
fnsetpm(287
bound
cmc
push
in
in
add
pop
lods
ljmp
mov
xchg
jne
loop
xchg
jge
pusha
inc
mov
sub
fnsave
clc
or
lcall
nop
loopne
nop
test
aad
lret
lds
ss
sub
xchg
push
pushf
xchg
mov
or
mov
aaa
cmc
pop
pop
mov
bswap
pop
test
push
mov
mov
cld
aad
idivb
test
inc
stos
adc
negb
aas
loope
outsl
jo
into
mov
int3
stc
clc
sbb
in
add
sbb
sbb
adc
cmp
mov
xorl
and
movl
mov
push
mov
in
cmp
dec
pop
in
sti
adc
push
lods
std
lret
adc
neg
pop
push
je
xor
jnp
ja
fcomps
adc
jno
cmpsb
lcall
push
pop
outsb
int3
sarb
hlt
add
addl
pop
pop
adc
icebp
call
lods
mov
pop
xchg
mov
jg
mov
cmp
loopne
andl
or
in
lret
fdivp
decb
and
cmp
fisubrs
lods
mov
add
rol
lcall
pusha
mov
cwtl
fstps
mov
sub
addl
stos
shrl
bound
xor
insl
sbb
sti
inc
pop
outsl
negb
stc
cmp
jno
or
push
gs
add
ret
add
ret
add
jge
add
in
dec
jp
enter
outsl
jne
mov
cmp
xor
xor
dec
mov
and
ja
push
mov
cwtl
push
shl
ret
cmp
and
ret
hlt
or
addr16
popa
jb
and
inc
dec
movsb
in
inc
adc
pop
add
lods
pop
mov
cltd
pop
out
mov
jo
pushf
sub
in
loope
loop
lret
fmuls
fnstenv
pop
pop
into
loopne
push
mov
mov
adc
jae
scas
imul
or
mov
lods
mov
ficoml
imul
cmc
mov
int
lcall
xchg
pop
outsb
adcl
notl
sahf
shll
mov
push
adcb
fucomp
les
pushf
out
xchg
lret
hlt
add
add
and
adc
insb
or
fdivs
je
sar
je
test
aad
mov
hlt
pop
js
push
lcall
push
loopne
ficoms
pushf
mov
mov
jl
xor
pop
dec
mov
inc
rcrl
cmp
cmp
jmp
fs
arpl
sub
xor
mul
jo
out
out
push
fs
subl
pop
xchg
int3
test
push
add
loope
cmp
mov
ja
in
dec
xchg
sub
mov
js
cwtl
cs
ss
enter
jae
roll
repnz
mov
inc
jno
imul
cltd
jmp
imul
or
shrl
inc
jg
test
shrb
xchg
shr
adc
sbb
or
sub
imul
jmp
lock
rolb
stos
and
aad
lret
sbb
or
popf
lcall
push
dec
rcl
loop
bound
enter
stos
fnstcw
cmp
pop
jecxz
sub
loope
dec
xchg
xchg
dec
sbb
es
push
lret
cltd
inc
icebp
cmp
outsl
in
fadds
movsb
pop
in
pop
inc
mov
ss
mov
push
inc
and
or
add
xor
out
dec
lods
push
sbb
sub
les
popa
dec
das
out
pop
sub
sti
aas
cmp
jle
mov
mov
mov
imul
icebp
push
rorl
jae
jb
ret
and
fwait
andb
movsl
cmpl
push
xor
jne
das
testl
inc
iret
sub
fiaddl
fists
inc
or
add
roll
test
stos
cmp
adc
in
and
ret
cmp
add
pop
iret
int
mov
mov
sbb
aam
jnp
push
shll
push
mov
push
push
xchg
les
addr16
in
scas
or
inc
test
andl
lods
fisttps
popl
int
incl
mov
xchg
xchg
mov
nop
add
stos
inc
mov
popf
sub
mull
dec
movsb
fs
shrl
or
aaa
imulb
mov
cltd
mov
mov
roll
or
sbb
or
inc
int3
inc
out
lea
pop
mov
lock
aas
aam
les
in
cmp
xchg
aas
adc
cmpsl
pop
pop
mov
and
xor
mov
xor
mov
and
jno
sbb
jp
xchg
xor
or
lea
mov
push
cmp
in
dec
mov
pushf
jp
cs
popa
inc
cmovl
inc
dec
shr
pop
mov
jle
mov
test
push
std
les
sub
shll
xchg
lea
mov
push
xchg
jae
cmp
and
add
cmp
outsl
xchg
sbb
dec
xchg
sbbl
jg
jge
bound
and
mov
cmc
cld
push
shrl
dec
int3
sub
cltd
ss
cmp
es
repz
and
push
sbb
lahf
lock
sets
mov
push
dec
jp
push
popa
xor
dec
inc
loope
and
adc
cmpsb
jle
add
aaa
cmc
out
movsl
or
pushf
test
in
imul
xchg
mov
test
dec
add
jne
sbb
adc
lock
mov
arpl
ret
std
fldt
decl
xchg
lods
or
cli
test
xchg
cmpsb
add
xor
lahf
outsl
jne
rcll
in
out
outsl
xchg
ret
push
mov
or
dec
bnd
and
je
enter
sbb
inc
push
popa
sbb
xlat
test
pop
xlat
xor
mov
adc
ret
ficoms
call
jecxz
and
in
or
ror
sub
sbb
mov
sti
ds
outsl
pop
dec
push
jecxz
inc
ret
cmp
or
pop
stc
stos
mov
icebp
mov
push
xchg
pop
inc
inc
xchg
mov
scas
mov
and
adcb
iret
adc
clc
stos
movsb
jnp
sub
jae
pop
sub
nop
ss
sub
mov
and
add
in
xor
call
cmp
ds
aaa
push
push
sbb
or
dec
push
daa
aad
mov
mov
or
inc
clc
stc
jns
mov
xor
cmpsb
push
andl
push
jae
lcall
out
pop
push
pop
sub
jmp
xchg
jnp
adc
sub
dec
sbb
mov
das
sub
lods
in
insb
mov
cmpsb
leave
mov
mov
mov
dec
rcrb
sbbb
cmp
dec
push
int3
mov
xchg
push
add
mov
dec
dec
test
xchg
cli
push
cwtl
or
insl
out
xlat
enter
add
movsl
mov
rolb
jne
sbb
fldenv
mov
icebp
jmp
or
into
aad
push
adc
enter
xchg
jnp
fwait
imul
insb
inc
mov
mov
lds
ret
mov
or
jbe
push
push
lods
movsl
outsl
sbb
mov
jecxz
cltd
jge
mov
enter
sbb
sub
stos
icebp
sbb
out
std
add
cmpsb
test
stos
push
dec
daa
xor
inc
inc
cmp
dec
sub
sbb
das
xchg
add
sarl
bnd
mov
mov
mov
push
lods
xchg
push
in
jp
inc
xchg
pop
sbb
and
test
or
fldln2
ja
leave
and
fdivr
push
hlt
out
and
jmp
sub
psubb
int
pop
jl
jmp
aas
sti
or
cmpb
or
scas
mov
mov
and
jo
cmp
and
jno
js
jmp
inc
inc
mov
cmp
in
fstpl
lret
int3
and
lret
mov
fmul
dec
jo
cmp
bound
mov
cltd
sbb
push
mov
int3
xchg
test
fdiv
int3
mov
movsl
mov
sub
rol
mov
aad
outsb
ljmp
sbb
fdivrl
cmp
mov
adc
inc
call
or
or
loop
xchg
out
shrb
negb
daa
loope
mov
popf
xchg
roll
rcl
mov
rcll
lea
jle
xor
lret
insl
mov
sahf
jo
in
bound
cld
sub
rclb
inc
sbb
fucomip
and
ja
dec
bound
in
jmp
shrb
stos
push
pop
add
out
dec
mov
jp
je
into
mov
ljmp
iret
add
and
mov
push
dec
fmull
cs
test
daa
lds
and
jecxz
mull
fistl
push
scas
pop
or
js
cmpsb
shll
or
xchg
adc
xchg
ds
adc
or
add
lret
adc
adc
cmpsl
jae
in
insb
push
or
xor
or
or
sbb
aaa
inc
addl
sarb
mov
xchg
fmulp
mov
ret
xchg
inc
push
mov
repnz
ds
and
fwait
adc
aas
mov
push
stos
adcl
mov
ret
mov
jbe
push
and
mov
data16
jl
fisttpll
stos
pop
mov
test
lds
shr
jp
or
pop
cmp
shll
shl
das
shl
ljmp
stos
cmp
addr16
push
lds
in
or
addr16
mov
enter
aaa
ljmp
mov
jnp
xchg
jl
out
ja
dec
int3
jbe
ja
out
add
and
fiaddl
push
mov
or
leave
popf
jbe
cmp
mov
lea
mov
mov
dec
cmpsl
jmp
mov
shll
mov
inc
adcl
and
sub
add
xlat
cmp
int3
in
sub
fcmovu
fbld
call
adc
cmc
sub
scas
js
adc
or
mov
inc
cmp
pop
repz
xor
test
pop
cmp
adc
dec
push
xor
ljmp
mov
dec
inc
pusha
inc
inc
push
inc
std
inc
pop
mov
in
mov
sarb
and
xorb
jnp
shlb
xchg
dec
aas
or
enter
out
push
in
aas
ja
rcr
les
mov
lods
out
ficompl
fs
incl
stos
orl
stos
cmp
dec
scas
mov
insb
hlt
les
sub
add
daa
in
pop
add
xorl
fildl
fldcw
sub
sbb
push
aaa
out
sub
bound
mov
repnz
xchg
mov
mov
jns
fbld
sub
lret
in
arpl
lock
pop
and
xor
sbb
nop
aad
popa
jae
loop
mov
push
rcrb
inc
aam
popa
std
out
push
and
loope
movsl
jp
xchg
adc
jae
mov
jae
fwait
sub
inc
jbe
pop
inc
cwtl
gs
mov
cmp
sub
imul
aas
leave
cmp
pop
scas
in
daa
test
push
pop
jp
mov
push
add
mov
popf
inc
sbb
enter
test
dec
xor
mov
dec
mov
pop
inc
cmpsl
shrl
fdivr
daa
lea
cmpsl
shll
add
mov
mov
mov
mov
mov
lahf
in
pop
ret
pop
fsubrs
stos
pop
adc
sub
je
dec
js
adc
jle
xorl
pop
cli
sbb
aas
mov
pop
mov
dec
pop
xchg
sbb
push
lock
cld
mov
add
add
xlat
jnp
test
aam
and
in
dec
out
into
out
stc
wrmsr
jl
xchg
mov
jmp
cmp
and
ds
das
mov
ja,pn
ja
out
pusha
lock
sbbl
sbb
movsl
push
or
dec
dec
pop
mov
xchg
sahf
fdivrl
ficomps
cmp
ret
test
pop
sbb
adc
add
aad
sti
out
xchg
aam
lods
scas
and
pop
int
or
loop
jg
pop
jl
pusha
mov
mov
aad
lcall
test
or
movsb
pop
push
inc
push
rcrb
sti
mov
fstl
cmc
mov
mov
pop
pandn
adcb
cs
or
or
dec
sti
cmpsb
aam
and
jge
pushf
mov
cmp
and
adc
call
inc
jle
fnstsw
dec
push
pop
std
jge
sbb
mov
push
test
adc
xor
roll
and
cltd
pop
fs
ss
xchg
shll
push
or
sbb
sub
fildl
inc
outsl
mov
es
dec
adcb
sub
push
or
sbb
cli
in
inc
cmp
imul
push
jb
jg
rclb
push
mov
les
cmp
xchg
cwtl
xchg
xchg
clc
inc
cmpsb
pop
sub
out
mulb
sub
rorl
xchg
pop
push
test
stos
jmp
pop
add
or
scas
je
movsl
pop
hlt
cmp
jnp
stos
ja
cmpsb
inc
insl
pop
addl
fsubs
fwait
xchg
jb
movb
iret
shrb
push
inc
fpatan
xor
pop
push
cs
insl
jp
sbb
jne
fnstsw
add
shrl
cmp
inc
ja
or
testl
pushf
and
add
and
lods
jecxz
aaa
adc
add
push
jle
mov
xorl
dec
dec
fildll
add
pop
imul
lea
stos
stos
nop
dec
outsb
adc
or
fwait
push
std
stos
cmpsb
stos
iret
fiaddl
es
sbb
mov
lret
mov
hlt
xchg
jnp
ljmp
rcr
adc
ficoml
cld
mov
mov
mov
mov
shl
cmp
jb
sbb
hlt
mov
es
mov
push
xchg
mov
cmp
hlt
ss
movsl
jge
imul
xorb
notl
dec
xor
out
or
mov
fcoms
dec
xchg
lds
lahf
into
lds
mov
fisubl
enter
sbb
clc
mov
cmp
xchg
lret
movsb
adc
arpl
jns
dec
push
aam
sub
xchg
mov
lock
dec
sub
mov
aas
shrl
mov
adc
inc
shll
push
lret
mov
iret
stos
fcomip
mov
pop
push
cld
and
in
pop
out
daa
rcll
int
sub
sub
and
cmp
sahf
jno
lret
fdivp
dec
jne
mov
lds
insb
push
jge
sbb
xchg
ljmp
in
aam
mov
jbe
popa
into
test
xlat
fst
and
ss
adc
xchg
jmp
lahf
int
xchg
or
js
add
mov
pop
cmc
test
in
es
ja
stos
stos
or
fdivrs
or
in
lahf
xchg
mov
push
out
sbb
ret
xchg
cmp
mov
outsl
jnp
int3
imull
mov
rcrl
in
pop
ja
aad
mov
faddl
inc
cmp
roll
loop
xchg
mov
and
sbb
add
mov
mov
in
cmpsb
test
f2xm1
cmp
sub
cmc
and
ficoml
ficomps
lds
lret
data16
mov
daa
in
int3
mov
sahf
leave
test
xor
fdivp
loop
jae
stos
lds
inc
ret
in
sbb
cmp
pop
mov
dec
pop
loopne
shll
and
mov
stc
je
add
outsb
adc
ret
push
lret
in
sub
mov
dec
inc
pusha
ret
pop
jbe
jg
push
push
ds
inc
adcb
xor
dec
mov
mov
or
dec
addl
pop
pop
xor
orl
add
push
repnz
sub
pop
es
out
aad
fcompl
icebp
cwtl
aas
subl
shll
aas
ret
aaa
lahf
fnsave
mov
sbb
enter
cmpl
lcall
mov
test
mov
roll
cli
xchg
rcr
adc
cs
add
xchg
push
notb
sub
dec
pop
xor
dec
push
jnp
dec
lret
xor
int3
mov
xchg
and
jge
and
dec
sub
ror
lods
out
push
loop
xchg
sbb
pop
jp
loopne
repz
mov
xor
xchg
adc
sbb
dec
jae
lret
push
jns
shlb
popf
jmp
stos
loop
sahf
je
mov
pushf
loop
out
jnp
into
adc
movb
daa
and
jb
stc
xor
sub
cmp
sbb
xchg
outsl
pop
dec
lods
jno
push
pop
lods
mov
xor
mov
xchg
mov
cltd
adc
jno
mov
mov
js
pop
or
addr16
and
cwtl
lds
cmp
mov
adc
cmc
mov
je
or
inc
stc
xor
sarb
cs
push
aaa
pop
mov
ja
int3
inc
mov
int3
cs
rcll
ret
mov
mov
sub
jbe
mov
lahf
sub
mov
test
addr16
movups
rcl
sbb
xchg
and
cs
jb
data16
in
xor
in
scas
mov
xchg
into
cmpsb
add
leave
jp
cmp
test
xchg
mov
testl
adc
insl
sub
aad
popl
mov
leave
cmc
dec
sbb
inc
xchg
add
add
or
jae
pop
add
cmp
loop
jne
dec
mov
insl
cs
dec
pusha
pusha
inc
std
ds
in
movb
xlat
fimuls
jmp
add
mov
sbb
outsl
loop
rolb
subl
and
xchg
arpl
push
jo
repnz
movsb
lds
xor
pop
mov
sbb
inc
cmp
sbb
mov
cmp
int
pusha
or
pop
sub
pop
push
mov
sbb
push
jb
push
lcall
adc
test
mov
ja
rclb
call
jnp
and
out
cld
push
jle
aaa
sub
mov
add
jp
pop
inc
mov
out
rolb
subb
push
jecxz
xor
fstl
adc
and
inc
fadds
sub
push
xor
xchg
add
add
notl
insl
ja
pushf
push
mov
jp
and
roll
iret
xor
lods
ljmp
in
or
mov
loop
jbe
repnz
scas
dec
cmc
adc
or
shrl
jle
xor
add
pop
js
mov
sbb
das
repnz
jg
ds
sarb
rol
add
dec
pop
ret
rcl
push
jno
mov
mov
mulb
jae
loop
aaa
push
mov
dec
dec
stc
stos
dec
fldcw
push
repnz
push
out
xorl
or
cmpsb
lods
in
jb
pusha
popa
push
lea
or
xchg
mov
xchg
loope
sub
add
xor
repz
mov
dec
cmp
aad
imul
push
inc
xchg
fnstenv
mov
inc
jmp
shll
cmc
mov
mov
jb
pop
pop
mov
scas
and
icebp
dec
xchg
int3
rorl
test
je
lret
xchg
adc
sub
mov
mov
xchg
stc
cmp
mov
pusha
and
sub
push
jp
arpl
es
sub
add
inc
idivb
fldenv
xor
sub
mov
mov
dec
repz
xchg
push
inc
push
xchg
negl
mov
sbb
mov
repz
or
negl
fwait
mov
pop
sub
fnstcw
int
dec
add
xor
push
call
or
and
das
mov
lret
jl
ficoml
bound
push
or
sub
or
leave
sub
in
or
rorl
adc
sub
pop
or
jecxz
mov
mov
cmp
xor
mov
sub
mov
test
cld
test
jae
mov
inc
inc
xchg
mov
mov
test
cmpsb
adc
ja
xchg
mov
or
add
adc
lods
cmp
movsl
enter
int
vmread
push
pushf
mov
xchg
icebp
xchg
mov
sub
add
stos
sub
aam
arpl
xor
das
lahf
daa
inc
sub
jp
sub
adc
lahf
and
add
cli
or
pop
das
jge
mov
insb
mov
mov
mov
cmp
insl
inc
aam
push
mov
inc
push
scas
jle
fcmovnb
aaa
std
outsl
repnz
orl
push
xor
xchg
mov
aad
push
mov
mull
je
aad
jmp
pop
adc
cmp
sub
lods
lock
mov
xor
jnp
pop
and
jb
dec
movsb
scas
outsb
or
inc
xchg
jae
xor
cmpsb
push
movsb
fdivs
push
and
push
cmpsb
rcrl
cmp
gs
mov
stc
push
scas
out
pop
lret
int
xor
jp
lahf
shl
lods
ds
cmc
jmp
les
rcll
pop
pop
add
jmp
xor
repnz
or
or
xor
shl
jmp
xchg
inc
in
lods
scas
loopne
loope
ret
je
sub
cld
jne
mov
aas
sub
arpl
nop
int3
mov
push
lea
sarl
je
adc
nop
add
push
cltd
jae
cs
cld
outsb
idivb
shll
out
sbb
jae
jmp
pop
or
neg
sbb
mov
cmp
inc
sbb
push
add
xchg
imul
lds
xor
enter
repz
mov
pop
lret
or
lcall
cmpsl
push
cmpsb
jge
or
xorl
inc
push
mov
add
addb
or
jle
addr16
shl
or
mov
lret
test
dec
adc
pop
mov
xchg
dec
mov
push
push
rcrl
leave
sub
test
test
popa
cmp
and
iret
rolb
mov
lcall
and
jmp
xchg
inc
lock
repz
icebp
mov
pop
imul
xchg
ds
aad
shl
mov
int3
mov
and
cmpsl
test
in
mov
jg
push
test
mov
roll
and
mov
inc
inc
aaa
jg
and
adc
pop
xchg
ret
sub
hlt
les
or
mov
add
jl
cmp
fnsetpm(287
shl
in
stc
jp
std
pop
adc
shlb
mov
adc
mov
dec
sub
adc
mov
in
cmpsb
mov
mov
bound
int3
faddl
inc
xor
inc
xor
cmpsl
lcall
popf
pop
sahf
or
leave
in
popl
out
lcall
and
sti
aad
pop
lret
push
out
sub
shrl
adc
push
sti
mov
add
leave
sbb
xor
and
scas
sbb
or
add
xchg
jne
adc
and
push
jo
movsl
loop
addr16
mov
stos
push
push
jecxz
push
bound
inc
mov
cltd
rorb
add
xchg
loop
mov
daa
mov
sbb
xchg
outsb
out
bound
ds
pusha
mov
or
and
ret
sub
imul
clc
mov
sbb
jbe
scas
xchg
mov
adc
pop
mov
pushl
add
loopne
inc
pop
ljmp
outsl
jg
inc
loope
jle
stc
add
daa
pushf
adc
jno
pop
jmp
inc
and
mov
testl
and
ds
sarl
or
jmp
mov
xchg
scas
inc
stc
mov
xchg
stos
rcll
outsl
sub
lret
sub
jne
push
jb
ret
int3
mov
out
push
inc
jbe
push
outsl
mov
lds
std
push
stos
sbb
repnz
xchg
or
sbb
js
insb
mov
jnp
lods
imul
into
movsl
push
push
adc
lcall
dec
inc
mov
mov
xor
popf
and
insl
xchg
mov
mov
js
int3
mov
mov
mov
loopne
add
mov
aad
fisttps
insl
jmp
mov
cmp
sub
cmpsl
adc
push
scas
inc
mov
jo
stc
bound
aas
test
jns
daa
jne
in
mov
ret
mov
arpl
sbb
push
test
pop
ficomps
mov
leave
sbbb
lock
cmp
inc
jecxz
iret
addb
and
xor
adc
cli
or
ret
gs
out
in
incl
inc
push
jmp
dec
jae
fcomp
out
scas
loop
xchg
xlat
mov
sbbb
inc
icebp
in
aad
push
push
adc
push
ds
insl
repnz
mov
int
jbe
gs
xchg
mov
je
mov
repnz
insl
inc
mov
outsb
pop
in
add
pusha
adc
xor
insb
scas
loopne
mov
clc
jbe
mov
push
xchg
or
add
repz
insb
mov
fidivrl
dec
mov
arpl
aad
xlat
adc
sub
sbb
push
pop
add
jb
pop
imul
xchg
dec
adc
dec
enter
mov
shrl
adc
testb
xchg
outsb
lds
pop
sub
inc
insl
mov
out
jmp
insl
stc
es
xchg
sahf
cld
cmpsb
sahf
rcl
jb
into
fstp
dec
addl
inc
jo
sub
mov
push
xchg
xor
fnstsw
imul
ja
arpl
imul
push
aaa
leave
mov
push
xchg
cmp
outsl
dec
inc
xchg
xchg
add
inc
xchg
ds
es
push
lods
adc
jb
test
add
movsl
xchg
scas
aam
arpl
shrb
imul
mov
repz
lock
fcoms
clc
inc
xchg
mov
mov
shrb
mov
xchg
pop
jno
xor
stos
mov
scas
hlt
sub
pop
xor
je
mov
adc
cmpl
inc
xor
xor
nop
pop
jp
xchg
shl
xor
dec
pop
or
pop
or
jnp
scas
mov
xor
icebp
into
rcrl
mov
in
fldl
imul
sbb
or
mov
sbb
jns
mov
dec
xchg
call
jle
int3
adc
pop
icebp
jbe
or
sub
mov
ds
mov
sahf
mov
push
cmpsb
jae
inc
push
pushf
cli
jmp
pop
inc
ds
gs
in
test
dec
cmp
ds
adc
ds
mov
sbb
xchg
sub
incl
in
or
pop
add
subb
mov
not
fwait
cs
ljmp
out
lock
lock
adcl
sub
xor
mov
push
mov
subl
adc
iret
lds
add
les
int3
push
clc
in
scas
jne
dec
push
inc
cmp
clc
ret
cltd
xor
out
mov
jge
push
mov
add
mov
addr16
mov
jb
mov
jle
in
pop
out
mov
cld
fcompl
fdivp
pop
dec
xor
xchg
lcall
mov
cmp
xor
add
add
or
stos
jmp
pop
out
push
xabort
push
xchg
inc
or
mov
xor
fldcw
cmpsl
xchg
ret
jnp
push
pop
mov
push
out
push
movsb
mov
sarl
faddl
sub
mov
mov
and
testl
or
inc
xchg
es
into
inc
xor
neg
pop
mov
nop
pop
mov
push
mov
lock
jle
lahf
push
dec
mov
dec
cmp
sbb
leave
sbb
out
and
outsb
adc
xor
jp
or
decl
ja
lcall
xchg
cmp
leave
mov
ja
aam
popf
rcl
xor
ljmp
and
loope
sub
adcb
daa
test
adc
js
cld
fs
jb
js
clc
outsl
mov
push
xchg
sbb
push
pop
repz
outsb
xchg
xchg
add
push
sub
adc
ds
push
mov
cmp
lods
out
int3
jns
xor
inc
and
xchg
adcl
into
mov
mov
jmp
sbb
jge,pt
cld
negb
or
xchg
adc
and
pushl
inc
sub
cltd
int3
lahf
xor
pop
dec
mov
std
mov
les
xor
xchg
cli
mov
stc
rcr
lods
out
data16
jge
inc
mov
sub
movsl
xchg
fisubrs
mov
sub
pop
mov
xor
mov
mov
les
pop
sbb
fwait
int
dec
jbe
jbe
fisttpll
cltd
shl
orl
mov
loop
cwtl
neg
or
out
mov
lcall
jg
xor
mov
and
sbb
lea
insb
mov
mov
xor
adc
mov
sub
test
push
in
xchg
mov
ljmp
int
mov
mov
mov
sub
and
mov
ljmp
mov
push
sub
push
adc
filds
push
dec
dec
popa
jo
jns
cmp
and
mov
cltd
mov
pop
cld
and
mov
mov
scas
leave
cmpsb
adc
into
push
or
add
mov
push
push
into
sub
sbb
dec
mov
jno
scas
ret
int
bswap
hlt
lock
int3
pop
stc
dec
cmc
outsl
loopne
rolb
lcall
cmpsb
inc
loope
inc
arpl
push
test
mov
and
cmp
jo
fcoml
loope
mov
inc
push
aam
adc
add
mov
or
int3
dec
mov
pop
and
mov
jl
jnp
push
icebp
out
lret
inc
repnz
dec
xchg
lock
mov
shlb
lods
xchg
mov
fwait
mov
lea
mov
pop
sahf
and
in
das
push
jo
mov
add
push
jge
adc
xchg
jns
or
repnz
xchg
cmpb
test
xor
leave
pushl
cmp
popl
iret
outsl
fisubl
ja
call
mov
sbb
and
mov
dec
mov
cmpsl
es
nop
add
sub
cmpsb
xchg
dec
mov
in
loop
xor
das
or
je
push
mov
imul
pusha
outsl
sub
in
aam
mov
jge
fidivrl
cmp
cmp
cmp
loop
imul
lret
cmpsb
pusha
sub
lds
or
inc
int3
lds
subl
jne
cmp
adc
pop
mov
xchg
xor
cmpsb
cmp
xor
jmp
stc
insb
dec
call
adc
mov
inc
cmc
jnp
adc
and
sub
mov
sti
dec
sbb
mov
inc
mov
jmp
push
cmpsb
inc
xor
add
inc
dec
mov
push
ret
xlat
pop
sub
ds
rcll
in
adc
jnp
lcall
popw
sbb
je
lds
lea
push
xchg
jmp
test
aas
mov
push
jp
push
cli
mov
push
mov
jno
arpl
pop
sbb
ret
cmp
mov
inc
mov
xchg
mov
pop
jbe,pn
jno
xor
push
sub
push
mov
inc
popf
jge
sub
orb
or
inc
sub
repz
hlt
mov
xor
stc
sbb
dec
xchg
jl
addl
fildl
in
nop
jl
xchg
mov
mov
xor
inc
xchg
dec
inc
xchg
leave
sbb
orb
inc
aam
mov
mov
loop
out
loopne
stos
mov
jb
jge
and
jle
xchg
das
add
cmp
mov
cwtl
fistpll
ds
mov
pop
bound
mov
les
cltd
xor
jge
xchg
je
push
test
nop
jo
not
jl
fadd
les
jo
imulb
arpl
sbb
mov
fstpl
popf
pop
xchg
ss
aas
jno
inc
es
cmc
arpl
ret
addr16
or
ljmp
sahf
xchg
mov
fdivrl
js
dec
aas
xlat
shll
push
incl
or
outsb
insb
dec
dec
fadds
adc
add
ret
daa
push
iret
cs
or
out
xor
jmp
std
inc
mov
test
or
repnz
hlt
aad
repz
inc
lret
cmp
aaa
pop
mov
pop
mov
aad
mov
mov
into
adc
imul
loope
std
mov
sub
push
fwait
insb
mov
mov
dec
mov
jnp
xor
jnp
inc
sahf
jle
loope
xchg
dec
fstpt
sbbb
scas
ret
pushl
xor
std
lods
sub
js
xor
fisubrl
cmp
pop
dec
into
popa
pop
insb
movsb
mov
adc
xchg
xchg
jp
push
and
xchg
push
sub
je
out
insb
mov
stc
dec
fwait
lock
das
mov
aam
test
xchg
testb
xchg
fiaddl
jno,pn
inc
ret
dec
push
imul
push
cld
not
xor
adc
in
push
fstps
sub
or
push
lods
push
cmc
clc
outsw
or
fwait
movsb
mov
cmp
testl
insl
fisubrs
push
std
jo
mov
and
jb
sbb
clc
mov
js
xchg
loopne
out
fldl
loopne
jo
push
faddl
pop
je
mov
aas
lds
fdivr
or
mov
and
push
and
nop
out
mov
xchg
jb
icebp
inc
call
iret
test
jg
dec
mov
hlt
adc
pushf
lcall
arpl
cmp
jbe
pop
push
sbb
out
lods
jp
or
pop
jo
sbb
cmp
stos
jb
data16
sub
orl
rorl
sbb
fiaddl
sahf
fistps
mov
or
les
mov
jle
xchg
sub
ficoms
repnz
jne
mov
sahf
sbb
into
push
loope
in
xlat
jmp
jmp
jnp
fldl
cli
mov
pop
jge
inc
idivl
add
inc
mov
jne
inc
je
jnp
clc
ret
xchg
mov
aaa
stos
cmpsb
jne
outsb
pop
lret
neg
rcrb
lahf
jns
xchg
sub
sarb
int3
xchg
mov
or
idivb
adc
and
cs
test
and
mov
clc
subb
sbb
ret
and
mov
mov
jns
pop
mov
sub
mov
sahf
jbe
sbbb
sbb
and
outsb
js
enter
adc
and
repz
dec
popa
xchg
cmp
jbe
fxch
arpl
mov
pusha
pop
cwtl
out
cwtl
cmp
inc
loopne
xchg
dec
push
push
dec
jp,pt
shl
pop
in
xchg
aaa
mov
std
push
xchg
mov
in
mov
stc
mov
jle
lret
cmp
mov
test
wrmsr
jmp
repnz
pop
fwait
sub
iret
pop
ficompl
ret
mov
mov
cld
sbb
fistpll
fcompl
or
or
ljmp
and
sbb
and
or
sub
xlat
pop
pop
jecxz
cmpsl
stc
outsb
adc
int3
cs
push
insb
sbb
pop
sahf
add
adc
testb
testl
outsb
jg
outsb
add
cmpsl
sub
mov
xor
dec
das
test
ret
and
xchg
stos
and
insb
adc
daa
pop
mov
xor
dec
sahf
imull
dec
aaa
jae
dec
jge
fistps
mov
pop
push
cmpsl
sub
ret
inc
jnp
push
cmc
sbb
xor
or
push
test
test
divl
mov
jmp
mov
test
mov
push
push
inc
daa
xor
cli
jne
fsubs
scas
sbb
mov
std
mov
sbb
jl
cmc
out
cli
dec
cli
mov
test
cwtl
push
iret
cmp
out
mov
das
jge
sti
dec
dec
mov
and
adc
loope
push
sbb
loop
aaa
pop
or
xor
aaa
add
cmp
or
push
and
fnstcw
leave
jp
push
jne
mov
and
testl
hlt
xchg
jp
cmc
inc
data16
cmp
cmpsb
fimull
sub
xchg
mov
mov
push
jnp
xor
incl
and
test
lea
out
add
movsb
push
dec
sub
movl
repnz
mov
dec
inc
and
fwait
xchg
push
push
cmpsl
mov
or
sub
adc
cltd
jne
fcmovb
leave
xchg
adc
popa
jns
inc
cmp
mov
adc
mov
mov
sub
adc
shl
int
sbb
mov
movb
aad
mov
mov
out
lret
ss
in
or
jmp
pop
addb
fsub
mov
mov
in
adc
nop
xchg
shll
cmp
lds
lcall
xchg
pop
and
push
shlb
sahf
xchg
out
mov
iret
imul
mov
fistpll
xchg
fiaddl
jecxz
push
jecxz
in
xchg
mov
cmp
ficoml
call
cmp
sub
add
inc
lret
ret
xchg
sub
and
sbb
jecxz
loopne
sbb
mov
inc
xor
int
movsb
inc
mov
add
or
xor
nop
or
pop
shl
sub
xchg
mov
out
fistps
dec
sub
std
icebp
push
std
cmp
add
mov
fisttpll
pop
push
rolb
inc
gs
nop
push
or
adc
push
aam
or
fnsave
xor
jge
push
mov
inc
insb
jae
je
sbb
dec
cld
aad
ds
xchg
shrl
xor
xor
xchg
dec
std
cmp
push
lock
push
loope
adc
idivb
mov
pop
or
or
out
repz
push
shll
cmp
clc
mov
cmp
inc
cs
pop
mov
mov
cwtl
aaa
sub
xchg
sbb
dec
dec
fstpl
adc
outsb
dec
cmp
std
push
or
sub
and
jns
stc
cmp
test
sbb
mov
sub
out
push
pop
xor
aaa
xor
jmp
sbb
jae
push
in
cmp
cmpb
add
mov
ds
fwait
sbb
jne
les
jb
jbe
xchg
and
push
inc
xorb
jl
lcall
call
cmp
mov
stos
pop
inc
mov
xchg
out
sub
insb
daa
sarb
call
clc
inc
adc
mov
mov
jb
pusha
or
outsl
popf
xchg
jne
sub
jg
add
mov
xchg
jecxz
inc
xchg
mov
fisubrl
roll
dec
inc
pop
insl
fdivrs
fs
insb
es
inc
test
add
inc
jmp
cmc
fnsave
pop
aaa
inc
xor
movsl
adc
and
imul
pop
popa
fsub
mov
std
imul
push
addr16
imul
js
xchg
xor
fsubr
cltd
sbb
push
mov
mov
addr16
mov
jle
mov
jns
ss
mov
sbb
popa
push
xchg
repnz
repnz
ds
in
aaa
adc
dec
cmp
pop
inc
movsb
aas
mov
int3
icebp
test
mov
adc
or
imul
mov
or
inc
jecxz
mov
gs
sarb
aad
push
mov
add
clc
cmpsl
movsl
pop
and
push
pop
popl
outsb
inc
jge
lcall
std
xor
jp
lret
std
fwait
sbb
mov
cltd
pop
stc
stc
aas
sbb
sbb
xchg
and
inc
adc
iret
inc
add
jnp
sbb
cwtl
jbe
arpl
dec
lods
mov
les
add
dec
hlt
jle
shl
jmp
push
lret
stos
lret
test
lea
add
sti
add
mov
dec
mov
loope
push
inc
dec
mov
inc
sbb
dec
jno
jmp
pop
sbb
out
adcb
lea
or
jge
popf
out
lret
mov
dec
xcrypt-ctr
cmpsl
push
mov
mov
sbb
push
xor
ror
mov
scas
mov
push
cmc
mov
repnz
cmpsl
or
sub
or
pop
xor
out
stos
mull
addr16
mov
pop
insb
loope
push
fmuls
divl
push
imul
sub
cmp
ljmp
stos
and
jnp
sahf
lahf
mov
and
mov
mov
add
pusha
loope
jnp
pop
or
mov
mov
fcoml
mov
jmp
aam
fsubs
dec
test
imul
sub
mov
fistpl
add
mov
bound
fimull
lds
jl
stos
mov
imul
test
nop
mov
outsl
sarl
cmpsb
fdivl
sti
mov
subl
cmpsb
mov
lds
enter
out
mov
push
nop
ss
adc
adc
and
dec
shll
mov
aam
negl
jbe
or
xchg
add
ds
in
cmp
fcomps
shlb
ljmp
adc
sti
pop
jbe
loop
int
mov
cltd
in
and
mov
mov
adc
jge,pt
push
out
loopne
and
cmp
pop
lret
orl
js
ss
lcall
jo
ljmp
test
adc
aas
adc
je
and
adc
adc
rcll
dec
test
inc
fisubrs
sbb
or
add
add
or
add
xchg
int3
cmpb
and
mov
inc
mov
jns
cmc
mov
dec
sub
mov
xchg
enter
add
jl
mov
mov
lea
sbb
ret
push
mov
pop
cwtl
xchg
mov
jl
xchg
and
inc
pop
mov
mov
in
out
lcall
dec
sub
in
mov
pop
xor
jae
ss
and
jg
push
xchg
lock
cwtl
icebp
mov
xor
push
loope
xor
sub
inc
and
mov
cmp
push
insb
out
mov
mov
ljmp
mov
cmc
pusha
sub
pop
inc
inc
mov
xchg
jmp
inc
push
and
sbb
mov
and
gs
pop
fsubs
mov
ljmp
fwait
movsl
fincstp
sbb
pop
mov
int
fisubs
push
sbb
sbb
pop
add
in
mov
jnp
push
mov
mov
cmp
fildll
out
mov
jbe
pop
jecxz
addl
lock
cmpsb
jnp
lret
pushf
mov
jae
jmp
push
mov
jbe
xor
sub
inc
sbb
test
jne
or
sbb
imul
sub
jg
xor
rcrb
fbld
inc
test
pop
pop
movsl
in
subl
cmp
lds
js
rolb
push
or
push
adc
sbb
add
cmp
adc
and
gs
xbegin
mov
mov
clc
pop
fistpl
inc
test
out
js
inc
int3
movsl
inc
in
xchg
dec
add
sub
xor
fcmovbe
jmp
cmp
pop
pusha
out
fcmovnu
jbe
inc
ffree
jmp
mov
sti
xlat
or
lock
jns
stos
mov
add
fwait
addl
mov
fwait
in
mov
dec
xchg
loop
popa
outsb
sahf
loop
fisttps
pop
pop
stos
mov
mov
xchg
mov
adc
xchg
jmp
xchg
add
xchg
out
cmp
subb
lods
xchg
icebp
dec
cmp
and
mov
lock
mov
sbb
ror
push
xor
aaa
mov
push
fbld
test
push
loop
subl
dec
addr16
cmp
into
and
scas
and
imul
or
divb
pop
clc
mov
push
sub
jmp
push
mov
and
push
das
dec
pop
pop
repnz
mov
mov
mov
pusha
pop
orb
mov
std
lret
adc
or
daa
mov
push
fdiv
sahf
inc
out
pop
jns
mov
sbb
ret
daa
in
mov
lahf
xchg
sbb
jae
jb
jp
xor
in
xlat
jno
dec
jo
pop
inc
sub
stos
push
in
addl
mov
inc
nop
ja
pop
pushaw
outsb
enter
std
not
cmpsb
rcrb
lret
jo
bound
add
flds
out
leave
arpl
pusha
aas
xchg
push
jae
pop
std
jns
ficomps
mov
mov
pop
shl
mov
or
popa
sbb
loop
gs
pop
lahf
stc
mov
xor
shll
outsb
cli
jno
lods
xchg
jae
fnstenv
sbb
lea
test
add
push
adc
movsb
xor
lcall
aam
rorb
mov
xchg
out
int
jg
std
negl
in
mov
mov
mov
int
sub
dec
outsb
nop
aas
jl
rcll
add
sahf
mov
adc
xor
fwait
dec
cmp
in
fisttps
xlat
ret
outsl
iret
add
imul
cmpsb
xchg
insb
rol
jle
aam
inc
addr16
pop
pop
inc
pop
lgs
inc
inc
xorb
enter
xor
jge
lret
push
in
jb
pushf
aam
mov
xlat
xchg
push
push
cwtl
dec
add
adc
lea
xchg
or
push
out
sbb
push
xor
cwtl
nop
pop
sub
lcall
fidivs
pop
iret
adc
pop
add
mov
jbe
bound
pushf
sbbl
outsb
es
sbb
push
inc
nop
cs
stos
clc
xor
inc
movsb
cli
gs
mov
lahf
cwtl
fcoml
pop
and
cld
in
mov
es
ror
mov
mov
sbb
outsl
xor
imulb
xchg
cld
dec
cmp
push
push
js
pop
adc
adc
jbe
arpl
lock
enter
jbe
add
inc
pushf
inc
jo
negl
in
adc
outsb
popf
repz
xorb
cmpsl
mov
push
or
cmp
test
xor
pop
jb
call
shlb
daa
dec
xor
push
imull
adc
sub
iret
jns
push
adc
dec
push
adc
dec
lods
test
leave
inc
sub
scas
mov
loope
pop
pop
in
sub
mov
jecxz
jl
mov
mov
ss
rcl
lds
shlb
rcrl
sub
cmp
xor
xchg
sarl
movsl
push
jb
sahf
int
push
cmpsl
mov
popa
vmovlpd
addr16
es
fsubrl
orl
and
in
add
pop
xchg
je
xor
sub
pop
ret
inc
dec
push
mov
loopne
test
test
jg
das
pop
aaa
daa
int3
clc
xor
mov
push
das
lea
cmp
adc
xchg
push
ljmp
sbb
inc
cmp
xchg
out
cmp
dec
popa
push
pop
imul
fwait
cmpsb
pop
and
pop
pop
in
and
sub
xchg
scas
mov
mov
cmovo
mov
into
inc
push
leave
push
jmp
mov
out
inc
push
dec
cld
mov
mov
pop
shrb
scas
cmp
imul
stos
mov
pop
sub
push
int3
das
insl
jo
pop
pop
jecxz
mov
cli
je
test
mov
xchg
sub
pop
and
aad
pushf
mov
enter
pop
sbb
movsb
sbb
divl
rcll
sbb
adcl
mov
mov
xor
jbe
fwait
mov
cld
mov
out
mov
add
enter
adc
mov
rorl
sbb
jne
ds
xor
call
int3
and
xchg
xchg
fldl
insl
imul
fsubp
or
mov
xchg
cmp
sbb
jne
cmp
sbb
inc
push
sub
fwait
inc
ljmp
addr16
add
aam
push
shrl
jae
nop
jns
cmpsw
negb
dec
popf
sbb
dec
loope
das
jp
movsb
fidivrs
jns
jo
mov
add
fldenv
loop
pop
jne
sub
stos
arpl
insb
fiaddl
out
testl
test
movsl
cmp
jle
fyl2x
pushf
fnsave
dec
lcall
mov
and
aam
arpl
aad
repz
xchg
jecxz
push
jecxz
imul
and
mov
test
scas
pop
or
cmpsb
mov
dec
pusha
rcll
outsl
dec
repnz
mov
jl
sbb
xlat
jo
pop
fs
addl
pushf
divb
shrl
rol
sbb
outsb
xchg
mov
pop
xchg
mov
fxch
xchg
test
fmull
jg
sub
pop
insb
push
adc
sahf
pushf
mov
push
dec
mov
xlat
roll
pop
pop
push
mov
jp
push
xchg
das
push
div
xor
or
dec
lds
xchg
xor
jnp
fnstsw
and
notl
insl
push
outsl
divb
dec
jae
lahf
sbb
mov
clc
ds
mov
adc
or
clc
jno
sub
dec
mov
dec
popf
xor
cmpsl
push
push
daa
mov
sbb
jno
call
cmpsb
sahf
gs
pusha
int
mov
cmp
mov
fistpl
fcmovnb
dec
mov
mov
adc
testl
sub
leave
fsub
mov
xor
dec
xor
mov
fchs
loop
jbe
in
cli
push
pushf
xorb
dec
xor
mov
lcall
xor
std
popf
sarb
in
adc
inc
and
sbb
xchg
xor
lds
mov
cmp
test
xchg
add
inc
cmp
cmp
stc
mov
ljmp
push
and
xor
daa
pop
adc
sti
shrl
add
dec
shrb
jae
sbb
ret
cmp
add
fwait
push
scas
cmp
pop
xor
pop
das
xchg
mov
fistpll
mov
bound
stc
enter
push
daa
add
hlt
out
fyl2x
jg
or
daa
aam
bnd
mov
mov
or
jge
xor
xchg
aam
fs
adc
pmuludq
clc
stos
and
jns
cmpsb
lds
popf
aaa
push
mov
notl
xchg
ljmp
pop
adc
lret
das
cmp
mov
outsl
cld
sub
in
mov
dec
lds
je
dec
addr16
or
cmp
nop
cmp
leave
in
mov
imul
push
push
hlt
jb
xchg
lea
jb
add
cmc
cmovns
mov
fidivs
outsb
insb
ds
das
stc
dec
aas
std
pop
push
fs
push
xchg
sub
test
lahf
xorl
arpl
and
movsl
repnz
mov
cmp
cmp
or
push
adcl
xchg
in
jmp
cmpsl
pop
xchg
roll
inc
sub
add
add
xchg
lds
call
pop
dec
scas
mov
mov
push
shlb
dec
pop
ljmp
cmp
mov
mov
call
push
in
ja
add
adc
div
addr16
pop
pop
dec
prefetch
stc
loope
sbb
ja
popa
jnp
int3
imul
pop
add
jo
dec
test
xchg
shl
push
xor
ja
leave
stc
mov
cmc
jne
cs
lock
push
jmp
clc
imul
adc
idivb
or
sub
out
ret
sbb
in
dec
je
push
xchg
pop
mov
loop
in
inc
jo
xchg
je
insl
icebp
add
int3
arpl
stos
fisttpl
lods
or
sub
mov
pop
ds
mov
loop
sbb
test
dec
shll
inc
xor
in
xor
into
arpl
leave
fcoms
sbb
les
sbb
or
push
scas
lods
mov
mov
pop
xor
mov
fisttps
pop
add
xchg
or
repnz
cs
xchg
push
faddl
and
pop
hlt
sub
jmp
inc
mov
out
ret
xadd
nop
ja
dec
loop
stos
pusha
das
pop
xchg
xor
shrb
pop
mov
push
lret
es
mov
and
push
sbbb
int3
imul
add
lods
fcmovnu
ficompl
and
neg
xor
mov
jno
mov
fimull
jnp
out
cmpsl
fs
mov
jp
movsb
imul
je
pop
into
and
dec
sbb
mov
mov
rcrl
pop
xchg
xchg
js
out
mov
in
clc
jle
pop
mov
fisttps
popa
or
test
les
xchg
or
popf
rorb
insb
cmp
push
in
mov
nop
sub
imul
dec
imul
pop
sbb
fadd
fidivs
mov
adc
inc
push
sub
jno
fnstenv
xor
mov
xor
aas
popf
push
pop
icebp
dec
nop
pusha
pop
add
mov
xchg
push
xor
cmp
or
lea
clc
int3
fisttpll
cmpsb
sti
cmp
pop
clc
aad
adc
mov
mov
sub
inc
int3
jmp
fists
add
mov
push
inc
inc
rcrb
add
pop
pusha
mov
dec
clc
or
pop
mov
or
jae
mov
std
mov
dec
mov
mov
loop
aaa
repz
je
mov
test
or
mov
repz
leave
test
les
xor
push
adc
insb
push
ud2
fwait
sbb
add
jmp
lret
daa
sbb
mov
mov
push
imul
stos
sbb
nop
enter
loopne
pop
mov
adc
aad
shll
cmp
push
rclb
in
int
or
cltd
mov
add
ret
ficoms
dec
orl
mov
pop
int3
sub
jp
push
push
mov
jecxz
sbb
dec
push
sbb
loope
out
sbb
lret
xchg
adc
cltd
inc
mov
fcoms
aaa
cmp
push
lods
scas
dec
adc
ja
push
std
fiadds
dec
pop
mov
push
sbb
sub
and
outsb
leave
sub
pop
push
mov
test
xchg
sbbl
sbb
sti
xor
xchg
cltd
inc
mov
dec
or
data16
test
mov
or
rolb
out
mov
hlt
imul
loope
cld
dec
adc
ud0
movsl
sbb
arpl
and
and
mov
in
push
jo
mov
push
or
imul
lods
jnp
mov
pop
data16
loop
adc
fbld
mov
jl
imul
jp
stc
adcl
cs
xor
icebp
jae
xchg
nop
sub
inc
or
sarb
mov
js
pop
es
or
aaa
adc
mov
xorl
sahf
fisttps
cmpsb
cmp
lahf
lret
pushf
hlt
dec
clc
push
push
ret
aad
repz
dec
push
test
cmpsb
imul
pop
xchg
sbb
ret
mov
dec
xchg
fsubs
jno
addl
aas
push
sahf
shrl
jg
aad
jp
jle
orb
in
adc
inc
ret
or
ja
or
cmc
lsl
aaa
cmp
sub
dec
orl
dec
sub
inc
xor
mov
dec
sahf
sbb
aam
stos
mov
into
push
fwait
dec
ss
orb
int3
xor
jg
rolb
daa
ljmp
xchg
into
out
mov
enter
scas
fisttpl
xor
movsb
cmpsb
mov
push
xchg
push
dec
test
xchg
sbb
xchg
jnp
fsubrp
fwait
out
pushf
mov
mov
call
pop
xlat
mov
fstps
iret
pop
mov
mov
jecxz
mov
add
pop
mov
sbb
ror
pusha
pusha
push
adc
cmc
mov
fstl
fadds
dec
rcr
hlt
or
push
and
fsubr
pop
xchg
rol
push
mov
es
clc
xchg
push
fisubs
lods
sbb
js
imul
sbb
int3
jge
or
pop
test
xchg
mov
test
mov
xchg
mov
pushaw
mov
sub
sbbl
lds
sub
push
sub
or
outsl
sti
lret
in
and
test
cltd
cmp
nop
negb
pop
pop
inc
lea
push
xchg
jmp
faddl
in
cmc
enter
out
scas
repnz
add
daa
or
jo
mov
push
pop
mov
inc
clc
data16
xchg
aam
ljmp
xchg
jo
es
and
adc
mov
adc
or
lahf
lret
dec
arpl
into
mov
jmp
or
mov
sbbb
pop
adcl
jbe
push
sub
xor
xchg
pushaw
pop
shll
add
inc
inc
out
shlb
pop
outsb
js
lods
arpl
xor
movsb
stos
jno
mov
jo
cmpl
sbb
adc
test
punpckhbw
leave
inc
sub
xchg
test
pop
xor
cmpsl
sbb
jno
fdivrl
mov
ret
pushf
pop
adc
rcr
push
jae
inc
add
arpl
test
xor
xchg
xchg
negb
fisubrs
jmp
sbb
testb
cmp
inc
or
mov
cmp
mov
fistpll
or
in
inc
mov
call
xor
mov
or
or
jl
sbb
arpl
push
lds
mov
mov
inc
mov
add
sub
push
orl
jb
mov
dec
mov
mov
fisttps
ds
sbb
inc
jae
jns
lods
xor
adc
inc
popa
add
jo
popf
aad
fidivrs
shrl
data16
ret
push
sbb
insb
sub
dec
loope
push
loope
pop
scas
cltd
jns
fisubl
inc
dec
push
in
clc
das
stos
pop
and
iret
xor
in
in
data16
sub
pop
ret
pushf
mov
sub
mov
insl
daa
js
pop
inc
mov
push
rorl
jle
push
cmpb
test
mov
insl
das
and
insl
push
jnp
jp
cmp
pop
jp
and
xor
in
outsb
imul
lods
sahf
das
adc
push
pop
int
repz
stos
test
xor
cltd
add
xchg
pop
push
popa
jne
icebp
insb
notl
xchg
fidivs
add
clc
mov
adc
inc
inc
mov
pop
dec
fwait
xchg
stos
dec
and
in
pop
fwait
fwait
lods
fistpll
call
mov
or
stos
jo
jbe
addr16
shl
andb
test
jns
lock
jo
ficompl
push
aas
xor
jnp
pop
xor
or
inc
out
and
add
rorl
test
push
xor
or
inc
or
push
push
xor
ljmp
out
push
pop
jno
jecxz
and
mov
lret
in
or
imul
lret
cltd
xor
mov
mov
add
inc
insl
scas
jns
lcall
pop
mov
sahf
cmp
sub
xchg
lods
icebp
pop
push
cmc
sub
jno
nop
clc
loopne
push
add
mov
xor
mov
int3
adcl
mov
scas
cmp
in
imul
fucomp
sub
adc
dec
cmp
out
rcr
adc
push
cli
xor
mov
pushf
inc
daa
sbb
adc
lret
les
cmp
cmp
xchg
hlt
jae
inc
pop
xchg
pop
aaa
mov
sbb
dec
add
jb
cltd
or
sahf
sbb
mov
rcrb
iret
dec
inc
fisttpll
sub
sub
call
scas
mov
pop
lods
mov
jne
addr16
mov
fadds
imul
fistpl
fldcw
inc
push
icebp
decl
fcompl
fistpll
test
jge
psrlq
mov
ss
cld
movsl
loope
mov
push
sbb
sbb
xor
ss
mov
xlat
cld
sarb
add
popa
push
cld
out
xchg
test
mov
into
in
in
mov
jecxz
aad
int3
mov
faddl
frndint
hlt
jno
int3
mov
jns
nop
xor
loopne
arpl
scas
and
nop
loopne
ljmp
lods
mov
cmpsb
adc
dec
test
lret
int3
cmpsl
sub
cli
mov
fdivl
inc
xor
xor
mov
fisubrl
out
add
call
leave
mov
sbb
inc
xchg
test
repnz
aaa
push
mov
insb
decb
mov
movsb
or
dec
fisttpll
dec
mov
sar
rcrb
add
pop
leave
xlat
jbe
push
test
jb
mov
in
in
pop
xchg
and
std
dec
dec
clc
leave
aad
xchg
mov
iret
mov
dec
jne
mov
pop
xlat
inc
lcall
and
cld
mov
daa
pop
pop
in
test
mov
ss
cmpl
rcll
out
mov
cs
cmp
pop
jecxz,pt
inc
mov
lods
in
inc
rorl
adc
ret
xchg
mov
fimull
xchg
xchg
dec
or
dec
lea
inc
scas
xchg
daa
mov
jecxz
xor
shl
push
jb
in
jb
adc
jnp
ss
mov
jbe
dec
lahf
cmp
sbb
test
ljmp
mov
mov
aas
clc
jne
aam
mov
enter
in
out
or
out
mov
rorl
icebp
push
std
push
shll
leave
inc
mov
inc
mov
icebp
push
pop
pop
cmc
dec
mov
daa
mov
xchg
jp
and
or
mov
pop
imul
addb
xchg
icebp
sbb
dec
mov
cmp
repnz
call
cwtl
xchg
xchg
cltd
fisubl
xor
xchg
push
inc
mov
adcb
dec
cmpb
adc
test
lods
and
and
mov
mov
xlat
sub
ljmp
addr16
sub
push
mov
mov
lds
das
enter
rorl
ja
jnp
pushf
gs
shr
fcompl
push
aad
mov
bound
xor
mov
addl
sahf
mov
push
mov
loope
add
clc
inc
je
lock
js
lods
adc
add
int
out
sbb
pop
fisttpll
push
push
sub
xor
mov
inc
lds
lock
adc
adc
and
jbe
push
mov
xchg
sti
dec
mov
or
push
sbb
or
ret
arpl
inc
xor
adc
pusha
cmp
add
mov
out
mov
ficompl
int
jne
dec
decl
lret
cmp
cmp
adc
cli
in
inc
outsb
mov
xchg
or
xchg
roll
push
inc
mov
fdivrl
push
jae
cld
in
pop
add
clc
mov
dec
dec
push
test
xchg
aad
xchg
xchg
mov
mov
call
fdiv
inc
inc
loopne
pop
nop
inc
lock
shl
sbb
pop
ss
xor
cmp
jecxz
xchg
fsubl
or
mov
xchg
dec
stos
std
inc
adc
iret
inc
push
jns
mov
shll
ret
pop
sbb
xchg
test
test
mov
in
loope
int3
nop
scas
out
ds
cs
xchg
jecxz
fstps
lods
das
outsl
imull
loop
xor
sub
mov
lea
pusha
popf
mov
inc
or
mov
push
cmpsb
into
or
test
ret
movsb
inc
inc
add
xor
inc
pop
nop
jmp
dec
jmp
adc
fsub
in
mov
cmpsl
lcall
pop
xor
adc
sbb
jbe
dec
fwait
cmpl
rclb
push
pop
pop
imul
jb
jno
inc
jns
stc
add
pop
pushf
aam
roll
dec
and
sbbb
imul
std
cmpl
rolb
adc
in
jmp
out
inc
mov
jo
adc
sub
enter
lea
xchg
jne
mov
ljmp
sbb
lret
jns
movsb
cmpsl
and
fbstp
xchg
mov
iret
add
push
lea
ret
jg
gs
adc
fcomps
iret
mov
lods
in
jmp
inc
movd
jbe
or
stos
xorl
cmp
daa
and
push
cmc
ljmp
insb
fwait
xchg
xlat
mov
push
inc
outsb
or
dec
xchg
bound
int
addr16
sbb
popf
xor
jne
test
lds
cmpsl
sbb
sbb
cmp
aas
cmp
jns
xor
ret
leave
in
repnz
scas
inc
stos
or
jno
leave
and
insl
push
xor
or
dec
jp
xor
cmpsb
sahf
enter
fwait
dec
clc
bound
movsb
mov
push
ja
out
out
jae
ds
xchg
mov
out
dec
pusha
repz
jno
cs
push
push
jb
adc
sahf
sbb
sarl
hlt
adc
rcll
outsb
pop
je
xchg
push
jl
orl
cltd
fwait
es
daa
pop
lret
movsl
scas
mov
aas
cs
fildl
adc
out
or
jae
lods
loopne
pop
ret
lahf
adc
jnp
inc
cmp
add
jp
ret
mov
lea
pop
mov
outsl
add
xor
sbb
scas
add
adc
scas
out
dec
jl
lcall
push
sbb
add
sub
pop
mov
dec
inc
inc
push
pusha
repz
inc
mov
xchg
test
pcmpeqw
sub
sbb
push
or
call
xchg
int
mov
inc
sbb
sub
daa
mov
add
popa
ss
aad
fs
pop
add
jge
xor
je
adc
or
in
pop
adcb
mov
sbb
mov
aad
push
jbe
cmp
imul
loop
sbbb
mov
fnstsw
add
les
push
stos
aas
rorb
mov
rcll
add
dec
xor
xchg
sub
push
and
int
and
ds
repz
shl
das
pop
jne
cwtl
mov
push
imul
out
cmp
in
adc
test
adc
adc
xchg
notb
and
and
gs
or
sbb
jg
loope
aas
dec
mov
and
call
xor
push
lea
xrelease
sbb
shl
dec
cli
xlat
xchg
sbb
loopne
pop
add
push
xor
xlat
neg
stc
xchg
and
add
xor
cltd
cmp
int3
push
xchg
jmp
cld
mov
add
repnz
fstpt
fwait
add
jecxz
movsb
lock
lret
sahf
xchg
push
mov
mov
cmp
outsb
cmp
mov
jns
lock
dec
movsb
mov
jae
jmp
push
or
in
pop
pcmpgtb
add
shl
inc
xchg
push
fnstcw
roll
adc
cmp
xchg
pop
mov
jno
xor
les
pop
push
mov
rcr
mov
outsb
mov
cmpsb
pop
outsl
mov
sbb
sti
xor
xor
inc
popf
imul
mov
jg
push
insb
xor
mov
pop
je
nop
sbb
jmp
sub
out
sahf
or
sbb
pop
adc
popa
lods
mov
mov
mov
out
scas
sub
subb
insl
nop
inc
test
xor
leave
mov
outsl
fadd
push
jbe
es
fisubs
test
xor
mov
adcb
sti
test
test
xchg
fwait
dec
out
jbe
stos
pop
test
cmp
mov
jp
aam
ret
cmp
mull
pop
aam
sub
adc
cmp
pop
pop
dec
push
mov
mov
jne
in
js
push
sub
loop
test
movsl
inc
ret
add
in
scas
cmp
pop
sbb
cmpsb
sub
out
ret
int
add
fnstcw
jecxz
fsubr
pushf
and
sub
out
movsl
loopne
jae
shlb
adc
outsb
js
or
add
dec
xchg
mov
push
adc
sti
mov
or
outsb
cmpsb
mov
adc
aad
dec
xchg
in
push
outsb
fcom
enter
cltd
mov
das
repnz
roll
lock
add
out
ljmp
inc
int3
sub
push
mov
test
xor
shl
pop
frstor
jne
cmp
sahf
inc
mov
inc
mov
insl
xor
leave
mov
pushf
ss
andl
cmp
repz
mov
push
inc
dec
loop
sub
add
dec
jle
or
pushw
aam
jo
jge
inc
stc
mov
pop
mov
sub
sahf
inc
loopne
or
data16
ret
xchg
and
sub
adc
cmp
out
adc
shll
das
cs
lds
pusha
add
aad
push
jmp
aam
jno
mov
mov
jl
cmp
cli
pop
out
test
repnz
dec
iret
pop
jne
push
jnp
pop
lods
hlt
sub
mov
mov
imul
iret
int3
es
adc
pop
fnsave
js
std
mov
andl
sbbb
push
mov
iret
mov
add
xchg
adc
scas
movsl
cwtl
jno
lret
orb
push
into
insl
mul
aam
js
cmovbe
inc
jg
je
out
sub
neg
call
lahf
adcl
ret
push
pop
insl
dec
xchg
cmp
jmp
jecxz
cmp
jle
or
jmp
nop
cmp
pushf
or
jae
int
in
mov
jecxz
xorl
jmp
cmpsb
dec
dec
lahf
subb
call
jmp
cltd
stc
or
mov
sarl
and
insb
push
cmp
xorb
lea
sbb
mov
imul
and
stos
mov
aaa
fbstp
dec
test
andb
pop
stos
add
xchg
into
nop
lcall
or
jle
adc
jno
lret
pop
lcall
jns,pt
mov
xor
sbb
test
push
gs
stos
xchg
jne
cmpsb
add
leave
cmp
jmp
pop
add
sub
out
add
call
negl
out
iret
pop
jmp
shrb
jg
sub
adc
or
fsubrs
into
cmp
es
lods
pop
sub
and
scas
aam
xchg
xchg
push
adc
stos
int
push
loop
test
sbb
sub
xchg
adcb
dec
insb
adc
xor
cwtl
xchg
mov
pop
lea
stc
mov
std
jne
cld
jae
loop
sbb
dec
or
adc
int
adc
jge
cld
mov
or
sbb
mov
inc
scas
mov
cmp
adc
in
jae
cld
adc
cmc
sub
aas
sahf
adc
add
add
lret
ret
add
push
pop
mov
push
xchg
cmc
push
aaa
mov
inc
outsl
jnp
scas
mov
sub
loope
fldl
call
aas
test
cmc
jae
push
fstl
jae
test
mov
mov
mov
inc
lahf
adc
inc
adc
insb
test
insl
and
dec
in
push
dec
jecxz
cwtl
mov
add
add
icebp
dec
cwtl
fimull
test
pop
push
pop
into
fdivs
ds
repnz
xchg
out
jne
aam
push
pop
lea
mov
xchg
and
adc
mov
lcall
ja
sub
repz
mov
xorb
das
or
enter
xor
xchg
int3
loope
mov
notb
lret
arpl
xlat
outsl
pop
in
mov
call
loop
jns
lret
mov
mov
dec
sbb
gs
lahf
cmp
and
repz
in
in
inc
sub
sub
or
xchg
mov
fmull
adc
shrb
cmp
cmp
adc
int3
lods
insl
ret
les
int3
adc
mov
pop
xor
sahf
stos
cmp
fidivs
pop
dec
and
xor
pop
push
mov
cmp
in
xchg
inc
sub
mov
orb
adc
dec
aad
outsl
inc
subl
popf
or
shll
and
int
into
shll
push
push
lret
mov
shrb
stos
mov
or
and
mov
sub
clc
stc
fs
jno
or
pop
sub
jnp
mov
cmp
test
jl
add
xor
xor
or
pop
aaa
lea
xchg
sti
dec
and
mov
ror
pop
inc
cwtl
add
jl
aaa
enter
out
jne
jb
mul
adc
sbb
stos
mov
sub
adc
push
fstl
std
cmp
dec
pop
insb
stos
lock
push
hlt
out
test
sbb
push
stc
aas
adc
in
push
fcmovu
lret
nop
insb
not
cmpsb
movsb
lret
xchg
dec
adc
rol
jl
loope
inc
jbe
movsl
imul
in
push
mov
push
jg
inc
leave
sbb
xor
and
scas
mov
cmp
and
or
cwtl
adc
mov
orb
stos
shlb
int
or
mov
dec
inc
jp
clc
outsl
aas
push
xchg
cmp
adc
cmp
outsb
fldenv
ja
call
inc
adc
sarb
cmp
arpl
in
aam
adc
pop
sub
sbb
mov
int3
cmp
imul
jo
pop
pop
dec
jle
fstp
push
and
arpl
lret
and
or
in
sbb
push
or
mov
and
dec
xchg
cmp
lods
inc
xor
xchg
jp
xor
sbb
jns
push
cmp
lock
jbe
adc
cmp
lret
hlt
cmp
clc
loopne
bound
movsb
mov
stos
lret
jl
lret
aaa
sbb
jmp
mov
fstl
inc
pop
int3
push
xchg
fisubs
mov
fcoml
cltd
mov
int
mov
jg
pusha
xlat
jmp
push
aam
sahf
inc
pop
and
movsl
adc
push
loop
and
loope
and
ss
pop
xchg
push
sub
pop
push
scas
mov
pop
out
and
out
xchg
mov
test
test
and
aad
imul
clc
rcr
and
pmovmskb
xchg
repz
cltd
and
pop
jb
repnz
pop
push
int
and
sti
sub
jo
mov
push
sbb
addb
out
sbb
stos
pusha
aad
daa
shl
mov
sbb
add
das
xchg
test
cmp
bound
dec
push
test
jecxz,pt
add
mov
lret
mov
fwait
mov
mov
jne
roll
shl
adc
xor
rorb
jmp
sbb
testb
cmpsl
cltd
andb
xor
push
movsl
or
or
adc
xor
mov
and
scas
std
push
js
adc
pop
push
cld
or
gs
jae
imull
xchg
pop
mov
xchg
addl
sub
inc
negl
lds
inc
add
mov
in
sti
mov
jl
mov
sub
scas
sub
inc
int
daa
testb
sti
movsb
int
xor
and
test
loope
ja
mov
lods
repnz
repnz
pushf
aad
cwtl
sarl
inc
ret
fisttpll
jp
lock
int3
aaa
push
bound
jae
in
xor
movsl
pop
sub
xor
mov
shrb
lret
and
stc
xchg
addb
dec
popa
sbb
out
dec
popa
add
push
pop
dec
mov
or
pop
push
adc
mov
lock
lods
stc
adc
mov
and
sub
fsubp
push
cmp
hlt
sti
cmpsl
imul
xchg
fiaddl
pop
outsl
lock
xchg
push
sbb
adc
ds
out
adc
sbb
lea
out
xchg
lods
xor
xlat
cmc
popa
in
cmpl
mov
xchg
sahf
jecxz
mov
call
push
sub
test
adc
sub
cmpsb
movsl
test
fs
out
bound
sbb
jmp
loope
call
iret
ret
cmp
arpl
mov
jne
cmp
stos
push
push
cmpsb
jae
cmp
in
sbb
imul
je
push
pop
pop
mov
mov
leave
mov
aam
jb
inc
jb
mov
mov
mov
loop
lcall
mov
outsb
sub
sbb
mov
out
and
fldl
jne
mov
icebp
lcall
loopne
es
inc
fucomp
or
cmp
pop
dec
mov
mov
or
outsl
cmp
inc
or
outsb
xchg
incb
imulb
mov
in
mov
mov
jmp
gs
ja
movsb
inc
pop
scas
decl
mov
dec
imul
fstps
or
iret
int
sahf
mov
mov
xor
cmp
and
pop
cs
adc
xor
xor
push
add
pop
dec
mov
das
std
add
ret
subl
mov
jae
cmpsb
into
lahf
sub
xor
out
cmp
pop
push
lock
ret
jle
into
cmpsb
mov
call
jae
inc
mov
ret
in
jge
pop
repz
jb
pop
movsl
add
sbb
sbbb
cmp
xchg
fstps
shrl
pushf
loope
jge
add
adc
xchg
scas
xor
push
xchg
push
jnp
adc
sub
or
out
mov
inc
in
loop
sub
jbe
stos
enter
sbb
in
or
clc
test
push
je
jns
mov
and
mov
cmpsb
mov
fwait
adc
pxor
pop
roll
enter
in
subl
call
clc
sub
xor
dec
test
xor
ss
or
std
popf
mov
pusha
push
es
fidivrl
ljmp
fcoml
out
dec
jecxz
xor
imul
mov
push
pop
addb
add
sub
aam
mov
dec
in
and
and
test
jns
push
dec
xchg
inc
das
imul
insb
cmp
adc
mov
xchg
dec
push
adc
sub
or
ret
adc
jae
and
inc
shlb
icebp
mov
imul
loop
stos
push
loope
xchg
stc
fisttpl
ret
mov
leave
ljmp
mov
dec
sbb
jns
jne
xchg
cli
fsubrs
jmp
mov
mov
push
pop
mov
stc
mov
scas
cltd
mov
cld
inc
nop
xchg
lock
ror
dec
cmpsl
popa
jl
mov
movsb
xor
test
xchg
scas
out
pop
pop
fdivrl
mov
rcl
leave
mov
sbb
xchg
out
call
sbb
negl
loopne
mov
xor
sbb
jns
mov
xor
push
mov
data16
int
outsb
setp
mov
test
imul
push
add
popa
out
cmp
je
cmpsl
mov
in
push
push
stos
ficomps
adc
ljmp
mov
adc
xor
rsqrtps
xor
push
aad
insb
pop
data16
pop
mov
inc
push
push
inc
or
mov
movsb
push
adc
push
fs
inc
notl
mov
mov
shrl
enter
outsb
jae
push
nop
mov
enter
mov
inc
cld
ljmp
jl
push
pop
jmp
xor
mov
je
subb
mov
mov
imul
int3
jno
cmp
and
push
leave
fmulp
fsub
mov
fdivs
xchg
clc
les
in
mov
pop
xor
call
cmp
or
psubsb
dec
xor
mov
mov
test
dec
add
or
lock
sub
stos
test
inc
push
test
popa
sub
mov
push
rcll
mov
dec
rorb
sti
repz
lock
outsl
enter
cmpb
fstpt
dec
lret
pop
mov
into
mov
xchg
bound
pop
mov
mov
adc
inc
mov
rorl
sbb
cmp
call
adc
sbb
inc
hlt
insl
push
arpl
and
inc
aam
sbb
sbb
push
ftst
cwtl
xchg
jnp
mov
cmp
add
shlb
lret
dec
enter
jg
pop
addr16
cmp
das
sub
xorb
addr16
inc
pop
mov
pop
xor
jno
sbb
jecxz
mov
fs
aam
ret
sbb
mov
mov
or
cmp
adc
lods
negb
out
jo
inc
pop
aam
push
and
mov
adc
movsb
sti
or
pop
or
jo
aas
lea
jmp
and
andl
adc
jnp
push
inc
xchg
lock
sbb
packssdw
push
inc
cmp
mov
mov
jo
pop
dec
jae
adc
jb
add
mov
mov
fbld
or
mov
push
lea
pusha
decl
ret
adc
out
push
rcr
cwtl
iret
es
in
gs
adc
mov
into
ss
fnstcw
xorl
outsb
dec
into
jbe
add
out
imul
sub
arpl
ljmp
mov
push
push
xchg
call
fs
incb
je
pop
repz
enter
inc
rcll
push
popa
outsb
fstpl
jns
ds
add
push
pop
imul
int3
sbb
popf
or
sbb
sub
dec
pusha
pop
xchg
mov
pop
lods
xchg
int3
sbbb
and
inc
subb
jae
xchg
push
aad
lods
mov
adc
jnp
dec
adc
daa
fcompl
pusha
mov
insl
or
ss
out
push
jmp
sub
dec
sub
jp
out
mov
mov
out
or
add
mov
bnd
rorl
clc
pop
dec
dec
mov
in
mov
or
loopne
fimuls
clc
or
lret
sbb
fnstenv
jno
cmpsb
clc
imul
xor
gs
popa
xchg
mov
jmp
iret
jge
stos
into
ja,pt
outsb
lret
clc
sti
xchg
fidivl
xchg
xchg
add
mov
mov
jle,pt
mov
mov
bound
mov
pusha
cmp
lcall
aad
insl
and
and
loop
andb
sbb
into
cmp
push
testb
mov
lock
xor
test
mov
inc
mov
mov
jnp
mov
pop
mov
pop
ret
cmp
cmc
sbb
adc
inc
cli
adc
mov
das
jne
fs
jl
xlat
iret
jp
xlat
sti
jns
sarl
in
aad
push
daa
add
into
mov
push
das
fidivrs
add
into
mov
cmp
insb
inc
jo
mov
repnz
mov
dec
cmpsb
loope
push
inc
ss
mov
mov
mov
loop
or
mov
add
lods
inc
les
or
aas
mov
and
xchg
ss
xchg
insl
jmp
jmp
xchg
inc
sub
mov
mov
inc
xor
inc
or
lock
adc
push
mov
mov
into
lahf
outsb
in
clc
clc
iret
cmpsl
into
loop
test
iret
lods
loop
dec
test
sub
pushf
sub
lods
loop
push
xorl
and
fwait
push
xor
push
outsl
fstl
mov
fldl
add
and
mov
jo
das
aad
push
ret
sbb
stos
ds
adc
rclb
repz
inc
inc
test
cld
mov
add
sub
mov
shll
mov
xor
lcall
mov
add
nop
xor
mov
lcall
scas
lret
arpl
nop
push
outsl
inc
imul
pop
mov
movl
push
cmp
repz
pop
mov
loop
pusha
lcall
outsb
cmp
xor
mov
mov
out
cmp
jnp
and
dec
fs
ss
lds
push
add
enter
out
jg
mov
lods
mov
fs
aaa
push
aad
and
xor
or
dec
fs
add
cmp
fmull
sub
xlat
adc
es
jno
mov
lret
mov
rorb
ds
scas
int3
mov
jge
repnz
or
mov
xorb
sbb
hlt
and
sti
cmpsb
sub
movsb
int3
movsl
decb
mov
movups
fstps
in
mov
or
and
sbb
int3
or
mov
mov
mov
jo
gs
loope
outsl
mov
jge
sub
arpl
aad
movb
push
mov
xchg
movsl
test
pop
jl
jmp
stc
and
push
or
hlt
add
fisubs
es
add
xor
in
lahf
lcall
repnz
ret
jg
xchg
out
jg
lret
adc
into
filds
scas
fcmovnb
aam
adc
xchg
lock
dec
rcll
mov
adc
mov
pop
insl
repz
fs
ficompl
jns
mov
jecxz
mov
fs
mov
or
fildll
push
jecxz
int3
repnz
daa
lock
pushf
out
mov
push
xlat
ret
mov
out
xchg
add
lret
out
cmp
mov
popa
mov
or
jmp
push
mov
rorb
mov
sti
movsl
testl
pop
xchg
mov
insb
add
or
movsb
and
mov
rorb
lock
jmp
sbb
in
push
jl
stos
shrl
pusha
outsl
jae
hlt
leave
leave
dec
sbb
mov
and
adc
add
test
push
ljmp
adc
ret
insl
imul
jnp
popa
movsl
shlb
ret
dec
arpl
jae
aaa
out
aad
jmp
stos
popf
mov
and
mov
sub
ja
in
inc
outsb
sub
rcr
and
push
mov
fimuls
and
sub
xchg
adc
push
in
jmp
in
insl
pop
adc
cmc
add
xorb
mov
mov
mov
cmpb
incb
sub
jbe
inc
add
data16
gs
rcrb
lds
mov
lret
xchg
jp
sahf
les
xor
inc
cli
data16
jbe
pop
mov
sbbb
sbb
in
data16
mov
xchg
in
test
lods
and
mov
imul
lea
les
nop
sub
ss
inc
out
cmp
add
mov
sbb
mulb
mov
sub
push
mov
mov
lret
or
cmp
popa
dec
pop
add
icebp
insl
xor
xchg
add
mov
lea
xchg
daa
cltd
scas
and
ret
mov
rcl
sqrtps
push
cmp
fstps
les
enter
xchg
and
mov
inc
adc
aam
pop
sbb
mov
push
ds
test
les
add
dec
push
and
mov
sarl
push
orb
mov
cmp
ljmp
adc
pop
mov
push
add
loopne
fcom
ret
scas
pop
addr16
jns
adc
pop
aaa
jbe
cmp
lods
adc
int
add
lret
stos
pusha
sbb
jle
cmpsl
pop
sbbl
call
cmp
jne
pushf
aam
cltd
push
push
sti
xor
in
daa
ja
cmp
and
push
lods
sub
push
mov
mov
add
pop
jae
ja
xor
sbb
jmp
adc
subl
push
lret
imul
xchg
aam
in
outsl
sub
add
lea
push
flds
ret
scas
out
cmp
push
adc
clc
xor
jp
xor
out
xor
out
push
cmp
lret
pop
and
sahf
pop
adc
fdivr
mov
pusha
cmp
mov
pop
dec
pop
or
adc
mov
dec
xchg
adc
lret
cmc
mov
xor
mov
insl
and
aad
loopne
leave
sti
push
shrb
jo
lret
adc
shll
fcoms
movsl
es
pop
int3
sti
rolb
roll
daa
cld
idivl
and
adc
xor
cmp
bound
icebp
jbe
mov
and
into
push
lea
shl
bound
jg
xor
sbb
push
jo
push
shll
cmp
roll
bound
pop
add
cli
gs
aaa
cltd
lods
out
mov
and
cmp
jecxz
adcb
inc
mov
rcr
stos
stos
mov
out
cmp
in
inc
aam
push
pop
addb
sub
fcomps
shll
rcpps
sti
or
sbb
jb
sub
xchg
packssdw
test
push
mov
in
out
cmp
sub
arpl
lods
adcl
jmp
shrb
int3
cli
pushf
loopne
lea
les
pop
push
sub
push
roll
mov
inc
cli
lahf
push
mov
shll
popf
stos
fisubrs
jns
cmp
mov
cli
adc
popa
aad
mov
inc
pop
lcall
or
lahf
es
ss
inc
xor
icebp
dec
cli
adc
sub
fmuls
jmp
aam
adc
int
xlat
mov
sbb
mov
inc
jle
mov
xchg
test
ja
pusha
mov
push
xchg
and
dec
subl
testl
lods
mov
stos
sub
arpl
pop
daa
ja
push
jns
mov
dec
or
dec
fsin
xchg
sbb
xchg
outsb
jns
inc
call
cli
call
xchg
cmc
and
jmp
jbe
add
sub
gs
cmp
mov
sub
or
dec
inc
jns
adc
dec
outsl
out
xlat
out
sbb
push
push
movsb
outsb
fsubrl
pusha
xor
dec
jns
pop
inc
js
js
xchg
imulb
hlt
push
push
xlat
push
dec
or
sbb
jae
jnp
imul
out
or
jle
ljmp
adc
ja
in
call
insb
cltd
out
mov
stos
pop
mov
fisttps
cmc
sub
mov
iret
push
test
sub
sub
inc
fcompl
sbb
xor
inc
pushf
fisubrl
sarl
leave
loop
bound
or
fcoml
cmpsb
dec
mov
sub
icebp
inc
je
loope
mov
cwtl
test
test
sub
xor
push
ud2
mov
xchg
inc
cmp
fwait
sbb
xor
les
imul
push
mov
mov
or
add
push
in
dec
fisubl
mov
dec
mov
adc
ficoms
outsl
xor
shrl
fists
nop
inc
xchg
fidivrs
inc
inc
pop
jg
cld
enter
xchg
aas
ret
cmp
outsl
dec
xor
cmp
iret
sub
lods
lret
xchg
lret
repz
stc
jl
test
mov
sbb
popf
pop
idivl
cmpsl
mov
mov
lds
ljmp
mov
inc
mov
aad
in
sub
xor
and
addr16
jge
ljmp
fsub
in
lahf
cli
cmp
add
fcomp
xchg
xor
cmp
mov
repnz
pop
inc
cld
sub
dec
aaa
jp
pop
pop
lds
test
clc
and
fucomip
int3
adc
shr
and
pop
test
rolb
push
cmpsl
jle
repz
lock
das
adc
pop
test
out
jnp
dec
cmp
mov
xchg
mov
push
cwtl
icebp
push
mov
mov
mov
addr16
aaa
ds
fs
imul
ret
pusha
or
xor
jle
roll
mov
push
sbb
push
pop
repz
hlt
dec
std
sub
or
ds
lods
std
shrl
js
test
in
cmpsb
ficompl
adc
sub
mov
fdivs
enter
enter
popa
repz
nop
pop
stos
cmp
push
inc
aas
shll
jp
jle
dec
lcall
adc
pop
push
orl
sub
es
add
jp
mov
mov
loopne
leave
mov
leave
cld
xchg
andl
mov
dec
sub
or
mov
mov
sbb
outsl
sbb
jb
iret
pop
xor
jno
mov
ret
stos
cmp
inc
imul
imul
in
int3
inc
and
cmpsl
jmp
xchg
arpl
lahf
push
in
pop
jp
js
jp
push
xchg
sub
ss
jg
lgs
jmp
in
or
ficoms
fists
dec
xchg
lahf
and
adc
and
cmp
popa
xor
out
jge
push
jg
xchg
mov
fst
mov
add
inc
mov
lea
hlt
clc
fucom
jns
inc
xor
xlat
push
jns
inc
sahf
pop
dec
divb
xchg
addl
bnd
push
xchg
in
ret
add
scas
js
push
fs
aam
mov
out
mov
jns
les
dec
jle
mov
data16
mov
rclb
mov
fstp
arpl
dec
mov
mov
inc
xor
mov
pop
sbb
cmp
inc
lods
aaa
mov
fists
lret
push
sub
xchg
imul
movsb
fprem
mov
adc
in
xor
out
sbb
jp
or
sbb
imul
dec
push
pop
bound
dec
cmpsb
shrl
scas
mov
mov
push
ret
add
ret
addb
js
aam
imul
jno
fs
stos
adc
filds
adc
fisubrs
jmp
ja
xor
sbb
fisttpl
int3
mov
sbbl
or
push
ja
sbb
cli
fidivl
push
cli
test
xor
jg
shrl
outsb
out
lcall
mov
pusha
xor
outsl
cmp
sbb
in
and
shr
and
jne
hlt
xor
xchg
hlt
push
ja
roll
push
mov
insb
mov
outsl
aaa
loopne
jnp
stc
mov
mulb
jns
in
xor
sub
pop
shl
arpl
xchg
retw
jb
mov
sbbb
ds
mov
lods
xorb
cld
stos
fwait
jb
xchg
jno
test
or
sbb
out
cli
dec
jo
andl
adc
inc
pop
stos
push
pop
adc
push
fists
int3
lahf
cmp
and
add
addb
push
js
pop
orl
xor
in
shll
mov
fldcw
add
sub
notl
inc
les
jecxz
adc
fisubs
lods
xchg
shl
adc
xor
loope
pop
leave
outsl
sub
mov
lds
into
mov
xor
sbb
inc
stos
add
aas
or
push
push
loop
mov
arpl
fcomi
push
enter
pop
clc
inc
inc
inc
mov
jl
xor
inc
insb
and
mov
mov
adc
xor
lcall
mov
push
dec
and
jge
sub
cmp
mov
dec
daa
dec
int3
daa
cwtl
or
push
sub
test
in
xor
rcll
xchg
addr16
rorl
xchg
push
loopne
and
push
sub
xchg
fstpt
in
fbstp
loop
sub
cltd
aam
mov
pop
ficoms
push
lea
jae
fs
push
lods
push
add
adc
mov
mov
push
mov
pop
sub
ja
data16
mov
repnz
jp
lahf
and
outsb
fisubs
mov
lea
cwtl
inc
cmpsl
mov
and
jge
shrb
fcmovnbe
and
scas
addl
mov
subb
push
add
mov
pop
bound
shrl
pop
push
pop
push
adc
outsl
and
lock
pushf
and
aas
sbb
jno
push
mov
xor
pop
pushf
aas
jl
cmp
outsl
jb
fildl
xchg
in
push
mov
inc
and
out
cmp
or
inc
mov
inc
pop
loopne
popf
inc
insl
fcom
fwait
sub
rclb
out
test
jg
mov
sbb
hlt
pop
pop
cld
or
ljmp
or
xor
sarl
xchg
sbb
ret
icebp
jge
and
les
out
ljmp
inc
push
cmp
loop
int3
daa
fwait
pop
jge
and
and
or
mov
mov
arpl
add
jns
hlt
pop
mov
stc
mov
sub
pop
mov
out
insb
mov
loop
out
popf
push
test
movsb
sub
push
subb
out
push
mov
outsb
imul
mov
push
add
and
inc
inc
xor
fs
mov
xchg
dec
xlat
dec
and
xchg
push
xor
jge
push
adc
popf
inc
shl
fdivrs
les
add
scas
cld
jbe
je
out
xor
mov
jmp
mov
xchg
pop
cld
sub
mov
sbb
mov
inc
shrb
jne
int
mov
xor
sbb
push
mov
push
hlt
mov
test
test
popf
pop
loope
adc
push
pop
or
es
arpl
inc
xor
and
adc
cmp
push
pop
dec
dec
popa
jmp
mov
xor
mov
shlb
mov
scas
sub
pusha
add
dec
or
sub
sub
aam
gs
popa
pop
ret
out
insl
les
add
jns
outsl
insl
jg
imul
stc
test
incb
outsb
cmp
push
jb
mov
inc
js
jbe
mov
dec
cmp
loop
int3
lods
cmp
cmp
mov
xchg
jae
or
cmc
add
xchg
loope
addr16
mulb
lahf
pop
cmpsl
std
mov
mov
lods
out
ja
into
pop
add
mov
dec
loope
idivb
fdivs
xor
pusha
dec
jmp
dec
dec
push
xor
mov
pop
dec
test
faddp
push
lret
cmp
cmp
fmul
gs
sub
adcb
pop
cli
int3
push
jmp
mov
mov
fnstsw
imul
inc
or
bound
cmp
mov
test
das
add
add
testl
dec
xorb
movsb
sub
pop
or
fiaddl
xchg
push
mov
dec
fs
test
ret
and
stos
dec
mov
icebp
inc
fistps
mov
xchg
cs
nop
mov
mov
pop
daa
dec
int3
ret
sbb
xor
push
aas
mov
push
and
sbb
xchg
pop
jg
cmp
stos
cmp
or
shrl
mov
sub
aad
cld
dec
cltd
mov
or
jno
inc
std
and
ljmp
push
fwait
cmp
xor
test
divl
dec
imul
pusha
inc
mov
jns
scas
add
lret
mov
pop
jnp
xor
rclb
pop
add
cmp
cmp
xchg
sbb
push
xlat
aam
mov
mov
or
push
adc
mov
mov
inc
cmp
es
outsl
loope
leave
int
push
dec
scas
movsb
mov
imul
cmc
sti
or
rolb
stos
arpl
jmp
repnz
sub
aad
rcrb
mov
jge
mov
add
cmc
mov
sbb
xor
mov
mov
xor
or
enter
dec
orb
sub
cmc
lods
dec
mov
stos
cmp
inc
jg
ss
pop
outsb
aaa
push
inc
scas
arpl
insl
mov
mov
jge
xor
mov
push
xchg
mov
lock
out
xor
add
lods
imul
dec
pop
push
cs
cmp
sub
pop
push
xor
mov
fidivrl
pop
fwait
fwait
cmp
sbb
imul
jo
or
inc
push
xor
dec
cmp
mov
mov
imul
cmpb
shrl
lret
repz
inc
sub
into
mov
mov
dec
popfw
sub
fidivl
outsl
enter
mov
jns
pop
ror
mov
xchg
icebp
and
sub
test
fld
mov
cmp
jmp
push
pusha
outsl
dec
fnsave
push
gs
pop
add
push
push
and
sbb
push
inc
push
jecxz
fmull
shl
push
sbb
push
mov
sub
pushf
lods
cmp
push
cld
inc
add
mov
push
jae
mov
mov
sahf
leave
sub
iret
adc
mov
jae
pop
pop
loope
fwait
pop
lea
pop
insl
cmp
in
les
call
jge
or
bound
test
insl
and
pop
mov
into
cmc
sub
fistpll
cmp
addr16
fwait
enter
adc
inc
and
push
addr16
mov
sbb
fcompl
jmp
jmp
out
lret
jge
xchg
inc
aad
out
mov
push
jns
mov
pop
xchg
cmpsl
push
mov
xlat
push
or
mov
sub
or
adc
out
jae
inc
iret
push
leave
ds
sub
inc
add
jle
xchg
rolb
into
movsb
xor
cmp
push
and
out
mov
out
enter
movsb
and
jno
cltd
jbe
mov
cmp
mov
gs
dec
or
les
mov
fadd
cmc
lock
jns
sbb
sub
in
shlb
jmp
ret
and
jg
mov
dec
out
mov
das
and
cmp
xchg
lahf
ljmp
lahf
into
push
adc
mov
adc
int3
sbb
cld
mov
mov
jbe
les
xchg
mov
inc
jae
hlt
imul
inc
pop
mov
push
outsb
stc
adcl
popa
pop
and
rol
push
sahf
cmpsl
cs
into
sbb
inc
add
push
mov
jnp
sbb
push
and
and
add
in
push
shll
fidivs
inc
mov
add
into
divl
shr
test
jge
mov
and
cmp
out
push
das
int
pop
push
jbe
stos
stc
sub
mov
and
sbb
dec
xchg
inc
xor
clc
xchg
dec
mov
scas
sahf
and
cld
push
std
jge
inc
pop
jbe
add
testl
sub
jo
inc
mov
loop
inc
into
lahf
pusha
push
and
lods
ja
pushf
in
jl
fsubrs
add
repnz
mov
lds
setbe
int
popa
cs
push
mov
sbb
push
sub
cmp
mov
xchg
inc
out
fidivl
aas
xchg
stos
lock
fnstcw
fsubrs
test
pop
sbb
movsl
mov
fsubs
jg,pn
sbb
dec
hlt
jo
or
outsl
movups
add
fildll
leave
pop
rcll
call
xchg
dec
dec
es
mov
jg
test
loop
mov
pop
out
jno
outsb
cmp
sbb
xchg
xlat
std
and
add
add
mov
pop
pop
adc
and
pop
inc
cmc
fcoml
mov
jecxz
sbb
ret
das
call
in
push
or
xchg
dec
lods
adc
lock
dec
dec
iret
in
cmp
cltd
mov
add
sahf
xchg
cld
dec
adc
cmp
fldt
or
and
cmp
jmp
inc
jmp
dec
fistpl
add
pop
arpl
cld
adc
push
loop
sub
mov
pushf
pop
out
and
dec
sbb
ret
test
dec
nop
dec
sbb
push
sbb
std
out
mov
es
adc
xchg
outsb
jle
or
dec
jo
push
jbe
imul
mov
imul
hlt
push
cltd
push
xorb
xchg
sbb
xchg
jp
jne
lock
push
pop
push
mov
outsl
lods
or
jo
sarl
fucomi
add
call
fsubl
and
pusha
push
imul
out
pop
nopl
stos
dec
pop
or
mov
inc
aad
imul
lahf
lcall
mov
or
arpl
cmp
lcall
mov
adc
xchg
inc
adc
mov
mov
pushf
jo
inc
mov
sbb
ja
rcr
fmuls
xor
adc
adc
rorl
fs
outsl
pusha
xchg
daa
scas
xlat
fisubl
pop
jl
loop
pop
dec
jmp
incl
cmp
test
cmp
shll
imul
es
add
mov
mov
pop
push
adc
mov
add
sahf
shrl
into
cmp
popa
cmpsb
inc
add
mov
and
xorb
ljmp
inc
inc
or
enter
or
iret
outsb
movsb
or
jecxz
imul
add
xchg
rcr
dec
cld
mov
jns,pn
pusha
pop
jle
jmp
mov
rcll
push
cli
push
das
push
lret
or
insl
in
mov
cmp
rorb
mov
pop
xchg
xlat
or
adc
nop
test
mov
mov
or
cli
ss
fxch
adc
fldenv
repz
insb
adc
lret
inc
jge
sub
imul
cmpsb
aas
cmp
push
jmp
lret
add
iret
xorb
data16
mov
dec
xchg
and
or
ds
xchg
push
mov
add
lahf
js
pop
sub
adc
out
inc
addl
xor
inc
dec
sbb
ret
cmpsl
push
xor
out
jnp
test
sbb
lods
loop
adc
test
jne
mov
int
push
shll
pop
and
mov
add
add
sub
sub
cmpsb
dec
dec
ss
cwtl
adc
and
out
dec
mov
insl
ret
int
sub
push
in
jl
push
ds
stos
in
test
cwtl
popa
outsb
and
aam
ficomps
jae
sub
or
jp
sub
lock
js
jns
push
sbb
insl
inc
jns
cmp
loope
or
xchg
jl
fstl
cmc
dec
push
pop
repnz
rcll
icebp
rep
shrl
movsb
hlt
repz
out
adc
pop
out
xchg
call
pop
or
pop
jle
in
cld
add
mov
mov
pop
push
es
mov
les
sbb
stc
imull
jl
outsl
jne
sub
jl
dec
call
dec
rcrb
jecxz
ds
mov
daa
and
call
adc
mov
lds
dec
dec
divl
mov
jle
sahf
push
sub
test
mov
rcrb
mov
int
ret
andl
call
jecxz
mov
dec
mov
cmpsb
cwtl
pusha
stc
push
cmp
fwait
xchg
scas
int
ds
adcb
jbe
jmp
adc
or
movsbl
mov
movsl
cmpsl
xor
push
aam
mov
or
mov
cmp
push
fimuls
adc
sub
and
enter
div
nop
and
loope
xor
mov
int3
xor
push
sahf
mov
xchg
pop
std
mov
movsl
movsl
inc
and
out
je
in
mov
lods
jo
cwtl
aad
pop
push
jne
pop
fstps
or
outsl
lods
dec
cwtl
aas
dec
sti
dec
enter
and
ljmp
xchg
pop
arpl
push
sub
mov
movsl
dec
mov
inc
pop
mov
xchg
call
pop
mov
mov
xchg
loop
dec
sbb
out
inc
cmp
push
mov
mov
icebp
outsb
xchg
ss
xchg
inc
lahf
add
sub
cmp
inc
cli
adc
push
mov
es
cmp
pop
cmp
sub
adc
and
jl
in
pop
lret
or
rorl
dec
inc
xor
cltd
xchg
popf
negb
repz
repz
push
scas
lods
mov
sbb
dec
mov
shr
xchg
rorl
std
mov
push
cmpsl
mov
sbb
mov
mov
xor
mov
daa
mov
repnz
bnd
loop
cmp
xchg
dec
mov
movsb
sbb
mov
or
dec
mov
lret
cmc
test
cli
fs
pop
aam
and
ret
clc
in
movsl
mov
stos
mov
cmp
xor
call
jg
enter
in
lahf
bound
xor
add
and
dec
repnz
cmp
sbb
addl
adc
add
mov
dec
push
ret
rcr
xor
stos
mov
and
inc
mov
pop
ja
dec
int
outsb
push
add
cld
push
pop
push
das
dec
int
push
js
pop
out
xor
adc
cmp
std
mov
sub
fwait
jbe
and
mov
sub
pop
lods
mov
sub
loope
jecxz
pop
fisubs
adc
and
hlt
sbbb
sub
int3
jno
out
cmp
in
icebp
fimull
out
imul
pop
pop
ds
repnz
cmp
cmp
dec
jge
add
cmp
cmpsb
xchg
call
xchg
jge
cmp
out
sbbb
cwtl
mov
pop
lea
daa
inc
adc
pop
in
in
icebp
negl
lahf
cld
mov
test
pop
pop
adc
pop
fistl
stc
out
xlat
mov
imul
daa
sbb
pop
movsl
add
in
mov
mov
imul
stos
fwait
clc
adc
or
push
push
inc
mov
je
aad
int
shll
cltd
pop
sbb
icebp
xor
inc
outsb
rolb
mov
xchg
in
repz
imul
sub
or
sbb
icebp
in
insl
xor
jb
out
pop
in
maxps
mov
sbb
fnsave
and
icebp
jo
outsl
aas
in
adc
fucomi
mov
add
ret
dec
mov
int3
repnz
xor
lret
mov
outsl
sbb
push
xchg
mov
mov
fistpll
mov
pop
xor
in
push
cmp
xorb
xor
imul
push
push
jns
ret
rcl
decb
sbb
push
mov
ud1
sbb
js
adc
sub
lea
sub
adc
mov
mov
inc
rol
jnp
sbb
shl
sub
lock
cwtl
push
and
repnz
std
xor
jge
aad
xor
rolb
jae
outsl
xlat
loopne
cmp
or
cmp
repnz
pop
pop
mov
cld
imul
mov
inc
sbb
or
xchg
sbb
pop
and
pop
pop
loopne
outsl
pop
push
mov
jg
mov
cmc
push
cmp
or
add
xor
lret
shlb
pop
pushf
sahf
repz
mov
pop
mov
mov
mov
hlt
dec
xor
test
rcrb
and
pop
out
enter
jmp
ret
stos
and
stos
mov
pushf
leave
dec
stos
sbb
insb
mov
mov
cmpsl
std
filds
sub
xor
insb
cmp
cmpsl
nop
xchg
push
cmpb
sub
xlat
dec
decl
decl
and
or
dec
pop
mov
call
test
pusha
xlat
and
data16
std
in
outsl
outsb
push
arpl
mov
cmp
daa
pop
ffree
ret
popa
fadds
dec
out
push
xchg
dec
xchg
xchg
jne
inc
inc
push
cmp
push
je
stos
cmp
adc
mov
in
jl
push
pusha
sub
test
jecxz
scas
pop
pop
dec
pop
and
mov
in
aas
popf
enter
xor
jnp
inc
push
mov
pop
arpl
xchg
fs
clc
dec
xchg
out
daa
sub
iret
jmp
inc
pusha
adc
andb
mov
out
fcoml
sahf
movsl
stos
or
lret
testb
cli
push
jno
mov
pop
sbb
loop
rorl
pop
std
add
sbb
cmp
mov
out
mov
push
xchg
loop
add
pop
inc
gs
and
cmp
stc
xor
dec
and
mov
rcr
jl
dec
pop
pop
sbb
stos
xor
dec
inc
das
mov
call
pop
test
inc
aam
mov
push
addb
push
ret
push
aad
sub
and
and
lods
sbb
daa
sbb
mov
sbb
mov
xlat
loopne
mov
scas
addr16
xchg
mov
pop
lods
xchg
ret
mov
jl
out
lds
fisubs
fsubl
cltd
pop
mov
xor
addr16
in
shll
into
sub
mov
add
inc
add
lods
cmp
mov
pop
pop
sub
push
pop
add
pop
sub
fs
dec
mov
hlt
addb
rorl
outsb
repz
or
ret
lods
push
inc
inc
pop
in
outsb
sub
fstpl
and
ljmp
mov
test
or
adc
jmp
fsubs
mov
enter
or
mov
jecxz
jno
mov
mov
testb
ss
lahf
movsb
int
fimuls
out
dec
dec
push
mov
cs
pop
xor
inc
ds
std
andl
jns
push
mov
pop
add
cli
or
xor
popa
in
xor
scas
int
add
sub
cmp
inc
mov
push
jns
test
push
loope
in
fstpt
or
testl
xchg
add
fisubrl
scas
shlb
js
ss
lahf
je
push
dec
pop
ds
fucomp
jmp
inc
jle
mov
imull
mov
fistpll
sbb
sbb
xor
jecxz
xor
and
mov
aaa
or
sbb
xchg
push
vmaxps
lods
mov
imul
movsl
xor
add
call
ret
enter
and
push
in
fwait
nop
popa
lret
inc
ror
push
xchg
or
push
les
cmp
pop
mov
xchg
mov
fsubr
aaa
das
pop
cltd
adc
mov
jle
cmp
dec
fnsave
cld
pop
jge
mov
fwait
mov
inc
push
xorl
addb
jae
and
xor
fdivr
out
ret
jo
xor
adc
ret
fstl
cmpsl
or
fstp
movsb
dec
bound
cwtl
mov
push
icebp
fadd
nop
mov
je
and
shl
push
add
xor
pop
pushf
lods
mov
movsl
cmp
call
loope
jp
mov
jno
adc
jno
cmpsl
jp
ss
cmp
mov
inc
outsb
iret
cs
int
jne
push
ror
test
cmpsl
add
dec
xor
xor
sbb
jle
xchg
hlt
sub
imul
cli
pop
push
cmp
or
mov
jl
sti
cmpsb
shlb
not
push
and
lea
sbb
or
jae
push
pop
or
outsb
push
jne
pop
sbb
mov
mulb
mov
pop
cmp
pop
fwait
call
cmpsb
sahf
cli
mov
shrb
sarl
ja
shll
inc
pop
mov
cmc
dec
loope
sbb
fdivs
dec
arpl
push
or
cmpsb
lds
cmp
test
push
xor
popf
xor
xchg
dec
jecxz
cwtl
ret
in
das
gs
loop
repnz
adc
or
repz
xor
lret
push
aam
ret
pop
pushl
cwtl
call
js
jp
push
js
orl
pusha
push
or
add
xchg
and
xor
pop
inc
aad
es
scas
mov
stc
sbb
lds
es
aaa
enter
cmp
stos
addr16
mov
push
xor
sahf
pop
test
jg
iret
pop
sbb
xor
pop
movsl
repz
push
cmpsb
ja
imul
xchg
adc
sbb
loopne
popa
je
mov
hlt
ljmp
decl
mov
fwait
daa
or
pop
iret
hlt
insb
aaa
push
mov
loopne
fisubs
popf
test
aad
sub
lock
push
cltd
in
aas
pop
mov
jb
or
dec
dec
or
cli
insb
rcrb
xor
jp
mov
xchg
xchg
call
jg
adc
mov
arpl
faddp
mov
dec
fldl
mov
pop
cli
out
out
jmp
push
mov
jg
das
adc
mov
push
sbb
mov
sarb
into
push
mov
fldcw
sub
movsb
test
nop
in
cmp
fwait
mov
inc
sub
xor
xchg
adc
inc
das
loopne
test
cmpb
repz
xchg
ss
inc
add
mov
leave
push
sbb
movsb
js
add
in
cwtl
pop
gs
push
add
fmull
sbb
fcmovnbe
pusha
xlat
loope
aad
fbstp
sub
fadd
cmp
divl
push
mov
ljmp
jns
daa
pop
mov
inc
aad
dec
ds
fs
pushf
xor
and
xchg
inc
lcall
or
test
mov
mov
out
mov
push
ret
mov
cmpb
iret
ss
dec
ds
loop
or
movsl
idivb
test
out
or
shrl
push
imul
fstpt
dec
fbstp
insb
mov
outsb
aaa
adc
lret
into
ja
cmp
ffree
int3
inc
cwtl
cmp
pop
jmp
mov
imul
inc
and
iret
iret
inc
jp
test
out
dec
push
push
dec
in
xor
xchg
aam
das
push
andl
jnp
outsb
gs
push
adc
push
out
int
mov
xchg
xchg
lcall
and
dec
aam
jbe
inc
xor
jb
xchg
jg
push
popl
imul
jnp
sahf
cmp
outsb
jge
pop
xchg
repnz
call
and
lahf
push
divl
add
inc
repnz
sti
jne
push
mov
mov
jp
into
lea
jo
imul
movsb
xchg
push
ja
dec
xchg
mov
fsts
lods
divb
mov
mov
mov
frstor
fadds
lahf
lods
fs
and
in
cmpsl
mov
push
pop
inc
xor
xchg
cmp
mov
int
mov
mov
ja
pop
mov
ds
mov
mov
sub
jnp
negb
cmp
push
dec
lds
aaa
sub
push
bound
mov
dec
dec
loop
sbb
in
and
jp
aam
or
adc
rcll
lahf
dec
push
mov
jl
sahf
xor
push
xchg
pop
jbe
sub
cmp
outsb
cld
sti
xchg
lea
bound
lcall
dec
cwtl
dec
fstpl
pop
jle
pop
loopne
mov
sbb
xor
jne
lods
jne
mov
add
cmp
stos
pop
sbb
mov
add
xchg
hlt
dec
sar
cmp
imul
std
push
insl
les
fwait
jae
push
fists
sti
mov
enter
into
and
jmp
out
mov
jg
cs
ret
mov
inc
ja
mov
or
ljmp
adc
sub
adc
lods
or
ficomps
fistpl
mov
adc
sti
fcompl
andl
mov
sbbl
fistpl
int3
sbb
aad
ret
lcall
add
mov
movsb
jmp
mulb
dec
push
data16
notl
mov
jne
ss
push
out
int3
jbe
sbb
cld
fbstp
std
inc
test
mov
pop
jb
adc
stos
ljmp
xlat
fdivs
or
enter
inc
xchg
aam
imul
push
nop
mov
test
sbb
jmp
les
jne
cli
sbb
lods
mov
negl
cltd
sub
push
cwtl
outsl
jmp
or
std
jbe
inc
sahf
mov
pop
fadds
cltd
pop
ja
out
cmp
popf
shr
cmp
popa
gs
jae
mov
xor
aam
or
or
loope
enter
vcvtdq2pd
lods
and
fcmovnbe
ds
rorl
sub
xor
scas
cmp
xchg
insl
mov
fidivrs
test
mov
subl
mov
out
fstl
sbb
fistps
push
pop
or
pushf
pop
xor
outsb
xor
and
dec
jnp
pop
fidivl
lahf
in
fildl
sarl
mov
fwait
movsb
xchg
mov
adcl
leave
mov
or
mov
sub
xchg
adc
jecxz
in
mov
in
jl
mov
popf
pop
or
inc
in
in
fwait
repz
dec
or
fldt
arpl
pushf
pop
rcrb
lret
sti
or
push
cmpsl
jb
sbb
mov
sbb
pop
sub
aad
fistl
testl
or
daa
lods
fyl2xp1
push
cmp
push
test
sbb
mov
add
aam
cli
pop
jle
pop
dec
test
fmull
popf
dec
lahf
or
mov
and
inc
adc
jno
imul
icebp
xchg
or
movsb
in
jo
sbb
shl
fwait
dec
in
rep
mov
mov
xor
xor
cmp
jg
jb
arpl
mov
imull
mov
lret
aaa
lahf
vphadduwq
xor
add
outsl
addr16
ds
xor
test
gs
jnp
pop
clc
jmp
sub
stc
push
bound
sbb
jecxz
jae
push
mov
add
add
aad
jmp
test
loop
repnz
or
jecxz
imul
pop
mov
test
cmp
mov
adc
cmovbe
loope
inc
sub
push
mov
lea
xlat
xchg
and
xchg
imul
xchg
dec
call
pop
mov
sub
cmpl
lcall
out
pusha
mov
repz
fwait
sub
cwtl
jbe
mov
pop
lods
push
adc
jl
fiadds
pop
dec
push
cmpl
adc
push
mov
dec
subl
stos
icebp
xchg
daa
jae
ja
ds
iret
enter
sysexit
pop
xor
sbb
adc
mov
or
inc
outsl
out
mov
iret
sub
xchg
add
test
mov
adc
fwait
push
push
sub
cmpsl
data16
add
pop
or
mov
mov
mov
add
test
rcr
or
jmp
lret
data16
push
hlt
sub
sbb
jae
or
xchg
pop
jmp
loop
jmp
insl
dec
push
and
cmpsb
ficompl
bound
push
pop
sbb
mov
iret
xchg
sbb
test
push
jno
iret
xchg
jae
sahf
pop
jae
push
rcrw
cmp
or
dec
ret
lods
loopne
pop
inc
mov
lret
mov
lahf
or
and
lods
clc
xor
movsl
jl
pop
pusha
ret
insb
data16
inc
pop
enter
fcompl
fcomp
ss
aam
pop
jns
add
jge
mov
aas
pop
mov
lret
aaa
xchg
mov
adc
popa
icebp
add
loop
cmpsb
js
mov
mov
mov
repnz
push
mov
lahf
jecxz
push
loopne
imul
push
sti
xchg
cld
cmpsl
jmp
pusha
rcr
add
fadds
cmpsl
xchg
sub
std
xor
sub
inc
jb
xor
arpl
addr16
mov
and
pop
lods
cmp
mov
fcoms
fwait
loope
or
rcrb
pop
jecxz
add
aam
stc
cmp
sahf
divb
push
or
push
xchg
sub
and
lock
fs
jmp
shll
loopne
test
push
loope
imul
inc
sbb
lret
loop
jbe
test
jnp
icebp
jp
aas
lret
into
and
jp
aaa
les
add
imul
mov
add
mov
jmp
insl
sti
loopne
sbb
inc
movsl
mov
ljmp
sete
adc
dec
rol
dec
ljmp
mov
pop
sub
xchg
inc
inc
add
int
and
fwait
ja
push
add
xor
pop
sbb
pop
mov
jg
xchg
adc
fwait
and
jmp
push
cmp
mov
stos
jnp
cld
and
adc
ret
add
jns
pop
into
add
jmp
nop
mov
fstl
popf
sub
pop
popf
das
or
loopne
xlat
inc
pushf
xor
mov
jb
push
repnz
imulb
inc
pushf
loop
ss
cmp
pop
jae
push
sbb
add
shr
dec
lock
cmp
or
inc
popf
into
xlat
fistps
mov
inc
dec
mov
pop
dec
shlb
inc
scas
inc
cmp
lret
leave
dec
test
pop
jg
push
pop
cmpsl
push
cmp
les
pop
enter
or
cli
repnz
cmp
cmp
lret
cmpsb
sub
sub
pop
inc
adc
mov
das
jb
inc
int3
aas
cmp
sub
pop
mov
rcrb
enter
testl
push
cmp
mov
fwait
in
sbb
sub
jno
imul
sbb
andb
or
pop
sub
cmc
lods
add
inc
js
mov
lods
hlt
sub
or
sahf
and
cmp
inc
cmp
rorl
cmpb
push
jnp
enter
mov
jnp
mov
repz
push
mov
hlt
movsl
mov
out
mov
sub
int
push
add
cmp
sbb
lret
jl
bound
out
xchg
shl
sub
inc
xchg
cli
mov
add
or
xchg
aad
fisttpl
sti
rcll
and
xchg
imul
and
nop
arpl
scas
push
inc
push
data16
sarb
push
inc
mov
test
roll
or
mov
cmp
shll
into
ret
sub
popf
jo
ret
jae
divb
leave
dec
fwait
sbb
hlt
divl
lea
test
js
xlat
into
cld
insb
jp
cltd
jmp
cld
cltd
testb
push
mov
pop
sti
mov
or
push
jb
pop
vmwrite
pop
sub
cmc
scas
mov
jge
imul
shrb
outsl
mov
rcl
mov
xchg
imul
or
lea
outsl
pop
push
push
mov
ss
mov
add
adc
mov
mov
clc
scas
pop
xor
cmpsl
push
mov
sub
or
or
out
dec
loopne
gs
bnd
enter
pop
xchg
pop
outsb
shll
mov
fistps
test
inc
out
les
fdivs
pop
call
add
and
mov
mov
sahf
dec
imul
stos
push
pcmpgtw
subl
push
jmp
push
ret
cmp
or
aaa
pop
xchg
out
lcall
aam
ficoml
mov
shlb
mov
bound
dec
scas
outsb
xchg
jne
in
cltd
mov
mov
stos
sub
jbe
xchg
clc
into
retw
cmpsb
jmp
fidivrl
hlt
cmp
pop
inc
push
in
sbb
iret
xchg
sbb
daa
in
lea
push
arpl
pushf
jb
inc
cmp
js
fs
or
aas
repz
sbb
sbb
pop
fdiv
ja
dec
mov
pop
xchg
adc
test
xor
fstl
sarb
mov
insl
pop
mov
xchg
xor
xor
mov
dec
out
addr16
aas
loope
sub
jg
mov
clc
adc
imul
cmp
ja
adc
push
lret
cmp
sub
cli
xlat
stc
add
xchg
imul
push
out
cmp
shll
and
outsl
cmpsb
push
xchg
stc
filds
movsl
scas
xchg
ja
xchg
push
arpl
lods
sbb
stos
dec
mov
out
inc
movsb
fcmovne
sahf
jecxz
aam
push
stos
adc
dec
jb
cmp
dec
and
into
test
dec
aas
mov
call
adc
stos
mov
addr16
imul
fldt
popa
hlt
dec
leave
repz
jmp
mov
mov
jae
mov
je
cmp
jl
push
sahf
psrld
pop
pop
and
test
push
sub
jb
xlat
aaa
mov
pushf
insb
insb
lea
mov
dec
lods
outsl
js
cld
cli
shl
mov
push
push
cltd
mov
mov
scas
fwait
dec
nop
mov
pop
lret
out
in
dec
or
nop
loopne
test
out
ds
fidivs
insl
pop
adc
imul
clc
pop
es
dec
xchg
and
outsl
mov
dec
mov
cmpsb
cmp
jbe
lock
cmpsb
test
sbb
mov
sub
aad
imul
dec
inc
xchg
lock
insl
or
mov
outsb
sub
push
lods
idivb
inc
push
js
jg
lret
mov
popf
dec
sbb
push
cs
lock
jl
stos
mov
lea
mov
andb
nop
sbb
gs
dec
or
shlb
xor
shrb
jecxz
xchg
mov
subb
pop
jl
or
and
pop
push
addb
movb
scas
mov
inc
mov
pusha
insb
mov
xchg
in
shlb
xor
cltd
int
and
mov
adc
inc
imul
nop
or
jns
lds
cmp
in
sti
lret
mov
inc
pop
cmpsl
shl
mov
fcompl
xchg
mov
pop
pop
inc
aad
sub
daa
out
xchg
ficomps
lret
xchg
jo
stc
fadds
or
or
repnz
data16
xor
push
mov
dec
test
xor
loope
in
add
rcrb
push
xor
or
aas
rorl
popa
mov
sub
lcall
xchg
mov
aad
nop
movb
mov
aam
xchg
mov
in
or
lds
outsl
imul
and
cmc
jle
iret
inc
pop
push
sbb
xchg
rorl
pop
pop
cmc
mov
add
push
adc
jle
lds
add
xchg
sbb
fincstp
test
pop
push
push
pop
adc
je
mov
push
subl
and
push
je
call
inc
popa
inc
movsb
pop
ss
out
into
stc
push
sti
or
fstl
cmpb
sbb
sbb
cld
mov
add
xlat
dec
ja
add
in
and
inc
aam
add
or
dec
repnz
enter
shrl
xchg
push
imul
push
xchg
hlt
pop
sbb
int3
xchg
adc
fmull
outsb
xorl
mov
outsl
push
lea
dec
mov
sahf
add
andl
fsubr
sbb
lret
jb
fstpt
sarb
cli
imul
jg
fildll
cld
xor
out
adc
ret
pop
pop
sbb
je
pop
pop
pop
inc
scas
xlat
inc
fwait
std
iret
fcompl
cmc
cmp
cwtl
dec
inc
fdivrl
jae
xor
std
jp
mov
jae
orl
sub
orl
les
int3
into
cmp
inc
test
aaa
pop
cld
mov
push
and
sbb
xor
std
data16
pop
stos
sub
dec
repz
mov
sub
mov
pop
xchg
cmc
mov
repnz
mov
xor
dec
add
fcmovnbe
jb
ss
pop
out
dec
push
lahf
mov
inc
mov
imul
xchg
inc
lahf
mov
out
inc
ss
jbe
repnz
jge
pop
lds
push
sbb
mov
mov
jae
cmpl
inc
push
jg
xor
in
or
push
or
shl
insl
jbe
rclb
push
lock
imul
mov
mov
lock
xor
adc
imul
inc
push
scas
mov
sub
sub
lahf
cmpsb
aas
mov
fcomi
or
mov
push
stos
mov
out
mov
aas
lea
push
adc
cs
jb
lea
jle
or
push
jp
push
mov
ljmp
stos
fnstenv
jg
xchg
jmp
adc
mov
mov
push
xchg
cmp
or
xor
add
outsl
stos
scas
cmpsb
divl
dec
aam
push
or
clc
adc
in
push
sti
xchg
mov
mov
jle
sub
stc
or
popa
inc
aaa
pop
mov
or
or
sti
dec
push
repnz
push
pop
mov
mov
fidivrl
pop
adc
aad
adc
xor
push
ror
pop
aam
aas
push
and
mov
sahf
and
xlat
mov
add
adc
filds
and
ss
test
or
pusha
movsl
out
call
sarl
mov
mov
jbe
push
push
pop
pop
div
imul
cmp
mov
test
sbb
ss
ds
pop
ds
or
nop
sub
ret
sub
nop
movsb
sbb
mov
ss
ljmp
ret
sub
ret
or
jecxz
ja
aam
mov
cmp
out
jecxz
cmpsl
lods
sub
jmp
xor
lds
xchg
sbbl
adcb
mov
dec
mov
jno
mov
outsb
outsl
scas
jnp
js
jns
adc
loopne
jecxz
cmp
cld
int
cwtl
je
popf
sub
adc
nop
pop
push
dec
dec
sbb
pop
movsl
xchg
sbb
ljmp
and
xor
in
hlt
gs
jle
push
xchg
movsb
mov
das
dec
pop
cmp
fiaddl
out
cmc
call
push
xor
sub
rorl
movsb
sbb
pop
push
adc
add
sub
enter
push
mov
imul
hlt
movsb
dec
mov
mov
pop
and
outsb
scas
mov
mov
mov
sbb
push
bound
jnp
cmp
push
mov
sub
push
cmp
and
fiadds
and
fiaddl
lret
adc
pop
in
clc
jmp
inc
jb
sub
adc
imul
mov
bound
or
stc
push
dec
adc
cmp
leave
ret
lret
sbb
sbb
fdivrs
ss
scas
ds
and
pop
rcl
aad
cs
int3
ret
adc
xchg
fsts
adc
fwait
dec
fsubs
inc
fs
sbb
mov
and
push
cltd
repz
jmp
imul
or
jle
outsb
int3
push
jmp
outsb
pop
jg
daa
lds
push
imul
dec
lock
xchg
lcall
push
sahf
stos
jge
into
add
mov
add
pop
call
movsl
mov
jge
sbb
push
dec
lods
lret
das
clc
mov
test
cli
insb
es
or
sub
sbbb
pop
aas
push
addr16
sbb
adc
mov
cmpsl
or
pop
xor
jg
lret
mov
out
jle
test
sub
loopne
lock
jae
adc
test
iret
fcomps
pushf
orb
pop
loop
pop
outsl
out
push
xor
mov
outsb
fwait
pop
dec
cmp
pop
sahf
in
xor
addb
out
sti
mov
sub
jl
pop
mov
cmp
dec
mov
in
enter
addl
jle
cmp
jns
out
stc
xchg
xchg
add
cmp
sbb
lcall
and
xchg
cmpl
sub
punpcklbw
push
cmpsl
and
xlat
lock
mov
xor
and
mov
cmpsl
mov
sbb
or
fstpl
jo
inc
lahf
jle
dec
xchg
xchg
call
scas
sub
jecxz
stos
sub
mov
push
mov
fdivs
and
out
movsb
mov
in
pop
pop
push
ss
sub
es
sbbl
cmp
cmp
add
jmp
mov
xchg
je
xchg
sub
push
mov
jge
fisttpll
inc
ss
dec
pop
pop
dec
xor
gs
sbb
in
xchg
push
or
jle
bound
fcmovnu
xchg
cli
insb
loope
add
int3
xor
shr
nop
cli
xchg
cmpsl
xor
xor
jmp
stc
mov
xchg
mov
fdivs
loope
into
pop
mov
icebp
test
call
insb
lea
pop
or
into
push
jmp
fisubrs
je
addr16
sbb
push
adc
pop
mov
pop
mov
mov
adcl
sbb
lret
mov
jl
les
dec
jnp
lds
sti
in
into
mov
bound
loop
sbb
adc
xchg
inc
dec
mov
mov
adc
push
ds
dec
pop
jp
mov
dec
add
xchg
jg
les
jns
icebp
cld
and
add
push
sbb
mov
or
jecxz
in
adc
push
pop
out
sbb
lods
pusha
in
aas
xchg
add
int3
cmp
dec
shlb
push
mov
xor
sbb
and
mov
ret
sub
mov
loope
push
mov
jg
fidivrl
out
jecxz
fistpl
loop
fidivs
in
push
jle
sub
fst
xchg
push
enter
and
adc
out
jne
das
push
divb
ss
iret
lret
ret
xchg
dec
enter
sbb
push
mov
call
into
add
mov
inc
loop
fadds
adc
xor
inc
adc
sti
adc
pop
movsb
sti
and
insl
pop
pop
stos
clc
xchg
test
movsb
imul
pop
fcmovbe
enter
das
xor
jne
xchg
or
ljmp
sub
xor
pop
mov
jno
mov
pushf
xchg
dec
aam
loop
leave
dec
inc
ret
add
popa
push
jb
and
sub
jb
mov
lahf
sbb
nop
or
stos
push
pop
jmp
setnp
insl
iret
insl
xchg
sub
adc
movsl
push
inc
dec
sahf
xchg
icebp
xchg
inc
mov
mov
mov
andl
cld
push
movsl
lcall
dec
push
ret
dec
fsubl
les
sbb
stc
out
lcall
idivl
mov
cmc
repnz
cmc
sbb
int
jbe
inc
jmp
test
shl
dec
mov
rorb
loop
adc
imul
fcomps
push
mov
mov
jg
pop
jne
dec
dec
arpl
fucomi
test
pop
mov
aaa
jne
cs
insb
ljmp
sti
pop
push
sbb
das
ja
xlat
mov
cmp
mov
push
popf
xchg
sahf
or
test
fnstsw
mov
xchg
cmpl
outsl
fbld
sub
inc
pop
mov
inc
mov
loop
mov
cli
out
sahf
adc
hlt
mov
mov
data16
out
mov
test
shrl
dec
add
sbb
add
push
add
fnstcw
mov
xchg
popa
je
sub
clc
inc
sbb
cmp
pop
mov
pop
push
cmp
inc
mulb
jmp
mov
adc
xchg
fwait
or
pop
sub
cmpl
filds
mov
adc
out
in
adc
sbb
jbe
ss
push
push
mov
fstpl
xchg
std
sbb
lcall
push
xchg
ds
lea
mov
xor
inc
lret
lock
into
mov
imul
inc
xor
lea
inc
mov
pop
jg
pusha
sbb
sub
pop
or
xor
ss
inc
in
gs
jb
inc
pop
movsb
dec
mov
push
scas
adc
test
dec
ficompl
and
inc
pop
rcr
xlat
rcl
xchg
fistl
stc
inc
insb
pop
xchg
fbstp
call
jnp
sti
mov
mov
lea
add
adc
xchg
call
outsb
stos
mov
es
adc
mov
sahf
add
dec
push
lcall
aaa
dec
in
testb
and
or
inc
inc
pop
cmp
fdivr
cmpsb
xchg
pop
cmp
lods
push
mov
jle
cmp
scas
leave
mov
aas
ds
aam
or
pop
jae
or
addb
push
jno
cmpsb
mov
inc
pop
mov
adc
xchg
lretw
sahf
dec
cmp
dec
mov
outsb
pop
int
inc
mov
test
dec
xchg
push
in
pop
inc
andl
imul
scas
fisubl
daa
arpl
xchg
les
fiadds
aad
mov
xchg
movsb
cmpsl
jne
and
and
pop
pop
addr16
sarl
mov
stos
loopne
arpl
xchg
pop
test
mov
mov
mov
and
ss
cmp
cmp
xlat
add
sub
out
push
push
xchg
cld
fcoms
lods
shlb
fwait
into
inc
test
jg
shl
pop
out
cmp
and
push
push
mov
sbb
jns
mov
and
je
pop
and
jl
imul
popf
hlt
cmp
lds
cmp
jge
jne
shll
sub
dec
loopne
inc
aas
sti
scas
into
sub
test
and
sti
cmp
fistpll
stos
adc
push
mov
sahf
into
cmp
jbe
cmc
dec
adc
xlat
xchg
fcomps
add
movsb
pop
push
jne
insl
dec
ss
sub
mov
aam
daa
sbb
je
push
cld
inc
fsubrl
pop
push
fsubrl
mov
xorl
imul
mov
mov
adc
mov
push
dec
mov
sar
mov
mov
jg
out
scas
sub
cld
xor
sbb
outsl
adc
adc
cmp
mov
sub
inc
mov
mov
loop
nop
cmc
cli
cld
mov
scas
das
sti
xor
mov
hlt
and
or
out
xor
push
push
mov
movsl
or
out
fchs
incb
or
je
sub
fidivs
out
sahf
push
scas
and
in
out
inc
and
imul
jp
outsb
pop
shlb
xchg
je
cmc
hlt
push
mov
sub
add
inc
mov
xchg
je
inc
movsb
mov
add
push
mov
inc
push
rcrb
adc
sahf
sbb
daa
mov
test
cmp
stos
icebp
mov
stos
add
leave
jl
pusha
inc
in
fsubr
jp
in
test
xchg
xchg
jnp
adc
icebp
mov
jmp
stos
jg
test
push
imul
daa
addr16
cmp
dec
pop
pop
ljmp
pop
adc
dec
leave
inc
jbe
push
inc
lcall
pop
mov
xchg
xor
gs
mov
xchg
je
mov
jg
jmp
push
mov
xor
fs
push
push
add
xor
cmp
lahf
int
test
jbe
imul
fldl
dec
push
lcall
int
mov
or
push
repz
loopne
push
and
popf
pushf
mov
sti
jl
and
jge
and
dec
sbb
pop
mulb
test
sbbl
andl
icebp
mov
fdivl
leave
inc
sub
jge
jns
sbb
cmpsb
add
outsl
fmulp
outsb
fld
xchg
loope
stos
int
or
inc
inc
add
mov
outsl
and
adc
mov
movsl
dec
mov
push
out
add
sub
xor
push
mov
ja
loope
sub
sub
std
mov
repz
and
push
pop
or
xor
mov
pop
push
fidivs
jmp
jl
jne
sub
adc
out
scas
sahf
and
fldenv
pop
add
aad
idivb
add
mov
outsl
dec
inc
jge
aad
je
xchg
mov
insb
into
cmp
xchg
int3
cmpsl
push
sbb
loope
outsb
jg
xchg
push
inc
mov
int
mov
add
cmpsl
ret
addr16
inc
fcomip
in
repz
xor
mov
fs
push
jo
xchg
inc
outsb
pop
sbb
mov
xchg
add
mov
cmp
std
sahf
push
lds
cmpsl
test
add
pop
pushf
movsb
push
jae
xlat
cmp
pop
cmpsb
lahf
lret
loop
dec
js
leave
gs
in
stc
xchg
adc
dec
xor
rorl
add
push
or
pop
fistpll
xchg
in
mov
test
les
dec
jmp
stos
test
push
sub
loop
pop
dec
or
in
mov
and
push
pop
lea
adc
jo
jne
pop
fs
aas
cmp
test
fnsave
stos
inc
sarl
out
or
fsubs
clc
lea
inc
mov
mov
adcl
scas
cmpsb
and
out
fs
das
test
hlt
jbe
rolb
sahf
xor
notw
rolb
inc
sub
and
notl
add
dec
outsl
call
mov
xchg
mov
jmp
mov
dec
in
mov
fsubs
imul
mov
clc
dec
inc
adc
inc
aas
push
and
or
fwait
popa
jp
mov
xor
lahf
jno
mov
pop
jecxz
in
and
fisubl
and
je
dec
pop
ret
sub
mov
test
rclb
loope
aas
aas
outsl
xor
out
pop
xor
mov
adc
aam
shrl
jbe
jecxz
sti
ret
outsl
and
lea
cmp
cmp
popa
cmp
mov
mov
and
cmpsl
sub
pop
in
sti
loopne
jno
xor
in
mov
mov
jp
loopne
sbb
ds
outsb
in
cmp
rcll
jo
xor
test
mov
push
addb
or
test
jb
in
orl
mov
cli
in
in
inc
jns
addr16
into
fs
cmpl
nop
sbb
or
popa
push
add
xorb
rcrb
sbb
es
cld
ret
push
cmpsb
repnz
popa
or
mov
cmp
into
jl
arpl
push
insb
mov
pop
enter
sub
insb
imul
fwait
dec
lock
push
test
lds
xchg
lock
jbe
cli
loope
inc
cmc
pop
cli
sub
push
cld
sbb
out
pushf
arpl
stos
lret
mov
aam
pop
movsb
sub
adc
lock
jnp
cmp
call
sbb
ds
test
test
negl
popa
jmp
stc
fs
in
jns
sub
push
add
test
cli
push
pop
cmp
leave
jl
iret
cltd
in
movsb
cli
mov
mov
subl
mov
pop
cmp
sub
inc
jne
jge
mov
mov
xchg
mov
imull
stos
iret
sub
or
xor
or
jge
loop
push
mov
test
popf
sub
mov
xor
push
mov
loope
sahf
xchg
xchg
outsl
mov
cltd
pop
dec
addb
popa
mov
insl
out
cs
popf
cmp
outsl
or
test
push
pop
in
or
insb
and
cmp
push
or
cmp
ja
lcall
mov
movsl
call
inc
sub
fistl
pop
movsl
or
arpl
daa
xchg
cwtl
xor
xchg
ljmp
sti
xchg
jb
lahf
pop
jle
mov
cmpsb
dec
sbb
sbb
rcll
inc
mov
stos
div
popa
ret
sbb
and
lahf
movb
dec
lods
andl
jmp
loopne
push
sub
fnstcw
data16
sbb
fsubrs
and
out
add
or
je
or
scas
mov
addr16
mov
test
push
insb
xchg
rcl
fld
ss
pop
insb
icebp
inc
jmp
push
popf
sbb
popa
aad
dec
mov
loop
mov
xchg
loop
mov
mov
jnp
cmp
cmp
inc
aad
loop
fcoms
dec
test
mov
and
cmp
cwtl
and
test
sahf
xchg
mov
push
inc
clc
mov
xor
insb
mov
push
sti
cmp
mov
js
fwait
imul
lahf
movsb
loop
faddl
sahf
mov
stc
dec
imul
aam
call
into
sahf
add
test
int3
mov
enter
cmpsl
xor
leave
xchg
adc
fistl
insl
pop
ret
mov
shlb
arpl
xchg
rclb
cmp
outsb
or
or
mov
push
gs
mov
loope
xchg
stc
pop
pushf
leave
xor
repz
xchg
xchg
xor
pop
clc
cltd
test
inc
push
adc
fcmovne
sub
scas
cmp
loop
pop
inc
cmp
ja
push
out
xor
aas
es
icebp
dec
mov
sti
sbbl
jmp
fildll
inc
push
es
bound
in
scas
dec
es
bound
in
repz
xlat
mov
mov
xchg
into
lds
xchg
ds
mov
mov
psrld
push
add
push
jnp
ljmp
fidivrs
jae
rorl
test
dec
jno
mov
jp
dec
lret
xchg
test
fistpl
fiadds
pop
test
dec
push
js
push
ret
es
je
push
or
jecxz
and
sbb
insl
cmpsl
aas
loop
pop
sub
pop
add
inc
add
lea
jae
adc
cmpl
push
in
fisttpl
nop
fwait
mov
xor
call
and
cmpsb
xchg
rcl
shlb
movsl
test
add
xchg
shrd
xchg
in
sbb
xor
mov
or
rolb
jl
cmpsb
pop
adc
sub
scas
mov
gs
mov
sub
fdivrl
aaa
cld
outsl
push
or
sbb
push
addr16
lret
out
and
push
cmp
cmp
push
test
mov
cltd
dec
mov
inc
je
out
add
int3
mull
mov
mov
jmp
iret
lcall
jae
sub
mov
xchg
arpl
mov
subb
sub
movsb
add
dec
lea
xor
xchg
xlat
xor
fcomps
insb
sub
jns
lahf
movb
addl
cmp
popf
arpl
add
movsl
lea
mov
fnstcw
sub
adc
ror
int3
pop
loopne
pop
inc
xacquire
and
mov
sbbb
jae
loop
adc
hlt
pop
and
cmp
xchg
xor
mov
flds
pop
outsl
fstps
bound
pop
cmp
call
ret
push
or
ds
or
pop
ret
cwtl
ret
add
outsb
popf
mov
test
iret
bswap
int3
fstpt
inc
add
sbb
jae
and
jmp
pushf
add
mov
pop
mov
jns
test
scas
xchg
pusha
enter
clc
and
in
imulb
lods
mov
lods
iret
sbb
jae
data16
mov
xlat
test
xor
inc
mov
mov
jbe
stc
push
into
nop
add
cmp
cmp
jle
dec
mov
data16
dec
jl
inc
in
test
push
xorl
fucomi
mov
repnz
add
jo
adc
sbb
add
cmc
add
jl
push
movsl
adc
cmc
popf
lcall
push
test
lahf
je
xchg
shrl
jmp
xor
add
jne
cmc
mov
sbb
push
sub
adc
aam
push
pop
mov
mov
sbb
test
sbb
push
jle
push
pop
xchg
movsb
in
ficoms
mov
lods
std
mov
shrl
xchg
inc
mov
stos
and
dec
and
dec
and
and
int
and
aam
and
inc
or
adc
mov
add
xchg
scas
lret
jb
das
cld
mov
jmp
and
shll
or
pop
push
lret
push
or
pusha
faddl
xchg
test
inc
mov
inc
das
imul
leave
daa
ljmp
daa
jns
push
daa
pop
lods
sbb
adc
mov
add
and
xor
dec
std
jmp
popa
lea
orb
cmp
or
out
jg
adc
fnstenv
sbb
lods
hlt
mov
pop
mov
imul
in
or
xchg
xor
aad
push
dec
pushf
jge
cmp
repnz
lods
mov
aas
inc
sbbl
dec
test
mov
es
decl
sbbb
mov
dec
jnp
dec
cwtl
pop
cmpb
pusha
jns
aad
and
push
lds
aad
adc
adc
pop
and
pop
or
mov
pextrw
cmpb
imul
hlt
ja
xchg
scas
cmpl
or
ret
adcl
add
notb
or
push
inc
sub
pop
inc
cmc
lods
pop
add
cli
xchg
jbe
xchg
cmp
lahf
imul
mov
xchg
push
pop
mov
xor
jge
mov
mov
outsl
out
shl
push
gs
pop
xchg
test
sub
outsb
sbb
mov
sub
fs
call
xor
stos
pop
js
xchg
sarl
sbb
cltd
mov
sbb
jo
mov
sbb
cltd
mov
add
ja
inc
int3
ret
fdivs
imul
xor
or
aas
and
add
cmpb
stc
ret
mov
mov
clc
shrb
sub
push
imul
movsb
mov
dec
cli
dec
cltd
test
pop
push
push
arpl
fadd
xlat
pop
pop
or
outsb
sub
jmp
stc
or
push
mov
cltd
mov
out
movsb
sub
call
bound
and
dec
mov
cmp
xchg
sar
jne
loopne
ljmp
cmp
lret
lret
dec
dec
pop
sub
shlb
or
rorb
fimuls
hlt
inc
shlb
mov
fdivs
lds
enter
jns
mov
mov
dec
les
int3
push
push
shll
add
jecxz
push
push
mov
fldcw
addr16
cmp
rorb
xor
cmp
mov
les
push
cs
rorl
out
int3
mov
and
popf
pop
in
inc
addr16
mov
inc
loopne
xchg
lods
jnp
mov
sbbl
addb
imul
lcall
scas
or
lret
mov
xor
in
rcrb
mul
xchg
cld
add
mov
adc
mov
cltd
sbb
aam
arpl
rorl
jnp
loop
pusha
pop
inc
out
add
ret
lods
test
enter
add
lret
test
ret
mov
sbb
inc
or
mov
sbb
inc
jno
adc
ljmp
sahf
mov
mov
cltd
test
out
cmc
in
movb
mov
jmp
in
lahf
mov
mov
push
fsub
adc
add
decb
addl
jg
js
dec
ss
jnp
sbb
mov
stos
je,pn
mov
adc
xchg
pop
xor
and
push
addr16
sub
fstpl
add
jmp
stos
push
rcrb
test
lcall
pop
test
lods
cmp
fcoml
and
dec
mov
mov
pop
pusha
shlb
arpl
pop
mov
push
push
push
faddl
jle
inc
jmp
xchg
fs
inc
int
mov
lods
loopne
add
int3
rorl
push
push
and
jg
push
jo
lret
mov
jmp
inc
fwait
test
das
test
das
push
cwtl
xchg
mov
out
or
mov
xor
aam
enter
xchg
jbe
setp
cltd
mov
push
cmp
adc
call
lahf
ret
and
inc
mov
jge
pop
adc
mov
decb
lret
inc
lret
xchg
inc
repnz
aad
jo
mov
xchg
shll
adc
mov
pop
xor
xchg
out
stos
ret
xchg
jns
jo
xchg
daa
in
stos
jecxz
mov
ljmp
mov
mov
addr16
lods
rolb
repz
adcl
lods
sub
fdivrl
mov
shll
sub
cli
and
sub
xor
rclb
sub
mov
and
lock
mov
push
push
lret
xchg
mov
imul
popf
sbb
mov
xchg
sub
jbe
sub
aad
in
jle
pop
xchg
pop
inc
mov
mov
loope
mov
and
jne
les
in
dec
std
push
push
fists
xor
bnd
cmp
mov
lock
and
mov
pop
addl
xor
mov
jbe
fnsave
add
fisubs
lea
sbb
push
insb
dec
repz
inc
xchg
pop
ret
jns
sub
out
pop
push
je
test
and
out
je
mov
push
ja
pusha
les
cmp
fists
nop
leave
adc
fwait
push
xor
mov
ficoms
cmp
fcoml
scas
ljmp
mov
pop
dec
mov
jo
and
sbb
cmpsl
dec
push
pop
imul
test
je
cld
pop
fcmovnu
sub
bound
mov
repz
dec
mov
and
and
mov
xor
sarb
pop
add
cli
and
xlat
inc
fwait
cltd
outsl
movsl
cmp
mov
or
andl
inc
pushf
jns
fisubl
mov
mov
xor
inc
cmp
test
add
xchg
iret
xchg
popa
mov
mov
rorb
fildll
jge
xchg
pop
mov
aaa
pusha
ds
aaa
lds
es
xchg
push
cwtl
xlat
pushf
out
push
pop
sbb
push
pop
insb
or
push
add
or
mov
shl
aas
je
shlb
jge
lds
mov
xor
iret
pop
mov
clc
mov
mov
xchg
int
mov
pushf
lret
mov
add
fdiv
cmp
mov
clc
dec
add
fninit
add
incb
push
or
mov
test
push
cld
lret
pop
xchg
cmc
nop
mov
sub
aaa
or
mov
pop
and
fwait
mov
and
mov
fwait
loop
push
outsb
lds
ja
ficompl
pop
push
jle
loopne
xchg
adc
xor
sbb
mov
lds
or
xchg
mov
cmc
fcomps
pop
jp
xchg
sbb
push
inc
fmuls
fists
lcall
jnp
fbld
sbb
push
sub
add
push
js
js
cltd
mov
sub
add
xchg
jge
xchg
jnp
dec
je
and
shrl
loopne
andb
pop
push
fsubl
xor
push
xor
icebp
jbe
xchg
xchg
pop
jmp
es
lret
ret
add
test
out
adc
jecxz
imulb
sub
and
fbstp
scas
pop
mov
push
mov
sbb
mov
jae
cld
or
lods
xchg
jo
shll
sbb
xchg
xor
cmpl
jg
ret
mov
push
insl
sarb
inc
cmp
xchg
adc
pop
out
sbb
js
shlb
jle
or
mov
cmp
add
pusha
in
mov
jns
cltd
ss
mov
pop
add
out
mov
adc
pop
add
es
and
sub
jge
pushf
xor
push
jg
pop
or
xchg
test
fidivrl
mov
cmpsl
or
imul
sub
dec
sbb
adc
cld
lret
jp
xchg
inc
stos
push
test
orl
inc
xor
out
cmp
pop
jmp
and
xchg
mov
xchg
dec
cmp
xchg
call
movsl
jb
mov
xor
cmpsl
popf
cmpsb
cld
test
mov
pushf
dec
in
xor
xor
fwait
enter
out
ret
inc
pop
insb
push
push
mov
iret
and
ljmp
testl
inc
sbb
xchg
lahf
inc
jle
ds
lock
movb
cmp
pop
mov
mov
inc
mov
push
fcoms
aaa
popf
cmp
xchg
inc
stos
dec
push
dec
pop
xor
in
aam
int
inc
hlt
or
scas
addr16
ret
fidivrs
push
cmovp
and
mov
test
rorl
lret
bound
roll
dec
add
pop
divb
hlt
add
jns
nop
pop
jns
lret
xlat
mov
push
inc
icebp
or
dec
fs
adc
fcomps
hlt
fldl
cmpsl
adc
lods
rcrb
mov
mov
scas
dec
xchg
and
fnstcw
cmp
loop
pop
mov
sub
ljmp
dec
jmp
xchg
scas
lock
inc
lods
mov
lods
lcall
loopne
stos
sub
test
arpl
in
loop
mov
into
xchg
pop
mov
aaa
pop
scas
cmp
testb
out
leave
call
mov
popa
jnp
mov
adc
insb
mov
cmp
out
mov
mov
inc
imul
cmpb
sub
add
jg
mov
mov
sarl
popf
enter
fisttpl
inc
inc
lcall
in
in
into
lea
jae
aas
mov
test
xchg
lea
enter
enter
pop
dec
lds
mov
sub
mov
mov
lahf
xchg
cmp
xor
jp
push
sub
jmp
add
enter
mov
lret
mulb
fidivrl
sahf
repz
mov
cmp
enter
and
lret
test
and
dec
cltd
push
bound
daa
jbe
mov
jbe
pop
clc
aas
in
dec
inc
daa
daa
inc
xor
sub
dec
sub
adc
stos
push
clc
pop
mov
adc
and
cmp
jae
pop
pushl
fidivrl
loope
js
cmp
call
cmp
rcrl
test
je
mov
cmc
add
add
mov
dec
pop
mov
pop
mov
and
rcrb
mov
and
cmp
leave
dec
jae
add
adc
mov
enter
mov
test
les
into
jbe
loopne
lock
lret
adc
imul
mov
mov
xchg
push
mov
push
loopne
into
gs
jns
movsl
xchg
adc
lods
dec
pop
fsubrl
inc
adc
int3
test
dec
push
sbb
or
inc
out
rorb
ljmp
jge
sub
nop
scas
std
xor
popa
subb
xchg
mov
fs
add
mov
sub
push
sub
popf
xchg
jno
fcomps
push
repnz
add
lea
mov
xchg
sub
inc
mov
fstpt
dec
mov
insl
lock
or
aaa
cs
jle
or
sahf
imul
sbb
pop
loopne
push
lds
pop
or
fs
fs
cmp
lock
fnstenv
cmp
orb
aam
mov
push
xor
les
pop
push
aam
jb
and
jnp
arpl
xor
pusha
repz
sahf
std
aam
xor
repnz
pop
fdivp
pusha
add
insl
xlat
xchg
sbb
stos
aas
xchg
test
mov
mov
in
adc
xchg
test
pusha
enter
adc
or
nop
cltd
mov
push
mov
cmp
cmp
imul
add
mov
mov
in
scas
mov
imull
pop
add
mov
xchg
xor
push
inc
sub
cmpsb
cmpl
cmp
adc
btc
cmp
loope
mov
sub
dec
shl
test
dec
insl
push
das
add
xchg
pushf
loope
push
and
imul
int3
inc
dec
dec
hlt
jo
clc
iret
xchg
cmc
movsl
sub
jmp
je
lods
xchg
mov
dec
repnz
pushf
cwtl
push
push
fcoml
mulb
xchg
pushf
jmp
add
rcr
in
dec
stos
out
dec
xchg
ret
in
rorb
pop
lahf
cmpsl
les
stc
daa
cmc
enter
jge
js
cmp
mov
pop
in
push
adc
adc
inc
lret
imul
adc
fmull
cltd
mov
add
ret
sbb
fstps
or
ja
jbe
aas
ljmp
clc
xchg
rolb
mov
jnp
mov
pop
insl
adc
mov
dec
push
cmc
pop
outsl
cs
ffree
cmp
mov
aam
outsb
mov
sbb
inc
dec
ds
xor
ja
fidivrl
aad
jnp
dec
add
hlt
adc
mov
arpl
adc
jmp
pushf
arpl
fldenv
lods
stos
clc
xchg
jecxz
ds
dec
pop
fld
pop
out
inc
hlt
mov
jg
sub
stos
push
mov
mov
push
mov
jbe
mov
jae
xchg
es
cmp
or
xor
es
rol
pushw
lods
sahf
fiadds
push
adc
sub
fistl
jmp
inc
xchg
cli
arpl
dec
loope
into
pushf
lahf
pop
jnp
movsl
test
jbe
cmp
push
mov
inc
xor
cwtl
and
shlb
xor
jae
mov
cmc
call
mov
scas
add
mov
and
enter
out
dec
jle
stos
mov
cmpsl
and
or
je
in
cmp
hlt
inc
adc
imul
js
or
mov
ret
inc
repnz
js
push
jae
jecxz
pop
xor
push
sbb
push
test
shrl
add
and
jb
mov
add
das
nop
imul
out
and
mov
mull
and
mov
cmp
cmc
jnp
pop
dec
es
int
jecxz
xor
lcall
pop
jnp
aaa
adc
pop
cmp
sub
movsb
fstpt
xchg
jle
arpl
pop
mov
sbb
dec
dec
imul
test
imul
or
dec
dec
aaa
push
mov
hlt
and
adc
out
es
push
lods
xchg
test
dec
xchg
xchg
and
cs
sbb
jle
out
dec
inc
fwait
in
push
out
movsl
pop
mov
push
ds
xchg
push
sub
ljmp
xchg
mov
jg,pt
xor
pop
push
ret
dec
cwtl
push
jmp
cmp
stc
ljmp
ja
loop
imul
mov
lret
ja
pop
sub
mov
or
imul
push
pop
pop
and
pop
loopne
fwait
leave
lret
add
ret
in
out
mov
scas
scas
sahf
loopne
cwtl
cmp
movsb
outsl
jle
or
cmp
sub
sbb
jo
push
pushl
jno
push
iret
add
sbb
xor
sbb
xor
js
xchg
pop
sbb
add
aad
pop
hlt
pop
mov
jae
add
mov
mov
rclb
idivb
out
push
repnz
add
iret
aam
adcb
inc
fidivs
xchg
sub
pop
lea
cmp
ret
cltd
sub
aam
stos
fisttpll
dec
mov
dec
hlt
xchg
movsl
jmp
xor
dec
sbb
inc
repz
sbb
pop
movsb
pop
add
xor
adc
int3
sbb
pusha
xchg
push
imull
das
outsl
cs
jmp
nop
sahf
pop
cmp
js
xor
movsl
insb
ds
sarl
fwait
add
aad
das
lods
daa
sub
test
test
mov
inc
cmp
mov
lods
add
mov
jg
inc
xor
push
cmc
gs
add
ja
in
loope
fsts
insl
pop
jnp
test
ds
lret
fmuls
push
adc
sbb
push
dec
stos
mov
lret
in
pop
scas
dec
movsb
or
shrl
pop
dec
gs
jecxz
jo
jae,pn
test
jle
outsl
je
add
repnz
jp
dec
jb
dec
mov
sub
cltd
enter
xchg
jbe
cmp
xchg
aas
push
sub
les
andl
movsb
xor
mov
stos
add
jbe
push
in
popa
insb
push
aas
sbb
push
sbb
scas
test
cs
icebp
sbb
add
ror
sub
adc
xchg
imul
jg
cmpsb
sub
add
xchg
pop
and
dec
add
inc
call
aad
bound
lret
mov
push
pop
adc
lods
inc
pop
lods
push
jge
mov
dec
int3
sbb
test
cmpsl
pop
fidivrs
push
push
shld
jecxz
fistpll
dec
cltd
xor
test
pop
push
cltd
jb
fcompl
xor
sbb
movsl
adc
repz
nop
dec
in
inc
gs
sub
jmp
dec
push
scas
mov
push
dec
nop
inc
test
push
mov
dec
pushf
or
sar
push
mov
imul
sbb
fxch
jne
loope
aam
lea
movsb
fidivrs
pop
ret
adc
adc
je
loop
movsb
addb
inc
mov
xchg
orb
mov
inc
outsl
or
sub
jns
push
fnstsw
inc
mov
fcmovb
call
pusha
mov
ja
jno
and
mov
jl
aad
jl
mov
hlt
or
inc
dec
fildll
mov
in
ret
hlt
inc
jecxz
hlt
in
or
adc
shlb
fcomps
mov
sbb
cmp
push
mov
mov
dec
sbb
cmp
mov
push
dec
sub
roll
adc
ljmp
arpl
xchg
jne
mov
or
adc
fbld
loop
pop
shlb
jecxz
jge
sub
jmp
push
cmc
cwtl
pop
data16
cmpsl
adc
xchg
mov
mov
ror
adc
sbb
push
lods
cmp
add
sub
dec
aas
out
lea
dec
fldt
aad
mov
imul
pop
gs
add
xor
jge
aam
pop
xor
inc
daa
mov
int
sbb
fisttpll
pusha
leave
aas
pop
popf
dec
dec
fxch
mov
mov
cmpsl
mov
mov
bound
lds
ret
into
out
call
lea
les
or
out
push
inc
sub
push
cld
jne
loope
fisttpl
push
xchg
mov
int3
pop
jp
push
int3
lea
roll
cmpb
pop
pop
dec
mov
int
adc
mov
stos
test
pushl
or
bound
and
cmp
rcrb
int
les
cmp
pushf
insb
sub
add
sahf
mov
call
out
xor
dec
fidivs
lods
inc
sbb
js
aas
cmpsl
push
adc
push
push
sbb
push
js
pusha
push
push
stos
int
add
dec
sti
outsl
add
and
test
pusha
call
das
fstps
jne
nop
or
enter
cmc
mov
xor
aas
mov
lock
scas
dec
and
loope
outsl
out
push
fs
inc
test
insl
outsb
std
cmp
push
sub
daa
and
jg
inc
xchg
push
je
hlt
push
pusha
jmp
mov
push
fcomps
js
dec
jmp
bound
in
mov
loope
shrl
cmp
lods
shll
xchg
inc
sub
call
in
es
repnz
call
push
out
pushf
jae
and
xchg
push
xchg
mov
xchg
and
jne
mov
adc
dec
test
adc
xorb
inc
mov
inc
hlt
xlat
or
inc
jo
int3
or
add
dec
cltd
jl
mov
pop
adc
je
aaa
mov
mov
or
call
movb
repnz
sbb
fidivs
mov
shll
pop
mov
jno
or
cld
adc
inc
outsl
push
push
xlat
movl
pushf
std
fmuls
aam
add
ds
in
mov
xchg
stc
stos
mov
icebp
insb
in
jbe
hlt
xor
test
push
xor
push
jo
bound
stc
xchg
fwait
mov
in
shrl
out
stos
mov
mov
rcrl
loopne
dec
pop
inc
out
or
dec
enter
inc
xor
clc
loop
int
and
jb
mov
push
hlt
out
or
and
inc
sub
cld
mov
push
mov
mov
mov
jnp
mov
pop
aaa
pop
aas
jae
inc
aas
int
jge
cmp
bswap
bound
push
sub
sbb
dec
or
sbb
sub
decl
sbb
rol
das
jecxz
out
cmpsl
pop
push
loop
push
xchg
outsb
lods
pop
mov
notb
push
dec
fucom
test
push
aad
add
push
xchg
sar
loopne
rol
jp
dec
dec
jnp
jnp
pop
mov
sub
scas
das
jecxz
fwait
out
repnz
pop
mov
les
pushf
sbb
mov
or
inc
sbb
jno
stc
lea
repnz
jle
data16
cmp
movl
or
and
xor
in
adc
lds
xchg
pop
enter
cli
aas
ljmp
test
mov
jns
pop
cmp
or
out
sub
fs
push
cmpsb
mov
cld
adc
inc
ss
ds
fadds
inc
cmp
pop
sub
xor
jg
mov
imul
jmp
or
fcmovnb
out
xor
in
std
mov
test
push
fisttpll
stc
push
lahf
enter
ja
mov
inc
pop
scas
pop
aaa
dec
insl
mov
enter
pop
out
idivl
inc
js
stos
mov
das
stos
vhaddps
enter
stos
sub
cmp
ljmp
push
or
jae
shrl
ror
sub
xlat
xchg
dec
mov
je
pusha
es
mov
inc
fisubs
jg
sub
lds
xor
mov
xlat
pop
mov
cmp
out
in
test
aam
mov
jae
sub
in
aaa
jo
inc
cs
in
jp
xchg
popa
lea
addb
sbb
jp
jl
or
ret
adc
inc
dec
test
xorb
xor
mov
sbb
sub
ljmp
fld1
jnp
scas
mov
sbb
test
movl
ja
lahf
fld
shll
pop
dec
call
insl
jno
and
in
inc
jmp
repz
sar
insb
hlt
in
jmp
jge
jo
xor
jae
lea
pop
pop
loope
lods
test
pop
push
mov
popa
mov
and
jne
imul
hlt
test
or
and
aam
xchg
data16
push
test
mov
call
pop
sub
dec
das
and
dec
lods
mov
mov
inc
sub
dec
shrl
lahf
xor
push
push
pop
pop
and
or
je
sub
pop
push
out
jl
mulb
daa
push
pop
scas
and
and
mov
mov
inc
outsl
jo
bound
dec
in
add
jae
inc
adc
or
inc
push
in
leave
push
jae
sub
cmp
mov
sbb
pop
js
and
aas
mov
mov
lret
lret
sbb
mov
shlb
fstl
insb
push
and
adcl
jns
sbb
int
jbe
ficoml
sub
into
sbb
scas
and
add
jg
fwait
insb
xchg
test
repnz
dec
ret
mov
rcrb
add
cmpsl
fstps
cmp
ret
push
mov
adc
lret
xor
scas
jle
lods
cmp
test
adcb
mov
insb
jns
stos
cwtl
xchg
mov
not
int
ljmp
and
lahf
jo
popa
xchg
shll
and
adc
push
push
pop
mov
mov
sbb
mov
or
aam
mov
push
dec
or
fwait
leave
stos
ljmp
lret
push
test
daa
pop
outsl
add
ret
sahf
rcll
cmp
cmp
fs
js
out
out
push
fwait
sbb
fstl
stos
or
pushf
outsl
cwtl
sub
das
xchg
sub
stc
sub
mov
xchg
jmp
pop
mov
shrl
fsubl
mov
sbb
mov
fldl
leave
adc
fidivs
add
jne
xor
lret
test
jbe
dec
push
jnp
in
das
mov
movsl
fwait
and
fidivl
jnp
lahf
jecxz
icebp
jp
out
pop
mov
dec
sbb
sbb
xor
scas
adc
jb
rcrl
stos
mov
jnp
dec
or
test
decb
push
jno
cs
xchg
movsb
fiaddl
test
add
lock
pop
sbb
add
imul
in
mov
clc
jle
in
xor
and
pop
mov
jno
or
cmc
fwait
mov
sbb
setb
mov
mov
xor
mov
cmp
jp
mov
sub
push
lea
add
shrb
or
xor
sbb
test
or
shrl
arpl
scas
loopne
in
js
leave
je
imul
ret
inc
mov
sbb
inc
add
movsl
idivl
sub
jmp
pop
pushf
stos
mov
fidivs
lock
pop
mov
leave
jge
ja
mov
mov
jo
inc
lahf
inc
test
lods
imul
dec
lret
rcrb
mov
imull
mov
enter
aam
ja
pop
dec
and
popl
sub
andb
sbb
push
out
fdivrs
insl
and
dec
adc
and
shlb
cs
push
pop
pop
icebp
gs
inc
cld
push
sti
pop
cld
sarb
sbb
cli
imul
daa
adc
pop
rorl
sbb
push
lds
xchg
pop
fsubrs
int3
rcll
jecxz
data16
sub
jle
loopne
mov
sbb
fmulp
inc
test
and
aas
dec
mov
mov
int3
out
mov
cmp
cmpsb
repnz
ds
pop
mov
mov
mov
dec
cmc
xchg
in
daa
call
mov
out
fsubrl
xor
sbb
ret
pop
lret
mov
nop
call
sub
scas
inc
cmp
pop
lds
inc
mov
in
push
dec
cmp
ljmp
push
js
aas
out
cmp
cld
dec
clc
mov
mov
jmp
sub
mov
iret
insl
inc
adc
mov
mov
lret
loopne
push
inc
out
cmp
mov
pop
xchg
add
or
in
test
mov
xchg
inc
push
cmp
jp
jnp
pop
and
enter
dec
mov
repnz
fsts
pop
xchg
or
push
push
jo
popa
rorb
repz
mov
call
mov
sub
andl
out
jae
aas
cmc
or
bound
xor
mov
jne
loope
ret
sbbl
jle
test
dec
lods
iret
andl
pop
xchg
es
xlat
pushfw
lret
pusha
cmp
in
inc
les
pop
inc
cwtl
jge
icebp
loopne
pusha
pop
lock
pop
enter
xor
xchg
cli
mov
push
outsl
int3
cmp
inc
adc
orb
push
fiadds
push
popf
mov
push
push
or
cmpsl
or
int3
cmp
dec
out
push
nop
mov
cwtl
or
addr16
mov
into
test
cli
enter
mov
xchg
pop
outsl
ss
ficomps
insb
pop
jg
aam
mov
dec
leave
mov
lea
filds
jge
add
push
adc
inc
xor
imul
pop
mov
insl
loop
sbb
xchg
cwtl
xor
imul
and
cmp
test
xchg
cli
test
imul
jge
cmp
dec
pop
inc
cmp
cmpsb
mov
das
in
cltd
mov
js
add
push
arpl
xchg
and
shlb
mov
dec
pusha
fwait
jnp
cmp
scas
inc
clc
aam
jnp
sarb
mov
shl
ret
test
push
pop
mov
xchg
call
pop
aam
cltd
xor
pop
cmp
nop
sbb
cmp
push
and
aaa
lcall
xchg
adc
bound
pop
icebp
push
jb
mov
pop
cmc
pop
call
and
pop
cli
outsl
lea
lock
jge
cld
jp
push
ss
xchg
mov
shrb
sahf
adc
cmp
fwait
push
cmpsb
lods
cmp
leave
into
clc
and
mov
aam
mov
sub
and
sbbb
xchg
push
lcall
pop
popf
push
add
xchg
subb
hlt
inc
and
mov
mov
hlt
inc
jle
fildll
clc
fadd
repz
arpl
dec
lea
js
jns
mov
lcall
into
imul
xchg
out
les
arpl
data16
sbb
inc
in
pop
nop
sbb
xor
icebp
scas
test
lods
lods
mov
ffreep
test
roll
insb
pop
loopne
push
rorl
jbe
dec
pshufw
adc
mov
lods
stc
outsl
pop
dec
xchg
xor
aad
test
add
stos
sbb
mov
adc
inc
jp
mov
and
pop
add
pop
mov
pop
or
stos
adc
rorb
test
jp
inc
inc
shlb
inc
jecxz
sub
ret
jp
dec
aam
sub
adc
xchg
data16
popa
ds
xchg
jecxz
mov
mov
jb
leave
or
pusha
mov
sub
neg
jno
lods
cmpsb
sbb
cmp
jg
stc
repnz
jno
popf
cltd
outsb
lahf
sub
mov
loop
punpckhbw
ss
push
mov
sub
lret
mov
repz
stos
inc
cmp
add
jl
mov
sahf
incl
sbb
and
imul
lock
das
in
mov
daa
jb
iret
movsl
movsl
inc
sahf
imul
sbb
sbb
outsl
fimull
movsl
sub
mov
lret
inc
adc
sbb
mov
xchg
pushf
inc
or
int3
rorb
hlt
cmp
or
es
mov
mov
in
push
mov
movsl
lods
xchg
cmp
fstpt
pop
aad
dec
inc
insb
and
mov
ss
mov
xchg
arpl
push
sbb
pop
mov
inc
std
jo
movd
lods
inc
push
mov
push
out
daa
push
xchg
outsl
stos
clc
mov
xchg
and
jmp
cmp
sub
xchg
jae
add
sub
sbbl
adc
push
jne
inc
jns
cmp
inc
mov
xchg
sbb
push
rcrb
scas
outsb
jnp
mov
jne
scas
cmpsb
cmp
xchg
and
mov
sbb
jne
loop
adc
incl
adc
mov
fdivrs
push
and
pop
out
inc
pusha
pop
iret
int
add
adc
jo
adc
lods
and
push
les
inc
push
cmp
pop
enter
dec
les
mov
push
dec
int3
cltd
mov
mov
add
jl
cwtl
mov
jno
push
nop
popl
popl
cmp
cmp
insb
shll
flds
xchg
sub
adc
fucomi
mov
lcall
sub
sub
sub
std
cmpsb
inc
dec
test
mov
or
jp
inc
call
push
sti
lret
dec
xchg
sbb
loope
pop
push
fmuls
fistpll
and
ss
aam
xchg
sbb
sbbl
data16
xchg
scas
xchg
aas
dec
mov
push
and
add
in
fwait
and
fnstenv
mov
sbb
out
fidivs
inc
cmp
fwait
xorl
inc
cltd
cmp
inc
and
int
cmp
pusha
adc
test
js
shrb
sti
adc
cmpb
int
ds
leave
jbe
loop
jno
std
mov
jne
mov
inc
sbb
pop
in
cmp
aam
mov
mov
jo
inc
inc
or
in
iret
and
pop
mov
lret
mov
jbe
jns
sbb
test
je
xor
xchg
jnp
jecxz
mov
insl
xchg
xchg
imul
pop
test
out
lret
ss
repz
xchg
mov
or
pop
icebp
mov
outsb
push
jmp
mov
add
loop
js
rol
pop
mov
jg
repz
push
add
or
jae
or
data16
int
push
pop
push
fistl
mov
adc
cwtl
ret
inc
ljmp
lcall
push
test
xor
jge
lret
ret
cmp
and
in
inc
cmp
push
mov
mov
push
or
int
int
adc
xor
sub
dec
push
or
add
loope
inc
aam
cmpsb
inc
mov
cmpsb
and
mov
mov
mov
xchg
rorl
lret
add
lcall
cmpsl
mov
mov
dec
dec
daa
sbb
jge
lods
mov
mov
arpl
stc
rclb
stc
xchg
movsb
xor
insl
fdivrp
bound
lods
pop
dec
scas
lretw
sbb
fisubs
imul
mov
push
mov
mov
in
sbb
jo
and
daa
add
out
ss
ljmp
xchg
lods
jmp
xchg
in
cmp
repnz
cmpsl
js
adc
mov
add
outsb
pop
push
popf
sub
shlb
daa
mov
sub
jecxz
dec
xchg
cmp
movsb
iret
cmpsl
add
ret
push
in
loopne
jae
mov
xchg
add
dec
add
or
insb
fcomps
push
call
add
sub
sub
or
popa
jnp
xchg
adc
jns
test
sar
loope
mov
adc
sub
fwait
iret
pop
nop
test
dec
test
fcoml
stc
xor
inc
pop
andl
lods
add
dec
rorb
inc
push
cwtl
ret
fwait
xor
sbb
cs
es
fucomp
jb
lcall
push
aam
arpl
lods
in
mov
xor
jp
aaa
ret
and
in
jp
or
adc
push
adc
int
mov
xor
xchg
xchg
jbe
cmp
ds
and
out
or
inc
adc
sbb
mov
ret
or
xchg
sub
aaa
push
pop
inc
daa
negb
fnstenv
mov
add
aaa
push
mov
pop
out
inc
xchg
mov
add
push
outsl
mov
in
push
sub
fsubr
mov
sub
outsb
jge
mov
and
push
dec
push
out
sti
xchg
add
outsb
sub
xor
pop
jl
in
lahf
iret
or
push
xor
sub
xchg
hlt
arpl
cmpsb
fcoml
pop
jo
shlb
add
insl
sub
fdivrs
pop
push
or
jno
mov
cli
arpl
mov
push
mov
jg
xor
bound
inc
dec
xchg
imul
inc
lock
fsub
ror
mov
sbb
mov
cmc
mov
aam
and
or
scas
add
push
pop
insl
je
repnz
popf
add
cmpsb
pop
add
orb
xor
add
dec
xchg
adc
aaa
xchg
cmpsl
int
mov
lcall
pop
xor
mov
mov
xchg
popl
andb
data16
loope
add
mov
cmp
testb
cmpsb
fisubs
enter
out
adc
mov
adc
sbb
lods
ror
jl
add
aam
rcrb
jne
xlat
xchg
loop
aas
mov
cli
test
pushf
enter
inc
test
popf
jle
lret
mov
push
add
insb
lods
sbb
js
xchg
sar
xorb
mov
mov
mov
enter
mov
jne
mov
mov
je
popf
int
dec
add
xchg
orl
xchg
pop
outsb
es
mov
lock
sbb
ror
jno
in
inc
scas
out
loopne
fsts
outsl
xchg
out
mov
aam
aas
and
out
and
fcmovnbe
gs
test
shll
lock
dec
fcomps
sub
lahf
addr16
add
loop
pop
andl
adc
imul
mov
push
addr16
in
jg
cmp
aas
xchg
and
jb
data16
movsl
ja
pusha
jbe
movsb
xor
daa
xor
jbe
dec
gs
xchg
cmpsb
push
or
or
sbb
and
push
sub
inc
xchg
bnd
xchg
js
and
push
dec
cmp
mov
cmp
xor
fcompl
sbb
jne
popf
add
push
popa
lods
rcrl
mov
xor
pushf
movsb
out
pop
cwtl
mov
dec
ss
lahf
cmpl
sub
mov
icebp
inc
cli
jl
aam
leave
mov
xchg
inc
gs
xor
push
ret
and
xchg
xor
or
xor
mov
out
push
add
icebp
stos
clc
push
cmpsb
push
bound
mov
lods
dec
xor
or
push
pop
testb
xchg
jmp
jnp
rcll
or
sahf
sub
imul
test
xchg
adc
mov
fchs
inc
sbbl
aam
pusha
jmp
ficompl
sub
mov
in
into
push
push
stos
sub
mov
push
sbb
mov
loope
or
mov
push
call
mov
mov
adc
push
and
dec
ss
je
fildl
add
dec
shlb
xor
inc
pop
add
jno
nop
add
or
lea
jno
pop
push
scas
mov
cmp
out
jge
scas
dec
sub
mov
mov
inc
sbb
jnp
pop
xchg
mov
rol
insb
les
fisubrl
mov
mov
insb
out
mov
cli
inc
arpl
and
cltd
and
add
roll
addr16
std
dec
push
pusha
mov
mov
sub
adc
jle
adc
mov
test
xchg
push
or
jge
ljmp
fidivrs
inc
andw
loop
repz
push
mov
mov
imul
call
repnz
or
clc
mov
stc
mov
rcr
mov
pop
lods
inc
scas
push
shlb
into
or
int3
mov
int
xor
mov
jo
jle
jne
sub
lcall
repz
in
fadds
lret
xchg
add
out
mov
ss
rcrl
jle
mov
test
int
xor
in
leave
and
repz
push
call
inc
xchg
scas
out
cld
jecxz
lods
pop
cmpsl
sub
push
movsb
in
push
aaa
out
shrb
jge
lea
out
aaa
sbb
loop
popf
test
xchg
sti
or
jmp
jl
lods
sub
les
lahf
or
cmp
push
cmp
scas
lret
out
lea
xchg
cmc
sbbb
dec
adc
adc
sti
dec
ss
mov
pusha
stos
pop
out
test
xor
cmp
mov
ljmp
mov
aad
dec
pushf
and
insb
je
pop
test
call
orl
out
dec
xchg
cmp
fildll
and
fcoml
mov
jmp
mov
mov
push
jl
xchg
mov
sbbb
adc
cmp
push
or
lds
call
cltd
fucomi
jb
lahf
ss
pop
jecxz
int3
sbb
dec
je,pt
mov
sbb
jne
cld
adc
test
cli
pop
shll
add
idivb
mull
stos
lret
adcl
movsl
in
fisubrl
xor
clc
add
lock
outsb
stos
int
xor
xor
jl
movsl
pop
int
adc
lock
out
hlt
mov
orl
stos
lret
pop
std
stc
mov
mov
xor
push
jp
sub
inc
std
mov
mov
aas
inc
in
sbb
lret
ja
sub
fimull
mov
dec
outsl
out
rcll
xor
lds
inc
shlb
outsl
push
jae
shrb
repz
insl
cmpl
adc
mov
call
aad
dec
idivb
rclb
adc
test
aad
dec
or
movsl
ret
xor
stos
dec
add
xchg
mov
mov
dec
add
icebp
daa
or
sbb
and
test
sbb
push
jns
ja
push
mov
lahf
jle
sbb
lds
and
mov
lock
lcall
pop
add
icebp
sub
std
push
insb
mov
ljmp
pop
rorl
stc
dec
inc
push
loop
xchg
aaa
int3
jl
sbb
mov
scas
lahf
jg
out
ret
das
int
mov
jecxz
scas
jmp
dec
mov
dec
adc
cld
and
je
nop
mov
cltd
xor
lods
ror
int
sbb
push
push
pop
rcll
adc
les
in
mov
test
js
push
lahf
pop
inc
aad
cmp
sti
scas
aas
test
insl
push
or
cli
or
inc
outsb
adc
xor
xchg
fstpl
xor
lods
dec
mov
sub
mul
hlt
int
mov
adcl
xor
and
xchg
cltd
push
pop
dec
xor
imul
dec
push
xor
inc
sahf
sub
daa
jle
lods
mov
dec
aad
mov
addl
mov
test
xor
push
movsb
cli
mov
in
pop
push
testb
add
imul
andl
push
negb
out
stc
nop
stos
jns
adc
lahf
pop
in
mov
push
leave
mov
push
es
leave
xor
rorb
mov
lahf
add
mov
pop
outsl
mov
pop
ret
pop
hlt
aad
jbe
push
test
movsl
or
mov
pop
mov
mov
jo
insl
jg
imul
ficompl
mov
xchg
pop
gs
pop
sbb
insl
into
aaa
jae
push
xchg
adc
sub
ret
mov
cld
add
loopne
inc
insb
sti
xor
aaa
inc
push
cmp
mov
jbe
mov
pop
clc
mov
sbb
jl
jmp
flds
stos
cwtl
enter
in
shr
dec
nop
je
or
pop
enter
cs
fisubs
loopne
icebp
fcmovne
clc
push
enter
fistpll
xchg
sub
ficompl
push
mov
inc
jp
adc
mov
dec
or
push
dec
sbb
call
jle
div
sbb
push
add
pop
orl
mov
push
cmp
xlat
in
std
or
cmp
test
jp
mov
in
xchg
dec
push
mov
mov
pop
cmp
out
sbb
sbb
jo
aaa
std
dec
mov
mov
aam
push
pop
adc
js
je
or
dec
jne
or
dec
xor
and
push
xchg
adc
cwtl
pusha
adc
cmp
and
sub
cmp
aad
jp
fdivl
fcompl
shl
sub
xor
push
xor
xchg
xchg
stos
xchg
arpl
mov
cltd
dec
xlat
testb
ja
and
mov
mov
xlat
lds
mov
or
sub
xchg
sub
sbb
or
xor
sbb
and
cli
outsb
sbb
sbb
and
mov
mov
cwtl
sub
mov
mov
jmp
pop
and
inc
mov
mov
dec
dec
int3
out
xor
fdivs
mov
or
adc
lea
push
repz
jle
imul
loopne
and
push
add
mov
mov
cmp
enter
in
xchg
mov
loop
sbb
mov
fbstp
jecxz
jae
rclb
ret
jge
jecxz
and
js
clc
imul
xchg
push
jno
sub
jp
popa
in
out
test
cmpb
cmp
insb
and
xor
mov
add
and
cmp
sbb
mov
in
mov
adc
mov
jle
lcall
repnz
mov
ja
ljmp
enter
mov
dec
sahf
push
cmp
rclb
popf
in
pop
push
sbb
rolb
call
cmp
push
sti
xchg
fidivrs
mov
cwtl
mov
out
pop
aas
adc
sahf
ret
inc
add
jno
lea
push
xlat
jb
inc
jne
sub
add
mov
lret
or
pop
loop
inc
leave
sub
sbb
pop
loopne
into
insb
jae
daa
mov
xchg
sbb
or
add
inc
sahf
gs
inc
mov
push
ljmp
cmp
insb
dec
fs
ja
call
jb
jp
test
pop
dec
mov
scas
pop
push
dec
neg
dec
xlat
mov
lret
loopne
repnz
repz
dec
pop
int
in
xor
test
push
shrb
xchg
mov
movsl
pop
mov
test
repnz
jo
cmp
push
xchg
popa
dec
dec
mov
xchg
sbb
xchg
sub
rorb
loopne
sti
repz
out
mov
push
rolb
lret
lods
cltd
call
pop
stos
cmp
aas
shrb
inc
mov
xlat
test
mov
mov
mov
lds
out
pop
and
nop
jns
sbb
xor
sbb
call
cmp
cmp
lea
sar
pop
push
dec
sub
lock
movsb
mov
ret
push
testb
lock
enter
shlb
cmpsl
sahf
xor
inc
jecxz
lret
in
cmp
mov
push
insl
mov
popa
jo
xchg
dec
or
insl
xor
repz
cld
bound
ss
pop
pop
es
int
insb
mov
repnz
cmp
ss
or
inc
dec
in
cld
sbb
inc
and
aaa
pusha
nop
fildll
rcrb
mov
dec
fadds
call
xchg
jg
in
push
jp
lcall
and
sub
and
jno
xor
hlt
jb
icebp
repnz
or
push
test
mov
and
pop
add
push
jns
das
sub
jnp
das
jne
xchg
sbb
cmp
mov
mov
or
mov
arpl
sbb
cs
jmp
in
into
adc
outsb
mov
js
int
outsl
mov
inc
xor
mov
pop
shr
pop
add
rclb
sbb
lods
inc
scas
fiadds
pop
dec
mov
pop
fldenv
add
add
std
mov
push
incb
jle
lods
pop
mov
jp
push
or
in
sbb
dec
mov
fs
mov
mov
imul
inc
sbb
ret
shl
jge
sbb
aas
and
xor
lret
jbe
outsl
cmp
push
push
push
sub
lcall
mov
rorb
adc
add
enter
push
rcll
jp
out
mov
fmuls
cmpxchg8b
mov
ret
dec
mov
push
sub
cmp
pushl
mov
insl
pop
adc
mov
out
pop
jb
jl
mov
cmc
pop
xor
dec
or
push
jb
xlat
sti
ret
lret
mov
mov
daa
sub
ret
jge
jge
adc
jle
aas
mov
inc
push
xor
xlat
into
sbb
loop
xor
mov
inc
lods
in
dec
push
xlat
push
jle
popf
in
inc
test
sti
mov
pushf
nop
movsb
test
pop
inc
insb
inc
je
dec
add
ds
repz
mov
jg
into
and
push
adc
pop
fxch
icebp
sub
add
lahf
adc
mov
psubusw
movsb
mov
lods
pop
scas
or
inc
leave
mov
in
outsb
dec
pusha
and
xlat
push
ror
out
scas
push
adc
mov
jle
cmp
xchg
into
pop
movsl
pop
xchg
sar
sbb
jo
push
push
inc
or
aam
push
popf
fstpl
and
cmp
shrb
jmp
ss
ror
push
jns
mov
and
dec
lds
lgs
adc
xchg
loopne
aaa
xchg
lea
cmp
pop
push
inc
stos
cmp
or
xor
sti
ljmp
dec
jg
iret
mov
js
adc
and
xlat
sarb
adc
ljmp
les
adc
xchg
es
and
cli
repnz
movsl
cmpsb
test
pop
cltd
fcompl
xchg
push
fcomps
popa
push
lret
ja
pop
stc
jno
mov
jbe
and
xor
dec
xchg
outsb
cs
jo
out
mov
fmulp
gs
pushf
daa
inc
test
add
daa
xor
push
ret
test
shrl
sub
jae
cmpsl
jmp
repnz
xor
jmp
movsl
cmpsb
mov
adc
push
jno
and
jne
mov
jb
sbb
jmp
pop
add
jne
imul
nop
xchg
adc
cmpsl
cmc
ss
or
test
push
push
and
fcomip
lahf
loop
xor
inc
faddp
jge
inc
dec
pop
jne
das
insl
dec
push
mov
mov
sub
ds
lods
insb
add
jmp
pop
sub
jmp
rclb
jl
jg
lds
and
sbb
scas
ror
ret
pop
ja
inc
pop
push
lcall
test
xchg
xchg
dec
int
adc
pop
fimull
leave
test
adc
scas
push
push
xor
shrb
pop
ficompl
sbb
lods
xchg
decb
xchg
fstpt
dec
mov
test
jbe
adc
or
push
xor
daa
and
sbb
sar
or
stos
xchg
call
cli
add
pop
or
xor
push
pop
push
adc
cs
in
ja
jmp
cwtl
sbb
jo
shr
sti
and
mov
testb
dec
imul
pop
push
pop
mov
cli
repz
dec
or
pop
mov
and
jp
or
outsl
les
push
or
jmp
pushf
pusha
or
lea
rcrb
gs
add
int
test
fnstenv
cmp
xor
ret
push
dec
xlat
movsl
xchg
sbb
xor
insb
inc
add
test
lahf
enter
mov
ljmp
test
aam
xor
test
hlt
divl
inc
xchg
mov
push
stos
mov
push
lods
ljmp
mov
sub
jne
push
push
mov
loopne
mov
push
mov
jae
mov
call
test
test
scas
lcall
sbb
insl
ja
add
es
scas
subb
pushf
dec
ljmp
inc
mov
iret
dec
loop
test
in
fcoml
jge
pop
outsl
decb
imul
pusha
xchg
cmpsl
jl
stos
xor
xchg
cld
cld
xchg
outsb
cmp
cmp
mov
mov
xorl
cmp
in
mov
out
mov
sarb
add
jecxz
nop
rcr
int3
aad
sbb
ja
cmp
and
pusha
sub
pop
sbb
add
adc
pop
mov
addr16
mov
pop
xchg
shlb
push
loop
insb
mov
test
inc
sub
data16
test
shlb
mov
les
inc
out
jae
mov
lods
pop
aaa
push
movsb
inc
pop
and
mov
push
xchg
pop
cmp
dec
mov
pop
scas
mov
lret
shlb
cmpsb
std
ret
out
xchg
das
mov
cmp
cltd
pop
pushf
mov
cwtl
mov
movsb
or
jmp
pop
mov
lret
addb
loop
testl
add
mov
in
inc
push
andb
adcb
cwtl
or
cltd
xchg
rolb
add
mov
adc
pushf
jl
fsubrl
lods
sbb
sub
xor
and
cwtl
int3
and
cmc
xor
fildll
mov
pop
xlat
xchg
xor
dec
xor
cmp
in
cmp
imul
jle
es
xor
data16
inc
pop
and
in
pushf
inc
aas
xor
pop
push
popf
leave
hlt
inc
arpl
jle
es
fcomi
stos
add
push
xlat
icebp
addl
mov
js
adc
mov
stos
lods
scas
or
daa
idivb
mov
pusha
lock
std
movsb
loope
mov
lods
mov
dec
jecxz
sbb
xor
dec
loopne
mov
negl
pop
mov
sti
int
ja
xlat
sub
ljmp
add
das
arpl
pop
mov
add
jg
test
js
or
dec
ds
jecxz
sarl
xchg
lret
adc
sub
lods
jl
push
imul
pop
inc
lret
rolb
pushf
negb
mov
cmpsb
fldt
jl
jge
mov
mov
add
adc
cmp
divl
sbb
xor
in
std
popf
mov
insl
push
rorl
fs
fildll
popf
mov
mov
inc
push
jno
repz
mov
insb
jge
shrl
fidivs
or
and
filds
jmp
add
xor
lcall
sub
push
sub
mov
inc
dec
pop
mov
mov
sub
ja
dec
gs
es
xlat
mov
and
dec
mov
scas
push
xchg
push
add
push
roll
inc
mov
mov
ret
adc
cmp
or
stc
xchg
fimull
subb
jle
mov
incl
push
dec
sbbl
ficoml
jp
jmp
fildl
xor
sub
loope
je
dec
push
push
mov
xor
xchg
pop
mov
sub
in
xor
repnz
or
imul
cltd
dec
out
shll
or
xchg
xchg
data16
xor
cs
pop
fcmovne
cli
dec
cmp
lret
inc
pusha
push
pushf
dec
lods
dec
fstpl
in
out
rcrb
ds
bound
mov
mov
or
push
sti
mov
pop
pushf
xchg
mov
pop
push
out
movsbl
mov
push
mov
icebp
sti
leave
and
daa
sbb
aam
cmp
pop
ficoml
sahf
or
xor
sarl
fcoml
bound
test
fidivl
jmp
fwait
mov
mov
push
stos
mov
and
hlt
jb
xchg
pop
pop
stos
xchg
pop
and
dec
mov
pusha
sbb
mov
dec
mov
cwtl
in
and
jnp
jmp
push
jo
push
xchg
subl
popf
cmp
sub
sub
subb
mov
icebp
cwtl
jno
xchg
lret
clc
jae
dec
add
pop
repnz
in
daa
outsl
inc
hlt
sub
out
dec
cld
arpl
ja
sub
jle
ds
xlat
pop
push
sbb
shlb
int3
aam
andb
xor
and
dec
sub
jbe
sub
push
xchg
popa
jo
lcall
pop
incb
mov
rcll
jns
pop
adc
std
add
push
dec
or
mov
mov
in
pusha
adc
jbe
mov
adc
pop
inc
mov
lret
lret
sti
sar
int
jae
pushf
fcomps
sub
in
sbb
or
mov
icebp
mov
fists
repnz
adc
xchg
or
or
cmp
imul
push
and
push
jge
xchg
mov
daa
das
in
mov
xchg
dec
dec
and
and
push
jl
fldcw
es
mov
repz
pop
gs
cwtl
and
stos
adc
xor
adc
inc
jb
fldcw
jp
inc
add
ja
fiaddl
mov
mov
mov
popf
cmp
sub
cmp
lcall
xchg
inc
pusha
sbb
and
xor
push
dec
pusha
bound
in
dec
aaa
inc
leave
cmpsb
xor
pop
lock
repz
imul
mov
out
fstpl
pop
mov
jg
fnstenv
arpl
call
mov
stmxcsr
mov
jb
fmull
jp
add
pop
push
adc
shrl
cmp
icebp
jbe
adc
xor
je
pop
cmp
or
inc
mov
negb
rorl
xchg
icebp
xchg
cmp
mull
mov
cld
cmp
ja
pop
lret
movsb
add
les
sarl
rolb
or
shrb
and
out
dec
inc
mov
dec
add
cmp
sti
stos
adc
add
sbb
loop
in
loop
sub
jp
aaa
and
cltd
inc
es
cmp
push
xchg
adc
test
sub
mov
or
inc
xchg
aaa
push
push
fadds
nop
pop
fcomip
fucomip
pop
lret
int
jb
call
mov
leave
repnz
ret
loopne
stc
iret
sbb
dec
or
dec
jmp
es
test
jl
or
mov
push
xor
popf
outsl
jge
mov
xchg
add
out
loope
add
scas
xor
js
fs
adc
ss
jecxz
imul
cltd
dec
dec
push
and
xchg
xor
jmp
loope
outsb
dec
shlb
testb
dec
adc
mov
inc
popa
cmp
ja
pop
sti
movsl
cs
mov
jle
lods
dec
ds
arpl
leave
repnz
cmc
sbb
out
je
jb
js
cli
dec
cs
sbb
push
aam
dec
fsubrl
leave
xor
xchg
in
pop
sub
lcall
repz
xchg
popf
fstps
inc
int3
xchg
pop
negl
mov
fbstp
inc
cs
lods
sarb
scas
in
or
adc
repnz
inc
add
dec
out
sub
mov
jmp
push
sub
mov
push
xor
xchg
sub
xchg
inc
lods
mov
lds
push
je
inc
mov
ror
call
clc
add
adc
cmpsb
outsb
mov
push
mov
sti
xchg
loop
in
mov
mov
rcrb
insb
ret
push
out
cwtl
pop
mov
push
loope
and
cli
scas
xchg
cld
iret
adc
push
test
mov
inc
mov
lret
and
push
rorb
jg
out
lret
xor
imul
mov
and
push
fldt
dec
xchg
gs
mov
fnstenv
jg
lea
fcmovnbe
cwtl
leave
out
mov
xor
xor
in
pop
push
inc
xchg
dec
test
je
pop
scas
pop
out
xchg
mov
mov
aam
jge
test
adc
negb
shlb
stc
dec
loop
out
sbb
push
sub
pushf
das
lahf
cwtl
xor
adc
cmp
lds
jmp
cmp
xchg
inc
fucomip
inc
sahf
add
xchg
inc
mov
fstpt
adc
out
gs
mov
push
mov
sbb
fstpt
push
jbe
pop
xchg
out
sbb
mov
scas
and
sub
sbb
outsb
mov
mov
xchg
dec
inc
shrl
jno
rcl
cli
mov
add
repnz
fwait
cli
nop
sub
mov
ret
sbb
stc
sbb
pop
sbb
jmp
es
add
inc
js
pop
lret
hlt
clc
loop
roll
pop
push
mov
and
in
jb
dec
movb
dec
fwait
call
ss
test
mov
loop
into
or
test
aam
call
pushaw
arpl
sahf
pushf
pushf
cmpsb
addr16
pop
aas
mov
iret
push
push
pop
inc
orb
rorl
xchg
cmpsb
xlat
aas
cmpsb
imul
fs
out
rcrl
imul
cs
movsl
idivl
mov
test
pop
pusha
les
popa
lret
dec
stos
lods
rcrl
call
push
pop
or
insl
cld
or
in
insl
je
sub
or
sbb
cmp
into
roll
mov
adc
cmp
int
out
cs
negb
xlat
cmp
sub
jnp
flds
shl
pop
scas
int3
push
nop
pop
pop
xchg
xchg
jno
call
popa
lahf
add
xorb
cmp
mov
push
xchg
and
pop
xchg
rol
cmp
jno
xor
scas
or
sub
and
push
repz
aas
xlat
inc
push
das
mov
lret
idivb
addr16
sub
ja
lods
test
adc
adc
inc
xor
pop
xchg
push
cmpsl
inc
je
sbb
push
stos
mov
push
insb
stc
cwtl
jnp
inc
push
or
shrl
stc
inc
xchg
cmp
add
pop
test
xor
out
adc
jne
cld
mov
xchg
jmp
sub
call
jo
lds
insb
es
ja
or
mov
xor
mov
pushf
pusha
pop
sbb
sbb
shrl
jecxz
daa
push
sbbb
mov
shl
cwtl
or
inc
pop
insl
cmp
enter
or
icebp
loopne
jp
lahf
jg
pop
push
push
ret
mov
mov
imul
aam
das
pop
scas
or
pop
bound
imul
mov
xchg
popf
fstps
inc
adc
cwtl
or
inc
mov
in
repnz
rcrb
or
daa
sbb
test
xor
mov
xor
mov
xchg
jmp
push
mov
xchg
jns
shrb
xchg
mov
mov
inc
arpl
push
and
sub
inc
push
scas
out
xchg
scas
lods
shlb
out
pop
mov
mov
enter
or
loopne
outsb
mov
xchg
sbb
or
movsb
test
jbe
je
je
adc
int3
jnp
jbe
rorb
jp
fdiv
xchg
xor
add
xchg
cmp
pop
mov
sbb
push
jmp
jno
popa
jbe
pop
lret
in
cs
inc
stos
cmp
mov
xchg
lea
arpl
push
fbstp
dec
or
lock
cli
sti
insl
dec
pusha
and
int3
arpl
mov
mov
mov
jae
popa
popf
cmp
test
leave
scas
dec
aad
mov
js
xchg
mov
xor
jo
adc
cmp
fdiv
cs
imul
mov
shlb
sbb
inc
dec
les
es
push
and
iret
push
and
and
test
pusha
adc
pushf
adc
hlt
repnz
pop
scas
sbb
lret
mov
or
xchg
xchg
sub
or
stc
insb
mov
pop
imul
or
sbb
lods
and
stos
xchg
movsb
das
les
ret
js
mov
mov
jge
pop
or
xchg
jp
mov
inc
mov
xorb
and
aam
dec
fdivr
jno
in
sub
popa
mov
lret
out
cmp
pushl
pop
clc
dec
jb
push
mov
js
outsb
sbb
add
mov
loope
or
daa
mov
lahf
mov
xchg
loopne
xor
inc
sbb
and
sub
or
adc
jns
xor
cmp
imul
loop
jns
dec
mov
fidivrl
enter
cmp
xchg
xchg
and
pop
push
loop
lea
xor
or
ljmp
pop
lret
mov
mov
mov
push
dec
repnz
pusha
jno
jbe
mov
fidivs
fildll
cmp
add
cwtl
lods
imul
mov
or
ror
push
cli
sbb
mov
movsl
cmp
fcmovbe
pushf
das
rorb
ret
cmp
daa
xor
cmp
mov
adc
dec
jno
pop
movsl
push
push
xor
cltd
loopne
out
clc
imul
dec
fwait
xor
icebp
mov
pop
xor
int
jmp
stc
push
mov
stos
fs
roll
xchg
pop
mov
es
mov
mov
int
xchg
mov
insb
mov
mov
mov
fbld
mov
xchg
loopne
aas
push
adc
jno
push
sahf
clc
cmp
ljmp
or
adc
push
idivl
aas
mov
xchg
fmulp
mov
mov
add
ficomps
stos
imulb
jo
xchg
cmp
pop
or
ljmp
test
bound
ret
les
or
xchg
popf
pop
xchg
mov
or
out
push
scas
repz
and
int3
adc
iret
lock
fdivrl
out
in
sbb
fistpll
lds
push
shll
pop
pop
test
push
in
cs
in
push
xchg
inc
cmpsl
leave
sbb
cld
jne
lods
cmpsl
emms
ja
lcall
lods
or
pop
pop
lret
mov
mov
ret
pop
mov
adc
out
rcll
mov
in
add
shrb
arpl
inc
jmp
test
xchg
mov
loopne
inc
rcr
repz
out
imul
nop
dec
pop
cmp
mov
inc
int
mov
mov
mov
jne
je
scas
mov
adc
cmc
data16
nop
and
xchg
outsb
scas
sub
test
cmc
gs
icebp
sbb
test
adcb
cmpsl
mov
sub
sub
adc
rorb
mov
mov
in
lcall
dec
xchg
mov
movsb
inc
mov
les
mov
or
and
lret
mov
xchg
push
mov
sub
int
ret
fdiv
xchg
cmp
test
jne
mov
stos
push
popf
cmp
mov
dec
xor
pusha
rolb
adc
popa
xchg
es
jmp
test
jle
inc
fs
dec
sbb
dec
jl
cwtl
int
inc
lret
or
test
push
sub
push
or
gs
loopne
inc
movsb
sub
adc
fsubl
push
ss
sbb
mov
int
sbb
push
test
cmpsl
cmp
mov
movl
loope
pushf
paddb
imul
inc
sub
addr16
stc
mov
jg
cmp
dec
das
data16
mul
cmp
outsb
test
and
cmpsl
fcomps
pop
adc
arpl
cmp
bound
ret
sub
push
or
adc
daa
sbb
addb
fisubs
jecxz
and
jge
xchg
enter
and
mov
out
js
push
shrb
cmp
dec
xor
xor
jge
pop
into
mov
push
aaa
sub
lcall
push
sahf
fwait
xchg
sarl
mov
gs
xor
loop
call
dec
in
mov
in
cwtl
outsb
jb
dec
stos
pop
fwait
xchg
int
dec
mov
add
xor
psrlq
lret
mov
adc
pop
daa
mov
inc
stos
fwait
mov
fsubp
filds
je
lods
out
scas
jne
es
mov
or
movb
push
ljmp
aam
xorb
mov
or
mov
jmp
out
imul
sahf
aam
outsl
cmp
loope
mov
out
data16
aaa
gs
lds
dec
lea
in
mov
mov
add
mov
fs
into
cmp
in
jle
mov
nop
dec
cmp
mov
into
loope
cli
mov
mov
hlt
mov
repz
cmpsl
mov
xchg
mov
in
out
pop
jns
inc
cmc
push
lds
or
orl
repz
ja
add
bnd
lret
imul
popf
cld
lea
mov
into
add
jle
pop
and
mov
inc
xchg
or
and
cmp
add
pop
ds
adc
inc
movb
cltd
xlat
inc
shr
aam
clc
mov
xchg
or
pop
mov
xchg
sbb
mov
push
adcl
and
cld
cld
mov
out
mov
push
call
pushf
fwait
jecxz
and
xchg
add
push
mov
movl
dec
sub
mov
loope
jne
mov
pop
addr16
outsl
or
daa
fisubs
jle
out
enter
repnz
sbb
jmp
xor
addb
rorl
orb
scas
jl
inc
sbb
mov
push
das
loope
stos
inc
jle
xchg
dec
mov
jle
rcrb
in
mov
sub
out
jg
mov
mov
inc
dec
adc
sbb
xchg
cmp
sub
daa
and
js
outsl
xchg
cli
fstpt
or
cmp
pushl
dec
and
out
cmpsb
adc
cld
push
xor
push
push
pushf
jb
scas
int3
jmp
std
test
lret
ss
pop
mov
xchg
cmp
xor
cmc
inc
jecxz
movsl
mov
xor
shlb
rcrb
movl
in
mov
jg
jnp
pop
jnp
push
sub
lods
lea
test
inc
fsub
aad
inc
and
mov
jne
mov
enter
jnp
pop
andb
add
mov
shll
and
fmull
or
imul
in
cwtl
mov
xor
call
sti
xchg
adc
ljmp
loopne
outsb
xorb
sti
sbb
icebp
mov
cltd
mov
enter
mov
pushf
inc
iret
mov
sti
sbb
sbb
jg
js
add
gs
rcrb
inc
stc
addr16
mov
enter
xor
or
mov
jge
xor
enter
fsubrs
inc
insl
push
fnstenv
sub
stos
xor
pop
stc
jne
idivb
les
add
mov
mov
jle
pop
push
add
push
jne
mov
popa
sub
push
outsl
ret
add
jne
inc
inc
outsb
mov
add
scas
xor
rclb
xchg
repz
out
sub
sbb
mov
add
movsl
mov
arpl
out
notb
sbb
or
test
sub
jns
adcl
jg
inc
in
xorb
test
repnz
mov
push
dec
test
fbstp
rclb
loopne
inc
adcl
mov
cmp
jae
jb
lcall
ss
arpl
inc
rcll
or
les
pop
mov
mov
cmp
subl
add
lea
imul
xor
cmp
push
scas
stos
sbb
outsl
data16
fistps
xchg
pop
nop
test
mov
stos
pushf
shlb
push
add
jl
fsubl
sub
push
or
xchg
hlt
shlb
push
mov
pop
in
sbb
int3
repz
jb
movsb
pop
es
mov
sub
jp
mov
lret
add
sti
dec
mov
dec
mov
sub
xor
or
repnz
leave
pop
ds
nop
icebp
ud2
xorb
jns
jb
out
repnz
movsl
mov
add
out
pushf
rcll
in
sbb
jnp
imul
lahf
jecxz
inc
andl
add
jae
mov
or
pop
xor
lahf
cmp
into
mov
mov
pop
lret
or
cmp
adc
out
ret
pop
fidivl
xor
pusha
aad
inc
aam
rcr
mov
mov
bound
dec
ret
mov
test
add
out
pop
ja
jnp
cld
jecxz
gs
mov
lods
lods
test
inc
push
inc
test
cmpsl
mov
test
mov
int3
sbbl
mov
dec
xchg
jno
mov
sti
out
inc
int
cmp
bound
xchg
jmp
jbe
bound
sbb
popf
data16
jl
pushf
add
jne
scas
jge
dec
test
mov
aam
cli
xor
xchg
adc
subl
je
js
out
jmp
mov
int
add
and
or
add
ss
mov
adc
push
test
add
sbb
mov
call
sarb
test
aam
or
sub
cli
fcompl
push
fnstenv
jl
js
mov
dec
cmp
pop
and
sbb
pop
enter
pop
lods
pusha
push
popf
cld
mov
mov
lds
and
mov
repz
cli
outsb
adc
or
ja
jg
call
loop
add
pop
xchg
xor
pop
push
mov
test
faddl
rcrl
cmpsl
push
les
shlb
sub
and
movsb
pop
movsb
xor
cmp
xchg
mov
jbe
xchg
test
pushf
xchg
stc
repz
push
adcb
ds
mov
repnz
mov
lahf
sub
add
fdivrl
fucomi
xchg
scas
dec
mov
test
mov
push
lahf
xlat
pop
inc
mov
or
and
aam
jl
scas
xor
xor
aaa
mov
cmp
adcb
dec
or
scas
mov
cli
rcrl
adc
mov
fdivs
mov
aad
fs
xor
fstl
dec
cmp
add
loop
inc
push
das
mov
lods
into
ljmp
shl
stos
xor
out
bound
popf
jae
in
adc
dec
mov
lock
stos
cmpsb
pop
cli
outsl
or
and
fcomps
mov
sbb
pushf
fists
lret
adc
icebp
loop
dec
adc
push
or
je
std
in
repz
out
sbb
stc
jb
inc
enter
lods
outsl
jo
stos
arpl
ret
bndstx
add
jg
sub
cmp
les
push
jg
xor
mov
xor
cmc
sub
loope
sbb
lds
xor
testl
cld
sub
jg
sbb
hlt
sahf
adc
jge
and
pop
incl
push
and
ljmp
test
xchg
cwtl
ljmp
fisttps
sbb
bound
xchg
inc
dec
js
aam
or
xor
sbb
mov
or
lcall
and
mov
repz
shrl
and
jae
and
icebp
jbe
add
cmp
rcl
sub
mov
inc
inc
push
cs
std
shl
xchg
inc
insl
insb
pop
or
mov
out
pop
jecxz
lock
bnd
xor
adc
sub
add
push
xlat
bnd
or
dec
pop
cltd
mov
mov
xchg
popa
in
xchg
fmuls
mov
in
int
push
sub
sbb
jbe
push
cmp
jg
sub
nop
mov
rorb
jmp
scas
mov
dec
pop
adc
cmp
daa
stos
imul
mov
push
dec
inc
xchg
sti
push
push
fildll
cmpl
cmp
in
dec
xlat
inc
out
mov
ret
jmp
xor
sub
ja
in
sbb
je
pop
outsl
sbb
mov
jmp
pop
aad
lock
sbbl
aam
cmpb
pop
leave
sbb
push
xchg
jns
mov
imul
sbb
push
inc
add
fldt
gs
clc
mov
pop
xchg
mov
cltd
outsb
sub
fadd
es
in
leave
testb
es
ret
scas
loope
jno
push
int3
cli
mov
cmp
popf
jmp
daa
cmc
dec
or
imul
enter
lret
mov
jns
std
cmp
sub
imul
flds
mov
gs
xlat
push
add
mov
lea
xchg
test
jp
cld
xchg
and
fildll
leave
sbb
jecxz
mov
xor
shlb
sarb
xchg
mov
mov
push
adc
mov
mov
xchg
movsb
inc
jne
lcall
dec
jmp
dec
jp
dec
loope
rcl
fdiv
nop
add
xchg
jo
mov
mov
mov
sub
sbb
xchg
imulb
icebp
cmp
sti
dec
pop
jecxz
mov
insl
add
xchg
outsb
cmpsl
jecxz
fnstcw
sub
fbld
cmp
stc
mov
repz
dec
lcall
roll
pop
mov
out
push
cmp
gs
das
and
and
pop
pop
roll
xor
pause
shrl
lret
cltd
out
mov
das
add
pop
lret
sbb
sub
movsb
mov
jg
inc
mov
popf
aas
xor
fistl
leave
add
inc
sub
add
cmp
lods
out
fcmovnu
mov
jb
jb
mov
pop
fcmovu
shr
icebp
ljmp
push
sbb
daa
dec
mov
push
and
jcxz
or
stos
pop
ds
mov
loopne
push
add
and
lods
scas
testl
ja
xchg
mov
cmp
dec
xchg
push
xchg
call
es
leave
push
call
adc
subb
in
insl
stos
pop
hlt
popf
add
aam
mov
xchg
dec
sbb
sbb
icebp
push
sub
es
and
je
pop
dec
push
mov
fsubrl
lahf
out
jne
clc
push
add
fmuls
cmp
lods
xchg
rcll
cwtl
repz
push
imul
xchg
mov
pop
sub
mov
push
push
mov
or
sti
fs
sub
dec
add
inc
rcl
add
push
je
rorl
les
sub
xchg
add
inc
jge
test
roll
call
dec
mov
sbb
gs
xlat
jg
addr16
call
adc
xor
test
inc
adc
push
cli
aam
mov
aas
idivb
mov
jb
aas
dec
jno
mov
aam
les
sub
inc
pop
jecxz
xor
rclb
mov
dec
inc
jne
pushf
popl
fcoms
in
mov
fwait
mov
popa
jl
cli
xchg
push
push
cmc
mov
icebp
add
mov
xchg
or
sarl
cs
sbb
jmp
int
dec
loop
fnsetpm(287
xlat
fmull
push
or
or
mov
movsl
sbb
pop
scas
lock
xor
ds
mov
inc
mov
and
cmc
jo
in
dec
sub
iret
mov
aaa
pop
and
cmpb
inc
push
dec
popl
fwait
and
xchg
imul
aaa
jnp
sub
hlt
fidivrs
push
dec
mov
push
xchg
sub
fstps
and
jl
dec
fwait
ret
in
adc
test
ljmp
jns
aam
sub
mov
xor
xor
lds
push
idivb
test
andb
dec
rcl
js
stos
mov
imul
insl
inc
les
cmpsb
sub
aad
mov
imul
mov
enter
mov
xor
andl
add
ret
xlat
xor
xchg
and
push
jb
aas
mov
inc
xchg
cmp
das
jl
scas
cmp
lret
inc
mov
fsubrs
push
xor
mov
shll
scas
mov
pop
jle
xor
std
dec
lock
dec
imulb
xchg
nop
mov
js
mov
cmp
fs
lcall
pop
insl
mov
loop
sbb
insb
cmpsb
out
int
mov
out
repnz
fmulp
inc
xchg
cli
sti
loopne
dec
sbb
fwait
adc
adc
adc
cmp
into
mov
imul
push
jne
mov
outsb
movsl
aam
in
adc
jp
mov
jae
in
add
xor
xor
cli
out
mov
xor
pop
xor
test
les
js
cs
inc
daa
and
cmpsb
popf
imul
jg
xchg
xchg
rcrl
pusha
sti
push
fistpll
std
cwtl
dec
dec
aad
xor
movl
cld
fnstenv
inc
fcmovbe
adc
mov
push
pop
std
adc
xchg
jl
fwait
repz
xchg
mov
jp
in
sbb
leave
mov
xchg
xchg
movsl
dec
lock
dec
outsb
adc
movsl
into
lahf
sahf
inc
lahf
cmp
sub
jnp
sub
mov
pop
jbe
cmpsb
push
adc
mov
pop
sub
sub
jle
jb,pn
repz
mov
xor
dec
cmp
scas
xchg
mov
xor
gs
shlb
imul
cs
cmp
mov
pop
push
xchg
cmp
stos
out
lods
loop
test
pop
xor
out
mov
sub
outsl
dec
adc
pop
push
in
mov
das
dec
xchg
pop
popf
insl
jns
out
jl
xor
xor
dec
sub
xchg
int3
and
mov
xchg
out
pop
mov
jnp
push
loop
inc
mov
repnz
fwait
ret
inc
add
push
xchg
sahf
xchg
jg
decl
and
inc
xor
adc
xor
jnp
test
push
rcl
inc
push
sub
sub
lret
shrb
jb
cmp
mov
mov
mov
add
add
mov
orl
pushf
stos
add
xor
pop
adc
add
mov
dec
sbbb
dec
insl
cmp
les
sub
lahf
insb
mov
push
cs
mov
in
js
push
mov
ljmp
pop
repz
and
and
and
fisttpll
or
add
aam
xchg
cmc
mov
jecxz
daa
jae
cmp
add
fwait
test
or
xlat
push
sub
fcmove
and
clc
cmp
in
inc
pushf
pop
cmp
xor
pop
sbb
fnsave
xchg
push
lds
mov
mov
rorl
inc
mov
loope
pop
push
sbb
jg
sbb
and
ljmp
dec
ss
loopne
das
aam
xor
imulb
repz
jecxz
adc
popf
or
fistpll
movb
shr
mov
imul
loop
inc
mov
push
or
jle
lcall
mov
and
mov
pop
ja
lods
imul
inc
cmp
jne
sub
pop
inc
popl
and
aam
add
lods
sbb
xchg
clc
jge
mov
icebp
pop
pop
lds
and
les
mov
ss
pusha
lahf
push
push
sbb
sti
iret
push
aas
out
lds
xor
pop
notl
pushf
ret
fdivl
sti
pop
rcrb
pop
jmp
cltd
or
mov
mov
jmp
movsb
push
addr16
mov
jg
or
xchg
sub
test
mov
mov
mov
in
mov
xchg
jecxz
mov
fldt
push
add
loopne
xlat
jecxz
push
xor
mov
ss
scas
ret
jns
stc
dec
shll
out
repnz
jbe
xchg
xchg
fdiv
int
cmc
cs
or
push
push
xchg
clc
jmp
cmpb
sarb
mov
out
aam
xchg
and
das
inc
push
je
int
cmpl
jp
xorb
out
imul
and
jns
cwtl
jmp
inc
popa
addr16
out
andl
add
mov
pop
js
in
and
shlb
dec
xchg
movl
adc
mov
and
lods
and
cmp
sti
shrb
into
js
shlb
cltd
lds
cmp
ret
insb
repz
xchg
pop
movb
adc
ss
enter
fildll
cmp
addr16
inc
dec
stc
jg
sub
je
aaa
jp
pop
stos
push
stos
mov
or
ljmp
rclb
xchg
or
mov
cld
cmp
ss
ficompl
std
jnp
jl
xchg
popl
cmp
push
mov
stc
fidivrs
dec
lods
js
sbb
push
xchg
bound
or
and
adc
repnz
rcrb
inc
mov
cli
push
test
mov
enter
stos
mov
mov
loop
jge
negb
sbb
sbb
stc
mov
pushl
rclb
in
push
sbb
xor
imul
mov
cmp
sbb
les
aam
jae
in
loopne
sub
ds
scas
mov
insl
push
adc
lods
xor
xor
das
lret
aaa
dec
aad
add
bound
pop
adc
inc
jb
fdivrl
xchg
mov
sub
inc
cmp
clc
cmp
or
lret
es
mov
addr16
in
fcmovb
fmul
test
pusha
jge
daa
sub
popf
loopne
iret
out
cmp
mov
scas
sbb
ljmp
mov
and
xor
inc
mov
sbb
fiaddl
dec
inc
jle
ret
mov
cmp
mov
lea
or
cwtl
cmpsb
popa
xchg
test
sahf
pop
mov
sub
out
adc
ret
xchg
loope
pop
cmpsb
subl
loope
push
adc
mov
xor
pop
nop
cli
cld
xor
test
testl
shr
stos
sub
mov
jecxz
outsb
and
test
or
gs
add
mov
jge
sub
adc
stos
or
cld
das
test
cmp
xlat
bound
ret
add
jo
pop
cli
loop
loope
and
add
ficoml
jg
cmp
push
imul
inc
movsl
movsb
jge
mov
mov
int
inc
enter
jge
sbb
mov
lods
sbb
push
push
xchg
push
adc
cmp
cmc
cmp
das
xchg
rcrb
pusha
xor
ror
loope
sbb
pop
insl
and
adc
xchg
lret
mov
test
or
xor
clc
or
outsl
mov
outsl
jle
jno
or
aas
cmpsl
pop
lds
bnd
lahf
pop
adc
iret
fdivrl
fcomp
or
imul
pusha
mov
add
in
arpl
xchg
xor
jae
mov
dec
sbb
daa
popf
call
and
jo
shlb
jecxz
lcall
pop
push
lret
mov
cmc
fstpt
push
push
adc
jle
inc
pusha
js
sbb
test
adc
js
ret
movsl
pop
adc
push
xchg
sahf
xchg
pushf
aaa
sub
push
outsb
addr16
dec
clc
idiv
cmp
test
or
xchg
in
jp
shrb
je
jl
or
test
stos
or
jno
and
mov
sub
enter
lds
push
out
adc
scas
xor
push
xchg
or
cmp
jne
pusha
pop
mov
fistl
cmp
push
sbb
data16
ror
inc
fcmove
fcoml
jne
ljmp
cs
sbb
loopne
dec
sub
cmc
and
into
xor
mov
cmc
sbb
jb
and
jmp
lods
loopne
xor
lret
pop
arpl
xlat
in
mov
iret
cmpsb
jg
xor
jp
xor
outsl
cmc
pop
mov
and
leave
inc
mov
lock
or
ja
and
cmp
popf
jo
xchg
inc
je
test
xor
and
xor
test
rclb
push
xchg
mov
out
push
inc
loopne
lret
or
clc
sub
add
xor
fmuls
push
sub
push
and
sbb
sub
push
imul
xor
repnz
mov
cmp
jo
mov
and
mov
xchg
js
jnp
push
inc
or
out
inc
rcrl
enter
gs
scas
sbb
pop
stos
je
mov
jle
mov
aas
lcall
das
int3
xchg
addb
cmp
dec
mov
into
add
cmpl
adc
cmp
mov
xor
repz
add
xor
mov
jle
cli
stc
sub
popf
outsb
jp
test
push
faddl
cmpsb
les
xor
sub
je
nop
in
stc
call
jo
das
sub
dec
daa
mov
jnp
push
push
clc
pinsrw
icebp
lcall
dec
sub
jge
cs
mov
shr
inc
aad
pop
into
shll
stc
imul
pusha
mov
in
dec
js
cmp
mov
scas
cmp
or
sub
mov
push
mov
lret
js
loop
out
dec
icebp
pushf
pop
fidivrs
cmp
push
xchg
sub
jmp
mov
push
test
jge
and
xchg
and
sti
mov
ds
xchg
and
sbb
push
or
pusha
add
lret
jne
xchg
push
je
dec
popa
cmpsb
jae
pop
loop
mov
sub
xchg
test
or
sub
sbb
fidivrl
and
aam
pop
test
lds
fnstcw
pushf
xchg
test
popf
shl
leave
jle,pn
dec
mov
shlb
jne
std
lret
gs
lock
adc
dec
insl
cmpsb
or
iret
in
cmp
jo
jle
push
cmc
adc
hlt
test
cmc
popf
inc
push
adc
cmpsb
fisubrs
cmp
jno
icebp
arpl
push
inc
ja
andb
std
mov
mov
movsb
push
cwtl
cmp
jno
fmuls
negb
fstl
or
mov
repnz
inc
push
cmp
mov
xlat
stos
push
testl
sarb
sbb
dec
pinsrw
fwait
popf
xor
mov
sub
add
loopne
add
pusha
sbb
js
xor
xchg
clc
dec
jge
inc
jnp
pop
into
xor
mov
inc
xchg
jb
insl
iret
bswap
js
enter
sub
sub
shlb
aam
enter
jle
cmp
or
push
int
push
pop
pop
pusha
out
aas
outsb
and
out
in
aam
jl
sub
mov
fs
xor
jmp
jge
lods
out
sub
in
fdivrs
jbe
leave
push
sub
adc
iret
loopne
imul
movsb
xchg
or
out
adc
add
cli
lret
popa
mov
xchg
push
int
cmp
and
mov
add
movsb
push
pop
lods
cmp
pushf
popf
cld
fadd
push
popa
outsl
enter
xchg
jp
jle
lsl
cmp
sbb
shll
adc
cmp
notl
and
lock
inc
inc
cmc
imul
cld
cli
scas
mov
jno
mov
inc
cmp
int3
loope
mov
mov
jns
addb
ficompl
inc
pushf
lods
and
insb
sahf
inc
cwtl
sbb
paddq
stos
or
lods
nop
add
or
mov
lods
lea
inc
adc
push
add
xor
popf
pop
sbb
hlt
test
cli
or
mov
ljmp
cmp
jmp
mov
pop
insb
dec
cmpsb
int
fistpl
inc
in
xlat
aas
push
cmpsb
rcr
shll
xor
dec
insl
inc
inc
xchg
dec
ss
and
jmp
dec
jne
sbb
sbb
xor
std
xchg
push
rol
ret
or
push
call
sbb
xchg
hlt
jle
lcall
push
push
into
ss
pop
and
lcall
bound
push
mov
jmp
les
mov
xchg
lods
aas
adc
insb
xchg
mov
xchg
and
aaa
lret
hlt
enter
stos
int
fcompl
or
les
bound
and
push
jbe
jae
test
dec
push
jge
xor
jae
ret
or
jo
in
mov
in
repz
xchg
or
or
bound
imul
jl
xor
leave
sub
lret
adc
call
sarl
mov
mov
cmp
lea
lcall
aad
aam
adc
sti
pop
mov
and
pop
jbe
stos
icebp
rcl
mov
in
pusha
call
inc
je
cmp
mov
pusha
popf
mov
jmp
and
xor
xchg
iret
add
inc
arpl
xchg
test
pop
stos
add
mov
xor
push
xorl
mov
outsb
test
jb
push
hlt
mov
mov
jno
fmull
push
cmp
jbe
sub
adc
notl
push
xor
jns
int3
popf
fwait
imul
arpl
sbb
daa
test
push
movsl
pop
add
push
add
and
jmp
or
xchg
or
jg
xor
mov
sub
insl
stos
les
push
cs
add
daa
add
call
jne
into
testb
sbb
int
push
pusha
mov
cmovge
push
mov
sahf
dec
fimull
mov
xchg
test
fs
orb
fdivrl
cwtl
inc
pop
mov
jae
movaps
adc
int3
test
hlt
mov
sbb
jne
dec
cwtl
mov
mov
cmpsb
pop
into
mov
stos
loope
jecxz
lret
mov
push
or
stos
and
mov
sbb
mov
push
cmp
pop
xor
cmp
xchg
mov
ret
sbb
scas
mov
pop
js
mov
int3
es
xchg
gs
enter
add
sahf
ret
sub
fs
mov
std
inc
xchg
inc
jno
push
ja
jne
sbb
movsb
inc
mov
cmp
insl
inc
mov
push
inc
loop
fwait
adc
xchg
movsl
mov
mov
std
aaa
mov
fstpt
stc
aad
call
push
pop
cmp
jb
push
jb
jns
push
popf
mov
lcall
cmp
das
out
aam
loop
sbb
popf
shl
cmc
mov
mov
inc
adc
mov
and
addr16
outsb
inc
mov
nop
cwtl
ficoms
hlt
je
adc
mov
cld
and
jno
test
pop
mov
mov
cld
je
popf
cs
sbb
nop
push
scas
shll
repnz
addr16
fstl
xor
cmpl
add
jl
stos
rorl
mov
out
xor
dec
mov
aad
sbb
repz
mov
push
std
add
lods
lcall
dec
orb
out
fcmovnu
dec
mov
lods
jg
data16
out
lods
dec
loopne
out
inc
insb
jmp
aaa
test
lods
adc
jl
loope
lret
xchg
fsubl
add
rorb
les
or
pop
add
sti
aas
fnsave
inc
cs
add
scas
das
fdivl
scas
sub
rcr
push
scas
testb
sub
bound
mov
and
rcll
add
fsubs
mov
outsl
jb
and
adc
lds
mov
fstps
jb
cmp
mov
mov
out
or
sub
push
pop
mov
xor
push
mov
push
inc
movl
lods
mov
dec
loop
cld
mov
inc
std
pop
xor
add
jnp
std
insl
jecxz
sbb
les
lods
aam
mov
push
xchg
inc
xor
xor
xchg
sub
and
in
jecxz
movsb
mov
xchg
mov
mov
or
in
pusha
cmp
adc
call
pop
hlt
and
jae
imul
lds
repz
inc
in
loope
enter
push
adc
add
call
mov
fcmovnb
iret
mov
sub
jge
push
mov
outsb
fldl
sub
sbb
dec
pop
jo
loopne
mov
lret
mov
test
repz
mov
mov
loopne
test
adc
cmp
jmp
popf
xchg
dec
sarl
pop
push
pop
xchg
sub
leave
add
lret
sbb
pop
dec
push
mov
jnp
dec
shll
movsb
enter
cmpsl
fcmovu
adc
loope
iret
aas
cld
jl
jns
jno
aas
ror
nop
insl
and
int
xor
ret
arpl
push
ret
fldcw
pop
in
shll
lea
inc
cli
lock
ffree
cs
cli
out
outsb
and
push
push
pop
or
inc
inc
add
mov
je
test
sub
test
or
cmp
addr16
sahf
pop
jl
repnz
lea
pop
out
push
call
jp
pop
stos
sub
outsb
adc
pop
xor
cmp
mov
inc
sub
into
aaa
adc
insl
mov
fdivrs
sub
jnp
out
lea
ds
cmp
xchg
mov
cmp
mov
mov
sbb
pop
es
pop
mov
mov
les
pop
push
add
jno
insb
out
jmp
es
addb
adc
or
inc
mov
mov
inc
pusha
add
lds
mov
in
pop
hlt
loop
inc
xlat
lret
daa
and
xchg
inc
cmp
mov
inc
lock
in
mov
fs
lret
sbbl
jbe
jae
roll
add
add
pop
jecxz
in
or
inc
fcoms
in
pop
sub
adc
and
divb
pop
daa
stos
mov
adc
arpl
or
push
xchg
add
lea
test
addr16
fbstp
in
dec
movsb
cwtl
and
and
cli
push
add
push
adc
rcl
insl
xor
xchg
lahf
cli
icebp
mov
in
data16
jne
xorb
adc
lcall
out
mov
cmp
cs
sti
iret
je
and
outsl
inc
sub
clc
fbld
adc
ds
sub
lcall
mov
aad
mov
mov
test
jg
mov
jae
mov
mov
stos
sub
adc
push
scas
aam
fnstcw
dec
lea
incl
sarl
mov
fmull
sub
js
inc
pushf
cwtl
cmp
push
or
sbb
or
imul
popl
cmp
mov
mov
cmp
xchg
mov
outsl
in
aad
rcll
adc
nop
sahf
mov
lcall
inc
and
add
dec
xor
aaa
pop
je
fiaddl
xchg
aaa
mov
cld
adc
mov
jmp
bound
cmp
or
adc
and
cld
push
leave
push
sbb
xor
out
mov
sub
popf
andb
imul
popf
outsl
js
xor
shl
stos
xchg
je
lods
mov
movsb
jns
imul
imul
sub
sub
and
outsb
adc
nop
les
pop
int
nop
dec
ret
mov
repz
xchg
fisttpll
subl
xor
or
sbb
movl
cld
mov
out
jmp
jae
sbb
fistps
dec
inc
xchg
andl
in
and
cmc
mov
rolb
lcall
popa
mov
mov
dec
and
hlt
inc
adc
das
sub
shr
push
cli
lods
pop
dec
sarl
push
jne
mov
hlt
mov
sbb
xor
in
leave
sbb
arpl
mov
leave
xor
xchg
arpl
push
arpl
aas
in
jg
adc
out
or
sbb
ficoms
bound
add
pop
jmp
outsl
stos
popf
push
daa
mov
jle
je
mov
push
push
sbb
and
sub
jl
mov
and
nop
mov
insb
lret
popa
or
cmp
std
sbb
pop
or
sti
add
sbb
in
loope
shlb
fwait
push
mov
out
mov
mov
inc
cmp
jmp
xor
repnz
cmp
fld
adc
and
sbb
test
jo
fsubs
dec
push
loop
pushl
out
pop
ss
orb
fs
loopne
outsb
jmp
popf
mov
mov
xchg
xor
xorl
jge
or
xchg
test
jmp
dec
adc
and
daa
rcr
sub
les
add
fs
sbb
mov
mov
popf
gs
gs
mov
xor
and
fisubrs
int
imul
xchg
push
jno
jecxz
sbb
lret
push
shlb
mov
stos
pop
inc
out
pop
push
lahf
push
mov
push
pop
jmp
jmp
outsb
outsb
mov
jae
sub
pop
push
int3
cmp
repz
mov
cmc
and
sahf
ret
and
aaa
test
movsb
jbe
adc
ret
or
jp
mov
sbb
push
dec
adc
pop
daa
movsb
leave
daa
popa
pop
mov
sub
sub
cs
aam
insl
in
stos
mov
adc
push
fiaddl
nop
js
xorl
xchg
je
das
dec
cld
repz
adc
out
xchg
push
ljmp
push
jl
jne
add
mov
xchg
pushf
sbb
mov
xor
lcall
outsb
mov
inc
into
jno
jmp
rcrb
mov
dec
push
inc
vmaxps
inc
pop
psubq
mov
in
out
adc
fsubs
cmpsl
and
xlat
mov
fcomp
rorl
dec
ljmp
xlat
push
dec
mov
inc
add
pop
sub
imul
xchg
jp
gs
iret
jg
lea
cmpsl
out
push
sub
fwait
push
push
lock
lock
cmp
add
lahf
jae
xchg
jo
lods
lock
or
push
filds
mov
insb
xchg
jnp
mov
ret
pop
into
pop
cltd
push
mov
repnz
cmp
xchg
inc
inc
sub
dec
dec
sub
mov
mov
fbld
jp
fidivl
lahf
int3
lea
xchg
adc
test
push
mov
lcall
cld
es
or
insb
lcall
add
jge
xchg
dec
mov
cld
lcall
fildll
xchg
sub
pop
out
mov
aaa
sub
xchg
fbstp
jb
cmp
dec
xchg
pop
test
leave
push
or
loope
loope
lret
dec
add
scas
mov
stc
mov
sbb
pop
andb
xor
daa
and
aaa
pop
daa
enter
lret
outsb
out
xorb
jbe
loop
dec
mov
or
std
mov
nop
in
cli
lcall
xchg
decl
xorb
cld
pop
repnz
addr16
repz
ja
dec
call
clc
loope
pop
sbb
movsl
pop
inc
mov
sbb
fnstcw
jecxz
sbb
fcomp
xchg
or
rorb
in
loop
jns
int
ljmp
mov
daa
mov
aad
push
fcmovbe
and
mov
mov
adc
pop
loopne
inc
xor
xor
les
shl
fadds
scas
adc
mov
mov
fnstcw
test
aas
jp
jg
xchg
or
sub
or
aam
hlt
pop
sarb
pusha
nop
add
test
lds
sbb
repz
dec
icebp
mov
pop
lods
fucomp
sub
ljmp
nop
fsubs
push
xor
push
push
jle
add
js
lock
enter
xor
adc
jb
out
adc
test
dec
jb,pt
sti
add
xchg
jecxz
mov
movsl
pushf
shlb
and
sub
xchg
add
stos
inc
js
cmpsl
call
or
pusha
ljmp
or
push
mov
lret
cmp
cmp
out
in
push
mov
dec
scas
sub
cmp
dec
pop
fmull
jle
je
cmp
push
loopne
rclb
sub
out
xrelease
clc
sbb
popf
sti
mov
add
fnstsw
inc
or
fisubrl
leave
sbb
mov
ja
adc
add
in
sub
outsl
jmp
xor
fcoml
in
dec
inc
das
nop
adc
sahf
push
fstps
add
push
scas
adc
stos
xor
and
jmp
scas
mov
outsb
scas
repz
frstor
mov
xchg
and
aaa
fldcw
xchg
int
pop
stos
inc
fldt
outsl
cld
inc
jo
or
mov
int3
imul
cmp
aaa
push
sub
jno
dec
push
rcl
push
pop
adc
shlb
incb
repz
cmp
gs
gs
sbb
std
out
xchg
int3
es
xor
ljmp
add
imul
mov
lahf
stos
mov
mov
scas
mov
das
divb
inc
arpl
lcall
insb
push
cmc
xor
repz
std
sti
dec
repnz
jae
lret
shlb
or
cmc
push
xchg
divl
bound
cmpsb
out
in
jmp
cmp
scas
pop
adc
add
dec
rorl
cmp
sarb
cmp
mov
loope
dec
and
lods
fdivp
rcll
fs
dec
xchg
add
pushf
in
lock
push
pop
pushf
lock
in
cmp
xor
mov
dec
jnp
ret
mov
adc
repnz
rcl
js
cmp
push
xlat
jg
push
cmpsl
sti
push
cmp
enter
mov
jg
sbb
stos
test
test
mov
jne
mov
sbb
dec
or
cli
pop
mov
sbb
repnz
dec
icebp
adc
push
ss
fcoml
push
push
lock
sbb
stc
xorb
int3
pop
inc
ds
and
sti
sub
je
in
data16
je
pop
xor
jno
rcr
pop
or
out
shll
jle
das
or
out
and
mov
mov
xchg
shlb
mov
jno
sbb
test
xor
add
aas
inc
xchg
mov
insb
ret
jmp
cs
push
lds
lods
lret
or
pop
pop
aas
push
leave
jns
xchg
mov
add
jae
stos
jno
shrl
sbb
movsb
push
ds
xchg
jg
cld
stos
rorb
mov
sti
pop
ljmpw
imul
data16
js
and
and
adc
ffree
mov
adc
sbb
clc
inc
clc
idivl
mov
daa
sbbb
cs
fwait
lcall
stos
loopne
movsb
push
imul
mov
adc
xchg
dec
mov
xchg
std
call
lret
sbb
rcr
add
mov
inc
mov
push
xor
dec
leave
xchg
cs
loopne
clc
cmpsb
cmpsb
insl
or
jo
push
lods
ja
xor
pop
mov
inc
stos
movsb
les
cmp
sub
cld
push
outsl
gs
xchg
popa
mov
adc
outsb
adc
or
xor
push
or
dec
add
cmpsb
fstpl
mov
scas
in
xchg
mov
push
mov
push
insl
dec
jle
inc
push
lret
xor
test
imul
add
aas
ret
adc
inc
jle
bnd
mov
push
cmpsl
enter
fsubrs
xchg
test
imul
mov
std
xchg
sahf
add
es
fucomp
cmp
xchg
add
loope
cmp
or
movsb
fldenv
out
jl
jle
lcall
mov
rcrb
jmp
aas
mov
arpl
fimuls
iret
jg
insl
xchg
pop
jmp
pop
xor
pop
dec
pusha
sti
stos
jne
jnp
scas
xchg
dec
out
push
jne
lret
fisubrl
sub
or
add
and
mov
sub
xor
lret
js,pn
cmp
fsubrp
jecxz
add
stos
sub
xchg
or
sub
jbe
mov
inc
shl
test
xchg
cmpsl
mov
pop
lods
inc
testb
popf
std
incl
sti
jmp
inc
inc
sar
cs
adcl
jecxz
out
pop
cmp
outsb
mov
insb
adc
mov
aaa
sub
sub
fidivrl
sub
mov
stos
nop
aad
in
adc
sub
jecxz
notb
and
out
ret
sti
push
jle
je
adc
sbbl
and
scas
fs
in
ss
push
dec
sub
test
shr
mov
pop
push
inc
xchg
sbb
or
in
dec
pop
inc
cli
in
pop
js
adc
fisttpll
jne
mov
mov
sub
xchg
stos
in
test
lret
mov
push
xorb
push
sahf
sbb
jae
pushf
aas
fisubl
add
pop
clc
cmp
jbe
adc
fs
test
repz
push
fcoms
or
ljmp
xlat
aad
dec
in
push
mov
fdivrl
pusha
subb
xchg
xlat
sbb
les
in
sbb
mov
dec
adc
jg
loopne
test
sbb
or
notb
gs
ss
or
lret
mov
mov
adc
jle
adc
cmpsb
lret
push
add
mov
pop
cli
cmp
sbb
test
scas
orb
sahf
adc
xorl
fsubr
in
call
jl
jb
scas
sbbl
rorl
jb
int
in
xchg
cwtl
push
shrb
xchg
leave
or
cmp
mov
mov
imul
inc
pop
clc
cltd
jmp
pushf
sahf
push
or
xlat
das
das
mov
mov
add
in
mov
in
out
pop
push
dec
inc
and
mov
mov
roll
shll
and
jae
sti
ss
mov
mov
shll
stos
jae
iret
cmc
movaps
xchg
add
sub
inc
insl
pop
sub
jnp
loop
xchg
cltd
sub
push
xor
leave
nop
sbb
xor
addr16
sbb
cmpsb
scas
lock
pop
pop
mov
nop
out
jns
loop
jecxz
nop
and
xlat
add
das
stc
push
mov
jmp
shrb
mov
addl
jb
xlat
out
dec
inc
sub
scas
ss
cli
fwait
adc
gs
add
in
in
scas
fadds
cmp
lcall
jmp
insl
adc
xor
mov
mov
adc
fadd
jmp
or
ffree
mov
push
cmc
leave
or
mov
arpl
repnz
jge
cmp
aaa
loope
xchg
iret
xor
mov
push
lret
aad
js
inc
mov
xchg
mov
cmp
pop
mov
in
data16
fbstp
fmuls
dec
adc
jnp
xor
into
adc
dec
mov
fwait
in
adc
pop
jle
iretw
mov
jae
pop
add
ret
pop
fidivrl
pop
push
psraw
inc
mov
jp
stos
imul
cmp
inc
sbb
mov
scas
push
insl
xlat
lcall
or
push
inc
out
or
xor
xchg
outsb
add
pop
dec
stos
and
or
adc
jp
pushf
jecxz
cmp
ret
or
sbb
push
xchg
es
ds
xchg
stos
daa
mov
mov
push
mov
ror
push
add
xchg
mov
data16
int3
mov
aam
std
xor
mov
inc
add
push
push
push
out
lahf
and
adc
and
xor
mov
sti
inc
mov
dec
add
inc
notb
outsb
shl
mov
mov
daa
mov
mov
push
cld
cmc
dec
dec
mov
out
cmc
add
xorb
xchg
add
in
pop
sbb
repnz
mov
adc
ss
mov
std
or
push
add
mov
cltd
outsl
je
jl
or
cwtl
fidivs
inc
jle
leave
pop
push
push
in
arpl
popl
cmp
pop
mov
jle
jge
mov
ret
add
adc
in
dec
lahf
xchg
test
call
stos
push
push
notl
jmp
mov
rcll
add
mov
adc
xor
sbb
mov
repnz
mov
enter
dec
outsl
bound
xor
adc
out
cli
data16
in
mov
mov
daa
fs
dec
loop
movsl
xchg
adc
mov
push
fistpll
in
mov
cwtl
push
mov
mov
xor
std
mov
sub
cmp
xchg
scas
xchg
inc
xor
push
sub
adc
push
int
cmp
mov
fisttpl
or
repz
pop
int
cmp
mulb
sub
add
or
pop
sbb
int3
cmp
push
push
subl
aas
setge
lock
push
cltd
aas
sbb
ret
in
daa
cmpsl
scas
into
aas
out
inc
mov
and
jo
inc
shl
imul
cmc
lods
adc
cli
jmp
leave
or
lahf
addr16
mov
scas
mov
inc
inc
jle
test
hlt
push
rorl
add
lds
xchg
sbbb
aad
mov
movsl
add
pop
call
data16
loop
sahf
push
into
and
add
cmpb
mov
xchg
cmp
ja
sbb
imul
pop
in
lds
inc
sti
stc
pusha
jne
cbtw
inc
adc
inc
adc
pop
dec
jo
jno
adc
div
ss
stos
mov
pop
push
mov
pop
loope
and
xor
addr16
frstor
repz
dec
mov
mov
sub
ja
and
mov
test
int3
jecxz
xor
dec
pop
clc
or
jns
andl
gs
int
mov
in
mov
dec
fs
sbb
or
jbe
sahf
mov
loopne
push
pop
add
jno
lcall
mov
je
ficompl
fistpl
pop
loopne
push
jle
xlat
cltd
imul
adc
sbb
mov
push
or
push
and
cmp
mov
pop
jle
cmp
stc
xchg
fisttps
xor
push
cmp
sub
add
jecxz
into
pop
and
aaa
jnp
movsl
push
jl
es
adc
loope
mov
sbb
mov
lods
adc
aam
insb
and
push
popa
or
pop
lock
pop
inc
mov
test
stc
ror
faddl
cmpsw
les
pop
jo
push
sub
out
stos
jmp
pop
jge
shrb
aam
pop
jne
push
stc
jne
mov
jne
addr16
mov
lock
mov
lea
sub
scas
pop
mov
or
mov
repz
pop
add
mov
sar
test
lods
insl
sti
mov
stos
lret
dec
ljmp
or
fstpl
xchg
dec
jmp
je
int
xor
rcrb
cmp
push
cmp
mul
dec
pop
dec
scas
sub
int3
push
js
mov
or
mov
stos
andb
lods
sub
cmp
push
popf
cmpsl
insb
ret
mov
mov
xor
lods
test
or
jae
iret
push
mov
add
gs
sbb
xchg
insb
xor
lahf
mov
mov
jnp
cwtl
stos
jmp
dec
sub
ljmp
xchg
add
xchg
insb
fs
out
out
pop
das
lds
arpl
ds
mov
adc
and
in
in
pcmpgtw
mov
gs
aas
or
add
ds
fucomp
jmp
inc
std
out
stos
push
mov
and
sti
fdivr
into
and
pop
cmp
and
pushf
loop
adc
mov
aam
ror
mov
adc
ret
inc
les
shr
jmp
rcrl
icebp
push
arpl
je
push
icebp
add
pop
imul
sub
cltd
clc
sahf
adc
faddl
mov
sbb
mov
mov
iret
cmpsb
les
std
stos
ret
cmc
sahf
jns
jne
aas
inc
push
mov
pushf
fsub
rol
xchg
sub
and
mov
push
jae
cli
mov
into
es
sti
cmp
dec
cmp
orl
imul
bsr
mov
pop
sbb
bound
adc
fucomi
insb
xchg
fadds
dec
ljmp
mov
mov
pop
mov
cli
xchg
pop
loop
ret
push
xchg
push
loop
adc
insb
xchg
ret
sarb
movsl
cli
pusha
mov
xchg
stos
cmp
sub
or
pop
lcall
push
fidivrs
cmpsb
mov
rolb
icebp
int
ds
pop
inc
es
xchg
stc
inc
add
imul
xor
aaa
ja
test
xor
cmpsb
loopne
fidivl
ja
shlb
push
xchg
adc
sub
or
push
lods
add
xor
and
es
mov
cmpsl
dec
ds
pop
xchg
fdiv
push
xchg
sbb
pusha
jnp
cmp
add
inc
mov
inc
push
mov
dec
sub
mov
dec
pop
sub
adc
jne
das
lock
sti
fs
or
xor
jo
push
cmpsl
cli
not
gs
popf
sbb
jl
int3
cmp
mov
ss
in
nop
loopne
cmpsl
aam
sub
xor
dec
xchg
nop
jnp
push
int
mov
pushf
fcompl
pushf
sahf
hlt
or
jecxz
clc
add
and
dec
inc
stos
pushf
inc
adc
repnz
dec
mov
mov
push
shlb
lods
test
pop
enter
lock
lods
loop
inc
sbb
pop
outsl
std
sarb
movsb
repnz
mov
mov
inc
mov
push
add
scas
xchg
outsb
outsb
ljmp
test
pushf
xchg
mov
ret
jg
std
dec
mull
push
test
pop
inc
mov
push
cmc
das
and
cmp
adc
shrb
add
pop
ret
dec
clc
cmpsl
pop
push
fs
xor
jge
sbb
ficomps
loope
imul
and
je
and
test
popa
sbbb
js
loope
mov
add
xchg
jns
addr16
sbb
push
pop
inc
movsl
xchg
jbe
popl
sub
mov
push
les
orb
pop
idivl
mov
xor
mov
pop
decb
movsb
dec
mov
insb
out
ret
clc
in
xchg
inc
shl
pop
jo
and
inc
and
and
call
cmp
push
mov
sub
and
ret
insb
imul
in
lcall
inc
dec
in
arpl
cmp
push
sub
xor
inc
call
lods
cwtl
lock
bound
mov
xor
das
lds
mov
enter
pop
cwtl
dec
pop
push
sub
xchg
push
mov
adc
shrb
dec
mov
aam
jbe
inc
mov
scas
push
xor
filds
inc
mov
repz
xchg
hlt
lock
lea
cli
out
or
sbbl
ja
out
jp
jo
jno
inc
gs
stc
std
mov
das
stc
xchg
pop
cmpsl
inc
mov
mov
shrl
sahf
btr
call
shrb
or
stc
jecxz
xchg
pop
rcll
ret
lcall
jbe
mov
int
dec
pop
add
out
stc
leave
jb
fistps
int3
pusha
push
xchg
fistpll
stos
and
lds
fwait
stc
mov
out
push
lock
cmp
imul
lret
fcomip
sbb
dec
pop
mov
inc
cs
or
add
lahf
mov
xor
cmp
icebp
or
and
jge
dec
mov
pop
inc
imul
sbb
loopne
ds
or
pop
xor
jae
cmpsb
jo
mov
lahf
add
jl
enter
and
jle
mov
fistl
sub
sahf
or
popf
push
xchg
sub
pop
inc
cmc
jg
push
mov
mov
movsl
push
jb
inc
mov
int
fnstenv
out
iret
fs
lock
mov
shll
addr16
jo
adc
push
or
stos
sub
aam
popf
fwait
jecxz
pop
nop
add
iret
pop
sbb
inc
jae
xchg
pop
clc
sti
inc
mov
or
inc
loop
adc
pop
ljmp
lret
dec
and
sbb
xor
push
jno
daa
mov
pop
lock
test
test
push
sbb
mov
hlt
and
es
pop
mov
test
shl
jns
fidivrs
ret
pusha
mov
mov
adc
daa
sbb
jg
daa
push
scas
dec
sbb
pop
pop
xorl
adc
enter
test
arpl
popf
xchg
call
add
mov
inc
push
pop
daa
ret
and
dec
rcll
xchg
push
insb
popf
and
popf
sbb
jl
mov
jmp
inc
clc
or
hlt
sbb
sub
xchg
add
enter
jmp
sub
jb
dec
lods
daa
enter
adc
test
test
bound
cmp
and
out
inc
lods
mov
or
jo
das
mov
je
ret
xchg
xor
dec
jbe
fldcw
scas
jne
lods
lods
sbb
adc
pop
sbb
sub
out
hlt
xchg
or
xchg
mov
aam
in
add
loope
push
sub
pop
mov
sbbb
jno
loope
std
adc
mov
js
push
in
mov
cmp
shrb
popf
subl
lea
sahf
mov
out
dec
dec
or
pop
mov
push
and
test
pop
jae
fwait
inc
adc
sahf
cmp
or
out
shrl
dec
imul
mov
push
sbb
js
jmp
jge
mov
inc
add
scas
test
inc
shll
push
push
mov
jecxz
lret
xor
add
jecxz
inc
and
dec
fsts
lds
ljmp
orl
dec
sbb
cmpb
sub
int3
xchg
adc
or
cld
filds
or
shll
mov
cwtl
in
testb
lahf
xchg
outsl
outsb
pop
push
imul
inc
shl
sbb
sbb
aad
push
pushf
add
jne
jo
jo
pop
vmovhps
pop
hlt
fsubr
ret
jns
imul
mov
dec
in
add
cmp
inc
inc
clc
xor
mov
movsl
cs
stc
out
ljmp
mulb
inc
and
pop
loope
repz
orb
out
xor
dec
aas
mov
sub
in
cmpsb
cmp
xor
xchg
mov
imul
inc
add
mov
scas
in
pop
lods
movsl
add
jnp
in
and
mov
nop
fsubrl
es
push
xchg
out
xchg
loop
xchg
inc
jnp,pt
aad
movsl
and
cmp
fsubrl
jo
or
mov
add
ret
aad
jg
xlat
es
dec
jle
out
cwtl
hlt
inc
push
push
cmc
orb
add
kortestw
scas
or
rolb
cmpsb
out
xchg
or
xor
into
mov
xor
mov
jl
sti
pop
lret
cmc
push
ljmp
sbb
inc
insl
or
loope
lret
mov
aam
mov
fnstenv
inc
loop
jmp
push
jmp
pushf
dec
adc
idiv
in
insl
fists
jno
sahf
movsb
dec
xchg
push
inc
cmp
pop
dec
pop
pop
mov
or
cmp
xor
lret
sbb
testb
or
out
nop
das
jb
mov
mov
jge
cmp
leave
popf
adc
adc
in
cld
jo
into
lahf
icebp
xor
dec
inc
dec
jnp
jne
mov
pop
add
cmp
add
xor
sbb
push
int
cmpb
sub
fistpl
mov
pusha
ret
add
dec
mov
jl
roll
push
inc
sub
call
in
jmp
push
into
add
xchg
cltd
dec
jle
repnz
cld
adc
test
dec
in
mov
pop
jae
sub
ds
aas
in
push
inc
lcall
outsl
sar
adc
inc
and
or
je
std
lret
cmp
sub
or
loop
jle
push
bound
push
or
call
add
testl
divb
notl
fldcw
ret
push
orl
dec
push
repnz
inc
pushf
add
mov
lods
sti
mov
aas
add
sbb
dec
cmc
aaa
int
inc
pop
movsl
mov
mov
xor
sahf
fisubrs
jbe
sub
aam
cmp
push
push
cltd
dec
add
mov
gs
xor
les
xchg
sbb
sub
jg
mov
icebp
std
int3
das
int3
mov
mov
mov
add
out
jae
mov
cltd
xchg
mov
push
nop
inc
das
mov
mov
mov
out
pop
in
ret
mov
jmp
in
xor
pop
push
mov
lahf
cs
int3
subb
dec
push
xor
in
divb
mov
xchg
push
int3
test
sbb
jns
adc
das
out
adcb
int3
andl
mov
fdiv
mov
jnp
lahf
in
loope
fdivl
lcall
imul
int3
xor
add
lret
cltd
dec
inc
xchg
mov
repnz
int
sbb
and
add
mov
ret
rcr
lods
jo
dec
loope
sti
int
pop
xor
lds
or
fnstcw
sub
dec
pop
and
push
adc
or
mov
je
mov
lods
mov
jl
cmp
mov
inc
dec
fildl
mov
cmp
adc
fbld
jp
inc
xor
aad
mov
aaa
pop
add
outsb
jle
xchg
lock
dec
push
scas
xor
or
pusha
sahf
mov
nop
loope
and
fidivl
or
fnsave
and
jno
xor
mov
or
das
test
mov
or
out
lahf
imul
pop
mov
cmp
jmp
add
in
jle
into
xor
jno
test
je
xchg
cmp
adcl
sub
push
data16
mov
dec
repz
subl
ret
add
add
cmp
fdivl
hlt
mov
adc
cmpsl
out
int3
cmpb
fisubl
adc
xchg
adc
es
dec
push
pop
push
aam
pop
movsl
pop
out
jmp
cmpsl
mov
outsl
idivl
mov
cmpsl
xor
or
pop
mov
pop
cmp
xchg
mov
insb
jnp
imul
jecxz
test
movsb
popa
repnz
sahf
ficompl
push
cmp
jecxz
out
xor
mov
xor
or
push
mov
out
push
xchg
inc
ret
mov
cmpsl
out
jno
cld
jecxz
xchg
clc
insb
mov
cld
outsl
fdivl
sti
imul
sarl
nop
les
movsl
or
clc
dec
lcall
std
cmp
gs
dec
or
mov
dec
imul
cmp
sbb
push
mov
fs
out
sub
dec
data16
test
push
in
xor
sbbb
pop
imul
idivl
pop
ret
sub
push
push
push
adc
nop
add
mov
inc
inc
pop
and
enter
pop
pusha
mov
xchg
mov
and
scas
lret
jl
push
hlt
popf
dec
cld
pop
dec
dec
sti
and
jge
imul
and
add
xor
xor
in
ss
loopne
or
loopne
jo
test
push
test
daa
movsl
aas
jne
int
fildl
jp
sub
jmp
inc
mov
add
outsb
push
out
aad
shll
mov
jno
add
mov
xor
jo
mov
test
xchg
andl
sbb
add
jb
and
or
sahf
mov
pop
scas
and
push
dec
sbb
add
orl
out
icebp
iret
andb
adc
lds
fcomp
addr16
sbb
or
in
rcl
adc
cmpsl
outsb
pop
mov
subb
xchg
jae
stos
inc
inc
lods
mov
das
lods
aaa
enter
scas
push
icebp
incl
aad
loop
pop
cmpsb
je
add
icebp
mov
mov
inc
cmp
push
push
cmp
sub
jg
jecxz
inc
sti
shll
mov
fwait
cs
cmp
xchg
xchg
cmc
mov
xor
orl
add
lods
jecxz
sar
or
lods
pop
mov
push
mov
outsb
icebp
adc
popf
and
call
iret
ret
rorl
mov
pop
test
dec
xchg
inc
mov
sub
addr16
adc
cmpsb
fwait
subb
pop
dec
xchg
test
mov
gs
dec
push
aas
or
dec
dec
cmp
outsb
test
int3
cld
hlt
mov
xlat
adc
add
ret
xor
imul
push
lods
pusha
ret
fisubs
sbb
repz
pop
adc
sub
sbb
sbb
cmpl
std
lret
or
adc
aas
sub
cld
ret
lds
scas
add
clc
inc
and
mov
popa
sti
dec
mov
imul
in
sbbb
xchg
and
pop
scas
mov
jl
jmp
nop
sub
push
pop
mov
in
iret
lock
icebp
adc
push
inc
neg
ret
add
sub
add
in
mov
scas
mov
mov
sub
mov
into
cwtl
push
enter
mov
cmpl
mov
xchg
js
mov
jle
mov
and
mov
js
and
pop
lea
jno
add
rolb
mov
adc
sbb
adc
jbe
lea
mov
jmp
add
sbb
loop
cli
sti
mov
jns
loope
mov
jno
inc
aad
add
outsw
fwait
jo
or
lahf
sbb
ljmp
push
pop
loop
ficompl
push
or
and
pop
fcompl
cli
shrl
pop
xor
sbb
pusha
xor
xor
outsb
icebp
int
add
push
scas
pop
loopne
dec
bound
jecxz
inc
and
jb
adc
fidivrl
lret
fcoms
xchg
or
dec
sub
arpl
mov
ficomps
jo
and
mov
mov
insl
pop
mov
mov
xchg
xchg
or
mov
mov
outsl
inc
scas
push
int3
inc
cmp
test
fsubl
leave
shr
xor
jnp
cmp
out
xor
inc
pop
mov
dec
sbb
adc
jge
dec
rorl
lret
push
xchg
loopne
lcall
xor
xchg
mov
sbb
lds
add
test
scas
xchg
int3
xchg
and
daa
mov
xchg
out
ja
fstl
add
imul
mov
or
mov
fwait
xor
sub
lcall
into
lss
jae
stc
inc
push
jno
jne
sbb
add
sbbb
movsb
pop
or
in
stos
cmpsb
push
jp
mov
jae
push
mov
xor
jmp
xlat
iret
icebp
cmpsl
cmpsl
sub
xor
or
insb
jb
jp
xchg
pop
cmp
rclb
adc
dec
jp
sub
jl
rorb
dec
pop
mov
and
lret
mov
jno
subl
rol
stc
lcall
daa
out
in
ss
jb
xchg
push
sbb
cmp
xchg
out
cli
or
adc
jp
sub
sbb
cmp
loop
lahf
lcall
xchg
jno
shrb
mov
rcll
mov
in
nop
outsb
sahf
xlat
stos
add
push
fcompp
insl
mov
stos
je
inc
inc
mov
aaa
dec
inc
sub
loop
cmp
xor
int
pop
mov
or
roll
push
fcoms
jns
cmp
xor
stc
popa
jo
adc
scas
jae
sub
call
lret
dec
jae
leave
hlt
inc
jle
scas
xor
push
ljmp
pop
cld
outsb
pusha
lods
jns
lods
bound
push
call
dec
add
movsl
pusha
adc
rorl
or
jne
xchg
and
and
sbb
add
push
out
inc
pop
fnstenv
insl
or
and
pop
popa
pop
adc
outsb
inc
jne
mov
add
enter
mov
mov
add
std
fsubl
pop
lcall
out
pop
stos
mov
adc
cmp
faddl
call
pop
inc
xor
jge
adc
cmp
pop
in
dec
adc
push
xor
mov
cli
or
lret
pusha
imul
popf
ret
xchg
repnz
sub
movb
jns
add
inc
js
test
lods
cmpsl
and
imulb
inc
xchg
imul
and
pop
pop
mov
leave
dec
xorb
pop
adc
lret
sbb
and
push
adc
sar
in
mov
mov
test
mov
lret
pusha
push
mov
test
mov
mov
sub
ds
stos
aaa
das
jg
mov
add
scas
dec
sub
in
and
cltd
push
adc
subl
cmp
imul
jmp
mov
push
or
sub
mov
cli
scas
mov
ret
fwait
mov
add
jno
cmp
add
dec
or
cld
ljmp
add
cltd
inc
jo
or
inc
test
repz
in
pop
inc
cmp
inc
lcall
sbb
xor
lret
imulb
dec
seto
xchg
ljmp
mov
inc
mov
sub
out
push
aad
xor
sbb
insl
xchg
ret
dec
ret
or
sbb
cli
outsl
insb
cmp
hlt
pop
push
out
jnp
adcl
xchg
jp
insl
pop
mov
or
pop
xchg
sub
outsb
xchg
mov
mov
mov
pop
je
fdivr
xor
sahf
cmp
scas
mov
sbb
pop
aaa
fcomps
and
push
xchg
in
loop
out
jg
test
enter
bound
xchg
mov
dec
iret
mov
xchg
mov
xchg
loope
adc
adc
fwait
lret
cmpsb
inc
nop
xchg
mov
cmpl
cmp
ljmp
orb
adc
sub
in
pop
pop
cmovno
stos
jnp
vmread
negl
mov
sub
mov
or
push
inc
arpl
pop
push
push
fnstsw
cmp
jmp
in
xchg
dec
or
adc
dec
push
sarb
aaa
lea
lret
add
add
enter
sahf
inc
loope
xor
dec
mov
and
dec
mov
mov
cld
rorl
cld
dec
das
inc
sahf
lods
fs
and
push
lret
mov
push
test
pop
jno
add
dec
es
pop
cltd
xor
repnz
dec
jb
sar
xor
data16
inc
ds
js
sbb
mov
mov
xchg
sub
sbb
ja
jae
iret
inc
imul
adc
lock
sub
inc
sub
mov
scas
push
hlt
push
addr16
jle
sti
addr16
mull
in
and
inc
mov
dec
movsb
icebp
cmp
or
sbb
mov
aas
sbb
push
adc
gs
addr16
je
testb
mov
out
mov
inc
jg
ror
push
loop
pop
out
pop
xchg
jbe
cwtl
jg
inc
push
out
int3
jns
rcl
pop
add
sti
xchg
xor
cltd
push
lock
outsl
pop
cli
xchg
mov
shl
out
dec
cltd
mov
adc
fistpll
and
jg
lods
push
in
jmp
cmp
test
popf
or
sub
mov
insb
je
testl
ficoms
jo
or
ror
in
loop
leave
jae
repz
and
mov
add
jp
xor
xchg
xchg
and
or
fidivrs
xchg
adc
lods
or
push
mov
inc
add
push
testb
xchg
xor
mov
test
inc
jmp
dec
inc
or
shrl
test
inc
and
test
inc
adc
sub
inc
fbld
enter
movsb
pop
les
jmp
jg
inc
jb
mov
les
jae
mov
push
inc
mov
mov
or
bound
mov
fucomip
mov
data16
rol
insb
xor
pushl
ja
xor
out
dec
iret
or
gs
jb
cmpsb
insb
or
add
sub
fstpl
shl
and
js
es
inc
mov
add
add
aam
lcall
call
mov
cmc
cld
sbb
movsb
lds
adc
or
aam
hlt
jnp
adc
mov
push
dec
out
jo
mov
ret
sub
mov
adc
mov
adc
adc
mov
mov
sub
and
mov
jae
jmp
dec
ds
aam
out
lods
sbb
rcrl
add
ds
sahf
jg
loop
neg
push
insl
out
nop
cld
lds
rorl
cmp
jo
pusha
inc
sub
data16
std
out
add
sub
mov
out
xchg
pop
lret
adc
dec
inc
dec
movl
into
sub
xchg
div
pop
pop
and
lahf
cmp
dec
adc
aas
ja
nop
mov
mov
sub
ret
test
aaa
aad
aaa
pop
push
pushf
sbb
push
fsubrs
pushf
test
dec
stc
mov
push
push
fists
insl
or
mov
sbb
mov
mov
xchg
fimull
bound
or
imul
push
push
insb
or
pop
hlt
push
sbb
outsl
add
sub
mov
pop
lds
mov
jnp
lret
mov
orb
mov
lret
adc
test
push
loope
mov
fmul
fbld
in
test
sub
std
call
push
test
jo
cmp
add
data16
xor
fidivl
or
pop
mov
outsb
mov
and
cmpsl
xor
add
cmp
push
ja
repz
pusha
aad
jnp
and
mov
cmp
ret
sbb
test
mov
test
ficomps
xchg
sub
leave
jne
push
push
push
gs
cmc
or
jmp
gs
xchg
pop
sub
inc
mov
sub
pop
bound
push
aam
xchg
xchg
jg
mov
mov
adcb
add
xchg
rcl
int
sbb
imull
mov
xor
outsl
xchg
pop
outsb
mov
pop
add
es
add
movsb
push
hlt
jg
mov
stos
aad
shlb
xchg
xor
imul
cmp
je
jge
movsb
sbb
pop
xchg
loope
jne
mov
and
cmp
add
scas
sahf
pop
pop
sbb
mov
sbb
std
mov
out
push
xchg
xor
xlat
inc
inc
jae
jge
cld
jp,pn
pop
mov
ljmp
pop
mov
iret
and
jo
stos
lret
arpl
xor
into
dec
ss
push
or
sbbl
stos
fdivl
mov
movsb
push
clc
xor
or
rep
in
jb
and
stos
jae
sarl
xchg
cmc
jnp
movsb
fistpl
pushaw
out
cltd
stos
sbb
or
mov
xor
mov
repz
imul
push
sbb
sbb
mov
mov
or
pusha
xlat
stc
movsl
pop
add
sbb
mov
mov
cmpsb
xor
sbb
int3
dec
ds
pop
inc
jp
pop
mov
mov
rol
adc
pop
add
repz
mov
and
pop
cmp
int
cmc
cmpsb
add
jmp
pop
xor
jae
arpl
lock
out
into
cmpsb
inc
adc
std
test
push
subl
and
lea
xchg
add
xor
std
sti
pusha
pop
inc
dec
and
lret
inc
movl
xchg
mov
stc
cmp
add
pop
cmpsb
movsb
mov
dec
mov
out
fisttps
mov
jbe
stc
push
stos
pop
iret
mov
add
and
pop
ret
outsl
mov
sti
out
mov
or
iret
into
fldl
mov
fsubs
sub
inc
stc
dec
or
mov
xchg
inc
stc
movsb
adc
test
sbb
les
pop
clc
call
repnz
mov
jle
xchg
fnstenv
lock
pop
fistpll
clc
das
aas
inc
jecxz,pn
ljmp
dec
pop
sub
jmp
daa
sbb
dec
xchg
test
add
in
pop
jne
test
dec
cmpl
popa
stc
or
add
shlb
push
push
pop
sub
push
push
testl
dec
xchg
jb
push
mov
es
repnz
push
cmp
dec
jp
fcoms
es
ds
in
cmc
jae
addl
cs
in
andl
into
and
xlat
test
jae
push
mov
movsl
or
call
out
adc
mov
inc
pop
xor
jno
in
lock
push
insl
and
arpl
pop
es
push
daa
es
scas
sbb
push
insl
ficomps
test
outsb
xchg
push
sti
shrl
int3
enter
bndcl
adcl
pop
jno
xchg
dec
adc
mov
loope
icebp
pop
push
out
mov
mov
pop
shll
jb
push
mov
adc
push
fdivp
pop
fdivl
sub
push
push
cmp
fidivrl
cmp
sub
ret
adc
push
in
mov
inc
xchg
add
fldcw
stos
fisubrs
out
pop
or
dec
movl
inc
inc
cmp
lahf
andb
jb
cmp
add
jmp
ljmp
lods
xchg
sbb
mov
adc
mov
mov
scas
stos
sbbb
dec
jmp
adc
mov
push
sarb
sbb
scas
xchg
and
jbe
sub
ljmp
inc
mov
push
mov
sbb
ja
lods
jge
mov
pop
push
ljmp
sahf
or
jle
repz
mov
inc
or
cwtl
inc
movsl
pop
mov
lcall
lea
cltd
and
lret
repnz
insl
pop
pop
adc
dec
outsl
pop
dec
ljmp
or
xorb
mov
and
pop
in
fildl
rorl
add
push
cltd
stos
lret
sbbb
int
jmp
lahf
inc
add
movsb
cwtl
fstpl
xor
into
push
filds
dec
pop
mov
sarb
in
ljmp
ret
xlat
jecxz
cmp
cmp
xchg
sub
and
xor
lret
ret
xchg
loope
imul
or
test
gs
mov
ret
mov
lods
push
dec
addr16
jb
jp
push
or
cmc
cmp
js
imul
fisttpl
icebp
scas
mov
fdiv
cmpsb
lret
lahf
ja
mov
push
repz
sub
repz
xchg
mov
stos
shll
inc
repz
test
cmc
mov
sbb
icebp
xchg
or
pop
pop
and
cwtl
cmp
imulb
inc
jge
cmp
dec
sub
mov
pop
call
xchg
dec
sub
decb
int
push
arpl
xchg
ja
out
cmovb
lock
adc
in
cmp
mov
and
mov
mov
pop
sub
clc
cmp
push
mov
push
or
fiaddl
mov
mov
mov
das
or
or
push
xlat
fdivrs
fstpt
fisubs
mov
hlt
mov
stos
xor
and
xchg
or
nop
sbb
cmp
or
stc
in
stos
fs
xchg
xchg
jp
and
iret
shlb
enter
aas
pop
pop
lods
push
pop
xor
daa
cwtl
push
pusha
sub
jmp
insb
adc
mov
and
pushf
jl
adc
push
push
adc
dec
pop
in
push
inc
cltd
scas
shrb
mov
and
dec
out
out
out
mov
xor
adc
xor
pop
popf
imul
cltd
bound
mov
push
leave
rol
cmp
imul
xchg
add
fnstsw
mov
push
or
test
jbe
jnp
sbb
mov
inc
add
push
push
xor
xlat
xor
adc
sbb
in
jl
xlat
scas
jmp
jno,pn
mov
pop
mov
test
pop
cmp
mov
sahf
jge
out
test
outsb
in
xchg
shll
clc
mov
cmc
sahf
sub
jecxz
sub
lahf
aad
jge
mov
daa
out
popa
insl
jno
leave
pusha
dec
ja
in
jbe
stos
cmp
sbb
mov
jmp
out
or
into
mov
push
sbb
hlt
mov
mov
push
lock
xlat
cld
aaa
fistl
cmp
out
dec
and
lcall
mov
ds
add
minps
in
push
pop
and
testb
push
ljmp
xor
das
mov
mov
test
adcl
push
sub
in
or
call
and
sub
inc
movsl
push
es
stos
adc
lock
decl
or
jp
sub
out
jp
scas
movsl
loopne
jne
lods
fsubr
add
jl
dec
stc
leave
aaa
loop
xor
mov
fldl
jge
shl
sbb
fldenv
js
cltd
test
outsl
jp
inc
dec
shll
ret
and
inc
jl
std
cmp
pop
iret
xor
inc
mov
inc
sub
lock
nop
aas
fadd
psllq
cli
je
neg
adc
mov
pop
push
jl
jp
push
or
aas
cmp
xchg
xchg
insb
test
jmp
sub
inc
sti
dec
pop
pop
test
repnz
cmp
sbb
or
and
mov
add
lods
mov
sub
int
scas
test
nopl
mov
lret
jp
cmp
daa
jne
sahf
push
lret
pop
xor
shlb
fistps
sbbb
outsl
shll
addl
nop
aas
mov
aaa
adc
push
cmp
add
mov
outsl
repnz
sbb
out
clc
lds
jae
and
test
pop
adc
jecxz
add
xchg
xchg
add
mov
lods
enter
pushl
ds
or
in
jmp
add
adc
lea
push
aad
pop
int
out
push
loope
mov
cmp
mov
pop
mov
repz
and
or
or
and
imul
enter
loopne
cmc
inc
call
mov
push
pop
xor
add
xchg
incb
inc
cmpsl
sbb
mov
lcall
ljmp
daa
addb
ret
cmp
ljmp
sub
cmpl
xor
and
into
cwtl
xorb
js
lock
cmp
push
cmc
xchg
popf
xor
test
adc
lods
cld
and
subb
sbb
xchg
jns
test
stos
push
pop
cld
mov
add
std
addl
mov
mov
dec
mov
test
jbe
sub
add
cmovs
mov
in
mov
xlat
pop
mov
and
mov
imul
out
cvtps2pi
in
fldcw
fcoml
cwtl
pop
add
ja
mov
add
aaa
or
in
xlat
cmp
ja
out
sub
xchg
inc
rolb
fidivl
inc
pop
jl
sub
dec
push
out
int
mov
add
in
xor
in
dec
imul
icebp
cli
cs
xchg
fiaddl
ds
test
add
push
xor
or
adc
or
cmpsb
cli
cmp
cld
and
add
std
adc
jmp
shl
ss
rorl
aaa
and
or
outsl
ja
lods
push
rcll
adc
cmp
and
mov
mov
adc
sub
push
iret
mov
push
test
je
sbbl
les
jge
outsl
mov
dec
jb
cmp
adc
dec
inc
cmpsl
pop
push
inc
or
sbb
out
pop
inc
xchg
insl
rorl
daa
cmp
and
sub
push
xorb
bound
lea
add
mov
loopne
add
sub
fwait
xor
in
inc
jp
std
dec
sub
jo
mov
xchg
loope
test
stos
sbb
cmp
cmp
mov
movl
fistl
fmull
pop
aas
ret
sub
and
orl
imul
dec
push
sub
aaa
or
push
xchg
dec
mov
inc
orb
popf
sub
arpl
push
mov
add
repnz
in
fs
push
imul
scas
stos
jno
sbbb
iret
scas
ja
add
scas
pop
in
jle
movsb
push
mov
clc
in
mov
jp
adc
push
in
dec
jbe
and
sbb
inc
adc
aam
cmpl
hlt
ljmp
sub
ret
imul
std
sbbb
pop
fs
rcll
scas
cli
leave
sbb
enter
out
addr16
fdivrl
lods
sbb
call
dec
xchg
pop
lods
out
sbb
pusha
pop
data16
lock
sbb
xchg
pop
es
movsb
pop
iret
cmp
sti
pop
cmp
dec
jle
xor
addr16
inc
jne
dec
sbb
in
stos
loope
js
push
dec
push
sbb
sub
xchg
cli
repnz
mov
lcall
pop
pop
mov
je
insb
repnz
cmp
jecxz
cli
jnp
cli
add
pusha
mov
mov
jg
dec
mov
adc
mov
aad
shl
push
or
xor
push
enter
mov
and
das
push
jo
les
add
sub
pop
mov
add
inc
fwait
dec
arpl
xchg
fiaddl
shll
lret
push
int3
rcl
mov
add
pop
cmc
mov
std
stos
out
cmpsl
cmc
sahf
cmp
scas
sahf
gs
adc
push
mov
mov
cltd
push
adc
push
lcall
jmp
mov
arpl
loope
mov
and
cltd
aaa
xchg
and
push
in
cmpsb
movsb
cmp
mov
adc
mov
jl
or
les
cmpsl
pop
add
mov
aam
xchg
jle
addr16
fidivrl
jmp
cmp
inc
jmp
out
bnd
sub
stc
sahf
pushf
mov
lret
mov
aam
sub
add
xchg
aas
xlat
cmpsb
add
inc
arpl
inc
mov
push
mov
mov
ret
and
mov
scas
data16
int3
xlat
sbb
sbb
push
sbb
adc
mov
fs
mov
repz
outsb
mov
pop
out
add
or
inc
lret
xor
cwtl
jne
dec
aad
push
sub
jge
push
mov
mov
sub
out
shrb
mov
mov
cmpsb
mov
gs
pop
mov
out
movsl
xchg
and
cmc
dec
push
push
push
adc
clc
xor
fisttpl
dec
push
cs
outsl
cmp
push
jl
mov
mov
movsl
loope
mov
mov
xchg
adcl
jb
insb
inc
bound
xlat
cmp
inc
mov
nop
mov
inc
pop
cmp
jl
adc
xor
shl
cmp
pop
jns
inc
push
pop
ja,pn
ss
fcompl
xchg
scas
dec
leave
aam
pusha
sbb
std
decl
mov
cmp
aas
ret
push
adc
cmp
verr
fsubs
rclb
sub
ds
sub
pop
clc
mov
pop
sbb
pop
ds
or
addr16
dec
std
fisttpl
jecxz
out
sub
sbb
push
jae
push
les
jg
in
ds
mov
dec
xchg
dec
add
jns
push
movsl
pop
sub
cltd
sbb
mov
rcl
push
adc
fisubl
adc
fwait
iret
xchg
fs
dec
in
jmp
and
inc
mov
pop
mov
fisubs
sti
sub
xchg
pop
dec
jg
xor
lcall
push
insb
popa
sbb
push
or
ljmp
mov
sbb
ljmp
xor
cmpsl
xor
pop
inc
and
cmc
jo
je
adc
insl
mov
mov
into
push
xor
ds
jge
in
lods
xlat
xlat
push
dec
das
bound
push
pop
stos
mov
inc
shrb
cli
loop
pop
data16
cmc
fs
jg
push
aas
cmp
mov
xor
js
inc
inc
mov
pop
adc
mov
dec
dec
xchg
rorl
mul
cmpsl
sbb
xor
push
out
add
push
imul
fildl
pusha
push
test
popf
xchg
add
dec
xchg
sub
mov
push
pop
test
jg
in
or
xor
in
enter
mov
sbb
sti
xchg
fidivs
mov
lahf
int
ss
or
mov
inc
repnz
xlat
stos
out
loopne
sub
xchg
fdivrl
pop
sub
adc
cmpsl
mov
mov
jns
popa
mov
pop
sbb
fiadds
ljmp
sbb
or
inc
js
sub
push
mov
mov
pushf
es
jno
cwtl
adc
sub
int
outsl
scas
sahf
add
mov
inc
mov
pop
popw
popf
sub
mov
stos
and
pop
ss
dec
shll
add
stc
gs
xchg
lretw
shlb
jp
int
int
xlat
movsl
pop
movl
sub
out
mov
or
mov
adc
jne
fcoms
je
dec
dec
out
test
sub
std
cs
jne
xchg
jae
or
or
mov
xlat
rcr
mov
xchg
inc
gs
in
pop
and
xchg
iret
int3
xchg
repnz
out
sub
xchg
push
mov
jne
pop
es
loope
sbb
insb
out
mov
aaa
add
scas
mov
and
mov
xor
lret
call
inc
aad
test
hlt
dec
and
fs
mov
pop
insl
xor
sub
mov
movsb
lds
insl
mov
inc
fidivs
cmpsb
fldt
pop
jecxz
mov
adc
out
push
xor
jecxz
jecxz
sarb
out
xchg
cmp
rol
cmc
cmpsl
pop
dec
faddp
add
push
sub
mov
jbe
jg
in
sub
fnstcw
mov
adc
cmp
loop
xor
cld
daa
xchg
sbb
and
dec
push
mov
mov
cli
or
shll
ja
stc
mov
or
mov
push
mov
dec
inc
cs
jmp
pushf
cmp
add
fdivrs
adc
mov
les
mov
nop
xor
in
or
push
cmp
adcb
sbb
or
ret
pushf
stos
test
test
mov
or
out
dec
fldt
stc
cmp
divl
mov
sub
pushf
mov
bound
mov
mov
loopne
xchg
mov
aaa
data16
adc
movsl
jmp
lret
adc
jnp
dec
mov
fimuls
sbb
or
inc
mov
mov
and
xor
and
bound
movsb
inc
dec
xor
push
pop
xor
enter
test
mov
dec
or
add
imul
data16
xor
into
loope
pop
xor
adc
mov
push
pop
jb
sbbb
inc
call
push
xchg
and
and
or
push
lcall
mov
stc
cmp
jmp
and
sbb
mov
int
fistpll
add
jae
or
bound
push
adc
movsb
icebp
repnz
or
fnstsw
or
jp
in
push
inc
mov
and
mov
scas
sub
loop
dec
sti
leave
jmp
in
dec
pop
push
add
ljmp
push
inc
cmp
int3
adc
mov
add
repnz
test
push
shll
pusha
add
sarb
add
imul
adc
sbb
std
pop
fwait
jbe
adc
lahf
rorb
scas
sbbb
push
xor
sub
lahf
jecxz
jns
mov
mov
addr16
addr16
in
in
sub
popf
pop
pop
adc
or
dec
cmpsl
lret
rcrb
cltd
cs
add
mov
sub
addr16
subb
or
lods
lret
push
dec
cmc
xor
popa
movsl
and
int3
jle
sbb
lcall
cmp
add
xor
xlat
rorb
and
sbbb
addb
out
fsub
dec
jb
fwait
inc
loopne
repz
fisubs
ret
jge
jp
loopne
iret
or
out
idivb
mov
jmp
and
test
lea
add
xchg
iret
lds
call
dec
mov
sbb
or
xchg
ds
das
fwait
test
repnz
pop
xchg
push
or
mov
jae
in
or
mov
pop
aas
jo
fiaddl
mov
push
dec
mov
bound
mov
in
daa
mov
or
sub
test
stos
push
pop
jg
dec
out
test
xrelease
fstl
cli
imul
mov
sub
push
mov
jns
imul
popw
push
fildll
ljmp
inc
jne
jecxz
sbb
mov
jecxz
sub
mov
xor
scas
sbb
xor
inc
pop
cmc
cmpsl
cwtl
adc
sarl
sti
scas
imulb
aam
cmp
hlt
repnz
daa
sahf
fiadds
cmp
scas
aas
mov
gs
jg
popa
and
les
sub
xchg
jmp
addr16
les
icebp
fadd
pop
sub
ret
lods
data16
pushf
aam
inc
sub
rol
mov
mov
adc
ret
insb
cmp
and
cmp
or
lock
push
popa
push
pop
xchg
mov
addr16
add
movb
sahf
popf
sub
cs
in
sbb
cld
insl
pop
cmp
mov
cmpsb
insb
push
icebp
hlt
mov
ror
lahf
mov
sarl
xchg
ss
ds
cwtl
cmp
xchg
sahf
push
daa
inc
jb
inc
push
jo
shll
sbb
out
jae
popa
repnz
xor
repz
test
fmull
insl
and
mov
test
mov
mov
jae
call
sbb
push
ss
loopne
aas
jmp
adc
addr16
stos
dec
pop
adc
mov
mov
mov
sub
ljmp
xchg
loope
adcl
jnp
mov
cs
lock
mov
fisttpll
xor
add
add
ds
pop
cmpl
dec
cwtl
cltd
xchg
or
adc
dec
iret
stos
adc
push
push
push
mov
adc
jl
repz
cltd
test
cmp
test
xchg
int
jb
dec
mov
xor
lods
filds
out
ss
xchg
mov
xor
xchg
jo
pushf
lret
fcompl
sub
or
mov
pop
pop
mov
pop
or
arpl
and
pop
mov
xor
and
cmp
xor
loop
hlt
outsb
bound
and
xlat
xor
out
outsb
lea
loop
pop
pop
out
inc
repnz
mov
inc
xchg
cld
mov
dec
ret
xlat
ja
mov
shll
xchg
out
jmp
iret
mov
push
insl
into
mov
mov
inc
cmp
inc
mov
sahf
xor
and
inc
les
pop
roll
pop
mov
mov
roll
sub
dec
repz
and
inc
test
mov
and
std
adc
sarb
test
fldcw
in
fwait
imul
cwtl
push
and
aam
push
jg
lret
xorb
add
xchg
ss
ret
movb
in
inc
inc
jge
cli
inc
divl
in
cmpsl
mov
add
xchg
cmp
in
fsts
push
test
inc
xchg
imul
fsubrs
and
dec
inc
adcb
xor
xlat
cmpsb
movntq
punpckhdq
cmpsb
jae
or
and
jge
pop
ficomps
mov
outsb
icebp
cmp
mov
lods
test
sahf
xor
jp
shl
shlb
mov
add
mov
das
fists
lock
dec
lret
and
stos
lods
test
rorl
shlb
ljmp
mov
adc
lret
mov
jp
push
pop
out
xlat
daa
loope
in
inc
push
push
ficompl
xchg
outsb
lods
inc
xchg
xor
in
sub
fdivrs
jp
ljmp
sub
imul
push
fwait
add
jmp
add
cmp
call
ret
mov
xchg
jmp
in
mov
pop
cmp
jmp
cmc
jge
mov
sub
mov
test
in
ret
inc
into
negb
fisttps
push
jnp
lods
lods
and
cmp
mov
jecxz
popa
mov
lods
mov
in
int
push
mov
aas
movb
in
iret
dec
outsl
jae
lret
inc
mov
adc
icebp
inc
sbb
push
sub
pop
mov
mov
add
pusha
test
pusha
sahf
js
and
loop
es
mov
pop
push
and
jp
stos
sahf
xchg
orl
stos
push
ds
xchg
mov
in
and
pop
xor
movsb
cwtl
rol
out
das
inc
fistps
mov
movsb
cwtl
ljmp
pushf
leave
jge
into
dec
or
outsb
mov
cmp
ret
stos
mov
sub
lret
xchg
fidivrl
jmp
mov
fsubr
nop
outsb
mov
repnz
jno
jl
pop
imul
dec
mov
xlat
outsl
jmp
xor
mov
pop
pop
push
sahf
bound
bound
aaa
push
pop
iret
insb
and
xor
stos
stos
or
enter
test
push
test
in
and
and
fisubrs
fisttpll
fisttpl
cmp
adc
dec
cmp
fadds
lds
out
sti
aam
lea
outsb
cmp
sbb
mov
or
jo
cli
test
mov
or
cmp
movsb
cmpsb
or
inc
pusha
inc
es
fs
jle
add
out
lods
adc
leave
in
lret
jg
mov
out
insl
jg
shlb
inc
sbb
and
shrl
push
xor
andl
fs
xchg
sbb
dec
push
mov
mov
call
and
push
lahf
rcll
dec
mov
adc
sbb
xchg
add
jbe
mov
dec
bound
sahf
push
cmpsb
add
pop
dec
inc
push
dec
ljmp
jmp
dec
enter
andl
push
cmpsb
pop
push
ja
sub
gs
pushf
std
sbb
pop
loop
mov
push
sbb
push
add
mov
xor
pop
cmp
xchg
push
lahf
shlb
cmp
int3
mov
pop
int
inc
jmp
sbb
xor
lock
sub
cs
gs
cmpl
aam
xor
push
enter
or
popa
stos
out
mov
cmp
cwtl
stos
mov
jne
dec
xor
sub
fcoms
and
sub
popa
push
out
jmp
lahf
icebp
sub
adc
jge
sub
mov
xor
adc
and
cmp
je
mov
fldt
xchg
mov
mov
in
cmp
fs
pop
pop
ja
ss
sub
filds
sbb
inc
push
fstp
jle
lcall
out
insb
mov
lock
sbb
jbe
dec
and
mov
mov
inc
mov
mov
lcall
adc
sbb
int
cwtl
sub
mov
loop
mov
in
mov
loope
xor
xorb
mov
enter
incb
dec
sub
aam
pop
pop
push
sub
adc
dec
lock
mov
lret
lahf
mov
stc
in
insb
mov
cmpsb
rorl
jne
loope
inc
leave
adc
sub
ret
movsl
add
push
mov
mov
cmp
shl
add
andb
sarl
stc
jae
stc
dec
sahf
sbb
xchg
sbb
dec
or
cs
cs
shrl
inc
cmpsb
push
lahf
sahf
jecxz
dec
aam
mov
xchg
shlb
inc
push
ds
lds
popf
fcmovnbe
inc
out
enter
jns
inc
push
xchg
push
xorb
cmp
mov
and
add
stos
fidivrs
addb
psubq
fsts
jnp
mov
push
aam
xchg
leave
sbb
adcb
cs
and
sub
sarl
and
inc
decl
fistps
push
ja
or
jb
fisubrl
fs
and
and
sub
imul
mov
and
ret
and
xor
dec
mov
ret
mov
into
adc
jg
cld
sub
ret
dec
and
xor
add
loope
out
jmp
adc
daa
xor
mov
rclb
xchg
repnz
mov
adc
in
sub
xchg
or
sbbb
and
daa
mov
divl
push
call
aad
add
push
notl
or
push
mov
pop
stos
rorb
sbb
data16
call
test
inc
stc
sti
cmp
stc
dec
sub
enter
fs
sub
mov
ficompl
stos
in
data16
pop
stos
gs
pushf
adc
scas
in
sbb
stos
mov
jae
dec
jbe
dec
add
fxam
pop
fimull
add
je
cvtps2pi
jnp
call
push
inc
mov
data16
push
mov
adc
cltd
pop
sbb
lret
loopne
mov
jbe
dec
cld
pop
rcll
lods
xchg
push
test
stos
push
cld
out
mov
dec
out
je
jns
push
add
jb
dec
stc
in
jno
sar
jno
inc
sti
xchg
sbb
outsl
flds
and
rol
fsub
cmp
sub
mov
add
jmp
lods
rcrl
scas
mov
pop
ret
inc
push
mov
mov
jb
adcb
cmpsb
aaa
repz
jno
mov
or
subl
iret
mov
push
mov
mov
jge
mov
jmp
inc
sti
jnp
inc
iret
xchg
jmp
xor
cld
adc
mov
call
outsb
push
fs
lea
xor
cmc
out
repz
sub
out
stos
lods
mov
dec
and
xchg
add
cwtl
cmp
imul
xor
sub
into
xor
mov
test
pop
mov
dec
ret
into
xchg
jmp
das
push
nop
int
movsb
imul
push
push
sbb
xor
xchg
xlat
outsb
sbb
and
adc
or
pop
xchg
xchg
cld
add
je
sbb
lock
xchg
notb
lock
ds
hlt
pushf
jne
jge
bound
xor
bound
outsb
lcall
mov
cli
dec
xchg
push
imul
popf
mov
inc
push
ja
mov
dec
cmp
push
fwait
add
inc
and
test
mov
sub
fdivl
shll
sbbb
addr16
mov
ja
push
and
mov
test
mov
in
cld
dec
lahf
dec
fcompl
notb
sti
rcll
lea
mov
jnp
pop
sub
aam
scas
out
pushf
je
xorl
orb
xchg
mov
add
insb
jns
out
insl
frstor
sbb
push
inc
mov
xchg
cmp
or
stc
stos
psubusb
stos
fxch
jp
jne
stos
scas
mov
jle
or
pop
jge
les
popf
ret
loop
pop
adc
insl
cmp
hlt
add
out
xchg
add
push
push
cld
fdivs
mov
xchg
imul
fnstcw
call
mov
sbb
mov
faddl
call
mov
daa
adc
test
fdivl
xchg
add
mov
bound
mov
adc
or
mov
fdivrs
and
sbb
stos
jge
mov
mov
push
xchg
jge
adc
cmp
fstps
xor
test
xchg
loope
lods
add
fdivs
or
xchg
test
repz
push
cmp
dec
sahf
rol
cmp
and
cmc
insb
cmp
or
pushf
sti
mov
adc
xor
fdivrs
cmp
jnp
mov
mov
aas
mov
mov
sbb
test
mov
ret
daa
push
daa
jg
sbb
fwait
or
dec
xchg
adc
mov
cltd
xor
add
sti
movb
jae
loope
into
jnp
adc
jae
xor
cmpsb
fisttpl
cmp
enter
dec
aas
and
and
sub
mov
sub
stos
test
cwtl
xlat
pop
add
jns
mov
popa
sub
dec
or
mov
push
pop
in
inc
std
sahf
lods
xchg
sbb
jecxz
or
inc
jno
shlb
adc
dec
sbb
push
mov
ja
and
loope
adc
add
sub
addr16
push
add
mov
fwait
lods
sbb
scas
xchg
cmp
push
outsl
nop
or
dec
lds
xor
out
je
jb
sbb
add
negb
js
fucomip
adc
cmc
fildll
loop
adc
adc
push
adc
mov
int3
lds
cmpxchg
cmpsb
jns
jp
sbb
repz
loop
cltd
xchg
and
nop
push
jns
xor
ss
dec
out
jecxz
xor
xor
shrb
jp
outsl
aaa
enter
sti
jmp
lock
dec
rol
mov
cmc
push
mov
arpl
or
in
xchg
lds
test
mov
xor
lcall
sbb
pop
ljmp
jg
lea
jne
jp
mov
outsl
inc
mov
sub
test
dec
cmpl
mov
dec
push
xchg
mov
das
jbe
sub
push
or
push
scas
xchg
mov
imull
imul
insl
push
inc
push
inc
test
mov
adc
inc
fiaddl
lcall
inc
nop
or
cmp
test
decb
sub
jns
repnz
xchg
les
pop
in
lds
test
or
add
dec
enter
inc
xchg
or
and
or
mov
pop
jge
lods
mov
cld
inc
movsl
cmp
cwtl
push
ljmp
shll
pop
add
leave
das
out
mov
rclb
insb
pushf
negl
jo
test
dec
lods
repz
popf
lret
shl
in
jae
in
ret
cmpsb
sub
jge
push
test
shr
pop
data16
rorb
add
test
dec
xchg
inc
imul
mov
pop
cmp
xchg
or
out
and
or
inc
push
loop
stos
fimull
add
xchg
adc
dec
push
decb
out
negl
mov
mov
stos
sub
fldln2
cltd
push
cmp
out
stos
stos
add
clc
sbb
fimuls
out
xor
je
scas
pusha
in
call
scas
test
call
cld
inc
jmp
loopne
popl
test
cmp
mov
cld
insl
test
inc
sbb
ss
shrl
call
cmp
sub
repnz
jmp
fnstcw
mov
jmp
loop
movsb
xchg
mov
mov
xchg
loope
pop
pop
sti
add
imul
add
sbb
int3
out
xchg
dec
insl
dec
xlat
roll
sbb
xchg
push
arpl
js
hlt
mov
je
xchg
fdivrs
sti
xchg
mov
pop
mov
outsb
xchg
andl
pusha
cmc
cmp
or
fidivl
lock
pop
add
addl
in
cli
xchg
out
add
mov
cmc
repnz
cli
mov
ror
jns
shrb
add
xchg
loopne
subb
and
pop
dec
inc
sub
jmp
ret
cmp
adc
pop
aam
cmp
dec
cmp
loope
aam
and
mov
inc
dec
xor
cmp
inc
fidivrs
add
mov
xlat
clc
sbb
cmpsb
shrb
psubq
mov
inc
push
stc
xchg
shl
inc
aaa
inc
inc
mov
scas
out
dec
loope
subb
cli
push
sub
lods
aaa
jle
cmp
cltd
mov
repnz
or
and
test
adc
pop
lods
jl
mov
jmp
sub
mov
push
sub
push
fists
and
test
test
in
or
ret
sbb
das
test
sub
xchg
rolb
ret
nop
cli
jo
sbb
int3
mov
mov
in
and
aaa
sbb
in
test
mov
iret
fistps
add
mov
jnp
psrld
out
add
stc
adc
inc
sahf
imul
enter
fwait
outsb
mov
inc
cmp
sbb
adc
cmpsb
iret
xchg
movsb
fwait
pusha
xchg
xchg
es
imul
cmp
inc
inc
xchg
in
jbe
inc
shl
fisttpll
xor
jle
sub
loop
mov
pushf
add
and
dec
in
mov
cli
sub
xchg
pop
pop
and
mov
mov
lea
jo
movsb
lcall
stos
pop
pop
je
xchg
out
jbe
lock
mov
jb
xlat
cmpsl
outsl
mov
dec
or
pop
push
push
sbb
nop
ja
dec
or
inc
adc
pop
fstpt
cli
mov
add
stos
out
cmpsl
fidivrl
test
mov
dec
adc
pop
outsb
es
jb
sbb
mov
fadds
sub
adc
aaa
addr16
dec
push
in
popa
jl
fs
jge
popf
sbb
test
fiadds
ret
push
movsl
fnsave
pop
sbb
lock
jecxz
push
fs
ss
dec
jl
loope
mov
pop
jno
sub
mov
popa
dec
jmp
jge
mov
dec
shlb
icebp
xchg
xor
inc
jb
scas
or
mov
push
in
stc
xlat
push
xchg
lds
loope
add
sbb
imul
xlat
push
lahf
aam
mov
push
xlat
test
push
movsl
inc
fisubrl
repz
cwtl
sub
pop
es
xchg
hlt
call
cmp
pop
xchg
sub
mov
int3
jp
rclb
lret
sarl
ljmp
mov
dec
mov
cltd
mov
outsl
test
add
dec
scas
sbb
xchg
push
lret
repz
jecxz
mov
and
sti
jge
push
fwait
push
in
add
cltd
xchg
shr
or
sbb
xor
testl
je
scas
jl
fnstenv
ja
scas
sub
scas
cmp
jecxz
and
gs
idiv
fbld
push
and
mov
cmpsb
cmp
adc
es
lods
jo
enter
mov
iret
int3
clc
stos
xchg
lods
sahf
fisttpl
push
mov
popf
xchg
into
stos
es
add
dec
pop
rolb
and
cmp
shrl
mov
jg
push
jecxz
iret
lret
sbbl
out
stos
mov
push
arpl
jg
test
movsl
xor
push
shlb
mov
cmpb
lds
jg
adc
repz
int
icebp
jo
jno
mov
icebp
dec
in
stc
mov
inc
fsubs
add
xchg
mov
fists
cmp
cmp
std
add
inc
fwait
in
test
xor
add
aam
dec
dec
pop
push
push
push
xchg
aas
jno
pop
das
insb
pop
xchg
out
mov
loope
adc
xchg
fsubrp
sbb
push
daa
add
push
pop
fistpll
fcompl
repz
sbb
fimuls
inc
cmc
ljmp
std
js
lahf
mov
push
sub
mov
lock
and
jp
cmpsb
pop
movsl
enter
mov
pop
xchg
cmp
popa
outsb
rclb
sub
mov
popf
mov
out
push
into
les
inc
cmp
arpl
jbe
shlb
jmp
sahf
scas
add
repnz
jge
dec
scas
mov
sbbb
insb
imul
loopne
cmp
lods
pop
push
test
mov
insl
lret
lds
in
mov
fwait
push
orb
daa
xlat
bound
cwtl
mov
pop
test
pop
popf
cmpl
cmpsl
cs
nop
jge
rorl
out
adc
movsl
sbb
xchg
sti
inc
jmp
and
call
or
js
xor
xor
scas
insl
aam
es
mov
mov
pop
pushw
roll
mov
in
mov
sub
mov
std
add
mov
xchg
jno
adc
push
xchg
out
xchg
pop
pushf
xchg
aaa
adc
jp
adc
push
mov
xchg
es
inc
lock
rorl
xchg
mov
cmp
mov
sub
add
and
mov
hlt
ljmp
hlt
push
add
inc
pushl
es
xchg
xchg
inc
or
add
fstp
mov
stc
insb
in
sub
push
inc
cli
mov
movsl
rcr
cli
clc
mov
inc
lea
out
xchg
xchg
lret
pop
mov
mov
aad
mov
imul
nop
adcl
into
and
ret
leave
loope
mov
daa
pop
mov
cmp
dec
pushf
je
push
pop
dec
jb
aaa
xchg
js
fdivrp
xchg
inc
pop
push
mov
mov
bound
push
lods
mov
mov
and
popa
inc
xchg
mov
ss
fucomi
add
mov
push
cmpl
popa
mov
push
addr16
sub
and
mov
dec
mov
fsubs
push
xchg
aaa
bound
mov
rcrb
imul
add
pop
aaa
aad
cmp
dec
enter
cmp
jb
leave
test
imul
fstl
lret
cmpsl
adc
imul
cmp
std
xchg
and
push
or
insl
iret
lret
lea
push
js
fnstcw
fisttpll
mov
aam
shll
or
xor
sar
push
add
or
shlb
cmpsl
es
int
adc
jle
xlat
pop
out
notb
sub
out
dec
mov
adc
dec
add
dec
lea
jmp
repz
in
popf
mov
mov
fildll
ret
cmp
add
jbe
out
mov
and
pop
jb
stos
mov
enter
pop
inc
std
mov
xchg
sub
lret
mov
pop
out
mov
out
ss
inc
shl
xchg
pushf
ja
pop
sub
or
in
lret
push
and
and
cld
jbe
dec
cmp
mov
fwait
dec
js
jle
inc
adc
cwtl
or
sub
out
mov
jne
pop
scas
add
daa
cmpsl
ja
subl
adc
mov
push
arpl
jns
lods
fs
mov
jmp
mov
fiaddl
cmpb
ja
push
push
mov
mov
push
cld
or
sbb
sub
push
int3
mov
lea
mov
pop
mov
adc
pop
arpl
push
shrl
ds
push
pusha
lret
push
scas
adc
add
lock
fs
push
or
pop
sbb
cmp
jl
jbe
mov
inc
dec
xor
cmpsl
insl
cmpsl
pop
popa
adc
lods
loopne
and
pop
out
push
pop
stc
sub
push
push
pop
pop
iret
mov
cwtl
or
jmp
dec
jae
inc
push
call
sbb
nop
jp
sub
adc
inc
mov
leave
stos
outsb
mov
push
ficomps
pusha
sti
jl
imul
call
std
popa
imul
scas
pusha
outsb
int
adc
mul
iret
int
sbb
push
fimull
pop
push
lahf
jp
shll
sar
icebp
je
les
cwtl
push
into
sbb
and
or
out
jnp
cmp
xchg
std
adc
mov
dec
pop
adc
push
pcmpgtb
int
jno
mov
jo
mov
or
hlt
jp
add
mov
sub
test
push
icebp
jno
pop
jg
bound
xchg
sahf
xchg
fidivrl
icebp
aaa
cld
flds
cmp
repz
mov
out
sbb
mov
movsb
jne
cmp
lcall
outsl
mov
xchg
mov
xchg
jno
mov
add
adc
bound
test
call
pop
clc
pusha
repnz
je
and
xlat
sar
mov
pop
dec
mov
stos
scas
pop
std
cmp
sub
test
jo
sub
sbb
push
add
jmp
stc
lods
mov
mov
mov
mov
mov
jnp
xchg
xor
jecxz
jge,pt
mov
mov
jge
sub
adc
test
mov
xlat
inc
int3
into
cli
cmp
lcall
dec
mov
fidivrs
push
fildll
pop
sahf
inc
test
das
fsubrp
fisubl
and
inc
std
cmpb
inc
hlt
loopne
inc
pop
lcall
sti
adc
pop
sbb
sbb
push
je
inc
repnz
insl
jmp
sub
and
pop
aaa
scas
movb
jle
movsb
jo
pop
in
shr
adc
scas
mov
into
call
mov
ja
js
nop
xchg
dec
pop
inc
adc
mov
pop
or
arpl
and
jbe
rcl
add
sub
adc
call
or
mov
adc
xchg
mov
jmp
mov
add
cmp
mov
repz
pop
add
aad
add
xchg
jecxz
scas
incb
loope
fcompl
jmp
lods
xchg
cmp
or
inc
or
sub
mov
je
and
orb
or
adc
cli
jns
outsb
pop
mov
int
sub
sub
pop
fwait
movsl
negb
pushf
out
movsb
sbb
shlb
jl
sbb
jp
ss
addl
mov
sub
or
adc
pushf
aas
aaa
dec
inc
sbb
xchg
mov
mov
popa
je
sahf
jle
lret
xchg
sbb
xor
inc
add
roll
xlat
and
shl
dec
fisubl
fmuls
pop
adc
stos
mov
pop
shlb
loopne
jns
ret
sub
faddl
sub
out
jns
jnp
lret
mov
bound
xchg
incl
pop
test
cmpxchg
mov
mov
stos
sbb
cld
xor
enter
int
bound
mov
lods
xchg
lret
loope
daa
xlat
xchg
push
or
pop
sbb
push
mov
call
add
scas
call
push
pushf
mov
mov
jecxz
out
aas
or
cmp
xchg
out
mov
xor
call
aaa
pop
inc
repnz
popa
aas
mov
adc
jl
mov
dec
dec
subb
pop
jo
insl
out
outsl
pop
out
fdivl
test
sub
les
push
push
push
loopne
xor
idivb
fcomps
or
inc
jmp
pop
lds
xchg
std
popa
shrl
out
dec
sti
pop
push
in
sbb
jp
inc
ret
fldt
outsb
inc
loope
add
push
nop
or
dec
fadd
xchg
add
fidivs
fxch
pusha
daa
xchg
loopne
adc
jmp
loop
fs
in
addr16
push
pop
push
or
je
inc
cltd
test
jg
xor
fnstenv
aaa
or
xchg
out
lods
mov
add
ret
test
pop
out
jle
lock
sahf
scas
in
jge
jmp
pop
mov
xchg
ret
fdiv
push
mov
sar
int
push
pop
inc
pop
xchg
scas
ja
out
jb
out
add
movaps
dec
or
in
bound
sbb
daa
mov
scas
jbe
xor
pop
xor
cmpsl
push
ret
mov
rcll
mov
rorb
push
sahf
out
mov
mov
insl
aas
jbe
pop
push
rolb
shll
bnd
add
out
mov
ret
insl
ja
ja
outsb
cmp
pop
test
push
mov
in
pop
aaa
incl
dec
mov
cmp
xchg
mov
lret
dec
outsb
xchg
cmpsl
cs
imul
das
push
ret
push
mov
lock
dec
roll
test
clc
cli
jmp
add
or
xor
or
and
fidivrl
mov
xor
fs
sbb
push
dec
mov
in
and
dec
jns
lock
mov
xor
cmpsb
aad
sti
or
xor
hlt
xchg
arpl
add
cmp
out
dec
adc
jae
inc
sbb
lcall
in
loope
jnp
mov
scas
ss
rol
stc
xor
lea
pop
dec
push
bound
adc
inc
lret
sub
leave
repnz
test
clc
bound
test
js
mov
js
in
loopne
xchg
aas
outsb
out
ret
jg
mov
loopne
ret
and
mov
js
add
mov
xor
imulb
rcl
and
add
xchg
xor
fisubrs
in
jmp
stos
out
push
clc
dec
pop
daa
sahf
mov
push
cli
fildll
repz
push
aas
test
sbb
bnd
sub
gs
psubsw
std
add
sbbb
in
jmp
cmpsl
xchg
test
adc
xchg
mov
pop
popf
xor
sub
ljmp
fxch
push
mov
cmp
and
in
sub
loope
inc
push
scas
jno
fwait
sbb
lods
mov
addr16
pop
add
addr16
ret
enter
cmp
cmpsl
leave
sub
xchg
iret
movsb
outsb
test
pop
mov
mov
sbb
and
xor
scas
out
enter
loope
data16
std
lret
mov
rcll
push
repnz
test
loope
loopne
mov
mov
imul
cmp
mov
lods
pop
addl
xchg
adc
push
mov
ret
test
sbb
int
fldenv
aad
fwait
sahf
movsl
loopne
inc
push
pop
movb
ficomps
and
daa
pop
es
mov
movsb
pop
or
lahf
xchg
push
jmp
cwtl
mov
cmp
cmc
mov
sbb
mov
icebp
lods
mov
fldl
mov
roll
sub
sbb
mov
jge
adc
out
push
and
sub
mov
and
xchg
add
shll
test
pop
pushf
push
push
popf
mov
mov
inc
inc
fcmove
data16
mov
jp
aad
inc
pop
loop
inc
shl
inc
bnd
out
xchg
ficomps
add
push
xor
xchg
xor
pop
insb
aaa
sarb
xor
lcall
adc
sbbb
sahf
xor
lods
or
adc
mov
adc
sbb
lahf
popf
call
test
daa
dec
dec
fidivrs
push
jns
mov
adcb
jnp
push
xchg
jl
pop
and
adc
sahf
push
and
jns
cmp
pop
hlt
js
aas
pop
jnp
jb
insl
in
shlb
and
add
sub
repz
or
jle
gs
pop
mov
or
aam
push
xor
sub
jp
mov
addl
pop
sbb
push
iret
and
xlat
mov
in
or
jnp
in
inc
pop
mov
and
push
inc
adc
lret
jle
mov
fs
xchg
movsb
mov
jb
nop
stc
xchg
jl
cld
inc
repnz
mov
mov
and
shlb
imul
shlb
iret
jnp
cmp
pop
stc
xchg
repz
outsl
dec
xor
mov
fistps
imull
xlat
mov
push
dec
cmpsl
xor
mov
push
sbb
stc
dec
add
mov
mov
dec
push
push
loope
fdivl
ret
jae
xlat
les
movsl
sub
sub
das
mov
push
cmp
pop
rclb
sub
sbb
aas
push
js
fs
mov
mov
fistpll
inc
addb
dec
pop
xchg
cmp
lret
fistpll
insl
cwtl
mov
je
xchg
push
xchg
pop
push
xchg
cwtl
aad
push
cs
mov
sbb
enter
arpl
xchg
je
inc
sub
mov
repz
movsl
fadds
inc
outsb
stos
sbb
mov
fwait
std
mov
push
jns
outsl
mov
test
lds
xor
sub
cmp
std
cmp
push
pop
fstpl
lods
push
push
ret
loope
pusha
outsb
mov
cld
xchg
sbb
sbb
rorl
sbb
sbb
sub
inc
out
fwait
ja
pop
mov
lods
adc
cltd
pop
hlt
and
outsb
adc
xor
add
xchg
ds
sbb
pop
cmc
cltd
hlt
jle
add
fnstcw
mov
imul
in
in
dec
jmp
xchg
clc
or
movsb
addr16
push
xchg
mov
insb
test
sub
into
and
arpl
cwtl
repnz
rcrb
and
inc
daa
add
mov
sti
cmpsb
xor
sub
idivb
pop
scas
loope
pop
out
inc
loop
cmpsb
lds
mov
ror
jg
adc
fcomps
dec
and
push
mov
jle
push
sbb
dec
or
xor
pop
xor
lods
into
xor
aaa
dec
loopne
push
xchg
sub
dec
pop
xor
mov
cld
and
or
shll
movsl
adc
ljmp
mov
jo
xchg
pop
ficompl
cld
mov
aam
push
test
dec
cmc
pop
mov
cmpsl
pop
daa
and
scas
dec
and
push
pop
jmp
mov
repz
or
subb
movsl
lock
hlt
or
enter
fdiv
orl
int
pop
dec
dec
lret
and
icebp
jecxz
rcll
les
cmp
mov
insb
jns
in
jae
mov
xchg
les
or
xchg
jle
cli
xchg
xchg
dec
loope
sbb
ss
push
shr
gs
mov
or
ss
mov
pop
adc
pushf
cmp
les
push
test
stos
rol
mov
enter
int
jp
js
adc
add
and
out
adc
bound
int3
mov
int3
stos
jo
push
leave
adc
mov
pop
into
mov
or
push
mov
jmpw
cltd
mov
scas
jp
mov
js
faddl
test
subl
arpl
jle
arpl
bsr
mov
popl
out
push
add
and
push
inc
xchg
and
pop
jo
ret
push
and
jnp
cli
icebp
movsb
or
pushf
fucom
mov
push
xor
push
and
sub
sub
xchg
lret
mov
add
filds
fdivl
sarl
cmp
push
ja
xchg
ret
leave
dec
loop
icebp
frstor
mov
add
rolb
scas
sbb
jb
xor
inc
cmpl
mov
lods
lods
jp
mov
xor
xchg
pop
push
pushf
jge
jnp
xor
fs
xor
or
gs
jno
add
ret
jg
mov
cmpsl
jg
or
mov
jecxz
mov
cltd
sub
push
push
ret
lcall
mov
and
out
adc
and
mov
push
pop
xor
jae
sub
repnz
scas
fistl
in
test
fidivrs
in
std
sbb
stos
jmp
adc
loopne
push
and
mov
hlt
cmpb
adc
lcall
mov
inc
jae
imul
push
or
test
testl
xchg
xor
shrl
pop
call
mov
mull
sbbb
and
mov
stc
sub
mov
outsl
in
and
ljmp
setl
cwtl
sub
js
ja
cmpl
int3
xbegin
daa
push
dec
and
ret
mov
jne,pt
mov
inc
icebp
xor
lahf
ret
sub
imul
sub
pop
cmpb
mov
pop
pop
jg
push
jmp
pusha
pop
insb
push
mov
sub
mov
movsb
repz
ja
in
pushf
mov
enter
lea
sub
push
fisubrs
dec
test
mov
test
xor
dec
arpl
dec
cltd
adc
jg
fs
jae
call
cli
cs
test
xor
sbb
mov
and
popa
test
push
sti
mov
xchg
test
cmp
divl
subl
mov
jbe
inc
inc
in
lods
sub
outsl
mov
lret
divb
cmpsb
pop
mov
jmp
dec
inc
jo
mov
push
mov
or
call
push
jne
push
add
ljmp
adc
aas
or
adc
mov
push
mov
mov
mov
mov
fsts
push
mov
adc
adc
cmp
psubd
pop
mov
es
push
rcrl
or
or
and
bound
cwtl
les
jmp
add
jmp
lds
xchg
pop
lret
mov
mov
cld
mov
sbb
aad
add
nop
in
das
scas
inc
cld
cmp
out
jb
test
inc
or
aad
sub
lret
lahf
ds
enter
or
jl
and
pop
hlt
dec
xchg
lods
insb
sbb
jo
xor
dec
ja
mov
and
cmp
int
push
jae
mov
outsl
jecxz
loope
out
clc
es
pop
mov
mov
xchg
fists
xchg
mov
faddl
lods
xchg
addr16
jle
dec
dec
cmp
add
cmp
and
cli
stos
decl
push
or
mov
scas
outsb
cmp
add
call
inc
jno
lret
pushf
ficompl
mov
mov
stc
lret
daa
push
push
cmp
stos
mov
addr16
adc
ds
movaps
in
mov
subl
sbb
gs
pop
mov
xchg
addr16
shrl
das
loopne
pop
lret
into
ret
pop
inc
in
jae
jecxz
aad
int3
push
adc
lds
daa
add
mov
lret
mov
cmp
enter
ret
sti
mov
and
xchg
dec
test
movsl
insb
adc
pop
out
stc
clc
mov
xor
aad
js
mov
call
xor
mov
aas
aam
data16
loop
push
stos
jg
hlt
mov
inc
xlat
pop
inc
jbe
mov
adc
or
aam
adc
call
insl
scas
cld
les
xchg
fidivl
mov
jg
outsb
adc
jo
cmc
bound
mov
jne
fs
sbb
into
pop
les
push
in
mov
pop
ljmp
pop
inc
mov
insl
cld
sub
mov
sbb
inc
mov
or
jg
aam
push
mov
pop
pop
dec
lret
movsl
and
shll
stos
test
rorb
mov
jmp
pop
mov
cld
repz
inc
push
sub
ja
mov
leave
push
ss
icebp
pop
mov
out
hlt
out
mov
aaa
xchg
pop
pop
jnp
mov
add
inc
popl
aaa
cmc
clc
fwait
insl
pop
lret
lret
cli
xchg
mov
stos
je
adc
and
mov
aas
popa
xor
mov
test
inc
lods
repnz
adc
outsb
out
and
aaa
inc
cmp
mov
inc
jns
sub
mov
pop
loopne
fs
adc
js
mov
int
push
dec
mov
dec
shl
add
and
inc
sub
lods
or
shl
add
jb
mov
pop
fdivl
imul
out
sbb
fwait
neg
push
lods
pusha
fstpt
ja
rcl
rcrb
jne
cs
jmp
cmp
inc
and
sarl
adc
stos
cmp
lret
js
push
xchg
push
add
sbb
xor
js
popa
sahf
in
movsb
push
ljmp
jecxz
shrl
ret
xor
iret
mov
testl
fwait
adc
sbb
sub
cmpsb
xchg
push
push
clc
xlat
shlb
inc
inc
sbb
adc
push
insl
jbe
repz
mov
mov
or
mov
stos
jl
dec
dec
outsb
mov
cmp
cmpsb
popf
cld
xchg
cld
add
cwtl
arpl
jp
dec
push
push
cmc
push
ret
idiv
rcr
fsubr
lret
cld
imul
cmc
inc
inc
add
jge
negl
add
dec
jb
adc
mov
lcall
adc
addr16
push
pop
nop
and
int
in
subb
mov
sub
scas
sub
imul
push
mov
loopne
xchg
arpl
xor
mov
je
andnps
mov
test
push
pop
inc
push
push
xchg
fnsave
add
xchg
xchg
out
movb
dec
xchg
sbb
lea
loop
sbb
pop
push
lret
sahf
std
cld
aad
int
cwtl
inc
sarl
push
test
cmp
jmp
clc
outsl
fidivs
adc
mov
aad
insl
popf
sbb
jle
or
add
mov
jg
loope
push
cmp
push
push
mov
mov
or
and
lods
daa
mov
fdivrs
inc
xchg
mov
mov
aad
cmp
mov
int3
jno
mov
sub
int3
pop
fiaddl
cmp
ljmp
test
jmp
inc
loop
or
inc
or
mov
rorl
aam
add
adc
fldenv
xlat
lods
ret
mov
push
fs
xor
dec
xor
jecxz
push
push
dec
pop
fstl
cmp
nop
add
sbb
push
mov
push
mov
xor
cmp
in
daa
repz
sub
mov
inc
push
out
dec
std
xlat
jns
xlat
or
sub
and
loope
test
imull
inc
xor
jo
int
xchg
and
arpl
jo
mov
and
push
mov
fimuls
scas
push
cmp
push
add
sub
mov
icebp
les
jb
jge
mov
dec
mov
bsf
cli
adc
push
or
xchg
pop
pop
ds
daa
cmp
inc
push
ja
sub
xchg
dec
xchg
insl
movsl
sbb
fdivs
ret
andb
mov
push
push
add
mov
scas
mov
scas
adc
loop
mov
and
cld
arpl
inc
cltd
je
mov
jnp
loope
int
out
cmp
mov
outsb
out
mov
mov
mov
sbb
add
jl
arpl
test
jbe
aaa
add
jne,pn
push
jecxz
cli
rclb
and
mov
jmp
dec
popa
mov
mov
in
clc
mov
les
jmp
lcall
outsl
push
pushf
mov
loopne
mov
decb
adc
sbb
xor
test
or
sub
hlt
std
xchg
gs
hlt
lret
cmp
adc
jbe
lret
push
mov
movsl
sbb
xlat
into
out
loopne
mov
mov
cmpsl
arpl
arpl
fdivrp
mov
fucom
int
push
repnz
or
sub
dec
xchg
ja
sti
mov
imul
mov
push
addr16
sbb
pop
sbbb
adc
mov
xchg
daa
mov
mov
xchg
mov
inc
loopne
xor
in
data16
push
sbb
jmp
cmc
shrb
mov
dec
or
jl
popa
inc
inc
addl
xchg
fmul
mov
mov
inc
notb
out
fidivl
pop
push
ljmp
je,pn
pop
add
je
push
inc
push
push
and
mov
in
mov
mov
insl
and
aas
mov
lret
ror
fcoms
xlat
test
jg
dec
xor
fisubrs
adc
jmp
pop
dec
orl
cltd
aam
and
pop
dec
mov
test
dec
jecxz
mov
lods
push
test
les
push
cmpb
in
jp
nop
xor
add
stos
push
mov
js
fisubrl
add
cli
cmp
andl
aaa
pop
jnp
sti
shll
xchg
repnz
nop
gs
mov
cld
pushf
outsl
jp
lea
int
out
xor
aaa
rcrb
xor
xchg
psadbw
pop
rcl
sbb
cmp
rcll
test
inc
lods
cmp
xor
jns
sbb
movsl
hlt
or
inc
std
scas
xor
ret
ja
fs
lcall
mov
call
lds
xchg
push
mov
je
in
sbb
dec
stos
xor
inc
jg
jns
addr16
call
roll
js
pop
jecxz
inc
sbb
jns
cmp
movsb
in
pop
dec
imul
sub
test
fmulp
lret
stos
add
mov
xor
lds
ds
xchg
pop
nop
and
cs
loope
ljmp
out
add
test
xor
repz
xchg
xor
or
ret
push
aas
inc
cld
mov
xchg
fsubs
pop
stos
and
push
frstor
dec
loope
add
repnz
fisttpl
in
mov
xchg
push
xchg
rcrb
arpl
movups
jecxz
cs
mov
fstpt
xor
subb
sahf
mov
int
push
lea
mov
pop
pusha
jo
movsb
xchg
pop
dec
imul
xchg
dec
cs
int
or
hlt
sbb
cmpsb
dec
jecxz
stos
jmp
jbe
mov
xchg
ror
inc
jnp
xchg
inc
jo
push
movsb
mov
jae
rclb
lods
shrb
fld
movsb
pop
pop
mov
push
cmp
sub
sub
fbstp
add
mov
btc
sti
in
ja
sahf
rclb
cmpsb
ss
test
mov
inc
fcom
popf
pusha
xchg
data16
pushf
sbb
sbb
jmp
sbb
fistpll
jmp
scas
jl
dec
imul
cltd
lea
jae
in
jo
mov
sub
into
addl
mov
in
jmp
je
fs
jbe
cwtl
loopne
mov
in
mov
push
scas
push
xor
xlat
and
mov
push
push
sub
mov
xchg
int3
jge
sub
mov
daa
sub
movb
shrl
mov
dec
andb
mov
es
mov
ja
xlat
push
leave
add
push
pop
ss
shll
lods
mov
in
pop
js
dec
fnstcw
pop
stos
jne
pushf
adcb
xchg
lret
mov
or
jne
mov
adc
fsub
inc
cmp
jle
push
shlb
ja
inc
std
fsubr
xchg
into
add
and
lahf
mov
test
cwtl
call
lods
push
outsl
cmp
shrb
test
test
add
inc
xchg
pop
or
jae
xor
aad
movsl
loop
xor
lock
inc
pop
ss
xchg
xlat
sbb
rolb
cmc
pop
aaa
lret
in
cmp
das
and
jmp
sbb
mov
clc
ljmp
sub
aas
sarb
aaa
enter
mov
test
fbstp
pop
outsb
xor
lods
icebp
add
fadds
sahf
cmp
in
outsb
mov
fcoml
ss
scas
leave
mov
mov
enter
mov
push
imulb
cmp
dec
cmp
sub
xchg
mov
pop
int
dec
sahf
xchg
int
test
xchg
scas
xor
pop
jns
add
xchg
dec
in
mov
xchg
add
sarb
xor
mov
xor
pop
scas
sub
aas
xchg
inc
pop
mov
or
xchg
mov
es
fsubl
mov
js
iret
sbbb
insb
mov
adc
or
xchg
add
ret
imul
push
sbb
insb
stos
pop
cltd
lock
sub
fdivrs
decb
aad
xor
aad
push
mov
inc
addr16
lds
dec
pop
pop
dec
sub
int3
test
movsb
or
repz
mov
pop
stc
ret
loop
fistl
push
or
sub
dec
push
cli
and
lret
outsb
sarb
icebp
sbbb
incl
push
push
popa
in
loopne
mov
pop
ds
mov
in
or
ret
fnstcw
fldenv
and
sub
insb
movsl
setno
popa
adc
test
cmpsb
cmp
out
cmp
shll
sbbb
out
mov
inc
mov
lret
ficoml
jb
loop
mov
pop
add
pusha
cmpsb
sub
pop
mov
mov
lods
rcrl
cmp
mov
inc
add
aaa
roll
dec
xorb
call
and
mov
stos
pop
les
mov
cmp
clc
push
jno
dec
add
xlat
ret
sahf
push
pop
andl
std
stos
push
fidivs
sbb
add
flds
popa
and
adc
mov
jle
clc
test
mov
shl
dec
in
pushl
enter
and
fdivs
xor
mov
lcall
or
popl
adc
jnp
xor
movsl
mov
stos
loop
int3
jno
aam
xchg
in
xchg
ljmp
sbb
mov
dec
mov
cli
lret
or
lret
cltd
jae
push
sub
and
repz
jo
cmp
inc
inc
adc
cltd
or
ror
fisubl
leave
rcrl
scas
imul
adcb
hlt
jae,pn
push
mov
sbb
stc
or
mov
adc
in
mov
mov
jl
and
pop
xchg
rcrb
inc
nop
push
jge
and
sbb
out
xchg
int
mov
pop
xchg
lret
sub
loop
mov
sbb
movsb
add
in
and
mov
fs
mov
inc
out
push
dec
lds
cld
or
pop
mov
movl
cmp
lea
ficoml
inc
mov
pop
fildl
or
and
leave
cwtl
xchg
adc
shll
daa
enter
arpl
loop
jno
jecxz
or
jp
cmp
and
outsl
jge
cmpsl
push
cli
xchg
mov
or
cmc
inc
lahf
das
inc
pop
and
fsubrp
push
ss
push
mov
out
imul
divl
pop
lea
inc
cli
push
shlb
arpl
testl
lcall
aas
mov
push
fstp
mov
cmpsb
stc
xor
adc
add
insl
int3
testb
pop
xchg
add
push
popf
fwait
mov
mov
ret
aas
insb
xchg
les
pop
inc
int
nop
popf
mov
mov
stc
repnz
adc
inc
xchg
mov
sarb
sahf
orb
gs
int
cmp
dec
or
iret
lods
adc
xchg
dec
pop
xor
cmp
xchg
mov
es
sub
shll
divps
xchg
scas
hlt
lahf
lods
pop
test
cmpsb
jae
and
andl
dec
or
pop
push
xlat
int
mov
push
lea
cmp
inc
lret
pop
js
fdivp
jnp
mov
imul
inc
and
add
add
mov
loope
cs
jge
jecxz
mov
mov
sbb
fimuls
add
fildl
dec
imul
cwtl
movsb
movsl
jg
inc
leave
and
xchg
out
adc
mov
xchg
and
ret
add
aad
insb
cmp
push
pop
mov
xor
repnz
xchg
mov
sub
aad
xchg
call
adcl
cmp
or
xchg
imul
fwait
mov
insb
sub
testb
jl
mov
dec
jns
jns
sbb
jg
out
rorb
pop
dec
xchg
int
inc
insl
repnz
cmpsb
outsl
mov
sbb
in
sahf
clc
mov
imul
mov
pusha
and
imul
or
fbld
or
xchg
rorb
mov
jl
pop
add
mov
or
ficoms
xor
aas
sbbb
or
sbb
fistps
sarb
mov
lea
imul
adc
push
je
or
push
repz
cmp
or
rcll
adc
lret
popa
add
mov
rorb
pop
ja
pop
call
call
fidivs
js
inc
mov
push
insl
stc
nop
xor
cltd
sbb
push
jecxz
movsb
and
imul
fldenv
lcall
and
jns
fld
std
pop
push
in
imul
inc
negl
mov
mov
push
loop
movsl
and
inc
ffreep
jnp
cs
in
insl
insb
gs
dec
sar
sbb
fimuls
in
fwait
and
xor
sub
in
test
test
pop
insb
sub
insl
testl
mov
outsb
or
scas
das
xor
mov
lods
and
push
jb
mov
xor
pop
jnp
cmpsb
pop
addb
mov
jb
mov
push
loop,pn
add
push
xchg
push
xchg
lds
stc
lods
orl
sbb
arpl
push
jge
rcrb
aas
or
sub
testl
negb
mov
adc
movb
negb
out
jne
jg
adc
pop
insl
enter
outsl
dec
adc
cmp
aad
jae
imul
icebp
and
bound
jnp
bound
push
outsl
pop
cmp
popf
jg
push
lretw
repnz
sub
push
xchg
les
outsl
cmp
call
dec
insl
repz
fstpl
addr16
add
lret
fld
mov
fstl
xchg
rorl
xchg
aad
lods
jns
shlb
sbb
outsb
ret
sub
dec
je
add
cs
js
rcr
iret
lock
and
inc
mov
pop
xchg
mov
cwtl
sti
mov
insl
sub
jbe
int3
mov
stos
add
out
daa
adc
out
out
in
ja
gs
loop
leave
sahf
mov
push
push
push
rep
into
inc
cmp
scas
sahf
xor
cmpsb
scas
nop
or
pop
cmpsb
jg
fiaddl
filds
fsubrs
call
dec
pusha
jge
mov
cli
inc
sub
push
mov
push
or
dec
stc
or
adc
out
sbb
adc
jne
movsb
fwait
xchg
and
dec
cmp
sbb
insl
jnp
mov
inc
ret
fstpl
nop
in
test
mov
ret
pushf
testb
mov
pop
stos
or
and
cwtl
daa
hlt
mov
movsb
mov
mov
or
idiv
aaa
xlat
xor
xchg
in
push
fsubl
insb
xchg
push
mov
les
mulb
addb
stc
shrl
mov
out
inc
xor
push
cmpsl
cmpsb
xor
stos
sti
jno
adc
repz
xchg
and
ja
lock
mov
loope
lcall
push
sub
push
ret
inc
mov
aas
xchg
jl
adc
sub
subb
adc
jno
orl
mov
mov
mov
clc
adc
movsl
push
imul
xchg
imul
jo
pop
addl
adc
cmc
sbbl
inc
push
or
pop
xor
mov
popa
inc
cmpsb
orl
imul
xchg
dec
sbb
mov
rcrb
incl
cmpsl
push
roll
adc
mov
into
push
jp
fdivrl
jo
dec
jnp
cmc
stos
jle
scas
sarb
mov
popa
sbb
adc
ja
int3
dec
aad
les
lcall
push
out
loope
xor
insl
cld
fisttpl
mov
les
in
jge
adcb
cwtl
pop
ss
lret
cli
dec
imul
rorl
idivl
fs
lods
cmpl
cld
out
scas
push
xchg
jbe
int
decl
icebp
push
enter
cs
jb
addr16
imul
cld
loop
in
and
sarl
cmp
popa
int
jns
mov
movsl
or
mov
in
and
inc
ds
xlat
data16
and
xchg
dec
out
cmp
mov
lcall
and
hlt
flds
add
sub
cwtl
push
icebp
ljmp
fdivp
popf
sbb
add
addb
pushf
insl
pop
xchg
sbb
or
test
out
jg
repz
xor
fsubp
fdivl
jno
and
push
movsb
jg
out
xchg
jg
fdivrl
outsl
add
insb
dec
xor
push
lea
push
xchg
popf
lods
fs
pop
pushf
jne
push
outsl
jl
stc
lret
xchg
jle
fwait
sbb
jge
sub
fmuls
lahf
jmp
pop
insl
mov
popa
mov
jo
aaa
sbb
xor
add
into
push
int3
aad
dec
mov
jge
push
and
xor
mov
lret
in
dec
mov
dec
cld
dec
jp
sbb
or
fucomp
mov
sbb
jle
or
in
jle
sti
popf
outsl
jecxz
jmp
push
icebp
je
xchg
addr16
or
or
jae
rcrl
sbb
pop
jl
mov
push
push
jle
outsb
in
iret
and
popa
sub
aas
in
rorb
pushf
adc
push
les
push
repz
fildl
push
xor
mov
int3
shrb
mov
mov
jno
aas
lcall
and
jge
dec
mov
je
scas
sahf
out
sub
dec
mov
dec
sub
add
ljmp
or
xor
sbb
aam
out
and
mov
push
mov
hlt
cmp
xor
sub
shlb
inc
mov
dec
xchg
addr16
sub
out
pusha
pop
adc
xchg
test
cltd
mov
cmp
inc
and
fstp
in
test
fdivrl
repnz
cmp
gs
sub
lcall
sub
cmpsl
push
mov
ds
pop
hlt
mov
sbb
cs
or
inc
xchg
test
sub
and
mov
xor
movsl
loop
insl
int3
in
mov
fistps
out
loope
and
ss
bound
sub
lea
xchg
aad
jns
cmpsb
dec
aad
xchg
or
icebp
sti
add
insl
das
push
rcrb
xor
int3
xchg
jp
mov
ja,pt
movsl
scas
int
mov
jmp
xchg
outsl
or
out
add
dec
out
xlat
pop
xor
xlat
mov
repz
sub
jle
sbb
jae
aam
push
iret
pusha
movsb
pop
fsubr
dec
jp
negb
dec
es
daa
inc
mov
sub
push
sbb
sub
lds
bound
frstor
xchg
insl
int
fidivs
sbb
jnp
cmp
aad
hlt
push
adc
pop
popa
sub
out
inc
cmpsl
jb
repz
fsubrs
dec
sub
loopne
adc
dec
test
jae
xor
lods
mov
adc
cwtl
out
lods
loop
rcrl
test
cmp
dec
decb
jns
cmp
repz
lea
in
add
inc
loopne
adc
pop
xchg
pop
push
divl
aad
inc
adc
outsl
jge
push
fidivl
ja
in
call
into
mov
sbb
push
push
loop
jecxz
mov
adc
rcll
addb
popa
push
mov
and
or
mov
and
es
out
in
push
xchg
push
scas
cmp
test
dec
dec
adc
shll
cmp
mov
lret
pusha
mov
aaa
leave
fstl
mov
mov
xchg
jl
mov
fnstsw
add
pop
cmp
xor
add
mov
cmpsl
pushf
cmp
insl
inc
dec
inc
pusha
mov
stos
dec
mov
test
gs
fcmovbe
cld
inc
dec
push
addr16
je
mov
std
int
or
dec
in
jbe
or
sub
scas
jbe
adc
ret
pop
mov
in
pop
jp
popf
adc
mov
repnz
mov
neg
ss
lock
xchg
inc
and
ficoms
repnz
fists
scas
psrlw
ss
imulb
bound
xchg
cmpsl
ja
mov
xor
mov
negb
addr16
mov
xchg
hlt
nop
outsb
sahf
mov
js
sbb
xchg
gs
mov
mov
shl
adc
sub
sbb
jle
push
popf
jecxz
lcall
cld
fs
adcl
lock
and
je
and
in
sub
rcll
je
pop
out
pushf
pause
jo
hlt
dec
repnz
cwtl
cmp
dec
or
daa
insb
mov
sarb
push
xchg
stos
sti
push
cmc
out
add
jno
xchg
xchg
sub
pusha
add
mov
mov
fwait
lods
cmp
add
popa
pop
inc
cmp
arpl
mov
pop
dec
cltd
imul
or
adc
out
pop
movsl
jp
push
in
shlb
push
ja
fnsetpm(287
lds
mov
rcr
rcr
lods
es
or
or
xchg
movsb
xor
ffreep
and
scas
xchg
outsb
mov
mov
aaa
pop
aam
cmp
out
out
enter
dec
push
cmp
xor
cld
fcoms
push
repnz
cmc
out
scas
push
jnp
in
test
fldt
lret
dec
or
mov
pop
add
shll
repnz
lret
jge
sub
fdivrs
sbb
push
cmpxchg8b
fnclex
imul
dec
add
xor
mov
out
cli
iret
cld
lods
or
lea
mov
mov
cmp
fcom
cli
stos
push
adc
lea
push
iret
push
push
pop
clc
xor
enter
push
mov
fwait
xchg
negl
addl
fidivrl
sub
push
inc
mov
fsubrs
sub
push
lcall
pop
adc
repz
cmpsb
pop
bound
and
dec
fwait
push
cmp
sub
jmp
repz
sub
push
leave
dec
test
loopne
mov
pop
cmpsl
loopne
jge
sbb
aad
add
aaa
inc
pushf
loopne
fsubl
jmp
out
and
inc
mov
shlb
jbe
lcall
push
inc
mov
jle
lret
test
subb
scas
popa
imul
xchg
gs
jl
hlt
cmpsb
inc
pop
loop
inc
test
cmp
inc
inc
sub
xor
dec
adc
cmp
and
gs
stos
or
cmp
aas
push
popa
shll
add
repnz
add
cmp
mov
sub
pop
js
cmc
je
xchg
aas
cmp
jl
adc
cmpsl
stos
lods
or
shlb
inc
ret
xor
inc
adc
inc
push
xchg
xor
dec
mull
cwtl
and
mov
push
inc
inc
lea
jmp
cmpsl
and
mov
xlat
imul
xlat
in
sahf
pop
gs
cltd
stc
pop
cmp
lock
xorb
in
pcmpeqb
jo
xor
dec
popf
lods
pop
movsl
call
dec
ret
loop
xorb
jne
fildl
sbb
dec
outsb
sarb
add
jae
push
daa
ret
ds
mov
or
insb
xlat
bound
sti
cmp
inc
inc
pushf
bound
add
jo
xchg
push
test
clc
jns
inc
movups
in
cmp
popf
testl
fidivl
pop
cmp
lret
ss
out
sbb
cmp
add
imul
jb
in
jle
mov
xor
pop
inc
lret
lret
inc
adc
xor
pop
sub
and
rcl
sbb
ljmp
mov
icebp
ss
adc
sti
adc
sti
fisttps
mov
pop
sbb
dec
divl
test
popa
outsl
ja
ret
mov
jecxz
std
lahf
data16
mov
cmp
bts
lahf
add
push
jge
rol
je
in
pop
xchg
fnstcw
aas
fidivl
jg
sbb
pop
inc
stc
aad
sbb
push
pop
jno
jnp
push
xchg
mov
cmp
sub
inc
push
mov
fs
mov
sbb
add
mov
cmpsb
push
hlt
cmpsb
xchg
aam
pop
dec
dec
test
xchg
fsts
andl
cwtl
inc
sub
cmpsb
dec
fnstcw
lcall
mov
mov
pop
lea
dec
add
mov
int3
mov
outsl
mov
mov
dec
stos
pop
out
jae
mov
adc
sti
js
add
out
aad
mov
rorb
xchg
sbb
push
xchg
xor
sub
jno
sbb
dec
aad
sbb
je
pop
jecxz
insl
sahf
mov
fidivl
cmpb
xor
cmpsl
sbb
incl
sbb
testb
inc
pop
xchg
xor
sbb
clc
inc
or
xor
mov
nop
pushf
and
lcall
xchg
or
cs
nop
insl
in
xchg
test
fwait
ret
loopne
pop
cmp
cmp
pop
mov
fcompl
movsb
adc
mov
mov
fiadds
popf
mov
inc
data16
out
enter
or
mov
jns
sbb
daa
arpl
test
in
inc
orl
mov
push
xor
inc
xchg
cmp
sbb
inc
jmp
loopne
mov
adc
fisubrl
cmp
mov
lret
sub
xchg
lea
jae
mov
xchg
dec
cmp
inc
xor
adc
jge
dec
js
loope
cmpsl
mov
mov
xlat
pop
std
xor
pop
rclb
adc
test
in
aad
movsl
dec
jmp
inc
imul
ror
loop
stc
popf
int3
sbb
and
fistps
pop
insl
fstps
adc
ja
ja
pushf
xchg
add
cmp
frstor
pop
ret
dec
ds
aas
jbe
pop
stc
mov
xchg
int
ret
jl
jno
into
lret
icebp
jmp
xor
lods
pop
out
dec
aad
mov
loope
pop
movswl
jbe
add
arpl
mov
jmp
mov
mov
jmp
js
ret
aaa
lods
cmpsl
andl
fucomip
lret
out
pop
lods
enter
inc
jns
cwtl
test
mov
xlat
jns
pushf
pop
inc
pop
mov
retw
xchg
movsl
bound
mov
loope
test
pusha
add
dec
into
pop
loope
hlt
test
xchg
mov
jp
sbbl
not
inc
mov
jmp
insb
or
je
adc
cld
xlat
add
cmp
fdivrs
sbb
aaa
fcomip
jg
dec
cmc
push
and
shll
cmp
cmp
push
and
data16
pop
dec
add
sbb
popf
jb
mov
je
mov
xor
cmp
sub
mov
sbb
test
sub
pop
xchg
jne
xchg
jl
jbe
adc
jle
fwait
pop
pusha
in
or
scas
or
rorb
fs
mov
mov
insb
out
sbb
inc
mov
dec
sbb
inc
cmpsl
dec
xlat
popf
test
and
roll
in
stc
xchg
sbb
xchg
enter
xchg
pop
lock
pushf
dec
add
call
mov
mov
pop
inc
inc
popa
xchg
xor
gs
imul
sar
add
cmp
dec
xor
push
pop
mov
in
ljmp
xchg
xor
cmpsl
out
mov
cltd
push
loope
jl
xchg
out
sub
cmp
data16
stc
in
xchg
ret
pop
repnz
pop
dec
push
mov
stos
pushf
mov
sbb
sti
dec
add
push
es
fcmove
sub
and
sahf
fisubs
imul
testl
pop
pop
or
jge
movb
pop
pop
lcall
mov
sub
ja
mov
mov
in
lea
push
out
dec
sub
mov
lret
and
sbb
sub
adc
lret
adc
imul
int
fs
pop
scas
dec
aad
and
jmp
jae
push
jae
inc
ja
pop
xchg
cld
fidivs
xchg
sbb
pop
neg
cmp
xor
aas
mov
lcall
out
push
in
test
test
popa
in
fisubl
leave
pop
rorb
push
and
sbb
lret
imul
aad
and
and
shlb
out
dec
subl
inc
sub
jge
ficoms
ljmp
xor
cmp
fsts
bound
ret
mov
ds
mov
pop
xchg
test
xchg
int3
mov
mov
dec
cmc
mov
dec
dec
loope
or
sub
sub
cmp
mov
and
lock
rclb
jno
dec
sbb
add
cmp
jno
outsb
cmp
loope
int
test
and
hlt
test
inc
inc
xchg
sbb
add
ret
lods
scas
movsl
cmpsl
inc
inc
pushf
inc
cmpb
jae
jae
popf
enter
in
sub
pop
mov
jp
add
and
add
adc
cli
xchg
add
jmp
xor
mov
jg
fcmovu
lcall
sub
rcrl
add
and
je
dec
bound
cmc
out
aad
push
leave
icebp
cmc
int3
das
push
inc
stos
sbb
sub
mov
pop
clc
mov
dec
push
and
adcl
xchg
or
shrb
notb
and
mov
xchg
xor
fadds
mov
sub
stos
pop
cli
insb
dec
out
mov
push
clc
adc
ret
sbb
mov
cld
je
aas
fldenv
pop
outsb
js
mulb
sbb
inc
aam
and
sahf
add
xchg
cmp
lods
push
aam
ja
push
pop
xor
dec
lea
lret
popa
xchg
mov
enter
and
fisttpl
or
lret
outsl
push
arpl
shr
sub
jno
subb
sub
pushw
data16
mov
adc
push
scas
and
sub
rcrl
lret
loop
popa
xchg
ret
cmp
data16
mov
xchg
push
ret
add
gs
push
xchg
xchg
subb
call
cs
jecxz
adcl
mov
jmp
movsl
shl
pop
pop
and
arpl
mov
fs
lds
xor
test
sub
mov
inc
stos
pop
mov
mov
cmpsw
in
jnp
mov
rcl
repnz
xor
daa
loope
lret
pop
js
xchg
addr16
sbb
pop
jo
add
lea
cmp
dec
popf
and
or
std
std
mov
cmpsl
push
mov
adc
mov
leave
mov
adc
jmp
mov
inc
addb
int3
xchg
fwait
mov
mov
subb
jne
test
jmp
cmp
or
insb
pop
mov
lock
pushf
pop
scas
clc
or
xor
rorw
mov
mov
mov
ss
ret
xor
cld
mov
lods
dec
or
xchg
push
addr16
sub
fistpll
sbb
and
jmp
pop
cwtl
adc
stos
adc
pop
sbb
jb
cwtl
lcall
test
inc
sahf
in
xor
cmpsb
xchg
in
jbe
mov
mov
mov
loope
leave
scas
adc
aam
mov
shll
lahf
pop
out
movsb
add
mov
sbb
mov
jcxz
lods
xchg
fidivrs
inc
lahf
cld
or
popf
adc
push
mov
adc
and
rep
cmp
jo
pop
cli
mov
mov
addr16
stos
out
cmpl
xlat
add
cli
lea
xor
test
mov
cwtl
push
gs
movntq
add
sub
and
subb
sub
mov
bound
mov
adc
pop
test
stos
aad
stc
sbb
add
icebp
aaa
cmp
jecxz
ds
hlt
add
lret
xor
cmc
xchg
lods
clc
filds
cmp
rcrb
cmp
xor
lcall
or
jnp
bound
into
fmuls
sti
xor
xchg
jnp
ss
bound
add
mov
loope
pusha
cmp
not
mov
clc
int3
sub
jg
lahf
and
mov
hlt
das
std
dec
les
pop
mov
jecxz
adc
mov
sbb
daa
lods
imulb
sub
sahf
or
out
ds
mov
and
jecxz
push
pushl
pop
sbb
lret
shlb
stos
cmpsb
lcall
or
push
push
test
mov
lods
loop
leave
mov
mov
pop
repz
adcl
jne
sub
test
sbb
push
xchg
insb
jmp
shll
push
out
ja
dec
scas
sbb
xor
iret
js
fildll
jnp
outsl
rcl
orl
out
add
cmp
mov
push
push
cmpsb
aaa
cmp
sub
or
mov
push
pop
xor
stc
sub
hlt
orb
adc
ret
adc
mov
mov
xchg
imul
fidivs
pop
mov
dec
ret
fidivs
mov
mov
iret
dec
mov
pop
and
leave
sub
into
xor
xor
aaa
push
mov
or
ficomps
mov
into
mov
imul
leave
pop
adc
outsl
push
xchg
test
fcompl
rorb
pop
mov
pushf
mov
stos
and
push
into
or
jle
cmpsl
push
mov
mov
or
movsl
adc
add
fbstp
add
push
popf
std
mov
rcrb
xchg
mov
loope
dec
jp
adc
subb
mulb
lcall
jl
ljmp
fstpt
incl
je
mov
jl
jno
es
jns
pushf
jg
nop
cmp
inc
out
iret
pop
add
insb
outsl
lods
xor
xchg
lods
push
call
cmp
jb
xor
test
lret
dec
or
mov
in
outsl
dec
repz
inc
cld
fadds
adc
xor
repnz
push
adc
popf
rolb
cwtl
pop
lret
jl
pop
movq
jns
movsb
sbb
shr
dec
push
nop
mov
pop
stc
push
out
sti
mov
ret
popa
xorb
pop
inc
rcrb
inc
adc
es
sbb
sahf
add
js
cs
cmc
cltd
enter
test
aam
mov
or
add
xor
into
stos
out
jns
mov
pop
cs
sbb
lcall
jge
call
push
mov
je
aam
push
mov
fsubr
mov
in
clc
cltd
adcl
push
cld
or
imul
pop
enter
or
leave
iret
jecxz
out
mov
es
sbb
test
pop
mov
in
ss
loope
xlat
in
imul
fnstcw
sbb
js
loopne
push
jmp
push
cld
inc
ret
pop
dec
shr
rclb
mov
jp
fisubl
sub
hlt
mov
out
xchg
mov
push
mov
cld
out
mov
repz
pop
xchg
stos
xor
test
dec
pushaw
pop
sub
lods
sarl
lret
enter
sub
sub
test
add
mov
jg
adc
mov
jmp
dec
jbe
sub
pop
mov
hlt
pop
mov
jns
lds
mov
xor
push
xor
scas
or
add
or
inc
lds
loop
pop
cmpsl
pop
arpl
popf
lea
sub
inc
lahf
cmc
movb
mov
push
js
test
sub
enter
xchg
sub
cli
mov
iret
fs
loopne
insl
jne
or
add
insb
ret
jl
add
mov
or
test
iret
or
test
and
out
pop
adc
adc
add
sbb
sub
mov
xlat
cmp
push
adc
inc
sahf
add
aas
pop
div
cmpb
dec
or
test
cmp
bnd
aaa
adc
cmpsb
cmc
int3
lcall
andb
jmp
divb
xor
cld
hlt
lahf
popa
pop
pop
adc
jge
cmp
nop
js
pop
sti
movsb
addl
add
xorb
sub
xchg
sti
popa
jg
sar
outsb
dec
jp
mov
test
add
fnstsw
clc
mov
xor
dec
push
stos
ja
mov
push
jecxz
stos
movsl
add
jnp
cmp
fcmovbe
movsl
and
ret
das
rolb
mov
pop
adc
pop
mov
aam
pop
cltd
aad
xor
lods
inc
xchg
arpl
push
lret
orb
and
stos
sti
leave
and
ljmp
test
pop
mov
loopne
out
sbb
arpl
test
mov
jnp
in
push
stc
push
cmc
rcr
dec
dec
push
in
add
gs
inc
je
mov
pop
incb
lock
inc
aam
lods
and
sbb
fdivl
icebp
dec
push
jle
sub
dec
fimull
out
pushf
test
outsb
and
sbbb
or
add
ljmp
sbb
cwtl
lahf
mov
jo
push
push
aad
in
and
jne
pop
stos
test
lcall
scas
push
mov
int3
js
push
mov
cmp
xor
mov
push
adc
lret
and
call
ficomps
cmc
mov
inc
aam
pop
cmp
scas
push
imul
xchg
xor
cmp
clc
push
push
jge
in
push
jns
and
dec
ljmp
stc
scas
rorl
mov
dec
and
mov
fadd
mov
std
sahf
orl
xor
insb
xchg
dec
imul
out
and
mov
dec
dec
adc
push
jp
push
mov
ljmp
add
inc
sar
ss
or
mov
daa
sub
rorb
mov
xchg
pop
insl
xlat
ret
push
dec
mov
xor
lret
aaa
lods
jge
mov
aam
push
mov
jg
les
xchg
daa
or
gs
push
js
test
pop
stc
xor
mov
sbb
subb
jp
and
enter
lods
outsl
mov
adc
adc
jbe
mov
cmp
sbb
js
rorl
xor
sbb
dec
mov
movsb
bound
sti
mov
cmc
mov
outsl
mov
outsb
pusha
or
fsubrl
pop
adc
popf
ljmp
jp
xchg
fwait
adc
fldenv
or
push
or
mov
loopne
lcall
mov
ret
out
in
push
or
arpl
mov
xchg
cmp
test
mov
and
ret
xchg
dec
add
lods
and
sahf
in
pop
jge
pushf
mov
mov
mov
dec
stos
imul
xchg
mov
mov
cltd
test
mov
testb
jb
in
shrb
mov
or
cmpl
fidivl
push
fwait
dec
pop
insl
adc
lret
xchg
adc
cmp
mov
pop
jno
push
sar
ret
jmp
push
and
mov
fld
dec
mov
jns
insl
aaa
dec
push
adc
jbe
or
adc
jg
cmc
sub
je
adc
mov
fs
and
mov
jb
cmp
inc
mov
add
pop
mov
in
push
add
push
adc
fadd
push
stos
in
or
enter
lcall
je
add
xor
and
sub
dec
jle
mov
stos
les
adc
pop
aaa
ds
sbb
cmp
sbb
cmpsl
add
inc
add
aad
repz
not
mov
jno
clc
mov
xchg
mov
insl
jne
xchg
sbb
testl
movsl
decb
es
jbe
aad
fadds
cmc
test
ljmp
fistpll
add
mov
test
dec
inc
subl
push
mov
jl
outsl
dec
outsb
dec
je
jmp
cltd
push
xchg
adc
pop
ss
push
ret
xchg
je
pushf
mov
adc
mov
pop
mov
ret
lock
loopne
aaa
jecxz
mov
movsb
scas
das
lcall
adc
in
adc
xchg
or
bound
and
cs
enter
testb
jae
mov
in
adc
mov
or
lods
fs
movsl
mov
jno
mov
jg
daa
mov
addr16
lret
shr
push
jecxz
cwtl
stos
add
xlat
out
bnd
cmp
xchg
dec
sub
mov
fs
sub
inc
or
mov
adc
pusha
or
cmp
mov
test
lods
out
xor
mov
or
or
stc
out
push
push
hlt
add
mov
xchg
jg
xchg
or
enter
mov
pushw
add
aam
jp
push
xchg
adc
sarl
insb
jno
mov
ret
imul
inc
lahf
and
call
push
dec
jl
jno
inc
in
pusha
push
mov
sbb
jecxz
mov
mov
repz
fs
lds
loop
aad
icebp
into
sub
add
mov
mov
pushf
sbb
stos
rclb
addr16
fisttps
ret
push
adc
add
add
adc
inc
push
or
out
fwait
loop
cwtl
dec
movsb
insl
cltd
movsl
jecxz
jp
clc
stc
mov
inc
dec
jmp
fldcw
daa
and
jmp
imul
push
pop
jmp
inc
int
outsl
jg
jo
clc
push
sub
dec
dec
out
cmc
push
repnz
and
and
mov
add
sbb
js
xor
out
aas
mov
test
jge
fdivs
aam
xor
add
cmc
and
jne
mov
ds
push
mov
or
lock
pop
dec
aaa
iret
orb
insl
push
add
sub
sub
or
in
test
fisttpll
xor
jp
jp,pn
enter
call
divb
dec
and
addr16
mov
lock
addb
sub
pop
sbb
or
aam
mov
mov
cld
mov
or
add
call
in
adc
xlat
mov
int
mov
xchg
inc
cmp
cmpsb
pop
jne
loopne
mov
repz
adc
stos
shr
pop
push
pop
cmp
test
xchg
jmp
ds
jg
fnstenv
push
xchg
add
inc
push
add
push
fisttps
sti
jns
push
jp
mov
clc
mov
divl
pop
add
imul
imul
xchg
push
mov
sti
xchg
inc
xor
cmp
adc
dec
fiadds
jae
nop
fistps
nop
mov
adc
repnz
mov
fwait
jae
pop
sbb
mov
jecxz
icebp
loope
mov
sbb
aaa
inc
mov
icebp
test
stos
out
push
roll
and
ficoml
mov
cmp
dec
pushf
ss
adc
and
xchg
aam
das
ffreep
sbb
fildl
xor
xor
pop
out
or
popf
inc
push
fsubl
rclb
jb
pop
push
aas
imul
idivb
fnclex
push
pop
ja
dec
or
sbb
pop
jge
adc
sbb
movsb
sbb
push
jns
icebp
sub
pop
jle
adc
mov
mov
add
addl
fldpi
movsl
in
not
cmpsb
push
ss
sbb
aad
cs
pop
imulb
push
xor
sahf
adc
jg
cwtl
shlb
aas
xlat
xchg
xor
add
rcrl
xchg
decl
repnz
adc
outsl
jmp
daa
test
or
pop
mov
pop
push
dec
inc
lahf
jb
rol
lods
cli
cmp
mov
shlb
int
cwtl
xor
add
mov
outsl
mov
stos
rclb
scas
hlt
sbb
lods
dec
frstor
jmp
mov
mov
cmpb
mov
and
out
mov
loope
push
and
lahf
dec
cmp
in
pop
fsincos
mov
pop
cld
mov
or
sbb
scas
pop
cmp
cmp
sbb
movsl
daa
xor
pop
mov
aas
mov
sbb
inc
inc
shrl
sub
lret
call
sti
out
scas
sbb
sub
xchg
jae
mov
mov
pop
sbb
ror
jle
pop
lea
add
andb
shll
aam
nop
mov
add
jp
xchg
mov
pushf
sti
adc
jno
cmp
mov
pop
outsl
pop
idivl
xor
push
sbb
lds
jno
xor
mov
iret
adc
loop
iret
fsubs
pop
xor
xchg
mov
out
popf
sbb
xchg
add
push
xor
into
ret
push
add
rcrb
mov
popa
dec
je
jo
inc
cs
mov
std
cmp
add
sti
ret
cmp
push
daa
int3
xor
push
gs
clc
cmp
cmp
adc
push
xlat
call
sbb
scas
data16
xor
mov
inc
pop
mov
inc
push
cmpsl
and
push
lds
scas
loopne
dec
fs
fisttps
adc
and
and
bound
sbbl
std
negb
pop
adc
mov
jnp
jbe
cwtl
rorb
lock
sbb
cmpsl
xor
push
pop
pop
mov
push
fs
cmc
es
test
in
push
sarl
repz
popa
inc
daa
stos
call
push
jnp
inc
inc
imulb
jns
push
fdivr
mov
loop
xor
or
or
lahf
jecxz
mov
jecxz
add
push
out
lea
jl
popa
xor
lret
or
mull
bound
mov
or
add
mov
xor
cmpsl
int3
and
cmpsb
cwtl
push
aad
loope
lcall
into
test
pushf
in
mov
push
jns
jg
test
leave
ret
and
cmpsb
sub
sbb
xchg
lock
sub
icebp
cld
subl
aam
scas
jne
insb
lea
cmpsb
push
push
daa
mov
cmp
fcomp
xchg
call
ficomps
lea
dec
iret
xor
dec
les
or
lock
push
push
adc
dec
dec
push
sbb
or
inc
pop
inc
iret
mov
mov
push
push
pop
push
xor
lret
in
or
jb
fidivrs
xor
jb
cld
mov
sti
test
out
jmp
xor
lock
jge
in
lahf
adc
aam
imul
lcall
jl
cltd
cmc
stc
outsl
mov
ret
mov
mov
nop
mov
cmp
sub
or
in
out
ret
xor
ljmp
and
inc
cld
lret
jle
or
icebp
scas
mov
sbb
js
push
xlat
push
lock
mov
fs
push
inc
or
pop
mov
or
imul
pop
cmp
xor
sbb
xor
and
mov
dec
hlt
rolb
fsubrl
stos
shll
dec
push
mov
cmp
sub
in
dec
test
adc
lret
mov
lds
call
xor
xor
loopne
shll
mov
jge
fdivrs
push
cs
cli
jnp
cltd
and
push
or
cmovp
push
cltd
push
push
cwtl
int3
xchg
cmp
lods
insl
loope
ljmp
pop
aad
xchg
sbb
dec
aam
pop
ja
pop
push
cmp
mov
xor
mov
je
lcall
inc
ret
push
pop
std
mov
mov
shlb
je
movsb
sbb
push
pop
aad
insb
mov
imul
stos
hlt
loop
push
sbb
mov
or
push
mov
lret
dec
enter
data16
outsb
xlat
dec
lods
fwait
test
sub
pushf
mov
adcb
xchg
mov
add
push
pop
out
lcall
stos
aaa
and
ljmp
add
dec
cld
adc
out
insb
insl
mov
test
cmpsb
fstl
jmp
into
pop
lea
ss
dec
push
jne
push
dec
mov
push
cli
xchg
mov
xor
xor
lods
push
in
mov
xlat
jge
movsl
lret
rcl
cmp
push
ja
and
adc
mov
or
shl
fstl
pop
xchg
fs
mov
fists
pushf
out
xor
mov
mov
stc
mov
dec
test
lret
es
inc
xchg
push
adc
ret
je
push
push
into
adc
out
add
pop
cmp
or
cmp
lcall
lret
imul
inc
dec
sub
sti
add
leave
jae
push
xchg
rcl
fldl
cltd
leave
mov
lods
jecxz
dec
aaa
jp
ficompl
push
movsl
pop
mov
dec
push
xor
pop
in
mov
notl
pop
movsb
mov
cmpsb
int
xchg
clc
or
add
push
and
aam
mov
push
outsl
or
push
popa
xor
stos
push
cld
jne
cmp
mov
pop
jne
fs
notl
repnz
ljmp
cmp
inc
fimull
mov
cwtl
inc
in
sub
pop
lds
int3
loop
mov
lahf
or
js
aaa
pushl
cmp
pop
fisubrl
lods
mov
cld
xchg
push
mov
imulb
in
push
movsb
push
mull
rorl
mov
dec
in
imul
add
pop
jb
add
sub
push
mov
push
sub
mov
dec
pop
lcall
or
nop/reserved
jae
or
mov
mov
popa
aad
out
je
outsb
shrb
es
pop
adc
mov
mov
mov
inc
addr16
dec
sar
mov
pop
int
movsb
insl
out
sahf
push
fwait
cmpsb
repz
add
sub
xchg
pop
and
repz
pop
mov
add
test
fcoms
ret
cmp
sub
fbld
xchg
cmpsb
push
lock
adc
xchg
mov
pop
push
inc
xor
repnz
mov
test
pop
jae
xor
sbb
movsl
aaa
and
orl
fwait
hlt
xchg
clc
dec
push
xchg
stos
pop
dec
pop
and
lahf
sti
fcompl
mov
daa
lahf
arpl
push
adc
xor
jg
lea
shrb
pushf
pop
push
add
sti
scas
movsl
sti
into
loop
cwtl
addl
dec
pop
push
insl
mov
and
negl
out
cmp
dec
jbe
jbe
dec
xchg
mov
cmpsb
loope
mov
jae
movsl
lds
jp
push
jmp
add
xor
xor
jmp
insb
mov
or
sub
push
and
scas
mov
scas
cmc
inc
outsb
int
xchg
inc
hlt
mov
jne
push
xor
inc
xor
jne
xchg
add
mov
pop
push
ja
and
clc
xor
push
mov
cwtl
push
cmp
ret
dec
xadd
mov
jp
add
fsubl
add
sbb
lds
xchg
imul
xor
test
lea
popa
pop
dec
pusha
xchg
ds
imul
arpl
xlat
es
shll
fwait
je
xchg
std
test
mov
sbb
fistpll
dec
xchg
mov
pop
mov
sub
adc
pop
xor
sbb
and
mov
xchg
push
cmpsb
sbb
adc
jge
in
out
ds
push
leave
roll
sbb
pop
daa
xchg
inc
mov
mov
imul
loop
es
cwtl
xor
popa
jne
add
sbb
fbld
push
mov
inc
movsl
cmp
xchg
rcl
mov
adc
mov
sti
pop
rcll
cmpsl
test
mov
and
inc
in
in
adc
outsb
mov
jle
push
test
aaa
add
adc
aam
dec
fwait
pop
dec
lea
aad
jae
inc
arpl
dec
add
out
sar
fidivrl
fnsave
pop
push
add
pop
ror
dec
dec
in
scas
ds
mov
mov
lret
fisttps
cmp
jl
bound
scas
push
test
loope
xchg
cli
leave
push
ljmp
mov
push
lds
inc
aas
add
insl
cmc
push
inc
jl
adc
ljmp
subl
sbb
popa
cs
mov
aad
xlat
sub
sarl
das
push
mov
inc
mov
and
cmp
xchg
or
je
inc
cmp
mov
cmc
iret
jge
ljmp
lahf
fists
add
jae
adc
mov
or
and
jno
daa
mov
test
dec
pop
cmp
push
pusha
cmp
popf
mov
sub
loope
mov
addb
bnd
gs
mov
dec
fcoms
js
pop
je
push
xchg
cmp
popf
rcr
es
inc
fwait
sbb
out
mov
xchg
aaa
xor
mov
inc
rcll
push
jb
inc
stos
cli
mov
jb
sub
into
orb
mov
lret
aaa
xor
dec
out
and
jnp
or
add
cmpsl
push
jb
cmp
aas
hlt
aad
mov
jle
mov
push
in
mov
push
push
rclb
mov
addr16
aas
cmpb
dec
fstl
repnz
xchg
fnstsw
or
lcall
mov
test
adc
mov
loope
add
xor
movsb
push
je
sarb
mull
mov
and
std
push
lock
add
jae
dec
cmpsb
push
ficompl
jp
sub
aam
mov
xlat
int3
dec
mov
mov
or
sti
rclb
or
adc
xchg
mov
or
jb
dec
and
and
mov
icebp
insl
fisttpll
out
add
adc
mov
mov
add
cmp
sbb
pop
mov
pand
mov
push
int3
out
outsb
push
bound
cmp
out
jne
aas
fwait
add
in
cltd
mov
hlt
in
mov
fnsave
iret
adc
stc
and
bound
jle
out
das
inc
mov
and
fdivrp
xorl
popf
sub
cmpsl
push
push
mov
inc
imul
cmp
enter
jmp
mov
orb
aam
popf
inc
jb
popa
mov
push
sub
mov
adc
push
sub
and
jle
cmp
pop
mov
jne
in
aam
pop
nop
in
and
test
inc
std
pop
sub
mov
xor
adc
cmpsl
sbb
inc
jnp
rolb
adc
push
test
push
loope
in
xor
pushf
sub
hlt
cmp
icebp
sub
imul
xlat
jecxz
mov
mov
pop
jne
test
jnp
cmp
dec
sbb
aam
mov
ret
cmp
pop
sub
out
xor
xchg
mov
clc
flds
add
fucomi
xchg
es
bound
xchg
pop
lret
push
stc
push
out
dec
or
xor
mov
dec
scas
inc
shlb
pop
pop
xchg
sahf
cld
repnz
addl
sub
push
xchg
lds
mov
cwtl
and
xor
ret
adc
out
xchg
or
fdiv
in
icebp
jle
push
hlt
mov
dec
dec
aam
mov
mov
int
mov
insb
addr16
xchg
test
lahf
jbe
pop
inc
ret
xor
or
cli
jne
jg
push
push
mov
insb
fstpt
lahf
and
xor
add
imul
or
inc
arpl
push
cmpb
movl
test
or
outsb
xchg
es
es
lahf
addr16
sti
ds
pop
add
ror
stos
bound
rcl
pusha
push
arpl
mov
in
fmull
cmp
xor
cmpb
ret
mov
mov
xor
repz
jp
dec
jae
xor
lds
fnstsw
fwait
cli
mov
pop
in
outsb
adc
push
int3
fidivrs
test
mov
jno
pop
and
and
lock
jo
sub
aam
cmc
xor
imul
in
lock
cmpsl
mov
inc
ljmp
add
dec
dec
divb
test
mov
dec
mov
adc
fcmovnbe
das
repz
pushf
sub
mov
cwtl
or
pop
ss
cwtl
jge
adcb
cmp
jmp
mov
fcoms
lds
sbb
cltd
sti
sbb
jae
pop
cmp
je
movsb
inc
push
scas
push
cwtl
lcall
les
ret
push
arpl
lods
dec
xchg
or
into
repz
scas
mov
sbb
push
jns
pop
cmp
inc
ret
mov
pop
jno
mov
jbe
lods
lret
pop
popf
xor
adcb
mov
push
pusha
aaa
shll
lret
xchg
dec
shlb
dec
sti
pusha
loop
push
sub
addb
call
adc
loope
popf
inc
sbb
fcoml
or
call
lods
and
ljmp
push
sbb
cmpsb
push
scas
data16
pop
pop
aas
loop
bound
ds
dec
sbb
cwtl
test
sbb
or
lcall
incb
nop
adc
xchg
mov
lods
into
lret
push
push
jns
dec
inc
push
movsb
dec
mov
mov
mov
xchg
cltd
jno
mov
or
or
ja
pusha
imul
pop
add
inc
pop
mov
mov
mov
iret
outsb
jge
jp
popa
cmp
xor
or
inc
push
cmpsb
sbb
adc
jmp
bound
imul
ds
ds
test
cld
shlb
lods
mov
fcmovb
setns
andb
xchg
mov
in
testb
sbb
sbb
ficoml
ficoms
inc
dec
mov
movsl
shll
push
xor
xor
in
mov
pop
sbb
pop
lods
dec
aaa
rorb
pop
adc
test
lods
leave
mov
nop
ret
sbb
jbe
test
ja
fldt
imul
clc
mov
das
or
iret
xchg
push
insl
or
mov
cltd
insb
das
sti
fdivr
or
in
xor
fs
inc
loop
fistl
jecxz
or
and
cs
or
mov
adc
out
ror
std
inc
sbb
push
xchg
pop
mov
ret
xor
dec
dec
and
push
daa
aaa
and
xchg
lock
divb
pop
pop
sub
cmc
repz
add
std
adc
js
sbb
andps
icebp
push
dec
hlt
cs
cli
xor
mov
cmpsb
in
xchg
cwtl
filds
adc
and
rcl
dec
fistpl
std
ljmp
or
adc
hlt
sub
or
out
dec
ds
pmovmskb
cltd
or
inc
nop
jae
test
mov
pushf
sub
and
jle
or
scas
mov
dec
dec
out
daa
out
aam
sbb
inc
pop
xor
xchg
cmp
or
iret
mov
pop
cmp
in
cwtl
pop
or
pop
lahf
js
mull
sbb
and
scas
push
ljmp
jmp
add
pop
mov
push
mov
gs
mov
dec
cwtl
mov
arpl
sbb
call
stos
movsb
xchg
adc
jge
rcrl
or
push
xor
out
cmc
mov
je
popf
cli
pop
inc
jae
mov
inc
and
fistps
jmp
jge
or
push
mov
in
lods
sub
loopne
ljmp
rep
sarl
arpl
dec
push
mov
jl
fs
lahf
mov
orb
pop
testb
cmp
aas
in
dec
leave
mov
inc
mov
out
push
jecxz
cmpsb
loopne
xor
ret
in
sti
test
js
repnz
sub
cmc
sti
aam
das
sbb
adc
icebp
xchg
inc
push
in
fwait
mov
or
clc
stos
das
inc
cwtl
dec
push
push
mov
cmpsl
orb
lret
mov
cmpb
xchg
js
test
push
ret
divb
clc
lock
fadd
lret
and
aaa
rorb
xchg
ficompl
insl
xor
mov
aaa
jbe
push
jo
daa
xchg
xor
push
inc
push
xorl
addr16
inc
add
scas
xchg
dec
dec
jecxz
fldcw
jp
xor
cli
pushf
xchg
push
lcall
jo
hlt
bound
int3
push
mov
es
mov
clc
xchg
push
loopne
aaa
pop
add
push
fsubl
cmc
cmp
mov
test
push
jne
xchg
and
cmp
sub
jg
cmpsl
xor
das
mov
mov
lcall
fsubrs
and
pop
scas
dec
lods
pop
rolb
addr16
fisttpl
loop
and
inc
faddp
stc
stc
cmovo
test
inc
adc
jbe
and
in
out
dec
setge
inc
adc
push
clc
andb
icebp
or
out
popa
dec
push
ret
or
cmpsb
adc
pop
ljmp
out
mov
push
push
ja
lock
adc
cmp
or
cmp
adc
cmc
int3
xchg
or
bts
rcr
fwait
mov
outsl
and
mov
in
sarl
inc
call
xchg
pop
out
jp
sub
lods
pop
mov
push
push
int3
leave
mov
jo
xchg
je
or
pop
je
flds
dec
pop
fisubrl
push
arpl
pop
es
hlt
pop
insb
pop
adc
jno
lds
add
mov
dec
sub
lret
rorl
xchg
jl
sbb
cs
or
lods
jp
or
and
xor
pushf
and
rcrl
add
int
inc
idiv
xchg
jb
cltd
jp
rcrl
lret
push
inc
cmp
mov
lahf
lret
mov
mov
jp
cmp
bound
test
dec
ret
push
ds
into
sub
push
cmp
sbb
cli
mov
push
inc
lcall
aad
adc
push
xor
jmp
dec
adc
lret
xor
das
or
fs
xor
mov
addr16
fsubrl
lods
cs
dec
fistps
adc
cmc
mov
jg
xchg
icebp
fidivrs
sub
movsb
leave
sub
xchg
adc
sti
cmp
mov
rcrl
or
test
xor
clc
sub
std
mov
sbb
pop
sti
fildl
fs
sbb
mov
jl
mov
in
movsb
test
lock
add
outsl
popa
cltd
movsb
clc
scas
lods
mov
adc
push
pop
xor
insb
fwait
shlb
stc
mov
dec
fucom
add
loop
jbe
cmp
adcl
xor
test
mov
scas
ret
adc
push
js
stc
mov
dec
mov
mov
pusha
sub
lret
sti
xchg
pop
fisubl
jns
lock
pop
cltd
lahf
push
shlb
sbb
mov
loopne,pt
mov
xchg
add
jle
or
adc
or
sbb
mov
shrl
cmpl
push
adcl
or
shlb
sbb
mov
mov
mov
sub
lods
push
fs
gs
bound
adc
xchg
mov
imul
rcrb
lods
xchg
push
pop
test
test
ss
adc
mov
adc
fcomps
and
je
out
jo
imul
sahf
push
ss
sbb
and
dec
or
insl
lret
inc
arpl
mov
lea
and
testl
lret
push
lock
test
repz
out
push
push
out
and
fs
or
insl
inc
mov
mov
push
add
mov
mov
or
out
lahf
int
adc
or
xor
mov
imul
scas
mov
scas
pop
xor
xchg
scas
sub
mov
inc
lcall
xchg
lea
push
leave
repz
mov
dec
sub
push
jg
incb
shrl
push
rorb
into
call
insb
mov
lds
jno
ret
push
loop
sub
xorb
or
lock
jno
pop
into
ljmp
sbb
repz
sbb
clc
scas
mov
jb
fwait
or
lret
lods
fwait
cmp
sub
fimuls
mov
mov
sarl
push
in
scas
scas
push
sahf
scas
jle
jle
push
daa
ss
imul
sbb
aaa
jle
repnz
mov
rolb
mov
roll
sbb
insl
adc
cmp
das
inc
cmp
jge
cmc
out
adc
int3
xchg
or
jbe
pop
loope
imulb
push
push
xchg
sub
movsb
repnz
mov
call
adcl
fldt
std
out
popf
push
xchg
xchg
outsl
fidivrl
jnp
fisubs
stc
and
std
aas
hlt
pop
sar
xor
jmp
test
sub
push
mov
add
fsincos
call
testb
clc
or
cmc
bound
scas
or
jb
cmpl
push
jnp
pop
inc
dec
adc
adc
fwait
fs
jl
out
jl
pop
xchg
add
mov
lahf
rcl
jle
in
xchg
les
lock
add
add
sbb
pusha
xchg
jno
cltd
aas
xor
stos
sub
ds
xor
xor
cmp
xchg
push
push
cmp
mov
movsb
ret
addb
or
std
mov
cmp
repnz
mov
rcll
std
inc
sbb
test
pop
xlat
ud2
mov
pop
jbe
jmp
ror
mov
fistps
fs
pushf
fwait
xor
lock
insl
push
sahf
mov
in
adc
or
pop
add
out
push
lcall
hlt
leave
rol
inc
xchg
xchg
lods
xor
push
or
add
xchg
fbld
push
and
xchg
jle
movsl
fs
mov
adc
stos
in
mov
ret
lea
pushl
nop
ffreep
add
outsb
ret
notb
loope
pop
adcl
push
rcrb
lfs
push
gs
xor
add
sbb
loope
flds
inc
mov
daa
pop
push
sbb
mov
cmp
inc
and
xchg
jmp
push
sub
in
cmp
outsb
addr16
and
adc
cs
dec
movsl
in
mov
jne
outsb
cwtl
mov
jge
add
pushf
push
xchg
pop
and
stos
xchg
jae
jne
or
aad
out
mov
xlat
jl
pop
or
push
imul
repnz
not
shr
mov
pop
mov
dec
cmp
jg
pmuludq
and
pop
in
mov
call
daa
jecxz
js
add
pop
ret
in
adc
popa
adc
test
nop
mov
mov
dec
sub
fildll
je
movsb
lock
jmp
lea
pushf
xchg
push
insb
int
test
add
xor
cmp
mov
stc
push
into
push
mov
dec
or
jbe
fs
sub
sahf
push
cmpsl
xchg
add
push
cwtl
cld
shl
mov
pop
enter
inc
mov
in
add
jmp
sarl
ret
icebp
aas
push
shl
sub
xchg
addr16
fwait
es
cwtl
insb
je
sub
int3
mov
mov
jne
xchg
jg
stc
inc
or
mov
xchg
mov
jns
imul
jne
call
sub
and
mov
aam
ljmp
mov
pop
or
jns
xor
repz
cmp
push
jae
stos
jae
mov
shl
jo
or
pop
pushf
mov
daa
mov
fimuls
mov
and
inc
xchg
inc
test
push
cmpsb
out
dec
adc
es
sub
or
ss
adc
bt
gs
cmp
jecxz
mov
sbb
lods
add
sarb
sub
adc
shrl
ds
stos
addb
jne
mov
icebp
sbb
xchg
xor
jnp
fwait
test
adc
dec
stos
cltd
push
add
fxch
cld
cwtl
dec
addr16
ds
int
add
dec
dec
es
jle
mov
cmp
pop
mov
fwait
xor
shl
and
mov
negl
xor
aam
jo
mov
fld
cmp
fiadds
nopl
push
push
aas
sbb
cmp
not
fistpll
adcb
pushf
add
xchg
jbe
fisubs
in
iret
xchg
cld
adc
data16
inc
dec
xor
or
mov
xor
dec
js
xor
mov
push
arpl
adc
mov
jo
mov
mov
jne
dec
mov
push
mov
out
in
inc
and
insb
loopne
outsb
cmp
int
adc
xchg
sbb
notl
test
and
xor
push
pop
stos
inc
ficompl
andl
js
jmp
in
fwait
nop
repnz
loopne
mov
sbb
lock
std
cmp
pop
push
jle
mov
cmp
mov
popf
cmp
nop
sub
out
pop
js
shll
cmc
push
aad
xchg
ljmp
mov
pop
lret
push
dec
jns
xchg
sub
xchg
xchg
loop
andb
push
xchg
add
daa
jbe
nop
mov
cmpsl
and
jmp
push
stos
lret
nop
sub
xor
loop
add
inc
dec
cmp
cmc
sbb
xor
mov
cwtl
mov
sarb
cltd
ss
pusha
push
push
xorps
xor
mov
mov
test
or
dec
mov
jle
shlb
test
cmp
mov
call
pop
or
mov
and
aas
sti
mov
pop
xchg
rclb
jmp
inc
ret
rorl
lds
sub
fistpll
dec
shll
fidivrl
pop
add
fcom
dec
push
cmp
lods
js
push
or
cmc
cmp
cmpb
movsl
push
nop
sbb
lock
fwait
es
jl
push
xor
inc
stos
jbe
lods
fiadds
iret
sbb
int
aas
mov
cs
out
jb
icebp
or
jnp
sub
adc
ja
ret
pop
xor
rcr
pop
fsts
lds
lea
gs
mov
jne
aam
subl
jbe
leave
pop
sub
mov
jle
lret
adc
sbb
pushf
dec
jg
inc
sub
testl
mov
mov
add
xchg
mov
inc
add
fwait
cltd
xchg
sahf
int
jmp
and
mov
push
arpl
jle
ljmp
ror
sub
jbe
sti
jmp
ret
mov
xchg
sahf
and
xor
shl
push
and
and
movd
and
lock
cmp
push
fwait
scas
test
dec
pop
cltd
xchg
sub
xchg
cmp
es
mov
es
mov
sub
jmp
mov
punpcklbw
loop
rolb
into
push
out
stc
push
movsb
inc
adc
cmp
mov
gs
jmp
mov
and
outsl
fsubrl
mov
inc
dec
outsb
rcrl
lret
fwait
xchg
pop
sbb
stc
mov
stos
add
loopne
lret
add
mov
mov
pushf
test
ja
sub
sub
sbb
adc
fisubs
push
outsl
adc
adc
cmp
aas
mov
stos
cld
fxch
movsl
push
cltd
int
ror
mov
sbb
push
push
out
movsb
pusha
shl
push
loopne
pop
sub
lcall
pushf
adc
movsb
jb
outsl
sbb
xchg
push
loope
mov
mov
loopne
or
stc
mov
dec
jmp
dec
jmp
pop
pop
rcr
int
xchg
add
jnp
arpl
lahf
pop
sti
sub
stos
xchg
stc
mov
jo
out
jecxz
cmp
scas
aad
cld
jecxz
mov
repz
call
inc
out
faddl
push
push
sbb
push
movsb
or
inc
int
mov
andb
or
out
test
and
inc
dec
sub
sbb
mov
sbb
mul
cmpsl
sub
push
popf
lea
sti
sbb
imull
push
mov
mov
jp
adc
cwtl
vmwrite
mov
adc
sub
push
sub
mov
jp
pop
lock
outsb
lahf
dec
sarb
push
xchg
xchg
add
push
adc
xchg
daa
sbb
outsl
mov
cmc
dec
and
pop
imul
inc
fmul
std
fcmovnbe
fwait
stos
movsl
sbb
jg
jmp
stos
cmp
ljmp
mov
and
mov
in
pop
jae
test
dec
jne
popf
loopne
repz
call
cmp
hlt
add
sarl
idivb
icebp
mov
mov
xor
mov
sbb
jl
xlat
test
ret
fwait
movsb
xchg
repz
ret
or
fwait
push
or
or
fwait
idivb
outsb
dec
mov
sub
mov
fbstp
pop
sti
mov
sub
mov
inc
sbb
mov
cmp
fninit
push
rorb
outsl
fsubs
rclb
dec
mov
mov
jmp
shrl
jnp
aam
pop
add
cltd
popf
mov
add
sbb
push
xor
shl
insl
sbb
dec
mov
imul
fs
divb
aam
mov
insb
outsb
mov
outsb
adc
and
xor
push
mov
aad
dec
cmp
or
pusha
and
adc
mov
cmc
sbb
xchg
cmp
jl
stos
rcll
mov
ss
pop
jbe
arpl
fistpl
sub
dec
lcall
in
clc
mov
nop
xor
rcrb
cwtl
inc
call
dec
in
dec
xchg
jmp
pushf
push
mov
push
dec
insl
dec
pop
sbb
add
xchg
fldl
fs
mov
push
xchg
lea
movsb
imul
mov
sbb
and
dec
xchg
add
push
xor
outsb
xchg
mov
jmp
jl
mov
out
stos
pop
fisubrs
cmp
or
xor
mov
and
push
sub
divl
mov
add
dec
mov
cmp
fwait
mov
leave
pushf
popa
push
lcall
push
jecxz
mov
sbb
xchg
rorl
popa
call
sbb
jecxz
dec
pop
cmpsl
testl
dec
mov
andl
xor
repz
shrl
in
adc
imul
mov
fidivs
in
jno
std
dec
sbb
xchg
cmp
pop
daa
sub
push
push
pop
iret
inc
pop
mov
cld
xlat
pop
mov
fisubs
mov
and
sbb
sbb
or
bound
inc
jb,pn
shlb
outsb
jle
test
out
das
movsl
repz
lods
push
pushf
shl
fdivrp
mov
gs
fs
or
insb
xor
push
mov
pusha
mov
das
stc
inc
mov
cmpsl
out
adc
and
inc
xor
add
aas
xor
jge
jae
jge
outsl
mov
pop
rolb
insl
into
cwtl
pop
fwait
scas
out
lcall
scas
lock
add
push
dec
fwait
subl
punpcklwd
mov
shl
in
jno
jle
push
popa
pushf
push
sub
ror
xchg
cmp
or
std
aaa
imul
jmp
sub
jno
shrl
mov
xchg
jns
dec
mov
fadd
arpl
push
or
push
inc
fdivr
notl
lahf
mov
xchg
shll
cld
mov
push
xchg
or
jnp
cltd
popf
xor
rclb
lret
pop
sbb
sub
sbb
mov
testl
insb
mov
adc
cli
out
out
pop
data16
int3
push
cmp
push
sub
fisubrs
loopne
jmp
pop
push
dec
xor
cmp
test
int
cmp
xchg
dec
dec
orb
jnp
push
jge
flds
test
je
or
mov
fnstsw
xchg
addl
push
push
xor
mov
cmpsb
mov
rcrl
adc
shl
ljmp
jno
and
xchg
push
sti
ror
xlat
push
dec
adcb
hlt
and
out
xchg
sub
sbb
jle
in
jl
xor
insb
lods
pop
addl
jge
outsb
enter
cmp
and
xlat
and
test
sub
loope
and
out
fildll
cmpsb
out
mov
mov
inc
out
cld
lods
inc
cs
sub
jle
or
test
sarb
mov
ret
jno
dec
fs
movsl
rcrb
mov
push
mov
push
imul
cwtl
jae
mov
popa
sub
inc
sub
stc
mov
icebp
mov
mov
inc
sub
cmp
ds
cmp
xor
jmp
pusha
inc
adc
loope
ljmp
in
xor
dec
shrb
fmuls
and
shr
ret
mov
shll
ljmp
jl
push
adc
jecxz
jge
add
add
call
dec
cmp
fs
cld
mov
arpl
push
mov
insl
sub
adcl
lret
mov
sbb
andl
adc
je
xchg
mov
in
cmp
jle
add
sbb
int
push
jg
dec
push
nop
aas
sub
es
clc
cmp
lds
test
pop
jle
ret
xor
ss
out
lahf
or
repnz
add
hlt
pusha
inc
in
loope
movsl
scas
add
mov
push
dec
aas
and
nop
add
daa
mov
cmp
out
add
xor
lret
and
mov
movsb
mov
sbb
ficoml
repnz
xchg
mov
hlt
dec
cmpsl
mov
mov
jne
inc
lcall
sub
inc
mov
out
ret
and
rcrl
inc
and
push
cmp
aas
jl
shrb
xlat
mov
stos
push
imul
pop
ja
data16
in
mov
cmp
inc
loop
pusha
xor
stos
add
xchg
fstl
mov
js
fsubrs
xchg
jmp
adc
jne
cmp
push
out
nop
loop
mov
outsb
push
arpl
cmp
sbb
cmpsb
mov
scas
mov
sub
push
aaa
cmp
cld
add
nop
pop
out
test
add
arpl
add
dec
sub
mov
xchg
fistpll
cmp
subl
rep
repz
in
jp
std
int
cmp
push
scas
test
mov
ret
inc
jp
xchg
shll
lcall
jne
push
and
pusha
and
adc
xor
pop
and
xor
in
ret
mov
stos
adc
add
xorl
dec
bound
jl
jb
mov
cmp
pop
testl
push
gs
xor
push
push
fwait
insb
sbb
ja
and
push
iret
daa
dec
cmpsb
pop
daa
mul
pop
es
sub
inc
mov
into
cs
enter
test
add
js
mov
stc
js
push
mov
into
mov
push
mov
xor
imull
mov
mov
out
or
inc
and
pop
arpl
inc
pop
mov
daa
cmpsb
or
out
cmp
inc
lods
jmp
xchg
jnp,pn
imul
push
cwtl
mov
sbbl
cmpsl
and
adc
es
inc
push
cmpl
inc
mov
shl
daa
shrl
sar
hlt
mov
jae
sub
clc
in
js
and
ja
outsl
andb
push
movsb
sub
push
mov
and
cmpsl
daa
jle
ret
dec
test
enter
pop
mov
insl
dec
or
jno
dec
orb
mov
or
jle
sub
cmp
clc
xchg
push
sbb
sbb
mov
aaa
add
cmp
inc
dec
cmp
push
fcom
dec
hlt
cmp
cmp
xchg
mov
popa
je
sbb
or
lea
ds
pop
cwtl
lahf
gs
pop
pop
cmp
mov
mov
mov
sbb
test
lods
add
mov
rcll
xchg
inc
xor
jne
jmp
lret
jns
pushf
movsb
adc
and
repz
push
ja
and
ljmp
push
pop
mov
insl
in
push
push
lods
aaa
mov
and
cmp
push
push
imul
jecxz
mov
enter
push
arpl
out
dec
jle
lret
dec
in
idiv
adc
push
scas
push
and
dec
mov
rorb
pushf
xchg
mov
inc
scas
dec
mov
call
cld
cmp
jg
stos
push
pop
jb
out
push
mov
mov
lods
rorl
adc
mov
sti
scas
aaa
or
jge
xchg
movss
mov
push
cltd
inc
filds
push
insb
mov
dec
fildll
movsl
inc
xchg
imul
rcl
mov
sahf
loope
mov
mov
roll
cmpl
push
pop
pushf
outsb
and
add
and
or
mov
cs
sbb
and
inc
incl
rol
loop
pop
int3
adc
xor
fidivs
pop
xorl
inc
pop
lds
push
bound
scas
popa
push
mov
jnp
cs
lret
sar
jecxz
in
mov
add
sbb
mov
push
cld
jne
sbb
jmp
push
jno
mov
call
inc
mov
dec
cmp
out
dec
les
cltd
stos
ds
test
int3
ja
sbb
aad
add
mov
pop
pop
iret
jo
xorl
mov
xchg
mov
js
or
mov
or
mov
dec
dec
and
add
add
dec
dec
jmp
sbb
xor
imul
sub
jmp
cmpb
xchg
cwtl
add
xchg
mov
push
mov
mov
sub
popa
jle
loop
das
fldt
xchg
push
and
dec
jge
js
push
sbb
dec
stc
jns
dec
push
mov
sbb
fstps
mov
jbe
pop
jg
lea
lret
jmp
mov
mov
pop
inc
in
stos
daa
cmp
cmp
or
xchg
mov
pop
out
shl
insb
ret
int3
addl
inc
and
sahf
scas
iret
mov
out
out
out
mov
cmc
movb
ds
mov
dec
push
rcrb
sbb
mov
xchg
into
lret
xor
int
dec
aaa
ds
inc
cli
mov
mov
cwtl
dec
repnz
push
push
fisubrs
pop
fadd
and
xor
test
xchg
call
jp
inc
pop
inc
subb
in
push
xor
lea
cmp
adc
mov
pop
jo
add
push
clc
xchg
int
cs
add
cltd
xor
add
adc
pop
mov
into
movsb
clc
fsts
movsb
test
inc
repz
xchg
daa
popf
mov
push
pop
dec
or
jbe
lea
mov
cld
mov
stos
adc
stos
std
stos
loopne
mov
imul
fisubl
or
pop
mov
jnp
scas
test
fs
sbbb
enter
push
stos
movsl
shrb
lret
cmovg
stc
add
in
das
jp
insl
mov
iret
cmp
fcomip
ret
xchg
dec
mov
inc
cwtl
dec
cli
push
mov
je
test
xor
jge
jns
dec
in
jge
and
daa
stos
cmp
repnz
push
cltd
test
aas
xchg
aad
ret
fwait
mov
pop
jb
dec
adc
adc
pusha
cwtl
rcll
scas
push
enter
loop
aaa
cmp
sti
jb
ret
inc
push
sbb
mov
repz
shll
aas
inc
pop
xchg
xchg
sbb
aas
test
stos
mov
pop
push
push
cmpsb
inc
push
lcall
xchg
into
lods
mov
lcallw
std
adcl
fnstcw
push
lcall
mov
into
rcrl
inc
mull
int3
dec
scas
push
int3
inc
jno
rorl
sahf
movsl
sub
rcrl
popf
jbe
shrb
stos
xor
and
push
fsub
stc
ljmp
out
xor
lahf
jecxz
addr16
push
fwait
and
push
test
ds
cli
adc
jo
stc
xchg
add
ret
pop
lret
jae
mov
inc
fcompl
cmpsb
and
push
inc
jo
stc
lret
into
lahf
mov
or
jae
xchg
cmp
push
jae
pop
mov
xor
cmp
jp
xor
sbb
adc
outsl
test
neg
add
popf
mov
test
mov
xchg
cmpsl
cmp
mov
jbe
jecxz
mov
xor
lret
jecxz
popf
imul
aad
push
mov
sbb
adc
xlat
mov
pop
jae
push
mov
outsl
adc
fdivrs
aas
es
leave
mov
aaa
fcompl
jbe
ja
lds
and
test
xchg
cmc
xchg
mov
inc
inc
int3
mov
mov
lahf
jns
loope
jnp
std
add
out
pop
cwtl
pop
aad
roll
adc
es
repz
enter
es
add
xchg
sahf
popf
into
jmp
inc
jne
jl
or
mov
push
es
pop
jns
add
fstps
mov
or
sub
test
scas
xchg
outsb
iret
dec
pop
jl
cmp
ljmp
jo
push
mov
inc
inc
iret
push
sbb
xchg
mov
adc
and
sbb
mov
add
mov
dec
push
fisubs
std
je
push
lods
mov
fdivr
les
movl
dec
cmp
lods
fimull
mov
inc
repz
insl
daa
mov
mov
mov
jmp
punpcklbw
mov
cmp
add
mov
pop
stos
xor
mov
dec
call
std
xor
xchg
cmp
mov
mov
outsl
mov
arpl
andb
add
and
fldt
pop
into
inc
aaa
sbbl
jl
or
pop
mov
scas
push
push
stc
mov
and
or
int3
xchg
mov
stc
jbe
pushw
pop
cmp
push
adc
es
lret
in
mov
sub
nop
jb
insb
call
sti
popf
dec
adc
xchg
mov
xchg
push
test
adc
sbb
push
adc
cmp
mov
mov
sti
sbb
sti
sub
jmp
sbb
add
fsubp
out
sahf
sub
jg
adc
es
cmpsb
xor
jns
pop
roll
dec
pop
sbb
test
subl
shrb
sbb
jno
or
rol
mov
cld
bound
aam
and
aaa
mov
gs
sbb
out
in
stos
jae
or
in
sbb
push
arpl
aad
jb
sbb
outsb
or
pop
es
ret
lahf
mov
cld
rcrl
cmc
fistpll
xorl
push
fisubrs
test
test
aad
dec
sbb
in
sahf
shlb
movsl
jp
sub
outsl
outsb
push
pop
xor
mov
pop
ret
mov
andl
aaa
insb
jnp
cwtl
lods
mov
das
cmc
cmpsb
fsub
leave
pushf
out
fstpt
sub
push
into
dec
cs
push
fcmove
sahf
out
andl
lcall
lret
pop
mov
xor
sub
lret
mov
add
movsb
or
xchg
and
pushf
rclb
sbb
cmp
fbld
icebp
xchg
orl
adc
pop
imull
test
out
call
pop
rorl
xor
adc
icebp
dec
pop
lcall
arpl
out
stc
stc
sub
fsubs
push
leave
push
mov
jne
fisttps
imul
push
push
shlb
mov
out
pop
pusha
sbb
or
mov
xchg
mov
fwait
cmp
stos
jle
repnz
shlb
sarb
js
jle
in
lret
insl
inc
sub
cltd
out
lods
aas
mov
aam
xchg
js
fs
xor
sbb
lods
xor
leave
je
xchg
add
adc
or
push
mov
inc
js
push
mov
adcb
dec
lcall
movsb
adc
and
adc
dec
cmpb
std
out
lods
pop
mov
cwtl
popa
pop
push
inc
inc
fdivr
sbb
pop
hlt
sub
pop
movsl
std
leave
insb
das
stos
and
rcrl
mov
hlt
or
xchg
push
xor
into
cmp
stc
test
or
cld
test
fstp
sbb
mov
sbb
lahf
cmp
cmp
sahf
lahf
out
mov
mov
inc
aam
push
imul
imul
imul
xchg
push
test
pusha
and
sbb
ss
cmp
lcall
sub
out
inc
push
leave
fisubs
das
sbb
xchg
shlb
or
adc
pushf
daa
add
cmp
sbb
mov
fcomps
outsl
in
out
cmp
mov
or
jnp
inc
xor
inc
add
bound
mov
and
lods
sub
xchg
pop
xchg
lahf
mov
dec
mov
cmp
sbb
dec
ds
push
and
fldl
addr16
fists
fistpl
jo
les
mov
mov
popf
push
hlt
mov
nop
jnp
adc
xor
xchg
push
push
mov
gs
jbe
jb
xor
imul
jmp
jo
sbbl
push
leave
movsl
jle
pop
fdivl
sbb
fbld
xchg
icebp
imul
filds
dec
stos
add
xchg
push
lahf
rolb
movsb
mov
aas
fsubl
inc
inc
push
negb
into
aam
rclb
sbb
push
mov
jne,pt
push
rcrb
rolb
divb
imul
sbb
and
shlb
mov
xlat
not
lret
lea
sahf
sub
sbb
movsl
cmpsb
fcoms
js
ljmp
lcall
das
in
in
add
pusha
mov
push
pop
jge
mov
and
ja
scas
xor
rolb
into
aam
test
mov
mov
bound
mov
ja
dec
ss
data16
cmp
jecxz
pop
inc
dec
pushf
cli
mov
fisubrs
rclb
sbbl
movsl
xchg
cwtl
cmp
push
test
lods
and
mov
cvtpi2ps
call
cmp
stc
dec
test
outsb
movsb
scas
loope
in
pop
xchg
dec
and
enter
push
jns
ja
leave
lret
cmpsl
lods
jg
hlt
jmp
adc
and
push
imul
in
pop
sub
rcll
mov
test
add
push
mov
xor
or
push
or
and
repnz
push
imul
rclb
mov
ja
test
mov
push
out
out
mov
xlat
pushf
sti
inc
inc
test
mov
mov
pop
mov
fnstenv
add
jmp
insl
dec
icebp
add
addr16
ds
fiadds
jg
lds
pop
jns
inc
insb
das
imul
jmp
jecxz
rclb
imul
jb
scas
push
fs
movsb
fdivrl
outsb
mov
mov
jle
mov
fcmovnb
ds
fwait
fs
stc
jne
sbb
test
mov
jg
insb
insl
lds
ljmp
xchg
push
ror
js
and
mov
leave
rcl
xchg
adc
aam
jb
mov
imul
sub
push
outsb
enter
pop
sub
enter
xlat
in
iret
xchg
das
sub
push
adc
cmp
cmc
inc
cmpsl
cmp
and
mov
imul
and
aaa
push
xor
push
or
sbb
pop
bound
push
imul
dec
push
bound
roll
pop
out
add
jle
xchg
xchg
push
divl
adc
push
cs
cli
adc
pusha
clc
fisubs
dec
inc
or
mov
push
pop
daa
xchg
push
adc
test
mov
movsb
ret
add
test
repz
mov
jl
pop
addr16
inc
mov
sub
or
mov
xlat
jmp
push
loopne
cmp
pop
test
and
jae
push
lcall
xor
jecxz
movsl
xchg
arpl
sbb
lods
scas
mov
cli
fidivs
or
xor
sahf
xchg
xor
lahf
fisubrs
std
rolb
inc
pop
aam
jae
les
sub
inc
out
int3
in
xor
daa
arpl
clc
shlb
cmp
pop
mov
push
push
mov
inc
and
gs
dec
add
push
fwait
cmpsl
icebp
stos
xlat
test
push
pop
and
jno,pt
sbb
pop
cwtl
mov
dec
outsl
repnz
fbstp
mov
add
xchg
pop
mov
mov
ljmp
leave
ficoml
pop
cmp
dec
clc
loop
cmp
insl
insl
sbb
sbb
clc
mov
into
mov
pushf
ljmp
mov
adc
cmpsb
pop
mov
lea
adc
subb
push
xchg
pop
fcoms
lods
loope
pop
xor
int3
pop
mov
inc
sub
sbb
push
pop
add
out
daa
push
cwtl
sub
jae
shlb
insl
and
hlt
xchg
ror
cmp
idiv
adc
dec
addl
xor
cmp
pop
add
fwait
dec
and
cs
rol
hlt
roll
imul
and
dec
xchg
stos
icebp
scas
pop
popw
iret
mov
out
jle
sub
mov
aas
sub
and
aas
shl
loope
xchg
insl
sub
fstps
mov
pop
ds
xchg
outsl
sub
sbb
sub
stos
xchg
in
mov
jnp
lods
mov
add
adc
xchg
fisubs
xchg
mov
int3
fstpl
xchg
or
ror
inc
push
cmp
fistpl
loope
jno
add
cmp
jmp
push
cmc
mov
fcomi
add
das
mov
sub
rolb
sbb
jg
shlb
cmc
pop
inc
adc
cmp
aas
sub
mov
insl
addr16
xchg
shrl
xchg
xor
out
and
pop
test
imul
xor
in
mov
and
cmovnp
pop
lock
xchg
push
push
mov
imull
push
mov
popa
xor
sbb
stos
hlt
jg
arpl
xor
inc
add
lret
dec
add
add
mov
pop
es
imul
add
cli
xor
test
dec
pusha
mov
xor
pop
pop
push
pop
mov
jmp
aam
sub
lods
adc
ljmp
xchg
addr16
call
test
xor
or
outsb
repz
mov
mov
jns
cmpsb
push
or
xchg
add
pusha
cmc
mov
add
mov
mov
mov
push
and
std
popf
pop
push
sub
mov
push
faddp
dec
sub
or
lcall
leave
cmp
in
ficoml
fisubl
xor
pop
lock
cmp
cmp
push
adc
movsb
and
adc
aam
test
iret
and
mov
inc
call
xchg
cmp
pop
imul
cmc
lcall
sub
dec
subl
dec
xchg
inc
lock
stc
pop
ljmp
xchg
jnp
das
jge
push
pop
mov
insl
gs
xlat
pop
ret
clc
adc
inc
cmp
lock
sbb
add
pop
inc
lret
fsubrs
and
aad
inc
call
call
out
fsubs
xor
aad
mov
out
lret
jno
aam
popf
pop
pop
in
or
dec
aad
or
repnz
sub
xor
jne
pop
aad
cltd
cld
xor
inc
pop
jne
mov
call
icebp
mov
mov
jge
lcall
sbb
fsubrs
pop
push
jne
and
push
dec
jb
cmp
and
les
fwait
push
popa
mov
pop
cmp
fidivl
and
orl
shll
xor
mov
aas
jns
push
dec
cld
ja
pop
sbb
cltd
xlat
scas
adc
std
jbe
enter
pop
inc
addl
push
inc
or
in
dec
xor
mov
out
and
flds
push
pop
sti
xchg
dec
ds
jle
push
add
jle
mov
mov
or
push
je
or
and
jnp
dec
clc
ds
adc
xor
icebp
lret
cli
xorl
cmpsl
lcall
outsb
test
aam
call
sub
out
push
inc
sbb
add
test
pop
out
or
lahf
mov
mov
fmul
xlat
rcll
cmp
xor
add
xor
xchg
sbb
ret
mov
nop
cmp
cmp
outsl
movsb
push
loopne
jp
in
xchg
dec
push
ja
inc
or
in
mulb
iret
std
test
cmp
jmp
xor
push
mov
repnz
lds
stos
ja
and
jg
mov
xchg
inc
cwtl
fsubrl
inc
insl
pop
divl
das
popa
test
push
bound
xor
pop
pop
in
pushf
ds
mov
jmp
jg
imul
push
and
test
adc
xchg
cmp
xor
inc
shr
es
inc
add
adc
test
cmpsb
fcomps
lret
and
pop
test
push
neg
or
aad
lahf
js
mov
outsb
pop
nop
dec
cli
movsl
loop
cmp
nop
mov
cmpsl
push
adc
jae
jl
push
mov
inc
xor
cmpsb
int
xchg
icebp
push
stc
out
dec
adc
out
mull
cmp
imulb
mov
cwtl
mul
popa
lahf
daa
das
dec
mov
dec
push
out
inc
in
adc
ljmp
sahf
and
scas
roll
into
outsb
mov
push
clc
test
inc
push
adc
mov
and
jno
popa
jge
cmp
adc
adc
inc
fnstsw
sub
and
xor
push
jb
sbb
xchg
std
das
dec
pop
inc
call
or
ds
adc
mov
xchg
arpl
pop
pop
or
iret
mov
dec
mov
push
fxch
pushf
pushf
push
push
jl
mov
call
xadd
mov
movsb
sbb
xorl
xor
mov
xor
js
js,pn
lods
jno
mov
push
outsl
sbb
jb
mov
jp
adc
push
and
and
jle
inc
ret
orb
push
fistl
icebp
mov
fdivl
fisttpll
je
jb
pop
and
out
jnp
inc
pusha
sti
test
dec
push
xchg
jbe
addr16
sbb
cld
ret
add
cmp
or
mov
cmp
pop
sbb
loope
inc
pop
sbb
rcrl
gs
lret
in
shrb
ss
popa
std
mov
jl
sub
shll
sub
push
xchg
xchg
addr16
ja
scas
mov
sub
xor
sbb
jg
bts
mov
adc
icebp
pop
movl
mov
outsl
not
adc
aam
mov
int
jp
add
cld
sarl
test
sub
and
daa
mov
cmp
mov
push
icebp
xchg
pop
dec
or
push
or
test
push
add
ret
push
and
inc
push
mov
push
out
aaa
sub
mov
mov
sbb
in
in
pop
lahf
cli
fistpll
les
pop
xchg
jo
push
mov
mov
fchs
adc
mov
popa
cmp
mov
add
sub
jo
or
xchg
jge
fistpll
popf
insb
cmp
mov
outsl
sar
jmp
lods
adc
addr16
ljmp
and
pop
xchg
sub
popf
aaa
sub
xchg
xchg
aas
sub
push
std
aas
push
jmp
nop
maxps
jle
roll
hlt
les
jno
mov
out
std
fdivrs
lret
push
xchg
in
ljmp
loopne
mov
or
stos
ror
sub
jmp
dec
sbb
add
cmp
push
mov
cld
jnp
or
stos
add
push
push
mov
jb
or
jmp
mov
lea
es
rcrl
sub
xlat
push
add
xor
inc
mov
jp
add
dec
and
cmp
or
js
jl
mov
push
bound
add
push
and
jg
fcmovnb
aaa
lret
pop
iret
jge
rcrb
test
pop
sar
outsl
fcompl
xchg
sbb
jge
lds
dec
cltd
sbb
jp
jl
out
insl
adc
and
or
psubsb
pop
jle
sub
into
dec
pop
push
sbb
leave
in
push
adc
lcall
jle
imul
inc
sbb
arpl
xor
lods
adc
fwait
sub
pop
out
dec
sbb
test
repz
sub
ret
cmpsb
lock
pop
ss
movsl
sbb
cmpsl
add
mov
mov
outsb
push
adc
imul
cmpsl
icebp
enter
xchg
pop
jl
add
lds
jb
ja
out
cmp
pop
add
mov
add
or
pop
and
out
sbb
rcr
jge
push
incb
pushf
mov
stc
cmc
inc
add
jne
or
lds
outsb
icebp
out
cmp
mov
shll
add
jno
in
mov
sbb
mov
push
andb
mov
pop
xor
imul
xor
lods
jns
lds
out
add
push
pop
mov
pop
frstor
sbb
or
leave
call
jbe
das
sti
mov
sbb
jbe
dec
and
xlat
outsb
fidivs
or
in
call
cwtl
cmp
pop
or
subb
xchg
dec
int3
jle
cmp
xchg
pop
hlt
cmp
lret
adc
cmp
stos
ret
loop
rcrl
das
imul
mov
and
repz
add
fwait
adc
jnp
lock
outsb
sbb
jbe
shl
nop
mov
insl
pusha
fwait
push
test
xor
in
ficoml
pop
rorb
loop
cmp
loope
out
inc
popa
js
sub
inc
push
or
loope
and
imul
mov
mov
push
jmp
xchg
push
popaw
push
cmp
push
and
bnd
xor
sbb
test
sub
push
mov
or
sub
inc
jo
inc
inc
pop
lret
inc
pop
mov
mov
jmp
aas
push
adc
inc
shlb
inc
mov
mov
sub
cmp
mov
or
aaa
inc
pushf
mov
out
push
popf
jmp
shrb
outsb
icebp
aas
xor
pop
xchg
and
adc
xchg
or
lret
mov
dec
mov
xchg
lahf
ss
push
cmovo
movsb
adcb
push
xchg
adc
test
int3
test
mov
popa
enter
xor
out
loope
ret
jne
pop
jns
mov
inc
ret
lahf
xchg
xchg
lock
adc
ret
cli
lcall
inc
adc
nop
mov
jge
add
stos
cmp
or
cs
mov
and
mov
push
dec
jmp
mov
das
in
daa
mov
movsl
push
sub
push
das
push
sbb
push
cltd
sub
outsl
repz
popf
sbb
jmp
ja
pop
dec
iret
cmp
call
nop
pop
sbb
out
adc
std
mov
and
xor
out
mov
adc
loopne
or
mov
inc
pop
sbb
push
jnp
mov
cmp
lcall
jl
push
stos
iret
jne
cwtl
mov
jnp
test
cmp
sub
xchg
jp
sbb
cmp
push
fwait
mov
mov
loop
pop
or
and
mov
xor
mov
loopne
sub
lcall
and
cmpsl
mov
mov
addr16
push
xor
popf
xor
lcall
popa
fstpl
sbb
les
fwait
cs
into
push
adc
cmp
idivb
push
aam
pushf
cmp
dec
data16
sbb
sahf
ficoml
jns
fiadds
jp
mov
push
pop
popl
pop
sbb
and
cmpsl
and
lretw
push
cmpsl
test
dec
mov
lods
adc
call
shlb
mov
ljmp
pop
xor
dec
mov
and
pop
xor
push
push
jbe
icebp
out
jecxz
fmull
xchg
mov
sub
lret
adc
jl
add
mov
mov
leave
add
cmpl
loope,pn
test
mov
movsl
ja
adcb
popa
js
add
sarl
dec
into
cs
cmpsl
inc
js
pop
xchg
lcall
jo
roll
xchg
sbb
xchg
daa
jmp
lret
and
sbb
loop,pn
inc
or
mov
mov
out
adc
psadbw
imul
std
and
sbb
negl
dec
std
not
pop
jnp
inc
pop
xorl
jecxz
mov
bound
sub
and
cli
inc
repnz
popf
outsl
or
inc
dec
in
xchg
jecxz
outsb
bnd
shrl
pop
add
dec
sbb
mov
ret
in
sbbl
sbb
inc
mov
jecxz
popa
mov
or
adc
add
sbb
lods
ljmp
pop
dec
int3
iret
in
adc
xchg
xor
shrb
push
scas
mov
cmp
inc
aaa
pop
mov
lea
fs
mov
pop
jns
clc
dec
and
xchg
sti
add
int
cwtl
push
ss
and
sub
pop
pop
fidivrl
pop
ret
sbb
daa
iret
push
push
adc
imul
add
cltd
fnstsw
or
mov
lock
js
and
cmp
into
mov
js
mov
push
enter
dec
out
cmpsb
mov
inc
insl
push
pop
ds
xchg
xlat
loop
mov
sti
scas
stos
dec
es
sub
icebp
mov
dec
push
lock
cmp
insb
sbb
jns
mov
repnz
push
inc
pop
or
addl
pushf
inc
sub
fldenv
nop
bound
push
xor
fidivrs
push
add
fsubr
lahf
push
rcll
jge
popa
mov
cwtl
xlat
and
lock
inc
jbe
lahf
test
and
mov
fiaddl
cld
iret
mov
lret
in
and
push
in
xor
dec
je
pop
sbb
pushf
loop
out
and
mov
mov
out
sub
test
or
enter
push
sbb
loop
adc
movsl
jmp
scas
and
orl
imul
inc
test
xor
mov
xchg
movsl
add
xor
pushf
int
dec
dec
cmp
fildl
inc
ficomps
xchg
xchg
mov
or
lds
inc
cmp
lret
inc
aaa
push
mov
into
push
mov
xchg
loope,pt
imul
xchg
sbb
push
mov
lcall
dec
dec
sub
mov
xchg
cwtl
aad
ljmp
jno
nop
dec
jae
and
aam
mov
mov
sbb
out
int
test
and
test
jns
imul
fistpl
fisubrs
xchg
inc
add
push
sub
push
mov
sbbl
sbb
push
mov
movsb
jge
push
cltd
cmp
or
hlt
and
ret
mov
dec
xor
out
ja
pushf
mov
mov
mov
pop
cli
and
bound
lret
lret
popf
aam
das
adc
imul
xorb
pop
mov
push
pop
mov
and
mov
xchg
mov
or
mov
lret
daa
ficoms
push
shrb
fwait
fs
add
sti
push
popf
pop
dec
fnstcw
sarb
add
adc
in
xchg
les
push
aam
xlat
movlps
in
fisubl
jl
cmp
shrb
jp
jo
push
xchg
arpl
loopne
aad
shlb
out
pusha
inc
in
cwtl
xor
test
inc
inc
imul
repz
out
cmpsl
sbb
jbe
aam
popf
enter
sbb
sub
cmp
sbb
out
leave
push
ss
pushf
adc
test
es
icebp
leave
mov
xor
mov
adc
jecxz
iret
xor
push
mov
js
jae
pusha
mov
or
lock
daa
scas
jle
lret
inc
ljmp
and
cmp
jg
pop
push
jne
daa
sbb
add
jnp
sbb
imull
nop
add
push
cltd
rcl
xchg
loop
mov
popf
inc
xchg
in
adc
lds
xor
fidivs
add
mov
xor
mov
push
fdivrs
daa
and
out
cltd
mov
mov
add
jmp
jge
aas
popf
imul
in
push
loope
sub
fwait
lods
and
js
loop
je
mov
mov
inc
cmp
mov
sbb
lret
and
adc
fcomip
aam
push
pop
xchg
mov
jae
iret
or
push
cmp
leave
subl
jmp
xchg
xchg
dec
fnstcw
sarl
shll
or
flds
imul
repnz
sub
jnp
stos
lret
repz
in
lea
sub
mov
sub
dec
and
aaa
inc
shlb
repnz
sbb
adc
push
mov
cmp
pop
cwtl
aas
jg
out
xor
sub
in
or
sub
fisttpl
add
jbe
lret
mov
fsubrl
push
and
or
or
mov
jp
sbbb
jns
mov
pop
xchg
inc
sub
ret
andb
sub
xlat
lcall
sub
add
shlb
jle
mov
iret
push
dec
jecxz
push
cmp
scas
cmp
mov
dec
add
push
outsb
loopne
sbb
jle
jp
sub
lea
sbb
inc
insl
inc
adc
das
rclb
call
pop
jae
cwtl
pop
je
shll
mov
and
inc
jge
push
and
xor
inc
push
out
inc
es
rcrl
mov
sub
addr16
roll
push
call
imul
mov
dec
inc
sub
push
fwait
outsl
scas
mov
in
dec
cmc
mov
mov
jbe
dec
jbe
sahf
test
xchg
mov
adc
mov
ljmp
xor
out
daa
xor
push
movsl
mov
jbe
fldcw
mov
mov
out
and
sub
loop
dec
out
xor
insl
xor
je
iret
dec
cs
out
and
sbb
lods
cmp
bound
add
mov
dec
loop
xor
movsl
xchg
sbb
jns
xor
shlb
popw
pop
stc
jle
mov
cli
pusha
cmp
aad
cmp
xor
mov
mov
dec
push
add
dec
scas
and
in
pop
decb
lds
in
scas
sar
pop
mov
lods
lahf
mov
jp
xor
negl
dec
pop
lcall
lods
stc
dec
lods
mov
repnz
in
xchg
pushf
bnd
out
shll
dec
sub
lcall
stos
mov
adc
mov
xchg
jle
add
stos
inc
mov
jno
or
imul
outsb
jns
popa
and
pop
jo
jmp
pop
fmuls
lea
xchg
jge
or
mov
jmp
cmp
je
cli
test
test
xor
out
fs
cwtl
das
sub
lcall
lock
pop
clc
inc
mov
mov
mov
jnp
sbb
imul
xor
movaps
rcll
add
xor
ja
pop
push
jbe
jg
movsl
stc
sbb
rcrb
movsl
add
fmuls
push
test
jmp
cli
adc
stos
jb
mov
pusha
jno
fmuls
lods
stos
xor
jne
stos
dec
xchg
stc
sbb
subb
mov
lods
jne
ljmp
push
clc
std
movsl
fyl2x
bound
rol
test
push
pop
jbe
xchg
mov
pushf
xor
jae
std
clc
sarb
cli
iret
jo
stos
loopne
xchg
xchg
mov
ljmp
jnp
pop
dec
cmp
out
sbb
jecxz
rolb
cwtl
lock
jecxz
mov
dec
outsl
sbb
fnstenv
jmp
test
dec
out
push
and
xchg
add
jecxz
mov
adc
ljmp
stos
test
inc
jl
es
cltd
lcall
je
push
add
mov
mov
ja
js
inc
or
cmpsb
push
pop
push
fucomi
mov
xchg
andl
lahf
dec
cltd
dec
push
mov
orl
xchg
call
xor
push
movb
add
movsl
lea
orl
fsubs
das
xlat
ds
jge
jnp
call
cmp
xor
mov
js
xchg
fsubl
adc
leave
imul
jnp
sub
out
pop
stos
cld
out
addr16
incl
xchg
cmp
into
inc
loope
jo
sti
jp
dec
mov
cmpsl
inc
fcmovu
mov
insb
pop
inc
xor
rorl
into
sti
jnp
jno
cltd
mov
in
push
inc
outsb
outsl
in
add
jg
mov
xchg
mov
daa
mov
aas
pop
xchg
and
mov
sub
cmp
ret
sbb
push
jg
jp
cmp
pop
adc
sub
and
das
and
jmp
xor
out
mov
cmp
or
inc
shlb
mov
xor
pop
stos
dec
ja
fdivl
leave
push
int
jbe
repz
jae
xchg
aam
popl
inc
mov
sbbb
xchg
stc
sbb
jmp
push
push
movsl
sub
cmp
into
push
iret
ffreep
jne
mov
ret
bound
data16
cmp
xlat
mov
mov
test
lret
scas
ja
jb
push
dec
lods
mov
rcll
insl
or
mov
pop
mov
xlat
jmp
mov
in
xchg
inc
stc
data16
mov
cmp
dec
jge
and
inc
lods
jbe
daa
pop
stc
rclb
enter
add
mov
xor
cmp
push
pop
jbe
sbb
pop
xchg
sub
sbb
sti
rol
and
stos
mov
insb
cmc
xor
sbb
add
dec
and
cltd
adcl
mov
adc
sbb
mov
inc
pop
xchg
pop
sbb
jmp
sub
sti
adc
push
cmp
and
pushf
mov
mov
std
cmp
push
jle
movsl
sbb
clc
push
loope
inc
gs
add
rol
push
pop
and
cmp
cmc
adc
sub
or
pop
mov
fnstsw
cmp
adc
stos
in
cmpb
dec
ficoms
movsl
adc
cmc
jno
imulb
jns
stos
sarb
leave
xchg
mov
mov
enter
adc
mov
mov
not
jmp
ss
not
jmp
ret
int
mov
testl
jl
dec
dec
mov
add
push
sbb
int3
cli
inc
repnz
lds
pusha
pop
lcall
xor
arpl
sbb
xor
xchg
leave
pop
leave
mov
inc
mov
jecxz
ret
mov
jmp
out
mov
ljmp
out
out
test
in
adc
push
loope
addr16
fbld
sahf
sub
stos
xor
lahf
mov
aad
xor
jae
mov
mov
and
dec
jp
bound
jo
cmpsl
mov
ljmp
jp
mov
jae,pn
pushl
xlat
pushf
jmp
cmp
aad
ja
mov
repnz
jmp
adc
xchg
add
push
push
dec
mov
push
or
cltd
xchg
jne
or
or
outsl
dec
sbb
xchg
das
xchg
gs
jg
xchg
sahf
push
xchg
imul
lret
jnp
add
aaa
pop
push
les
dec
pop
cld
cmp
imul
les
je
movsl
jbe
rolb
dec
hlt
rcrl
dec
mov
xor
lahf
xchg
jae
mov
mov
xchg
es
push
pusha
pop
das
add
lods
frstor
addb
js
bound
mov
ret
jge
popf
je
or
mov
or
sbb
loope
je
movsl
aas
arpl
popa
fldenv
jne
or
call
pop
push
dec
sub
sub
cli
fsubrl
dec
jmp
test
and
jecxz
inc
cli
int3
mov
sbb
mov
lahf
ds
sbb
loope
mov
mov
xchg
enter
sbb
out
cmp
and
jge
daa
jns,pt
movsb
lahf
pop
ret
ret
sti
add
sbb
push
and
clc
pusha
xchg
inc
or
dec
mov
js
or
xchg
or
push
loop
add
ja
aad
mov
lahf
andl
or
push
push
mov
fnstenv
adc
mov
movsb
clc
jno
mov
outsl
movsl
leave
push
out
mov
fadds
pop
inc
jns
scas
cmpsb
inc
mov
ljmp
int
loop
lods
and
lods
shrb
jmp
cmpsb
mov
daa
out
leave
aas
jo
push
sbb
cli
mov
dec
jg
imul
jno
mov
cmc
xchg
jns
mov
data16
push
dec
xor
lret
pop
pop
test
andl
in
and
lds
sbb
dec
lea
and
mov
mov
add
pop
shll
inc
arpl
jp
out
pushf
lock
repnz
mov
mov
jge
jne
out
mov
popa
mov
fs
test
jb
arpl
cld
xor
and
jb
movsb
xchg
push
in
sub
sub
add
xlat
cli
mov
in
push
or
lds
scas
or
push
adc
rcr
adc
clc
mov
fxch
inc
adc
xchg
inc
push
out
cmc
ret
mov
add
mov
jmp
in
mov
mov
call
cld
out
aaa
inc
mov
scas
imul
pop
jge
stos
cltd
lret
ljmp
mov
push
mov
adc
inc
test
sub
jecxz
in
jp
ljmp
dec
jno
addr16
pop
insb
insb
add
arpl
out
dec
fadds
imulb
icebp
adc
mov
int
adcb
jae
ja
lods
inc
call
sarb
or
imul
lcall
stos
out
mov
lea
push
mov
fisttpll
mov
sub
sbb
or
cmp
fisubrs
sub
or
dec
pusha
scas
sbb
aam
push
cmp
and
xchg
out
push
insb
lret
push
adc
mov
fidivs
js
in
mov
fnsave
arpl
roll
fildl
mov
out
push
adc
xor
loope
push
les
scas
fists
sbb
add
dec
xchg
ret
scas
shll
nop
js
sub
pop
or
push
dec
ss
jno
mov
add
xor
imul
inc
cmp
xchg
cmpl
mov
addb
push
mov
mov
aaa
mov
dec
daa
iret
clc
in
xchg
inc
sub
cltd
mov
jle
enter
pop
cmp
out
dec
fucom
dec
jnp
and
pop
sub
xchg
shll
repz
and
insb
in
sub
jno
imul
push
dec
push
jp
dec
shl
mov
xchg
sti
iret
adcb
pusha
add
xchg
std
leave
inc
mov
into
int3
in
imul
int
aam
mov
fimuls
stc
gs
push
and
popf
dec
mov
jo
test
jb
fcmovne
lahf
ret
testl
std
sub
pop
push
jnp
ss
inc
push
xor
mov
rcr
xchg
lock
in
mov
jp
rcl
pop
dec
xor
sbb
push
mov
inc
fildll
cmc
xor
std
dec
cmpsl
sahf
and
fucom
jg
das
loope
sbb
jmp
sub
jmp
xchg
in
or
push
mov
dec
xchg
add
scas
xlat
je
jg
loop
add
push
mov
lock
shl
inc
imul
ror
sbb
aad
or
xchg
push
vmovhps
pop
test
clc
out
jae
das
xchg
imul
xchg
lret
inc
imulb
push
or
pop
inc
pushl
nopl
xchg
dec
arpl
mov
lock
sbb
loopne
jb,pt
repz
xchg
push
mov
test
mov
out
adc
shlb
xor
fisubs
je
int
add
push
xchg
dec
icebp
push
add
pop
jle
sarb
inc
test
push
iret
jmp
into
xlat
sub
mov
enter
fmull
je
inc
test
push
lods
data16
push
sub
dec
push
out
push
cmc
stos
xor
scas
sub
out
mov
jno
ret
in
adc
inc
sahf
fldenv
and
cmc
dec
push
arpl
dec
notb
sub
fs
adc
popa
aad
sub
sub
mov
icebp
inc
push
pop
lods
mov
and
jns
xchg
inc
xchg
adc
xchg
xchg
daa
or
addr16
divb
lret
cmpsb
or
int3
pop
mov
dec
sub
xchg
movsl
fimuls
sahf
jecxz
ficoms
enter
mov
lods
adcb
lods
cmp
push
shl
adc
jo
fstpl
mov
add
adc
mov
inc
in
jle
cld
pusha
mov
pop
test
pop
mov
sub
or
shr
ss
and
push
push
ja
jae
xorb
bound
out
hlt
lret
data16
xor
xchg
int
cmp
movsl
insb
jmp
les
mov
wrmsr
mov
xor
sbb
inc
scas
mov
std
push
imul
ret
or
icebp
cmp
stc
push
jae
cltd
mov
addr16
sub
and
or
int3
sub
cmp
mov
dec
cmpsb
jae
dec
jecxz
jbe
inc
cs
inc
cmp
movsl
nop
pop
sub
adc
gs
fcoms
ret
and
dec
repz
ja
inc
xchg
xor
xchg
lods
lock
xchg
je
mov
outsb
cld
fsts
jns
jmp
popa
cs
xor
xor
cmc
mov
out
add
hlt
imulb
mov
inc
pop
pop
sub
cltd
repnz
cmc
call
cmp
imul
adc
push
fyl2x
xor
shlb
push
cmp
addr16
sbb
and
int
jae
jb
enter
xchg
test
pop
hlt
add
inc
push
push
dec
fists
sarb
sub
or
stc
cmp
movsb
shll
cmpsw
ror
insl
jecxz
loope
mov
xchg
loope
cmp
push
bound
lcall
push
pop
mov
repnz
cmp
mov
arpl
stos
je
lret
xchg
lods
inc
fnstenv
dec
inc
adc
sbb
shll
jns
das
cmc
mov
cmp
in
sub
fcoml
mov
les
ljmp
mov
popa
inc
inc
in
test
call
adc
scas
scas
adcl
pop
and
xor
leave
cli
icebp
dec
cmpb
adcl
loope
mov
ljmp
pushf
push
cmp
xchg
nop
pop
pop
pop
in
pop
and
out
arpl
or
out
int3
je
das
int3
fldcw
cmp
mov
push
pop
pop
shrl
aad
fs
iret
test
jb
push
jecxz
loopne
ljmp
or
int
scas
out
into
and
fisttpll
add
lods
sbb
cmp
push
ror
sub
xchg
addr16
test
enter
call
iret
fwait
jns
and
mov
addr16
mov
fbstp
rolb
xchg
sarl
aaa
leave
xchg
xchg
push
sbb
dec
mov
mov
jle
cmp
movsb
xchg
xchg
sbb
add
pop
iret
lret
mov
and
dec
dec
imulb
pop
shrb
dec
mov
sbb
sbb
adc
dec
mov
ret
mov
pop
out
or
loop
test
dec
jne
insl
xchg
jmp
and
xchg
xchg
call
inc
arpl
cmp
addl
xchg
aad
mov
pop
inc
mov
outsl
mov
add
mov
push
jno
test
or
jne
pop
lahf
lods
mov
lds
roll
push
mov
inc
aam
lods
repz
sbbl
notl
sbb
ror
test
inc
inc
sbb
sub
jo
cmc
mov
or
sbb
mov
mov
andl
dec
imul
sti
or
xor
loopne
dec
inc
sbb
cmpb
bound
pop
adc
mov
xchg
inc
sbb
fwait
rolb
mov
mov
jne
inc
sbb
xchg
shrb
sbbl
mov
add
sub
mov
inc
push
push
jb
cmp
mov
inc
fdivs
or
movsb
test
ret
push
bound
inc
ror
pushf
jmp
fildll
mov
mov
cmpl
sahf
fwait
es
pop
outsb
add
leave
jmp
xlat
inc
pandn
imul
xor
loopne
in
dec
dec
movsb
jnp
sub
or
cld
test
cs
fimuls
icebp
push
and
addl
aaa
pop
jae
mov
hlt
xor
push
xchg
add
xor
addl
pop
xchg
jnp
arpl
repnz
aam
xor
pop
outsl
mov
out
aad
scas
add
incl
pop
mov
push
mov
dec
in
push
mov
push
stos
push
dec
or
pop
repz
add
xor
adc
sub
ss
ret
adc
xor
sidtl
scas
adc
leave
dec
sub
jnp
icebp
add
or
and
popa
fwait
jp
mov
push
dec
xchg
mov
push
out
sarb
cmp
or
xor
and
push
iret
mov
cmp
pusha
sub
cmpsl
scas
push
sbb
push
push
mov
push
jle
mov
rorl
push
mov
sbb
mov
cs
pop
add
cltd
inc
in
inc
push
ljmp
inc
dec
mov
jne
mov
cld
loope
cld
fs
mov
add
stos
nop
sbb
sub
cmp
in
add
pop
xor
xor
xchg
ds
rcrb
xor
lock
sbb
or
pop
xor
adc
fs
mov
cmpsb
adc
jmp
sbb
sti
xchg
push
movsl
decl
jmp
push
cs
loope
lock
icebp
pop
sahf
xor
xchg
dec
dec
imul
xchg
adc
data16
aam
dec
movsb
or
ja
subl
lcall
pop
mov
inc
push
cmp
sub
pushf
cmp
mov
jl
xchg
fstp
cmp
in
nop
lret
mov
mov
and
test
add
mov
out
test
fstpl
out
clc
and
stos
popf
rcll
jbe
jo
push
cwtl
and
popf
xchg
push
imul
jecxz
fstl
and
inc
push
jnp
scas
mov
jb
out
nop
sbb
hlt
pop
pop
inc
nop
jno
ja
mov
iret
and
test
addr16
insb
and
popa
inc
adc
xlat
xor
cmp
cmp
test
add
dec
std
repz
lea
in
cli
leave
add
mov
pop
xor
es
mov
in
pop
jecxz
popf
js
insb
add
dec
mov
cwtl
xor
cmp
or
and
push
cmp
popf
cmpsl
adc
pusha
cld
in
mov
xor
aad
and
mov
push
jae
in
nop
xlat
pop
roll
sub
xor
cld
addr16
pop
push
hlt
sti
fidivl
sbb
sub
outsb
mov
enter
pop
sub
dec
mov
int
addl
xchg
xchg
ret
xor
imul
jecxz
es
dec
push
cmp
sti
cltd
neg
inc
xor
dec
call
inc
ret
push
push
loope
arpl
data16
outsl
lock
xor
mov
out
sub
inc
push
pop
sbb
aas
xchg
xchg
pop
scas
add
outsl
add
xchg
addr16
js
lock
mov
hlt
sti
negl
push
out
scas
push
jmp
addr16
mov
enter
mov
hlt
imul
xchg
jne
fcomi
pop
outsb
mov
or
pop
pusha
es
gs
repz
mov
sbb
std
push
sub
mov
sbb
iret
mov
push
jl
pushf
sbbb
rcll
into
add
js
push
pop
cmp
loopne
and
or
or
mov
popf
push
fs
jle
pop
xchg
data16
push
ja
outsl
loop
mov
push
or
jo
and
insb
pop
mov
xchg
fstpl
fcoms
lock
cmp
inc
fisttpll
xor
cmpsl
dec
movsb
adc
stc
rcrl
ror
outsl
sub
push
loop
jae
std
xlat
pop
pop
mov
mov
lahf
jb
dec
data16
ror
lret
pop
and
push
ret
rol
push
jb
cs
or
xchg
stc
pop
inc
stos
test
add
jle
and
subl
add
and
aas
xor
rorb
or
cmp
movd
jle
xor
adcb
fwait
mov
mov
jne
in
rorl
popa
lret
pop
ret
idivl
mov
cmp
in
aaa
mov
addb
mov
insl
adcb
test
jb
xor
push
pop
xor
sbbl
lock
mov
mov
aam
testb
ret
shlb
sub
inc
inc
xor
loop
rorb
mov
fucomp
daa
call
mov
sub
arpl
xchg
inc
push
testb
daa
inc
mov
leave
pop
add
xchg
push
insl
inc
xchg
inc
ret
loope
inc
gs
adc
pop
mov
mov
mov
xchg
push
sub
idiv
add
cmpsb
inc
dec
mov
jne
lods
dec
loop
test
push
mov
inc
sbb
call
mov
jp
mov
push
push
xor
dec
bound
dec
inc
stos
push
jp
dec
inc
jb
or
testl
pop
push
sub
cmc
imul
push
add
iret
es
pop
pushf
jle
pushf
enter
pop
add
shll
lahf
pop
into
int
das
dec
cli
insl
sbb
or
mov
mov
mov
movb
or
mov
sahf
pop
sbb
fcmovu
pop
lods
dec
jp
sub
sbb
xchg
sbb
rolb
pop
push
in
subl
pop
icebp
scas
jno
sub
xchg
out
jg
fbld
dec
enter
xchg
lods
addr16
dec
fidivrl
inc
dec
into
sub
xchg
xchg
or
jno
xchg
or
xor
cmp
aas
mov
int
mov
push
sbbl
push
sldt
stos
mov
push
dec
pop
jmp
dec
mov
aam
loop
fwait
pusha
inc
stc
sahf
and
lcall
enter
jae
stos
xor
sub
call
dec
or
and
iret
outsl
push
inc
in
cld
in
sbb
fdivrl
xchg
loop
jnp
pop
rcl
imul
add
shlb
orl
test
push
push
xchg
or
lret
push
daa
leave
cmpsb
xchg
popf
ret
pop
cli
fcompl
mov
jns
loopne
xor
filds
cmp
push
inc
pop
aam
rorb
loopne
fchs
sbb
add
sub
pop
xchg
sub
lea
stos
fdivl
incl
add
mov
mov
push
cmovns
dec
push
movsl
movsb
roll
mov
sbb
sbb
push
movsb
pop
push
icebp
sub
std
mov
out
xor
and
lock
mov
cmpsb
aaa
xchg
or
sahf
js
xchg
xor
lods
and
inc
jns
push
xchg
xor
ja
and
dec
stos
jnp
es
rorl
cwtl
cltd
sti
and
in
jge
ret
xor
mov
mov
jmp
cmpsl
add
fstp
stos
xchg
in
jnp
xchg
pop
pop
push
ret
mov
mull
cmp
push
dec
sub
push
sbb
xor
pop
xor
or
sbb
sahf
in
in
mov
mov
lret
aad
or
movsb
movl
pop
and
lock
mov
iret
mov
fwait
insl
or
sbb
mov
pusha
adc
ja
push
mov
mov
mov
fs
cmp
adc
scas
cmc
bound
cmp
xor
js
xlat
fisubl
sub
loop
jle
stos
mov
sub
add
fcoml
dec
and
and
push
bound
mov
push
sbb
xor
inc
enter
lds
mov
xor
je
cwtl
insl
and
mov
lcall
xchg
dec
add
inc
adc
nop
push
pop
adc
dec
dec
or
rcl
sbb
inc
cmp
sti
adc
inc
aaa
jge
movsl
mov
test
lds
pop
or
jo
push
mov
aaa
mov
push
fsts
in
xor
int3
sbb
sbb
and
sarl
lcall
aaa
xor
jns
leave
ljmp
sbb
push
imul
movb
rorl
xchg
or
dec
pop
sahf
dec
push
loop
cmpsl
ret
lods
jo
dec
xor
push
out
adc
xchg
ja
movsb
test
and
xchg
rcrl
push
dec
xor
dec
push
sbb
mov
push
sub
repz
enter
pusha
lret
out
mov
imul
jnp
push
pushf
pusha
mov
jp
leave
icebp
mov
jge
xor
lock
mov
pop
out
cmc
or
outsl
lret
gs
hlt
dec
jmp
nop
xchg
mull
push
xchg
das
cmpsl
cmp
xchg
in
js
out
jmp
xor
mov
out
xchg
dec
jns
pop
dec
add
sub
jns
leavew
das
aam
pusha
push
push
test
cmp
pop
push
pop
or
popf
cmp
push
sbb
jbe
loopne
inc
into
scas
add
cmp
and
jp
iret
push
inc
movl
andl
imul
jo
das
rorl
push
xor
sub
sub
sbb
xor
aad
rdpmc
add
push
push
clc
shlb
repz
sbbl
ljmp
and
dec
cmc
xor
inc
imul
push
mov
nop
inc
pop
fstpt
inc
push
mov
cmp
test
and
jge
lret
ret
inc
aad
cmp
inc
loope
jo
fs
stos
push
mov
out
pop
mov
mov
lods
imul
mov
inc
fidivrl
shrb
std
mov
jp
push
push
xor
cld
cmpsl
outsl
test
jmp
and
shrl
push
into
mov
cmp
popf
mov
insl
fwait
add
xchg
jb
stos
mov
push
fidivl
cltd
mov
outsl
lret
ljmp
push
jnp
or
pop
dec
frstor
das
dec
adc
dec
or
out
std
aas
pop
pushf
stc
jg
lods
xor
in
dec
jbe
aad
mov
lock
outsl
ja
imul
lret
xchg
jle
push
into
sarl
xor
and
lahf
and
dec
jae
inc
fdivr
push
inc
dec
adc
sub
arpl
mov
sub
xstore-rng
cmpsl
inc
inc
roll
adc
stos
lahf
inc
aad
and
cmp
inc
test
mov
and
inc
mov
push
and
cmp
pop
inc
and
lahf
mov
lock
lcall
outsb
insb
aas
pop
xor
xlat
stos
dec
ss
push
jmp
popa
cmp
xor
cmc
sub
xchg
inc
in
push
dec
frstor
lods
stc
in
add
adc
ljmp
pop
scas
xchg
xor
addr16
shl
stos
push
xor
and
incb
div
mov
mov
in
adcl
cwtl
movsb
bound
xlat
out
js
xchg
xchg
mov
pop
dec
adc
pop
mov
push
loopne
imul
in
ret
out
stos
lahf
mov
xchg
or
enter
mov
stos
jle
inc
addr16
scas
sti
popf
loope
push
pop
sbb
sbb
mov
add
mov
pushf
xor
jmp
enter
jmp
mov
lret
daa
out
imul
adc
rcll
test
jle
scas
sub
sub
testb
jl
gs
xor
sub
xchg
mov
mov
or
andl
rolb
test
cmpsb
or
pop
jge
pop
xchg
pop
ss
out
xchg
ljmp
das
dec
dec
jno
pop
divb
pushf
xchg
xchg
loopne
iret
dec
fsubrl
out
ljmp
scas
push
aas
ja
mov
add
pop
add
popf
push
lods
repnz
pop
outsb
mov
push
cmp
dec
insb
mov
cwtl
mov
repz
xchg
and
sarl
add
or
jbe
stc
xchg
jl
cli
mull
push
repz
testl
movd
adc
push
jo
dec
push
dec
popw
sbb
faddl
mov
aad
sahf
dec
lock
stc
pop
jg
inc
pop
iretw
cmpsl
sbb
lds
mov
jle
mov
inc
adc
push
mov
rcr
pop
push
inc
enter
ret
in
filds
lret
subl
jno
mov
dec
loopne
or
cmp
or
mov
mov
jmp
dec
lods
add
inc
jle
jbe
mov
pop
mov
or
push
sahf
insl
outsl
mov
xlat
and
dec
in
jbe
add
mov
xchg
xchg
andb
jbe
inc
dec
and
push
mov
std
inc
and
ja
leave
push
lret
jmp
sbb
gs
cltd
pop
inc
jne
push
movsl
cwtl
loop
into
repz
push
popa
test
data16
repz
into
push
inc
mov
shrl
addb
jecxz
mov
inc
add
scas
shlb
xchg
dec
cmp
xor
add
int3
push
clc
adc
dec
test
int3
jb
xorl
rorl
loop
sbb
ja
rcr
pop
mov
sub
push
hlt
fwait
mov
inc
jbe
pop
pop
lret
push
cmp
ja
push
jecxz
or
sti
jecxz
pop
rolb
enter
and
rcl
mov
ret
dec
pop
push
sbb
xlat
adc
and
jge
push
pop
jge
insl
adc
adc
inc
addr16
loop
rorl
push
xchg
fsts
mov
mov
movsb
xchg
leave
sbb
fidivrs
dec
adc
lahf
xchg
jecxz
add
jne
dec
mov
pop
imul
push
popa
jle
and
xor
gs
lods
addl
test
lea
aas
in
leave
fxch
jp
or
and
pop
stos
cwtl
les
imul
pop
sbb
cmp
dec
cli
mov
mov
imul
cli
inc
roll
pop
inc
sub
mov
add
xor
sahf
inc
aaa
popf
dec
mov
scas
das
sbb
lea
outsb
outsb
or
inc
push
jle
sbb
mov
lret
jle
push
pusha
int3
stos
imul
dec
data16
daa
pop
push
and
aam
mov
test
and
add
lret
jnp
shlb
and
push
ret
mov
and
sti
imul
push
cld
arpl
xchg
dec
push
mov
adc
jl
ljmp
addr16
call
loop
jle
pop
add
pop
push
xor
scas
sti
addr16
into
mov
mov
adc
stc
testl
sub
and
aas
xchg
aas
imul
push
jge
scas
fldenv
into
mov
sbb
fildl
rclb
and
out
mov
in
int3
movsb
ds
mov
inc
ds
inc
ret
into
sub
loope
xchg
jge
jmp
lahf
cmp
add
bound
popf
push
inc
mov
pushf
stc
push
mov
xchg
sub
jo
pop
rorl
or
test
pusha
push
jb
aad
jecxz
jl
ds
mov
sahf
sbb
enter
mov
jns
dec
push
out
mov
push
adc
or
cmpsl
inc
andb
sub
pop
mov
jmp
mov
pop
jg
and
cmp
pop
lahf
inc
inc
sti
xchg
std
insl
xor
and
mov
pop
adc
xchg
outsb
mov
jns
stc
mov
lret
sub
and
movsb
jge
sub
mov
mov
sub
dec
lret
add
adc
sub
inc
mov
mov
jo
or
cmpsb
arpl
push
mov
xor
pop
lcall
dec
push
or
call
jecxz
ret
xchg
inc
jb
add
xchg
cmpsb
xchg
lods
or
and
dec
insb
push
push
inc
xor
mov
pop
cmp
jb
jns
jne
cmp
in
aad
aas
ror
stos
mov
adc
jg
mov
into
or
arpl
adc
rolb
push
dec
enter
inc
sub
xchg
xchg
adc
fwait
mov
call
and
pop
repz
int
xor
sbb
mov
pop
int3
or
sub
xchg
mov
cmp
mov
inc
in
xchg
and
aad
cmp
xlat
je
scas
shll
jg
loop
add
add
sbb
push
sub
dec
or
lods
push
dec
cld
mov
add
jmp
jmp
fwait
adc
jmp
leave
fidivl
dec
mov
std
flds
inc
xchg
lahf
filds
scas
js
mov
imul
enter
int
cld
imul
stos
cmp
scas
inc
in
mov
ret
pusha
xchg
scas
adc
cmpl
inc
adc
sbb
clc
scas
ret
inc
scas
push
mov
jo
and
ja
push
and
les
inc
cmp
mov
test
sbb
inc
int3
rorl
notl
dec
mov
shll
cmp
test
mov
cmp
cs
cmp
adc
cmpb
daa
pusha
in
xor
in
dec
imul
aas
lods
xchg
jmp
aas
div
mov
shlb
scas
adc
fstps
or
mov
push
int3
dec
bound
rol
jp
push
in
push
and
inc
cmp
jae
push
or
lock
xchg
sbb
jns
inc
mov
or
fwait
das
or
and
addr16
adc
bound
loopne
aam
jmp
adc
xchg
outsw
addb
inc
cmp
jns
adc
popa
xorl
lock
and
push
add
aad
push
cmp
push
push
dec
call
jmp
adc
or
sub
icebp
mov
sub
push
dec
cli
cwtl
dec
shll
push
out
push
fucom
dec
xor
mov
inc
pop
pop
das
jo
push
loope
add
lock
or
fwait
dec
cmc
sti
xchg
xchg
stos
jmp
lret
add
outsl
sbb
cmp
inc
pop
inc
or
bound
lock
clc
insl
jmp
add
pop
mov
sbb
mov
push
add
add
add
ret
or
adc
sub
mov
cmp
enter
sbb
xor
pop
jl
inc
popa
scas
cli
dec
mov
test
and
mov
fisttpll
jmp
jno
push
mov
adc
lea
jno
lret
shlb
add
jns,pt
jl
clc
out
sti
mov
adcl
in
dec
movsl
clc
xchg
dec
sar
and
jp
mov
lret
clc
daa
loopne
jl,pn
dec
push
lods
jae
je
movsb
repnz
negb
cmc
adc
cwtl
cmc
lahf
cmp
jb
jl
ss
aas
stc
mov
ror
add
jmp
cld
test
enter
cmp
jb
mov
jecxz
lret
je
clc
push
xchg
out
daa
xor
cmp
cmc
or
mov
lock
jg
sbb
cmp
xchg
xchg
imul
into
pop
cmp
xor
fs
loopne
and
sbb
fld
sbbl
dec
dec
enter
ret
jg
add
inc
xor
mov
push
int3
loopne
scas
loop
sahf
ljmp
data16
dec
hlt
testl
rclb
or
add
xchg
inc
neg
sarl
test
mov
jmp
cmp
mov
shlb
lahf
sub
icebp
push
push
and
jne
jle
pushf
fbstp
mov
lods
mov
stos
mov
push
fisttps
les
lea
sbb
mov
addr16
in
iret
jns
ds
push
lods
scas
shll
je
daa
push
cli
mov
cmp
pop
jo
push
scas
xor
add
aam
stos
sub
adc
jno
dec
adc
fwait
inc
cmp
repz
ret
jge
push
jmp
rolb
insb
lcall
sbb
mov
adc
xor
ret
mov
fmul
adc
sahf
jp
xchg
ret
mov
jg
or
jae
or
and
and
xchg
stc
movsb
out
jg
int3
out
jge
sbb
mov
ja
pop
fadds
test
mov
cmp
lods
enter
xor
aad
jns
push
aas
fcos
sub
std
mov
enter
aas
xlat
scas
pop
mov
jmp
stos
mov
enter
mov
repz
bound
cmpsl
test
push
adc
pushf
mov
dec
dec
mov
rcll
mov
fs
xchg
inc
popf
daa
ss
sbb
fwait
aad
scas
jg
nop
addr16
sti
enter
mov
test
js
adc
jle
dec
js
mov
pop
popf
scas
inc
push
rclb
push
mov
jno
dec
int
add
in
cld
and
xchg
mov
inc
repz
or
in
push
insl
mov
ficoms
xor
test
xor
xor
stos
jl
push
fadds
imul
fisubrl
mov
testl
insl
adc
test
ret
insl
push
push
xlat
dec
fldt
push
insb
or
adcb
shr
sub
scas
int
and
fildl
cmp
xor
xchg
adc
mov
cmp
fdivrl
mov
movsl
xchg
ror
mov
into
mov
dec
shll
jge
inc
jle
dec
sbb
mov
lahf
js
sahf
cld
adc
xchg
shll
jae
add
inc
xchg
daa
hlt
push
cltd
dec
mulb
and
add
ret
lahf
fldenv
xchg
jmp
movsl
lea
lock
cmpsb
sbb
inc
into
and
scas
fiadds
int3
ja
mov
xor
fyl2x
adc
aaa
sbb
dec
pop
data16
pop
shrb
cmp
and
lahf
pop
dec
loop
inc
and
add
cmp
ja
mov
js
call
test
cltd
inc
mov
test
es
sub
arpl
test
inc
mov
or
mov
lds
mov
ds
adc
xor
out
dec
jae
jmp
out
xchg
loopne
je
add
or
mov
and
cmpsb
add
and
pop
sbb
stc
sbb
pop
fnstcw
into
les
adc
mov
and
cmc
jge
xor
mov
clc
mov
mov
andb
mov
sar
push
cmp
ljmp
data16
notb
xchg
mov
dec
xor
mov
popf
jns
ds
inc
icebp
push
sub
sbb
ret
in
xor
ret
mov
cmp
xor
xchg
push
mov
ja
idivb
lea
and
addr16
arpl
lock
xor
rorl
sarl
hlt
inc
jne
insl
pop
cmpsb
push
loop
pushf
jbe
sub
scas
int3
add
inc
pop
outsl
push
shll
repnz
push
in
add
or
out
stos
pop
jp
pop
daa
dec
repz
xchg
add
or
pop
aam
enter
or
xlat
testb
icebp
and
fidivrs
test
les
gs
mov
pop
jbe
mov
jp
outsb
imul
scas
jo
cmp
jns
xchg
call
enter
mov
inc
movsb
out
inc
sbb
dec
push
xchg
popa
xchg
add
pop
push
ljmp
pop
inc
repnz
sbb
push
lods
jle
sbb
mov
push
mov
data16
mov
rcll
pop
sbb
jbe
neg
pop
iret
pushf
xchg
push
add
pop
test
adc
push
jae
xchg
or
xchg
jp
out
xchg
insb
js
mov
sbb
jae
hlt
icebp
add
ja
mov
inc
jp
dec
xor
sbbb
in
fst
ja
dec
out
jp
fstpl
fisubl
pop
aas
enter
lea
sbb
sub
and
mov
push
xchg
roll
cmp
push
pop
and
iret
lret
fucomip
jge
outsb
inc
and
jecxz
fistpl
out
ret
popf
sbb
inc
jp
add
jne
ret
push
inc
dec
cmpsl
stos
mov
mov
mov
out
aam
lds
xlat
mov
or
xor
test
iret
aad
enter
mov
test
cmp
mov
pop
sub
cmp
aas
test
shl
gs
aam
lods
testb
shrb
imul
xchg
inc
iret
aas
and
add
jp
jl
fisttps
inc
push
les
cmp
fwait
sbb
sub
pop
xor
lds
out
pop
and
mov
push
stos
call
and
neg
iret
nop
cltd
shl
or
bound
inc
push
pop
mov
fucomip
std
ds
adc
dec
bnd
mov
jmp
mov
cli
adc
inc
sahf
imul
xchg
adc
xor
cwtl
adc
ja
dec
lret
adc
int3
nop
add
inc
bound
arpl
add
popa
jge
pop
xchg
in
push
das
imul
loopne
imul
fidivs
out
jo
or
les
cs
out
cmp
inc
add
xchg
in
dec
test
mov
insb
inc
int3
ret
jge
aad
xor
cltd
iret
and
js
loopne
loop
je
shlb
ss
das
aad
mov
sub
in
jbe
test
dec
and
sub
popf
arpl
fidivrs
jecxz
jns
dec
and
sahf
fstl
movsl
cwtl
cmp
jb
aad
push
sti
xor
jg
push
fdivs
jnp
mov
mov
cmc
fimuls
sbb
loop
orb
fdiv
repnz
push
and
ret
xchg
insb
sub
cmp
mov
mov
test
aaa
scas
shrl
lds
pusha
stos
movsl
imul
arpl
cli
out
dec
outsb
jno
xchg
aaa
push
ss
out
cmp
inc
xchg
cmpsl
push
es
mov
pop
das
fs
jp
test
or
mov
inc
or
test
sbb
leave
fs
ja
xchg
lret
frstor
mov
in
mov
iretw
cmp
or
add
adc
lods
cmp
stos
mov
adc
pushf
shl
push
xor
pop
in
cmpsl
mov
adc
adc
jne
imul
sub
ret
cwtl
pop
notb
and
push
into
xchg
dec
lcall
inc
inc
cmp
or
imul
mov
jp
sbb
popa
test
loopne
dec
push
jnp
sti
rclb
cmp
push
add
add
sub
adc
xor
add
inc
lret
mov
fxch
jge
bound
icebp
fdivrl
add
sbb
popa
adc
or
pop
inc
pop
sbb
sbb
cmc
mov
or
dec
xor
mov
je
shrb
sarl
lds
and
movsl
mov
repnz
aaa
sub
test
pop
pop
gs
push
int3
testb
pop
pop
popf
inc
repz
out
mov
cmp
repnz
test
pop
xchg
rcrb
adc
es
std
dec
orl
movsl
js
inc
lea
inc
mov
sub
outsl
repnz
in
dec
and
mov
adc
mov
xchg
jmp
cmp
scas
aas
mov
scas
stos
mov
add
mov
mov
roll
daa
loope
inc
mov
push
lds
inc
jmp
and
mov
cwtl
pop
inc
lret
push
shl
scas
int
repz
xchg
aas
mov
mov
adc
mov
mov
pop
ss
mov
pop
pop
in
sbb
push
int3
daa
int3
jo
arpl
test
lods
into
mov
pop
mov
inc
sbb
mov
cli
xchg
jge
pushf
mov
or
pop
and
fdivs
hlt
imul
sbb
test
aam
fstpl
lret
aaa
pusha
inc
xchg
fldln2
scas
aas
inc
mov
test
repz
mov
das
les
add
fxch
lcall
and
dec
xor
lds
ds
sub
out
repnz
int3
push
and
pop
cltd
dec
fwait
jecxz
dec
and
push
mov
js
xchg
inc
jno
ljmp
dec
cmpsl
mov
mov
push
pop
nop
inc
scas
pop
lret
nop
add
mov
outsb
aas
ljmp
cmpsl
sbb
mov
loop
xchg
in
xor
les
inc
loop
inc
mov
sbb
dec
xchg
jb
andl
jnp
aaa
dec
xor
das
push
mov
mov
loopne
in
pop
jle
lods
adc
dec
gs
jle
orb
das
add
mov
adc
leave
mov
out
cltd
repz
jp
dec
outsb
xchg
iret
xchg
inc
xor
test
shlb
rorb
call
scas
xor
mov
test
add
outsl
sbb
cmp
mov
push
stos
bound
xor
pop
fstpl
mov
mov
xor
mov
mov
jl
out
sub
xchg
jno
adc
repz
nop
decl
rcrl
rorb
stc
push
lock
inc
fcoml
in
cli
xchg
inc
orb
push
mov
lahf
jmp
int
dec
sub
notl
push
out
jecxz
in
cltd
xor
dec
cmp
scas
cmpsb
mov
jmp
add
insb
and
rcrb
push
lret
mov
mov
mov
shl
jg
loop
mov
rorl
hlt
cmp
and
push
dec
dec
xor
push
pop
sbb
adc
dec
in
ljmp
mov
test
inc
mov
push
cmp
pusha
fidivrl
xchg
enter
aam
push
aad
and
xor
lret
sub
fdiv
xor
jb
fisttpll
xor
xlat
and
mov
sbb
andb
mov
cmp
es
mov
mov
mov
pop
jns
or
test
pop
call
bound
jp
in
mov
test
mov
mov
sbb
xchg
push
add
cmp
sti
pop
popa
sti
outsl
popl
jne
repnz
mov
pusha
adc
test
sub
mov
add
sahf
clc
les
in
sbb
imul
imul
inc
adc
add
lods
cmpsl
sub
push
jne
data16
inc
xlat
adc
or
sub
pop
cmp
les
and
sar
sbb
loope
hlt
dec
adc
and
xor
pop
fwait
popf
scas
push
sti
mov
int
add
dec
mov
dec
into
push
nop
pop
jbe
push
add
mov
out
mov
jecxz
outsb
insb
dec
arpl
pop
push
push
xor
pop
jnp
cld
bound
sbbl
jge
test
out
stc
jne
out
leave
pushf
fbstp
js
add
repnz
fidivrs
and
push
mov
adc
std
cmp
jecxz
push
mov
push
jne
cltd
and
out
sarl
jg
clc
setae
push
clc
sbb
aam
lds
push
std
xor
push
out
mov
loopne
adc
pop
cmc
dec
add
xor
dec
loope
rolb
dec
mov
ret
or
lret
push
fsubr
inc
jbe
cs
or
push
mov
ljmp
test
arpl
xor
test
sbb
repnz
clc
fnsave
mov
out
sarb
sub
loopne
dec
stos
sub
cmp
insl
pushf
pop
ret
cmp
out
mov
jecxz
mov
fs
inc
push
ret
icebp
filds
xchg
sbb
dec
shlb
das
xchg
xchg
mov
dec
add
es
jns
mov
not
adc
and
inc
repnz
xchg
scas
sub
lcall
icebp
addr16
and
cmp
fsts
mov
call
ss
mov
mov
cmp
jbe
xchg
mov
aad
cvtps2pi
jg
sub
movsb
std
jb
cmp
sbb
fistpl
inc
jno
movsl
int
xor
adc
cmp
int
cmp
push
pop
add
iret
xchg
bound
mov
push
pusha
cmp
shrl
loop
inc
aam
xchg
fdivrl
pop
cltd
movsb
mov
in
xchg
andb
scas
dec
jbe
push
scas
cmp
icebp
xchg
sub
pop
sub
mov
xor
nop
popf
shlb
mov
mov
ds
fistl
ds
rolb
sub
dec
add
fsts
imul
in
cs
xchg
mov
mov
mov
mov
pop
cwtl
lods
cmp
fwait
mov
inc
push
xchg
push
push
inc
sbb
mov
or
jns
jecxz
push
sub
arpl
mov
pop
lods
data16
js
sub
inc
daa
outsl
jl
call
das
xor
in
fstps
sti
mov
cli
mov
mov
mov
andb
femms
mov
or
xchg
sahf
es
dec
cmc
imul
inc
fbld
or
sbb
inc
inc
scas
fcoms
mov
in
add
test
jno
jnp
mov
sub
or
lret
div
pop
mov
es
sbb
fwait
cs
push
lods
ret
xchg
mov
test
test
loope
nop
decl
testl
cld
repz
aad
das
sahf
jns
and
dec
push
mov
adc
subb
sahf
lock
mov
sub
cmpsb
stos
adc
inc
sbb
stos
ja
cwtl
adcb
add
les
mov
rolb
cwtl
jo
arpl
inc
in
negb
leave
mov
pop
repz
out
shlb
mov
mov
decl
imull
je
jp
inc
xchg
mov
cmp
pop
dec
scas
sarl
inc
lods
pop
mov
jae
inc
test
aam
inc
adc
jg
xchg
xor
lcall
push
push
mov
les
push
out
cmp
scas
dec
out
jl
or
icebp
sub
lret
rcr
std
jne
mov
je
jge
test
push
mov
mov
imul
xlat
mov
xor
repz
arpl
movsb
pop
imul
clc
fadds
int3
mov
inc
mul
cmpsb
jmp
int3
xchg
clc
ja
pmuludq
lahf
iret
mov
add
mov
rol
jmp
jecxz
cmp
add
jge
cmpsl
adc
xchg
xor
je
adc
insb
xlat
andb
xchg
in
ja
scas
repz
and
lahf
mov
adc
sbb
ret
rorb
mov
fists
and
pop
inc
js
adc
subb
iretw
or
push
or
stos
sbb
sub
mov
int3
jb
test
sbb
mov
fucomip
pop
insb
adc
sbb
movsb
mov
pop
pop
jg
pop
inc
les
mov
cmpsl
mov
adc
sub
mov
pop
ss
sti
aam
aas
pushf
rcrb
push
cmpsb
loopne
jecxz
sti
fmull
in
lahf
push
rorl
and
xchg
in
adc
or
lock
xor
cmpsl
in
mov
ret
cmp
dec
popf
lods
xchg
xchg
mov
cmp
ret
loope
stos
stc
jno
xor
es
dec
flds
cmp
loope
mov
sar
jge
pop
repnz
mov
mov
xchg
js,pt
mov
or
mov
divl
rorb
insl
dec
stc
jns
pop
lahf
into
mov
xlat
fisubrs
and
dec
in
mov
lea
push
add
and
pop
or
adc
xchg
mov
xor
cmp
ficompl
and
hlt
sub
sti
int3
jecxz
test
push
and
aaa
adc
adc
jge
or
cli
enter
shlb
inc
rol
sbb
lret
mov
sub
movb
sbb
jnp
mov
ds
pop
fwait
pop
in
icebp
imul
addr16
sub
in
test
sub
imul
and
cmp
pop
test
add
inc
dec
cmp
in
data16
dec
lds
fisubs
xor
mov
push
fnstenv
xor
fs
xchg
mov
sub
mov
lea
xchg
rcrl
jns
je
sbb
stc
sub
mov
ret
repnz
add
sub
inc
mov
push
or
push
jo
sub
int3
jo
call
mov
cmp
xchg
sub
dec
loope
ja
cld
aam
pusha
lods
push
into
jp
test
pusha
movsl
xlat
lea
cmp
lcall
inc
sti
mov
jbe
mov
out
jb
lods
int3
fs
inc
jo
xchg
push
adc
lea
push
jno
mov
and
int3
mov
insb
in
scas
icebp
in
or
imul
cmp
stos
in
mov
mov
pop
dec
lods
dec
and
xchg
xor
dec
outsl
lcall
rcrl
lock
jno
lret
push
mov
cwtl
shll
lds
lret
cmp
sub
fldt
mov
jno
cld
cmpsl
inc
cld
movsb
sbb
jne
negb
pop
mov
add
test
and
imul
outsb
addb
lahf
xlat
ss
xchg
xchg
in
add
in
and
jecxz
pop
outsb
into
shll
ret
jle
sahf
xchg
pop
hlt
cs
xlat
jle
mov
or
adc
add
cmp
fwait
lahf
dec
ficomps
mov
push
and
mov
sub
xchg
loopne
and
mov
push
cwtl
sub
mov
pop
xchg
dec
xchg
lods
mov
ret
movsl
mov
stos
mov
in
ljmp
push
jb
inc
icebp
out
jmp
add
pop
xchg
cmp
fsubr
les
push
jmp
test
dec
popf
jno
repz
enter
pop
std
enter
icebp
vmread
fs
js
inc
decl
nop
sub
ret
inc
data16
les
mov
idivl
cltd
bound
mov
mov
jae
fiaddl
mov
jecxz
fstps
jge
push
cmpl
sbb
stc
notb
js
xchg
inc
xor
imul
mov
dec
arpl
xchg
jecxz
dec
mov
push
in
sub
mov
sub
cmpsb
inc
pop
dec
mov
cmpsb
popa
outsl
mov
test
dec
pop
das
jmp
lea
push
jg
scas
dec
std
inc
or
pushf
movsl
pop
cmc
add
adc
nop
mov
add
imull
xchg
lea
and
add
imul
leave
jge
sub
icebp
mov
out
xchg
arpl
sbb
in
ret
push
ljmp
out
xchg
inc
adc
leave
xchg
push
call
xor
push
jmp
sbb
jg
xor
mov
notl
add
cmpsl
or
fs
ret
mov
mov
test
mov
pop
stc
in
adc
mov
nop
insl
cli
jnp
leave
andb
mov
xchg
in
data16
sub
or
adc
adc
mov
and
dec
jl
repnz
add
adc
xor
fisttps
add
jp
in
mov
dec
inc
sahf
push
push
shl
in
addr16
xlat
cmp
lods
repz
clc
push
and
sbb
adc
pushf
aaa
in
sbb
mov
mov
popa
mov
loopne
push
pop
xchg
setge
sub
insl
aaa
jns
js
aas
in
mov
and
cmp
aaa
scas
pop
pop
xor
scas
sub
stos
and
loopne
iret
pusha
pop
in
daa
xchg
push
dec
add
or
setle
fs
clc
les
fisubrs
cmp
adcb
inc
jle
inc
addr16
or
inc
sub
cli
mov
push
dec
push
sub
cmp
sarl
xchg
hlt
pop
test
sub
rolb
lods
pop
nop
and
xchg
in
cmp
pop
cmpb
dec
lods
push
aas
xor
inc
lods
push
adc
mov
outsl
mov
scas
test
enter
fsubs
sbb
jne
pop
push
xor
cmpsl
adc
mov
testl
mov
or
sub
outsl
cmp
ljmp
fisubrs
xchg
call
add
inc
movsl
sub
jno
cmc
cmpb
pop
addl
loopne
mov
cmp
addr16
or
inc
out
ret
mov
cmpsb
sbb
scas
outsb
test
repnz
aaa
xlat
aam
mov
inc
cmp
xor
pop
lods
out
inc
mov
movsb
sub
mov
ret
popf
insb
xor
xchg
cmp
fmuls
les
call
loopne
es
push
jb
dec
mov
out
bnd
push
cmp
je
pusha
pop
fsubrs
sub
cmp
dec
mov
fadds
imul
out
mov
enter
arpl
dec
push
and
out
dec
and
clc
jns
int3
fimuls
xor
test
adc
fdivr
push
orl
cmp
cmp
jmp
jl
jne
fiadds
imul
cld
call
push
pop
push
test
xchg
xorl
cmp
pusha
scas
aaa
int3
mov
and
inc
hlt
pop
sub
cwtl
sbb
sub
lcall
cld
xor
adc
nop
xchg
mov
sbb
lods
push
mov
js
lock
aam
lcall
xchg
mov
es
inc
sbb
pop
xchg
add
test
les
or
in
cltd
out
lcall
pop
jns
cltd
dec
sbb
push
jecxz
pop
or
mov
dec
and
sbb
or
pop
sbb
xor
ss
and
adc
mov
adc
pop
imulb
mov
out
or
sbb
js
pminsw
dec
dec
push
jmp
xor
xchg
push
mov
mov
xor
and
sti
addl
shrb
repnz
mov
mov
testb
cmp
mov
mov
fists
jno
pop
mov
loope
cmpsl
sub
pop
lock
arpl
push
popa
dec
fwait
pushf
xor
dec
mov
cltd
and
lds
and
push
lea
ss
cmp
push
es
out
push
pop
mov
dec
or
call
sarl
ja
adc
negl
add
mov
insb
pop
aas
or
and
pop
pushf
push
lea
sub
out
pop
push
or
scas
mov
jns
adc
rorb
and
jbe
adc
cmp
loope
mov
add
dec
adc
rcll
es
arpl
jp
mov
cmp
xchg
icebp
mov
push
lret
mov
insl
add
cld
mov
xchg
hlt
cmp
icebp
inc
mov
or
out
jo
push
lock
add
mov
cmpsl
dec
adc
cltd
shlb
adc
sub
and
add
xor
out
dec
mulb
push
jecxz
cli
sub
push
into
mov
int3
outsl
or
sbb
or
adc
or
mov
leave
js
fimuls
ljmp
mov
in
dec
repnz
das
out
int
cli
cltd
cmp
push
xor
dec
cmp
pop
mov
and
add
mov
xchg
outsl
cld
mov
xchg
push
scas
sbb
xor
push
fldenv
out
or
test
xchg
dec
or
shlb
rclb
pushf
nop
nop
push
push
popf
cmp
adc
outsb
inc
mov
jecxz
es
or
shrl
sbb
push
sbb
int
cmp
outsb
sbb
mov
aam
mov
lods
ret
cld
or
mov
dec
cmp
cmp
push
add
inc
pop
dec
push
pop
ret
push
xor
pop
in
test
das
push
cmp
inc
and
mov
iret
lret
jnp
jmp
ja
les
in
push
adc
sbb
lds
rolb
xor
mov
mov
dec
sahf
pop
or
xor
jp
xor
les
jl
xchg
sti
push
jb
xchg
arpl
and
andb
shr
jle
es
js
xchg
sub
add
xlat
shll
inc
jge
call
sub
dec
and
nop
push
inc
shrl
call
xchg
out
xchg
mov
popf
repz
stos
shrl
lea
pop
add
dec
mov
cmova
ds
cmc
jmp
adc
imul
arpl
push
mov
rcrl
cmpl
mov
or
cmpsl
outsl
dec
push
sahf
dec
ffree
pop
shlb
sarb
jnp
mov
jle
sub
out
dec
ljmp
jecxz
inc
mov
push
mov
gs
jbe
lret
xchg
cmpsl
push
stos
inc
sub
in
push
subb
test
mov
mov
sub
es
adc
or
data16
add
inc
loopne
jg
and
xor
xchg
xchg
enter
xchg
mov
je
xor
xor
int
sub
pop
push
aas
out
adc
cmpsb
mov
add
dec
in
out
sbb
insl
mov
pop
faddl
mov
aam
jp
and
rolb
push
sbb
decb
cmp
cmp
stos
or
jecxz
dec
rolb
test
std
or
loop
jae
imul
dec
lods
mov
pop
je
xchg
cmp
jp
dec
dec
testb
jmp
inc
cmc
mov
into
pusha
inc
add
arpl
mov
imul
dec
adc
flds
std
lods
push
xchg
sbb
dec
sub
or
adc
popa
mov
iret
and
ljmp
lcall
stc
adc
lea
sahf
xchg
subb
jno
loopne
jmp
jbe
mov
out
lret
push
stos
movsl
and
daa
dec
scas
fidivrl
bound
push
stc
test
es
add
out
mov
aad
cmpsl
or
inc
dec
dec
stc
jl
jno
sub
loopne
cld
jg
fnstsw
xor
xorb
push
jo
shlb
loope
es
test
push
jns
lret
stos
gs
cmp
aam
jmp
ret
pushf
pop
and
or
jl
out
js
pop
sti
loopne
jg
inc
mov
test
add
jmp
sti
mov
or
mov
push
mov
xchg
add
daa
shlb
cmpsl
mov
add
enter
jns
lcall
xchg
adc
pop
cli
mulb
lods
xchg
adc
xchg
leave
pop
lahf
cmpsb
xlat
lods
out
stos
cmp
mov
out
int3
cli
pop
dec
popa
dec
cmp
xchg
ror
jg
xchg
sbb
clc
test
std
mov
mov
movsl
xlat
iret
jno
or
dec
inc
lret
mov
sub
idiv
loope
out
out
cmp
int
fndisi(8087
push
stos
push
sbb
divl
jmp
scas
pop
aaa
scas
sbb
inc
cmp
sub
fildl
jo
dec
cwtl
push
jp
aas
lods
cli
and
mov
faddl
sub
test
imul
mov
jle
out
jae
jge
xor
inc
punpckldq
sbb
movsb
dec
jns
adc
sbb
rcr
jne
int
fld
mov
inc
add
push
pop
arpl
mov
mov
jle
inc
pushf
cs
xor
pop
popf
into
orl
xor
add
mov
out
cmp
or
push
std
push
aad
ds
fnstsw
out
push
sbb
dec
dec
inc
dec
push
push
fwait
xchg
mov
fdivl
or
fsubl
imul
sub
push
mov
sbb
jge
das
mov
pop
fimuls
sub
jle
stos
inc
hlt
mov
int
rcrb
jecxz
les
xlat
mov
cmp
cmp
ljmp
push
add
sub
push
rcll
adc
jbe
cmp
mov
xchg
pop
push
or
sub
mov
daa
pop
xchg
popf
iret
repz
fs
ds
mov
push
cmpsb
xor
xchg
mov
loopne
test
dec
adc
jmp
pop
gs
mov
mov
push
icebp
push
aad
add
adc
sbb
insb
pushf
sahf
pop
push
pop
mov
fs
imulb
das
push
into
test
movsb
aas
sbb
fiaddl
sub
mov
insl
add
aaa
std
daa
cmp
sub
and
push
ds
test
jne
aad
mov
int3
rcl
stos
js
sub
xchg
or
jns
icebp
sub
mov
out
mov
sbb
jns
or
popa
jl
inc
hlt
imul
sbb
sub
xchg
icebp
dec
jp
jo
and
ja
add
push
ret
pusha
push
mov
ja
out
sub
mov
pop
in
or
push
xchg
popa
div
dec
in
daa
and
xor
in
or
stos
dec
or
adc
aam
or
jnp
testb
push
sbb
mov
ret
xchg
leave
adc
mov
sub
mov
in
lock
or
jb
push
test
in
inc
aad
les
and
jb
inc
adc
xor
nop
std
jb
fistpll
inc
adc
mov
ret
test
pop
xchg
xchg
pop
fimull
jbe
push
sbb
in
mov
ljmp
sub
mov
and
push
add
shrl
int3
inc
and
ret
lods
inc
push
icebp
mov
iret
call
and
sbb
jg
mov
xchg
add
rclb
scas
inc
pop
loop
mov
test
xchg
lds
sbb
test
push
jle
loope
clc
out
jl
add
mov
xchg
sbb
push
incb
xchg
push
scas
xchg
icebp
dec
cmp
ss
arpl
pop
dec
mov
jnp
dec
leave
dec
insb
or
lods
jp
shl
dec
lcall
mov
fists
aas
pop
loop
nop
fnstcw
sub
scas
jl
adc
sbb
xchg
mov
out
push
int3
add
or
mov
mov
nop
dec
mov
clc
insb
cmp
test
fcoml
popa
sub
gs
rorb
sbb
in
and
stos
push
mov
bound
std
xchg
xchg
push
in
mov
pop
xor
fxch
mov
push
jns
mov
mov
pop
mov
loop
adc
imul
add
lret
adc
ds
cwtl
or
pop
test
mov
gs
rcr
es
inc
jo
std
jne
inc
jne
test
push
mull
add
movsl
scas
pop
inc
es
pop
int3
push
xchg
fisubs
jmpw
inc
dec
mov
push
pop
push
fcomi
xchg
and
push
aas
sub
jl
mov
xchg
js
mov
mov
xchg
or
xchg
imul
xlat
fisttpl
idivl
push
inc
pop
imul
cmpl
in
push
mov
pusha
mov
jo
aad
adcl
out
cmp
insb
jne
or
sub
jp
cmp
decl
into
pop
mov
push
test
icebp
rcrl
cs
cli
lods
adc
imul
lds
xchg
in
jg
adc
cmc
sbb
mov
dec
repnz
adc
outsl
sub
cmp
or
orb
mov
mov
dec
adc
jbe
sub
das
sbb
je
and
daa
cli
mov
mov
sti
je
lock
popf
mov
ljmp
test
inc
lret
ds
lret
xorb
outsl
mov
movl
push
jae
and
mov
dec
neg
cwtl
into
or
mov
or
cmc
scas
cmc
rcrl
cltd
cli
lods
mov
mov
jge
dec
push
pusha
mov
adc
outsl
loope
mov
hlt
push
add
inc
pop
mov
dec
pop
or
sbb
lcall
jmp
or
cmp
mov
lea
mov
push
sub
je
pop
mov
inc
in
int3
mov
mov
xchg
xor
movsb
test
pop
pop
out
jl
pop
mov
jmp
dec
test
in
mov
pop
mov
push
call
cmp
jecxz
mov
add
mov
mov
xchg
xchg
stos
pusha
dec
and
gs
push
inc
daa
adc
adc
js
dec
in
mov
sarl
or
dec
xchg
sti
dec
adcl
xor
pop
xchg
gs
add
cmp
xchg
mov
xlat
testb
mov
xor
repnz
pusha
push
mov
xor
fstps
sbb
adc
push
insl
jmp
ds
imulb
cld
jns
les
test
pushf
shr
cs
cmpsb
lahf
testl
sbb
lret
jmp
daa
mov
add
cli
data16
or
dec
stc
mov
out
xchg
pop
test
jb
cmp
push
cs
push
dec
test
jns
jg
scas
fs
and
mov
mov
cmp
sbb
xor
cmp
enter
adc
dec
sbb
pop
dec
imul
cltd
mov
arpl
mov
aad
cld
je
and
sub
je
idiv
adc
push
movl
hlt
ja
fisubrs
jmp
add
pop
bound
pop
lret
divps
mov
pop
adc
out
insb
sti
xor
sbb
aad
fisttps
sub
dec
outsl
push
xchg
xchg
mov
jb
rsm
aas
mov
scas
mov
push
into
adc
pop
push
xor
nop
les
ljmp
sbb
stc
dec
out
bnd
repz
sub
xchg
xchg
in
sub
push
fistpll
inc
or
pop
aaa
aam
adc
mov
mov
lods
pop
cmpsl
add
sub
xor
movb
inc
inc
dec
test
pop
push
andb
insl
mov
or
cmp
xchg
mov
mov
mov
ret
dec
stos
xchg
mov
cmc
das
push
pop
popf
add
sbbb
mov
sub
mov
cmp
xchg
mulb
jns
call
shrb
cmpsb
mov
or
jmp
jno
sbb
mov
loope
mov
xchg
loopne
loopne
dec
xor
shl
das
push
xor
jmp
stc
hlt
stos
call
mov
jge
stos
outsl
xchg
sub
or
inc
inc
sub
dec
dec
push
ds
cli
and
jae
cmp
pop
hlt
out
cwtl
xor
sti
out
xchg
aas
jo
jno
push
push
mov
xor
cltd
push
jno
je
pushf
bound
in
jne
gs
adc
sbb
mov
fbstp
cmp
cmc
clc
or
sub
imul
xchg
adc
adc
ljmp
sbb
es
jne
subl
inc
in
lock
adc
xor
stos
cmc
rcrb
push
or
sub
cmp
adc
popf
es
pushf
mov
fldl
and
bound
inc
pop
fidivrl
jne
ds
dec
mov
imul
pop
icebp
jb
nop
sbb
clc
fnsave
js
cmp
lock
xchg
les
insl
xor
jle
xor
fnstsw
idivl
push
add
cmp
pop
mov
pop
adc
js
lcall
loop
inc
lahf
xrelease
mov
mov
inc
xchg
out
jmp
jnp
cmp
bound
jle
pop
ss
pop
lahf
inc
push
jne
mov
and
mov
sbb
stos
jo
push
pushf
cld
or
nop
inc
movsb
outsb
push
sub
js
xor
and
leave
out
addr16
add
les
pop
mov
or
sti
in
xor
in
call
lods
es
cltd
push
pop
dec
cltd
mov
push
sbb
es
clc
test
cmp
je
loop
mov
sbb
mov
mov
adc
cld
in
dec
inc
enter
sub
push
andl
fidivrs
lock
lret
insb
cli
lock
cmp
js
mov
mov
jg
movsb
in
hlt
lea
and
dec
aam
in
lahf
mov
imul
and
incb
lods
fiaddl
push
lods
inc
lret
dec
dec
pushf
mov
xchg
test
push
and
decl
js
push
pusha
dec
jecxz
js
push
push
push
cmp
lds
loop
dec
ja
push
pop
scas
adcb
sub
aad
mov
frstor
sub
cld
xor
fnstcw
pop
cltd
repz
lock
pop
scas
xchg
push
adc
int
jle
pushf
stos
inc
test
xor
push
lods
mov
jg
mov
int3
xor
roll
push
push
lcall
fs
or
mov
out
mov
loopne
adc
mov
cltd
cmp
cwtl
fcmovu
sahf
mov
das
leave
lahf
shlb
clc
add
cld
pusha
int3
mov
loope
aaa
dec
repz
mull
cmp
xchg
jae
popl
cli
loopne
xchg
arpl
scas
sti
insl
or
insl
repnz
mov
out
stos
ja
vsubpd
dec
add
push
lods
leave
cwtl
inc
mov
bound
repz
sbb
testl
pop
mov
inc
adc
cltd
inc
jl
inc
mov
mov
or
cmp
pop
pushf
cwtl
lcall
stos
fwait
jmp
sbb
jp
rclb
pop
pusha
out
inc
insb
rcrb
jb
xchg
pop
xchg
sar
dec
in
mov
jg
or
data16
lret
lahf
sbb
movsl
jne
dec
icebp
shlb
push
push
fisubrs
rolb
mov
sub
lcall
and
and
jecxz
std
fidivl
cmp
pop
sbb
loop
leave
inc
shr
stos
mov
adcl
movsl
es
lcall
fsubrp
into
decl
int3
xchg
xchg
mov
mov
and
or
jmp
add
sahf
shlb
aam
mov
xorb
sub
mov
adc
xor
daa
jae
add
mov
lcall
or
sub
push
sahf
jnp
fmull
icebp
xor
sub
dec
sbb
adc
scas
jo
data16
clc
xor
pop
lea
and
and
lcall
dec
jne
sarb
test
sbb
lea
test
or
adcb
cmp
shr
jbe
mov
inc
test
repz
mov
movsl
mov
jne
mov
push
xchg
jg
cli
inc
cs
xchg
mov
aas
mov
daa
or
sbb
ficomps
insb
jbe
jg
fistl
add
xor
bswap
add
cltd
mov
sbb
mov
jg
shlb
ljmp
pop
int
or
pop
idivb
loopne
push
or
inc
xlat
inc
stos
xor
std
push
test
fs
and
push
cmp
jno
jae
mov
push
push
push
testl
inc
or
push
mov
xor
push
push
cwtl
push
push
cltd
xor
test
notb
lds
popa
dec
inc
xchg
mov
or
lahf
cmp
xchg
or
inc
test
sub
dec
xor
mov
leave
fwait
rcrb
sti
cwtl
or
jmp
popf
push
cltd
add
fnsave
rolb
jno
dec
mov
push
mov
xchg
cwtl
mov
mov
mov
scas
jno
cld
stos
add
lea
loop
out
dec
mov
dec
loope
cmp
add
or
mov
inc
pop
ss
out
pushf
or
and
and
jnp
jecxz
ret
sbb
cltd
cwtl
in
push
and
push
or
fcompl
cld
dec
sub
jae
or
mov
lcall
push
aad
pop
jmp
adc
jns
or
mov
fsin
jo
les
mov
push
mov
pop
hlt
lahf
jge
xor
negl
jp
fistpl
mov
scas
imul
or
dec
xchg
subb
into
push
lea
push
push
or
add
push
xchg
lods
jge
mov
je
out
aam
cmp
push
inc
jno
mov
mov
pop
es
push
lret
lcall
daa
xchg
gs
lret
dec
mov
orl
pop
scas
sbb
sti
sbb
xlat
in
pop
popa
ja
inc
and
shrb
out
xlat
into
mov
repz
repnz
int
sub
cmc
pusha
mov
les
decl
ljmp
push
push
xchg
push
jle
jno
pop
add
mov
inc
push
push
pop
ljmp
out
lcall
in
jle
imul
sbb
inc
test
xor
iret
idivl
mov
pop
mov
rolb
xor
adc
sbbb
and
scas
push
adc
jne
lock
leave
adc
les
loopne
jns
mov
add
fdivp
out
pop
pop
adc
movsl
jns,pt
dec
mov
popa
sar
xchg
loopne
repnz
inc
cmp
lcall
lahf
addl
daa
sti
push
and
mov
clc
cmpsl
push
cmp
mov
lret
ljmp
clc
or
xchg
xor
sbb
dec
push
mov
fbld
ret
in
loopne
inc
xor
js
xchg
movsl
mov
push
aad
leave
dec
adc
stos
in
push
mov
shlb
mov
dec
fisubrs
or
cld
aaa
adc
xchg
mov
xchg
inc
gs
pop
pop
mov
mov
sbb
pop
fwait
xor
or
movsl
insl
out
mov
bound
inc
mov
push
sbb
ret
pop
sbb
aaa
push
sub
rclb
out
xchg
aam
pop
pop
and
jae
fcmove
xor
sahf
std
cmp
inc
lds
adc
data16
cwtl
test
or
insl
loop
insb
lods
daa
outsl
scas
daa
sbbl
pushf
or
insl
mov
sti
das
mov
int
xchg
lock
jnp
xor
push
sahf
sbb
movsb
dec
or
fiadds
jmp
jnp
cmpsb
movsl
lea
xor
scas
sbbb
xchg
mov
push
es
stos
jno
into
ds
inc
mov
test
in
cmpsl
xchg
adc
xchg
cmp
add
jecxz
pop
in
cli
ret
aas
pop
cmp
faddl
cmp
adc
daa
js
or
test
test
cmc
enter
ss
mov
movsl
cmp
inc
jge
outsb
pop
push
push
pushf
dec
and
rcrb
xor
inc
mov
xchg
cmp
stos
sub
sbb
inc
mov
cmp
pop
jp
clc
sub
sar
js
push
arpl
mov
lret
xor
xor
inc
fstps
xor
fwait
and
pop
loop
jmp
add
fcomps
and
inc
push
mov
fs
aas
lret
sub
inc
das
into
add
aas
fidivl
add
inc
adc
mov
dec
xor
or
jb
xchg
dec
pop
jl
ja
ds
gs
mov
xchg
dec
ss
pop
xchg
das
inc
in
pop
push
mov
clc
sbb
cli
shll
jecxz
es
jecxz
dec
fidivs
in
mov
cmp
push
inc
jge
xchg
push
xchg
cmp
push
add
in
add
rcll
push
pop
adc
and
dec
hlt
not
test
jecxz
fwait
mov
aam
outsb
mov
mov
aas
cmpsb
xchg
fucom
pop
mov
les
mov
cmp
jl
mov
dec
sbb
adc
inc
mov
mov
inc
sahf
cs
cmp
adc
cmp
jno
mov
adc
xor
xchg
jno,pt
sub
std
xor
repz
mov
push
and
movsb
cmp
std
imul
xor
sub
mov
cmc
loopne
mov
xor
out
xchg
mov
cli
sub
jg
scas
mov
or
mov
and
stos
arpl
adc
fcoms
lods
jle
call
xchg
sub
jmp
inc
mov
adc
xchg
push
mov
ret
jecxz
loopne
sbb
stos
xchg
hlt
test
push
and
jbe
imul
fisttpl
pop
pop
xchg
xor
pop
maxps
inc
push
sub
push
aaa
mov
mov
inc
stc
icebp
ljmp
aaa
test
test
push
xchg
fwait
sbb
mov
jecxz
sub
push
popa
dec
dec
mov
subl
daa
out
inc
xchg
and
lea
mov
fstps
lds
mov
stc
push
inc
pop
pop
xchg
aas
or
add
pushf
rclb
mov
cmp
sbb
jno
sbb
inc
mov
iret
pop
xchg
dec
xor
push
jmp
push
adc
add
incl
or
push
sbb
inc
add
stc
or
rcl
sbb
cmpsl
lock
repz
mov
daa
inc
ret
popa
sub
imul
inc
shll
jno
push
shll
lret
adc
or
int
fptan
aaa
jle
jnp
adc
adc
lods
je
xor
jb
test
cmp
mov
std
sub
sbb
push
and
push
test
addr16
adc
enter
push
fildll
mov
jp
xchg
lret
xlat
imul
xor
inc
dec
pop
cli
hlt
clc
int
push
aas
add
push
dec
daa
leave
jge
and
push
leave
nop
in
cmpsl
ret
push
fcmove
and
or
adc
cmpsl
and
sub
mov
cmc
xchg
jge
adc
pavgw
sbb
xor
ds
xchg
dec
sbb
mov
and
aaa
cmp
lahf
sahf
cs
cmp
push
jnp
push
rorl
sbb
sub
pusha
adc
sti
cld
mov
add
shrl
sbb
xchg
cmp
sub
push
mov
pop
nop
xchg
mov
jns
inc
mov
dec
out
insb
imul
mov
mov
aad
sub
mov
xor
mov
dec
xchg
xor
popa
xchg
in
std
xlat
cmp
into
inc
mov
loopne
push
push
mov
inc
or
inc
pop
mov
pop
in
cmp
stc
out
ja
cmp
push
add
add
nop
stos
int3
test
sub
push
xchg
es
add
xchg
test
push
add
jae
push
dec
jb
fdivrl
loope
xchg
popf
cmp
test
rorb
or
mov
xor
or
push
outsl
push
cmpsb
jb
cltd
popa
shl
pop
ljmp
or
inc
ret
int
dec
mov
aas
or
and
xadd
push
inc
jg
push
rcrl
gs
aaa
dec
sbb
pop
pcmpeqw
lods
mov
repz
addr16
push
jp
adc
dec
aad
jae
mov
mov
test
subb
pop
add
in
pop
jp
or
fstpt
mov
xlat
adc
jp
in
je
xchg
push
mov
jl
loop
pop
and
div
outsl
daa
testb
mov
push
adc
jmp
repnz
shll
mov
aam
pop
adc
testl
fcomp
cmp
adc
mov
mov
jp
push
loop
mov
in
sub
outsl
out
mov
rcrl
fiadds
fnstcw
sbb
mov
mov
sbbl
xchg
popf
ffree
outsb
and
dec
aaa
push
dec
dec
lds
push
ret
daa
push
and
int
sub
ss
dec
int
and
push
test
mov
push
into
dec
aad
arpl
lret
push
adc
rorb
cli
add
jmp
rolb
addr16
loope
rol
pop
pop
fdivp
aam
dec
lock
sub
dec
push
mov
outsl
cmp
out
mov
mov
int
lods
clc
add
jae
xlat
push
mov
addl
in
iret
pop
outsb
mov
xchg
push
jl
mov
pop
fmulp
js
cli
adc
fldcw
pushf
adc
les
js
lods
ss
pushf
sbb
mov
lods
push
sub
or
pusha
add
sub
out
adc
fld
in
sbb
mov
inc
stos
mov
mov
mov
jbe
mov
in
and
imull
push
sbb
push
leave
fcomi
xor
je
insb
out
dec
jns
push
xchg
mov
mov
push
mov
push
out
sub
push
leave
pop
jmp
and
mov
sub
xor
cld
pop
or
fwait
int
xchg
push
fsubrs
and
add
sub
or
pusha
and
adc
and
outsb
jae
mov
scas
jo
or
xor
inc
icebp
jmp
cmp
pusha
fwait
mov
push
push
repz
imul
jae
jbe
cmp
rclb
movsb
jo
dec
cmp
shrl
adc
cli
and
push
dec
rolb
push
xchg
mov
and
cltd
stc
mov
dec
addl
add
add
ds
cmp
scas
ficomps
jg
mov
and
xor
pusha
xchg
jb
mov
add
dec
bound
hlt
es
mov
or
repz
popa
mov
subl
sub
push
stc
cmp
lods
jo
fwait
jns
cmp
into
in
test
sub
outsl
dec
out
mov
mov
dec
mov
xlat
aaa
jns
jecxz
adc
clc
inc
mov
push
lcall
mov
out
add
pop
mov
je
fdivrs
lods
fs
sub
cmp
xor
xchg
xor
and
pop
das
out
lcall
push
loope
or
adc
jne
xor
mov
test
rcrb
cwtl
je
and
push
xchg
movsb
test
add
in
push
jb
push
pop
push
or
push
or
hlt
xchg
mov
mov
or
lcall
adc
xchg
shl
sub
pop
push
pop
pop
add
cmp
sub
jmp
jae
lcall
hlt
in
mov
sti
xor
into
movb
ja
lret
xchg
xchg
xor
xor
rorl
iret
mov
enter
lock
out
dec
mov
mov
arpl
scas
jo
or
add
dec
xor
jae
outsl
roll
cmp
sub
cmpsl
inc
mov
imul
leave
subl
inc
mov
mov
pop
dec
and
sti
jg
cmp
loopne
lds
test
loopne
scas
lea
xchg
mov
flds
push
into
mov
and
or
fsubs
insl
popf
sub
push
loopne
call
fimull
int3
or
push
shrb
cwtl
in
jecxz
dec
jg
mov
fnstcw
bound
push
or
lods
loop
imul
xor
lock
pop
addb
std
mulb
scas
pop
xor
jnp
xorl
incb
aam
orl
jae
xlat
cltd
pop
rcrb
push
cmp
mov
jle
jmp
dec
adc
xchg
int3
mov
and
or
push
jnp
outsb
mov
lds
and
mov
add
adc
and
cmp
mov
adc
cmp
popa
fimull
fnstcw
lcall
mov
mov
mov
dec
in
sahf
jns
int3
or
xchg
xlat
lret
sbb
sub
movsb
xchg
inc
xchg
ds
shrl
sub
mov
mov
pushf
jle
or
outsl
sbb
dec
inc
mov
xor
mov
into
inc
leave
pop
and
cltd
lods
mov
dec
mov
sub
js
aaa
shr
pop
adc
pop
lea
pop
sub
pusha
rcrb
or
outsb
mov
int
mov
push
test
in
aad
sahf
lcall
decb
test
sbb
xlat
popf
test
add
sbb
pop
loop
mov
leave
shl
sti
addr16
mov
loopne
jae
adcl
jae
pop
add
pusha
das
iret
imul
scas
aas
jns
cwtl
mov
in
jg
inc
test
cmpsb
jnp
push
cmp
cwtl
dec
jb
push
arpl
mov
sub
xchg
push
rcr
cmp
std
push
and
cltd
xor
popa
xchg
insb
adc
shrl
jns
popf
lods
mov
out
jb
xchg
push
mov
cld
test
cmp
jl
aam
cmp
scas
mov
inc
fcmovnbe
jbe
aad
cmp
mov
mov
pushf
dec
sub
fmul
imul
adc
lods
clc
xor
and
xchg
jne
in
cmp
negl
cmpsl
js
mov
in
push
test
jns
in
mov
push
xchg
cmpl
xlat
dec
adc
repz
out
lds
mov
add
scas
mov
mov
jae
dec
ss
into
add
dec
jge
pop
or
jae
add
or
mov
inc
sbb
xor
out
xchg
and
pop
pop
push
aad
jp
xor
push
and
xlat
adc
push
ds
push
mov
push
lds
jge
ja
fstl
imul
xchg
cltd
addr16
loop
subb
sbb
jb
xchg
repnz
dec
imul
xor
mov
push
into
mov
jae
loop
ss
cmc
sbb
mov
cmp
xchg
cld
push
and
xchg
mov
por
insl
push
int3
push
cmpsb
xor
lods
sbb
jbe
shll
mov
mov
addr16
sub
dec
testb
sbb
xchg
rcrl
shll
mov
inc
add
popf
xor
lods
or
and
nop
outsl
es
enter
and
push
xor
dec
popa
lods
in
push
mov
push
adc
pop
popa
repz
pop
xchg
push
lods
lret
mov
mov
pop
inc
push
mov
daa
add
xor
adc
cmc
sarl
sub
subl
mov
add
ds
loope
in
mov
xor
pop
decb
mov
fs
sub
outsb
repz
fidivl
aas
sbb
dec
adc
inc
fsubp
or
test
lea
or
xchg
fcompl
jae
mov
xchg
fbstp
in
add
fsubl
test
ret
cltd
shl
std
jg
jecxz
pusha
clc
or
sbbb
repnz
adc
out
xchg
sbb
xor
mov
cmp
dec
add
pop
imul
jmp
cmp
imull
adc
jo
push
mov
jno
jl
xchg
push
loopne
dec
xchg
imul
sti
int3
test
aas
sahf
jp
add
mov
add
cmp
inc
iret
gs
fs
mov
lods
push
jns
mov
jmp
cmpsb
lods
mov
or
outsl
repnz
cmp
in
xorl
xor
iret
insb
push
int3
rcr
inc
jmp
dec
insb
ja
dec
dec
fisttpll
lds
inc
xor
arpl
fst
sahf
rolb
cmp
jns
dec
mov
icebp
jmp
fstpl
mov
xchg
jno
hlt
cwtl
in
xor
pop
jo
xchg
mov
dec
cmpsl
jno
shl
push
mov
sbb
loop
sti
cmp
sbb
jl
or
popa
mov
shll
xor
fisubs
daa
sahf
pop
xchg
jno
xchg
cwtl
loopne
sarl
loopne
loope
mov
push
mov
das
lds
dec
inc
mov
inc
in
inc
cmpsb
pop
inc
sub
push
popa
lret
xchg
test
jnp
fcomps
outsl
or
cmp
mov
pushf
inc
mov
jg
inc
xchg
lahf
fidivrl
xchg
pop
mov
rorb
push
movsb
cmp
aas
xchg
clc
testl
movsl
icebp
ror
mov
cmp
adc
jle
es
push
mov
mov
pop
rcrl
mov
stc
mov
jecxz
sub
hlt
or
data16
xchg
mov
cmc
std
cltd
jbe
out
setne
in
arpl
and
aad
mov
scas
xor
cmp
push
mov
mov
fnstenv
inc
es
cmp
orb
popf
pop
lcall
test
add
lret
mov
pop
adc
mov
fucom
rolb
jbe
xchg
stc
xchg
xor
cmp
jl
stos
push
subb
xor
in
cmc
inc
popf
repz
ja
or
push
mov
xchg
lods
sti
lods
out
cmp
mov
and
inc
jns
xchg
clc
insb
jmp
in
sbb
adc
sub
inc
sarb
sbb
cmp
loopne
ja
data16
faddl
push
mov
pop
sar
pop
add
or
sbb
inc
stc
cs
dec
dec
pop
leave
or
fidivs
xchg
scas
jbe
mov
movsb
out
cmp
dec
cmp
lcall
into
outsb
mov
jns
sbb
jnp
popa
cmp
xor
adc
iret
je
outsl
or
ljmp
int
outsw
lcall
inc
sbb
or
fs
inc
enter
or
push
mov
mov
mov
sbb
popf
inc
add
xor
filds
les
jmp
mov
lock
int3
lcall
aam
mov
jg
sbb
and
xlat
or
test
jbe
int
stc
add
mov
out
or
inc
dec
movsb
aas
decb
test
jae
push
xor
mov
mov
mov
test
mov
ljmp
pop
xor
scas
lret
pop
fildll
js
divl
mov
fadds
arpl
jle
pop
popf
xchg
mov
jno
jp
cli
pop
scas
xchg
push
ret
dec
aam
in
pop
sub
out
insb
mov
or
mov
mov
pop
into
test
mov
mov
in
dec
imul
ds
test
push
cli
bound
rclb
sbb
jns
shlb
mov
bound
imul
xchg
xchg
sbb
mov
lret
int3
xor
jbe
fistpll
aaa
mov
jg
ffreep
xorl
je
push
sbbl
jp
les
bnd
in
int
ljmp
imul
jns
xchg
push
popf
lea
xchg
xchg
out
pop
xor
sub
imull
es
mov
mov
dec
dec
cltd
lods
dec
xchg
in
clc
lret
xor
pop
mov
iret
hlt
cmp
xlat
adc
push
addb
jns
outsl
push
cmp
xchg
and
dec
outsl
mov
lods
sbb
dec
push
pop
adc
push
or
and
mov
outsb
xchg
or
pop
push
fs
testb
outsb
xor
add
insb
jb
faddl
mov
mov
push
call
sbb
inc
jns
sub
sbb
fnstcw
and
loopne
ljmp
lret
popf
shlb
cld
scas
movsb
ret
loop
xchg
and
mov
icebp
rcll
loope
mov
addr16
fcomps
aam
ret
and
sub
aam
fucom
ret
mov
fbld
push
xchg
enter
lods
adc
lcall
aaa
imul
insb
fld
sbb
aas
or
sbb
or
and
arpl
pop
push
int
inc
mov
sahf
lea
in
scas
sub
imul
das
fistpl
and
dec
scas
icebp
in
push
mov
mov
addr16
or
adc
je
xor
jmp
sbb
xchg
je
sub
inc
push
rclb
and
or
pop
int
repnz
dec
ret
and
scas
pop
mov
lods
and
xor
mov
pop
cmp
push
in
jp
fistpll
adc
jno
imul
inc
mov
repnz
insb
or
es
mov
das
sti
jle
leave
push
xchg
fistps
xchg
fsubrs
lret
sbb
mov
sbb
cwtl
sub
test
add
push
iret
cmp
test
insl
lods
fwait
xor
xor
push
xor
pop
jbe
movsb
test
sbb
aaa
test
xchg
roll
inc
sti
sub
imul
add
fsubl
pop
jmp
mov
xchg
clc
lods
popa
pusha
cmpsl
push
jns
inc
mov
push
aaa
or
dec
adc
cmp
movsb
push
inc
fcomps
sub
jl
bound
jns
ss
mov
mov
inc
test
les
jbe
sub
cmc
inc
ret
mov
arpl
outsb
or
add
xor
lret
adc
loopne
mov
fcmove
inc
mov
cmp
scas
inc
jl
test
mov
sbb
aas
sbb
jnp
out
clc
sbb
inc
lock
xchg
ficompl
xchg
ljmp
insl
lea
and
aam
inc
mov
ret
lcall
xlat
adc
loope
lret
or
push
aad
cmp
aad
inc
cmp
imul
aas
ja
fmul
mov
cmpsb
je
pop
in
pop
adc
ficompl
dec
adc
mov
shrb
scas
enter
pop
aad
inc
test
out
or
and
xchg
mov
dec
mov
pop
add
sbb
aad
inc
cmp
bnd
jp
nop
inc
shll
negb
xor
repnz
pop
ret
cltd
and
inc
jp
inc
out
jmp
sbb
cmp
out
rorb
push
sub
push
dec
fsubl
call
cmpsl
test
sbb
in
jne
cmp
dec
adc
xchg
aas
jl
lahf
push
inc
fisubs
out
bound
mov
test
popa
xor
inc
push
aad
push
imul
ss
sbb
stos
xor
lcall
or
mov
pop
imul
dec
dec
in
lds
jle
jmp
pop
mov
inc
out
outsl
mov
in
jne
fsts
xor
push
rorb
add
push
pushf
inc
add
inc
inc
or
ss
mov
ss
xchg
sbb
dec
inc
dec
push
cmp
sarl
jmp
in
mov
in
push
push
mov
ss
or
test
mov
dec
mov
icebp
adc
pop
std
jecxz
mov
shrb
lods
add
inc
int3
pop
pop
rcll
outsl
lods
cmp
adc
das
sub
or
outsl
into
push
pop
add
stc
add
and
jle
int
test
jae
sub
loope
cmp
push
jl
imul
xchg
jo
or
fyl2x
mov
mov
cmp
push
mov
mov
lock
mov
and
xlat
xor
cmpsb
aas
mov
mov
outsl
addr16
pop
mov
fwait
lcall
sti
pop
push
xchg
pop
aad
and
icebp
cmp
mov
pushf
push
xor
aam
mov
xor
out
jp
movsl
lock
push
and
int3
leave
rcll
or
addb
fsubrs
lods
inc
mov
and
xor
push
inc
push
inc
testl
mov
pop
xchg
fs
mov
ljmp
inc
test
cs
jl
push
pop
xchg
mov
es
jo
push
or
fisubl
aaa
pusha
pop
mov
in
je
inc
cmp
push
ja
lret
push
fsubs
mov
lods
sahf
xor
xor
std
xchg
xchg
mov
mov
rol
xor
pop
push
adc
les
subb
sahf
in
dec
jg
outsl
push
inc
enter
rolb
lods
xor
xchg
iret
iret
cmp
lahf
jnp
push
sub
imul
mov
jg
cli
pop
ds
dec
rsm
mov
sbb
push
pop
cmp
and
jecxz
mov
or
inc
ret
jl
adc
mov
sub
xor
out
jae
and
xchg
mov
jno
jl
adc
lea
clc
jnp
std
je
in
and
loop
repnz
lcall
nop
mov
pop
stos
mov
out
xchg
mov
pusha
lock
add
hlt
out
ss
or
inc
jnp
and
xchg
sbb
xchg
push
cmp
add
xor
mov
dec
sbb
mov
mov
loope
xchg
mov
out
ja
lea
cmp
mov
or
push
push
lods
xchg
mov
mov
dec
rolb
dec
call
sub
inc
cmp
dec
push
cmp
lods
jmp
xchg
decb
xchg
scas
adcb
mov
mov
adc
mov
mov
push
dec
mov
xor
xchg
mov
bound
fmull
adc
xor
xchg
lock
or
ret
scas
mov
movl
and
cwtl
xorl
addr16
fxch
fists
push
cmp
les
repnz
imul
jl
or
sub
dec
nopl
aas
fs
pushf
cmpsb
mov
mov
push
aad
int3
mov
dec
sbb
and
loope
daa
adc
faddl
push
inc
mov
pop
and
mov
sub
icebp
mov
cmp
in
loopne
xchg
xchg
test
ss
fimuls
inc
out
movsb
nop
fstpl
popf
dec
mov
jg
dec
repz
test
push
mov
sub
inc
push
mov
add
nop
mov
add
cwtl
xchg
es
imulb
leave
loop
loope
ret
mov
lret
lods
xchg
sub
mov
ret
nop
shrb
push
sbb
int
push
adc
fldl
cltd
push
sahf
in
mov
arpl
adc
mov
popf
pop
in
sti
mov
push
and
xchg
dec
imul
movsb
lock
sub
popa
and
mov
data16
pop
lret
jp
sub
xchg
or
add
out
ljmp
lea
fcmovne
insb
xchg
fwait
sub
nop
je
aaa
in
dec
and
aad
xchg
dec
lcall
hlt
in
xchg
jns
and
rcrl
test
push
xor
loop
test
sub
stc
inc
js
aas
inc
dec
cwtl
inc
pop
lods
xor
push
rcll
add
push
dec
dec
jge
jg
dec
and
jg
sahf
clc
loop
jo
cwtl
mov
pop
aaa
cmpb
ffreep
inc
inc
jmp
xor
sub
hlt
cmp
cld
test
mov
xor
push
movsb
mov
pop
push
lret
test
fsubl
fdivs
orb
test
aas
push
mov
cmc
sti
sbb
popl
ret
mov
ret
mov
sti
jbe
dec
cmpsl
or
xor
mov
adc
int
les
jnp
pop
setae
adc
jmp
test
jns
loope
push
inc
sbb
stos
pop
fnsave
das
imul
cwtl
cwtl
out
js
fistpll
and
push
mov
or
jle
das
into
mov
jl
nop
mov
or
dec
mov
jl
das
icebp
ja
repz
push
rorb
ret
or
mov
add
sbb
shlb
cmp
mov
mov
stos
cmpsb
xor
cmp
cmp
sbb
fisubrs
in
sub
jl
cmp
add
jo
or
jb
pushl
xor
or
aas
mov
inc
sarb
sbb
xchg
pusha
mov
add
cmp
lods
adc
push
sahf
and
push
fdivrp
jo
dec
pop
repnz
in
insb
mov
mov
and
pop
mov
jae
xchg
nop
jo
jecxz
mov
pop
sub
xor
push
and
jp
xor
mov
cmpsl
insb
adc
or
mov
ljmp
daa
adc
stos
outsb
cld
shlb
push
cmpb
xor
xor
addb
nop
ja
or
movsl
xlat
sbb
sub
jmp
ror
aaa
inc
mov
lods
insl
sbb
mov
jmp
pop
mov
push
aad
insl
jmp
xchg
loopne
xchg
fs
inc
bound
shrb
or
inc
sbb
js
lcall
int
xor
lret
aaa
cltd
cmp
fstl
push
popa
jae
ja
scas
stos
in
lret
sbb
cmpl
repz
repnz
push
ds
outsb
cld
hlt
pop
cmp
pusha
jne
daa
inc
in
push
jo
dec
bound
outsb
inc
out
xchg
int
xor
jnp
or
out
sub
push
push
fcmovnu
inc
into
jno
and
fimuls
xor
lret
mov
dec
mov
cmp
stc
into
mov
mov
cltd
lock
int3
adc
xor
pop
cld
adc
loope
cmp
sub
xchg
testb
in
ret
lret
test
in
out
add
arpl
cli
pop
push
orb
mov
out
xchg
imul
popf
mov
jecxz
mov
imul
repnz
popf
lods
into
sub
add
nop
popf
adc
std
sub
lret
cmp
insl
cs
sbb
dec
dec
mov
fidivrl
cmp
inc
out
add
dec
fcoml
mov
fs
dec
jle
mov
imul
jb
mov
sbb
jno
push
mov
outsb
enter
xor
nop
or
inc
ret
enter
sahf
fdivrs
sub
fdivs
repnz
fcomip
xchg
fstpt
iret
stc
mov
ret
pop
mov
imul
roll
adc
xchg
inc
in
xor
mov
into
jle
fwait
and
in
xor
xchg
and
xchg
jle
outsb
stc
or
divb
out
xor
shll
adc
and
add
shlb
test
add
push
dec
mov
sub
or
inc
mov
cmp
push
popf
into
pop
scas
aam
test
sbb
push
and
xor
dec
hlt
jnp
dec
lret
push
mov
mov
cmp
sbb
fcomps
iret
aas
and
mov
movsl
sub
cmp
sarl
stos
and
bound
incb
icebp
int3
add
jbe
mov
jmp
mov
test
sahf
xor
mov
sbb
fnstcw
and
loope
std
cmc
push
movsl
in
popa
xchg
xor
jmp
inc
sub
inc
scas
fstl
pop
push
jno
stc
leave
sub
push
stc
cs
cli
mov
push
dec
pop
fcoms
and
repz
dec
movsb
fdivs
and
mov
pop
enter
lods
xor
js
push
mov
lret
clc
and
xchg
xchg
cwtl
and
sahf
dec
nop
out
enter
dec
popa
int
lcall
mov
cli
and
in
or
in
jg
mov
mov
testl
or
iret
jno
scas
scas
scas
ljmp
mov
pop
cmp
shrb
jmp
pop
cwtl
add
sbb
ret
dec
pop
cmpsb
pushf
push
cmp
mov
or
mov
xor
mov
sar
and
into
enter
sbb
pop
mov
cltd
ja
out
jb
ds
sub
aas
sbb
imul
stos
jecxz
cmpl
jnp
mov
inc
sahf
outsl
mov
in
jb
push
mov
and
mov
flds
pusha
popf
in
stos
mov
mov
rcrl
test
push
imull
sbb
sub
aam
pop
daa
xchg
fisttpl
outsb
and
mov
aam
fnsave
bound
and
pop
mov
xlat
mov
aad
pop
add
repnz
leave
mov
ljmp
out
pop
inc
stc
sub
xor
dec
or
int
jbe
stc
addr16
insb
fcmovnb
xchg
fistl
hlt
stos
push
sbb
mov
pop
mov
aad
cmc
xor
insb
lds
adc
push
or
add
cltd
push
or
mov
jl
jmpw
jmp
sub
mov
jl
out
out
cmpsl
add
shlb
add
mov
hlt
mov
xor
push
and
cltd
mov
sti
pop
out
les
rorl
mov
mov
rcr
mov
cs
cmp
jge
pop
xor
cmp
popf
push
scas
adc
cltd
mov
adc
call
fdivl
sbb
pop
ret
add
jbe
orb
loope
add
and
mov
and
mov
cmp
insl
ljmp
jmp
mov
lods
add
cmpsb
and
arpl
adc
sahf
cmpsb
adc
cwtl
mov
or
fsubrs
jae
sbb
xorb
mov
sub
mov
clc
loope
mov
mov
pusha
lock
sub
cmpb
fs
aas
rcl
lahf
adc
scas
xor
test
addr16
aad
test
fisttpl
int
xchg
das
stc
dec
ja
inc
cmp
xchg
jnp
jno
popf
andl
insl
mov
js
cmp
jp
idivl
or
iret
jne
lahf
jmp
icebp
push
mov
int
rorb
test
jno
push
in
sub
cwtl
jae
pop
ret
xchg
xchg
fs
or
in
xchg
xchg
mov
roll
cmp
mov
and
jmp
push
jb
out
and
enter
test
mov
pop
dec
sbb
xor
and
push
int3
jbe
mov
out
mov
lds
mov
stos
out
or
cmpsl
xchg
in
into
push
subb
pusha
xor
negl
jb
push
add
or
lea
pop
add
jge
outsl
push
push
cmpsb
jns
lock
sarb
into
iret
frstor
mov
mov
jns
rcl
cmp
push
aaa
adc
mov
jae
outsl
ret
push
push
gs
or
out
push
cmp
mov
sub
sbb
bnd
push
sub
xor
test
test
add
jo
sbb
xchg
cmp
out
mov
pop
fistpll
lret
mov
xchg
mov
jge
cmp
fcom
xchg
divl
pop
jge
mov
lods
mov
out
jmp
in
inc
idivb
movsb
add
ljmp
cltd
sbb
loopne
push
xor
test
push
mov
sbb
fwait
mov
sbb
adc
jecxz
xor
sbb
pop
add
stos
cmp
inc
mov
sub
xor
xchg
and
mov
lods
or
dec
push
int
dec
mov
daa
enter
cmp
pushf
cmp
mov
gs
dec
add
dec
inc
shlb
mov
test
fldl
bsr
test
add
fsubl
or
aad
fimuls
cmpsb
lcall
mov
mov
out
mov
push
xor
divb
test
stos
jbe
pushf
cmovs
lods
or
and
push
and
outsl
and
movsb
fistl
mov
iret
dec
fs
sub
xchg
cmp
repz
aaa
aam
aaa
push
insb
scas
jmp
pop
xor
mov
int3
mov
xor
aas
jno
and
mov
pop
out
movsb
int
adc
pop
and
cs
add
xor
addr16
insb
or
cmp
xchg
mov
jae
fstpt
mov
stc
inc
or
out
xchg
pop
xchg
rorb
fwait
cs
nop
xchg
mov
fwait
das
xchg
xor
sub
xchg
loop
xchg
std
fcoms
xchg
lods
xchg
pop
mov
push
test
adc
jge
dec
bound
push
test
mov
xchg
test
mov
stos
aam
std
inc
pop
adc
cli
push
jae
icebp
push
jl
out
cmp
jns
fwait
loopne
mov
fld
sbb
jne
cmpsb
iret
test
shl
pop
mov
mov
fwait
call
inc
jle
lret
xor
dec
les
push
rolb
pop
std
add
mov
xor
or
ja
pusha
cmp
dec
daa
dec
sub
mov
xlat
sbb
sbb
and
sbb
adc
mov
in
or
push
mov
out
outsb
fistl
jne
dec
cmp
pop
cmpsb
add
and
loop
lods
test
and
movsl
mov
or
mov
pop
shr
or
adc
cmp
mov
xchg
shrl
repnz
xchg
ficomps
and
mov
sbb
mov
push
test
add
xchg
dec
cmp
test
ljmp
mov
cmpsb
mov
jl
pop
jbe
fnstsw
inc
add
and
js
adc
push
hlt
ret
sahf
dec
leave
jmp
mov
jno
jecxz
xchg
adc
sbb
jno
jns
lahf
dec
jns
addr16
pop
jge
sarb
in
insb
scas
int3
inc
jmp
decb
rorl
les
out
testl
cmpsl
jge
mov
scas
int3
inc
out
push
loopne
cltd
nop
testl
xchg
rdmsr
sbb
je
lret
pop
sar
mov
fdivrs
or
cmp
adc
nop
mov
add
icebp
std
sbb
popa
sub
stos
or
int3
addr16
cmpsl
dec
cmp
je
cmovp
and
insb
das
mov
pop
xchg
jecxz
jbe
out
sti
cli
push
out
loope
push
ret
rclb
adc
mov
and
cmp
cmpsb
js
popf
or
jnp
test
enter
ret
fsubp
xor
inc
lret
add
fs
rcll
mov
mov
and
mov
fs
mov
call
mov
push
inc
lahf
lret
jns
cmp
mov
cltd
rcrb
lea
rcrb
jb
shll
inc
and
popa
dec
adc
lock
mov
dec
cmpsl
xor
push
fcoml
into
test
lods
pop
mov
pop
stc
push
sub
call
dec
sarl
fiaddl
bound
jecxz
lods
dec
dec
or
jbe
mov
imul
shll
xchg
into
add
stos
fcomip
inc
stc
xor
mov
jmp
lahf
mov
dec
sbb
mov
cmc
push
mov
mov
mov
into
out
daa
lret
xchg
mov
cmp
jl
jp
ret
in
jns
cmp
mov
sub
pop
sbb
lock
xchg
mov
or
sub
adc
iret
pop
ljmp
out
js
test
add
clc
subb
imul
rcrb
imull
adc
lcall
xor
mov
mov
xchg
rcll
dec
repz
xor
iret
and
int3
call
add
out
imul
dec
jle
mov
or
add
mov
aas
and
jae
xchg
push
mov
fadds
mov
jmp
fmuls
and
push
push
enter
insl
insb
or
mov
sub
in
outsl
decl
mov
inc
or
sbb
or
nop
xchg
inc
xchg
inc
pop
xlat
dec
jno
in
push
jo
xchg
adc
and
jno
mov
add
cmpsb
xchg
in
dec
mov
xchg
scas
dec
add
lea
call
shlb
jp
subl
mov
repnz
adc
add
inc
and
loopne
xor
pop
adc
int3
pause
or
mov
inc
fiadds
push
test
mov
pop
push
xchg
mov
outsb
adc
adc
xchg
loope
lahf
mov
test
hlt
pop
jl
popl
sub
push
sarl
inc
sbb
jns
repnz
xchg
jne
mov
js
mov
or
adc
js
ja
gs
inc
or
jae
idivl
stos
lcall
inc
scas
in
pop
push
mov
jne
outsl
icebp
out
dec
fdivl
aad
pop
mov
xchg
cltd
ljmp
cwtl
dec
cmp
dec
icebp
testb
faddl
push
iret
xchg
push
ret
inc
popl
push
jl
add
mov
adc
repz
pop
and
add
call
lahf
ss
mov
jae
ljmp
rcll
sbb
cmp
ret
jmp
and
lea
rcrb
lds
push
xor
sbb
stos
lcall
lds
mov
das
mov
imul
sti
xor
pop
fsubs
mov
jmp
aad
lea
pop
sub
cld
shrb
test
insb
aaa
xchg
inc
outsl
mov
and
dec
aad
pushf
popf
dec
jo
xor
pop
mov
pop
dec
xor
cld
mov
inc
push
or
sbb
fs
adc
sti
lcall
mov
xorl
movsb
mov
filds
pushf
jle
ror
xor
dec
in
test
xchg
stos
outsl
nop
dec
cmp
loop
adc
mov
fcoms
mov
mov
or
dec
pop
pushf
pop
xchg
jns
cmp
mov
bnd
sbb
outsl
scas
int3
push
stos
rcrb
pop
or
inc
stos
aam
lds
jne
jae
push
mov
mov
sahf
push
es
xchg
xchg
lds
dec
dec
ds
push
add
out
mov
or
ret
data16
adc
loope
test
test
adc
loop
push
pop
test
mov
aad
and
imul
out
sub
lea
jg
jns
jno
loopne
insl
insb
jo
lcall
mov
scas
jp
dec
xchg
adc
add
out
js
xor
outsl
xchg
xor
fdivrs
sub
sub
mov
sub
dec
jecxz
cmp
cmpl
dec
js
rcll
ficompl
adc
pop
stos
stc
jbe
pop
js
dec
lret
test
inc
test
out
adc
push
fistps
mov
rcrl
lea
stos
adc
cmpsb
or
inc
pop
les
rol
or
addr16
fisubl
sbb
lds
pusha
xor
xchg
into
cmp
int
cltd
ret
jmp
mov
and
lock
lcall
and
cmp
pop
rcrl
scas
and
inc
adc
cli
mov
mov
lock
cmpsb
sub
testl
cmp
add
mov
pop
mov
out
dec
push
lcall
je
lret
movb
leave
jp
jb
int3
mov
rorl
cli
mov
movsl
popl
cmp
add
and
out
mov
out
daa
mov
xor
outsl
sub
cs
adc
jl
out
ret
xchg
pop
mov
push
and
or
int
mov
dec
ss
jne
xchg
sbb
cmc
stos
mov
mov
jae
test
or
jno
stos
mov
xchg
subb
pop
mov
push
imul
cwtl
dec
sahf
dec
test
into
in
enter
popf
iret
rsm
pop
cmpsb
jg
inc
imul
cvtdq2ps
add
shll
mov
aaa
mov
add
sbb
and
and
aam
adc
stc
shr
pushf
xchg
push
js
mov
call
and
cmp
xchg
pop
sbb
repnz
jg
pushaw
scas
and
pop
sbb
mov
and
cmpsl
jle
stc
pop
fcmovbe
jnp
or
sbb
orl
addr16
xlat
lea
bound
pop
pop
xchg
pop
mov
push
cmp
sbb
nop
adc
xchg
mov
push
pop
gs
sub
js
out
push
xlat
ss
xor
push
pop
xchg
sub
and
mov
or
and
inc
inc
mov
xchg
insb
les
shll
pop
cmpsb
jge
in
rcll
add
cld
cmp
test
mov
or
dec
push
testl
out
repnz
iret
pop
adc
dec
imul
dec
xor
jbe
sub
rcr
mov
fwait
adc
xor
repz
daa
int
cmpsb
shrl
sub
lahf
cmp
out
jl
jl
ficompl
lods
fdivrs
mov
and
repz
dec
xor
adc
jecxz
xorl
and
mov
jp
cmp
xor
push
shl
sbb
lret
adc
stos
test
out
iret
fidivrs
rol
lds
mov
fdivrs
fsub
lahf
aaa
push
stc
dec
insl
out
adc
int3
push
sub
inc
pop
pop
stos
mov
notl
repnz
fstpl
xor
ljmp
jne
pop
fwait
test
dec
loop
adc
lock
jmp
shr
subb
lret
mul
inc
ret
das
dec
es
cwtl
or
sbb
mov
mov
ljmp
fcomps
sbb
dec
xor
mov
fistl
inc
sbb
call
outsl
pop
andb
sub
xchg
push
popl
call
mov
jmp
xchg
xchg
mov
push
scas
fimuls
sub
push
rcrl
pop
dec
outsl
scas
addr16
sbb
out
dec
ret
mov
mov
mov
repnz
test
add
sbb
push
dec
test
inc
sub
std
in
inc
sub
out
push
into
push
clc
nop
sbb
inc
pop
popf
mov
js
bound
mov
iret
stos
and
fimuls
xchg
test
and
mov
xor
xor
pusha
mov
push
loop
xor
cltd
aam
mov
int
fwait
xchg
and
testl
and
fdivrs
inc
popa
cmp
movsl
test
clc
inc
ds
aas
in
call
in
mov
stos
pop
xchg
cli
das
fstpl
test
xor
popa
aam
lret
jnp
add
jp
mov
sub
mov
sbb
scas
cmp
inc
adc
mov
push
lret
inc
sti
add
xlat
shll
and
lret
pop
jecxz
xorl
xchg
lret
or
ret
iret
pop
stc
out
loop
rorl
mov
out
mov
jmp
sti
adc
add
cmp
and
fisubrs
fldlg2
hlt
mov
mov
xlat
shll
leave
dec
mov
mulb
add
add
out
sbb
loop
scas
sbb
fisttpll
xchg
fsubs
xchg
enter
pop
push
bound
push
cwtl
and
mov
adc
dec
int
test
adc
add
cli
jp
mov
and
mov
add
push
cli
fdivl
xchg
repz
aad
push
cmp
mov
gs
inc
and
inc
shlb
mov
popa
sub
cld
xchg
int3
dec
and
int
inc
ffreep
cmovle
sub
lods
dec
add
inc
loopne
sub
shlb
test
dec
push
and
aam
out
ds
adc
mov
mov
dec
mov
pusha
in
push
inc
jmp
xchg
pop
inc
pop
xor
out
and
cltd
jecxz
jmp
xchg
cld
adc
shr
cmp
sarb
fs
sub
pop
in
xchg
popa
mov
adc
inc
xchg
and
mov
push
pop
cmp
mov
or
aam
aad
mov
ss
xchg
mov
fwait
sbb
xchg
xor
cli
ljmp
sar
fisttpl
mov
sahf
sub
mov
pop
pop
sub
hlt
lods
gs
fistps
fsubl
jno
jo
mov
sbb
dec
sti
jmp
mov
mov
pop
stc
mov
call
cli
jo
lret
push
sbbl
add
push
adc
fcmovnb
push
mov
or
je
lds
sar
faddl
int
int3
or
movsl
add
mov
jecxz
notb
js
cmpb
cs
push
cld
and
in
cmp
mov
jmp
fwait
neg
dec
push
dec
dec
mov
mov
daa
xor
xchg
leave
sarl
test
in
add
xchg
std
pop
test
jecxz
pop
lods
inc
sbb
sub
cs
add
mov
loopne
out
dec
mov
xchg
add
fstl
lock
adc
lea
pusha
sbb
mov
sbb
jmp
lea
call
mov
jp
cmp
inc
aas
arpl
out
mov
or
out
outsl
in
lock
cmp
sub
mov
or
add
incl
loope
lahf
mov
ffreep
mov
push
inc
adcl
sbb
mov
mov
cmpsb
sbb
xchg
popa
mov
inc
jne
pop
mov
sbb
aas
shlb
dec
push
mov
and
ljmp
lock
add
or
sub
adc
hlt
vmwrite
dec
loope
add
jnp
push
or
or
jns
enter
xchg
sbb
jmp
shll
push
mov
pop
mov
mov
notb
pushf
pop
imul
in
int
or
and
mov
and
pusha
cmp
in
cs
push
scas
mov
dec
push
jae
add
or
lock
push
push
idiv
xchg
cmp
lcall
jb
pop
mov
jns
xchg
repz
dec
jo
jnp
mov
mov
out
inc
icebp
hlt
mov
sub
imul
sar
insl
mov
jecxz
sbb
test
and
div
dec
add
cmp
cld
fs
xchg
pop
cltd
pop
mov
pop
xlat
fiaddl
mov
aad
ds
pop
prefetch
push
aas
xchg
sarl
scas
cmp
data16
js
mov
sbbl
pop
xor
push
mov
sti
sbb
sub
xchg
cmp
repz
aam
adc
out
mov
fadds
cmp
ja
jns
aam
lea
les
pop
loop
lret
or
lret
aaa
mov
mov
ret
shrb
sti
xlat
jne
shll
or
or
add
jecxz
mov
mov
test
js
sub
rcrb
iret
mov
mov
leave
mov
sbb
xor
fsubrl
mov
xorl
outsl
mov
js
out
push
shll
dec
and
xchg
xor
pusha
xchg
sbb
iret
push
iret
pushf
out
shll
es
insb
mov
loop
movsb
insl
mov
mov
jne
scas
mov
mov
jbe,pn
fbld
lds
mov
and
loopne
inc
fstps
out
in
sub
jno
clc
in
xor
xor
pop
add
mov
cmp
sbb
dec
adc
dec
fdivr
add
outsb
data16
test
popa
insl
jae
aaa
dec
mov
and
mov
xchg
cld
adc
jb
ds
inc
arpl
fs
rclb
push
cmp
fidivl
jo
cmp
mov
std
mov
call
aam
rclb
cli
in
popa
mov
cmp
jle
adc
pop
daa
sahf
arpl
je
jle
cwtl
mov
sbb
or
setae
push
sbb
cltd
xor
mov
aad
fists
sbb
cmp
aad
mov
dec
sahf
push
pop
lods
mov
sbb
insb
cmc
nop
and
addr16
icebp
clc
movsb
popf
sub
jg
fists
xor
pop
mov
xor
ret
xor
sub
arpl
inc
sbb
xor
in
push
inc
enter
inc
lea
in
mov
inc
xchg
push
sbb
pop
sti
ret
jmp
cld
aaa
in
pop
push
int
pushf
das
jne
sub
sbb
xor
out
adc
adc
in
in
dec
jne
adc
mov
das
xor
sub
mov
mov
fdivrs
lock
xchg
sbb
add
mov
sub
test
ljmp
mov
push
insb
jne
js
mov
xlat
jnp
dec
sub
dec
movl
shlb
cmpb
pop
add
and
push
imul
popl
fcmove
mov
xchg
jle
cltd
xchg
int3
dec
or
jae
jnp
sbbb
lahf
mov
icebp
dec
cmp
stc
sub
xchg
mov
add
mov
fs
mov
cld
fdivs
outsl
inc
adc
ss
addb
cmpsb
push
int
xlat
faddl
mov
ss
cmp
push
push
out
subl
je
cmp
mov
or
push
pusha
adc
das
cmp
mov
stc
cmp
out
cmpsl
ret
fst
xchg
mov
dec
das
stos
fs
mov
push
outsb
pop
mov
mov
stos
adc
movsb
jp
aam
sub
adc
aam
shll
sbb
sub
or
sub
cmp
cmpsl
pop
std
xor
dec
jmp
mov
sbb
sbb
repz
jle
or
sub
jae
inc
xchg
inc
push
outsl
pop
and
imull
ret
data16
movsb
ja
xchg
js
lahf
popf
adc
inc
sbb
imul
test
ds
jecxz
push
lret
outsb
cmp
jge
cmpsb
push
popa
enter
sub
jnp
sbb
bound
pop
test
pop
sbb
out
xor
mov
add
sub
cld
into
out
cmpsl
bound
test
pop
adc
lcall
mov
pusha
xor
cmp
dec
in
in
pop
inc
ss
dec
jnp
jle
icebp
xor
jmp
pop
mov
mov
push
add
xor
sub
and
cmp
aaa
add
mov
mov
aad
push
xchg
adc
inc
fidivl
jo
nop
inc
je
out
sbb
inc
dec
jmp
jl
pop
cmp
dec
adc
icebp
hlt
insl
adc
push
xor
sbb
insb
pop
mov
xor
mov
pushf
add
mov
jnp
imul
and
cmpb
mov
fistpll
fbstp
bound
es
pop
sbb
out
mov
cmpsl
mov
mov
out
fimuls
mov
sti
cmp
sbb
es
xor
fstps
cmpb
int
jb
mull
inc
imull
stos
movsb
mov
in
pushf
rcrb
inc
adc
pop
outsl
sbb
and
inc
mov
ret
in
jno
add
loope
hlt
cmpsl
lods
push
lahf
sbb
cmp
xchg
jb
add
int
xlat
adc
pop
fsubs
jae
ret
push
cmc
scas
icebp
int3
pop
insb
out
popf
push
mov
les
loop
std
push
das
sub
xchg
dec
sbb
mov
call
movsb
stos
xchg
ss
fucomip
xor
ds
xchg
mov
cwtl
in
sub
dec
and
pop
mov
push
pop
test
fidivl
andl
jb
cld
lret
imul
sub
and
xorl
jne
cmp
fldenv
sub
addr16
lock
sarl
inc
push
into
sbb
xor
in
nop
aaa
sbb
push
push
lret
xchg
jecxz
mov
adc
mov
cltd
lods
inc
insl
test
fdivs
loop
and
scas
cld
jmp
dec
xor
mov
jae
adc
pusha
inc
and
sahf
movsl
sbbl
out
pusha
jns
inc
jb
aas
dec
daa
xchg
mov
addr16
pop
addl
xor
xor
in
or
aam
pop
pop
sub
jbe
mov
xchg
jbe
test
test
int3
mov
xchg
rcll
xchg
fisubrs
dec
mov
rorl
int3
pop
xchg
lret
aas
cmc
movsb
cltd
sbb
push
mov
xor
xchg
cmpb
jl
pop
out
scas
xchg
jmp
lret
fs
pop
xor
push
jge
popf
lret
jp
jecxz
dec
out
pop
xchg
mov
inc
insb
clc
test
jo
xchg
shlb
pop
mov
add
jl
out
mov
push
add
iret
sbb
push
dec
je
dec
out
in
jmp
mov
ret
push
xchg
rcrb
aam
jo
pop
sub
imul
pop
cmp
lahf
in
jbe
or
sbb
xor
dec
ja
insb
dec
xlat
out
mov
inc
mov
xchg
scas
xor
popl
adc
int
pop
mov
add
push
lahf
add
pop
push
imul
mov
and
cwtl
pusha
push
mov
xorl
dec
popa
pop
aas
insb
negl
out
cmp
jb
push
mov
inc
mov
out
in
stos
mov
aam
sub
and
sbb
dec
mov
xor
mov
mov
shlb
ror
cmp
xchg
aam
inc
out
mov
mov
lods
jp
or
or
mov
rcll
je
insb
mov
adc
nop
inc
inc
mov
or
mov
and
cmp
mov
cmpsl
xchg
lea
mov
lods
sbb
add
shll
mov
cltd
je
adc
imulb
xor
add
sub
xor
pop
nop
fsubrl
xchg
jo
mov
cmp
mov
push
fstpl
js
cmp
ja
push
popa
sub
jae
ret
test
outsl
cmp
imull
pop
ds
xor
xor
dec
cmc
push
jge
popf
ret
inc
inc
dec
testb
mov
pop
out
test
jne
fcom
call
insl
jns
fs
fadds
mov
aaa
loope
mov
push
adcl
sub
sbb
lods
mov
mov
mov
hlt
sub
fisttpl
adc
push
xor
mov
ljmp
push
insb
cli
popl
mov
dec
mov
mov
test
pop
aad
ss
cmp
mov
iret
push
std
lret
roll
jns
cmpl
and
out
pop
or
push
add
mov
adc
out
sub
inc
notl
cmc
sbb
xchg
dec
sbb
lds
out
int
jne
fbstp
mov
loop
pop
or
mov
jmp
fnstcw
test
sub
dec
mov
das
or
ljmp
in
sbb
mov
fs
hlt
roll
stos
daa
mov
pop
int3
adc
adcl
xor
cmpl
and
add
mov
mov
mov
notl
add
pushf
je
push
inc
pop
mov
push
pop
or
sarl
leave
les
pushf
cmpb
bound
pop
sbb
fmull
cli
icebp
subl
dec
inc
jg
out
mov
pop
ss
jae
or
mov
sbb
push
out
ficomps
lahf
inc
sti
stos
inc
hlt
mov
aam
adc
ret
pop
loopne
fs
sub
or
add
lods
jns
mov
negb
mov
dec
push
dec
ret
jnp
pop
into
aad
test
pop
das
lcall
loopne
lds
jle
outsb
or
iret
xor
insb
push
pop
cltd
jno
movsl
les
loope
mov
fistpll
std
mov
xchg
out
ret
inc
lret
xchg
fcmovu
pop
data16
xchg
cmp
lea
and
mov
jns
adc
sub
xchg
fldcw
pop
loope
xchg
aad
into
push
cmp
sbb
not
sub
mov
sti
rcll
jbe
and
adc
ljmp
inc
push
roll
ds
jp
xorb
and
and
incl
fwait
add
pushf
call
rcrl
gs
xchg
data16
sbb
pushf
lcall
add
xor
sbb
rclb
out
and
xchg
mov
fisubrl
and
or
xor
sub
ss
xchg
stos
mov
pop
pop
je
addr16
test
pop
sbbb
stos
add
loope
cmpsb
jne
jae
ds
mov
adc
call
mov
jle
or
dec
mov
or
and
mov
mov
xchg
pop
push
sbb
sbb
loopne
insl
in
ret
dec
pop
mov
ss
jge
sub
xchg
roll
movsl
jno
cmc
jae
mov
or
jecxz
adcl
sbb
scas
std
lret
push
in
mov
dec
in
pop
xor
mov
mov
add
or
add
xor
lods
jg
sub
in
jne
xor
in
aad
pop
jnp
inc
pushf
pusha
xchg
insb
daa
movsb
ja
cmpsb
and
mov
cmp
sbb
lock
jb
mov
std
scas
xor
mov
push
or
jge
mov
pop
loopne
pusha
cmp
aam
add
roll
add
inc
add
sbb
add
jo
inc
xchg
insl
sub
inc
aad
retw
cwtl
fisttps
popf
arpl
xchg
movsb
and
jg
cmp
dec
jbe
es
js
insl
insb
movsl
cli
fldt
int
lahf
movsw
pop
cs
push
fisubl
in
mov
roll
mov
ja
xchg
cwtl
fs
fcoms
sti
push
xor
ret
mov
lahf
leave
adc
pop
adc
dec
loop
aam
or
out
or
lahf
push
fnsave
cmp
sbb
aad
sahf
frstor
or
clc
pop
add
aad
xchg
dec
fcomps
jno
decb
fidivs
mov
jle
xor
mov
out
fs
mov
insb
div
dec
in
pop
ljmp
jle
lar
cld
push
push
xchg
dec
fwait
dec
fs
cmp
popf
cmp
jecxz
popf
xor
mov
adc
mov
fidivs
mov
lods
outsl
adc
push
xor
jbe
out
fwait
add
mov
in
fbld
jno
sbb
xchg
dec
push
test
into
jnp
dec
pop
icebp
fisubrs
sar
pop
push
xor
mov
inc
test
rsqrtps
incb
iret
cmpsl
cmp
pop
mov
addb
lcall
ja
and
scas
push
sbb
mov
mov
jmp
cltd
xchg
push
xchg
xchg
sub
divb
push
cld
ljmp
jge
test
mov
adc
xorl
les
popf
test
adc
int
sbb
pop
xorb
cmp
imull
cmc
imul
xchg
mov
xchg
push
mov
test
mov
ret
lahf
and
sbb
icebp
int
jnp
orb
popf
cwtl
outsb
cmp
cmp
jb
in
iret
sbb
movsl
idivl
insl
mov
or
leave
in
or
push
cmpsb
cmp
notb
ljmp
test
scas
dec
xchg
push
push
or
pop
ja
pop
lock
pop
sti
sbb
sbb
push
inc
and
cmp
cmp
jae
xchg
cltd
ja
xor
pop
jno
ret
mov
shlb
es
mov
scas
jo
das
xchg
mov
les
adc
pop
jnp
push
insl
rcll
xor
cli
test
dec
pop
fldcw
jne
xor
stc
mov
and
xchg
negl
lret
sbb
cmp
or
mov
cld
adc
xchg
and
testl
mov
arpl
popa
ljmp
sahf
sub
or
ljmp
fs
mov
idivl
out
jle
mov
mov
dec
pop
pop
cmp
jecxz
insb
daa
mov
jae
xchg
in
in
cltd
test
jp
push
jno
loop
ror
in
adc
out
imul
jge
cmpsb
ror
test
inc
inc
pop
shll
push
fildll
pop
cwtl
xor
mov
ja
lcall
mov
in
push
stos
lods
dec
shrl
cld
sbb
out
or
pusha
ret
test
mov
push
jg
mov
push
lcall
pop
adc
fcomps
ret
mov
adc
in
mov
dec
and
fisttpl
out
add
push
xor
ficompl
jmp
sub
and
mov
divl
xchg
adc
cs
js
je
cmp
fdivrl
lock
sub
mov
in
outsl
adc
nop
jl
mov
jmp
popf
mov
mov
lock
inc
imul
mov
mov
xor
dec
mov
jmp
out
dec
xlat
and
call
scas
rol
sub
or
inc
mov
movsl
icebp
and
cs
jp
je
mov
push
adc
shl
je
jae
adc
dec
jno
jns
and
or
shr
inc
outsb
add
lret
fldt
jb
cmp
jae
push
cltd
insb
jecxz
and
inc
jns
and
xchg
mov
adc
punpckhwd
sub
subb
insl
addl
mov
mov
in
scas
inc
daa
cmp
lock
cmp
mov
leave
pusha
fldcw
leave
pusha
pop
jno
shr
lcall
imul
dec
xchg
push
addr16
dec
sar
mov
leave
add
and
insb
jp
sub
xlat
outsb
xchg
sub
mov
add
aas
mov
xchg
mov
inc
jl
cmp
jnp
adc
es
pop
jg
enter
cmp
popf
test
gs
pop
add
inc
scas
iret
jle
insb
jae
pusha
mov
sub
sahf
xor
inc
fisubs
or
test
ljmp
out
sub
aas
lock
ja
push
adc
sti
or
jb
lahf
cmp
js
fisubl
add
fst
fdivs
out
insb
add
push
test
jle
std
ret
jne
test
mov
mov
add
je
inc
je
lock
mov
and
mov
cltd
popf
fisubs
sti
inc
icebp
add
icebp
xor
mov
jo
adc
mov
xchg
stos
mov
cmp
sbb
lret
xchg
enter
ficompl
jl
aaa
adc
pop
sub
push
cmpb
sub
pusha
loopne
bnd
dec
test
lcall
mov
adc
clc
sarl
hlt
sub
inc
push
aam
jb
cmc
dec
pusha
out
push
insl
or
sbb
xchg
clc
push
push
xor
adc
mov
les
popf
lea
sub
push
imul
fcmovbe
scas
ja
push
adc
push
test
push
or
int3
mov
fisttpl
dec
xor
push
bnd
inc
lea
pop
pop
ror
xchg
in
xchg
adc
mov
dec
cmp
inc
and
mov
jae
jae
add
pop
pop
addl
lahf
xor
mov
inc
ret
or
cli
mov
mov
and
cmp
loopne
in
je
add
lahf
xchg
adc
adc
outsl
leave
sub
push
ficoml
orl
out
or
ss
sbb
add
shl
mov
jno
dec
jb
mov
jecxz
sbb
sbb
mov
push
nop
rorl
jno
mov
add
nop
inc
cmpsl
insl
fs
sbb
or
ds
ficompl
or
stos
addb
out
mov
lret
test
out
inc
insb
push
cltd
leave
sti
lods
cmp
out
pop
outsl
xchg
inc
daa
lods
push
inc
pop
cwtl
push
enter
inc
icebp
cltd
sbb
pop
cmpl
shrb
sti
and
mov
cld
cmp
jmp
adc
push
mov
daa
fistpl
mov
movsl
fs
int3
inc
push
jno
pop
popa
inc
inc
pop
test
xchg
adc
fistpl
push
sbb
jae
stc
test
insl
in
mov
lds
or
iret
call
shlb
iret
push
adc
adc
xor
lods
cmp
jg
lods
je
cmp
push
lret
or
mov
fnstenv
lcall
fs
sbb
mov
dec
mov
pop
ss
fidivrl
dec
adc
testl
mov
adcl
add
mov
mov
sub
mov
push
push
lahf
xchg
test
pop
fs
pop
or
and
outsl
lods
jnp
fimull
inc
and
or
popa
test
sub
lea
add
test
pop
dec
inc
pop
dec
inc
inc
fs
jg
mov
dec
pusha
sbb
cmpsl
mov
adc
mov
pop
xchg
sub
xor
xchg
stc
jbe
adc
add
mov
jge
or
sbbb
mov
xor
fidivs
hlt
adcb
xor
adc
sbb
test
call
ficomps
ja
mov
xor
mov
popf
sbb
fisubl
pop
cmp
mov
movl
add
cmpsb
adc
dec
bound
cwtl
inc
jge
jbe
inc
cltd
jmp
outsl
adc
cmpsl
and
or
and
xor
cmp
push
add
adc
js
and
and
insl
pop
cmp
inc
aaa
sbb
in
xchg
push
je
add
cmp
add
mov
sbb
popl
cmpsb
loope
das
mov
loop
popf
popf
pop
out
add
fldl
sbb
push
popa
xor
or
push
imul
xchg
mov
fstpl
insl
lds
xlat
pop
adc
enter
push
ss
pop
cwtl
fisttps
mov
ret
and
xor
out
arpl
xor
cmp
push
cld
push
inc
jnp
or
jp
add
mov
into
divb
rcl
fs
jne
mov
lahf
dec
cmpsb
loopne
jmp
dec
adc
out
test
dec
lds
test
mov
pusha
xchg
insb
xor
rorl
jge
adc
push
test
and
xor
mov
mov
sbb
ret
shlb
enter
jne
scas
cs
fcoml
test
adcb
inc
inc
sbb
out
cmpsb
lods
repnz
xchg
cli
add
les
fwait
das
cli
sbb
dec
push
pop
inc
std
cltd
xchg
pop
ret
aad
sbb
fistpll
mov
adc
xchg
movsl
adc
and
cld
lahf
mov
pop
sub
jge
pop
pop
mov
ljmp
pop
movsb
mov
mov
push
les
xchg
inc
jne
test
lods
add
cmp
je
mov
icebp
push
stos
sub
dec
mov
cli
xchg
xchg
and
lcall
add
movsl
clc
push
and
sbb
lea
es
jmp
push
pop
stos
jne
jbe
adc
shl
ljmp
out
adc
inc
imull
dec
decl
popa
das
pop
aaa
sbb
xor
lods
inc
dec
movsb
imul
jno
jle
scas
xchg
and
pop
push
out
sti
insb
pop
and
dec
pop
add
daa
lea
ss
loopne
push
push
stc
repnz
leave
setbe
or
in
pop
in
stc
dec
push
fists
pop
pop
xlat
gs
repz
ret
addr16
das
in
out
std
fwait
jp
mov
xlat
jmp
push
jp
jle
push
ds
inc
mov
pop
inc
sub
movsl
mov
cmp
mov
fistpl
sbb
mov
mov
cmc
in
push
outsb
imul
pop
loopne
sub
ljmp
push
xor
sbb
xor
cmp
insl
shll
imul
push
shrl
iret
adc
jmp
inc
pop
adc
movsb
or
pop
ss
add
inc
test
outsb
jmp
add
and
adc
mov
dec
out
jmp
es
dec
jae
cmp
icebp
mov
pop
and
jns
mov
lcall
cmp
push
push
mov
xorl
mov
inc
nop
test
sub
mov
or
jnp
and
imul
lret
sbb
fsubrl
mov
lock
mov
or
and
daa
fbstp
nop
loopne
mov
in
sub
push
int3
xor
mov
test
inc
xor
mov
or
cld
jg
cmp
cmp
mov
push
pop
int3
stos
loopne
out
pop
js
mov
std
rcrl
mov
sub
cmpsb
jae
mov
adc
je
gs
pusha
pop
dec
dec
mov
lcall
mov
pop
or
insl
push
mov
push
rol
scas
jmpw
pop
xchg
sub
inc
push
sub
lods
dec
cmpsb
cmpsb
call
xchg
jg
pop
cli
cmpsl
inc
sbb
mov
icebp
jmp
loop
xor
aaa
mov
test
cwtl
dec
sbb
in
movsl
dec
data16
xchg
and
mov
sbb
hlt
cltd
int
add
pop
negb
int
aaa
or
scas
addb
repnz
mov
mov
cmp
jecxz
xorl
lret
add
or
bound
mov
out
mov
and
addb
pushf
add
add
push
and
or
incb
je
or
mov
shrb
shll
mov
enter
push
sahf
sar
rcll
mov
inc
mov
jb
adc
jge
es
shll
and
or
neg
dec
cmp
and
sbb
into
sub
add
jmp
stos
rorl
les
pop
pop
arpl
or
dec
call
inc
lods
lcall
push
lock
ljmp
jge
sbb
test
push
pop
pusha
mov
cmpb
pop
jns
dec
out
push
mov
push
jecxz
jge
cmp
in
not
insl
mov
inc
jmp
out
add
sarb
in
xchg
cltd
cmc
add
pop
movsl
in
mov
mov
movsl
aaa
jmp
clc
inc
in
mov
jl
ffreep
xchg
orb
inc
stc
adc
and
in
xor
adc
push
int3
cmp
xchg
lds
mov
sub
sar
adc
sub
and
cmpsb
pop
out
call
cmp
iret
and
and
and
ficoms
pop
scas
shrb
push
lods
add
or
fs
cmpsl
add
inc
push
xor
addl
xchg
inc
movsb
adc
jae
xchg
orl
jnp
in
or
rclb
movsb
icebp
das
jne
inc
and
add
sahf
mov
adc
push
xchg
in
dec
test
or
icebp
push
test
stos
ds
sub
in
outsb
ljmp
mov
cltd
push
fwait
aad
shll
push
fs
adc
mov
xor
jb
das
out
subb
add
xchg
negb
mov
jbe
pop
xchg
and
lds
push
cltd
push
sti
cs
xchg
mov
push
sbb
and
sti
enter
pop
fwait
jmp
fdivrl
fxch
scas
jbe
rcr
sti
mov
rorl
pop
movsl
cmp
cmp
cwtl
insb
lahf
out
not
add
push
test
sub
stos
out
std
mov
adc
lcall
adc
lret
in
je
adc
pop
test
sar
aad
pop
stos
sbb
repz
add
pop
dec
test
xchg
adc
cmp
sub
cld
dec
xchg
sbb
cmp
add
dec
repz
lock
test
sub
sub
adc
fs
add
ret
mov
jbe
in
popa
pop
dec
pop
inc
jns
arpl
sti
das
mov
fcmovb
cltd
pusha
movsb
out
fnstsw
movsl
unpcklps
jnp
pop
fbstp
ds
cwtl
sub
addl
mov
imul
or
xchg
fmulp
call
into
pop
ja,pt
lahf
xchg
sub
sub
mov
hlt
pop
xchg
xchg
push
cmpb
cmpsl
stos
aam
bound
out
push
xchg
rolb
pop
xor
or
imul
lds
bound
push
cmp
jg
arpl
cmp
or
jmp
and
aas
pop
fwait
mov
aam
xchg
gs
cmp
jno
push
xor
js
pop
or
mov
inc
pushf
xchg
adc
jae
push
add
std
loope
das
out
cmp
inc
adc
out
cmovge
mov
sub
jns
cltd
xchg
aam
out
or
mov
in
les
and
adc
lds
mov
out
push
jo
sbb
add
stos
xchg
lcall
mov
pop
push
not
fstl
fmuls
ljmp
shlb
jbe
lds
ja
mov
scas
inc
shll
ja
mov
cmp
and
mov
cmc
adc
js
fstpl
xlat
ja
popa
mov
mov
pop
ret
jno
or
outsl
outsb
enter
cmp
test
mov
fisttps
adc
and
or
andnps
shll
inc
sub
fisubl
pop
cli
cs
leave
pop
push
jae
std
jo
ds
xlat
outsl
adc
iret
add
inc
jecxz
test
ret
sbb
sbb
jno
movsb
jb
pmulhw
mov
and
sub
cmc
xchg
pushf
std
push
in
mov
lock
and
stos
lret
inc
sub
adcb
ljmp
sub
and
sahf
pop
out
es
push
jne
out
push
sub
popl
pusha
push
addr16
negl
mov
sbb
ds
sbb
push
ror
cmpsl
mov
fiaddl
push
mov
jbe
call
push
sub
jecxz
outsl
add
mov
sub
arpl
or
addb
loop
idivl
repz
fidivrs
sbb
sub
xchg
xchg
sbb
inc
scas
outsb
jl
comiss
dec
pop
xor
add
push
lods
sbb
xchg
in
add
xor
mov
rcrl
sarb
arpl
decb
or
cs
aaa
dec
push
jae
lds
jne
mov
jnp
and
ret
push
scas
push
lret
pop
movsl
cmp
dec
out
sbb
aaa
or
inc
and
and
jecxz
inc
push
or
cwtl
sbb
dec
insl
daa
push
out
int3
cmp
hlt
xchg
push
rcr
loop
mov
pusha
movsb
adc
imul
shlb
xor
mov
or
inc
inc
fisttpll
xchg
pop
out
ret
mov
subb
lret
mov
pop
lock
in
xor
adc
jmp
xchg
inc
arpl
xor
add
mov
push
cmc
outsl
clc
adc
jnp
adc
pop
outsl
js
iret
inc
out
lock
dec
xchg
or
aad
lds
imul
mov
push
imul
xor
jbe
out
sti
or
ds
push
mov
int
shrl
inc
out
std
jp
in
lds
fsubrl
insb
imul
pop
dec
mov
jnp
test
int3
fistpl
mov
mov
adc
sub
mov
mov
add
or
stos
cmp
inc
inc
inc
daa
std
xor
cmpsb
inc
jl
and
xlat
test
scas
add
or
pop
test
and
adc
cmp
and
in
bound
divb
push
test
mov
sbb
sbb
sti
ret
lds
into
int
arpl
mov
call
mov
jb
out
rclb
push
and
adc
mov
xor
sbb
xchg
push
push
sub
in
sbb
rcrb
pop
add
xlat
jmp
push
sub
loop
push
lahf
mov
into
xor
cmp
cmovb
negb
sub
std
inc
in
and
divl
repnz
mov
cs
jecxz
int
dec
enter
outsb
push
ljmp
movsb
dec
sti
and
adc
add
mov
adc
mov
jmp
mov
ss
mov
movsl
add
inc
rcll
push
push
in
xor
cmp
pusha
and
cmp
ss
ljmp
inc
and
jno
inc
jnp
sbbb
mov
lea
pop
or
fisubrl
cli
daa
mov
mov
arpl
add
pop
xor
fcompl
xchg
imul
xchg
push
ret
jb
push
pop
rcll
stc
inc
mov
or
loopne
cmp
loop
fnsave
mov
cmpsl
mov
cmc
push
andb
out
dec
jo
ss
loop
lock
push
rcl
jle
jl,pt
out
popf
ljmp
mov
repz
enter
adc
out
xchg
cmp
jmp
test
loopne
sub
stos
popa
out
lahf
lods
clc
es
jmp
andl
and
faddl
xor
nop
xor
cmp
jbe
xor
dec
jmp
clc
mov
clc
adc
add
fcomps
fs
add
test
xchg
jo
or
das
into
xchg
sbb
jl
inc
cmp
imul
inc
in
insl
call
imul
int
mov
movsb
inc
lea
dec
nop
push
and
push
push
mov
subb
lods
int3
jb
dec
jmp
xchg
imul
jae
xor
xor
sti
sub
mov
push
fmuls
mov
xor
inc
loopne
push
push
xchg
sti
xchg
es
lcall
test
add
into
add
xlat
jno
jle
jns
test
je
fnstcw
imul
test
cmp
nop
shll
aas
scas
int3
or
sbb
sub
xor
fisttps
dec
out
cmp
in
call
loope
shlb
mov
out
leave
nop
and
dec
inc
push
dec
enter
sahf
mov
cs
rcl
jg
cmp
mov
xchg
enter
push
mov
inc
out
jo
cmpsb
paddsw
lret
mov
outsb
int3
pop
mov
sub
lret
lret
insl
dec
push
sub
pop
repz
frstor
gs
les
and
inc
sub
push
jne
cmpsb
arpl
cmp
mov
jb
ret
fmulp
mov
ja
iret
adc
es
xor
cwtl
dec
sbb
lods
enter
push
cwtl
fcomps
sbb
xchg
and
pop
scas
bound
icebp
mov
xchg
dec
hlt
cltd
add
jg
jno
add
lret
inc
sub
xor
push
lods
mov
out
hlt
mov
jo
in
fstps
andb
mov
shrl
clc
movsl
and
ret
fcompl
jbe
stos
xchg
mov
notb
lds
xor
cld
out
sbb
lret
push
imul
push
sti
xor
dec
jl
test
daa
lret
movsb
push
xchg
adc
daa
lcall
sbb
ja
sub
xchg
pop
popf
jns
and
dec
ljmp
xchg
scas
ret
loop
adc
popf
into
lods
loopne
pop
add
outsb
mov
xchg
in
pop
jp
shll
inc
out
cs
gs
insb
in
mov
std
ficoml
test
sub
mov
fistpll
cmpsw
insb
out
inc
cmc
clc
pop
push
xchg
dec
jg
mov
dec
ret
push
out
jns
cs
push
jg
adc
pop
dec
sub
mov
jbe
es
insl
jecxz
push
les
cmpsl
dec
out
sub
xchg
mov
adc
mov
jno
sbb
in
adc
sub
movsb
data16
in
jg
les
in
xor
cmpsb
or
or
ljmp
mov
jbe
aam
inc
push
nop
mov
xchg
daa
movb
aam
cwtl
shll
or
fstpt
dec
fidivl
and
xor
test
dec
add
cmc
push
enter
addb
pop
hlt
fwait
adcb
stos
pop
sbb
xor
or
mov
push
mov
ja
movsl
add
cmpsb
test
mov
mov
cmpsl
and
jp
mov
sbb
nop
ss
scas
mov
rclb
aam
negl
sbb
ds
lock
jg
push
fstpl
insl
sub
mov
mov
nop
inc
and
int
mov
push
roll
clc
and
xchg
xchg
enter
mov
aaa
mov
xchg
sub
call
or
out
adc
jo
sbb
add
or
mov
test
xlat
in
jg
cmpsb
xchg
sbb
inc
push
and
lret
repnz
or
jecxz
hlt
in
and
insl
xchg
jp
xchg
mov
push
xor
cmc
push
lods
xor
mov
mov
inc
jbe
fs
cmp
enter
pop
or
gs
hlt
pop
pop
and
xchg
ja
and
jecxz
push
mov
xchg
mov
push
push
mov
mov
pop
sbb
cmpsl
addr16
pop
dec
ret
push
mov
lret
push
or
dec
enter
popl
pop
scas
add
pop
scas
je
repz
in
das
dec
scas
out
xlat
sub
data16
jg
pop
pop
adc
cmp
jge
add
stos
pop
shll
lock
xor
std
jecxz
aaa
add
jl
push
or
inc
repnz
aaa
pop
leave
adc
inc
mov
aam
ret
ret
stc
data16
out
ss
xor
lock
or
ss
pop
nop
adc
or
add
aam
push
nop
popa
imul
mov
cmp
pop
and
mov
stos
stos
in
cmc
test
stc
xchg
mov
fldcw
ja
lock
jle
xchg
push
push
out
js
pop
loop
jl
fsubl
aas
push
fisttpll
fnstsw
cmp
jb
mov
mov
mov
sub
rcl
cld
pop
xor
ret
cld
add
pop
jl
addr16
daa
add
lods
clc
sbb
out
mov
das
rcrb
fiaddl
fs
jge
out
mov
lret
in
mov
push
mov
cmp
loop
sbb
jle
dec
movsb
lds
sub
mov
xor
call
call
inc
cld
pop
push
pop
aam
or
addr16
fs
in
jne
lret
push
mov
pop
cmpsb
pop
add
pop
repz
enter
push
leave
add
pop
aad
cmc
and
ja
insl
cmc
push
shrl
orl
sub
and
movsl
mov
ja
dec
xchg
daa
mov
outsl
stc
push
outsb
dec
mov
int
dec
lcall
out
cmp
sbb
inc
shrl
sub
mov
or
sbb
add
pushf
inc
pop
pop
repz
sub
pop
mov
cmpsb
and
test
aam
std
mov
add
jns
lcall
inc
xor
or
pop
adc
mov
pop
aad
sub
ds
pop
cli
or
je
push
int
sub
inc
rorl
pop
push
mov
xor
fisttpl
sar
lods
sub
out
cmc
jbe
push
test
popf
mov
testb
daa
adc
mov
inc
ror
add
into
push
mov
sub
mov
out
aaa
jno
inc
pusha
jl
dec
cmpsl
repnz
xor
in
inc
lahf
sbb
or
xchg
in
jno
adc
push
dec
push
push
push
cmpsb
sbb
pop
dec
imul
test
inc
pop
mov
jno
stc
dec
bound
nop
minps
or
cwtl
shll
stos
add
and
ror
mov
in
mov
pop
imul
xchg
pop
mov
mov
inc
mov
shll
insl
jo
ret
test
lret
or
xor
xchg
lret
mov
jmp
cmp
or
push
test
sub
mov
int3
in
orb
adc
push
stc
xchg
insl
inc
enter
hlt
jl
aaa
cli
cltd
data16
ja
jg
mov
stos
mov
jnp
inc
repz
cmp
and
les
xchg
inc
hlt
imul
lret
lods
ja
jecxz
iret
lret
jle
add
inc
movsb
outsl
fidivs
enter
mov
push
stos
add
ss
lret
or
std
push
fnsave
and
and
sub
push
out
rcrl
push
push
mov
sub
dec
push
xor
lock
jle
es
inc
sub
divl
rorb
adc
jp
loopne
ljmp
and
jno
in
lds
enter
int3
pop
dec
sbb
mov
es
stos
out
mov
test
push
push
or
cld
shlb
adc
jbe
sub
popl
add
aaa
imul
xchg
add
stos
xchg
frstor
cld
gs
inc
add
outsl
inc
push
sbb
fadds
popl
popf
repnz
mov
cmp
frstor
mov
cmp
ret
lea
imul
dec
mov
pop
mov
or
les
pop
jne,pt
bound
cmp
jp
popa
dec
imul
push
aas
insl
jbe
out
pop
imul
dec
lods
aas
xchg
jl
inc
xchg
cmp
lret
fildll
aaa
je
sbb
or
in
mov
fsubl
test
fst
cmpsl
ja
shll
stos
icebp
xchg
lret
pop
lret
scas
xor
jnp
jbe
sub
cmp
movsl
and
fwait
mov
inc
mov
mov
jo
jo
stos
jg
lret
push
movsl
jmp
leave
cmpl
dec
nop
cltd
int3
inc
repnz
jle
jecxz
mov
push
mov
sub
sub
jo
imul
inc
ret
or
ljmp
daa
inc
and
push
jmp
sub
pop
fisubl
pop
aad
mov
mov
lds
fyl2xp1
aam
std
dec
loopne
or
pushf
sub
add
mov
mov
imull
js
aas
mov
dec
sbb
cwtl
mov
mov
dec
mov
repnz
adc
adc
mov
dec
and
fnsave
in
adc
out
sub
inc
scas
pop
mov
adc
sub
mov
pop
bound
push
pop
mov
jle
jle
pop
cmp
or
sub
lcall
lds
inc
pushf
jp
outsb
repnz
xor
mov
popa
dec
out
dec
fbld
adc
popf
push
das
fstl
dec
lea
push
mov
or
sti
scas
or
cwtl
out
mov
je
push
daa
loopne
mov
les
inc
xchg
jno
adc
push
cmp
aad
push
xor
out
lret
arpl
in
rcll
inc
jp,pn
push
mov
mov
xlat
mov
leave
xchg
jno
sbb
mov
aam
lahf
test
jecxz
clc
xor
in
outsl
pop
inc
cltd
dec
mov
aaa
jl
pusha
scas
fadds
out
push
cmc
push
lret
sbb
mov
pop
ss
dec
push
cmp
jb
scas
push
test
pushl
push
daa
pop
sub
mov
sbb
jmp
fwait
movsl
and
mov
sti
insl
aam
jmp
inc
or
and
mov
iret
mov
mov
pop
das
cmp
imul
xchg
push
gs
stos
repz
mov
inc
ret
sbb
mov
jp
je
std
insl
loop
aam
loop
fidivs
mov
mov
lock
push
push
push
pop
fwait
aaa
pop
lret
xchg
cmpsl
fists
sub
dec
sbb
push
push
add
xabort
lods
inc
jae
aaa
and
adc
clc
sbb
loop
sub
fildll
xchg
movsl
mov
into
mov
ss
pop
lcall
xchg
xor
pop
jmp
cltd
in
aam
mov
sub
or
add
cmp
sti
out
dec
mov
mov
xchg
sbb
imul
loop
adc
rcll
dec
or
test
jmp
ja
enter
fnsave
xor
addr16
add
test
sub
das
mov
and
mov
xor
iret
ret
in
fcomps
sbb
imul
mov
add
push
pop
push
pop
mov
js
lods
mov
push
jecxz
jnp
ja
movsl
pusha
push
cmp
aam
and
add
in
test
out
mov
jmp
out
sahf
ret
popa
mov
push
js
mov
jae
test
jmp
xor
fs
pop
mov
xor
inc
mov
lahf
xchg
push
mov
orl
jnp
sub
push
cmc
cld
out
lret
test
ds
lock
in
mov
addb
sub
sahf
jne
js
jp
mov
lret
sbb
cmp
jle
stos
ds
xor
ds
dec
pop
lds
out
xchg
outsb
sub
out
loopne
out
lcall
jb
lds
lea
movsb
in
jnp
incl
rcl
lcall
inc
mov
pop
lock
sbb
lahf
or
or
jl
sub
inc
rorl
movsl
ja
sbb
cmp
out
xlat
ret
loope
dec
je
aaa
add
jl
xchg
cli
incl
cwtl
mov
xchg
cmpsb
std
dec
enter
mov
pop
mov
out
jg
mov
and
adc
push
add
pop
pxor
sarl
xchg
dec
adc
fdivrp
push
mull
or
sbb
inc
jg
sbb
add
mov
pop
sub
dec
jg
icebp
shll
daa
push
mov
outsb
mov
rol
sbb
jecxz,pt
mov
popf
test
pop
mov
aad
ja
pushf
negb
mov
jb
and
xor
sbb
imul
subl
adc
sbb
icebp
mov
jbe
fwait
mov
adc
stos
pop
pop
jge
out
loopne
lret
cltd
cmp
jg
mov
mov
cltd
stos
push
std
test
push
inc
or
clc
xor
jns
hlt
pusha
divl
loope
pop
pop
lock
out
mov
mov
xchg
lock
rcrb
xlat
pop
clc
sub
and
push
xor
cltd
into
lds
fscale
xor
sbb
or
cmpsl
lea
repz
dec
pop
inc
inc
popf
int
int
xor
push
enter
mov
jmp
ret
cld
fisubrl
push
pop
rcll
rorl
push
rcll
pop
pop
jb
movsb
xchg
insb
ret
pop
pushf
imul
cmp
lods
cltd
push
cmp
push
fwait
mov
dec
rolb
adc
and
adc
rcll
push
mov
mov
nop
fmul
lcall
out
das
sarb
outsl
mov
in
mov
mov
mov
in
fdivrs
dec
loope
cmp
dec
mov
cmc
sbb
jp
outsb
lods
loop
jmp
fstl
cmp
fisubl
cmp
not
jmp
out
ja
mov
dec
adcb
and
push
adc
cwtl
es
repz
sbb
push
jbe
xchg
push
rcrb
add
or
dec
jmp
dec
cli
inc
outsb
imul
les
repnz
enter
aam
int3
cltd
es
outsb
int
dec
icebp
in
jne
bound
ljmp
xchg
xchg
into
out
outsb
out
sbb
and
lds
clc
stos
jmp
dec
jb
scas
arpl
jbe
xchg
push
push
les
stos
fcoms
stos
in
mov
lea
mov
ja
or
scas
fstps
adc
xor
xchg
mov
cwtl
out
mov
fcoml
add
xchg
pop
add
mov
add
dec
ds
mov
insl
jno
lret
and
sarb
shl
cs
dec
ret
adc
sarb
and
dec
cld
adc
add
push
inc
push
pop
jo
add
ret
and
jnp
or
mov
adc
xor
jno
mov
aaa
cmp
scas
add
mov
jle
mov
mov
xchg
push
lret
and
dec
push
xor
daa
fldl
pusha
and
stc
jae
jns
jmp
leave
or
jns
cltd
or
fmull
daa
mov
xor
add
dec
orl
scas
and
negl
into
inc
xchg
jge
pushl
lock
mov
dec
xchg
lret
jg
push
into
sbb
dec
xor
clc
and
inc
std
xchg
jno
out
push
ficoml
jne
sbb
sahf
push
inc
jo
cmc
mov
clc
sbb
jns
rcrl
mov
and
mov
jecxz
push
xlat
mov
aaa
stos
call
and
scas
in
inc
orl
jle
xchg
sbb
clc
mov
daa
ds
insl
hlt
test
fisubrs
fidivl
cmp
outsl
inc
add
mov
lods
rorl
or
cmp
subb
mov
inc
mov
add
pop
add
rorb
push
test
fs
stos
xchg
push
jns
addr16
xchg
gs
xchg
icebp
jae
mov
mov
lret
ljmp
nop
push
sahf
push
fimull
outsb
lds
imul
imul
mov
es
into
call
aas
mov
mov
fcoms
ja
in
dec
rolb
in
test
inc
pusha
lock
xor
mov
adc
mov
mov
push
jmp
push
add
fnsave
lret
push
jnp
jp
jle
and
xor
movsb
mov
cmpsb
xchg
xchg
jg
hlt
xor
mov
sbb
fiaddl
imul
call
sub
js
jle
repnz
sbb
in
jae
dec
pop
pop
sbb
pop
pop
jno
les
testl
push
sbb
push
sbb
outsb
jmp
cmp
mov
lret
sbb
ret
fdivr
setnp
decb
push
leave
or
lcall
or
cli
inc
iret
ret
jbe
mov
dec
sub
test
ja
jo
jae
push
ror
jno
outsb
sub
mov
loop
popa
fcmovne
loope
ret
sub
mov
out
pop
je
jne
lock
ret
dec
sub
mov
daa
aas
mov
out
aad
jl
cltd
popf
push
or
ds
mov
enter
pop
cmp
ret
cs
dec
enter
dec
iret
cmc
jne
cmp
dec
imul
lock
sbbl
test
in
aad
ret
lods
out
addr16
pop
jae
test
mov
inc
daa
add
adc
cmc
popa
icebp
mov
int3
mov
push
adc
and
sbb
jnp
add
lahf
loop
mov
sub
push
sbb
sbb
pop
loopne
push
cmp
out
jmp
dec
xor
imul
adcb
xchg
xchg
mul
test
jge
pop
pop
testb
xchg
xchg
repz
fs
lods
pop
popw
sbb
repz
cltd
iret
cli
dec
mov
fwait
pop
and
rorb
jb
jns
or
inc
sbb
movsl
or
xchg
mov
dec
xchg
cld
adc
dec
imul
add
xchg
inc
lcall
adc
das
jbe
sub
or
mov
movsl
mov
test
loop
loop
push
out
cmp
sub
lea
out
adc
dec
inc
and
inc
xchg
xor
orb
pop
push
mov
pop
in
jge
pop
xchg
sub
psubsw
xor
xchg
cmpsl
mov
scas
jbe
movsb
mov
pop
or
in
mov
push
inc
test
fldcw
cltd
cmc
and
js
xor
adc
sub
out
gs
out
aaa
ss
pop
sti
cmp
mov
push
cwtl
fbld
daa
xlat
mov
xchg
outsb
jbe
sti
xor
outsb
jno
lods
mov
in
jae
and
leave
rcrb
pop
popf
lock
push
or
enter
sbb
orl
cmpsb
test
xor
dec
and
loop
xchg
and
insl
xchg
inc
xor
xchg
push
or
adc
jcxz
jne
aaa
andb
js
adc
aam
adc
pop
push
sub
lock
cmp
lcall
inc
outsl
hlt
dec
je
xchg
or
fcoml
sub
lahf
and
xchg
xor
or
xor
int3
insb
pushf
pushf
mov
ljmp
es
xchg
pushf
cmp
jp
inc
or
addps
outsl
lods
mov
mov
sbb
jbe
add
mov
repnz
iret
ja
test
mov
dec
int3
and
add
arpl
cmp
mov
outsb
es
shrl
jns
enter
mov
jnp
inc
pop
jbe
das
loope
sbbl
jns
sbb
cltd
inc
rorb
aad
push
test
in
push
fnsave
jb
pop
jmp
loopne
add
aaa
andl
out
int3
ret
aaa
cmp
mov
mov
addb
cmpsl
frstor
or
leave
sbb
in
mov
data16
mov
xor
insl
xchg
arpl
pop
in
add
push
mov
xchg
jbe
ret
cwtl
sub
test
into
loopne
adc
imul
js
hlt
clc
rorl
sarb
lods
fisubrs
dec
xchg
test
fdiv
cli
cmc
rclb
cmp
inc
jge
cmpl
movsb
push
clc
sbb
loopne
dec
daa
add
sub
fstl
or
shll
mov
mov
fcoms
or
xchg
ss
fiaddl
mov
cwtl
pusha
mov
repnz
adc
shrl
xor
lret
inc
lcall
jno
jl
mov
jecxz
sub
inc
adc
in
jns
push
mov
dec
jns
push
ds
jbe
push
popa
insl
ficoml
inc
sub
and
xchg
cs
push
and
jo
cmp
push
in
cmc
faddl
das
loop
lret
cli
mov
out
mov
iret
dec
dec
stc
xor
rclb
gs
inc
jnp
inc
js
mov
popa
cmpsb
jnp
jmp
daa
and
fiaddl
popf
jecxz
scas
insb
and
aad
cltd
push
inc
nop
icebp
xchg
in
jne
cmp
cltd
sub
fistpll
xchg
and
inc
adc
dec
pop
leave
xor
mov
jecxz
cmp
call
iret
sahf
daa
cwtl
stc
and
sbb
mov
loopne
mov
test
inc
jo
dec
stc
shll
fisttpl
pop
add
jmp
cmp
adc
repnz
and
mov
xor
arpl
fs
or
jae
lock
sbb
jne
or
mov
mov
dec
jecxz
loope
push
adc
or
in
daa
mov
jnp
pop
sahf
jno
mov
pop
jmp
push
cs
pop
cmp
sar
cmp
pop
das
pop
lret
les
or
jge
dec
loope
or
cmp
aas
mov
pop
sbb
scas
push
ds
aaa
fiaddl
push
aas
add
jecxz
loop
pop
pop
out
or
in
xor
mov
mov
ret
scas
and
mov
push
and
adc
pop
in
dec
js
test
sbb
cld
mov
repnz
ds
pop
fincstp
std
sarb
xchg
and
int
les
pop
negb
dec
movsb
and
cmpsl
cmp
mov
rolb
outsl
push
aas
mov
ret
rorl
mov
orl
mov
adc
out
add
push
or
and
adc
push
push
rcrb
movsb
xchg
sbb
lods
jo
adc
cmc
popf
mov
add
sarl
mov
sbb
lods
mov
add
jecxz
cwtl
scas
jle
adc
add
je
add
pop
push
dec
push
sahf
push
fists
push
xchg
jne
jo
add
dec
xchg
shrb
cmp
sub
aad
xlat
lods
push
jmp
jecxz
add
add
cli
test
sarl
outsb
test
sbb
in
jge
jp
or
cli
mov
mov
xchg
add
pop
push
in
loope
mov
and
sti
push
in
int
setae
lar
loopne
pushf
arpl
and
mov
pop
popa
push
xor
dec
mov
jl
xor
hlt
cmp
cwtl
push
xchg
pop
mov
enter
test
xchg
cld
aad
mov
in
xchg
cld
pusha
jo
fstpt
mov
in
icebp
out
inc
ret
je
jl
jmp
push
mov
in
lea
xor
and
or
adc
cmpsl
jbe
add
mov
xchg
incb
jl
dec
and
repz
outsl
sub
cli
mov
jbe
dec
mov
aas
xor
pop
mov
mov
and
xlat
mov
sub
pop
fcmovb
pavgw
and
mov
lret
dec
jns
fisubs
ret
scas
stos
aad
js
fdiv
jo
add
mov
fcomi
adcl
sub
push
sub
push
scas
ljmp
stos
clc
or
addr16
push
adc
mov
shlb
pop
inc
jnp
fcoms
jecxz
inc
mov
cmp
bswap
jmp
gs
nop
mov
and
sub
pop
push
sti
in
lret
xor
dec
shll
cmp
and
lods
out
pop
jle
outsl
cmp
jnp
cmpsb
cli
inc
mov
xchg
sbb
outsl
aam
pop
sub
fcomps
jbe
sti
sbb
sbb
scas
xor
inc
xchg
sbb
adc
fcompl
pop
lds
ja
jecxz
loope
adc
test
das
int
test
xor
mov
dec
ret
mov
fcompl
insb
xor
pop
xor
or
shl
int
and
xor
movsl
movsb
cmp
hlt
inc
add
mov
cmp
pop
add
mov
and
jno
xor
cmp
scas
in
xchg
iret
outsb
cmp
jnp
fcompl
lret
out
lret
jae
xchg
repnz
pop
or
push
roll
and
rcll
cmp
lret
jl
mov
in
ret
scas
jmp
pmullw
sbb
sub
ret
icebp
jo
lret
ss
dec
mov
js
in
adc
jnp
pop
add
jl
adc
jmp
and
add
rolb
lods
push
mov
and
xchg
and
or
stc
call
mov
dec
popa
out
adc
mov
cli
sub
mov
out
inc
aad
xor
cmp
mov
aas
cmp
scas
cmp
pop
cmp
or
jmp
stos
pop
pop
iret
lds
imul
std
divl
jl
and
mov
out
xor
mov
idiv
mov
or
test
subb
lcall
cmp
lods
test
lods
insl
xchg
in
add
sub
clc
cmp
test
in
cld
fwait
or
sar
sbb
punpcklwd
in
enter
lea
test
loope
sahf
mov
sbb
sub
in
xor
stos
pop
jmp
xlat
sub
outsl
pop
test
pop
pop
mov
call
push
data16
adc
ret
mov
jne
mov
adc
xchg
dec
pusha
cmp
outsb
lods
xchg
mov
ficomps
aam
nop
pop
sbb
mov
hlt
outsb
dec
sbb
mov
mov
or
in
aas
xor
loope
enter
out
mov
mov
dec
out
in
or
leave
in
sub
pop
mov
test
pop
sub
andl
lret
jmp
fcomps
subb
push
lret
dec
enter
mov
out
sub
and
mov
jnp
jb
les
push
imul
adc
pop
into
loop
fcomip
popf
call
sbb
push
mov
outsb
inc
lea
nop
mov
inc
mov
xorb
add
sub
fs
scas
sub
and
adc
bswap
aad
xchg
shll
xor
or
negl
mov
rorb
or
les
aad
mov
add
lahf
or
shlb
mov
or
cmp
mov
mov
shll
mov
xchg
mov
pop
ljmp
inc
orb
daa
fisubrs
cmp
inc
es
sbb
xchg
xor
ret
lcall
insl
into
ja
aaa
out
and
mov
lahf
sti
and
bound
mov
cmp
mov
jbe
inc
xor
xor
sub
mov
sbb
mov
aas
xchg
popf
adc
daa
movsl
pop
cltd
xor
lods
sub
cmpsb
mov
mov
dec
sbb
jle
push
lods
add
inc
push
jno
push
dec
mov
fisubrl
fbstp
and
test
test
cmpb
iret
lods
test
xchg
xor
mov
pusha
adc
push
mov
mov
and
repnz
aaa
jo
mov
push
cs
test
gs
cltd
clc
xorl
pop
stc
pop
repz
rcr
xchg
lock
aam
sti
and
shll
push
dec
fsubrp
push
out
xor
jae
fistl
cld
mov
scas
push
imul
push
sbb
sahf
lds
sbb
js
leave
dec
mov
rcrb
movsb
jecxz
mov
ds
ret
mov
lock
jle
cmp
push
lret
mov
jns
js
jecxz
sbb
jl
mov
stos
sbb
rol
and
or
stc
movsl
pop
call
arpl
mov
cmp
dec
out
jp
cli
loopne
xchg
and
or
xchg
fistps
movsb
xchg
jmp
rclb
push
loopne
repnz
xlat
into
addps
xor
leave
xor
dec
cld
out
loopne
push
cmp
add
rclb
cltd
clc
mov
or
inc
mov
popa
mov
or
daa
jb
push
aas
pcmpgtb
in
adc
pop
cltd
adc
lods
push
sahf
or
inc
adcb
sub
les
mov
lret
inc
in
dec
mov
jb
rorb
cmp
ret
pop
loopne
jb
and
fwait
add
jp
fbld
mov
jg
lods
aam
inc
aas
clc
insl
loopne
scas
ret
mov
xchg
loope
lea
or
add
insb
add
dec
and
gs
test
mov
push
push
jo
cmp
cmp
repnz
sar
cs
std
push
test
ss
ret
in
cmp
imul
push
jge
js
ret
and
movsl
push
fdivs
imul
cmp
add
cmpsl
add
dec
inc
and
insb
pop
pop
push
inc
add
popf
inc
jo
fistps
inc
or
add
push
out
dec
fisttpl
daa
fmull
loope
js
cmp
xchg
dec
cmpsl
sub
lret
mov
adc
in
testb
mov
lea
lcall
pushf
dec
mov
cmpsb
ret
cld
sbb
xor
hlt
jns
adc
or
sbb
cwtl
adc
je
je
or
mov
insb
sub
lods
jmp
cld
mov
mov
add
push
and
seto
repz
jge
cmp
inc
mov
insb
bound
popf
lea
mov
dec
std
call
into
pop
pop
subl
push
sub
stc
add
and
jge
xchg
inc
cli
mov
imul
loope
push
push
iret
sub
pop
das
std
cmp
sti
mov
stc
or
dec
inc
pop
cmc
js
arpl
xor
sar
test
and
push
push
adc
cmp
sbb
cmp
fstps
push
into
lea
pop
lret
andl
or
sub
sbb
data16
aaa
leave
loopne
pop
lds
lea
in
push
pop
sahf
rcrl
and
scas
or
cltd
sbb
and
mov
dec
xor
xchg
fmull
cld
cmpb
xchg
push
cmc
xchg
or
mov
lcall
xor
inc
sbb
sub
imul
jb
hlt
push
xchg
xor
rol
xchg
aaa
push
xor
rcrl
add
push
xchg
fwait
mov
loope
xchg
mov
repnz
pop
call
add
and
loopne
fisubs
add
pop
mov
push
rcrl
fdivrs
mov
pop
arpl
pop
gs
jo
inc
xor
ja
ljmp
cmp
or
push
xchg
cmp
inc
pushf
jns
mov
jns
in
sub
jno
pop
jp
daa
adc
xchg
mov
inc
enter
push
dec
pop
dec
lock
add
xchg
push
sbb
jle
push
xor
xor
xlat
test
adc
mov
adc
gs
loope
insl
xor
xchg
imul
sub
aam
movsb
fldcw
lahf
add
or
sub
aaa
outsl
sarb
mov
inc
stos
daa
daa
popf
rolb
popf
dec
jnp
xor
mov
clc
cmpsb
rolb
scas
push
xor
int
dec
add
xlat
sbb
cmc
lods
xor
push
lcall
lock
add
ja
push
gs
jg
into
mov
je
std
shl
dec
jecxz
cmp
mov
cld
push
mov
inc
inc
lods
nop
or
into
out
or
outsb
inc
mov
loop
xor
jge
ja
pop
cmp
dec
icebp
jb
ret
ds
push
fsubrp
repnz
sti
pop
shlb
data16
mov
push
push
cmp
mov
cmovno
mov
pop
pop
sbb
ljmp
lods
dec
aaa
inc
inc
std
jns
xor
sub
int3
ret
pop
pop
addr16
out
lock
into
fadd
push
sub
push
push
and
repnz
imul
sbb
stos
in
sbb
out
mov
mov
dec
lock
int3
jne
daa
push
ret
push
lret
cli
xor
and
jne
adc
jae
mov
cwtd
int3
and
jne
test
popf
movsb
mov
dec
and
ss
add
aas
ret
xor
mov
popf
lds
pop
mov
inc
cmp
or
in
sbb
fisubl
sub
push
iret
mov
xchg
scas
fbld
mov
dec
pop
xor
fld
mov
jge
dec
stc
ljmp
scas
push
repz
inc
test
pop
adc
repnz
xchg
rcl
xchg
into
outsl
out
les
scas
push
pop
pop
and
adc
dec
jb
or
jp
sbb
push
and
mov
jmp
jge
xor
mov
xor
inc
les
add
fcmovnb
lret
jp
cmp
or
frstor
call
addr16
fisttps
mov
loope
das
test
dec
popf
icebp
in
xor
in
enter
add
push
stc
mov
sbb
dec
sbb
in
in
sub
lret
sbb
popf
rolb
cmpsl
mov
jno
mov
add
scas
outsl
xchg
sti
leave
mov
leave
pop
pop
repnz
adc
aam
xor
and
cmpsb
mov
loop
push
add
dec
aad
test
inc
sub
imul
in
fmulp
shl
bound
cs
push
mov
mov
inc
or
add
int
cmp
or
cs
dec
repnz
addr16
push
outsl
sbb
enter
inc
lcall
xor
imul
mov
int3
mov
mov
cmpb
test
hlt
and
xor
int3
sub
and
nop
arpl
and
scas
jo
jo
shrl
ljmp
xchg
out
es
sbb
sub
adc
jle
sbb
mov
test
test
dec
mov
cmp
pop
jge
pop
mov
mov
mov
imul
aaa
sbb
add
rolb
pop
dec
and
mov
jb
outsl
push
stc
insl
push
adc
aas
pop
add
inc
std
fs
push
test
pop
in
clc
orb
or
pop
das
inc
cmp
jmp
xor
pusha
les
mov
fisubrs
popf
add
or
pop
stc
xchg
in
add
or
test
push
ffreep
fistpl
outsb
dec
dec
ds
popa
arpl
loop
call
inc
lret
jg
lret
aas
jl
insl
adc
mov
dec
pop
xchg
fsubl
arpl
xchg
fwait
sbb
imul
loope
addr16
rolb
push
lods
xlat
xor
sub
in
stc
push
aaa
mov
jb
push
sbb
in
fistps
sbb
iret
das
outsb
mov
jp
out
sub
pop
dec
xor
pop
imul
push
inc
jp
idivb
cmpsb
imul
pop
sub
pop
mov
je
cmp
push
enter
inc
mov
pop
dec
scas
lret
mov
sbb
bound
push
daa
movsb
inc
adc
cmp
and
jl
jne
lds
mov
enter
jnp
mov
xor
cmp
sbb
inc
xor
movsl
arpl
dec
stos
ss
or
xchg
mov
repnz
mov
ds
ror
in
rorl
dec
adc
in
hlt
imul
ret
add
dec
insb
adcb
and
mov
cmp
aad
cwtl
orb
mov
xchg
inc
pop
adc
or
fcmovbe
mov
in
and
xchg
xlat
cmc
jle
adc
std
lret
icebp
jg
xorb
adc
je
bound
flds
aas
int3
cltd
cld
mov
bound
xchg
incb
or
and
xchg
xor
in
enter
xorl
jl
pop
dec
repz
pop
cltd
in
xor
pop
subl
jbe
lahf
test
inc
inc
xchg
notl
or
inc
add
into
sub
ja
sub
mov
add
mov
out
jge
das
sahf
or
cltd
cli
cmc
popf
fldt
dec
push
mov
cwtl
cmp
mov
adc
adc
mov
sub
pop
popa
push
ljmp
mov
cltd
cmp
inc
pop
outsl
and
push
aam
pop
test
lcall
mov
add
xchg
cmp
and
out
mov
push
or
jns
mov
das
adc
push
test
push
add
xchg
or
aad
xchg
test
jns
xor
lods
dec
sahf
das
dec
or
lock
fcom
loopne
cmpsb
fwait
popa
fdiv
xor
push
repz
ret
testb
jg
sbb
addl
call
lds
push
orl
std
sbb
js
in
pop
mov
cmpsb
mov
sbb
jns
jl
aam
jmp
xor
lds
orl
out
cltd
xor
mov
push
into
cs
outsl
testb
adc
mov
cmp
imul
lahf
lds
cmpl
cs
sub
jns
jbe
cmpsl
adc
or
dec
push
loope
sub
out
cmp
mov
push
sbb
dec
test
jae
push
mov
test
and
adc
mov
outsb
lahf
jmp
cwtl
in
aas
jb
jae
mov
mov
xchg
adc
sti
decb
xchg
sub
jle
pop
and
and
fidivs
cmp
fs
in
movsl
in
jecxz
mov
sti
outsl
cmp
ds
mov
add
jp
ljmp
mov
cmp
ss
cltd
ljmp
sbbb
ficoml
and
stos
mov
inc
or
push
dec
int3
fdivrl
pop
lock
sub
xchg
and
pop
shll
rorl
push
orb
sub
and
frstor
in
lea
xor
repnz
stos
inc
out
dec
mov
lret
xchg
out
sub
aaa
dec
mov
push
inc
adc
dec
call
dec
pop
bound
outsb
shlb
inc
pop
loope
sub
lret
test
ret
pop
cltd
jne
ds
sbb
fisubrs
mov
cltd
fs
aad
cmp
sub
jp
sbb
subb
push
mov
in
aas
push
or
jecxz
mov
fimuls
cmp
or
adc
inc
and
cmp
mov
out
sbb
popf
mov
les
dec
cmp
jno
push
loope
cmpsb
jmp
or
lods
jae
and
pop
std
fidivrl
pop
adc
stos
lret
adc
cmp
pushl
add
push
dec
push
mov
sub
xchg
loop
cmp
cmp
xchg
push
cmp
das
push
push
fcomps
push
mov
or
xchg
sub
add
jbe
dec
xchg
movb
or
int
pop
ret
mov
pop
mov
loop
pop
and
sarl
mov
test
mov
stc
adc
into
pop
loope
test
ja
stos
ljmp
lea
dec
jp
jp
pop
inc
pop
adc
adc
test
mull
movsl
je
adc
hlt
adc
icebp
pusha
pop
sub
stc
insb
ss
test
or
and
cmp
data16
mulb
repz
cltd
into
ljmp
imul
pushf
jl
dec
sub
push
test
aad
and
es
xor
sub
orl
pop
mov
xchg
loop
cmp
cmp
inc
mov
rorl
xlat
mov
out
ja
sbbb
je
repz
daa
std
dec
add
xchg
sbb
mov
inc
imul
shlb
jle
aam
cmp
lock
add
sub
push
std
je
sbb
fbld
movsl
xorl
fcmovnu
loope
inc
jmp
call
lods
sub
mov
xchg
ds
sahf
data16
pop
jecxz
loope
cwtl
jne
adc
add
jne
lods
ror
inc
es
dec
lds
and
popa
jns
stc
pop
stc
mov
fsubs
dec
add
mov
cmp
sbb
cmc
call
jns
jecxz
cmpsb
push
xchg
orb
xlat
push
mov
or
cmp
repnz
sahf
cmp
jmp
rcll
or
pop
push
jmp
imul
mov
lcall
enter
outsl
rorl
mov
out
adc
out
mov
out
xchg
adc
mov
lret
push
mov
movsb
push
xchg
push
ret
adc
stos
outsb
ljmp
daa
sbb
or
adc
push
mov
xchg
dec
xchg
mov
in
hlt
cmp
sbb
lds
cmpsb
dec
mov
add
iret
loop
lea
call
fs
outsb
fsts
aaa
nop
test
loope
xchg
aad
pop
mov
push
mov
cmp
fisubs
mov
stos
lds
rolb
inc
xchg
xchg
test
pop
xchg
out
xor
cmc
mov
loop
cmpsl
lret
sahf
xchg
lds
jmp
mull
jo
mov
das
out
mov
jge
xor
xchg
mov
jle
das
or
dec
adc
ret
pop
push
adc
jmp
in
sbb
add
sbb
lods
pop
out
add
insb
sti
fbld
push
jl
and
jo
cs
subb
es
sub
in
mov
pop
dec
xor
xor
jnp
mov
dec
out
or
das
xlat
lds
outsl
cltd
mov
add
and
in
mov
pop
push
subl
iret
test
js
pop
sub
in
xor
mov
add
sub
test
dec
push
jb
repz
popf
popf
clc
mov
dec
mov
dec
inc
jae
sub
pushf
inc
dec
cmc
jno
push
into
lret
sub
adc
les
dec
add
mov
sub
jb
cmp
adc
push
mov
loope
mov
mov
cmpsb
adc
push
push
inc
cmc
cli
jo
xor
jle
sub
fcomps
adc
jl
mov
ret
push
imul
clc
adc
jmp
sbbl
rcll
pop
adc
movsb
sti
jle
shlb
pusha
or
pop
les
dec
idivb
inc
mov
lods
sub
out
pop
inc
mov
jmp
or
das
push
pop
lods
xor
push
or
lahf
repnz
out
out
in
inc
popf
or
insl
or
rcl
ror
inc
movntq
sub
insb
push
jge
lret
lret
fs
jl
ljmp
bndldx
jg
and
pusha
das
mov
cmp
adc
mov
cmp
mov
mov
mov
xchg
mov
and
jnp
outsl
sub
stos
sbb
cli
pop
sti
stc
pop
jne
mov
dec
push
push
pop
cmp
sub
jbe
xchg
and
mov
mov
mov
les
call
jl
out
mov
cmpb
nop
sbb
push
jnp
push
cmovne
fistpll
int3
xor
sbb
fs
or
clc
and
in
and
xchg
clc
jg
sahf
mov
movsb
jbe
dec
inc
in
negb
lret
lds
cmp
mov
cltd
add
sti
popa
icebp
mov
stos
andl
data16
loop
lahf
sub
addr16
cwtl
jb
cltd
fistps
xor
xor
push
arpl
pop
scas
outsl
xor
ret
jbe
mov
pop
call
lea
sub
or
jp
add
xor
sub
leave
js
in
jle
add
pop
gs
ret
cmp
clc
xorl
xchg
sbbl
jns
flds
imul
outsb
fsubrs
sti
cmpsb
fwait
mov
cltd
stos
xor
push
nop
dec
addr16
rclb
xchg
fldpi
xchg
adc
mov
jns
xchg
jp
sarl
mov
rolb
dec
aam
push
and
sarl
rol
add
push
cmp
lock
rclb
or
in
aas
mov
fwait
xor
jno
loop
addr16
mov
test
lods
dec
cmpsb
out
out
adc
inc
push
insb
and
mov
mov
jecxz
pop
loopne
movsl
xor
repnz
xor
xor
cs
adc
add
repz
bound
dec
sbb
or
mov
int
aam
ror
call
mov
push
adc
sub
out
test
cmc
mov
or
ja
js
mov
jnp
jp
add
scas
dec
inc
inc
fiaddl
inc
jns
daa
fmuls
lods
jl
insb
inc
dec
xchg
imul
push
xchg
sbb
movsb
fwait
stos
or
popf
xor
xor
cmc
pop
lahf
cmp
and
mov
test
in
pop
jo
pop
xlat
inc
shr
lret
icebp
sub
popa
jg
cmp
inc
dec
xor
xchg
add
fistpll
popa
xor
iret
add
jg
je
push
stos
in
push
mov
push
hlt
rcrb
and
aaa
dec
ret
inc
popf
dec
cmpsb
insb
sub
loopne
mov
xor
mov
xchg
fildll
xlat
aas
pop
test
popa
pop
add
mov
lock
sbb
out
mulb
aad
std
cld
scas
push
and
les
call
or
push
outsb
adc
ret
ljmp
daa
cmpsb
push
cmp
xchg
or
test
popf
divb
lahf
subb
nop
rclb
pushw
mov
cmpps
es
pop
test
loopne
xbegin
mov
cmc
sahf
push
jge
rorl
in
push
push
dec
imul
sbbl
jmp
or
iret
stos
out
roll
cmc
addr16
in
add
cwtl
xor
aas
pop
aad
and
lret
xorb
sbb
xor
xor
sub
pop
sahf
push
pop
jnp
jae
les
call
out
idivl
push
adc
enter
sbb
popa
add
add
imul
lods
aam
je
dec
fcmove
stc
mov
inc
mov
mov
fdivrs
push
and
std
mov
cmpsb
cli
js
sbb
test
rorl
sbbb
shlb
push
or
jecxz
idivb
push
sbb
repz
ficoml
cld
addl
pop
and
test
aad
jmp
mov
mov
xchg
push
mov
cmpsb
out
fdivrs
stc
push
popf
ret
xor
mov
push
push
mov
mov
add
push
add
clc
arpl
repnz
adcb
pop
aam
aas
push
aas
xor
cmpsl
cmpsl
out
sti
cmpsl
dec
out
or
into
dec
cmp
out
push
clc
inc
fistps
ss
add
pushf
pop
fisttpll
les
xlat
add
sbb
cli
dec
mov
insb
loopne
int
push
mov
out
cmpsl
mov
jmp
sbb
pop
ret
popf
ret
in
les
out
test
mov
cmp
inc
or
jo
lret
test
xor
rcrb
popa
pusha
or
daa
sbb
mov
push
jp
out
in
push
add
sbb
aad
mov
inc
mov
mov
imul
xchg
test
insl
nop
cmpsl
mov
rorl
in
iret
xor
pop
js
sbb
pop
mov
sbb
inc
outsb
cmp
pop
sub
pushf
mov
xchg
mov
cltd
subb
xchg
adc
jb
data16
mov
lods
lock
xchg
or
xor
and
dec
xchg
sbb
mull
jecxz
lea
push
jne
xor
push
jno
fcmovne
mov
push
cmp
rorl
std
adc
or
lods
xchg
adc
fnstsw
pop
lret
and
mov
out
sti
stos
icebp
dec
daa
ss
nop
out
mov
pop
fwait
cmc
mov
mov
bound
inc
cltd
not
js
je
dec
out
test
aam
push
pushf
xor
xchg
cmp
imul
mov
inc
movsb
mov
ret
adc
push
cmpsl
repnz
sbb
gs
js
divb
shl
cs
mov
fdivs
jo
add
loopne
ds
sbb
maxps
jmp
or
push
ljmp
dec
dec
push
movsb
pop
push
sbb
adc
repnz
xchg
cmp
aad
addr16
stos
lock
or
sti
lods
xchg
insb
dec
popf
mov
pop
push
loope
xchg
mov
pop
nop
cmp
jl
scas
or
or
add
in
sbb
fisttps
pop
mov
pop
xlat
inc
arpl
pop
nop
stos
gs
mov
sahf
loopne
sub
dec
xchg
ret
jnp
jmp
dec
insb
jg
jecxz
or
cld
nop
sub
movsl
xor
push
fs
jge
or
clc
sti
push
out
std
inc
sub
cmp
mov
scas
insb
jae
lret
or
dec
push
mov
aad
int
fincstp
cmp
jnp
inc
adc
repnz
adc
pusha
jno
fcmovnu
movsb
mov
add
scas
xchg
mov
cmp
rclb
daa
ljmp
pushf
fldpi
xor
call
mov
dec
mov
arpl
xlat
rclb
jmp
cmc
movsl
flds
cs
in
cmpsl
cmp
pop
pop
lea
out
shr
push
sbb
inc
cmpsl
sub
sbb
loope
fistl
mov
aas
jnp
mov
cmp
dec
add
or
jmp
fwait
jo
or
data16
sar
xor
addr16
xchg
int
push
test
and
sbb
dec
fwait
out
loop
loope
es
xor
outsb
push
push
aaa
pop
xchg
bound
xchg
mov
stos
jecxz
fmulp
adc
sti
pop
movl
xor
sub
sarb
push
xchg
xchg
ss
stc
lahf
cmp
mov
out
mov
ljmp
mov
push
or
jno
out
mov
push
xlat
scas
or
xchg
pop
jnp
push
inc
paddsw
popa
mov
mov
movsl
xor
ficoms
mov
mov
mov
sub
stos
xchg
mov
fsubl
lea
loop
mov
xchg
sub
jp
inc
hlt
lea
xor
xor
jp
imul
push
mov
mov
repz
das
call
stos
fwait
inc
cmpsb
fmull
mov
jg
add
pop
xor
or
stc
in
movb
arpl
add
fsts
xor
popa
ja
mov
leave
dec
lret
std
lock
pusha
inc
pop
stos
mov
out
jge
sub
mov
into
and
push
mov
mov
cmpsb
jecxz
jbe
or
repnz
mov
push
jb
outsl
mov
popf
and
jp
inc
repnz
jns
push
mov
or
push
adc
sbb
je
les
imul
mov
inc
arpl
dec
xchg
gs
cmpsl
gs
nop
xor
int3
push
cmp
out
jns
push
fnstcw
es
fnstenv
fmull
scas
arpl
scas
cltd
jmp
popa
mov
dec
jno
int
mov
and
mov
sub
mov
dec
insb
xchg
lcall
add
aas
mov
sbb
iret
pop
mov
mov
jg
or
or
movswl
push
cmp
mov
popf
out
insl
mov
pop
fdivl
ds
addb
lods
test
cld
outsb
sbb
mul
adc
cwtl
and
ss
in
xlat
in
arpl
jecxz
dec
in
shlb
push
cmp
cmp
sbb
enter
lahf
sub
cli
aam
or
out
mov
cmpl
pop
rcll
push
sub
out
icebp
xchg
cmp
cmp
fstpt
pop
mov
and
pop
shrl
out
mov
sub
arpl
scas
sbb
push
sbb
pushf
clc
jmp
rcrb
sbb
pop
mov
das
fmuls
out
stc
cs
lds
xorl
lret
out
sub
or
test
and
lea
mov
mov
jae
aad
mov
pop
adc
insl
xchg
stos
fildll
dec
xor
xchg
cmp
adc
adc
cwtl
xchg
sbb
insl
add
add
inc
xchg
pop
cmp
cmpsb
and
enter
dec
fsubrp
lods
dec
jmp
pop
fadds
cmp
add
iret
jo
mov
xlat
repz
loop
or
or
and
sbbb
jp
pop
mov
or
mov
sbbb
lea
aas
das
cwtl
jge
and
inc
jb
out
f2xm1
repz
rcrb
sbb
lcall
test
rolb
leave
xor
mov
cmpsb
xchg
repz
cli
mov
movsl
je
pop
push
inc
nop
cmc
push
mov
into
lahf
addr16
sahf
outsl
negb
or
sub
pop
rcll
cli
es
rorl
mov
and
mov
push
mov
inc
sub
mov
cmp
lods
xchg
sub
cmp
inc
jg
into
sub
popa
shlb
imul
test
or
pop
add
mov
pop
and
pusha
ret
mov
out
add
cmp
shl
push
adc
mov
bound
daa
jbe
pop
test
dec
xor
pusha
sub
pop
cmp
mull
push
jne
xchg
shrl
aad
fstpt
xchg
xchg
jle
imul
push
fistpll
lret
mov
jbe
pop
cli
mov
mov
loop
inc
mov
push
jno
jl
fcompl
movb
sbb
cld
sub
in
add
dec
vpinsrw
push
enter
inc
aaa
js
inc
sub
pop
pop
movsl
inc
pop
cmp
cmpl
testl
cmpsb
push
mov
mov
jg
jl
mov
pop
rcll
sbb
movsb
and
mov
out
or
mov
mov
dec
je
dec
add
and
int3
and
movsl
jo
sub
mov
or
test
ja
stos
aaa
sub
imul
fwait
leave
pop
data16
xchg
mov
lret
repnz
fsubrl
stc
insl
les
lret
jo
lds
insl
adc
mov
xor
test
imul
scas
andb
or
xor
enter
or
mov
pop
sub
push
lds
sub
xor
pop
pop
or
lea
scas
xor
xchg
movsb
mov
in
cltd
dec
pop
push
mov
sbb
ret
or
cli
mov
xchg
cs
cltd
xor
fwait
add
cmp
ss
dec
test
scas
sbb
lret
jl
fndisi(8087
xor
gs
outsl
js
dec
inc
into
xor
jge
or
push
jmp
rcrb
in
and
pop
stc
out
fisubs
ss
add
fwait
mov
shl
ret
std
mov
outsb
out
jmp
adc
jp
xlat
xchg
stos
xchg
addr16
pop
je
add
and
xchg
popa
scas
jmp
loope
push
popf
je
setne
ficoml
xchg
or
mov
and
jl
fdivl
jmp
into
pushf
out
neg
ljmp
sbb
lret
mov
xchg
pop
popa
xor
ja
nop
fisubl
jae
ret
sbb
lahf
lahf
mov
xchg
rolb
in
out
insb
mov
jmp
mov
jb
icebp
ljmp
test
and
xchg
sub
call
arpl
lea
out
xlat
push
mov
mov
and
or
bt
aas
sub
loope
xor
pop
test
mov
cmpl
sub
lds
out
adc
sub
inc
sub
repz
add
aam
out
mov
xor
cmpsb
xchg
push
cld
cmpsl
cmc
pusha
in
cmp
sub
mov
int3
or
add
jb
std
push
sub
ffreep
insb
inc
ficompl
mov
ds
push
jecxz
dec
mov
xor
je
adc
vmovapd
inc
hlt
shrl
into
mov
stc
pop
mov
adc
push
loop
mov
sti
dec
adc
sub
cld
pop
cmp
xlat
pushf
jbe
sbb
pop
std
or
sub
cmpsl
fcomps
lcall
cmpsl
stos
lahf
sub
or
lock
repz
imul
idivb
jp
sahf
lock
loopne
enter
daa
je
push
fs
lret
sbb
xchg
cmp
loop
inc
jb
lea
adc
stc
jecxz
ja
or
in
mov
aad
out
cmpsb
dec
loope
and
adc
sub
cmp
das
mov
dec
sahf
out
rcl
test
lret
ret
or
into
outsl
ja
lcall
sbbb
jl
movsl
cmpsl
popa
push
xchg
jge
cmp
pop
fs
xlat
adc
cwtl
int
and
mov
adc
inc
cli
rcrl
rorl
cmp
div
jecxz
test
cmp
sbb
fsubr
out
ffreep
mov
cwtl
lret
add
adc
mov
out
cmp
hlt
or
mov
sub
mov
cmp
ds
aam
ss
in
and
xor
sarb
xor
ficomps
out
mov
outsb
fidivrs
jbe
fiaddl
jge
push
aaa
clc
dec
sub
cmp
shlb
out
pop
lcall
mov
out
lea
fs
pop
sub
std
rclb
pop
jns
push
movsb
or
fldl
xor
stos
aas
in
mov
mov
jl
out
mov
imul
cli
xor
pop
pop
imul
aas
push
in
jge
out
mov
sub
adc
ret
push
cmpsl
xchg
push
and
fstl
dec
fstpt
sub
push
lods
ljmp
lcall
and
stos
pop
adc
cmp
outsb
lods
mov
inc
scas
jne
mov
rorl
jg
and
dec
jne
fnsave
pop
xchg
mov
rclb
dec
movsb
or
mov
loope
rol
mov
ds
cmpsb
dec
shlb
or
cli
rcrl
jae
xchg
mov
xor
mov
cld
or
xchg
dec
push
clc
mov
fcomip
lods
cmpsl
movsl
ret
inc
es
lahf
dec
push
mov
push
imul
insl
mov
mov
mulb
mov
dec
aas
fldt
mov
cwtl
popa
and
xchg
call
subl
imul
bnd
inc
das
mov
rolb
dec
scas
cmp
dec
pop
loopne
cmp
in
stc
rcrl
adc
ds
mov
sub
cli
pop
scas
adc
and
andl
mov
jae
and
test
mov
mov
sub
in
cmp
icebp
in
sahf
mov
cwtl
xchg
xor
push
mov
lods
push
and
fnstenv
and
xor
test
out
aad
dec
cmp
int
inc
adc
stc
data16
jl
cmp
popa
jecxz
loopne
bound
data16
or
mov
jb
or
call
jmp
call
dec
mov
and
mov
sbb
lods
mov
pop
popf
clc
gs
cmpb
fcoms
ret
repz
lea
mov
jle
jl
pop
and
fcmovnu
fnstsw
mov
sbb
ret
cmp
loop
push
xor
loopne
push
hlt
cli
stc
xchg
inc
sbb
jns
xchg
xchg
mov
vmwrite
fildll
out
adc
xchg
fiadds
sbb
jp
movsb
outsl
ret
inc
cmp
shlb
lods
jo
clc
ret
mov
mov
enter
mov
pop
stos
mov
or
push
dec
adcl
out
sub
and
xlat
dec
adc
ljmp
out
dec
loop
mov
lods
repnz
cmp
sub
dec
lds
add
hlt
addr16
fsts
call
cmp
pop
xor
insl
cmp
mov
shlb
inc
mov
aam
mov
test
inc
popf
je
loop
dec
push
add
xor
mov
into
mov
lock
dec
lret
mov
enter
test
xlat
bndldx
roll
xchg
mov
pop
movsb
cmp
xor
inc
lods
fs
sbb
leave
dec
out
into
rorb
mov
xchg
cli
add
es
shrl
pushl
aam
push
fstl
push
mov
mov
mov
cmpsb
push
test
adc
aad
mov
ds
lret
daa
jl
dec
mov
in
xchg
add
xorl
sti
sub
nop
and
inc
fcmovbe
sbb
es
out
adc
fdivp
inc
push
in
adc
lahf
jae
and
inc
mov
xor
inc
sub
imul
and
dec
mov
movsb
pop
movsb
xchg
or
adc
pusha
jle
push
fwait
in
jae
adc
or
pushf
iret
lock
cmp
xchg
jnp
aam
push
insl
test
movsl
xchg
testl
mov
leavew
mov
leave
fstl
outsb
add
nop
push
pop
fwait
mov
iret
cltd
out
shll
pusha
fucom
mov
stos
cmp
cmp
sbb
lcall
sub
mov
pop
cmp
and
push
mov
add
pop
cmp
pop
hlt
xor
cli
test
mov
cli
or
les
in
js
mov
xor
ss
ret
push
ret
insl
fwait
xchg
adc
cwtl
add
mov
or
into
pop
out
xor
out
dec
mov
lret
push
inc
mov
in
and
sbb
test
sub
sub
scas
inc
xchg
out
xchg
adc
sub
rcr
lock
mov
addr16
sbb
pop
xchg
push
sub
mov
cmpsl
or
pop
bound
inc
into
xor
mov
mov
cmp
xchg
sbb
mov
cmp
insl
sbb
add
bound
loop
push
xchg
outsl
push
and
dec
mov
push
inc
sahf
mov
je
jmp
jne
dec
call
pop
fcompl
jb
or
pushf
sbb
mov
jp
mov
cmpsl
xchg
cltd
in
loop
shlb
fwait
xchg
out
fstps
push
mov
mov
aad
xorl
push
mov
lods
rol
adcb
aas
adc
or
dec
stos
lret
cltd
mov
jecxz
and
dec
ret
cmp
mov
js
test
out
decb
mov
ds
and
mov
mov
fildl
out
shrl
and
push
lds
lods
sti
push
pop
and
mov
mov
jo
loop
pop
dec
inc
gs
test
push
adc
cmpsb
cmp
shlb
jne
push
pop
pop
xor
mov
sub
adc
in
into
mov
inc
mov
scas
sbb
pop
mov
insb
sbb
clc
xchg
pop
or
ret
add
es
rol
jae
sub
mov
sbbb
repz
cmp
xor
loop
rcrb
add
ret
push
out
test
aad
sbb
mov
enter
inc
imul
loope
inc
fs
psubb
dec
pop
popf
iret
adc
mov
xlat
data16
inc
push
dec
pop
fwait
out
and
outsb
xlat
sub
jmp
cli
notl
in
inc
jp
addl
push
xor
mov
xor
pop
dec
mov
vmovq
mov
add
inc
inc
xchg
test
mov
adc
jo
or
das
or
lods
lahf
pop
jns
stc
mov
cmp
aaa
inc
ret
push
mov
scas
jl
push
or
cmp
or
cmpsw
jmp
shl
repnz
jg
out
fucomi
cli
add
fs
stc
aam
xchg
aam
adc
jle
adc
dec
xchg
mov
aas
pop
cli
out
sti
or
ror
xchg
push
gs
out
iret
fsubrs
pop
stos
fiaddl
shrb
divb
cld
or
xchg
enter
xor
cs
lret
test
out
lods
inc
or
push
popa
inc
jl,pt
push
sti
cmpsb
jns
lods
mov
notb
push
adc
aad
repz
bound
lds
stos
jp
xchg
xchg
ret
fstl
xor
imul
add
fucomip
dec
xchg
into
js
adc
mov
xor
popf
bound
adc
pop
lods
mov
pop
jmp
mov
mov
sarb
mov
xor
xchg
cmpsb
xor
inc
data16
jo
mov
cmp
mov
shll
pop
cld
mov
ljmp
inc
and
call
sbb
in
adc
add
add
push
jb
jl
pop
mov
ret
fcom
dec
lods
or
sarb
inc
ret
jno
mov
in
fdiv
jne
das
xor
jno
sub
cmp
in
push
mov
push
leave
lahf
mov
or
popf
hlt
xchg
sbb
add
jnp
inc
pop
mov
adc
or
cltd
mov
mov
test
push
out
ds
jmp
pop
lcall
les
xorl
or
insb
mov
out
push
xchg
or
mov
loop
movsb
fucomp
cmc
mov
cmp
jge
in
mov
push
sbb
pop
lods
enter
dec
outsl
mov
in
lods
inc
push
pop
sbb
mov
shrb
inc
fcmovne
adc
les
inc
aas
sbbb
xchg
pop
inc
leave
sub
push
sub
jno
mov
mov
lea
ret
inc
fsubrs
mov
adc
stc
mov
fcoms
loop
and
ljmp
loopne
push
mov
jl
xor
sub
nop
ret
or
call
dec
das
std
mov
and
ja
adc
mov
stos
lret
lret
ja
scas
adc
repnz
xchg
aas
xchg
mov
dec
pop
cmp
mov
fmulp
dec
xchg
ss
sarb
cmpsb
fisubs
add
or
sbb
lcall
repz
jb
aas
data16
inc
pop
jp
outsl
or
rorb
jmp
mov
or
xchg
js
xchg
or
pop
and
mov
cmp
mov
pop
leave
or
lock
pop
push
lods
xorb
adc
xchg
mov
pusha
stos
cmpb
xchg
or
push
cmp
aad
into
push
sbb
or
mov
dec
mov
dec
xchg
mov
dec
xor
sbb
stos
insl
fadds
mov
out
jbe
loopne
arpl
ret
sbb
jp
lret
nop
out
jmp
rorb
mov
test
lds
pop
aam
xchg
jecxz
sbb
mov
mov
mov
add
les
pop
mov
inc
and
out
into
enter
pop
mov
pushw
xchg
and
dec
cld
arpl
ret
dec
fisttpll
ficoms
lret
das
or
cmc
aam
jo
movsl
and
dec
jecxz
jo
lds
dec
sub
cld
enter
pop
cmp
adc
in
or
fdivp
pop
fstpl
rcl
fsubr
xchg
lods
jp
pop
mov
sarl
js
pushf
and
pop
scas
inc
sub
mov
popa
es
pop
out
stos
mov
mov
sub
sub
jo
iret
pop
lds
inc
divb
mov
insl
mov
pusha
ret
enter
xlat
hlt
and
push
and
or
fxtract
add
fimull
aaa
cmpsb
sub
xor
shlb
mov
push
roll
shr
movsb
aas
push
shll
lret
jmp
stc
stos
jecxz
adc
lock
out
inc
shlb
rolb
sub
jb
add
jns
out
out
aas
add
clc
fiadds
push
and
mov
pop
mov
sbb
jbe
repz
jle
lea
je
jnp
mull
or
loope
dec
pushf
repz
push
and
mov
dec
outsb
sbb
in
cmp
jmp
add
cltd
mov
movsl
mov
dec
mov
xchg
ficoms
push
shll
or
sub
xor
or
nop
ds
lds
and
ret
subb
xchg
scas
jmp
sbb
sub
stos
add
mov
ds
xchg
pop
fdiv
mov
cmpsb
dec
cmp
ds
pusha
xor
push
cmc
cli
mov
lds
push
fmulp
xor
jle
xlat
xchg
inc
mov
popf
pop
cmp
into
xlat
test
jmp
enter
shr
pop
daa
ret
rep
dec
loop
or
enter
js
dec
lret
jo
xor
pop
daa
adc
xor
addl
fyl2x
jb
adc
repnz
inc
xor
adc
rorl
xorb
dec
dec
mov
sbb
movsb
cwtl
rolb
mov
adc
fcoml
sbb
gs
bound
and
cmpsl
cmp
nop
xorb
pop
add
push
xorb
int
popl
rcrb
sub
popf
je
xchg
sub
gs
mov
xor
push
mov
cmp
data16
xor
in
cmpsl
and
jecxz
and
mov
clc
bound
and
loope
mov
ds
rorl
enter
iret
mov
push
mov
movsb
gs
sti
and
pop
jmp
pop
sti
imul
inc
dec
cmc
mov
pop
and
xchg
cmp
cmpsl
and
jno
xor
rolb
mov
push
or
mov
insb
dec
ljmp
mov
cli
jecxz
jecxz
add
xchg
lahf
rcrb
jl
or
sarb
daa
cmp
mov
push
xor
mov
stos
jge
clc
and
mov
icebp
je
cmp
pop
mov
or
xchg
or
sub
sbbl
int3
jno
loopne
stc
adc
cmp
icebp
fldl
data16
icebp
scas
mov
lret
imull
adc
xchg
push
jne
repz
or
gs
cmpsl
sub
push
das
pop
push
xchg
cmp
adc
test
lahf
dec
flds
inc
repz
inc
and
add
xchg
jne,pn
add
pop
xor
jb
aam
shrl
lret
pop
add
xchg
mov
insb
push
xchg
lock
xchg
add
jb
push
jle
arpl
sbb
xchg
and
xchg
dec
sarb
jle
xor
or
and
out
test
fbld
jno
sbb
jne
sub
add
fists
sub
ficomps
jmp
ja
into
jle
pop
xor
adc
aad
idivb
nop
jnp
jns
and
push
iret
fstps
stos
xchg
mov
mov
stc
push
cmp
cmpsb
mov
mov
sahf
hlt
add
subb
pop
lds
and
jne
lcall
repz
fnstsw
mov
fcmove
rcrl
outsb
jp
inc
mov
inc
movsl
loop
int3
cmc
pop
push
daa
dec
pop
or
cmp
xor
xchg
pop
lock
and
int
dec
insb
sub
jo
das
cmpsl
movsl
repnz
jl
fcmove
adc
inc
push
pop
pop
jl
mov
les
xlat
cmp
insl
rcrb
mov
inc
mov
imulb
xchg
add
and
movsl
popf
aaa
jp
movsl
ret
je
out
cmp
push
mov
jl
cmp
out
and
push
addr16
mov
ja
call
sbb
sbb
xor
dec
dec
repnz
xor
xlat
cld
push
movsl
mov
lahf
dec
scas
jno
pusha
lcall
ja
pop
mov
cmp
into
mov
or
rorl
adc
fwait
sbb
pop
aad
push
pop
mov
es
loop
mov
enter
jmp
jns
leave
pop
sbb
jb
jle
adc
or
and
adc
addb
les
jge,pt
movsb
xchg
cltd
mov
cmp
inc
filds
xor
sbb
push
into
shrb
sbb
ficomps
pop
inc
aaa
push
push
sarl
enter
out
lea
dec
sbb
mov
cmp
bound
int
mov
jl
xchg
adc
js
lock
and
movzwl
rcrb
mov
loop
pop
jle
das
addr16
xor
mov
ret
cmpsl
jmp
jo
jnp
adc
ja
xchg
inc
jnp
ds
pop
lock
push
add
incb
xor
rep
cmp
movsb
sub
add
aad
decl
cmpsb
dec
psubb
dec
dec
add
cmpl
lahf
jl
loop
jmp
cld
mov
push
shl
and
cltd
loope
inc
cld
dec
push
pusha
iret
imul
fadds
push
in
jb
lret
stos
pop
push
outsl
mov
add
movsb
jae
popf
sbb
xor
fldenv
frstor
fcomps
push
push
mov
ss
jmp
sbb
clc
jp
xchg
or
xlat
mov
cs
push
pop
sbb
lods
pushf
xchg
sub
nop
dec
ret
xlat
mov
int
add
std
sarl
and
or
pop
or
or
xchg
cmpsb
adcl
stos
sbb
xchg
mov
cmc
out
cltd
jmp
cmp
xor
xor
cmp
xlat
aaa
test
call
cmove
mov
sbb
sub
add
dec
pop
and
movsb
iret
add
andb
jo
addl
test
imul
lods
or
shlb
dec
insb
adc
add
out
mov
cmp
cmovbe
xlat
xor
or
jno
mov
sbb
adc
enter
sub
bnd
push
aam
jo
inc
xor
mov
sub
rsqrtps
out
jns
pop
mov
enter
jbe
push
fcmovnb
sub
fcomp
popf
pop
jp
jbe
xchg
sbb
jnp
cmpsl
push
add
or
push
inc
mov
rorb
adc
inc
mov
mov
sbb
mov
cli
xchg
iret
les
mov
jne
mov
int
sub
or
out
xchg
and
es
je
cltd
stc
pop
mov
jle
int
mov
jo
cs
subl
sub
ds
repnz
shll
stos
rcrb
repz
and
stc
or
xchg
and
push
test
xor
and
jns
mov
sub
cmp
repnz
cli
pop
xor
pushf
fsts
dec
sub
and
fldl
push
xchg
mov
mov
aam
jmp
sti
dec
and
shrl
xor
or
jnp
jo
clc
or
pop
lret
add
xchg
std
lahf
scas
daa
loopne
outsl
pop
pop
cwtl
inc
jge
push
xor
sbb
out
jmp
push
mov
pop
sub
int3
dec
sub
xchg
fistl
pop
ljmp
movsb
repnz
mov
data16
imul
jmp
inc
jg
and
push
call
arpl
cld
add
dec
vandps
test
scas
fisttpll
dec
pop
fpatan
mov
pop
scas
or
popf
add
aad
std
mov
xchg
xchg
fmull
mov
loop
jno
push
jbe
fmuls
mov
dec
xor
lcall
add
sbb
push
sti
and
adc
pop
bnd
push
pop
pop
pop
pushf
mov
add
lds
jge
sti
adc
sub
jbe
push
mov
add
mov
mov
jns
cmp
daa
rcr
es
aas
fldenv
push
dec
dec
std
and
push
sub
in
mov
sbb
and
jecxz
xchg
mov
and
mov
pop
mov
lcall
cmp
adcb
scas
sbb
mov
imul
fld1
data16
cli
sub
es
iret
add
in
or
pop
lahf
ds
aad
rcrl
and
push
cmp
cmc
sbb
push
pusha
test
inc
ja
pop
ja
stos
test
jp
dec
adc
cmpsb
shl
adc
stc
pushf
pop
cmc
arpl
sbb
outsl
std
imul
mov
jp
cmp
mov
pusha
out
jns
cli
xchg
std
imul
mov
adc
pushf
pop
scas
popa
and
cmp
xchg
mov
out
push
shll
push
lahf
xor
inc
stos
pop
dec
adc
mov
sub
mov
pop
ret
add
outsb
sbb
inc
std
fcmovne
das
jmp
idivl
push
dec
loopne
cmp
int
dec
add
adc
jge
push
jno
xlat
mov
xchg
jns
adc
cld
je
int3
stos
jmp
outsl
in
dec
sahf
mov
mov
sub
xor
mov
sub
mov
cld
mov
inc
xorl
data16
add
leave
jge
stos
jg
out
mov
push
es
inc
mov
add
xchg
das
xchg
or
cmp
dec
xor
inc
pop
in
mov
sti
xor
or
jns
add
mov
jg
imul
arpl
repz
stc
mov
xorb
mov
add
cs
bound
inc
inc
mov
jb
jp
pop
lret
sub
aaa
arpl
xchg
xchg
cmpsb
ds
inc
ss
ss
jle
mov
inc
test
sub
jp
xchg
jecxz
in
xor
pop
xor
jno
insb
imul
adc
std
jmp
xor
pop
mov
push
fstpt
jmp
iret
mov
pop
and
imul
sbb
sub
jbe
hlt
pop
fdivl
push
mov
mov
cvtps2pd
pop
adc
arpl
cmpb
pop
cmp
aad
int3
lods
pop
sbb
push
add
jno
in
test
ljmp
clc
adc
adc
loopne
sbb
imul
inc
mov
aad
jb
sub
lock
and
jmp
not
aam
push
sbb
aas
ja
mov
cmpsl
pop
cmp
jb
fstpt
repz
imul
xor
aad
cmc
dec
or
fwait
rcl
movsl
pop
call
les
icebp
push
pop
jp
or
test
lods
test
jb
aad
enter
std
mov
into
push
lret
jp
divl
call
xchg
icebp
mov
and
pop
or
aad
in
pusha
ljmp
repz
push
sub
dec
xlat
std
call
dec
lret
mov
xor
sub
outsl
push
xchg
popa
mov
out
fbld
hlt
jne
subb
or
clc
negb
xchg
loope
push
movsb
aas
sub
test
inc
dec
push
in
loopne
jo
decl
push
scas
push
arpl
jge
lods
das
mov
cmpsl
mov
jle
ja
push
lea
jno
mov
sbb
in
out
jbe
pop
pop
pop
mov
cmpsl
sbb
adc
icebp
push
or
mov
fwait
xchg
pusha
dec
lahf
sub
fcoms
xchg
xchg
xadd
mov
xchg
in
add
loope
sbbl
jae
push
imul
nop
scas
sbb
jnp
stc
mov
add
out
mov
outsb
nop
push
arpl
inc
mov
mov
sahf
ds
jnp
xchg
sahf
push
aam
mov
aas
push
mov
jae
push
insb
imull
xchg
jb
mov
mov
shr
rcrb
sbb
mov
jge
and
imul
push
pop
sbb
pop
ret
fnstsw
subl
gs
mov
cmp
xchg
scas
sti
pop
out
jl
dec
sbb
fisubrs
sbb
mov
enter
jmp
cmc
outsl
fcoml
ret
add
aam
divb
mov
inc
pusha
stos
mov
push
jb
jmp
or
mov
jo
jge
jg
xorl
enter
mov
int
hlt
lret
mov
pop
out
pop
jne
repnz
repnz
xchg
add
in
add
out
loop
pop
ret
or
inc
inc
test
ljmp
push
jl
xlat
rol
stos
incb
and
adc
pop
arpl
pusha
popl
cmp
rorl
rorl
imul
loope
nop
lret
adc
adc
pop
inc
out
push
lret
es
out
pop
cmp
or
or
pop
out
pop
jne
fstpl
repz
subl
and
das
inc
sbb
cmp
xor
mov
sbb
mov
inc
sbb
mov
in
jo
or
sub
lahf
sbb
outsl
mov
fsubs
or
mov
clc
xchg
lea
frstor
loop
adc
es
inc
fcomps
pop
sahf
mov
jg
insl
mov
inc
and
mov
and
jns
and
inc
pop
adc
push
ja
sub
aad
loope
ljmp
mov
pop
xchg
push
aaa
mov
jnp
rol
xor
fwait
lods
fs
ljmp
and
cwtl
push
es
icebp
shlb
std
or
movsl
push
push
shlb
add
fsubrl
cmpsl
sub
push
stc
mov
add
xor
jo
jne
cmp
icebp
aam
outsb
mov
lods
sbb
fwait
hlt
movsb
sarl
cmpsl
into
addr16
push
and
push
push
fsubp
mov
roll
jecxz
or
push
in
outsb
jmp
loopne
jmp
dec
xchg
mov
adc
arpl
cmp
cmp
dec
push
sbb
adc
das
lds
sahf
in
lds
ret
pop
fadd
sahf
jo
mov
fcompl
lock
cmp
xor
js
imul
insb
int3
rorb
add
shrl
mov
stos
imul
mov
stos
clc
or
sbb
call
add
mov
pop
fstpt
fs
pop
sub
repz
mov
pop
fstl
fxam
sub
pop
push
mov
mov
mov
push
xor
lock
mov
mov
and
pop
out
je
mov
div
lods
mov
or
inc
decb
loopne
cltd
fistpl
jb
mov
roll
out
xchg
sarb
jnp
mov
adc
mov
jge,pt
imul
and
pop
hlt
xchg
les
lea
cmp
lahf
aas
push
pop
lds
mov
mov
ret
rol
inc
cs
xchg
sti
sbb
add
lcall
adc
inc
or
jl
sub
or
inc
inc
es
mov
mov
xchg
inc
fs
xchg
sub
je
mov
icebp
pop
es
mov
out
pop
xor
sub
pop
pop
and
add
rcrb
push
inc
inc
shl
stc
out
mov
mov
or
jno
add
add
shrl
call
fstp
cmp
cli
leave
cmpsl
pop
cmp
out
fistpll
mov
fidivrl
push
imul
es
stc
or
cmpsl
test
movsl
xor
lods
xor
adc
scas
out
inc
outsl
addr16
mov
mov
cmp
xchg
aaa
repz
insw
fnstsw
out
mov
jl
sub
mov
push
daa
lahf
in
shrl
ds
pop
inc
add
xchg
pop
inc
pop
add
pop
inc
in
add
mov
and
in
call
cmp
jl
jo
jge
sub
fisttpll
cli
pop
pop
js
jns
lods
popa
stos
out
jnp
scas
lods
arpl
adc
cli
and
cmp
enter
fwait
mov
sbb
jle
and
bound
cmpsb
cld
stos
mov
scas
gs
and
xorl
daa
or
sahf
add
int3
imul
ffree
rcrl
fdivl
popa
push
or
testb
add
mov
imul
sbb
outsb
mov
or
out
add
lock
mov
cmp
test
ja
fs
nop
sub
repnz
mov
or
out
decl
sub
jns
mov
je
addl
push
pop
add
rol
movb
pop
int
imul
jmp
xchg
cmpsl
push
jle
pop
sbb
inc
aas
mov
xor
push
jecxz
pop
push
xor
xchg
mov
jl
fdivrp
mov
ljmp
in
adcl
scas
rclb
mov
adc
popa
call
push
pushf
lret
pushf
sbb
mov
cmp
jp
inc
pushf
mov
add
pop
push
jge
push
sub
daa
cmc
mov
xchg
scas
pop
fiadds
mov
out
sub
pop
movsl
out
mov
push
lock
mov
mov
pop
or
cmp
xchg
add
xor
out
repnz
add
push
add
pop
arpl
vmovapd
push
cltd
loopne
dec
add
je
sbb
scas
test
rclb
jmp
test
xor
negb
inc
popa
dec
jne
jecxz
pop
faddl
adc
inc
lock
push
jmp
mov
or
push
sbb
aas
out
popf
push
popa
adc
testb
mov
mov
xor
jns
lsl
pop
and
fwait
in
rclb
cltd
int
mov
lock
xor
mov
xor
jge
pop
jg
mov
fistpll
push
jo
fiadds
loop
mov
jge
sub
mov
xor
out
mov
push
inc
xchg
test
out
pop
loope
and
lds
out
mov
cld
ja
mov
cltd
sbb
fidivl
mov
std
adc
push
pop
xchg
dec
mov
sub
sahf
sbb
jno
jne
pop
popl
inc
leave
xchg
sub
and
loope
loopne
push
cmpl
out
adc
jb
pop
decb
les
into
inc
pop
icebp
jne
xchg
push
xor
leave
test
jecxz
add
pop
jb
cmpsl
sti
inc
out
mov
mov
sbb
cmp
subl
cmp
mov
or
cmp
repz
mov
cld
mov
pmulhw
mov
cmp
enter
mov
or
sahf
mov
inc
cmp
and
in
inc
cli
xchg
repnz
push
cmpsb
add
lret
mov
cmp
not
iret
pop
push
popf
loopne
lret
arpl
roll
push
stos
pop
jbe
push
das
ret
sarb
in
in
push
aam
or
cmpsb
xchg
push
xchg
test
dec
push
out
jae
cmp
jl
or
dec
push
mov
imul
xor
fcmovnb
imul
push
out
xor
lds
adc
repnz
negb
dec
jbe
mov
and
sub
loop
adc
mov
inc
notl
in
push
cmp
add
xchg
mov
int
push
loope
cwtl
jno
ds
sbb
push
push
arpl
imul
jg
jp
stc
loope
sti
test
into
icebp
jge
insl
lods
cltd
out
and
cmp
push
xorl
push
xchg
sar
leave
cs
inc
jne
fwait
or
mov
rcr
cmp
call
adc
adc
push
jnp
push
cli
mov
xor
fwait
mov
rcrb
pop
cmp
cltd
addl
adc
jb
cs
or
clc
lds
in
cmp
idiv
jbe
movsw
or
test
dec
insb
inc
negl
adc
stos
add
seta
or
cmp
test
mov
dec
fnstenv
xor
ret
push
in
jae
jmp
addr16
dec
js
stos
out
lret
add
ss
lahf
mov
loopne
out
jb
ds
dec
ljmp
fcoms
jnp
mov
popa
xor
insl
les
insb
shl
mov
mov
mov
int3
insb
aas
mov
imul
movsb
or
insl
insb
cwtl
ret
ret
movsb
jmp
xor
pop
push
scas
jl
mov
test
or
or
dec
cmp
ficoml
ljmp
sub
fucomip
sysenter
aas
movsl
movsl
or
cmp
sbb
ss
or
mov
fildll
jne
pop
mov
movsb
xchg
pushf
pop
lock
sbb
and
lahf
push
shll
mov
cmpsb
lcall
adcl
pop
pop
cwtl
loopne
mov
cmpsb
xchg
mov
fisubs
fcomps
add
push
fstps
popf
cmpsb
xor
ss
fiadds
lods
pushf
int
lret
or
or
addb
adc
mov
int
imul
xchg
dec
mov
fistpl
push
shlb
int3
fistl
ds
xchg
jbe
add
loopne
mov
cmpsl
xchg
mov
int3
pop
and
jecxz
out
sub
hlt
mov
stc
test
cltd
das
dec
xor
mov
fistpll
and
sbb
mov
sbb
scas
test
mov
mov
mov
push
dec
cli
add
inc
add
mov
imul
insb
sbb
and
xchg
lahf
xlat
sub
aam
lds
inc
dec
push
repz
adc
xor
je
sbb
aaa
adc
dec
ret
push
jne
push
dec
mov
shrl
adc
xchg
jge
dec
addb
bound
sub
ljmp
dec
mov
lods
pop
push
mov
clc
inc
aam
mul
fwait
pop
adc
jge
cmp
jns
shrl
dec
jo
jle
shrl
xor
je
movsl
cmp
mov
cld
fwait
loop
mov
ret
adc
hlt
sub
test
add
out
test
jmp
mov
stos
or
pop
push
pop
in
dec
mov
mov
jb
mov
sahf
mov
orb
xchg
or
aam
scas
mov
mov
or
movsl
cmp
test
cld
mov
jbe
aad
repz
jno
jmp
mov
mov
or
aam
scas
sbb
and
iret
mov
int
push
push
mov
loopne
popa
dec
in
gs
mov
adcl
hlt
cmp
add
jg
sti
repnz
fdivl
jo
inc
xorl
mov
xor
movsb
inc
lahf
push
lret
add
mov
sub
pop
mov
jl
sti
cmp
rcl
enter
fmul
popf
fidivrs
incb
mov
add
and
mov
push
neg
jnp
shlb
iret
nop
mov
fdivr
xor
cmpsb
push
xor
call
movb
pop
dec
mov
xchg
out
shll
xchg
inc
jo
xchg
outsb
fsubl
inc
iret
cmp
fdivrl
mov
repz
ljmp
xchg
ss
lcall
pop
xchg
fdivrp
mov
add
push
push
xor
stos
dec
cs
les
das
mov
cmp
cmpsl
xchg
mov
stos
jecxz
adc
mov
jg
xchg
mov
ret
dec
les
mov
pop
jns
pop
mov
push
out
out
movsb
pusha
mov
push
sub
sahf
inc
add
jmp
xchg
cmp
cmp
cmp
popf
jo
roll
push
xor
jmp
stc
into
ret
ret
aam
jg
add
dec
sub
loope
das
fdivrl
push
js
mov
mov
cs
mov
popf
or
xchg
inc
fists
in
cmp
lea
std
push
test
loopne
push
mov
mov
fisubrs
das
in
popa
js
test
adcb
fs
pop
popl
mov
add
cmp
adc
jle
fidivrl
jle
mov
xor
pop
lds
cmp
mov
imull
xchg
mov
mov
sub
test
fs
xchg
cmp
insb
mov
sbb
sbb
fstl
loope
xor
fisttpll
jp
popa
sub
xchg
movl
in
cmovae
xchg
jae
loopne
mov
sbb
ss
sarb
popa
jge
mov
sahf
lock
repz
mov
push
dec
adc
push
inc
repz
popa
mov
sbb
leave
cmp
xor
mov
push
sub
ja
sub
dec
push
loope
cltd
inc
mov
jb
push
sbb
cmp
insb
inc
insl
pop
ret
cwtl
dec
jae
jle
aaa
mov
lret
inc
inc
ss
jo
sbbl
cwtl
jne
fs
shrb
xor
iret
or
add
xor
flds
pop
cwtl
or
cltd
cmc
sbb
insb
lcall
bound
add
lods
inc
mov
shll
test
push
dec
mov
sub
sti
sbb
sub
pop
movsl
int
push
push
dec
cmp
lods
add
xchg
ljmp
push
jecxz
nop
fcomps
jle
pop
dec
lea
or
inc
xchg
shrl
outsb
cli
sbb
movsb
jg
xlat
and
push
push
shl
shrl
mov
dec
sahf
mov
call
xchg
or
xor
divl
sahf
lret
les
xor
leave
rcrl
inc
ror
in
fwait
scas
jge
subl
dec
mov
in
subl
cmp
xor
out
cmp
xor
dec
push
or
push
ja
pop
outsl
xchg
cli
add
cmp
push
mov
enter
mov
cmpsb
mov
call
mov
cmpsb
shll
cmp
aad
imul
insb
mov
pushf
popf
cmpb
imul
mov
mov
inc
push
addr16
fsubrs
xchg
xor
pop
inc
xor
xchg
mov
rclb
jmp
lods
sbb
push
add
lcall
or
mov
xorb
subb
xchg
pop
ss
dec
xchg
daa
xchg
adc
flds
sub
int
cli
in
das
and
fmulp
jne
push
add
jno
ss
mov
cli
rorl
scas
add
aad
mov
push
mov
xchg
pop
dec
imul
outsl
xchg
bound
lea
decl
sbb
jno
lds
jae
out
mov
sti
popf
outsl
inc
sbb
sbb
xor
mov
test
adc
xlat
and
inc
mov
repz
loop
and
sahf
cmp
incb
push
sbb
stc
rorl
call
je
imul
das
jnp
das
lea
jno
dec
pop
aam
dec
test
xor
jecxz
or
bound
adc
aaa
movsl
mov
cmpsb
cmpsl
fwait
push
lahf
sahf
in
dec
dec
sbb
push
cmp
enter
xor
jge
mov
arpl
xchg
jno
mov
push
push
ja
adc
lods
lea
push
negl
js
je
mov
adc
call
nop
lds
cmp
fcompl
cmpsl
repnz
pop
cli
adc
mov
dec
stos
inc
push
outsb
xchg
or
lcall
adc
in
repnz
scas
add
arpl
dec
mov
lret
cmpsl
xchg
xchg
adc
pusha
cmc
dec
sub
movsb
jmp
fwait
push
lock
ss
sbb
jo
negb
mov
add
xchg
in
jne
mov
push
rolb
cmpsb
adc
and
outsb
daa
cli
xor
stc
sbb
pusha
pop
popf
pop
mov
shll
js
notb
cmpsb
jae
icebp
pushf
jnp
sbb
mov
mov
mov
push
in
mov
test
mov
push
mov
fldl
cmc
aad
xor
pop
insb
push
add
mov
lahf
push
mov
fwait
add
in
fwait
scas
ljmp
dec
fwait
adc
in
xor
sbb
xor
or
mov
cmp
das
cmp
jl
cmc
fsubs
xor
sbb
xchg
sbb
jl
rclb
lods
pop
add
cmp
dec
imul
aam
mov
movsl
cltd
into
dec
mov
sarl
xor
scas
push
mov
adc
aas
test
mov
and
add
push
into
fwait
mov
cli
cs
test
lret
sarb
nop
shlb
lds
pop
stos
sub
repnz
xchg
int
adc
dec
sub
xor
repz
repnz
sbb
movb
repz
or
inc
lea
or
sub
lret
fsubrl
mov
insb
jl
loope,pt
xor
mov
mov
cwtl
mov
ljmp
pop
mov
cmp
lcall
cwtl
outsl
mov
cltd
jo
xchg
movsb
inc
aaa
loop
rorl
ret
call
nop
test
sbb
push
push
sets
jp
sbb
push
arpl
jns
clc
insl
adc
outsl
pop
or
push
add
lret
jecxz
xlat
xchg
push
push
ja
mov
jg
and
nop
sub
int
mov
push
fnstenv
cmp
inc
iret
and
sbb
or
lock
sbb
dec
fucomp
in
clc
dec
stos
pop
jle
add
mov
nop
xchg
hlt
lods
xor
jo
je
mov
ret
data16
jno
push
mov
or
pop
dec
in
cld
sub
sub
decb
subl
inc
mov
enterw
mov
insb
in
mov
inc
lock
pop
push
test
bswap
pop
aaa
xor
jns
aas
jo
mov
incl
stc
cmp
dec
lret
xchg
sbb
imull
into
xor
add
sbb
xor
ret
nop
sbb
sarl
idivl
jmp
popf
and
xchg
and
shl
add
pop
sbb
repnz
ds
in
aas
jmp
jmp
mov
jnp
mov
wbinvd
adc
aas
dec
sub
ret
popf
and
ficoms
mov
repz
sarb
xchg
sbbl
xor
jmp
jle
movsl
push
mov
add
push
mov
sub
mov
lret
or
popf
sbb
sti
xchg
lret
clc
jge
mov
lds
in
mov
pop
sub
cld
sub
pop
xchg
nop
stos
xlat
mov
xchg
cli
nop
mulb
arpl
pop
mov
imul
cmp
add
cmpsl
shlb
out
pusha
fs
lock
sbb
clc
xor
add
fdivs
jo
mov
in
jne
adc
imulb
mov
cwtl
js
push
sub
push
inc
mov
mov
xchg
jo
lret
inc
fldcw
into
or
or
and
add
sbb
push
repnz
orb
test
mov
sub
fwait
sub
test
idivb
xchg
sub
mov
je
shll
repz
jo
movsb
cmp
mov
pop
or
push
stos
lock
testl
mov
push
ja
or
movsbl
dec
fists
or
mov
call
loope
sub
add
push
inc
xchg
jbe
test
movb
inc
add
fcmovnbe
xchg
inc
adc
jbe
mov
pushaw
outsb
inc
pop
mov
stos
jae
adc
mov
in
lahf
pop
xchg
into
mov
push
mov
dec
dec
cmp
imul
push
movsb
push
cmp
mov
sahf
int3
sbb
in
pusha
test
xchg
jp
mov
sub
xlat
push
das
fstpl
sbb
inc
ja
xlat
iret
mov
das
jb
fdivrs
xor
repnz
xchg
inc
scas
sub
mov
mov
leave
lock
push
mov
aas
jae
mov
rcrl
fadds
mov
inc
loopne
ja
daa
out
int3
scas
insb
lcall
push
cmc
int3
adc
xchg
cwtl
adc
aam
mov
mov
mov
inc
xchg
js
lret
or
xor
lahf
pop
ss
cmp
lret
cmp
lods
and
mov
and
inc
lods
add
push
jae
ret
sti
iret
arpl
xchg
mov
out
stos
imul
push
pop
in
rolb
scas
jp
cmp
inc
andl
movsl
lret
add
mov
ljmp
clc
scas
stos
push
pop
in
mov
sbb
sub
sub
cmp
inc
jo
idivb
adc
cmpsb
lock
nop
sub
or
xor
movsb
add
mov
mov
cwtl
jg
leave
lcall
mov
stos
jne
icebp
stos
sub
adc
lea
push
aas
sub
dec
push
and
xor
jecxz
and
shrb
push
adc
mov
movsb
mov
jns
xchg
mov
mov
sub
loopne
adc
sarl
xchg
mov
add
add
jb
sub
push
iret
jg
mov
mov
push
leave
xchg
pop
aam
in
lock
imulb
dec
jmp
jae
mov
push
adc
jmp
lock
adc
lds
xchg
push
pop
lcall
movsb
int3
je
jne
jp
fisttpll
dec
cld
mov
fnsave
enter
sbb
xor
mov
sub
sahf
orb
subl
mov
adc
sbb
mov
hlt
cwtl
dec
jo
addl
shll
push
sbb
jg
push
or
pop
mov
push
xchg
add
jno
fisubl
cmp
jnp
lahf
jae
inc
pop
sub
adc
in
iret
jmp
cmp
xor
mov
pop
int
mov
mov
mov
sbb
ljmp
xor
push
add
inc
stos
push
mov
repz
test
lock
fstpl
lods
repnz
rorl
push
cmp
pop
mov
jecxz
out
test
jge
sbb
jnp
decb
test
xor
fwait
pop
arpl
xchg
push
adc
push
sti
sbb
in
stos
js
add
or
lahf
sbb
xchg
orl
stos
jbe
inc
out
test
scas
sahf
cmpb
add
xor
in
add
sub
in
ja
mov
and
mov
fsubp
into
insb
xchg
cmp
sub
xor
mov
and
rorb
repz
std
xor
mov
pop
mov
xchg
mov
fdivrl
or
int
mov
cmpb
cmp
jp
mov
pop
jnp
cmpsb
xor
enter
shll
mov
xchg
loopne
mov
lret
jmp
push
and
fwait
notb
and
sbb
push
fwait
xor
jo
les
mov
aas
mov
lock
adc
loopne
out
enter
pop
inc
iret
adcl
je
mov
fmull
cmp
in
call
sbb
inc
sub
sub
aas
in
sahf
daa
cmc
or
pop
mov
pop
pop
dec
mov
adc
and
inc
int
out
mov
sub
inc
rcr
fidivs
and
fsubl
rclb
aam
bnd
ds
pop
sbb
xchg
push
fadds
negl
testl
lret
push
dec
rorl
stos
mov
xchg
loope
pusha
out
jo
aaa
stos
jmp
dec
mov
stos
out
add
test
push
jg
inc
call
mov
jno
push
mov
xor
jnp
mov
pop
adc
push
loop
xor
adc
cmpsb
mov
daa
sub
dec
js
cmp
aam
xchg
fstpt
mov
pop
mov
adc
add
lock
fxch
cmc
cmp
xchg
outsl
dec
mul
xor
and
xchg
add
insl
inc
and
out
pusha
cmpsb
incb
mov
or
dec
inc
call
daa
jns
out
stos
test
mov
cs
pop
dec
fldl
dec
xchg
push
xchg
add
adc
lcall
bound
pop
clc
in
and
bound
into
or
int
inc
jp
add
in
lret
testl
jnp
fwait
inc
cmpsl
out
ds
test
js
imul
pop
inc
cld
mov
pop
push
xchg
inc
pop
cmp
test
push
jmp
jb
adc
in
add
cltd
outsb
hlt
fldcw
pop
pop
lret
xor
mov
push
push
sbb
dec
pop
sub
xchg
cmp
popf
inc
push
xchg
dec
outsl
fldcw
mov
jb
mov
push
and
sub
xchg
cmc
cmpsl
imul
mov
adc
push
lret
push
mov
les
je
ja
js
mov
ret
nop
pop
xchg
sub
popa
dec
fdivl
test
out
xorl
sbb
nop
xor
dec
scas
lods
push
mov
mov
mov
test
popa
xchg
and
gs
fldenv
mov
movl
mov
jns
cwtl
call
fsubp
test
jmp
ja
ds
xor
iret
enter
subb
and
xor
sbb
stos
inc
mov
adc
inc
xchg
jg
xor
pop
int3
mov
mov
and
stc
pop
sub
clc
push
fistl
adc
sbb
js
mov
push
shlb
es
dec
out
mov
adc
pushf
clc
dec
mov
enter
or
mov
outsl
push
out
pushf
pop
lgs
sub
enter
add
icebp
push
sbb
stc
or
dec
jg
pop
fisttps
sub
xor
xor
inc
loope
cmp
mov
sbb
and
and
push
push
jbe
jmp
push
cmpsb
pop
jbe
notl
sbb
dec
aas
insb
pop
lea
fcmovnu
outsl
in
shll
hlt
push
mov
inc
aam
jle
clc
mov
es
mov
cmpl
dec
jae
xchg
test
push
sbb
mov
in
outsl
and
xor
push
jne
inc
jecxz
jb,pn
int3
xchg
mov
pop
dec
sti
imul
inc
cmc
mov
cltd
lcall
scas
mov
jecxz
idivb
mov
dec
push
das
jl
mov
fnstsw
pop
insb
in
nop
decb
insl
xor
xchg
xchg
adc
mulb
push
dec
movsl
dec
mov
std
mov
xchg
cmc
cmp
jno
dec
arpl
jecxz
and
jg
xchg
mov
cmp
ljmp
fcmovu
dec
pop
push
decl
pop
mov
jbe
xor
push
add
movsb
pop
mov
rorl
mov
adc
mov
gs
stos
mov
imul
pop
in
stos
ljmp
pushf
xor
jb
scas
xor
or
jns
dec
mov
mov
inc
cmpb
mov
inc
mov
dec
xchg
fisubs
fidivs
cmp
inc
xor
dec
popf
dec
andl
mov
add
loope
pop
or
lods
loope
jo
pop
xor
repnz
and
jecxz
mov
pop
inc
pop
arpl
pop
fs
mov
repz
iret
mov
idivb
and
add
adc
xchg
adc
push
jns
imul
in
movsb
dec
int3
ret
and
sbb
fisttpll
push
cli
addr16
in
push
js
xchg
pop
cmp
cmp
dec
test
fidivs
loop
les
insb
cwtl
mov
xor
mov
xchg
xchg
or
cltd
loopne
sub
in
jle
dec
imul
dec
xchg
jp
jmp
mov
push
mov
rcr
repnz
loopne
mov
mov
outsb
cld
leave
sbb
push
sbb
xchg
jg
inc
sbb
adc
pop
mov
and
sbb
jl
mov
inc
out
sub
sub
jle
adc
pop
mov
cmpl
mov
cmp
dec
push
cmp
xor
sub
jle
lea
mov
cmp
fsts
inc
in
sub
cmp
aad
push
daa
push
test
adc
push
dec
cmp
pop
jnp
pop
jmp
mov
scas
mov
jae
into
pop
test
dec
aas
mov
push
push
cmp
jno
ds
sub
rcrb
jl
addl
or
repz
mov
fisubrl
aad
push
and
lret
inc
inc
daa
jge
nop
mov
adc
pop
adc
and
push
sbb
int
jne
push
out
push
repz
cmp
int3
pxor
pop
inc
inc
jg
fs
or
test
fbstp
xor
fsubrs
jb
add
adc
mov
shlb
je
mov
xchg
mov
or
arpl
inc
xor
testl
shll
fbld
insb
pop
push
pop
idivl
inc
pop
js
adc
add
jmp
or
jnp
sbb
adc
xor
xchg
xchg
mov
add
push
fstl
jbe
sti
negl
or
jno
addr16
pop
add
mov
sub
imul
and
jmp
push
push
in
xor
sub
bound
jmp
pop
sbb
aam
testl
sbb
jne
test
add
pop
es
test
loope
adc
test
movsb
push
rclb
or
adc
xchg
jns
mov
scas
fs
ss
inc
insb
mov
lock
push
mov
push
test
jecxz
pop
mov
xchg
pop
dec
jne
lods
clc
cli
jb
push
cmp
mov
xor
adc
rcll
lcall
lahf
and
ret
aas
in
mov
adc
gs
jns
cmp
out
sbb
cmp
in
into
imul
icebp
xchg
pop
push
adc
mov
lods
aaa
lock
jecxz
movsl
sub
mov
push
mov
sahf
js
cmp
shll
lcall
js
je
cmpsl
jecxz
jg
das
or
shrb
lret
fldl
out
mov
sbb
lret
jp
mov
fnstsw
cmpsb
mov
cld
aam
clc
lahf
xor
push
and
in
push
xchg
fnsave
add
scas
sahf
push
cmovne
sahf
push
leave
gs
push
and
inc
lea
jecxz
in
std
mov
gs
imul
xorb
imul
out
adc
pop
mov
and
fs
lock
mov
movsl
lods
push
cmp
lds
pusha
cmp
sbb
pop
icebp
inc
jno
jmp
inc
lahf
cmp
and
push
xchg
push
pop
ljmp
test
xchg
adc
stos
sbb
jle
mov
clc
pop
mov
pop
mov
daa
add
mov
rcl
cmp
sub
sbb
and
in
out
js
adc
aaa
jbe
insb
pop
mov
and
xchg
mov
jl
cltd
lea
insb
ja
and
das
mov
jo
icebp
or
mov
mov
clc
pop
inc
mov
rcrl
sbb
jno
je
pop
add
or
and
dec
divb
adc
loopne
aaa
cmp
pop
mov
push
ljmp
dec
fucomip
std
lcall
cmpsl
js
rcl
mov
cli
in
rcll
outsl
fsubs
adc
push
loope
mov
adc
add
cmpsb
jge
and
mov
mov
add
dec
cmp
xchg
push
adcl
mov
adc
fisubrl
cwtl
cltd
inc
push
shlb
xor
jnp
popl
lods
or
push
jl
or
aad
in
push
dec
test
repz
push
or
dec
xchg
fbld
inc
popa
ja
dec
jg
gs
inc
pushf
mov
sub
mov
cmp
std
jb
daa
jecxz
cmpb
leave
fisubl
xlat
popa
dec
cmc
shl
mov
and
fistl
loope
xchg
sahf
mov
pusha
inc
add
notb
sub
sbb
jmp
scas
pusha
mov
xor
jl
inc
mov
in
cwtl
mov
xor
rorb
in
loop
jae
pop
add
fbld
movsb
int
add
inc
push
into
pop
andl
sahf
jne
add
xor
pop
pop
fcmovnbe
fcompl
lods
ret
lret
push
add
pop
inc
jne
jmp
cli
out
lahf
dec
int
add
insl
xchg
inc
xchg
ret
rcl
adc
dec
sub
sbb
ror
push
pop
push
out
mov
sub
cmp
cmp
add
mov
cmp
movsb
push
and
arpl
lret
sub
fstl
mov
stos
sub
and
dec
fwait
adc
push
xor
xor
jno,pt
push
imul
negb
popa
dec
aaa
ficoms
addb
jnp
aaa
push
loop
xchg
je
push
loopne
pop
xchg
add
ljmp
clc
mov
pop
cmp
jg
test
cmpsl
loope
aad
scas
mov
cmp
mov
cmp
push
inc
pop
cld
pop
mov
scas
sti
add
repz
mov
icebp
addr16
pusha
or
mov
stc
and
fdivl
js
add
lods
sbb
pop
jmp
xor
pop
stos
and
jmp
push
ljmp
daa
call
es
call
jb
das
test
jmp
cmp
std
shr
clc
fmulp
xchg
rclb
jnp
in
xor
push
pop
shrl
rcll
add
push
or
dec
xlat
pop
je
lds
ret
shlb
movsl
jbe
roll
fldl
sti
adc
movsl
clc
xchg
adc
dec
xor
mov
dec
imul
in
mov
push
loopne
pop
fwait
arpl
dec
cld
jbe
xchg
jbe
and
dec
fists
and
int
push
cltd
mov
sub
xor
pop
dec
xchg
lock
mov
mov
jecxz
sbb
out
pop
lods
in
inc
sahf
xchg
mov
jbe
lcall
sbb
stc
or
sbb
mov
and
dec
data16
aaa
sub
push
jmp
xchg
lods
aas
out
sbb
shll
jecxz
je
mov
cmp
adc
sbb
fldl
xor
pop
mov
sbb
push
xor
cmpsl
mov
push
es
inc
jmp
push
sbb
xor
jecxz
repz
inc
cld
or
add
aam
mov
push
jecxz
mov
xchg
ret
nop
ret
inc
mov
mov
adc
jmp
cmc
inc
lea
das
add
incb
dec
push
imul
inc
test
cmpsl
push
adc
rcrl
imulb
xchg
jns
cmpsb
push
mov
xchg
mov
adc
pop
jecxz
lret
stos
fs
adc
or
scas
push
shl
mov
jns
outsb
cld
nop
fimull
int
cld
rorl
push
xchg
mov
mov
mov
cmp
int3
subl
inc
xchg
mov
imul
out
out
lds
cwtl
mov
mov
repnz
and
xor
aad
and
dec
dec
mov
arpl
inc
iret
and
add
jb
xchg
ss
mov
gs
es
fldenv
loopne
adc
push
inc
insl
mov
mov
imul
js
dec
inc
stos
lods
out
hlt
mov
sbb
and
je
in
jae
fsubrs
out
adc
jge
adcl
sub
test
push
psubsw
adc
out
cmpsb
jg
rcrb
lret
mov
add
ficomps
into
cmpsb
push
pusha
in
push
pop
dec
jns
cmp
fnstcw
push
loopne
insl
or
add
add
sub
sub
vcomisd
dec
fxch
addb
lock
mov
mov
push
bound
jp
xchg
mov
dec
and
cmpsl
enter
out
mov
je
addr16
push
fisubl
add
and
movsl
out
in
sub
dec
arpl
cwtl
sub
shll
scas
xchg
lds
push
jmp
sbb
lahf
stc
sti
jne
je
jp
jo
outsl
stos
jg
addb
hlt
fcoml
add
dec
mul
sub
sbb
pusha
inc
jmp
mov
xor
fidivrl
xor
sbb
cmp
cmpsb
es
push
imul
mov
in
rorl
dec
jo
dec
jecxz
or
dec
hlt
outsb
mov
xor
mov
outsl
imul
sbb
out
fcoml
push
or
pop
sub
pop
in
sub
sbb
fs
dec
and
imul
cmp
icebp
cmpsb
xor
jecxz
fwait
cmp
dec
scas
xchg
xor
mov
scas
dec
addr16
sbb
or
lahf
xchg
mov
or
pop
mov
pop
gs
sahf
imul
xchg
jne
sarb
cwtl
div
loopne
in
addr16
cmp
inc
push
dec
cmpsl
sbb
pusha
cmp
mov
xchg
jae
in
shll
dec
ret
and
xor
jmp
lods
inc
mov
or
sbb
and
inc
mov
push
xor
ret
ss
xchg
sti
and
lods
mov
dec
test
popf
sbb
inc
sub
inc
push
mov
dec
jbe
adc
nop
or
mov
pop
pusha
in
cmc
sbb
dec
dec
insl
mov
mov
fcoml
xlat
sbb
inc
in
js
repnz
adc
xchg
xor
sub
lods
cmp
movb
imul
mov
pusha
aaa
mov
dec
jne
mov
mov
mov
pop
xchg
cmp
inc
xor
xchg
pushf
test
mov
lahf
ret
pop
int3
sahf
lahf
es
mov
int
sub
sbb
adc
imulb
cmpsb
lods
lcall
jo
push
les
adc
in
mov
shll
outsl
cmp
loopne
sub
xchg
loopne
push
loope
add
aaa
and
scas
out
mov
mov
xor
push
jnp
daa
inc
jmp
scas
dec
xor
jg
mov
aam
and
test
pop
inc
jl
sub
leave
test
test
jns
sbb
int
lahf
mov
aaa
cwtl
push
add
leave
fmull
aas
dec
in
jno
mov
jns
fsts
xor
sahf
fidivrs
add
jge
cltd
leave
loope
mov
and
testb
mov
push
bound
ljmp
xchg
scas
cmp
dec
lds
in
cmp
jns
daa
mov
pop
sbb
lods
aas
arpl
sbb
pop
stos
dec
cmp
or
mov
cld
sti
out
jns
test
mov
push
mov
addl
stc
or
inc
shlb
mov
ror
cld
push
adc
push
sub
pop
jp
jmp
pop
xchg
mov
stc
out
in
aaa
or
das
inc
test
cld
je
jle
sub
xchg
jae
dec
lcall
in
stos
pop
cmp
lea
mov
push
pop
dec
repz
pusha
xchg
out
xor
sahf
insl
jmp
jge
cmpb
aaa
shlb
outsl
push
dec
ret
pop
arpl
lahf
cmp
ljmp
xor
ljmp
or
pusha
cmp
in
and
xor
xor
rcrl
into
sysret
je
sbb
pop
push
jmp
mov
pop
je
inc
sub
sbb
nop
icebp
fcoml
jmp
rorl
bound
xchg
lret
dec
mov
loopne
ss
jb
and
fwait
es
movsb
jl
scas
lcall
ficoms
daa
les
adc
daa
xlat
icebp
sbb
cld
test
movsl
stos
jne
pushf
push
sahf
lret
stc
lods
inc
es
rclb
leave
push
inc
insl
pop
pop
ljmp
pop
stos
jbe
sub
dec
aam
adc
dec
push
add
sti
fmull
push
insb
sbbb
jns
mov
lea
aam
or
xchg
mov
and
add
mov
inc
lds
pop
fidivrl
js
mov
enter
push
mov
sub
cmp
out
lcall
outsb
arpl
out
cmp
and
mov
lods
fld
fisubrl
mov
xchg
xchg
outsl
and
int
icebp
dec
adc
lea
dec
cltd
in
jmp
inc
pop
movsb
insl
pop
aaa
bound
xor
xor
jg
inc
sub
xchg
outsb
pop
lods
pop
in
dec
push
inc
or
push
xlat
lods
xchg
idivb
pop
cmpl
dec
lcall
sar
sarl
mov
mov
mov
jbe
out
mov
dec
push
lods
fstpt
inc
enter
fldl
mov
dec
fstp
ud0
daa
pop
xchg
or
add
xorl
arpl
dec
sub
xor
ret
cltd
mov
das
dec
movsb
scas
dec
mov
xor
cmp
fwait
in
fs
ljmp
dec
into
xor
stc
sub
mov
or
jge
cmp
push
xchg
inc
push
dec
xchg
mov
aas
ja
rcr
jne
pop
add
pop
push
es
pop
fdivl
jmp
jne
add
out
sub
push
lea
xchg
lahf
leave
mov
fsubrp
lret
popf
addr16
dec
or
lea
loop
fcom
jo
std
or
inc
pop
rcr
cmp
mov
arpl
cli
xchg
sub
sti
popa
inc
leave
outsl
mov
mov
outsl
into
addr16
pop
xlat
pop
sbb
mov
mov
pop
mov
cwtl
imul
mov
add
fiaddl
addr16
xchg
clc
in
mov
sahf
xor
fstps
xor
or
test
pop
outsb
mov
add
test
mov
fistps
ljmp
xchg
push
shrb
pop
push
loope
es
loope
ret
pushf
iret
das
jno
loopne
into
push
mov
fsts
xor
int
nop
sbbb
push
les
pop
lahf
out
out
jno
fsubl
mov
enter
jbe
inc
push
fidivrs
mov
push
cmp
mov
mov
call
insl
mov
sbb
and
mov
xor
adc
test
addr16
shll
call
add
fs
adc
cmp
mov
pop
cmp
mov
imul
test
xlat
mov
sbb
fnstcw
mov
xchg
pop
xchg
lods
mov
cmpsl
js
outsb
and
xchg
inc
loopne
inc
pusha
xchg
cli
jo
rcrb
inc
sbb
mov
pop
sub
stos
aas
imul
gs
leave
pop
inc
fs
cmpsb
ret
or
inc
push
rcrb
cmp
adc
dec
sub
test
push
mov
add
jo
out
jnp
mov
adc
push
and
outsl
push
and
iret
daa
cld
pop
clc
xor
lret
mov
xor
jae
cwtl
pop
and
mov
loopne
cmp
jo
imul
pop
mov
jle
mov
leave
loopne
fwait
pop
dec
xchg
or
mov
iret
cmp
ret
pop
enter
or
out
mov
dec
push
lret
scas
decb
stos
shlb
sarb
sub
iret
hlt
out
dec
mov
cmp
and
inc
inc
mov
addr16
mov
cmovb
mov
xchg
ret
xchg
call
sub
cmp
les
aaa
jns
sti
xchg
xor
pusha
out
sbb
ja
shrb
cmp
sbb
pop
jo
dec
nop
push
sbb
cltd
mov
fnsave
inc
pop
xor
int3
adc
or
mov
je
dec
add
pusha
dec
into
xchg
popa
cmp
setnp
sub
jo
sarl
arpl
sarb
mov
stos
enter
sahf
cwtl
lods
mov
leave
sbb
arpl
sub
inc
cli
pop
lret
hlt
stos
pop
leave
aad
scas
pop
dec
mov
jbe
sub
dec
insl
in
imul
lcall
andl
pusha
and
cmp
inc
jmp
mov
jbe
mov
mov
repnz
clc
test
inc
enter
jns
es
outsb
mov
sahf
cmp
dec
out
push
jno
ficomps
or
ja
xchg
xbegin
adc
mov
xor
mov
inc
pop
pop
or
dec
jns
out
jne
and
sub
push
dec
fisubrs
jge
dec
sbb
jns,pt
int
xor
movsb
fiadds
cmc
les
cmc
lods
lahf
and
call
scas
stos
jg
jno
mov
pop
cmp
lret
fsubrl
out
inc
sbb
cmpsb
je
gs
jecxz
lahf
into
cli
addr16
cltd
jg
mov
and
pop
xor
mov
xchg
outsb
mov
cmp
xchg
add
jns
cmp
aam
cltd
cwtl
jp
popf
mov
and
aas
rcll
push
scas
push
insb
adc
outsb
aam
lcall
add
shll
in
inc
sahf
fsub
or
jge
xor
mov
mov
popf
push
jge
dec
leave
sub
ljmp
cld
ljmp
not
popf
inc
dec
mov
jl
lret
std
add
fstpt
mov
mov
lock
mov
cmp
sub
or
pop
test
lahf
pop
addb
jne
xchg
push
add
mov
aam
and
dec
push
mov
inc
xchg
or
sarb
in
imul
or
xchg
pop
ljmp
sbbl
andb
jp
ja
test
xchg
ja
xchg
repnz
in
xchg
push
sub
and
xchg
fmull
xchg
lock
rclb
aaa
stos
xor
add
scas
and
sahf
inc
cmp
dec
fnstenv
jg
sbb
jp
jns
lret
xor
dec
cmp
test
inc
adc
push
xor
dec
loop
shll
mov
push
jl
cmp
adc
ljmp
jbe
add
pop
outsl
pusha
mov
movsb
cmp
pop
xchg
or
lds
mov
add
cltd
fildl
mov
push
repnz
push
aad
sti
adc
xor
mov
xlat
addr16
test
xchg
sbb
xchg
mov
aad
mov
jp
jbe
enter
repz
sub
and
sahf
sti
xchg
fwait
xor
sbb
pop
loop
mov
test
mov
xchg
xor
jnp
stos
mov
sti
mov
push
lret
pop
data16
add
lret
bound
push
jmp
cmc
pop
cmp
or
jns
and
mov
jle
hlt
ret
jbe
jg
inc
dec
mov
cmpsl
ja
dec
jmp
or
out
shlb
mov
sub
cld
inc
leave
and
pop
sub
adc
mov
pop
xchg
stos
out
pop
jno
outsb
push
fwait
or
imul
jle
jnp
fimuls
fsts
jecxz
ret
jmp
xchg
mov
shl
push
mov
es
sub
outsb
xchg
inc
pop
sti
jl
jne
adc
xor
cwtl
bound
test
pushf
mov
mov
jp
xchg
and
shll
fsubr
push
jmp
mov
lds
sti
in
cli
jmp
imul
imul
fstpt
or
add
cwtl
pop
push
add
mov
cmp
or
push
pop
xchg
mov
fstpl
out
push
outsl
inc
fsubl
lods
or
dec
lods
pop
dec
cmp
std
sahf
inc
loopne
inc
dec
sbb
mov
and
push
pop
hlt
ja
or
xor
sub
shl
adc
cmp
fwait
aam
lcall
jle
or
mov
mov
jne
insl
jo
lock
leave
aam
inc
test
sub
sbb
repz
cmp
ficoml
jp
loope
mov
ljmp
dec
in
lods
stc
bsr
push
lea
aas
push
daa
pop
mov
dec
push
ret
mov
out
ficompl
cmp
mov
xor
add
xchg
jb
clc
hlt
fwait
xchg
cmp
sbb
pop
xchg
popa
idivb
in
pop
add
cmp
loope
icebp
cmp
lock
add
in
ret
and
jmp
inc
inc
lock
sbb
adcl
and
mov
push
fistpll
aas
loop
les
test
inc
add
cwtl
ret
int3
aad
fidivrs
dec
push
xor
mov
lods
or
jne
pop
pop
dec
nop
mov
je
fdivrs
out
test
loop
scas
pop
sbb
and
icebp
mov
fidivrs
cmpsl
ljmp
push
cli
add
jno
mov
cld
xor
sti
inc
push
and
inc
or
or
xor
mov
xorl
xchg
popa
jg
jle
jg
push
add
in
insb
jns
cli
das
sub
sbb
pop
xchg
ja
lret
mov
jecxz
jns
mov
aas
std
add
push
jg
inc
cs
iret
xchg
scas
cwtl
lret
fstl
pop
jp
sub
mov
mov
insb
test
and
out
xchg
mov
jg
or
fwait
pop
int
cmp
scas
insl
pop
xor
fidivs
adc
sti
and
aaa
imul
and
jge
adc
add
adc
adc
dec
fistl
rcll
aad
pushf
aaa
negb
jge
inc
pop
mov
pop
lds
cld
int3
nop
inc
in
cmp
pop
popf
sub
mov
int3
adc
je
jecxz,pt
mov
decl
dec
mov
inc
push
push
ret
imul
dec
push
add
nop
loopne
and
mov
xchg
je
push
mov
lea
or
inc
lret
pop
push
add
mov
rorb
and
and
cmp
std
jo
dec
xor
mov
mov
arpl
push
popa
bound
mov
mov
sbb
in
dec
cwtl
and
sub
out
jo
outsb
xchg
or
insl
pop
roll
mov
subl
cs
jle
pusha
daa
mov
xchg
dec
xor
das
and
test
and
xchg
mov
fidivrl
scas
adc
jl
addr16
movsl
pop
push
push
push
adc
add
sub
clc
xchg
inc
mov
dec
mov
movsb
lret
or
ret
adc
mov
xor
popa
push
mov
inc
lock
jae
xchg
sbb
aas
lea
cmpsl
jbe
popl
dec
jno
mov
xor
jae
cmpsl
inc
adc
out
rcrb
outsl
sub
cmp
cmpsb
loope
xchg
aad
pop
push
shl
popa
fld
clc
stos
daa
pop
addr16
push
jle
addb
frstor
dec
addr16
loopne
mov
out
in
and
adc
insl
out
leave
xchg
cmp
xchg
pop
add
jbe
inc
and
or
addb
ret
mov
cltd
or
inc
sbb
push
xchg
insb
or
imul
stc
mov
pop
mov
jo
sarb
xchg
out
cmp
pop
mov
insl
repnz
sub
jmp
pop
xchg
sbb
test
sub
clc
inc
fbld
aam
loope
pop
add
lret
jg
stc
repnz
lret
iret
mov
jge
shrb
sbb
cli
xor
push
aas
cmp
cmp
xchg
jp
cmp
negb
push
dec
xor
cmp
ljmp
daa
pusha
sub
int3
jns
add
inc
aaa
out
popf
rcrb
hlt
adcl
add
out
mov
cmpl
mov
pop
cmpsb
jg
sbb
push
lods
jb
pop
mov
push
pop
push
jb
stc
mov
les
jne
call
mov
pop
xlat
lods
add
sub
cmp
gs
in
fdecstp
pop
sar
aad
int3
push
xchg
mov
or
lea
lods
iret
xchg
sbb
adc
fldt
mov
push
push
rcr
add
mov
add
xlat
adc
pop
es
xor
sub
push
inc
push
mov
push
cltd
cs
mov
rcr
ljmp
pushf
mov
call
inc
das
pop
sbb
out
subl
out
adc
insl
and
xor
sbb
ljmp
pop
mov
push
pop
xor
mov
cmp
dec
repnz
in
popa
sub
ljmp
lods
dec
dec
push
fildl
push
stc
push
jne
aad
cmp
mov
test
out
push
dec
mov
aad
mov
push
popa
rsqrtps
xor
dec
dec
mov
mov
repz
and
insb
or
inc
sbb
jae
pop
lahf
dec
cmp
pushf
inc
cwtl
js
xchg
cli
sbb
lret
rclb
xchg
pop
out
push
adc
cld
jle
cmpl
sbb
out
in
push
or
lea
int
imul
push
es
mov
out
mov
mov
push
leave
mov
or
sbb
add
mov
mov
cmp
gs
sbb
jl
dec
pop
lods
xor
std
loop
into
cmp
jne
cltd
push
push
mov
icebp
mov
dec
gs
ja
lret
repz
hlt
js
and
pushf
xchg
sub
and
in
mov
lcall
and
lods
sub
push
sub
add
add
test
cmovne
shll
arpl
xor
cmc
inc
and
sub
cli
dec
orl
loope
push
addb
les
loopne
outsl
jae
or
pop
stos
pavgb
lds
mov
pop
push
popa
outsb
dec
testb
xor
jo
test
mov
ret
mov
out
and
in
push
sbb
in
outsb
sti
push
popf
add
or
in
addr16
add
mov
outsl
or
pop
aas
jno
je
mov
lahf
cmp
or
test
inc
fisubl
adc
push
jmp
pop
adc
lods
and
rcrl
cmpsb
mov
das
jae
sarb
ret
push
pop
je
pop
mov
and
mov
xchg
jo
lcall
push
aad
adc
loop
dec
or
bound
pop
mov
daa
push
adc
mov
aaa
aaa
adc
jge
mov
cmp
pop
or
les
xor
jge
push
cmp
push
sbb
bound
rcll
ret
outsl
fnstcw
cltd
inc
lret
mov
lahf
sub
js
mov
xchg
stos
aaa
jp
push
loopne
cmpsl
mov
xchg
jge
imul
mov
or
rcrb
shrl
ljmp
jmp
mov
adc
mov
or
or
scas
out
mov
into
sar
test
movsl
testl
lahf
push
insb
movsl
sbb
mov
and
pop
in
pop
imul
cli
out
mov
adc
mov
add
lret
aad
rorl
inc
ret
ds
dec
out
push
movsb
ret
subl
insl
in
xchg
insl
sub
push
movsb
mov
insl
jno
orb
mov
sub
fimuls
jle
and
movsb
sti
jb
or
ja
dec
sub
or
shr
or
lock
jae
aas
test
stc
fwait
inc
add
pushf
and
cmp
movsb
push
orl
and
xchg
add
or
lret
inc
mov
lret
push
sti
roll
add
sbb
in
add
test
shr
dec
sub
inc
icebp
ret
jns
clc
test
lds
dec
pop
xor
inc
jns
lds
push
and
mov
insl
mov
sbb
mov
mov
mov
call
sbb
sub
and
pop
xlat
int3
loop
push
jmp
js
lods
push
mov
int3
sbb
xchg
or
cltd
sub
clc
jp
repz
or
sbb
push
pusha
cli
add
fwait
jle
jne
jp
out
imul
rcr
lcall
std
fwait
scas
xor
add
enter
pop
inc
xlat
movsb
push
cmp
xor
push
jae
jmp
lods
mov
outsl
mov
sub
or
xor
mov
pop
and
mov
cli
movsl
fimuls
mov
or
add
mov
adc
inc
jno
jnp
push
lahf
or
adc
negb
mov
das
movsl
cmc
mov
dec
fadds
out
lds
out
sub
or
mov
cmp
mov
pop
dec
and
js
mov
adc
inc
dec
jmp
xchg
inc
push
loope
stos
sti
add
mov
rorb
push
pop
pop
iret
iret
cmp
nop
arpl
pop
dec
and
lock
sarl
dec
xchg
mov
sub
push
sub
movsb
adc
cmpsl
sbb
inc
movntq
out
xchg
aad
xchg
xchg
imul
shrb
std
out
lock
xchg
movsl
movsl
push
loop
xor
imul
xor
enter
in
icebp
aam
sbb
adc
xlat
imul
dec
jecxz
mov
inc
lock
rcrl
or
scas
adc
adc
mov
in
dec
pop
andb
lods
fiaddl
roll
mov
test
aam
in
gs
jb
dec
test
and
test
adc
arpl
ja
pop
mov
mov
aas
push
mov
cmp
psrad
inc
leave
mov
les
sub
in
data16
addr16
sbb
mov
les
mov
pop
aam
lcall
jno
repz
sub
enter
cmp
xor
jbe
fstl
xchg
sahf
mov
vmovups
add
dec
std
imulb
out
xor
mov
jl
cmp
and
push
movsl
lcall
adc
lcall
or
add
in
addr16
inc
pop
pop
ficoms
dec
pop
and
cs
iret
push
pop
add
subb
loop
and
xchg
scas
aas
sar
cli
sbb
dec
pop
imul
inc
scas
dec
rolb
or
push
call
dec
sarl
adc
push
jae
jmp
add
add
mov
fdivl
jnp
sbb
and
sarl
ds
cwtl
push
mov
jmp
sub
pop
in
cmp
fs
pop
sub
orl
mov
adc
out
mov
dec
or
bound
shr
aaa
movsl
cld
loope
push
dec
divb
addl
sbb
and
cmpsl
or
jb
sub
insb
rcll
jle
jl
aam
mov
cmp
hlt
adc
stos
fists
add
mov
call
push
inc
dec
popf
mov
nop
xor
push
js
aas
mov
popa
mov
add
pop
shr
push
pop
lds
inc
test
out
sub
cs
cmc
dec
jle
mov
add
cmp
xchg
outsl
add
mov
test
mov
sbb
fldl
sub
jmp
pop
insb
jp
pop
pop
xchg
shll
xchg
mov
dec
mov
or
jne
into
inc
fcmovu
das
out
je
cli
sbb
fwait
sbb
adcb
imul
xchg
and
mov
inc
and
bound
push
nop
add
mov
cmp
sub
xor
fldenv
and
call
mov
in
adc
stc
mov
xlat
outsb
or
cli
cmp
je
clc
js
cmp
icebp
jne
roll
outsl
fs
lea
mov
cltd
add
ds
jo
adc
mov
ret
cmpb
bound
push
rclb
ljmp
mov
ret
lea
jb
sbb
cmpsb
lods
sub
hlt
movsl
out
ds
fidivs
dec
popa
cmp
cmp
pusha
jo
lcall
mov
insl
in
out
sub
dec
cmpb
scas
xchg
pop
dec
dec
ljmp
push
repz
loop
movsl
pushf
xor
popa
cmc
fiadds
sti
inc
sti
dec
lock
mov
mov
sub
mov
and
repnz
lds
mov
jne
pop
pop
stos
cmp
pop
jno
add
or
and
mov
popa
in
test
inc
dec
cltd
xchg
insl
adc
fiadds
cmp
cmp
cwtl
adc
push
cmp
xchg
mov
imul
adc
xor
mov
adc
iret
sub
cs
pop
gs
scas
ss
pusha
cmp
popa
fcmovbe
pop
jns
or
inc
adc
xchg
ret
lods
lock
jmp
cmp
adc
stc
sbb
sub
mov
leave
stos
jmp
popf
inc
push
mov
aaa
cld
lahf
ret
int
out
bound
aam
sbb
xor
add
sar
sbb
testl
dec
enter
push
dec
mov
push
add
shlb
jae
add
add
leave
xchg
jbe
scas
push
dec
jmp
jno
and
dec
imul
push
adc
jae
push
imul
push
xchg
daa
pushf
rdmsr
nop
jae
jno
int3
pop
jb
loope
jae
sub
jge
pop
es
orb
adc
and
and
test
push
xor
adc
loop
in
gs
std
dec
test
xchg
les
mov
jno
push
mov
rol
fstpt
bound
push
repnz
loopne
mov
movsl
xor
xchg
or
mov
pop
lods
icebp
mov
lret
mov
mov
stos
ret
mov
pushl
outsb
fcom
mov
push
dec
test
fs
out
sbb
mov
das
mov
mov
sub
ja
mov
pop
sub
dec
inc
lret
mov
inc
test
mov
clc
out
xchg
leave
loopne
mov
and
sbb
ret
and
pop
xor
and
pop
push
pop
lock
pop
icebp
fistps
enter
and
adc
inc
movsl
mov
jecxz
f2xm1
out
push
cmc
jb
fcmovnu
mov
pop
nop
adc
ror
imul
cs
cmpsl
inc
ljmp
jle
fdivl
or
scas
sbb
mov
mov
and
xor
push
mov
or
outsb
and
sbb
add
lret
xchg
mov
std
sub
cmp
xor
xor
jne
sub
sbb
push
jae
ret
outsb
clc
shr
lcall
mov
or
lods
int
xlat
int3
lock
jle
decb
orb
pop
gs
es
into
mov
jle
push
pushf
loope
inc
ds
or
scas
mov
es
loope
shl
ret
xchg
cwtl
sbb
jno
push
shlb
cmp
dec
jl
sub
add
mov
loope
sahf
test
add
jg
jl
cmpsl
sqrtps
jo
das
mov
or
and
lea
pop
inc
adc
and
cmpsl
sti
adc
xchg
loop
xor
sbb
loopne
pop
stos
mov
sub
jae
loope
xor
insl
or
cmpsl
lods
je
in
sahf
sub
add
jg
cli
lds
out
imul
das
fldenv
insb
ljmp
hlt
in
or
mov
inc
repnz
test
mov
ret
push
leave
inc
push
add
ret
inc
sbb
sub
jb
enter
push
sarb
arpl
aad
insb
aad
and
out
push
add
add
mov
fsubrp
mov
inc
push
fildll
filds
mov
jg
inc
push
test
lcall
dec
cltd
mov
mov
push
xor
sbb
inc
or
ficomps
cs
int3
inc
jb
jno
aas
xorb
hlt
movsb
loope
cmp
xchg
loope
and
mov
clc
cli
scas
dec
bound
dec
test
xor
pop
inc
push
leave
xor
push
icebp
outsb
pop
imul
pop
das
push
push
js
jmp
xchg
xchg
add
gs
loopne
pusha
mov
adc
cmp
rcr
pop
jmp
mov
arpl
arpl
mov
or
dec
inc
mov
ds
inc
loop
sbb
cmp
inc
outsl
and
mov
mov
in
testb
dec
pop
xor
arpl
sbbl
outsl
push
xor
out
xor
jl
in
jnp
lret
addb
inc
popa
mov
xor
cmp
mov
mov
adc
push
xchg
jge
mov
adc
adc
ss
jns
cli
ret
pop
lods
sti
xchg
xor
sub
adc
pusha
aas
jp
cltd
lds
ds
dec
pop
inc
subl
mov
inc
ljmp
and
int
xchg
xchg
push
loop
mov
test
xchg
mov
jge
sarl
jge
in
push
adc
jbe
ret
and
sarb
mov
xchg
xchg
xchg
jno
sti
jle
add
sbb
jne
fsub
gs
jae
stc
inc
out
and
pop
push
es
inc
or
in
out
inc
outsl
cmpsb
aad
sarb
add
mov
mov
pop
test
and
inc
movsb
push
dec
inc
scas
inc
imul
or
ss
andl
lock
jnp
imulb
inc
jle
and
push
jge
jmp
jns
mov
test
pop
pop
rolb
ja
push
dec
mov
pop
xchg
or
out
and
mov
mov
add
and
sub
push
out
jb
cs
dec
adcl
push
dec
mov
jecxz
push
leave
insl
jmp
je
shrb
dec
shlb
sub
sub
loopne
div
jecxz
push
mov
lock
push
push
sbb
add
cmp
das
push
roll
or
lret
sbb
test
jge
ss
push
jp
cltd
pop
flds
mov
ficompl
iret
sub
jne
mov
sub
jo
cmp
test
aas
shrl
cli
pusha
test
lret
adc
movsb
inc
subb
jmp
adc
rcll
loope
repnz
fnstenv
xchg
jecxz
imul
aam
jg
test
and
ficoms
ss
jge
popw
popf
dec
mov
pop
inc
mov
icebp
jae
push
cmpl
imul
shrb
lahf
pop
dec
sub
rcr
shlb
push
push
or
ja
scas
jns
movsl
mov
cmp
loopne
out
xor
pop
adc
arpl
jecxz
cmp
mov
jp
orl
or
das
leave
rcll
int
int3
xchg
fstps
mov
adc
mov
inc
pop
pop
jp
mov
enter
mov
sbb
les
rorl
cmp
ds
xchg
dec
lea
mov
jns
pop
in
jmp
mov
jb
sub
repz
or
lcall
xor
addr16
incb
mov
adc
movsb
inc
pushf
lods
and
lds
push
or
cmc
jae
mov
insb
pop
leave
fnstsw
les
mov
cmpsl
mov
adc
xchg
inc
xor
xchg
sbb
loope
movsl
aas
dec
stc
enter
jnp
sub
add
adc
xor
repz
and
fdivrl
mov
xor
xchg
jl
scas
stos
je
inc
add
mov
into
mov
inc
and
stc
jl
sarb
xchg
mov
mov
rorl
sub
add
mov
cmp
dec
and
lea
flds
dec
add
das
bound
inc
inc
add
xor
push
jnp
sbb
cli
test
sbb
stc
push
je
add
fwait
scas
out
inc
adc
loop
rol
xor
add
ret
pop
aas
clc
aad
fldl
icebp
ss
fisubl
mov
in
jno
jbe
in
lea
mov
test
mov
clc
data16
dec
jle
inc
jns
add
arpl
test
dec
pop
xor
push
cmovp
loopne
bound
insl
jmp
sbb
cmc
enter
mov
lock
loop
test
sbb
out
pop
jo
je
lcall
fs
add
pop
lcall
lret
sbb
cs
leave
pop
outsl
adc
adc
test
cmc
cwtl
add
arpl
aam
ret
loopne
adcl
fwait
mov
inc
jbe
loopne
nop
dec
mov
test
fdivs
cs
adc
aas
xchg
inc
fwait
xor
adc
in
add
sbb
imul
inc
daa
mov
cmp
mov
lahf
scas
in
adc
xchg
loopne
cmp
sub
or
xor
mov
js
mov
ret
test
cmp
sahf
adc
xchg
cmp
lret
pop
imul
lods
fisttpl
js
jb
out
shll
dec
pusha
sub
mov
out
cli
andb
cmp
shlb
adc
push
divl
imul
mov
in
or
push
rcll
or
sbb
sbb
nop
int
mov
xchg
movsb
ret
jecxz
insb
push
adc
mov
xor
cs
push
dec
pusha
js,pt
mov
outsb
popa
inc
xor
in
loop
or
xor
test
ret
jbe
fstpt
mov
fildll
jae
jl
xor
enter
in
rcrb
xchg
inc
inc
out
mov
decl
or
mov
rclb
ret
rcr
lcall
jmp
call
adc
mov
adc
testb
push
xor
or
xchg
xchg
nop
ret
jae
mov
ss
sarb
pop
mov
push
adc
adc
mov
xchg
mov
mov
bound
shlb
sub
cmpsb
daa
ja,pt
jmp
lret
jge
dec
ljmp
xchg
pop
inc
inc
lahf
inc
aaa
and
lea
adc
cmp
push
mov
rcrl
jbe
out
enter
jl
fisubs
in
and
ret
ds
fs
pop
add
mov
cmp
inc
ret
push
ss
insb
jno
or
outsb
jp
jecxz
das
aad
cmp
or
popf
xchg
adc
ss
test
out
add
sub
dec
sub
xor
push
jg
add
sub
shll
and
jecxz
inc
jae
lea
test
cmp
pop
fbld
sbb
push
and
hlt
lock
xchg
dec
jl
adc
aam
push
fimuls
sbb
mov
outsb
and
xor
mov
xor
cld
stc
movsb
push
pop
lea
add
pop
sub
mov
adc
roll
xchg
gs
addr16
test
add
pushf
mov
mov
mov
in
aas
cmpsb
jae
or
into
negb
jg
das
pop
inc
sub
fsubs
xchg
aam
mull
mov
je
out
fsubrl
popa
shl
das
pushf
fwait
adc
rep
mov
cmpsl
xchg
in
jp
outsb
iret
mov
pop
sbb
psubw
andl
cmp
add
mov
mov
les
into
mov
and
mulb
loope
mov
xor
inc
dec
pop
push
mov
inc
aas
adc
sbb
outsl
sub
cmp
loop
lds
xchg
cmp
loope
loop
mov
pop
inc
sar
sbb
xlat
inc
test
arpl
test
testb
fwait
cmp
sti
xor
inc
sti
test
insb
pop
aaa
inc
xchg
jle
pop
push
rcll
loopne
imul
sub
sbb
sti
add
push
imul
xor
dec
add
loope
hlt
sbb
adc
push
test
adc
stc
xor
mov
popf
rcrb
leave
mulb
dec
mov
test
or
jno
in
sbb
daa
scas
subb
dec
adc
ret
jmp
aas
push
lret
adc
lret
jmp
and
push
insl
push
lea
aaa
pop
enter
mov
xchg
ret
aaa
xchg
stos
pop
dec
mov
popa
mov
mov
outsb
and
xor
pop
xor
jnp
xchg
adc
jns
cmp
mov
add
js
notb
xchg
sub
adcb
mov
lds
inc
cmp
jb
dec
stos
lret
shl
or
jecxz
fisttps
adc
stc
push
cmp
rcrb
dec
pusha
aam
in
cli
movsb
imul
pop
iret
xor
xchg
cmpsb
xor
jecxz
inc
xor
mov
dec
push
xchg
sub
std
sti
mov
loopne
loope
cmp
and
inc
jbe
mov
mov
sub
pop
xor
cmp
mov
jp
add
mov
sbbl
cmc
push
mov
adc
loop
lods
jge
je
push
xchg
mov
xor
cltd
or
inc
xchg
mov
fiadds
inc
cwtl
mov
mov
add
imulb
adc
mov
maskmovq
xchg
popf
mov
lods
leave
and
adc
jp
addb
loope
inc
xlat
jnp
fbld
jge
iret
ds
dec
push
pop
lret
pop
fdivl
movsl
sbb
jno
push
std
inc
push
xorb
out
cmc
jo
mov
shll
stc
lret
adc
sbb
jecxz
mov
sti
mov
inc
xchg
lds
push
mov
jle
jp
mov
xchg
insl
repnz
movsl
sub
insl
ss
cld
sti
inc
pop
push
pop
test
mov
sbb
cmp
in
xchg
das
test
addb
mov
hlt
ja
lds
sbb
ret
mov
sbb
in
out
mov
enter
ror
xor
shll
pop
fwait
dec
shlb
and
cwtl
cs
inc
nop
imul
cmp
mov
popf
push
test
jge
adc
push
test
sbbl
jecxz
mov
xchg
data16
decl
fmul
loopne
mov
aam
cld
imul
xor
jge
sbb
dec
rcrb
xchg
cmp
or
cmpsb
fldl
imul
inc
imul
das
leave
insb
mov
scas
jecxz
loopne
int
out
mov
arpl
outsb
leave
xchg
pop
xchg
test
mov
sub
jno
mov
push
shlb
scas
mov
pop
or
dec
sbb
movsb
pop
sub
das
mov
dec
out
pop
roll
add
cmp
ljmp
jl
or
mov
xchg
ds
gs
or
sbb
out
pop
dec
bound
mov
loop
jmp
inc
push
mov
mov
out
inc
push
mov
sub
or
roll
cmpsb
sbb
pop
sub
fnsave
inc
sahf
mov
es
fldt
pop
sub
cmp
ljmp
adc
inc
insl
add
test
and
xlat
addr16
lahf
nop
dec
adc
mov
pop
sbb
mov
pop
xlat
ss
mov
xor
add
push
inc
xchg
outsb
fbstp
push
popa
mov
es
mov
jae
stos
xchg
dec
dec
dec
iret
or
jle
sti
mov
in
jmp
cwtl
ljmp
mov
dec
loopne
adc
push
dec
and
scas
mov
cmp
leave
sar
or
cmpsl
push
ljmp
dec
add
xor
jmp
jnp
call
adc
pusha
cmp
dec
insb
or
mov
cmp
aaa
xor
scas
cmpsb
das
sbb
neg
inc
push
aaa
fstpt
inc
loop
mov
hlt
data16
mov
mov
cmp
cmpsl
gs
inc
jns
inc
fadds
test
pop
push
mov
dec
cwtl
lahf
or
cld
inc
pop
pop
and
mov
jbe
xchg
and
xchg
mov
popa
ja
loope
stc
jbe
test
sbb
insb
or
in
sub
loope
push
sbb
push
hlt
daa
dec
cs
cwtl
fidivrl
or
mov
jg
inc
es
nop
es
rcll
in
add
outsl
add
rol
xchg
cld
adc
mov
pop
arpl
mov
xor
arpl
push
jne
shlb
inc
inc
push
rolb
inc
dec
mov
repnz
mov
lcall
dec
ja
add
push
dec
jns
push
cs
jo
xor
fwait
stos
push
xchg
push
sub
xor
sahf
or
ja
je
sub
repz
xor
add
sbb
xor
and
or
fs
mov
mov
cmp
fcmovnb
cwtd
sti
xorl
cltd
scas
cmp
push
lret
sbb
mov
xor
jns
push
imul
repnz
lahf
movsl
rorl
ret
adc
dec
rorl
fcomi
outsl
inc
mov
aam
les
repz
pop
or
in
jp
in
mov
ror
sbbb
sbb
dec
lahf
sahf
cmp
sti
dec
popa
mov
into
subl
fbld
sti
mov
mov
ljmp
ds
sbb
jle
movsb
fisttps
mov
sub
addr16
add
sbbb
xor
lods
dec
test
insb
ficoml
bnd
rolb
jns
stos
inc
cmpsb
dec
xchg
and
jne
out
fwait
jb
nop
xor
aad
cmpsl
sahf
out
or
out
inc
stos
xor
jge
loop,pt
dec
out
xchg
mov
push
pop
aaa
icebp
in
cmpsb
movsb
push
or
loope
or
mov
movsb
lock
xor
les
xchg
fnsave
aas
leave
pop
mov
cmp
sbb
cs
push
ss
and
mov
int3
dec
in
or
jp
jb
popa
jmp
inc
out
and
adc
xchg
iret
popf
inc
inc
pop
fbld
inc
movsl
jo
scas
jo
inc
popa
xchg
leave
fdivl
enter
ret
pop
not
pop
aam
arpl
push
popf
and
pusha
sar
sbb
pop
rcrl
in
call
fidivs
push
out
or
xor
repnz
xchg
divb
mov
push
mov
insl
fmuls
popf
lcall
data16
xor
or
divb
jle
xchg
xor
test
pop
mov
mov
shlb
daa
adc
lahf
cmc
insl
sbb
call
rcll
xor
jp
movsb
scas
aas
mov
lds
mov
add
ljmp
jecxz
mov
clc
popa
mov
push
mov
out
jbe
mov
xor
dec
xchg
xor
fstpt
les
pop
imul
dec
push
cmpl
cld
clc
rcl
jnp
mov
sub
insb
aaa
fstpt
push
cmp
out
pop
adc
out
shrb
enter
popa
add
xor
xlat
aam
movsl
sub
gs
scas
stos
xor
es
jle
ret
sub
cmp
sub
dec
sarl
adc
es
cmp
dec
sub
lock
bound
cmpsl
insl
or
gs
pop
scas
push
lret
arpl
or
insb
pop
aaa
mov
xchg
xchg
xor
sbb
mov
inc
ds
dec
jg
or
sbb
loope
cmp
sub
mov
adc
les
fs
int3
push
add
add
mov
mov
cmp
inc
popaw
cli
rcll
mov
xorl
fcomi
xor
add
movsb
and
jno,pt
fbld
xchg
inc
pop
jne
sub
fsubrl
in
or
adc
adc
mov
cmpsl
adc
or
or
stos
pop
outsl
xchg
mov
dec
xor
frstor
popf
sbb
mov
out
xchg
cmpsb
jne
stos
repz
hlt
add
dec
or
stos
insb
sub
int3
lahf
jmp
int
outsl
cwtl
or
push
xor
ficompl
test
in
test
dec
xchg
push
adc
and
test
mov
sub
mov
fstp
xor
mov
inc
test
mov
dec
pop
jge
cld
jb
jno
xchg
fwait
in
add
push
fstps
ret
inc
jg
mov
jns
and
fcomps
andl
adcl
cs
adc
repz
inc
mov
jmp
inc
adc
je
add
pop
inc
inc
pop
jno
push
notl
mov
push
pop
cmp
mov
sub
cmp
iret
xchg
mov
push
int3
movd
jne
sti
jo
push
jae
addr16
push
jge
jle
js
std
shlb
xor
mov
aas
adc
push
mov
xchg
sub
divl
gs
adc
inc
mov
dec
dec
das
mulb
and
test
jl
adc
add
jg
dec
mov
push
inc
fidivl
in
js
sbb
lds
jne
subb
or
xor
les
ds
mov
call
ljmp
push
mov
fistpl
fwait
sti
xchg
xor
leave
pop
mov
and
jae
push
cmp
lret
sub
pop
mov
mov
jl
dec
dec
dec
bound
or
or
stos
test
decb
stos
sub
xor
in
mov
nop
fcompl
test
pop
dec
push
mov
jp
xchg
lcall
xchg
cli
scas
stc
push
jp
dec
je
xchg
lods
mov
dec
adc
mov
popf
sbb
mov
addl
xorb
jmp
xchg
sub
enter
notl
es
in
sub
mov
push
push
jns
test
stos
inc
mov
add
scas
xchg
daa
dec
jecxz
cld
push
add
scas
sti
mov
mov
add
push
insb
add
mov
cmpsb
inc
fldenv
or
xchg
fsubrs
jecxz
xor
inc
stos
sub
fidivl
or
pusha
test
inc
dec
cmpsl
aas
push
int
dec
subl
pop
rolb
dec
push
adc
add
xchg
sarb
out
ret
mov
mov
pop
inc
ret
mov
cmpb
adc
jne
cmpb
repz
fbld
mov
xor
mov
dec
test
lret
pop
fsubs
loope
dec
leave
loop
xchg
adc
xchg
push
scas
cwtl
xchg
loop
mov
movsl
mov
inc
daa
enter
lea
push
sbb
add
pop
test
je
out
sub
jnp
in
out
dec
cmp
ret
xchg
adc
mov
push
es
xchg
push
pop
mov
sub
aad
push
shr
popl
push
and
test
je
cwtl
xlat
dec
scas
fadd
out
jae
shl
pop
lods
mulb
enter
ficompl
mov
incl
dec
out
inc
test
jle
push
inc
inc
push
or
rorb
sub
shll
out
adc
stos
or
push
loop
test
jo
add
idivb
arpl
mov
aad
jmp
add
sbb
sti
loopne
repz
int
call
and
mov
and
inc
inc
pop
pop
loope
shr
ficoml
or
jl
pop
push
mov
mov
mov
imul
jns
push
cmpsl
fldl
frstor
addb
lods
sbb
inc
pop
mov
mov
rolb
stos
leave
dec
push
or
test
sbbl
fnstenv
loope
ja
aas
mov
sbbb
sbb
xlat
sub
rorb
dec
clc
popa
mov
insl
and
pop
std
jno
inc
loop
xchg
mov
js
test
fstpt
jl
call
ds
xchg
add
inc
dec
add
mov
scas
addr16
loopne
js
jmp
xor
popa
scas
mov
bound
inc
int3
lods
mov
enter
popf
sarb
xchg
lea
jb
cmp
arpl
ret
adc
xor
sbb
das
mov
imul
sub
shrb
call
push
dec
aas
mov
jle
popf
xor
push
bound
mov
ljmp
shll
clc
psubsw
aas
fimuls
and
pop
xchg
xchg
sbb
push
inc
adc
dec
clc
mov
xor
dec
inc
or
pusha
mov
or
jg
cmpsl
into
test
adc
inc
flds
lahf
pop
xadd
pop
cmc
lea
pop
insb
test
rorb
xor
enter
in
xor
nop
sub
add
xchg
loopne
xchg
xor
cwtl
cltd
inc
push
mov
jmp
into
je
xor
repz
ficoml
add
decl
pop
cltd
xchg
insb
addr16
icebp
testl
mov
pushf
lahf
lock
push
or
inc
mov
dec
pop
and
dec
push
addr16
adc
or
push
or
cltd
jle
push
fstpl
or
es
je
adc
or
push
pop
ljmp
ret
xor
dec
add
mov
dec
sub
mov
shll
add
mov
push
add
clc
scas
mov
pop
cmp
sahf
pushf
pop
add
mov
stc
mov
fmull
push
push
pop
sub
jbe
cmp
pop
out
call
sub
lds
mov
mov
pop
daa
lea
gs
cmpsl
or
and
pop
sti
mov
in
fxam
ficomps
dec
pop
xchg
aad
mov
lahf
int3
cltd
fnstenv
cmpsb
jle
loop
sahf
loope
or
pop
cmc
stos
ljmp
ljmp
mov
aam
mov
xchg
insl
mov
jb
popf
lods
lea
loope
pop
fadd
ret
sub
jno
cli
stos
mov
scas
xchg
stos
movsl
repnz
xor
jl
dec
arpl
jg
lods
mov
ljmp
jno
sbb
push
dec
ds
xlat
xor
shll
add
xchg
out
cmc
jae
xchg
bound
ret
push
adc
mov
cmpsb
das
mov
push
jo
adc
xchg
push
aas
cwtl
cli
inc
cwtl
pop
jb
xchg
rorb
fbld
jmp
test
add
das
fadds
mov
sub
insb
nop
stos
inc
lods
adc
mov
repnz
mov
mov
dec
mov
adc
fistpll
mov
sub
and
out
xchg
dec
fwait
movsl
cltd
push
pop
mov
int3
mov
mov
sbb
movl
mov
mov
dec
cs
adc
mov
out
jecxz
int
es
sub
loop
cld
inc
jnp
mov
fsubs
fadd
pop
call
je
sub
jo
arpl
aad
and
add
jmp
pop
dec
clc
insb
outsl
push
xchg
pop
xchg
arpl
bound
test
es
pop
dec
jne
cmp
push
enter
fwait
and
cmpb
adc
subb
scas
jmp
lret
add
mov
imul
adc
movsb
test
sti
ficoml
mov
lret
loope
xchg
pop
aad
aas
jle
mov
sbb
or
dec
in
rcrl
cmp
xor
lods
sub
aas
fwait
hlt
xor
dec
jp
lcall
mov
fsubrs
aad
insb
push
js
aam
dec
rcrb
xor
icebp
js
sbb
or
enter
jge
pop
pop
sub
leave
push
sbb
xor
mov
mov
push
out
cmp
es
push
movsb
popf
mov
mov
pop
pop
jle
dec
mov
lret
add
rcll
cli
in
into
jo
sbb
pop
jmp
push
pusha
bound
imul
mov
out
inc
in
mov
mov
popf
jo
loop
int
mov
lahf
pop
aam
ss
xchg
fs
ss
shl
loop
ds
xor
push
fs
adc
jno
sarb
cmovb
ds
ljmp
into
outsl
and
leave
daa
inc
mov
cmp
xor
inc
adc
inc
push
ds
mov
pop
and
test
insl
icebp
inc
jnp
lret
movsb
lahf
fs
ret
scas
or
cltd
push
cmp
lds
lods
sub
gs
sti
add
das
test
lcall
mov
mov
mov
jae
jg
jnp
dec
inc
stc
add
hlt
aad
test
push
jle
mov
xchg
mov
popf
lock
rclb
dec
mov
xchg
enter
xorl
xchg
cmc
daa
sbb
aam
add
into
fs
sti
lcall
sbb
lock
jge
nop
inc
push
int
pop
sbb
sarl
std
sbb
shll
ret
xchg
dec
dec
loopne
mov
inc
mov
mov
jp
pop
call
dec
out
ljmp
push
sbb
in
mov
mov
push
xor
jae
ja
xchg
pop
xor
push
pushf
add
orb
std
adc
adc
pop
ds
mov
inc
scas
inc
add
lock
testl
push
nop
std
mov
test
push
daa
sub
inc
pop
aas
faddl
dec
jnp
push
lret
mov
and
sub
in
imul
cmp
subl
jb
adc
cld
xor
adc
dec
mov
lea
addb
test
addr16
inc
mov
xor
add
inc
data16
jmp
xor
insb
stos
mov
jno
cmp
out
and
ret
xchg
xlat
jae
ljmp
sub
mov
stos
shrb
popa
and
in
lret
div
push
xchg
mov
sub
add
push
pop
sbb
sub
xchg
sarl
js
lods
xchg
test
cld
dec
out
nop
push
in
push
lcall
ja
pop
cmp
adc
sub
xor
inc
mov
adc
js
push
and
cmpb
or
xor
lahf
arpl
jl
xor
jecxz
data16
xchg
fidivs
stc
movl
leave
jo
push
lock
repnz
xchg
lret
pop
test
add
jl
loop
mov
xchg
bound
les
in
adc
inc
pop
cmp
xorb
outsb
inc
push
adc
fs
je
and
jnp
repz
test
mov
imul
xor
test
aaa
or
in
cwtl
jne
icebp
rorl
jge
jmp
lods
jge
cmp
popf
enter
movsl
out
push
inc
lret
cld
sti
sbb
cli
xchg
js
and
test
mov
es
or
xor
cmp
push
jecxz
sbb
aam
lcall
mov
ret
push
jmp
movsb
inc
or
xchg
sbb
iret
popa
dec
mov
test
sub
das
imul
fxch
push
xor
pop
icebp
dec
or
cs
mov
cwtl
lock
call
mov
popl
xchg
test
adc
pop
cmp
mov
cmp
outsb
xor
adc
xor
or
jne
bound
in
stos
sbb
cmpsb
push
lret
push
pop
xchg
bound
shrb
jb
incb
dec
xchg
js
mov
add
sub
lds
or
sbb
cld
xchg
in
lret
push
cmp
jmp
cld
adc
pop
stos
mov
xlat
push
cmp
mov
wbinvd
repz
jno
shrb
loop
cmp
lcall
push
jae
jg
dec
xchg
outsl
push
test
inc
and
sahf
enter
repz
xor
out
aas
cwtl
cli
fidivrl
push
push
aaa
add
je
mov
push
or
je
add
popf
shr
push
out
ds
shl
mov
jo
cltd
lea
pop
imul
push
popa
pop
shlb
clc
xor
scas
mov
xor
add
xchg
push
cmpsb
das
addl
and
arpl
or
in
mov
loope
into
adc
mov
inc
add
sbb
inc
dec
xor
cli
dec
arpl
les
jne
test
rolb
add
cli
popa
test
sti
arpl
jae
andb
sub
lods
pop
in
jecxz
push
ss
and
cs
les
jne
and
out
dec
jns
sub
popf
mov
out
sub
mov
xor
jns
dec
sbb
ja
jl
xchg
xchg
sbb
xchg
clc
andb
xchg
cmc
dec
out
insl
lahf
dec
or
and
jg
lock
js
pop
fnsave
xchg
push
das
in
cwtl
fldcw
cmpsl
imul
and
jle
test
jge
xor
in
mov
or
inc
or
jns
mov
or
xor
and
xor
and
sbb
sub
jmp
xchg
cmp
adc
je
ds
test
clc
sahf
dec
in
xchg
aaa
or
jns
pop
lcall
inc
ja
sub
out
sub
push
je
shll
loope
xor
adc
call
inc
in
ljmp
in
lret
cmp
repnz
daa
add
mov
sbb
push
xchg
mov
pushf
sbb
int3
sbb
and
shl
sahf
sbb
xchg
jle
fwait
sub
jo
jp
sub
cmpsl
push
int3
bound
jle
xor
fdivrs
popa
mov
dec
lahf
sub
aaa
in
xor
cltd
cmp
sbb
push
add
xor
xor
mov
ljmp
out
or
mov
movsl
ret
jne
int3
push
sbb
sub
hlt
cli
jae
sbb
jmp
stos
test
or
add
mov
cld
add
cwtl
lock
jge
cmc
xor
sub
dec
jne
rcl
dec
mov
pop
out
pop
or
inc
xor
fnstenv
pop
test
fisttpll
rolb
mov
sub
fwait
mov
rcrb
aaa
sub
or
loop
sar
dec
lock
test
inc
xor
adc
rcrl
lods
jae
jge
adc
lret
pop
nop
outsb
cmp
jo
iret
add
into
sti
loopne
fcoms
fsubrl
or
xor
jecxz
stc
mov
scas
ret
cmp
and
lret
cmp
sbb
js
cmp
jl
pushl
inc
cmp
aaa
mov
ja
fcoml
ret
sbb
mov
lods
ss
jno
push
scas
cmpsl
push
mov
xor
arpl
adc
pop
push
bnd
push
and
jae
jge
out
sbb
lods
cmpl
adc
in
mov
scas
addr16
les
inc
addr16
mov
fdivl
adc
popl
mov
je
add
jae
insl
mov
je
mov
mov
roll
pop
aad
xorb
lods
xor
iret
cmp
lahf
scas
push
outsl
lds
movsb
outsb
nop
mov
jmp
hlt
insl
icebp
imul
adc
jmp
sahf
nop
xor
inc
cmpsl
ljmp
std
jbe
ss
fdivrl
outsb
mov
aam
or
sub
sub
popf
gs
outsb
xlat
cld
sub
addr16
repnz
outsb
add
adc
inc
insb
hlt
shlb
pop
mulb
push
pop
dec
xchg
int3
test
loopne
xor
imul
xchg
sarb
pop
dec
pop
lret
pop
clc
scas
add
scas
jmp
mov
loopne
scas
dec
xchg
int
jns
adc
mov
idivb
pushf
mov
cmp
pop
ret
jns
push
sbb
xchg
xor
or
push
mov
ja
popa
dec
cmp
sub
lahf
jg
dec
pusha
les
mov
ss
insb
test
vmread
cmp
aad
repz
mov
stos
dec
leave
push
jb
mov
into
pusha
cmp
jno
ret
fnsave
pop
jnp
addb
loope
pop
sub
cmp
or
or
repz
lds
xchg
jae
inc
or
insb
xchg
mov
test
push
sbb
cmp
lock
sbb
addr16
sub
mov
mov
insl
lahf
das
mov
sub
and
mov
adc
sbb
mov
call
mov
mov
and
add
xchg
andl
pop
jle
jbe
xchg
mov
xchg
add
sbb
pop
fwait
or
cmpsb
ret
imul
mov
movsb
pop
xor
pop
push
outsl
loope
jmp
aad
xchg
mov
mov
or
mov
pusha
mov
mov
adc
test
call
jno
aaa
dec
adc
cmp
cli
test
or
lret
and
mov
test
pop
or
sbb
ret
jecxz
into
lds
outsb
popa
shll
pop
imul
push
subl
shr
das
or
pushl
fistpl
mov
cmpl
xor
xor
pop
push
ficompl
call
fidivs
imul
dec
mov
mov
ja
and
es
cmp
sub
out
mov
add
pop
test
dec
add
cmp
mull
push
enter
lock
lcall
pop
sub
push
popf
imul
mov
aas
outsb
or
cltd
shlb
repz
outsl
cld
push
mov
mov
push
and
or
clc
mov
xlat
add
mov
repnz
test
or
adc
jmp
sub
or
mov
add
shll
stos
in
pop
pop
jns
std
in
jo
bound
mov
jmp
in
mov
add
mov
pop
jns
repnz
inc
out
cmp
cmp
cmpsb
stc
das
jb
pop
xor
fcomps
inc
jae
xchg
mov
aaa
add
mov
add
xor
jmp
mov
cmp
cmp
push
push
mov
daa
xor
pusha
mov
ficompl
sub
js
adc
test
cmp
sub
xor
xor
je
cli
in
cmp
mov
fsubrs
sbb
cmp
jge
push
lods
cwtl
aas
mov
mov
dec
stc
gs
mov
mov
aad
cmpsl
add
lcall
idivb
cmp
sahf
dec
inc
add
mov
adc
in
mov
mov
or
popa
bound
add
int3
cli
ds
cmp
insl
xchg
pop
daa
les
pop
sub
pusha
mov
sub
xor
pop
in
xor
inc
adc
pusha
or
mov
fbld
pop
aaa
iret
sahf
mov
outsb
iret
inc
add
jg
test
in
push
ds
xchg
dec
fsub
sub
pop
mov
mov
lds
push
xor
fwait
shll
mov
outsl
out
sub
sub
inc
lods
mov
mov
les
inc
add
pushf
fldt
push
pop
shr
outsl
lods
daa
cmp
shll
xchg
shrb
loopne
aam
cmp
fidivs
sbb
push
icebp
or
sub
push
and
pop
dec
test
sbb
mov
inc
adc
mulb
das
inc
test
dec
lds
push
xor
add
jns
loopne
push
pop
jecxz
dec
push
push
cmc
fs
loop
cmp
sbb
lcall
shlb
xor
push
jne
cld
mov
xchg
add
xchg
loope
pop
jno
mov
gs
fdivrs
pop
jp
push
add
pop
and
xchg
fsub
adc
faddl
int
and
sub
sbb
nop
pop
sub
lds
ja
mov
push
and
mov
push
jecxz
add
popf
xor
add
or
adc
jnp
sub
out
imul
in
scas
jbe
pushf
rep
cli
pop
cmp
pop
js
and
mov
lret
int3
leave
fbld
jb
sbb
xor
sub
cmp
xor
mov
inc
pop
dec
add
push
mov
adc
jl
fdivs
mov
xchg
aad
cmp
in
cwtl
test
int
outsb
out
mov
push
jmp
outsl
add
mov
adc
mov
sub
xor
popa
mov
push
into
lret
inc
outsl
test
jl
mov
fisubrl
sbb
xor
test
sbb
push
fiaddl
popa
stos
push
aaa
push
mul
iret
bnd
mov
pop
xchg
and
les
push
arpl
lcall
in
mov
and
dec
cmp
mov
test
or
sub
jae
ds
xchg
sub
jle
jmp
lods
nop
xlat
ljmp
enter
sbb
jno
iret
iret
mov
popl
movsb
pop
jl
cli
pop
das
pusha
mov
std
sub
mov
jmp
lds
push
lock
pop
in
hlt
pop
lret
into
cmp
xchg
into
fnstsw
jae
aad
aad
cmpsb
leave
push
push
cwtl
fisubl
test
cli
loopne
in
ret
dec
das
jae
aaa
ljmp
mov
adc
int
dec
and
pusha
push
ds
jae
sbb
push
sahf
mov
lds
jnp
pop
mov
push
das
rcrl
push
xchg
lock
aaa
js
xchg
jnp
or
bound
mov
les
pop
pop
mov
mov
xchg
sub
jnp
andps
inc
sbb
dec
add
pop
xchg
or
cmp
push
movsb
jns
mov
imul
push
inc
lcall
sbb
adc
je
std
movsl
push
shll
inc
filds
cmpb
nop
adc
movsb
mov
out
out
stos
xor
clc
sub
sub
mov
add
xchg
pop
aam
jl
cltd
cmpsl
jmp
cmpsl
notl
xor
xchg
mov
adc
mov
cmpsl
fs
jecxz
add
push
imul
jo
subl
or
negb
push
xchg
cmpl
repnz
icebp
lret
mov
aad
dec
cli
pushl
mov
mov
sbb
jecxz
insl
fiadds
mov
daa
mov
mov
xchg
push
push
push
je
sub
jp
test
mov
das
or
loop
cmp
inc
inc
arpl
js
ja
aas
mov
dec
sub
gs
ror
int
mov
sub
adc
stos
mov
insl
mov
sbb
jbe
adc
jle
sub
dec
mov
or
cmp
adc
jns
mov
lods
xchg
fadds
cmc
push
ret
inc
xor
xor
call
fimuls
push
pop
add
xchg
std
imul
andb
in
out
mov
fwait
jecxz
sub
mov
lods
loopne
xor
and
stos
xorb
shll
cmp
notb
and
int3
fdivrs
dec
mov
idivb
dec
xchg
int3
inc
mov
sbbl
inc
adc
out
scas
dec
loope
xchg
mov
push
mov
push
cmp
sbb
add
inc
shll
push
scas
cmp
push
aaa
imul
mov
ljmp
popf
mov
jl
aaa
fimull
mov
push
imul
fwait
xor
mov
lods
scas
mov
add
cmp
and
out
add
enter
fdiv
nop
or
xchg
fs
jmp
sub
js
dec
int
xor
adc
jb
int3
fmulp
and
adc
xlat
ja
sub
int
popf
scas
inc
lcall
or
inc
xchg
fstps
ret
push
out
xchg
xchg
fistpll
jae
adc
push
and
sub
mov
cmp
rcrb
jg
mov
std
mov
rcll
fstpt
int3
and
pushf
inc
hlt
int3
movsl
push
aad
movsl
dec
mov
ja
lds
xchg
mov
ret
mov
sbb
popa
xor
daa
xchg
test
ret
cmp
lret
adc
adc
js
xchg
cmpsb
adc
pop
or
adc
push
imul
aam
inc
cwtl
aad
ljmp
adc
cmp
icebp
test
jbe
cmpb
jmp
or
lods
lea
dec
daa
jo
inc
int3
jl
int
lahf
mov
pop
orb
cmp
stos
outsl
cmc
push
or
subl
jbe
enter
outsb
mov
jbe
out
mov
inc
sbb
jae
int3
xchg
stc
or
adc
je
ds
js
cmp
inc
dec
lahf
sbb
jmp
inc
repnz
pop
in
aad
fcoms
and
jne
out
cli
mov
pop
out
cmpsb
stos
jnp
outsb
cmp
and
in
inc
cmp
es
mov
mov
mov
clc
adc
pop
xor
and
adc
or
push
into
push
stos
shrb
mov
stos
and
insl
ljmp
inc
testl
inc
movsb
lea
cltd
xor
xchg
loopne
pop
sub
push
lds
dec
pop
lahf
stos
push
fisttpll
or
jle
aas
jae
popf
sub
lret
cltd
sub
ja
int3
pushf
out
push
push
mov
clc
cld
shlb
adc
mov
xor
lcall
out
rcll
test
out
daa
pop
push
pop
dec
es
test
jmp
inc
cmp
jb
dec
ret
sub
cmc
cmpl
out
rcrb
test
out
pop
sbb
cmpsl
and
mov
add
jmp
push
fbstp
int3
fdivs
mov
push
test
jg
xor
fidivrl
xchg
sbb
sti
mov
movsb
xchg
ret
jge
or
lods
jns
mov
and
sub
or
test
lcall
sbb
sbb
int3
sbb
imul
imul
loope
mov
push
leave
aas
into
jp
repz
sub
xlat
mov
jae
pop
insl
ret
jmp
adc
aas
div
cwtl
adc
xchg
pusha
jl
scas
mov
enter
cmpsb
cwtl
mov
in
cld
lock
pop
test
inc
jo
pop
loop
sahf
xchg
jnp
sahf
ljmp
sub
mov
rep
cmp
mov
cmpsb
sub
sub
mov
mov
test
jmp
mov
sarl
fadd
push
sub
in
mov
and
cmp
test
movsl
lock
iret
cmc
movsl
in
test
lods
mov
mov
aas
xor
pop
cmp
mov
addr16
add
insl
adc
pushf
mov
jae
out
outsl
imul
and
cmp
mov
aad
imul
cltd
andb
push
cmp
loope
in
cmpb
pop
mov
xchg
inc
pushf
loopne
dec
mov
xchg
mov
xchg
and
rolb
arpl
pusha
or
data16
test
and
iret
and
cwtl
std
or
or
popf
jle
mov
cld
xlat
adc
repnz
es
pop
in
add
fldcw
push
fwait
sbb
xor
insb
pop
and
mov
mov
ret
cmpsb
jecxz
int3
mov
pop
push
sahf
jmp
movsl
fs
dec
imul
mov
xor
movsb
adcl
jo
lds
test
mov
push
sbb
push
cli
adc
movsl
jge
fcmovne
inc
or
shll
xchg
outsl
repz
cmp
mov
insl
jg
enter
sarb
sbb
out
data16
popf
jecxz
pop
mul
mov
inc
imul
xlat
lea
addr16
jmp
ret
adc
test
inc
test
sub
mov
into
or
adc
mov
arpl
jnp
stos
pop
roll
ljmp
jbe
push
lds
test
lods
xchg
xchg
and
sbb
mov
test
push
push
fs
stc
mov
fsts
inc
mov
xor
pop
out
and
push
lcall
lock
das
lahf
mov
jp
aad
sub
pop
ds
xchg
outsl
popa
inc
lret
xchg
mov
mov
stos
dec
xor
js
test
nop
cmp
les
jb
add
clc
call
jne
fdivrs
popf
and
xchg
jcxz
out
shl
loope
push
adc
fucomi
call
lods
mov
sbb
sti
mov
mov
pop
xchg
sbb
sub
dec
or
pop
cmc
adc
mov
lret
loop
pusha
push
fmuls
fs
mov
dec
fs
call
bound
in
rclb
xor
mov
sub
jp
cmc
jl
adc
outsb
inc
xchg
repnz
add
cli
repz
cmp
fisubl
jge
adc
sub
mov
jne
inc
add
ret
nop
call
jle
sbb
aad
fimull
jno
add
pushf
mov
mov
xor
stc
cwtl
cwtl
insb
rcrb
test
ret
ljmp
adc
jl
imull
add
mov
mov
mov
pop
shlb
pop
clc
loope
lods
rorl
mov
inc
inc
xchg
cmp
enter
inc
jne
pop
jmp
and
aas
aad
test
xchg
movsl
ror
sar
sub
repz
push
int
fimull
pop
inc
xor
shlb
lods
addl
mov
cmp
and
arpl
inc
out
push
lds
xchg
fildl
rcll
cmpsb
mov
xchg
adc
sti
push
iret
insl
testb
pop
ret
into
or
jo
push
ljmp
enter
in
mov
pop
jecxz
sub
cwtl
fs
cmp
out
pusha
mov
or
pop
add
xor
xchg
loope
test
scas
movsl
outsl
sbb
cmp
mov
bnd
mov
jp
cltd
lcall
jae
popf
cmpb
cs
mov
push
ja
pop
and
les
mov
dec
push
aam
or
and
xor
push
gs
adcb
mov
jae
push
and
push
int3
ret
mov
and
dec
adc
outsl
mov
in
lcall
and
lods
pop
cmp
repnz
pop
mov
test
das
xchg
movsb
mov
daa
aam
sbb
ds
sub
cmp
pop
mov
pusha
lcall
iret
cmpsb
pop
andl
cmp
inc
ljmp
cmp
ffree
dec
icebp
fidivrs
leave
push
enter
and
daa
sub
inc
inc
mov
in
mov
cmp
sbb
jne
loope
ljmp
je
std
mov
addr16
movsb
lret
imul
daa
fidivrs
pop
xchg
cmpsl
imul
push
cmp
xlat
mov
sbb
cmpsb
sbb
sarb
mov
mov
test
cmpsb
mov
ljmp
jns
ljmp
mov
dec
insb
mov
mov
push
movsl
push
sbb
scas
lret
movsl
pop
and
lahf
xor
mov
add
fdivl
sub
adc
sbb
mov
mov
pushf
and
movsb
in
xor
inc
aaa
pop
loope
aaa
push
fists
inc
xchg
arpl
jl
out
fimuls
hlt
pop
jecxz
test
lock
push
je
xor
push
push
sbb
cmp
or
pop
jmp
add
js
stos
iret
outsl
xor
xor
pop
sti
es
add
data16
je
xchg
dec
dec
in
push
shrb
xor
imul
mov
ljmp
pop
fisttpll
xchg
and
sahf
jg
stos
sub
into
hlt
arpl
mov
and
jns
gs
xchg
and
in
sti
out
cs
mov
arpl
gs
testl
das
addr16
pop
push
mov
sbb
sub
jo
dec
jl
push
jge
add
or
roll
scas
movsb
add
je
or
int
daa
push
ds
mov
push
dec
pop
sub
pop
adc
pop
push
cmp
pusha
adc
ret
imul
mov
insb
inc
scas
outsb
xchg
jb
fisubl
pop
sbb
push
jne
xchg
dec
fists
subb
aaa
adc
pop
stos
cs
sbb
cwtl
outsl
xor
imul
sbb
jl
mov
shrl
je
push
mov
sbb
dec
pop
mov
xchg
stc
shrb
out
xor
test
lock
fmuls
add
jns
adc
movsl
cmovg
das
xor
incl
popa
fcomps
sbb
pop
int3
jo
pusha
add
or
js
ss
push
adc
repnz
push
inc
jecxz
adc
ds
jecxz
divb
out
into
mov
add
sbb
cmpsb
cli
xchg
daa
into
cmpsb
fs
dec
pop
jno
ret
cmp
mov
push
xchg
aam
fs
dec
adc
cmp
sar
fisttpll
in
insb
aam
arpl
adc
or
mov
repz
mov
jge
popf
subl
xchg
cmp
in
scas
mov
inc
add
add
test
add
push
in
adcl
jnp
int
sbb
cmc
mov
and
movsl
pop
ds
mov
icebp
pop
les
insb
jnp
jmp
xor
sbb
jnp
js
aas
pop
mov
js
and
push
xor
xor
out
sbb
in
push
mov
out
lahf
jnp
mov
mov
or
loop
dec
cli
pop
popf
xor
les
jns
mov
mov
jb
stc
mov
dec
add
call
movsl
addr16
stos
insl
shrb
aaa
shlb
les
fwait
pop
dec
mov
gs
movsl
movsb
adc
pop
insb
pop
int
ds
sbb
aas
dec
add
dec
or
fsubrl
jne
jne
dec
stos
inc
mov
xchg
shrl
fldl
xorb
mov
scas
in
mov
push
stos
sub
movlps
push
jb
mov
ret
cmp
mov
xor
pop
out
push
xor
jns
jb
pop
sub
xchg
sti
cwtl
cmc
pusha
movsb
or
xchg
xor
fsubrl
notb
aam
pop
dec
add
insl
repz
jg
clc
dec
sbb
xchg
outsl
xchg
loop
in
daa
dec
xor
push
cmpsb
sbb
mov
xor
and
lahf
push
es
jle
or
out
xlat
xchg
jbe
cmp
add
sub
jo
or
mov
test
jp
push
shll
mov
imul
pop
push
inc
clc
fs
imul
jae
test
jmp
in
shll
and
pop
adc
es
mov
push
mov
xor
mov
dec
xlat
jp
push
and
cmpsb
std
das
movsl
sub
sahf
add
adc
sub
mov
xchg
xlat
jno
dec
and
test
addr16
les
and
mov
xor
scas
out
adc
inc
test
cmpsb
sub
mov
rclb
and
pusha
popa
jbe,pt
ret
xorb
sbbb
bound
push
mov
sub
cmp
pop
adc
outsl
xchg
mov
jne
mov
jno
movsb
sub
pop
xor
adc
stos
pop
push
call
add
mov
adc
lock
pop
xchg
stos
mov
jne
scas
push
mov
lcall
insb
addl
scas
outsb
mov
push
cmpsl
dec
lock
out
stos
stos
sub
cmp
lea
sub
pop
jno
mov
inc
repnz
fidivs
cmp
xchg
jne
out
test
fildll
mov
std
mov
xor
or
add
lods
insb
or
out
adc
or
jl
movsl
rcrl
in
aad
fcoml
cmp
jbe
adcl
mov
adc
lret
into
and
or
lods
xor
sarl
push
xor
aas
dec
mov
pushl
xchg
push
cmp
and
les
mov
fisttps
jo
data16
lds
ret
mov
inc
adc
flds
jp
xor
loope
stos
push
cmpsb
loope
sti
sahf
ja
idivb
jnp
and
insl
push
lds
sbb
test
push
xlat
adc
push
xlat
outsl
cmp
fwait
push
push
dec
fcomi
out
stc
hlt
xor
jbe
in
dec
shl
mov
pop
fsubs
push
xchg
mov
jae
adc
cld
pop
and
and
dec
xchg
repz
out
or
in
mov
scas
lea
mov
dec
test
push
cmp
jmp
cmp
lahf
jne
ret
inc
fxch
jl
pop
pop
test
xchg
jns
std
cmp
aaa
clc
scas
scas
inc
lea
aas
mov
in
popa
sub
push
push
jp
sub
lret
or
sbb
stc
pop
cmp
push
xor
add
in
inc
adcb
jb
std
cs
cmc
jg
adc
pop
in
xor
ret
xchg
out
inc
imul
xlat
push
ss
lock
cmpsb
fsubrs
mov
cld
bound
sub
xchg
fisubrl
ficoms
pushf
or
mov
loope
mov
push
and
inc
dec
scas
mov
fs
out
clc
pop
out
ret
test
sub
mov
or
imul
nop
stos
adc
mov
mov
mov
popa
xchg
mov
adc
int3
xor
addr16
aas
int3
in
aaa
mov
xor
jmp
fisubrs
add
hlt
in
inc
xchg
sbb
mov
add
cmp
shll
push
lret
cwtl
mov
jae
addb
aaa
cmpsl
mov
in
lock
sti
jecxz
inc
movsb
repz
cld
push
or
jg
test
mov
dec
je
or
adc
fsubrs
xchg
aas
pop
xor
inc
dec
out
aam
push
fidivrs
jle
jl
jmp
rorl
cmpsb
jns
xchg
sbb
lock
adc
fmul
lds
imul
mov
repz
and
and
aad
lret
mov
inc
sbbb
or
hlt
push
cmpsl
sti
xor
pop
clc
dec
mov
cmp
adc
dec
fdivrl
aad
cmp
std
es
sub
popa
ds
mov
inc
shlb
outsl
movsl
sbb
inc
jb
dec
jge
fld
in
lock
mov
sub
push
fcomps
jo
push
pop
mov
scas
and
out
in
inc
mul
enter
fcoms
es
les
mov
mov
int3
into
cs
daa
jge
mov
add
scas
jp
jle
xor
mov
pop
mov
daa
int3
push
enter
pop
aas
lods
dec
xchg
dec
das
dec
out
sub
movsb
hlt
mov
jne
mov
cs
aas
mov
enter
pop
sub
bound
movlps
and
std
mov
iret
sub
and
adc
rolb
and
ljmp
call
and
mov
push
outsl
jb
xchg
or
adc
push
jmp
and
dec
aam
icebp
cmp
add
dec
xor
xchg
mov
push
movsl
mov
ljmp
bound
or
lea
push
cmpsb
pop
insb
xchg
xchg
and
loopne
test
fldt
mov
or
pop
insl
push
imul
jbe
push
rcrl
ljmp
adc
and
mov
pop
and
or
and
and
xchg
inc
repz
or
jmp
icebp
mov
lods
decl
lods
or
je
nop
orb
sub
jae
cld
ja
mov
in
or
aaa
adc
xor
aam
pop
mov
call
int3
lods
xor
push
cmp
cli
rorb
test
sbb
add
fists
mulb
int
cmp
and
in
das
rcl
cmpsl
sub
pop
adc
in
mov
jne
xchg
mov
rolb
push
movsl
pop
popa
or
mov
xchg
das
cwtl
pusha
popa
fidivrs
adc
dec
pop
sub
inc
xor
loop
jecxz
bound
mov
jle
pop
mov
dec
dec
es
add
mov
jbe
mov
xchg
out
adc
rolb
fmul
enter
rcll
out
or
push
xor
int
repz
jbe
stc
cwtl
push
out
dec
andl
mov
movsb
xor
scas
nop
mov
inc
mov
fcoms
test
mov
test
cmp
xlat
leave
push
aas
dec
bound
cmp
push
cmp
sub
push
mov
jo
frstor
mov
pusha
xchg
nop
cli
pushf
lea
loopne
or
add
stos
fcompl
loopne
jno
andb
out
pop
aam
rorl
jb
and
sahf
sub
fcmovbe
stc
sarl
fidivrs
jg
test
xor
adc
cwtl
int
cmp
mov
ret
and
mov
hlt
jmp
mov
xchg
icebp
xchg
icebp
dec
out
or
jbe
lret
ret
int
scas
add
pop
outsl
aaa
daa
push
mov
mov
rcl
xchg
insl
jns
fnstcw
jns
inc
daa
sub
lea
inc
jecxz
inc
xor
sbb
testl
mov
outsb
imul
cmpsb
mov
lcall
xlat
ret
pusha
imul
lds
adc
push
inc
testl
andb
sbb
out
std
imul
in
cwtl
push
in
cmp
ret
cs
repz
cld
lock
ss
push
test
adc
jmp
scas
popa
test
mov
push
sbb
pop
daa
test
adc
adc
stos
jbe
out
dec
xlat
insb
lret
mov
data16
clc
and
test
lods
jg
popf
push
lock
aad
add
push
cwtl
sub
stc
add
hlt
push
out
dec
dec
ret
ljmp
js
and
out
push
sbb
mov
sbb
nop
inc
push
xor
shlb
mov
cmp
jp
daa
mov
shll
fnstenv
xor
xchg
add
lea
mov
xchg
dec
leave
stc
xchg
loop
push
sahf
mov
clc
fldl
sbb
stos
loopne
out
lods
cwtl
and
jp
jne
rorb
dec
mov
jl
and
sbb
pop
jmp
mov
enter
test
sbb
xor
sbb
and
or
arpl
xor
push
jp
mov
or
jg
pop
cmpl
test
cltd
dec
punpckhbw
adc
clc
mov
lods
fadds
in
push
pop
sbb
pop
and
ja
rolb
test
mov
sub
jecxz
imul
cmp
pop
pop
xchg
lds
add
inc
clc
sub
pop
fdivrl
dec
stos
jnp
sbb
pushf
or
icebp
mov
pop
outsb
push
adc
adc
out
lahf
jmp
xor
repnz
mov
js
xor
jmp
lods
ljmpw
fistpl
mov
sahf
into
push
in
adcb
xchg
xchg
and
mul
es
xor
icebp
addr16
xor
sahf
outsl
mov
test
xor
incb
sarb
dec
pop
dec
mov
test
adc
out
add
or
mov
das
loop
sub
mov
xchg
mov
xchg
fisttpl
shrl
jmp
mov
jge
les
pop
pop
frstor
testl
sbbl
mov
mov
inc
outsl
sbb
outsb
addw
or
fimull
jbe
mov
mov
ss
push
lea
or
xchg
push
dec
fldcw
incl
loopne
dec
ljmp
cld
mov
sar
xor
cld
pop
jb
push
in
je
sbb
add
jne
mov
xor
mov
enter
icebp
and
adcl
pop
pop
hlt
push
add
sarl
dec
idivb
fnsave
bnd
cmpsb
int3
inc
dec
dec
push
std
cmpsl
dec
cmc
je
push
call
push
sahf
inc
mov
fbld
pop
cltd
dec
scas
sub
and
inc
xlat
mov
cmp
xchg
adc
jmp
and
jne
lock
push
add
sbb
lea
xor
add
mov
push
jno
dec
dec
outsb
scas
roll
out
fnstenv
scas
std
jbe
cwtl
add
pusha
leave
cmp
ds
push
or
and
adc
jmp
test
xchg
dec
jmp
add
je
push
mov
hlt
pop
or
cmp
sub
push
mov
loope
aaa
movsl
and
addl
mov
ljmp
stos
mov
shlb
cmpsb
adc
pop
lahf
inc
dec
lods
imul
imul
imul
sbb
bound
push
mov
xchg
pop
pop
push
mov
jecxz
lret
pop
bound
jno
push
xor
jno
mov
push
bound
scas
cmpsb
rcl
mov
adc
pop
fs
mov
into
stos
aad
test
lea
push
dec
adcb
and
leave
or
cmp
mov
mov
int3
pop
vunpcklpd
mov
dec
adc
mov
fdivrl
aaa
test
push
or
mov
lcall
test
aaa
fimull
push
or
mov
cs
jmp
mov
in
dec
cmpsb
aaa
xchg
mov
mov
movsl
cmpsl
lods
jns
ja
sub
xorb
and
loopne
pop
insb
dec
roll
or
dec
sbb
cli
push
sub
dec
jge
iret
out
lret
lock
mov
lods
sub
dec
jb
sbb
xor
movsl
xchg
scas
cmp
xchg
xchg
cli
out
flds
jl
pop
call
jns
nop
fidivl
mov
aad
cmpl
inc
and
enter
call
inc
push
jmp
sbb
and
jbe
cmpsl
cmpsl
into
sub
push
add
jl
adc
add
cmp
imulb
mov
fists
fstpl
mov
fs
pop
in
fsubrl
addr16
inc
mov
pushf
dec
std
icebp
lds
fmuls
jnp
sub
xchg
sbb
xlat
ss
jle
push
mov
mov
and
or
movsl
imul
add
arpl
dec
push
cmp
dec
jno
stos
sbb
mov
cli
xchg
lea
mov
xor
push
mov
test
arpl
mov
lds
cmp
lcall
inc
mov
cs
outsb
push
loope
arpl
in
std
jecxz
push
mov
arpl
movsb
jnp
jge
daa
push
mov
pop
sbb
loop
push
xor
jecxz
cwtl
jo
mov
rorl
push
outsl
jbe
icebp
hlt
cmp
test
mov
into
pop
mov
mov
mov
stc
je
cltd
pusha
aaa
xchg
pop
sarl
jmp
sbb
outsb
mov
jo
jo
mov
xor
pop
and
scas
and
and
adc
xor
iret
mov
push
push
stos
mov
xchg
jmp
rorb
movsl
leave
inc
ret
jmp
cmp
sarb
icebp
xchg
mov
loop
adc
xor
rolb
lods
aam
xor
out
push
movsl
aaa
lods
dec
dec
ds
xor
in
xchg
repz
jmp
fs
cltd
scas
xchg
mov
inc
lcall
add
mov
pop
jg
enter
pmuludq
adc
adc
fdivrs
xchg
lods
lods
ret
notb
push
mov
cli
adc
xor
lods
pusha
push
iret
in
xor
fdivl
push
scas
or
and
mov
pop
jg
xchg
cmpsb
ljmp
push
repnz
shlb
xor
inc
fcoml
les
dec
stos
out
stos
mov
mov
pop
and
pop
push
imul
mov
das
xchg
push
mov
xor
imull
loopne
mov
and
pusha
aad
lahf
bswap
mov
repnz
xor
mov
mov
sarl
popf
inc
push
outsb
insb
fsubp
scas
in
mov
mov
inc
imul
and
jbe
iret
sar
jo
sbb
or
xchg
aad
shrb
or
ds
jp
mov
lods
addr16
jmp
ss
or
cmpl
jge
xchg
lcall
std
frstor
lahf
sbb
inc
add
xchg
loop
adc
inc
mov
mov
and
jae
aam
outsb
mov
or
insl
pop
jae
mov
fistps
cmp
pop
es
leave
dec
mov
mov
das
mov
jns
or
std
mov
aad
les
mov
push
je
movsb
fldcw
lods
mov
sbb
syscall
cld
in
lcall
jne
xor
adc
xor
fmull
fistl
mov
mov
loope
adc
mov
inc
or
int3
int3
out
push
jmp
cmpsb
push
ja
loopne
jae
int
insl
pushl
cmp
or
inc
cwtl
sub
cmpsb
movsb
jl
and
clc
dec
lock
adc
outsb
imulb
push
loopne
stos
and
imul
mov
and
inc
sarb
pop
dec
loopne
icebp
dec
inc
in
lret
or
push
pop
cmp
sub
das
enter
push
push
rclb
and
scas
data16
cs
xor
sarl
fnstcw
pop
out
fprem
xor
jne
jo
mov
pop
sub
jmp
call
js
fxch
inc
cmpb
aaa
pop
dec
jge
lahf
jae
cmp
or
xchg
sub
repz
or
in
inc
fcomi
push
xor
shll
in
sahf
pop
dec
test
xor
push
add
dec
in
pop
mov
imul
inc
sahf
pop
mov
mov
movsl
sahf
jecxz
cld
in
movsb
rcl
fstps
sub
jecxz
and
lahf
pop
xor
addb
shlb
dec
lock
sbb
sub
xchg
into
push
popf
stc
das
test
imul
stos
jbe
cmp
jecxz,pt
in
ret
jmp
out
pop
push
xor
jmp
cmp
scas
push
movsb
xchg
mov
or
mov
movsl
mov
cmp
idivb
xor
or
cmp
aaa
or
xchg
test
xchg
jbe
jge
xchg
fwait
orl
lret
call
pop
addr16
pop
shll
inc
sbb
pop
dec
sbb
mov
sbb
sbb
pushf
jle
mov
repnz
mov
and
mov
adc
pop
addr16
sti
lahf
inc
das
and
or
daa
fdiv
hlt
shrl
mov
push
iret
nop
push
cmpsl
in
jle
andb
in
mov
push
in
mov
pushf
aam
js
xor
push
add
push
inc
xor
jns
or
fsubrs
popa
cmp
aad
in
shrb
jae
call
cmpsb
inc
gs
stos
fs
add
jae
fnstcw
and
push
inc
mov
cs
lret
or
xchg
xchg
pop
jnp
mov
mov
pop
pop
sahf
out
xor
mov
jns
jno
fdiv
mov
mov
fstpt
sbb
pop
in
test
xor
int3
and
arpl
adc
adc
mov
push
jne
pop
fwait
mov
push
cli
xchg
fcom
adc
xchg
xor
scas
or
mov
rorb
jne
daa
sub
dec
cmp
shll
jmp
cli
jo
xor
sub
imul
dec
dec
inc
cmp
lock
add
cmp
fstl
push
push
aad
test
pop
push
inc
ret
xor
icebp
mov
cli
jmp
jl
out
dec
icebp
mov
je
fwait
pop
push
cmp
call
fstl
cmpsl
sub
xchg
rclb
sbb
gs
inc
int
fmull
push
sti
ja
push
adc
push
cmpsb
cmp
mov
mov
xor
insb
or
in
sbb
push
sbb
out
mov
mov
jecxz
popf
je
out
lret
ds
xlat
mov
fsubrl
fsts
and
cmovnp
dec
jecxz
loope
cmc
add
inc
imul
jae
mov
imul
mov
in
sub
pusha
aas
and
fadds
cli
scas
fcompl
adc
mov
or
jnp
aas
jne
js
xchg
cmp
mov
or
jne
addr16
das
mov
mov
loop
inc
xchg
je
push
jno
push
shll
push
xchg
enter
sub
jg
sbb
gs
jmp
xor
cmc
test
mov
je
sbb
dec
lret
int3
hlt
add
int
rcll
ret
ret
mov
push
fdivl
lods
xchg
or
outsw
std
push
xchg
dec
pop
or
paddusw
push
mov
pop
out
shlb
pop
pop
xchg
loopne
and
and
push
mov
add
sti
out
pop
sub
lret
sbb
enter
xchg
adc
inc
js
mov
aam
xor
outsb
nop
pop
dec
dec
daa
sbb
xor
shlb
mov
pop
popf
push
addr16
pusha
into
add
pop
mov
mov
jp
sub
xor
push
bndldx
out
inc
outsb
jae
pop
roll
in
jbe
jae
add
sbb
daa
mov
call
jmp
dec
imul
jg
xchg
loope
daa
or
inc
mov
jbe
pop
ret
pop
sub
pop
dec
and
cmp
fadds
in
les
popa
fildll
dec
nop
ds
push
or
test
iret
cmc
push
or
adc
ds
int
jecxz
sub
out
insl
mov
addl
rclb
mov
xchg
add
test
loopne
imul
dec
inc
aas
add
push
sbb
lock
or
mov
iret
xor
addr16
lcall
xor
add
mov
or
mov
call
mov
ret
rol
mov
jg
xchg
jmp
mov
dec
or
cmp
cmp
mov
mov
scas
add
inc
cmp
mov
adc
sub
push
jmp
insl
xchg
mov
pop
negl
push
dec
insb
sbb
daa
sbb
sub
push
inc
add
mov
andl
mov
aam
data16
cld
pop
sub
imul
loopne
mov
enter
scas
shl
leave
aaa
add
fnstenv
xor
or
clc
inc
add
xor
jne
pop
sbb
sbb
popl
addr16
lahf
mov
cmp
stc
out
mov
std
cltd
fnstcw
clc
mov
xchg
aam
ret
sub
rclb
xor
sub
jns
pop
repnz
cmp
pop
inc
pop
int
hlt
jecxz
insl
int
mov
ret
leave
ja
es
movsl
fnstenv
xlat
imul
ret
pop
aas
stos
fdivr
mov
mov
dec
push
dec
xor
ds
cmp
pusha
xchg
adc
cmp
sub
rorl
mov
xchg
insb
jo
add
jno
cli
das
mov
lret
lret
jno
notb
lahf
xor
inc
jbe
aas
xchg
daa
das
and
inc
jl
lcall
jns
or
adc
inc
in
ret
mov
cli
push
and
jns
jmp
ds
add
cld
and
mov
dec
xchg
and
fldt
iret
cs
add
adc
data16
notb
test
outsb
cld
sbbb
and
inc
push
ffree
inc
aam
sub
repz
push
add
inc
pushf
je
into
cmpsl
test
mov
push
dec
bound
mov
push
fdivl
or
or
xor
push
add
notl
pusha
and
hlt
mov
lds
pop
ja
adc
js
push
jae
pop
addb
add
aaa
mov
dec
push
sub
mov
imul
sbb
mov
adcb
jmp
paddw
mov
or
popa
nop
push
xchg
popa
add
dec
mov
mov
xchg
out
ljmp
jns
shll
int
ficoms
scas
inc
jbe
jecxz
cmp
cwtl
sbb
int3
mov
cld
ds
xchg
cmp
inc
xchg
aad
mov
es
mov
in
sbb
lret
lret
shll
idivl
data16
jns
push
fwait
mov
xchg
mov
cmc
insl
adc
iret
ret
xor
stos
mov
lods
cmpsl
cmpsl
cmpsl
dec
popa
loop
xchg
mov
cli
mov
add
xlat
inc
cmpsb
inc
adc
aas
jnp
add
push
cwtl
sub
dec
xor
inc
pop
fisttps
sub
loope
stos
mov
mov
rclb
cli
lock
push
xor
and
mov
or
cwtl
pop
ja
xlat
out
fbld
popf
loop
xchg
pop
arpl
mov
in
aaa
jno
rcll
cltd
xchg
lret
stos
es
aas
add
jae
adc
out
fcoms
out
in
loop
ficoms
div
mov
lret
int
or
xor
pusha
jae
imul
xchg
decl
out
push
jne
loop
pop
and
shl
jno
push
mov
loop
cmpsl
push
mov
sub
jle
cwtl
add
mov
pusha
sbb
movsb
pop
test
rorb
leave
fistpl
sub
mov
pop
mov
fisubl
popf
sti
push
sbb
adc
mov
mov
lret
enter
sahf
jp
jp
and
icebp
in
rcrl
dec
mov
stos
test
push
push
jbe
cmp
push
pusha
div
push
inc
ds
imul
push
or
test
mov
mov
mov
sti
push
mov
mov
or
push
pop
aaa
pop
jb
lods
sahf
inc
push
pusha
cmpsl
and
sub
and
pop
dec
mov
out
loope
xor
stos
and
ret
push
mov
dec
xor
loop
adc
xor
cltd
test
int
ret
test
cmpl
std
jmp
jmp
cmpsl
ja
pusha
scas
popf
out
adc
mov
and
outsl
and
das
or
push
dec
sbb
add
es
pusha
fwait
out
out
pop
ljmp
xor
pop
xchg
cmpsb
stos
fists
js
aad
in
fs
repz
imul
push
cli
gs
mov
pusha
mov
jmp
dec
outsl
xor
ja
daa
sbb
mov
adc
sti
jo
daa
jnp
adc
cmp
pushf
adc
call
sbb
add
out
cmp
mov
movsb
ljmp
xchg
in
sbb
pop
push
pop
in
xchg
mov
dec
addr16
inc
sahf
sub
push
loope
cs
or
enter
sub
ljmp
lret
mov
mov
dec
mov
xchg
andb
or
imul
scas
sbb
aaa
ljmp
cmp
lock
jg
lcall
or
push
les
mov
in
mov
jnp
mov
mov
mov
mov
dec
jno
adc
scas
inc
mov
lret
les
xchg
pop
jge
test
cmc
rolb
test
xchg
pop
push
or
inc
je
lods
jb
imul
mov
jg
jns
or
mov
pop
mov
addr16
xor
xchg
gs
lcall
pusha
shlb
or
rorb
mov
into
out
popf
xchg
mov
scas
dec
push
mov
mov
pop
hlt
xchg
xchg
sbb
mov
push
mov
add
mov
push
stc
push
mov
mov
mov
inc
mov
jecxz
mov
ficompl
cltd
xor
pop
loope
xchg
xchg
addr16
sub
das
cwtl
cwtl
jmp
sbb
mov
outsb
test
movsl
outsl
stc
cmp
lock
test
add
adc
xchg
xor
jnp
mov
leave
clc
add
aad
lahf
loopne
scas
lret
outsb
pop
clc
int
xchg
fimull
jbe
fmull
imul
push
jecxz
mov
xor
xor
addr16
loop
cmp
lahf
adcl
mov
or
shlb
scas
add
lods
add
shr
mov
mov
and
arpl
out
das
and
pop
arpl
out
xchg
jecxz
cmp
lods
movsl
clc
add
in
fwait
call
jecxz
addl
data16
jle
pop
imul
inc
lods
movsl
pop
lcall
pop
es
jbe
in
fcmovu
push
jno
popa
test
sbb
lcall
push
mov
cli
dec
mov
mov
pop
xchg
sbb
dec
int3
cmp
imul
push
xor
rcrb
fst
push
xchg
cs
or
pop
and
divb
repz
fs
mov
cmp
pop
xor
cs
pop
js
add
jl
mov
push
push
mov
mov
insb
jge
shlb
and
ret
test
test
xchg
ret
imul
jle
int
sahf
cmp
sti
idiv
fimull
xor
push
cli
rorl
fsubp
xor
fsub
sbb
in
pop
sub
add
test
jns
mov
mov
jp
pop
jecxz
movsb
in
jp
adc
loope
cmp
and
je
mov
mov
nop
sahf
xchg
inc
into
or
jae
lcall
sbb
or
iret
adc
fstpl
add
lcall
cmp
ljmp
adc
cld
push
scas
dec
jno
adc
addl
outsb
fidivrs
filds
add
out
outsl
xchg
jmp
mov
mov
ss
ret
outsb
scas
xor
dec
xlat
or
jo
ja
xor
xor
cmp
cmp
push
es
adc
cmp
adc
pop
inc
push
mov
pop
lea
mov
mov
lret
jbe
shl
sbb
adc
divb
ret
std
mov
vpsrlq
icebp
xchg
subl
fistps
cmp
adc
push
push
push
push
inc
pop
adc
jg
adc
insl
cmpb
cwtl
xchg
sub
add
ljmp
imul
inc
scas
jmp
push
push
mov
push
in
cwtl
clc
xchg
sahf
pop
sahf
nop
in
mov
stos
pop
dec
lcall
push
dec
in
cmp
mov
or
jmp
mov
das
iret
adc
jae
add
lahf
sbb
shlb
dec
jle
sub
mov
sub
popf
sub
or
rcr
and
inc
sbbl
scas
cmp
lea
push
cmpsl
js
cmp
cmpsb
sahf
cli
jo
iret
arpl
fbstp
aam
in
in
push
es
push
xchg
stos
xchg
in
fcmovnbe
mov
jns
pushf
add
inc
cli
dec
scas
scas
in
bnd
push
mov
shrl
mov
test
add
jl
jecxz
out
fdivrs
or
shlb
into
inc
decl
es
das
in
lret
nop
adc
cmp
inc
sbb
out
shl
sbb
aaa
jae
aam
repnz
loope
sub
out
push
mov
pop
cs
test
xchg
out
dec
mov
cltd
movsb
sbb
dec
imul
cltd
mov
dec
adc
cmc
mov
test
repz
or
aaa
xor
rcrb
pop
pusha
pop
dec
mov
outsb
out
add
add
cmpl
jb
push
or
jg
daa
push
and
mov
add
sub
flds
rol
cmp
xor
cld
mov
movsb
sub
lea
mov
je
sub
pop
stos
fisubrl
push
mov
and
mov
inc
pop
jnp
dec
push
xor
icebp
stc
stos
js
shlb
adc
xchg
cli
push
stos
lcall
jnp
cwtl
iret
lcall
pop
out
gs
loopne
les
mov
and
mov
in
ret
dec
iret
mov
fs
pop
sub
cmp
xchg
fsts
stos
sbb
inc
and
aas
add
imul
mov
mov
dec
jl
cs
add
or
into
out
mov
xchg
lods
data16
into
xchg
add
sub
fildl
addl
jbe
test
pop
lods
popf
movsl
dec
and
fbld
roll
in
and
or
dec
sub
loopne
xchg
jmp
cs
cltd
add
loopne,pt
pop
mov
xchg
imul
pop
cli
outsl
hlt
push
xchg
stos
je
push
adcl
in
cli
mov
mov
xchg
xchg
rclb
xchg
jge
xor
xor
and
mov
popf
shl
mull
scas
scas
push
aad
pop
loope
cli
jns
pop
pushf
pop
xlat
push
inc
push
cmpsb
aad
inc
push
sbb
cld
lret
imul
sbb
inc
and
cmc
sbb
cmp
adc
push
add
ficomps
xchg
lods
les
jge
jle
mov
lret
xlat
mov
cmpl
pushf
cmp
push
movsb
movsl
jge
jp
mov
mov
xchg
xchg
cmpb
cs
push
in
hlt
out
orb
sbb
mov
ret
fidivrs
int3
addb
mov
repz
xchg
inc
jge
outsl
pop
popf
stc
sbb
or
cmpb
sti
cmp
out
jo
sub
xor
jb
sbb
mov
mov
sbb
mov
lcall
xor
push
sti
or
dec
pop
mov
jb
jne
mov
xor
bound
xchg
sub
cmp
cmpsl
inc
test
sub
insb
xchg
jl
push
enter
xchg
stos
sbb
fbstp
sub
xorb
inc
into
mov
cltd
xor
loop
lds
sbb
xlat
icebp
ret
dec
aam
lods
incl
cwtl
cmp
shr
mov
out
cmp
mov
lret
inc
jmp
inc
test
and
mov
add
adc
mov
or
es
dec
jecxz
sub
movsb
js
pop
dec
push
or
push
cmpsl
sub
inc
mov
xchg
pop
ja
mov
aam
adc
inc
push
iret
ret
movb
out
lret
nop
cltd
test
je
rorb
test
mov
xor
mov
fldenv
movsb
jns
insl
mov
pusha
lcall
rep
push
push
jmp
jmp
or
fadds
rcrl
std
movsb
xchg
testl
mov
jmp
lock
std
xchg
cs
int3
add
and
out
add
movsl
popf
jmp
inc
adc
mov
dec
shl
xlat
sbb
dec
add
mov
int
in
nop
and
jb
push
xchg
loop
cmpl
fisubl
mov
adc
mov
arpl
lods
jecxz
jmp
ror
xor
cmp
rclb
jmp
mov
xchg
push
out
dec
ret
scas
fwait
sub
arpl
mov
out
outsl
xchg
test
dec
jp
push
push
mov
out
pop
fs
lret
rclb
mov
mov
gs
ljmp
sbb
and
push
std
jle
popa
negl
fistpl
in
outsl
out
push
add
mov
mov
pop
push
leave
lahf
add
xchg
insl
hlt
loop
fdivl
push
pop
mov
cltd
pop
insl
pop
sub
test
xchg
inc
adc
fimuls
lret
clc
pop
sbb
shlb
rol
adcb
adcb
mov
add
mov
cmpsl
adc
sti
repnz
pusha
hlt
addr16
pop
outsb
pop
pop
pop
int3
dec
xor
cmp
in
jae
shll
outsb
aas
test
add
adc
mov
xor
xor
pop
ds
jne
mov
cmp
pop
movsb
ljmp
xchg
popf
jmp
inc
imul
lcall
dec
mov
or
xchg
add
lcall
ret
mov
jp
xchg
xchg
sahf
je
mov
jno
add
jno
mov
fisubrs
rcrl
addr16
mov
mov
xor
push
repnz
inc
dec
and
not
aaa
add
cs
xor
test
inc
pop
adc
xchg
faddl
sbb
pop
jo
adc
lea
and
sub
and
mov
nop
idivl
sahf
test
mov
and
cld
outsl
dec
cmp
lods
cmp
cwtl
scas
dec
xchg
cmp
xchg
out
div
pop
jg
int
cmp
in
xorl
movl
aaa
hlt
sub
mov
jge
mov
or
test
pop
cmp
mov
xchg
sub
mov
adc
jmp
pusha
pop
pop
push
jmp
cli
mov
leave
jne
cmp
cmp
pop
jae
mov
cmp
orb
xorl
mov
mov
add
mov
fcoml
inc
cs
aad
mov
addr16
jo
cmp
pop
jg
scas
add
jecxz
or
lods
and
lock
or
sbb
pop
jae
jns
cmp
cltd
mov
int3
dec
mov
jl
mov
mov
lods
dec
jo
fwait
push
cs
cmc
mov
push
xor
sub
or
movsb
xchg
mov
scas
andl
xor
sub
sbb
or
pusha
jbe
dec
pusha
mov
mov
call
sub
adc
sbbb
fwait
adc
cmp
mov
lret
fnstcw
es
fwait
pop
fcomps
mov
test
push
push
sti
xchg
mov
movsl
pop
add
xor
shlb
mov
cltd
je
and
repnz
loopne
ss
into
inc
pop
dec
test
and
add
repnz
jns
insb
mov
lods
lret
hlt
inc
mov
test
test
mov
mov
push
xchg
jle
dec
mov
icebp
cltd
nop
inc
stc
pop
aam
fcoml
jb
xchg
mov
stc
lret
cmpsb
push
sti
xor
out
fistpl
inc
das
mov
pop
or
mov
xlat
outsb
bound
dec
add
add
in
push
mov
mov
sahf
sbb
push
in
andb
loop
cs
movsb
and
cmpsl
ljmp
mov
xchg
jns
cmc
enter
add
push
das
aaa
fcoms
les
sub
cmpsb
sub
lahf
add
jmp
jmp
xchg
lea
minps
and
jae
sbbb
inc
pushf
xor
inc
std
inc
nop
dec
mov
data16
inc
test
add
mov
jmp
sti
jb
imul
mov
icebp
aad
sbb
fdiv
inc
mov
stos
push
xchg
adc
ljmp
jns
inc
jns
or
push
mov
scas
xor
mov
in
pop
aaa
jecxz
fwait
and
and
pop
imul
pop
add
int3
xor
aas
adc
mov
cmc
sub
testl
add
cld
sbb
fucomp
stos
add
inc
loop
fdivl
and
scas
test
jp
jge
es
dec
add
mov
xchg
push
lret
or
dec
cmp
xchg
in
mov
clc
mov
mov
paddusb
push
jl
daa
jle
call
scas
sarb
in
std
scas
inc
rclb
or
sub
stos
out
jo
jb
sub
add
mov
stc
fdivl
cld
scas
test
nop
add
outsb
out
loopne
das
inc
cmpsl
pop
adc
and
sbb
mov
sub
test
scas
jl
fbstp
sbb
fisubs
addl
jno
scas
jb
in
push
gs
cli
insb
popf
adc
jbe
push
jle
shr
cmpsb
add
ja,pn
shl
xchg
adc
dec
rcrl
mov
divb
movsl
sub
push
lods
imul
xor
das
movsb
dec
sub
fadds
dec
lock
adc
scas
push
bound
mov
ja
fstpt
push
push
notb
test
pop
push
pop
pop
mov
fmulp
fmul
pop
fstl
aad
xchg
pop
int3
adc
jp
mov
xchg
sub
aad
sub
loopne
mov
shll
add
imul
lods
push
adc
pop
adc
inc
into
and
icebp
sub
iret
push
jmp
in
cmp
mov
jb
push
jmp
fstpl
jno
cs
iret
lret
jge
xchg
int
cmp
pop
sub
rclb
jne
push
bound
xor
iret
dec
mov
sbb
cmp
insl
call
cmpsb
dec
lods
pop
in
cmpb
jae
fiaddl
xchg
fucom
rorl
loopne
pop
jno
push
jne
shll
in
cmp
shrb
lods
sbb
enter
sahf
jae
daa
add
jno
xchg
or
mov
cmp
test
dec
inc
pop
int3
aas
cli
js
sbb
enter
xor
repz
jp
mov
ret
dec
in
movsl
sub
mov
loope
jg
or
or
pop
pop
jl
xor
test
push
hlt
mov
outsl
mov
add
mov
push
stc
in
cli
jecxz
sub
dec
jmp
test
and
xchg
daa
sahf
jmp
dec
cmpsb
mov
dec
lds
iret
lcall
repnz
insb
add
jo
shll
pop
bound
pop
dec
xor
cmc
test
imul
repnz
pop
int3
shl
dec
fs
pop
and
fsubp
pop
fidivs
ja
adc
ss
jmp
pop
jle
push
insl
lret
popf
fcmovnbe
jnp
and
pop
in
mov
imulb
loop
imulb
enter
jne
mov
call
xchg
dec
mov
mov
push
arpl
scas
pop
push
or
dec
pop
pop
xor
out
mov
scas
out
xlat
out
in
cmp
mov
mov
sub
xchg
out
sub
cmp
arpl
cmp
jo
lahf
test
or
fucomi
jl
popf
or
lods
repz
dec
adc
aas
repnz
xchg
jbe,pt
push
popa
and
ds
out
push
lahf
mov
mov
daa
pop
inc
test
pop
and
jp
fsub
jbe
fcompl
pop
int
add
pop
testb
or
jo
pop
mov
fs
jae
ds
jmp
cltd
inc
dec
mov
in
jecxz
push
add
dec
inc
mov
inc
inc
int
subb
test
mov
outsl
and
push
mov
cmp
pop
fists
mov
or
loope
aas
lds
rol
sbb
mov
sbb
push
inc
adc
dec
fmul
push
jp
dec
jo
inc
shrl
pop
jae
push
cwtl
bound
out
pop
mov
lret
lcall
jbe
mov
jp
add
xchg
inc
scas
mov
inc
pop
or
mov
popf
mov
sbb
aas
mov
push
popf
mov
scas
sarl
lret
jns
push
xor
dec
mov
stos
add
xchg
shrb
addr16
outsb
subl
fbld
not
mov
in
pop
aas
pop
pop
scas
push
xor
cli
clc
cmp
jg
imul
adc
jle
mov
mov
imul
lahf
or
movsb
mov
into
xor
xor
aad
mov
loopne
aas
cwtl
inc
inc
and
pop
add
mov
jg
pop
or
mov
pop
pop
adc
negb
cmp
mov
idivl
jb
cmpsl
pop
dec
cltd
mov
popf
xor
mov
adc
outsb
dec
fs
mov
sahf
lock
adc
ret
push
jno
and
push
arpl
lock
push
push
mov
lahf
inc
dec
aas
mov
scas
mov
lcall
jae
lret
pop
or
hlt
jge
push
inc
mov
clc
aam
inc
sbb
xchg
insl
incb
sbb
cmp
loope
add
adc
mov
push
cmpsl
adc
or
fbld
push
scas
mov
mov
test
insl
rcl
shl
jbe
orl
mov
repz
adc
xchg
dec
or
jns
mov
jmp
inc
mov
pushw
dec
sub
mov
mov
jb
cmp
movsl
in
adcb
out
xchg
frstor
sbb
jne
jl
and
or
roll
xchg
pop
rclb
dec
add
fwait
loopne
mov
sub
pop
fldl
jp
mov
insl
test
stc
mov
cld
popf
mov
sub
xchg
shl
dec
mov
cli
fistpl
mov
dec
sub
cli
pop
push
cmpsl
es
xor
gs
es
push
or
adc
and
adc
mov
cmp
and
jmp
scas
repz
es
push
psllq
fiaddl
cmp
movsw
push
dec
or
push
pop
sbb
inc
orb
insb
fsubrl
lahf
and
mov
xor
int3
mov
hlt
add
lds
js
aas
xor
repnz
xor
js
scas
mov
adc
stos
adc
psrlq
push
shrb
dec
push
jbe
jno
insb
pusha
add
mov
jmp
notb
jnp
adc
pop
stos
fimuls
out
inc
mov
aas
dec
xor
xchg
call
xor
mov
test
jle
dec
pop
loope
pushf
cmp
dec
jmp
adc
out
xor
divl
sub
inc
mov
ss
inc
mov
nop
pop
jg
mov
daa
enter
mov
adc
xchg
mov
mov
or
jb
sbb
inc
jnp
or
push
sub
call
inc
inc
cmpsb
mov
lret
xchg
or
push
inc
pop
inc
fadd
enter
inc
or
mov
jnp
ror
into
or
mov
xchg
pop
adc
or
ds
ds
add
aaa
lock
jmp
in
dec
xor
lock
xchg
cli
mov
inc
jge
das
push
scas
push
insl
jns
in
mov
adc
ss
roll
sbb
dec
sub
inc
inc
inc
mov
aad
fildll
bound
leave
adcl
xchg
sar
rcrl
push
push
inc
imul
aam
ja
fcoms
rol
xchg
lcall
shlb
les
mov
pop
sti
xchg
inc
pop
or
mov
popf
bound
popa
aas
aas
inc
mov
jne
lahf
out
jmp
out
pop
imul
pop
call
pop
cmpsl
stos
into
test
xor
aas
mov
stos
stos
aad
mov
sub
test
scas
dec
mov
addb
pop
loopne
sub
add
adcb
out
ja
inc
and
fadd
cmc
popa
mov
fildll
or
pop
adc
outsl
inc
lahf
jle
cmp
incb
loope
jae
push
les
ficomps
imull
bound
fldl
or
cmp
es
movsb
or
out
jge
gs
sbb
fistpll
push
push
pop
int3
add
add
mov
out
dec
dec
movsl
and
movsl
mov
jp
in
xor
aaa
sub
test
out
inc
pushf
sbb
dec
lods
not
xchg
in
loop
jg
lods
mov
dec
push
mov
shr
push
mov
cmp
fcmovb
inc
out
mov
cld
in
gs
lcall
inc
pop
xor
xchg
test
or
lock
int3
mov
mov
ljmp
push
idiv
cmp
shrb
xchg
xor
scas
push
rorl
or
push
dec
ss
cmc
mov
jecxz
and
dec
subps
sub
sbb
es
int3
inc
les
jns
lock
lock
or
mov
cmp
in
jbe
jbe
lahf
mov
mov
test
jecxz
xor
mov
pop
adc
cmp
mov
clc
jl
aaa
mov
roll
jl
mov
adc
sbb
fistpl
aaa
stos
ljmp
jg
movsb
mov
iret
jo
push
mov
cltd
popf
xchg
mov
jns
pusha
cmp
ret
in
rcll
into
sbb
jb
mov
and
push
orl
add
movsb
decl
repz
aas
adc
scas
insb
and
imul
or
fadd
fs
mov
push
pop
mov
jno
adc
add
rcrb
fistl
mov
pop
ss
iret
xchg
mov
jp
cmp
xchg
xchg
or
ljmp
sbb
lcall
cwtl
je
hlt
in
movsb
push
push
adc
shr
add
test
push
movsb
rep
inc
pushf
jecxz
cmp
repnz
mov
int
cli
and
lret
jb
imul
cmp
sbb
jns
es
je
scas
xor
add
push
adc
fbld
imul
xchg
pop
std
lds
pop
mulb
getsec
adcb
inc
sbb
in
dec
vphsubwd
int
xchg
lea
xor
pop
cs
add
in
ds
dec
mov
adc
packsswb
or
stos
sbb
inc
mov
mov
icebp
xchg
pop
adc
mov
dec
pushl
je
pop
orl
mov
sbb
movsl
add
sbb
lret
or
xor
xor
ret
add
xchg
inc
lret
cmp
insb
push
lods
cmpsl
into
insb
mov
addr16
nop
adc
insb
outsl
fmull
outsb
les
push
lock
fnsave
lret
push
xor
into
sub
pop
std
and
mov
sub
cli
jnp
ret
repnz
dec
cwtl
add
sarb
xchg
adc
xor
add
enter
into
popl
xchg
and
mov
mov
je
add
dec
das
jge
repz
pop
ss
dec
jmp
cmpsb
shll
cmp
addr16
pop
loop
lret
negb
mov
pop
jno
cmc
lods
insl
outsl
frstor
xor
inc
pop
and
and
arpl
xor
nop
or
test
sub
cmp
adc
add
fnstsw
cmpl
inc
add
sbb
push
scas
and
xrelease
mov
adc
outsb
int
popa
sbb
xchg
sub
xchg
popl
or
and
in
in
dec
movl
mov
pushf
ds
fists
rolb
and
pop
push
ja
int3
mov
inc
adc
push
fwait
cs
test
call
cli
mov
subb
jg
mov
sub
mov
loop
imul
movsb
jb
sub
adc
cld
adc
test
jl
xchg
jo
adc
mov
push
gs
pusha
sarl
sbb
ss
iret
jmp
sbb
pop
sarl
xor
push
push
negb
and
test
add
dec
lods
jne
call
and
mov
arpl
adc
cmp
push
fistl
loope
jo
lahf
dec
xchg
cmp
add
sti
add
ja
mov
or
sbb
pop
enter
mov
mov
xor
in
cld
push
dec
out
lods
mov
add
inc
aad
push
cld
mov
mov
rcrb
inc
mov
jmp
loope
mov
and
or
enter
lcall
sub
cmp
sbb
aad
iret
xchg
or
cs
mov
mul
or
popa
pusha
add
jno
push
stos
add
inc
cmpsl
xlat
adc
dec
movsl
sbb
push
push
fcoms
hlt
push
jp
es
stos
xchg
aad
xchg
nop
mov
lods
or
fwait
cmp
pop
or
in
adc
cmp
popf
sbb
jb
jae
and
push
cli
inc
lods
or
mov
xchg
jl
test
lea
pop
mov
int3
and
mov
mov
in
jg
pop
mov
mov
xchg
or
mov
and
mov
dec
dec
sbb
mov
xchg
movsb
int
lea
ss
pop
popf
pop
and
shlb
filds
data16
pop
repz
fidivrs
pusha
ss
sbb
iret
inc
repz
andb
pop
inc
pusha
aas
cmpsb
mov
cmp
je
sub
or
jmp
sbb
sub
jl
inc
jo
lea
add
ljmp
xor
repnz
xchg
fbstp
ja
mov
fwait
leave
xor
xchg
sarb
dec
mov
dec
push
jmp
jmp
jmp
or
mov
xlat
int3
adc
jae
shlb
ds
add
ljmp
or
sbb
sarb
rcrl
mov
iret
sub
out
or
ret
add
popa
faddl
dec
dec
mov
push
xor
sub
or
test
neg
scas
out
sub
mov
inc
xchg
loop
add
stc
mov
xchg
sub
pop
jmp
mov
add
sarb
lcall
pushf
sub
cld
sbb
mov
sbb
jbe
ja
or
in
mov
ss
adc
xchg
adc
xchg
loope
xor
push
mov
xchg
mov
stos
pop
and
mov
mov
lcall
xor
jae
mov
xor
pop
inc
xchg
inc
or
ret
xchg
mov
push
dec
les
cmpsb
sub
jae
lea
arpl
inc
sbb
cmp
and
inc
mov
repnz
mov
popa
push
or
cmpsl
iret
add
xorb
outsl
int
xchg
andl
mov
fisubs
dec
lea
mov
lret
pop
lcall
mov
dec
rorl
sub
in
lcall
mov
fs
jno
cmp
mov
push
sbb
lods
lock
sbb
fsubrl
or
imul
js
xlat
flds
sub
popa
fsubrl
stc
sub
int3
adc
nop
gs
and
lcall
shll
push
in
lods
pusha
push
movsl
mov
add
or
sub
cld
add
inc
inc
mov
xchg
jne
xchg
pop
test
in
xor
loop
lret
mov
add
pop
insb
popa
aam
xor
cmp
mov
loope
xchg
les
push
add
inc
mov
xchg
outsl
mov
subb
mov
dec
out
pop
int3
xchg
xlat
into
mov
jne
lret
push
jns
ret
xchg
call
fldl
pop
testb
sarl
inc
jl
push
fmul
movl
ja
dec
in
fnstcw
xor
addl
sub
xchg
push
aad
xor
push
mov
shll
add
cmp
test
int
test
fcoms
mov
mov
fsubs
imul
fisttps
cmpsl
add
jecxz
mov
repnz
cs
mov
dec
mov
dec
xchg
loopne
dec
xchg
in
enter
int
jns
in
pop
addl
jmp
fwait
push
add
insl
cld
xchg
push
xchg
inc
mov
xchg
sbb
cs
pop
in
push
mov
xor
or
rorb
mov
mov
mov
sub
xor
inc
and
push
inc
and
loop
test
jmp
cmp
sahf
push
mov
imul
xor
jle
sahf
movsl
mov
leave
or
loopne
rolb
jns
and
les
xlat
mov
arpl
sbb
cltd
lods
mov
mov
dec
clc
aam
cli
xchg
push
psubq
rclb
jl
sub
push
cmp
or
add
es
mov
sahf
add
f2xm1
aam
jbe
pop
and
mov
inc
scas
sbb
dec
std
and
mov
insb
sub
jae
jnp
xchg
adc
adc
cmp
adc
jno
inc
jns
pop
pop
mov
adc
sti
dec
mov
lahf
dec
mov
ret
xor
xchg
sbbb
out
jb
xchg
pop
cmp
cld
fildll
jae
sbb
hlt
or
shrl
xor
pop
push
ret
popf
adc
mov
cmp
jg
inc
imul
or
or
xor
mov
add
inc
mov
cmp
push
inc
add
and
sbb
ret
cmp
or
shll
icebp
out
pop
jecxz
iret
js
into
push
cmp
xor
and
inc
stos
pushf
push
fildl
adcb
in
clc
and
ret
xchg
test
roll
push
pop
sub
adcl
mulb
add
mov
xor
imul
cld
sets
scas
lds
insl
lea
xor
push
adc
mov
pop
sub
jns
or
dec
insl
jno
lcall
xlat
insb
xor
popa
outsl
push
add
push
insb
pop
jo
addb
mov
aam
jl
pop
leave
jne
sarl
mov
hlt
inc
adc
add
jle
iret
movsl
lret
mov
neg
pop
mov
ja
dec
or
jg
fdivl
push
push
jo
xchg
mov
mov
add
pop
leave
insl
push
outsb
mov
test
mov
jle
pop
data16
dec
nop
in
repnz
int3
add
mov
data16
scas
mov
ficomps
cmp
push
aam
lds
movsb
outsl
pop
jae
pop
cwtl
jnp
lahf
aam
out
mov
stos
inc
cmp
add
or
xor
or
xchg
xchg
ljmp
pop
jp
jae
sub
cmp
out
pushf
jge
popa
dec
adc
aas
loope
out
fmulp
scas
cmp
jns
pop
das
fisttpl
xchg
sub
dec
sarb
lods
rcrb
fdivrl
movsl
rorl
xor
in
and
das
jnp
ss
divl
sbb
or
loope
mov
cmp
jp
aam
dec
ss
push
inc
adc
popf
les
dec
mov
stos
jne
stos
inc
repnz
daa
fistl
push
lock
js
enter
fcmovnbe
imul
aas
test
fisttps
jae
dec
cmp
js
icebp
push
ret
jae
movsl
pop
lock
test
or
pop
sbb
iret
adc
mov
dec
je
jns
add
inc
jl
add
rorl
adc
add
loope
aad
in
jb
pop
cmp
jns
sbb
int3
mov
mov
pop
mov
cmp
pop
dec
sub
dec
cs
xor
pop
ret
pop
cmp
pop
adc
in
js
sub
leave
pushf
int
gs
lahf
xchg
and
inc
sbb
or
sti
sub
sti
test
mov
adc
ret
sbb
mov
in
xchg
out
mov
mov
bound
cli
add
xchg
inc
shlb
enter
and
mov
push
push
mov
pop
dec
hlt
movsb
cmpsl
add
aas
xchg
dec
pusha
or
fsubrl
inc
xor
aas
adc
or
cmp
fiadds
mov
pop
push
sbb
add
repz
mov
xorb
lahf
xor
and
repz
dec
pushf
hlt
cmpsb
adc
stos
cmp
fwait
xchg
in
ret
dec
lds
jecxz
test
clc
mov
push
lret
rol
inc
pop
lods
repnz
dec
xchg
xor
sub
fincstp
nop
adc
add
shll
xchg
repz
sbb
lret
mov
das
and
mov
in
or
gs
mov
adc
sub
and
sbb
add
or
add
mov
mov
fisttpl
sbb
push
push
pop
ljmp
inc
mov
call
into
mov
ljmp
cmp
fisubs
xchg
ljmp
cmp
mov
scas
push
stos
testl
imul
cmp
scas
pop
cmp
adc
cs
mov
sbb
ds
push
and
loope
push
test
push
xchg
push
mov
mov
sti
aaa
fistps
and
dec
lcall
cwtl
js
push
push
ror
mov
mov
mov
dec
cmp
movl
ljmp
inc
push
pop
fsubs
xchg
sbb
shrb
sub
les
mov
mov
nop
mov
jae
test
hlt
mov
and
es
xchg
mov
cmp
adc
jne
jns
clc
cmpsb
and
loope
jg
cmp
cmp
test
mov
insb
lock
jmp
sarl
bound
push
jo
cltd
push
mov
iret
xlat
movsb
sbb
std
repnz
bound
adc
pop
lea
sbb
out
ret
or
hlt
push
imull
arpl
mov
jne
inc
jne
mov
fwait
pop
stos
jns
mov
cmp
mov
cmp
cs
arpl
sahf
cmp
movsb
mov
pop
fnstcw
mov
mov
xchg
xor
mov
jp
cmpsb
adc
xor
jge
mov
mov
xchg
iret
adc
ss
ret
mov
lret
insb
sbb
mov
and
das
shlb
push
hlt
ds
xor
push
nop
ror
jns
shlb
loopne
mov
xchg
xchg
cld
push
jbe
int
mov
mov
scas
mov
into
mov
inc
or
sbb
loop
loope
jle
imul
cld
pushf
sbb
add
mov
or
imul
gs
pop
xlat
cwtl
out
imul
jg
xchg
mov
mov
dec
xchg
push
cmp
cmpsb
and
mov
call
data16
push
jne
pop
stos
daa
insl
mov
leave
xchg
xchg
mov
or
or
inc
add
jbe
push
xchg
sete
sarl
push
popa
das
popf
lret
pop
loop
mov
mov
push
jns
out
jp
mov
mov
adc
in
xor
cwtl
fstpl
out
and
sbb
rclb
test
inc
jmp
xor
ja
inc
out
orb
mov
ret
or
imul
iret
pop
ds
or
ret
pusha
adcb
pop
std
adc
push
imul
stos
test
lea
movsb
mov
inc
andl
jle
xor
xchg
andb
xchg
mov
aad
lret
in
mov
cmp
jno
sub
push
xlat
cmp
push
test
or
int3
ljmp
push
cmp
notl
enter
cmp
jbe
fldenv
mov
mov
cltd
mov
xor
mov
data16
pop
in
pusha
das
and
cmp
sahf
mov
mov
adc
pop
jno
shrb
xchg
cs
add
lcall
test
sahf
push
mov
dec
cmc
out
dec
or
faddl
add
out
inc
mov
insw
mov
shl
int3
ror
cmp
xor
cmp
cld
mov
dec
mov
dec
insb
push
dec
sub
and
mov
daa
or
stos
jbe
loopne
sbb
aaa
cltd
outsb
push
jmp
fsub
pop
mov
push
lret
add
outsb
clc
mov
ficoml
mov
repnz
enter
cld
fisttpl
rcrl
int
mov
push
sbb
add
push
sarl
jmp
popa
xchg
jmp
movsb
and
push
cmpl
data16
xor
push
inc
push
push
pop
and
lds
xchg
insl
pop
fsubl
inc
pop
or
wbinvd
push
fcoms
gs
mov
pop
fbstp
movb
ss
ljmp
sub
shll
mov
popa
adc
xor
into
out
orb
les
mov
dec
movzwl
jge
data16
cmpsl
popa
jns
mov
xchg
cmp
fwait
rclb
sub
cltd
test
xchg
fidivrl
mov
inc
clc
js
cli
mov
xor
mov
sbb
mov
and
lock
lds
dec
xor
fsubl
push
or
sub
sub
inc
add
lret
imul
jae
jae
aaa
popa
std
inc
repz
data16
stos
mov
or
pop
jbe
ret
dec
mov
mov
push
test
rorl
cmpsb
cs
rclb
outsb
lret
stos
adc
jns
inc
xchg
mov
gs
and
dec
shl
daa
call
bnd
sbb
lahf
in
icebp
jbe
push
adc
daa
mov
push
jecxz
in
int3
cli
or
inc
je
jmp
ds
adc
mov
push
cmp
out
in
lea
push
jb
jmp
ja
sti
pop
xchg
enter
adc
test
ficoml
shll
xlat
sbb
ja
push
sbb
mov
inc
ret
test
push
xor
pop
cs
int3
xlat
mov
hlt
fcoml
add
xor
lods
jae
lahf
inc
sbb
xchg
mov
fstl
cmp
scas
fdivl
roll
push
jl
dec
pop
mov
ret
in
ret
out
jge
es
push
pop
test
cld
movsl
sub
std
les
int3
testb
sarb
inc
mov
lods
cwtl
adc
cmp
mov
popa
pop
ss
pop
fbstp
fwait
xor
shrl
loop
movsl
outsb
jmp
or
sbb
mov
pushf
bound
adc
inc
rclb
call
clc
loop
adc
pushl
int3
push
add
das
cld
flds
or
popa
aaa
and
mov
std
inc
xchg
xchg
iret
js
or
mov
fsubrs
into
aad
and
out
addr16
scas
fcompl
gs
jbe
jle
xor
inc
fdivrl
mov
sub
sbb
lods
sub
sub
outsl
and
les
adc
push
enter
das
xor
or
mov
sub
lock
inc
push
xor
adcb
lods
cmp
xlat
sahf
sub
fiadds
push
xchg
push
mov
push
gs
pop
aas
stos
xchg
loop
cmpb
mov
movsl
arpl
inc
rorl
and
jbe
dec
inc
arpl
mov
ds
mov
pop
jecxz
jb
subb
cmpsl
lock
mov
mov
push
xchg
lcall
pop
dec
xchg
xchg
or
das
out
xor
and
pop
movsl
inc
mov
mov
sbb
pop
leave
xor
lret
jb
mov
or
inc
mov
sub
adc
lods
jecxz
sbbl
dec
and
lahf
sub
jb
rcrb
push
cmp
sub
adc
shl
pop
mov
icebp
push
jl
jns
pop
rclb
sub
arpl
lret
fdivrl
mov
and
iret
fdivrl
mov
cmp
and
sar
adc
data16
imul
gs
or
int
mov
ljmp
sbb
mov
lcall
add
jnp
jae
jmp
inc
shlb
stos
and
lret
jg
cmpsl
repz
je
cmpsl
nop
adc
sbb
lahf
xlat
pusha
and
orl
xor
add
dec
and
dec
jnp
rcr
sbb
scas
cmp
mov
dec
jnp
imul
push
mov
in
pop
fs
ret
inc
push
cld
mov
insl
bound
ficoms
push
inc
mov
sahf
inc
mov
push
repnz
xor
stos
fcmovne
rcr
arpl
mov
out
mov
iret
lods
xor
push
addr16
and
sub
test
iret
lret
loopne
hlt
sbbl
jg
jp
rcrl
fdivl
pop
add
outsb
dec
pop
or
pop
call
int3
push
shrb
add
cmp
popa
in
fstpt
adcl
mov
jns
mov
pusha
incb
pop
xor
xchg
add
pop
xor
push
out
sahf
inc
xchg
jge
or
mov
andb
loop
and
push
xorl
call
xlat
bswap
xor
in
aas
jbe
inc
lahf
xchg
xchg
jo
inc
push
in
ret
sub
mov
and
ficomps
dec
mov
fwait
adc
clc
out
sub
dec
push
loopne
std
stc
out
mov
jno
cmp
cli
sbb
movaps
jg
mov
dec
out
mov
ljmp
je
test
adc
test
adc
jae
out
ss
inc
aam
aas
fadds
add
push
mov
or
and
sti
loope
mov
jns
stos
je
fstps
xor
sbb
lahf
sub
and
jne
and
xchg
mov
icebp
pop
xchg
mov
addl
lods
sub
xor
cmc
mov
je
int
push
sbb
movsl
jle
xorl
cmpsl
xor
movsb
sarl
outsl
fs
mov
jae
shrl
imul
pcmpgtd
sbbl
lds
sbb
inc
jns
cld
mov
adc
xchg
lahf
stos
sbb
and
inc
dec
mov
fisttpll
repz
xor
lock
push
into
xor
push
and
add
js
push
fwait
scas
cli
ds
xor
ss
mov
sub
cmpsb
adc
mov
stos
clc
mov
adc
cwtl
cld
rorb
mov
sbb
xor
push
in
loopne
push
mov
test
mov
ss
scas
xor
jmp
add
sbb
and
stos
mov
pop
xchg
mov
lret
mov
sub
xor
mov
mov
jo
pop
test
mov
popf
pop
dec
dec
mov
or
push
push
shll
lret
pop
cwtl
mov
test
mov
das
iret
dec
out
ljmp
push
sahf
mov
adc
in
xchg
pop
adc
add
out
dec
scas
fs
jo
xor
push
dec
sbb
ds
mov
xchg
dec
out
jmp
mov
mov
jbe
lods
subl
push
leave
iret
mov
mov
ss
cmp
adc
mov
iret
mov
test
stos
sbb
aam
lahf
in
push
mov
ljmp
jns
dec
in
out
daa
jp
and
repnz
mov
ds
je
sub
insb
mov
popf
dec
icebp
dec
in
mov
cmp
in
aam
xor
cltd
add
mov
fnstcw
xchg
dec
lods
scas
pushf
pop
ret
arpl
fstps
adc
ret
aaa
pop
sub
mov
adc
lods
test
dec
push
ss
mov
adc
pop
daa
je
and
cltd
cmc
mov
addr16
jmp
ja
jnp
adc
pslld
inc
dec
mov
rol
lock
inc
roll
in
pop
adc
imul
out
lret
mov
imul
sub
or
dec
pushw
xchg
push
pop
shll
dec
dec
sub
lcall
call
jle
xlat
xor
push
pushf
lods
add
cmp
subl
lock
mov
push
pop
mov
xchg
inc
dec
imul
mov
mov
mov
mov
dec
inc
andl
sti
test
addl
imul
adc
adc
andl
aas
gs
cmp
xchg
icebp
ror
jl
aaa
call
test
lcall
mov
mov
or
mov
mov
inc
out
je
inc
mov
inc
scas
jmp
push
lret
mov
popa
pop
ret
jmp
int
push
and
fs
dec
push
pop
movsb
in
daa
fnstcw
or
jg
push
mov
mov
out
lcall
sub
fisubs
popa
nop
das
inc
ss
push
mov
mov
imul
das
xchg
subb
aad
jl
scas
or
test
jae
adc
xor
xlat
int3
dec
jge
inc
mov
fmuls
xchg
pop
hlt
jp
addl
insl
adc
icebp
nop
call
arpl
ret
dec
std
pop
lds
sbb
stos
dec
pop
shl
fcompl
insb
mov
and
bound
repz
aas
leave
ret
mov
cwtl
xorl
push
mov
jne
jno
adc
jl
mov
fcmovu
lock
enter
inc
lahf
rcrl
mov
iret
jge
gs
dec
cmp
rol
popa
das
xchg
pop
and
ret
xchg
push
sbb
inc
and
add
mov
ret
in
test
in
pop
mov
aas
pop
lea
push
mov
movl
xchg
jmp
jns
mov
aas
push
jns
pop
pop
insl
cmpl
test
std
out
dec
js
std
push
daa
add
popa
in
sub
jp
scas
jno
enter
or
es
add
or
sub
push
loope
dec
rol
pushf
or
lcall
jg
cmpsl
push
cmp
fs
mov
loopne
adc
arpl
stc
xchg
xor
das
mov
lcall
montmul
imul
jo
mov
andb
ret
das
pushf
push
shl
cmp
push
call
data16
clc
loopne
sbb
cmp
xchg
cmp
xlat
pushf
fnsave
jne
mov
sbb
xor
cwtl
inc
jne
lret
imul
cwtl
nop
shlb
push
adc
out
xchg
xchg
push
scas
xchg
jl
lods
test
inc
sub
mov
mov
sub
sub
cmp
test
and
fwait
dec
xchg
lea
cmpsb
jle
mov
test
sub
xchg
pop
jg
adc
sub
test
lea
xor
add
jge
push
repnz
stos
mov
jb
xchg
cmp
aad
mov
ret
iret
test
jo
bound
cli
fnsave
out
out
or
mov
aam
fdivl
cmpb
jb
push
and
icebp
pop
cwtl
inc
sbb
loopne
cmp
mov
fwait
imull
dec
popa
and
loopne
pop
pop
fnsave
into
aad
pop
jne
cltd
mov
daa
enter
out
jno
jmp
sub
imul
jo
fsubrl
int3
ficoml
les
mov
frstor
xchg
fwait
cmp
push
mov
insb
ficompl
mov
sbb
add
cmc
aam
jae
lods
fdivr
addr16
xor
out
lret
pop
fdivrs
pop
jnp
cmpsl
cltd
adc
push
jmp
popa
lahf
lods
test
xchg
push
nop
leave
movsb
pop
das
mov
sub
or
stc
pop
scas
pusha
sbb
adc
sub
lcall
fmuls
mov
or
xchg
scas
pop
out
ljmp
insl
pop
or
inc
mov
or
ss
inc
xor
cld
lods
pop
push
sbb
jae
cmovno
faddl
or
add
add
arpl
sub
call
clc
mov
inc
jae
cmpsl
sbb
inc
push
push
std
jb
imul
cmpsb
jne
shll
pop
loope
dec
repz
sar
sbb
in
jecxz
cmpsl
lahf
pop
repz
mov
mov
loop
jne
sub
iret
mov
mov
jge
cmpsl
lock
cmp
ret
lods
push
mov
xchg
jp
inc
and
mov
frstor
cmpsb
add
cmpsb
jmp
fdivs
repz
adc
js
ss
lock
cmp
add
bound
roll
push
adc
shrb
call
mov
test
lret
es
aam
lods
and
fistpll
int
ret
cmc
loope
sub
cwtl
lea
sbb
rorb
aad
or
mov
xchg
and
bound
adc
fcoml
call
fcomp
mov
bound
test
lcall
int3
mov
psubq
and
nopl
idivl
push
push
add
or
push
aaa
hlt
loop
js
in
add
mov
mov
xchg
test
leave
int3
mov
data16
cmp
ljmp
aas
inc
lods
mov
movsb
pop
bound
icebp
jge
mov
scas
repz
std
dec
pop
jno
and
ja
scas
and
pop
mov
mov
jp
and
cmp
mov
cwtl
insl
stos
ja
sbb
shrl
and
xchg
push
scas
xor
xor
jmp
xchg
cmp
rolb
dec
push
js
and
hlt
push
mov
pop
sahf
and
into
dec
int3
jo
test
mov
ss
out
sbb
cmpsb
dec
push
dec
adc
push
mov
xor
arpl
sbb
mov
aam
cmp
pop
pushf
ljmp
push
pushf
iret
xor
or
add
dec
int
push
add
add
mov
in
push
add
repz
push
sbb
scas
lods
xorb
push
and
inc
repz
out
ret
push
ret
in
add
jl
aaa
inc
fs
rcrb
out
roll
pop
mov
pop
pop
add
notl
adc
sti
out
lock
push
ss
rolb
test
inc
jmp
ljmp
lods
or
outsl
jo
loope
and
mov
mov
or
jle
orl
js
lret
cmp
cmp
jle
lods
add
sbb
cli
cld
inc
and
inc
jge
ja
jbe
gs
push
jb
out
mov
push
jne
jecxz
xor
and
in
and
dec
dec
and
or
inc
sub
sbb
sbb
adc
jmp
sub
jp
lods
stos
or
fwait
jbe
mov
pop
lret
xor
mov
mov
std
mov
inc
mov
aad
mov
ret
sbb
rcl
xchg
outsl
mov
cmc
incl
loop
mov
fstpl
outsl
sbb
push
lock
nop
mov
or
push
adc
lods
sbb
loope
mov
xor
add
in
sub
mov
out
js
icebp
pop
xchg
push
mov
les
shll
mov
mov
push
mov
mov
push
push
cwtl
sbb
outsb
sarl
icebp
fdivrp
aas
pop
and
lds
push
mov
mov
addr16
pop
addr16
scas
mov
and
cmp
sbb
cmp
dec
sub
lcall
subl
cs
mov
xor
add
pop
pop
add
mov
mov
std
jmp
cmp
xchg
je
dec
mov
fdivrs
mov
mov
orl
mov
and
mov
pop
or
adc
loop
inc
das
rclb
ret
mov
addr16
pop
sbb
ds
jbe
nop
cld
adc
les
gs
insl
cmpsl
sets
ret
stos
cmc
dec
fdecstp
mov
nop
gs
push
pusha
aam
dec
sub
test
cmp
or
add
and
add
fnstenv
sub
arpl
fwait
test
call
out
jnp
cltd
iret
out
and
sub
dec
out
jne
out
neg
add
xor
mov
adc
fisubs
pop
insl
inc
inc
dec
cmp
daa
mov
mov
pop
fistps
jno
fs
mov
arpl
popa
sbb
ret
sbb
dec
sbb
push
out
cld
insb
fstl
into
pop
ds
addr16
inc
pusha
and
push
scas
repz
push
cmp
and
stc
cmpsb
ret
popf
mov
xchg
imull
push
push
aas
enter
jl
mov
nop
mov
xchg
xchg
outsl
jl
scas
pop
shl
mov
xchg
adc
adc
inc
mov
aaa
pop
or
inc
pop
sub
movb
outsb
dec
pop
aam
lock
pop
xor
scas
and
jg
jle
fnsave
mov
cmp
inc
movsb
nop
out
xchg
iret
xchg
jge
inc
jg
dec
push
add
fsub
sub
mov
jns
stc
push
rol
and
aam
xor
das
aad
mov
shrd
dec
pusha
stc
cmpsb
pop
sub
push
in
sahf
test
std
xor
push
outsb
gs
and
add
push
jmp
and
mov
and
mov
stc
imul
arpl
popf
or
popf
scas
mov
dec
sbb
imul
mov
cli
pop
pop
insl
idiv
or
and
xlat
push
fidivl
sbb
pop
jmp
push
fmull
das
xor
inc
xchg
lret
dec
push
nop
clc
fwait
xor
test
ret
jp
sahf
mov
out
jne
lahf
inc
cmpl
push
repz
mov
xchg
adc
mov
xchg
inc
sub
push
mov
lds
push
xchg
aas
cmc
or
loopne
xlat
enter
movsb
cmpsb
sbb
out
push
loopne
or
lcall
push
add
iret
je
repnz
test
dec
mov
dec
and
adc
mov
dec
int3
lds
or
sub
in
leave
je
movsb
cltd
lods
cmp
stos
jl
dec
xchg
xchg
pop
xchg
mov
sbb
sub
inc
dec
add
call
sub
sub
pop
adc
sbb
jae
xor
or
mov
and
cld
adc
ucomiss
enter
imul
cmp
scas
cmpsb
negb
hlt
mov
mov
cmpsb
loope
cltd
pushf
int
cmp
pop
inc
mov
inc
scas
pop
negb
xchg
or
int
push
sbb
faddl
pop
jmp
push
cmpsb
jae
popf
lods
in
das
sub
popa
xor
pop
mov
stc
fstpl
out
push
iret
or
push
inc
les
testl
mov
mov
jae
inc
adc
or
xor
fmuls
sbbb
popf
or
or
xchg
mov
jge
push
mov
scas
int
push
clc
iret
add
sbb
cwtl
or
push
jmp
mov
adc
mov
push
jmp
and
jle
adc
xor
jne
mull
sahf
and
pop
subl
pop
outsb
xchg
ljmp
dec
int
mov
popf
xor
push
arpl
rcl
mov
mov
aam
cmp
xor
mov
push
bound
xor
sbb
mov
mov
add
out
mov
jge
fs
adc
adc
out
movsb
or
mov
in
pop
mov
adc
fstl
push
lds
pop
mov
lea
jnp
out
movsb
mov
lahf
rorb
cltd
fadds
movsl
fnstenv
iret
dec
enter
sbb
mov
popa
sub
inc
lahf
test
fildll
scas
jae
inc
and
inc
add
jo
fistl
sub
mov
sbb
or
loope
pop
jb
xchg
sbb
and
jnp
ja
xor
les
aaa
sub
dec
in
push
stos
jle
push
fadd
fidivrs
ja
or
fwait
bound
and
push
dec
sub
test
imul
jmp
repz
hlt
loopne
jle
jno
adc
jl
in
mov
inc
jne
je
sbb
push
jbe
mov
jmp
cmp
xor
das
xchg
or
pop
test
mov
in
jae
inc
gs
ja
mov
imul
push
adc
out
fisubs
sti
jmp
add
and
add
sub
jle
push
fs
mov
pop
leave
mov
jle
jnp
test
add
daa
repnz
data16
inc
jnp
push
notl
inc
shrl
pop
push
insb
fwait
and
test
mov
push
mov
mov
mov
sbb
sbb
dec
jae
mov
mov
nop
js
cmp
shll
cmc
sub
movsl
nop
cmp
scas
sub
pop
inc
mov
and
sub
std
and
inc
and
pop
jnp
sbbl
mov
xor
adc
lret
into
add
mov
cmp
jb
fisubs
jp
stos
and
sub
subl
mov
jp
mov
jp
jge
jmp
mov
pop
popa
cltd
lods
mov
scas
push
icebp
mov
pop
mov
arpl
out
dec
or
sti
pop
mov
sti
pop
adc
in
pusha
jecxz
add
mov
int
adc
cmp
xchg
outsl
imul
lock
rcrb
pop
lahf
push
xor
cli
and
add
add
and
inc
sub
mov
jp
inc
pop
test
pop
mov
sub
data16
xchg
push
ss
xchg
das
pop
jnp
push
or
mov
cmp
add
mov
push
inc
shrb
shlb
scas
pop
and
jbe
arpl
jmp
lods
sub
and
cmc
scas
inc
fiaddl
mov
stos
sbb
mov
jb
movl
jg
inc
je
sbb
das
ds
xlat
shl
sbb
cltd
ret
jo
lahf
in
inc
xchg
xor
adc
pop
movsb
xor
out
repnz
lret
mov
pop
lahf
mov
mov
cmp
inc
mov
sbb
je
inc
inc
cmpsl
daa
pushf
add
adc
insl
insl
mov
xchg
clc
leave
div
xor
lahf
lret
aad
insl
mov
imul
push
mov
push
xchg
fcoml
sbb
xchg
pop
les
je
mov
lock
mov
pop
and
fnstsw
and
stos
inc
cmp
popf
dec
push
jb
insl
lahf
push
stc
pop
xor
loop
fimuls
stc
push
test
rcl
and
dec
dec
push
cmp
test
sarb
popf
fwait
int3
adc
mov
ficoms
add
and
or
outsb
cmp
xchg
mov
leave
cmp
pusha
ja
mov
out
out
and
lods
or
mov
outsb
scas
sbb
fldl
loopne
xor
sub
ret
mov
xchg
and
dec
xchg
inc
sub
cmp
hlt
imul
sbb
int3
mov
std
inc
or
ds
lahf
mov
sbb
mov
dec
jb
iret
std
dec
mov
jne
dec
mov
loop
cmp
cmpsb
test
pop
mov
sub
mov
or
lret
sub
or
pusha
push
hlt
dec
daa
insb
cmp
mov
mov
mov
and
movsb
incl
in
mov
sub
rcll
pop
movsb
pop
jmp
fdiv
sti
push
movsb
sbbl
ds
cmp
out
mov
gs
pop
push
sub
pop
aas
push
push
mov
mov
mov
mov
arpl
cld
jb
imulb
out
xor
shrl
pop
and
testl
mulb
daa
aam
jo
xor
outsb
mov
dec
sbb
sub
push
push
sbb
xor
lcall
jnp
sub
xchg
outsb
sbb
sbb
sub
fwait
pop
dec
push
and
popf
mov
cmp
in
rol
popa
sbb
inc
or
push
and
pop
inc
imul
xor
lret
mov
or
xchg
push
std
mov
mov
adc
xchg
icebp
mov
stc
pop
pop
call
and
jg
dec
cltd
and
aam
lret
popa
insl
jg
cli
add
sbb
orl
xchg
fs
mov
mov
and
cmp
ret
jg
or
jg
jno
sub
pop
div
pusha
daa
add
loopne
ror
mov
loopne
or
mov
mov
es
sub
push
mov
sbb
and
dec
lods
std
dec
mov
and
enter
add
jecxz
or
ret
pop
loopne
leave
andl
jecxz
cmpsl
sub
jg
stos
dec
ja
dec
div
out
std
jb
es
fnstsw
sbb
repnz
mov
notb
cwtl
jmp
mov
ss
adc
xor
push
dec
mov
lcall
ret
pop
push
or
sbb
dec
xchg
jae
jl
jbe
fsts
jo
sbbb
add
add
sbb
inc
jne
ljmp
lahf
cmp
lods
sub
mov
xor
pop
push
mov
repz
fistps
pushf
loopne
xchg
xchg
lds
cmp
dec
pop
add
jmp
mov
inc
movsb
popf
xor
jbe
lret
and
push
mov
iret
xor
mov
sahf
sarl
mov
in
or
or
sbb
xchg
out
subl
out
int3
lods
mov
xlat
pop
push
sti
or
inc
mov
mov
test
dec
mov
push
mov
inc
dec
lea
mov
push
add
jle
pop
dec
movsl
xchg
sub
adc
push
fs
or
jmp
pusha
mov
inc
mov
push
push
push
fadds
loop
int
xorl
loopne
js
add
stos
aam
dec
cld
les
xchg
xlat
divb
bound
mov
mov
xchg
pop
add
mov
ret
adc
gs
gs
xchg
pop
mov
movsl
ja
cmpsb
mov
popa
ss
popa
imul
mov
out
ljmp
jp
and
repnz
jl
insb
inc
mov
lods
mov
adc
sub
jmp
jl
jp
sbb
das
rcll
jne
push
jo
sub
cmp
pusha
jle
std
je
pop
sbb
andl
and
into
mov
aam
push
xor
std
mov
and
aaa
inc
mov
mov
fdivr
jmp
xchg
repnz
adc
popl
icebp
jbe
adc
fwait
push
testl
push
popf
push
mov
sub
enter
adc
sub
pop
out
pop
xor
les
mov
dec
addr16
sbb
mov
dec
add
test
xchg
pop
idivb
icebp
cmpsl
andb
adc
aam
into
xchg
es
imul
mov
and
stc
bound
pop
pop
and
sbb
dec
into
xor
loop
sub
lock
movsl
and
lahf
and
imulb
inc
mov
cmp
xor
pop
mov
sub
insl
sub
call
fs
jne
push
sbbl
add
addr16
ja
ffreep
bound
push
sub
jle
add
and
in
icebp
imulb
int
in
xchg
call
mov
fildl
and
fistl
fisubrs
and
xchg
push
push
cmp
mov
jo
mov
cmc
adc
cmc
inc
sbbl
or
insl
xchg
test
in
js
or
pop
inc
xchg
daa
fisubrl
out
sbb
adc
xor
popf
sub
subb
insl
movsb
push
icebp
jl
xchg
xchg
push
inc
sub
xorl
iret
cmp
aaa
and
ficomps
sti
dec
cmp
mov
std
rorl
mov
out
lret
clc
fstps
jnp
dec
sub
lods
fsubs
fisttps
gs
fwait
sbb
push
and
sbbl
adcb
dec
rcr
push
adc
mov
repz
fstl
lock
push
xor
jns
or
pushf
shr
jne
lret
movsb
or
lret
into
out
movsb
mov
ja
sti
and
and
jmp
push
push
jb
push
out
int
rclb
and
push
dec
ret
push
lock
pop
mov
cmpsb
outsb
push
jmp
ror
push
aas
fnsave
rep
pop
add
inc
in
push
fucomp
pop
or
arpl
mov
jecxz
lret
inc
test
fwait
cmp
jle
in
cmpb
inc
lds
dec
movsl
shll
inc
sbb
cmpsl
cmp
and
inc
jns
add
cmpsb
jne
dec
loop
mov
out
inc
sub
mov
stos
mov
js
mov
pop
out
nop
je
mov
insb
sbb
xor
movsb
xchg
mov
cltd
and
int3
xchg
hlt
or
or
xchg
adc
mov
pop
lahf
adc
into
mov
fstpl
fwait
mov
pop
xor
push
add
cmp
fisubrl
cmp
data16
out
sub
dec
xor
lods
push
dec
lods
xor
and
inc
xchg
movsl
push
pop
push
push
in
mov
cltd
mov
stos
sub
leave
sub
mov
jnp
dec
mov
leave
divb
xor
cld
sbb
sti
cmp
inc
rcll
pop
xchg
push
mov
aad
cwtl
arpl
mov
into
push
sub
mov
arpl
fucomi
xor
cwtl
or
fsts
sbb
mov
gs
push
cmpsl
fisttps
lea
and
add
cmp
mov
push
ret
sbb
sbbb
jne
aas
rcrb
ret
stc
jp
xor
push
xchg
mov
in
sub
mov
dec
mov
push
out
sub
dec
sub
test
xchg
add
inc
inc
xor
xchg
or
int
iret
mov
in
outsb
xchg
mov
cs
fcmovnbe
sub
jl
imul
lea
adc
or
imul
sbb
rcl
fstps
pop
dec
test
inc
adc
jnp
and
pop
and
sbb
dec
rorl
or
call
dec
inc
aas
fisttpll
xor
sub
xchg
sbb
push
sub
pushf
movsb
lds
dec
pop
cmp
jne
jno
sub
and
cmc
test
mov
xchg
sub
subl
ss
cli
mov
adc
xchg
test
lods
sbb
jbe
test
ret
pop
mov
mov
sub
xchg
mov
std
inc
mov
pushf
enter
out
sub
and
xor
ds
add
pop
add
push
sub
mov
cmp
mov
push
pop
cmp
mov
mov
mov
sarb
fistpl
sub
dec
jg
in
lcall
cmp
iret
xchg
rcr
stc
gs
and
pop
dec
inc
test
adc
lahf
inc
sub
shll
pop
jle
jle
data16
outsl
stos
arpl
cmp
hlt
stos
out
pop
insb
mov
bnd
lahf
jno
dec
lcall
jno
lret
pop
push
bnd
call
inc
adcl
call
inc
mov
lods
aaa
je
subl
test
sbb
ret
clc
cmp
dec
iret
negb
andl
imul
imul
cmpsl
cltd
sub
in
fisubl
jg
mov
sbb
mov
cmp
jo
popa
dec
add
movl
xchg
push
aad
iret
imul
mov
je
stc
std
sub
in
xor
sbb
mov
das
fucom
imul
int
push
xchg
mov
or
inc
mov
aam
lahf
test
sarl
ret
dec
mov
pop
sub
loop
mov
jecxz
movsb
sahf
fildll
add
xor
jg
pushf
loopne
fimuls
add
mov
push
xchg
loopne
les
bound
mov
cmp
neg
mov
sub
addr16
push
xor
cmp
and
mov
xchg
stos
adc
into
cmp
and
lcall
xchg
and
push
and
jns
dec
idiv
cs
sti
jb
fldcw
cmpb
mov
add
int3
in
xchg
inc
popf
mov
aam
repnz
push
shrl
ret
ret
lret
fdivl
addr16
ja
pushf
out
push
adc
mov
cmp
je
sub
mov
out
add
inc
xchg
ds
cmp
jno
nop
popa
cmpsb
lods
mov
sub
jmp
pop
cli
dec
push
xchg
mov
jns
dec
adc
jbe
mov
cmpsb
repz
scas
hlt
ljmp
or
les
aam
dec
mov
mov
dec
movsb
out
jb
adc
repz
lahf
push
sbb
sub
pop
clc
andb
iret
pop
ficoml
std
jo
mov
ds
xor
xor
sub
pop
iret
dec
mov
sbb
sbb
sbb
lea
cmp
sbb
jg
add
std
imul
fidivs
push
ja
add
add
cwtl
outsb
or
mov
inc
fnstenv
mov
aam
add
mov
out
je
dec
sbb
sarb
mov
scas
cmp
fadds
push
jge
adc
in
pushf
test
outsl
fidivs
imul
lahf
mov
mov
scas
das
pop
imul
leave
sub
jbe
add
sub
test
in
add
idivl
imul
shlb
les
push
in
sub
lods
push
lods
aaa
mov
jnp
mov
hlt
sti
in
sub
adc
lret
lods
mov
les
pop
lahf
aaa
xor
in
lcall
and
in
call
and
dec
mov
mov
sahf
scas
mov
pop
add
or
data16
arpl
adc
inc
lock
push
dec
jb
aas
push
mov
jnp
test
xchg
imul
xor
inc
in
adc
lea
xchg
lcall
pop
pop
leave
out
cmpsb
pop
in
push
sbb
mov
mov
mov
aad
lds
int3
movsl
jnp
in
inc
mov
lret
sar
mov
jle
push
movsl
in
or
mov
icebp
cmpsb
mov
dec
jp
mov
jle
push
test
dec
clc
mov
sarb
stc
jmp
jle
lds
mov
insb
push
cmp
outsl
mov
cwtl
out
test
loope
xor
xchg
inc
popa
repz
xchg
adc
cmp
jbe
clc
out
pop
inc
adc
and
xor
jge
rorb
cmp
lahf
cli
jle
jl
divb
xor
popf
gs
push
cmp
xchg
cmp
mov
jg
cli
lods
jg
leave
aad
test
xchg
ss
outsb
and
inc
push
iret
adcl
loop
movsb
adc
xor
add
movsb
arpl
loope
stos
add
sbb
jnp
pop
stc
gs
pop
iret
fdivs
mov
into
sbb
and
fdivp
jns
out
jno
sbb
das
lock
fbstp
shrb
movsb
fwait
cmc
sub
icebp
dec
scas
mull
in
sbb
neg
pop
les
xchg
and
xor
sbb
and
adc
add
pop
xchg
and
in
xor
enter
xor
lret
mov
push
out
mov
repnz
movsl
xchg
mov
test
push
sub
rcl
pop
add
lea
mov
add
cmp
add
cmp
push
int
xchg
cwtl
popa
add
jg
xor
push
inc
fiadds
and
div
xchg
xchg
add
hlt
jecxz
xchg
mov
adc
ss
scas
lea
push
cmp
pop
push
aad
or
pop
hlt
sbb
ljmp
sub
fildll
sbb
shlb
mov
aaa
mov
cmpsl
cs
push
jno
pop
test
and
movl
mov
dec
stos
inc
lods
mov
inc
movsl
xlat
loope
loop
jg
cmp
dec
jbe
push
int
and
icebp
in
int3
add
rcll
shrl
imul
push
pop
add
cmp
lcall
and
enter
mov
push
push
outsl
pop
rorb
nop
mov
int
cmp
add
ja
aad
fistpll
adc
jecxz
iret
pop
pop
adc
sub
jns
sarl
inc
ret
cmpsl
cmp
aaa
and
xchg
pop
orb
andb
pop
adc
add
and
inc
mov
ljmp
stos
repnz
fcompl
fldl
add
scas
jbe
push
pop
xor
jo
xor
xchg
stos
sbb
push
push
sub
iret
movsbl
imul
and
push
adc
or
in
and
or
xchg
pop
xor
inc
sub
sbb
out
cs
xchg
out
push
cli
mov
jge
hlt
pop
cmp
xor
out
jae
push
push
or
into
jnp
mov
decb
push
jnp
pop
xor
pusha
mov
pop
icebp
adc
repnz
xor
into
sahf
xor
push
pusha
mov
pop
out
inc
xchg
adc
cmc
icebp
or
inc
xchg
mov
sti
sub
pop
jae
test
arpl
insl
cmp
pop
sub
inc
add
aas
cmp
fstps
xchg
or
lea
sbb
or
aad
stos
fdivr
dec
cmp
inc
loop
daa
pop
add
in
cwtl
and
sbb
and
fsubr
add
call
mov
js
fistpl
and
or
in
xchg
aad
push
outsb
xchg
mov
mov
sub
push
mov
add
pop
jmp
je
inc
cmpsl
dec
sbb
jo
sub
pusha
xor
xchg
adc
ret
sahf
mov
inc
xchg
scas
mov
repnz
je
cmpsb
rcr
repnz
dec
daa
out
fildl
int3
ffreep
sub
jmp
std
scas
aas
repz
lock
push
push
loop
adc
adc
push
enter
sub
rcr
pushf
movsb
mov
sub
inc
ret
popa
pop
push
xchg
push
stos
outsb
int3
js
sub
lahf
xlat
sahf
int
jmp
mov
repnz
sbb
xor
pop
mov
mov
add
test
push
loope
jne
jle
push
je
fstps
lods
ficoml
leave
int
or
setp
ret
xor
jno
rcl
sub
loopne
rol
je
pop
ret
popl
lcall
mov
push
xor
js
cmp
fisttpl
xchg
xor
cmp
jne
shlb
mov
stos
es
jmp
jo
cld
mov
fcmovnb
jno
sbb
in
inc
cmpl
loope
out
pop
out
rorb
movsb
movsl
xchg
or
scas
dec
mov
mov
imul
cltd
pusha
sbb
inc
add
inc
inc
ljmp
jg
pop
add
shrl
out
popf
xor
jae
jae
daa
scas
inc
test
sub
pushf
pusha
lods
mov
mov
cmpb
and
outsb
fsubl
pop
mov
mov
imul
push
mov
aad
jl
mov
cmp
call
sbb
sbb
adc
scas
and
lds
mov
aam
sbb
push
mov
sbb
in
jae
popa
dec
xor
arpl
data16
dec
sti
push
adc
fistps
test
ret
roll
stos
outsb
push
xchg
shlb
mov
mov
loopne
push
bound
lea
dec
lret
jb
jbe
js
xchg
inc
and
loop
sbb
cmpsb
imul
and
sbb
jne
leave
jp
sub
in
xchg
mov
aaa
rclb
push
cld
cmp
in
pusha
push
xchg
out
in
inc
xlat
scas
loop
hlt
mov
shlb
push
movsb
jg
add
ret
out
cmpsb
adcl
outsl
xlat
lds
sub
out
daa
pushf
outsl
aad
dec
jmp
pop
add
test
dec
lea
sub
ss
cmc
pop
cmp
inc
pop
aad
mov
out
test
pushf
sti
fisttpl
movsb
dec
std
mov
sbb
mov
cmp
jns
mov
gs
int3
insb
scas
cmp
mov
cwtl
pop
scas
adc
test
sahf
enter
ficompl
insb
int
xchg
cld
xor
jne
mov
push
ja
outsl
jp
push
jae
lds
lock
lods
out
fimull
fildl
sub
jbe
jbe
dec
mov
adc
imul
mov
stc
mov
inc
cmpsl
sbb
pusha
dec
adc
pushl
mov
mov
mov
jns
inc
jp
cmp
adc
mov
dec
mov
mov
pop
and
and
ljmp
das
cmp
mov
loope
xchg
dec
fiaddl
push
shrl
or
push
cld
mov
out
cmp
mov
push
loope
cmc
out
into
jmp
dec
xchg
clc
jns
stos
cmpb
jb
sub
mov
mov
shlb
repz
mov
sbb
daa
aad
daa
les
jo
pop
rorl
out
outsb
push
xor
and
xchg
inc
iret
pushf
fildll
cmpsb
inc
jbe
imul
in
mov
orl
fdivl
stos
out
mov
mov
sbb
push
popaw
fsubrl
push
jle
nop
add
mov
ss
sbb
clc
pop
rcrb
mov
xchg
jecxz
xchg
ljmp
aas
xchg
jno
mov
pop
iret
fildll
outsl
sbb
cli
repz
scas
loope
pop
stos
pop
gs
mov
cli
jmp
test
xor
int3
sbb
data16
jl
jns
leave
or
mov
add
popf
adc
and
push
lock
loope
out
pushf
stos
leave
adc
pop
idivl
jb
pop
mull
neg
cltd
or
jbe
sub
jl
mov
lds
cmp
cmp
add
push
pushf
jae
xor
ljmp
cmc
dec
push
pop
das
and
scas
gs
adc
icebp
and
fucomip
dec
dec
and
xchg
jne
jecxz
xchg
clc
jle
push
lret
cltd
pop
jb
jge,pt
xchg
pop
mov
fstpl
lahf
addr16
outsl
mov
pop
fwait
sub
ret
pop
and
fidivl
sbb
dec
stos
cwtl
xor
jp
data16
fcmovne
dec
test
pop
adc
jmp
popl
fs
dec
clc
xor
sub
xlat
ret
or
enter
jns
imul
mov
jmp
aad
ret
int3
xlat
sbb
dec
bound
push
dec
jp
and
call
ljmp
rol
pop
test
xlat
cmp
pop
mov
mov
mov
shrl
cmp
roll
js
cmp
dec
jmp
cmp
mov
je
and
add
sbb
pop
ret
xchg
sub
push
push
and
and
sub
lds
jae
pop
outsb
cmp
sbb
inc
xchg
cld
sti
loopne
or
sahf
and
mov
imul
and
xor
sar
xchg
pop
xchg
adc
and
pop
arpl
ficoms
xchg
push
push
or
shl
adc
pop
lret
jb
jmp
call
cmpl
cld
mov
imul
dec
jg
inc
or
pop
pop
addl
hlt
sbb
dec
or
xchg
jns
jne
sub
or
adc
mov
mov
push
ss
je,pn
cld
sub
outsb
icebp
xchg
mov
xorl
push
rcrl
ljmp
stc
cmpsb
ds
jb
fcmovnbe
out
mov
mov
insl
out
add
ret
stos
mov
mov
movb
xor
cmpsb
nop
jo
add
mov
pop
cs
xchg
loop
cmc
rcl
push
movsl
mov
jge
mov
cs
push
mov
movsb
outsb
imul
ds
jle
hlt
mov
add
xlat
fwait
cs
les
mov
mov
push
pop
pop
insl
cmp
mov
jg
into
cmp
cs
mov
mov
xor
lret
inc
and
outsb
sub
adc
fs
fwait
rol
mov
sbb
xchg
fistl
jns
jne
pop
cmp
or
pop
and
mov
sbb
cld
dec
jp
arpl
add
xor
in
addb
and
mov
or
pusha
xor
stos
ss
jecxz
and
sahf
jne
or
mov
sar
inc
jg
es
inc
push
cmpb
adc
test
test
cmpl
stc
cmp
loope
cwtl
pop
add
xchg
jo
fwait
int3
xlat
fistpl
cwtl
mov
sub
cmp
jp
in
mov
ds
push
ss
sub
mov
xchg
sbb
jno
push
inc
lret
push
sbb
inc
pop
pop
xor
inc
mov
pop
add
mov
adc
les
jp
fisubs
pop
lds
jle
enter
inc
shl
sub
leave
rclb
inc
pushf
xlat
xchg
lods
ja
jno
dec
fsubs
mov
lcall
dec
movsb
push
lock
mov
and
movsb
adcl
stc
mov
and
aaa
aad
add
add
ja
lret
call
loope
cltd
fwait
pop
inc
xchg
inc
sbb
in
sub
andl
imul
aam
push
cmc
push
repz
imul
fdivrp
adc
mov
and
push
jae
dec
lods
fdivrl
push
sbb
and
mov
adc
loope
cmpsl
icebp
adc
outsb
les
shl
jecxz
jmp
subl
mov
sub
ret
cwtl
sub
xchg
mov
jl
add
insl
shll
push
sbb
les
inc
adc
jnp
sub
mov
cmp
addr16
lahf
shrl
fucom
mov
fsubrs
inc
pop
vmread
pop
inc
outsl
loope
cmc
jl
in
xor
cmpsb
in
lods
cmpsb
cmp
jae
pushf
mov
mov
repnz
repz
cmpl
push
mov
or
fdivrl
orl
xchg
nop
adc
and
cmpb
push
xor
outsb
pop
loop
inc
pushf
les
lcall
push
or
outsb
adc
cmp
jnp
sub
fistps
std
sti
std
imul
sub
ja
pushf
adc
mov
add
dec
and
and
add
stc
and
in
gs
mov
pop
lret
je
push
or
jge
in
in
xchg
jno
add
push
out
sahf
cmp
aam
pop
pop
sub
das
inc
pop
or
jbe
push
lods
rcrb
cmp
xchg
pop
movsb
inc
call
andb
sbb
rol
aam
dec
dec
pop
scas
push
push
nop
adc
aad
pushl
push
in
mulb
mov
mov
mov
movsl
push
push
xchg
dec
data16
mov
pop
sbb
daa
add
flds
rcrl
or
pop
cmp
jmp
inc
push
ljmp
cmpsb
xchg
sub
outsb
and
add
mov
fstps
sub
mov
mov
loop
add
or
sti
pop
out
cmp
and
inc
add
cmpsb
mov
aad
test
adc
cs
xchg
divb
rcrb
sub
nop
jo
mov
mov
cmp
imul
scas
ja
js
sub
je
sarb
lret
ljmp
mov
ficoms
sbb
sub
iret
mov
loop
in
gs
mov
sti
mov
clc
lea
add
movzbl
cmpb
loop,pn
addb
cli
insl
push
aam
rcl
ljmp
je
mov
or
lret
ds
enter
in
jge
mov
mov
adc
sub
jnp
xchg
ljmp
fnstenv
test
or
add
jmp
ss
sbb
sub
mov
fisubl
jns
les
xor
scas
push
cmpsl
mov
xchg
test
inc
lods
and
mov
jl
mov
in
xchg
pusha
mov
mov
stos
fs
pop
push
pop
call
fnsave
cltd
cmpsl
xchg
js
pop
adc
mov
lcall
sub
cmp
jmp
xchg
bnd
out
fmulp
cmp
and
jmp
cmp
mov
jno
andb
cmp
xor
popa
and
out
imul
sub
inc
mov
inc
mov
push
add
repnz
in
cmp
mov
ljmp
fwait
imul
loopne
rcl
push
sub
lahf
aam
je
lahf
mov
gs
or
jmp
mov
dec
adc
push
jb
and
push
inc
out
dec
adc
mov
fs
int
xchg
lret
dec
jo
movsl
push
xor
xchg
and
popa
sub
add
in
scas
in
xchg
adc
dec
jp
cwtl
lret
scas
pop
movsl
cmp
jnp
scas
sub
xor
cmp
add
cmp
movsl
mov
fstpl
xchg
pop
xchg
xorb
cld
cmc
mov
aaa
rcr
out
inc
xor
daa
pop
test
lods
andl
lea
fcoml
orl
xor
jo
xor
loopne
icebp
inc
pop
jmp
shl
testb
and
push
pusha
add
scas
mov
popf
mov
fnstenv
and
cltd
pop
xchg
dec
adc
mov
test
dec
nop
arpl
in
or
in
dec
inc
adc
hlt
stos
inc
sbb
cmp
in
fstps
ret
cltd
ja
pusha
push
mov
ror
jne
add
lret
pop
mov
movsb
stos
dec
mov
mov
push
daa
pop
pop
pop
cmp
rcrl
inc
jg
and
lret
mov
jge
les
aaa
popa
jge
popa
psadbw
sti
setno
xor
stos
cmpsb
dec
adc
in
imul
hlt
push
nop
lret
cmp
roll
les
test
xchg
sbbl
daa
test
jge
ret
ds
xchg
cmpsl
inc
pop
pusha
jns
mov
adc
jge
sbb
adc
cmp
push
js
mov
stos
sti
mov
inc
sbb
jnp
pop
adc
fldln2
xchg
aad
das
dec
lret
cmp
aas
lret
mov
inc
xor
repz
dec
pop
fiaddl
lret
pop
addl
popa
add
lods
inc
mov
ds
mov
jmp
xor
xchg
outsl
and
xchg
ret
dec
and
or
or
mov
pop
out
lods
and
mov
nop
mov
mov
mov
mov
loope
push
jmp
pop
fistl
int3
push
xchg
jae
pop
adc
jb
dec
daa
scas
and
adc
xchg
dec
mov
negb
push
int3
push
outsb
add
sub
sahf
aam
add
loopne
in
mov
int3
pop
jbe
xchg
pop
fsubl
dec
sbb
test
inc
sub
stos
inc
aam
rorb
xor
jae
imul
out
jp
mov
sub
xchg
dec
xchg
or
pop
stc
test
sub
pop
mov
imul
or
inc
les
add
mov
ljmp
sar
xlat
fists
inc
fsubp
cs
rclb
mov
add
leave
xchg
popf
call
lods
shlb
ds
inc
sti
repnz
mov
mov
enter
mov
es
fsubl
mov
jp
jge
adc
in
sbb
sub
mov
xchg
rorl
mov
in
cmc
repnz
cs
jecxz
push
aas
pop
and
sub
cmp
sub
inc
or
int3
fbld
shrb
dec
jno
test
adc
dec
fwait
adc
fs
xlat
mov
lret
out
add
jecxz
mov
push
iret
push
xchg
xchg
adc
cmp
bound
push
lods
xlat
fsubp
push
cmp
pop
int3
and
inc
jecxz
jle
xchg
icebp
cmc
mov
call
mov
fcompl
push
push
xchg
dec
call
pushf
pusha
mov
adc
test
or
daa
sbb
pop
cmpsl
inc
pop
cmpsl
out
clc
and
hlt
pop
lcall
lods
das
mov
sub
pop
les
mov
adc
gs
dec
lods
insb
add
cmp
jecxz
pop
fnstcw
imul
test
mov
rolb
insb
xchg
insb
js
sub
xchg
pop
mov
jg
pop
dec
ja
pop
xchg
ror
xchg
data16
mov
xchg
xor
mov
inc
fiadds
movl
mov
in
xchg
sub
xor
stc
adc
popf
push
iret
imul
ljmp
dec
in
js
scas
mov
cmp
jecxz
push
lock
lret
mov
dec
adc
shrl
cli
push
icebp
fiadds
pop
and
sub
adc
mov
xchg
mov
mov
mov
push
mov
popa
subb
fnsave
repnz
push
clc
push
mov
xor
popf
daa
lret
adc
fldcw
mov
in
mov
cld
mov
outsl
fs
or
xor
dec
pop
insl
jb
dec
imul
pushf
xor
jno
aad
stc
xchg
test
sub
subb
lea
insb
add
mov
nop
stos
pop
daa
push
idivl
sub
xor
jmp
add
iret
shl
fiaddl
inc
xchg
jbe
adc
xchg
mov
insb
out
shrl
xchg
cmp
jae
movsl
xchg
cmpsl
mov
adc
add
clc
punpckhbw
mov
add
jp
jecxz
fstpt
loopne
mov
xor
scas
loopne
fistl
dec
out
sbb
mov
mov
push
mov
pushf
push
push
jecxz
gs
mov
test
mov
inc
in
ds
pop
in
dec
stc
lock
sub
or
or
dec
push
mov
int
add
movsb
push
cmc
stos
data16
dec
ljmp
loop
mov
imull
arpl
and
mov
mov
fwait
cmpsb
movsb
jp
push
and
filds
hlt
fs
inc
cmpb
lock
fxch
pushf
pushf
add
fimull
adc
stos
mov
sahf
nop
push
or
sbb
pop
int3
sbb
es
jg
sub
pop
mov
nop
iret
out
dec
test
dec
dec
lea
movsl
lock
xor
jnp
mov
add
js
cmpsb
popf
fmuls
in
pusha
fiaddl
jg
xor
loop
lea
test
or
mov
das
cmpb
adc
sub
cmpsl
shll
push
pop
lret
and
pmovmskb
sti
xchg
in
push
pusha
div
xchg
test
test
data16
cmp
xor
scas
std
imul
imul
sub
xchg
or
inc
xor
dec
mov
sub
fwait
loop
xchg
inc
pop
outsl
lret
push
cmp
fisubrs
mov
mov
filds
dec
pop
add
and
mov
sbb
push
sbb
mov
sub
ret
test
ljmp
movaps
insb
jecxz
mov
rcll
dec
sbb
dec
jge
dec
dec
cmp
ret
xor
cmp
gs
lahf
negl
push
shll
jno
in
ret
jmp
and
imul
or
loop
mov
sbb
push
lahf
loopne
in
or
fwait
cmp
in
add
pop
cli
xchg
aam
js
imul
mov
or
aam
test
insl
cmp
mov
lcall
rcll
mov
outsl
mov
xchg
mov
mov
inc
jg
das
push
aas
not
call
mov
in
jnp
jmp
push
jmp
movsl
sub
push
mov
popf
out
xchg
pusha
in
push
xchg
dec
push
mov
loope
std
push
or
pop
jl
cs
fcomi
add
push
jecxz
in
rolb
or
sbb
cmc
fists
xorb
inc
repnz
pushf
fisttpll
out
inc
gs
dec
das
mov
mov
sub
popa
sub
repz
dec
fidivrs
mov
mov
test
mov
sbb
das
dec
push
sub
mov
mov
js
insb
xor
dec
mov
jl
out
lea
jb
xor
xor
je
pop
sub
jno
sbb
adc
add
lea
and
cmp
jae
mov
dec
out
ds
dec
fcoms
sti
mov
xor
fildl
mov
or
sub
iret
mov
rol
mov
and
mov
sarb
ret
pop
stc
xor
xchg
xor
xchg
xchg
or
jne
push
sbbl
lea
jmp
fcmovbe
mov
push
aaa
ficoml
pop
clc
xor
push
mov
sahf
ret
cli
jmp
push
stc
add
xor
adcb
adc
outsb
sbb
lods
adc
sbb
lods
jns
mov
sahf
lret
lock
push
mov
xchg
sub
push
mov
cmp
mov
jnp,pt
adc
sbbl
sub
push
lcall
jne
and
and
inc
cmp
sarb
jge
mov
inc
jecxz
jb
inc
pushf
push
pop
pop
fwait
out
jo
sub
mov
pushf
pushf
xor
aas
or
sbb
fcomi
imulb
push
mov
push
inc
ret
pop
scas
ljmp
push
cmp
jb
xor
xor
adc
push
adc
adc
sbb
cmp
std
xor
jbe
and
es
pushf
fisubs
xchg
in
repz
sti
loopne
mov
aaa
popf
insl
mov
popf
test
mov
cmp
jmp
std
clc
cld
push
fs
cmc
sti
jmp
sbb
adc
shl
jge
lods
mov
jp
or
aad
pop
add
pop
leave
lods
cmp
jp
ss
cmp
xchg
fidivs
std
das
pop
mov
sbb
std
sub
lock
sbb
mov
jno
fldl
mov
push
inc
and
mov
pop
and
mov
and
imul
es
ror
sbb
imul
sahf
insl
pop
pop
mov
add
push
cwtl
cli
test
in
ret
mov
cli
pop
daa
pop
je
std
and
lea
fildl
int3
dec
sub
mov
lret
xor
adc
test
movsb
and
xchg
push
es
jne
cli
sbb
faddl
jp
xchg
or
lret
ljmp
push
es
in
out
pop
bound
sbb
test
bound
scas
pop
xchg
lahf
notl
call
lahf
es
xchg
fnsave
cmc
lahf
lock
cld
bound
std
sbb
outsl
test
xor
mov
ljmp
push
sahf
and
mov
popf
sti
pop
push
mov
outsl
outsl
ja
or
push
sub
call
sbb
fisubrs
jne
in
inc
negb
lods
mov
fs
shll
or
pop
adc
imul
mov
push
inc
pop
add
fnsave
mov
inc
loopne
addr16
movsb
sbb
cltd
in
jb
mov
and
push
xor
rcrl
fcmovb
fldcw
push
btr
fistpl
out
in
lret
and
rcr
mov
jb
or
lcall
xor
icebp
sub
inc
pushf
mov
in
dec
push
sub
sub
adc
jae
sbb
and
cld
mov
dec
sub
nop
test
push
sub
lea
hlt
jp
push
sbb
pop
sti
push
movsb
jge
pop
xlat
pop
sbb
clc
inc
fcmovnb
pop
std
lcall
into
or
sub
lret
lea
lds
scas
adc
mov
or
fsub
or
mov
push
and
adc
les
bound
fadd
mov
jae
sbb
scas
or
push
mov
sahf
rclb
les
jbe
inc
ljmp
frstor
add
push
xchg
loop
cmpsl
lock
divb
int3
or
or
iret
les
dec
dec
movsb
cmp
add
imul
pop
insb
cmpsl
fwait
cmpsl
xchg
xchg
push
mov
loope
in
pop
std
and
mov
ret
jecxz
lcall
sbb
lea
pop
out
imul
push
fstps
push
sbb
rcrl
mov
ret
insb
mov
lods
testb
cmp
pop
ja
addl
push
or
cltd
xchg
sahf
dec
pusha
push
pop
aam
mov
xlat
jecxz
es
push
add
push
inc
fcomps
adc
xorb
xor
sbb
mov
dec
push
adc
push
bound
dec
daa
loopne
mov
mov
and
sbb
cmc
pop
and
icebp
lret
aad
xlat
rcrb
push
pop
les
pop
shll
pushf
pop
stos
mov
lods
jb
mov
sti
pop
fsubl
push
cmpb
and
jecxz
dec
xor
dec
cli
sub
icebp
lea
sub
ffreep
add
jmp
xchg
jno
popa
xor
fdivrs
hlt
mov
addr16
stos
cmpsl
cmp
arpl
mov
jmp
fincstp
jmp
std
push
pop
inc
cli
mov
lea
scas
addb
xchg
fdivrl
push
stos
stc
ljmp
je
subb
xlat
pop
jae
sub
into
ficoms
mov
movsb
insb
push
gs
jle
push
pop
mov
pop
push
jb
and
adc
insb
jle
fcmovu
or
into
dec
icebp
arpl
add
stc
nop
mov
lds
insw
sbb
lea
jle
out
adc
ds
jg
lahf
mov
fisubs
inc
sbb
orb
xchg
fdivrl
add
sbb
les
or
xchg
mov
aad
pusha
fdivrl
test
jle
js
xchg
out
add
jle
and
aaa
in
pop
adc
call
dec
sbb
push
cmp
sbb
out
inc
dec
ret
popa
dec
enter
lahf
mov
adcl
cmc
fwait
push
or
iret
iret
mov
add
aad
add
push
lds
leave
sub
outsb
add
jbe
stos
int
xor
les
out
popf
bound
cmp
repz
xchg
insl
popa
lock
push
addb
fidivs
mov
xor
pop
or
fcmove
lahf
cmp
insb
rolb
mov
mov
fimull
jmp
ss
sbb
es
imull
fwait
dec
ret
inc
and
and
rcrl
pop
rolb
jge
pop
adc
dec
pop
cmp
sub
xor
sub
shlb
aad
adc
idivl
adc
cld
fdivrl
mov
dec
mov
mov
adcb
pushf
pop
sbb
test
jp
loope
dec
cmp
notl
fistpl
hlt
std
mov
shlb
loop
inc
mov
mov
shll
and
mov
cmpb
data16
test
leave
enter
adc
pop
loop
repnz
inc
inc
popa
jp
mov
lock
inc
pop
rcll
ficoml
cmpsb
mov
xor
test
xor
leave
adc
repz
adc
and
repz
jo
ror
pop
push
jae
or
mov
and
popa
xlat
dec
push
push
jne
imul
repnz
add
loopne
pusha
push
mov
rclb
arpl
push
mov
pushf
sub
push
mov
loop
popa
inc
ja
or
pop
cmpsb
leave
call
push
addr16
mov
jne
hlt
inc
subb
cmp
imul
cmp
fsubr
fldcw
dec
push
xchg
dec
xor
cmp
lea
add
sub
cmp
scas
in
push
outsl
popa
pop
fisttpl
xchg
imul
outsl
add
ret
sub
xchg
adcb
mov
sub
fcomps
pop
push
repz
lods
sarl
lea
loopne
hlt
or
sub
mov
scas
push
loopne
xor
lock
lds
negl
pushf
cmpsb
pop
jp
xor
scas
mov
cld
jnp
add
pop
aas
jle
push
rclb
mov
roll
movsl
movsb
mov
lds
mov
xorl
mov
push
shlb
sbb
das
scas
cwtl
jp
ret
dec
call
rorl
inc
adc
push
cmp
and
sub
xchg
iret
cmp
sti
dec
mov
add
mov
sbb
lret
jecxz,pt
into
outsl
cmp
pop
or
stos
int3
mov
mov
cmpsb
insb
iret
daa
repz
cs
jae
shrl
sub
loop
mov
push
mov
cmc
push
and
mov
cltd
in
pusha
loop
jae
and
sahf
lahf
mov
inc
push
mov
pop
or
mov
push
and
arpl
dec
mov
push
or
ficompl
push
and
mov
ficoms
push
clc
repz
pop
dec
fcmove
mov
xchg
insb
test
jecxz
clc
adc
in
loope
hlt
mov
jg
mov
repnz
sbb
int3
gs
jp
inc
push
and
sub
mov
sub
cmpsb
sbb
sub
scas
cmp
cld
xchg
fisttps
cmpsl
orb
cmp
inc
inc
jge
pop
outsl
in
xchg
aad
stos
into
fadds
jne
cwtl
jp
ret
push
jo
stos
mov
mov
jb
sub
aam
mov
cmp
sub
pop
notb
testb
shlb
bnd
mov
push
xchg
inc
or
imul
in
dec
push
adc
mov
dec
cmp
inc
popa
loop
test
or
or
and
jmp
mov
sti
pop
mov
or
enter
xor
dec
xor
cmp
ja
sub
outsl
xor
scas
mov
fdivrl
enter
loop
push
ds
call
iret
mov
add
out
pop
fwait
and
cmp
jbe
xor
ret
jecxz
dec
or
je
inc
jl
movsl
inc
xchg
not
popa
adc
push
fwait
push
leave
inc
xor
mov
push
mov
in
mov
mov
mov
push
add
inc
pop
mov
add
pop
aaa
xchg
daa
mov
add
hlt
mov
lahf
inc
movsl
or
ss
fadds
clc
popf
gs
mov
outsb
pop
mov
cmp
imul
push
lret
repnz
mov
jle
sub
xchg
dec
push
mov
movsl
fsubl
xchg
pushl
lods
mov
mov
mov
or
add
data16
mov
dec
xchg
mov
shlb
sbb
dec
enter
pop
and
adc
cmp
push
pop
stos
inc
or
lcall
cmc
outsl
sbb
fbld
orl
sti
push
mov
movsl
nop
push
fcoml
aad
and
jge
rclb
arpl
jbe
or
mov
cwtl
adc
and
jb
roll
stos
jg
or
jae
mov
adc
ja
nop
je
outsb
stos
mov
sub
dec
inc
cmp
cmp
outsb
test
gs
inc
repnz
mov
xchg
scas
in
lret
lret
and
into
push
mov
jmpw
outsb
mov
leave
cmpsl
jo
shlb
movsb
gs
mov
in
test
testl
fidivs
imul
icebp
pop
daa
pop
pop
fs
mov
movsb
rclb
push
and
mov
and
loopne
lret
inc
sub
fdivrs
push
std
test
xchg
rclb
adc
cmpsl
mov
mov
cmpsl
pop
out
add
fists
add
adc
push
aaa
pop
dec
roll
aas
aad
mov
push
mov
sub
inc
push
loope
pop
push
xchg
sub
push
sub
pop
jl
xchg
or
cli
and
je
or
in
add
int3
lds
xchg
ljmp
dec
xchg
pop
jmp
pop
pop
icebp
cld
mov
mov
add
xchg
sbb
adc
add
sbb
inc
ljmp
mov
les
adc
xor
inc
cmp
dec
mov
pop
dec
sbb
add
cmc
lcall
sbb
pop
dec
sbb
in
pop
mov
xor
rcrl
pop
push
ja
out
mov
fwait
cmp
int
mov
sarb
adc
sub
data16
arpl
lea
test
jl
xorb
lea
fcoms
or
sbb
mov
xor
div
pop
ror
lock
cli
xlat
nop
cld
cltd
mov
pop
lret
mov
stos
gs
inc
cmp
add
mov
bound
push
test
popf
fisttpl
dec
outsl
or
dec
pop
inc
jmp
cmp
enter
jb
push
mov
call
inc
push
pop
or
jo
push
daa
xchg
rcll
ret
lock
rorb
cmp
dec
xchg
aas
lea
push
ja,pt
add
fcoms
jns
xchg
sti
ljmp
and
movsb
mov
or
lods
mov
pop
movsb
fsubl
cmp
pop
in
mov
out
popa
jle
mov
daa
lret
add
and
dec
jns
dec
mov
mov
add
xchg
add
ss
mov
xor
push
test
cmp
jmp
ja
pop
push
subl
inc
in
sub
jg
xchg
cmp
push
in
push
mov
add
lds
jmp
subl
or
sahf
rorb
leave
aaa
out
arpl
mov
popa
mov
cmpsl
mov
repz
dec
in
and
xchg
inc
mov
pop
popf
adc
pop
push
sti
xchg
scas
popa
leave
fyl2x
in
mov
cmc
cmp
jae
in
or
xchg
aaa
outsb
test
sbb
or
jmp
into
xchg
sbb
pop
outsl
out
loop
faddp
cmpsb
push
push
int
testb
imul
test
xchg
clc
mov
push
mov
ficoml
mov
sub
pop
pop
push
stos
imul
cs
sub
gs
jg
subb
decb
xchg
mov
mov
xchg
jl
cmpsl
addb
rorl
jecxz
cmc
sarl
sub
and
cli
and
dec
mov
xchg
push
call
push
cmp
lret
les
xchg
fmul
stos
insl
gs
pop
int3
jecxz
sub
mov
clc
inc
repnz
sub
sub
ret
push
imull
jo
jl
pop
jb
pop
fwait
stos
das
loop
mov
xor
arpl
sbb
mov
out
xor
mov
xchg
in
push
xchg
daa
stos
add
adc
push
lahf
cmp
pop
les
call
xor
xchg
fst
loopne
mov
push
mov
push
or
jnp
add
hlt
popf
adc
mov
pop
scas
les
enter
inc
out
fisubrs
and
mov
jmp
test
and
xor
lret
cltd
outsb
test
push
scas
pop
mov
dec
ret
cmp
test
or
std
lret
push
xchg
adc
xchg
push
sub
xchg
adc
and
xchg
push
xor
sub
cmpsb
dec
or
outsb
xchg
mov
test
aam
or
movsb
sbbb
mov
lret
rcll
sub
stc
pusha
mov
in
or
add
adc
movsl
data16
pop
inc
pop
shrb
hlt
mov
test
dec
clc
test
mov
xchg
pop
or
xor
jae
aas
jecxz
mov
dec
or
outsb
mov
sub
outsl
repz
enter
sub
pop
inc
cmp
adc
stos
pop
cmpsb
dec
popf
mov
scas
pop
pop
dec
cmpl
stos
mov
ljmpw
jmp
mov
test
sbb
das
fdiv
add
inc
jmp
add
jb
int3
push
pop
pusha
sbb
mov
mov
bound
mov
xorb
cld
pop
test
sbb
loop
pop
sub
xchg
pop
cmp
js
cwtl
movsb
mov
push
and
pop
scas
or
in
in
push
lods
dec
jne
popa
xchg
fdiv
add
lds
inc
mov
int3
inc
sti
cmpsb
rcrl
mov
or
add
adc
mov
jl
xor
int3
cwtl
mov
xor
in
mov
xchg
adcl
mull
inc
faddl
hlt
push
out
into
xor
xchg
daa
mov
jae
mov
jb
mov
es
mov
ljmp
dec
es
sub
iret
fisubrl
jno
insl
mov
adc
mov
inc
and
cltd
decb
out
xchg
shll
cmpsb
add
daa
dec
andl
cmp
cs
leave
push
jl
jno
repz
popf
push
cmp
lret
dec
dec
push
sbb
mov
les
xchg
ss
push
pop
lea
popaw
xlat
mov
cmp
clc
popf
jge
push
mov
sbb
addr16
enter
test
ss
lcall
jae
mov
sbb
pop
xchg
mov
push
cli
mov
adc
dec
xor
add
xor
icebp
pop
or
and
adc
sub
lahf
xor
enter
ficoml
repz
loopne
inc
add
and
and
sub
leave
xchg
cmp
jbe
call
sub
jecxz
fsts
pop
cwtl
add
pop
sbb
cmp
and
icebp
cmp
jge
lret
or
in
icebp
ret
sub
add
mov
xor
and
aaa
or
push
xor
sub
xor
mulb
mov
test
push
js
push
es
or
int3
jnp
inc
call
pop
sbbl
xchg
or
sub
int3
xlat
xchg
push
fbstp
rcrl
enter
sub
jb
or
jp
mov
mov
pop
push
jno
mov
mov
pop
pop
stos
jae
mov
pop
rcl
popf
dec
add
lret
adc
pushf
jge
rol
add
mov
rcll
xchg
mov
leave
mov
push
clc
out
inc
fisttpl
or
iret
mov
insl
jmp
push
sub
repnz
jns
fldl
or
dec
jbe
out
lahf
mov
rclb
and
pop
mov
clc
arpl
loopne
adc
cmp
cmpsl
push
sti
cmp
xchg
pushf
sub
fsubl
or
jo
jl
pushf
cmpsl
fildl
pop
mov
pop
pop
jne
sarl
cmp
iret
add
push
adcb
mov
test
in
in
xor
fwait
andl
mov
dec
mov
fists
cmpsl
mov
movsb
mov
stos
cld
popa
ja
jno
xor
sub
es
shl
imul
shll
fs
cmpsb
adc
mov
loopne
pop
push
or
imul
pusha
and
stc
mov
dec
dec
addr16
jno
jbe,pn
or
pushf
dec
call
push
into
fwait
sbb
clc
lcall
jecxz
test
adc
dec
pop
addb
nop
mov
pop
xor
mull
adc
lcallw
sbb
dec
xchg
pop
cmpsb
push
iret
int
pop
ljmp
call
mov
in
mov
mov
repz
cmpsl
jnp
das
pop
das
imul
cltd
sub
outsl
rorl
jp
in
ljmp
and
mov
loope
push
push
lcall
subb
jae
push
ds
push
int3
fsubrl
aas
std
in
repnz
mov
iret
push
lahf
pop
rcr
gs
jl
xchg
jnp
mov
jne
xchg
jmp
mov
lahf
sub
movsl
and
mov
push
rcrl
mov
loopne
divl
in
imul
test
leave
dec
loopne
leave
jle
divb
sti
lds
popf
imul
out
xor
xchg
jg
stos
test
push
jge
xor
cli
int3
inc
fstpl
lea
leave
adc
ret
movsl
out
aas
xchg
sbb
dec
out
in
js
inc
jmp
stc
sahf
inc
jecxz
jg
enter
aam
adc
jg
movsl
adc
in
sub
adc
mov
rorb
cmp
xor
ret
sub
loopne
push
dec
mov
sahf
aad
sbb
cmp
scas
jo
mov
mov
std
popl
or
and
loopne
lret
std
jecxz
sub
ds
adc
push
roll
inc
setle
mov
out
int3
rclb
push
sbb
mov
rcrb
frstor
ret
jmp
sub
sbb
rcrb
lds
aas
in
add
push
adc
test
lock
sbb
iret
xchg
xchg
or
int3
out
xchg
mov
stc
sub
xchg
dec
testl
cwtl
mov
out
shlb
or
sub
push
cmc
jmp
cmp
out
cltd
and
inc
cmpsl
aaa
add
movsb
in
mov
pop
xor
sbbb
mov
add
xor
add
aam
addr16
movsb
les
sub
xor
cwtl
and
add
nop
push
mov
push
stos
loopne
cmc
and
outsl
pop
gs
imul
dec
dec
pop
adc
icebp
adc
cmp
xlat
pop
enter
dec
adc
xor
pop
ja
pop
push
sub
fldt
sub
inc
mov
lds
or
mov
mov
and
inc
outsb
in
int3
pop
pop
sbb
xor
mov
ljmp
xor
inc
lods
hlt
or
mov
inc
inc
loopne
adc
xor
and
sub
sbb
mul
shlb
cmpsl
leave
enter
xlat
mov
and
into
lret
jle
mov
jl
push
cmp
or
sbb
ja
rolb
aad
cmpsb
xor
lods
xor
test
cmp
xchg
fisubrs
pop
in
push
mov
mov
sbb
xchg
out
popf
and
loopne
jge
cmpsl
cmp
jne
gs
xor
daa
mov
cmp
and
pop
mov
jp
mov
push
icebp
bound
add
insb
jp
faddl
scas
jb
rcll
mov
dec
dec
outsb
fldl
mov
adc
test
mov
push
repnz
repz
mov
jp
push
mov
fcmovbe
std
clc
loope
daa
popl
jae
out
int
cmpl
push
and
xchg
or
das
std
mov
jno
adc
into
pop
into
cmp
mov
negl
xchg
xchg
arpl
lret
jmp
mov
or
cli
sub
orb
fsubs
nop
mov
and
das
mov
jo
imulb
xor
cmp
cmp
cmp
hlt
xchg
lcall
unpcklps
xor
push
dec
mov
mov
idivb
dec
mov
xor
adc
sub
clc
cmp
ds
nop
xchg
into
jno
dec
das
xor
cld
sub
dec
and
push
xor
lods
pop
jne
popa
jbe
nop
push
jmp
ss
shll
push
sub
mov
mov
xor
ljmp
mov
fwait
jo
mov
popfw
int3
les
idivb
cli
inc
xchg
mov
mov
test
push
jo
mov
in
mov
arpl
push
cmc
xchg
addl
fs
pop
mov
dec
pusha
out
popa
nop
sti
mov
insb
shl
push
int3
ds
aaa
insl
adc
clc
pop
adc
jno
and
ror
ret
jmp
mov
ret
cld
ljmp
adc
pusha
js
scas
jp
adc
inc
cld
imul
jmp
jne
mov
lods
push
popa
mov
loopne
mov
test
sahf
into
pop
xchg
int
out
pop
sbbl
mov
sub
mov
rorl
cltd
test
xor
jns
lods
ja
js
stos
das
sub
cmp
ret
pop
pop
fs
pop
xor
out
loop
outsl
inc
out
adc
inc
hlt
scas
loope
xchg
ss
xor
jb
addb
leave
cmp
xchg
popf
pop
dec
adc
xor
fcmovbe
sub
and
iret
push
pop
rorb
addr16
test
shrl
pop
add
add
fs
jne
mov
and
into
into
imul
fmull
test
lret
leave
rcll
mov
jle
inc
and
sbb
leave
aaa
xor
jmp
int
mov
je
lods
mov
jne
pop
jae
popa
fwait
mov
sbb
mov
into
mov
push
femms
dec
int3
sub
pop
test
mov
push
push
test
pop
xchg
sti
xchg
in
and
push
add
mov
jbe
jns
xchg
adc
add
aad
mov
add
test
sbb
inc
mov
scas
sub
jnp
or
into
imul
pusha
xorl
push
out
lcall
push
test
pop
repz
fnstsw
sub
pop
xchg
sbb
and
mov
mov
xchg
push
xchg
xor
pop
dec
or
sbb
mov
mov
jecxz
mov
in
mov
inc
les
or
and
loop
neg
fsubrl
push
cltd
pop
add
idivl
push
or
icebp
cli
inc
loop
pop
outsl
jecxz
fisubrl
dec
mov
out
or
inc
sbb
sbb
outsb
fildll
jae
mov
xchg
cmp
and
fwait
je
inc
sbb
lock
pop
xlat
mov
lret
xchg
push
mov
fdivr
adc
shlb
adc
mov
push
cmpsb
ret
loope
cmp
mov
fstps
xchg
lods
push
lret
insl
insb
movsl
testl
into
mov
cmp
add
ffree
jl
cmp
xchg
mov
outsb
add
lock
popf
xchg
mov
push
sub
iret
les
js
mov
pop
xlat
sbb
dec
shrl
cmp
jmp
sbb
and
push
stc
les
dec
mov
push
ss
out
pop
pop
xor
mov
pop
cwtl
mov
push
xor
and
dec
mov
das
pop
jne
sbb
sarb
pop
xchg
icebp
popf
jge
xor
call
mov
stc
test
push
jo
lcall
stos
outsl
jg
int
and
and
rorb
or
add
outsl
dec
mov
inc
leave
push
xor
lock
pop
mov
pop
mov
aam
cmp
pop
ds
outsb
cwtl
jp
decl
xor
mov
push
mov
icebp
sar
and
jp
rolb
shr
test
mov
jmp
test
iret
out
dec
xor
cmpsb
adc
cmp
ljmp
sbb
or
dec
pop
into
xchg
mov
gs
repz
inc
push
cmp
inc
jb
call
test
in
dec
sbb
es
sub
into
add
push
cmp
ds
ret
dec
jecxz
fadd
jge
aas
sub
push
mov
sbb
cmpsb
out
mov
and
sbb
xor
fisubrs
stos
cli
xchg
push
sub
xchg
cwtl
pop
js
xchg
aam
sub
add
icebp
sub
mov
sbb
out
neg
popa
sbb
fbstp
ja
mov
inc
jo
mov
hlt
or
hlt
dec
or
hlt
cmpsl
ficomps
or
inc
mov
mov
sbb
jnp
in
and
arpl
inc
lcall
imul
daa
lds
insb
adc
push
xor
and
dec
adc
dec
fs
jbe
xlat
std
lods
fdivl
cli
inc
pop
pushf
cli
fwait
imul
pop
or
sub
push
aaa
imul
addr16
je,pt
jg
pop
push
fists
push
das
cs
mov
jl
jmp
das
mov
add
xor
pop
fdivrl
and
enter
jo
mov
loopne
push
dec
xchg
fldt
mov
pop
sbb
test
or
mov
adc
sarl
pop
cmp
daa
pop
in
or
icebp
jnp
aad
sub
adc
insl
push
rcrb
rol
mov
test
push
adc
aam
scas
ja
push
inc
pop
xchg
inc
std
jns
rcr
mov
xchg
mov
sti
xchg
popa
jne
pop
mov
sub
daa
push
call
insl
sbb
add
shlb
xchg
and
mov
rcrl
sub
jmp
jmp
out
adc
data16
adc
sub
fbstp
sbb
lea
clc
add
cmpsb
xchg
movsb
in
mov
dec
shlb
mov
mov
fildll
xor
cmp
and
inc
xor
adc
push
loopne
or
and
sbb
dec
mov
dec
sub
out
xor
popf
movsl
inc
add
ror
loope
hlt
mov
mov
in
dec
xor
xor
mov
and
and
popa
ret
xor
add
pop
push
push
sbb
pop
ja
or
xor
lods
adc
ret
orb
mov
rcrl
movsl
xor
pop
xchg
inc
push
jnp
sarl
fcmovnbe
dec
xchg
daa
icebp
cmp
cmp
dec
push
and
mov
sahf
mov
mov
push
pushf
xor
and
out
cmpsb
loopne
ret
cmpsl
test
pop
imul
daa
leave
cmp
pop
xchg
dec
xchg
fs
enter
out
xchg
pushf
sub
lods
cmp
shl
mov
mov
gs
and
push
mov
pop
ficomps
xor
jge
mov
push
pop
push
shrb
popl
test
jecxz
jnp
jmp
xor
lods
std
xor
fnsave
push
pop
xchg
xchg
scas
addr16
adc
mov
jnp
nop
mov
mov
mov
jno
push
xchg
push
out
ret
add
movb
ds
les
andb
xchg
xchg
cmp
xchg
jbe
cld
movsb
sti
fimull
jmp
int
fdivrs
sub
and
mov
addr16
out
xor
xor
lahf
int
mov
push
xor
ja
mov
mov
xor
bnd
lea
dec
in
mov
fisubl
mov
xchg
adc
fisubl
aaa
sub
imul
cld
or
dec
jl
hlt
jmp
int3
dec
pop
mov
nop
mov
fisttpll
insb
mov
rclb
repz
mov
push
lea
rcrb
push
das
aad
sub
andb
notb
push
inc
jmp
les
insb
rorl
popfw
dec
mov
lock
arpl
loope
push
jmp
add
mull
push
xchg
les
cmpsb
fs
addr16
sbb
sbb
test
add
mov
jno
popf
negl
or
mov
data16
je
push
inc
loope
aam
sub
mov
xchg
mov
mov
jmp
bound
xor
into
cmp
fs
mov
mov
stc
adc
loope
insl
push
add
dec
mov
cmp
push
cmp
xor
out
cld
jl
cmp
add
mov
inc
cwtl
jp
inc
rcll
push
jmp
adc
and
lahf
mov
inc
mov
push
bound
fcomi
repz
popf
xor
icebp
in
pop
dec
jbe
add
aad
jl
jl
mov
je
sub
jg
xor
cmp
leave
mov
outsb
mov
scas
lahf
fidivrs
sbb
adc
fs
cwtl
sbb
inc
outsb
aad
sub
jecxz
or
or
xchg
popf
shl
pop
fcomip
packssdw
je
lret
daa
loope
dec
mov
adc
inc
shr
out
xor
push
out
pop
sarb
inc
cmp
jae
dec
xlat
xor
int3
or
xchg
mov
inc
mov
loopne
bnd
mov
rol
jg
push
pop
xchg
cmpsl
push
add
int
mov
mov
in
outsl
inc
xchg
ret
int
int
xor
loope
lods
shrl
sete
into
jno
bswap
or
inc
ret
add
adc
mov
push
pop
out
mov
jp
or
test
jbe
push
leave
pop
mov
jge
in
stos
jnp
mov
adc
cs
outsb
add
push
aaa
ret
adc
dec
push
imul
cmpsb
fidivs
frstor
in
jge
hlt
jns
jle
cltd
xlat
fs
dec
fstl
inc
mov
mov
repnz
imul
mov
sbb
jecxz
jl
mov
push
movsl
loope
push
clc
ret
int3
mov
add
ret
inc
and
dec
xor
pop
mov
rclb
dec
imul
push
mov
inc
lcall
adc
jne
cmp
testb
mov
sbb
pop
pop
popa
push
xchg
xchg
cmp
cmc
ja
push
ss
cmp
mov
rcll
daa
jmp
mov
je
or
ss
repnz
ja
and
arpl
pop
mov
and
xchg
lods
mov
push
jge
daa
sti
mov
out
nop
sub
mov
and
mov
sub
mov
xchg
out
loop
shl
std
stos
clc
mov
out
jge
push
popa
daa
inc
xor
sub
icebp
cmc
mov
loopne
inc
movsb
or
sub
shlb
sub
sub
sub
jl
loope
inc
loope
xchg
inc
mov
out
mov
std
ja
jb
out
jmp
or
scas
mov
inc
xchg
js
xchg
addr16
xchg
and
inc
inc
fldcw
adc
mov
idiv
fwait
insl
push
cs
pop
mov
add
pop
xor
das
sbb
xchg
jp
stos
and
mov
lret
clc
mov
inc
loopne
inc
xor
jns
dec
icebp
xchg
dec
fidivl
xchg
push
rcll
dec
jbe
pop
int3
xchg
hlt
mov
and
push
push
xchg
fists
rorb
sub
or
sarl
or
fdivrl
mov
mov
jo
adc
push
imul
or
jnp
xchg
enter
push
dec
insl
pop
out
dec
leave
adcb
icebp
xchg
movsl
ret
popf
rolb
testl
in
stc
cmc
sti
imul
int3
sub
mov
jp
and
sbb
stos
sub
fs
mov
stos
nop
dec
clc
cwtl
cmp
not
cld
xor
fisttpl
sbb
rorb
inc
fstpt
pusha
cmpsb
mov
mov
test
adc
in
inc
mov
lods
outsb
sub
jecxz
xorl
scas
data16
rcrb
sub
sub
and
bound
pop
push
test
adc
jo
stos
stos
sub
mov
in
xchg
xchg
jnp
xchg
in
push
push
ss
aaa
inc
xchg
scas
out
insb
iret
fwait
pop
mov
adc
cmp
sahf
mov
mov
lods
jecxz
jbe
xor
cwtl
loope
dec
cmpsl
lea
xchg
mov
adc
fwait
in
orl
stc
inc
mov
popa
push
inc
xlat
imul
lock
cmpl
cmp
mov
add
sbb
dec
call
dec
cld
fcompl
shl
jns
adc
dec
cmp
xor
ffree
dec
popf
mov
push
movsl
sbb
in
jnp
loop
adc
sub
jecxz
das
jnp
xor
adc
mov
xor
pop
fldenv
push
cmpsb
push
ljmp
pop
lahf
fneni(8087
mov
adc
call
enter
inc
insb
cli
ret
popa
in
or
xchg
push
push
leave
mov
sub
iret
mov
xor
adc
jle
or
jb
mov
or
xor
xchg
insl
sbb
subb
mov
push
pop
mov
sahf
sbb
and
rolb
jle
in
xor
enter
lods
pop
jo
jmp
sub
xchg
mov
push
clc
xchg
repz
adc
dec
push
mov
sub
lcall
sub
fdivl
das
mulb
pop
add
jmp
shl
mov
inc
rolb
push
sbb
gs
mov
in
push
add
ret
cltd
jl
xorl
inc
stos
mov
fsts
out
push
jp
mov
and
pop
add
mov
xor
rclb
xchg
cwtl
mov
cmpsl
or
push
xor
cmp
xor
pop
dec
popa
sbb
clc
xor
cltd
or
inc
and
loop
and
lods
shlb
clc
adc
outsl
mov
adc
std
xchg
add
mov
test
adc
aas
jecxz
frstor
cmp
pop
and
xor
xor
fisttpl
icebp
fisttpl
mov
mov
xchg
mov
xchg
aam
pop
rcr
fwait
ja
sbb
or
push
pop
inc
push
mov
movsl
inc
add
std
loopne
mov
mov
out
pop
push
inc
lock
in
out
fldl
call
adc
mov
mov
mov
cmp
dec
fdivrl
and
pop
lcallw
int3
clc
repz
add
jl,pn
hlt
and
rol
test
lock
adc
es
ds
or
cmp
inc
jge
arpl
ja
repnz
xchg
cli
andl
fnsave
fnstsw
xor
push
mov
fidivrl
xchg
xchg
hlt
mov
dec
aaa
fsubr
mov
pop
or
xor
dec
adc
stos
icebp
es
lods
jle
push
rorl
xor
xor
es
cltd
shl
nop
xchg
jg
in
sbb
push
fwait
mov
cmpsl
dec
pusha
jne
lods
jne
mov
push
add
jno
mov
dec
adc
out
lock
jge
mov
in
jnp
mov
jno
mov
in
mov
push
cli
xor
or
push
imul
loop
sub
pop
jmp
daa
das
push
or
outsb
les
fwait
popa
push
sbb
xchg
mov
sti
push
push
int
gs
pop
aam
fists
push
aad
movsl
cwtl
lcall
enter
jbe
in
xchg
jge
cmp
and
cmp
mov
fcompl
clc
cmp
aaa
pop
idivl
loope
fmulp
pop
mov
xlat
aad
call
sbb
add
les
mov
sbb
imul
roll
in
leave
gs
jl
and
icebp
popf
js
mov
daa
fwait
mov
sahf
adc
ljmp
pop
loop
dec
xor
cmc
dec
mov
lods
inc
push
xchg
test
icebp
xor
push
ss
imull
mov
lods
cmpsb
outsl
in
xchg
xor
dec
mov
sub
out
int3
icebp
mov
shl
xchg
imul
imul
mov
in
jbe
pushf
push
sbb
xor
mov
mov
lret
mov
xchg
inc
loope
push
inc
adc
mov
pusha
pop
out
call
cmp
js
lock
int
xchg
mov
das
mov
adc
xor
mov
mov
loopne
call
insl
xchg
inc
xor
push
lods
xchg
sbb
dec
cld
sarb
call
inc
pusha
sahf
adc
xchg
add
stos
test
inc
enter
xchg
and
inc
dec
into
loopne
fsts
das
clc
repz
outsl
daa
cltd
pop
mov
jbe
imul
aam
rol
xor
jno
loopne
mov
cmpsl
cmpsl
dec
test
lret
and
shl
pop
adc
test
insb
xchg
ds
push
out
inc
adc
sbb
rol
adc
mov
sbb
mov
mov
jge
mov
sbb
ja
shrb
enter
mov
leave
movsb
pop
outsb
sbb
rorb
mov
hlt
xorb
sub
test
hlt
mov
mov
aam
in
jnp
pop
pop
inc
stos
mov
outsb
pusha
shll
std
mov
sbb
pop
xor
lahf
in
mov
je
out
scas
mov
mov
cmpsb
push
lea
add
test
and
in
dec
imul
dec
mov
adc
cmpsb
loope
dec
enter
out
iret
andl
xchg
sbb
mov
jb
adc
lods
fnstsw
mov
mov
jmp
lock
and
pop
insl
mov
xchg
les
orl
cmc
pop
mov
pop
mov
shll
ret
xchg
call
lret
pop
arpl
mov
in
or
pop
aad
adc
adc
inc
fldl
add
jecxz
es
lods
jge
or
inc
add
cmpsb
pop
in
push
test
pop
jbe
cmp
lret
dec
popf
out
aas
rolb
cmpsb
sbb
sbb
ret
stos
aas
sarb
pop
jbe
iret
add
stos
mov
addr16
push
repz
lea
mov
cmp
pop
jge
stos
mov
jns
stc
data16
add
mov
or
xor
dec
push
inc
push
mov
outsb
sti
mov
movsb
sbb
mov
negl
jge
add
push
inc
ret
push
xor
insb
jno
lret
dec
xchg
mov
lock
loope
stos
pop
pop
loopne
pusha
lahf
sub
add
sti
lods
int
mov
sub
mov
fcomps
fidivrs
outsl
or
sahf
js
xchg
inc
cmp
insb
fidivl
imul
add
std
jp
add
sahf
lahf
sub
jecxz
cltd
jae
popa
cmc
ret
xchg
jle
push
pop
pusha
cmp
jae
cmp
imul
xorb
in
xor
push
mov
outsb
js
outsl
pop
dec
out
sbb
loop
int
inc
dec
xchg
stos
dec
adc
test
cmpsb
mov
inc
sbb
dec
jp
jae
test
xor
push
pop
out
movsl
hlt
dec
mov
inc
dec
push
dec
jg
and
repz
mov
cmpxchg
inc
out
shlb
inc
mov
or
jbe
das
pop
dec
cmp
int
mov
das
fbstp
xchg
or
jnp
jmp
incl
xchg
inc
fisttpl
iret
loopne
sub
cmp
popa
lds
push
or
test
pop
adc
stos
cmp
pop
mov
pop
push
adc
arpl
cs
mov
mov
and
into
push
xor
pushf
sbb
adc
push
dec
sub
mov
add
mov
inc
xchg
rcrb
push
ret
xlat
rorl
int
cmp
out
into
push
mov
mov
sahf
mov
out
loope
push
fwait
int
sahf
jne
aad
sub
loop
fwait
jmp
notl
pop
add
enter
shrl
in
sub
lods
pop
fninit
pop
mov
pop
mov
outsl
outsb
cld
in
pop
inc
jp
push
dec
mov
dec
hlt
jb
mov
test
push
push
jle
adc
jns
leave
mov
cmp
or
and
aaa
jl
mov
xchg
and
dec
clc
mov
pushf
xchg
ljmp
daa
jo
sub
pop
es
cld
mov
inc
into
inc
out
hlt
pop
test
cld
inc
jnp
jb
jbe
cmpsl
movsb
pop
sub
mov
sbb
cltd
sbb
rcr
mov
push
inc
cmp
in
push
lret
idivl
adc
pop
adc
xchg
inc
push
adc
lods
out
xchg
lock
test
inc
jge
or
dec
sub
push
stos
insl
pop
pop
sti
popf
and
pop
data16
adc
mov
imul
cmp
jl
pop
pop
bnd
das
jge
dec
jae
lds
stc
lods
movsl
stos
imul
push
cli
add
push
daa
jne
xorb
cmp
add
lods
ret
mov
test
rep
jno
sbb
fwait
jecxz
mov
insl
je
sbb
call
aaa
ds
rcr
sub
cmp
jl
sbb
jmp
pop
lock
scas
ljmp
mov
ja
aaa
scas
adc
inc
andl
sub
ret
jecxz
cmp
jns
in
sub
xor
sub
mov
rolb
pop
pushl
sahf
ljmp
adc
lock
push
scas
and
dec
out
shr
mov
mov
lret
and
jnp
lods
jl
sub
decl
sub
push
ror
loop
mov
xchg
mov
fs
les
or
test
push
fsubrl
push
ss
mov
adc
cmpsl
psllw
test
cs
movsb
arpl
and
mov
mov
inc
out
or
mov
imul
xchg
iret
inc
es
movsb
lcall
lock
xchg
add
aad
out
inc
ljmp
sub
sbb
rcll
mov
mov
sbb
orb
dec
pop
in
outsl
or
fsubrp
pop
lahf
pusha
cmp
jp
loope
stos
and
lods
xchg
movsb
aaa
mov
or
adc
and
mov
out
hlt
lods
add
bound
pushf
orl
bound
psubsw
hlt
pop
shr
sbb
test
mov
sahf
dec
cmpsb
inc
sbb
mov
mov
inc
mov
mov
pop
sbb
fcomi
mov
push
sub
push
dec
cli
inc
enter
daa
notb
mov
xchg
sub
mov
test
sbb
addr16
push
leave
or
mov
or
scas
cmp
mov
mov
rorb
pop
xchg
pop
lods
pop
xchg
jmp
sub
dec
insb
xor
loop
cltd
insb
inc
pop
sbb
lods
and
neg
scas
and
xchg
cmp
aam
cwtl
rcrb
gs
pop
addb
mov
mov
push
xchg
jmp
xchg
mov
not
daa
icebp
xchg
mov
stos
scas
gs
xor
mov
mov
mov
mov
ds
add
cmpsl
xchg
add
lea
sub
adc
cmc
or
in
dec
cmp
inc
cltd
inc
jecxz
cmp
xor
stos
push
or
scas
adc
arpl
push
sub
mov
xor
mov
dec
xor
fldt
ret
jge
fwait
jg
lock
jne
fucom
enter
ljmp
pop
fildl
inc
mov
lock
or
out
jo
imulb
lods
in
fnsave
icebp
cmp
push
ret
xchg
hlt
jge
imul
cmc
mov
mov
pop
cld
adc
rcrb
pop
out
mov
aaa
std
in
mov
inc
dec
sbb
icebp
sbb
and
pusha
sarb
outsl
mov
and
and
mov
cmpsb
and
push
xor
scas
gs
dec
xchg
lret
xchg
mov
mov
jg
mov
xchg
test
into
jne
test
mov
leave
cwtl
cli
fildl
int3
pushf
pop
mov
imul
insb
cmpsb
mov
sti
sub
mov
and
cmp
cld
rorb
movsb
push
cli
xlat
stc
sbb
push
or
add
test
xor
lock
test
imul
adc
jne
mov
ret
sbb
xchg
mov
dec
mov
inc
rcll
inc
sbb
pop
in
clc
sarb
insb
movsb
fcmovnb
mov
adc
sub
lods
leave
mov
icebp
fs
mov
jns
xor
mov
clc
call
shll
xor
shr
cld
mov
jnp
cmp
lahf
cmp
rorl
mov
cmc
fcoms
xor
fs
pop
mov
adcl
mov
xlat
push
push
pop
mov
and
pop
inc
xchg
lds
sub
outsl
jbe
push
insl
roll
out
out
mov
into
push
and
inc
cwtl
fld
cs
fstps
or
inc
mov
aas
dec
xor
into
xlat
out
inc
and
lods
xchg
insb
push
lcall
les
pop
ss
or
inc
add
scas
cmp
stos
loopne
scas
mov
xchg
out
xchg
mov
fmul
sbb
push
xchg
and
sbb
shll
aaa
xchg
or
mov
insb
jnp
ret
roll
mov
push
push
and
cli
add
out
insl
test
js
sub
mov
aam
or
pop
xorl
jl
pop
std
mov
inc
and
mov
out
push
or
lea
test
mov
pop
or
test
xchg
lods
outsl
xor
cmp
call
lods
xchg
test
outsb
push
push
std
ljmp
add
pushf
push
adc
dec
out
jb
lock
push
dec
ret
sbb
sahf
xchg
pop
clc
ja
pop
dec
dec
jp
mov
nop
test
sti
sbbl
notb
fisubs
cmp
stos
inc
and
hlt
out
cmp
sbb
inc
sbb
xchg
ret
scas
icebp
arpl
or
cli
out
push
cli
push
mov
jl
gs
in
iret
scas
jl
and
pop
cmp
in
sti
sub
ficoms
xchg
cmp
mov
mov
ss
pop
lahf
arpl
sub
fwait
pop
pop
sub
sbb
ret
sub
js
xchg
pushf
and
sbb
or
xlat
or
sub
xor
jle
jge
add
xor
push
mov
cmp
fs
test
mov
ja
pop
in
mov
mov
mov
out
cmpsl
mov
bound
xchg
cwtl
jbe
rolb
lds
lcall
pushf
mov
out
xlat
xchg
cmc
mov
fmulp
imul
sub
daa
cmp
fcomi
shll
mov
mov
lock
jmp
mov
and
stos
jg
movsl
imul
negl
mov
or
call
lea
jecxz
sub
xchg
inc
ret
xchg
mov
bound
dec
out
and
daa
xchg
sub
fucom
call
imul
jne
mov
inc
into
sub
shll
sub
mov
push
push
and
inc
push
lds
outsb
sarb
jl
push
sub
pusha
je
adc
lea
mov
pop
jp
insb
pop
aad
dec
inc
out
ret
mov
xchg
call
mov
sub
mov
negb
mov
lcall
adc
dec
movsl
xchg
and
test
fisubl
cli
cmp
jns
movsw
sub
mull
push
repz
add
jnp
outsl
lods
loopne
hlt
dec
push
mov
out
inc
lock
cmp
and
add
dec
ret
repz
insl
mov
push
cmp
cltd
loop
or
xor
xor
fistps
jo
xor
adc
mov
das
cmp
popaw
les
add
dec
jmp
push
mov
inc
and
ds
js
adc
xlat
pop
xlat
mov
or
pop
dec
cli
xor
mov
lcall
aam
inc
ljmp
mov
xor
push
insb
push
les
les
jno
cmp
and
xlat
in
lods
and
rclb
aas
xchg
jo
mov
gs
pop
dec
sbbl
xorb
stos
fistpll
rcll
jns
in
push
push
popa
enter
and
pop
cmp
sub
rcrl
sbbl
hlt
fnstsw
aas
inc
sbb
lret
pop
adc
mov
pop
nop
loope
orb
adc
cmp
xor
jb
push
dec
fxch
pop
daa
dec
fisttpll
mov
out
inc
mov
mov
push
add
rolb
mulb
inc
mov
cmc
shr
mov
insb
pop
mov
pop
shlb
mov
lret
jge
cli
add
std
rorl
cs
mov
cs
push
push
mov
inc
in
jbe
fists
mov
jmp
aas
out
pop
jbe
or
cs
mov
jns
xor
das
mov
sti
xor
xor
lret
adc
xor
jb
dec
add
mov
adc
sbb
push
xorb
rcrl
push
loop
mov
inc
or
cwtl
mov
dec
cli
sahf
scas
push
push
enter
pushaw
gs
repnz
icebp
cmp
es
push
int3
push
and
jno
mov
pop
ret
sub
mov
inc
inc
pushf
scas
out
sarb
xor
lock
outsl
lret
mov
aaa
fsub
jnp
lods
mov
sbb
mov
into
mov
xor
jge
add
test
xchg
sbb
mov
cmp
push
xchg
push
pop
out
mov
mov
arpl
mov
dec
out
outsl
mov
dec
popl
inc
cmpsb
in
xor
push
jge
xchg
in
mov
push
pop
lahf
cmp
sbb
lret
and
les
mov
xor
xchg
push
mov
pop
jecxz
sahf
dec
adc
in
dec
sbb
ss
mov
outsl
int3
imul
add
adc
sbb
bound
insb
int3
add
inc
lea
ss
pop
imul
cltd
outsb
sbb
ja
adcl
clc
pop
rcll
sub
lret
mov
or
push
and
sub
notl
dec
scas
pop
or
sbb
in
ljmp
cmp
or
xor
xchg
xchg
sbb
inc
pop
jmp
into
ss
loop
push
push
add
fistpll
pop
or
mov
dec
xchg
rol
jns
jo
or
hlt
lods
inc
lods
or
sbb
outsl
hlt
mov
adc
xchg
inc
cld
cs
sbb
pop
fists
mov
mov
push
mov
insl
mov
adc
popf
mov
pop
cltd
or
push
lock
jb
mov
sbb
rorb
scas
inc
fcmovnb
mov
in
addr16
mov
shlb
rcrl
sub
add
rcr
jle
stos
inc
adc
mov
xor
mov
and
pop
in
sbb
jns
or
sbb
dec
lock
or
test
mov
data16
ret
imul
loopne
sahf
fcoms
pop
js
jmp
jl
and
inc
sub
int3
jns
jl
repnz
fiadds
rorl
mov
leave
jge
push
dec
and
or
adc
adc
and
ja
and
sub
fs
sbbb
mov
sbb
loope
and
or
mov
xor
test
mov
jnp
test
cmp
xor
or
ret
movsb
xor
jge
stos
jl
divl
mov
mov
jo
xchg
jb
mov
mov
lret
jno
pop
cmc
leave
loopne
xor
and
dec
ljmp
or
in
mov
pop
sub
sbb
xorb
iret
sbb
jae
inc
int3
sbbb
fimull
mov
outsb
add
xorl
lock
mov
fcompl
lcall
daa
and
addb
je
jnp
and
jp
inc
nop
pop
psadbw
cmp
mov
push
out
orl
push
xor
stc
xor
cli
sub
mov
outsl
or
mov
inc
sbb
lret
iret
shlb
stos
sub
jle
sub
mov
mov
int
fimull
mov
push
pop
insb
in
pop
push
ja
cmpsl
pop
fucomip
push
insl
mov
fisubrs
mov
inc
mov
dec
dec
mov
imul
mov
jl
mov
dec
push
outsb
out
push
es
pusha
sub
push
cmpl
inc
pop
lcall
ret
lahf
add
int
cmc
mov
scas
xor
sbb
outsl
hlt
lcall
movl
cmp
not
sbb
test
cmp
mov
mov
pop
out
jno
pushf
outsb
int
aam
fnstsw
mov
andb
mov
loop
movsl
pop
add
pop
in
shrl
sti
or
pop
sub
dec
add
lret
adc
popl
sbb
iret
pop
pop
lcall
std
mov
mov
outsb
ljmp
aas
xor
add
pop
cmpsb
cmp
arpl
jg
sub
jle
and
fnstcw
sti
divb
sbb
dec
inc
nop
mov
jmp
stc
in
shlb
jns
int3
xor
mov
cmp
mov
rclb
push
cwtl
loop
pop
int3
filds
xchg
and
imull
push
mov
pop
add
mov
bound
pop
out
and
xchg
mov
xchg
shrb
and
in
jae
jmp
jmp
dec
js
push
xor
js
cmp
fs
mov
push
repz
dec
in
bound
xor
sub
divl
inc
les
add
and
sub
jb
fisubs
jl
xor
shrb
bound
push
and
ss
jns
arpl
out
mov
cmp
test
jne
cmp
adc
sub
jb
push
scas
mov
push
jg
nop
pop
sub
jge
adc
jns
dec
fcoms
jl
add
divb
rorb
or
loopew
sbb
jle
cmpsb
lret
push
in
sub
nop
mov
and
enter
shrl
cmpsb
lds
inc
inc
shll
add
lds
dec
cmp
inc
jae
lcall
mov
dec
je
dec
jle
or
pop
xor
sbb
add
in
test
inc
movsb
push
fcmovnu
ror
fcmove
jmp
aas
sarb
mov
mov
enter
scas
jbe
add
ljmp
push
enter
cmp
les
xchg
fildl
xchg
std
stos
iret
sub
mov
pushf
out
mov
aaa
fstps
mov
dec
cmpsl
scas
or
leave
stos
in
or
int3
inc
mov
dec
push
cmp
into
std
add
dec
dec
jl
repz
outsl
scas
aaa
imul
pop
incb
adcl
pop
mov
or
out
rcr
xor
inc
add
subb
ficoms
jns
ret
xchg
insl
jns
scas
cld
adc
push
jg
out
jae
pop
insb
mov
jmp
jb
ret
pop
add
and
mov
adc
stc
jle
fisubl
loop
xorl
dec
sub
push
lock
aam
scas
pop
insl
jecxz
loop
adc
pop
or
inc
inc
mov
nop
mov
add
pop
sahf
jnp
mov
sahf
xlat
push
mov
pop
insl
testl
fbld
arpl
jp
jp
mov
push
xchg
jnp
or
jnp
orl
inc
loopne
dec
inc
gs
scas
fcompl
push
adc
cmp
fildll
sub
fstpl
int3
pushf
add
mov
lds
mov
stos
or
lods
out
mov
test
and
mov
mov
lods
mov
fs
nop
in
dec
push
mov
mov
bnd
push
addr16
dec
xchg
in
cltd
pop
std
cwtl
mov
insl
aas
sub
cmp
ja
mov
cmp
je
sbb
jbe
test
sbb
cmpsl
push
xchg
cmpsl
ficomps
xor
into
je
loop
jge
into
jo
daa
add
js
xchg
bound
push
out
leave
ss
xor
add
leave
mov
punpckhbw
push
notb
cmp
cltd
lds
and
mov
daa
dec
in
pop
lahf
add
fstpl
js
pop
ret
adcb
xor
aam
sbbl
out
mov
imul
jle
mov
jle
xchg
push
mov
ss
stc
cmp
push
daa
inc
sti
js
addb
jl
lahf
scas
orb
cmp
call
mov
push
mov
popl
mov
jns
pop
xor
add
cltd
outsb
cmpxchg
in
sub
mov
rcll
xchg
dec
dec
clc
out
lret
add
lret
mov
or
mov
adc
push
mov
and
hlt
sti
fiaddl
in
push
sbb
adc
cmp
sarl
jnp
dec
xchg
adc
das
sub
push
xchg
lahf
push
xor
test
mov
in
test
gs
outsl
push
sbbl
decl
in
hlt
mov
in
jne
or
inc
lods
bound
sbb
int
xchg
out
dec
shlb
iret
notb
leave
sbb
xchg
adc
push
outsl
aad
jnp
or
xorl
repz
out
in
jbe
cs
xchg
fisubs
add
aam
sub
es
in
test
pushaw
ret
xchg
movsl
bound
pop
fmull
insl
add
mov
scas
xchg
stos
aas
pop
dec
lods
xchg
pop
out
push
in
and
lahf
insb
ljmp
xor
lret
adc
bound
data16
shll
mov
inc
mov
mov
pushf
bound
mov
ss
cwtl
xor
or
pop
inc
out
xor
test
std
push
dec
sbbb
aam
dec
test
inc
test
popa
sbb
out
out
sbb
mov
mov
pop
cmp
daa
lcall
pop
pop
lret
fiaddl
inc
mov
xchg
xchg
cmp
lods
lret
push
jg
addr16
sbb
dec
sbb
push
dec
dec
ret
aam
pop
stos
dec
sbb
fwait
sub
pop
insb
push
ret
test
into
dec
jns
test
out
sub
sub
fildl
cmp
das
lret
add
mov
sub
lea
movsb
fwait
jmp
pop
sub
push
xchg
or
bound
cmp
icebp
cld
ljmp
mov
pop
outsl
or
insb
xor
mov
xlat
mov
inc
insl
mov
js
orb
mov
add
xchg
and
sbb
mov
inc
inc
pushf
xchg
push
es
xor
iret
add
pop
mov
sbb
lcall
pop
imul
outsb
pop
movsl
mov
sub
aaa
sbb
push
pop
jecxz
aad
fidivrs
ret
mov
aam
lods
sub
dec
int3
insl
push
pushw
decl
xchg
scas
rcl
push
ret
stos
inc
and
daa
inc
mov
inc
testl
ret
xchg
sarb
pop
movsl
pop
test
sbb
sub
jne
xor
jmp
lods
dec
in
dec
jns
pop
lahf
es
xchg
mov
addl
adc
aas
jecxz
pop
add
out
lods
lock
aaa
and
inc
stc
aas
jno
xor
clc
add
push
ja
push
repz
jns
hlt
inc
xor
add
imul
into
push
adc
out
scas
aas
idiv
or
or
pop
push
adc
fimull
and
pop
mov
cwtl
ja
cmp
jle
fimull
mov
xor
cli
xlat
inc
scas
ds
cli
into
jecxz
add
jno
lds
sub
mov
mov
test
mov
loop
fstps
mov
jmp
in
in
push
push
imul
iret
ror
mov
outsb
and
xchg
xchg
adc
cld
shlb
repz
inc
js
arpl
xchg
cltd
pop
or
pop
jbe
fnstcw
mov
and
mov
call
sahf
pop
sbb
mov
or
mov
lcall
xor
xor
out
gs
xchg
xrelease
xchg
pushf
lods
loop
lea
mov
cs
cli
cmpsb
add
xchg
test
jg
add
and
dec
push
daa
or
mov
ret
mov
scas
and
xchg
enter
jnp
xchg
shll
cwtl
fs
movsb
add
mov
out
loope
fs
mov
mov
cmpsl
imul
xor
pusha
movsl
jb
lahf
or
or
bound
das
and
jnp
arpl
dec
sub
ret
xor
or
sub
jecxz
stos
lea
inc
sub
inc
fiadds
in
sub
cmp
add
ret
mov
add
lahf
cmp
mov
movsb
in
mov
jb
lret
ss
dec
or
xchg
js
push
ret
out
sbb
aad
pop
lock
daa
xor
xchg
pop
push
popf
inc
daa
shll
inc
out
push
sub
mov
xor
insl
test
ds
cmpsl
rclb
xchg
cwtl
pop
and
stos
in
inc
xor
subb
mov
jp
pop
and
pop
fildl
xor
jl
cld
fisubl
in
daa
add
lock
arpl
addr16
stos
enter
xchg
js
pusha
xchg
loop
jmp
push
or
daa
mov
orl
lock
xor
fmuls
mov
mov
sbb
lret
lcall
mov
test
cwtl
ret
push
inc
out
imul
loopne
mov
mov
out
test
inc
fisubrl
cmc
pop
in
xor
xor
jecxz
xchg
pop
lea
mov
aad
xor
sub
inc
mov
sbb
cmpsl
lahf
andl
xchg
call
pop
jnp
mov
shll
loope
mov
xchg
jp
adc
lea
adc
add
jno
dec
ficomps
xor
and
mov
and
sub
inc
xchg
aaa
add
imul
and
push
fcomip
and
cmp
loopne
fisttpl
jge
and
lret
mulb
add
lock
xchg
pop
jecxz
add
sbb
arpl
stos
sbb
ret
out
lcall
adc
pop
add
rol
pop
arpl
pushl
les
xor
sub
or
pop
jl
outsl
repz
icebp
xchg
push
rorb
popf
cmp
out
sbb
xchg
lods
push
cmp
stc
add
inc
dec
enter
cld
xchg
jno
daa
ss
cmp
mov
jge
push
mov
inc
sarb
xor
xchg
inc
insl
cmp
cmp
roll
xchg
push
fwait
testl
adcb
fiaddl
aad
insl
fwait
and
in
jne
xchg
jns
or
adc
sub
mov
add
roll
sub
mov
movsb
rcrb
int3
lea
stos
pushf
mov
and
dec
nop
pop
cmp
aad
jmp
pop
movl
push
dec
push
xchg
xchg
xchg
outsl
sbb
sub
data16
sbbl
inc
xchg
adc
scas
pusha
sub
xchg
push
ffreep
or
inc
stos
cwtl
stos
cmp
xor
gs
roll
inc
pusha
jle
push
sbb
neg
mov
adc
inc
xor
dec
xor
cvttps2pi
add
cmp
in
inc
xchg
idivl
inc
in
jmp
xor
adcl
mov
jg
pop
mov
pusha
std
push
icebp
jle
xchg
jmp
adc
in
inc
adc
ss
mov
pop
imul
cltd
shlb
pop
dec
jnp
lea
nop
mov
lret
mov
jmp
xchg
add
mov
cwtl
sub
mov
data16
mov
jecxz
scas
jbe
leave
sahf
shl
or
arpl
fcmovnb
jp
pop
add
cmp
loopne
jnp
add
push
aad
or
adc
data16
js
inc
imul
test
ds
sbb
fdivl
cmpsl
jno
outsb
mov
mov
test
cwtl
mov
stc
daa
loop
addr16
lds
push
test
xchg
add
ss
and
sub
xchg
dec
push
data16
loop
cmp
mov
in
test
xchg
scas
test
ret
and
and
stc
addr16
cmpb
clc
aaa
adc
call
xchg
inc
dec
dec
cmpsb
scas
inc
in
andl
pushf
pop
mov
mov
inc
mov
je
cs
lcall
push
push
leave
fstpt
idivb
ret
popf
std
movsl
movsb
std
sub
icebp
cmp
cmpsl
jecxz
cmp
jge
sbbb
test
xchg
ud2
jb
xchg
cltd
outsl
mov
push
pop
push
sbb
and
enter
movsl
insw
cltd
shl
mov
and
xchg
out
mov
addl
sti
lahf
outsl
sub
and
jecxz
cmp
dec
mov
xchg
dec
fdivrl
mov
sub
mov
or
pop
ds
fdivrs
cmp
add
ljmp
sti
cmp
sbb
lock
or
jno
mov
fcomp
mov
scas
push
cli
mov
sub
add
pop
or
fimuls
sbb
fcompl
xor
sub
xor
int
push
fistpll
mov
mov
jnp
jecxz
cmp
push
mov
sub
and
hlt
scas
jae
jle
lods
rcl
inc
mov
inc
jae
and
cwtl
jns
mov
mov
and
xor
mov
mov
pusha
xor
dec
xor
cmp
add
sub
dec
pop
incb
add
movsl
addr16
mov
fxtract
cli
cli
in
sbb
jecxz
movsb
mov
loope
dec
cmp
jb
in
push
inc
fwait
cmp
xor
inc
fisubrs
jmp
mov
wbinvd
fisttps
mov
fdivp
into
sub
ror
adc
loop
push
mov
imul
int
push
xor
xlat
jnp
adc
sbb
or
lret
jge
dec
sub
or
or
hlt
insl
adc
ret
sbb
jb
inc
test
dec
add
push
lods
rcrb
lea
xlat
adc
cmp
or
jo
mov
xchg
cmp
mov
push
test
jnp
addr16
fnsave
xor
mov
test
jge
ds
ror
pop
pusha
cltd
test
pusha
popa
adc
sbb
adc
mov
sub
add
andb
sub
dec
pop
shr
out
cmp
test
and
inc
ret
and
adcb
sub
cmp
xor
popf
sub
mov
subb
jle
stos
push
mov
mov
pushf
jmp
gs
sbb
fsubrp
cmp
shll
imul
jb
jg
xchg
rcll
scas
insl
add
jae
incl
inc
insb
hlt
popf
mov
sub
jle
inc
push
cmpsb
lods
push
flds
jecxz
rorb
cld
mov
les
sub
mov
push
mov
out
add
aas
imul
mov
lret
xchg
cmp
mov
imul
cmp
pop
push
mov
cmc
mov
int3
cltd
xor
mov
stc
leave
jb
popa
insl
lds
sub
mov
mov
repz
lds
and
mov
add
lock
adc
cmpsb
mov
repnz
or
ja
jge
inc
adc
xchg
int
scas
or
imul
je
sub
mov
add
mov
enter
inc
mov
out
std
arpl
dec
jno
jle
adc
dec
test
shll
pop
in
ljmp
xchg
lds
xor
jo
add
test
ss
into
mov
loop
loop
or
mov
jns
lahf
out
enter
xchg
xor
cmp
shrb
scas
leave
rcll
pop
cmp
or
in
lock
testl
arpl
xchg
in
pop
pop
add
scas
shll
pusha
adc
ljmp
movsb
push
aaa
inc
test
adc
mov
cwtl
int
lods
stos
inc
stos
and
cmp
imulb
or
mov
mov
sbb
mov
add
xor
lret
orb
pop
in
push
in
in
fmuls
lods
push
mov
lock
fists
bnd
int3
cmp
pop
repnz
jne
mov
jb
or
xchg
int3
ror
repnz
mov
push
jne
mov
push
mov
xchg
dec
scas
and
in
add
xchg
loope
mov
jo
jle
sbb
cmp
add
imul
nop
pusha
loop
pop
gs
mov
inc
shlb
push
pop
ss
roll
inc
lea
pop
jb
xchg
aas
fidivl
jae
xor
in
push
fincstp
in
jmp
push
in
push
lock
cltd
adc
sub
adc
sub
and
and
in
jg
mov
andl
dec
push
jb
movsb
mov
cmpsl
adc
lods
and
insl
outsb
test
sbb
sarb
aad
jb
jmp
dec
adcl
hlt
std
inc
data16
inc
xlat
ss
fwait
sti
or
adc
ss
sub
fsubrl
push
enter
mov
xchg
pusha
arpl
nop
into
gs
cmp
and
insl
xor
inc
jae
sub
leave
mov
xchg
adc
cld
jmp
into
inc
imul
and
jmp
mov
jne
int
dec
mov
sarl
mov
jge
insl
jle
ret
popa
or
inc
popf
imul
inc
push
and
testb
inc
lcall
mov
je
sub
and
or
jo
fcompl
repnz
rcll
cmpsl
xchg
jo
leave
enter
push
lret
mulb
jb
leave
daa
sub
inc
cmp
inc
enter
mov
shll
out
mov
in
imul
add
mov
sub
sub
lcall
clc
cli
cmpsb
cltd
cmc
ja
inc
add
out
mov
xlat
push
add
mov
mov
sbb
aam
sub
pop
push
adc
push
dec
clc
push
popf
push
pushf
out
ror
js
arpl
sbb
dec
xor
movsb
inc
sbb
or
nop
test
inc
out
dec
frstor
scas
jle
int3
scas
out
dec
xchg
stos
icebp
jmp
in
push
repz
addr16
shrl
mov
jp
scas
pop
xchg
cltd
jp
lock
dec
mov
std
call
mov
sti
sar
pop
std
push
inc
pop
lods
sahf
push
xlat
pop
xchg
adcl
adc
out
mov
nop
cli
and
mov
sub
iret
mov
add
outsb
sarl
pop
inc
enter
xchg
cltd
pop
in
dec
cmpb
rclb
adc
mov
and
cmp
xor
xchg
pop
jmp
mov
cli
and
cmp
test
loop
xorps
adc
lahf
mov
stos
xchg
pop
shll
mov
in
jo
jp
sub
add
jno
dec
jne
xor
dec
adc
xor
pop
xchg
ljmp
loopne
in
jl
je
pushf
les
xchg
or
fld
xchg
adc
jge
and
scas
cmpsb
jecxz
push
push
mov
insl
andb
push
pop
push
xor
push
xchg
xchg
mov
sbb
mov
cmpl
and
pop
pushf
movsl
outsb
test
out
sub
call
int
lcall
rorb
imul
ficoml
test
add
mov
mov
loopne
orl
or
cmp
ret
jecxz
leave
cmp
gs
cmp
and
std
test
xor
xchg
sbb
fistl
mov
mov
popa
pop
call
scas
pop
add
push
cmp
aaa
in
mov
popa
daa
adcl
or
mov
push
scas
popa
jo
and
out
push
mov
js
lea
xchg
out
sbb
mov
clc
jns
cltd
out
pop
sbb
push
pop
das
sbb
sbb
lcall
push
sub
lea
mov
fimuls
dec
test
sub
push
rol
mov
xchg
fsubr
pop
aaa
mov
repz
int
lods
or
dec
ror
sbb
fimuls
push
scas
mov
out
imul
mov
sub
cmp
std
mov
subl
jl
xchg
push
pop
ss
shr
stc
incl
js
jno
xchg
ficoms
and
test
mov
xchg
in
and
pop
push
mov
push
xlat
out
test
cwtl
add
adc
mov
sub
ss
cmp
push
ds
mov
loopne
shlb
push
in
ja
xor
add
jnp
add
jmp
pop
lods
adc
add
inc
cmp
mov
mov
push
cmpsb
es
mov
cmp
stc
pop
out
cmp
xchg
test
jno
xchg
in
inc
mov
arpl
js
push
xchg
scas
mov
gs
movsb
xor
push
aad
jb
enter
jg
push
leave
repnz
repz
les
jp
jp
inc
movsl
push
xor
icebp
movsl
xchg
fnstenv
inc
and
ret
pop
cmp
test
shlb
mov
add
cmp
enter
add
sbb
add
xorl
xchg
push
lret
sahf
test
ret
pop
in
adc
ss
cmp
jg
sbb
pop
fldl
pop
mov
in
sub
insl
dec
mov
inc
das
shrl
out
aas
xor
loopne
mov
aas
repz
jb
ds
jle
les
sbb
jmp
xlat
sbb
sbbb
sub
in
in
test
nop
bound
shll
and
stos
or
inc
test
fstpl
es
push
loopne
cmpl
jnp
add
sub
repnz
aad
mov
inc
xor
xor
into
fiaddl
mov
cmp
popl
sbb
push
jne
addr16
js
inc
add
xor
mov
push
enter
aam
adc
lods
iret
or
nop
stos
jmp
pop
sbb
in
adc
int
sti
repnz
sbb
jnp
and
sahf
pop
insl
test
and
sbb
push
sarb
fildll
add
jno
pop
lahf
in
jg
mov
lods
mov
orl
xchg
push
sub
outsb
mov
in
inc
and
mov
jae
push
pop
and
bound
and
jl
cmpsl
dec
sbb
jmp
into
arpl
push
inc
jmp
push
int
ret
divb
xor
xorb
cmp
sbb
data16
and
hlt
pop
out
insb
cmc
add
sarb
or
int
jno
daa
mov
and
or
jnp
clc
mov
sub
xor
gs
xor
pop
stos
add
add
cltd
inc
cmp
or
movsb
das
cmp
movsb
scas
xchg
pushf
sbb
cmpsb
mov
and
call
nop
or
popf
and
xor
loope
cli
cmpsl
aas
aas
iret
dec
test
add
adc
insl
mov
xor
or
or
gs
xchg
cmp
mov
or
mov
push
dec
xor
addb
and
adc
cmp
push
adc
call
sbb
jnp
rorb
dec
rclb
in
dec
jecxz
xchg
sbb
lds
jle
je
lahf
divb
fisubrs
ss
adc
std
mov
inc
leave
fsubs
sbb
andb
jg
and
aad
out
mov
xchg
imul
pop
xor
stos
and
std
mov
dec
fadd
jb
mov
in
stos
pop
xchg
aad
mov
lods
jbe
lret
mov
inc
cmpsl
hlt
mov
sub
adc
lds
add
scas
or
pop
test
movsb
adc
test
dec
aad
stc
push
pop
lock
inc
loope
sub
insl
aaa
iret
sbb
leave
mov
mov
fistpl
xchg
mov
cltd
mov
xor
and
mov
test
inc
loope
test
push
cmp
sub
push
xchg
test
xchg
xor
ret
jns
popa
repz
js
mov
push
dec
cmp
xor
mov
out
popf
es
sbb
pusha
xor
ljmp
sbb
sahf
sub
cmpsl
adc
ljmp
mov
add
dec
sub
gs
repz
jge
decl
xor
aad
jbe
sub
les
loope
lods
xchg
fistpll
jns
push
jmp
mov
fsubr
mov
into
arpl
clc
or
clc
jl
lock
in
mov
pop
jle
ss
ret
xchg
pop
add
mov
cmp
in
lock
inc
nop
xchg
enter
leave
pop
mov
inc
das
sbbb
pmuludq
cwtl
jmp
add
pop
xchg
pushf
jnp
adc
add
in
ret
aad
cld
mov
fcmovne
stos
imul
fsubrs
dec
jb
sub
push
sbb
out
jbe
dec
or
in
xlat
jge
imul
pop
fwait
push
dec
xchg
scas
popf
outsl
jbe
aam
mov
push
adc
cltd
loope
jo
xchg
mov
fmull
adc
mov
cltd
ror
movsl
jg
ret
dec
arpl
fbstp
loopne
loop
sbb
mov
std
rcrl
lahf
icebp
cmp
sbb
sub
mov
ficompl
sbb
movsl
fs
fiaddl
add
jbe
mov
cmp
dec
and
jge
clc
jmp
jbe
aas
data16
outsl
fcoml
adc
inc
push
xchg
xor
xlat
int
inc
and
js
imul
int3
or
je
mov
movsl
xchg
out
lret
fists
test
sti
sti
gs
xchg
jbe
out
xor
mov
nop
mov
ja
imul
stos
jne
movsb
jmp
dec
enter
pop
sbb
mov
mov
sahf
mov
push
fwait
pop
cltd
jno
pop
sbb
imul
adc
out
push
adc
jecxz
jae
pop
mov
push
jmp
cmpsl
add
or
add
jl
mov
xchg
iret
js
xor
cld
sbb
int3
inc
xchg
mov
mov
test
push
sub
mov
xchg
arpl
jmp
jp
fisttpl
ljmp
push
adc
div
jnp
subl
inc
rcrb
shll
jp
fsubs
push
sbb
fs
sbb
ret
cwtl
dec
cmp
add
insl
mov
mov
xchg
push
push
inc
fldt
mov
xor
lods
mov
cltd
pop
pusha
mov
xlat
lea
pop
add
jg
dec
xchg
dec
cmpsb
fistl
lret
aas
and
push
or
leave
ror
imul
mov
lea
cmp
cld
and
iret
or
imulb
add
xchg
fnstenv
pop
test
xchg
ds
fsts
inc
cmpsl
pushf
dec
sbb
xlat
shlb
xchg
cmp
inc
inc
ljmp
in
imul
fwait
mov
or
lds
inc
lret
push
int3
mov
divl
xchg
inc
add
jae
sti
xor
jae
sbb
div
fdivs
mov
insl
xchg
xor
pushl
in
dec
ja
bound
sub
and
fmul
mov
ds
or
aad
push
add
inc
pop
inc
xor
jge
mov
fs
fimull
dec
cmp
hlt
aaa
cmpsl
int
imul
push
jmp
xlat
repnz
xor
pop
or
inc
gs
inc
jmp
mov
pop
and
xchg
nop
jge
andb
jnp
je
sti
fwait
push
je
mov
iret
out
cmp
and
jno
cmp
mov
mov
xchg
mov
jl
sub
lods
in
les
testl
rcrl
mov
out
jnp
push
out
or
mov
xlat
mov
mov
movsl
sbb
frstor
or
fsubrs
idivb
pop
cmp
sbb
pop
adc
pop
cltd
flds
mov
jnp
andl
xor
mov
je
sub
mov
and
iret
loopne
fdivrs
or
out
sbb
pop
mov
aas
aas
and
or
ror
mov
in
shlb
shll
and
cmp
push
jbe
sarl
cmp
out
nop
push
fisubs
mov
hlt
pop
lcall
lods
orl
and
xlat
lods
push
push
int3
pop
mov
mov
imul
or
cmp
jmp
cmpsb
fwait
cmpb
std
push
ret
adc
ja
push
testl
adc
xchg
add
daa
inc
adc
stos
decl
mov
add
jnp
xor
cmp
or
jl
cmp
push
cmp
ljmp
mov
fsts
data16
das
shl
push
sti
push
or
test
inc
in
jle
das
push
push
cltd
mov
ret
fildl
cli
shll
and
lahf
lock
std
pusha
add
xor
pop
ror
adc
lahf
fcoml
jmp
pop
xor
das
push
cmc
and
pusha
push
sub
adc
lahf
ds
cmp
dec
mov
scas
mulb
sub
mov
enter
add
jl
adc
sub
xchg
sub
hlt
xor
in
dec
dec
ret
push
in
cmp
pop
movb
lret
fsubrs
icebp
push
add
jg
cmpsl
inc
cmp
fwait
mov
not
mov
outsl
dec
sbb
sbb
fisubl
inc
sbb
xchg
jbe
inc
pop
xor
sub
sbb
inc
xor
sarl
jb
ja
mov
mov
and
fcomip
sub
inc
push
push
cmp
imul
lods
xchg
shrl
jle
decb
pop
std
lods
int3
mov
pop
aad
ror
lcall
outsl
dec
add
rcrb
les
or
into
jp
adc
cld
jg
mov
out
in
jae
inc
mov
ret
adc
xor
divb
push
fdivp
cmpsl
sbb
scas
or
sbbb
scas
push
mov
lret
ret
push
dec
addr16
xchg
xor
leave
pop
sub
lods
fcompl
nop
jmp
or
and
inc
rcll
jnp
out
imul
lds
xchg
jmp
fidivrl
sub
std
inc
loope
adc
fcmovb
cmp
mov
adc
mov
sbb
sbb
jbe
lea
xchg
adc
pop
sarl
cmc
aad
jg
pop
daa
mov
sahf
daa
out
mov
pop
dec
push
inc
fildl
popf
hlt
and
adcl
mov
xor
aad
push
mov
and
mov
and
jnp
add
cmp
out
mov
mov
insb
xchg
jle
or
rol
mov
sub
inc
sbb
jecxz
adc
test
int
adc
cld
mov
cmpsb
sbb
inc
rcrb
lret
fs
inc
xchg
add
orl
call
xlat
mov
out
fs
int3
mov
cmpb
push
shlb
cmpl
iret
je
pushw
mov
sti
mov
fucompp
fistpl
or
dec
imul
add
cmp
inc
xor
inc
xor
popl
incl
sbb
imul
dec
movb
dec
xor
jo
dec
ss
jmp
jbe
jecxz
cmp
decl
xor
iret
jl
mov
add
stc
mov
les
test
dec
dec
jne
ja
jns
pop
mov
pop
sbb
cltd
gs
push
dec
adc
movsl
shrl
pop
stos
loopne
pop
daa
mov
sbb
pop
ljmp
shlb
in
ret
mov
push
mov
mov
jns
out
pusha
fwait
icebp
push
and
cmp
and
sub
scas
mov
sub
mov
push
clc
insb
in
shll
fidivrs
push
pusha
cs
or
loopne
mov
lea
lods
ljmp
lods
dec
add
xor
fwait
mov
mov
in
or
or
cltd
jno
cmp
or
scas
fwait
cltd
jge
test
sbb
test
sbbb
clc
mov
and
dec
ljmp
xorb
push
dec
es
dec
sub
ds
push
xor
cmpb
bound
jge
les
inc
sub
filds
dec
cmpsl
push
pop
lods
pop
iret
les
stc
je
and
jle
push
sbb
sub
xorl
pop
jle
mov
and
stc
inc
pop
out
add
cmp
mov
addr16
cwtl
sahf
je
mov
call
lock
or
xchg
inc
xchg
out
aas
pop
fadds
cmp
outsb
mov
mov
mov
jno
mov
inc
dec
adc
mov
outsb
shrl
mov
shll
call
fidivrs
loopne
gs
jecxz
mov
xor
push
sbb
hlt
int
xchg
adc
das
mov
ss
out
ja
pushf
push
imul
pop
gs
pop
xor
adc
mov
or
lods
push
xchg
or
into
je
dec
sub
popf
inc
arpl
pop
pop
std
xor
add
je
sbb
pop
es
loop
ss
jne
adc
and
std
add
add
aad
and
sub
mov
mov
xchg
loope
sub
pop
mov
insl
daa
sbb
and
fisubrs
lahf
dec
sbb
in
add
loope
sbb
mov
hlt
or
lcall
mov
hlt
ljmp
lret
and
add
repz
rorb
loope
lods
aaa
mov
and
shl
in
jp
or
inc
sarb
loopne
cmp
fdiv
test
in
cld
push
jmp
xor
pop
scas
pushf
cmp
push
jp
setns
xchg
and
cmpsl
mov
push
sbb
dec
dec
push
int
les
mov
mov
je
insb
push
add
in
call
mov
idiv
sbb
xchg
fdivl
push
fsubl
jmp
xor
mov
xchg
mov
ret
pop
push
imul
xchg
jg
inc
rcrb
mov
dec
enter
shlb
cmp
leave
jbe
xchg
movsl
xchg
ret
nop
filds
outsb
sbb
outsl
lods
push
aas
pusha
xchg
xchg
push
add
clc
jo
xor
adc
mov
mov
pop
xchg
scas
jge
push
mov
fcom
xlat
ljmp
jmp
pmulhw
inc
aad
in
jo
ret
orl
iret
adc
jg
outsb
cwtl
mov
insb
dec
notb
ljmp
pop
cmp
push
mov
pop
dec
in
push
add
out
mov
lret
cmp
xchg
lods
mov
jecxz
mov
push
mov
mov
or
sub
or
cwtl
test
subb
add
mov
cwtl
scas
push
inc
mov
xchg
inc
sahf
stos
jnp
pop
add
jmp
adc
pop
pusha
jo
out
cwtl
in
mov
arpl
rolb
in
pop
mov
dec
mov
sbb
pop
inc
jg
loope
add
dec
sub
pusha
or
shrl
inc
push
std
cmp
push
add
mov
sub
jno
div
mov
test
sti
aaa
mov
jo
loop
das
inc
push
aas
out
jb
and
pop
std
imul
fsts
and
and
cmp
sti
nop
and
mov
dec
and
aad
and
scas
div
mov
popa
add
cmp
sbb
andb
xchg
or
outsl
push
mov
sub
and
ja
add
adc
hlt
gs
stos
jno
in
enter
or
jnp
bound
fsts
jmp
xchg
into
adc
adcb
dec
mov
daa
insl
sbb
std
push
das
inc
dec
ds
movq
icebp
dec
jle
pop
cli
xchg
adc
inc
shr
add
into
les
sbb
incl
cmp
cltd
xchg
in
repnz
das
push
cmp
adc
sbb
fists
movsb
mov
jnp
add
adc
or
cmpsb
and
pop
sub
jp
inc
pop
mov
mov
cmp
ror
pop
xchg
jno
je
mov
jp
cli
cmc
arpl
stc
push
loope
repnz
jne
push
mov
lcall
cmpsl
shlb
pop
imul
pop
int
test
mov
sbb
push
dec
cmp
xor
xor
inc
sub
or
cmp
xchg
add
push
pop
mov
fldl
in
fwait
mov
lcall
mov
pushf
cmc
fcomip
loopne
shlb
incb
loopne
xchg
sub
inc
adc
jae
int3
fdivrs
dec
cmp
shll
xor
addr16
dec
je
xor
pop
mov
lods
pop
jb
xor
in
in
mov
notl
insl
mov
cmovl
xor
subb
out
jb
lcall
fs
fbstp
push
pop
repnz
push
mov
loopne
xor
jmp
bound
or
sbb
jns
add
xchg
insl
inc
push
js
imulb
fdivrs
pop
ds
jnp
or
inc
insb
rcl
dec
addr16
cmpsb
xor
or
stos
push
inc
jae
movsb
jl
or
sub
and
enter
sti
add
xchg
sti
rcrb
cmpsl
loope
cmc
jo
adc
dec
jecxz
adc
rcrl
imul
popa
cld
xor
push
es
sub
adc
or
pop
jb
fimuls
cli
inc
mov
or
nop
out
adc
cmp
jecxz
call
xor
pop
mov
scas
pop
loop
pop
shrl
add
fdivrl
mov
in
push
xchg
pop
xchg
test
xchg
xchg
nop
sahf
jno
sbbb
ljmp
push
fsub
sti
mov
xor
scas
or
packuswb
je
test
jmp
int3
pop
aad
lahf
sub
mov
pop
insl
lds
adc
add
adc
orb
jno
insw
in
les
ds
fsub
out
repz
mov
ja
ljmp
sbb
inc
xchg
dec
enter
push
jne
je
xchg
es
mov
mov
xchg
xor
test
aas
add
xor
je
ja
sub
out
add
test
aaa
fs
into
orb
pop
or
loope
ljmp
push
push
jns
dec
xchg
sbb
lods
jge
mov
out
and
outsb
sahf
les
xchg
xor
and
les
sbb
mov
mov
jne
pop
loope
in
loop
movsl
das
sarb
cmp
mov
jne
adc
mov
mov
mov
rclb
pusha
addr16
gs
xchg
pop
push
outsb
add
push
stos
scas
push
dec
jno
cs
mov
cmp
into
push
or
lods
cmp
test
cli
stos
imulb
sti
sarl
ret
add
addr16
jae
outsb
mov
aad
and
andl
push
add
sbb
fisubrs
inc
sahf
push
adc
xor
in
shlb
insl
push
roll
push
pop
sub
idivb
std
addb
sub
xorb
xchg
ret
inc
fdivrs
pop
push
lret
stos
sbb
stos
insb
bound
stos
lea
xchg
mov
call
push
and
cmp
push
idivl
test
mov
imul
ljmp
notl
xchg
or
fadd
jge
cwtl
pop
mov
fnsave
mov
std
jmp
adc
xchg
cltd
mov
inc
lds
dec
ret
insb
in
daa
lret
andl
pop
pushl
shl
xor
les
pushl
outsb
mov
test
mov
sbb
daa
or
or
push
lahf
jmp
mov
sub
out
cli
mov
mov
pop
repnz
aad
mov
cmp
out
push
js
xchg
and
mov
mov
xchg
or
sub
int3
aaa
dec
sub
dec
xor
lret
clc
aad
testb
jno
sbb
xor
cld
out
pop
mov
mov
repnz
sub
jge
cmp
lret
repz
inc
out
stc
sbb
add
not
shr
fistpll
push
in
test
daa
and
xor
add
fsubs
inc
dec
repz
push
pop
cmp
fdivr
or
das
sbb
in
inc
inc
cmp
pusha
jb
push
shrb
iret
lds
andb
jo
sub
cmp
xor
inc
js
dec
es
repz
std
inc
push
jo
pop
shrl
pop
xor
vpunpckldq
lcall
es
cli
mov
add
cmpsb
mov
stos
mov
adc
shr
jb
push
push
mov
pop
fcompl
sub
mov
and
push
test
das
leave
push
xchg
and
sub
nop
sub
leave
fisttpll
add
mov
xor
dec
mov
inc
mov
aad
mov
dec
test
dec
sbb
xor
dec
xchg
daa
push
ds
jae
jae
rol
int3
call
aaa
push
aaa
fwait
mov
lahf
dec
xor
jbe
xchg
dec
push
sbb
xchg
mov
popf
mov
lret
fists
shlb
sub
in
arpl
xchg
inc
sbb
stos
inc
test
imul
or
sbb
lods
cmp
inc
out
ljmp
or
or
call
xor
shll
jb
sbb
pop
dec
mov
pop
incb
pop
cmp
dec
stos
add
mov
xchg
sarl
inc
pop
scas
cs
sub
sub
push
dec
scas
sti
or
loopne
mov
mov
enter
cli
pcmpeqw
lcall
sub
adc
fs
xchg
xor
popf
mov
pop
sbb
cmp
mov
daa
outsl
ljmp
mov
pop
insb
aaa
mov
dec
xor
test
pop
enter
mov
xor
les
aam
or
xor
adc
lods
jg
stos
add
sti
push
dec
lcall
mov
xor
daa
push
shrb
loope
lret
jns
pop
inc
push
inc
sbb
cmp
insl
jg
or
push
mov
outsb
push
mov
sub
fwait
test
pop
jmp
fdivrl
sub
cmp
sahf
dec
inc
adc
insb
push
sub
lcall
add
dec
mov
pushf
xchg
adc
lcall
loop
test
mov
jmp
sbb
or
call
fisttpl
jnp
in
leave
jno
push
jg
mov
pop
mov
and
rorl
jno
aas
sub
sti
addl
or
mov
das
sub
stc
out
mov
stc
cmp
push
cmpsb
cld
pop
in
cwtl
je
xchg
add
call
mov
add
add
lret
or
pop
in
ljmp
mov
and
dec
add
pop
mov
mov
das
roll
fwait
pop
insl
jmp
iret
dec
repnz
insl
xchg
mov
xchg
pop
xchg
add
mov
scas
call
bnd
lret
shll
dec
lahf
mov
inc
mov
inc
sub
mov
lock
push
xchg
mov
pop
ret
call
test
ja
jo
pusha
in
pop
rcll
or
sbb
dec
je
or
aad
sbb
aas
insb
insl
mov
inc
push
loop
aaa
mov
add
lock
push
sarb
mov
icebp
mov
sbb
lret
loopne
mov
inc
cmp
pusha
push
idivl
jae
gs
xor
jl
xchg
mov
mov
popf
loope
aas
add
enter
jecxz
mov
mov
icebp
les
inc
or
add
push
in
mov
clc
enter
in
add
mov
leave
adc
clc
ss
je
dec
test
push
dec
mov
hlt
gs
and
roll
mov
xchg
test
jo
mov
leave
dec
adc
call
mov
jno
daa
adc
or
or
in
test
stos
cmpsb
cli
xor
xchg
clc
imul
mov
xchg
pop
xchg
scas
sbb
insb
push
shlb
and
jl
in
movsl
movl
shr
dec
repnz
idivb
mov
pusha
fsubl
pop
push
aam
pop
rcrb
inc
push
mov
pop
cmp
out
cmp
inc
insb
out
xor
int3
pop
movsl
xchg
pushf
cmp
adc
sub
cmc
sbbl
pushf
ss
das
mov
je
dec
leave
push
xchg
stos
cmp
rcrb
int3
xor
mov
mov
iret
push
or
iret
dec
imul
ljmp
push
mov
xchg
lock
push
aam
addr16
cmpsl
jg
mov
push
fnstenv
xchg
fcomps
adc
mov
pop
xchg
dec
push
es
pop
sbb
xor
nop
mov
jle
dec
fmull
xchg
outsb
fisttpll
addr16
jne
xor
aam
push
or
push
movsl
sub
ror
aas
dec
and
mov
mov
push
xchg
ret
jle
sahf
or
stos
ja
in
xchg
into
dec
and
sub
mov
or
adc
or
in
push
test
jb
mov
cmp
mov
insl
sti
add
xor
js
cmpsb
rcrl
fmull
jmp
cmp
sbb
flds
inc
rolb
jge
jnp
loopne
sti
shrb
mov
fisubl
sub
dec
fildl
pop
orb
notl
das
sub
adc
mov
fcompl
or
mov
mov
xorl
inc
data16
push
add
jo
jb
jmp
mov
mov
pop
add
das
cmp
in
in
fldcw
pop
jo
mov
aaa
lods
pop
popa
insl
or
mov
popf
jecxz
xor
xchg
dec
or
iret
in
sti
imul
fsts
fucomp
js
or
insl
inc
mov
mov
mov
jns
loope
je
jmp
sbb
add
mov
sarb
mov
fucomi
lock
push
sbb
pop
insb
jne
inc
pop
adc
dec
imul
shll
out
inc
mov
iret
movsl
cmp
nop
mov
lods
pop
cli
iret
push
sbb
cmp
push
xchg
jge
imul
ds
inc
jmp
and
pop
xchg
pop
leave
cmpsl
notl
pop
clc
and
or
sub
dec
jg
ficoml
adc
das
cmp
xchg
xlat
js
add
insl
mov
clc
inc
dec
push
js,pt
out
push
fs
testb
out
std
xchg
adc
push
shll
pop
inc
mov
inc
scas
test
xchg
pop
cmp
adc
nop
imull
pop
mov
hlt
mov
out
int
mov
sbb
cmpsb
rcrb
and
and
dec
dec
cwtl
cmp
inc
inc
jg
add
push
jne
fs
movsb
sbb
mov
pop
add
pusha
cmp
xor
sbb
in
lret
out
cwtl
sbb
inc
ret
cld
mov
mov
outsl
and
jl
hlt
mov
mov
ljmp
int3
push
insl
cmp
pop
lods
clc
lret
lods
rol
out
inc
sbb
test
cmpsl
add
jp
pop
insb
repz
and
shll
cmpb
sahf
in
cmp
lea
xchg
fmulp
gs
and
out
adc
mov
rcrb
test
pop
gs
movsl
dec
pop
cmp
jno
cs
ret
sti
sbb
pop
xchg
xor
dec
sub
mov
mov
les
add
and
jg
add
cmp
in
ficoml
add
jl
js
std
mov
insb
mov
cmc
adc
mov
lock
xchg
xchg
push
js
test
pop
out
hlt
ficomps
ret
sbb
mov
dec
lds
mov
leave
mov
imul
jg
add
jp
xlat
aam
push
in
push
mov
roll
pushf
xchg
lock
jp
iret
in
xchg
inc
jp
xor
mov
push
shll
xchg
mov
rcrb
adc
and
fwait
and
sahf
test
dec
push
aaa
leave
popf
lahf
sub
lret
mov
sub
loopne,pn
repz
shr
dec
addr16
add
fmuls
ret
popa
sbb
into
mov
cs
and
jne
add
lds
add
lds
scas
mov
scas
xchg
push
push
frstor
jg
sub
rorl
adc
sbb
ret
add
mov
leave
mull
jle
cmc
push
popf
addr16
inc
sub
xorb
push
jecxz
rep
cld
add
ret
cwtl
adcb
jmp
pushf
ret
hlt
mov
sub
adc
push
popf
inc
xor
mov
out
mov
mov
cmp
mov
insb
fistpl
xchg
imul
sbb
push
pop
xrelease
mov
sub
jns
out
or
xor
xchg
xchg
xchg
sbb
inc
adc
pop
dec
cli
sbb
push
out
icebp
add
adc
fildll
jp
loop
sub
in
fs
or
sbb
cmc
push
mov
or
jge
adc
ret
pop
in
sarl
xor
push
gs
mov
rcrb
popf
inc
js
pop
imul
cmp
fdivrs
mov
xor
and
outsb
xor
fcoms
or
mov
jl
cmp
mov
xor
sahf
setb
mov
outsl
test
jmp
negb
imull
bound
movsl
fnstcw
jnp
aad
hlt
int3
je
xor
outsl
pop
nop
mov
and
adc
xlat
daa
test
push
lods
and
push
loop
and
out
dec
dec
stos
mov
sub
xchg
lods
push
jo
loopne
imul
mov
in
in
hlt
push
pop
pop
test
mov
xchg
pop
pusha
adc
test
and
cld
dec
inc
inc
xchg
in
fdivrl
jns
push
out
inc
pop
mov
and
push
adc
mov
inc
add
xor
lahf
pusha
out
jl
and
lret
imulb
fbld
mov
out
and
aaa
in
pop
adc
mov
jl
jmp
push
adc
mov
dec
ret
or
pop
imulb
xor
das
pop
das
int3
nopl
cld
lods
js
or
mov
loopne
mov
pop
sub
fwait
cmp
dec
mov
arpl
pxor
bound
sarb
mov
adc
mov
jne
pop
adc
std
cmp
cmpsl
in
popa
out
mov
dec
mov
push
cmpsl
pop
dec
lahf
or
jecxz
mov
jbe
test
jb
cmc
fnsave
add
or
ja
int
insl
mov
mov
in
jp
and
mov
icebp
std
mov
imul
inc
icebp
xchg
fwait
outsl
xor
mov
iret
xor
adc
sbb
push
iret
mov
pop
int
sahf
xchg
les
push
pop
fisubrl
sbb
vmovdqa
xchg
stos
mov
ret
push
or
xlat
add
rorl
mov
cmp
inc
call
stos
std
pop
cmp
dec
push
cwtl
cwtl
pop
dec
mov
dec
xchg
sbb
fiaddl
xchg
or
xchg
lret
xchg
stc
jo
insb
mov
lea
outsb
in
enter
dec
mov
sub
cld
fisubrl
mov
or
add
fdivrl
mov
cs
pushf
cmp
in
ss
jmp
scas
lea
and
push
adc
jp
sbb
repz
lret
and
mov
mov
pop
test
sti
pop
sub
addb
ds
mov
in
jno
imul
cli
push
fs
xor
ja
and
outsb
mov
mov
mov
pushf
shl
dec
push
dec
xor
iret
and
sbb
and
xchg
adc
push
ficoml
xchg
dec
les
sbb
clc
inc
inc
push
inc
inc
nop
mov
pop
stos
les
inc
mov
in
mov
push
insb
fs
jecxz
sti
push
add
aas
adc
mov
cltd
mov
jmp
mov
xor
push
mov
jl
adc
mov
mov
inc
fcompl
fisubrs
xchg
xchg
loopne
and
lods
fdivrl
fiaddl
add
pop
mov
sub
jne
mov
mov
lret
cmp
loopne
in
das
mov
pop
dec
cmp
pop
inc
mov
inc
add
es
inc
dec
push
mov
arpl
clc
xor
ja
outsl
sarl
mov
and
iret
xchg
hlt
enter
add
jge
imul
adc
mov
out
ljmp
sub
jg
xor
mov
iret
jl
xchg
mov
add
lock
rclb
add
leave
and
in
int3
sbb
or
in
je
out
fdivl
add
clc
shlb
pop
std
stos
pop
xor
bound
loop
mov
insl
stc
loope
inc
mov
xchg
and
in
xlat
cltd
cmp
int3
data16
dec
push
ret
stc
xlat
rep
fldcw
je
cs
mov
mov
fadds
shrb
hlt
cmp
pusha
ljmp
dec
dec
ds
lods
pop
jecxz
imul
mov
arpl
pop
out
int3
sbb
jbe
aam
mov
fnstsw
daa
dec
mov
pop
mov
jnp
pop
outsl
dec
jl
lds
pop
loop
aas
cld
js
dec
ret
adc
push
stos
loopne
push
mov
loopne
sbb
in
jle
mov
insl
jae
movb
fisttpl
rcrb
push
into
negl
loop
pusha
pop
cmc
pop
add
pop
add
or
or
jl
push
fwait
out
fimuls
hlt
push
lea
rolb
cmp
subb
adc
lea
sub
imul
mov
lret
adc
aas
into
mov
sub
pop
lods
push
adc
imul
jne
push
pushf
ror
mov
cmp
lods
cmpsb
push
pop
icebp
push
mov
inc
mov
jne
repz
sbb
stos
cmpsl
out
add
dec
popl
fs
add
or
pop
add
push
scas
mov
lcall
lods
loop
aas
push
push
adc
das
mov
daa
sub
add
ret
mov
push
das
je
cli
popf
push
cmp
push
lods
pop
mov
xor
das
test
lret
add
out
jl
or
lcall
push
mov
ss
lea
addb
out
add
int
std
imul
push
cmp
jg
in
push
sbb
into
mov
repz
cmp
enter
arpl
jae
int
rcrb
loop
int
mov
push
gs
ljmp
push
dec
mov
lcall
push
pusha
nop
xchg
in
jbe
fcomi
mov
jmp
add
lds
cld
sbb
loope
inc
sti
or
xor
pop
int3
addr16
sti
adc
ljmp
sahf
iret
inc
dec
pop
push
icebp
dec
pop
insl
leave
sbb
cmp
repnz
jle
jb
mov
xchg
push
inc
pusha
push
popa
ret
add
adc
push
call
dec
mov
mov
in
pop
fidivrl
clc
jbe
scas
sbb
push
ljmp
push
dec
jp
jp
mov
outsb
fsubp
imul
aad
cld
or
movsl
dec
and
pop
sub
int3
aad
pusha
dec
pop
cmpsb
xchg
jmp
ljmp
js
mov
int3
dec
mov
inc
out
adc
sbb
les
adc
adc
add
out
jae
mov
nop
mov
out
jl
push
jbe
inc
xchg
and
xchg
icebp
mov
add
aad
roll
movsb
rclb
pop
sti
cwtl
call
cmp
loop
jno
adc
jl
sti
imul
jg
repz
mov
or
cmp
xchg
add
xchg
ds
imull
bound
jecxz
push
sub
cmp
pusha
int
push
xchg
sub
push
jge
insb
sub
ret
insl
or
push
or
mov
movsl
mov
shrb
pop
cmp
loop
cli
inc
xor
pop
mov
fldcw
jl
cwtl
sbb
xchg
pop
add
xchg
and
shl
ret
outsl
std
pop
sbb
in
pushf
mov
scas
dec
inc
aad
pop
push
add
mov
nop
aam
or
sti
and
lods
xchg
mov
repnz
hlt
and
push
fsts
out
or
mov
lds
add
jne
cwtl
xchg
les
popf
jp
out
sub
jnp
mov
push
lods
cmp
imul
lods
jmp
dec
aas
cmp
clc
jle
sub
pop
xchg
mov
jmp
pop
ja
fwait
nop
push
sbb
and
nop
fsubrs
stc
mov
push
sub
jnp
call
fistpll
shll
pusha
nop
adc
mov
add
scas
orl
enter
movsl
dec
cwtl
mov
ja
or
popa
in
push
fdivrl
mov
cld
xchg
cld
jo
cmp
jg
jae
inc
fs
test
mov
inc
and
inc
call
xadd
sub
sub
ficoml
and
add
ret
jg
rorl
mov
jno
lock
lcall
xor
jno
sahf
and
jp
cmp
fistps
pop
wrmsr
popf
fwait
jle
or
sbb
or
jnp
inc
xchg
mov
out
cmpsl
dec
mov
test
cwtl
leave
test
mov
ja
mov
and
out
and
ret
lahf
add
mov
mov
sbbb
mov
out
repnz
imul
loop
int
jnp
insb
and
dec
pop
arpl
jecxz
xchg
insb
in
ret
cmp
sub
je
loop
adc
lahf
mov
sti
push
bound
fyl2xp1
mov
js
sbb
jge
push
sbb
adc
imul
push
sub
stos
xor
inc
stc
in
repz
in
hlt
fwait
dec
loopne
dec
inc
dec
xor
or
shrl
in
and
lock
ret
pop
and
or
xorb
cmpsl
adc
dec
int
push
jle
cli
inc
pop
jl
mov
sub
pop
sti
repz
jns
out
add
mov
mov
loope
cmp
sub
inc
cli
inc
dec
stos
leave
daa
out
hlt
dec
mov
jl
ljmp
inc
stc
push
push
xchg
xor
fistpll
cmp
push
add
es
insb
test
add
lahf
sbb
push
fimull
fisubs
dec
in
xor
push
xor
jmp
sahf
inc
ds
sbb
sahf
cs
dec
shr
fucom
call
or
out
into
add
mov
lods
add
pop
lock
mov
mov
fldenv
pop
setp
stos
out
and
in
mov
imul
int3
fwait
sbb
scas
sub
push
outsl
mov
jae
inc
push
or
lcall
jne
scas
jmp
int3
js
cmc
aaa
flds
cmp
cmp
push
nop
xor
hlt
push
pop
cmp
or
scas
add
lock
orb
repz
addr16
cmp
sub
sbb
mov
rcrb
pop
aaa
push
push
fbstp
std
push
outsb
jae
dec
loope
testb
leave
cmp
or
dec
shll
jae
shll
mov
inc
pop
lds
sub
fildl
add
xchg
xchg
test
xchg
daa
imul
fildl
sub
jmp
and
ror
cmp
jmp
lahf
mov
fdivs
test
sti
cmpb
nop
ret
out
and
jns
adcl
lahf
inc
bnd
or
aam
es
movsb
shll
shlb
inc
adc
mov
cmpl
jae
or
pop
pop
loop
or
mov
jo
cmp
cmp
arpl
dec
pop
outsb
dec
mov
sti
sub
hlt
iret
xchg
cmp
sbb
mov
dec
sub
out
sbb
leave
shlb
stos
ds
scas
inc
pop
lret
je
mov
sbb
das
repnz
test
sbb
mov
loopne
xchg
cmp
loopne
sbbb
xor
sbb
and
push
scas
inc
push
mov
mov
push
fxch
add
dec
xchg
cld
xor
cmpsl
pop
mov
pop
repnz
scas
or
adc
mov
and
stc
xor
pushf
out
jb
stc
dec
in
xor
pop
das
jae
jns
lea
pop
adcb
sbb
adc
inc
je
push
insl
mov
mov
ficoml
pop
ss
xchg
xchg
test
xor
nop
out
push
xlat
je
xor
pop
xor
cli
cmpsl
out
daa
sbb
mov
rcrl
mov
and
test
ds
add
or
daa
mov
je
jge
jge
push
sti
imul
popa
imul
inc
mov
jle
mov
mov
mov
out
dec
cwtl
fmull
adcb
xchg
mov
sbb
sbb
sub
loopne
int3
mov
jno
xchg
cmp
mov
and
inc
int
push
cmc
jnp
sbb
and
cmpsb
dec
push
icebp
cld
add
cmpsb
lahf
inc
fs
or
inc
and
imul
cwtl
sbb
sti
dec
jmp
movsl
mov
aas
loope
rorl
xchg
pop
andl
pop
rep
insl
ja
je
stc
xchg
pushf
push
mov
sbb
sub
xor
mov
cmp
add
insl
push
and
xchg
lahf
and
fnsave
pop
push
adc
lret
push
jg
jg
jmp
iret
stos
push
data16
sub
lock
iret
fwait
rcll
push
jmp
movsb
pop
in
rcrb
add
out
cmp
xchg
mov
lods
ja
ret
js
dec
out
mov
test
xchg
xor
mov
adc
and
mov
lret
adc
sbb
pop
hlt
jmp
mov
jg,pn
cmpsl
bound
int
lret
movsl
push
and
mov
xchg
push
pop
lods
mov
fists
dec
jmp
mov
jae
xor
xchg
or
or
stos
cwtl
sub
negl
pop
dec
data16
jo
push
ja
cs
icebp
jne
imul
inc
das
lods
shll
dec
test
dec
mov
jnp,pn
ds
test
jmp
cli
repz
or
push
mov
xor
hlt
push
and
fs
pushf
jo
mov
cmc
xchg
loope
leave
xchg
fsubrl
add
xor
xchg
adc
cwtl
aad
insl
xchg
push
cld
or
jne
pop
push
mov
sub
insb
inc
fcomip
jl
adc
loope
lret
push
movsb
mov
stc
pop
je
xchg
and
add
pop
push
push
sbb
cmp
xchg
sub
push
ja
cmp
cld
add
push
xchg
into
in
pop
xchg
adc
out
popa
push
push
and
cmpsl
gs
ret
jp
dec
lods
das
and
les
xlat
dec
outsl
xor
xor
les
jo
and
push
jmp
rclb
gs
stos
or
cs
or
fsubr
fnstcw
clc
pop
push
pop
shll
sub
lret
es
cmc
std
xor
test
mov
pop
cmp
add
pop
imull
rcrl
hlt
ss
aaa
pop
pop
adc
and
out
imul
clc
hlt
rclb
pusha
in
sub
outsb
ss
sub
or
push
fldenv
les
sbb
out
mov
lret
hlt
lret
pop
loop
lcall
pop
fldt
dec
dec
sbb
int
bound
xor
mov
add
jmp
xor
out
push
jle
xchg
mov
js
sbb
xchg
call
sub
outsb
xor
and
out
sbb
inc
and
xchg
cmpsb
jnp
je
mov
leave
in
push
xchg
adcb
shl
cs
std
stos
ljmp
ficomps
fdivl
ljmp
out
inc
sub
mov
movsb
outsb
sahf
bound
enter
inc
jbe
fidivrs
enter
sbb
push
inc
shr
push
push
adc
or
mov
fcompl
mov
stc
push
divl
nop
mov
fmuls
fnsave
xor
cltd
ljmp
sub
xchg
movsb
adc
and
xor
mov
inc
stc
sub
loope
mov
sub
xor
inc
xor
lods
stc
inc
fistl
mov
outsb
jecxz
cmc
xchg
addr16
dec
ret
xor
lods
inc
lea
mov
jmp
push
aaa
sbb
mov
fwait
push
mov
icebp
aam
mov
mov
xchg
sub
mov
pop
pop
loopne
or
mov
cmp
xchg
dec
sub
dec
loop
mov
iret
add
cmpsl
nop
pop
dec
fidivs
or
jmp
xlat
hlt
ror
outsb
popf
dec
xchg
jns
hlt
bound
mov
fs
fdivrl
xchg
in
imul
hlt
ret
mov
mov
mov
push
std
insb
clc
in
dec
je
out
push
leave
and
mov
pop
sub
pop
mov
mov
add
push
sbb
test
sub
cmp
sub
inc
mov
test
ret
clc
es
stos
and
push
mov
add
xchg
mov
inc
adc
xchg
or
mov
stc
fldl2e
cmp
gs
maxps
test
nop
jbe
iret
push
cmp
fsin
push
cmp
jle
or
inc
push
in
mov
mov
sub
loop
mov
jae
mov
pop
les
push
or
xchg
push
inc
lret
test
bsf
std
lahf
xchg
jo
and
lock
lcall
adc
pop
inc
mov
push
repz
mov
flds
xchg
jne
das
jnp
cmpsl
and
inc
loope
mov
daa
mov
ficompl
mov
lods
or
push
add
insb
push
sub
addr16
aas
jmp
ja
es
lret
stc
insl
aas
mov
jmp
pop
popa
adcb
and
stc
push
popf
pop
dec
in
mov
xchg
dec
movsl
int3
dec
aaa
nop
push
add
lds
loope
fsubrs
in
and
arpl
hlt
cld
cmp
outsl
decb
loopne
xchg
push
fbstp
aaa
leave
je
inc
xor
std
jne
xor
loopne
arpl
imul
lret
inc
push
push
stc
fildl
mov
mov
pop
cltd
stos
jecxz
and
or
lret
cmp
fs
mov
aaa
enter
xor
lret
insb
xchg
cmpl
rcl
sub
jne
inc
repz
mov
and
adc
adc
adc
xor
out
cmp
neg
jmp
popa
inc
push
movsb
xchg
fnsave
sub
inc
xor
gs
mov
jg
add
es
loope
sub
pop
cli
aam
fwait
leave
inc
xchg
int3
lahf
aas
movsb
xlat
jecxz
and
sbb
test
xor
cmp
xchg
in
in
ret
cmp
cmp
xchg
les
xlat
hlt
and
push
xor
lret
lea
repz
lea
in
or
ss
inc
cli
out
fs
xchg
test
repz
and
outsb
cmp
or
adc
test
imul
loopne
sar
into
pop
mov
jge
ljmp
clc
daa
sub
xor
stos
fistl
loope
push
rcr
xchg
aam
rcrl
add
jecxz
sbb
repnz
cltd
mov
xor
adc
cmp
jnp
lea
lods
jg,pt
pop
enter
ja
add
notl
push
fimuls
lea
or
ret
or
rorb
adc
jp
lcall
lahf
loop
aaa
inc
pusha
test
inc
xor
outsl
xor
sbb
jmp
mov
mov
mov
mov
xor
mov
andl
sub
sub
popa
sbbb
test
in
loopne
cmpsb
es
lock
mov
ret
bound
xor
and
ljmp
mov
mov
xchg
movsl
hlt
jmp
fstpl
mov
das
out
fs
nop
push
adc
stos
cwtl
mov
aam
pushf
inc
or
call
jmp
call
mov
sbb
and
push
out
mov
push
lock
inc
mov
adc
cli
outsl
cmp
mov
lock
fadds
lds
push
mov
fwait
test
fidivrl
push
adc
es
push
push
fwait
or
sub
mov
mov
jnp
jnp
ljmp
jle
dec
push
fsubl
mov
push
push
popf
inc
sbb
jns
pop
mov
sub
in
adc
dec
pop
xchg
testl
pop
jae
push
inc
test
subl
out
inc
lock
adc
imul
xchg
rcr
stc
out
fs
or
mov
push
inc
xchg
cmp
out
iret
in
xor
fcom
dec
push
call
push
daa
aas
push
mov
jno
push
popa
outsb
mov
test
cli
je
das
jo
push
jmp
jae
xchg
loopne
into
out
jg
clc
sbb
jae
mov
ret
inc
mov
popa
in
push
sbb
cmp
clc
int
xchg
inc
sbb
pop
mov
add
cmp
mov
out
testb
jle
adc
test
xchg
mov
insb
jl
dec
xchg
or
mov
out
popf
clc
insl
outsl
sbb
push
xor
push
mov
mov
fisubl
out
test
lds
mov
mov
rcrl
shrb
push
outsb
mov
or
imul
sbb
cmp
icebp
lods
cltd
inc
xchg
andl
mov
pop
xor
mov
mov
into
lcall
pop
les
adc
fstpl
rcl
and
enter
xchg
imul
xor
mov
out
test
pusha
add
cli
icebp
push
jp
xchg
ret
hlt
push
mov
jo
adc
not
or
cmp
pop
dec
inc
js
std
jne
sti
jnp
xchg
frstor
sbb
pushf
stos
int3
push
js
fistpll
adc
sub
mov
sbb
push
scas
mov
scas
roll
sarl
mov
xchg
ljmp
pop
push
jl
in
lahf
push
out
jg
stos
popa
movsl
shll
jmp
xor
mov
repnz
push
ret
mov
cwtl
stc
std
lods
xchg
xchg
enter
inc
mul
sub
mov
xchg
into
and
push
inc
cli
dec
dec
lds
push
outsl
repnz
loop
inc
mov
les
mov
sbb
jo
out
daa
inc
pop
out
ror
or
in
add
push
inc
and
xchg
add
sti
inc
out
cmpsb
pop
adc
shr
jbe
jno
popa
jmp
or
mov
mov
loopne
inc
dec
add
popa
push
mov
mov
outsl
mov
int3
es
mov
dec
or
stos
mov
in
mov
stos
add
sarl
cmp
outsb
mov
lods
mov
fwait
ljmp
xor
sub
push
and
lods
add
loope
sarl
mov
lret
addb
test
xor
cwtl
pop
cmc
push
or
or
jp
cmpsb
xor
jo
out
mov
adc
xchg
sbb
sbb
fistps
cmp
push
inc
mov
cmp
sub
imul
xor
mov
imul
jl
stos
dec
in
mov
adc
shll
and
xorl
or
inc
jae
inc
data16
pushf
add
test
ret
or
adc
xor
mulb
cld
lds
rcrl
gs
negb
cmpsb
sub
shrb
sub
repnz
mov
push
orb
sbb
stos
jno
mov
nop
fucomip
pop
sub
lea
decb
test
jmp
adc
fs
jbe
or
lock
or
popl
push
pop
xchg
jne
dec
in
xchg
add
sub
cs
mov
scas
sbb
xchg
adc
jp
xchg
test
jp
mov
xchg
pop
jg
xor
add
or
gs
test
jle
cmp
xchg
nop
mov
js
and
insl
scas
and
addb
fdivr
pop
pop
xor
shrl
xlat
add
jp
dec
sbb
or
xchg
adc
inc
ficoml
add
xor
sub
or
cmp
push
cli
cmp
inc
or
mov
sbb
out
mov
inc
jmp
stc
pop
inc
popf
pop
sarl
cmpb
jge
push
jno
mov
cmpsb
xchg
xchg
jle
mov
test
or
adc
pop
or
clc
mov
data16
fisttpl
jle
cmpsb
loope
int
pop
stc
push
iret
push
pmuludq
es
test
pop
dec
mov
mov
fdivrl
mov
movsl
repz
jmp
inc
fs
insb
mov
dec
lcall
mov
jle
push
loop
jge
pop
lcall
movsb
adc
insl
jg
pushf
mov
das
xchg
xchg
xorb
aas
sub
sahf
inc
sbb
mov
arpl
mov
int3
jl
lret
dec
xor
push
mov
lcall
sti
stc
or
jnp
in
add
int
mov
fimull
mov
push
xchg
or
pusha
jg
add
xchg
aam
lods
dec
xchg
dec
xchg
sbb
mov
push
in
jae
ja
xor
pop
test
adc
in
mov
inc
jge
jb
mov
dec
mov
insl
scas
xor
in
popa
out
movsl
add
sbb
mov
popf
addb
movsl
dec
xchg
out
xorl
adc
lods
and
insb
dec
mov
add
mov
cli
in
jge
jmp
mov
jle
clc
xor
fwait
mov
xor
mov
and
cmp
sub
jo
pop
fnstenv
inc
in
inc
iret
lahf
clc
sti
fdivl
leave
push
sbb
shll
pop
cmp
int3
fistps
fisubs
bound
jle
enter
addr16
notb
stos
jp
fidivs
and
std
int
cmpsb
or
ret
frstor
out
pop
pop
inc
js
mov
adc
push
mov
dec
orl
inc
sbb
jne
push
out
rclb
test
xchg
test
and
es
or
mov
sub
sub
das
adc
shlb
pop
mov
mov
dec
mov
lret
imul
mov
movsl
or
shrb
push
into
xchg
faddl
js
pop
xchg
pop
cmc
outsl
lock
or
xchg
sbb
inc
testl
js
and
adc
add
cld
inc
repz
jecxz
nop
stos
lret
xchg
loop
xor
dec
fcomps
scas
mov
xchg
subb
iret
rclb
lea
fdivrl
xchg
ficoms
mov
imul
lret
fs
movsb
out
push
iret
add
push
cmpsb
or
xchg
bnd
mov
adc
jae
shll
jg
jb
es
leave
jmp
pop
mov
stos
mov
scas
jg
cmc
daa
fs
cwtl
call
and
bound
stos
inc
mov
xchg
je
xchg
mov
lods
inc
stos
push
mov
int3
pop
ja
lret
movsb
jnp
adc
push
sbb
jbe
std
ljmp
jecxz
cld
cmpsb
push
fwait
aad
xor
lods
jmp
or
mov
xchg
mov
mov
mov
adcb
xchg
adc
int
sbb
lods
loope
adc
out
dec
push
scas
push
in
enter
inc
test
adc
adc
hlt
lret
lret
inc
adc
call
push
pop
xchg
mov
fdivrl
les
xor
add
pop
inc
mov
pop
and
sub
inc
jno
gs
push
or
jb
xchg
mov
in
jno
push
mov
xchg
daa
sub
repz
push
jl
stos
imul
fcmovbe
jae
dec
sub
frstor
nop
add
fwait
popf
idivl
fsubs
jo
lods
test
loop
es
loopne
pop
sahf
dec
or
fisubrs
mov
pop
int
sub
pop
aad
fucomip
lret
add
lahf
sub
and
icebp
test
inc
sbb
push
into
std
cli
and
and
bound
pop
cmp
lock
sarl
add
mov
mov
push
aaa
push
shrb
inc
cmpsb
dec
cmp
jbe
stc
or
push
dec
shlb
fmulp
inc
xchg
pushf
sti
lahf
outsl
pop
movsb
xchg
scas
dec
xor
dec
je
push
imul
inc
mov
hlt
inc
bound
jl
push
aas
mov
rorb
add
das
sub
aad
mov
sub
negb
xor
clc
adc
pop
fisttpl
bnd
mov
lds
push
neg
outsl
stc
push
mov
dec
shlb
movsl
inc
ret
sub
icebp
inc
test
sbb
sbb
push
jbe
ss
mov
jbe
mov
sbb
pop
xchg
ret
cli
addr16
xchg
daa
jnp
stos
js
push
std
and
jae
dec
in
mov
loop
call
mov
js
dec
cltd
cmp
dec
daa
pop
jbe
xlat
or
js
incb
jp
fsubrl
sbb
inc
jge
imul
dec
outsb
pop
adc
ljmp
mov
lods
sbb
sahf
push
mov
jbe
xor
mov
dec
repz
xchg
push
and
nop
xchg
jle
jns
cwtl
test
sahf
stos
sbb
lahf
iret
cs
or
cmp
ret
and
jae
mov
stos
xor
lahf
sub
or
pop
jb
jmp
mov
in
mov
mov
ljmp
leave
in
punpckhbw
inc
in
addr16
or
mov
xchg
push
lods
add
add
scas
pop
push
pop
mov
mov
rorb
rcll
push
js
mov
xor
sarl
mov
fdivl
test
push
cmpsb
pusha
stc
data16
add
xor
xor
sbb
dec
xor
lds
sbb
lea
rorb
mov
cld
or
push
popa
mov
push
lds
jl
push
ffree
pop
xchg
add
icebp
mov
stc
push
sbb
mov
xor
mov
dec
lahf
xchg
bound
jl
or
mov
mov
ds
dec
adc
jp
fdivrs
adc
fisubl
sbb
das
mov
aad
mov
mov
stos
shlb
jo
scas
mov
mov
mov
test
dec
ljmp
das
rclb
cmpsl
out
mov
xchg
adc
xor
insb
arpl
and
ret
nop
cmc
inc
push
js
sub
add
jge
cmp
push
rcrl
mul
or
out
ret
jp
pop
jo
sbb
and
mov
inc
push
aas
ja
mov
adc
add
les
stc
repz
mov
popf
mov
lcall
pusha
ds
push
popa
push
pop
xor
inc
out
aas
std
push
ja
jo
mov
rcl
mov
pop
cmp
jae
push
and
or
and
nop
sbb
dec
notb
inc
fstps
inc
add
adc
push
jns
mov
aad
out
inc
fcmovnb
vmovntps
das
cmc
cmp
dec
xchg
mov
sub
xchg
rolb
inc
or
addr16
inc
jns
bnd
xor
push
jmp
out
jle
mov
inc
rcr
inc
lret
xchg
cmpsl
fidivrs
into
outsl
out
aaa
out
adc
stos
ljmp
cmp
mov
mov
add
adc
cmp
inc
inc
ja
int3
pushf
test
add
fs
ret
lret
xchg
sbb
scas
arpl
or
add
dec
loope
aam
in
arpl
or
sub
pushf
sbb
xchg
lret
imul
push
jnp
xor
fcmove
mov
inc
movsb
push
mov
fstps
add
xchg
or
lock
adc
mov
add
lock
sub
out
mov
stos
fwait
mov
and
jmp
in
xchg
and
inc
cld
mov
shlb
xor
fstp
out
or
xor
fs
xor
insl
movsb
and
fistpl
test
mov
pusha
adc
adc
in
sub
xchg
call
inc
mov
cmc
sarl
push
cmc
xor
je
and
lret
sti
je
jmp
aam
mov
mov
fdivrs
ret
je
pop
shlb
add
inc
orl
loop
pop
mov
pop
ljmp
sub
dec
cmpsb
xchg
sbb
in
out
mov
lret
cwtl
cmpsb
ds
cmpsb
adcl
fistps
dec
call
into
inc
leave
fucomip
xchg
lea
mov
sbb
movsl
mov
cmp
push
mov
and
push
inc
les
xchg
xchg
cmpsb
test
cmp
lcall
mov
jl
sbb
add
push
jmp
dec
and
aad
loopne
arpl
sub
test
push
ss
scas
mov
stos
jg
sub
push
rcll
mov
adc
adc
mov
jb
pop
movsb
mov
jmp
mov
scas
mov
dec
jae
jmp
or
fistl
xchg
ljmp
bound
fcom
add
js
or
fwait
aam
pop
rcll
mov
dec
ljmp
sbb
or
jl
sbb
pusha
mov
scas
adc
mov
jbe
inc
inc
dec
rorb
ret
xor
mov
enter
cwtl
das
jno
xchg
mov
mov
cmp
or
cli
add
fdivrl
pop
imul
sbb
dec
mov
mov
pop
repnz
ds
xchg
mov
pop
andb
es
fldcw
stos
mov
xchg
test
subb
cmpsl
call
pop
into
jo
jge
adcl
push
jge
divb
inc
pop
add
fwait
in
inc
sarb
pop
rcll
jmp
cmpsb
push
cwtl
pop
in
mov
dec
mov
movsb
test
jne
std
push
push
mov
sub
mov
mov
movsb
mov
mov
xchg
dec
scas
cmp
cmc
jae
cs
fidivl
imul
mov
xor
cmpsb
loope
cmp
add
jae
xchg
rclb
adc
xor
sbb
cmc
in
dec
or
outsb
imul
sbb
push
movsb
adc
xchg
jnp
or
dec
pop
scas
test
xlat
sbb
sti
ror
in
cmp
mov
ljmp
mov
idivb
add
sbb
and
adc
inc
or
inc
mov
lds
pop
arpl
scas
xchg
xchg
hlt
addl
adc
ss
pop
cmp
cmpsb
cli
mov
xchg
mov
test
jp
inc
fnstsw
mov
sub
add
lcall
aas
xchg
out
leave
test
rcrb
gs
push
test
inc
fbld
imul
add
loope
das
xlat
push
into
outsb
pop
insl
daa
fs
inc
shlb
xor
push
dec
cmp
in
inc
xchg
jb
add
dec
mov
aad
incb
sahf
push
icebp
or
stos
pop
inc
jno
mov
mov
movsl
test
leave
fstps
or
pop
imul
leave
cmc
loop
cmp
cli
adc
pop
or
cmp
xchg
repnz
rcl
outsb
out
stos
dec
xor
adc
lret
js
rcrl
in
mov
xchg
data16
fdivs
pop
ret
loop
test
leave
cmc
or
outsl
jns
lock
out
mov
in
jle
aaa
shrb
jb
mov
sbb
lret
popa
into
pop
and
xchg
popf
cltd
fs
mov
insl
jge
scas
xchg
xlat
clc
or
sbb
cmp
ljmp
rcll
push
fs
gs
cld
sbb
bound
rcrl
jne
mov
push
push
push
lds
push
or
add
lock
jbe
sub
in
imul
jbe
and
mov
cmc
mov
mov
cmp
call
xor
inc
mov
xchg
shlb
and
cltd
lods
mov
out
and
or
add
repnz
cmp
push
cmp
mull
fldl
mov
and
inc
mov
sub
mov
mov
inc
add
cmp
subl
mov
or
jecxz
mov
nop
pop
push
cmp
outsl
mov
mov
pop
mov
scas
sub
addl
dec
jno
or
push
je
shlb
mov
add
pusha
fstp
cwtl
or
lods
lock
push
sbbb
sub
aaa
add
mov
fstl
imul
fsubl
int3
lret
fdivrs
cmpsb
insb
in
add
cld
pop
jle
push
pop
fldl
push
ljmp
pop
mov
cmp
inc
test
push
push
js
fcoms
or
xchg
cmp
out
push
adc
aas
fisubrs
rcll
aad
lcall
jmp
cli
in
cmp
jp
lods
sub
fmuls
adc
xor
cmpsl
push
ds
jae
imul
jno
nop
aam
dec
xchg
in
imul
add
push
shll
inc
xchg
xor
xchg
push
test
add
sbb
sub
in
push
mov
out
loope
jle
dec
pop
ja
mov
fisubs
aas
adc
add
push
push
cmp
pop
cltd
add
xorl
push
ret
pop
out
adc
push
clc
jle
in
data16
pop
xchg
iret
into
pop
notl
pop
push
sbb
aaa
stos
mov
mov
jb
icebp
or
ljmp
loop
dec
or
lock
repz
mov
xor
jle
jge
les
xlat
jb
je
aam
inc
imul
push
adc
stos
and
sbb
test
sub
int
sub
iret
lcall
scas
int3
mov
xchg
icebp
lock
pop
xor
and
fdivrl
stos
shrb
xchg
jbe
mov
std
repz
jge
or
sbb
cmpb
sbb
pop
test
pop
jg
punpcklwd
es
int
lahf
cmc
xchg
sbb
xchg
ljmp
jnp
mov
lea
mov
imul
loop
mov
cmpsl
pop
lcall
pop
popa
adc
fst
or
test
jg
icebp
xor
push
mull
jmp
add
andb
mov
jmp
jecxz
popf
stc
pop
xchg
nop
add
mov
mov
push
sbb
sub
add
cmp
dec
sahf
add
cmpl
inc
leave
jbe
stos
dec
inc
ret
push
ror
lcall
cmp
jg
mov
push
mov
jmp
ds
cmc
inc
out
jne
mov
sub
mov
sub
jae
inc
movsb
jp
fmuls
xchg
push
cltd
jnp
or
pop
fildl
push
push
dec
out
and
lds
fmuls
ljmp
lahf
inc
repnz
mov
fcomp
test
xlat
ja
sbb
mov
jmp
decl
cwtl
rclb
in
inc
and
es
sbb
in
or
dec
push
pop
pop
mov
dec
test
pop
test
jae
adc
addl
aam
aaa
lds
mov
jp
stc
out
mov
sub
push
stc
cmc
loopne
test
mov
inc
pushf
ljmp
dec
add
pop
jp
jmp
xchg
jo
cmpsl
arpl
inc
xchg
xor
out
dec
mov
pop
push
js
xchg
dec
adc
and
scas
movq
sbb
xor
pop
jae
or
adc
mov
xchg
fbstp
shll
mov
jle
scas
arpl
lahf
xor
and
mov
or
adc
add
clc
add
pop
dec
push
jge
xor
ret
or
pusha
in
push
adc
push
jae
mov
push
jecxz
movsb
iret
xor
cwtl
mov
lret
push
cmpsb
daa
or
sbb
pusha
daa
pop
leave
xorb
aas
test
in
fs
xchg
call
push
sbb
andl
mov
jecxz
sub
gs
adc
and
xchg
nop
into
and
bound
repnz
xchg
leave
or
sti
pop
cld
ja
inc
mov
mov
cmp
adc
mov
adc
test
pop
rclb
and
mov
out
pop
fimull
cmp
mov
cs
dec
cmc
mov
lods
jo
movsl
repnz
adc
sbb
and
int3
das
ss
fistpll
sahf
cli
sar
mov
sbb
fisttpl
shrl
or
lret
xor
orl
clc
pop
inc
xor
adc
mov
jmp
mov
neg
push
aad
push
stos
adc
push
pusha
data16
inc
xchg
mov
sub
push
inc
xor
pop
fs
push
cmp
pop
sbb
inc
jge
dec
pop
xchg
divb
sub
push
pusha
adc
cmp
push
add
sti
adc
data16
cli
xorl
aas
jge
dec
fs
sub
push
faddp
outsl
das
xchg
ds
fwait
jl
ret
push
loop
jl
cmp
dec
and
int
mov
stos
dec
addb
fstps
jecxz
push
pop
gs
popf
lods
addr16
jo
adc
daa
sub
mov
mov
inc
or
jns
pop
insb
push
jmp
push
push
inc
jl
sub
cwtl
sahf
mov
lods
les
push
lods
ret
cmp
popf
nop
hlt
mov
push
cmpsl
or
test
inc
rcl
dec
iret
adc
outsb
pop
push
mov
cmpsl
movsl
js
mov
add
imul
jbe
and
jmp
xchg
mov
lds
in
lret
jnp
ret
jle
push
popa
or
test
mov
mov
pop
add
pop
sbb
daa
pusha
mov
inc
insb
dec
or
lahf
fnstcw
dec
lds
xchg
fldl
pop
xchg
outsb
mov
mov
fsubrl
pusha
jnp
arpl
cmpsl
shl
inc
in
jge
add
push
xchg
push
fnstcw
les
xor
xchg
sbb
mov
mov
pop
push
fcoml
in
idivb
data16
sbb
sbb
push
pop
lods
jmp
shlb
ljmp
dec
call
cmpsb
inc
sub
hlt
pop
aaa
lahf
jne
fiadds
cmp
aad
jno
divl
pop
jbe
sub
fcomi
andl
adc
stos
inc
mov
jno
or
mov
movsl
js
cld
push
add
fdivrs
pushw
mov
hlt
mov
bound
sbb
sahf
mov
fs
mov
inc
ret
jmp
aad
add
pusha
repz
dec
data16
mov
sub
and
add
xlat
cs
sahf
nop
pop
js
mov
in
push
outsl
pop
lock
imull
xor
sub
dec
sbbl
fwait
sub
mov
aaa
lods
mov
mov
sbb
xor
mov
mov
mov
jge
push
cmc
sub
enter
out
jp
lret
or
pop
and
das
in
cli
lret
push
mov
mov
dec
fxch
outsb
sahf
pushf
stos
mov
jg
push
mov
jl
xchg
mov
loop
jecxz
add
cmp
and
sbb
inc
adc
std
test
xchg
outsl
enter
pop
pop
pop
in
imul
cmp
jb
jb
in
push
push
cmp
fsubp
in
mov
popa
jne
rclb
orb
fwait
out
inc
xor
jmp
sbb
test
push
fisttpl
jmp
push
aam
les
xor
push
cmp
adc
nop
xchg
rcrb
xchg
iret
or
data16
mov
stc
jp
cmp
insl
inc
pusha
xchg
inc
outsb
inc
mov
inc
xchg
jns
push
jmp
addr16
and
ss
insb
push
out
sahf
inc
xor
sti
leave
cli
mov
sub
mov
stos
ficomps
int3
push
inc
fadds
or
cld
xchg
xchg
or
push
lds
mov
hlt
sbb
sarl
mov
xchg
jnp
or
stos
or
push
fisttpl
dec
mov
roll
sahf
adc
insl
outsb
scas
dec
pop
sub
adc
fadds
mov
mov
or
scas
mov
aas
add
xchg
add
ljmp
mov
sbb
inc
pop
data16
push
xor
std
inc
sbb
cmp
std
ja
lcall
mov
pop
cmp
xchg
jb
add
in
ljmp
imul
mov
xor
push
sub
mov
sti
push
or
adc
dec
push
inc
dec
insb
js
mov
repnz
mov
insb
jmp
sbb
mov
jb
jge
sbb
jae
es
xchg
xchg
inc
out
inc
dec
or
and
aam
pop
push
mov
mov
pop
pop
sbb
add
mov
jmp
das
loop
cltd
and
scas
lahf
mov
jns
or
mov
xlat
pop
cmp
cmpsb
dec
jl
shrl
mov
xor
orb
mov
xorl
xchg
loop
bound
call
or
cld
test
jno
jno
xchg
sarl
dec
mov
push
leave
mov
daa
adc
fdivs
mov
mov
leave
jns
xchg
fstps
sbb
add
lret
mov
pop
pop
dec
in
in
xor
cmp
inc
ja
xchg
sarb
xchg
mov
mov
jecxz
sbb
fstpl
mov
adc
dec
cmp
ds
cmpsl
sahf
int
out
push
loope
mov
inc
jle
or
testl
mov
adc
incb
pop
fnstsw
mov
gs
sub
and
hlt
inc
iret
push
ror
pop
out
sub
pushf
push
pop
arpl
lea
rcrb
mov
mov
adc
xchg
mov
daa
dec
mov
xchg
push
xchg
cmpsb
test
data16
pop
push
imul
pop
xchg
push
sarl
mov
sub
inc
mov
stos
pop
cld
dec
in
mov
add
push
inc
loope
imul
push
xor
inc
lcall
pop
mov
mov
pop
cmp
push
mov
xorl
jne
xor
imul
fwait
mov
iret
shll
jl
mov
pop
lds
out
mov
mov
push
inc
jae
aaa
jo
pusha
out
jae
test
nop
xor
adc
xchg
mov
aad
scas
xchg
fcmovbe
stc
push
mov
push
xchg
loopne
mov
push
push
out
ret
sub
ret
or
mov
jmp
js
mov
lret
sahf
ljmp
cs
fs
ja
and
and
aaa
jo
arpl
jae
pop
leave
jmp
mov
or
or
bound
mov
sbb
push
pop
std
xchg
cs
cmp
aam
lret
sbb
sti
gs
aad
mov
out
dec
adc
bound
pop
mov
cmp
sbb
jne
clc
adc
and
push
hlt
lock
mov
cltd
pop
daa
add
inc
sub
sub
cmc
pop
call
jo
mov
jle
pop
dec
data16
dec
mov
dec
jp
sbb
lret
mov
pushf
out
xor
mov
popa
xlat
mov
pop
and
hlt
test
lods
aaa
pop
lods
test
std
push
and
mov
sbb
dec
aaa
jecxz
add
dec
or
out
icebp
jl
mov
jo
mov
and
btc
jbe
sbb
in
xlat
and
cmc
mov
sahf
fs
jbe
push
and
stc
and
jmp
inc
ljmp
xchg
push
push
adc
enter
mov
mov
and
mov
fcmovbe
fwait
adc
pushf
push
lahf
lds
scas
outsl
mov
inc
cmp
lea
and
pop
pop
scas
mov
dec
rcr
js
jecxz
dec
rcrb
enter
sbb
pop
rcrl
in
arpl
dec
cmpl
stos
outsl
push
pop
mov
push
jmp
mov
sub
lods
dec
cmp
sub
jnp
call
int3
dec
or
jb
mov
insl
mov
pop
test
jb
hlt
stos
dec
fwait
sbb
jg
pop
call
rcrl
outsb
jae
insb
nop
arpl
lret
adc
dec
xor
push
adc
mov
test
pop
fistl
fsubrl
mov
outsb
pop
push
pop
fwait
sahf
mov
test
mov
mov
ss
jmp
fwait
aam
decb
es
jnp
inc
ficompl
push
adc
add
xor
xor
xchg
add
aaa
hlt
hlt
repz
sahf
nop
cwtl
pop
xchg
popf
movsl
das
push
ljmp
imul
cmc
dec
fld
mov
sbb
jg
push
popf
scas
push
flds
es
push
imul
jno
scas
mov
mov
add
sbb
adc
dec
stc
lret
test
cmc
out
sub
mov
sbb
aas
add
dec
sub
mov
cmp
aas
mov
or
gs
push
cltd
rolb
pop
test
jmp
sbb
mov
xchg
inc
jp
data16
and
negb
ds
cli
mov
lret
in
sub
dec
stc
dec
insl
xchg
call
jecxz
mov
lcall
das
ret
mov
push
test
jns
mov
pop
clc
mov
cs
arpl
leave
insb
cld
div
lret
add
fiadds
ret
andb
mov
jo
cwtl
jmp
xorl
fidivs
inc
pop
xor
mov
loopne
test
mov
fdivrl
dec
shll
imul
ds
repnz
mov
aam
inc
adc
jb
mov
inc
test
adc
sahf
scas
sub
and
xor
repnz
lcall
insb
int
pop
stos
testb
sbb
sbbb
inc
mov
stos
fcomp
push
push
lock
aad
sbb
mov
and
xor
ljmp
nop
lahf
pushf
nop
push
dec
adc
xchg
jg
repz
fstps
inc
arpl
fs
cli
dec
enter
mov
cmp
jbe
dec
aam
mov
jbe
call
imulb
es
cmc
lods
mov
in
bound
in
cmpsb
cmp
mov
mov
or
jbe
jp
pop
ror
mov
jo
sti
cmp
stc
and
sub
mov
xchg
mov
mov
movsl
add
dec
in
push
lcall
faddl
fadds
add
aad
ljmp
jmp
sub
lods
jp
mov
movsb
mov
and
daa
add
in
rcrl
lods
sbb
popa
ficoms
fisubrs
test
jnp
fwait
dec
iret
push
dec
lahf
xchg
fwait
inc
mov
lahf
add
test
pop
std
pushf
enter
xchg
jmp
addb
int3
and
leave
fs
mov
cmpsl
inc
aam
iret
jns
imull
or
popf
dec
adc
cmp
push
cmpsl
sbbb
pusha
push
and
popa
rorl
sti
repnz
mov
xchg
test
cld
mov
mov
pop
in
pushf
xor
cmp
mov
scas
mov
adc
mov
xchg
mov
mov
enter
cmpsb
xchg
dec
adc
enter
push
inc
clc
outsl
nop
xchg
movsb
add
popa
mov
jge
dec
lods
mov
xchg
enter
and
fiaddl
sahf
decl
fwait
out
aam
cmp
mov
decb
pushf
xchg
sbb
mov
mov
add
pop
int3
cmpsb
dec
repz
xchg
xchg
push
or
mov
xchg
jmp
adc
inc
pop
inc
int3
cmp
xchg
decl
ljmp
fsub
and
xor
cltd
jno,pn
dec
adc
inc
add
loop
dec
sub
fdivrs
lock
mov
lods
sbb
dec
sbb
enter
lahf
sarl
mov
cltd
bswap
cmpl
sti
ljmp
loope
or
inc
mov
enter
iret
jae
out
xor
adc
daa
mov
repz
pop
mov
mov
add
xlat
out
cmpsl
cmpsb
mov
sbb
jecxz
adc
lds
inc
out
or
jo
mov
inc
aaa
mov
mov
cs
mov
xchg
test
push
stc
and
lcall
sub
and
mov
add
test
mov
or
popf
ror
mov
cwtl
dec
loope
fcomi
xor
dec
xchg
jbe
into
inc
in
dec
stos
mov
call
add
fisubrs
push
mov
int
xchg
or
and
out
mov
mov
xchg
ljmp
cmp
test
shlb
mov
cmp
xor
cli
jo
push
ljmp
add
push
mov
test
jbe
mov
mov
dec
lret
add
sub
andl
rcll
stc
sub
add
imul
cmp
sbb
xor
dec
adc
cmp
or
mov
xchg
mov
push
inc
sarl
nop
lods
push
cmp
xor
cmp
mov
popf
mov
in
xchg
loop
push
xor
mov
hlt
outsl
cltd
leave
cmpsl
cmpsb
mov
aam
shrl
int3
mov
xchg
arpl
in
out
insb
xchg
inc
jp
xorl
cli
push
sbb
in
sbb
test
flds
pop
cmp
clc
hlt
in
or
fldl2t
mov
add
mov
mov
pop
cli
and
sub
adc
push
xchg
lcall
pop
imull
imull
sbb
push
pushf
lea
inc
aas
in
and
sti
add
aam
jge
mov
test
xchg
aad
sbb
add
cmpsl
iret
bound
jne
dec
pop
dec
push
js
or
xchg
push
mov
push
std
ss
in
and
data16
repz
shll
test
loop
push
mov
mov
inc
shlb
mov
jns
stos
xor
pop
push
push
mov
adc
or
jle
xchg
mov
add
dec
and
mov
push
icebp
xor
xorl
add
stc
mov
pushf
push
push
mov
jle
mov
outsl
pushf
jae
mov
mov
pushf
sahf
rol
mov
dec
lahf
pop
outsb
std
and
test
dec
jg
and
mulb
pop
xlat
clc
hlt
push
mov
lahf
outsb
sbb
in
lods
shlb
mov
xchg
xlat
sarb
add
cli
sbb
mov
stos
enter
xor
lret
mov
mov
adc
add
add
out
cwtl
push
mov
cmpb
cld
ss
jg
or
cmp
das
bound
xchg
divb
adc
mov
sub
sub
lret
daa
cs
enter
add
inc
out
mov
adc
cwtl
fsubr
xor
scas
add
je
sarb
test
std
jae
push
cmp
xor
scas
lock
test
xor
pop
jnp
cmp
ljmp
fcoms
fwait
adc
push
mov
imul
test
sub
mov
iret
fists
inc
mov
pop
sub
jnp
sahf
inc
xchg
jne
pmaxsw
insl
and
add
mov
jg
jmp
mov
mov
mov
add
sub
test
repz
movsb
push
movsl
xor
pop
cmp
or
call
dec
mov
cmpsl
push
lea
stc
inc
mov
push
sbb
loop
std
mov
add
or
mov
push
push
push
pop
add
cmpsl
inc
mov
jl
iret
cld
adc
cwtl
push
cltd
inc
fwait
xor
clc
sbb
popa
pushl
mov
mov
cmpsl
push
clc
roll
cmpsb
jp
jge
inc
popa
arpl
mov
stc
pop
mov
push
mov
cmc
test
push
add
out
push
rcrl
mov
or
jb
clc
pop
pop
in
xchg
mov
cmpsb
scas
ret
ret
jbe
or
call
cmpsb
call
addr16
fwait
jns
dec
pop
aam
test
sub
mov
pop
andl
mov
incb
sbb
addr16
test
mov
insl
test
ds
leave
pop
mov
mov
int
inc
pushf
add
jl
std
adc
xchg
and
jnp
jmp
xchg
mov
sbb
sbb
xor
arpl
mov
adc
cs
movsb
stc
push
enter
addr16
xchg
mov
jmp
hlt
movsb
imul
or
imul
mov
dec
inc
jbe
inc
push
int3
in
or
stos
xor
push
jnp
pusha
enter
lods
leave
mov
into
outsb
stc
cld
pop
repz
mov
cwtl
arpl
subb
xchg
in
inc
sti
xchg
inc
shrb
jecxz
xchg
push
dec
pop
shl
add
btr
mov
mov
movl
jbe
or
ret
jbe
inc
inc
or
jb
push
add
lea
and
shlb
imul
lods
fs
je
cmpsl
cmc
sub
xchg
cmp
loopne
xor
dec
mov
jle
xchg
ret
int
cmp
movl
jne
push
mov
repnz
sbb
push
das
fldenv
iret
lcall
cmp
xor
inc
cmpsl
xchg
out
jl
shlb
cmpsb
in
mov
roll
lock
ret
or
in
in
jb
push
mov
dec
rclb
adc
movl
jmp
dec
inc
sub
lods
clc
test
cmp
xchg
and
mov
jnp
mov
dec
cmp
arpl
test
pop
cmp
dec
loope
adc
icebp
leave
or
ja
cli
insb
jne
clc
pushf
idivl
shll
insb
out
in
jbe
ret
xor
xchg
dec
ret
mov
int3
fstps
jnp
daa
lcall
adc
in
xchg
rcrb
fs
inc
add
cmp
enter
cmp
xchg
jecxz
ret
iret
push
xchg
jo
idivl
aad
shll
push
arpl
incb
mov
add
aam
pop
icebp
sub
or
sub
fwait
lods
inc
fs
out
cmpsl
pop
pop
cmc
insl
xlat
pop
sbb
adc
pop
int
xchg
out
or
inc
pop
cmp
andl
or
lds
es
sti
sub
mov
inc
push
xor
ret
and
test
test
sti
push
jno
push
dec
das
or
push
dec
mov
mov
dec
sub
xor
inc
stos
fidivrl
sbb
mov
sub
lea
jbe
mov
push
jp
dec
inc
popf
roll
dec
lods
hlt
mov
jmp
js
or
in
mov
mov
stos
aaa
loop
sbb
imul
addl
or
mov
xlat
xchg
xchg
jns
scas
cli
fmul
lock
repnz
aam
xchg
add
inc
int
lods
adc
adc
xchg
stc
cmp
xchg
out
mov
pop
repnz
das
adc
pop
jo
mov
rorl
lcall
mov
adc
and
add
out
ja
clc
push
fcoml
sti
ja
insl
sub
inc
les
cmpsb
lods
sub
mov
and
es
ret
rclb
bound
iret
inc
cmp
fcmovnbe
inc
xchg
push
lock
dec
inc
and
mov
inc
faddl
cmpb
into
pop
jne
mov
lret
flds
push
mov
and
sbb
sbb
sub
inc
dec
aam
mov
dec
stos
adc
mov
xchg
cmpsl
pop
xchg
jbe
dec
ljmp
call
xchg
insb
pop
add
cmp
hlt
fs
es
cmc
jg
int3
xor
dec
fs
push
std
jae
fdivrl
jno
or
shrb
jecxz
xchg
dec
ljmp
gs
inc
les
cld
popf
mov
pop
stc
dec
mov
adc
and
push
into
and
cmp
out
stos
leave
mov
pushf
lcall
pop
es
and
sub
inc
mov
int3
jl
mov
adc
cmc
leave
mov
test
inc
push
inc
xor
mov
in
scas
xchg
filds
sbb
sbbl
lods
push
xor
jne
mov
push
ds
push
xchg
aam
ret
mov
arpl
mov
stc
adc
sub
xchg
xor
dec
inc
xchg
push
cmp
or
mov
jle
leave
je
push
scas
test
push
fsubl
sub
dec
mov
addr16
loope
jns
aam
nop
cmp
sub
test
mov
mov
outsb
js
std
clc
rcrb
add
xor
das
andl
popa
mov
mov
inc
lds
jnp
sbb
out
cltd
mov
dec
outsl
out
cmp
adc
cs
mov
and
call
jne
addr16
mov
mov
lret
test
xchg
sahf
notl
out
out
js
sbb
push
cli
movl
pop
daa
loopne
arpl
scas
dec
xor
mov
jmp
adc
sti
stc
push
loope
repnz
push
sub
jl
mov
popl
fwait
rorl
shl
push
mov
test
push
sti
addr16
xchg
fiadds
repz
call
sarb
dec
dec
and
mov
subb
inc
fdivrl
pusha
test
add
stc
nop
sbb
push
fmulp
xchg
sub
xchg
addr16
adc
mov
js
fadds
flds
xchg
dec
or
pop
mov
dec
xchg
sub
cli
and
jbe
jo
add
pusha
pop
jl
lret
aaa
lahf
and
loopne
cltd
lods
imul
pushf
inc
mov
aaa
mov
adc
mov
sub
aaa
adc
sbb
enter
mov
mov
jne
in
cmp
bound
fdivrs
mov
in
or
add
test
sti
das
inc
ja
adc
dec
push
pop
xchg
pop
push
decl
imul
pop
cmp
jb
ds
outsb
out
aad
icebp
popa
fldenv
xchg
inc
xor
cmp
fsts
decb
jb
mov
cmpsb
jmp
pop
inc
out
dec
fnstenv
imul
or
mov
sti
fsubrs
inc
xor
or
push
adc
sub
testl
mov
lret
cli
mov
adc
cmpb
inc
das
decb
push
sub
pop
mov
add
dec
and
out
imul
and
and
pop
xchg
adc
sub
xchg
jmp
dec
insb
loop
inc
hlt
adc
outsb
jno
addl
push
fsubr
push
cmp
mov
in
punpckhbw
dec
and
push
or
imul
jb
scas
or
inc
testl
out
das
dec
je
sub
movsb
imul
movsl
sub
mov
mov
xor
addr16
add
add
and
rol
lock
sbb
ret
dec
cmp
push
push
mov
sbb
ja
xor
cmp
jbe
shl
imul
mov
test
mov
inc
mov
notl
jns
icebp
stos
pop
push
popa
jmp
sub
adc
cmp
mov
sbb
outsb
pop
jnp
dec
cld
mov
jb
and
push
outsb
mov
rorb
xchg
das
adc
pop
sub
mov
mov
mov
pop
dec
xchg
cmp
js
cmp
xchg
outsl
insl
movsb
stc
cwtl
fidivrs
mov
es
pop
addl
mov
pop
dec
sahf
insl
add
jmp
shrl
dec
pop
pop
mov
fs
jns
adc
xor
scas
mov
adcl
fists
or
shlb
xchg
xchg
subl
movsl
sbbl
xchg
jns
fidivrs
add
insl
insb
repz
hlt
gs
clc
shll
xchg
stc
loopne
ud2
jb
shrl
pop
aaa
or
and
jns
add
jmp
icebp
mov
repnz
xchg
and
push
push
int3
xchg
push
xchg
add
push
cli
mov
mov
pop
or
xor
nop
and
incl
sub
lods
pop
andl
out
pop
fsubr
lock
cltd
loope
pop
xchg
sti
inc
xchg
adc
and
pop
out
sbb
enter
jmp
inc
cmpb
movsl
in
inc
lcall
pusha
popa
sub
out
xchg
fistpl
stos
frstor
mov
dec
jae
ror
adc
adc
push
popf
filds
xchg
inc
cmpsb
fsubrs
or
insl
and
icebp
mov
inc
fcmove
and
aam
aam
mov
push
js
stos
push
cli
insl
cmpsl
cli
mov
lea
and
loope
aas
push
jno
js
dec
adc
jnp
sbb
lods
sbb
adc
fcoms
daa
jne
or
sbb
mov
test
pop
fadds
jnp
fs
mov
pop
mov
mov
and
or
aaa
std
outsb
sub
in
jge
jne
fmull
adc
cld
adc
xchg
pop
sub
and
pop
mov
leave
sub
push
fucomip
cwtl
in
adc
add
pop
inc
out
ror
jmp
adc
pushl
ret
mov
test
hlt
inc
hlt
imul
lcall
dec
test
insb
cmp
mov
mov
pop
xor
mov
mov
mov
sub
mov
aam
jbe
sarb
out
ljmp
rcrl
add
bound
loope
pushf
jl
in
pop
imul
pop
lods
cmp
repz
sahf
dec
jmp
imul
bound
adc
lcall
lret
cld
data16
fyl2x
lcall
ljmp
jne
pusha
pushf
cmpsl
mov
std
cmp
in
addr16
ret
fwait
aas
pop
ret
xor
xor
ds
mov
and
cmp
enter
dec
dec
xor
adc
lds
arpl
loope
adc
iret
lock
xor
adc
outsl
fs
jp
mov
xchg
mov
push
notl
jbe
mov
xchg
cmp
jge
test
daa
aam
pop
pop
inc
lcall
lret
stc
or
fisttpl
shll
wrmsr
jmp
addl
fmulp
imul
jbe
fs
xchg
in
es
mov
inc
mov
fdivrs
push
or
mov
xor
insl
sbb
in
bound
cmp
mov
mov
jns
jae
pop
add
aas
fidivl
repnz
pop
push
push
xor
jg
mov
fcmovu
mov
jns
xor
push
shlb
push
push
cmp
mov
das
js
xchg
jne
push
rorl
pop
outsl
fisubrl
cmp
pop
pop
sahf
out
aam
scas
push
ret
push
push
aad
jns
out
sub
adc
enter
loop
mov
pop
imul
outsb
mov
cmp
mov
hlt
mov
std
mov
mov
in
xchg
ss
or
adc
out
loopne
dec
lods
mov
shr
mov
push
stc
data16
xor
push
scas
inc
dec
mov
arpl
xchg
add
xchg
pop
mov
loopne
aaa
jae
fimuls
fnstenv
cmpl
mov
lods
imul
pushf
mov
popf
cmp
les
popa
add
xchg
imul
lret
inc
inc
mov
decb
nop
bound
sbb
jo
mov
push
inc
push
in
lods
lret
insb
faddl
xchg
ret
pop
push
insl
jp
sbb
pop
adc
into
out
shll
dec
mov
pop
or
jnp
loope
shrb
insl
push
xchg
hlt
out
test
cmp
push
and
ja
push
out
bound
lahf
insl
mov
cmp
inc
or
and
jb
idivb
or
add
lahf
jle
aas
in
adc
sbb
and
jl
fnstsw
inc
mov
idiv
iret
dec
xchg
pop
cmc
mov
leave
xchg
push
jb
dec
mov
add
loopne
xor
scas
je
xor
rorb
xchg
lods
insb
jns
dec
push
faddl
call
cltd
shlb
cmp
mov
pop
inc
pop
mov
aaa
and
xlat
push
iret
xor
out
jp
lret
lcall
insb
jmp
mov
popf
stos
imul
jne
jl
add
into
xchg
sti
mov
push
inc
bnd
mov
mov
std
add
xchg
jmp
sub
outsb
cmp
lret
adc
sbb
pop
jle
daa
jne
push
add
fdivs
and
add
mov
cmp
pop
cs
nop
inc
push
outsl
jno
cmp
into
add
in
xchg
ret
rcr
mov
cmp
xor
into
inc
sbb
add
mov
ljmp
dec
xchg
mov
jns
add
nop
aad
ss
mov
fwait
pop
cs
loope
fwait
mov
xchg
xor
ja
push
daa
mov
out
sbb
mov
mov
mov
cmpsl
test
aad
imul
outsb
push
fadds
leave
sbb
push
popa
test
or
sbb
push
in
aad
lods
dec
daa
mov
xchg
add
syscall
stos
xor
jl
jg
and
repnz
add
or
scas
in
mov
inc
mov
outsl
es
shrl
mov
nop
sbb
push
ret
xchg
xchg
cltd
in
addl
add
sbb
adc
jle
cld
cmp
or
cwtl
push
or
imul
push
popf
mov
loop
push
ja
lret
push
int3
sahf
adc
xor
lcall
xor
pop
stc
pop
push
stos
and
nop
sbb
pop
xchg
pop
shrb
and
fisttpl
imul
movsl
movsl
rcll
mov
fdivs
pushf
aam
push
adc
aaa
outsl
and
test
stos
and
sbb
rolb
inc
push
or
xor
fidivrs
pop
mov
jmp
je
xor
mov
and
sub
fidivrs
ljmp
push
mov
repz
add
repz
and
cli
and
cmp
movsb
lahf
xchg
mov
ljmp
xor
sbb
cltd
cmp
movsb
pop
aaa
mov
xor
sarb
xchg
fs
popf
xor
or
iret
mov
sub
pushf
add
xchg
dec
fstpl
mov
les
or
mov
pop
jns
jge
cmpsb
imul
int3
dec
xchg
mov
in
inc
adc
mov
inc
jl
mov
sbb
cli
outsl
xchg
sbb
mov
jno
xchg
cwtl
and
pop
cltd
inc
outsb
xlat
iret
inc
loopne
cld
mov
mov
push
pop
arpl
imul
dec
out
lods
dec
sub
lods
sti
xchg
sbbb
lds
mov
lcall
orb
pushf
arpl
push
insb
push
pop
jns
outsl
sbb
jnp
js
cmp
sub
dec
cld
jnp
pop
cltd
jae
dec
sub
cmp
xchg
dec
dec
jle
jmp
cmp
cmpsl
push
sub
xchg
jno
mov
lods
adc
jecxz
outsl
sbb
jne
mov
mov
sbb
mov
neg
adcb
fdivrl
and
aam
and
clc
xor
test
outsb
sub
xchg
fiaddl
std
mov
sti
mov
out
jne
sub
and
add
aaa
push
lahf
jno
std
repnz
mov
and
shlb
inc
dec
jne
inc
mov
xor
aad
push
dec
jns
ror
loope
add
sbb
filds
fidivl
inc
es
add
int3
pop
ffreep
int3
sub
or
enter
xor
and
addr16
lret
imul
out
aam
out
cmc
adc
mov
mov
mov
call
add
push
pop
das
fldcw
pop
ret
iret
pop
and
jbe
jno
sbb
push
pop
mov
jmp
arpl
jg
ret
jmp
aad
mov
jg
jns
notb
push
ss
stc
jp
or
stos
rorl
mov
fcoms
aam
push
lret
pushf
dec
add
mov
mov
imul
insb
pop
rcr
inc
dec
mov
xorl
lret
ja
stc
mov
jg
sub
jg
or
je
sub
mov
dec
incb
and
mov
pop
dec
cmpb
and
lret
xchg
sub
cmp
repz
stos
jb
or
push
es
sbb
icebp
sti
push
mov
xchg
mov
push
icebp
xchg
cmp
movsb
fs
outsl
mov
mov
insl
mov
int
rorb
and
repnz
mov
cmc
push
in
or
dec
nop
mov
cmp
ljmp
adc
cmp
or
add
clc
fidivs
cmc
xlat
and
sahf
aaa
mov
sub
jae
sbb
scas
sub
divps
cmp
movsb
inc
xchg
insl
out
cwtl
or
scas
lret
aaa
mov
loopne
sti
rcrl
sbbl
andb
outsb
cwtl
sub
xor
int
xchg
inc
jmp
or
xor
mov
lea
lods
pop
lret
push
stos
lods
out
sbb
xor
xchg
push
lea
addl
and
mov
adc
std
push
pop
jae
push
call
repnz
ss
daa
je
pushf
imul
inc
jne
adc
int
or
nop
sbb
inc
repnz
imul
in
repnz
testb
mov
in
mov
icebp
fstpl
movsb
sbb
xor
shll
mov
inc
sub
push
dec
dec
lock
cli
pop
roll
in
leave
imul
jne
jg
xchg
out
mov
movsl
xor
gs
fiaddl
xor
adc
fcmovnu
nop
xchg
push
sti
xor
mov
dec
test
cmc
bound
adc
jmp
in
in
push
inc
mov
lock
adc
sti
addr16
xlat
loopne
push
mov
stos
sti
test
out
dec
mov
add
jne
dec
stos
mov
rorl
hlt
sub
int3
lock
rcll
mov
xlat
sub
cmp
mov
ljmp
std
call
xlat
xchg
mov
pop
jne
pop
ja
mov
mov
out
iret
pop
je
pop
les
jmp
lcall
movl
push
inc
incb
and
popa
xchg
cs
test
sti
mov
jns
testl
sbb
daa
inc
imul
fcmovnb
aad
lds
rcrb
pushf
sub
mov
and
sbb
cmp
jl
sub
test
xor
or
sbbl
mov
fs
ss
jb
push
iret
xchg
or
adc
pop
pop
movsb
sbb
mov
sahf
inc
mov
pop
inc
out
mov
fs
leave
push
ficoms
add
fwait
pop
or
and
adc
orl
lea
mov
jne
push
lcall
out
lahf
xlat
mov
push
shll
pop
pop
jmp
idivb
pop
add
add
adc
fnstsw
movsb
or
xlat
push
addr16
adc
test
lods
xchg
jo
inc
xchg
sub
add
xchg
mov
or
inc
pop
mov
sbbl
in
stc
data16
dec
push
xchg
sbb
inc
imul
jno
inc
xchg
in
and
dec
repz
cli
jb
adc
cmc
fbstp
mov
inc
xchg
sahf
into
sub
sbb
insl
inc
push
aas
js
int3
xchg
mov
fildll
popa
xchg
add
adc
xchg
sbb
jg
add
cmp
xor
fs
jmp
cmpsl
shrb
xchg
mov
out
xchg
test
mov
fwait
sbb
cli
inc
mov
mov
aad
inc
adc
fstl
jp
aaa
pop
mov
ljmp
cmp
sbb
mov
sbb
push
nop
and
xchg
jbe
mov
dec
fwait
out
in
mov
mov
add
aad
rorl
ret
push
cmc
int
xor
and
imull
push
mov
call
pop
xchg
outsb
jmp
icebp
push
out
mov
cmpsb
lret
pop
fisubl
std
add
jnp
cmp
sub
arpl
icebp
sub
pop
daa
jecxz
push
push
push
fbstp
and
pop
ja
mov
dec
mov
mov
cltd
scas
inc
mov
bound
and
jno
inc
aaa
jne
cmp
lods
jecxz
mov
outsb
ficoms
hlt
push
in
dec
adc
jb
mov
mov
sbb
scas
xlat
fistpll
pop
push
sbb
sti
sti
cs
jle
jo
popa
cmpsl
sub
outsb
stc
xor
adc
movsl
lahf
jp
dec
loop
stos
out
or
jb
loope
push
imul
std
sub
ljmp
jl
sbbl
xchg
repz
dec
std
sub
push
jp
je
push
cld
leave
subl
xchg
xchg
fdivr
in
ss
into
and
sbb
ret
jecxz
lcall
popa
js
jmp
jecxz
in
adc
lods
shlb
jo
mov
das
test
cmp
push
and
mov
and
lods
data16
add
in
mov
inc
pop
aas
mov
pop
inc
scas
dec
mov
jae
dec
push
js
jne
xchg
jbe
nop
pusha
out
dec
lds
cmc
icebp
lcall
mov
pop
subl
mov
pop
sub
mov
inc
pop
insl
movsl
imul
pop
and
cmc
add
push
add
add
dec
out
mov
inc
and
inc
add
rcrb
in
inc
xor
int3
pop
out
aam
xor
adc
adc
cld
mov
repnz
loopne
mov
cs
cli
or
mov
mov
and
and
or
adc
dec
mov
sbb
inc
test
pop
sbb
jbe
cltd
xor
xor
jb
int
pushf
dec
sbb
mov
ret
add
mov
xchg
dec
scas
or
push
rorb
cmp
clc
sbb
fdivr
jb
jle
dec
or
jo
aam
or
or
xchg
shrb
cld
data16
sub
mov
sbb
pop
adc
cmp
mov
movsl
mov
repz
push
mov
es
mov
inc
and
movl
add
sub
ds
subb
mov
subb
xorl
jle
push
sbb
adc
adc
xlat
adc
cmp
iret
xor
xor
and
sbb
popf
sbb
push
clc
js
push
cltd
pop
mov
inc
mov
dec
inc
imul
lretw
pop
fistpll
subl
je
out
adc
jecxz
mov
pushf
and
and
mov
push
fs
ss
dec
push
dec
push
mov
inc
sti
mov
and
loop
es
imul
mov
dec
in
inc
dec
test
mov
jnp
int3
stos
lret
popf
pushf
insl
mov
sbb
fildl
jb
dec
adc
das
sahf
jmp
fs
pushf
xchg
and
mov
sbb
popl
pop
sub
sbb
xorb
bound
in
xor
pop
fs
aas
out
mov
out
rol
sub
sbb
out
es
xor
pop
mov
fmull
add
inc
out
pop
aaa
push
mov
mov
mov
dec
in
mov
test
xor
pop
push
lret
insb
movsl
push
inc
jb
test
je
mov
test
sbb
aam
mov
mov
pop
ret
es
rorb
pop
sub
movsb
push
fcmovnb
fcoml
add
jp
jne
add
or
jo
mov
insb
rolb
jge
sbb
cltd
loop
out
mov
mov
mov
iret
sbb
ljmp
mov
xchg
out
stos
jmp
fistpl
sbb
mov
cmc
dec
jbe
pop
jge
notb
nop
loop
in
inc
sbbl
push
xlat
mov
mov
mov
shl
leave
aam
push
push
adc
sbb
in
push
rcrl
pop
movsl
enter
ja
out
dec
lods
dec
dec
lret
or
push
pop
xor
loopne
inc
xchg
or
mov
inc
dec
jne
dec
or
mov
xor
pushf
in
ja
xchg
or
cmp
pop
into
mov
cli
inc
outsb
ja
loop
hlt
jmp
jo
cmp
clc
in
sbb
sub
test
inc
sti
sbb
adc
jecxz
xchg
xor
roll
in
and
sti
dec
cmp
sbb
icebp
push
pop
movsl
movsb
in
cld
test
jo
lret
aas
mov
xor
inc
ret
rolb
les
aaa
xorb
negl
mov
mov
push
pop
call
push
arpl
adc
mov
ss
adc
add
cmp
jge
mov
out
ds
out
mov
and
loope
sub
repz
fsubrs
mov
or
push
aam
or
pop
loop
and
test
mov
mov
fs
sbb
add
mov
ljmp
push
xchg
and
lock
xor
loopne
ficoml
int3
in
add
push
sub
into
add
sahf
push
add
cmp
or
sbbl
or
cmc
mov
call
add
cmp
test
data16
lahf
mov
js
xor
mov
test
arpl
push
mov
fdivrs
fdivrs
adc
xor
xor
mov
cmp
mov
sbb
out
push
shlb
or
push
push
xchg
imul
xchg
push
add
inc
jge
std
outsl
jmp
cltd
mov
rolb
mov
aaa
dec
movsb
mov
loop
ja
pushf
int
mov
inc
mov
add
or
sarb
xchg
repz
xchg
dec
stos
int
insl
sub
sarl
mov
out
push
xchg
cld
mov
cmc
jmp
addr16
or
push
out
add
sarl
cs
nop
xchg
popf
stos
pop
jne
insl
jnp
sbb
pusha
fcoms
lea
arpl
insl
mov
sub
mov
mov
fidivrs
sbb
fcmovu
sbb
je
dec
pusha
mov
cmp
mov
int3
push
js
popf
cmp
jns
mov
clc
data16
xor
cltd
stos
test
int3
mov
lret
push
xor
push
stos
cmp
out
nop
push
cmp
jl
xchg
add
outsb
add
mov
cmp
sbb
inc
xor
out
jp
jo
movsl
je
push
das
int
lcall
sbb
scas
xor
mov
imul
and
jo,pt
dec
loopne
add
dec
pop
cmc
shll
fidivrs
enter
jge
mov
lods
int3
xor
xchg
or
cwtl
add
add
cld
cmp
in
pop
test
push
lds
fidivs
icebp
dec
movsb
mov
mov
nop
xchg
push
push
mov
sub
into
lds
cmp
jg
adc
jmp
jns
in
mov
mov
push
shlb
sbbb
scas
pop
mov
or
jge
leave
jmp
iret
adc
fstpl
movsb
mov
outsl
mov
roll
jmp
cmp
inc
lret
jne
js
stos
icebp
and
mov
stc
divb
dec
and
in
pop
xchg
mov
dec
xchg
pop
ljmp
or
add
xor
lock
inc
pop
dec
push
sbb
das
or
mov
testl
fisubrl
mov
pop
mov
push
cli
inc
movsl
dec
mov
pop
sbb
adc
push
push
and
mov
dec
out
aaa
pop
mov
and
pop
mov
xchg
cwtl
jp
aam
mov
orb
xlat
inc
or
push
jae
jecxz
xchg
pop
lret
std
mov
dec
inc
das
mov
lock
scas
and
adc
jbe
cmp
mov
aam
jnp
xor
xor
sbb
out
xor
mov
bound
loop
sbb
shl
pop
push
xlat
insl
jb
cmc
cmp
push
loop
mov
outsb
mov
out
ftst
scas
jp
inc
mov
or
loopne
sub
pop
xchg
lret
test
cmc
test
push
or
mov
pop
mov
or
fnstcw
inc
les
daa
ja
clc
inc
sahf
and
ja
mov
mov
mov
fwait
sub
dec
mov
call
test
or
lds
test
lods
adc
add
push
outsb
adc
sbb
inc
cmp
push
inc
mov
jge
out
inc
cwtl
jae
or
lods
imul
mov
sbb
loop
pushaw
inc
rcll
scas
or
fidivrl
pushf
sub
fnstenv
sub
leave
mov
jg
and
lahf
das
lahf
arpl
jbe
std
sti
xor
or
mov
jle
and
enter
addr16
inc
cs
add
shlb
push
movsl
xchg
jl
and
xchg
sub
jl
scas
nop
fwait
es
ljmp
pop
jae
imul
testb
xor
cmp
add
bnd
or
adc
shlb
and
mov
cli
icebp
inc
jg
cmp
aas
mulb
mov
jbe
int3
dec
ja
xchg
jae
loope
or
mov
ja
sub
push
aad
fwait
pop
outsb
jnp
dec
xor
shll
sarb
push
ficoms
mov
lock
pop
jne
adcl
adc
aad
fwait
inc
shrl
sahf
insl
jae
scas
mov
cld
push
popf
insl
decb
add
add
sarl
ja
iret
stos
test
mov
adc
shll
mov
addr16
js
insl
gs
lods
xchg
sbb
xor
ljmp
and
in
adc
push
std
xor
sub
pop
test
jecxz
push
xor
das
cli
sub
test
push
xchg
addr16
enter
mov
push
neg
or
mov
daa
jmp
dec
mov
push
daa
rorl
dec
push
out
in
cltd
mov
leave
xchg
adc
test
adc
jg
adc
xor
jo
ss
pop
repz
xchg
test
rcr
xor
js
add
leave
pusha
repz
fs
test
icebp
fs
aad
fmuls
xchg
out
jbe
movsb
mull
jnp
pop
adc
icebp
popa
insl
mov
and
in
test
cmc
dec
lret
xchg
sbbb
repnz
sbb
out
cmp
cmp
jmp
inc
dec
js
sub
popf
dec
push
adc
outsl
ljmp
sub
jg
xor
dec
cmp
sti
pop
cmp
out
sbb
jno
sub
cmp
xor
ss
xlat
mov
and
push
dec
in
lock
xchg
mov
add
xchg
adc
in
stos
rcrl
sub
js
add
mov
js
dec
add
mov
xchg
movsb
jnp
addr16
mov
sbb
call
cmp
sub
ss
inc
popf
xchg
pop
loopne
mov
push
add
popa
pop
std
cld
stos
fistl
mov
out
sahf
mov
and
cli
fwait
cmp
cmp
push
or
pusha
iret
add
or
lock
aad
xor
fstp
dec
jp
pop
inc
ja
cs
es
rclb
out
out
adc
sub
mov
repnz
sbb
addr16
push
xlat
pop
pop
fistpl
cmc
repz
fwait
lods
clc
test
mov
mov
mov
out
xchg
jmp
or
jns
rclb
xor
lock
mov
and
adcl
mov
inc
push
mov
dec
loop
cmp
push
outsl
test
hlt
inc
frstor
das
fwait
aas
mov
mov
clc
imul
loopnew
cltd
lret
fsubrs
jmp
out
xchg
js
add
jnp
or
lods
or
mov
dec
push
in
into
dec
jnp
fidivrl
int
nop
xchg
push
aam
and
fs
push
negb
mov
xor
and
test
mov
in
icebp
adc
push
mov
mov
xchg
into
cmp
jno
sub
sub
add
jnp
shl
xchg
xchg
test
insb
adc
shll
mov
mov
lea
xor
fcmovnb
cwtl
add
in
loope
add
pushl
lods
shl
mov
push
mov
test
mov
cli
call
test
sub
dec
pop
fdiv
jge
mov
jl
push
arpl
sub
cmp
iret
ret
adc
daa
scas
inc
fistpl
js
and
loop
adc
out
mov
xchg
push
cmpsb
mov
aas
add
sub
mov
cmp
sub
in
pop
and
call
clc
pop
cmp
insb
mul
pop
dec
mov
jg
mov
pop
and
imulb
xchg
pusha
ljmp
mov
xor
push
ds
lds
pop
repz
outsl
loopne
lret
cmpsl
popf
popa
jns
dec
sahf
arpl
divb
add
adc
xchg
inc
lock
xor
mov
jo
in
fisubrs
mov
orl
jne
cli
test
ret
push
dec
sbb
push
jmp
je
jecxz
add
mov
jbe
or
add
mov
add
mov
cmc
cmp
mov
push
or
push
fsubrs
data16
mov
cs
cmp
dec
outsl
sub
frstor
aad
scas
mov
adc
mov
imul
incl
sub
dec
inc
into
xor
in
stc
push
sbb
xor
pop
push
dec
mov
cmp
cmp
pop
cmpsb
add
xlat
sub
push
fdivl
pop
jne
mov
jmp
das
sub
das
cli
stos
pusha
orb
hlt
std
ja
push
aam
nop
xor
push
xlat
stos
inc
cltd
int
sub
test
inc
icebp
pop
aam
pop
xchg
rcl
dec
mov
mov
mov
sbb
xchg
sub
mov
jle
mov
test
jb
into
pop
loop
pop
cltd
sbb
adc
in
sub
popf
je
fs
fdivrp
push
js
cmpsb
mov
pop
insl
fnstenv
outsl
lcall
add
sbb
js
cmpsb
aaa
rolb
or
xor
stc
mov
scas
in
adc
mov
inc
cmp
lock
lock
ljmp
sbb
fdivr
out
ja
mov
aad
push
stos
mull
sub
pop
mov
insb
add
out
mov
dec
dec
data16
in
adcb
jnp
fsubr
cmp
das
pop
lock
nop
xchg
pop
aam
lret
jne
mov
ds
stos
dec
push
pusha
test
mov
aas
test
ror
mov
fidivrl
nop
lods
loop
aaa
dec
sahf
mov
and
pop
push
pop
sarb
add
shlb
clc
xor
fadds
pusha
xchg
mov
lret
mov
push
rolb
cmc
add
mov
push
lcall
xchg
jb
in
daa
dec
out
xor
fldcw
std
xor
into
push
lahf
shrl
pop
subb
subl
xor
dec
scas
jbe
adc
or
mov
sarl
mov
inc
or
add
repz
cmp
jl
divb
pop
icebp
adc
fiadds
xchg
dec
push
jnp
sbb
or
pop
jae
jle
rorb
mov
xchg
pop
cmc
cmpsl
aaa
mov
test
std
out
sbb
xchg
pop
jo
adc
or
adc
sti
adc
mov
test
pop
and
lods
and
xor
enter
pop
push
out
sub
je
aam
ret
xchg
jno
push
xor
inc
mov
pusha
cmp
imul
jns
mov
pushf
jno
aad
sub
jae
lcall
mov
mov
xchg
mov
cltd
inc
bnd
pop
out
push
sahf
add
fcmovne
cld
hlt
aam
add
out
in
pop
xchg
add
xrelease
cmp
icebp
outsl
orl
mov
inc
mov
mov
xchg
mov
loop
and
jmp
mov
jmp
addr16
outsb
sbb
mov
pusha
in
shll
mov
add
loope
or
cmp
push
push
adc
cmp
jo
out
inc
mov
das
lea
test
ja
mov
mov
loope
xlat
xor
pop
jo
push
xchg
jbe
mov
mov
mov
push
cwtl
sbb
sahf
mov
icebp
dec
dec
je
push
xchg
adc
cmc
pop
or
mov
mov
cltd
inc
or
mov
cmp
jp
mov
sbb
mov
jbe
cwtl
pop
lret
out
xchg
push
stos
movsl
ja
mov
sub
mov
imul
addb
jbe
mov
sbb
pop
mov
shr
dec
cli
mov
push
fwait
cltd
scas
pushf
das
icebp
ds
push
sub
daa
mov
dec
push
jbe
or
sub
inc
loop
notb
jne
je
jo
lods
ret
stc
jg
mov
xchg
and
add
sub
jg
loope
push
in
icebp
xor
jne
pop
out
fisubrl
and
mov
stos
mov
xchg
xor
call
imul
aad
adc
data16
mov
push
repz
or
sub
sub
stc
xchg
dec
sub
push
pop
lret
sbb
xorb
sbb
or
cmpsb
clc
mov
gs
call
inc
xor
sub
mov
test
push
jp
mov
fs
int
lea
sbb
enter
jo
imul
mov
aaa
push
outsb
dec
mov
jbe
cmp
adc
adc
adc
adc
add
jns
lret
daa
rcrb
jo
pshufw
cmp
and
mov
test
test
cltd
jl
jo
lret
daa
stos
jmp
daa
push
lea
add
mov
stos
out
jle
cmp
ret
ss
mov
cwtl
mov
insb
movsb
jmp
js
add
aaa
xchg
rcr
and
sbb
inc
aad
addr16
gs
leave
mov
sbb
jge
cs
xor
inc
sub
or
inc
fwait
rorb
dec
mov
push
adc
pop
jle
or
adc
js
rclb
cmc
movsb
adc
shlb
mov
call
cld
mov
int3
push
pop
imul
ficompl
clc
lods
es
sub
aaa
mov
ficoms
push
mov
insb
sbb
dec
push
lcall
sub
pop
jae
pop
incb
addr16
pop
outsl
jns
and
pusha
mov
out
sbb
cmp
mov
scas
stos
inc
out
ret
popf
les
push
test
iret
ss
push
mov
xor
ret
push
in
test
mov
and
insl
lods
pop
xor
fisttpll
adcb
push
cmp
xor
ret
mov
add
push
movsl
push
mov
push
leave
xchg
mov
cmpsl
scas
or
xor
mov
mov
std
outsb
xchg
cmp
xlat
dec
imul
pop
xchg
mov
scas
outsb
idivl
mov
pop
shr
inc
fwait
mov
inc
movsl
add
xor
pushf
outsb
fsub
jmp
idivl
dec
test
mov
ret
lods
test
rol
mov
cltd
cmpb
sti
ret
sbb
and
pusha
mov
mov
push
jl
das
lahf
push
in
icebp
and
movsl
dec
arpl
and
fists
adc
in
mov
xlat
imul
and
loope
xchg
andb
imul
ss
mov
movsb
mov
jmp
icebp
cmp
add
lcall
pop
nop
jp
jns
outsl
clc
lahf
lods
repz
xchg
out
nop
mov
outsb
imul
mov
jp
je
fnstcw
and
adc
into
addr16
adc
push
mov
cmp
rorl
jo
lock
push
imull
cmpsb
push
push
leave
ds
jns
or
leave
mov
bound
xchg
into
movsl
ffreep
pop
ret
into
or
mov
popa
cmp
push
and
cmp
sub
mov
out
mov
pop
insb
xchg
pop
xchg
enter
push
mov
fucomi
add
add
fs
les
push
js
cmc
mov
add
lods
rol
pop
add
pop
and
lds
out
mov
imul
lods
call
enter
jo
fidivrl
sbb
ret
cmpsl
push
cmpsb
nop
push
mov
daa
into
xor
pop
pop
or
ja
dec
jl
rorl
stc
out
mov
push
inc
ret
jae
add
adcb
add
clc
jmp
fldl2e
push
mov
out
push
mov
push
lret
insb
jg
sub
lret
jno
cmp
loopne
test
iret
inc
push
push
mov
les
addb
inc
stos
pop
out
sub
cmp
push
pop
inc
cmp
or
out
pop
cmc
pop
icebp
mov
mov
mov
mov
push
sub
inc
imul
hlt
xchg
mov
and
rolb
pop
sbb
loop
cmpb
lretw
inc
fbld
out
test
pop
sbb
jge
push
addr16
jmp
mov
lcall
and
aas
das
loop
add
push
pop
dec
dec
mov
adc
sub
xor
test
int
add
mov
lcall
int
cli
dec
sbb
stos
jne
jle
pop
cltd
sti
addr16
pop
aaa
jmp
push
adc
loop
imul
and
popa
adc
push
and
shlb
and
and
mov
dec
cmc
in
and
gs
jns
pop
sahf
stc
mov
cvtdq2ps
xchg
and
jg
mov
xor
btc
mov
out
xchg
sbb
and
sub
daa
xor
mov
sti
pushl
mov
insb
fldt
test
jecxz
mov
jl
jmp
cmp
shl
jbe
iret
test
add
pop
insl
mov
or
les
or
cmp
ret
fnstenv
subb
icebp
icebp
pop
xlat
nopl
and
pop
sbb
out
outsl
push
movaps
dec
cmpsb
jle
out
sti
stos
int3
loop
mov
and
sbb
dec
scas
mov
cltd
les
into
imul
mov
pop
sbbl
int
and
lret
xlat
pop
ja
aam
pop
pop
loope,pn
je
loope
xor
lcall
push
xlat
mulb
repnz
pop
xchg
aas
adc
xor
je
mov
movsl
mov
jg
mov
cmp
movsb
bound
mov
aam
mov
mov
jp
pop
jp
loopne
inc
ret
push
sbbl
jp
jg
jo
inc
pop
or
mov
push
push
pushl
mov
lods
or
push
enter
movsl
cltd
jbe
mov
dec
cmc
stos
rorb
inc
test
insb
sub
xchg
stos
mov
dec
dec
mov
mov
cltd
xchg
es
flds
cmp
xor
fcmovnb
fwait
inc
cwtl
scas
jo
sahf
sbb
or
fidivrs
in
lcall
cli
pop
fsubrs
sub
ja
out
dec
and
cmp
sti
insb
cltd
lock
sbb
add
or
pusha
test
xchg
inc
dec
mov
sbb
int3
pop
cmpsb
rcll
mov
rorl
push
cs
push
rcrl
dec
popa
adc
sub
in
out
popf
ss
push
and
mov
aad
jae
add
ficomps
repz
pop
dec
div
int
xchg
bswap
adc
mov
orl
dec
in
cmp
lock
pop
outsb
jbe
push
leave
out
loopne
mov
push
dec
shl
push
sbb
sar
mov
outsl
ret
nop
or
cmp
xor
jae
mov
lcall
jo
lret
mov
adc
add
sarl
add
adc
je
insl
mov
inc
add
int
js
nop
test
loope
mov
lea
xcrypt-ofb
cmpsl
push
es
es
xor
subl
roll
add
loop
adc
addr16
shl
inc
pop
sub
fsubrl
mov
jl
outsb
hlt
sarb
aas
sti
dec
fcoml
dec
test
in
fimull
push
or
jge
mov
sub
sub
inc
imul
mov
mov
enter
imul
loop
jno
inc
and
lret
popf
dec
lock
insb
xor
sbb
daa
decl
fnsave
adc
mov
add
jne
int
mov
pusha
sbb
sbb
jae
and
shll
sub
cmp
popa
push
jbe
mov
lcall
ja
cmp
ret
in
sub
popf
mov
push
lea
testl
shrb
stos
lahf
xor
pop
adc
dec
inc
testb
and
jbe
jmp
add
mov
aad
jns
push
stc
es
mov
adc
lods
jae
add
jl
adc
cmp
cltd
ja
sbb
xor
out
add
jbe
push
and
int
inc
inc
fcmovbe
jmp
lahf
pop
or
add
push
loop
pop
cmp
test
jmp
in
aad
rolb
inc
xchg
out
add
or
push
sub
adc
cmpsl
daa
mov
mov
rcrl
xchg
or
fsts
mov
icebp
fs
mov
pop
arpl
inc
pop
das
outsl
test
add
fstl
scas
int
push
pop
rclb
scas
mov
outsl
jbe
add
enter
mov
aaa
or
cmp
stos
repnz
std
ret
adc
xor
xor
inc
ja
lahf
repz
xchg
test
cli
popa
or
cmpsl
sbb
lahf
jl
out
xor
pop
adc
pushl
lods
xchg
add
ret
jns
pop
aas
and
dec
pop
dec
jl
out
mov
mov
lea
adc
fwait
or
cmpsb
frstor
lahf
inc
xchg
sbb
inc
xchg
xchg
mov
push
out
or
mov
push
lods
rorl
mov
push
xchg
scas
das
jle
xchg
push
call
pop
or
mov
rclb
pop
sbb
movsb
inc
xchg
aaa
jle
in
scas
or
xor
mov
dec
sub
jae
fidivl
pop
fwait
mov
cli
nop
sbb
flds
call
sbb
jns
mov
mov
xlat
mov
or
mov
xor
insb
push
ljmp
not
pushf
sub
outsl
stc
loope
lods
ss
pop
mov
imul
je
in
dec
push
cs
pop
add
sbb
xchg
leave
daa
jae
mov
jp
ficomps
fmuls
sahf
mov
jbe
cld
push
xor
notl
div
pop
movsl
test
std
repz
mov
rcl
insb
or
cs
inc
fnstenv
ja
pop
jle
leave
into
movsl
xchg
mov
cwtl
pusha
add
in
push
fidivl
jl
in
aaa
ss
adc
adc
ds
nop
xor
jns
push
mov
rcrb
in
mov
pop
fsubl
pusha
ficoml
and
leave
int3
push
in
lret
andl
xor
or
mov
add
and
and
data16
push
mov
jmp
xor
xchg
adc
push
jb
xchg
hlt
imulb
mov
or
jmp
mov
int
inc
mov
and
pop
xlat
lret
pop
push
adc
jle
insb
sbb
pop
cmp
jecxz
pop
es
icebp
outsb
xchg
and
sbb
xchg
insb
adc
das
sbb
cli
dec
idivl
xor
sub
fdivrl
sarb
rol
mov
and
loope
push
add
lods
xlat
sbb
push
arpl
aas
lret
sub
out
ffreep
std
pop
cmp
cmc
mov
mov
enter
loope
and
push
or
ret
out
mov
mov
dec
ljmp
addb
mov
mov
enter
les
fdivrl
imul
aam
sub
sub
cmp
stos
shlb
popa
adc
adc
rcl
mov
outsb
das
or
lods
js
sbb
imul
jle
je
movsl
push
lods
and
adc
es
or
jmp
xor
mov
sbb
repz
sbb
jle
icebp
and
test
cmp
lcall
cmpl
pop
insl
call
jb
loope
hlt
loope
mov
push
sbb
pop
loop
xchg
in
jle
or
movsb
xor
mov
scas
sbb
testb
dec
mov
movsb
dec
push
dec
imulb
cmp
fldcw
pop
out
sbb
das
insb
adc
and
dec
lods
clc
out
int
in
xor
xchg
adc
inc
adc
jae
lcall
mov
mov
jae
pop
add
pop
ds
clc
faddl
cmpl
shrb
xchg
loop
push
mov
aaa
mov
repnz
xchg
dec
jl
andl
out
and
fsubs
int
pusha
pusha
jmp
and
sub
cmpb
inc
adc
movsl
int
mov
insl
dec
mov
int3
iret
jb
fstl
ret
loope
enter
stos
adc
sahf
xor
fs
cltd
dec
push
adc
cmp
inc
dec
pop
in
pop
mov
iret
jns
int3
pop
into
mov
cmp
push
leave
add
inc
push
rcr
mov
xchg
test
jb
test
pop
test
sbb
pavgw
sbb
adc
xchg
xchg
sti
stc
jne
rcrl
cmp
dec
iret
clc
fwait
ja
ret
das
ss
or
xlat
lock
enter
pop
mov
cmc
xchg
fwait
ret
gs
xor
ds
cmp
fmull
pop
fcoms
call
dec
cwtl
fcoms
stos
sub
imul
inc
cmpsb
mov
dec
out
out
adc
lret
lods
inc
add
jmp
mov
scas
pusha
dec
icebp
and
add
lcall
neg
sub
sbb
push
int3
dec
outsl
addr16
push
fptan
xor
dec
imul
pop
push
cmp
push
ror
shr
insb
test
scas
aaa
cmc
popa
je
xchg
sbb
aam
in
stos
mov
xor
mov
and
sub
dec
lret
jg
add
iret
out
fsubl
ja
push
es
ret
mov
shlb
mov
mov
xchg
outsl
rcrb
lock
jae
dec
test
imul
jbe
shll
fs
dec
inc
setnp
sahf
xchg
mov
dec
xor
and
sub
lret
stos
addr16
outsb
icebp
stos
imul
rcr
cmpsl
mov
dec
sub
inc
and
pop
pop
adc
ljmp
mov
arpl
mov
adc
aas
sarl
jge
sarb
adc
mov
fbld
or
scas
cmp
cli
sub
xchg
jo
cmp
cld
in
pop
insl
aas
clc
sub
notb
negb
adc
push
add
mov
or
sbb
fwait
outsb
or
mov
clc
mov
add
xchg
mov
add
lods
into
pop
in
movsl
stos
jb
xchg
test
jo
imul
add
push
mov
loop
or
out
xchg
cmp
sbb
inc
add
cmp
inc
pop
repz
xor
cmp
int
mov
loopne
mov
jnp
dec
inc
lret
fadds
rcl
push
arpl
fadds
dec
lods
sbb
or
pop
int3
imul
lds
xor
sub
roll
cld
repnz
sub
enter
je
mov
cmp
dec
loopne
xorl
out
loope
add
lcall
cs
jne
mov
xchg
xlat
inc
iret
adc
lock
lods
pop
bound
das
adc
mov
push
fcmovb
insl
pop
jmp
std
sbb
mull
mov
das
add
or
pop
mov
jmp
orb
insb
lret
xor
dec
testb
push
add
int
outsl
out
int
mov
ss
mov
adc
stc
insl
mov
cltd
xchg
mov
mov
pushf
test
pusha
inc
pop
push
cltd
mov
jge
pop
cmpsl
mov
inc
xchg
es
fdivs
addr16
pop
cwtl
lcall
cmp
mov
in
mov
mov
fwait
push
inc
loop
shlb
sub
dec
adc
daa
mov
jne
lahf
incl
push
push
imul
mov
mov
test
sarl
lods
imul
outsb
mov
or
sti
mov
lods
push
or
mov
popa
pop
and
fists
or
aas
jnp
sbb
int3
mov
outsb
mov
ss
adc
inc
in
sarb
ret
je
sub
loope
and
mov
jo
cmp
iret
and
dec
add
push
xchg
in
mov
fisubrl
hlt
ds
fidivl
rcll
cmpsb
in
dec
js
xchg
mov
repz
dec
test
adc
mov
sbb
inc
xchg
xchg
into
dec
icebp
sbb
roll
lods
xor
cli
sti
inc
inc
repz
out
push
sarb
adcb
cmp
iret
cmp
test
lahf
xorl
je
es
out
push
jecxz
leave
loope
shll
pushf
je
ret
sbb
les
leave
cmp
xchg
lret
mov
sbb
ss
and
adc
mov
pop
xchg
int3
inc
jge
dec
pop
jnp
or
pop
shr
mov
movsb
cmpsb
ret
jp
and
push
bsr
adc
mov
rorl
jl
fsub
add
sbb
add
mov
pusha
inc
sub
aaa
add
inc
aam
mov
xor
push
mov
fwait
stos
xor
enter
pop
insb
popf
mov
lret
mov
sub
xor
ds
rorl
out
in
loopne
lret
imul
adc
push
sub
xor
xor
and
push
inc
es
dec
jne
mov
or
push
aaa
aas
cmp
mov
or
cmp
mov
ja
mov
gs
test
insb
jg
mov
jne
pop
or
call
xlat
int3
mov
xor
jo
test
pop
cltd
mov
call
jae
adc
outsb
psubusb
jo
and
add
fsub
or
clc
ljmp
setnp
mov
gs
sub
inc
cmp
sub
stos
ss
ss
dec
adc
or
mov
mov
sub
clc
jp
pop
dec
sub
push
aaa
jno
icebp
cmp
inc
push
fldcw
arpl
shlb
jmp
mov
jle
repz
push
or
aam
cmpsl
sub
add
cmp
jp
pop
and
call
mov
outsb
jnp
mov
add
icebp
pxor
int3
cmp
bndldx
push
and
jmp
clc
fs
pop
jbe
outsb
sub
dec
mov
xchg
push
mov
pop
xor
inc
inc
repnz
push
stc
mov
jns
pop
and
or
lret
clc
jae
mov
mov
adc
out
pop
cmpsb
lods
xchg
mov
sti
loop
push
pop
loope
out
stos
push
adc
sub
xor
push
mov
rcll
imull
movsb
loop
jae
jp
cwtl
pop
inc
push
or
dec
mov
add
aad
pushf
stc
loope
das
dec
and
jns
xchg
push
cmp
lea
mov
adc
xchg
jae
cltd
or
out
mov
lcall
scas
pop
pop
jns
fimull
movsb
adc
insl
ja
xchg
fcmove
cmp
cltd
dec
faddl
gs
xlat
xchg
movsb
pop
mov
sub
sbb
xlat
aaa
mov
mov
call
sbb
hlt
pop
addl
pop
out
aaa
sub
mov
xorb
pop
jl
int
sub
jbe
jb
enter
ret
insb
popf
lock
stos
test
xlat
mov
test
pop
dec
dec
in
pop
aas
mov
xchg
clc
push
mov
js
jne
cwtl
pop
rorl
xchg
and
mov
subl
cmpsb
mov
pop
jb
cmp
fwait
arpl
push
aam
popa
mov
cs
mov
sub
pop
pusha
sti
repz
or
repnz
das
aad
sbbl
mov
dec
std
mov
mov
or
jl
add
out
shl
push
into
push
mov
push
adc
jb
aam
jbe
sub
lahf
clc
push
xchg
in
pop
jp
das
lahf
enter
lcall
movl
adc
movsl
sbb
daa
add
sbb
aas
das
cld
cmp
jne
jle
cmc
jns
dec
mov
xchg
mov
test
sub
cmp
push
icebp
ja
jmp
fisttps
out
mov
mov
fisttpll
mov
test
xor
mov
js
push
cmp
sub
fs
pop
mov
das
mov
stc
inc
ss
shl
xchg
scas
stos
mov
push
mov
add
jg,pn
rcrb
sub
xor
in
test
inc
mov
jb
loop
mov
inc
jo
jl
psraw
and
sti
call
cmp
clc
jb
ds
cmp
cmpsl
cmp
sub
lea
scas
add
mov
lods
sbb
mov
jle
test
fwait
mov
or
pusha
adc
in
cwtl
inc
jbe
mov
lds
jge
or
int3
xor
icebp
and
add
je
add
sbb
pushf
ret
sbb
mov
add
jmp
add
sti
into
push
xor
mov
loop
sub
mov
jne
inc
inc
push
xor
mov
adc
pop
test
out
test
stos
lods
add
cld
adc
or
bound
or
popf
sub
in
push
cmpb
aaa
xchg
push
sti
cmpsb
or
xor
out
call
inc
cmp
push
pop
into
cmpsl
xchg
mov
jns
sub
mov
not
push
inc
aaa
jo
in
clc
add
mov
or
fidivrl
xchg
jle
dec
add
loop
out
dec
outsb
roll
repnz
bound
dec
pop
xchg
into
pop
mov
push
movl
mov
insb
inc
and
sub
dec
outsl
xchg
cmp
lret
sub
inc
mov
xchg
adc
fwait
mov
stos
ja
dec
int3
mov
xor
push
bound
mov
jb
imul
adc
repz
pop
into
mov
gs
xchg
fidivs
int3
inc
fsubr
fs
and
mov
fst
jb
adc
jecxz
int
les
push
ret
pop
xor
jns
xchg
insl
daa
push
jmp
fsubl
inc
pop
push
inc
mov
or
test
bound
call
test
sbb
es
jl
adc
stos
in
sahf
lods
imulb
cli
lock
in
mov
mov
xchg
xchg
ficoms
add
sbb
xor
fidivrl
or
jl
mov
xabort
mov
pop
sti
mov
repnz
les
popf
stos
or
aas
push
inc
push
call
lahf
out
xor
out
faddp
nop
inc
mov
dec
mov
cld
dec
loop
stos
sub
and
mov
lahf
jo
test
jnp
fistpl
sahf
xchg
add
popf
dec
sub
xor
mov
mov
clc
pop
inc
mov
dec
mov
out
cld
repz
iret
push
lret
aas
sbb
mov
mov
ret
and
iret
je
cmp
jl
adc
mov
bound
mov
rcll
add
xchg
jbe
and
nop
adc
xorb
aaa
fimuls
sbb
push
cmpsl
mov
in
cld
fidivrs
mov
outsl
jne
mov
jp
push
sahf
jae
pop
push
mov
fdivrs
imul
xor
lea
and
sbb
inc
jne
xor
scas
cmp
test
or
out
js
loop
jns
sub
outsb
mov
push
jnp
roll
cli
xchg
mov
mov
mov
pop
hlt
ds
lock
push
push
lret
fstpl
pushf
add
in
or
mov
mov
stos
xor
call
dec
into
push
or
xor
push
pop
test
outsl
and
dec
mov
mov
dec
mov
cwtl
gs
sti
mov
dec
cmpsb
sub
sub
push
movsl
jmp
pop
mov
dec
push
push
jmp
fistpl
cmpsb
jg
pop
dec
or
xchg
das
adc
mov
xchg
sarl
and
jae
out
es
inc
xchg
in
ror
fwait
jb
mov
pop
mov
lret
cmp
loop
push
adc
pop
ss
inc
js
out
out
jmp
add
dec
lods
cmp
mov
and
shrb
outsb
mov
stc
pop
push
cmp
subb
in
jns
outsb
push
lds
adc
sbb
inc
cmp
mov
roll
lds
arpl
lds
outsb
scas
inc
imul
cmpsb
pop
movsb
jae
ret
cmpsb
es
or
dec
mov
ljmp
mov
into
mov
lret
outsb
push
mov
out
subl
xor
cli
cmp
lret
mov
xchg
lea
jo
repnz
fs
bswap
sbb
pushf
fistpl
shlb
dec
inc
test
ja
xor
jb
fiadds
dec
into
loopne
arpl
dec
or
into
bound
and
mov
mov
outsb
sbb
sub
push
mov
das
and
shl
mov
mov
jne
out
and
and
nop
mov
adc
xor
dec
cmp
push
rorb
test
in
stos
loop
testl
cs
jmp
xor
js
mov
sbb
iret
arpl
dec
pop
setb
out
test
push
sti
dec
xchg
or
lods
in
test
jmp
jge
fnstsw
js
inc
pushf
mov
sbb
jbe
insb
nop
push
aad
ss
dec
test
icebp
out
inc
movsb
stos
add
and
mov
gs
cmpsb
sbb
cli
inc
xor
push
cli
adc
mul
outsl
popa
imul
mov
aam
mov
dec
xchg
cs
dec
cmc
int
inc
push
adc
sbb
scas
test
xchg
bound
dec
scas
mov
mov
inc
jl
jle
addr16
cmp
aam
xchg
push
call
repz
rcrl
loop
repz
ret
dec
lret
and
lods
jl
imul
or
testb
aam
adc
sbb
inc
movb
pop
je
fdivrs
mov
pop
test
inc
lcall
sbb
lock
mov
mov
iret
xor
push
insl
loopne
add
xlat
mov
push
loop
inc
imul
inc
shll
aaa
fisubs
cs
adc
sbb
inc
jle
shlb
mov
add
scas
rolb
test
mov
jae
rep
pushf
sbb
sbb
cmp
aaa
aaa
adc
rorl
mov
jns
mov
ss
inc
push
cmp
and
mov
repz
add
inc
test
mov
add
fs
xor
mov
hlt
xchg
push
dec
mov
push
popf
inc
sub
lahf
push
mov
lds
xchg
test
push
pop
push
mov
sbb
inc
xchg
adc
out
pop
inc
cli
xlat
inc
test
ss
test
aad
sti
inc
push
and
outsl
popf
mov
cmp
mov
das
inc
out
xor
xor
int3
mov
mov
mov
out
push
add
jecxz
xchg
int3
xor
outsb
jmp
cmpsl
inc
adc
pop
cmpsb
dec
mov
cmp
xor
or
xor
push
cmp
fstpl
lret
pop
adc
cmp
or
xor
mov
jnp
cmpl
hlt
fs
icebp
das
fwait
sbb
adc
mov
fnstcw
fiadds
pop
add
xchg
mov
cmp
shll
pop
stos
lret
pop
je
mov
loop
lea
das
push
xor
pop
cltd
dec
mov
sub
and
js
sub
scas
xchg
cmp
sub
or
jge
push
movb
cmc
dec
xchg
xor
test
push
aad
mov
repnz
lea
mov
jg
sahf
or
das
mov
int
cltd
jecxz
lea
cmp
pushf
push
mov
repz
sti
xor
aaa
cli
inc
testb
xchg
hlt
cmp
push
cmc
xor
mov
jl
stos
xor
add
xlat
xor
mul
call
sbbl
inc
dec
fstps
cwtl
mov
sti
clc
stos
jmp
movsb
pop
in
jmpw
into
in
call
subl
dec
inc
cltd
push
dec
cmpsb
mov
lods
mov
out
jl
and
jne
push
out
sbb
scas
out
and
adc
xchg
loope
popl
cmc
ljmp
jecxz
loopne
scas
inc
push
lods
lahf
sub
cli
jns
mov
pop
mov
out
out
sbb
and
shl
sbb
stc
imul
insb
push
sub
fwait
or
mov
or
jg
pop
into
dec
imul
into
mov
mov
fs
roll
adc
ds
rclb
or
mov
pop
pop
and
sbb
inc
lods
ret
rclb
lods
fisubl
push
push
sbbl
mov
push
xchg
jle
jg
jbe
movsl
enter
stos
pushl
push
sbb
je
notl
add
arpl
jecxz
notb
mov
xchg
mov
push
aad
xchg
sub
inc
mov
push
loope
lahf
jmp
push
shll
add
fs
and
mov
movsl
mov
and
inc
jge
repnz
aaa
mov
mov
xchg
mov
mov
jle
imul
xchg
nop
and
scas
pop
aad
adc
xchg
lea
push
dec
mov
test
fs
lods
lret
sbb
inc
push
mov
push
test
add
ds
or
lret
pop
clc
adc
cmp
leave
pushf
pop
outsb
pop
jp
lods
fidivs
and
adc
arpl
jo
xor
fsubrs
dec
dec
dec
mov
rol
test
xchg
jnp
loop
cmp
loopne
imull
repnz
cwtl
scas
jp
std
xchg
push
mov
cmpsl
in
mov
xchg
ljmp
pop
jl
cmp
jo
push
fmul
pusha
cld
loope
sbb
add
adc
cmp
popf
inc
fisubrs
int3
out
xor
pusha
and
adc
inc
pop
sar
aaa
int3
dec
cmp
ljmp
xor
hlt
add
add
lods
mov
dec
mov
mov
inc
je
jmp
adc
movsb
movsb
jg
aaa
xchg
or
mov
sub
fs
cmc
sbb
xchg
pop
cli
outsb
push
dec
sbb
out
sub
sbb
adc
xchg
stos
rorl
cmp
xchg
cmc
sti
leave
ja
lcall
add
dec
mov
push
jmp
outsl
lretw
inc
sub
push
adc
in
xor
js
sbbl
aaa
mov
adc
lret
subb
cmc
mov
sar
daa
sub
mov
sbb
and
adc
adc
cmp
sub
xor
mov
xor
dec
dec
jmp
outsb
xor
cli
xor
cld
and
stos
aas
add
fdecstp
jno
or
fildll
ljmp
pop
or
insl
inc
push
dec
mov
cmp
pop
lods
int3
out
popa
mov
jbe
xor
inc
jmp
mov
pop
popf
jne
bound
dec
movsb
test
mull
push
hlt
addb
jne
and
daa
imul
das
insl
or
add
cli
mov
xchg
sub
jg
push
xor
cli
sbb
pop
mov
push
hlt
or
push
ficoml
xor
xchg
fsubrs
in
shrl
xchg
adc
leave
cmpsl
xor
loopne
cmp
ror
add
das
sbb
and
ja
sub
xor
idivl
mov
sub
imul
cmpl
outsl
pop
jbe
mov
mov
jg
into
out
add
data16
cmc
jns
dec
sahf
insl
pop
jl
jmp
mov
jg
movsb
ret
mov
in
andl
aam
sbb
test
outsb
jge
mov
mov
aam
and
dec
stos
imul
push
lock
and
rorb
insl
mov
and
dec
or
jns
mov
xor
push
xchg
pop
outsb
dec
mov
push
sahf
cwtl
dec
or
pop
sti
jo
mov
jle
lods
mulb
ja
mov
and
push
fsts
jno
cs
mov
mov
ja
out
ret
or
leave
ret
out
push
cli
fld
icebp
xchg
mov
addl
add
mov
cmp
sbb
je
push
mov
lcall
fnsave
push
imul
imul
in
sbb
mov
xor
sarl
xor
push
xchg
enter
dec
jg
ror
out
xchg
push
push
inc
rcrb
mov
mov
lock
mov
xlat
cmpsb
push
push
imul
notb
xor
cmpsb
pushf
or
and
pushf
mov
xchg
scas
adc
push
mov
pushf
stc
sbb
out
xor
push
mov
push
push
jecxz
popa
outsb
ret
xor
pop
and
loop
cmp
dec
push
mov
aam
sbb
leave
insb
movsl
or
insb
mov
sub
fnstsw
dec
or
fcoms
and
dec
push
mov
fcmovne
mov
jns
dec
adc
sub
and
lcall
pop
outsb
inc
lods
sbb
or
sbb
xor
or
xor
jmp
movl
pop
ret
xor
mov
jne
pushf
and
mov
xor
mov
rcll
cmp
add
dec
fildl
sub
add
mov
out
mov
inc
pop
test
inc
jb
xor
filds
es
push
jae
sahf
jb
cmp
das
jns
jo
push
loope
pushf
push
mov
hlt
cmpsl
push
or
arpl
xlat
jno
sbb
addb
push
or
inc
aad
lock
mov
mov
jp
lods
ss
inc
js
dec
cwtl
andl
je
lea
xchg
and
enter
pop
and
mov
mov
test
ficoms
inc
aaa
iret
jnp
das
stos
lret
test
add
xor
mov
icebp
add
or
loopne
mov
negb
popf
add
push
mov
enter
adc
jle
orb
jns
xchg
lcall
push
mov
insl
mov
in
hlt
mov
cmpsb
test
sbb
lods
sbb
push
cmpsl
push
pushf
fisubs
int
outsl
push
and
push
mov
fildl
stc
repz
adcb
frstor
stc
iretw
jmp
mulb
test
cmp
daa
jmp
stos
mov
mov
cmpsl
jge
pop
mov
movb
add
imul
std
arpl
and
mov
lods
js
jp
push
int3
cmp
or
mull
repnz
int
jecxz
dec
mov
xchg
rorl
push
xchg
jl
pop
add
mov
xor
sub
cmp
and
incb
inc
push
add
dec
cmc
in
test
repz
jge
out
rcrb
hlt
xchg
or
outsb
or
xor
add
mov
adc
sbb
lret
out
es
dec
sbb
sahf
shl
out
fdivr
das
sbb
xchg
push
ds
jns
mov
mov
add
aas
mov
ja
fstp
mov
test
daa
aam
xchg
xor
test
mov
inc
negl
jno
push
jle
inc
adc
outsl
shll
mov
fstpt
loope
bound
xor
mov
subb
jge
adc
loop
dec
pop
out
adc
push
and
pop
int
test
adc
pop
jle
pop
mov
xor
mov
pop
imul
mov
insl
inc
lea
in
mov
jo
repnz
out
mov
popf
ret
mov
lret
xchg
pop
out
rcrb
inc
dec
sahf
out
inc
xlat
pushf
mov
push
shrb
push
std
iret
int
inc
mov
daa
sub
mov
lahf
sarl
push
xchg
fildll
popl
dec
test
std
lds
in
insl
outsl
xor
aad
leave
mulb
and
cmpsl
mov
cmp
and
jecxz
divl
jne
and
jle
push
jb
jmp
dec
push
adc
enter
cmp
in
js
xor
sbb
xchg
sbb
xorl
out
mov
push
xchg
and
loop
fcoms
ds
jmp
xchg
inc
pushf
loopne
cmpsb
push
xchg
mov
call
jbe
pushf
lods
cld
cwtl
mov
sbb
push
fistps
repnz
adc
add
ljmp
rorl
cmp
jbe
cmp
cltd
insb
lods
sub
insb
mov
lcall
not
jle
loop
sub
xchg
arpl
push
add
sbb
push
jecxz
dec
ffree
pop
sbb
mov
test
stc
ret
lret
out
cmp
cwtl
fwait
push
int3
nop
mov
fisubl
adc
sbb
push
mov
xor
testb
in
daa
xor
iret
movsb
mov
xchg
mov
mov
pop
insb
stc
insl
mov
call
dec
mov
std
adc
repz
bound
sbb
xchg
push
sub
lret
pop
cmp
xor
outsl
popw
cmp
test
jno
out
push
aad
pop
sub
cmpl
xchg
push
xchg
ss
push
inc
ret
xor
mov
call
jecxz
data16
andl
les
mov
in
rcll
popf
adc
jne
jno
sbb
mov
je
jne
je
cmp
cs
mov
in
aaa
cld
fidivrs
push
pop
sub
mov
pop
fistpll
xorb
cmpsl
dec
adc
xchg
lods
stos
mov
js
sti
mov
mov
insl
int
adc
jae
xchg
mov
repnz
dec
and
loop
insl
and
hlt
imul
mov
repnz
imul
call
cmp
inc
adc
sbb
sbb
ss
jbe
adc
cmp
lds
pushf
and
xor
push
cmp
das
fmull
std
push
add
or
cmpsl
in
inc
pop
mov
inc
rcrl
mov
dec
ljmp
pusha
adc
xchg
fisubrs
les
pop
jnp
dec
stos
ljmp
aam
xlat
mov
mov
pusha
ds
test
pop
xor
addl
aam
andb
lcall
xchg
and
jmp
push
cmp
out
push
loop
insb
ja
mov
sbb
or
cmp
sbb
out
xchg
xor
xlat
adc
lret
leave
ds
enter
out
mov
or
sbb
xchg
mov
dec
das
inc
jge
lock
adc
daa
fidivs
and
inc
xor
sbb
addr16
scas
repz
icebp
mov
outsl
adc
loopne
xor
add
inc
out
mov
pop
xchg
cmc
lahf
lahf
insb
and
adc
push
lds
insl
add
dec
pop
jecxz
xor
push
dec
inc
iret
mov
pop
ds
stc
jge
push
cmp
popa
rcrl
mov
enter
lods
jo
cmpsb
inc
push
ret
in
clc
in
lea
loopne
aad
add
mov
inc
loope
mov
jo
idivb
xor
aas
xchg
lahf
xchg
cmp
dec
dec
cmpsb
cmpsl
outsb
add
or
sub
and
xlat
out
mov
mov
stos
xlat
lock
add
push
mov
cmp
jle
xchg
sbb
xor
and
ffree
mov
jbe
xor
or
cmpsb
fwait
mov
mov
ret
xor
insb
or
aaa
mov
adc
ret
mov
sub
jb
xor
fdivrl
mov
cmp
lret
cmpsl
fwait
mulb
cmp
cli
pop
xchg
ret
adc
push
sbb
test
stos
icebp
std
or
mov
ja
test
push
ds
pop
fiadds
jbe
add
insb
hlt
dec
stos
out
or
les
mov
and
imul
dec
je
push
in
int3
or
push
jne
cmpsb
and
aas
pop
pop
inc
cmp
mov
xchg
jne
clc
sti
dec
mov
ret
and
mov
or
int3
inc
test
mov
and
lcall
rorb
stc
out
data16
loopne
iret
pop
inc
mov
aam
mov
cmp
push
inc
sub
leave
mov
ficoms
jbe
clc
xchg
cltd
adc
mull
int
jecxz
rcr
filds
sub
daa
sub
arpl
test
push
sbb
add
aam
loopne
out
aad
sbbl
push
cmpsl
push
pop
mov
stos
pop
subl
lea
jnp
cmp
inc
jle
loope
push
aad
lea
xchg
jmp
push
out
cmc
adc
sbb
sub
cmc
mov
in
pop
stos
sub
lock
insb
xchg
out
cltd
mov
cmpsl
leave
fisttps
sbb
sub
daa
ficomps
dec
je
pusha
mov
das
ficoms
repz
cmp
test
xor
mov
pop
mov
out
adc
cmp
pslld
dec
rcl
insl
cmp
stc
jnp
adc
or
aas
pop
in
adc
and
pushf
jno
cmc
lret
mov
les
jb
fmul
bound
sbb
mov
ss
iret
lret
xchg
ret
push
in
jo
cmpsl
xchg
data16
nop
mov
xchg
dec
in
out
pushf
jge
lods
sub
push
add
outsl
ret
roll
mov
xchg
lods
popf
or
xchg
xor
dec
jbe
push
jb
xchg
in
adc
cmp
imul
pop
cmc
out
enter
xchg
or
enter
int3
push
pusha
push
sub
jmp
adc
mov
je
and
dec
xchg
repnz
movsb
mov
test
dec
idivb
push
psadbw
adc
sub
xor
imul
mov
icebp
out
dec
mov
or
inc
stos
stc
and
and
popa
test
mov
lods
das
push
xchg
xchg
mov
push
xchg
fcmovnb
pop
mov
push
jne
or
pop
ljmp
inc
out
and
xchg
lock
mov
xor
ljmp
lret
jg
xlat
mov
scas
add
orb
add
ja
mov
push
push
push
loopne
xor
push
mov
add
daa
aad
push
popf
or
inc
outsb
or
subb
int
add
cmp
sbb
sub
out
jge
xor
push
add
es
jmp
les
test
xchg
insl
and
inc
cltd
and
dec
mov
dec
fcmovb
sbb
sbb
rorb
ds
adc
in
fldt
leave
mov
loope
pop
xchg
clc
dec
arpl
fs
and
std
fiaddl
lret
dec
cwtl
dec
cmpsl
je
cmpsl
or
fdivs
and
movsb
aam
mov
mov
and
dec
dec
mov
adc
out
data16
push
clc
pop
in
popa
call
xchg
jo
jbe
mov
ss
int3
leave
fidivrl
mov
andb
out
lock
pop
insl
outsl
push
jecxz
sbb
add
pop
cmp
xlat
dec
std
daa
jmp
fsub
or
sub
mov
or
xrelease
neg
outsl
fidivs
xor
dec
popa
xchg
aad
lahf
sbb
push
adc
lret
dec
mov
xchg
negb
or
das
push
xchg
lcall
rcr
mov
loope
out
sub
jle
mov
bound
cmc
imul
add
add
jg
rcr
xor
fdivrs
ret
cli
push
jmp
lock
cmp
ljmp
test
add
insl
push
cmpl
je
int
arpl
insl
mov
cmp
cmp
out
pushf
or
in
aam
clc
sbb
shl
mov
push
hlt
std
xor
stos
shl
fbld
pop
mov
ja
cmp
out
dec
mov
pop
inc
add
and
test
jle
jno
fnstcw
xchg
bsr
push
sbb
pop
les
adc
inc
push
dec
lds
add
jmp
mov
xlat
and
aad
and
leave
and
ds
in
pushf
xor
inc
push
mov
mov
lods
test
scas
adc
insb
out
jnp
out
cld
pop
jl
incl
sub
mov
cwtl
push
test
in
mov
aaa
mov
insb
sub
mov
xor
and
add
mov
icebp
xchg
push
popf
adcl
add
pop
fdiv
push
hlt
push
aad
pop
imul
pop
push
insb
mov
cmp
lods
push
add
test
mov
cmp
aad
hlt
cli
jg
cmp
int
add
and
sarb
dec
adc
popfw
or
stos
push
jge
insb
out
int3
test
adc
mov
out
ljmp
ret
pop
jbe
mov
pop
clc
loopne
mov
in
cmc
fnsave
pushf
repz
mov
inc
push
dec
and
shll
or
jnp
aam
cmc
cwtl
cmp
in
pop
fistl
sub
cmpb
sahf
cs
int
sub
aam
push
test
out
lcall
mov
int
push
mov
add
pop
add
pop
dec
sub
push
hlt
mov
sahf
xor
ja
stc
or
xchg
cwtl
pop
decl
in
addb
pop
and
sbb
scas
mov
das
jp
sti
popa
rep
pop
lahf
orb
jne
lods
or
and
jne
stos
sub
outsl
mov
cmp
jmp
xlat
bound
xor
jns
mov
mov
pushf
mov
xchg
ret
adc
aam
push
cmp
xchg
outsl
in
push
movsb
loope
mov
mov
jp
jge
shlb
mov
fs
sarb
mov
rclb
aam
or
cmpb
pop
push
sub
cmpsl
xor
fists
shll
sub
push
lcall
pushf
dec
xchg
pop
out
push
scas
cmp
addl
lods
xchg
push
sbb
mov
adc
das
leave
outsl
pop
stc
xchg
mov
cli
cltd
xchg
adc
cmp
sarb
fimuls
data16
push
pop
mov
call
add
jnp
mov
aaa
rorl
xor
jne
lods
outsl
or
mov
push
mov
jb
stos
and
xchg
test
and
loope
fisttps
dec
pop
cmp
jne
out
outsb
cmpsb
xor
cmpsb
jbe
sbb
rolb
xchg
pop
scas
inc
cmp
push
cs
jge
popa
int
call
push
xchg
xor
push
mov
jne
out
cld
jbe
cmp
add
dec
dec
mov
in
jmp
shll
inc
dec
lods
icebp
xchg
daa
lods
mov
in
test
fucomp
push
adc
xchg
scas
push
cs
or
mov
sub
mov
mov
dec
pushf
inc
adc
ret
ficoml
mov
xchg
xchg
mov
jle
aad
xchg
bound
pop
lret
push
lods
push
mov
xor
clc
cld
mov
push
pop
lods
xchg
enter
jb
mov
repz
mov
outsb
and
inc
push
insl
out
mov
ljmp
mov
add
mov
das
daa
pop
sbb
pushf
add
sub
ss
mov
loopne
push
sub
jno
push
lcall
aas
dec
mov
pusha
in
mov
sbb
lret
sub
addr16
sub
daa
sarb
cltd
mov
lods
push
in
lret
sbbl
arpl
insl
mov
cmpsl
dec
dec
ds
sar
push
xchg
sarl
test
inc
mov
jl
mov
adc
mov
adcl
lock
sbb
pop
mov
fistps
aam
lret
cmpsb
sbb
sbb
ds
fwait
sbb
add
mov
lods
outsl
loop
outsb
push
sub
les
mov
mov
int3
movsl
out
bound
std
imul
movsb
lods
jne
pop
mov
cltd
in
test
cwtl
orb
xchg
add
shll
mov
push
std
jg
mov
insl
and
mov
cs
dec
shlb
out
movsl
xor
xchg
add
dec
dec
cmpsl
shll
mov
loop
into
xor
ret
out
sbb
fs
and
data16
mov
pusha
mov
and
cmp
ja
std
sahf
int3
cmp
or
std
mov
sub
push
movsl
cs
xor
pop
mov
pop
mov
dec
fcoms
out
cmp
sti
sub
push
mov
rol
int3
negb
xchg
stc
mov
push
xchg
push
mov
mov
mov
shrl
lahf
scas
out
in
mov
ss
les
call
cmp
fnstenv
aaa
insb
pop
fidivrs
insb
aam
or
test
cmc
push
and
adc
iret
jecxz
dec
push
sti
jge
or
fnsave
lock
fildl
jg
pushf
push
sub
out
xchg
push
ja
xchg
cmp
ja
jo
pop
ja
fmull
dec
mov
insb
lcall
dec
xchg
jns
push
je
xor
and
out
pop
xchg
xor
pop
xor
mov
adcl
or
mov
orl
outsb
lock
sbb
scas
mov
std
dec
push
cmpsl
fimuls
stos
or
xlat
and
fdivrl
push
gs
das
aas
enter
out
cmp
add
cmc
fnstenv
sti
cmp
shlb
fldcw
xchg
jg
icebp
jecxz
push
push
in
pop
sti
mov
jge
mov
ret
outsl
dec
mov
add
shrl
call
neg
aam
decl
dec
lahf
pop
mov
gs
cmpsb
push
pusha
mov
jns
mov
mov
daa
mov
cs
sbb
inc
xchg
filds
add
add
ficompl
xor
add
scas
sub
pop
cmc
cli
sbb
stos
insl
and
popl
daa
lods
andb
inc
jp
loopne
call
push
pop
mov
mov
roll
mov
int
das
sbb
cmp
and
xchg
mov
inc
dec
and
and
mov
mov
adc
push
scas
pop
xchg
rolb
adc
fildl
xchg
push
cmp
mov
inc
ljmp
das
shll
outsl
xor
pop
push
pop
cmpsb
movsb
lahf
xor
jmp
ss
mov
call
adc
lahf
xlat
sub
aam
pop
out
xchg
inc
ret
xchg
sub
xor
subl
fstpt
jle
rol
and
jecxz
insb
mov
inc
sub
es
daa
adc
xor
das
xor
fildll
lea
inc
mov
xor
cmpsb
pop
stos
jp
and
test
mov
and
xchg
faddl
adc
insb
and
inc
mov
mov
inc
mov
add
inc
or
sbb
mov
test
ja
lock
cltd
mov
movl
aaa
mov
xchg
xchg
cmp
insb
jmp
rcr
ret
mov
mov
fcoml
mov
daa
icebp
adc
mov
clc
mov
test
mov
js
gs
mov
vmread
add
icebp
xlat
cmc
in
sbb
xchg
xor
mov
sub
and
test
jg
pop
xchg
out
pand
cmp
jecxz
mov
cmp
aad
jbe
test
outsl
push
in
jne
mov
dec
ljmp
add
or
pusha
dec
stc
jp
jnp
dec
insl
shll
jge
lock
jmp
sub
xchg
fsubs
ljmp
inc
std
pop
je
in
or
pop
outsb
es
jmp
shll
iret
jge
loope
push
stc
dec
push
shrl
cmp
loop
mov
stc
jns
out
cmp
sahf
out
sub
push
outsb
or
loope
aad
pop
inc
call
pop
imul
sahf
adc
test
xchg
negl
or
sub
cmpsl
push
stc
or
adc
out
sbb
movsb
pop
cmp
popa
mov
lods
or
mov
mov
aam
cmp
cltd
cwtl
mov
lock
shrb
cld
push
imul
sub
or
dec
mov
daa
nop
pop
jge
fwait
mov
faddl
mov
fs
xchg
nop
push
mov
mov
roll
sbb
or
sbbb
xor
gs
mov
push
rcr
shlb
pop
stos
sub
cld
adc
dec
enter
jne
push
cltd
fadds
aad
adc
imul
es
je
jge
out
mov
pop
dec
push
jo
jmp
scas
mov
iret
ret
cmp
mov
mov
ret
push
shl
cli
xor
mov
pop
es
add
sbb
outsb
jnp
adc
mov
sbb
mov
pop
pop
test
adc
iret
jb
xor
test
xchg
adc
test
mov
inc
dec
dec
scas
les
push
or
jae
dec
jp
sbb
popa
std
and
sub
outsb
jbe
xchg
mov
addr16
das
int3
pop
lea
ds
scas
mov
pushf
daa
dec
sahf
or
inc
shll
pushf
jle
cmp
stc
cmp
sub
pop
cmp
std
lods
pop
dec
mov
mov
and
xor
dec
jns
xor
mov
or
out
mov
add
ljmp
inc
loopne
mov
stos
lret
in
mov
mov
jl
mov
stos
fistpl
sbb
iret
cmp
shl
mov
fsubrl
jmp
fsubrl
jge
push
xchg
jnp
popa
ss
jge
ss
lret
xor
bound
or
mov
dec
dec
jl
xor
xor
pop
ljmp
sub
ds
push
jne
fisubs
cmc
les
jg
fidivs
and
ja
arpl
popa
xchg
das
mov
or
jg
insb
ficomps
adc
loopne
pop
mov
aaa
fstl
in
cmp
in
je
or
adc
xchg
pushf
sbb
inc
cmpsb
cmpsb
push
add
pop
mov
je
mov
pop
pop
jle
push
pop
cs
and
dec
in
jne
jne
cltd
daa
add
mov
lds
jns
fstl
xor
and
daa
cltd
icebp
pop
repnz
dec
mov
cmpsb
aam
aas
imul
lret
shrb
loope
in
sbb
dec
add
fucomip
push
mov
test
addr16
ret
jmp
jns
out
pushf
push
les
ret
inc
fisttpl
lret
pusha
inc
jp
inc
mov
push
in
repz
pusha
or
roll
hlt
repz
ret
call
sub
dec
fnsave
lods
aad
xlat
iret
fldl
stos
add
sub
add
inc
fs
scas
add
adc
addl
jp
push
imul
jl
push
ficoms
add
subb
push
ja
xchg
xchg
lahf
and
mov
sti
dec
fst
push
jae
push
scas
xchg
js
mov
out
xlat
mov
mov
addr16
addr16
xchg
js
and
and
jns
jns
lods
push
jg
enter
pop
rcrb
jae
mov
mov
int
xchg
push
in
xchg
xchg
adc
mov
mov
or
mov
push
cmc
mov
orb
sahf
add
addr16
out
and
sub
xchg
fadds
jge
sbb
inc
fistl
sub
jecxz
adc
pop
pop
test
arpl
pop
data16
push
sub
sub
mov
lea
lds
xlat
lock
out
xchg
sub
je
int
repnz
sbb
and
mov
xchg
pop
push
pop
mov
cld
inc
xchg
xor
fdiv
pushf
cs
push
adc
arpl
mov
je
mov
jp
gs
shrb
cs
xor
adc
ja
or
mov
movsb
je
sub
jp
add
push
lods
mov
stos
ret
inc
in
cmp
jge
sbb
adc
xchg
push
lea
in
in
fidivs
rorb
cmp
movsb
shll
push
xchg
fcoms
xor
stos
stos
adc
mov
sarl
pop
inc
daa
jecxz
mov
test
fstpt
pushf
enter
dec
xchg
shrl
flds
dec
iret
jg
dec
mov
lods
or
push
in
fwait
pusha
dec
and
hlt
mov
xlat
test
rcl
pop
push
pop
out
outsl
call
aas
ss
mov
bound
ret
pushf
or
xchg
mov
popa
adc
aaa
pop
lock
mov
mov
jl
test
aad
inc
xchg
lret
daa
xchg
sub
clc
jmp
loop
cmc
jne
sub
cmpsl
jge
dec
sub
mov
dec
mov
out
cmp
movsb
loop
inc
ljmp
jmp
out
out
cltd
movsl
adc
rorb
call
sbb
jge
mov
add
nop
cmp
cwtl
notb
sbb
sub
sub
dec
jae
orl
pop
fidivrs
fstpt
jb
das
in
xchg
iret
rolb
outsl
adc
and
push
popa
and
dec
pusha
in
or
jo
repnz
lea
sub
xchg
push
das
adc
xor
xchg
aas
mov
out
nop
nop
mov
enter
mov
mov
sti
arpl
ja,pt
push
fsubl
push
cmp
xor
out
into
pop
add
xor
mov
popa
fdivl
pop
mov
mov
fsubrp
inc
mov
inc
dec
pop
loopne
add
pop
mov
mov
setge
movsl
les
mov
mov
cli
aaa
xchg
jbe
add
imul
adc
sub
push
jg
das
fildl
out
rorb
mov
inc
add
sub
imul
pop
incb
loope
xor
push
jp
pop
ud0
in
out
fstpt
xor
shr
mov
inc
shld
mov
jl
sub
shll
xlat
push
daa
hlt
inc
push
mov
fisubl
orb
mov
xor
pop
iret
mov
pop
mov
adc
aam
push
int
test
jl
jg
mov
mov
inc
imul
lods
in
xor
fistpll
ret
scas
pop
push
sbb
push
sub
hlt
inc
cmc
cmp
in
jl
mov
jns
int3
inc
jmp
loopne
mov
hlt
cmp
in
in
mov
dec
add
cmpsl
loopne
scas
mov
cmp
pop
clc
cli
in
test
test
jg
ljmp
icebp
popf
jo
ljmp
sub
dec
incl
popf
or
pop
jae
das
mov
xor
mov
sbb
add
jg
mov
pop
test
cmp
mov
sub
adc
leave
or
sbb
or
ffreep
icebp
sti
test
push
aam
or
jmp
jae
mov
inc
popf
ljmp
dec
aaa
decb
aaa
out
insl
sti
xchg
mov
cli
and
decb
mov
dec
insb
sub
pop
repnz
fnstsw
pop
xchg
fbstp
ror
clc
or
repz
pusha
lds
cmp
loope
stos
popa
and
lock
jle
sbb
or
in
or
bnd
dec
mov
pop
js
pop
push
push
inc
jae
lret
jae
bound
into
scas
mov
add
jne
sbb
cmp
sahf
and
lahf
sub
cmp
lods
loop
push
gs
dec
rolb
popa
cmp
mov
popf
popf
cmp
dec
ds
or
push
mov
xor
dec
rsm
jl
mov
add
push
fisttpl
cmp
hlt
or
jp
add
xor
or
sahf
mov
xor
mov
cmp
cmp
out
push
mov
fimull
icebp
mov
pop
rsqrtps
xchg
lret
lea
mov
mov
pop
leave
dec
xchg
cmp
push
pushf
lcall
in
aas
outsb
dec
push
test
sub
mov
mov
mov
in
aaa
imul
out
pop
imul
negl
gs
ds
mov
cmp
in
xchg
stc
and
mov
mov
and
or
dec
shll
inc
fists
mov
pop
and
push
aaa
mov
inc
or
mov
cmp
add
out
or
mov
repz
xchg
outsb
aad
and
fildl
cs
push
out
mov
jbe
es
dec
rcr
into
mov
addr16
cli
arpl
mov
adc
mov
sahf
mov
cmp
movsb
inc
sti
jmp
test
push
imul
sub
ja
outsb
adc
inc
je
mov
cs
movsb
leave
fsub
cmp
sbb
popf
mov
xchg
ficoml
add
pushf
add
push
mov
pop
xchg
sbb
test
fcmovnbe
add
xchg
push
lods
or
into
inc
sub
stc
push
in
and
xchg
adc
or
lret
add
push
jo
aaa
arpl
out
out
hlt
lahf
pusha
jbe
xorl
xor
cmpsl
js
icebp
pop
xor
xor
scas
test
movsl
dec
sub
scas
loop
js
inc
xor
pop
sarl
jmp
xlat
mov
inc
cli
adc
sub
rol
das
stos
push
test
lcall
int
xchg
push
lret
dec
add
or
addr16
aas
sub
sub
addr16
push
and
jmp
mov
outsb
aam
add
ret
lcall
lahf
adc
test
lcall
in
movsb
inc
inc
cmpsl
pop
cmpb
fistps
rolb
push
pop
cld
aaa
shl
mov
or
es
cmpsb
fsub
les
les
mov
xchg
clc
cmp
mov
cmp
pop
xchg
xrelease
jbe
add
xchg
inc
je
mov
add
jge
xchg
loopne
adc
lahf
fldt
jo
outsl
and
adc
cmp
pop
int
dec
loopne
out
adc
js
or
stos
sbb
addr16
cmp
add
or
xlat
push
jbe
cmp
aaa
int3
aam
aaa
rcl
cld
pusha
outsb
icebp
mov
pop
sbb
jne
lcall
add
push
jno
fwait
decl
xchg
lock
andb
mov
xchg
pop
mov
and
cs
mov
orps
push
iret
lods
mov
arpl
fisttpl
rolb
or
nop
or
fnstsw
int3
cmp
mov
stos
jae
adc
or
push
xor
push
outsb
jle
mov
xor
js
shll
mov
aam
dec
aad
adc
adc
es
xchg
das
dec
pop
cmc
mov
pop
lea
sbb
das
aaa
enter
or
js
or
mov
loopne
cwtl
leave
cli
shlb
stos
sub
inc
push
fcmove
fsubr
push
je
repnz
jmp
jne
sub
stos
push
sub
call
mov
add
imul
imul
or
xor
xchg
sbb
mov
data16
mov
stos
dec
icebp
scas
icebp
sarl
lock
in
adc
mov
and
fisubrl
sub
and
push
xor
mov
shll
outsb
pop
repz
dec
fdivl
stos
out
into
pusha
loope
mov
pushf
cmpsb
mov
loop
leave
les
add
push
gs
orl
dec
jb
test
jns
fsubp
ficoms
fbld
out
addr16
out
imul
push
aaa
pop
jne
in
pop
imulb
and
mov
mov
inc
movsl
mov
in
cmp
pusha
shl
fnstenv
mov
movsb
popf
loope
jns
stos
imull
push
mov
iret
xchg
mov
inc
xchg
sbb
sbbl
lock
mov
lds
mov
jae
push
into
ljmp
fists
fadds
std
frstor
hlt
cltd
mov
cmp
jp
and
and
xlat
je
cmpsb
iret
fistps
aad
add
cmpsb
sub
xchg
sub
aas
jg
stos
int3
push
pop
and
aad
sbb
into
mov
dec
das
dec
or
or
xlat
sbb
cli
stos
push
mov
out
or
pop
dec
sarb
lods
adc
adc
xor
pop
nop
test
cmpsl
call
cld
pop
dec
jle
jl
nop
fs
mov
shrl
jbe
out
adc
enter
aam
je
scas
cmp
mov
rorb
add
pushf
xchg
xor
adc
data16
out
mov
aas
sub
lock
std
outsl
push
adc
mov
push
mov
jle
in
adc
push
push
sbb
fisttps
adc
adc
mov
dec
xor
push
loopne
cli
adc
dec
add
testb
popf
mov
int
cmc
cmp
aas
fcomi
lret
out
sbb
xchg
jbe
cmp
fcomip
xchg
repz
jg
mov
out
sbb
jnp
gs
mov
cmc
mov
mov
lahf
jmp
adc
add
sub
jmp
and
mov
icebp
fistl
cmp
dec
xchg
lods
or
mov
dec
jo
cvtpi2ps
gs
or
popf
mov
xchg
addr16
ja
dec
aaa
das
shlb
test
fcomps
jo
add
aaa
ss
popa
fwait
adc
pop
popa
xor
dec
outsb
jl
adc
ficompl
mov
insb
loopne
pop
xchg
adc
push
jns
and
xchg
xchg
and
stos
mov
mov
addps
xor
nop
mov
scas
and
push
inc
xchg
les
jg
inc
or
jle
mov
js
fdivl
or
addr16
push
mov
jecxz
les
inc
cmp
push
pop
push
enter
jl
out
in
push
dec
xor
mov
call
mov
xor
xor
fs
cmpsb
mov
mov
xchg
inc
loop
or
pop
punpckldq
mov
mov
cmp
fnstsw
gs
leave
push
xchg
jge
in
rcl
fwait
scas
ret
inc
add
xor
sahf
lods
push
je
loop
lds
data16
daa
fbstp
jle
ret
repz
jmp
cs
push
in
mov
mov
int
std
insb
mov
out
sbb
retw
sbb
sbb
mov
inc
mov
inc
lret
scas
lahf
sbb
daa
dec
mov
jecxz
icebp
mov
mov
mov
sub
mov
jge,pt
icebp
scas
pushf
lcall
push
jo
push
imul
jl
xlat
shlb
icebp
mov
fstpl
pop
movsl
jmp
push
out
pushf
push
and
sub
stos
sti
sub
fabs
jnp
push
ds
sub
icebp
adc
jmp
sahf
shll
test
jb
sbb
xor
inc
hlt
shll
stos
iret
push
or
mov
sti
loope
sbb
push
add
push
in
add
sub
lods
dec
mov
out
cs
jbe
mov
ljmp
push
popa
mov
jge
gs
pop
shrl
sar
dec
cmp
or
inc
fwait
xchg
lcall
mov
aad
mov
and
dec
dec
add
xorl
aaa
adc
inc
dec
stc
push
jle
mov
push
pusha
rcrb
ret
ss
hlt
outsb
iret
fstps
fimuls
popf
add
sub
and
insl
clc
repnz
push
jp
push
push
dec
mov
xor
jae
add
mov
sahf
dec
inc
dec
shll
imul
imul
adc
jp
jne
outsl
mov
aam
and
mov
xchg
inc
inc
ss
mov
cwtl
ja
jmp
push
outsb
mov
sbb
jl
add
pop
ljmp
loope
inc
iret
aaa
or
dec
push
cmp
test
push
jle
test
cltd
bts
add
hlt
fidivrl
int3
scas
dec
aam
mov
pop
mov
adc
adc
mov
xchg
movsl
adc
ss
stos
leavew
lret
outsb
rclb
mov
fildll
xor
popf
xor
inc
xchg
ljmp
das
inc
data16
daa
jmp
jo
xor
popf
sbb
or
add
mov
outsb
les
mov
dec
popa
fucomip
mov
sub
in
pop
jge
xor
add
popf
xor
xor
scas
xorl
in
pushf
mov
lods
mov
daa
sbb
adc
adc
jns
rclb
fnsave
inc
mov
pop
jg
out
sbb
cmp
mov
mov
push
mov
or
hlt
and
and
xchg
mov
int
pop
rcl
repnz
push
mov
imul
or
mov
dec
int3
jbe
cli
pop
stos
inc
add
mov
ret
leave
cmp
in
add
lret
add
cmp
inc
scas
jbe
pop
or
outsb
lods
mov
data16
test
xor
fiaddl
imul
push
adc
cli
scas
sub
rcrb
lret
out
popa
pop
sub
mov
mov
aaa
outsl
addr16
les
sbb
adc
and
clc
rcrb
push
repz
gs
push
cmp
add
aam
mov
adc
stc
aam
pop
icebp
jno
jo
jns
sub
stos
shl
das
arpl
and
imul
in
test
inc
stos
daa
movsb
jg
ljmp
loopne,pt
dec
faddp
out
pop
les
fs
push
pop
pop
xor
jl
clc
jmp
push
mov
dec
mov
sarb
stos
dec
out
shlb
outsl
add
jae
or
push
sahf
aam
pop
add
in
pop
jmp
lret
call
mov
and
or
sbb
cmp
pop
dec
fmuls
fldenv
popa
in
mov
xor
aas
dec
enter
rcl
sar
cmpsb
cmp
and
dec
nop
call
movsl
sub
jb
lret
and
pushf
push
mov
mov
dec
jmp
call
fsubrl
imul
ljmp
dec
out
mov
xor
lods
cmpb
arpl
sub
mov
cmp
cmp
xchg
stc
repnz
or
sbb
inc
lret
rorl
inc
or
dec
into
js
mov
mov
sbb
shlb
or
int3
pushf
int
adc
insl
mov
into
xlat
inc
mov
adc
jg
stc
sub
enter
cmp
out
mov
mov
cmp
dec
fstpl
outsb
fwait
fwait
int3
popf
and
aad
enter
test
imul
dec
sti
xchg
repnz
pushf
es
mov
pop
sti
andb
cmc
xor
mov
test
ret
mov
cmp
pop
xchg
stc
mov
mov
gs
rorl
dec
inc
cmc
xor
popl
cli
xchg
lods
inc
jmp
dec
push
cmp
jmp
inc
sbb
jnp
fsubrl
sahf
xchg
and
jbe
lods
pop
or
sub
js
mov
sbb
and
xor
mov
mov
dec
into
ret
rorb
and
lea
outsb
sbb
push
and
lahf
aad
jle
jno
dec
fs
stos
lods
or
or
cmp
push
mov
or
jg
mov
inc
mov
clc
mov
test
xchg
pop
lret
dec
lcall
lret
jns
xchg
stos
scas
dec
testb
shl
inc
ds
mov
pop
dec
mov
fbstp
movsb
test
hlt
les
lahf
repz
popa
mov
ret
fcmovnb
faddl
mov
sbb
fidivrl
add
leave
sbb
adc
push
shlb
scas
xchg
hlt
mov
fsub
rcl
xor
and
out
scas
mov
xchg
and
movsb
imul
mov
or
leave
sbb
push
cmpsl
jne
jb
add
fwait
ss
or
sbb
sti
faddl
test
sub
and
fcomps
inc
xchg
inc
adc
idivb
insb
and
fildll
rcll
sub
mov
inc
sub
icebp
push
pop
mov
pop
in
push
leave
arpl
mov
test
mov
cwtl
ds
out
mov
sub
mov
or
test
mov
pop
push
inc
xchg
or
fldt
nop
ret
mov
add
adc
mov
cwtl
or
or
les
jbe
mov
pop
lcall
lods
xor
dec
adc
nop
inc
fisttpll
mov
jl
sub
xor
les
sub
fdivrs
push
jp
mov
xlat
or
adcb
cmp
sub
les
push
loope
sub
daa
int3
xchg
mov
add
rorl
inc
loope
jg
push
shrl
mov
das
data16
jnp
fwait
sbb
or
mov
push
test
and
and
sbb
lds
dec
mov
adc
lds
sbb
sbb
dec
in
or
popa
push
imul
cmp
fucomi
xor
repnz
loope
cmp
push
sti
jne
sbbl
sbb
mov
adc
adc
mov
mov
xor
test
xlat
jne
sub
popf
stos
out
cs
movsb
cmp
xchg
scas
iret
pop
loopne
inc
push
lods
mov
adc
lods
lock
cmpsl
loop,pn
in
hlt
cld
repz
fists
popa
sub
or
icebp
aaa
mov
push
cmp
inc
lret
in
pop
pop
fimuls
jne
xor
or
mov
lret
jno
push
jmp
mov
scas
jge
cmp
lcall
jo
mov
push
into
jae
pop
and
or
xor
repnz
mov
xor
or
pop
es
cmp
sbb
jnp
pop
xchg
pop
fsubr
and
lret
fcomp
popa
push
mov
addr16
pop
out
and
or
fwait
es
or
jo
enter
mov
push
out
in
add
in
jge
and
dec
call
test
mov
aad
jb
imul
push
pop
lahf
push
pushf
sbb
xor
jmp
xchg
shlb
inc
les
cwtl
out
jmp
loopne
test
mov
mov
loope
scas
stos
push
mov
pop
xor
jle
out
pop
or
or
adc
xchg
sub
dec
adc
inc
inc
jmp
push
push
insb
imul
stos
sbb
pop
out
sbb
pop
cmpsb
stc
mov
sub
test
je
rcll
bndstx
popa
fsub
mov
gs
xor
outsl
or
push
xchg
in
stos
push
ja
sub
loop
cld
sub
jbe
add
pop
pop
dec
jecxz
push
rorb
pop
insl
daa
movsl
and
fimull
pop
rorb
fdivl
pushf
xor
mov
inc
out
add
xor
and
test
pusha
cmpsl
adc
test
arpl
adc
out
pop
aas
ja
mov
in
aaa
popa
js
ja
subb
sub
mov
sbb
push
fs
push
mov
dec
imul
cmpsb
std
dec
jb
ljmp
ret
outsb
xchg
aas
ja
push
mov
and
call
je
mov
jb
les
sbb
call
punpckldq
test
inc
inc
leave
cltd
push
jb
rolb
xor
fiaddl
stc
jb
scas
or
mov
loop
xchg
lea
or
sub
push
repnz
dec
lds
pop
enter
dec
stos
test
push
adc
and
fadds
scas
mov
and
push
shl
lcall
pop
xchg
lret
mov
add
cltd
into
cltd
lcall
test
fs
mov
mov
jo
int3
mov
or
je
pop
cwtl
scas
sub
faddl
adc
cld
ljmp
je
xor
xchg
mov
arpl
addr16
pop
loop
adc
fstpl
stos
fldenv
adc
mov
mov
jmp
and
inc
jb
jns
pop
imul
and
lret
jbe
inc
xchg
xchg
xorl
push
pushf
das
dec
mov
dec
mov
jnp
out
lods
fucompp
mov
mov
pusha
test
pop
lret
adc
xor
mov
popf
insb
or
pop
mov
inc
dec
lock
sbb
mov
fnstcw
xchg
xchg
bound
cli
sub
dec
mov
mov
or
imul
out
jl
mov
add
fnstsw
mov
in
xchg
inc
fldenv
jmp
sub
dec
stc
and
jl
sar
push
adc
sub
into
mov
push
xchg
pusha
popa
in
mov
in
into
mov
std
loop
sub
rcrb
clc
mov
push
loope
pop
mov
xchg
sahf
sbb
cmp
test
cltd
sbb
gs
bound
push
mov
lods
shrb
fiadds
xor
cmovno
in
rep
cmpsb
movsl
scas
xchg
stc
addb
stc
mov
mov
pushf
and
shll
fistps
xor
fnstcw
loopne
fcom
mov
fs
push
sub
lods
out
mov
xor
push
sbb
scas
in
cmpsl
inc
inc
sbb
mov
in
dec
ljmp
aaa
cltd
mov
inc
das
jg
xor
sqrtps
loope
xchg
push
cmp
and
mov
mov
aad
imul
int
mov
push
cmp
cmp
mov
push
out
les
cmp
rclb
les
scas
adc
xchg
ret
dec
addb
scas
cmc
ljmp
xor
push
in
andb
enter
fisttpl
scas
mov
sbb
sub
mov
sbb
out
ja
in
sub
addl
fidivrl
shll
or
lea
sbb
jo
push
jno
mov
push
cmp
inc
fcmovne
inc
lahf
hlt
sub
les
mov
adc
xchg
in
dec
xor
dec
cmp
int3
stc
mov
fisubrs
mov
or
loopne
es
xorl
pop
out
or
pop
mov
dec
mov
aad
xchg
test
subb
adc
pop
xorl
mov
inc
push
lcall
push
repnz
aam
mov
lahf
cli
iret
fwait
add
push
adc
stos
fcmovu
jge
push
or
mov
psubq
cld
or
pop
lcall
ret
sbb
repz
sti
enter
mov
or
cmp
inc
or
daa
cmpsb
sbb
fwait
xor
mov
push
aas
insb
pop
push
xchg
test
dec
push
imul
mov
push
lea
adc
lds
mov
movsb
je
push
mov
arpl
je
inc
adc
gs
push
cmpsl
mov
ret
cmp
div
inc
cld
adc
loop
aaa
add
shlb
cmp
leave
and
jle
popa
sbb
sbb
inc
outsl
mov
add
dec
test
inc
sub
andl
out
mov
push
aas
daa
dec
mov
rorb
ret
push
or
inc
cmp
test
mov
cwtl
mov
inc
pusha
cmc
xor
xchg
mov
push
pop
movsl
mov
or
stos
enter
mov
xor
inc
xor
cmpsl
das
cmp
add
xchg
aad
pop
add
mov
mov
mov
gs
jns
test
cmp
adc
sub
lret
les
jnp
imul
push
test
add
cmp
add
inc
ljmp
outsb
arpl
sub
or
test
retw
pusha
pop
shll
dec
pop
cwtl
adc
loope
jle
jge
pop
jae
and
repz
es
js
fstps
ljmp
repz
pop
pop
in
mov
mov
shll
popa
movsb
fdivrp
test
popf
cwtl
inc
mov
int3
jge
xor
adc
pusha
insb
imul
aas
insl
push
mov
xchg
push
jnp
jnp
arpl
aas
sub
push
sbb
mov
jb
push
cmc
and
test
mov
mov
leave
cmp
sub
jecxz
xchg
test
sub
mov
lock
je
test
loop
xor
xchg
lcall
imul
sbb
add
dec
xchg
jle
or
enter
sub
dec
mov
inc
clc
mov
aas
gs
jne
sbb
dec
int
ror
loopne
leave
mov
lahf
test
fadds
lea
lret
push
pop
movsl
test
mov
xchg
ljmp
inc
fnstsw
lret
push
adc
or
repnz
outsb
mov
enter
sub
fistl
js
pop
mov
push
shrl
loope
es
xchg
stos
xorl
out
aam
lret
aad
cwtl
cmc
mov
inc
ss
add
and
mov
pusha
mov
ds
push
loopne
pinsrw
and
mov
stc
sbb
push
lods
add
aaa
push
into
dec
sbb
pusha
lods
xchg
dec
push
dec
adc
leave
cmp
dec
dec
cltd
jo
jb
cmp
mov
cmp
mov
icebp
sub
repz
cmp
mov
and
in
lret
imul
mov
mov
movsb
pop
sub
sbbb
cmp
mov
paddw
shll
xchg
and
xor
int
mov
popa
jns
adc
pushf
aad
dec
std
cmp
jbe
dec
lds
and
cmp
ds
mov
add
jbe
adc
ret
hlt
jmp
add
pop
pop
adcb
push
fidivs
insl
jp
mov
mov
mov
sbb
cmc
or
or
adc
mov
push
jo
pop
pop
cltd
loopne
xchg
adc
dec
xlat
pop
mov
sbb
fiadds
lds
jg
xchg
das
mov
and
mov
bound
in
mov
lods
push
mov
fisttpll
std
fsubs
aaa
mov
push
aas
jae
jne
cmc
out
cld
icebp
cmp
out
lods
xchg
jmp
push
pop
mov
inc
js
or
imul
scas
jne
pop
sub
int3
sbb
in
jmp
and
dec
imul
mov
or
stos
sub
sbb
or
mov
adc
push
lods
pop
dec
and
fcomip
addr16
sub
lods
pop
std
fildl
push
sti
fs
leave
push
call
inc
lret
xchg
jb
push
jbe
xchg
push
xchg
sub
fs
jae
mov
mov
lret
std
pop
into
in
xor
sbb
gs
js
jmp
flds
and
frstor
or
cwtl
cmpsb
jb
mov
or
sbb
out
add
sahf
stos
push
iret
mov
dec
ja
add
iret
in
mov
fiadds
fcmovbe
rclb
ds
sti
es
adc
or
ret
iret
push
ret
aas
xor
pop
shll
test
push
adc
or
jb
test
loop
cmp
add
shrb
adc
mov
or
mov
jg
add
mov
scas
test
sti
sub
mov
das
xor
mov
sahf
fcmovnbe
add
mov
cmpsb
out
xor
cmpsb
mov
addl
push
sub
out
dec
lods
and
add
pushf
out
xor
test
push
fimull
xor
mov
mov
or
cmpsb
adc
fbld
add
jnp
xchg
ret
pop
int
das
loope
cmp
pop
pop
push
mov
jecxz
dec
je
repnz
fists
dec
pop
notb
incb
cmp
fstps
cltd
aas
rcr
xor
mov
cli
push
imul
iret
pop
mov
push
rol
xor
cmc
dec
dec
add
sub
fmul
lret
push
sub
outsb
int
jae
cmp
cmp
xchg
adc
ret
into
mov
pushf
int
push
mov
incb
lock
lcall
sub
adc
mov
xor
sbb
mov
add
notl
lods
jp
fisubs
arpl
fisttpl
cmp
mov
fs
std
out
xchg
sbb
and
addr16
cmc
arpl
std
subl
call
push
or
ss
out
xchg
add
hlt
fld1
push
push
cmpsl
ss
inc
xor
mov
inc
fildll
sarb
ret
call
cmp
or
adc
rcll
lea
js
cmp
push
mov
cld
aaa
push
int
push
aaa
clc
and
outsl
lods
xchg
cmp
or
addl
mov
cmp
and
mov
jno
mov
fwait
xlat
dec
adc
adcb
cmp
andl
daa
xlat
adcl
jp
or
dec
ret
jno
pop
and
orb
sahf
or
sub
sbb
lahf
push
data16
cmp
sub
dec
inc
outsl
adc
fbld
scas
add
xor
test
push
xor
cld
pop
inc
jg
sub
jp
xchg
sub
dec
js
and
sub
popa
fdivrl
hlt
jle
mov
mov
xor
test
xor
inc
fs
xchg
cmc
inc
dec
scas
push
mov
out
sahf
and
cs
add
add
addb
add
cmp
inc
iret
xor
dec
addr16
out
fnsave
data16
lods
addr16
aaa
lret
cmp
push
sub
pushf
mov
testl
stc
insl
dec
dec
adc
inc
push
xor
lcall
imul
lret
push
fistl
mov
shr
sub
mov
fbld
in
mov
push
mov
fs
leave
into
dec
fidivrl
inc
in
jp
nop
das
lock
in
cmp
cmp
lods
cmp
push
ficoms
mov
dec
mov
jecxz
push
lret
bound
push
jno
cmpsl
dec
add
sahf
mov
jae
xchg
or
adc
stos
mov
pop
js
test
lods
push
addr16
pop
push
cmp
jno
dec
pop
sbb
jg
sahf
or
negb
inc
pop
insb
popf
cs
mov
int3
movsl
xchg
aad
xor
push
mov
pop
mov
sbb
mov
push
jno
aad
mov
rolb
adc
cmpsl
xchg
jae
jmp
mov
add
jg
cmp
out
adc
and
int
fwait
mov
xchg
fildl
enter
lahf
lds
in
mov
inc
cli
sbbl
sbbb
jb
je
and
xor
icebp
push
daa
jb
xor
in
in
fwait
add
jecxz
xchg
in
mov
leave
cld
ror
hlt
hlt
add
iret
mov
ljmp
js
push
incl
js
gs
xchg
sub
xlat
cmp
adc
lahf
add
push
inc
dec
cmpsb
cld
mov
lret
add
cmc
sarl
imul
cltd
sahf
outsb
mov
mov
xchg
push
loop
das
popf
lds
loop
ror
imul
mov
imul
aaa
cmp
jo
imul
xchg
jp
or
dec
cmp
mov
lods
ficomps
mov
xchg
fbld
lea
mov
int3
mov
or
or
ss
iret
pushf
pop
outsl
pop
jno
jp
xchg
sub
stos
imul
xchg
pusha
gs
and
xchg
or
or
incl
mov
sbb
adc
shlb
xchg
shll
cmp
push
inc
mov
daa
add
and
pop
shlb
and
dec
movsb
pop
cmp
imul
xchg
fcmovnbe
jno
mov
cmpsb
lods
inc
std
in
xchg
or
insl
into
mov
adcb
roll
mov
cmp
mov
and
scas
in
in
jne
insl
dec
push
cld
sbb
cltd
sub
arpl
jmp
mov
and
mov
add
add
add
xlat
in
sti
sub
or
fldcw
fcompl
or
das
sarb
xor
pushf
imul
das
adc
dec
fcmovu
outsl
fcomps
sbb
mov
add
mov
push
pop
fsub
sub
push
add
and
cmp
jno
lcall
add
jmp
test
mov
in
adc
mov
cmc
mov
scas
xchg
jo
rcl
stos
xchg
jns
andl
out
xor
mov
daa
lods
ret
repz
pop
clts
inc
or
push
icebp
scas
mov
and
subl
mov
shrb
adc
jmp
lock
sahf
or
cltd
xlat
sub
push
mov
mov
sub
add
mov
xchg
jbe
ss
jecxz
mov
std
xchg
outsl
lcall
inc
inc
out
lcall
out
mov
mov
icebp
out
xor
and
movsl
dec
cmp
and
ret
out
xor
jle
mov
rcr
sbb
arpl
fiadds
outsb
add
dec
inc
push
test
jns
js
mov
xor
int
sahf
or
xor
in
or
dec
in
push
push
push
sbb
data16
sub
leave
xchg
aad
or
jge
rcrl
ljmp
push
push
jnp
lods
inc
aas
jno
push
bound
mov
fnstsw
cwtl
sub
loope
jl
sti
cmpl
mov
sbb
cwtl
mov
arpl
add
jg
ljmp
xor
pusha
nop
dec
fsubrl
pushf
cltd
clc
cmp
sub
adc
movsl
orb
repnz
xchg
cmp
enter
shrb
imul
mov
jl
xlat
mov
mov
push
pusha
add
or
jmp
cmp
movsb
ljmp
vpaddd
and
int3
hlt
mov
pop
push
push
scas
repnz
insb
xchg
push
xchg
fstpt
lahf
mov
das
mov
add
sbb
adc
jno
inc
jo
mov
leave
mov
int
mov
sub
popa
xchg
mov
dec
mov
ljmp
jmp
adc
and
cmp
or
test
rolb
xchg
mov
mov
pop
repz
out
jp
inc
sbb
mov
add
lea
test
xchg
in
or
push
insb
imul
sbb
out
jb
into
jmp
and
mov
mov
push
cmp
nop
bound
sub
popa
jo
insl
or
outsl
push
popf
push
adc
stc
cmp
add
in
sub
data16
add
inc
stos
xchg
daa
clc
jno
xor
insb
fisubs
icebp
add
inc
pop
pop
push
shrl
mov
repnz
adc
mov
xlat
and
mov
push
xor
orl
movsb
cmp
stos
xchg
add
cld
lods
lods
jecxz
sbb
pop
inc
sub
pop
dec
mov
rolb
out
dec
pop
and
jns
rcrb
sbb
mov
push
mov
cmpsb
aam
and
fs
decl
mov
arpl
out
cld
icebp
xor
lcall
push
aas
sub
mov
dec
sbb
call
mov
fwait
mov
or
andb
lret
cmp
xchg
jbe
xchg
jae
dec
mov
orl
mov
mov
mov
dec
ret
lock
aaa
pop
sbb
xchg
pop
push
iret
xchg
xor
mov
adc
andl
ja
mov
jecxz
hlt
sub
mov
enter
ret
ljmp
mov
sbb
sbb
int
pop
je
mov
in
cmp
in
rcrb
and
adc
xor
xchg
sahf
fadd
cld
cmp
add
fnstcw
and
imulb
jno
inc
andl
and
insl
mulb
loop
jp
in
fs
or
mov
xor
fidivrl
leave
loop
lahf
mov
in
inc
and
clc
pop
fmul
jb
sbb
sahf
add
xor
sbb
out
dec
dec
jmp
test
in
sub
mov
das
es
das
sbb
dec
fcoms
xchg
add
or
sar
je
mov
xor
jp
xchg
loopne
and
jmp
lcall
repz
inc
cmc
fisubl
lock
push
or
jmp
std
js
ret
int3
scas
out
stos
lcall
dec
repnz
pop
sbb
aaa
out
ret
push
sub
data16
call
adc
mov
dec
cmp
je
hlt
test
or
jp
dec
push
sbb
add
pop
ljmp
cmpsl
lret
push
jne
inc
cmp
dec
dec
std
es
addr16
fisttpll
add
fcomps
cwtl
adc
jg
mov
lcall
or
jmp
out
xor
in
xchg
xchg
or
out
xor
cmp
shl
and
sub
cltd
call
cs
xchg
pushf
push
int3
ficoms
ret
mov
movsb
popl
lret
fcoml
adc
mov
or
bound
mov
testb
inc
daa
aaa
and
adc
mov
add
xchg
jnp
adc
insb
inc
sub
andps
sbb
jno
js
and
xor
cld
push
jne
mov
push
lahf
or
in
clc
repz
inc
jge
lahf
sahf
jno
mov
ja
or
call
xor
add
pop
das
dec
inc
push
mov
cmp
loop
cmp
ds
flds
je
xor
xor
dec
or
test
packuswb
sti
out
loopne
sahf
pushf
cmpl
aam
rcrb
jg
ret
pop
xchg
notl
jae
push
leave
addr16
sub
and
lahf
sub
xchg
insl
cmc
fnstsw
pop
in
mov
aaa
out
loopne
popa
iret
sub
cmp
inc
addr16
cltd
addb
xchg
int
cmpsb
addr16
loop
sub
xchg
adc
jbe
or
std
pop
xor
jp
loop
mov
add
popa
jl
cmp
cli
mov
jecxz
inc
in
lods
pusha
jge
pop
cmp
inc
add
jmp
aam
cmp
sub
mov
push
sbb
mov
test
cmc
out
mov
dec
sbb
push
int
mov
es
sbb
nop
xlat
adc
push
fiadds
out
fcoms
shll
jnp
out
mov
cli
nop
cltd
scas
jbe
nop
jge
fwait
arpl
std
leave
std
mov
or
add
mov
push
push
arpl
xchg
mov
add
push
fldcw
sti
xchg
inc
push
stos
mov
jae
dec
or
mov
daa
or
mov
imul
and
inc
les
repz
enter
jbe
mov
shr
mov
mov
imul
add
adc
imulb
pop
mov
mov
fmul
icebp
fmuls
xchg
pop
adc
repnz
popa
ret
jg
xchg
xor
fisttpll
or
outsb
cmp
outsb
jecxz
shl
xchg
inc
inc
mov
pop
xchg
daa
or
xchg
loopne
leave
pushf
outsl
and
and
xor
ss
scas
je
mov
lods
xchg
cmc
fistl
mov
loopne
lret
into
sahf
rclb
sub
mov
fwait
ret
lcall
loope
das
icebp
iret
leave
jg
push
cld
jge
xchg
outsb
dec
push
or
shrl
adc
adc
subb
mov
scas
pop
lret
in
xchg
test
nop
in
aam
les
add
loop
dec
mov
pop
sub
outsl
test
or
or
sahf
cmc
nop
mov
outsb
out
lea
test
push
outsl
dec
fists
jo
xor
sub
mov
mov
out
sbb
sbb
fcom
movsb
in
adc
jge
pop
sub
mov
or
fiaddl
cmpb
faddl
sarb
rolb
out
mov
aam
mov
fcmovu
out
rorb
or
and
xor
adc
fwait
xchg
or
xor
int
pop
rorl
push
nop
popf
test
andl
repnz
xchg
adc
cmpsl
adcl
fbstp
and
xor
cwtl
pcmpeqb
cmp
js
pop
and
or
push
add
push
aam
push
fnstsw
cmp
mov
sub
sar
es
stos
cmp
cmc
jecxz
icebp
pop
shll
sbb
jae
push
call
xchg
adc
and
push
jbe
pop
cmc
mov
ret
int3
push
nop
inc
ret
mov
imul
sub
ret
stos
add
pop
aaa
and
shlb
cmp
fcom
test
ss
repnz
repnz
stos
push
popf
jb
stos
mov
fcmovb
std
mov
pop
sbb
fcompl
push
xchg
cs
mov
std
mov
sti
addr16
xchg
mov
repnz
sbb
mov
subl
test
jne
outsb
cmp
test
adc
push
stos
push
es
loop
lret
push
sub
cmp
imul
fistpll
je
test
es
push
jb
sbbl
mov
sbb
dec
movsl
mov
movsb
add
xchg
neg
dec
xchg
mov
or
sbb
orb
daa
sub
jl
push
cs
insl
xor
addl
insb
loop
shl
jbe
and
cmp
aam
pop
xchg
xchg
push
inc
sti
lcall
mov
pop
jl
out
stos
jne
adcb
aaa
and
hlt
subl
gs
and
pop
iret
sub
in
jae
rclb
stc
arpl
stos
xchg
push
scas
lea
cs
nop
jle
bound
mov
adc
pop
cmp
push
das
push
jno
xchg
pop
insb
addr16
jle
push
mov
inc
pop
rclb
mov
daa
leave
pop
mov
push
rcl
ja
shrl
jnp
std
xor
lds
arpl
xor
dec
push
or
inc
popf
cs
aad
popa
sbb
push
xchg
and
loope
das
cld
mov
filds
sub
cmp
insl
jl
jbe
lret
sub
fmull
lds
std
mov
out
pop
cmpsl
sub
add
jnp
outsb
roll
mov
inc
lock
dec
cmpsb
mov
xchg
mov
sub
lock
jno
mov
xchg
inc
jecxz
nop
xchg
popa
jb
sbb
jb
add
lret
repnz
or
or
lea
sbb
mov
outsl
fsubrl
sub
jnp
in
mov
and
push
into
push
clc
sbb
sbb
sbb
xlat
inc
and
insb
xchg
or
cld
xor
scas
dec
inc
popa
dec
shll
mov
lods
imul
or
movsb
fbld
add
imul
cld
mov
mov
pop
and
mov
andl
and
mov
pop
push
ja
mov
ss
adcl
mov
clc
mov
sbb
mov
dec
fs
fs
jp
loope
xchg
xor
sub
test
xor
decb
arpl
pop
mov
xor
inc
insl
cs
pushf
push
pop
cmp
jge
lret
push
inc
and
mov
test
mov
sti
add
cli
mov
pop
std
xor
mov
je
mov
inc
leave
sub
in
scas
out
mov
aam
int3
jne
lahf
sbb
lahf
out
in
movsb
fwait
or
dec
into
out
sbbl
or
or
adc
mov
inc
sarl
cwtl
dec
popa
shll
sysret
pop
xchg
mov
ljmp
in
fs
call
gs
push
stc
xor
insb
mov
stos
fidivl
cwtl
mov
xor
push
test
dec
sub
sub
jae
pushf
pop
xchg
testl
mov
pop
adc
gs
push
movsl
pop
or
lods
scas
lfs
js
jno
das
cmpsb
rorl
outsb
mov
push
scas
test
test
cmp
cmpsb
and
mov
mov
stc
movsb
dec
push
sti
dec
adc
mov
ret
lahf
lea
sub
mov
xor
pop
das
stos
xor
sub
and
pushf
cmpsb
push
out
mov
mov
push
pop
fiadds
adc
out
xor
ja
cwtl
or
and
add
mov
stc
cli
dec
bound
cwtl
jmp
fwait
mov
xor
fdivrs
insl
gs
lret
sbb
dec
cmp
or
nop
movsl
inc
jne
in
mov
push
or
leave
leave
push
icebp
xchg
mov
enter
les
ffreep
jle
or
inc
or
fs
pop
lods
jbe
xlat
dec
jecxz
mov
imul
jne
fidivl
filds
mov
outsb
adc
inc
add
inc
arpl
fst
shlb
jo
int3
je
fimull
jbe
sbb
dec
ja
mov
and
pop
inc
cmpsb
data16
inc
cmp
leave
or
sbb
aad
cld
jmp
add
rolb
cld
mov
jle
outsb
ds
jg
inc
dec
lea
sub
jno
lods
test
pop
int3
mov
movsl
jne
cs
std
hlt
push
inc
mov
push
out
inc
enter
out
add
push
sub
dec
sub
stos
mov
iret
rolb
mov
xchg
icebp
mov
mov
out
jae
sub
dec
and
mov
pop
lods
jecxz
add
insb
popa
xchg
je
inc
popf
js
out
cmpsl
sahf
inc
pop
cmpsl
and
dec
adc
jno
test
jno
push
push
pop
repnz
or
jle
mov
mov
mov
mov
test
subb
out
and
ret
fdivrs
fcmovb
stos
movsb
jecxz
and
addb
repz
and
pushf
das
scas
or
jno
and
xchg
jp
jne
inc
add
sub
xlat
shlb
jg
push
xchg
ds
lods
jnp
jp
mov
pop
scas
pop
push
jecxz
cmc
ljmp
sub
lret
mov
mov
sbb
adc
stc
push
mov
push
and
popf
jmp
call
pop
out
movsl
mov
fld
leave
jb
adc
std
add
inc
in
sub
stos
sub
pop
cwtl
mov
outsl
outsb
popf
lods
dec
or
mov
sar
fcoms
inc
shl
sti
pop
mov
bound
fldcw
cmp
xchg
arpl
xchg
add
pop
lret
test
sub
push
pop
push
enter
cltd
frstor
xor
cltd
testb
dec
icebp
add
push
in
cmp
mov
or
mov
int
xor
or
aam
cld
mov
sbb
js
nop
inc
ret
ror
inc
fwait
and
ljmp
in
or
mov
pop
fistps
fsubrs
inc
sub
xchg
dec
in
adc
gs
jmp
sar
add
les
mov
out
dec
stos
sti
xor
cld
je
lods
cli
xchg
scas
mov
sub
imul
sbb
out
inc
jp
add
inc
mov
and
push
ffree
ja
lahf
mov
mov
and
int
es
pusha
jle
xchg
gs
fs
stc
fiaddl
scas
jp
adc
int
movsb
inc
inc
pusha
imul
pusha
in
add
pop
adc
pop
dec
push
movsb
in
sub
imul
orb
jae
bound
dec
in
sbb
pop
pop
push
and
fwait
pop
dec
mov
mov
daa
lcall
lods
and
inc
xchg
cmc
xorl
pop
pop
enter
pop
lahf
inc
rcrl
inc
mov
push
sbb
scas
mov
sub
and
pop
mov
hlt
stc
inc
roll
popf
gs
pop
movsl
add
mov
dec
stos
std
lret
movsl
js
mov
mov
mov
iret
jp
cmp
inc
dec
push
or
dec
add
movsb
loop
jae
pop
outsb
xorl
inc
hlt
mov
sub
sbb
pop
xchg
jne
aas
sbb
data16
addr16
repnz
adc
fcomps
aaa
adc
sub
stos
sbb
outsl
hlt
push
cmp
add
push
shlb
sbb
xlat
inc
jo
sarl
ljmp
mov
out
pop
xchg
mov
ror
lret
xlat
mov
movsb
ficoml
mov
mov
jns
xor
cli
xor
inc
push
out
in
ret
sub
jmp
movsb
cmp
gs
mov
cmpsb
lds
aas
repz
cmp
adc
fsubl
fwait
popf
push
xor
out
cmp
cmpsl
dec
lret
adc
and
jo
cli
add
repz
dec
loope
cs
out
cmp
cs
rolb
pop
mov
addr16
scas
adc
icebp
push
pop
addr16
enter
xorb
hlt
inc
es
sub
inc
sahf
ret
xchg
adc
add
mov
das
and
adc
and
insb
mov
rcr
ss
jae
lea
pminub
lods
jns
add
push
add
dec
cmpsb
in
lahf
movsl
sub
test
int3
out
cmpsl
insb
push
sub
add
fcomps
ds
cwtl
jb
jns
jne
loop
shrl
and
mov
outsb
fldt
xchg
js
fs
sbb
add
cld
or
rol
out
lods
mov
pop
mov
shll
add
add
add
js
fisubl
pop
adc
divl
add
out
inc
mov
mov
mov
pop
mov
outsb
cli
or
cmpsl
in
cld
mov
lret
lock
pop
aaa
addr16
pop
test
movsb
stos
ret
inc
es
loope
iret
sub
call
les
shrb
xchg
dec
xor
in
xchg
shll
jecxz
mov
les
jl
sbb
fwait
push
mov
xchg
insb
sarl
dec
mov
lods
mov
dec
lods
add
lock
jl
cltd
mov
jns
iret
icebp
notb
lea
adc
sub
cmp
and
aad
or
mov
movsb
mov
cmc
aaa
push
mov
lds
jb
stc
mov
sub
sbb
ja
stos
or
mov
push
test
daa
push
jl
jge
mov
mov
mov
rolb
jne
fstps
mov
xor
fmuls
jns
cmpsb
jno
xchg
sub
dec
aam
mov
xchg
pushl
imul
jecxz
int
decb
out
dec
cmpsl
ss
andb
sub
mov
sub
roll
jecxz
jnp
out
icebp
sar
mov
into
lahf
mov
push
dec
addr16
aad
jp
loope
loop
pop
and
add
push
hlt
into
stc
jge
mov
leave
sub
mov
and
pop
outsb
fiadds
jb
mov
rcrl
cmpsb
ret
xchg
sbb
shll
rcl
lea
std
clc
ret
imul
jmp
mov
xchg
or
test
es
mov
xchg
inc
shrl
push
jmp
sarl
aas
jecxz
fs
jg
pop
or
jno
xchg
aas
jno
movsb
mov
std
pop
ja
ja
nop
xchg
xor
mov
repnz
or
mov
cmc
sub
push
mov
stos
aad
xchg
inc
outsb
lods
adc
incb
imul
repnz
xchg
jne
and
in
sahf
loopne
and
out
outsw
sub
xor
ret
int
clc
out
push
jb
fdivl
subl
push
imul
ss
cmp
xor
dec
inc
ret
cmp
and
jne
jnp
jl
cmc
pop
cmp
filds
dec
gs
pop
and
fnstenv
adc
mov
in
imul
xchg
pop
and
loop
xchg
scas
lcall
sbb
popa
or
jecxz
or
cltd
test
cmpsb
movsl
loope
xor
imul
test
xchg
jp
push
shlb
das
pop
push
ret
jge
imul
negl
cmp
les
notl
or
jmp
fcmovb
movsl
push
sbb
or
pop
cmp
or
xorb
add
inc
xor
sahf
cmp
in
dec
aaa
mov
mov
ljmp
pop
xor
lods
ja
fisttpll
ret
dec
fildll
gs
mov
out
das
leave
dec
mov
aaa
sub
data16
xor
das
lods
test
xor
pop
mov
sub
hlt
icebp
lea
test
and
adc
adc
add
fs
mov
or
sub
cltd
xor
lret
mov
jbe
xor
int
das
pushf
cmp
mov
ficoms
sbb
adc
xor
pop
and
loopne
jmp
mov
popf
sbb
es
cld
sbb
jl
mov
das
and
dec
adc
fisubs
jb
lds
xchg
lea
adc
mov
movsb
and
dec
addl
xor
fs
inc
icebp
stos
in
sbb
roll
xchg
xchg
cli
out
out
fisubs
rcrb
lea
mov
inc
insl
push
pop
lret
cmp
mov
dec
push
stos
mov
jnp
stos
adc
mov
loope
lock
inc
mov
mov
lods
mov
mov
dec
sub
xorl
jle
outsb
lcall
or
jecxz
lahf
hlt
sub
aam
mov
and
xchg
fdivrl
mov
add
es
add
fwait
mov
xor
inc
mov
rcl
mov
aas
push
pop
test
in
adc
cltd
sbbl
imul
dec
mov
ljmp
inc
pop
mov
imul
jmp
das
push
cs
mov
sub
negl
inc
pop
adc
push
nop
ret
push
inc
jae
lds
add
les
mov
jmp
mov
cmp
xchg
cwtl
sub
movsb
and
cmp
mov
dec
sbb
cmpb
pop
xchg
or
and
push
ss
mov
loope
mov
dec
movsb
inc
ja
in
into
icebp
pop
int3
jmp
int3
mov
mov
xchg
repz
jbe
pop
sub
cmpsb
dec
movsl
and
cli
icebp
ja
add
mov
jp
or
add
fmuls
pinsrw
mov
lahf
mov
add
lahf
inc
cld
jne
dec
test
out
cld
and
or
aaa
fwait
data16
sbb
mov
cmc
popf
push
sbb
leave
mov
adc
jecxz
mov
xor
and
push
dec
hlt
nop
hlt
shrb
jno
xchg
mov
into
jg
cmpsl
push
cmpsb
cltd
mov
cmp
mul
sbb
pop
mov
mov
and
fisubl
add
das
and
pop
aam
adc
mov
adc
dec
out
push
xor
std
lock
movsb
mov
pop
nop
imul
imul
inc
mov
std
xor
xor
fcompl
sbb
jecxz
in
adc
in
cmc
cmp
push
mov
push
or
xchg
sbb
out
mov
out
adc
inc
mov
sub
in
insb
add
xchg
xor
jl
enter
pop
lcall
mov
xchg
out
hlt
jg
lods
xorb
push
push
jl,pn
insl
dec
dec
or
mov
daa
in
add
popf
mov
shrb
xorl
cs
cltd
pop
mov
int
les
push
sbb
xor
adc
int
cmc
or
dec
and
lahf
es
pop
jl
movl
sar
sub
fdivrs
fdivrp
ja
adc
ja
adc
add
addr16
mov
ret
jecxz
jmp
fldl
cmp
movb
adc
lds
or
xchg
xchg
in
mov
jbe
mov
ss
xchg
cmp
inc
into
inc
mov
mov
popa
sbb
ss
adc
dec
sti
lds
mov
fwait
push
add
aas
test
ret
popf
or
adc
pop
pop
mov
arpl
adc
xlat
push
pusha
inc
add
repz
and
mov
xor
in
jb
ja
aad
in
mov
in
cmp
xchg
mov
ficoml
pusha
add
or
cmc
jb
mov
lock
cwtl
ret
jmp
mov
pusha
add
and
push
push
mov
mov
popa
jp
xor
pop
cmpl
nop
mov
mov
sbb
adc
mov
add
xchg
hlt
faddp
push
sbb
lcall
mov
out
sbbb
orl
stos
mov
cmp
pop
pop
mov
mov
push
sbb
pop
in
mov
jp
pop
cmp
add
inc
cwtl
ficoml
mov
mov
push
decl
xor
pop
mov
data16
outsl
clc
add
mov
add
ret
jp
jge
pop
cmp
xor
out
jae
inc
fldt
pop
push
and
outsl
addr16
cltd
inc
test
in
rorb
or
add
cs
dec
in
pop
dec
inc
pushf
enter
repz
lcall
stos
adc
xorl
call
sbb
in
movsl
push
stc
jl
fisubrs
nop
fadds
mov
mov
les
sbb
lods
mov
les
cmp
mov
iret
mull
orl
mov
mov
xchg
pop
sbb
icebp
jbe
sti
or
and
xor
pusha
ret
and
ret
adc
loop
adcb
or
jle
cwtl
imul
pop
sbb
add
popa
sarl
nop
scas
jo
jo
add
pop
int
push
adc
sbb
movsb
fidivrs
mov
shl
jle
sub
mov
jns
mov
ss
call
inc
push
stc
xor
push
in
scas
insb
sub
out
xchg
lods
dec
mov
xchg
mov
leave
in
clc
dec
rclb
mov
pop
fabs
arpl
mov
inc
les
aaa
aam
pcmpeqw
add
aaa
or
fstl
cmp
xor
out
aas
and
or
shrb
cmp
or
inc
outsb
inc
pusha
stos
pop
push
or
push
jne
mov
stc
xlat
int3
inc
rolb
cld
mov
push
out
mov
mov
arpl
cmpl
sub
fcoml
cmpsl
adcb
dec
jno
add
push
daa
out
inc
nop
mov
bound
fstl
push
sub
dec
pop
test
pop
xor
es
cmp
pop
cmpsb
adc
mov
nop
or
add
mov
cmc
bound
adc
in
ret
inc
fwait
or
orl
lock
xor
das
sbb
dec
pop
mov
sahf
stc
push
sbb
lock
mov
out
fnsave
paddsb
ss
fsubrs
fstl
andl
insb
mov
loope
dec
adc
inc
inc
add
pop
cmp
mov
adc
xor
ret
es
adc
leave
lcall
add
out
ljmp
cmpsl
dec
mov
rolb
mov
add
subb
sbb
lock
out
aam
nop
cs
push
sub
mov
xchg
mov
mov
push
push
aad
xor
pop
lret
and
iret
dec
fsub
jb
push
sub
fmull
push
daa
fidivrs
cmp
mov
outsb
adc
pushf
loopne
push
lcall
push
mov
push
mov
mov
stos
adc
int
pop
jns
and
xor
cmp
rorl
test
lea
xchg
xchg
rcll
shll
cmp
test
jmp
cli
jno
popf
jg
jo
jge
dec
cmpl
lea
sbb
mov
dec
scas
pop
roll
leave
mov
imul
pop
or
insb
jae
pop
cmp
inc
pop
xlat
rcll
push
add
mov
lds
jnp
mov
xor
or
addb
or
test
xchg
pushf
orl
pop
cltd
test
sub
mov
push
inc
sbb
adc
lods
mov
rcrb
sahf
or
mov
pop
pop
adc
dec
mov
out
ja
adc
push
pop
pop
inc
jae
pop
sub
dec
loope
sbb
add
stc
call
outsl
adc
pop
stos
imull
inc
scas
imul
test
mov
push
pop
hlt
int
lret
cwtl
stos
adc
rcrb
pushf
sbb
inc
iret
sub
out
pop
mov
and
mov
push
push
mov
pop
jp
data16
or
mov
jb
pop
xchg
add
jmp
mov
dec
adc
pop
add
inc
or
fsubr
out
cwtl
add
insl
sub
add
inc
cli
icebp
push
out
mov
mov
mov
addb
mov
push
mov
jge
jae
and
decl
push
jne
mov
fwait
ss
imulb
push
xchg
xchg
dec
add
mov
cmp
xor
push
xchg
mov
lcall
adc
fs
push
xchg
sbb
out
inc
ja
cmpb
fnstcw
cmp
icebp
push
mov
fstl
fadd
push
mov
insl
adc
xchg
push
mov
mov
pop
jle
cs
add
adc
icebp
outsb
mov
add
sbb
daa
sub
cmp
jbe
fnstenv
mov
imul
jb
inc
jg
ficomps
mov
aaa
xchg
ja
fwait
cltd
sub
movl
sub
pop
mov
cmpsl
pop
aad
dec
and
mov
push
xor
ja
jbe
xchg
inc
outsl
jne
addr16
pop
cmpsb
and
push
imul
mov
mov
mov
das
xchg
push
iret
pop
in
sbb
test
out
imul
push
xchg
mov
mov
sub
pusha
movsl
fs
dec
sub
mov
xchg
push
lds
sbb
mov
mov
lock
pop
mov
sbb
mov
lock
decl
or
or
cmpsb
mov
and
mov
pop
xchg
outsl
xor
push
lods
xchg
xchg
lea
mov
fxch
mov
into
popa
xor
mov
push
dec
daa
leave
loope
jecxz
int3
daa
popf
dec
leave
mov
cmp
sub
adc
xchg
xor
xchg
das
fldcw
scas
cltd
mov
and
sub
xchg
cmc
pop
jbe
inc
clc
pop
loop
mov
shr
movsb
int3
repz
adc
int
pop
lcall
cmp
test
mov
sub
cld
jo
add
lods
das
loop
and
in
sbb
mull
add
inc
out
data16
xor
or
xor
mov
pushf
mov
push
das
leave
fsincos
fiaddl
aas
jbe
cmpl
jmp
dec
enter
or
jae
fstl
mov
aas
jbe
sub
inc
in
lds
iret
jmp
mov
dec
add
xor
lahf
xchg
sbb
rcll
add
shl
jl
and
jbe
int3
inc
and
and
addl
mov
mov
in
cmpsl
daa
in
sub
insb
add
lds
shrb
scas
into
lds
dec
arpl
scas
mov
ficoms
jle
add
dec
fwait
js
pop
cli
shl
mov
sbb
sbbb
xor
cs
jb
mov
push
sub
cli
outsb
or
in
dec
inc
nop
cmpsl
movsb
add
cmp
add
adc
push
nop
mov
sub
dec
sub
push
repz
aas
nop
xchg
nop
jnp
scas
cli
mov
pushf
mov
lea
xor
xlat
jp
pavgb
ds
xchg
sub
inc
ss
call
jecxz
mov
and
daa
in
adc
fdivl
hlt
leave
pop
mov
dec
pop
push
or
into
stos
mov
jge
mov
and
inc
in
inc
push
cmc
inc
test
mov
mov
cmp
sbb
mov
loop
xchg
imul
shl
push
or
shlb
iret
pop
sub
loop
pop
sbb
stos
jp
mov
mov
fisubl
movl
sub
call
xchg
mov
mov
xchg
mov
inc
into
mov
sbb
dec
sub
es
mov
test
sti
das
and
outsb
aaa
jae
or
out
inc
sahf
push
push
jns
or
mov
rcrb
gs
hlt
push
adc
adc
cmp
mov
push
jg
fsubl
aad
cmp
cmp
mov
xchg
mov
mov
out
cmp
test
addr16
add
xor
mov
and
icebp
out
mov
push
icebp
and
sti
pop
adc
xlat
dec
mov
mov
push
addr16
loope
mov
cmp
sub
test
mov
mov
rcll
mov
out
icebp
jo
outsb
jecxz
sahf
xlat
sbb
dec
frstor
lcall
subl
fnstcw
xor
test
pop
out
rolb
dec
jge
xchg
test
loope
or
sub
out
mov
lods
push
push
dec
imul
adc
mov
mov
out
dec
sub
add
xlat
adc
mov
push
cli
and
cmp
inc
xchg
add
mov
jae
cmpsb
cltd
dec
stos
xchg
sbb
sbb
xor
xlat
in
push
adc
pop
adc
push
inc
xchg
adc
mov
and
mov
rcll
and
sub
test
pop
mov
xor
ror
shrd
in
or
xor
popf
fldlg2
call
jnp
lret
sbb
roll
out
fisttps
sub
mull
popf
mov
fldcw
mov
hlt
pop
push
stos
inc
pop
stc
outsb
movsb
jae
cld
daa
jbe
and
inc
or
jg
inc
xchg
arpl
or
push
jmp
loope
cs
imul
shrb
shrl
or
xor
arpl
add
and
push
adc
mov
mov
test
sub
pushl
cmp
add
or
sahf
and
xor
adc
mov
dec
sub
push
sbb
aas
in
sub
or
in
adc
repz
inc
mov
call
out
cmpsl
xlat
mov
mov
inc
pop
mov
cmc
rorl
mov
into
int
cmp
icebp
adc
addr16
repnz
shlb
inc
aad
inc
mov
sub
inc
aad
jl
inc
dec
xchg
ja
and
xchg
dec
icebp
std
dec
and
xchg
xlat
cmp
mov
dec
fdiv
add
push
aaa
fdivl
or
add
push
ret
loopne
jle
call
push
xchg
stc
xlat
fisttpl
dec
cmp
enter
pop
inc
insb
and
and
and
pop
ret
pushf
sbb
test
cwtl
inc
mov
in
mov
shrb
popa
sahf
xor
hlt
nop
push
jge
das
jmp
and
jne
roll
in
push
in
or
mov
mov
bound
std
ret
enter
cmp
popa
mov
insb
int
hlt
xchg
sbb
sti
or
mov
pop
in
sbb
jae
lahf
mov
adc
push
pmulhw
sbb
shl
xchg
scas
add
divb
ljmp
pop
arpl
xchg
cmpsb
add
addr16
adc
pop
and
mov
inc
scas
andb
imul
and
mov
cmp
ret
mov
sub
jp
mov
and
cmp
and
sahf
ds
lods
sahf
inc
lcall
fmul
sbb
int
cld
iret
jae
scas
pop
test
jmp
popl
dec
adc
repnz
push
mov
stos
loope
mov
jecxz
pop
add
xchg
jge
jno
mov
push
add
push
mov
dec
enter
adc
inc
push
sub
sbb
sub
sbb
sbb
mov
sbb
arpl
mov
nop
inc
enter
clc
sub
fisttpl
pop
cmp
mov
inc
inc
mov
stos
push
mov
add
adc
les
sbb
addr16
xor
and
push
push
mov
aaa
test
sarb
cmc
lock
js,pn
sub
dec
jae
call
movsl
pop
push
mov
mov
pop
out
ja
pop
addl
or
jae
mov
pusha
pop
sub
and
xchg
and
cmc
add
repnz
xchg
ljmp
fwait
inc
lea
in
cs
jl
dec
testl
lock
fldenv
push
pop
xchg
in
inc
push
adc
push
loop
fsubs
pusha
pop
pop
daa
mov
xchg
mov
xor
clc
je
dec
fcoms
adc
mov
fildll
imul
std
lahf
je
sahf
gs
xor
repz
mov
icebp
sbb
test
lret
popa
push
imul
push
enter
inc
jp
aad
or
cld
rorl
jecxz
jp
jp
cmp
mov
cmpsl
lods
push
sarb
test
mov
daa
cmc
repz
rcll
mov
sbb
push
imul
or
cmp
and
pop
fucom
cld
mov
push
mov
mov
sbbl
push
sub
rcl
sbb
xchg
sbb
pop
xchg
gs
in
lock
leave
jnp
jne
inc
mov
loop
negb
push
insb
adcb
push
jge
lds
pop
pop
ja
sbb
mov
lret
jae
pusha
aad
fisubl
lods
add
mov
stos
scas
ret
lret
push
call
and
aaa
dec
dec
lahf
add
jl
xor
lret
mov
jmp
sbb
xor
push
and
mov
xor
dec
dec
loop
daa
stos
lods
push
mov
jne
push
lods
out
movsb
sbbl
in
xchg
ret
aam
leave
dec
lret
xor
adc
mov
mov
xor
int3
fnstsw
mov
xchg
outsl
fcoml
fs
add
pusha
pop
jmp
inc
outsl
or
add
or
fildll
call
in
test
test
icebp
adc
cmp
fists
push
mov
daa
loop
cmp
int3
icebp
push
adc
jmp
dec
pushf
outsb
cmpsl
dec
daa
es
add
dec
and
fwait
stos
lret
dec
lea
rclb
adc
and
into
pop
sub
das
xchg
mov
or
int3
sbb
push
js
lcall
orl
mov
in
movsl
and
arpl
shlb
sbb
jge
test
inc
xchg
cmp
push
sahf
mov
mov
sbb
xor
loop
imul
test
icebp
cmp
das
xchg
dec
mov
test
int
xchg
push
lds
inc
gs
negl
int3
subl
and
pushf
les
mov
xor
ja
pop
mov
fstl
mov
bound
testl
lock
sbb
xor
mov
jp
movsl
out
xchg
inc
cmp
sub
ja
stos
dec
out
and
cs
shr
jle
lret
lcall
lret
in
cld
fstpl
pop
cmp
stos
cmpsb
mov
or
jbe
push
popf
cmp
lods
cmp
loope,pn
lock
pop
fwait
mov
inc
fisttps
mov
dec
mov
mov
insb
cld
jmp
xchg
ds
mov
into
stos
fwait
movsb
cltd
sbb
out
sbb
push
subl
cmp
push
sahf
lds
dec
sysret
cmp
gs
dec
lret
das
ss
xor
aad
shlb
xchg
lahf
push
adc
push
push
xchg
pop
aas
lods
enter
cs
push
or
jns
daa
nop
insb
and
or
cld
fcoms
sub
movsl
outsb
mov
jae
xchg
xchg
mov
cmp
stos
insb
cmp
adc
addr16
in
mov
mov
push
or
test
fimull
mov
shll
cli
cmpsl
pop
xor
pop
sub
sahf
mov
pop
int
mov
mov
insb
pop
ret
addr16
fdivrl
fdivrp
divl
fstps
mov
inc
sub
and
data16
jecxz
ret
mov
ds
ljmp
lods
fcmove
mov
cmp
in
add
dec
aam
int3
mov
adc
and
mov
cmp
stos
jge
xchg
into
xchg
xchg
push
test
mov
lret
insb
inc
mov
pop
mov
pop
ret
out
aas
sbb
jge
add
loop
cmp
sbb
into
mov
xlat
sub
push
notl
push
push
nop
and
mov
push
jne
roll
sbb
push
push
lret
inc
pop
or
in
sub
testl
fisttpll
push
jne
mov
sub
mov
lock
and
test
pusha
inc
pop
ret
fdiv
jecxz
mov
xor
adc
andb
mov
pop
xchg
push
sbb
inc
adc
outsl
jecxz
rcrb
fisubrl
mov
rcrb
sbb
fdivl
add
mov
xchg
outsb
dec
xchg
adc
add
add
mov
xor
xor
fst
xchg
jp
insl
mov
mov
into
imul
iret
subb
mov
jbe
pop
dec
in
xchg
push
mov
sti
lret
ja
addr16
mov
mov
or
sub
inc
jb
sbb
fcmovnbe
inc
jp
xor
popa
add
into
testl
imul
adc
iret
mov
enter
loopne
outsb
insl
add
test
mov
dec
cmp
je
stos
mov
jo
or
imul
add
mov
and
call
scas
xchg
call
inc
push
pop
test
lret
icebp
aas
add
xchg
mov
add
test
scas
cmp
cld
cmp
aaa
and
popf
pushf
adc
and
and
add
jle
fs
push
ja
cmp
adcb
inc
cmp
pop
xor
push
pop
dec
xor
iret
sbb
pop
pop
cwtl
ret
add
popa
int
in
je
sub
movl
add
and
and
inc
fwait
xchg
idivl
jo
imul
push
xor
mov
subb
push
pop
xor
push
cmc
dec
inc
jo
xor
jl
mov
sbbl
cltd
outsl
icebp
fiadds
jo
stc
and
sub
sarl
dec
data16
inc
iret
jnp
fcoms
jns
jg
jmp
js
or
inc
clc
sub
jmp
lret
or
lods
aaa
mov
mov
mov
pop
mov
push
pop
mov
xchg
popf
bound
add
pop
enter
pop
jns
jbe
pop
test
outsb
fisubrl
ja
and
cli
mov
mov
test
pop
jg
ljmp
mov
add
add
je
call
dec
ljmp
add
test
mov
dec
insl
imul
push
sub
lret
shrb
daa
and
pop
add
add
leave
jle
fcmovnb
cmp
mov
mov
int3
xor
sahf
and
test
int3
inc
inc
in
pop
lret
cld
outsl
sub
inc
xor
ds
in
sarl
jge,pt
fstpt
sub
and
shrb
imul
mov
scas
clc
jmp
pop
mov
sub
idivl
mov
inc
dec
inc
cli
into
rorb
ret
aam
scas
cmp
xchg
push
and
mov
shlb
rcrb
ss
jecxz
jl
enter
mov
fdivr
aaa
lds
sub
je
std
mov
cmp
sub
mov
mov
dec
pop
pop
or
repnz
adc
mov
jno
subb
arpl
push
jp
cmp
adc
in
shll
inc
nop
arpl
sub
fwait
lock
push
cmp
mov
pushf
sub
sbb
sub
mov
stc
xchg
sti
out
pop
cmp
push
push
push
aam
sub
xchg
mov
jge
xchg
xchg
in
stos
jne
bound
pop
mov
mov
cmp
push
sub
xor
fs
cmp
push
dec
push
mov
pop
femms
insb
push
int
iret
jbe
sub
cmpsb
call
in
or
xor
adc
push
dec
jg
jns
aam
add
inc
push
inc
movsl
xor
xchg
cmp
popf
sahf
into
adc
jmp
scas
cld
mov
test
and
cmpsb
push
push
pop
jmp
roll
jb
mov
call
mull
jmp
and
inc
cmp
inc
and
mov
inc
movsb
sub
cmp
testb
xlat
bound
imul
cld
fs
sbb
test
push
sub
and
sbb
cmp
pop
jge
cmpsl
imul
jle
sub
mov
xor
add
lock
mov
in
je
mov
and
movsb
adc
clc
pop
mov
pop
jae
cmpsl
les
imul
sub
inc
push
mov
test
sbbl
cmp
mov
cli
push
lds
mov
loope
cmp
dec
sub
sti
sahf
sbb
cld
mov
dec
mov
pop
test
push
sbb
fnsave
adc
jge
adc
imul
inc
xchg
xchg
or
orl
mov
cmp
popf
lock
test
push
ss
jno
lret
push
xchg
mov
cmp
pop
add
leave
adc
mov
mov
hlt
adc
ret
inc
cmp
inc
in
jge
lods
cli
hlt
inc
jecxz
jge
and
mov
jmp
loope
loop
negb
not
mov
out
stc
scas
fcomp
ret
mov
int3
mov
mov
aas
mov
stos
sbb
es
lret
cs
mov
pop
jp
popa
pop
mov
lock
mov
adc
mov
sbb
sarl
lret
xchg
dec
sbb
dec
fisubrs
mov
pop
fwait
adc
mov
stos
push
out
cmp
jbe
mov
fists
jp
insb
pop
mov
stc
pop
xchg
pop
push
push
push
dec
xchg
inc
push
ja
jle
lock
lods
xchg
rorb
pop
ret
fldenv
mov
stos
fidivs
pop
xchg
cmc
inc
pusha
jl
fists
cmp
lock
adc
hlt
lret
and
das
cld
sub
dec
sub
jg
xor
mov
les
mov
pop
jg
xlat
fdivs
sahf
xchg
shlb
daa
aaa
pop
enter
push
push
jl
sti
imul
dec
data16
cld
and
add
inc
into
mov
les
xchg
dec
push
inc
cmpsl
push
sahf
dec
sarl
imul
dec
or
push
mov
or
sub
outsb
xorl
pop
rcll
sbb
or
icebp
and
cwtl
or
jne
cmp
cli
stc
xchg
dec
inc
rorl
iret
dec
and
aaa
dec
mov
mov
push
jg
movsl
jns
popa
mov
ljmp
clc
jle
ret
loop
sub
cwtl
mov
pop
aaa
mov
scas
loopne
xchg
fcom
test
mov
into
ja
movl
xor
sti
out
sub
lock
aas
mov
push
lock
lods
dec
push
sbb
ljmp
xor
sbb
cmc
adc
sbb
ret
jmp
mov
inc
adc
gs
andl
adc
push
fistps
and
out
rcr
mov
push
xchg
jge
cmp
popa
pop
out
int3
dec
in
push
mov
ficompl
inc
jle
adc
dec
and
sub
rcll
add
mov
cmc
das
xchg
push
arpl
mov
xor
fistps
in
int3
andb
cmc
push
xor
insb
insb
test
fs
add
pop
cmp
cmp
lea
adc
orl
and
test
push
push
mov
lret
lods
add
sub
cld
add
or
imul
icebp
jo
sub
mov
ficomps
fidivrl
imul
cmpl
push
cmp
aam
dec
cmpl
fsubs
andb
mov
lods
scas
ja
aas
jo
pop
mov
dec
sbb
jg
xor
ss
ret
lea
or
jne
pop
adc
add
jle
insb
and
int3
aam
insb
pusha
imul
add
arpl
fadds
xchg
cmpsb
iret
test
jge
lcall
fbstp
push
test
inc
sbb
jae
fxtract
repz
push
movsl
insb
jecxz
icebp
adc
sbb
mov
cmpsl
es
fisttps
mov
pop
aad
ja
and
mov
fimull
iret
pop
sbb
sahf
fistpll
pop
clts
inc
shl
sub
xchg
sysexit
mov
testb
mov
popa
pop
jae
ffree
jle
push
push
pop
xor
je
pop
pop
ret
shll
outsb
les
mov
jecxz
jae
rcll
into
cltd
test
xchg
insb
add
testl
push
fisttps
enter
iret
sub
mov
lret
mov
jp
lahf
and
adc
dec
mov
sbb
fmull
mov
cmp
lds
fimuls
mov
add
mov
push
add
or
addr16
pop
cwtl
out
or
mov
pop
mov
add
lret
xor
movsb
rcr
or
pushf
xchg
int3
and
or
call
sbb
cmp
popa
dec
jge
adc
fsubp
and
push
add
xchg
jp
add
xor
cmpsb
and
adc
jge
out
imul
or
pop
pop
dec
lret
jmp
pop
imul
lods
and
leave
mov
testb
bswap
aad
mov
mov
or
push
mov
loope
jne
pusha
test
mov
mov
mov
xchg
or
lret
cmp
sbb
outsb
push
out
pop
jp
or
popf
ret
fcoms
xchg
fimuls
pop
mov
fnstcw
sbb
mov
call
jnp
mov
xor
pushf
daa
push
xor
jle
or
push
or
cmp
and
ds
lret
out
pusha
inc
push
push
pop
fisttpl
lahf
outsb
xchg
out
jmp
in
repz
dec
mov
iret
pop
pop
xor
sub
jno
insl
cmc
sarl
pusha
int
stos
inc
mov
pop
dec
rep
sbb
mov
push
subb
leave
pop
dec
cltd
hlt
mov
pop
out
mov
lock
stos
das
in
push
jo
inc
dec
push
stos
mov
out
sbb
mov
push
fnstsw
in
or
daa
mov
data16
lock
fsqrt
in
fsts
xchg
jl
push
movsb
dec
and
mov
movsb
mov
mov
and
outsl
out
subb
mov
inc
mov
lods
xor
std
adc
cli
sbb
in
xor
sarl
inc
cwtl
fstps
fsubrl
test
and
mov
xchg
add
dec
cltd
adc
je
add
inc
insl
out
jno
jmp
xchg
mov
mov
mov
ret
pop
dec
vminsd
movsl
push
cmc
fdivs
mov
adc
mov
rorl
mov
in
add
xchg
setp
xorb
jp
ret
aas
aas
ljmp
jmp
push
dec
rdpmc
jg
inc
jbe
mov
bound
mov
and
sahf
popf
sti
popf
daa
cld
lret
lods
int
xchg
into
js
jno
filds
insl
mov
ficompl
mov
mov
mov
jg
sbb
test
int3
jae
lcall
mov
sub
lahf
jle
fistpll
cld
pop
in
xchg
jo
push
fcmovne
xor
lods
adc
mov
sbb
pop
shl
cld
sub
je
add
mov
push
cmpb
inc
mov
inc
sub
es
dec
cmpsb
lahf
enter
mov
sarl
int3
jnp
adcb
dec
imul
sar
inc
cmpsb
sbb
andb
std
shll
sbb
mov
inc
insl
iret
mov
ds
out
mov
pop
pushf
sub
insl
jne
push
xchg
or
dec
movsb
push
lock
out
pop
sub
iret
pop
push
mov
jae
xchg
out
jmp
fldl
int3
lahf
dec
pop
js
je
in
out
dec
mov
or
idiv
xlat
loop
in
inc
sti
adc
inc
dec
mov
pop
xchg
aaa
popf
decb
outsb
fnstcw
add
inc
fcomip
clc
and
aas
xchg
mov
jbe
mov
and
push
cmp
cs
jp
push
sbbl
loopne
mov
mov
in
sbbl
xlat
cmp
mov
sbb
mov
fwait
mov
mov
int3
in
dec
fildll
sbb
cmp
outsb
add
das
scas
sbb
add
ret
xor
fs
push
dec
inc
mov
fdivrs
inc
mov
sbb
jno
ja
sub
dec
jmp
insb
cmp
jns
or
mov
aas
push
mov
dec
daa
nop
cmp
mov
mov
jle
push
imul
adc
ds
adc
ret
mov
xchg
add
bound
pop
dec
xor
into
push
mov
adc
adc
pop
xor
push
push
sbb
dec
mov
and
add
fdivp
out
xchg
in
fiadds
jo
cmp
xor
jle
mov
in
dec
push
xchg
mov
inc
aas
in
mov
mov
mov
in
and
pusha
insb
aad
jae
push
sbb
cmp
fisubrs
mov
jno
lock
push
push
mov
push
lock
mov
or
inc
mov
repz
jb
sub
dec
mov
adc
testb
mov
js
jbe
int
je
and
push
and
and
insl
test
aam
sub
inc
jne
bswap
mov
pop
inc
jl
sbbl
js
adc
call
dec
mov
fcompl
imul
mov
pop
movsb
mov
mov
loope
and
ret
push
push
jbe
push
add
arpl
in
mov
fisubl
aas
pushf
call
in
xchg
in
movsb
nop
test
movsl
bound
sti
in
sub
jl
into
lea
sub
mov
data16
mov
imul
lret
out
aas
push
dec
and
mov
call
push
adc
fnstcw
pop
inc
push
mov
pop
stos
sahf
push
mov
loopne
xchg
cli
sub
cmp
inc
pusha
je
out
cmp
mov
fimull
jno
jle
jno
and
ja
add
test
mov
or
lock
test
out
pop
mov
mov
sub
jb
inc
cs
xor
xchg
ss
jae
xchg
adc
rcl
in
mov
jmp
add
call
scas
aaa
out
mov
in
jnp
cmp
ss
subl
cmp
and
arpl
inc
icebp
std
fcompl
rcrl
outsl
cmp
pop
push
pop
mov
xor
inc
inc
pop
dec
xor
rep
xor
fists
daa
dec
aad
arpl
pop
mov
dec
xchg
mov
mov
aam
pop
clc
popa
jle
push
cs
xchg
inc
ffreep
pop
lret
sbb
ret
daa
popf
xor
jne
shrl
and
jae
or
ret
pop
fnsave
dec
mov
ljmp
leave
xor
jecxz
push
pop
pop
pop
jo
sbb
jae
and
xor
daa
rcll
hlt
enter
inc
int
pop
xor
rcrb
mov
rorl
sti
adc
lods
sub
mov
sarb
inc
mov
inc
int
xchg
pushf
leave
cmp
mov
invd
out
pusha
xchg
outsl
or
into
lods
in
push
call
loope
scas
aaa
push
cmpsb
das
dec
pop
jae
jns
push
pop
push
cli
aaa
add
add
ja
adc
loope
and
cmp
fldt
stc
mov
sbb
cmc
scas
fmuls
xchg
ja
jle
js
push
cmc
fdivrs
inc
ffree
push
sub
bound
xlat
and
das
cli
orb
pop
es
icebp
popa
add
ss
add
and
jns
repnz
push
les
pop
mov
lea
arpl
pop
xor
sbb
cmp
and
scas
push
jecxz
movsb
add
les
into
dec
aas
push
sbb
adc
add
inc
les
mul
imulb
dec
int
stos
pop
xchg
add
push
out
lret
inc
jo
cmp
jg
cmpsl
fisttpl
adc
lods
cmc
jge
inc
push
fldcw
mov
cmp
mov
dec
push
dec
repz
lods
bnd
nop
push
and
or
inc
fcompl
stos
cwtl
std
dec
or
sqrtps
push
scas
pop
cmp
dec
dec
pop
xor
sti
lods
xchg
iret
pop
dec
inc
xchg
cmp
jb
sbb
adc
and
or
or
imul
and
aad
hlt
ret
xchg
insl
mov
push
adc
xchg
cwtl
lret
adc
adc
or
xchg
mov
xlat
mov
mov
cmpsb
push
xchg
push
and
lds
sub
push
xchg
or
bound
cs
loope
aad
push
mov
pop
add
xchg
jb
mov
imulb
dec
push
scas
xchg
mov
divb
or
mov
movsl
xchg
xchg
lret
pusha
push
addr16
pop
fstps
mov
pop
mov
jle
cmpsb
insl
xchg
lahf
push
xlat
and
movsb
scas
mov
shlb
aaa
int3
xor
jmp
lret
sahf
pusha
xor
out
into
mov
mov
mov
js
ss
pop
sub
or
jb
cmc
in
jb
movsb
pop
insl
cld
cli
jnp
dec
jecxz
xchg
cmp
pop
fwait
inc
ret
loopne
jp
or
dec
imul
fs
pop
add
sub
das
mov
sub
popa
mov
cmp
outsb
xor
iret
pop
mov
inc
ds
shl
ret
popa
stos
pop
ret
lods
pop
dec
mov
dec
orl
mov
xchg
dec
rolb
test
jmp
scas
outsl
call
adc
in
out
xor
scas
or
jne
sub
or
and
dec
mov
in
mov
into
roll
mov
mov
jp
js
xlat
or
mov
pop
sbb
std
push
fadds
fnstcw
mov
jmp
cmpxchg
sbbb
mov
xor
and
lods
sbb
dec
adc
xchg
sbb
push
sbbb
ret
mulb
ret
call
inc
xchg
sbb
xchg
or
xlat
adc
cmp
mov
xchg
imul
enter
and
dec
aaa
push
lahf
pop
nop
jge
adc
stc
cmp
jb
dec
cmc
loop
leave
mov
das
addr16
sub
aaa
jno
fdivrs
xor
shlb
in
aaa
out
jbe
xchg
sub
mov
pop
hlt
aam
xor
cmc
lds
daa
imul
pop
push
pop
in
xchg
mov
jo
arpl
mov
pop
out
xor
movsb
out
imul
mov
mov
lahf
ss
push
xor
jle
sbb
mov
jo
ffree
pop
lds
adc
bound
fdiv
jp
dec
roll
sti
sahf
sbb
mov
mov
sbb
jl
movsl
pop
loope
stos
out
jno
inc
jmp
ljmp
dec
lea
adc
ficoml
repz
repnz
or
dec
subl
pop
mov
xchg
sub
stos
or
fistps
sbb
fisubrs
stos
repnz
pop
dec
dec
insl
sahf
repnz
xchg
sub
das
movsb
out
scas
or
mov
jle
xor
jno
cs
scas
pop
mov
fcomi
dec
xcrypt-ecb
cmpsl
or
inc
loope
adc
movsl
into
sbb
jl
dec
stc
cmp
arpl
inc
mov
repnz
dec
inc
cmp
xchg
inc
aam
mov
adc
aad
xor
fsubrl
add
out
arpl
or
mov
notb
loopne
int3
or
shlb
pop
sbb
jp
adc
sbb
clc
push
and
lods
lods
xchg
cmpsl
frstor
xor
and
daa
stos
daa
icebp
xchg
mov
ret
cld
inc
imul
pop
or
or
in
and
pop
test
in
push
push
cmp
mov
mov
imul
xchg
cmp
cmpsl
sbb
in
mov
es
inc
mov
ror
mov
cvtps2pi
sub
or
xchg
adc
orb
xorb
xor
cmpsl
fldenv
push
mov
daa
dec
mov
xchg
cwtl
add
jae
jle
inc
leave
dec
addl
hlt
movsl
dec
in
pop
mov
jp
pop
xchg
or
mov
nop
xor
and
lret
loopne
mov
xchg
arpl
pop
incl
out
pop
mov
jp
xchg
dec
xor
xlat
sbb
lcall
in
mov
mov
adc
clc
push
jg
lcall
aas
dec
mov
and
jae
ret
inc
cmp
mov
cmp
cmp
movsl
je
nop
cmc
pop
ffree
int3
jle
mov
inc
push
adc
pop
sbb
push
inc
imul
push
mov
or
addl
lods
mov
pop
mov
scas
jp
adcb
out
jb
xor
lods
push
adc
or
frstor
mov
icebp
lret
hlt
xlat
xor
sub
ret
bound
xor
mov
cmpsl
mov
stc
or
inc
mov
xor
les
mov
jae
out
jo
mov
xchg
jl
sbb
mov
jo
movsl
in
jmp
inc
notl
repnz
sbb
out
addb
adc
int3
loope
xor
cmp
pop
dec
ds
loope
xor
xchg
stos
out
cmp
dec
lock
fwait
mov
sub
sub
mov
ret
stc
subb
mov
lea
in
movsl
cld
dec
repz
aaa
xchg
xchg
jp
das
fldt
mov
xchg
xor
outsb
div
clc
jne
fldl
ds
ret
lahf
rorb
mov
sbb
cltd
das
lods
pop
jnp
jmp
lock
mov
popf
cmp
dec
les
js
cmpsl
cmp
mov
mov
xchg
sub
nop
sbb
jl
adc
pusha
insl
mov
fs
cmp
js
cltd
sahf
xchg
stos
into
leave
enter
lea
jno
hlt
or
les
mov
fdivl
aam
lds
scas
outsb
das
mov
movsl
push
push
das
shlb
push
mov
jo
mov
das
dec
add
bound
repz
or
cmpsb
in
aad
jg
and
out
xor
adc
jns
lea
mov
inc
push
lods
mov
jne
or
lea
inc
cmc
jnp
call
xlat
sbb
leave
aaa
repz
xor
std
xchg
and
stos
lds
add
fwait
cmp
adc
fldt
fbstp
divl
pause
ljmp
cmp
inc
out
dec
int3
movsb
scas
cld
and
adc
sbb
pusha
xor
pop
dec
test
xchg
out
mov
sahf
gs
or
cld
or
mov
jmp
fldl
incl
sub
out
mull
dec
push
push
push
mov
nop
mov
fnstsw
mov
jb
adc
jb
cmc
imul
stos
or
and
cmc
fiadds
mov
in
cmp
pop
gs
sub
inc
xor
fsubl
insb
sarb
pop
rorb
je
mov
enter
sub
cwtl
je
pushf
jnp
jbe
popf
std
cmp
xchg
std
das
xchg
and
mov
and
mov
inc
je
cli
and
sbb
or
lock
outsb
push
ljmp
sbb
lods
xor
test
inc
setbe
xchg
insb
mov
stos
pop
jbe
nop
dec
cmpsl
ret
rcr
sarb
jecxz
cmpsb
lret
adc
lret
lods
dec
into
fidivrl
mov
in
test
jbe
add
js
sbb
mov
in
repz
lret
ret
loop
imul
mov
and
and
inc
in
lods
inc
nop
cmp
adc
mov
pusha
es
jecxz
ljmp
shlb
lahf
or
sbb
xor
in
out
aam
inc
enter
xor
clc
mov
fmull
xchg
sub
pop
mov
leave
fnstenv
cmp
fildl
dec
jl
mulb
adc
pop
push
dec
pop
mov
std
pop
neg
add
jmp
ja
fidivrs
sub
pop
pop
rep
pop
pusha
jp
xlat
xchg
fcomps
cwtl
into
rorl
cltd
sbb
mov
lahf
fsubrl
push
lret
lret
xor
xchg
xor
lds
push
push
fsubrs
push
out
outsb
xchg
mov
add
out
dec
and
ja
cmp
jge
adc
lods
pop
add
cmp
push
les
lock
repnz
add
jo
mov
fwait
and
mov
cmpsl
push
pop
mov
insl
dec
mov
ja
div
cld
btrl
sbb
add
push
jmp
imul
repz
cld
hlt
xchg
stos
dec
scas
xor
je
test
out
jl
loopne
in
xchg
inc
aaa
mov
inc
andb
pushf
add
dec
push
insl
mov
xor
mov
insb
inc
shl
shlb
pusha
inc
push
mov
mov
add
pushfw
stos
cwtl
jae
sbb
and
xchg
popf
lods
jecxz
shrb
jae
push
cmp
insb
inc
pusha
mov
leave
xchg
test
loopne
daa
mov
xchg
in
lahf
cwtl
fdivl
leave
jmp
push
mov
mov
cmp
aas
test
fistpl
push
adc
or
add
and
push
aas
jmp
jnp
inc
sbb
outsb
data16
push
mov
sti
inc
mov
add
imul
insb
xchg
dec
sub
std
cmc
cli
lods
and
dec
xor
stc
cli
dec
ret
int3
inc
mov
push
jg
sub
shll
inc
pop
pushf
pop
mov
fstpt
out
jae
xor
lods
jae
mov
or
cmpsb
rcll
pop
pop
jge
push
adc
xchg
fcmovnu
dec
inc
cmpsb
in
aas
rorb
out
adc
scas
add
lea
mov
cwtl
enter
add
pop
dec
mov
cmpsl
mov
sbb
in
test
fsubrl
xchg
repz
and
jo
sti
sub
mov
insb
cltd
add
shlb
inc
test
mov
das
inc
loop
pop
xchg
cmpsl
stos
jmp
xchg
mov
xchg
aam
mov
sub
and
enter
jecxz
pop
out
push
jno
xchg
jge
xchg
mov
and
test
mov
xor
shl
nop
bound
cmp
push
fmul
in
icebp
ja
pop
mov
out
out
ret
loop
xor
add
arpl
dec
pusha
inc
jnp
cmp
icebp
dec
mov
push
jecxz
or
and
je
push
in
inc
fwait
xor
push
insl
fwait
ljmp
inc
cmp
jns
cmp
out
jne
jmp
das
mov
sbb
aas
xlat
dec
inc
adc
dec
data16
std
cmp
js
cmpsb
bound
inc
adc
mov
pop
in
or
dec
cmp
dec
loop
and
mov
mov
sahf
je
jae
mov
mov
and
int
jno
mov
popa
fmuls
pop
push
sub
enter
test
sub
jmp
dec
cli
xchg
xor
sub
pop
or
testb
fstpt
push
jno
fcmovnb
shl
mov
jl
mov
jno
add
shrl
aad
jl
adc
sbb
fsub
mov
jge
adc
imul
sub
pop
pop
and
cmpl
cmp
push
cmp
adc
push
inc
mov
jecxz
ljmp
adc
gs
or
mov
or
gs
add
jbe
and
bound
cmp
popf
outsl
jne
xchg
fs
sub
pop
jg
xchg
fucomp
or
sbb
test
xchg
xchg
mov
addr16
in
jp
xor
pop
mov
popa
scas
dec
xorb
hlt
mov
dec
mov
inc
mov
mov
mov
xchg
adcb
sub
dec
push
bound
cmc
lea
jmp
daa
neg
jns,pn
mov
loopne
inc
mov
inc
arpl
shll
push
inc
push
and
out
mov
adc
sbb
xchg
pusha
testb
hlt
push
stc
imul
mov
xchg
add
mov
push
cwtl
xchg
sbbl
es
pop
xchg
in
lcall
mov
adc
imul
dec
in
adc
out
xor
popa
xchg
bound
add
lock
sub
test
sbb
loop
jae
nop
icebp
movsl
outsb
jge
loope
in
sarl
int
ret
js
gs
or
mov
pop
mov
stos
ja
fdivrl
mov
xor
push
xchg
cmp
mov
outsl
lods
push
test
shll
push
adc
sti
lock
mov
enter
scas
mov
mov
sbbb
pop
cmp
mulb
inc
mov
push
and
and
pop
pop
es
inc
push
cmp
xor
sub
pop
cld
and
iret
lods
dec
fstenv
fsubl
test
fcmovbe
out
sbb
xor
inc
negl
inc
lea
and
push
add
fistl
adc
sub
add
rclb
pop
xchg
ja
mov
push
mov
inc
xchg
mov
xor
jp
scas
and
mov
pop
or
push
leave
xacquire
das
fdivr
lds
jmp
fidivl
cpuid
vmread
mov
in
cmpsb
insb
fstpl
cmp
cmp
imul
rcll
call
test
add
push
xchg
cmc
fnsave
cld
dec
aaa
fcompl
push
push
xchg
cmp
or
ret
sbb
es
cmp
sub
xchg
sbbb
clc
loope
add
push
xchg
mov
aaa
lea
gs
cld
xor
iret
loop
sbb
mov
mov
cs
pop
std
mov
out
jbe
lock
add
test
jge
or
loope
mov
lret
push
jbe
jne
dec
dec
mov
pop
rol
sub
ja
enter
pop
mov
scas
xor
sarl
adcb
cmp
sub
cs
mov
in
adcb
pop
pop
int
outsl
out
mov
mov
jmp
push
push
fs
test
add
les
sbb
mov
ret
gs
in
fnstenv
xor
mov
push
shlb
mov
adc
leave
sahf
leave
mov
jmp
sub
sub
mov
mov
lds
enter
jp
sub
inc
xor
rolb
mov
fisttpll
enter
sbb
pop
mov
fstps
dec
and
cmp
jb
sahf
arpl
ret
cltd
pop
xor
push
iret
sarb
mov
pop
pop
and
jns
xor
fwait
loop
int3
mov
sbb
or
frstor
daa
andl
mov
dec
into
in
shll
sbb
dec
shll
mov
je
push
xchg
stos
add
mov
hlt
rorb
sbb
or
popf
mov
dec
lods
ret
stc
lidtl
imul
sahf
add
sub
outsl
cld
xchg
sbb
sub
imul
mov
fs
mov
push
repz
loope
xchg
and
push
out
subl
aam
sbb
cmp
xlat
add
pop
imul
push
push
sbb
mov
jno
cmpsl
xlat
cmp
std
sub
mov
mov
test
inc
cmp
adc
lret
cs
xor
ret
pop
mov
xor
mull
loopne
pop
out
push
cmp
popa
push
cmp
lods
je
iret
cs
lret
cs
fdivrp
push
or
dec
sbb
sbb
out
aaa
ficoml
mov
pop
jmp
xor
xor
pusha
mov
mov
sub
out
test
mov
fildll
sbb
add
and
mov
test
fiadds
or
xor
scas
dec
sbb
xchg
ljmp
push
and
cmp
dec
stos
lret
cmp
test
out
mov
xchg
aaa
adc
repnz
push
cvttps2pi
mov
pusha
subb
xor
cmp
lock
adc
push
lret
jp
jp
mov
jg
dec
dec
mov
sbb
mov
add
stos
leave
adc
push
fstpt
mov
lods
and
cli
test
jno
inc
into
mov
and
mov
cmp
jb
stos
adc
in
or
test
push
loope
or
jnp
rcrl
jp
das
pop
mov
int
jl
mov
rcrb
sub
into
and
adcb
xor
pop
popf
xlat
rorl
rcll
outsl
xorb
and
fwait
lcall
jge
fidivrl
or
push
cmp
mov
scas
insb
insb
repz
lret
test
mov
rolb
sub
pusha
in
leave
dec
aaa
arpl
ljmp
push
xchg
sti
push
insl
sub
movsl
pop
push
dec
lods
xchg
dec
mov
push
sub
out
push
cli
data16
jmp
fsubs
test
mov
mov
mov
scas
jns
faddl
mulb
inc
call
outsb
nopl
pushf
adc
mov
fstpl
mov
aam
inc
cmp
and
sub
dec
jmp
mulb
xor
ret
jge
cmpsb
mov
mov
fisttpll
sbb
add
jbe
cmpb
cli
sahf
test
push
cmp
iret
dec
push
jecxz
repnz
pop
mov
cmp
jg
mov
int
aaa
xor
pushf
inc
ja
out
mov
test
mov
push
jne
pop
sahf
lea
enter
repnz
sbb
mov
stc
lods
pop
fidivrs
adc
shlb
mov
or
mov
leave
call
repz
mov
xchg
jmp
clc
sub
or
stos
in
and
and
cmpb
push
fisubs
sub
sbb
rcll
stos
pusha
enter
sub
push
adc
out
and
fldcw
sti
pusha
dec
adc
cmp
push
add
test
lret
sbb
pop
shlb
lahf
lods
nop
mov
inc
aad
jle
repnz
mov
mov
rcrl
sbb
inc
push
push
inc
push
cltd
xor
mov
rorl
les
xor
jns
inc
xchg
xchg
xchg
loope
jg
mov
imul
jns
jmp
pop
pusha
lret
scas
js
lods
cmpsb
push
mov
ja
pusha
sub
push
pop
ret
or
dec
inc
out
mov
or
inc
out
cwtl
movsl
jb
push
and
push
pop
lahf
jecxz
popa
xchg
scas
or
adc
call
push
gs
add
movsb
push
rorl
rcl
or
cmpsl
aad
sbb
mov
dec
cmpsb
push
punpcklbw
mov
pop
push
adc
insb
mov
xor
push
rcr
ss
fsubs
or
and
dec
jge
mov
cmpsb
mov
lcall
push
add
cmpsl
fldl
adc
shrl
jge
js
cmp
push
adc
jo
leave
adc
or
repz
push
and
sbb
dec
pop
or
lret
pop
mov
inc
push
cld
in
pusha
mov
push
in
imull
pop
arpl
out
mov
outsb
aam
stc
imul
adc
jle
sub
or
mov
sbb
int
pop
adcb
iret
mov
push
inc
mov
ret
lcall
cli
mov
js
xchg
scas
orb
xor
movsb
loope
div
outsl
test
cmpb
pushf
xor
adc
sub
out
cmp
cwtl
xchg
pop
mov
jno
cmp
dec
insl
rorb
pop
pop
loopne
popf
mov
jb
test
mov
add
sahf
add
or
out
lods
pop
out
lds
jno
pushf
jb
and
mov
scas
jg
adc
sub
xchg
mov
mov
lock
in
push
int
pop
ret
and
insb
push
faddl
xor
and
push
or
sbb
jae
cli
mov
and
pop
mov
stos
loopne
lea
and
popf
out
mov
ret
outsl
out
addr16
in
cmp
pushf
loope
imul
cmpsl
xlat
js
icebp
inc
fisttpl
sbb
dec
pop
xchg
iret
icebp
rorl
xchg
xchg
sahf
imul
mov
js
daa
push
stos
pop
mov
in
loope
dec
movsb
jl
adc
fstps
sub
pop
xor
or
and
inc
cmp
fcmovu
jp
and
xchg
xor
add
adc
stos
cmp
jne
mov
out
out
inc
jb
cmpsl
repnz
mov
call
cmp
jb
dec
pop
push
js
sub
or
adc
xchg
cmc
call
enter
sti
push
push
cmpsb
sub
fisttpl
xchg
sbb
dec
lods
movsl
sub
mov
movsl
mov
rcrb
xorb
jns
outsb
test
jmp
dec
mov
pop
jae
pop
mov
dec
xor
testl
stc
adcl
jp
das
pop
mov
lcall
shlb
fdiv
cmp
cmp
xor
rcll
out
mov
lds
and
xchg
pop
inc
fdivs
out
mov
lcall
push
xor
sub
jmp
or
insb
mov
adc
or
sbb
pushf
cltd
cmpb
lea
int3
mov
mov
in
xchg
adcl
outsb
cmp
inc
loopne
mov
addr16
imul
jge
daa
jmp
rorl
lds
jge
shrb
mov
ss
aad
xlat
js
mov
ss
shlb
xlat
mov
xorb
mov
sub
pop
stos
imul
scas
or
sbb
mov
sub
icebp
je
loopne
stc
mov
stc
sbb
pop
movsb
jle
jbe
mov
cmp
in
jge
sbb
sub
xor
xor
mov
das
ret
xchg
call
mov
cld
mull
loope
in
lods
mov
sar
xchg
mov
and
fdivrl
mov
fstpt
push
unpcklps
sub
sub
adc
pop
and
ja
negl
icebp
dec
aam
test
iret
outsl
in
imul
jge
jge
pusha
jns
mov
repnz
mov
vpperm
xchg
or
icebp
sbb
mov
daa
cmp
imul
lret
leave
daa
or
lahf
sti
lods
mov
dec
sub
mov
cld
xchg
int3
scas
fildl
es
lcall
imul
jbe
daa
xor
jl
jmp
xor
add
sbb
les
fwait
xchg
or
lea
jle
push
les
mov
pop
sub
xor
fs
cbtw
in
jo
hlt
lret
jmp
lds
mov
das
popf
pop
cs
aad
cli
pop
pop
mov
es
fsubp
dec
mov
mov
mov
or
sub
lcall
popa
add
mov
mov
mov
cmp
sub
enter
xchg
mov
jg
ja
pushl
std
lock
repnz
outsl
jge
jo
mov
mov
and
sub
push
icebp
movq
xchg
aaa
nop
pusha
rclb
subb
or
xchg
shrl
jns
add
into
sbb
adc
cmpsl
pushf
loope
mov
push
decl
clc
sahf
loope
add
ja
out
std
mov
scas
add
sub
frstor
mov
lods
loope
test
cmpsb
lcall
and
lods
inc
fsub
roll
aad
pop
jnp
mov
das
mov
lods
sbb
pop
add
inc
std
lret
pop
adc
add
pop
mov
cmp
jmp
push
inc
mov
jge
dec
lods
sti
sub
test
test
sbb
xchg
iret
les
mov
adc
in
push
addl
sbb
into
faddl
pop
jnp
out
fcom
xchg
push
add
cltd
mov
mov
add
jmp
sti
add
dec
push
or
ja
mov
pop
mov
mov
stos
push
sub
imul
push
stos
adc
cld
insl
pop
fs
jg
andb
jns
mov
js
xor
and
call
je
and
cs
sbb
xor
jle
aam
loop
outsl
or
fdivrl
rcrb
sub
jbe
pop
xchg
adc
pushf
sub
imul
pop
mov
aas
xchg
or
cmp
fisubs
nop
sbb
out
push
repz
test
jmp
jnp
xor
cwtl
mov
and
cltd
push
cld
loop
pop
mov
mov
ret
adc
sets
adc
jno
andl
add
cmp
repz
in
sbb
sti
sub
and
pop
xorb
outsl
add
jb
movsb
mov
lcall
cmp
testb
jae
add
add
fildll
popf
cltd
mov
into
mov
into
rcrl
push
lret
mov
jmp
hlt
mov
push
int
test
lret
inc
lds
mul
or
adc
push
jmp
pop
dec
inc
cmp
test
in
int
mulb
mov
lret
dec
xchg
dec
push
pop
imul
ret
push
jno
mov
enter
mov
push
mov
push
xchg
loope
out
mov
outsb
nop
and
cmp
popl
mov
cmp
sub
dec
fisttpll
mov
int3
int
orl
cmp
sbb
je
adc
nop
cmpsl
jnp
pusha
inc
adc
test
andb
add
ret
in
cwtl
xchg
inc
ds
xchg
cmp
div
in
les
repz
dec
lods
push
or
shll
xor
and
push
push
pop
sahf
dec
lcall
out
shrl
gs
popa
into
cmp
lock
das
cmc
gs
test
or
and
pushf
lock
mull
pop
jecxz
mov
insb
xchg
push
call
inc
jno
jle
or
enter
and
and
into
fucomi
push
jp
cmp
loope
cmp
out
hlt
repz
push
pop
lret
add
popa
loopne
jbe
shlb
fcmovnu
rclb
aad
xchg
out
cltd
lods
test
negb
cli
movsl
sbb
lret
lods
ja
shlb
pop
lahf
fistps
mov
add
mov
fdivs
pop
sahf
and
and
stos
fwait
repz
adcb
xchg
mov
and
repnz
xchg
xor
push
lock
sub
xchg
adc
subl
push
push
ja
sbb
mov
lahf
mov
out
das
inc
push
out
addr16
cmp
jb
adc
lods
outsl
or
sbb
test
out
push
popf
lds
lret
jne
sbb
or
rolb
int
in
lahf
inc
pop
xor
ret
psraw
mov
dec
or
loope
adc
pop
in
sub
dec
rcr
sub
mov
pop
call
add
and
pop
testb
jae
mov
add
jmp
sub
test
out
fs
xlat
dec
scas
push
mov
or
mov
cld
jbe
adc
repnz
push
into
jle
jne
mov
fidivrl
stos
shrl
add
fsubp
pop
cmc
mov
outsb
pop
pusha
movsb
es
push
cmc
lods
xchg
int3
xor
xchg
bnd
ss
push
push
call
movl
repz
lods
hlt
dec
test
stos
popa
pushf
sbb
adc
mov
das
dec
fsubl
das
push
out
xchg
imul
mov
cmp
imul
and
out
push
cli
sub
pop
sub
sbb
imul
sub
repnz
add
fbstp
aaa
sub
in
in
loopne
loope
or
lods
adc
push
fstpl
inc
in
popa
pop
cmp
jp
fcomps
xchg
jbe
in
repz
mov
mov
cmpsb
mov
sbb
mov
mov
sbb
enter
push
mov
stos
dec
mov
das
xchg
xchg
mov
jne
sbbl
inc
test
mov
out
push
jp
pop
test
pop
dec
mov
adc
movsb
test
cmp
mov
icebp
icebp
xlat
xor
cmp
lds
jg
gs
jge
js
inc
imul
in
sbb
mov
sbb
sbb
shrl
sahf
ljmp
test
mov
xor
adc
pop
fmull
push
clc
cmp
jl
xor
roll
add
mov
push
loopne
xor
out
sarl
push
in
les
add
pop
sarl
sub
mov
mov
xlat
adc
inc
add
mov
mov
sub
js
roll
ret
add
cmp
and
in
fisubs
cmp
sub
pop
dec
gs
stc
jae
mov
jmp
hlt
mov
aam
xchg
out
dec
push
mov
dec
fs
cmp
mov
or
lods
comiss
ret
push
repnz
leave
xchg
jns
xchg
leave
jne
jae
and
cwtl
insb
aad
pusha
xchg
movsb
ficompl
cmovnp
or
pushf
fsubrs
push
dec
daa
sub
test
mov
pushf
mov
sub
lahf
stc
jnp
jmp
and
popa
mov
les
inc
pusha
sti
add
jae
lods
test
and
inc
adc
fwait
cmpsl
push
pushf
fs
fmul
fwait
cmp
sbb
and
jl
mov
jp
dec
xchg
aaa
mov
lea
into
sub
push
pop
insb
adc
pop
adc
mov
aas
cltd
mov
out
mov
inc
cli
push
adc
fiaddl
js
stos
sahf
xchg
add
push
inc
or
jl
push
xchg
sbb
mov
mov
xchg
scas
pop
sahf
movsl
mov
and
fcoml
dec
cmp
push
inc
lds
jo
adcb
inc
out
out
jle
pop
add
mov
outsl
inc
leave
cmp
insl
fadd
sbb
dec
sahf
dec
test
insb
mov
push
xchg
xchg
dec
cmp
xchg
add
std
sbb
jo
hlt
add
xchg
mov
mov
imul
sub
cmp
out
cmp
outsl
push
push
popf
cwtl
movsl
shl
loopne
mov
sti
nop
xchg
or
mov
jle
dec
sub
pop
cmp
mov
test
or
mov
ss
sbb
or
and
pop
fsubrl
cmp
mov
daa
cmp
cltd
cmc
and
pop
adc
dec
dec
cmp
mov
subl
clc
aad
sub
ret
in
or
xor
xchg
mov
xchg
fistps
mov
and
jle
mov
xor
repz
cmp
push
pop
fdivrl
rolb
hlt
loope
data16
adc
or
jecxz
addr16
xchg
push
call
push
mov
int3
aaa
cmp
lret
push
or
lcall
insl
add
icebp
bound
stos
ja
ret
mov
pushf
cmp
imul
dec
aad
negb
dec
rorl
fidivs
jge
jge
sti
repnz
sahf
sub
negb
ret
xchg
movsl
mov
ret
fisubrl
daa
repz
mov
out
cmp
mov
mov
imul
mov
sbb
not
xor
push
push
mov
fs
out
adc
xchg
cmpsb
sub
rcrb
sub
fisubrs
adc
mov
repnz
imul
dec
push
inc
enter
jae
xor
jbe
sub
popf
adc
cmp
in
sbb
ret
lea
pop
fidivl
or
lea
jo
and
in
fs
xchg
pusha
fwait
ljmp
sub
dec
mov
jae
pop
stos
call
in
xor
insl
xor
jecxz
arpl
cmpsl
xor
dec
cwtl
add
add
into
adc
pop
pop
in
imul
test
push
sahf
outsl
xchg
mov
bswap
std
enter
imul
mov
ret
or
mov
push
sarb
addr16
cmp
imul
rolb
adc
mov
popl
pop
adc
lahf
xchg
or
or
xchg
shll
and
xor
xor
arpl
mov
enter
pop
and
xchg
stos
sti
xlat
push
sahf
rcpps
xchg
jle
jp
shlb
and
cmp
or
jbe
test
lcall
es
pop
cmp
pop
pop
and
into
fistpll
mov
pop
push
mov
add
cmc
fisubrs
ss
jl
ss
sbbb
int3
inc
jo
adc
jl
mov
in
lea
inc
andb
lods
or
mov
jp
pop
add
pushf
sub
jg
ret
adc
adc
jnp
loope
cmp
lock
lods
jns
enter
mov
cmpl
repnz
je
sub
std
das
inc
add
jmp
mov
jnp
mov
cli
push
sbb
sahf
inc
add
xor
mov
jge
clc
repz
adc
lahf
mov
push
lret
popf
cld
add
hlt
and
fisubs
xchg
push
insb
aas
cmc
jbe
mov
lock
lret
xchg
in
cmp
mov
jne
repnz
imul
cmp
int
push
and
inc
push
push
xor
and
inc
or
inc
inc
ret
insl
jle
cltd
mov
mov
loope
or
sti
insb
sbb
test
push
ds
adc
js
inc
sti
insl
inc
xlat
mov
std
mov
lret
fisubs
mov
enter
idiv
inc
mov
push
adc
jne
shlb
test
xor
ljmp
movsl
cmpsl
fsqrt
jno
or
or
stc
cmp
push
es
fcomps
repz
loop
cmp
jecxz
lock
loope
and
xor
mov
test
std
push
lock
xor
sbb
cmpsl
fwait
jno
jae
mov
pushf
outsb
jo
xchg
sahf
lea
test
cmpsl
nop
dec
out
and
sub
pop
xor
ret
mov
dec
sub
stc
sbb
cmp
sahf
aam
imul
pop
cmpl
aas
mov
lret
sub
sahf
sub
aaa
pop
hlt
sbb
adc
nop
inc
faddp
mov
or
mov
out
push
pop
or
xor
cwtl
sub
cmpsb
and
das
inc
aam
mov
push
inc
fistpll
lods
mov
and
add
add
dec
xchg
ja
xor
pop
inc
mov
jne
pop
push
je
adc
sbb
test
add
and
jmp
jmp
js
inc
icebp
push
sbb
pop
arpl
sub
imul
mov
out
test
imul
add
sbb
ftst
sbb
movsl
jo
sbb
test
xchg
je
add
xor
push
jecxz
mov
ret
loopne
push
subps
adc
in
dec
mov
add
pop
stos
std
fwait
jg
sub
ret
jmp
xor
in
jns
inc
mov
or
test
mov
or
inc
inc
mov
mov
loopne
mov
test
frstor
out
aam
inc
das
fcmovnb
je
sbb
je
mov
es
pop
xchg
into
mov
mov
add
sub
push
xchg
leave
cli
adc
xor
pop
mov
repz
fstpl
jo
das
pop
xchg
fsts
pushf
fiaddl
in
push
in
adc
subl
mov
aad
mov
sbb
testb
jmp
pop
aaa
leave
and
out
out
ret
leave
sbb
dec
subb
int
fidivs
addr16
sbb
sub
xchg
mov
mov
sbb
adcl
sub
xchg
rcrb
mov
lea
fsubrp
and
enter
loope
mov
sahf
lcall
or
mov
loope
lds
mov
hlt
cmc
testb
repz
ljmp
or
mov
data16
or
push
cs
fwait
shlb
jae,pn
daa
mov
jno
test
adc
push
imul
adc
jbe
add
adc
jnp
or
iret
xor
push
and
repnz
jle
testb
stc
mov
pop
push
cmp
inc
call
popa
jg
or
lds
sbb
popf
call
and
pop
mov
mov
cmpl
les
ja
push
mov
fsubl
pop
push
adcl
or
and
push
test
les
rcll
scas
test
mov
and
out
hlt
test
sar
mov
jne
jne
xor
pop
lea
inc
inc
jmp
subl
mov
scas
mov
mov
cwtl
ret
test
lret
outsl
inc
push
neg
iret
es
dec
mov
orb
and
inc
aam
testb
pop
je
jo
jns
adc
mov
inc
adc
dec
mov
mov
mov
es
cs
stc
mov
cmp
mov
das
movsl
fdivrl
add
bound
lret
mov
out
dec
ret
loop
jl
cmp
or
data16
cmp
test
push
jmp
mov
push
xchg
jg
loopne
stos
sub
sbb
mov
add
add
push
loop
sbb
jno
nop
mov
stos
xchg
hlt
mov
mov
add
mov
outsl
insl
mov
data16
push
out
repnz
cli
cmp
inc
jns
push
aaa
je
mov
in
xor
add
repz
rolb
dec
pop
or
movsb
rcl
cmp
enter
xlat
add
aas
mov
sbb
dec
cmp
mov
or
add
xlat
mov
in
outsl
cli
cmc
ror
mov
jbe
cmp
cli
cmc
orb
imul
sub
cmp
sbb
jo
fimuls
mov
popf
pop
dec
push
inc
push
push
das
lods
mov
xchg
test
std
repz
jo
sub
mov
std
movsb
dec
sub
pop
mov
xchg
jae
aam
push
pop
sbb
in
lea
jle
pop
cmp
pusha
sti
not
mov
loopne
mov
mov
dec
xchg
adc
push
clc
adcl
pop
das
push
std
xchg
iret
push
and
push
pop
sub
add
rolb
aaa
and
and
jo
lock
cmpsb
fs
xlat
out
push
loope
das
call
in
outsb
xchg
and
adc
xor
ljmp
scas
push
aas
icebp
insb
js
sbb
add
push
dec
cmp
mov
mov
fsubr
outsb
jbe
testl
dec
inc
scas
shll
xchg
cmp
and
cmp
sahf
je
and
pop
add
aad
leave
lds
or
sub
sub
adc
ret
push
iret
inc
xlat
pop
mov
sbb
lods
mov
or
cmpsl
or
rcll
lcall
mov
ror
cmpsb
mov
aas
jmp
dec
rolb
fmul
and
xlat
je
je
insl
jmp
sub
addr16
xor
mov
iret
mov
hlt
repnz
fisubrs
out
xchg
incl
es
into
std
hlt
repnz
mov
lcall
sbb
ret
push
xchg
mov
mov
movsl
mov
ret
lock
cli
jb
xor
lods
mov
out
setnp
je
jno
sbb
aas
or
adc
sbbl
cmpsb
push
xor
ret
inc
push
mov
or
xchg
adc
xchg
adc
test
jae
aam
insb
jl
sbbb
mov
mov
push
and
stos
repnz
push
das
xor
das
cld
cmp
mov
push
xor
stos
push
lret
out
aam
ja
aam
fldl
cld
jmp
push
test
pusha
rcr
int3
mov
sub
jmp
add
jle
push
mov
fstpl
das
mov
dec
ljmp
push
dec
xchg
fimuls
add
mov
mov
ret
clc
pop
aam
push
jb
jno
mov
xor
inc
out
rclb
mov
push
ds
fidivs
jbe
push
adc
in
movsb
pop
inc
and
mov
xchg
or
dec
or
std
mov
ficompl
lds
fcmovbe
mov
fimuls
int3
add
pop
pop
movsl
pushl
jb
or
sbb
or
clc
lods
push
dec
icebp
sbb
xchg
and
add
sub
adc
sti
xchg
mov
iret
push
sub
lret
lcall
out
jb
mov
rorb
test
mov
add
movsl
test
xor
ljmp
shlb
leave
xchg
test
lods
or
sub
mov
mov
and
lahf
xchg
add
mov
mov
div
insb
sub
sub
adc
push
test
or
aam
add
test
jae
das
adc
into
cmp
mov
push
andb
push
imull
fstl
lods
into
cltd
pop
sbb
lret
mov
add
jae
enter
test
push
cmpsb
imul
sub
div
insl
cmp
adc
sub
popa
test
xchg
and
adc
jns
lock
jb
aam
andb
dec
jl
arpl
roll
inc
sbb
fisttpl
inc
mov
aad
sbb
jae
loopne
mov
push
rcll
or
subl
lret
imul
inc
aaa
dec
ss
inc
push
push
xlat
dec
repnz
sbbl
mov
cmp
or
subb
insl
or
adc
sbbb
mov
lds
test
lods
xchg
sbb
lock
add
cmp
xchg
mov
fildl
pop
lahf
jns
sbb
xor
fucomp
movb
push
jmp
adc
notl
in
inc
inc
pop
jb
jp
icebp
and
sub
sbb
mov
sbb
fldenv
cmpsb
sahf
and
xchg
mov
xorl
mov
movsb
or
adc
jge
cwtl
or
and
jns
pop
xchg
xchg
push
cmpsb
pop
sbb
inc
cld
push
mov
xchg
aad
daa
loopne
dec
popa
jae
dec
mov
push
imul
jne
enterw
test
push
andb
dec
adc
cli
test
jg
push
jge
jp
pop
jb
lret
mov
push
mov
rorb
xchg
mov
pop
addb
pop
mov
or
cmpsl
xchg
push
roll
ucomiss
jp
in
sub
xchg
andl
inc
test
pop
xor
fs
pop
xor
jmp
push
sbb
insl
sub
pop
arpl
xor
add
inc
sahf
or
cld
and
push
mov
stc
sub
cmp
mov
or
scas
test
movsb
call
in
out
movsl
jnp
lcall
test
adc
sub
mov
movsb
sub
or
in
add
aam
push
sbb
ja,pn
pop
lock
stc
arpl
mov
arpl
add
add
pop
sbb
jne
rorl
push
mov
ljmp
mov
mov
and
lods
cmp
shrb
xor
test
daa
pop
aam
test
sahf
shll
dec
or
clc
stc
out
cli
push
adc
aam
lret
and
aaa
loope
jne
cltd
lods
addr16
jns
pop
xor
iret
ror
xorl
jle
out
je
js
pop
cmp
adc
dec
cmp
daa
dec
jl
jae
jg
ljmp
dec
repz
push
imul
daa
dec
sub
lods
cmpsb
or
sarb
shll
ja
xor
sbb
and
mov
sub
movl
int3
imul
test
and
lods
cmc
adc
jmp
data16
jle
or
adc
inc
mov
push
shrl
and
mov
scas
addr16
and
shll
sbb
data16
xor
int
sub
jae
outsb
pop
adc
xor
icebp
mov
inc
pop
in
xchg
xchg
ret
jnp
daa
int3
lds
xlat
mov
inc
sbb
sub
sub
jg
mov
arpl
cmp
jno
stos
cwtl
dec
into
out
jg
mov
test
xor
out
lods
jb
or
push
lahf
inc
aas
push
shll
xchg
out
add
cmp
leave
pushf
ja
stos
ljmp
jmp
mov
insl
mov
and
mov
push
insl
jl
daa
inc
inc
adc
rcl
mov
roll
rorl
mov
mov
test
imul
sub
push
adc
imul
int
loope
psubw
addl
jnp
rol
or
ret
js
ja
cmc
gs
cmp
sbb
into
lahf
and
idiv
ljmp
or
sub
jbe
xor
push
loop
push
ret
addl
mov
adcb
xchg
mov
in
xchg
push
pop
ljmp
adc
jmp
jmp
push
gs
push
loope
sbbb
or
out
lock
jl
and
pop
inc
mov
xor
dec
mov
movsl
ret
xor
out
or
lret
mov
push
neg
adc
push
push
cmp
sbbl
jae
clc
int3
popf
out
cmp
test
add
sbb
out
sbb
int
push
push
xchg
jo
push
add
popa
push
outsl
adc
in
cltd
pop
pop
xchg
adc
sbb
add
icebp
jge
mov
mov
mov
iret
aad
mov
cwtl
pop
insl
pop
sti
pop
popa
mov
jecxz
mov
mov
adc
and
filds
jo
js
inc
lock
mov
mov
clc
adc
dec
jle
add
inc
mov
pop
pop
mov
add
outsb
mov
cmpsb
addl
mov
xchg
jmp
mov
js
and
mov
mov
inc
or
jmp
aas
sbb
push
or
and
cmp
pop
mov
ss
mov
cltd
push
xor
loopne
in
dec
in
in
imul
cmp
mov
push
or
scas
push
dec
cld
icebp
lea
stos
aas
rclb
jle
test
pop
push
in
xor
lret
ret
stos
mulb
or
cld
or
outsl
push
cltd
fwait
lods
dec
mov
lret
xlat
out
jmp
inc
ja
sub
pop
imul
fcmovu
push
xchg
xor
inc
shrb
push
cmpsl
lcall
movsb
add
sub
repnz
inc
push
fstps
repz
data16
mov
insb
cmp
pop
jle
lahf
cmp
pop
mov
aam
shlb
roll
cld
js
inc
fistpl
outsl
or
adc
popf
dec
add
xchg
push
icebp
in
fstps
leave
adc
mov
xchg
aaa
push
xor
or
jnp
cmp
xchg
ss
or
or
sbb
fldenv
out
fstpt
adc
cld
mov
out
push
mov
jns
cwtl
std
jmp
lea
adc
mov
add
insl
pop
incl
fsubl
sti
jb
insl
mov
enter
mov
sub
xchg
or
fistpll
mov
push
iret
sbb
adc
cmp
stos
adc
sub
jle
lahf
stos
pop
insb
sub
leave
popf
cltd
mov
jl
inc
xchg
lea
mov
loop
and
adc
xor
daa
cmp
push
and
inc
adc
popf
dec
cwtl
ljmp
aas
fisubrs
mov
lahf
popa
out
push
push
fwait
mov
cmp
sub
test
aas
cmpsb
gs
aad
cld
cmp
jns
iret
mov
repz
cmpsb
imul
mov
sahf
loope
pushf
fsub
mov
movsb
xor
rcl
daa
call
inc
mov
roll
dec
ljmp
mov
out
test
test
mov
loopne
stos
add
test
push
cmp
push
jg
dec
xchg
or
or
adc
adc
or
pop
xor
popf
push
or
jno
inc
xor
sbb
xchg
adc
test
mov
cmpsl
jnp
mov
cmp
jmp
jge
push
inc
mov
ja
xor
movsl
adc
sub
imul
mov
adc
insl
pop
jp
adc
or
fdivs
fadd
mov
lock
sahf
fs
xor
pop
fstpl
xor
fwait
mov
xchg
jmp
xchg
ljmp
sbb
rcll
mov
pop
add
add
aas
es
jae
test
or
addr16
xchg
loope
in
jns
push
adcl
out
mov
pop
pop
enter
or
xor
cld
xchg
or
mov
jmp
cpuid
cmp
scas
dec
xchg
loope
mov
daa
rolb
xchg
imul
loope
icebp
jno
xor
sub
movsb
jns
sbb
aaa
add
leave
cvttps2pi
arpl
push
ret
adc
lahf
scas
movsb
bound
ja
aaa
and
mov
pop
arpl
leave
xchg
mov
shrl
mov
pusha
jmp
mov
pusha
rcrl
and
mov
rol
ficoml
jl
mov
rol
loop,pt
mov
pop
imul
stos
push
push
push
mov
fucomp
cwtl
cmp
jmp
and
andl
sbb
gs
push
and
and
pop
mul
je
push
call
out
mov
into
ja
iret
inc
adc
inc
xor
cmpb
imul
push
je,pn
cmp
inc
fisubl
scas
pop
fwait
mov
fildll
cwtl
add
mov
add
mov
mov
cmp
dec
jbe
iret
leave
jns
xchg
mov
jmp
push
lods
sbb
pop
jo
sub
jle
and
push
out
cli
daa
xchg
aad
add
mov
mov
sarb
or
inc
out
hlt
stos
ret
push
cs
add
cmp
mov
insl
outsl
xchg
push
test
push
stc
push
inc
mov
adc
mov
dec
sub
xlat
imulb
stos
add
jle
adc
pusha
jge
pop
iret
pop
pop
jb
sbb
push
outsl
popw
mov
test
inc
call
xlat
dec
les
pusha
push
enter
rcrb
cmp
les
mov
sbb
mov
jns
sbb
das
inc
sbb
and
dec
dec
xchg
and
dec
and
test
filds
sbb
idivl
push
call
fsubl
mov
cltd
pop
neg
mov
aad
lods
jp
jl
inc
pop
imul
xchg
push
and
mov
push
xor
pop
in
popa
xchg
shr
lock
or
inc
cli
xlat
shrl
lds
cld
divb
cmc
dec
jne
fldl
movsl
mov
xor
in
inc
clc
xchg
stos
jno
or
pusha
pop
cmpsl
mov
adcb
lea
mul
sub
add
jp
insb
mov
add
cmpl
sahf
jne
call
xchg
push
sbb
stos
jg
or
stos
jns
outsb
and
in
xchg
lock
lods
out
dec
pusha
cmpsl
sbb
stc
mov
add
cmpsb
adc
das
mov
dec
out
add
pop
icebp
xchg
adc
arpl
and
sbbl
adc
or
imul
cmc
mov
cmp
out
int3
hlt
movsl
inc
orl
push
std
mov
lods
inc
sbb
pushl
add
enter
sbb
jae
lret
gs
paddb
sub
jb
icebp
xchg
das
pop
dec
xor
push
outsl
jmp
mov
adc
in
xchg
push
out
loop
popa
aaa
orl
lret
pop
lcall
xlat
test
cmpsb
pop
add
mov
and
mov
xor
mov
mov
dec
int
in
or
jl
mov
cmc
subb
cld
shlb
push
mov
push
cld
out
shl
mov
ljmp
mov
out
aad
imul
cltd
xchg
cmp
cmp
pop
pop
dec
cmpl
pop
sbb
push
es
add
sub
push
enter
push
popf
rclb
call
fistl
faddl
add
gs
push
sbb
mov
push
movsl
sahf
mov
out
cli
adcb
xchg
out
addr16
mov
or
dec
movsl
push
scas
lods
sar
fisubrl
jle
or
jo
pop
dec
lea
sub
lock
add
xchg
mov
ret
in
dec
inc
bound
cltd
lret
in
dec
scas
mov
add
in
cmp
and
pop
aad
fisttpl
mov
and
icebp
jmp
or
mov
pop
or
push
pop
call
jmp
fcmovnb
pushf
nop
popa
jmp
out
scas
test
lds
enter
fiaddl
ret
jnp
dec
inc
hlt
xor
dec
fnstenv
movsl
cmp
cmp
mov
mov
imull
sub
push
xchg
mov
jb
mov
test
push
sahf
jo
mov
sbb
sub
mov
inc
sub
sti
leave
add
push
fwait
mov
xchg
mov
inc
test
das
and
out
fst
jae
mov
gs
stc
lret
and
xor
fidivrl
fcoml
dec
loope
mov
cmp
insb
dec
inc
jb
mov
insb
push
shlb
sbb
mov
popf
out
inc
sbb
cmp
scas
jcxz,pn
sbb
repnz
int3
pause
into
ret
lods
or
aam
mov
dec
outsl
mov
nop
mov
subl
les
aas
ret
in
shll
call
sbb
std
in
loope
cmpsb
rolb
push
mov
addr16
push
jmp
push
in
push
lahf
cmp
mov
movsb
lea
push
fstps
lds
nop
adc
in
xor
test
or
xchg
mov
sbb
dec
add
sbb
adc
mov
pop
cmp
dec
adc
cwtl
sub
xchg
jecxz
xchg
leave
cmp
scas
jb
push
adc
pop
or
repnz
cmp
push
and
in
les
mov
cmpsb
frstor
fdiv
xchg
fdivp
adc
cs
icebp
fistpl
pop
push
lds
mov
sahf
add
mov
push
inc
shr
push
xor
arpl
or
inc
sub
adcl
mov
inc
adc
jb
sbb
cli
sahf
add
faddl
mov
jle
xchg
cld
mov
adc
pop
jecxz
pmulhuw
popa
push
push
push
fstl
inc
mov
mov
mov
loope
xor
inc
ja
rcr
sub
lea
xor
add
and
or
and
cmpsl
cmpsb
outsb
pop
aam
lods
call
pushf
xor
es
lea
mov
repz
ftst
outsl
jle
push
lds
jno
inc
cwtl
xchg
jge
push
dec
outsl
iret
xor
adc
xchg
aad
adc
into
add
and
pop
rcrl
sahf
add
adc
fcmovnb
arpl
rcrb
jmp
dec
mov
popa
jb
sahf
frstor
dec
js
bound
sub
ljmp
iret
out
add
cmp
xchg
shlb
sahf
jp
divl
jo
jo
sub
mov
ja
cltd
adc
xor
aad
adc
adc
jmp
cmpsb
mov
popa
stc
pop
jmp
jbe
out
and
mov
dec
mov
inc
add
popf
ret
push
adc
adc
mov
add
icebp
inc
lea
daa
call
pop
or
add
movsl
jp
push
push
cmp
inc
cmp
in
jg
scas
or
cmp
mov
jnp
or
cltd
sub
push
leave
leave
mov
or
push
mov
je
sub
in
sbb
push
arpl
fsubrl
testb
mov
dec
add
inc
or
std
dec
roll
sub
sbb
mov
aaa
mov
orb
sbb
pop
sti
push
pop
das
mov
jbe
or
in
test
int
aaa
int
inc
mov
add
fdivr
ja
mov
loope
mov
or
dec
loope
rep
ja
sbb
pop
or
stc
lds
jb
fs
rorb
push
pop
je
push
push
dec
push
scas
mov
inc
sub
fsubrs
lret
mov
scas
jbe
gs
xchg
jp
inc
push
adc
bound
or
lods
ljmp
mov
in
adc
sar
icebp
xor
cmp
pop
cmp
mov
inc
push
out
lret
or
iret
adc
cmp
inc
sub
sbb
dec
clc
pop
mov
cmp
cs
sub
mov
sub
cmp
rol
loopne
and
push
stos
ljmp
jecxz
dec
jecxz
dec
mov
mov
xor
xor
loop
mov
test
aam
and
pop
dec
ljmp
cmp
jno
add
outsb
negl
cltd
mov
add
repnz
negb
sub
fldl
jno
and
test
movsl
enter
sub
or
push
mov
gs
stos
sub
fisubs
sbb
rolb
mov
cmp
fbstp
aam
sti
js
or
mov
inc
adc
xor
aaa
jmp
pushf
xor
cmc
xlat
ja
and
mov
add
sub
adc
and
inc
mov
movsl
into
je
call
pop
fsts
ss
fidivrl
test
shl
sub
test
and
cmp
test
pusha
mov
movsl
pop
inc
outsb
lret
or
lahf
xchg
movsl
repz
add
cmpl
xorb
fwait
mov
lret
or
ss
insl
dec
shlb
mov
inc
or
mov
imul
pushf
xchg
call
das
in
bound
ss
scas
and
sub
sub
jge
sti
lock
xrelease
xorl
cwtl
in
add
shlb
fcmovne
jns
mov
int3
adc
jp
xor
pop
gs
aas
mov
in
outsb
mov
xchg
sbb
and
adc
dec
fildll
mov
out
sbb
test
je
inc
jg
imulb
lods
xchg
cwtl
ds
pop
and
shll
mov
orl
add
add
out
adc
ds
adcl
xchg
pop
dec
stc
xor
dec
lock
fldenv
cmp
imul
enter
addr16
lock
push
pop
pop
mov
sarb
lea
icebp
jecxz
in
cmpsb
inc
mov
and
cmp
sub
cmp
and
loope
ss
icebp
adc
scas
mov
ja
and
pushf
lock
data16
decb
out
push
lret
xchg
pop
or
mov
xor
inc
mov
mov
lahf
add
mov
jbe
pop
pop
ret
clc
ss
adc
in
pop
mov
das
femms
dec
xchg
movsl
cld
out
das
imul
nop
stc
aaa
mov
mov
sti
or
fidivrs
repnz
es
ljmp
xor
into
movsb
stos
aad
out
scas
mov
out
sbb
repz
or
jl
dec
pop
dec
or
push
pusha
mov
mov
inc
jo
push
inc
rcrl
inc
mov
push
lret
push
stos
push
jmp
in
mov
xor
sub
mov
lds
insl
stos
mov
mov
inc
mov
stos
pop
add
ljmp
lods
scas
fwait
int3
enter
add
xor
dec
jne
inc
daa
lahf
or
or
pop
push
jmp
xchg
sub
mov
mov
ret
dec
push
imul
mov
and
push
mov
xor
arpl
sub
imul
ficoms
and
pusha
dec
iret
clc
xchg
test
loopne
lret
jbe
push
loop
shl
mov
adc
xor
cs
out
sbb
int3
xchg
ret
dec
inc
xor
lahf
pushf
pop
pushf
ret
sti
scas
sti
or
jns
mov
movl
stos
sbb
cwtl
mov
pop
in
clc
dec
lock
xchg
push
aam
xchg
insl
ds
out
cli
dec
inc
cmp
xor
and
mov
into
cs
sub
adc
adc
add
push
jne
fsubrs
loopne
imul
push
sub
dec
jae
scas
or
testl
outsb
jb
out
enter
in
cmp
inc
jp
sbb
es
aaa
sub
pop
push
jl
bound
out
mov
flds
data16
xchg
movsl
int
loopne
add
sub
mov
pop
inc
imul
mov
ss
pop
popa
xchg
enter
mov
xor
stos
call
or
aas
inc
xor
dec
stos
pop
push
pusha
xchg
mov
push
sub
imul
jns
adc
sbb
adcl
leave
or
hlt
sbb
mov
test
lret
je
lds
cmpsb
in
mov
inc
or
mov
xor
jmp
sarl
jecxz
rol
cmpsl
ljmp
js
js
xor
inc
mov
mov
mov
mov
das
das
adc
xor
or
xchg
push
jns
jns
out
data16
cmp
cmp
lret
scas
cmp
mov
roll
lock
xchg
jns
es
out
icebp
pop
or
ret
push
test
sub
sbb
scas
xor
ljmp
mov
dec
jecxz
idiv
cmpb
jg
sbb
and
pop
jno
stos
int3
lds
int
push
jp
or
xchg
fistpl
dec
loop
pushf
xor
adc
mov
pop
mov
mov
xor
test
cs
sub
fidivrl
mov
xchg
ror
div
jbe
in
push
xchg
xor
mov
lea
xor
lea
aam
ds
aaa
mov
jecxz
dec
or
adc
sti
lds
into
outsb
xor
inc
mov
cmp
cmp
mov
test
cmp
push
into
testl
inc
divl
pop
xchg
pop
popf
pop
cmpsl
ror
mov
dec
out
xchg
jb
mov
nop
push
out
and
stos
fcoms
pop
mov
sub
das
push
pop
lock
es
rcr
jmp
xor
sti
sahf
or
mov
dec
or
inc
outsb
mov
test
popf
push
jnp
pop
mov
cltd
js
mov
movsl
push
loope
cmp
hlt
test
orb
push
xor
aas
icebp
xor
inc
xor
inc
cmp
aas
and
inc
xchg
and
jg
sahf
repnz
xchg
pop
fs
inc
xchg
nop
xor
icebp
pop
das
and
add
fstpt
xchg
xor
jae
in
cmpsl
fnstcw
insb
dec
add
hlt
out
mov
sub
out
in
enter
popa
out
push
test
sub
stos
mov
inc
adc
faddl
sbb
and
jne
cmp
jnp
pop
mov
pop
movsl
stos
mov
data16
imul
sbb
rcrb
push
jae
mov
into
add
pusha
dec
push
jmp
imul
outsl
sub
inc
bound
cs
inc
inc
gs
scas
scas
push
xchg
popl
scas
or
fisubrs
mov
mov
jb
cmp
sbb
sbb
push
popa
out
mov
adc
add
scas
pop
dec
dec
xor
cli
dec
cmp
notb
xor
adc
aad
icebp
daa
fsubs
outsl
vshufps
insl
pop
daa
lret
int3
and
loope
ret
cmp
sbb
cmpl
movsb
test
aad
push
test
lahf
gs
lahf
pop
es
cmpsl
insb
cmp
sarb
mov
xchg
xchg
and
pop
push
inc
int
dec
inc
popa
sbb
in
inc
fdivr
dec
inc
mov
dec
pop
ds
push
sub
sbb
les
adcb
and
out
call
jne
icebp
lret
cmp
ljmp
xchg
ret
sbb
mov
push
lods
sub
ss
in
out
jne
sahf
jae
sahf
adcb
test
ficoms
fwait
sbb
pop
ficomps
cmpsb
push
sub
mov
cmp
mov
pop
idivb
pop
inc
movsb
adc
insb
test
sbb
jp,pt
push
pop
mov
les
dec
xchg
pop
sbb
xchg
int3
push
jnp
xor
push
scas
jnp
popa
retw
ljmp
inc
lcall
push
push
cmpsb
enter
shl
jb
fcoml
cmp
add
ret
mov
jecxz
data16
add
push
jp
stos
gs
dec
inc
dec
inc
jmp
xor
sub
in
pop
ret
sub
fdivs
nop
mov
lds
das
cmpsb
push
mov
cmp
inc
lahf
sbb
js
rcr
and
aam
sub
fdiv
ljmp
and
pop
popa
outsl
mov
mov
pop
cmpsl
push
push
cmp
pop
push
inc
sarl
rorb
sub
ret
pushf
pusha
inc
mov
push
jb
and
cmp
mov
add
test
mull
sub
add
xor
inc
or
add
mov
mov
push
leave
js
sti
inc
icebp
add
jb
test
imul
jmp
mov
xchg
insb
outsl
pop
roll
sub
xchg
and
roll
pushf
jle
stc
cs
fsub
adc
mov
int
cmc
dec
icebp
cmp
xchg
jmp
sub
les
rol
mov
jmp
jp
andl
imul
pop
addr16
dec
push
repnz
xchg
and
pop
pop
aad
imul
push
jne
call
dec
test
lcall
stc
cwtl
jbe
lahf
sbb
mov
das
fcmovbe
sbb
in
icebp
xchg
fsubr
das
mov
daa
cwtl
in
std
jecxz
jo
hlt
mov
mov
dec
imul
pop
repnz
inc
stos
fists
movl
cwtl
cmp
cmp
xchg
rorl
ret
test
imul
push
xor
and
cmp
rolb
jle
and
shlb
push
ror
jo
fldl
lahf
aas
mulb
jae
into
jecxz
add
lcall
or
push
xchg
popa
push
addr16
dec
mov
xchg
push
dec
jmp
xor
cmp
pop
call
push
adc
and
jae
lods
out
jns
ret
xor
mov
jae
das
ds
or
sbb
adc
or
out
loope
popa
aam
xor
add
inc
adc
je
imul
xor
jns
addr16
in
push
ljmp
or
ljmp
dec
into
fisubrl
pop
lods
mov
test
leave
xor
test
scas
inc
sub
sbb
or
cmp
js
adcb
xchg
lds
addr16
xor
mov
pop
je
lret
jne
ret
xchg
ljmp
iret
adc
cmp
sahf
daa
stc
push
pop
in
iret
testb
test
and
lock
xchg
aam
sbb
mov
stos
mov
arpl
je
cmpsb
xchg
gs
push
rcrb
mov
shl
or
dec
cmpsb
add
add
push
shlb
pop
lock
xor
cmpsl
imull
mov
pop
shll
jns
subb
mov
iret
or
jne
mov
sbb
jae
fldl
mov
mov
mov
xor
push
inc
mov
in
dec
add
adc
imul
stos
or
mov
jo
add
insb
jl
jns
pop
cmc
addr16
cli
cwtl
aam
cli
or
push
and
xor
mov
lea
mov
or
jae
lods
pusha
lret
jecxz
pop
pop
stc
add
xchg
loope
inc
adc
cmpsb
pop
gs
xor
sub
popf
dec
jbe
nop
cwtl
sub
sbb
mov
sbb
in
jo
and
and
test
add
sbb
leave
inc
adc
adc
mov
pop
push
ljmp
insl
xlat
pop
cld
jo
and
lea
scas
fcomps
fwait
imul
ret
ss
mov
dec
push
shll
ds
lea
hlt
insl
xlat
nop
and
dec
pusha
pushf
ficomps
lea
outsl
out
xchg
adc
mov
orl
outsb
sub
xor
test
jns
pop
cwtl
xor
and
roll
push
call
aam
gs
lods
or
stos
jno
sarl
xchg
jmp
inc
ficompl
xchg
aaa
mov
push
push
xchg
pop
dec
jmp
adc
in
ja
or
in
xchg
int
mov
pop
or
jne
adc
in
mov
ss
inc
aas
loopne
ret
hlt
jge
aad
adc
das
mov
rorl
insl
lods
mov
mov
xchg
cmp
jle
adc
xor
test
rorl
add
jg
aad
jo
movsl
out
add
or
out
mov
out
pop
neg
xlat
xchg
jp
cmp
repz
testl
test
jmp
lods
js
mov
sub
adc
and
push
fnstsw
sbb
popa
loopne
pusha
mov
popf
lods
fsts
sbb
mov
in
cmp
mov
adcl
int3
test
xor
jl
sub
sarl
ret
mov
pop
sub
cmp
push
mov
sub
inc
lcall
push
mov
dec
lcall
fstps
fstpl
add
cmp
imull
addr16
add
nop
mov
loopne
mov
orl
imul
push
dec
orb
les
add
test
loopne
mov
sbb
ret
cmpsl
xchg
ror
mov
nop
push
push
loopne
outsb
pushfw
jns
mov
xchg
fiadds
jns
add
adc
and
pop
rorl
jne
out
into
dec
test
mov
adc
cwtl
mov
xchg
add
sbb
test
lcall
jae
pop
es
pop
dec
pop
adc
lods
stos
lcall
shll
dec
fcmovb
push
ror
inc
stc
mov
cld
jmp
adc
inc
push
jno
sub
xchg
mov
and
mov
mov
pushf
decl
cmpsl
loopne
cmp
xor
stc
mov
sub
lcall
push
or
push
xchg
int
push
add
arpl
push
outsb
fnsave
and
into
xchg
push
les
sbb
loope
movb
jmp
es
shl
cmp
jae
mov
mov
lea
hlt
fwait
pop
mov
inc
pushw
js
cs
mov
lret
push
jno
pop
and
and
enter
dec
add
or
adc
mov
rol
push
pusha
loope
in
xor
insl
mov
cmc
xor
jge
repz
fsubs
and
xor
mov
inc
or
popf
cmpsl
scas
out
jbe
flds
push
pcmpeqd
inc
pop
lahf
outsl
cmp
push
pop
leave
imul
sbb
lret
lret
mov
add
fstpl
mov
lcall
fs
addr16
push
cmove
clc
pop
sbb
data16
jp
mov
mov
int3
add
xor
les
push
pop
push
jl
jg
mov
test
cmp
imull
ljmp
pop
or
mov
fbstp
cmc
xchg
pop
jne
sub
add
pop
xlat
sahf
pop
scas
add
les
leave
insb
jecxz
arpl
aaa
pop
ficoms
xor
push
es
and
pushf
and
test
mov
iret
mov
loopne
and
push
xchg
xchg
cmp
in
scas
pop
sbb
aaa
sti
dec
incl
push
pop
dec
sbb
sub
dec
mov
jno
pop
in
push
xlat
cmp
adc
mov
shr
mul
jmp
mov
add
lcall
jns
adc
xor
mov
sbb
fnsave
xor
xchg
enter
mul
nop
jb
cmp
cwtl
pusha
orb
push
scas
add
inc
sub
ljmp
ret
push
jno
or
or
pop
insl
dec
sub
cmp
sub
ret
mov
dec
cmc
call
jns
jecxz
popa
jno
fwait
mov
xor
inc
cmpsb
or
adc
fxch
pop
loope
cli
in
ljmp
jmp
repz
jo
insb
test
repnz
imul
mov
fisttps
lcall
lret
mov
xor
imul
lcall
mov
xchg
xchg
imul
inc
xchg
aas
mov
stos
dec
sub
cmp
pop
shl
lea
jp
or
loop
dec
sti
fsubs
imul
and
ret
leave
pop
fcompl
mov
or
add
cld
push
xchg
mov
mov
and
enter
ret
and
fwait
mov
int
repz
test
fstp
adc
mov
out
shl
push
mov
mov
xor
jne
push
sub
cmp
aam
scas
movsl
shlb
adc
cmp
mov
xchg
push
mov
dec
int
lods
jmp
int3
mov
negl
xor
jnp
dec
mov
aad
fincstp
mov
adc
into
ret
rorl
jl
and
mov
mov
mov
les
sub
cmp
jmp
fwait
xlat
jge
mov
dec
out
inc
sbb
and
sahf
loop
push
loopne
xchg
adc
push
sbb
stc
and
mov
leave
pop
test
out
ds
pop
cmp
mov
insl
push
mov
negl
xchg
stc
jg
pop
mov
xor
ret
push
xchg
push
pop
cmp
sub
jg
int
fiaddl
jmp
xor
or
insl
enter
mov
mov
enter
lcall
test
adc
je
addl
pop
js
adc
aaa
jb
mov
xor
cmpsl
cmpsb
cmp
std
shll
cmp
fidivrs
sti
xor
lret
es
idiv
fdivrp
pop
mov
movsl
sbb
sub
lret
and
aaa
inc
fs
pop
std
or
dec
mov
jl
dec
call
iret
add
or
adc
jb
addl
mov
gs
xchg
fiadds
xlat
mov
xchg
or
dec
fisubrs
addr16
popf
divb
sahf
push
enter
and
adc
lcall
xchg
xor
sub
test
stos
bound
inc
sbb
test
inc
shr
in
sarb
lret
inc
js
lock
call
je
movsb
outsl
out
cmp
sbb
stos
loop
bound
mov
cmpsl
fstps
xlat
outsl
cmpsb
cmpb
pop
pop
xor
aas
popf
ror
sti
out
mov
sbb
xchg
cli
adc
jbe
repz
fwait
aas
addl
cwtl
aad
add
repz
lahf
mov
int3
dec
mov
bound
xchg
lahf
fs
lahf
mov
jne
jecxz
push
js
insl
push
hlt
sarb
push
fwait
mov
into
icebp
in
mov
addr16
out
outsl
ficoms
pop
scas
mov
jns
in
mov
mov
ret
aad
imul
sbb
loopne
shl
lret
pop
iret
pop
loope
sbb
inc
jno
inc
jmp
testb
mov
fcmovnbe
rorl
mov
mov
testl
stos
test
fsub
jl
stc
push
outsb
std
mov
stc
neg
gs
out
fisttps
inc
fimull
ljmp
and
add
ret
aad
pop
pusha
mov
leave
mov
popf
idivl
adc
lods
sub
mov
sub
repnz
pusha
sahf
inc
or
insb
xchg
fldt
sbb
mov
jl
addr16
mov
outsl
aam
shlb
in
push
push
jae
adc
lds
aaa
sahf
cmp
push
mov
ficompl
sub
imul
ss
daa
out
and
jl
push
jp
push
inc
das
lret
aas
idivb
add
lret
and
scas
movsl
mov
fnstsw
jne
and
lods
cli
lods
ja
cmpsb
push
cmpsb
jecxz
mulb
insl
xchg
rol
pop
or
sarb
dec
jge
xor
repnz
jb
sarl
fsubrl
rcrl
test
adc
fdivl
mov
dec
adc
sbbb
cli
mov
or
testb
popa
ja
orl
ret
fs
dec
inc
push
insl
pushf
mulb
shrb
lcall
pop
jbe
testl
cmp
rcll
add
mov
pop
sbb
daa
push
mov
add
pusha
cltd
fmuls
std
mov
push
fstpt
rcrl
jp
mov
clc
mov
lcall
leave
xadd
mov
sti
sbb
repz
push
mov
xchg
enter
lock
lret
cmpsl
fdivrs
imul
mov
mov
js
mov
push
jecxz
cmp
pop
ret
dec
xor
imul
leave
xor
mov
and
outsl
xor
push
int3
cmp
mov
lods
push
xor
sbb
inc
cmpl
xor
test
or
and
shll
jg
or
stos
pusha
fidivrl
outsl
out
mov
sbb
aaa
mov
ret
cmp
cltd
leave
scas
fstps
sbb
neg
cltd
stc
cmpsl
icebp
jle
mov
fisttps
ljmp
pop
das
jge
arpl
pop
mov
nop
lock
push
or
inc
inc
mov
and
in
clc
nop
and
jbe
sbb
adc
adc
mov
mov
lods
mov
jmp
ja
fisubs
sub
xor
fcoms
mov
or
jnp
out
rol
arpl
mov
pop
jmp
mov
dec
ret
pushf
xor
popf
lea
mov
cmp
sbb
mov
rcrb
int
in
sub
fldt
push
fisubrs
pop
xchg
pop
ror
or
mov
jns
les
or
cwtl
das
jbe
adc
inc
popf
stc
fsubrs
insb
addl
push
mov
in
sub
xchg
ja
outsl
xchg
pop
or
test
lcall
sbb
push
in
sbb
lock
test
push
cmp
lahf
jb
stos
das
fists
and
test
push
jno
hlt
stos
movsb
mov
ja
ret
test
sbb
push
scas
adc
ret
test
rolb
and
cld
jecxz
fistl
sar
push
outsl
push
arpl
push
sub
cmpsl
cltd
mov
test
inc
cmp
mov
sbb
adc
cld
pop
inc
inc
cld
pop
adc
add
jecxz
pop
xor
push
cmp
decb
in
stc
ficoml
rorb
repz
sbbb
ss
outsl
fstpl
pop
jnp
jmp
xor
or
in
adc
mov
dec
jmp
in
ljmp
out
cmp
in
mov
xchg
lods
inc
xchg
sub
or
sub
jns
js
jbe
mov
ja
out
leave
hlt
inc
mov
rorl
mov
repnz
subl
bound
fs
xor
xchg
sub
mov
sti
inc
inc
mov
enter
xchg
adc
aaa
sti
inc
push
mov
cmp
inc
push
sbb
out
or
in
inc
xchg
fmulp
aaa
fildl
push
mov
cmp
or
daa
andb
xchg
mov
cmp
cmp
mov
jmp
insl
leave
xor
xor
test
push
add
aaa
push
sbb
dec
and
lods
sub
loope
mov
sub
jae
lods
stc
mov
pop
addr16
pop
scas
xchg
js
dec
out
xchg
shlb
mov
cld
inc
and
ret
lods
fsubs
pop
pop
push
cwtl
cmp
jbe
sbb
dec
aam
popa
test
xchg
jp
inc
lret
sti
xor
sbb
je
je
xor
std
outsl
ljmp
enter
push
in
mov
lahf
cmp
test
and
popa
mov
add
lahf
repz
scas
and
push
jb
sub
sub
lahf
fwait
shrl
in
nop
mov
adc
inc
stos
push
dec
xchg
cs
jo
jbe
popf
dec
test
lea
fdivs
test
jle
add
pop
out
xchg
lods
stos
add
mov
pop
add
inc
lret
cmp
xchg
inc
iret
in
and
mov
loopne
cmpsl
xchg
or
test
test
push
push
pop
jno
bswap
ret
sub
repz
mov
xorl
dec
faddl
lods
adc
jo
sub
pop
ss
pop
dec
hlt
mov
jne
shr
push
push
movsb
jae
cmpsl
xchg
mov
sti
xorb
cmp
out
xchg
out
in
fadd
mov
lret
incb
call
loop
shll
jnp
mov
adc
or
dec
adc
inc
push
pop
mov
adc
and
imul
jmp
leave
pop
inc
pop
lea
jp
int3
sbb
scas
pop
dec
jb
sarb
jo
lods
int
rorb
sahf
push
xchg
mov
pop
out
add
lods
fstpt
loop
fsubl
sti
pop
sub
and
mov
add
pusha
imul
cmp
inc
pop
pusha
xor
push
jecxz
jbe
pop
mov
dec
sbb
scas
aas
and
ja
and
adc
and
push
xchg
lock
out
push
mov
sub
cmc
leave
jne
push
xor
push
pop
fldenv
sti
daa
adc
sbb
cmp
leave
add
sbb
test
out
jno
pop
push
xlat
in
loop
cmp
out
fbld
aad
sbb
cmp
adc
cmp
jecxz
out
and
xchg
pop
out
in
sbb
ret
add
lods
mov
stc
icebp
mov
mov
pushf
repz
insl
loop
imul
jbe
fs
stos
lods
popf
sub
inc
cltd
ret
mov
out
scas
popl
out
fisttps
add
sbb
push
inc
push
push
mov
es
or
xor
sbb
enter
adc
mov
pop
scas
dec
inc
in
outsb
clc
aam
sub
out
ja
lahf
mov
repnz
push
or
movsb
adc
lds
int3
xlat
mov
add
negl
pop
ret
test
pop
cmc
inc
sub
dec
cwtl
int
jb
imul
push
cltd
imulb
and
mov
enter
sub
les
cmpsb
mov
test
and
sahf
inc
std
jecxz
sub
int3
sub
mulb
adc
les
adc
pop
xchg
mov
subl
ficoml
inc
lock
lods
xchg
sub
push
rcll
insb
jg
movsl
mov
push
xor
xchg
cmpsb
out
roll
pop
imul
movsb
loopne
hlt
lock
mov
enter
and
sti
lret
sub
mov
mov
test
outsl
mov
dec
lahf
movsb
add
inc
es
std
aam
test
ljmp
daa
neg
cs
push
push
inc
dec
xchg
mov
jno
mov
repz
jne
js
jo
call
arpl
mov
sub
xchg
push
hlt
rorl
out
iret
arpl
push
int3
push
dec
iret
leave
sti
mov
mov
je
cmp
inc
xor
xor
cmp
adc
xorb
xchg
mov
aas
shrb
inc
add
and
pop
jno
fcomi
imul
jbe
jbe
push
lret
jmp
xor
mov
dec
cwtl
push
jg
add
movsl
or
inc
jne
dec
dec
xchg
loope
or
mov
and
stc
add
pop
notb
jb
or
or
fisubs
push
push
rolb
insb
cld
lcall
xorl
or
jl
lock
call
loopne
pushf
inc
clc
cltd
mov
lea
loope
push
shrl
mov
mov
pand
adc
push
xchg
xchg
push
ret
jbe
lea
push
xchg
lds
dec
xor
out
loope
ficoml
and
and
mov
movsl
outsl
popa
or
jne
adc
fnsave
int3
mov
js
mov
mov
dec
inc
pusha
mov
pop
add
movsb
mov
xchg
popf
int3
repz
mov
add
push
jnp
les
xchg
aad
fsub
lret
xchg
xchg
mov
rorb
loopne
in
mov
int
imul
bts
and
jns
xchg
flds
pop
inc
jbe
rolb
jmp
mov
cmc
jg
lock
rcrl
push
adc
mov
sub
or
add
sysret
lea
push
sbb
pusha
mov
frstor
cmc
jecxz
aaa
data16
mov
xchg
push
pop
pop
aad
sub
fwait
lret
cld
inc
cwtl
pushf
sbb
stos
jg
shl
in
out
mov
fsubrs
pop
loop
add
pop
popa
and
mov
mov
sub
lods
stc
repz
fsubs
pop
inc
push
cltd
cltd
or
pop
cli
push
dec
hlt
push
in
imul
shrb
stc
pop
add
and
xchg
dec
adc
loop
push
jp
mov
cmp
fbld
push
mov
adc
mov
inc
xor
fwait
and
je
mov
push
mov
sbb
jl
pop
push
cmpsb
les
inc
adcb
add
mov
fsubrs
in
sti
or
jns
sti
inc
lods
sub
and
jecxz
std
pop
icebp
xchg
sub
push
in
or
mov
es
es
imul
rol
clc
jmp
xchg
push
adc
cmpsl
and
insl
xchg
sub
jecxz
loopne
popa
mov
cmp
push
cmp
ss
mov
xlat
daa
loope
lret
into
inc
out
cmp
cmp
cmc
push
push
push
push
xor
or
push
xchg
scas
call
push
sbb
mov
inc
imul
xchg
int
xchg
sbb
loope
dec
add
data16
aad
dec
inc
add
dec
xor
lahf
cmp
sbb
sub
mov
inc
mov
or
scas
inc
or
push
out
fcompl
ss
bound
pop
fadds
daa
dec
clc
pushf
mov
adc
sahf
mov
lea
cli
inc
inc
xchg
aas
mov
int
es
dec
dec
daa
dec
add
pop
xchg
inc
and
mov
out
and
cmp
adc
in
int
sub
mov
cmp
cmp
loope
hlt
jnp
scas
aas
stos
inc
pop
dec
and
out
iret
lods
inc
sbb
popf
cmp
les
pop
mov
in
idivb
dec
push
in
arpl
jno
rclb
cmpsb
aas
pop
or
mov
fdivs
leave
sbb
or
mov
adc
ja
xchg
or
jbe
adc
aam
int3
stc
mov
je
sub
sub
mov
pushf
push
pusha
mov
sbb
out
and
cwtl
mov
or
fdivs
sbb
pusha
and
fistpl
push
jecxz
scas
cmp
les
mov
ja
in
call
ds
lret
shll
lcall
dec
movsl
or
or
int
mov
mov
stos
repz
adc
lock
int
in
out
leave
mul
ljmp
lods
js
or
xchg
test
clc
cmc
outsl
add
stos
and
adc
into
scas
aaa
jbe
and
xchg
sub
xchg
cltd
fwait
jae
test
push
inc
or
mov
fs
pop
test
and
cwtl
mov
dec
stc
cmp
and
mov
and
mov
adc
pop
repz
push
pop
push
xchg
adcl
aad
push
popa
add
cmp
push
push
cld
loopne
repnz
push
push
fs
xchg
jge
cli
mov
popa
pusha
adc
mov
insb
stos
push
xchg
in
rcll
cmp
int
mov
fwait
add
stc
jno
iret
sbb
push
loop
cmp
sub
scas
adc
adc
out
cmp
sub
arpl
fadds
andl
jo
cs
sbbl
mov
lahf
lods
addb
cwtl
xlat
mov
pop
mov
loope
and
xchg
jmp
lods
out
sub
insb
ja
push
push
dec
mov
jbe
loop
lods
pop
lea
and
dec
xchg
stos
insb
loopne
mov
cmc
and
lea
shrb
xor
add
pop
shrl
dec
mov
std
jns
cltd
cmp
sbb
imul
or
jl
in
lock
dec
fisubl
sbb
dec
xor
js
test
scas
pushf
cmpb
rol
test
data16
orl
fsubr
gs
mov
insl
jb
sti
pop
cltd
repnz
push
mov
and
jp
sbb
hlt
mov
push
nop
push
and
pop
rcrb
mov
shrb
or
push
fs
inc
sbb
sbb
dec
mov
nop
rol
ljmp
cmpsb
push
mov
xchg
lds
lea
out
jae
adc
scas
popf
adc
push
xchg
add
test
outsl
mov
leave
aad
outsb
test
ja
xchg
cltd
out
imul
sbb
pop
ljmp
int
mov
jl
dec
jg
shl
rcl
outsl
adc
dec
add
mov
or
in
ss
xor
sub
pop
mov
arpl
jecxz
das
cmp
or
mov
inc
lea
jle
mov
inc
xor
daa
sbbl
jge
inc
imul
movsb
cs
push
in
fwait
sbb
gs
xchg
lret
dec
out
fcmovu
enter
sbb
cmpsl
hlt
aaa
test
xchg
cmovl
sub
xlat
adc
lcall
test
ret
jp
cmp
pop
scas
inc
mov
mov
repz
pop
out
add
pusha
jb
insb
mov
jmp
test
add
push
fwait
iret
shrb
in
loopne
movsl
mov
popf
imul
icebp
xor
frstor
adc
xor
inc
ljmp
inc
pop
in
adc
push
outsb
sub
pop
fs
xchg
fmuls
mov
jo
mov
mov
xchg
gs
icebp
mov
dec
dec
jmp
cmp
cmp
std
adc
test
addr16
or
movsl
sahf
outsl
jb
add
sbb
test
cmpsl
push
mov
outsl
add
ret
dec
stos
xor
movsb
gs
pop
inc
fimuls
leave
xchg
mov
inc
sub
imul
jae
pop
je
sub
jnp
jo
hlt
jne
xchg
repnz
dec
push
lods
in
push
mov
pop
das
adc
fs
xchg
adc
test
gs
addl
adc
adc
jnp
adc
mov
loop
mov
sub
je
adc
mov
push
xor
cmp
mov
xchg
inc
popa
cs
inc
scas
jmp
sub
add
adc
lahf
sub
jns
in
lock
inc
sbb
sti
xchg
sbb
add
sbb
mov
insl
icebp
push
andl
bound
test
wrmsr
push
addr16
scas
or
nop
test
xchg
in
popf
xchg
cmp
push
mov
ret
cmpsb
xor
sbb
jg
orl
inc
cmp
dec
xor
out
and
mov
or
fwait
mov
leave
jb
aad
repnz
sbb
insb
pop
movd
push
push
nop
test
stc
mov
xchg
ljmp
movsb
pusha
xor
cmpsb
xor
xchg
lock
xchg
int
das
dec
add
add
dec
adc
push
xchg
popa
cmpl
sub
xor
sti
daa
addr16
pop
rolb
gs
inc
dec
mov
or
int
popa
mov
adc
sarl
lcall
mov
fldenv
mov
jne
addr16
xor
in
xchg
xor
cld
sti
push
xchg
aaa
jb
mov
dec
or
mov
lods
sbb
push
dec
sub
push
inc
sahf
nop
mov
ror
out
call
jl
mov
dec
xor
aam
inc
adc
cmp
ret
adc
cmp
mov
lahf
add
pop
orl
mov
jmp
mov
out
cmpsl
out
fxtract
mov
push
cmpsb
aas
jae
pop
mov
arpl
xor
mov
lea
movhps
cs
add
loop
mov
loope
xchg
sbb
cmp
and
or
cmpb
out
loopne
push
stc
or
or
adc
adc
into
mov
das
xchg
mov
or
xchg
xlat
mov
fwait
insl
jle
pop
mov
push
xchg
inc
ret
dec
add
sub
std
lret
imul
mov
dec
jp
jp
and
inc
pop
pop
sub
sub
mov
inc
add
adc
out
sbbl
push
mov
dec
push
movsl
mov
orb
cmp
pop
loope
ljmp
es
jnp
lret
push
lret
and
cs
cwtl
pop
imul
jmp
fisubrl
cwtl
cmp
and
mov
fisttpl
jecxz
aaa
icebp
mov
adc
dec
sar
pop
add
mov
andl
test
or
enter
stos
inc
dec
rclb
pop
into
icebp
sbbl
ret
nop
sub
sbbl
je
mov
aas
inc
jmp
cld
dec
sbb
sti
mov
xor
gs
in
sbb
pop
dec
adc
add
les
push
call
pop
adc
stc
enter
subb
cmp
xchg
popf
lods
or
inc
shlb
lock
xor
shr
cmp
inc
movsb
or
mov
xor
add
sbb
rcrl
xchg
push
jns
insl
cmpsl
or
mov
xchg
sbb
in
adc
movsb
inc
jb
mov
push
mov
and
mov
mov
cmp
mov
jg
inc
adc
or
xor
and
sub
ret
cmp
das
xor
mov
out
nop
mov
nop
push
xor
sbb
xchg
or
mov
cld
dec
sti
push
mov
jne
or
sbb
pop
in
cld
lret
push
xlat
sahf
arpl
adc
sub
push
fs
xor
out
mov
adc
jl
leave
lahf
test
addr16
cmp
sbb
sti
xor
lea
stos
fs
test
jo
jmp
mov
mov
pop
insb
xor
sbb
shrl
push
enter
add
mov
cmp
and
gs
and
mov
adc
test
sub
aas
test
adc
in
mov
inc
fmuls
sbb
mov
fnsave
cwtl
hlt
addr16
movsl
insb
and
scas
in
or
and
insl
test
repz
fdivrs
ficompl
lret
popa
fucomi
mov
xchg
cmp
mov
lock
or
cwtl
nop
mov
mov
out
fstpt
mov
pop
pop
js
out
and
mov
push
das
ja
adc
cmp
scas
push
mov
mov
mov
push
xchg
int3
sbbb
lods
data16
loop
inc
xor
leave
aad
mov
cli
xor
mov
sub
test
xor
lcall
mov
cmp
sarb
jmp
popa
mov
lret
sbb
test
insb
adc
outsb
aad
arpl
or
cmc
xor
lods
out
or
dec
sbb
mov
fildll
mov
fwait
lret
test
inc
lcall
xchg
mov
movsl
jns
mov
scas
sbb
adc
lret
cmpsl
addr16
lea
push
jb
mov
adc
addr16
inc
jg
hlt
cli
ret
int3
jl
lea
pusha
decb
push
mov
inc
xchg
cld
mov
or
jbe
adc
imul
bound
in
pushf
inc
push
and
js
mov
pop
dec
fdivrl
adc
insb
push
mulb
jecxz
pop
dec
sbb
pop
push
movsb
mov
lcall
xchg
pop
pusha
into
cmp
mov
jecxz
pop
sub
test
xor
push
rcrl
rclb
inc
int
dec
xchg
popf
jo
adc
mov
mov
inc
cmp
loope
push
pop
icebp
xchg
mov
mov
cmpb
gs
jg
jp
jecxz
pop
cld
inc
imul
sub
fcom
xchg
dec
cmpsb
jae
out
xchg
mov
into
mov
pop
test
pop
sub
lret
stc
out
iret
sbb
inc
pop
sub
sbb
mov
out
in
fbld
jns
add
adc
gs
mov
pop
leave
push
add
adc
loope
sub
clc
mov
scas
mov
lcall
addr16
lea
cmc
gs
scas
dec
push
fs
inc
jecxz
xor
inc
adc
sti
inc
xor
mov
sar
in
jae
sub
jae
fwait
adc
mov
inc
ja
push
out
inc
or
add
shl
or
ja
cmc
adc
std
xchg
sbb
or
or
inc
add
out
aad
dec
iret
add
mov
adc
out
cs
adc
dec
mov
gs
int
cmp
or
mov
sbb
scas
loope
push
repz
jp
inc
pop
mov
mov
pop
jmp
aam
or
out
sub
xchg
icebp
and
or
in
add
loope
pop
sub
test
lret
mov
push
add
adc
loope
sub
es
clc
add
repz
push
roll
repnz
adc
and
outsb
push
mov
mov
push
lods
cmpsl
pop
lods
aas
lcall
lock
pop
jle
push
mov
dec
aas
int
lods
insb
test
fdiv
dec
push
enter
pop
mov
cwtl
mov
mov
repnz
push
adc
repz
fs
test
into
scas
cltd
inc
pop
sub
ret
sbb
iret
mov
fs
xchg
or
loope
lcall
jmp
int3
push
pop
dec
loopne
inc
cmp
sub
lock
pop
test
pop
xor
pushf
mov
add
push
mov
movsl
es
mov
ds
mov
cmp
rolb
or
mov
rorl
divl
movb
test
xor
mov
xor
invd
insl
movsb
and
pop
imul
and
and
push
cltd
sahf
ss
pop
jmp
xor
nop
fists
lods
or
push
imul
mov
xor
inc
xor
sub
inc
mov
ficomps
fwait
stc
mov
add
out
icebp
fstpt
adc
adc
orl
sarl
aaa
leave
daa
jns
sbb
imul
push
cmp
lahf
dec
xchg
stc
in
jecxz
fabs
pop
addl
cmp
outsl
xchg
inc
scas
movsb
add
jecxz
lret
cmp
jns
pop
sub
xchg
jns
adc
and
sbb
cs
loopne
sub
arpl
enter
js
imul
or
xor
sbb
push
push
mov
add
mov
push
sbbl
lods
push
cmpsb
fcomps
insb
loope
sbb
mov
mov
stc
ret
mov
push
jp
les
aaa
pop
enter
push
mov
mov
push
cmpsb
inc
jns
scas
and
sbb
xor
inc
dec
sbb
push
lods
sbb
iret
sub
js
push
cs
cmp
mov
in
stc
dec
jns
xchg
pop
movsb
sti
lret
cmpsl
sbb
fistpl
add
loop
cltd
xchg
mov
fdivr
xchg
movsl
fsubl
cmp
sub
dec
cli
out
mov
xlat
fcmove
popa
inc
adc
pop
xor
pushf
mov
fildll
sbb
std
wrmsr
mov
outsl
push
mov
lock
and
lods
clc
call
popa
clc
leave
repnz
pusha
mov
cmp
cltd
xchg
idivb
sbb
push
pop
popa
je
mov
xchg
jle
jecxz
add
mov
push
repnz
or
in
cmpl
cmp
dec
mov
cld
add
cmpsb
jp
lods
push
dec
cltd
inc
sub
xchg
cmpsl
mov
jmp
ss
sarb
sbb
push
cmpsb
shll
dec
hlt
add
mov
and
add
xchg
bound
aad
loop
jge
add
and
stos
dec
pop
dec
jp
cmpsb
enter
xor
hlt
mov
dec
jb
fstpl
cmp
mov
repnz
out
andl
mov
les
in
cwtl
pop
pop
jg
pop
or
adc
test
cmp
mov
jbe
popa
outsb
imul
mov
das
cli
cltd
fs
pop
mov
lcall
test
sarb
mov
or
js
movsb
leave
mov
comiss
cmpsb
mov
or
add
xor
push
and
addr16
gs
jnp
jmp
fincstp
inc
jne
pop
mov
xor
add
leave
cmpsb
jl
imulb
pop
movsb
subb
and
lea
outsl
test
out
adc
xor
out
cmp
xchg
popf
fwait
mov
enter
loop
icebp
outsb
cmp
and
cmpb
sarb
idivb
aas
push
inc
in
repz
xchg
pop
jl
push
jae,pn
ja
mov
ds
lret
adc
nop
pop
andl
inc
loop
fimull
fcomps
js
filds
mov
pop
mov
int3
test
push
hlt
sbb
lods
cwtl
shrl
jmp
fs
clc
xchg
cld
fists
fs
arpl
xchg
das
mov
sub
cmp
fwait
arpl
lahf
dec
xor
pop
aaa
dec
mov
popf
das
jecxz
sub
cli
loop
aas
std
adc
mov
cmp
mov
adc
sbbl
rcr
pop
in
stos
leave
push
nop
cld
aam
and
add
mov
and
jo
stos
andb
pop
push
pop
pop
pushf
sbb
inc
cmpsb
ds
movsl
mov
orl
add
jecxz
pushf
inc
mov
fldcw
outsb
pop
adc
rcll
test
aam
rcl
mov
cmc
popa
and
int
cmc
fwait
ret
xor
das
xchg
push
lods
cmpsb
inc
loope
std
enter
cmp
inc
adc
jge
and
out
push
lods
sbb
or
push
cmp
inc
and
dec
xchg
inc
mov
or
or
mov
leave
mov
addl
push
filds
lea
out
dec
sbb
or
cmp
pop
add
inc
push
sbbb
stos
mov
mov
mov
mov
flds
inc
pop
sub
insb
rcrl
dec
xchg
xchg
pop
fs
in
insl
adc
iret
jb
ja
addl
pop
je
mov
pusha
push
shl
push
repz
mov
popl
movsb
test
scas
add
mov
addr16
pop
arpl
imulb
add
call
into
cmpsb
lahf
loop
test
mov
iret
mov
pop
lea
lods
pop
scas
sub
xor
mov
cmpsl
lods
xchg
push
xlat
das
fwait
int
jno
xchg
sub
loop
add
mov
ror
andl
or
push
push
jmp
std
sub
sbb
sub
mov
mov
clc
rcrb
or
sub
jb
sti
decb
cmpb
cmp
dec
mov
cwtl
mov
cmp
outsb
fs
mov
mov
push
ss
call
test
jg
xchg
adc
addr16
dec
nop
lods
sti
inc
cmp
imul
arpl
xor
cmp
mov
xor
ja
mov
iret
push
jl
fbstp
clc
push
push
add
sub
in
push
add
inc
pop
rcll
aam
pop
jg,pt
or
nop
jns
xchg
xlat
and
or
add
mov
mulb
push
lea
bts
jno
cwtl
aam
test
push
or
insb
xor
pusha
xor
sub
pop
popf
rcrb
inc
imul
or
cmp
pop
das
gs
je
and
scas
test
imul
xchg
hlt
pusha
rclb
sahf
xlat
jb
or
dec
testl
xchg
jno
cwtl
add
add
roll
jge
inc
dec
jns
xor
push
inc
in
mov
fidivrl
jae
cmp
mov
pop
mov
add
leave
pop
rol
arpl
arpl
jg
push
cmp
sub
mov
das
dec
or
stos
fmulp
and
xchg
xlat
imul
mov
mov
or
loop
mov
jp
mov
sbb
pusha
sub
shlb
cmp
inc
fistl
stos
dec
imulb
jge
mov
adc
xor
push
idivb
sub
movsb
xor
fwait
xlat
cwtl
divb
cmc
xchg
jbe
out
jl
daa
das
ja
lret
and
sub
or
sbb
inc
test
jb
roll
xor
push
jg
sbb
cmp
add
add
in
mov
push
insl
js
in
xchg
dec
stos
sub
insl
hlt
fstpt
test
cmp
in
jbe
test
xchg
adc
lea
dec
repz
lahf
jno
pop
lods
push
cmp
add
out
aaa
mov
das
lods
adc
test
mov
mov
out
xor
dec
pop
cmp
rclb
mov
mov
fcoms
insl
stc
or
dec
dec
dec
shlb
cmp
pop
mov
mov
std
jno
nop
mov
sbb
cmp
or
mov
inc
dec
imul
ja
outsb
rolb
jo
jle
call
jne
ljmp
ss
xchg
sbb
dec
mov
sub
cmp
xchg
sbb
and
add
adc
pop
xchg
rolb
cltd
xor
jae
mov
inc
outsl
leave
jo
cwtl
stos
or
rcrl
xchg
add
mov
push
pusha
xchg
inc
add
dec
mov
push
cld
fcompl
sub
pop
es
sbb
inc
ja
lock
mov
mov
and
mov
mov
mov
add
add
xchg
adc
xlat
gs
imul
or
xchg
cmpxchg
cmp
aam
dec
popa
inc
cmp
xlat
icebp
sub
jb
xchg
push
push
lahf
push
inc
mov
push
clc
je
lret
mov
lods
mov
ss
cmpsb
out
pushf
pop
test
jp
adc
lahf
and
lods
dec
pusha
mov
jl
addb
add
rcr
neg
sbb
push
push
dec
xchg
jg
cmp
sbb
mov
cmp
aaa
jne
push
stc
imul
mov
les
mov
mov
das
jge
xlat
out
loop
mov
mov
test
xor
mov
jl
ret
adc
xchg
push
fcoml
pop
push
in
lds
ja
add
and
mov
ljmp
sbb
and
jae
inc
jmp
pop
cmpsl
sbb
jbe
dec
mov
xchg
adc
repz
bound
stc
jg
xchg
cld
xlat
mov
daa
lcall
cmp
xor
imul
inc
ret
mov
jo
add
inc
or
into
inc
cmp
xchg
outsl
cmpsb
adc
sbb
cmp
pop
push
and
inc
fisttpl
xor
or
test
lock
gs
orb
test
pop
push
push
aad
mov
les
jnp
push
mov
mov
sarb
xchg
sbbl
inc
sub
mov
outsb
pop
nop
jbe
cld
sbb
jecxz
adc
xor
mov
outsb
and
fwait
xchg
cmp
cmc
push
xor
stos
add
cwtl
xlat
inc
jmp
sub
jp
icebp
lret
int3
add
repnz
mov
ljmp
movsb
loopne
call
fistps
fwait
pop
loope
sub
mov
test
loope
dec
ffree
outsb
mov
jmp
fdivl
dec
pmulhuw
and
outsl
pop
scas
inc
jno
add
xlat
adc
ret
pop
ds
js
ja
pop
adc
out
movsb
cmpsb
and
and
mov
ljmp
dec
stos
sub
test
jmp
xlat
add
addr16
hlt
outsb
push
mov
mov
cwtl
pop
stc
push
pop
stc
out
inc
outsb
cmp
fiadds
mov
xchg
fistpll
dec
addr16
xchg
pop
inc
scas
ret
add
fldt
std
roll
and
gs
sbb
test
xchg
sub
lcall
and
loopne
cltd
sbb
cmp
js
out
insb
or
fwait
mov
test
fisubrl
out
inc
imul
sbb
test
dec
jnp
adc
or
push
idivb
add
enter
mov
stc
dec
dec
stc
shlb
add
hlt
mov
mov
mov
orl
jno
popa
popf
xchg
adc
inc
rcrl
aaa
pop
pop
jg
mov
fnstsw
jne
inc
push
bound
pusha
shlb
fisubrl
cmp
mov
and
push
pop
ror
inc
pop
inc
push
mov
loop
dec
pop
mov
sub
int3
add
jl,pn
and
movsl
add
push
hlt
mov
jmp
out
push
mov
mov
cwtl
shlb
dec
test
mov
mov
and
push
fdivl
dec
xchg
xor
repz
in
addr16
add
scas
mov
sub
mov
mov
cmpsl
pusha
dec
rcr
dec
out
std
add
jne
jle
cmpl
hlt
sti
shlb
pushf
bnd
dec
aad
shl
nop
add
mov
xchg
and
imul
push
mov
mov
dec
dec
addb
jecxz
aam
xor
jbe
inc
inc
pop
icebp
jmp
fimull
push
ljmp
pop
or
aaa
adc
cs
in
dec
and
inc
fdivr
leave
jnp
in
enter
xlat
mov
push
push
xchg
mov
fists
arpl
rcll
add
ss
sahf
insl
mov
lret
xorl
shrb
std
sbb
in
sbb
sbb
jno
xor
and
cmc
lret
and
insl
jg
sbb
in
cmp
pop
imull
int3
stos
dec
scas
push
or
fistpl
gs
and
fwait
mov
sbb
xor
out
jnp
push
lods
int3
shl
cmp
jecxz
jnp
mov
shll
test
loope
das
imul
jno
mov
rol
lods
int3
js
div
push
insl
outsl
loopne,pt
adc
adc
js
sub
jl
fstps
cli
out
popf
clc
pop
cmp
cmp
and
hlt
mov
shlb
int
fldcw
mov
sarl
fisttpl
push
xorb
js
pusha
mov
inc
in
scas
dec
loope
outsl
adc
outsl
inc
fcomi
cld
cmp
cmp
lock
aad
int3
jno
mov
lret
ret
lahf
and
dec
rclb
les
mov
adc
out
dec
popa
inc
jne
outsl
sbb
mov
dec
test
cmc
test
negb
mov
aas
in
mov
imul
pushf
cmp
incl
jg
mov
push
clc
out
sbb
pop
push
mov
ds
cmp
dec
push
add
ret
jns
lea
cs
xor
notl
mov
pusha
jg
dec
sub
sub
das
test
xchg
daa
pop
dec
shrl
cs
lods
lock
mov
dec
and
nop
aas
dec
pop
push
pop
sti
and
sbb
add
dec
push
mov
sub
mov
into
pop
orl
push
jo
pop
dec
imul
sbb
mov
mov
loop
push
pop
add
xor
pop
adc
xchg
out
test
in
sar
imul
mov
pushf
push
sbb
pop
cmpsb
push
aaa
jno
in
mov
repz
lret
sub
push
cwtl
fwait
push
add
push
jne
loope
popf
mov
mov
das
pop
mov
out
adc
sub
xchg
sub
dec
xor
loop
repnz
mov
repz
dec
sub
stc
int
lods
aas
jbe
icebp
stos
insl
ds
test
push
dec
adc
jl
scas
mov
loop
mov
push
inc
sub
popf
cmp
fsubs
aas
sub
sti
inc
sahf
pop
mov
and
test
add
pop
rcrl
mov
fwait
mov
mov
cmp
test
imul
sub
jae
xchg
dec
adc
iret
addr16
jmp
mov
or
pop
daa
sub
mov
pop
push
xor
add
jecxz
in
fisubs
fs
inc
ss
jl
dec
mov
adc
sub
popf
nop
mov
mov
mov
sti
outsl
pop
lea
inc
in
inc
adcl
fcomp
mov
pop
pushf
js
mov
jmp
mov
pusha
jge
outsl
mov
aas
sub
out
outsl
mov
jno
sbb
and
and
add
push
and
pop
push
xchg
xchg
addl
xchg
lods
adc
lcall
push
dec
ja
dec
sbb
aam
stos
sbb
int
fdivrl
mov
ret
decb
add
in
mov
xor
mov
nop
mov
sub
inc
mov
and
in
push
aam
lret
dec
cld
test
inc
imul
dec
dec
and
dec
cwtl
pop
mov
sbb
mov
out
pop
pop
popf
es
inc
mov
pop
loopne
lds
nop
stos
popa
add
cmp
leave
shl
outsl
sbb
jmp
or
pop
call
loopne
add
lods
in
iret
hlt
add
add
sbb
in
stos
jmp
xchg
cmp
adc
xchg
dec
int
mov
sbb
push
leave
lret
mov
mov
insb
xchg
cmp
adc
jge
pop
mov
mov
mov
jbe
lret
or
or
inc
xchg
loop
xor
xorl
sbb
addr16
test
add
sub
pop
cmp
push
xchg
repnz
push
push
add
rol
jae
mov
rcll
pop
push
lahf
xor
scas
roll
pop
incb
push
aaa
in
mov
inc
jle
or
out
inc
pop
clc
inc
loop
and
fmulp
pop
test
cwtl
jg
int
fiadds
mov
mov
fld1
lock
leave
pop
xadd
push
adcb
dec
test
sahf
iret
or
inc
mov
ret
fildll
frstor
adc
lods
push
bound
stos
fidivrl
in
push
idivb
xchg
mov
xchg
into
outsl
push
movl
loope
mov
loope
mov
test
mov
orl
outsl
les
mov
divl
fbld
in
fcompl
cmp
pop
push
pop
mov
fstl
out
cmpl
aad
mov
add
lea
mov
inc
dec
lods
pop
xchg
out
dec
rol
push
xchg
jg
cli
xor
scas
mov
adc
or
sbb
mov
sbb
repz
adc
out
stc
jns
jb
push
jno
adc
push
mov
inc
insb
mov
sub
arpl
cmp
xor
mov
dec
les
cmp
ret
push
insb
pusha
call
sub
add
scas
jb
and
aam
or
addr16
xchg
xor
xchg
push
into
jae
aas
sub
mov
xchg
cmp
insl
outsl
mov
stos
clc
ljmp
ds
lods
rclb
jae
xor
push
mov
mov
repz
mov
mov
insl
dec
and
sbb
lret
xlat
mov
cld
pop
lret
into
fucomp
xor
and
push
in
or
stos
aad
mov
addr16
jbe
pop
orl
jp
add
stos
xlat
lcall
jg
popa
loope
inc
or
cli
xchg
cmp
outsb
mov
gs
push
scas
int3
lret
xchg
out
ret
mov
sti
stos
xchg
rcrl
mov
test
adc
xor
mov
lcall
jl
stc
sbb
ret
push
or
cmp
xchg
adc
adc
sub
cmp
mov
sub
inc
fdivl
sbb
repz
in
xchg
push
and
faddp
pusha
cwtl
int
push
or
pop
push
ret
daa
push
add
dec
out
fs
fistpll
das
sub
fs
loop
cmpsb
or
call
cli
dec
rcrb
dec
adc
imul
int3
fsubrs
adc
mov
test
cmp
and
inc
inc
cmovno
lret
fsub
xchg
and
dec
or
repnz
pop
pushf
ds
fistpll
movsl
sbbl
cmp
ret
pinsrw
dec
push
fs
dec
xor
mov
sbb
xor
shrl
fisubs
sbb
mov
lret
cmpsb
xchg
shll
pop
testb
xor
xchg
jo
adc
outsl
dec
fisubrl
pop
xor
div
sub
pop
push
add
in
xor
leave
js
ja
test
addl
outsl
repnz
into
push
test
popa
mov
out
dec
and
iret
nop
inc
loope
mov
test
push
negl
add
inc
push
push
ljmp
sub
test
or
stos
adc
and
jbe
subl
xor
scas
sub
xor
subb
ds
xor
test
scas
imul
sbb
push
mov
add
push
push
sub
mov
pop
xchg
mov
lret
sbb
dec
xchg
adc
outsb
orl
adc
js
pop
aad
ret
bound
mov
xor
es
jg
mov
mov
sbb
lahf
cli
and
into
clc
stc
cmp
gs
dec
push
cmp
mov
lcall
icebp
jecxz
das
cmpsb
inc
push
fwait
mov
mov
jnp
cmc
loopne
mov
mov
aas
mov
iret
insl
cmp
vphadduwd
mov
lds
imul
and
xchg
test
notl
out
cmp
pop
xor
lea
mov
cmpsb
adc
add
shlb
jge
arpl
jle
and
xchg
push
lret
adc
nop
cmp
inc
xchg
fwait
dec
std
dec
push
xchg
or
jns
lret
sbb
push
out
in
aam
cmp
cmp
jo
mov
mov
cmpsb
lods
adc
xchg
in
lcall
xor
inc
sub
and
outsb
and
test
fistpll
pop
cltd
shll
fistpll
je
dec
rcrb
loopne
int
stc
mov
bound
mov
iret
fnstsw
movsb
lret
cli
clc
stos
popf
mov
cltd
mov
cmpsb
mov
mov
scas
pop
push
push
cmpsl
std
imul
push
icebp
mov
push
mov
cmp
dec
jle
in
jns
clc
repnz
pop
sbb
cmpl
loope
mov
xchg
mov
mov
cmpsb
out
xor
pop
imul
sbb
cmp
ja
or
lods
mov
adc
aad
les
mov
js
xchg
pusha
mov
fistps
js
in
fs
inc
xchg
shll
sahf
cmpsl
jne
jne
and
xor
push
mov
call
int
mov
icebp
cmp
cmp
es
jbe
icebp
mov
pop
and
mov
mov
sub
mov
test
loopne
mov
popa
xchg
sbb
jge
dec
jbe
inc
mov
add
jge
mov
ja
xor
push
leave
cmc
xor
push
cmpsb
ljmp
jo
in
and
aad
cmp
dec
inc
pop
ds
shl
movsl
mov
mov
push
mov
xor
jp
push
lods
dec
pop
xor
mov
sub
aas
cld
shr
sbb
sbb
jle
insb
push
ja
xor
jl
add
test
cwtl
jecxz
jbe
cltd
in
add
leave
shl
idivl
mov
fsts
mov
push
sbb
mov
sub
xchg
ss
rcl
dec
xor
int
mov
xor
xor
out
inc
lcall
shrl
aaa
popa
xchg
jecxz
adc
pusha
sarb
insb
push
aad
dec
push
mov
xor
arpl
jb
into
mov
lods
mov
and
mov
int
ljmp
sub
insb
out
inc
imul
loope
dec
xor
xor
ja
xchg
loopne
pop
lds
push
xor
jmp
data16
or
mov
push
xchg
xchg
cmpsl
jae
mov
arpl
cmp
addb
scas
mov
push
adc
int3
cli
mov
sbb
push
adc
test
sahf
xchg
push
outsb
stos
sbb
xchg
add
loop
dec
outsb
repnz
or
sbb
lcall
mov
jnp
and
hlt
cmp
cmp
sbb
or
cmp
or
and
fbstp
cmc
popf
cs
add
mov
add
sahf
xchg
bound
lcall
dec
sbb
out
dec
movsb
jecxz
scas
push
mov
mov
inc
mov
jle
subb
adc
arpl
jo
outsb
std
out
call
sub
sub
jns
mov
push
fdivs
stc
into
sbbl
out
mov
loope
xchg
jns
xchg
lds
imul
fwait
mov
notb
fdivr
jb
mov
push
xchg
in
stos
mov
in
jp
hlt
stos
lcall
daa
push
add
push
and
jns
sahf
test
inc
or
pop
push
les
cmp
xor
xchg
pop
pop
out
xor
std
inc
lahf
scas
ss
dec
and
or
out
repz
imul
jnp
rorb
cmp
jns
xchg
and
add
lahf
fnstcw
lods
jne
sub
mov
call
js
xchg
fs
cwtl
andb
inc
mov
inc
imul
loope
push
or
jp
mov
imul
lcall
ljmp
imul
movl
dec
fnstenv
lods
ret
int
inc
leave
mov
rcl
add
jp
mov
adc
popf
xor
mov
mov
js
mov
jbe
fildll
mov
dec
arpl
cmp
cmc
clts
push
ror
cs
and
out
ljmp
sbbb
imul
fbstp
sub
add
in
repnz
dec
and
int
sub
or
push
push
insl
jp
push
push
mov
outsl
daa
jae
add
fcoml
mov
xor
xchg
cmp
popf
in
lahf
xchg
jo
mov
inc
cmc
cmc
jns
or
inc
movsb
mov
call
stos
popf
mov
es
xor
loope
loope
test
fisubrl
popa
dec
push
rorb
mov
jbe
clc
dec
hlt
push
push
and
andl
inc
jmp
add
jle
adc
insb
sub
inc
repz
in
iret
sub
mov
cvttps2pi
out
inc
sbb
imul
stc
jnp
pop
push
and
inc
push
aas
xchg
add
cltd
jmp
push
lahf
scas
and
stos
lret
sub
aam
fwait
mov
aam
repz
inc
add
pop
cmpsl
inc
loopne
scas
jp
sbb
mov
insb
pop
inc
mov
mov
fs
push
jmp
jnp
dec
xchg
into
jnp
aas
push
push
aaa
je
pushf
sar
jo
gs
aad
xlat
mov
loopne
cmp
sahf
lret
lods
cwtl
inc
imul
mov
mov
dec
sub
push
cmp
cwtl
rcr
js
mov
ret
fstpl
sbb
xor
dec
xchg
cli
aas
mov
sti
adc
push
dec
sbb
and
icebp
sbb
popf
jge
push
leave
cmp
push
or
lahf
mov
aad
pop
test
mov
inc
repnz
fstpt
lea
push
cmp
or
jg
sbb
inc
pop
pop
or
add
add
xor
leave
test
gs
inc
jne
xchg
js,pn
loopne
jmp
adc
loop
clc
imul
mov
fisubrs
mov
mov
add
push
push
xchg
ja
in
out
push
ret
loopne
pop
or
out
sub
mov
xchg
sbb
sbb
es
scas
clc
xor
mov
pop
push
or
xor
add
mov
scas
fnsave
es
hlt
pop
push
xchg
or
std
pop
cltd
jo
icebp
add
inc
inc
imul
imul
add
inc
sub
int
add
jbe
loop
popl
inc
cli
sahf
sub
inc
pop
adc
mov
cmp
pop
adc
inc
inc
jns
mov
jne
mov
int
addr16
add
hlt
and
xchg
xorl
adc
and
mov
idiv
and
jae
mov
and
in
in
mov
lods
outsb
iret
insb
and
pop
fldenv
sub
dec
sti
hlt
scas
or
in
sbb
pop
add
stc
add
pop
lock
xlat
shll
fwait
pop
icebp
and
imul
add
mov
jb
mov
rol
pop
push
or
cwtl
mov
xlat
jb
enter
add
movsl
xchg
stos
cmpsb
sbb
pop
lods
andl
int3
pop
mov
sahf
insl
mov
add
repnz
in
shll
sti
out
mov
int3
sub
or
mov
mov
fxtract
push
add
mov
cltd
sbb
dec
fs
inc
movsb
or
xchg
cli
pushf
fidivs
ret
mov
lea
xchg
insl
inc
rorl
xchg
insl
dec
sub
bound
jmp
mov
push
lret
jle
mov
in
fisubs
push
pop
and
and
aam
cmp
imul
out
fistpll
mov
or
mov
outsb
xor
rcrb
mov
xor
imul
fsubl
and
pusha
fdivs
das
and
insb
jmp
int3
data16
jo
add
cltd
mov
cmp
jbe
mov
xor
adc
mov
pop
jge
and
aam
std
xchg
daa
enter
mov
outsb
sub
jno
cmpsb
cli
shlb
in
mov
les
ret
arpl
mov
pop
loope
mov
in
dec
xchg
lcall
xchg
mov
add
push
adc
jno
xchg
enter
cmp
adc
cmp
int3
ret
xchg
lods
mov
cmp
dec
in
inc
cmp
cmp
xchg
stos
into
sti
push
pop
xchg
pop
pop
in
xchg
dec
and
sub
andl
test
popa
mov
mov
or
or
and
mov
std
sub
mov
pop
and
ja
ficompl
push
or
ret
and
pop
scas
out
testl
jb
dec
or
mov
pop
je
out
add
add
add
ret
dec
js
mov
xor
movsb
jb
aas
sub
push
test
es
pop
push
ret
int
aas
sti
dec
movsb
decb
jge
sbb
cli
and
shlb
cmpsb
push
popa
sarl
jb
push
push
mov
jmp
mov
cmp
stos
std
jle
push
xchg
fwait
mov
cs
xchg
adcb
ja
jmp
fnsave
lea
add
andb
rol
mov
mov
push
ss
fdivrl
aaa
in
fs
push
ljmp
imul
jns
push
xchg
pop
xor
mov
out
inc
es
inc
xchg
push
shll
mov
pop
jmp
push
mov
loope
jge
cmp
mov
xchg
test
push
jb
fldt
pop
mov
test
icebp
push
jbe
and
or
pop
push
pop
leave
or
aaa
sub
mov
and
mov
test
fs
sbb
outsl
popl
mov
loope
xlat
iret
push
dec
pushf
fcmovu
lds
xlat
push
and
pusha
push
arpl
adc
mov
ret
enter
stos
das
cmp
mov
cmpsb
mov
jp
pop
ja
sub
rcrb
lcall
orb
add
mov
lahf
mov
push
test
xchg
rcll
lcall
xor
setae
insl
jg
pushf
rolb
add
pop
imul
dec
xchg
mov
adc
cmp
jl
cmpb
lret
addr16
andl
jo
sahf
or
mov
adc
loopne
subb
adc
ffree
jns
jno
fisttpll
push
jmp
adc
jmp
es
push
sub
push
mov
push
adc
mov
pop
test
adc
das
or
movl
push
mov
cmp
push
in
and
xor
mov
int
sbb
mov
lahf
popf
cmpsb
mov
adc
icebp
call
stos
sbb
mov
sbbb
dec
aas
mov
sbb
jno
icebp
or
je
adc
push
pop
dec
jge
ds
dec
add
push
aam
ljmp
arpl
fistl
inc
jno
mov
mov
push
cmpsb
mov
cmc
fyl2xp1
mov
fnstcw
pop
out
movsl
and
lret
outsl
mov
add
pop
xchg
repnz
call
jb
cmp
push
sub
idivl
insb
jmp
ds
mov
aad
cld
ffreep
icebp
add
push
insl
pop
std
xor
mov
test
je
js
sbb
in
mov
pusha
mov
add
jmp
mov
icebp
cmp
xchg
in
fs
mov
fsubl
sahf
or
mov
ret
cmp
push
push
imul
gs
pop
mov
dec
sub
lea
jecxz
lret
popf
arpl
sub
sub
out
mov
jno
add
repnz
jns
jnp
sbb
jp
or
in
xchg
inc
arpl
lds
xchg
or
xchg
fdivrp
dec
add
fwait
in
ret
xor
out
adc
in
dec
leave
aad
std
sub
xlat
xchg
mov
push
daa
movsl
fsin
adc
inc
cmp
dec
xchg
leave
les
jae
pop
pop
icebp
jns
sub
cld
or
daa
cwtl
mov
cmp
pop
mov
into
adc
jo
repnz
pop
jns
mov
cmp
int3
lahf
pop
mov
mov
cmp
aaa
pusha
adcb
mov
inc
pop
movsb
cmp
pop
inc
addb
inc
lcall
pop
xor
test
gs
xchg
mov
iret
leave
xchg
xchg
ret
push
les
mov
sub
and
fstpt
sub
adc
push
mov
pop
push
fwait
insl
inc
repz
adc
mov
xchg
loop
call
out
pop
lahf
int3
fcompl
adc
ret
js
imul
xchg
dec
pop
shlb
cmp
shrb
stos
mov
rcr
inc
cmp
add
pop
cmc
out
jnp
insl
test
cmp
gs
les
pop
out
sbb
adc
pop
in
icebp
cmp
pop
popa
stos
int
pop
adc
pop
cmpsl
xor
jmp
jb
jecxz
fldt
jle
mov
in
or
or
add
outsl
mov
xchg
int3
sbb
push
mov
imul
stos
lods
sbbb
ljmp
mov
cld
adc
nop
push
mov
sarb
sbb
cs
addr16
cmovnp
xchg
ja
push
jp
dec
lock
test
jnp
mulb
fmull
mov
mov
sbb
push
xor
or
dec
insl
pop
jecxz
fwait
fs
inc
bound
jns
clc
mov
cs
sbb
push
push
cmpsl
aam
ret
inc
lahf
dec
clc
arpl
xchg
rcl
out
sbbl
dec
testb
inc
cmp
inc
mulb
dec
pop
xor
js
daa
dec
jo
sub
loopne
jbe
inc
mov
es
sahf
sbb
xchg
mov
jl
enter
adcb
push
pop
pushf
pop
jbe
or
mov
pop
ret
or
into
sub
sarb
subb
movsb
outsb
sbb
pusha
std
push
jecxz
int
mov
iret
repz
das
push
jbe
popf
bound
inc
sbb
call
mov
add
xchg
adc
push
shr
js
ja
dec
jge
inc
pushf
test
clc
in
fcompl
xchg
jp
cld
push
test
adc
out
pop
int3
dec
insl
aas
clc
sub
es
push
ja
dec
mov
stc
lock
lahf
mov
in
sub
mov
test
cmp
jmp
pop
cmp
loope
psrld
inc
cmp
lret
pop
sbb
xchg
scas
mov
cmp
jns
mov
push
ss
int3
fdivl
in
and
fistps
sahf
adc
and
mov
dec
add
sub
push
or
add
adcb
or
or
push
loope
stc
jecxz
sahf
lret
outsl
in
push
mov
adc
push
push
sub
pop
pusha
and
dec
mov
aaa
fdivp
inc
bound
mov
xchg
std
cmpsb
cmp
cwtl
sbb
dec
ret
mov
in
out
ja
jnp
jmp
vphaddudq
mov
mov
into
dec
ret
push
jnp
push
xor
sbb
fdivp
icebp
pop
frstor
adc
adc
push
movsl
fmul
jns
push
fsub
dec
es
sub
pop
xchg
fmuls
pop
adc
dec
icebp
sti
addr16
pop
push
shlb
insb
push
push
or
mov
pop
cld
dec
dec
fsubl
test
push
cmpb
jle
xchg
jge
xor
or
dec
fcmovbe
jno
xchg
loop
xchg
shll
inc
mov
dec
xchg
aas
cmp
sbb
jge
and
sbb
stc
es
push
adc
scas
punpcklwd
jo
cmp
cmp
inc
inc
dec
repnz
ds
mov
jnp
enter
jo
sbb
xchg
pop
cmpsb
rorb
cmp
nop
lret
add
xchg
lahf
ds
cmpsl
fmull
xchg
mov
scas
xchg
jns
mov
adc
cltd
add
mov
adc
pop
jnp
add
int3
sbb
mov
dec
mov
inc
push
imul
aad
arpl
xor
cwtl
jbe
mov
and
jno
not
cmp
inc
mov
adc
push
jbe
sarb
adc
mov
fwait
jae
test
sub
insl
xor
mov
test
xchg
pop
fimull
sub
je
std
cmp
inc
inc
lods
mov
mov
cmp
loop
add
das
test
cmp
mov
cld
stos
fcmovnb
inc
jecxz
test
cwtl
push
pop
mov
cmpsl
xchg
mov
push
jg
cmp
pop
daa
ja
sbb
std
and
pop
inc
adc
ret
jb
xor
imul
or
out
data16
pop
decb
push
adc
out
sbb
lds
ret
or
ss
sarl
xchg
orb
das
fiadds
enter
xor
inc
imul
inc
sbb
shll
test
mov
aam
aad
sbb
mov
cmpsb
xor
and
jge
and
sbb
stos
mov
dec
fucomi
xchg
insb
insb
loopne
sub
push
pop
jl
nop/reserved
adc
mov
testl
jne
jo
ja
sbbb
xor
leave
fsubrs
sub
loopne
jecxz
push
adc
sbbl
jae,pt
fiadds
in
bnd
inc
ljmp
adc
enter
cwtl
adc
lret
addr16
enter
stc
pop
and
adc
imul
movsb
inc
sbb
das
pop
fcomps
divl
cmpsb
lret
test
dec
shrl
scas
stos
xor
jmp
outsl
add
mov
arpl
orb
push
add
test
mov
stos
mov
push
xchg
sbb
pop
lcall
cwtl
push
cmpsl
pop
jb
int3
clc
fstpt
icebp
test
out
mov
cltd
mov
shlb
sub
js
aaa
add
fdiv
dec
jmp
push
adc
leave
scas
aaa
xor
ret
jl
aad
int
cld
or
dec
scas
jb
dec
push
sub
lock
out
in
inc
jne
int3
pop
sbb
dec
scas
out
loope
insb
ljmp
andl
testb
add
mov
pop
mov
push
mov
stos
shll
cltd
mov
xchg
sbb
idivb
or
xor
bound
daa
cld
xchg
gs
ret
mov
arpl
push
xchg
xbegin
mov
xchg
jge
mov
out
mov
inc
xchg
or
imul
in
xchg
arpl
cmp
insb
adc
mov
sbb
push
aas
push
loopne
cmpsb
sub
mov
cmpsl
pop
imull
pop
call
jge
jns
imul
xor
push
divb
dec
inc
xchg
imul
xor
xor
adc
scas
outsb
inc
lret
mov
inc
vmread
and
fucom
addl
stc
outsb
popf
cmpl
adc
stos
jno
jae
out
dec
out
mov
add
dec
adc
sti
pop
lea
push
inc
xchg
cmpsb
push
shlb
aam
loope
in
enter
sub
in
aaa
pop
lcall
push
paddq
jb
repnz
lahf
mov
movsb
xor
dec
out
mov
adc
rcll
sub
inc
mov
mov
loopne
lds
push
and
cmp
leave
sbb
popa
test
inc
cmpsb
mov
imul
ret
xchg
leave
pushf
xor
dec
mov
cld
cmp
in
stos
sub
push
fidivrs
push
xchg
jl
mov
inc
ds
xlat
mov
shrl
test
test
data16
jb
lcall
jae
add
es
lock
jno
imul
inc
scas
push
push
decl
out
sbb
aaa
jno
cmp
cld
xchg
jecxz
or
imul
aas
shrb
add
insl
gs
daa
cmp
loope
leave
jmp
movsb
jb
movsl
ds
cmp
leave
call
push
push
int3
add
sub
sarl
pop
push
loope
or
jmp
or
repz
cltd
scas
lods
mov
sbb
stos
jle
mov
jo
sub
cmp
out
add
xor
push
frstor
mov
in
test
cmc
sub
cmp
pusha
dec
rorl
pop
out
popf
jl
or
movsb
push
and
outsl
hlt
ret
add
sbb
or
movsl
and
sbb
ss
adc
jp
push
push
add
adc
cmp
push
inc
lods
enter
stos
inc
in
fimuls
pop
xchg
test
fsubr
jbe
test
repz
or
fbld
inc
es
push
in
jo
adc
cs
pusha
pop
std
leave
je
in
mov
add
dec
or
sub
sbb
ftst
push
cmp
lds
loope
xchg
sbb
leave
ss
mov
mov
in
inc
bound
mov
dec
pop
aam
cmc
pop
jo
pop
and
pushf
or
ss
aaa
test
addr16
push
pop
sti
dec
int3
repz
out
bound
lods
pop
mov
loop
ret
dec
hlt
push
add
rol
clc
xchg
frstor
mov
sbb
outsl
lret
jg
lock
nop
enter
cld
sbb
icebp
or
sti
sub
divl
jbe
fbstp
dec
dec
cmpb
add
outsl
cmc
insb
mov
pop
or
fsubl
hlt
sbb
pop
add
aaa
test
mov
icebp
dec
push
addb
jle
aaa
daa
xchg
xchg
movsl
std
sub
test
sub
xor
aam
push
in
je
pusha
sub
add
fsubrs
shr
sti
fs
push
add
fcoms
sbb
mov
mov
mov
push
or
xchg
jle
xchg
mov
ret
mov
sbb
adc
sbb
adc
and
pop
xchg
outsl
pop
sbb
sarl
nop
mov
in
adc
outsb
aaa
inc
sbb
dec
cltd
fistl
cmp
lahf
push
outsl
fucom
sub
out
add
lods
dec
push
pop
jmp
loop
jae
mov
imul
xor
push
push
rorl
push
add
out
jbe
orl
arpl
mov
test
cmp
pop
mov
cmp
aas
add
jmp
daa
add
stos
push
pop
xor
push
imul
adc
push
test
sbb
mov
int3
mov
cs
lahf
mov
data16
sub
popa
repnz
pop
pop
lret
push
dec
outsb
pop
jl
mov
mov
jecxz
cmp
or
incl
es
lcall
dec
and
mov
fldl
jmp
or
jns
xchg
xor
insl
dec
cmp
movsl
mov
cmp
aad
int
cmpsl
mov
ljmp
add
enter
push
movsb
pop
enter
popa
nop
lret
adcl
fistpll
aaa
cmp
xchg
mov
lahf
decl
fmul
xor
dec
inc
dec
sbb
jmp
lods
lcall
xchg
xor
cwtl
lcall
popa
xor
div
into
pusha
pop
mov
adc
sbb
xchg
mov
shlb
jmp
xchg
push
xchg
sahf
pop
xor
mov
sbb
mov
cmp
sbb
xchg
cmp
loop
cmc
cltd
mov
mov
lret
dec
iret
mov
push
ffreep
lock
mov
xor
push
xchg
push
pop
in
dec
leave
lds
les
cmpsl
roll
fildl
jne
cmp
or
fwait
or
test
jp
hlt
fs
test
jnp
and
cmpsb
popl
popf
xchg
mov
xchg
inc
sbb
fildll
jno
add
jnp
and
in
cmp
jb
cmpsl
add
and
cmp
imul
cmpsl
pop
ja
push
mov
push
jmp
xor
aad
ret
fsubs
add
fmull
fstps
int3
fadds
aad
loop
xchg
fildl
clc
xor
sbb
and
pop
inc
mov
cmpsl
sub
add
outsl
cmp
push
popa
sbb
sarb
add
fwait
adc
or
call
ja
add
loopne
jbe
int
mov
mov
or
jl
shrb
movsb
cld
scas
lret
xor
loopne
xor
and
addl
fsubrp
push
lcall
in
mov
std
cmp
add
xor
mov
xchg
repnz
or
lcall
loope
jmp
add
dec
mov
mov
sbb
inc
icebp
xchg
data16
push
mov
clc
xchg
xchg
aaa
jo
and
js
jp
inc
mov
pop
into
rolb
lcall
add
xchg
mov
shrl
outsl
and
lods
and
push
pop
mov
xchg
pop
filds
hlt
daa
iret
xchg
push
jecxz
scas
cltd
pop
inc
mov
push
xor
lahf
les
and
adc
cwtl
mov
jb
stos
jbe
cmpsb
cltd
add
sbb
outsl
cltd
in
mov
mov
stos
jle
sub
jg
aaa
cmp
xor
mov
dec
jle
pop
xor
ja
clc
popf
add
xorl
push
and
push
and
cmp
test
fistl
test
jmp
inc
hlt
scas
pop
inc
jl
adc
out
mov
outsb
cwtl
pushl
pop
cmp
lret
nop
push
popa
fdivrs
lcall
fwait
push
rcrb
cmp
pop
out
pop
incl
sub
cwtl
imul
stos
in
mov
xor
ljmp
loopne
mov
jg
nop
test
rorb
adc
or
mov
adc
cmp
sub
fwait
sahf
or
mov
lret
lret
cmp
jmp
jecxz
movsb
test
int3
pop
sbb
add
adc
arpl
icebp
xchg
mov
shr
scas
int
int
cmc
xor
loop
dec
call
movsb
xlat
pop
jg
or
add
push
sbb
jle
mov
pushw
ret
lds
pop
lods
and
add
xchg
lret
lret
dec
xor
test
jmp
out
and
sbb
inc
jp
xchg
and
mov
add
mov
inc
iret
into
scas
ja
and
cwtl
mov
hlt
or
aaa
push
sahf
mov
lds
lods
xchg
aad
push
xchg
mov
fadd
outsb
imul
or
push
das
mov
fcmovb
push
pop
adcl
mov
mov
push
adc
or
jns
push
cmp
test
fdivp
cmc
mov
jp
mov
stos
test
rclb
sub
fwait
or
mov
in
incb
out
pop
test
popf
add
les
lcall
mov
dec
lea
mul
ret
in
jge
push
mov
scas
jge
inc
gs
fimuls
cmp
inc
or
mov
lds
jns
sub
pop
loopne
fldenv
mov
push
sbb
xchg
inc
dec
jge
lahf
popf
fists
inc
jb
jp
xor
cmp
push
sub
and
sbb
hlt
push
imul
pop
fcoml
gs
pop
test
nop
sbb
out
lds
nop
adc
add
ss
add
cld
outsb
mov
jp
and
lods
xor
popf
out
mov
push
jbe
sahf
dec
daa
xchg
movsb
xchg
jae
push
mov
dec
jp
sub
sahf
pop
jnp
outsb
imul
inc
and
or
sbb
sbb
push
inc
popa
cwtl
sti
or
pusha
xor
mov
sbbl
cmp
mov
lds
ret
shlb
sbb
ds
nop
xchg
jmp
fwait
adc
fcomp
int3
movsl
push
mov
repz
outsl
xchg
pop
or
repz
xlat
in
and
cmpsb
jle
jp
dec
fnsave
xchg
incb
or
xor
cmc
jle
lahf
insb
mov
adc
ja
pop
test
pop
mov
pushf
and
scas
stos
int
add
add
scas
lds
and
loopne
sub
and
rolb
xor
push
mov
aad
lea
pop
push
mov
shrb
test
out
rorl
inc
insl
repz
insl
fsubrp
ljmp
or
movsl
mov
push
fistl
repz
mov
hlt
popf
cmp
or
xchg
push
pop
hlt
or
push
stc
xor
lds
push
mov
mov
nop
lret
test
gs
aaa
push
ret
mov
pop
pop
lods
pop
xchg
mov
push
movswl
dec
jno
enter
jmp
cmp
sub
xchg
xchg
mov
add
push
stos
out
push
adc
js
jbe
inc
push
dec
mov
sbb
add
xor
lret
adc
cmp
push
adc
jno
pop
push
pop
inc
ficomps
xor
sub
mov
adcb
push
jmp
push
leave
dec
and
sub
lret
in
subl
xchg
in
add
and
pop
stos
jp
ja
push
ljmp
popa
add
pushf
in
sahf
test
xchg
jmp
ja
dec
or
stc
mov
pop
sbb
inc
nop
fldcw
test
faddp
jecxz
mov
adc
sub
mov
scas
int
stc
daa
jp
cltd
add
loope
aam
subl
dec
dec
insl
xor
push
and
cs
idiv
add
xchg
stos
test
daa
clc
insl
push
jnp
jno
aas
pop
sbb
push
push
popf
xchg
inc
aaa
sbb
sub
jnp
sbb
es
cmp
mov
cmp
jb
mov
cwtl
fisttpl
mov
in
cmp
mov
mov
enter
xchg
sbb
and
cmpsb
cmp
loop
xor
cs
sbb
push
ficompl
sbb
cmpsl
mov
cmpl
test
shll
adc
movsb
rcll
js
mov
pushf
or
dec
in
or
xchg
out
sub
mov
adc
into
sub
int3
or
dec
cltd
dec
shld
mov
insl
mov
and
and
call
sbb
inc
das
loop
dec
fs
loop
jb
mov
mov
add
scas
icebp
sub
or
clc
scas
idivl
jg
nop
jl
and
xchg
aas
out
fs
fsubr
push
jg
mov
adc
and
lea
sbb
mov
jb
jle
into
outsl
pop
enter
icebp
cmp
outsl
mov
mov
sub
xor
inc
fdivs
cs
lret
inc
in
jge
ds
cmp
ret
push
push
mov
je
cs
aas
mov
shll
inc
test
jae
je
cmp
sahf
arpl
add
add
jnp
in
dec
pop
mov
jns
jno
and
pop
push
nop
mov
mov
mov
adc
daa
xchg
sbb
or
in
addr16
add
hlt
pop
shr
sbb
xor
stos
in
xchg
ficompl
je
mov
mov
pop
pop
std
mov
mov
or
xchg
jns
xor
jnp
mov
movsl
fcomp
inc
push
cs
mov
push
lret
dec
and
or
fwait
data16
lcall
mov
jg
push
adc
test
and
mov
in
pop
loop
or
ffreep
sub
in
adc
dec
xor
xchg
mov
aad
scas
decb
mov
testl
adc
and
ljmp
pop
sbb
or
mov
loopne
insl
add
push
loopne
std
imul
shr
xchg
mov
push
cli
add
or
inc
ds
sarb
iret
mov
and
push
imul
mov
mov
je
subb
in
shlb
mov
xchg
and
jbe
lea
fbld
push
xor
call
inc
repz
mov
arpl
int3
fs
cmpsl
adc
and
push
xchg
ss
in
xor
fwait
xlat
lahf
cmp
shll
ret
inc
test
inc
and
lcall
and
adc
dec
add
push
or
daa
out
xchg
dec
out
jns
loop
mov
mov
mov
jg
inc
ljmp
adc
movsl
xchg
les
jp
pop
sbb
adc
loop
jge
ret
push
int3
out
mov
push
sbb
loop
add
mov
adc
loopne
mov
mov
out
add
sbb
add
ret
aas
jmp
jecxz
lret
xchg
subl
cmpsl
adc
push
jge
enter
je
sub
aas
imul
call
push
dec
adc
cmpsb
mov
sub
popa
sub
push
ror
mov
stos
and
out
or
insl
addr16
or
xchg
jo
les
fadds
js
fidivs
ja
sbb
out
dec
fisttpl
out
xchg
lock
in
inc
stos
mov
ljmp
pop
clc
pop
sbb
popf
mov
jo,pn
lcall
mov
fnstsw
lds
stc
dec
sub
mov
out
inc
pop
inc
fwait
pop
call
stc
call
movsl
xor
sbb
outsb
adc
orl
ret
icebp
outsl
push
lahf
mov
mov
out
ja
push
and
lret
add
push
test
lret
xor
cld
cmpsl
cs
mov
cmp
ss
cltd
cmp
push
outsb
jg
mov
mov
andb
fsubrl
xchg
and
inc
enter
push
into
test
xchg
fnstenv
pop
pop
popf
mov
ljmp
sub
push
xchg
lret
pop
or
outsl
jbe
repz
sti
mov
add
cmp
loop
inc
stos
fistps
xlat
lret
jnp
das
rol
clc
fidivrl
sbb
ja
push
orl
jl
jns
xchg
xlat
shrl
push
orb
into
test
outsb
jns
mov
out
xor
mov
xor
or
xor
xchg
mov
push
cmp
push
jp
xor
out
outsl
jb
outsb
add
push
push
int
mov
inc
jp
aam
scas
push
pop
dec
repnz
ss
movsl
mov
cmc
dec
xchg
je
popf
fcomps
repnz
pcmpeqw
imul
xor
decb
je
imul
arpl
pop
mov
xchg
ljmp
jmp
popa
mov
xor
cmp
push
scas
movsb
or
cmc
dec
adcb
rcrb
jle
out
filds
jmp
xor
mov
or
fwait
mov
mov
imul
xchg
in
mov
sbb
push
xlat
sbb
ss
jo
sub
push
sahf
ds
loop
push
sub
mov
fdivrl
cmp
cmp
push
ds
rorb
pop
dec
inc
push
idivb
sbbb
cbtw
jne
and
loop
and
lods
loop
xor
rorb
add
pop
xor
stos
scas
leave
stos
mov
sahf
cwtl
xchg
test
push
cmp
lret
mov
dec
jp
mov
dec
ljmp
in
push
mov
rolb
lods
xor
cmc
or
adc
push
or
mulb
cmp
jbe
rolb
pop
insb
daa
jmp
loop
nop
das
orl
arpl
mov
fmuls
ret
xchg
mov
fucomp
xor
adc
outsb
xchg
cli
gs
pusha
and
ret
push
xchg
xchg
dec
popf
fstpt
stos
xchg
pop
insl
adc
iret
push
popa
call
and
mov
aaa
das
push
enter
jp
icebp
push
arpl
and
jmp
fistl
sbb
mov
int3
in
insl
cmpsl
sub
push
leave
push
mov
push
jno
jg
cmp
push
xor
jae
test
mov
add
leave
scas
dec
xlat
mov
push
fs
fsubrl
loop
inc
in
ljmp
pop
adc
jno
and
mov
dec
cs
push
mov
add
test
dec
mov
sbbb
push
fwait
push
btr
xchg
add
mov
cmp
stos
adc
ds
mov
in
fsubp
ja
xchg
stos
cmc
inc
in
insl
aam
add
rcr
ljmp
mov
shll
jp
lret
dec
xchg
mov
cmpsl
jle
mov
cli
jb
pop
adc
xor
jo
fmull
sub
int
in
shlb
or
push
in
rol
jno
cmpsl
fnstcw
dec
push
mul
pmullw
inc
jns
ds
rorb
movsb
jmp
cwtl
cmpsl
ret
add
lods
test
mov
push
movsb
addr16
imul
pop
sub
sbb
mov
xchg
or
sub
mov
jl
push
scas
mov
ret
repnz
push
js
ret
jno
out
add
pop
sbb
jle
and
cmp
sub
pop
ss
mov
cmp
jle
xchg
cmpsl
mov
icebp
push
stc
xor
xor
mov
stc
mov
in
sbb
shll
pop
popa
mov
mov
xchg
sub
or
xor
inc
fisubrs
lret
loopne
add
outsb
cmp
ljmp
fmul
add
mov
and
popf
push
push
jne
sub
inc
loopne
mov
and
imul
leave
outsb
cltd
es
jp
aas
rcl
mov
lods
mov
pop
dec
mov
cmc
mov
movl
adc
in
dec
add
jecxz
addr16
mov
js
popa
jb
mov
jo
pop
lret
ss
in
or
mov
xorb
cmpsl
push
inc
pushf
inc
inc
push
and
mov
pop
daa
xor
pop
out
mov
movsb
js
pushf
add
xchg
mov
mov
jmp
mov
xchg
push
and
fsubl
sbb
fsts
dec
dec
iret
inc
cmp
jle
xchg
ss
pop
and
js
ret
shl
es
adc
adc
jb
sti
jb
xchg
push
ret
xchg
pop
inc
sub
adc
sub
mull
inc
scas
mov
jmp
cli
cmp
stc
je
lcall
sub
push
push
test
scas
adc
aad
pop
push
jo
mov
rclb
jmp
scas
cwtl
shll
sbb
jo
push
jle
loopne
cmp
fiaddl
push
call
pop
cmpsb
mov
imul
outsb
mov
enter
xor
lea
iret
ret
xor
xorb
ds
test
sub
aad
subps
xor
push
jno
inc
and
or
cmpsl
xor
dec
mov
inc
daa
inc
and
cmp
xor
ret
mov
ret
das
popl
adcl
push
add
stc
mov
cmc
call
mov
push
cmc
sbb
push
lahf
inc
inc
dec
rcrb
repz
jns
mov
jl
mov
mov
mov
pop
call
xchg
test
lret
imul
idiv
mov
cmpsl
dec
push
push
lods
xchg
js
addr16
shll
pop
inc
fcoml
mov
out
cmp
mov
push
mov
pusha
dec
dec
xor
adc
jg
xchg
mov
push
ret
pop
or
jmp
arpl
inc
sub
cld
outsb
adc
dec
mov
cli
jl,pn
fs
imul
jno
test
mov
jb
stos
insl
nop
mov
xor
and
adc
ret
mov
mov
jne
push
xchg
pop
inc
inc
jne
push
add
gs
mov
mov
mov
or
mov
inc
sub
sub
fwait
mov
sbb
stc
fnstsw
jbe
idivl
js
xor
out
mov
jl
dec
mov
xor
mov
inc
xor
bound
punpcklwd
or
sbb
and
dec
push
add
and
das
jnp
outsb
iret
jbe
movl
inc
mov
in
pop
aad
outsb
sub
sub
inc
data16
mov
fs
or
add
dec
outsb
jl
mov
icebp
adc
sub
or
icebp
xor
xchg
sub
pop
ret
push
xor
inc
aad
mov
call
call
jmp
xor
fistpl
outsb
out
rcll
xor
les
cmp
inc
push
fs
sbb
fldenv
into
cmc
in
sahf
push
ret
add
jge
sub
shll
daa
xorb
push
addr16
jl
or
push
sub
test
decb
mov
jle
movsb
lret
mov
scas
push
cli
lret
jle
out
into
outsb
or
dec
or
jo
es
test
out
hlt
std
pop
or
xor
cmpsl
push
xor
rcpps
pop
cmp
xchg
leave
shrb
repnz
shlb
xchg
sub
insb
out
sahf
or
jge
xchg
pusha
aad
ja
je
inc
mov
pop
push
dec
mov
and
dec
add
adc
xchg
pop
push
mov
popa
push
aas
cmp
aad
jb
loopne
outsb
ja
out
dec
jg
pop
cwtl
xchg
jb
adc
adc
fwait
dec
and
xchg
mov
sub
shll
sub
imul
push
mov
push
int
lea
jmp
xlat
inc
ret
jmp
clc
cld
cmp
in
fisttpll
mov
mov
iret
leave
ljmp
mov
lods
cmp
and
jle
mov
decl
mov
xor
adc
inc
movsl
push
or
mov
mov
mov
inc
xorb
bnd
fsubr
lret
sub
cmp
adc
es
out
jae
push
add
ret
add
lock
stos
mov
rcrl
push
shll
fildl
mov
adc
fiaddl
push
pop
cld
movsb
cmc
xchg
xor
adc
xchg
test
dec
jno
lret
sub
bound
mov
daa
xchg
in
cmp
push
xlat
mov
jmp
inc
xchg
pop
imul
xorb
sbb
jmp
out
mov
loop,pt
pop
cmp
cmpb
mov
xchg
or
push
idivl
and
insb
and
sahf
int
arpl
shlb
lret
mov
mov
pop
je
push
movsb
loope
push
pop
mov
dec
popa
cltd
lds
inc
mov
cmp
loop
mov
pushf
xor
fisttpll
sbb
and
jnp
fnstcw
pushf
or
xor
jle
push
xor
test
mov
sbb
sbb
ret
ds
mov
pop
mov
jnp
scas
sub
dec
enter
cld
in
rcrb
shrb
je
inc
loop
shr
push
test
test
scas
pop
mov
stos
stc
jmp
sbb
dec
jecxz
sub
add
lcall
cwtl
ja
mov
sub
pop
repnz
dec
orb
and
cwtl
adc
inc
lods
cs
imul
sbb
sbb
daa
xor
dec
dec
pusha
inc
in
mov
aam
mov
mov
arpl
scas
mov
mov
mov
les
dec
fwait
gs
int3
cwtl
ffree
aad
call
jae
sub
mov
in
mov
addb
cmp
outsl
mov
pop
push
pushf
insl
mov
repz
pusha
jp
dec
insl
push
jne
xchg
daa
mov
push
clc
dec
in
ret
cltd
das
xchg
adc
test
mov
adc
sbb
jbe
sub
mov
addr16
cmpsl
cmp
out
lret
lahf
insl
std
outsb
je
push
push
cmp
inc
test
xchg
mov
ss
adc
push
lock
std
mov
int3
add
adc
stos
push
cmpsl
nop
inc
xor
xlat
sub
xchg
repz
or
xchg
shrb
and
out
xorl
fadds
lods
clc
ja
mov
xchg
cmp
xchg
cmpsl
and
inc
lods
lods
mov
mov
sbb
clc
push
andb
outsl
stos
icebp
dec
dec
out
mov
lock
dec
dec
adc
test
test
jge
add
lods
outsl
xor
inc
in
push
cmp
xchg
xchg
mov
mov
ret
ret
xlat
cmc
aas
xchg
int
mov
jne
fidivl
leave
call
leave
mov
shlb
mov
inc
mov
jecxz
push
ja
ss
and
ret
cmp
mov
jo
or
mov
jp
loop
lret
pop
sbb
in
sub
out
scas
mov
pushl
sub
stc
dec
rcrb
add
das
orb
aas
insl
ret
sbb
fdivrl
xchg
ja
push
and
cmp
push
shrl
sbbl
pop
bound
push
faddp
in
mov
out
sti
adc
sbb
das
sbb
and
jbe
xchg
cmp
lods
fndisi(8087
aaa
decb
mov
jle
jmp
and
cmp
mov
push
mov
xor
stos
push
cld
mov
mov
inc
pushf
cmp
pop
sub
dec
lret
fstps
out
jne
push
lods
iret
add
push
sub
push
loopne
push
push
out
or
test
inc
or
sbb
aad
divl
mov
cmp
pop
stc
mov
in
pop
out
ja
or
sbb
inc
mov
jmp
jns
or
ljmp
pop
mov
cmp
enter
xor
cmp
xchg
xor
mov
add
rcl
out
int3
leave
jmp
mov
push
sub
lds
jp
dec
hlt
mov
push
lods
aad
data16
insl
mov
aaa
pop
int3
xchg
push
jne
movsl
fisubl
ja
sub
imul
daa
das
pop
sub
sbb
sbb
loop
mov
out
and
xchg
push
das
ds
jecxz
and
in
mov
test
pop
lcall
stos
stos
sub
fld
dec
jb
and
or
xlat
xor
dec
push
call
aaa
ja
add
insl
sbb
sbb
inc
das
jmp
jl
cld
sub
aas
inc
lret
push
or
push
xchg
pop
lods
movsb
cltd
shlb
loope
pop
push
incl
jmp
dec
push
pop
inc
add
sarl
mov
sub
stos
add
int
dec
xor
or
call
int3
mov
nop
ljmp
test
push
xchg
sub
cmpl
int3
mov
out
leave
jle
push
movsl
jbe
lcall
push
pop
cmpsl
xor
repz
imul
dec
pop
jbe
mov
inc
pushf
decb
pop
or
and
cmp
cli
sub
es
sbb
mov
je
popf
xor
sub
cli
or
ret
rorb
decl
test
fldl
adc
stc
push
dec
push
jb
or
lret
xchg
sbb
stc
dec
test
xor
lret
lret
and
push
pop
movsb
into
pop
lds
negl
sub
sub
imul
mov
out
daa
dec
std
mov
shr
mov
lea
add
push
loopne
sbb
loopne
ret
ror
mov
xchg
jae
pop
xchg
dec
fildll
and
enter
fdivrl
enter
mov
and
jmp
mov
inc
mov
or
mov
sbb
mov
lret
insb
dec
xchg
mov
xchg
jmp
push
sbb
xor
mov
adc
mov
adc
dec
pop
xor
sbb
jmp
test
fldl
ds
dec
mov
neg
mov
mov
mov
inc
or
xchg
loopne
adc
cmp
nop
mov
outsl
leave
xor
cs
jge
mov
xor
xor
cs
xchg
sbbb
sbb
or
ja
inc
jl
jl
outsl
mov
int
pop
adc
stos
inc
scas
inc
cmp
xchg
mov
test
scas
shrb
pop
pop
lods
mov
insl
pop
xchg
out
in
dec
out
push
mov
inc
sarb
cmp
mov
ljmp
push
mov
arpl
movsb
dec
xchg
fidivrl
dec
adc
sbb
xor
das
sub
or
xchg
push
das
xchg
or
lods
add
mov
and
jecxz
pop
rolb
gs
lock
mov
test
adc
roll
mov
rol
jp
xor
js
pop
imul
inc
inc
push
leave
cmp
cmpsb
ficompl
sub
in
inc
xlat
dec
push
cmp
loope
and
lcall
push
inc
inc
push
push
mov
in
xor
sahf
cmp
cmpsb
pusha
nop
adc
push
ja
xor
fcomps
mov
imul
mov
aam
shr
jnp
or
popa
mov
xchg
in
jp
or
pop
and
sbb
sar
jmp
mov
or
into
dec
mov
popa
inc
add
xchg
das
cmp
jl
xor
mov
cmpsb
push
sbb
or
mov
pop
adc
lods
stos
inc
pop
iret
mov
or
jae
neg
dec
cmp
mov
movsb
sbb
mov
repnz
inc
xor
dec
add
ss
rcr
mov
popf
and
mov
xchg
jmp
pop
gs
push
ja
pop
pop
push
pusha
cs
mov
rcr
push
jnp
jge
mov
pop
lds
jl
aad
pop
mov
xchg
sbb
fcomp
clc
and
sbbb
add
rclb
and
pushf
push
cs
lret
les
dec
inc
jnp
stos
cmp
ret
xchg
mov
mov
xor
call
mov
push
pop
filds
mov
int3
out
clc
test
mov
lret
add
push
push
dec
push
inc
pushf
out
mov
cmp
in
xchg
push
pop
leave
xor
mov
arpl
popa
jle
add
in
xor
leave
cli
adc
or
imul
add
cld
or
fs
sbb
outsb
add
imul
jne
push
mov
and
stos
cs
gs
int3
dec
in
cmp
dec
mov
dec
pop
aad
cmp
add
rcrl
xchg
and
mov
pop
nop
mov
xchg
je
adc
fnsave
pop
ret
xchg
pusha
jl
out
mov
in
push
pop
bound
push
repnz
and
aad
sbb
push
in
rcl
in
test
mov
or
xchg
mov
dec
sbb
jmp
jnp
ds
mov
repnz
push
leave
shlb
popf
xchg
cmp
add
pop
outsl
or
sub
popf
test
push
mov
jecxz
shrl
cmp
mov
cwtl
out
scas
test
mov
or
jl
inc
test
adc
mov
call
push
lret
pop
jne
inc
ja
incl
sbb
lea
sub
flds
or
sbb
mov
dec
pop
sbb
lcall
xor
mov
inc
dec
mov
dec
sub
xor
sti
push
cmpsl
push
subb
sti
call
xchg
sub
xorl
loop
lock
adc
mov
lods
das
jg
and
adc
fdivrp
les
and
mov
ja
xchg
scas
stos
mov
hlt
adc
push
push
js
popf
enter
mov
mov
lds
out
insl
les
fs
pop
xchg
imul
scas
mov
ljmp
xchg
pop
clc
stos
fucom
fisttpll
gs
cmp
rcrl
xchg
ja
push
xchg
cmp
push
out
jns
xor
xor
sbb
std
test
imull
lods
pop
pop
lret
xchg
adcb
jmp
add
jle
mov
mov
adc
or
xor
into
xor
ret
mov
cmpsb
sbb
lcall
or
icebp
mov
enter
inc
sub
pop
rcrb
xlat
roll
and
mov
mov
insl
xor
inc
andb
xor
adc
pop
jp
cmp
cmc
cmp
addr16
ror
cmp
push
pop
push
clc
divl
xor
push
out
sahf
push
test
xor
addr16
adc
cli
and
push
jp
out
mov
xchg
icebp
push
pop
mov
xchg
xchg
fwait
jae
out
and
add
cmp
je
push
stos
aaa
lods
mov
dec
dec
jecxz
out
test
lcall
inc
sub
pop
insl
loopne
popf
icebp
jl
out
or
inc
cmp
shrb
into
mov
rol
jbe
inc
pop
data16
push
xchg
xchg
lds
imul
xor
ret
arpl
clc
imul
mov
dec
push
in
aas
push
loop
jb
cmpsl
std
stos
dec
test
add
pop
adc
ds
mov
adcb
ja
cmpsl
cmp
rclb
dec
sbb
std
fwait
lahf
push
xlat
cmc
js
push
or
mov
cmc
call
popf
fs
lock
cltd
push
addr16
fnsave
pop
and
xchg
cmp
xor
loope
adc
xor
adc
or
push
iret
outsl
loope
outsb
nop
inc
mov
out
xchg
jns
xor
leave
ficoms
xchg
pop
adc
lcall
xor
sbb
fwait
lahf
fstpl
jne
int
dec
sub
mov
loop
xchg
es
jno
call
test
lahf
or
adc
sti
ds
movsl
cs
ja
mov
repz
in
and
jne
push
sub
or
imul
fsubl
outsb
ds
pop
les
xchg
pop
and
mov
inc
scas
scas
xor
xor
mov
inc
adc
loopne
test
aas
dec
mov
dec
dec
add
jg
ror
and
popf
mov
loopne
push
je
fcmove
sub
dec
push
ret
cmp
sbb
push
iret
xor
cld
cmpsl
ja
insb
lea
fadds
lods
push
in
ret
test
push
jp
add
movsb
imul
adc
add
addr16
andps
sbb
nop
mov
mov
jecxz
pop
inc
movsl
cmpsb
or
mov
inc
shll
repz
rcrb
fwait
divb
lret
out
and
dec
sbb
push
or
mov
adc
pop
stos
in
dec
clc
jmp
clc
cmc
inc
push
add
cwtl
jecxz
mov
cli
sbb
cmpsb
dec
incb
mov
xor
rcrl
dec
push
getsec
cmp
adc
loop
rcrb
stos
pop
addr16
mov
lods
and
pop
adc
or
js
sub
and
sub
and
test
xchg
mov
fsub
cmp
rcl
mov
nop
sbb
pop
sub
xor
cmc
xchg
add
xor
pop
pop
je
fstps
and
push
push
aaa
outsb
cltd
pop
ficomps
mov
lret
dec
cli
adc
sub
jp
mov
mov
stos
xchg
test
xor
adc
mov
loope
cmc
clc
cmc
dec
into
scas
mov
sti
xchg
dec
add
outsl
das
mov
mov
adc
inc
push
fwait
mov
imul
cld
cmp
stc
ret
enter
dec
push
outsb
imul
scas
pop
es
pop
cmpsl
pop
test
fiaddl
iret
mov
es
sbb
lret
mov
imul
sub
push
scas
mov
shrl
jp
rorl
fs
scas
mov
fnstenv
pop
mov
mov
sbb
adc
mov
xchg
dec
jge
xor
add
push
jg
jae
ds
push
int
in
popf
mov
loope
das
inc
ljmp
mov
dec
mov
imul
jbe
stos
fsts
xlat
loope
pop
push
shrl
sbb
bound
and
add
notl
dec
std
ljmp
inc
shrl
repnz
sbb
mov
jle
xchg
adc
outsl
mov
jle
push
fcompl
imul
mov
jns
xor
cmc
cltd
pop
imul
xchg
cmp
and
cmp
dec
xorb
push
xor
mov
cmpsl
inc
repz
nop
call
xchg
insb
mov
or
jge
out
mulb
jae
fists
push
xor
cmc
stc
and
xor
xor
das
fstpt
or
cwtl
sbb
mov
in
mov
sub
xlat
pop
cli
arpl
mov
ret
add
and
stos
data16
xor
add
sbb
outsb
cwtl
add
push
or
sbb
pusha
push
lea
fcompl
popa
in
mov
mov
ror
jp
lahf
enter
lods
push
pop
lea
or
repz
in
in
movl
ljmp
lock
jecxz
fidivrl
or
hlt
xchg
notb
inc
push
loopne
imul
arpl
push
out
xor
cs
data16
je
mov
dec
into
or
lahf
imul
rcrb
xor
pop
pop
leave
in
movsb
dec
cld
icebp
lahf
dec
ret
test
xchg
mov
jl
test
in
ds
pop
jg
push
test
int3
pushf
lods
enter
scas
iret
push
push
ds
aaa
outsb
push
cmc
xchg
enter
popf
mov
jmp
mov
adc
xor
jecxz
inc
sar
lret
mov
pop
fldenv
andb
movsl
popf
rcrb
jg
push
das
sub
push
into
lcall
pop
dec
repz
mov
adc
adc
ffreep
fdivl
iret
mov
and
cli
pop
sahf
xor
mov
mov
push
into
xor
or
and
push
mov
add
out
inc
nop
sar
insl
add
adc
int3
mov
and
in
jo
push
adc
add
out
cmp
xor
mov
jns
std
mov
mov
stos
test
imul
or
es
inc
fists
repz
divl
xor
out
outsl
bound
je
and
mov
mov
std
inc
fcmovb
lods
loope
imul
popa
test
adc
or
xchg
mov
cmp
adc
gs
xchg
into
test
sbb
mov
int3
fisubrs
rcrb
sub
shrl
iretw
sub
jp
movsl
or
or
iret
fmull
dec
jle
daa
xor
daa
cli
dec
jg
andb
icebp
cli
lods
cmp
inc
loop
insb
pusha
sub
push
mov
jbe
into
ret
cmp
lock
and
xor
ret
orb
fdivrl
mov
frstor
js
out
test
mov
mov
lea
inc
js
mov
rcr
repz
test
push
cmp
adc
cmp
jge
xchg
lahf
xor
out
jl
adc
mov
shll
movsb
cld
fdivrl
sub
push
inc
in
movb
je
cmc
xchg
mov
iret
inc
xchg
mov
movsl
cmp
cmp
jmp
push
ficompl
push
push
mov
jbe
movsl
push
or
mov
xlat
or
fcoml
and
mov
ja
icebp
sbb
out
ss
mov
mov
cmc
cwtl
rclb
and
movsb
xor
jl
test
aad
push
imul
push
andb
lcall
mov
data16
add
push
sbb
jp
fwait
imul
jno
add
sub
cmp
ja
pause
mov
jg
mov
pop
pop
mov
pop
push
lret
cmp
insl
cmp
add
mov
imul
lahf
pop
lret
jnp
popa
rep
daa
jns
mov
je
imul
std
adcl
dec
repnz
and
add
mov
add
pop
xlat
xorb
mov
mov
js
mov
jne
xchg
jnp
mov
xchg
iret
mov
mov
and
sbb
xorl
mov
dec
pop
in
mov
iret
les
fisubl
jge
sbb
out
jmp
and
call
les
inc
jbe
inc
or
subb
cmp
xchg
inc
cmp
cld
mov
and
xor
rcr
mov
push
sub
aam
cmp
outsb
jae
pop
add
jo
fidivl
sahf
test
clc
cltd
push
addr16
fcomi
out
mov
fldenv
popf
cld
lea
sbb
shl
call
push
cmp
aaa
dec
cmpsb
dec
js
test
imul
jmp
sbb
jno
inc
fs
mov
sub
jnp
mov
cli
decb
add
into
jge
les
jg
test
sub
jne
rol
loop
dec
pop
orb
fildll
sti
pop
sahf
clc
es
and
fucomip
shlb
movsl
and
cld
jg
xchg
xor
aad
add
in
gs
sbb
mov
pop
in
enter
mov
addr16
notl
lea
imul
cli
jl
fisubrs
pop
xchg
adc
sub
pop
sub
daa
push
in
lret
pop
sbb
subb
pop
push
sub
es
daa
js
iret
ss
hlt
push
mov
lea
push
push
xorl
inc
lods
mov
mov
jnp
adc
ss
adc
jmp
ffree
and
sub
jg
sbb
hlt
out
add
lds
mov
push
jnp
lret
fildll
pop
sbb
mov
add
movsl
push
imul
lods
lret
inc
mov
loop
fildl
sbb
loope
popl
stc
fiadds
cmp
sti
push
cltd
cmc
ljmp
pop
fcompl
test
cld
fmuls
fsubl
fwait
add
les
inc
and
lcall
addr16
js
jae
and
les
stos
addr16
jecxz
xchg
fcmovbe
popa
mov
adc
outsl
fs
or
add
pop
mov
ss
mov
lret
and
or
mov
and
xchg
mov
js
pop
ja
pop
jne
mov
hlt
fs
inc
xchg
in
jb
pop
mov
repz
inc
es
mov
mov
arpl
or
dec
ja
lret
add
aad
std
cmp
fwait
mov
pop
arpl
push
mov
das
push
ja
lret
jbe
mov
scas
or
mov
pushf
mov
jo
push
stos
cmc
dec
jns
or
movsl
bound
rcrl
ffree
insb
or
xchg
loope
aam
push
inc
rol
push
xor
bound
sti
iret
adc
aad
jle
add
mov
out
pop
int3
lods
mov
test
sub
pop
int
scas
mov
dec
fs
add
mov
insb
cmc
adc
sbb
stos
add
test
pop
push
sbbb
iret
add
stc
test
addr16
stos
xor
sub
xlat
pop
dec
sub
cmp
out
mov
data16
int3
nop
xor
xlat
shl
push
adcb
mov
pop
mov
xchg
push
rclb
ljmp
jmp
mov
lock
test
shrb
fldl
or
and
or
add
mov
or
jns
pop
sti
leave
pushf
faddl
pop
and
mov
push
xchg
xchg
push
aas
addr16
hlt
and
xchg
scas
dec
cmc
mov
rorl
filds
sub
jle
adc
fidivl
out
add
arpl
jo
push
into
push
push
sbb
pop
lcall
movsl
fmulp
inc
icebp
test
fsts
sbb
pop
addr16
inc
mov
cwtl
and
fistl
adc
adc
movsl
out
pop
cmp
adc
addr16
and
push
dec
loope
mov
lret
cmp
fiaddl
adc
cs
adc
in
push
pop
push
mov
aam
fcompl
pop
mov
jle
jb
mov
and
add
dec
andb
leave
aad
and
mov
stos
adc
fildll
sbb
or
xchg
jne
les
pop
cmp
lcall
lcall
stos
aaa
dec
mov
ds
stos
gs
clc
int3
push
inc
iret
inc
hlt
dec
xchg
jb
xor
aas
jae
arpl
jecxz
imul
dec
jp
mov
mov
xchg
loope
icebp
fwait
shll
popf
jns
push
adcl
test
faddl
mov
push
hlt
cmc
cmc
sbb
in
sbb
repnz
pop
dec
push
pop
mov
pop
xor
outsb
and
xor
test
xor
out
aas
lock
les
pop
test
adc
or
and
adc
jp
mov
test
pop
int3
push
lcall
jle
outsb
enter
adc
adc
push
cmp
mov
mov
add
mov
nop
add
push
xor
pushf
mov
mov
mov
xor
fwait
mov
sbb
mov
jne
mov
dec
gs
inc
sub
mov
mov
adc
ficompl
mov
les
pop
jnp,pn
push
pop
and
jns
gs
cwtl
mov
dec
test
adc
mov
push
sbb
jp
imul
dec
ret
fsubr
movsl
addr16
popa
int
mov
aad
ret
lret
test
ja
cmp
mov
int
mov
loope
cmpsl
les
push
sbb
inc
arpl
mov
ss
sbb
xor
out
rcll
cs
sbb
roll
mov
mov
jae
ror
inc
xor
sub
add
in
test
cwtl
loopne
mov
jl
cmp
testb
dec
into
or
sub
fnclex
lds
or
lret
orl
mov
ret
push
in
fisttps
push
jo
mov
jge
cmp
cmc
sbb
inc
sti
inc
push
dec
jl
pop
iret
mov
or
mov
sahf
notb
or
inc
std
addr16
fisubrs
addb
push
pop
fisubrl
and
xchg
cmp
jns
cmp
leave
push
push
dec
push
pop
gs
jns
enter
push
xchg
bound
jnp
dec
mov
xlat
in
aad
add
mov
outsb
scas
pop
jmp
xchg
cmpsb
ja
arpl
imul
pop
dec
test
jecxz
cmpsb
or
jo
sahf
cmp
cmp
mov
cmp
pop
cmc
dec
or
cmp
shl
aam
out
and
adc
dec
mov
sbb
mov
jle
aam
aaa
mov
mov
bound
xor
sub
jecxz
push
pop
sbb
and
pop
xchg
inc
std
jns
push
mov
pop
pop
push
scas
jbe
jb
push
ja
cmp
xchg
mov
xlat
out
mov
cmp
movsl
dec
rol
fisubs
sti
rorl
or
lahf
push
adc
loopne
repnz
or
xor
fbld
jmp
mov
out
mov
dec
pop
push
inc
mov
int
mov
or
add
mov
mov
mov
sub
cltd
mov
sti
scas
mov
fisttpl
popf
inc
dec
xchg
sti
data16
push
xor
xchg
out
nop
pop
mov
repz
mov
adc
insl
pop
add
mov
mov
aas
fwait
add
pop
aad
cmp
gs
xchg
mov
mov
mov
cld
sbb
jb
ss
add
mov
xor
rol
sbb
jge
xchg
add
and
mov
aad
test
push
pushf
sbb
filds
push
insb
jb
jno
inc
mov
sub
mov
stos
and
enter
aaa
jno
test
decb
mov
popf
dec
ret
sub
mov
decb
mov
mov
pop
lods
cmp
insb
sti
dec
or
jb
xor
lea
cmp
dec
xor
into
mov
repz
jb
decb
repz
data16
add
jmp
stc
pusha
or
aad
pop
jns
arpl
enter
insl
rolb
xchg
push
cmc
lahf
nop
rolb
out
mov
mov
aam
push
loope
cmp
mov
add
daa
adcb
pop
adc
mov
daa
lret
ret
mov
out
cmp
ss
fdivrs
in
int3
iret
sarl
mov
mov
jp
pop
adc
cmp
shrl
addr16
leave
cmp
cwtl
xor
jno
cmpsb
out
fcoms
cld
in
xchg
inc
jbe
or
lcall
push
xchg
cld
or
imull
les
cwtl
repnz
mov
rol
jmp
aaa
and
jo
movsl
scas
rcrb
pop
sbb
cmp
adc
xchg
inc
popa
push
lahf
rcrl
cmp
popf
loope
pop
dec
lods
push
adc
lret
cltd
mov
inc
mov
mul
mov
mov
mov
shll
inc
lcall
cmp
aas
mov
jp
bound
xor
and
jmp
xchg
test
jns
cmp
daa
cli
and
sub
daa
push
xorb
mov
fdivr
fisubrs
xchg
loop
insb
inc
insb
hlt
sbbb
adc
inc
lcall
imul
inc
cs
and
dec
add
dec
push
lds
xchg
sti
test
xor
sbbb
jno
dec
add
popl
call
xor
cmpsb
cs
repnz
testl
push
mov
into
lds
stc
sti
insb
enter
into
pop
popa
add
in
loopne
xor
mov
xchg
jp
js
and
arpl
aam
push
add
push
and
inc
repz
mov
out
jl
lods
xor
popa
dec
mov
subb
adc
mov
scas
xchg
into
fwait
mov
xchg
fsubrs
jne
outsb
shlb
add
loop
shrl
or
fwait
lds
xchg
hlt
push
lret
les
sub
icebp
inc
sub
xchg
push
adc
ja
sub
push
mov
test
push
or
xor
jp
mov
push
aad
cs
pop
fldl
and
push
mov
stos
std
push
test
jl
dec
mov
leave
insb
jecxz
in
mov
mov
and
mov
jmp
pop
mov
andb
popf
add
cli
test
mov
loop
cmp
lock
pop
in
mov
or
iret
sbb
jnp
xchg
push
adc
popf
xchg
inc
sbb
or
shrb
in
dec
cs
lahf
enter
out
add
cmc
push
loopne
and
movsl
and
jecxz
xor
shll
sbb
into
loope
lret
jnp
sahf
jg
mov
jecxz
insl
leave
clc
syscall
push
adc
pop
xchg
or
mov
pop
mov
xor
sub
adcl
mov
xchg
in
push
fistps
popa
test
mov
mov
call
add
idivb
ss
sbb
xchg
test
push
js
ret
mov
ffree
std
inc
or
fsubrl
pop
or
cltd
ds
pop
insb
sti
mov
mov
mov
adc
dec
repz
fcomps
xor
lcall
stos
lock
sbb
repz
lret
add
cmp
adc
shlb
mov
out
cs
cs
sub
push
jo
or
das
cld
xor
je
mov
movsl
pop
mov
out
or
sub
or
std
push
jle
das
xorb
shr
clc
xchg
mov
cld
std
mov
ja
std
jg
sarb
push
adc
mov
xchg
pop
jg
xchg
push
xor
pop
cs
lret
mov
mov
push
mov
jl
stc
aas
fs
xor
jo
andnps
xchg
test
stc
pop
shlb
pop
stos
push
push
fimull
jns
cmc
inc
or
mov
scas
push
das
jg
add
test
mov
adc
adc
mov
sub
jg
lods
outsl
in
ss
mov
loopne
andl
inc
lret
jns
mov
pop
fists
aaa
leave
cmp
adcb
or
adc
pop
sub
shrb
mov
pop
cmpsb
imul
nop
cmp
lea
js
sbbb
loope
xor
adc
test
sbb
fcoml
cmp
dec
shll
movsb
mov
fistpl
rorl
ljmp
mov
cmpsl
and
or
in
es
shlb
xor
repnz
icebp
in
mov
enter
aad
stc
jne
xchg
test
or
mov
imul
fisttpll
popf
lea
jle
pop
inc
and
testl
adc
scas
out
dec
mov
andb
xchg
push
pop
aas
addr16
jae
mov
sbbb
aaa
and
sub
lahf
imul
popa
repnz
data16
enter
cmp
add
adc
negb
mov
mov
dec
mov
out
out
es
loope
pop
pop
pop
push
shr
incb
xor
addr16
push
adc
das
stos
in
add
fwait
xchg
outsl
insb
push
insb
inc
sbb
push
fdivr
popf
inc
or
cltd
xchg
daa
fists
push
push
test
pop
push
mov
jnp
push
add
insl
adc
sub
pop
ror
pop
dec
cmp
xor
divl
push
popf
xchg
or
push
sub
data16
ret
jb
iret
iret
imul
add
adc
xchg
jg
sub
shrb
mov
adc
repz
push
cld
sub
frstor
subl
imul
dec
add
daa
das
push
add
arpl
cltd
lds
push
out
and
xor
sub
cmpl
sub
fisttpll
and
pusha
xchg
jbe
es
aaa
push
jp
adc
rcll
aaa
sub
jns
cmc
jbe
es
je
jns
mov
mov
or
in
std
xor
mov
scas
int
mov
shlb
int3
inc
sub
xchg
andb
or
nop
div
icebp
test
bound
jno
movsb
in
mov
mov
sub
mov
jg
cmp
fcmovne
jp
bound
and
orl
test
and
test
loope
mov
adc
add
push
gs
push
in
xor
pop
sub
test
ljmp
daa
xor
mov
test
mov
xor
xchg
xchg
adc
andl
jle
sub
add
adc
or
dec
notl
cltd
fisubrs
test
push
sahf
and
ljmp
popa
inc
test
dec
mov
add
lods
in
mov
and
in
or
stos
mov
mov
lea
xchg
jo
and
add
jge
pop
stos
out
leave
les
or
push
jmp
nop
xor
stc
in
flds
adcb
sub
dec
xor
sti
inc
jb
sub
bound
dec
or
out
or
repz
jmp
inc
into
xchg
cmp
cld
lret
push
push
cwtl
enter
arpl
jg
inc
int
push
shlb
lcall
sub
push
test
cmp
lcall
and
ret
dec
rorb
mov
or
inc
out
outsb
pop
mov
dec
popf
cmp
mov
mov
popa
push
xchg
mov
roll
fdivrs
ffreep
icebp
aas
push
inc
stos
push
je
fsqrt
add
push
xchg
fisttpll
ss
stc
sbb
adc
cmp
inc
cwtl
inc
movsl
xchg
mov
mov
pop
das
push
mov
cmp
mov
xchg
cs
inc
insl
fidivs
mov
sub
lcall
xor
cld
cmp
iret
push
and
and
jl
js
mov
imul
cwtl
push
idiv
xchg
jle
jp
icebp
test
push
jns
movsl
adc
sbb
lods
sub
fwait
push
repnz
sbb
test
pop
and
scas
mov
jne
inc
jns
fldenv
data16
jge
in
pop
mov
fldt
fldl
inc
jb
ljmp
lahf
movsl
cmpsb
pop
mov
stos
xor
hlt
jp
jbe
sbb
out
call
aam
dec
mov
popf
mov
es
xchg
mov
mov
stos
or
sahf
aas
sti
jmp
jbe
jbe
jl
pop
jno
pop
lods
mov
cmp
pusha
adc
or
xor
inc
in
int3
arpl
cmp
int
out
je
insl
xor
mov
pop
aas
mov
or
pop
in
xor
roll
mov
jno
cmc
fisubrs
in
lahf
inc
push
rcl
pop
mov
jns
stc
icebp
adc
in
jg
push
fidivrs
xor
inc
xor
pop
push
ds
xor
in
or
cld
xchg
cld
mov
jp
push
mov
add
add
js
mov
mov
test
int
loope
in
mov
fiaddl
mov
sbb
dec
or
dec
add
shl
inc
cmp
inc
out
inc
mov
sub
and
fdivs
call
int
jp
pop
pushf
xchg
xor
push
jecxz
or
dec
in
add
add
or
push
pop
jnp
jle
test
mov
push
mov
lds
aad
adc
or
dec
icebp
out
cmp
out
mov
lods
in
sub
jl
cmpsl
cmpsl
xor
push
sub
push
or
mov
cmp
dec
aas
outsl
movsl
add
ljmp
ret
and
add
popf
jmp
cmp
mov
loopne
sti
fildl
pushf
ds
cmpsb
mov
mov
pop
pop
mov
loop
cld
dec
loop
sbb
cmpsl
test
add
aam
iret
mov
cwtl
cmp
push
mov
rcrb
test
shl
fsubs
mov
imul
aas
test
dec
test
xor
cmc
int3
adc
lea
aas
cmp
scas
sub
mov
rorb
fsub
fidivrs
mov
cmp
mov
xor
ja
pop
inc
mov
pop
jmp
adc
fdivrl
add
xor
sbb
xchg
push
inc
mov
sub
mov
stos
cmp
ds
mov
pop
pushf
sub
or
outsb
ret
les
pop
dec
push
daa
test
loop
cmp
mov
pop
pop
out
or
xor
arpl
add
jl
int
jmp
pop
or
pop
and
lahf
sbb
into
xchg
shll
or
shrl
fisttps
enter
jmp
imul
mov
aaa
scas
outsl
pop
test
xchg
pop
mov
push
mov
sbb
jbe
test
repnz
in
cs
cmc
inc
call
sbb
aas
sbb
js
in
pusha
mov
mov
push
rolb
jp
add
int3
push
stos
push
mov
add
jge
sub
cmp
jle
test
mov
mov
inc
jbe
out
pop
add
pop
add
rcll
mov
add
cmpsb
sbb
sub
cmpsb
mov
shrl
iret
es
push
mov
pushf
jmp
fisubl
scas
mov
xchg
subb
sub
pusha
daa
mov
xor
shlb
sbb
pop
std
pop
aaa
iret
sti
sbb
incb
ljmp
fsts
sti
int3
scas
sub
scas
cmp
cltd
jle
fs
enter
out
mov
mov
test
dec
xchg
mov
or
sub
mov
sbb
inc
mov
adc
div
cmp
xchg
dec
bound
das
fcmovnbe
sub
movsl
sbb
or
in
loope
aaa
cmp
inc
test
sahf
push
sub
cli
fsubl
xchg
inc
lock
pop
push
into
jns
jmp
inc
nop
inc
mov
enter
lods
rol
out
cmp
mov
or
cld
sbb
xchg
jge
int3
and
stos
xor
ds
fmulp
add
clc
dec
test
jmp
pop
pop
sbb
jmp
jecxz
cmp
mov
xchg
dec
out
mov
xor
xor
lods
dec
inc
shll
and
xorb
pop
mov
jg
aam
pop
mov
mov
xor
test
sub
lods
mov
lock
fistpll
jo
xor
and
push
xlat
repnz
shr
inc
mov
mov
ret
add
or
mov
mov
xor
jne
test
mov
jbe
mov
negl
and
push
pusha
std
push
por
xchg
and
out
cmpsl
test
or
in
push
xchg
inc
fwait
and
fidivl
pop
int
mov
loop
mov
out
cmp
and
mov
js
dec
rorl
jae
loop
lds
adc
or
mov
cld
out
cmc
addl
test
nop
push
std
cli
out
mov
dec
mov
sti
int
dec
xchg
push
push
jge
sub
cmp
inc
and
or
jg
push
mov
mov
data16
icebp
leave
pop
pop
sub
bnd
and
push
mov
xor
xchg
int
and
mov
fwait
sahf
repnz
lcall
xchg
xchg
ficoml
test
stos
loope
arpl
jge
pop
imul
adc
sbb
pusha
lret
out
decb
es
insb
mov
dec
ja
push
ljmp
inc
outsl
pop
cld
adc
les
fisttps
xchg
inc
fs
cmp
shrl
jb
stos
repnz
movsl
xor
push
shl
sub
mov
popf
insb
inc
scas
lods
lds
push
pop
les
xchg
mov
dec
mov
add
aam
pop
add
adc
sub
xchg
ficomps
dec
sub
xor
jbe
xchg
scas
sbb
iret
mov
push
jae
data16
adc
push
fildll
in
push
sbb
mov
mov
cmpsl
cmp
push
mov
push
loop
push
pop
mov
and
sub
jne
imul
pop
mov
stc
stc
xor
xchg
cs
inc
pop
cmpsl
lret
and
xlat
fwait
jnp
fisubl
lahf
cmpsl
in
dec
test
sbb
mov
jmp
rclb
jbe
pop
das
int
cs
movsb
aaa
pop
outsb
out
lock
scas
orl
add
adc
jg
or
and
push
aaa
lea
cwtl
out
test
xlat
inc
mov
adc
sahf
dec
insb
jmp
mov
out
xor
sbb
pop
sbb
ret
jno
enter
lahf
dec
cmpsl
sbb
ret
pop
repz
test
pop
pop
jns
xor
aaa
and
mov
xor
pop
xchg
or
or
lods
cmpsl
mov
pop
xchg
dec
add
xor
out
aad
dec
or
inc
ret
dec
jo
adc
enterw
mov
pop
scas
mov
adc
mov
xchg
add
gs
gs
cmp
mov
mov
dec
pop
push
sbb
bound
jne
fcos
fnstcw
cltd
loopne
aad
cmp
call
cmp
jg
xchg
int
popf
ret
inc
ficoml
ret
out
out
call
dec
lods
shrb
cmc
sbb
jg
stos
adc
stos
inc
inc
aad
mov
out
je
out
or
iret
cli
inc
call
push
xor
cmc
mov
add
ss
or
inc
loope
cmpsl
add
ss
jbe
mov
das
pop
aad
cmp
dec
jns
push
mov
cli
scas
or
in
dec
out
xchg
mov
mov
ss
mov
rcll
push
out
add
xchg
xor
cmpsl
orb
out
into
es
inc
pop
and
frstpm(287
das
andl
jle
sbb
add
xchg
pop
pop
xor
adc
push
mov
xor
mov
adc
add
loopne
popf
shll
addr16
movsl
cmp
mov
fildll
or
jns
sub
and
out
fstpl
je
dec
es
push
shrb
xchg
movsb
jg
enter
add
adc
sti
aad
jge
pop
les
stos
jne
leave
popa
mov
adc
arpl
cmp
stos
in
mov
rolb
sti
inc
sarl
adc
cmp
push
in
cld
rolb
aaa
mov
mov
mov
xchg
arpl
js
fsubs
xchg
cltd
scas
sub
push
hlt
or
fsubrl
in
arpl
fistl
bound
mov
imul
test
push
xlat
lcall
stos
push
lods
push
adc
imull
test
dec
decl
sbb
or
scas
sti
sub
mov
pop
push
cmp
dec
jmp
mov
push
inc
out
pop
scas
loopne
pop
hlt
enter
aad
mov
jns
adc
sub
lds
test
fstpl
insl
and
jo
daa
testb
xchg
lods
loop
pop
xchg
cltd
js
sarl
fnstsw
mov
ljmp
loop
pop
push
leave
fs
adc
xchg
mov
add
push
loopne
xchg
or
mov
adc
pop
data16
mov
ja
icebp
les
xor
mov
xor
sti
xchg
mov
iret
pop
sbb
in
aas
sub
pusha
notl
rclb
clc
push
or
fs
adc
push
sbb
leave
inc
add
push
cwtl
push
inc
scas
and
iret
fisttpll
push
fcoml
pop
movsb
add
in
cmp
dec
cmp
in
test
cmpsl
in
in
mov
jp
call
outsl
aam
das
notl
jl
cmpsl
insb
jle
jb
dec
lock
xchg
bound
xchg
mov
mov
or
pop
cmpsb
mov
cs
inc
and
push
push
push
push
cmp
outsb
mov
mov
xchg
int
cmp
sbb
jb
mov
in
xor
and
flds
mov
das
ds
and
dec
test
add
fcoms
popf
repnz
xchg
cli
scas
lds
insb
pushf
or
inc
iret
xlat
insb
inc
sbb
xchg
xchg
lock
daa
lahf
adc
xorl
lret
mov
in
pop
cli
sbbb
bound
popa
loopne
lret
cmp
inc
ror
push
fisubs
sbb
out
jb
cmp
jns
jb
jle
mov
inc
jno
cltd
adc
movsb
icebp
lods
add
inc
and
sbb
jo
ds
ja
lods
dec
mov
jge
cmpl
stc
icebp
mov
pop
and
mov
iret
adc
lcall
cmpsl
cmp
cld
int3
mov
push
xor
jo
int3
pop
in
arpl
daa
int3
fwait
xchg
imul
push
xor
stos
jns
push
cli
and
jl
jnp
ret
xor
mov
adc
push
insb
jle
pop
pusha
push
lock
xchg
cmp
inc
and
aas
divb
sti
ja
insb
pop
fsubrs
insl
pmuludq
xchg
push
dec
sub
shll
sub
push
sbb
cmp
shrl
add
hlt
pop
fisttpll
imul
mov
lahf
aam
fsts
ja
sarl
cld
mov
mov
jl
fwait
mov
push
or
or
bound
bound
loope
into
lret
sub
out
negl
sbb
push
scas
lahf
cmp
repz
adc
rcl
iret
inc
mov
and
lods
xchg
sub
jne
popf
clc
call
not
adc
mov
rorl
rcrl
aad
pop
mov
mov
icebp
mov
jecxz
dec
xchg
dec
aam
push
push
into
inc
mov
arpl
push
pop
xchg
adcl
ljmp
aas
cs
fadd
fldenv
int
jns
iret
jp
test
mov
xchg
inc
stos
mov
or
into
cmc
cwtl
mov
loope
jno
ret
jecxz
push
lods
jae
jmp
pop
leave
call
jle
push
or
jae
aas
sti
nop
dec
or
sysret
int3
bound
inc
pop
scas
lods
add
scas
push
mov
enter
notl
xor
arpl
in
or
adc
ret
mov
inc
loopne
adcb
adc
mov
xchg
sub
fdivp
ror
int3
fadds
sti
mov
imul
xlat
pop
sarb
lods
or
loopne
out
in
push
push
clc
sub
cmpsl
popf
dec
rclb
cmp
lahf
shrl
cmp
sbb
fsubs
xchg
cwtl
mov
sub
adc
cld
push
insb
adc
bswap
pop
movsb
push
popf
mov
sub
mov
xchg
sbb
mov
push
enter
mov
pop
pop
jmp
pushl
mov
iret
aad
push
push
rcll
mov
mov
push
out
inc
loop
mov
jne
out
popa
imul
xor
sbbb
xchg
adc
pop
outsb
xchg
ret
mov
outsb
enter
pop
arpl
xchg
and
or
add
cmc
mov
sub
das
ret
mov
pushl
ja
lock
loopne
lock
push
test
push
imul
lds
lods
dec
push
jnp
jbe
in
push
or
mov
jns
jnp
loopne
push
addr16
dec
dec
fcomi
mov
cmp
andl
repnz
inc
inc
pop
stos
sub
inc
xchg
add
xor
test
ret
inc
rcll
int
mov
mov
push
mov
inc
rorl
cli
mov
cld
cs
sub
push
das
mov
cmp
lret
mov
mov
lods
push
test
adc
arpl
cmp
adc
cld
daa
imul
push
mov
inc
add
inc
jae
int3
jnp
int
bound
adcl
sbb
jno
jne
test
adc
xor
jnp
mov
mov
arpl
jmp
inc
cwtl
lret
sbb
push
pop
sub
hlt
inc
and
imul
out
cltd
test
int3
in
push
adc
mov
ss
cmpb
jle
or
in
test
js
jb
and
pop
jp
and
sti
sub
mov
cmpsb
add
jge
adc
mov
leave
fmuls
cli
test
lcall
es
fs
and
daa
lods
lods
add
das
xchg
xor
jmp
cwtl
scas
xor
cmp
xchg
test
push
sbb
xor
sub
inc
cmp
es
je
ret
dec
pop
insl
jl
pop
adc
xor
rcl
dec
xor
jle
movsb
and
aad
dec
adc
xor
ja
pop
jp
pop
mov
inc
add
xor
inc
or
cmp
incb
es
loopne
or
jp
lods
lods
jmp
xchg
sub
je
inc
enter
data16
out
int
outsl
lcall
flds
repz
pop
dec
lea
mov
fdivp
movsl
cmp
cmp
cmp
pop
push
jmp
pop
stos
push
push
cmp
orl
dec
inc
fcompl
sahf
push
inc
adc
cmp
dec
js
sub
lea
shlb
int
xchg
and
mov
jae
add
test
jl
pop
jp
leave
shl
adc
jmp
mov
movl
cmp
mov
inc
sub
dec
les
xor
or
es
mov
push
add
rcr
add
xor
cli
scas
mov
cltd
mov
adc
pop
push
mov
pop
dec
push
xchg
imul
pop
xchg
mov
icebp
adc
int3
lods
js
xor
inc
pop
aad
lcall
outsl
mov
xor
xor
lea
jo
push
aas
mov
outsb
bound
stos
into
stos
inc
jl
dec
out
mov
repnz
cltd
in
popa
mov
repz
jbe
xchg
dec
pop
repnz
dec
add
movsl
xor
xchg
mov
iret
cmc
aad
popa
icebp
xor
jle
jno
cli
imul
sbb
in
mov
jl
insb
xor
inc
cmpsl
xor
and
outsb
ss
test
cmp
fnstenv
stos
unpcklps
cltd
push
mov
jbe
jecxz
daa
cmp
sbb
inc
mov
sub
push
lret
in
insw
fisttps
aam
pop
sbb
movsl
and
scas
xchg
test
ja
xor
lcall
into
and
int3
sbb
xchg
jo
inc
inc
mov
lahf
and
std
gs
adc
pop
xchg
dec
xchg
outsb
popa
xchg
sbb
cmp
repz
mov
push
inc
in
jnp
jl
hlt
out
jl
sbb
pop
mov
and
movsl
hlt
sub
out
notl
mov
or
rcrl
mov
pop
xchg
sti
rcrb
mov
test
das
cltd
cmp
sbb
repnz
xchg
xchg
xchg
sub
lret
lods
push
xchg
pop
mov
out
stc
out
cmc
mov
aas
sbb
adc
sub
into
dec
inc
pusha
test
je
shll
inc
lret
push
loopne
loopne
sti
cli
lods
xchg
int3
shll
mov
add
mov
push
mov
xor
hlt
mov
mov
or
mov
fsubr
jmp
xor
add
mov
cmp
ficoml
test
jl
jo
ret
inc
dec
jo
popa
dec
mov
mov
add
xor
popa
xor
les
les
pop
push
mov
push
arpl
fldl
popf
sbbb
cmp
sbb
scas
js
sti
mov
sub
cltd
pop
rol
jle
out
xor
clc
mov
and
gs
pop
and
sbb
push
push
xchg
int3
pushf
add
cmp
movsbl
iret
rcrl
ds
call
or
mov
in
das
sub
cltd
inc
dec
mov
sbb
loop
imul
cmp
add
dec
push
mov
push
in
mov
loopne
mov
jle
and
xor
lcall
sahf
fucomp
leave
push
or
dec
shll
mov
jbe
or
or
enter
aam
adc
nop
out
push
dec
js
mov
outsb
in
sub
popa
adc
dec
mov
push
push
inc
inc
pop
in
cmp
std
mov
testb
sub
mov
fs
test
iret
mov
jnp
rol
mov
sbb
xor
sub
jnp
push
int3
and
xchg
add
sub
ret
or
xor
mov
clc
adc
xorb
add
roll
loope
xchg
js
pop
les
xor
andb
inc
or
mov
dec
add
inc
sbb
lret
cmp
jo
clc
sub
insb
lds
push
jecxz
add
cmpsb
rcr
aas
mov
sbb
fwait
mov
adc
pop
or
sub
lock
mov
xchg
push
in
scas
fs
rcrb
loopne
testb
or
mov
and
int
loopne
mov
cmpsb
imulb
call
push
cmpsl
inc
lds
shrb
mov
push
cmp
aad
sbb
cli
cmc
or
cmp
jb
jg
pop
js
fmuls
pop
enter
mov
sahf
cmc
or
loop
mov
add
push
lds
mov
inc
xchg
jl
dec
pop
cmp
pop
lahf
outsb
stos
shl
mov
lret
and
fdivrl
jo
outsl
pop
mov
push
movsl
sub
adc
testl
pop
into
push
dec
pop
pop
jle
jg
lcall
mov
pop
in
movsl
rcrb
sarb
sbb
jne
pop
lea
xchg
icebp
addb
imul
mov
insb
mov
call
sub
and
imul
test
clc
addr16
icebp
xchg
cmp
scas
lods
shll
fildl
add
in
es
lods
and
adc
cld
push
insl
loop
mov
sbb
xchg
fidivrl
or
inc
ljmp
loopne
nop
jp
lods
inc
mov
int
ret
loope
mov
aad
les
bound
fisttps
xlat
stos
mov
xor
sar
sub
push
repnz
out
fidivs
out
movsb
mov
xchg
jmp
sub
xchg
sbb
int
sub
jae
xchg
js
aaa
add
push
mov
popf
enter
push
fsubrs
call
stc
mov
jecxz
jecxz,pt
pushf
icebp
stc
cmc
pop
xchg
mov
in
xor
dec
fwait
mov
mov
bound
stos
mov
pop
les
out
mov
sub
test
mov
sbb
daa
dec
test
or
addb
xchg
pop
cld
mov
mov
cmp
jo
lret
shrb
sbb
lea
xor
test
arpl
aam
fs
data16
add
xchg
inc
aas
ret
sub
xorl
mov
jle
mov
cmpsl
ljmp
lret
dec
jo
mov
mov
pop
js
les
shll
sbb
in
arpl
cwtl
ret
mov
out
mov
out
in
movsb
adc
xchg
in
xchg
xor
pushf
arpl
repz
or
add
aam
rclb
lret
sahf
and
mov
jmp
dec
pop
pop
mov
cmp
jge
pop
daa
insb
xor
or
stos
or
cmp
sub
push
jp
ja
mov
scas
inc
inc
repnz
xor
fnstcw
adc
inc
dec
xchg
sub
inc
dec
xchg
or
movsl
imul
inc
xor
mov
mov
dec
push
cwtl
push
mov
imul
in
testl
pop
psllq
iret
xor
xor
mov
or
adc
je
add
mov
lods
into
into
loopne
arpl
push
js
mov
fnstcw
stos
push
dec
std
sbb
jmp
mov
adc
mov
pushf
push
hlt
notl
lret
mov
lahf
cli
fs
push
inc
and
adc
add
xchg
xorb
xor
idivb
cmc
push
mov
outsb
xor
cmpsb
dec
and
sbb
xchg
test
jle
dec
add
mov
or
jbe
test
rclb
dec
test
pop
sub
shl
jp
mov
inc
sub
test
call
xor
nop
idivl
cmp
test
ret
loop
fstl
xchg
xlat
jecxz
and
pop
jae
xchg
and
icebp
push
jecxz
adc
lds
jmp
aas
dec
inc
or
xchg
bound
mov
out
push
xchg
add
ret
scas
or
es
sub
mov
sub
mov
out
sbb
xchg
push
lcall
ja
leave
mov
and
jae
add
ficoml
int
cltd
lds
cli
data16
insl
or
mov
xchg
pop
pop
push
mov
lods
test
xchg
and
das
and
and
push
ja
sub
cs
or
pop
movsb
cmp
and
iret
cli
cvtps2pi
cltd
mov
cmp
and
jbe
pop
daa
sub
mov
pop
stos
add
bswap
inc
mov
icebp
sbb
test
in
ds
dec
xchg
aas
in
inc
ss
sbb
lret
fcomps
cmp
xchg
cmpsb
aaa
andl
pop
jecxz
sahf
repz
cmp
inc
std
das
jecxz
in
dec
les
jb
stos
pusha
push
push
in
pop
pop
ljmp
mov
cmp
test
fimuls
add
push
mov
ljmp
mov
mov
mov
insb
push
ss
mov
add
dec
mov
or
loop
stos
pusha
mov
inc
mov
xor
subl
lret
push
add
push
fbld
stos
cmp
iret
adc
fildll
in
andb
jg
outsl
mov
pop
js
out
xor
cli
jmp
rcll
add
dec
imul
xor
cwtl
lahf
adc
adc
jno
mov
idivb
push
mov
outsl
lret
bound
rep
fwait
adcb
ljmp
rclb
fcmovbe
jae
aaa
and
cmpl
xchg
movsb
push
rcrl
cld
add
pop
pop
mov
jbe
sbb
ror
adc
repz
jmp
add
lahf
jmp
sbb
jb
adc
jb
dec
mov
nop
mov
inc
scas
mov
sahf
jmp
stos
stos
lret
adc
cmpb
dec
or
cli
negl
xchg
dec
cmp
test
mov
push
insb
loop
xor
data16
xchg
jg
pop
mov
and
xor
sbb
mov
js
mov
dec
cmc
mov
andnps
imul
sub
sbb
lods
sbb
push
lock
add
adc
into
add
lahf
xchg
or
cltd
in
test
xlat
dec
fldt
pop
mov
outsl
sub
cltd
fiaddl
pushf
fadd
shrl
ficoml
hlt
mov
js
ljmp
ret
movsb
sub
mov
jns
xchg
or
mov
mov
fdivl
clc
into
cld
flds
mov
push
or
sub
mov
std
mov
cmpsb
test
push
andb
popf
push
aam
push
push
mov
fs
cmc
dec
ljmp
adc
xor
add
clc
push
sub
data16
mov
jl
and
out
ljmp
sbb
cmp
in
dec
jns
cmp
mov
mov
mov
adc
test
iret
imul
push
jg
cmp
out
mov
cmp
les
lds
add
push
fwait
jecxz
add
in
mov
jne
fucom
sub
lahf
popa
or
jnp
mov
pop
lret
addr16
inc
das
xchg
sub
shl
repz
pusha
and
dec
ljmp
out
pop
or
test
scas
mov
mov
fcmovb
push
inc
pshufw
in
das
mov
or
in
dec
mov
stos
sbb
in
out
xchg
push
mov
out
sbb
mov
add
std
mov
mov
fidivrs
jne
sbb
imull
mov
test
or
inc
leave
lret
push
movsb
push
es
out
rcrb
cli
push
push
pop
cs
xor
jbe
rolb
jle
cwtl
scas
fdivs
scas
dec
jo
jg
scas
int3
inc
adc
stos
lcall
sbb
scas
into
push
push
mov
add
push
loope
movsl
jbe,pn
bound
xchg
ja
and
std
scas
dec
push
inc
and
pushf
xchg
inc
and
xor
mov
mov
mov
xchg
sbb
fsts
fcmovu
mov
adc
mov
mov
xor
push
add
ficompl
xor
sbb
scas
es
aam
sarb
mov
int
pop
cs
rorb
push
xorl
pop
push
movsb
ljmp
push
loop
mov
or
loop
fcmovnbe
jno
cwtl
pop
adc
sub
adc
hlt
sub
adc
pop
test
loop
cmpsl
inc
inc
xor
mov
cld
and
xor
xor
cli
lock
mov
mov
mov
sub
push
and
mov
mov
mov
or
outsl
mov
popa
sahf
mov
sub
jg
arpl
mov
rorb
repz
cmpsl
mov
xor
int3
out
iret
cmc
mov
popa
add
imul
rcrl
push
fsubrs
cmc
add
mov
orb
imul
shll
and
mov
xchg
and
dec
xor
mov
pop
imul
push
fincstp
lods
push
cmc
fists
imul
in
jg
sbb
test
fstps
loope
ja
sub
dec
test
lret
sub
cmp
dec
xchg
mov
push
test
je
push
pop
push
pop
addr16
rol
ficoms
push
repz
data16
xchg
mov
andb
js
mov
in
push
cmp
les
add
fimull
lret
lea
or
adc
pcmpgtw
and
fnsave
stos
dec
divl
push
test
inc
push
sarl
popf
mov
push
push
les
dec
cwtl
test
cmpb
cmp
loop
inc
ljmp
and
mov
imul
fyl2xp1
adc
popl
pop
push
in
and
js
add
push
mov
xchg
sub
mov
cwtl
nop
dec
and
pop
shl
mov
cmovns
pop
mov
xor
pop
jnp
dec
push
gs
fldcw
mov
rcrb
pop
cmp
sbb
fstpt
fdivp
xor
and
push
mov
mov
xchg
mov
aaa
std
out
cltd
or
jmp
mov
mov
xchg
jbe
andl
jg
arpl
int3
dec
adc
jle
or
mov
adc
lds
jle
movsl
pop
pop
bound
adc
or
int
dec
divb
in
call
jo
xor
lcall
mov
pop
sti
mov
mov
jge
test
dec
stc
and
pop
mov
enter
dec
xor
sbb
push
test
int
or
int3
mov
bound
movsb
dec
in
daa
ljmp
push
in
mov
mov
cwtl
cltd
lcall
pop
test
fcomps
das
sub
cmp
rcr
jmp
loop
outsb
adc
mov
adc
jbe
fsubrl
addr16
ja
rorb
addr16
inc
shrb
and
lods
jne
jl
sub
cmp
dec
jb
insb
adc
ljmp
xchg
popf
sbb
add
or
js
sub
stc
pop
sbb
dec
scas
dec
loop
mov
sub
fldcw
and
fnstenv
out
icebp
sub
movsb
mov
outsb
cli
aaa
in
push
rcrl
inc
scas
jmp
cs
cmp
mov
into
ficoms
sbb
ss
mov
sbb
addr16
mov
cltd
cmpsl
mov
jns
cmp
jne
shr
aam
sub
fiadds
pop
mov
xchg
test
cld
adc
imul
push
mov
das
fsubs
pop
xchg
mov
lods
lea
inc
daa
ljmp
sarb
fs
and
loopne
pop
mov
fsubl
testl
lock
int3
repnz
mov
mov
pushf
fisubl
js,pn
repz
andb
movsl
outsb
lcall
push
mov
int
sbb
inc
jmp
cmp
mov
cmp
popa
cld
fistl
inc
outsb
repnz
mov
xchg
mov
or
fidivl
sbb
dec
into
repz
pop
sub
adc
adc
int3
push
test
rcll
js
sahf
std
jne
and
pop
cmp
push
rcrl
push
adc
fidivrs
cld
fidivrs
add
inc
scas
lret
inc
inc
shrl
test
or
lea
xor
aad
jb
insl
and
push
fs
movsb
mov
push
pop
sbb
ds
pop
fisubl
cmp
ja
push
rol
dec
leave
push
les
add
xor
xchg
hlt
stos
sub
mov
lahf
outsb
cmpsl
mov
xor
mov
pop
nop
pop
andl
push
inc
push
gs
ret
icebp
orl
jb
fsubp
stos
push
scas
jmp
inc
outsl
movb
mov
sub
loope
mov
int
jb
stos
fcomps
imul
filds
aas
add
or
out
push
jmp
ficompl
mov
in
jg
scas
and
pop
out
loop
test
add
popf
shr
loop
clc
or
call
and
out
mov
dec
repnz
push
mov
mov
cmpsl
ret
pop
mov
jno
ds
ds
inc
jb
jle
xchg
iret
push
dec
xchg
out
fidivs
pop
bnd
add
push
sbb
div
aaa
and
adc
fcom
push
fidivs
in
cli
push
inc
xlat
mov
inc
mov
dec
repnz
ret
fsts
adc
int3
gs
cli
lcall
jge
in
shll
mov
adc
sbb
pop
decb
stos
xor
std
inc
and
and
xchg
loop
jae
sub
add
popa
jnp
cmp
fwait
in
or
inc
je
arpl
stc
inc
add
pushf
in
pop
mov
jge
cmp
dec
sbb
ret
mov
es
cmp
or
das
dec
repnz
ljmp
jle
adc
pop
movsl
in
movb
cli
loop
mov
in
mov
jbe
pop
js
mov
rclb
dec
pop
fmull
and
arpl
mov
xchg
dec
ss
sub
xor
push
or
aad
inc
gs
jb
lret
mov
repnz
fwait
testl
and
std
loopne
sub
sbb
imul
and
stos
pop
adc
xlat
lods
sbbb
cli
push
lret
cmc
out
nop
lea
jg
dec
mov
dec
in
or
filds
and
cltd
and
sbb
shlb
repz
adc
shlb
lcall
xchg
aas
insl
cs
popa
xor
mov
and
adc
or
pop
push
je
fadd
int3
and
clc
mov
and
test
pop
insb
mov
das
pusha
adc
push
nop
dec
stc
push
in
stc
mov
adc
inc
sbb
sti
jae
dec
shrl
and
out
inc
mov
icebp
mov
pusha
inc
sub
push
fisubl
pop
das
xchg
fildll
xchg
and
or
xchg
sub
and
xor
cmpsb
dec
fidivrs
xchg
jp
dec
outsl
cmp
push
sahf
mov
sahf
dec
xchg
imul
ss
push
lock
push
or
push
gs
rolb
stc
and
test
je
loopne
in
mov
xchg
jmp
sub
sbb
mov
jne
sbb
add
test
sbb
imul
pusha
mov
ja
pop
adc
subl
stos
lahf
sbb
int3
or
scas
and
mov
clc
xchg
loopne
dec
mov
cmp
mov
testl
orps
xor
and
dec
lret
shrd
mov
adc
je
stos
aad
and
push
adc
jbe
lods
fidivs
test
divl
int
ficomps
shr
rcr
in
add
pop
out
mov
or
lcall
int3
loop
pop
lcall
sub
cs
int3
repnz
lods
in
inc
xchg
roll
mov
jmp
jae
outsb
cli
and
sbb
sub
cmp
pop
fstpl
jl
xchg
out
hlt
outsb
ss
mov
add
mov
imul
dec
pop
notl
xchg
xchg
out
fwait
pop
notl
push
into
cli
pop
test
dec
mov
scas
pop
sti
in
out
cmp
pop
or
dec
pushf
lods
fldt
pop
pop
lods
mov
repz
push
sbb
sahf
scas
int
enter
arpl
aad
in
mov
ret
incb
dec
xor
mov
in
adc
icebp
test
sub
leave
fsub
in
call
jbe
push
movsb
jb
fwait
adc
xorb
movsl
dec
push
jae
jge
jecxz
cmp
daa
std
clc
cmp
lret
inc
test
mov
jb
xchg
addb
ja
imull
jae
sbb
and
lods
xor
and
adc
enter
or
push
mov
ret
mov
xchg
out
xlat
bound
shl
ss
lods
enter
jo
shrb
dec
mov
mov
dec
pop
scas
sbb
js
loopne
sub
lock
pop
xchg
pop
xchg
mov
or
jg
pop
sub
cmp
fwait
sbb
cmp
cmp
out
jge
inc
ljmp
loopne
xor
mov
cmc
sti
dec
lds
xchg
push
dec
pop
leave
mov
hlt
pop
adc
and
pop
mov
dec
mov
outsb
fsubrl
dec
xchg
lods
pop
mov
jne
sbb
cmp
ljmp
cmpsl
sub
popa
push
cmp
xchg
jno
dec
js
push
mov
enter
xchg
inc
pop
in
dec
jp
pop
nop
in
cmp
add
adcb
lret
sbb
cld
and
arpl
pop
adc
pop
sub
inc
xchg
xchg
cld
hlt
lods
push
call
ljmp
sub
arpl
stc
aam
ljmp
mov
xchg
leave
fadd
xor
pop
pop
insb
pop
xchg
test
mov
add
test
sbb
xor
mov
loope
jp
fstpt
stos
std
or
fwait
xchg
stc
push
pushf
or
ret
dec
push
pusha
in
mov
mov
sub
dec
pushl
pop
movsb
popa
jg
cltd
test
push
stos
in
mov
adc
mov
mov
mov
inc
mov
cmovnp
repz
dec
cmp
xor
sub
cld
push
insb
jmp
pop
pop
xor
in
sub
in
mov
xchg
cmc
push
mov
loopne
sbb
addb
fldcw
jg
inc
iret
ss
or
ljmp
jae
test
or
popf
test
scas
jb
lahf
push
xchg
xchg
cmpsl
xor
mov
in
push
pop
push
call
mov
and
call
in
mov
adc
xchg
fdivs
mov
sahf
ret
inc
cmc
sbb
icebp
pop
popa
popf
mov
add
scas
mov
mov
enter
pop
cmp
add
adc
fstl
xchg
mov
imul
cmp
push
mov
adc
in
mov
iret
pop
dec
repz
out
mov
sub
lea
nop
fsubrs
outsb
jl
fwait
mov
lods
ret
divl
je
ret
pop
mov
lahf
and
aaa
dec
add
push
cmp
test
arpl
sub
flds
daa
fstpt
mov
stc
mov
sbb
mov
cs
fbstp
stos
cltd
fxch
and
push
push
dec
int
lods
addb
pushf
and
push
pop
add
jmp
dec
andb
push
test
es
pop
or
xlat
imul
or
sahf
lock
movsl
and
in
das
cmp
ret
sub
jge
jb
xor
jmp
lsl
in
mov
xchg
ljmp
std
aad
lock
push
mov
call
inc
pop
adc
lret
movsl
in
iret
push
gs
cli
pop
pop
push
mov
ret
inc
scas
dec
xchg
imul
mov
cmp
outsb
mov
sub
jge
jo
fnstsw
inc
mov
push
sub
rol
push
std
ja
aad
pop
xchg
jl
pop
mov
xchg
shrb
fwait
into
mov
pop
rcrl
nop
sbb
or
mov
mov
jmp
insb
push
stos
mov
fdivs
inc
mov
adc
pushf
mov
rcrb
hlt
rcrl
daa
dec
mov
fistpl
call
add
or
jno
fmuls
and
pop
mov
sti
mov
jns
sar
je
sbb
cmp
jp
pop
inc
leave
rorl
fcoms
sub
shll
lds
movsl
cmp
and
lods
sbb
repz
icebp
adc
sub
out
hlt
out
add
push
repz
push
lret
icebp
int3
sbb
xor
insb
xor
inc
xor
jne
test
subb
popf
std
dec
mov
and
cmp
xchg
fsub
js
pop
ret
movsb
cmpsb
aas
add
pushf
stos
in
jno
or
nop
add
dec
aas
mov
adc
out
ds
xor
inc
std
add
loop
in
cmp
in
mov
lods
fdivrs
push
jmp
incb
cmc
mov
mov
inc
das
jmp
loop
outsl
xor
test
pop
dec
test
pop
enter
ljmp
shl
insl
adc
pop
or
xchg
imul
adc
addb
add
mov
out
inc
and
ret
sub
cltd
data16
add
add
mov
gs
xor
push
arpl
lods
mov
addr16
movsl
jge
pop
xchg
imul
jp
pop
xchg
in
adc
das
lahf
leave
pop
outsb
mov
insl
sbb
or
movsl
pop
cmp
lcall
or
lret
ja
cmc
or
into
pushf
push
inc
iret
out
adcb
jb
and
adc
aas
arpl
ret
mov
dec
adc
add
jno
jecxz
sub
shl
jl
lock
mov
jno
and
dec
mov
mov
in
jle
scas
aad
and
lock
andb
jmp
ret
popa
cmp
push
lcall
icebp
cli
test
sbb
in
xchg
dec
scas
dec
clc
int
shlb
mov
jb
xor
mov
and
sbb
dec
jecxz
or
loope
mov
nop
or
sarb
xchg
push
jns
xchg
stc
pop
fstpt
inc
sbb
int3
aam
pop
pop
sub
mov
add
jns
mov
fnstcw
xor
cmpsl
push
aas
ljmp
xchg
outsb
xchg
add
or
mov
xor
inc
mov
add
inc
lcall
xor
hlt
scas
out
jp
or
std
imul
js
loope
sahf
out
popa
cmp
jbe
push
mov
cmp
cli
out
cld
and
popa
inc
mov
outsb
push
jmp
test
aam
mov
cmp
inc
lahf
dec
and
mov
jbe
aaa
and
mov
cvttps2pi
adc
cmpsl
ret
mov
push
js
test
shll
fidivs
movsb
lret
and
arpl
pop
xor
icebp
jno
mov
push
mov
mov
leave
mov
fwait
jmp
jo
sub
pop
jb
cmpl
ret
mov
adc
lea
adc
add
mov
cmpl
sub
mov
dec
xor
and
mov
inc
out
mov
xor
dec
xor
sub
cmp
ret
mov
arpl
fstpl
adc
test
leave
pop
adc
test
pop
mov
rolb
jb
xchg
insl
in
lods
pop
into
rorb
test
stos
inc
cli
xor
cs
mov
jb
xchg
pop
pop
loopne
fsubl
test
sbb
popa
dec
push
fwait
pop
or
adc
jmp
adc
mov
lods
jb
push
push
push
out
mov
aas
sbb
cmpsl
cmp
cmp
sarb
sub
cwtl
mov
jecxz
sbb
test
xchg
jo
hlt
lock
push
push
loop
xchg
sub
or
mov
push
sub
lea
stos
je
xlat
subb
pop
dec
stos
test
in
mov
jle
lods
xlat
jmp
test
mov
sub
and
jecxz
stc
xor
test
adc
repz
jge
mov
stos
pop
mov
jg
cli
cli
push
jmp
lods
mov
fwait
loop
pop
inc
fldcw
xchg
out
aas
push
dec
shlb
pop
aad
jo
sbbb
mov
scas
insb
loope
test
into
sub
add
movl
push
into
sub
sbb
fisttps
cs
adc
jp
dec
dec
xchg
icebp
leave
xchg
push
mov
sbb
fnstenv
out
clc
inc
fwait
adc
in
cwtl
mov
arpl
mov
mov
inc
mov
outsb
in
pop
cs
outsl
cmpsl
mov
jnp
sbb
repz
in
ret
push
mov
ficoms
dec
mov
push
pop
mov
repnz
fbld
sub
cmp
loopne
push
mov
int
pop
pop
int
push
fmuls
stc
mov
bound
xchg
daa
lds
push
jnp
pushf
push
inc
shrl
lcall
lods
and
push
fcmovnb
adc
xchg
add
cli
leave
dec
movaps
ret
jno
mov
rolb
xchg
test
test
add
movsl
scas
push
ret
xchg
mov
je
xchg
cmp
jo
ret
shlb
add
out
push
scas
mov
addr16
shrl
jle
cltd
dec
ret
dec
mov
mov
jg
fs
add
std
lcall
cmpsb
mov
frstor
sbb
sub
lea
jo
inc
pop
jle
mov
ret
push
les
ds
jo
iret
popa
push
push
int3
add
jecxz
dec
cltd
cmp
lods
outsw
addr16
mov
push
mov
jle
outsl
mov
cs
jmp
jnp
sub
xlat
jg
pop
cmp
push
jb
rcll
rclb
inc
mov
test
push
jl
lahf
addr16
pmulhw
sub
pop
cmc
pop
mov
psrlq
cmp
jecxz
mov
jg
xchg
add
clc
shll
xor
hlt
and
cltd
adc
xor
push
xchg
push
hlt
test
pmullw
mov
popf
loop
push
fcmovnb
xchg
lahf
divl
pop
sub
push
test
lock
pushf
std
fwait
call
mov
loopne
stos
sbb
jmp
cwtl
stos
cs
pushf
cmpsl
iret
jns
cmp
cmpsb
andl
xchg
cli
dec
xor
or
pop
or
jbe
dec
add
icebp
loope
loope
cmp
mov
hlt
fstpt
insl
lcall
xchg
cld
add
aaa
and
fimuls
fcmovu
sbb
scas
dec
mov
out
fs
idivl
xchg
es
inc
dec
and
das
xchg
inc
movsb
iret
cmp
icebp
ss
inc
loop
int3
sti
push
out
xor
mov
lock
mov
pop
jo
jbe
test
imul
add
cmpsl
adc
xor
or
inc
enter
sub
mov
imul
or
pop
in
sub
push
add
pop
pop
pop
cli
fwait
and
lret
es
sub
add
addr16
sbb
mov
cmpl
imul
es
or
adc
not
scas
movsl
sbb
mov
pop
jns
ret
sbb
pop
jnp
arpl
jns
pop
xor
mov
idivb
inc
mov
sub
or
jmp
jmp
or
dec
testl
mov
push
pop
dec
and
push
out
push
dec
dec
addb
sarb
invd
inc
adc
and
sub
addr16
pop
mov
iret
lret
sub
fcomps
mov
faddl
jl
stos
sbb
inc
mov
jg
addr16
or
int3
sub
mov
out
ljmp
pop
xor
inc
ficoms
push
dec
push
js
hlt
sub
pop
adc
je
adc
mov
dec
sbb
call
and
mov
sti
pop
mov
hlt
push
dec
daa
xor
pop
xchg
mov
push
cwtl
insb
out
mov
andl
lahf
pop
out
popf
repnz
test
sbb
pop
lock
addr16
sbb
aam
jle
fidivs
es
sub
shrb
stos
test
lods
les
and
fidivrl
fmull
inc
jne
cwtl
leave
and
mov
pop
mov
pushf
fstpt
xor
pop
loopne
adc
in
loopne
ljmp
jmp
fldl
push
mov
inc
lahf
stc
sbb
fimuls
pop
scas
mov
mov
nop
adc
enter
jmp
jg
inc
jle
jns
jno
dec
stos
sub
mov
and
cmp
pop
xchg
cmp
sbb
cs
xor
pop
pusha
into
fcoms
and
mov
sbb
shr
movsb
mov
lock
mov
rolb
enter
push
cld
ss
sbb
inc
mov
add
pop
arpl
sbbb
or
ficomps
mov
out
jmp
push
mov
xchg
int3
bswap
dec
push
into
test
into
jle
aad
or
gs
not
mov
inc
jge
rcrl
movsb
or
mov
arpl
mov
mov
mov
loop
and
insl
fwait
arpl
mov
sbb
mov
mov
and
lahf
imul
jb
in
fnstenv
and
inc
jle
std
or
jecxz
data16
test
cmp
pop
xchg
loopne
imul
xor
inc
mov
sub
and
repz
jmp
out
xor
and
mov
inc
in
fisttpl
lcall
jae
test
in
jmp
fldcw
cmpb
push
xchg
imul
cmp
in
jb
lret
cwtl
call
add
stos
mov
cpuid
lret
xchg
stc
lock
scas
xchg
enter
and
int3
sbb
bnd
pop
mov
push
mov
shl
pop
into
enter
adc
loope
add
insl
jns
cmp
add
cmc
cs
aaa
or
loopne
in
pushf
lods
pusha
add
dec
js
fst
lea
mov
popa
aad
pop
jo
cmp
dec
jno
ret
and
addr16
enter
adc
ret
imul
out
cld
dec
dec
or
inc
lods
mov
pushf
pop
mov
pop
pop
mov
jnp
xchg
loope
mov
xchg
jns
mov
cmp
addr16
xchg
xchg
xlat
incb
pop
jg
mov
mov
test
dec
xor
xchg
iret
pusha
add
orb
mov
mov
jecxz
test
sub
pushf
fdivrl
fucomi
int3
test
es
lock
xchg
inc
xor
and
jno
sbb
fstps
lahf
push
sub
lret
sub
dec
fdivs
mov
mov
mov
push
adc
stos
mov
aaa
out
mov
fwait
or
lock
add
sbb
scas
sub
dec
sub
sub
outsb
inc
outsb
outsl
xchg
jnp
xchg
xchg
cmp
pushf
jns
movsl
daa
loope
xor
lea
mov
ret
push
fwait
or
test
cmp
cli
xchg
iret
jb
xchg
insl
lcall
daa
push
mov
into
mov
leave
cltd
mov
stc
and
push
mov
fcoms
mov
cwtl
cld
push
adc
push
movsl
in
test
out
jbe
roll
dec
xor
std
xlat
mov
mov
imul
dec
jnp
movsl
les
add
xchg
inc
dec
inc
xor
add
mov
shl
fbld
pop
push
dec
rclb
inc
mov
mov
jg
xor
xchg
gs
inc
lods
fildl
into
add
mov
ficomps
mov
int
and
jne
mov
adc
jl
in
sarl
fstpt
adc
sahf
mov
xchg
jns
scas
sbb
mov
sbb
subl
xchg
mov
sub
adc
inc
xchg
adc
cmc
stos
push
out
pop
push
sbb
ljmp
xchg
das
adc
xlat
jb
mov
loopne
push
mov
mov
pop
inc
pushf
xchg
cwtl
add
lods
inc
inc
pushf
xchg
dec
in
testb
and
add
inc
scas
fs
and
or
bound
sbb
adc
loop
leave
add
stc
dec
or
cmp
hlt
jl
fildl
scas
imul
inc
push
push
pop
jmp
push
repnz
pop
leave
pop
pop
xorl
lods
sub
push
fstpt
test
inc
adc
jo
cmc
xlat
and
lods
neg
xor
or
movsb
fwait
ret
insb
adc
pop
mov
test
sbb
sbb
pop
xchg
je
stos
sbb
lret
xor
xchg
or
sbb
inc
lcall
jns
or
mov
pop
push
cmp
insb
fcoms
sbb
mov
xchg
jbe
sbb
jp
dec
adc
fistpl
rclb
add
lds
push
sub
xchg
mov
jp
cs
push
pop
cmpsl
mov
push
lods
ret
and
push
xchg
stos
add
inc
mov
ja
lds
pop
dec
pop
xchg
xchg
addr16
dec
inc
incb
pop
cs
pushw
cltd
mov
mov
mul
mov
cmc
jbe
push
xchg
sbbb
jl
sub
cmp
popa
adcb
orb
stos
pop
add
ret
fisubrs
xchg
lds
cmp
push
or
xchg
push
js
jecxz
jno
pop
push
cmpsl
std
js
aam
jno
outsw
jle
inc
hlt
and
jecxz
mov
lret
rcrb
sbb
subb
out
cmc
xchg
dec
xchg
inc
mov
dec
cmp
push
push
mov
xor
sbb
lock
inc
mov
sti
bound
add
dec
mov
jb
insb
jg
mov
or
lret
mov
enter
sub
mov
out
dec
lcall
pop
js
sub
loope
das
adc
out
pusha
push
sub
fsubrl
push
xchg
or
jns
negl
movsb
pop
or
cmp
push
ljmp
fstps
loopne
lcall
insb
push
test
adc
sahf
sub
outsb
fcomps
cmp
jne
mov
sub
push
je
dec
out
dec
or
mov
inc
inc
into
xor
dec
push
adc
xchg
stc
test
and
fwait
xor
jbe
loope
or
mov
jl
mov
mov
cmp
add
int3
and
popf
je
test
and
test
fsubs
mov
mov
and
and
xchg
inc
inc
in
mov
shlb
dec
cmpsb
push
dec
inc
cmp
jo
xor
int
cltd
push
add
imul
add
pop
out
add
jae
mov
mov
dec
out
loopne
icebp
lods
xchg
pop
xchg
jl
xchg
dec
call
aad
jnp
jl
sub
jbe
adc
rcrb
cs
add
jb
mov
fisttpl
xchg
mov
mov
fistpl
fiaddl
std
adc
and
sbb
lea
mov
sub
pop
mov
test
inc
pop
sti
lcall
mov
push
test
stos
sub
jno
pusha
outsb
leave
rclb
in
dec
in
fmull
test
sbb
adc
iret
fs
inc
scas
lret
push
cs
fsts
mov
lods
out
addr16
sahf
outsl
dec
jle
dec
mov
push
addw
fldt
sbb
std
mov
push
xor
mov
es
or
push
xchg
icebp
jmp
jmp
adc
fidivs
out
out
es
aas
inc
loop
dec
andl
loop
jno
sub
push
fcompl
in
pop
je
idivl
xor
ds
lcall
scas
push
fwait
out
aam
and
inc
cwtl
pop
aas
push
popf
mov
xchg
addr16
das
cmc
push
daa
jmp
mov
fcoms
mov
jae
inc
dec
xchg
and
cltd
jbe
xchg
sti
xchg
inc
xchg
mov
aas
mov
sbb
push
adc
int3
inc
cmc
sbb
lret
pop
je
repnz
mov
pop
mov
ljmp
add
out
pusha
icebp
pop
lds
mov
sub
and
leave
pop
mov
fucomi
fsubr
push
aaa
mov
push
push
mov
dec
sbb
rorb
jg
xor
sti
ds
xchg
out
mov
lret
fildll
loopne
add
add
add
or
jp
ror
rcll
lret
inc
xor
sbb
mov
test
fldcw
mov
adcl
inc
inc
arpl
inc
cmp
sub
fldcw
add
mov
lret
push
jo
adc
scas
push
push
je
aaa
dec
jge
cs
fbstp
leave
stos
xchg
outsb
pop
sbb
ljmp
mov
sbb
jnp
mov
or
jg
jo
jg
lcall
jo
xorl
pop
in
pop
test
rorl
push
and
mov
int3
call
mov
dec
sbb
ja
cmp
popa
cmp
test
add
push
call
adc
jno
gs
mov
leave
pop
lods
ret
rorl
andb
stc
les
pushf
xor
xchg
mov
mov
arpl
adcb
push
aad
or
sub
mov
iret
xor
addr16
pop
in
pushf
js
lret
mov
push
test
sub
lea
push
lret
mov
leave
mov
fmuls
shl
rcrb
dec
xlat
test
adc
ret
popf
mov
nop
inc
jmp
out
ja
mov
dec
sbb
nop
sti
xchg
push
imul
ja
into
das
fbstp
cmpsb
mov
test
fmull
sbb
loopne
stc
imul
dec
loopne
mov
sub
cmp
js
push
dec
jg
sahf
int
scas
push
leave
lahf
cli
and
adc
add
test
push
ljmp
fwait
cmp
fnstsw
xor
aam
fdivrl
icebp
jo
xor
xlat
ds
gs
mov
push
xor
xchg
mov
stos
ficompl
and
or
pop
or
js
inc
jnp
cwtl
aas
add
inc
xlat
sbbb
adc
cmp
inc
jae
imul
cmp
jmp
jle
jno
jp
inc
sub
inc
xor
push
fdivs
sbb
mov
leave
out
push
fistps
lret
cltd
out
or
fs
out
lret
notb
popf
into
bound
lret
mov
adcb
rolb
fucomi
int3
cmc
mov
inc
dec
cmp
das
cmp
xchg
imul
mov
in
push
stos
mov
idivb
ja
inc
push
adc
mov
fwait
xchg
xchg
dec
adc
push
dec
dec
inc
jmp
mov
push
cltd
out
mov
cmp
xchg
mov
mov
sbb
movsl
out
adc
pop
dec
or
push
rol
pop
inc
pop
sub
cmc
adc
fadd
and
xchg
and
adc
push
cmp
mov
stos
or
xor
xchg
xor
jl
int3
subb
out
popa
ror
cmpsb
jno
fwait
sbb
shl
ds
mov
mov
mov
addr16
xor
ja
mov
jl
and
mov
aas
sub
mov
lahf
adc
xchg
in
or
mov
inc
mov
pushf
xor
shlb
jne
ljmp
ret
out
cmp
hlt
push
jp
push
fs
stc
jle
push
lcall
into
jae
test
out
stc
inc
std
or
inc
ja
daa
push
cli
xor
pusha
call
cmc
int3
jae
inc
mulb
sti
hlt
lods
nop
inc
mov
sub
and
xchg
jmp
stos
lods
pop
sbb
scas
pop
out
xchg
mov
pop
push
es
dec
jns
xchg
pop
push
and
clc
pop
imul
test
arpl
data16
pushf
inc
adc
sbb
mov
mov
stc
sub
sarb
js
push
inc
or
xor
cmc
ficoml
iret
push
sbb
fnstenv
pushf
mulb
out
xor
add
push
cmp
sbb
inc
rcll
push
inc
data16
xlat
leave
mov
xor
outsl
push
mov
cltd
jno
add
divb
jmp
inc
mov
jo
push
mov
movsl
cmp
pusha
clc
int
add
lret
sub
sbb
inc
adc
in
mov
dec
jge
enter
xchg
scas
daa
rorb
loope
jno
lods
jp
fs
jge
mov
loop
js
pushf
bound
and
rorl
stc
ffree
pop
dec
int
das
sarl
cmp
cmp
orl
icebp
aam
lret
rcrb
filds
mov
sub
dec
fwait
aam
hlt
mov
dec
mov
out
lods
sbb
pop
inc
shlb
aas
mov
pusha
cli
xor
pop
xor
xchg
pop
lock
inc
flds
mov
lret
loopne
mov
es
pop
scas
mov
es
cmp
pop
or
fs
or
shl
test
jbe
inc
inc
sbb
or
dec
lret
fcmovnu
xor
ds
stos
xchg
add
outsl
movsb
in
mov
inc
rep
subl
mov
popl
out
xlat
jp
push
xor
repz
lds
or
je
ror
lods
out
xchg
push
lahf
inc
jg
dec
movsl
xor
out
mov
loopne
push
pop
xor
xchg
pop
cwtl
pop
fidivrs
out
inc
jg
xchg
fstps
push
fwait
dec
xchg
mov
sarl
and
pop
adc
sbb
pop
sti
movsb
repnz
xor
stos
popa
cld
jecxz
jle
shl
xor
movsb
lcall
int
mov
push
lods
pushf
hlt
sbb
int
shll
sub
imul
out
adc
mov
outsl
jne
es
mov
xor
into
pop
xchg
mov
loopne
mov
dec
frstor
xchg
enter
push
fmull
sahf
stc
inc
xchg
cmc
pop
cli
aam
mov
adc
stos
inc
or
sti
cmc
or
mov
jns
test
outsl
insb
sub
fistpl
lea
lock
fisubrl
cltd
test
cld
inc
cmp
inc
mov
dec
or
fs
adc
xchg
mov
movsb
lods
into
fs
sub
mov
mov
jp
mov
cltd
rorl
stc
ds
ret
cwtl
aaa
hlt
mov
pop
dec
test
jle
int3
push
imul
enter
jbe
mov
lahf
sarl
repz
jg
scas
xchg
roll
dec
mov
aad
sarl
add
xor
lea
xchg
fcoms
popf
add
mov
jbe
popf
stos
dec
mov
stos
jl
je
cs
jmp
shll
in
pop
shll
adc
mov
dec
mov
scas
addr16
mov
pop
clc
ret
lcall
dec
pop
jo
rolb
cmp
aaa
inc
aaa
lods
test
push
jo
fldlg2
dec
clc
fwait
jb
cmpsl
stos
ss
jne
lret
sub
int
cwtl
cmp
sarl
das
dec
js
imul
xchg
rcl
fmul
ljmp
sbb
jg
lods
sahf
fimull
mov
jge
cs
loop
xchg
mov
cmp
pop
sub
clc
xchg
fldcw
add
xor
icebp
cmp
lret
aam
rolb
in
jae
dec
pop
sti
mov
jno
jae
inc
jae
xor
inc
vlddqu
pop
push
mov
stos
sub
push
jno
int
idivb
jae
jmp
cmp
out
iret
notb
into
subb
add
inc
push
addl
jae
adc
rolb
inc
xchg
dec
iret
insl
mov
lods
jp
xlat
xchg
push
popl
fs
jmp
lock
lret
lds
movsb
push
std
aas
test
jp
cmpsl
cwtl
add
daa
ljmp
out
xchg
das
addb
add
add
rorl
aas
adc
jmp
xchg
jp
jmp
adc
in
sbb
sub
fcoml
mov
jg
rorb
pop
xor
ficompl
and
popf
pop
es
and
mov
mov
adcl
push
jnp
add
cltd
rcll
mov
call
movsb
lods
and
mov
nop
push
pop
sub
cmp
loop
or
inc
pop
aad
cs
data16
xchg
xchg
ss
jmp
popw
test
inc
mov
adc
repz
nop
xchg
sub
out
lcall
test
add
test
push
stos
inc
add
xor
clc
push
daa
push
mov
pop
mov
cmp
test
in
xor
jg
fldt
push
inc
adc
inc
ljmp
adc
sbb
adc
jl
sub
std
push
andb
sti
xor
dec
inc
inc
in
lods
pop
lret
popa
out
adc
fs
xchg
inc
cs
mov
push
jnp
sbb
add
mov
sahf
das
cmp
xor
inc
inc
sub
out
fists
push
adc
pop
ret
sub
sbb
xchg
adc
sahf
out
dec
xchg
nop
gs
jae
ja
dec
xor
adc
push
pop
and
movsl
clc
cmpsb
or
mov
push
cmp
aaa
lahf
adcb
aas
mov
jmp
xor
test
lods
repnz
sti
sub
rcr
and
in
pop
and
ljmp
rcrb
jle
push
xor
fbstp
push
jae
pop
xlat
aam
pop
and
xchg
stos
lods
out
sahf
addb
pop
addr16
lret
sub
aas
lcall
jl
inc
sub
cmp
push
sub
mov
mov
inc
addr16
pop
out
jmp
inc
mov
mov
and
mov
popa
divb
and
xlat
dec
sbb
jae
add
mov
inc
jmp
cmp
js
pop
and
mov
dec
adc
and
lret
cld
add
sub
push
xorl
rolb
popf
adc
jns
cli
enter
push
mov
xchg
in
clc
addl
mov
mov
mov
rcrb
push
arpl
add
js
mov
xor
adc
pop
push
scas
or
xchg
inc
shll
jns
xchg
inc
loop
imul
out
ficoml
pushaw
jns
in
pop
scas
jl
push
repnz
jns
add
or
outsl
test
jae
aam
lods
test
lret
add
xlat
cmp
add
mov
xor
xchg
cmp
lret
lods
lret
xor
dec
sub
out
cmp
imul
out
mov
das
or
adc
and
into
jmp
mov
or
jne
cld
aaa
addr16
fidivs
stos
mov
sub
xor
jp
lods
dec
xchg
adc
dec
mov
outsl
mov
shll
ss
or
fbstp
xchg
sub
pop
mov
aam
out
movsb
fdivrs
in
fs
dec
and
jbe
add
xchg
lahf
pop
das
or
mov
push
mov
dec
cmp
add
shrb
xchg
shll
xchg
mov
mov
cmp
push
icebp
adc
and
add
mov
jbe
sbb
mov
insl
push
scas
in
mov
pop
sub
test
insb
dec
jmp
adc
stos
push
data16
xlat
rcll
mov
cwtl
push
add
sub
push
pusha
jae
mov
shlb
js
add
mov
mov
js
pop
jge
push
arpl
sub
or
loope
mov
hlt
add
mov
or
push
outsl
into
push
mov
xchg
fcoml
cli
fstpl
movsl
scas
stos
nop
es
ss
loopne
fwait
mov
mov
aam
cld
xchg
push
dec
xor
divb
or
xchg
cmpsb
shll
mov
mov
cs
mul
add
cmpsl
in
test
push
jne
fnstcw
inc
jae
and
scas
ffreep
shrb
insl
mov
gs
pusha
test
das
scas
mov
jno
fisttpl
mov
mov
mov
aas
mov
sbb
test
jnp
lcall
scas
jle
stc
sub
dec
lods
movsb
fs
push
out
push
push
dec
dec
ret
stos
pop
test
sub
ret
cmp
push
arpl
addl
fistpl
aad
aaa
or
xor
push
xchg
sbbb
push
push
or
es
into
pop
jbe
mov
or
dec
leave
pushf
scas
dec
mov
cld
ds
and
pop
jmp
xchg
std
gs
bound
add
testb
cmp
inc
sbb
adc
add
aas
std
loop
or
or
aas
xchg
into
mov
sbb
js
or
in
scas
sti
out
mov
jge
dec
int
sti
pushf
xchg
fwait
dec
add
xorl
xchg
iret
push
fildll
imul
aas
xchg
sbb
sarl
pop
mov
test
mov
and
dec
fwait
std
jno
nop
mov
sub
mov
sbb
mov
sub
adc
add
pop
int3
sti
leave
out
dec
jge
xchg
sbb
addr16
jle
push
push
fwait
iret
daa
and
mov
test
repz
test
sub
push
fstpl
iret
mov
test
mov
aaa
adc
jmp
inc
adc
movsb
dec
mulb
lods
sub
cmp
enter
push
in
cmp
movsl
clc
mov
cmc
or
mov
in
or
jnp
push
lock
int
aaa
cmpsb
mov
dec
cli
jp
lods
pushf
icebp
inc
cltd
iret
pop
jmp
push
ss
xchg
testb
inc
je
sbb
loop
fcomi
and
xor
mov
xor
cld
les
adc
cmp
cmp
ret
sbb
jnp
push
shrl
add
fs
lcall
mov
adc
aaa
lcall
or
push
fs
insl
pop
pop
push
inc
cmp
mov
jmp
cmpsl
cmpsl
inc
sbb
into
add
jl
dec
bound
repz
sbb
lret
call
data16
nop
divl
add
push
xchg
sub
push
sub
push
push
mov
mov
adc
fimull
pop
push
adc
mov
ljmp
add
aas
push
popf
loopne
mov
test
aas
pop
testb
xchg
test
or
or
jne
xlat
adc
aas
xchg
cwtl
int3
xchg
jge
push
mov
bnd
popa
jno
mov
ret
xchg
mov
pusha
cmp
rorl
in
aam
scas
xor
add
mov
sub
sbb
stos
xchg
popf
in
push
adc
call
push
adc
mov
xchg
movl
sub
ja
push
mov
int
loop
inc
pop
xchg
repnz
cld
inc
mov
xchg
cmp
insb
jl
fldenv
roll
and
movsl
push
shld
clc
pop
xorl
outsl
cmp
incb
lock
addr16
cmp
pop
jne
and
push
push
xor
in
ds
stc
aam
xor
lods
mov
scas
cmp
sti
xchg
fwait
xor
dec
inc
lds
rcll
fmuls
pop
test
dec
stos
mov
and
push
add
pushf
stos
or
mov
mov
testl
xlat
imul
add
outsb
setns
and
arpl
fistps
inc
or
jge
lret
xchg
mov
xchg
cmpsl
mov
lahf
mov
pop
sub
jae
mov
mov
sbbb
cmpsl
push
outsb
or
mov
stos
xchg
outsb
mov
insl
xchg
loope
cmp
es
mov
lods
lds
adc
jns
les
push
jnp
in
push
loopne
push
xchg
rcl
sbb
cmc
sub
cli
dec
out
call
push
aam
std
inc
pushf
das
addr16
add
cs
mov
imul
xchg
jnp
xlat
outsb
test
out
cwtl
pop
push
jle
sbb
inc
fdivrp
cmp
dec
and
fucom
hlt
loop
cld
js
xchg
sbb
fldcw
add
in
insb
std
aam
add
push
dec
je
pushf
fisubs
xor
dec
std
mov
icebp
lods
jno
pop
mov
out
jno
lods
lods
stos
jecxz
cmp
push
jnp
and
sub
test
add
out
mov
xchg
jle
dec
push
je
ljmp
adc
cmpsl
data16
stos
icebp
out
mov
jno
add
xchg
push
dec
sub
mov
jmp
clc
xchg
jl
ds
xor
jbe
mov
pop
cmp
sub
out
lret
call
push
nop
inc
cmp
cltd
imull
or
les
dec
mov
enter
fbld
jno
and
pop
cwtl
call
stos
fs
jge
cmp
xor
push
dec
inc
sub
pop
jmp
loop
sub
test
stos
in
mov
or
ret
push
push
sub
insl
mov
mov
mov
ss
adc
scas
xor
mov
mov
repnz
lret
scas
jmp
dec
icebp
mov
jno
xchg
cmp
out
stos
testb
sub
sub
adcb
jne
lods
push
xor
dec
mov
movhps
insb
or
push
xor
jne
mov
jle
cmc
push
enter
lcall
sti
xacquire
outsl
stos
int3
push
inc
dec
rcrl
push
addr16
lcall
mov
add
fisubrs
pop
jle
and
loop
or
aad
mov
popa
jnp
lea
mov
out
out
aaa
hlt
jmp
orl
ss
lcall
pusha
jg
fcoms
nop
std
out
jmp
mov
sbb
xchg
jbe
pop
pop
cmp
les
stos
loope
testb
add
addr16
sbb
cltd
loop
xchg
test
test
jmp
cmp
mov
mov
push
mov
das
adc
adc
cmp
sub
fidivl
sub
add
xor
gs
iret
sbb
rcrb
repnz
shrb
xor
cmc
jne
cmp
xor
cmp
dec
aam
lock
inc
fadd
fsubrl
mov
pushf
jg
adc
adc
mov
fldt
push
mov
mov
movsl
push
lcall
mov
and
fisttpll
cltd
rolb
push
test
push
test
testb
and
mul
and
cmp
hlt
loop
arpl
cli
sub
dec
outsl
adc
adc
push
aad
fisttpl
test
and
out
mov
leave
inc
xchg
pop
pop
mov
mov
pop
inc
xchg
dec
jbe
gs
sbb
fistps
push
repz
ret
cltd
pop
mov
fildll
rorb
and
adc
call
mov
push
push
push
and
aas
mov
xor
clc
inc
scas
sti
fldl
test
aas
data16
cmpxchg
imul
adc
xlat
sbb
jbe
lds
lret
push
cli
push
adc
cld
ja
dec
jl
repz
fstpl
stc
mov
test
mov
jle
vmovd
jno
fwait
push
test
fcmovnb
lods
mov
pop
shl
fisttps
pop
repnz
mov
shrl
hlt
add
push
cmc
jge
push
lods
push
cmp
push
sub
les
mov
gs
cmp
xor
mov
nop
sbb
xor
iret
jnp
jo
xor
ficomps
pushf
inc
push
lock
out
dec
jp
sbb
jne
addl
xchg
jne
pop
out
mov
in
roll
dec
push
push
mov
push
jg
cltd
sti
aas
lret
mov
mov
add
cmp
les
sub
or
mov
out
jl
xorl
push
jnp
sub
test
outsl
push
out
jecxz
ljmp
mov
sti
add
adc
test
cwtl
jl
pusha
enter
cmpsl
add
divb
je
lcall
outsb
movsb
outsb
jno
jmp
cmpsl
jnp
hlt
adc
daa
cwtl
adc
int3
mov
arpl
add
out
insb
scas
into
testw
mov
orl
arpl
cwtl
and
shl
add
ret
xor
mov
ds
rcr
mov
loope
scas
cmp
mov
adc
dec
mov
stos
cmp
idivb
aad
gs
mov
xchg
in
fmull
jg
bound
repz
out
push
push
adc
adc
xor
inc
addl
lock
shll
mov
xor
cmp
icebp
mov
pop
pcmpgtw
xchg
aas
loop
fs
lods
dec
cltd
lock
mov
out
les
in
in
dec
cmp
lock
adc
mov
sahf
test
cmp
fidivl
ja
rorb
mov
cmpsb
mov
add
adc
mov
js
sub
lret
sahf
test
imul
mov
jne
push
inc
rolb
xchg
jl
faddp
sbbb
das
and
xor
cmp
mov
jno
cmp
lods
mov
jmp
and
cmpsl
adcl
sbb
lcall
pop
ds
aas
sarb
call
add
mov
mov
fs
pop
mov
inc
insb
jl
mov
sbb
add
daa
inc
xor
fwait
dec
pushf
nop
adc
sbb
mov
and
add
int
pop
add
popa
pop
daa
or
pop
push
mov
stc
add
or
mov
inc
and
out
jecxz
mov
mov
and
jge
adc
dec
add
sbb
test
push
ret
adc
sahf
or
xchg
shlb
xchg
mov
imul
or
repz
ja
mov
add
mov
xor
sub
xchg
sub
fstpt
adc
insl
cmp
mov
xchg
lahf
jmp
pop
sub
dec
mov
jbe
xchg
or
push
xorl
adc
stos
mov
aam
xlat
cmp
adc
xlat
enter
xor
xchg
mov
scas
lock
or
popl
in
dec
call
mov
inc
mov
sub
int
and
cmc
jno
repnz
dec
rol
in
add
lods
sbb
mov
pop
push
imul
int
mov
cmp
xor
call
sbb
test
les
adc
add
push
les
insl
jns
fmuls
adc
adc
jno
xchg
jno
mov
mov
leave
fs
cltd
outsb
dec
sub
cwtl
adc
scas
jbe
inc
pop
stos
and
sbb
es
int
xchg
dec
adc
in
adc
mov
xorb
jb
mov
mov
call
clc
test
xor
jmp
shlb
out
inc
mov
pushf
imul
mov
lcall
dec
dec
inc
jo
inc
push
imul
out
xchg
lods
pop
cmp
ja
xchg
stc
pop
enter
dec
jo
lock
fs
outsb
mov
cs
adc
cltd
xor
rcll
test
jge
leave
dec
imul
decb
notb
int3
insb
je
or
mov
std
aaa
rorl
outsl
sub
addr16
out
dec
test
in
stos
loopne
push
in
fmuls
dec
mov
add
jecxz
shlb
les
cwtl
sub
fcmovnu
stos
clc
fisttpll
pop
fwait
adc
mov
jno
aas
dec
fistps
inc
mov
xchg
cmc
ss
pop
enter
or
xlat
or
enter
pop
lock
mov
inc
jno
fldt
mov
mov
push
mov
cmpsb
scas
xor
sub
pop
or
out
mov
fildl
pushf
cmpsb
pop
test
mov
xor
int
inc
cmp
aas
adc
shlb
mov
stos
mov
ficoml
cmp
imulb
xorl
pop
inc
add
test
imul
pop
pushf
ds
mov
dec
mov
push
mov
call
dec
fcoms
mov
sbb
ljmp
push
jbe
pop
mov
sbbl
adc
cltd
stc
mov
lahf
loop
jae
xchg
sbb
push
rorb
sbb
dec
dec
stc
decl
jecxz
mov
sti
pusha
fisubrs
mov
xor
pop
mov
lret
lret
movsb
iret
sbb
mov
pop
adc
out
sub
bnd
mov
adc
push
mov
fidivs
outsl
jbe
mov
lock
addr16
sbb
xchg
in
sub
or
and
addl
jmp
add
cmpsb
push
lods
aad
decb
dec
xor
adc
cmc
cmpsb
adc
scas
xor
cmpb
mov
test
mov
push
mov
inc
mov
iret
xor
js
cmpl
sbb
mov
sbb
xor
aad
es
sbb
fisttps
icebp
test
sarl
outsb
in
sahf
sub
movsl
add
roll
add
mov
xchg
ja
aaa
sti
std
cmp
dec
xchg
shlb
aad
jmp
mov
lds
fldl2e
cmpsb
out
sbb
mov
shll
xor
adc
bound
mov
arpl
jp
and
std
inc
push
into
mov
fnstsw
cs
mov
adc
insl
xchg
faddl
jle
mov
mov
pusha
mov
aaa
repnz
push
xor
ror
sbb
hlt
push
xchg
push
popf
mov
sub
insb
xchg
adc
call
lds
es
push
mov
fld
dec
pop
push
mov
shlb
mov
ret
outsb
outsl
xchg
mov
sub
or
push
cld
cmp
mov
es
enter
rolb
aam
lret
mov
push
sub
ljmp
ret
xchg
jnp
pop
int3
int
int3
out
sbb
xor
movb
and
add
aad
sbb
dec
jp
scas
mov
out
or
or
ja
push
shrl
xchg
in
dec
dec
mov
enter
cmp
add
jno
inc
fisubl
and
fiadds
inc
cld
iret
data16
imul
or
mov
sub
test
mov
fdivr
jge
scas
je
or
out
stos
dec
and
in
xchg
mov
and
mov
inc
xchg
push
push
and
aam
in
clc
cmp
lahf
push
mov
xchg
and
fistpll
mov
das
push
out
lea
fisttpll
inc
and
ret
fsubrs
sti
xchg
jle
mov
stos
fistl
sub
dec
pushf
jle
mov
mov
movsb
mov
pop
mov
and
mov
nop
mov
jle
scas
aaa
inc
mov
jmp
jmp
jns
add
cwtl
xor
icebp
xchg
mov
jne
push
sbb
cwtl
stc
or
arpl
mov
add
dec
popa
inc
lods
fstps
mov
aam
xor
faddl
adc
ss
icebp
xchg
jnp
fs
sbb
inc
outsb
adc
fwait
xor
sti
push
lds
sbb
les
fimull
and
icebp
int3
add
ret
push
adc
cmp
cli
outsl
mov
mov
mov
dec
stos
mov
faddp
ja
pop
outsl
xchg
fildl
adc
push
popf
jecxz
add
inc
rcll
sub
cmp
inc
sub
mov
hlt
dec
icebp
add
push
arpl
xchg
xor
fwait
ljmp
push
mov
or
pop
jp
decl
jp
sub
pop
sbb
jmp
cmpsb
outsb
hlt
add
and
out
stc
fdivp
pop
ret
mov
and
jge
test
rclb
inc
push
scas
ja
mov
pop
call
fistpl
stos
repz
inc
push
lcall
xchg
gs
and
scas
leave
push
ficompl
dec
mov
stos
out
inc
scas
mov
mov
insl
dec
jmp
or
mov
outsl
loope
mov
dec
add
pop
push
push
in
ja
and
imul
leave
pop
mov
push
aas
lret
xor
xchg
test
jecxz
mov
xor
test
cmp
test
pushf
scas
xor
repz
movsl
jp
mov
sbb
xor
out
mov
nop
fistps
pop
setp
iret
cmp
push
sbb
xchg
outsb
ja
bound
bnd
jp
pop
adcb
lds
sbb
mov
cld
fwait
or
jbe
fcoms
lods
fdiv
adc
and
ljmp
sub
xchg
mov
fcoms
inc
sysret
push
push
cmpsb
push
in
push
add
div
xor
inc
adc
adc
clc
sbb
ss
pushl
sub
cwtl
sub
pop
aam
or
xor
push
mov
adc
pop
jno
test
faddl
sub
fwait
lea
arpl
pop
cmc
jle
adc
cmp
aas
push
pop
scas
xchg
xor
xor
fisubl
nop
int
repz
jecxz
dec
and
les
in
xchg
ja
jl
push
dec
fstl
aaa
xchg
fmull
ss
sub
push
xor
clc
bnd
push
mov
dec
repz
jp
mov
out
cmpsb
sbb
xchg
inc
movsl
imul
add
fdivp
out
dec
xlat
hlt
cld
sub
mov
sbb
cmp
cmpsb
jno
xchg
sbb
imul
xchg
xor
insb
pop
or
mov
cmp
mov
push
inc
mov
nop
shll
pop
cmpsl
cmp
scas
inc
divb
cld
push
jge
test
push
stc
rcl
rcrb
push
cs
inc
lret
mov
adc
enter
sbb
push
dec
call
ficoms
xchg
add
jle
adc
jnp
daa
sbb
push
pop
out
lea
push
shld
out
sti
idivl
fidivs
or
outsb
cltd
mov
mov
or
out
addr16
btc
sbb
stos
fchs
lret
xchg
jle
dec
sub
imul
hlt
out
int3
fnstsw
dec
dec
pop
icebp
in
adc
notb
jns
cli
testl
mulb
out
mov
push
out
mov
push
pop
pusha
scas
push
cmpsl
pop
push
inc
popa
popa
iret
mov
and
cmp
add
popa
mov
pushf
mov
mov
lock
and
movsb
mov
jne
sub
mov
cmp
jnp
xor
fwait
or
sbb
lods
inc
ss
aam
pop
jns
inc
clc
jns
inc
repz
jge
inc
cmp
ja
push
mov
or
jbe
xchg
pushf
imul
shl
sub
push
mov
dec
xchg
push
cmp
shll
push
push
mov
lds
outsl
aaa
out
or
cmp
mov
shl
add
and
pop
mov
cmovge
mov
or
add
push
adc
mov
das
ret
lret
mov
or
xor
cmp
and
nop
cmpsl
cmp
inc
ja
xchg
mov
pop
nop
inc
xchg
dec
shll
test
scas
cmp
jge
pop
xchg
rcr
dec
out
ficompl
or
movsl
mov
ds
decb
fcompl
stos
or
fisttps
out
cmp
loop
push
icebp
into
and
sbb
push
in
rol
xor
in
aaa
inc
sub
add
cli
and
xchg
js
and
fadds
dec
jp
test
aas
cmp
fnstsw
jge
cmp
test
jnp
stos
pop
mov
sbb
into
shl
mov
les
enter
jae
shlb
pop
jle
enter
xchg
push
pop
notb
cwtl
xor
jp
iret
out
push
movsl
add
sbb
inc
sub
dec
aad
inc
lds
fisttpl
popf
lds
sbb
mov
add
dec
call
fcomp
push
mov
imul
push
mov
sbb
mov
in
push
inc
xchg
sti
sbb
mov
decl
dec
pop
or
in
add
rcr
hlt
fidivl
dec
ss
cmc
int
in
lahf
lea
mov
das
adc
push
pop
jnp
mov
dec
sub
movsl
xor
inc
das
and
jecxz
cli
mov
fs
xlat
mov
xlat
mov
adc
sub
mov
ljmp
iret
gs
add
dec
push
test
icebp
ja
add
mov
mov
inc
div
jb
imul
cwtl
cmp
ja
mov
sub
scas
lea
jae
cld
mov
inc
ficompl
out
mov
xchg
loopne
sbb
scas
popa
out
je
sbb
hlt
addb
cmp
add
fsts
mov
lods
mov
add
adc
mov
xchg
out
mov
cli
push
push
push
fwait
insl
jle
xor
test
xor
and
call
lock
leave
jnp
jae
ret
xor
push
mov
aam
pop
pop
lret
test
cli
sbb
test
pop
cld
or
jg
xchg
xchg
js
imul
mov
fwait
add
mov
or
imul
inc
dec
mov
lds
movsl
adc
cmpb
ss
xchg
ss
rolb
xor
sahf
outsb
cltd
fs
mov
sub
roll
mov
jns
iret
testb
pop
push
outsl
fsubs
divb
lds
in
mov
dec
push
xor
mov
cltd
jl
and
test
mov
sbbb
xchg
push
add
pop
and
fs
xchg
mov
or
aad
inc
jmp
not
jg
movsb
cwtl
loop
xchg
and
dec
gs
push
incb
sbb
jl
fisttps
sahf
add
push
jge
mov
xor
pop
repz
cmp
sbb
add
add
into
dec
sub
rcrb
inc
sub
dec
loopne
inc
dec
popf
fldz
xchg
and
pop
pop
pop
sbb
sub
fadds
sub
push
test
cmpb
rorb
push
dec
push
daa
pop
pop
lahf
je
push
mov
pop
xchg
jge
mov
leave
push
sbb
push
std
leave
cli
push
ljmp
out
loopne
pop
jae
jmp
push
mov
repnz
rorb
shr
test
cmp
lock
adc
xor
mov
outsl
cmp
cli
movl
pop
mov
pop
xchg
stc
cld
adc
in
and
rclb
sub
rorl
mov
xchg
mov
mov
adc
dec
sbb
out
xlat
fdivrl
in
jge
rorb
jns
push
out
pop
out
call
mov
sbb
test
push
pusha
lret
sub
cmp
mov
adc
push
xor
test
dec
or
loope
mov
ror
push
ja
xlat
cld
lods
popf
adc
adc
aam
inc
jbe
inc
scas
cld
mov
aas
repnz
out
push
lock
inc
jl
insb
sbb
iret
mov
faddl
inc
add
jbe
test
or
imul
addr16
ds
jns
push
test
jge
and
mov
scas
jl
mov
test
insb
outsl
sub
imul
and
stos
popf
push
pop
daa
cmc
in
adc
jmp
cltd
adc
js
mov
mov
push
data16
and
leave
sub
aam
mov
sub
insb
stos
outsb
in
jp
sbb
adc
scas
daa
mull
jg
lds
fnsave
mov
push
loope
stc
sbb
push
daa
or
test
ja
mov
loop
nop
inc
lds
stos
push
lods
sbb
cmp
push
xchg
and
mov
js
sub
pop
jg
inc
out
inc
movsw
mov
mov
push
or
or
pop
rcr
mov
or
mov
cs
adc
sahf
mov
aad
jge
cmpsl
cld
out
je
xorb
movsb
dec
je
and
mov
mov
push
xchg
rorl
or
popl
jmp
decb
pop
and
rorb
subl
mov
pop
lcall
cmp
mov
and
clc
mov
movsl
das
rol
dec
aaa
aam
pop
sub
gs
test
or
adc
ds
xchg
inc
hlt
cs
pop
rorl
je
cmp
out
out
push
jae
inc
out
fadds
lret
stc
mov
in
jae
cmp
add
cli
push
sbb
sub
cs
mov
popf
xor
aaa
fidivrs
shll
loopne
pop
sub
push
in
imul
scas
cmpsl
repz
xchg
inc
lds
xor
fs
int3
jg
xor
pop
mov
jl
jne
orb
aad
repnz
sub
jecxz
inc
xor
movsb
inc
xor
and
test
sub
or
push
push
and
fsubrl
adc
xchg
jge,pn
ror
xor
cmp
lods
nop
or
push
push
addb
inc
xchg
mov
test
jo
inc
push
orl
fldl
outsb
scas
xchg
std
cmp
ss
aam
imul
cmp
pop
mov
add
push
add
rorl
dec
movsl
shll
mov
movsb
ret
xor
mov
push
mov
mov
orl
fdivrl
cmp
iret
in
sar
jmp
pop
stos
les
dec
insl
or
ret
subb
fsubs
fldcw
mov
sbb
cmp
mov
mov
rcll
rorl
sarl
sub
mov
sbb
mov
out
push
dec
cmc
pop
outsl
fisttps
gs
out
jg
dec
cmp
add
dec
sarb
adc
ja
je
add
pop
jne
pop
mov
mov
fwait
add
loopne
xchg
imul
mov
mov
mov
mov
loopne
sub
paddb
lods
fisttpl
das
fcmovu
cmpsl
ret
fsubr
fwait
xchg
adc
loopne
sbb
into
out
loop
nop
mov
xor
push
mov
movsb
mov
mov
xor
adc
fsubrl
pop
sub
mov
xlat
mov
push
mov
mov
test
push
mov
movsb
and
push
sub
cmp
xchg
push
mov
xchg
outsl
jecxz
imull
orl
adc
das
jae
icebp
or
jl
adc
movsl
mov
pusha
jmp
inc
cmpsl
mov
lock
dec
in
mov
and
and
das
mov
or
sub
cmp
adc
insb
dec
sarl
mov
icebp
push
fcmovne
jge
divb
cmpsl
jl
mov
adc
fnsave
or
insl
movsl
pop
dec
push
jp
push
insb
dec
movsl
or
or
cmp
hlt
pop
mov
jbe
mov
jne
push
mov
sahf
ret
mov
mov
add
dec
aam
mov
cltd
out
sbb
mov
outsb
pop
sbb
adc
popf
xchg
sbb
mov
dec
dec
cs
push
repnz
dec
in
dec
cld
pop
or
loopne
int3
mov
pop
sbb
xor
mov
shll
mov
iret
in
enter
movsl
in
rcl
mov
jle
sbb
lret
xorb
adc
lods
imul
sti
cmc
jl
mov
dec
adc
fstl
lcall
sarb
hlt
fcomip
xchg
jno
jno
out
push
jo
out
inc
ljmp
bound
mov
and
mov
ss
rorb
cmp
cmp
adc
enterw
xor
repz
idivl
inc
and
mov
and
std
mov
sub
outsb
iret
dec
mov
sbb
andl
xchg
nop
and
mov
int3
int3
nop
sbb
lcall
xchg
js
lret
dec
rolb
lcall
lret
mov
outsl
testl
xchg
pop
cmp
sub
lret
mov
jb
test
js
ficoml
inc
push
insb
loopne
inc
arpl
pop
jle
mov
fwait
jb
push
mov
cld
adc
cmpsb
sbbb
cmp
mov
addl
stos
jl
push
cmp
add
lock
icebp
pop
mov
xchg
xor
imul
push
push
xor
int
js
adc
bnd
push
pusha
cmpsb
adc
sub
fstpt
sti
lret
pop
popa
cmp
scas
pop
inc
mov
xchg
cmp
leave
insb
loop
pop
dec
xor
lods
sub
xorb
sbb
popa
push
adc
cmp
cmp
cmpb
push
xchg
xor
or
leave
aad
and
iret
pusha
sub
imul
popf
sbb
adc
xor
mov
push
cwtl
xor
adc
dec
jns
add
xchg
jns
add
mov
lock
cmc
mov
mov
gs
enter
std
sbb
shlb
sarb
out
mov
out
mov
pop
jl
sub
jmp
push
in
inc
push
push
jle
and
fdivl
mov
fs
inc
ret
sub
or
int
lahf
je
sub
sbb
adc
dec
ficoml
bound
inc
jns
cltd
fildl
or
mov
daa
mov
adc
and
aad
or
dec
jb
or
fldpi
call
adc
outsb
mov
js
sub
imul
mov
inc
cmp
xchg
notb
push
cmp
out
pop
jp
inc
dec
sti
mov
rcll
and
pop
imul
adc
xor
stc
pop
jbe,pt
mov
mov
out
jb
jg
rcrl
xchg
mov
inc
call
ss
sbb
clc
cmp
lock
cmp
pop
push
jo
add
fiadds
and
pushf
add
jle
enter
inc
adc
nop
jne
sti
cmpsb
movsl
xchg
mov
pop
mov
mov
jno
sti
mov
or
lods
jb
inc
pop
jb
clc
cmp
loope
out
sub
mov
outsl
in
fxtract
fadd
xchg
push
xchg
xchg
mov
cmp
mov
push
inc
lahf
pushf
sub
dec
addl
es
jecxz
ret
jle
aam
out
andl
out
and
cmp
ret
lods
add
push
filds
test
lds
push
lahf
mov
lds
jp
adc
cltd
inc
or
inc
ret
jae
mov
and
test
dec
mov
xor
fstpl
scas
pop
adcl
enter
outsl
in
or
push
shlb
sar
mov
imul
mov
mov
jbe
lds
shrl
pop
repz
les
add
outsb
dec
popa
cld
mov
pop
add
xor
test
sbb
movsl
inc
icebp
jne
lea
movsb
push
xor
or
cmp
add
sub
arpl
movsl
icebp
pop
or
in
pop
pushf
lahf
lret
sub
mov
repz
in
or
jmp
cwtl
xor
mov
mov
jne
fadds
insb
flds
fimuls
stos
dec
xor
mov
ljmp
ja,pn
fs
rcll
xchg
fwait
sbb
adc
inc
je
adcb
adc
sub
test
popa
sbb
jns
int3
daa
xchg
es
enter
sub
daa
push
cmpsb
inc
clc
mov
xchg
jp
inc
pop
ret
push
insb
mov
xor
jo
mov
int3
fistps
and
fidivrs
addr16
inc
repnz
test
mov
movsl
paddb
insb
adc
out
jmp
icebp
sbb
and
jne
cltd
adc
push
mov
add
sbb
jle
xor
xchg
add
xor
mov
xor
add
push
pop
xchg
imul
pop
inc
cmpsb
dec
xchg
and
icebp
loope
sbb
dec
or
cwtl
sub
dec
imul
or
mov
jo
push
sub
loop
sub
dec
inc
stos
test
lret
jecxz
adc
adc
jg
test
pop
cmc
dec
push
sub
loope
aaa
inc
int3
sahf
stc
push
and
aam
lds
inc
push
jbe
loope
and
lcall
mov
sub
test
aaa
popa
inc
mov
mov
cs
push
popa
iret
arpl
mov
testb
xor
adc
arpl
add
out
xlat
inc
jnp
icebp
not
sarl
outsb
add
push
jns
jmp
test
notb
ds
inc
sub
cmpsb
sub
inc
cmpsl
sbb
into
adc
mov
fdivrl
lea
add
cltd
pop
jmp
stc
sbb
cmp
fwait
jg
fisttps
xchg
stc
fisttpl
mov
jnp
mov
push
lods
jne
sbb
cltd
mov
xchg
pop
outsl
and
hlt
add
scas
and
js
jne
push
outsl
sahf
int3
repz
leave
scas
movsb
adc
xor
push
push
aaa
or
ret
daa
stc
pop
ret
jno
adc
dec
adc
push
jp
sbb
ficoml
notl
jmp
sub
aad
xor
and
sub
pop
and
adc
mov
leave
test
xor
popf
xor
pop
nop
and
mov
jmp
xor
shlb
hlt
pushf
aas
gs
mov
pop
movsb
dec
jl
loope
mov
mov
fisubrl
repz
out
lret
mov
jo
cmp
aad
add
adc
sbb
cli
mov
xchg
mov
mov
orl
repz
imul
dec
pop
mov
xor
pop
jne
jle
sahf
and
imul
mov
out
pop
ljmp
addr16
inc
lret
dec
test
adc
idivb
hlt
or
or
sub
cmp
add
xchg
outsl
aad
dec
add
ror
or
aaa
mov
movsl
xor
and
fmuls
jecxz
pushf
mov
test
mov
mov
mov
xchg
add
or
out
sbbb
mov
inc
xor
cmpsb
les
cs
push
pop
or
rol
sub
fisubrl
mov
pop
mov
out
imul
test
adc
lods
add
cmpsl
mov
inc
cwtl
mov
push
adc
add
push
scas
pop
inc
mov
sub
mov
inc
faddp
push
bound
pop
fdivrs
negb
push
xor
mov
mov
or
mov
jge
jle
add
mov
scas
pop
in
jne
push
loop
xor
out
xchg
adc
mov
lret
cmc
mov
mov
or
insb
sub
in
jp
es
imul
jmp
popf
fs
insb
xlat
dec
loope
lahf
mov
inc
cmp
push
or
mov
mov
push
mov
je
mov
outsb
and
cmp
adcb
xor
mov
pop
out
mov
mov
arpl
mov
popf
scas
and
lods
adc
stos
mov
and
mov
iret
mov
inc
dec
fisttpll
cltd
rep
daa
xor
leave
and
xor
push
jl
xchg
scas
pop
cld
pop
sbb
sbb
xchg
ror
pop
mov
rclb
shll
sub
outsl
cmp
push
je
push
jne
cmp
xchg
es
push
mov
lret
sub
lret
pop
jo
jp
popf
lret
mov
vcvttss2usi
data16
dec
inc
popa
fcompp
push
cld
add
mov
adc
js
ljmp
cld
pop
lret
movb
movsb
mov
push
dec
jno
cwtl
test
mov
cmp
cmc
into
mov
cmpsb
add
and
sub
sbb
jno
adc
pop
je
push
lock
mov
mov
mov
inc
popa
fsubrp
js
icebp
rep
add
xchg
or
inc
pop
clc
adcl
mov
clc
cmp
xchg
jo
cmp
lea
adc
lahf
cld
mov
cmp
leave
outsl
dec
add
idivb
jmp
add
lds
jo
sub
outsb
inc
aad
lret
mov
sti
jmp
jbe
xlat
fidivrs
mov
mov
pop
add
cltd
inc
adc
std
push
xchg
adc
dec
and
cmp
mov
sbb
test
bnd
cmc
pop
inc
hlt
mov
push
xchg
cmp
inc
or
jo
sbb
and
dec
cmpsl
push
jnp
or
jp
enter
repnz
mull
add
mov
ror
ss
inc
mov
loop
lds
mov
inc
jnp
adc
pop
inc
ds
mov
mov
xchg
cs
or
cmp
dec
xorb
add
pop
dec
and
dec
mov
push
jbe
test
loope
data16
test
cmp
dec
or
sbb
or
xor
mov
shlb
push
imul
or
sbb
dec
adc
sbb
enter
out
fsubrl
jle
xor
add
cld
mov
cmp
jae
clc
mov
jl
repz
push
xor
sub
inc
call
adc
sahf
call
lods
jne
je
lds
pop
mov
jae
xorb
inc
outsb
jecxz
or
sbb
inc
std
inc
pop
or
rcrl
lods
jge
stc
mov
xchg
outsl
inc
and
fwait
leave
bound
mov
push
daa
ds
and
xor
in
cli
pusha
push
dec
push
xchg
jno
cmp
mov
pop
adc
and
popf
mov
loope
fisubrs
sub
loop
jo
sub
and
jg
hlt
jmp
xchg
push
jno
push
std
sbb
xorl
and
lods
dec
mov
mov
adc
cli
lock
sbb
std
mov
outsl
jo
pop
jmp
data16
sti
rorb
in
mov
jns
sub
cmp
fwait
mov
inc
je
xchg
leave
xor
rcr
pop
xchg
jno
xchg
lret
imul
dec
xchg
xlat
mov
lods
or
rorb
lock
mov
mov
jge
xchg
pop
mov
popl
mov
testb
cld
sbb
icebp
lock
xchg
dec
jb
or
pop
arpl
mov
jae,pt
cmp
jg
into
fucomi
test
cld
jle
aad
or
jg
pop
ds
jno
pop
xchg
mov
aas
xchg
bound
jns
cmp
out
inc
mov
ds
ret
mov
data16
jmp
and
loopne
mov
sti
aam
data16
push
add
pop
sub
dec
ja,pt
adc
stos
jns
pop
xchg
bound
fwait
xor
dec
mov
dec
imull
mov
shl
jnp
xchg
pop
sarl
push
xchg
sbb
pushf
lds
pop
sub
xlat
ficoml
daa
mov
dec
and
fs
sahf
push
cmp
loop
popa
addl
mov
in
mov
and
xor
mov
mov
enter
inc
movsb
cli
clc
pop
push
insl
lea
sbb
xchg
jle
int3
bnd
add
mov
jae
cwtl
xchg
sub
sub
pop
sahf
mulb
das
xor
cli
cmp
gs
bound
sub
push
inc
sbb
inc
mov
in
mov
mov
scas
out
ficompl
mov
je
add
mov
cli
movsl
out
push
xor
or
sub
popa
sti
loopne
jg
fwait
xor
int3
cmp
mov
sbb
ja
mov
add
mov
lret
dec
push
les
push
and
scas
push
ds
insl
mov
and
jae
jno
push
jecxz
push
jae
inc
pop
mov
std
and
cld
lcall
jecxz
repz
adc
data16
dec
scas
cmpsb
rclb
icebp
loope
jecxz
aas
sbb
mov
dec
ja
ficoms
sbb
xor
ret
ljmp
nop
and
xchg
jp
mov
xor
jmp
sbb
xor
imul
ss
ds
adc
sbb
pop
fcoml
sbb
loopne
jp
push
jge
jle
jo
pop
ljmp
bound
sbb
and
add
andl
push
mov
dec
add
pop
jnp
mov
and
push
mov
repz
sub
push
sub
je
insl
mov
push
adc
mov
sbb
adc
inc
lods
cmpb
pushf
inc
and
inc
xor
inc
fbld
jae
pop
in
or
int
pop
add
jecxz
rcrb
cmp
jae
aas
push
mov
das
imul
push
scas
xchg
dec
inc
push
dec
out
push
jno
out
popf
jno
rolb
iret
dec
inc
int
insw
test
nop
dec
push
cmp
js
mov
pop
mov
scas
lret
lret
jg
outsl
aad
mov
pop
mov
mov
or
pop
mov
push
mov
push
xchg
loopne
mov
pop
mov
push
lret
mov
jbe
sub
scas
dec
pop
loop
sbb
dec
aas
sbb
dec
icebp
lods
rolb
repnz
into
xchg
scas
xor
out
das
out
clc
inc
sub
out
sbb
and
mov
cli
ljmp
cmpsb
les
or
inc
xor
pop
std
and
insl
repz
test
push
and
inc
xor
jecxz
test
xor
cwtl
cmp
xor
into
bound
xchg
mov
mov
and
pop
pop
lcall
adc
adc
pop
dec
mov
sti
jmp
cmp
mov
fimull
xor
aas
scas
ret
icebp
pop
js
sub
pop
in
in
xor
mov
sbb
loop
fldcw
cmc
jmp
jno
xchg
int3
aam
add
imul
and
adc
mov
lock
loope
inc
jno
dec
adc
sub
faddp
popa
std
sub
pop
cmp
xchg
lods
or
lods
xchg
loope
pop
mov
push
mov
fsubs
xor
cs
loopne
lods
mov
testl
shll
sub
push
pop
loope
pop
lahf
xchg
add
cmpsl
shll
shlb
test
fisubl
enter
sbb
mov
in
ficoms
xchg
ja
add
dec
int
nop
mov
cmp
nop
sarb
cmp
into
jge
daa
pop
add
mov
cmp
popf
insl
mov
pop
out
lret
xchg
cmp
mov
out
in
hlt
mov
daa
mov
int
aam
add
dec
test
push
cmp
dec
cmp
sub
sahf
mov
pop
lock
push
dec
inc
mov
ficoml
sbb
cmp
pushf
push
adc
push
push
pop
test
inc
out
mov
ficoml
rcll
je
daa
pop
arpl
lret
and
test
add
adc
pop
jmp
jb
fwait
pop
jae
ret
in
or
jne
mov
or
jae
out
inc
loopne
mov
pop
jg
mov
mov
lret
xchg
rorl
sti
ljmp
test
call
popa
mov
mov
notl
dec
mov
sbb
out
inc
fwait
dec
mov
frstor
setns
jnp
mov
jg
lahf
mov
pop
dec
cmpsb
sub
jns
push
mov
aaa
cmp
mov
mov
pop
scas
andb
adc
and
cmp
out
insl
fidivrs
leave
push
shll
ja
scas
xor
cmp
fists
gs
xchg
jp
cmc
xchg
mov
lds
ret
aaa
mov
adc
push
scas
pop
repz
daa
push
mov
cs
cs
jne
pop
lea
decl
push
mov
mov
les
adc
mov
dec
pop
cmc
faddp
mov
rcl
int
cli
aas
adc
stc
mov
in
mov
sbb
outsl
and
ja
xchg
ja
push
popf
flds
shlb
inc
incl
movsl
outsb
cwtl
icebp
and
sub
mov
out
push
aam
push
icebp
lods
insb
push
jo
and
mov
repnz
push
rcl
pop
cmp
fprem1
das
jl
inc
vmread
jle
test
fists
arpl
push
mov
outsb
aad
sbb
lds
lock
fnstcw
loope
xor
xchg
data16
incb
mov
fistl
push
or
adc
iret
mov
dec
shrl
aad
fnstcw
lods
lds
xchg
mov
lret
insl
subl
bound
jae
loopne
inc
mov
cmp
pusha
int3
mov
inc
jb
out
and
iret
xlat
or
mov
sub
ljmp
adc
pushf
and
pop
adc
les
test
pop
sbb
fnsave
pusha
and
dec
lcall
std
mov
aam
adc
shl
jg
push
sbb
lcall
mov
in
clc
movb
arpl
sbbb
push
sbb
xor
adc
and
mov
or
xor
or
jns
mov
push
leave
add
xor
adc
fs
cmp
inc
mov
test
test
es
ja
mov
adcb
jl
mov
cmpsl
ret
add
lods
mov
jecxz
lahf
sahf
sbb
adc
fdivr
sub
je
sub
fidivl
dec
xor
add
or
push
loope
and
xchg
adc
or
mov
mov
mov
mov
jo
inc
add
aam
sub
mov
hlt
sub
inc
xor
iret
push
out
mov
jg
mov
rorb
pop
gs
aaa
pop
sbb
test
cli
idiv
inc
rcl
es
jbe
fldl
dec
popa
inc
loop
and
mull
ret
xchg
xor
xchg
lds
xchg
xchg
inc
in
pop
xchg
push
imull
and
pop
pop
sbbb
repz
sbb
xchg
xor
leave
mov
js
add
or
lds
xchg
adc
loopne
dec
push
xchg
in
addr16
adc
fwait
mov
cs
shlb
adc
mov
or
repz
sbb
rcll
and
loop
loop
out
or
add
pop
jle
enter
xor
js
movhpd
mov
test
push
xchg
sbb
int
das
imul
sbb
fdivr
push
sub
loop
mov
cmp
mov
or
ret
int3
jae
stos
and
xchg
pop
mov
jp
jbe
es
je
xchg
mov
push
dec
repz
idivl
cmpsl
loop
shr
mov
jp
pusha
arpl
push
mov
cmp
xorb
imul
push
push
leave
outsb
mov
cmp
aas
pop
sahf
pushf
jg
push
nop
fdivs
sahf
out
aas
push
add
pop
hlt
add
inc
jg
leave
inc
mov
je
ljmp
imul
jns
imul
push
cwtl
push
jp
dec
call
cmp
inc
std
xchg
xchg
adc
and
int
cwtl
and
rorl
leave
pop
addr16
cmp
hlt
movsb
jae
push
nop
fwait
pusha
or
std
inc
cmp
and
lods
jae
fwait
pop
add
cltd
out
adc
pop
jb
mov
loopne
pop
mov
ret
stos
sub
xor
sti
inc
enter
xchg
adc
mov
fidivs
cli
jae
or
push
jp
jmp
sbb
fsubrs
out
mov
cmp
push
mov
jno
jl
mov
inc
cltd
mov
jno
xchg
or
mov
call
insl
popa
outsb
fbstp
cli
mov
fldcw
stos
sub
fisubrs
dec
cmp
and
mov
jle
push
js
es
dec
cli
pop
add
sbb
xchg
push
pop
ljmp
scas
dec
outsb
inc
loope
sub
out
ljmp
push
mov
push
cld
mov
call
xor
add
stc
test
jle
das
inc
pop
add
aaa
mov
dec
add
or
pop
imul
dec
enter
stos
iret
push
lods
mov
mov
fiadds
jmp
mov
rcrl
pop
pop
pop
xchg
inc
jne
mov
xor
jno
sbb
or
fisubrs
in
dec
jl
xchg
inc
fcomi
cmpsb
jecxz
outsl
data16
imul
loop
int3
inc
adc
mov
or
jo
sbb
inc
lret
dec
mov
mov
inc
je
dec
clc
or
push
adc
inc
je
mov
mov
pushf
into
arpl
in
lock
jne
or
adc
in
xchg
shl
enter
push
mov
movsl
mov
ret
fs
lahf
and
jns
jno
scas
in
loop
out
out
xor
dec
jb
leave
jl
popa
and
sahf
call
outsl
inc
xchg
sbb
sub
rcrb
push
inc
mov
mov
sti
mov
push
mov
adcl
cmpb
add
dec
cld
adc
jecxz
stos
int3
subb
push
jp
jne
pop
loope
adc
push
fildl
scas
and
pop
pop
aad
cs
cmp
clc
jne
mov
out
sbb
xor
or
push
xchg
sbb
inc
imull
sbb
mov
data16
adc
cwtl
xchg
pusha
mov
sarl
sahf
cwtl
lret
inc
dec
int3
es
call
xorb
stos
cmp
pand
pop
ret
fcomps
out
insb
cmp
bound
fists
or
mov
out
aaa
sbb
or
jbe
and
inc
cmp
movl
fsubrs
cmp
ja
xorl
xchg
sbb
sbb
push
add
lret
shrb
test
sub
imul
fisubl
xor
jnp
fsubs
xchg
adc
push
push
dec
cmp
sub
jp
sbb
xchg
fs
fisubrl
cli
jb
xor
cs
jp
push
push
mov
sbb
gs
add
testb
cltd
imul
mov
and
shrb
pop
push
push
sahf
sbb
or
movsb
push
lods
data16
sbb
call
out
sbb
push
xor
lahf
sub
js
jmp
mov
fmul
dec
pushf
outsl
or
mov
stos
or
or
into
inc
xor
xor
int3
dec
xor
or
shr
push
lret
mov
push
scas
in
and
in
cltd
add
scas
movsb
pusha
rorb
dec
les
jae
and
imul
jmp
adc
in
clc
jl
pop
adc
dec
pop
aas
test
sub
add
lahf
pop
cmc
in
testl
decl
push
jnp
cli
in
mov
and
cmpl
mov
loopne
leave
push
xor
pop
xor
dec
adc
into
popf
adc
shld
push
scas
lret
leave
loop
mov
or
inc
pop
movsl
cli
int
enter
mov
and
ljmp
jg
icebp
dec
xor
or
dec
push
pop
lods
sub
sbbb
dec
out
orb
dec
ja
dec
mov
ss
adc
jle
dec
adc
ret
cld
xchg
cmpsl
mov
sbb
ret
out
xchg
cmp
pop
mov
push
ss
and
test
jns
adc
leave
iret
mov
push
push
outsb
dec
dec
mov
adc
jmp
into
enter
xchg
dec
repz
mov
test
push
dec
imul
arpl
jecxz
scas
icebp
mov
shrl
pop
dec
aad
ret
push
fsts
jb
pop
pushf
mov
shlb
aam
adc
cmp
test
sub
popf
popf
sbb
arpl
inc
adc
jp
cmpsl
pop
scas
push
pusha
insl
outsl
jb
mov
adc
in
imul
insl
jp
notb
sbb
sti
cmp
lea
jbe
dec
or
inc
xchg
arpl
sbb
mov
adc
push
jns
xchg
pop
cmpsb
insb
cltd
jbe
cmp
adc
push
idivb
fimuls
sbb
cmp
cmp
lock
or
dec
jl
and
jns
mov
ret
push
push
inc
fwait
inc
xchg
pop
scas
dec
cltd
inc
shlb
sub
mov
lock
jmp
in
or
scas
rep
in
pop
rcll
mov
movsb
cmp
mov
leave
jb
stos
jbe
lahf
pop
into
push
aaa
in
cmp
test
leave
jns
out
or
jmp
outsl
inc
push
test
xor
sub
cs
je
cs
xchg
jg
push
jp
mov
pop
mov
mov
popa
mov
gs
sbb
js
jge
or
dec
mov
mulb
out
out
mov
popa
sbb
pop
add
fbld
jge
movsb
or
sysret
add
out
push
cmp
pop
inc
xorl
movsl
dec
add
xchg
push
ds
cli
xor
cmp
add
mov
xchg
ds
insb
in
ficoml
rcrl
dec
sbb
imul
cltd
inc
fnsave
mov
int3
push
adc
push
call
dec
xor
pop
ljmp
cli
jb
xchg
scas
push
fistps
push
cmc
jmp
add
push
data16
mov
int
sbb
aad
es
sbb
xor
pop
push
dec
es
xor
arpl
push
in
in
lret
add
fwait
aas
lods
stos
cmc
mov
insl
mov
fucomi
shl
pop
insl
sub
xchg
in
pop
and
cld
ficoml
adc
insl
bound
and
inc
hlt
call
or
inc
xor
sbb
rcr
adc
pop
fdivrs
sbb
fstps
cmp
add
repz
jns
hlt
inc
movsl
fistl
xor
inc
shr
jo
inc
xchg
adc
mov
orl
cmp
cmp
filds
aad
movsb
roll
push
rclb
fidivs
shl
stos
and
das
imul
xchg
lcall
mov
add
dec
cltd
ds
es
mov
das
enter
xchg
xor
mov
xchg
ret
dec
pop
jmp
movsb
push
sbb
pop
sub
mov
add
and
orb
int
and
pop
cmp
les
xchg
dec
push
cltd
rol
push
cmp
or
mov
cmpsl
jbe
cltd
cmp
jae
jae
in
sbb
lea
push
loopne
mov
sar
int
mov
pop
cld
jbe
rolb
imul
mov
stos
mov
es
dec
sbb
fdivr
repz
and
cmp
pop
pushf
aaa
lods
mov
fsubrl
mov
cmp
scas
add
icebp
test
push
push
popa
lret
popa
mov
hlt
or
xor
mov
loop
fwait
mov
fdivrl
adc
xor
xor
dec
mov
cmp
fisubrs
inc
ficoms
mov
pop
nop
clc
mov
xchg
outsb
arpl
mov
enter
roll
leave
daa
mov
push
lahf
push
jne
insb
xor
inc
lds
cmp
cli
add
clc
and
and
cld
mov
and
insb
inc
push
xchg
add
mov
jge
add
aaa
and
orb
push
daa
cltd
xchg
jl
mov
dec
cmp
insb
mov
cltd
adc
mov
out
push
aas
add
add
lret
or
mov
call
shll
ljmp
push
adc
call
jne
inc
jnp
jno
jnp
loop
or
push
sar
scas
mov
fwait
xor
movl
cmp
fs
xor
shl
push
jb,pt
dec
ds
outsl
cmp
inc
sub
nop
hlt
test
ficomps
ret
xchg
fistpl
xchg
xchg
inc
sbbl
cmpsb
cmp
push
adc
jb
sahf
int
fisubrs
mov
sub
and
mov
mov
dec
mov
push
mov
nop
jl
inc
xor
ljmp
cmp
sub
or
or
lock
call
cld
lcall
leave
mov
inc
dec
dec
clc
ret
ds
in
loop
xlat
sub
in
jbe
dec
pop
push
daa
iret
cmp
adc
mov
mov
and
push
cmp
jl
mov
mov
cmp
pushf
adc
add
vaddsubpd
jb
not
lahf
dec
and
sbb
cmp
jecxz
mov
or
fs
or
or
or
aas
out
scas
inc
adc
adc
adc
out
fcmove
jge
push
cmp
jle
adc
je
sub
inc
cmc
add
call
in
test
adc
and
in
idiv
lret
shl
test
es
lcall
stos
or
es
into
mov
and
push
lret
lret
or
push
orb
push
mov
push
jae
xor
xor
cmp
gs
push
inc
or
fbstp
sub
adc
loope
cld
jmp
cmp
pop
mov
sub
xor
cmp
ljmp
xchg
fs
in
push
mov
ret
jmp
and
repz
xchg
cmpsb
adcl
loopne
outsb
cmp
mov
or
pop
out
fdivrs
das
ds
lock
add
sbbb
xchg
hlt
in
adc
cs
mov
add
arpl
mov
dec
mov
sub
mov
mov
and
or
cli
pusha
xchg
add
stc
mov
xor
sahf
pop
xor
add
add
dec
jge
out
and
mov
jnp
xchg
aam
pop
cs
out
mov
pop
push
sbb
in
mov
push
insl
xor
icebp
pop
xchg
dec
mov
fcoml
pushf
jl
cltd
mov
jmp
xchg
push
and
rcll
pop
lea
jecxz
lret
or
int
cli
enter
push
pop
push
test
mov
adc
ret
loopne
outsb
push
pop
mov
int
sbb
int3
adc
xchg
cmpsb
mov
fucom
push
movsb
cmpsl
inc
scas
mov
xor
pop
ja
lcall
mov
jecxz
imul
xor
cmp
lods
or
stos
sub
rcr
pop
stc
pop
lock
in
jle
xchg
inc
inc
dec
movsb
lret
xchg
pop
or
mov
gs
movsb
mov
and
sbbl
icebp
test
jae
mov
add
inc
cmc
push
mov
test
mov
cwtl
stc
daa
jmp
add
out
cs
xor
push
dec
or
jge
pop
add
mov
xor
arpl
clc
in
add
or
and
jns
sbb
pop
jecxz
clc
fidivrl
std
pop
leave
or
fcomps
add
pusha
mov
test
lcall
add
jnp
pusha
aam
xchg
xor
mov
mov
mov
jno
sub
or
pop
nop
push
js
adc
test
nop
fwait
and
lods
jnp
fmulp
jg
dec
rcll
cmp
enter
fstpt
jle
scas
cmp
addl
lahf
or
sub
mov
xchg
popa
sbb
in
sbb
push
xchg
imul
or
shrl
mov
xor
inc
out
bnd
xchg
push
xchg
sbb
inc
testl
enter
addr16
mov
push
fimuls
movsl
add
add
add
repz
and
mov
or
std
movb
push
fdivp
or
in
sbb
test
cmpsl
jmp
add
aaa
dec
push
decl
cmp
xlat
xchg
out
rcrb
idivb
xchg
push
adc
test
xor
cmp
cmpsl
add
jo
cld
js
int3
adc
es
dec
pop
adc
ret
jp
sahf
cmc
lret
dec
pop
sbb
subl
xchg
pop
xchg
fwait
imul
test
or
xor
shr
loope
jl
inc
jo
xor
push
adc
sub
jns
mov
mov
ss
push
mov
repz
sbb
in
popf
jp
mov
mov
or
icebp
xor
push
cld
lock
mov
cli
push
ds
lods
sbb
and
je
cmpsl
and
push
dec
testb
jle
sub
inc
inc
in
sub
push
icebp
dec
stos
xor
xchg
into
dec
pop
fucomip
pusha
mov
cltd
pop
mov
imul
lahf
stc
push
sahf
ret
movsb
cmp
rcll
inc
add
add
and
cltd
mov
or
aaa
or
add
sbb
mov
js
or
sbb
mov
int
mov
push
inc
fisubl
in
arpl
mov
cmp
call
jne
pop
push
inc
dec
in
mov
das
call
jns
sub
ret
test
repnz
xchg
out
sub
iret
mov
add
jo
cmc
enter
adc
aaa
dec
pop
rcrl
repz
jecxz
shll
pop
add
cld
or
dec
ret
dec
in
mov
movsl
in
and
xchg
enter
xchg
test
ja
add
loop
daa
cltd
push
nop
push
rolb
out
mov
and
test
add
xchg
imull
mov
popf
pop
cld
or
xchg
push
pop
out
pop
mov
outsl
mov
lds
push
and
xchg
push
dec
or
cmp
lret
push
pop
push
xchg
rcrl
imul
mov
mov
and
in
shrl
push
sub
lret
add
in
sti
scas
and
and
xchg
mov
pop
push
stos
pop
orl
mov
push
mov
fdivr
addl
fisttpl
into
lods
inc
xchg
mov
xor
sbb
lds
push
jg
mov
inc
imul
das
fdivr
add
pop
data16
sub
pop
in
sbb
push
push
dec
mov
push
xor
flds
ret
mov
aas
push
stos
push
xchg
out
shrb
lds
cs
cwtl
xorb
fsubs
mov
loopne
cwtl
dec
test
call
lcall
xchg
subb
punpckhwd
add
push
fwait
inc
rclb
jle
xchg
mov
xor
out
clc
fwait
cmpsl
xchg
adc
jmp
int3
ret
mov
outsb
mov
scas
inc
lock
insl
dec
xchg
push
mov
jno
mov
xor
jle
sub
sbb
ljmp
movsb
pop
xchg
cltd
adc
cmpsl
clc
lret
push
ds
push
addr16
or
out
cs
testb
pop
pop
cld
pop
inc
sub
adc
xor
sbb
sahf
les
out
lock
jp
adc
clc
dec
push
inc
rorb
jnp
rorb
cs
push
test
mov
test
mov
sbb
xchg
js
push
mov
fucomip
std
cltd
arpl
pop
ret
mov
cltd
jge
or
arpl
inc
in
mull
rorb
and
lods
sbb
xor
inc
xchg
lods
sti
dec
or
jl
and
mov
imul
cmp
shlb
xchg
lret
and
in
and
aad
inc
fdivs
add
push
in
movsl
xlat
adc
and
jp
popf
add
inc
jp
mov
fsubrp
rcll
and
mov
hlt
addr16
adc
xlat
add
fidivl
mov
fimuls
bnd
ret
xchg
bnd
dec
xor
xor
js
rclb
fiadds
ffreep
iret
leave
jbe
scas
insb
retw
sbb
dec
popf
orb
daa
pusha
jo
mov
in
mov
jno
xor
stos
mov
mov
pop
iret
mov
push
mov
repz
mov
insl
inc
lcall
inc
mov
ficompl
pop
push
dec
pop
shll
cld
lds
sbb
push
mov
ja
mov
cwtl
int3
pop
jl
movsl
jnp
push
fsubl
call
icebp
inc
jae
mov
rorl
or
and
or
aas
fldl
inc
add
je
fstpl
aam
xchg
loopne
cmp
inc
mov
mov
fchs
scas
sahf
fcomps
ror
inc
aam
pop
cltd
clc
push
adc
and
ja
jae
inc
sbb
lahf
pop
ljmp
addr16
repz
and
mov
divl
cmp
dec
sub
movsl
cmp
sub
stos
mov
xchg
xchg
aam
xchg
in
out
add
shlb
das
imulb
int
imul
mov
pop
test
cli
out
mov
insl
sub
sub
outsb
cs
idivb
xchg
mov
rolb
push
dec
cmp
je
dec
out
in
idivl
push
in
test
lcall
rcll
or
loopne
in
nop
xor
ja
fstpl
adc
scas
jb
ficompl
jno
pop
hlt
nop
ret
inc
mov
das
int3
mov
movsb
jne
loop
lds
mov
sbb
cli
push
sbb
ret
ljmp
hlt
lock
int3
rcrl
aaa
sbbl
loope
dec
jo
int
pop
mov
mov
lea
xor
jb
addl
outsl
lods
sbb
bnd
and
mov
in
jp
mov
cwtl
stc
stc
inc
stc
cmp
sub
sub
ss
enter
push
add
or
push
sub
cli
add
jmp
sbb
ret
fbstp
out
xor
push
test
iret
adc
inc
dec
or
imul
mov
jne,pn
icebp
add
nop
adc
sbb
push
xchg
mov
lock
mov
and
aaa
sbb
inc
xchg
enter
inc
push
pop
adc
gs
mov
or
mov
sub
rcl
push
in
loope
pop
mov
pop
insl
xchg
test
ljmp
dec
dec
and
xorb
lods
ja
add
add
cmp
popf
lcall
and
mov
std
fbld
xor
dec
xchg
xor
in
pop
loopne
das
cmpsb
outsl
mov
sahf
test
inc
repnz
cli
lret
stos
dec
call
imul
or
pmuludq
dec
sahf
cld
in
dec
add
sahf
dec
adc
mov
arpl
xchg
js
cli
loopne
out
sbb
mov
jae
cmp
xor
mov
out
sbb
cmc
popf
xor
mov
repz
add
loop
jp
or
dec
push
popl
das
pop
jns
cmp
out
push
mov
mov
mov
inc
adc
stc
in
dec
xchg
mov
pop
or
test
ret
jecxz
sub
rclb
test
dec
cmp
pop
jnp
aam
lods
fwait
pop
adc
lret
ret
fmuls
pop
add
jns
cmp
int3
pop
gs
idivl
push
dec
fwait
das
mov
loope
jg
jb
and
insl
or
outsl
adc
jne
hlt
xchg
push
mov
push
jno
imul
mov
xchg
test
jne
mov
insl
js
mov
hlt
lods
clc
aaa
in
scas
jno
cmp
repnz
scas
popa
xchg
sub
push
outsb
dec
sub
loopne
xlat
jp
pop
test
into
and
daa
and
std
dec
xchg
pop
insb
dec
pop
mov
arpl
jns
mov
jle
and
movsb
addr16
cs
mov
sub
subl
lods
push
jno
mov
jp
or
addl
pop
mov
xchg
or
movsb
cwtl
adc
subl
xlat
jae
cmp
arpl
lahf
mov
inc
mov
pop
push
adc
and
cmc
scas
sub
push
dec
jb
pop
push
insl
test
je
int3
jae
loop
aaa
aad
repnz
add
clc
push
pusha
mov
lcall
cmp
shll
jmp
and
lods
rcl
je
int
lods
mov
sbb
dec
adc
xchg
adc
icebp
jle,pn
aam
sar
mov
push
rcrl
out
xor
inc
mov
fdivl
pop
je
xchg
movnti
scas
xchg
mov
and
fdivr
mov
jecxz
push
xchg
adc
cwtl
sub
jae,pt
cmp
adc
jg
movsb
lods
inc
cmpsl
in
std
inc
xchg
in
add
ja
sbb
adc
ds
pop
sbb
jmp
adc
stc
in
pop
test
adc
inc
ljmp
inc
xchg
push
and
xor
sub
mov
dec
and
xchg
shr
shrl
sub
mov
inc
sbb
cwtl
mov
enter
cltd
jg
mov
inc
insb
popa
sub
popa
push
mov
lret
scas
fildl
jg
or
sti
in
orl
mov
enter
aas
add
mov
mov
pop
int
cld
or
adc
ret
pop
or
popl
and
pushf
push
les
imul
add
ficompl
jb
push
pushf
in
loope
stos
adc
jp
or
cmp
xor
cmp
ds
out
mov
xchg
shll
es
mov
testb
fs
lcallw
push
xchg
movb
xchg
rcll
call
mov
add
jb
push
mov
sbb
dec
inc
cmp
jbe
mov
jp
or
sbb
mov
adc
int
cli
out
xor
jnp
push
add
andb
int
int3
xchg
icebp
cmp
cmp
cmp
xchg
not
jmp
lods
scas
fistpl
push
test
xor
xchg
or
xchg
sub
jmp
enter
dec
sub
in
dec
mov
insl
mov
push
sbb
std
mov
sbb
dec
aad
insb
fcompl
add
inc
mov
cli
mov
insl
aam
fisubrs
cmp
les
movsb
dec
mov
subb
inc
push
call
mov
rorl
cmp
and
sbbb
enter
cmp
loop
push
and
mov
in
jae
push
push
inc
cmp
clc
push
cmpb
test
sbb
push
cmp
sub
xor
rcrl
mov
adc
fnstcw
mov
bound
ret
mov
and
pop
jmp
pop
dec
inc
loope
std
jl
add
jns
jno
fdivrl
dec
in
sbb
add
push
jb
out
pop
jmp
rorl
test
jecxz
cmp
cld
xor
sub
imul
scas
mov
jp
cs
lods
adc
lds
pop
js
sub
mov
adc
clc
jns
lods
inc
fneni(8087
stos
nop
jne
mov
out
addb
test
es
dec
jecxz
loope
lcall
jno
lcall
push
das
pop
dec
das
sub
sbb
jae
shlb
xchg
insb
fsts
jg
imul
mov
push
xor
loopne
xchg
mov
jnp
arpl
inc
fsts
xor
cs
pusha
mov
mov
in
sub
int
rcr
or
sbb
scas
repnz
cwtl
scas
dec
or
in
mov
pusha
push
outsb
mov
cmc
aam
shlb
andl
scas
sbb
cmp
int
add
into
adc
test
js
jae
cmpsl
sub
push
sti
gs
add
jbe
fnstsw
bnd
cmc
or
ret
pusha
inc
adc
fisttpll
xor
sbb
out
xchg
outsl
cli
mov
push
or
out
out
xor
andl
bound
xor
push
cmp
sub
dec
jb
mov
daa
js
bound
sbb
aas
add
sub
cs
mov
rorl
mulb
jo
jg
mov
orps
out
push
cmpsl
arpl
idivb
jg
add
das
lods
mov
sbb
xchg
fs
std
ss
loop
push
inc
mov
sbb
dec
test
jle
enter
or
out
inc
loope
jae
pop
sbb
xor
pop
outsb
or
lcall
out
mov
cli
sbb
notb
cmp
cmp
lret
pop
or
out
mov
xchg
push
sub
adc
pop
mov
mov
pop
or
aad
add
stos
mov
shlb
push
loope
es
test
or
outsb
jmp
jmp
cmpb
push
cmp
scas
cmp
xor
lock
jne
push
notb
dec
in
push
test
lds
mov
pop
xchg
arpl
jnp
mov
lock
cs
xor
xchg
mov
inc
and
cmp
push
jle
inc
in
test
int3
mul
push
mov
arpl
in
in
sar
lret
push
rcll
sub
fisttps
and
outsb
xor
ss
fyl2xp1
xchg
add
popf
pushf
arpl
add
hlt
icebp
dec
xlat
xchg
int
fldenv
push
stc
inc
adc
outsl
rclb
pop
push
into
xchg
dec
cmpsb
cmpsb
popf
imul
jg
clc
mov
js
test
scas
push
xchg
vpshuflw
mov
mov
pop
adc
push
or
in
outsl
jl
dec
jl
or
sbb
xchg
mov
adc
pushf
jb
fisubrl
inc
adc
stc
pop
pop
xchg
xlat
stc
dec
test
ds
or
jno
filds
es
inc
push
sbbl
mov
mov
sti
cli
icebp
test
fadds
sti
test
jae
xor
mov
mov
mov
clc
jns
jne
lret
lret
or
out
or
pop
aas
cmp
lahf
popf
inc
inc
jp
frstor
outsb
mov
pop
mov
aad
xchg
js
test
pop
cld
dec
les
and
mov
sti
shl
sbb
les
ljmp
pop
dec
lea
and
or
cld
jne
popa
int
or
jno
dec
lcall
fsubrs
rcll
jns
inc
cmp
popa
sub
add
sbb
mov
cwtl
mov
xlat
cmpsb
insl
mov
xor
push
and
push
mov
dec
sub
xchg
pop
out
jns
jne
xchg
mov
cmp
mov
mov
ja
push
aas
mov
sarb
nop
cmpsb
pop
ret
pop
jmp
adc
andb
imul
inc
mov
daa
inc
mov
sub
es
sti
dec
fs
shll
push
sbb
rcll
clc
aaa
add
sub
push
out
sub
lahf
into
push
push
cltd
push
dec
data16
lret
add
mov
sub
test
popa
lcall
scas
add
push
mov
push
dec
lcall
in
repnz
loope
ficomps
leave
pop
dec
dec
jmp
xchg
fcoml
sub
cli
fucomip
xor
jno
sbbb
sub
fwait
data16
test
out
addr16
and
imul
lds
xor
orb
stos
imul
cltd
jg
pop
ret
cwtl
sub
inc
mov
cli
mov
mov
sub
aaa
arpl
ffreep
stc
enter
lahf
mov
dec
push
popf
mov
inc
aad
cmp
xchg
pop
jl
cmpsb
imul
adc
cmp
lock
dec
out
fsts
mov
test
into
push
rorb
adc
outsb
leave
pop
jne
sahf
mov
lcall
bound
xchg
xor
pop
rcll
cmpsb
mov
sbb
and
cmp
add
in
xchg
sti
xor
outsl
aas
cmp
push
ja
cmpsb
ds
xchg
jge
clc
pop
mov
popa
insl
bound
lahf
mov
inc
xor
jg
std
cli
pop
inc
std
das
xchg
cmpb
stos
addr16
insl
lss
push
ss
inc
ficomps
mov
mov
mov
enter
pop
inc
or
adc
pop
pop
push
into
enter
mov
call
or
fists
sbb
add
xchg
or
out
mov
xchg
add
pop
ds
mov
pop
adc
and
test
mov
jecxz
mov
out
sub
add
pop
das
jmp
and
mov
pop
lret
pop
leave
imul
cmp
stos
sub
loop
jae
fisubl
cmpb
sub
dec
shrl
mov
mov
mov
lds
push
shlb
cmp
ret
push
dec
ja
jbe
ret
sub
mov
cmpsl
fcmovu
mov
lcall
shlb
xchg
cmc
arpl
jmp
leave
sub
dec
pop
jmp
push
stc
jecxz
and
sub
fildll
xchg
pop
jg
push
enter
or
xchg
ss
aas
stos
out
clc
mov
leave
das
xchg
mov
outsl
cmp
iret
jb
orb
add
js,pt
inc
add
lods
imul
daa
mov
pop
mov
adc
call
nop
adc
test
sarl
ja
repnz
cmp
into
roll
addr16
push
dec
sbb
lret
out
cmpb
xchg
mov
out
xchg
rorl
cltd
inc
or
cmp
stos
cmpsb
das
pop
mov
jnp
mov
in
cltd
lahf
and
imulb
inc
fs
mov
sub
movsl
int3
fnsetpm(287
adc
xor
push
repnz
jnp
sbb
repnz
je
pop
or
aam
sbb
xor
cmpsb
jle
pushf
out
cmpl
fwait
jmp
lahf
pop
xchg
loope
and
mov
imul
setno
xlat
pop
pop
jp
lds
xchg
addl
cmp
adc
out
icebp
test
icebp
xor
lcall
enter
inc
outsl
hlt
sub
jl
ficoml
pop
xor
subl
xorl
inc
jle
mov
xchg
adc
lret
lods
js
push
insb
or
shl
pcmpgtw
outsl
int3
leave
xchg
or
mov
mov
mov
fidivl
shl
pop
inc
xchg
or
sub
movsl
mov
sahf
shrb
pop
arpl
mov
jbe
loopne
mov
mov
push
fcomps
loope
rcr
out
mov
imul
aas
dec
ror
pop
mov
lret
push
cmp
and
xchg
sbb
das
out
dec
pushf
movl
inc
jle
outsb
cltd
notl
mov
sub
xor
mov
add
jne
pop
mov
stos
pop
push
mov
das
fucomp
add
mov
mov
dec
dec
stc
bound
xor
daa
nop
or
cwtl
rcrl
jnp
pusha
jno
push
dec
or
xchg
or
xlat
jg
scas
rcl
xchg
mov
adc
cmc
les
or
xchg
cli
imul
in
jns
ret
xor
fbld
adc
js
jbe
hlt
jp
inc
mov
daa
shrb
in
ret
popa
add
jne
lcall
pop
loop
in
push
dec
sub
loop
sub
xor
inc
in
shrl
xchg
scas
mov
push
ret
jl
call
sub
stos
or
das
and
mov
mov
inc
mov
mov
clc
aam
mov
push
adc
insl
dec
test
andb
add
dec
xorb
mov
jmp
xor
or
gs
test
mov
xchg
int
cmpsl
in
and
jnp
xorb
cmpb
jg
sub
out
fwait
mov
push
cmpsb
xchg
jne
push
jbe
and
out
jge
cli
hlt
pop
dec
sbb
js
mov
das
mov
sbb
pop
push
xchg
pop
add
imul
repnz
cwtl
cmpsb
fcmovbe
ja
add
sub
ret
add
repz
mov
jl
or
sub
xchg
xor
sbb
repnz
dec
pop
dec
cltd
and
imul
pcmpeqd
adc
inc
gs
sub
popa
stos
imul
scas
pop
adc
mov
fwait
loopne
clc
clc
and
repnz
movsb
mov
dec
loopne
xor
sahf
push
je
xchg
inc
in
movsb
sbb
divb
xchg
scas
jp
push
jg
mov
pop
sub
mov
dec
pop
ljmp
icebp
sbb
and
add
popf
push
mov
cmpsl
push
cmp
pop
cmp
lods
addr16
pop
mov
outsl
push
sub
sbb
nop
cmpsb
mov
push
or
mov
or
xor
pop
jns
fisttpl
xor
cmp
imul
push
les
fstl
test
inc
jo
les
bound
or
rcll
mov
xor
mov
pop
stos
stos
int
lods
cmp
jo
mov
and
pusha
push
add
add
add
add
shrl
out
lock
decl
xlat
pop
sarl
mov
fmul
mov
nop
lds
vpacksswb
sub
sub
mov
andb
cli
lret
addr16
mov
mov
cli
cltd
repnz
cmc
addr16
fcmovnu
sbb
fwait
jp
sbb
push
jnp
shlb
rcr
mov
inc
cwtl
inc
stos
jbe
mov
cmp
cwtl
mov
rorl
inc
mov
mov
cmp
fcoms
fs
pop
stos
or
sbb
pop
lret
inc
sbb
xor
xchg
cmp
cmp
xchg
or
fwait
scas
xchg
sbb
pop
mov
out
int3
inc
fisubrl
push
sub
jno
fimull
sub
push
adc
cmp
or
inc
imul
cwtl
jb
clc
loopne
mov
ss
fcoml
push
dec
fldenv
or
fmul
sbb
int3
fmull
xor
and
inc
push
jl
push
mov
sub
dec
push
call
dec
push
xlat
fsts
xchg
int3
lods
leave
push
or
push
sbb
push
cltd
std
aad
and
sub
xor
fisttps
testb
adc
shl
lret
adc
mov
hlt
mov
sahf
repnz
jae
mov
xchg
cmp
sbb
std
popf
dec
sbbl
push
pop
int3
or
mov
in
imul
sub
aaa
test
dec
stos
je
ljmp
cld
ss
dec
sub
outsb
inc
sahf
lret
xor
adc
aas
mov
jp
stc
jne
aam
cmc
mov
add
pop
stc
cmp
pop
repnz
das
inc
or
ljmp
imul
loop
push
xchg
push
jp
jmp
cmpl
sub
fwait
mov
adc
add
add
jb
adc
add
add
add
add
add
add
add
inc
add
adcb
add
sub
add
jb
adc
add
add
add
add
add
add
add
addb
add
jb
adc
add
add
add
add
add
add
add
addb
add
jb
adc
add
add
add
add
jne
add
jne
add
add
push
add
xorb
xorb
add
or
add
lock
cmpb
add
fadds
add
rolb
cmpb
add
test
add
nop
add
cmpb
cmpb
add
dec
add
cmpb
add
xor
add
sbb
add
jb
adc
add
add
add
add
add
cwtl
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
jb
adc
add
add
add
add
add
add
add
add
add
jb
adc
add
add
add
add
add
add
add
add
add
jb
adc
add
add
add
add
add
add
add
add
add
jb
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
sub
add
mov
add
add
add
inc
das
cmp
call
add
add
add
add
xor
add
add
mov
add
add
add
nop
xor
add
add
add
add
add
cmp
test
add
mov
add
add
add
rorb
test
add
mov
add
add
add
push
inc
add
mov
add
add
add
nop
mov
add
add
add
add
add
or
add
add
add
add
add
lahf
cmp
sub
add
mov
add
add
add
call
add
add
add
add
push
lods
cmp
enter
mov
add
add
add
sbb
add
add
add
mov
add
mov
add
add
add
push
add
add
add
add
add
add
add
add
cmp
call
add
add
add
add
cmp
push
add
add
and
add
lret
jg
in
jo
lock
jae
pushaw
xor
xor
fidivrl
sbb
push
out
pcmpgtw
clc
sub
jle
push
outsl
pop
add
sarl
cmp
clc
xchg
cmp
and
pushf
adc
or
pop
scas
test
daa
loopne
lret
daa
xchg
push
andl
lret
lret
add
cmp
add
cmc
xlat
scas
and
out
insl
mov
pusha
test
aam
pop
mov
mov
pop
pop
xlat
adc
lock
addr16
clc
xchg
or
jmp
sbbb
xchg
repnz
pop
mov
insl
mov
loop
jb
xor
adc
pusha
xchg
iret
and
clc
add
in
and
xchg
icebp
popa
mov
mov
jge
lss
and
sub
loope
es
jbe
dec
jno
enter
jmp
ljmp
clc
out
ja
inc
add
xchg
in
xor
idivl
push
cmc
je
sar
mov
xchg
mov
mov
enter
mov
pusha
jae
dec
xchg
fadd
jecxz
add
jp
mov
jo
mov
stos
cmc
ficoml
xchg
push
insl
jge
jb
mov
imul
adc
cmp
aad
mov
lret
sub
test
aas
cltd
jg
cmpsb
sub
lea
fstpl
arpl
dec
xchg
jbe
sub
mov
iret
dec
xchg
aad
fs
test
pusha
mov
insl
cs
xchg
mov
test
push
mov
jae
rolb
sbb
adc
fmuls
leave
pop
mov
outsb
jl
cmp
mov
rorl
fwait
lahf
jl
pop
sub
mov
pop
data16
mov
xor
mov
xchg
add
ss
aaa
mov
jle
dec
add
mov
cmpsl
imul
movsb
add
xchg
stc
cwtl
dec
push
aam
int
jge,pt
dec
xor
sbb
xchg
mov
scas
clc
xchg
dec
and
mov
push
or
into
scas
push
orl
and
mov
cmp
aas
jae
sub
ljmp
sub
imul
mov
subl
das
jmp
les
lock
fwait
negb
lea
popa
sbb
int3
pop
xor
push
lock
cs
adc
divb
cmpsb
clc
cmp
lock
fcompl
test
jnp
xchg
inc
and
pop
call
icebp
movsbl
xorb
ss
repz
ret
roll
inc
scas
sub
dec
sub
add
inc
lds
into
add
jo
mov
xchg
lret
inc
lret
icebp
mov
data16
add
add
pop
idivb
cwtl
push
mov
xchg
sbb
sub
xor
xchg
adc
sarl
or
je
mov
lods
dec
pop
mov
dec
and
iret
mov
inc
aam
xor
daa
orb
jg
pop
addb
insb
out
subb
mov
push
mov
and
fstps
adc
sahf
mov
imul
jbe
enter
lds
mov
add
jmp
or
xchg
test
push
jg
mov
jp
out
dec
mov
addr16
dec
xchg
push
xchg
pop
mul
lret
sbb
popa
lods
push
adc
mov
jle
mov
pshufw
lcall
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
adc
call
add
addl
jle
sub
ja
push
mov
pop
pop
jmp
pop
gs
dec
loope
hlt
sbb
fidivrs
add
sub
mov
pushl
xor
pop
mov
add
adc
add
movswl
sub
jmp
out
sbb
cli
stos
or
push
and
add
add
fwait
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
or
add
addr16
mov
cmpb
ljmp
push
sbb
pop
pop
dec
dec
push
mov
pop
cmp
jne
movzwl
jmp
shll
aaa
movsb
or
push
das
cmp
mov
jmp
aam
jb
inc
jns
pop
insb
xor
mov
dec
in
int3
out
pop
shrb
cmpsb
add
dec
pop
ret
push
lahf
dec
test
iret
mov
push
jg
xor
inc
outsl
popl
psrld
sahf
addl
aad
push
dec
in
mov
mov
enter
dec
push
pop
dec
movsb
outsb
mov
mov
mov
rclb
in
fistl
and
pusha
inc
dec
aas
into
ficoml
pop
lret
cmpsl
xor
int
dec
pop
push
push
subl
imul
jb
push
dec
in
mov
dec
in
int3
mov
fcoms
outsb
ficoml
push
lods
pop
xor
inc
mov
mov
fcmovbe
pushf
mov
dec
xchg
and
xor
push
out
addr16
movsb
lods
cmpsl
dec
and
out
das
jae
adc
pop
push
pop
pop
mov
cs
test
xorl
lahf
inc
into
inc
stos
mov
jbe
lock
repz
call
insl
sbb
sahf
ss
ljmp
cmpsb
jmp
addr16
jnp
adc
cs
sbb
faddl
mov
pushf
sbb
push
insb
pusha
scas
jl
and
pop
push
add
jbe
fs
gs
rcl
adcl
es
roll
mov
repz
cmp
in
pop
out
push
dec
sub
xchg
addr16
and
sahf
loop
repz
sub
addr16
sbb
je
insb
mov
push
mov
push
and
pop
mov
and
fadd
popf
in
cs
addr16
insl
lret
add
sub
in
add
jno
push
sbb
jmp
or
repz
iret
and
movsl
ret
cmp
pop
hlt
into
cli
add
sub
addr16
cltd
sbb
mov
lret
cmp
adc
cmp
cmpsb
in
imul
shrl
mov
cltd
push
out
and
xchg
jg
jg
and
bound
mov
inc
imul
lret
mov
adc
inc
jnp
dec
jns
add
dec
decl
ljmp
push
push
ja
aaa
lea
std
mov
cli
imul
inc
in
push
sarb
sbb
ret
cmp
cmpsb
lock
adc
push
fisttps
movsb
mov
xchg
mov
mov
mov
pop
push
inc
sbbl
stos
mov
add
inc
sbb
ret
in
and
inc
in
dec
jecxz
pusha
stos
xchg
pusha
mov
pop
add
inc
sbb
stos
fdiv
pop
push
inc
in
imul
inc
popa
or
popa
or
fstl
fs
mov
pop
lret
inc
insl
cwtl
pop
or
jge
fwait
dec
cld
adc
dec
popa
or
ret
inc
jno
push
cmpsb
and
lock
hlt
pop
out
mov
popa
les
inc
pusha
rorb
popa
or
inc
popa
or
mov
or
push
inc
popa
or
jnp
push
inc
mov
cs
pop
or
sahf
rcll
or
jbe
push
inc
xchg
or
or
mov
shll
test
stc
inc
popa
mov
push
mov
sub
or
mov
push
push
inc
testb
jecxz
dec
inc
popa
mov
dec
mov
popa
mov
cs
popa
or
xorl
std
pop
or
data16
inc
cld
test
jl
lcall
loope
push
lds
inc
popa
or
cmc
dec
outsl
dec
je
adc
or
cmp
mov
xchg
cld
jno
or
mov
roll
cs
popa
or
test
int
or
movsb
and
inc
cmp
push
mov
cmp
inc
iret
lret
sbb
popa
pop
mov
xchg
or
cmp
fstps
push
inc
xchg
or
or
push
inc
popa
or
inc
popa
or
popa
or
cld
xor
dec
mov
fisubs
popl
xchg
dec
mov
xchg
cmp
xchg
and
inc
mov
dec
push
inc
das
xchg
dec
mov
jno
cld
inc
popa
or
xchg
and
inc
mov
or
call
jae
dec
add
imull
push
das
outsl
push
inc
das
xchg
dec
mov
jne
fwait
aaa
mov
mov
mov
or
pop
fcompl
push
das
outsl
push
inc
das
xchg
dec
mov
xchg
inc
lret
pop
lea
pop
or
pop
fcompl
push
das
outsl
adc
xchg
dec
mov
xchg
inc
jl
push
cmpsl
xor
push
sub
ja
ret
pop
daa
or
or
arpl
sti
fcompl
push
das
mov
push
inc
xchg
jae
inc
bound
push
hlt
jo
jl
push
cmpsl
xor
or
mov
mov
adc
adc
pop
push
inc
cld
pop
mov
sbb
adc
mov
adc
adc
or
mov
cmp
mov
dec
inc
popa
or
cld
pop
push
inc
or
popa
and
pop
or
popa
or
fists
mov
adc
popa
mov
xchg
lods
fs
mov
popa
xchg
cmc
push
or
sub
dec
inc
popa
mov
dec
inc
popa
inc
inc
inc
popa
or
lds
lret
lods
pop
lea
in
stos
ret
push
jnp
push
inc
cld
push
jbe
aaa
xchg
imul
pop
jmp
dec
dec
lods
cmp
and
jbe
cmp
cs
mov
iret
push
add
or
dec
or
mov
mov
pop
loopne
inc
push
bnd
fwait
push
dec
cmp
inc
fwait
aaa
fidivrs
shlb
sti
xchg
cmp
pop
hlt
mov
sbb
fs
mov
push
dec
cmp
inc
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
popa
or
loope
push
cli
or
popf
mov
and
popa
or
popa
or
inc
popa
or
popa
or
mov
pop
inc
popa
or
popa
or
popa
or
popa
or
mov
int3
dec
inc
loop
lret
into
and
aam
jmp
pop
mov
pop
out
int
inc
mov
push
jl
gs
fnsave
or
dec
sub
or
fwait
pop
fiaddl
mov
sbb
add
mov
cmp
jbe
or
inc
fstpl
aaa
jecxz
add
or
scas
adc
shll
or
lods
lock
cmc
mov
clc
sub
push
cs
out
mov
pop
mov
dec
out
loopne
push
or
push
cmp
add
fadds
cmpsl
cli
loope
push
std
ss
dec
add
cltd
into
xchg
sbb
shlb
jp
ret
lods
ret
outsl
and
cmc
sub
push
shlb
int3
dec
mov
aam
pop
pushf
gs
push
and
nop
mov
shrl
cmp
adc
aas
repnz
xchg
pop
sbbl
int3
push
jmp
sbb
int
cmp
mov
pusha
lods
out
push
insl
popa
sahf
cmc
and
cmpsb
divl
cltd
repz
loopne
pop
inc
pop
cmpsl
and
sbb
in
loope
jmp
inc
jne
pop
subl
lock
enter
push
xchg
fisttpll
push
push
shlb
in
insb
sbb
out
xchg
scas
xchg
jbe
iret
mov
loop
test
jmp
and
mov
divb
arpl
cmp
lea
pushf
pusha
mov
int3
dec
stos
das
aad
aam
lahf
jb
insl
pop
aad
pop
mov
cmp
adcb
aam
js
decb
mov
mov
and
in
or
ss
xor
and
pop
ficomps
push
ss
arpl
movsl
jmp
mov
daa
fs
lahf
sub
sub
xchg
inc
pop
fcoms
mov
bswap
dec
popa
sbb
popa
or
dec
push
inc
jo
es
arpl
je
adc
cmp
js
xchg
inc
scas
leave
jne
fsubp
or
push
add
jg
icebp
dec
push
notl
fsts
insw
hlt
and
mov
xchg
lcall
loope
add
mov
jb
mov
leave
sub
mov
out
mov
dec
xor
aas
outsl
scas
dec
push
add
pop
inc
das
xchg
fsubl
mov
mov
mov
dec
xor
iret
mov
mov
xor
xor
cs
mov
or
jnp
sub
jb
inc
mov
ss
or
rcll
inc
dec
shl
cmp
test
xchg
push
or
call
stos
test
inc
imul
add
sbb
scas
out
call
outsb
ljmp
add
add
add
or
add
adc
sub
add
sub
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sub
add
sub
add
cmp
mov
sub
add
sub
add
sub
add
jbe
jbe
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
sub
add
add
add
sub
add
add
add
sub
add
add
pop
pop
jbe
popa
push
popa
jb
jae
inc
je
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
jl
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
pop
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
insl
add
imul
jb
popa
add
add
jae
add
xor
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
push
or
dec
dec
jb
sahf
mov
push
mov
add
sub
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
or
dec
dec
jb
sahf
mov
push
mov
add
inc
add
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
push
or
dec
dec
jb
sahf
mov
push
mov
add
js
add
add
add
add
add
xor
add
add
push
jne
and
add
add
call
jne
sbb
add
add
call
jne
adc
add
add
sub
add
xor
xor
add
add
or
test
add
xor
add
add
add
jne
sbb
add
add
add
push
add
aaa
jne
adc
add
add
add
add
cmp
addb
add
and
sub
add
cmp
pusha
add
add
and
test
add
cmp
dec
add
add
and
mov
cmp
inc
add
add
and
sub
add
add
and
test
add
cmp
add
add
add
jne
sbb
add
add
add
jne
adc
add
add
add
add
inc
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
adc
and
add
add
add
adc
add
and
sbbl
pushl
insb
cs
add
add
add
add
add
add
xor
sbb
xchg
push
not
mov
inc
call
mov
inc
aad
dec
pop
jns
aas
pop
shll
fsubrs
push
call
test
call
mov
dec
mov
mov
scas
outsb
cld
fdivl
push
fidivrs
addr16
fidivl
dec
fsubrs
add
stos
gs
fistpll
cmpl
loop
jge
loope
jl
loope
xchg
fisubrl
pop
push
enter
les
mov
out
xchg
leave
xchg
push
add
add
shlb
jmp
ret
test
add
add
mov
insb
fnsave
data16
add
add
add
lret
mov
adc
test
out
xchg
jmp
int3
cwtl
ret
add
scas
xchg
pop
inc
stos
jb
ljmp
fwait
add
add
mov
pop
lretw
jmp
enter
ret
test
add
add
lods
jns
in
mov
out
xchg
fadd
mov
movsl
in
xlat
lods
jmp
cmpsb
jmp
int3
popf
mov
stos
js
loopne
jmp
leave
xchg
stc
call
add
add
mov
test
out
xchg
call
rcrb
ljmp
ljmp
call
iret
pushf
movb
add
xlat
rclb
out
xchg
call
shll
ljmp
ljmp
jmp
shlb
fcmovnb
fwait
jle
les
jmp
shlb
out
mov
jmp
cmpsl
jmp
cmpsb
ljmp
dec
loopne
lahf
pop
loope
xchg
ljmp
in
xlat
scas
repz
mov
out
cmpsl
pop
jmp
lods
in
lods
in
xlat
lods
cld
out
add
leave
fwait
xor
enter
lods
in
fdivs
push
in
lahf
cmpsb
jmp
fnstenv
iret
loope
lcall
fidivl
ja
add
add
les
fsubrp
fnstenv
nop
loopne
xchg
iret
in
fnstenv
add
mov
cmp
mov
scas
dec
clc
aas
add
loopne
add
rorb
add
sldt
loopne
add
rolb
add
and
add
add
add
add
add
add
add
add
add
add
add
xchg
add
xchg
add
movl
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
add
add
pop
dec
sub
mov
ficoml
daa
adc
inc
sbb
add
add
add
add
add
add
add
add
adc
jle
outsb
inc
jmp
xchg
inc
call
mov
cmp
repz
jp
xor
add
add
add
or
add
adc
add
add
xchg
jle
in
lds
aas
call
mov
notrack
mov
inc
loope
mov
add
push
or
add
adc
push
dec
movsb
mov
int
pop
call
movsl
inc
cmpsb
dec
call
cmpsb
inc
movsb
inc
aam
inc
shll
inc
enter
or
add
add
addr16
shrb
push
fldcw
fldcw
push
xlat
test
dec
call
mov
dec
stos
xlat
stos
push
add
add
add
jno
fdivs
pop
fdivl
fnsave
push
fdivl
pop
fsubrs
inc
fldcw
add
cmpsb
push
fidivl
fidivrs
ja
loope
jl
loopne
je
loope
jp
loope
jnp
fistpll
addr16
pop
xlat
test
pop
pop
mov
popf
pop
std
fidivl
jne
loope
jp
in
jae
ret
loop
cltd
jge
lret
fwait
jmp
mov
jl
loop
sbbl
fistpll
pop
fldcw
bound
add
add
stos
js
mov
mov
jmp
enter
mov
call
add
add
add
add
mov
cmp
mov
jns
jecxz
test
add
add
ffree
lea
rorb
fnsave
pop
jmp
mov
and
add
add
mov
xor
mov
sahf
call
int
adc
add
add
add
add
mov
arpl
in
xchg
out
xchg
cmc
in
xchg
adc
add
add
add
add
movsb
cmpsl
lret
stos
push
loop
jg
fidivrs
add
leave
mov
adc
test
std
aad
jns
out
xchg
jmp
lret
xchg
cld
jecxz
xchg
add
add
mov
arpl
test
mov
test
jmp
cmpsb
call
add
add
add
add
fwait
pop
jmp
enter
mov
in
mov
add
add
mov
jmp
in
mov
out
xchg
jmp
leave
xchg
in
shlb
jle
loop
popf
ljmp
in
xlat
lods
ljmp
lods
lret
outsl
lods
xchg
pusha
hlt
fdivrs
in
mov
call
add
add
mov
jne
in
xchg
out
nop
jmp
lret
xchg
call
iret
popf
ljmp
jmp
test
jmp
test
ljmp
call
int
jmp
lret
xchg
call
add
add
ret
fwait
mov
in
xchg
out
jmp
lret
xchg
call
rcrb
ljmp
ljmp
ljmp
jmp
iret
popf
jmp
lret
xchg
ljmp
add
lahf
jge
mov
jmp
jmp
leave
xchg
jmp
int3
xchg
call
rcrb
ljmp
ljmp
jmp
movsb
ljmp
jmp
int
jmp
test
add
popf
pop
shll
xchg
out
xchg
call
iret
sahf
jmp
shlb
call
shll
ljmp
ljmp
jmp
stos
and
add
add
enter
mov
lcall
rcrb
ljmp
jmp
stos
mov
jmp
aam
jmp
test
jmp
test
jmp
cmpsl
ljmp
fucomip
lods
add
add
add
lret
ffree
xchg
cli
in
fwait
jmp
shlb
jmp
test
fsubr
aad
adc
shll
cli
jmp
scas
jmp
stos
in
stos
in
aad
jmp
test
movsb
loopne
fwait
add
cwtl
out
int3
pushf
jmp
cmpsl
jmp
test
out
fidivl
out
test
in
fdivs
in
xlat
scas
in
xlat
scas
out
fdivrl
add
xchg
cltd
in
lods
in
xlat
scas
in
fidivl
in
mov
sahf
in
fidivl
out
fidivl
loope
cwtl
mov
in
fnstenv
out
fidivrs
add
les
out
call
in
add
lret
loopne
xchg
out
xchg
out
fdivrl
add
mov
jo
in
fdivs
stos
loopne
xchg
inc
ffreep
mov
jmp
scas
cmpsb
in
fnstenv
aad
outsb
add
scas
push
xlat
jmp
add
add
cmp
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
roll
rol
add
addl
add
add
add
add
add
add
add
add
add
add
add
sbb
add
cmp
add
jl
add
jle
add
pop
add
add
add
add
add
add
add
and
add
add
adcb
add
pop
add
or
or
or
or
or
adc
push
or
sbb
add
add
add
add
add
add
push
add
add
add
add
aas
xor
nop
and
or
add
add
add
add
add
add
add
add
add
add
add
xor
pushf
jg
mov
mov
ds
dec
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
fisubs
lcall
shll
cmp
rcrb
ds
add
add
add
add
add
add
add
add
add
add
add
add
adc
or
jo
fisubrs
mov
notrack
mov
cmp
call
lahf
cmp
shll
dec
add
add
add
add
add
add
add
add
push
sbb
aas
xchg
jge
loop
pushf
imul
aad
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
aam
inc
out
test
sbb
cmp
dec
xor
mov
push
call
cmpsb
dec
call
test
call
test
call
test
call
cmpsl
dec
call
cmpsb
dec
call
movsb
inc
call
mov
cmp
xlat
cmpsl
dec
iret
xlat
test
add
xchg
jl
ds
out
enter
fsubrs
push
fldcw
pop
fldcw
pop
fldcw
push
fsubrs
dec
call
movsl
inc
call
mov
push
mov
stos
push
add
add
add
imul
fldcw
pop
gs
fnsave
fnsave
gs
fdivl
pop
fisubrl
push
call
cmpsl
dec
call
mov
pop
nop
mov
mov
ja
addr16
fidivs
imul
mov
outsb
fistpll
je
loopne
jne
fistpll
imul
mov
fdivl
pop
fsubrs
dec
add
mov
pushf
pop
std
shll
fs
fidivrs
outsl
jmp
mov
xchg
jecxz
xchg
jmp
mov
jnp
jecxz
cmp
fistpll
jp
fistpll
fidivl
push
fsubrs
bound
add
add
push
shrb
push
loope
js
fistpll
nop
aad
lea
add
add
loopne
xchg
in
mov
jmp
mov
jge
loop
jnp
jecxz
xchg
les
mov
into
mov
pop
fldcw
arpl
lds
addr16
movsl
pusha
jmp
mov
mov
in
mov
out
xchg
sbb
add
add
mov
test
fidivrs
jmp
mov
add
add
add
ffreep
mov
faddp
xchg
lods
ffree
fnsave
data16
fnsave
mov
adc
add
add
mov
push
shlb
in
mov
ljmp
ljmp
add
stos
insb
lret
stos
addr16
ret
in
mov
in
mov
shll
cmc
shrb
outsb
jmp
mov
push
cmpsb
enter
ret
inc
test
jmp
mov
jmp
lret
xchg
call
add
add
xchg
push
in
leave
test
fwait
jmp
lret
xchg
fsubp
int3
cwtl
add
mov
pop
ret
mov
ret
out
xchg
jmp
mov
loop
andl
add
add
mov
adc
lods
jge
ret
jmp
les
jmp
int3
xchg
jmp
lret
xchg
lods
mov
test
mov
into
sahf
jmp
test
ljmp
mov
add
add
lea
jecxz
mov
out
xchg
jmp
les
add
add
lret
mov
out
mov
test
out
nop
jmp
lret
xchg
jmp
lret
loope
nop
mov
mov
jno
sarl
movsb
ljmp
in
fdivs
jmp
shll
test
orb
mov
jmp
lret
out
xchg
jmp
mov
call
add
add
mov
addr16
ret
in
mov
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
call
rcrb
jmp
cmpsl
in
aad
in
stos
in
aad
jmp
cmpsb
jmp
rcrb
jmp
int
jmp
int3
xchg
jmp
int3
xchg
jmp
leave
xchg
call
add
add
rclb
fnstsw
xchg
in
mov
out
xchg
call
into
lcall
shll
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
ljmp
jmp
iret
popf
call
int
jmp
leave
xchg
ljmp
add
mov
fidivrl
jmp
enter
lret
out
cwtl
call
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
int
jmp
leave
xchg
in
stos
outsl
fcmovb
mov
call
mov
mov
in
nop
jmp
lret
xchg
call
iret
pushf
jmp
shll
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
jmp
into
fwait
call
aad
xor
add
add
sahf
xor
mov
test
in
mov
out
xchg
jmp
int3
xchg
call
iret
popf
jmp
shll
ljmp
ljmp
ljmp
jmp
movsb
ljmp
jmp
iret
popf
jmp
cmpsb
lock
add
popf
adc
ret
xchg
std
aad
xchg
out
xchg
jmp
int3
xchg
call
iret
popf
jmp
shlb
ljmp
jmp
iret
mov
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
movsl
ljmp
jmp
fdivs
add
lcall
mov
sahf
call
iret
sahf
jmp
shlb
jmp
movsl
jmp
cmpsl
jmp
lods
jecxz
sahf
lret
movsl
jmp
stos
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
ljmp
out
add
int
fdivrs
mov
ljmp
jmp
cmpsl
jmp
test
jmp
test
mov
aam
add
shlb
bnd
xlat
lods
jmp
stos
in
aad
in
aad
in
aad
jmp
test
out
fdivrl
add
lret
mov
call
shlb
jmp
test
in
aad
in
stos
out
fidivrs
out
test
out
test
ljmp
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
out
fidivl
pop
loope
pushf
jnp
ret
out
mov
in
stos
in
lods
in
xlat
lods
out
fdivrl
push
out
test
jecxz
pushf
in
fdivs
in
fdivs
in
fdivs
mov
loopne
cwtl
pop
faddp
jmp
int3
popf
in
lods
in
xlat
scas
in
fdivs
div
loopne
cmp
add
add
int
adc
lret
ffreep
out
in
fidivl
out
fidivrs
add
enter
xchg
jmp
enter
fnstenv
out
pop
loopne
xchg
cmp
loope
xchg
out
fdivl
out
inc
loope
cltd
adc
lret
loopne
out
fidivl
out
fidivrs
fidivrl
insl
jmp
shlb
out
fdivrl
or
add
add
lret
pushf
out
lds
out
fnstsw
add
add
add
mov
add
mov
imul
in
fidivl
add
xchg
faddp
mov
ljmp
or
add
add
mov
and
lods
fdivs
mov
add
clc
ud0
rolb
incl
pop
clc
add
push
add
clc
add
incl
add
incl
add
add
jg
add
aas
clc
add
pop
lock
pavgb
pop
loopne
sbb
loopne
push
pop
loopne
push
pop
lock
pop
lock
add
add
add
add
add
pop
lock
pop
clc
add
pop
clc
add
aas
clc
pop
sarb
pavgb
clc
pop
lock
cld
pop
lock
aas
clc
jg
add
add
add
add
add
add
and
add
add
andb
add
push
pop
add
push
pop
add
adc
push
sbb
adc
or
sbb
pop
sbb
or
add
add
pop
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
and
or
add
add
add
add
add
add
add
add
add
add
add
add
or
gs
cmp
sahf
pop
dec
sub
imul
cmp
xchg
push
add
add
dec
cmp
add
add
add
add
push
add
add
add
push
add
add
add
add
add
cmp
lea
lcall
dec
lcall
rcrl
xor
and
or
dec
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
cmp
mov
jp
sti
lcall
rcrl
notrack
mov
cmp
pushl
pop
sub
add
add
add
add
add
or
add
sldt
add
add
add
add
xor
add
inc
add
add
add
pop
add
add
daa
mov
jg
cld
lahf
xchg
mov
mov
cmp
shll
cmp
rcrb
cmp
les
aaa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
pop
push
add
push
xor
cmpsl
nop
popa
dec
mov
notrack
mov
notrack
mov
cmp
call
mov
cmp
rcrb
push
pop
cltd
inc
add
add
add
add
add
add
pop
add
add
add
adc
add
pop
add
add
add
add
add
sub
add
xor
or
inc
je
cmp
scas
xchg
push
aam
aas
call
mov
inc
aam
inc
call
mov
aas
aam
aas
call
mov
cmp
rcrb
cmp
push
add
add
add
add
add
pop
add
add
sldt
add
add
add
adc
or
subb
mov
mov
insl
shrl
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aam
inc
shll
cmp
rcrb
inc
neg
lods
push
inc
xor
sbb
xor
sbb
cmp
sbb
lods
xchg
pop
mov
lods
pop
call
movsb
inc
call
cmpsb
dec
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
xlat
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
cmpsb
dec
call
movsl
inc
call
mov
inc
call
mov
cmp
cmpsb
dec
call
subb
lods
push
lret
inc
cmpsl
jae
xlat
scas
pop
cmpsl
dec
call
test
fsubrs
push
fsubrs
push
fsubrs
push
call
test
dec
call
test
call
cmpsl
dec
movsl
inc
call
movsb
inc
call
mov
cmp
xlat
test
push
sbb
add
add
xchg
pop
fnstcw
scas
jp
fsubrs
dec
fldcw
fisubrl
pop
fisubrl
pop
fisubrl
pop
fldcw
push
fsubrs
push
xlat
test
dec
call
movsl
inc
call
mov
cmp
fldcw
push
add
mov
fwait
popa
jmp
movsl
jno
shlb
pop
fldcw
pop
fdivl
fs
fdivl
fs
fdivl
fdivl
pusha
fidivl
pop
fldcw
push
xlat
test
dec
aad
inc
shll
pop
sahf
fsubrs
add
mov
popf
jmp
aam
jle
pop
fdivl
data16
fnsave
push
fidivs
imul
mov
insl
fidivrs
insl
fidivs
push
fnsave
gs
fdivl
pop
fisubrl
push
xlat
test
inc
call
movsb
inc
cld
push
add
add
add
fwait
pop
out
ret
cmpsl
jo
mov
popa
fnsave
imul
mov
fidivs
insb
fidivrs
insl
fistpll
jb
loopne
jbe
loope
js
loope
js
loopne
jne
fistpll
imul
mov
fdivl
pusha
pop
fldcw
dec
xlat
test
neg
mov
push
mov
cwtl
push
push
ret
call
mov
addr16
fidivrs
jo
fidivrs
outsb
loop
jle
jecxz
mov
jecxz
jecxz
mov
loope
jge
loopne
jae
loope
jp
loop
jg
jecxz
cmp
loopne
jne
fidivrs
push
fnsave
pop
fisubrl
push
fsubrs
push
hlt
add
mov
cltd
pop
jp
xchg
push
clc
mov
scas
addr16
insl
fistpll
je
fistpll
test
call
lds
push
jecxz
cltd
insl
in
cmpsb
stc
in
movsb
jmp
loope
js
jecxz
jg
jecxz
cmp
loope
js
in
mov
in
lcall
int
jmp
lds
pop
fisubrl
push
fisubrl
data16
add
mov
sahf
bound
xchg
push
shrl
arpl
fistpll
jnp
loope
jp
fistpll
xchg
call
jecxz
sahf
jecxz
lahf
loop
fwait
loope
cmp
mov
jl
loope
js
jecxz
xchg
add
add
loop
lahf
mov
in
lahf
loope
jnp
fidivl
popa
push
bound
lds
imul
into
test
fnsave
jl
in
mov
in
mov
loope
jnp
in
mov
jmp
add
add
rorl
mov
cmp
mov
jbe
loope
jns
jecxz
sbbl
add
add
ret
loopne
xchg
mov
xchg
ffreep
xchg
fidivrs
popa
fnsave
arpl
fisubrl
pop
mov
mov
add
add
add
mov
xchg
shll
fdivs
call
shll
in
in
fnstenv
add
mov
shlb
jae
fstpt
jl
loope
jp
loope
jnp
jecxz
xchg
fnstcw
test
aad
jg
xlat
mov
fidivs
outsl
fnsave
push
insb
add
add
add
mov
jne
test
pusha
aam
jno
in
xchg
jmp
shlb
out
xchg
clc
jmp
add
add
test
addr16
cmpsb
fs
test
ffreep
mov
out
xchg
out
xchg
in
mov
in
lea
int3
scas
jb
lret
dec
test
outsl
loopne
jne
loop
cmp
mov
push
icebp
fdivl
add
lret
push
lds
call
mov
jecxz
xchg
call
shll
call
into
popf
sbb
mov
cwtl
pop
fdivrs
test
lcall
into
lcall
lret
xchg
cmp
add
add
lcall
into
scas
outsb
jmp
les
out
xchg
jmp
les
out
loope
jge
leave
mov
xor
scas
cmp
lret
lods
jo
jecxz
test
out
xchg
jmp
int3
cwtl
out
xchg
mul
int3
lcall
add
add
lea
lods
lea
mov
enter
rcrb
jmp
cmpsb
jmp
into
fwait
mov
shll
add
mov
scas
push
inc
cmpsl
push
in
mov
out
xchg
out
xchg
jmp
les
shl
addl
lret
adc
mov
cli
mov
cmpsb
imul
ret
cmp
leave
nop
call
int3
cwtl
out
xchg
out
fwait
cmpsb
mov
test
popf
orl
loopne
popf
jmp
aad
in
fsubrs
jmp
cmpsl
jmp
shlb
add
orl
int
jbe
in
out
xchg
in
nop
jecxz
cmp
int
mov
add
add
mov
add
mov
insl
inc
mov
test
in
mov
out
xchg
jmp
int3
xchg
out
xchg
jmp
leave
nop
jecxz
xchg
mov
mov
pop
lods
xchg
pusha
sbbb
dec
mov
ljmp
jmp
cmpsl
in
xlat
lods
in
fnstenv
in
stos
jmp
movsb
jmp
aam
cmpsb
loope
pushf
and
add
add
jl
aad
jl
pushl
jmp
lret
out
xchg
in
mov
in
mov
jmp
add
add
mov
je
mov
ret
xchg
jecxz
xchg
in
mov
out
xchg
out
xchg
jmp
lret
out
xchg
jmp
lret
jecxz
cwtl
in
sahf
call
iret
sahf
ljmp
jmp
test
in
xlat
scas
in
xlat
scas
in
stos
jmp
test
ljmp
jmp
iret
mov
mov
mov
jo
lret
jmp
leave
xchg
out
xchg
jmp
lret
xchg
jmp
lret
xchg
in
mov
out
xchg
sti
jmp
add
add
les
mov
roll
in
mov
out
out
xchg
out
xchg
out
xchg
out
cwtl
out
cltd
call
iret
popf
jmp
shlb
jmp
cmpsl
jmp
stos
jmp
stos
jmp
stos
jmp
stos
jmp
test
jmp
movsl
ljmp
jmp
iret
popf
call
int3
cwtl
out
cwtl
call
int3
xchg
out
xchg
in
mov
ljmp
add
rclb
ret
fstpt
cmp
lds
out
xchg
jmp
lret
xchg
call
int
call
iret
popf
jmp
shll
ljmp
jmp
cmpsl
jmp
cmpsl
ljmp
jmp
cmpsl
ljmp
ljmp
jmp
iret
sahf
call
into
pushf
call
int3
cwtl
jmp
lret
in
mov
in
fsubrs
add
lahf
push
aam
xchg
inc
test
cmp
ret
test
in
mov
in
out
xchg
jmp
lret
xchg
call
int
call
iret
popf
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
rcrb
call
int3
cwtl
jmp
lret
out
xchg
out
fnstenv
add
lahf
ss
fwait
clc
leave
lods
jne
aam
jle
in
xchg
in
mov
in
out
xchg
out
xchg
out
xchg
call
into
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
shll
jmp
iret
pushf
call
lret
ljmp
daa
xlat
ret
fcmovne
mov
shlb
mov
in
mov
in
mov
out
xchg
jmp
lret
xchg
call
into
lcall
rcrb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
ljmp
jmp
rcrb
call
lret
xchg
in
stos
ljmp
add
les
mov
dec
mov
jmp
leave
xchg
jmp
jmp
leave
xchg
out
xchg
jmp
int3
xchg
call
into
fwait
call
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
ljmp
ljmp
jmp
into
fwait
call
fidivl
add
rcll
sarb
jns
in
xchg
jmp
enter
lret
out
xchg
jmp
int
call
iret
pushf
jmp
shlb
jmp
shlb
jmp
shlb
jmp
shll
ljmp
jmp
movsl
jmp
movsl
ljmp
ljmp
jmp
iret
popf
jmp
xlat
scas
pusha
fmulp
cmpsb
mov
into
mov
in
cltd
out
xchg
out
xchg
out
cwtl
call
iret
pushf
jmp
shlb
ljmp
ljmp
ljmp
in
mov
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
test
in
fnstenv
add
int
jle
ret
shll
popf
jmp
int3
xchg
jmp
int
call
into
pushf
jmp
shlb
ljmp
ljmp
ljmp
loop
int3
sahf
cli
in
mov
jmp
cmpsl
jmp
cmpsb
ljmp
jmp
cmpsl
jmp
cmpsl
ljmp
ljmp
ljmp
out
fidivl
fmulp
mov
aam
test
jecxz
pushf
jmp
int
call
iret
popf
call
shll
ljmp
jmp
cmpsb
ljmp
in
xlat
scas
jmp
aam
xor
int3
popf
mov
iret
mov
jmp
scas
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
ljmp
test
add
add
int3
mov
cld
fdivrs
xchg
jmp
rcrb
ljmp
ljmp
jmp
cmpsl
jmp
test
jmp
test
in
fnstenv
dec
add
add
out
cmpsb
or
iret
mov
out
stos
in
fnstenv
jmp
stos
jmp
stos
jmp
stos
jmp
stos
jmp
stos
jmp
test
jmp
test
jmp
test
add
add
sahf
sbb
int3
mov
ffreep
xchg
ljmp
ljmp
jmp
cmpsb
jmp
test
jmp
test
jmp
test
in
fdivs
jo
lods
add
add
add
add
add
shll
jmp
shrb
in
fdivs
in
lods
in
lods
jmp
lods
in
lods
in
stos
jmp
stos
in
aad
out
fidivl
add
add
ffreep
cltd
push
loop
mov
ffree
nop
jmp
test
jmp
cmpsb
jmp
cmpsl
jmp
test
jmp
stos
in
stos
in
fdivs
cltd
in
fidivl
add
shrb
jmp
iret
mov
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
out
fnstsw
add
add
add
cwtl
add
int3
mov
ffree
mov
jmp
lods
jmp
test
jmp
test
in
stos
in
lods
in
lods
in
fsubrs
mov
add
shrb
loop
cltd
in
in
fdivs
in
fdivs
in
fsubrs
lock
stos
loope
lcall
rorb
in
aad
in
lods
in
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
shr
fnstsw
add
iret
movsb
sbb
iret
movsb
fsub
leave
cwtl
loop
cltd
out
in
fnstenv
in
fnstenv
in
fidivl
jo
add
add
lret
ffreep
xchg
fadd
mov
call
xlat
lods
in
xlat
scas
in
fsubrs
in
fnstenv
out
lock
sub
add
add
int3
sahf
inc
loope
xchg
neg
mov
mov
in
fidivl
out
fidivl
out
fnstsw
cmp
add
add
leave
lcall
rorb
in
fdivs
in
fnstenv
out
fidivrs
loope
xchg
add
xchg
sbb
test
fnstcw
mov
in
in
fidivl
out
fidivrs
or
loope
cltd
das
loope
cltd
faddp
mov
jecxz
xchg
in
fidivl
in
fidivl
lock
push
add
add
rorl
xlat
mov
fnstcw
mov
out
out
fdivrl
add
lret
jecxz
sahf
stc
loopne
xchg
jmp
lds
out
fidivl
out
fistpll
add
add
add
mov
je
aam
push
faddp
mov
out
fnstsw
out
fnstsw
jbe
add
add
xchg
add
int3
lahf
loop
enter
les
out
fdivrl
mov
fdivrl
add
mov
pop
aam
imul
in
lcall
fnstsw
aaa
loope
cltd
mov
ffreep
out
fdivrl
iret
in
fdivs
add
mov
add
shrb
push
out
adc
add
add
xchg
dec
faddp
lea
in
fwait
movsb
ljmp
add
mov
adc
lods
bound
xlat
mov
mov
leave
xchg
pusha
clc
pop
incl
add
inc
add
incl
add
incb
add
incl
add
clc
add
incl
add
rolb
incl
add
add
add
incl
add
add
add
add
cld
add
add
add
incl
add
aas
incl
add
lock
pop
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incb
add
add
add
cld
add
add
jg
add
add
add
add
clc
add
pop
add
add
clc
add
pop
orb
add
add
pop
rorb
add
add
pop
rorb
add
add
add
sldt
clc
add
add
pop
add
clc
add
add
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
addb
add
incb
add
add
add
incb
pop
loopne
incl
add
add
loopne
incl
add
add
lock
add
incl
aas
lock
add
incl
jg
add
add
incl
jg
add
add
incl
incb
incl
add
cmp
add
cmp
pop
incl
add
add
add
add
addb
add
add
add
add
add
inc
add
adc
or
sbb
add
sbb
add
pop
or
and
add
and
add
sbb
or
or
add
adc
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
sbb
or
cmp
adc
add
add
add
add
add
add
add
add
add
adc
add
pop
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
add
inc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
cmp
add
dec
add
add
daa
push
lea
xor
jl
cmp
subb
test
aad
jb
fsubrs
mov
add
add
add
add
dec
aaa
push
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
adc
xor
cwtl
jge
lcall
addl
xchg
cmp
call
mov
aas
inc
xchg
cmp
push
inc
push
xchg
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jae
adc
aas
in
xchg
jl
call
test
lret
call
mov
aas
call
mov
notrack
mov
cmp
jno
xor
or
add
add
add
add
add
pop
add
add
add
adc
add
sbb
add
and
add
add
add
add
add
add
push
and
adc
cwtl
jle
lcall
mov
iret
sahf
notrack
mov
notrack
mov
cmp
call
mov
cmp
rcrb
aas
inc
add
add
add
add
add
add
add
pop
add
add
add
adc
add
sbb
add
and
add
sub
add
aaa
add
add
add
dec
add
add
add
pusha
add
add
and
dec
hlt
fwait
adcb
xchg
mov
push
call
mov
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrl
dec
in
mov
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
aas
xor
mov
xchg
mov
mov
aas
call
mov
cmp
call
mov
cmp
aam
cmp
call
mov
cmp
rcrb
aaa
call
test
fcmovnb
pushf
dec
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
and
add
daa
add
add
add
xor
add
aaa
add
add
add
inc
push
inc
sub
mov
xchg
fs
stos
outsl
call
mov
notrack
mov
aas
call
mov
aas
call
mov
notrack
mov
cmp
shll
cmp
rcrb
ss
fsubrs
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
sbb
add
pop
add
add
add
sub
add
sub
xor
cmpsb
mov
lods
xchg
imul
aad
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
notrack
mov
cmp
rcrl
cmp
rcrb
pop
sahf
add
add
add
add
add
add
add
pop
pop
push
add
add
add
add
sldt
add
add
add
je
cmp
test
pop
pushl
mov
call
mov
inc
call
movsb
inc
call
movsb
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
notrack
mov
cmp
rcrl
cmp
add
sub
push
add
and
add
and
xor
sbb
test
xchg
pop
mov
mov
call
mov
inc
call
movsl
inc
call
cmpsl
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
inc
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
rcrb
inc
std
fnsave
add
je
cmp
test
push
test
mov
mov
mov
call
movsl
inc
call
cmpsb
dec
call
cmpsl
dec
call
test
dec
call
stos
push
call
stos
dec
call
stos
dec
call
test
dec
call
test
dec
call
test
call
cmpsl
dec
call
cmpsb
dec
call
movsl
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
xlat
cmpsl
dec
cmc
fidivl
add
xchg
adc
xchg
pop
pushl
stos
jp
call
test
push
fldcw
push
fldcw
fldcw
push
fsubrs
push
fldcw
fsubrs
dec
call
test
dec
call
cmpsl
dec
call
cmpsb
inc
call
movsb
inc
call
mov
cmp
fldcw
sbb
add
add
xchg
pop
iret
mov
arpl
mov
mov
fldcw
push
fisubrl
pop
fldt
pop
fldt
pop
fidivl
pop
fisubrl
pop
fisubrl
pop
fldcw
fsubrs
push
call
test
dec
call
movsl
inc
call
mov
notrack
lahf
cmp
pop
or
add
add
pop
fdivrl
cmpsl
je
shlb
arpl
fsubrs
push
fisubrl
pop
fdivl
arpl
fdivl
arpl
fdivl
arpl
fdivl
pop
fidivl
pop
fisubrl
push
fsubrs
call
test
dec
call
movsb
inc
call
mov
cmp
mov
add
add
lcall
les
xchg
fdivl
push
fisubrl
pusha
fdivl
gs
fnsave
fnsave
imul
fnsave
push
fidivs
imul
fidivs
addr16
fnsave
fdivl
pop
fldt
pop
fldcw
call
test
call
movsl
inc
call
mov
inc
fdivl
add
mov
lcall
lds
xchg
fdivl
pop
fdivl
gs
fnsave
imul
fidivs
insb
fidivrs
insl
fistpll
outsl
fistpll
jo
fistpll
jb
fistpll
outsl
fidivs
push
fnsave
gs
fdivl
pusha
pop
fldcw
call
cmpsl
dec
call
movsb
inc
call
cmpsb
inc
fidivrs
add
mov
cltd
pop
repz
stos
jne
fnstcw
pop
gs
fnsave
insb
fistpll
insl
fbstp
insb
fidivs
insb
fistpll
outsl
fistpll
jae
loopne
ja
loope
jns
loope
jp
loope
jns
loopne
ja
fistpll
jo
fidivs
push
fdivl
popa
pop
fisubrl
push
call
test
inc
fsubrs
insb
cmp
add
add
cwtl
pop
clc
mov
cmpsl
outsb
fdivrs
pop
imul
fistpll
jo
fidivrs
push
fidivrs
js
loop
cmp
les
jmp
mov
jno
loopne
jae
loope
jns
loop
jge
jecxz
cmp
roll
loope
js
loopne
jae
fidivrs
push
fdivl
popa
pop
pop
fldcw
push
call
cmpsb
dec
arpl
mov
xchg
push
cld
mov
mov
outsb
gs
fidivrs
jb
loopne
jae
fistpll
insl
jmp
mov
xchg
bnd
leave
xchg
push
jecxz
lcall
iret
movsl
jmp
shll
jmp
mov
js
loop
jge
jecxz
cmp
ret
jecxz
jg
loope
js
fistpll
js
jecxz
mov
in
xchg
jmp
mov
loop
cmp
fidivl
pop
fidivl
pop
fldcw
push
call
test
fdivl
fs
add
add
cltd
pop
xorb
push
mov
scas
fs
push
jmp
mov
ja
fistpll
insl
jmp
mov
jmp
test
adc
add
add
les
loopne
shlb
jmp
int3
fwait
jmp
mov
jnp
jecxz
jg
jecxz
cmp
mov
jbe
in
mov
in
popl
nop
es
lcall
shlb
out
lcall
mov
pop
fisubrl
push
call
test
push
fnsave
add
shlb
xchg
mov
xchg
push
mov
stos
pop
fidivl
insb
jmp
mov
jge
loop
jge
loopne
js
fidivrs
xchg
sti
in
add
lret
jecxz
lahf
jmp
lret
pushf
jmp
leave
cltd
jmp
les
jmp
mov
jnp
loope
jbe
jecxz
test
loop
adcl
add
add
xchg
and
into
mov
jmp
int
jmp
iret
mov
fidivl
popa
fdivl
pop
fisubrl
push
fdivl
add
movsl
outsb
add
lods
js
shlb
mov
pop
call
stos
pop
insl
jmp
mov
test
in
xchg
loop
jle
loopne
jb
in
mov
out
fdivl
add
ret
ffree
xchg
ljmp
mov
faddp
xchg
loopne
jae
loopne
jbe
loope
jbe
loopne
jne
in
test
add
add
ret
mov
loop
lcall
xchg
jmp
xchg
fistpll
pop
fnsave
data16
fdivl
pop
fldcw
jne
add
add
cmpsb
jo
int3
mov
int
cmpsl
jno
mov
pushf
pop
fistpll
jl
in
mov
call
rcrb
jmp
enter
les
lods
mov
sbb
mov
jnp
fnstcw
je
loopne
jne
loopne
je
loopne
jne
loop
subl
add
add
rorb
fcmovb
mov
fnstcw
test
fnsave
arpl
fidivs
insb
fidivs
fldcw
fs
into
mov
jbe
mov
fwait
pop
fistpll
cmp
ljmp
call
enter
iret
sahf
std
in
lods
das
into
mov
or
scas
jo
iret
scas
outsb
dec
scas
insb
fdivrs
mov
in
xchg
jecxz
test
jecxz
cmp
lds
add
mov
jl
shll
fnstenv
pop
fidivs
jae
fistpll
addr16
fisubrl
push
repnz
add
sarl
mov
cltd
pop
fnstsw
jmp
int3
xchg
ljmp
jmp
jmp
test
add
cmpsl
push
lds
dec
cmpsl
faddp
mov
out
xchg
jmp
lret
xchg
jmp
lret
out
mov
in
mov
add
add
scas
jae
leave
stos
insb
xlat
enter
enter
iret
scas
insl
fistpll
jnp
jecxz
cmp
ret
cmp
mov
push
fidivl
add
int
mov
scas
jg
mov
cwtl
pop
fstpt
test
out
xchg
ljmp
call
enter
aam
mov
mov
fwait
pop
inc
sahf
pop
dec
test
jmp
into
fwait
jmp
int3
xchg
call
int
jmp
lret
xchg
jmp
lret
mov
pushf
pop
mov
mov
cmp
lds
call
leave
nop
jmp
ret
cmp
mov
xorl
add
lret
push
enter
mov
cwtl
pop
call
mov
jmp
ret
out
xchg
jmp
shlb
jmp
enter
shlb
add
nop
push
pushl
cltd
pop
jmp
xchg
call
shlb
ljmp
jmp
lret
xchg
lock
add
add
xchg
push
pushl
xchg
push
fnstsw
mov
out
xchg
jmp
int3
xchg
jmp
leave
xchg
jmp
ret
cmp
ret
cmp
les
add
mov
xor
mov
mov
lcall
jecxz
cmp
call
iret
popf
call
lret
out
xchg
cmc
out
lcall
add
add
xchg
test
dec
ljmp
rcll
ljmp
in
xlat
lods
jmp
stos
jmp
mov
ljmp
add
dec
ljmp
nop
push
ffreep
xchg
in
mov
out
xchg
jmp
lret
xchg
jmp
enter
ret
out
xchg
in
jecxz
test
int3
mov
adc
shll
dec
stos
jo
jecxz
cmp
mov
out
xchg
call
int
jmp
lret
xchg
jmp
enter
into
sahf
test
mov
mov
cltd
jle
cli
popf
orl
mov
ljmp
in
fsubrs
in
fsubrs
ljmp
jmp
add
add
jg
into
popf
orl
mov
pop
jmp
jmp
enter
lret
out
xchg
jmp
mov
loop
cmp
lret
add
mov
jbe
mov
movsl
imul
in
xchg
in
nop
jmp
int3
xchg
call
lret
xchg
jmp
lret
out
nop
jmp
leave
xchg
mov
mov
mov
xchg
js
fcoms
mov
leave
mov
ljmp
jmp
aam
in
lods
in
fdivs
in
fdivs
jmp
cmpsl
ljmp
jmp
mov
in
mov
add
jnp
lcall
orl
mov
mov
out
xchg
jmp
lret
xchg
jmp
lret
in
mov
jecxz
xchg
jmp
test
sarb
jl
mov
mov
xchg
jecxz
test
in
mov
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
lret
fcmovb
nop
sarl
xchg
jmp
iret
test
ljmp
ljmp
jmp
test
in
xlat
scas
in
fsubrs
in
xlat
lods
in
aad
ljmp
call
shlb
lret
inc
cmpsb
mov
xchg
jp
cld
xchg
jp
ljmp
mov
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
leave
nop
jmp
lds
ljmp
add
les
inc
movsb
imul
popf
pusha
jmp
les
jmp
lds
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
call
int3
xchg
call
into
pushf
ljmp
ljmp
jmp
test
in
lods
in
lods
in
xlat
lods
in
stos
jmp
test
ljmp
call
into
pushf
ljmp
mov
jmp
lret
xchg
jmp
lret
xchg
call
int3
xchg
jmp
lret
xchg
jmp
enter
lds
icebp
jmp
add
add
mov
inc
test
mov
rorl
in
xchg
in
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
int3
xchg
jmp
int
call
into
pushf
jmp
rcrb
ljmp
jmp
cmpsb
jmp
test
in
aad
in
aad
in
stos
in
stos
in
stos
in
aad
in
aam
jmp
cmpsb
ljmp
jmp
iret
pushf
call
int
jmp
int3
cwtl
jmp
int3
cwtl
call
int
call
int3
xchg
jmp
lret
out
jmp
les
mov
add
add
mov
xchg
dec
lods
ja
shll
jmp
roll
in
mov
in
jmp
leave
nop
jmp
lret
call
int3
xchg
call
int
jmp
iret
popf
jmp
shll
ljmp
ljmp
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
movsb
ljmp
ljmp
call
iret
popf
call
into
pushf
call
int
call
lret
in
mov
in
mov
out
fdivrl
add
ret
fadd
pushf
dec
mov
inc
movsl
imul
jecxz
cmp
ret
test
in
mov
in
mov
out
nop
jmp
lret
out
xchg
jmp
int
call
int
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
ljmp
jmp
rcrb
jmp
int
call
lret
in
mov
jmp
xlat
scas
inc
fcmovb
lahf
adc
shlb
insl
call
mov
jmp
lds
jmp
mov
in
jmp
enter
leave
xchg
jmp
lret
xchg
call
int
call
into
pushf
jmp
rcrb
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
rcrb
call
int3
xchg
jmp
lret
xchg
jmp
enter
xlat
lods
cmc
jmp
test
rcll
sarl
jno
int3
scas
jne
in
jmp
lds
jmp
enter
leave
nop
jmp
lret
out
xchg
jmp
int3
xchg
call
into
fwait
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
jmp
iret
popf
call
int3
cwtl
jmp
lret
xchg
jmp
enter
fnstsw
add
shll
dec
scas
ja
enter
out
xchg
jmp
lds
jmp
enter
leave
nop
jmp
lret
out
xchg
call
int
jmp
iret
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
jmp
mov
jmp
iret
popf
call
int
jmp
int3
xchg
jmp
int3
xchg
out
fnstsw
add
shlb
dec
mov
inc
test
jmp
lret
xchg
jmp
mov
in
jmp
leave
jmp
lret
out
xchg
jmp
int3
xchg
call
into
lcall
iret
popf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
call
int3
xchg
ljmp
dec
loop
mov
fld
lcall
stos
outsb
jmp
int3
pushf
jmp
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
into
fwait
jmp
iret
sahf
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
ljmp
jmp
iret
popf
jmp
int
in
fsubrs
or
add
add
sahf
dec
fcmovb
popf
call
mov
dec
scas
jae
loopne
cwtl
jmp
enter
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
int
call
iret
pushf
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsb
jmp
movsl
ljmp
ljmp
jmp
rcrb
call
fdivrl
add
enter
leave
mov
dec
mov
ffree
xchg
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
into
lcall
iret
popf
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
int
jmp
shll
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
ljmp
ljmp
ljmp
jmp
loop
mov
add
add
lret
fmulp
movsb
not
mov
jge
fcmovnb
nop
jmp
int3
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int
call
into
pushf
jmp
rcrb
ljmp
ljmp
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
in
aad
jmp
iret
mov
jmp
int
jmp
test
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
ljmp
ljmp
in
aad
in
fidivl
fadd
pushf
push
loope
test
fld
xchg
call
mov
jmp
int3
cwtl
jmp
int
call
into
pushf
jmp
shlb
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
stos
ljmp
out
int
jmp
iret
mov
in
stos
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
ljmp
ljmp
ljmp
sti
out
fdivrl
add
shrb
aad
xchg
xlat
mov
cmpsb
call
iret
pushf
jmp
rcrb
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
in
stos
in
fnstenv
add
int3
popf
dec
in
mov
jmp
shlb
jmp
stos
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsb
jmp
movsl
ljmp
in
scas
sahf
fmulp
pushf
fdivrs
cmp
aam
call
rcrb
ljmp
ljmp
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
in
aad
out
fidivrs
in
mov
jmp
shrb
out
fdivrl
jmp
stos
jmp
stos
jmp
stos
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
jmp
test
jmp
test
jmp
test
repz
xchg
in
scas
je
lret
fcmovb
mov
xlat
mov
test
jmp
shll
ljmp
jmp
cmpsb
jmp
cmpsl
jmp
test
jmp
test
in
aam
in
aad
in
aad
push
ffreep
in
xlat
mov
out
movsl
or
shlb
jmp
shrb
out
fdivrl
in
stos
in
stos
in
lods
in
lods
in
lods
in
stos
in
stos
in
stos
in
stos
in
test
in
fnstenv
pop
loope
mov
fadd
fnstcw
cmpsb
ljmp
ljmp
jmp
cmpsb
jmp
cmpsl
jmp
test
in
aad
in
aad
in
aad
in
stos
in
aad
push
loopne
imul
fidivrs
add
shll
repnz
stos
jmp
shlb
in
fnstenv
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
stos
in
stos
push
fidivrs
sbb
loope
lahf
aaa
loope
lahf
ffree
nop
fidivrl
movsb
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
test
jmp
test
in
aad
in
stos
in
lods
in
lods
push
fidivrs
push
out
test
jmp
shll
out
fnstsw
in
xlat
scas
in
fsubrs
in
fsubrs
in
fsubrs
in
xlat
scas
in
lods
in
lods
push
loope
filds
add
add
lret
loop
sahf
neg
les
jmp
lret
pushf
in
aad
jmp
test
jmp
test
in
aad
in
stos
in
lods
in
lods
in
xlat
lods
in
xlat
lods
out
fdivrl
jp
add
add
shrl
jmp
int
jmp
lret
out
fidivrs
in
fdivs
in
fdivs
in
fdivs
in
fsubrs
in
fdivs
lcall
add
loopne
cwtl
add
lret
faddp
xchg
fadd
mov
loopne
xchg
in
fsubrs
in
aad
in
stos
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
fsubrs
push
in
cmpsb
out
cmpsb
push
out
test
in
mov
jmp
int
out
fnstsw
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
out
fidivrs
add
lret
pushf
mov
ffree
mov
ffree
mov
in
fnstenv
in
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fnstenv
lock
add
iret
movsb
inc
in
mov
ffree
mov
jmp
in
fnstenv
in
fnstenv
in
fnstenv
push
loopne
lock
add
lret
popf
mov
ffree
mov
fdivrl
mov
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fnstenv
loope
fidivrs
add
lret
pushf
xchg
xchg
ffree
mov
fstpt
in
fidivl
out
fidivl
out
fidivl
in
fidivl
out
add
add
lret
popf
ja
enter
ret
mov
fdivrl
lods
in
fdivs
in
fnstenv
out
fidivl
push
loop
repz
fnstsw
add
enter
xchg
enter
fidivrl
test
lock
out
out
out
push
loopne
mov
loop
cltd
dec
loope
cltd
ffreep
fdivrl
mov
in
fnstenv
out
fidivl
push
loopne
std
repnz
dec
ffreep
lea
mov
jnp
mov
jmp
lret
out
fidivrs
out
out
in
add
lret
jecxz
popf
loopne
xchg
ffree
mov
in
cwtl
out
fidivl
out
fidivl
out
fidivrs
fdivrl
jp
mov
call
mov
ljmp
out
fdivrl
out
fdivrl
in
fnstenv
add
lret
pushf
adc
int
cmc
loope
cwtl
faddp
mov
loop
xchg
out
out
push
fistpll
add
mov
jo
aam
imul
out
fdivrl
out
fnstsw
out
fdivrl
add
enter
int
fsubp
lret
fwait
jmp
xchg
jmp
lds
out
fdivl
push
loopne
out
fnstsw
add
mov
outsb
loopne
scas
push
fstpt
mov
out
fidivrs
test
add
add
lret
pushf
shl
lcall
les
out
fdivrl
fucomip
fnstenv
add
mov
shrl
arpl
shrb
push
fidivrs
ljmp
add
xchg
nop
loopne
xchg
jmp
lds
in
fidivl
ljmp
add
mov
jg
lods
arpl
shrb
ljmp
cli
jmp
add
add
xchg
sbb
ret
mov
mov
mov
mov
add
shrb
xchg
aam
push
push
clc
add
inc
add
incb
add
push
add
jg
incl
incb
add
jg
clc
add
add
inc
add
add
incl
add
add
incb
add
add
incl
add
add
jmp
add
add
incl
add
add
inc
add
add
incl
incl
add
add
incb
add
add
cld
add
add
aas
clc
add
add
pop
push
add
add
ud0
loopne
add
add
inc
add
add
add
incl
add
add
add
incb
add
add
add
cld
add
lock
add
cld
add
lock
add
add
lock
add
incb
pop
lock
add
incb
pop
lock
add
incb
pop
loopne
cld
add
incb
xadd
cld
add
incb
sldt
clc
add
add
add
cmp
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
add
pop
inc
add
addb
inc
add
addb
inc
add
rolb
inc
add
loopne
ud0
rolb
lock
inc
add
lock
jmp
add
clc
add
jmp
add
add
jmp
add
cld
add
jmp
add
incb
pop
jmp
add
incl
pop
jmp
pop
incl
pop
incl
ud0
sarb
push
pop
jmp
aas
push
aas
jmp
jg
sub
add
dec
add
add
add
add
add
add
add
adc
or
sbb
add
sbb
add
sbb
add
and
add
sbb
and
or
or
or
or
push
add
add
add
add
add
add
push
add
add
add
add
or
es
adc
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
daa
push
or
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
sub
adc
cmp
sbb
xor
inc
aaa
sbb
inc
xor
mov
add
add
add
add
daa
add
add
push
inc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
insl
inc
xor
movsl
test
lcall
cmpsl
xchg
mov
aas
inc
xchg
cmp
mov
cmp
push
inc
sbb
or
add
add
sbb
and
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
xchg
xor
xchg
jns
cli
xchg
jge
lcall
mov
enter
shll
aas
call
mov
ds
lcall
adc
sub
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
adc
jne
aaa
fstl
jge
lcall
mov
into
sahf
cmp
call
mov
notrack
mov
cmp
dec
popf
cmp
pushf
push
sbb
imul
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
add
add
add
add
push
add
add
add
push
sbb
push
nop
js
cmp
cwtl
jg
cltd
orb
test
mov
lahf
notrack
mov
cmp
call
mov
cmp
shll
cmp
rcrl
aas
sti
test
jp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
subl
popf
test
movsb
mov
rcrl
shlb
cmp
shll
cmp
shlb
cmp
rcrb
cmp
rcrb
inc
icebp
mov
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
ss
inc
jmp
mov
xchg
fs
mov
notrack
mov
cmp
aam
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrb
dec
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
daa
add
add
add
xor
add
add
add
add
add
add
add
ss
jnp
jl
in
mov
lea
mov
imul
stos
pop
aam
notrack
mov
aas
call
mov
aas
aam
aas
call
mov
notrack
mov
cmp
call
mov
cmp
rcrb
cmp
stos
push
rcl
stos
pop
daa
add
add
add
add
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
daa
jl
jg
in
mov
nop
mov
lods
arpl
aam
aas
aam
aas
call
mov
inc
call
mov
inc
aam
inc
call
mov
inc
call
mov
notrack
mov
cmp
shlb
cmp
rcrl
cmp
fldcw
dec
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
and
jnp
test
cmpsb
mov
stos
xchg
arpl
mov
scas
popa
call
mov
inc
aad
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
aad
inc
call
movsb
inc
call
mov
inc
aad
inc
call
mov
notrack
mov
cmp
rcrl
aaa
call
mov
pop
pushf
aad
dec
or
add
add
add
or
add
add
push
or
or
add
add
add
add
adc
aaa
andl
pop
lods
xchg
gs
lods
jp
fsubrs
inc
aad
inc
aad
inc
aad
inc
movsl
inc
movsl
inc
aad
dec
aad
dec
aad
dec
aad
inc
aad
inc
aad
inc
aad
inc
aad
inc
aam
inc
aam
aas
aam
ds
rcrl
cmp
rcrb
aas
add
add
add
and
dec
ds
add
push
xchg
js
lea
xchg
pop
pushl
scas
jnp
fsubrs
inc
call
movsl
inc
call
cmpsb
dec
call
cmpsl
dec
xlat
test
call
cmpsl
dec
call
test
call
test
call
cmpsl
dec
xlat
test
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
cmpsb
dec
call
movsl
inc
call
movsl
inc
call
movsb
inc
aad
inc
call
mov
cmp
call
sahf
cmp
movsl
inc
cmc
fnsave
push
add
add
add
ds
scas
xchg
pop
clc
mov
pusha
pushl
mov
fldcw
dec
cmpsl
dec
call
test
call
test
dec
fsubrs
push
fsubrs
push
call
stos
push
xlat
stos
push
fsubrs
dec
call
test
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
movsl
inc
call
movsb
inc
call
mov
notrack
mov
cmp
xlat
test
pop
dec
mov
lods
push
mov
mov
fs
mov
mov
fldcw
dec
call
test
push
fsubrs
push
fldcw
fldcw
push
fldcw
push
fsubrs
push
fldcw
fsubrs
push
call
test
dec
xlat
cmpsl
dec
call
cmpsb
dec
call
movsl
inc
call
mov
inc
shll
cmp
fsubrs
add
add
movsl
mov
mov
pop
mov
mov
cmpsl
jbe
xlat
mov
push
fsubrs
push
fldcw
pop
fisubrl
pop
fldt
pop
pop
fidivl
pop
fisubrl
pop
fisubrl
pop
fldcw
push
fldcw
xlat
stos
push
call
test
dec
call
movsl
dec
call
movsb
inc
aad
inc
call
mov
cmp
pop
or
add
add
cwtl
pop
sarl
movsb
outsl
inc
scas
jl
fidivrl
push
fsubrs
push
fisubrl
pop
popa
fdivl
fdivl
arpl
fdivl
arpl
fdivl
fdivl
popa
pop
fidivl
pop
fldcw
push
fsubrs
xlat
test
dec
cmpsb
inc
aam
inc
aam
inc
shll
push
fldcw
add
lcall
ret
dec
mov
fstpt
push
fldcw
pop
fdivl
gs
fnsave
addr16
fnsave
push
fnsave
imul
fnsave
push
fnsave
gs
fdivl
popa
pop
fisubrl
pop
fldcw
xlat
test
dec
call
movsb
inc
call
mov
inc
cld
push
or
add
add
mov
pop
aas
mov
mov
jae
into
mov
fdivrl
pop
fisubrl
pusha
fdivl
fidivs
imul
fnsave
imul
mov
fidivs
insl
fidivrs
outsb
fidivrs
outsl
fistpll
outsl
fidivs
insb
fidivs
push
fdivl
pusha
pop
fisubrl
push
fsubrs
dec
call
cmpsb
dec
aam
inc
call
test
neg
mov
jbe
scas
pop
add
add
add
cltd
pop
dec
mov
lahf
fs
cmpsl
jno
into
mov
fdivrl
pop
arpl
fnsave
push
fidivs
insb
fidivs
insb
fidivrs
insb
fidivrs
outsb
fistpll
jo
fistpll
je
loopne
jbe
loopne
jbe
loopne
jbe
loopne
jne
fistpll
jo
fidivrs
push
fnsave
fs
fdivl
pusha
pop
fisubrl
push
fsubrs
dec
call
movsb
inc
fldcw
jb
mov
cwtl
push
push
mov
popf
pusha
inc
movsl
insb
dec
mov
fnsave
pop
fdivl
addr16
fidivs
outsb
fistpll
insl
fidivs
imul
mov
fidivs
imul
mov
insl
fistpll
jno
loopne
je
loope
js
loope
jnp
loop
jge
loop
jge
loop
jl
loope
js
loopne
jne
fistpll
insl
fnsave
data16
fdivl
fdivl
pop
pop
fisubrl
push
xlat
test
movsl
inc
fidivl
bound
mov
xchg
push
gs
push
repz
mov
je
pop
fdivl
fidivrs
jno
fistpll
outsb
fnsave
jno
jecxz
test
out
xchg
loopne
int3
cltd
loope
int
cld
out
popf
in
xchg
jmp
lds
jmp
mov
js
loop
jge
jecxz
cmp
ret
jecxz
cmp
loopne
ja
fistpll
insb
fidivs
imul
mov
fdivl
pusha
fidivl
pop
pop
fldcw
push
fsubrs
dec
fdivl
and
add
add
cwtl
push
jne
xchg
push
icebp
mov
sahf
pop
dec
stos
push
fidivl
pusha
fnsave
outsl
fistpll
je
fistpll
outsb
fistpll
hlt
jmp
lret
xchg
inc
loop
test
loop
mov
lret
pushf
jb
iret
movsl
in
in
cmpsb
jmp
shlb
jmp
ret
loopne
ja
loop
jl
jecxz
cmp
jecxz
cmp
mov
jne
loope
ja
in
mov
out
fwait
shl
iret
mov
jmp
int
jmp
mov
loopne
ja
fdivl
pop
pop
fidivl
push
fsubrs
dec
fnsave
sbb
add
add
lcall
mov
push
mov
cmpsb
popa
fnstenv
fnsave
jae
loopne
ja
loopne
js
loopne
jne
fidivrs
js
ljmp
pop
jecxz
xchg
loopne
test
jecxz
lcall
iret
movsb
jmp
into
mov
jmp
mov
jns
loop
jle
jecxz
jg
loop
jle
loope
jns
loop
jge
in
mov
loop
mov
jecxz
nop
dec
in
mov
clc
out
movsl
out
movsb
jmp
lret
xchg
fistpll
pop
pop
pop
fsubrs
push
fnstsw
gs
add
add
mov
xchg
mov
xchg
push
pushl
mov
pop
fdivl
outsb
jmp
mov
jge
loop
jge
loope
jp
fistpll
jne
out
fdivl
sub
add
add
les
scas
loop
sahf
jmp
lret
loope
cltd
jmp
les
jmp
mov
jnp
loope
jns
loope
js
in
mov
loope
mov
in
fwait
jns
into
mov
jmp
int
jmp
into
mov
fidivl
pusha
fdivl
popa
fidivl
push
fldcw
data16
add
shlb
jl
movsb
imul
fwait
pop
mov
pop
inc
lahf
pop
fisubrl
arpl
fistpll
jl
jecxz
test
in
xchg
jecxz
cmp
mov
jb
in
fdivs
sbb
add
add
les
neg
ret
mov
ffree
mov
ffree
xchg
loopne
jne
loopne
jne
loopne
ja
loopne
je
loop
jl
jecxz
test
ffreep
xchg
loope
xchg
push
loope
lcall
xchg
loope
xchg
fistpll
pop
fdivl
data16
fdivl
fldcw
push
cmc
add
ret
adc
mov
into
ret
mov
cltd
pop
call
scas
push
loop
jg
in
jmp
int3
xchg
call
int3
xchg
in
jmp
ret
jmp
lods
dec
xlat
mov
xor
mov
jge
fnstcw
jne
loopne
je
loopne
jne
loopne
jae
loope
jnp
loop
adcl
add
add
rorb
fadd
mov
fcmovnb
mov
fidivrl
test
fnsave
fidivs
imul
mov
fdivl
pop
fldcw
fs
ret
test
adc
mov
lret
jne
mov
lcall
loope
js
in
xchg
out
xchg
jmp
shll
out
xchg
jmp
enter
fdivl
add
add
add
mov
push
shll
jb
shll
js
loop
cmp
loop
jle
loope
jp
loop
jg
jecxz
xchg
xlat
mov
cmpb
mov
shll
addr16
fidivrs
jb
fidivs
fisubrl
xlat
fnsave
add
les
scas
lds
mov
scas
insl
jmp
mov
mov
call
shlb
jmp
leave
nop
call
xlat
lods
pop
enter
leave
test
std
lret
dec
test
jle
out
nop
jmp
leave
nop
jmp
leave
nop
jmp
enter
enter
mov
iret
mov
push
int
jb
int3
lods
outsl
dec
stos
imul
scas
outsb
imul
mov
jns
loopne
jbe
fidivs
pop
fsubrs
pop
fnstsw
add
lds
xchg
scas
jle
mov
cltd
pop
dec
stos
insb
loop
jg
in
mov
call
shlb
call
leave
nop
jmp
shlb
add
movsb
addr16
rcrb
inc
mov
pop
jecxz
xchg
out
xchg
out
xchg
out
xchg
out
xchg
in
jmp
leave
nop
sub
add
add
test
sbb
mov
arpl
ret
inc
movsl
fs
fdivrl
cmp
mov
out
xchg
out
xchg
in
mov
loopne
jns
fidivrs
jbe
fistpll
add
mov
je
mov
mov
lcall
loop
cmp
out
xchg
jmp
shll
out
nop
jmp
rcrb
add
cltd
pop
jns
xchg
push
sti
mov
popf
pop
call
mov
call
int
jmp
iret
popf
call
lret
out
xchg
jno
add
add
pop
stos
mov
pop
mov
fwait
pop
call
mov
jmp
ret
test
in
mov
out
xchg
jmp
int3
xchg
jmp
enter
ret
cmp
loop
cmpl
add
lret
mov
push
leave
mov
mov
fwait
popa
inc
mov
cmp
lds
jmp
rcrb
out
xchg
jmp
int3
xchg
in
out
pushf
cmp
mov
xchg
pop
inc
stos
lea
mov
push
pushl
cmpsb
imul
into
lahf
call
shll
jmp
movsl
jmp
int
jmp
int3
xchg
shr
shlb
add
push
mov
mov
push
pushl
jne
jecxz
xchg
in
mov
out
xchg
jmp
lret
xchg
jmp
enter
ret
cmp
les
xor
add
add
mov
xor
mov
inc
cmpsl
jae
mov
pushf
pop
jmp
ret
in
test
out
xchg
call
iret
popf
call
lret
out
xchg
cld
out
popf
addl
add
mov
pop
inc
mov
xchg
stos
mov
mov
int
jmp
shlb
in
xlat
lods
in
xlat
lods
jmp
test
ljmp
cld
ljmp
or
add
add
test
movsb
xchg
mov
scas
mov
shll
jmp
leave
nop
out
xchg
jmp
lret
in
jmp
roll
in
mov
int
mov
int
cmc
ret
mov
lcall
jecxz
cmp
jmp
lret
xchg
call
int
out
xchg
jmp
leave
nop
jmp
leave
xchg
out
in
pushf
aaa
mov
mov
cltd
jge
call
lahf
orl
test
stos
ljmp
jmp
test
in
fnstenv
in
xlat
lods
jmp
cmpsb
jmp
into
fwait
stc
jmp
add
add
jg
loop
orb
test
scas
xchg
push
fdivrl
mov
out
xchg
out
xchg
jmp
lret
in
mov
loop
cmp
in
add
lret
mov
add
mov
jp
mov
fwait
pop
fnstcw
cmp
out
xchg
out
xchg
out
xchg
out
xchg
out
xchg
out
nop
in
nop
repnz
xchg
outsl
into
mov
and
push
pusha
xchg
js
iret
xchg
js
std
pushf
orb
popf
jo
fcmovne
mov
jmp
shll
in
lods
in
fdivs
in
fnstenv
jmp
stos
jmp
movsb
jmp
into
fwait
jmp
mov
out
movsl
push
mov
orb
jnp
cltd
jge
lahf
orb
scas
jp
in
nop
out
nop
out
xchg
out
xchg
in
nop
in
mov
jecxz
xchg
jmp
stos
test
add
add
mov
jg
shlb
call
mov
cmp
les
jmp
lret
out
xchg
out
xchg
jmp
lret
xchg
jmp
lret
out
xchg
in
xchg
cli
ffree
nop
call
ret
stos
jle
les
cltd
jmp
into
cmpsl
jmp
shlb
ljmp
jmp
test
in
fsubrs
in
fdivs
in
stos
jmp
test
ljmp
call
shlb
xlat
rclb
popf
orl
jnp
jmp
mov
jmp
lret
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
enter
les
ljmp
add
ret
pushf
mov
ret
mov
mov
loop
cmp
ret
test
in
mov
in
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
lret
xchg
call
into
fwait
jmp
iret
popf
call
iret
pushf
jmp
shll
jmp
cmpsl
in
aad
in
stos
in
lods
in
xlat
lods
in
xlat
lods
in
lods
in
stos
jmp
test
ljmp
jmp
into
pushf
call
iret
mov
out
mov
inc
mov
dec
mov
lcall
lret
out
xchg
jmp
int3
xchg
jmp
lret
xchg
out
xchg
jmp
mov
in
xchg
jmp
aam
or
add
add
mov
cld
stos
je
mov
scas
je
jecxz
test
jecxz
cmp
les
jmp
enter
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
out
xchg
jmp
int3
xchg
jmp
int
call
into
lcall
iret
popf
jmp
shll
jmp
movsl
jmp
cmpsb
jmp
test
jmp
stos
in
aad
in
stos
in
stos
jmp
stos
in
aad
in
aam
jmp
cmpsb
jmp
movsl
ljmp
jmp
into
fwait
call
iret
popf
jmp
into
lcall
int3
xchg
call
int3
cwtl
call
lret
xchg
out
xchg
jmp
jmp
mov
in
lods
int3
ret
sarb
jp
shll
jecxz
xchg
loop
cmp
les
out
mov
out
nop
out
xchg
out
xchg
out
xchg
out
xchg
out
cwtl
call
into
fwait
call
iret
popf
jmp
shll
ljmp
ljmp
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsb
ljmp
jmp
rcrb
call
into
fwait
call
into
lcall
into
lcall
int
out
xchg
out
xchg
in
mov
out
lock
add
mov
lcall
cmpsl
insb
inc
movsl
imul
jecxz
cmp
ret
xchg
in
mov
in
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
call
int
call
iret
pushf
call
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
test
jmp
test
ljmp
jmp
cmpsl
jmp
cmpsb
ljmp
jmp
movsb
ljmp
jmp
rcrb
jmp
iret
popf
jmp
into
fwait
call
int
jmp
lret
xchg
out
xchg
jmp
mov
jmp
stos
pop
xlat
ret
fcmovne
mov
inc
stos
jb
ret
mov
mov
jecxz
test
jecxz
test
in
mov
in
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
call
int
call
into
fwait
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
sahf
jmp
iret
popf
call
int
jmp
lret
xchg
out
xchg
jmp
in
lods
jmp
fld
popf
pmaxub
test
dec
lods
ja
ret
mov
jmp
les
jmp
mov
in
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
call
int
call
into
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
movsl
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
shll
ljmp
jmp
iret
popf
call
int
jmp
lret
xchg
out
xchg
jmp
leave
xchg
out
fidivl
add
add
add
mov
lods
mov
int3
mov
inc
movsl
push
in
mov
jecxz
mov
in
mov
in
in
out
xchg
out
xchg
out
xchg
out
cwtl
call
into
fwait
call
iret
sahf
jmp
shlb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
shll
jmp
rcrb
call
int
out
xchg
out
xchg
call
fdivrl
add
iret
lods
cwtl
fld
fwait
dec
mov
inc
test
mov
mov
in
mov
in
mov
in
mov
out
nop
jmp
lret
out
xchg
jmp
int3
xchg
call
into
cltd
jmp
iret
pushf
call
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
jmp
mov
jmp
shlb
jmp
into
lcall
lret
xchg
ljmp
push
loope
scas
jnp
sahf
shlb
jo
shll
jmp
mov
in
mov
in
out
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
into
lcall
iret
popf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
jmp
iret
popf
call
int
out
xchg
in
lods
jmp
loope
scas
pop
fcmovne
mov
dec
lods
je
shlb
xchg
jmp
mov
in
mov
in
nop
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int
call
into
fwait
jmp
iret
popf
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
jmp
iret
sahf
jmp
int
call
adc
add
add
enter
leave
mov
dec
mov
shlb
cwtl
jmp
mov
out
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int
call
into
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
ljmp
ljmp
ljmp
ljmp
jmp
into
fwait
jmp
fidivl
add
les
mov
jge
iret
mov
in
pushf
in
nop
out
xchg
out
xchg
out
xchg
out
xchg
out
cltd
out
lcall
iret
popf
call
rcrb
jmp
shll
jmp
shlb
jmp
shlb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
shll
jmp
iret
popf
jmp
test
out
fnstsw
add
lds
rcr
ret
shll
jns
in
pushf
jmp
lret
out
xchg
jmp
lret
xchg
out
xchg
call
into
lcall
iret
popf
jmp
shlb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
int
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
ljmp
jmp
movsl
ljmp
ljmp
ljmp
call
fdivs
xor
add
add
popf
or
iret
stos
mov
aam
xchg
shlb
jmp
int3
cwtl
jmp
int3
xchg
jmp
int3
xchg
out
cltd
call
into
pushf
call
rcrb
jmp
shll
ljmp
jmp
movsb
ljmp
jmp
movsl
jmp
cmpsb
jmp
lods
repz
lahf
in
mov
jmp
shlb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
ljmp
jmp
cmpsb
jmp
cmpsb
ljmp
ljmp
jmp
shlb
shr
lods
sbb
add
add
les
sahf
ffree
popf
call
mov
jg
loope
lcall
int3
cltd
jmp
int
call
into
pushf
jmp
rcrb
ljmp
ljmp
ljmp
jmp
movsl
ljmp
jmp
cmpsl
in
xlat
scas
out
ljmp
int3
in
mov
jmp
iret
movsb
ljmp
jmp
cmpsl
jmp
cmpsl
ljmp
jmp
test
jmp
test
jmp
test
ljmp
jmp
cmpsl
jmp
cmpsl
ljmp
ljmp
ljmp
icebp
loope
mov
loope
cmpsl
jl
leave
mov
aam
cmp
lds
out
fwait
call
iret
popf
call
rcrb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
stc
jmp
scas
jns
add
add
int3
popf
cmp
int
in
in
movsb
in
cmpsb
out
cmpsb
in
fnstenv
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsb
ljmp
in
xlat
scas
out
fdivrl
add
iret
test
std
fcmovb
xchg
xlat
mov
mov
ljmp
call
rcrb
ljmp
ljmp
jmp
movsl
jmp
cmpsb
ljmp
jmp
test
jmp
test
jmp
test
in
fdivs
mov
aad
add
add
add
add
add
into
mov
mul
shrl
jmp
fidivl
jmp
stos
jmp
stos
jmp
stos
in
aad
in
aad
jmp
stos
in
aad
in
aad
in
aad
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
out
sub
add
add
shrb
repnz
xchg
fdivrs
mov
ljmp
jmp
shll
ljmp
ljmp
jmp
cmpsl
jmp
test
jmp
test
in
aam
in
aad
in
aad
in
xlat
scas
lock
adc
out
movsl
or
out
test
out
cmpsb
in
fnstenv
jmp
stos
in
stos
in
stos
in
stos
in
stos
jmp
stos
in
stos
in
stos
in
stos
jmp
stos
in
aad
in
aad
in
aad
jmp
test
lock
push
sahf
and
iret
cmpsl
jecxz
xchg
fidivrl
mov
jmp
shll
ljmp
ljmp
jmp
cmpsl
jmp
test
jmp
test
jmp
stos
in
aad
in
aad
in
xlat
scas
icebp
loop
aam
fnstenv
add
shll
shl
shrb
jmp
shll
in
xlat
scas
in
lods
in
lods
in
lods
in
lods
jmp
lods
in
lods
in
lods
in
lods
jmp
lods
in
stos
in
stos
in
stos
in
xlat
lods
push
jecxz
lods
in
fnstenv
add
cltd
sbb
iret
cmpsb
rcr
xchg
fcmovb
mov
fidivrl
test
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
test
jmp
test
jmp
test
in
stos
in
stos
in
lods
in
xlat
scas
push
loop
call
out
test
out
test
out
stos
mul
shrl
jmp
shll
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
fnstenv
jns
add
add
cltd
push
jecxz
movsb
mov
fadd
mov
fidivrl
cmpsb
jmp
cmpsl
ljmp
jmp
cmpsl
jmp
test
jmp
stos
jmp
stos
jmp
lods
jmp
lods
in
lods
in
lods
lock
out
icebp
loop
push
out
test
out
stos
mov
shrl
jecxz
popf
jmp
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
lods
out
fidivrs
loopne
cwtl
add
int
xchg
loopne
xchg
ffree
fstpt
mov
jmp
test
jmp
stos
in
stos
jmp
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
lods
lock
div
loop
outsb
out
fidivl
add
shll
ret
in
cmpsb
jmp
int3
sahf
jmp
xchg
in
fidivl
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
push
loopne
in
fnstsw
add
lret
loopne
xchg
faddp
mov
fdivrl
cwtl
in
fsubrs
in
aad
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
out
fnstsw
mov
add
shlb
int
jmp
xchg
loopne
xchg
out
fdivrl
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
out
fidivl
mov
loope
lcall
ret
fadd
mov
ffreep
nop
in
fnstenv
in
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
hlt
out
mov
loopne
adc
add
add
into
mov
outsb
jecxz
sahf
mul
enter
rorl
out
fnstsw
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
icebp
jecxz
js
add
add
leave
lcall
les
ffree
mov
in
fnstenv
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fidivl
out
fidivrs
jecxz
pushf
or
lret
fwait
mov
ffree
mov
fstpt
test
out
fnstsw
in
fidivl
in
fidivl
in
fidivl
out
fistpll
dec
loop
lcall
xchg
ffree
mov
ffree
mov
jmp
scas
in
fsubrs
in
fnstenv
in
fnstenv
out
loopne
fnstsw
add
enter
lds
fidivrl
jl
in
fnstenv
out
out
out
push
fistpll
sbb
add
add
xchg
or
lret
pushf
aam
xchg
faddp
mov
fdivrl
cmpsl
in
fnstenv
in
fnstenv
in
fidivl
push
loope
ljmp
add
ffreep
nop
add
ret
mov
mov
jge
xlat
mov
fdivrl
mov
out
out
out
fdivrl
mov
loopne
xchg
pop
jecxz
lahf
mov
enter
les
jmp
int
out
fidivl
out
fidivl
out
fidivl
lock
imul
mov
add
rorb
fnstcw
jae
aad
insl
jmp
xchg
out
fidivrs
out
fdivrl
out
fdivrl
in
fidivl
add
xchg
add
into
mov
loopne
xchg
ffree
mov
jecxz
xchg
out
out
fidivl
out
fidivrs
xchg
out
fdivrl
add
mov
jp
mov
aam
insb
call
mov
call
fnstsw
out
fdivrl
out
fnstsw
inc
loopne
xchg
add
into
mov
cld
loope
xchg
faddp
loope
xchg
out
fdivrl
out
lock
mov
fdivrl
add
mov
jno
aam
imul
scas
data16
mov
jmp
mov
out
fnstsw
out
fnstsw
loopne
xlat
scas
daa
loop
lcall
lret
ffreep
xchg
jmp
lds
out
fdivl
lock
sbb
add
add
mov
jno
aam
push
shrl
arpl
fstpt
out
fnstsw
in
fidivl
or
add
add
enter
lret
loope
cwtl
jmp
xchg
ffreep
mov
out
fdivrl
out
fidivrs
add
add
xlat
mov
or
mov
fwait
shrl
call
lods
arpl
loope
push
fidivrs
ljmp
add
xchg
adc
xchg
fsub
xchg
cld
ffreep
std
ffree
mov
ljmp
call
xlat
mov
sbb
lods
arpl
shrb
std
aam
addr16
out
mov
out
jmp
add
add
lds
mov
rorl
faddp
mov
jmp
add
add
scas
push
adc
popa
mov
stos
pusha
mov
mov
mov
ret
in
sahf
add
incl
add
add
cld
add
incl
add
jmp
add
incl
add
incl
add
incl
add
clc
add
add
incl
add
jmp
add
add
incl
add
incl
add
add
incl
add
cld
add
add
incl
add
jmp
add
add
incl
add
incl
incl
add
incl
jg
incl
add
incl
aas
incl
add
jmp
add
add
pop
incl
add
incb
add
add
incl
add
jmp
add
add
incl
add
push
add
add
incl
add
jmp
add
add
incl
add
inc
add
add
incl
add
incl
incl
add
incl
add
add
jg
add
add
cld
add
add
add
incl
add
clc
add
add
add
incl
add
push
add
add
add
incl
add
jmp
add
add
add
incl
add
inc
add
add
add
incl
add
incl
add
incl
add
incl
add
push
add
incl
add
incb
add
add
add
incl
add
incb
add
add
addb
add
add
add
incl
pop
rolb
add
add
add
incl
pop
loopne
aas
add
add
add
incb
pop
loopne
aas
add
add
add
cld
add
loopne
jg
add
incl
add
add
loopne
jg
add
incl
add
add
loopne
jg
add
incl
add
add
loopne
jg
add
incl
add
add
rolb
add
add
addb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
inc
add
add
add
incl
add
jmp
add
adc
add
incl
add
jmp
add
sbb
add
incl
add
jmp
add
cmp
add
incl
add
jmp
add
jl
add
incl
add
jmp
add
cld
add
pop
incl
add
jmp
add
incb
add
incl
add
jmp
add
incl
add
incl
add
push
add
incl
add
push
add
incl
add
push
add
inc
add
incl
add
push
add
jmp
add
incl
add
push
add
jmp
add
incl
add
push
add
push
add
add
add
lock
clc
add
add
add
lock
cld
add
add
add
clc
add
cld
add
add
add
clc
add
incb
incl
add
clc
pop
incl
incl
add
cld
pop
incl
add
add
add
add
rolb
add
add
add
add
add
add
add
adc
add
adc
add
or
and
or
add
or
es
lsl
sbb
add
sbb
pop
sbb
add
add
add
or
add
or
sbb
add
or
push
pop
adc
pop
or
or
push
adc
or
adc
or
add
or
adc
or
adc
or
adc
or
adc
or
and
push
add
add
add
or
pop
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
es
adc
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
sub
or
dec
aaa
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pop
add
and
sub
adc
sub
adc
sub
and
push
test
sub
test
add
push
add
add
add
sub
add
sbb
add
push
pop
inc
sbb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
xor
insb
pop
xor
test
loop
je
call
xchg
js
jmp
sahf
jl
ljmp
xor
outsl
push
es
add
add
add
daa
add
add
and
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
sbb
add
push
add
add
add
add
add
add
add
dec
add
add
add
bound
add
push
adc
cwtl
jge
lcall
jg
lcall
xchg
mov
lcall
aam
inc
call
mov
cmp
repz
aaa
sbb
or
add
add
sbb
or
jb
and
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
outsb
add
add
xor
stos
jle
cmp
xchg
jnp
std
xchg
jl
cwtl
jge
pushf
jg
ljmp
xchg
cmp
rcrl
aas
aam
aas
aam
aas
call
mov
ds
shll
cmp
imul
or
es
sbb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
sub
add
xor
add
cmp
add
add
add
add
imul
add
jle
das
sbb
xchg
jnp
xchg
jl
call
jg
mov
aas
dec
fwait
cmp
shll
ds
shll
notrack
mov
cmp
rcrb
aas
jmp
and
or
mov
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
push
add
add
add
add
add
add
jbe
or
dec
ds
notb
jle
lcall
test
mov
lahf
notrack
mov
cmp
call
mov
cmp
call
mov
cmp
shll
cmp
rcrl
inc
hlt
xchg
jbe
cmp
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
imul
add
sub
cwtl
jg
lcall
adcl
mov
mov
sahf
cmp
call
mov
cmp
call
lahf
cmp
rcrb
cmp
rcrb
cmp
rcrb
cmp
rcrb
cmp
popf
dec
enter
xor
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
pop
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
addr16
add
mov
jnp
negl
test
xchg
test
pop
inc
fwait
dec
call
mov
cmp
call
mov
cmp
call
mov
cmp
shll
cmp
shll
cmp
rcrl
cmp
rcrl
inc
cli
into
movsb
push
scas
mov
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
sbb
outsl
imul
cltd
orb
test
mov
mov
mov
arpl
lret
mov
notrack
mov
cmp
call
mov
cmp
call
mov
cmp
call
mov
cmp
rcrl
cmp
rcrl
cmp
rcrb
inc
aad
pop
scas
ret
cwtl
inc
sldt
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
add
add
dec
sbb
bound
rcrb
push
jmp
mov
mov
insl
call
test
inc
aam
cmp
shll
notrack
mov
ds
aam
cmp
shll
cmp
shll
cmp
aam
cmp
rcrl
cmp
rcrb
aaa
aam
inc
mov
jg
mov
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
and
add
and
add
add
add
add
add
add
add
add
aaa
add
add
add
add
js
cmp
mov
mov
test
fs
mov
scas
gs
mov
cmp
call
mov
aas
aam
inc
call
mov
inc
aam
aas
call
mov
aas
aam
notrack
mov
cmp
aam
cmp
rcrl
cmp
rcrl
aaa
rcrb
push
jmp
mov
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
nop
ja
int3
mov
mov
cmpsl
mov
lods
xchg
imul
fdivs
aas
call
mov
aas
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
aas
call
mov
notrack
mov
cmp
call
mov
cmp
rcrl
aaa
call
sahf
ss
stos
push
in
stos
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
ss
dec
shlb
mov
test
cltd
imul
lods
jnp
fldcw
inc
aad
inc
call
mov
inc
aad
inc
call
movsb
inc
aad
inc
aad
inc
call
mov
inc
aad
inc
call
movsb
inc
aad
inc
aad
inc
call
mov
inc
aam
aas
shll
ds
shll
cmp
rcrl
cmp
rcrb
cmp
fldcw
push
xor
add
add
add
add
add
add
add
or
push
or
add
or
add
or
add
push
add
add
add
add
add
add
add
pop
inc
ss
dec
xchg
jp
leave
movsl
mov
lea
stos
xchg
popa
pushl
mov
fdivs
inc
aad
inc
movsb
inc
call
movsb
inc
aad
inc
movsb
inc
call
movsb
inc
aad
inc
movsl
inc
call
movsl
inc
aad
inc
movsl
inc
call
movsb
inc
aad
inc
movsb
inc
call
mov
inc
aad
inc
aam
inc
call
mov
cmp
call
lahf
cmp
rcrb
aaa
call
popf
ss
rcrl
arpl
sbb
push
add
sbb
adc
push
adc
or
adc
push
or
pop
movsl
mov
test
push
ljmp
xchg
arpl
mov
outsl
call
mov
fisubrl
inc
call
movsb
inc
call
movsb
inc
call
movsl
inc
call
cmpsb
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
dec
call
movsl
dec
call
cmpsb
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
aas
call
mov
cmp
rcrb
aaa
call
mov
data16
fidivl
add
push
inc
sub
push
xor
push
test
mov
lods
xchg
pop
pushl
mov
jge
fldcw
inc
movsb
inc
call
cmpsb
dec
cmpsb
dec
cmpsl
dec
call
test
test
xlat
test
call
test
xlat
test
xlat
test
call
test
xlat
test
xlat
test
call
cmpsl
dec
xlat
cmpsl
dec
xlat
cmpsl
dec
call
cmpsb
dec
cmpsb
dec
cmpsb
dec
movsl
inc
call
movsb
inc
aad
inc
aad
inc
call
mov
aas
aam
cmp
rcrb
aaa
call
movsl
inc
cli
fnsave
pop
add
add
add
cmp
mov
push
fldt
xchg
pop
mov
gs
mov
mov
fldcw
inc
aad
dec
cmpsl
dec
call
cmpsl
dec
xlat
test
xlat
test
dec
xlat
stos
push
xlat
stos
push
call
stos
push
xlat
stos
push
xlat
stos
push
call
stos
push
xlat
test
push
call
test
dec
xlat
test
call
test
test
cmpsl
dec
xlat
cmpsb
dec
call
cmpsb
dec
movsl
inc
aad
inc
call
movsb
inc
aam
inc
aam
inc
call
mov
cmp
rcrl
aaa
xlat
cmpsl
dec
neg
mov
push
add
add
xchg
push
xorb
pop
pushl
sahf
imul
test
fstpt
push
call
cmpsl
dec
call
test
fsubrs
push
fldcw
push
fsubrs
push
fldcw
fldcw
push
fsubrs
fsubrs
push
fldcw
push
fsubrs
push
call
test
dec
call
test
dec
call
test
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
inc
call
movsb
inc
call
mov
aas
call
mov
cmp
rcrl
push
in
fidivl
dec
push
xchg
jnp
adc
push
jle
xchg
pop
divb
pushf
data16
mov
scas
jge
fnstcw
push
xlat
cmpsl
dec
fsubrs
push
fsubrs
push
fldcw
fldcw
pop
fldcw
pop
fldcw
pop
fisubrl
pop
fldcw
pop
fldcw
push
fldcw
push
fsubrs
fsubrs
push
xlat
test
dec
call
cmpsl
dec
cmpsl
dec
cmpsb
dec
call
movsb
inc
aad
inc
aad
inc
call
mov
cmp
aam
cmp
fldcw
arpl
add
add
xchg
pop
lea
fs
mov
movsb
jno
lret
mov
fstpt
push
call
test
fldcw
push
fldcw
push
fisubrl
pop
fldt
pop
fldt
pop
pop
fidivl
pop
fidivl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fsubrs
fldcw
xlat
stos
push
call
stos
push
xlat
test
dec
call
cmpsb
dec
movsl
inc
aad
inc
call
mov
ds
shll
ds
addr16
mov
xchg
pop
mov
lcall
mov
stos
js
iret
mov
fistpll
push
fsubrs
push
fldcw
pop
fidivl
pop
popa
fdivl
fdivl
fdivl
arpl
fdivl
fdivl
fdivl
popa
fdivl
pusha
pop
fisubrl
pop
fisubrl
pop
fldcw
push
fsubrs
push
call
test
dec
call
cmpsl
dec
call
movsl
inc
call
mov
inc
call
mov
aas
fidivs
and
add
add
cltd
pop
mov
mov
movsl
jo
lods
jnp
sarl
ja
fsubrs
push
fisubrl
pop
fidivl
pusha
fdivl
gs
fdivl
fnsave
fnsave
fnsave
addr16
fnsave
fnsave
data16
fnsave
fdivl
pop
pop
fisubrl
pop
fldcw
push
fsubrs
push
xlat
test
dec
cmpsb
inc
aad
inc
call
mov
cmp
cmpsb
dec
clc
push
push
mov
lcall
mov
cmpsl
jno
lods
jp
mov
je
fldcw
push
fisubrl
pop
fdivl
fdivl
fnsave
imul
fnsave
push
fidivs
imul
mov
fnsave
imul
mov
fidivs
push
fnsave
imul
fdivl
gs
fdivl
pusha
pop
fisubrl
pop
fldcw
fsubrs
dec
cmpsb
dec
call
movsl
inc
aam
inc
aam
aas
call
stos
push
cmc
fnsave
add
shlb
cs
popf
popa
mov
test
dec
mov
fdivrs
insl
fisubrl
fnsave
data16
fnsave
imul
fidivs
insb
fidivs
insb
fistpll
insl
fistpll
outsb
fistpll
outsl
fistpll
outsl
fistpll
jno
loopne
jno
loopne
jno
fistpll
outsb
fistpll
imul
mov
fidivs
data16
fnsave
pop
fdivl
pop
fisubrl
push
fsubrs
push
call
cmpsl
dec
call
cmpsb
dec
call
movsb
inc
call
mov
push
fistpll
pop
pop
mov
cltd
pop
inc
mov
pop
les
mov
jno
lret
fdivrs
fldcw
pop
fdivl
fs
fnsave
imul
fidivs
insb
fidivs
imul
mov
insb
fidivrs
insl
fidivrs
outsb
fistpll
jo
fidivrs
jno
fistpll
jne
loopne
jbe
loopne
jne
loopne
jne
loopne
jne
fistpll
jb
fidivrs
outsb
fidivs
imul
fdivl
fdivl
pusha
pop
fisubrl
push
fldcw
fsubrs
dec
call
movsb
inc
aad
inc
fdivl
je
fidivl
add
mov
pop
inc
mov
pop
sarb
mov
outsb
inc
lods
jns
fidivrl
fisubrl
pop
data16
fidivs
imul
mov
insl
fidivs
insl
fidivs
insb
fidivs
insb
fidivs
imul
mov
outsb
fistpll
jo
fistpll
je
loopne
ja
loope
jns
loope
jp
loope
jp
loope
jp
loope
jp
loope
js
loopne
jbe
fistpll
jno
fistpll
insb
fnsave
addr16
fdivl
fdivl
popa
fdivl
pop
fisubrl
pop
fisubrl
push
xlat
stos
dec
call
cmpsl
dec
aad
inc
cmpsb
dec
std
fnsave
popa
sub
add
add
xchg
push
push
mov
push
icebp
mov
sahf
popa
inc
movsb
imul
scas
jbe
fnstcw
popa
fisubrl
fnsave
push
fidivrs
outsl
fistpll
jo
fidivrs
insb
fidivs
insb
fistpll
jo
loopne
jne
loope
js
loop
jnp
loope
js
loopne
jne
loopne
jno
loopne
jo
loopne
jb
loopne
jne
loope
jns
loop
jnp
loop
jge
jecxz
jg
jecxz
jg
jecxz
jg
loop
jle
loope
jp
loope
js
loopne
jae
fistpll
insl
fidivs
addr16
fdivl
fdivl
popa
fdivl
pop
pop
fldt
pop
fisubrl
fsubrs
dec
call
cmpsl
dec
fidivs
popa
sbb
add
add
xchg
push
gs
push
loopne
cwtl
pop
mov
mov
jo
fdivs
arpl
fidivl
arpl
fdivl
insl
fidivrs
jo
fistpll
outsl
fidivrs
insb
fnsave
jne
in
mov
out
xchg
in
int
lret
out
lahf
fsub
into
mov
jmp
into
sahf
in
cltd
in
xchg
jmp
roll
loopne
jae
loope
js
loope
jnp
loop
jle
jecxz
cmp
jecxz
cmp
sarb
mov
js
loopne
jae
fidivrs
imul
mov
fidivs
insl
fnsave
gs
fdivl
pop
fidivl
pop
pop
fidivl
pop
fldcw
push
fsubrs
dec
fsubrs
jo
add
mov
push
outsl
mov
push
out
xchg
push
mov
popf
pop
inc
movsl
imul
pop
fnsave
fidivrs
jae
loopne
je
loopne
jae
fistpll
outsl
fidivs
jb
out
nop
jmp
cmpsl
jecxz
shll
xor
les
xor
iret
movsb
test
iret
movsl
in
in
movsl
jmp
shlb
jmp
into
mov
jmp
mov
jbe
loop
jnp
jecxz
jle
jecxz
cmp
ret
cmp
ret
jecxz
jg
loop
jl
loope
ja
fistpll
je
jecxz
cmp
int3
xchg
out
popf
jmp
iret
lahf
jmp
into
popf
jmp
int
jmp
jmp
mov
data16
fisubrl
pop
pop
pop
fldcw
push
fsubrs
dec
fldcw
jo
fdivl
add
mov
cwtl
pop
jge
xchg
push
mov
push
mov
push
mov
mov
addr16
popa
fnsave
outsb
jmp
mov
jbe
loope
ja
loopne
jbe
fistpll
outsl
fidivs
test
in
xlat
scas
shr
lods
push
les
add
leave
xchg
inc
in
movsl
out
iret
cmpsb
in
cmpsb
jmp
shlb
in
xchg
jmp
mov
ja
loop
jl
jecxz
jg
jecxz
cmp
roll
loope
jp
loopne
jne
jecxz
xor
lret
out
pushf
push
in
lcall
into
mov
cmc
in
movsb
in
movsl
call
shll
fnsave
pop
pop
pop
fisubrl
pop
fsubrs
dec
fldcw
jae
fdivl
add
pushf
pop
mov
xchg
push
pushl
xchg
push
inc
mov
pop
fidivl
fnsave
jno
loopne
ja
loope
jns
loope
jp
loopne
jns
fistpll
fidivrs
xchg
cld
out
fnstsw
xor
add
add
shlb
in
mov
jecxz
lahf
jecxz
popf
jmp
ret
xchg
loopne
jbe
loope
jp
loop
jge
loop
jge
loop
jge
loop
jp
loopne
ja
loop
jg
in
xchg
loop
sbbl
add
loop
mov
in
movsb
fucom
iret
mov
jmp
iret
mov
out
cltd
jmp
mov
pop
pop
pop
pop
fsubrs
push
fidivl
jno
fidivl
add
ret
add
mov
cltd
pop
pushl
xchg
push
mov
lods
pop
fldcw
popa
fidivrs
je
loope
jp
loop
jle
jecxz
jle
loop
jge
loope
jns
fistpll
insb
jmp
lret
xchg
cld
lock
stos
jmp
add
add
xchg
and
lret
sahf
mov
loop
fwait
jmp
leave
cltd
jmp
enter
mov
loopne
js
loopne
ja
loope
jns
loope
jnp
loope
jp
loope
ja
loope
jns
in
mov
jecxz
adcl
loope
mov
jecxz
xchg
dec
in
mov
jmp
int
jmp
int3
sahf
jmp
int
jmp
into
sahf
jmp
mov
pop
popa
fnsave
pop
fldcw
inc
shlb
shlb
mov
xchg
pop
mov
stos
pop
fidivl
fidivrs
ja
loop
jle
jecxz
test
in
test
jecxz
cmp
sarb
mov
outsb
in
mov
icebp
loope
movsb
jmp
add
add
rorl
faddp
xchg
neg
les
ffree
mov
ffree
mov
loopne
jl
loopne
je
loopne
jbe
loopne
ja
loope
jbe
loopne
je
loop
jge
in
mov
add
add
xchg
sbb
lret
loope
fwait
sti
loope
lcall
xchg
in
pushf
loopne
jne
fldt
pop
fnsave
data16
fdivl
pop
fldcw
pusha
iret
add
shll
cmp
mov
fadd
cmpsl
jo
mov
lcall
lret
cmpsl
popa
fdivl
outsb
jmp
mov
cmp
mov
out
nop
out
xchg
out
nop
jmp
mov
jecxz
cmp
mov
cmp
jmp
add
add
mov
mov
mov
xchg
fidivrl
cmp
mov
jnp
loopne
jae
loopne
jne
loopne
jne
loopne
je
loopne
jae
loope
jge
loop
andb
add
add
les
int3
faddp
xchg
faddp
xchg
fadd
mov
fadd
mov
loopne
mov
fidivs
pop
fnsave
data16
fidivs
push
fdivl
push
fldcw
pop
mov
scas
jge
lret
mov
out
test
imul
mov
scas
imul
loope
jp
in
test
out
call
rcrb
jmp
int3
xchg
jmp
enter
lds
stc
repz
imul
add
aad
addb
mov
jle
aad
jl
aad
jp
aad
js
xlat
mov
fidivrs
jmp
mov
jne
loopne
je
loopne
jae
loope
jge
loop
test
fstpt
mov
mov
fidivrl
xchg
fdivrs
cmp
mov
pusha
fdivl
addr16
fidivs
insl
fidivs
addr16
fdivl
push
fisubrl
xchg
fnsave
add
enter
int
mov
lds
imul
pushf
popa
mov
lods
push
loopne
jbe
jecxz
jg
in
mov
out
xchg
jmp
shlb
jmp
lret
xchg
in
out
xchg
out
fnstsw
push
iret
mov
add
mov
jne
mov
cmc
iret
scas
jo
shrb
outsb
call
mov
loop
xchg
in
test
jecxz
cmp
roll
loop
jl
loop
sbbl
mov
orl
mov
shlb
js
fdivl
fistpll
jae
fistpll
push
fldcw
cmc
outsb
pop
leave
mov
es
mov
jnp
mov
popf
arpl
mov
stos
imul
jecxz
cmp
mov
call
shll
ljmp
jmp
lret
xchg
in
mov
jmp
fidivl
add
lret
adc
test
push
dec
test
addr16
mov
in
xchg
out
jmp
leave
out
out
jmp
in
mov
shlb
je
int
jb
int
jo
int
insl
dec
lods
insb
xlat
mov
fdivl
push
loopne
jne
loopne
ja
loopne
jbe
fidivrs
fs
fisubrl
push
fldcw
data16
add
add
mov
pop
sarb
jg
shlb
mov
test
jp
jecxz
cmp
enter
int
ljmp
ljmp
jmp
lret
xchg
jmp
mov
ljmp
push
test
les
inc
movsb
popa
inc
movsl
popa
dec
cmpsb
popa
fdivrl
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
out
jmp
enter
enter
add
add
lods
jb
enter
test
inc
cmpsb
push
inc
cmpsb
fs
mov
jmp
mov
jnp
jecxz
cmp
lds
jmp
lds
jmp
mov
push
pusha
neg
mov
pop
leave
mov
push
sarb
cmp
cmpsl
jae
mov
cwtl
pop
inc
movsl
push
jecxz
cmp
mov
out
xchg
ljmp
ljmp
jmp
lret
xchg
in
mov
jmp
cmpsb
fucomp
shlb
mov
fwait
pop
std
mov
popf
pop
inc
mov
gs
int
out
xchg
out
xchg
call
int
out
xchg
jmp
lret
xchg
in
nop
cmc
out
xchg
dec
mov
sahf
pop
cld
mov
sahf
pop
mov
mov
cmp
in
mov
out
xchg
jmp
int3
xchg
out
xchg
out
xchg
jmp
mov
loop
cmp
mov
jl
loop
xchg
add
add
test
mov
ret
mov
cltd
pop
inc
mov
jg
loop
cmp
out
xchg
jmp
shll
call
lret
xchg
in
ljmp
cmp
add
add
xchg
push
loop
xchg
push
mov
fwait
pop
inc
mov
mov
call
int3
cltd
call
rcrb
call
int3
xchg
out
xchg
out
xchg
cmpsb
mov
pop
dec
mov
pop
lock
pop
mov
pop
mov
fwait
pop
fstpt
in
mov
out
xchg
jmp
int3
xchg
out
xchg
out
xchg
jmp
mov
loop
cmp
mov
xchg
loope
jle
into
mov
mov
ret
mov
cltd
pop
mov
mov
cmp
lds
jmp
rcrb
jmp
lret
xchg
jmp
enter
iret
popf
jecxz
into
lahf
dec
mov
pop
pop
lods
push
cmpsb
scas
push
pushl
xchg
push
mov
mov
jmp
shlb
jmp
shll
ljmp
call
int
jmp
lret
jmp
add
add
push
in
scas
nop
push
pushl
xchg
push
pushl
mov
xchg
in
mov
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
lret
in
mov
jecxz
cmp
out
xchg
xchg
jecxz
test
add
add
mov
mov
les
insb
mov
fwait
pop
fdivrs
cmp
lds
call
iret
popf
call
into
fwait
jmp
lret
xchg
in
nop
out
xchg
clc
out
pushf
jl
lret
mov
pop
and
xchg
mov
stos
mov
mov
push
dec
scas
js
out
cmpsl
jmp
shlb
jmp
test
in
stos
jmp
test
ljmp
call
shlb
sbb
add
add
mov
cmpsl
mov
stos
mov
lods
mov
mov
push
fstpt
mov
in
mov
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
lds
in
mov
in
jae
add
add
mov
sti
lds
mov
cwtl
pop
aam
jl
jecxz
cmp
les
out
xchg
call
into
pushf
jmp
int3
xchg
out
xchg
out
out
lcall
add
add
orb
orl
movsb
xchg
stos
lea
les
lods
ljmp
ljmp
in
xlat
lods
in
fsubrs
in
xlat
lods
jmp
test
ljmp
call
shlb
adc
add
add
orl
test
movsl
xchg
mov
mov
push
loopne
mov
in
mov
in
mov
out
xchg
jmp
lret
xchg
out
xchg
in
jmp
lds
out
xchg
out
lret
sarl
nop
lock
scas
jle
shlb
pushl
mov
jmp
ret
jecxz
test
in
mov
out
xchg
jmp
int
call
into
cltd
jmp
int3
xchg
jmp
lret
xchg
jmp
enter
enter
int3
fwait
stos
shll
inc
lcall
sti
lcall
ljmp
mov
mov
ljmp
ljmp
in
xlat
lods
in
fdivs
in
fnstenv
in
stos
jmp
cmpsb
ljmp
jmp
shrl
add
jg
fwait
jle
lcall
dec
jmp
push
jmp
mov
out
nop
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
jmp
lds
ljmp
sbb
iret
mov
xchg
ror
mov
inc
cmpsl
jb
mov
cltd
pop
dec
lods
jo
in
xchg
jecxz
cmp
in
jmp
lret
out
xchg
call
int3
xchg
out
xchg
out
xchg
jmp
leave
out
nop
jecxz
xchg
mov
fdivrs
jnp
lods
js
mov
jns
mov
js
cmc
xchg
js
lcall
lea
mov
aad
in
fdivs
jmp
shlb
in
aad
in
xlat
scas
in
fdivs
in
fnstenv
in
xlat
lods
jmp
test
ljmp
jmp
xlat
mov
jmp
mov
in
sahf
add
add
add
movsl
jno
lahf
test
xchg
jnp
call
jle
popf
orl
fstpt
mov
in
out
xchg
out
xchg
jmp
lret
out
xchg
in
mov
jecxz
test
jecxz
test
in
lods
mov
rcrb
add
mov
xchg
ret
stos
jbe
mov
fwait
pop
inc
cmpsl
imul
mov
loop
cmp
les
jmp
leave
nop
out
xchg
out
xchg
jmp
int3
xchg
out
xchg
out
xchg
jmp
lret
out
nop
out
nop
loope
out
mov
push
stos
nop
pop
mov
movsb
mov
xchg
push
mov
mov
test
ljmp
jmp
shlb
jmp
test
in
fsubrs
in
fnstenv
in
fsubrs
jmp
stos
jmp
test
ljmp
jmp
rcrb
lret
movsl
jno
cltd
adc
add
add
add
add
lods
jp
mov
jp
in
jns
call
jl
lods
nop
pop
call
mov
xchg
out
nop
jmp
lret
out
xchg
out
xchg
jmp
lret
in
nop
in
mov
jecxz
test
out
xchg
ljmp
add
rcrl
lds
mov
mov
mov
loop
cmp
ret
test
in
mov
in
mov
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
lret
out
xchg
jmp
enter
cltd
sahf
mov
call
shll
jmp
rcrb
ljmp
jmp
cmpsl
in
test
in
xlat
scas
in
fsubrs
in
fsubrs
in
xlat
lods
in
stos
in
aad
jmp
cmpsb
ljmp
jmp
into
pushf
call
iret
test
fadd
cltd
test
mov
xchg
jnp
in
xchg
jp
xchg
jp
lcall
mov
xchg
jmp
int3
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
jmp
lds
jmp
aad
cmp
add
add
lds
std
enter
ret
mov
popf
pusha
loop
jmp
roll
in
xchg
in
mov
in
mov
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
lret
xchg
out
xchg
out
xchg
jmp
lret
out
xchg
jmp
lret
out
xchg
call
int3
xchg
call
int3
cwtl
call
iret
popf
ljmp
ljmp
ljmp
in
aad
in
stos
in
stos
in
lods
in
lods
in
lods
in
xlat
lods
in
stos
jmp
stos
jmp
test
ljmp
ljmp
call
into
pushf
jmp
cmpsb
ljmp
fcmovnb
mov
fadd
lahf
jmp
shrl
out
xchg
jmp
lret
out
xchg
call
int3
xchg
out
xchg
call
lret
out
mov
in
mov
in
mov
jmp
test
add
add
add
mov
cmc
lret
mov
inc
test
inc
mov
pop
ffreep
mov
jecxz
cmp
roll
in
mov
in
mov
out
jmp
leave
xchg
in
xchg
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
lret
xchg
out
xchg
jmp
int3
xchg
out
cwtl
call
int
call
iret
pushf
jmp
rcrb
ljmp
jmp
movsl
jmp
cmpsb
jmp
cmpsl
in
aad
jmp
stos
jmp
stos
in
stos
jmp
stos
jmp
stos
in
stos
jmp
stos
jmp
stos
jmp
test
jmp
movsl
jmp
movsb
ljmp
jmp
into
pushf
call
int
jmp
rcrb
jmp
int
out
xchg
out
xchg
jmp
lret
xchg
out
xchg
call
int3
xchg
out
xchg
out
xchg
jmp
leave
xchg
in
mov
in
mov
out
nop
in
fsubrs
add
leave
cmpsb
inc
aad
cltd
ljmp
je
shll
fstpt
test
jecxz
cmp
les
jmp
mov
out
mov
out
nop
jmp
leave
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
jmp
int
jmp
int
call
into
fwait
call
iret
popf
jmp
rcrb
ljmp
ljmp
jmp
cmpsb
jmp
cmpsl
jmp
test
in
aad
in
aad
in
aad
in
stos
in
test
in
stos
in
test
in
aam
in
aam
jmp
cmpsb
jmp
movsl
ljmp
ljmp
jmp
into
pushf
call
int
call
int
jmp
int
call
int
call
int
call
int3
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
enter
lds
out
fdivrl
add
mov
lahf
rcl
mov
jns
ret
cmpsb
insb
mov
mov
jmp
lds
jecxz
test
in
mov
in
mov
in
jmp
enter
leave
nop
out
xchg
jmp
lret
out
xchg
call
int3
xchg
call
int
call
into
pushf
call
iret
popf
jmp
shlb
ljmp
ljmp
ljmp
jmp
cmpsl
ljmp
jmp
test
ljmp
jmp
test
jmp
test
ljmp
jmp
cmpsl
ljmp
jmp
movsb
ljmp
ljmp
jmp
rcrb
call
iret
popf
call
into
fwait
call
into
fwait
call
into
lcall
int3
xchg
out
xchg
jmp
leave
nop
in
in
mov
jmp
test
lock
add
mov
movsb
rcl
xchg
dec
mov
inc
test
inc
mov
jp
in
loop
cmp
ret
test
in
xchg
in
mov
in
mov
in
mov
in
nop
out
xchg
jmp
lret
out
xchg
call
int3
xchg
call
int
call
iret
pushf
call
iret
sahf
jmp
shlb
ljmp
ljmp
ljmp
jmp
cmpsb
ljmp
jmp
cmpsl
ljmp
jmp
cmpsl
ljmp
ljmp
ljmp
jmp
movsl
ljmp
ljmp
jmp
shll
call
iret
sahf
call
iret
popf
jmp
into
pushf
call
int
jmp
int3
cltd
out
xchg
out
xchg
jmp
leave
nop
in
in
in
fnstenv
das
sarl
lods
ret
int
cmp
stos
jb
ret
movsb
push
jmp
mov
loop
cmp
ret
test
jecxz
xchg
in
mov
in
mov
in
out
nop
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
int3
xchg
call
int
call
iret
pushf
jmp
iret
sahf
jmp
shlb
ljmp
ljmp
ljmp
jmp
movsl
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
ljmp
ljmp
jmp
shll
jmp
iret
lahf
jmp
iret
sahf
jmp
iret
popf
jmp
into
lcall
int3
xchg
out
xchg
jmp
leave
xchg
in
call
fidivrs
aad
xchg
or
shll
sti
sarl
js
lds
outsl
jmp
enter
les
jmp
les
jmp
mov
out
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
call
int
call
int
call
iret
pushf
jmp
iret
sahf
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
popf
call
into
lcall
int3
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
ljmp
sub
movsl
add
rclb
fmul
movsl
cmc
sarl
jnp
lds
outsb
jmp
lds
in
xchg
in
mov
in
mov
in
mov
in
mov
out
nop
out
xchg
jmp
lret
out
xchg
call
int3
cwtl
call
int
call
iret
pushf
jmp
rcrb
jmp
shll
ljmp
jmp
mov
ljmp
ljmp
jmp
movsb
ljmp
jmp
movsl
ljmp
ljmp
ljmp
jmp
movsl
ljmp
jmp
movsb
ljmp
ljmp
jmp
shll
jmp
rcrb
call
into
fwait
call
int3
xchg
out
xchg
jmp
leave
xchg
in
in
xlat
lods
lock
xlat
scas
popa
sarl
pop
fmulp
test
dec
mov
inc
stos
outsl
dec
test
in
mov
in
xchg
jecxz
mov
in
mov
out
mov
in
mov
in
nop
out
xchg
jmp
lret
xchg
out
xchg
out
xchg
jmp
int3
cwtl
call
int
call
iret
pushf
jmp
rcrb
jmp
shlb
jmp
shll
ljmp
ljmp
ljmp
ljmp
jmp
movsb
ljmp
ljmp
ljmp
jmp
movsl
ljmp
jmp
movsb
ljmp
ljmp
jmp
shll
jmp
rcrb
call
iret
fwait
jmp
int
out
xchg
out
xchg
jmp
lret
in
out
fdivrl
cmp
add
add
mov
loopne
rcll
leave
lods
jae
test
fcmovb
mov
in
mov
in
mov
in
mov
in
mov
in
jmp
leave
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
int
call
iret
fwait
jmp
rcrb
jmp
rcrl
ljmp
ljmp
jmp
mov
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsb
jmp
mov
jmp
mov
jmp
mov
jmp
shll
jmp
iret
pushf
call
int
jmp
int3
xchg
jmp
lret
xchg
call
loopne
mov
fcmovne
mov
ret
shlb
jbe
test
fnstcw
in
mov
in
mov
in
mov
in
mov
in
in
xchg
out
xchg
jmp
lret
xchg
out
xchg
call
int
call
into
lcall
iret
pushf
jmp
rcrb
jmp
shll
jmp
shll
jmp
shll
jmp
shll
ljmp
ljmp
ljmp
jmp
movsl
ljmp
jmp
movsl
ljmp
jmp
movsb
ljmp
jmp
mov
ljmp
ljmp
ljmp
jmp
iret
pushf
call
int
out
xchg
jmp
lret
jmp
add
leave
mov
fld
fwait
call
mov
jns
test
call
mov
xchg
in
mov
in
mov
in
in
jmp
leave
xchg
out
xchg
out
xchg
jmp
lret
xchg
out
xchg
call
int
call
int
call
rcrb
jmp
shll
jmp
shlb
jmp
shlb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
movsb
ljmp
jmp
movsl
ljmp
jmp
movsb
ljmp
jmp
movsb
ljmp
ljmp
ljmp
jmp
rcrb
call
int
call
lret
xchg
in
stos
out
fdivl
add
leave
mov
mov
popf
call
mov
jl
leave
stos
outsl
call
mov
fwait
jmp
mov
out
jmp
enter
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
into
cltd
jmp
iret
pushf
jmp
iret
sahf
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
jmp
mov
ljmp
jmp
rcrb
jmp
into
lcall
into
lcall
fdivl
add
ret
cwtl
add
into
stos
xchg
fcmovnb
sahf
call
mov
jg
lret
call
mov
in
pushf
in
jmp
enter
enter
lret
out
xchg
out
xchg
out
xchg
jmp
int3
xchg
out
cwtl
call
int
call
into
pushf
call
rcrb
jmp
shll
jmp
shll
jmp
shlb
jmp
shlb
jmp
shll
jmp
shlb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
movsb
ljmp
ljmp
jmp
shll
jmp
rcrb
call
into
cltd
jmp
fdivrl
add
int3
cmpsb
jae
enter
mov
cmp
scas
jne
shlb
mov
jmp
enter
leave
xchg
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
int
out
cltd
call
into
fwait
call
iret
popf
call
rcrb
jmp
shll
jmp
shll
jmp
shlb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
ljmp
jmp
movsl
ljmp
ljmp
ljmp
jmp
shlb
call
iret
popf
call
aam
out
fidivrs
add
int
dec
mov
call
mov
jp
iret
mov
jmp
int
jmp
leave
xchg
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
into
pushf
call
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
int
jmp
aam
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
ljmp
jmp
fdivs
pop
loopne
test
cld
fld
xchg
sarl
jge
into
mov
loop
popf
out
xchg
jmp
lret
out
xchg
out
xchg
jmp
int3
xchg
out
cwtl
call
int
call
iret
popf
call
rcrb
jmp
shll
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
jecxz
lahf
jmp
int
jmp
shll
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
ljmp
jmp
cmpsb
ljmp
jmp
movsb
ljmp
ljmp
ljmp
jmp
shlb
out
fidivl
cmp
add
add
into
test
lock
lcall
mov
dec
mov
loope
pushf
call
lret
xchg
out
xchg
out
xchg
jmp
int3
cwtl
out
cltd
call
into
pushf
call
rcrb
jmp
shlb
ljmp
jmp
shlb
ljmp
ljmp
jmp
movsl
ljmp
in
xlat
scas
jmp
iret
mov
in
mov
out
mov
ljmp
ljmp
ljmp
jmp
cmpsl
ljmp
jmp
cmpsl
ljmp
jmp
cmpsb
ljmp
jmp
cmpsb
ljmp
ljmp
ljmp
jmp
shlb
out
fidivrs
movsl
or
iret
stos
loope
enter
rclb
shll
ljmp
jmp
int3
cwtl
jmp
int
jmp
into
cltd
call
into
pushf
jmp
iret
popf
jmp
shll
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
ljmp
icebp
jmp
lret
in
lahf
jmp
into
mov
jmp
into
mov
in
stos
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
ljmp
ljmp
ljmp
ljmp
icebp
loop
cltd
in
fdivs
add
ret
jecxz
lods
mov
fcmovb
xchg
aad
xchg
shlb
nop
jmp
cmpsl
jmp
int3
cwtl
out
lcall
into
fwait
call
iret
popf
call
rcrb
jmp
shll
ljmp
ljmp
jmp
movsl
ljmp
jmp
cmpsb
ljmp
jmp
cmpsb
in
fdivs
xchg
jmp
leave
cltd
jnp
int3
popf
repz
mov
in
movsb
in
movsl
in
xlat
mov
jmp
stos
ljmp
ljmp
jmp
test
ljmp
ljmp
jmp
test
ljmp
jmp
cmpsl
ljmp
jmp
cmpsb
ljmp
jmp
movsb
ljmp
out
fidivl
jne
xlat
lods
add
add
add
shrl
fadd
xchg
mov
cmp
mov
lods
jmp
int
out
pushf
jmp
iret
popf
call
rcrb
call
shll
ljmp
ljmp
ljmp
jmp
cmpsb
ljmp
jmp
cmpsl
ljmp
in
fdivs
mov
shrl
add
into
mov
mov
into
mov
in
cmpsb
in
movsl
jmp
fidivl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsb
ljmp
ljmp
lock
dec
in
mov
loope
movsl
std
ffree
cltd
fnstcw
test
mov
lods
jmp
iret
popf
jmp
rcrb
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
in
fdivs
shr
fdivs
add
iret
mov
enter
jmp
shll
jmp
shll
in
jmp
test
jmp
stos
jmp
stos
jmp
stos
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
test
repnz
lret
mov
add
aam
pop
loop
cmpsb
cmc
faddp
fwait
fcmovb
mov
xlat
mov
cmp
aam
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
in
aad
jmp
test
in
aam
in
fsubrs
fsubr
add
into
mov
hlt
out
test
out
stos
jmp
shrl
in
fnstsw
jmp
test
in
stos
jmp
stos
jmp
stos
in
stos
jmp
stos
jmp
stos
in
stos
jmp
stos
jmp
stos
in
stos
jmp
test
in
aad
jmp
test
in
aad
jmp
cmpsl
in
fsubrs
stos
in
fidivl
add
shll
call
fcmovnb
nop
fnstcw
cmp
shll
jmp
shll
jmp
shlb
ljmp
ljmp
ljmp
jmp
test
jmp
test
jmp
test
jmp
test
in
aad
push
loopne
jmp
fdivrl
push
out
cmpsb
pop
in
movsb
pushf
out
test
jmp
shrb
out
test
in
xlat
scas
jmp
stos
in
stos
jmp
stos
jmp
stos
in
lods
jmp
stos
jmp
stos
in
lods
jmp
stos
jmp
stos
in
stos
jmp
stos
jmp
stos
in
stos
jmp
test
in
aad
jmp
cmpsl
out
fdivl
xchg
add
add
enter
shrb
ffree
xchg
fidivrl
test
in
mov
ljmp
ljmp
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
in
aam
in
aad
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
xlat
scas
push
loope
stc
lock
outsl
out
cmpsl
sbb
out
stos
cld
out
stos
jmp
shrb
jmp
fidivrs
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
lods
in
stos
in
stos
in
stos
push
loope
std
repnz
xor
add
add
enter
iret
cmpsl
ret
sahf
ffree
xchg
fidivrl
test
loop
pushf
in
lods
ljmp
ljmp
jmp
cmpsb
ljmp
jmp
test
ljmp
jmp
test
in
stos
jmp
stos
jmp
stos
in
lods
in
lods
lock
pushf
out
fidivrs
add
shrl
inc
out
stos
shrl
in
movsl
in
mov
out
fdivl
jmp
lods
jmp
lods
in
xlat
lods
jmp
lods
jmp
lods
in
xlat
lods
jmp
lods
jmp
lods
in
xlat
lods
jmp
lods
jmp
lods
in
xlat
lods
jmp
lods
jmp
lods
in
lods
in
xlat
scas
icebp
loope
lock
fidivrs
add
enter
iret
cmpsb
mov
lret
faddp
xchg
fcmovnb
mov
fidivrl
cwtl
in
fdivs
ljmp
ljmp
jmp
cmpsl
jmp
test
jmp
test
in
aad
jmp
stos
jmp
stos
in
stos
in
stos
in
lods
in
stos
out
fnstsw
scas
lock
push
out
cmpsl
pop
out
stos
je
shrl
out
cmpsb
in
lahf
jmp
into
mov
in
fdivs
in
xlat
scas
in
fsubrs
in
xlat
scas
in
fsubrs
in
xlat
scas
in
fsubrs
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
lods
in
lods
out
fidivl
ret
loopne
cltd
or
into
movsl
nop
loope
popf
cld
faddp
xchg
fadd
mov
fstpt
nop
in
fdivs
jmp
cmpsl
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
stos
in
stos
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
lods
out
fdivrl
mov
out
cmpsl
add
shrl
sti
out
cmpsl
jmp
into
mov
jmp
into
mov
in
fnstenv
in
fdivs
in
fdivs
in
fdivs
in
fsubrs
in
fsubrs
in
xlat
scas
in
xlat
scas
in
xlat
scas
out
fidivrs
loopne
cwtl
add
loope
pushf
neg
lds
fdivrl
jmp
scas
jmp
stos
jmp
test
jmp
test
jmp
stos
jmp
stos
in
lods
in
lods
in
xlat
lods
in
lods
in
xlat
lods
in
xlat
scas
in
xlat
lods
out
in
fidivrs
add
shrl
int
shrl
jmp
lret
ffreep
xchg
jmp
fidivrs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fnstenv
repnz
inc
loope
fwait
pop
loope
fwait
jmp
lds
fadd
mov
faddp
mov
jmp
lods
in
aad
jmp
stos
jmp
stos
in
lods
jmp
lods
jmp
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
repz
icebp
lock
pop
in
movsl
add
out
cmpsl
jmp
loop
pushf
loopne
xchg
loopne
xchg
in
fidivl
in
fnstenv
in
fdivs
in
fdivs
in
fnstenv
in
fdivs
in
fdivs
out
fidivl
fucomp
fdivrl
add
leave
cltd
inc
loope
fwait
loope
xchg
faddp
mov
ffree
mov
ffree
mov
call
xlat
scas
in
stos
in
stos
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fdivs
out
cmc
jmp
mov
add
iret
mov
jl
into
mov
jmp
xchg
faddp
mov
loope
xchg
out
fidivrs
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
push
in
mov
loope
cltd
das
loope
fwait
xlat
loopne
xchg
faddp
ffree
mov
fdivrl
sahf
in
fdivs
in
lods
in
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fnstenv
repz
mov
fistpll
add
int
adc
into
mov
loopne
xchg
faddp
mov
fstpt
fwait
icebp
loope
in
fidivl
out
fidivl
in
fnstenv
in
fnstenv
out
fidivl
in
fnstenv
sti
lock
sub
add
add
leave
cltd
and
lret
fwait
int3
loopne
xchg
faddp
nop
ffree
mov
fdivrl
lcall
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fdivs
in
fnstenv
repz
mov
jecxz
fwait
inc
loop
cltd
fsubp
xchg
ffree
mov
fstpt
ljmp
in
fidivl
in
fidivl
out
fidivl
in
fidivl
in
fidivl
lock
lock
fnstsw
add
leave
cltd
or
lret
pushf
lods
loope
xchg
ffreep
xchg
faddp
fdivrl
xchg
in
fnstenv
in
fdivs
in
fnstenv
out
fnstenv
out
fidivl
push
fistpll
mov
loop
xchg
add
loopne
xchg
in
ffree
mov
fstpt
jp
fstpt
mov
out
fnstsw
out
out
out
out
push
loope
aad
fdivrl
add
xchg
add
lret
loope
cltd
ffreep
xchg
faddp
fdivrl
in
fdivs
in
fdivs
in
fnstenv
in
fnstenv
in
fnstenv
push
in
shl
loopne
add
add
loopne
xchg
adc
les
fstpt
jns
xlat
mov
ffreep
out
ffreep
out
fdivl
in
fidivl
in
fidivl
out
out
fnstsw
mov
add
lret
pushf
outsb
loop
fwait
jmp
xchg
ffreep
mov
fdivrl
xchg
ljmp
in
fnstenv
in
fidivl
in
fidivl
out
cli
repnz
inc
out
fnstsw
add
ret
fnstsw
cmp
mov
jb
mov
in
sahf
icebp
loop
out
out
out
out
in
fidivl
jecxz
sahf
dec
jecxz
sahf
jmp
enter
lds
fdivrl
movsb
out
out
fidivl
out
fidivl
out
fdivl
out
lock
data16
add
fdivrl
jg
fdivrs
jb
aad
insl
call
scas
push
push
fistpll
out
fdivrl
out
fdivrl
out
fdivrl
in
fdivs
add
int3
lahf
jecxz,pn
mov
loope
xchg
faddp
mov
fstpt
pushf
out
in
fidivl
out
fidivl
icebp
loope
imul
fistpll
adc
add
add
mov
jle
fdivs
jb
aam
insl
shrl
jnp
in
fnstenv
out
fdivrl
out
fdivrl
out
fnstsw
hlt
in
fnstenv
add
int3
mov
out
jecxz
popf
loope
xchg
ffreep
fadd
xchg
in
cltd
out
fdivrl
in
fidivl
out
lock
pop
fidivrl
ja
aad
jno
aam
insb
shrl
addr16
ffreep
mov
out
fnstsw
out
fdivrl
out
fnstsw
in
fnstenv
add
lret
in
mov
jmp
lret
loopne
xchg
faddp
mov
loop
xchg
push
fidivrs
out
fdivl
push
fistpll
iret
out
fidivrs
add
mov
jo
aam
imul
scas
addr16
scas
fs
scas
gs
enter
fistpll
out
fnstsw
push
fistpll
in
lahf
mov
loop
lcall
ret
loope
nop
out
fnstsw
out
lock
aas
aad
outsb
outsb
aam
push
aam
data16
shrl
arpl
aad
push
ljmp
out
fnstsw
out
fnstsw
dec
loop
fwait
cwtl
loop
fwait
loop
cltd
loopne
xchg
ffreep
loopne
out
fdivrl
out
fnstsw
out
fnstenv
xlat
mov
push
aam
push
sti
shrl
shrl
in
fidivl
lock
in
aam
xor
add
add
enter
enter
xchg
jmp
xchg
ffreep
mov
faddp
mov
in
fnstenv
push
loope
imul
xlat
mov
xlat
mov
and
shrl
call
lods
popa
call
lods
arpl
faddp
xchg
out
fstpt
in
xlat
scas
scas
jmp
add
add
xchg
xor
lds
cmc
ffreep
mov
faddp
mov
ffree
xchg
in
cltd
clc
in
xlat
mov
in
fnstenv
add
mov
inc
shrb
cmc
shrl
popa
not
scas
addr16
clc
call
into
sahf
pop
call
add
add
xchg
pop
ffreep
xchg
cmp
ret
faddp
mov
rolb
ffree
xchg
int3
pushf
dec
jmp
add
add
mov
add
lods
bound
shrl
shrb
shrl
addr16
jecxz
cwtl
or
add
add
clc
add
incl
incb
add
jmp
add
pop
incl
cld
add
add
inc
add
add
incl
add
add
cld
add
add
add
jmp
add
add
add
incl
add
incb
add
add
add
push
add
add
add
jmp
add
add
add
jg
jmp
add
add
add
aas
push
add
add
add
aas
incb
add
add
add
inc
add
add
add
incb
add
add
pop
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
incb
add
add
add
cld
add
add
add
pop
clc
add
add
add
pop
jmp
add
add
add
pop
inc
add
add
add
add
inc
add
add
add
add
incl
add
add
add
add
incb
add
add
add
add
incb
add
add
add
add
clc
add
jo
aas
push
add
aas
rolb
add
pop
jmp
add
jg
add
add
pop
inc
add
inc
add
add
incl
add
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
inc
add
add
inc
add
incl
add
jmp
add
incl
add
clc
add
jmp
add
incb
add
clc
add
jmp
add
cld
add
psubb
add
jmp
add
lock
add
jmp
add
add
add
loopne
add
push
add
add
add
rolb
push
pop
push
pop
push
ud0
lock
add
add
add
ud0
lock
add
add
add
ud0
lock
add
add
add
ud0
lock
add
add
add
ud0
lock
add
add
add
ud0
lock
add
add
add
pop
push
pop
clc
pop
clc
aas
clc
aas
clc
aas
clc
jg
cld
jg
cld
jg
cld
jg
cld
jg
cld
jg
cld
jg
incb
add
add
add
add
incb
add
add
incb
add
pop
rolb
add
incb
add
pop
rolb
add
incb
add
pop
loopne
add
incb
add
pop
loopne
add
incb
add
aas
lock
add
incb
add
jg
add
add
incb
add
cld
add
add
incl
add
cld
add
add
incl
add
incb
add
incl
add
incl
add
incl
add
incl
incl
add
incl
incl
add
inc
add
incl
loopne
ud0
incl
lock
incl
lock
incl
clc
add
incl
cld
add
inc
add
incb
pop
inc
add
incb
pop
inc
ud0
incl
pop
inc
pop
incl
inc
pop
incl
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
push
add
add
add
add
add
add
add
add
add
and
add
and
add
and
add
and
add
and
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
adc
add
adc
add
sbb
add
pop
add
add
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
push
add
add
add
inc
add
add
add
sub
add
sbb
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
push
add
add
add
gs
adc
aas
and
push
inc
sub
dec
sub
pop
dec
sub
imul
outsl
pop
sub
push
inc
pop
xchg
add
add
add
pop
add
add
add
cmp
add
sub
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
daa
add
add
add
add
add
add
add
add
add
push
add
add
add
add
jo
aaa
pop
pushf
jg
cmp
xchg
jp
negb
orl
test
movsb
xchg
mov
lods
mov
scas
mov
mov
mov
ljmp
sub
add
add
add
dec
add
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
add
pusha
add
add
add
jae
sbb
lea
cmp
cltd
jle
lcall
jg
lcall
dec
jmp
xchg
mov
cmp
les
aas
call
mov
inc
call
mov
ds
xchg
cmp
test
sub
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
cmp
add
inc
add
add
add
push
add
add
add
push
add
je
add
jge
xor
inc
repnz
jge
call
jge
lcall
jg
lcall
mov
call
mov
inc
call
mov
inc
call
mov
aas
call
mov
aas
dec
popf
ds
mov
push
daa
js
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
pusha
add
add
add
jb
add
jnp
add
sbbl
mov
xchg
jl
call
jl
lcall
jle
jmp
lea
dec
pushf
cmp
call
mov
notrack
mov
aas
call
mov
inc
call
mov
notrack
mov
cmp
sti
andb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
jbe
add
jle
add
test
xor
xchg
jl
call
jl
call
jle
lcall
addl
xchg
cmp
rcrb
aas
call
mov
aas
call
mov
aas
call
mov
notrack
mov
notrack
mov
notrack
mov
cmp
clc
mov
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
popa
add
add
add
jo
add
ja
add
jge
add
test
xor
call
jle
lcall
jg
lcall
xchg
les
aas
call
mov
notrack
mov
aas
call
mov
notrack
mov
cmp
call
mov
cmp
shll
cmp
call
mov
dec
in
subl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
push
add
add
add
or
rcrb
jg
lcall
adcb
adcb
adcl
mov
cltd
notrack
mov
aas
call
mov
notrack
mov
notrack
mov
cmp
call
mov
cmp
shll
cmp
call
lahf
cmp
rcrl
cmp
shlb
push
aad
je
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
daa
add
add
add
xor
add
aaa
add
add
add
add
add
dec
add
add
add
add
pop
add
add
add
add
outsb
add
add
push
or
push
dec
lcall
adcl
popf
test
sahf
xchg
mov
push
dec
sahf
inc
call
mov
notrack
mov
cmp
call
mov
notrack
mov
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrl
cmp
rcrl
inc
dec
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
add
add
sbb
jp
outsl
inc
fistpl
adcb
test
sahf
test
mov
mov
cwtl
pop
call
mov
cmp
call
mov
notrack
mov
notrack
mov
cmp
call
mov
cmp
call
mov
cmp
call
mov
cmp
shll
cmp
rcrl
aaa
call
cmpsb
dec
call
lods
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
sub
add
sub
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
and
inc
fistps
push
lcall
mov
mov
mov
mov
cmpsb
dec
call
mov
notrack
mov
cmp
aam
notrack
mov
cmp
call
mov
cmp
aam
cmp
call
mov
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrb
ss
test
call
mov
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
inc
add
add
add
dec
add
add
add
push
add
add
xor
jne
jp
in
orb
test
mov
mov
movsb
lea
test
gs
stos
jo
test
cmp
aam
cmp
call
mov
cmp
call
mov
aas
call
mov
cmp
aam
cmp
call
mov
cmp
aam
cmp
call
mov
cmp
aam
cmp
aam
cmp
aam
cmp
rcrb
cmp
rcrb
aaa
call
lods
pop
std
fnstenv
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
sub
add
sub
add
add
add
add
add
add
aaa
add
add
add
add
add
aas
add
add
add
inc
add
add
add
dec
dec
inc
es
jge
jmp
test
lahf
xchg
mov
mov
arpl
lods
xchg
imul
xlat
lods
push
call
mov
cmp
call
mov
aas
call
mov
aas
call
mov
aas
call
mov
aas
call
mov
notrack
mov
notrack
mov
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrb
ss
lahf
cmp
fdivs
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
orb
test
mov
mov
cmpsb
lea
test
pushl
mov
push
call
mov
notrack
mov
aas
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
aas
call
mov
inc
call
mov
aas
call
mov
aas
call
mov
cmp
aam
cmp
aam
cmp
shll
cmp
rcrl
cmp
rcrl
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
jbe
cmp
orl
xchg
mov
mov
cmpsl
popa
ljmp
sahf
jb
fidivrl
push
call
mov
aas
call
mov
inc
call
mov
inc
call
mov
inc
call
movsb
inc
call
mov
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
aas
call
mov
aas
call
mov
notrack
mov
cmp
call
mov
cmp
rcrl
cmp
rcrl
xor
aad
inc
fdivl
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
xchg
mov
mov
movsl
mov
cmpsl
lea
xchg
ljmp
ja
faddp
mov
fsubrs
cmp
aam
aas
call
movsb
inc
call
mov
inc
call
movsb
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
movsb
inc
call
mov
inc
call
mov
inc
call
mov
inc
call
mov
cmp
call
mov
cmp
shll
cmp
rcrl
cmp
rcrb
xor
xlat
test
fnstsw
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
xchg
js
xchg
mov
mov
mov
cmpsl
mov
stos
xchg
arpl
scas
xchg
push
jmp
ret
xlat
cmpsb
dec
call
mov
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
movsl
inc
call
movsb
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
mov
inc
call
mov
inc
call
mov
aas
call
mov
aas
call
mov
cmp
aam
cmp
rcrl
cmp
rcrl
aaa
call
pushf
xor
fsubrs
jno
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fwait
jg
fwait
movsl
mov
cmpsb
mov
mov
stos
nop
pop
ljmp
push
les
cmp
cmpsb
inc
call
mov
inc
call
movsb
inc
call
movsb
inc
call
movsl
inc
call
cmpsb
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
movsl
inc
call
cmpsb
inc
call
movsl
inc
call
movsl
inc
call
cmpsb
dec
call
cmpsb
inc
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
aas
call
mov
notrack
mov
cmp
rcrl
cmp
rcrl
aaa
call
popf
xor
fdivl
jne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
mov
mov
test
push
ljmp
xchg
pop
ljmp
lcall
jecxz
cmp
aam
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
cmpsb
inc
call
cmpsb
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
dec
call
cmpsb
dec
call
movsl
inc
call
cmpsb
inc
call
cmpsb
inc
call
movsb
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
inc
call
mov
notrack
mov
cmp
rcrl
cmp
rcrb
aaa
xor
add
add
add
add
add
add
add
add
add
add
jne
cmp
movsl
mov
test
lea
lods
nop
pop
ljmp
cwtl
pushl
xchg
loope
jnp
aad
inc
call
mov
inc
call
movsl
inc
call
cmpsb
inc
call
cmpsb
dec
call
cmpsb
dec
call
test
call
test
call
cmpsl
dec
call
cmpsl
dec
call
test
fsubrs
dec
call
cmpsl
dec
call
cmpsl
dec
fsubrs
dec
call
test
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
dec
call
cmpsb
dec
call
movsl
inc
call
cmpsb
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
aam
cmp
call
lahf
cmp
rcrb
cmp
fidivs
jns
add
add
popf
orl
push
mov
lods
nop
pop
ljmp
xchg
popa
pushl
popf
insl
call
mov
ja
aad
inc
call
movsb
inc
call
cmpsb
inc
call
cmpsb
dec
call
cmpsl
dec
call
cmpsl
dec
call
test
call
test
dec
call
test
dec
call
test
dec
call
test
dec
call
test
dec
fsubrs
dec
fsubrs
dec
fsubrs
dec
fsubrs
dec
fsubs
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsb
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
aas
call
mov
cmp
rcrl
xor
fidivs
orl
scas
nop
push
and
lods
xchg
pop
ljmp
xchg
pop
pushl
fwait
imul
aad
mov
loopne
jb
movsb
inc
call
cmpsb
inc
call
cmpsl
dec
call
test
call
cmpsl
dec
call
test
call
test
dec
fsubrs
push
fsubrs
push
fsubrs
push
fsubrs
push
fsubrs
push
fsubrs
push
fsubrs
push
call
test
dec
call
test
dec
call
test
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
cmpsl
dec
call
cmpsb
dec
call
movsl
inc
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
aam
cmp
rcrb
xor
fnstsw
add
mov
push
xor
xchg
pop
pushl
xchg
popa
pushl
sahf
imul
mov
nop
fistpll
inc
call
cmpsl
dec
call
cmpsl
dec
fsubrs
dec
fsubrs
push
fldcw
push
fsubrs
push
fldcw
fldcw
fldcw
push
fsubrs
fsubrs
push
fldcw
push
fldcw
push
fsubrs
push
fsubrs
dec
call
stos
dec
call
test
dec
call
test
call
test
call
test
call
cmpsl
dec
call
cmpsb
inc
call
cmpsb
inc
call
movsb
inc
call
movsb
inc
call
mov
aas
call
mov
cmp
rcrl
xor
fldcw
jae
mov
pop
inc
mov
pop
call
mov
pusha
pushl
sahf
imul
shrb
fidivs
inc
call
cmpsl
dec
fsubrs
push
fsubrs
push
fsubrs
push
fldcw
fldcw
push
fisubrl
push
fisubrl
pop
fldcw
pop
fisubrl
pop
fldcw
push
fldcw
push
fldcw
push
fldcw
fldcw
fldcw
push
fsubrs
dec
fsubrs
dec
fsubs
dec
call
cmpsl
dec
call
cmpsb
inc
call
movsl
inc
call
mov
inc
call
mov
cmp
call
lahf
cmp
rcrl
pop
fidivrs
add
mov
pop
push
mov
pop
repz
pop
pushl
sahf
addr16
mov
movsl
jb
lds
fdivl
inc
fsubrs
dec
fsubrs
push
fldcw
fldcw
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fisubrl
pop
fldcw
pop
fldcw
push
fsubrs
push
fsubrs
push
call
stos
push
call
stos
dec
call
test
dec
call
cmpsl
dec
call
cmpsl
dec
call
cmpsb
dec
call
movsb
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
rcrl
cmp
fdivl
jbe
mov
pop
gs
pop
cli
mov
pusha
mov
mov
jo
shlb
jmp
enter
mov
call
cmpsb
dec
call
test
push
fisubrl
fisubrl
pop
fldt
pop
pop
fdivl
pop
fdivl
pop
fdivl
pop
fdivl
pop
pop
pop
pop
pop
fldt
pop
fldt
pop
fisubrl
push
fisubrl
push
fldcw
push
fsubrs
push
fsubrs
push
call
test
dec
call
cmpsb
dec
call
cmpsb
dec
call
movsl
inc
call
movsb
inc
call
mov
aas
call
mov
cmp
aam
cmp
icebp
loope
jp
mov
pop
jbe
cwtl
pop
mov
sahf
addr16
mov
cmpsb
jb
ret
dec
mov
jmp
xchg
fisubrl
dec
fsubrs
push
fldcw
pop
fisubrl
pop
pop
pusha
popa
fdivl
fdivl
popa
fdivl
fdivl
fdivl
popa
fdivl
popa
fdivl
pusha
fdivl
pop
pop
pop
fisubrl
pop
fisubrl
pop
fldcw
push
fldcw
push
fsubrs
push
call
test
dec
call
test
call
cmpsl
dec
call
cmpsb
inc
call
movsb
inc
call
mov
inc
call
mov
cmp
aad
inc
fidivrs
adcb
add
mov
pop
add
lcall
mov
movsb
outsb
inc
test
inc
lods
jl
sarb
mov
fisubrl
dec
fsubrs
fisubrl
pop
pop
fdivl
pusha
arpl
fdivl
fs
fnsave
fnsave
fidivs
fnsave
fnsave
gs
fnsave
fnsave
data16
fnsave
fdivl
fdivl
pop
pop
pop
fisubrl
pop
fldcw
push
fsubrs
fsubrs
dec
call
test
call
test
call
cmpsl
dec
call
movsl
inc
call
movsb
inc
call
mov
aas
call
sahf
cmp
xlat
cmpsb
dec
fistpll
jae
mov
pop
add
xchg
pop
xchg
mov
popf
fs
mov
cmpsb
outsl
inc
test
jge
aam
jmp
lds
fsubrs
push
fldcw
pop
pop
arpl
fdivl
fnsave
fnsave
addr16
fnsave
addr16
fnsave
push
fidivs
push
fidivs
imul
fidivs
push
fidivs
push
fidivs
data16
fnsave
fnsave
fdivl
pop
pop
pop
fisubrl
push
fisubrl
push
fldcw
push
fsubrs
dec
call
cmpsl
dec
call
movsl
inc
call
movsb
inc
call
movsb
inc
call
mov
cmp
fldcw
ja
mov
pop
or
fwait
pop
mov
mov
outsl
inc
stos
ja
leave
mov
call
mov
test
fisubrl
fisubrl
pop
pop
fdivl
arpl
fdivl
fnsave
imul
fnsave
push
fidivs
push
fidivs
push
fidivs
imul
mov
insl
fidivrs
insb
fidivrs
insb
fidivrs
imul
mov
fidivs
imul
mov
fidivs
imul
fnsave
data16
fnsave
gs
fnsave
fdivl
pusha
fdivl
pop
fldt
pop
fisubrl
push
fldcw
fsubrs
dec
call
cmpsl
dec
call
cmpsb
dec
call
movsl
inc
call
movsb
inc
call
mov
cmp
fisubrl
jl
mov
pop
adc
lcall
mov
cmpsb
jno
stos
js
leave
mov
fld
jmp
roll
fisubrl
pusha
fnsave
fnsave
data16
fidivs
imul
fidivs
imul
mov
fidivs
insb
fidivrs
insl
fbstp
insl
fistpll
outsb
fistpll
outsb
fistpll
outsl
fistpll
outsl
fistpll
jo
loopne
jo
loopne
jo
loopne
jo
fbstp
outsb
fistpll
imul
mov
fbstp
push
fdivl
gs
fnsave
pop
fdivl
pop
fldt
pop
fisubrl
push
fsubrs
push
call
test
call
cmpsb
dec
call
cmpsb
dec
call
movsb
inc
call
mov
cmp
jmp
sarb
add
add
xchg
pop
mov
mov
mov
jo
lds
jg
fadd
xchg
jmp
mov
push
fisubrl
fdivl
fnsave
fidivs
push
fidivs
insb
fbstp
imul
mov
fidivrs
insl
fidivrs
insl
fistpll
insl
fistpll
outsb
fistpll
jno
fistpll
jno
fistpll
jb
loopne
jae
loopne
je
loopne
je
loopne
je
loopne
je
loopne
je
loopne
jae
loopne
jb
fistpll
jo
fistpll
insl
fidivs
imul
fidivs
fnsave
fdivl
pusha
fdivl
pop
pop
fisubrl
push
fisubrl
fsubrs
dec
call
cmpsb
dec
call
movsl
inc
call
mov
inc
fistpll
cmpl
mov
push
and
xchg
pop
iret
mov
popf
popa
mov
cmpsb
outsb
inc
stos
ja
leave
mov
ffree
mov
loopne
jae
fisubrl
popa
fnsave
data16
fnsave
push
fbstp
insb
fistpll
insl
fidivrs
insb
fistpll
insb
fidivrs
insl
fidivrs
insl
fistpll
outsb
fistpll
outsl
fistpll
jno
fistpll
jb
loopne
jae
loopne
jne
loopne
ja
loope
js
loope
js
loope
js
loope
js
loope
js
loope
js
loopne
jbe
loopne
jne
fistpll
jb
fistpll
outsb
fistpll
imul
mov
fnsave
data16
fdivl
fnsave
popa
fdivl
pop
pop
fisubrl
pop
fldcw
fldcw
dec
call
cmpsl
dec
call
movsl
inc
call
mov
dec
fistpll
sbb
add
add
xchg
pop
fnstsw
pushf
pop
mov
movsb
insb
inc
stos
je
lret
ffreep
mov
fistpll
push
pusha
fdivl
data16
fidivs
imul
mov
fistpll
outsl
jmp
mov
outsl
fistpll
insl
fistpll
insb
fistpll
insb
fbstp
insb
fistpll
imul
mov
insl
jmp
mov
outsl
jmp
mov
jno
loopne
jae
loope
jne
loope
ja
loop
jp
loop
jp
loop
jl
loop
jl
loop
jl
loop
jl
loop
jnp
loop
jp
loope
js
loope
jbe
fistpll
jmp
mov
outsl
fidivrs
push
fidivs
data16
fdivl
fdivl
fnsave
pop
fdivl
pop
pop
fisubrl
push
fisubrl
push
fsubrs
dec
call
cmpsb
inc
call
mov
push
jmp
mov
xchg
add
add
add
xchg
push
out
cltd
pop
mov
lahf
popa
inc
mov
outsl
dec
scas
jnp
ffree
xchg
fidivs
push
fidivl
fnsave
push
fidivrs
outsb
fistpll
jo
fistpll
outsb
fidivrs
insb
fidivs
insb
fidivs
imul
fnsave
imul
mov
jo
loopne
outsb
fistpll
insl
fistpll
outsl
jmp
mov
jae
loope
jbe
loope
jns
loop
jp
loop
jge
loop
jge
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jle
loop
jl
loope
js
loope
js
loopne
je
loopne
jb
fistpll
insl
fidivs
push
fnsave
gs
fnsave
fnsave
fdivl
pusha
fdivl
pop
pop
fldt
pop
fisubrl
fsubrs
dec
call
cmpsb
dec
call
movsb
inc
fldcw
jle
mov
push
dec
mov
push
out
mov
push
mov
popf
pusha
inc
mov
insb
dec
scas
js
fidivrs
gs
fldcw
pop
fdivl
push
fidivrs
outsb
fidivrs
jno
fistpll
jo
fidivrs
outsb
fidivrs
push
fnsave
insl
jmp
mov
cmp
leave
nop
call
iret
popf
call
shlb
jmp
lret
in
xchg
loope
jp
loopne
jae
loopne
jo
loopne
jno
loopne
jne
loope
js
loop
jp
loop
jle
jecxz
jg
jecxz
cmp
jecxz
cmp
ret
jecxz
cmp
sarb
mov
js
loopne
je
loopne
jb
fistpll
imul
mov
fnsave
popa
fdivl
pusha
pusha
pop
pop
fldt
pop
fldcw
push
fldcw
dec
call
cmpsl
dec
call
movsl
inc
jle
mov
push
push
mov
push
cmc
mov
push
mov
pushf
pop
mov
mov
jno
fdivrl
arpl
fldt
pop
fnsave
fidivs
outsb
fistpll
jno
loopne
jb
fistpll
jno
fistpll
outsb
fidivs
imul
in
mov
ljmp
out
aad
mov
shrl
test
into
mov
jmp
iret
movsb
jmp
iret
mov
jmp
shlb
jmp
lret
xchg
jmp
roll
loopne
jae
loope
ja
loop
jnp
loop
jge
jecxz
jg
jecxz
cmp
in
test
in
cmp
roll
loope
jl
loope
js
loope
je
fistpll
insb
fidivs
imul
mov
jns
loope
jns
loopne
jae
fidivrs
data16
fdivl
pop
fidivl
pop
pusha
pop
fidivl
pop
pop
fldcw
push
fsubrs
dec
call
movsl
inc
fdivl
jg
mov
push
push
mov
push
pushl
cltd
pop
mov
mov
insl
fdivrl
pop
fisubrl
popa
fidivs
fistpll
jb
loopne
je
loopne
jne
loopne
jne
loopne
je
loopne
jno
fistpll
outsb
fnsave
insl
jmp
enter
xlat
lods
std
out
dec
in
movsb
and
shlb
jmp
shlb
jmp
shll
jmp
shrb
jmp
mov
loope
jbe
loopne
jne
loop
jp
loop
jl
jecxz
jg
in
cmp
ret
test
in
cmp
ret
in
cmp
sarb
mov
jne
fistpll
jo
jecxz
jle
out
jmp
aam
jmp
aad
jmp
lods
ljmp
jmp
les
pop
fidivl
pop
pop
pop
pop
fisubrl
push
fsubrs
dec
call
cmpsb
dec
fnsave
jl
mov
push
jp
xchg
push
mov
push
pushl
cwtl
push
mov
popf
pop
inc
cmpsb
data16
pop
fnsave
insb
jmp
mov
je
loopne
ja
loope
js
loope
jbe
loopne
jbe
loopne
je
loopne
jno
fistpll
push
in
stos
push
fistpll
inc
in
cmpsl
jne
shlb
jmp
shlb
jmp
shll
jmp
iret
mov
jmp
mov
jbe
loop
jnp
jecxz
jle
jecxz
cmp
ret
in
cmp
jecxz
jg
jecxz
jge
loope
jns
loopne
jae
loope
js
in
jmp
aad
dec
out
cmpsb
sub
shlb
shl
movsl
jmp
shlb
jmp
shlb
jmp
lods
jmp
mov
pop
fisubrl
pop
fdivl
pusha
fdivl
pop
pop
fisubrl
push
fsubrs
dec
call
test
insl
clc
loope
jp
mov
cwtl
pop
mov
xchg
push
pushl
xchg
push
mov
lcall
fidivl
pop
gs
fnsave
outsl
jmp
mov
jbe
loope
jns
loope
jns
loope
jns
loopne
js
loopne
jne
fistpll
outsb
fnsave
push
fistpll
mov
incl
out
movsl
test
shlb
jmp
shlb
jmp
iret
mov
jmp
int
jmp
ret
test
loopne
je
loope
jns
loope
jl
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jg
jecxz
jge
loop
jnp
loope
je
loop
jnp
in
xchg
cld
call
add
add
shlb
dec
out
movsl
into
out
movsl
jmp
shll
out
mov
jmp
shll
call
mov
fisubrl
pop
pusha
pusha
pop
fldt
push
fsubrs
dec
fsubrs
jno
jecxz
jle
shll
lahf
mov
cwtl
pop
pushl
xchg
push
pushl
xchg
push
inc
mov
pop
fldcw
pop
fnsave
fistpll
ja
loope
jp
loop
jnp
loop
jl
loope
jl
loope
jp
loopne
js
loopne
je
fistpll
push
push
in
cmc
icebp
loop
dec
in
movsb
or
into
mov
jmp
int
jmp
int
jmp
int3
sahf
jmp
lret
popf
jmp
lret
pushf
jmp
lret
loope
jbe
loopne
jbe
loope
jp
loope
jnp
loop
jge
loop
jge
loop
jl
loop
jp
loope
jbe
loopne
js
in
mov
out
xchg
pop
in
movsb
pmulhw
movsb
and
movsb
cmc
in
mov
jmp
iret
mov
jmp
int
call
aam
jmp
mov
pop
pop
fdivl
fdivl
pop
fisubrl
push
call
test
push
fidivrs
lcall
add
add
stos
je
shll
mov
cltd
pop
pushl
xchg
push
pushl
mov
pop
fldcw
pop
fnsave
jmp
mov
jp
loop
jge
loop
cmp
ret
jecxz
cmp
sarb
mov
je
fistpll
imul
repnz
icebp
repnz
xor
add
add
lret
sahf
pop
loop
popf
jmp
lret
pushf
jmp
lret
loope
cltd
jmp
enter
xchg
jmp
enter
sarl
mov
ja
loope
jns
loop
jp
loope
jnp
loope
jns
loope
ja
loopne
je
in
cmp
in
mov
in
int
jmp
int
jmp
int
jmp
int3
sahf
jmp
lret
popf
jmp
int3
lahf
ljmp
fldcw
pop
fnsave
fnsave
pop
pop
fldcw
fidivl
jo
lods
ja
shll
mov
cltd
pop
pushl
xchg
push
inc
pushf
push
fsubrs
fs
fidivrs
jae
loop
jp
jecxz
jg
in
test
in
test
in
test
in
cmp
sarb
mov
jb
fidivs
xchg
repnz
cmc
repz
xor
add
add
enter
xchg
ljmp
xchg
ffreep
xchg
ffreep
nop
faddp
mov
ffree
mov
loop
xchg
loopne
jb
loope
jne
loopne
ja
loope
js
loope
js
loope
ja
loopne
je
loope
ja
in
test
out
mov
add
add
int
das
jecxz
popf
fsubp
lret
popf
jmp
lret
loop
fwait
jmp
leave
lcall
xchg
jmp
mov
pop
fdivl
popa
fnsave
data16
fdivl
fdivl
pop
push
fsubrs
pop
fdivl
add
into
mov
push
int
test
scas
jnp
ret
test
inc
mov
popa
mov
xchg
pop
mov
scas
pusha
fdivl
arpl
fidivs
outsl
jmp
mov
jg
in
cmp
lds
jmp
mov
in
xchg
jecxz
cmp
loopne
jne
fistpll
js
lock
pop
ffree
vprotd
rcr
fadd
mov
fadd
mov
fadd
mov
fdivrl
test
ffreep
mov
loopne
jb
loopne
je
loope
jne
loope
ja
loope
jbe
loope
jne
loopne
jae
loope
js
jecxz
test
loope
cltd
xor
enter
enter
xchg
ffreep
xchg
ffreep
xchg
faddp
xchg
ffree
mov
out
lcall
scas
pop
fdivl
fidivs
fbstp
addr16
fnsave
push
fldcw
pop
cld
fdivl
add
iret
mov
mov
les
imul
lahf
fs
mov
xchg
pop
inc
mov
outsl
fistpll
js
jecxz
jle
in
xchg
out
mov
out
xchg
call
iret
pushf
jmp
int
jmp
int3
xchg
jmp
enter
lds
jmp
mov
test
lock
stos
fnstcw
test
fnstcw
fdivrs
jg
fdivrs
cmp
mov
je
loopne
jne
loopne
jne
loopne
jne
loopne
je
loopne
jb
loope
jns
loop
andl
add
ffreep
xchg
push
faddp
xchg
sti
ffree
ffree
mov
fadd
fcmovnb
mov
fstpt
xchg
in
mov
fdivl
pop
fnsave
data16
fbstp
imul
mov
fidivs
data16
fnsave
pop
fisubrl
push
fidivl
arpl
add
add
mov
lea
stos
js
shlb
mov
xchg
pop
inc
mov
jne
loopne
jae
loope
jns
jecxz
cmp
out
xchg
jmp
rcrb
ljmp
jmp
lret
xchg
jmp
enter
les
push
loope
lock
sbb
add
add
mov
jle
aad
jl
aad
jnp
aam
jns
aad
ja
aad
jbe
aad
je
fdivrl
jne
loopne
je
loopne
jne
loopne
jbe
loopne
jne
loopne
je
loopne
jb
loopne
ja
loop
cmpl
add
add
rorb
fnstcw
xchg
fdivrs
call
mov
test
loope
je
fldt
pusha
fnsave
fistpll
outsl
fistpll
imul
mov
fnsave
pop
fisubrl
push
fs
add
add
mov
xchg
lods
jnp
shll
mov
xchg
pop
inc
mov
jne
loopne
jbe
jecxz
jl
in
test
in
call
iret
popf
ljmp
ljmp
call
lret
in
mov
in
xchg
out
xlat
lods
push
loope
xchg
shlb
jne
shll
jae
shll
jo
shll
outsb
ffreep
xchg
in
cmp
roll
loop
jg
loop
jge
loope
jns
loope
ja
loope
js
jecxz
xorb
add
add
mov
adc
mov
jg
aam
jge
aam
jp
shll
jne
fnstsw
pusha
fs
fidivs
outsl
fistpll
je
fistpll
insl
fidivs
popa
fldt
push
fldcw
pop
int
incl
sarb
mov
scas
jge
ret
cmpsl
jb
mov
pushf
popa
pushl
pushf
pop
fidivrs
js
jecxz
jg
in
xchg
out
nop
jmp
rcrb
jmp
movsl
jmp
mov
call
lret
xchg
jmp
mov
out
xchg
in
fdivl
sub
add
add
stos
insl
and
lods
insl
jmp
lods
imul
lods
insb
dec
lods
push
into
lods
push
iret
lods
push
iret
lods
push
loop
jmp
lret
out
mov
out
jmp
leave
jmp
enter
enter
enter
mov
in
xchg
cmp
add
add
mov
shlw
call
mov
dec
mov
call
scas
jno
into
scas
outsb
call
mov
fnstsw
pop
fdivl
imul
loopne
je
loopne
jne
loopne
jbe
loopne
je
fistpll
addr16
fdivl
push
fldcw
push
fidivl
add
sarl
dec
mov
inc
test
mov
popf
mov
fwait
pop
fdivrl
jmp
roll
out
xchg
jmp
shll
jmp
movsl
jmp
mov
call
lret
in
mov
jmp
add
add
add
cmpsl
push
dec
cmpsb
gs
cmpsl
fs
test
dec
test
dec
test
insl
jmp
int
jmp
leave
nop
jmp
lret
out
xchg
jmp
lret
out
xchg
jmp
leave
nop
jmp
enter
jmp
lret
int
jb
int
jno
int3
lods
jo
lret
lods
outsb
dec
stos
insb
dec
stos
push
lret
test
addr16
fnstcw
addr16
fidivs
insb
fistpll
jbe
loope
jp
loope
jns
loope
js
fistpll
imul
mov
fisubrl
push
fldcw
pop
fcmovbe
mov
sub
add
add
rcrb
leave
mov
inc
test
insl
mov
cltd
pop
pushl
mov
jl
jecxz
cmp
mov
out
xchg
call
shll
jmp
movsl
ljmp
call
lret
in
mov
ljmp
mov
ret
mov
popa
inc
mov
popa
inc
movsb
pusha
inc
movsl
pusha
dec
cmpsb
pusha
fidivrl
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
lret
xchg
jmp
lret
out
nop
jmp
leave
nop
jmp
mov
cmpsl
push
cmpsl
push
inc
movsl
inc
movsl
gs
movsl
arpl
movsl
arpl
shlb
jle
loop
jg
jecxz
test
in
mov
in
jmp
lret
out
nop
jmp
enter
mov
jecxz
cmp
mov
insl
fdivl
fnsave
jb
aam
fwait
mov
test
les
outsb
mov
cltd
pop
pushl
mov
jmp
sarl
ret
in
mov
out
xchg
call
rcrb
jmp
mov
jmp
int
jmp
lret
in
mov
jmp
movsb
in
fdivs
add
pop
sti
mov
sahf
pop
inc
sahf
pop
inc
mov
pop
inc
movsl
pop
jmp
int
call
lret
xchg
call
int3
cwtl
call
int
jmp
int3
xchg
jmp
lret
xchg
jmp
lret
in
out
xlat
stos
pop
shlb
inc
mov
pusha
inc
lahf
pop
inc
mov
pop
inc
cmpsb
fs
roll
in
test
in
mov
out
xchg
jmp
int3
xchg
call
int3
xchg
jmp
lret
out
mov
in
xchg
loop
jg
loope
js
loopne
jne
loop
xor
mov
aad
pushf
pop
sarb
inc
lods
jp
mov
sahf
pushl
xchg
pop
call
mov
jmp
roll
in
mov
out
xchg
call
rcrb
ljmp
jmp
int
jmp
lret
out
mov
ljmp
insb
mov
push
add
xchg
push
mov
lcall
rcrl
call
mov
movsl
jmp
lret
xchg
call
into
lcall
iret
pushf
jmp
into
lcall
lret
xchg
jmp
enter
iret
sahf
dec
mov
lcall
mov
lcall
mov
sahf
pop
fstpt
jg
in
test
in
mov
out
xchg
jmp
int3
xchg
call
int3
xchg
jmp
lret
xchg
jmp
enter
lds
jmp
mov
jle
jecxz
xchg
out
mov
add
mov
mov
lds
mov
lcall
lret
jmp
ret
test
loop
jg
in
mov
out
call
iret
popf
ljmp
ljmp
call
lret
out
ljmp
ja
add
add
xchg
push
pushl
xchg
push
mov
lcall
test
ljmp
call
iret
popf
jmp
shll
ljmp
call
int3
xchg
jmp
lret
xchg
jmp
lret
incl
mov
push
adc
xchg
push
pushl
push
pushl
cwtl
push
mov
mov
test
in
xchg
out
mov
out
xchg
jmp
int3
xchg
call
int
jmp
int3
xchg
jmp
enter
movb
loopne
js
in
mov
in
mov
add
sarb
mov
scas
jg
mov
lahf
imul
mov
pop
inc
movsb
addr16
mov
loop
jle
jecxz
xchg
in
jmp
lret
xchg
jmp
rcrb
jmp
iret
pushf
call
leave
xchg
jmp
enter
int
call
add
add
lea
lods
mov
mov
push
pushl
xchg
push
pushl
fwait
pop
jmp
into
mov
call
rcrb
jmp
movsb
jmp
movsl
jmp
cmpsb
jmp
movsb
jmp
mov
call
int
jmp
lret
ljmp
add
push
fisubrl
push
pushl
xchg
push
pushl
push
call
mov
xchg
in
xchg
in
mov
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
jmp
lret
out
mov
in
xchg
jecxz
jg
loope
jp
out
xchg
std
call
add
add
mov
inc
scas
cmp
test
mov
fwait
popa
pushl
mov
mov
loop
jle
in
test
in
mov
out
xchg
call
iret
popf
jmp
iret
sahf
call
int
jmp
lret
xchg
jmp
enter
lret
out
mov
add
add
add
dec
loope
mov
test
mov
scas
mov
mov
push
pushl
lret
in
fdivs
jmp
shlb
jmp
test
in
stos
in
stos
jmp
cmpsl
jmp
mov
jmp
int
jmp
lret
xchg
in
in
or
add
add
mov
test
dec
ljmp
mov
lods
mov
mov
push
pushl
mov
mov
in
mov
in
jmp
lret
out
xchg
call
lret
xchg
jmp
lret
in
jmp
les
jmp
roll
in
aam
add
add
add
rcrb
enter
ret
test
mov
popf
mov
cltd
pop
ffreep
xchg
jecxz
cmp
in
mov
out
xchg
jmp
lret
xchg
jmp
iret
popf
jmp
into
fwait
call
lret
xchg
jmp
lret
out
jmp
int
std
jmp
add
add
orl
test
mov
xchg
mov
stos
lea
mov
push
fmulp
mov
jmp
rcrb
jmp
cmpsl
in
aad
in
xlat
lods
in
fsubrs
in
xlat
lods
in
stos
in
aad
jmp
movsb
jmp
into
lcall
shlb
add
add
add
test
mov
xchg
mov
test
lea
mov
push
fdivrl
mov
in
mov
out
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
in
mov
in
xchg
loop
jge
out
jmp
add
add
ret
iret
mov
test
ret
stos
jbe
mov
popf
fs
mov
xchg
pop
faddp
mov
in
cmp
ret
cmp
lds
jmp
lret
xchg
call
into
lcall
into
lcall
int3
xchg
jmp
lret
out
jmp
leave
nop
jmp
int3
lcall
add
add
jg
out
fwait
orb
orl
mov
mov
mov
popa
jmp
shrl
jmp
iret
popf
ljmp
in
aad
in
xlat
scas
in
fsubrs
in
fnstenv
in
fsubrs
jmp
cmpsl
ljmp
jmp
int
jmp
add
add
orl
lahf
orl
test
movsl
mov
mov
mov
nop
jmp
mov
in
mov
out
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
lret
xchg
jmp
enter
mov
jecxz
test
loop
jl
call
shlb
les
out
mov
inc
stos
jns
mov
sahf
fs
mov
cwtl
pop
fnstcw
test
jecxz
cmp
in
mov
out
xchg
jmp
int3
xchg
call
into
lcall
int
jmp
lret
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
mov
out
nop
jmp
enter
incl
xchg
jnp
sbb
jl
lahf
xchg
jnp
std
cwtl
jl
lcall
jg
lcall
orl
mov
in
faddp
out
fdivl
ljmp
jmp
cmpsb
jmp
test
in
fsubrs
out
fidivl
out
fnstenv
in
xlat
scas
in
aad
jmp
movsl
ljmp
call
rcrl
xchg
lcall
enter
lcall
orl
mov
mov
int
js
out
xchg
jmp
mov
out
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
enter
mov
in
test
loop
cmp
out
xlat
lods
and
xlat
les
enter
inc
lods
jl
shlb
mov
cwtl
pop
call
mov
jmp
lds
jmp
ret
test
in
mov
in
jmp
lret
call
int
call
int
call
lret
xchg
jmp
lret
out
nop
jmp
leave
mov
out
xchg
jmp
xchg
shl
shlb
xchg
jnp
sbb
jp
out
js
call
inc
call
jle
mov
shlb
in
stos
call
iret
lahf
ljmp
jmp
test
in
aad
in
xlat
scas
in
fdivs
out
fidivl
out
fnstenv
in
fsubrs
jmp
cmpsl
jmp
movsb
ljmp
call
shll
mov
xchg
jl
jno
jl
lcall
jge
lcall
orb
test
mov
pop
jmp
leave
xchg
jmp
enter
enter
leave
nop
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
enter
lds
jmp
ret
cmp
lods
clc
out
fnstsw
add
lds
mov
mov
dec
mov
inc
cmpsl
jno
mov
pushf
pusha
mov
scas
je
out
jmp
sarb
ret
cmp
lds
jmp
leave
xchg
jmp
lret
xchg
jmp
int3
xchg
call
int
call
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
jmp
leave
nop
jmp
stc
xlat
mov
je
pushf
orl
xchg
jp
mov
xchg
js
call
ja
call
mov
lods
test
jecxz
mov
repnz
out
jmp
rcrl
ljmp
in
stos
in
xlat
lods
in
fsubrs
in
fidivl
in
fidivl
in
fnstenv
in
xlat
lods
in
aad
in
aam
jmp
movsb
ljmp
jmp
shll
out
shrb
add
jp
notb
jp
call
jge
lcall
mov
faddp
xchg
jmp
int3
xchg
jmp
enter
leave
nop
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
mov
in
mov
jecxz
cmp
in
lods
aam
add
add
ret
into
mov
cmp
mov
sahf
mov
test
jmp
sarb
ret
cmp
les
jmp
enter
leave
xchg
jmp
lret
xchg
jmp
lret
xchg
call
int3
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
leave
xchg
jmp
leave
nop
jmp
lret
xchg
jmp
leave
cwtl
call
mov
jl
mov
sahf
jno
mov
jno
shrb
jmp
shrb
push
fidivrs
jmp
int
jmp
shlb
jmp
movsl
jmp
cmpsb
jmp
test
in
xlat
lods
in
fsubrs
in
fdivs
in
fnstenv
in
fsubrs
in
xlat
lods
in
aad
in
aad
jmp
movsl
ljmp
jmp
into
lcall
aad
std
loop
test
fadd
popf
xor
lcall
jo
jp
notb
jns
call
jnp
lcall
xchg
pop
xchg
jmp
leave
mov
out
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
lret
xchg
jmp
lret
out
mov
out
mov
in
mov
jecxz
cmp
rcrb
xchg
add
add
les
dec
mov
inc
stos
js
shll
mov
mov
xchg
jmp
sarl
ret
in
xchg
in
mov
in
mov
out
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
lret
out
xchg
jmp
lret
call
shll
in
fsubrs
out
fidivl
jmp
test
jmp
int
jmp
iret
pushf
ljmp
ljmp
jmp
cmpsb
jmp
cmpsl
in
aad
in
stos
in
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fsubrs
in
fsubrs
in
xlat
lods
in
stos
in
aad
jmp
cmpsl
jmp
movsl
ljmp
jmp
iret
fwait
call
shlb
std
test
iret
mov
addr16
jg
xchg
jl
call
jp
call
dec
ljmp
mov
call
rcrb
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
call
lret
xchg
jmp
lret
xchg
jmp
lret
out
jmp
mov
in
xchg
in
cmp
aad
out
fidivl
fld
mov
dec
mov
inc
lods
jnp
ret
mov
popf
pusha
mov
enter
ret
jecxz
cmp
in
xchg
in
mov
in
jmp
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
call
int3
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
call
lret
xchg
jmp
int3
xchg
jmp
lret
call
lret
xchg
call
int3
xchg
call
int3
xchg
call
int
jmp
iret
popf
ljmp
ljmp
jmp
movsl
jmp
test
jmp
test
in
aad
in
stos
in
xlat
stos
in
xlat
stos
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
lods
in
xlat
lods
in
xlat
stos
in
stos
jmp
test
jmp
test
jmp
cmpsb
ljmp
ljmp
call
int
call
shlb
ljmp
fadd
mov
call
mov
cltd
jmp
into
test
jmp
mov
in
aad
call
lret
out
xchg
call
int3
xchg
call
int3
xchg
call
int3
xchg
call
lret
out
mov
in
mov
in
xchg
in
mov
out
fnstenv
or
add
add
leave
movsl
cmp
rcrl
leave
mov
inc
test
push
mov
les
jmp
roll
in
xchg
in
mov
out
mov
out
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
call
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
call
int
jmp
int
call
int
call
int
jmp
into
lcall
iret
popf
jmp
shll
ljmp
jmp
movsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
test
in
stos
in
lods
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
stos
in
stos
in
stos
in
aad
jmp
test
jmp
cmpsl
jmp
movsl
jmp
movsb
jmp
mov
jmp
rcrb
call
into
cltd
jmp
shll
in
stos
in
stos
in
test
call
lret
xchg
jmp
lret
xchg
call
int3
xchg
call
int3
xchg
jmp
int
call
lret
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
enter
mov
jecxz
test
call
fmul
test
xlat
ret
popf
jecxz
mov
cmp
stos
je
ret
mov
sahf
pop
fstpt
mov
jecxz
jg
in
cmp
ret
test
in
mov
in
mov
out
mov
out
mov
out
nop
jmp
lret
out
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int3
xchg
jmp
int
call
int
call
into
fwait
jmp
iret
pushf
jmp
rcrb
ljmp
ljmp
jmp
movsb
jmp
cmpsb
jmp
cmpsb
in
aam
in
aam
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
aad
in
aad
in
aam
in
aam
in
shll
jmp
mov
ljmp
jmp
iret
popf
jmp
into
fwait
call
int3
xchg
jmp
int3
xchg
jmp
int3
xchg
jmp
lret
xchg
jmp
int3
xchg
call
int3
xchg
call
int
call
int3
cltd
call
int3
cltd
call
int3
xchg
jmp
lret
xchg
jmp
lret
out
xchg
jmp
enter
mov
in
cmp
shll
xchg
fmul
test
rcl
mov
test
enter
les
gs
mov
mov
mov
loop
jg
jecxz
test
in
test
in
xchg
in
mov
in
mov
out
mov
out
nop
jmp
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
call
int3
xchg
jmp
int3
xchg
jmp
int3
cwtl
jmp
int
jmp
int
jmp
int
call
into
lcall
into
pushf
jmp
iret
sahf
jmp
rcrl
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
test
in
stos
in
stos
in
test
in
aad
in
aam
in
aam
jmp
cmpsb
jmp
cmpsb
jmp
movsb
ljmp
ljmp
ljmp
jmp
iret
popf
call
into
fwait
call
into
fwait
call
int
call
into
lcall
into
lcall
into
lcall
int
jmp
int3
xchg
jmp
lret
out
nop
jmp
enter
lds
out
fnstenv
cmp
add
add
leave
cmpsb
stos
aad
cwtl
call
mov
jnp
lds
addr16
mov
mov
jmp
leave
nop
jmp
sarb
ret
cmp
ret
test
in
mov
in
mov
in
mov
out
jmp
enter
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
call
int3
xchg
call
int
call
int
jmp
int
jmp
iret
pushf
call
iret
popf
jmp
rcrb
jmp
shlb
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
in
aad
jmp
test
jmp
test
in
aam
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
ljmp
call
iret
popf
jmp
iret
pushf
jmp
iret
fwait
jmp
into
fwait
call
into
fwait
call
into
lcall
int3
xchg
jmp
lret
xchg
jmp
lret
out
nop
jmp
enter
mov
out
mov
icebp
loopne
stc
hlt
in
push
test
call
mov
jg
stos
jae
ret
movsl
imul
lret
lods
jno
jmp
sarl
ret
in
test
in
xchg
in
mov
in
mov
in
jmp
enter
leave
jmp
leave
nop
jmp
lret
out
xchg
call
lret
xchg
jmp
int3
xchg
jmp
into
cltd
jmp
into
fwait
jmp
iret
popf
jmp
rcrb
jmp
shll
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
mov
ljmp
ljmp
jmp
rcrb
jmp
iret
popf
jmp
iret
popf
jmp
into
fwait
jmp
into
fwait
call
int
call
lret
xchg
jmp
lret
out
jmp
enter
lds
push
loopne
fiaddl
add
add
iret
lods
jns
mov
dec
mov
dec
lods
jbe
les
fs
stos
outsl
call
ret
jecxz
cmp
ret
test
in
xchg
in
mov
in
mov
out
mov
out
jmp
leave
jmp
leave
xchg
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
int
call
int
call
int
jmp
into
fwait
jmp
rcrb
jmp
rcrl
ljmp
jmp
mov
ljmp
ljmp
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
jmp
rcrl
jmp
rcrb
jmp
rcrb
jmp
int
call
int
call
lret
xchg
jmp
lret
out
nop
jmp
jmp
les
push
loope
cmpsb
loop
mov
cmpsb
call
rcll
lret
inc
test
addr16
mov
xchg
jmp
ret
test
jecxz
cmp
ret
test
in
xchg
in
mov
in
mov
in
mov
in
jmp
enter
leave
xchg
jmp
lret
out
xchg
call
int3
xchg
call
int
call
int
jmp
iret
fwait
jmp
iret
pushf
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
ljmp
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
sahf
ljmp
jmp
iret
fwait
jmp
int
call
lret
xchg
jmp
lret
out
xchg
jmp
enter
mov
lock
pusha
jecxz
mov
fmulp
stos
cmc
fld
fwait
call
mov
jle
enter
les
jmp
lret
in
mov
jecxz
cmp
ret
test
in
xchg
in
mov
in
mov
out
mov
out
mov
out
jmp
leave
nop
jmp
leave
xchg
jmp
lret
out
xchg
jmp
int3
xchg
call
int
call
into
cltd
call
into
lcall
iret
pushf
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
rcrb
call
into
lcall
int
call
int3
xchg
jmp
lret
out
nop
jmp
mov
out
xchg
push
loopne
clc
imul
rcrb
add
add
aad
and
iret
scas
call
aam
dec
mov
dec
stos
jae
les
jmp
xchg
jmp
mov
jecxz
test
in
xchg
in
xchg
in
mov
in
mov
in
mov
in
mov
out
jmp
leave
nop
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
call
int3
cwtl
call
int
jmp
into
fwait
jmp
iret
popf
jmp
rcrb
jmp
shll
ljmp
jmp
mov
jmp
mov
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
popf
jmp
int
call
int3
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
leave
xchg
jmp
mov
ljmp
fdivrp
incl
in
mov
enter
call
mov
test
lret
inc
cmpsl
push
ret
fdivrs
xchg
jmp
ret
test
in
xchg
in
mov
in
mov
in
mov
out
jmp
leave
mov
out
jmp
leave
xchg
jmp
lret
call
int3
xchg
call
int3
xchg
call
int
call
into
fwait
jmp
iret
pushf
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
mov
jmp
mov
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
rcrb
jmp
iret
pushf
call
int3
xchg
call
lret
out
xchg
jmp
mov
in
xlat
scas
push
loope
cmpsl
out
mov
mov
lret
cmpsl
fadd
xchg
call
mov
jns
test
gs
mov
cwtl
jmp
les
jmp
lds
jmp
mov
out
mov
out
mov
out
nop
jmp
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
into
fwait
call
iret
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
popf
jmp
iret
fwait
call
int3
cwtl
call
lret
xchg
jmp
lret
out
nop
push
fdivl
imul
add
add
aam
mov
int
fadd
cltd
call
mov
jl
enter
les
js
jmp
les
jmp
mov
in
mov
in
mov
in
jmp
leave
jmp
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
into
lcall
iret
pushf
jmp
rcrb
jmp
rcrb
ljmp
ljmp
ljmp
jmp
mov
jmp
mov
jmp
mov
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
shll
jmp
rcrb
jmp
into
lcall
int3
xchg
jmp
int3
xchg
jmp
lret
call
loopne
stc
hlt
out
and
in
mov
fcmovb
pushf
call
mov
jle
leave
stos
jae
lds
jb
ljmp
jmp
lds
jmp
mov
in
jmp
mov
in
jmp
leave
nop
jmp
leave
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
into
cltd
jmp
iret
fwait
jmp
iret
popf
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
mov
jmp
mov
jmp
mov
ljmp
ljmp
jmp
iret
popf
call
into
lcall
int
jmp
lret
xchg
jmp
lret
jmp
loopne
call
in
mov
fcmovb
popf
call
mov
cmp
test
dec
test
movsb
jmp
lds
jmp
mov
in
mov
in
jmp
leave
jmp
leave
nop
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int
call
int
call
into
lcall
into
pushf
call
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
into
cltd
call
int3
xchg
jmp
lret
in
lods
push
fistpll
add
mov
repz
mov
call
mov
dec
scas
ja
enter
cmpsb
push
jmp
lret
in
mov
in
jmp
jmp
enter
leave
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
call
int
call
into
lcall
into
fwait
jmp
rcrb
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsb
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
jmp
mov
jmp
mov
jmp
mov
ljmp
jmp
rcrb
jmp
int
jmp
lret
xchg
out
fdivl
je
add
add
aad
and
shrb
call
mov
test
int3
mov
dec
stos
jo
enter
in
mov
jmp
mov
out
jmp
enter
enter
leave
nop
jmp
lret
out
xchg
jmp
lret
out
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
into
lcall
iret
pushf
jmp
iret
popf
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
jmp
movsb
jmp
mov
jmp
mov
jmp
shll
jmp
rcrb
jmp
into
lcall
int
call
fistpll
in
mov
loope
scas
fmul
mov
call
mov
jl
lret
dec
test
fwait
jmp
mov
out
jmp
enter
leave
nop
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int3
cwtl
call
into
cltd
call
into
fwait
jmp
iret
popf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
call
int
jmp
movsb
push
loopne
in
fsubrs
add
shrl
call
ret
sarl
jle
lret
scas
jne
lret
fdivrs
mov
jmp
enter
leave
xchg
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
jmp
int
call
into
lcall
into
fwait
jmp
iret
pushf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
ljmp
jmp
movsl
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
rcrb
jmp
int
in
xlat
scas
out
fistpll
add
shrl
fld
cwtl
call
mov
cmp
mov
dec
lods
jb
mov
stos
jmp
enter
leave
nop
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
call
int
call
into
lcall
into
fwait
call
rcrb
jmp
shlb
jmp
shll
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
test
jmp
test
ljmp
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
movsl
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
ljmp
ljmp
jmp
shll
jmp
iret
popf
call
fnsave
jne
add
add
shlb
fcmovb
fwait
call
mov
cmp
mov
dec
scas
jbe
shlb
stos
jmp
leave
xchg
jmp
leave
xchg
jmp
lret
out
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
xchg
call
int
call
int
call
into
pushf
call
iret
popf
jmp
iret
sahf
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
int3
popf
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsb
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
pushf
jmp
loopne
sti
repz
xor
add
add
shlb
fadd
pushf
call
mov
xchg
iret
mov
dec
mov
call
mov
ljmp
jmp
lret
out
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int3
cwtl
call
int
call
into
fwait
jmp
iret
popf
jmp
iret
popf
jmp
shlb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
in
xlat
lods
jmp
stos
jmp
int3
lahf
jmp
int3
lahf
jmp
int3
sahf
jmp
stos
jmp
test
ljmp
ljmp
ljmp
ljmp
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
iret
popf
jmp
movsl
push
loopne
lock
out
adc
add
add
shll
neg
enter
rcll
shll
jns
iret
mov
call
int
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
lret
xchg
jmp
int3
xchg
jmp
int
call
int
jmp
into
fwait
jmp
rcrb
jmp
rcrb
jmp
shll
ljmp
ljmp
jmp
mov
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsl
jmp
movsl
jmp
movsb
in
stos
in
xlat
scas
jmp
int
jmp
int
jmp
int3
mov
jmp
iret
lahf
in
stos
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
movsb
jmp
mov
jmp
mov
jmp
shll
out
fnstenv
ret
add
in
mov
loope
stos
out
leave
mov
call
mov
cmp
mov
call
mov
jmp
shrl
jmp
lret
xchg
jmp
int3
xchg
jmp
int
jmp
int
jmp
int
call
into
lcall
into
pushf
jmp
iret
popf
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsl
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
movsb
in
aad
in
fnstenv
jmp
int3
lahf
jmp
int
jmp
into
mov
jmp
int
jmp
lods
jmp
cmpsb
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
ljmp
ljmp
ljmp
ljmp
push
fnstsw
cwtl
in
mov
loop
lods
loope
lret
mov
call
mov
test
shll
jnp
out
stos
jmp
cmpsb
jmp
lret
xchg
jmp
int3
xchg
jmp
int
jmp
int
jmp
into
cltd
call
into
fwait
call
iret
pushf
jmp
iret
popf
jmp
shll
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
ljmp
out
lods
loop
lcall
into
mov
jmp
iret
mov
jmp
into
mov
in
stos
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
ljmp
ljmp
ljmp
ljmp
ljmp
push
loope
repnz
inc
in
mov
in
scas
mov
fadd
lcall
mov
cmp
loopne
fwait
in
aam
jmp
lret
xchg
call
int
call
into
fwait
call
iret
pushf
call
iret
popf
jmp
rcrl
ljmp
ljmp
jmp
mov
ljmp
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
out
fdivrl
xchg
add
add
loop
cwtl
lahf
jecxz
popf
jmp
int
jmp
into
mov
jmp
iret
movsl
jmp
iret
movsb
jmp
shll
jmp
test
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
movsl
jmp
movsb
jmp
movsb
jmp
mov
push
loop
repnz
adc
add
add
shll
ffree
pushf
fcmovb
xchg
call
mov
cmp
mov
fadd
xchg
out
fnstenv
call
int
jmp
iret
pushf
jmp
rcrb
jmp
rcrb
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
out
fdivrl
rolb
add
add
add
loop
cltd
adc
lret
fwait
shl
int
jmp
iret
mov
jmp
shlb
jmp
iret
movsb
jmp
lods
out
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
movsl
jmp
movsl
jmp
movsb
ljmp
push
loopne
roll
add
add
shll
lahf
fadd
xchg
fdivrs
test
aam
cmp
out
call
iret
popf
jmp
rcrb
jmp
rcrb
jmp
shlb
ljmp
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
cmpsb
out
fdivrl
fucomi
xlat
lods
add
add
add
lret
jecxz
sahf
clc
in
mov
jmp
shll
jmp
shlb
out
fnstsw
jmp
cmpsl
jmp
test
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aam
in
aam
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsb
ljmp
push
loop
mov
add
add
aad
push
jecxz
test
fadd
xchg
fld
call
mov
cmp
mov
mov
ljmp
jmp
rcrb
jmp
shlb
ljmp
ljmp
ljmp
ljmp
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
out
fidivl
out
fdivl
add
int3
popf
jns
into
mov
jmp
shll
jmp
shrb
call
loope
in
xlat
lods
jmp
test
jmp
test
jmp
stos
jmp
stos
jmp
stos
jmp
stos
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsb
jmp
cmpsl
push
loop
hlt
out
inc
out
mov
in
stos
cmc
loope
mov
fcmovb
fdivrs
cmp
mov
mov
jmp
movsl
jmp
rcrb
jmp
shll
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
out
fnstenv
stc
lock
jecxz
popf
add
int
mov
shlb
jmp
shrb
jmp
shrb
jmp
mov
icebp
loop
jmp
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
jmp
test
in
fsubrs
repz
out
sbb
add
add
aad
sbb
shrl
faddp
lcall
mov
test
xlat
mov
stos
jmp
test
jmp
shll
ljmp
ljmp
jmp
movsb
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
aad
in
aam
in
xlat
scas
push
in
lock
add
int
es
movsb
loop
shrb
jmp
shrl
jmp
shll
out
ffreep
push
fidivrs
in
stos
in
stos
in
stos
in
stos
in
stos
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
test
in
stos
in
aad
jmp
cmpsl
out
fnstsw
int3
in
mov
in
lods
lret
loop
movsb
fwait
fadd
xchg
fcmovnb
mov
fdivrs
cmp
iret
mov
jmp
shll
ljmp
ljmp
ljmp
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
stos
push
in
push
loopne
xchg
in
mov
jmp
shrl
jmp
shrl
jmp
iret
movsl
jmp
shlb
out
fidivl
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
lods
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
stos
in
aad
jmp
cmpsl
push
fistpll
stos
out
mov
in
lods
mov
loopne
pushf
ffree
xchg
fcmovnb
mov
fnstcw
test
jecxz
mov
ljmp
ljmp
ljmp
ljmp
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
test
in
aam
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
lods
in
stos
in
stos
push
in
push
loop
ret
add
out
cmpsb
xchg
out
stos
call
shrl
out
cmpsl
jmp
into
mov
push
in
in
fsubrs
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
lods
in
lods
in
stos
in
stos
in
stos
in
xlat
stos
push
in
hlt
in
dec
in
lods
nop
jecxz
movsl
jmp
lret
faddp
xchg
fcmovnb
mov
fidivrl
test
ffreep
xchg
out
fidivl
ljmp
jmp
movsb
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
test
jmp
test
jmp
test
jmp
test
in
aad
in
aad
in
stos
in
stos
in
stos
in
stos
in
lods
in
lods
in
lods
in
aad
push
loop
push
out
loope
jmp
add
out
cmpsb
adc
shrb
call
shrl
jmp
iret
movsb
jmp
int3
sahf
in
fdivrl
in
stos
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
lods
in
stos
in
fsubrs
cli
hlt
out
daa
in
stos
jnp
into
movsb
jmp
lret
faddp
xchg
fcmovnb
fidivrl
test
faddp
xchg
push
fidivrs
ljmp
jmp
movsl
jmp
movsl
jmp
cmpsb
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
jmp
test
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
stos
in
stos
in
lods
in
lods
in
lods
in
lods
in
aad
push
loopne
push
call
aam
out
test
out
stos
repz
aam
jmp
shrb
jmp
int
jmp
leave
fwait
push
jecxz
push
fidivrs
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
xlat
lods
in
xlat
lods
in
lods
in
lods
in
lods
in
stos
out
fdivrl
fiadds
add
add
shrl
jmp
lret
ffreep
xchg
fadd
mov
fadd
mov
fidivrl
mov
out
fnstsw
jmp
movsl
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
jmp
cmpsl
in
aad
in
aad
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
stos
out
fnstsw
stc
hlt
call
add
out
stos
ja
aam
call
shrb
jmp
into
mov
jmp
into
lahf
push
out
out
fidivl
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
fsubrs
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
lods
push
loope
push
in
mov
in
test
jecxz
mov
ffreep
xchg
ffree
fadd
mov
fstpt
test
in
fnstenv
jmp
cmpsb
jmp
cmpsl
jmp
cmpsl
jmp
test
jmp
test
in
aad
in
aad
in
aad
in
aad
in
stos
in
stos
in
stos
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
lods
out
fidivl
repnz
bound
add
add
shrl
scas
call
shrl
jmp
iret
mov
jmp
enter
aam
push
in
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fsubrs
in
fsubrs
in
xlat
scas
in
xlat
scas
in
xlat
scas
push
in
push
in
pop
in
movsl
push
in
mov
ffreep
xchg
faddp
mov
ffree
mov
fdivrl
test
in
fdivs
jmp
cmpsl
jmp
test
jmp
stos
jmp
stos
in
aad
in
stos
in
stos
in
lods
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
push
out
mov
add
add
shrl
shrl
jmp
iret
mov
jmp
leave
xchg
ffreep
nop
out
fdivrl
in
xlat
scas
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
in
fdivs
out
div
out
sbb
add
add
into
mov
into
loope
lcall
les
fdivrl
xchg
call
in
aad
in
aad
in
aad
in
stos
in
stos
in
stos
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fsubrs
push
out
push
call
add
out
stos
pop
out
stos
jmp
shrl
jmp
int
jmp
lret
loopne
xchg
jmp
lds
out
fidivrs
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fsubrs
push
jecxz
fadds
add
add
int
stos
loope
lcall
les
ffree
mov
fdivrl
fwait
out
fdivrl
in
stos
in
stos
in
stos
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
fsubrs
in
fsubrs
in
fsubrs
in
xlat
lods
push
in
push
ljmp
out
test
jmp
iret
movsb
jmp
int
jmp
lret
loopne
xchg
faddp
mov
jecxz
lcall
fidivl
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
push
loop
push
jecxz
mov
add
add
int
xchg
loope
lcall
les
ffree
mov
fdivrl
xchg
push
fnstsw
in
stos
in
stos
in
lods
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fsubrs
in
fdivs
in
xlat
scas
push
loope
push
ljmp
out
test
out
movsl
mov
jmp
lret
loopne
xchg
faddp
mov
fdivrl
lods
push
in
out
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
out
fidivl
push
jecxz
push
in
mov
jmp
xchg
ffreep
xchg
faddp
ffree
mov
fstpt
mov
out
in
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
lods
in
xlat
scas
in
fsubrs
in
fsubrs
in
fdivs
in
fnstenv
in
fsubrs
push
jmp
cli
imul
xlat
aaa
in
movsl
cmp
iret
mov
jmp
lret
loopne
xchg
ffreep
fdivrl
jle
out
loopne
push
loope
in
fnstenv
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
push
out
std
repnz
sub
add
add
int3
lahf
push
loop
fwait
jmp
xchg
jmp
xchg
faddp
ffree
mov
fdivrl
xchg
in
fidivl
in
xlat
lods
in
xlat
scas
in
xlat
scas
in
xlat
scas
in
fsubrs
in
fdivs
in
fdivs
in
fnstenv
in
fnstenv
out
fdivrl
std
hlt
call
add
in
mov
jmp
leave
cwtl
jmp
xchg
faddp
fdivrl
jg
faddp
mov
repz
out
fnstsw
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
out
fidivl
push
loope
jecxz
add
add
int
cmp
lret
fwait
stc
loope
xchg
jmp
xchg
faddp
mov
faddp
mov
fnstsw
cmp
fdivs
in
fsubrs
in
fsubrs
in
fdivs
in
fnstenv
in
fnstenv
in
fnstenv
in
fnstenv
push
jmp
lret
add
add
into
mov
test
loopne
xchg
faddp
mov
fdivrl
jg
fnstcw
popf
push
out
out
out
out
out
out
out
out
push
loop
push
loope
mov
in
lahf
sbb
lret
pushf
in
enter
xchg
faddp
nop
faddp
mov
fnstsw
cmp
shrl
in
fsubrs
in
fnstenv
in
fnstenv
out
fnstenv
out
fidivl
out
fidivl
out
fidivl
push
in
mov
add
add
lret
loope
xchg
fucom
lds
fdivrl
jg
fnstcw
je
jmp
mov
repnz
out
fidivl
out
out
out
out
out
out
out
fidivrs
add
lret
sahf
push
jecxz
popf
shl
lret
loope
xchg
ffreep
nop
faddp
mov
ffree
xchg
fstpt
sahf
out
fnstsw
in
fnstenv
in
fnstenv
in
fidivl
out
fidivl
out
fidivl
in
fidivl
push
in
rolb
add
add
xchg
dec
loopne
cli
faddp
mov
fdivrl
jg
fnstcw
jae
xlat
mov
push
jecxz
push
loope
out
out
out
out
out
out
push
loope
stc
out
fidivrs
add
int3
sahf
mov
lret
loope
xchg
ffreep
xchg
ffreep
mov
ffree
xchg
fstpt
xchg
out
fdivrl
in
fnstenv
in
fnstenv
in
fidivl
out
fidivl
out
fidivl
icebp
loop
push
in
jmp
ffreep
mov
fdivrl
jle
fnstcw
jae
mov
ffreep
mov
hlt
out
out
fidivrs
out
out
out
out
out
out
fnstsw
add
int
mov
lret
popf
jmp
leave
cwtl
jmp
xchg
ffreep
mov
ffree
mov
fdivrl
mov
out
out
fidivl
out
fidivl
out
fidivl
out
out
fidivl
push
out
div
out
xor
add
add
ret
faddp
mov
fstpt
js
xlat
mov
call
mov
call
mov
jmp
iret
mov
out
fdivl
out
fdivrl
out
fdivrl
out
fdivrl
out
fdivrl
push
loopne
in
fnstenv
add
into
mov
jmp
leave
lcall
lds
fdivrl
test
out
fnstenv
out
fidivl
out
fidivl
out
fidivl
out
out
fnstsw
cld
lock
push
ffree
xchg
fstpt
jge
fdivrs
jae
mov
call
mov
call
scas
push
push
jecxz
out
fdivl
out
fdivrl
out
fdivrl
out
fdivrl
out
fnstsw
in
xlat
scas
pusha
in
mov
jecxz
pushf
jmp
enter
xchg
faddp
mov
fnstsw
cmp
aam
out
fdivl
out
fidivl
out
fidivl
out
out
fdivl
out
fidivrs
add
mov
jl
fnstcw
je
mov
call
mov
call
mov
fdivs
ret
push
fistpll
out
fdivrl
out
fdivrl
out
fdivrl
out
fnstsw
std
in
fdivs
add
iret
movsb
cs
mov
jmp
lret
loope
xchg
ffreep
ffree
mov
fstpt
movsb
out
fdivrl
out
out
out
fdivl
push
in
push
fistpll
add
mov
ja
mov
call
mov
call
mov
call
scas
push
ffreep
mov
repnz
out
fnstsw
out
fnstsw
out
fnstsw
out
fnstsw
in
fnstenv
add
iret
movsb
sbb
iret
mov
jmp
lret
pushf
jmp
leave
xchg
jmp
xchg
faddp
mov
fdivrl
mov
out
out
out
push
jecxz
push
fistpll
add
mov
jbe
mov
call
mov
call
mov
call
scas
push
call
scas
fs
iret
mov
out
fnstsw
out
fnstsw
out
fnstsw
push
loope
in
xlat
scas
mov
in
mov
leave
in
mov
jmp
lret
loope
xchg
ffreep
mov
ffree
xchg
in
cwtl
push
fidivrs
out
fdivl
out
fdivl
push
loope
push
loopne
in
lock
adc
add
add
mov
dec
xlat
mov
cli
aad
outsb
call
mov
call
scas
addr16
scas
gs
scas
fs
mov
in
fdivs
out
fnstsw
out
fnstsw
out
fidivrs
ljmp
add
int
mov
int
jmp
int3
popf
jmp
lret
lcall
lds
jmp
leave
xchg
push
fistpll
out
fdivrl
out
fdivl
push
jecxz
cli
out
fidivrs
add
mov
mov
mov
call
mov
call
scas
callw
scas
gs
lods
fs
lods
arpl
fidivrl
mov
out
fidivrs
out
fidivrs
out
fidivrs
daa
in
sahf
xchg
jecxz
lahf
jmp
lret
popf
jmp
lret
loope
xchg
jmp
lds
jmp
xchg
out
fnstsw
out
fdivrl
push
fistpll
std
out
add
mov
or
mov
mov
aam
callw
scas
gs
lods
arpl
shrb
jmp
les
lock
lock
in
fnstenv
push
loop
fwait
imul
fwait
jmp
lret
loop
cltd
jmp
enter
xchg
ffreep
jmp
les
lock
lock
in
fidivl
aad
push
aam
addr16
scas
callw
scas
fs
lods
arpl
shrb
call
lods
popa
jmp
shlb
push
fidivrs
icebp
loope
ljmp
add
enter
leave
cwtl
loope
cwtl
jmp
enter
xchg
jmp
lds
faddp
mov
in
fnstenv
push
loopne
push
in
in
fidivl
aam
shrl
shrl
arpl
shrb
call
lods
popa
call
mov
in
fnstenv
push
loopne
push
loopne
call
add
add
xchg
pop
loopne
xchg
fchs
xchg
jmp
xchg
jmp
xchg
ffreep
faddp
mov
ffree
mov
out
sahf
push
fistpll
out
fidivl
add
scas
fs
arpl
shrb
call
lods
popa
call
lods
popa
fstpt
mov
jmp
lods
out
ljmp
add
les
fsub
les
repnz
mov
faddp
mov
fnstsw
mov
in
lcall
fsubrs
add
lods
arpl
lods
arpl
shrb
lock
lock
repz
fndisi(8087
lds
add
ret
lea
faddp
mov
faddp
mov
fdivrl
cmpb
les
sldt
add
shrb
bound
shrb
cmp
lods
popa
cmp
lods
popa
cmp
lods
popa
cmp
lods
arpl
fidivrl
add
clc
add
incl
add
clc
add
add
inc
add
add
incb
add
add
push
add
add
aas
incl
aas
cld
add
add
add
jmp
add
add
add
incl
add
incb
add
add
add
jmp
add
add
add
pop
inc
add
add
add
pop
incb
add
add
add
pop
clc
add
add
add
add
jmp
add
add
add
add
incl
add
add
add
add
cld
pop
clc
add
clc
add
incb
incl
add
add
clc
jg
incl
add
add
push
add
add
add
add
incl
add
ud0
clc
add
add
add
pop
clc
add
add
add
pop
push
add
add
add
add
jmp
add
add
add
add
inc
add
add
add
add
incl
add
add
incl
add
add
add
add
cld
pop
clc
pop
push
ud0
jmp
pop
inc
add
incl
add
add
add
incl
add
incb
add
cld
add
jg
clc
add
aas
push
add
add
add
add
add
jmp
add
add
add
add
add
ud0
incl
add
add
add
pop
incl
add
ud0
add
lock
add
incb
add
pop
incl
add
incb
add
aas
incl
add
clc
add
add
addb
incl
add
clc
add
add
incl
add
jg
clc
add
add
incl
add
aas
cld
add
add
incl
add
pop
cld
add
add
incl
add
pop
cld
add
add
incl
add
ud0
cld
add
add
incl
add
ud0
cld
add
add
incl
add
push
add
ud0
cld
add
add
incb
add
push
add
ud0
incb
add
incb
add
push
add
pop
incb
add
cld
add
pop
push
add
pop
incb
add
clc
add
add
lock
pop
incb
add
push
add
add
lock
aas
incb
add
jmp
add
add
lock
aas
incb
add
jg
add
add
loopne
add
incb
add
add
add
aas
loopne
add
incb
add
add
add
add
rolb
jg
incl
add
add
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
incl
add
add
add
add
inc
add
add
inc
add
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
jmp
add
ud0
jmp
add
ud0
jmp
add
ud0
jmp
add
ud0
jmp
add
pop
jmp
add
pop
jmp
add
pop
jmp
add
add
add
add
add
pop
push
add
add
add
add
add
aas
push
add
add
add
aas
push
add
add
pop
rolb
add
aas
push
add
add
xadd
add
add
push
add
add
pop
loopne
add
add
push
add
add
aas
lock
add
jg
push
add
add
jg
add
add
jg
clc
add
add
jg
add
add
jg
clc
add
add
cld
add
add
clc
add
add
incb
add
add
clc
add
add
incb
add
add
clc
add
add
incl
add
add
clc
add
add
incl
cld
add
add
inc
add
add
cld
add
add
inc
add
add
cld
add
add
jmp
add
add
cld
add
add
push
add
add
cld
add
add
push
add
add
cld
add
add
clc
add
add
cld
add
add
cld
add
add
incb
add
incb
add
incb
add
incb
add
incb
add
incl
add
incb
add
incl
incb
add
inc
add
incb
add
inc
add
incb
add
jmp
add
incl
add
push
add
incl
add
push
add
incl
add
clc
add
incl
pop
cld
add
incl
ud0
incb
pop
incl
incb
aas
incl
incl
jg
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
ds
mov
dec
add
xchg
pop
add
mov
inc
add
test
add
stos
push
add
stos
push
add
scas
pop
add
mov
add
mov
gs
movsl
push
add
scas
outsl
add
mov
add
mov
add
mov
add
mov
add
mov
jb
enter
fistpll
jbe
loop
jge
lea
test
lret
mov
add
mov
test
faddp
mov
ffreep
nop
add
cltd
add
rolb
loopne
popl
in
mov
in
mov
loope
xchg
add
leave
xchg
add
enter
lret
in
cwtl
add
lret
call
iret
sahf
add
rcrb
add
shlb
add
shlb
jecxz
stos
add
shrl
add
aad
add
lods
add
fdivs
add
fidivrl
add
loope
add
loope
add
out
add
call
add
incl
add
sbb
add
add
add
add
or
push
daa
adc
adc
or
add
add
add
push
sbb
add
or
add
add
xor
add
and
add
adc
add
sub
xor
add
sub
add
add
xor
ds
daa
sub
xor
sub
xor
sub
add
xor
xor
xor
inc
add
add
add
das
xor
ds
ss
add
add
sub
add
cmp
add
add
add
sub
add
add
ss
add
add
add
sub
add
add
and
add
add
add
xor
add
add
add
add
add
incl
add
aas
add
cld
pop
add
clc
sldt
lock
loop
add
arpl
add
xor
add
add
add
add
add
add
add
pop
add
loope
add
jecxz
add
out
add
out
add
sub
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
jnp
add
mov
cmp
add
xchg
mov
inc
add
popf
pop
add
xchg
add
cwtl
add
outsb
add
lahf
inc
add
lahf
push
add
mov
inc
add
cmpsb
dec
add
test
pop
add
test
push
add
stos
push
add
lods
push
add
stos
pop
add
scas
pop
add
mov
add
movsl
arpl
lds
push
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jae
ret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jns
fidivrs
jl
loopne
je
loopne
jp
loope
jl
loop
jg
scas
addl
shll
addl
fdivrl
mov
fnstcw
xchg
add
ret
xlat
ret
fwait
add
cwtl
add
ret
jecxz
test
in
xchg
in
mov
in
lea
in
popl
loopne
xchg
add
leave
xchg
add
lret
out
xchg
add
lret
in
fwait
add
int3
lcall
int3
popf
add
int
add
into
popf
add
rcrb
add
lret
fmul
lods
add
int3
mov
add
shlb
add
shlb
out
stos
add
shrl
add
aam
add
aad
add
xlat
scas
add
lods
add
mov
in
fnstenv
add
fdivl
add
fdivrl
add
fistpll
add
in
add
out
add
out
add
out
add
jmp
add
incl
add
add
push
or
add
add
or
adc
add
adc
add
add
add
add
add
adc
sbb
add
add
and
and
and
and
push
sbb
add
add
add
add
es
aaa
xor
and
push
pop
or
xor
push
aaa
aaa
push
push
add
add
add
add
es
dec
add
add
cmp
inc
add
add
es
add
add
adc
push
add
add
pop
dec
push
add
add
inc
inc
push
add
xor
add
add
inc
arpl
add
inc
cmovp
add
add
add
xor
push
pop
cmp
arpl
insl
add
add
add
pop
sub
dec
dec
push
push
pop
pop
arpl
pop
push
push
push
push
arpl
add
add
add
dec
dec
dec
push
pop
push
pop
pop
pop
pop
pop
pop
pop
push
dec
jo
add
add
add
sub
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aas
push
push
pop
push
pop
pop
insl
pusha
arpl
pop
pop
pop
push
add
add
inc
push
pop
pop
arpl
add
pusha
arpl
arpl
pop
push
pop
arpl
add
add
push
arpl
push
add
addr16
push
add
add
add
add
push
add
add
inc
pop
push
add
add
add
add
je
add
add
add
add
push
add
add
add
add
add
add
add
add
incl
jmp
incl
inc
incl
incl
jg
incb
aas
add
add
add
add
add
loope
add
jecxz
add
jecxz
add
roll
loopne
pop
add
add
add
add
add
add
add
add
add
sbb
add
cmp
add
jl
add
pop
add
lcall
add
aas
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
push
add
xchg
aas
add
sahf
aas
add
lahf
cmp
rcrb
cmp
add
sbbb
xchg
lods
lea
mov
push
add
pushf
pop
add
mov
lods
xchg
bound
scas
xchg
data16
data16
lcall
mov
mov
jbe
lcall
aam
inc
add
movsb
inc
add
mov
inc
add
cmpsb
dec
add
cmpsb
dec
add
test
add
test
push
add
lods
push
add
stos
push
add
lods
push
add
stos
pop
add
scas
pop
add
mov
add
mov
pusha
add
stos
addr16
mov
imul
test
add
stos
imul
shrb
bound
fdivl
fs
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jo
ret
add
stos
jb
lds
ja
int3
mov
add
mov
add
mov
je
shlb
jnp
loopne
je
loopne
jp
loope
jl
loop
jge
xchg
lea
add
scas
addb
mov
xchg
aad
xchg
fidivrl
addb
mov
mov
sarl
popl
iret
mov
mov
fadd
mov
ffree
lea
ffreep
popl
fld
xchg
add
ret
loope
test
in
xchg
jecxz
mov
in
mov
loopne
popl
in
mov
in
mov
loopne
xchg
add
xchg
add
enter
leave
xchg
add
enter
lret
out
xchg
add
int3
xchg
add
lret
out
cwtl
add
lret
pushf
add
int3
popf
add
int3
popf
add
int
add
into
popf
add
rcrb
add
lret
stos
add
int3
stos
add
into
mov
add
int
add
iret
lods
add
shlb
add
shll
add
aam
add
shrb
add
aam
add
aad
add
aam
add
lods
add
mov
call
fdivs
add
fdivl
add
fnstcw
add
fdivrl
add
fistpll
add
ffreep
add
loopne
add
loopne
add
loope
add
loope
add
jecxz
add
in
add
in
add
out
add
out
add
out
add
in
fildl
imul
fldl
incl
push
adc
add
add
add
add
add
add
or
push
or
or
or
add
adc
and
and
and
or
sub
add
add
sbb
and
and
and
aas
add
sbb
sub
sub
sub
sbb
sub
aas
cmp
sub
test
add
dec
sub
dec
dec
dec
dec
dec
dec
cmp
adc
mov
dec
dec
dec
dec
cmp
sub
add
aas
dec
dec
test
add
mov
push
add
xchg
jle
sub
add
add
add
add
das
dec
insl
imul
pop
dec
dec
mov
add
mov
aas
cmp
add
add
add
add
xor
add
add
xorl
add
add
aas
dec
aas
insl
add
add
add
add
imul
js
add
add
push
adc
push
add
add
add
add
imul
pop
pop
jbe
mov
or
add
add
add
add
gs
jo
jl
pop
addb
add
dec
insl
jo
jl
gs
insl
jbe
jp
mov
test
jbe
jo
xchg
inc
pop
imul
mov
test
js
pushf
add
imul
test
test
add
imul
test
test
add
push
jo
jp
test
mov
add
bound
js
jp
test
mov
mov
add
add
add
adcl
test
mov
mov
add
add
add
xchg
pop
test
mov
mov
mov
add
cwtl
pop
test
add
add
mov
mov
pop
test
add
add
add
mov
bound
xchg
add
add
add
add
movsl
popa
insl
popl
pop
popa
xchg
xchg
xchg
add
xchg
movsl
add
add
xchg
mov
add
add
add
add
mov
cwtl
jg
add
aas
cld
ud0
clc
ud0
lock
jmp
add
inc
add
incl
add
add
jg
add
aas
lock
pop
lock
lock
pop
lock
pop
lock
add
add
add
psubb
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
aas
clc
add
aas
cld
pop
sarb
pavgb
cld
pop
lock
pop
lock
aas
clc
jg
jg
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
jp
popa
add
push
cltd
jge
add
jl
add
js
add
lcall
rcrl
cmp
shlb
add
adcb
test
scas
mov
movsb
xchg
popl
mov
mov
scas
mov
lods
push
add
xchg
pop
add
xchg
push
add
fwait
pop
add
popf
pop
add
subb
andl
subl
test
mov
fwait
lea
cmpsb
popa
add
xchg
add
xchg
push
add
pushf
bound
mov
popf
add
sahf
imul
scas
fwait
je
mov
jo
mov
mov
insl
add
jne
mov
mov
inc
add
movsb
inc
add
movsb
inc
add
cmpsb
dec
add
test
add
test
push
add
test
add
stos
push
add
lods
push
add
stos
push
add
lods
push
add
stos
pop
add
lods
pop
add
scas
pop
add
scas
pop
add
mov
add
mov
data16
cmpsb
fs
test
add
mov
push
add
movsb
outsb
add
test
imul
into
scas
outsb
add
lods
arpl
shrl
popa
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
jno
ret
test
add
test
je
lret
lods
jo
leave
lods
jne
lds
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
je
shlb
jp
mov
add
mov
add
mov
add
mov
jg
fnstcw
jg
loopne
jae
loopne
jne
loopne
jne
loope
jns
loope
jl
loop
jg
scas
addl
lret
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
test
fstpt
addb
mov
test
sarb
mov
fnstcw
cltd
add
mov
mov
fcmovb
lea
ffree
lea
fadd
nop
add
les
add
lds
ffree
fwait
add
lds
add
ret
jecxz
test
in
xchg
jecxz
mov
in
mov
loop
mov
in
lea
in
mov
loopne
nop
add
xchg
add
leave
xchg
add
enter
lret
out
xchg
add
int3
xchg
add
leave
cltd
add
lret
cltd
add
int3
cwtl
add
lret
jecxz
lahf
add
int3
popf
add
int
add
into
pushf
add
rcrb
add
lods
add
leave
test
test
fmul
lods
add
int
add
into
mov
add
iret
test
in
movsl
add
shll
add
aam
add
shrb
add
aad
add
aam
add
aad
add
lods
add
lods
add
fsubrs
add
shlb
add
aad
add
fdivs
add
fidivl
add
xlat
mov
add
fdivrl
add
fistpll
add
faddp
add
ffreep
add
ffreep
add
loope
add
loop
add
loope
add
loop
add
jecxz
add
in
add
in
add
out
add
out
add
call
aad
cmc
in
flds
imul
faddl
incl
add
add
and
and
add
add
adc
cmp
sbb
add
add
adc
or
add
movups
or
xchg
add
add
movaps
or
or
or
add
adc
cmp
or
or
xor
cmp
cmp
cmp
or
add
xor
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
or
add
cmp
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
add
cmp
outsb
dec
inc
inc
dec
dec
dec
dec
pop
dec
dec
dec
dec
dec
inc
inc
inc
cmp
or
add
data16
inc
dec
pop
pop
pop
pop
pop
fs
pop
pop
pop
dec
dec
dec
dec
inc
inc
cmp
mov
add
push
data16
pop
pop
fs
fs
pop
dec
dec
dec
inc
cmp
add
push
jnp
pop
popa
fs
popa
popa
fs
addl
dec
dec
inc
inc
add
add
push
jb
popa
andl
addb
fs
pop
pop
dec
dec
dec
inc
dec
add
push
pop
pop
addl
enter
movsb
addb
fs
pop
dec
inc
je
add
je
xorb
add
add
mov
addb
add
enter
pop
dec
inc
mov
add
push
inc
pop
mov
add
add
add
add
movsb
add
add
add
lods
lods
je
fs
dec
scas
add
add
push
push
bound
ljmp
add
jnp
xorb
add
fs
iret
add
add
jb
mov
add
add
add
add
xchg
mov
add
add
add
popa
je
andb
add
jb
mov
mov
add
add
sbb
mov
add
add
add
push
pop
stos
scas
scas
mov
test
imul
add
xchg
push
push
scas
mov
add
add
add
pop
pop
inc
test
add
add
mov
add
add
iret
iret
mov
add
push
adc
scas
stos
mov
lahf
push
push
mov
stos
roll
mov
mov
iret
mov
sub
sub
scas
scas
stos
test
mov
stos
scas
scas
scas
mov
mov
iret
into
into
mov
cmp
stos
scas
test
scas
scas
scas
mov
mov
lret
into
lret
lret
mov
mov
scas
test
add
xchg
mov
mov
mov
into
mov
mov
stos
stos
jmp
add
stos
scas
scas
mov
mov
mov
mov
mov
mov
test
mov
mov
mov
mov
mov
movl
add
stos
scas
scas
mov
mov
mov
mov
mov
aad
add
mov
test
mov
mov
mov
mov
add
xchg
outsb
scas
stos
scas
scas
scas
mov
mov
mov
mov
mov
add
fists
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
faddl
add
add
mov
mov
loope
rcl
into
into
into
mov
add
add
xchg
scas
mov
mov
add
add
enter
into
into
int3
into
into
add
xchg
fwait
mov
lret
lret
lret
aam
add
add
lret
leave
lret
aam
into
into
into
into
into
into
xlat
add
fwait
fwait
lret
mov
lret
aam
add
add
add
leave
ror
into
into
into
into
into
into
into
faddl
fistl
lret
lret
lret
ror
jmp
add
add
add
loopne
mov
iret
iret
iret
iret
iret
iret
into
jmp
fildll
into
aam
iret
jmp
shll
xlat
iret
xlat
iret
add
add
iret
iret
iret
loopne
add
stos
cwtl
lret
fmul
aam
add
add
iret
iret
loopne
add
add
xchg
jnp
aam
faddl
add
mov
scas
aad
iret
loope
add
jae
iret
fmul
fsubr
add
add
stos
stos
iret
fmul
in
add
add
cwtl
xlat
leave
stos
stos
fmul
jmp
jno
scas
shll
add
add
leave
fildl
add
add
add
incl
add
incl
add
decb
incl
add
clc
pop
incl
add
push
add
incl
add
jmp
add
incl
add
inc
add
incl
add
incl
add
incl
add
add
incb
add
incl
add
cld
add
pop
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
cmp
add
add
cld
add
pop
add
add
add
jo
add
xadd
add
cld
add
pavgb
add
cld
add
pavgb
add
cld
add
pop
loopne
add
cld
add
add
pop
add
cld
add
add
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
addb
add
incl
pop
rolb
add
incl
pop
loopne
incl
add
add
loopne
incl
add
add
lock
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
decl
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
jle
jo
add
add
out
call
mov
add
call
add
mov
add
jle
or
add
add
mov
add
mov
add
mov
add
or
mov
or
add
or
add
or
add
mov
add
or
add
or
add
incl
add
aas
add
cld
pop
add
clc
sldt
lock
loop
add
arpl
add
xor
add
add
add
add
add
add
add
pop
add
loope
add
jecxz
add
out
add
out
add
sub
add
sbb
add
xor
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
jbe
add
loopne
add
add
add
add
out
js
add
add
add
add
mov
addb
add
add
pop
call
add
add
add
mov
out
out
add
add
pop
call
jle
add
add
jle
add
call
add
pop
call
add
call
mov
or
add
pop
call
orb
loopne
add
mov
pop
mov
mov
mov
mov
mov
mov
mov
add
add
clc
call
add
mov
add
mov
out
add
add
mov
mov
add
add
mov
addb
mov
add
push
mov
or
mov
add
add
or
mov
add
incl
jmp
incl
inc
incl
incl
jg
incb
aas
add
add
add
add
add
loope
add
jecxz
add
jecxz
add
roll
loopne
pop
add
add
add
add
add
add
add
add
add
sbb
add
cmp
add
jl
add
pop
add
lcall
add
aas
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
ja
add
js
add
add
push
add
ja
jle
loopne
add
push
add
js
out
jle
addb
add
add
add
pop
out
jle
out
call
add
add
js
enter
mov
addb
add
add
pop
call
mov
add
add
js
js
mov
js
out
add
add
xchg
jle
add
mov
jle
mov
add
xchg
add
add
xchg
call
addb
xchg
jle
addb
js
addb
enter
add
xchg
mov
add
add
mov
call
call
xchg
mov
mov
add
mov
mov
add
add
or
call
mov
add
or
mov
decb
add
or
mov
mov
add
or
mov
mov
call
add
mov
call
add
add
or
mov
mov
mov
add
add
or
add
add
add
add
add
clc
add
add
mov
or
add
add
mov
add
add
add
mov
add
add
add
mov
add
call
add
add
add
add
aas
cld
ud0
clc
ud0
lock
jmp
add
inc
add
incl
add
add
jg
add
aas
lock
pop
lock
lock
pop
lock
pop
lock
add
add
add
psubb
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
aas
clc
add
aas
cld
pop
sarb
pavgb
cld
pop
lock
pop
lock
aas
clc
jg
jg
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
ja
pop
outsb
outsb
jo
add
jbe
mov
add
add
ja
out
call
add
jbe
enter
call
pop
ja
out
out
out
add
add
enter
into
jle
add
pop
out
jle
enter
out
add
mov
xchg
addb
add
pop
out
mov
jl
ja
out
js
ja
ja
mov
addb
pop
call
call
call
js
mov
mov
mov
add
add
add
pop
call
call
jle
mov
add
add
add
jle
mov
or
mov
out
add
add
add
add
add
or
mov
add
add
add
call
add
or
mov
add
or
add
add
add
add
add
add
xchg
add
mov
add
add
enter
add
add
add
add
jle
mov
add
pop
call
add
add
xchg
mov
js
call
push
add
add
mov
mov
mov
out
mov
add
or
mov
jbe
mov
add
mov
mov
mov
mov
mov
mov
add
add
call
mov
call
add
add
call
mov
mov
add
add
add
or
call
mov
call
mov
add
add
call
mov
mov
add
add
add
or
mov
mov
add
add
add
mov
call
mov
add
add
add
or
mov
out
call
add
add
add
or
mov
mov
mov
add
add
mov
mov
mov
mov
add
add
mov
call
out
mov
add
add
add
mov
mov
js
mov
mov
addb
mov
addb
add
add
add
mov
lock
or
mov
add
add
add
add
mov
add
js
lock
add
add
add
mov
mov
mov
add
add
mov
mov
add
mov
add
add
mov
add
add
add
add
call
add
add
psubsb
add
add
add
add
mov
add
add
mov
add
add
add
add
call
add
add
add
call
add
add
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
js
add
incl
add
incl
add
decb
incl
add
clc
pop
incl
add
push
add
incl
add
jmp
add
incl
add
inc
add
incl
add
incl
add
incl
add
add
incb
add
incl
add
cld
add
pop
incl
add
clc
add
ud0
add
lock
pop
incl
add
loopne
add
incl
add
rolb
add
add
incl
add
incl
cmp
add
add
cld
add
pop
add
add
add
jo
add
xadd
add
cld
add
pavgb
add
cld
add
pavgb
add
cld
add
pop
loopne
add
cld
add
add
pop
add
cld
add
add
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
addb
add
incl
pop
rolb
add
incl
pop
loopne
incl
add
add
loopne
incl
add
add
lock
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
inc
decl
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
movb
sbb
xchg
add
add
pop
jne
gs
mov
jge
sbb
ret
pop
or
cmp
jae
pop
lods
mov
jg
test
les
mov
mov
sub
push
xor
or
xchg
popa
fs
pusha
outsb
push
mov
xor
jo
mov
mov
ret
mov
push
and
ja
xor
fs
test
or
rolb
gs
and
outsb
mov
decb
push
add
sbb
into
in
adc
daa
mov
jbe
mov
jle
scas
cmpsl
dec
fbld
inc
loopne
aad
adc
mov
sarl
cli
icebp
pop
cld
js
ret
pop
dec
inc
rdmsr
ror
and
cwtl
push
rcl
fbld
jno
adc
outsb
and
std
out
mov
fwait
inc
mov
xor
cmp
cmp
ret
ret
mov
sub
roll
enter
push
aam
mov
push
cmc
fistps
clc
ja
and
add
mov
aas
xchg
repnz
sub
xor
rcl
inc
and
arpl
push
aaa
mov
iret
jp
iret
or
es
inc
push
xchg
mov
xor
pop
and
jns
outsb
mulb
inc
dec
imul
stos
jecxz
xchg
xor
in
jbe
ffree
xchg
bound
push
add
stos
pop
mov
pop
arpl
movsb
rol
add
xchg
jb
sbb
aam
sbb
sbb
and
xchg
addb
lea
xchg
and
sahf
je
inc
arpl
inc
movsl
fs
pop
mov
jo
outsb
jle
mov
xor
sti
or
pop
sbb
dec
scas
pusha
scas
icebp
inc
mov
lock
push
rorl
stos
lds
sbb
pop
arpl
popf
push
push
jmp
sub
xchg
and
popf
lods
stos
es
mov
das
stos
sbb
data16
popfw
pop
adc
push
incl
out
shrb
lods
ljmp
jns,pt
and
inc
jl
push
inc
add
fs
sbb
add
jns
jno
loopne
xchg
repz
fldt
jns
es
out
inc
ret
mov
dec
mov
mov
push
cmpsl
jmp
sub
mov
fs
shlb
jae
pop
fmulp
imul
cmp
pusha
lea
int
outsl
stc
cmp
repnz
arpl
sbb
sbb
inc
push
mov
mov
push
aaa
mov
sbb
jmp
imul
or
xchg
xor
aas
sub
popf
nop
rolb
lods
je
or
cmp
pop
lods
aad
fiaddl
push
mov
loopne
ret
fsub
sub
fcoml
push
xlat
loopne
push
testl
add
push
inc
into
gs
xor
lahf
inc
pop
cmpsb
or
sbb
xchg
jnp
or
mov
add
movsb
repnz
rcll
xchg
mov
iret
aas
mov
cld
pop
add
add
add
push
cmp
sub
pop
jbe
outsl
lock
xor
lahf
pop
adc
inc
adc
sahf
xor
pushf
scas
adc
adc
pop
test
pop
xchg
sahf
fdivs
loopne
xor
fwait
lods
rorb
push
imul
dec
dec
es
call
xor
jmp
pop
jp
loop
out
push
je
roll
movsb
lea
cmc
imulb
std
clc
stc
insb
gs
cmp
fs
out
push
add
inc
testb
ficompl
ljmp
mov
jmp
loop
pop
dec
mov
jnp
mov
pop
fcmovbe
mov
cmp
sub
xchg
pop
xor
ljmp
xchg
jmp
jecxz
add
repnz
push
jne
mov
sub
xchg
add
mov
fidivrl
icebp
iret
lock
outsb
xchg
and
les
lahf
xchg
fiadds
nop
lret
mov
jbe
mov
loope
push
inc
lea
andl
iret
scas
and
jo
or
popa
rcrb
mov
dec
mov
mov
ss
loop
lret
mov
jl
mov
lcall
jbe
push
sbb
dec
popf
lods
mov
cmp
out
dec
mov
inc
adc
sub
xor
mov
aaa
leave
inc
sub
inc
or
mov
cmc
add
add
jg
les
cld
pop
jg
jle
scas
xchg
icebp
push
int
sub
xchg
pushf
int
mov
cmp
stos
nop
sbb
mov
pop
pop
ljmp
sbb
pusha
incl
scas
or
cmp
imul
movsl
shlb
out
movsl
xor
sti
jmp
sub
dec
xchg
xor
xchg
add
push
sbb
inc
lcall
mov
inc
mov
cmp
stos
rcrb
into
stos
cld
iret
xlat
es
push
jno
xor
mov
aad
cmp
add
std
xchg
jle
sbb
movsb
out
nop
jecxz
aam
push
sahf
mov
add
test
imul
lods
xchg
mov
js
into
add
jbe
std
iret
fsubrl
sarb
jb
out
adc
fsubrp
push
add
jecxz
test
mov
fdivl
push
mov
rclb
mov
ss
pop
ret
rorb
repz
jo
out
fistps
or
jmp
insl
cli
mov
nop
or
adcb
xchg
pop
adc
sbb
addl
cld
or
mov
adc
adcb
and
jg
sub
in
jecxz
jno
imul
mov
pop
test
lea
mov
test
lret
push
lea
gs
stc
sbb
cmp
xchg
jb
stos
xor
push
mov
repnz
idivb
popf
jo
cmp
jae
pop
stos
push
dec
mov
repnz
pop
push
lahf
dec
and
xchg
lock
mov
adc
cmp
insb
aam
dec
mov
xorl
lret
xchg
sbb
psadbw
ja
mov
pop
outsb
jecxz
jo
mov
or
out
jne
sti
jmp
addl
pop
mov
cld
sbb
pop
sub
pop
adc
pop
jne
shlb
loope
push
xor
sub
cwtl
aam
sbb
sahf
testl
movsl
mov
idivb
dec
sbb
mov
or
lcall
or
mov
or
ljmp
inc
mov
jle
and
in
jno
sbb
xorl
adc
call
push
jnp
test
cmp
ret
dec
xor
sub
adc
push
mov
xor
lock
call
mov
orb
aaa
out
std
mov
push
in
out
rorl
or
inc
push
mov
cli
push
fwait
lret
outsb
arpl
inc
push
fnstsw
push
stos
mov
fchs
js
sbb
cmp
ror
add
cwtl
popa
mov
cltd
scas
xor
jmp
sbb
cmp
repnz
sbb
push
jnp
nop
pop
mov
xchg
outsb
adc
pop
push
cmp
mov
pop
push
cmp
shrd
test
out
aam
inc
shll
lret
cmp
ret
and
fs
test
iret
sub
dec
rorl
outsb
ljmp
cmp
add
pop
aad
xor
jae
shl
cltd
hlt
inc
mov
dec
push
cli
and
xchg
cltd
pop
ss
push
arpl
daa
lret
mov
fs
rorb
scas
push
pop
push
pop
xchg
imul
pop
pop
lock
push
sub
cmc
jbe
imul
push
cltd
and
push
mov
pop
int3
call
stos
jo
or
inc
shll
rep
rorb
add
pop
jo
shlb
idivl
fsubr
gs
into
xchg
movsl
iret
push
mov
jb
inc
out
lds
cmpsl
loopne
sti
and
out
add
jmp
jb
mov
xor
jno
xor
xor
xor
mov
cmpsl
aas
push
xor
xlat
js
dec
shlb
out
ret
call
aad
jbe
sti
mov
lret
jb
aas
push
dec
cmc
xchg
or
xchg
addl
test
adc
cmp
popa
mov
out
xor
gs
mov
addr16
mov
inc
dec
daa
out
adc
fistpll
dec
sahf
push
repz
daa
and
sbb
push
mov
mov
lcall
std
dec
xchg
adcl
std
xchg
not
adc
mov
jecxz
aaa
cs
sub
es
pusha
cli
add
cs
dec
mov
xor
jle
jbe
push
test
sub
jne
int
data16
pop
cmpb
adc
dec
and
loopne
jp
mov
mov
xor
mov
insb
mov
test
ret
adcb
jo
inc
add
scas
mov
and
sbb
pop
jo
and
and
testb
iret
jo
add
movswl
jg
xor
fcomip
insl
fwait
clc
xor
sub
lcall
or
pop
divb
out
out
ja,pn
or
lock
loopne
inc
fisubl
push
xor
imul
in
jg
and
cmp
lret
pop
mov
lods
mov
aam
mov
cmp
pop
jae
ja
xor
lods
popa
out
fmuls
outsb
scas
mov
lcallw
test
hlt
and
jnp
mov
mov
test
or
psubusw
jle
add
fisubrs
imull
xor
add
cwtl
or
xchg
pushf
insb
mov
ja
mov
cwtl
mov
xchg
or
ret
or
test
ja
xchg
es
jmp
mov
loopne
cmove
insb
aas
mov
mov
mov
cmpsb
in
and
pop
sbb
stos
mov
ljmp
xor
cmpl
adc
mov
xchg
shll
dec
pop
push
push
outsl
push
jno
jns
enter
in
fimull
adc
jb
bound
adc
stos
or
test
sbb
imul
mov
add
sub
push
pop
cmp
outsl
inc
outsb
lods
mov
or
test
test
push
jnp
inc
jle
push
arpl
jo
push
jle
jp
test
jae
lock
sub
pop
add
adc
jnp
inc
nop
lea
xchg
jg
pop
mov
lods
hlt
popa
mov
pop
ret
mov
jmp
repz
sbb
add
aad
dec
lahf
daa
or
sub
cmpsl
xchg
sbb
leave
nop
mov
push
inc
jnp
sbb
in
lods
mov
and
sub
aaa
sub
aaa
and
or
xchg
xor
lods
sub
cltd
mov
dec
insb
jge
pop
cmp
jl
sbb
outsb
sar
lahf
adc
imul
xchg
pop
xchg
call
xchg
hlt
lea
push
jb
inc
fwait
sbb
or
mov
hlt
in
push
pop
or
sbb
pop
test
push
pop
jg
add
cmpl
rorb
dec
int3
sbb
mov
push
adc
mov
rorb
out
add
mov
xor
and
mov
popf
test
lcall
call
push
fisttpl
repz
lret
mov
jl
cmc
jo
xchg
push
loopne
cmc
pop
jmp
mov
cmp
int
cmp
lahf
dec
int3
enter
shll
push
clc
movsl
pop
mov
lds
mov
mov
sbb
jae
inc
loope
mull
repz
mov
popf
add
repnz
insb
out
scas
sub
je
int
pop
jmp
rorb
rclb
jle
jns
test
push
fisubs
push
cs
or
or
jae
rorb
fildll
addr16
das
and
sub
mov
adc
mov
nop
insl
ret
inc
ljmp
fldenv
jle
aad
pop
lret
jl
cs
sbb
add
in
add
cmp
out
pop
rorl
enter
cmp
mov
and
lahf
fisubrs
mov
fstpt
subl
in
add
dec
sbb
mov
cmp
shrl
lods
mov
dec
loopne
sub
mov
adc
adc
mov
mov
les
mov
xchg
mov
jb
and
sbb
fs
arpl
mov
scas
and
pop
and
mov
push
push
sahf
movsb
mov
sub
jle
dec
lock
jb
xchg
cmp
insb
pop
xchg
je
addb
mov
test
pushf
sbb
lods
jne
jmp
adc
daa
jecxz
lret
jecxz
and
imul
inc
dec
sti
iret
inc
dec
fmull
ljmp
mov
scas
or
dec
or
adc
pop
xor
dec
xor
nop
mov
clc
pusha
out
mov
jg
xchg
std
mov
int
stos
js
jae
movsb
mov
mov
xchg
xor
sbb
aam
adc
jae
or
cmp
loop
aas
mov
lret
int
sar
test
cwtl
ljmp
test
and
and
sbb
cmpsb
icebp
dec
dec
add
lcall
sbb
ret
mov
and
in
and
mov
mov
jbe
xor
pop
mov
mov
jne
mov
insb
leave
push
mov
cmp
mov
sub
sbb
cwtl
and
outsb
jb
scas
popa
add
icebp
inc
sub
arpl
lods
lcall
jnp
pop
and
dec
dec
push
fmull
mov
fdivr
orb
sub
mov
xchg
in
je
mov
sub
outsl
inc
pop
mov
xchg
push
addr16
cmp
pop
jg
aad
fadd
push
shll
loop
loopne
and
adc
outsb
movsb
xchg
mov
push
lock
push
inc
jne
and
cmp
and
scas
inc
or
mov
sub
fs
pop
in
popa
cli
pusha
dec
jmp
jp
hlt
pop
ds
sub
fidivs
out
sub
jae
inc
jmp
mov
sahf
imul
xchg
jo
jecxz
pop
cmp
daa
push
addr16
dec
js
jno
fnstsw
jg
push
pop
stos
arpl
sub
test
scas
pop
jmp
push
in
cli
lods
imul
es
xchg
inc
jo
es
push
push
loopne
push
sbb
imul
mov
mov
mov
inc
jbe
mov
ds
incl
ret
lds
push
sti
jecxz
mov
shrb
out
mov
shlb
xor
pop
cmp
jmp
pushf
gs
fcoml
in
xchg
sub
cmp
xchg
xlat
mov
fbld
out
bound
test
lods
pop
int3
and
mov
movsb
xor
push
sti
mov
or
inc
push
into
hlt
push
xchg
out
xchg
sbb
pop
push
dec
popf
jle
out
fistps
inc
icebp
push
jo
flds
arpl
inc
jo
ds
in
xchg
aas
jb
jle
xor
and
adc
in
fs
mov
mov
shrb
cmp
cmp
dec
fsubl
addl
pop
xchg
insl
ffreep
cmp
sub
int3
cmp
xchg
cmpsl
sti
test
xchg
repnz
mov
xchg
and
fsubrs
cltd
mov
test
adc
aas
sub
repz
in
cs
scas
add
movsb
aam
cmp
dec
popa
cmp
lret
dec
sbb
movsl
cmp
shlb
sti
into
jle
xchg
adc
mov
mov
sbb
rclb
fmulp
xlat
sub
es
aad
mov
pop
push
xchg
std
repnz
inc
xchg
jle
add
xchg
out
insl
sbb
daa
mov
repz
push
lods
icebp
and
mov
xor
dec
pushf
inc
cwtl
addr16
xchg
mov
mov
xor
push
outsb
mov
loope
mov
sbb
sub
shrl
insb
mov
fidivl
dec
js
mov
out
cmc
jb
pop
inc
jbe
jle
or
mov
insb
mov
imull
cltd
xchg
dec
out
mov
mov
xchg
iret
enter
ror
loop
dec
ss
mov
roll
icebp
push
push
stc
rcrb
mov
test
and
push
call
inc
mov
rol
stos
xlat
ja
mov
and
jmp
jne
out
js
ret
mov
leave
pop
das
or
xchg
inc
fcmovu
fnsave
out
add
dec
dec
cmpsb
shl
xor
mov
jno
push
mov
push
adc
fcmovb
pop
mov
cwtl
scas
push
ss
push
in
test
sbb
popa
cmp
jle
dec
test
lods
mov
mov
mov
in
scas
pushf
cmpsl
push
enter
add
lods
rcr
xchg
lahf
pop
ds
outsl
lahf
jns
push
cmp
fstpl
push
add
scas
in
das
jns
leave
add
xchg
push
cmc
mov
das
sbb
mov
inc
faddl
iret
shlb
xor
js
push
push
pop
aaa
pop
shlb
imul
in
jmp
mov
arpl
xchg
add
mov
xchg
cltd
nop
sahf
insl
lcall
jg
fldcw
push
sbb
fsts
and
stos
sbb
loop
fsubr
sarb
push
and
in
pop
daa
mov
je
sbb
mov
or
mov
xlat
das
loope
gs
push
mov
dec
cmp
ss
scas
in
insl
push
punpckhdq
pushf
repz
sbb
mov
cmpsb
out
mov
add
rorb
ficomps
mov
hlt
aam
push
cwtl
jl
push
pop
inc
xchg
fnstenv
cmp
repnz
and
lods
dec
lret
leave
and
fsts
inc
or
jns
out
xchg
jnp
insl
pop
fidivrl
mov
jl
repz
fmull
ljmp
sbb
cmp
out
mov
cmp
pusha
mov
cmp
les
mov
jne
pop
xor
xchg
enter
add
add
mov
scas
scas
out
insb
lock
das
out
repz
jns
adc
in
pop
loope
popf
xor
dec
xor
mov
scas
push
dec
add
xchg
ret
roll
rcrb
enter
jo
mov
pop
jg
adc
cs
stos
cmpsl
scas
or
mov
adc
pushf
xchg
lods
fistpl
lds
fstps
xor
mov
mov
xorl
rcr
inc
cmp
xor
mov
fistps
out
sbb
dec
std
xchg
sub
push
aad
sbb
loop
add
add
cmp
fmull
outsl
lods
mov
aad
dec
xchg
ljmp
dec
mov
lock
mov
cld
mov
add
xor
lods
fs
jnp
jmp
cmp
mov
cmp
or
mov
mov
dec
cmpsl
push
adc
in
roll
out
or
xchg
push
xor
stos
scas
mov
sbb
inc
push
adc
into
fisttpll
jg
push
jl
mov
decb
push
fucomip
jns
dec
add
out
popf
or
add
into
js
xchg
sub
or
push
aaa
push
int
jno
push
hlt
testl
push
and
and
inc
xor
or
dec
dec
jbe
shlb
dec
gs
inc
imul
mov
imul
loope
std
sbb
aam
fmuls
movsb
aaa
stc
mov
xor
cs
test
movsb
ja
cmpsb
insb
lods
stos
jns
movsl
ret
mov
int
jno
jnp
jecxz
adc
mov
jb
mov
mov
mov
cmp
ljmp
pop
add
sub
xchg
jge
fidivs
jae
lret
xchg
mov
lcall
sbb
push
cwtl
dec
push
xchg
aad
xchg
std
xor
dec
test
inc
mov
repz
outsb
push
mov
pushf
cltd
adcl
lret
and
adc
std
adc
bound
outsl
sbb
jmp
inc
mov
inc
mov
jge
add
rcrl
stc
or
and
push
xchg
pop
jmp
in
mov
ficoms
aaa
pop
xor
lret
in
inc
pop
xor
inc
pop
les
cli
mov
mov
and
sti
movsb
mov
pop
cwtl
inc
jns
lods
outsl
call
sub
lcall
adc
or
loop
ljmp
adc
mov
fwait
push
dec
jg
cmp
popf
push
sub
inc
xor
add
loop
incb
pusha
dec
xor
mov
popf
xchg
push
add
mov
push
mov
dec
mov
fwait
inc
pop
or
jno
out
int3
mov
push
xchg
inc
loope
sub
cmp
sbb
cmp
movsb
jmp
inc
in
ljmp
fistps
lret
call
xchg
push
add
cmpsb
hlt
rol
jecxz
in
jbe
jle
or
inc
dec
int3
loopne,pt
pop
lret
mov
fnstsw
ja
add
push
mov
push
xchg
rorb
call
repnz
add
push
mov
jbe
push
pop
sahf
cmpsl
mov
sub
push
loope
incb
pop
jge
lcall
mov
jecxz
neg
cmp
lret
pop
imul
inc
xchg
mov
mov
xchg
push
mov
fsubrs
dec
ljmp
push
push
add
fdivl
mov
les
and
outsl
push
enter
fadd
inc
ret
xor
adc
mov
shr
lea
aam
jle
push
mov
dec
mov
inc
mov
int3
das
xor
mov
out
loopne,pn
aam
mov
loopne
pop
jns,pt
fsubrl
xor
mov
cmp
sub
lret
jae
fistpl
sub
les
sbb
and
adc
xchg
shlb
xchg
jle
lods
sbb
jge
test
daa
rcll
ret
ja
dec
inc
pop
call
pop
cmpsw
ljmp
jp
xor
sub
fdivrl
loopne
push
shrl
sbbl
lock
test
pop
push
lock
pop
pop
xchg
jecxz
xchg
mov
pop
dec
push
xor
pop
and
jle
cwtl
dec
insb
and
in
dec
push
mov
movsl
pop
xor
jle
in
gs
jecxz
scas
and
dec
fld
enter
loopne
jmp
sub
ret
xchg
das
imull
mov
insl
dec
mov
aas
lahf
dec
sbb
push
jg
xor
xlat
fists
sub
aam
pop
inc
adcb
icebp
sbb
lcall
daa
test
incb
sbb
repnz
clc
jecxz
and
lea
mov
mov
sbb
lcall
les
mov
sbb
dec
clc
fists
xchg
pop
dec
jle
leave
dec
sbb
inc
xchg
and
loope
das
cmpsb
jnp
test
lret
ficoms
adc
arpl
jno
xor
cmp
jnp
test
or
das
add
out
bound
or
add
pop
outsl
and
stos
mulb
inc
rclb
int
rcll
push
sub
aam
sarb
loopne
loope
adc
add
jb
jbe
loope
inc
test
xor
push
scas
sub
pop
pop
pop
fsubl
or
adc
fisttpll
cmpsb
js
data16
clc
outsl
aam
xor
adc
cld
xchg
cmpsb
push
jb
movb
cmp
ret
xchg
stc
and
mov
mov
sbb
mov
mov
cmpl
fidivs
sahf
movsb
xchg
int
iret
pop
sbb
ja
testl
test
aam
inc
stos
jae
aaa
aad
sbb
or
stos
xor
xchg
cmpsl
dec
outsl
cmc
pop
pop
loopne
lods
add
add
les
lret
aaa
jb
movsl
inc
out
rcr
scas
outsb
int
gs
sub
push
sbb
inc
xchg
cs
jb
add
aaa
or
adc
sub
es
mov
icebp
mov
push
cmp
mov
into
hlt
lahf
sub
or
xor
add
mov
mov
fcoml
movsb
out
cwtl
aas
lcall
cmp
clc
jno
and
mov
insl
popf
test
lds
inc
add
loope
mov
outsb
mov
psubusb
out
jo
cmp
lahf
sub
lods
repz
aas
or
xor
xchg
dec
or
add
jo
sbb
sbb
in
xchg
sub
push
jae
ficomps
lds
push
mov
fisubrl
dec
testb
cmp
sbb
out
dec
or
ljmp
stc
aas
aad
add
popa
shl
sbb
pop
jns
dec
xor
add
data16
or
fstpt
push
pandn
stos
jne
out
push
push
faddl
or
adc
in
and
add
cli
enter
jae
sub
add
std
pop
or
insb
dec
imul
incb
ret
mov
pop
sbb
adc
cs
in
scas
mov
rcr
xchg
cli
sbb
mov
mov
sahf
repz
and
cmp
add
jb
jae
and
cmp
dec
mov
pop
push
ficompl
jo
ret
push
aaa
gs
pop
inc
mov
loopne
daa
adc
loope
add
int
cmc
adc
cmpb
and
arpl
mov
fimull
push
vmovdqu
std
arpl
aam
cmp
push
inc
mov
aam
sbb
das
inc
jle
clc
xchg
daa
xor
aas
sti
lds
out
mov
ljmp
in
mov
cltd
mov
fsubr
xchg
dec
sti
inc
jbe
fsubs
and
lea
and
jnp
or
enter
ficompl
ds
std
fildll
out
cmpsb
aaa
rorb
cmp
pop
cwtl
shll
movsl
cmp
cwtl
rsm
or
cmpsb
push
xchg
xor
popa
jle
sub
pop
lret
push
fnstenv
mov
icebp
cmc
clc
mov
xor
sub
cmc
ret
xchg
and
xchg
mov
stc
test
and
jae
mov
sbb
inc
lret
cmpsb
dec
mov
dec
rclb
mov
popf
sub
fmull
pop
push
fisttps
dec
cmp
mov
pop
sahf
aad
jae
lret
pop
vcvtps2dq
jnp,pn
pop
mov
lods
mov
pop
xor
and
xlat
repnz
or
mov
cmp
int
pop
into
and
data16
leave
push
addr16
xlat
pop
les
ljmp
xchg
mov
sahf
pop
movsl
movsl
add
xchg
xchg
fiaddl
scas
sub
sub
mov
mov
testb
push
jnp
lret
imulb
or
mov
outsb
ret
mov
fwait
shlb
incb
and
insl
mov
jno
sbb
mov
add
aam
push
or
repnz
fwait
cmp
pop
and
xor
popa
inc
or
inc
xchg
xor
popf
and
mov
push
sub
clc
icebp
xor
push
mov
test
movsl
inc
add
mov
pop
jge
divl
pushf
orl
dec
cmpsl
mov
and
xor
xor
push
push
jb
mov
cmpsb
notl
jge
aad
fstpl
arpl
pop
das
stos
or
inc
inc
outsb
aaa
adc
test
cld
lahf
sbbb
add
ss
sub
pop
cmp
out
lret
iret
mov
rorl
sub
jb
dec
notb
sbb
lods
xchg
mov
inc
push
adc
or
enter
imul
cmpsb
mov
js
push
dec
xchg
inc
repz
shl
arpl
lods
mov
inc
xchg
cmpsl
test
jae
hlt
adc
inc
sahf
scas
int3
out
pop
dec
jns
dec
outsl
mov
sbb
outsl
and
pop
movsb
test
jns
lods
or
or
int
pop
mov
into
pop
daa
xor
loope
addr16
jbe
jg
mov
cmpsl
daa
xchg
fisubrl
mov
dec
or
push
data16
push
jo
mov
decl
in
iret
jnp
and
iret
jl
add
add
jmp
sbb
and
les
sub
mov
or
js
xlat
jmp
xchg
and
mov
xlat
arpl
jo
cmp
pop
fs
sub
add
ja
ret
cld
stos
xchg
xchg
aas
outsl
fildl
or
mov
loope
pop
xabort
adc
push
clc
inc
icebp
ret
ret
shll
xor
jnp
pushf
adc
sub
sub
std
sbbl
add
jle
pop
and
test
imul
jmp
jmp
inc
les
cmp
test
mov
xor
imul
dec
outsb
in
shrl
dec
sbb
or
shlb
gs
cltd
add
rorb
rcl
jg
pop
test
lods
mov
or
and
push
xchg
clc
hlt
jl
lock
xchg
sahf
cmp
push
pop
add
push
dec
sbb
mov
fldenv
mov
test
ret
nop
loop
mov
xchg
jns
gs
test
scas
or
je
sbb
add
inc
in
enter
cltd
xor
aaa
imulb
add
loope
mov
dec
pop
stc
lea
or
call
fisubs
aad
icebp
mov
leave
ljmp
notb
xchg
pop
sub
mull
mov
pop
sti
shll
lds
mov
cmpsb
mov
insb
shll
pop
sub
and
ret
mov
pop
das
aas
lahf
mov
push
push
les
test
push
adcb
jmp
cmp
inc
sub
outsb
int
lret
stc
clc
jns
fmulp
outsb
adc
jle
mov
mov
cmp
xor
repz
and
inc
adc
imul
lock
xchg
ret
jg
test
pop
leave
mov
inc
inc
in
or
aaa
cmp
and
adcl
or
mov
scas
aam
fcoml
pop
jno
add
fnstenv
in
sbb
test
popa
dec
inc
sbb
or
xchg
movsb
add
jecxz
xchg
xchg
pop
pop
cmp
arpl
daa
movq
arpl
idivb
mov
jns
aas
gs
or
fwait
push
int
fwait
xor
idivl
arpl
ja
pop
mov
inc
add
xor
jecxz
xchg
int3
xchg
js
insl
push
xor
loope
or
leave
out
xor
add
mov
jg
add
lods
aam
out
js
push
inc
xchg
ja
xchg
mov
cld
inc
or
insb
cmpsl
adc
pop
push
adc
sbb
gs
movsb
shll
cltd
movd
loopne
or
mov
pop
fsubl
sbb
and
or
ljmp
dec
jp
mov
fistps
or
ret
add
add
inc
pop
loopne
inc
adc
or
aam
pop
and
int3
and
mov
dec
jae
orb
ds
movd
loopne
mov
gs
ret
lods
inc
add
mov
loopne
popa
mov
stos
arpl
pop
cmova
fimuls
pop
out
inc
jg
hlt
push
push
andb
xchg
dec
jge
lea
stos
movsl
cmp
ret
in
cltd
mov
and
xchg
mov
dec
push
add
popf
hlt
popf
add
orb
lahf
fistps
popa
dec
iret
nop
mov
pop
repz
shll
ror
sbb
js
cmp
ret
xor
insl
sbb
loope
fisttps
popf
int3
test
cmp
pop
aas
cmpsl
fcomip
or
mov
fidivrs
mov
push
lcall
sahf
sbb
xchg
jnp
in
out
xor
ret
cmc
fldl2e
pop
xor
pop
cmp
out
sbb
cmp
cmpsl
lret
xchg
and
enter
fsubs
xor
cmp
xchg
stos
mov
xchg
fdivrl
xchg
sbb
jo
imul
frstor
popa
inc
fnstsw
lea
push
push
sbb
rclb
in
push
in
xchg
adc
test
and
out
sbb
inc
mov
das
xchg
inc
popf
pop
fists
mov
lret
adc
xor
das
rorb
sbb
ja
sub
in
xor
push
jge
in
mov
rcrb
sbb
es
movsb
insb
aas
sbb
mov
outsl
mov
jbe
stos
aad
or
out
jne
das
test
icebp
out
mov
repz
int3
cmp
insb
inc
mov
leave
jns
shrb
adc
lods
push
xor
dec
cmp
enter
enter
test
mov
mov
loop
pop
imul
inc
mov
sub
fdivrl
scas
cmp
js
jge
cmp
xchg
mov
lock
popa
leave
shrl
lea
push
in
push
mov
cli
xor
dec
aad
pop
push
xchg
dec
add
int3
cmp
mov
in
dec
push
daa
les
add
in
sbb
roll
jl
and
daa
xor
outsb
stos
sub
insb
ljmp
repz
adc
fsubp
mov
repnz
adc
push
movl
xor
cmp
mov
mov
enter
int
int3
cmp
sti
xlat
or
adc
mov
repnz
pop
sbb
sarl
pop
popf
adc
test
mov
loopne
test
mov
sub
popa
mov
loopne
aaa
pop
mov
fcoms
jmp
xchg
in
es
and
or
popf
and
dec
push
push
adcl
insl
mov
sbb
dec
repz
xor
fnstenv
push
test
js
sub
jno
cld
mov
sbb
imul
inc
mov
pop
and
movsl
aad
dec
sbb
das
xor
out
inc
pop
sbb
sahf
mov
push
sti
test
push
mov
mov
and
fwait
repz
push
mov
rolb
xlat
sub
fidivl
insl
xor
sub
pop
xor
inc
sub
sbb
fimull
mov
fidivrs
fbld
cmp
mov
lcall
push
mov
aas
ficoms
shrl
clc
iret
std
pop
jecxz
lods
aaa
mov
sbb
inc
sti
xor
jecxz
fldenv
jl
rol
cmp
sub
jge
mov
pusha
sahf
mov
imull
sar
xor
xchg
daa
mov
or
xor
jg
dec
add
jecxz
or
test
add
cmpl
or
jp
fstps
inc
shrb
cmp
jo
mov
and
mov
mov
in
imul
or
in
addr16
lea
push
jmp
in
mov
cmp
test
insl
lret
add
add
pop
jecxz
arpl
mov
push
mov
loope
cmp
xor
mov
sub
push
jp
mov
cs
jmp
xchg
movb
scas
pop
out
out
aaa
ret
adc
cmp
dec
rorl
outsb
sbb
xchg
pop
repnz
dec
adc
js
jb
sbb
fildll
stc
lods
xchg
cld
cli
jb
dec
sub
or
sarb
fdivp
pop
addr16
cmc
xchg
sbb
xor
pop
push
fldenv
bnd
in
sub
cmp
jmp
jb
and
std
pop
mov
sub
mov
or
dec
push
jnp
test
mov
hlt
stos
inc
hlt
aaa
into
iret
pop
sarb
jecxz
lret
aaa
ja
sub
or
cmp
sub
inc
inc
cmpsl
insl
mov
xor
scas
mov
mov
enter
jae
cmpsl
jb
jns
push
dec
jno
dec
add
cmp
push
rcl
ret
add
aad
outsb
mov
fwait
popf
push
fisubl
mov
fldln2
adc
frstor
cmp
mov
mov
sbb
les
mov
mov
mov
push
imul
mov
rorl
lcall
shll
dec
fadd
adc
dec
mov
sbb
mov
pop
lds
sbb
addb
jg
push
cmp
cmp
lock
mov
jnp
pop
xchg
mov
nop
cmpsb
dec
push
dec
push
je
inc
inc
mov
andb
mov
inc
mov
push
lods
xchg
scas
xchg
outsb
push
pop
and
jae
or
out
mov
dec
repz
sbb
pop
sarb
int
gs
cmp
mov
sahf
stos
sarb
dec
shrl
and
fsts
mov
daa
pop
cmc
insb
push
push
adc
jmp
jg
adc
rorl
sub
and
cmc
dec
adc
in
in
and
insb
cld
cli
inc
sbb
pop
sub
dec
lcall
jne
arpl
adc
fcmovnbe
ja
filds
jnp
cltd
inc
jmp
aam
push
mov
sbb
jb
popa
ljmp
cmp
lcall
loopne
inc
and
jmp
pop
popa
aas
rcrb
or
aad
jnp
imul
iret
data16
push
test
rclb
pop
and
movl
and
and
lea
fincstp
ret
test
push
adc
into
ds
int
out
aas
sbb
push
mov
fdivrl
mov
dec
mov
sahf
fs
in
mov
jns
sub
jl
aaa
lcall
pop
mov
fisubl
xchg
lods
sar
cmp
stos
clc
mov
iret
adc
adc
mov
xchg
xchg
mov
add
ds
dec
add
mov
in
scas
fdivrl
pop
cld
ja
push
daa
push
pop
add
add
outsb
jecxz
ds
cmp
lock
xor
icebp
lds
movsl
dec
dec
insl
aad
adc
jecxz
xor
pushf
fcmovnb
ja
sbb
add
xor
mov
and
add
pop
into
rcrb
jnp
push
rol
leave
int
sub
push
decl
fildll
das
add
lahf
scas
xchg
sub
jne
fcmovbe
pop
xchg
sub
mov
adc
or
adc
fsts
mov
mov
test
xor
and
int
pushf
jge
lcall
inc
jle
ret
loope
push
sub
loope
and
loop
xor
pop
jmp
push
in
mov
fdivrs
dec
pop
in
jb
stc
lock
sbb
enter
or
sarb
push
cmp
lods
mov
das
pop
pushf
faddl
cmpsb
es
cmpl
cli
mov
mov
psubusb
arpl
enter
in
ret
ds
popa
mov
ficompl
lods
or
out
fcmovb
mov
cmpsl
das
sti
sbb
mov
xorl
push
rolb
in
pop
xchg
push
mov
clc
notl
int3
mov
sub
or
ficoml
bound
sub
lods
add
inc
repz
sbb
adc
mov
or
in
add
inc
into
xchg
mov
adc
pop
mov
push
frstor
scas
movsb
dec
xchg
iret
out
push
xor
xchg
fcoms
cmp
andb
sbb
outsl
clc
dec
mov
cli
mov
dec
inc
cmpsl
lret
out
aad
lret
pop
jg
sbbl
or
mov
jg
popf
xchg
js
inc
hlt
ror
mov
inc
stc
stc
cmp
sbb
mov
xor
jne
sub
xchg
lea
and
xor
setae
fdivrl
push
push
pop
pop
loopne
xor
mov
and
cmpb
sbb
fiadds
mov
sahf
jp
and
sub
lcall
adc
mov
in
and
shl
or
stc
jnp
jmp
and
adc
fsubs
mov
push
cmp
xor
and
lcall
aam
clc
ds
leave
or
mov
scas
jno
insb
aaa
ss
xchg
fimuls
sbb
or
mov
js
aad
cmp
xchg
stos
mov
inc
pop
mov
cld
sub
call
out
adc
int3
inc
arpl
loop
jp
mov
aaa
loope,pn
mov
jns
cmpl
out
negb
out
pop
ja
xchg
iret
cltd
sahf
das
stc
inc
or
dec
jno
mov
mov
dec
dec
out
int
in
pop
mul
mov
xor
or
bound
rorl
fstpl
hlt
cmp
clc
pop
cwtl
xor
mov
dec
inc
js
test
stos
mov
mov
pop
out
sbb
mov
in
or
dec
add
jno
test
into
jg
add
inc
lea
inc
adc
mov
pop
adc
lods
insb
add
in
sub
cmp
sub
out
mov
lea
and
jbe
or
dec
cmp
dec
xlat
das
sbb
adc
sbb
inc
add
popf
out
add
adc
mov
mov
stos
jmp
fdecstp
push
daa
mov
repnz
movsl
dec
test
scas
decb
nop
and
or
push
mov
scas
aad
mov
xlat
rolb
std
jmp
push
sub
shl
mov
push
adc
ds
rcrb
in
mov
ja
cmc
in
pop
push
push
lcall
mov
pop
xchg
mov
pop
aaa
xchg
insl
lods
lock
xorl
inc
test
push
or
pop
push
ret
fwait
outsl
insl
sub
add
andb
ret
sub
insb
in
mov
mov
gs
mov
sahf
ficompl
sub
sahf
pop
pop
sbb
mov
sbb
pop
insl
nop
xchg
repnz
lock
dec
fcomps
jae
pop
test
call
out
in
lods
fsubs
jmp
sahf
stos
or
in
mov
sbb
adcb
repnz
push
scas
das
into
out
test
jo
mov
bound
push
push
dec
pop
mov
out
push
cli
add
enter
push
data16
sub
aad
ds
cmp
push
arpl
mov
mov
push
inc
insl
mov
cli
jge
jmp
mov
loopne
push
shlb
jp
movsb
imul
xchg
and
inc
aam
xchg
and
adc
out
lret
xchg
sbb
aam
pop
inc
dec
jnp
mov
fstpl
fisubrs
jge
mulb
sbb
call
push
fstl
jp
add
call
sub
aaa
sbb
lods
pop
arpl
jns
popa
and
inc
sahf
mov
and
add
xor
fnsave
push
ss
mov
xchg
call
mov
pcmpeqw
pop
xchg
cmc
xor
lock
flds
dec
repnz
or
loope
push
mov
pop
out
adc
cmp
mov
aam
pop
mov
jp
push
mov
fbld
ret
inc
pmullw
lcall
and
add
push
fiadds
push
cmpsb
cmp
das
rol
xchg
enter
xor
scas
and
popf
mov
push
repz
xor
push
or
or
sbb
mov
fisubrl
cld
sub
mov
mov
into
sbb
mov
cmp
add
jp
xchg
cmp
and
leave
push
mov
lods
xchg
xor
mov
ljmp
pusha
cltd
xor
rcrb
pop
sarb
push
push
jp
lds
dec
gs
sbb
jp
ljmp
inc
rcrl
iret
dec
fsubp
out
hlt
inc
xor
xchg
add
sub
xchg
jp
adc
std
das
mov
sbb
mov
or
xor
adc
dec
push
clc
lods
out
mov
sti
or
mull
and
cs
and
test
pushf
or
add
dec
outsb
hlt
mov
xor
jmp
adc
inc
ret
rcl
cmp
sbb
or
iret
int
push
inc
scas
push
xchg
jp
jle
and
or
mov
roll
into
sbb
dec
aam
jmp
add
test
lods
and
addr16
sub
mov
sahf
test
testb
jo
jg
arpl
inc
mov
adc
movsb
popa
popf
outsb
push
jmp
lret
ds
bound
adc
into
popf
je
add
adc
xorb
and
addr16
cwtl
adc
cmp
imul
or
add
cs
and
lds
jg
data16
repnz
sub
mov
adc
mov
jg
jbe
inc
push
add
fidivl
test
lret
add
andb
test
xor
jge
mov
xlat
mov
adc
xchg
jns
add
xor
xor
and
leave
gs
dec
jmp
and
std
loopne
mov
dec
test
dec
insb
ja
xchg
mov
or
ret
or
xlat
jae
xorb
mov
mov
adc
xor
mov
lret
or
adc
xchg
call
push
popf
ja
inc
jg
loop
or
sbb
xchg
movl
pusha
sbb
das
test
aam
pop
movsl
cmp
xchg
bound
sub
loope
push
dec
out
enter
mov
add
ja
leave
int
sbb
jg
push
mov
test
mov
repnz
mov
sar
mov
or
pop
dec
jge
out
cmp
inc
push
dec
cmp
push
cmc
sbb
ljmp
and
lahf
jns
xchg
popf
jmp
push
xor
popf
lea
add
pop
inc
add
or
mov
ja
stos
xchg
or
jecxz
loope
aad
mov
or
out
sbb
shlb
repnz
cmp
add
rcr
mov
stc
or
dec
call
icebp
out
sbb
push
ljmp
mov
outsl
and
mov
push
cld
out
outsl
xchg
jle
and
xchg
icebp
icebp
insl
inc
sbb
push
mov
sub
xchg
ss
in
sbb
lcall
push
adc
mov
adc
insl
sbb
jl
cmp
and
stos
mov
shl
stos
jle
pop
pop
pop
adc
cmp
jmp
cltd
fs
inc
or
mov
outsl
mov
pop
jg
sub
repnz
jnp
pushf
loope
aas
and
clc
mov
int3
jbe
imul
dec
add
dec
push
aad
add
adc
xor
in
mov
repz
inc
fldl
mov
ljmp
mov
dec
push
or
fwait
pop
adc
inc
cld
sub
fwait
inc
inc
and
clc
outsl
mov
pop
add
xor
ljmp
and
jns
jl
in
jo
lods
sbb
enter
cwtl
popa
adcb
fcomi
out
cmp
or
pop
xor
or
addr16
dec
push
mov
or
vpunpcklqdq
jno
pusha
pop
jbe
dec
sub
in
scas
call
subb
cld
push
imul
inc
inc
and
nop
imull
pusha
hlt
or
add
dec
in
leave
out
mov
mov
dec
mov
loopne
stos
pop
cmc
lret
rcll
mov
mov
test
mov
pop
or
scas
add
cmp
and
lahf
mov
loope
push
dec
cmpsl
mov
test
fnstenv
mov
fsubl
and
call
inc
cmpsb
out
seta
mov
pop
pop
pop
jb
jne
out
xchg
jge
loop
rcrl
jb
mov
jecxz
lock
push
cmp
mov
aaa
jno
pop
mov
xchg
dec
cli
dec
inc
adc
aaa
adc
cmp
les
popf
jno
inc
sub
das
fcmovu
add
mov
jecxz
mov
cltd
lret
mov
cmpsl
sbb
cwtl
add
push
stos
int
in
dec
dec
sub
xor
jge
test
cwtl
or
rcrl
fildl
add
sbb
and
jl
loope
pop
dec
dec
mov
xor
ljmp
push
push
arpl
xlat
sbb
jge
add
xchg
sub
xchg
cmp
cmp
fisubrs
hlt
adc
sahf
lahf
shl
lods
mov
xor
add
je
das
cmpsb
sbb
or
xor
sub
jno
add
dec
jmp
movsb
lahf
ret
sub
rol
js
cmp
pop
push
or
jne
pushf
out
mov
pop
out
cmp
scas
out
cld
popf
aam
cs
mov
shlb
daa
cwtl
sqrtps
insb
aas
sub
mov
cmp
outsb
mov
jns
xchg
or
and
imul
popf
movsl
cmc
xchg
pop
lea
aas
and
cmpsb
push
xchg
xchg
add
jp
sti
mov
and
adc
out
pop
mov
add
test
call
repz
movsb
fisubrs
lret
movsl
shlb
inc
jo
pop
jge
mov
and
stos
inc
xchg
pop
repz
inc
fxch
dec
sarb
cmp
leave
in
insb
bound
mov
push
mov
enter
inc
outsb
mov
sbb
pop
jl
mov
jle
jne
jb
mov
add
gs
fisttps
mov
mov
and
pop
push
popa
iret
mov
test
mov
and
test
xchg
inc
mov
xchg
adc
sarb
adc
mov
inc
mov
popa
xchg
adc
mov
cmp
push
fisubrl
ds
pop
jo
popf
inc
add
ss
xchg
adc
add
xorl
in
jl
adc
adc
cmp
inc
mov
cmp
data16
push
insb
ljmp
out
enter
xchg
aaa
rorl
pop
adc
jle
notl
aaa
movsb
jecxz
xchg
mull
pop
cs
fst
scas
ljmp
mov
sti
gs
cmp
mov
loopne
add
sbb
addr16
mov
mov
repnz
add
rol
repz
loop
cmp
adc
push
mov
pop
xor
push
mov
out
cmpsb
test
stos
push
push
inc
sbb
jbe
aam
subb
fdivrl
push
movsl
ss
push
out
or
outsl
sub
dec
aam
pop
test
imul
sbb
insl
xor
jge
dec
test
xchg
enter
and
das
mov
xchg
ja
push
daa
stos
das
testl
leave
lcall
jae
mov
testl
test
pop
fcmovb
out
or
sahf
lock
out
and
pop
jmp
adc
mov
mov
das
inc
adc
dec
mov
xchg
sub
rolb
lea
mov
pop
sub
cs
or
jne
sbb
jg
jg
andb
aaa
in
inc
and
sub
adc
fwait
jno
arpl
js
in
insb
mov
sub
push
push
pop
pop
out
pop
in
dec
or
and
mov
cltd
push
jecxz
aaa
mov
jbe
stc
pop
fcoms
ret
or
flds
pop
xorb
sub
mov
inc
movsb
pop
mov
shr
pop
mov
lahf
das
fistpll
cmp
pop
pop
in
or
mov
xor
das
stc
arpl
or
dec
add
or
xor
rcl
push
jp
adc
packsswb
sbb
sub
add
insb
cmpsb
push
lods
jl
mov
jno
pop
push
adc
dec
mov
lea
mov
test
xchg
daa
mov
int
dec
int3
sahf
je
push
jae
scas
inc
sbb
sbb
adc
aas
insl
std
push
lret
mov
int3
scas
lock
stos
fisttpl
inc
jge
sub
push
pusha
dec
fsubrp
and
cmpb
arpl
imul
mov
mov
gs
loopne
or
lcall
dec
mov
or
or
jno
cmc
sub
fistpl
and
dec
mov
jne
pop
outsl
mov
ss
aas
jecxz
adc
xlat
gs
insl
dec
sbb
out
outsb
fs
fldt
and
adcb
mov
stos
gs
pushf
and
pusha
mov
push
jne
dec
add
jg
inc
ss
sbb
xor
mov
dec
jecxz
mov
fadds
in
dec
out
pop
daa
cmp
mov
xor
xchg
adc
pop
gs
push
enter
sub
jo
mov
jns
fldz
imul
enter
adc
xor
jns
and
shll
mov
sti
lahf
mov
cli
scas
jns
sub
or
mov
and
movsb
insb
lods
add
mov
es
popf
pop
gs
sub
mov
pop
sub
xchg
imul
jg
mov
mov
pop
sbb
stos
dec
clc
jnp
insl
insl
mov
movsb
outsl
aad
mov
insl
xor
addr16
mov
mov
sti
push
inc
xchg
mov
push
sub
add
shll
in
mov
and
pop
and
lahf
mov
push
into
inc
pop
cmp
mov
aaa
adc
leave
cmp
out
mov
add
test
inc
jnp
mov
mul
mov
pushf
add
push
out
inc
aaa
mov
cmp
pop
jge
adc
outsb
sbbl
xchg
mov
mov
jnp
dec
xor
cmp
sar
mov
fwait
aaa
fwait
xchg
rcrb
hlt
lock
add
mov
es
mov
je
pop
loope
shrb
jno
sub
xchg
in
idivl
jne
sub
lods
hlt
rol
test
add
aaa
jge
xor
or
aad
aas
jl
push
mov
fs
mov
inc
pop
xchg
cmp
mov
mov
outsb
xchg
add
sti
dec
and
daa
pop
dec
mov
xorb
pop
mov
gs
jg
ljmp
jp
bnd
in
pusha
cmc
jno
sbb
inc
or
adc
adc
call
es
add
push
cwtl
adc
int
xor
roll
popa
mov
and
dec
out
loope
mov
sti
or
iret
jb
inc
test
push
arpl
scas
sbb
stos
lcall
in
cwtl
imul
pop
pop
adcb
xor
int
xchg
jmp
out
dec
adcb
stos
mov
fsubs
dec
ficompl
mov
fbstp
push
dec
loop
and
sarl
adc
xchg
in
adc
int
iret
rclb
incl
sub
inc
jmp
inc
ret
mov
pop
dec
lahf
imul
mov
pop
test
mov
fwait
and
xor
inc
enter
pop
out
push
push
testb
sub
pop
ud0
mov
test
imul
mov
push
and
and
in
cmpsl
xchg
pop
jnp
dec
pop
inc
push
imul
xor
fidivrs
jl
aaa
and
and
mov
bound
pusha
xchg
mov
fdivs
mov
push
sti
pop
xchg
flds
adc
push
repz
cli
xchg
mov
in
outsb
in
int3
pop
fidivrl
sub
jp
lds
sub
lret
testl
out
std
mov
mov
push
xchg
push
xchg
lcall
data16
sbb
push
adc
jae
bndstx
int3
dec
shlb
ss
pop
stos
mov
shll
jno
das
out
inc
pop
or
dec
outsb
sub
adc
add
sub
mov
mov
sub
loopne
mov
pop
xchg
dec
mov
cmc
dec
lcall
sub
stos
cmp
outsw
mov
call
jnp
inc
fwait
mov
mov
lret
mov
addb
inc
cmp
push
add
xchg
xchg
mov
rorl
ror
jl
rol
mov
mov
jle
xorb
call
push
cmp
pop
idivb
xchg
lods
push
es
aam
fildll
mov
or
mov
into
hlt
jecxz
test
nop
pop
jl
pop
int3
adc
or
gs
add
mov
mov
call
bnd
jmp
dec
aad
mov
push
daa
mov
aaa
push
iret
in
pop
repnz
aaa
je
jge
mov
dec
insl
imul
cld
dec
repnz
je
inc
mov
and
in
and
sbbb
and
pushf
in
stos
int
and
cmp
int
add
mov
adc
bound
lods
cmc
xchg
inc
push
cld
xchg
dec
sbb
out
imul
mov
std
aaa
in
inc
xchg
rcll
stos
icebp
icebp
xlat
iret
test
rcll
cmc
add
sti
mov
inc
mov
ds
mov
fwait
js
mov
inc
mov
jp
cltd
rcrb
pop
ljmp
mov
or
lret
xchg
jo
mov
adc
pop
jg
inc
imul
repz
adc
mov
add
pop
or
fistpl
les
pushf
mov
test
je
jmp
ficoms
test
loopne
jnp
mov
test
jnp
cmp
and
add
out
jo
xchg
loope,pt
repnz
sub
cmp
inc
test
stc
lret
xlat
fcomp
call
sbb
pop
in
pop
mov
cwtl
out
pop
or
jge
push
xor
push
fsubrl
bound
adc
scas
jnp
sbb
out
je
jg
dec
mov
pushf
jp
adc
imul
js
imul
mov
mov
fildll
das
in
lock
jp
fwait
sar
sbb
cmp
out
mov
das
pop
je
mov
stos
nop
or
aam
call
cmp
repz
call
jl
mov
aam
mov
testl
jo
mov
add
xchg
leave
or
jmp
hlt
pop
cld
in
es
std
pop
jne
aam
mov
pop
jp
lock
adc
sti
call
aaa
data16
cmp
adc
into
shlb
js
push
add
cmp
lods
rolb
sub
int3
lea
push
jb
lret
and
dec
fcmove
or
mov
pop
jmp
pop
push
pusha
mov
enter
push
dec
outsl
xchg
or
es
clc
cmpsl
clc
stos
pop
xchg
stc
inc
cmp
mov
lods
das
stos
xchg
daa
jp
pop
in
adc
xor
cmpsl
ror
sub
mov
shll
inc
stos
xchg
mov
sbb
adc
dec
xor
das
lret
add
iret
inc
sbb
stos
xchg
in
dec
cmp
dec
inc
cmc
and
inc
sbb
sbb
arpl
sti
jnp
mov
sbb
mov
leave
insb
in
inc
xchg
adc
jbe
cmp
lea
mov
inc
insl
fmuls
imul
imul
ret
pop
jmp
sbb
ljmp
movsl
mov
aas
call
sbb
cli
jp
popa
pushf
push
mov
aam
cmp
test
add
sub
lds
xor
cmp
in
mov
push
sub
jmp
cmp
loopne
xchg
mov
mov
orl
js
and
addr16
pop
enter
push
sub
push
mov
fs
enter
ljmp
dec
dec
pusha
sbb
jmp
inc
xor
dec
mov
push
pop
dec
mov
jmp
jmp
pop
fcmovu
aaa
fistpl
xchg
test
es
and
shll
ret
inc
cmp
cmpsb
push
mov
dec
cs
sbb
cmp
loop
lahf
mov
out
vshufpd
xchg
movsb
cwtl
rorb
jo
jecxz
jge
mov
cmp
sub
lea
or
je
pop
int
test
jp
cmp
cld
int3
inc
mov
pop
adc
push
and
sbb
orb
jg
and
js
je
imul
flds
add
popa
pop
stos
cmp
jno
sbb
pop
xchg
ret
fdivp
mov
mov
fldenv
ja
pusha
ja
inc
xchg
inc
jnp
cmp
jp
pop
sbb
sar
rolb
jnp
lea
fcmovnu
xor
into
call
lea
pop
push
leave
push
jg
lods
mov
mov
push
add
dec
outsb
popf
cmp
mov
nop
inc
and
dec
xlat
into
mov
fwait
or
movl
cwtl
push
xor
push
jo
out
pop
jno
fstps
mov
mov
mov
dec
jno
jg
iret
xor
mov
xchg
xor
add
dec
or
inc
stos
jge
outsl
xchg
push
iret
je
mov
sbbl
sahf
add
sbb
sub
add
or
add
mov
sub
or
push
mov
push
ljmp
push
fidivrl
adc
out
fwait
mov
or
or
mov
jnp
int3
mov
cld
xchg
or
jge
in
push
fisubs
add
into
lods
or
insb
movsb
ror
stc
sub
jo
pusha
enter
push
fadds
sbb
loopne
mov
jle
cmpsl
out
jno
cmc
push
cmp
in
mov
pop
cmp
push
xchg
jge
fwait
inc
pop
pop
sbbb
jecxz
out
lret
mov
jne
fnsave
mov
aad
out
movsl
mov
jne
in
adcl
das
jbe
mov
fcoms
call
out
cs
cmp
xchg
jae
int3
push
mov
push
mov
pop
mov
rcrb
mov
and
push
ja
nop
or
sub
popf
add
mov
movsl
mov
mov
mov
mov
fwait
mov
xor
out
inc
and
in
lret
jge
adc
in
pop
add
sub
leave
dec
sub
mov
nop
inc
sbb
or
pop
add
aam
imul
gs
nop
pusha
inc
inc
add
push
pop
mov
movsl
adc
subl
int
ret
dec
ret
lea
push
rcll
stos
orl
out
test
pop
dec
inc
xor
stos
inc
iret
fsubr
xchg
scas
sub
adc
sub
add
lods
and
or
pop
mov
test
inc
fwait
push
pop
inc
mov
jnp
cmp
scas
jle
mov
aaa
es
in
push
xchg
scas
in
jmp
pop
pop
cs
mov
icebp
mov
mov
pop
pop
cmp
sbb
cmp
push
xlat
orb
addr16
fstpt
sti
je
mov
shl
jl
out
sbb
dec
ret
jb
adc
frstor
aas
dec
sbb
repz
sarb
xor
or
inc
pop
aam
or
mov
test
imull
xchg
jecxz
insb
xchg
int
sbb
push
inc
inc
adc
notb
xchg
sub
data16
in
jae
push
lods
imul
into
dec
pop
js
adc
fildll
mov
mov
insl
ljmp
fldenv
fstpl
test
pop
fs
cmc
pop
ret
jecxz
fnstsw
push
lods
sbb
sub
repz
push
lods
xacquire
jnp
sbb
inc
mov
rcrl
sbb
xchg
mov
aad
inc
sub
fs
sarl
adc
clc
fsubl
jne
rcr
xchg
std
and
fstpl
stc
push
inc
fcmovnbe
mov
roll
imul
add
or
pop
lds
test
nop
pop
and
and
cmpsl
pop
cwtl
and
or
jmp
sbb
faddl
iret
rcrb
push
sbb
cmp
sbb
lods
movsb
test
xchg
fs
setns
cmp
or
das
inc
jge
and
xchg
lock
pop
out
push
mov
pushf
mov
mov
lds
je
je
xor
jae
cs
pop
sub
data16
int3
dec
insb
dec
pop
aam
aam
lahf
es
out
fldcw
push
lods
cmpsl
sbb
ds
and
cld
aaa
cmc
insl
fdivl
ret
icebp
push
mov
movsb
add
mov
ret
cmp
cmp
adc
int3
inc
outsl
xchg
inc
jne
stc
and
shl
ret
dec
cli
sahf
aad
ss
ret
add
cld
mov
or
push
mov
rcr
pop
cmp
jle
pop
inc
xchg
movsl
stc
xor
xor
test
pop
ret
rcrb
jne
loop
mov
mov
lea
fldl
fsubrl
sub
scas
lds
inc
rcl
jecxz
insb
add
outsl
leave
les
push
and
mov
out
movsl
cmc
push
insl
sub
daa
add
adc
fildll
mov
shl
lahf
push
xchg
mov
mov
cmp
sbb
fldenv
or
add
sub
xchg
test
fcmovnb
shrl
sti
add
out
mov
repz
push
dec
push
test
push
aam
imul
pop
fildll
pushl
std
sub
lock
hlt
call
ret
rcr
test
ljmp
cmpsb
jns
mov
add
pop
mov
mov
sbb
mov
pop
je
leave
ret
xor
in
adc
fstpl
aaa
ficompl
scas
sbb
sbb
out
hlt
ljmp
mov
es
jae
outsb
adc
scas
pop
push
lods
adc
mov
out
mov
lds
fcoms
add
notl
pop
data16
sahf
sub
enter
sti
es
pushf
and
fidivs
push
les
dec
shrb
or
test
shl
mov
xchg
test
mov
jnp
lea
mov
mov
adc
imul
xchg
aas
call
bound
outsb
jne
cmpsl
cld
ds
sbb
addr16
fdivrl
push
fcoms
or
insb
dec
je
push
iret
push
aad
push
hlt
lock
or
adc
push
idivl
out
xor
and
mov
xor
mov
in
jb
mov
sbb
xorb
jno
mov
and
imul
sbb
lods
femms
in
popa
pop
xchg
jbe
push
int3
push
xchg
sti
insl
loope
pop
mov
pop
into
xchg
dec
popa
cmpsl
pop
push
sub
aaa
mov
addr16
mov
cwtl
pop
mov
mov
imul
xor
aaa
add
and
iret
lods
in
test
js
adc
testl
cli
fnstcw
mov
les
loop
iret
pushf
loop
cmp
shll
ret
jle
shl
into
and
cmpsb
pop
xchg
mov
cmp
fmull
xor
repz
or
stos
mov
pop
pop
js
xor
mov
aaa
cmp
inc
sub
inc
mov
pop
fnsave
in
and
loope
and
gs
xchg
adc
cmp
push
jg
and
push
pop
call
and
mov
cld
sub
addr16
xchg
fucom
sti
xor
inc
sbb
mov
pop
aaa
cltd
mov
jb
mov
mov
pop
fildll
sbb
push
mov
test
loopne
les
mov
and
and
js
jecxz
stc
aam
jl
push
jb
jne
je
loopne
cli
xor
fwait
xor
mov
xchg
add
sbb
jl
ds
clc
repz
aad
dec
or
into
test
push
push
inc
push
xchg
dec
lcall
xorl
xchg
xchg
jecxz
jnp
cltd
push
sbb
adc
push
adc
dec
repnz
sub
aam
ja
aam
cltd
push
test
cmp
les
mov
mov
scas
and
xor
sub
addr16
jne
dec
shl
xor
imul
sub
add
out
dec
in
mov
mov
insl
lods
fimuls
shr
rcl
sbb
int
lods
in
pop
pop
fisubrl
mov
cmp
xorl
cmp
lods
pop
outsl
or
cld
mov
movsb
and
lret
or
stc
xor
push
enter
mov
jg
jge
js
mov
jmp
rorl
dec
jne
in
inc
leave
jae
ds
and
inc
mov
inc
clc
or
nop
adc
mov
jbe
jge
push
daa
stc
incb
in
jb
push
fcomip
loope
sub
xchg
cmp
pusha
fmull
mov
fistps
xor
mov
pop
cld
int3
stc
mov
daa
jbe
std
mov
stos
sub
pop
nop
nop
sub
sbb
in
pop
cmp
stc
fcmovb
movsb
rorb
bound
in
aad
jl
out
outsb
xchg
leave
push
sbb
out
and
push
add
sbb
lahf
out
inc
ret
fsubrs
out
icebp
xor
das
mov
push
outsb
xor
std
mov
in
mov
dec
and
das
and
mov
scas
enter
in
inc
sbb
xor
loop
int3
das
repnz
xchg
cmp
cltd
andb
enter
push
push
popa
mov
inc
pop
mov
push
es
jae
std
les
dec
sbb
mov
jle
aam
mov
loop
into
sub
fwait
test
adc
insl
aas
movsl
cmc
cmp
jo
fdivrl
inc
push
nop
jnp
push
sbb
cmp
jmp
xchg
fwait
pop
in
ljmp
jl
and
insb
cmp
inc
sub
loopne
push
push
addb
aaa
mov
inc
pop
lret
rclb
iret
out
in
movsb
adc
leave
fldenv
aam
sub
lret
out
imul
je
inc
push
cwtl
push
mov
lcall
xor
mov
stos
cltd
sbb
gs
and
sti
sub
cmp
imull
lods
stos
nop
inc
sub
or
xchg
test
gs
lea
jecxz
daa
add
pop
jns
adc
dec
jmp
adc
adc
mov
or
lods
sub
inc
clc
sbb
pushf
outsb
je
mov
jae
xor
inc
xor
jge
mov
add
mov
mov
fcoms
stos
add
xchg
xchg
das
sbb
test
test
cs
ja
sub
and
fs
sub
add
push
jl
inc
inc
repnz
lds
clc
push
mov
dec
mov
nop
sbb
adc
mov
out
loopne
mov
inc
test
mov
dec
mov
and
nop
or
rcll
ljmp
into
xchg
add
mov
aas
gs
imul
lret
test
sub
call
adc
sti
andb
hlt
es
imul
mov
cmp
cli
xor
rcr
dec
cmpsb
pusha
daa
xchg
les
mov
mov
xor
ljmp
fs
pop
inc
mov
mov
mov
pop
les
sub
adc
pop
add
jp
in
push
jnp
aad
mov
imulb
xchg
push
jg
adc
adc
stos
nop
inc
xor
sarb
inc
sub
jmp
mov
rclb
ljmp
jecxz
jmp
mov
cs
cvttps2pi
push
push
movsb
push
xor
mov
pop
pusha
sbb
imul
outsb
jge
dec
sbb
cmp
loopne
out
and
push
jo
sub
std
mov
mov
dec
inc
jo
jae
out
inc
outsl
jae
sub
jno
es
push
pop
cltd
int
scas
sti
pop
xor
mov
pop
mov
adcb
es
sub
aaa
sahf
repz
lods
mov
mov
adc
mov
adc
out
aad
cld
cmp
lahf
fiadds
cmpsb
sub
shrb
or
jno
mov
and
test
xor
xor
int
cmp
sub
sbb
sbb
icebp
fistpll
push
sarl
cmp
lods
sbb
add
inc
fwait
movsb
fmuls
pop
xor
loopne
cs
insl
sbb
fisubs
lret
in
js
xor
add
pusha
inc
push
sbb
jns
push
jbe
inc
rcrl
push
fs
lcall
sub
cld
cmp
cmp
sbb
xchg
sahf
dec
mov
mov
add
das
xor
leave
filds
cmc
and
stc
inc
adc
sbb
insl
lret
fmul
insl
pop
ljmp
jne
mov
fistpll
mov
xchg
cmp
aam
mov
stc
or
inc
mov
mov
mov
inc
inc
inc
jbe
aaa
adc
pop
fdivrp
xchg
sbb
jnp
inc
dec
pop
fcmovne
jecxz
ficomps
and
pop
pop
call
pop
stos
in
test
xor
adc
lret
mov
insb
or
lea
pop
adc
jno
sbb
jae
jno
sti
and
aas
int
mov
dec
rclb
daa
imul
hlt
xor
lret
mov
xchg
mov
jp
lcall
movsb
add
test
xor
push
in
imul
jl
ds
call
jp
add
pusha
pop
adc
stos
pop
mov
ret
add
into
je
repnz
das
xchg
xchg
stos
pop
adc
test
jae
popa
inc
push
insl
jmp
repnz
jmp
or
mov
sbb
in
push
pop
add
mov
pop
jnp
aam
sub
mov
popa
pop
jb
xorl
orl
ljmp
add
ror
adc
pop
sahf
out
pop
mov
jno
scas
stc
mov
adc
popf
sub
adc
mov
mov
pop
or
xor
cmpsl
jecxz
ret
xlat
dec
scas
push
movsl
jge
xor
clc
scas
je
addl
xchg
sarl
subl
int
sbb
ds
popa
xor
sarl
or
aam
cmp
xchg
push
mov
sub
jnp
xchg
xor
or
fwait
push
rol
or
enter
cli
add
sbb
fsubr
jns
push
xchg
sahf
mov
shlb
xchg
jns
xchg
adc
cmp
addl
and
push
mov
cwtl
dec
jb
sub
and
and
call
inc
xchg
fcmove
sti
frstpm(287
stos
mov
std
test
shrb
out
sub
jb
mov
fwait
dec
mov
mov
push
pop
bound
int3
mov
mov
mov
adc
das
fiadds
aas
or
push
xchg
adc
mov
fisttpll
or
cmp
and
xor
pop
outsl
jmp
pop
xor
push
or
dec
lods
rclb
shll
push
xchg
scas
movsb
push
test
cli
mov
mov
movsl
or
sub
cmp
out
add
dec
push
test
je
cs
push
pop
pop
subl
imul
or
imul
js
dec
xchg
out
js
cmp
neg
into
sub
push
pop
rolb
mov
subl
and
xlat
mov
clc
pop
loope
adc
loop
push
lahf
pop
adc
inc
jmp
arpl
xchg
sbb
sbb
pop
mov
sbb
dec
jae
xchg
inc
aad
jmp
mov
jne
or
jb
ss
aam
fsub
xchg
mov
mov
enter
leave
out
in
push
jmp
mov
sub
jmp
icebp
test
push
xchg
lcall
mov
sub
and
push
mov
stc
mov
js
in
fdivrs
sbbb
or
loope
int3
rcr
push
mov
inc
jae
mov
push
cmpsb
shlb
fsubl
pop
outsb
dec
dec
sbb
popl
pop
mov
and
cmpsl
aas
imul
rcrl
movsb
fadd
xor
jmp
shrb
push
stos
cmp
and
cld
inc
or
mov
data16
sbbl
ret
mov
dec
imul
mov
xor
xor
stos
inc
mov
cmp
gs
cmc
data16
cld
add
daa
pop
mov
cmp
push
je
rol
push
and
inc
fs
int
sub
sti
and
loop
in
sbb
xor
sbb
lea
ss
scas
fcoml
xor
cwtl
in
jnp
cmp
push
aas
rolb
sub
cmp
aad
push
lds
mov
lods
repnz
mov
inc
and
test
or
or
xlat
stc
fldt
das
loope
lea
sub
sub
adc
push
or
std
adcl
stc
sub
mov
sti
inc
pop
testl
mov
mov
negb
int3
clc
enter
inc
sbbl
es
lods
push
pop
pushl
add
test
jg
mov
cmp
jl
sbb
sbb
ja
cmc
sub
ds
xor
add
push
and
xor
hlt
push
clc
out
inc
push
lcall
cli
pop
js
test
xchg
test
cmpb
dec
add
pop
inc
sbb
popa
xchg
pop
cmpsl
inc
sub
push
xor
xchg
jae
inc
mov
sub
aam
jbe
fmul
shl
sbb
bound
daa
sbbl
movsl
daa
mov
inc
jl
enter
pop
push
sbb
mov
xchg
mov
adc
cmc
ljmp
push
mov
add
loope
sbb
mov
or
in
les
jle
nop
inc
or
test
push
mov
ss
fisubs
xchg
loop
dec
int3
mov
dec
outsl
xor
jae
cmp
into
mov
pop
in
in
pop
in
mov
outsl
sub
sbbl
lret
std
inc
or
mov
jae
mov
pop
pcmpeqw
dec
pushl
jecxz
test
xchg
fistpll
lods
mov
cli
js
std
fisttpl
mul
jg
mov
gs
or
out
adc
lods
inc
mov
mov
in
push
mov
pop
jmp
push
lds
out
cmp
into
pop
add
scas
mov
andl
sub
xchg
cmovns
pop
insb
idiv
sub
mov
into
push
pop
push
jnp
in
fs
fldcw
fidivrl
pushf
into
mov
call
dec
cli
adc
call
dec
clc
jp
test
shrb
loop
sarb
js
lods
mov
les
push
xchg
push
cwtl
jb
stos
data16
in
pushf
jp
lods
or
xor
mov
sub
or
sbb
xchg
jns
xchg
sub
clc
jbe
or
mov
xor
cmc
mov
mov
roll
sahf
inc
xchg
stc
sub
aam
xor
xchg
mov
mov
int
xor
lret
leave
loop
arpl
jbe
pop
imul
mov
push
jbe
loopne
rcrl
mov
adc
cwtl
push
test
lea
mov
sbb
inc
fdivl
and
mov
xchg
lret
pop
push
into
cmc
dec
ds
out
mov
pop
std
push
out
or
or
pop
xchg
in
test
adc
pop
lahf
jno
mov
mov
les
dec
mov
jo
mov
jb
push
sbb
mov
cld
xchg
sub
std
fisubl
pop
mov
adc
adc
mov
pop
ficomps
cmp
rorl
cmc
adc
shlb
dec
repnz
popf
push
sbb
jae
lods
and
jmp
pop
mov
ss
mov
xor
ja
scas
pop
nop
add
loopne
push
and
call
mov
cmp
pop
stc
and
mov
xchg
jg
jns
in
pop
push
inc
std
sub
mov
pop
and
ret
fnsave
lods
sub
mov
inc
and
call
push
adc
outsl
dec
jle
jg
jnp
daa
cmp
jbe
add
ds
dec
scas
test
dec
imul
jno
clc
out
outsb
mov
xor
add
push
cltd
push
aad
or
sti
pop
push
and
jbe
cmpsl
loopne
sbb
out
inc
xor
cmc
nop
mov
dec
data16
xchg
mov
not
fcmovu
ss
sbbb
aad
outsb
cmpsl
pop
push
mov
push
jne
dec
shlb
mov
add
das
fwait
loope
mov
sbb
add
lods
or
addr16
test
jno
sbb
sti
test
ror
lahf
push
fidivl
xchg
icebp
xchg
rcrl
pop
aaa
lock
orb
add
inc
jae
cmc
xor
dec
mov
sbb
xchg
pop
cmpsw
invd
fimuls
es
sbb
ret
push
insl
mov
jne
dec
out
inc
sbb
jge
mov
out
icebp
arpl
push
lret
incb
nop
fstpl
shll
ficomps
push
xorb
inc
inc
cmc
fnstcw
xchg
xor
mov
sbb
adc
imul
dec
scas
std
mov
je
adc
mov
jne
addr16
xchg
jb
xchg
pop
xor
jle
aad
or
xor
iret
sbb
movsl
pop
mov
mov
pusha
clc
mov
adc
ljmp
loopne
push
or
sbb
mov
lods
add
add
mov
mov
pop
mov
shlb
fcmovb
adc
xor
out
mov
mov
test
xor
pop
popf
inc
xchg
pop
inc
aad
sahf
adcl
mov
pop
mov
xorl
stos
roll
cltd
outsl
xchg
ljmp
xchg
sub
xchg
addr16
je
les
insl
lcall
iret
stos
adc
sbb
fimuls
shll
jmpw
test
fisubrl
push
jge
pop
cmp
cli
mov
or
into
ret
jmp
lea
dec
outsl
or
jne
sbb
loop
fs
jmp
les
aam
push
loop
and
std
mov
mov
in
mov
mov
inc
add
bound
stc
loop
xchg
mov
nop
xchg
push
das
push
sbb
mov
or
push
rcll
push
clc
out
mov
pop
push
ds
icebp
mulb
pop
loop
sub
cmp
sub
inc
or
mov
mov
arpl
add
mov
jmp
aam
jg
pop
mov
mov
fcmovnb
pop
and
aad
push
test
shlb
pop
jbe
jp
mov
dec
jbe
mov
sub
les
xchg
mov
ret
sub
mov
rorl
inc
pop
jnp
aad
bound
popa
loopew
jg
frstor
add
fcoms
js
ljmp
xlat
dec
scas
insb
sbb
dec
push
cltd
mov
addl
shlb
and
data16
mov
fisttps
add
or
add
jne
sbb
lock
sub
das
xchg
push
xchg
jecxz
mov
cld
xor
inc
popf
in
jbe
pop
aam
mov
popa
dec
adc
in
or
aaa
in
insb
ds
push
stc
adc
sub
clc
xor
inc
push
and
jno
or
adc
adc
cwtl
dec
or
repz
pop
jne
mov
inc
sub
cltd
lods
mov
jne
ljmp
stc
xor
xchg
and
push
lahf
dec
mov
int3
imul
lret
dec
mov
lods
dec
std
add
imul
sub
and
pop
xchg
scas
add
and
cli
xchg
mov
push
sub
mov
mov
das
pop
cmp
sub
push
xchg
outsl
aas
int3
inc
cld
sub
fcmovu
or
mov
xchg
mov
lret
mov
das
sarl
ret
push
mov
push
pop
dec
adc
pop
xchg
xchg
and
jns
sub
jl
mull
mov
xchg
mov
adc
push
adc
or
jb
sbb
jnp
mov
je
leave
pop
popf
xchg
or
pushf
mov
jnp
cmp
in
and
xor
mov
jmp
xchg
into
pop
icebp
jae
shlb
jecxz
lds
push
mov
shr
sbb
pop
das
pop
jae
or
andb
xor
test
mov
mov
mov
jmp
lret
leave
adc
arpl
mov
and
cli
addr16
xchg
test
lret
pop
aad
inc
push
pop
popa
push
mov
mov
test
orl
push
int
insl
sbb
add
adc
repnz
mov
out
xchg
mov
mov
push
faddl
sub
or
imul
test
and
push
fucomp
push
bswap
inc
pop
dec
out
or
sub
loope
popf
or
fiaddl
dec
dec
daa
cmpsl
rdmsr
xor
daa
sahf
sbb
mov
stc
outsb
xor
jb
pop
and
sti
jbe
adc
sbb
jbe
pop
or
mov
ja
mov
js
dec
sbb
jp
jecxz
js
sub
mov
popf
test
imull
mov
div
aam
push
mov
sub
and
adc
int3
sti
idiv
inc
enter
out
cli
add
in
shll
add
dec
int
pushf
int
faddp
fldl
mov
or
xchg
loop
xor
testb
cmp
xchg
sti
xchg
mov
jb
pop
add
sub
mov
pop
fmuls
lret
movsbl
cli
adc
sbbb
cmp
jae
jns
jl
and
xchg
jb
mov
xchg
in
lcall
not
test
dec
xchg
lcall
imul
sbb
decb
jp
pop
jns
lods
aam
sub
hlt
xchg
xlat
clc
xlat
push
dec
movl
jle
mov
cwtl
xchg
jmp
xor
cmc
sub
lahf
pop
pusha
ret
aad
imul
sti
mov
cmp
mov
idivb
mov
pop
xor
xor
mov
ljmp
cwtl
jbe
ret
mov
test
xor
adc
shll
test
stc
in
jg
jno
call
bound
pop
inc
popf
cmp
fistpl
jle
or
and
sbb
sahf
push
mov
inc
xchg
or
cmp
repz
push
pop
je
sbb
dec
adc
ljmp
add
incb
test
and
pop
xchg
mov
sbb
rcll
arpl
xor
xor
adc
inc
sarb
sub
test
and
nop
mov
sbb
sbb
insb
sub
add
outsb
clc
cmp
cld
pusha
or
bound
sub
cmc
pop
add
cmp
cmpsl
loop
cmp
pop
sub
repnz
pop
negb
jno
mov
sti
mov
fcmovnu
xor
es
in
jae
mov
pop
shufps
fbld
pop
aas
sub
addr16
push
jns
sarb
aas
mov
mov
xor
bound
xor
sbb
pushf
dec
xchg
aas
push
shrl
pop
xchg
lcall
sub
loope
call
and
mov
lret
into
mov
enter
mov
mov
push
xor
stos
xchg
fs
add
jmp
scas
rcll
fidivs
movsb
ja
in
int
out
xor
inc
pop
lahf
xchg
adc
ret
sbb
cld
sub
std
pop
rcl
shlb
popf
into
xchg
pusha
push
std
mov
repz
orl
scas
outsb
data16
dec
repz
lods
mov
cmpb
inc
daa
pop
and
pop
xchg
sbb
lahf
fsubr
lds
movsl
xor
dec
sarl
fwait
pop
dec
scas
enter
add
push
dec
push
pop
pop
cltd
add
cmpsl
popa
inc
lods
js
or
lea
sahf
ret
mov
push
add
inc
lret
push
push
movsl
cmpl
fldenv
adc
repnz
push
dec
push
push
mov
das
push
divl
mov
push
jl
pop
or
jns
stos
push
dec
adc
cmp
repnz
jmp
in
neg
pop
nop
cmp
push
and
push
xor
adc
xor
fwait
test
or
mov
out
int3
incb
outsb
inc
or
sub
loop
mov
inc
hlt
ljmp
xchg
xchg
in
cltd
adc
insl
ljmp
adc
cmc
enter
je
hlt
inc
add
loope
fimull
subb
inc
xchg
mov
loop
sub
pop
mov
outsl
adc
cs
sub
mov
inc
jge
sbb
cmp
mov
adc
mov
xor
loope
cltd
cmc
and
push
bound
cwtl
add
mov
pushf
or
or
movsb
test
xlat
jmp
leave
or
dec
in
xlat
jno
push
cmp
movsl
shrb
rorl
push
mov
cmp
jmp
mov
xor
je
test
mov
mov
stos
pop
daa
scas
dec
mov
cmpsl
adc
fmuls
pop
lcall
pop
in
movsl
push
inc
sbb
or
push
sub
push
ja
fisubl
pop
fsubs
arpl
and
test
jp
rolb
js
insb
mov
adc
inc
xchg
sti
loop
sti
mov
mov
data16
jne
add
shrl
jp
sub
movsl
out
cmp
xor
popa
outsb
insb
adc
les
lret
fcompl
bound
jmp
jno
jg
lret
movsl
inc
js
sbb
xchg
ja
and
adcb
cli
in
push
cmp
inc
cwtl
add
fnstsw
xor
add
pop
enter
leave
lods
mov
mov
mov
jmp
aaa
popf
mov
mov
add
scas
in
imul
shll
out
js
cmp
adc
sbb
dec
lea
insl
push
jg
sbb
xlat
es
hlt
add
mov
cmp
cmovs
jb
mov
outsb
jno
add
notb
pop
or
push
in
test
jmp
or
fucom
mov
shrl
mov
pop
cmpsb
repnz
hlt
fisubrs
lods
dec
pop
push
dec
jns
fcoml
call
rorb
pop
jmp
jno
or
pop
dec
adc
jne
add
dec
dec
mov
or
dec
les
push
call
adc
xchg
dec
adc
insb
adcb
xchg
lods
adc
push
lret
in
sti
stc
out
repnz
jle
mov
clc
and
dec
mov
sete
loopne
mov
push
mov
mov
inc
sarl
lahf
dec
nop
xchg
push
out
cmc
test
mov
and
inc
out
movsb
imul
into
sbb
icebp
pushw
mov
cs
xor
sahf
xor
fsubs
in
into
or
and
mov
loopne
mov
cmpsb
gs
addb
testb
add
idivl
pop
ds
pop
daa
jmp
enter
cmp
adc
dec
inc
xlat
push
stc
jmp
lods
arpl
lock
jmp
mov
add
xchg
insl
std
mov
adc
inc
xor
sub
or
sbb
sbb
push
scas
setno
lcall
sub
pop
sub
or
pop
push
mov
mov
sbb
mov
fstpt
lahf
ret
inc
fildl
cmp
nop
pop
scas
jge
and
imul
cld
pop
add
shll
cmpl
mov
ds
loope
das
outsb
jbe
idivl
xlat
ja
cmp
xor
aas
sbb
dec
nop
dec
fucom
ja
insl
cmp
js
mov
aam
jmp
inc
cwtl
mov
pop
mov
jle
rol
sbb
mov
fisubl
push
cltd
hlt
das
in
cmp
add
out
fstpt
addb
xchg
int3
les
adc
rcll
xor
or
pop
subl
and
pop
ljmp
mov
lods
adc
xchg
adc
cmpsb
lds
repnz
mov
sbb
add
xor
imul
pop
push
and
repz
ret
cltd
inc
cli
adc
mov
inc
clc
lock
push
push
outsb
scas
adc
sub
aas
fs
xchg
pop
pop
dec
sub
cwtl
sbb
nop
push
xor
cwtl
cwtl
dec
sub
cmp
mov
dec
sbb
inc
jne
push
enter
rclb
mov
out
sbb
sub
jg
pop
mov
sbb
testb
pop
sbb
ret
popf
mov
out
cld
sbb
outsb
pop
pop
sbb
das
jle
jnp
test
inc
test
in
mov
mov
push
push
adc
or
popl
hlt
adc
inc
dec
mov
jmp
pop
mov
fcompl
sti
mov
cs
out
cwtl
pop
pop
pop
pop
mov
sub
cmp
les
cmp
fiadds
or
pop
adc
test
je
sub
sub
loope
enter
cmpsb
in
sarb
scas
in
sub
loopne
jg
insb
mov
stos
xor
ljmp
pop
ret
cltd
gs
push
mov
add
gs
les
sub
in
mov
push
xor
mov
push
mov
bound
ret
mov
shrb
out
and
ja
jo
fidivrs
pushf
xchg
xlat
cmc
ss
fcmovbe
int3
and
cmp
inc
inc
arpl
cmpb
and
xor
aas
and
mov
dec
xchg
lods
push
xchg
cmp
cwtl
pushf
fwait
jnp
push
jns
mov
rcrb
jp
pop
lods
rcll
mov
add
cmp
into
push
mov
dec
ljmp
and
pusha
int3
and
pop
aaa
mov
in
dec
lret
xor
sub
dec
mov
mov
nop
fcmovnu
dec
das
sbb
out
mov
dec
outsl
or
les
pop
sti
push
xor
arpl
out
add
jl
popa
shlb
mov
mov
stc
inc
inc
pop
shll
mov
pop
dec
pushf
in
pushf
rclb
movsb
xor
testl
sbb
sti
outsb
int
ret
or
mov
shr
mov
mov
jp
sub
clc
cmpsb
insl
inc
mov
mov
dec
sahf
push
lock
mov
js
mov
push
mov
into
out
ficoms
jmp
pop
jno,pn
xchg
mov
and
out
mov
mov
out
lods
and
or
andb
mov
int
das
mov
xchg
jg
add
sahf
loope
sbb
imul
pop
inc
bound
add
repnz
xchg
repnz
lcall
xchg
dec
not
jne
pop
out
outsb
fs
inc
ret
loop
mov
fisttpl
xchg
mov
fdivs
loope
push
xor
jo
mov
out
ret
mov
lret
xchg
lock
pusha
fiaddl
das
lahf
hlt
jl
cltd
clc
add
pop
fs
xor
loop
ss
idivl
mov
outsb
jmp
mov
cmpsl
das
inc
fsubl
test
test
stos
lret
mov
sbb
repnz
rclb
lock
imul
sbb
lret
sub
mov
stos
daa
xchg
xchg
fadds
fnstsw
dec
js
cmc
in
pop
jecxz
push
push
leave
xor
pushf
andb
in
fbld
insl
insl
cmp
jns
aad
xchg
hlt
adc
cmp
inc
das
js
sub
jae
je
mov
cmp
xchg
or
insl
into
xchg
movb
fucompp
and
sbb
sub
push
cmp
mov
fs
jno
inc
mov
cltd
sar
cli
dec
ret
mov
jp
mov
inc
imulb
imul
pop
es
inc
pop
testb
enter
adc
adc
lock
out
pop
cmp
aam
adc
loopne
fldt
cli
xor
push
test
pop
cmp
mov
sbb
xchg
inc
popa
or
mov
inc
mov
hlt
stos
ja
mov
mov
lret
hlt
adc
fdivr
jle
arpl
cwtl
lret
jb
enter
aam
out
push
test
scas
insb
xlat
jno
and
xor
adc
insl
fmuls
mov
stc
jnp
aaa
push
pop
jge
out
fnstenv
pop
rorb
cs
addr16
mov
xchg
dec
dec
dec
lret
fmulp
xorb
loopne
xchg
dec
sbb
jle
ret
in
xchg
dec
int
shlb
call
pop
lock
add
sub
das
push
clc
mov
or
inc
pop
and
mov
cmp
test
pop
pusha
call
fnstcw
lds
in
push
cwtl
jb
test
inc
and
mov
xor
negb
arpl
sti
loop
xchg
xchg
push
lret
cmp
lahf
mov
mov
jnp
addr16
enterw
in
popf
je
repnz
pusha
mull
adc
sub
or
and
sar
dec
fildll
dec
popf
mov
mov
xor
clc
nop
out
push
jmp
pop
in
icebp
lock
jne
push
loop
arpl
and
in
and
fdivl
add
aad
in
les
test
pop
jae
decl
mov
int3
cmc
mov
cmpsb
dec
sbb
mov
dec
pop
shll
cmp
fldt
out
mov
adc
scas
enter
sbb
lret
jbe
inc
sub
leave
sub
outsl
xchg
add
pop
shll
adc
lock
dec
push
push
fisttpll
cmp
and
cmp
mov
into
mov
bound
xor
std
outsb
push
dec
cmp
inc
mov
or
js
popf
mov
xchg
test
push
stos
xchg
aas
inc
jmp
test
movhps
test
loop
mov
inc
and
dec
popf
enter
lds
test
jl
lds
lock
les
cli
imul
add
pop
out
xlat
push
push
outsb
nop
inc
pop
leave
mov
fisubl
negb
mov
ja
or
js
cmp
iret
sub
lahf
loope
and
test
divl
add
push
inc
sar
jo
cli
ret
push
push
mov
test
jns
cmp
lods
sub
mov
mov
sbb
or
outsb
mov
inc
data16
jge
xchg
adc
mov
pop
aas
loop
rolb
jnp
mov
jo
bound
push
jns
int
or
adc
hlt
testb
dec
add
mov
cmp
and
enter
xchg
inc
repnz
insb
leave
xchg
lods
xor
mov
sbb
mov
es
cmp
test
imul
testb
icebp
xor
add
fs
mov
lret
pusha
xchg
orl
sub
mov
faddl
imull
adc
popf
push
out
gs
mov
dec
xchg
sti
insl
int
mov
clc
xchg
push
mov
or
pop
sbb
and
pop
sbb
lret
xchg
loopne
xchg
jb
les
or
cmp
cmc
push
xchg
fwait
adc
clc
iret
dec
xorl
ja
sub
lods
mov
lds
push
scas
xlat
dec
adc
imul
lcall
push
lret
mov
je
cld
in
popa
inc
mov
int
pusha
mov
insb
ds
out
data16
lods
add
loop
loopne
int3
cli
addb
pop
jge
push
cmpsb
std
ret
inc
sub
mov
insl
xchg
pop
mov
clc
mov
dec
imul
jle
jle
fwait
jmp
jp
aad
and
cmp
push
cvttps2pi
and
movsl
aam
pop
dec
cwtl
or
xchg
xchg
xchg
fbstp
adc
int
es
sub
mov
icebp
push
dec
jmp
sub
std
jne
mov
jnp
xor
push
mov
dec
mov
in
ja
mov
inc
inc
jp
hlt
test
mov
fsts
jp
enter
dec
jmp
fmull
popa
out
pop
push
xor
xchg
ja
xchg
lcall
cmp
add
in
push
pusha
ret
sub
sub
fstl
dec
xor
fdiv
int3
fildll
out
lods
adc
mov
sbb
fwait
mov
lods
sbb
insl
cmpb
pusha
push
push
sub
ret
adc
add
mov
nop
push
cs
ja
add
sbbl
idivl
push
fldcw
loopne
mov
sbb
mov
push
inc
mov
jge
leave
adc
xchg
mov
retw
sar
mov
push
in
dec
xchg
mov
sbb
add
pop
daa
dec
mov
push
lahf
enter
push
sub
bound
les
test
subl
mov
decb
jb
jae
push
stc
pop
dec
push
movl
nop
sbb
inc
xchg
xor
fwait
jecxz
fistpl
fists
out
fs
daa
fsubl
or
loopne
push
xchg
mov
sti
mov
mov
ss
ret
push
test
pop
and
cmpsb
pop
dec
test
pop
aad
arpl
div
cmp
pop
cmp
cmpsb
xor
jnp
inc
divl
scas
insb
dec
addr16
cli
ja
push
les
adc
and
scas
daa
pushf
stos
leave
aas
hlt
inc
jle
and
stc
icebp
mov
push
das
mov
sub
into
xor
std
stos
imul
aaa
add
cwtl
sub
ja
adc
mov
mov
pop
inc
sarb
movsb
sbb
loop
xchg
pop
mov
lods
sbb
lret
repz
cwtd
jmp
shll
shl
xchg
add
fcmovnb
adc
cs
xchg
adc
jecxz
jno
lret
ret
pop
cld
jg
sbb
clc
das
adc
and
adc
into
les
pop
xor
mov
jecxz
mov
iret
rcl
adc
or
js
inc
dec
dec
inc
jae
into
inc
lea
into
mov
cmp
xchg
xchg
repnz
push
jo
sbb
inc
ljmp
xor
movsl
int
aam
int
cltd
push
lock
add
in
jecxz
mov
dec
fdivl
ds
or
mov
loope
adc
mov
jle
mov
mov
mov
das
testb
outsb
push
lret
mov
pushl
inc
es
out
aad
jns
in
xorb
daa
sbb
stc
mov
mov
pop
sub
btr
sub
sub
push
insb
mov
pop
es
data16
cmpsb
in
orb
inc
test
inc
je
xchg
and
imul
scas
sbb
dec
ret
xchg
push
loop
jno
movsl
sbb
jo
popf
cmpsb
ret
or
out
or
int3
out
jnp
loope
call
ds
sub
shll
jae
mov
sahf
cmp
xchg
adc
push
or
mov
xchg
das
lret
aaa
ja
in
or
insb
xlat
push
or
jl
add
cmc
xlat
fstpl
xorl
sub
xchg
mov
pop
cmpsl
das
adc
xchg
sbb
enter
mov
mov
ss
int
shrl
scas
xchg
je
js
lods
cmpsb
xchg
mov
lahf
mov
xlat
imul
inc
outsb
in
lods
push
insl
addr16
iret
mov
das
sub
outsl
sahf
jnp
fldl
push
mov
jp
jnp
fldenv
mov
xchg
pop
cmp
pop
mov
call
rorl
jno
mov
sbb
loopne
mov
dec
adc
or
insl
jecxz
js
insl
mov
pushf
sbb
ds
arpl
inc
inc
imul
and
in
cmpsl
data16
cmp
cmc
idivb
inc
xchg
cli
aas
fmul
repz
mov
add
lcall
adc
or
cmpsl
and
fisttpll
fs
pop
pop
dec
aas
lods
gs
imul
aas
push
push
jns
or
lea
ss
jmp
sub
push
std
fsubl
ret
clc
test
cmp
add
lds
movsb
test
add
in
lcall
xorb
in
add
loop
outsl
rcrb
xor
jg
inc
cmp
mov
xchg
fs
cmp
jbe
mov
jae
adc
mov
clc
fwait
mov
mov
xchg
sahf
pop
push
cwtl
daa
pop
xchg
sub
inc
scas
pop
push
push
dec
mov
sub
xchg
fwait
les
inc
test
ret
pusha
and
or
addb
mov
in
cmp
ds
filds
shrl
pop
aas
and
je
aaa
sub
jle
ret
mov
mov
popf
push
mov
push
aas
movl
lods
xor
mov
bound
scas
cmpsb
imul
clc
pop
sub
into
loopne
mov
addr16
adc
inc
fldenv
add
xor
aas
jge
sbb
arpl
pop
sbb
push
sub
or
imul
xchg
imul
insb
jnp
imul
jnp
hlt
pop
inc
shlb
push
sti
or
sbb
je
xor
stos
nop
push
arpl
or
ss
sbb
repz
sbb
dec
in
or
push
xchg
jg
or
push
mov
dec
sti
push
pop
xchg
adc
inc
add
add
jg
mov
imul
outsl
push
repnz
push
repz
test
xchg
jecxz
lahf
add
xor
cmp
mov
xchg
push
xor
das
mov
std
loope
xchg
ljmp
mov
or
mov
shrb
sub
push
sbb
mov
jns
jne
out
or
addr16
ret
loopne
inc
jnp
dec
pop
add
repz
icebp
cmp
xchg
mov
cli
jp
lret
add
ljmp
mov
adc
sbbl
dec
inc
xchg
subl
dec
push
jge
out
dec
int3
mov
xor
orl
xchg
dec
dec
lret
pop
ljmp
sbb
mov
xchg
into
mov
dec
clc
dec
cmp
adc
jl
addr16
mov
loopne
and
mov
pop
mov
cmp
or
mov
or
aas
add
push
jmp
test
push
xchg
fxch
lds
add
ljmp
cld
rolb
js
fwait
out
pop
push
or
lahf
add
arpl
sbb
in
cwtl
mov
in
lret
arpl
fdivrp
lahf
aas
adc
inc
inc
push
in
jl
jns
push
orl
rdpmc
imul
xchg
scas
movsl
jle
scas
clc
in
cs
push
mov
in
lea
mov
add
inc
dec
mov
add
xchg
pop
test
push
bound
sub
jne
and
shrl
inc
cmp
jae
aas
call
push
imul
pop
or
dec
shlb
push
inc
ljmp
cmpl
fcom
testl
or
xor
sub
fwait
lds
ret
aaa
ret
sub
sub
std
adc
xchg
stc
in
mov
pop
fists
popf
or
call
jecxz
mov
sub
mov
and
les
outsl
sahf
jb
cmpsb
pushf
pop
addb
dec
inc
cmp
ret
loopne
pop
imul
push
or
in
mov
xchg
ret
xchg
sbb
outsl
sub
adc
jmp
dec
loop
mov
ljmp
xlat
or
out
inc
std
xchg
enter
test
xchg
xor
arpl
iret
mov
in
adc
das
das
adc
push
mov
and
cwtl
fisttps
leave
and
jo
iret
rol
cmpsl
cmc
les
jae
dec
aas
mov
popa
mov
into
hlt
xor
pop
mov
incb
clc
sbb
cmpsl
out
and
dec
add
test
cmc
mov
xor
aam
pop
push
je
scas
std
fildll
and
mov
xchg
and
push
pop
ja
jnp
into
aam
mov
inc
cwtl
data16
sub
imul
inc
loopne
out
sbbb
std
je
sbb
jns
das
sub
insb
out
inc
jecxz
sbb
sub
add
sub
jo
mov
jns
mov
arpl
enter
out
xor
aaa
mov
enter
xchg
pusha
inc
jecxz
loope
cmc
mov
mov
jnp
stos
loop
mov
ljmp
jg
mov
mov
test
or
loopne
mov
lretw
sub
cmp
daa
xchg
jmp
cs
fildl
mov
or
or
add
and
pop
adc
test
fldenv
aas
pop
sbb
adc
sbb
test
mov
cwtl
loopne
mov
pop
aaa
mov
sub
imul
stc
xor
or
std
adc
jmp
push
cmp
in
ss
mov
xchg
gs
cmp
fcoml
or
sbb
cs
sbb
daa
pop
jp
push
cmpsl
dec
in
jl
and
mul
adc
dec
enter
jbe
dec
insb
imull
cmpsl
cmpsb
iret
test
lahf
into
sub
jbe
dec
jo
fcmovbe
fstl
mov
fwait
ret
add
das
enter
nop
sub
mulb
add
lock
fistps
cld
outsb
in
sbb
xor
movsl
pop
adc
push
push
paddb
in
loope
shrl
lcall
dec
mov
xor
or
adc
sbb
inc
popf
incb
lds
movsb
arpl
mov
movq
pop
xor
dec
sbb
xchg
sub
rcr
call
mov
ds
xlat
adc
jg
cltd
repz
in
loop
fistl
or
jo
and
and
orb
push
sub
mov
leave
out
jns
loop
add
push
pop
push
inc
inc
cld
inc
pop
and
sbbl
mov
dec
das
ret
mov
pop
movsb
add
clc
mov
adc
idivb
sti
stos
movsb
lods
mov
xchg
movsb
push
ret
fildll
test
add
add
xor
fdivrl
cmpsb
cmp
aaa
dec
pop
sbb
orb
pop
or
cmpsb
sbb
xor
lret
dec
fidivrs
das
lock
imul
test
dec
je
hlt
and
out
fdivrs
movsl
jns
push
das
pop
dec
fisubrl
clc
in
movsb
push
idivl
insl
pusha
inc
mov
cli
xchg
jle
push
inc
xor
mov
and
xor
out
mov
xlat
dec
imul
sub
mov
popf
mov
mov
mov
daa
mov
out
sti
loop
cwtl
stc
or
notb
add
pop
mov
dec
add
xor
in
fbstp
mov
dec
push
std
push
mov
sbb
lret
and
in
std
xchg
sub
popa
push
cltd
ja
jne
jns
xor
sub
lds
push
fcompl
insb
pop
cs
pusha
and
cltd
stc
xchg
xchg
pop
mov
jno
leave
xor
xchg
mov
push
cmp
mov
sub
subb
fildl
adc
sbb
xchg
les
pop
stc
inc
loop
sub
adc
jp
fimull
movb
mov
mov
or
insb
pop
add
xor
cli
mov
in
imul
xchg
xor
xor
mov
mov
jle
fsubl
lret
mov
scas
push
xchg
scas
dec
repz
das
testb
jae
mov
mov
xchg
cwtl
jno
xchg
fs
mov
rolb
xchg
movsb
pop
fisubrs
mov
mov
or
inc
xor
mov
int
andb
mov
std
fmulp
mov
je
push
shlb
adc
mov
stc
fsubs
cli
inc
cmp
mov
loopne
mov
inc
aad
xor
ja
insl
icebp
jns
add
push
out
inc
imul
pop
dec
iret
cmc
and
into
push
stos
or
mov
push
sbb
fdivp
test
out
test
insb
enter
xchg
push
ljmp
rcrl
fildl
pusha
cmp
lret
inc
es
fs
jge
test
mov
sbb
mov
daa
scas
push
cld
and
sub
shll
mov
jmp
dec
pusha
inc
push
shrl
push
aad
jbe
and
push
xchg
cwtl
dec
int
les
icebp
cs
xchg
cli
pop
movsl
and
and
fidivs
xchg
aam
loope
push
jle
enter
ljmp
jge
lea
bound
rcll
pop
out
sub
scas
cltd
pusha
cwtl
jae
aad
sbbb
addr16
jo
aaa
shrl
aas
dec
push
out
mov
and
test
xor
xchg
inc
fwait
lahf
test
mov
pop
sbb
mov
adc
mov
cmc
imul
sbb
jno
int
sbb
pushl
jecxz
daa
push
inc
dec
xchg
pop
or
nop
push
fcomp
dec
pop
push
inc
or
or
inc
push
paddw
jae
xchg
test
ss
dec
ret
push
mov
aam
push
adc
sbb
fldl
insl
dec
mov
lods
jmp
icebp
sub
aas
ja
xorl
cld
fisubs
jbe
fnstenv
insl
jmp
sbb
push
inc
pop
cmpsl
outsl
int3
leave
fildll
sub
es
jge
xor
and
mov
insl
cwtd
pop
lret
xchg
rorb
adc
push
rclb
sub
scas
push
nop
data16
sarl
ret
repz
cld
pop
aad
out
add
cmp
mov
adc
pop
xlat
sbb
outsl
idivb
jp
fildll
into
cmp
repz
sub
ja
lret
sub
adc
popa
loope
sub
movsl
fdiv
sbb
mov
mov
jmp
jg
out
pop
and
mov
mov
js
ljmp
in
aas
sub
mov
std
adc
ss
cmp
call
sub
dec
enter
ds
lahf
mov
dec
cld
aad
push
sti
gs
xor
jecxz
pop
and
mov
add
sub
adc
and
mov
inc
das
ret
pop
or
xchg
ffree
xchg
das
les
pushl
jne
pushf
pop
int3
adc
fistpl
into
dec
jmp
stc
mov
sbb
add
data16
cmp
push
adc
sbb
out
pop
mov
mov
pop
jno
stc
push
lahf
jne
insl
pop
or
leave
jge
popf
test
clc
xchg
jmp
or
leave
in
and
icebp
mov
xor
mov
incb
pop
orb
adc
stc
inc
rclb
push
sbb
hlt
pop
mov
xor
mov
pop
flds
cmp
nop
sti
xchg
pop
cmp
inc
mov
cltd
adc
push
fsubrs
stos
xor
mov
mov
push
inc
nop
nop
inc
cmpsl
shll
shlb
adc
and
add
push
cmovs
bound
enter
xchg
mov
enter
mov
hlt
inc
mov
ret
shrb
lret
fstps
sub
and
sti
repnz
xorl
bound
shrl
pusha
incb
inc
lds
cmp
cmp
sti
sarl
dec
sar
iret
fstps
add
dec
pop
mov
pop
test
pop
cwtl
loopne
cmpsb
push
adc
es
jge
mov
xchg
xchg
fcompl
mov
orl
jg
cmp
arpl
repz
mov
push
mov
loopne
mov
sbb
xchg
mov
mov
mov
std
call
subl
inc
or
xchg
sbb
ret
aas
into
fcoms
imul
xlat
dec
xor
leave
out
mov
jbe
enter
mov
xchg
or
repnz
shl
jnp
js
or
and
add
push
pop
or
xor
cld
mov
add
fimull
inc
jmp
bound
notb
inc
jmp
inc
shll
dec
cmp
push
fsts
mov
out
in
cltd
pop
dec
loop
aas
and
cmpb
fstpt
pop
movb
divb
sbb
jecxz
ret
inc
sub
push
sbb
adc
inc
or
pop
nop
sti
lods
xchg
aas
adc
aaa
push
mov
add
mov
imul
add
lods
xchg
inc
scas
jl
sub
pop
jb
pop
aaa
inc
mov
or
iret
js
sbb
fadd
repnz
lcall
xor
cmp
jle
add
cltd
xlat
jne
mov
inc
push
aaa
movl
lea
or
ja
adc
inc
pop
stc
out
ss
jl
pop
cld
in
clc
or
js
jp
mov
ret
mull
push
rorl
clc
jae
fdivrl
loope
data16
sahf
cvtps2pd
inc
inc
pop
ds
mov
popf
mov
pop
sbb
mov
cli
mov
into
jo
cli
enter
rclb
fstl
fmuls
loope
inc
gs
outsb
sbb
adc
pop
int3
or
lret
add
mov
cmp
ret
pop
cmp
sbbl
pop
insb
int
fcompl
mov
xchg
xchg
adc
mov
or
jb
mov
fs
out
in
mov
inc
push
outsb
dec
leave
jge
out
mov
inc
fwait
dec
or
push
ljmp
icebp
sbb
add
fnsave
cmp
out
cmpsb
inc
lods
and
dec
push
add
shr
xchg
js
fldl
jp
mov
in
mov
jae
xor
mov
popl
jb
scas
and
and
push
mov
mov
data16
pop
scas
mov
mov
pushf
xor
sti
pop
mov
or
orl
cmp
ljmp
push
jecxz
and
push
and
xchg
lock
mov
das
test
inc
xchg
pop
aam
mov
pop
incl
cwtl
jmp
push
inc
cvtps2pd
pop
mov
pusha
mov
xchg
adc
inc
repnz
sub
nop
addr16
aas
mov
mov
jle
mov
dec
enter
push
adc
dec
aas
movb
insb
cmp
push
mov
icebp
cmpsb
and
call
push
ja
jl
and
test
arpl
adcb
rorl
sub
std
cmp
sbb
loop
hlt
xchg
cmp
hlt
mov
cmp
adc
enter
insb
leave
sub
cmp
mov
pop
ds
daa
repz
dec
sbbl
shl
clc
mov
xor
aam
sub
add
jp
inc
pop
adc
xlat
dec
mov
xor
xchg
inc
sbb
sti
pop
hlt
cmp
mov
int
in
adc
push
jne
adc
out
push
inc
imul
sbbl
dec
mov
imul
lret
jecxz
cmp
pusha
xchg
push
jb
pop
loop
pop
xchg
jmp
add
stos
xchg
jne
fdivrs
fs
fstps
add
scas
xchg
loopne
arpl
inc
fistps
pusha
ds
fiadds
cwtl
mov
and
lcall
jle
xor
xchg
stos
idivl
jo
mov
sbb
mov
xchg
adc
cmp
sub
test
aam
out
sub
out
das
and
xor
add
xchg
test
or
cmpsb
bound
sub
push
sub
add
ja
in
dec
inc
adc
add
idiv
mov
jl
and
sub
fbld
insl
cmp
pop
into
leave
cmp
inc
lods
cwtl
les
mov
rcll
outsb
inc
sub
xchg
push
mov
fstl
add
cmpsl
test
push
das
aad
jnp
inc
fsubl
mov
ret
bnd
call
sub
lods
push
mov
stos
mov
gs
test
aam
xchg
pushf
xchg
pop
inc
std
pop
outsl
sub
xchg
int3
push
xchg
and
jge
imul
mov
push
fnstcw
leave
imul
sbbb
jge
mov
iret
jbe
ss
ret
sub
cli
hlt
sbb
fistps
in
inc
push
pop
dec
and
adc
sahf
mov
bound
and
into
mov
sub
pop
jmp
lret
loopne
mov
aas
lock
inc
and
fisubrl
leave
pop
pop
and
mov
lods
aad
shlb
mov
rsqrtps
sti
pop
mov
mov
inc
sub
push
aaa
insl
or
pushf
xchg
mov
into
cmpsl
lret
pop
ja
lods
lahf
out
jns
cmpsl
imul
sub
xabort
sbb
sbb
les
jp
aaa
adc
pop
ss
call
xchg
adc
test
mov
mov
bound
xor
jbe
cltd
imul
or
sub
push
daa
pop
adc
pushf
cli
in
mov
inc
mov
int3
lahf
mov
pop
add
dec
iret
repnz
adc
push
inc
scas
jmp
adc
insl
idivb
dec
push
adc
leave
lods
adc
xchg
in
fdivp
into
out
mov
jns
or
pop
cltd
shl
les
insb
xchg
sub
sub
fcmovnu
mov
mov
fsubrl
idivl
gs
les
mov
pop
pop
sbb
adc
mov
ja
flds
stos
fldt
or
loopne
dec
loop
movsl
repnz
push
inc
aad
pop
cmp
adc
xchg
cld
mov
and
sbb
aas
arpl
push
pop
adc
pop
fisttps
jbe
push
subb
sub
arpl
lcall
push
movsl
mov
jle
sbb
dec
push
cmpsb
repnz
jp
jp
sub
or
dec
xchg
or
mov
test
std
enter
sub
rcr
mov
jecxz
icebp
repz
sub
je
or
call
cmpsb
shl
mov
xor
das
pop
cmp
sub
loope
cmp
sbb
data16
sbb
push
ret
cwtl
aas
test
jl
mov
xchg
in
pop
sbbb
in
sub
sub
loop
js
dec
jge
fs
pop
mov
push
inc
or
dec
sbb
sub
sub
cmpsl
mov
mov
int
dec
leave
ljmp
add
and
mov
xor
push
out
sbb
pop
scas
adc
mov
mov
mov
out
rorl
shl
or
cmp
dec
xor
cwtl
inc
sarl
aad
dec
loopne
sbb
xor
lcall
gs
or
cld
xchg
sub
or
mov
rclb
std
stos
stos
jae
mov
mov
mov
icebp
push
enter
daa
pop
mov
sbb
imul
pop
adc
paddd
out
sub
jbe
jecxz
push
imul
clc
fistps
js
addb
scas
je
mov
push
jnp
scas
mov
adc
adc
add
inc
out
push
scas
inc
xorb
add
jae
cmp
mov
cmp
stos
test
mov
xchg
mov
and
lret
in
adc
pop
faddl
jmp
aas
sahf
mov
or
clc
std
cmc
dec
push
lret
stos
sbb
lahf
lock
scas
cltd
adc
mov
cs
aaa
imul
push
mov
rcrl
xlat
xchg
scas
sbbb
call
ret
xchg
and
add
mov
pop
cs
pop
int
call
popa
sbb
mov
mov
aad
lea
ja
orb
mov
pop
out
test
fwait
sbb
dec
cli
adc
adc
xchg
mov
mov
imul
xchg
mov
andl
fldcw
or
out
lcall
and
ljmp
xor
mov
dec
scas
mov
mov
xor
js
xchg
lea
xchg
and
xor
sarb
sahf
sbb
cli
dec
mov
jl
cmc
cmp
xchg
popf
popf
add
imul
cmpb
sub
adc
test
jae
sbb
test
ss
daa
inc
xchg
lahf
xchg
ret
rclb
loopne
arpl
push
jge
jmp
jg
fimuls
lret
testl
add
cmpsl
loop
popf
addl
dec
stos
mov
ret
cmpb
dec
add
scas
mov
adc
popa
push
icebp
jb
in
lock
xchg
sarb
in
ljmp
inc
test
sbb
outsb
cmp
adc
jb
fst
mov
xor
filds
cli
mov
gs
fildl
popf
cmp
aad
mov
or
lea
imul
xor
jns
pop
inc
mov
xchg
xor
out
or
push
rorb
push
aad
dec
push
add
add
mov
pop
imul
std
fistpll
push
addr16
pop
pop
jmp
pushf
cmc
js
mov
xchg
or
adc
jne
jnp
pop
dec
stos
cwtl
mov
sub
push
mov
pop
fdivp
add
pop
fistpl
xor
mov
in
push
xor
mov
adc
repz
push
jae
dec
imul
aam
mov
push
mov
inc
imul
cmpsl
ret
lahf
jno
add
mov
adc
and
jl
mov
out
fsubs
mov
mov
mov
outsl
ret
cmp
adc
dec
addr16
aad
cli
add
cmpb
repz
mov
pop
inc
inc
leave
cmc
sbb
inc
pusha
sub
jl
xchg
mov
mov
mov
mov
dec
inc
ret
es
push
mov
ficoml
pop
pop
mov
idiv
orb
lahf
mov
pop
insl
mov
add
fwait
lea
pop
fldenv
cmp
iret
add
cmp
movsl
insb
xchg
jb
sub
inc
xchg
and
iret
fs
call
inc
mov
fsubrl
addl
flds
inc
or
insl
addr16
jb
ret
sbb
inc
les
or
add
xchg
mov
cmp
ljmp
lahf
push
cmp
and
cmc
cmp
cmp
jb
iret
xor
adc
xchg
push
out
pop
shll
movsl
and
push
ret
inc
xadd
xchg
jp
jo
xorl
dec
inc
and
cmp
xchg
mov
inc
dec
xchg
lret
pop
dec
push
pop
cld
push
iret
in
xor
bnd
cmc
fisubs
and
negb
stc
rolb
cmp
repz
in
data16
cwtl
aad
std
adcl
adc
xchg
cmc
fists
push
xchg
ja
mov
mov
loop
mov
mov
inc
dec
cmp
mov
lods
mov
mov
pop
lret
mov
xor
test
sub
das
sub
addr16
xchg
xor
jbe
or
jbe
data16
inc
sti
or
js
mov
call
das
mov
shr
cli
xchg
inc
add
or
and
call
sbbb
outsl
xchg
sub
ret
out
shr
std
xchg
cmp
test
repnz
mov
mov
pushf
lea
mov
and
cmp
fxch
cli
push
add
ljmp
notl
pop
pop
and
lods
jns
lods
cmc
add
fdivr
xor
xor
xor
subb
loopne
mov
outsl
xchg
fadds
jns
dec
cmp
cli
push
mov
dec
and
fcoms
mov
or
lret
sub
mov
cli
push
popa
adc
js
and
and
mov
adc
sbbb
out
push
rcrl
daa
es
jle
pop
pop
pop
out
jo
adc
add
int3
cmpsb
add
fsts
pop
subl
xor
je
mov
mov
mov
aas
popf
pop
je
and
in
test
aas
in
lret
mov
pop
inc
xor
jae
dec
data16
sbb
out
int
test
xor
dec
pop
xchg
pop
insb
aas
ud1
stos
ss
adc
push
dec
stc
mov
add
in
imul
imul
scas
test
pop
inc
std
movsb
add
inc
and
cmpsb
push
mov
jecxz
sub
push
and
scas
lret
mov
cmp
push
pop
call
jnp
imul
push
inc
cmpsl
jno
jo
stc
aad
jecxz
dec
pop
xorl
out
fs
outsb
lock
lods
cli
sbb
lods
cmp
js
jbe
mov
int
jmp
fldl
mov
xchg
cmp
xor
or
dec
xchg
movsb
inc
sbb
inc
add
cmc
cwtl
push
mov
fists
cmp
aam
xchg
imul
xchg
cmpsb
fidivrl
or
mov
mov
popf
xlat
inc
fistl
loope
adc
push
cwtl
xchg
inc
sbb
jmp
mov
nop
in
mov
insl
scas
pop
push
push
jmp
jo
adc
call
mov
lds
cli
mov
testb
inc
push
loopne
add
fimuls
mov
pop
jp
stos
insb
sahf
std
scas
leave
rolb
aaa
icebp
pop
outsl
stos
xor
cltd
add
xchg
xor
or
sub
sub
cmpsl
cmp
loopne
sub
mov
rcrl
mov
jno
out
outsl
pop
and
je
mov
xor
subb
or
push
cmp
movsl
jns
loopne
jbe
mov
mov
jae
push
out
sub
fstpl
cmp
das
repnz
cmp
cltd
lea
ret
push
fists
mov
lock
adc
push
or
jge
pushf
and
jmp
xor
fadds
popf
and
enter
int3
inc
dec
mov
rcll
mov
dec
mov
lds
sub
mov
arpl
or
mov
pop
xor
mov
mov
mov
mov
sar
xchg
in
sbb
arpl
add
int
hlt
aad
or
cld
sub
fiadds
sub
mull
dec
or
mov
cmpb
cld
incl
xor
sbb
stos
popa
cmpsb
scas
rolb
js
sahf
adc
js
cmp
pushf
mov
mov
mov
adc
xlat
mov
adc
arpl
movsb
inc
cs
jae
dec
fs
test
inc
or
test
xlat
mov
lea
add
jnp
mov
out
xchg
mov
ja
xor
js
ds
in
fwait
and
adc
test
mov
cmpsl
imulb
adc
outsl
pop
test
xchg
mov
cld
jnp
stc
dec
xchg
idivb
dec
aas
push
inc
fisubrs
mov
xor
sub
sarb
ror
orb
icebp
jmp
lcall
jb
int3
push
cli
fcompl
out
jne
adc
mov
insl
xchg
add
add
jns
xorb
movsb
mov
mov
sbb
adc
orb
sbb
jne
inc
sarl
pop
mov
jmp
mov
mov
ds
push
xchg
subb
std
inc
repz
out
jl
xlat
dec
push
gs
cmp
cmpsl
sbb
xchg
push
lret
int
hlt
leave
nop
ret
cmp
in
cmp
test
push
call
mov
adc
push
loopne
cmpsb
sub
xchg
into
dec
cmc
insl
push
jg
and
sub
push
sarl
out
inc
stos
or
mov
lds
push
fcmove
cmp
sub
jae
lret
mov
sub
and
lcall
jmp
mov
inc
jnp
cmp
push
ljmp
scas
mov
jns
xlat
pop
push
inc
ljmp
cli
mov
aam
pop
and
popf
out
cltd
inc
test
xor
je
pop
xchg
testb
dec
pop
xor
xchg
pushf
mov
mov
sbb
cmp
or
pop
dec
jg
mov
adc
ror
xchg
and
jb
iret
adc
test
jnp
loope
xor
and
dec
pop
dec
sub
mov
les
lret
mov
mov
lea
cmc
shrl
dec
adc
daa
int
push
cltd
add
decb
imul
ret
sub
loope
call
lods
xchg
or
lds
stc
sbb
in
shr
in
and
dec
inc
dec
inc
orb
pop
arpl
jb
mov
jo
xorb
ds
insl
lahf
fstps
mov
xor
mov
mov
mov
xor
cmp
mov
dec
mov
cmp
mov
insl
sub
mov
ljmp
mov
dec
mov
jno
dec
ficoml
pop
test
test
and
inc
lret
adc
mov
movsl
sbb
in
gs
jl
jl
cwtl
sbb
pop
push
cli
pop
xchg
adc
xchg
fcoml
arpl
mov
cmp
and
or
outsb
ret
mov
pop
pop
ds
jae
enter
xchg
pop
jns
nop
xor
adc
mov
adc
xor
jns
imul
sub
scas
fld
fldenv
sbb
sub
and
pop
sbb
fistps
add
gs
repz
sahf
shll
das
fidivrl
movsl
ds
dec
add
cmp
rcll
lret
int3
or
jmp
jae
xchg
out
cmp
imul
in
mov
sbb
jle
idivb
jbe
arpl
and
xor
push
insb
sbb
imul
lret
push
clc
dec
inc
cmp
loopne
rolb
aaa
jno
out
inc
and
test
and
pop
movsb
cmpb
fiadds
or
mov
cld
sahf
or
dec
jnp
in
mov
mov
mov
cmp
cwtl
jb
xorl
pop
sbb
jmp
mov
fisubs
stc
in
cmp
out
sti
test
cs
imul
mov
mov
dec
dec
mov
loope
sub
sahf
add
dec
stc
pop
xchg
sti
popf
movups
scas
shlb
sarl
xor
xchg
out
jg
sub
call
sub
fsubp
and
aas
mov
add
push
je
sbb
repz
mov
mov
mov
xor
fisubl
movsl
and
inc
lret
test
sarb
es
inc
xchg
call
mov
cmc
push
repz
mov
out
mov
fmul
dec
ds
mov
jecxz
scas
and
stos
or
cmp
cmp
jecxz
in
sbb
and
mov
inc
dec
inc
adcb
inc
sub
inc
inc
idivl
jns
movb
aas
and
sbb
in
ja
ffree
popf
int
adc
stc
mov
and
movsb
out
int
aad
cmp
mov
push
je
int3
adc
lods
pop
mov
mov
ret
in
xchg
out
lahf
xchg
add
push
adc
mov
cld
pop
xchg
cmp
jmp
lahf
rorl
push
xchg
pop
pop
scas
or
sbb
jno
movsl
test
scas
imul
stos
mov
push
xchg
insl
dec
add
andl
pop
sbb
jb
out
mov
aam
cmp
dec
or
push
mov
lret
ja
jae
or
stos
jle
lret
add
es
scas
mov
xchg
push
cmp
shl
popf
sti
aas
lcall
inc
ja
ds
popf
outsl
push
fs
test
adc
test
inc
pop
jne
decl
and
dec
test
xchg
imul
jbe
add
jns
call
jbe
imul
outsb
ficoms
andb
lea
dec
outsb
fmull
jbe
jbe
xchg
jmp
pushf
pop
arpl
sbb
lcall
adc
xchg
push
xor
aas
or
dec
jno
shll
or
xor
xor
test
add
add
sbbl
lret
adc
pop
adc
stos
adc
icebp
jno
sub
aad
sar
mov
int
lret
mov
aad
out
sti
popf
rol
es
inc
daa
xor
xlat
aas
lods
push
or
ret
imul
add
scas
nop
mov
clc
shlb
pop
mov
pusha
cmpsl
sti
mov
popa
leave
insb
insl
sbb
movsl
out
jne
push
xchg
jae
xchg
add
out
jg
sub
in
aaa
lds
test
mov
mov
inc
sbb
pop
pop
mov
sub
pop
jle
mov
mov
jp
roll
sti
shll
mov
jns
fmuls
mov
mov
outsl
stc
es
jl
xor
mov
xor
jne
subl
xor
mov
jp
leave
ja
pop
jmp
dec
xorb
push
sub
jle
outsl
pop
sbb
loopne
aaa
lods
mov
fbstp
icebp
popf
mov
add
push
iret
and
push
test
jle
mov
vcvtsd2si
add
movsb
adc
shrl
mov
out
pop
xor
inc
je
movsl
dec
in
mov
push
sbb
mov
aas
push
arpl
xchg
lahf
sbb
xchg
jecxz
hlt
xor
inc
adc
sti
lods
sbb
aas
call
repnz
aam
inc
pop
push
lcall
movsb
mov
stos
inc
out
inc
aad
mov
mov
shr
xchg
sbb
mov
cmp
gs
sub
icebp
pop
imul
pop
inc
pusha
fbld
push
xor
je
lock
jmp
out
test
jo
fs
sahf
idivb
out
or
sbb
sbb
cmp
in
adc
cmp
pop
dec
cmp
aad
movsl
mov
sbb
sbb
movsb
iret
xsha1
cmpsb
dec
je
mov
xchg
inc
and
lea
push
jb
sbbl
adcl
xchg
sub
sbb
jmp
popa
jns
popf
fcmovne
and
into
fisttpll
or
pop
iret
xchg
movsb
in
js
push
movsb
xor
ljmp
add
and
shrb
lahf
jae
mov
cmpl
sbb
sub
dec
lahf
std
push
adc
stos
clc
and
xor
xor
into
push
mov
jbe
ja
xor
push
sbb
cld
out
jl
push
sahf
lret
jge
push
int3
xchg
sarb
cmp
push
mov
xor
jl
add
xchg
leave
lea
js
sub
ja
sub
lods
pushf
lcall
push
mov
xor
ss
lds
push
test
fcmovne
mov
in
sarl
cmp
std
or
xchg
sbb
pop
and
inc
push
pop
xchg
jmp
es
xor
jmp
movsl
mov
mov
or
rol
mov
cmc
aas
add
popa
imul
test
pop
testb
push
inc
mov
mov
pop
push
pop
cli
cmpsb
xor
outsl
push
add
dec
insl
sub
ds
sub
mov
or
cli
mov
inc
pop
sub
das
xchg
inc
fcompl
jle
mov
push
mov
pop
mov
test
icebp
inc
jns
mov
push
push
mov
push
mov
and
sub
fists
jb
das
inc
or
mov
pop
vcvtss2sd
xchg
sub
pop
mov
inc
lcall
call
mov
cmp
add
mov
mov
fsubl
ja
loop
jle
cwtl
and
pop
xchg
gs
call
out
xchg
mov
mov
add
fldcw
cwtl
sbb
test
insb
testb
idiv
stos
jb
inc
add
test
lret
out
cmp
adc
mov
jo
xchg
xor
sbb
enter
inc
rol
adc
jl
movsb
adc
xchg
orl
or
jne
sub
jb
mov
neg
add
dec
jmp
imul
xchg
pop
jne
addr16
sti
jle
movsl
inc
or
mov
ror
xor
adc
sbb
test
shlb
adc
dec
pop
shlb
mov
xorb
daa
arpl
iret
mov
jecxz
insl
sub
mov
sahf
xchg
rolb
mov
mov
xor
iret
mov
call
mov
je
pop
pop
cmc
push
ret
popf
cmovbe
out
push
jge
icebp
mov
pop
mov
mov
jle
jle
mov
jp
imul
mov
push
inc
pop
sahf
mov
jno
cs
mov
fstpl
add
add
push
mov
scas
dec
xchg
cltd
aad
mov
xchg
and
xchg
xor
test
cmp
adc
xchg
dec
push
cmp
ret
sahf
push
jle
mov
sub
pop
or
dec
mov
and
dec
adc
sub
add
add
cmpsl
lods
dec
rorl
dec
mov
sub
xor
fidivrl
mov
push
cltd
xor
pop
xor
push
xchg
sub
mov
sbb
fs
mov
and
push
mov
pop
mov
stos
arpl
sti
and
ret
ljmp
sub
adc
adc
xchg
pop
or
movsb
jge
jo
jg
pop
rcr
sbb
mov
mov
pop
mov
or
lock
fistpll
lea
jae
outsl
mov
shlb
pusha
sub
jne
pop
test
insb
out
dec
jp
dec
loopne
and
mov
mov
adc
ret
mov
mov
sub
lahf
popf
lret
push
insb
andl
mov
dec
jg
cmp
sub
sub
daa
mov
xchg
pop
clc
fstps
orb
mov
std
sbb
adcb
inc
mov
pop
fs
push
int
mov
ret
pushf
adc
outsb
jb
xor
gs
sub
dec
outsb
xchg
sub
inc
divb
pusha
mov
add
push
inc
and
mov
mov
hlt
sub
out
jb
out
mov
push
les
push
test
xor
clc
inc
rcrb
mov
icebp
or
pusha
cmpsl
sbb
out
mov
addr16
adc
mov
dec
sub
aas
test
inc
jecxz
je
lods
xchg
movsb
add
gs
jb
cmp
lcall
mov
jns
fildl
addb
push
notl
and
xchg
ja
and
push
leave
jno
pop
mov
mov
fnstenv
sub
mov
xchg
mov
mov
jmp
push
aaa
sbb
push
cmpl
fildl
adc
or
add
out
jae
or
dec
je
xchg
test
sbb
shl
lret
sbb
or
shl
mov
jge
and
ret
mov
cmp
jb
fmull
incl
lods
divl
enter
push
inc
repz
out
aaa
mov
arpl
cwtl
or
dec
pop
fcomp
inc
pusha
scas
cmpsl
lret
cmpsb
inc
fidivs
push
in
mov
xchg
ret
ss
imul
repnz
sbb
aaa
je
sti
aaa
xchg
xor
stc
cmpsl
pop
sub
xor
sahf
in
testl
orb
cs
mov
sbbl
fcmovnb
imul
mov
je
test
outsb
adc
inc
pop
cmp
loopne
inc
test
int
shll
mov
pop
and
mov
leave
pop
jae
sbb
imul
pop
dec
test
rclb
adc
or
cwtl
data16
clc
add
mov
mov
fbld
xchg
adcb
and
pushf
xchg
adc
push
ja
negb
lds
jne
jmp
out
cmpsl
pop
inc
lds
mov
cmpsl
adc
adc
cmpsb
xchg
movsl
sbb
sbb
or
adc
pop
fimuls
les
fldln2
dec
or
shr
nop
adc
push
fmull
punpckhbw
adc
bound
mov
ds
push
movsb
fisubs
mov
arpl
out
pop
cmp
xor
fwait
push
mov
push
test
mov
sahf
xchg
insl
cli
js
lods
fnstsw
jno
cmp
pushf
ret
xor
sbb
mov
sbb
xchg
notb
sub
outsb
fisubrl
mov
mov
jle
add
xorb
push
aas
add
bound
jl
subb
enter
fstpl
int3
iret
cs
jge
das
mov
cmp
push
add
jb
push
mov
popa
out
psubsw
pop
jnp
cs
repnz
cmp
cmp
outsb
pop
or
xchg
push
xchg
fmuls
xchg
mov
shrb
cmpsb
lods
add
jl
lods
stc
mov
fnstcw
push
mov
cmp
ja
push
cmp
jne
stc
xor
ret
or
adc
push
mov
dec
jnp
and
and
gs
adc
dec
add
pop
push
arpl
in
into
std
xor
sti
sbbl
call
mov
cltd
mov
sub
nop
or
lret
inc
daa
shrl
pop
test
sbbb
dec
jne
cmpsl
nop
jae
testb
jno
arpl
ljmp
pop
sbb
adc
out
jecxz
mov
negb
xor
mov
ds
mov
jo
insb
adc
rcrb
call
cs
push
movsb
or
push
xor
neg
popa
sbb
ds
cmp
push
pop
gs
cs
mov
jae
add
jbe
nop
in
mov
shll
fimuls
sbb
inc
add
inc
icebp
xchg
out
stos
std
fs
mov
mov
rcrb
in
sbb
push
mov
dec
xor
lahf
add
dec
into
xchg
fisubl
dec
sbb
mov
xor
and
jbe
dec
sarb
je
push
jmp
enter
jb
out
push
gs
sub
mov
push
inc
lret
outsl
lock
pusha
xlat
push
ss
xchg
sub
jle
shlb
mov
int3
adcl
cs
lahf
inc
push
clc
jne
arpl
dec
test
lods
xorb
outsb
push
rclb
pop
sbb
outsl
mov
sbb
jp
or
ret
popf
stos
leave
imul
ret
mov
repnz
fistpl
push
and
stos
out
fisttps
xchg
fs
aaa
sti
inc
test
mov
mov
mov
mov
mov
sbb
lods
cmp
call
mov
or
test
push
pop
xchg
pop
insb
push
xchg
movsl
dec
adc
push
inc
mov
inc
cmpsb
jbe
lock
daa
xchg
push
pop
pop
decb
scas
add
dec
dec
bnd
decb
xlat
movsb
jmp
pop
mov
sub
xor
push
fcmove
jg
frstor
xor
mov
adc
sub
fcompl
shl
mov
pop
mov
and
and
jno
sbb
xor
fldt
int
push
push
test
pop
mov
sahf
in
ss
cltd
lds
int3
addr16
mov
pop
adc
xchg
xor
sahf
dec
fwait
aam
push
les
push
hlt
pop
test
adc
aam
jecxz
or
push
jg
sahf
jmp
scas
inc
cmp
lds
les
das
stc
dec
iret
fwait
xor
mov
and
in
aas
fadd
mov
sbb
xor
jne
int3
mov
enter
mov
lea
andb
cld
ljmp
popf
and
mov
int
jbe
xor
xor
xor
push
sbb
scas
testl
aaa
mov
xor
pop
mov
mov
pusha
test
mov
lahf
cli
insl
xor
arpl
inc
imul
into
sbb
xchg
push
cmc
and
lret
cmp
jle
mov
pop
xor
mov
scas
insl
and
mov
lret
sub
sub
adc
int3
ljmp
push
or
test
adc
mov
sbb
sbb
cmp
jno
sarl
jb
mov
jl
xor
adc
les
mov
rorl
enter
jb
cmp
xlat
lods
mov
xor
pop
push
xchg
jecxz
roll
fisttpll
cmpl
mov
mulb
pop
mov
dec
cmp
push
lods
imul
and
jbe
xor
lcall
mov
js
nop
jb
imul
pushf
jle
jecxz
mov
int3
xchg
out
je
cli
or
push
mov
inc
mov
sbb
add
cwtl
call
gs
mov
adc
psubq
mov
loop
pop
push
divl
mov
inc
xchg
or
ljmp
pop
loope
xchg
jg
mov
std
jbe
lcall
or
fmul
push
xor
mov
scas
mov
mov
roll
push
lock
test
mov
pop
cld
push
pop
das
push
cmpsb
lcall
cmp
data16
sub
out
in
orb
bound
test
int3
lahf
mov
dec
addr16
lods
aad
xchg
push
jnp
inc
fldcw
cmp
jge
fadds
or
je
lods
cmp
icebp
divb
xor
aaa
aas
push
clc
mov
or
repz
push
outsb
or
bswap
in
dec
jmp
sub
sbb
or
lods
in
fists
mov
leave
add
mov
fdivs
pop
mov
and
lds
cmp
mov
mov
cmovo
rcl
fidivrs
popa
xorb
in
and
lret
fnstcw
xor
cmp
mov
rclb
and
sbb
loopne
xchg
imul
dec
pop
mov
das
dec
xor
pop
or
mov
cwtl
scas
inc
daa
js
pop
bnd
mov
sbb
cmpsb
faddl
mov
inc
rol
jg
loopne
inc
add
out
xchg
aas
mov
cmp
and
xchg
js
sar
mov
sbb
dec
pop
sahf
sbbb
cmp
inc
cs
clc
sbbb
daa
cmp
fnstcw
sbb
out
fnstenv
scas
push
cmp
cmp
fstpt
shrb
mov
repnz
and
ret
scas
shl
cmp
test
clc
call
stos
mov
jge
ja
cmp
aas
push
iret
sub
sub
ret
enter
sbb
fmul
cmpsb
fnstcw
adcb
fmuls
push
loope
ljmp
icebp
mov
sbb
fs
pop
out
pop
pop
mov
push
xlat
std
xchg
adc
lock
imul
jecxz
pop
and
iret
cmp
mov
nop
jno
mov
xor
mov
movsb
inc
pcmpgtw
pop
je
gs
mov
cmp
icebp
cmp
jmp
fimull
mov
jno
add
xchg
inc
jg
in
pop
data16
cld
arpl
xchg
sbb
push
xor
cld
sti
sbb
scas
sbb
jnp
sbb
mov
push
andl
addr16
pop
fimuls
push
xor
dec
lret
jl
in
cmpsl
add
mov
daa
mov
inc
subb
push
arpl
pop
adc
fs
jle
mov
pop
icebp
jl
lahf
dec
add
adc
xor
or
lahf
frstor
gs
and
sbb
in
xor
dec
ljmp
rolb
shlb
push
sarb
or
ret
repz
pushf
sub
lret
push
mov
jmp
jp
jne
add
push
les
enter
inc
xor
test
shrb
cmp
ret
stos
ficomps
sub
xor
popa
mov
add
xchg
xchg
cmpb
xchg
cmp
add
leave
adc
cmc
xlat
repnz
push
jg
pushf
test
adc
test
xorb
mov
jae
adcb
loopne
dec
sub
adc
xchg
jg
ss
das
xchg
rolb
cld
ret
jo
daa
stos
jo
imul
jo
repz
mov
enter
ljmp
rol
adc
xchg
adc
and
rolb
movsb
push
jae
mov
or
or
cmc
dec
xchg
test
xchg
fiadds
inc
cmpsb
iret
sub
fsts
mov
dec
xor
push
cmp
sbbb
jecxz
mov
xorb
pop
push
mov
iret
jns
xchg
mov
pop
fwait
or
cs
mov
jns
stos
bound
adc
add
push
push
iret
adc
fldl
jb
ss
sub
jecxz
hlt
dec
mov
cmp
or
jle
das
adc
pop
sub
lret
inc
and
out
insl
inc
sbb
dec
xchg
loopne
stos
pandn
mov
dec
ret
xchg
push
cmp
jle
fcomp
cmp
fdivp
pop
cltd
cld
inc
jno
out
js
adc
popa
pop
outsb
aad
nop
test
aaa
pop
test
popa
cmp
imul
dec
ds
test
movsl
lea
rcr
pop
mov
lods
js
in
add
or
paddsb
pusha
dec
addb
ja
imul
cmpsb
dec
cmpsb
or
mov
stos
fstps
sbb
data16
aas
xor
mov
jge,pn
cmp
mov
decb
mov
add
add
int3
inc
push
sub
push
mov
leave
ffreep
xchg
out
adc
hlt
mov
mov
and
dec
js
jbe
sub
cmp
jmp
fildl
jle
add
pop
push
lcall
push
pop
sbb
xor
leave
ljmp
rcll
xchg
pusha
cmp
inc
pop
outsl
pushf
jmp
call
and
add
dec
ss
lods
mov
fs
bound
xor
out
inc
das
mov
mov
std
mov
jge
push
arpl
adc
jmp
leave
sub
xor
cmp
dec
aad
dec
cld
gs
cvtps2pi
pcmpgtw
out
add
pop
push
mov
pop
fbstp
mov
mov
leave
dec
pop
mov
movsw
dec
mov
int3
adc
jo
ret
loopne
ljmp
inc
jb
pop
dec
hlt
orb
push
mov
dec
mov
rcl
outsl
dec
lahf
aam
scas
pop
sub
sub
scas
dec
pusha
sbb
aad
nop
sub
add
gs
xchg
in
rclb
mov
int3
test
push
xchg
daa
lock
in
nop
jne
data16
mov
mov
packuswb
sbb
inc
jne
lods
cmp
inc
dec
lods
ret
shll
fcompl
sbb
xor
movsb
mov
push
add
mov
lahf
inc
mov
push
jb
sub
jecxz
int
leave
push
popf
outsb
in
lock
xchg
or
iret
and
fistps
mov
outsb
push
push
out
fldt
xor
sahf
cs
jmp
jle
testb
inc
push
stos
xlat
cltd
jo
add
outsb
shll
jb
idivb
xlat
loopne
and
fimuls
push
aas
cmova
incb
subb
xchg
push
jne
jg
push
push
mov
or
lret
add
pop
loopne
pop
nop
in
lods
pushf
js
fidivs
and
ljmp
test
xchg
xlat
jle
sbb
mov
add
jns,pn
jae
add
es
ret
dec
sbb
or
xor
push
mov
cltd
cld
pop
and
mov
jns
pop
adc
xor
inc
movsb
insb
push
push
mov
jecxz
add
dec
scas
inc
call
mov
icebp
lret
mov
pop
xor
jp
push
xchg
pop
test
cmp
subl
jb
sti
pop
into
ret
addl
xchg
test
mov
cmp
push
jnp
mov
xchg
push
fbstp
jmp
push
movsl
das
inc
fdivrl
pusha
lahf
ja
lds
loopne
les
aaa
mov
out
iret
std
sbb
dec
out
orl
mov
sub
mov
sarl
aad
mov
icebp
cmp
addr16
pop
shl
or
push
mov
shll
mov
sahf
cld
push
out
int3
mov
fcomps
push
jle
stos
pusha
adc
sub
jecxz
or
mov
sti
sti
dec
xchg
lret
ret
mov
jno
cmp
std
inc
in
das
pop
adcl
stos
ret
push
xor
sub
xor
pop
fcomip
incl
mov
lds
sahf
dec
inc
or
notl
xor
pop
divb
mov
popf
stos
int
sub
lods
fs
roll
es
lock
icebp
lahf
loope
pop
xor
jmp
push
inc
das
dec
cmp
stos
mov
cmp
int3
mov
ret
fimuls
scas
imul
pop
mov
fsubrs
scas
out
lds
push
test
cmp
jge
or
pop
pop
pop
add
das
insl
daa
mov
nop
out
jne
sbb
int
and
outsl
idivl
pop
lret
lods
xor
mov
xor
dec
jo
mov
sarl
adc
and
xor
dec
cmpsl
shl
push
aad
cmpsl
nop
or
lods
mov
xchg
pusha
sub
dec
divb
loopne
cmp
jns
or
mov
aas
stos
testb
fistpl
stos
inc
xchg
jmp
pop
scas
mov
movsb
jecxz
into
rolb
aas
fimull
xlat
pop
xchg
sbb
popf
mov
rcrb
cmp
ljmp
jne
pop
add
orb
dec
fs
clc
ficoml
fbld
ret
inc
sub
and
enter
xchg
mov
fistpll
cmpsb
sbb
adc
sarb
xorb
pop
adc
scas
xor
aaa
fdivp
or
ficomps
pusha
loope
sti
jge
shlb
pop
test
ret
cmp
cmp
sbb
pushf
push
jo
jo
adc
cmpsl
fisubs
inc
cli
sub
call
xchg
sub
add
inc
or
mov
arpl
pop
xlat
or
rcrl
push
cmp
cmpl
rcrb
pop
pushf
sahf
out
and
sbb
outsb
push
andl
xor
jne
je
test
sbb
dec
jne
mov
pop
adc
in
xchg
dec
sub
cmp
loope
retw
cmp
and
clc
sahf
mov
adc
shl
rcrl
ret
sub
jns
aaa
in
push
fdivrs
xor
vphsubwd
jne
int
jle
mov
js
mov
fucom
mov
js
and
mov
rol
pusha
mov
sub
jnp
xor
rcll
sbbb
movsb
ret
cmp
and
lret
in
and
adc
int3
lods
cmp
inc
movsl
inc
mov
icebp
sub
sbb
add
fadds
sbbl
jmp
xchg
fldcw
fidivrs
pop
xchg
repz
testl
loop
dec
inc
adc
jno
dec
int
mov
push
and
popf
shrb
cmp
dec
in
mov
imul
xchg
leave
add
sti
sub
dec
adc
sahf
dec
jle
jns
lcall
adc
fildll
addr16
loope
sahf
mov
and
mov
push
lock
adc
mov
ja
and
xchg
sbb
xchg
add
sldt
lcall
cli
push
sub
or
and
lods
fcompl
sub
test
std
andl
std
sbb
nop
mov
addr16
loope
shll
popa
insl
sahf
xchg
call
out
lcall
cli
imul
xchg
mov
mov
push
enter
aam
fcompl
mov
jl
ficomps
adcb
imul
lret
push
adc
call
in
iret
cli
mov
scas
ja
cli
je
push
outsb
and
ret
std
std
cwtl
stos
pop
pop
loopne
jg
or
xchg
lds
aad
jne
pop
mov
ret
xor
cmc
push
dec
pop
jmp
popa
mov
pop
cmpsl
jnp
frstor
lret
mov
dec
inc
xchg
mov
loope
movsb
mov
insb
sbb
add
popa
femms
xchg
add
orb
icebp
adc
call
inc
mov
xorb
popf
ja
in
push
mov
jbe
dec
jg
sahf
dec
xchg
dec
cmp
aas
adcb
inc
shrl
jg
filds
cmpsb
cmp
inc
cld
out
xchg
xchg
mov
andl
jg
push
pushf
mov
cld
or
imul
movsl
std
test
lods
jno
shll
mov
xlat
imul
test
inc
lea
xchg
cs
aam
mov
or
inc
add
aas
shll
sub
pop
and
inc
sarl
sub
sub
ds
jo
push
adc
int3
mov
out
mov
es
in
push
sub
lret
fwait
xchg
mov
loop
pop
xor
je
xlat
jnp
xchg
push
mov
stos
and
mov
fcoms
cltd
imul
adc
stos
out
lock
scas
icebp
add
or
shr
imul
push
ret
mov
mov
cli
ja
mov
xchg
aad
pusha
daa
fsubrl
movsl
pop
pop
out
pushf
aaa
dec
xchg
cmpsl
test
cmpsl
imul
aas
and
dec
dec
outsl
in
sub
pop
mov
inc
outsb
cmp
pusha
cmpsb
adc
insb
add
push
add
cli
pop
xchg
push
adcb
outsl
or
stos
inc
ja
lret
imul
add
stos
dec
enter
into
jns
dec
inc
jae
gs
mov
push
xchg
mov
or
rclb
ljmp
repz
dec
leave
xchg
and
push
jae
repz
lea
push
je
jo
in
adc
in
icebp
sbb
aaa
enter
mov
sbb
inc
pop
pop
imul
mov
test
sub
stos
adc
jmp
in
xchg
negl
and
pop
outsb
or
stos
add
out
out
adc
mov
subl
cmp
outsb
movsb
cltd
jle
pop
divb
mov
add
jne
mov
ret
call
xchg
or
jle
sub
fisubl
mov
push
clc
xor
adc
pop
sbb
or
mov
repz
push
in
cmp
cmpsl
fcompl
int
push
mov
mov
fstpt
cwtl
cltd
cltd
xor
xchg
hlt
inc
popf
adc
or
pop
fs
call
pusha
int
xor
inc
cltd
fdivs
in
out
addl
inc
cmpsb
sti
mov
loop
xchg
push
mov
repz
popf
lahf
hlt
das
push
outsl
mov
icebp
and
pop
xchg
stc
sub
mov
aaa
pusha
or
dec
mov
sahf
sub
push
ret
sahf
dec
inc
inc
fwait
sbb
jo
jo
push
das
insl
ja
gs
inc
pop
lcall
sbb
ret
mov
adc
sahf
mov
ss
pop
cmpsl
dec
pop
push
cmc
insb
pop
movsb
inc
mov
and
cmp
mov
sbb
cwtl
sti
ljmp
fiaddl
imul
add
cmpsl
jle
sub
sub
push
rcll
test
push
cmp
mov
sbb
aad
sarl
lret
xor
sbb
ja
xchg
pop
insb
inc
mov
insl
jno
jo
cmpsl
rorb
sbb
js
and
mov
jo
inc
and
mov
or
push
dec
aas
inc
aaa
scas
or
scas
movsb
sub
mov
loopne
cwtl
icebp
xorl
lds
sub
jecxz
xor
lea
xchg
mov
xchg
daa
adc
dec
shrl
call
xchg
mov
xor
fcomi
cmp
jg
aaa
or
dec
sub
inc
dec
pop
pop
xor
sbb
mov
adc
lods
adc
sbb
and
jae
hlt
and
and
adc
fwait
in
movsl
test
cmpsl
xchg
daa
lret
pop
inc
je
or
jb
xlat
imull
fwait
mov
inc
pop
adc
mov
pop
xchg
movsl
xchg
jns
dec
dec
loopne
mov
jge
loope
cli
push
push
test
cld
jbe
test
test
idivl
fwait
cmp
scas
in
mov
jle
xchg
sbbb
cmpl
adc
imul
cmp
outsb
jno
shl
pop
icebp
sub
enter
loop
push
test
mov
dec
je
adc
lods
xlat
pop
lock
rcll
mov
mov
std
jo
mov
inc
mov
fs
cmp
mov
xor
jne
pop
push
dec
out
in
xor
in
int3
xchg
add
dec
test
cmpsl
mov
mov
insb
fwait
aaa
fstl
jb
repz
sbb
push
lret
dec
jge
aas
fcom
pop
fisubs
lea
hlt
cltd
insl
outsl
inc
push
les
neg
sbb
inc
pop
dec
dec
push
fisubs
loopne
pushf
pusha
lods
jb
add
push
and
dec
sbb
clc
mov
jb
into
sub
inc
dec
rorl
imul
sbb
xchg
or
test
out
cmpsl
dec
orb
pushf
sbb
cltd
roll
bswap
cmc
add
mov
imul
xchg
addr16
dec
adc
or
inc
xor
imul
sbb
loope
js
fldcw
sbb
jns
loope
pop
and
scas
stos
das
or
dec
loopne
fisttpll
jne
clc
mov
dec
jl
notl
cmp
pop
sub
push
nop
inc
pop
push
bound
jl
adc
jb
lret
jl
dec
nop
cmc
mov
mov
xchg
inc
jae
add
and
pusha
daa
mov
sbb
xchg
int3
mov
fstpl
pusha
test
out
mov
imul
jge
mov
loopne
rolb
rep
loopne
push
jns
dec
push
fnstsw
lock
fadd
cltd
and
scas
clc
icebp
xor
lods
dec
jbe
dec
or
inc
mov
aas
outsb
push
int3
mov
push
mov
cld
addl
ss
cmpl
adc
and
mov
push
addr16
xor
addr16
mov
jmp
xchg
lcall
into
pop
or
and
cwtl
xchg
cmpsb
ljmp
pop
xchg
imul
fwait
xchg
cmp
ljmp
push
or
nop
jg
ss
cmp
out
jo
and
push
and
mov
xchg
bound
jmp
stos
push
push
sub
jecxz
loop
push
shll
sub
call
dec
call
data16
push
lret
fstps
sub
jno
jg
adc
lret
shrb
scas
inc
mov
jg
sbb
test
mov
popa
jp
fs
sub
movsl
lea
rcll
mov
jns
shl
mov
movsl
sub
out
xchg
jne
das
scas
mov
cs
ja
test
das
jge
je
mov
or
imulb
bound
adc
xchg
sub
push
hlt
mov
rol
jmp
mov
faddl
insl
sub
jl
cmp
movsl
lods
lods
mov
or
sub
or
ljmp
sti
flds
inc
pop
notl
fs
mov
xor
add
pop
in
add
nop
cs
call
cmpsb
arpl
cltd
scas
or
sub
mov
imul
pop
or
dec
push
outsb
push
iret
fcmovbe
das
lods
and
subl
pushf
and
adc
xor
insb
add
push
mov
xchg
shll
mov
ss
jecxz
jnp
xor
cmp
add
and
out
push
pusha
repz
mov
xchg
pop
hlt
pop
rorb
pop
jo
lret
or
add
pop
pop
jle
sbbl
loop
adc
sti
xor
jae
adc
out
inc
mov
jecxz
and
roll
and
dec
popa
xchg
push
fnstsw
sub
in
cwtl
je
stos
dec
test
cwtl
pop
cltd
push
cmpsb
mov
mov
sahf
xchg
push
test
pop
nop
mov
push
das
mov
sub
jnp
jae
push
pop
insl
adc
int
jecxz
and
push
int
adc
or
in
jno
mov
pop
popf
icebp
cltd
jnp
lcall
shll
mov
jbe
dec
scas
fs
stos
out
lods
push
aaa
cwtl
dec
pop
or
int
sub
mov
pop
popa
dec
stos
fists
and
fnstsw
add
sbbb
in
movq
push
and
aaa
enter
bound
movl
mov
mov
sbb
xor
push
push
nop
pop
sarl
and
loopne
lret
aas
loop
jmp
mulb
test
pushf
push
leave
mov
xor
out
cltd
mov
add
mov
mov
pusha
or
mov
fwait
je
add
pusha
rcll
ja
xor
mov
and
sti
cmp
ficoms
mov
les
rcrb
inc
test
mov
sub
jno
ret
stos
mov
sbb
mov
fsubr
nop
pop
sbb
mov
mov
pop
fwait
pop
mov
dec
mov
inc
ds
mov
int
push
or
shlb
call
mov
mov
sbb
rclb
test
popf
aad
rclb
outsb
mov
or
ficoml
cwtl
xor
sbb
jb
test
imul
xchg
pop
ljmp
jmp
sbb
mov
or
inc
xchg
jmp
sub
push
cmp
mov
loopne
mov
xlat
pushf
loop
and
pushf
pop
repnz
adc
scas
testl
jbe
push
testb
icebp
into
mov
mov
or
jg
inc
rcr
xchg
push
fstl
jle
xchg
icebp
insb
jo
insb
lea
sbb
insb
jmp
cmp
clc
sbb
or
cmp
mov
nop
xchg
scas
mov
call
cmc
jecxz
data16
out
sub
sub
sbb
mov
xchg
mov
aad
aam
pop
sub
mov
dec
push
push
cltd
lcall
xor
shl
cld
jl
in
ds
fldl
inc
stos
popf
mov
jg
ljmp
inc
sbb
jg
fwait
ds
clc
mov
in
adc
jo
cmc
xchg
add
popa
xchg
jecxz
mov
ds
push
lock
into
jl
push
lret
icebp
cmp
stos
pusha
and
push
std
jl
jmp
jle
das
repnz
aad
imul
and
cmc
lods
movsl
push
cltd
or
out
cmpsb
jbe
stos
mov
stos
mov
push
jb
stos
cmpsl
call
push
mov
xor
pop
mov
std
out
arpl
cmc
scas
xchg
push
arpl
adc
xor
and
int3
push
ja
adc
jo
mov
mov
or
dec
push
mov
shlb
or
fists
lret
add
and
or
sbb
popf
and
jecxz
adc
push
lahf
push
mov
and
or
repz
test
js
and
and
inc
cmp
add
fistpl
pop
ljmp
mov
cmp
movsb
in
sub
icebp
sub
addr16
dec
divb
adcl
pop
xor
jmp
repz
divb
jp
je,pn
dec
add
or
jle
inc
outsl
sub
jae
or
movq
repnz
stos
call
push
jmp
imul
sbbl
addl
sub
push
lret
xor
xchg
ficoml
and
popf
sbb
xchg
jb
les
pop
rclb
stc
mov
xlat
cmpsl
bound
movsl
pop
pop
add
mov
aas
dec
mov
jae
mov
scas
push
pop
pop
push
push
xor
aaa
das
sbb
imul
hlt
daa
mov
sbb
aad
jl
out
sbb
cmp
sub
push
jnp
aam
repz
jb
repnz
jbe
cmp
sbb
lds
mov
lock
jecxz
ljmp
jp
rorb
cltd
jns
pop
loop
popf
mov
and
call
jbe
ret
orl
cli
bound
mov
daa
jne
pusha
addl
les
imul
cmc
xchg
nop
mov
push
add
repz
pop
and
dec
fdivp
mov
inc
add
in
add
fwait
add
cmc
mov
push
inc
shrb
cs
or
adc
add
fs
or
sbb
in
push
leave
adcl
push
out
adc
ds
xor
popf
mov
xor
or
sbb
cmp
fidivrl
cmp
mov
xor
jg
mov
push
clc
adc
ja
rcrl
cmpsl
icebp
inc
add
call
cs
dec
add
mov
clc
out
mov
lret
mov
dec
arpl
mov
pop
jp
pusha
and
rolb
pop
pushf
jno
xor
jp
idivb
mov
testl
sahf
mov
sub
adc
xchg
inc
call
pop
cmp
sbb
add
outsl
incl
test
out
xor
jo
dec
jae
incb
testb
xchg
push
movsb
push
mov
dec
jp
lcall
pop
aad
mov
hlt
pop
inc
inc
xchg
pop
dec
push
sbbb
pop
adc
test
sub
mov
stc
scas
cmpsb
fisttpll
aam
clc
lock
or
cli
dec
clts
icebp
pop
dec
xchg
mov
clc
pop
imul
inc
mov
dec
sbb
jmp
push
push
fistpll
xchg
push
scas
adc
jno
pop
out
or
mov
lods
frstor
mov
aad
or
sub
xchg
push
push
inc
push
add
push
cmp
and
mov
jl
xor
movsl
add
les
dec
pop
adc
mov
insb
mov
mulb
cmp
div
test
or
pop
addb
cli
rcrb
pop
mov
scas
mov
dec
out
imull
inc
gs
jmp
icebp
in
sti
lods
addr16
lods
sub
adc
cmp
xor
sahf
push
mov
jae
inc
mov
sub
es
jbe
and
addr16
daa
ret
andb
pushf
xchg
cld
test
adc
je
pop
das
scas
fnstsw
ljmp
fsubl
or
adc
inc
mov
jl
leave
sahf
imul
test
adc
out
sub
out
sub
arpl
adc
sbb
movsb
push
cs
mov
pop
int
dec
pop
insl
cmp
adc
leave
dec
mov
in
inc
pushf
mov
fcmovu
pop
repz
mov
frstor
jge
mov
sub
loop
fldenv
lahf
imul
jb
inc
testb
repz
pop
out
sbb
mov
sahf
lods
stos
cmc
les
mov
fwait
in
cmp
xor
mov
jo
out
mov
leave
shl
cltd
jp
stos
shl
pop
in
std
ret
jle
ja
inc
xchg
dec
cmpl
xchg
or
rcrl
push
popf
icebp
popaw
mov
push
cmpsb
filds
jge
lock
arpl
cmp
orl
mov
cmp
stos
ret
inc
cli
cmp
adc
add
insb
jg
mov
repnz
pop
or
inc
xlat
rorl
rorb
inc
lret
add
stc
cld
pop
addr16
cmp
xchg
cmp
push
and
mov
or
dec
dec
mov
inc
xor
inc
cmp
adc
mov
popa
in
lahf
mov
aaa
xchg
aam
dec
push
test
sub
jge
in
lcall
aad
leave
jp
call
movsb
or
daa
xchg
push
inc
lods
fisttpl
xor
mov
cli
hlt
lock
sub
mov
mov
xchg
ds
mov
push
mov
jb
scas
in
mov
ror
arpl
lret
gs
ret
adc
nop
cmp
addl
or
xchg
push
in
sbb
in
xchg
andl
aaa
jge
xchg
adc
scas
xor
xor
fldenv
fisubrl
and
sub
mov
push
in
push
popa
test
pop
mov
xor
in
mov
inc
pop
sahf
cld
xlat
push
inc
mov
xchg
fs
out
push
dec
fidivrs
repz
xchg
sbb
in
cmp
xchg
lret
xlat
int3
xor
call
in
or
subl
and
inc
test
add
dec
mov
pop
flds
or
stos
sarl
in
roll
push
into
mov
add
enter
inc
rcll
sub
mov
sbb
mov
insl
or
push
das
aas
hlt
test
jg
scas
cs
aaa
push
xchg
add
call
push
bound
xlat
popa
pop
aad
jae
js
jns
adc
stos
dec
jmp
in
xor
or
in
and
mov
jle
inc
divl
std
imul
xchg
scas
lcall
xchg
call
inc
mov
sahf
rorl
lds
add
int
pop
xor
stos
inc
inc
mov
jle
out
outsb
xor
push
sbb
add
nop
lea
xchg
xor
xchg
push
xchg
jne
cli
int3
fprem1
int
cmc
fwait
in
repnz
lret
sub
movb
pusha
ljmp
aas
loopne
ficomps
fcom
pop
pop
mov
xchg
and
cmpsb
out
xor
enter
push
stc
add
pop
or
inc
cmp
cltd
push
push
inc
inc
out
clc
mov
leave
int
and
mov
mov
cmp
imul
bound
scas
sahf
xlat
in
adc
repz
push
movsl
aad
gs
sbb
pop
in
pop
jecxz
repz
enter
mov
sbb
mov
pop
popf
sub
out
dec
out
outsb
fwait
cltd
subl
pusha
inc
test
or
nop
fisubrs
jo
xor
pop
sbb
cmp
dec
fwait
cltd
jmp
push
sbb
in
lock
push
sub
sub
outsb
in
sub
mov
pop
insb
xchg
add
xchg
icebp
xchg
push
inc
mov
and
movsb
sbb
loopne
or
or
int3
cmpsb
repnz
sub
out
cmc
xlat
mov
xchg
je
lods
xchg
dec
push
mulb
cmpb
aaa
out
xor
mov
arpl
ja
icebp
jge
hlt
cli
mov
fs
enter
jb
icebp
jmp
push
jle
mov
jne
out
pop
sub
call
inc
cmp
ss
ficomps
shll
jbe
push
lds
and
aam
fisubrs
jl
sahf
std
push
out
push
hlt
jno
mov
mov
negl
movsb
fsts
rorb
sbbb
jl
mov
ljmp
xor
movsl
add
push
xchg
lods
inc
pushl
cwtl
or
jp
jae
and
in
xchg
cmp
and
sbb
mov
and
jle
int3
and
imul
jo
out
ret
pushl
mov
mov
insl
add
dec
adc
xchg
sbb
cmpsb
lahf
movsl
xchg
jo
std
int
pop
out
and
test
fisubs
adc
or
lahf
push
pop
and
fmuls
outsl
mul
test
xor
cmc
fnstsw
xor
lret
push
mov
xlat
sub
repnz
lds
or
testl
ja
sbb
gs
and
enter
inc
or
add
sub
repnz
or
jp
stos
sbb
jnp
and
xor
fimull
enter
hlt
mov
push
test
inc
outsb
addr16
inc
fcomp
inc
dec
mov
int3
mov
movsl
mov
and
clc
dec
rcl
xor
push
jns
mov
addb
and
imulb
incb
test
arpl
mov
cmp
sbb
movsb
out
adc
and
add
cmp
pop
fdivs
dec
ss
cmp
les
pop
mov
fcompl
das
inc
into
adc
lret
mov
fstps
dec
and
insb
cmp
xor
std
out
mov
aad
mov
push
mov
aaa
adc
jo
inc
dec
outsb
test
movsl
xor
push
lret
lock
add
or
pop
jl
in
sub
movsb
std
pop
and
mov
mov
mov
adc
xchg
push
imul
xor
add
add
or
mov
rclb
adc
push
out
add
inc
cmc
sub
mov
mov
fdivrs
hlt
ret
lods
data16
imull
popa
xchg
cmp
xchg
aad
jg
lods
mov
sub
and
xchg
adc
xor
cmp
sbb
dec
jle
sub
xchg
mov
or
mov
xlat
cltd
and
xchg
fnstcw
iret
cmp
xorb
pushf
leave
jno
rcll
es
sbb
loope
push
pop
mov
dec
jne
aam
xor
fsubl
movsl
stc
pop
repz
inc
xor
or
xor
into
cmc
pushf
fimuls
faddl
cmp
xor
sub
popa
insl
ljmp
test
popa
imul
sub
subb
lods
gs
pop
inc
jge
lret
or
mov
stos
pop
sbb
add
sbb
jg
pop
mov
cmp
pop
mov
sub
xor
lret
into
push
loop
rcll
jmp
jbe
pop
jb
insb
stc
leave
jno
xchg
pop
sub
sub
jo
cmp
jbe
add
and
xchg
fsts
jo
push
xchg
clc
jmp
or
jg
mov
in
loope
adc
pop
mov
in
sbb
gs
jp
mov
gs
jp
add
fisubrl
std
outsl
into
jne
fisubrl
insb
add
dec
mov
insl
lds
test
xor
mov
adc
shrl
add
push
push
sub
popf
xchg
xchg
jmp
es
shl
scas
sti
insl
sbb
cld
fwait
cmp
xchg
test
shlb
xor
and
push
cmpsl
cld
enter
cmp
bound
outsb
roll
cmp
sub
lea
pop
in
sbb
pushl
lea
jns
shll
xchg
sub
fnstcw
jecxz
cmp
add
repz
enter
jl
pop
mov
std
sub
mull
insb
les
dec
push
mov
mov
mov
iret
fs
filds
sbb
fs
dec
pop
sbb
fldl
jne,pn
dec
lods
mov
jge
and
shl
jmp
xor
ds
bound
mov
mov
out
pop
or
cmp
inc
rorb
and
arpl
int
aaa
lret
jge
sub
jb
pop
jns
aas
and
sahf
pop
rorb
mov
pop
nop
push
clc
bound
adc
sti
mov
mov
adc
mov
mov
leave
mov
inc
push
sti
xchg
stos
mov
out
xor
leave
stos
jecxz
aam
xlat
addb
mov
call
xchg
push
movsb
shlb
cmpsl
scas
fcomps
clc
out
push
sub
shlb
fcomps
add
cltd
aad
sahf
stc
mov
xchg
in
mov
sbb
sahf
mov
and
je
fnstenv
jb
lods
push
js
dec
sbb
clc
adc
cmpsl
pop
ret
sbb
mov
jl
mov
xchg
cmp
sarb
inc
popa
faddl
ss
stos
nop
daa
rdtsc
push
jne
xchg
mov
cwtl
push
call
leave
sub
iret
je
dec
movsb
mov
in
pop
mov
jl
int
rsm
dec
ret
fisubrs
push
xchg
pop
push
shrb
mov
xchg
js
leave
ljmp
sbbb
jecxz
sub
jecxz
pop
or
loopne
mov
fistl
pop
test
sub
xchg
hlt
add
mov
insb
enter
mov
and
pusha
sarl
loope
lds
test
sub
sbb
loope
sbb
nop
aas
pop
fdivrl
push
int3
movsb
cmp
mov
jae
mov
and
lea
mov
or
out
adc
bound
adcl
clc
jge
push
jnp
cld
mov
into
aad
inc
pop
test
or
cmp
jb
jg
movsl
sbb
call
xchg
pushf
sti
inc
repnz
call
sub
fbstp
rolb
add
mov
mov
xchg
lret
loop
jo
iret
adc
lret
mov
fdiv
cmp
push
iret
addl
lods
mov
mov
mov
mov
fstl
rolb
mov
repnz
std
inc
inc
rol
rol
mov
dec
cmp
pop
xchg
xchg
inc
xor
inc
mov
in
je
pusha
jmp
jae
daa
leave
jmp
xchg
push
rolb
mov
in
mov
inc
pop
sbb
cs
inc
xchg
data16
bound
xchg
test
stos
jbe
cmpb
inc
pop
nop
cmpsl
pop
lret
inc
jp
mov
les
cs
and
jno
pop
test
jb
mov
xchg
in
pop
jp
iret
mov
ror
fisubl
pop
fcompl
movsl
sbb
mov
inc
and
fcomi
jb
movsl
mov
lods
dec
xlat
mov
xchg
xchg
mov
negb
je
push
lret
data16
jl
add
sub
pop
cmp
mov
idivl
jbe
xor
movsb
inc
inc
or
mov
clc
cmpsb
push
cli
cmp
cmp
ret
or
sub
ret
cmova
gs
dec
les
bswap
ret
icebp
scas
xchg
andb
and
mov
inc
mov
add
xchg
aas
test
bound
jecxz
pop
popf
enter
xchg
mov
shrl
sti
pop
sbb
xchg
lret
adc
push
push
cmp
data16
xchg
sarl
dec
scas
pop
inc
fnsave
pop
jle
push
jo
jb
xchg
push
or
data16
cmp
out
mov
mov
mov
sbbb
icebp
sbb
lock
pop
mov
add
pop
jge
mov
inc
mov
out
loope
xchg
add
aad
cmp
xor
add
les
scas
imul
ss
sub
or
in
and
leave
mov
scas
ret
push
jnp
outsl
mov
mov
stos
ljmp
jae
pop
lret
out
int
pop
idivb
test
into
sti
outsb
inc
es
shll
jns
gs
sbb
xchg
or
loopne
outsb
dec
imul
sbb
xor
jmp
je
sti
fldenv
xchg
imul
in
out
dec
rorb
mov
dec
cmpb
outsl
rolb
push
xor
popl
mov
xchg
std
mov
in
jmp
xchg
dec
shll
bound
imul
mov
sbb
mov
das
mov
xlat
outsl
jl
push
addr16
fucomip
dec
inc
sbb
cmpsb
mov
dec
ds
jg
lea
clc
or
cli
dec
jecxz
dec
sbb
mov
add
out
mov
add
or
inc
pop
or
pop
sbb
mov
add
push
xor
mov
sub
mov
rol
xchg
rcrl
ret
cs
arpl
icebp
or
fwait
inc
xchg
outsl
sbbb
sahf
mov
sub
pop
push
nop
xorb
dec
adc
mov
popf
xor
in
lock
pushf
cwtl
cli
adc
mov
imul
in
pop
lods
mov
pop
js
sub
pop
mov
xlat
dec
nop
and
adc
scas
add
mov
jns
fdivl
in
jbe
int
dec
icebp
cld
ret
sahf
jbe
mov
lret
push
cpuid
mov
and
fdivs
inc
xor
ss
inc
push
cwtl
add
jno
and
roll
mov
lock
mov
clc
lcall
pushf
das
aas
xor
mov
cmpsb
outsl
aaa
dec
mov
mov
push
loope
aad
push
lret
mov
ss
mov
test
sbbb
ljmp
mov
bound
cli
fnstcw
hlt
mov
call
fldcw
inc
aas
subl
xchg
jns
pushf
test
lcall
cmc
or
adc
andb
and
lods
sbb
lret
jmp
int
cltd
sbb
mov
loop
inc
mov
cmp
sbb
jae
andl
sub
cmp
pop
inc
pop
inc
pop
imul
fldt
mov
jmp
sub
add
push
jmp
repnz
aam
loop
out
mov
sbb
insb
ja
aad
sbb
js
dec
xor
outsl
test
test
xchg
add
pop
hlt
ds
leave
xor
xchg
aad
jp
jno
lock
push
test
mov
bound
jae
sbb
pop
lock
and
das
inc
pushf
dec
pop
dec
out
out
xchg
pop
in
sbb
loop
lds
flds
adc
add
jl
fnsave
add
test
inc
out
shr
aad
out
out
leave
sub
mov
pop
push
stos
mov
stos
rcr
data16
shll
mov
jbe
mov
dec
mov
dec
insl
dec
out
jmp
lcall
dec
and
mov
mov
popf
adc
mov
adc
sub
xchg
inc
jb
nop
sub
cmp
sbbl
sbb
and
jns
aad
or
mov
mov
outsl
pop
and
pusha
and
not
adc
aam
jp
mov
sarl
cmp
fwait
inc
clc
mov
js
mov
pop
inc
sbb
icebp
adc
loopne
hlt
mov
loopne
out
mov
push
js
rorb
adc
mov
push
fstpl
lds
shrb
cld
divl
inc
or
fptan
adc
es
popa
mov
shl
or
and
cmp
popf
dec
cs
xchg
lret
out
je
movswl
cmp
fcmovnbe
mov
test
mov
inc
movsl
add
dec
pushf
testb
test
nop
sbb
lods
adc
dec
pop
loope
aaa
sbb
shr
ss
xor
lods
cmp
les
sbb
jns
and
jo
jne
mov
and
in
xor
stos
cmp
xor
es
xchg
aam
cltd
inc
enter
lret
imul
adc
stos
out
lods
pushf
jp
mov
lcall
loop
mov
jae
daa
lea
mov
sti
mov
loopne
faddl
hlt
cld
rcll
hlt
mov
lods
aas
data16
push
iret
frstor
lea
loope
cmp
cmp
jl
mov
inc
push
bound
and
aas
stos
jnp
pop
test
dec
jb
xor
inc
pop
test
sbb
sar
pop
sub
leave
cmp
and
call
cmpsb
and
call
jge
sar
jecxz
outsb
dec
and
pop
push
mov
int
jle
sub
cmp
inc
ss
mov
adc
mov
xor
sub
lret
scas
rcrl
sub
lahf
sub
imul
dec
mov
fdivrp
addr16
dec
rcrb
mov
dec
mov
dec
cld
mov
xlat
fstpl
sbb
bound
aad
jb
lcall
mov
mov
fisubrs
push
movsl
pusha
in
test
and
pushf
mov
and
push
pop
idivb
stc
sbb
fwait
lcall
or
into
pop
int3
pop
shlb
outsl
mov
push
or
xor
sub
xchg
and
andl
mov
mov
cmc
and
outsl
fwait
lahf
adc
inc
push
mov
and
mov
cmp
leave
sbb
std
and
push
movsb
xchg
jg
sahf
push
movsb
xchg
dec
fbld
stc
mov
outsb
inc
sbbb
push
fxch
dec
push
mov
mov
mov
adc
lods
loop
mov
push
mov
in
push
mov
imul
mov
adc
aas
repz
push
jo
int3
lcall
mov
mov
pop
bound
push
cmpsb
add
lahf
in
call
inc
fwait
add
adc
mov
sub
pop
lret
or
in
sahf
jno
cmp
std
cmc
push
mov
and
mov
cmp
int
cmpsb
in
mov
cwtl
mov
jge
dec
test
in
scas
mov
sub
in
les
sarl
lcall
and
fidivl
clc
push
bound
sbb
mov
outsb
lahf
jae
adc
sarb
sbb
in
movsl
jns
leave
insl
fisubrl
mov
jmp
add
faddl
es
dec
or
inc
adc
dec
daa
cld
add
daa
popa
imul
rolb
push
push
scas
lcall
jge
xchg
stos
shll
mov
xchg
push
jns
mov
cmpsb
mov
das
xor
mov
sbb
sub
jge
nop
cmp
xchg
shrl
in
call
push
gs
aaa
push
push
insb
sub
scas
loop
jg
xlat
push
jbe
cld
mov
xchg
xchg
rcrb
std
lahf
xor
in
fisttps
xchg
mov
push
add
fdivrs
push
leave
or
mov
out
leave
sbb
int3
icebp
pop
xchg
sbb
cli
push
test
out
fisubrs
jno
dec
popa
es
loope
mov
js
sbb
adc
mov
mov
mov
jae
inc
cmp
sbb
jne
adc
cmp
sbb
enter
shlb
aad
dec
cmp
hlt
iret
or
adc
pop
pop
outsl
dec
test
leave
movsb
dec
loopne
add
mov
rolb
jp
outsb
fwait
and
imul
pop
data16
pop
push
dec
lahf
outsb
lcall
ja
xor
nop
mov
popf
cli
imul
xor
into
fidivs
cmp
mov
pop
arpl
jns
sbbl
mov
in
or
jo
mov
int3
lods
pushf
mov
ret
add
enter
push
je
dec
dec
xchg
fsubs
mov
enter
jo
jl
mov
mov
loope
movsl
jae
mov
lods
mov
fwait
incl
es
mov
mov
gs
add
mov
ljmp
dec
jnp
xchg
in
test
rorb
lock
or
mov
jmp
dec
lcall
sbb
mov
out
cmp
shl
je
aam
shlb
push
mov
xchg
jle
pop
mov
loope
mov
lahf
push
push
and
lcall
sub
xchg
in
std
dec
and
xchg
and
sbb
xchg
xchg
adc
das
xor
mov
jns
dec
adc
ret
mov
pop
stc
out
xchg
jg
jns
leave
or
sub
dec
push
roll
imul
mov
mov
fisttps
mov
or
jo
mov
sbbb
mov
lods
cltd
rcrb
mov
sub
out
xchg
fdivl
in
pop
fcompl
out
popa
ds
inc
pop
pop
push
sub
mov
popa
inc
aam
fmuls
xor
xlat
pop
mulb
into
mov
adc
adc
ret
les
mov
mov
popa
lcall
jmp
xchg
push
pushf
ljmp
push
xlat
cmp
fs
imul
jle
int
xlat
cmp
inc
mov
mov
sti
ds
repz
adcb
add
ds
sbb
dec
cmc
cmp
push
sbb
cmp
call
ljmp
sbb
std
fwait
add
mov
xor
mov
pop
pusha
xor
add
jle
ret
sbb
xor
enter
lea
cmp
pop
mov
out
mov
push
mov
pop
adc
ret
scas
loop
adc
xor
dec
scas
xchg
jg
xchg
dec
outsl
test
pop
scas
sti
mov
fwait
aam
fildll
aaa
aas
sbb
and
push
xor
stos
mov
push
call
shll
stos
mov
push
adc
cmp
sub
loopne
mov
xchg
push
out
into
mov
xor
xchg
mov
or
js
add
fs
cmpsl
hlt
arpl
cld
jb
stos
push
inc
xlat
adc
sub
icebp
fucomp
out
jne
cli
dec
adc
clc
cmp
jge
neg
shlb
push
in
outsb
popa
fcomp
movsb
add
xchg
push
push
cmp
and
push
mov
arpl
inc
cmp
xchg
and
fsubp
divb
fstl
adc
stc
lahf
pinsrw
pop
cmp
popf
jl
sbb
pop
push
out
lea
movsl
mov
mov
imul
hlt
add
in
rep
xchg
cltd
cld
lods
sbb
loope
inc
adc
mov
push
ret
jmp
imul
dec
rol
jno
cmpsb
jbe
mov
mov
xor
cli
adc
call
es
sub
test
mov
xchg
mov
pop
out
xchg
cli
xchg
popa
and
jmp
inc
lret
test
sbb
lahf
and
into
mov
jbe
stos
jge
or
incl
stc
mov
inc
fwait
adc
imul
aaa
cmp
xchg
dec
xchg
call
lahf
push
scas
sub
fmull
cli
loop
inc
lahf
rorl
cmp
pop
test
and
lcall
ja
mov
push
mov
mov
push
mov
inc
lods
lahf
in
adc
cmp
adc
fldz
and
sub
mov
jno
lods
ret
enter
push
push
aas
jns
push
mov
lds
xchg
pop
mov
fildl
or
inc
mov
neg
orb
push
ret
push
lahf
test
push
inc
inc
mov
push
lret
mov
test
pop
jnp
sbb
and
push
aam
pop
push
repnz
loope
pop
imul
lcall
inc
adc
or
popa
lret
dec
mov
pop
push
mov
add
xor
push
dec
out
daa
mov
dec
ret
popl
push
or
mov
cwtl
mov
test
add
loopne
fidivs
hlt
jmp
cmc
adc
push
xlat
xor
push
pop
xchg
add
movsb
xor
mov
sub
lock
adcb
xor
outsl
mov
lea
ficomps
and
cmp
outsl
inc
pop
jnp
push
leave
cmp
mov
add
mov
lahf
and
cmp
sub
iret
mov
in
out
pop
dec
mov
stc
cwtl
fsubl
sti
xor
pop
xchg
dec
popl
jecxz
cmp
sub
leave
cmp
pop
aas
xchg
mov
and
das
decb
sub
loope
iret
sbb
cld
rol
sub
jnp
mov
sbb
je
xchg
icebp
repz
and
pop
or
wrmsr
and
out
and
add
or
hlt
cld
mov
dec
data16
lret
and
xchg
jle
fdivl
mov
xchg
icebp
test
inc
cmpb
mov
jge
cld
leave
jge
repz
jg
insb
or
es
and
mov
add
inc
adc
mov
mov
notb
sbb
mov
mov
xor
popa
fucomip
lret
fs
pop
inc
lods
push
mov
fsubrl
dec
vpmadcsswd
cmpsl
jnp
movsl
outsl
cmc
imul
arpl
aaa
das
mov
and
sub
or
in
xlat
sub
cs
xchg
mov
push
push
or
or
fbld
lea
sub
mov
mov
mov
push
and
stos
data16
jl
xchg
cmp
xchg
movsb
pop
jo
dec
pop
xrelease
dec
mov
pop
outsl
fwait
inc
movsl
test
adc
push
pop
add
pop
mov
lds
push
fistps
and
out
loopne
call
jecxz
fsts
pop
loopne
add
mov
dec
stc
add
inc
push
rcrl
ret
jle
mov
aas
jmp
lods
sbb
xchg
in
std
push
mov
push
add
push
or
xchg
in
cmp
addr16
push
flds
mov
arpl
sbb
sub
scas
dec
popa
pop
nop
mov
aaa
js
push
xor
jnp
mov
lret
push
mov
test
jge
sbb
dec
sub
inc
repnz
and
loop
aam
dec
cltd
fwait
push
and
xchg
xchg
std
sti
mov
xchg
and
inc
xchg
sub
mov
mov
sub
mov
jg
push
scas
sbb
int3
aam
jb
mov
jmp
jle
cmc
aas
add
jb
ret
stos
pop
enter
leave
sti
xor
jge
xchg
int
cmp
jns
fndisi(8087
test
jnp
sub
sbbb
jecxz
push
sub
das
sbb
xchg
mov
scas
cs
xchg
dec
xor
jbe
and
and
jb
test
mov
xor
xchg
or
or
lods
mov
jns
add
adc
adc
inc
pop
xor
dec
mov
push
xor
sbb
or
les
mov
out
push
jno
adc
out
or
loopne
fsubp
pop
cld
jae
sbb
mov
xchg
pop
jge
inc
adc
lahf
cmp
push
or
es
test
push
insb
nop
mov
ds
dec
in
pushf
cmp
test
cmpsb
stc
dec
ret
mov
test
mov
jns
xchg
out
add
sbb
and
iret
inc
pop
inc
test
push
inc
sbb
pop
cld
ds
xor
mov
in
cs
nop
and
dec
ret
lahf
jae
sbb
push
inc
adc
ret
adc
mov
jg
xor
pop
lcall
or
daa
push
cwtl
and
idivl
xor
or
movsl
or
in
jns
ljmp
addb
dec
insl
pop
fxtract
mov
or
sub
testl
pop
push
push
pop
jle
pop
popa
lea
divb
sub
pop
or
mov
lods
shlb
push
mov
mov
ret
jo
je
test
ja
mov
mov
and
fdiv
jbe,pn
jae
jb
aad
push
mov
sub
insb
add
scas
lcall
mov
jmp
stc
pop
or
out
sbb
adc
stc
pushf
mov
daa
sub
shl
aaa
fsubrs
test
xchg
dec
fsubs
jo
or
int
add
push
mov
pop
mov
mov
or
loop
jne
rorb
push
pop
xchg
pushf
xor
mov
push
cld
scas
jge
iret
sub
pop
adc
inc
in
jb
in
xchg
xor
cli
fsub
dec
push
mov
icebp
mov
nop
negb
cmp
dec
lds
enter
imul
or
jnp
adc
sub
fucom
sahf
andb
dec
cmp
cmp
jae
enter
pop
test
mov
push
sub
ret
bound
imul
scas
jae
pushf
inc
jb
cmp
or
sub
shrl
scas
cmp
lds
mov
fwait
mov
or
ret
or
add
or
fdivrs
xchg
shll
sub
out
push
loopne
sbbl
pop
push
add
out
rcrb
jg
push
test
push
loope
push
sbb
adc
or
in
pop
nop
inc
in
xor
sub
lods
data16
aaa
insb
jo
outsb
imul
fcmove
pop
push
xor
inc
inc
mov
mov
mull
push
stos
int3
das
mov
nop
insb
jne
ret
jg
rcrl
shrb
lock
insl
ficoms
ret
inc
mov
dec
xchg
dec
jae
xchg
aaa
stos
jne
lea
test
cmpsb
cmp
movsl
stc
mov
popf
add
xlat
jecxz
fdivl
es
xchg
mov
mov
hlt
add
sbb
dec
jmp
sbb
fwait
cmpsl
rorb
and
fcoml
xor
xlat
mov
or
out
jle
imul
dec
scas
leave
andl
sar
jo
sub
fwait
or
test
lods
and
mov
mov
cltd
adc
movsl
push
xchg
mov
stos
cld
scas
movb
stos
jmp
leave
and
lods
sub
lret
cmpsb
mov
xor
jo
cmp
xchg
mov
test
pop
fsubrp
and
cmp
mov
repnz
dec
fidivrl
fs
test
sub
pop
dec
push
inc
je
cmp
popa
mov
leave
cmpsb
mov
cmp
mov
aas
xchg
clc
fmulp
sbb
lock
jae
inc
add
mov
outsl
bound
mov
pop
mov
test
aam
sbb
mov
mov
and
sub
cmp
sbb
jae
sub
std
dec
mov
mov
mov
movl
pinsrw
mov
pop
popa
cltd
test
loop
push
xor
aad
dec
mov
cmp
arpl
je
sub
lods
add
mov
sbb
fnstsw
and
rcrl
bound
mov
add
rclb
cmp
les
int
sbb
dec
cmp
inc
scas
lods
popl
cmpsb
push
mov
div
dec
jl
stos
xor
jmp
data16
in
test
push
mov
aam
mov
mov
adc
dec
inc
dec
mov
and
inc
clc
loope
icebp
pop
repz
out
sub
xchg
jb
and
loopne,pn
adc
nop
inc
popf
ret
jle
pcmpeqd
cmp
sub
cmp
sub
adc
ds
jno
mov
adc
pop
sbb
sbb
cmpsl
and
push
fstpt
arpl
inc
fnstsw
cmpsb
mov
dec
add
sub
movsb
cmpsl
xchg
mov
daa
int3
lcall
daa
stc
push
dec
outsl
and
cmp
daa
sub
fisubrs
cmp
mov
ficoms
pop
mov
sbb
sahf
imul
int
pop
addb
scas
or
adc
test
and
adc
pop
jb
and
push
adc
push
mov
add
lcall
mov
cltd
mov
pop
fcmovbe
je
icebp
lahf
pop
rclb
clc
loopne
sbb
mov
daa
xchg
lods
insl
shll
pop
clc
jno
mov
test
jmp
int
or
or
sub
movsl
push
shrl
mov
fxch
cmp
lea
mov
lret
les
sbb
cmp
dec
adc
and
cmp
and
mov
add
or
and
test
dec
pop
enter
movsb
lea
mov
frstor
mov
iret
mov
cltd
sub
xchg
das
and
iret
or
mov
or
lock
sbb
ja
gs
lods
test
ljmp
inc
adc
jmp
or
mov
loope
sti
jmp
xchg
xorb
out
pop
sub
testb
jmp
bound
shll
imul
jae
std
jae
out
cmpsb
or
ret
or
mov
test
sbb
jl
mov
in
push
in
lret
xchg
pop
imul
and
mov
test
pushf
dec
call
cmc
fdiv
lahf
jnp
mov
cli
xchg
arpl
iret
lods
out
sub
xchg
sbb
fucomip
xor
push
push
insl
sahf
cs
fildll
ret
and
stos
mov
jbe
push
mov
movb
pop
dec
repz
mov
cmp
add
out
sbb
fmull
push
xor
xchg
jno
aad
popf
lret
xor
setle
rcl
push
jae
out
ss
mov
imul
mov
ja
fimuls
nop
sub
in
testl
aam
rcr
mov
lret
mov
adc
aad
lret
mov
xor
and
or
iret
pop
inc
out
xchg
sub
jns
jno
mov
mov
and
pusha
adc
lock
arpl
mov
arpl
imulb
fidivrl
or
cmp
push
repz
mov
sub
cwtl
les
jp
enter
adcb
push
adc
jnp
int3
sub
or
lret
adc
inc
sub
lods
pushf
add
and
xchg
adc
push
aaa
push
push
fwait
out
xchg
aaa
sbb
in
sub
dec
sbbb
cltd
or
push
or
jb
mov
mov
adc
mov
movsl
into
repz
push
jmp
pop
and
inc
testb
mov
mov
and
jne
test
std
xchg
and
add
cmp
dec
fnstsw
lods
sub
add
jmp
sub
and
sahf
in
and
jne
pop
pop
sahf
lea
push
pop
call
cmp
dec
lret
loopne
push
stos
pop
push
sbb
cmpsb
push
pop
pop
addr16
pop
or
jb
mov
xchg
outsl
jno
sub
dec
fidivrl
cwtl
lcall
fs
loopne
loope
inc
adc
mov
dec
add
pop
les
les
pushf
xor
jo
fwait
sbb
cmc
push
sti
fbld
imul
cmpsb
imul
aaa
mov
fwait
cmp
repnz
aam
out
test
push
pop
xchg
andl
mov
jb
int3
or
push
sbb
das
push
jno
les
incl
enter
stc
pop
clc
mov
jge
xchg
dec
das
push
ficoml
pop
mov
enter
adc
mov
outsb
ja
mov
out
inc
xchg
lds
popf
imul
jne
outsl
pop
jo
aaa
roll
lret
loope
and
xor
and
and
push
ljmp
cwtl
mov
jle
push
jg
fimull
iret
mov
or
stos
in
adc
popa
out
mov
jo
push
jo
add
dec
lds
std
xor
in
test
cmc
fstl
daa
fcoml
pop
test
xor
bound
sbb
jbe
and
scas
imul
enter
add
in
xchg
and
lods
repnz
pop
push
sub
inc
inc
jo
adc
adc
fs
sub
sub
cmpsb
aaa
es
js
jp
xchg
xchg
mov
jg
sbbl
add
out
stc
and
sahf
icebp
ss
fstpt
insb
push
pop
loopne
jmp
ficompl
mov
pop
std
pop
push
lret
sti
pop
ljmp
dec
push
pop
mov
sub
mov
aas
shrl
pop
mov
mov
sub
cmp
shlb
and
mov
inc
cmp
inc
mov
sub
inc
repnz
xchg
sbb
inc
mov
lahf
cli
mov
push
rcl
pop
pop
movsl
cmp
cmp
sub
xor
loope
inc
rclb
cmp
aam
js
fdivrs
mov
andb
shlb
push
fnstenv
inc
adc
and
int3
mov
add
add
mov
mov
test
enter
es
scas
imul
mov
mov
jnp
mov
mov
jge
fwait
divb
shl
and
cmp
lcall
sbb
mov
outsl
xchg
dec
std
jbe
adc
pop
sub
fsubrl
andl
or
sbb
cld
arpl
je
fsubrl
fstpl
fidivrs
xchg
lock
addb
push
mov
cwtl
ljmp
call
mov
stos
xchg
cmp
mov
cld
xor
data16
mov
pop
fdivrl
or
test
fldenv
mov
ret
cmp
and
loope
or
out
add
aaa
test
and
fwait
mov
mov
mov
and
jne
pop
xchg
and
test
and
stos
xchg
pop
test
pop
imull
mov
jg
mov
sub
in
xchg
fidivl
cmp
push
jb
aam
out
jecxz
in
pop
ret
enter
xor
les
mov
push
into
lcall
mov
jge
je
insl
xor
bound
jp
sub
aaa
pop
cwtl
jns
fmuls
mov
pop
push
test
not
sti
and
sarl
fistpl
adc
push
inc
mov
js
push
mov
dec
pop
shl
aad
adc
iret
push
rcrl
xchg
mov
enter
mov
inc
mov
cwtl
test
lods
mov
xchg
lahf
jne
jb
cmp
loop
andl
mov
inc
shlb
dec
adc
jmp
popfw
clc
and
ret
pop
call
sbb
lods
add
cld
adc
je
loopne
mov
sti
jmp
ljmp
shrb
les
inc
int3
repz
gs
lods
cld
leave
out
or
cli
insb
jl
mov
dec
sbb
mov
xchg
and
fildl
cli
dec
or
fs
popf
ror
lret
inc
lods
iret
and
inc
cli
push
or
popa
fwait
rclb
ss
mov
lret
adc
loope
xchg
out
rorb
daa
xchg
jne
adc
cmp
leave
push
cld
sbb
pop
sub
and
scas
loop
jno
jmp
enter
mov
lahf
add
lds
call
frstor
int
cmp
cs
dec
sub
adc
jno
sub
lret
pop
dec
jb
dec
data16
mov
mov
test
daa
inc
out
lods
inc
ss
jmp
clc
jo
js
lahf
jecxz
fstps
xor
aam
push
dec
std
or
fisubl
mov
popf
punpckhdq
dec
loop
cmp
jo
xchg
cwtl
mov
aam
mov
lds
shr
jbe
push
jae
inc
rcrl
lds
je
fisubs
int3
out
add
sub
dec
mov
dec
dec
adc
pop
out
bound
pop
loop
ss
stos
sbb
cmp
inc
xor
mov
jp,pt
mov
pop
xchg
or
aad
sub
out
add
das
in
inc
mov
loopne
loopne
and
ret
push
loop
push
clc
aaa
cltd
push
mov
pusha
mov
adc
jmp
in
movsl
inc
add
repnz
das
or
mov
push
cmpsl
xor
push
popa
sbb
dec
and
xchg
je
push
dec
movsb
lcall
loop
and
stos
push
xchg
bound
dec
sub
push
inc
jmp
lret
ret
scas
lcall
lea
cld
insl
xor
sub
push
mov
adc
into
shrb
mov
jns
or
arpl
fisttps
adc
sub
test
xchg
mov
inc
gs
js
cmpsb
xor
cmp
push
sub
push
arpl
roll
je
adc
pushf
shrb
pop
dec
mov
leave
loope
cmp
push
jnp
push
pop
cmp
inc
mov
mov
addl
sbb
test
push
stc
rorl
add
ret
sti
lds
daa
jecxz
fimull
pushf
pop
loopne
xchg
sub
fsubrp
jmp
sbb
jbe
fs
mov
xchg
scas
scas
hlt
adc
jbe
jne
cmp
mov
inc
push
push
pusha
testb
dec
es
adc
pop
popa
or
std
faddl
ret
dec
or
and
iret
pop
pop
xlat
out
dec
xorb
dec
mov
jp
sarl
bound
xchg
jne
jbe
pop
out
ficoms
add
push
xor
dec
push
xchg
fisubs
and
add
notl
or
adc
dec
xor
pop
sbb
add
jno
lock
add
add
jns
sub
pop
push
adc
mov
rorl
push
push
sub
inc
mov
sti
push
pop
ljmp
sub
dec
mov
sub
mov
int
add
push
cs
mov
mov
fs
push
mov
or
clc
subb
pop
adc
pop
jl
mov
shlb
sbb
popf
fldt
mov
subb
roll
rol
dec
xor
js
popf
adc
and
mov
ret
mov
sub
xchg
je
mov
je
fwait
mov
fisttpl
sbb
cli
add
xor
iret
pop
leave
dec
mov
jae
sbb
jae
mov
xchg
and
popf
xchg
add
ss
cmp
lods
dec
ret
repnz
cwtl
arpl
mov
pop
cmp
std
fidivs
adc
or
popa
mov
and
ret
clc
lods
jnp
inc
jbe
mov
inc
adc
dec
cmc
in
jnp
lcall
movd
mov
loopne
inc
mov
mov
xor
push
out
pop
sub
xchg
xchg
lock
stc
pop
out
adc
aad
shlb
repz
lds
jbe
shlb
or
rolb
xchg
lock
dec
pop
lahf
xor
test
dec
xchg
lock
push
aas
daa
cmp
xchg
jne
lods
out
movsl
or
sub
sub
loopne
inc
loop
rcl
clc
sub
aas
ds
dec
std
dec
outsb
into
push
mov
mov
xor
adcb
dec
cmp
in
dec
push
test
out
movsl
ds
icebp
shl
push
cmp
cmp
lcall
mov
jge
pop
scas
cmc
jg
lret
fwait
mov
dec
push
std
aaa
inc
clc
add
sbb
int3
push
addr16
cmpsl
aad
repz
cli
sub
test
mov
pop
fwait
aas
out
addl
vsubpd
mov
sub
fdivr
int3
or
andb
int
add
mov
stos
iret
or
xchg
inc
movsl
movsl
add
aas
movsl
xor
mov
repnz
cmc
jl
fwait
pushf
or
cs
fcmovu
inc
stc
orb
mov
push
imul
bound
mov
shlb
adc
dec
xor
es
cmp
bound
rclb
mov
xor
cmp
inc
outsb
adc
fldcw
adc
push
mov
push
jae
mov
lcall
roll
cmp
cmp
pop
imul
and
xor
in
adc
pop
xchg
mov
sahf
adc
mov
dec
add
jns
cmp
push
fsubs
mov
jmp
or
xor
push
mov
fimull
pop
push
lods
dec
push
sub
jmp
xor
jb
frstor
fsubr
mov
or
fsubp
cmp
lods
repnz
jns
sarb
adcb
or
pop
jne
jb
jo
inc
test
sbb
mov
mov
adc
js
popf
cmp
or
call
addr16
fistl
insl
inc
mov
push
add
cmp
fs
shll
lds
xor
push
pushf
imulb
push
cmc
hlt
jge
jp
fmul
iret
js
xchg
test
jg
cmpl
dec
jb
in
sub
push
lret
clc
daa
sub
jb
sbb
movsl
dec
push
mov
push
fistl
fisubrs
clc
dec
and
in
or
lcall
or
iret
mov
in
xchg
hlt
scas
dec
stos
or
push
fisttps
fs
mov
pushf
pop
mov
in
arpl
push
testl
sti
mov
sub
dec
mov
sub
push
pushf
xchg
movsb
or
nopl
adc
xchg
bound
pop
scas
sbb
adc
stos
lock
adc
sbb
push
pop
data16
mov
xchg
and
cwtl
sar
popl
mov
dec
arpl
imulb
ljmp
xchg
mov
sbb
aad
into
je
iret
pop
mov
in
dec
sarb
sub
sbb
inc
xorl
int3
jle
frstor
cld
inc
pop
cmc
int3
jecxz
loope
je
cmp
sub
and
or
push
xor
mov
andl
out
sub
outsl
add
xbegin
cmc
inc
jnp
imul
enter
mov
and
xor
cmpsb
jae
push
je
or
push
out
dec
mov
mov
ljmp
pushf
xchg
mov
jo
add
inc
addr16
add
fdivr
repz
dec
jle
mov
ss
out
popa
je
subl
mov
xor
sub
jno
inc
cmc
sub
and
stos
in
cltd
xor
mov
movsb
das
add
mov
adc
lock
jns
add
popf
push
js
add
idivl
xchg
mov
cmpsb
or
imul
insl
mov
je
xor
lret
bound
icebp
cltd
jb
in
mov
test
pop
imul
mov
pop
out
mov
ds
add
add
mov
sbb
inc
cmpsl
xor
adc
ret
loopne
fstl
icebp
xchg
js
push
cmpsb
pop
dec
ja
sbb
cmp
icebp
fwait
mull
out
js
sub
inc
hlt
add
cmp
ret
push
daa
xor
mov
lcall
mov
jo
adc
test
nop
or
cmc
jl
push
pop
aad
jmp
imul
cmp
cs
mov
fiaddl
loop
rcl
enter
iret
jne
push
mov
pusha
nop
and
call
out
mov
cmpsb
pop
cmp
imul
xchg
push
cmp
jne
clc
shl
bound
sub
scas
push
lods
out
push
add
testl
rolb
push
cmp
mov
js
cltd
ror
inc
in
mov
jb
insb
leave
xchg
movsb
icebp
dec
mov
lret
cltd
mov
pusha
test
push
jl
movsb
mov
sbb
les
cltd
js
loopne
cmp
stos
iret
cli
jbe
dec
xlat
cmpsl
push
in
mov
jo
stos
sbb
mov
fucomip
sub
ds
add
jb
das
arpl
into
adc
xchg
nop
pop
pop
sti
cwtl
in
xchg
mov
out
jno
std
cmpsl
js
push
lock
inc
jp
inc
nop
jae
bound
add
repnz
push
pop
pusha
cwtl
and
loop
imul
insl
lret
mov
xchg
hlt
xchg
cmpsl
je
dec
xor
ljmp
aad
gs
inc
pop
push
adc
repnz
imul
add
loope
adc
mov
mov
mov
in
inc
or
xor
stc
pusha
mov
daa
iret
xchg
fwait
or
mov
fstpt
rcrb
mov
mov
fistps
lock
addr16
push
sbb
mov
or
mov
xor
sub
xor
sbb
shlb
push
scas
pop
in
out
outsl
sbb
movsl
test
push
lds
es
jbe
pusha
ds
or
inc
rorl
lret
mov
jmp
xchg
das
popf
pop
mov
imul
inc
dec
jae
mov
mov
lcall
cmp
sub
dec
xchg
mov
mov
lock
dec
add
ja
mov
out
jl
mov
jns
fsubrs
iret
mov
mov
mov
mov
xchg
mov
xchg
pop
push
movsl
insb
cmp
inc
gs
stos
push
lds
in
jecxz
inc
cltd
mov
pop
dec
lea
push
inc
jl
mov
cli
dec
xor
push
addl
cmp
mov
shrl
mov
movsl
lds
test
jb
pop
push
push
movsb
jae
mov
out
outsl
cltd
jp
and
adc
dec
mov
pushl
test
cli
lahf
ss
pop
mov
clc
mov
icebp
inc
rol
test
pop
inc
dec
pop
jp
push
fldenv
fnstenv
fmull
sub
aas
dec
incl
loopne
add
aad
je
push
push
notb
and
adc
push
in
test
stos
adc
mov
inc
mov
clc
push
out
mov
jge
lahf
or
les
mov
lods
mov
mov
sbbb
out
push
pop
mov
notl
xchg
and
push
inc
sbb
clc
testb
dec
sub
mov
rorl
or
neg
mov
cmp
lods
sbb
xchg
mov
push
pop
push
fsubs
mov
xchg
subb
scas
sub
cld
lock
mov
int3
js
xchg
sub
sub
stos
push
push
lea
lret
js
decl
je
sahf
jbe
cmp
push
mov
inc
in
dec
mov
push
mov
push
popa
mov
pusha
test
or
ljmp
cmpsl
rorl
lods
and
in
shlb
ja
xchg
scas
int3
fimull
scas
lock
rcll
inc
imull
and
cmp
or
outsb
cwtl
xor
sub
daa
push
int
repz
xchg
xor
pop
out
mov
xor
pop
jmp
mov
jge
adc
adcl
inc
test
push
fnstsw
std
sbb
fwait
lock
jnp
or
popa
aam
mov
xchg
imul
cmc
inc
dec
xchg
adc
fldenv
je
jp,pt
and
das
ss
cmpsb
iret
sub
test
mov
jns
insb
iret
adc
test
mov
shlb
int
mov
cmp
in
cmpsl
insb
add
adc
cld
xor
ffree
out
add
mov
add
dec
xchg
xor
cmp
sub
test
xor
mov
inc
fwait
scas
test
test
lahf
fistpl
sbb
add
sbb
out
mov
mov
cmp
call
lods
scas
rorl
mov
mov
sbb
xchg
ret
jae
andw
cmp
dec
in
sbb
movups
mov
int
cwtl
popa
jecxz
mov
sub
xchg
in
pop
inc
lcallw
sub
inc
fcmovnbe
cmp
rcll
xor
je
fistl
mov
pop
scas
test
jno
xchg
cmp
dec
push
sub
call
pop
out
insl
dec
xor
mov
fsubrl
mov
in
scas
adc
sbb
mov
or
movsb
push
push
cli
out
std
sbb
out
lods
xor
in
push
sbb
fsts
cld
and
mov
add
fldl
ja
mov
jecxz
xor
lock
adc
mov
adc
and
jo
lret
xchg
push
fwait
pop
lods
jmp
popf
roll
ljmp
mov
test
add
fsubs
push
aad
xchg
add
stos
xor
jbe
sub
pop
push
dec
enter
aad
mov
dec
cld
pop
push
add
ja
push
call
fisttpl
sub
dec
inc
push
in
cmc
lret
rorw
fiaddl
mov
and
adc
dec
xchg
push
dec
es
out
fstpt
push
lcall
in
sub
mov
cli
sub
xchg
mov
jb
pop
scas
outsb
and
fsubrs
mov
mov
aad
shl
mov
popf
outsb
and
test
push
ja
movsl
sbb
sub
pop
mov
add
pop
push
ds
jecxz
ret
cmpsb
or
pop
mov
and
push
jmp
and
sti
and
add
jecxz
sbb
fisttpl
popf
mov
adc
dec
aas
lahf
adc
jns
dec
push
or
sub
mov
aas
jg
jl
jne
adc
mov
xlat
in
scas
cld
int
xor
gs
xorl
les
mov
outsl
push
xchg
jmp
jbe
stos
insl
jg
pop
fldenv
and
or
xor
test
adc
add
and
sbb
mov
xlat
idivb
mov
fstpl
stos
adc
scas
jecxz
sub
push
lret
sub
or
pop
mov
add
fnstcw
clc
imul
or
adc
cmc
cmp
rcrl
dec
mov
sbb
add
stc
adc
and
cmp
add
add
scas
mov
in
out
cmp
sbb
lea
cwtl
lock
inc
dec
insb
sbb
shr
inc
test
cmc
test
mov
repnz
push
inc
dec
pop
nop
sbb
insl
add
mov
lret
in
pop
inc
pop
add
andl
int3
sub
cmpsb
roll
cltd
pop
cmpsl
insl
out
scas
cs
adc
fstps
mov
mov
cmpsb
mov
push
ror
inc
rcr
pusha
stos
adc
xchg
sub
mov
aam
dec
rorl
xchg
cmpsl
cmc
pop
jo
mov
mov
push
jae
scas
popa
push
push
insl
adc
pop
adc
ror
daa
jbe
mov
in
jns
mov
or
dec
pushf
add
sub
ja
inc
push
or
subl
jge
or
inc
sbb
pop
sub
shl
mov
loop
aaa
mov
pop
mov
out
sar
mov
push
cmp
jo
mov
and
jle
out
scas
and
xor
pushf
loope
cli
int
fwait
mov
cmpsl
push
push
jecxz
push
push
xchg
movsl
ljmp
cmpsl
stos
push
or
pop
pusha
into
sub
cmp
test
xor
into
pop
dec
jecxz
or
leave
fsubr
mov
pop
push
or
inc
jo
out
mov
fwait
adc
sub
and
shll
sti
push
and
insl
or
jmp
cmp
inc
mov
pusha
xchg
sbb
adc
cs
popl
pushl
cmp
outsb
jp
dec
frstor
flds
adc
jmp
cmp
dec
push
jb
nop
jecxz
xchg
out
mov
sarl
inc
or
push
mov
adc
je
popa
adc
int
mov
fimull
and
add
sub
push
mov
inc
mov
cmp
xchg
pop
mov
sarb
cli
add
mov
mov
hlt
and
and
sub
mov
jecxz
nop
fwait
cs
clc
inc
scas
mov
jne
xchg
push
stos
pause
addr16
mov
fldl
adc
aas
xlat
inc
sub
out
cmc
add
aas
jg
xchg
rcl
push
cltd
popa
cmc
jb
lods
xlat
cld
sbb
inc
divl
imul
pushl
je
mov
xchg
mov
jb
add
nop
lock
filds
dec
loope
push
mov
movsb
daa
mulb
jecxz
inc
lcall
cmpsl
or
in
mov
cmp
cltd
movsl
sti
lcall
cmp
call
out
ret
xor
sub
daa
repz
sbb
jnp
int
jecxz
or
jne
jmp
popl
insb
shll
incl
mov
das
sahf
cmpsb
insb
mov
rorb
dec
int3
jns
fdivrl
pop
cmp
popa
test
inc
jne
enter
mov
jb
dec
jno
xchg
adc
pop
push
inc
sbb
push
sbb
ret
ror
xor
cmpsb
mov
and
fsubrl
jle
loopnew
add
popf
popf
xchg
aaa
inc
out
inc
lret
stos
pop
inc
jg
dec
lock
xchg
jle
mov
push
jnp
loopne
sub
call
xchg
sbb
in
sarb
dec
push
sub
lcall
repz
loope
add
mov
movsb
xchg
xchg
leave
es
fisttps
les
sub
pop
push
out
and
cmp
cwtl
dec
ficomps
mov
mov
int3
jae
rcll
dec
jle
out
leave
loopne
or
push
mov
test
mov
push
push
or
and
test
or
sbb
lea
or
imul
jbe
movsb
sti
orb
mov
push
mov
outsb
loope
ss
and
mov
pop
ss
fcom
cmp
fisttpl
xor
mov
sti
ret
data16
ret
int3
cld
sbbb
mov
mov
cmc
es
mov
arpl
mov
test
dec
fs
dec
stos
rclb
jnp
jl
mov
adc
push
sbb
jae
bound
or
imulb
lods
mov
jne
and
push
enter
mov
adc
cmp
cld
test
aaa
cltd
cmp
in
cmp
icebp
idivl
cli
or
rorl
repz
pop
adcl
shrb
divb
mov
daa
mov
inc
insb
inc
in
stos
add
add
sub
cmc
pop
xor
pop
inc
loop,pn
and
push
xchg
adc
jnp
mov
push
test
jne
fists
push
mov
movsb
cmp
inc
scas
dec
fsubs
jae
jb
rcll
loopne
jns
cmp
add
testl
stos
mov
push
adc
mov
sub
jnp
dec
fldl
push
stos
and
fbstp
lcall
jp
and
nop
pop
xchg
push
sbb
pop
fwait
sbb
dec
outsl
jmp
ret
test
fbld
mov
imul
outsl
dec
mov
hlt
sbb
out
sbb
in
mov
loopne
aam
test
cmc
lods
pop
xchg
icebp
mulb
shrl
popa
dec
push
xchg
aam
and
dec
sbb
movsb
mov
int3
leave
jo
sub
pop
inc
add
arpl
cli
loop
adc
push
sub
cwtl
adc
sub
mov
dec
imul
lret
popa
mov
or
insl
pop
pushf
push
inc
outsl
xlat
outsb
clc
shll
pop
pop
insb
insb
imul
xlat
lahf
push
fstpt
inc
cmc
inc
mov
out
sbb
int3
test
push
ss
out
and
mov
xor
into
or
pusha
sub
cmp
inc
les
aas
inc
xor
push
mov
adc
int
jmp
and
dec
bnd
or
hlt
ret
icebp
adc
xchg
xchg
out
sti
push
inc
fmuls
pop
mov
ss
sahf
mov
int
jae
xor
dec
js
inc
rcl
sbb
cmpsb
mov
mov
out
push
js
les
mov
stos
test
pushl
ds
pop
xorb
mov
jb
movsl
or
jno
mov
rcr
insl
aad
push
cmp
insb
dec
mov
divl
cmc
lds
jp
dec
lret
or
push
sbb
xor
sbb
add
divb
push
jb
dec
xchg
xchg
sahf
shl
lea
dec
adc
xor
loopne
xchg
call
mov
sub
push
inc
jo
stos
jo
cli
sbb
inc
stos
hlt
xorw
inc
pop
cmp
pusha
pop
scas
ret
xor
rcll
lea
xchg
xchg
dec
jmp
stos
fs
jne
mov
jae
sbb
and
imul
or
mov
popa
into
mov
mov
push
dec
push
cwtl
dec
dec
test
cs
inc
pop
adc
add
jmp
or
testb
lahf
push
ds
push
gs
pop
cwtl
cmp
je
clc
pusha
lods
daa
inc
clc
inc
mov
xor
out
movsb
xchg
fidivl
cmc
mov
icebp
scas
xchg
cmc
rolb
repnz
shl
stos
add
jo
clc
jnp
aas
jp
loope
adc
mov
icebp
xor
aad
cli
fwait
adcl
ret
es
movsb
jp
lcall
leave
outsl
and
sub
aam
ficoms
jbe
out
mov
push
add
and
lret
dec
push
loop
and
mov
push
jns
call
ljmp
cmpsl
push
and
xchg
testl
sub
pop
out
sahf
addr16
bound
xchg
pop
pop
or
dec
ret
lods
sahf
inc
out
dec
xchg
push
push
xor
insb
loope
mov
lcall
push
mov
outsl
sbb
sbb
rcll
fs
stos
cld
fldenv
push
fwait
stos
repz
and
push
dec
dec
mov
cmp
lods
hlt
push
lcall
inc
cmpsb
adc
cmp
or
adc
in
mov
fidivl
jmp
lea
insl
les
cmp
xchg
add
dec
loope
dec
sub
int
sti
push
mov
std
jns
loop
lldt
jge
sbb
pusha
mov
stos
fbstp
push
lock
scas
dec
mov
pop
jns
idiv
movsl
jae
sub
sub
test
imul
push
mov
lcall
adc
lret
aad
jmp
test
scas
mov
xor
dec
mov
cltd
pop
jge
pop
inc
lcall
mov
pop
pop
xor
cmp
loopne
push
in
jmp
xor
mov
nop
data16
pop
or
mov
aaa
nop
dec
insb
ret
jge
add
and
xchg
mov
sbb
jo
cmpl
addr16
mov
int3
rol
test
pop
out
fnsave
shrl
shr
testb
add
mov
loop
popa
push
test
xor
mov
jl
jg
pop
aas
push
in
xor
pop
xorb
mov
fcoms
in
adc
loope
fwait
pop
xor
mov
jp
jb
mov
fsts
stos
mov
faddl
arpl
scas
mov
subb
je
in
and
xor
cmp
inc
adc
addr16
mov
es
pop
sbb
arpl
jns
cs
lret
dec
push
popf
cmp
out
daa
mov
inc
mov
mov
fldl
imul
popf
mov
dec
fldenv
insb
xlat
ficoml
xor
cmp
or
fstpl
xchg
jnp
adc
icebp
add
fidivrs
repnz
int3
mov
add
xorl
or
and
mov
bound
test
sbb
cmp
or
stos
arpl
scas
mov
pushf
aaa
aas
inc
mov
xor
nop
push
inc
mov
sbb
lcall
fstl
jg
pop
imul
add
cmp
cld
xchg
xchg
or
or
fidivs
dec
xor
xor
xchg
jno
pop
ss
dec
sub
lret
adc
xor
inc
add
jl
test
cmp
jl
xchg
mov
stos
faddl
xchg
in
sti
pop
fwait
in
jge
adc
loop
mov
rcrb
xchg
jmp
push
ret
sbb
ret
faddl
mov
xchg
mov
in
inc
mov
mov
pop
orb
hlt
sbb
cli
xchg
leave
cmpsb
int3
fidivrs
shrd
mov
inc
dec
leave
mov
xorl
nop
cld
outsb
push
stos
sub
outsl
adc
xchg
lret
dec
icebp
mov
ror
leave
pushf
cmp
jb
rep
sub
cmp
adc
sub
and
xlat
push
sahf
push
adc
sub
adc
ja
rolb
mov
xchg
push
adc
je
ds
mov
out
lcall
adc
mov
inc
dec
push
mov
pusha
fisttpll
xchg
add
dec
lds
lret
out
int
sub
jl
inc
std
jmp
sub
loope
xor
mov
cld
jle
push
dec
shrl
and
fdivs
popf
sbb
or
mov
or
sub
sub
lsl
sti
loopne
mov
cs
scas
dec
into
sub
sub
andl
cli
lret
jo
mov
and
dec
xor
test
dec
sbb
pop
dec
sbbb
or
popa
xchg
inc
out
cmpsl
stos
shll
fwait
push
data16
fcoms
mov
outsl
pushf
and
aam
add
adc
movsl
cmp
sbb
push
jnp
adc
enter
roll
push
hlt
dec
mov
mov
xor
inc
jle
in
or
popa
repz
jge
pop
fbstp
pop
data16
jno
mov
lods
sub
push
addl
and
sbb
push
lods
outsl
and
out
cmpsb
xchg
jo
insl
idiv
insb
add
mov
push
loope
test
mov
lds
flds
repnz
shll
push
pop
out
adc
mov
xor
es
jne
in
das
sub
ljmp
jnp
mov
int3
pushf
mull
js
pop
insb
sbb
xor
jo
int
insl
ss
mov
loopne
int3
mov
dec
sti
mov
inc
cmp
loopne
repnz
cmp
xchg
cmp
sbb
cmp
mov
sub
nop
rorb
xor
inc
mov
dec
and
or
aaa
mov
sbb
jns
invd
mul
push
jae
hlt
mov
bswap
fdiv
lds
in
std
hlt
outsl
rcrb
andl
xlat
std
clc
outsb
insl
addb
fidivl
mov
mov
cltd
mov
sarb
pushf
cmp
stc
fists
test
inc
cmpsb
das
sti
adc
and
pop
sbb
loope
fimull
inc
sub
movsl
push
data16
mov
outsl
xchg
call
dec
dec
mov
imul
adc
mov
jl
unpckhps
repz
dec
fmuls
add
cltd
sbbl
push
sbb
and
sub
cmp
jo
repnz
jg
jg
lret
mov
xor
or
mov
jno
adc
in
loope
push
mov
mov
adc
sarl
jp
inc
add
out
xchg
fnsetpm(287
pop
lods
jbe
loope
imul
es
out
xor
mov
push
sbb
or
cs
loope
insl
jle
cmc
shr
cmp
push
ret
mov
or
pop
pusha
in
stc
or
adc
xchg
fidivl
xchg
cmp
jmp
lods
sbb
cmp
out
dec
cli
cmp
push
and
mov
xor
pop
je
or
test
cli
jb
test
mov
push
scas
hlt
ljmp
pushf
inc
cmp
in
mov
in
aas
jmp
jge
stc
out
test
inc
es
cwtl
jmp
inc
test
lret
inc
pop
lods
push
mov
stos
int3
add
arpl
dec
add
cwtl
scas
adc
stos
cmpsb
pop
xchg
das
mov
shll
sub
mov
je
mov
sbb
call
pop
jo
sti
xchg
jno
scas
stc
xor
cld
cmp
sub
inc
test
inc
and
pop
rcrl
mov
aad
xor
pusha
aam
or
xchg
add
fcmovnbe
xchg
test
or
inc
mov
idivb
sub
dec
and
out
xor
jmp
mov
lods
or
inc
mov
mov
mov
or
add
push
clc
and
pop
popf
test
adc
xor
push
add
fiadds
imul
iret
xchg
push
das
jl
jge
jo
cwtl
scas
out
jle
stos
mov
aam
out
testl
or
repz
mov
test
addl
cmpsl
test
rolb
mov
push
lahf
rcrl
stos
jp
mov
dec
std
pop
xchg
xchg
int3
and
icebp
leave
add
fdivrs
cmp
adc
dec
movsl
test
call
dec
inc
xor
mov
adc
loope
mov
gs
into
pop
adc
ret
jb
pop
cs
push
in
loopne
rorl
xor
pop
neg
cld
out
loop
movsb
sbb
pusha
mov
int3
push
or
loop
cmp
out
lods
sub
loope
mov
mov
adc
or
imul
jb
cmpsl
push
lock
add
sbb
add
xchg
cmp
sub
jecxz
ja
or
dec
jle
dec
adc
inc
sbb
mov
and
fdivrl
mov
test
sub
sub
pop
popf
fld
sbb
pushw
outsb
mov
dec
cmp
fimuls
pop
lret
pusha
fs
jecxz
in
adc
mov
push
pop
mov
lret
and
incb
or
mov
mov
bound
pop
fldcw
pop
div
lcall
cmp
push
lret
fwait
arpl
icebp
mov
adc
sub
icebp
jnp
jl
mov
mov
cltd
push
jbe
pop
sub
outsb
push
push
lds
daa
out
xor
loope
clc
pop
inc
jns
xchg
movsl
addr16
addr16
lea
mov
fisttpl
jecxz
add
and
mov
dec
and
mov
icebp
push
sub
inc
xor
cmc
or
pop
ss
mov
es
daa
dec
add
mov
in
push
fldt
inc
jg
adc
jge
loopne
outsl
leave
in
jbe
xchg
sbb
repnz
xchg
fwait
repnz
es
mov
push
adcb
pop
xchg
mov
dec
jle
ja
sti
inc
add
jecxz
push
mov
loop
push
cmpsl
sbb
push
lret
out
xchg
pop
sbb
adc
fimuls
sbb
out
cli
and
cwtd
dec
ds
leave
imul
sti
mov
xchg
ds
jne
add
dec
sbb
sahf
dec
movsbl
fucompp
xor
pop
inc
pushf
cmp
mov
popf
mov
jns
add
and
jge
cmpsl
adc
outsb
add
or
push
or
mov
hlt
inc
push
add
jge
pop
jg
stos
push
push
sbb
in
je
jmp
rclb
mov
pop
out
xchg
jge
test
cmpsl
xchg
xchg
je
adcb
int3
and
dec
in
push
insb
insl
sub
mov
cmpsl
jge
dec
ja
outsl
mov
add
bound
jnp
inc
mov
pop
sar
and
lods
cwtl
pop
push
shll
push
inc
fwait
push
push
mov
or
aaa
or
xchg
cwtl
mov
sbb
cmc
jg
xor
fwait
iret
jmp
out
ret
mov
push
scas
clc
pop
mov
movsl
jle
push
hlt
fdivrl
sub
mov
lahf
sub
cwtl
adc
inc
mov
in
hlt
daa
mov
jno
pop
push
cs
outsb
aad
and
sub
aaa
push
adc
sub
cltd
pop
lods
ss
orb
push
adc
push
add
rclb
ret
or
ret
adc
cmp
inc
iret
mov
adcb
pop
jle
lahf
xor
popa
call
xchg
jl
jno
mov
in
pop
ja
fwait
cmpsb
icebp
movsb
test
push
rorb
push
mov
xchg
dec
xchg
dec
andb
mov
mov
imul
sub
inc
push
fstpl
imul
cmpsb
xchg
lcall
mov
sbb
mov
and
vxorps
jne
add
into
fldcw
enter
jmp
ljmp
cmp
xor
arpl
push
fidivl
cmp
mov
jo
lock
dec
pop
subb
cmpsb
xor
shl
or
scas
xchg
dec
lret
in
pop
mov
mov
xor
cmp
sbb
lret
or
scas
aaa
jnp
mov
movb
cmp
insb
adc
stc
inc
jbe
push
test
dec
or
or
lods
sub
dec
insb
rcll
inc
sar
inc
jbe
sub
dec
mov
js
popf
jo
inc
adc
xchg
mov
inc
imul
push
pushf
xchg
mov
sbb
adc
jne
lods
pop
fs
sbb
stos
lahf
xchg
mov
fxch
and
lods
std
adc
sar
icebp
push
adc
push
mov
mov
ret
mov
iret
push
xchg
lcall
std
push
enter
out
mov
scas
sbb
xchg
mov
pop
adc
lret
lods
and
stos
sbb
mov
push
je
or
xor
shll
in
sub
xlat
cmp
aad
pop
outsb
iret
cmp
call
adc
adc
ror
adc
mov
push
adc
rorb
arpl
mov
or
pushl
stos
add
test
push
xchg
cmp
push
loope
or
and
sub
movsbl
mov
xchg
mov
and
popf
mov
xor
xacquire
sbb
in
xlat
out
inc
std
sbb
sub
jbe
fisubl
decb
ja
leave
dec
xchg
gs
je
ja
or
leave
xor
xchg
rol
pop
or
adc
mov
incl
out
in
cmp
inc
pop
or
sub
dec
pop
jmp
dec
dec
mov
scas
dec
xor
lock
mov
stos
lcall
shl
movb
ss
stos
decl
inc
xchg
mov
add
dec
inc
pop
fwait
add
pop
aas
out
and
cmp
call
fisttpll
in
ret
pushf
pop
loopne
daa
adcl
mov
out
fs
cmp
push
xchg
pop
cli
fs
stos
pop
dec
in
dec
mov
int3
add
adc
enter
adc
int3
jne
add
mov
add
cmpsl
mov
push
cmpsl
jb
xor
aam
adc
test
and
stc
bound
inc
or
out
shll
add
jno
xor
in
cwtl
leave
dec
mov
mov
push
sub
popa
mov
inc
popa
cmpsb
outsl
mov
sub
mov
ror
mov
mov
inc
inc
mov
ret
ret
mov
jge
mov
xor
lret
shlb
or
mov
sub
pop
scas
into
outsb
jmp
cmp
xor
mov
leave
adc
pushf
scas
aaa
leave
push
mov
cltd
inc
sub
mov
sbb
sti
lcall
add
mov
adcl
cli
movsb
or
imul
lcall
aad
xchg
loope
inc
fisttps
shlb
mov
mov
cmp
ja
cmp
sti
sub
repnz
lret
pusha
mov
loop
pop
jge
mov
add
push
shrb
pop
cmp
gs
pop
fdivs
lret
pop
ret
ret
mov
add
imul
inc
xchg
mov
inc
xchg
xor
enter
out
jle
sub
xchg
mov
ljmp
test
inc
fistpll
pop
dec
dec
popa
js
push
out
fsubrp
xor
or
nop
jo
daa
loop
in
push
enter
iret
xchg
sbb
rclb
or
decl
sti
lcall
flds
pop
repz
inc
mov
pushf
jmp
cmpsb
shlb
test
pop
xchg
inc
aam
iret
mov
mov
arpl
and
pusha
dec
or
inc
sbb
jno
pop
test
push
add
inc
xor
cmp
out
das
ret
fldl
or
mov
sbbb
je
add
sub
scas
push
dec
ds
and
xor
call
stos
xchg
lock
pop
shrl
add
sub
cltd
fstps
mov
cmp
loop
pop
shrb
inc
sub
insb
add
push
fs
xor
mov
adc
and
divb
outsl
test
adc
js
insl
insl
xor
enter
pop
lahf
repz
cmp
xchg
push
pop
nop
test
mov
add
jns
push
inc
xchg
mov
xchg
or
mov
outsb
aam
int
cmpsb
push
dec
cmp
mov
int
idivb
lods
dec
mov
hlt
int
mov
add
dec
adc
sub
inc
icebp
sbb
cwtl
pop
aas
jge
xchg
aad
xor
and
lcall
mov
push
cmpsb
lret
hlt
adc
pop
lods
push
ret
xor
clc
jo
clc
sbb
hlt
cmp
shrl
mov
inc
mov
mov
push
mov
fstp
inc
mov
in
jmp
insl
mov
je
aad
pop
popf
push
sub
rcll
mov
add
frndint
lret
stos
lahf
and
or
les
je
jo
sti
addl
inc
or
add
sub
stc
cwtl
and
jb
add
cld
fdivrs
jle
stos
leave
rclb
adc
fcoml
mov
add
lret
jge
sar
mov
fstps
ret
pop
cld
xor
fldcw
mov
repz
fisubrl
out
jg
loop
outsl
aam
scas
int
push
or
mov
repnz
or
xlat
mov
sbbl
push
jecxz
pushf
repnz
push
cld
xchg
adc
testl
mov
mov
lods
cmp
mov
jb
xor
cmpsb
int
ds
or
rcrl
cmp
jp
pop
es
dec
scas
push
testb
sub
out
popf
fldcw
lahf
stos
daa
adc
or
fdiv
jo
test
arpl
xchg
stc
mov
movsb
insb
inc
out
mov
mov
out
movsl
mov
xchg
push
aas
xchg
xor
scas
fildl
push
aad
pop
add
sti
lea
add
push
lret
sbb
pop
push
xchg
rcrb
iret
mov
call
lods
ds
idivl
shrb
std
inc
jp
jae
aam
movl
push
test
push
in
fs
sub
mov
pop
ljmp
shlb
push
pop
inc
jmp
sub
decl
ret
int
cmp
jle
je
jne
mov
push
mov
lret
adc
std
xchg
dec
add
loope
int
ljmp
mov
inc
mov
repz
sub
and
push
jns
or
fwait
and
movsl
pushf
ret
js
ds
adcb
pop
add
cld
nop
dec
cmp
outsl
sub
mov
stos
adc
scas
ja
stos
int3
xor
nop
les
jl
inc
data16
dec
mov
divl
hlt
repnz
jmp
mov
cmpsb
packssdw
idivb
scas
out
xlat
xchg
rolb
popf
fistps
xchg
sbb
cmp
sbb
pop
and
call
pop
inc
lods
imull
lret
popa
mov
jns
xchg
in
or
jae
cmp
fimuls
push
mov
and
dec
nop
xlat
push
stc
aam
pop
outsl
jp
jne
scas
dec
js
scas
xchg
test
sub
lret
mov
fwait
das
cmp
and
nop
popa
repz
xchg
xor
repnz
stos
sbb
add
je
pusha
pop
lahf
lcall
jmp
add
test
lret
out
mov
les
aas
sarb
fnstenv
aas
ret
xchg
adc
ja
jl
push
mov
aaa
sbb
and
fstpt
movsl
fcompl
mov
hlt
mov
jb
cld
mov
frstor
clc
mov
insl
jmp
std
jns
cmp
and
icebp
bound
icebp
xchg
aas
popf
push
sbbb
bnd
fcomps
popa
stos
xchg
loopne
lcall
and
cmc
pop
cmpsl
scas
clc
push
pop
or
xchg
lahf
rcr
xchg
and
outsl
popf
add
bound
push
mov
add
imul
and
xchg
xchg
jge
arpl
push
aam
dec
push
testl
mov
bound
mov
sarl
push
inc
fptan
pop
adc
loop
ss
test
sub
or
and
jge
pusha
mov
lods
pop
in
rclb
and
bound
sub
daa
inc
cltd
mov
xchg
imul
sub
sbb
dec
ja
in
in
loopne
inc
mov
aas
add
call
push
lahf
mov
mov
dec
loop
fs
cmp
or
addr16
nop
scas
jne
inc
mov
xchg
xchg
sbb
fwait
add
js
jnp
xchg
popf
shlb
fucomi
aas
aam
push
sbb
xchg
xchg
cs
icebp
or
fsts
fistpll
arpl
fnstsw
rcrl
lret
sub
and
xchg
mov
shrl
mov
cmpsl
icebp
mov
or
mov
pushf
lahf
push
and
mov
in
push
mov
jmp
adc
cmp
shlb
enter
adc
shll
xor
jge
pushf
mov
movsl
es
fisttps
xchg
sbb
mov
movsb
sahf
pop
je
int
pop
inc
pop
lahf
inc
shll
repz
addr16
dec
pop
mov
add
xchg
jg
fwait
movsl
fstps
cwtl
fwait
mov
repnz
addr16
daa
out
in
adc
dec
into
icebp
xor
jbe
sarl
lods
xchg
pop
es
sub
xchg
mov
push
and
outsb
pop
pop
cmp
cmp
cmp
outsl
js
out
popf
lret
lret
dec
iret
shll
sbb
adc
sbb
aas
es
fcompl
in
sub
mov
in
jl
sub
dec
add
push
jae
repnz
jae
hlt
inc
mov
push
in
xchg
js
aad
sub
ret
in
xchg
mov
sub
scas
sub
lahf
mov
mov
cld
in
push
movsb
sub
add
scas
lock
dec
jmp
test
xor
in
rorl
sub
test
mov
pop
cwtl
int
rcrl
repnz
ja
fstpl
arpl
jmp
mov
push
push
mov
adc
sbb
push
std
adc
mov
xor
jne
push
insl
cmp
or
stc
sub
xchg
push
fisubs
or
sbb
outsb
push
subl
test
xorb
sbb
sub
jns
mov
lret
jle
in
inc
mov
xor
out
sub
jns
dec
sub
fwait
stos
lahf
les
fstpt
scas
fbstp
add
clc
push
outsl
inc
je
inc
xchg
icebp
faddp
jbe
jg
cmpb
mov
pop
jmp
popa
mov
mov
lcall
das
inc
test
jae
stos
mov
nop
movsl
inc
cmpl
into
bound
lods
xor
xchg
nop
sub
push
and
sbb
pusha
sahf
loope
es
pop
imul
jno
cmpsl
rolb
and
mov
mov
push
mov
in
mov
cmp
pop
cwtl
inc
mov
roll
push
adc
aam
xchg
jg
jbe
jl
lret
aam
push
mov
mov
jo
xor
xor
pop
sbb
je
cltd
aad
dec
fmull
mov
push
and
push
test
or
sub
mov
xchg
sbb
out
fisubs
stc
mov
sub
lret
pusha
out
adc
sub
outsl
mov
andnps
xchg
push
pop
and
mov
imul
mov
adc
bound
imul
ss
pushf
pop
mov
mov
shrb
stos
mov
lods
xor
int
add
jo
jbe
outsl
jg
fstl
pop
loopne
jle
adc
mov
lock
enter
loop
xor
xchg
stos
pop
sbb
mov
cmp
and
mov
xor
mov
xor
sbb
imul
and
les
out
nop
jo
push
mov
mov
jmp
xchg
or
les
pop
mov
fidivrs
or
lea
pop
and
cmp
sub
stc
arpl
mov
cmp
aam
cmpsl
lock
mov
sub
jecxz
or
sti
cmc
push
pop
sbb
cmpl
add
dec
cmc
mov
loope
push
xlat
pop
aaa
push
pop
hlt
aas
dec
xchg
sarl
pop
or
lods
movsb
pushl
adc
add
add
push
sub
or
stc
mov
sub
insb
test
insb
in
pusha
mov
xlat
lock
cmp
cld
pop
dec
jle
hlt
push
xorl
addr16
cli
jmp
sbb
in
xchg
sbb
dec
push
imull
in
movsl
pop
dec
mov
outsl
repz
dec
inc
mov
les
lret
fs
adc
mov
adc
jb
aad
and
xor
pop
rcrb
es
inc
xor
push
sbb
pop
and
mov
add
mov
enter
mov
lahf
stos
sbb
pop
ljmp
gs
cmp
data16
or
test
jbe
stos
icebp
arpl
xchg
rcrb
jo
aaa
aad
inc
test
nop
jle
push
and
xchg
mov
mov
dec
fcoml
out
sub
mov
jmp
imul
mov
mov
and
in
out
sbb
bound
enter
imul
xchg
pop
imul
test
push
push
scas
in
repz
xor
imul
popa
xchg
mov
pop
jl
sub
jae
mov
repnz
push
push
mov
jnp
adcl
cwtl
add
dec
gs
sub
enter
mov
adc
jg
test
adc
push
roll
mov
inc
push
incb
inc
out
stos
mov
ss
filds
cmpsl
test
push
mov
aad
fchs
aaa
mov
mov
add
cld
cltd
pop
negl
adc
test
push
adc
jb
and
xchg
xchg
add
pop
xor
or
add
aam
and
mov
mov
xor
inc
not
les
push
pop
out
leave
test
mov
outsl
and
ss
sahf
lods
jo
int3
push
mov
inc
fmulp
inc
sub
sbb
icebp
cwtl
mov
call
lock
enter
and
jl
mov
cmpsl
subl
jmp
lods
cmp
rcrb
inc
push
rclb
test
lods
xchg
mov
test
insl
js
inc
push
dec
les
js
jo
ja
sub
mov
mov
inc
nop
sar
roll
xchg
jl
dec
movsl
nop
mov
and
mov
jns
mov
sahf
in
rclb
jl
adc
push
out
xor
nop
push
mov
leave
xor
insb
test
xchg
mov
ret
adc
dec
cmp
or
fisubrl
insl
mov
or
xchg
out
jg
and
inc
mov
xor
stos
dec
and
sbb
lea
jmp
xchg
mov
ret
les
lret
int3
pop
idivb
loop
xor
ret
jge
mov
mov
imul
das
mov
or
out
and
sbb
xor
and
adc
or
popa
jbe
js
sbb
jmp
or
sbb
mov
in
dec
cmp
inc
lds
jge
repz
sub
sbb
mov
in
inc
stos
sub
mov
add
stc
jae
les
sbb
push
rcrb
rcrl
inc
mov
add
test
pop
add
daa
or
sahf
es
mov
sbb
cmp
push
loope
jno
lea
add
lea
sbb
scas
or
push
repz
cmpb
insb
jnp
jae
xchg
clc
les
and
sbb
data16
push
test
mov
and
lods
push
repz
ret
dec
cld
ljmp
in
xlat
add
inc
inc
in
push
xchg
ret
dec
pop
jle
pop
mov
jne
insl
add
ret
js
and
sub
add
sbb
mov
inc
xchg
sbb
sub
push
fisttps
dec
sbb
jae
ljmp
sub
add
loopne
fidivl
test
in
test
test
xchg
iret
push
or
arpl
mov
test
push
jle
movsb
ds
pop
outsb
adc
bound
cmpsl
fisubrs
ret
xchg
cli
scas
nop
je
clc
dec
xchg
in
jl
xchg
xlat
xor
dec
jbe
dec
loopne
xchg
subl
data16
movsb
mov
lret
jae
and
loopne
xchg
rol
inc
or
jne
lea
adc
xchg
lea
mov
stos
mov
sbb
jno
push
mov
scas
das
in
and
lahf
mov
testb
xchg
arpl
cmp
imul
stos
icebp
add
icebp
divl
loop
xor
pop
fnsave
add
or
inc
add
jmp
out
adc
jmp
adc
scas
pop
mov
jmp
addr16
push
dec
sub
jno
out
lea
and
aam
inc
aad
add
popf
jb
mov
sub
add
out
rcll
test
jnp
mov
inc
xchg
sti
dec
mov
lret
popa
fsubl
test
hlt
xor
jo
aad
dec
loopne
mov
test
cmp
jae
push
aaa
out
dec
push
rcrl
test
ja
push
xchg
adc
ja
mov
sbb
notl
inc
fstl
mov
outsl
or
pop
addl
pushf
add
pop
mov
loopne
outsl
jg
lods
inc
and
nop
and
push
xlat
dec
pop
cmp
or
lods
push
int3
pop
mov
out
add
mov
push
rcrb
loop
shlb
push
mov
or
pop
pop
loope
add
adcl
or
sti
daa
push
call
stos
lds
mov
and
scas
inc
int3
stc
ja
sbb
push
lahf
mov
sub
xor
popa
stos
or
cmp
xlat
test
lahf
cmpb
inc
cmp
pop
pop
inc
lock
jnp
mov
dec
and
jae
push
push
xor
add
cmp
cltd
mov
jne
iret
int3
insb
cs
les
test
adc
add
ljmp
sub
std
pop
cmpsb
xchg
shl
mov
in
xchg
test
adc
xchg
xorb
bound
into
mov
xor
xor
fwait
into
inc
jae
adc
ds
mov
xchg
sbb
in
or
fcomip
push
add
gs
push
xor
pop
outsb
dec
push
xchg
popf
push
lcall
negb
mov
in
test
cmpsb
xor
into
out
xchg
add
rcr
or
imul
and
push
sbb
xor
loopne
pop
mov
test
stc
dec
fdivrs
popf
mov
push
push
fmuls
scas
adc
cld
mov
mov
cwtl
cmpsb
mov
es
jno
movsb
sub
aam
push
or
pushf
mov
add
cld
or
mov
adc
clc
sbb
aas
aad
jo
hlt
cmpsl
call
mov
cmc
cmp
dec
ror
mov
jecxz
shll
pop
push
push
sahf
jns
xor
aam
adc
cmp
ror
les
cmp
fwait
pop
incb
test
int
das
lds
and
or
out
sub
mov
ja
sbb
xchg
xlat
mov
jns
xchg
mov
pop
jae
and
outsl
gs
fnstenv
pop
adc
cltd
xchg
mov
xchg
mov
mov
shll
pop
rol
les
fdivrp
mov
cmp
test
dec
aas
jo
sub
mov
adc
lds
push
cltd
in
mov
mov
push
mov
shrb
ss
stos
sub
call
adc
rolb
clc
add
pop
add
mov
pop
inc
xchg
mov
and
push
cpuid
mov
lods
ret
dec
lods
push
cmp
xor
fisttpll
sub
mov
test
or
mov
mov
and
xchg
sub
sub
int
imul
sbb
lret
xor
imul
js
sub
mov
in
pop
or
sub
ret
scas
pop
pop
pop
add
push
cs
cltd
xlat
jae
idivl
cmp
daa
xchg
push
inc
aaa
adc
mov
jae
fnstenv
idiv
testl
jmp
or
cs
ja
pop
imul
mov
or
mov
xchg
int
lods
cmp
adc
mov
jnp
sub
clc
mov
cmc
sarl
mov
loop
jmp
gs
lcall
sbb
ljmp
cmp
dec
xor
mov
loope
sub
aas
pop
jne
and
enter
mov
mov
fildl
cwtl
pop
mov
mov
pushf
aaa
shl
pop
es
cs
xor
shlb
aas
stos
adc
stc
daa
movsl
jg
push
in
rcll
and
mov
cs
sub
sbb
xchg
add
jecxz
jnp
xor
notb
out
jecxz
mov
lea
stos
cmp
sub
mov
fwait
bound
push
mov
outsl
jns
mov
or
pop
sub
mov
and
test
dec
mov
repnz
fstp
aaa
pop
adc
imulb
mov
loop
push
mov
cmp
adc
jg
jbe
aam
sub
loop
cmpl
paddusb
push
dec
fildll
mov
aas
inc
ret
jmp
and
pushf
testl
push
inc
xchg
ds
push
call
mov
fmuls
fstpt
lods
adc
xor
mov
divb
lcall
out
jmp
xor
sbb
cmp
jo
daa
adc
out
jno
out
dec
shrb
hlt
test
sub
xchg
ret
test
push
xor
test
aaa
inc
mov
sahf
mov
push
aas
xor
adc
sbb
shl
out
sub
imul
push
dec
xor
repz
mov
xchg
mov
aam
in
adc
mov
lea
rcrl
add
jne,pn
xlat
sbb
ret
dec
or
and
std
pusha
inc
jle
adc
fwait
xchg
es
sub
jne
xor
or
cmc
cwtl
inc
nop
fdiv
mov
sbb
mov
lods
data16
xor
cli
loopne
adc
fnstsw
jmp
xor
xor
pop
movsb
lret
loop
or
pop
fwait
in
fcom
xchg
mov
sarl
push
in
or
jne
dec
nop
sti
mov
cli
mov
jbe
lods
outsl
sbb
adc
mov
xchg
mov
mov
shr
mov
fisttpl
repnz
xor
dec
jno
stos
inc
jbe
add
pop
xor
test
mov
xchg
fldt
loopne,pn
sub
je
adc
fnstcw
test
and
lret
push
icebp
movsl
testl
xchg
xor
ret
ret
mov
pop
or
call
aam
daa
or
adc
push
and
nop
jmp
test
popa
sub
mov
jp
sub
test
out
sti
fiaddl
sub
xorl
mov
popa
lods
out
adc
or
js
fsubl
cs
mov
in
and
xchg
dec
ret
insb
push
int
ljmp
pop
inc
jecxz
mov
test
pop
inc
mov
rol
dec
fdivrp
and
bound
mov
lods
int
xor
mov
push
js,pt
hlt
invd
imul
cwtl
cmp
into
imul
mov
int3
enter
jne
arpl
cmp
mov
repnz
sub
addl
jno
cmp
push
or
xor
imul
cmpsl
insl
dec
adc
call
xor
push
pop
ss
sbb
push
sbb
out
in
aad
mov
lahf
adc
call
nop
fdivrs
mov
push
lahf
ds
insb
ret
icebp
jp
dec
cmp
int3
xchg
clc
adc
pop
adc
loop
pushl
push
mov
sbb
and
add
rcrl
addr16
iret
insb
push
push
xor
push
nop
pushf
cli
nop
fldcw
dec
push
fildl
out
add
iret
dec
adc
mov
fsubl
push
xor
in
cmp
mov
pop
push
push
imul
xchg
repnz
add
shr
cmp
mov
jge
and
pop
scas
repnz
mov
mov
mov
cmp
xor
inc
xchg
int3
sub
outsb
out
cli
stc
cwtl
xchg
inc
dec
mov
cmpsl
cwtl
and
ds
inc
pop
shlb
stc
xchg
decb
mov
and
sub
jnp
xchg
into
ret
push
push
inc
stos
push
adc
bound
rcr
rcr
xor
adc
mov
sbb
sahf
flds
mov
popl
fdiv
push
adc
popa
cmp
jno
in
or
inc
xchg
jbe
push
je
cwtl
xchg
inc
mov
xchg
gs
mov
sbb
andl
jnp
push
cltd
test
xchg
inc
imul
lods
lods
addb
lea
inc
cmc
shll
in
jns
jne
cmpsb
dec
sbbb
out
xor
in
mov
daa
cs
mov
int
rol
xchg
xchg
xor
daa
dec
inc
xchg
xchg
jne
into
mov
fdivl
lret
mov
fs
insb
fwait
sti
mov
in
iret
fildl
mov
in
xchg
loopne
and
jbe
jnp
pop
dec
cld
pusha
add
fistpl
jne
dec
mov
mov
mov
sub
or
ret
cmp
mov
mov
or
dec
imul
cmp
inc
adc
mov
js
bound
jne
mov
mov
mov
jnp
dec
pop
pop
xchg
add
lock
loope
or
dec
add
ror
ret
imul
scas
mov
add
adc
inc
lret
or
mov
inc
jns
movb
xchg
fcoms
mov
dec
loopne
aam
out
xor
fsubs
mov
jbe
sbb
dec
inc
stc
mov
test
xor
cld
jecxz
add
sbb
mov
cwtl
rcll
mov
out
into
inc
test
inc
loope
fbstp
cmpsb
decl
jae
sbb
sbbb
or
push
push
jnp
lods
adc
mov
pop
sub
adcb
insl
negb
jno
and
pop
imul
fcmovu
xchg
adc
jno
pop
mov
mov
out
orl
and
adc
lods
iret
sub
adc
mov
shlb
cs
stos
in
pop
or
repz
add
ljmp
xchg
je
vunpckhps
mov
cmp
out
push
pop
xchg
or
mov
lcall
das
in
mov
fdivrs
mov
daa
scas
xchg
mov
cmp
data16
inc
pop
dec
subb
pushf
test
mov
pop
dec
inc
sub
mov
pop
push
dec
xchg
out
push
pop
push
jge
aam
pop
fnstenv
repz
mov
xor
das
sub
lock
sub
xchg
push
mov
call
pusha
cmp
push
mov
ret
mov
push
jae
jp
jg
pop
cmp
sbb
sarl
inc
add
pop
pop
mov
xor
mov
cmp
pusha
mov
ret
inc
or
mov
ljmpw
daa
adc
mov
ret
movsl
mov
sbb
or
lock
sbb
sbb
addl
lods
adc
xchg
add
fwait
mov
cld
sub
inc
and
imul
push
pop
jns
ret
icebp
sbb
lods
in
jb
add
mov
mov
add
cmp
pop
sub
add
ja
xor
mov
rolb
and
jecxz
call
ja
inc
fcompl
push
imul
cli
mov
add
xchg
xor
xor
jae
mov
inc
fldcw
stos
mov
popa
insl
outsl
pop
jnp
jbe
into
inc
sub
aas
pop
sbb
fisttpll
or
adc
mov
and
push
mov
out
pop
dec
mov
test
cmpl
jle
mov
xor
mov
mov
adc
xor
adc
loopne
lea
fstl
test
dec
fisubrl
sbb
push
cltd
or
add
xor
mov
int3
sub
xchg
inc
cmp
xchg
stos
call
pop
and
push
icebp
in
bound
mov
leave
cmp
clc
and
sub
daa
stc
xor
int3
inc
ja
ja
test
mov
pop
push
sbb
and
je
xor
inc
sub
mov
dec
or
scas
mov
inc
lret
or
ret
fbld
ret
les
xchg
repnz
std
sub
push
adc
push
add
inc
bnd
out
popa
in
fistpll
test
pop
icebp
lcall
jo
lcall
jae
xor
sbb
mov
roll
pop
dec
loop
repz
pop
or
or
xchg
sub
mov
push
and
inc
test
cmp
imul
pop
inc
dec
jb
lret
jge
scas
adc
fsubrs
lds
mov
and
add
and
mov
cs
dec
sub
pop
into
iret
pop
adc
pop
push
sbb
jge
fcoms
mov
cwtl
mov
insb
int3
add
mov
nop
ret
jb
adc
cwtl
adc
mov
nop
adc
aam
dec
inc
jbe
mov
sub
mov
arpl
outsl
xlat
pop
mov
arpl
sbb
imul
push
inc
inc
in
mov
mov
or
loop
in
push
lahf
test
push
xchg
ficoms
sub
nop
ret
jecxz
dec
pop
fs
mov
xchg
or
cli
xlat
or
fs
int
pop
lret
cld
jge
push
repnz
insb
into
cltd
push
push
add
mov
imul
js
mov
cltd
cmpsl
enter
xchg
jmp
in
pop
cmpsb
pop
addl
pop
mov
pop
pop
add
inc
inc
ja
mov
shr
mov
movsl
sbb
ss
and
xor
loope
incl
cmc
xor
aaa
mov
or
mov
adc
cli
and
hlt
add
in
and
adc
clc
sar
and
xor
loop
mov
sub
cwtl
aad
std
call
sbb
stos
mov
jmp
filds
or
mov
stc
jp
mov
adc
dec
fcomi
sub
mov
jnp
inc
and
xor
mov
ss
mov
pop
mov
dec
divl
jge
push
loope
test
cmp
js
shll
push
movsb
adc
jecxz
in
mov
push
pop
adc
adc
roll
and
xchg
mov
fdivp
and
into
jb
push
pop
mov
ljmp
xchg
sub
in
out
inc
nop
ffree
adcl
mov
inc
je
push
xorl
dec
fcmove
adc
out
xchg
mov
andl
pop
push
mov
or
pop
inc
call
addb
jg
aad
out
je
jg
and
sbb
lods
lahf
es
sub
stos
jp
jns
push
out
out
push
xor
xlat
adc
mov
sti
pop
push
int3
jne
cs
out
jecxz
fwait
jmp
push
call
push
rorl
clc
xchg
and
or
or
or
std
jo
sub
decb
pusha
and
xor
mov
outsb
fmulp
mul
inc
lods
aam
push
xchg
cwtl
xor
push
mov
rorb
or
pop
sub
xor
out
lods
sub
aas
mov
jbe
outsl
cltd
jg
inc
sbbl
lock
add
clc
pop
jb
push
adc
repnz
lahf
int3
pop
sub
aaa
cmp
jl
sub
mov
and
sbb
cwtl
aam
jno
jp
cld
aaa
mov
loop
mov
lea
iret
cmp
pop
mov
jb
and
movsb
add
mov
xor
mov
sbb
ret
mov
testb
arpl
aam
or
inc
push
mov
leave
enter
cmpl
repz
cmc
mov
xchg
adc
lcall
jecxz
add
mov
mov
mov
or
call
orl
cmp
push
arpl
ret
pop
adc
inc
fbld
rorb
repnz
push
push
cltd
es
pushf
add
mov
pop
jae
repz
ljmp
mov
dec
mov
leave
loope
and
or
mov
push
sub
mov
fstl
mov
pop
loopne
sbb
xchg
adc
dec
call
mov
out
sub
lret
mov
jne
pop
unpcklps
movsl
std
mov
pusha
mov
xor
cmpb
rol
adc
xor
dec
sbb
add
pop
inc
mov
xor
shlb
mov
or
jno
inc
push
es
imul
push
jae
cmp
cmp
shll
add
bound
ret
sbb
pop
add
xor
pusha
stos
jnp
pop
hlt
jbe
adc
stos
sub
xor
jecxz
stos
add
mov
mov
and
sub
outsb
push
push
je
repnz
pop
ficompl
rcl
pop
aad
ljmp
fwait
out
sbb
std
mov
mov
adc
xor
outsb
jle
gs
aaa
into
jl
and
rclb
mov
cmp
jg
into
add
inc
dec
or
test
scas
dec
jl
push
das
ret
jecxz
pop
cs
dec
and
aaa
fs
mov
mov
clc
stos
push
mov
lds
movsb
jle
adc
cmp
std
fwait
incl
cld
xor
scas
rcl
xor
inc
int3
ja
loope
push
fmul
lds
xlat
sbb
rcrl
mov
dec
push
out
cmp
ljmp
fcmovnu
jl
and
mov
add
lea
ja
aas
rorb
leave
sbbb
addr16
adc
std
loop
ljmp
jl
insb
inc
push
lods
arpl
sub
xchg
mov
aas
pusha
sahf
xchg
vpshufhw
daa
cld
push
sbb
adc
shlb
notb
jbe
inc
pop
adcb
inc
aam
cmp
add
test
jge
cmp
imul
test
jg
inc
sbb
movb
stos
jecxz
lret
je
fildl
adc
ret
push
mov
sbb
inc
fstpl
mull
ret
mov
out
pop
xor
hlt
and
iret
cmp
pop
imul
iret
xor
xchg
es
cs
stc
test
dec
mov
repz
outsl
bound
xor
les
faddp
mov
outsb
shlb
stos
movsb
shrb
sbb
dec
or
inc
push
fdivs
xchg
cs
loope
mov
jnp
dec
lea
and
repnz
in
push
xor
jb
xor
jb
mov
insl
inc
fdivrs
pop
bnd
insl
cwtl
pmaxsw
aaa
divb
es
iret
and
scas
in
cmp
jle
inc
pop
ljmp
adc
pop
data16
push
jecxz
std
dec
push
lock
adc
sbb
push
cmpsb
mov
enter
mov
jl
mov
sub
iret
movsl
stc
imul
jge
cmp
ss
cwtl
in
mov
aam
mov
shlb
mov
pop
or
mov
jmp
jl
fidivl
cmp
mov
mov
pop
ja
sbb
mov
sbb
repz
rcll
xchg
in
adc
mov
jmp
gs
in
fisubs
iret
mov
rol
fwait
fs
inc
bound
jno
ja
ffree
xor
mov
imul
mov
mov
jo
xchg
insb
daa
inc
pop
xor
sbb
or
gs
xor
sbb
int3
push
cltd
sbb
sub
cwtl
xchg
dec
cmc
or
aas
in
inc
push
faddp
mov
rorb
sarb
pop
daa
sub
xchg
out
leave
dec
dec
xchg
in
mov
cmp
adc
mov
jecxz
repz
scas
and
sub
in
adc
dec
in
test
fxch
inc
out
mov
push
rcrb
dec
clc
xor
cmp
imul
xchg
popa
push
lods
cmp
inc
fidivs
nop
fisubrs
jno
mov
mov
out
scas
adc
lods
movsl
mov
sub
inc
lods
decl
mov
lcall
sbb
stos
bnd
enter
mov
sti
mov
cwtl
lahf
xchg
inc
or
add
jae
test
xchg
mov
repnz
mov
jns
cmp
pop
mov
cmp
movsb
push
int3
cli
push
push
dec
ljmp
shl
aas
icebp
mov
push
inc
mov
clts
int
push
js
or
push
jg
or
fs
jl
fcmovnbe
js
hlt
mov
push
inc
in
out
cwtl
cmc
jge
or
push
int3
cwtl
std
sub
test
push
inc
xchg
or
and
and
add
out
les
jmp
mov
dec
inc
movsb
mov
aad
mov
fsubr
push
ret
inc
or
jge
push
mov
aam
rolb
pop
pop
mov
aas
jle
xor
dec
jge
movsb
mov
add
jle
in
out
cmp
ret
sub
push
rcl
mov
mov
add
jo
mov
sbb
addr16
pop
leave
cmc
xchg
push
cmp
fst
mov
jecxz
jp
dec
push
cmp
stos
cmp
fidivrs
mov
cmpsl
cs
push
pusha
clc
mov
sbb
inc
jle
lahf
dec
es
jo
sti
add
pop
addr16
leave
outsb
push
fcom
out
and
in
cmc
cs
push
or
mov
test
arpl
inc
aam
jbe
and
push
ret
pop
aam
outsb
inc
xor
sbb
das
cmp
xchg
pop
imul
call
fstl
stos
or
push
aad
loopne
arpl
push
mov
pop
ja
repnz
pushf
dec
jmp
ret
pop
fistpl
jns
in
mov
lds
cmp
cmpsb
fs
pop
sbb
lahf
mov
jb
sbb
decl
popa
out
adc
add
or
xor
xchg
clc
pop
dec
fadd
shll
lahf
addr16
xlat
jb
mov
add
jbe
inc
jno
std
sbb
lock
mov
mov
jno
push
jbe
in
arpl
ret
push
sbb
ja
add
inc
lods
mov
mov
in
xor
fidivs
push
xlat
call
pop
sub
filds
jns
pop
xchg
mov
adc
mov
ss
out
xchg
jo
outsl
adc
shrb
inc
leave
jnp
mov
and
outsb
fmull
jge
push
rclb
inc
sbb
mov
inc
push
push
mov
or
mov
ss
jle
aad
lods
repnz
inc
ret
jns
mov
lods
xor
add
int3
dec
and
sbb
add
scas
fs
imulb
clc
lahf
repnz
imul
outsl
xchg
push
shlb
arpl
cltd
leave
popa
inc
mov
popa
fwait
inc
jb
cs
cltd
cmp
mov
fs
push
dec
adc
roll
pop
rol
xchg
test
rcrb
adc
pop
stos
imul
mov
in
inc
lret
movsb
xorl
shrl
adc
push
int
lock
push
and
imul
jbe
cltd
xor
in
pop
shl
push
or
jno
das
std
mov
xchg
mov
mov
addl
insl
push
pop
test
inc
push
xor
loop
push
sbb
add
fucomip
jnp
in
sbb
xchg
pop
and
cmp
adc
push
outsl
aas
inc
pop
lahf
mov
mov
mov
stc
inc
test
in
inc
or
stc
daa
xchg
fldenv
xor
inc
dec
mov
adc
loopne
popa
adc
clc
pushf
adc
inc
je
pop
push
cmp
xchg
jo
xor
push
dec
into
jo
mov
xchg
imulb
div
aaa
sti
mov
dec
push
dec
popf
mov
out
arpl
pop
lahf
icebp
ds
add
idivb
stos
inc
mov
xchg
inc
xor
in
pop
pushf
pop
into
cmpsl
ss
insl
add
mov
pop
ja
enter
cli
jno
sbb
push
inc
jns
cwtl
rclb
dec
lods
outsb
add
popa
dec
jbe
and
imul
stc
xchg
or
js
jne
cltd
or
mov
mov
cmp
jne
sub
popa
scas
jle
or
in
push
iret
movsl
jge
pop
xchg
sub
ja
sbb
push
cmp
daa
testb
cli
push
adc
cli
sbb
call
and
lds
push
mov
cmpsl
bound
sub
ret
adc
scas
addb
mov
out
xchg
mov
inc
mov
rcrb
fcomps
lahf
iret
daa
sbbb
push
test
cmp
inc
xor
dec
loopne
add
cmp
sahf
sbb
mulb
adc
cld
xchg
pop
fidivrl
addl
data16
lret
sbb
mov
mov
test
rcrb
jbe
ret
xor
imul
mov
xor
rclb
icebp
je
push
inc
or
mov
ret
cli
add
in
stc
rcrl
xchg
jno
iret
fmul
inc
sub
fwait
pop
addr16
outsb
jl
push
insl
push
mov
mov
out
in
mov
and
roll
adcb
jo
or
aad
leave
inc
fistl
gs
stos
fs
cmp
adc
xor
in
jno
pushf
pop
push
daa
mov
jae
jne
mov
pusha
adc
sbb
pusha
xchg
gs
repz
inc
push
xor
xchg
pop
or
pop
and
mov
jle
in
lret
sbb
ss
std
cli
cmp
dec
mov
sub
nop
stc
inc
aam
adc
int
ds
xchg
out
inc
andb
inc
or
adc
js
inc
jl
push
test
xchg
in
insl
jmp
xor
pop
sub
fldcw
outsb
pusha
or
cmp
pop
dec
mov
popa
xor
movsb
dec
sub
cmpsb
push
mov
pop
jo
xor
movl
pop
push
repz
clc
mov
test
clc
in
lahf
mov
push
or
jo
movsl
rorl
mov
arpl
sub
sub
cwtl
mov
mov
lret
in
in
shll
fisttpll
add
mov
fsubl
std
pop
mov
or
pop
pusha
arpl
fmull
inc
mov
aas
push
mov
dec
fsubs
into
incl
xchg
add
aam
dec
mov
fcmovnbe
test
fisttps
mov
push
fxtract
mov
addl
add
ja
cmpsb
ja
cmp
mov
sti
sbb
or
pushf
inc
mov
adc
jle
incl
inc
dec
jp
or
cmp
sbb
or
jo
xor
push
std
jae
stos
mov
add
adc
or
jle
insb
add
cs
testb
mov
inc
pop
push
sub
cld
push
cmp
sbb
cli
cmc
cmp
jne
lock
dec
loopne
mov
sub
into
push
sahf
jns
les
xor
outsb
ss
and
movsb
push
xlat
and
daa
push
adc
xor
pop
and
pop
gs
xchg
or
mov
pop
pop
adc
enter
or
pop
subl
js
push
cld
dec
ja
inc
push
loopne
movsb
sub
inc
mulb
popf
leave
xlat
jno
dec
test
adc
cld
cmpsl
mov
cmp
pop
pop
xchg
or
push
adc
mov
push
sbb
push
movsl
lahf
hlt
mov
mov
sbb
orl
pusha
jecxz
mov
fiadds
mov
dec
popa
inc
xor
scas
or
adc
lea
imul
faddl
dec
sub
add
or
ds
scas
mov
pop
xchg
mov
or
mov
sub
cmp
call
cmpl
cmpsb
mov
mov
cmp
and
hlt
out
bound
outsb
cmp
push
jmp
add
sarb
cmpsl
cwtl
aas
out
sub
cltd
sbb
mov
jle
sbb
add
les
jo
bound
xor
push
cmp
ja
adc
mov
mov
xor
cmpsb
fnstcw
aaa
mov
dec
sbb
mov
mov
push
ja
sub
loop
mov
and
push
mov
pop
jge
cmp
leave
pop
stos
daa
loope
xor
rsm
imul
mov
jno
push
push
in
jle
jmp
cmp
into
adc
add
and
fisubrs
or
add
jp
or
lcall
not
jle
lods
cltd
jno
inc
lods
pop
xchg
lods
cmp
adc
sbb
dec
dec
je
xchg
xor
pusha
ret
pop
fs
popa
loop
mov
scas
pop
mov
shlb
data16
shl
outsl
jp
add
xchg
out
mov
pushf
and
repz
gs
repz
sahf
test
jge
jle
scas
dec
inc
add
sbb
outsb
pop
cmpsl
fldenv
lcall
push
ja
lods
dec
lds
fnstcw
das
ja
pop
dec
adc
in
lods
push
test
adc
jg
and
sbb
pop
jle
xchg
mov
sub
enter
insl
cwtl
xchg
imul
out
xchg
push
sub
rcrb
lret
mov
popa
daa
push
inc
jg
daa
adc
mov
push
cwtl
negl
sahf
dec
stc
xchg
push
jo
arpl
into
push
outsl
push
mov
daa
jno
push
pop
movsl
aaa
in
push
inc
add
push
mov
stos
cs
shlb
pop
repz
sbb
or
lahf
jae
and
aad
mov
in
add
jno
daa
mov
repnz
outsl
movsb
pop
push
stos
and
cmp
and
fwait
stos
repnz
adc
lcall
or
mov
jle
in
jno
mov
and
lea
dec
inc
pop
jbe
or
imul
mov
int3
pop
stos
add
dec
nop
add
test
je
loopne
sahf
mov
cld
xchg
icebp
into
cli
stos
iret
dec
mov
mov
mov
dec
jae
aas
lret
lret
repz
xchg
mulb
imul
jmp
mov
lret
push
shll
and
js
fstpl
ret
or
call
fnstsw
decb
je
lds
popf
mov
jo
push
iret
hlt
sub
push
dec
mov
jmp
fstpt
dec
xor
icebp
cmp
pop
es
pop
ret
mov
mov
loopne
or
push
xchg
les
lcall
fiadds
cmp
ret
jne
popf
inc
add
scas
mov
in
pusha
or
mov
test
jg
movsb
adc
pop
inc
xor
scas
out
push
add
leave
sbb
jge
mov
data16
adcb
cmpsl
adc
xor
push
mov
mov
jns
adc
mov
dec
xchg
dec
adc
push
add
arpl
insl
jae
push
lods
pop
aad
popf
enter
daa
or
movsb
ljmp
aad
scas
or
ret
mov
into
push
sbb
cmp
pop
aam
aam
ret
mov
adc
pop
lds
stc
cmp
push
cmp
lds
push
cltd
ds
inc
std
push
dec
lods
addl
inc
xlat
push
mov
roll
dec
scas
or
jne
adc
aad
dec
addr16
xor
add
xor
js
add
mov
lcall
cld
les
adc
or
xchg
xchg
test
or
and
dec
movsb
in
jmp
mov
dec
inc
dec
fmul
sbb
int
pusha
arpl
mov
pop
mov
stc
xchg
incb
and
das
or
ljmp
aaa
xor
dec
shlb
aas
push
xor
jle
enter
add
pop
ret
or
pop
dec
xchg
inc
inc
addr16
fistpl
push
imul
mov
mov
inc
into
push
sahf
pop
movsb
fcmovnu
mull
jo
ficoms
in
in
insb
ret
mov
mov
xlat
jno
pop
xchg
xorl
and
sub
pop
or
or
xor
in
rolb
fstl
inc
test
out
inc
or
and
xchg
lds
xchg
jne
outsb
aas
fisubrs
bt
iret
testl
xchg
sub
push
fidivrl
pop
mov
pop
mov
add
inc
jae
and
mov
xchg
daa
inc
rcl
adc
inc
jmp
jbe
fistpl
adc
cli
add
jle
sbb
jo
std
ret
adc
xor
pop
pusha
sbb
jbe
out
je
push
lret
repnz
lock
and
push
adc
ret
dec
lods
cmp
dec
mov
testl
mov
bound
testl
fiaddl
pop
mov
out
cmp
in
es
gs
push
sahf
sub
cltd
test
fldenv
push
mov
jns
lock
cmp
cld
inc
pushw
push
or
inc
fisubrs
pop
add
fdivrs
pop
cmp
lret
jg
adc
push
add
lahf
js
cmp
stos
push
inc
leave
add
mov
cltd
out
clc
xor
addb
aas
rcrb
jbe
push
push
cld
test
push
xor
sarl
lds
cmp
pop
push
sbb
mov
mov
cmp
jl
je
fs
repz
call
mov
adc
int
mov
int
or
push
adc
je
xor
mov
mov
fstpl
stc
stos
adc
cmp
dec
xor
int
push
stos
jp
sub
push
pop
fldl
lcall
add
push
fstps
bound
jae
pop
sbb
cmp
jbe
stos
jno,pn
aas
test
push
cmpsl
stos
mov
mov
inc
test
repz
shrl
sbb
jae
xchg
or
cmp
andl
rcll
test
cmp
out
lcall
pop
mov
xchg
xor
lods
mov
stc
mov
xchg
cmpsl
rcrb
movsb
test
pop
cmc
xchg
shl
enter
mov
adc
or
insl
lods
out
cmp
or
xorl
sub
add
sbb
mov
pop
push
push
loopne
lods
adc
dec
push
inc
pop
in
and
mov
mov
loop
fwait
cmp
jl
xchg
stos
and
dec
leave
jbe
xor
jo
test
dec
add
xchg
insl
rcll
push
pop
or
out
js
mov
adc
mov
nop
pop
pushf
int3
insb
in
lds
jle
sbb
into
mov
stos
aaa
sbb
jnp
add
mov
xor
pop
or
ss
push
or
shlb
repz
popf
jno
pop
imul
lcall
push
adc
sub
fistl
in
or
dec
test
sahf
mov
mov
dec
pop
cmp
mov
dec
insl
std
andl
add
aad
std
adc
mov
pop
or
or
mov
adc
daa
add
out
push
int3
inc
rol
xchg
sub
pop
cmp
clc
std
popf
mov
je
out
insl
sbb
mov
ss
inc
pop
out
mov
popa
mov
and
loope
data16
negb
insb
xor
mov
in
sub
stos
dec
cmp
pushf
andb
and
dec
jl
inc
or
daa
test
adc
mull
dec
lret
in
repz
push
scas
jle
pop
push
jne
jno
jle
push
pop
add
mov
data16
jge
gs
dec
mov
popf
inc
cwtl
sbb
jp
daa
rol
rclb
mov
inc
fnstcw
add
sub
in
adc
mov
stc
mov
adc
xchg
lods
insl
dec
mov
pop
into
add
imul
and
inc
sbb
notb
popl
push
sub
jb
sti
xor
subb
dec
lahf
js
xor
add
jns
ja
hlt
popa
cltd
jnp
mov
or
rcll
jns
push
mov
mov
dec
inc
dec
into
inc
inc
or
mov
xchg
out
or
mov
jmp
and
cli
inc
mov
les
out
imul
dec
adc
xor
mov
ja
mov
jp
mov
adc
cmp
push
push
int
repz
lods
iret
mov
shl
lahf
jg
jg
push
pusha
std
popa
ljmp
sbb
js
nop
xchg
adcb
in
jmp
and
pop
inc
push
aaa
cmp
lods
lahf
imul
push
mov
call
fdivrl
dec
add
leave
dec
mov
hlt
scas
adc
leave
icebp
andl
adc
andl
cmp
cli
cmp
push
in
in
pop
xorb
mov
jne
cmc
xor
inc
je
addr16
pop
mov
jbe
cmp
xchg
push
rcll
sub
shlb
dec
inc
rcrl
mov
gs
stc
insl
xchg
scas
xchg
cld
xchg
pusha
in
mov
es
dec
mull
xchg
jne
cs
sbbl
ljmp
xchg
jno
cmpb
mov
dec
loopne
in
lds
mov
sti
adc
fwait
lods
mov
mov
xchg
mov
fldt
xor
mov
pop
adc
shll
or
sbb
sbb
mov
pusha
mov
mov
mov
std
movsl
inc
dec
push
movsb
adcl
loopne
lcall
add
movsl
sub
iret
test
popf
arpl
repnz
out
jne
and
ret
movsb
cmpsb
test
mov
ret
xor
adc
mov
gs
sub
int3
push
mov
decb
rcrl
jge
repnz
mov
ljmp
sbb
daa
xor
mov
mov
insb
xor
idivl
pop
mov
and
sub
inc
repz
sbb
dec
xor
pop
push
adc
xlat
xchg
int3
xchg
hlt
and
adc
xchg
xchg
xchg
or
lea
dec
inc
scas
and
pop
dec
subl
mov
add
inc
scas
cmovne
adc
jne
out
ja
fidivs
mov
jg
xor
jns
out
gs
add
mov
dec
jmp
leave
xor
outsb
loop
mov
mov
and
or
add
cmp
mov
inc
cmpsb
pop
jecxz
mov
jmp
cld
mov
ljmp
or
mov
cmp
ljmp
push
pop
and
pop
cmpsl
out
scas
mov
sub
xor
movsl
les
popf
cli
outsb
jns
aam
sti
mov
fidivrl
cmp
push
mov
popa
mov
dec
and
aas
or
mov
cwtl
adc
in
jle
lret
mov
pop
data16
pushf
daa
dec
outsb
adc
int3
mov
inc
repz
ss
dec
dec
hlt
fidivl
sti
dec
cmp
pop
imul
cmpsl
cmp
mov
lock
xor
xlat
fisubl
stc
out
mov
and
fisttpll
and
fs
mov
push
sub
popf
push
enter
scas
leave
scas
js
or
or
cmp
daa
repnz
adc
push
sub
sub
daa
jp
aaa
add
notb
cmp
loope
sbb
cs
aad
aaa
shrb
or
push
xchg
jns
sub
add
xchg
push
cmpsl
out
ret
addr16
dec
mov
test
mov
pop
adc
outsb
mov
xchg
lock
and
ficoml
loope
xchg
fcomps
push
add
or
and
mov
push
jle
or
imul
sub
xchg
pusha
movl
daa
dec
cmp
and
cs
fwait
mov
cmpsl
adc
divb
loope
stos
fwait
out
adc
lahf
test
adc
jp
cmp
jl
ret
rcrl
cmp
push
jnp
ret
push
lock
incb
xchg
test
push
sub
mov
fwait
sub
ss
lds
pop
fdivl
mov
xorl
xchg
das
xchg
mov
into
jle
icebp
and
dec
xchg
mov
and
and
fistl
insb
rorb
daa
xchg
insl
shrl
mov
push
adc
cli
outsl
stos
xor
or
pop
rclb
push
inc
cwtl
shlb
xchg
jbe
xor
scas
push
daa
dec
sbb
xchg
inc
decb
pop
push
cltd
andl
or
icebp
or
sub
cmp
sbb
cmp
cltd
test
sub
rclb
lods
in
in
jo
cwtl
mov
lret
xchg
popa
sti
imul
mov
and
in
mov
push
repnz
outsl
xor
imul
add
test
xor
or
das
push
enter
aaa
mov
cli
and
movsb
xchg
and
pusha
mov
xchg
testb
push
stos
into
cwtl
dec
arpl
lds
hlt
sbb
in
lret
dec
push
ficompl
inc
sub
push
fs
enter
bound
imul
dec
pop
and
pop
add
stc
insb
or
sub
sarb
or
in
dec
sbb
pop
inc
in
imul
fdivr
lahf
mov
pushf
fidivrl
jg
pop
pop
sbb
jnp
push
xchg
add
daa
pop
or
call
out
jg
jns
xchg
hlt
outsl
fldenv
sub
jae
sbb
cmp
xlat
clc
loope
out
xchg
mov
mov
jno
cmp
mov
imul
jmp
and
mov
xchg
xor
sbb
repz
test
frndint
xchg
and
arpl
nop
nop
pop
add
fwait
out
mov
or
jl
sub
outsb
fldt
inc
sarl
or
lods
xchg
ljmp
inc
test
xor
je
cmc
aaa
push
jecxz
call
jo
js
jp
insb
mov
adc
test
pop
push
and
pop
test
sbb
out
jle
mov
lds
aas
mov
fistl
dec
test
rorb
lret
sarl
xor
ret
inc
in
loopne
ljmp
push
movsl
xchg
jne
mov
push
fistps
data16
stos
sub
outsb
roll
mov
mov
xchg
insl
fmull
mov
mov
inc
push
lea
lahf
fdivs
movsb
test
mov
aam
sbb
jno
bound
test
repnz
pop
xchg
in
bound
into
lcall
push
inc
mov
inc
data16
hlt
jbe
out
daa
je
mov
dec
int
pop
in
sarl
ret
mov
add
mov
dec
cs
in
xchg
add
rolb
inc
jp
push
push
unpcklps
movsl
bound
gs
int
lods
mov
push
aad
aad
loopne
dec
sub
cmp
push
mov
jg
pop
dec
data16
stos
jle
bound
lcall
nop
shlb
jmp
push
inc
outsb
enter
pushf
out
cmp
cmp
stc
loopne
cmp
lcall
mov
loopne
dec
jns
sarb
out
or
or
divl
or
das
mov
aad
sub
or
ret
push
adc
xor
mov
leave
pop
sub
push
out
or
sti
pop
push
fs
add
mov
pop
xchg
popa
fsubl
mov
cltd
cli
xor
ljmp
ja
and
cmc
mov
xlat
inc
push
xlat
and
inc
rcll
fidivrs
push
mov
stos
mov
mov
inc
lods
jae
cwtl
sub
mov
movsl
mov
adc
hlt
sub
mov
add
loopne
xor
cmpsl
sub
test
leave
mov
mov
jb
stc
lea
mov
jbe
jl
and
or
pop
push
pop
das
imul
test
mov
scas
lret
les
out
push
cmc
mov
pop
or
jne
or
idivb
movsb
jns
add
sub
dec
xchg
fs
jne
sub
out
fistpll
and
dec
icebp
fstl
sahf
sub
jg
mov
mov
cmp
cmc
push
enter
call
out
cmp
mull
mov
lret
call
inc
sub
xchg
adc
mulb
movsl
xor
dec
call
inc
ret
jge
fmul
or
jle
ja
xchg
ret
or
aam
test
clc
cmpsb
push
sbb
xchg
xchg
ret
ja
jne
jns
adc
jp
negb
xchg
jb
jae
mov
movl
jno
fmuls
shl
pop
sbb
adc
sbb
xor
mov
inc
mov
mov
rolb
call
das
out
and
jb
negl
scas
test
ljmp
xor
scas
cmp
cltd
pop
fidivrl
xchg
or
mov
stos
jmp
rclb
jbe
ljmp
movsl
aam
cs
test
fbld
rcrl
cmpsl
add
jno
push
fisubs
shl
pushl
sbb
push
cmpl
dec
ds
pop
mov
adc
sbb
shl
xchg
pop
pop
and
sub
mov
dec
pop
sub
mov
iret
fidivs
dec
pop
insl
and
insl
vmovntps
mov
mov
mov
jnp
pop
mov
mov
dec
ficoms
sub
sbbl
lods
mov
xlat
rcr
neg
shl
shl
adcl
pop
fistps
mov
js
jl
fisubs
outsl
mulb
mov
sub
adc
push
lret
call
mov
sbb
bound
push
jle
push
jbe
sbb
push
hlt
xchg
fidivs
mov
xchg
lret
push
adc
mov
mov
xor
mov
imul
sahf
pop
in
mov
sbb
cmp
int
xchg
sub
sbb
push
dec
jnp
xlat
lods
imul
call
adc
idivb
add
fiaddl
inc
push
out
cltd
adcb
test
mov
fnstsw
pop
pop
stos
pop
push
decb
push
aaa
inc
insl
stc
xlat
and
stos
dec
inc
test
push
fsubr
mov
adc
dec
call
xor
and
inc
flds
sub
in
jo
mov
push
sbb
mov
mov
loopne
icebp
xchg
sub
mov
mov
iret
rcll
not
iret
cltd
mov
hlt
xor
ror
xchg
jl
dec
xchg
outsl
inc
push
push
imul
pop
jg
sub
rcr
push
sahf
pop
push
lods
dec
sbb
lds
jge
xchg
adc
adc
aas
pop
jmp
test
add
cmp
loope
and
dec
cmp
push
imul
bound
mov
inc
inc
mov
sub
xchg
sub
shl
mov
lock
push
aaa
lret
inc
call
ret
loopne
bnd
dec
or
in
ffree
ss
ds
sbb
and
dec
pop
adc
es
cmp
mov
sub
jb
arpl
into
pushf
stc
pop
sbb
pop
mov
push
push
push
mov
mov
lods
dec
test
lods
jle
adc
add
in
fnstenv
push
shlw
mov
mov
xchg
scas
shll
repz
mov
jle
les
jge
sbb
or
cmp
or
inc
mov
add
and
ja
int3
jge
hlt
mov
add
xor
bnd
js
into
imul
enter
jnp
pusha
dec
xor
cmp
or
rcl
mov
daa
xorb
insl
mov
lock
out
lods
aaa
fs
scas
sti
lahf
xchg
lret
call
ds
jns
test
lcall
xor
fldl
sahf
movsb
imul
push
pop
add
sub
fnsave
daa
imul
dec
dec
popf
mov
out
jecxz
and
jecxz
xor
jmp
add
cli
roll
and
pop
dec
pop
in
or
outsb
jbe
dec
arpl
xor
add
rcrl
arpl
aaa
sbb
xor
jo
dec
xchg
popf
push
stos
mov
sbb
mov
fcomi
lock
sbbb
add
fstpl
mov
inc
mov
dec
movsb
jmp
inc
icebp
test
out
or
jb
mov
hlt
adc
mov
cmp
scas
adcl
loopne
sbb
sbb
xchg
dec
jmp
push
sub
add
icebp
cmp
hlt
sub
cmp
and
mov
cmp
sbb
scas
sbb
ds
jno
jne
orl
mov
faddl
scas
shll
pop
aaa
cmc
inc
cmp
pop
xlat
push
jb
cmp
add
xor
pop
push
aas
enter
shlb
cmp
loopne
sub
test
das
push
dec
dec
xchg
and
imul
rcll
xor
or
sub
loope
jle
fwait
xor
leave
js
push
add
adc
data16
rolb
pop
loope
test
or
mov
hlt
cmp
mov
sbb
mov
mov
xor
push
fdiv
xlat
out
adc
xchg
aas
mov
jl
dec
dec
imul
popa
js
sbb
or
fimull
dec
sub
or
scas
cmp
mov
and
iret
je
int
cmpsb
jmp
inc
pop
sbb
dec
sub
lret
push
enter
mov
cmc
dec
fwait
in
push
fildl
inc
and
movsl
xchg
adc
dec
call
xchg
imul
ljmp
cltd
loope
xchg
popa
fisubrl
stos
push
mov
lea
in
xor
pop
sbb
das
les
stos
mov
jge
and
stos
sub
inc
sub
imul
mov
jae
mov
cmc
shrb
mov
xlat
jecxz
and
lock
push
fdivl
arpl
cmp
mov
repnz
dec
xor
jmp
gs
cmpsb
and
aaa
mov
jne
loop
stc
pop
scas
inc
fbstp
xchg
lock
imul
fnstenv
insl
mov
shl
jmp
add
loopne
repnz
in
cmp
push
cmp
cmp
pop
rcll
dec
dec
sub
into
pop
dec
sub
sahf
mov
or
mov
data16
lea
mov
scas
lock
cli
xchg
sbb
loop
ds
call
adc
sub
ss
rclb
push
imul
sbb
sub
jmp
enter
mov
mov
es
inc
sahf
dec
out
or
cs
in
cmp
imul
aaa
lret
pop
ja
lcall
mov
or
xchg
popa
mov
mov
or
xchg
push
arpl
in
fnstsw
jmp
sbb
cmc
cld
fldcw
xchg
push
cltd
push
add
dec
xchg
aam
sub
push
jle
aam
adc
imul
lock
inc
adc
inc
popf
lret
jnp
insb
ja
pop
imul
incb
stos
mov
pushf
and
dec
loop
inc
or
or
pusha
sub
inc
shlb
sub
aam
test
outsb
xor
testb
pop
mov
inc
sbb
adc
ljmp
data16
ss
clc
pushf
cmp
fucomp
mov
les
sub
jne
and
push
push
push
mov
pop
mov
jns
in
test
pop
jecxz
int
test
ljmp
pop
stc
test
mov
adc
xchg
jb
jmp
pushl
jp
and
push
xor
subl
int3
outsl
cmp
add
inc
jae
daa
adc
fcomps
or
cmp
lret
mov
lahf
fdivrs
in
fwait
dec
mov
add
push
sbb
push
icebp
outsb
cmp
idivb
call
push
lcall
incb
xlat
aam
addr16
push
into
shlb
leave
jbe
in
lcall
xor
inc
cmc
loop
inc
inc
dec
aaa
popa
xchg
mov
gs
adc
iret
push
add
xor
sarl
rorb
stos
xor
adcl
bound
ds
daa
bound
test
jmp
mov
pop
psrlq
add
pop
gs
jnp
xor
lahf
test
sub
adc
aam
inc
fcompl
jp
int
movsb
jle
xchg
xchg
push
mov
test
pushf
aas
mov
sbb
jl
jo
pavgb
lahf
lock
popa
lahf
xchg
cld
pushf
shlb
mov
aaa
xchg
enter
sbb
inc
lea
sub
xor
into
pop
or
lea
adc
mov
out
ret
test
jbe
fs
jb
mov
aam
outsl
data16
std
and
push
aas
jae
mov
push
out
pop
pop
mov
clc
lock
pop
ret
enter
cltd
lret
mov
inc
out
outsb
pop
sbb
out
mov
ret
push
nop
mov
lahf
in
dec
pop
js
subl
cmp
lret
push
in
clc
jmp
jl
xchg
ret
xchg
jae
in
or
sbb
cmpsl
shlb
lods
inc
push
addr16
add
stos
jge
lahf
ja
cmp
sbb
lock
movsb
test
pop
cmc
push
lcall
adc
arpl
fdivrp
mov
in
repz
bound
decl
into
xchg
inc
jb
fistps
int
push
sahf
sub
push
adc
nop
movsb
ficomps
lret
xchg
lret
xchg
push
dec
dec
aam
and
or
mov
fstps
adc
mov
ds
lock
out
js
sbb
sub
fisubrl
fsts
cmpsl
shlb
add
gs
xchg
mov
lcall
out
add
jle
xchg
sbb
add
clc
lret
pop
aad
aad
addr16
rcrl
lods
cmp
jnp
push
adc
inc
repnz
jns
orb
in
syscall
adc
sub
shlb
imul
xchg
lds
cmovs
xchg
shlb
jne
pop
lcall
loop
jbe
adc
fcoml
mov
cmpsb
mov
sahf
rcrb
and
pop
cli
cs
movsb
xor
or
jo
mov
aam
mov
popf
js
push
fnstsw
inc
pop
pop
bnd
pushl
pop
xchg
mov
test
push
mov
jne
push
dec
inc
mov
es
add
mov
aad
hlt
jp
dec
mov
push
pusha
ret
fisubl
xchg
mov
jge
rclb
mov
and
dec
rcl
fnstsw
or
sarl
sbb
imul
jns
lods
mov
jl
jno
insl
jge
addr16
scas
shrl
adc
pop
inc
adc
jo
fldenv
jo
cmp
or
movsl
shrl
push
push
icebp
testl
out
mov
dec
pop
push
jns
fidivs
xchg
outsl
dec
or
or
and
scas
mov
or
enter
push
lcall
int3
mov
movsl
xor
clc
subl
inc
adc
rcrb
lret
stos
ds
fistl
dec
sub
cmp
jecxz
sub
pop
jge
push
ja
mov
loope
arpl
mov
mov
call
clc
scas
push
jge
mov
pop
cmp
or
jmp
int3
orl
xchg
inc
pop
dec
jnp
outsl
mov
dec
ret
test
inc
and
aas
sbb
fldcw
pop
mov
lds
jge
iret
stc
rcr
xor
pop
push
in
push
jge
push
sbb
int
popa
in
pop
je
insb
pop
cs
adc
popa
lahf
adc
outsb
jmp
and
popa
sahf
sbb
mov
dec
push
test
je
mov
jge
testb
adc
jb
ljmp
add
dec
push
mov
pop
std
cmp
nop
jmp
ret
sbb
or
mov
mov
adc
aas
lcall
cmp
ja
push
decl
lods
mov
pusha
fidivrl
push
jmp
divl
pop
or
cmpsl
pusha
jl
daa
clc
aaa
incl
int
movsb
scas
shrb
scas
test
shl
jb
dec
adc
hlt
mov
pop
lods
cmpsl
mov
push
jle
repz
insl
lock
mov
in
int3
iret
lcall
adc
adc
js
test
or
add
fstp
cmp
cmpsb
stos
pop
lret
mov
pop
xor
int
sub
shrl
sub
jg
rorb
cld
testl
scas
int
inc
dec
aad
out
enter
xor
adc
jle
cs
pop
sbb
test
inc
add
sbb
mov
in
test
out
pop
xor
dec
movl
add
push
lods
subl
mov
adc
pusha
cli
add
push
mov
loop
mov
mov
and
insl
dec
inc
pop
pop
mov
mov
mov
and
stos
fbstp
pop
add
push
jo
add
fcomip
adc
in
mov
outsl
mov
sbb
ss
outsl
mov
loopne
orl
mov
or
xchg
aam
xchg
pusha
pop
hlt
dec
xchg
mov
mov
bnd
lock
or
sbb
shlb
loopne
arpl
popw
pop
cmp
dec
cmp
pop
lock
or
sub
daa
lds
push
lret
mov
shll
mov
xchg
jne
xchg
lods
mov
daa
mov
xor
jge
or
lret
pusha
out
inc
mov
push
je
mov
push
inc
jnp
and
or
cld
pop
movsb
loopne
test
lods
adc
push
je
push
add
cs
loopne
push
mov
pop
jmp
mov
fildll
dec
adc
aaa
leave
jo
jle
mov
jp
out
or
mov
ljmp
or
rep
jne
int
popa
inc
ja
fidivrl
pop
jecxz
adc
jb
fadds
or
pop
jb
cmpsl
sub
pushf
mov
inc
and
push
in
dec
lcall
dec
data16
orl
std
out
push
lods
fldl
and
pop
jmp
xchg
dec
push
push
test
push
sbb
andb
bound
inc
push
push
pop
push
mov
daa
lcall
add
jae
cli
gs
add
mov
and
jl
hlt
xchg
fistl
es
mov
fwait
sbb
push
fwait
imul
repz
sub
or
stos
inc
hlt
pop
aad
in
adc
addl
jg
fs
push
es
cmp
adc
xchg
mov
cmp
aas
imul
dec
pusha
pushf
data16
ss
jmp
movsb
and
enter
add
sub
jb
loope
and
cmpsb
shlb
mov
jo
mov
xlat
push
jb
mov
xchg
loopne
mov
push
pop
jns
decb
mov
jmp
bound
or
aaa
lcall
add
adc
insb
mov
into
jo
negb
sbb
sbb
pop
es
mov
xor
lret
shlb
push
mov
adc
jb
or
or
icebp
mov
xchg
sub
cli
lods
or
inc
push
ret
pop
and
das
cmp
jp
dec
sub
pop
pop
orl
xor
inc
sti
mov
add
lock
adc
cmp
je
push
cmp
fsubp
aas
xor
popf
dec
xchg
gs
pop
sahf
sub
movsl
outsb
or
jp
jmp
jl
jge
pop
ror
mov
mov
sbb
lods
aam
std
push
adc
push
and
jecxz
cli
mov
push
hlt
jb
dec
fsub
jmp
adc
wrmsr
into
push
push
idivb
nop
pop
cmp
sbb
pushf
xor
ja
std
dec
arpl
mov
adc
decb
push
movb
sbb
pushf
shlb
inc
xor
sbb
add
and
test
and
inc
sub
ret
stc
cli
jne
pusha
jae
inc
clc
mov
lret
fsubrs
cmp
aam
mov
testl
or
mov
xor
cmp
cmpsb
mov
roll
lret
aaa
or
int
cmp
sti
cmp
subb
rorb
cmp
xor
shlb
dec
mov
gs
jns
faddl
push
cmp
jbe
push
cltd
ret
sbb
sbb
adc
sbb
pop
pop
pop
cmp
je
lahf
mov
inc
pop
pop
xchg
sbb
inc
push
dec
sbb
push
cltd
out
xor
fstps
cs
enter
int3
and
cli
push
pop
pop
test
pop
pop
std
enter
jle
xchg
ss
cmp
lea
mov
mov
repnz
cltd
push
pop
rcrb
dec
into
pop
stos
std
and
mov
cltd
rcll
sbb
xchg
aad
in
in
imul
test
or
sub
test
icebp
inc
addb
add
aas
out
cwtl
and
sbb
int3
int
push
pop
fldenv
addr16
je
cmc
cmovne
jb
testb
add
lods
pop
add
scas
adc
es
push
outsl
mov
mov
pusha
insl
fwait
mov
enter
cs
cmp
test
jmp
cmp
cld
or
dec
roll
jmp
fs
jmp
imul
and
repnz
sbb
iret
inc
stc
mov
and
or
mov
xor
std
mov
cmp
mov
or
mov
cmp
out
fstp
or
scas
fistpll
and
stos
mov
popa
pusha
mov
das
adc
mov
dec
xorl
out
mov
jecxz
outsb
pop
add
mov
ljmp
test
jbe
jmp
div
cmpsb
sbb
mov
add
mov
mov
jne
jge
sbb
or
inc
sbb
add
cli
rcrb
xchg
cmpsl
inc
testl
and
mov
lds
jp
xor
adc
dec
test
pop
mov
jae
lods
cmp
cmpsb
leave
sub
inc
or
mov
cmp
addr16
push
out
dec
mov
jle
or
dec
xchg
pushf
xor
mov
push
sbb
jb
cmpsl
and
xor
jns
repz
in
mov
mov
sub
dec
fstps
add
bnd
jecxz
mov
jo
lds
push
cli
lcall
push
or
xchg
imul
outsb
leave
test
lahf
dec
push
xchg
ds
add
mov
xchg
mov
xor
cmp
inc
xor
mov
shll
xchg
cmpsb
push
outsb
arpl
adc
xorl
and
jle
cld
xor
adc
xlat
les
imul
mov
cmpsb
icebp
stos
mov
std
out
xor
loop
fcomps
dec
ds
repnz
push
jnp
call
lret
fiaddl
lret
xchg
inc
in
aad
mov
jnp
sub
add
test
mov
mov
scas
cmp
dec
mov
add
push
cmpsl
and
mov
add
pop
sbb
or
cmp
cmp
arpl
pushaw
cmpsl
jl
inc
adc
dec
pop
xor
loop
aam
lahf
sbb
aas
sub
jmp
push
push
std
hlt
xor
xchg
xchg
std
cmp
js
sub
lret
sub
xor
sub
push
and
fisubrs
addl
leave
xlat
lcall
xor
jae
je
iret
mov
fistl
lret
jp
stos
dec
test
mov
pushf
aad
sub
loop
popf
or
ds
shrl
popf
inc
arpl
pop
mov
mov
push
fisubs
push
rcll
add
jmp
adc
imul
pushl
push
inc
loopne
push
mov
sar
push
movb
dec
add
inc
sbbl
push
inc
je
xchg
push
mov
cmc
push
fwait
push
sarl
sbb
dec
push
pop
mov
jge
in
and
xor
jecxz
into
cmp
pushf
xchg
jp
jns
sub
dec
dec
adc
mov
hlt
xchg
or
or
dec
jb
arpl
xor
xor
test
push
xchg
popa
fwait
mov
dec
push
imul
in
xorl
std
jb
sahf
mov
loope
xlat
sbb
sbb
rcr
cwtl
lock
dec
jecxz
sub
jmp
or
lret
aad
jb
dec
adc
xchg
jecxz
pop
mov
loope
ja
hlt
xor
rcrl
js
xor
mov
call
add
ret
sub
leave
movsb
jg
lret
int3
push
jmp
cmpsb
fistpll
mov
pop
adc
inc
fists
mov
les
add
gs
adc
mov
mov
gs
aas
cmc
loope
dec
in
aas
roll
call
or
mov
adc
shll
jg
in
push
jb
pop
xlat
arpl
mov
leave
in
outsb
roll
ds
mov
jle
fistpl
lods
push
faddl
push
inc
outsl
out
stos
lock
sti
pop
sbb
in
adc
or
push
or
inc
cmpsl
imul
in
int
rcl
imul
xchg
jae
cli
fwait
mov
ret
rolb
inc
into
mov
fdivp
in
sbb
pusha
clc
shrl
outsb
jb
mov
pop
movsb
test
mov
cmp
andl
pop
sbb
pusha
movsb
outsl
mul
mov
stos
sub
push
jb
mov
gs
stos
add
cmpsb
adc
je
pop
inc
test
cli
cmc
jns
rcll
dec
push
dec
mov
repnz
jnp
pop
mov
in
in
lods
add
lods
mov
or
stc
into
ljmp
enter
jl
pop
sub
movb
push
pop
cmp
jne
mov
inc
in
in
mov
sbbb
mov
mov
and
mov
pop
pop
sbb
jmp
and
jb
iret
cld
push
jno
scas
sbb
dec
and
inc
pop
lock
mov
ret
dec
cwtl
push
and
bound
hlt
fadds
xchg
cs
dec
out
loop
push
cmp
push
shll
enter
iret
lahf
js
mov
push
call
jl
scas
scas
cmp
mov
sub
lock
sbb
dec
aaa
mov
mov
cmp
or
push
jae
cltd
mov
xchg
lds
push
adc
jp
ja
in
aam
insb
int
mov
ljmp
outsb
jne
mov
add
fs
lret
xor
ret
pop
lods
dec
and
inc
lret
cmp
mov
divb
into
rcr
es
ret
and
cmp
movhps
lret
popf
sub
ljmp
int
ljmp
push
movsl
ja
jp
arpl
cmpsl
jbe
lcall
inc
fcmovne
mov
sbb
adc
repnz
sbb
jb
xchg
cmpsb
fwait
xchg
mov
fisubrl
testb
xchg
xor
adc
in
in
xor
jo
lret
xor
jl
es
pop
adc
jmp
out
push
faddp
fcmovnu
je
mov
sub
aaa
pop
sub
fidivl
inc
push
xor
stos
aas
sub
mov
in
mov
xor
je
mov
mov
rorb
xchg
mov
out
ficomps
loopne
xor
lret
cmp
ficoml
mov
mov
data16
and
ljmp
dec
mov
outsb
mov
fidivl
pusha
fimuls
jp
cmp
xor
imul
test
cwtl
lret
pop
mov
sti
pop
scas
rcrl
call
dec
or
std
sub
gs
sub
ja
mov
mov
out
adcb
xlat
push
jno
xor
lods
stc
cmpsb
and
dec
outsb
not
xorb
mov
lahf
mov
int
ret
pop
jnp
push
mov
pop
add
sbb
ret
leave
call
inc
jmp
pop
push
add
mov
cwtl
fstps
or
mov
pop
cmp
and
stos
pop
sbbb
shrb
les
outsb
pusha
jecxz
lret
mov
inc
xor
fdivl
dec
mov
add
mov
fsubrl
push
fwait
ja
xor
jb
nop
sub
jne
jmp
lret
push
push
dec
je
pushf
inc
xchg
ss
inc
nop
push
lahf
jl
push
and
sbb
sub
loop
xchg
clc
sub
cmp
in
in
test
sub
mov
and
jmp
cli
sti
add
cmp
jne
xchg
aas
sub
cmpsl
out
in
ds
push
jl
jbe
mov
lea
fstp
adc
mov
sbb
mov
sub
pusha
mov
lahf
mov
inc
and
cltd
jmp
test
out
push
insl
jecxz
shr
jl
rorl
adc
cmp
mov
sbb
jl
sbb
cs
or
sbb
imul
pop
push
outsb
imul
xchg
inc
adc
pop
add
jnp
mov
bound
push
pusha
or
enter
outsb
mov
addr16
push
pop
sub
fcos
sbb
push
or
mov
sub
popf
mov
test
push
cli
mov
gs
daa
push
push
pop
movsb
mov
mov
js
pop
add
sub
mov
outsb
scas
out
mov
or
fwait
shrl
dec
sub
sbb
push
mov
xor
enter
inc
pop
push
dec
shlb
sbb
mov
repnz
dec
fdivrp
push
adc
rcl
add
insl
inc
xor
stos
mov
lods
mov
popf
sarl
dec
out
lods
sbbb
mov
pop
cmp
xchg
xor
insb
bts
aas
jne
mov
mov
sub
xlat
mov
pop
pushf
test
xlat
aam
loope
cltd
add
pop
xor
pop
cmpsl
mov
imulb
addr16
xchg
sbb
movsl
xchg
add
into
add
adc
test
push
mov
outsl
inc
jb
faddl
and
mov
notb
aaa
arpl
sbb
push
addr16
fmull
dec
push
mov
or
push
push
adc
cmp
rcrl
inc
in
orl
inc
cmp
or
aad
loopne
xor
enter
je
les
cmpsb
mov
lret
lods
movsb
sub
loopne
imul
sub
scas
pop
jmp
cmc
cmpsl
add
fadd
adc
mov
mov
pop
xchg
in
in
mov
cmp
lret
xor
jno
sbb
aad
cmp
je
pop
loopne
mov
aaa
enter
mov
ror
in
es
dec
xchg
mov
mov
cmp
and
popf
addr16
movsb
and
adc
push
call
xchg
mov
lret
repnz
xor
into
jl
push
mov
icebp
fdivrp
jle
sub
jp
xor
add
or
lret
mov
les
ret
gs
pushf
sbb
idivb
mov
insb
call
bound
adc
inc
test
push
test
test
outsl
sub
shrd
and
mov
push
notb
push
iret
insb
or
lds
lods
jbe
repz
adc
xor
jmp
addr16
out
in
sub
stc
aas
mov
mov
cmp
jmp
pop
cs
pop
add
or
mov
mov
scas
pop
sarb
push
pop
outsb
ret
jne
cmp
imul
add
push
movsl
cmpsb
aad
enter
mov
cld
mov
daa
test
cmc
add
sbb
andl
std
loop
dec
clc
imul
pushf
cld
add
ficoms
xchg
inc
add
lock
shr
lcall
ja
dec
test
adc
pop
scas
sub
xor
adc
push
ljmp
xor
adc
cwtl
fneni(8087
jnp
and
pop
add
mov
and
aam
repnz
sti
out
aam
xor
inc
jle
inc
jns
repz
dec
push
mov
shll
pop
xchg
clc
sub
xor
xor
mov
jl
mov
sub
jle
add
inc
mov
sbb
or
push
inc
inc
mov
dec
adc
jb
in
inc
stos
loop
fdivl
scas
mov
push
pop
mov
test
scas
jae
add
cmp
xchg
push
ret
data16
or
aad
mov
hlt
loope
aas
mov
aam
lahf
sub
ja
jle
add
int3
inc
and
jecxz
mov
sbb
add
pop
mov
mov
mov
js
mov
jno
jo
cmpl
shlb
fdiv
xlat
and
fidivrl
lds
mov
cvttps2pi
mov
or
inc
sahf
add
in
adc
scas
add
xchg
dec
add
or
popa
cmpl
sar
mov
and
dec
sbb
push
fwait
or
test
and
sbb
cmp
div
loopne
in
cmp
sarl
ret
xor
jge
lahf
xchg
jae
stos
pusha
imul
xor
mov
pop
fisubrl
arpl
xchg
adc
dec
xchg
mov
int
push
stos
pusha
pusha
test
mov
lock
fisttpl
fdivl
mov
add
jae
stc
push
out
add
push
lret
loop
aaa
hlt
inc
mov
repz
stc
dec
sub
rorb
scas
pop
fcomps
bound
js
movsl
das
sub
mov
bnd
push
mov
scas
xchg
aam
mov
std
push
inc
pop
and
dec
xchg
mov
in
sbb
push
xchg
int3
mov
ljmp
sub
jp
pushfw
xor
fbld
negl
sub
mov
mov
or
aam
fcmovne
sub
push
into
std
or
push
jmp
sub
mov
cmc
sbb
push
xor
mov
aad
out
fcompp
sahf
sbb
imul
outsl
orl
sbb
nop
xlat
xchg
inc
mov
in
add
in
jne
mov
std
jo
and
int3
push
clc
stc
jp
add
popf
jae
cs
push
cltd
sbb
and
mov
pop
lahf
ss
pop
cld
mov
fcmovb
mov
jmp
dec
jl
jae
jo
add
fs
scas
test
imul
push
mov
mov
mov
jae
out
dec
aad
addr16
sbb
aaa
mov
in
mov
in
je
ret
test
pop
movsl
adc
add
jecxz
sbb
lret
fildl
insb
pop
in
dec
out
inc
pop
inc
sub
ret
shlb
cmpsb
mov
int
dec
dec
pop
mov
cmp
lods
insb
adc
lcall
jg
cmp
xlat
in
or
jg
cltd
lret
stos
inc
stos
lret
add
movsl
pop
or
mov
cmp
pop
lea
xor
xlat
ljmp
lret
and
inc
add
jb
lret
arpl
rclb
fwait
pop
lahf
call
xor
pop
imul
aas
push
push
out
xor
lcall
imul
shrb
pop
sub
sahf
shll
pop
push
xor
fldl
add
loop
xor
mov
jmp
jle
pop
icebp
js
xchg
mov
sub
xchg
or
push
jg
cmp
icebp
push
fildl
mov
in
jb
faddl
out
stos
mov
cli
push
jg
neg
mov
add
dec
or
or
mov
loopne
mov
push
je,pt
inc
hlt
push
inc
scas
mov
in
mov
cmp
push
or
js
ds
leave
mov
andb
mov
or
adc
clc
imul
in
outsb
fadds
fisttps
sti
cmp
xor
cmp
ret
xor
cmp
jle
adc
mov
xchg
out
rcrb
add
push
movsl
addr16
xchg
lahf
mov
es
jp
mov
adc
lock
mov
push
movsb
jno
loope
inc
pop
lea
ficoms
or
lahf
jp
cltd
adc
xchg
cmp
cmp
lret
sub
fnsave
pop
xchg
push
adc
cli
out
popf
fwait
sti
push
shlb
inc
loope
cmpl
add
sbb
int3
mov
jmp
out
repnz
idiv
scas
ss
popf
sbbl
jbe
lock
cmp
sbb
jg
mov
outsb
fwait
cli
shl
push
mov
das
faddp
ret
add
adc
cli
inc
and
fnstenv
lahf
jmp
sbb
add
ret
imul
fwait
inc
fiadds
fiadds
adc
cltd
addl
mov
cwtl
test
call
mov
dec
xor
mov
pop
lods
xchg
in
cmpsb
pop
jg
jp
mov
mov
push
dec
call
jle
or
data16
mov
xchg
mov
or
dec
std
testl
ds
push
imul
iret
and
fiaddl
in
addr16
push
xchg
test
adc
mov
sahf
enter
cmc
jmp
add
or
cld
int3
sbb
lret
das
in
adc
out
jo
jo
das
xchg
stos
int3
or
inc
dec
xchg
push
lods
jne
mov
insl
lret
add
or
inc
inc
sub
adc
test
cmp
sub
js
orb
shl
mov
mov
dec
jnp
rcrl
jae
scas
sub
cli
pop
jnp
jnp
add
jae
xchg
cld
bound
enter
insl
out
daa
stos
push
cmp
int
mov
pop
es
mov
test
add
insb
shlb
cwtl
inc
xor
sti
adc
incl
jo
addr16
leave
pushf
xor
out
es
mov
movl
pop
push
ds
ds
xor
test
jbe
sbb
cmpsl
fistpll
mov
add
pop
sub
push
data16
fistpl
mov
or
lret
mov
daa
mov
insl
mov
push
cmp
sub
sahf
scas
scas
movsl
push
push
mov
aam
dec
pop
scas
mov
rcl
outsl
adc
xchg
pusha
enter
lock
mov
ja
mov
mov
mov
loope
icebp
lahf
mov
js
shlb
out
xlat
jp
pop
js
or
gs
mov
cmp
push
imulb
pop
aam
das
ror
adc
aas
add
add
and
fwait
xor
loopne
aas
loope
dec
push
pushf
imul
out
shl
insl
dec
mov
dec
jmp
les
sub
xchg
push
push
inc
xor
and
ljmp
insb
jno
das
and
xchg
lock
push
or
push
dec
pop
sub
outsl
mov
fstpl
mov
loopne
mov
repz
inc
push
push
xor
sbb
push
push
adc
and
xor
scas
sbbl
xchg
and
mov
pop
in
add
cmp
lcall
packssdw
cmp
mov
adc
adc
adc
cmp
jp
mov
cld
cmp
sub
loope
popa
fwait
std
lret
push
cwtl
xor
ja
fmull
add
or
outsb
sbb
pop
adc
mov
xchg
jns
pop
aaa
sub
adc
inc
mov
xchg
mov
stos
and
imul
mov
and
xchg
adc
stos
mov
andb
scas
andl
mov
fabs
and
pop
dec
xor
ss
lock
pop
roll
fnsave
adc
cmp
cmpsl
clc
dec
js
inc
repnz
mov
les
push
inc
loopne
adc
jecxz
mov
pushf
mov
add
fsubs
int
test
scas
xchg
push
mov
test
lds
loop
or
movsl
insb
jne
mov
mov
push
icebp
lahf
pop
mov
pop
add
cs
dec
add
ja
xchg
into
jnp
add
mov
test
ja
fistl
add
jnp
pop
jbe
inc
inc
fbld
orl
imul
nop
add
daa
push
xchg
sub
jae
push
sub
ds
ds
push
mov
iret
dec
nop
loopne
and
sub
xor
rorb
inc
inc
add
test
xchg
cld
jo
mov
in
daa
sbb
mov
jae
dec
mov
test
in
lahf
push
dec
and
rcr
cmp
orb
mov
dec
push
sbb
lcall
push
sub
sbb
and
ret
mov
inc
cmp
fisubrs
xchg
jno
cmp
dec
xchg
lahf
loopne
mov
repz
testb
das
nop
pushf
call
push
out
sub
loop
loop
in
ljmp
dec
lods
es
call
rolb
push
dec
ds
rol
cli
popa
inc
cmc
cmc
insl
push
fisubl
xchg
add
cs
dec
push
xor
push
loope
add
and
jbe
sarl
xchg
xor
aad
idivl
rolb
in
xor
xchg
push
jge
jle
shrb
fadd
push
sti
and
dec
cld
jmp
and
stos
gs
pop
pop
lret
fsubrl
sbb
les
lods
cmp
push
xchg
int
mov
mov
or
add
imul
out
pop
or
inc
sub
jae
test
repz
inc
adc
pop
enter
into
lods
sbb
inc
leave
arpl
daa
aad
lahf
xor
je
mov
or
shll
xor
test
insl
dec
mov
inc
arpl
gs
mov
sbb
adc
mov
inc
shrb
scas
arpl
xchg
or
shll
xchg
pusha
adc
icebp
out
enter
xchg
imul
loop
jmp
out
insl
call
xor
int3
mov
add
sarb
lock
dec
adc
es
jmp
push
xlat
scas
xorb
xor
or
cmp
xchg
adc
pop
push
je
xchg
pop
dec
test
rorb
sub
xor
xor
add
test
out
addr16
scas
sbb
mov
mov
mov
jbe
andb
test
shlb
mov
subb
mov
and
or
jb
and
repnz
mov
int
add
jp
lret
sbb
mov
jp
xchg
cltd
push
clts
imul
call
shlb
pop
sti
scas
inc
incl
inc
and
lods
pop
lahf
in
sbb
shlb
mov
pop
mov
mov
cmp
push
rorl
loope
mov
es
aam
ret
sbb
pop
mov
les
mov
xlat
pop
push
dec
les
rcrl
ret
xor
les
sub
lods
cmc
sub
mov
insl
test
leave
das
addb
adc
test
pusha
sahf
pop
inc
ret
mov
in
and
ficompl
xor
test
jae
jmp
jae
sti
data16
mov
sahf
or
xchg
mov
add
and
mov
or
adc
adc
scas
clc
sbb
mov
cmp
and
ja
xor
sub
lock
imul
mov
add
adc
xchg
xchg
or
repz
pop
xor
hlt
sbb
jmp
and
adc
insl
dec
or
ds
jmp
jge
dec
push
fmull
leave
jnp
fimull
dec
pop
inc
shlb
in
or
jnp
cmpsl
notb
aaa
enter
fbstp
sub
jne
push
imul
ljmp
mov
sub
cltd
cli
mov
sbb
jnp
add
jbe
bound
cmp
decb
xchg
fwait
or
out
pop
sub
sahf
pop
or
fnstenv
mov
inc
daa
sub
imull
outsl
add
icebp
jbe
scas
xchg
imul
cmpsl
stos
sub
mov
mov
dec
pushf
jae
loop
cld
push
aad
push
sti
mov
lods
push
jl
ret
int3
adc
scas
xlat
clc
adc
mov
cmp
jecxz
std
scas
popf
push
xchg
xchg
adc
or
pop
cli
ljmp
fiaddl
mov
movsb
or
mov
xlat
ds
inc
dec
mov
mov
xchg
sbb
push
mov
mov
adc
sub
aad
pop
and
xchg
shl
pop
popf
mov
mov
sub
pop
andl
lcall
mov
cmp
call
mov
xchg
mov
icebp
mov
test
sbb
add
test
xchg
jge
lcall
inc
xor
pop
or
push
hlt
mov
push
cs
cli
or
cmp
dec
or
adc
xchg
xchg
sbb
ret
stc
adc
popa
jno
and
xchg
mov
xchg
cltd
pop
sbb
adc
mov
sbb
pop
imul
adc
mov
dec
or
jge
outsb
int
mov
sbb
ffreep
pop
ficomps
icebp
and
inc
mov
add
cmpsl
movsl
dec
and
push
add
rcll
sub
mov
jmp
adc
int3
loope
inc
cmp
sub
or
cmp
push
sbb
sbb
out
push
clc
out
xchg
mov
test
repnz
pop
stc
jecxz
cmp
popa
mov
xor
jg
cld
mov
lret
jl
xor
and
sti
je
stos
cmp
xor
pop
int
xorl
insb
aam
jae
or
pop
lock
xlat
loope
xor
lahf
jne
and
lock
and
push
dec
and
sbb
ds
mov
out
mov
rcrl
out
lret
adc
adc
pop
shl
xor
aaa
std
in
push
scas
xor
outsb
jl
push
inc
cmp
fisttps
fidivrs
adc
xchg
fisubrs
sbb
jp
mov
inc
push
cmc
pushf
mov
out
popf
es
or
scas
dec
or
cmpb
addr16
mov
pop
rcl
pop
pop
mov
mov
dec
dec
int
adc
fadds
cwtl
mov
daa
ljmp
xchg
insb
pop
ss
jo
loopne
mov
mov
fidivrs
mov
and
popf
mov
pop
sub
clc
cs
dec
repz
jae
out
scas
pusha
out
add
add
lods
test
lret
popa
or
inc
mov
imul
insb
jl
jp
adc
inc
fstl
cmpl
push
adc
std
in
inc
into
in
inc
das
mov
push
or
in
test
lods
jmp
or
loop
pushf
lret
setae
out
adc
mov
sarl
cmp
cmp
mov
cmp
cmp
iret
icebp
js
and
cld
sub
or
arpl
decl
xlat
cmpsb
les
jo
jne
loopne
xchg
and
lcall
push
leave
xlat
dec
rcll
cwtl
adc
sub
inc
jno
out
out
inc
xor
cmpb
sub
lea
in
jl
in
xrelease
pushf
or
xchg
cmp
inc
jecxz
and
dec
push
xchg
pusha
loopne
push
and
insb
rorb
push
mov
ja
push
lods
push
cmp
xor
inc
jle
lahf
add
add
test
and
push
mov
pop
inc
inc
add
bound
cld
ficoms
inc
mov
dec
testb
in
pushf
addr16
test
inc
and
push
mov
in
or
mov
mov
in
movsl
jmp
loopne
pop
jns
sahf
mov
int
cmc
jp
outsl
imul
popf
inc
mov
cmp
push
imull
arpl
mov
jae
cs
pop
rcll
int
test
inc
mov
mov
add
out
xor
fwait
mov
add
lds
je
push
fidivrs
pusha
sar
notl
inc
fsin
jb
mov
pop
jns
sbb
test
mov
mov
sbb
dec
lods
sub
jge
mov
loopne
stos
pushl
or
sbbl
js
mov
add
ret
les
testl
xchg
sbb
add
adc
sarl
fistpl
scas
jge
popf
add
xchg
xchg
int3
pop
push
insb
jp
mov
cmp
xchg
mov
jae
mov
xor
std
xchg
es
inc
jno
mov
fldenv
sbb
outsl
jne
mov
cmp
mov
cmc
xchg
in
dec
shl
jge
pusha
js
or
jg
out
xchg
icebp
fisttps
mov
xor
out
push
repnz
mov
xchg
and
jns
pusha
mov
rclb
gs
into
lock
push
jg
loop
jne
pop
jg
ss
add
dec
push
std
lahf
dec
stos
or
jnp
lcall
jo
test
sbb
mov
mov
mov
adc
xorb
outsl
lds
inc
xchg
in
inc
fwait
scas
mov
pushf
xchg
pop
popf
lret
js
adc
fdivrl
std
leave
xchg
cmp
cmpsb
sub
aaa
mov
stos
cmpsl
lcall
out
cmp
xchg
std
sub
pop
mov
movsb
pop
sbb
rolb
sbb
sarl
cmp
adc
pushf
rorl
mov
imul
push
call
leave
jmp
pop
lcall
dec
mov
imul
les
rcrl
popa
int
or
cs
add
cmc
mov
mov
sbb
inc
push
add
sub
into
xchg
mov
add
xchg
push
iret
and
sub
clc
jns
gs
jmp
ret
xor
push
lds
push
inc
test
cld
push
push
out
stos
shll
jbe
dec
add
mov
rcr
mov
push
aam
mov
jl
pop
dec
pop
mov
stos
adc
xchg
fdivp
mov
add
movsb
les
mov
mov
negb
fdivs
test
xchg
mov
jne
fdivl
cmp
add
stos
dec
clc
pop
cwtl
or
lcall
test
sbb
or
mov
cltd
mov
fucomi
dec
clc
hlt
lret
iret
jg
cld
dec
cmp
std
scas
adc
mov
jl
cmp
dec
push
pop
rclb
inc
popa
and
cld
andl
xchg
push
mov
ljmp
cmpl
dec
int3
or
mov
call
repz
or
ds
add
roll
sbbl
jno
sahf
ret
test
and
data16
vxorps
jle
imul
daa
outsb
sbb
sbb
cmpsb
dec
aad
xor
push
push
pop
lds
add
cmp
add
jl
push
xor
hlt
ljmp
sub
inc
outsb
lods
sbb
inc
cmc
out
and
std
fs
out
addl
add
leave
cs
notl
lods
or
loopne
lds
lret
outsl
cltd
mov
sbb
jp
inc
insl
add
lods
addr16
pusha
xor
or
xor
adc
pop
fildl
out
push
sub
jp
mov
mov
insl
xchg
rorb
movsl
sar
es
out
xchg
lcall
pop
adc
pop
pop
stc
or
test
popf
in
push
xor
pop
mov
arpl
pop
and
jns
xor
andb
les
mov
sub
dec
outsb
xchg
jne
imul
aad
loop
pop
push
or
xlat
je
mov
mov
adc
xchg
adc
jg
stc
dec
aaa
cmc
and
aas
insb
lea
data16
les
leave
and
into
jge
or
das
lcall
or
lock
fstl
andl
jb
add
lahf
clc
cmp
mov
and
pop
and
icebp
insb
pop
jge
subb
jo
sub
mov
cmpsl
daa
sub
mov
sub
clc
lret
dec
mov
ret
adc
pushf
stos
inc
mov
and
insb
stos
cwtl
imul
shl
inc
jge
sub
xor
repz
iret
add
mov
leave
jmp
push
test
in
cmc
in
loop
jns
mov
fwait
sub
jle
and
dec
enter
mov
xchg
xor
xor
out
pop
inc
jl
ja
popa
jge
xchg
std
sbb
and
jle
shl
cwtl
mov
xor
jb
fcoml
mov
je
cmp
aas
iret
lock
dec
mov
mov
jg
mov
popa
xchg
ja
ret
fildll
out
test
push
xchg
insl
ss
mov
fcmovne
in
xchg
jns
lds
in
popf
das
repz
push
mov
dec
subb
sub
lret
leave
sti
lret
cmpsl
sub
cwtl
lret
mov
jns
in
int3
pop
adc
adc
pop
aam
test
cmpsl
call
mov
lock
mov
out
in
stos
int
scas
test
aaa
sbb
in
cmp
jmp
push
in
jecxz
push
xchg
add
pop
mov
in
pop
mov
pop
mov
pusha
je
jg
add
sbb
aas
aas
or
lea
adc
and
or
fldenv
adcl
pushf
xorl
in
push
lock
add
lcall
lock
sub
or
xchg
sarb
add
mov
fistps
in
rcll
add
shr
aas
mov
pop
pop
out
popa
sub
ds
jecxz
mov
shl
popf
dec
fsubr
xor
int3
xchg
pop
mov
cmp
mov
call
fimull
xchg
mov
pop
xchg
aas
std
push
test
stc
in
push
push
xchg
shll
jecxz
insb
cmp
test
loopne
sbb
and
lds
pop
int3
repnz
pop
mov
dec
jb
mov
lahf
sbb
mov
cmpl
or
cs
imul
xchg
mov
loopne
add
cld
or
lahf
jmp
jb
popa
fisubrl
xor
in
cmp
ljmp
loopne
aam
cli
jns
add
decb
xchg
dec
lret
pop
inc
pop
or
and
pusha
mov
ret
push
loope
dec
mov
dec
nop
fs
and
rcrl
movsl
and
xlat
rcl
and
push
cs
mov
jecxz
sub
add
repnz
cmp
lods
loopne
and
xchg
xor
jmp
inc
popa
dec
jge
call
push
cmp
mov
popa
enter
and
or
insl
int3
jno
xor
lock
shr
cmpsl
xor
xchg
mov
and
add
cmpsb
adc
ja
and
jae
push
sbb
jbe
or
xchg
mov
cmp
sti
cmp
xchg
and
mov
pop
add
push
adcl
fisubs
xchg
jns
std
insl
mov
fisubrs
push
repz
mov
cwtl
aam
mov
test
in
pop
roll
jle
cld
test
cmc
fs
dec
bound
xchg
inc
arpl
les
les
test
clc
andb
aad
pop
mov
xchg
inc
dec
fsubrs
cmp
sbb
pop
add
loopne
jecxz
xor
jmp
fwait
mull
mov
add
outsl
dec
mov
out
outsb
lahf
adc
arpl
bound
jle
nop
movsl
popa
int
addr16
xchg
cmp
clc
and
cmp
shr
ret
ljmp
fs
lret
popf
pop
push
das
std
xchg
dec
or
roll
imul
mov
std
push
aaa
outsl
jecxz
dec
test
in
icebp
xchg
cld
inc
jge
add
addb
jbe
jnp
les
imul
mov
jne
test
shlb
mov
add
je
xchg
dec
mov
push
aas
push
out
je
adc
mov
rol
jne
jbe
jle
shlb
sbb
sub
les
imulb
push
rolb
xchg
mov
inc
push
ss
push
mov
push
add
mov
add
jmp
cmp
mov
cwtl
icebp
icebp
xchg
popa
dec
fwait
adc
in
sahf
and
lret
or
cld
popa
call
das
push
stos
jbe
aaa
mov
test
mov
int
leave
or
in
enter
sub
adc
lahf
popf
dec
push
pop
push
les
nop
enter
mov
push
out
mov
or
jl
mov
adc
add
jge
dec
pop
pop
inc
push
dec
jecxz
test
push
xor
adc
sub
mov
adc
aas
xchg
pop
fmuls
fdiv
jnp
mov
or
dec
mov
daa
add
das
sub
loope
aaa
mov
rcl
dec
inc
jns
dec
sbb
mov
pop
jo
leave
sbb
sub
mov
stc
mov
cli
mov
ljmp
dec
push
enter
pop
or
dec
dec
sahf
and
cld
xchg
idivl
cmc
in
sbb
into
push
or
mov
fst
push
mov
jmp
pop
lds
loopne
test
ljmp
test
sub
ljmp
in
adc
mov
pushf
rorb
pop
cmc
xchg
cltd
sub
jbe
mov
adc
into
sbb
int
daa
fstpt
cmp
pop
pushf
stos
jnp
dec
mov
sahf
imul
xor
add
push
inc
adc
xor
cmpsl
mov
cmp
shrl
adc
aaa
test
cltd
push
andb
test
imul
push
sbbb
push
repnz
loopne
and
xchg
ss
xchg
jl
or
xlat
mov
jo
icebp
hlt
push
aaa
js
shr
or
clc
inc
nop
mov
outsb
pop
sahf
out
addr16
xor
dec
cmp
pop
dec
insl
mov
lcall
mov
sahf
xchg
sub
pop
cwtl
ffree
jae
jb
xor
xor
enter
bound
roll
mov
loop
cmp
inc
pop
mov
jg
stc
sbb
cmc
fdivp
xchg
cmpsb
ror
dec
mov
pop
jmp
jne
lret
cmp
mov
or
lds
jno
sub
cltd
push
push
repnz
sub
jle
inc
mov
push
jbe
xlat
sbb
mov
mov
mov
xor
jns
aam
mov
mov
cwtl
mov
cwtl
xchg
cld
xchg
pop
xlat
pop
jb
fstpt
pop
xor
cmp
ror
outsl
loopne
push
sbb
and
push
stc
and
lahf
add
sti
and
jp
mov
mov
add
loop
sti
addr16
mov
cmp
lock
add
cld
cld
sbb
and
and
lds
add
loopne
xchg
pop
pop
mov
inc
push
inc
daa
xchg
or
xor
imul
dec
adc
push
lret
fstps
or
fsubrl
mov
cmp
pop
or
out
test
lret
shlb
scas
xor
gs
into
out
lret
cmp
add
fxch
loope
repnz
in
sub
out
ljmp
stc
loop
ljmp
add
push
test
xchg
dec
xchg
xor
enter
xchg
aas
shll
xor
cwtl
sbb
aad
div
and
stos
sub
mov
aam
sub
cmp
dec
or
push
sub
inc
call
sub
xlat
lock
pusha
sbb
and
in
imul
ret
insb
mov
mov
jns
dec
add
stos
mov
setge
rolb
neg
out
aaa
stc
jl
scas
dec
hlt
pusha
mov
gs
sbb
movsl
and
ficompl
pop
out
out
fwait
sub
add
out
push
mov
and
stos
jae
cmp
cmp
sbb
xor
movsl
std
and
inc
dec
push
push
lahf
push
or
stos
jecxz
repnz
xor
xchg
js
shrl
jmp
xorl
jecxz
icebp
inc
xchg
xchg
dec
sub
and
insl
enter
es
push
xchg
fists
xchg
dec
adc
jae
add
roll
push
je
rcll
or
gs
mov
jecxz
xorl
xchg
sub
cmc
mov
jl
loopne
and
mov
bts
in
aaa
dec
loopne
cld
aam
cld
cmpsb
fucomip
and
jmp
mov
imul
push
mov
rorb
ljmp
push
or
out
push
test
dec
adc
imul
mov
cmpsb
movsb
ret
aas
fstps
leave
xor
inc
testb
test
lods
mov
sbb
int
outsl
mov
jb
into
sub
lock
or
push
mov
dec
push
test
test
pop
insb
and
dec
arpl
lcall
cmpsb
add
cmp
arpl
dec
and
cli
lret
sub
adc
loop
jmp
ds
inc
movsb
scas
leave
sbb
inc
fmuls
stos
mov
scas
inc
adc
enter
pushf
jecxz
cli
push
iret
popf
adc
adc
pop
ret
test
ja
out
xchg
mov
push
cmpsb
hlt
xchg
fildll
dec
pop
sahf
xchg
mov
mov
sbb
xor
mov
arpl
pop
mov
dec
mov
cmp
movsl
aas
out
push
adc
out
adc
mov
push
and
or
dec
mov
aas
lds
sub
cmpsb
fadd
push
in
and
mov
xchg
jge
inc
add
mov
fld
cwtl
ret
outsl
int
sub
imul
mov
movsb
hlt
stos
jb
cmp
daa
sub
iret
sarb
jns
cmp
sahf
pop
dec
fld
lock
repz
insl
push
js
es
or
push
in
movsl
push
mov
adc
clc
xchg
cld
mov
jp
sbb
dec
push
mov
sub
out
aam
fwait
xor
adc
mov
jl
ret
pop
js
xchg
in
jl
xchg
xor
into
add
test
outsb
test
pop
push
int3
ljmp
out
fcomps
cmpsl
out
jle
lods
pop
cwtl
leave
outsl
testl
lret
frstor
mov
sarb
mov
stc
pop
out
xchg
addr16
pop
ss
cmp
fstps
xlat
stc
sub
andb
js
sub
cmp
xor
jecxz
lods
push
test
shrl
xchg
aas
or
bound
sbb
jno
sbb
pop
xor
xor
jno
mov
imul
sbb
jae
or
punpckhwd
fisttps
enter
aaa
lcall
add
mov
adc
sbb
ljmp
mull
bound
fistps
int3
jl
xchg
or
push
jecxz
push
mov
lahf
aad
inc
jns
push
lahf
xchg
pop
pop
mov
and
rcr
mov
movsl
cmp
jne
cmpsb
mov
popa
addl
std
lret
push
inc
and
sti
xchg
stos
inc
test
fsubl
push
and
cwtl
push
fcomp
daa
push
sbb
mov
stos
xor
popf
in
pop
push
cmpsl
pop
jg
add
inc
popf
ret
push
dec
bndldx
push
add
test
dec
int3
adc
arpl
je
xlat
push
mov
out
addb
push
mov
scas
in
jnp
add
cbtw
mov
jmp
mov
jmp
dec
popf
sbb
fisubl
fs
jp
popfw
mov
push
rorb
inc
bound
xchg
cmpsb
cmp
mov
adc
jb
loop
add
push
out
xor
out
sub
imul
push
ficoml
enter
lods
leave
dec
pop
mov
add
fwait
cmc
cmp
dec
outsl
rol
jmp
inc
fbstp
imul
inc
xor
stos
jnp
fmull
add
mov
adc
jbe
ljmp
push
adc
inc
ljmp
ja
xchg
lock
sarb
and
pop
sub
xchg
or
das
ss
pop
loope
js
xor
outsb
cmp
gs
mov
push
push
dec
and
adc
std
add
sbb
and
jae
ss
in
lods
fidivrl
loop
sbb
jp
fwait
lcall
dec
push
xchg
or
xor
pop
mov
xor
call
inc
jne
lods
xchg
mov
push
test
mov
sub
decb
mov
lock
inc
cld
pop
or
sub
in
es
pop
dec
std
add
adc
enter
lcall
repz
jp
out
sub
mov
sub
imul
inc
lret
lods
cmp
outsb
stos
lods
xchg
hlt
mov
test
pusha
jb
pop
mov
push
sub
add
sub
dec
scas
push
mov
jns
pushf
imulb
pop
stc
mov
in
push
push
aas
mov
xor
scas
out
ljmp
rcr
mov
movsl
fs
sahf
mov
pop
jno
inc
mov
push
sub
adcb
loop
les
test
push
or
xchg
ljmp
lods
adcl
xor
mov
push
fcomip
adcl
adc
push
push
xor
lods
inc
fwait
xlat
pop
sti
dec
jbe
sub
push
pop
jbe
mov
jl
js
fistpll
shrl
xchg
gs
jp
xchg
aas
xchg
cmpb
xlat
out
lcall
mov
sahf
mov
mov
shll
xchg
mov
xor
in
push
mov
pandn
ja
outsl
add
add
pop
fstl
or
pop
es
aam
icebp
push
inc
cld
data16
inc
sbb
ror
pop
inc
in
or
add
cltd
fabs
rcrb
push
loop
or
outsb
lret
shrl
push
hlt
in
or
dec
add
into
mov
cmp
mov
jbe
cltd
push
cli
xchg
fdivrs
push
outsb
addl
std
sub
popf
xor
jge
out
call
stos
mov
and
push
xchg
shrl
fcmovu
loope
mov
loope
jle
push
shrl
mov
pop
xchg
cs
out
loope
cld
cmpsb
shll
jle
inc
loope
xchg
sbb
cld
sub
cmc
or
pop
cmpsl
dec
insb
jg
cld
mov
mov
rcrl
imul
push
xchg
ljmp
test
push
adc
add
add
xchg
push
and
sti
lods
jg
movsb
sbbl
lahf
adc
mov
or
lret
daa
inc
call
subl
sbb
es
mov
popf
xchg
sahf
mov
or
cmp
aas
in
xchg
into
mov
int
cmpsl
int
and
or
fldt
stos
test
ret
lret
lret
xor
cmp
xor
cmp
hlt
iret
push
xchg
and
std
pop
pop
es
rcrl
es
mov
push
sbb
xchg
call
cltd
fistpll
pop
pop
cli
mov
scas
lahf
imul
into
pop
cltd
mov
push
lock
test
xchg
aas
fdivrl
cmp
out
int3
pusha
pusha
in
sub
in
sbb
in
xor
dec
aaa
fdivrl
xor
outsb
nop
fldl
mov
aaa
mov
and
addr16
pop
fiaddl
push
mov
jg
popa
ds
mov
clc
ret
leave
cmp
pop
aas
pop
mov
lds
jne
xchg
cld
cmp
fdivs
push
jge
arpl
push
fisttpl
add
aas
xchg
and
cmp
push
in
sub
jns
dec
cwtl
stos
popf
mov
ror
repz
dec
lret
test
mov
push
sub
insb
bnd
push
ret
stc
xor
mov
scas
sti
aad
add
or
adc
mov
lahf
cmp
xor
ja
mov
mov
mov
jae
mov
add
sub
rcr
cmp
pop
shll
hlt
push
jae
pop
mov
or
xor
sub
pusha
data16
aas
cmpsl
and
xor
call
mov
jmp
cmp
in
imul
aas
fidivl
shll
pusha
roll
xor
loopne
mov
dec
xchg
out
pop
lret
inc
pop
dec
xchg
jne
mov
mov
int3
rcrb
or
mov
jae
push
dec
es
mov
mov
inc
pop
add
push
testb
adc
lcall
int
push
pmaddwd
push
push
rclb
push
js
lahf
aad
inc
adc
add
gs
imul
or
ret
rcrb
mov
jns
adc
insb
mov
jbe
movsb
jno
mov
addr16
mov
rcll
subl
out
inc
mov
ret
push
xchg
dec
xchg
aad
jmp
dec
into
jne
mov
daa
lock
ret
cmp
jge
pop
popf
popa
dec
popf
leave
push
mov
cmp
fisttpl
jg
add
test
jne
outsl
xorb
xor
insl
jg
aas
dec
loopne
add
mov
xor
sbb
push
jg
mov
adc
arpl
jg
rcrb
pop
inc
mov
add
cld
lcall
clc
pop
push
sbb
and
in
notl
data16
arpl
std
nop
repnz
or
inc
sub
sub
data16
out
shl
call
icebp
sbbl
sub
adc
or
adcb
pop
xchg
sbb
cmp
test
and
cltd
js
imul
cmp
fwait
xchg
scas
pop
roll
mov
mov
jg
cltd
push
stc
testl
outsl
sub
xorb
sahf
add
insl
push
adc
xor
cmpl
iret
ret
aas
fdivrl
stc
mov
orl
sbb
pop
adc
shrl
and
cmp
femms
xchg
iret
sub
fwait
add
or
jg
and
cmp
pushl
clc
xchg
push
movsb
inc
push
xchg
and
enter
test
mov
push
cmp
adc
xor
mov
lret
out
add
jmp
inc
loop
lds
popa
loop
jbe
in
out
lret
mov
dec
out
dec
cmp
add
mov
repnz
fidivrs
sub
or
orb
mov
add
mov
js
xor
pop
cmp
inc
fdivr
hlt
mov
xor
inc
pop
rcll
mov
inc
orl
dec
mov
adc
dec
sub
shl
lea
mov
cmc
scas
shl
frstor
push
mov
or
push
adc
push
test
scas
cmp
or
add
mov
pushf
ret
movsl
mov
sbb
sub
pop
sub
jg
std
push
test
jp
jne
xchg
xor
test
push
inc
insl
test
imul
aas
inc
popa
pushf
cmpsl
stos
push
sub
pop
into
adc
xor
mov
loope
loop
and
ret
daa
pop
jno
rolb
test
lahf
insl
test
mov
stc
push
das
push
cmp
pop
pop
sahf
shll
repz
les
mov
adc
ss
pusha
aam
addr16
jno
lods
jge
xchg
faddp
imul
cltd
xor
loopne
mov
xchg
arpl
movsl
sub
push
es
enter
sub
es
data16
mov
cmpsl
cwtl
jne
xor
bound
sub
insl
dec
adc
xchg
lahf
insl
push
icebp
outsl
shlb
subb
call
and
adc
or
repz
sbb
in
xor
mov
pop
and
inc
ret
loop
dec
cmp
xchg
inc
xchg
cmp
jae
fistps
scas
ja
xchg
daa
pop
xchg
xchg
or
addr16
mov
add
lea
inc
iret
filds
cli
xchg
adc
ret
xor
jae
adc
addr16
jmp
nop
jp
fadds
xchg
ja
mov
andl
mov
lea
test
mov
jo
dec
push
out
into
adc
scas
jae
mov
out
sub
fstps
jbe
repnz
sub
mov
loope
call
mov
pop
or
int
sti
std
aaa
jecxz
mov
fdivrl
arpl
adc
inc
dec
sub
cwtl
orl
int
add
sub
xchg
jnp
shll
cmpsl
ret
rcll
mov
aaa
test
add
into
cmpsb
sub
jge
lret
jmp
inc
subb
fcompl
out
ret
lcall
mov
mov
stos
out
out
in
aaa
cltd
and
adc
aas
fsubp
add
mov
cmp
pop
inc
xchg
pushf
jle
push
sti
ret
sahf
mov
test
daa
in
lds
call
outsb
mov
das
dec
pop
fistpll
cmp
aad
fwait
cs
push
out
scas
mul
pop
ret
insl
pop
loop
inc
sub
mov
sub
je
adc
or
cmp
and
push
hlt
and
fcos
add
or
or
xor
mov
leave
call
push
adc
cmp
je
outsl
sub
js
xor
jge
negl
add
adcl
inc
ss
rorl
xchg
in
pop
jne
clc
out
fisubrs
push
test
stos
ds
inc
and
popf
xchg
jo
inc
loop
jp
mov
inc
mov
push
hlt
pop
bound
aaa
inc
call
iret
das
mov
adc
and
loopne
into
js
and
call
data16
rcr
jns
cmp
mov
dec
mov
xor
xchg
ret
mov
ret
ja
dec
repnz
imulb
aad
jmp
mov
test
xor
in
adc
in
sti
movsb
sbb
in
in
sarb
or
sub
add
dec
cmp
jl
mov
outsb
clc
jne
cld
adc
lcall
push
into
test
imul
sub
push
jg
pop
pop
jb
and
dec
in
outsb
popf
in
iret
rcrl
mov
outsb
xor
fstpl
cmp
add
jns
lcall
je
dec
data16
clc
xchg
ss
add
sbb
add
push
push
mov
idivl
xor
jg
je
mov
inc
out
ret
push
pop
sbb
adc
add
adc
les
dec
mov
iret
mov
inc
xor
insb
dec
call
test
mov
ds
mov
adc
aam
lcall
mov
cmp
pusha
adc
aas
cmp
cmp
xchg
scas
push
add
jmp
adc
push
mov
lock
and
sbb
push
clc
mov
xchg
xchg
aad
aaa
jae
cld
repz
ja
and
imul
jne
stos
sbb
sar
adc
loope
repnz
std
movsb
hlt
push
scas
fistpll
push
es
xchg
sub
dec
jge
sti
sbb
add
mov
fmuls
fadds
lret
imul
inc
push
push
loop
xchg
imul
xchg
pushf
imul
gs
push
add
cmpsb
lahf
inc
mov
adc
pop
je
mov
or
shlb
xchg
push
dec
add
test
pop
inc
mov
and
pop
jno
in
add
cmovno
xor
jle
push
or
pusha
jge
and
xor
notl
push
push
clc
and
out
jne
push
push
pop
iret
in
lret
mov
jae
add
mov
cmp
rcll
fsubl
sub
xchg
fmuls
sbb
and
pop
retw
bnd
pop
mov
lcall
sbb
int
cld
cltd
test
mov
add
lock
test
js
out
insb
xchg
jle
fs
mov
sbb
je
and
sbb
inc
popf
inc
dec
mov
in
push
mov
shl
imul
aam
daa
lcall
in
xor
shl
dec
out
sub
jnp
pop
xchg
mov
add
mov
sbb
xor
inc
ja
and
clc
push
or
xchg
inc
jecxz
stos
loop
pop
dec
sbb
es
mov
mov
gs
push
rcl
pop
out
fsub
add
jnp
mov
push
push
pop
out
sahf
lods
aad
repz
hlt
std
push
xchg
mov
sub
pop
sub
mov
ret
outsb
pop
dec
loopne
sub
push
aaa
int
xor
test
push
sub
insl
scas
cmp
sub
inc
std
sbb
mov
in
push
out
lock
push
aam
push
sarb
loopne
jecxz
fstp
pop
fistpll
es
sbb
pushf
test
push
scas
test
jnp
lahf
cmp
test
das
cmp
cmp
push
pop
cmp
adc
into
add
add
outsb
or
ret
mov
icebp
xor
mov
push
mov
push
xor
sahf
inc
pop
das
mov
nop
out
mov
cmp
arpl
jle
xchg
jns
aad
nop
je
mov
add
leave
dec
push
lea
mov
outsl
shrl
aad
lea
push
mov
outsb
cli
push
and
int3
and
cli
jg
pop
daa
or
arpl
sarb
xor
jbe
push
sbb
xchg
xchg
push
mov
xlat
jne
repnz
fs
shll
lahf
adc
fisttpl
mov
and
leave
or
repnz
call
adc
outsb
das
add
test
jo
cmp
cmpsl
es
cmpsb
pop
ficomps
push
mov
xchg
adc
repnz
dec
scas
xor
mov
int
sub
repz
popf
test
out
into
jbe
sub
push
xor
iret
adc
sub
sbb
xor
cmp
ret
lock
sub
mov
push
jo
outsl
sarl
xor
jno
mov
notl
adcb
les
std
in
testl
adc
mov
mov
push
arpl
cmp
dec
xchg
or
fcmovne
loop
adc
ret
je
les
push
ret
mov
push
xor
pop
mov
sbbb
hlt
cmp
xor
sahf
lahf
icebp
lds
mov
push
xor
adcl
mov
mov
adc
or
cs
add
out
dec
dec
icebp
push
fdivrs
mov
loope
and
arpl
or
in
cwtl
lret
decl
gs
sub
fisttps
aaa
lods
inc
push
out
arpl
aaa
cmpb
lds
repz
movsl
divl
retw
test
push
repz
std
sub
insb
push
jns
movsb
lds
inc
push
xor
stos
rcrb
enter
xchg
shrl
or
outsl
mov
fwait
and
mov
xchg
jl
or
and
in
mov
js
fnsave
test
mov
sbb
add
mov
cmc
jae
cmpsb
or
xchg
cmp
cmp
sbb
lret
inc
mov
sbb
leave
push
repz
gs
mov
clc
fisubrl
mov
mov
sub
mov
pop
mov
daa
in
shl
pop
jmp
dec
clc
mov
insb
mov
cwtl
imul
dec
jg
sbb
inc
dec
sbb
movsb
in
jb
add
test
mov
push
xchg
cmc
leave
and
jnp
xchg
in
inc
mov
dec
inc
dec
and
jb
jge
pop
pop
adc
mov
push
mov
push
aaa
add
in
fstpl
leave
push
shlb
shll
gs
jmp
int3
gs
ss
pop
add
sbb
cmp
stc
pop
add
add
jb
jmp
jl
imul
outsl
jnp
ss
cmpsl
ljmp
mov
xlat
stc
push
inc
push
cmp
rorl
lock
jnp
gs
jo
cmp
enter
leave
aaa
imul
sub
mov
insl
test
jns
or
xchg
xor
dec
mov
mov
mov
sahf
ret
lock
mov
cmpsl
daa
addr16
rcrl
mov
jns
aam
add
mov
push
or
int
pop
push
cmc
mov
fdivr
loope
sbb
jnp
and
jp
mov
mov
sub
mov
xchg
int3
mov
jmp
push
xor
inc
inc
pop
loop
xchg
push
mov
and
int3
stos
xchg
cmp
add
imul
cmp
ret
call
push
pop
jne
test
add
rolb
pop
cltd
pushf
cmp
push
sbb
bound
pop
les
mov
sub
stos
mov
jge
fwait
lahf
dec
push
lret
jp
jmp
lock
add
lea
dec
pop
and
jns
leave
and
inc
lret
psubb
or
repz
xchg
insb
jne
fdivrs
mov
pop
dec
aad
mov
xchg
mov
push
sbb
test
or
inc
mov
lcall
dec
ror
push
ret
xchg
jl
mov
sub
add
add
jo
pop
mov
sbb
cltd
adc
push
or
pop
sbb
out
mov
cmp
es
jne
add
stos
dec
or
or
adc
int3
xlat
xchg
mov
dec
adc
comiss
scas
cmp
nop
pop
cli
inc
pusha
es
out
jno
in
sub
sbb
push
push
push
addr16
fdivl
push
std
mov
leave
inc
loopne
ret
imul
or
push
sub
pop
jmp
rcrb
daa
mov
rcll
mov
sbb
aam
sbb
cltd
dec
sub
lcall
xchg
or
pop
outsl
insb
and
mov
inc
adc
inc
jae
or
mov
or
movsl
scas
int
fwait
nop
inc
xor
pop
test
mov
fnstsw
clc
das
xchg
lods
mov
mov
xchg
cmpl
cli
lret
jb
inc
pop
leave
xor
sbb
sub
insl
sub
gs
add
repnz
andb
push
scas
mov
dec
cmpsl
pop
cmpb
pop
es
inc
or
enter
into
push
xor
mov
or
mov
and
stc
movsb
stos
sub
sarl
pop
jecxz
mov
out
xchg
dec
mov
lcall
jl
mov
lahf
push
pop
jmp
cmp
xchg
int
and
arpl
mov
aaa
aam
lds
xchg
ja
pop
inc
repz
gs
dec
outsb
shlb
inc
popa
inc
mov
push
or
mov
mov
jmp
imul
and
sub
mov
cltd
pop
mov
push
loope
xchg
icebp
inc
cmpsl
cmpsl
push
stos
push
mov
das
jmp
xor
testb
lock
jecxz
cli
add
and
into
fwait
call
clc
imul
sub
and
popf
push
cld
imul
sub
push
adc
jmp
js
and
std
push
lods
mov
adc
mov
movsb
inc
jmp
push
pop
cmp
push
out
out
test
mov
fidivl
push
data16
inc
loopne
jno
push
dec
int
jb
out
dec
je
sbb
pop
pop
ja
inc
nop
xchg
adc
inc
smsw
lock
clc
mov
or
dec
int
das
je
sbb
call
adc
hlt
imul
ret
clc
cmpsb
cmp
out
xchg
lret
and
adc
sub
rorl
mov
ss
scas
adc
scas
cmpsb
mov
clc
repz
divb
or
loope
and
arpl
nop
test
pop
adc
xchg
jne
mov
in
xchg
mov
jp
out
xor
push
vpdpwssd
pop
adc
mov
push
shrl
mov
outsl
pusha
in
imul
mov
xchg
push
int3
aas
enter
movsl
mov
inc
jg
ljmp
out
mov
icebp
jb
stos
idivb
push
push
sub
lret
fadds
test
and
jbe
mov
mov
dec
rol
ror
negl
cmp
mov
xchg
insb
or
xchg
cmp
jbe
adc
cmpsl
in
out
mov
mov
mov
shll
pop
or
into
push
jecxz
sub
cmp
or
cs
ljmp
data16
jg
cli
pushf
arpl
add
sti
out
shl
push
popf
jae
bound
cli
inc
xchg
and
mov
dec
add
sub
inc
pop
pop
mul
cltd
mov
pop
mov
scas
outsl
andb
enter
cmp
mov
and
inc
xchg
loopne
or
pusha
xchg
inc
xlat
pop
lods
mov
jnp
mov
iret
sarl
gs
cwtl
lcall
mov
inc
aas
push
jge
cmp
repnz
lock
xchg
xchg
or
xchg
mov
and
xchg
out
clc
adc
cmpsb
pushf
dec
and
ret
cmp
mov
movb
jno
stc
stc
dec
mov
pusha
xor
push
sub
xor
lahf
test
cmp
mov
cmp
adc
jecxz
mov
sub
fsubs
inc
imul
dec
enter
enter
icebp
imul
mov
or
in
xor
inc
adc
mov
dec
xchg
test
mov
and
xor
loopne
push
mov
lds
adc
lret
mov
gs
sbb
outsb
in
xlat
adc
outsl
testl
xor
movsl
ljmp
pop
sub
and
and
add
mov
cwtl
pop
pop
clc
mov
mov
push
push
aaa
fs
xchg
cli
push
xchg
dec
xor
fistps
jmp
popf
scas
shlb
popf
mov
fisubs
mov
inc
outsb
sbb
adc
and
pop
mov
push
jns
adc
inc
enter
sbb
insb
fldl
or
popa
or
fadd
push
xor
imul
or
out
and
inc
xchg
fxch
jmp
adc
cmp
pop
ret
push
and
mov
sub
fdiv
and
popa
xchg
popa
adc
lods
call
aad
jle
and
mov
jge
or
sbb
mov
and
or
cmp
xlat
jp
es
add
jge
sub
jp
inc
lcall
lock
mov
sbb
cmp
out
faddp
pop
je
jmp
mov
addps
in
push
inc
mov
ja
enter
mov
xor
lds
pop
mov
inc
or
add
sbb
pusha
mov
dec
mov
fistpll
xor
nop
cmp
adc
xchg
xchg
xor
sbbl
xor
or
fisttpl
inc
xchg
mov
sbb
ds
repnz
je
movsb
jle
pushf
sub
and
pushf
in
fisttpl
in
aaa
pop
push
pop
fistpll
jne
mov
sbb
daa
pop
pop
insl
lret
sarb
push
xchg
push
js
icebp
or
mov
scas
hlt
lock
out
lahf
in
call
jmp
jbe
push
les
lods
mov
in
sub
nop
mov
subl
sbb
test
pop
inc
cmpsb
lret
bound
mov
or
mov
mov
test
arpl
arpl
into
stos
mov
outsb
xchg
fstpt
adc
mov
pop
fwait
test
xchg
jo
push
fsubrl
cltd
rorb
mov
and
mov
shr
test
mov
adc
xchg
addr16
ds
fdivl
inc
ja
mov
mov
clc
push
xor
jecxz
mov
ds
in
mov
lret
lahf
mov
popf
pop
dec
cmp
mov
rorl
mov
cwtl
hlt
sti
jg
je
jno
insb
sbb
out
je
jge
leave
lahf
rorb
mov
addr16
mov
jl
inc
rcl
sub
mov
sbb
xor
fldcw
cmp
or
mov
dec
lds
sub
hlt
cli
xchg
stc
sbb
js
dec
repnz
idivb
or
fdivr
ror
push
pop
adc
cmp
scas
sub
cmp
pop
pop
mov
and
int
out
lock
push
pop
dec
mov
mov
jne
icebp
loop,pt
mov
jns
mov
lcall
cmp
mov
adc
and
test
shll
push
xchg
jbe
push
push
sbb
addr16
xchg
mov
and
daa
jmp
sbb
loop
jge
mov
and
ret
repz
sub
or
sbb
push
adc
faddl
mov
cmpsl
addl
jnp
jl
jle
jns
xor
fwait
push
fs
movsb
es
cld
stos
lods
test
psubsb
aaa
pop
cs
dec
fldl
mov
cwtl
dec
jmp
addl
movsl
in
fsqrt
dec
ja
dec
aaa
rorl
shl
rcrb
and
pop
mov
adc
and
int
mov
jmp
xor
xor
rcl
subl
and
les
and
leave
bound
nop
jo
clc
dec
and
daa
or
popa
adc
dec
leave
inc
lds
pushf
sub
inc
fiadds
test
cmp
dec
vpmaxsw
imul
test
pop
pop
shll
push
and
pop
fs
cmp
in
icebp
sarb
gs
sahf
fwait
xchg
xchg
shrl
outsb
popa
jp
jmp
and
or
xor
iret
loop
out
mov
mov
out
and
push
cmpsb
sbb
lcall
ret
mov
push
and
jecxz
mov
lds
ljmp
mov
ja
xchg
pop
rorl
sbb
lret
iret
dec
mov
and
mov
pop
mov
jo
fdivr
xchg
and
sub
insb
mull
push
and
pop
mov
mov
pop
sti
lret
lcall
adc
mov
inc
cs
jge
mov
test
test
gs
xchg
and
cmpsl
aad
sarb
lahf
and
loope
pop
adc
outsl
dec
sbb
jmp
sbb
cmp
push
xor
ja
mov
in
cld
das
lret
pop
lods
xor
into
out
int
adc
negb
and
dec
or
xor
sbb
lods
fisubrs
xlat
mov
repnz
ds
sbb
inc
jnp
outsl
push
add
pop
xchg
gs
into
or
cltd
add
cs
cmp
push
add
hlt
stos
into
jo
pop
lret
cmpb
jns
dec
js
mov
push
mov
shll
mov
popa
adc
jge
mov
dec
jg
lcall
popf
xchg
sub
emms
inc
outsl
jecxz
xor
int3
lret
outsl
dec
lock
aas
aam
sbb
adc
repnz
or
insb
pop
imul
mov
test
icebp
push
pop
icebp
addr16
lods
stos
es
inc
ret
in
mov
mov
cmpsb
ja
jmp
and
movsb
push
cltd
sub
inc
inc
and
sarl
arpl
mov
cmpsl
sbb
call
or
mov
addr16
push
jge
mov
add
cli
stc
insb
jg
mov
push
push
hlt
inc
jmp
inc
fisubl
aam
adc
pop
lods
out
push
xor
std
sub
call
and
xlat
xchg
jp
lcall
in
jns
xlat
xor
sarb
cmp
in
insb
mov
addb
mov
vmread
popa
js
adc
loop
arpl
mov
pop
mov
call
lahf
pop
daa
jge
fimuls
pop
js
sub
inc
adc
push
cs
sub
lret
fstpl
jne
fcoms
pop
cmp
stos
rol
call
push
xlat
fsts
dec
mov
cltd
jle
push
xchg
jg
or
and
cltd
adc
jno
add
mov
jnp
xor
push
cmpsl
decb
mov
js
rorl
lahf
xlat
test
lcall
cmp
or
pop
inc
pop
outsl
int3
out
jae
and
xchg
lods
sub
ds
es
pop
and
scas
sub
lea
inc
mov
and
pop
addr16
mov
testl
incl
mov
pop
mov
lret
xchg
mov
mov
movsb
mov
lods
cmp
jnp
imul
inc
or
shll
scas
xor
iret
push
inc
xlat
adc
mov
mov
sbb
push
lods
xor
and
jns
adc
push
cmp
lret
jns
ret
jno
dec
lds
jnp
stos
push
sbb
xchg
mov
call
repnz
flds
dec
cmpsl
cmp
xchg
dec
mov
test
test
movsl
pop
out
daa
or
in
sbb
add
hlt
cmp
mov
aas
inc
cli
sbb
push
test
ret
push
fsts
inc
leave
mov
add
shlb
imull
push
mov
jb
enter
scas
stos
mov
roll
jne
adc
pop
and
xchg
xor
add
aaa
sbb
inc
hlt
mov
test
sbbl
inc
repz
cmp
inc
jne
sbb
mov
aas
and
shll
add
movsb
arpl
mov
mov
pop
cwtl
mov
lock
xchg
dec
cmpsl
popa
cmp
roll
xchg
pop
jb
sub
mov
sub
inc
mov
aaa
jge
test
jbe
test
push
stos
cmp
jmp
dec
stos
mov
mov
and
inc
cli
ja
insb
jl
aaa
hlt
out
scas
out
pop
and
cwtl
mov
sbb
orl
jp
lret
xlat
push
imul
lret
int
cmpsb
ljmp
sar
inc
sub
loope
popf
popf
cmpsl
push
imul
stos
pop
std
adcb
repnz
xor
sbb
cs
dec
ja
les
aas
sub
sbb
std
adc
in
jbe
je
data16
stos
xor
rcl
sbb
aad
sub
roll
call
out
dec
mov
push
loopne
xchg
and
xchg
jo
movsl
fs
in
in
ja
scas
in
xor
rcrl
incl
imul
mov
mov
lcall
and
mov
adc
mov
outsb
rcrb
out
cld
mov
aad
movsb
inc
es
aas
push
pop
lret
das
imulb
xchg
cli
cli
adc
or
sbb
xchg
mov
shr
lea
enter
sub
mov
ror
adc
lods
cmpsb
data16
sti
aaa
lcall
mov
sub
mov
xchg
mov
subb
adc
aad
cltd
jecxz
adc
cmp
dec
inc
fcomi
ja
mov
inc
adcb
aaa
inc
inc
pop
rcr
jb
hlt
aam
cmpsb
ret
out
nop
cmpsl
mov
mov
add
xor
rorl
and
mov
lahf
and
ss
sbb
adc
cmpsl
or
sub
in
out
pop
cwtl
xor
jg
imul
mov
aam
dec
outsb
dec
test
lds
xor
stos
push
nop
rolb
repz
push
test
gs
sbb
xor
rorb
cli
ss
mov
cmp
fcomps
test
jp
mov
mov
cmp
jmp
and
sub
jmp
into
sbb
bound
cmc
jg
mov
inc
or
imul
mov
mov
and
ja
pop
loopne
stos
sub
pop
shll
push
xchg
ljmp
cmc
adcl
fwait
xchg
dec
test
stos
add
push
fwait
push
ds
add
xlat
xchg
mov
pop
mov
mov
mov
icebp
push
pop
fisttpll
insl
jne
into
dec
test
mov
mov
lods
pop
les
dec
nop
jns
fistps
jns
adc
jge
mov
push
xchg
cmp
dec
push
mov
fs
fldln2
es
sbb
rclb
movsl
fcoml
or
imul
jo
jb
jle
adc
aas
aam
fsubl
xor
les
sub
enter
jbe,pn
jnp
mov
sbb
mov
jg
sub
pop
sbb
mov
or
mov
push
xchg
sbb
shll
mov
push
dec
push
pop
addr16
enter
xchg
lahf
pop
push
mov
fildl
outsb
lock
into
sub
push
cmp
lods
insl
stc
mov
xchg
or
mov
imul
ret
pop
sahf
or
add
fdiv
and
in
add
stos
push
cmpsb
sub
rorb
mov
xor
test
push
xchg
leave
xor
pop
in
hlt
fcompl
cmp
mov
outsb
dec
lret
jg
nop
mov
xor
dec
ss
inc
cmp
mov
cmpsb
out
sub
lret
fistps
xchg
mov
mov
in
rorb
inc
cld
cmp
push
movsl
dec
dec
mov
jnp
xor
int
xchg
out
ficoms
jp
mov
xor
out
inc
daa
aas
push
push
xchg
stos
inc
popa
xor
loopne
cltd
cli
fcompl
push
adc
cmp
scas
dec
sub
std
push
xchg
stos
lret
adc
cltd
inc
shlb
movsb
add
cmp
scas
pop
scas
outsb
dec
push
inc
sub
jp
adcl
mov
decb
cmp
mov
cmc
repz
cwtl
xor
or
sbb
sti
push
jp
sbb
adc
xchg
idivb
in
jl
mov
lret
push
jp
mov
fisubl
pop
sub
mov
pop
sbb
lock
sbbl
mov
xchg
sbb
fdivp
dec
cli
rclb
out
dec
arpl
adc
push
jne
or
mov
ret
ret
addr16
shrl
out
push
fidivrs
mov
and
mov
insl
in
ljmp
cmpsb
jmp
stos
pop
addr16
ret
data16
jl
fwait
out
test
and
mov
fists
out
sub
mov
dec
dec
pop
ret
lahf
pusha
repnz
mov
push
or
pop
fdivrp
push
lahf
scas
das
test
ja
jge
lods
hlt
in
and
pop
xorl
sbb
push
mov
aaa
clc
int3
sti
or
icebp
mov
aad
notl
call
nop
jne
jns
out
and
aam
lds
or
xor
enter
je
or
pushf
jmp
xor
push
dec
jno
push
add
dec
ret
push
leave
lret
lret
cmc
and
cltd
mov
cmp
cwtl
cli
mov
mov
popa
add
jg
push
jle
inc
xchg
outsb
test
loop
inc
or
out
sbb
xlat
stos
popf
jb
or
gs
mov
mov
mov
outsb
jge
rclb
ficomps
xor
inc
int
arpl
jns
test
sub
add
adc
pop
imul
pop
cmp
sar
in
out
push
or
adc
das
loope
popf
ret
movsl
repz
jmp
sar
das
lahf
add
pop
push
bound
or
shlb
mulb
popa
cmp
jo
mov
sbb
mov
sahf
out
xchg
xchg
fisubs
lret
fwait
mov
inc
inc
xchg
insl
inc
bound
mov
outsl
shlb
leave
mov
and
fidivl
mov
sbb
dec
aad
push
outsl
outsb
hlt
sti
testb
dec
outsl
mov
iret
or
lcall
incb
lcall
xchg
cmp
jle
cli
int
or
out
mov
in
ret
or
movsl
pop
cmpsb
notb
push
push
pop
scas
outsl
loopne
or
cmpb
or
adcb
xlat
xchg
test
add
dec
pushf
pop
pmulhuw
sahf
andb
push
pmullw
popf
pop
xor
lea
imul
sbb
pop
inc
test
fsts
cmp
cli
mov
ficoml
or
sbb
test
push
shll
dec
test
sbb
xchg
arpl
mov
mov
sbb
movsl
scas
cmp
daa
add
lea
mov
imul
inc
push
std
outsb
pop
cmp
xchg
adc
stos
arpl
cmp
out
movsb
sbb
aad
xchg
and
push
jb
push
ret
jns
lret
pop
aas
push
jo
daa
jno
das
jmp
inc
je
jns
roll
mov
and
lods
cmpsb
jbe
cmpsb
inc
cs
in
cwtl
loopne
fs
adc
mov
filds
sub
iret
mov
out
pop
icebp
mov
ret
sub
test
mov
inc
dec
pop
test
repnz
inc
push
lahf
jo
mov
divl
jle
jo
mov
pop
test
mov
push
movsb
adc
sar
push
sbb
jl
inc
rcrl
xchg
xchg
sbb
fwait
mov
mov
xchg
lods
ret
ret
fcmovnb
jg
pop
rclb
cwtl
push
jo
mov
jg
dec
jecxz
push
mov
jge
int3
repnz
cmp
lods
int
dec
mov
lods
pop
push
jg
xchg
pop
inc
cmp
popf
mov
popf
lcall
int
jbe
cmpsl
pop
pop
and
ret
lods
in
insb
aam
push
cmpsb
push
and
inc
outsb
scas
cmp
adc
or
xor
and
ret
mov
pop
cmp
nop
add
inc
mov
jmp
xor
outsl
mov
xor
dec
cmp
jmp
adc
subb
pop
xchg
lods
test
push
in
mov
or
jnp
mov
lret
aad
pushf
push
movsl
push
mov
cmpsb
mov
iret
mov
pusha
loope
and
gs
dec
adc
jbe
loop
push
test
cmc
add
sbb
push
mov
scas
or
or
inc
aam
push
or
push
insb
mov
lods
cli
scas
inc
sub
leave
sahf
jo
lea
lret
rcrl
adc
int3
push
mov
xor
mov
cld
popa
jbe
inc
fildll
mov
push
cld
ja
repz
add
mov
jns
sbb
lds
xchg
sti
mov
sbb
sbb
test
lea
je
sub
or
or
ss
sub
aam
lret
jmp
dec
popa
add
mov
inc
xor
pop
jg
je
in
mov
movsb
out
pop
mov
pop
icebp
vdivsd
pushf
cmp
xor
pop
inc
or
iret
ljmp
xor
test
jne
jl
inc
inc
gs
add
push
pop
and
sub
scas
mov
mov
out
and
cld
sub
jmp
xchg
add
mov
enter
pop
fistpl
xor
jne
addl
mov
add
mov
test
mov
mov
or
scas
fisttps
mov
lock
xchg
sbb
punpckldq
inc
insl
add
fisttpl
out
or
mov
adc
or
mov
nop
lahf
dec
imul
data16
or
jae
sub
testl
or
inc
jmp
ret
cli
push
add
sbb
pop
std
stos
cmp
cmc
inc
pop
mov
pusha
ljmp
jmp
mov
imul
pop
fdiv
jbe
and
xorb
dec
add
pop
mov
es
jmp
mov
ret
fmull
mov
cld
fisubl
pop
xchg
mov
push
adc
jmp
add
scas
inc
hlt
lret
pop
mov
loope
jns
xchg
aaa
subb
loop
nop
scas
je
mov
pop
add
in
mov
add
push
ror
sub
xchg
add
cmc
rcll
mov
stos
mov
popf
push
shll
pop
sbb
ja
add
loopne
xor
xor
ret
mov
cmp
jno
mov
inc
andb
jp
sarl
stos
xchg
or
imul
inc
jle
inc
ljmp
rorl
lret
lods
sbb
hlt
lods
into
mov
rcl
push
sbb
adc
mov
add
dec
scas
xchg
test
dec
sub
jbe
inc
je
add
dec
mov
sub
or
push
cld
repnz
lods
addr16
dec
inc
and
imul
pop
sbb
pusha
cmp
adc
ljmp
jbe
mul
fsubp
icebp
call
icebp
das
lahf
pop
nop
add
loope
jge
mov
cli
mov
adc
jmp
mov
movsb
mov
shll
pop
sbb
mov
jle
loopne
cwtl
inc
divl
pop
adc
mov
mov
les
ljmp
in
mul
mov
fwait
or
push
aaa
test
test
cwtl
hlt
xor
inc
fldt
xor
insl
test
mov
outsb
outsb
jmp
jp
sbb
push
cmp
xchg
or
test
imul
and
bound
add
push
jge
jmp
or
adc
clc
push
lahf
aas
sub
fsub
xchg
mov
cmp
in
jno
sti
fisubs
mov
aad
fisttpl
dec
mov
mov
or
stos
pminub
pop
add
imul
movsl
dec
cmp
loop
sbb
add
xchg
xor
mov
pusha
push
push
into
or
xor
inc
leave
scas
scas
mov
adc
lret
add
test
mov
adc
xor
outsb
mov
ds
stos
movsl
js
inc
jge
adc
inc
inc
pop
push
pusha
mov
fnstcw
mov
push
iret
mov
scas
sbb
lods
sbb
pusha
test
fcmovb
out
jge
xchg
out
mov
cmc
push
and
movsb
xchg
pop
loope
ret
aad
stos
ljmp
jmp
jnp
in
ffree
mov
mov
and
jnp
cld
jge
push
xchg
popf
jge
sbb
push
pop
mov
sub
cmp
inc
test
cltd
pop
fdivrl
cmpb
int
mov
js
mov
repz
stc
pushf
adc
cmpb
out
mov
or
std
fsubrl
pop
popa
jl
push
mov
jg
push
insl
and
fisttpll
push
pop
push
xor
aas
inc
sbb
inc
mov
scas
mov
cmpsb
and
fsubl
nop
shlb
sub
jl
pop
xchg
jb
stc
and
sbb
addr16
jne
mov
adc
push
xchg
test
nop/reserved
sbb
int
loope
in
ret
popa
fsubl
bound
mov
sbb
mov
aam
fucomi
pop
xor
mov
xchg
mov
stos
rcll
xor
mov
cs
cld
orb
fistl
dec
jno
xchg
fcomip
movsl
jg
cmp
sbbb
jbe
dec
sub
out
andb
push
inc
mov
mov
inc
xlat
out
push
dec
rcrl
cmpsb
and
push
xchg
dec
cltd
int
xchg
inc
xchg
sub
pop
jnp
test
lcall
pop
push
jmp
pop
sbb
sbb
cmpsb
cmpsb
rorl
ret
fwait
cmpsb
or
gs
mov
inc
testb
sbb
call
movsb
xor
and
hlt
adc
int
add
divl
cmp
inc
push
lahf
aas
sbb
sub
add
lea
mov
testb
sti
mov
popa
push
cli
mov
push
imul
mov
dec
cwtl
pushf
xor
repnz
lea
pop
shr
cwtl
xchg
sbb
xor
push
fwait
lcall
mov
int3
mov
xchg
int3
ja
sbb
pop
dec
lret
mov
scas
es
ficomps
jp
jbe
leave
and
jmp
addr16
xchg
shlb
push
imul
dec
movsl
popa
mov
pop
cld
add
dec
xor
push
mov
in
call
push
jne
sub
sub
xchg
xor
jp
pusha
insb
cmp
mov
in
xor
das
nop
sahf
ja
sub
mov
jp,pn
sub
mov
cmp
or
out
mov
lods
cli
or
test
push
bound
popa
les
fsubrl
jnp
mov
mov
inc
stos
pop
aad
inc
dec
into
jae
ds
flds
aaa
jae
lea
cli
fcmovu
stos
push
jge
scas
inc
test
mov
sahf
cmp
scas
pop
pop
rorb
jg
rcll
mov
push
divb
in
mov
cwtl
into
xor
aam
inc
out
mov
push
sub
lcall
mov
call
and
adc
and
das
popa
xor
mov
loopne
push
jae
mov
sub
mov
dec
ljmp
xor
arpl
popf
shll
insl
mov
ja
mov
out
subb
mov
imul
stc
mov
cmp
fsts
cmp
xchg
mov
lock
arpl
mov
outsb
dec
sub
popf
jnp
mov
push
or
cmpsl
outsb
mov
inc
sar
jmp
ljmp
scas
enter
js
push
test
imul
dec
lret
cmp
movsb
xor
xchg
test
and
add
es
into
fists
loop
shl
lods
fs
inc
mov
fidivrl
mov
popl
cwtl
popf
mov
fs
dec
sbb
add
jmp
inc
jbe
lods
sbb
jp
add
xchg
adc
mov
iret
ljmp
and
push
insl
pop
lea
dec
xchg
cmpsb
add
aaa
or
jmp
out
adc
in
jecxz
jbe
lods
mov
lock
dec
push
adc
jb
inc
bound
loopne
xchg
test
sti
push
jecxz,pn
movsb
das
sub
pop
push
mov
dec
out
insl
xor
dec
lock
lcall
xchg
cmp
and
push
sub
loopne
sbb
and
fwait
xchg
outsl
out
inc
jne
loope
pop
or
pop
lret
adc
mov
jb
outsb
enter
push
mov
out
loopne
mov
mov
add
or
repz
jne
int
loope
inc
push
stc
or
ret
pop
in
pusha
inc
push
dec
repnz
cmp
mov
xor
sub
xor
adcb
pop
rcrb
or
xchg
nop
inc
push
add
addr16
cmp
cmp
push
mov
mov
lcall
xor
ret
ds
std
sub
shrb
imul
bound
out
daa
insb
add
cmp
inc
and
xor
mov
and
ret
xchg
faddp
rcrb
xchg
inc
dec
rolb
gs
mov
clc
xchg
sbb
das
pop
and
jbe
jno
fstpl
pop
jecxz
mov
insl
push
or
call
dec
sub
or
rorl
jg
iret
mov
cli
test
es
mov
cmpsb
adc
out
add
pop
xchg
pop
and
js
pop
pop
rcrb
xchg
std
mov
cmp
imul
nop
aaa
iret
push
xor
stos
adc
fstl
das
fwait
outsl
dec
mov
jle
mov
test
pop
push
leave
xlat
add
sbb
cmp
dec
jae
inc
dec
fsts
pop
or
add
sbb
pushf
cwtl
ds
cmp
movsb
stc
mov
xor
shrl
adc
xchg
test
pop
dec
mov
push
cltd
js
sub
test
push
push
fsin
fwait
or
stos
jecxz
sti
ret
adc
scas
push
jge
dec
leave
pop
jle
add
adc
sub
inc
lret
mov
xlat
cmp
mov
ror
scas
sahf
xor
mov
mov
sbb
popf
lret
insl
lret
insb
sub
test
in
xor
mov
jg
lock
imul
movsl
sbb
pusha
mov
iret
dec
mov
inc
mov
cmpsl
xchg
ret
jbe
shrb
cmp
mov
mov
lret
mov
lahf
jne
stos
inc
xor
xchg
lcall
int3
or
mov
outsb
daa
call
jmp
div
fstpt
adc
xor
in
add
rol
leave
test
push
aaa
or
inc
lock
mov
pushf
xchg
test
and
sahf
mov
pop
insl
ss
inc
or
ret
add
loope
dec
jle
pop
into
xor
pusha
scas
out
adc
xchg
dec
frstor
push
xchg
xor
cmpsb
jge
or
mov
cmpsl
dec
adc
cld
lahf
bound
jnp
lahf
push
sub
fldcw
hlt
and
jmp
scas
dec
add
js
inc
mov
in
adc
xchg
adc
mov
lods
stos
inc
jp
imul
into
mov
mov
cmp
gs
or
inc
stos
pop
push
pop
push
or
mov
test
pop
inc
cltd
test
sub
xchg
jae
imul
mov
xchg
loopnew,pt
xchg
jnp
jecxz
and
sbb
jno
sub
js
mov
add
shlb
xor
pop
sbb
push
xor
mov
sahf
or
and
rcr
mov
in
ljmp
aad
mov
out
pop
mov
sbb
push
add
jae
adc
inc
ret
rcrb
cmpl
fisttps
testb
repnz
ficoml
test
add
push
cmp
loope
test
lret
lret
ret
loop
movsl
movsb
mov
adc
sbb
sbb
mov
mov
xlat
pop
mov
dec
sti
inc
jo
and
and
inc
imul
inc
add
fdivl
add
arpl
rclb
mov
xchg
mov
cltd
or
sub
push
cmp
add
cmp
lods
testl
lret
add
pop
cmp
mov
cwtl
and
jmp
push
loopne
dec
dec
andb
adc
lahf
and
popa
push
imul
add
stos
and
gs
scas
ds
outsb
xor
xchg
daa
sar
test
and
add
push
cmp
xor
or
jbe
xchg
cmp
cmp
clc
outsb
mov
fs
add
mov
subb
push
stc
lcall
je
mov
aas
sbb
push
shlb
sub
test
mov
xchg
cli
pop
adc
sub
sub
mull
gs
mov
or
cmp
mov
xor
and
jmp
mov
xor
mull
xchg
gs
scas
data16
xor
jmp
decl
cwtl
icebp
rcrb
jno
in
out
push
je
mov
push
pop
mov
jg
pop
mov
ds
cmp
cs
call
sbb
jbe
cmp
fwait
dec
pop
xor
fcoml
filds
jecxz
or
push
xchg
lahf
shll
pop
cmp
enter
mov
cmp
lret
pop
gs
mov
imul
cmp
mov
cmp
lret
scas
and
cmp
add
ja
inc
stc
icebp
xchg
sbb
iret
jp
mov
outsb
mov
aaa
addr16
fwait
test
das
test
ficompl
sbb
cld
and
daa
int3
mov
xlat
cmc
ret
xor
imul
fimuls
and
das
and
insb
fisttpl
xor
fmull
sub
lea
outsb
in
popa
fcoml
xchg
push
mov
sub
dec
int
lcall
shl
shlb
fnstsw
inc
daa
xchg
mov
cmp
sub
or
pop
jae
ljmp
or
pop
push
jg
adc
or
cmc
scas
cmp
shlb
push
cmp
fstl
mov
push
stc
sbb
xor
xchg
or
push
sbb
add
cs
push
cmp
lods
adc
mov
ss
out
adc
outsl
lcall
cwtl
push
jmp
imul
gs
and
fbstp
loopne
int
sub
xor
jb
js
lahf
inc
adcb
icebp
xchg
mov
in
int
jo
mov
or
pop
dec
jecxz
lods
call
sbb
mov
outsb
sbb
push
sbb
pop
xlat
pop
adc
inc
loopne
lods
mov
xor
subl
mov
jne
push
adc
aad
jg
jns
pop
icebp
mov
rorb
mov
push
adc
stos
push
adc
xchg
jbe
inc
imul
popa
mov
mov
fdivs
push
pushf
add
lahf
lds
enter
jne
mov
jge
sbb
aas
ss
lds
push
mov
stos
xchg
inc
std
xchg
hlt
lcall
mov
sbb
adc
xor
gs
add
fnstenv
pop
jb
and
xor
adc
aam
cwtl
pusha
call
adc
lret
stos
mov
or
stos
test
stc
inc
xchg
push
lcall
ljmp
rcr
iret
mov
mov
lock
ja
pop
jmp
or
ret
adc
aas
and
mov
icebp
pop
pop
pop
add
mov
xor
loopne
ja
loopne
lret
ljmp
push
sahf
pop
test
ja
scas
mov
mov
pusha
add
sub
push
lcall
roll
sub
mov
pop
jl
imul
lods
adc
mov
popf
addr16
clc
sub
push
lcall
popa
imul
dec
mov
dec
add
sbb
inc
or
jmp
ret
jl
movsb
popa
add
lods
sub
mov
shlb
insl
data16
or
jns
dec
jae
cmpl
das
ss
pop
cwtl
inc
xchg
mov
std
sti
pop
pop
andb
cmp
xor
mov
xor
cmpb
shrb
add
nop
mov
lds
addr16
in
dec
aas
jecxz
and
mov
stc
daa
clc
mov
pop
sbb
mov
or
adc
popf
adc
js
jp
daa
test
xchg
jne
and
push
mov
mov
adc
and
cli
fwait
push
les
stos
hlt
pusha
scas
fst
sbb
inc
push
push
popa
into
cmp
insb
and
dec
bound
std
mov
mov
adc
ret
dec
push
aaa
lret
cli
mov
jno
js
pop
cmp
jl
jecxz
adc
clc
sti
mov
or
xchg
inc
ret
and
dec
into
cmp
std
push
ja
push
arpl
dec
cmp
xchg
mov
mov
mov
inc
popf
aas
mov
fdivrl
jmp
mov
add
lock
mov
out
push
sbb
in
out
or
add
loopne
inc
sbb
adc
mov
insb
cld
sub
loope
inc
dec
mov
inc
sub
mov
jo
std
or
cwtl
mov
scas
fimuls
mov
clc
mov
dec
es
push
mov
pop
fucomip
cmpsl
test
out
cmp
leave
arpl
inc
loopne
decl
push
dec
stc
ja
addl
add
adc
or
cmp
xchg
push
xchg
movb
jl
fldl
test
movsl
push
pop
and
jo
bound
ret
inc
inc
int
mov
push
mov
mov
leave
out
fcmovbe
add
jae
mov
push
sub
jns
lods
xor
add
mov
pmaxub
mov
repnz
mov
and
lds
inc
imul
or
jnp
imul
dec
in
jno
mov
mov
pop
mov
sub
adc
cmp
test
xor
lds
pop
mov
aas
movsl
insb
sub
shrb
pushf
jne
and
test
sbb
jmp
scas
sbb
arpl
or
fcomps
and
xchg
rcrb
cmpsl
sahf
popa
scas
mov
mov
xor
loope
push
bound
std
jb
sbb
add
fucomip
cmp
pop
nop
add
fidivl
lods
rolb
inc
sbb
in
gs
jns
xor
shll
jle
cmove
cli
push
adc
ja
sbbb
cs
pop
pushf
lahf
ret
adc
inc
dec
outsl
push
pop
dec
jb
test
xchg
xchg
sub
inc
jo
aas
stc
xlat
sbb
enter
test
je
adc
sti
sahf
dec
push
insl
push
cmp
mov
mov
shrl
push
imul
cmpb
imul
loopne
adc
loope
inc
jl
xchg
push
mov
stos
into
add
loope
jae
sub
jle
xor
loope
imul
stos
aaa
mov
inc
adc
sahf
add
sbb
pop
xlat
adcl
push
jno
jp
aaa
addr16
and
repz
iret
scas
nop
cld
xor
insl
mov
cmc
xor
mov
inc
inc
leave
cs
adc
sarb
jno
outsb
scas
xchg
adc
into
sbbl
pop
test
jne
lcall
negl
xor
sub
cld
fistpl
xor
pop
ds
xchg
mov
cmpsb
add
pop
popa
inc
call
pop
push
aas
out
and
enter
xchg
or
push
ljmp
or
cmp
ss
addl
cmc
sub
pop
mov
enter
push
outsb
imul
mov
roll
jns
mov
xchg
mov
in
jb
cmpsl
dec
push
cli
ror
popa
dec
popa
pop
xchg
xor
lret
popf
mov
das
push
ja
mov
xchg
inc
or
dec
ljmp
xlat
rorl
mov
popf
lods
loope
aam
jmp
pop
std
pop
test
pop
xor
data16
or
push
mov
gs
mov
cmp
inc
fwait
xor
loop
js
ss
cli
loope
pop
push
push
mov
xchg
mov
fbld
movsb
mov
adc
jle
xchg
pop
or
fs
xchg
push
iret
jo
pop
mov
push
jg
mov
clc
shlb
hlt
dec
inc
and
pop
dec
xchg
inc
mov
cld
jne
sbb
aad
mov
lret
call
inc
push
xchg
jne
outsl
xchg
aam
pop
inc
out
mov
jp
jae
inc
dec
mov
std
jl
into
jp
ja
push
mov
lahf
xchg
out
jge
xchg
dec
lds
scas
leave
add
cs
cmp
in
pop
and
scas
jo
jl
mov
int3
call
mov
addr16
decb
call
add
pop
push
mov
outsb
mov
dec
fdivrl
inc
xor
test
jns
and
aaa
pop
js
icebp
mov
and
or
mov
clc
daa
dec
pop
sahf
and
cmp
test
je
mov
mov
push
mov
cmp
sub
or
pushf
pop
lret
dec
cmp
push
cmp
push
and
std
pop
cwtl
jl
shl
sub
fsts
lods
test
xor
or
mov
mov
sbb
loope
push
pop
push
dec
test
add
lea
sub
cmc
mov
pand
and
fwait
dec
popf
xor
or
jne
lcall
ficoms
stc
mov
out
cmp
lds
ret
pop
sti
xchg
fidivs
pop
psrad
mov
inc
dec
xor
xchg
loope
push
fildll
xor
shl
or
out
fwait
bound
cmp
xor
pop
scas
add
sahf
cmp
data16
fs
pop
popf
add
xor
mov
fs
inc
std
push
jle
dec
push
es
imul
jl
lock
sub
outsb
in
loop
fwait
adc
mov
js
cmp
xlat
cmp
mov
loop
cmp
dec
add
cltd
inc
ret
push
subb
mov
es
loop
orb
lret
add
mov
xor
sub
shlb
sbb
pop
nop
je
add
pop
int3
mov
dec
jg
mov
ljmp
incl
cltd
in
das
int3
popa
or
into
mov
xchg
cmp
xchg
in
in
mov
mov
mov
jl
imull
inc
and
leave
ret
dec
scas
inc
insb
pop
pop
rcrl
jecxz
mov
push
fstpl
and
pusha
mov
mov
rcr
or
mov
sbb
incb
imul
jp
xchg
cmc
lods
xchg
dec
mov
xor
jle
int3
jo
jecxz
jmp
test
sub
pop
inc
frstor
lret
and
sbb
xchg
int
out
fiaddl
add
cld
cmp
nop
int
dec
xchg
mov
icebp
xchg
sbb
xchg
and
jg
mov
dec
subb
rorl
mov
daa
and
std
in
bound
xor
icebp
or
mov
ficomps
outsl
add
jecxz
xchg
push
inc
cmovge
mov
sbb
ds
call
divb
push
cmc
or
sbb
aas
push
aad
sub
popf
loop
xchg
sti
sub
and
push
bound
pop
xor
mov
fsub
pop
jbe
ljmp
cmpsl
cmc
lcall
mov
das
mov
push
mov
inc
push
and
push
inc
pop
int
pop
xchg
xchg
adc
mov
pop
icebp
test
mov
mov
fistpll
dec
xor
mov
xchg
dec
vpsrld
fdivl
dec
pop
xor
loop
or
lods
pop
fistpl
aas
sbb
fadds
and
pusha
cmp
push
or
dec
add
insl
jmp
mov
mov
mov
insl
mov
cld
scas
in
mov
sar
mov
push
insb
jp
push
popf
mov
push
cmpb
fsubrl
daa
and
push
sti
inc
dec
ss
xchg
jne
sub
cmp
js
pop
es
leave
cmpsl
jle
and
insl
add
insb
push
inc
in
and
inc
jg
or
jl
push
rorb
dec
outsb
shll
inc
lea
adc
cmp
xor
xchg
dec
dec
jnp
pop
and
sbb
imul
cmovbe
xchg
sub
cmpsb
lods
pop
ret
nop
cld
fidivs
into
mov
cs
aam
lods
sub
xchg
sub
lods
add
mov
cmc
dec
in
xor
and
mov
pop
wrmsr
stc
mov
add
jbe
mov
rcl
inc
sarb
xlat
xchg
sbb
sub
adcl
xor
test
neg
or
fildll
gs
cmpsl
inc
in
push
repz
orl
rcll
sti
xor
lret
mov
or
aaa
push
call
sub
sbbl
or
loop
jns
xchg
clc
mov
test
fidivrs
pop
adc
xor
sbb
shlb
testb
inc
push
dec
pop
push
jae
lea
insb
mov
dec
add
inc
sub
test
icebp
cmp
int
add
ljmp
sbb
mov
les
dec
jne
push
jecxz
mov
xor
sbb
push
push
xor
dec
test
cmp
fisubrs
stos
xor
add
iret
xchg
pop
test
dec
jp
sbb
pop
lahf
ja
popa
arpl
imul
xchg
ss
inc
and
sub
push
mov
mov
add
hlt
ja
ret
dec
or
push
cmp
std
lock
clc
inc
cmp
dec
fsubl
sub
stos
in
push
addr16
out
xchg
xor
int
lds
cmp
scas
fwait
jle
movsb
push
dec
dec
xor
pop
and
fwait
push
xor
cmp
scas
or
pop
insb
clc
xchg
outsl
jb
nop
lds
call
in
mov
out
mov
hlt
adc
dec
rol
fsubrl
cwtl
insb
pop
sub
inc
xor
les
dec
or
fst
icebp
rcr
mov
and
shrb
fsubrs
sti
in
pop
jo
cmpsb
mov
pmulhuw
sti
dec
shlb
inc
sbb
xchg
sbb
pop
movb
pushf
jb
jmp
cmp
ljmp
aaa
mov
shr
cld
mov
cwtl
or
fisubrl
mov
add
pop
out
lods
nop
inc
pop
adcb
dec
hlt
push
mov
sbb
dec
enter
hlt
std
fadd
in
sub
xchg
bound
mov
shll
dec
push
xor
pop
or
sub
pop
jae
leave
sub
cmp
sub
add
jp
aas
adc
or
jns
push
ret
rcll
icebp
repz
dec
shrl
outsb
sub
in
dec
push
xor
dec
stos
adc
xchg
jp
inc
ljmp
push
loope
or
push
insb
dec
pop
cltd
inc
or
out
insb
ja
sahf
and
or
aas
push
jb
in
das
xchg
ret
arpl
movsb
leave
inc
je
or
dec
sub
lds
aas
ja
insb
lahf
or
xor
adc
jecxz
jo
fisubs
push
cli
dec
test
daa
imul
jnp
mov
popa
dec
xchg
pusha
inc
and
adc
inc
adc
cmp
dec
mov
adc
mov
lea
mov
push
lock
int
neg
shld
popf
add
lcall
xchg
push
jl
xchg
jle
fidivrl
adc
or
iret
mov
and
fnstcw
imul
nop
pusha
jge
jmp
pop
add
jo
lods
jecxz
lret
insl
sub
xchg
adc
sbb
test
cmp
test
stos
pop
xchg
pop
sbb
cmp
movsl
dec
lock
fs
int
fdivrl
xchg
cmp
lock
into
adc
xchg
add
rcrb
adc
fnsave
mov
lods
and
scas
xor
xor
call
test
jp
aaa
lock
pop
pushf
jmp
add
or
fbstp
dec
je
cmp
addr16
jnp
mov
sbb
inc
cmp
cmp
mov
movsl
push
cwtl
xor
inc
rol
outsl
ljmp
or
and
mov
or
jp
adc
fucomip
in
mov
cli
dec
outsl
or
push
xchg
adcb
mov
repz
mov
popf
lahf
hlt
test
pop
mov
cmp
push
inc
shlb
cmp
leave
xor
stos
jmp
cwtl
jp
mov
adc
mov
lds
add
adc
lods
pop
daa
fdivrs
ret
push
aas
pop
lret
sbb
add
cli
std
sti
pop
add
sbb
dec
int
jmp
pop
mov
test
push
lds
push
loop
add
mov
out
data16
adc
adc
fadds
xor
cmp
lahf
lahf
push
in
jmp
dec
outsb
lcall
dec
bound
scas
jmp
in
enter
push
pop
inc
dec
sub
arpl
es
test
jae
repnz
shlb
cmpsb
inc
stc
or
push
mov
adc
push
hlt
or
and
add
sub
fidivrs
movsl
les
mov
adc
push
dec
sbb
mov
mov
pop
add
dec
andl
or
cs
mov
rorb
cmpsl
fisubs
insb
daa
pop
stos
ret
fisttpll
push
fldcw
jbe
pop
ja
loope
inc
cmp
mov
ds
test
inc
mov
test
lahf
and
lcall
cltd
pop
inc
fwait
dec
jg
cs
pop
and
mov
pushf
clc
pop
repnz
pop
cmp
and
and
fcmovbe
bound
dec
stc
jne
sbb
dec
mov
hlt
jmp
lds
xchg
jbe
call
stos
int3
push
cli
arpl
xor
clc
rorl
inc
mov
push
or
lret
cmp
in
jmp
test
and
sub
fisttps
faddp
push
pop
data16
pop
pop
or
movsb
sarl
sarb
xlat
jbe
adc
call
dec
xor
jmp
test
rolb
cmp
mov
mov
dec
rcll
cmpsl
sbb
xchg
add
inc
arpl
shrb
std
sahf
xor
or
jg
int
divl
mov
insb
cmp
dec
xor
call
or
jns
adcb
sbb
push
faddp
cmp
cmp
jne
std
std
lods
in
lock
sbb
clc
sub
jp
dec
rorl
xor
pop
loope
scas
fwait
and
xor
cmp
js
push
jbe
fisttpll
hlt
inc
inc
sbbl
mov
gs
js
call
les
stos
inc
xchg
cltd
sbb
add
push
xchg
jp
cli
imul
mov
fstl
xor
sub
xchg
mov
sub
push
ljmp
leave
gs
in
mov
mov
stc
clc
aaa
mov
jmp
jno
jl
stc
cmp
arpl
outsb
adc
adc
add
ret
enter
fidivs
push
dec
sbb
mov
push
inc
inc
outsb
xor
repnz
subb
outsl
mov
push
insb
cmovle
inc
pop
jge
outsl
bound
cmpb
jbe
out
mov
shrl
mov
mov
repz
sahf
cmp
jecxz
mov
jg
add
push
sbb
or
dec
mov
sub
jmp
mov
les
mov
out
pop
push
into
cmpsb
arpl
imul
or
or
add
add
rorb
lods
add
pop
shrb
sbb
push
imul
sysexit
jno
or
or
hlt
mov
inc
inc
xor
and
cmp
in
bound
je
addl
rcrb
pop
roll
push
cmp
cmp
fs
or
or
arpl
xchg
add
and
mov
pop
inc
mov
or
arpl
mov
lods
popa
cli
repnz
clc
insl
pop
jns
fistpll
leave
add
cmc
sahf
fistpll
push
mov
lods
dec
aam
cld
das
cmp
int3
cmp
xchg
jmp
out
xlat
imul
outsb
xlat
jns
test
js
push
xor
xchg
stc
mov
mov
sarl
pop
mov
ljmp
gs
or
mov
sbb
test
inc
dec
mov
push
lcall
inc
mov
dec
jl
repz
sub
insb
sub
faddl
add
pop
cltd
or
stos
mov
xlat
mov
xor
xlat
add
dec
sbb
pop
inc
pop
xlat
pop
or
imul
icebp
xchg
gs
sub
cmp
cmc
xor
roll
enter
jle
and
dec
aam
test
into
xorl
cmpb
jle
shll
or
and
mov
addb
lock
mov
cmp
mov
mov
aad
ret
lret
mov
repnz
imul
and
mov
sub
xchg
cmp
movsb
ficompl
xchg
in
icebp
hlt
cltd
or
ret
add
mov
ds
push
lock
lock
pop
in
fisttpl
sub
sub
out
int3
or
sub
imul
jmp
mov
mov
xchg
cwtl
pusha
sub
std
imul
leave
jle
inc
imul
add
sbb
cmp
pusha
notb
popf
adc
fs
jle
push
daa
push
shll
pop
xor
jo
push
dec
mov
dec
pop
mov
push
out
push
sub
cmc
pushf
lret
idivl
lea
ja
push
mov
xchg
and
pop
mov
aas
adc
mov
adc
test
aam
iret
dec
out
inc
std
add
mov
inc
lret
mov
in
popa
fwait
or
icebp
cmpsl
daa
inc
dec
jno
rep
into
sub
fidivs
push
adc
iret
or
adc
in
pop
mov
jl
enter
js
jne
hlt
es
dec
ljmp
lea
icebp
loop
pop
adc
cmp
inc
xor
lods
mov
jg
mov
xchg
adc
lock
cmp
sahf
repnz
mov
idiv
mov
roll
or
lret
xchg
add
mov
repnz
cwtl
rcl
adc
mulb
cmpsl
ret
dec
xchg
mov
in
je
pop
sub
mov
mov
scas
fsubs
dec
pop
mov
xlat
lahf
cli
cwtl
addr16
pop
bound
inc
subb
push
mov
sbb
clc
and
jnp
icebp
lea
sub
stc
xor
scas
out
mov
sub
in
lcall
sub
int3
ja
inc
mov
xor
loop
imul
dec
and
xor
fwait
andl
jecxz
xchg
inc
pop
sbb
mov
mov
jp
sub
bound
pop
and
cmp
jg
mov
or
mov
sub
imulb
sti
enter
or
add
cmpsl
int
lret
push
xor
pushf
addr16
sahf
dec
loope,pt
enter
inc
dec
dec
cmp
dec
inc
fdivrs
and
iret
xlat
dec
leave
sub
mov
inc
mov
xor
je
and
ss
dec
inc
sbb
lret
mov
ja
in
lock
call
inc
jge
rcl
cmpsl
jecxz
pop
push
gs
ljmp
repz
pop
pushf
pop
and
push
mov
xor
mov
fnsave
sbb
arpl
xor
mov
mov
dec
sub
mov
push
fisubl
aad
int3
ret
ret
sub
jae
sbb
loope
shlb
int
pop
xorl
out
mov
in
sub
pop
shl
rcrb
pop
or
mov
mov
xor
in
xlat
aas
push
mov
repz
xchg
rolb
daa
inc
fidivrs
out
insl
push
adc
pop
jge
popa
or
popa
mov
push
stos
sar
std
mov
or
or
test
out
dec
scas
xchg
clc
fcomp
pop
jge
sub
daa
mov
filds
jg
ret
stos
movb
test
adc
ja
or
adc
ja
popa
mov
pop
scas
inc
dec
andl
daa
adc
lds
enter
bound
cwtl
aam
sbb
imul
jmp
xor
xchg
dec
shr
jnp
xor
lock
or
stc
stc
ss
movsb
pop
dec
aas
xlat
pusha
repz
das
mov
mov
cmovbe
xchg
add
loopne
mov
roll
negl
not
dec
scas
mov
pop
mov
cmpsb
sbb
mov
push
jae
clc
pop
in
inc
scas
jb
pop
jnp
push
shlb
sar
adc
mov
imul
repz
pop
rol
jmp
mov
xchg
inc
or
repnz
stos
push
xchg
ss
mov
aaa
adc
jge
or
lds
loop
and
adc
fimull
das
push
adc
add
std
fcmovne
xchg
call
push
fisubs
insb
inc
adc
stos
in
inc
jmp
mov
mov
sti
mov
pop
scas
sub
leave
mov
jg
in
pusha
imul
cmp
loope
jmp
mov
sub
cli
push
or
insl
out
sbb
xchg
in
mov
sbb
fisubl
orl
andl
rcrl
shll
loop
fnstsw
xchg
inc
imul
rcr
fsubl
enter
repz
inc
cld
pop
mov
lret
repnz
push
subb
xchg
lahf
sub
mov
push
cwtl
jl
adc
jecxz
sub
mov
ret
sbb
cmpsl
movsb
mov
pop
pop
jge
sbb
das
js
inc
bound
xor
sub
in
mov
scas
xor
mov
das
push
in
mov
mov
je
xchg
xor
jecxz
jnp
mov
xlat
cmp
mov
add
fs
mov
xchg
xor
sub
mov
outsl
das
loope
add
xchg
cmc
cltd
aam
test
sahf
clc
add
jae
xchg
test
inc
push
pop
in
jp
cwtl
mov
insb
sahf
push
mov
stc
jp
ja
enter
jnp
mov
icebp
jg
subl
and
mov
loop
leave
jno
aam
xchg
mov
sub
jo
mov
out
xor
and
lods
mov
add
or
fxch
inc
mov
nop
ds
dec
cmpsl
inc
jo
jmp
mov
xor
sub
mov
add
jl
aaa
in
imul
push
xchg
pop
adc
sbb
jae
rorb
sbb
sti
jne
mov
pop
out
clc
and
mov
dec
jmp
sti
mov
ds
sbb
sub
or
inc
arpl
stos
adc
mov
push
dec
and
pusha
sub
cs
es
fdivs
push
mov
adc
push
mov
mov
mov
lds
push
or
xchg
dec
push
pop
leave
mov
sbb
sub
xor
lock
sbb
pop
or
ja
imul
mov
inc
and
fcompl
rcrl
mov
jle
stc
mov
mov
cmpsl
jl
psrld
jns
dec
mov
shl
es
pop
pop
test
subb
mov
ds
dec
add
add
inc
mov
or
lahf
stc
jg
pop
sahf
clc
into
lock
mov
xor
hlt
mov
or
shll
pusha
test
xchg
bound
call
mov
cld
scas
imulb
clc
es
add
mov
in
sbb
add
push
jo
imul
inc
pop
repz
inc
addl
repnz
pop
xchg
mov
mov
lret
insb
das
std
lahf
sbb
mov
mov
jge
add
xor
mov
mov
sarb
in
imul
pop
xchg
push
addps
adc
idivb
test
lea
rcrl
xor
scas
icebp
mov
pop
jp
je
sub
sub
scas
adc
inc
push
jl
aam
mov
sbb
in
dec
inc
add
xchg
sub
mov
jo
xchg
push
inc
cmp
ret
scas
pushf
imul
fwait
fisttpl
xor
lods
ljmp
and
fwait
ja
iret
cmp
mov
xchg
imul
cmp
dec
iret
pop
lea
xchg
mov
inc
sbb
adc
out
pop
incl
jle
xor
xor
leave
jno
add
and
sbbb
jl
cmp
mov
xor
and
bound
pop
enter
xchg
mov
cmc
cld
repz
lret
jmp
jns
xlat
fs
push
rcl
dec
shr
inc
test
inc
lds
adc
shlb
push
jbe
jle
pop
out
cmp
mov
dec
movsb
or
xchg
mov
pop
and
lret
aaa
mov
sbb
addr16
or
js
xorl
leave
dec
es
lods
test
inc
jbe
mov
adc
jmp
push
js
incb
add
xor
in
lds
or
cmp
and
lods
jno
pop
fcoms
pop
je
jmp
fmul
scas
adc
loop
outsl
pusha
test
jbe
dec
cmpsl
movsl
add
push
sbb
jbe
sub
sub
adc
and
and
ret
mov
mov
pop
sbb
adc
cmp
rcrl
in
add
clc
adc
or
iret
sub
ret
push
xor
inc
mov
or
xor
inc
cld
pushf
add
jae
inc
dec
lods
push
out
sbb
loopne
hlt
sub
or
sbb
xor
sahf
subb
mov
rcrb
xchg
in
rorl
insb
and
dec
pop
inc
ret
mov
out
pop
test
fstpt
mov
stc
xchg
aam
jl
cmp
lods
frstor
sub
pop
imul
int3
ret
cmpsl
inc
adc
mov
add
lcall
push
in
dec
hlt
sub
cmc
push
jne
add
lret
mov
pop
xor
sahf
sarb
inc
ficomps
sti
mov
push
push
mov
or
add
cmpsl
inc
es
inc
std
push
sub
rcr
std
gs
lret
inc
xor
push
or
cwtl
pop
mov
mov
testb
and
hlt
je
cli
insb
push
adc
out
sub
add
lcall
dec
cltd
loop
sbbl
or
mov
ja
imul
lds
mov
gs
push
dec
xchg
je
cmp
mov
mov
lods
and
inc
mov
add
xlat
push
jns
inc
leave
jmp
or
push
jno
nop
dec
pop
pop
mov
scas
adc
mov
add
fildl
push
loopne
fucomp
int3
into
sbb
add
and
clc
fmull
shl
mov
sub
dec
mov
adc
scas
jb
jae
scas
in
int3
mov
or
adc
xor
and
sarl
in
pop
push
cmp
loop
jg
aaa
cmpsl
shlb
hlt
cld
and
mov
dec
bound
jno
idiv
inc
gs
inc
xlat
jmp
add
lahf
shrl
sbb
sub
arpl
mov
mov
cwtl
addr16
xor
out
xchg
jecxz
jecxz
lcall
lret
xchg
hlt
shl
and
mov
stos
xchg
add
xor
add
add
dec
cmp
ret
push
lret
sahf
cmpsb
icebp
aad
int3
pop
xor
jle
xchg
test
jl
popa
adc
jns
shrb
mov
push
mov
jnp
loop
push
fucomip
andl
aad
pop
fldl
dec
push
lret
repz
cmp
and
mov
mov
inc
xchg
int3
mov
xchg
and
xlat
jae
rcll
loope
inc
loope
dec
in
sahf
sub
mov
test
cmp
mov
mov
sbbb
jg
les
jne
imul
sub
jle
xchg
aam
ljmp
in
cmp
xchg
pop
cmpsl
out
scas
fdivrs
lret
imul
shlb
aad
and
pop
fwait
gs
pop
xchg
fs
lret
adc
sub
imul
es
out
cmp
jmp
and
iret
adc
je
xor
xor
jnp
rolb
inc
jno
cmp
mov
fdivrl
fxch
jbe
pop
or
mov
dec
sbb
mov
enter
push
and
pop
or
repz
ret
cld
dec
cmpsl
lods
jmp
lcall
jecxz
and
andb
inc
cmp
insl
fmuls
xor
jns
aam
pusha
clc
push
int3
movsl
cmp
pcmpeqd
outsl
mov
dec
lret
repz
push
stos
loopne
jle
sbb
pop
push
add
jno
mov
mov
pop
fildl
inc
push
jo
sbb
pop
lret
xchg
pop
cld
js
adc
jnp
xor
or
xchg
mov
decb
or
jne
xchg
cmpsb
dec
inc
mov
dec
movsl
mov
lret
data16
cmpsl
ljmp
mov
rclb
lcall
movsb
fs
js
shrb
ja
sbb
dec
fstps
sarl
jle
ljmp
xchg
push
out
jg
outsl
mov
xchg
js
inc
pop
inc
int
pop
jmp
iret
sbb
bound
lahf
xchg
loope
hlt
enter
repnz
mov
xchg
inc
test
mov
mov
push
or
sti
mov
xchg
mov
cld
jge
pop
xchg
lea
push
fldl
pop
pop
out
mov
cltd
pop
stos
and
mov
std
push
ljmp
aas
sbb
mov
enter
cmp
insb
xor
adc
imul
jmp
arpl
sub
sub
jne
sub
sbb
in
rcl
movsl
xor
loop
daa
mov
lret
pop
pop
enter
pusha
ret
call
xchg
test
xor
xor
xor
mov
mov
push
xchg
mov
pop
dec
in
push
lret
ljmp
adc
aad
mov
mov
jns
gs
mov
int
mov
mov
das
cmpsl
nop
adc
jns
ds
sbb
scas
push
aad
xchg
das
jae
sub
clc
mov
jnp
movsb
outsb
imul
and
fcompl
lock
leave
hlt
test
dec
jp
fwait
lahf
and
xchg
push
adc
les
js
loopne
je
out
loopne
cmp
xor
add
fwait
pop
xor
call
lret
inc
scas
sti
add
leave
cmpsl
sub
rcll
push
call
fcoml
mov
jmp
ljmp
fdivrl
push
scas
andb
mov
xor
jl
hlt
sub
fsubrp
pop
and
call
mov
sub
dec
cmp
ret
mov
imul
and
fildl
sbb
sbb
xor
pop
push
rolb
lahf
stos
rorl
mov
inc
cmp
add
out
icebp
jb
loop
jbe
loopne
lahf
lds
jb
sarb
add
stos
cmp
jmp
cmp
pop
aam
dec
mov
ret
xor
mov
addr16
sbbl
test
mov
jmp
insb
or
in
mov
ljmp
mov
adc
ficoms
movsb
jmp
rclb
es
inc
pop
mov
repz
cli
iret
or
sub
xorl
adc
aaa
xor
fstps
fsubl
lret
out
xor
push
insl
mov
cwtl
jmp
lcall
adc
out
repz
xor
aas
dec
jmp
adc
inc
aam
repz
aaa
mov
inc
push
fs
call
xor
dec
xlat
lret
out
adc
cmp
mov
dec
cmp
in
jecxz
mov
shll
dec
and
outsb
mov
popf
leave
movb
adc
movsb
xor
mov
subl
or
jl
adc
jnp
insl
popa
testl
or
pusha
jge
andb
shlb
cld
bound
sarb
les
sahf
mov
std
add
insb
repz
jle
mov
das
addl
jae
dec
mov
sbb
sub
add
call
and
xor
jno
cld
stos
cmp
ret
mov
inc
jno
test
iret
in
std
adc
mov
out
andl
sbb
out
dec
pop
nop
sahf
fs
cmp
jp
test
das
xchg
repz
sub
aaa
ja
adc
addl
inc
dec
push
lock
pop
mov
inc
movsb
cmp
mov
xchg
ret
jl
or
cmp
adc
in
xchg
or
ja
or
or
jg
enter
mov
pop
push
mov
pop
ret
xchg
adc
xor
icebp
pop
push
loopne
mov
mov
and
cmp
mov
push
mov
and
sub
dec
mov
and
cmc
shlb
sub
adc
sbb
sar
aas
mov
jp
add
into
and
pop
cmpsb
pop
xor
mov
dec
leave
dec
xor
jns
pop
mov
inc
adc
pop
and
push
and
repz
lret
cmp
mov
leave
ja
cld
mov
fcompl
mov
pushf
dec
subb
adc
lods
sub
aam
xor
mov
dec
lock
sub
xchg
scas
sub
adc
add
cmpsl
pop
mov
jb
mov
dec
cs
dec
int3
and
xchg
stos
xor
mov
sahf
lret
mov
ret
data16
ret
roll
sub
lods
pop
jno
loope
pop
icebp
ja
push
and
shr
scas
mov
sub
xor
or
and
adc
ror
daa
jno
aam
bound
cwtl
adc
hlt
ja
lock
jp
cltd
push
push
or
lahf
xchg
lahf
mov
cli
bound
push
test
int3
push
xchg
stos
fs
bound
inc
in
adc
pop
pushf
mov
jae
daa
pop
movsl
adc
jl
lea
sub
xor
push
jns
mov
aam
push
out
pop
inc
sub
inc
adc
stc
ljmp
jae
xor
sbb
les
inc
jl
mov
daa
gs
push
mov
xor
jmp
cmp
sbb
fdivrs
aas
pop
cmp
cmc
push
lods
test
add
iret
dec
inc
lods
cli
or
movsb
lcall
cmpsb
lock
adc
loopne
add
and
lcall
loopne
ljmp
cmp
mov
outsl
lahf
in
sub
arpl
sahf
dec
fldl
imul
into
or
mov
aam
and
mov
adc
call
iret
outsb
sbb
sbb
sbb
pusha
test
and
push
inc
dec
cmp
iret
pop
mov
cmp
shl
or
cmovnp
repnz
pop
popa
addr16
lea
insb
dec
xor
sahf
sub
adc
paddq
push
lret
xchg
ljmp
out
lds
in
mov
jp
pop
inc
mov
imul
shl
dec
out
adc
cmp
push
push
mov
and
xchg
sub
mov
test
lock
mov
jge
sbbb
cmp
adc
into
out
js
lods
mov
push
pop
addr16
insb
test
rcrb
jne
adc
dec
fstpl
repz
cwtl
cs
sbb
jp
in
hlt
rcr
fwait
cltd
xor
dec
pop
ficoms
int
fs
mov
add
and
push
jb
pop
push
std
mov
jbe
push
mov
xor
pop
pushf
jne
bound
push
adc
xor
in
in
lods
sub
mov
repnz
dec
jo
out
pop
or
arpl
daa
lahf
lret
inc
mov
sub
dec
hlt
dec
out
fs
popf
jmp
and
in
pusha
cmp
push
sbb
dec
movsl
ja
push
jmp
dec
rcrb
lcall
nop
mov
push
or
rcrl
pop
or
mov
add
jns
faddp
jb
sub
xor
repnz
dec
sbb
dec
jle
mov
daa
mov
mov
repz
inc
or
mov
movsl
adc
out
adc
insb
inc
mov
lds
jg
add
ret
sbb
outsb
negl
test
out
loop
into
pop
cmpsb
cmp
dec
and
and
mov
add
add
xchg
outsl
xchg
jp
pusha
pop
ficoml
lret
mov
mov
jmp
test
rcr
jb
pop
jmp
ss
push
test
scas
mov
xchg
nop
rcll
out
fsubs
inc
xchg
out
orb
insb
sub
xorl
jmp
pop
inc
push
popf
fdiv
ret
fstpt
xor
mov
jns
loope
movsb
mov
pushf
cmp
xchg
pop
mov
or
inc
arpl
test
cmp
sub
push
xor
xor
enter
lcall
shlb
dec
xor
dec
daa
jmp
xchg
xchg
sbb
lahf
fsubr
mov
test
fwait
inc
inc
hlt
adc
cmp
ret
lret
andb
mov
lcall
xor
sbb
pop
test
jbe
add
decl
add
scas
sub
mov
adc
adc
xchg
mov
mull
stos
inc
mov
mov
and
aas
xor
pusha
lds
dec
scas
dec
inc
popf
stc
push
cmpsb
push
into
fmul
xor
icebp
and
dec
sub
mov
loope
movsb
xchg
xor
je
ljmp
jge
stos
std
jle
andl
push
mov
dec
movsb
mov
adc
aam
into
and
aam
popa
std
or
xchg
inc
pop
aad
sub
push
jns
cmpsl
js
jle
and
xchg
loop
fiaddl
push
push
lock
inc
xchg
cli
jmp
xor
pop
lock
fcomps
pusha
push
adc
xor
push
pop
xchg
in
add
inc
test
cmovnp
test
pop
and
out
movsl
imulb
lcall
pop
fisttpll
or
jb
sub
bound
enter
fsubr
jp
dec
dec
js
xchg
sbb
xchg
push
imulb
jae
xchg
cltd
sub
sbb
aaa
xor
pop
incb
push
mov
adc
aaa
mov
pop
add
subb
int3
or
mov
sub
jo
sti
aaa
xchg
adc
fisttpl
int3
in
jno
xchg
jge
inc
mov
dec
insb
mov
scas
bound
jecxz
lea
sbb
cli
scas
sub
cmp
repnz
sbb
or
pop
xor
lret
sub
dec
lods
inc
pushf
dec
jne
pop
orb
dec
dec
sub
sub
mov
jno
push
ds
fsubrs
cwtl
xchg
jge
call
imul
popf
lods
xor
cmp
jg
jo
imul
enter
cmp
mov
mov
test
pop
pop
dec
lods
test
mov
mov
loope
push
push
dec
mov
lods
jne
fwait
push
xchg
or
mov
cltd
mov
mov
pop
and
fiaddl
in
orl
mov
arpl
sar
rcrl
and
add
aaa
mov
xor
adc
inc
add
cmp
and
cltd
mov
js
inc
jmp
stos
sbb
push
and
sub
jne
andb
dec
dec
xchg
add
hlt
pushf
mov
leave
push
pop
lds
cmp
lret
insb
mov
sbb
lds
dec
rcrl
dec
push
in
and
test
mov
sub
sub
sbb
sbb
lret
add
sbb
inc
cli
dec
jge
fcmovbe
popa
xchg
cltd
sarl
shl
jb
jne
jecxz
repz
push
fs
mov
nop
sahf
call
mov
test
iret
mov
in
andb
sub
mov
adc
clc
jl,pn
stc
jno
lret
cmpsb
pop
sub
outsb
call
mov
mov
push
jo
pop
xor
mov
cmp
cmp
in
push
cmp
iret
add
repz
stc
pop
dec
ret
push
sti
int3
xor
xor
iret
cld
jle
test
xor
test
jo
push
jecxz
jns
mov
push
leave
dec
pusha
sbb
cmp
sbb
jnp
dec
mov
cmpsb
mov
mov
out
sti
or
or
mov
jne
xchg
mov
cli
aad
repnz
lahf
xor
jns
cmp
call
adc
push
cmpsl
xor
stos
int
and
xlat
popa
sub
lahf
lret
jne
popf
pop
fsubs
jb
mov
jno
cli
and
fisubrs
sbb
push
lahf
sbb
icebp
dec
dec
call
rcrb
mov
inc
jecxz
sub
sbb
mov
and
mov
xor
sub
xchg
adc
icebp
inc
lods
push
jl
push
mov
xchg
sbb
addr16
mov
mul
dec
es
loopne
add
cmpsb
insb
mov
or
mov
fdivr
push
push
aad
add
adc
and
cmp
stos
sub
dec
cwtl
jns
imul
call
mov
in
lcall
int
sub
push
lea
xchg
cmp
insl
lds
xor
push
mov
dec
jl
cmp
add
pop
and
jne
mov
icebp
rol
aas
fptan
addr16
adc
xor
ja
hlt
getsec
push
cmpsb
xor
fnstcw
sti
adc
test
push
in
mov
aas
sub
and
sahf
leave
xor
dec
jns
jo
push
sbb
shlb
imul
pop
mov
arpl
and
pop
mov
test
adc
stos
loop
lret
gs
sub
sti
jl
jbe
mov
dec
fsubs
sub
popf
gs
mov
outsb
cmp
cmp
fsincos
out
mov
xchg
les
and
inc
xlat
push
cld
lods
xor
adc
ljmp
and
addb
cmp
mov
or
cmp
pusha
sbb
out
fwait
and
dec
push
shrl
adc
aad
sub
pop
fstps
pop
cltd
or
mov
lods
ljmpw
xor
and
sbb
cmp
outsl
sub
cmp
pop
push
sarb
in
jg
sbb
inc
aas
cmp
mov
cmpsb
jb
or
aad
mov
push
addr16
scas
jnp
fisubs
mov
jl
mov
std
xor
lods
mov
and
fdivp
addr16
pop
pop
lret
dec
xor
pop
data16
je
xlat
sub
lcall
lods
mov
jno
hlt
sub
sarl
jno
outsl
xchg
xchg
out
out
data16
pop
leave
pop
subb
popa
push
inc
mov
mov
lock
and
mov
pop
stos
add
jl
dec
outsl
mov
pop
mov
icebp
cmpsb
rcrl
mov
sub
mov
jne
push
mov
lods
ljmp
mov
lea
shlb
mov
lahf
jb
test
shlb
add
or
jp
ljmp
int
adc
push
cmp
scas
mul
inc
lcall
outsb
data16
adc
sbb
aam
loope
cld
xlat
in
out
dec
repz
insb
jg
daa
test
aam
inc
pusha
rcrl
jle
je
xchg
jp
test
rol
outsl
inc
loopne
sbb
jecxz
mov
fistps
fisttpl
test
sub
and
rolb
leave
insl
into
add
or
inc
jp
daa
test
rorb
cmp
rorb
inc
fisttpll
stos
xchg
insl
sbb
dec
pop
dec
inc
pushl
mov
jecxz
or
mov
int3
fidivrs
push
push
push
test
and
mov
mov
push
xchg
mov
mov
test
cmp
inc
jge
nop
mov
xchg
lods
iret
jmp
xchg
xchg
in
pushf
xchg
shlb
pop
js
and
xchg
adcb
cs
push
je
mov
rcr
ficomps
ja
fs
cmp
pop
dec
lods
cmp
cwtl
or
lock
repnz
dec
add
jle
stos
test
popa
out
cwtl
lahf
lcall
and
rcl
xchg
stos
xor
inc
xor
sub
repz
daa
sub
aad
sub
inc
gs
ret
pop
jo
adc
dec
fwait
stc
lods
pop
push
mov
mov
adc
in
ret
xor
aaa
xchg
std
pop
negl
pushf
enter
sub
lea
iret
push
cmpb
jl
in
in
pop
imul
jns
jl
fistpll
add
in
sarb
add
jle
scas
test
rclb
push
adc
cmp
xchg
enter
outsl
mov
adc
push
repz
pop
jb
dec
and
shlb
outsl
dec
mov
cld
mov
pop
mov
mov
pop
mov
push
jle
inc
cmp
or
out
stc
adc
dec
mov
xchg
rorl
mov
lcall
jecxz
mov
imull
sub
insl
stc
mov
jb
in
jns
mov
pop
sub
ret
adcl
aas
push
sti
lods
test
dec
push
mov
dec
jge
das
les
popf
cmp
jge
pop
xor
sar
leave
dec
fbld
jmp
mov
pop
mov
stos
scas
add
and
jl
adc
inc
inc
xchg
gs
imul
cmp
fstl
int3
and
and
push
add
dec
lods
or
fs
dec
adc
jmp
push
mov
pop
in
fidivrl
in
insb
test
sbb
lcall
fcoms
push
gs
jge
aad
pop
dec
xchg
popf
jmp
movsl
lods
imul
or
call
add
inc
stos
insb
out
xor
es
mov
icebp
es
push
and
ss
movsb
jne
and
adc
push
xchg
adc
xchg
pop
jp
cmp
sub
insb
add
test
icebp
push
rcr
xchg
push
imul
mov
ret
test
in
push
jb
sbb
sar
int3
adc
pop
sub
mov
les
pop
aaa
enter
popf
in
mov
push
pop
jg
mov
jnp
lea
add
shl
lahf
lcall
outsl
sbbl
cmp
mov
xor
mov
or
cmpb
popf
fnstenv
dec
fwait
mov
dec
jg
repz
jl
pusha
jge
stos
mov
ja
jb
inc
jbe
mov
shll
sbb
mov
cmpsb
loop
dec
ret
jl
cli
mov
cmp
xchg
dec
mov
pusha
inc
push
data16
adc
jae
ds
xor
fcomp
movsl
sub
mov
sbb
mov
xchg
lods
xchg
mov
test
add
daa
arpl
xchg
movsb
outsl
ss
mov
mov
lods
jnp
andb
mov
or
jl
sbb
sub
pop
aas
mov
jge
jp
mov
pop
or
sbb
inc
sub
xor
mov
jbe
adc
mov
addl
imul
popf
lret
inc
xlat
nop
pop
xor
gs
sbbb
mov
sub
xor
mov
push
adc
js
xor
dec
out
mov
movsb
sub
inc
sub
rep
or
and
sbb
inc
and
shll
lahf
dec
cmp
test
movsl
aam
xor
repz
push
inc
lods
imul
test
adc
cmc
adc
ffreep
add
scas
jl
loopne
inc
lcall
push
xlat
std
dec
jo
cwtl
xor
cmp
pop
jae
xchg
inc
xchg
pushf
cmp
and
test
pop
aam
and
push
xchg
rolb
mov
sub
jg
jae
push
mull
or
cmp
pop
inc
das
stos
dec
mov
lods
leave
dec
stos
les
lods
inc
xchg
rol
mov
cmpsl
pop
in
roll
sbbl
rorb
push
stos
and
aaa
mov
test
cmp
adc
scas
addl
test
fsubs
shrb
out
push
sub
pop
add
jmp
mov
cmpsb
mov
dec
mov
xchg
cmp
faddl
and
xchg
ljmp
movsl
inc
xor
xor
inc
xor
int3
mov
cmpl
pop
mov
xacquire
jne
sbb
out
cmc
lock
mov
mov
inc
xchg
and
and
mov
rcrb
loope
pusha
addr16
nop
lcall
cmpb
jmp
lcall
dec
incb
push
mov
wbinvd
dec
fnsave
mov
cmp
jmp
sub
in
gs
push
lods
xchg
jbe
inc
popa
add
data16
shr
rclb
mov
std
inc
push
mov
sarb
imul
daa
insl
pop
pop
nop
rep
loopne
inc
mov
inc
xchg
mov
test
mov
sub
lret
xor
daa
lds
cmp
mov
shrb
popa
test
mov
pop
clc
add
ja
sbb
jmp
push
js
jmp
mov
outsb
aad
and
hlt
lret
inc
dec
pop
cmpsl
push
fcompp
scas
xchg
fdiv
decb
pop
xchg
sar
shl
pop
iret
gs
lods
loopne
jnp
lahf
xchg
mov
and
arpl
call
sub
dec
jmp
sbb
xor
inc
sbb
cmpsl
adc
js
jnp
adc
lock
mov
ret
inc
mulb
and
divl
push
lret
mov
xchg
int
push
or
and
imul
ss
cmpsl
jl
pop
fucomp
rcr
arpl
xchg
sub
add
addr16
pop
mov
sub
push
or
test
sti
lock
mov
and
cmp
loope
pop
xchg
or
mov
xor
outsl
test
imul
daa
fnstenv
xchg
mov
sbb
add
fadd
test
lock
rcrb
pop
lret
stc
movsl
femms
adc
fsubl
mov
mov
jo
or
or
jb
lock
data16
fisubrs
sub
mul
push
cmp
cld
leave
insb
scas
dec
leave
ret
push
rorl
xchg
dec
ds
cmpsl
pop
cltd
mov
popf
out
cmp
dec
xor
frstor
xchg
adcl
es
mulb
pop
cmp
mov
data16
mov
push
mov
jae
dec
arpl
xlat
in
mov
sbb
fcomi
xor
add
test
jb
add
add
in
in
std
fistps
aaa
mov
mov
jl
call
lret
inc
loope
jne
or
in
imul
mov
xor
adc
inc
mov
fiadds
cmp
adc
jmp
inc
inc
out
lods
xchg
cwtl
mov
movsb
pushf
cmovle
lds
mov
push
pop
pushf
pop
test
movsb
hlt
adc
or
aas
jo
mov
mov
push
rcll
jge
mov
jne
inc
bnd
cmpb
mov
adc
cwtl
mov
in
cmpsb
mov
sbb
dec
out
mov
jno
sub
lock
add
xchg
push
sbb
ficompl
enter
jp
mov
addr16
pop
and
aas
mov
stos
add
jle
push
pop
pop
rolb
sub
scas
in
or
loopne
mov
lret
clc
pusha
enter
lds
ljmp
or
aaa
dec
shll
and
aas
and
push
out
lret
mov
test
daa
in
popf
in
mov
and
aam
push
int3
insl
fsubs
out
andb
push
inc
pop
push
pop
ss
inc
pop
iret
pop
pop
movsl
in
or
ljmp
lods
adc
insl
mov
pop
std
pop
popf
dec
mov
jmp
jnp
push
popf
cmc
sti
es
rolb
lods
inc
cmpsl
inc
xor
mov
std
out
fsubr
in
jge
push
xchg
out
or
hlt
xor
pop
pop
dec
cltd
add
popf
enter
in
shll
and
adc
ds
jg
cmp
fiadds
in
insl
fs
or
xor
test
inc
pop
jg
cld
add
push
sbb
test
sub
sub
shlb
hlt
add
sbb
adc
cmp
dec
insb
add
jne
inc
sbb
rolb
pop
pop
jle
pushf
dec
rorb
dec
cli
mov
add
sbb
mov
nop
mov
push
fwait
sub
xlat
xor
cmp
push
xchg
mov
inc
out
or
std
popa
int3
out
addb
xor
cmp
pop
inc
rol
xchg
js
outsl
data16
xchg
dec
add
mov
push
push
ja
ret
std
add
pushl
nop
mov
repnz
popa
adc
adc
and
xor
leave
out
fdivs
loop
xchg
shrb
push
xorb
outsl
stos
insl
jo
sbb
fisttpl
iret
dec
negb
jo
push
aas
in
std
push
adc
jb
rorl
push
les
jo
push
test
cmp
or
cmpsl
jp
arpl
sbb
sub
notl
lods
xchg
imul
inc
jecxz
loope
jecxz
pop
daa
cmp
dec
ret
repz
mov
xchg
je
dec
int3
pop
daa
fisttpll
mov
jge
xchg
xchg
aas
fidivrl
jnp
ficoml
stos
push
iret
cmp
outsl
mov
and
mov
mov
lahf
out
into
jecxz
fs
sbb
scas
int3
int
xchg
loop
push
mov
xchg
jecxz
fucom
lods
out
inc
popf
data16
adc
rcr
insl
or
rcrb
mov
lock
out
inc
int3
dec
mov
mov
pop
test
out
push
jo
mov
fbstp
aaa
sahf
das
daa
dec
jg
and
lods
int
inc
andb
jns
add
push
xchg
jb
mov
adc
lcall
sub
mov
dec
cmp
mov
stos
dec
xchg
mull
in
pop
stc
add
pop
xchg
sub
loop
ds
add
out
popl
stos
je
cmc
and
mov
sbb
pushf
pop
out
fsubrp
leave
and
lcall
int
mov
pop
jns
mov
pop
xchg
dec
fdivrs
in
enter
jbe
inc
iret
mov
mov
xchg
ljmp
jns
mov
mov
or
out
xor
gs
ds
in
lahf
dec
stos
or
sub
ret
cmp
iret
mov
dec
xor
inc
push
and
jbe
adc
dec
mov
dec
ficoms
mov
add
iret
jns
push
mov
sti
xor
leave
frstor
fst
movsl
nop
rcrb
sti
xchg
jb
xchg
lret
push
add
out
jp
add
push
lea
pusha
mul
repnz
and
sahf
xor
jne
stc
mov
add
add
loop
mov
imul
stos
movsb
mov
in
pop
xor
sub
shrb
ds
cli
ficoms
mov
dec
nop
outsl
aaa
mov
lock
dec
roll
xchg
enter
enter
xlat
idiv
rcll
xchg
in
or
test
fsubrs
fucomi
adc
cmpsb
sahf
loope
aaa
sub
xor
xchg
jns
jae
sub
pop
dec
fxch
cld
bound
sbb
jp
jb
dec
sbb
test
mov
push
ja
fwait
dec
stos
jns
mov
fcmove
lods
fcoms
adc
push
addr16
dec
jb
adc
jp
pop
data16
mov
iret
cmp
loope
movsb
sub
xor
cmp
fidivs
in
or
mov
test
and
pop
sti
mov
mov
jmp
sbb
push
bound
ret
out
jnp
fxch
lcall
dec
xor
cmp
sbb
mov
cmpsb
xchg
jo
icebp
cmp
scas
aaa
je
adc
mov
lods
nop
inc
dec
mov
push
mov
test
mov
xchg
sti
jb
cli
mov
addr16
iret
nop
js
je
pop
mov
repnz
pop
js
pop
and
int
fstl
jne
shll
rcrb
and
icebp
pushaw
ror
mov
je,pt
cmpl
stc
repnz
sbb
mov
xchg
imul
or
icebp
push
mov
jbe
mov
jo
cmpl
inc
add
mov
xchg
ss
or
add
cli
xchg
mov
push
test
lret
js
xchg
adc
add
add
jae,pt
insb
xor
int
jle
push
pop
add
fiaddl
mov
ja
out
xchg
mov
cwtl
fwait
ja
pop
loopne
shrb
fwait
add
lock
std
fiaddl
cld
arpl
mov
imul
jns
push
adc
insb
cmc
test
dec
xor
mov
jg
xchg
push
mov
jae
pop
in
sbb
xor
les
les
test
sub
add
int
ror
mov
and
or
je
lret
stos
jae
xor
xchg
push
pop
pushf
jo
movb
loope
test
adc
lcall
movsl
pop
into
pop
push
aas
addb
cmp
mov
data16
jp
cmc
je
inc
xchg
pop
pop
mov
push
or
and
divl
mov
sub
or
and
imul
ljmp
repz
ss
int
stos
mov
sub
add
jecxz
ds
push
dec
or
ret
jle
arpl
loop
rcll
shll
dec
shlb
or
push
mov
jne
test
mov
repnz
jns
test
or
sbb
push
cmpsl
add
pop
mov
pop
aad
in
shl
hlt
mov
inc
mov
jno
movsl
sub
sahf
jbe
dec
lcall
mov
into
dec
fadds
xor
mov
xor
bnd
push
push
xchg
jmp
aas
repz
in
jno
and
jp
jne
ljmp
lods
jl
sub
jecxz
rorb
es
adc
sub
jb
and
call
pop
sub
mov
push
lcall
pushf
mov
inc
xchg
lock
lahf
fcompl
dec
es
stos
je
movb
dec
xor
push
xlat
ficoms
aaa
mov
adc
movsb
add
aad
cmp
add
insb
fcoml
lods
and
mov
jae
iret
sub
mov
mov
adc
stc
jnp
into
xchg
imul
repz
data16
test
arpl
out
jmp
lock
inc
and
or
out
xlat
push
ljmp
stc
arpl
inc
ret
ficoml
add
jb
test
rorb
in
mov
int3
lds
mov
cmovge
inc
cmpsb
popa
lahf
call
dec
add
add
loopne
xor
addr16
mov
or
movsb
dec
addr16
mov
push
icebp
pop
mov
sti
adcl
mov
imul
add
daa
outsb
dec
and
xchg
sub
loopne
fcompl
in
loopne
setne
cmpsb
inc
mov
ret
inc
xchg
loop
repnz
mov
or
or
jno
jge
out
pop
push
or
jmp
xor
jae
dec
xchg
icebp
mov
push
test
icebp
pushf
lds
into
dec
jmp
cmp
push
lret
add
scas
enter
out
es
mov
cmp
sti
add
sti
cmpb
insb
inc
fiaddl
ds
je
jecxz
loopne
pop
or
add
lds
xchg
add
sbb
xor
fbld
cmpl
out
rolb
bt
aas
mov
mov
mov
or
repz
addl
ja
push
test
repnz
xorb
mov
loopne
fiadds
inc
ret
aad
popa
or
scas
xchg
push
push
in
in
cmp
push
push
arpl
mov
mov
mov
leave
mov
dec
insb
add
push
jo
sub
inc
dec
imul
imulb
repnz
call
in
daa
icebp
mov
ret
xor
rcrl
fiadds
mov
ja
pop
xor
mov
lods
dec
mov
mov
xchg
mov
cmpsl
fsubr
sub
and
insb
lahf
jae
mov
mov
pop
jle
pop
aad
xchg
insl
dec
mov
pop
push
cmp
andl
jecxz
mov
push
sbb
cmp
mov
add
push
inc
or
xor
cmp
add
mov
sbb
jbe
xor
mov
xchg
pop
inc
adc
xchg
stos
and
sbb
mov
add
pop
pop
dec
push
scas
mov
mov
imul
lock
mov
dec
jae
orb
jns
mov
adc
xchg
sti
xchg
mov
out
sarb
pop
aas
loopne
imul
mov
add
or
xchg
xlat
push
jb
fisubrl
lods
outsb
mov
fstps
shrb
out
or
add
inc
mov
xchg
mov
ds
or
dec
sub
into
mov
adc
and
cltd
pop
fidivl
cmc
mov
dec
cmpsb
imul
sahf
adc
cmc
adc
mov
scas
insb
mov
aaa
adcb
push
jo
pop
xor
insl
mov
sbb
lcall
xor
sub
push
rol
mul
xchg
arpl
mov
ljmp
testb
fnstenv
push
arpl
or
sub
imul
out
jmp
daa
outsl
jb
xchg
add
adc
push
sbb
dec
mov
push
mov
cmpsb
mov
inc
test
mov
push
add
or
pop
add
inc
out
in
fcomip
mov
popf
les
mov
or
add
xchg
dec
in
xor
jmp
call
fmull
repnz
aas
es
nop
enter
xchg
popf
cmp
int
and
sub
jg
and
mov
sarl
jo
int
jmp
ja
xor
dec
jbe
stc
loope
lods
xor
xchg
call
mov
xchg
je
das
aaa
add
sbb
cwtl
xchg
icebp
sub
enter
dec
enter
jge
xchg
or
aas
adc
pop
push
jae
inc
add
and
cmp
dec
jae
push
dec
jns
pusha
and
arpl
jno
xchg
jl
jp
mov
adc
cwtl
fiadds
mov
loopne,pt
dec
and
idivl
in
test
cmp
add
imull
adc
push
and
into
dec
fs
in
inc
rolb
fildl
shrb
cwtl
and
jbe
and
std
ret
in
mov
and
cld
test
push
hlt
mov
popf
mov
in
pop
fidivrs
adc
nopl
shl
add
mov
int
in
sub
addr16
mov
fwait
pop
jecxz
pop
out
push
sti
xchg
xorl
outsl
sbb
dec
aas
rcl
xchg
into
xchg
lcall
repz
mov
mov
dec
or
leave
xor
xor
dec
aad
imul
out
test
mov
in
push
xor
inc
adc
and
mov
in
cmpl
xchg
sbb
scas
testb
call
jl
jo
rcrl
inc
mov
test
sbb
lods
push
add
lock
push
push
pop
movl
test
dec
stc
das
adc
mov
inc
cmpsl
movsl
rorl
or
inc
jmp
mov
sbb
and
bound
mov
lods
ret
mov
stos
and
jne
imul
js
mov
mov
fstpt
aam
ljmp
dec
mov
push
mov
iret
mov
adc
and
mov
or
ficompl
int3
notb
iret
sub
sub
ror
xor
push
outsl
icebp
outsl
arpl
add
or
fldenv
popf
cmp
and
sti
mov
adcl
or
or
insb
fsubl
cmp
filds
inc
and
addr16
dec
mov
fwait
sub
dec
std
push
jp
ror
push
inc
and
add
add
cmp
sahf
lcall
cld
xchg
jp
jmp
lcall
sub
fbstp
pushf
cmovo
in
fs
dec
pop
or
add
and
lcall
sub
mov
aad
sbb
mov
stos
nop
add
scas
test
fdivl
sub
out
adc
ds
mov
sti
in
mov
iret
sub
loopne
sbb
mov
sub
icebp
pusha
push
mov
push
je
dec
fisubrl
outsl
pop
jmp
frstor
jb
jnp
int3
call
xor
clc
nop
js
mov
and
fidivrs
loope
or
andb
jns
add
xchg
cld
xchg
mov
insl
xchg
inc
das
mov
or
repnz
inc
enter
push
xor
das
dec
jae
xchg
and
cmp
sbb
jb
sbbb
mov
jl
lret
mov
add
push
xor
cmc
outsl
xchg
aam
and
push
daa
mov
js
add
adc
test
or
lock
icebp
mov
popl
les
adc
mov
imull
es
les
add
sub
cmpsb
lret
sbb
pop
in
jecxz
lahf
mov
inc
sarb
jb
add
adc
sahf
fstpt
mov
xchg
gs
dec
xchg
into
es
hlt
mov
mov
and
cmpsb
mov
in
sbb
lret
or
hlt
lods
js
sub
mov
xor
pop
ds
sbb
neg
push
inc
xor
lock
sarl
js
stos
mov
data16
add
mov
pop
mov
push
pop
push
jo
mov
test
mov
mov
stos
repz
sahf
push
dec
es
movsb
sbb
imul
imul
paddq
jl
movsl
adc
or
inc
pop
pusha
pop
subl
jl
mov
in
mov
xchg
inc
repz
mov
in
mov
sub
int
mov
fnstenv
int
faddl
ret
dec
cltd
pop
popa
inc
pop
stos
sub
and
jne
adc
cmp
lret
and
inc
pop
pop
int3
fmul
mov
das
int3
mov
xchg
insb
sahf
in
test
and
repnz
jbe
xor
pop
xlat
dec
push
sbb
lods
dec
icebp
cmp
cmp
xchg
nop
xor
sub
mov
jmp
inc
nop
inc
leave
cmp
xor
dec
sub
sbb
jnp
popa
je
xchg
mov
xchg
sarl
sahf
fwait
call
loop
add
or
sub
int3
int
and
enter
push
repnz
push
sub
add
ret
jp
adc
in
add
xor
push
out
or
xchg
pusha
jmp
in
inc
scas
lds
popf
je
dec
xchg
out
add
int
mov
popa
push
into
loope
ds
pop
push
lds
inc
daa
mov
ret
and
cli
mov
xor
and
mov
xchg
int3
xchg
in
out
int3
cld
push
jno
jmp
test
cmpsb
ret
add
or
push
aam
push
mov
lea
sbb
or
push
lods
add
outsl
push
movsl
xor
push
sub
enter
pop
xchg
cmp
jecxz
dec
jp
dec
dec
or
pop
in
mov
fs
inc
xor
addr16
ficoms
jg
imul
fxam
cld
adc
movsl
clc
mov
add
int
xor
dec
pop
sbb
xchg
fildl
push
repz
add
xor
sub
and
fstps
fsub
mov
addb
movsb
test
hlt
or
test
inc
and
ljmp
push
add
pushf
dec
leave
mov
scas
pop
cmpsl
ja
dec
jl
icebp
jp
lds
mov
rorl
jecxz
sarl
mov
and
out
imul
mov
lret
sbb
fwait
rol
push
inc
jl
jecxz
mov
inc
or
mov
aaa
sbb
mov
mov
sub
cltd
mov
int3
push
pop
mov
cmp
mov
inc
push
call
mov
pop
or
fwait
in
les
or
mov
push
out
lds
mov
repz
mov
mov
outsl
cmp
out
adcl
sbb
mov
aad
orb
lods
inc
int
xor
or
jae
dec
mov
push
jno
outsl
jno
outsl
lret
mov
aas
imul
mov
lock
mov
femms
std
fwait
xchg
or
and
loop
and
lds
inc
sub
push
jo
shr
lock
and
std
add
and
jns
test
pop
lret
mov
test
add
ffree
lret
cmp
filds
jne
or
fadds
inc
aaa
mov
nop
es
mov
pop
int3
outsl
jmp
ss
xor
divl
lea
jns
aas
test
gs
inc
sub
icebp
jo
jno
mov
ret
mov
std
pushf
in
fnstcw
outsb
aam
xor
xor
mov
cmpsl
enter
xchg
mov
mov
rorb
inc
dec
lret
test
push
push
jno
jns
scas
or
divb
in
ret
das
mov
aaa
jno
push
fsubrs
sub
imul
adc
rol
cmp
sub
stos
outsl
mov
cs
fscale
clc
repnz
pop
ss
push
notb
pushf
pop
lea
mov
stos
je
stos
or
jecxz
sahf
xchg
ds
js
in
jo
iret
in
xchg
adc
push
dec
repnz
pop
loope,pt
xor
mov
das
es
adc
xchg
ljmp
cmpsl
stos
pop
cltd
andl
arpl
pop
sti
inc
imul
ja
std
mov
call
xchg
jge
lcall
jg
push
pop
pop
xor
stos
inc
inc
adc
sbb
jg
dec
xchg
loopne
loope
out
xchg
cmp
sahf
lock
scas
mov
lcall
and
jo
fdivrl
outsb
fbld
pop
or
dec
movsl
dec
les
lahf
mov
mov
sub
pop
cmpsl
push
cmp
repz
ret
dec
lahf
addr16
sahf
fiaddl
popf
pushf
cli
xchg
cmpsl
mov
mov
inc
dec
movsl
cltd
arpl
push
xlat
xchg
pop
mov
scas
nop
sbb
push
insl
pop
loop
orl
loopne
push
xchg
fwait
out
aad
pop
mov
and
fs
fcomps
xor
mov
or
mov
jg
cmp
cmp
cmp
dec
cmp
out
xor
xchg
enter
add
push
test
jne
mov
push
fdivs
inc
out
test
pusha
inc
pop
push
aad
cmpsl
push
jg
call
call
jle
ja
js
push
jl
pop
mov
push
xchg
in
mov
xlat
lock
mov
inc
icebp
push
add
cli
xchg
les
leave
cld
cmp
mov
mov
sub
imul
enter
xchg
enter
lret
push
int3
int3
ror
mov
xor
pop
repnz
fwait
loop
pop
ds
cltd
ret
and
rcrb
pusha
lret
add
insl
adc
pushf
lods
in
mov
lcall
jp
xor
xorb
push
pusha
mov
dec
sbb
push
insb
push
cwtl
sbb
cmp
dec
out
test
popa
stos
push
std
mov
jnp
dec
xor
sub
dec
push
or
mov
xor
dec
sarb
mov
xor
xchg
lock
outsb
dec
sar
or
insl
inc
inc
test
imull
dec
pop
repnz
and
ret
out
cmp
inc
cmp
das
adc
sbb
fldt
je
scas
sub
test
or
es
mov
inc
aam
ljmp
cmp
push
or
fstpl
adc
into
push
add
loop
aas
rcr
out
cmp
pop
dec
adc
test
add
and
out
inc
adc
stc
popa
fwait
ja
jmp
popf
push
xchg
scas
xchg
xchg
mov
xor
xchg
pop
xchg
jp
sbb
orb
pop
mov
mov
leave
xchg
cmpsb
mov
jp
jg
fcoms
mov
sub
fwait
mov
mov
or
sbb
push
je
ljmp
xchg
and
clc
jb
xchg
ds
push
mov
cmp
rcl
cmpsb
or
adc
sub
push
arpl
in
sbb
mulb
stos
lret
or
cmp
pop
mov
and
data16
movsb
push
in
xor
and
xchg
dec
pop
outsb
dec
cwtl
mov
out
jmp
mov
dec
mov
xchg
cmp
add
js
insl
fildl
lahf
jbe
in
test
popa
test
scas
cmp
mov
out
popf
or
inc
push
in
and
mov
push
loopne
andl
scas
out
sbb
fiadds
fadds
loopne
sbb
adc
iretw
and
inc
mov
ss
cmpsl
sub
iret
pop
enter
jbe
inc
je
stos
mov
add
cmpsl
pushl
xchg
addr16
stc
jmp
inc
push
adc
mov
mov
or
mov
or
push
jbe
mov
adc
orb
adc
rorb
mov
stos
xor
sub
out
and
lret
pop
sub
lret
push
or
rclb
fwait
rorb
jno
inc
and
orl
repnz
inc
mov
les
shlb
inc
fdivrs
arpl
and
mov
lock
aas
ja
lods
pushf
fwait
and
xor
iret
pop
add
sbb
js
stc
xor
lods
mov
sub
or
lcall
dec
mov
and
dec
outsb
daa
inc
cltd
jnp
mov
pop
mov
jmp
dec
dec
clc
leave
repnz
xchg
lock
das
mov
int3
test
das
in
mov
filds
cmp
vpmovm2q
push
loopne
jp
inc
or
pop
xchg
adc
jb
sub
rcrl
mov
or
mov
int3
push
sarb
and
call
xchg
pop
movsl
dec
std
lret
cmp
push
mov
push
fadds
bound
cmp
inc
loopne
jo
loop
shlb
cmp
test
outsl
or
outsb
lret
xor
and
inc
bound
sahf
jge
adc
xchg
lock
or
cmp
xchg
ja
fadds
xchg
lock
mov
and
jb
jle
or
adc
out
and
pop
add
orb
addl
pop
shr
inc
dec
fldenv
imul
lds
sti
inc
and
xlat
popa
es
mov
sub
xor
mov
out
mov
imul
das
push
xlat
mov
lds
out
mov
mull
cs
sbb
fsubl
sbb
pushf
out
and
fsubs
and
and
in
shrl
stos
mov
scas
jmp
gs
ficomps
push
sbb
rorb
push
xor
loop
in
ret
ss
mov
movb
xchg
nop
icebp
mov
jb
cmovbe
div
mov
or
in
fisttps
inc
xorl
cwtl
leave
xor
stos
out
jne
or
push
and
jg
cltd
jle
lcall
or
pop
sbbb
xchg
pop
ret
enter
movsb
pop
push
mov
xor
mov
stc
cmp
out
cmpsl
mov
imul
enter
cmp
inc
lock
enter
inc
jns
scas
mov
in
sbb
xor
outsb
inc
or
or
lret
fsubp
setae
fistl
and
daa
lahf
push
xorl
sub
pop
mov
mov
fsubrl
jle
lret
pop
push
scas
or
add
mov
pusha
js
dec
add
sub
outsb
jl
cld
bnd
mov
rcl
mov
sbb
mov
ss
xchg
addl
lahf
mov
inc
shlb
lds
aad
pop
jg,pt
inc
cmp
sub
shll
xor
jns
pop
mov
sub
push
insb
sub
inc
lods
ficomps
xchg
mov
mov
mov
mov
push
sub
adcl
sub
mov
adc
cmp
lret
pop
fistps
fadds
push
lret
push
loope
cmp
notb
js
cmp
sub
test
movsl
push
inc
leave
insl
jg
out
js
insl
xchg
mov
xor
sub
test
or
jp
fidivrl
out
push
jb
out
add
repz
repnz
bound
mov
push
jb
enter
lods
or
sbb
push
sbb
and
clc
or
jg
sbbl
sbb
mov
insb
jne
mov
mov
repz
fdivrl
xchg
scas
fs
jbe
dec
addr16
leave
sub
xchg
push
dec
pop
sahf
leave
jecxz
or
out
sub
pop
repnz
add
mov
fistpll
adc
insb
call
lea
decb
addr16
subl
data16
repnz
lea
sbb
popl
push
lea
sub
jg
icebp
xchg
dec
adc
dec
fisttpl
jle
add
xor
inc
ljmp
mov
ljmp
sbb
test
adc
loop
fucomip
ret
mov
xchg
dec
xor
sbb
les
sub
pop
or
adc
out
fwait
sub
out
or
dec
popa
cmp
and
mov
shl
nop
pop
fidivs
clc
cmp
push
ds
popf
rcrl
push
int
add
xor
jp
movsb
mov
mov
mov
dec
scas
mov
dec
cli
mov
cld
popf
pop
cwtl
outsb
sbb
lods
jo
sbb
jae
mov
push
sbb
aad
das
decb
imul
pop
fadds
cmpsl
jne
ljmp
add
cmc
sbb
aam
push
insl
out
mov
and
xchg
aaa
mov
mov
popf
in
cltd
adc
inc
push
sbb
cmp
and
pusha
push
mov
mov
xchg
fwait
dec
sbb
and
jge
jecxz
pushf
or
mov
pop
pop
pop
ds
and
jmp
fnsave
jg
and
mov
adc
out
cmp
mov
mov
xchg
jl
scas
rcl
mov
mov
ret
out
xor
inc
ret
aas
scas
mov
dec
xor
and
inc
rorl
push
jle
fwait
or
cmp
push
fisubrs
cwtl
mov
aas
in
fcoms
leave
or
xor
cmp
sbbl
sbb
pop
mov
mov
hlt
inc
mov
jae
cmp
rorl
adc
cs
shlb
pop
sbb
cli
xchg
xchg
popa
cltd
cmp
test
pop
sub
daa
xor
adc
xor
pop
mov
jl
addr16
mov
xchg
and
pusha
inc
insl
aas
pop
insb
dec
aaa
jecxz
mov
aaa
loope
jae
nop
fidivl
mov
dec
mov
ds
popa
mov
dec
pop
imul
cmp
outsl
les
mov
sti
xchg
mov
sub
jmp
shrb
push
out
dec
push
and
sti
call
insl
pop
ljmp
cmpsl
enter
pop
into
js
mov
push
inc
in
xchg
enter
or
push
ds
call
inc
lcall
xor
xor
or
movb
pop
frstor
sub
and
ret
lcall
insl
mov
xchg
scas
data16
je
push
ret
pushf
sub
pop
mov
mov
push
pushf
push
mov
leave
push
fdivrs
cld
xchg
je
notb
jns
pop
sahf
mov
xlat
je
push
loopne
dec
mov
mov
rorb
jp
mov
or
arpl
mov
xor
mov
lret
into
mov
mov
xchg
punpcklbw
dec
mov
idivl
fmuls
shl
jmp
add
or
mov
test
andb
adc
fwait
xlat
outsb
insl
ret
mov
call
and
adcb
out
das
jge
mov
ficompl
push
cmpsl
or
jmp
cmp
gs
ss
sub
push
adc
xchg
pop
cmp
pop
incb
loop
fsubp
test
or
outsl
stc
add
push
mov
movq
cmc
pop
xor
filds
addl
movsl
je
sbb
icebp
or
test
xor
add
scas
fcoml
xor
sbb
jbe
dec
ret
cmpsb
cmp
dec
adc
and
sbb
mov
shlb
mov
mov
sub
movsb
fildl
pop
cmp
js
pop
xor
outsb
mov
int3
add
test
mov
push
dec
jmp
int3
clc
call
dec
cli
dec
mov
push
push
das
outsl
fidivrs
or
hlt
mov
data16
sarl
mov
mov
pop
push
mov
push
jne
add
mull
lds
sbb
dec
sub
and
movl
mov
loope
dec
loopne
mov
sbb
cli
mov
sub
mov
into
xor
and
aas
aaa
pushf
test
lods
lcall
push
gs
sarl
repnz
sbb
ret
adc
push
sub
xor
push
pop
outsb
aam
pop
jo
dec
adc
dec
mov
inc
sub
lret
das
bound
repz
dec
repz
lods
push
mov
jle
in
xchg
mov
je
sub
sarl
xor
cmp
enter
aaa
and
push
and
and
rol
and
clc
adc
movsl
sahf
cmp
pop
shlb
pop
sub
add
shrb
cmp
jmp
and
daa
or
sub
fcoms
push
cmp
mulb
cmp
adc
loopne
add
sub
aam
rcrb
push
jecxz
rclb
pop
or
lret
gs
mov
lods
test
and
xchg
mov
push
daa
aam
std
sub
push
sbb
xor
xchg
sbbb
or
stos
xchg
in
and
rorb
sub
in
add
shl
push
adcl
adcl
jle
ret
dec
sub
and
int
test
mov
or
or
dec
jecxz
ffreep
xor
xchg
xor
loopne
rclb
cwtl
insl
adc
push
jg
xchg
or
out
jecxz
jns
or
cltd
pop
enter
hlt
jmp
lcall
sti
subb
add
adcl
or
mov
test
sub
enter
out
imul
arpl
iret
sbb
xor
ss
cmp
int
pushf
jle
test
out
pop
nop
xchg
add
push
test
pop
pop
push
nop
mov
xchg
daa
fists
sbb
mov
push
aaa
inc
inc
add
ret
or
mov
add
mov
adc
fdivrs
mov
scas
ret
push
ds
stos
sbb
fnstsw
cld
pushf
adc
iret
inc
xorl
es
adc
ud2
xor
and
adc
test
dec
es
out
xor
lret
sub
inc
lods
js
jg,pn
xchg
inc
fdivrp
jle
std
add
ja
imul
add
rorb
pop
push
add
daa
sbb
nop
jp
test
fmull
fs
push
insl
cmp
testb
adc
jecxz
jno
cmp
dec
aam
std
ja
adc
xchg
aaa
insb
mov
ds
adc
int
jle
mov
push
inc
dec
pop
xorb
xor
scas
in
hlt
xchg
push
enter
repnz
inc
xchg
outsl
cmp
adc
add
inc
inc
jb
sbb
rclb
popf
cmp
les
dec
jo
fnsave
push
mov
mov
loopne
pop
pop
jno
cmpsb
mov
or
sbb
mov
test
xor
fmull
insl
lock
loop
jmp
js
adc
jg
cmp
lret
stc
pop
xchg
orl
cmp
out
jae
push
jae
push
in
enter
fxch
xor
dec
or
and
push
les
inc
aam
sbbb
cmp
add
mov
insl
xor
movsb
dec
int3
push
pop
push
mov
loop
imul
mov
jnp
add
and
dec
pop
adc
lcall
dec
sbb
mov
js
push
dec
in
ret
sbb
das
adc
xchg
hlt
mov
cmp
xchg
in
sbb
ss
loop
notl
cs
ds
add
dec
stos
popa
outsb
mov
cmp
sub
xor
mov
int3
jb
out
sti
and
or
mov
and
pop
mov
xchg
shll
push
cmpsl
andb
ljmp
lods
decl
xor
testb
mov
fldenvs
repz
jg
push
das
ror
repz
in
mov
mov
sub
fwait
or
repz
push
incb
mov
push
or
aam
jb
cmp
ficomps
jns
out
rcr
shlb
add
scas
sbb
fsts
out
stc
jp
in
cmpsl
fs
and
pop
js
mov
push
xchg
ja
adc
or
pop
inc
xchg
idivb
jp
clc
cmp
pusha
stc
jl
inc
lret
pop
mov
adcl
xchg
test
insl
ret
mov
ljmp
arpl
imul
test
scas
gs
cld
mov
into
xchg
inc
stc
fldl
adc
adc
test
inc
xor
pop
movsl
popa
adc
andl
jb
or
and
jl
mov
imul
lcall
call
mov
js
iret
mov
and
xlat
inc
loope
inc
pop
dec
or
and
mov
mov
movsb
adc
shlb
int
xchg
fldt
cmpsl
je
xchg
ja
sbb
fs
jmp
arpl
cli
dec
pop
inc
std
add
xor
cmp
in
lock
mov
and
xor
fdivp
addr16
ss
ljmp
mov
ficoml
imul
mov
inc
and
adc
imull
sbb
or
pop
mov
std
or
fcmovnbe
mov
lret
sbbb
xchg
pop
dec
lahf
inc
inc
and
fldl
add
mov
xor
mov
int3
out
sub
mov
push
cmp
stc
mov
pop
xchg
js
push
ficomps
mov
xor
fstpl
cmp
xor
mov
add
iret
shl
xchg
jge
xor
inc
mov
rclb
add
and
notb
mov
mov
mov
lea
sbb
in
mov
mov
ret
jo
cs
mul
sbb
xor
mov
scas
push
xchg
dec
and
mov
jo
push
cs
repz
or
dec
shlb
testb
jno
mov
in
cmp
decb
cwtl
mov
push
xor
and
and
xlat
sarl
pushl
inc
imul
jecxz
adc
jnp
or
mov
jno
ljmp
mov
getsec
cmp
iret
loope
adc
cmp
pop
add
js
push
pop
movsl
fstps
cmpsb
es
jecxz
das
adc
mov
pop
loope
orb
flds
lret
push
pop
cmp
add
inc
mov
xor
add
jge
les
imul
mov
aas
or
hlt
das
pop
push
loope
push
xor
sbbl
sbb
pop
lods
in
sbb
into
mov
test
jmp
dec
pop
and
out
inc
test
adc
jns
push
mov
adc
in
lcall
sbb
fnsave
fsubrs
mov
add
sbb
loop
inc
stos
xlat
leave
daa
sbb
mov
sub
xor
jns
cmp
xchg
fnstcw
daa
adc
pop
aam
aas
sbb
lahf
sub
mov
xchg
loope
das
fisttps
push
xchg
mov
inc
jb
xlat
lods
adcl
push
push
int
or
jp
and
dec
and
cmpsl
addb
ret
les
call
xchg
repz
fcoms
jge
pop
dec
mov
insl
and
imul
mov
pop
gs
mov
ljmp
adc
push
dec
mov
je
lret
stos
mov
imul
pop
lds
and
sub
mov
inc
adc
xchg
cltd
rclb
insl
xchg
pop
cs
ret
adc
jp
fisttps
push
fs
and
add
jnp
out
enter
xor
pop
adc
test
out
fs
push
xchg
loopne
and
cmp
int3
popa
xchg
mov
xchg
andl
lahf
daa
xchg
jle
int
jnp
lret
ja
adc
ret
in
outsl
dec
pop
jg
sub
push
in
and
pusha
sbb
test
mov
popl
push
mov
ffree
sti
test
ficoms
xor
xchg
cmp
pop
or
xchg
or
cmp
inc
mov
stos
push
jo
inc
cmp
std
mov
fistl
pop
jne
cld
jne
adc
and
and
add
rcl
sahf
inc
call
lock
stos
cmp
mov
fisttpll
pop
cs
or
lret
cmpsb
push
ds
test
sub
sbb
lret
in
sub
test
cmp
popf
jno
imul
xchg
int
test
push
movsl
loope
cmpsb
pop
lds
pop
xlat
ss
loope
ss
gs
lret
sbb
mov
sbb
std
jle
cmp
emms
dec
sbb
leave
push
addb
std
push
mov
xchg
arpl
inc
leave
mov
in
lock
cmpb
xchg
sti
add
jo
mov
xchg
cmp
xchg
or
jmp
sbb
jne
push
xchg
fsubl
in
xor
and
jb
dec
jo
loopne
mov
adc
pop
movsl
je
aas
mov
fimull
arpl
repz
pusha
dec
xor
sub
sbb
mov
lock
mov
les
or
xchg
outsl
mov
ret
in
xlat
lea
adc
lods
mov
or
mov
xchg
adc
cwtl
push
jnp
jne
mov
xorb
push
aam
sti
cmp
and
xchg
bound
add
dec
push
mov
ja
adc
jmp
lret
inc
sbb
push
mov
adc
xchg
into
sbb
repnz
and
insl
xor
push
mov
sub
or
jmp
mov
and
in
rcr
and
dec
push
mov
mov
add
jmp
stc
daa
scas
adc
test
dec
dec
jbe
cmp
jle
ror
test
sbb
pop
dec
xchg
ficoms
std
add
ss
mov
jge
mov
pop
xorb
jne
fistl
imul
testl
adc
mov
xor
push
ja
ljmp
push
test
and
cmpsb
push
push
dec
dec
adc
bswap
ds
mov
cmpsb
pop
dec
xor
loop
mov
in
cwtl
inc
ss
mov
addb
ror
cmc
lret
out
mov
int3
loop
xchg
gs
popa
xor
arpl
stos
rorl
js
and
cs
es
mov
jle
out
pop
push
pop
cmp
mov
push
mov
mov
icebp
insl
repnz
add
pusha
sub
sbb
iret
ljmp
mov
insb
iret
outsb
xor
xlat
lcall
push
ljmp
add
popf
lds
leave
and
int3
adc
xchg
adc
out
fbstp
mov
sar
cmpsl
xchg
fisubrs
mov
xchg
pop
mov
fs
int
jg
fists
pushf
add
mov
rcrb
mov
dec
pop
xor
push
inc
xchg
mov
dec
cmp
adc
addr16
mov
cmc
xchg
sahf
sbb
push
lret
xlat
add
outsb
jbe
ret
inc
xchg
daa
jo
call
push
push
sbb
imul
inc
add
stc
cmc
add
vpackssdw
sub
popf
and
xchg
stc
popf
adc
jmp
push
or
xchg
lea
sbb
call
les
inc
and
jb
stos
out
add
imul
pop
out
mov
cmc
mov
outsl
jl
test
les
mov
jmp
sub
lret
fdiv
insl
jle
add
scas
and
jmp
push
je
stc
add
mov
pop
xchg
sbb
out
adc
aam
out
sub
or
jp
ss
mov
data16
mov
add
out
sub
cmpsl
dec
push
mov
xchg
mov
pop
pusha
movsl
pushf
xor
jl
sbb
and
jl
xor
mov
imul
dec
rclb
clc
lcall
dec
and
xchg
movsb
adc
xor
sub
decl
outsl
pop
fimuls
mov
stc
adc
jl
repnz
cmpsl
movb
inc
call
or
and
adc
loopne
lea
jo
pushf
out
inc
xor
aaa
pop
rorl
or
test
jno
cmp
rclb
pop
loope
adc
aam
and
jns
jp
sub
ljmp
mov
mov
shrb
or
cmc
testb
cmp
xor
clc
stos
sbb
cmc
ret
shrl
sub
jecxz
pop
popf
push
movsl
test
mov
stc
pop
mov
push
orl
push
repz
dec
daa
dec
ja
mov
add
std
sbb
out
out
push
test
scas
out
mov
sub
insl
cli
and
fwait
rorl
jle
divl
icebp
add
mov
add
xchg
jno
adc
repnz
xchg
cmpsl
test
popf
std
cmp
and
pop
enter
dec
mov
jns
and
insl
mov
sub
push
mov
push
jp,pt
or
ds
lods
add
das
arpl
and
sbb
xor
push
jle
jb
sti
stos
dec
sbb
test
cmp
lea
dec
aad
jl
inc
je
mov
jge
push
add
aas
jle
dec
dec
jle
dec
outsl
aam
int3
cli
xchg
sbb
aad
mov
movsl
mov
mov
notl
cltd
lret
ficomps
pop
mov
inc
gs
dec
orl
popf
adcb
in
les
pop
subb
xor
testb
push
cmp
sub
rorl
ds
cmp
add
sbb
ret
adc
jbe
outsb
in
in
hlt
sti
mov
mov
fisubl
xchg
inc
call
mov
mov
inc
sbb
xchg
test
push
lret
dec
outsb
or
arpl
std
adc
subl
mov
out
test
out
and
and
inc
xlat
mov
sarb
sub
or
xlat
shrb
dec
fstps
xor
in
in
sbb
adc
or
lods
loope
pusha
mov
aas
pusha
js
dec
lock
pop
cmc
inc
dec
aaa
xchg
aad
mov
and
jl
jmp
lock
jno
imul
jmp
outsl
cltd
orb
test
and
push
xor
xor
push
outsb
adc
imul
movsl
sbb
mov
pushf
inc
loopne
roll
push
pop
aad
adc
add
inc
jno
daa
push
pop
lahf
shrb
jl
mov
xchg
test
imul
js
lds
dec
in
pop
faddl
arpl
jp
sahf
cmp
dec
ss
mov
dec
in
mov
inc
pop
inc
cmp
adc
mov
fistpl
jno
lods
loopne
imul
int
fdivs
iret
adc
dec
pop
cmp
je
fwait
sbb
lods
movsb
jne
adc
pop
push
test
stc
mov
mov
out
push
das
and
cmp
imul
hlt
je
cmp
mov
push
pop
mov
repnz
jmp
test
push
out
sarb
lock
mov
fsubl
roll
test
into
xchg
jne
pop
jnp
jl
lods
cmp
inc
js
divb
arpl
mov
dec
pop
clc
decl
inc
leave
int
dec
stc
icebp
jb
cmp
push
inc
sub
jle
xor
push
inc
or
push
sbbl
mov
subb
mov
mov
iret
jle,pt
mov
lahf
std
rcrl
lahf
sbb
inc
sbb
out
adc
pop
popf
dec
stos
xor
sbb
push
jno
mov
shlb
mov
push
repz
jo
mov
je
mov
lock
sbb
bnd
bound
das
adc
clc
pop
or
jne
mov
mov
cmc
cmp
xchg
mov
dec
mov
sbb
test
ja
test
shrl
lret
inc
xor
sahf
notb
inc
daa
mov
andl
inc
inc
mov
test
dec
es
out
xor
into
mov
pop
add
imul
jp
and
movsl
int
cld
jecxz
int3
xchg
icebp
cmp
ja
scas
leave
adc
repnz
mov
push
clc
mov
pop
xchg
pusha
dec
mov
inc
push
adc
mov
test
push
adc
pusha
and
inc
push
or
call
insb
pop
inc
aas
lcall
out
rcll
mov
add
mov
xchg
xchg
in
push
inc
shrb
mov
bound
xor
xchg
jae
jp
cmp
jo
lret
dec
push
jge
lods
dec
push
jge
addb
mov
frstor
cmp
adc
lcall
jge
push
aad
idivb
lret
mov
sahf
rorb
mov
mov
cwtl
lcall
sti
test
aam
xor
or
fidivrs
mov
test
in
dec
add
dec
adc
and
xor
ds
jl
cmp
inc
adc
jae
jecxz
icebp
imul
les
add
js
ja
fldl
roll
mov
pop
xchg
scas
into
into
cmpsl
imul
push
jae
xchg
and
jle
pop
cwtl
into
aam
mov
ficompl
sbb
dec
popf
jno
hlt
xor
mov
jo
mov
hlt
fstl
fcomip
pop
arpl
bound
gs
cmovle
fsubr
push
inc
leave
into
cmp
mov
jp
add
aam
js
add
rorl
cmp
in
iret
rolb
stc
inc
addr16
pop
mov
ret
push
mov
fwait
sbb
push
inc
sub
into
jb
inc
fnstenv
jge
test
and
dec
lcall
mov
lds
les
insl
inc
out
jo
xchg
xchg
xchg
dec
jne
adc
call
add
inc
hlt
inc
mov
pusha
pop
ljmp
jmp
shl
or
cmp
or
stos
jecxz
xor
cltd
movsb
and
xchg
xchg
enter
push
and
xchg
call
imul
into
cmpsl
popf
mov
sti
fsubrs
dec
das
xor
lods
xchg
hlt
xor
inc
push
andb
in
mov
nop
fwait
sub
xchg
scas
cmp
outsl
xchg
adc
js
sahf
and
push
cmp
cli
js
outsl
fcmovb
xorb
sbb
mov
das
inc
icebp
jb
and
aas
inc
jae
pop
das
push
stos
sar
loopne,pn
mov
push
cltd
and
insl
ret
outsl
pop
push
divb
jnp
fsubl
inc
pop
and
ss
mov
test
sahf
es
mov
mov
nop
int
cmpsl
jne
lods
pop
dec
push
gs
dec
popa
mov
mov
inc
push
pop
rcr
or
stos
adc
adcb
rcrl
pushf
out
js
cli
rcrb
xchg
call
cli
scas
push
mov
xchg
lea
push
and
jl
fbstp
lods
mov
inc
adc
and
adc
mov
shr
xchg
xchg
jae
push
pop
hlt
sub
cld
iret
aam
movsb
sub
in
rcll
mov
sbb
sbb
xor
test
dec
lret
xorb
cmpsl
mov
clc
and
out
iret
std
mov
iret
shll
lds
dec
lret
rcrl
lods
xor
out
loop
pop
cld
jl
inc
mov
insb
loopne
jne
jp
jne
push
daa
fcmovnbe
fldcw
enter
popa
jbe
dec
idivb
cmpsb
mov
pop
dec
icebp
push
inc
mov
dec
in
xchg
add
cltd
aaa
leave
and
aad
push
scas
aam
and
mov
loop
push
push
and
xchg
loope
lret
mov
test
rcrl
mov
xlat
inc
cmpsl
dec
inc
dec
andl
ror
xchg
out
test
into
jp
mov
imul
mov
ss
rorl
mov
mov
ret
pusha
jo
dec
sar
or
add
adc
inc
push
shll
test
out
mov
ds
rorb
add
getsec
jmp
jmp
insb
daa
lods
push
test
sti
push
stc
jg
dec
movsl
clc
mov
je
arpl
mov
dec
mov
fsubr
scas
arpl
mov
xchg
cmp
popa
data16
mov
jbe
dec
cli
mov
incb
outsb
xchg
movzwl
xor
inc
sub
push
inc
sarl
sbb
fildl
fsubrl
mov
pop
ror
out
pop
or
push
fcos
in
jg
jne
add
and
xchg
test
sbb
frstpm(287
lock
cmc
in
sbb
repz
das
lcall
jmp
and
and
dec
lods
divl
mov
stos
dec
mov
ret
out
daa
std
test
jle
cmp
mov
pop
rolb
sbb
out
in
xchg
adc
sbb
enter
pushf
leave
jle
pop
and
pop
and
mov
jo
pop
popf
stos
inc
fsubrl
aaa
push
sbb
js
sub
leave
imul
mov
dec
fnstsw
push
stos
mov
dec
lcall
cmp
adc
jg
xor
adcl
jmp
jbe
inc
xchg
dec
inc
mov
enter
popa
xor
and
scas
cmp
pop
loope
jecxz
arpl
std
mov
enter
pop
fcom
movsb
mov
adc
into
roll
ret
xchg
add
cmp
jcxz
sbb
pmaxsw
inc
add
pop
pop
add
adc
fldenv
xchg
mov
adc
mov
jecxz
sbb
jnp
jno
iret
mov
xchg
xchg
imul
mov
daa
aam
popa
js
mov
iret
sub
outsb
adc
mov
je
pop
sti
xor
push
adc
mov
sbbb
in
out
test
mov
sti
enter
mov
xchg
mov
das
sbbb
fsubp
andl
vcvtsd2ss
pop
mov
sub
sbb
add
movb
mov
movsl
mov
cmc
dec
in
pop
xchg
inc
push
in
pusha
and
xchg
jmp
xlat
inc
cmpb
cmp
adc
jl
sub
lods
sti
jo
xchg
push
ret
test
xlat
jae
and
je
sub
or
or
add
ja
insb
add
push
xchg
mov
iret
fnstcw
adc
add
sub
addr16
imul
jle
inc
ffreep
repnz
insl
and
dec
adc
add
jg
cmp
test
repnz
lcall
xor
cmp
cmovnp
fwait
sub
les
xchg
and
sbb
les
push
shrl
cmp
aas
mov
xchg
jecxz
faddl
pop
sbb
addl
push
js
push
jp
mov
mov
pop
mov
jp
push
enter
in
scas
xor
push
push
jecxz
xor
mov
and
je
xchg
xchg
mov
sub
in
jbe
sarl
cmp
out
fwait
in
jmp
outsl
in
in
std
push
xor
mov
leave
sub
mov
push
adc
inc
fnstsw
push
data16
scas
test
addl
sbb
adc
mov
std
stos
das
jle
cmp
ret
mov
lods
mov
jbe
adc
adc
bound
jno
pop
cmpsl
dec
mov
mov
outsl
movl
jne
sbb
loop
fbld
fsts
ret
cmp
xchg
insl
lock
sbb
xchg
sub
mov
pop
fdivl
iret
jo
ds
outsl
mov
and
idivb
test
cmpsb
xchg
repnz
pop
fistps
rorl
lods
xor
les
out
cs
cmpsb
nop
inc
mov
ljmp
mov
xor
mov
movsb
inc
xor
adc
sbb
loop
nop
add
lods
ficomps
mov
insb
or
and
mov
dec
stos
dec
push
pusha
in
inc
mov
cmp
xchg
dec
xchg
push
cmpsb
sti
insb
jo
inc
ljmp
int3
test
xchg
cmp
pop
bound
dec
inc
lds
push
rolb
jl
loope
push
or
loop
mov
mov
pop
xchg
ja
dec
fidivl
mov
jo
push
sbb
rcrb
mov
push
xchg
xchg
cmp
jb
lahf
pop
sbb
add
fstl
cld
test
cld
push
mov
fidivrl
xchg
in
fcompl
jns
cmp
adc
stos
iret
out
add
pop
lods
or
mov
orl
into
fcoml
call
dec
or
sar
mov
incb
shrb
ljmp
jne
mov
cmp
adc
mov
fadds
pop
adc
pop
movsl
xchg
sbb
addl
scas
dec
bound
ss
gs
and
add
repz
adc
push
inc
jle
popf
movsb
pusha
lahf
add
pop
add
xor
cs
and
inc
leave
mov
stos
ljmp
add
mov
pop
cmc
mov
inc
lret
sbb
inc
or
xchg
js
mov
pop
mov
out
or
add
mov
jbe
stos
cltd
loop
add
pusha
jge
jns
pop
mov
push
jbe
fs
out
roll
push
and
les
jbe,pt
mov
ja
shl
adc
popa
stos
out
inc
fdiv
sarb
mov
push
pop
jnp
shll
std
push
inc
xlat
ja
mov
mov
jno
mov
xorl
add
gs
mov
loopne
and
mov
push
mov
lea
adc
mov
or
rcrb
xlat
movsb
dec
scas
cld
int3
imul
sub
cli
es
dec
int3
or
sub
movsl
cmpxchg
repz
mov
inc
addr16
mov
icebp
loopne
popf
jmp
dec
xchg
cld
arpl
insb
fisttps
into
cmpsb
gs
inc
cmpsl
out
mov
leave
in
insb
pop
inc
test
inc
xor
cmpsb
adc
push
and
push
dec
push
addr16
adc
movsb
pushf
fsubrs
jns
enter
push
js
in
sbb
mov
xchg
daa
or
test
sbb
and
movsb
enter
imul
inc
xchg
pushf
fcoml
mov
cmpsl
xchg
flds
cmc
xchg
sti
repnz
shll
aam
sub
scas
and
jl
fldt
xchg
popf
or
sub
mov
dec
enter
mov
jne
out
roll
sbb
ret
mov
ds
sbb
jg
mov
scas
movsb
mov
nop
xchg
test
add
stc
or
pop
leave
mov
mov
popw
adc
xor
sub
push
xor
js
inc
loopne
mov
adc
icebp
add
cli
sbb
pop
aas
and
stos
mov
and
std
nop
cmp
cmc
jne
aas
xchg
or
cs
push
push
dec
icebp
idivl
into
pop
das
das
ret
ret
cld
cltd
cmpsl
lods
mov
xchg
mov
cmpb
xchg
mov
pop
add
lods
xor
popf
ss
movsb
sub
jae
or
pop
enter
clc
out
iret
push
sbb
mov
outsb
insb
test
pop
icebp
xchg
loopne
jp
jo
sub
xor
add
fs
or
xchg
add
dec
out
ds
loope
inc
in
ret
pop
jno
xor
xchg
and
imul
ret
mov
mov
push
xor
aaa
inc
xchg
adc
pop
gs
test
arpl
sub
sbb
sti
lods
addl
xchg
inc
rolb
push
mov
mov
lods
mov
rorb
rol
mov
test
ret
adc
je
lods
jno
xor
inc
int
mov
sub
push
dec
pop
rorb
stos
scas
aad
je
mov
out
leave
pop
xchg
mov
add
enter
nop
pop
push
jecxz,pt
dec
cmp
mov
mov
or
orl
dec
cmp
push
sahf
inc
sbb
xchg
in
sahf
out
movsb
insl
rorl
pushf
pop
mov
arpl
ljmp
lahf
lods
lret
push
jne
mov
mov
xchg
ficompl
imul
ret
add
push
inc
lods
fwait
push
lods
pop
add
enter
repz
sbb
test
mov
or
mov
negl
dec
xor
in
cmpsb
dec
mov
lcall
add
pop
jl
call
cmp
popf
jmp
out
xrstors
nop
xor
push
mov
mov
mov
pop
sub
cmp
sub
in
loopne
pop
test
sub
jg
jp
in
sub
mov
and
dec
jns
or
sbb
xor
push
jbe
in
imul
test
lahf
test
aas
test
jns
imul
pop
js
mov
or
ficoms
jecxz
call
ds
enter
pop
adc
iret
xchg
lods
mov
adc
or
mov
std
je
mov
cmpsl
fcompl
lcall
icebp
adc
mov
cmpsl
adc
mull
into
loopne
inc
jns
test
mov
std
inc
xchg
jo
sbb
fldenv
jbe
lcall
jo
and
add
or
dec
adc
fadd
fs
in
jne
xchg
push
mov
inc
mulb
fdivrl
mov
mov
insb
out
mov
or
nop
mov
mov
xor
mov
push
jmp
mov
cmpl
int3
xlat
add
lea
mov
mov
pop
mov
mov
aaa
and
pop
lea
and
mov
aad
pop
aaa
adc
std
out
jno
movsb
sti
sub
lods
mov
push
inc
push
mov
cmovs
lods
stos
lahf
xchg
push
out
dec
cmpl
inc
aaa
sub
jecxz
inc
pushf
in
mov
int3
dec
js
xchg
xorl
push
xchg
mov
ja
jae
cmp
xchg
and
in
mov
mov
pop
data16
dec
and
cmp
mov
ret
sahf
dec
repz
sbb
adc
cmc
insl
jbe
jb
rcr
insb
cwtl
xor
loope
in
pcmpgtw
ja
in
sub
mov
dec
or
pushf
test
and
xor
outsl
mov
and
out
inc
shrb
push
je
call
xchg
addr16
sbb
daa
add
jl
lahf
sbb
pop
jbe
add
int3
mov
xchg
jp
pop
insb
ljmp
fisubrs
push
popf
std
dec
loope
xchg
xor
jae
push
add
push
jp
lahf
mov
out
cwtl
xlat
jmp
mov
or
adc
gs
push
outsl
dec
leave
iret
mov
inc
ret
clc
loop
enter
and
into
hlt
nop
sub
push
pop
push
negb
mov
xlat
jmp
ss
mov
inc
mov
pop
xchg
rolb
arpl
lahf
xchg
pop
mov
insb
mov
mov
mov
adc
jae
rorl
mov
adc
cmp
mov
dec
or
fstpl
cmp
mov
push
scas
dec
sub
aam
mov
pop
sub
jge
jle
sbb
push
daa
and
xor
push
mov
imul
mov
cli
cmp
cmp
pop
cmp
inc
fadds
shlb
xor
add
mov
xchg
repnz
jecxz
cmpsl
pop
loope
sbb
jbe
addb
jmp
mov
leave
stc
pop
daa
jge
adc
push
fcomps
enter
cltd
lea
outsl
sub
nop
dec
imul
cmp
pop
push
and
test
lods
xchg
rolb
push
stos
xchg
mov
leave
jecxz
jae
xor
xchg
dec
movsl
or
xor
mov
mov
mov
cmpsb
mov
arpl
insl
push
xchg
xchg
loopne
add
in
lock
mov
aas
push
xor
pop
lahf
mov
mov
js
sub
movsl
pop
add
rcrl
push
dec
nop
jnp
nop
popa
inc
pop
leave
cmpb
adcb
repz
testb
dec
mov
adc
sbb
pusha
inc
inc
cltd
lea
lods
adc
loope
sbb
negl
xlat
sub
repz
cmp
mov
sbb
xor
imul
and
adc
pusha
dec
shlb
xchg
mov
std
inc
and
test
insb
mov
push
ret
jp
jmp
imul
out
mov
scas
cmpsl
jge
imul
std
mov
je
xor
jb
leave
add
jnp
mov
push
pop
sbb
cmp
int
lock
sub
cmpsb
les
jl
dec
sbb
imul
mov
into
imul
sub
and
inc
and
and
stos
jmp
shll
leave
mov
mov
les
test
icebp
and
incl
jmp
pop
js
aaa
jecxz
adc
out
adc
lods
adc
push
or
xchg
cmp
jmp
imul
add
sahf
sbb
mov
push
mov
nop
popa
jbe
in
lods
sti
loop
popf
shll
mov
sub
xchg
decl
xchg
xor
mov
mov
dec
dec
iret
lahf
ljmp
js
push
xchg
or
dec
subb
mov
sub
loopne
mov
mov
lahf
push
xchg
stc
and
neg
mov
sarl
mov
mov
loope
push
xor
pop
out
sub
stos
and
mov
cmp
dec
les
call
popf
dec
mov
negl
cmp
loopne
out
xchg
dec
fisubl
lret
adc
pop
test
xlat
cmpsb
rclb
imul
push
cld
push
mov
lds
pop
notb
cmp
and
pop
mov
mov
lret
xchg
or
pop
pop
or
sub
iret
push
add
jo
jl
sbb
mov
mov
sbb
lcall
in
gs
inc
lods
repz
pop
push
mov
pop
cwtl
fadds
cmp
lahf
loopne
in
sbb
in
call
lret
xor
scas
loope
add
fldenv
sti
xor
inc
in
jecxz
dec
jnp
add
pop
cld
pop
into
mov
mov
jle
and
int3
xchg
pop
and
aaa
scas
push
jmp
or
out
sbb
mov
dec
add
push
and
lahf
and
or
cld
mov
and
cltd
pop
xchg
xor
test
lret
mov
test
jg
pop
mov
jns
or
pop
and
insb
mov
imul
enter
or
fucomip
imul
int
mov
inc
push
fs
xchg
stc
inc
push
and
or
or
mov
adc
jmp
jp
mov
cmc
add
jecxz
push
loope
ss
pop
shlb
sub
pop
es
mov
jl
outsl
push
pop
scas
mov
in
ret
dec
scas
test
and
es
stos
rep
pop
dec
adc
jb
mov
inc
cmc
jmp
ret
es
push
lahf
dec
sbb
lahf
sbb
jo
adc
outsb
mov
jecxz
sbb
repnz
inc
ljmp
jp
add
cmp
aaa
sarl
nop
popa
cmpsb
test
repz
icebp
add
sub
adc
pop
mov
les
nop
das
pop
push
and
ss
lret
insb
insb
and
hlt
pop
repz
fnstenv
imul
jecxz
aaa
cmc
test
mov
icebp
xchg
pop
and
nop
jmp
jnp
lcall
push
stos
outsb
fisttpl
pop
inc
mov
cmp
lock
sarb
mov
scas
je
test
enter
dec
decb
cmp
sub
shl
adc
leave
lds
in
test
add
std
inc
push
loopne
or
scas
push
inc
mov
lret
nop
iret
and
cltd
adc
pop
test
or
jl
les
icebp
push
mov
add
sbb
inc
cmp
sbb
jae,pn
icebp
jle
xchg
add
aas
stc
cmp
lods
push
jo
and
or
sbb
push
addr16
mov
mov
cwtl
jne
ret
push
fadds
roll
mov
push
adc
jmp
leave
or
adc
fldenv
pop
leave
int3
mov
in
lds
cmp
push
stos
jbe
imulb
xor
push
pop
pop
mov
scas
xor
jmp
js
mov
push
dec
push
fstl
xor
adc
shlb
cmp
aas
dec
pop
pop
cli
addr16
sbb
daa
mov
bound
bswap
xchg
cltd
cmp
sahf
jae
cwtl
scas
jmp
fistps
jo
ror
xchg
repz
cmpsb
or
stc
int3
mov
sti
lods
aam
dec
sbb
sub
push
into
es
ret
mov
cmp
cmpsl
cmc
icebp
jge
ds
inc
or
inc
addr16
ficoml
std
and
jecxz
in
repz
scas
sarb
fmul
sti
in
xchg
aam
sti
mov
push
mov
ljmp
jo
jae
dec
push
rcrb
and
stos
outsl
push
mov
push
sbb
mov
mov
movsb
cmp
mov
push
adc
sbb
lcall
movsb
stos
xchg
nop
mov
or
add
nop
insb
jno
lcall
push
stos
dec
xchg
cmp
cmp
cli
inc
jns
and
jecxz
xorl
mov
and
or
pop
nop
jge
mov
inc
andb
loopne
aad
xor
in
or
xlat
xlat
ds
sbb
lods
xchg
stc
stos
pop
dec
stos
cwtl
cld
test
nop
pushf
mov
addr16
and
add
imul
push
shll
xor
arpl
push
mov
dec
in
pop
xchg
mov
in
and
push
sbb
lahf
std
cld
cmp
mov
mov
cvttps2pi
sbb
lods
stos
push
xchg
mov
cmp
cli
aad
mov
ret
pop
scas
in
jnp
outsl
adc
popa
cld
mov
aam
cltd
mov
test
jno
xor
ret
mov
call
push
xor
push
das
imul
add
push
jl
das
and
mov
pop
pop
jb
cmp
xchg
cmc
inc
mov
fsubrl
or
xor
je
sub
cmpsb
mov
pop
scas
sub
lret
iret
imul
in
mov
movsl
mov
inc
sbb
xor
jg
mov
adc
inc
dec
mov
rcrl
mov
inc
sub
cli
testl
lahf
pop
sub
inc
stos
jl
not
or
lcall
ret
in
xchg
or
mov
psadbw
leave
dec
lret
jo
fld
jmp
cs
adc
jmp
sub
dec
or
mov
dec
push
repz
adc
mov
icebp
xchg
jle,pn
aas
mov
dec
rorb
mov
push
clc
stos
daa
dec
mov
out
mov
fmull
lods
mov
subb
mov
movsb
gs
fcmovnu
in
cli
mov
adc
or
push
mov
fs
add
inc
sbb
add
int
dec
outsl
std
imul
xchg
sub
out
xor
ljmp
lahf
int3
xor
cmp
test
out
int
inc
lods
les
dec
jno
pop
shrb
add
inc
in
jae
orl
push
icebp
adc
arpl
outsl
or
das
xor
and
in
stos
mov
into
jp
stc
mov
push
dec
mov
xor
leave
or
jge
iret
xchg
adc
dec
mov
dec
cmova
dec
cs
clc
or
mov
add
xchg
mov
inc
and
cmpsb
add
push
ds
cmc
out
shll
dec
std
jo
movsl
sti
add
xor
sbbl
lea
adcb
lea
enter
das
les
jo
push
jb
mov
xor
mov
push
test
popl
fwait
mov
lcall
cmp
in
cld
testb
dec
shrb
mov
enter
sbb
cli
cmp
inc
in
pushf
cmp
lock
in
mov
sti
std
jae
shll
pop
int3
clc
orl
and
push
movsb
rcll
dec
scas
pop
inc
daa
pop
xchg
adc
inc
lods
xlat
cld
arpl
mov
push
push
sbb
adc
pop
test
sub
mov
push
in
push
test
bound
test
enter
mov
aaa
mov
pop
jno
xor
out
or
pop
mov
rcll
or
iret
fldl
cs
shr
adc
adc
mov
stos
stos
fcmovnu
loope
inc
inc
add
rcrl
cli
cmpsb
cmc
mov
mov
imull
fidivs
xor
out
jns
pop
shll
fnstsw
sub
popf
roll
popf
xlat
xchg
in
jmp
jb
pop
scas
loope
sub
jns
mov
aaa
in
sub
scas
int3
sti
push
inc
mov
or
xchg
or
jb
push
rclb
pushf
or
cmpb
jmp
fisubs
imul
add
dec
pop
push
aad
repnz
or
xchg
std
cmp
int
fwait
test
aam
cmp
nop
sbb
out
loope
adc
fwait
outsl
outsl
pop
mov
fwait
aad
mov
lret
sub
addr16
out
enter
xchg
push
or
adcl
fucomi
inc
push
cmp
pop
jge
or
mov
mov
jmp
jbe
outsl
subb
cmp
xor
rclb
jnp
xchg
and
mov
adc
jecxz
lret
cmp
xchg
xorps
cs
push
out
adc
mov
aad
into
les
loop
lods
pop
in
arpl
mov
dec
movsb
jo
ret
leave
pushf
test
outsb
or
popa
jecxz
or
cmp
jnp
mov
or
mov
lcall
mov
push
push
lcall
push
sbb
sbb
in
mov
cwtl
call
jl
jp
push
mov
pop
lahf
sub
or
xor
sbb
dec
mov
xchg
lret
sub
mov
lds
jle
pop
xchg
mov
mov
leave
js
mov
enter
and
jmp
inc
mov
mov
mov
movsl
jl
insb
pop
cmp
arpl
loopne
sbb
out
lds
pop
xor
jmp
jne
nop
les
or
push
cmp
in
xchg
ds
mov
lods
mov
in
ljmp
xchg
std
test
inc
outsb
lcall
mov
xchg
dec
xchg
push
push
cmp
clc
js
cmc
jmp
push
outsl
or
push
cmpsl
mov
mov
pop
sbb
sub
cmc
das
cltd
lret
push
lods
xor
jne
adc
lahf
pop
jl
push
xor
and
mov
lret
aaa
dec
or
mov
mov
push
push
fidivs
shrl
orl
ret
arpl
jg
adc
cwtl
and
ss
push
popf
inc
pop
icebp
sub
test
mov
bndstx
push
jno
xor
fwait
subb
cld
mov
jbe
ret
fldenv
movsb
cmp
mov
sub
test
dec
xchg
icebp
inc
fdivrs
loope
mov
ja
nop
outsl
fldt
test
sahf
mov
lods
mov
sbb
divl
sahf
xchg
frstor
mov
int
popa
scas
mov
push
in
ds
leave
inc
pop
mov
dec
push
xchg
push
mov
stc
arpl
stc
sub
repnz
or
push
sub
in
in
daa
and
mov
jecxz
orb
test
in
mov
mov
pop
cs
sub
popl
or
add
jg
xlat
mov
in
ds
icebp
mov
mov
sahf
adc
dec
inc
mov
cmp
sbb
stos
sti
dec
jle
pop
pop
aad
mov
mov
sbb
repnz
dec
aad
mov
movsb
cmpl
pop
cmp
pop
mov
addb
cmpsb
sti
adc
mov
adc
mov
nop
sub
imul
mov
cmp
add
lock
jbe
pop
sbb
scas
mov
push
daa
rorl
xor
xchg
stos
imul
loop
lret
test
outsl
jb
aam
cmp
or
jbe
int
add
push
ror
mov
imul
cmp
shlb
pop
mov
push
pop
add
mov
adc
xor
adc
pushw
lock
std
fcomip
jbe
repz
mov
sbb
adc
and
inc
xchg
scas
dec
or
lea
inc
imul
cmpsl
and
lods
mov
negb
or
sub
dec
sub
lret
call
mov
and
rclb
jecxz
jno
adc
jg
inc
pop
pushw
dec
adc
cli
repnz
popa
or
jge
in
rclb
aas
test
fsubrs
mov
out
adc
or
pop
adc
movsl
push
jl
inc
fdivrl
out
and
lcall
mov
lods
jmp
nop
lods
lods
int
fnstsw
dec
gs
pop
jmp
sbb
mov
mov
addr16
xor
pop
and
inc
sti
leave
mov
jb
jl
xchg
jp
mov
jge
dec
lock
sbb
sahf
add
push
arpl
imul
fwait
or
inc
mov
push
inc
gs
rol
sbb
into
leave
xchg
das
sbb
jns
add
fbstp
fisttpll
cwtl
mov
mov
test
jo
mov
cmp
mov
cmp
jne
add
ss
bound
into
xchg
fdivs
xor
mov
cs
pop
or
add
sub
stos
mov
ret
lahf
mov
inc
sbb
rorl
push
mov
jo
pop
mov
in
cmp
cmc
mov
sbb
pop
dec
adc
leave
loopne
sti
jle
fbld
cmp
div
push
sub
cmpsl
movsl
mov
sub
cld
rcll
push
mov
add
lea
xor
ja
ja
movsb
repz
jns
loopne
mov
xlat
dec
push
lea
insb
xor
das
push
xchg
in
mov
xchg
jp
fimull
jne
mov
jmp
ret
or
inc
fdiv
mov
cmpsl
xchg
adc
xor
lcall
lods
in
mov
mov
int3
jmp
push
fcompl
adc
ljmp
or
mov
dec
sbb
addr16
dec
in
adc
in
inc
and
ret
imul
mov
cmovp
xchg
jo
lea
mov
and
or
call
mov
xor
mov
pop
mov
sbbl
and
push
lea
call
lods
insb
push
cmc
out
or
rcrb
in
test
or
xor
fwait
cmp
aad
inc
stos
xchg
mov
nop
mov
jecxz
or
or
or
xor
enter
xor
out
and
scas
imul
pop
outsl
lcall
pop
or
addb
incl
stos
bswap
mov
in
xor
mov
movsb
inc
push
push
mov
sub
pop
jecxz,pt
push
lahf
mov
push
xor
ds
push
sbb
lret
add
push
add
add
or
scas
aas
mov
jmp
cmp
in
cmp
push
jnp
sbb
cli
int
pop
pushf
lods
and
outsb
pop
sbb
mov
sbb
push
mov
fisubs
push
and
sbb
mulb
adc
jle
shll
push
sti
ret
fistps
lret
lcall
or
popa
mov
pop
cmp
or
je
in
sbb
push
lods
mov
shrb
sub
inc
jg
fiaddl
ja
inc
pop
lret
jnp
mov
jne
sbb
inc
add
pusha
cli
push
shlb
mov
icebp
repz
mov
push
or
jecxz
sbb
xchg
mov
lret
dec
bound
pop
dec
call
jo
cmpsl
mov
jb
dec
imul
mov
fildl
inc
pop
ss
jg
sbb
add
and
das
aam
movsb
jno
shlw
and
arpl
outsb
outsl
jns
mov
stos
xchg
fcmovne
sarb
lahf
sbb
lods
jnp
dec
int
jge
fiaddl
dec
popa
addl
testb
flds
out
bnd
cs
mov
repnz
mov
mov
cltd
ds
movl
sti
xlat
xchg
xor
mov
adc
jg
call
inc
mov
neg
push
adc
test
and
xor
jae
jp
in
mov
fs
mov
sub
in
dec
pop
pop
mov
cmc
aad
mov
test
adc
push
adc
dec
adc
adc
ret
cwtl
mov
aad
fimull
out
adc
mov
data16
cltd
es
leave
fsts
xchg
out
jae
sub
jo
jmp
insl
or
cmp
pop
js
int
cld
mov
cltd
clc
icebp
lea
or
cmc
cld
out
jg
insl
rorb
dec
andl
mov
mov
jo
adc
ja
xor
mov
jecxz
jns
mov
scas
xchg
push
ja
or
push
cmp
xchg
mov
cmpsb
lds
mov
cmp
pop
xchg
xchg
inc
out
outsb
xor
inc
sub
iret
stos
cmpsl
xor
inc
fldt
lcall
adc
fidivs
daa
cs
or
push
sub
fldenv
lods
rol
cmpl
es
cmpsl
les
xchg
shll
and
fwait
jmp
sub
gs
pop
inc
rol
and
sbb
test
inc
dec
jmp
add
sub
jle
pop
divb
cltd
loop
jne
dec
das
push
sbb
jo
testb
push
adc
sbb
pop
test
testl
notl
push
mov
test
maxps
movb
cs
pusha
cmc
jns
adc
mov
scas
and
xchg
push
outsb
xchg
jecxz
sub
pop
push
mov
scas
mov
arpl
lods
cli
les
in
imul
xor
jb
or
das
sahf
push
rcll
sbb
sub
mov
jb
jge
dec
shll
insb
mov
insl
pop
pop
fists
in
loopne
jno
xchg
push
mov
jp
push
sbb
mov
push
mov
cmp
mov
addb
mov
aas
outsl
add
lea
xchg
inc
cmp
pop
xchg
scas
inc
and
sub
sbb
sarb
in
cmp
dec
cli
std
pop
es
push
or
nop
shll
lret
les
mov
pop
or
add
sub
mov
mov
add
fildll
push
jbe
popf
rorb
mov
xchg
and
jbe
inc
mov
loop
inc
lcall
out
inc
test
lcall
pop
mov
stos
adc
xchg
sarl
dec
subb
adc
hlt
add
testl
xchg
or
cmp
or
xor
xchg
fcomps
dec
repnz
xchg
mov
dec
adc
push
push
xchg
insb
js
push
dec
jmp
dec
cli
pop
test
dec
lea
cld
rorb
lea
pop
jns
shll
jae
scas
es
xor
fwait
les
pop
ds
sbb
ds
xchg
rclb
repz
in
xor
xchg
lods
mov
rcrl
push
cmp
mov
dec
cmp
mov
pxor
cmpsl
mov
mov
lret
dec
test
jbe
std
popa
imul
jmp
outsb
add
stos
and
sar
aad
push
xchg
enter
das
fstpl
or
popw
jnp
sub
mov
dec
cmc
sarl
sub
sub
mov
lret
fucomip
nop
orl
pop
pop
sub
shl
inc
fwait
push
shll
inc
cmp
cmc
out
dec
ja
filds
push
cld
mov
loope
addr16
pusha
sbb
or
inc
and
adc
xchg
and
adc
icebp
pop
sbb
jle
push
inc
test
and
pop
xchg
and
jns
mov
in
inc
out
loopne
pop
sub
shlb
or
sub
mov
xor
dec
lods
mov
mov
mov
cmp
jle
cmp
xchg
dec
rol
js
hlt
test
push
push
jne
dec
call
insl
or
mov
loopne
aad
popa
cmp
mov
scas
test
sub
out
mov
push
sub
fcom
sbb
cmp
test
aad
mov
in
push
pop
sbb
pop
mov
das
mov
sub
push
dec
insb
xor
cmp
sarb
gs
popa
cmc
lcall
ret
das
out
push
jne
pusha
les
jbe
cmpsl
ds
mov
or
push
fucomp
cmp
ja
xorl
arpl
inc
dec
add
fwait
loop
ret
aaa
loope
fsts
outsl
int
insl
jecxz
scas
add
mov
xchg
jns
js
lret
pop
cwtl
ss
adc
fdivrl
add
cmp
sahf
push
out
aam
in
insb
bound
adc
lcall
jge
cmp
fisubrl
inc
popa
popf
mov
xchg
iret
pop
js
or
dec
jge
pop
mov
or
pop
fsubs
insb
insl
add
jae
idiv
jo
inc
subl
mov
fstpl
adc
push
push
test
mov
sbb
popa
dec
ss
test
push
lahf
jl
ss
push
pusha
lods
xor
lret
call
cwtl
in
xlat
inc
dec
insb
scas
jmp
rcrb
push
push
imul
cmp
push
jle
leave
imul
sub
aaa
inc
incl
inc
pop
mov
fisttpl
dec
cmc
pop
jnp
push
sbb
fdivs
jecxz
dec
pop
sbb
inc
push
jo
sbbb
mov
jmp
and
add
das
mov
xchg
push
add
cmp
mov
sub
popw
les
inc
xorb
mov
test
pop
or
je
fst
pusha
gs
mov
inc
arpl
xchg
jecxz
pop
aas
jb
xor
ret
adc
cmp
lret
jns
bound
and
mov
dec
pop
xchg
mov
lods
dec
daa
clc
shlb
pusha
ret
andb
mov
inc
mov
addr16
cs
loope
jmp
pop
jnp
jl
leave
clc
jno
jbe
pop
inc
sbb
jle
adc
call
mov
test
test
add
ds
sub
jmp
cmp
push
adc
mov
imul
aam
and
mov
xchg
mov
icebp
frstor
repnz
enter
xchg
repnz
and
mov
dec
mov
adcb
or
imul
insb
dec
fstps
sub
and
add
pop
add
ss
fwait
xlat
xor
std
sbb
fnstcw
mov
push
or
outsl
jg
lahf
sahf
jmp
sbb
das
xchg
jp
into
inc
int3
sbb
in
mov
pop
outsb
sbb
test
dec
or
or
push
cmp
pop
sti
rclb
xlat
int
mov
lods
pushf
fisttpll
push
cmp
add
lret
lods
in
or
sti
arpl
pop
xlat
or
fimuls
fisubrs
js
jecxz
cmp
pop
stc
rcl
ret
and
sub
aas
mov
data16
mov
xchg
or
mov
fnstenv
mov
jbe
jg
cmp
jp
inc
adc
jne
es
add
cwtl
mov
xchg
or
adc
push
mov
ss
je
cmp
or
jns
aas
xchg
repz
mov
lods
jp
jo
loop
xchg
in
mov
add
jg
bsf
inc
into
lcall
mov
sub
adc
cltd
fs
sarb
push
daa
cmc
loopne
xchg
add
push
sti
mov
gs
stos
mov
lock
dec
call
dec
add
jo
sbb
lock
jge
mov
push
mov
and
jg
pop
fsubl
pop
cmp
scas
adc
loopne
mov
push
adc
in
inc
cmp
dec
negl
add
ret
lahf
jge
push
mov
repnz
xchg
in
and
adc
in
adc
out
fdivs
sub
aad
cld
shrl
in
push
aad
xor
stc
shlb
je
add
push
mov
add
push
idivb
adc
cli
out
sub
and
add
xlat
or
popf
out
mov
xchg
dec
jg
cltd
dec
adcb
push
cli
inc
xchg
rcrb
push
xlat
push
sub
add
hlt
ja
idivb
lods
or
stos
mov
cmpsb
sahf
adc
lods
sar
in
add
stos
pop
in
cmc
mov
push
xor
cs
js
fisttpl
pop
repnz
imul
xor
xor
and
loope
mov
fisubrl
cmpsb
shll
stos
mov
push
mov
add
shl
cwtl
jbe
xchg
inc
ljmp
push
jno
and
lret
jmp
adc
adcb
test
inc
lds
fwait
mov
fs
scas
stos
inc
vmovaps
or
mov
push
push
sub
mov
push
inc
jmp
lods
mov
push
ss
xchg
inc
test
mov
and
xor
adc
xor
cmpsl
mov
sub
pop
and
aas
cli
adc
loope
mov
inc
pop
hlt
cmpsb
repnz
nop
inc
movsl
dec
pop
cmc
pop
jae
out
subb
jne
mov
push
add
in
dec
lea
mov
out
fld1
insb
and
cld
cs
fwait
push
pop
icebp
pusha
inc
gs
leave
xchg
adc
iret
inc
cmp
mov
jmp
jno
outsl
mov
jp
data16
int3
cmp
outsl
sbb
insb
cmp
push
pop
or
cmp
and
push
jge
jne
gs
movaps
leave
jecxz
push
leave
xchg
cld
orl
je
ja
xor
mov
enter
test
jno
push
imul
clc
or
jbe
jns
std
cli
ds
inc
adc
xor
enter
cmpsl
adc
cld
mov
out
inc
adc
and
cld
in
inc
adc
roll
and
xor
mov
stos
mov
aaa
lahf
pusha
mov
daa
xchg
fdivr
fbstp
mov
mov
xchg
sub
xor
fmull
ja
in
in
fimuls
scas
icebp
mov
pusha
mov
or
mov
addr16
jae
je
adc
pop
pop
sub
sbb
rol
mov
add
js
addr16
push
fists
dec
mov
pop
std
pop
call
icebp
ja
sbb
clc
cmpsb
repnz
xor
cmp
ret
out
lds
subl
out
jae
dec
roll
ss
xlat
mov
insl
mov
outsb
pop
jl
adc
jmp
sub
rorl
std
mov
mov
jle
jb
imul
sbb
clc
arpl
push
pop
daa
and
push
addr16
mov
fcmove
add
add
jnp
addr16
sarl
push
lods
insl
stos
es
push
sahf
lcall
jp
add
and
mov
mov
in
jl
scas
jbe
pop
mov
push
push
pop
jo
outsl
add
das
add
cld
sub
outsl
push
loop
mov
and
fstpl
outsl
mov
pop
js
cmp
cld
push
jecxz
mov
mov
mov
aaa
popf
and
loopne
and
sub
iret
xchg
les
popf
mov
ficoms
fisttpl
cld
sub
add
adc
roll
jg
jne
pop
fsubrl
adc
mov
in
addr16
into
fists
clc
dec
and
lods
xchg
sets
jl
and
jnp
in
sbb
shr
jb
mov
std
pop
mov
imul
cli
stos
dec
orb
aam
in
pop
in
jge
xchg
add
cmp
xchg
mov
jae
adcl
mov
or
sub
leave
pushf
fdivrl
cmp
fstps
mov
jge
cmp
popa
xchg
mov
repnz
inc
popa
add
inc
imul
inc
inc
jno
aad
mov
mull
mov
jecxz
inc
pop
cmpsl
pusha
sub
sbb
clc
cmp
frstor
rcrl
cltd
lahf
es
aaa
sbb
xor
jno
repnz
push
mov
in
push
mov
rcrb
or
jae
xchg
pop
lcall
cmpsl
cwtl
inc
popf
test
mov
sbb
add
out
scas
lods
sti
addr16
data16
adcb
sbb
pop
sahf
push
lret
out
push
add
lock
es
inc
cli
jae
push
lret
sti
pop
pop
sbb
pop
movsl
test
loope
es
lods
rclb
inc
cwtl
xor
insl
insb
iret
xchg
test
or
repnz
clc
mov
ja
sub
ljmp
insb
insl
mov
loop
or
xchg
les
cmp
sbb
arpl
jge
popa
mov
fdivrs
xchg
jbe
jns
pusha
das
cli
cmp
out
fildll
mov
fcomps
mov
pop
push
jno
sbb
shrl
pusha
fstp
mov
adc
mov
xor
stos
scas
bound
cli
imul
addr16
test
xchg
adc
ja
xor
int
out
rolb
xchg
xor
lcall
lahf
mov
fdivl
push
stc
xorl
sub
adc
stc
lock
xor
cld
jnp
mov
xor
sbb
inc
mov
pop
shlb
jo
push
push
lock
fiadds
inc
stos
dec
popa
mov
addr16
fbstp
sahf
mov
mov
fdiv
mov
imul
bound
mov
jg
xchg
stos
push
add
in
push
push
ret
stos
das
cmp
xor
aas
lea
fcmovnu
cmp
sbb
xchg
fs
pushf
sbb
pop
cmp
mov
es
xor
xor
cltd
test
in
or
jp
lds
sbb
ror
fldenv
cmp
popf
inc
arpl
hlt
out
sti
xor
int
ds
inc
cmp
test
mulb
inc
iret
add
cmpsb
ds
xlat
aam
lret
movsb
jl
push
gs
arpl
xchg
xorl
ret
cwtl
push
fcoml
push
inc
ficoml
sub
fldenv
push
mov
arpl
pop
sub
sbb
jnp
push
stos
movnti
dec
mov
cli
or
cs
les
arpl
push
test
test
into
push
outsb
dec
sub
pop
inc
lgs
fildll
push
cld
inc
enter
push
movsb
dec
roll
mov
int
or
in
in
popf
lds
push
xor
push
jae
imul
daa
xchg
add
je
jg
jg
mov
imul
add
xchg
rorb
push
pop
jle
ljmp
and
iret
mov
mov
push
mov
inc
enter
dec
es
mov
popf
push
test
mov
stos
cltd
cli
mov
js
jge
dec
mov
scas
cmp
call
test
xor
push
jle
je
bound
push
or
jmp
jb
mov
mov
cmpsb
adc
cltd
shl
add
add
lcall
or
mov
lods
shl
les
nopl
movsb
loopne
movsl
inc
xorb
subb
nop
js
inc
mov
and
dec
movsb
push
insl
scas
movsl
in
jp
cld
rorl
push
insb
push
add
mov
hlt
shl
roll
mov
icebp
xor
sbb
enter
lret
mov
fwait
lock
xchg
mov
ret
jbe
test
std
jge
sbb
mov
mov
repnz
and
mov
in
cmc
sub
xor
cmp
std
xor
cmp
out
add
call
cmpsl
push
jne
mov
add
fimull
sti
inc
mov
mov
mov
sbb
addb
mov
sahf
fiaddl
jnp
cmpsl
inc
ret
pushf
fwait
push
adc
push
outsb
pushf
jle
icebp
lret
jb
push
lock
leave
pusha
ret
sbb
and
cltd
lcall
daa
cli
cmp
stc
jmp
mov
ficoms
pop
mov
out
sbb
sbb
data16
fcoml
dec
call
xchg
xchg
lcall
dec
fdivr
in
xor
jnp
mov
jge
ret
cwtl
adc
or
xor
or
movsb
js
aaa
and
mov
std
fidivrl
int
mulb
dec
arpl
xchg
rolb
popf
inc
cwtl
ret
nop
sub
jge
dec
fxch
xchg
je
push
xor
and
or
test
into
faddl
outsl
cmpsb
xchg
mov
jmp
inc
push
mov
dec
pop
pop
jge
fldcw
mov
jge
ror
ljmp
or
xchg
jae
mov
and
idivl
jnp
mov
dec
cmp
stos
int
imul
sbb
inc
jns
faddl
cmp
ds
xchg
hlt
icebp
inc
mull
insb
push
mov
in
in
mov
outsl
mov
mov
jb
mov
stc
call
cs
sbbb
mov
sbb
pushl
aaa
xorl
cmp
xor
pusha
pop
dec
mov
sbbl
mov
sub
xchg
cld
mov
lock
leave
xchg
push
jno
xorl
inc
ffree
stc
fisttpll
shll
mov
xchg
daa
pushf
xor
sbb
std
adc
xchg
cmc
mov
fs
xor
aaa
and
or
fwait
push
sub
andl
mov
insl
test
mov
stc
pop
add
or
or
xor
dec
ret
movsb
push
sarl
outsb
xchg
ljmp
in
pop
fildll
cltd
push
xor
out
negb
xchg
xor
jb
popa
cmpsb
xlat
mov
adc
pop
add
fadd
rolb
pop
in
or
push
imul
js
push
aas
lock
filds
jp
mov
shll
out
push
insb
or
jle
popa
pop
mov
cmp
das
outsb
and
cmp
xor
mov
decl
sub
inc
aas
mov
ljmp
test
insb
inc
icebp
rclb
xchg
lds
jg
cmp
jo
lret
stc
inc
rcrb
imul
stc
nop
dec
jmp
push
mov
fs
sahf
in
sbb
out
push
mov
mov
repnz
stos
adc
into
xchg
dec
or
gs
lea
and
mov
in
jno
jne
cmpsl
dec
cmp
sbb
cli
pop
or
xlat
and
icebp
fnsave
or
rolb
sbb
inc
out
scas
aaa
ds
sub
xchg
imul
cli
mov
scas
out
aas
lahf
jmp
push
out
out
adc
lcall
dec
outsb
shll
in
xchg
sbb
fiaddl
in
adc
scas
enter
mov
gs
bound
lds
lds
mov
jae
les
sub
jo
inc
or
roll
js
insl
lock
mov
push
adc
fistpl
clc
adc
rcr
std
out
inc
or
sbb
jl
subb
mul
or
sub
outsl
and
iret
es
adc
dec
add
fcoml
es
lock
stos
insb
inc
cmp
insl
jae
outsl
ds
fsts
pop
orb
outsl
lods
xor
lds
pop
xchg
data16
rolb
sub
dec
mov
idiv
sub
sbb
add
adc
push
cmpsl
push
icebp
mov
fmulp
cmc
call
sub
cli
mull
cwtl
flds
dec
pop
xlat
pushf
adc
xorl
and
aas
movsl
mov
mov
rcr
jecxz
arpl
mov
jg
out
nop
nop
sbb
cmp
in
gs
mov
dec
pop
mov
mov
fwait
xor
shrb
pop
ret
test
sahf
inc
movsb
je
jne
dec
cmp
xchg
into
lods
jp
adc
cltd
xor
mov
push
push
es
fsubrl
mov
icebp
xor
mov
or
nop
push
lods
int3
icebp
lret
sub
int3
mov
pop
adc
sti
mov
sub
sub
jmp
popf
mov
and
jnp
iret
xchg
mov
mov
lods
sub
mov
inc
or
sahf
popf
mov
and
and
push
jo
cmp
jns
lea
loopne
loopne
repz
adc
test
add
addr16
test
mov
xor
mov
sti
nop
push
push
sbb
aad
ret
adcb
push
lahf
cmp
fdivp
mov
clc
sub
pop
mov
push
mov
cwtl
fstpt
xor
sub
jno
into
loope
std
pushf
or
push
inc
jns
ds
or
mov
xor
in
ja
lods
sbb
aad
xchg
mov
test
data16
push
add
icebp
push
cwtl
cmpb
cli
cmp
sbb
push
xchg
scas
fisubl
ja
mov
jne
rorl
cmc
adc
repz
outsl
xchg
mov
outsb
add
xchg
pop
stos
mov
popa
push
daa
movsb
loop
or
sti
jns
cmpb
fsubrl
ret
add
mov
aaa
or
fstpl
and
sahf
adc
or
int
je
inc
mov
mov
fwait
enter
stc
nop
rorl
xor
sbb
add
cwtl
and
lret
xor
jmp
lret
dec
imul
aas
rclb
xchg
addl
imul
sbb
scas
xor
or
scas
inc
mov
sbb
cwtl
or
cs
nop
mov
fucom
jp
inc
adcl
out
mov
xchg
arpl
cltd
cltd
fldenv
xor
xchg
jae
scas
subl
lea
or
js
sbb
push
popf
lea
popa
sub
scas
mov
arpl
sub
fmuls
ret
mov
fbstp
nop
and
cli
pop
xor
mov
ljmp
add
mov
xchg
xchg
or
lods
adc
xchg
push
lock
cmp
jle
jle
sub
fdivl
mov
sbb
test
fwait
add
mov
stos
shll
icebp
mov
je
stos
jbe
fsubr
or
test
sarl
jbe
rcr
mov
xchg
sbb
nop
mov
add
imul
std
cmpsl
shl
sbbl
lods
push
sbb
mov
and
jmp
stc
add
jecxz
fs
xchg
shlb
outsb
and
push
mov
mov
inc
das
push
repz
and
xchg
dec
loopne
mov
loope
ljmp
mov
popf
pop
pop
jp
imul
pop
in
cmp
adc
mov
aas
mov
scas
lret
pop
cmp
cltd
cmp
sub
sub
fistps
lahf
arpl
xlat
jle
xor
cmp
sbb
dec
push
inc
jns
lcall
repnz
pop
mov
xchg
nop
adc
mov
popf
loop
movsl
sbb
xchg
mov
and
or
mov
stos
push
mov
cli
mov
xchg
mov
jbe
movsb
ficoms
test
push
pop
push
outsb
roll
and
adc
rol
or
push
inc
cmp
jnp
loope
or
mov
xor
adc
sbb
cmc
lret
lret
push
pop
cmp
imul
dec
sub
jmp
gs
nop
xchg
mov
push
sar
pop
sbb
sbb
andb
lods
cmpsb
ljmp
and
aas
sub
pusha
idivb
scas
imul
vpmaxuw
add
push
cld
iret
int
xor
cli
push
int3
jbe
or
pusha
adc
pop
and
adc
or
jnp
sub
cs
dec
int
mov
fistps
mov
and
test
bound
ror
imul
sbb
jb
mov
xchg
fstpt
stc
adc
into
repnz
add
pusha
lods
in
or
xor
leave
mov
cltd
jne
fwait
std
xor
out
jle
lods
ja
out
js
mov
mov
mov
call
cmp
daa
or
mov
mov
loopne
fdiv
xor
sbb
dec
jnp
sub
rol
mov
inc
add
adc
mov
xchg
sub
imulb
vorps
and
add
jo
lods
movsb
lds
popa
jb
add
popa
scas
movsb
jb
lahf
cld
insb
mov
int
push
lock
test
xchg
sub
fldt
xchg
out
sti
ds
sub
enter
mov
rclb
cmp
cmp
xchg
fs
iret
or
ljmp
stos
fimuls
scas
aam
dec
or
mov
lock
mov
nop
mov
sahf
mov
pop
inc
adc
add
hlt
push
xor
adc
adc
insb
rcr
jne
iret
subl
xchg
mov
mov
stc
adc
xchg
xor
insl
and
pushw
outsb
mov
mov
inc
push
loopne
sbb
or
xor
cltd
jmp
jle
add
shlb
bound
loopne
xchg
add
pop
sbb
ds
jp
push
mov
inc
sbb
test
rorl
outsb
cmp
jg
sbb
inc
iret
cltd
loope
pop
push
inc
mov
mov
movsb
dec
xor
pop
cmpsb
lcall
test
popa
mov
mov
mov
add
xchg
aas
add
into
aaa
push
jns
xchg
dec
add
mov
mov
cld
xor
insb
sub
stc
sbb
icebp
mov
pop
in
push
sub
xchg
xchg
jmp
pop
pop
sbb
sub
shlb
mov
xchg
jmp
cmp
mov
and
sbb
dec
or
into
aad
ror
in
dec
and
add
adc
add
xchg
add
addr16
idivl
dec
xor
or
fildll
outsl
sbb
mov
or
out
push
cmp
lcall
xchg
add
push
mov
xor
lods
push
push
fsubp
jmp
fbld
data16
scas
imul
mov
cmp
out
mov
mov
mov
insl
rol
jbe
pop
pop
jbe
mov
or
es
nop
ds
aad
push
pop
pop
push
cmp
dec
mov
add
cmp
cmp
adc
and
jae
mov
andb
inc
dec
jnp
loop
lods
sbb
jmp
in
dec
pusha
sbb
pop
call
mov
cmp
or
in
mov
jo
repz
or
cmp
andb
in
fcoml
push
mov
in
js
dec
adc
xchg
fistl
push
push
and
mov
into
std
shl
leave
loope
adc
mov
scas
pop
pusha
sahf
jecxz
adc
inc
jne
out
loope
xor
mov
adc
dec
sbb
push
sbb
sub
cld
cmc
add
jl
icebp
lret
jo
fists
lret
pop
scas
dec
outsb
repz
mov
sbb
insl
sbb
adc
push
int3
jg
lret
push
std
stos
mov
push
lret
sti
icebp
call
ljmp
sahf
pusha
hlt
testb
jbe
xchg
mov
xchg
aaa
pop
outsb
cmc
and
mull
scas
dec
lds
outsb
or
jb
cmp
adc
inc
jo
stos
add
sar
cmc
jmp
das
inc
add
lcall
mov
cltd
push
shlb
repnz
gs
push
jne
sbb
xor
jmp
xor
push
push
xor
mov
mov
or
rcrl
outsw
mov
push
sub
call
popf
push
adc
imul
or
jnp
cmp
push
xchg
pop
cmp
push
jnp
scas
bound
lahf
and
sbb
cmp
lods
cmp
stc
lahf
or
cmp
imul
jb
mov
fs
addr16
dec
lcall
mov
inc
jl
ds
shrl
pushl
mov
push
add
iret
mov
in
sbb
cli
aaa
test
lret
leave
jp
repz
cmpsb
add
mov
mov
das
clc
mov
cmp
hlt
jbe
lahf
lea
int3
mov
imul
aam
push
sub
inc
or
jg
ret
in
lods
test
cmpb
or
xchg
pop
push
cwtl
sub
xor
pop
mov
or
and
and
aad
pop
inc
dec
ds
adcl
enter
mov
ds
xchg
repz
sub
and
mov
inc
jo
int
add
add
fisttpll
test
aas
pop
aad
fpatan
sbb
test
and
fidivs
push
roll
nop
mov
dec
push
mov
add
or
das
js
pop
xor
pop
stc
push
push
and
sbb
popa
and
leave
orb
push
pushf
sub
dec
mov
in
mov
sbb
imul
cmp
dec
dec
and
pop
outsl
sarb
std
test
je
cmpsl
pop
mov
out
mov
pop
pop
add
scas
pop
fcomps
mov
cmpsb
lret
xchg
pop
push
hlt
or
dec
jo
sub
sub
scas
xor
fisubrl
mov
inc
loopne
add
jle
xor
movsb
stos
inc
aas
sub
adc
pop
or
in
loop
xlat
mov
cltd
arpl
cmp
cmp
outsl
imul
movsb
xor
aaa
xchg
push
dec
sbb
adc
ror
xchg
mov
xlat
hlt
imul
jg
das
mov
in
lret
xchg
add
cmp
mov
xchg
mov
xchg
loope
xor
mov
addr16
mov
aad
dec
orb
sbb
xchg
mov
aam
push
cmp
adc
leave
mov
add
mov
scas
cmpsl
sub
mov
je
mov
jbe
out
insb
dec
mov
xor
test
sub
into
in
jmp
das
xchg
mov
mov
cmp
dec
imul
test
out
ss
inc
push
bnd
jb
dec
rclb
lods
jae
idiv
stc
lret
pop
lods
push
push
fs
add
jno
xor
in
jns
sub
inc
cmc
sahf
in
xorb
xchg
pop
mov
daa
xor
in
lcall
gs
gs
pop
stc
int
vmovss
inc
inc
push
cmpsb
cli
jns
sar
xchg
adc
dec
xchg
cmp
xchg
dec
loopne
pop
add
jae
mov
scas
mov
and
sbb
aad
icebp
into
test
sbb
cmpsb
inc
jno
cmp
cli
cwtl
ds
add
imul
arpl
insl
popa
popa
cmc
lds
in
inc
mov
and
add
test
mov
xchg
mov
fdivl
test
lods
jecxz
xor
daa
subl
xor
xor
lods
hlt
pop
mov
adc
add
pop
addr16
insb
lret
jle
lods
loop
stc
fistpl
jge
adc
cwtl
pusha
sub
or
mov
out
movsb
adc
pop
mov
scas
jns
jmp
pop
or
lcall
dec
stos
cltd
or
imul
jno
xorl
xor
ret
lods
cld
addl
mov
inc
shl
xchg
je
mov
or
mov
cs
pop
pop
inc
test
push
sarb
in
test
popf
pop
in
insl
dec
idivb
in
jnp
cmp
int3
cmpsl
mov
scas
aaa
jp
stc
scas
cmp
inc
or
mov
cmp
cmc
sbb
push
mov
jnp
jo
gs
popa
sbb
pop
or
xchg
inc
mov
fcmovnbe
frstor
jmp
hlt
push
inc
cmp
popl
leave
imul
push
push
xlat
in
aam
btc
push
call
or
int3
sbb
pop
jp
add
mov
loopne
adc
inc
pop
jecxz
outsb
lcall
mov
out
out
js
out
push
mov
lret
cmp
xor
adc
add
rcrl
mov
cmc
inc
dec
mov
adc
or
inc
inc
mov
sub
add
jl
ja
or
mov
scas
mov
mov
jp
mov
xor
mov
fiadds
movups
adc
jns
loop
push
gs
jo
addl
fidivs
movsb
xor
sbb
clc
bnd
mov
repz
outsl
in
adc
jne
pop
jno
cmpsl
repz
out
sbb
outsl
imul
aam
rorb
loope
ret
rol
jno
mov
mov
add
aad
mov
add
xor
lods
fldcw
cmpsl
ds
pop
xchg
sub
sti
mov
outsb
ror
sub
mov
sbb
xchg
out
nop
and
mov
jecxz
sbb
xchg
pop
or
fistpll
out
mov
ss
jg
or
and
or
lcall
xchg
leave
not
inc
enter
sti
fdivs
loope
loopne
xchg
inc
scas
hlt
clc
xchg
sub
repnz
mov
pop
xchg
das
daa
and
cmp
push
adc
jp
ret
sahf
mov
sbb
pop
fwait
cmp
loop
or
filds
ljmp
and
adc
push
push
shr
add
push
sbb
insl
and
mov
jge
xor
out
enter
inc
fcmovne
imul
xchg
popf
push
stc
cmp
and
int
imul
imul
xor
mov
sub
xchg
sarb
xchg
cmp
push
xchg
mov
mov
lcall
mov
pop
adc
bnd
ds
movsb
sub
fs
sbb
pop
add
xor
lret
inc
dec
add
xchg
sbb
push
insl
cmp
push
sbb
jbe
cmpb
test
es
cmpsb
inc
pop
lods
xchg
sti
movsb
jno
inc
adc
cmp
sti
and
rclb
or
clc
cld
rcll
pop
mov
and
inc
add
mov
sbb
lock
shlb
push
inc
cmp
imul
ja
mov
xor
loop
adc
jecxz
pop
shll
imul
xor
xlat
dec
lods
adc
loopne
leave
insb
or
sub
test
std
ja
std
push
cmpsl
pop
mov
mov
insl
aad
gs
fmuls
or
jbe
adc
hlt
mov
push
loop
and
loopne
mov
cmp
lds
jge
ss
test
icebp
dec
rolb
mov
cwtl
mov
call
lea
loopne
dec
fwait
mov
ljmp
es
xchg
jmp
pop
js
pop
or
pushf
lods
or
test
les
pop
pop
push
outsb
cmp
es
fwait
and
repnz
mov
movsl
inc
pop
std
and
mov
repz
rclb
dec
imul
sbb
adc
xchg
cs
add
das
or
pop
scas
or
stos
movsb
jmp
aas
int3
cld
ds
pop
in
cmp
fs
repz
pushf
jne
mov
out
das
mov
mov
cmp
dec
aaa
std
sbb
scas
adc
cwtl
sar
xchg
mov
mov
push
xchg
pop
incb
push
jnp
jge
fiadds
add
xor
imul
dec
dec
lods
xor
jnp
mov
fmul
in
dec
dec
fcom
sahf
pop
sbb
fcoml
lahf
jg
inc
fcompl
adc
ss
push
xor
push
test
mov
dec
in
sbb
lret
jl
shrb
adc
adc
jl
lret
mov
push
dec
pop
imul
push
mov
scas
daa
shrl
add
push
addb
sub
mov
xor
pop
dec
addr16
inc
hlt
lods
dec
ror
imul
out
mov
jns
push
lods
jne
mov
int
lods
xchg
nop
and
cli
dec
stos
jo
scas
aam
jo
subl
icebp
jle
cmpsb
enter
pusha
and
inc
fwait
lret
adc
sub
jbe
xchg
xchg
fmull
jne
dec
js
daa
push
or
cmpsb
push
inc
stos
outsb
fistpl
mov
lods
jg
and
or
int
or
adc
jl
cmpsb
pop
xchg
push
pop
mov
addr16
cmp
lods
inc
adc
sbb
sub
icebp
fs
pop
adc
xchg
xchg
lods
call
arpl
mov
xor
ficomps
iret
in
cmc
cmp
movsb
adc
and
mov
sbb
inc
and
das
into
push
dec
and
jae
and
cmp
or
inc
int
xor
pop
mov
dec
cmpsb
out
clc
js
lret
rorl
fstpt
push
cmp
and
sub
pusha
sbb
pop
in
int3
movsb
push
in
fdivrl
dec
mov
or
adc
daa
je
push
lock
rcrb
xorb
je
popa
dec
loopne
sbb
ret
ja
push
jae
aam
ret
jo
std
xchg
mov
fbld
stos
xchg
out
pop
ds
sub
inc
sarb
xchg
and
ja
mov
adc
insb
inc
mov
jle
std
gs
add
jno
and
mov
jg
movsl
sarl
push
ret
xchg
mov
das
leave
test
mov
xchg
xchg
or
pop
data16
aaa
push
popa
stos
jg
push
xchg
movsl
mov
out
aas
cmpsl
cmpsl
mov
mov
loope
mov
dec
sbb
pop
mov
pop
stos
cwtl
jnp
rorb
mov
pop
mov
pop
pusha
cmp
adc
das
in
xchg
cwtl
or
lds
xchg
subl
xor
add
sti
out
mov
or
js
jg
bound
imull
mov
xlat
push
xchg
jo
ret
xchg
cs
icebp
add
push
ret
jmp
pop
sbb
mov
add
pop
xor
adc
xchg
in
imul
das
std
jno
xchg
das
cmp
int
mov
and
sbb
sarl
addb
pop
daa
fldenv
mov
rcrl
pop
fs
mov
push
in
fdivs
sub
pop
mov
xor
je
daa
or
xchg
cmp
icebp
lret
jl
add
mov
push
push
or
push
sbbb
andb
sbb
mov
or
mov
and
jae
add
mov
mov
outsb
xorb
lock
mov
sahf
repz
out
scas
add
sbb
mov
out
adc
mov
pop
jg
mov
inc
inc
rcll
lock
inc
xchg
int3
pmullw
mov
aad
gs
ret
mov
lcall
lock
popf
mov
jae
and
std
mov
xor
aad
icebp
addr16
sar
fs
add
dec
movb
push
mov
push
sbb
mov
inc
cltd
mov
lods
jle
fsubrl
lods
decb
push
mov
jg
xchg
clc
sub
leave
das
sub
dec
pop
rorl
ljmp
mov
dec
or
fst
cmp
iret
lea
lahf
enter
adc
jp
je
jmp
pop
or
mov
push
mov
adc
mov
push
dec
hlt
ds
pop
mov
cmp
iret
lea
adc
mov
push
inc
pop
add
mov
leave
push
dec
push
loop
pop
add
pand
out
mov
sub
aas
jg
pop
sub
stos
adc
mov
xchg
cmp
into
ljmp
ja
fdivp
push
stc
mov
fmul
leave
sbb
cmp
push
pop
push
jns
notl
rcl
mov
sbb
in
dec
inc
pop
call
scas
or
sbb
xlat
das
add
jecxz
leave
xor
jns
push
jo
in
stos
cmpsb
std
pop
jae
jo
push
fidivl
shrb
sub
and
jns
aaa
out
ljmp
mov
es
sub
mov
sub
outsl
jnp
cltd
mov
fiadds
lret
gs
movsl
pusha
pusha
sub
insb
xor
mov
jb
sbb
jge
sbb
aas
xchg
or
pop
jmp
clc
cmp
jecxz
inc
sahf
xchg
jecxz
mov
fdivrl
cld
mov
xchg
xchg
inc
xor
xchg
inc
lods
jbe
cmp
int3
fimull
push
faddl
xor
leave
cli
jne
sti
or
mov
jne
jb
in
add
addr16
add
inc
push
inc
pop
ficompl
repz
ss
mov
rorb
push
dec
adcl
jb
cmp
loope
mov
inc
nop
push
mov
sub
aaa
out
push
shlb
jo
jle
movsb
imul
mov
dec
cmp
jnp,pt
jl
dec
pop
je
lret
jp
sub
jle
mov
cmp
fcmovnb
mov
js
and
xchg
add
push
hlt
inc
mov
or
mov
add
xchg
nop
jne
inc
jge,pt
inc
dec
and
hlt
push
mov
lea
leave
pop
cli
in
sbb
aaa
sahf
inc
push
mov
lcall
test
sbb
or
cli
push
or
mov
jmp
and
imul
ja
mov
test
jno
xor
popa
notb
cld
addb
xchg
ljmp
aas
cmp
test
push
sub
cli
push
das
dec
mov
cmpsl
add
iret
xor
xchg
xorb
loopne
pop
push
xor
jle
mov
add
testl
xor
adc
lods
and
les
xor
test
scas
inc
repnz
bound
mov
lret
sarb
lret
cmp
push
out
clc
movsb
dec
repnz
lock
lcall
or
fistpll
jmp
popf
pop
pop
in
mov
outsb
jae
push
xor
nop
sub
out
jmp
or
addr16
jge
mov
lds
sbb
or
mov
sbb
mov
xchg
cmp
adc
leave
xor
inc
push
je
mov
pop
inc
das
mov
cmp
test
pop
mov
inc
hlt
pop
mov
push
stos
cli
lea
repz
enter
pusha
pop
jmp
pop
test
adc
sti
dec
insb
sub
imul
movsl
repz
jl
and
or
dec
out
mov
fbstp
jno
sbb
xchg
sbbl
fwait
loope
stos
pmaxub
mov
push
pop
cmp
jp
mov
or
jp
jno
add
adc
push
pusha
sub
fs
add
push
mov
sub
sbb
jle
jecxz
ret
cmc
test
arpl
ret
fnsave
imul
cltd
xchg
pop
out
je
imul
jmp
push
pop
sbb
out
push
and
idivb
or
stc
cwtl
lahf
xchg
jne
jno
in
xchg
dec
sbb
xor
cmpsb
andl
xlat
stos
in
mov
aaa
pop
xor
fmull
fwait
movb
and
sub
dec
pop
imul
jmp
xor
js
aam
cmp
fldl2t
js
cmp
aam
cli
js
imul
and
lods
xchg
int
push
mov
cwtl
out
cmp
adc
div
push
fstps
mov
addr16
not
lret
mov
clc
dec
stc
adcb
int
push
adc
sub
roll
mov
insl
cmc
mov
add
fadds
cwtl
lds
scas
aam
ret
out
fstpt
pop
inc
jl
gs
cmp
arpl
nop
ljmp
fsts
pop
loope
xchg
leave
dec
ds
xchg
xchg
or
icebp
insl
push
inc
pop
pop
fdiv
dec
les
cld
mov
jecxz
lock
enter
cmc
pop
lods
add
jne
jb
cmpsb
push
into
negb
inc
imul
sbb
pusha
inc
ffree
mov
and
jecxz
cltd
es
sub
xor
mov
std
into
mov
push
lods
push
pop
sbb
jne
jno
and
jge
jge
arpl
push
std
sub
push
out
dec
or
jo
cmp
fwait
cmc
xchg
xchg
pop
mov
stos
flds
aad
aad
cmp
cli
in
jle
sti
popa
mov
or
jp
repnz
cmp
xchg
add
or
les
adc
cmp
mov
add
mov
sti
pop
xorb
lock
lahf
jmp
sub
push
adc
rolb
xlat
inc
cmpsl
and
xor
xchg
adc
pop
rcll
pusha
cmp
ret
mov
mov
sbb
dec
lret
pusha
or
mov
sti
mov
mov
mov
jecxz
test
add
xor
repz
std
in
cmp
add
ss
stos
jl
sti
add
movsb
ljmp
sbbb
add
pop
clc
mov
adc
outsb
out
loopne
mov
inc
dec
mul
cmc
xlat
mov
inc
mov
mov
xchg
xchg
into
inc
imul
xor
icebp
not
ret
or
pop
xchg
lcall
sub
dec
jmp
mov
out
insb
aad
out
pusha
stos
cmp
xchg
int
ss
xor
mov
mov
sbb
test
in
lcall
hlt
pusha
or
cmpsb
jmp
push
fnsave
enter
dec
mov
mov
cmp
imul
imul
nop
cmpsb
fstps
mov
hlt
pop
or
jmp
jl
sbb
jbe
and
sub
fisubrl
shll
pop
pop
mov
xchg
popf
jno
scas
sub
and
adcb
loopne
adc
cmp
jne
faddl
xchg
aam
out
jge
lret
aas
stos
cld
je
pop
lea
stc
and
cld
ficomps
repz
push
pop
aad
pop
add
xchg
movsl
dec
adc
rorl
jns
test
mov
in
outsb
popa
dec
je
pop
mov
pop
out
test
sub
mov
jmp
imul
sub
popf
pushw
in
dec
jbe
push
or
sub
jns
test
out
inc
sub
lods
iret
into
stc
aas
push
shll
std
insl
setb
mov
mov
les
xor
in
in
xchg
jge
dec
jge
sbb
aaa
jmp
dec
jp
push
xchg
push
pusha
out
pop
sti
fadd
mov
mov
icebp
push
cmpsb
imul
cmc
hlt
rcrb
cmp
and
lea
stos
inc
dec
add
incl
mov
jmp
sbb
in
ret
add
sbb
cmp
sbb
cmpsb
ffree
jno
mov
fstl
sbb
adc
pop
aaa
pop
sbb
fwait
pop
cwtl
aaa
sarl
outsl
pop
push
outsb
mov
and
sbb
fcomi
enter
icebp
inc
test
test
rcll
stos
sbb
dec
enter
fcmovnb
clc
negl
lea
pop
outsl
push
sub
ljmp
push
pop
pop
cmp
push
andl
test
dec
cld
ret
dec
lods
mov
mov
leave
pop
cwtl
sub
or
popf
inc
incl
roll
insb
stos
sbb
in
stos
sub
int3
jns
jbe
jbe
sbb
ret
add
xor
cmp
out
adcb
stos
xor
repz
mov
and
mov
rorl
sub
outsl
into
adc
adc
bnd
icebp
sub
sub
lock
dec
jne
sub
pusha
in
push
std
sarb
pop
cmp
jno
sub
stos
subb
into
push
clc
shll
test
adc
push
xor
cmp
loope
shlb
inc
pop
in
push
sub
and
cmpsl
fdivs
add
sbb
mov
loop
sub
add
jae
lcall
rcl
dec
lds
popa
shlb
inc
inc
adc
mov
pop
pop
lods
stc
jg
std
out
scas
adc
and
in
or
ret
call
shrl
cmp
es
insl
in
mov
ss
adc
jg
xchg
cmp
cld
xor
push
imul
out
pushfw
sub
iret
loop
ds
dec
aad
mov
sub
cmp
int
xchg
mov
sbb
decb
enter
lcall
repnz
inc
adc
cwtl
cmc
dec
xor
insb
or
mov
cli
mov
arpl
fwait
dec
je
js
sbb
insb
mov
aad
xchg
xchg
inc
ret
adc
arpl
loop
es
loopne
inc
decb
inc
cltd
test
cwtl
aas
stos
notl
hlt
jp
push
into
jnp
aam
adc
pop
push
call
loop
add
orb
insl
sti
icebp
icebp
cwtl
sahf
insb
cmp
xor
lods
out
dec
or
add
ljmp
mov
sub
jb
mov
or
sahf
push
js
and
scas
sarl
xchg
mov
sbb
pop
mov
ja
cmp
cmp
adc
lcall
dec
pop
push
stc
and
ret
mov
adc
mov
dec
pushf
rcrb
mov
mov
shrl
fs
and
mov
or
adc
aaa
scas
subl
sub
jle
fdivrp
ds
xchg
into
and
cmp
and
into
fdivr
loopne
stos
push
shll
sub
repz
jne
pop
dec
pop
push
aas
popa
out
xor
cmp
iret
mov
pop
pop
mov
dec
dec
cmp
hlt
in
ljmp
pop
insb
mov
in
iret
jp
inc
mov
aad
imul
cmpl
stos
es
in
outsb
adc
repnz
shll
inc
orb
cmc
test
pop
fsubr
imul
mov
adc
cld
pusha
and
hlt
or
mov
add
push
sbb
mov
scas
pop
sbb
mov
mov
inc
das
gs
cmp
dec
mov
jnp
sahf
jb
jbe
test
shlb
sbb
sbb
xorl
push
ljmp
jno
cmp
rcll
test
pop
sub
cltd
dec
in
not
lret
test
test
mov
idivb
stos
in
sahf
jbe
xchg
sub
mov
pop
pop
mov
add
mov
cmp
adc
pop
lods
push
insl
cli
shl
jge
lret
push
mov
mov
pop
cwtl
adc
cs
out
cld
mov
lahf
jecxz
pmullw
cmc
sbb
mov
cli
jmp
mov
mov
ret
hlt
ret
mov
insb
int
sub
inc
or
inc
out
pop
cld
push
mov
gs
or
loope
xor
cwtl
sbb
jbe
jnp
out
ret
inc
jne
and
insl
and
das
jg
cmc
xor
aas
mov
in
mov
push
or
loopne
scas
and
xor
outsl
cmp
push
lcall
sub
adc
adc
in
push
and
sub
das
cli
js
cwtl
leave
jbe
jl
mov
bound
mov
cmpsl
inc
rcrb
lret
pushf
flds
push
inc
adc
scas
xor
popa
xor
add
loopne
int
xchg
push
mov
sbb
push
or
cli
adc
fisubrs
and
sbb
fcoml
imulb
lds
sbb
test
movsl
flds
inc
jle
cmc
popa
repz
cmp
xchg
sub
daa
inc
mov
and
es
dec
cli
in
mov
scas
mov
or
adc
in
and
dec
test
push
imul
sti
rolb
idivb
ret
call
cwtl
ss
das
out
xlat
pop
icebp
or
sar
pop
cmp
and
inc
sub
flds
add
push
cmc
cld
jo
in
and
sti
pop
sbb
js
and
flds
andl
leave
stc
inc
pop
adc
dec
pop
and
xlat
cmp
xor
outsl
push
dec
daa
cmp
rcrw
mov
je
xchg
mov
xor
or
popf
es
xchg
lahf
push
int
dec
mov
repz
push
xchg
jno
flds
out
test
call
fstpt
addl
jecxz
sbb
shll
mov
sarb
daa
ret
jae
in
fidivl
or
sarl
sub
adcl
pop
jle
fcoml
push
scas
pop
clc
jmp
jle
insl
daa
lods
xchg
adc
ffree
shrl
lods
out
or
je
aad
insb
je
pop
xor
js
push
imul
add
fisttpll
xlat
dec
enter
fsubs
cmp
xor
add
in
jbe
ljmp
idivl
or
ret
push
xchg
sub
xor
jl
ds
std
pop
adc
mov
mov
test
xorb
mov
shlb
outsl
lods
ret
ljmp
and
pop
scas
cmp
push
ret
aad
inc
mov
jge
sbb
sub
faddl
data16
icebp
sti
mov
das
jl
jbe
std
gs
adc
and
fsubl
lret
push
push
pop
adc
sub
fwait
sbb
jp
bound
xchg
shll
arpl
mov
or
mov
push
jmp
mov
lds
xchg
insl
and
xchg
jg
pop
and
push
cwtl
cmc
jp
fdecstp
and
repnz
cmp
adc
sti
sub
lret
je
std
xor
adc
les
add
add
pusha
pop
stos
ljmp
inc
js
ljmp
xlat
push
push
jns
push
mov
js
cmpsl
subl
xor
ja
lret
jecxz
pushf
test
mov
cwtl
je
adc
xor
sti
sbb
inc
sbb
mov
sahf
mov
sub
mov
lahf
sbb
xor
inc
pop
or
imul
test
imul
loopne
adc
push
jmp
mov
sub
bound
xchg
push
rcrb
mov
push
rcr
mov
ret
add
mov
cmpsl
loope
pop
cmpsl
ret
sbb
push
add
sub
inc
sub
push
jnp
mov
imul
sbb
stos
xchg
lods
lahf
shrb
pusha
cld
call
push
and
mov
filds
and
cmp
push
push
loopne
pop
xor
cmp
lods
pop
xor
xchg
adc
inc
scas
cmpsb
mov
les
xor
inc
imul
fwait
lods
sarb
nop
fistl
subl
mov
pushf
cmp
and
out
sub
jg
sbb
pushf
stc
es
and
inc
daa
adc
adc
in
push
jae
mov
pusha
push
sub
xchg
and
xchg
jno
pop
pushf
and
push
dec
adc
inc
daa
loopne
pop
data16
pop
sub
imul
xchg
add
ljmp
decb
sub
dec
sub
cmp
or
mov
into
adc
dec
pop
push
adc
push
imul
jecxz
sub
testl
test
nop
icebp
cld
mov
xor
popa
pop
cmp
scas
xchg
xchg
sub
dec
dec
sbb
push
daa
push
push
popf
xchg
test
xor
sub
cmp
mov
xchg
fisttpll
fidivrl
mov
lret
in
sti
fcmovnbe
adc
ret
xchg
push
cs
aam
jmp
int
or
call
sub
cmc
insb
pop
xor
xor
dec
push
ret
push
imul
and
test
cmp
jns
mov
and
jo
push
out
inc
jb
adc
xchg
aaa
push
pop
rol
inc
leave
in
cmpsl
rclb
in
xorl
push
push
nop
out
imul
dec
jns
adc
jge
lret
clc
mov
inc
jbe
insb
add
jecxz
test
jg
pop
push
in
jg
inc
cld
push
xchg
fisubrl
cs
sti
jb
nop
and
daa
movsb
pop
cmpsb
pushf
pop
sub
fiadds
jmp
add
mov
clc
fidivrl
mov
xchg
push
lcall
mov
add
cwtl
repz
push
fdivrl
fimuls
lods
mov
mov
outsb
jno
adc
lcall
loope
lods
dec
leave
add
test
sbb
int
std
bound
xlat
and
out
test
jo
aas
ret
cld
sub
andb
xlat
xchg
test
cs
scas
push
dec
outsl
ja
and
ss
xchg
cmpb
sub
ja
inc
push
rorl
cmp
jmp
imul
bswap
pusha
and
pushf
shr
nop
xchg
xchg
imul
mov
fs
scas
paddusw
push
or
dec
inc
mov
and
outsl
dec
cmpsb
fs
or
add
push
orb
cmpsl
outsl
ret
xchg
pop
jecxz
or
cwtl
adcl
popl
jmp
mov
pop
jbe
nop
xor
inc
shll
sbb
in
lods
add
arpl
xchg
sub
pusha
stos
pop
mov
push
sub
xchg
out
packsswb
inc
push
dec
jbe
mov
sbb
pop
andb
out
push
out
cwtl
imul
pop
and
pusha
add
mov
icebp
into
mov
dec
mov
xchg
adc
imul
mulb
inc
pop
or
jecxz
pop
adc
add
cmp
sub
dec
sbb
sub
jae
orl
test
popa
jbe
andl
sbb
ljmp
inc
mov
pop
and
dec
pop
sbb
inc
jge
lock
xchg
sub
jo
mov
test
mov
jge
pop
mov
paddusb
pop
arpl
dec
mov
ljmp
mov
adc
pop
int
xor
pop
fcoml
pop
movsl
jnp
test
dec
dec
or
jge
cmp
cmp
dec
popa
sbb
js
push
popa
xor
pop
inc
push
mov
pop
mov
xor
sub
push
sbb
add
adc
cmp
popa
mov
xchg
push
test
loop
cmp
mov
sbb
int3
jl
das
xchg
xorb
and
aaa
loop
mov
mov
or
idiv
or
mov
rcr
add
inc
xchg
scas
pushl
shl
fisttpl
cli
loop
inc
mov
inc
jle
scas
xchg
jno
test
iret
lods
ds
out
ljmp
in
pop
mov
pop
cmp
lods
sbb
xchg
inc
out
lret
sbb
jmp
xor
test
ret
aam
jle
cld
mov
rcrb
mov
lret
insl
xor
mov
xor
push
aas
mov
out
popa
fistpl
outsl
repnz
js
lcall
jb
and
mov
lahf
lret
test
lahf
pop
jbe
mov
push
idiv
stos
andl
stc
out
ja
pushf
xor
nop
popl
mov
je
fdiv
ja
or
sub
fidivrs
push
test
inc
ja
into
jle
daa
iret
pop
inc
cmp
mov
adc
sub
pop
in
mov
in
sti
lret
xor
arpl
aam
rcrl
lahf
imul
jmp
sahf
stc
testb
lock
fwait
dec
mov
pop
push
std
jg
scas
inc
sahf
arpl
faddp
push
or
in
fisttpl
sahf
divb
fstpl
icebp
mov
xor
dec
sub
out
sti
or
cmpsl
loopne
fisubl
xlat
clc
jo
pop
xchg
lods
xor
je
ds
imul
mov
repz
cmp
outsb
jnp
sbb
inc
mov
cmc
popa
pop
push
imul
and
sub
mov
mov
es
test
shrb
mov
inc
sub
mov
jg
inc
inc
insl
mov
inc
pop
mov
rcr
sti
scas
lcall
outsb
mov
fldl
mov
xchg
pop
add
pop
push
sub
imulb
mov
pop
scas
dec
int
repz
xchg
in
push
push
cwtl
jnp
sbb
mov
pushf
xchg
mov
ficompl
sbb
jge
loop
fstpt
popf
andl
mov
mov
mov
pop
in
pop
testb
leave
inc
sub
or
lds
xor
push
leave
pop
subb
xor
pop
cmp
adc
out
out
je
xor
push
sbb
shl
xor
sahf
rcrl
cwtl
outsb
pop
imul
lds
add
cmpb
jbe
sarl
pop
mov
sbb
fs
rol
and
jmp
je,pt
in
inc
jne
fidivl
inc
aas
pop
xor
movl
icebp
push
xor
cmc
sbb
mov
fadd
rcrl
mov
sbbb
mov
xor
xchg
loopne
pop
or
out
stc
rcll
iret
mov
das
insb
jb
or
cmc
arpl
jnp
xor
cmc
and
cmp
stos
mov
push
inc
adc
jbe
pop
adc
sub
cmp
inc
adc
lock
xchg
leave
dec
mov
lahf
dec
push
outsb
lcall
add
lods
sub
pop
or
mov
xchg
jecxz
mov
in
adc
sbb
jp
mov
pop
mov
leave
push
adc
push
mov
jnp
xor
mov
jle
xchg
jle
dec
outsl
shll
gs
call
jbe
inc
insl
fnstenv
jbe
push
fsubl
repz
rclb
jmp
addb
mov
enter
fcmovne
xchg
pop
mov
sub
or
adc
push
mov
cmpsb
stc
shrl
mov
mov
sahf
movsb
jp
lds
dec
sti
inc
repnz
dec
cmp
sub
jb
push
insl
sub
or
xchg
gs
jne
xorl
pop
pushf
jb
pop
int
movsb
xor
prefetcht2
fisubl
clc
leave
int
push
pop
mov
lea
pop
push
mov
out
add
inc
fwait
cld
mov
add
mov
add
test
loop
lcall
adc
xchg
and
clc
dec
xor
pop
mov
movsb
lods
or
pushf
pop
pop
lahf
clc
mov
imul
push
std
push
cmpl
les
and
imul
xchg
add
pop
das
arpl
daa
lahf
mov
xor
repnz
mov
imul
int3
adc
mov
call
scas
mov
in
movsl
jmp
and
jnp
pushf
popa
jp
push
sti
mov
xlat
dec
push
and
stos
pop
xor
xchg
mov
cli
cmp
lret
add
xor
repnz
outsl
out
rcll
imul
inc
lock
aaa
cltd
jns
mov
push
fs
mov
add
movsl
in
fidivl
mov
adc
inc
pop
adc
in
inc
mov
ss
jmp
and
or
mov
mov
pop
decb
aad
sbb
or
call
pop
mov
clc
mov
cltd
fisubl
dec
paddsb
cmpsl
mov
divl
fmull
movl
out
scas
xchg
dec
pop
cmp
ret
xchg
mov
out
xchg
ss
mov
push
cmpsb
pop
mov
ja
adc
push
jno
outsb
sub
subb
xor
fisubs
xchg
lods
arpl
in
es
mov
mov
sahf
repnz
fisubrs
leave
add
dec
cmp
or
mov
fnsave
out
decb
lds
in
sub
jg
call
push
fsts
icebp
scas
jb
fsub
pop
inc
je
out
mov
dec
out
pop
out
mov
push
insl
shlb
loop
push
mov
sahf
iret
aas
sub
clc
shrl
add
sbb
and
jb
out
scas
push
dec
movsl
out
jno
mov
js
push
mov
clc
adc
adc
movsl
out
jns
xorl
xor
fisttpll
sbb
negb
in
outsl
fs
das
mov
xchg
sbb
jo
mov
xor
lret
jb
outsl
out
test
decl
mov
inc
adc
pop
dec
ja
mov
ja
mov
jge
outsb
add
imul
xchg
cmpsb
dec
sbb
jo
fs
fldl2e
push
cmp
dec
pop
lods
and
pop
sub
pop
mov
xor
xchg
add
inc
popa
inc
out
loop
je
fnstcw
movb
inc
subb
repnz
mov
je
cmp
or
test
popf
mov
pop
std
stos
popf
lret
sbb
scas
adc
stc
jle
incl
mov
lock
gs
in
xchg
test
and
sbb
sub
lods
in
push
sbb
fstpt
pop
and
xor
xchg
daa
mov
and
call
stos
fdivs
sbb
dec
out
push
xchg
and
dec
push
jl
lret
xchg
inc
and
jno,pt
sub
pop
outsb
jbe
jl
repz
sub
rolb
sub
movsl
jb
mov
jne
mov
popf
pushf
cmpl
call
scas
adc
int3
and
das
jne
dec
aam
jle
dec
enter
ja
jle
adc
mov
xchg
pusha
push
dec
movsb
clc
mov
dec
jecxz
inc
sub
inc
test
out
loope
cld
leave
int3
es
jl
out
sbb
mov
pushf
pop
push
cmp
or
lods
and
jae
cltd
nop
imul
enter
mov
inc
xor
lea
ret
leave
stos
pop
pop
pop
inc
sub
mov
cmp
push
or
add
clc
inc
mov
ss
mov
jg
and
mov
fwait
loop
mov
mov
in
fwait
push
push
loopne
into
mov
addl
cwtl
into
xchg
mov
mov
bound
jmp
pushf
push
sbb
cld
xchg
sbb
lcall
enter
lock
mov
nop
push
lock
daa
push
cwtl
inc
loope
or
and
lret
iret
push
mov
shl
cwtl
mov
xchg
insb
push
sbb
outsb
repz
mov
mov
inc
leave
repz
mov
xor
sub
or
fisubl
lds
shll
inc
out
add
push
nop
pushf
es
push
ljmp
cmp
rol
mov
dec
int3
ja
inc
bound
sbb
add
sarb
dec
jno
or
inc
dec
ds
pop
mov
sub
jns
mov
addb
out
xchg
jmp
xchg
jmp
mov
cmpsb
cs
fs
outsb
inc
scas
mov
xchg
jno
scas
pop
enter
mov
jmp
and
sbb
jg
mov
lret
pop
shlb
inc
cltd
push
cmp
mov
aad
mov
inc
mov
sub
xor
popa
push
jmp
inc
ljmp
pop
test
mov
call
aam
mov
cmp
mov
cmpsl
inc
lahf
test
sahf
hlt
clc
xor
popf
lahf
push
data16
lods
outsb
add
cwtl
sub
stos
cmpsb
ror
push
add
aaa
sbb
leave
or
fcoml
inc
adc
bound
dec
jecxz
fucomi
rorl
and
cld
aam
arpl
outsl
xor
int3
jne
jecxz
pop
sub
xchg
push
imul
mov
adc
inc
mov
fmul
add
xchg
add
add
repz
sbb
sbb
xchg
fnstcw
pop
pop
clc
pop
imul
fmul
sbb
lret
xorl
sub
cmp
push
inc
ja
subl
sub
call
xor
push
repnz
or
mov
add
adc
add
aad
repz
pop
repnz
mov
outsb
inc
adc
cmp
std
mov
mov
mov
pop
js
je
aaa
mov
cmp
cmp
cmp
fcmovne
ja
xchg
stos
out
mov
cltd
dec
pushf
in
imulb
adcl
fwait
sbb
adc
jae
sub
fisubl
ret
jae
jns
bound
je
out
popf
pop
add
imul
ljmp
popf
cmp
lret
mov
leave
dec
aam
add
lret
or
in
lret
sub
add
call
lret
jb
dec
je
sbb
dec
dec
outsl
pushf
sbb
subl
in
inc
dec
loop
xlat
jo
mov
sub
mov
insb
cli
sbb
fstpl
cmpsb
jo
sbb
clc
imul
push
mov
mov
jl
push
cmpsl
adc
inc
push
nop
xor
ss
jae
inc
sbb
sahf
push
fstpt
pop
psubd
outsb
lods
incb
xor
inc
jle
push
push
dec
xor
scas
sbb
and
sar
mov
imul
mov
inc
sahf
jo
push
scas
pusha
mov
mov
or
leave
push
clc
sub
pop
xchg
test
rorb
out
xor
ret
js
movsl
stc
loope
ljmp
push
xchg
jmp
dec
mov
lock
and
cmp
bound
addl
imul
dec
stos
stos
mov
jle
mov
mov
lret
jne
out
add
inc
ss
pop
scas
push
cmpsl
jnp
in
adc
jge
cmp
pusha
lock
mov
sub
sbb
out
jle
cmpsl
sub
and
sub
fcomps
jmp
les
fwait
dec
push
shlb
mov
jl
movsl
sub
xlat
xorb
test
test
stos
in
inc
sbb
orl
adcl
dec
imul
cmp
fidivrl
pop
movsb
shr
lea
mov
ss
clc
std
mov
js
dec
xchg
xor
gs
rorl
push
mov
mov
xchg
xor
outsb
adc
outsb
mov
jl
adc
sub
lods
testl
add
xchg
sub
or
inc
aam
xor
or
adc
clts
xor
stc
dec
icebp
cs
neg
jne
mov
pop
imul
and
push
dec
jns
int3
negb
imul
dec
mov
inc
or
ja
test
or
imul
add
and
icebp
outsl
int
repz
or
addr16
aad
sub
mov
fs
sub
popf
add
stc
xchg
in
fninit
dec
test
add
and
daa
jae
loop
jne
cmp
andb
shrb
cmp
stc
mov
jg
sub
inc
fnstsw
clc
cmp
adc
int
in
adc
mov
out
mov
test
jle
sub
pop
dec
xor
mov
jg
sti
push
scas
icebp
mov
out
pop
sub
mov
adc
xor
sbb
clc
inc
cmc
mov
cmpsl
adc
and
ss
shr
push
scas
adc
jo
out
fwait
pop
sti
jmp
repnz
jb
pop
xor
jno
insl
addl
jnp
in
aas
inc
push
xor
sahf
bound
pop
outsl
xor
popa
mov
xor
inc
test
lahf
xchg
fdivrp
rcll
dec
pop
ss
setns
int
add
and
aaa
arpl
loope
mov
or
cmp
in
adc
lock
orb
stos
jno
lods
xor
jns
mov
repnz
sbb
xchg
inc
or
dec
sti
mov
push
lds
lfs
jbe
shl
sti
pop
mov
pop
aaa
push
mov
adc
cltd
imul
pop
fcmovb
pushl
mov
adc
shlb
cmp
and
push
loope
orb
int3
lods
mov
xor
ret
stos
test
pop
out
lods
testb
cmp
pusha
dec
push
push
and
mov
or
sbb
push
xor
das
scas
ffreep
add
sbb
je
jmp
inc
dec
cmp
int3
subl
rcrb
add
leave
inc
and
jo
sbb
mov
push
sarl
push
mov
add
mov
jge
cmp
sbb
fcoml
inc
mov
mov
jecxz
inc
jne
cmp
ret
xor
mov
inc
inc
inc
sub
je
mov
shlb
push
dec
pop
mov
push
and
push
jns
fs
out
in
pusha
add
or
ljmp
push
into
or
inc
enter
pop
stc
jg
das
test
popf
data16
sti
jo
xorb
jl
je
jo
jge
adc
cmp
adc
xor
or
das
mov
cmp
add
inc
cmp
sbb
dec
bound
stc
leave
or
pusha
mov
jle
pop
jecxz
or
vextractf64x2
push
xchg
mov
jle
test
push
mov
loop
add
pop
jge
test
or
xchg
andb
icebp
mov
sub
mov
pop
mov
push
adc
pop
in
ret
test
push
mov
adc
daa
xor
and
jp
mov
sti
sub
sbb
mov
pusha
mov
sub
adcb
add
xchg
je
aam
clc
xchg
cwtl
mov
jns
sbb
inc
lods
cvtpi2ps
sbb
push
orl
aas
fwait
xor
dec
inc
mov
jbe
mov
clc
push
ds
into
ret
scas
mov
dec
add
or
or
cld
dec
mov
cwtl
lods
imulb
lods
out
fistl
repnz
xchg
mov
mov
popf
pushf
clc
cmpsb
jle
ljmp
imul
shll
xor
pushf
or
hlt
add
sarl
pop
dec
in
fwait
mov
mov
js
and
xor
cltd
and
mov
xchg
repnz
inc
pusha
shrl
js
cmp
pop
mov
xor
ror
fsub
lds
out
pop
aad
pushf
or
pop
jmp
mov
test
pop
jle
out
or
pop
jo
dec
cmp
or
pop
inc
fstp
imul
or
ds
adc
inc
or
lret
xlat
mov
inc
mov
shll
roll
into
inc
mov
movsl
xor
sbb
loopne
data16
sahf
divb
mov
xchg
add
fidivl
rorl
xcrypt-ecb
cmpsl
int3
mov
leave
mov
int3
scas
add
test
or
push
jp
je
aad
jno
jnp
or
out
sub
jbe
mov
jae
int3
sti
std
sbb
mov
shll
sub
loop
lahf
add
jae
cld
mov
out
dec
mov
fs
pop
repnz
lret
aas
daa
xor
jbe
pop
lock
mov
mov
dec
dec
jb
je
shll
sub
dec
fcmovnb
xchg
cmp
cli
jns
xor
xor
loopne
jbe
lds
jl
pusha
pop
cmpsb
jbe
mov
push
mov
in
inc
mov
mov
dec
add
and
and
fldl
pop
push
cmpsl
and
lahf
insl
pop
pop
jb
xor
adc
fimuls
sbb
lcall
cmp
xor
fs
icebp
jmp
cli
push
jecxz
je
insl
nop
popa
test
imul
jns
push
inc
jo
popf
push
aas
mov
out
push
or
jmp
sbb
enter
sbb
sub
push
push
cli
or
std
idiv
inc
outsb
mov
mov
cwtl
jmp
xchg
xchg
stos
sbb
subl
or
sub
pop
inc
fisubrs
cli
pop
pushf
in
sub
push
inc
mov
pop
outsl
jle
enter
mov
inc
cmpsb
or
mov
adc
int
and
loope
xchg
cmp
sub
xor
cmp
iret
adc
push
loopne
iret
push
out
cmpsb
popa
divb
xor
insb
sub
inc
stos
pop
call
imul
mov
into
xchg
pop
mov
or
clc
in
mov
loopne
call
dec
jne
ja
dec
or
add
inc
js
jle
xchg
or
nop
leave
or
xor
pop
popf
sahf
cltd
pop
add
xchg
icebp
add
mov
sysexit
jns
rcrl
or
cmp
push
jmp
and
mov
into
ds
jbe
cmc
out
pop
xchg
enter
rcr
cmc
and
pop
and
xor
mov
rcrb
cwtl
add
test
mov
shr
mov
jmp
jns
mov
xor
sbb
pop
mov
pop
pop
inc
stos
neg
jmp
adc
iret
psrlq
js
ret
cwtl
pushw
addb
xor
stos
jb
test
push
in
jns
push
outsl
cltd
add
js
mov
sub
pop
sbb
stos
and
fwait
xor
jnp
test
imul
sbb
push
pop
pop
adc
jge
jnp
mov
mov
in
or
sub
mov
in
enter
push
cmpsb
xor
inc
push
adc
ret
mov
jl
outsb
hlt
pop
inc
jns
sbb
dec
pop
inc
orl
rorl
push
mov
cmp
add
mov
testl
lea
lock
jbe
cmp
jbe
scas
pop
cmp
xor
call
fldenv
pop
pushf
scas
repnz
jb
jle
fildll
int3
xchg
aam
pop
xchg
push
in
lods
add
inc
lret
repz
shll
cmp
ret
dec
nop
pop
into
sti
jns
jne
mov
pushf
jecxz
cwtl
mov
adc
cmp
ficompl
cmp
mov
outsb
lods
jle
ficomps
cli
shll
ss
add
xor
out
push
or
xor
inc
mov
jecxz
fcomps
add
xor
sbb
pop
repnz
fstpt
mov
adcl
mov
push
dec
lret
rcrl
lahf
pop
mov
pop
adc
xchg
sti
dec
stc
jmp
stos
pop
and
sbb
push
mov
mov
xor
jo
add
jl
icebp
and
cmpsl
mov
ret
and
fdivrl
mov
or
pop
mov
adc
fbld
add
mov
popa
outsb
shrl
mov
xchg
or
nop
ja
xchg
std
popf
insl
lret
insl
pop
push
testb
in
test
or
rorb
xor
xor
sahf
cld
fsts
daa
enter
mov
cmpsl
and
rsm
and
shrl
xor
adc
adc
push
cmp
test
sub
ret
lcall
cmp
cld
ljmp
bound
lea
iret
mov
jmp
loopne
or
xchg
push
cltd
mov
insl
lea
cmpsl
shl
push
cwtl
ret
idivb
lods
loopne
or
adc
mov
adc
sbb
cmp
test
test
or
fwait
shr
cmp
roll
cltd
adc
jmp
pop
push
xor
dec
out
sbb
or
mov
pop
jnp
cli
sbb
std
mov
mov
dec
loop
jbe
push
sub
push
dec
jg
ficompl
std
xor
fistpll
pop
and
pusha
pop
inc
test
jle
sbb
or
std
cs
ljmp
aam
je
pop
lock
ss
out
int3
dec
movsl
cmp
jns
pop
cmp
dec
dec
es
mov
loopne
rorl
sbb
dec
inc
lret
inc
aaa
add
xor
lret
int
insb
xchg
adc
stos
in
fisubs
xlat
repnz
cmp
inc
sbb
dec
andl
or
subl
call
subb
les
test
stc
decb
lock
xor
push
push
dec
ss
lock
pushf
pop
mov
mov
lds
pop
cmp
push
add
negb
lock
dec
mov
or
and
and
jae
aas
cmc
js
stc
or
xchg
add
bound
sarb
lahf
pusha
rorl
lahf
add
add
cmp
test
gs
fisubs
rcrl
and
cmp
add
add
sbb
fidivl
out
bound
mov
and
je
adc
sub
cltd
pop
cld
imul
xor
push
mov
lods
dec
cmpsb
mov
adc
leave
xchg
jmp
sahf
pop
pop
jb
inc
pop
xchg
js
add
cmp
and
insb
scas
repz
jl
dec
sub
jl
add
lea
push
icebp
cmpsb
cmp
mov
sbb
push
mov
iret
imul
sub
cmp
hlt
lods
cmp
fbstp
mov
aas
mov
mov
adc
loopne
inc
add
push
cltd
xor
cwtl
xchg
pop
or
test
adc
and
loopne
xor
bound
insl
jle
pop
cmp
mov
fadds
les
sti
and
outsb
pop
int3
cmpl
pusha
or
adc
out
dec
nop
inc
fstps
adc
stc
and
sbb
cmp
stos
sbb
mov
xchg
mov
out
jo
mov
push
fisubrl
fisubrl
mov
lock
repz
sbbl
outsl
lcall
clc
xchg
loope
sbb
jecxz
add
fsub
adc
jle
adc
shlb
insl
xor
xor
xchg
or
push
mov
lret
pusha
iret
adc
push
push
cli
loopne
pop
jbe
es
fwait
dec
and
mov
mov
inc
loope
bound
fwait
not
test
loop
shrb
orb
xchg
and
lahf
dec
sti
lret
in
in
jbe
mov
pop
pusha
inc
fwait
lret
ja
fisubrs
insb
stc
cmpsl
jg
aas
rorl
lods
pop
sub
movsb
fwait
and
dec
sub
xor
ret
pop
lahf
sbb
pop
xor
jbe
or
cli
push
pop
stos
ja
and
sbb
test
and
mov
fwait
sbb
mov
mov
adc
loop
sub
scas
insl
stc
dec
xor
rcrl
sbb
test
fstp
sub
loop
insl
mov
jno
in
pop
test
sarl
and
data16
nop
cmp
xlat
or
je
push
loope
pop
scas
ret
shrb
dec
pop
jmp
mov
mov
cmpsb
enter
aas
repz
arpl
mov
jnp
inc
out
and
or
fs
in
mov
bnd
inc
into
adc
dec
jge
sbbb
dec
sub
xcrypt-ctr
cmpsl
fwait
jecxz
pop
scas
shr
shll
jg
inc
imul
jmp
add
test
xchg
es
jno
mov
cmp
mov
call
jae
push
lahf
sub
jp
dec
lret
or
cmp
adc
loope
add
out
push
or
lea
sbb
jbe
test
jb
xor
out
pushl
pop
sub
jmp
jns
dec
lahf
or
cmp
test
sub
jb
mov
mov
loope
addr16
movsl
push
stos
pop
loopne
aaa
jmp
push
inc
lcall
pop
cmp
out
cmp
adc
sub
stos
shr
sbb
faddl
mov
das
int
xor
ds
pop
push
xor
jo
data16
or
pop
jne
or
es
add
mov
add
scas
js
leave
cmpsl
add
ds
daa
leave
test
cmp
push
fcomip
daa
pop
sbbb
fsubs
out
aad
fwait
test
jae
sbb
or
fcomps
ret
cli
pop
icebp
loope
mov
sbb
iret
aas
repnz
in
adc
inc
mov
pop
add
das
scas
pop
xchg
aaa
pop
out
int3
call
fs
mov
in
mov
mov
mov
inc
sub
adc
popf
adc
cmpsl
lods
inc
mov
or
je
cs
sbbl
sbb
add
repnz
mov
rcrl
cmp
test
ss
pop
sahf
jnp
test
mov
aas
jge
scas
imul
mov
jne
rcll
mov
mov
out
sbb
jnp
or
xchg
xor
jmp
and
jnp
fucomi
mov
sub
add
test
aad
popa
jmp
mov
add
add
jo
or
add
push
push
mov
into
sub
add
xchg
sub
add
in
xor
push
pop
lcall
inc
mov
and
add
or
ret
mov
inc
orb
in
int
xor
mov
sbb
out
shlb
cmp
cmp
cmp
dec
fbld
aaa
or
mov
adc
repnz
push
sbb
mov
gs
cs
mov
repnz
xor
arpl
test
mov
jne
call
xor
inc
js
into
sahf
mov
pusha
mov
sbb
call
or
outsl
add
xchg
push
mov
fsts
adc
outsb
ss
call
push
mov
test
jp
sahf
xlat
test
pop
jnp
jo
or
movsl
xlat
inc
inc
mov
jge
xchg
xchg
in
jl
sahf
sub
out
inc
sahf
sahf
mov
adcb
ret
ret
cwtl
sub
jecxz
adc
cmpsb
xor
jmp
pop
sub
cmp
push
mov
push
mov
xor
push
mov
icebp
and
xchg
ss
fdivrl
push
shll
pop
pop
xor
xor
mov
adc
fcomps
or
pusha
aas
add
std
xor
dec
inc
in
dec
loop
insl
xchg
sub
pop
mov
cmp
cmc
loope
test
cmp
xchg
dec
add
sub
cmpsb
adc
outsb
sub
mov
fbld
inc
lea
pop
scas
fs
repz
movsb
jmp
stos
lock
jge
cmpsl
adc
push
inc
iret
testb
lds
push
adc
enter
imul
daa
mov
cmp
arpl
inc
sarl
xor
pop
jmp
fnstcw
in
dec
ss
pop
xchg
ret
fimull
and
jp
aad
leave
mov
inc
in
mov
jmp
dec
aaa
aad
and
sti
sbb
stos
testb
sbb
jbe
mov
popf
hlt
enter
xor
and
sbb
sbb
mov
pop
pop
or
mov
sub
cmp
jns
jmp
cwtl
inc
jmp
iret
rclb
mov
inc
xchg
and
xor
adc
pop
rcl
in
mov
ja
stc
or
adc
lea
into
hlt
push
inc
jbe
or
jns
movntps
lods
loope
jmp
jne
push
push
pop
cmp
sub
fldl
roll
rorb
jnp
icebp
shlb
nop
dec
loop
outsl
push
shll
or
jmp
setge
gs
jmp
clc
rclb
dec
cmpsb
fistpl
push
inc
loop
sti
xchg
jb
in
jmp
push
pop
adcl
stos
cmpb
jbe
and
pop
jle
xor
dec
out
call
dec
pop
sbb
mov
mov
jo
pop
sbb
cmpsl
pusha
lcall
insb
jns
cmpl
fsts
jno
fiaddl
stos
jecxz
mov
es
dec
inc
outsl
push
cltd
imul
enter
sbb
aaa
int
in
or
lret
mov
cmp
jae
or
shrb
test
push
add
popa
iret
jecxz
and
ss
pop
hlt
popa
cmc
lret
fisttpll
mov
filds
aad
and
fcoms
out
loopne
aas
dec
jmp
inc
xchg
adc
ss
or
gs
mov
and
push
test
outsb
fiadds
sti
mov
adc
shll
das
jne
dec
dec
and
xor
mov
jnp,pt
or
mov
pop
scas
mov
ficompl
fwait
sahf
inc
in
lahf
leave
aam
aas
enter
out
mov
push
aas
icebp
pop
xchg
mov
lods
mov
ror
in
xchg
lock
cs
int3
sbb
inc
idivl
mov
mov
fs
mov
subl
sbb
xchg
inc
cld
lahf
sbb
icebp
jge
sbb
ds
jl
push
xchg
mov
lret
stc
sbb
daa
inc
sub
bound
aas
xchg
sti
or
shl
inc
sbb
popf
ret
movsl
mov
out
mov
fs
daa
rclb
dec
push
std
xchg
jns
xchg
push
addl
leave
scas
movb
in
test
lret
adcb
insb
xchg
popa
and
in
fistps
sti
cld
and
mov
pop
jmp
jmp
pusha
lcall
mov
xor
push
pop
test
imull
adc
sbb
stos
ficoms
mov
das
push
gs
mov
or
js
inc
xchg
cmp
jle
lahf
push
mov
stc
ja
inc
add
xor
std
scas
dec
inc
loope
shlb
ficompl
add
outsl
aaa
mov
dec
pop
aaa
and
fsubl
fs
clc
pop
scas
sub
out
dec
addr16
adc
cwtl
mov
arpl
pop
cmpsb
cmovne
inc
sbb
inc
sarl
jo
pop
inc
inc
dec
mov
inc
adc
cmpsb
rcrl
enter
push
out
popf
xor
nop
jno
mov
aam
xlat
mov
push
mov
daa
mov
into
xor
sbb
xchg
imul
rorb
test
xor
jle
fstp
fistpl
adc
cmp
inc
push
dec
sub
jno
sbb
xchg
mov
push
dec
loopne
mov
gs
and
mov
sub
sti
mov
call
sub
pusha
rcll
xor
add
or
inc
mov
xchg
or
stos
sbb
loop
inc
scas
xor
and
dec
jp
cli
xor
loop
shlb
repz
popf
xor
rdmsr
fsubrl
pop
jb
xor
les
dec
push
aam
sub
xor
test
and
and
in
arpl
insl
fnstsw
adc
and
jmp
inc
hlt
cmpsb
lret
sbb
sbb
faddp
and
xchg
ds
in
cmp
xchg
and
ret
and
test
lahf
jmp
push
add
sbb
ss
dec
xchg
sarb
and
scas
mov
out
out
faddl
add
lock
outsb
sub
or
leave
loope
mov
jp
cmp
hlt
lret
add
cld
dec
aad
and
ret
test
jo
adc
fcmovnb
ss
cmc
cmp
mov
cmc
testb
push
jmp
rcl
push
mov
dec
xchg
adc
shlb
cmp
cmp
or
movsl
pop
lods
fs
pop
lahf
dec
mov
pop
and
pop
jle
lods
mov
shll
shlb
call
movb
jo
ljmp
mov
push
sahf
movsb
faddp
xchg
paddsw
sbb
mov
insb
pusha
lcall
clc
lcall
imull
inc
sbb
pop
cmpsb
iret
add
push
pop
notb
mov
hlt
fs
sbb
call
sub
test
in
pushf
fiadds
mov
or
fmull
add
bound
loop
xlat
in
push
adc
icebp
loope
or
mov
stos
lock
jb
sbb
adc
sub
fs
pusha
lahf
push
adc
cmp
out
jp
fidivrl
js
mov
mov
scas
stos
out
lahf
xchg
mov
imul
addr16
jg
mov
mov
jl
decb
lock
ja
andl
test
cmp
lods
in
mov
push
int3
jno
and
hlt
test
out
xor
jno
aas
loop
jp
sub
dec
cmp
xor
sbb
lcall
mov
push
lea
mov
fcoml
loope
xchg
jb
push
scas
jb
xlat
jbe
mov
mull
cmp
movsb
or
mov
jne
ss
jmp
push
rol
pop
int
jb
lods
dec
lods
les
dec
cltd
jle
jg
mov
lahf
out
xchg
sub
test
outsb
sub
sub
jmp
sub
adc
xchg
popa
mov
xchg
jo
xor
inc
cwtl
jo
fisttps
inc
notb
gs
sub
pop
pop
leave
mov
mov
enter
lret
rcrl
adc
xchg
std
push
ret
scas
xor
push
pop
loope
fdivr
push
bound
loopne
je
push
aas
loopne
or
pop
enter
loop
insb
mov
mov
mov
sub
aad
out
lock
sbb
push
rclb
insb
nop
cs
pop
ret
sub
cmpsb
push
push
arpl
cmpsb
mov
jnp
testl
push
jmp
rcrb
sbbb
cmpsb
mov
jge
arpl
out
outsl
out
or
dec
add
gs
sbb
rolb
test
hlt
aad
add
std
xchg
addl
cs
in
cmp
cmp
mov
cwtl
int
and
mov
push
pop
movsb
mov
jns
lods
xchg
lea
cwtl
outsb
push
mov
sbb
xor
repnz
push
push
push
push
mov
ljmp
mov
sub
int
arpl
xor
cmp
inc
xor
jg
jle
jne
aaa
add
add
roll
orb
pop
orl
cmpsb
xlat
xor
test
int
pop
fldcw
mov
pand
lods
sahf
in
outsb
fsubr
push
lock
fwait
jmp
lods
sub
sub
sbb
push
adc
das
cmp
fisubl
loop
adc
bound
jmp
ljmp
xlat
hlt
orl
ret
shrb
inc
dec
popa
in
fucomip
int
jo
sbb
pop
movsb
xor
imul
jecxz
cwtl
and
loopne
add
ss
push
jmp
xor
call
ret
jge
into
mov
push
jp
inc
dec
daa
sub
mov
pop
fsubs
aad
sti
lods
mov
lret
hlt
cmp
jp
clc
mov
std
pop
inc
mov
cmp
cli
pop
xor
data16
sti
or
cmp
shlb
dec
sbb
movl
mov
or
hlt
repnz
call
jns
dec
adc
fwait
mov
aad
imul
loopne
bound
jnp
dec
add
mov
into
aad
push
je
divb
stc
xor
jmp
jbe
mov
push
stos
insl
jns
mov
stc
test
or
and
int
data16
imulb
sti
xor
movsb
arpl
xchg
push
fisubl
dec
cmc
fcompl
xchg
adc
int
pop
fbld
leave
test
ds
xor
iret
iret
push
push
lahf
imulb
or
out
fcmovb
jno
in
daa
adc
pop
addr16
and
stos
fwait
adc
add
rorb
or
sub
pop
test
sub
xchg
cmpsl
xor
in
das
in
jbe
inc
fsubl
loop
xchg
add
sbb
dec
jbe
adc
xchg
aam
xor
push
imul
dec
imul
push
mov
add
cmpl
shll
xchg
lods
inc
dec
cmp
movsb
pop
cmpsl
roll
outsb
cs
sbb
push
mov
or
mov
iret
mov
movsl
cmp
je
loop
and
sub
mov
xor
sbb
dec
ds
iret
push
sub
pop
std
aad
ja
int
sbbb
icebp
out
add
fcompl
aas
insl
pop
daa
or
jno
pop
mov
jmp
test
add
out
mov
jle
nop
cld
cmp
scas
scas
les
fwait
xchg
adc
addr16
inc
aaa
add
test
add
movsb
addr16
and
cmp
stos
jge
push
adc
add
xchg
sbb
fldcw
pop
mov
and
jns
in
lods
or
and
in
jecxz
repnz
pop
or
dec
jp
adc
jnp
pop
data16
jp
xor
xlat
icebp
leave
mov
inc
loop
pop
mov
pop
push
pop
iret
push
xor
jge
stc
ret
test
aam
xchg
cwtl
add
fildl
imul
popf
pop
mov
xlat
shlb
mov
push
dec
in
adc
loopne
cmp
into
xor
xorb
lock
je
add
stc
adc
mov
push
fdivl
xchg
jb
cmpsb
cmp
xchg
js
jmp
pop
mov
adc
jl
mov
push
xchg
or
inc
shl
push
ja
orb
mov
cltd
adc
fisttpl
lock
push
sub
fcomps
das
imul
jb
inc
add
clc
dec
jo
sub
incb
rolb
cmp
test
inc
mov
cmpsl
xor
dec
gs
mov
mov
loop
push
lahf
mov
loope
mov
scas
roll
mov
clc
jbe
dec
test
push
and
push
stc
cmp
mov
outsl
fstps
cmp
rol
dec
pop
inc
sub
jle
outsl
je
dec
pop
cmp
add
imul
push
mov
push
pop
sub
dec
mov
sar
popa
and
into
aaa
push
enter
je
fdivrs
xlat
sbb
lret
jmp
and
lcall
or
lds
push
test
test
lea
repz
pop
shrb
jb
flds
nop
popf
rorl
jne
loopne
inc
ficoms
dec
cs
adcl
lahf
mov
sbb
dec
je
and
stos
add
dec
jno
xchg
into
mov
div
shll
push
rorb
dec
sarl
push
push
popa
aam
imul
pop
push
mov
xor
push
roll
add
leave
stos
out
into
mov
xlat
cld
add
push
int3
les
sbb
cmc
imul
cmpsl
shll
cltd
inc
mov
pop
push
sub
sub
mov
lods
in
add
adc
icebp
iret
outsl
dec
out
push
scas
in
aam
and
pop
mov
ja,pn
xor
cs
hlt
mov
mov
int3
xor
cld
stos
int3
cltd
sbb
xchg
shlb
add
leave
and
inc
and
in
aam
mov
popa
enter
xlat
and
adc
fadd
pop
out
or
scas
stos
jle
adc
add
ss
rorb
andl
jne
pop
pop
jle
adc
xor
test
fsubrl
cs
mov
cmp
pop
sub
dec
dec
fdivs
mov
jmp
cmp
sbb
inc
shl
aam
jge
outsb
test
mov
daa
sbb
sub
popa
ret
lret
shrb
loope
sahf
stos
or
fwait
lcall
icebp
movb
push
jnp
js
enter
ficomps
sti
scas
push
int
and
pause
lcall
adc
xchg
xor
or
sbb
and
add
push
mov
stos
aas
ss
sbb
and
addr16
lahf
outsb
int3
adc
gs
insb
gs
ret
fnstenv
push
sti
and
adc
test
jl
popf
mov
std
imul
popf
or
hlt
add
jb
cld
loope
into
ret
pop
subl
fidivl
icebp
sub
mov
cmp
sbb
mov
mov
lcall
movsb
ret
mov
push
jb
pop
in
sahf
dec
cld
out
js
fildll
iret
sbb
mov
jg
mov
andl
imul
repz
mov
fwait
outsl
push
loopne
pushl
negl
hlt
in
test
aad
dec
dec
clc
dec
add
inc
mov
repnz
mov
xor
jnp
daa
mov
mov
stc
hlt
and
idivb
jo
mov
lock
xchg
stc
sbb
sbb
scas
lods
stos
icebp
outsb
test
pop
out
mov
sub
jp
push
mov
inc
xchg
push
sbb
and
mov
mov
sbb
add
push
cwtl
inc
test
nop
mov
insl
setno
scas
jmp
sub
fs
mov
nop
mov
mov
jg
jne
xchg
mov
mov
aad
in
push
mov
aaa
mov
and
and
cmc
pop
xchg
scas
and
lea
cs
or
xor
out
std
andl
mov
add
pop
jge
divb
scas
mov
data16
mov
adc
mulb
xchg
inc
and
jno
add
push
icebp
dec
xor
or
cli
sbb
es
jne
mov
xlat
jne
push
rorb
fadds
lds
push
push
sbb
les
ret
or
lea
cmc
mov
xchg
xchg
mov
adc
mov
fistpll
addb
push
stos
xchg
jns
xchg
outsb
and
adc
xor
xchg
ljmp
sahf
ret
mov
icebp
jecxz
adc
lret
sub
dec
sub
mov
xchg
outsl
fnstenv
ja
loop
push
iret
pop
dec
testb
jecxz
mov
pop
jo
jbe
mov
or
push
stc
xchg
xor
inc
sub
mov
add
cmp
push
aad
pop
cmp
test
dec
sbb
stos
movsb
sub
sub
and
sbb
inc
pop
sub
outsb
adc
xchg
inc
dec
lahf
call
mov
pop
jnp
out
fwait
test
push
mov
daa
push
and
cmp
jmp
dec
stos
mov
mov
xchg
repz
pusha
inc
out
mov
sbb
stos
cmp
adcb
shll
or
jle
push
ja
mov
push
mov
decl
xchg
inc
cld
andb
push
push
or
adc
aaa
std
push
xor
inc
repnz
ljmp
fwait
sarl
cld
daa
cld
insl
ficompl
dec
cmp
cmpsb
stos
fidivl
jp
leave
or
jle
sbb
in
fisubl
jecxz
push
pop
fildl
pop
mov
fsubrs
fdivl
mov
jb
ror
insl
mov
pop
inc
adc
mov
and
test
cmpsl
fcomp
mov
xrelease
cmp
adc
out
sub
add
or
pop
fwait
cmc
add
imul
dec
sbb
lods
ja
out
dec
lcall
sbb
pop
jl
ds
mov
btc
sbb
sub
push
ffreep
hlt
out
push
repz
aas
sub
pop
mov
dec
pop
lcallw
rorl
bound
jle
sbb
jg
ror
jne
fs
jbe
inc
jp
int3
fdivrs
mov
mov
imul
push
pusha
xor
aas
or
sbb
inc
div
inc
jmp
cmc
and
xchg
dec
mov
enter
rcll
fsubl
mov
jecxz
dec
out
aam
and
pop
popa
shlb
loopne
inc
ss
test
cmpl
int3
xchg
mov
xor
add
mov
arpl
mov
push
mov
sub
dec
insb
jp
lret
fists
pop
dec
out
stos
stc
push
inc
call
enter
mov
lahf
in
iret
inc
cwtl
rcll
imul
sub
lcall
jae
jae
jne
bnd
cltd
xchg
sbb
filds
and
cmp
pop
pop
adc
sub
imull
sbb
pop
pop
push
mov
xchg
daa
fsubs
ficompl
push
push
mov
mov
pop
add
das
int
or
dec
inc
in
ljmp
pop
xchg
push
das
push
pop
dec
shlb
mov
cmpsb
mov
ficomps
push
fnsave
stos
repnz
lret
xchg
mov
mov
xor
dec
rcrl
cmp
loope
fsubrs
int
inc
in
orl
or
mov
adc
push
incb
lahf
xchg
mov
sub
xchg
stos
sbb
push
pop
mov
sub
out
lock
jbe
test
testb
aam
sbb
into
pop
sub
mov
cmp
xor
and
lret
scas
push
xlat
add
fs
loopne
push
cs
dec
call
pop
adc
dec
mov
and
pop
cmp
sub
sbb
orl
daa
leave
pushf
mov
xchg
jno
inc
push
test
mov
adc
or
sbb
adcb
mov
xchg
jnp
dec
scas
addr16
pop
ret
pop
nop
push
test
test
incb
jnp
dec
shlb
cmp
inc
fs
lahf
add
mov
rorl
inc
or
push
out
cwtl
mov
test
repnz
xchg
aam
rorl
test
ljmp
sub
fildl
mov
hlt
push
jnp
subb
out
mov
movb
add
push
insl
mov
push
push
sbb
sbb
xor
imul
and
cmp
pop
cmp
jge
push
fstl
shlb
push
mov
imul
aam
jp
add
aad
inc
inc
pop
push
push
scas
lods
cmp
loopne
rcr
pop
sbb
fxch
sarl
or
jg
dec
iret
and
xor
int3
mov
or
dec
push
outsb
xor
xchg
or
dec
mov
aaa
push
loopne
aas
lret
inc
add
cmp
arpl
push
lcall
pop
jecxz
dec
je
pop
inc
adc
inc
jns
ret
push
pop
or
mov
dec
jnp
pop
xchg
notb
jle
adc
jecxz
adcb
ficoml
or
lds
or
cltd
push
out
jnp
xchg
mov
add
jle
inc
inc
mov
jb
arpl
fnstsw
mov
iret
xchg
xor
cld
pop
xchg
push
mov
inc
sbb
lret
mov
mov
xchg
loope
int
out
popa
mov
pop
dec
and
lds
add
push
cmpsb
adc
aam
inc
inc
test
cmp
jno
stc
jns
xor
movsl
jl
jp
pushl
rol
jmp
dec
js
cmp
aam
jne
xchg
subl
das
mov
sub
lds
push
sub
xchg
fsts
in
pop
jmp
das
dec
insb
imul
mov
sbb
hlt
out
jae
sub
dec
mov
pop
fiaddl
inc
jbe
sbb
mov
sbb
or
sbb
jle
pushf
adc
cmpsl
push
nop
fwait
icebp
dec
es
ljmp
addr16
insb
lret
pop
inc
sub
push
cmp
fstps
scas
loopne
sbb
pop
sbb
loop
sarl
ss
inc
push
shrl
xlat
arpl
lock
cmc
out
sbb
dec
pusha
fadds
out
repz
push
inc
jno
loop
mov
xor
lea
incl
adc
xor
mov
jne
ret
in
inc
sub
nop
sub
jnp
mov
je
mov
call
cs
or
in
imul
mov
aas
in
call
xorl
js
cmp
cs
add
cmpb
dec
inc
and
mov
mov
fadds
daa
push
pop
and
movsb
lods
imul
stos
je
pop
jecxz
inc
adc
dec
and
fwait
cmpsb
add
adc
jns
pushf
ss
push
ds
hlt
adc
inc
fmuls
pmulhuw
ljmp
jmp
jmp
add
sub
mov
repz
gs
loop
xchg
cmpsl
jecxz
pop
cltd
and
cmpsb
addb
jns
in
xor
es
mov
dec
in
push
pop
and
lret
ljmp
in
add
or
xchg
sbb
ljmp
jne
mov
cld
fidivrl
aas
lods
inc
aaa
insb
adc
inc
addr16
dec
shll
adc
mov
fsubrs
dec
shlb
loop
inc
outsl
xchg
aad
icebp
push
mov
jb
sahf
fiaddl
jmp
push
adc
pop
xchg
sbb
lods
ret
fisubrs
mov
int3
cmp
and
ret
pop
loop
out
cmp
test
sbb
jge
rolb
loope
xor
jle
dec
lea
xchg
sbb
repnz
push
adcb
movsb
lret
xchg
pop
das
loopne
mov
cltd
cwtl
pop
mov
jae
mov
cmp
xor
loop
scas
or
adc
add
inc
rep
mov
mov
sbb
add
shl
lcall
in
xor
cmc
or
repnz
cmpl
ret
cmp
mov
das
xor
pop
fsub
icebp
xchg
out
pop
dec
ret
mov
mov
dec
pusha
pop
jge
adc
mov
pop
mov
mov
rorb
sbb
lods
jle
lahf
das
xor
inc
arpl
or
mov
mov
push
stos
pop
mov
imul
and
mov
mov
or
out
sbb
loope
out
jae
cmpsb
push
push
inc
cltd
push
repnz
sbb
ljmp
movsb
loop
icebp
push
xor
pop
cmp
negl
es
mov
push
push
jmp
push
adc
ja
test
jne
jmp
insb
jnp
adc
mov
les
iret
xor
loopne
push
sbb
and
sub
lods
aam
and
or
loope
xor
add
je
sbb
sbb
jp
adc
add
add
mov
add
popf
sbb
in
sbb
lea
sbb
mov
adc
repnz
imul
leave
addr16
stos
cltd
pushf
insl
push
adc
push
nop
push
lods
sbb
imul
cmp
iret
ficompl
in
jnp
cmp
repnz
cmp
repz
test
hlt
and
ficoml
mov
sub
fimuls
fldenv
xchg
decb
dec
xchg
pop
jecxz
jo
fwait
mov
aam
jns
lret
mov
jnp
jmp
dec
movsb
jle
adc
xchg
jbe
scas
pop
ja
out
popa
movsl
jge
push
out
mov
xor
push
push
subb
jnp
pop
imul
fstp
stos
subl
cmc
xchg
cwtl
adc
bound
ror
add
xor
xor
cmp
cltd
neg
hlt
cmp
into
pop
loope
sbb
or
movsb
cltd
push
fsubs
mov
mov
adc
leave
movsb
pop
dec
sub
mov
jmp
mov
shl
enter
sbb
jg
push
pop
adc
lcall
ss
xchg
cmp
push
inc
nop
mov
adc
aam
lock
adc
fwait
adc
insb
mov
cltd
subb
aam
mov
lods
clc
lods
inc
mov
sbb
mov
dec
xchg
popf
insl
push
sbb
cltd
scas
dec
mov
lret
xchg
insl
fcmovu
and
outsl
push
pop
mov
fidivl
pop
lds
rcll
cmpsb
shll
dec
test
dec
shl
mov
icebp
jecxz
rorb
xchg
xchg
or
das
dec
cld
sahf
mov
xor
das
jg
xchg
xor
mov
xchg
or
and
mov
adc
jg,pn
adc
fsubs
shrl
in
cmp
ficompl
adc
out
mov
adc
pop
mov
rdmsr
mov
cmpl
nop
mov
xchg
mov
push
call
outsb
inc
lea
jle
sbb
lret
shlb
mov
test
dec
and
in
imul
orl
leave
pop
cli
sahf
lods
lds
cmpsb
xor
sbb
push
push
stos
mov
jecxz
cmc
out
mov
add
lret
inc
lds
cmp
push
cmp
xchg
mov
jbe
pushf
or
jo
or
push
in
cwtl
aam
jno
lods
sbb
pop
pop
adc
mov
jne
add
je
in
inc
lcall
xor
jmp
sub
fidivs
outsb
push
push
out
mov
lret
dec
int3
shrb
repnz
inc
mov
sarl
mov
and
jnp
lret
rcrl
movsb
cli
push
mov
mov
gs
fildl
outsl
aam
nop
stc
ljmp
stc
bound
sub
mov
dec
ret
daa
test
test
icebp
sbb
ja
cmp
in
cwtl
paddsw
sub
out
inc
mov
div
jge
push
add
xor
inc
push
jecxz
ret
mov
xchg
mov
xchg
ljmp
pop
lret
mov
and
or
pop
push
inc
sub
aad
faddl
pop
pop
mov
push
xchg
popf
sub
xchg
movsb
daa
outsl
les
shl
cltd
cmp
pop
xlat
aam
ret
shl
push
xchg
sahf
mov
push
mov
sub
mov
repnz
add
jle
sbb
sbb
nop
mov
sbb
stc
mov
push
xor
sub
cmp
jno
xor
inc
sub
leave
mov
push
or
sub
hlt
inc
pop
divl
xor
pop
mov
mov
add
jo
les
test
les
cmp
pusha
dec
negb
mov
and
push
jecxz
push
push
enter
or
dec
jmp
sub
cld
dec
int3
ret
sub
jbe
adc
dec
dec
add
test
cli
push
dec
pop
and
push
mov
mov
inc
cli
push
cmp
imul
popf
flds
mov
jne
xor
dec
loopne
xchg
cmp
fmull
nop
pusha
xor
repz
sti
push
popa
mov
pop
shlb
pop
pop
mov
cwtl
adc
aaa
adc
pop
add
and
inc
adc
xchg
xor
hlt
sti
cwtl
rclb
push
fmull
xor
cwtl
add
imul
xor
and
add
xor
mov
or
push
mov
out
mov
in
jns
mov
cmpsb
sub
cmpb
cmpsb
pop
mov
int
jecxz
ja
ret
or
jb
mov
in
dec
pop
mov
jae
xor
cmp
orl
outsb
sub
pop
outsb
fstl
jbe
sti
add
dec
adc
ret
fdivp
pop
jbe
mov
stos
sarb
mov
cmp
fisttps
out
stos
bound
lods
std
mov
add
call
jbe
xadd
fbld
sub
xor
in
addr16
inc
mov
cmpsl
pop
push
insl
or
bound
pop
push
and
push
into
or
stc
inc
sub
push
enter
das
or
stc
mov
mov
not
or
in
mov
add
mov
xchg
out
dec
repz
enter
sub
inc
cmpsb
pop
ja
notb
out
add
pop
and
mov
sbb
inc
dec
fldl
mov
jne
jg
add
xor
inc
aas
cmp
sarb
mov
and
fdivs
ds
in
jnp
loop
lahf
mov
js
cmp
jb
xor
push
jle
cwtl
xor
outsb
sub
dec
dec
notl
fnstcw
ljmp
dec
xchg
sub
lret
or
push
cmpsl
jl
in
nop
jnp
cld
in
adc
das
sbb
pushf
mov
jae
jp
inc
es
push
xchg
clc
cmp
push
in
pop
outsb
in
lret
mov
loop
xchg
test
push
enter
xchg
dec
jle
hlt
int3
std
xchg
jl
or
jecxz
adc
xor
mov
xor
fisubrl
test
js
shll
mov
jo
subb
xchg
aam
rcrl
sub
fsubrl
push
dec
xor
dec
shll
test
cmp
push
xchg
mov
xchg
hlt
cmp
icebp
xchg
movsl
and
mov
leave
repz
cmc
je
nop
gs
aad
rol
out
xchg
fldenv
pop
movsl
xchg
leave
jae
sarb
insl
mov
cmp
cwtl
addr16
cltd
lret
hlt
cmpb
push
ja
sbb
mov
lds
inc
popa
push
add
rcr
xorl
xchg
sbbl
pop
in
mov
sbb
and
inc
leave
out
arpl
xor
add
cmc
add
sbb
ret
repnz
push
js
xor
xor
sahf
pop
xchg
lock
push
sub
testl
cmp
cmp
xlat
fidivrl
stos
inc
push
in
call
mov
dec
out
cmpsl
jnp
mov
outsl
pause
cmp
ljmp
lcall
mov
mov
loop
outsl
dec
imul
xchg
lret
cmp
mov
xor
mov
pop
mov
mov
inc
xchg
pop
fs
clc
ret
xchg
xchg
out
lds
stc
mov
outsl
jle
sarb
cmp
xor
cmp
pop
scas
imul
xchg
and
add
out
pop
push
xlat
mov
adc
jnp
mov
std
into
out
insl
fnstsw
jl
xchg
inc
mov
shl
lds
bnd
stc
hlt
adc
sub
testl
repnz
das
popa
je
add
rolb
fsubrs
scas
ljmp
and
stos
mov
xchg
mov
mov
cmp
lahf
imul
cld
vmovntps
int3
dec
mov
cmp
add
mov
loope
enter
inc
jae
push
mov
int
cmc
or
or
cwtl
sub
pusha
pop
jnp
mov
js
shll
sub
jp
jnp
fs
xor
jns
inc
dec
push
fistpl
loope
sbb
push
and
mov
push
popa
mov
nop
js
or
leave
mov
sti
je
mov
mov
lods
sub
cmp
sbb
pop
xor
dec
sub
jns
mov
outsl
xor
pop
aaa
fnclex
dec
jecxz
adc
call
dec
push
sub
shlb
xor
mov
pop
scas
or
mov
push
mov
movsl
jo
or
add
dec
push
xchg
fcoms
shll
les
xchg
mov
add
xchg
pop
gs
and
fbld
mov
mov
dec
pop
xor
out
sbb
xchg
jo
xchg
pop
ss
repz
icebp
mov
pop
nop
adc
dec
mov
insb
pop
add
incl
jnp
cmp
inc
adc
add
mov
pushf
xchg
in
sub
mov
sub
fldt
pusha
es
xchg
out
ss
ja
in
xor
stos
lds
adc
les
xchg
stc
lods
mov
pop
jb
lahf
lret
push
lahf
frstor
repnz
xor
mov
shlb
out
testl
add
xchg
aad
sahf
mov
das
fwait
insb
inc
movsl
fstpt
cmpsl
gs
cmp
pop
test
sub
ja
cmpsl
mov
jecxz
jle
js
in
push
sahf
sub
sarb
insl
shr
mov
mov
adc
movl
aam
xchg
adc
jecxz
mov
or
sub
cmp
xor
sub
pop
mov
int3
or
imul
rcrb
decb
add
mov
fwait
mov
cmp
push
jle
aas
jae
imul
xchg
fsubl
pop
mov
and
inc
jbe
inc
mov
aad
push
fldl
insb
dec
mov
loop
dec
add
jecxz
jae
scas
gs
dec
repnz
pushf
mov
pop
push
jne
aas
adc
xchg
push
pop
jecxz
int3
cmp
or
cmp
andl
pop
cli
scas
xchg
sbb
pop
inc
cli
lock
cli
scas
rcr
icebp
repz
ss
and
xchg
bnd
stc
xchg
test
aam
jb
cmpsl
dec
ret
loope
pop
sub
push
mov
push
pop
scas
das
test
xchg
rorl
cld
push
fdivrs
mov
cli
sbb
loope
mov
jno
js
iret
sbbl
and
pop
jae
and
push
add
fmul
push
ds
mov
push
push
lock
jb
lds
mov
sti
mov
lcall
and
push
push
push
fcmove
cmp
mov
out
enter
xor
mov
scas
aad
int3
jbe
std
xor
jo
sub
icebp
std
shll
mov
stos
jg
enter
pusha
arpl
ret
fcomi
scas
xchg
mov
lahf
aaa
mov
cmp
popa
rol
stos
addl
adc
mov
fsts
in
sbbl
dec
es
fwait
cmpsl
sub
lret
sti
scas
mov
or
bound
enter
or
clc
push
cmp
sbb
aas
mov
mov
lret
fbld
rep
sahf
mov
enter
pop
pop
hlt
dec
push
sub
jp
mov
popf
or
int3
fmull
pop
xchg
xor
fwait
push
mov
sbb
jp
dec
out
and
orl
lods
cltd
std
rolb
mov
push
push
push
popa
rorb
aad
add
mov
add
pop
inc
cmp
in
push
ja
mov
pusha
cvtpi2ps
test
inc
mov
mov
sbb
enter
jp
shrl
loop
and
jbe
dec
aaa
cmc
xchg
mov
jnp
in
test
testl
add
in
ret
lods
adc
push
int
mull
jno
bound
das
xor
enter
xchg
mov
enter
mov
cwtl
enter
inc
mov
insl
mov
and
mov
xor
xchg
fldcw
repnz
dec
sbb
lret
mov
push
imul
pop
push
fbld
fnsave
inc
mov
out
nop
lahf
daa
leave
mov
or
and
inc
mov
adc
sbb
fldt
or
mov
nop
mov
mov
sahf
iret
inc
fcomip
pop
and
dec
in
and
and
jbe
sub
cmp
cmp
mov
pop
paddw
pop
ror
loope
fdivl
inc
out
mov
sub
into
pop
scas
les
iret
scas
mov
hlt
add
addr16
dec
add
ja
inc
scas
loope
adcl
jl
or
and
leave
mov
das
cwtl
xor
xor
repz
xchg
jns
sub
lods
loope
adc
sub
icebp
ss
mov
cwtl
mov
sub
out
pop
xor
negb
out
mov
cmc
jo
dec
mov
pop
pop
jno
and
js
fistps
pop
arpl
ret
jmp
pusha
pop
out
xor
pushf
sarb
dec
push
lods
leave
or
mulb
std
push
or
out
xchg
push
lret
repz
push
sbb
loope
nop
sarl
jg
inc
lods
shr
ja
push
mov
push
imul
ds
stos
pop
arpl
jecxz
loop
fwait
inc
int
jnp
mov
dec
insl
sbb
mov
mov
mov
mov
xchg
rorb
sub
js
xchg
jae
js
xor
in
addr16
mov
loopne
mov
pop
mov
xor
xor
push
jns
fstpl
push
inc
stc
loopne
outsl
icebp
idivb
imul
mov
jns
scas
xchg
outsb
aad
sub
xchg
les
out
sub
pop
adc
and
xchg
or
and
add
push
bound
cwtl
push
push
enter
loope
cmp
cmp
int
loope
loopne
jmp
cmpsb
dec
jecxz
cs
imul
adc
push
dec
cmc
sbb
xchg
xchg
and
insb
adc
push
add
std
pushf
andb
push
outsl
push
push
in
enter
out
iret
or
push
call
jle
sarl
mov
pop
inc
pop
mov
or
pop
push
push
call
adc
cmp
lcall
pop
add
loop
xchg
jne
cwtl
addb
loopne
popf
dec
cli
sbb
pusha
sbb
roll
inc
in
push
mov
sahf
popa
test
mulb
frstor
jp
pop
movsb
out
and
mov
sub
or
test
sub
inc
test
inc
push
mov
out
and
inc
pop
cmp
adc
lods
das
pop
or
stos
icebp
les
push
push
scas
and
fildl
aam
xchg
xchg
cwtl
ficoml
lret
insb
xchg
and
jge
and
or
xchg
jne
rcr
pushf
aad
aas
mov
dec
cmpl
shrl
mov
icebp
shrl
shl
nop
mov
xor
bound
jo
in
in
xchg
cmp
dec
mov
roll
sti
mov
and
mov
mov
or
sbb
push
mov
cmp
out
xor
xchg
mov
out
adc
or
xor
pushf
hlt
lcall
bound
data16
cmp
mov
mov
jbe
into
mov
and
lods
xor
adc
mov
push
xorb
in
mov
ss
call
loopne
ja
lahf
and
fdivrs
stc
scas
sub
lods
iret
push
inc
sbb
mov
pop
pop
es
jp
mov
sysret
xchg
jp
cltd
sbb
insl
test
out
lds
adc
adc
jne
lret
test
pop
sahf
sub
or
or
repnz
mov
mov
dec
mov
xor
cwtl
shrb
sub
in
adc
inc
adc
pop
or
movsb
push
xchg
scas
nop
push
es
pop
cmc
cmp
rorl
aam
js
test
sahf
xchg
dec
dec
dec
sbb
jb
stos
cld
and
fimuls
addr16
es
sti
daa
sbb
enter
push
scas
aam
sub
xorb
ds
aam
int
fdivr
es
mov
int
mov
rorb
mov
cmp
int3
xorb
mov
adc
ficomps
cwtl
outsb
dec
and
aas
sub
sub
xchg
ljmp
pop
iret
in
test
mov
inc
push
push
push
mov
inc
testl
mov
fbstp
or
pop
or
mov
test
loope
out
dec
in
in
nop
xchg
shl
xchg
fidivrs
popa
mov
mov
call
adc
shrb
cmpsb
mov
popf
mov
leave
mov
fs
mov
aad
pop
push
rol
pushf
repnz
in
scas
dec
les
add
daa
add
shlb
lods
pop
mov
mov
add
cmp
jle
popf
shrl
push
out
sub
test
mov
jle
lret
repz
int3
ficompl
fsubr
jbe
cmp
xor
std
and
cmp
mov
popf
sub
popa
xor
das
pop
testb
push
xor
movsl
movsb
sub
or
out
pop
mov
adc
mov
xlat
cwtl
sub
adc
popf
lock
movsb
cwtl
jl
inc
out
clc
adcl
jmp
shrb
push
push
or
pushf
jg
and
sub
sub
dec
add
int
sub
jns
clc
dec
lcall
pop
gs
xor
xchg
push
push
lret
sbb
loope
push
inc
cli
cmp
sti
mov
mov
jg
adc
rclb
xor
lahf
mov
sbb
xor
jge
push
nop
ljmp
in
sbbl
or
icebp
dec
jne
pop
notl
aas
ret
pop
or
out
aad
mov
or
lods
mov
scas
insb
cmp
fstpl
xchg
cmp
adc
incl
adc
ja
out
out
sub
rorb
ljmp
cmp
and
das
data16
jg
inc
in
mov
ja
cmp
sub
lods
adc
jg
cmp
push
add
jne
jno
cmp
sbb
push
xchg
pop
mov
arpl
xor
jmp
mov
mov
cmp
pop
sbb
adc
cld
push
icebp
or
pop
push
mov
xchg
mov
cmc
insl
cmp
mov
xchg
nop
lea
insl
and
std
insb
enter
xchg
xchg
pop
mov
pop
jb
out
rcrl
cltd
shl
xorb
or
fiadds
cmp
scas
mov
sbb
lea
sub
or
repz
sub
cmp
add
pusha
push
sub
push
pop
xchg
mov
xchg
sbb
adc
in
divb
mov
sarb
or
ljmp
cld
ja,pt
push
test
mov
jo
mov
add
cmp
mov
and
stos
push
mov
dec
cli
and
test
xor
mov
test
imul
lock
lahf
cld
mov
test
xchg
jno
subb
push
data16
mov
outsb
imul
pop
xor
add
jmp
fsubr
xchg
test
enter
fisubrl
rcrl
xchg
mov
hlt
roll
cli
js
inc
into
pop
mov
dec
outsb
push
popa
and
mov
dec
stc
xchg
adcl
sar
icebp
sub
sbb
lock
jmp
repz
rcrl
mov
dec
mov
mov
xchg
gs
leave
cs
jmp
adc
mov
and
stc
cld
mov
jno
push
push
aaa
jno
cmp
mov
roll
ficoms
cmp
sbb
aam
mov
outsb
inc
xchg
jg
movsl
ds
mov
fwait
call
in
mov
in
push
insl
negb
xor
or
add
enter
inc
out
jne
lea
lcall
sub
test
arpl
mov
inc
push
inc
enter
mov
cmp
push
and
enter
fwait
inc
cmp
sub
mov
lret
push
fucomp
mov
xorb
xchg
loop
hlt
jmp
jmp
adc
inc
mov
cmc
movsb
xlat
popf
adcl
add
cltd
pop
push
push
scas
push
add
xchg
adc
aas
stc
ret
pop
add
jno
es
ss
data16
jb
xchg
dec
shlb
cli
xchg
mov
dec
push
ret
pushf
and
cmpsl
popaw
inc
test
fs
mov
arpl
and
aam
icebp
je
mov
fnsave
rcll
push
add
add
push
xchg
in
loope
popa
aam
xchg
cmp
outsb
mov
sbb
popa
and
push
or
xor
stc
mov
cltd
jg
std
out
jecxz
mov
sbb
imul
sub
in
lds
je
scas
jle
ja
ret
push
adc
lds
negl
pushw
fmul
mov
sbb
xchg
icebp
notb
jmp
cmp
mov
decl
fldenv
addr16
lods
shrl
sub
push
pop
imul
out
push
aam
ds
dec
in
movsl
push
lret
dec
mov
imull
sub
push
psubusw
and
lahf
int
cmp
jmp
cmp
sub
sbb
int3
fistl
incl
hlt
repz
in
mov
mov
push
mov
sub
cmpsb
dec
inc
dec
out
in
push
pop
mov
xor
xor
out
outsl
mov
sbb
fcmovu
inc
imul
in
aaa
mov
lret
cmpsb
movsl
pop
dec
repz
sbb
arpl
nop
bndldx
or
ja
xchg
fwait
pop
sahf
xor
and
stos
cltd
mov
xor
lock
mov
sbb
mov
andl
pop
je
repnz
das
or
push
inc
sahf
mov
sarb
jbe
and
int3
stos
test
mov
xor
ja
rcrl
fcoml
insl
sti
push
push
cmp
sbb
sub
hlt
cld
xchg
xchg
lcall
call
mov
cmp
imul
std
mov
sbb
push
dec
sbb
pop
xchg
ret
cmp
mov
lea
adcb
inc
sarl
jle
push
inc
icebp
add
dec
movb
dec
in
cmp
imul
lds
in
or
push
dec
push
mov
das
add
pop
xor
mov
rorb
push
push
vmulps
fdivp
mov
pop
push
mov
inc
fsts
lea
lods
dec
add
or
test
xor
les
test
fnstsw
jnp
in
jno
mov
lret
and
hlt
ret
in
pushf
xor
sbb
jg
mov
mov
jnp
sbb
pop
out
dec
popf
sbb
or
popf
aas
leave
ficomps
sub
push
adc
xor
iret
inc
jnp
div
imul
jp
lret
insb
ja
movsl
ret
mov
jp
jo
cmp
add
sti
sbb
into
push
mov
jmp
inc
mov
add
pushf
in
sbb
nop
pop
mov
popf
push
in
add
test
pop
jne
fsubr
sub
push
pop
test
pop
iret
push
nop
sbb
scas
movsb
sbb
xor
dec
mov
pop
sbb
lea
push
shll
jecxz
stos
mov
and
ret
les
loopne
lods
insl
clc
mov
cs
enter
shlb
mov
cld
and
and
bound
push
lods
or
cmpsb
mov
out
int
cmp
je
xchg
out
jg
je
xor
out
pusha
test
and
dec
mov
mov
sub
add
or
xor
imul
xchg
pop
jns
mov
sub
lds
jne,pt
cmpsl
mov
and
int3
xlat
and
cmpsl
xchg
xor
arpl
pop
inc
das
pusha
sbb
jg
insb
adc
ret
lock
xlat
xor
test
inc
icebp
push
jb
mov
pusha
xor
sahf
and
pusha
inc
mov
repz
jne
push
jns
sub
and
jo
inc
cltd
enter
xchg
lret
and
repnz
call
sti
mov
fwait
lea
shlb
jmp
in
outsl
pop
shrb
movsl
fdivs
std
cmp
ljmp
jno
pop
and
or
or
push
mov
lds
frstor
in
xlat
in
sub
das
pop
pop
push
mov
jbe
lret
bound
adc
shl
or
call
sub
jne
stos
rolb
leave
or
pop
sub
cmp
or
fimull
outsl
mov
cmp
xor
add
sbb
push
mov
data16
dec
mov
cmp
add
sbb
or
cmc
rcrb
outsb
lahf
insl
lcall
xlat
testl
leave
sub
arpl
loope
mov
out
addr16
stos
dec
mov
xchg
cli
insb
jne
mov
pop
pop
iret
xchg
add
loopne
jge
xor
dec
adc
sub
cmp
lock
into
gs
xchg
fs
jo
icebp
test
in
rolb
sbb
test
dec
stos
fidivrl
pop
repnz
js
xor
inc
or
ds
cli
repz
inc
jmp
pusha
jnp
xor
shrl
xor
pop
rclb
jecxz
lods
sub
or
xor
daa
faddl
push
lods
lea
push
pop
cwtl
out
sahf
fisttpll
lret
outsb
adc
shlb
xchg
lret
mov
jb
push
jns
inc
sbb
jbe
sub
adc
stos
xchg
dec
iret
pop
popa
sub
icebp
cmp
cwtl
sub
add
stc
and
pusha
cmp
sbb
out
ret
xchg
sbb
sub
lcall
mov
ds
jp
es
pop
je
or
cli
and
cs
std
sahf
iret
mov
gs
jo
inc
stos
movsb
mov
pushf
out
aaa
jae
xor
adc
pop
and
addl
cmp
xorl
inc
mov
mov
cmp
inc
mov
loop
or
jne,pn
in
lcall
sub
test
iret
dec
les
and
imul
xchg
icebp
jmp
shlb
xchg
or
xchg
mov
std
push
loopne
jp
stos
adc
xchg
or
insb
hlt
out
scas
popf
imul
lds
sbb
mov
add
sub
push
or
xchg
or
ret
sbb
and
and
mov
push
mov
push
dec
lcall
xchg
mov
jle
cmp
aam
mov
add
cs
jp
pop
arpl
lea
xchg
push
sti
test
lret
mov
xor
mov
rclb
mov
fdivs
inc
dec
mov
adc
dec
sbb
aad
lods
stos
adc
push
aam
pop
ljmp
aad
push
push
repz
js
cltd
cmc
adc
lods
xchg
cmp
or
rcll
shrl
sarb
lret
cmp
dec
cmp
push
mov
imul
es
movsb
or
shl
lret
push
mov
je
stos
sar
sarb
lahf
sbb
loop
scas
fwait
inc
mov
and
out
lret
popf
xor
lahf
inc
dec
pop
daa
arpl
popf
xlat
pop
dec
cli
ja
jl
insl
fldt
fmuls
or
shll
movsl
sub
jnp
inc
mov
sbb
dec
xor
in
mov
lret
test
or
data16
sar
sbb
arpl
cmpsl
out
sarl
pushf
popa
aaa
or
inc
adc
jle
sub
xlat
insl
jb
loopne
or
and
pop
scas
inc
pop
xor
rcrl
inc
imul
shl
rolb
mov
mov
push
leave
dec
mov
nop
divl
fnstenv
aam
mov
jp
adc
loope
push
mov
xor
into
outsb
xchg
pop
fwait
dec
fsubp
pop
call
pcmpeqd
sbb
fwait
mov
push
xor
je
icebp
cmp
rcll
xchg
add
and
pushf
loop
cmc
push
cmc
out
push
sbb
fisttps
loop
hlt
loopne
sub
cld
add
mov
mov
and
or
lea
inc
hlt
jns
ficoms
inc
adc
add
fmull
pop
shlb
sub
xor
push
aas
pusha
std
call
cmpsb
and
adc
stos
mov
push
loop
in
pop
sbb
xor
stos
jmp
movsl
add
mov
inc
mov
stos
mov
and
pop
pushf
xchg
orl
adc
stos
icebp
out
add
aad
aad
add
mov
jne
xchg
mov
pop
gs
adc
and
in
notb
xor
dec
sbb
xchg
into
dec
sahf
add
imul
pop
int
inc
in
pop
inc
fldt
sbb
sub
test
pop
lock
mov
scas
pop
bound
adc
xchg
aaa
jb
pop
add
loop
pop
repz
xor
xchg
push
jbe
jns
outsb
mov
mov
lods
jns
cwtd
sub
xchg
out
sbb
lret
daa
insl
out
cmp
cmp
std
mov
cmpsl
mov
sub
xor
je
jmp
mov
lret
push
dec
push
test
mull
mov
pop
js
arpl
dec
hlt
je
fmull
popf
inc
lods
sbb
jmp
jbe
stc
inc
dec
cs
jp
or
arpl
push
add
mov
into
cmpl
cs
test
idivl
dec
and
push
push
leave
sti
xchg
xchg
and
mov
pop
into
jbe
lcall
push
mov
inc
out
test
mov
push
xchg
sub
jbe
ret
add
ficomps
cld
aaa
rcrl
sbb
mov
mul
data16
lcall
enter
pop
movsb
pop
stos
outsb
jecxz
ffreep
test
ss
pop
loope
cmc
jecxz
imul
lods
loop
andl
fwait
lods
push
shl
push
jns
idivl
mov
test
cmp
xor
cmc
aad
pushf
fcmovnu
out
push
inc
imul
cmp
ljmp
frstor
dec
imul
xchg
push
sahf
lea
enter
pop
call
dec
aam
fs
vdivss
pop
xchg
cld
in
push
add
test
and
into
mov
xor
adc
adc
rcl
lods
test
sar
mov
arpl
imul
push
cli
ljmp
push
xchg
xlat
sti
hlt
dec
push
scas
adc
mov
dec
lcall
lock
test
xor
push
repnz
dec
mov
fbstp
pop
mov
sbb
movsl
sbb
add
push
pushf
fisubrl
lret
inc
outsb
jle
rcrl
push
mov
push
dec
cs
xorl
add
adc
call
mov
outsb
in
aam
addr16
xchg
adc
or
mov
jmp
jb
dec
pop
pushf
pop
add
sub
out
out
lret
mov
push
test
pop
jge
loop
sbb
insb
aam
add
inc
pop
sbb
aaa
xor
dec
adcb
sbb
stos
jp
insb
mov
and
fnstsw
sahf
sahf
or
ds
fnstcw
pop
fists
mov
dec
jnp
arpl
lock
rcr
push
jne
mov
inc
cltd
cmp
hlt
movsl
aas
nop
jle
pop
jne
or
mov
stc
shll
cld
ja
jle
and
pop
scas
dec
jl
push
mov
rcll
pop
maskmovq
divl
int3
or
popa
push
cld
xchg
ret
sbb
lret
mov
xchg
cmp
imul
iret
sbbb
lret
pop
cli
adc
pop
cmp
sbb
jae
pop
cltd
dec
dec
loop
into
jmp
jg
ds
popa
mov
mov
or
jmp
clc
es
or
pop
add
inc
movsbl
mov
test
stos
fnstsw
xchg
sbb
aam
ret
dec
mov
jp
adc
push
push
jmp
jbe
push
clc
les
mov
lods
xor
lahf
les
mov
jg
fdivr
push
mov
std
xor
cwtl
mov
inc
cmc
dec
aam
test
cmc
lds
mov
iret
loopne
xchg
insb
mov
imul
sahf
jbe
lods
idivl
cmp
xor
cmp
push
cmp
jmp
es
xchg
or
mov
lods
aas
mov
in
inc
loopne
push
into
subb
cmpps
push
loope
pop
push
aas
aaa
dec
out
adc
dec
jb
test
fidivs
and
adc
jp
jo
dec
xor
imul
pusha
jnp
aaa
inc
jns
adc
pop
lahf
imul
repz
push
notl
ret
fwait
cmp
test
jge
mov
push
or
sub
dec
ret
dec
dec
addr16
fildl
aad
mov
mov
mov
adcb
out
nop
jne
gs
xchg
xchg
aad
inc
mov
ret
adcb
jge
cmp
mov
fnstcw
mov
inc
xchg
sbb
and
mov
js
repnz
add
sti
jno
pop
fs
ret
movsl
popf
lahf
cmp
pop
push
fbstp
cltd
xor
adc
xchg
es
cmp
in
mov
nop
jae
fdivr
mov
xchg
mov
mov
je
rolb
scas
lret
cmpsl
and
cmpsb
inc
sahf
frstor
adc
xor
dec
loopne
idiv
push
imul
lods
jne
out
inc
loop
fcmove
inc
jmp
lret
push
push
idivl
es
repnz
hlt
rcrb
push
sti
mov
lahf
xchg
inc
mov
and
xor
mov
gs
ds
mov
jb
das
mov
adc
movsb
int
dec
ret
mov
adc
scas
fcmovb
jmp
clc
mov
mov
fsub
xor
dec
scas
ret
pop
out
push
xor
movsb
dec
xor
pop
imul
fwait
js
fisubs
adc
aad
mov
push
movsl
repnz
fcoml
or
xor
add
pop
mov
jl
shl
andb
pop
ja
idivl
cmp
adc
mov
inc
add
loop
push
popf
fs
mov
movsb
dec
jnp
adc
test
adc
scas
mov
aad
lock
clc
subl
in
push
and
push
cltd
xor
leave
daa
add
pop
sbb
pop
minps
filds
jno
xchg
scas
mov
mov
je
mov
push
nop
or
ret
jns
mov
decb
push
mov
jl
dec
inc
mov
in
jl
and
movsb
ja
adc
movl
enter
sahf
ss
outsl
in
int3
fisttpll
in
xchg
nop
movsb
int
ja
and
xchg
push
push
test
subb
or
and
pop
sub
lods
mov
pop
sbb
fidivl
cmpl
cmc
data16
and
test
fdivrs
xlat
jge
imul
pushf
inc
pop
movb
fiaddl
add
inc
int
dec
bnd
jecxz
roll
jle
cmp
add
sub
xor
mov
nop
stos
pop
mov
or
mov
lret
scas
or
pop
lods
xorb
loop
loopne
mov
mov
fisubrs
repz
cmpsb
xor
out
mov
aas
out
cmp
mov
nop
fldt
dec
cmc
xchg
xchg
lods
ret
negl
bound
mov
xor
dec
aad
push
sbb
adc
mov
jp
xchg
stc
cmp
out
es
dec
into
data16
jge
data16
std
inc
pop
pop
leave
sub
add
mov
or
push
pushf
xor
dec
shrb
sub
pop
not
xor
pusha
shl
inc
daa
fsts
or
jg
lret
sbb
test
std
ss
or
pusha
sub
dec
repz
insb
jno
push
adc
fsubrp
enter
and
lcall
jl
in
das
xchg
lock
or
sbb
jbe
mov
dec
cmp
mov
xchg
sbb
xor
pop
push
pop
cmc
dec
ss
cli
jne
shlb
push
ret
fcmovnbe
xchg
shlb
je
lret
sub
movsb
inc
orl
loopne
xchg
repz
dec
repz
jns
stc
jbe
loope
stc
mov
out
cmp
out
mov
or
xor
jmp
xchg
imul
xlat
aaa
add
cltd
dec
movl
inc
js
and
cli
rcrl
adc
testb
dec
adc
ficompl
xchg
push
mov
push
rolb
dec
jmp
loop
inc
dec
sti
mov
repnz
outsb
daa
add
or
ja
sbb
adc
movhps
mov
int
dec
testb
repnz
jne
mov
in
insl
lods
aaa
push
movsb
pusha
in
pop
mov
les
shrl
jo
int3
and
dec
cmpsl
sbb
jmp
xchg
lretw
or
push
add
sbb
sub
push
and
xchg
mov
dec
cltd
lret
in
and
hlt
test
adc
jl
es
adc
push
fistpll
dec
cli
fsubrp
inc
insl
sub
push
push
push
imul
insb
dec
xchg
xor
jl
in
jle
inc
test
lret
dec
push
or
shlb
add
in
mov
inc
cmp
push
xchg
sub
movsb
int
jle
fldcw
pop
lea
mov
ljmp
stos
sbb
popa
rorl
jmp
stos
sub
cs
pop
in
dec
cltd
add
cld
lcall
stc
dec
int
mov
push
fiaddl
iret
lods
and
ret
dec
inc
sub
sub
sub
inc
mov
mov
andl
xadd
cmp
pop
clc
arpl
cmc
test
stos
enter
xchg
loopne
cmp
jmp
xchg
pop
mov
mulb
sbb
jo
test
mov
test
mov
adc
icebp
lea
popf
fsubl
pop
and
push
je
mov
jg
ret
repz
mov
add
jne
push
inc
cmpsl
cmpsl
xor
xor
gs
clc
sbb
int3
and
out
push
push
aas
test
mov
jns
push
adc
incl
pop
sysret
dec
cmpsl
adc
mov
lahf
inc
fldl
test
mul
loope
mov
fsubr
aad
or
push
sbbl
xor
fldt
pusha
inc
lods
mov
sbb
fwait
sbb
rcll
fistl
stc
and
bound
in
xor
pop
pop
pop
mov
inc
adc
cmp
rcrl
mov
inc
xchg
imul
rclb
mov
sbb
jne
sub
outsb
mov
addr16
xchg
insb
aam
sub
stos
jae
mov
jno
aas
out
push
outsl
and
aad
out
mov
add
shll
sarl
mov
jp
inc
inc
iret
sbb
and
and
xor
sbbl
dec
xor
mov
loop
shll
inc
jno
shl
xor
add
dec
fs
and
xor
lods
stos
and
and
lock
add
in
in
mov
inc
in
pop
sbb
lods
je
fisttps
mov
mov
lret
and
subl
nop
mov
sub
push
shl
jb
mov
mov
outsb
out
test
mov
or
repz
loope
push
arpl
mov
aad
lret
outsl
cmp
xor
sarb
pusha
pop
fwait
sub
add
xchg
faddl
xor
jg
cmp
sar
and
out
hlt
inc
test
push
jge
mov
pop
push
dec
or
dec
ret
xor
sub
inc
filds
imul
mov
jle
ret
pushf
inc
movsb
stos
inc
adc
ret
xchg
outsb
pop
inc
cmp
sti
mov
test
jae
adc
xchg
das
es
frstor
pop
dec
roll
dec
movsl
and
cmp
rclb
fwait
and
ds
fcmovbe
push
mov
cwtl
cmp
ljmp
in
pop
and
pop
nop
inc
nop
fsts
jae
leave
fstpt
add
sbb
fistl
pop
movb
adc
xor
imulb
sbb
lock
mov
mov
maskmovq
imull
push
js
dec
cmp
sbb
push
in
or
shll
dec
mov
mov
in
stos
push
sbb
frstor
push
jns
popf
mov
sarl
dec
jns
inc
les
pop
outsb
sub
push
rcrl
test
bound
sbb
mov
add
addb
incl
cld
inc
xor
add
xchg
arpl
shr
lods
test
outsb
clc
and
enter
xchg
lcall
push
out
js
or
dec
in
aam
rcll
in
push
int
sub
das
cmpsb
fdiv
and
mov
dec
xorl
arpl
sahf
lret
push
lret
fstpl
mov
fistpll
cmp
jmp
jge
xchg
dec
adc
pop
dec
test
aad
mov
mov
outsb
les
sbb
ss
mov
sub
imul
imul
add
xor
mov
int3
mov
scas
mov
jl
push
mov
sbb
jb
in
dec
pop
and
or
fldenv
add
mov
dec
pop
stc
mov
imul
insl
push
test
out
test
and
adc
fbstp
addr16
add
in
in
pop
or
dec
jmp
faddl
popf
test
ja
enter
push
mov
jns
loop
cmp
xor
xchg
test
nop
lods
sti
adc
dec
jno
roll
test
pop
hlt
nop
and
push
addl
jbe
inc
jl
shlb
scas
lods
pop
sub
pop
dec
pop
mov
xor
movsb
addr16
in
xbegin
sub
repz
popw
dec
jecxz
add
sbb
cwtl
into
or
sbb
ss
dec
stc
jae
add
daa
adc
ds
sahf
inc
mov
pop
xor
and
push
inc
push
xchg
mov
cmp
dec
inc
sbb
lea
sahf
mov
mov
lcall
or
bound
or
adc
ljmp
or
in
push
cld
inc
pusha
pop
outsl
or
shrl
std
loope
cli
loopne
cld
and
psubsw
roll
ss
test
jge
jge
dec
or
cmp
aam
filds
jnp
fists
pushf
jne
pop
xor
jb
imul
lret
mov
mov
pop
and
fsubp
or
lret
sub
dec
jge
fistpll
cmp
sub
add
sahf
repz
jge
and
xchg
loope
xchg
arpl
scas
gs
mov
fbld
aad
test
mov
push
or
inc
mov
pop
push
lock
cmp
mov
scas
ret
loopne
sbb
jo
xor
negb
movsl
cmpsl
test
sar
push
addr16
out
out
scas
movsb
push
or
bound
cmp
dec
stc
into
adc
jp
mov
fistl
adc
fistpl
mov
or
pop
clc
mov
aam
pushf
into
and
aad
adc
data16
insb
shrb
or
pusha
movl
dec
imul
add
add
sti
insl
test
shlb
adc
mov
mov
popf
sbb
adc
icebp
cmpb
js
sub
push
and
xchg
pop
andb
je
mov
ret
xor
gs
xchg
mov
push
sbb
test
mov
pusha
cs
mov
dec
inc
test
jecxz
popf
scas
int3
repnz
leave
scas
push
jnp
es
loopne
sbb
stc
dec
jl
bound
jo
inc
or
pop
cmp
sbb
jbe
js
sti
fstpt
mov
inc
pop
cli
pop
imul
adc
out
lods
cmp
pop
iret
jae
or
jnp
jge
pop
xchg
mov
repz
cs
fistl
lods
in
pop
js
push
shrl
mov
popa
push
lcall
roll
xor
pop
pop
jl
scas
repz
push
or
mov
add
hlt
std
jb
imul
mov
cmc
mov
mov
lods
pop
sub
fisttps
mov
imul
push
xchg
imul
into
ss
xchg
mov
mov
ja
mov
adc
insl
out
gs
mov
out
pop
in
push
push
pop
sarl
xchg
sub
out
mov
arpl
jae
cld
fstp
mov
inc
pushf
sub
rorl
leave
pop
and
adc
popf
test
lock
cmpsl
cmp
cld
lahf
push
cmp
lods
xor
mov
sub
repnz
pop
push
sbb
stc
and
scas
aaa
fcoml
mov
lret
imul
pop
dec
test
test
or
add
in
iret
loop
fdivl
ljmp
jge
and
sahf
pop
pop
fildll
fsubp
cli
stc
hlt
pop
push
and
adc
adc
pop
pop
xchg
dec
jge
and
std
xchg
fwait
enter
aad
cwtl
mov
dec
popa
lahf
mov
sub
jne
dec
pop
inc
pop
push
cmp
ljmp
mov
test
mov
in
push
mov
xchg
or
dec
add
sbb
xchg
lods
out
jp
scas
dec
aaa
stos
je
cwtl
fcom
sub
and
fisttpl
xor
cwtl
jmp
mov
sub
push
cmp
mov
loopne
xor
pop
push
out
add
push
scas
aad
sarb
sarl
add
stos
cmp
pop
data16
sub
jb
roll
pop
cmp
in
mov
mov
rclb
popa
push
xchg
cmp
divl
repnz
out
jl
mov
xlat
mov
pop
cmp
adc
push
mov
adc
nop
adc
inc
bound
add
int3
lret
inc
cwtl
dec
inc
jge
out
pop
std
orl
fisubrl
ficomps
push
stos
cltd
pop
jbe
sub
or
sub
js
adc
rcrl
mov
push
daa
push
dec
jbe
jnp,pt
mov
lahf
push
push
popf
add
outsl
xor
push
sbb
pop
xorb
mov
pop
pop
xchg
pop
pushf
aam
inc
jb
mov
push
out
mov
jns
sub
insl
cmpsl
inc
push
jecxz
nop
insl
out
push
xor
les
lea
cltd
and
and
or
pop
js
jg
add
mov
int3
push
mov
mov
dec
das
jb
shlb
insl
mov
int3
scas
xor
xor
lret
xchg
jl
in
cmp
xchg
and
inc
jae
sbbb
mov
js
cmc
pop
arpl
sbb
jg
dec
xchg
adcl
mov
push
inc
mov
and
sub
aad
or
cmpsl
pop
fwait
movb
sbb
mov
inc
lods
and
gs
jmp
push
sbb
mov
out
mov
movsl
out
mov
pop
push
dec
xchg
sahf
adc
mov
imul
js
lret
insl
sti
push
lea
iret
out
iret
mov
jae
cmp
and
inc
out
or
sub
add
dec
mov
and
mov
mov
insb
lret
mov
sub
dec
addr16
xorl
repz
in
mov
pop
leave
jnp
mov
mov
pop
sub
insb
inc
inc
into
adc
call
pusha
push
movsl
outsl
dec
lcall
les
add
sahf
arpl
mov
pop
adc
lods
adc
shll
push
push
add
pop
jo
out
fnstsw
jno
mov
mov
mov
mov
divl
inc
jl
sub
loopne
xor
mov
jecxz
or
mov
pop
mov
lds
mov
xchg
aam
mov
divl
aaa
fnstcw
jno
dec
jns
mov
mov
sub
shrb
jns
dec
popa
loop
aam
sbb
cld
mov
sbb
jae
pop
out
mov
push
imul
sbb
jb
test
and
pop
pushf
push
or
sbb
push
xchg
gs
gs
add
ja
cmp
push
add
cmp
clc
loop
inc
repz
dec
sub
jl
cmc
mov
adc
xor
lret
movsl
mov
inc
cs
shll
int3
movsl
push
scas
cld
int
cmc
rclb
inc
mov
insl
aas
mov
or
inc
add
cmp
push
call
ret
or
xchg
inc
imul
imul
pop
into
mov
loope
add
or
movsl
adc
mov
jbe
repz
fmul
add
lods
paddusw
pop
sahf
mov
inc
xchg
dec
outsb
mov
stos
push
jne
test
xor
int
xchg
or
mov
inc
pop
jmp
pop
adc
push
mov
dec
fildll
jp
lods
aam
andb
pop
addl
xchg
push
dec
movsb
std
jbe
push
xorb
mov
fldl
adc
leave
fiadds
cmpsl
xchg
cmp
mov
mov
in
sbb
push
mov
aas
sub
and
dec
nop
push
enter
inc
in
push
test
rcrb
xchg
icebp
fcmovnb
adc
pop
negl
push
pushf
add
fnsave
dec
rcrb
sbb
in
dec
fisubl
mov
mov
test
clc
js
out
cmp
jp
shll
loope
shlb
sbb
lds
je
cmpsb
shrl
pop
mov
mov
mov
lret
xor
pop
dec
lahf
adc
mov
repnz
xor
insl
cmp
inc
pop
mov
inc
mov
sbb
es
into
pop
inc
ficoms
jne
sub
inc
js
push
push
mov
add
adc
lods
stc
xor
mov
movsl
repz
cmp
inc
inc
mov
xchg
fsubrs
fimull
rclb
jp
ret
ret
and
call
idivl
sahf
mov
les
shl
jge
fs
or
xchg
mov
inc
mov
sbbb
mov
mov
mov
push
fwait
pushf
out
cmp
nop
push
cmp
popa
dec
or
lea
mov
pop
mov
pop
push
lea
mov
sbb
movsb
es
loop
int
mov
fisubrl
dec
inc
iret
jge
cld
inc
test
enter
mov
jbe
mov
outsb
pop
popa
cltd
into
add
jnp
stc
adc
adc
jmp
test
scas
.byte
