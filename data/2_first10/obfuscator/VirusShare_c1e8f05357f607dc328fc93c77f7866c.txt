out
xchg
in
push
adc
ficomps
je
imul
cmpsl
das
dec
mov
movsb
xor
xor
ljmp
and
dec
pop
adc
stos
xor
jno
jmp
sbb
jbe
in
adc
je
mov
ljmp
xor
mov
jg
ljmp
and
jmp
ficomps
pop
dec
repz
cli
mov
notl
jge
inc
loope
mov
and
mov
xchg
jns
inc
rcll
push
mov
loope
scas
cmpb
jb
lods
clc
mov
rorb
nop/reserved
loope
scas
mov
scas
test
sbb
stos
shll
cmp
mov
xor
movsl
call
mov
stc
mov
mov
push
mov
cmc
and
sub
cld
test
pushf
inc
adc
addr16
scas
sub
push
fdivp
movsl
scas
adc
lds
int
mov
ss
add
mov
jl
mov
dec
jg
mov
and
push
mov
cltd
cltd
xchg
pop
mov
inc
and
int3
push
out
fwait
in
cmp
in
or
jge
push
mov
mov
mov
sbb
mov
ficoms
out
call
cmp
jge
daa
mov
dec
mov
sub
add
or
push
cs
xchg
sbb
orb
dec
ret
dec
jg
mov
pop
jl
mov
xchg
movsl
aas
icebp
xor
cs
shll
mov
cltd
push
cs
mov
inc
and
scas
pop
add
mov
push
sub
aam
pop
mov
outsb
cmpsb
jecxz
imul
dec
mov
mov
fistl
cld
pushf
repz
lret
xor
in
test
fxch
cmp
add
cltd
movhps
adc
mov
adc
addb
mov
test
pop
adc
push
das
in
call
test
out
movsb
jecxz
rorb
and
and
fstps
shrl
sub
ja
dec
jnp
cmpb
hlt
stos
daa
arpl
add
sbb
test
push
sbb
fcomps
cmp
inc
cmp
cmp
dec
mov
jne
repnz
cmpsl
dec
fs
into
idiv
out
jecxz
jp
cmc
mov
inc
mov
dec
in
dec
dec
xchg
inc
inc
or
or
sbb
ds
jb
mov
out
and
popf
pop
mov
adc
mov
xor
imul
pop
cmp
sub
in
jp
ljmp
orps
fisubrl
mov
jae
shll
mov
mov
adc
mov
push
fstpl
or
sub
nop
scas
testb
mov
js
xor
jmp
push
pop
mov
movsb
test
loopne
add
sub
das
mov
movl
fisubrs
mov
ss
pop
in
cltd
pop
add
cmp
in
or
mov
out
mov
loope
stos
push
or
icebp
jo
adc
in
xchg
sub
js
sub
in
mov
mov
pusha
into
lods
insb
out
imul
loopne
insb
jg
testb
hlt
pop
int
xchg
lds
add
xchg
push
adc
jl
lret
jo
xchg
adc
cmp
dec
aas
pop
pop
xchg
cmp
xchg
xchg
cmpsl
mov
scas
sub
call
nop
mov
cli
testl
cmpsl
scas
inc
nop
out
test
in
jnp
ja
add
mov
jbe
inc
aad
icebp
repnz
xor
xchg
add
imul
mov
ss
fimull
pop
push
outsl
orl
add
insb
sbb
xchg
out
out
jmp
jnp
pop
mov
sub
in
shll
call
or
xor
clc
stos
mov
jcxz
fists
ficompl
lods
gs
mov
dec
stos
or
sti
dec
ret
jb
sti
lret
sub
mov
sbb
stos
and
sti
adc
dec
int
mov
push
xchg
outsb
fisubrs
sbb
dec
scas
cmp
push
push
pop
inc
sub
loopne
cmp
sbb
cmovnp
xchg
cmc
lahf
aam
leave
rolb
lret
inc
movsl
sub
mov
jno
sbb
pop
bound
inc
mov
dec
sub
mov
cmc
mov
and
out
jae
ret
mov
frstor
out
dec
pop
fisttps
xchg
and
jecxz
aad
xor
cmp
adc
in
mov
inc
sar
test
pop
loope
pop
test
arpl
loopne
sbb
xchg
sub
lock
cmpl
jne
in
in
mov
pop
fnstenv
subb
push
inc
cs
mov
aad
std
jb
inc
jp
inc
mov
mov
pop
call
xchg
popl
popf
pop
into
sahf
hlt
dec
loopne
cmc
mov
dec
adc
lret
xor
sbb
loope
xchg
loope
sbb
sub
shrl
mov
ljmp
stos
bound
imul
lds
gs
adc
and
subb
and
loope
mov
pop
mov
xor
push
shrb
das
aaa
lea
in
mov
lds
mov
mov
inc
stos
sbb
pop
enter
xchg
mov
test
popf
mov
push
mov
shlb
cs
repnz
push
cmp
mov
cmc
inc
mov
leave
push
sub
inc
cmp
gs
mov
push
out
popf
mov
pop
jp
jo
imul
dec
mov
push
push
fsubl
mov
jb
jo
nop
inc
jp
jl
aad
icebp
jmp
xor
xor
mov
cmp
xor
xchg
push
cwtl
xchg
dec
or
pop
je
sbb
imulb
loopne
jge
adc
int3
lea
int
sbb
mov
lret
pop
pop
test
pop
dec
mov
mov
mov
lock
mov
xchg
mov
pop
xchg
and
pop
test
mov
int
adc
and
shrb
push
repz
pop
jbe
lahf
mov
gs
inc
out
xor
push
fildl
push
repz
ljmp
pop
and
and
loopne
inc
and
filds
ret
and
bsf
mov
sahf
add
or
lock
lret
push
int
jne
xor
mov
outsl
andl
cmp
aaa
insb
dec
xchg
xchg
xchg
ds
jl
push
hlt
das
scas
cmp
adc
cld
push
xor
mov
xor
imul
mov
jnp,pt
je
mov
outsl
mov
ret
mov
popa
incb
push
sbb
sub
cmp
cmp
mov
sub
xor
gs
mov
mov
pop
lcall
mov
push
mov
pop
out
ret
bound
xor
jecxz
fsubrs
ss
stc
icebp
dec
or
fs
push
loop
in
pop
push
es
cmp
fwait
push
cmp
jp
loope
inc
dec
and
fmul
cmp
and
mov
stc
cmp
cmc
lret
cmc
mov
test
lock
push
xchg
pop
inc
stos
movsl
lock
addb
pop
cmp
mov
sub
mov
cld
lds
cwtl
cmp
sub
cmp
push
imul
cmc
inc
js
lcall
inc
mov
scas
mov
mov
dec
and
cs
test
xchg
lods
jle
dec
jg
or
leave
xorb
das
adc
std
inc
inc
xchg
sbb
test
jmp
push
lock
addr16
and
lods
pop
aam
mov
and
in
sbb
cmp
jnp
inc
enter
leave
rol
sbb
or
xchg
push
pop
jnp
push
add
pop
or
clc
mov
xchg
push
movzbl
push
sub
pop
push
xor
pop
ror
test
stc
loop
pop
cmc
push
push
jp
test
pop
pop
rol
test
stc
lea
call
nop
push
push
pop
pop
cld
cmc
nop
mov
add
sub
js
jae
shl
cmc
and
cmc
cld
push
add
push
pop
pop
jmp
push
xchg
nop
inc
ret
or
es
leave
cwtl
aaa
loop
mov
pop
cli
pop
sbb
sbb
cmc
cs
adc
dec
fmul
mov
cmpsl
testb
xor
push
shl
pop
cmp
clc
shl
cld
push
add
pop
jge
xor
or
jle
push
jp
ror
pop
mov
jmp
mov
aam
test
hlt
inc
nop
mov
dec
adc
outsl
loope
rcll
aas
sub
mov
dec
adc
jns
cli
xchg
test
out
aad
push
repnz
sti
nop
push
pop
and
cmp
jne
jmp
push
call
stos
fsubs
fdivr
cmp
or
lock
and
sahf
test
xchg
mov
adc
pop
push
call
jg
cmp
sbb
inc
sarb
push
sbb
inc
mov
adc
sbb
cmp
dec
sub
xor
jno
sahf
test
mov
fs
jmp
inc
lahf
pop
ss
lcall
ss
push
ret
pop
enter
mov
sub
add
lret
xor
loop
jecxz
mov
push
or
push
dec
loop
das
pop
pop
mov
test
cmp
das
mov
scas
inc
enter
sub
lea
out
sahf
xor
cmp
sub
inc
push
mov
pop
cld
push
stc
pop
or
jp
push
push
push
inc
pop
pop
pop
clc
js
push
and
pop
add
push
xchg
pop
push
pop
xchg
pop
loop
jecxz
cwtl
in
pop
xor
xchg
test
pop
xchg
xor
xchg
inc
rol
loop
jecxz
fucom
pop
js
mov
adc
mov
into
adc
iret
cld
inc
push
add
pop
or
cmc
cmc
add
jb
cmp
push
jg
jo
rol
pop
js
shr
xchg
push
jg
jnp
add
pop
push
jg
sub
pop
push
dec
inc
pop
dec
inc
dec
jne
cmp
jnp
push
push
pop
pop
cmc
jl
sub
push
add
nop
push
call
ror
add
mov
pop
adc
cmp
dec
fwait
mov
test
cbtw
aas
jb
mov
iret
std
nop
movsb
fstp
and
js
mov
fnstcw
in
arpl
outsl
cmp
dec
adc
cli
lock
ficompl
divb
jge
add
loopne
test
or
xchg
les
mov
jg,pn
push
jp
mov
sbb
cmp
sbb
pop
out
ja
lret
jecxz
jno
decb
mov
daa
movsl
test
dec
cmpsb
int
jne
dec
cs
lods
jb
lea
mov
popf
jb
imul
xor
test
pop
xor
je
jmp
or
loopne
imul
jnp
cmpsb
sub
mov
mov
pop
push
mov
dec
ror
test
fbstp
lahf
outsb
cmp
push
repz
sbb
jg
test
jg
movsl
sub
pusha
inc
mov
insb
pop
jnp
mov
cmp
xchg
outsl
or
enter
and
xchg
mov
data16
cmpsb
ficompl
adc
or
jmp
das
jno
xlat
xchg
ss
xchg
mov
orl
pusha
or
int3
xchg
dec
push
les
push
xchg
fnstsw
jno
cmc
aad
shr
cmp
fistl
dec
mov
push
push
xchg
push
sub
int
xor
adc
adc
xchg
xor
mov
shl
rcrb
push
dec
dec
and
and
push
scas
std
push
push
movsl
movsl
imul
fists
push
call
xchg
adc
or
adc
in
push
or
and
cmp
push
adc
xor
sarl
xor
push
test
mov
sbb
or
mov
inc
sbb
mov
std
pop
sbb
insb
lea
addr16
xchg
sub
xchg
pop
mov
into
out
mov
popa
icebp
xor
ret
and
mov
sub
and
pop
jge
cmp
lret
adc
inc
push
pop
or
movsb
jno
xchg
in
add
sbb
lods
int
out
adc
movsb
push
cmpsl
aaa
je
lret
cmp
inc
pop
das
push
mov
jg
dec
add
add
call
test
sahf
push
repnz
fnstenv
data16
mov
sbb
add
and
xor
jmp
in
lea
jge
inc
xchg
push
inc
sbb
mov
push
mov
add
inc
mov
out
mov
mov
and
les
add
stos
pop
cmp
sub
test
push
or
stc
jnp
cmpb
out
scas
adc
cmp
fdiv
fidivs
pop
cwtl
push
lahf
in
je
mov
rclb
iret
mov
test
icebp
xor
mov
ds
fdivrs
mov
dec
arpl
adc
cs
jmp
das
or
aas
mov
add
aad
shll
sub
imul
pop
mov
or
cld
in
out
mov
lods
xchg
add
fwait
adc
rorb
dec
push
stc
scas
cmpsb
jae
mov
loopne
or
push
inc
ret
into
fistps
cmp
mov
ds
lds
out
sbb
cmpsl
dec
or
adc
and
leave
and
sub
add
inc
mov
stc
cld
test
push
dec
inc
xor
mov
cmp
push
inc
aam
adc
sbb
addr16
es
test
outsb
orl
cmc
loope
jecxz
push
mov
mov
jecxz
xor
xor
aad
xchg
push
out
dec
adc
sti
arpl
aaa
add
leavew
pop
imul
test
push
pop
mov
cmp
xor
xchg
add
mov
fimull
loopne
mov
notb
xchg
xor
dec
sbb
jb
dec
ja
add
imul
imul
scas
fwait
sub
bound
imul
mov
lret
aam
adc
fstpt
cltd
cld
pop
mov
enter
xor
test
xchg
mov
pop
repz
fwait
mov
es
popa
stc
hlt
and
in
jge
xor
sub
jbe
and
loopne
mov
inc
xlat
xor
js
cmp
xchg
outsb
inc
and
cs
and
dec
xchg
and
jge
jmp
push
nop
lret
ss
insl
push
xchg
push
adc
sub
ljmp
hlt
pop
outsl
dec
cvtpi2ps
xchg
sub
push
jns
mov
cltd
adc
sub
mov
fwait
sarl
mov
aam
mov
cs
shll
shlb
imul
fstpl
pop
inc
aas
pop
pushw
xchg
das
out
mov
xchg
push
dec
ss
mov
sbb
pop
mov
sub
rcll
ljmp
mov
popf
cld
sti
cmp
sahf
stos
imul
sub
xor
lahf
lret
fildll
imul
sbb
cmp
inc
enter
outsb
push
maskmovq
negl
aad
in
cmp
in
xchg
sbb
adc
sbb
push
aam
pop
jmp
enter
es
loop
ss
aam
jp
sarb
xchg
mov
out
dec
jb
shlb
add
dec
lret
mov
lcall
xchg
mov
mov
sbbl
mov
cmp
ja
movsl
mov
loop
xor
jne
inc
leave
ret
idivl
pop
arpl
xorl
cmpsl
lret
lcall
mov
out
rcr
inc
mov
adc
lods
hlt
push
fidivl
or
push
or
mov
adc
loope
out
xchg
rolb
jg
cmp
subl
mov
jne
repnz
adc
push
cmp
test
and
add
cmp
insb
arpl
push
insb
adc
scas
inc
sub
jecxz
mov
into
mov
aad
xchg
mov
mov
xchg
rolb
icebp
inc
into
test
mov
cmpsb
pop
jle
pop
pusha
ret
xor
sbb
sub
hlt
dec
test
lcall
es
mov
fidivs
std
jo
jg
dec
mov
mov
js
xorl
and
pop
sub
or
call
jne
jge
and
in
lock
pop
mov
jecxz
xorl
fstp
aad
in
jg
sbb
xchg
fstps
bound
test
repnz
xor
mov
sub
imul
cmp
pop
push
mov
inc
hlt
mov
mov
scas
inc
mov
je
jae
xchg
xor
jns
push
gs
pop
popf
shll
lret
add
imul
push
test
push
xlat
or
xchg
iret
jo
test
stc
xlat
xchg
mov
cmc
adc
or
adc
sub
orb
aam
pop
mov
inc
andl
cwtl
inc
psubusw
push
into
sar
cmp
sti
push
jecxz
rclb
mov
mov
call
or
push
nop
mov
adc
addr16
jbe
jg
xor
testl
sub
outsb
mov
or
adcb
std
negb
arpl
loopne
xchg
mov
loop
in
fmull
xchg
pop
cmp
sbb
inc
es
das
xchg
sbb
repz
inc
test
sbb
inc
fistl
test
mov
test
cmp
or
inc
adc
xor
aam
mov
cmc
sub
cmp
inc
xorl
out
lahf
sub
lods
sti
in
test
imul
pop
test
test
out
out
mov
fwait
pop
adc
fnstsw
cmp
call
cmp
inc
xchg
imul
dec
rcl
jg
int3
call
arpl
push
jns
dec
cmp
sbb
lea
ret
notb
mov
aaa
inc
push
mov
rorl
dec
cltd
cli
jmp
outsl
mov
jno
mov
jnp
outsb
cli
cmp
mov
in
loope
fdivr
adc
push
lock
cmp
cli
or
sub
hlt
cwtl
mov
push
cmp
mov
js
addl
nop
pop
test
cld
xchg
arpl
ror
cs
and
popf
adc
pop
aaa
ret
push
cmp
sub
pop
or
jg
push
and
inc
idivl
cmpsl
dec
sbb
mov
outsb
shll
sbb
and
aad
lcall
ja
in
in
jno
js
mov
popa
xor
shll
mov
cld
je
jo
bnd
and
rcrb
and
je
mov
leave
mov
xor
sub
and
outsb
dec
and
sub
pop
loopne
adc
cwtl
pop
mov
mov
sbb
sbb
dec
stos
xchg
or
in
aam
mov
sub
dec
enter
fucomip
push
fsubrs
fwait
cmp
mov
jno
pop
sahf
mov
out
push
cmc
add
push
jno
sub
adcl
mov
ja
lcall
cltd
and
push
add
and
mov
js
xor
imul
in
cmpsb
ret
jns
icebp
dec
mov
gs
jne
mov
arpl
ss
jl
sti
sti
sbb
mov
jge
dec
outsl
insl
push
pop
inc
cmp
or
lret
and
popf
orb
imul
fildl
pop
out
dec
sbb
lods
stos
sbb
fdivr
or
inc
hlt
dec
jne
mov
xchg
mov
add
test
pop
xchg
pushf
sqrtps
and
push
in
bound
les
les
mov
or
xchg
lods
mov
push
jecxz
jbe
int
sub
les
mov
testb
and
ljmp
fcompl
pop
addl
inc
add
ret
or
mov
cwtl
dec
mov
arpl
mov
lea
xor
loope
js
sbb
dec
outsb
cmpl
xchg
insl
rcrl
pop
call
in
fdivp
cmpsl
mov
push
shl
pushf
dec
push
stos
cmp
fisttpl
mov
aaa
dec
jo
xor
daa
loope
shlb
jecxz
loopne
bound
ret
jo
icebp
enter
sub
jb
repnz
adc
sbb
add
cmp
pop
sahf
and
ja
out
test
stos
sbb
and
filds
sbb
dec
xchg
es
mov
xlat
xor
daa
stos
dec
xchg
or
jg
adc
insl
dec
sbb
test
adc
dec
mov
das
mov
jnp
inc
stos
and
iret
out
xchg
mov
push
cmpsl
cmp
pop
fidivrs
jae
inc
mov
ret
jb
mov
cmp
add
xchg
aad
scas
and
insl
and
inc
xchg
push
sti
push
in
jge
pop
cmp
decl
shrb
inc
sarb
jns
mov
ljmp
xlat
les
pop
jecxz
lret
test
xchg
and
and
popa
pop
lcall
leave
aas
pushf
and
mov
jnp
and
imul
cmp
imul
pop
in
sub
outsl
jnp
mov
jo
sbb
gs
xchg
mov
jb
push
addr16
loop
jp
cwtl
or
arpl
gs
clc
adc
aas
out
push
mov
enter
jne
adc
mov
xchg
xchg
lods
fsubs
xchg
sbb
repnz
and
je
pop
and
lods
fmull
pop
xor
loop
hlt
sbb
mov
xchg
fbstp
mov
fildl
push
mov
int
cwtl
jb
mov
ret
nop
jp
aam
int3
data16
inc
mov
enter
inc
mov
mov
sahf
es
add
pop
dec
pop
jge
xchg
loope
shlb
pop
imul
mov
aaa
inc
add
hlt
push
and
lret
icebp
inc
inc
adc
popf
push
add
inc
fs
outsl
popa
jle
ret
inc
mov
push
out
dec
outsb
cmp
push
rcr
push
push
je
mov
mov
mov
sbbb
jnp
dec
addr16
stc
jmp
fisttpl
xchg
jb
mov
mov
mov
scas
adc
dec
stc
sub
ds
imul
scas
int3
jae
jae
jnp
push
sub
or
loopne
dec
cwtl
xchg
xor
pop
push
pop
pop
fisubrs
jno
push
in
sbb
xchg
xor
pop
and
cwtl
adc
mov
in
repnz
add
test
sti
pop
aas
ss
or
xchg
adcl
loopne
lret
lds
sub
outsl
es
cli
dec
fwait
jno
lcall
mov
mov
sahf
ret
cmp
add
bound
mov
aaa
pop
dec
leave
jne
sbb
pop
rcr
xchg
add
cmp
lcall
push
push
xchg
in
sub
test
mov
lods
push
andl
fs
fimull
dec
jp
iret
call
push
mov
xor
cmc
mov
mov
push
cmp
xchg
mov
into
lret
jbe
mov
push
sub
push
add
push
push
and
mov
jnp
pop
jbe
into
mov
and
pop
test
testl
ljmp
mov
hlt
dec
push
xchg
hlt
lcall
pop
inc
dec
adc
sub
sbb
lods
dec
inc
mov
cld
xor
xchg
or
sarb
out
cld
aam
or
add
dec
repnz
es
or
push
jp
test
jnp
pop
testl
push
jae
imul
mov
iret
pop
mov
hlt
lret
mov
xor
popl
mov
fisubrs
and
jle
inc
stos
push
mov
push
mov
sbb
in
ss
and
cmpsl
xor
test
add
jo
cmp
cmp
nop
not
aam
mov
out
sub
cld
in
lods
out
popa
mov
cmp
jne
frstor
mov
pop
dec
aas
sbb
cmp
dec
pop
mov
pop
and
pop
mov
inc
xchg
cmpsb
popa
int
xor
xor
inc
mov
jg
into
or
dec
cmc
push
jb
jg
sti
xchg
sbb
fdivl
pushf
scas
add
mov
xorb
in
mov
nop
or
dec
or
leave
filds
adc
dec
clc
andb
and
and
shlb
pop
lock
dec
sub
sbb
xlat
ds
pop
mov
mov
and
jns
lret
lods
jmp
add
jno
xor
mov
mov
neg
xor
sbbl
add
push
xchg
rclb
daa
pop
xchg
shll
xchg
stos
loop
test
ljmp
jbe
cmp
lds
jle
pop
jne
sbb
aaa
cltd
cwtl
cmpsl
mov
mov
pop
int3
xchg
stos
push
xchg
mov
ret
push
adc
loopne
pop
call
push
fwait
rolb
xchg
call
outsl
lcall
xchg
mov
hlt
shrb
dec
xchg
aaa
sbbb
mov
mov
inc
pop
or
sti
xor
shrl
mov
sbb
je
adc
pop
sarb
aaa
rclw
pop
inc
lods
or
sub
xchg
scas
cmpb
xorb
mov
scas
cmpsl
lahf
xor
push
push
fwait
push
addr16
movsl
cli
dec
iret
mov
mov
xorl
adc
test
daa
hlt
cltd
xlat
and
mov
mov
test
mov
inc
inc
insl
pop
mov
push
sbb
in
cmp
push
mov
sahf
jmp
clc
xlat
mov
dec
push
jp
jmp
dec
add
lods
cmpsl
and
jecxz
aas
and
fdivr
inc
adc
notl
sbb
dec
dec
arpl
pop
xor
xchg
mov
popl
dec
push
cltd
cmp
dec
sub
sbb
rorb
mov
jb
push
cmp
pop
push
test
aas
out
push
or
andl
arpl
in
sbb
xchg
dec
push
sbb
sbb
xchg
and
mov
sti
pop
imul
push
or
and
icebp
into
imul
jno
std
inc
cs
fnsave
lods
hlt
insl
and
and
xchg
add
pop
mov
xor
es
clc
mov
bound
in
daa
ret
pop
pop
inc
sbb
dec
stos
adc
jnp
pop
dec
cwtl
adc
enter
xchg
cwtl
aas
pop
push
sbb
add
repz
cs
jns
inc
sbb
xchg
inc
jno
repnz
out
jp
inc
xor
xchg
pop
loopne
dec
xchg
pop
out
cmp
xchg
xchg
jmp
and
cmp
in
inc
jecxz
mov
les
jnp
adc
jb
insb
cmp
inc
fstpt
and
adc
dec
cmp
cmpsb
mov
iret
or
scas
fcompl
xchg
xchg
xor
stos
dec
mov
cmpsb
pop
add
or
les
outsl
loop
or
sar
cmpsb
and
cmp
icebp
mov
ficoms
cli
scas
arpl
cmp
jmp
sbb
push
cmp
mov
pushf
mov
bnd
stos
mov
in
push
fcomp
jo
das
xlat
test
and
adc
je
mov
nop
cmp
js
movsl
leave
repz
adc
adc
test
cwtl
sbb
xor
fsubp
push
xor
orb
loope
aad
push
mov
xchg
imul
pusha
jecxz
dec
loop
jbe
lock
sbb
inc
xchg
pop
lock
movb
movsl
pop
mov
pop
pop
sarb
push
push
fs
cmpsl
stos
pusha
mov
nop
test
mov
cld
cmp
and
adc
mov
cmp
mov
dec
gs
leave
mov
jecxz
jg
mov
fwait
push
push
push
orl
jne
es
mov
xchg
pop
push
test
fildll
sbb
fstl
jg
lretw
jns
ret
int
fs
aas
cmp
xor
faddl
das
add
pop
xor
sbb
mov
cmpsb
aaa
aad
jne
repnz
dec
sahf
add
mov
cmpsb
jge
stos
inc
out
and
mov
aas
pop
test
aam
enter
dec
jle
dec
mov
sbb
pop
loopne
mov
cmp
cltd
push
or
insl
pop
jns
jae
push
je
add
sub
xor
sub
mov
jae
into
in
negb
loopne
icebp
addr16
test
icebp
mov
shr
cmpl
scas
cmp
cmpsb
lock
sbb
pop
test
cs
xchg
jno
lods
or
sub
cmp
mov
jo
push
jne
and
outsl
mov
sbb
mov
xlat
lahf
sbb
orb
std
add
in
jecxz
push
pop
inc
mov
call
xchg
or
mov
mov
cmp
mov
ja
pop
sub
push
aam
or
xchg
mov
lods
jns
add
addr16
xchg
mov
pop
adc
dec
pop
lret
shrb
mov
test
sahf
cmp
pop
cmc
in
dec
pop
loopne
push
adc
aad
sbb
lea
aam
lahf
pusha
int
push
mov
gs
xchg
in
pop
lahf
fwait
and
bound
add
into
xchg
lret
negw
mov
xchg
mov
shl
push
push
ret
or
cmp
xchg
nop
or
pop
lahf
push
fnclex
push
xor
mov
sbb
mov
or
negb
jae
mov
inc
xor
or
mov
xor
mov
inc
fwait
cmpsb
sbb
addr16
stos
mov
std
adc
cmpsb
inc
ss
jne
inc
movsb
stos
int
movsb
inc
mov
lret
fistpl
enter
pop
push
sbb
in
inc
orl
test
adc
or
inc
into
hlt
or
xor
xchg
xor
lds
add
dec
adc
in
mov
mov
out
shrl
xchg
insb
bound
lods
ret
jne
roll
testl
sub
daa
ss
mov
fs
repz
roll
in
mov
out
and
in
inc
inc
jnp
cmp
movl
xchg
jae
pop
aam
in
jmp
in
mov
sub
fstpt
test
ss
aaa
add
push
insl
cmp
cmp
mov
movsl
into
arpl
fstpl
in
xor
push
std
mov
sahf
pop
aas
dec
inc
sbb
pop
sbb
dec
mov
test
xor
mov
adc
xor
js
bnd
xchg
stos
pop
mov
je
aad
dec
lock
mov
aaa
mov
orl
push
push
push
out
xor
mov
fsubrp
dec
mov
pop
adc
inc
inc
mov
xchg
roll
add
and
add
ret
pop
imul
sub
loop
imul
lret
pop
mov
test
xchg
mov
adc
inc
jae
and
outsl
pop
lods
add
inc
pop
inc
in
sub
repnz
shll
mov
push
dec
push
mov
in
divl
cli
icebp
xchg
fldcw
xor
push
push
mov
lds
jg
lock
cmp
outsb
xor
add
push
loopne
in
incb
xchg
mov
mov
scas
imul
outsl
jnp
movsl
add
lods
dec
inc
sub
add
mov
adc
mov
out
cli
insb
xchg
mov
inc
jp
cmp
aaa
xchg
pop
xor
clc
and
add
arpl
or
les
call
inc
jae
sbb
cli
sub
xor
jno
xchg
mov
lret
stos
xlat
push
cmp
popf
sarb
xor
push
in
xchg
test
mov
stos
cmp
std
inc
xchg
xor
call
repz
mov
mov
pop
push
out
cwtl
bndldx
xchg
int
push
xorb
cltd
xor
movsb
ret
dec
push
mov
sbb
add
pushf
jle
enter
pop
rcrl
or
and
xchg
and
enter
dec
popf
cmp
inc
das
push
adc
cmc
or
int
push
imul
test
fs
test
lock
out
mov
or
jmp
mov
push
sbb
in
cmp
repz
pop
repnz
test
mov
cs
xor
enter
repz
jecxz
sub
les
lahf
mov
int
push
xchg
xor
out
repnz
addr16
test
cmp
lret
fistpll
rclb
fisttpl
dec
sub
jle
push
rorl
or
outsl
std
add
fstps
jle
dec
mov
adc
adc
cmp
push
sti
frstor
aam
insl
pop
jp
xchg
pop
fcomps
mov
cmpsb
pop
aaa
adc
in
lds
push
add
pop
insl
iret
outsb
lahf
add
pop
les
out
imull
or
jne
sbb
jmp
leave
movsb
jle
xor
xor
insb
js
xchg
loop
movsl
shr
pop
xchg
xchg
in
lds
add
pop
ja
jp
pop
fmul
shll
push
pop
pop
out
and
pop
add
add
inc
std
fildl
ficoml
and
cmp
cmpsl
fs
mov
lahf
sbb
and
aaa
lcall
in
dec
push
in
enter
shr
pop
dec
xchg
xchg
cmc
lret
bound
or
and
adc
inc
clc
cli
je
add
pop
push
ljmp
iretw
dec
xor
std
xor
repz
mov
insb
pop
cmovl
mov
add
sub
sbb
stos
jge
inc
call
loope
cmp
fdivr
cmpsb
push
sub
out
movsb
xchg
jp
repz
add
mov
je
outsl
insl
inc
hlt
dec
lea
jbe
daa
mov
push
mov
fwait
cmpsl
out
adcl
int3
pop
aaa
lock
xchg
imul
in
jb
aad
cltd
push
gs
imul
loop
in
xchg
mov
xchg
dec
xchg
mov
idivb
push
mov
push
mov
lea
pusha
dec
out
pop
sub
mov
sub
subl
test
out
stos
inc
adc
loopne,pn
push
push
popa
dec
cmp
inc
xor
orl
adc
xchg
pop
ja
mov
or
shll
lcall
push
sbb
push
dec
push
cld
lcall
aad
cwtl
jmp
rcll
and
test
push
mov
add
push
shll
rcrl
dec
sbb
or
jnp
fnstsw
xor
cmp
out
adc
loopne
stos
cmc
addb
push
add
lret
xor
mov
popf
sbb
rcll
inc
push
xchg
xorl
scas
xlat
loopne
push
xchg
in
ret
imul
xchg
xchg
mov
pusha
dec
or
je
or
lret
aaa
cmpb
sub
pop
aam
xlat
xchg
push
push
stos
push
xchg
rcr
cmc
pop
cmp
sub
sbb
insl
add
inc
imul
mov
fdivs
push
mov
popa
mov
push
adc
leave
mov
jne
dec
cld
inc
xor
push
cmpsb
bound
dec
inc
hlt
ja
stos
dec
jle
outsb
mov
inc
mov
sbb
inc
inc
and
mov
cmp
lcall
je
test
inc
repnz
xor
jle
je
inc
or
adc
mov
arpl
test
or
into
mov
sub
pop
mov
or
mov
int3
int
push
mov
adc
vmovapd
orb
mov
pop
pop
stos
pop
inc
lods
jo
jo
and
mov
loop
mov
push
adc
mov
mov
das
fdivl
in
push
sbb
jne
fsubl
mov
or
dec
mov
mov
or
adc
js
dec
xchg
in
push
ret
mov
test
push
pop
add
adc
lea
pop
push
mov
sub
mov
cs
insl
scas
pop
mov
cmp
mov
cli
xchg
je
enter
add
cwtl
icebp
in
sbb
or
mov
mov
popa
cs
jge
adc
xchg
xchg
call
in
pop
or
xchg
popa
adc
jp
pop
les
jae
ss
sub
shl
lahf
and
push
sub
shlb
in
lea
shlb
pop
cmp
mov
int
mov
push
outsb
or
lcall
add
into
sar
push
out
xchg
dec
inc
pop
jno
jl
fistpl
push
rclb
pop
scas
sub
push
gs
cmp
add
xchg
mov
mov
pop
lret
mov
dec
decb
jle
ljmp
shll
add
cmp
cmp
lret
dec
inc
fisubrs
inc
fldl
std
mov
xchg
mov
and
aas
testb
pop
jge
cmp
jns
stos
jge
jmp
scas
nop
and
gs
add
in
andb
repnz
mov
push
dec
mov
insb
xchg
lret
xchg
test
jbe
in
popa
push
daa
es
shrd
fs
fdivp
jp
mov
repnz
ja
rcrb
xor
xchg
mov
adc
fnstcw
cmpsl
movsl
test
xchg
inc
mov
loop
insb
xchg
std
push
jnp
dec
int
mov
adc
mov
dec
ret
pop
jge
jae
sti
sub
push
stc
lret
gs
xorb
jne
or
fists
cmpsb
frstor
lods
jl
ss
add
daa
mov
add
js
jl
in
and
inc
inc
dec
jns
ret
add
cmp
sbb
das
ret
adc
sbb
sbb
sbb
mov
popf
orl
pop
mov
sbb
and
xor
cld
mov
cmp
mov
or
dec
mov
in
mov
add
in
mov
add
insb
or
and
ss
daa
outsb
inc
mov
xor
out
xchg
daa
loope
dec
int3
lods
cld
and
test
xchg
jbe
sub
sbb
xchg
push
fs
adc
sub
pop
jnp
jnp
fisttpl
pop
aas
divl
fstl
pop
dec
ja
adc
std
mov
movsl
outsl
mov
das
cltd
add
lahf
clc
xchg
adc
sbb
pusha
mov
ja
adc
adc
pop
jge
and
fwait
stos
and
cs
lea
clc
push
mov
aam
out
adc
sbb
jp
fimull
stos
inc
test
mov
dec
sbb
xor
xchg
dec
sub
pop
inc
xor
les
cmp
jecxz
stos
mov
pop
xor
pop
lods
aad
mov
xchg
mov
xchg
imul
fbstp
das
flds
mov
das
cltd
pop
lea
stos
jl
inc
cmp
and
mov
jb
mov
stos
cmp
ss
dec
mov
ljmp
add
cmp
ja
jae
xchg
pusha
push
xchg
dec
inc
mov
lcall
add
mov
fwait
cmp
ljmp
push
adc
pop
pop
jp
lret
inc
movsb
cld
outsb
mov
movb
inc
push
stos
adc
outsl
inc
jecxz
push
mov
xchg
push
shr
jg
ds
cld
ss
es
cmp
dec
add
dec
imul
sbb
push
data16
sbb
out
adc
les
mov
xor
je
insb
dec
test
jmp
jle
push
add
rcrl
push
xchg
jecxz
sbb
xor
xchg
fimull
lods
jmp
cwtl
in
lods
sub
fcmove
cltd
mov
jb
jo
xchg
inc
add
pop
test
or
inc
fsubl
push
adc
jge
or
mov
or
stc
movsl
mov
sub
ficomps
leave
sub
outsb
dec
test
xchg
push
std
repz
ret
mov
shr
jmp
mov
xor
or
outsb
inc
lgs
sbb
sbb
inc
aaa
pop
arpl
pop
pop
daa
out
dec
dec
orb
pop
inc
repnz
pusha
lret
push
or
xchg
aad
std
mulb
add
mov
addl
xorl
xor
xchg
dec
push
sbb
mov
dec
loop,pt
xor
inc
jno
test
add
mov
sahf
sti
stos
ficompl
mov
dec
dec
xchg
mov
push
in
adc
aad
negb
test
int
stc
stc
jp
es
in
outsb
enter
mov
push
xchg
mov
fildll
mov
outsb
jp
outsl
mov
push
push
jno
test
mov
sub
jl
mov
out
out
cs
int3
ret
loop
sbb
sub
aad
push
fldt
xchg
sub
cs
jae
lods
push
or
jle
lods
stc
jbe
int
dec
xorl
pop
je
push
dec
inc
fucomip
mov
pop
popa
mov
ret
xchg
xchg
pop
cmp
frstor
cmp
add
cltd
dec
popf
xor
dec
jp
mov
sbb
lods
leave
xor
les
mov
test
sbb
adc
sbb
addr16
arpl
xor
fcompl
fs
ljmp
mov
push
xchg
mov
pop
pop
daa
fnclex
sahf
je
cmp
scas
jns
lods
and
add
dec
pop
bnd
sti
mov
pop
mov
adc
loope
popf
add
and
mov
test
push
lods
push
cmp
sahf
pop
sbb
fnstcw
or
sbb
cmp
xchg
sahf
ds
js
fs
shlb
inc
iret
adc
sbb
xor
xchg
loop
cmpxchg
outsb
pop
das
jo
imul
xchg
push
xchg
rcll
notb
pop
ss
push
mov
adc
leave
inc
sbb
ret
es
cmpsb
sarb
clc
xchg
inc
in
pusha
testl
inc
es
ret
xchg
movsb
out
cmc
int3
xchg
movsb
xor
pop
sbb
and
and
addl
push
sar
dec
jecxz
ss
dec
cs
mov
jmp
xor
xchg
and
and
jmp
sbb
push
add
outsl
xchg
fistl
scas
cs
ja
fstpt
inc
adc
or
jmp
js
jle
ror
pop
mov
enter
cmp
scas
ss
popf
ja
adc
mov
cmp
mov
sbb
dec
clc
sub
aam
xchg
xlat
loopne
out
and
icebp
icebp
jp
mov
sarb
test
and
out
push
xchg
inc
inc
out
test
cli
pushw
xchg
mov
sti
inc
repz
jecxz
mov
int
cmc
int3
lds
std
push
mov
cmp
out
rcr
sbb
ja
jne
lahf
sbb
in
pop
jmp
mov
pop
jo
mov
rcrl
mov
and
jge
ja
out
fwait
ljmp
ret
mov
std
or
dec
in
ror
mulb
js
gs
push
or
sahf
cld
ds
xor
xor
sbb
dec
stos
xchg
cld
and
xor
scas
sbb
jl
xchg
cmp
cltd
adc
jle
pop
andl
ljmp
mov
fs
adc
jg
popl
pop
lcall
adc
and
jo
pop
aas
dec
mov
xor
mov
test
sbb
sbb
subl
clc
rolb
xor
ret
scas
add
sub
rcr
andl
out
adc
push
fcompl
shll
lods
cmp
inc
dec
sub
adc
or
scas
sbb
adc
pop
adc
repnz
incl
jb
pop
shlb
mov
inc
cmpsl
xchg
cmp
cmpsb
fistps
mov
mov
fistpll
xor
das
leave
xor
clc
lret
inc
rcll
xchg
add
or
adc
pop
movsl
in
outsb
cltd
or
adc
push
pushf
dec
cmp
cltd
cmp
insl
imul
adc
xchg
sbbb
sbb
ficomps
ja
loopne
dec
mov
add
fists
shufps
mov
ja
repnz
pop
imul
mov
loopne
adc
adcl
jbe
push
sub
pop
xchg
pop
out
inc
lret
sub
shrl
lret
push
or
pusha
sbb
movsl
idiv
and
js
and
fs
sbbl
rcrb
xor
jb
inc
adc
mov
sub
dec
mov
je
mov
mov
into
xchg
call
popa
cwtl
sbb
push
ret
mov
xchg
push
ret
int
icebp
fldcw
leave
divb
loope
rcr
jae
lods
xor
lods
cmp
mov
out
lret
out
add
push
fwait
int
popf
pop
mov
or
mov
mov
fistpl
sub
fnsave
push
and
out
arpl
xor
pop
mov
jne
in
jae
sbb
add
jbe
mov
aas
xor
aas
fdivrp
test
mov
xchg
gs
icebp
mov
jg
push
push
or
loopne
sub
repz
insl
fsubp
add
scas
and
and
in
inc
bound
jne
js
daa
in
mov
xchg
lahf
cmp
repnz
dec
xchg
mov
imul
fs
sbb
nop
jbe
mov
sub
jbe
bound
stc
mov
pop
jbe
jge
ret
xchg
add
daa
mov
leave
push
xor
sub
cmp
fs
shrl
icebp
js
iret
lret
ljmp
or
adcl
inc
push
lds
push
adc
add
pop
lahf
in
inc
mov
inc
pop
sub
jns
and
leave
mov
mov
cs
dec
or
imul
popf
imul
add
and
xchg
cmp
in
cmp
jle
subb
sub
mov
lret
mov
ja
lea
leave
mov
outsb
fwait
jl
enter
ficoml
lcall
ret
mov
xchg
xchg
mov
jl
shl
jecxz
mov
repz
mov
jns
int
iret
add
add
mov
push
mov
cwtl
js
add
ljmp
lret
in
mov
sti
fnstsw
inc
rolb
int3
test
in
push
mov
enter
pop
pop
pushf
mov
popf
aam
repz
xor
sub
aaa
add
add
outsb
pop
ficoml
inc
jp
push
cld
fnstsw
and
push
daa
icebp
vunpcklps
xor
xchg
push
mov
xchg
inc
inc
test
sbb
dec
sti
add
cwtl
xchg
test
jl
inc
cmp
xchg
movups
aaa
flds
inc
nop
mov
leave
xor
sub
ret
hlt
repz
sahf
sub
inc
daa
mov
jp
jae
adc
loopne
or
xor
sub
sbb
sbb
nop
fistpll
push
mov
mov
xor
sbbb
outsl
mov
inc
cmp
jge
orl
inc
push
int3
fdiv
repz
push
push
inc
mov
and
fisttpll
xchg
mov
das
scas
xchg
out
xor
cmp
xchg
mov
mov
in
jge
pop
ljmp
movsb
mov
jl
jae
jmp
jmp
movsb
push
and
into
aaa
inc
mov
xchg
std
jne
aaa
mov
sbbb
pop
xchg
popf
or
adc
and
call
into
cmpsl
xor
mov
test
out
and
fcomp
jmp
sub
xor
cmp
mov
leave
imul
punpckhdq
adc
xchg
jne
and
jp
xchg
jmp
pop
or
jl
push
lret
mov
fld1
sbb
repnz
mov
and
push
adc
int
jecxz
ret
cwtl
cs
je
aad
or
outsl
call
sbb
pop
mov
jno
push
jecxz
cmpsb
mov
sub
push
jns
push
push
mov
push
xchg
popf
push
pop
popf
nop
lods
js
dec
jae
jnp
iret
mov
push
jp
xchg
sbb
sub
push
scas
adc
fwait
pop
stc
add
sbb
pop
into
pop
jne
dec
inc
mov
andl
lea
enter
cmp
ret
or
test
ljmp
jl
dec
insl
xlat
sbb
or
sub
or
inc
sub
das
daa
pop
jle
and
iret
stc
fs
pop
fiadds
fnstcw
into
xlat
adc
pop
pushf
imul
add
in
icebp
cltd
mov
push
fldl
shlb
jnp
inc
mov
sub
mov
jb
imul
or
or
sbb
cmp
fldenv
lods
rclb
push
movsl
repnz
push
sti
cmp
imul
in
and
add
pushf
xchg
push
mov
jge
addr16
lds
mov
ljmp
ficompl
xchg
mov
addr16
or
in
aaa
je
pop
dec
mov
jge
out
dec
int3
gs
adc
and
arpl
inc
inc
aaa
hlt
pop
shlb
push
iret
cltd
ljmp
xchg
in
xor
scas
insl
aam
stos
lock
bound
mov
cmpsb
jae
adc
sub
test
insb
push
mov
mov
lret
fldenv
je
aam
sbb
leave
bswap
imul
add
pop
leave
sub
adc
or
mov
xchg
adcl
and
insl
mov
inc
cltd
mull
ss
loopne
xchg
js
sbb
scas
bound
xor
dec
cmp
rorb
in
pop
add
enter
jo
or
xor
pusha
add
pop
lret
mov
imul
int
mov
mov
icebp
mov
sbb
aaa
std
scas
and
fcmovbe
sub
lcall
xor
adc
cmp
jnp
sbb
jbe
adc
mov
clc
push
sbb
pop
add
in
adc
out
mov
push
sub
dec
fcomps
mov
xor
sbb
jae
movups
xchg
push
pushf
mov
cmp
jg
jl
add
dec
inc
jae
and
aam
and
daa
sub
test
xor
js
dec
dec
mov
mov
mov
inc
mov
fimuls
mov
or
sub
mov
out
xchg
xor
push
pop
sbb
xor
push
out
jecxz
jge
add
and
sub
adc
arpl
jae
les
sbb
cmpb
xchg
sbb
stos
in
mov
scas
or
rolb
mov
shll
add
pop
das
sub
pmulhw
cli
ror
jo
les
xor
cmp
jae
xchg
fisubrs
xchg
jae
push
pop
xchg
cld
popf
mov
lods
in
faddp
push
or
stc
out
shrb
add
adc
scas
xor
ret
push
adc
push
sbb
popa
dec
sub
jge
cmpsl
add
jnp
ret
cmp
jae
out
and
pushf
xchg
fisttpl
fwait
pop
cmp
cmp
inc
out
loope
hlt
out
push
xchg
add
jbe
daa
inc
sbb
cmp
bound
xchg
xor
imul
data16
repz
xor
shll
sbb
inc
mov
sti
sbb
shrl
scas
push
mov
push
enter
dec
out
popl
outsl
rcl
out
daa
mov
jno
and
leave
jge
push
mov
pop
inc
sub
jae
loope
sbb
add
xor
and
ficomps
in
push
jnp
mov
dec
jo
out
inc
or
sbb
lds
rcl
out
jne
aaa
push
loop
clc
scas
dec
add
inc
mov
jae
jmp
xor
adc
jge
inc
in
push
cmpb
dec
cmpl
rol
jbe
movsl
sahf
sti
sub
xchg
inc
inc
ret
mov
and
repnz
pop
cmp
mov
inc
pushf
icebp
sub
sbb
add
xor
pop
xorb
rcrl
subl
xor
cmpsl
data16
or
mul
aam
add
inc
das
adc
mov
mov
inc
mov
lods
enter
pop
jnp
nop
mov
in
sub
jmp
push
bnd
hlt
rcrb
ret
repz
in
xchg
stos
in
aas
std
jecxz
adc
sbb
movb
cmpsb
push
push
mov
or
mov
incl
in
ja
pop
mov
add
loope
mov
imul
out
mov
xchg
mov
jge
stc
popa
jg
push
lcall
xor
stos
and
inc
adc
out
mov
dec
mov
pop
mov
je
xchg
push
shlb
aas
mov
mov
push
inc
imul
lods
and
dec
daa
mov
xchg
adcb
dec
insl
xor
gs
push
mov
pop
shll
mov
push
and
mov
jno
dec
sbb
mov
lahf
jg
and
inc
and
jecxz
les
pop
pop
outsl
mov
mov
adc
xchg
adc
test
jmp
das
repnz
adc
bnd
ret
mov
daa
test
xchg
xor
insl
shlb
pushf
push
jb
ret
out
xor
dec
je
ss
add
repz
fsin
xor
sbb
gs
negb
movl
add
stos
rcr
xchg
cs
jb
shlb
and
sbb
aas
sbb
jg
fwait
movsl
fisttps
sti
jge
imul
xor
dec
mov
cmpsl
lock
mov
mov
enter
sbb
jmp
push
xor
xlat
pop
fcmovne
cmp
test
sub
mov
int3
xor
or
in
mov
jp
cld
ret
imul
sub
mov
arpl
add
dec
ja
test
jbe
cmp
test
or
outsb
movsl
daa
push
inc
cwtl
lock
jl
mov
jecxz
inc
aaa
test
fdivp
mov
inc
mov
push
aas
into
jg
inc
mov
sub
leave
sub
push
ds
push
int3
xchg
outsl
ja
andl
push
mov
nop
insl
adc
cld
jae
or
inc
shl
hlt
jmp
es
inc
insb
dec
cmp
dec
dec
ret
stos
push
push
jnp
mov
sbb
push
das
pop
or
stos
sub
or
aam
sbb
ret
xor
mov
lods
push
lret
mov
pusha
push
or
xor
lods
enter
cmp
pop
and
or
insl
dec
sbb
jle
arpl
jo
or
sahf
xchg
stc
cld
stos
mov
test
sub
sbb
pop
leave
cltd
mov
inc
xchg
idiv
mov
lcall
sbbb
rcll
push
ret
pop
adc
jns
mov
nop
imul
shll
pop
aad
push
mov
mov
sbb
adc
inc
into
jns
pushf
stos
ljmp
lock
xchg
and
dec
cli
mov
xor
mov
mov
and
mov
loope
sub
push
jae
mov
xchg
and
sub
pusha
jge
faddp
or
lea
inc
dec
mov
daa
cwtl
sub
jle
adc
out
in
mov
or
adc
aam
out
sbb
and
mov
jnp
push
ret
movsb
fwait
mov
inc
dec
add
pop
push
arpl
pop
mov
xchg
leave
dec
mov
addr16
les
mov
bnd
es
in
adc
and
movsb
js
xchg
inc
fnstsw
jg
das
pop
dec
jne
push
mov
cs
or
icebp
test
stc
jecxz
std
dec
outsl
js
enter
pop
test
sbb
dec
scas
test
out
sub
lret
inc
jmp
add
jne
cli
aam
mov
outsl
push
sub
test
sbb
push
cmp
inc
cli
ja
iret
ret
incb
je
jns
inc
push
addb
fldz
bound
imul
aas
out
xor
mov
mov
lret
sub
adc
mov
fidivrs
adc
vmwrite
mov
movsb
cmp
popl
shlb
es
shlb
lock
dec
pop
pop
mov
push
into
ret
push
push
push
pop
fldenv
xchg
je
pop
jge
mov
std
dec
out
dec
cmp
jg
mov
cmp
cmp
mov
adc
test
rclb
jmp
mov
mov
jbe
addr16
enter
loopne
sbb
into
mov
inc
clc
or
push
mov
arpl
cmp
aaa
dec
xchg
cmp
mov
adc
andb
xlat
outsl
push
imul
pop
jo
xchg
or
and
out
mov
leave
out
push
jmp
pushf
sar
mov
imul
add
addr16
jnp
mov
clc
les
adc
fs
dec
sbb
rorl
or
in
je
or
mov
inc
fbld
sbb
or
pusha
in
pop
outsb
out
sub
sbb
je
mov
or
mov
vmread
add
inc
ja
mov
fs
lret
ficoms
pop
shl
cwtl
sub
push
pusha
lods
add
mov
mov
pop
fidivs
pushf
mov
sub
iret
jl
jle
add
sarb
les
sub
enter
fwait
jle
push
inc
dec
sbb
push
in
lcall
ret
or
push
push
xlat
jae
mov
cmpsl
sub
jmp
sub
sbb
xor
sbb
je
xor
leavew
ja
mov
mov
in
inc
inc
out
iret
ljmp
pop
inc
mov
mov
xchg
xchg
xchg
sub
leave
lahf
pop
je
sbb
push
mov
adc
lret
out
out
rorb
stos
sub
push
cmp
insl
scas
popa
into
push
mov
das
mov
push
out
jb
movsl
sbb
push
pop
xchg
xchg
xor
int3
les
xchg
add
jb
add
mov
jg
xchg
pusha
push
inc
ljmp
repz
addr16
jg,pn
mov
jg
sbb
pop
imul
mov
mov
cmp
test
int3
jl
jns
push
mov
popf
imul
mov
push
dec
lea
loopne
addr16
adc
xchg
repnz
jo
jle
mov
daa
fsts
xchg
daa
cmc
sbb
pop
lret
pop
mov
inc
pop
jmp
mov
stc
rcll
out
mov
dec
inc
inc
sbb
jp
cmc
push
push
ficomps
mov
mov
out
and
pop
dec
out
jne
ret
cmp
cli
fiaddl
dec
dec
dec
mov
jg
aas
push
lret
call
sbb
cmp
out
and
lock
lds
mov
add
out
jge
lods
add
dec
shll
lock
andl
stos
or
test
fstps
movsl
or
pop
sahf
ror
pop
mov
iret
inc
ret
pusha
les
aad
mov
idivb
fiaddl
mov
mov
xchg
adc
test
mov
and
rol
lcall
lods
cmpb
or
sbb
hlt
dec
out
fldl
add
imul
push
mov
mov
mov
fidivrs
cli
nop
test
lcall
es
and
xchg
repnz
mov
mov
xchg
sbb
xlat
inc
nop
lahf
push
or
add
repnz
aad
iret
popa
iret
ljmp
cmp
and
xor
call
mov
sahf
ljmp
sbb
sbb
push
inc
arpl
dec
outsb
cmp
xchg
call
dec
sbb
mov
mov
jmp
and
mov
jp
in
jp
sub
add
lahf
mov
mov
nop
or
mov
in
sbb
or
inc
dec
bound
data16
sbb
mov
punpckldq
sub
sbb
aaa
xor
sbbl
divl
sub
fs
or
or
cmpsl
aad
shll
dec
and
jle
bound
js
leave
add
inc
mov
out
mov
es
mov
jo
repnz
sub
sahf
and
stos
repz
lods
mov
xchg
es
je
in
out
sub
jo
cli
movsb
xor
fcoml
sub
or
fdivrl
idivl
ljmp
ss
imul
add
mov
mov
cmp
push
mov
in
push
xor
mov
out
popa
sahf
xchg
and
push
adc
jno
shll
sbb
xchg
mov
rcrl
cmpsl
inc
mov
pop
repnz
mov
arpl
xlat
jno
lea
sub
stos
aad
jmp
cmp
mov
or
mov
sbb
fildl
les
jmp
or
jne
inc
mov
pop
in
sti
popa
stos
outsl
sbb
ljmp
pop
xchg
mov
popf
idivb
repnz
jne
cmp
call
cltd
jle
jge
je
incl
mov
push
adc
jb
xchg
ss
pop
shl
mov
popf
mov
xlat
push
sub
pop
jo
mov
rcr
loopne
pop
iret
loope
inc
jecxz
std
aaa
int3
outsl
stos
inc
mov
dec
push
fwait
dec
mov
mov
push
arpl
repz
cmp
int3
adc
mov
mov
adcl
xchg
aaa
and
mov
call
jbe
mov
cmpsb
pop
pop
fs
add
sti
pushf
shll
sti
pop
data16
pusha
cs
clc
daa
insb
test
xor
stos
jp
popa
cmp
es
test
or
mov
ja
cmp
rorb
ror
xor
inc
jno
xor
fsubr
mov
adc
sbb
les
mov
shl
adc
xor
js
adc
and
decb
inc
sub
int
stos
cltd
int
fcmovbe
loope
rcrb
push
adc
mov
pop
cld
xchg
or
jae
hlt
sub
jno
push
push
cmovo
push
cmpsb
clc
push
arpl
or
cmpsl
repz
pop
add
popa
mov
push
notl
scas
pop
inc
cmp
inc
frstor
jmp
mov
and
repz
rcrl
aam
push
and
pop
dec
adc
lods
rcrb
cmp
test
inc
rolb
jp
pop
cmp
es
call
test
leave
cwtl
mov
sbb
outsl
lods
xor
inc
jecxz
fcmovnu
xor
ds
or
stc
lea
fwait
xor
rcrl
jmp
int
mov
and
mov
loope
push
mov
sti
pop
or
xchg
ret
out
inc
mov
leave
rcrl
fnsave
ss
shlb
inc
fnsave
push
pop
mov
adc
rol
stc
inc
stc
add
sahf
mov
daa
test
mov
mov
mov
push
cmpsl
pop
pop
sub
loope
push
aam
mov
jne
fwait
sbb
sub
cmc
imul
dec
dec
inc
cmp
push
mov
hlt
mov
mov
mov
aas
adc
add
inc
cmc
cmp
ss
shrb
mov
jg
mov
mov
pop
push
push
dec
mov
cmp
jnp
mov
mov
loop
stc
cli
ret
addb
jnp
pop
mov
in
and
dec
jl
inc
aaa
or
jge
js
loopne
and
mov
xor
push
adc
lcall
mov
icebp
or
mov
inc
out
mov
inc
and
adc
dec
icebp
cmpsb
jbe
mov
jo
sbb
vpaddw
hlt
mull
pusha
pop
cmpsb
test
sub
inc
dec
sbb
ss
dec
dec
test
mov
pop
js
fisttpll
ds
stc
jbe
push
fstps
mov
popa
scas
loope
mov
add
xchg
adc
cmp
out
lods
cmp
fidivrl
insl
out
pop
push
dec
sbb
mov
sbb
pop
sub
sub
jns
mov
cmp
das
ret
or
mov
sbb
or
das
push
cmp
sbb
mov
xchg
or
adc
pushf
lock
arpl
sbb
outsb
cwtl
xchg
or
xor
xchg
lret
pop
sbb
sbb
or
adc
jbe
inc
jns
jge
rcrl
add
adc
aad
stos
aaa
add
push
mov
cmp
or
jb
xor
ret
in
mov
sub
ja
pop
push
pop
jg
xor
push
clc
ficoms
lock
je
andl
pop
fmull
mov
cmp
scas
jbe
mov
cmp
jae
ficoms
cmp
xor
pop
lea
jb
jbe
ds
out
out
dec
cmp
inc
mov
lahf
scas
je
inc
push
sbb
xchg
mov
adc
push
notb
fsubl
fstpl
push
ja
in
stos
mov
xor
shll
xor
test
aas
ja
pop
jmp
int3
push
cmp
xchg
push
xor
pop
or
sub
jg
pop
push
mov
jnp
xorb
pop
xchg
lods
mov
sbb
xchg
sti
xor
movsl
push
pop
sahf
add
mov
and
aam
rclb
xor
notl
enter
in
loop
in
push
push
je
cmp
mov
pusha
enter
pop
add
mov
dec
xorb
adc
lds
pop
dec
and
loope
outsl
mov
inc
test
dec
inc
xchg
lret
inc
sbb
out
xchg
mov
inc
mov
mov
js
push
ret
prefetcht1
fimuls
insb
divb
mov
sbb
sbb
xor
sbb
push
ror
fidivrl
add
mov
push
xchg
fsts
mov
cmp
push
adc
aaa
movsb
mov
popf
or
cmp
je
xchg
push
test
test
sbb
fstpt
inc
jecxz
sbb
shrb
sbb
mov
leave
fs
push
pop
cli
jne
xchg
lret
out
sbb
scas
adc
stos
adc
add
adcb
or
mov
fstps
icebp
dec
or
jbe
nop
jne
xchg
cmp
out
cld
or
jg
mov
sub
sti
add
mov
and
mov
sbb
cwtl
mov
add
add
popf
push
adc
test
popl
imulb
mov
addb
or
xchg
fs
insl
syscall
mov
rcll
cwtl
imul
sarl
adcb
fwait
fs
pop
icebp
mov
xchg
scas
daa
pop
jp
pop
cmc
outsb
pop
pop
stc
jl
add
dec
sub
push
outsb
xor
pop
sub
and
lret
pop
cmp
adc
out
xlat
imul
shlb
xchg
xchg
or
lea
stc
std
sub
cmp
out
adc
cmpb
or
jbe
push
mov
jecxz
fdivs
ret
in
add
lods
rclb
sub
aas
mov
aad
loope
cmpsb
xor
mov
mov
xor
frstor
arpl
daa
inc
mov
push
int
jne
stos
mov
scas
lcall
adc
push
xor
cmp
jg
fsts
cli
mov
sbb
jl
outsl
ja
mov
cmp
sub
mov
incb
stos
mov
sahf
mov
nop
xor
push
shl
mov
gs
cmpsl
cmp
push
sub
mov
xchg
scas
adc
into
dec
sub
cmpsb
sub
mov
jl
out
ss
arpl
insb
jno
xor
div
out
xor
das
test
daa
popf
or
fadd
imul
pop
push
lods
imul
or
lcall
nop
pop
xor
sbb
and
imul
pusha
cmp
jge
add
sbb
test
fs
mov
xchg
lret
add
add
pop
jmp
mov
xor
aad
xor
cs
cmp
adc
pop
scas
push
js
adc
push
out
dec
mov
pop
in
pusha
adc
xchg
into
mov
xlat
xorl
pushf
xor
xchg
daa
popl
orl
or
pop
arpl
dec
adc
cli
ret
icebp
mov
sbb
mov
dec
in
in
out
push
movsl
mov
pop
orl
sti
mov
sub
out
mov
dec
push
push
fsts
xchg
sub
pop
aaa
pop
add
inc
data16
mov
mov
jno
les
in
inc
jmp
mov
mov
mov
xchg
jp
mov
add
sar
xor
pushf
add
daa
popf
jmp
add
scas
mov
not
cmc
cmpsl
xlat
mov
jae
inc
jo
dec
ja
add
mov
cmp
jae
scas
adc
cmp
xchg
call
aaa
hlt
sbb
xchg
jb
push
sbb
test
mov
and
inc
cmpsb
xor
mov
cmp
xchg
jne
xlat
addr16
les
test
out
mov
jnp
push
loop
dec
mov
inc
bound
ja
aam
jb
mov
add
js
and
fcmove
xor
repz
or
pop
xchg
jg
or
cmp
fbstp
ficompl
pop
cwtl
xchg
fldcw
xor
lret
lcall
mov
imul
out
jp
movsb
sub
scas
movsb
fwait
jno
lahf
loope
out
aaa
adc
lahf
cmp
mov
push
imul
jo
dec
push
xchg
imul
jns
test
sub
gs
clc
dec
jle
std
ret
jp
sbb
mov
pop
loope
pushf
call
sub
and
mov
cs
lods
and
mov
push
cli
push
inc
mov
outsl
inc
xor
mov
sbb
int3
notl
hlt
jg
ds
rorb
or
xchg
dec
mov
dec
clc
cmp
pop
stc
daa
movsl
rcr
in
jnp
pop
mov
imul
xchg
and
mov
test
imul
shrb
loop
push
fmuls
leave
sub
ja
pushf
cmpsl
dec
fchs
sub
lret
mov
fs
jge
ja
mov
dec
or
sub
stc
lahf
mov
pop
adc
sarb
imul
sti
xchg
pop
cmp
sbb
inc
movsb
cmp
sbb
mov
jg
cmpsl
addb
fcmovnbe
jnp
notb
push
cmpsb
inc
mov
push
jmp
push
call
add
push
push
mov
inc
mov
fyl2xp1
pop
test
arpl
pop
dec
inc
jnp
jg
or
pop
inc
xchg
add
mov
popf
xchg
sbb
sub
loopne
cld
cmpsl
pop
sub
mov
sub
stos
fwait
test
jnp
cmp
jmp
bound
das
mov
xchg
outsl
int
cs
aaa
rol
sbb
fidivs
lods
es
ds
fimuls
mov
pop
sbb
daa
fistps
cmpsl
cmp
pop
xor
push
push
andb
stos
mov
xchg
sub
cld
push
add
xor
pop
sbb
adc
sbb
push
in
mov
jbe
sti
xor
imul
repz
pop
lcall
cmp
filds
stos
push
push
pop
enter
cmc
jne
arpl
adc
push
xor
sar
das
dec
ss
insb
test
push
test
imulb
fstps
les
pop
mov
mov
pop
adc
int3
aad
dec
cmpsb
sbb
repnz
je
sub
and
cmc
nop
fucomp
movsl
es
add
and
stc
adc
cmpb
scas
jmp
jae
inc
pop
xchg
add
mov
mov
divps
sub
cmp
aas
push
sub
dec
pop
and
ud2
sub
movsl
mov
lret
xchg
or
pop
adc
loop
pop
fstpt
sub
and
xor
loope
jnp
jg
pop
fcmovnb
dec
jne
cs
popf
mov
xchg
fstpl
jns
in
jmp
hlt
out
loope
jmp
test
cmc
cltd
jmp
or
test
in
cmp
stos
adc
and
or
dec
fistl
inc
rclb
outsl
push
testb
pop
and
mov
add
fwait
enter
scas
mov
fmuls
icebp
xor
out
cmp
pop
push
or
fcomp
in
push
sbb
icebp
pop
stos
push
push
push
sbb
cwtl
adc
cmp
mov
sahf
jmp
jl
rclb
mov
jl
xlat
fs
mov
movl
fwait
lock
xor
rolb
aad
je
pop
adc
imul
adc
movsb
add
inc
mov
jmp
pop
xchg
mov
jg
mov
sbb
les
push
push
test
sbb
cmp
stc
decl
mov
add
popf
or
jne
arpl
fwait
adc
sbb
dec
inc
repz
or
outsb
lea
add
and
mov
movsl
mov
inc
icebp
jecxz
push
nop
subl
or
call
xchg
into
sbb
jo
std
leave
enter
inc
cmpb
fists
sbb
jl
push
cmp
push
aam
mov
push
inc
mov
xchg
ja
and
jecxz
mov
pop
pushf
jno
mov
xchg
lahf
aad
ret
ja
outsl
mov
scas
shlb
out
xchg
fisubl
push
fnsave
xchg
fs
jnp
inc
adc
add
mov
jb
jns
out
fwait
scas
int3
sti
inc
loop
inc
mov
in
nop
pop
pop
loope
mov
cmpsl
and
fcoms
pop
mov
ja
inc
xchg
or
dec
add
push
jb
sbb
jbe
pushf
hlt
outsb
xor
shlb
dec
mov
sbb
scas
xchg
xor
dec
or
or
mov
push
cmpsl
or
mov
sbb
or
push
imul
scas
push
out
pushf
jbe
mov
mov
add
sbb
fldcw
aad
cmpb
inc
jmp
sbb
jmp
xchg
mov
fiaddl
or
lret
mov
sahf
jno
adc
mov
jo
cmp
mov
aas
push
inc
in
xchg
out
test
cmc
ljmp
jle
sub
push
test
into
mov
cmpsl
or
subb
cmpl
js
push
sbb
cmpsl
loop
cmp
lods
in
and
push
dec
mov
popf
dec
imul
nop
gs
rcl
fidivs
pop
or
gs
aam
fwait
imul
test
int
ljmp
xor
mov
xor
testb
jns
cld
mov
sub
inc
mov
adc
cltd
aad
movsb
inc
lret
mov
das
cld
shrb
aam
ds
lahf
and
inc
push
lahf
movsb
adc
mov
loopne
mov
add
movsl
sbb
push
jmp
mov
bound
cmpsb
pop
add
push
mov
push
xor
inc
jp
negl
dec
lcall
iret
repz
ret
jp
inc
enter
sahf
pop
adc
and
and
push
mov
ficompl
test
sub
xor
mov
dec
push
ja
addb
mov
jne
pop
ja
ja
add
or
pop
cmc
mov
stos
hlt
or
enter
pop
test
mov
popf
daa
test
in
mov
fmuls
adc
mov
jmp
mov
test
dec
call
dec
push
movb
aaa
cld
add
sub
loope
sar
dec
fwait
test
cs
clc
cli
lock
jno
xchg
in
orl
push
or
loope
std
or
push
cli
je
jmp
dec
jbe
jge,pn
jne
fisubl
repz
into
out
andl
jp
jl
in
push
sub
movsl
xor
mov
je
adc
sub
mov
roll
ret
pop
test
repnz
jne
dec
fwait
pop
jmp
xor
cmpsl
push
js
inc
inc
lods
inc
int3
push
xchg
or
mov
mov
dec
aas
cld
inc
int
idivl
add
imul
xchg
daa
ficomps
ja
out
dec
mov
add
mov
pushf
sbb
nop
push
test
inc
test
popf
outsl
gs
in
sbb
das
fwait
addr16
ffree
pop
lock
add
mov
pushf
dec
sbb
sub
aas
xorb
pop
pop
lret
in
mov
xchg
sub
fwait
add
sbb
add
mov
inc
cmpsb
xchg
das
movsl
add
int
dec
ljmp
xor
mov
dec
xor
bound
pop
cmp
repnz
mov
outsl
mov
and
fninit
cli
cli
je
dec
adc
pop
xchg
sbbb
xor
push
pop
aas
or
popa
xrelease
insl
cmp
and
pop
cmpsb
xor
push
int
rcrb
pop
out
test
xchg
ljmp
mov
unpcklps
js
cld
xchg
push
mov
incb
jnp
lea
hlt
sbbb
lods
lods
adc
or
test
lods
mov
sti
imul
jmp
aad
sub
xchg
mov
imul
mov
call
mov
push
lcall
mov
mov
iret
mov
lcall
mov
cs
ror
scas
daa
pop
or
nop
xor
push
mov
cmp
push
add
lds
and
fidivl
mov
fs
or
and
pop
or
pushf
call
sarb
or
xchg
pop
cmp
pop
and
lea
add
outsl
adc
insl
xchg
sub
sub
les
das
pop
loop
and
cmc
or
fidivrl
mov
test
cs
outsl
rolb
pop
repz
xchg
lods
ds
aad
subl
xor
repz
mov
dec
movsb
add
and
push
mov
add
sub
xchg
das
ret
movsb
jno
decb
cmp
mov
mov
dec
sbb
faddl
adc
mov
mov
cmp
fiadds
cwtl
dec
sub
insb
inc
data16
scas
fsubrp
rcll
ret
rorl
push
mov
sub
xchg
pop
xchg
call
fnstenv
jmp
jmp
adc
and
lods
cmp
out
mov
mov
mov
popa
and
sub
cmp
pushf
das
frstpm(287
push
ljmp
mov
scas
sub
mov
insl
sti
pusha
pusha
popf
mov
push
adc
xchg
jmp
inc
popa
lret
mov
sub
ljmp
lcall
fsubr
test
jno
in
add
inc
add
ret
mov
shlb
push
aas
lret
les
loopne
mov
push
mov
sbb
cs
adc
jno
fsubp
std
bound
jmp
xor
gs
daa
add
or
test
hlt
pop
out
daa
imul
mov
pop
jns
fiadds
lods
leave
shlb
sub
push
mov
fildll
in
or
out
xor
stos
ss
cmpsb
add
mov
out
xchg
stos
or
icebp
into
dec
pop
leave
das
sarb
inc
adc
fidivs
sub
repz
sub
hlt
fisttpll
jno
arpl
xchg
push
lds
mov
inc
mov
mov
cmp
lock
inc
rcrl
rorb
movsl
imul
add
inc
pop
mov
scas
rolb
loope
inc
out
and
stos
add
xor
or
cltd
jmp
lds
add
sbb
insl
pushf
xor
jmp
push
aam
sbb
mov
xor
and
jno
outsl
cli
nop
inc
popf
rclb
lds
pushf
jp
sbb
sbbl
andb
mov
cltd
mov
lds
mov
out
pop
orl
mov
jl
xchg
cltd
push
and
mov
fcomi
xor
in
hlt
push
sbbl
imul
aam
xchg
lea
push
mov
cmp
lods
insb
push
cmpsl
pushw
xchg
pop
cmp
in
xlat
cmp
test
add
xlat
lret
hlt
stos
fwait
dec
jmp
push
dec
adc
test
and
mov
mov
mov
lods
push
or
sbb
movsl
xor
aas
mov
push
lcall
lgs
imul
fcomps
push
mov
pop
push
mov
aaa
mov
push
mov
mov
out
jecxz
cld
pusha
test
add
fnstenv
int3
add
push
nop
aad
es
bound
fcoms
loope
std
pusha
sbb
cwtl
ret
insb
or
popa
sti
sub
push
int3
sbb
pop
pop
cmc
lcall
in
loop
aaa
cltd
push
xlat
jmp
enter
fnstcw
pop
mov
inc
mov
and
enter
and
inc
fwait
scas
jl
inc
inc
dec
push
je
mov
movsb
mov
xchg
jge
roll
sbb
daa
xchg
out
aas
shr
clc
ss
or
scas
jg
xchg
mov
clc
add
pop
jo
vmwrite
inc
into
inc
dec
jnp
sarl
pop
dec
lret
adc
mov
ljmp
lret
xlat
xor
movsb
dec
xrelease
pop
add
insb
loop
mov
aaa
sub
sysexit
je
adc
push
xchg
mov
hlt
stos
inc
jne
fisubrs
fsubl
lock
ja
mov
and
or
jl
xchg
push
jp
test
dec
cmp
ror
pop
sub
push
dec
push
ret
jnp
adc
inc
push
xchg
inc
or
and
xor
add
jecxz
lock
xchg
push
test
dec
xchg
cmpsb
mov
roll
push
ret
cmp
ret
jo
fwait
pop
jmp
sbb
mov
dec
xchg
or
pop
clc
adc
test
inc
push
cmp
fisubs
jbe
test
sbb
cmc
jno
in
in
data16
add
jb
pop
and
fldt
mov
aaa
xor
xor
loopne
sub
sub
add
sub
mov
jl
add
xor
sahf
jl
xchg
cmp
push
roll
popf
flds
or
push
push
cmpsl
xor
jp
or
stos
sahf
std
rorl
out
fistps
rorl
in
sbb
push
sub
dec
sbb
dec
mov
jge
jl
in
xor
inc
mov
and
aam
movsl
out
mov
jmp
cmp
xor
mov
cmp
sbb
jmp
in
or
shr
jp
dec
les
test
pop
push
aad
mov
and
data16
jmp
int
inc
or
fsub
dec
icebp
jbe
jnp
sub
push
std
movsl
ljmp
sub
js
jmp
push
dec
addr16
dec
mov
mov
jnp
pop
stc
lods
xchg
adc
lods
dec
adcl
inc
or
enter
das
add
cs
imul
popw
and
leave
hlt
je
outsl
fbld
adc
mov
and
push
not
mov
pop
push
arpl
dec
loope
adc
adc
out
add
dec
jg
xor
aad
jns
push
bound
push
jns
push
rol
mov
inc
mov
sub
ret
outsb
mov
push
subb
lds
jl
xchg
lcall
dec
es
sub
in
cmc
std
xorl
outsb
in
push
dec
push
aas
lret
lret
test
jmp
divl
sub
test
leave
jg
sub
movsb
xchg
cmp
cmp
orb
push
call
out
cwtd
push
mov
jbe
xchg
mov
dec
jle
das
pop
inc
jecxz
shlb
test
inc
add
mov
dec
or
mov
inc
sub
lods
jmp
aas
loop
jns
xchg
mov
sub
test
adc
orb
mov
sbb
daa
mov
sti
pop
fsubs
dec
pushfw
pop
sub
enter
inc
mov
mov
nop
or
clc
rclb
pop
call
jno
leave
call
andl
fwait
xor
outsl
dec
lret
lea
xchg
subl
mov
cmp
dec
sbb
mov
arpl
sub
mov
sarl
pop
sbb
lods
push
add
lea
sub
add
dec
mov
test
and
mov
or
call
and
pop
cwtl
shlb
pop
ljmp
sbb
push
inc
xlat
jp
mov
mov
mov
lahf
clts
push
jne,pt
test
mov
dec
test
inc
add
inc
inc
shrb
testl
std
dec
sbb
ret
adc
repnz
adc
dec
xlat
sub
daa
rcll
mov
ds
xlat
stos
adc
repz
popa
lahf
add
inc
and
inc
movsb
pop
lret
push
lret
push
test
rcrb
mov
rclb
add
mov
xchg
stos
xor
out
xor
aam
jl
arpl
divb
or
dec
mov
frstpm(287
stc
out
scas
jbe
loop
out
addb
adcb
add
stos
mov
adc
sbb
jns
loop
jle
inc
idivb
incb
mov
inc
fstpt
cmp
cltd
add
mov
ds
add
lahf
dec
sbb
or
mov
ret
mov
popa
pop
cwtl
sbb
lret
inc
enter
add
gs
repnz
shr
iret
lret
pusha
jae
mov
xchg
push
mov
call
and
out
data16
or
adc
stos
mov
xor
ret
int3
cmpsl
mov
jecxz
xchg
jmp
or
shrl
dec
inc
xchg
out
mov
jp
jmp
hlt
adc
lea
inc
mov
aas
add
mov
fstpt
int
xlat
cmpsb
jmp
lret
cmp
std
pop
jnp
xor
movb
adc
xor
mov
loopne
arpl
jns
sbb
push
jp
insb
xor
pop
addb
lret
shll
call
dec
daa
pop
lock
jecxz
jmp
mov
shrb
clc
mov
cmp
aaa
mov
cmp
jl
inc
flds
push
aaa
sub
int
adc
inc
pop
popf
jne
or
rcll
clc
fildl
fmull
mov
les
fldt
mov
cmc
aad
pop
lods
mov
aas
loop
fimuls
call
inc
jo
rclb
adc
add
cwtl
icebp
lcall
sub
movsl
sub
xchg
jae
lcall
div
xchg
cmp
stos
jmp
scas
or
xlat
leave
filds
fcoml
mov
cmp
cli
cld
mov
cld
adc
ja
xor
fidivrl
push
pop
fistl
push
inc
inc
adc
stc
mov
nop
hlt
push
lret
negb
iret
dec
sti
mov
push
rcrb
repnz
sbb
xor
pop
ss
fidivrs
ss
movsl
test
mov
inc
push
mov
sbbl
leave
andl
push
xchg
jmp
repnz
push
and
cmp
mov
jge
out
movsb
mov
jl
lcall
xlat
pop
rcrb
mov
add
popa
pop
xchg
add
mov
cmp
out
aam
fisttpll
inc
push
cmovbe
orl
inc
sbb
fiadds
notl
push
or
mov
cld
fnstenv
or
adc
in
test
cmp
mov
or
cmc
cmpsl
filds
or
cmp
loopne
call
mov
cmp
mov
dec
cmpsl
rcr
mov
movsb
sar
adc
jae
push
int3
dec
std
rcrl
cmp
je
ret
add
dec
xchg
mov
out
dec
mov
cmp
pop
mov
stc
out
inc
dec
sahf
cmp
lods
mov
stc
pushf
mov
test
sub
pushf
or
mov
fisttps
andl
or
lret
sbb
int3
clc
arpl
xor
testl
sarb
lea
xchg
in
loopne
clc
xchg
ljmp
push
or
xchg
mov
pop
lods
mov
sarl
or
sahf
add
je
lds
jg,pt
mov
faddl
gs
loope
cmpsb
enter
add
xchg
mov
cmpsl
sub
leave
jl
mov
mov
xor
mov
or
sahf
mov
dec
imul
xchg
cld
addr16
mov
nop
xchg
call
mov
aaa
and
scas
mov
mov
xor
mov
mov
push
mov
inc
jns
push
sub
cmpsl
fs
mov
jge
ja
push
in
cmp
test
mov
imul
and
or
enter
daa
std
rcrl
push
ret
add
stos
cmp
dec
sub
test
mov
rolb
jl
pop
mov
out
pop
mov
arpl
jmp
mov
sarb
pop
dec
lret
mov
pop
xchg
mov
add
cli
das
sbb
mov
adc
and
push
lods
jp
mov
sub
add
xchg
and
sbb
adc
pop
xchg
jbe
inc
pop
dec
fnsave
outsb
jg
mov
mov
pop
lods
loopne
xor
imul
sarb
inc
xchg
repz
int
sbb
jmp
mov
insl
adc
push
cli
shrb
daa
push
jae
mov
sarl
fcomps
sbb
inc
in
push
push
lods
inc
mov
out
jmp
sub
dec
jb
subb
in
mov
insl
clc
stc
push
lea
lds
sbb
inc
sub
shl
outsb
ret
loop
mov
add
nop
cmp
and
push
leave
in
pop
int3
mov
pop
mov
test
jne
repnz
test
stos
mov
lock
mov
inc
decl
aam
pop
xor
inc
sub
dec
jbe
aaa
in
jp
popf
lcall
or
push
gs
mov
add
ljmp
gs
stos
adc
test
add
sub
call
rorb
mov
leave
ds
fcom
mov
iret
fadd
out
inc
add
daa
sbb
inc
jnp
in
inc
fs
mov
stos
lcall
jnp
dec
leave
mov
iret
test
aam
in
mov
or
pop
add
int3
mov
int3
sub
or
in
aad
push
negb
adc
cmpsl
stos
or
mov
pop
xor
inc
push
xor
add
sub
ljmp
roll
inc
loopne
testl
loope
cmp
xor
cld
aas
xchg
cmp
sub
negl
mov
bound
insb
cmpsl
lret
dec
mov
mov
lret
mov
jns
jmp
cmp
es
out
pop
add
testl
sbb
adc
cmc
sahf
xchg
mov
push
jp
push
mov
xchg
xlat
sub
inc
and
arpl
jg
sbb
add
ss
xchg
and
push
fistps
and
push
xchg
loope
cmp
xor
fs
xchg
dec
add
inc
or
and
iret
das
cltd
fidivs
scas
mov
lock
jae
jmp
fsubrs
loope
cld
jns
xchg
test
mov
out
mov
push
pop
cmc
xor
inc
bound
pushf
subl
stos
sbb
pushf
scas
jle
fdivrl
xchg
test
in
pop
dec
pop
sbb
repz
dec
mov
vmwrite
mov
cmpsb
mov
fistpll
fs
es
xor
add
mov
jle
jl
out
aaa
negb
loopne
inc
std
cmp
mov
dec
imul
jb
push
pop
xor
loopne
shlb
and
mov
dec
adc
rorl
cwtl
adc
std
adc
mov
and
in
cs
mov
sahf
pop
sahf
jne
mov
lret
jns
call
inc
pop
or
cmp
cmpsb
out
imul
adcl
fldt
clc
sub
add
inc
andb
mov
mov
or
popa
or
xor
inc
pop
push
orl
aam
addb
out
mov
jge
xor
in
repnz
mov
xor
data16
shlb
xor
jae
mov
pop
xor
or
loopne
xor
bound
sti
mov
cmp
fdivl
pop
push
inc
xchg
in
and
mov
sbb
mov
or
cmp
lcall
mov
inc
jns
cli
mov
xlat
pop
arpl
cmp
ret
cmc
inc
cld
sub
test
jbe
xor
jb
pop
and
iret
and
adc
cmp
or
orb
push
push
xchg
cmpsl
mov
push
add
mov
divb
pop
mov
dec
mov
test
mov
aam
xor
jne
xchg
sbb
cmp
hlt
push
cmp
ljmp
xor
mov
int
nop
jle
popa
pop
push
mov
push
adc
mov
nop
xor
test
cmpb
fisubrl
mov
outsb
inc
das
hlt
xor
mov
iret
lds
jb
mov
pop
sbb
ss
cmpsb
cld
int3
and
lea
mov
jae
push
mov
mov
push
sub
lods
inc
or
dec
xor
addr16
adc
jbe
hlt
jmp
mov
das
rclb
mov
int
dec
divb
pop
cmp
repnz
lcall
ret
pushf
std
pop
xchg
mov
mov
jbe
mov
sbb
xchg
mov
gs
dec
lahf
mov
adc
adc
mov
arpl
ds
clc
aad
inc
sub
mov
sub
xor
out
jp
and
cmp
idivb
mov
ret
xor
cld
adc
xchg
loopne
lahf
repz
cmp
jne
sub
add
adcl
mov
inc
pop
or
mov
call
imul
lcall
shl
jb
fisttpll
dec
pusha
insb
lahf
dec
add
shrl
out
jg
push
cmp
pop
int
or
push
jg
adc
xor
cmpsb
rorb
push
mov
and
das
pop
repz
sahf
pop
dec
je
popf
or
mov
outsb
dec
aad
inc
mov
sbb
hlt
xchg
cmp
rcrl
add
in
aaa
xor
xchg
add
daa
imul
mov
mov
inc
jnp
sbb
xchg
sbb
jle
mov
lcall
arpl
mov
test
ds
xchg
mov
adc
add
pop
into
xchg
xlat
aad
pop
cmpsb
gs
rol
dec
xor
inc
outsl
outsl
or
je
sahf
adc
lahf
cmp
test
nop
pop
xchg
inc
loopne
sub
inc
xchg
pusha
shrb
xor
hlt
dec
in
jns
inc
inc
repz
mov
cmp
or
movsb
xchg
pop
xchg
gs
jge
dec
in
xor
xor
cmpxchg
push
hlt
sbbl
jle
outsl
xchg
add
pop
jp
stos
dec
inc
or
cmp
pop
or
add
sub
mov
les
rcrb
jecxz
push
add
jnp
push
test
bound
push
push
jl
sbb
xor
ljmp
popa
xor
mov
dec
cmp
loop
outsl
fwait
test
sbb
xor
stos
mov
xchg
decl
jbe
sub
cmp
js
movsb
mov
outsb
jbe
dec
in
fisttpl
cli
jmp
mov
adc
mov
mov
sbb
sbb
movsb
push
in
push
push
add
ja
xor
jp
jo
pop
sub
and
nop
or
cld
movsb
int3
jns
pop
sarb
bswap
cmp
push
or
idiv
lods
inc
xor
inc
inc
call
push
xor
std
add
icebp
fnstenv
xchg
jns
add
fmull
pop
stos
pop
adc
dec
out
add
dec
pop
fidivrl
push
cmp
dec
or
push
out
sarb
ds
int3
stos
add
insl
sub
pop
jl
movsb
arpl
repz
mov
fildll
mov
inc
mov
data16
aaa
inc
das
arpl
addb
je
popf
push
jg
mov
jo
mov
mov
pop
cmp
dec
mov
mov
lcall
movsl
leave
xchg
shl
push
xchg
pop
mov
mov
sub
in
pop
xchg
andl
push
jo
fcoms
arpl
push
sub
pop
or
outsb
lea
insb
lret
testl
std
fldl
adc
test
jnp
pop
dec
into
fcomps
jno
and
mov
mul
sbb
and
fsts
mov
stc
sarb
mov
add
mov
cltd
aaa
xor
mov
loope
dec
jl
adcb
add
mov
aas
int
in
xchg
mov
inc
adc
and
xchg
ret
xchg
cmpsl
fmul
lods
push
das
les
scas
xchg
data16
mov
xchg
xor
int3
lods
cltd
imull
scas
push
and
pushf
mov
xor
push
sbb
test
jns
stos
push
jecxz
aad
push
or
lds
push
and
xor
dec
and
jge
lods
mov
nop
pop
aam
into
insl
gs
ret
dec
rcrl
orl
std
ljmp
outsl
mov
inc
pop
sub
negb
jp
jmp
and
mov
mov
stos
orb
into
gs
out
xor
scas
xchg
test
adc
inc
mov
divl
add
inc
stos
sub
cltd
jle
imul
push
cmpsl
pop
call
pop
faddl
dec
dec
shll
in
int
xchg
push
dec
loop
aam
stc
push
or
or
add
leave
fidivrl
xchg
mov
adc
lods
sbb
fcomps
dec
mov
roll
or
inc
loope
pop
xor
xchg
inc
loopne
sub
ss
das
pop
xchg
cltd
pusha
mov
repz
out
int3
fiadds
daa
idiv
xchg
fs
mov
pop
call
ret
out
cs
fwait
mov
pop
subl
or
adc
jno
shll
inc
int
xor
movsl
icebp
add
cmp
lret
cmp
cli
push
movsb
mov
mov
and
xor
pop
pop
dec
je
gs
insl
cmp
push
push
mov
xchg
mov
push
dec
sbb
scas
daa
xor
repnz
jbe
xor
dec
movsl
repz
cwtl
adc
or
divb
cmp
pop
xchg
into
pop
ja
sub
xchg
aaa
icebp
fcmovu
leave
xchg
popa
xor
sbbl
inc
mov
lods
dec
in
aad
lcall
je
mov
cli
mov
mov
xchg
lret
je
hlt
popa
dec
push
ret
add
sub
push
call
jo
out
mov
mov
shlb
sbb
shl
mov
test
push
rcrb
std
int3
dec
mov
int
mov
push
addr16
push
sbb
cld
call
popa
in
cmp
aad
shrl
push
movsb
fistpl
fidivrs
sub
mov
fmul
xor
ljmp
popa
ret
shlb
push
or
daa
std
movsl
dec
mov
ss
orb
daa
xor
imul
pop
cmp
mov
stc
sub
fstps
pop
mov
dec
in
mov
add
xor
dec
shrb
push
lcall
push
push
jnp
shrl
scas
pop
adc
cli
push
and
dec
aas
popa
movsl
cwtl
cmc
pushf
or
scas
mov
pop
pop
outsb
xchg
clc
repnz
icebp
shl
pusha
enter
sarl
mov
aaa
sbb
sbb
adc
mov
jp
bound
cmp
jp
pop
inc
hlt
push
pop
dec
jns
movsl
pushf
lock
movsl
aas
int3
pop
ret
out
ja
ficomps
and
xor
mov
xchg
mov
movsb
sub
out
in
fistpll
mov
adc
push
jg
js
or
xchg
ret
lahf
cwtl
rcrb
int3
rclb
push
mov
add
jmp
imul
xchg
sar
cmp
mov
and
push
and
mov
pop
mov
ret
mov
mov
pop
rclb
push
mov
dec
xchg
jmp
addl
mov
cli
pop
arpl
fs
out
out
data16
outsl
mov
pop
adc
sahf
and
inc
pop
mov
sub
cld
mov
sub
jle
inc
sub
push
idivb
out
in
and
je
fdivr
sbb
cmpsb
mov
loop
and
jb
jnp
mov
push
sbb
sti
scas
cmc
or
xchg
aad
int3
xor
push
jge
mov
add
sbb
stos
xchg
xor
add
decb
in
ja
push
or
bound
adc
je
sarb
test
mov
push
jmp
lea
in
pop
or
aaa
cmp
jge
andl
outsb
lret
mov
repz
mov
out
faddl
xchg
adc
sti
xor
mov
cmpb
push
inc
sbb
mov
lret
pop
xor
inc
mov
sub
loope
fcoms
icebp
mov
cmp
sub
mov
xlat
int3
xchg
pushl
xor
rorb
negl
and
ljmp
dec
mov
lahf
test
sub
xor
xchg
out
lcall
xor
xchg
mov
cmp
popf
cmp
rclb
pop
or
sahf
adc
xorb
decl
out
and
fwait
popf
out
jnp
fucom
icebp
sbb
or
jge
jne
fimuls
add
shrb
inc
xlat
dec
lods
inc
xor
cwtl
inc
mov
jno
mov
pushf
xchg
in
pop
lods
pop
xchg
push
lea
sbb
popf
lahf
and
mov
int3
outsb
sbb
fwait
cmc
insb
push
dec
cmp
in
mov
sbb
and
cmp
mov
or
jnp
cmpsb
jecxz
inc
mov
or
aad
icebp
mov
mov
add
imul
rcll
add
sarb
ret
push
ja
xorb
lock
xchg
imul
mov
mov
std
into
mov
pop
repz
out
dec
jg
mov
xchg
cld
fsubr
lods
cmp
mov
jp
in
sbb
decl
push
mov
xor
ds
xor
faddp
sbb
aad
loop
pop
mov
xor
lods
ljmp
jns
in
adc
div
lods
mov
sbb
insb
daa
aaa
sub
push
mov
out
mov
cmp
jle
ret
pop
fs
popf
sub
mov
xchg
push
repz
test
push
xor
jle
lods
sub
sarb
loope
lahf
lret
jmp
arpl
push
or
in
fsub
xchg
pop
inc
in
or
dec
mov
xor
mov
push
std
cmovs
and
dec
pop
sbb
inc
adc
pop
cmp
mov
movsb
cld
outsb
idivl
jg
inc
rolb
dec
sbb
cwtl
in
fldcw
or
sbb
xchg
out
xchg
jp
iret
jle
jbe
xchg
lods
adc
mulb
andb
mov
arpl
lods
pop
push
mov
imul
stos
push
out
xor
sub
clc
orb
pusha
ret
and
sub
scas
pushf
adc
shlb
clc
loop
or
dec
xchg
int3
outsb
lahf
loopne
sbb
std
add
roll
gs
ja
jmp
dec
arpl
les
xlat
sarl
bound
sub
jne
mov
fdivr
sti
loopne
inc
movsb
das
jmp
pop
adc
int
fwait
cmp
inc
inc
nop
cs
mov
inc
dec
xchg
rclb
jne
test
addr16
lea
fsts
and
aaa
adc
or
je
xchg
roll
dec
push
inc
xchg
bound
xchg
and
lret
adc
mov
mov
ret
pop
popf
mov
cmp
sarl
bound
jbe
sbb
mov
std
lds
mov
jp
mov
adc
jnp
jb
xchg
int
scas
mov
pop
dec
add
loope
and
js
mov
push
lret
dec
and
mov
jae
cwtl
shl
and
dec
xchg
or
push
jbe
cmp
mov
sub
data16
lds
cld
das
mov
xchg
aad
jle
icebp
push
addr16
jb
scas
and
jns
neg
mov
mov
mov
push
pop
mov
sarb
shlb
stos
sbbb
push
inc
push
jmp
jp
and
outsl
rcll
lahf
shl
sbb
add
bound
scas
pop
and
mov
cmp
aad
cmp
cmp
and
add
jno
aad
cmp
dec
insl
es
enter
lret
scas
cmp
pop
loop
inc
mov
push
cmp
nop
shll
mov
imull
pop
mov
pop
cmpsb
hlt
lds
cmpsb
testb
or
xor
inc
call
aas
cld
das
movsb
out
jnp
rolb
clc
stos
xor
sub
or
jb
lock
mov
int3
pop
negb
sbbb
rorl
mov
xchg
scas
hlt
or
jl
mov
sahf
sbb
loop
dec
imul
popa
mov
pop
push
movsb
sahf
imul
mov
aaa
jb
cltd
cld
xor
test
rcrl
fsubl
xor
pop
xor
pop
inc
cmp
ret
jae
jp
push
into
lcall
mov
fidivrs
xor
aas
aad
or
sbb
lds
adc
push
sub
sti
mov
add
in
int
test
mov
add
or
inc
aas
push
sbb
repz
fstpl
insl
fldenv
cmpsl
xchg
jg
mov
cwtl
scas
jbe
je
movsb
or
inc
push
sub
test
xchg
aaa
and
das
lods
jg
testb
jbe
clc
cmp
xor
sti
pusha
repz
test
sub
xchg
inc
mov
test
pop
pop
dec
jbe
insl
lret
push
cmp
clc
imul
inc
jmp
dec
xor
inc
mov
loopne
add
pop
ja
bound
push
fwait
cltd
and
cmp
js
in
xlat
ljmp
jnp
and
daa
loope
das
sub
jl
mov
or
bound
cmc
loop
and
mov
sub
push
ja
mov
aaa
push
arpl
mov
jl
fdivr
inc
mov
mov
pop
lret
cmpsl
gs
cld
cmpsb
call
mov
jbe
mov
fwait
sbb
insb
iret
mov
and
fmul
or
pop
repnz
ljmp
fcom
xchg
mov
xlat
insl
fldt
icebp
push
imul
jge
iret
push
pop
aad
xlat
push
int
addl
sub
in
movsb
test
fmulp
mov
and
lret
cmp
mov
push
lea
push
fadds
or
jmp
xor
sub
jbe
mov
push
lcall
dec
sbb
mov
sahf
vmovlpd
lds
cmp
lret
pop
add
mov
sti
and
icebp
incb
fdiv
inc
mov
daa
divl
cmpsb
call
ja
daa
lods
je
xchg
psubsw
lea
mov
mov
and
and
or
push
pop
dec
ja
sbb
xor
lret
out
std
loop
and
sbb
aad
xor
or
jbe
jle
and
nop
xchg
jne
add
test
outsb
inc
ljmp
cmp
insb
test
jnp
lahf
jg
push
outsb
jle
imul
mov
fisttpll
imul
and
and
popf
in
popl
in
sub
xor
cli
xor
dec
sub
sbb
push
adc
cmp
fidivrs
into
dec
pop
scas
ror
push
add
movsb
push
cmp
lea
popa
sti
cmp
shlb
sub
xchg
dec
and
push
stos
lret
sahf
inc
lret
and
sub
imul
cmp
sub
arpl
or
cli
adc
shll
cs
movsl
stc
insl
nop
icebp
shl
and
rol
in
inc
iret
and
sub
mov
mov
jb
jns
mov
fwait
or
out
xchg
xadd
dec
xor
push
jb
dec
ss
or
mov
push
aam
jp
scas
pusha
inc
cltd
mov
xchg
fidivrs
dec
pop
arpl
add
xchg
ud2
in
cwtl
fadds
test
xchg
pop
mov
mov
es
mov
sbb
subb
arpl
aam
sbb
mov
cwtl
push
jecxz
out
cmp
pop
sub
rolb
pop
mov
inc
fstl
fsubs
and
cmpsl
ret
outsb
data16
mov
scas
sar
cmp
xor
std
rolb
in
int3
cmp
out
ds
out
rorl
mov
lea
sti
fists
add
jno
mov
push
aad
add
mov
mov
fs
addr16
mov
movsb
pop
lcall
cmp
int
out
daa
push
int
lahf
push
imull
push
jne
cli
and
cmp
fdivrl
cmp
shrb
jmp
adc
lahf
add
cmpsl
cli
aad
cwtl
stos
popf
mov
enter
xor
in
and
sbb
mov
push
inc
or
enter
mov
adc
shll
inc
gs
jno
in
push
aam
lds
setne
pop
mov
xorl
les
out
jnp
std
mov
inc
add
roll
pop
mov
mov
mov
ficompl
mov
cmp
insl
loopne
lcall
xchg
sub
rcrb
outsl
popa
pop
dec
xor
push
in
fs
mov
inc
loope
je
hlt
cmpsb
fimull
cli
call
pop
mul
xchg
fwait
adc
into
addr16
mov
push
xorl
mov
aad
or
xor
in
int3
mov
lret
jge
xchg
rorb
jns
out
testb
dec
call
stc
insb
pop
fcompl
mov
pop
inc
xchg
mov
shl
jae
fidivrl
adcl
xor
inc
lret
mov
rcrl
adc
out
jecxz
mov
xchg
sub
mov
into
loope
jl
or
daa
add
mov
adc
jmp
aaa
sbb
gs
enter
lcall
or
jne
lar
xchg
and
ficoml
out
mov
ljmp
lods
movsl
pop
clc
mov
and
push
or
repnz
xchg
xchg
imul
in
rcl
mov
xchg
or
ret
mov
test
inc
cwtl
out
dec
xor
sbbl
mov
push
fbstp
jno
iret
mov
xchg
fxch
pop
pop
popf
insl
mov
test
jl
dec
cmp
jne
xchg
pop
mov
pop
je
or
mov
sbb
cltd
mov
mov
out
mov
scas
ja
out
lcall
cmp
addb
dec
xchg
aam
mov
outsl
dec
sub
jecxz
xorl
xorb
sub
lock
testb
ljmp
ja
cmp
pop
inc
dec
cmpsl
test
test
sbb
inc
not
loop
daa
push
out
xchg
xor
add
add
in
daa
push
lods
lock
loopne
out
dec
fadds
aad
lret
pop
lcall
sbbl
popf
pop
mov
mov
leave
sbbb
or
into
pop
mov
sbb
inc
arpl
push
jns
cmpsb
mov
sbb
dec
test
mov
xchg
cmp
and
ret
loop
lds
fimull
sub
lock
xor
imul
insl
insl
lods
cmc
inc
push
sub
out
aam
cmc
lret
xor
enter
sarl
testb
and
inc
test
xor
push
fistl
push
jmp
or
out
icebp
push
or
popa
iret
push
in
movsl
mov
sbb
movsl
sub
or
jecxz
pusha
and
fsub
pop
loope
je
adc
inc
into
fstpl
lahf
bound
gs
xor
pop
mov
in
and
repnz
cs
fs
movsl
out
xor
push
xchg
ja
fdivrs
or
adc
dec
mov
dec
movsl
xchg
out
adcl
out
cli
add
or
xor
mov
jns
mov
punpckhdq
sbb
scas
jnp
rep
or
push
cmp
aam
inc
outsb
mov
add
imul
inc
push
mov
int
adc
add
daa
ds
jp
and
les
notb
sbb
hlt
pop
aas
sub
test
outsb
cmp
in
adc
dec
adc
test
push
adc
and
add
ds
shll
and
loope
mov
jg
clc
mov
mov
sub
or
or
in
and
and
mov
mov
div
pop
ror
out
je
sti
fs
sbb
lea
mov
and
cmc
aaa
into
sbb
and
stc
push
xorb
popf
outsb
push
ficoms
jne
or
shrb
push
pop
push
add
mov
add
xor
sbb
pop
sbb
sbb
dec
or
mov
dec
repnz
add
popf
aas
jns
adc
fidivrs
stos
in
push
and
cmpsl
xor
jnp
and
in
loop
mov
jp
push
cmpsb
xchg
push
push
adc
xor
inc
fwait
add
scas
in
jb
leave
inc
imul
adc
dec
mov
in
xor
add
sub
ret
stos
testb
jle
ret
mov
pop
lods
push
inc
jnp
mov
xchg
je
clc
fldenv
xchg
shlb
sbb
inc
cmp
leave
or
sbb
or
int3
cmp
aam
xchg
shlb
mov
js
push
inc
clc
adc
mov
cltd
adc
mov
sub
inc
subb
dec
loopne
enter
movsb
push
ljmp
cs
cmp
or
sbb
push
ss
ret
out
out
shll
or
stos
lods
mov
adc
and
adc
add
mov
test
hlt
hlt
cmpsl
dec
jno
loop
lret
xlat
aas
and
addr16
xchg
repz
inc
inc
int
imul
adc
sbb
xor
mov
sbb
inc
mov
or
push
pop
inc
push
cld
sbb
scas
lret
fdivrp
insl
cmp
rclb
add
cmp
xchg
mov
hlt
sarb
pop
std
fnsave
and
inc
ljmp
push
jmp
gs
adc
shll
sub
mov
pop
cmp
in
insb
fdiv
jmp
add
pop
xlat
and
mov
sub
aaa
xchg
push
xorb
pushf
adc
jnp
xorb
ljmp
insb
ss
in
mov
imul
xchg
fisttps
movsb
and
je
jle
nop
push
ret
popa
cmp
leave
sar
jae
adc
cmpsb
stos
xor
lods
icebp
push
adc
pop
add
and
dec
mov
inc
mov
adc
ljmp
aad
add
scas
popf
sbb
cmp
mov
lret
sbb
and
pop
sub
mov
jg
adc
mov
adc
repz
or
fisubl
add
jne
inc
adc
or
idivb
push
add
stos
pusha
stc
adc
je
and
sbbl
xchg
sbb
aam
repz
inc
ljmp
mov
cld
insl
inc
rorl
les
mov
fdivs
pop
jl
loope
push
inc
mov
daa
add
int
mov
add
test
cltd
imul
mov
cmp
jmp
mov
addr16
xor
push
push
pushf
repz
sub
inc
push
mov
mov
loopne
cmpsl
add
ja
int3
push
xorl
cli
push
mov
add
xor
or
xchg
push
popf
dec
fistps
insl
sahf
loop
stc
sub
addr16
fst
in
scas
cmpsl
add
push
cmp
pop
push
mov
insb
addb
push
add
repnz
xchg
mov
repnz
push
lret
adc
sub
push
push
rolb
enter
cmp
shll
mov
and
mov
sahf
dec
lcall
pop
outsb
out
ljmp
xchg
jecxz
imul
addr16
fisubrl
and
jae
sbb
repnz
repz
loope
lret
icebp
pop
rorl
std
jnp
mov
mov
jae
push
insl
stos
adc
jae
pop
mov
jecxz
stos
std
sbb
add
cmp
cli
jle
scas
push
adc
or
inc
lock
fst
aam
push
adc
jle
in
fisttpl
insl
mov
clc
xchg
pusha
cmp
cli
leave
aad
jns
mov
loope
adc
pop
cmpsl
aas
test
pop
mov
push
repz
sbb
in
mov
cmp
cmp
movsb
cmp
leave
jnp
sbb
test
js
and
jl
xchg
repnz
push
scas
inc
push
sbb
je
stos
mov
es
pusha
mov
sbb
ja
mov
xor
xchg
xchg
mov
std
mov
in
jmp
sbbl
mov
out
sbb
adc
pop
push
call
fsubs
mov
ficoms
or
int3
stc
mov
or
and
and
mov
das
inc
push
icebp
mov
and
lods
dec
mov
fcmovb
adc
inc
mov
inc
stos
mov
fldcw
test
dec
aam
push
sarb
iret
outsb
add
sub
subl
sub
je
repnz
iret
cs
fisttpl
or
lds
mov
testl
cli
ret
loop
mov
out
stos
out
xor
loopne
enter
add
xor
out
adc
into
or
jmp
ljmp
adc
cmpsb
and
ljmp
cmp
mov
xor
mov
in
icebp
mov
hlt
add
xlat
imul
fbstp
aam
in
cmp
pop
sub
inc
sbb
cmpsl
xchg
fs
add
or
xchg
mov
sub
lds
mov
in
dec
cwtl
lret
inc
sbb
lea
cmp
imul
into
inc
in
dec
mov
popa
imul
mov
xchg
mov
rcrl
xchg
adc
xchg
push
lahf
pop
pusha
push
leave
or
cmp
lock
or
insb
dec
adc
hlt
push
js
loop
leave
imul
loopne
aam
mov
outsl
xor
xlat
sbb
sub
nop
cvtps2pi
aam
in
cmp
cmp
pop
fistl
imul
mov
in
pop
lcall
lods
mov
mov
popa
jb
in
push
mov
mov
in
lds
mov
sbb
cmp
mov
pop
cmp
or
mov
xchg
add
cli
int
and
jne
mov
ret
sub
adc
mov
pop
arpl
mov
add
rorb
out
dec
cmp
mov
ret
addr16
std
sahf
outsl
out
loope
push
cmp
test
mov
add
jbe
arpl
pushf
jmp
lahf
mov
cmp
xchg
mov
movsl
aas
cmp
pop
pushf
ljmp
mov
sbb
lahf
outsl
inc
or
push
stos
xchg
cli
add
inc
outsl
scas
jae
les
mov
shl
mov
and
mov
sub
and
cmp
rcl
clc
aas
iret
add
jne
mov
sahf
xor
out
into
test
add
leave
notl
outsl
cmp
add
loopne
xchg
cmp
push
out
xor
or
push
outsl
shlb
loope
push
xchg
xchg
repnz
ret
or
arpl
push
int3
fsubs
mov
adc
mov
mov
dec
mov
mov
pop
movsl
insb
and
add
rorb
lret
jl
aad
int
repnz
negb
fsubs
push
add
jl
pop
arpl
and
push
js
ja
ret
push
cmp
mov
loopne
scas
sarl
inc
dec
adc
ljmp
aaa
gs
add
addr16
outsl
xchg
cmp
mov
push
push
mov
sbb
mov
cwtl
xchg
subb
jne
out
dec
mov
sar
mov
dec
iret
and
jae
jmp
test
xchg
dec
lret
repz
fsubrs
mov
pop
and
xchg
stos
dec
mov
or
sbb
xor
mov
aam
mov
mov
into
cwtl
jg
dec
mov
mov
mov
mov
jo
andl
popf
and
int3
jno
mov
divl
dec
stc
mov
scas
adc
cli
pop
mov
dec
outsb
fisubrs
mov
or
xorl
sbb
das
inc
std
ds
push
add
sub
movsl
pop
and
fisubrs
lret
fisubs
addb
cmp
mov
idivl
jae
push
paddb
jo
cs
and
cmp
mov
sub
int
jp
adc
sub
jnp
xchg
inc
out
fidivl
stc
pusha
mov
jp
pop
cmp
xor
jg
push
xchg
lods
push
mov
pop
mov
loop
std
mov
shll
pusha
ljmp
in
dec
jno
pop
push
pop
inc
or
push
push
mov
aas
negb
and
or
call
cli
das
sub
xchg
xchg
jle
xorl
ss
mov
into
mov
add
xchg
stc
mov
jmp
sub
stc
outsb
adc
sbb
adcl
and
lcall
or
xchg
test
mov
jb
fidivs
inc
xchg
and
pop
adc
imul
rcl
pop
iret
mov
cwtl
movsb
into
insb
xor
mov
and
lret
and
mov
adc
clc
cmp
aad
fwait
idivb
xor
pop
fisttps
jl
fbstp
pop
loopne
popf
sub
pop
mov
xchg
scas
or
add
jmp
pushf
mov
lcall
or
xor
cld
mov
mov
adc
or
out
outsl
push
xor
push
scas
shrb
jno
dec
and
push
mov
rcrb
xchg
jns
in
outsl
cmpb
pop
jge
mov
int3
dec
cmpsb
inc
jge
cli
in
insl
xchg
cmp
mov
scas
in
cli
adc
sbb
jb
sahf
pop
iret
test
sbb
iret
in
mov
dec
call
insl
into
sbb
add
push
js
fcmovnbe
add
pop
sub
mov
cmpsb
lcall
mull
cld
mov
lods
movzwl
jnp
mov
lock
adc
loope
xor
mov
inc
ljmp
lahf
mov
loope
incb
ljmp
mov
outsl
or
clc
xchg
cli
fldenv
xor
fcmovnb
inc
frstor
call
loopne
setge
and
xorb
shll
enter
push
mov
sbb
lds
cltd
and
jns
mov
pop
aad
incb
pop
push
shll
stos
sub
fcomps
cmp
test
pop
dec
test
ret
push
mov
call
xchg
add
cs
jge
xchg
jnp
dec
mov
aaa
mov
sub
push
mov
clc
or
es
stos
or
and
jnp
mov
ror
dec
rcl
nop
add
sub
je
pop
mov
lock
scas
lds
push
and
inc
xor
aad
sbb
loopne
subl
mov
jo
clc
notb
inc
test
cmp
fildl
mov
ror
imul
aas
push
out
mov
dec
cmp
mov
or
pop
add
scas
push
aam
je
mov
add
add
gs
mov
shll
testl
cmp
call
subb
pop
test
lahf
lods
scas
out
imul
push
int3
adc
daa
cmp
xchg
scas
addr16
add
pushw
sbb
sub
mov
and
pop
pop
xchg
icebp
push
xor
minps
rolb
loope
je,pn
je
pop
fwait
sub
xlat
push
mov
fs
inc
push
scas
sub
adc
arpl
push
std
fsts
sti
push
stos
lea
lahf
dec
dec
mov
test
or
push
xor
stc
shll
inc
xchg
xchg
repz
pop
int3
push
mov
or
xchg
iret
insl
mov
roll
adc
fisubs
in
sbbb
or
in
ss
ss
cmp
jbe
xchg
das
dec
in
popf
out
loopne
xor
mov
in
pop
jnp
sbb
rorl
inc
push
mov
repz
mov
adc
mov
xchg
movsb
fmull
mov
xor
adc
adc
adc
and
push
mov
xchg
or
jne,pn
push
psubw
stc
pop
adc
pop
mov
enter
aam
pop
and
daa
jl
std
add
lcall
mov
or
lea
xor
insl
jmp
mov
xlat
mov
xor
fisubs
xchg
imul
in
in
pushf
pop
sbb
and
push
mov
jmp
mov
push
std
push
scas
loop
divb
mov
movaps
fs
and
rcl
sub
in
cmc
mov
fmull
xchg
add
dec
and
mov
pop
and
fnstcw
stos
or
jecxz
rorb
push
fsubrs
dec
jmp
addr16
sub
repnz
xchg
dec
ret
test
push
xchg
pop
enter
stos
sub
pop
pop
push
xchg
cld
out
and
push
out
in
bound
lret
mov
lea
jb
outsl
adc
flds
in
stc
arpl
inc
not
test
insl
and
mov
mov
mov
in
fbstp
aam
test
mov
fucomi
jl
xor
jp
mov
out
loope
frstor
cmp
and
orb
dec
add
push
pop
test
lcall
adc
xor
je
cmp
or
jns
out
cmp
rorl
outsl
xchg
xchg
jle
pop
out
ficomps
pushf
das
sbb
inc
icebp
stos
aad
xchg
loope
leave
cmpsl
fidivrl
into
mov
dec
lods
mov
add
fldl
les
ret
into
pop
das
adc
mov
lret
std
test
loop
and
cmpsb
rorl
insl
mov
pushf
pop
popf
repnz
fdiv
xchg
sub
ficomps
pop
and
sub
fucom
mov
cmp
imul
pop
sbb
add
movsw
daa
and
in
dec
sarl
xor
repz
out
sub
add
mov
xchg
push
cmp
insl
mov
in
decb
xchg
inc
sbb
adc
dec
xlat
lds
or
pop
aas
in
fidivs
std
xor
out
imul
or
ret
inc
iret
push
sbb
sahf
test
test
out
arpl
lret
inc
add
dec
mov
or
jecxz
in
jno
cmp
lret
in
out
push
jl
bound
sub
inc
aam
ss
pop
test
mov
mov
inc
movsl
imull
fdivl
loop
add
dec
test
shrb
rorb
orl
and
dec
notb
out
sub
xchg
loopne
shlb
xor
insb
mov
imul
cwtl
outsb
dec
les
sbb
movsl
or
outsb
jp
loopne
nop
sub
mov
xor
jae
dec
fsin
ficompl
lahf
xchg
inc
scas
jns
dec
loope
push
adc
fmull
lcall
fsubr
push
movsb
fmulp
xor
sub
cld
leave
and
sub
dec
mov
stc
cmpsl
inc
or
mov
dec
sahf
cmpsl
ldmxcsr
add
cmp
pop
xor
js
mov
xorb
sbbl
out
mov
pusha
ffreep
mov
in
pop
ljmp
aaa
mov
xchg
sub
insb
adc
xor
orb
or
cmp
cmp
adc
mov
sbb
test
rcrl
pop
mov
repnz
in
xchg
sbbb
inc
add
jbe
idivb
insl
aad
cmpsb
mov
sbb
sub
outsb
push
xchg
dec
arpl
xor
sahf
call
pop
fdivr
addr16
aad
pop
ss
or
push
lds
ficomps
lods
jp
rclb
movsb
pop
adc
jle
xor
pop
sti
cmp
lahf
sub
test
cmp
inc
mov
cltd
clc
jnp
icebp
in
scas
test
or
push
xchg
ficomps
inc
bound
repz
aaa
xchg
pop
jmp
xchg
ss
pop
mov
inc
ja
jle
add
addb
inc
push
mov
repz
mov
inc
fistpl
aas
cltd
sub
mov
add
js
fistpll
inc
ja
inc
popw
push
lcall
mov
xchg
cltd
sahf
mov
cmpsb
js
mov
mov
mov
add
repnz
xchg
es
ja
outsl
insb
or
aas
outsb
scas
inc
outsb
shrl
cmp
jb
inc
jl
test
or
std
sbb
and
int3
jo
xchg
adc
sbb
pushf
repz
gs
cli
xlat
pop
cli
or
lret
js
int
gs
pop
adc
mov
fisubrs
xorb
div
fdivs
lock
sti
loop
pop
cmp
jg
ljmp
shll
cmp
xchg
out
lahf
sub
rorl
popa
test
movsb
and
mov
push
pop
fidivrl
mov
inc
adc
int3
test
sub
jl
sbb
fimuls
rorb
cmp
out
subl
jnp
dec
push
inc
cmc
orb
aaa
mov
or
lret
cs
test
xchg
or
lds
mov
xchg
incb
pop
xor
subl
fs
dec
push
leave
ljmp
leave
in
lds
shll
test
adc
push
sbb
scas
mov
inc
push
sub
cmpsl
mov
sti
fstpl
pushf
mov
lds
decb
xlat
or
pop
loop
push
inc
pop
push
icebp
negl
subl
jle
and
clc
pushf
jge
jo
clc
xchg
out
stc
negl
mov
jge
xor
pop
aad
sbb
ficoms
lds
js
mov
in
mov
push
clc
pop
roll
dec
pop
mov
sbb
movsl
stc
xchg
mov
push
out
sub
add
xor
cmpsl
andl
pop
out
mov
aam
lods
jno
mov
jno
cltd
call
addr16
ret
cmp
mov
jb
outsb
daa
inc
lret
test
aas
lret
mov
test
jb
mov
mov
dec
add
mov
push
cmp
or
ja
ss
and
mov
or
outsl
in
sbb
sub
xor
add
add
aad
inc
rcll
test
push
cmc
addr16
push
mov
inc
mov
dec
xor
jno
sub
xor
xchg
dec
outsl
movsb
ret
sbb
xor
andb
in
mov
sub
jne
test
xor
inc
nop
cmc
mov
and
push
cmp
and
in
mov
call
shl
jno
push
inc
mov
xchg
adc
or
xchg
popf
cmp
adc
movl
pop
mov
mov
movsl
std
xchg
xchg
mov
cs
pop
sbb
lods
scas
mov
inc
dec
cmp
pop
movsb
sbb
jbe
popf
inc
mov
testl
stc
jno
out
push
inc
cltd
mov
ss
cmp
fsubl
cmp
inc
mov
orl
rorb
mov
jp
fdivrs
cmp
mov
mov
rorb
push
cmpsb
lds
sub
int
mov
test
and
dec
mov
sub
idivl
pop
push
inc
idivl
and
int
std
fnstenv
loop
hlt
sbb
mov
cmp
aaa
dec
hlt
sub
dec
loopne
and
push
out
jno
xchg
sbb
mov
add
sub
and
addr16
test
jnp
les
fmul
and
pop
mov
adc
cmp
ljmp
shrl
add
loope
outsl
movsl
std
imul
push
subl
in
mov
in
sbb
xor
gs
cmp
je
call
std
es
sbb
push
or
aaa
aam
pop
xchg
add
push
or
lock
push
pop
jo
push
enter
mov
mov
ret
cs
inc
je
aas
sbb
pop
mov
rsm
mov
testb
pop
jmp
mov
test
sub
das
fwait
jbe
movsb
lret
addr16
ss
jno
repnz
sbb
rorl
jecxz
and
leave
inc
das
sub
outsl
repz
pop
pushf
cwtl
sbb
out
xchg
or
xlat
stc
xlat
lods
sarl
cld
sub
mov
push
fnstsw
inc
dec
subb
sbb
adc
push
dec
rorb
xor
pop
mov
mov
xor
sub
neg
je
ja
xor
insl
insb
dec
pop
pop
add
push
loopne
jnp
jae
jno
pop
mov
daa
lret
inc
pop
or
clc
sbb
scas
xchg
aaa
ret
pop
mov
sti
mov
add
xchg
mov
test
adc
sub
or
das
or
sbb
sbb
aad
shl
jle
test
cmpsb
cmp
jmp
loopne
rorl
in
out
pop
inc
add
lods
mov
std
sbb
xchg
repnz
sbb
sub
xor
mov
clc
mov
addr16
out
scas
pop
test
nop
or
notl
pop
sub
movsl
or
lock
mov
addr16
pushf
aaa
xchg
lcall
adcb
mov
push
js
int
popf
outsb
jb
mov
mov
push
adcb
fldt
and
mov
sbb
sbb
xchg
mov
add
add
aam
dec
dec
jl
mov
mov
or
fldenv
mov
mov
adc
cmp
jbe
repnz
jne
dec
xchg
idivb
xor
dec
jne
add
mov
push
je
call
in
test
int
cmc
ret
cmp
adcl
or
push
ja
shrl
repnz
cmp
rclb
ljmp
mov
jecxz
fsubrp
xchg
sub
mov
enter
ficompl
push
xchg
rclb
and
jb
sub
hlt
or
and
add
in
jae
loope
push
testl
push
pop
mov
out
sub
dec
mov
push
or
jmp
jecxz
lock
push
sbb
movsb
xor
add
stos
nopl
pusha
sub
in
ja
and
test
add
leave
test
xor
adcb
leave
addr16
ret
hlt
xchg
add
mov
movsb
rolb
fdivrl
fwait
and
ret
sub
add
cmp
cmpl
scas
sar
adc
clc
in
pop
inc
xchg
scas
xor
inc
aad
cmp
cli
out
lea
push
shrb
cmp
pop
mov
cmp
mov
orl
fdivrl
daa
xchg
sbb
pop
inc
jmp
sub
icebp
pop
cmp
test
js
sub
inc
push
fcompl
js
es
jne
aas
sub
ret
fabs
mov
popa
cmp
ja
xor
push
js
and
xchg
movsb
in
and
cmp
sti
add
sarb
jmp
and
push
in
call
cmp
stos
lods
or
sbb
lods
ds
movsl
mov
es
pop
orl
stos
test
pop
fsubrl
xchg
inc
sub
mov
push
jae
loop
sbb
sahf
inc
out
out
repnz
inc
xor
or
aam
aad
push
loope
xor
hlt
pusha
inc
jns
pusha
and
in
or
push
xchg
mov
in
aas
sub
test
cmc
cmp
aas
nop
push
push
ja
das
sub
fxam
mov
and
jno
pop
fidivs
or
mov
fildll
sub
loopne
xchg
jnp
dec
push
xchg
pop
out
fdivs
fadd
subl
out
lret
sbb
dec
mov
es
testl
popa
add
mov
ss
adc
dec
cmp
jbe
stos
in
stos
dec
movsl
push
xor
or
mov
pop
es
lret
pop
sarl
inc
out
sub
push
fwait
fs
iret
fimuls
xor
inc
mov
repnz
sub
jmp
in
outsl
repnz
pushf
sbb
push
movsb
mov
mov
mov
ficoml
lcall
ja
aad
es
pop
inc
aas
and
xchg
outsl
sub
and
stos
and
add
leave
lret
lahf
test
jo
fisttpll
pop
sbb
xchg
orl
mov
les
lock
adc
orl
test
rep
xor
dec
cmpsb
in
movsl
lcall
jbe
xor
fmul
inc
mov
arpl
and
inc
mov
xor
xor
cmp
push
xchg
out
call
aaa
jecxz
fcoml
mov
dec
and
mov
dec
inc
fbld
adc
cmpsb
pop
ret
jmp
mov
push
enter
in
ret
outsl
cltd
cmp
lea
fsts
aad
cmpsb
mov
cmp
outsb
fisttpl
ss
daa
insb
jns
in
jecxz
mov
jge
in
out
push
mov
loope
adc
gs
lret
jge
pop
mov
and
jg
ds
cmp
rclb
or
subl
out
xchg
or
mov
push
stc
sub
pop
mov
stos
stos
daa
jno
cmp
pop
mov
addr16
mov
add
imul
sbb
outsb
stos
mov
test
mov
lret
divl
popa
shll
mov
sahf
daa
cwtl
movsl
mov
pop
loopne
add
aas
addr16
add
vmaxps
sub
sarb
sar
xor
les
add
jnp
xchg
push
push
or
mov
jae
jbe
std
sbb
push
jno
mov
imul
sahf
sbb
stc
xchg
js
cmc
aam
fisttpl
mov
xor
int3
inc
jl
fsts
xchg
jg
ror
in
shrl
jns
push
pop
xor
adc
stos
jno
push
xchg
ret
cmc
adc
mov
mov
jmp
inc
pop
lea
add
mov
lret
mov
push
mov
sbb
cmpsl
dec
sub
hlt
test
xchg
fsubs
pop
mov
pop
repz
data16
mov
mov
push
leave
xorl
sbb
mov
out
pop
push
cmc
movsl
xor
mov
int
or
out
or
sbb
fsts
mov
pop
repnz
outsb
add
push
lods
sbb
sub
sub
popa
movsb
cmp
lret
xchg
push
cmp
aaa
pop
jne
andb
push
and
stos
xchg
aam
sar
sub
imul
lcall
mov
jnp
sbb
and
icebp
mov
xchg
xchg
xchg
bound
add
xor
scas
sbb
gs
mov
xor
and
add
dec
mov
cmp
lcall
gs
roll
push
daa
rcrb
pop
dec
sub
jmp
arpl
push
mov
shlb
add
cltd
sub
cwtl
fneni(8087
jmp
dec
cltd
pop
fcomp
mov
ret
jbe
loop
out
push
fldt
stc
fdivrs
mov
fiadds
out
push
sti
push
mov
arpl
lods
icebp
dec
hlt
lods
fbstp
push
ficoml
add
repz
iret
lcall
mov
adc
clc
mov
out
cmp
xor
push
jne
lcall
aam
push
shlb
and
xchg
icebp
pop
xor
ret
inc
jp
and
sub
cmp
sti
jecxz
cmc
push
and
test
in
mov
fwait
in
dec
sub
mov
aam
add
ret
imul
jecxz
leave
lock
shll
pop
stos
mov
out
mov
inc
push
pop
adc
loopne
pop
add
pop
cmpsb
mov
adc
sti
and
and
leave
xchg
jae
push
nop
or
cmpsb
inc
loopne
insl
push
es
insb
outsl
notb
addr16
mov
in
adc
xchg
cmp
aas
xchg
ret
mov
sub
mov
mov
or
subl
repz
mov
sbb
xchg
les
es
sbb
mov
je
dec
pop
aaa
setne
stc
dec
out
clc
dec
stos
imul
scas
incb
int
loop
js
movsb
test
add
cmpb
imul
fadd
push
mov
sbb
cmp
lcall
jecxz,pt
out
call
sbb
sub
cmp
data16
xchg
inc
inc
or
insb
es
shl
repnz
aaa
xor
sbb
xorl
add
aad
sarb
mov
jp
ja
mov
mov
sub
enter
pop
and
mov
sub
mov
out
out
lds
cmp
mov
aaa
leave
mov
xor
xchg
iret
scas
sub
jecxz
push
ret
scas
push
mov
in
ljmp
jmp
or
insb
sub
dec
loop
push
out
mov
fldt
mov
adc
jne
xor
dec
cld
add
mov
shll
roll
xor
ret
dec
sbb
movsl
pop
popl
dec
adc
negb
lock
test
or
mov
xchg
loopne
pop
scas
mov
pushl
lods
dec
add
push
push
inc
ret
int3
pop
stos
ret
pop
mov
test
jge
sbbl
push
push
call
lods
stos
add
repz
cli
jo
insl
sub
rolb
fs
imul
sbb
jg
sahf
sub
dec
xor
scas
cmpl
es
rolb
fsts
ja
es
mov
xchg
ret
inc
cmp
pop
mov
add
cwtl
cmp
push
movsb
iret
ffreep
je
loope
mov
mov
xchg
out
inc
je
int
mov
mov
adc
sarl
rcl
cmpsl
mov
out
jmp
xor
jnp
inc
test
xchg
mov
sub
fs
enter
push
outsb
and
cmpl
mov
sti
pop
aas
scas
xchg
popa
cltd
mov
inc
rorl
pop
mov
mov
jp
or
and
fisubl
mov
adc
movsb
xor
adc
sbb
sbb
inc
xchg
mov
push
stc
and
pop
push
pop
cmp
xor
sub
lahf
cld
repnz
xor
mov
dec
std
inc
int3
js
add
rorb
push
and
cs
sahf
repnz
jl
xor
popl
jbe
push
out
mov
push
mov
loop
push
dec
pop
in
push
sub
mov
jge
jns
mov
pop
inc
mov
inc
jle
fldenv
adc
out
xchg
or
lahf
push
repz
sub
jmp
out
xchg
push
jmp
mov
wrmsr
add
stc
xlat
repz
pusha
les
dec
iret
rcpps
je
mov
into
or
or
jb
jno
rolb
push
inc
mov
rorb
test
cmp
xchg
rclb
lahf
test
push
aam
cmp
sub
outsb
or
cmp
in
pop
jecxz
repz
lea
sbb
cwtl
mov
xor
inc
stos
movsb
testb
or
dec
fsin
insb
jmp
add
xor
mov
sub
adc
ljmp
fnstsw
sub
xchg
jl
shll
sbb
lret
mov
into
in
pop
imul
inc
push
addr16
stos
ja
xor
outsl
sub
mov
xchg
mov
insb
clc
pop
push
mov
mov
gs
xorb
cmpsl
add
ja
je,pn
and
iret
cltd
lds
inc
mov
loope
ljmp
jo
mov
pusha
inc
adc
push
jns
sub
sbb
scas
cmpb
adc
int3
repnz
ja
inc
or
pop
shl
jnp
in
leave
mov
xor
dec
or
mov
sub
jl
data16
mov
mov
push
arpl
mov
jae
xchg
adc
jbe
mov
idivb
out
xor
sbb
cs
sbb
mov
popl
into
mov
push
aam
and
and
aam
sub
insb
pop
imul
push
xchg
xchg
xor
xchg
cltd
neg
bound
lods
loopne
in
in
lea
mov
and
movb
mov
cmp
outsl
dec
bound
sub
and
jle
test
and
inc
dec
shlb
sarl
xchg
in
cmpsb
test
jno
jne
mov
lods
mov
es
dec
mov
xchg
rorb
repnz
mov
xor
jne
xchg
mov
pop
sbb
xchg
cmp
fcompl
jle
push
push
scas
jmp
xchg
and
jnp
mov
mov
hlt
mov
movsl
incl
jmp
data16
pop
jo
in
add
pop
pushf
popa
jnp
js
andb
repnz
inc
mov
dec
dec
or
pop
mov
mov
mov
call
adc
sub
xchg
inc
testl
push
add
cmc
js
jmp
mov
mov
add
clc
incl
push
int
int3
dec
loope
fcompl
int
loop
mov
lret
std
lods
sahf
and
and
ss
jl
int
and
test
pop
xchg
and
push
ds
mov
movsb
inc
sti
popa
pushf
jbe
subb
mov
cmpsb
mov
pop
cmc
fwait
lret
xchg
add
jno
out
or
sub
add
inc
lea
movsb
adc
mov
mov
pop
outsl
sahf
push
dec
loopew
mov
loope
jae
jo
xchg
fsts
sub
push
mov
mov
jne
xor
inc
aas
lret
xor
mov
popa
pop
shrl
lods
fs
mov
push
cmp
jns
popa
and
and
fldt
stos
mov
repnz
in
and
dec
cli
add
pop
add
adc
pop
pusha
mov
xchg
call
cwtl
js
inc
sbb
push
pop
jl
mov
push
sub
out
adc
fst
jbe
and
imul
push
popa
lods
fldcw
sub
pop
mov
cmpb
mov
and
dec
add
mov
pop
movsb
xor
ret
ss
push
es
cmp
je
mov
and
aas
popf
scas
fstl
or
shl
jle
fistpll
in
mov
clc
mov
or
out
test
popa
cmp
or
fdivrl
push
hlt
imul
pop
push
jle
ror
xor
cli
push
xchg
lret
jns
rolb
cmp
ficomps
fstpt
or
pop
fwait
aad
leave
cltd
je
in
add
xchg
ja
mul
fwait
shlb
xchg
enter
push
hlt
dec
jbe
ds
pop
mov
pop
sub
aas
sub
adc
jae
pop
xchg
jp
mov
gs
and
inc
in
out
jg
add
ror
in
or
or
jne
mov
je
mov
pop
adc
mov
and
xchg
js
and
testl
xchg
push
fstp
cmpb
outsb
lcall
imul
movsl
sti
jg
add
out
cmp
xor
push
mov
xchg
out
std
cmpsl
jle
dec
sub
xchg
sti
je
sub
mov
in
je
orb
out
dec
mov
cs
pop
loopne
and
js
cmc
sub
mov
daa
insb
mov
jo
xchg
jae
xchg
fisttpl
jle
fiaddl
mov
adc
jp
dec
nop
inc
int
add
jne
or
xchg
or
out
loopne
mov
xor
push
push
mov
push
lcall
add
fstp
lret
inc
xchg
sti
xchg
add
lods
push
imul
repnz
out
test
roll
in
xchg
inc
ret
lcall
jae
pop
scas
je
stc
mov
mov
stos
sub
in
add
xchg
xchg
enter
rol
mov
adc
into
dec
sbb
mov
dec
fwait
rcll
pop
pop
sti
fcmovu
sub
out
mov
ss
xlat
push
movsb
mov
sahf
adc
or
cli
xchg
dec
xchg
fcmovne
jmp
xchg
xchg
es
cmp
lods
ds
mov
jge
icebp
xor
mov
dec
shr
jns
sub
lcall
lods
adc
jge
nop
test
in
pop
loopne
in
mov
andb
mov
fidivrs
fidivs
outsb
push
dec
cmp
leave
push
std
out
hlt
nop
mov
sbb
cmp
flds
sbb
cmp
out
shl
pop
mov
mov
add
pop
pushf
jle
ja
mov
iret
outsl
es
das
popl
adc
mov
sbb
cmp
mov
mov
mov
push
inc
cmp
pop
mov
sbb
inc
fdivl
dec
adc
sub
ficoml
inc
sbb
or
movl
push
aaa
jnp
mov
les
push
out
mov
or
dec
mov
push
fimuls
js
jne
push
fisubl
std
cmp
gs
test
jb
mov
flds
xchg
ds
dec
mov
xchg
mov
pop
pop
push
int
mov
out
mov
jae
add
push
aas
in
cmpsb
xchg
std
aam
adc
int3
repnz
outsl
scas
loopne
outsb
mov
rcrl
cmc
test
out
outsb
pop
clc
test
or
mov
aaa
push
xchg
xchg
gs
sub
iret
inc
aas
xor
push
sub
mov
jecxz
movsb
add
jmp
scas
mov
cmp
sub
cmp
les
dec
jmp
fdiv
sbb
adc
lock
xchg
mov
sub
pusha
loopne
pop
fsts
pusha
lret
xchg
outsl
push
mov
mov
jns
lods
subl
repz
cld
jns
inc
fwait
xlat
in
lcall
cltd
mov
dec
jmp
loope
pusha
ljmp
out
sub
movsl
fisubrl
and
movsb
jle
lcall
fisubs
jg
mov
pushf
std
jns
push
xchg
bnd
dec
aaa
jmp
test
cmp
cmpl
dec
dec
dec
push
inc
cmp
rclb
mov
outsb
push
test
sbb
scas
arpl
and
jle
cmc
mov
out
loopne
inc
mov
and
ret
cmpsl
ljmp
push
stc
jmp
xor
pop
xchg
mov
into
mov
sub
sub
scas
push
xor
pop
and
sub
popa
mov
out
mov
in
adc
gs
or
jge
stos
scas
lcall
lods
outsb
bnd
pop
sbb
gs
dec
outsl
and
and
adc
test
enter
insl
fsubl
cmpsl
adc
ficoms
enter
sub
movsb
xchg
lcall
movb
adc
xchg
inc
jns
cli
fmuls
mov
rcrl
dec
int3
sbb
fmuls
orb
in
push
repz
stos
fwait
out
les
shlb
add
lahf
xchg
xlat
or
push
add
pop
add
lret
inc
pop
sub
clc
pushf
inc
decl
shl
sbb
adc
loop
aaa
cmc
cltd
mov
push
f2xm1
outsb
imul
testb
ret
rcr
rolb
sub
loopne
sub
pop
inc
rcrb
cmp
or
clc
jb
mov
and
shrl
popa
stos
test
leave
jmp
push
cmc
xchg
push
mov
sbb
es
jmp
xchg
mov
pusha
push
cmp
repz
adc
vphaddbw
call
mov
bound
shl
jno
cmp
sbb
cmp
push
xchg
stos
insb
xchg
and
adc
push
push
add
shlb
pusha
shll
and
icebp
ret
xor
into
inc
adc
inc
sbb
xor
cmp
pop
addr16
xlat
or
movsb
push
pop
sub
xor
pop
shr
dec
lcall
sti
jg
fidivl
ljmp
and
aad
or
cs
push
jo
loope
and
mov
shrl
in
xlat
cmp
xchg
addr16
in
mov
jge
les
mov
fucomi
pop
ficompl
lock
mov
dec
push
jle
mov
mov
jno
mov
cltd
leave
shrl
adc
fstp
idivl
push
pop
call
cli
in
mov
ss
xorb
enter
dec
inc
cmpsl
lret
ja
push
lock
and
flds
loop
mov
inc
lods
enter
mov
fiadds
rcrb
and
mov
test
jne
shlb
decb
mov
enter
pop
je
lahf
push
ret
xchg
loop
pop
inc
cmp
xchg
xor
fcmovnu
loopne
mov
mov
and
xchg
pop
jo
fdivrl
ficompl
inc
std
inc
lcall
fbld
mov
dec
jbe
push
int
dec
inc
mov
or
mov
insl
mov
or
dec
xor
sbb
pusha
or
sti
add
inc
ds
mov
add
mov
js
xor
mov
shld
fbld
sub
fs
mov
in
jbe
imul
ja
lods
add
dec
fcmovnbe
xor
add
lret
cmp
push
mov
cmp
andb
and
fwait
sti
mov
repnz
add
jg
pop
ret
pop
popa
and
push
xorb
je
or
repz
jge
pop
cld
mov
and
scas
mov
fildl
insl
lock
inc
push
in
test
insb
push
adc
shr
ds
push
pusha
pop
push
push
cltd
subb
shll
fldcw
mov
mov
sub
sti
cld
mov
inc
ja
sarb
jns
mov
sti
or
nop
out
add
sub
daa
xchg
jae
shr
jae
inc
adc
cmp
incl
sbb
jae
test
sti
and
test
mov
clc
and
or
cmp
psrlw
adc
or
pushl
jns
movsl
sub
cmp
loopne
and
add
jb
sbb
and
inc
inc
jb
adc
and
push
fildll
dec
adc
mov
shrl
jo
and
lcall
shl
xchg
dec
mov
jo
jg
fyl2xp1
sbb
aad
cwtl
daa
sbb
or
and
inc
xlat
dec
addb
aad
cmp
and
mov
cmp
mov
cld
adc
mov
fisttpl
jnp
dec
push
clc
scas
sbb
movsl
xchg
mov
cmp
fidivrs
rcll
xchg
dec
in
aas
imul
lcall
cld
daa
sub
data16
out
and
outsb
rcrb
add
in
inc
jge
popa
inc
jge
ja
arpl
add
sbb
xor
pmullw
adc
mov
xor
outsl
mov
jbe
fsub
jae
out
pop
int
outsl
mov
jne
addr16
mov
mov
aad
mov
and
mov
mul
pop
adc
rcrl
pushf
mov
dec
add
scas
pop
mov
call
ljmp
test
ror
loopne
pop
cmp
cmp
or
hlt
enter
cmpsl
pop
bound
hlt
negl
mov
out
adc
dec
scas
int
inc
add
or
mov
cld
icebp
adc
into
xor
andl
repnz
mov
push
mov
cmp
aad
xchg
std
adc
icebp
jns
in
push
adc
and
mov
mov
mov
mov
mov
push
or
daa
add
mov
fnsave
nop
sbb
into
stc
mov
rcrl
xor
sub
sbb
mov
lret
and
mov
pop
out
aad
scas
jbe
scas
cmp
daa
jo
adc
and
push
sti
rcrb
dec
and
addr16
xor
mov
lret
in
filds
mov
or
enter
dec
cli
pop
add
call
popa
mov
lds
or
sahf
bound
push
cvtdq2ps
fstl
adc
addr16
cmp
ja
pop
jle
in
adc
inc
pop
cli
and
addr16
mov
mov
mov
push
es
pop
jle
fs
jge
inc
dec
addl
popa
inc
ds
fidivrs
jecxz
adc
mov
xchg
pop
cmp
jmp
leave
jbe
fwait
cmp
loope
flds
aad
push
inc
xchg
int3
clc
xorb
out
and
or
icebp
cli
scas
pop
daa
pop
mov
mov
fdivrl
cmpsl
sub
cmp
mov
cwtl
pop
lret
sub
xchg
popf
scas
or
cli
arpl
pop
lea
cwtl
cmpsl
hlt
test
lcall
cmpsb
jo
cmc
into
cwtl
push
push
mov
xchg
cmpsl
nop
loopne
imul
inc
mov
xor
push
das
aam
fwait
sti
imul
adc
rcl
mov
iret
ds
orl
and
xor
xchg
and
inc
bound
daa
jg
dec
sarb
xchg
arpl
jecxz
test
sub
xor
pop
sub
add
and
mov
das
mov
rol
scas
fidivrl
sahf
pusha
or
and
sarb
repz
mov
dec
add
lods
push
inc
iret
jecxz
cmc
repnz
pop
sub
xor
cmc
inc
loopne
mov
outsl
cs
xchg
and
es
sti
dec
sbb
fs
mov
inc
ret
shr
inc
dec
lahf
mov
jns
mov
sbb
cmp
jbe
gs
lds
loop
loopne
adc
adc
push
arpl
int
outsl
adc
cmpsl
nop
sbb
mov
mov
push
stos
cmp
mov
ljmp
mov
loope
pop
pop
imull
pop
dec
sbb
cltd
je
pop
add
sbb
inc
mov
ret
push
or
mov
loope
add
mov
ret
mov
push
inc
ficoml
ret
mov
add
pop
mov
fnsave
mov
jl
mov
imul
mov
pop
mov
out
mov
pop
shrl
mov
and
cmp
mov
mov
cmp
popl
or
cmp
cwtl
fwait
add
int
pop
lods
sahf
sbb
pop
xchg
mov
in
xchg
ljmp
inc
filds
ljmp
mov
jnp
jp
les
sub
popa
mov
sbb
add
cmp
ljmp
call
and
dec
adc
push
push
ret
pop
mul
jbe
dec
inc
jne
and
lock
push
push
call
mov
sahf
dec
je
push
push
sbb
paddusw
and
mov
icebp
sub
xchg
add
mov
lfs
cwtl
xchg
xchg
pop
lods
loop
pop
popa
outsl
rcrb
xchg
push
cltd
mov
clc
push
call
pop
out
xchg
daa
mov
jb
sbb
jmp
dec
loopne
fstpt
icebp
dec
xor
lods
pop
sbb
dec
jge
out
out
sub
pop
lcall
cwtl
fisttpll
sbb
roll
loope
pop
stos
pop
mov
cmp
pop
ljmp
ficoml
jecxz
sbb
or
xchg
mov
sub
pop
add
inc
lahf
jno
fildl
push
xchg
cmc
pop
jnp
inc
push
or
hlt
addb
into
inc
xor
inc
cwtl
jnp
xorb
push
enter
dec
and
lds
test
and
push
push
shrl
icebp
cmc
fmulp
es
cwtl
pusha
pop
sub
xor
pop
jg
les
pop
inc
idivb
xor
mov
sbb
out
cmp
push
jge
aas
sbb
xor
sahf
aaa
add
jae
cmp
add
add
or
inc
jmp
mov
mov
or
popa
pop
jbe
inc
lods
fucomip
dec
test
cmpsl
pop
jmp
adc
add
pop
lock
daa
sti
cmp
das
adc
push
fs
cwtl
mov
test
jg
out
cltd
out
repnz
jns
and
out
push
mov
or
or
out
push
cs
mov
dec
mov
add
mov
ret
jmp
les
jns
gs
popf
xor
in
roll
and
aam
jmp
xor
mov
mov
loope
and
icebp
xchg
sub
pop
orb
dec
push
sub
jl
out
subl
stos
push
mov
xor
or
lds
mov
lahf
in
out
inc
pop
mov
mov
scas
cmp
and
pop
mov
push
rorl
test
pop
sub
inc
inc
mov
lret
ljmp
es
xchg
nop
xchg
add
mov
sub
addr16
inc
inc
fs
mov
lret
imul
jae
push
inc
ljmp
mov
mov
in
sbb
cmpsl
mov
xor
imul
js
or
cli
imul
js
inc
dec
and
sbb
adc
mov
mov
dec
ret
cli
les
out
stos
cmp
lods
insb
ret
roll
dec
adc
addr16
push
test
mov
xchg
icebp
cmc
test
xor
push
iret
cld
mov
mov
aam
adc
gs
popf
lcall
sub
pop
stc
jnp
pop
xchg
adc
jl
bound
and
out
out
mov
lcall
adc
mov
xchg
sbb
add
jle
mov
fwait
push
inc
ljmp
mov
push
shlb
ret
cmp
mov
pop
lcall
in
xor
aas
dec
aad
pop
scas
add
pop
cmpsl
mov
mov
pop
insl
add
adc
or
sub
popa
mov
jns
mov
jae
jp
adc
lods
popf
mov
fwait
pop
add
fstp
inc
xor
mov
stc
mov
xchg
push
xor
inc
xchg
mov
fdivp
cmp
push
push
inc
add
or
add
pushf
jb
inc
ljmp
xchg
mov
inc
mov
das
or
dec
xor
xchg
adc
xor
lret
aam
out
ret
push
mov
andps
testl
insl
sbb
inc
sbb
xchg
fucomp
inc
mov
leave
icebp
xchg
jge
add
cwtl
imul
loop
xor
push
or
rorb
pop
sub
fsub
push
repnz
push
mov
pop
add
popf
cmp
lods
dec
sbb
mov
int3
rcrl
cmpsb
ret
imul
mov
jp
call
xchg
loope
push
std
cmpsl
sbb
sub
jmp
mov
test
ret
and
jmp
mov
repz
mov
into
shll
jmp
iret
insl
loope
and
test
into
mov
cmp
rorb
pop
xchg
stc
pushw
ja
ret
cmpsb
push
pop
or
loope
xchg
mov
push
xor
std
ja
adc
mov
sub
or
std
jb
adc
sahf
bound
dec
lods
push
mov
ret
fcoml
mov
jg
push
fists
push
mov
sbb
ja
nop
test
mov
mov
scas
icebp
loopne
cmp
test
and
out
movsb
mov
lods
notl
pop
mov
pop
sbbl
scas
rorl
inc
sub
or
neg
cmpsb
ljmp
ss
les
test
add
jbe
push
mov
loop
dec
daa
sbb
mov
ja
push
sub
clc
filds
popa
mov
mov
or
sti
clc
inc
scas
fcompl
inc
cltd
test
xlat
xchg
imul
xor
push
je
sub
cwtl
and
pop
cmpsl
push
fdivrl
data16
in
jge
inc
push
pop
sbb
les
inc
cmc
in
sahf
pop
mov
add
pop
loope
mov
mov
and
mov
aaa
es
daa
or
loope
cmp
les
cld
mov
mov
gs
std
popf
push
xlat
dec
fistpl
out
xchg
out
std
mov
sbb
out
fistpl
aas
mov
cltd
dec
xor
inc
popf
mov
out
dec
shl
xchg
insl
std
fwait
mov
call
imul
fists
loop
outsb
out
outsb
js
push
test
xor
sub
xor
icebp
repz
popf
fdivrl
add
xor
das
push
repnz
push
dec
addr16
dec
ret
push
repnz
mov
ss
cmp
aam
jno
mov
push
push
xlat
xor
inc
xchg
out
mov
push
mov
jne
aam
repz
movsl
shrb
loopne
pop
lcall
push
mov
int
cmp
jbe
fadd
mov
jb
into
shl
imul
or
xchg
sub
dec
cmp
outsl
ja
adc
inc
sbb
rorl
popf
mov
jnp
adc
rcl
stos
test
pusha
lcall
mov
adc
or
xor
cmp
xor
fdivl
test
inc
fisttpl
scas
or
fstpl
test
es
in
cmc
fnstcw
push
jp
mov
jge
fistps
pop
in
mov
adc
cmp
adc
int3
xor
pop
lds
mov
les
jo
adc
mov
addl
cmp
scas
mov
pop
add
subb
xchg
or
aam
sub
or
jno
test
daa
lret
int
xchg
mov
rcrl
dec
pop
dec
stos
inc
sarb
out
adc
test
mov
jle
negl
or
mov
int
sbb
add
mov
jecxz
insb
aad
ds
xor
in
adc
pop
jae
and
out
xchg
mov
movntq
xchg
insb
hlt
adc
dec
mov
lret
movsb
cmp
int
adc
std
pusha
cli
pop
xor
fadds
mov
clc
dec
ljmp
xor
in
push
mov
mov
xchg
fildl
pushf
inc
addr16
rolb
movsb
imul
subb
das
mov
adc
mov
add
sbb
mov
sbb
loop
xor
inc
in
xchg
and
popl
dec
cmp
jnp
movsb
inc
es
add
mov
outsl
dec
sbb
dec
inc
mov
add
jbe
and
scas
add
sbb
mov
test
xchg
jns
je
mov
mov
popa
outsb
xor
sbb
adc
jle
adc
pushf
mov
fcompl
std
lock
xchg
cwtl
or
jo
insb
mov
jnp
in
sbb
fs
ja
out
sahf
rolb
pushf
xchg
lret
movsl
test
sub
imul
dec
jge
mov
pop
sbb
adc
mov
jns
mov
adc
repnz
shrl
nop
mov
sub
and
inc
sbb
and
rorb
pushf
movsb
mov
and
cwtd
and
loopne
mov
addr16
bound
out
mov
xchg
inc
and
dec
pop
daa
push
xor
outsl
inc
or
xor
call
sub
aaa
jb
subl
push
daa
sub
inc
mov
add
insl
test
es
cmp
ds
sub
or
sbb
mov
sbb
shll
sub
decb
pusha
test
in
and
jne,pn
loope
adc
xlat
xchg
imul
lahf
xor
lods
cmp
xor
add
jns
icebp
adc
data16
cmp
clc
jne
cmp
cmp
push
xor
pop
jge
addr16
or
aas
mov
jecxz
pop
xchg
ftst
dec
xchg
sti
jl
pop
sbb
dec
dec
popf
xor
in
xchg
repnz
sub
adc
out
mov
cmp
cltd
sarl
push
jmp
or
sub
mov
cwtl
test
lcall
icebp
and
adc
sarb
sbb
sub
pop
lods
aam
lret
push
aaa
push
scas
inc
or
lcall
sub
sahf
mov
jge
cwtl
cmp
aas
inc
pop
aam
pop
movsl
ljmp
pop
test
test
stos
inc
jne
fistpll
xor
hlt
bound
and
enter
or
mov
jo
filds
and
jge
ljmp
push
sbb
cwtl
xor
adc
ror
test
jne
addr16
jo
jg
pop
sub
sti
sarb
je
or
dec
or
pop
ret
rcl
inc
js
std
dec
out
mov
stos
mov
and
inc
frstor
imul
and
leave
xchg
inc
sbb
mov
pushf
mov
push
push
jns
lods
xchg
pop
gs
sbb
dec
in
xchg
mov
and
jae
aam
cmp
or
pop
test
cs
cmp
and
push
fcoms
out
ljmp
jo
and
loopne
push
xchg
pop
addl
fldcw
dec
or
xor
jle
jns
lret
push
push
add
fimull
push
mov
xor
xor
add
test
cmp
pusha
mov
cmpsb
mov
xchg
ja
jge
hlt
pop
pop
das
pop
ss
add
push
sub
call
hlt
mov
adc
push
and
rol
xor
xchg
out
jmp
lods
cmpsb
push
add
gs
addr16
lea
jnp
pop
fcompl
vprotb
adc
scas
rorb
repnz
pop
mov
sbb
jne
jge
stos
xor
sbb
sub
mov
lret
test
loopne
jmp
orl
mov
lods
imul
hlt
mov
je
mov
jns
inc
jp
jnp
add
mov
sub
movsb
mov
xchg
sub
movsl
inc
std
sahf
mov
sbb
dec
repnz
gs
imull
scas
sbb
repz
pop
xchg
xor
and
mov
mov
pop
xorl
cld
mov
rolb
dec
nop
imul
jb
lock
or
xchg
ret
sbb
cmp
aas
add
inc
aaa
loop
stc
pop
hlt
sahf
addr16
dec
sub
mov
inc
mov
dec
aas
jmp
or
ds
sbb
jae
test
xchg
or
push
add
or
int3
push
sub
ret
xchg
dec
mov
mov
into
pop
arpl
mov
lods
add
fidivrl
rol
xchg
ds
or
inc
and
adc
sbb
lcall
mov
scas
test
pop
push
les
or
notb
xor
out
jecxz
sub
lret
or
popf
and
adc
xchg
inc
repz
test
xchg
iret
leave
es
mov
inc
adc
xchg
mov
cmp
fmulp
outsl
ret
push
and
aad
mov
cltd
cmp
xchg
jg
push
fstpl
xlat
dec
rcll
outsb
push
sbb
mov
rcll
lret
pop
jns
lret
lea
stos
jp
mov
or
mov
dec
mov
fcmovnb
push
and
add
fcoml
xchg
fnstcw
ficompl
in
pop
sub
sbb
jne
inc
jp
add
enter
ret
inc
pop
out
clc
mov
adc
xor
cmp
bnd
hlt
pop
mov
std
gs
inc
fadd
aaa
movsb
test
sar
lcall
pop
xchg
cmp
dec
movsl
jp
pop
add
call
fstpl
push
xor
lock
jbe
inc
ds
xlat
mov
inc
mov
leave
dec
inc
mov
cmp
cmp
insb
in
pop
adc
adc
pop
outsb
loope
and
mov
and
sti
fsubs
jmp
and
sub
out
stos
int
in
cmp
dec
dec
rorl
icebp
loopne
mov
pusha
mov
sub
sti
inc
jmp
mov
xchg
xchg
push
ja
mov
cmp
sub
sbb
pop
jnp
nop
loop
pop
jns
data16
inc
push
adc
jl
je
pushf
ljmp
jmp
xchg
ljmp
mov
sbb
cmp
popl
jnp
fwait
outsl
inc
jae
in
loop
insb
add
and
inc
sub
sbb
xor
sbb
sbb
cli
iret
stos
das
cmp
xlat
push
test
xor
and
mov
mov
ret
mov
adc
hlt
jge
mov
mov
negb
cmc
inc
dec
lret
mov
ljmp
jae
das
adc
or
sbb
shll
cmp
push
fistps
dec
push
pop
push
stos
mov
sub
jmp
mov
sub
pop
sub
xor
xchg
outsb
lods
xchg
mov
push
sti
fnstenv
ret
sarl
jmp
push
or
cmp
xorl
xchg
inc
clc
stc
add
movsb
dec
pop
ficoml
cmp
enter
jo
mov
push
rorl
test
mov
xor
sub
pop
jbe
fstpt
push
sahf
iret
stc
imulb
clc
xchg
inc
lock
mov
push
loope
cltd
sbb
lock
jae
xchg
or
mov
and
or
outsb
adc
mov
xor
lcall
test
shll
sub
push
fmulp
add
outsb
xor
jmp
das
mov
test
jp
xor
or
or
ja
adc
pop
popf
cmp
cmp
lret
dec
imul
sub
mov
adc
mov
lret
lret
test
inc
cwtl
jmp
and
subb
jo
mov
stc
jmp
fsub
mov
mov
add
xchg
xchg
add
int3
or
dec
dec
scas
pop
pop
push
xchg
dec
leave
repnz
sub
out
inc
sub
in
lahf
loope
mov
push
sub
xchg
and
roll
outsl
mov
out
push
xchg
testl
repnz
xlat
mov
test
jns
dec
out
jmp
mov
dec
in
shlb
clc
out
out
jne
sbb
addr16
xchg
push
jl
int
into
aad
push
add
mov
leave
arpl
sub
fidivrl
xor
xor
lret
push
pop
fnstenv
xchg
pop
loopne
ret
push
jne
adc
mov
and
hlt
pop
lret
pop
js
test
mov
repz
into
loop
and
xchg
dec
std
mov
repz
cmpb
dec
push
ret
es
push
fisubrs
xchg
xchg
sti
add
into
mov
aad
adc
jae
cs
stc
xor
out
sti
xchg
add
sub
add
hlt
cmp
cmp
stc
lock
sbb
dec
push
fs
mov
fs
jns
mov
pslld
add
add
in
lret
mov
lods
add
and
paddsb
enter
ljmp
shll
outsl
shlb
enter
orl
or
and
ja
xor
test
dec
aas
outsb
movsl
push
inc
rcll
lock
cwtl
push
xchg
fs
outsl
xor
scas
mov
pop
scas
inc
jmp
mov
xlat
and
sbb
in
xchg
fcmovb
jno
lret
jbe
lea
jbe
jp
lahf
divl
adcl
test
jl
lock
add
popa
enter
popf
js
mov
jnp
mov
xchg
xlat
and
cmp
scas
fwait
mov
addr16
xlat
pop
rorl
sbb
addr16
mulb
aaa
push
aas
in
xor
cs
testl
jmp
lods
mov
hlt
test
add
sbb
jae
or
mov
outsb
jg
sbb
push
pop
and
and
inc
stos
lret
pop
mov
xor
cmc
std
adc
cld
and
cmp
adc
call
adc
gs
test
es
mov
daa
push
cld
cmp
lds
jbe
nop
insb
adc
add
mov
push
mov
movsb
adc
add
popl
in
sbb
aas
aam
ljmp
es
mov
mov
hlt
push
or
mov
scas
enter
adc
dec
std
mov
pushf
shld
arpl
outsb
lret
loopne
xchg
inc
push
push
jg
mov
adc
jb
stos
sbb
popf
push
shrl
mov
cmc
push
add
pop
ret
add
or
and
or
cmp
push
data16
xor
or
popa
insl
jns
notb
or
mov
pop
cmp
sti
xlat
popa
cltd
push
inc
xchg
cmc
xor
movsl
push
jae
push
and
pop
cltd
mov
and
mov
xlat
notb
sbb
sub
cmp
out
sahf
push
into
mov
bound
jbe
stc
pop
mov
js
dec
hlt
mov
popf
mov
icebp
aad
es
filds
in
stos
pop
outsb
and
sub
xor
imul
sbb
fsub
nop
cli
out
pop
push
fisubs
adc
xor
pop
dec
aam
sub
repnz
cmpsl
push
ret
aas
or
outsl
xor
popf
mov
rcrl
jg
jge
mull
sbb
psubw
cmpsb
sub
sarb
stos
xor
nop
test
jae
rep
cmp
sti
jle
js
or
jns
xlat
cmp
mov
mulb
fildl
mov
adc
xchg
pop
sbb
and
pop
mov
sahf
mov
shl
or
mov
std
xchg
scas
mov
and
std
mov
lret
xchg
ss
in
dec
pop
loopne
mov
outsb
cmpsl
fidivl
outsb
test
arpl
jge
inc
loopne
adc
jmp
push
pop
outsl
and
push
push
fisubl
outsb
xlat
std
outsb
adc
loopne
pop
pushf
pop
sub
repnz
test
test
mov
pusha
loop
pop
cmp
shlb
sub
fisubs
cmp
or
loope
in
fnstsw
mov
out
fistpl
mov
lea
unpckhps
in
das
inc
mov
push
and
lahf
pop
xchg
xchg
jecxz
mov
adc
jle
adc
fneni(8087
push
in
jge
cmp
push
out
cmp
pop
mov
and
or
mov
jno
push
repz
stos
mov
jmp
xchg
fwait
xor
mov
aaa
shlb
ja
lahf
aad
not
sub
and
ret
fdivrs
inc
shr
adc
das
in
dec
in
cld
gs
pop
add
fcompl
lods
push
jno
adc
divl
pop
lret
imul
popa
out
stos
frstor
or
dec
sbb
daa
pop
scas
mov
mov
mov
ja
cmp
or
xchg
in
xchg
or
fdivrl
dec
lods
mov
popl
mov
das
sub
ljmp
mov
loop
rclb
dec
mov
outsb
mov
dec
cmc
ljmp
mov
xchg
movsb
or
lret
adc
daa
xchg
cmp
jge
subl
push
bound
mov
and
shlb
das
testl
push
test
dec
pop
and
popf
repz
jle
pop
jae
push
in
mov
addr16
and
mov
or
test
push
push
cmpsb
das
rcrl
les
xchg
adc
hlt
pushf
push
lds
stos
jecxz
divb
pop
sbb
shll
sub
or
fdivs
dec
or
call
cmpl
js
xchg
pop
iret
rorl
inc
cmpb
pop
cmpsl
cmp
leave
jmp
clc
leave
jae
sub
mov
lods
xor
loopne
and
inc
sbb
test
fldl
stos
lods
mov
fs
mov
adc
insl
test
test
mov
and
dec
pop
push
jae
cmp
mov
repz
sti
mov
mov
mov
out
adc
mov
mov
in
xchg
cmp
xor
ja
stc
rcrl
ss
jae
je
pop
add
xor
dec
sbb
add
ret
es
mov
cmp
push
rcrb
clc
lahf
in
ffreep
mov
icebp
add
daa
popf
or
and
pop
iret
jb
int3
sbb
mov
ljmp
push
sti
xchg
bound
imul
inc
fwait
or
jmp
sbb
call
dec
push
ss
mov
fcoml
mov
xor
sub
int
popl
ret
xchg
mov
add
xor
inc
jecxz
in
adc
dec
leave
in
mov
dec
xlat
dec
inc
mov
int3
lea
mov
add
mov
lds
sbb
sahf
div
dec
cs
fidivrs
adc
cmp
jle
and
mov
pop
mov
sbb
cmp
loopne
lahf
imul
xchg
hlt
mov
lods
pop
mov
jp
mov
dec
mov
dec
jns
fsubrs
sbb
mov
daa
xlat
pop
add
nop
cwtl
outsb
jbe
pop
mov
insb
mov
sar
cmp
or
shlb
sub
fcomp
xchg
adc
iret
mov
mov
adc
daa
inc
cli
pusha
imul
nop
add
xchg
mov
imul
xchg
enter
repz
std
fs
jb
jbe
mov
sarb
sbb
jno
dec
or
jge
cmp
mov
aaa
push
jg
cmp
loopne
pop
cmp
pop
shll
data16
or
ret
jecxz
cmc
test
or
aas
cmp
and
ficompl
adc
push
ret
cmpsb
sub
sbb
imul
jnp
pop
imul
jns
sbb
sbb
sti
fcoms
into
or
cmp
jle
cmp
popf
hlt
popf
jbe
pop
popa
cwtl
inc
ret
dec
add
ds
add
cmp
xchg
pop
add
jmp
add
movsb
sub
add
shrb
enter
mov
scas
out
mov
movsl
inc
push
and
inc
xchg
cmp
cmp
shll
xchg
and
mov
stos
push
dec
xor
xor
into
mov
mov
mov
ljmp
mov
mov
push
gs
andl
cmpsb
jmp
pop
sub
xchg
sub
pushf
es
les
pop
cmp
sub
je
fs
jmp
mov
cmpsb
fxtract
rorl
ret
mov
enter
and
jns
subl
fisubrs
cmp
sbbl
fnstcw
into
sub
or
into
fwait
or
mov
sahf
jno
pop
sub
push
cmp
mov
call
clc
cltd
jmp
dec
ja
pop
call
cwtl
mov
adc
mov
add
fsubrl
sub
dec
hlt
push
das
mov
cli
cmp
rcr
test
movsl
push
cmp
popa
call
adcb
mov
scas
sbb
test
or
or
add
pop
dec
mov
xchg
push
call
or
das
and
sub
jnp
loopne
addr16
pusha
push
scas
pop
xchg
sbb
push
dec
push
pop
adc
test
jecxz
pop
mov
inc
pop
enter
xchg
inc
and
adc
push
sub
test
rcr
mov
addb
adc
jae
jae
mov
push
into
ja
ret
fcoms
jge
mov
sbb
jg
inc
lahf
xchg
cmp
das
fucom
push
mov
lahf
jle
mov
add
pushf
dec
mov
out
pop
in
enter
push
fists
repnz
mov
push
loopne
mov
mov
add
xchg
add
cmp
adc
dec
stc
adc
in
stc
pop
push
pop
in
cmpsl
mov
nop
pop
sti
jp
add
adc
jnp
xor
adc
shll
gs
mov
js
nop
cmc
push
xchg
fbld
insb
inc
pusha
pop
jo
pop
repnz
fs
push
pop
into
lock
sbb
add
or
push
add
jecxz
andb
ret
inc
shll
xchg
in
xchg
pusha
jo
mov
lahf
nop
sbb
mov
dec
test
xor
fsubrl
rcll
sub
pop
push
push
scas
push
sbb
mov
cli
in
mov
mov
ja
in
mov
insb
or
leave
out
aad
jno
ss
scas
test
sbb
ja
push
mov
jne
fs
hlt
out
or
jge
cld
int3
adc
push
push
jp
loope
orb
shll
push
inc
xchg
test
pop
inc
in
pop
fistl
ljmp
xchg
mov
mov
sbb
fcompl
aam
js
pop
loopne
ret
sbb
repnz
add
jns
test
mov
push
mov
jns
loopne
rclb
cli
jecxz
outsl
loopne
mull
shll
pop
es
mov
cmp
xchg
mov
pop
into
xchg
push
mov
fs
out
mov
and
lds
ljmp
in
sub
jbe
aad
call
jne
in
push
cmp
dec
lds
nop
add
cmp
bound
addr16
pop
push
sub
inc
iret
clc
std
out
mov
push
cmpsb
sub
testb
clc
pop
pop
adc
mov
mov
mov
daa
adc
cmp
lret
jg
xor
mov
out
repz
mov
cmc
push
xchg
cwtl
sub
xchg
mov
test
mov
fldl
sub
movsl
dec
push
mov
aam
xor
in
mov
add
jp
out
jecxz
scas
mov
dec
adc
sub
and
cli
loop
bnd
add
out
inc
negl
js
out
stos
das
mov
scas
leave
and
fistpl
mov
imul
aam
aaa
loop
or
inc
inc
sub
idivl
cmc
ficomps
movl
adc
out
xchg
das
dec
mov
add
jecxz
pop
adc
in
mov
lea
pop
mov
lock
mov
push
popa
cmp
mov
xor
mov
movsb
cmpsb
mov
xchg
into
push
pop
sbb
sub
fsts
es
in
lcall
xchg
jmp
nop
push
les
and
mov
xchg
fndisi(8087
and
lds
push
pop
inc
std
push
and
add
cmp
push
and
sub
jmp
mov
inc
comiss
push
xor
repz
mov
in
xlat
dec
bound
mov
mov
mov
repz
add
cmp
adc
dec
call
and
out
jmp
fsubrp
das
sbb
push
mov
pusha
iret
fyl2xp1
jne
gs
pop
insl
jl
push
mov
sbb
pusha
sub
lods
sub
dec
hlt
mov
dec
dec
jnp
shll
dec
jmp
or
into
cmp
push
push
adc
cli
cmp
or
jno
mov
shll
sub
fdivs
call
scas
inc
ror
pop
andl
gs
movsb
cmp
jp
cs
insl
and
jle
add
sub
or
mov
pusha
add
test
push
pusha
xor
xor
outsb
lcall
movsb
or
test
out
data16
push
mov
ja
and
sti
jne
fsubs
sahf
sbb
sahf
cld
or
fmulp
mov
and
pushf
sbb
lds
dec
inc
in
pop
jecxz
xchg
out
lock
cmp
dec
das
scas
xlat
fwait
cmc
movsl
xor
call
or
nop
int
stc
xor
xchg
imul
or
mov
jns
cmp
adc
sbb
es
daa
bound
sti
push
ret
push
movsb
out
pop
or
add
sbb
push
loope
sahf
jle
dec
dec
aad
mov
xchg
and
mov
adc
dec
rcll
mov
dec
mov
xor
scas
mov
outsb
jecxz
int
jge
testb
mov
fldenv
pop
sub
repnz
mov
imul
inc
pusha
test
aaa
pop
push
in
add
scas
add
pop
xchg
aas
xchg
movsb
and
aaa
pusha
sbb
xor
insl
push
sub
sbb
add
sbb
push
xchg
shrl
cli
jnp
mov
sub
push
jmp
xlat
aas
int
aam
lcall
int
andb
stos
das
testl
xchg
icebp
jecxz
les
iret
push
xchg
clc
aam
mov
roll
insb
sbb
popa
push
out
das
push
orl
mov
fcoml
adc
hlt
nop
mov
jnp
insb
sub
push
and
xchg
call
addb
inc
clc
fwait
dec
xchg
je
mov
iret
cmp
lds
jae
pop
add
cmp
push
add
into
mov
cmp
inc
sub
test
sub
dec
mov
push
xchg
nop
cli
mov
jle
mov
pop
jns
push
stos
push
hlt
adc
dec
ja
out
loope
or
push
jmp
or
xchg
popa
mov
jl
idivl
add
dec
or
out
loope
or
inc
mov
sbb
enter
push
out
cltd
xlat
add
loope
rcr
stc
into
test
std
call
push
enter
movsb
pop
fcmovne
les
movb
movhps
and
fs
jbe
cld
daa
and
jne
lcall
and
into
sbb
sub
adc
inc
andl
push
lods
fmuls
sub
pop
mov
add
lods
jecxz
push
mov
arpl
mov
sub
jg
subb
mov
sbb
dec
mov
or
ljmp
sub
adc
std
xlat
cmpsb
mov
fsts
jecxz
mov
inc
xchg
push
fnstcw
sti
rcll
mov
std
mov
mov
cli
xor
mov
nop
xchg
inc
sarl
addr16
sub
sub
adc
ret
sbb
cmpsb
mov
cmpsb
cmp
jg
jbe
popa
or
ror
ret
into
imul
adc
push
pop
xor
or
imul
fdivrl
xchg
call
push
jg
xchg
pop
mov
push
push
jo
mov
test
das
pop
mov
xchg
adc
or
dec
gs
out
mov
and
mov
lods
push
dec
gs
fisubs
push
sbb
ret
dec
fists
pop
fsubrs
cmpsb
lahf
xchg
dec
in
fnstcw
mov
lahf
jbe
jnp
pop
loope
pop
mov
mov
push
sahf
xor
sub
mov
pop
test
test
scas
push
add
lcall
stc
sar
ror
sar
xchg
mov
das
sub
push
scas
and
ljmp
roll
in
push
xchg
js
dec
push
in
xchg
mov
jae
cld
sbb
pop
push
dec
int3
mov
dec
mov
adc
bound
xor
out
je
push
aas
es
cmp
sub
cld
lds
lds
repnz
test
adc
inc
imul
test
into
adc
inc
test
jo
clc
mov
outsb
aam
out
loope
xchg
jl
xchg
dec
dec
aaa
xchg
idivb
fbld
pusha
sti
jnp
or
jne
cwtl
xchg
mov
push
pushf
mov
lret
pushf
jecxz
push
xchg
jg
lret
out
xchg
pusha
idivb
xlat
lret
jb
sub
sbb
mov
or
push
and
push
pusha
mov
rcl
dec
lret
insl
mov
cmp
jo
mov
adc
jae
ljmp
fcmovnbe
psubw
pop
loop
repz
lcall
imull
inc
cmpsb
subb
add
ljmp
testb
outsl
mov
icebp
push
pop
add
inc
stc
add
cld
test
push
xchg
fs
jae
fs
out
adc
xchg
rcrb
rorl
stos
icebp
push
dec
pop
inc
aad
or
subb
pop
cmp
inc
xor
outsl
adc
lock
aaa
pop
imul
add
adc
sar
mov
push
cmp
pop
fstpt
scas
nop
fidivrs
cmpsl
lods
inc
cmpl
outsb
subl
cwtl
sbb
fidivrs
mov
xchg
sbbl
rorl
scas
push
repnz
push
push
xor
setbe
addr16
xor
ljmp
push
in
mov
popa
fwait
jle
push
dec
out
adc
testb
sub
ljmp
inc
sti
and
lea
loopne
int
dec
les
bound
xor
test
popa
xlat
xor
push
out
or
repnz
div
or
and
cmp
shrb
inc
shrl
dec
jno
imull
popf
unpcklps
cld
mov
ds
sbb
adc
jecxz
movl
mov
pop
sti
int
pop
xlat
jecxz
in
adc
push
xchg
or
fsubrp
imul
mov
test
mov
xlat
inc
adc
mov
mov
rol
push
pop
inc
ss
sahf
ja
mov
daa
mov
fldenv
fcmovnbe
mov
mov
std
sbb
xor
fidivrs
lahf
add
jns
and
xchg
lahf
int
sbb
lods
add
push
sub
and
inc
cmp
fisubrl
dec
push
fabs
in
and
imul
sbb
stc
sub
aas
in
mov
push
jae
mov
jg
dec
std
mov
arpl
inc
cwtl
ja
rolb
xchg
or
xor
pop
popf
or
dec
mov
add
add
jno,pn
insl
bnd
dec
mov
mov
ret
repz
into
out
pop
push
dec
fidivl
pop
divb
roll
mov
add
lret
add
sahf
push
in
cmpsl
xor
and
cmp
jcxz
add
arpl
sub
enter
adc
scas
jns
movsl
ljmp
jnp
inc
adc
pushf
sub
push
push
mov
xchg
adcb
cwtl
scas
stos
nop
pop
idivl
lds
sbb
repnz
jecxz
mov
cmpsl
scas
mov
lds
lret
rorl
mov
pop
pop
inc
test
stc
pop
fwait
aam
xchg
xchg
push
xor
repnz
popl
nop
push
cmp
xchg
inc
sbb
mov
mov
adc
lcall
pop
mov
and
idivl
notb
xchg
repz
sbb
xchg
fistpll
lods
out
adc
adc
fmull
movsb
cmp
loopne
jg
cs
fsubl
add
enter
mov
add
jno
loope
xor
mov
mov
pop
cmp
mov
push
inc
push
cmpsb
and
xchg
insl
mov
pushf
lcall
dec
testb
negl
dec
test
shll
mov
cmp
test
shlb
je
push
mov
fdivr
pop
jmp
inc
jecxz
movb
pop
inc
mov
fucomip
in
test
xchg
ss
clc
movsl
sbb
mov
lret
out
cmpsl
rcrb
shrb
sbb
mov
vmulps
in
xor
incl
adc
repz
cmpsl
xchg
adc
or
addr16
repz
mov
pusha
lcall
movsl
imul
fucomp
stos
jo
pusha
adc
in
andl
add
cmp
pushf
xchg
xchg
bound
push
xor
inc
sbb
loopne
int3
adc
sbb
or
inc
mov
enter
xchg
jo
imul
add
incl
inc
cmc
xchg
decb
mov
dec
push
clc
loop
fdivrp
scas
xchg
mov
dec
adc
jmp
cmp
das
movsl
mov
and
jno
jg
adc
cmp
dec
sbb
mov
jecxz
rcl
jne
lahf
sbb
in
xchg
aad
adc
daa
movsb
mov
ss
daa
insl
jo
repz
pusha
mov
out
dec
pop
pusha
jge
add
mov
jnp
xor
or
fcmovne
sub
pop
or
jns
or
ficomps
nop
insl
rcrl
mov
jbe
imul
pop
inc
mov
pusha
out
push
std
and
mov
aam
sahf
jbe
notl
and
cs
les
in
xchg
rcll
push
jnp
scas
pop
out
cmpl
jo
lods
sarl
pop
sub
mov
clc
push
in
or
inc
loope
aaa
test
das
scas
out
add
stos
inc
ficompl
jge
hlt
stc
out
int
in
dec
jno
mov
xor
flds
jae
push
xchg
js
jl
lahf
ljmp
and
xlat
sbb
mov
rcrl
call
stos
adc
dec
adc
pop
mov
out
jle
std
dec
pusha
lods
xchg
dec
test
pop
mov
fsubs
insl
dec
or
jge
pop
clc
enter
insl
xlat
push
rcrl
add
js
push
sub
mov
pop
xlat
aaa
pop
mov
dec
or
das
lods
fldt
hlt
cwtl
fmuls
es
fiadds
loop
inc
push
inc
out
xor
loopne
out
daa
xor
inc
mov
clc
in
loopne
sbb
out
jl
and
push
jmp
mov
clc
xlat
hlt
adc
push
data16
add
sub
and
rcll
fs
addr16
call
idiv
int
dec
repnz
ret
push
out
push
pop
sbb
mov
lods
add
cli
push
arpl
mov
and
test
jnp
decb
sti
repnz
lods
mov
dec
push
sahf
cmp
cltd
scas
test
jno
das
lods
lcall
lds
fsts
mov
dec
int
or
cltd
sbb
movsl
pop
filds
out
push
mov
add
or
fstps
out
shl
sbb
popf
fistps
jb
xor
jbe
out
pop
xor
xorl
int
sub
sti
mov
or
sbb
inc
sub
mov
mov
cmpsb
js
pop
lock
outsl
mov
add
dec
aas
add
nop
sub
lret
push
movsb
iret
mov
lahf
cmp
cli
loopne
in
inc
fistpll
xchg
xor
loop
xchg
out
jb
jmp
mov
ret
and
cltd
aam
sbb
add
mov
inc
mov
dec
sbb
insl
jo
jbe
pusha
in
pop
pop
sahf
add
and
cmp
insb
in
add
sti
xor
pop
jbe
incb
iret
add
and
movb
mov
xchg
inc
int
push
sub
addb
jecxz
fwait
mov
ds
sbb
add
jecxz
sbb
push
iret
push
cmp
sub
xor
pop
lahf
push
js
scas
es
or
repnz
insb
mov
pop
xor
mov
lods
mov
fcmove
popa
push
pusha
lods
adc
pushl
aaa
xchg
call
or
scas
add
js
fistl
repz
int
gs
popl
sbb
jmp
lock
insb
push
aam
and
mov
xor
push
outsb
mov
nop
outsl
or
pop
ret
xchg
and
fmulp
mov
cmpsb
mov
outsb
lds
add
mov
or
ret
mov
rorl
mov
mov
cltd
repz
scas
fcompl
and
sub
mov
lods
aad
or
lea
sub
pop
xor
xchg
pop
das
lock
inc
cltd
push
jno
shlb
cmp
subl
pop
in
xchg
repz
lods
je
xchg
cmpb
fcoms
clc
push
lea
or
lds
push
movsl
rclb
xchg
sub
fstpt
inc
mov
jns
cmp
fcoms
sbb
pshufw
aam
rcll
imul
jo
dec
adc
mov
out
add
pop
in
and
pop
jnp
or
add
mov
test
out
arpl
decb
call
xchg
mov
inc
add
adc
sar
xor
cmp
jne
push
xor
mov
iret
les
sub
pusha
out
ja
lock
push
adc
sbb
and
jmp
and
jne
pop
xchg
insb
and
cmp
stc
cmp
stos
dec
xchg
add
mov
inc
mov
subb
js
aas
outsl
adcb
fstp
sub
inc
pop
rcr
mov
mov
hlt
mov
or
out
shrl
lret
push
inc
adc
cmpsb
xchg
mov
dec
push
test
pop
popf
push
or
dec
and
and
dec
push
dec
insb
sub
push
inc
scas
test
mov
andb
std
mov
lock
dec
and
scas
les
cwtl
data16
push
add
clc
jle
fistpl
xor
hlt
hlt
cmpl
sub
outsb
xchg
mov
insb
jns
dec
aaa
mov
cmc
fwait
maxps
testl
pop
mov
mov
jb
in
pop
and
and
jecxz
sahf
mov
mov
rcr
push
dec
xchg
cmp
pushf
sbb
fadds
mov
out
sub
sti
and
std
xor
pushf
add
std
jl
xor
add
mov
pop
and
lods
aas
mov
popf
sbb
push
popf
sbb
jmp
dec
inc
ja
loop
cs
adc
loope
aas
mul
out
mov
ret
jl
lds
shl
outsb
popa
pop
scas
or
pop
test
out
xchg
arpl
lds
push
cmp
dec
cmp
cmpb
cli
xor
icebp
pop
decl
fnsave
dec
inc
fmuls
aaa
shll
loope
shrl
dec
cli
ret
add
cltd
shlb
cs
dec
or
sahf
mov
in
hlt
push
mov
sub
arpl
sub
jb
xor
pop
mov
imul
jp
leave
or
cmpxchg
xchg
shlb
adc
sub
sub
call
outsb
sahf
cmp
arpl
dec
pop
loope
iret
mov
jg
mov
dec
dec
lea
dec
sarl
nop
fstpl
es
daa
shr
inc
enter
daa
in
sahf
xchg
stos
leave
leave
ljmp
dec
or
iret
pusha
movsl
add
rolb
dec
pop
mov
stos
fisttpll
cmp
out
inc
dec
test
xor
ja
flds
popf
nop
shrb
xchg
jmp
lods
and
push
push
je
fwait
mov
dec
shll
sub
push
iret
shlb
pop
dec
inc
icebp
add
mov
dec
es
fcom
icebp
mov
fisttpll
in
fwait
in
fldt
and
mov
mov
addr16
jl
xor
lods
notl
xchg
adc
add
popaw
mov
mov
imul
adc
sti
lods
sti
jbe
pop
imul
fcomps
test
hlt
cmpsl
in
insl
cli
cmp
out
xchg
pop
jne
rorb
lahf
xor
add
dec
sub
cmp
iret
lods
insb
or
shrl
pop
jnp
stos
add
fwait
adc
das
or
jg
aaa
imul
scas
cmp
cmp
js
cs
mov
daa
dec
mov
shlb
mov
test
push
mov
ret
dec
cli
je
mov
add
es
sbb
sbbl
std
cwtl
add
cmp
push
fs
gs
xchg
fildl
jbe
call
push
adc
filds
xor
xchg
fstps
xor
fdivrs
addl
push
sahf
orb
mov
loopne
jge
loop
lea
in
sub
imulb
cltd
jae
mov
or
jl
push
cmp
cmc
aaa
scas
enter
push
jmp
push
mov
popl
scas
cmpsb
cs
inc
cs
adc
jnp
fcoms
push
xchg
loope
pop
imulb
popf
push
rorb
sub
aaa
out
inc
cmp
mov
cmp
loopne
and
ror
adc
mov
dec
lock
cmc
jecxz
pop
pop
daa
mov
fwait
incl
fcomp
jne
mov
push
mov
ror
inc
mov
pop
paddq
add
mov
out
push
hlt
lock
mov
lcall
enter
mov
pop
pop
into
ss
pop
negl
nop
lahf
jno
in
gs
add
sub
test
add
adcb
jge
sbb
or
mov
mov
and
and
jnp
in
clc
cmp
and
out
insb
test
xor
aad
lea
xor
je
jg
movsl
xor
popa
adc
int
add
xor
in
les
push
dec
jne
push
push
adc
les
jmp
add
xchg
or
stos
mov
ljmp
inc
call
xchg
bound
stos
lret
cmpsl
outsb
sub
sbb
add
aas
mov
ss
pushf
iret
movsb
push
add
mov
addr16
test
lock
cli
mulb
cmpsb
test
push
pop
iret
push
fisubs
sbb
movl
jne
js
mov
push
pop
inc
adc
out
or
in
mov
inc
mov
fimull
and
fwait
movsl
pop
into
sbb
jecxz
dec
add
addr16
xor
fstl
xor
cmpsl
cli
mov
pop
imul
testl
sti
data16
xor
imul
aas
es
sub
pushf
cmp
popa
mov
sbbb
into
cmpsb
sbbl
jne
or
sub
xchg
mov
inc
xchg
and
ficoml
dec
out
jb
and
adc
mov
ret
xchg
out
into
jne
jecxz
cli
pop
mov
pop
mov
push
inc
inc
push
jge
pusha
dec
jnp
shl
inc
loope
loopne
inc
xchg
or
fisubl
sub
xor
je
out
mov
test
popf
adc
dec
dec
arpl
aas
cmp
adc
fimuls
sbb
daa
movsl
addr16
mov
cs
pop
out
cmp
fidivrl
decl
add
int3
push
jae
inc
icebp
mov
mov
out
fadds
or
out
movsb
cmpsb
xchg
out
xor
pop
mov
or
xor
adc
cmp
sub
in
adc
ret
enter
or
sbb
inc
or
mov
mov
dec
and
sbbl
mov
adc
inc
mov
push
push
jmp
xor
jns
add
lcall
pop
xor
push
push
out
leave
pop
cmp
mov
outsl
pushf
jge
imul
daa
insb
and
add
fsubl
sub
aas
lock
sahf
outsb
inc
sti
cmp
cld
in
dec
aam
leave
pop
aaa
in
cmp
mov
lods
cs
lret
ds
nop
mov
fmull
and
or
mov
mov
sbb
lea
cmpsb
imul
mov
push
mov
pop
sbb
jnp
shll
pop
dec
push
and
ficomps
outsb
icebp
aaa
cmpsb
and
xor
push
cmpsb
xchg
jno
mov
xor
mov
xchg
adc
dec
mov
cmc
sbb
push
data16
pushf
jle
mov
mov
xchg
out
adc
into
mov
add
push
mov
cli
pop
out
mov
outsl
xor
inc
add
andl
inc
mov
imul
ffree
jg
jmp
not
das
aas
or
into
jbe
fwait
vminss
pop
jno
aam
jg
gs
dec
mov
lret
mov
cmc
fs
xchg
scas
mov
mull
sbb
xchg
iret
push
ret
sbb
and
decl
add
aaa
out
pop
jbe
jne
mov
roll
fldt
subl
pop
mov
andb
in
icebp
cmp
xor
es
mov
push
scas
sub
aas
mov
data16
jle
cmpsb
jnp
out
sbb
data16
rol
adc
movsb
sub
out
jecxz
push
xchg
mov
xor
cmpsb
leave
aas
dec
push
fs
rcrb
pop
cld
mov
and
xchg
lcall
movsl
lret
into
xchg
into
cmpsl
repz
arpl
rol
jle
adc
or
sub
insl
dec
cmp
es
pop
iret
adc
ret
inc
dec
adc
add
sub
sbb
lret
xchg
push
adc
mov
gs
dec
or
jge
lret
aas
scas
xor
mov
xchg
faddl
sarb
add
add
in
inc
push
cld
lds
pop
and
jne
mov
scas
mov
pushf
sbb
or
sar
or
cmp
dec
fmuls
add
loopne
push
imul
jnp
ficoms
aaa
cmp
and
sbb
adc
outsl
mov
adc
lds
xchg
jb
js
or
clc
inc
mov
add
ljmp
mov
jecxz
push
adc
mov
addr16
aaa
loopne
cmp
sarb
movsb
jnp
or
imul
pop
repz
sub
ret
out
out
sub
pop
pop
inc
pop
jb
add
adc
dec
out
mov
imul
xor
add
pop
std
cmp
sti
xor
inc
nop
jno
testl
pop
push
inc
ret
jae
push
ja
or
hlt
out
jne
xchg
sbb
loope
mov
sub
push
pop
popf
add
inc
inc
mov
sarb
imul
int
aaa
cmp
fxch
mov
xor
jno
loope
xchg
mov
test
test
inc
cs
xchg
dec
loop
jp
xchg
pusha
and
adcl
jo
cmp
loop
clc
fcmovne
sbb
pop
mov
lds
xor
aad
dec
nop
outsb
enter
cmpsl
fimull
lret
jmp
sbb
cld
pop
int
cli
xchg
lock
ja
dec
mov
inc
xchg
and
and
mov
in
mov
pop
sarb
movsl
pushf
push
movsl
lcall
jl
xchg
cmp
add
adcl
jp
inc
test
subl
mov
sub
dec
pop
dec
sbb
sbb
int
rcrb
pop
xchg
xchg
aad
es
in
int3
xlat
in
test
or
sub
cmpsb
loopne
mov
mov
vmread
dec
fcomps
arpl
clc
xor
fucom
mull
jmp
movsb
sub
outsl
test
test
jmp
pop
mov
inc
lock
sub
jae
call
push
daa
test
loope
xchg
repnz
inc
adc
pop
xorb
lcall
or
push
mov
movsl
xchg
shll
imul
xchg
sbb
addr16
mov
scas
rcrb
xor
fcomip
int3
push
je
mov
cmp
jge
dec
inc
cmp
jecxz
into
outsb
and
shrl
dec
inc
lock
or
jae
int3
int
mov
mov
push
ds
cld
xor
hlt
xchg
sub
push
dec
or
jo
pop
rclb
add
in
cmp
aam
dec
setp
test
mov
and
cmpsb
adc
jl
push
adcl
aam
imul
test
out
cmp
rep
stc
sub
arpl
clc
call
ja
test
insl
xor
call
cmp
sbb
mov
dec
xchg
fs
xor
sbb
add
or
cld
cmp
cs
dec
xor
out
dec
lret
pop
mov
xchg
and
in
sub
mov
xor
xchg
sub
mov
sub
outsb
add
mov
and
adc
adc
xchg
popa
xchg
push
or
cs
rep
aad
mov
dec
cwtl
inc
mov
sub
sub
xor
push
imulb
shlb
inc
add
fcmovne
das
mov
inc
push
and
pop
cmp
mov
test
dec
shlb
fsubs
aas
loope
push
pop
bound
xor
fsts
out
sub
outsb
les
mov
test
add
mov
pop
mov
mov
imul
xor
ficoml
sti
xchg
mov
sti
add
mov
xchg
lds
out
dec
push
sahf
sti
clc
js
mov
push
mov
mull
push
fisubs
mov
stos
push
out
pop
test
fadd
mov
loop
mov
pop
xchg
loope
je
pop
lods
pop
mov
mov
sbb
mov
adc
fcomi
popf
rcrb
mov
mov
mov
fbstp
out
out
or
inc
mov
mov
gs
jnp
daa
dec
mov
enter
push
ja
pop
ds
enter
mov
cmp
daa
lret
push
scas
sbb
fnstenv
insb
inc
or
dec
adc
repz
cmp
mov
pop
sbb
mov
aam
mov
sti
insl
fsub
out
icebp
mov
inc
filds
sarl
icebp
sbb
stos
mov
xor
in
xchg
cmpsl
adc
mov
fsubl
inc
xchg
cmp
sbb
xchg
enter
insb
mov
inc
movsl
and
lahf
jecxz
jecxz
shlb
dec
test
aad
hlt
pusha
fwait
jg
or
clc
jns
es
pop
sbb
or
addr16
int
cld
xchg
test
mov
xchg
sahf
or
and
sahf
incl
or
or
movsb
popa
stos
mov
xchg
fisttpll
mov
cmc
jp
inc
and
adc
aaa
shrl
mov
sbbl
cmp
cmp
jbe
jne
lock
pop
lfs
dec
or
dec
out
rcll
pop
loope
cmp
or
std
mov
or
popf
or
pusha
sbb
pop
xchg
int
repnz
sub
add
add
xor
add
dec
push
add
pop
push
add
add
add
dec
push
add
pop
push
add
add
add
imul
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
