pushl
dec
cmc
bt
not
cmp
xor
clc
bt
rol
cmp
call
jne
mov
into
inc
mov
stos
or
jecxz
pusha
dec
mov
out
inc
mov
test
pop
mov
and
mov
ret
xchg
je
push
testb
pop
push
ficoms
daa
jmp
bound
adc
rclb
xor
int
mov
leave
shll
sbb
xor
test
out
pop
dec
lock
or
push
jno
call
adcb
jp
aam
nop
add
push
mov
mov
pop
mov
pop
mov
lea
jae
sar
mov
lea
mov
bsf
mov
cmc
test
cmp
cmp
sub
test
clc
pusha
repnz
pusha
lea
jne
stc
stc
btc
mov
movzbw
adc
btc
bsf
sub
adc
mov
stc
sub
cmp
test
pushl
push
bt
pushf
push
cmp
movw
mov
movl
jmp
fisttps
sbb
lock
rcrl
nop
dec
jle
in
mov
or
daa
in
mov
xor
test
leave
fwait
outsb
lret
or
mov
mov
outsl
or
arpl
jecxz
insb
aad
outsb
mov
and
fs
decb
xchg
mov
cwtl
pop
adc
les
repnz
push
lods
ljmp
adc
pop
ss
stos
fxch
mov
pop
psubw
and
cmpsl
jns
popf
inc
leave
int3
loop
jae
jle
mov
mov
add
mov
lea
push
push
push
pushf
lea
call
pusha
jmp
lea
mov
decl
xchg
aam
js
cld
fisubrl
pop
cmp
pop
xlat
jmp
or
mov
or
sub
jl
ja
fildl
je
dec
loope
cmp
push
inc
lret
push
or
loope
cmp
lret
jne
movb
dec
and
mov
push
dec
lods
rcl
jo
movsb
in
and
pop
sbb
gs
into
scas
adc
jnp
daa
push
jno
insl
incb
pop
mov
nop
sub
jnp
shrl
out
dec
stos
bound
ja
loopne
push
cmpsl
jo
sub
addr16
sar
xor
dec
es
push
add
or
ds
xor
arpl
push
lret
leave
or
test
sbb
dec
push
mov
jle
mov
and
ss
push
aam
daa
xor
push
rcl
out
daa
or
popa
stos
call
dec
pop
adc
shlb
dec
stos
outsl
rclb
rolb
mov
adc
idiv
loope
mov
lods
lahf
leave
add
adc
mov
and
xor
inc
pop
cwtl
sub
out
ret
rcll
xorb
mov
pop
in
and
ja
ds
insl
mov
xchg
xorl
mov
sbb
jnp
adc
add
lea
insl
in
and
mov
or
add
push
call
out
cmp
cmc
dec
or
or
or
xchg
mov
fisubrl
aad
jecxz
stc
out
popa
sub
adcb
arpl
enter
xchg
inc
fidivrs
push
xor
bswap
fmull
roll
ja
cwtl
push
lcall
andl
dec
cmpsl
popa
cltd
out
icebp
orl
hlt
lods
mov
mov
pop
mov
jge
cli
nop
aaa
sub
les
sahf
lret
mov
or
push
inc
cmp
clc
or
or
aad
cmp
jmp
notb
cmc
fsubs
cmpsb
and
cmpsb
mov
lods
mov
and
cs
cmp
rcll
arpl
pop
scas
mov
out
add
jb
push
sbb
push
jo
add
cmp
shlb
sub
pushf
jp
sbb
imul
lods
movsb
xlat
push
lret
jns
add
dec
sbb
cmp
addr16
dec
sbb
adc
cwtl
popa
enter
cld
loopne
jle
aas
pop
arpl
imul
dec
int3
and
push
mov
sarb
push
jns
js
dec
nop
cmpsl
rcrb
sub
clc
shll
jno
push
pop
jae
pop
std
pop
out
mov
mov
je
insl
jge
sub
dec
fsubr
hlt
pop
jmp
out
dec
sub
sahf
cmp
test
nop
add
mov
sub
shlb
xchg
repz
test
or
std
imull
or
outsl
pop
mov
mov
stos
call
fldcw
rcl
push
call
adc
hlt
imul
je
jmp
push
call
addr16
mov
and
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
scas
lret
jmp
cmpsl
inc
sbb
popf
sub
pop
cmpsb
sub
lret
shll
call
push
xor
mov
loopne
std
mov
push
and
mov
add
fisubs
jge
or
lea
xchg
pusha
fadds
popf
fldl
stos
and
push
jle
cmp
out
jl
mov
inc
or
pxor
enter
xchg
popf
hlt
and
cmp
in
or
xor
stos
stc
fcmovu
or
mov
sub
pop
outsl
push
popf
push
pop
cld
fwait
mov
dec
imul
jnp
test
nop
leave
out
test
mov
stos
test
add
xor
pop
jl
add
mov
cld
das
sub
dec
cli
std
mov
cmp
prefetch
dec
jb
lods
icebp
pop
les
add
les
cmp
adc
xlat
mov
push
push
call
jge
jp
sarl
pop
xor
xchg
mov
les
push
pop
inc
adcl
add
sbb
xchg
and
push
das
mov
mov
adc
loop
adc
add
sub
xchg
cmp
into
xchg
inc
cmp
dec
xor
push
pop
xchg
insb
push
or
mov
lret
stos
out
mov
scas
xor
out
ror
cli
ret
test
xor
les
out
push
add
lea
cli
sub
or
mov
jg
pop
in
add
scas
sub
jg
pop
call
loopne
jbe
stos
mov
loope
jbe
popf
lahf
push
and
subb
pusha
add
clc
jecxz
rclb
jno
fnsave
add
jecxz
jl
pop
js
cmc
lahf
xchg
sub
fsubrl
jno
cmp
lods
push
add
lcall
mov
lcall
mov
rep
mov
pop
inc
xor
push
daa
jne
xchg
mov
out
or
or
push
lds
ret
popf
in
lret
pop
sbb
lahf
sahf
mov
outsb
pop
adc
sub
mov
insb
int
push
pop
and
mov
sbb
push
in
fldt
sub
adc
mov
mov
das
lcall
xor
pop
push
loopne
pushf
stos
jns
lret
shll
aaa
add
arpl
xor
xor
sbbl
sti
popa
sbb
lret
test
aad
jecxz
push
call
fisubl
push
pushf
call
push
call
imulb
pop
mov
lea
jmp
push
call
sbb
sub
ljmp
int3
dec
test
dec
push
push
test
pop
and
sub
mov
cs
mov
push
push
gs
scas
lock
std
call
fdivrp
mov
insb
push
jbe
cmpsl
sub
movsb
pop
mov
mov
pop
inc
sub
xor
jne
jle
mov
mov
xchg
jae
sbb
inc
cmp
cmpsb
sbb
idivb
xchg
enter
add
ret
aaa
xor
inc
mov
dec
test
in
push
xor
pop
jno
xchg
sahf
mov
pop
sar
sbb
clc
jo
roll
push
lods
pop
jno
je
rcr
into
testl
fcomps
insl
add
inc
test
sbb
push
repnz
aad
or
or
in
xor
xchg
sub
and
jl
xlat
push
ja
stos
adc
adc
add
dec
xor
enter
cmp
push
mov
out
sbb
add
dec
scas
push
movsb
pop
sub
mov
cmp
and
movsb
hlt
pop
js
adc
rcl
clc
lret
int3
sub
push
fidivrl
fnstenv
aas
sub
fmulp
fcmove
out
sub
mov
cltd
sbb
cmc
loopne
push
adc
jle
fs
aad
neg
ror
stc
lea
mov
pusha
bt
pusha
call
pushl
popl
push
mov
pushl
ret
push
call
mov
bt
bt
add
pusha
lea
jne
ja
pushfw
mov
dec
mov
jmp
ret
cmp
repnz
lcall
jae
mov
push
pop
enter
sbb
lea
mov
cmp
lods
movb
jmp
repnz
dec
ja
lods
add
mov
fildll
jns
xor
out
xchg
xor
lcall
push
add
clc
inc
fxch
and
push
mov
filds
sub
icebp
dec
xchg
fidivrs
jle
cmpsl
movsl
in
divl
mov
data16
cltd
clc
sbb
call
dec
cmp
jmp
div
mov
rcl
outsb
xor
push
sbb
pop
call
jge
outsb
xor
sbb
cmpsb
cld
sub
push
push
popa
in
imul
aam
shl
push
mov
dec
inc
ret
repnz
push
or
fstpl
sbb
and
mov
xor
cltd
mov
push
cs
push
lds
jle
sbb
data16
data16
pop
push
sub
lods
mov
dec
das
mov
repz
fadds
insl
ret
rclb
mov
dec
ss
ret
jae
sbb
push
push
push
cld
xorb
or
aas
pop
call
icebp
or
cs
xchg
sbb
adc
pop
insl
push
jmp
mov
ljmp
jp
jle
mov
mov
and
jle
dec
mov
mov
mov
call
push
call
int3
sbbl
lea
aaa
rcrb
mov
shll
iret
push
inc
push
divl
and
les
scas
cmp
insl
pop
mov
inc
and
lock
xor
lret
pop
ror
push
inc
movsb
push
jge
pop
sub
lods
bound
xor
aas
ja
daa
mov
mov
mov
pop
xchg
cli
rsm
lods
mov
loop
mov
clc
fdivrl
xchg
dec
loope
push
cmp
aas
mov
clc
sti
addb
push
pop
cmp
femms
inc
or
stos
pop
loop
inc
and
xchg
lea
je
bt
stc
stc
cmp
cmp
pushf
push
pusha
lea
je
stc
jmp
jmp
push
call
nop
pop
repz
pushf
jmp
add
inc
js
je
jb
arpl
jae
pusha
push
adc
jmp
push
call
mov
jl
push
into
mov
mov
lods
out
push
mov
data16
getsec
inc
sahf
in
enter
hlt
inc
mov
push
ss
ja
xchg
jae
jae
adc
push
sub
popl
aad
int3
js
sti
mov
pop
add
push
stc
adc
add
js
sti
mov
pop
lock
mov
testb
xor
mov
repz
jecxz
les
das
pop
movl
faddl
xor
cwtl
fnstsw
jle
mov
leave
movsb
out
add
jp
mov
or
or
jg
pop
and
push
cmpsl
sbb
jb
mov
sbb
or
loope
xchg
pusha
pop
add
jmp
adc
push
and
adc
js
std
sahf
xchg
mov
outsl
push
mov
les
daa
lock
inc
cli
fdivs
aad
mov
popa
stos
hlt
jl
sbb
sahf
xor
pushf
jmp
lret
push
sub
add
loop
lret
mov
pop
rcrb
orl
icebp
push
call
pushf
push
call
in
jmp
in
dec
xor
call
fcomi
mov
leave
inc
test
lret
or
dec
mov
fwait
js
mov
mov
ficompl
mov
fwait
pop
cmp
in
fimuls
imul
cmpsb
out
or
dec
cltd
pop
xchg
inc
inc
je
es
enter
mov
leave
cmp
adc
popf
sbb
fisubrl
rorl
sti
mov
aam
iret
movsb
gs
pop
push
jp
repz
pop
dec
insl
jge
mov
push
xchg
rclb
mov
mov
addr16
push
pop
shll
je
cmp
clc
jne
pushf
fld
pushf
fucom
or
jge
imul
xor
aas
push
ja
daa
push
adc
stos
leave
mov
cmpsl
test
out
movsb
mov
xor
and
lock
out
dec
mov
or
cmp
lcall
pop
jb
mov
lock
push
mov
lret
scas
lock
adc
push
cmp
or
jmp
test
test
add
sub
pushf
cmp
test
pushl
add
pushf
call
push
call
mov
jg,pn
sub
shlb
add
ja,pn
xchg
mov
and
ljmp
call
mov
push
call
sub
cmc
sub
mov
add
das
popa
cld
mov
adc
inc
mov
test
repnz
mov
cmp
or
push
dec
aad
xor
dec
icebp
mov
out
adc
push
lcall
mov
les
sbb
stos
sti
sahf
lods
jl
mov
fisubl
push
sub
cs
iret
sub
mov
cwtl
xor
and
test
mov
je
out
push
cmp
add
xlat
sbb
pop
jae
cmp
roll
adc
adc
stc
outsl
pop
inc
adc
or
dec
and
test
sbb
xchg
daa
mov
movsbw
mov
mov
pushf
pushl
ret
push
call
mov
insb
xchg
in
push
adcb
into
or
movb
outsb
push
adc
in
shll
pop
jp
addr16
repnz
xor
jecxz
aas
data16
pop
sbb
pop
stc
push
cli
scas
outsl
or
jp
addr16
and
mov
stos
lea
popf
icebp
fdivr
ds
jno
or
cmp
xlat
ja
aas
inc
sub
mov
jmp
push
rcrb
sub
and
les
sub
imull
add
shlb
outsb
inc
inc
mov
js
pop
cmp
int
sbb
divb
hlt
orl
bound
int3
xor
test
lods
movsb
daa
and
add
hlt
rorl
int3
sbb
cmpsb
imul
scas
mov
lea
dec
jmp
mov
or
insl
iret
or
sbb
mov
dec
cmpl
movsl
sbb
or
clc
lods
enter
add
add
add
sub
add
add
shrb
add
repz
dec
add
add
add
subb
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
jle
add
xor
mov
sub
call
std
sub
add
add
or
add
lea
jb
push
test
cmpb
pusha
call
pushf
shlb
pop
xchg
mov
xor
ds
sti
andb
ss
inc
sub
aam
push
pop
pop
outsb
xchg
sub
subb
or
movsl
cmpsb
int3
arpl
adc
xor
dec
xorb
mov
inc
sub
adc
stc
and
xchg
and
je
sub
pop
ret
or
leave
mov
int
call
mov
push
rcll
mov
arpl
sub
imul
or
outsb
push
or
mov
sbb
mov
inc
in
sub
or
or
push
outsl
ja
ja
gs
outsl
jo
jo
add
test
nop
add
pushf
jmp
push
call
cltd
push
mov
jne
mov
ret
add
xor
and
xchg
test
mov
inc
jge
call
cs
mov
adc
iret
adc
cmp
or
sbb
cli
ja
rcl
push
or
mov
pop
jb
inc
jnp
addb
ds
mov
mov
jo
iret
pop
inc
aam
lcall
or
sbb
andb
pop
addr16
xor
add
inc
je
rclb
mov
or
clc
xchg
sbb
ja,pn
xchg
call
mov
sbb
call
dec
push
mov
push
call
jl
lock
pop
sarb
jns
xchg
adcl
jle
loop
int
jno
sub
xor
add
push
loopne
mov
xor
das
add
mov
aaa
sbb
mov
xchg
decl
sbb
insb
sub
mov
xor
inc
xlat
mov
add
sbb
pop
push
jmp
sbb
mov
ja
and
leave
xchg
addr16
xor
push
mov
add
push
call
xor
cs
frstor
jb
and
sub
ja
cld
call
outsb
dec
xor
jl
pop
fwait
xchg
or
imul
enter
pop
xchg
ds
loopne
ss
sub
jns
jle
shll
pop
dec
dec
cmp
inc
and
dec
xorl
fldl
out
das
dec
cmp
jns
xchg
das
cmc
test
fnstsw
test
popa
int
or
ret
push
pop
dec
cltd
int3
jmp
jg
add
popl
stc
add
cmp
les
push
mov
jle
hlt
pop
push
cs
cmp
enter
dec
imul
ja
and
add
add
pop
cmp
clc
dec
popa
push
pop
xchg
jno
xorl
idivl
jl
xchg
inc
xor
and
mov
xchg
iret
lods
cmp
imul
sbb
sub
jo
jno
in
popa
das
lea
xchg
rcr
inc
insb
loope
shlb
or
fstl
out
xor
xchg
mov
dec
push
or
icebp
inc
ret
lock
xchg
in
pop
outsl
cmp
iret
and
pop
inc
push
fsubl
and
loope
call
sub
out
sbbb
psllq
jle
cs
loopne
call
cmpsl
lret
loop
add
and
cmp
mov
mov
outsl
mov
adc
inc
out
or
lds
cmp
nop
movsl
adc
jle
xchg
cmp
int3
into
out
mov
xchg
test
test
pop
pop
mov
or
push
call
jle
bound
inc
xchg
sbb
test
mov
sbb
mov
sbb
mov
cmp
fwait
sub
add
mov
and
je
outsb
xchg
dec
cmp
mov
xor
out
sbb
and
push
add
cmpsb
xchg
sub
out
pushf
shlb
adc
leave
inc
insl
insb
push
out
mov
push
out
cmc
jp
js
jmp
stc
ret
push
pop
in
mov
mov
push
scas
movsb
mov
or
mov
jle
cwtl
icebp
out
sbb
popa
fwait
inc
push
jnp
in
es
xchg
fs
aam
mov
insl
jmp
movsl
movsb
pop
dec
cmp
xchg
int
adc
jmp
mov
dec
in
sub
aas
mov
cmpsl
lock
jbe
fists
sbb
cmp
mov
sbb
sbb
cmp
push
inc
scas
imul
gs
jmp
leave
fcoms
pop
lock
push
ret
push
aam
in
gs
cli
xor
jle
mov
or
push
rol
mov
imul
sbb
sbb
sahf
jmp
mov
shl
das
lods
fxch
jne
ficomps
dec
test
stc
mov
xchg
lds
out
das
cli
and
pop
das
fmuls
mov
testb
inc
push
add
jne
cmp
push
xchg
mov
dec
jg
sbb
je
clc
sahf
jmp
pop
lahf
push
jl
mov
jmp
sbb
add
and
or
push
stc
add
pushl
movzwl
pusha
not
pushf
movsbw
lea
not
movzbw
movzbw
mov
call
cmpsl
xchg
jmp
lock
js
imul
mov
push
or
pop
int
inc
pop
repnz
cmpsl
shll
dec
insl
push
xchg
push
ljmp
mov
ljmp
arpl
xchg
ja
stc
sbb
jb
subb
stc
decb
jle
cmp
addr16
jge
and
pop
lahf
push
outsl
sub
call
lods
jge
mov
xchg
fcoms
idivb
fimull
pop
imul
fsubrs
xor
ret
out
mulb
loopne
xor
dec
mov
sub
gs
test
loope
mov
ret
mov
insb
lea
fidivrs
jmp
aaa
mov
nop
test
dec
or
test
inc
cmpsl
loop
jle
or
jg
mov
add
push
sub
xchg
shll
add
and
inc
ljmp
clc
aad
pushf
jnp
stc
push
inc
mov
mov
mov
data16
js
ja
repnz
aad
cmp
sub
xchg
inc
ret
clc
xor
sarb
les
and
jmp
push
sarb
mov
icebp
sbb
inc
cmp
jbe
mov
jno
and
jle
mov
fucomip
rorb
popa
adc
pusha
jmp
inc
jle
daa
or
popa
stos
mov
add
ss
repnz
dec
mov
ljmp
pop
xlat
ss
sbb
sbb
arpl
vmread
inc
xchg
xorb
mov
shlb
mov
jns
xchg
test
mov
loope
fnsave
decl
inc
cltd
outsb
lret
rclb
pop
test
push
mov
or
sub
scas
imul
xchg
mov
lods
addr16
gs
or
sub
cmp
rolb
rcl
sub
clc
ror
jmp
inc
aad
lret
scas
jns
inc
les
nop
jmp
mov
aad
das
popa
cmp
inc
in
fsubr
into
and
push
cli
arpl
movsl
sbb
mov
mov
jne
cmp
ljmp
jg
aas
test
data16
pop
or
test
inc
lds
repnz
xor
out
scas
in
sbb
rcl
in
or
enter
sbb
mov
sahf
xor
fs
aam
add
or
movsl
lods
pushf
mov
movsl
or
xchg
mov
cmpsl
and
jbe
mov
fsub
and
inc
xchg
xor
mov
sbb
adc
mov
in
roll
push
fsts
insb
in
ds
mov
push
mov
pop
stos
pop
xchg
xchg
push
or
call
rolb
dec
adc
add
mov
lahf
sub
clc
mov
lahf
or
ret
push
call
jge
clc
ficompl
sbb
fisubrs
aad
into
xor
aam
mov
xor
aaa
lock
sub
rcll
inc
int
push
and
push
mov
bound
out
sub
mov
and
push
je
mov
xchg
cmpsb
mov
out
int3
inc
and
jno
cmpsl
or
cmp
arpl
lods
pop
mov
mov
or
aaa
in
mov
mov
sub
mov
xor
or
xor
push
push
call
jo
ja
pop
inc
mov
je
mov
sbb
push
std
or
inc
leave
mov
xchg
nop
imul
push
fcoml
jecxz
push
jno
mov
jb
stc
fld
fbld
mov
jno
and
cmp
inc
and
cmpsb
or
xor
daa
sub
ret
sarb
or
jb
gs
push
sub
jle
mov
dec
push
call
jle
pushf
std
jnp
push
clc
push
es
push
add
rorl
inc
or
push
je
jo
cwtl
in
jp
int3
mov
test
sbb
jge
cmpsl
jmp
cmp
mov
xchg
jae
shl
add
rorb
dec
data16
enter
rorb
outsl
aad
and
insb
adc
dec
and
aas
push
lods
jbe
cwtl
in
ret
lods
fnstsw
imul
or
add
hlt
push
call
mov
dec
call
repz
ds
imul
rcrb
in
sbb
or
add
lahf
cmp
pusha
cmp
cwtl
inc
sti
out
rol
insl
nop
int
fcmovu
dec
cmp
lock
gs
aam
jecxz
mov
inc
mov
dec
xor
dec
dec
je
cld
sbb
mov
cmp
xchg
repnz
sbb
popw
inc
cs
cli
and
mov
xchg
lcall
shlb
mov
push
or
test
adc
push
pop
jg
mov
dec
js
cmp
mov
push
jle
pop
shr
sarl
mov
jl
dec
test
ds
or
jge
jge
movsb
mov
idivl
push
push
mov
mov
push
mov
dec
jbe
fnstenv
test
scas
in
adc
jnp
test
into
arpl
divl
push
jle
mov
imul
cmovle
xchg
pop
in
xor
rclb
cmp
cmp
call
dec
mov
push
mov
push
push
mov
push
mov
add
pop
cmpl
bound
mov
mov
sbb
and
test
xor
in
int
jb
mov
ja
loope
lea
jns
in
jb
cmp
loope
add
fistps
dec
hlt
aam
or
jae
enter
mov
loopne
or
push
jl
or
loope
mov
cmpsb
or
or
sub
mov
jg,pn
xor
inc
mov
mov
xor
subb
jmp
cmp
popf
incb
mov
sub
cmp
lea
negb
xor
sbb
cwtl
out
rcr
push
and
lcall
push
in
neg
out
cmpsb
jecxz
pop
inc
dec
push
adc
add
mov
ss
or
push
jae
or
add
insb
sub
xchg
cmp
int3
fstps
dec
or
adc
or
xor
out
call
sub
test
incb
or
or
add
xor
scas
pop
xor
xchg
movsl
leave
pop
adc
ja
cmc
cli
and
jns
cmpsl
aas
imul
jo
cwtl
mov
jbe
insb
fwait
inc
and
xchg
cwtl
push
xchg
les
aaa
sub
push
cmc
aad
sti
in
mov
mov
dec
test
jmp
repnz
int3
push
in
je
cmp
add
mov
insb
mov
jle
pop
xor
sti
call
or
pop
sub
stos
mov
add
ja
ljmp
xchg
dec
das
lods
testl
stos
inc
lret
loopne
lds
cltd
sub
push
inc
mov
pop
sbb
std
inc
into
das
leave
leave
in
sub
stos
ljmp
popf
push
lcall
das
stos
jne
xchg
cltd
or
adc
sub
das
insb
cmc
std
leave
fwait
in
cmp
call
bound
mov
mov
mov
test
sbb
imul
outsl
or
test
orb
add
aaa
outsl
pusha
xor
in
mov
loope
jns
shl
test
fcomps
mov
loope
xchg
and
cmpsl
push
daa
and
and
mov
mov
xchg
mov
and
testl
pop
aaa
adc
nop
inc
adc
out
pop
add
dec
repnz
fwait
cmp
bsr
popa
leave
or
punpckhdq
adc
add
cmp
lret
lods
mov
stos
das
in
pop
lahf
loopne
cltd
cltd
mov
xlat
pop
lds
adc
cli
add
pusha
pop
jb
popf
mov
fucomip
lret
mov
hlt
fstps
pusha
mov
xor
call
inc
shll
cltd
loope,pt
insl
pop
popa
lret
sbb
js
add
xor
testb
mov
xchg
jae
jmp
rorl
add
rcrl
or
add
add
lret
push
jg
jns
out
and
stos
lods
push
push
jno
arpl
mov
mov
int3
fs
das
mov
mov
mov
mov
std
subl
stos
clc
insl
xchg
sbb
jns
mov
mov
xchg
sbb
push
jns
fisubrs
mov
sahf
cmpl
add
dec
sub
out
push
mov
stos
das
int
xchg
inc
in
mov
mov
cwtl
out
insb
xchg
sbb
sbb
or
lahf
xchg
into
mov
jmp
cmp
add
ds
add
add
inc
inc
xor
lret
add
add
dec
inc
xor
push
xchg
dec
add
add
push
inc
xor
sbbl
sbb
sub
pop
inc
xor
out
dec
add
add
arpl
add
mov
sub
sub
imul
or
sub
jae
xor
add
sub
jnp
xor
xor
sub
addl
scas
sub
dec
add
mov
add
add
xchg
inc
xor
ss
add
sub
scas
inc
xor
lret
add
add
xchg
sbb
dec
clc
cmp
repnz
pushf
mov
call
mov
stc
shl
pushf
pusha
pushl
lea
je
jmp
mov
das
xor
add
cmp
call
addl
add
jne
in
cmp
loopnew
inc
in
cld
or
in
cmp
sbb
test
and
xor
mov
or
xor
lea
cmpsb
and
cmp
insl
cmp
loope
in
xchg
mov
xchg
rcrl
jle
sub
and
pushl
ret
mov
out
test
push
scas
inc
into
das
sbb
cld
or
and
xor
lods
or
fisttps
add
jg
mov
popa
rcrb
out
cmpsl
lods
or
or
pop
andps
mov
jge
js
lods
or
cltd
mov
pop
xchg
nop
cmp
stc
fiadds
les
cmp
push
insb
adc
movsl
rcrb
or
mov
dec
pop
imulb
jp
repz
push
lcall
or
outsb
or
cwtl
lods
push
rcrb
dec
xor
adc
mov
sbb
mov
xor
shl
add
mov
add
das
arpl
pop
inc
pop
add
pop
push
iret
and
pop
xchg
add
xchg
mov
adc
mov
lea
movsb
es
scas
sti
sub
xor
xchg
pop
fcomip
shrb
push
or
sub
js
mov
cmp
add
lds
mov
sub
stos
sub
or
or
fmul
sahf
imul
enter
stos
xchg
xor
fadds
int3
or
jle
push
sbb
inc
adc
cmc
adc
ja
js
adc
sbb
aam
mov
mov
pop
icebp
outsb
les
and
xchg
fisubrs
xchg
cmpsl
lods
mov
bound
mov
dec
lods
pop
bts
gs
add
adc
push
pop
xchg
mov
and
sahf
icebp
aaa
lods
das
aas
sub
stc
mov
lret
mov
es
add
nop
out
pop
std
xchg
ja
jo
cmp
lds
jle
add
push
call
in
push
call
movsl
sbb
and
shl
add
stc
rcr
mov
cmc
cmp
push
pushl
movw
pushf
lea
jb
test
clc
cmp
call
lea
ja
rcl
sbb
add
bt
test
adc
mov
pushf
test
cmp
pusha
movw
lea
jb
push
cmp
call
std
mov
xor
js
jg
ja
xchg
scas
test
lahf
adc
cmp
popa
stc
mov
push
xchg
or
cmp
dec
mov
lea
dec
out
pop
inc
and
data16
cmpsb
fiadds
movsl
mov
rcll
cmp
jae
in
mov
dec
lahf
jnp
sbb
jle
inc
outsl
outsb
int
bound
xlat
bound
lods
movsl
insl
or
stos
pop
adc
pop
push
jle
mov
repz
repz
pushf
outsl
bound
sub
xchg
xorl
bound
jle
out
inc
je
inc
lret
repz
mov
xor
xor
cld
and
or
sub
daa
imul
stos
sarl
jle
test
movsl
lods
mov
lods
call
es
ss
push
call
fistpll
pushl
pusha
lea
je
cmc
jmp
test
hlt
cmp
test
test
dec
sti
sub
or
ja
sbb
shlb
pop
ret
sub
lds
fwait
cmp
adc
push
jp
cmpsl
mov
ret
je
xchg
lcall
imul
inc
jne
or
nop
sub
xchg
into
les
mov
jle
jne
cmpsl
mov
sub
sub
sub
fisubrs
mov
mov
sbb
rcl
dec
mov
and
adc
push
popa
test
or
push
mov
mov
mov
fnsave
sub
gs
repz
mov
test
cmpsb
fsub
xlat
lods
test
daa
push
mov
mov
and
cmp
movsl
mov
push
jbe
and
push
rolb
push
and
xor
lea
pop
jl
fwait
loopne
xor
jne
inc
push
jbe
or
ficompl
movsb
mov
dec
add
xlat
rolb
cmpsl
xor
or
clc
add
clc
call
pop
mov
jmp
mov
sti
mov
xor
mov
push
mov
push
scas
and
xor
and
xorb
xchg
xlat
jb
jae
xor
cmp
shlb
xchg
lcall
adc
jb
dec
pop
and
cmpsb
aaa
adc
push
movsb
arpl
lods
dec
test
mov
or
mov
test
cmp
dec
fimuls
in
aam
ja
mov
std
shlb
jle
adc
cmpsb
movsl
into
sbb
es
inc
adc
pop
mul
jb
xchg
jae
inc
sbb
call
lods
shrb
rcl
dec
jecxz
pop
in
loope
push
mov
les
cli
xchg
jmp
sub
sbb
sahf
xchg
jae
pop
push
dec
jno
stos
dec
repnz
xchg
lods
ss
iret
repz
xor
std
dec
mov
sub
mov
mov
sub
daa
mov
add
mov
lea
je
pusha
cmp
pusha
jmp
push
call
mov
pushl
pushf
dec
pusha
call
mov
sbb
andl
int
faddp
ljmp
sbb
out
into
in
pop
cwtl
ficoml
rcrl
push
ljmp
into
fstps
cmp
xor
pop
iret
inc
cltd
cltd
dec
and
or
js
xor
call
xor
movsb
add
je
mov
adc
cli
leave
mov
push
dec
js
mov
repz
push
jl
dec
sbb
sahf
movl
jae
repnz
add
push
lock
mov
stos
shl
jno
ret
push
test
lret
ja
mov
pop
shrb
repnz
loopne
aam
mov
arpl
icebp
sub
gs
aas
mov
divl
mov
inc
xor
and
add
es
cltd
jmp
jmp
std
sbb
push
sbb
mov
adc
xchg
add
jb
and
xor
dec
mov
orb
mov
mov
call
xor
lcall
fchs
or
sub
cld
pop
mov
jo
push
and
push
sub
mov
push
movl
inc
out
mov
cld
fdivp
imul
and
sbb
fdivp
push
lock
xor
arpl
shlb
inc
xchg
pop
in
leave
jecxz
lods
sahf
mov
aaa
sbb
xchg
sbb
lods
or
jge
dec
test
jne
sub
mov
or
ds
pusha
repnz
pushf
movb
pushl
lea
jne
jmp
push
call
scas
data16
fwait
lahf
into
cwtl
pushl
sub
mov
push
or
js
dec
repnz
jp
insl
inc
ror
cli
push
add
xchg
aaa
xchg
sti
sbb
and
hlt
fidivl
add
inc
add
push
push
or
mov
imul
xor
out
out
fwait
and
loop
popf
inc
xor
out
std
cmpsl
lret
ficoml
or
out
rcrb
rol
lods
clc
leave
mov
xor
dec
jmp
insb
popa
mov
sbb
rorl
mov
inc
sub
ficoms
push
or
xchg
into
adc
ja,pn
addr16
jno
push
call
arpl
inc
test
xor
push
stos
xor
test
jbe
mov
out
cmp
dec
mov
sbb
push
test
stos
je
cli
daa
push
cmp
repz
repz
push
pop
inc
lcall
push
xchg
dec
cs
jbe
lret
loop
mov
jl
xchg
push
insb
aaa
popa
dec
push
insb
mov
jge
ss
stos
std
lret
and
jle
rorb
dec
jg
mov
das
in
in
dec
xchg
adc
ds
mov
dec
ficoml
xor
cld
adc
inc
add
inc
fwait
and
xor
mov
fwait
popa
fsubrs
inc
mov
cld
xor
repz
hlt
sbb
sbb
pushf
sarb
scas
sub
pop
inc
out
daa
lods
ret
in
mov
sti
std
cli
push
mov
in
mov
sub
es
notl
cltd
cmp
orb
inc
inc
or
mov
add
jg
iret
call
ja
movl
push
call
movsl
fildl
inc
pop
scas
fimull
jl
jmp
cmp
and
sahf
fwait
inc
aas
imul
sti
lock
out
test
insl
xor
daa
xor
mov
xchg
je
xchg
out
mov
push
lods
xor
xchg
mov
inc
dec
dec
out
repz
imul
gs
fstl
into
add
push
jle
in
and
ja
mov
add
sbb
sub
test
mov
sub
bsr
lea
movzbl
bsf
mov
cmc
stc
cmp
cmp
pusha
pusha
lea
ja
xadd
btr
bsr
add
neg
cmp
dec
shr
ror
not
cmc
inc
mov
push
lea
ror
rcl
add
sub
mov
lea
stc
cmpsb
pushf
movb
pushf
pusha
lea
ja
pushf
call
out
xor
mov
cmpsb
inc
sub
out
adc
sub
mov
xchg
shl
mov
pop
cmpsl
pushf
sbb
cs
cwtl
add
mov
sub
xor
and
call
sbb
shlb
rcl
and
push
push
sbb
xor
test
pusha
setbe
gs
cmp
cmp
mov
sub
in
adc
arpl
call
cli
lahf
or
repnz
adc
push
xchg
pop
rcl
add
fcoms
sub
inc
xor
mov
jge
das
mov
push
jecxz
push
cmp
add
mov
lds
sub
mov
push
rol
and
add
xchg
jne
dec
mov
mov
and
sahf
popf
or
je
cwtl
mov
fsubrl
loop
and
or
inc
xor
arpl
inc
ss
stos
test
cld
jnp
jle
mov
and
xor
lcall
test
jno
add
clc
adc
mov
mov
rcrb
seto
inc
add
ja
xor
add
inc
setae
rcl
mov
push
mov
test
call
in
cmp
sub
ds
jmp
and
aam
pop
dec
lock
or
jge
incb
mov
icebp
or
and
adc
or
pop
loopne
push
call
mov
int
jns
jg,pn
xor
test
dec
push
xor
or
vunpckhps
mov
mov
xchg
aaa
mov
add
xlat
sub
dec
icebp
xchg
enter
mov
or
leave
push
outsl
cmp
cmpsb
fdivl
sub
or
pop
lahf
imul
cmp
hlt
in
push
dec
shrb
dec
jmp
lods
imul
mov
test
loopne
xor
insl
pop
sub
jle
sbb
scas
test
mov
es
mov
cmp
and
fwait
xor
test
stos
stc
push
test
ficompl
xor
lea
or
xor
xchg
popa
call
gs
mov
lcall
lds
mov
mov
lcall
mov
daa
les
cld
fdivl
inc
mov
fsub
into
sub
cmp
lahf
sub
jno
lds
or
push
icebp
lock
add
or
pop
jo
xchg
mov
xor
mov
jae
ficompl
jae
mov
test
aaa
stos
jg
hlt
aaa
mov
aas
or
add
mov
adc
outsl
mov
mov
or
fisubl
push
mov
sbb
rol
pop
mov
sub
mov
pushf
lret
clc
mov
ljmp
cmpsb
test
dec
aas
ja
jle
mov
je
outsb
pop
dec
mov
xchg
lods
jg
in
pop
lock
mov
jnp
sub
xchg
cmpsb
daa
test
arpl
addl
push
and
sbb
push
sti
ret
fdivs
mov
popf
movsl
cmc
cltd
shrb
and
mov
sbb
or
shrb
movsb
jmp
mov
mov
or
loope
mov
push
fcmovne
and
and
mov
test
ficoml
dec
xchg
enter
hlt
push
pop
jg
enter
daa
sub
push
call
iret
add
or
ret
mov
aas
adc
jb
ret
jo
pop
and
mov
shr
and
cmp
cwtl
pop
mov
and
add
bound
dec
scas
push
sbb
mov
cmp
sbb
dec
inc
jmp
xor
shr
cmp
pop
mov
fsts
and
add
idiv
addr16
icebp
imul
scas
lea
jne
pusha
lea
jmp
call
push
call
lods
pop
jnp
push
pop
pop
sub
lcall
jmp
push
mov
iret
and
lds
or
fstpt
je
sub
push
ss
xchg
inc
inc
xorl
or
stos
pop
dec
std
loopne
lahf
mov
sbb
inc
aam
pushf
mov
repz
inc
pusha
cmp
jp
jg
fdivrs
pop
repz
sbb
push
pop
xchg
dec
xor
std
inc
ret
outsl
push
or
sbb
push
cld
adcb
xchg
shlb
add
add
cs
loop
sub
call
push
call
mov
jg,pn
jecxz
aaa
xchg
and
ja
push
call
mov
jbe
bound
cld
mov
jg
aas
add
xlat
in
push
ljmp
adc
pop
fnsave
gs
loopne,pt
aaa
fistpl
xor
bound
gs
repz
loopne
bound
stos
ljmp
jnp
add
sbb
mov
push
push
push
int
push
add
xchg
mov
ljmp
push
jge
push
mov
aaa
push
push
sbb
inc
jo
ss
and
pop
add
jmp
add
test
cwtl
xor
jbe
push
andb
int
lock
stos
pop
inc
adc
pop
sarl
loop
xchg
int
dec
out
imul
mov
into
jne
mov
and
lahf
xchg
leave
out
aam
pop
mov
shrl
scas
or
ficoms
insb
adcb
mov
std
out
pop
sahf
jmp
inc
jle
inc
mov
mov
sbb
andb
mov
sbb
bound
movzbw
lea
push
jmp
add
mov
leave
cmp
dec
pop
lods
clc
push
insl
xchg
in
xchg
shlb
pop
ss
lea
test
cmpsl
out
lods
or
push
adc
push
lcall
mov
pop
push
call
inc
xor
add
jmp
cmpsl
icebp
addr16
sub
mov
xor
dec
jns
pop
sub
cmp
jge
out
push
add
repnz
mov
push
rclb
sti
lcall
inc
push
call
test
loop
lods
stos
orb
in
jns
ss
out
xor
jne
jno
dec
mov
cmpsb
jb
jmp
fs
pushf
cmp
pop
xchg
sbb
faddl
lcall
xchg
cmp
ja
cwtl
iret
mov
cmpsl
mov
daa
and
pop
repz
adc
nop
loop
pop
jns
xchg
mov
inc
xor
hlt
push
enter
pop
in
out
imul
sarl
sub
mov
ljmp
je
pop
pop
rorl
jle
pop
loopne
add
add
push
call
out
xorl
mov
shll
ja
enter
sub
test
repnz
mov
pop
sti
pushf
pop
mov
loopne
push
jmp
jmp
xchg
bound
push
adc
cwtl
repnz
leave
sarb
xchg
shlb
sti
test
lret
cmp
jle
addr16
mov
bt
stc
bt
and
call
push
call
xchg
insl
mov
scas
movsb
adc
lret
mov
lret
ss
sub
mov
inc
neg
jle
outsb
xor
into
je
gs
sub
lcall
xor
or
sbb
cmp
dec
es
dec
cs
adc
xchg
cld
dec
outsb
repnz
rol
push
inc
mov
stc
je
sarl
xorb
mov
test
lock
pop
adc
testl
ja
mov
mov
pop
orl
sbb
mov
or
jnp
outsl
in
mov
adc
loopne
mov
xchg
push
lcall
jo
push
sbb
pop
mov
mov
push
notl
testb
arpl
sub
adc
mov
push
push
mov
xor
pop
jae
dec
push
xlat
adc
mov
cwtl
sbb
dec
mov
mov
ljmp
mov
mov
jbe
pop
xchg
sub
cmp
enter
xor
jne
jle
sub
pop
sbb
xor
outsb
pop
adc
pushf
mov
cmp
lock
jecxz
dec
pushf
or
ret
lcall
jb
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
jg
cltd
call
sub
xchg
pop
in
aas
scas
mov
pop
mov
jmp
push
rcrb
jle
popa
out
aas
push
test
dec
stos
pop
inc
jle
jmp
sub
inc
add
xlat
mov
mov
mov
fnstsw
add
cmpb
daa
jecxz
in
ljmp
pop
adc
cmp
mov
or
sahf
mov
cmpsl
stos
outsb
xchg
mov
xchg
shrl
popa
push
fstpl
mov
mov
ja,pn
cmc
call
loop
push
call
lods
outsb
fcmovbe
sahf
idiv
dec
sub
cs
fs
movsl
mov
or
ret
sub
dec
scas
mov
adc
jno,pt
js
pop
das
jns
push
lods
sbbb
dec
nop
lods
jno
jns
pushf
inc
mov
cwtl
mov
dec
cmp
movsb
jp
push
add
adc
fidivs
dec
jg
cmpsb
rcrb
jge
dec
fldenv
outsl
push
xchg
test
push
movsl
outsl
mov
outsb
pushf
ret
test
fnstsw
roll
or
add
divb
nop
sub
adc
lds
jle
es
mov
jecxz
shl
out
test
and
sbb
jo
inc
fsubrs
scas
mov
inc
xchg
and
jbe
notl
mov
insl
lcall
sub
dec
lods
adc
jb
leave
lods
sub
test
insl
cmpsl
icebp
iret
clc
mov
jae
stos
push
jp
xor
xchg
push
xor
negb
scas
pop
inc
lahf
loope
xor
lret
ret
or
add
cmc
call
push
call
pop
jge
fcoml
call
dec
stos
mov
out
mov
scas
ljmp
push
jno
jg
push
and
cmp
loop
data16
out
or
fsub
insl
into
movsb
inc
adc
sbb
addr16
or
add
mull
in
inc
std
cmp
out
xchg
out
movsl
or
jecxz
cmp
pusha
xor
call
mov
dec
xor
shlb
vmovupd
dec
rcr
push
je
idivl
idivb
xchg
pushf
pop
xor
push
stc
in
xchg
cmp
das
dec
add
dec
mov
cmp
gs
int3
in
push
mov
push
or
mov
inc
mov
jne
xor
jno
pushf
xor
je
mov
shrl
hlt
lahf
xor
popf
pop
mov
aam
mov
in
jg
xchg
pop
sub
pop
lock
adcb
add
mov
movsbw
setae
mov
pusha
xchg
mov
mov
bswap
pushf
mov
call
push
call
in
dec
mov
add
fistpll
pop
fwait
jl
and
xchg
fucom
xorb
adc
repnz
inc
ja
pop
jl
dec
or
mov
jmp
jl
cltd
pop
xchg
nop
pop
mov
gs
imul
xchg
xlat
pop
mov
clc
sti
dec
dec
jo
cmp
sbb
mov
pop
add
add
imul
pop
pop
add
rolb
es
jb
sub
mov
jle
loopne
loopne
fistpl
mov
dec
pop
push
xchg
jns
test
gs
popa
int3
mov
sbb
movsl
cwtl
mov
into
push
daa
or
stc
adc
push
roll
mov
shr
shrb
into
dec
nop
push
test
adc
xchg
sub
sbb
enter
inc
sbb
stos
adc
mov
and
call
iret
stos
mov
lcall
push
clc
cmc
cld
iret
jl
fwait
mov
stos
test
push
mov
clc
or
daa
sub
movsb
not
bswap
pop
pop
push
lea
jmp
mov
movsl
or
aam
inc
sbb
leave
dec
mov
add
je
adc
inc
push
mov
pop
push
or
adc
lret
out
lea
jmp
idivb
scas
add
adc
add
xchg
es
aas
mov
and
dec
or
mov
gs
int3
and
cli
aas
jnp
sub
mull
call
jb
sahf
pop
cmp
mov
std
or
cmp
xor
adc
out
sub
push
jmp
xchg
xchg
in
cmp
sbb
push
or
xchg
ja
or
mov
jle
pop
cwtl
pop
or
push
xchg
mov
cli
mov
lods
lret
sub
push
test
sahf
negl
stc
mov
mov
xor
scas
mov
pop
aad
lahf
flds
mov
in
incl
lret
or
add
push
call
fwait
adc
adc
push
rcll
clc
dec
mov
aad
das
sub
repnz
imul
or
shll
lahf
mov
cmpsl
jne
pop
or
mov
cs
jecxz
outsl
pop
aam
and
lret
int
mov
popf
mov
add
outsl
js
fnstenv
outsl
loope
or
dec
out
cmp
xor
stos
ds
jle
cmp
mov
sbb
pop
push
sub
pushf
mov
arpl
sbb
mov
or
inc
add
jl
inc
or
nop
jno
xchg
les
pushf
in
jecxz
pop
movl
sar
jnp
lahf
stos
data16
shrl
loopne
xor
enter
push
mov
mov
jle
movsb
push
loop
push
mov
push
pushf
lea
jmp
push
call
and
sbb
or
push
mov
add
mov
add
cmp
sub
btc
bts
cmc
movsbw
push
sbb
push
sub
sub
movzbw
cwtl
lea
call
pushf
pusha
lea
jne
shld
sub
bts
mov
sbb
not
add
sub
stc
setae
inc
mov
cmp
test
jmp
sub
mov
xlat
cli
mull
loop
outsb
inc
in
mov
sbb
sbb
add
stos
in
lds
pop
sbb
push
daa
jbe
sbb
outsl
pop
lods
ss
xor
push
cmpsl
pusha
pop
arpl
rcrl
and
loop
loope
fistpl
sbb
mov
pop
arpl
shrb
das
or
and
mov
adc
jne
popf
xlat
mov
insl
or
stos
pop
adc
and
call
push
call
popf
mov
mov
lret
clc
cmpsb
ret
mov
xor
push
aam
mov
inc
jns
fnsave
xchg
ret
sbb
imulb
fucomi
xor
lret
inc
scas
rolb
stos
cmp
fisubrl
fimuls
pop
loop
sti
adc
or
ret
shll
sub
sub
testb
sub
call
push
mov
aaa
mov
dec
push
mov
pop
adc
jnp
jno
repz
imul
pop
pop
movsl
fsubl
jle
testl
cmp
dec
stos
loopne
out
sub
cmpsl
mov
push
stos
xchg
fs
dec
ljmp
dec
lcall
dec
ret
out
jb
js
and
cmp
mov
mov
dec
and
xchg
std
cmp
sar
lea
sub
mov
xor
mov
hlt
sbb
or
and
xlat
mov
mov
mov
bound
dec
sbb
les
sbbl
int3
push
mov
push
outsb
je
or
xchg
pushf
add
jae
mov
imul
adc
jno
andl
hlt
push
cmp
fldenv
inc
cs
lret
jecxz
addr16
push
cmp
xor
push
test
dec
mov
push
cmc
aad
adc
adc
cmpl
shrb
mov
and
cld
int
pop
fldt
jg
xor
sub
push
arpl
cld
add
test
jle
jmp
ljmp
mov
popa
dec
clc
rcrl
sub
lcall
popa
xor
inc
add
cmc
nop
out
mov
rorb
ljmp
mov
lods
inc
pop
xchg
mov
into
aam
movsb
cmc
in
dec
cmp
pop
std
aam
dec
sbb
out
les
lret
cli
mov
pusha
inc
sub
movsb
std
subl
or
sahf
dec
push
call
cld
cmp
cmp
lea
jp
pushf
pusha
pushf
lea
ja
shl
xor
inc
sub
jmp
js
out
lods
cs
aad
es
add
in
mov
push
inc
inc
mov
mov
push
and
movsb
repnz
dec
ljmp
scas
imulb
pop
lods
pop
ds
fsubrs
push
cld
or
sbb
jno
pop
subb
test
nop
xor
sbb
rcl
xchg
cmp
std
cmp
stos
sub
push
insb
addr16
ret
insb
push
pop
mov
sub
movsl
call
mov
sub
int3
or
and
mov
pushf
lea
jp
pop
not
call
push
call
rcl
pusha
jmp
iret
dec
les
nop
in
test
pop
dec
repz
cmc
xor
cmp
sbbb
mov
and
lahf
dec
scas
mov
push
add
or
xchg
or
es
jnp
xor
sahf
adc
js
add
int3
je
jnp
push
jnp
lret
jns
push
or
mov
jp
dec
pop
xor
push
psubq
adc
icebp
js
mov
push
push
cmp
scas
fnstsw
aas
test
push
enter
cmp
shrl
jecxz
xchg
enter
aaa
xor
lcall
jae
out
hlt
cmp
mov
inc
and
push
mov
sub
push
mov
lcall
adc
or
push
popl
dec
ds
cmc
mov
imul
or
jle
mov
jmp
repz
jle
stos
cmpsl
pop
jae
scas
in
xchg
sub
test
jne
pop
dec
sub
pusha
pushf
pop
mov
repnz
add
adc
dec
jb
mov
fxch
imul
orw
cwtl
mov
xlat
mov
pop
lea
das
jmp
and
test
sub
or
je
jbe
xor
hlt
es
push
fsubl
xchg
add
xchg
outsl
std
push
lods
and
and
cltd
ds
mov
sahf
fdivrl
and
mov
je
add
lret
mov
xchg
js
aaa
shl
jnp
cmp
pop
and
hlt
loope
shl
cld
popa
ret
lods
jg
cmp
mov
out
or
xor
test
leave
pop
jge
inc
adc
shr
mov
pop
inc
out
icebp
int3
push
call
xchg
iret
jp
out
sbb
cmp
inc
lock
lods
ja
in
lods
and
push
negb
addr16
into
jne
cmp
xor
je
imul
stc
fcoml
xchg
cmp
lret
popa
jnp
test
or
push
pop
ret
ds
fidivl
les
pusha
jp
cmpsl
mov
cld
inc
insb
add
je
xchg
popf
and
mov
testb
cwtl
sub
in
mov
shl
pushf
add
add
inc
inc
pusha
pop
mov
bt
pushf
cmc
test
jmp
push
call
inc
decb
stos
aad
lock
dec
cmp
fwait
leave
js
sbb
push
push
lock
push
fisttpl
out
mov
js
aad
aaa
inc
mov
sbb
fistl
pop
popa
add
out
scas
and
and
mov
psubusw
sbb
sbb
pusha
call
push
rol
mov
sbb
push
mov
push
xor
xor
clc
pop
jecxz
sub
jle
mov
jg
mov
add
mov
in
js
fadds
ljmp
test
ret
jb
adc
or
inc
mov
sbb
mov
push
or
pushf
xor
rcl
arpl
mov
add
mov
imul
sbb
movsl
fadds
mov
outsb
cmp
mov
lcall
stos
mov
mov
mov
movhlps
dec
mov
adc
call
xchg
pop
pop
jae
fwait
mov
xchg
inc
lret
aad
jb
ret
aas
xchg
std
cmp
leave
mov
rorb
ret
pop
cmpsb
push
dec
jmp
insl
xchg
cld
rcll
les
dec
loop
pop
inc
in
adc
jg
inc
xorb
subb
cli
push
xor
sbb
cwtl
xorb
add
sar
adc
sbb
mov
add
es
mov
gs
mov
std
adc
pushl
jbe
ficoms
scas
hlt
adc
jle
andb
cmp
mov
shll
add
inc
aam
ss
outsl
test
cmp
test
xchg
mov
into
sub
sub
sbb
lahf
mov
sub
cmp
cmpsl
rcr
cmp
rolb
sahf
sbb
mov
jne
aaa
push
mov
sub
inc
enter
popf
sub
inc
sqrtps
or
mov
enter
adc
bound
adc
or
pusha
stos
xor
pop
xchg
and
inc
mov
les
outsl
outsb
xchg
mov
pop
xor
clc
inc
data16
sub
movsl
sub
lea
jae,pn
fidivl
loope
xchg
jmp
pop
pop
xor
or
mov
or
out
inc
mov
stc
dec
pusha
pop
xorl
out
test
aas
mov
mov
repz
bound
dec
xor
or
inc
dec
xor
add
sbb
movsl
mov
adc
std
mov
or
loopne
sub
ja
insl
call
lahf
movsl
ds
imul
jb
gs
es
bound
add
pop
cmp
arpl
mov
imull
push
out
xor
pop
push
std
enter
mov
sbb
dec
fstpl
jmp
mov
cmp
dec
push
fistl
les
dec
cmp
cmp
in
scas
xchg
pop
lahf
int3
xlat
xchg
mov
imul
jo
cmc
int
dec
sub
jo
xor
push
int
pop
dec
inc
push
cmp
inc
inc
inc
std
mov
jle
clc
stc
push
mov
cmp
push
pusha
inc
lods
and
imul
jnp
mov
testl
jmp
dec
pop
inc
add
push
dec
mov
test
xor
push
push
add
mov
aad
iret
cmp
dec
rcrl
in
lret
sbb
std
mov
das
and
mov
shr
lret
mov
mov
setb
iret
arpl
testl
mov
aam
das
ljmp
test
add
test
lret
cs
inc
jns
jle
test
xor
xchg
call
sbb
ret
and
call
add
imul
mov
mov
or
jg,pn
imul
clc
sub
lea
jne
call
insl
imul
push
mov
pop
push
das
in
pop
shl
adc
subl
call
aam
jecxz
inc
ljmp
dec
mov
push
aam
jecxz
ret
mov
lods
xor
hlt
ljmp
mov
popa
sub
or
ja
jle
cs
add
mov
out
outsl
xchg
add
out
cli
xlat
xor
dec
xchg
jo
add
pop
xchg
pop
or
dec
adc
inc
leave
mov
lea
inc
sbb
test
mov
xor
sbb
insl
in
mov
pusha
fnstenv
icebp
es
fsubs
mov
inc
ss
xchg
dec
mov
jnp
fstpl
push
mov
ret
sub
xor
daa
cmp
mov
sub
cmpsb
pop
jl
and
adc
cmp
inc
orl
test
mov
ljmp
mov
or
pop
sbb
xchg
scas
and
mov
push
mov
lret
mov
rcr
or
and
ljmp
pop
sub
repz
stos
jmp
sbbb
data16
call
push
pop
je
xchg
or
sub
push
mov
or
push
cmc
mov
sti
pop
mov
in
jecxz
push
inc
sbb
in
sbb
xchg
testb
push
lahf
popf
pusha
in
mov
jmp
pop
and
shlb
mov
in
loope
nop
pop
lds
out
loope
cmc
stos
gs
mov
gs
andb
xorl
push
xchg
popf
popa
sub
adc
inc
test
mov
fsubrl
and
jbe
out
lock
fisttps
push
out
cmp
fdivrs
faddl
jl
fs
or
shrl
mov
mov
testl
sbb
xchg
push
inc
push
add
popa
lret
push
jp
stos
adc
mov
mov
je
mov
or
dec
outsb
lret
hlt
inc
jb
mov
push
xchg
xlat
es
and
or
stc
cmp
jae
jle
mov
mov
cmpsl
cli
push
mul
or
jnp
mov
mov
insl
jmp
jne
sub
adc
jle
test
mov
bsf
or
movzbw
add
push
bsr
push
sub
push
mov
sbb
test
cmp
sar
mov
xchg
stc
mov
clc
call
adc
inc
and
push
pop
adc
lods
sbbb
add
jp
insb
lret
scas
mov
mov
jmp
sub
call
mov
xchg
dec
sub
lea
push
addr16
daa
jmp
mov
push
or
shrb
ret
out
adc
mov
mov
cmp
out
lahf
adcl
push
out
decb
dec
add
fsubr
xchg
out
and
or
aad
rcl
movsb
mov
jbe
scas
dec
inc
insl
mov
ljmp
pop
xchg
xchg
popa
lods
jno
lea
roll
pushf
mov
aaa
insb
mov
jl
stos
mov
pushf
mov
mov
inc
jle
pop
cli
add
popf
mov
xchg
ret
cmp
sub
sub
mov
int3
fisttps
xor
push
movsl
mov
cwtl
shr
pop
sub
ljmp
sub
jb
sahf
cmp
stos
or
out
mov
pushf
lea
jne
call
scas
dec
das
dec
inc
es
stos
jno
movsl
jmp
push
jp
cmc
xchg
cmpb
aad
fs
stc
push
popf
pop
lock
aas
dec
in
fcoms
mov
pop
dec
adc
sbb
push
or
mov
sbb
mov
adc
hlt
inc
sub
inc
rcll
mov
adc
push
or
xchg
cld
test
les
inc
sbb
mov
scas
xchg
add
push
clc
std
inc
mov
sti
jge
leave
push
cmp
sbb
jl
mov
sbb
push
pextrw
lods
out
mov
push
or
cwtl
arpl
push
sub
in
addr16
cmp
sahf
xlat
jnp
mov
inc
cmp
dec
xchg
cmp
sub
inc
out
jo
imul
mov
shll
mov
out
jo
mov
jecxz
sti
jl
jg
aaa
xor
sti
loope
aam
jmp
loopne
add
mov
inc
fidivrs
push
jge
loope
sub
lahf
xor
aas
and
fs
sub
test
sahf
aas
sbb
insl
dec
jp
mov
out
sub
sbb
or
pop
loopne
imulb
mov
pop
out
or
pop
dec
mov
cmp
stos
push
adc
xchg
stos
sahf
inc
js
pop
test
pop
ror
adc
xor
arpl
or
dec
sub
dec
mov
sub
outsb
adc
push
pop
cltd
adc
sti
loop
in
add
mov
adc
nop
fists
pop
push
jnp
push
sbb
adc
push
xor
mov
jo
dec
xchg
sbb
mov
or
and
push
call
test
in
aad
cmp
adc
aam
lret
test
jp
dec
and
or
aas
dec
push
jo
mov
out
in
jmp
std
adc
les
cs
cmp
sub
test
jle
inc
adc
mov
mov
inc
adc
test
aam
fists
push
in
xor
fcom
cmp
xor
sbb
add
into
or
in
xchg
ror
js
jnp
subb
pop
or
inc
lret
popf
push
call
inc
cmp
and
adcb
add
push
call
sub
ss
jle
rcll
push
lcall
inc
out
pop
movsb
or
js
jmp
xchg
shl
cltd
andl
lea
xchg
xor
mov
gs
mov
mov
repz
xchg
xor
ja
add
cwtl
into
mov
push
aas
mov
mov
outsl
stos
bound
sub
push
sub
push
mov
shl
outsb
add
fadds
cmp
mov
ret
mov
arpl
cmp
mov
adc
inc
push
aam
jle
cmp
jmp
fs
pusha
subl
push
xchg
or
add
push
dec
pop
xchg
ja
iret
mov
sar
pop
mov
test
cmpsb
push
sbb
push
jbe
xor
jns
xchg
daa
mov
sub
lods
fnsave
stc
jbe
lret
divb
mov
inc
adc
or
shl
ss
and
andb
cmp
cmpsb
jg
inc
stos
in
jle
or
pop
push
bound
cmp
js
adcl
adc
jle
or
out
je
sub
jbe
jp
xchg
pop
push
inc
sub
sbb
xchg
inc
cmpl
sub
add
sub
xor
add
popf
lea
movsb
cs
push
push
xchg
lods
lock
jb
lret
mov
loop
lock
lcall
mov
shl
xor
jae
mov
das
inc
sti
push
mov
in
mov
pusha
or
pusha
lea
je
not
mov
push
movl
lahf
push
jmp
add
add
push
push
add
inc
insb
add
add
add
add
loope
push
cmpsb
test
push
arpl
jmp
scas
xor
fs
in
pop
test
sbb
jmp
xchg
pop
dec
repz
rcrb
fdivl
jmp
jg
cmpsb
repz
xor
lahf
inc
jg
movsl
cmc
pop
ljmp
mov
test
fsubrp
enter
pop
xor
adc
lock
sbb
pop
pushfw
cmp
cmpsb
xor
movsb
and
xchg
fistpl
cmp
lock
mov
sti
jle
ret
das
jge
cmp
mov
inc
lret
mov
adc
push
sub
hlt
or
pop
addr16
mov
pop
repnz
add
enter
rcl
or
xor
dec
xor
dec
xchg
mov
lods
jno
or
int3
fidivs
add
pop
mov
add
push
stc
out
add
push
push
dec
outsl
je
data16
arpl
inc
add
jg
inc
call
jnp
xor
lret
push
jae
pop
cmp
pushf
fpatan
pusha
mov
out
imul
loop
jp
mov
ja
mov
lods
cltd
jnp
les
fdivrl
xchg
push
or
xchg
repz
popa
mov
rclb
dec
adc
sub
addr16
fldcw
push
jnp
stos
mov
jle
push
dec
inc
iret
inc
rorb
jbe
out
push
push
adc
popf
mov
scas
or
mulb
je
iret
xchg
scas
data16
addl
pop
cltd
orl
je
cmp
add
cmc
int
adc
leave
adc
inc
or
xchg
arpl
push
lock
aas
daa
or
cmp
or
sahf
jb
dec
pop
call
test
jle
cmp
stos
dec
pop
and
xchg
je
fs
or
add
mov
push
lods
scas
push
adc
push
sahf
nop
dec
sub
jle
outsb
arpl
je
pusha
adc
pusha
pushf
push
lea
jmp
fistps
xchg
jg
hlt
jnp
adc
push
sub
jnp
and
in
inc
ret
push
mov
and
pop
gs
xchg
lods
fidivl
movsb
jge
cmp
addr16
stos
pop
bound
shld
push
lcall
mov
or
mov
or
push
movsl
jle
test
or
mov
pop
cld
mov
repnz
mov
jle
fwait
adc
lea
jbe
bsr
btr
mov
bswap
add
or
mov
shld
add
setnp
or
pusha
movl
jmp
push
call
gs
insl
push
call
and
iret
pop
sbb
and
test
sub
imul
push
mov
pushf
sub
and
xchg
lcall
ja
jle
add
cmc
sub
pop
les
les
mov
pop
das
jno
movsb
jo
and
rclb
int
roll
add
les
adc
xor
push
fsub
mov
xor
xchg
dec
xlat
jle
push
cmp
lret
pop
sbb
inc
mov
jle
aam
in
xchg
and
mov
xlat
loope
pop
xchg
out
adc
push
mov
jle
pop
xchg
lcall
or
pusha
jg
mov
addl
adc
imul
cli
inc
and
pop
xchg
or
mov
fmull
cld
push
cld
aaa
mov
mov
or
xchg
lea
jle
shl
in
xchg
pusha
and
lock
shl
and
jbe
xor
popf
pop
cmp
ja
jle
stos
pop
pop
movb
jmp
push
call
add
aas
fs
push
movsb
fldcw
xlat
mov
mov
push
push
add
jge
stc
hlt
jne
sub
lods
inc
cltd
scas
mov
and
into
xchg
inc
mov
push
jge
es
stos
mov
inc
cltd
cli
aam
xchg
cmp
arpl
out
stos
mov
test
data16
jo
xor
dec
arpl
in
and
fistpl
add
inc
aad
and
mov
xchg
adc
jmp
or
clc
stc
adc
bt
jmp
push
call
push
call
xchg
insl
adc
jg,pn
out
or
and
mov
flds
ret
and
push
out
mov
rcr
cs
dec
andl
or
aaa
cmp
or
mov
push
insl
negl
sahf
arpl
jno
pop
pop
addr16
aaa
sub
ss
mov
pushf
popf
test
pushf
stos
xor
jmp
mov
clc
cmp
jns
jae
incb
cwtl
pop
jp
xchg
jns
test
stc
js
movsb
bound
jno
sub
mov
push
or
push
mov
inc
loopne
enter
adc
ds
call
sub
jle
cs
aaa
or
insl
andl
iret
inc
mov
xchg
out
loopne
fnsave
fcomip
cmpsl
xor
stos
stos
xlat
and
dec
push
and
lret
lds
jb
vpcomud
sbb
cmc
lcall
enter
enter
mov
scas
rep
leave
cmp
and
dec
aad
pop
in
mov
push
mov
leave
sub
add
mov
lods
mov
pop
in
add
int3
pop
pop
leave
hlt
cmp
and
jge
adcb
lds
jle
add
scas
dec
inc
cli
pop
punpckhwd
mov
fimull
jmp
es
jg
fistl
clc
shlb
adc
imulb
lods
adc
mov
mov
lcall
cwtl
aam
inc
pop
and
push
shlb
mov
pop
shrl
xchg
insb
jmp
mov
es
arpl
enter
in
inc
popf
repz
shll
ja
xchg
faddl
in
jle
cmp
loop
jg,pn
adc
outsl
imul
xor
cmpsl
aas
push
mov
sarl
xchg
sub
adc
cmpsl
or
or
cmpsl
mov
imul
pop
push
repz
stc
sub
aaa
out
cltd
or
fimull
cmp
or
push
xor
or
in
ret
pop
add
adc
repz
jne
nop
leave
popf
aaa
push
xchg
sbb
sub
mov
lods
xor
shl
add
sbb
sub
pusha
outsl
xchg
stos
cmc
mov
out
repnz
ss
popf
clc
cmp
pusha
jmp
mov
outsb
mov
mov
push
mov
dec
js
or
xchg
mov
test
add
jge
xchg
inc
or
push
mov
lcall
mov
adc
and
mov
aam
mov
sub
cmc
ds
pop
test
cs
icebp
rorb
pop
mov
xchg
cmp
subl
cmp
outsb
dec
nop
xchg
mov
repnz
or
or
dec
jecxz
mov
jmp
cld
push
or
or
jno
fimuls
into
sub
test
or
pop
mov
jno
arpl
or
or
pop
ret
xchg
adc
dec
inc
mov
push
dec
pushf
mov
sub
dec
inc
jae
push
or
ret
fidivrl
int
divl
and
rolb
and
repz
adc
xchg
xchg
popa
lret
sarl
cmp
repz
stos
cmpsb
inc
push
call
and
jg
call
js
cs
in
dec
call
pop
shrb
addb
add
push
call
or
setb
pop
setb
push
not
mov
pushf
mov
pusha
mov
push
lea
mov
push
pushl
ret
push
pop
jmp
xor
bound
mov
mov
mov
or
push
gs
jge
cmp
aad
imul
out
das
xchg
mov
loop
dec
in
or
jmp
scas
sarl
pop
div
mov
hlt
jg
arpl
cmp
sbb
mov
in
cmc
iret
pop
mov
inc
push
call
xor
mov
adc
sahf
loop
jle
cmp
imul
adc
ljmp
and
pushf
pusha
pusha
jmp
push
call
cmpsb
lret
pop
pushf
jmp
imul
inc
lret
mov
pop
in
push
mov
sbb
icebp
xorl
arpl
test
mov
lret
sahf
sbb
imul
push
lea
add
and
xlat
sub
add
and
mov
sbb
jecxz
xchg
ljmp
pop
mov
pushf
int
sub
cltd
addr16
and
hlt
imul
adc
lret
sub
pop
icebp
or
aaa
cmp
sbb
inc
push
add
jmp
test
cmc
stc
cmp
jmp
lea
jg
je
cmp
cmp
pushf
lea
je
call
jnp
mov
test
cmpb
data16
repnz
scas
or
cmpsb
push
lods
pop
pop
lods
adc
jl
fs
mov
mov
pop
xchg
cmpb
imul
fidivrl
into
sbb
rcrb
inc
ret
xor
loopne
mov
add
sbb
push
mov
adc
pop
rol
cmp
xor
jge
pop
icebp
in
sub
pop
and
test
jg
xor
and
call
push
call
ljmp
sti
dec
add
jno
in
sbb
xor
inc
insl
mov
call
sub
aaa
push
int3
fwait
mov
adc
scas
inc
daa
xchg
int
int
or
aad
daa
nop
xchg
xor
repnz
xor
scas
rol
or
mov
je
add
fldcw
mov
cmp
sbb
sub
test
add
xor
jbe
or
cli
or
dec
movsb
jno
mov
jle
xlat
mov
push
call
data16
insb
shr
pusha
add
add
sar
mov
adc
sbb
test
mov
pusha
call
push
call
in
jb
cmp
sbb
add
sub
dec
push
push
lods
sub
jle
add
xor
rclb
cmp
jnp
dec
loopne
out
mov
addr16
ss
rorb
mov
ret
adc
inc
lds
mov
pop
cld
pop
aad
push
stc
ret
cmc
mov
sti
rcr
pop
clc
mov
push
add
mov
jo
xor
fbld
or
or
mov
bt
shl
mov
bt
bt
jmp
push
call
jae
and
hlt
jle
stc
cmpsl
xchg
in
sbb
arpl
jp
xchg
mov
xchg
and
addr16
je
and
inc
outsl
jge
jle
inc
adc
dec
repz
push
mov
and
cmp
mov
faddl
sub
inc
cmc
icebp
stos
jo
sahf
ret
mov
mov
xchg
stc
sub
dec
dec
sub
mov
inc
jge
jno
sub
mov
pop
aas
adc
cli
js
mov
adc
pusha
in
call
sub
jg
push
call
test
push
outsb
dec
mov
xchg
push
and
or
dec
mov
dec
andnps
mov
pushf
mov
and
push
rcrl
sub
mov
xchg
mov
inc
xor
pop
test
daa
lock
cld
cltd
je
aas
jecxz
stos
enter
or
mov
cltd
je
push
into
add
jle
popl
mov
test
jle
cmp
in
imul
jg
xchg
es
sub
mov
jge
pop
jne
addr16
sub
cmp
int3
std
sbb
stc
mov
jae
movsb
sub
in
jnp
mov
add
mov
in
call
mov
lock
pop
pusha
or
gs
pushw
insb
and
cmp
mov
aam
xor
fsubrs
not
fucomip
push
loop
cmp
pop
pop
xor
push
subl
sbb
xlat
mov
mov
stos
push
and
sbb
sahf
hlt
cmp
cmpsl
flds
out
pushf
jge
or
ds
push
adc
sbb
scas
rolb
dec
dec
mov
xchg
sub
jne
or
fdivr
or
push
in
subl
sbb
mov
pop
adc
lret
cmp
icebp
cmp
mov
mov
popf
and
mov
or
mov
push
add
enter
cmp
enter
jo
addr16
mov
push
cvtps2pd
xchg
ds
inc
push
aad
daa
push
out
rol
mov
inc
mov
mov
daa
mov
nop
mov
mov
pusha
xchg
cmc
xchg
aas
dec
rolb
push
rcrl
insb
mov
pushf
scas
cld
push
repnz
setg
sub
int3
or
addr16
mov
out
sub
popf
aaa
jle
std
les
adc
jle
xor
push
call
cmp
fwait
lds
ja
inc
call
mov
clc
lcall
or
mov
mov
adc
iret
imul
daa
cmp
fucomp
mov
push
ror
xchg
sbb
mov
add
lea
fimuls
or
jmp
dec
popf
lods
mov
mov
rcr
cmp
scas
xor
inc
pop
mov
lret
mov
bound
add
ds
test
ret
pop
xchg
jns
std
test
rorb
jle
sbb
jns
jg
jo
iret
in
shll
out
sub
pop
mov
add
cmp
jno
mov
xlat
cmc
mov
enter
rol
test
cmp
or
xchg
test
clc
roll
inc
xchg
inc
mov
adc
sub
adc
and
sub
xchg
xchg
ss
ljmp
mov
or
push
push
mov
das
fbld
in
ds
loopne
and
xchg
add
scas
mov
or
or
push
call
leave
fsubrs
jg
ds
cltd
push
stos
pop
push
call
jne
ja
movb
frstor
xor
mov
lods
push
js
jae
or
mov
cli
enter
movsl
mov
lcall
nop
cmp
std
decb
or
jecxz
add
test
rcrb
cld
dec
scas
inc
outsb
stos
jecxz
inc
adc
mov
jecxz
mov
jno
sarb
sub
lahf
xor
push
rclb
jns
xchg
fs
and
repnz
cmc
lods
outsl
aad
jns
pop
mov
jp
push
lods
mov
fwait
jb
hlt
outsl
fists
das
or
inc
mov
loope
fimull
or
adc
cmp
mov
sub
ss
subl
gs
cmp
into
iret
mov
add
pop
inc
push
ljmp
xlat
cmp
shr
cld
pop
fimull
pop
dec
cmpsb
outsb
jmp
add
mov
and
mov
inc
ja
or
cltd
cwtl
iret
clc
or
call
scas
sbb
enter
inc
dec
stos
jmp
push
xchg
popl
adc
mov
mov
push
adc
mov
xchg
es
ret
test
jbe
xchg
clc
fbstp
loopne
test
jg
xchg
cmc
cmp
mov
jno
xor
sar
loopw
scas
cmpsl
test
mov
adc
imul
fistps
leave
fldcw
xor
jle
dec
das
push
dec
stos
xchg
sub
mov
sahf
iret
movsl
mov
pop
repz
lahf
ljmp
lcall
fwait
xchg
sub
mov
mov
cmp
push
mov
xor
push
call
dec
clc
mov
xor
test
ljmp
pop
roll
sbb
add
pushf
movb
lea
jmp
xchg
push
xor
pmuludq
sub
and
xchg
movsl
ja
pop
cmpsl
hlt
lods
lret
dec
out
jmp
es
xor
test
scas
shrl
shr
inc
jb
js
inc
push
jg
dec
pop
addl
push
mov
rcll
ret
xchg
out
or
add
jle
xor
into
inc
popf
sti
jb
test
push
jecxz
or
jmp
and
cmc
sub
sar
rcr
lea
shl
shr
xchg
stc
dec
movsbw
mov
shld
sbb
bsf
add
shrd
add
shl
mov
push
movw
cmc
pushf
shr
call
push
call
adcl
and
sahf
inc
fbstp
hlt
rcll
repnz
inc
mov
pop
push
aad
adc
popaw
cld
sbb
push
sbb
and
dec
or
hlt
dec
fisttpll
aaa
jbe
lret
scas
sbb
ret
ja
out
push
pushf
mov
pusha
test
call
cmc
xor
ror
call
add
add
pop
icebp
pop
dec
jmp
inc
xchg
in
add
incl
xor
nop
scas
bound
push
jmp
mov
push
xchg
scas
inc
pop
mov
icebp
pop
js
mov
jg
arpl
cmp
cmc
shrl
les
mov
inc
sbb
dec
push
sub
jl
scas
xchg
sub
jbe
stc
mov
hlt
add
mov
lods
or
or
scas
pop
mov
orb
add
pop
in
movl
mov
pushl
ret
push
call
jecxz
jmp
sub
aas
inc
hlt
das
jno
mov
sysexit
jae
and
adc
fistps
mov
fistpl
inc
movsl
xor
xor
ja
dec
outsl
push
jge
fbld
mov
mov
in
or
pop
loopne
push
enter
loopne
fwait
or
outsb
or
bound
mov
fld1
jns
add
xchg
into
add
jg
outsl
xor
ret
push
sbb
cmpsl
pusha
xchg
cmovbe
pop
push
push
jmp
jae
rcl
push
sub
add
jle
mov
or
ret
stc
push
jge
repnz
or
nop
jnp
addr16
fidivrs
fldl
out
out
mov
add
jle
inc
adcl
in
pushf
sahf
xor
xor
sbb
nop
or
mov
stc
out
sbb
ret
das
cmpsl
push
sub
out
jb
sub
je
push
lret
jnp
cmpsb
into
rorl
jle
pop
lret
iret
into
out
push
mul
jl
in
sbb
stos
inc
xchg
lea
jle
xchg
inc
ficompl
mov
push
fwait
out
pusha
pop
je
in
lds
jle
gs
int3
loopne
mov
jg
pop
dec
gs
imulb
cmp
popf
adc
iret
out
mov
cmp
mov
adc
test
hlt
mov
jo
pop
gs
dec
jne
clc
mov
leave
mov
inc
ds
shll
inc
movsb
sub
jmp
pop
shlb
or
cmc
pop
xchg
or
cli
aam
inc
dec
xlat
sbb
fsts
mov
xorb
cs
in
imul
and
jae
jmp
push
call
pop
cmp
sti
subl
cmp
fistl
mov
push
nop
jns
adc
push
adc
lret
xor
sbb
xchg
lret
pop
popa
jmp
inc
lea
push
pop
xchg
scas
popa
xor
xchg
and
xor
sub
in
add
or
push
fcoms
sahf
mov
ror
xchg
ret
popa
adc
ss
pushl
sub
or
out
clc
mov
invd
jle
bound
lea
or
pop
das
ljmp
sub
push
testb
cmp
imul
push
mov
fwait
icebp
xchg
sbb
push
xor
xchg
mov
adc
mov
sub
mov
orb
inc
inc
mov
and
test
inc
mov
mov
mov
sub
int
mov
jns
lret
ss
xor
ljmp
jb
stos
outsl
adc
call
mov
pushf
lea
call
bt
stc
pusha
stc
sub
pushl
lea
jne
call
push
call
cwtl
insb
push
call
jne
dec
and
movb
pushl
lea
jmp
outsl
insb
gs
jne
xor
cs
insb
add
stos
repz
push
inc
pop
jecxz
mov
lret
sahf
xchg
shl
jmp
lea
push
mov
test
test
daa
xchg
aad
pop
mov
adc
pop
repz
jns
pop
sub
lret
in
cmpsl
cmpsb
mov
inc
dec
jge
pusha
lea
call
push
pushf
jmp
mov
jmp
push
call
jns
repz
ja
call
jp
push
cld
mov
jp
dec
aam
ljmp
mov
xchg
pop
test
in
mov
sbb
fimuls
push
in
scas
sub
sbb
dec
lds
cld
mov
sub
adc
pop
dec
cmp
dec
mov
cmpsb
lock
lahf
shrb
fndisi(8087
mov
add
jle
sub
adc
pusha
mov
pushf
push
lea
jmp
push
call
add
cmp
cmp
not
jmp
jmp
push
movsb
es
pushf
jmp
mov
fdivrl
sbb
cltd
or
aam
loop
les
xchg
jle
jns
xor
cmpsl
add
mov
test
mov
les
push
mov
stos
xor
pushf
cmp
dec
and
int3
scas
xor
xor
sbb
push
xor
jmp
jo
mov
push
lahf
call
push
xchg
adc
pop
cltd
jle
repnz
mov
insb
push
call
mov
adc
insl
or
dec
or
in
stc
mov
push
add
and
mov
inc
insl
scas
es
and
push
jle
jmp
jo
xchg
sub
sbb
push
pop
sbb
and
cmc
inc
push
notl
mov
pop
mov
pop
jmp
imul
scas
outsl
cmc
lods
sahf
je
xchg
or
sub
push
call
mov
fcomps
inc
loope
and
test
loopne
imul
loop
mov
adc
push
fmuls
pop
jns
arpl
or
cltd
bound
in
sbb
cmpb
aaa
shl
cmp
adc
adc
js
pop
movsl
mov
cwtl
mov
sbb
push
xchg
adc
stos
aam
jmp
inc
mov
push
inc
inc
add
dec
aam
les
mov
call
or
or
cltd
clc
imul
clc
add
pusha
lea
jmp
or
in
xor
fwait
out
pushf
push
pushf
inc
and
xchg
adc
push
sub
xchg
scas
cmp
push
loopne,pt
push
movsl
in
inc
out
inc
div
mov
pop
or
shlb
add
mov
push
pusha
xchg
xchg
aas
and
mov
enter
jno
notl
mov
mov
lret
aad
out
mov
sbb
pusha
mov
push
cmp
xlat
out
sar
scas
ja
and
rcrb
or
jbe
push
mov
xchg
mov
adc
adc
mov
fiaddl
insl
xchg
xchg
mov
repnz
mov
mov
out
shrb
rorb
je
nop
or
mov
mov
imul
movb
mov
shrl
xor
sbb
jge
xchg
cmp
push
lret
pop
gs
sahf
push
jge
out
push
ss
or
pop
inc
lret
in
fwait
xchg
pminsw
adc
push
mov
movl
xchg
lea
pushf
mov
call
setl
inc
push
movb
not
xchg
inc
mov
not
mov
stc
cmc
cmp
mov
clc
neg
bts
ror
mov
test
sub
jmp
push
call
push
push
call
fwait
jae
push
push
call
pop
in
addr16
dec
cmp
mov
sbb
js
adc
jae
sbb
fsubrp
clc
jle
xor
adc
rorl
mov
mov
mov
out
adc
aam
xor
mov
inc
or
leave
dec
enter
jbe
push
mov
dec
arpl
pop
inc
xlat
cs
daa
xchg
xchg
pop
into
sub
test
sbb
adc
orb
add
out
add
roll
lds
or
scas
push
adc
pusha
jns
xlat
aas
cli
mull
adc
mov
inc
sub
jo
pop
fs
cld
xor
rorl
mov
ljmp
dec
mov
sub
mov
mov
jmp
xchg
push
push
scas
xlat
pushf
mov
int3
daa
inc
loopne
or
fwait
sub
clc
jnp
jp
divb
mov
jg
jo
xchg
pop
or
sub
lahf
stos
dec
or
mov
aas
addl
jg
js
jbe
and
dec
lea
int3
adc
imul
js
out
call
jmp
push
mov
and
add
lcall
xchg
fldt
leave
mov
xor
mov
stc
xchg
sbb
and
in
mov
lret
bound
fwait
orl
jl
jecxz
push
cmpsb
shll
mov
in
pusha
testl
cmp
fs
pop
imul
fnstcw
imulb
cmc
xchg
mov
jg
or
jno
orl
push
mov
jmp
mov
ljmp
jg
movsl
call
cmc
add
pusha
lea
jne
pusha
mov
call
cmp
leave
inc
fcomps
std
outsb
push
fidivl
xchg
in
repz
out
xor
ficompl
push
aam
into
push
mov
xchg
add
fs
mov
cmpsb
or
leave
jle
icebp
fstpt
hlt
adc
cmpsl
fimuls
ds
ret
fstl
add
xor
std
addr16
xchg
call
aas
addb
std
push
lds
addb
cmp
cmpsb
sub
sbb
movsb
jge
inc
jnp
and
pop
cmp
jle
jge
std
add
pop
and
incb
out
scas
imull
test
mov
fsubrs
call
or
int3
hlt
loope
out
dec
push
jno
fwait
jge
and
jo
cmpsl
loopne
repz
std
and
ret
jno
add
add
sbb
les
pusha
js
push
test
movsl
clc
aad
cmpsl
or
xor
pop
inc
xchg
and
or
imulb
jno
dec
or
mov
jl
mov
daa
xchg
cltd
pop
mov
push
arpl
cmpsl
sub
repnz
cmpsb
aas
test
aad
mov
negl
and
iret
enter
xlat
sub
push
mov
cmp
xchg
push
mov
mov
mov
xor
fcoml
and
jns
sbb
mov
sahf
test
mov
and
mov
dec
ds
shld
gs
mov
cmp
movsb
lahf
dec
loope
into
sbb
call
add
jb
or
decl
jle
and
push
loop
movsl
das
out
testb
mov
push
fstpt
push
call
xchg
sar
inc
lods
rdmsr
lahf
push
mov
pop
cmp
or
sbb
ret
mov
or
mov
popl
cmp
out
outsb
push
arpl
cmp
xchg
jo
in
or
cmp
sar
je
push
mov
xor
adc
push
leave
dec
dec
lods
dec
stos
fisttps
add
or
inc
or
stc
inc
dec
fwait
int
popf
xor
test
lods
and
fisubrl
mov
shl
imul
xor
dec
test
movl
cmp
sbb
lods
stos
pop
insb
mov
adc
jb
cmp
sbb
cmpsb
dec
icebp
sbb
pop
inc
nop
cmp
inc
outsb
cmp
fld
popf
push
dec
cmp
sbb
lahf
out
mov
xor
fisttps
int
insl
aad
cltd
sbb
xor
jmp
fwait
xchg
sahf
add
pop
mull
cltd
sbb
cmp
or
and
mov
push
mov
pop
xlat
test
and
lods
enter
mov
sbb
jbe
dec
cmp
inc
mov
cmp
jle
das
mov
cmp
cmp
shr
fs
xchg
mov
cld
mov
lds
mov
jle
shlb
shll
iret
cmp
fs
test
pusha
push
or
adc
les
mov
jmp
cwtl
shll
sbb
sub
dec
aas
mov
sub
cmpl
mov
mov
and
das
or
mov
stos
rclb
sub
test
shll
ret
pushf
or
and
jle
cs
mov
adc
mov
shll
jne
dec
sbb
out
jns
or
adc
and
lea
jb
bt
stc
cmc
cmp
push
mov
pushl
pushf
lea
jae
add
mov
pushf
lea
bsr
rcl
mov
shrd
movsbl
mov
bt
pusha
sub
pushf
repnz
call
push
call
imul
mov
mov
jne
jecxz
jmp
imul
add
loope
fstl
dec
mov
and
mov
scas
push
out
mov
lods
insb
andb
jl
addl
pop
rcr
dec
xchg
adc
es
jne
movsl
inc
out
scas
jecxz
adc
leave
flds
push
subl
or
cmp
jnp
inc
mov
mov
daa
scas
jg
cmp
andl
pop
adc
test
das
ja
mov
gs
sub
in
fucom
mov
sti
sahf
jbe
aaa
cli
dec
and
outsb
jge
push
xchg
sar
lea
scas
sub
pop
incb
pop
sti
sahf
jbe
fwait
pusha
or
test
pusha
dec
push
jns
shrl
rorb
outsb
sub
shrl
inc
loop
out
push
jbe
and
iret
stos
dec
mov
lds
icebp
dec
lea
inc
push
sbb
jle
pop
test
sar
add
stc
ror
clc
mov
pushf
add
stc
mov
sub
movb
bswap
mov
jmp
push
call
hlt
daa
push
push
call
test
and
call
jl
sub
add
lret
aaa
jno
lret
rorb
stc
jbe
mov
inc
mov
imul
call
mov
pop
sub
stc
jbe
or
mov
add
loopne
and
aaa
adc
inc
push
inc
orl
cmovs
xor
dec
mov
mov
test
mov
addr16
cmpsb
inc
adc
sbb
push
push
fmull
adc
and
push
je
psrlw
leave
or
jle
arpl
cmpsb
lahf
fistps
inc
xor
vmwrite
ret
push
pushf
add
inc
dec
stos
inc
jo
movsb
inc
testl
sub
dec
jnp
arpl
adc
movsb
sti
lcall
stc
cmpsl
rcrb
sti
inc
pop
loopne
test
call
outsb
and
dec
pushf
hlt
or
xor
jns
je
add
fs
call
test
cmc
cmc
test
cmp
call
push
call
adc
mov
movb
lahf
call
push
call
push
push
ja
int3
adc
and
leave
into
cmc
movsl
shr
cmp
jmp
rclb
rcrl
xor
dec
jp
xchg
leave
or
push
dec
into
fwait
push
push
std
movsl
rcll
es
pop
cli
out
jle
xchg
push
mov
inc
mov
pop
lret
and
cmp
rol
xor
adc
mov
out
out
and
mov
ret
out
lds
mov
or
pop
jmp
xchg
inc
je
mov
jle
and
popf
stc
imul
cmp
stc
add
pushf
pusha
lea
jmp
jno
mov
xchg
ret
and
inc
cmpl
push
or
adc
dec
in
inc
sub
pop
fstps
lods
xor
shrb
cmp
scas
jbe
mov
inc
pop
or
test
shrb
cmp
sbb
cmp
out
and
jb
add
ret
or
mov
push
jno
push
dec
cmp
cld
xor
ret
sbb
inc
cmpl
test
decb
jle
and
repnz
cld
mov
mov
clc
xor
add
lret
dec
adc
das
push
icebp
dec
fsubl
imul
and
stos
clc
xor
in
pop
movsb
mov
ret
mov
inc
xor
andl
dec
aad
lods
sbb
out
sub
ja
out
shr
movsb
inc
xchg
testb
dec
lock
ds
jne
in
ss
and
aam
aaa
jb
cmp
addr16
inc
inc
das
mov
jno
jle
mov
jg
add
jg
and
js
icebp
cld
push
call
enter
push
call
sub
sti
pop
cmp
inc
and
fisubs
jl
or
ds
add
pop
sar
jmp
push
call
push
push
push
jg,pn
fsubrp
into
pop
and
adc
jg
jle
jmp
add
cs
icebp
cmp
sti
push
and
xchg
mulb
mov
and
pushl
pushf
mov
movb
mov
pushf
pushl
pushl
ret
push
call
jnp
std
lahf
aam
imul
dec
and
jnp
sahf
lcall
in
cmc
fwait
out
pusha
pop
scas
jbe
and
cwtl
and
faddl
inc
mov
xchg
jle
cmp
cmpsl
pop
mov
push
sub
push
in
push
mov
mov
hlt
sbb
lods
cmp
daa
mov
mov
or
and
orb
dec
ret
push
subl
inc
in
dec
sub
or
and
mov
dec
push
insl
cmpsb
xchg
xor
pop
inc
mov
xchg
bound
jb
mov
in
or
movsl
push
cmp
out
mov
lret
mov
inc
cs
push
xchg
jnp
sahf
mov
mov
repnz
pop
ja
dec
mov
sahf
and
aaa
enter
or
push
pop
iret
sub
insb
aaa
enter
dec
push
hlt
or
jo
stos
inc
and
sub
xor
scas
or
sbb
lcall
loopnew
mov
push
pop
dec
out
jecxz
ret
cmp
hlt
stos
lds
sbb
jmp
mov
sub
dec
or
mov
insl
cmp
pushf
lea
jae
cmc
test
cmc
stc
cmp
jmp
pushf
lea
je
bt
jmp
inc
cli
jae
lods
xchg
ret
insb
sbb
lret
sti
cmp
pop
dec
cmp
arpl
xchg
and
fdivrl
mov
inc
add
pop
test
push
add
xor
add
lods
clc
popa
mov
insl
mov
adc
inc
push
mov
loopne
sbb
cwtl
or
mov
push
fildll
or
inc
ljmp
inc
adc
pop
sahf
insb
ss
mov
and
jle
gs
xchg
push
call
and
add
fcompl
or
mov
jb
push
inc
ja
sbb
daa
push
enter
repz
test
scas
xchg
sbb
jp
lcall
out
scas
sarb
aad
pop
mov
loope
add
mov
push
sarl
sub
addb
addr16
invd
test
mov
fdivs
pushf
dec
pop
out
mov
movhps
sarl
clc
pop
movl
sbb
jle
cmp
push
call
roll
jle
mov
xchg
sbb
dec
es
jno
lea
lea
mov
mov
leave
sbb
es
arpl
fisttpll
fcmovnu
movsb
mov
mov
ljmp
or
cli
jb
inc
cmp
fmull
stos
jmp
jbe
or
cmpsl
orl
xor
push
jae
mov
loope
sub
mov
test
into
xchg
pop
mov
ljmp
nop
xor
cmp
inc
adc
sub
iret
push
pop
pop
mov
jle
idiv
adc
mov
stos
pop
adc
jl
neg
mov
dec
ret
clc
rorl
sub
dec
shll
lret
aas
push
dec
jge
pop
pop
add
jo
pop
push
mov
add
and
sarl
xor
or
push
pusha
outsb
hlt
mov
andl
outsb
test
xchg
cmp
cmp
stc
xor
rcrb
popl
aam
ss
insb
sub
mov
jns
in
xor
push
mov
ljmp
shrb
push
mov
and
xor
pushf
mov
repz
xchg
pop
inc
fsubrs
sbb
add
scas
das
movsl
pushf
stos
fst
sarl
push
aas
mov
and
jmp
hlt
and
popa
dec
std
mov
xor
and
insl
cmpsl
bound
in
mov
xchg
xchg
xor
mov
dec
aad
push
xchg
mov
jmp
mov
or
hlt
mov
xchg
movsb
pop
or
dec
das
lds
shrd
dec
adc
xor
mov
cld
in
in
jo
out
inc
mov
lea
sarb
push
jb
testb
addb
pop
data16
xor
imul
movsl
add
in
jo
or
scas
pop
xchg
cli
adc
repnz
and
mov
jns
stc
icebp
add
scas
fdivrp
push
movsb
rorl
and
dec
and
xchg
pop
in
mov
push
mov
jle
lods
add
mov
push
cwtl
fldt
fbstp
cmp
mov
cmc
call
push
call
rorb
mov
jne
je
and
movsb
aad
ss
lcall
mov
jno
mov
inc
out
mov
nop
add
lods
cmpsl
push
cmp
mov
xchg
and
dec
mov
in
mov
mov
adc
std
push
das
ja
out
scas
fisubrl
hlt
in
add
xlat
clc
je
pop
outsl
jecxz
inc
lret
or
lcall
enter
addr16
add
cmp
xlat
and
dec
lock
cwtl
cmp
xor
xchg
in
aaa
sub
xchg
dec
pop
daa
invd
jle
dec
dec
jae
adc
adc
dec
xchg
xor
roll
jno
stc
jnp
mov
es
ret
and
mov
in
ret
outsl
clc
or
scas
xor
mov
out
mov
mov
addl
imull
cmp
sti
xor
les
dec
sahf
mov
jne
out
cs
movl
xchg
nop
call
addr16
adc
ret
fildll
sbb
dec
in
pop
aad
in
sub
and
mulb
jecxz
fistpl
and
mov
or
jae
sti
pop
or
push
jo
mov
sbb
enter
stos
or
jge
lods
xchg
ja
adc
repz
insb
inc
dec
stos
mov
jp
data16
sub
or
and
push
dec
cmpsb
dec
in
loop
adc
lods
mov
dec
jns
test
inc
pop
inc
out
dec
fucomip
addb
fistpl
and
data16
mov
push
mov
sti
mov
mov
and
sbb
ret
push
inc
adc
mov
dec
insl
and
xchg
scas
sub
outsl
and
xchg
int3
aas
dec
fldl
xor
in
add
sbb
jb
xlat
or
stos
mov
jl
push
jns
dec
xor
int
testl
dec
bound
jp
lcall
fidivl
mov
mov
or
repnz
ret
fidivrl
lahf
xchg
mov
scas
jbe
jbe
bnd
out
dec
mov
bound
aad
xor
cmc
outsb
fs
shrl
insb
rclb
xor
dec
mov
xor
mov
movsb
loopne
xorb
push
lock
aad
xor
imul
pop
dec
add
inc
jne
mov
ret
in
push
outsl
inc
jle
cmc
mov
and
int
dec
movsb
inc
or
in
hlt
in
lock
popf
inc
push
pop
sbb
sub
in
push
xchg
lahf
clc
or
inc
lret
out
pusha
cmp
push
call
sub
mov
pop
frstor
pop
test
in
jne
adc
mov
push
sub
cmp
je
clc
mov
sub
pop
idivl
scas
xchg
std
cmp
xchg
rorl
cmp
xchg
or
xlat
mov
repz
push
insb
cmp
out
dec
adc
stc
sub
xchg
inc
mov
cs
push
gs
push
addr16
out
ret
push
jns
dec
inc
fwait
pop
aaa
pop
adc
dec
xchg
jecxz
in
jg
jle
xchg
gs
aad
mov
bswap
jmp
cmp
insl
pop
aad
mov
sbbb
dec
cmp
push
stos
repz
and
jne
add
mov
shll
imul
cs
sbb
jnp
inc
fdiv
cmp
lods
stc
stos
movsl
pop
sbb
scas
sub
inc
fdiv
icebp
dec
xor
and
push
popa
cltd
daa
add
add
out
imul
or
std
pushf
add
xchg
in
jle
cmp
jb
cs
rorl
add
push
not
jmp
push
call
adc
xor
xchg
scas
imul
int3
mov
pop
xchg
shlw
pop
pushf
dec
mov
fbstp
lcall
fnsetpm(287
xor
js
aam
mov
nop
es
or
aad
sub
jo
in
xchg
arpl
lret
and
xchg
aad
imul
mov
notb
adc
aaa
push
and
lret
xchg
and
pop
push
imul
cmpsb
jno
gs
iret
rcrb
mov
push
push
push
aaa
dec
out
xor
mov
insb
ror
push
or
pop
lods
cmp
fsubrl
pusha
adc
icebp
xchg
das
pop
pusha
mov
jbe
sahf
inc
add
or
or
dec
pushf
sbb
aam
xor
sub
xor
push
mov
xchg
or
xchg
es
stos
mov
adc
xor
inc
adc
sub
lcall
sbb
inc
imul
outsb
cwtl
and
bound
inc
in
and
addr16
or
jno
push
rorl
hlt
std
pushf
dec
orb
in
or
xor
repnz
call
pop
pop
push
call
adc
pop
adc
out
cmp
mov
arpl
shlb
xchg
mov
mov
jle
fmull
push
sub
jle
dec
jae
inc
push
lock
aaa
inc
or
fmull
addr16
jne
mov
mov
cmpsl
push
jmp
sti
sub
je
lret
mov
ds
cmp
repz
inc
aaa
xor
mov
inc
mov
imul
stos
jecxz
repz
mov
stc
fisttps
sub
or
add
fmuls
out
mov
fmulp
adc
mov
lea
loop
shll
int3
scas
xchg
cmp
not
lock
lret
outsl
xor
adc
in
inc
xchg
aam
mov
push
inc
or
mov
inc
xchg
jne
je
xor
jg
std
add
jle
mov
jns
es
fmul
ds
shl
sbb
add
pop
push
adc
lahf
ss
dec
or
or
add
adc
adc
test
jmp
out
inc
xchg
mov
out
or
test
inc
cmp
or
sbb
addb
jg
pop
stos
popf
ds
js
push
loopne
add
xor
xchg
adc
mov
xrelease
insl
shl
sub
in
mov
adc
insb
or
mov
test
test
aam
incl
icebp
rcr
mov
btr
sub
setge
shrd
ror
shr
sar
stc
mov
dec
rol
add
bswap
movzbw
cmp
add
movzbw
mov
clc
pushf
movb
shr
clc
cmp
movb
lea
je
clc
jmp
ja
mov
push
lret
rclb
cmp
leave
cmp
mov
aas
js
xor
hlt
les
pop
jo
aaa
ds
imul
push
lret
insb
pushf
mov
test
fs
push
push
push
and
mov
dec
mov
xchg
dec
out
xchg
dec
push
loopne
js
cmp
dec
or
sbb
popa
xlat
sbb
push
cli
incl
push
or
jecxz
ss
repnz
xor
je
ficompl
ljmp
repz
cmp
push
cmp
subl
push
cmp
add
jg
mov
add
adc
stos
aad
ret
add
mov
and
jle
sahf
sub
or
test
loope
shrl
rol
imul
fiadds
aam
ret
sbb
pop
aam
dec
fimuls
add
test
cltd
jmp
xchg
les
ret
dec
xchg
add
ljmp
mov
pop
xor
fnsave
aad
push
cmp
loope
and
fwait
out
xor
loope
sub
pop
push
mov
jle
clc
xchg
test
lret
inc
notl
add
add
xor
ja
cwtl
dec
mov
sbb
addl
mov
mov
jle
sub
pop
sub
out
adc
imul
out
sub
test
mov
xlat
dec
lret
push
aas
es
and
scas
push
es
pop
test
xor
adc
add
dec
push
shrl
pop
cwtl
cmp
xchg
movsl
sub
adc
cmp
pop
jo
and
pop
pop
sbb
xchg
lods
sti
jmp
or
loope
punpckhbw
pusha
lock
add
sub
stc
cmp
push
pushf
lea
jae
push
pusha
lea
jmp
push
call
push
or
dec
nop
jmp
cmpsl
stos
xchg
sub
fnstsw
xchg
scas
int
out
or
push
sbb
sahf
lcall
mov
loop
clc
jge
rcrb
mov
cltd
scas
xchg
icebp
std
xchg
mov
imul
mov
pusha
mov
loope
cld
fsubrl
int3
mov
add
jle
jl
ds
addl
inc
inc
gs
lahf
mov
jns
xor
sub
xchg
andl
or
push
icebp
pushf
jno
push
add
and
sbbb
and
xlat
adc
aas
push
add
push
pop
in
xchg
arpl
fldt
aad
and
jg
pop
dec
cmp
loop
test
cmpsl
inc
pop
sub
sbbb
xchg
xchg
pop
lock
push
test
stos
xchg
rclb
dec
push
adc
pop
xor
mov
ja
ljmp
pop
jns
std
or
fldl
std
pop
leave
sub
je
addr16
mov
pop
mov
leave
add
jle
inc
mov
push
call
pusha
inc
fsub
inc
mov
in
sub
sbb
cmpsl
mov
sbb
fisttps
lcall
stc
mov
push
sub
lods
adc
imul
aas
inc
mov
mov
push
dec
fiaddl
adc
jno
pop
inc
inc
std
enter
add
rorl
adc
pop
stos
push
cmp
dec
inc
fadd
mov
jle
inc
xor
jg,pn
mov
repz
and
aaa
add
orb
add
lahf
jnp
stos
in
decl
add
sub
je
pop
ret
push
call
add
jg
mov
ficoml
add
cmp
mov
pop
call
inc
std
mov
stc
jne
dec
out
addr16
mov
inc
icebp
mov
in
push
inc
fwait
out
arpl
aad
scas
inc
add
mov
rclb
mov
cmp
jecxz
xchg
scas
inc
add
sahf
and
inc
or
push
fisttpl
sub
out
mov
ror
mov
loop
push
fisttps
xor
add
jae
adc
or
xorb
push
cmp
sbb
sub
ja
inc
mov
push
and
xchg
call
cmc
pushf
ror
call
sarb
call
fldt
rorb
fdivr
pop
dec
pop
and
test
sti
adc
sub
jbe
sahf
dec
clc
les
leave
pusha
xor
scas
int
pop
mov
push
pop
popa
push
pop
stc
ret
popf
movsb
fisubs
add
scas
xor
ret
sbb
fisubl
jns
push
inc
and
js
mov
add
pop
lock
mov
jecxz
les
adcl
add
fwait
lret
jecxz
aas
push
sub
sbb
jnp
jp
shll
add
lock
loopne
insb
stc
dec
sar
lret
cmp
addr16
xchg
xor
fcoml
into
data16
addr16
aaa
inc
dec
cmp
pop
mov
jmp
sub
jecxz
imul
pushf
dec
mov
adc
idivb
sub
std
mov
faddl
cmp
xlat
and
out
push
mov
push
enter
push
in
push
lea
ja
stc
imul
push
test
bt
test
add
push
push
movl
movl
lea
jmp
pusha
call
cs
push
test
add
in
ds
jno
cmp
and
dec
or
cwtl
xor
sbb
jecxz
ljmp
inc
fidivl
inc
xchg
inc
dec
out
std
aam
nop
or
push
pop
fbld
xchg
jecxz
inc
pop
mov
inc
or
movsb
xchg
popa
sbb
mov
or
sub
mov
inc
jo
jo
push
mull
pop
inc
jle
mov
mov
pushf
es
cmp
dec
stos
rorb
push
das
fdiv
inc
push
not
mov
pushf
lea
call
call
push
call
mov
fistpll
dec
dec
dec
cs
dec
dec
add
sbb
dec
xchg
call
fisubs
sbb
push
orl
lock
ljmp
push
add
les
adcl
or
and
gs
pusha
mov
push
xor
and
pop
cmc
mov
aaa
mov
fsubrl
xchg
fldenv
out
ret
cmp
movsl
mov
subb
xchg
pop
out
out
subl
or
jge
adc
xor
insb
push
popl
ds
push
loopne
xchg
inc
cmp
or
aam
test
push
stc
push
mov
lds
popa
and
lock
add
and
jne
loop
std
sbb
dec
mov
int
lret
sub
push
cli
fcomi
std
sbb
pop
mov
mov
cmp
and
push
pop
in
mov
xchg
into
mov
push
adc
sbb
outsl
je
or
adc
jg
aas
call
pushf
in
arpl
or
push
fcmovnb
jl
sbb
sub
mov
leave
repz
test
fcomps
rolb
in
sub
fdivl
mov
shl
jp
sbb
out
int
push
ficoml
std
xchg
aad
inc
push
or
popf
sarb
sub
cld
or
int
popf
cmpsb
pop
jge
xor
out
adc
fdivrl
jle
mov
inc
dec
and
dec
push
dec
lods
xor
sbb
call
fnsave
loopne
lea
aam
repnz
xlat
pop
sub
add
rorl
out
in
mov
int3
cmp
insb
xchg
mov
sub
sti
mov
xor
mov
decb
xchg
fwait
sbb
and
cld
in
sub
repnz
outsl
or
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
fidivrs
fildl
sub
ret
jbe
ljmp
push
xchg
cmpsl
scas
imul
jle
jne
inc
xor
loope
cmpsl
scas
imul
scas
mov
xlat
js
push
cwtl
insb
cmpsb
aad
test
imul
fwait
cmpsl
outsl
lea
loop
mov
push
shr
adc
push
sub
hlt
call
clc
nop
xchg
inc
mov
pop
mov
gs
movsl
xchg
pop
filds
sub
jg
mov
aam
add
es
mov
and
icebp
push
jo
repz
cs
jns
sahf
mov
iret
dec
mov
jno
add
cs
and
movsl
or
pop
jae
mov
lret
mov
pushf
in
or
push
dec
xorl
imul
sbb
mov
fwait
cltd
insb
dec
dec
ja
fists
adc
ds
dec
movsl
mov
fcoms
and
push
pop
mov
aaa
ret
mov
jnp
pusha
sbb
addr16
mov
mov
call
and
lahf
lods
movb
push
pushf
lea
je
cmc
stc
call
cmp
test
arpl
jns
dec
xor
les
dec
in
es
enter
ds
idivb
cld
fxch
pop
or
data16
test
jno
or
add
push
and
jbe
gs
ret
je
sti
push
adc
mov
pop
testl
pop
shl
fnstcw
fs
outsb
addr16
daa
sub
xchg
adc
fwait
mov
fwait
jp
push
daa
mov
iret
jno
lock
mov
repnz
pushf
sbb
cs
fs
pushf
jnp
mov
pop
nop
cli
xchg
push
sbb
or
mov
and
or
aad
sbb
jne
out
jmp
loopne
or
pop
outsb
add
inc
mov
fbstp
repz
ret
repnz
inc
je
sub
push
pusha
jno
mov
clc
adc
movlps
xor
push
dec
mov
rorl
push
push
or
mov
out
jge
mov
cltd
test
sub
push
jle
sbb
fists
fsubr
inc
or
mov
mov
pop
in
or
jmp
test
ret
cmp
test
sahf
sub
out
pop
adc
out
mov
insb
and
mov
outsl
mov
xor
or
jne
pop
or
into
and
and
imul
dec
test
leave
pop
pop
adc
inc
mov
inc
jle
adc
sub
sbb
push
inc
aaa
ficoml
jge
jnp
cli
sub
aas
leave
jne
xchg
push
pop
jnp
xchg
out
mov
pop
ljmp
clc
xchg
daa
sarl
pop
sbb
jle
pusha
stos
pop
cmpsb
into
shrb
call
scas
test
cmp
int3
gs
ja
aaa
add
mov
fists
sub
mov
ret
daa
cmovge
shlb
push
ljmp
or
xchg
xor
sti
lea
cmc
into
push
xacquire
adc
outsl
test
in
or
ret
mov
cli
aas
mov
sbb
mov
fiaddl
pop
lahf
sub
sbb
jg
shr
xor
add
xchg
inc
mov
or
mov
push
mov
add
xor
jmp
cs
cmp
sti
or
incl
mov
cmc
loop
xchg
xlat
sub
clc
outsl
mov
mov
test
sbb
inc
jge
ja
add
int3
cmp
cmp
fmul
xor
out
xor
fs
call
in
mov
inc
icebp
in
popf
mov
pop
jg
aas
xor
fildl
roll
sbb
pop
pop
fisubrs
inc
test
out
mov
pusha
add
movsl
nop
mov
mov
push
mov
mov
fsubr
cmc
mov
and
xlat
xor
mov
movsl
or
mov
sbb
jmp
rcll
std
addr16
mov
pop
ss
gs
in
and
push
add
sbb
pop
lret
pop
xchg
aas
jge
rol
fcompl
cld
out
add
jo
jle
lahf
push
mov
jne
jb
xchg
rol
sub
xchg
lds
cltd
adc
in
mov
xchg
rcl
adc
in
test
ret
les
mov
mov
and
jns
push
call
sbb
imul
jbe
mov
scas
lret
or
pop
loopne
push
cli
jl
bound
pop
or
gs
and
ljmp
or
ret
in
pop
imul
das
ds
or
push
loope
lea
jae
jns
pushf
mov
pusha
lea
jne
call
cmc
cmp
or
call
adc
rcll
lea
xchg
cmc
mov
cmp
aam
outsl
mov
sub
shl
inc
or
xor
jb
and
cmp
mov
test
mov
sbb
sbb
pop
daa
out
cmc
cld
ljmp
jmp
pop
adc
jge
jge
sbb
cmpb
int
fwait
cmp
andl
cmpsb
adcl
mov
mov
daa
push
mov
stos
in
ss
xor
inc
push
cmpsl
cmp
ret
call
mov
push
call
push
sub
add
mov
cs
jmp
lcall
mov
fdivr
xor
lcall
test
jecxz
lea
mov
decb
stos
ss
sub
das
scas
lea
sub
repz
mov
bound
popf
mov
mov
cmp
popf
mov
xor
dec
mov
js
popf
lahf
mov
adc
je
lea
ficompl
mov
xlat
inc
and
mov
in
hlt
sub
or
and
jp
push
fldcw
push
fstpl
or
sbb
loope
cmp
dec
mov
movsb
cwtl
iret
test
je
jbe
test
stc
addr16
mov
xchg
movsb
cltd
sbb
jne
in
push
xchg
and
sbb
jno
aaa
dec
cmp
push
push
imul
push
into
out
add
xor
ja
mov
sbb
mov
mov
ja
das
mov
sbb
inc
sub
and
and
add
lcall
cmpsl
shr
loope
add
shrl
mov
sbbb
fnstsw
inc
jae
cmp
cld
dec
in
repz
ljmp
mov
push
cli
negl
in
cld
xchg
lods
push
repz
add
mov
rclb
clc
add
push
rcr
shll
xlat
iret
dec
test
dec
popa
pop
add
enter
jns
jecxz
fnsave
lods
xchg
je
fbstp
push
or
jle
test
add
ja
push
call
repz
xor
cmp
and
cwtl
cli
test
inc
dec
mov
arpl
fwait
dec
mov
lock
and
out
lahf
jl
sbb
sbb
xor
std
mov
inc
aam
sbb
add
fldenv
dec
movsl
mov
mov
mov
test
stos
fcmovnbe
add
inc
sub
jno
mov
testl
ret
or
pop
outsb
or
push
xor
pusha
and
add
pop
mov
test
outsl
subb
push
pop
ds
push
xor
cmp
push
jmp
xchg
es
xchg
and
popf
mov
xchg
mov
in
jne
test
lahf
pop
xor
ret
ds
mov
sub
ljmp
inc
stc
push
add
add
cmp
ljmp
jge
nop
ljmp
pushf
addr16
stc
jae
je
jmp
or
inc
fstp
dec
test
repz
scas
cmp
jle
inc
mov
push
call
aas
jg
mov
adcl
movsl
pushl
popl
mov
pushf
pushf
pushl
ret
mov
sbb
test
cmpsb
sbb
adc
rcrb
lcall
sbb
in
dec
sub
jbe
add
and
adc
fsubs
test
push
jae
cltd
scas
push
loop
mov
mov
test
dec
push
xor
push
lret
scas
scas
mov
adc
mov
xlat
push
sbb
js
adc
jp
xor
mov
cmpsl
jmp
bound
jle
cmpsb
push
je
lea
je
push
mov
shr
inc
bswap
sbb
mov
pusha
stc
push
cmp
xor
jmp
lea
je
movzbw
mov
setbe
lea
pusha
mov
jmp
aas
push
jle
inc
jne
cmpb
or
fistps
das
mov
sub
jns
mov
jle
icebp
or
ja
mov
sub
fstps
jmp
orl
sbb
or
rcrb
ret
leave
iret
bswap
mov
in
cmp
aaa
inc
adc
cwtl
lret
pop
adc
sbb
nop
in
mov
aad
fildl
in
inc
andl
lret
inc
adc
or
mov
and
push
pop
xor
out
stc
xchg
push
mov
dec
dec
cli
mov
push
test
xor
iret
xor
jge
push
pop
mov
pusha
je
pop
repnz
and
xchg
loop
cmp
or
xchg
pop
out
je
mov
xchg
iret
ljmp
jle
add
lods
call
mov
jg,pn
jae
jecxz
and
mov
jg,pn
inc
call
mov
inc
imul
sarl
cmp
xor
xchg
pop
jg
aad
xchg
xor
mov
cli
push
xchg
fcomi
pop
add
stc
inc
xor
pop
addr16
sbb
pop
mov
inc
mov
int3
sti
adc
push
adc
sub
rol
sbb
add
addb
and
push
fiaddl
xchg
xor
jle
outsb
aaa
adc
ja
mov
pop
push
and
push
push
push
mov
repz
scas
addb
and
dec
mov
icebp
outsb
test
sbb
pop
inc
lea
sub
mov
imul
sbb
clc
popf
pop
and
addr16
ss
outsb
loope
fs
jnp
and
movsb
cmp
adc
aad
push
and
in
roll
or
jb
inc
decb
push
dec
xchg
xor
dec
enter
adc
popa
push
call
das
sub
das
adc
dec
int3
cwtl
jb
or
sub
loopne
sub
jmp
push
movsl
dec
out
repz
std
jns
inc
cmp
dec
pop
sub
adc
decl
jge
repz
scas
cli
push
fsubrs
mov
fadd
or
jecxz
outsb
call
and
xchg
pop
icebp
vpcmpgtw
imul
data16
or
push
pop
mov
loopne
xchg
stos
and
add
jg
cmp
add
fists
jnp
dec
sbb
ja
mov
xor
jb
xlat
and
mov
push
outsl
ja
xchg
jle
and
aam
and
ret
mov
arpl
lods
fcmovnb
aaa
rcrb
pop
lock
push
and
and
push
push
mov
pushf
stc
clc
sub
xorb
push
mov
and
test
or
and
jg
mov
add
fsubs
mov
stos
call
mov
and
sahf
int
outsb
stos
jmp
stos
fistps
pushf
loop
pop
xlat
pop
mov
add
pop
js
add
popa
mull
xor
cmc
mov
cvtpi2ps
imul
dec
jb
stos
pop
sub
daa
insl
inc
cld
pop
mov
into
daa
mov
int
jb
cmp
sub
sub
or
or
sub
add
mov
inc
fisttpll
std
aaa
ss
or
mov
in
movsb
call
cmpsb
stos
ret
lods
mov
push
lret
mov
adc
in
push
mov
cs
ds
xor
or
jbe
je
decb
in
out
cwtl
and
andb
ja
addl
xchg
cld
add
addr16
ficoms
xor
sub
clc
push
ja
or
aas
arpl
mov
mov
icebp
mov
jmp
push
nop
sbbl
mov
pusha
mov
in
xor
jle
outsl
or
call
push
call
dec
orb
xchg
add
test
cmpl
call
bound
dec
xor
and
xchg
jle
scas
mov
cld
and
je
push
add
test
xor
jno
push
jbe
fmul
icebp
lods
push
jns
mov
mov
push
popf
lcall
out
mov
out
popf
xchg
sub
test
repz
push
adc
pusha
lcall
add
leave
je
inc
cmp
add
fidivrl
testl
push
sbb
dec
imul
jle
loope
mov
inc
and
movzbw
mov
lahf
movzbw
lea
push
jmp
scas
jae
pop
std
mov
mov
fwait
fs
mov
stos
ret
pop
push
inc
fnstcw
fcmovnu
mov
dec
mov
enter
sub
nop
and
or
sbb
sub
wbinvd
xchg
pop
stc
jl
test
or
mov
sub
flds
mov
sbb
aas
mov
sahf
fwait
imul
cmp
pop
mov
movsl
insb
sbb
sbb
xchg
add
add
rcrb
jle
sahf
imul
xor
jnp
xor
add
xor
jo
shrb
loope
test
mov
int
cmpsb
pop
lahf
and
fisubrl
mov
xor
stos
xor
xor
test
fisubrl
mov
xchg
outsl
jnp
cmp
mov
out
inc
shl
xchg
loopne
jg
dec
push
test
push
cmp
add
outsl
bound
cmp
int3
jp
sub
adcl
cltd
enter
scas
outsl
jle
test
call
pop
inc
je
and
testl
arpl
xor
pushf
shll
lods
fiaddl
inc
mov
add
cmpsb
aam
push
popf
decb
sbbl
and
insl
lods
or
out
pop
pop
or
mov
fcoms
arpl
dec
ja
dec
fcompl
adc
in
pushf
push
cmc
pop
mov
xchg
jne
sbb
push
rcr
sbb
outsl
xor
jne
xchg
or
shlb
pushf
ror
enter
sub
add
jns
mov
arpl
jle
mov
add
push
shr
mov
push
lea
je
pushf
jmp
push
call
sbb
adc
push
iret
adc
jecxz
pop
mov
xor
fmull
test
cli
adc
loopne
in
out
fisttpll
or
test
push
iret
sbb
xchg
enter
lds
xchg
iret
insb
out
pop
mov
xchg
mov
imul
icebp
mov
fcomip
jge
dec
int3
fisttpll
dec
pop
sub
xorb
inc
shl
xchg
mov
mov
mov
punpckhdq
jae
es
add
out
dec
fistl
and
or
hlt
loope
pop
and
les
push
js
inc
mov
inc
mull
adc
push
shll
stos
ret
js
insb
pop
notl
xchg
add
fmull
jle
add
add
jg
ja
and
add
aaa
cmpsl
lea
jae
not
mov
inc
inc
pushf
jmp
xor
push
mov
lcall
imul
sbbb
xor
pushf
inc
movsl
dec
pop
or
fmuls
das
cs
imulb
dec
shrl
dec
push
lea
lods
nop
mov
dec
mov
cmc
cltd
dec
pop
loop
lret
mov
pop
repnz
jo
and
mov
addr16
mul
add
in
mov
cmp
or
pusha
and
call
adc
fs
jb
test
cmp
pusha
call
lea
jne
pusha
inc
pusha
mov
push
push
inc
cmc
pushf
push
test
cmpb
mov
movw
movb
lea
jne
pusha
mov
pusha
jmp
push
call
push
ljmp
test
aam
cmp
or
in
mov
add
addr16
dec
and
daa
push
dec
scas
dec
test
xor
pop
out
fwait
sti
cmp
aad
fs
jp
pop
mov
in
jae
mov
std
push
fnsave
push
ret
mov
push
btcl
push
ret
mov
shl
sub
stos
lcall
lcall
fstl
mov
mov
pop
xor
ret
movsb
cmc
std
or
cmp
push
int
cli
out
cmp
in
scas
mov
xchg
test
shl
fsub
les
sbbb
out
mov
inc
scas
cmp
arpl
movsl
es
pop
gs
jne
imul
xlat
pop
scas
fwait
test
pop
sub
push
popf
sub
aaa
ljmp
call
movsb
mov
fs
xchg
jbe
mov
adc
sahf
cmpsl
sub
loop
jno
push
pop
add
or
push
ss
int
hlt
push
and
push
push
pop
gs
jmp
call
adc
sub
pusha
out
call
or
cmp
push
sub
xchg
lcall
lods
pusha
mov
pop
or
pop
lret
out
outsb
mov
imul
pop
push
cmpsl
mov
sub
scas
mov
test
dec
test
pop
imull
rcrl
dec
scas
stc
lret
push
xchg
insb
je
icebp
push
lahf
adc
or
jb
jle
sbb
cltd
addl
lea
jle
movsb
lods
sub
ja
ss
jmp
test
nop
push
call
cs
call
mov
jl
pop
cmp
mov
pop
add
aad
cmp
cmpsb
ret
sarb
sbb
mov
sub
mov
outsl
jle
xor
sub
rolb
into
inc
mov
cmpsb
sahf
rcrb
or
lcall
and
mov
mov
scas
jecxz
shll
pop
xor
lods
mov
push
rorb
or
mov
hlt
mov
inc
jmp
nop
push
aaa
inc
stos
into
popf
mov
in
aas
pop
xchg
jge
fwait
jmp
mov
stos
adc
ds
cmc
mov
das
or
imul
icebp
jbe
lea
bound
mov
repz
aas
push
loopne
lret
xchg
mov
fidivrl
inc
sbbl
test
dec
jo
sub
in
test
sub
adc
jl
scas
nop
lcall
dec
jg
mov
pop
xlat
pushl
jb
in
mov
mov
clc
add
bound
add
inc
lds
pop
and
push
sub
test
mov
pusha
inc
pop
or
sbbl
add
scas
hlt
jae
pop
cmpsl
loopne
stc
cmp
inc
roll
dec
jmp
xor
fsubp
push
and
insb
adcb
mov
and
jecxz
or
jecxz
jg
adc
lret
sub
out
les
mov
loopne
xchg
jae
scas
pusha
and
and
shr
insb
aaa
jg
mov
aam
mov
daa
insb
mov
es
adc
mov
popa
insb
adc
lods
dec
sbb
in
push
shl
mov
jle
sbb
jbe
or
adc
pusha
ds
call
out
imul
mov
mov
leave
movsb
div
sbb
cltd
xchg
jecxz
mov
add
mov
inc
in
push
sub
ret
iret
push
xchg
iret
fwait
jge
repnz
ss
push
scas
push
ljmp
add
pushf
add
inc
stos
in
imul
pop
sti
stos
push
sbb
adc
fildl
test
test
adc
or
pushf
outsl
cltd
pop
mov
lcall
xor
fsubrl
mul
cltd
subb
mov
xor
pop
mov
inc
bound
movsb
fdivr
not
fwait
mov
jp
into
push
and
leave
loopne
and
dec
lcall
jo
mov
loopne
arpl
pusha
les
fsubl
dec
mov
or
xchg
cmp
icebp
lock
cld
adc
add
hlt
cmpsb
dec
dec
inc
les
mov
sbb
inc
cmpsl
cmpl
xor
shlb
mov
jb
scas
daa
lds
xor
xchg
pusha
sarl
stc
pop
push
cwtl
pusha
pushf
push
jnp
sub
add
int
leave
add
mov
pop
push
jg
jb
shl
rolb
shlb
clc
jnp
inc
xor
xchg
in
push
in
adc
push
stos
fstps
cmp
push
scas
cmpsl
dec
cmp
iret
in
push
add
mov
in
jnp
das
mov
orb
lds
or
or
cltd
pminsw
das
das
add
xorl
insl
hlt
and
mov
lock
insl
inc
adc
push
enter
pop
ldmxcsr
cmp
into
int3
sbb
mov
dec
lret
imul
cld
jmp
push
add
jl
incl
lea
push
xchg
inc
flds
push
add
xchg
inc
adc
jnp
pop
lret
add
adcl
add
mov
popf
in
insl
shrl
jle
jge
popa
test
jmp
push
call
xchg
loopne
movsb
inc
and
mov
dec
cmp
jmp
sti
ljmp
xor
sub
popa
jo
dec
sbb
insl
add
xchg
sbb
hlt
xchg
mov
mov
xchg
sub
lds
leave
mov
adc
jmp
pop
push
js
insl
dec
stos
es
fists
mov
outsb
push
jle
dec
stos
arpl
xor
jecxz
in
dec
push
stc
int3
inc
mov
mov
adc
push
adc
push
mov
lahf
xchg
in
cmp
rcrl
sbb
jle
movsl
das
mov
jle
add
in
sbb
ss
pop
rol
cmp
fdivp
inc
xlat
fsubp
outsb
in
push
jge
or
enter
loopne
sbb
into
adc
gs
orb
cmp
mov
leave
out
adc
and
addr16
or
cmp
push
call
nop
or
inc
movsl
lahf
lods
mov
and
repnz
mov
inc
xor
pop
hlt
arpl
mov
inc
into
aas
mov
icebp
subb
jmp
in
jle
mov
cmp
mov
xchg
daa
test
xor
ljmp
lds
fistps
xchg
inc
test
mov
or
outsb
cwtl
mov
pop
gs
sbb
mov
mov
dec
add
or
out
fs
cmp
jmp
push
call
aam
jg
jno
jnp
inc
or
push
xor
lods
lds
fmull
xchg
mov
fs
rolb
sub
mov
mov
xor
mov
repnz
gs
jnp
jle
mov
movsl
adc
mov
xor
push
pop
mov
pop
insl
lret
xchg
test
in
or
dec
int3
sub
sarl
push
mov
or
cmp
push
call
mov
push
jp
and
pop
cmp
push
enter
cmp
xor
mov
add
mov
aam
loopne
ljmp
cs
pop
push
jg
or
cltd
mov
sub
popf
dec
hlt
jle
out
test
jns
mov
insb
fcoms
add
and
je
push
jnp
or
jl
jle
mov
adc
lret
insb
jg
pop
mov
into
sbb
dec
leave
sbb
test
lret
xor
jmp
call
push
call
jl
jg,pn
and
mov
and
jge
cld
das
mov
mov
jle
jne
pop
sub
push
cld
sbb
repz
mov
jmp
lods
ja
movsb
sbb
adc
mov
mov
imul
clc
and
cmpl
push
mov
pop
dec
add
inc
inc
dec
outsb
push
and
sub
xor
movsb
push
jno
lods
xchg
popf
jne
mov
xor
movsl
mov
add
mov
mov
jp
in
push
in
add
push
icebp
pop
stos
lods
cld
adc
mov
lcall
pushf
outsb
xchg
idivb
fsubrp
xor
push
xor
mov
pop
nop
cmpsl
imull
mov
xor
and
cld
mov
jl
hlt
fimull
mov
mov
pop
call
cwtl
pop
pop
push
push
test
rolb
faddp
pusha
xchg
es
shll
xor
lret
sti
ds
push
cmp
outsb
ds
inc
insb
rcrl
xor
ret
es
roll
stos
pop
test
and
mov
dec
stos
idiv
lea
sub
idivl
fsubp
xchg
xor
mov
and
push
xchg
rol
pop
jns
jbe
and
sub
push
push
and
cmpb
and
adc
sbb
loop
pop
lock
dec
pop
cli
adc
scas
adc
imul
loope
pop
jmp
mov
pop
dec
sbb
je
adc
jg
xor
std
out
xchg
aas
ljmp
mov
mov
pushl
pushl
ret
orps
lock
lds
push
cmpsb
adc
clc
jne
jmp
xchg
jb
data16
push
push
push
or
outsb
fcomp
push
sub
push
and
stc
aad
dec
fistpl
xchg
jp
arpl
mov
push
push
sub
lret
and
rclb
pop
ja
cmp
mov
dec
dec
push
inc
jno
xchg
jecxz
enter
dec
rcl
lock
xchg
sbb
push
rolb
push
add
and
mov
jle
jecxz
inc
jmp
add
dec
gs
popa
addr16
outsl
js
add
shrb
cmpsb
cmp
insb
mov
shl
jne
sub
lret
mov
sti
sahf
lea
sub
hlt
cwtl
cltd
enter
mov
inc
roll
pop
std
xor
ret
ljmp
add
sub
popa
xchg
sbb
repz
sbb
ljmp
jno
and
jns
mov
jmp
add
add
pop
cmp
sub
jae
mov
jle
repz
pop
adc
idivl
pop
stc
and
inc
or
incl
adc
ss
jns
test
push
pop
sbb
push
mov
jp
mov
popl
mov
out
aad
ficoml
sbb
mov
sub
jmp
rol
cwtl
loopne
in
frstor
mov
pop
push
xchg
adc
jb
adc
adc
pop
andb
adc
mov
push
push
pop
stos
mov
mov
jle
notl
pushf
rol
cmp
clc
stc
pusha
sub
jmp
or
mov
stc
sub
push
rep
call
push
call
insl
push
mov
push
call
imul
jno
mov
je
jae
popf
filds
lods
sarb
push
push
and
adc
mov
test
inc
sarl
pminsw
loop
mov
jo
pop
cld
loop
mov
jns
bound
jg
stc
inc
stc
jl
mov
jg
dec
aas
fnstsw
jae
mov
pop
jl
lahf
push
mov
jb
aaa
pop
les
sbb
repnz
lret
aaa
jmp
push
sbb
fs
mov
ja
jae,pt
adc
fsubs
push
jno
hlt
or
xor
shrl
pusha
in
call
call
loope
cwtl
cltd
push
test
addr16
cmc
xchg
jmp
pushf
gs
inc
in
adc
dec
and
aaa
jmp
in
rcrl
jnp
shl
lock
dec
aaa
popa
nop
adc
cli
aas
lods
jp
mov
movsb
testl
faddp
fdivrl
jge
test
mov
push
cld
out
pop
mov
loop
test
fs
dec
lret
pusha
dec
jno
pop
mov
aas
subl
cmpsb
or
loop
pop
jp
mov
hlt
insl
mov
xor
jb
xchg
push
bound
sub
stos
test
cld
lea
cmp
mov
rcl
mov
popf
out
js
lea
scas
push
mov
xor
loope
fmul
pop
popa
pop
mov
sbb
xchg
inc
pop
cld
or
cmp
cmp
rolb
enter
lret
mov
xchg
jns
fwait
xlat
pop
jg
mov
fisubl
aas
cltd
testl
jb
push
scas
or
icebp
mov
cmp
adcl
xlat
cli
sbb
jg
xlat
mov
insl
fwait
push
lock
push
pop
enter
adc
jbe
sub
mov
ljmp
pop
jecxz
enter
xchg
sbb
lods
mov
pop
mov
sbb
mov
in
sti
sbb
inc
jg
andb
mov
test
add
inc
push
test
leave
in
jle
movsl
stos
xchg
add
sbbb
ficoml
mov
adc
ja,pn
sub
xor
add
mov
cmp
fs
pop
jno
inc
lret
aad
cmpsb
cmpsl
es
mov
cld
lock
pop
iret
xchg
cmp
shl
sbb
inc
pushf
daa
jp
pop
repz
cmp
or
pop
fisttps
push
jae
js
jp
xchg
pushl
pop
inc
outsl
or
orb
cmp
xor
pop
mov
fists
test
and
imul
outsb
cmp
ret
inc
inc
jmp
add
es
cmpsb
rcr
jle
movl
xchg
pop
loop
jle
rcll
insl
call
mov
imulb
call
mov
xor
dec
and
mov
jp
fiadds
fisttps
add
hlt
pop
dec
aad
push
lahf
in
mov
xor
inc
pop
lcall
pop
pushf
fsub
cmp
ret
pop
xchg
adc
xchg
sarl
push
shl
sub
sub
push
arpl
outsb
cmpsl
jmp
or
sub
shrl
cmp
cmpsb
push
in
add
mov
mov
and
aaa
or
pop
lods
jg
mov
shll
mov
lahf
xchg
cmp
les
int3
xor
sbb
xchg
out
scas
mov
sub
jne
icebp
jns
adc
clc
in
sbb
lods
adc
sub
lea
jb
pusha
and
push
ret
dec
and
pop
jno
cltd
and
adc
jge
sbb
pop
out
jbe
insb
mov
dec
add
mov
dec
sahf
xchg
ds
test
mov
js
jno
adc
aad
add
orl
icebp
push
in
pop
rorl
fcoms
rclb
test
dec
sbb
dec
push
or
fsubs
outsl
inc
gs
scas
lret
lock
push
xorb
mov
jle
lods
pop
xor
ret
stos
pop
mov
popl
push
call
dec
je
out
es
sar
jle
push
sub
mov
pop
mov
xchg
inc
in
sbb
icebp
jns
sub
test
adc
pushf
mov
sar
imul
gs
cmpsb
push
mov
sbb
out
adc
ret
xor
pop
out
fsubrs
fs
ss
jp
add
imul
sbb
xor
adc
cmp
inc
dec
shlb
dec
into
push
xchg
pushf
icebp
addr16
add
adc
or
pop
lock
sbb
hlt
movsl
daa
push
xchg
pop
punpckldq
add
pop
sub
sarb
add
cmp
ret
popa
faddl
je
dec
in
sub
outsb
adc
pop
sbb
insb
out
xchg
sub
clc
fwait
movsb
mov
cmp
mov
push
subl
mov
sbb
xor
sub
push
xchg
push
adc
adc
js
inc
shlb
or
cmpsl
lods
cmpsl
int3
sbb
cmc
mov
cmpsl
adc
inc
inc
fimuls
xchg
lcall
movsl
iret
mov
push
scas
fcmovu
out
mov
sub
and
mov
es
cmp
adc
cltd
mov
xor
inc
sbbl
cwtl
push
les
push
outsl
mov
xor
jno
inc
cwtl
push
jbe
popa
aaa
mov
xor
movsl
mov
test
ret
and
mov
add
jecxz
arpl
jge
shl
les
in
push
push
cmp
fsubl
jnp
mov
sub
inc
cmp
fiadds
cmpsl
in
ds
jne
ds
jle
cmp
ficoms
push
fwait
ret
adc
int
jno
and
notl
lret
shrb
pop
loope
sub
scas
mov
neg
roll
xorl
ret
mov
mov
imul
jne
repz
repz
decl
cmp
jmp
test
pop
pushf
insl
imul
cmp
push
mov
out
cmpsb
push
or
jle
js
jle
shlb
mov
fstpt
or
and
sbb
xor
add
ja
jbe
jmp
jmp
ljmp
cwtl
shr
or
or
inc
and
fimuls
push
das
fwait
in
int3
pop
out
in
bnd
outsl
ret
das
pushf
jne
sbb
bnd
pop
cmpsl
orb
push
decb
and
push
cld
in
psubsb
mov
mov
adc
mov
insl
sub
jne
jle
lods
pop
into
in
or
cmc
push
stc
mov
jbe
faddp
in
or
imul
jmp
jle
mov
xchg
or
xchg
jo
les
push
dec
cmovb
movsl
sbbb
cltd
fs
pushf
lock
mov
mov
or
in
insb
push
and
or
out
sub
jg,pn
lcall
xchg
xor
pop
sbb
repz
push
lret
arpl
lods
rsm
pushf
aad
jbe
popf
mov
pop
lock
push
jl
mov
add
mov
orl
xchg
dec
js
lods
pop
cmpsl
pop
in
push
movsl
pop
dec
outsb
push
insl
add
arpl
jae
in
cmpsl
mov
in
es
mov
in
and
jg
dec
jo
arpl
arpl
rolb
push
inc
adc
adc
jle
pop
xor
addr16
imul
dec
arpl
push
imul
mov
dec
je
rol
call
pushl
popl
call
push
call
xor
push
call
rol
pop
out
adc
test
lcall
pushf
mov
lea
jmp
imul
insb
insb
add
pop
xlat
and
add
cmp
test
pusha
cmpl
movb
call
imul
in
rorl
lret
adc
ja
dec
stos
outsb
fcomip
lcall
jo
pop
stos
mov
outsb
add
outsl
rol
lock
xorl
imul
sbbl
push
add
arpl
dec
sbb
stc
sub
lock
dec
scas
adc
stos
xchg
js
dec
sbb
out
lock
pop
in
xor
jle
sub
in
jnp
xlat
lock
or
mov
fisubrl
sbb
andb
lock
in
aam
or
pushf
outsl
fisubrl
jg
inc
call
sbb
sub
pushf
gs
and
bound
push
cld
cltd
mov
aaa
add
jno
stos
adc
movsl
arpl
sub
and
mov
insl
jg
loop
out
push
inc
cmpsb
jb
out
dec
sbb
mov
inc
lock
pop
aad
fiaddl
inc
aam
mov
movsb
int3
inc
sub
dec
jg
cli
aam
sub
loop
and
rcrl
test
or
fs
push
call
fcompl
pushf
lea
ja
push
not
pusha
inc
lea
not
jne
not
inc
bt
xchg
aas
inc
movsbw
xor
mov
shl
pushf
neg
rcr
mov
add
pushf
pusha
call
push
call
push
cmp
pop
mov
push
cmp
or
fmull
in
loop
cmc
xor
sti
dec
mov
mov
adc
decb
xor
aaa
cmpsl
add
bound
jl
jne
sti
orb
dec
mov
sbbl
sahf
sub
pusha
cli
scas
lods
add
mov
or
imul
cmpsb
into
pop
mov
insl
clc
jmp
scas
cmpsb
lret
cld
sbb
pop
and
xchg
movsb
xchg
push
cmpsb
and
sub
or
mov
mov
pop
push
fcmovnu
jns
adc
push
xchg
xor
sbb
or
jb
lcall
or
or
push
shll
sarb
xor
flds
add
int
insb
pop
cmp
mov
xor
loop
out
js
or
lcall
jnp
push
pop
in
lcall
push
into
out
dec
in
lods
lock
int3
pop
xor
mov
lock
or
aad
push
sti
and
xchg
data16
rclb
or
push
mov
cmc
sub
pop
out
mull
fsubl
das
pop
nop
repnz
fldt
mov
movl
mov
pop
mov
test
pop
fisttpll
push
mov
jb
or
sbb
cs
inc
dec
jb
adc
xchg
sub
lods
or
lcall
cmovae
mov
mov
sbb
lahf
cwtl
sahf
or
orl
push
sarl
out
or
sbb
adc
stos
inc
xchg
pop
das
sahf
jmp
ret
jo
cmpl
add
shrb
jmp
cld
sub
aaa
andl
fs
mov
adc
cmp
sbb
pop
idiv
pop
xlat
pushw
inc
lret
pop
and
je
push
gs
rcr
into
or
shrb
insl
outsl
cs
mov
push
call
cli
dec
mov
mov
inc
adc
int
test
inc
rcrl
out
ret
and
sub
das
sub
jne
cmpsb
pop
and
xchg
jge
mov
and
stos
xchg
mov
push
sbb
roll
imul
jne
mov
aas
sub
aas
repz
and
lret
sub
outsl
inc
push
or
dec
sbb
push
call
fs
mov
insl
lret
sbb
add
xor
push
call
mov
shll
inc
and
jb
cmp
jmp
hlt
jge
inc
jo
adc
imul
clc
cmp
ret
xor
push
and
cwtl
das
xchg
mov
notb
lret
popa
cmpsb
aas
aad
cmp
adc
mov
dec
data16
adc
sbb
adc
in
and
push
das
pop
pop
xor
jbe
fcoms
enter
sahf
shrb
mov
mov
mov
dec
mov
fisubs
xchg
test
call
jo
or
mov
aam
enter
mov
mov
push
inc
jae
gs
insb
xor
cs
insb
add
ja
sbb
add
mov
clc
imul
mov
or
mov
and
pop
out
lea
repz
push
pop
mov
stc
imulb
into
adc
mov
cmp
xlat
lahf
in
adc
or
inc
sub
fisubs
adc
aaa
pop
sbb
mov
sub
xchg
sub
inc
aam
test
cmp
clc
std
mov
mov
jle
icebp
mov
pushl
popf
pushl
mov
movb
lea
jmp
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
scas
or
cmpsl
add
add
push
inc
jl
sbb
xchg
push
in
cmp
dec
popf
fsubs
sbb
sbb
imul
pop
mov
leave
iret
dec
popf
imulb
sbb
and
or
data16
or
stos
pop
mov
or
xor
or
xchg
fdivl
je
stc
dec
adc
dec
mov
pop
aas
mov
and
sarl
pop
movsl
pop
ds
cwtl
mov
in
dec
or
lea
cmp
add
inc
xorl
jmp
and
cwtl
mov
rcrb
and
push
sub
pop
ss
inc
mov
inc
subl
cmp
pop
mov
and
cmp
inc
mov
mov
lock
lods
inc
test
adc
repz
xchg
lods
and
xchg
inc
cs
dec
and
jl
jnp
and
aaa
mov
mov
mov
xchg
adc
orb
idivl
jle
int
dec
fwait
pop
mov
or
test
push
call
test
cs
es
sbb
test
jg,pn
jl
push
push
and
cmp
outsb
mov
and
negl
xchg
pop
xchg
jle
in
adc
pop
mov
xchg
mov
mov
cmp
xchg
mov
mov
mov
mov
pop
ss
adc
cmc
fisubrs
cmpb
je
rol
sti
xchg
shlb
fisubrs
andb
out
fiaddl
push
adc
daa
mov
and
pop
je
enter
das
cmp
out
or
and
mov
sub
jae
int3
sbb
sbb
sub
inc
and
arpl
call
das
mov
xchg
lods
lds
mov
test
rcrl
cmp
or
or
cmp
and
xchg
jp
call
push
and
ja
pop
test
adcb
inc
lcall
lahf
push
cmpsl
pop
lret
fnstenv
push
test
pop
shlb
mov
mov
xchg
or
pop
and
dec
dec
dec
daa
lds
or
mov
out
sbb
nop
push
je
lahf
pop
pop
out
or
lret
xor
pop
loope
mov
lahf
popf
cmp
fisttpll
mov
mov
sbb
xchg
inc
dec
cmp
inc
ror
xchg
inc
xchg
pop
mulb
pusha
xor
incl
mov
add
mov
stos
cmpsl
movsl
sbb
sbb
mov
stc
mov
pop
xchg
dec
lcall
shrb
imul
inc
push
call
leave
pop
mov
dec
lcall
jns
ret
sti
arpl
loop
nop
mov
rep
xchg
in
dec
ret
mov
popa
push
mov
jecxz
dec
or
xchg
pushf
je
movsb
jns
rorb
pop
clc
popa
int3
or
rolb
sub
sub
add
sub
ljmp
pop
sbb
mov
cmp
push
jns
mov
in
into
popf
jo
or
sbb
jmp
rol
lods
xchg
imul
hlt
movsl
popf
shrl
mov
pop
mov
xor
sub
lcall
idivl
inc
or
cmc
or
xor
mov
jg,pn
imul
dec
or
lea
call
pushf
lea
jmp
mov
mov
imul
xchg
stos
shlb
enter
cmpl
sbb
pop
idivb
imul
shll
sbb
and
mov
popf
xchg
mov
adcb
sbb
jg
push
aam
inc
popf
xchg
push
push
ret
test
inc
sbb
mov
sahf
fists
loop
and
mov
cmc
inc
fucomp
jne
xlat
pop
xchg
jle
fistpll
mov
xor
dec
inc
adc
mov
and
pop
cs
test
and
xchg
aad
inc
hlt
lock
xor
ja
pusha
pop
and
out
test
sub
jb
mov
push
mov
jle
sarb
mov
and
repnz
sbbb
stos
xor
and
jb
pop
sti
pop
push
ljmp
cli
jae
sbb
mov
xor
jno
pop
out
idivl
std
push
xor
pop
fucomip
jle
jno
pop
cmc
das
pop
notb
lahf
xor
or
sbb
lds
call
imul
dec
sti
xchg
push
lods
fldcw
lock
mov
mov
gs
sbbb
lock
add
jle
rorb
add
mov
jp
inc
and
adc
add
jge
mov
mov
mov
outsb
shlb
leave
lret
xlat
or
aam
or
push
fnstsw
inc
out
mov
stc
stos
fildll
xchg
inc
iret
fisttpll
push
loop
test
out
push
lret
push
stc
pop
test
add
pop
xchg
push
sbb
mov
movsb
lret
popf
xlat
shlb
addb
pop
pop
das
add
mov
fwait
and
lahf
and
mov
cmpsb
or
stc
add
lods
call
adc
pop
dec
loop
icebp
pop
das
mov
aad
xor
sbb
xor
push
fisubrs
push
push
add
lds
inc
lcall
mov
push
push
inc
std
stos
rolb
das
out
lahf
and
adc
or
cmp
fildl
pusha
inc
xchg
fcoml
lods
arpl
imul
or
mov
inc
out
fnstenv
mov
or
push
into
rcrb
xor
cmc
or
xor
cmp
or
pop
add
add
push
call
push
call
jns
and
jg
fsubrp
mov
and
jno
or
push
les
xor
leave
mov
fstl
jno
add
and
ss
fbstp
push
lock
dec
cmc
icebp
jnp
jo
mov
jmp
out
loope
lods
mov
cmp
mov
or
xor
add
xor
sbb
aam
fwait
rcll
test
pop
xlat
mov
push
faddl
mov
jae
jnp
inc
test
mov
or
inc
mov
mov
jmp
push
call
in
movsb
jbe
test
push
ficompl
xchg
inc
inc
ret
mov
insb
push
cmp
push
int3
sbb
adc
mov
jp
pop
jno
out
dec
pusha
stc
cmp
adcl
cmp
fnstcw
aaa
sub
xchg
mov
push
jg
xchg
sti
stc
movsl
mov
lcall
addr16
and
imul
dec
push
insb
sbb
aam
or
jne
outsb
inc
cmpb
lods
inc
jbe
ret
and
pop
cli
test
sub
lods
mov
bound
pushf
movsl
jp
gs
hlt
insb
lods
add
mov
setl
jl
pusha
adc
dec
jae
out
icebp
daa
dec
pop
rcll
ljmp
xor
ret
cmp
div
scas
repz
lock
mov
jns
cmc
dec
pop
push
push
test
mov
inc
insl
test
jle
ret
cmpsb
setp
not
pop
mov
pushf
mov
jae
movsbl
not
pop
pusha
movb
movb
pushl
ret
push
call
ja
push
xor
jg,pn
sbb
jno
pop
add
adc
test
jle
mov
mov
or
popa
in
cmp
jno
dec
mov
jp
adc
dec
mov
push
inc
pop
inc
sub
mov
nop
jbe
and
ret
mov
daa
mov
pop
sbb
sbb
add
pop
or
xchg
mov
cmp
xor
lods
movsb
cmpsb
mov
adc
adc
gs
dec
xor
lahf
lods
out
insb
repz
addr16
aaa
cltd
sub
out
dec
lea
int
or
arpl
cmc
test
pusha
push
pushf
mov
lea
je
clc
jmp
lock
add
les
push
push
nop
shlb
daa
inc
jecxz
add
out
ret
push
jmp
dec
outsl
add
mov
mov
in
outsl
jle
call
out
push
or
xor
jg
and
bound
adc
add
inc
sub
add
lock
dec
rcrb
test
lock
add
lock
jecxz
pop
mov
jns
insl
dec
mov
ja
clc
outsl
mov
gs
clc
sbb
stos
jbe
insb
scas
das
xchg
xchg
pushl
add
dec
xchg
inc
jbe
outsb
out
dec
dec
jbe
and
out
jb
jl
scas
push
jle
aas
mov
insb
lock
push
popf
insl
jmp
pop
imul
jne
jo
push
movsb
mov
adc
mov
dec
inc
addr16
pop
out
jl
push
in
scas
inc
dec
push
xchg
lods
cmp
push
imul
nop
cmpsl
jbe
jo
inc
call
inc
loop
arpl
or
and
mov
lods
lock
mov
push
pop
jbe
scas
jg
inc
push
mov
mov
cltd
outsl
fdiv
inc
popa
loope
ja
outsl
mov
pop
jge
dec
mov
imul
out
dec
imul
in
add
jle
in
loope
pop
scas
dec
out
inc
in
dec
data16
xorl
xchg
ret
cmp
rolb
lock
xchg
enter
adcl
and
insl
mov
call
stos
push
imul
es
dec
repz
imull
push
dec
cmp
xchg
imul
dec
dec
outsl
push
mov
mov
sub
mov
mov
dec
sbb
push
lods
out
xor
pop
push
cmp
call
sub
gs
and
lods
mov
in
dec
dec
pop
out
mov
cmp
xchg
pop
bound
insl
outsb
dec
mov
jnp
imul
mov
and
mov
dec
in
movsb
divl
inc
dec
pop
dec
lret
std
inc
mov
mov
outsl
dec
add
addb
mov
mov
mov
push
psrad
push
sbb
pusha
push
cwtl
sbb
test
push
call
fldcw
call
dec
cld
or
int
push
cld
testl
icebp
movsl
cld
pop
sub
and
loopne
sub
test
jne
in
fxrstor
push
ret
mov
mov
hlt
in
mov
dec
outsl
jo
mov
mov
call
pop
insl
insb
das
test
mov
in
repz
sub
push
pushf
mov
jne
fnstsw
inc
setg
and
inc
test
nop
jp
mov
data16
cs
sahf
pop
imul
pcmpgtb
lahf
adc
out
in
cltd
jae
lds
ret
jle
mov
outsl
adcb
out
das
mov
aad
mov
push
daa
out
lock
into
nop
scas
mov
insb
ret
mov
mov
jb
jae
mov
add
lock
arpl
out
test
cltd
aam
inc
stos
pop
pop
mov
cmpsl
jecxz
and
add
jns
and
dec
cld
dec
mov
fmuls
xchg
or
nop
push
or
insl
dec
sub
loopne
ljmp
mov
loope
xor
jb
subb
xorb
aas
scas
xchg
out
int
push
lea
in
inc
sahf
fdivrs
lahf
mov
jb
inc
imul
rorl
lar
push
aaa
xchg
mov
lock
mov
or
sub
pop
mov
sub
loop
lock
jns
pop
addr16
addr16
push
cmpsl
subb
nop
jge
icebp
xor
lahf
push
fs
lahf
push
mov
mov
inc
int
mov
add
push
ret
ss
jge
or
aam
in
cmp
mov
test
ror
movsl
in
push
cmc
fiaddl
push
out
dec
hlt
sahf
pop
dec
xchg
outsl
mov
out
out
cmpsl
mov
adc
outsb
data16
xchg
inc
inc
xchg
in
cmp
xor
daa
mov
xor
adc
pop
pop
push
iret
into
fisttpll
adc
push
cwtl
pop
pop
mov
aas
scas
pop
shlb
ffreep
mov
stos
mov
pusha
xchg
inc
leave
ret
lock
sarb
int
imul
pop
movsl
sbb
sti
out
mov
bnd
lahf
jbe
mov
aam
jb
cld
nop
lods
aam
aad
in
insb
mov
inc
lret
pop
movntq
imul
mov
lret
jmp
out
nop
out
pop
or
mov
aad
jno
mov
jo
sub
outsb
nop
mov
movsb
xchg
test
call
aas
mov
cmp
in
mov
shlb
ljmp
data16
push
out
jno
push
dec
fsub
outsb
imul
popa
scas
add
pop
add
push
sub
test
test
pop
js
cmp
pop
jmp
fyl2x
or
pop
std
adc
rol
pop
testb
push
dec
adc
mov
loop
xor
inc
sub
xchg
scas
lret
aad
push
in
pop
out
jae
icebp
or
dec
xchg
testl
jmp
mov
jae
int3
push
stos
push
out
xchg
in
in
popa
mov
or
sahf
mov
int
shrb
scas
ret
into
add
cmp
pop
or
inc
and
sahf
sbb
mov
push
pop
mov
lahf
bound
jae
rcrl
pop
sti
scas
push
jle
push
mov
jae
pop
pop
ljmp
and
and
xchg
icebp
mov
push
shr
ret
cmpsl
int
jne
adc
mov
dec
mov
daa
push
mov
outsb
mov
cmpsl
mov
mov
push
mov
in
mov
divb
jns
pusha
jbe
mov
dec
idivl
push
inc
jo
fwait
push
insb
loopne
loop
or
push
sub
ljmp
mov
out
inc
mov
jmp
subl
std
mulb
out
xchg
in
stos
add
shrb
ret
js
or
jecxz
sub
in
into
pop
sub
inc
mov
enter
imul
push
mov
das
pop
pushf
in
lret
imul
jns
pop
lahf
data16
mov
js
shl
leave
push
jae
ret
jns
or
lods
movsb
insl
dec
aaa
sar
sbb
jl
inc
aaa
pusha
ljmp
pusha
call
test
push
sbbb
xchg
aam
scas
sub
clc
daa
xchg
push
mov
push
add
pop
mov
and
cmpsb
sub
jmp
dec
arpl
out
pop
pop
cmp
inc
or
in
xor
mov
test
imull
xor
inc
xor
adc
scas
ljmp
mov
or
out
xor
or
pop
in
scas
cwtl
cmp
lods
loopne
scas
lods
stc
insb
pop
hlt
dec
outsl
xchg
test
mov
int
ret
mov
mov
outsl
pusha
push
ja
adc
imul
nop
dec
mov
mov
cmp
pop
jg
xchg
mov
insl
or
pop
repnz
xchg
aaa
sarb
dec
mov
scas
xchg
inc
fisubl
mov
push
sub
mov
ret
loopne
nop
sbb
sub
jl
mov
in
push
jo
outsb
loope
pop
nop
vmread
pop
push
sub
lock
test
push
test
out
sub
sar
pusha
lahf
out
jbe
mov
fwait
mov
sti
inc
adc
jb
rol
cwtl
jmp
fdivl
push
add
lods
cmpsl
mov
insb
inc
cmp
mov
dec
das
scas
loop
stos
lock
out
in
js
ja
dec
adc
ss
in
xor
jnp
daa
sbbb
outsl
mov
mov
sub
das
pushl
inc
nop
gs
in
sbb
nop
pop
push
dec
add
jno
jne
jnp,pn
ret
xchg
cmp
les
outsw
sub
pop
cmp
aaa
inc
nop
cwtl
dec
cmp
outsl
sbb
sti
inc
sti
xchg
jae
jg
or
inc
jno
loope
sbb
cmp
cmp
push
pop
shlb
adcb
and
or
jecxz
lods
loopne
push
xchg
nop
mov
sti
mov
mov
iret
cmp
in
push
std
jg
xor
sahf
adc
push
cwtl
clc
out
jmp
push
lahf
mov
push
adc
and
nop
or
dec
mov
stos
and
rcrb
inc
mov
jp
sub
neg
outsb
iret
outsb
pop
in
out
sbb
lea
scas
test
pop
jmp
jmp
inc
lahf
mov
scas
out
or
int
arpl
movsl
test
outsl
xor
inc
dec
pop
dec
dec
dec
popf
movd
mov
into
insb
insb
inc
xcrypt-ecb
cmpsl
dec
hlt
imul
sub
jbe
jmp
jmp
icebp
jae
pushf
xchg
push
dec
outsb
shr
dec
outsl
arpl
push
cmpsb
rorb
jne
dec
or
dec
pop
push
pop
lock
insb
nop
xchg
mul
in
jle
addr16
or
stos
or
in
loope
mov
xchg
les
xor
aas
rclb
sub
outsb
pop
xchg
aam
idivb
call
lahf
clc
add
mov
int3
inc
movsl
mov
and
fildll
lcallw
sub
in
fdivrs
xorb
leave
lldt
sub
out
mov
cmp
jmp
pop
in
std
mov
rcr
adcb
iret
jp
push
sub
add
mov
or
cwtl
jae
or
or
cltd
repnz
push
mov
dec
ret
insl
gs
push
pop
mov
cld
dec
clc
scas
mov
push
xchg
inc
aas
enter
in
push
lret
xor
sbb
xor
stos
jg
xchg
out
shlb
insb
jp
pushf
mov
xchg
nop
xor
add
inc
dec
aam
leave
minps
sti
dec
ljmp
repz
mov
ret
xchg
jno
pop
loop
adc
scas
pop
icebp
push
out
ja
push
arpl
mov
dec
push
js
mov
stc
cwtl
int
xchg
mov
rcrb
out
rorb
push
sahf
mov
loopne
loop
in
aaa
dec
nop
cwtl
sbb
ret
stos
test
adcl
pusha
repnz
sub
imul
leave
insl
call
dec
fldt
lret
es
jecxz
rol
fcoml
lods
stc
ds
xchg
int
out
jae
dec
ds
push
imulb
into
adc
pop
iret
nop
cmp
mov
xchg
fcmovnb
in
add
stos
call
dec
inc
jne
imul
xchg
lahf
and
lds
jle
inc
cmp
or
dec
and
jmp
outsl
and
mov
std
pop
mov
in
adc
pop
in
xchg
push
mov
mov
push
mov
push
sar
and
mov
clc
arpl
dec
sar
jbe
out
loop
lahf
mov
cmp
jae
repz
or
jg
jp
mov
mov
in
nop
sti
jmp
jge
jno
add
mov
outsb
addr16
inc
sti
and
cmc
sub
mov
dec
in
sahf
loopne
lahf
outsb
xor
push
mov
pop
icebp
call
outsl
ret
dec
lahf
pop
xor
mov
movsb
das
sub
mov
int3
test
mov
mov
mov
in
loopne
shlb
dec
fsubrl
jbe
mov
push
outsl
lahf
adc
shl
sar
dec
push
add
nop
pop
pusha
ja
inc
inc
push
fs
push
inc
popf
cld
subl
mov
nop
fadd
imul
scas
push
and
push
fbld
jecxz
addr16
dec
or
push
mov
jne
nop
xchg
push
cmp
push
inc
inc
imul
lahf
aad
xor
decb
pop
loop
cld
outsl
pop
jnp
push
inc
pushf
loope
popa
sahf
cli
or
add
inc
dec
sub
aas
arpl
fisubrs
test
sub
mov
push
and
pushf
imul
in
cs
jb
ret
dec
mov
scas
call
inc
mov
xchg
push
or
mov
cmp
dec
mov
push
xchg
jmp
or
iret
pop
pop
in
push
mov
mov
outsb
and
xchg
test
or
out
sub
pusha
daa
dec
out
jne
rcll
stos
clc
dec
rolb
iret
in
cmp
xchg
dec
sbb
loope
cld
mov
int3
mov
outsb
outsl
mov
xchg
push
stos
jge
pop
stc
es
xchg
sbb
jg
add
shll
vmovntpd
es
out
or
cmc
jmp
mov
shll
push
jae
xchg
xchg
push
sbb
popa
or
jg
out
mov
out
loopne
xor
and
lret
imul
je
jae
popa
mov
xchg
jl
xor
loop
call
jae
adc
loopne
loop
stos
push
jge
pop
ja
addr16
inc
dec
and
push
cwtl
pop
out
mov
or
inc
dec
fildll
xchg
jmp
adc
jmp
outsb
pusha
jbe
shrb
jae
or
test
jne
xchg
dec
outsb
int
sbb
push
repz
or
lock
shlb
push
adc
jp
and
xlat
push
int
mov
lcall
jge
mov
lock
cmp
sbb
add
out
iret
jae
dec
jge
push
xchg
push
adcb
mov
loopne
scas
in
fstpt
mov
push
pop
sbb
cmpsb
inc
jae
pop
pop
lock
insb
call
dec
out
js
jne
cmpsb
jg
mov
jmp
mov
sub
sahf
aaa
jl
out
pop
daa
scas
das
loop
insb
sub
jo
dec
mov
push
out
fstps
jo
xor
cld
xchg
leave
dec
mov
dec
push
test
pop
pop
jno
jg
jle
arpl
mov
fistpl
cmp
jg
cwtl
cmp
in
adc
dec
add
popa
stos
push
fdivrl
push
nop
xchg
jp
cs
loope
cmpsl
dec
scas
dec
shrl
pop
mov
xchg
xchg
outsl
add
jl
mov
mov
jmp
orb
push
out
jo
mov
mov
mov
sub
add
adc
add
cs
dec
lods
push
xchg
nop
mov
repz
jp
test
or
mov
std
fidivl
sbb
xor
cmpsb
out
jecxz
or
dec
jns
bound
or
rcrb
push
outsl
or
outsb
sub
mov
pop
jle
sbb
clc
jno
in
pop
mov
push
jo
xor
sub
sarb
int3
data16
xor
xlat
movsl
ja
insb
clc
inc
or
mov
aaa
pop
xor
pushf
leave
xor
or
outsl
jae
nop
or
dec
fs
out
mov
sarl
negl
mov
iret
jnp
jmp
nop
mov
jb
and
push
lret
pushf
outsl
dec
insb
rclb
gs
outsb
mov
adc
cmp
fs
jne
xor
aaa
cmc
repz
iret
popf
and
out
pop
push
shl
sysret
icebp
xor
xor
push
cwtl
call
movsl
cld
std
jno
fsubrl
and
lock
cld
in
mov
das
outsb
mov
jns
sahf
mov
hlt
sti
jge
xchg
mov
adc
jmp
adc
mov
mov
and
loopne
or
movsb
loop
divl
cs
int3
rcrb
fcomi
pop
jae
outsb
or
or
sti
jp
inc
and
mov
mov
pop
add
int3
mov
ret
in
xchg
mov
test
scas
loop
mov
xchg
scas
pusha
xchg
pop
cmp
aad
shlb
aaa
lods
jg
out
pop
fs
and
and
daa
jo
mov
cs
push
mov
jp
sub
lods
jl
stos
push
and
adc
and
nop
push
mov
pop
out
outsb
subl
push
mov
ja
sbb
ret
sub
sbb
xchg
sbb
mov
loop,pn
lahf
cs
call
or
lock
add
lea
shlb
mov
das
insb
sub
pause
loop
in
mov
or
mov
es
es
xor
sub
xor
movsl
imul
out
pop
push
push
and
jle
mov
clc
jl
pop
imul
xor
lods
enter
pusha
movsl
outsl
imul
andl
outsl
test
es
addr16
jns
js
pushf
push
sbbb
mov
add
pop
je
and
test
addr16
dec
xchg
fwait
scas
movsb
inc
scas
mov
xchg
inc
sahf
stos
xchg
int
add
stos
into
pop
sub
mov
jbe
bound
repz
mov
sbb
jo
out
mov
insb
in
loop
fimull
sub
in
or
movsl
adc
push
ret
ja
addr16
add
xchg
add
iret
lret
inc
repz
dec
cs
dec
jno
dec
fcomip
repnz
jmp
jne
js
ret
xlat
loop
dec
test
xchg
xchg
shll
adc
xchg
inc
test
cwtl
pop
inc
fadds
mov
std
sbb
loop
add
out
pusha
insb
cld
jp
ja
dec
add
cwtl
scas
imul
and
pushf
outsl
mov
inc
dec
xor
and
scas
jae
jnp
icebp
loopne
pusha
push
rorb
and
cmpsb
sub
das
push
push
xchg
movsl
dec
in
push
mov
push
add
jg
nop
pop
insb
imul
lcall
dec
leave
mov
movsb
pusha
or
or
jno
xchg
sti
dec
xchg
or
push
inc
sub
insl
mov
dec
lock
cmp
cltd
mov
inc
mov
daa
enter
ljmp
push
xchg
in
aam
sub
aaa
dec
push
rolb
or
mov
push
mov
int
std
out
ds
cbtw
push
mov
cmpb
stc
cmp
imul
scas
fisubrs
add
mov
testb
stos
adc
pop
cld
insb
xor
outsb
xor
lret
cmpb
xchg
test
push
lock
ds
pop
or
and
insb
jae
lock
mov
fcoms
andb
jne
jo
sti
and
addr16
add
insb
pop
xchg
shl
lea
or
out
cs
inc
inc
push
cmpsb
push
pop
jae
repz
shlb
nop
repnz
xchg
ss
dec
nop
jno
dec
or
jbe
pop
nop
sub
jbe
add
lock
push
mov
movsb
dec
cmp
loope
leave
icebp
les
fisubl
jnp
fmuls
fldl
cmp
and
popa
xor
sbbb
lcall
orb
pop
mov
or
pop
sub
push
or
adc
loope
push
push
jmp
mov
jo
xchg
xor
push
mov
mov
jae
xchg
or
mov
push
add
call
orb
sbb
jae
mov
xchg
fdivr
mov
inc
std
int
push
pshufw
push
adc
push
jae
mov
jne
jns
daa
pop
pop
push
cmp
jl
xchg
pushf
jae
out
in
ret
js
push
addr16
hlt
sbb
dec
mov
jns
roll
fdivs
js
cmp
movsl
cmp
pop
insb
js
fdivr
or
jle
int3
lds
push
xchg
add
or
leave
mov
and
mov
fs
int3
ret
xor
jo
dec
lret
sbbl
xchg
arpl
push
jno
ret
push
pop
js
dec
pop
int3
sub
fcmovnb
pop
iret
mov
psrad
inc
rolb
push
movsl
stos
xchg
jnp
mov
sbb
jle
pop
enter
inc
icebp
jne
aas
arpl
stos
push
jae
cmp
mov
lret
in
push
pop
insb
pop
enter
or
outsl
and
dec
outsb
out
mov
mov
hlt
mov
out
jbe
sub
adc
outsl
subl
leave
js
push
lahf
jno
push
sub
add
lahf
dec
sub
out
dec
jo
enter
mov
in
call
inc
push
cmpsb
out
js
xchg
mov
addb
add
adc
push
push
pop
loopne
pop
bound
mov
adc
push
mov
cld
cmp
mov
or
ret
jb
dec
push
stos
cmc
jl
adc
mov
int3
in
mov
mov
xlat
call
jno
mov
jbe
int
fiadds
add
mov
add
jae
xor
movsb
adc
mov
into
push
cwtl
outsb
inc
stos
gs
ret
cmp
mov
inc
icebp
cmp
fstpl
sbb
fwait
jo
jne
js
pop
push
mov
inc
xchg
int3
inc
jle
pop
jbe
mov
jmp
je
push
inc
jb
es
push
and
je
xchg
rorl
jb
shl
mov
outsb
clc
loope
das
sub
inc
in
idivb
cmc
jmp
popa
adc
and
outsl
lods
out
pop
jne
ret
enter
push
sbb
jl
inc
mov
xchg
sahf
dec
hlt
push
incb
mov
pop
andb
push
add
test
repz
jmp
xlat
mov
and
jns
lahf
or
bound
dec
fimuls
nop
jno
sub
push
test
data16
jae
mov
xchg
push
ljmp
push
sub
cwtl
gs
or
flds
test
push
add
and
lods
mov
xchg
nop
stos
mov
jmp
bound
push
or
outsl
outsb
push
pop
outsb
out
sbbb
cmpsl
clc
fdivs
fimull
jae
cmpsb
mov
jp
cmp
nop
pop
pop
lahf
dec
dec
push
cwtl
cs
jp
push
sub
cmp
xor
loopne
test
mov
and
scas
scas
inc
lods
add
addr16
cwtl
gs
push
js
ja
loop
icebp
xchg
shlb
xchg
inc
test
cltd
xor
xchg
mov
xor
jb
ret
push
or
mov
jbe
fs
jnp
jb
addr16
jg
in
sahf
sbb
lock
sub
xchg
dec
push
or
js
lods
in
cmc
rcrb
push
and
dec
xlat
add
dec
dec
xchg
push
mov
leave
testl
adc
sarb
jo
cs
ss
ret
inc
iret
xchg
xchg
insl
add
in
das
jmp
in
enter
xor
jmp
loopne
push
aas
loop
loopne
lea
and
push
xor
xchg
addr16
jg
xchg
scas
sub
pop
mov
imul
ja
cmp
daa
das
int3
insl
dec
rorl
ds
jl
xchg
lea
cmp
test
shr
push
jbe
cmpsb
inc
xchg
xor
adc
jo
outsb
in
lods
pop
mov
pop
dec
pop
lea
pop
add
test
call
push
sub
sbb
push
outsl
mov
mov
aam
imul
lock
jno
outsl
jle
int3
hlt
clc
xor
movsb
xlat
mov
jae
jno
or
fcoml
dec
mov
adc
shrl
and
and
dec
iret
das
or
in
leave
hlt
lret
push
outsl
data16
pop
enter
lock
jmp
dec
std
cmpb
xor
jne
push
add
les
or
dec
push
push
orb
out
scas
xchg
ret
push
cmp
jno
shlb
rolb
mov
jp
pop
int
pusha
and
xor
jg
inc
inc
aaa
cli
ja
scas
cmpsb
insb
outsb
mov
movsl
jnp
sub
outsb
movsb
pop
xchg
sub
adc
adc
cli
mov
in
loopne
add
pusha
imul
jo
out
loop
icebp
jae
or
into
outsb
sti
inc
pop
das
push
add
and
dec
sub
scas
lahf
lds
jbe
jo
dec
ss
loop,pn
int3
jae
test
je
je
inc
dec
mov
pop
out
jae
repnz
push
rcrb
pop
popa
fwait
out
pop
mov
xchg
push
dec
mov
into
inc
and
shrl
test
jg
loop
jb
int3
lock
ljmp
mov
pop
xchg
pop
arpl
mov
aad
cmpsb
je
imul
sbb
cmp
jl
lahf
or
outsl
mov
divl
jae
inc
in
loopne
push
fwait
add
insl
mov
repz
stos
pop
jle
dec
dec
outsl
push
icebp
and
into
jmp
add
or
sub
push
mov
jg
push
fadd
cwtl
mov
dec
insl
ja
pop
outsl
inc
ret
xchg
push
inc
rcr
inc
dec
pop
fadds
fmuls
lds
test
lock
jne
push
test
add
js
repnz
mov
mov
loop
call
cmc
inc
push
ret
cs
mov
jbe
in
out
jns
dec
and
jp
in
jae
addr16
aam
inc
in
xchg
mov
int3
jle
mov
lahf
jb
inc
int3
loopne
ret
out
aas
mov
call
mov
mov
push
xchg
xor
xchg
icebp
pop
cmp
or
mov
pop
jg
loop
push
stos
push
outsl
es
mov
test
sti
mov
fisttps
test
jae
addr16
in
pop
imul
in
aaa
shlb
out
add
mov
jnp
cmpsb
leave
push
cwtl
aaa
pop
push
jns
or
jl
in
ds
aas
scas
and
out
mov
icebp
ljmp
int
cmp
dec
out
out
pusha
scas
outsb
inc
imull
sahf
hlt
in
faddl
loop
pop
movsl
aam
inc
mov
loop
call
bound
cwtl
dec
gs
xchg
mov
in
mov
xchg
xchg
iret
push
leave
mov
jmp
dec
inc
into
dec
add
rcrl
sbb
addr16
xchg
rolb
or
mov
adc
cmpsb
leave
cmp
imul
daa
mov
das
in
xchg
test
or
push
sub
jp
ja
stos
popa
push
rclb
lods
push
push
push
sub
dec
lods
or
or
or
or
or
xchg
push
xchg
das
mov
inc
adc
aam
push
cmpsb
or
jae
jl
lds
stc
xchg
in
imul
in
or
shl
inc
call
ror
cmpsb
xchg
dec
sub
popl
mov
xchg
int
mov
pop
jne
loopne
xor
xchg
mov
popa
imul
lods
es
fwait
push
jle
jns
cld
popf
lret
inc
out
je
push
xor
pop
loope
movsb
scas
enter
scas
stos
xchg
stos
aam
insl
xchg
add
pushf
jmp
imul
movsb
in
dec
ja
push
jnp
mov
or
mov
ret
lods
pop
xchg
sbb
push
pop
outsl
sbb
out
enter
dec
outsb
daa
sub
xor
call
mov
xor
push
shll
mov
pop
rcrl
xor
cwtl
jle
test
push
push
scas
xchg
popa
and
cmp
xchg
xor
sub
adc
scas
int
or
pop
mov
inc
int
data16
pop
shl
xchg
cmpsl
cli
aaa
out
call
xor
arpl
rcrb
addr16
xchg
pop
and
jae
inc
cmp
lea
stos
insl
inc
sbb
data16
lahf
jmp
jmp
das
sub
mov
mov
push
ret
add
fsubrp
insb
fistl
xchg
mov
imul
nop
sub
mov
out
test
add
inc
mov
add
mov
bound
pop
xor
imul
push
fucomp
pop
in
cmpb
jg
das
imul
leave
xchg
sub
ja
in
imul
jbe
dec
mov
movsb
popa
in
out
stc
insl
subl
addr16
pop
shl
push
adc
pop
push
jns
out
out
and
in
das
insb
jno
add
pop
inc
xchg
fdivrl
inc
fs
jle
fs
pusha
repnz
sbb
int
push
leave
out
mov
and
out
xchg
imul
sub
cld
cltd
icebp
rorb
cmp
adc
in
mov
arpl
lock
int3
bound
js
inc
dec
ret
arpl
test
or
fcmovne
inc
push
int3
push
cmp
enter
cltd
cld
lcall
jge
addb
or
je
jbe
cs
xor
jae
mov
adc
lods
lock
ljmp
repz
pushf
imul
ret
mov
jne
es
je
inc
lahf
mov
shlb
stos
sub
jae
fcmovnbe
sub
mov
loop
dec
das
push
pop
cmp
out
ret
clc
jbe
loopne
shlb
pop
xlat
pushw
in
ret
sbb
andb
lahf
adc
iret
lret
nop
and
movsb
scas
and
and
call
sub
push
lods
shl
inc
push
pop
mov
dec
lock
jae
adc
out
inc
inc
jl
sub
int3
dec
add
test
jno
loope
outsb
jb
cs
push
data16
aam
gs
loope
out
xor
dec
pop
nop
in
stos
outsl
add
add
mov
imul
adc
push
in
pop
daa
gs
dec
addr16
mov
les
pop
scas
loope
out
movsl
out
addr16
stos
dec
push
outsb
je
in
test
scas
je
das
sub
pop
call
js
pop
pop
data16
bound
dec
xchg
inc
jns
xlat
jae
rcr
orb
sbb
pop
pop
fisttpl
jl
jb
cltd
xor
mov
int3
int3
es
out
fdivr
outsl
cmpsb
andl
scas
pop
js
ja
jno
jnp
lds
je
ljmp
clc
cmp
cmp
movsl
icebp
lcall
mov
sub
push
xchg
rolb
and
clc
adc
and
push
mov
xchg
enter
push
sbb
pop
das
xchg
jae
or
xchg
jmp
notb
ds
add
int
cmp
shll
xchg
outsb
add
mov
pop
sar
insb
lods
inc
jl
dec
push
mov
test
sarb
push
scas
mov
mov
xchg
push
test
pop
push
movsl
orb
testl
cmpsb
and
ljmp
imul
ljmp
inc
nop
sub
cmp
or
scas
test
shrb
jle
sub
movsl
cmp
sbbb
push
inc
dec
call
in
inc
clc
addb
icebp
jp
dec
lods
dec
push
loope
js
outsl
push
aam
aaa
aaa
or
jne
xchg
pop
push
or
push
add
clc
lahf
inc
pop
and
inc
push
mov
ss
sbb
lret
hlt
lahf
es
sub
imul
cwtl
lret
pop
or
dec
repnz
call
or
outsb
int
out
outsl
je
iret
outsb
lret
or
lcall
xchg
addr16
lock
nop
daa
cwtl
xlat
mov
mov
jne
xchg
shr
mov
test
mov
or
push
ret
out
adc
inc
pusha
pop
mov
cmc
mov
jl
cld
dec
push
out
out
mov
out
dec
sbb
js
icebp
cmpsl
xchg
mov
imul
push
nop
insb
dec
push
ret
int
inc
repz
in
idivl
push
stos
jmp
jle
xchg
outsl
inc
push
jne
cmp
lahf
int
std
insl
mov
insb
loop
ss
inc
xchg
sub
popa
repz
pop
adc
movb
sahf
gs
push
je
ret
cmp
jbe
nop
push
repnz
cmp
lahf
pushf
mov
add
fildll
jno
pop
jmp
mov
rorb
outsb
pusha
xchg
flds
das
orb
loopne
mov
inc
xchg
in
adc
jle
mov
insl
jge
fisttpll
mov
cmpb
sbb
imul
call
mov
hlt
xor
andl
pop
stc
lods
push
push
out
test
and
jle
and
add
sbb
cmp
push
mov
mov
or
xchg
sar
dec
lock
mov
xchg
push
dec
mov
aam
mov
fdivl
sti
bound
mov
mov
loope
jge
in
shrl
mov
lods
dec
push
mov
lock
push
mov
lock
jnp
mov
imul
jns
add
cmpsb
mov
and
das
lahf
scas
cmpsb
sahf
movsb
nop
pop
push
shll
adc
and
das
push
mov
ret
gs
jne
ljmp
or
fwait
out
or
cltd
nop
push
or
cld
call
cmc
jo
jmp
push
cmpsl
popa
lea
xor
dec
fldt
xchg
cmp
pushf
call
std
aas
add
cwtl
mov
jle
fst
push
sbb
jle
mov
sbb
mov
int
jae
dec
mov
rcr
cmpsl
pusha
xchg
sbb
icebp
aaa
stc
mov
imul
mov
cmp
push
xor
dec
jae
jp
mov
cmpsl
je
ret
ror
mov
pushf
mov
hlt
and
push
call
jae
orl
testl
in
enter
xor
or
jge
data16
mov
aaa
notb
cmp
pop
cmp
inc
cmpsb
loopne
pop
sub
addb
adc
bound
pop
lds
jg
jg
push
clc
xor
mov
aad
xchg
int3
insb
ljmp
inc
sar
pop
clc
and
stc
push
dec
fstpt
out
movsl
js
pop
mov
fbstp
sbb
enter
and
sub
clc
nop
pop
sub
imul
out
lock
jns
jns
cmpsl
test
sar
push
jae
imul
cmp
loopne
test
ss
xchg
or
cld
int
inc
lds
outsb
add
jle
lea
xchg
cld
insb
dec
add
iret
daa
cs
mov
test
addr16
ror
lods
ja
pop
inc
repnz
sti
aad
dec
mov
jae
cli
shr
mov
xor
ss
add
dec
pop
xor
in
sbb
adc
outsb
inc
nop
test
pop
adc
roll
in
int
gs
mov
loopne
mov
jecxz
lods
ja
push
ljmp
pop
das
or
int3
enter
int
sub
insl
dec
imul
out
pop
push
loop
dec
aaa
jae
ret
orb
shl
mov
mov
inc
jl
cmp
sbb
fisttps
nop
mov
outsl
pop
jae
pop
jmp
loope
inc
xchg
in
rolb
mov
loope
test
jb
inc
xchg
pop
and
jno
jle
push
or
dec
mov
decb
jb
insb
inc
lods
mov
xor
push
sub
out
pusha
or
and
push
lea
stos
cld
rcrl
mov
mov
lock
pop
push
jae
shl
faddp
fisttpll
push
arpl
xor
ljmp
dec
dec
dec
clc
cmp
fxtract
dec
mov
xchg
in
ret
mov
mov
test
sahf
inc
xchg
lret
test
out
jmp
sub
inc
lds
and
pusha
hlt
adc
sub
dec
out
xor
inc
clc
mov
scas
out
jle
fisubrl
cwtl
lods
xchg
inc
or
cmc
mov
rorb
lds
mov
xor
ja
dec
xchg
or
sar
sub
jmp
insl
mov
mov
in
in
jmp
dec
movsb
in
lock
fildll
loop
cmc
int
int
sub
push
push
ss
cltd
out
int3
and
int3
adc
mov
fmull
lock
jmp
push
xchg
jle
pop
and
out
pop
in
pop
iret
pop
mov
cs
pop
push
ss
dec
mov
push
repnz
jno
enter
xchg
sub
adc
stos
hlt
pop
sub
mov
push
out
decl
adc
jns
xchg
out
jbe
lods
sahf
or
enter
insb
ja
test
test
jbe
or
fidivrl
call
and
dec
or
jp
jae
push
popf
imul
pop
rep
int3
call
scas
and
movsl
aaa
imul
lahf
lods
push
sbb
lock
es
xor
mov
pusha
out
loopne
int
jns
mov
xchg
add
mov
and
sti
popa
dec
mov
xchg
mov
test
dec
inc
mov
mov
lahf
cmpb
jbe
dec
outsb
subl
lods
frstor
jne
imul
insb
pop
call
add
imul
cmp
lahf
fdivl
outsl
pop
or
fsubs
lret
lods
imul
add
mov
lahf
nop
dec
lcall
xchg
dec
lret
shrl
in
popw
call
outsb
or
in
jle
sahf
cs
int3
out
iret
push
add
pminsw
in
xlat
daa
adc
jo
dec
push
outsl
jle
ljmp
inc
shrb
pop
xor
push
es
push
push
addr16
adcb
dec
push
scas
jno
inc
scas
iret
push
scas
nop
mov
inc
scas
dec
adc
jg
lock
incl
in
out
push
sub
jb
mov
out
xchg
rorl
adc
mov
or
outsb
add
fnstenv
lret
dec
movntq
out
pop
dec
mov
inc
scas
or
mov
mov
inc
subb
push
subl
daa
dec
push
das
pushf
nop
push
loopne
stos
les
les
jae
add
cmp
jecxz
out
mov
mov
inc
jg
in
imul
mov
jae
adc
jmp
nop
mov
enter
xor
xchg
mov
cmpsb
inc
out
dec
outsb
ss
and
dec
mov
int
outsl
and
insb
push
test
nop
or
or
insl
test
add
pop
push
push
imul
test
and
and
out
mov
mov
push
add
mov
ficoms
data16
scas
mov
testb
mov
int3
jle
pop
pusha
adc
mov
imul
push
pop
in
cmp
or
cmp
test
daa
jne
push
mov
cmc
es
cwtl
clc
mov
inc
shl
mul
movsl
in
jp
dec
push
lret
sbb
adc
jbe
pop
ficompl
in
out
push
sarb
cmp
mov
sbb
out
jecxz
nop
insl
dec
push
ret
mov
ja
xchg
pushf
movd
adc
xchg
lea
push
ljmp
mov
pop
or
dec
push
je
mov
xor
mov
xor
rorb
dec
jb
mov
adc
jg
daa
inc
clc
adc
mov
inc
clc
repz
push
jb
iret
leave
mov
cmp
jae
pop
imul
mov
and
sub
gs
mov
lret
jp
iret
push
or
xchg
rorb
mov
lcall
lahf
sub
jae
mov
gs
add
push
cmp
mov
in
mov
sbb
inc
mov
mov
jmp
xor
in
fs
jno
adc
rcrl
mov
imul
mov
pop
or
dec
push
jo
mov
ljmp
into
cmp
and
xchg
push
sub
std
jns
dec
out
push
cld
pop
leave
idiv
out
nop
xor
mov
pusha
xchg
outsl
xor
das
enter
and
pushf
dec
xor
lea
inc
out
mov
mov
stos
ljmp
xchg
in
enter
cmp
push
into
outsl
or
adc
jno
dec
scas
sbb
test
and
jle
mov
add
mov
inc
pusha
outsl
cs
aas
femms
mov
std
and
push
sub
adc
sub
xor
cmpsb
stos
movsl
and
out
imul
addr16
ljmp
mov
xchg
sbb
popa
je
cli
fsubl
jge
test
das
loope
sub
lods
outsl
rorl
rorb
das
lahf
dec
push
xor
cmpsl
inc
in
cmp
je
lahf
ret
nop
dec
dec
pop
imul
add
push
stos
jae
das
jbe
xchg
jmp
xor
or
hlt
mov
inc
mov
jl
pop
push
pusha
mov
subb
ret
pop
lds
jb
int
dec
dec
and
sbb
or
nop
mov
push
cld
pusha
mov
hlt
repz
cmp
xchg
out
and
repz
mov
fisubrs
rorl
es
push
scas
sub
scas
insb
test
jae
sbb
push
sub
cmpsl
xchg
add
adc
lahf
adc
pop
mov
jle
mov
jb
jl
jne
mov
cwtl
clc
pop
mov
jo
shll
data16
outsl
loope
jle
addr16
dec
dec
loope
pop
testb
outsl
mov
test
mov
xchg
gs
push
ret
xchg
pop
insl
xchg
aam
andb
jg
mov
sti
cwtl
mov
jno
or
in
out
add
in
pcmpeqb
cmp
cltd
addr16
insb
push
incb
cmp
hlt
insl
mov
out
outsb
xchg
data16
pop
mov
mov
movsl
movsb
test
daa
mov
mov
push
push
pop
add
pusha
push
mov
das
fimuls
in
clc
pop
jae
pop
jb
pop
or
ret
mov
outsl
sub
lahf
push
clc
mov
jl
mov
fldcw
adc
out
mov
stos
addr16
enter
push
clc
sub
in
outsl
aaa
dec
scas
add
addb
sbb
je
adc
add
xorb
bound
mov
jno
fldcw
lock
or
rclb
push
out
dec
and
dec
scas
in
fimuls
fstpt
add
inc
xchg
jno
lret
into
push
jb
lods
adcb
int
imul
popa
push
mov
inc
push
mov
cmpsb
subb
rcll
fbld
cmpsb
inc
mov
jl
mov
pop
and
mov
fisttps
arpl
sbb
ja
out
insl
add
jmp
mov
jbe
xchg
test
mov
sbb
push
sbb
push
add
out
mov
inc
out
inc
addr16
daa
int3
bound
std
sub
arpl
jmp
stos
mov
push
fpatan
int3
insl
xchg
push
mov
aaa
add
rorb
cwtl
addr16
pop
mov
cmp
mov
push
mov
shlb
lds
and
aaa
sets
jecxz
stos
sub
in
stos
stc
sub
and
add
add
xor
es
dec
out
out
je
inc
cli
in
xchg
mov
movsl
mov
scas
aaa
enter
push
arpl
jae
loopne
lds
sub
xorb
stc
cmpsb
sbb
sub
mov
in
mov
sbb
jmp
cmpsb
jnp
xchg
pop
mov
lret
in
pop
jnp
shr
movsb
loopne
jle
jae
in
add
sub
int
dec
shrl
stos
xchg
insb
aas
arpl
push
jg
push
idivb
loopne
lock
outsl
mov
jmp
ljmp
rcrb
adcb
inc
dec
out
movl
sarb
xchg
nop
nop
mov
sar
sub
data16
rorb
dec
inc
movb
push
rcll
cmp
daa
sub
and
test
cmp
mov
add
ret
scas
pop
jecxz
imul
dec
mov
push
mov
jae
mul
dec
mov
add
insl
out
mov
cld
insl
fildll
xchg
outsl
and
dec
jne
mov
scas
in
rorb
jb
inc
push
lock
aaa
and
and
add
sbb
arpl
cmpsb
or
icebp
and
ljmp
mov
and
stc
out
mov
jnp
out
jns
insl
into
push
push
push
mov
jmp
scas
imul
mov
xchg
aam
enter
or
imul
in
pop
push
imulb
xor
scas
data16
lea
out
add
fcoms
mov
imul
jmp
les
out
stc
pushl
outsb
mov
sub
dec
jle
test
lock
lds
lods
mov
fldcw
push
fs
cwtl
aad
pop
fldl
pop
sub
cmp
jecxz
pushf
mov
jne
inc
mov
pop
int3
outsb
jno
cmp
fldcw
jae
mov
xchg
in
cmp
icebp
mov
dec
dec
ret
and
dec
xchg
or
call
lahf
outsb
lock
icebp
ret
test
lret
inc
mov
xchg
lods
adc
and
bound
addr16
es
mov
lods
lock
outsl
push
nop
push
ret
addl
ret
loop
scas
push
mulb
cli
movsl
push
bound
inc
daa
outsb
js
or
jmp
jecxz
pop
mov
add
mov
xor
and
icebp
xchg
sub
mov
dec
dec
xchg
movsb
flds
icebp
out
cmpsb
push
data16
mov
cmp
jne
xor
inc
mov
dec
sarb
push
out
xchg
outsb
out
add
jno
or
outsb
sub
popf
adc
mov
adc
aaa
icebp
or
or
insb
and
in
jno
jo
push
jp
push
mov
outsl
cmpsb
popa
adcl
xchg
shlb
icebp
push
mov
cmp
jno
sbb
cmpsl
dec
mov
das
jg
push
xchg
inc
pusha
xor
test
and
mov
pop
jo
pop
xchg
out
adcb
xchg
or
sbb
in
push
cmp
mov
movsb
xchg
test
popa
movsb
add
js
dec
lods
push
das
test
rcrb
mov
lahf
push
es
push
push
loopne
pop
dec
int
enter
outsb
and
daa
mov
scas
mov
mov
cmc
ja
call
aad
loopne
push
jb
dec
push
and
icebp
pop
jno
dec
push
sarb
repnz
mov
xor
loop
jl
outsl
push
or
or
lods
insb
loop
or
insb
hlt
cmpb
lods
push
loopne
mov
sub
xor
pop
push
das
push
mov
jecxz
and
mov
dec
popa
push
mov
test
pop
fldl
shlb
mov
scas
mov
pop
mov
inc
sahf
pop
pop
lods
mov
add
push
or
jbe
pushf
mov
cmp
ret
ret
and
in
mov
cli
fstpl
push
inc
mov
dec
iret
xchg
movsb
gs
outsb
data16
add
imul
mov
mov
je
icebp
xor
inc
aam
cmc
jle
std
jge
mov
int3
and
xchg
addb
aas
movsl
sarl
iret
out
lahf
jbe
imul
aaa
sbb
enter
dec
stos
mov
pusha
or
out
pop
xchg
jne
xchg
sarl
jno
test
mov
out
pusha
inc
fwait
mov
xchg
mov
imul
or
imul
aam
add
push
test
test
dec
jb
sti
adc
out
or
mov
xor
cmp
dec
jl
movsl
in
dec
icebp
movsl
pushf
and
leave
mov
shrl
test
insb
rorb
aad
adc
into
dec
adc
scas
cmpsb
js
xor
jbe
lret
out
dec
push
mulb
mov
filds
or
mov
jge
int3
pop
mov
outsb
cmp
push
stc
ds
fsub
loop
lods
test
ss
jp
jb
mov
outsl
test
jmp
push
cld
out
dec
mov
es
sar
cltd
push
testb
dec
in
mov
ja
pop
adc
std
cmp
dec
jp
scas
jno
insb
mov
lock
test
shr
gs
xor
mov
sti
xchg
xor
fiadds
stc
popf
iret
xlat
push
xor
daa
jp
mov
dec
jae
add
and
outsb
movsl
cmp
imul
or
shl
lret
jae
cmp
insb
or
jo
mov
push
mov
xchg
insb
out
jae
pop
scas
in
arpl
into
push
xchg
push
mov
lods
loopne
ficoml
mov
aas
das
push
outsl
outsb
inc
sahf
pushf
leave
inc
mov
pop
mov
xor
int3
add
cmp
mov
je
mov
and
mov
xchg
pop
das
sahf
aaa
mov
into
scas
xchg
dec
sub
jecxz
xor
js
sub
mov
push
ret
lahf
into
jmp
add
inc
loopne
sub
push
cwtl
pop
mov
in
adcl
jecxz
xchg
pushf
stos
lret
shl
movsl
inc
leave
arpl
in
rcrb
jp
dec
cli
out
les
dec
or
aam
and
jmp
push
rolb
xchg
jecxz
sub
out
mov
lock
mov
lret
mov
arpl
mov
stc
jl
out
jb
push
das
xchg
sbb
inc
lock
repnz
adc
addr16
xor
adc
outsb
cmpsb
sub
out
lods
nop
js
lahf
sub
pop
cs
mov
popf
das
out
mov
fs
ja
mov
xor
push
cwtl
pop
cli
dec
pop
hlt
loop
mov
cmp
jbe
jne
addr16
mov
lea
nop
mov
dec
mov
scas
lock
xchg
jecxz
pop
out
out
outsl
sub
inc
scas
push
dec
jnp
mov
dec
sub
addl
daa
cmp
addb
test
inc
push
jecxz
sbb
addr16
nop
popl
inc
loope
mov
les
xchg
dec
adc
cmp
mov
fadd
in
cs
andb
or
movsb
lcall
loop
syscall
mov
rcl
add
sbb
push
out
adc
inc
call
push
test
nop
mov
aad
insb
outsl
sub
mov
pusha
decl
bound
and
sbb
test
lods
stos
outsb
xchg
mov
sub
pop
push
movsl
scas
inc
in
outsb
bound
out
sub
fsubrl
lods
or
nop
jae
xor
loopne
leave
push
cmpsl
sbb
jbe
rcll
push
fs
jns
popa
scas
data16
scas
outsl
gs
dec
lea
pop
je
outsb
pusha
lds
imul
int3
jmp
mov
push
dec
pop
cmp
insl
mov
mov
imulb
test
daa
pop
insb
mov
pop
pop
dec
mov
fs
xchg
cld
int3
arpl
adc
dec
popfw
scas
lea
imul
outsb
jnp
jge
sbb
jg
cmp
sbb
or
int
dec
popa
sbb
or
test
outsb
xchg
cmpsb
dec
aad
mov
test
hlt
out
dec
inc
cld
or
arpl
out
push
and
mov
insl
pop
dec
adc
xrelease
test
mov
dec
mov
mov
inc
push
int3
outsb
mov
jne
decl
fildll
jl
sbb
xchg
js
outsb
add
arpl
pushl
mov
lods
nop
mov
insl
mov
pop
imul
dec
outsw
mov
loopne
dec
mov
outsl
cltd
jecxz
jl
fwait
jge
push
dec
dec
xchg
mov
cmp
imul
mov
dec
mov
ljmp
cwtl
stos
into
imul
fsubrs
aas
or
push
lahf
pop
das
adc
push
popa
sub
stos
inc
outsl
js
mov
dec
sub
rcrb
mov
idiv
jne
test
bound
movsl
cmc
ss
dec
lods
lea
mov
sub
pop
lods
mov
dec
xchg
mov
xor
fucomi
jle
pop
shrb
pop
push
test
push
dec
insb
leave
adc
pop
sbb
adc
pop
addr16
add
adc
xchg
outsl
testl
dec
jbe
sub
shrb
insl
test
dec
in
dec
adc
jl
subb
data16
dec
sbb
push
mov
dec
jns
in
push
dec
fildl
outsl
shr
add
jp
pop
jge
mov
insl
imul
insb
scas
cli
jp,pt
or
inc
outsl
push
inc
dec
add
xchg
mov
sbb
dec
popf
in
scas
loop
popl
push
mov
pop
jo
outsb
cltd
ss
cld
jg
add
lods
loopne
push
scas
sbb
orl
stos
data16
jl
clc
enter
push
out
jg
dec
inc
push
addr16
dec
sub
leave
pop
and
jl
add
jp
fsts
ja
sbb
dec
add
dec
pop
les
bound
jnp
dec
add
push
fcoms
aaa
sub
pop
jno
add
sub
dec
push
jnp
iret
pop
cmp
mov
jbe
ret
dec
or
js
bound
push
stos
lret
add
jno
bound
mov
and
scas
movsb
test
divl
add
jp
popa
loopne
stc
dec
jb
push
inc
outsb
inc
fdivl
xor
jne
iret
pop
jb
sub
je
dec
jle
adc
add
arpl
orb
pop
push
daa
insb
outsl
cli
sub
sub
xlat
mov
out
cmp
dec
imul
cmc
cs
shlb
mov
ja
movsl
push
lods
loopne
out
scas
sbb
outsb
scas
jmp
jnp
call
rorl
add
push
mov
sbb
jo
push
data16
sub
and
xor
addr16
ss
cs
cmp
mov
inc
push
sub
jbe
hlt
dec
in
aas
mov
insb
movsb
mov
comiss
out
jns
out
sbb
cmp
push
jnp
add
lock
and
mov
fs
adc
ja
stos
out
lds
mov
add
loope
jg
gs
jns
popa
dec
cmpsl
arpl
adc
push
mov
xor
dec
and
xor
mov
xchg
outsb
aas
insl
imull
orb
iret
push
imul
sub
push
mov
imull
dec
xchg
mov
pop
stc
xchg
xor
call
insb
stos
inc
mov
stos
jle
add
into
xchg
test
dec
sub
lods
outsb
outsl
ja
dec
and
cmpsb
out
jns
out
movsb
jge
les
ss
shlb
pop
dec
jnp
sbb
jl
jnp
test
dec
gs
or
les
je
xchg
mov
out
outsb
dec
adc
call
out
inc
and
sub
dec
stos
notl
pop
fmul
insb
insb
push
xchg
mov
cmp
aam
cld
outsb
or
sub
sahf
and
mov
inc
data16
outsl
sub
add
scas
mov
xor
mov
or
jmp
in
jnp
ret
or
andw
mov
push
sbb
cmc
int3
xor
dec
mov
cmp
or
or
addr16
and
sub
fs
stc
orl
and
insb
ss
sub
je
mov
and
jl
xor
outsl
in
movsb
or
ljmp
lods
imul
dec
pusha
ljmp
lcall
xor
out
imul
es
dec
repnz
push
adc
arpl
mov
sahf
stc
mov
arpl
cmp
sarl
sub
pop
and
outsb
test
jge
addb
ss
orl
fldt
sbb
sub
insb
push
ret
insb
daa
cli
test
jmp
mov
mov
and
insl
add
out
sti
dec
mov
stc
outsb
mov
stc
mov
int3
jge
pop
push
push
shrb
push
je
adc
mov
inc
int3
outsb
lret
inc
pop
jbe
push
mov
movsb
cmovle
jl
mov
fists
lods
outsb
mov
dec
outsb
xor
imul
bound
mov
jns
mov
and
jbe
push
inc
push
mov
sbb
push
xchg
sub
mov
mov
imul
inc
stos
push
pop
inc
mov
jp
cmp
sbb
dec
loopne
xchg
jnp
outsl
sub
insb
insl
ja
popf
outsb
sub
movsl
lds
orb
shll
data16
in
dec
adc
dec
ret
subb
push
push
dec
int3
cmp
imul
pop
pop
xchg
pop
dec
lcall
orb
imul
mov
pop
xor
daa
cmp
roll
sub
insb
fdivrs
loopne
out
insb
push
lods
outsb
adc
add
cmp
dec
stos
adc
dec
xor
dec
sub
insb
je
sub
js
pushf
mov
inc
and
xlat
out
popa
cmpsl
out
push
fcoml
sub
jg
dec
insb
jle
fdivrs
imull
sub
or
push
sbb
mov
mov
mov
cmpsl
imul
pop
cmp
mov
loopne
aas
in
inc
mov
aam
movsb
cs
inc
push
mov
sbb
push
jl
inc
jle
leave
mov
push
inc
push
icebp
loope
pop
dec
cli
outsl
pusha
ss
mov
mov
jp
lods
mov
cmpsl
jnp
adc
fcmovne
add
hlt
inc
mov
outsl
xor
adc
test
movsl
imul
outsb
fstpl
rcll
push
and
pop
inc
jae
xor
jae
mov
outsl
mov
int3
dec
jb
stos
ja
icebp
sbb
pop
scas
jae
cmp
adc
dec
outsb
pop
out
lods
insl
call
scas
imul
clc
add
dec
rolb
push
test
aaa
ret
mov
ja
add
out
push
push
adcl
mov
in
lea
and
fwait
call
cwtl
nopl
out
outsl
add
push
insl
mov
push
outsl
sbb
loop
lods
ret
pslld
xor
lahf
lahf
das
popa
cli
mov
out
rclb
lods
push
or
in
call
in
call
pop
and
addr16
mov
or
inc
add
test
cwtl
fisubrl
add
out
out
add
out
mov
cmpsb
push
ret
pop
dec
and
add
mov
nop
dec
push
cmpsb
out
mov
mov
adc
inc
es
stos
inc
jno
and
mov
jns
outsb
aaa
clc
pop
scas
popa
adc
push
loope
jb
ds
dec
loope
push
inc
jb
shlb
xchg
ds
repnz
pop
xor
hlt
jno
push
dec
mov
xchg
ds
icebp
mov
pop
inc
adc
pop
je
push
hlt
mov
xchg
dec
hlt
in
aam
pop
xor
hlt
mov
xchg
dec
repz
sarl
pop
xor
hlt
mov
xchg
dec
imul
ds
xor
ja
hlt
mov
xchg
dec
cmc
in
aad
pop
xor
adc
js
pop
hlt
mov
in
fdivrs
pop
aaa
mov
pop
ja
push
hlt
mov
xchg
dec
imul
xlat
ds
mov
pop
jp
pop
hlt
mov
in
fidivrl
pop
cmp
hlt
mov
in
fnstcw
pop
cmp
hlt
mov
in
fdivrl
pop
cmp
hlt
mov
in
fstpt
pop
cmp
mov
imul
aas
repz
insl
and
and
jae
adc
out
imul
rep
cmp
test
jo
popa
test
inc
add
and
ljmp
movsb
add
and
and
cs
cmpsb
bound
fdivrs
and
sbb
loop
and
les
cmp
out
into
repnz
repnz
out
iret
fsts
pop
into
jns
loope
jae
mov
pop
enter
adc
scas
jmp
xor
cld
bound
mov
sub
shl
push
outsb
fwait
cs
jns
in
mov
jb
enter
and
add
fldenv
cli
adc
cmpsb
outsl
inc
and
les
test
outsl
push
and
jecxz
add
loop
arpl
repz
push
lods
out
repz
sbb
jle
sbb
js
in
clc
sub
sub
dec
jo
in
bound
add
adc
aam
in
fidivrs
cli
outsl
mov
inc
jcxz
ja
push
ja
shlb
jle
jle
add
pop
jg
addr16
fs
data16
fxam
pop
loope
sbb
daa
and
dec
push
in
jne
pop
iret
enter
mov
ljmp
push
outsb
enter
orb
hlt
ds
stc
and
ja
add
sub
inc
sbb
jle
andl
enter
sbbl
jle
shlb
cld
rolb
gs
fnsave
adc
icebp
and
ja
add
mov
mov
mov
mov
ret
sub
fchs
jle
and
sti
inc
and
in
out
add
push
mov
outsb
fsubp
gs
int
call
and
frstor
pusha
mov
nop
sub
ljmp
xchg
outsl
aad
pop
daa
ret
repnz
jnp
mov
icebp
xor
sub
in
dec
int3
insb
loopne
jo
dec
call
insl
jne
mov
shlb
inc
in
scas
std
dec
xchg
ret
jo
mov
mov
outsl
test
inc
push
insl
mov
xchg
es
pop
adc
add
pop
inc
into
test
inc
in
lret
pop
enter
clc
jo
ljmp
push
int
out
std
adc
je
dec
leave
or
loop
jmp
je
dec
jle
je
insb
push
dec
out
adc
clc
stc
push
jo
out
ret
or
cmpsb
adc
pop
sbb
out
sub
add
enter
xor
and
mov
pop
mov
and
xchg
fiadds
mov
push
jne
dec
xchg
mov
cld
jae
jmp
sub
mov
or
adc
ss
in
inc
pop
adc
pop
xchg
aad
enter
jne
adcb
lock
outsl
mov
mov
inc
xchg
xchg
adc
out
jns
mov
or
dec
out
pop
outsb
mov
scas
add
mov
pop
pop
scas
pop
test
aas
popl
out
insl
data16
jae
xor
call
xchg
js
or
mov
mov
lcall
stos
ret
js
jmp
mov
in
movsl
outsl
lock
daa
mov
fiadds
sbbb
push
and
xchg
cmp
daa
and
sahf
push
pop
aad
mov
pop
mov
insb
ljmp
pcmpgtw
repz
jecxz
mov
sbb
stos
mov
mov
scas
xlat
or
fistpll
stc
insb
adc
xchg
loop
mov
pop
das
adc
inc
out
xlat
dec
pushf
or
lret
pop
pop
out
jae
sub
xchg
sbbl
lock
sub
jne
lret
jbe
mov
test
test
jae
cmp
sbb
scas
jg
inc
sub
xchg
cltd
das
dec
dec
push
fldlg2
sub
sbb
outsb
mov
inc
daa
add
jle,pt
mov
in
imul
jle
ja
pop
push
sbb
enter
push
adc
jmp
rcr
lods
scas
adc
insl
lret
lahf
mov
mov
jae
fsubs
movsb
mov
out
jo,pn
and
push
sub
jae
jns
push
stos
or
mov
into
out
test
jb
mov
insl
add
mov
sbb
lods
mov
out
inc
addb
shrb
mov
jns
mov
repz
mov
and
mull
das
dec
pop
addr16
stos
mov
repz
inc
cs
adc
jno
es
cmp
cmpsb
and
dec
cld
mov
push
nop
outsb
movq
inc
movsl
dec
mov
outsb
push
push
jp
jae
xchg
push
nop
jg
stos
cmpsl
ret
ret
and
outsb
insl
dec
push
cmpsb
bound
mov
gs
push
cmp
stos
and
jbe
push
push
loope
cmp
loop
and
jge
pop
je
adc
in
mov
in
scas
jae
sub
and
lret
es
lock
and
pusha
out
scas
pop
int
jae
jg
test
movsb
and
adc
shlb
jecxz
loop
pop
movsl
jne
xor
inc
pusha
xchg
mov
imul
and
fnstenv
xor
push
mov
jmp
sub
popf
js
adcb
mov
lock
cwtl
loop
and
js
xchg
insb
adc
xchg
outsl
adc
adc
insb
data16
enter
inc
mov
sbb
xchg
insl
mov
mov
dec
jmp
pop
dec
add
imul
repnz
ret
jge
fmul
add
add
outsl
shl
pop
add
adc
mov
mov
movsb
out
xorl
xchg
cmpsl
dec
mov
movsl
and
and
in
out
jg
das
add
jns
repz
lcall
pop
out
push
push
push
jl
call
scas
dec
insb
or
imul
int3
mov
jmp
pop
push
sbb
pop
dec
cmp
outsb
or
mov
mov
out
imul
ficoml
data16
adc
cld
outsl
jge
test
dec
testb
jno
ja
sbb
xor
xchg
mov
rorb
in
xor
aaa
enter
shl
xor
insb
daa
jns
sbb
jae
inc
cmc
cltd
daa
das
leave
mov
cmpsl
icebp
mov
xchg
mov
sbb
pop
rcr
mov
into
int3
mov
push
dec
xchg
ret
jb
int
int3
and
ficoms
adc
sahf
jo
sub
xchg
dec
out
mov
out
shlb
nop
ss
and
mov
nop
xchg
js
and
ja
inc
push
scas
push
out
mov
lret
dec
sarb
jmp
jae
add
stc
xchg
sbb
aaa
jmp
mov
cli
adcb
dec
mov
loopne
addb
fsubrp
and
out
mov
inc
in
movsb
jno
mov
cltd
xchg
pop
xor
add
pusha
mov
push
jle
shrl
iret
addl
adc
or
pop
loopne
mov
call
jns
adc
ja
pop
ljmp
in
js
imul
mov
enter
or
jbe
jae
adc
pop
inc
dec
icebp
lret
mov
repz
loopne
dec
repnz
dec
cs
fisubrl
fidivl
fldt
sub
mov
gs
das
icebp
fisubl
outsl
and
js
inc
bswap
lahf
pusha
pusha
clc
cli
loope
inc
sub
sbb
adc
mov
sub
stos
xor
outsb
ret
or
ja
jmp
in
sbbl
fdivrs
imul
cmp
sbb
jae
ds
push
incb
mov
fisttps
pop
outsl
sbb
gs
loop
push
in
sub
test
js
fsubr
fmull
pop
mov
jno
fnstsw
filds
sub
sub
jae
nop
or
mov
pushw
ret
push
xor
loope
pop
jmp
xchg
jns
jle
ret
fwait
movsb
jb
ss
std
cmp
in
addr16
pop
add
and
mov
into
imul
or
pusha
mov
insl
and
hlt
sub
dec
add
or
jbe
jle
dec
icebp
jp
clc
nop
sub
outsl
out
dec
shrb
arpl
push
dec
cmp
fisubrl
lods
ja
inc
pop
ficomps
push
or
insb
jae
mov
cmp
outsl
call
xchg
outsl
loope
mov
in
call
jno
imul
in
repnz
fldt
push
out
xchg
sub
ja
in
in
mov
mov
mov
pop
or
gs
pop
orb
adc
filds
out
inc
push
sarb
dec
cmpsb
jl
xchg
movsl
inc
nop
sub
adc
adc
xor
mov
mov
cwtl
push
jmp
lret
sbb
out
push
sub
lret
notl
fstl
push
lods
test
sub
cli
push
mov
sub
faddl
leave
filds
mov
aaa
pop
jl
dec
and
xchg
cmp
mov
cmp
loop
test
lret
pop
lahf
inc
xorb
insb
mov
ja
mov
dec
cmc
or
int3
push
push
or
mov
add
xor
jl
cmpsl
mov
addl
xchg
add
pushf
pop
pop
push
inc
loop
pop
ss
adc
outsb
dec
insl
push
and
sub
and
divb
dec
imul
push
icebp
add
pop
pop
rorl
stos
scas
out
mov
dec
jp
xchg
ficompl
fsubrs
insl
je
test
push
add
btc
push
in
negl
mov
jg
aam
push
fcoml
cs
xor
std
and
sbb
and
cltd
cmp
lahf
roll
push
inc
clc
push
xchg
push
xor
or
in
jmp
insb
pop
nop
out
and
add
ftst
inc
mov
addr16
xchg
imul
sbb
popf
dec
aas
push
dec
js
out
xor
pushf
mov
jp
fdivrp
bound
jmp
cmp
mov
scas
push
push
mov
jno
repnz
inc
mov
and
fdivr
jmp
cmpsl
ret
xchg
in
mov
xchg
push
mov
aad
mov
xchg
insb
inc
inc
pop
jae,pt
enter
dec
sub
fwait
xor
scas
push
mov
xchg
sti
xchg
push
out
je
cltd
jl
jmp
jns
movsl
lahf
dec
jmp
loopne
jne
cmpsb
insl
cmp
dec
jmp
jo
xchg
add
push
cmp
dec
dec
push
pop
imul
jp
insb
cmpsb
mov
shll
scas
movsl
cmpsb
repnz
in
cwtl
fldenv
push
pop
into
scas
mov
repz
leave
pop
dec
add
mov
jbe
jmp
push
cmp
cwtl
and
mov
mov
mov
mov
adc
out
inc
xchg
pop
mov
cs
mov
sbb
in
adc
pop
jns
and
xchg
orb
out
fucomip
and
das
std
and
fcmovnbe
insb
lds
and
add
mov
in
or
and
lock
jns
and
mov
dec
outsl
dec
add
fwait
sti
mov
jne
push
mov
pop
in
ffreep
sbb
test
in
js
adcb
push
add
push
aaa
cmp
stos
outsl
scas
aas
push
lcall
test
call
push
jg
pushf
mov
into
pop
push
xchg
jae
cld
push
movsb
push
and
pop
addr16
inc
shlb
dec
dec
push
dec
dec
dec
out
in
sti
dec
jo
xchg
leave
cmp
mov
call
icebp
insb
dec
movl
push
xor
mov
in
jmp
mov
cmc
add
iret
push
out
outsl
gs
test
inc
jl
xor
dec
xchg
mov
push
push
dec
add
data16
mov
lahf
push
mov
cwtl
xchg
sbb
bound
mov
or
ss
mov
daa
sbb
jle
or
in
out
mov
jns
inc
jl
dec
mov
gs
dec
ret
test
scas
push
cmc
xchg
cltd
mov
jns
lods
xchg
inc
sbb
push
jg
sbb
mov
cwtl
stos
mov
pop
lret
mov
pushf
inc
cmpsl
or
mov
es
xor
mov
xchg
insl
cwtl
mov
inc
icebp
and
nop
dec
cwtl
add
or
mov
dec
inc
int3
push
xchg
pop
mov
inc
movsb
out
dec
push
inc
roll
pushf
sbb
dec
addl
push
fiadds
sub
or
cmpsl
shrl
push
push
sbb
icebp
fnstsw
adc
pop
mov
out
xchg
out
sub
orb
xchg
cmp
ret
lahf
insb
sbb
in
fcmovnb
cli
add
add
dec
or
push
add
pop
dec
xchg
cmp
insb
aad
pop
jae
add
and
outsl
and
xchg
scas
sbbb
das
jp
leave
adc
aam
jg
mov
xchg
stos
adc
popa
imul
mov
jl
adc
xchg
je
gs
out
xchg
mov
jl
adc
jmp
dec
mov
add
xchg
pop
ja
mov
test
testb
push
out
pusha
in
mov
cmova
xor
fisubl
scas
jge
or
xchg
scas
outsb
mov
nop
mov
push
sub
jae
cmp
das
shl
sbb
lret
adc
mov
subb
fisttps
outsb
sub
pop
pop
mov
lret
add
fs
push
inc
loop
lock
sbb
mov
xor
frstor
lds
movsb
lea
xchg
lock
push
push
xchg
popf
ret
push
dec
outsl
popf
insl
mov
daa
loop
adc
fstpl
daa
push
nop
out
xor
lret
mov
cmp
testb
out
push
adc
mov
in
sub
sub
dec
out
push
in
xchg
inc
xchg
in
lods
imull
imul
mov
fwait
pop
out
paddd
jno
cmpsl
out
mov
adc
ja
fidivrs
aaa
mov
or
popf
inc
int
inc
cli
mov
jne
loop
push
scas
jp
mov
mulb
ja
and
lahf
jb
mov
mov
addr16
cmp
xchg
xchg
loop
pop
ja
js
xor
jae
jo
inc
loop
xchg
data16
pop
xchg
repz
fwait
cmp
dec
push
mov
hlt
out
dec
iret
ret
rcl
stc
insl
popf
adc
mov
in
xor
imul
popf
cmpsb
stos
arpl
sub
shr
loop
inc
xchg
ret
scas
nop
fucomip
jae
gs
icebp
add
mov
mov
pop
and
cmp
mov
popa
mov
in
or
xchg
insb
xor
stos
dec
jnp
lods
xchg
mov
rclb
dec
addr16
dec
arpl
rorb
add
sub
pushf
imul
rolb
push
outsb
mov
dec
cmp
xchg
and
inc
idivb
inc
rorl
jnp
jnp
dec
in
jns
push
lret
shlb
lahf
push
pop
insb
xchg
leavew
cmpps
and
daa
das
in
dec
sbb
cmp
pushf
jae
nop
push
jecxz
xlat
mov
adc
sbb
dec
outsb
out
pop
jno
sarl
pusha
lcall
push
test
jae
mov
pop
mov
sbb
in
jne
popf
loope
loop
ss
stc
push
dec
loop
mov
movsb
mov
ret
filds
lock
mov
inc
js
lock
xor
and
push
fsubr
push
cmp
stos
js
ds
inc
pcmpgtb
push
add
xchg
cmpsl
mov
xchg
push
sub
or
push
int3
aaa
call
popa
iret
inc
dec
orb
or
pop
scas
pop
dec
leave
out
sbb
int3
mov
dec
shrb
push
shl
and
pop
mov
cmc
pop
lret
mov
mov
xor
jae
mov
or
jp
das
dec
push
push
add
or
xchg
and
outsl
dec
and
jnp
lahf
mov
loope
sbb
stos
push
lret
adc
pusha
mov
lcall
rcrb
mov
pop
in
es
hlt
adc
mov
lret
lock
pop
in
sbb
popf
pop
adc
lea
iret
pop
out
dec
insl
ret
push
int
push
lahf
or
mov
ja
dec
sbb
sub
call
mov
andb
adc
xchg
cmpsl
mov
cmc
jg
cs
mov
lret
cmp
loopne
xor
outsl
pop
xchg
popf
addr16
inc
loop
mov
insb
loope
jno
imul
dec
sub
scas
lret
mov
push
daa
xchg
iret
aas
cmp
ret
mov
or
or
push
loop
js
in
adc
enter
daa
cmpsb
jae
mov
popa
mov
rol
pop
jbe
jbe
mov
jg
jle
cmpsb
lods
mov
je
push
or
mov
pop
push
and
pop
or
outsl
inc
pushf
mov
fnstenv
rclb
mov
jmp
jno
orb
or
xchg
mov
dec
mov
es
call
and
inc
repnz
mov
fidivrl
sub
jae
std
pop
push
outsl
filds
xlat
enter
insb
jbe
fimuls
jp
cld
ljmp
addr16
outsb
jl
push
jae
jl
testl
mov
ret
lret
sub
mov
inc
sub
imul
push
cmp
testb
rol
xor
loope
aas
insb
rcl
and
sarl
out
fdivr
mov
scas
mov
mov
or
fsub
test
loopne
sub
popf
clc
rep
jmp
ja
sbb
fistps
sbb
xor
mov
dec
xchg
and
call
mov
mov
popf
lcall
scas
rcl
fidivrs
pop
dec
hlt
dec
sub
test
inc
jno
mov
out
mov
sbb
addb
lock
xchg
push
clc
fwait
test
jo
mov
ja
mov
js
mov
jae
lods
xor
shrb
lret
add
stos
insl
popf
sbb
loope
and
adc
xchg
cld
out
jmp
jns
dec
pop
and
outsb
mov
jae
xlat
xchg
movl
in
push
mov
out
out
or
xchg
dec
push
or
das
jno
dec
addr16
adc
out
call
pop
mov
jb
out
addr16
or
cmp
push
fidivs
inc
out
sub
jle
out
push
pusha
loop
xor
fwait
mov
aas
push
hlt
pusha
stc
shrl
in
jae
repz
adc
fcomip
push
cmp
add
push
push
sarb
fisubrl
sub
push
popa
iret
out
ss
xchg
insl
jecxz
icebp
pop
pusha
mov
daa
inc
add
xor
jg
and
in
inc
dec
addr16
jmp
scas
inc
lahf
pop
jl
pop
adc
lahf
push
sbb
mov
lea
push
cwtl
scas
pusha
xor
push
ret
incb
cmp
jg
mov
pop
jae
mov
insb
repz
lret
xor
test
xchg
and
mov
imul
pusha
jl
insl
test
dec
insl
inc
mov
inc
shlb
pop
and
push
out
outsl
jo
sub
rcl
mov
std
scas
jb
jge
ds
pop
jns
rcl
shrl
stc
mov
test
sub
insb
nop
jne
stos
and
fcmovbe
jae
call
pop
je
sub
rorb
jmp
lds
dec
inc
psrad
mov
mov
mov
out
subl
test
outsb
mov
dec
push
push
arpl
push
adc
sub
mov
movsl
cmp
loopne
inc
jmp
rcrl
jbe
xlat
insl
sub
daa
or
or
jge
sahf
ljmp
cmpsl
jb
jae
sub
sbb
xchg
stc
clc
xor
cmp
mov
mov
push
jge
and
dec
mov
dec
mov
sbb
inc
imul
test
negl
scas
adc
and
mov
imul
mov
dec
dec
hlt
popa
dec
les
repz
xor
mov
fdivrl
jae
add
xlat
dec
and
arpl
mov
js
inc
pop
jg
sub
push
mov
xchg
dec
xchg
outsb
ficompl
repnz
popa
cwtl
add
ret
in
jge
shlb
das
push
dec
fbld
dec
das
data16
out
jae
xchg
das
aaa
push
imul
hlt
data16
or
dec
jae
mov
cmp
xchg
lods
xchg
cmp
and
adcb
scas
ficoml
mov
inc
call
inc
int3
pop
popf
xchg
jmp
mov
repz
jg
pop
xor
mov
mov
insl
mov
push
lds
mov
mov
mov
call
lret
subl
lds
movsl
mov
fimuls
sahf
fiaddl
andl
not
pop
mov
data16
out
loop
lods
scas
iret
ret
out
fidivrl
int3
and
cltd
xchg
lds
push
ret
sub
fisttpll
int3
divb
cwtl
out
or
inc
add
mov
pop
scas
jae
pop
mov
std
mov
sbb
movsb
cwtl
scas
or
inc
mov
cmpl
push
lret
loopne
jecxz
cmc
inc
add
arpl
imul
sbb
mov
incb
xchg
iret
pop
push
in
loopne
fisubs
outsl
pop
cmp
or
dec
dec
pop
add
data16
cmp
dec
dec
std
scas
ret
in
subb
or
jbe
and
inc
out
inc
jp,pn
mov
flds
leave
sahf
pop
jb
inc
jmp
insl
in
jne
scas
jle
fsub
dec
mov
das
cmc
fwait
aam
dec
paddq
scas
xchg
xbegin
jp
cmc
ja
mov
dec
mov
dec
orb
imul
mov
push
push
bound
cmp
sbb
push
pushf
shrb
cmp
orb
jl
stos
loopne
inc
jbe
scas
cltd
mov
inc
aas
dec
mov
push
stc
xchg
mul
cmp
xchg
lahf
and
fimuls
push
out
sbb
bswap
jmp
xchg
addr16
jp
jns
mov
push
imul
orb
pop
js
in
loopne
fmull
mov
mov
imul
out
rcrb
mov
dec
out
lock
outsl
dec
outsl
push
in
scas
mov
stos
mov
addr16
fwait
outsl
ret
cmp
leave
jp
cmp
testl
jae
mov
incb
repnz
scas
mov
sar
sub
push
lahf
mov
in
or
jg
mov
jns
outsl
insl
fdivrl
sub
add
inc
fucomip
pop
outsb
repnz
jae
dec
sub
call
cs
mov
jne
mov
iret
xchg
mov
dec
xchg
push
push
out
das
decl
addr16
fs
mov
dec
loop
cmpsb
dec
lods
std
pushf
mov
aad
push
sub
lods
mov
jne
in
dec
xor
in
inc
pop
aaa
jecxz,pt
das
ret
stos
xchg
adc
ds
int3
mov
outsl
adc
sbb
mov
outsl
daa
loopne
push
insl
popf
addr16
mov
or
jno
jg
or
loopne
in
fisttpll
fcomps
pop
nop
shrl
sti
out
test
outsb
adc
mov
push
daa
scas
lods
jmp
jle
inc
push
out
icebp
push
andl
es
xor
xchg
loope
pop
das
js
adc
xorl
cld
and
lods
xchg
cs
add
cs
or
scas
or
mov
mov
testb
pop
xchg
xor
mov
dec
cmp
into
mov
lock
pop
lahf
ret
inc
push
xchg
mov
add
cmpl
push
add
and
add
inc
das
inc
ret
xchg
scas
jb
xor
push
loopne
xor
in
outsl
cmpsb
sub
daa
or
pusha
xchg
mov
mov
lods
push
daa
push
pop
jg
enter
cs
movsb
push
lret
jg
movsb
aad
dec
orb
push
ret
sar
dec
mov
dec
pop
jnp
and
out
aad
lret
enter
nop
cmp
jbe
hlt
outsb
xlat
adc
mov
dec
inc
stos
sbb
jecxz
add
outsl
ret
dec
ds
sub
aaa
adc
push
dec
loopne
mov
inc
lret
lret
jecxz
lods
sbb
outsb
mov
push
mov
out
mov
into
arpl
aam
hlt
stos
ljmp
std
mov
push
dec
jle
mov
stos
pop
dec
outsl
push
mov
out
stos
xchg
dec
and
mov
std
xchg
push
movsb
outsl
pop
outsb
push
pop
jg
inc
push
loopne
rcrb
dec
push
lea
mov
dec
jae
jnp
and
add
or
call
mov
inc
lock
inc
add
jns
jge
push
dec
sbb
mov
in
add
or
mov
jbe
lret
test
cmp
jge
loop
add
dec
xchg
inc
lret
sub
cwtl
push
iret
arpl
scas
or
mov
repnz
pop
push
in
imulb
mov
rcrl
jnp
or
jecxz
rcr
rolb
inc
ljmp
jmp
inc
dec
popa
repz
cmpsl
jne
xchg
repnz
dec
fwait
dec
mov
dec
in
or
mov
cs
nop
lea
insb
add
jb
jno
push
pop
loopne
fwait
les
sub
daa
cwtl
jae
jg
xchg
sub
sbb
cs
fimuls
aaa
xchg
xlat
mov
jae
mov
scas
fs
xchg
iret
jb
pop
cwtl
mov
insl
dec
jnp
popa
pop
test
out
fidivs
imul
or
mov
adc
sub
pop
xchg
jo
and
and
xchg
adc
xor
sbb
clc
jno
mov
xchg
fs
lock
xorb
or
packuswb
stos
mov
lds
fs
scas
int3
orb
xor
mov
insl
xor
mov
stos
gs
insl
jg
mov
fidivrs
sub
push
stos
int
mov
ret
jmp
xchg
divb
add
dec
fucomi
mulb
sahf
leave
jae
test
mov
aaa
mov
dec
or
js
jmp
adc
or
das
lcall
xorl
enter
push
mov
jae
inc
jg
mov
inc
jae
scas
enter
jge
test
mov
in
sub
pop
xchg
das
repz
xor
mov
jne
les
xor
daa
dec
daa
movaps
in
adc
fs
inc
ja
scas
push
mov
jb
xchg
int
lcall
cmpsb
clc
or
cs
adc
notl
or
jno
imul
add
or
or
lea
loope
inc
sub
pushl
sbb
lahf
jae
jg
sbb
movsb
lahf
cltd
out
out
bound
xchg
icebp
loopne
push
int
push
rcrl
mov
pop
lahf
das
fadd
xchg
dec
cltd
ficomps
mov
mov
sbb
leave
cmp
jle
test
in
or
fidivl
jge
pop
mov
mov
lods
pop
pop
or
push
cmpl
jne
dec
mov
cs
cwtl
das
push
and
mov
nop
cwtl
sti
loop
jne
outsl
push
stos
adc
hlt
mov
cmp
pop
jns
bound
repz
lods
jae
test
mull
insb
bound
jg
xor
data16
sub
les
and
ret
dec
dec
jge
inc
xchg
push
popl
pop
push
push
sahf
or
filds
outsl
stos
fnstenv
outsb
mov
in
jge
jns
sti
xorb
lods
sub
outsl
pop
lods
inc
jecxz
ds
sbb
add
andb
test
xchg
mov
or
shll
mov
and
pop
mov
add
outsl
call
or
mov
cmp
cs
push
mov
movsb
test
lahf
shll
pop
adc
out
fdiv
xchg
repz
sub
mov
dec
repnz
lods
lahf
imulb
clc
jb
aam
test
and
inc
js
xchg
bound
add
jb
das
shl
jl
mov
pop
inc
and
adc
mov
inc
cmc
dec
and
mov
lret
das
in
or
add
jle
push
dec
ret
addr16
insb
stc
out
out
pop
test
ret
insb
sub
sbb
test
and
push
pop
push
jp
add
mov
cmp
inc
jns
pop
ds
push
insb
ret
sub
mov
push
mov
pusha
cmc
xor
gs
or
mov
pop
jecxz
jne
inc
fsubrs
imul
stos
mov
cmpsb
inc
mov
xor
or
xchg
stos
cmp
outsb
daa
lahf
add
sub
cwtl
sub
outsl
les
call
mov
out
pusha
mov
xchg
xchg
jno
ficoml
iret
inc
jnp
adc
scas
pop
sub
jns
test
subb
stos
dec
daa
jl
inc
clc
sti
movsb
add
out
aas
sub
mov
es
out
xchg
data16
lods
popf
pop
cld
dec
enter
sub
lods
movq
das
out
idivb
and
aas
inc
loop
test
scas
mov
nop
test
ja
clc
pop
dec
xor
add
addr16
lret
out
mov
dec
and
pop
cwtl
movsb
roll
out
and
push
push
loopne
leave
push
jmp
dec
sbb
outsw
out
add
in
ret
push
outsb
adc
or
in
add
inc
sub
mov
nop
out
cmp
cs
jae
cmpsb
jns
xchg
jp
in
dec
xor
inc
data16
push
sbb
fcomi
pop
call
pop
lret
data16
xlat
lods
aad
push
outsb
mov
fists
sub
inc
stos
sub
sub
out
or
int3
test
movsl
jmp
pop
arpl
mov
icebp
div
add
aad
cmc
and
jecxz
push
outsb
jae
sbb
cld
pop
clc
or
out
fnsave
sub
mov
mov
pop
icebp
test
iret
inc
xor
lods
dec
jne
or
cmp
adc
mov
stc
fcmovnbe
or
xchg
addr16
in
fsubr
insl
mov
xchg
push
jle
cmp
mov
cli
cmpsb
insl
data16
stos
xorb
push
jle
mov
or
iret
loop
rcrl
xchg
or
or
cmpsb
out
test
jge
and
dec
inc
imul
daa
sub
xor
in
ljmp
fildl
test
adc
push
outsb
jno
mov
pop
insb
jae
lods
dec
dec
sarb
mov
cli
xchg
icebp
cmp
outsb
scas
sbb
xchg
fnstenv
lock
xchg
ror
jbe
pop
es
and
jg
stc
data16
or
lods
mov
or
data16
mov
adc
push
xchg
cmpsl
je
call
cmpsl
inc
fadds
mov
insb
jb
stc
jg
dec
and
xchg
sub
xchg
iret
ret
inc
dec
out
sbb
test
frstor
dec
jne
das
mov
cs
sbb
dec
jae
cld
es
xchg
shrb
xchg
shrb
int3
jl
jae
mov
clc
adc
outsl
int3
ret
stc
dec
and
mov
outsl
add
ljmp
aaa
xchg
das
xor
loop
cmp
xchg
loopne
lock
outsl
jae
or
or
popf
cmp
mov
incb
push
out
jmp
jecxz
and
xor
xchg
push
sbbb
or
inc
sbb
flds
scas
icebp
jae
add
jb
and
cmp
pop
add
rcrb
dec
mov
addl
test
mov
rcr
icebp
scas
psubsw
idivl
data16
sub
mov
xchg
and
mov
test
addr16
dec
xor
imul
mov
ror
and
push
mov
push
sub
sbb
push
pop
or
hlt
inc
or
mov
cld
call
loopne
dec
jno
std
test
push
push
ror
push
pop
jg
out
jmp
sub
mov
lret
movsl
mov
pop
loop
xor
jne
mov
sub
daa
loopne
sbb
pop
mov
aas
shl
fucomp
push
outsl
xor
push
stos
ds
icebp
repnz
mov
lahf
xchg
mov
icebp
and
lea
or
stos
cmp
nop
faddl
stos
mov
lahf
pop
mov
jae
xchg
jmp
mov
mov
xor
lods
js
dec
scas
ja
loop
mov
and
jge
cmc
add
add
lock
ret
test
lods
dec
inc
xchg
nop
dec
repz
add
pop
dec
dec
loopne
dec
outsb
rorb
out
adc
fisubs
inc
and
xchg
add
add
icebp
sbb
inc
in
test
popf
les
mov
out
outsl
jmp
test
outsb
adc
call
sar
shl
mov
xchg
lock
jbe
out
sbb
or
pusha
fnstenv
or
jb
rorl
int3
jae
push
dec
fcomp
ret
in
sub
lret
sahf
mov
rcll
mov
mov
push
push
jl
jg
xchg
inc
imul
cltd
or
jne
rcl
mov
out
jae
loop
pop
or
or
xor
int3
push
cmp
aas
sahf
repz
jmp
ds
xchg
ljmp
push
inc
pop
test
jge
pop
jne
sub
push
inc
outsb
jmp
lea
sub
aaa
stos
sti
iret
lock
jmp
lea
mov
push
fnstsw
iret
clc
or
mov
ja
imull
mov
mov
aas
sbb
mov
pop
aas
scas
out
jns
cld
push
sub
loopne
dec
and
out
insl
addr16
and
add
add
mov
jg
loop
cmp
out
scas
addr16
js
cmpsl
int3
mov
out
sti
mov
scas
xor
inc
repnz
aas
aas
inc
rol
mov
sub
jg
mov
bound
xchg
sub
push
jp
arpl
sub
sbb
xchg
outsb
sarb
imul
mov
jg
scas
dec
pop
jge
cwtl
lret
movsb
inc
test
push
int3
cmp
imull
pop
lock
push
ficoms
dec
test
jp
push
xor
inc
ret
enter
mov
mov
dec
mov
pop
jle
and
je
cwtl
cmp
icebp
pop
mov
pop
push
mov
xor
dec
popa
dec
xor
jnp
movsl
movsl
pop
subl
fcom
fidivrl
mov
pop
mov
lods
dec
jns
sbb
inc
andb
xchg
pop
dec
notb
xorl
dec
sbb
dec
dec
ss
add
outsb
mov
pop
imul
loopne
push
outsl
das
xor
jno
xchg
ss
inc
pop
mov
popa
fisubs
repz
inc
add
and
pop
add
stos
mov
push
repz
int3
outsl
repnz
mov
push
jno
mov
push
jb
pop
jb
das
adc
mov
aad
je
ret
cs
lahf
xor
enter
stos
jnp
adcl
pop
ljmp
mov
fmull
mov
out
inc
movsl
mov
jns
outsb
scas
cmpsl
jns
jle
stc
xchg
jbe
in
or
dec
outsb
cmpsl
xorb
jmp
push
pop
mov
std
pop
mov
and
fcomip
fsubr
cmpsb
scas
mov
adcb
mov
xchg
paddq
mov
stc
mov
jnp
repnz
jne
mov
lds
clc
fsub
or
sbbl
iret
icebp
leave
sub
xchg
mov
test
and
int
test
shl
jno
jne
mov
pop
imul
xor
ja
jne
dec
movsb
xchg
fsubrs
jae
push
addl
lcall
imul
je
arpl
jb
push
jl
pop
movsl
lock
int3
mov
cltd
divl
js
arpl
jne
outsb
mov
fucom
sub
rorl
scas
mov
dec
sub
or
inc
lret
aas
dec
sub
pop
int
dec
jp
cwtl
xor
ja
shrb
insb
punpckhbw
pusha
mov
lock
outsl
cs
xor
shll
or
stos
pop
push
jp
pusha
scas
jle
out
pop
ljmp
scas
out
mov
dec
sti
jle
sahf
xchg
xchg
ja
roll
sub
fsubp
call
cld
mov
insb
subb
sbb
mov
call
nop
push
es
xor
xchg
dec
xchg
inc
and
hlt
call
stc
xchg
jg
and
jns
int
mov
data16
pop
jl
jae
arpl
fsubrs
pop
jno
mov
lods
clc
out
stos
cmp
ja
dec
imull
jbe
dec
testb
nop
jg
es
mov
std
scas
fistpll
or
mov
testb
jge
in
std
pop
jl
cld
in
movsb
decb
mov
outsb
jecxz
jg
popf
add
sub
cmp
ljmp
sub
jmp
subb
lret
loope
mov
lcall
shrl
adc
out
int
outsb
scas
jmp
lods
mov
adc
mov
mov
push
sub
imul
outsb
xchg
mov
loope
jg
stos
cs
mov
jecxz
movsb
mov
mov
sub
sbb
cld
divl
ficoml
aaa
ffreep
xchg
int3
mov
cli
mov
fsub
pushf
cmpb
add
lods
notb
test
lods
std
inc
jne
push
cmp
clc
leave
in
dec
addr16
ljmp
inc
sub
insl
jge
scas
jecxz
loope
mov
hlt
xchg
dec
dec
daa
call
shlb
iret
jp
scas
ret
dec
jge
mov
out
push
dec
imul
std
mov
dec
jo
jae
inc
cmp
cld
jl
enter
std
pusha
in
imul
call
fs
jecxz
shl
dec
shl
jae
dec
xchg
pop
outsl
xorl
mov
pop
dec
outsl
aam
out
outsb
push
insl
out
push
ret
out
jecxz
popa
and
jg
fistpll
out
pop
shl
dec
jae
inc
mov
jb
rol
loope
jle
ret
into
pop
out
xorl
and
jae
lods
bound
cltd
jg
xchg
cmpsb
sarl
cmp
pushf
and
mov
jp
clc
int3
sbb
push
cmp
in
je
dec
and
xchg
mov
jb
xchg
stos
lret
sub
stc
stos
lahf
loop
adc
arpl
jbe
imul
jbe
sub
dec
adc
jmp
aaa
xor
sti
mov
cld
push
and
add
hlt
push
data16
xchg
ret
fiaddl
gs
dec
pop
dec
dec
push
loopne
and
repnz
inc
mov
addr16
adc
adcl
pusha
push
pop
insb
iret
outsl
mov
mov
sub
adcb
inc
mov
jl
lock
mov
imul
lahf
mov
jg
mov
push
pop
imul
jb
sarl
jle
and
shrl
clc
test
add
jb
dec
ja
jbe
mov
xchg
or
xorb
enter
or
adc
or
loope
mov
mov
sbb
aas
es
mov
ljmp
addr16
cmc
sbb
adc
sub
pop
pop
mov
in
movsb
dec
daa
inc
outsl
or
mov
sti
or
loope
rol
repnz
jle
or
sub
push
out
out
dec
pop
addr16
repnz
in
adc
jmp
mov
add
xor
pop
sbb
ja
or
sub
or
jb
sub
push
adc
xchg
dec
outsb
sub
scas
xchg
out
int
jle
cmp
xchg
outsl
les
jmp
daa
in
test
inc
subb
jg
repz
enter
push
aas
rorl
shrl
leave
or
in
jae
imulb
iret
js
sbb
in
jns
lock
imul
lods
mov
cmp
adcb
add
cli
sbb
jg
dec
sub
dec
fdivrl
test
outsb
cmp
push
negb
test
and
pop
cmp
jb
shlb
roll
fiadds
dec
addl
ret
pop
lock
or
jae
inc
fmull
jg
insl
xor
out
scas
mov
or
xchg
fiadds
push
inc
dec
in
lods
out
mov
jl
jp
dec
negb
call
and
cmp
rorb
add
dec
xchg
loop
rcl
push
popa
aam
cmpsb
sbb
lods
pop
pop
daa
sbb
aas
call
into
mov
out
cwtl
inc
dec
int3
and
int3
inc
adc
icebp
scas
jg
sbb
mov
into
jp
xchg
pop
in
out
jno
or
int
dec
ljmp
iret
lods
mov
jbe
mov
dec
mov
sbb
out
jg
jl
jae
int
add
dec
scas
add
lods
dec
dec
pop
in
ret
aaa
and
fstps
fs
jno
outsl
dec
jp
adc
add
ror
loop
adcb
aaa
leave
xchg
in
jmp
js
xchg
je
scas
icebp
arpl
push
inc
jle
push
scas
outsl
in
fcmovne
mov
jle
int
dec
repnz
gs
mov
jbe
or
cli
je
or
push
and
pop
mov
andb
leave
mov
call
out
std
imul
lods
shrb
das
int
jo
stos
jne
lods
mov
jg
aam
push
inc
ja
and
xor
adc
icebp
jge
scas
sub
push
push
ret
xchg
mov
mov
psubsb
out
xchg
xor
pusha
clc
arpl
outsl
dec
add
dec
xchg
dec
out
imul
mov
pushf
pop
sub
dec
aam
mov
sbb
scas
js
jae
scas
pushf
stos
dec
cmp
xchg
mov
fisubrs
shlb
ret
and
nop
mov
rolb
test
cs
out
push
pop
dec
lret
jae
inc
mov
jmp
insb
pop
sti
in
push
ficomps
pop
mov
imul
lods
mov
inc
mov
push
ret
loopne
dec
sub
subb
into
lea
and
pop
jg
pop
out
adcb
rclb
sub
imul
fidivrs
int
mov
or
lods
shufps
call
ss
push
aam
loop
mov
aam
mov
push
xchg
adc
scas
lea
popf
sbb
adc
or
das
xor
mov
mov
dec
push
sbb
ss
add
inc
andb
add
mov
dec
adc
subl
ljmp
in
in
decl
sbb
outsb
pop
jmp
cmpsb
push
int
mov
mov
mov
into
cmpsl
mov
pop
dec
jg
in
addr16
call
int
test
stos
fisttps
push
or
cmpsl
mov
add
mov
jns
jle
cmp
jg
outsb
imul
int
imul
movsl
jne
and
outsl
jns
call
mov
jg
jge
ret
jbe
push
call
jns
lret
movsb
dec
divl
dec
dec
insl
cltd
jnp
idivl
jl
stos
cmp
ss
fdivs
pop
outsl
ja
jno
decl
dec
ja
pushf
cmp
xor
and
in
stos
or
xchg
or
pop
in
or
call
js
cmp
mul
test
orb
or
sub
arpl
dec
outsb
bnd
fidivs
add
lods
sbbl
insl
push
call
jno
push
inc
lock
mov
sub
in
inc
stc
inc
add
call
in
aad
nop
gs
cs
insb
in
and
inc
ret
out
inc
int
out
cmp
enter
fildl
outsb
jle
int3
insb
inc
jne
test
dec
adc
adc
adc
mov
test
adc
dec
jnp
mov
in
jb
inc
or
repz
and
test
and
add
jg
mov
jg
mov
addr16
xchg
out
jmp
loopne
dec
xor
add
loope
bound
jae
mov
pop
jb
adc
icebp
ret
gs
jge
dec
idivl
mov
outsb
jbe
xchg
shlb
pop
and
mov
dec
xchg
push
nop
xchg
push
pop
mov
insl
push
sbbl
rclb
call
lods
xor
fidivl
in
and
inc
pushf
das
mov
scas
jns
pop
push
sbb
ja
fldenv
sub
daa
mov
inc
test
dec
mov
mov
pop
mov
fwait
push
nop
ss
addr16
out
push
cmp
fs
jae
add
out
pop
jno
xor
lock
xor
or
sahf
fdivrs
jae
les
js
ret
mov
xor
xchg
xorb
add
jmp
movsl
imul
pop
ljmp
in
push
or
pop
stc
inc
mov
andl
push
sub
or
mov
jg
iret
pop
lock
nop
xchg
fcmovnbe
push
cmpsb
std
pop
repnz
imul
pop
lea
pop
fcmovnb
test
out
call
adc
jl
push
ds
movsb
add
sub
mov
sahf
mov
push
mov
outsw
mov
in
sbb
outsl
mov
aad
leave
scas
sub
outsl
mov
pop
mov
pop
das
loopne
xchg
cmc
bound
sahf
adc
dec
xor
test
mov
jo
movsl
cs
daa
out
mov
jl
sti
insl
inc
je
xor
outsb
jbe
mov
das
mov
es
pop
sbb
sub
jg
dec
jge
lds
dec
jae
ret
lcall
insl
inc
inc
orl
add
xor
lret
dec
jns
scas
push
jl
xchg
dec
repnz
fstpl
cmpsl
ffree
ret
xchg
push
or
out
shl
sub
scas
out
fxch
insl
cmpsb
in
dec
pop
out
pop
outsb
inc
dec
adc
dec
dec
test
lcall
jb
add
loop
loope
in
jl
test
imul
push
cmpsb
ljmp
sbb
filds
repz
fisubrl
icebp
insl
into
addr16
or
pop
out
sbb
dec
mov
addr16
mov
adc
or
dec
mov
pop
je
subl
fmuls
cwtl
push
pop
in
lahf
inc
push
xchg
call
push
out
dec
ja
pushl
push
out
add
xor
psrld
dec
and
mov
movsl
inc
icebp
pop
mov
leave
test
push
fwait
jne
out
mov
daa
shlb
dec
pop
ret
fidivrl
inc
xchg
testb
enter
clc
psubusw
in
mov
popf
mov
dec
and
movsl
hlt
jle
pop
mov
andl
jg
dec
into
dec
add
pusha
ljmp
ja
push
pop
mov
rorb
imul
fidivrs
wbinvd
enter
add
adc
pop
hlt
sbb
lahf
lods
and
cmp
lcall
sarb
jecxz
mov
or
mov
rcrl
sub
mov
lret
mov
fs
fstpl
les
js
daa
lcall
cld
imul
pop
std
outsl
daa
aad
push
shll
imul
adc
inc
hlt
cli
sbb
test
popa
or
pop
out
pop
inc
mov
outsl
xchg
cmp
ds
dec
dec
adc
mov
xor
dec
jb
shlb
sub
lret
or
addr16
pusha
dec
jne
testl
jg
mov
dec
jns
jge
push
mov
lods
dec
jnp
jg
pop
dec
dec
jge
in
aas
mov
sub
call
sbbb
popa
mov
lods
inc
call
pop
dec
fs
jl
gs
clc
add
mov
out
pusha
push
imul
inc
jp
push
jl
test
loopne
push
out
in
imul
daa
add
outsb
jge
pusha
lods
out
pop
ljmp
lock
shrb
cmp
icebp
inc
xchg
dec
jno
ja
insl
repnz
cmc
out
jb
clc
out
repz
push
jae
out
hlt
ja
in
hlt
je
bound
cmc
dec
xchg
push
jne
popa
lods
testb
ljmp
lods
ja
out
clc
xchg
push
js
jecxz
lods
stc
xchg
insl
lods
jns
jnp
dec
cli
dec
jmp
clc
addr16
sti
mov
pop
jnp
jmp
cld
dec
insb
push
jl
in
jg
pop
out
ja
pop
gs
pop
loope
jle
js
ja
jb
ja
addr16
hlt
in
mull
ret
fstl
sbb
push
cmp
jl
or
jg
adc
jns
mov
lahf
lret
into
cli
fs
ds
mov
lods
cmovge
outsl
inc
add
rep
dec
in
push
dec
scas
inc
into
jle
lock
mov
stos
orb
out
test
or
enter
mov
out
or
xchg
ret
dec
cmc
cmp
lods
sti
sub
adc
fs
cld
lods
ret
outsl
addl
std
dec
inc
outsb
jg
call
add
add
pop
dec
outsl
clc
add
int3
fs
outsb
cld
push
gs
loope
cmp
mov
mov
subb
aad
out
lds
call
mov
fdivs
dec
pop
mov
lods
sbb
les
push
in
dec
sbb
sbbb
outsl
add
cmp
push
xorb
hlt
movaps
cmpsb
jg
xchg
dec
cmp
xorps
lods
scas
jl
pusha
shrl
dec
loop
jns
sarb
xchg
xchg
int3
out
xor
data16
add
push
test
push
or
repz
out
mov
ja
pop
mov
xor
cmp
sahf
insb
pop
xor
inc
inc
sub
jnp
xor
push
in
loopne
xchg
mov
inc
addr16
mov
gs
jb
jecxz
movsb
xchg
adc
movsl
fxch
jg
xchg
clc
xchg
mov
mov
mov
lds
add
or
push
mov
hlt
movsb
orl
outsl
pop
add
test
jne
fninit
in
dec
push
and
inc
and
sbb
hlt
int3
aam
insb
lret
test
dec
push
flds
ret
lods
pop
add
push
rorb
pop
add
aam
jno
jle
outsl
cmpsb
loopne
repz
dec
mov
into
fldcw
loopne
jge
outsb
fildll
lock
mov
xor
pop
movsl
fdivs
mov
int
adcb
mov
je
fsubl
outsl
xor
mov
outsl
add
xor
outsl
add
push
inc
mov
lahf
or
jecxz
outsl
mov
sub
test
loop
xor
test
loop
mov
out
xor
mov
ja
stos
and
sub
lret
decl
dec
fsts
incl
mov
test
xchg
xor
jne
in
leave
mov
inc
arpl
jbe
sahf
and
mov
jns
mov
lcall
push
repnz
fnstsw
mov
dec
pop
out
sti
aas
test
dec
lock
dec
inc
jle
mov
dec
test
cli
pop
outsb
out
jg
add
in
dec
or
stc
pop
outsb
in
jg
in
imul
clc
clc
ljmp
outsb
jmp
imul
jbe
jle
out
fwait
stos
testb
out
mov
dec
jne
outsl
xchg
jle
jg
in
stos
loop
sti
lods
inc
dec
je
mov
add
aas
mov
mov
clc
incb
mov
add
test
dec
cld
outsb
or
movsb
imul
dec
jb
jnp
test
outsb
xchg
sarl
movsb
insl
xor
imulb
add
mov
loop
lock
arpl
add
out
bound
xor
inc
outsl
dec
in
insl
xchg
mov
add
outsl
inc
in
scas
insl
inc
add
dec
dec
and
push
jns
sub
add
ret
bound
ljmp
loop
add
push
call
scas
shlb
arpl
call
arpl
scas
outsb
mov
dec
imul
clc
icebp
icebp
or
lret
mov
and
jns
pop
icebp
sbb
movsl
cmp
imul
insb
iret
push
and
ss
scas
jg
pop
int3
loopne
pop
dec
jmp
inc
mov
loop
ficoml
mov
repz
or
dec
pushw
outsl
loop
jnp
jg
clc
bound
pusha
in
jge
jnp
testl
dec
in
dec
scas
out
ret
call
sub
jle
xchg
paddusb
cli
test
dec
dec
outsl
out
adcb
call
push
aad
insb
gs
push
xchg
xchg
pop
cmc
jb
in
jb
jle
cld
int3
cltd
mov
repz
add
repz
jns
jle
adc
or
add
in
shll
add
roll
into
test
push
orb
in
popa
std
jmp
sbb
in
mov
inc
dec
stc
jns
inc
xor
rolb
je
xor
mov
les
in
call
xor
out
sbb
pop
adc
push
add
mov
xor
pop
inc
or
icebp
dec
stc
test
mov
in
mov
stc
into
loopne
stos
lods
es
addr16
addr16
repz
loopne
lods
add
es
dec
js
out
pop
sarb
scas
repnz
mov
xchg
xor
cld
xchg
call
in
xchg
mov
jg
inc
test
cmpsl
dec
inc
mov
imul
inc
das
jae
push
xchg
loopne
pop
push
and
cs
push
pop
ret
mov
fldenv
pop
in
push
or
mov
test
outsb
jg
push
es
outsl
hlt
fnsave
hlt
dec
mov
std
cmpsb
and
push
cld
insl
jb
daa
push
jg
test
mov
push
jbe
jmp
clc
fsubr
scas
jb
add
mov
dec
cli
outsb
in
sbb
adc
test
inc
sub
push
outsb
cwtl
push
jg
mov
popa
call
push
gs
add
add
jg
imul
int3
call
dec
mov
es
scas
repz
dec
mov
pop
test
call
push
addr16
dec
push
mov
xchg
es
fisubs
cmpsl
cmp
xchg
add
dec
push
jae
scas
js
or
dec
add
mov
push
add
inc
hlt
imul
inc
sbb
push
mov
inc
loop
andb
orw
mov
jno
sbb
ffreep
loope
shrb
inc
mov
mov
roll
add
dec
mov
loopne
cmpsb
bound
lcall
push
cld
rorl
push
lods
add
push
pop
pop
sub
repnz
je
add
test
sarl
pop
lds
add
aas
dec
xor
test
dec
mov
repz
cmp
jp
movsb
lods
arpl
test
dec
jecxz
stc
xor
mov
testl
daa
dec
cmp
sub
clc
jecxz
repz
call
hlt
cs
mov
xor
shll
outsb
pop
sti
mov
ja
testl
sbb
neg
adc
insb
sub
cmc
pop
lret
ja
fs
js
out
leave
adc
dec
xor
out
jmp
movsb
imul
jecxz
out
lods
cmpsl
je
cld
ljmp
adc
jae
roll
jae
rcl
and
jmp
mov
in
dec
cltd
aaa
ljmp
iret
jno
dec
lahf
mov
xchg
and
aas
enter
add
icebp
jmp
mov
into
arpl
inc
mov
in
dec
adc
jle
jno
fbstp
in
adc
clc
outsb
imul
push
pop
fisubrs
ds
enter
into
lcall
xor
js
pop
jge
dec
dec
testl
xor
add
mov
xor
add
imull
pusha
pop
or
lock
nop
out
adc
mov
jae
push
sbb
mov
lock
mov
decb
repnz
into
sar
jl
sub
push
loope
into
nop
std
aaa
cmpsl
add
mov
aas
das
insb
adc
xchg
add
lea
sti
or
cmpsb
dec
addr16
dec
inc
adc
and
xchg
sbb
icebp
call
mov
lahf
das
push
ss
insb
mov
mov
mov
pop
sub
stos
ljmp
loopne
pop
movsb
stos
fisubrs
clc
push
xor
jae
jge
jg
push
cmp
das
push
sbb
jb
inc
mov
orl
and
imul
cmp
fildll
orl
fnstsw
bnd
in
jb
cmpsl
scas
pusha
sub
mov
lods
rorb
outsb
dec
faddl
rcll
cmp
and
mov
lock
addr16
fsubrl
xor
cmpsb
cmp
in
cld
test
stos
movsl
repz
add
in
outsb
insb
and
ja
ja
enter
out
mov
lock
cmpsb
shll
jle
addr16
cmovo
or
jae
lock
mov
test
ret
lds
loope
fs
sub
enter
scas
adc
call
push
test
fbstp
lods
xchg
in
in
ljmp
xchg
sbb
inc
push
mov
and
loop
in
sbb
das
rorb
and
data16
xor
dec
gs
sub
ds
fbstp
mov
jnp
mov
out
inc
sub
jg
iret
sub
mov
lea
inc
je
mov
mov
outsl
push
rorl
rclb
scas
push
mov
mov
arpl
mov
jae
fucom
ret
mov
in
dec
sub
sarb
jle
pop
outsl
push
mov
loope
pushf
cmp
and
les
jmp
and
or
lcall
in
jle
xchg
mov
shl
sahf
xchg
scas
xchg
lods
outsl
aam
movsl
loope
mov
and
clc
xor
add
repz
cmpsl
jno
add
test
icebp
push
out
lcall
inc
jle
shl
scas
or
mov
and
pop
imul
mov
mov
call
pop
push
push
mov
lods
pop
push
or
out
dec
bound
push
out
inc
out
imul
pusha
sub
shlb
xchg
loop
dec
cmp
sub
cs
ficoml
nop
pop
fucom
lods
std
daa
je
cmp
out
out
std
xchg
add
jae
sarl
lret
bound
ja
jns
icebp
jle
orl
aaa
insl
dec
sarb
xchg
loop
stc
test
fwait
sbb
icebp
pop
and
jo
or
out
xor
shll
je
cmpsl
sub
xchg
sub
jb
es
iret
shr
jns
push
les
es
jle
out
cmpsb
movsb
xor
fstpl
mov
jmp
fdivl
pop
hlt
mov
sub
push
in
lea
shrb
icebp
cmc
inc
or
mov
push
sub
jae
and
add
bound
mov
das
jae
adc
test
jg
out
hlt
xor
hlt
pop
mov
push
add
xchg
jp
shl
call
mov
sbb
clc
movsb
mov
inc
push
outsb
pop
ds
hlt
adc
xchg
sub
push
cmpsb
data16
cs
imul
lea
xchg
xchg
fildl
aam
cmpsb
push
jo
jbe
mov
out
pop
fdivrl
roll
dec
decb
pop
adcl
aad
xchg
push
pop
mov
loope
jle
rorl
cli
addr16
pop
xor
jno
scas
bound
jmp
pop
aaa
scas
cmc
int3
out
outsl
push
test
xor
lods
mov
mov
in
cmpsl
xchg
fldt
mov
dec
push
loopnew
call
push
movsb
addr16
pop
call
dec
inc
fidivrs
mov
jne
imul
icebp
add
in
popf
lret
or
lods
jno
insl
sbb
xchg
mov
adc
aas
test
mov
pop
or
inc
xchg
dec
mov
jle
inc
icebp
mov
iret
mov
lahf
data16
mov
fnstcw
emms
call
outsl
dec
in
arpl
dec
ja
call
lock
data16
call
mov
pop
sub
push
loopne
shlb
insb
add
out
and
jbe
adc
mov
mov
repnz
ljmp
dec
fisubl
dec
jmp
xchg
dec
rcrb
loop
lods
pushf
je
xchg
dec
scas
outsb
xchg
icebp
rcll
out
ret
lret
jp
fsubs
push
test
fistpll
mov
aaa
insb
adc
das
pop
pop
jl
xchg
out
mov
pop
nop
rolb
xchg
xchg
lds
push
aad
jae
push
push
daa
xchg
dec
lahf
aam
add
js
imul
out
jae
stos
in
adc
jnp
aas
fisubs
jmp
mov
add
add
inc
movsl
sti
jbe
ljmp
push
lods
out
out
mov
pusha
repz
push
inc
xorb
mov
push
fbstp
test
pop
test
dec
jb
aad
jmp
movsl
data16
jge
dec
sbb
insb
out
movsl
imul
xchg
cltd
mov
in
mov
sub
add
dec
inc
push
das
dec
cs
mov
mov
jle
or
in
arpl
pop
sbb
daa
sub
pop
outsb
scas
sarb
sub
leave
addr16
test
aas
clc
cmp
cmp
iret
out
in
idivl
inc
shll
dec
insb
inc
imul
add
add
inc
movsb
push
lock
pop
jno
mov
mov
or
lock
imul
popa
mov
jo
arpl
lret
outsl
dec
jae
or
inc
inc
je
in
mov
sbb
outsl
shll
sbb
loopne
out
jl
ja
clc
pop
mov
sbb
daa
sub
loopne
js
aaa
xlat
sub
pushl
data16
lret
cmp
or
cmp
pop
out
inc
mov
jae
fidivrs
sahf
scas
or
cld
push
xlat
loop
cmc
and
insb
mov
push
mov
clc
adc
jp
push
dec
add
insb
sbb
js
and
sub
jl
loopne
lock
jge
lock
loop
sbb
das
aaa
in
les
mov
or
imul
call
daa
loopne
incl
pop
outsb
xchg
sub
mov
int3
push
and
mov
sub
lock
jmp
cmc
fsub
pop
sti
mov
mov
mov
outsb
in
pop
imul
pop
outsb
cmp
xchg
inc
stos
sbb
cmpsl
jb
scas
clc
cwtl
jmp
xchg
out
data16
loopne
fsub
sub
in
jae
xchg
mov
in
dec
repnz
ffreep
jg
cli
adc
popf
cli
hlt
lret
rclb
fsubr
pop
out
stos
mov
mov
push
inc
lret
pop
adc
jno
nop
scas
push
jno
outsl
ljmp
outsb
movsl
add
and
iret
loope
mov
sub
stc
shrl
outsb
dec
adcb
test
outsl
push
ss
add
cmpsl
dec
sti
pop
mov
pop
cmp
or
dec
and
outsb
pop
mov
mov
dec
push
or
outsb
in
inc
rorl
jmp
dec
aam
cmpsl
jp
das
mov
jmp
aas
pop
movsl
mov
dec
pop
cmp
lods
nopl
jg
push
dec
mov
dec
mov
in
jb
fstpt
dec
cmp
dec
test
test
xchg
add
push
push
mov
add
shrb
push
lret
cld
ja
fwait
pop
fsubrs
in
mov
dec
ljmp
push
ja
jl
pop
mov
gs
arpl
add
cmp
shrl
dec
jbe
push
aas
bound
inc
jg
stos
insb
mov
push
jg
or
and
ljmp
cld
push
scas
add
repnz
add
shr
lock
or
ja
pop
pop
lcall
adc
daa
scas
mov
les
scas
xchg
clc
jno
mov
adc
lret
movsb
aaa
sub
push
dec
insl
jae
in
mov
pusha
jg
scas
add
das
mov
shr
jl
pop
scas
mov
mov
push
xor
enter
scas
mov
hlt
enter
mov
imul
daa
dec
aam
lods
stos
std
aas
sbb
imul
mov
mov
mov
push
pop
or
call
rcrl
inc
int3
inc
addr16
pop
cs
in
outsb
cmpsl
pop
cmp
push
or
loop
push
sub
ret
push
psubd
test
mov
in
lea
jg
outsl
cli
push
lods
pop
stos
mov
mov
mov
imul
les
repnz
jae
test
movsl
jnp
loopne
imul
mov
inc
push
add
stc
xor
arpl
mov
out
pop
lods
jb
mov
stc
icebp
xchg
inc
xor
dec
imul
imul
jmp
lret
out
addr16
movsl
dec
lea
enter
cltd
jns
es
jb
out
dec
jg
jae
lret
jg
mov
push
adc
inc
pushf
or
in
mov
push
jg
iret
mov
sbb
sub
shrl
fistpll
inc
dec
scas
iret
dec
sub
xchg
test
jecxz
jb
test
cmc
test
imul
shll
lock
xchg
clc
outsl
popa
dec
loope
xchg
stos
sbb
movsb
xchg
dec
das
lock
pop
out
mov
mov
test
fmuls
test
jne
dec
xchg
dec
and
mov
dec
and
outsb
push
arpl
xlat
push
out
insl
std
dec
mov
dec
lret
or
jb
lret
push
jmp
mov
scas
test
int
sub
or
xchg
ja
sti
dec
dec
in
enter
fcom
in
mov
mov
in
pop
cmpsb
mov
mov
mov
mov
mov
mov
mov
pop
mov
jb
out
out
out
sub
or
jp
mov
mov
sub
xchg
clc
add
push
push
mov
pop
jo
pop
clc
outsb
pop
stc
loopne
mov
jle
or
push
pop
lods
cmp
in
call
sub
xchg
dec
call
lea
lahf
test
ja
out
sub
push
stc
mov
or
inc
push
jecxz
push
sti
dec
scas
dec
sub
je
fwait
push
fsubrl
ja
jae
ds
mov
dec
shl
fwait
shrb
xchg
test
jp
mov
mov
dec
adc
mov
shrl
add
push
imul
clc
push
sti
jle
mov
sahf
ud2
push
xchg
out
push
repnz
movsb
bound
stos
pushf
lods
inc
std
and
test
sub
add
add
bound
test
dec
jg
jbe
inc
filds
add
sbb
mov
or
js
push
adc
dec
xchg
scas
out
popf
mov
push
and
and
dec
outsb
dec
outsl
mov
shrb
lock
movsb
sbb
mov
rorl
icebp
movsb
inc
inc
pop
ljmp
sti
mov
out
out
daa
mov
or
pop
and
push
lods
ret
jae
fistl
mov
push
xchg
faddl
jb
int3
fdivrs
je
dec
sub
jno
pusha
or
pop
dec
out
scas
jg
fnstenv
or
dec
rcrb
dec
adc
inc
lods
out
out
lock
sub
lods
gs
scas
loope
xor
in
pop
cmp
lods
pop
sbb
fwait
lock
pop
mov
push
jg
mov
pop
jnp
fildl
fisubrs
mov
fists
mov
out
outsl
sti
sub
popa
dec
aad
test
fsubrl
or
decb
xor
stos
push
dec
lods
scas
cmp
xchg
iret
std
mov
mov
sub
aam
adcl
js
cmpsl
jbe
lahf
mov
pop
mov
test
cltd
push
dec
dec
xchg
sub
or
icebp
fdivrs
mov
add
ljmp
dec
mov
dec
jnp
dec
sbb
mov
dec
and
pop
leave
scas
inc
in
and
pusha
shrb
adc
clc
adc
cld
or
push
jae
push
mov
and
xchg
pop
add
into
mov
ret
sbbb
inc
out
mov
pop
xorl
adc
xchg
shlb
pushf
dec
xchg
push
jae
sub
xor
fmuls
xor
and
dec
in
mov
bound
imul
dec
js
adc
test
push
xchg
outsl
jno
mov
shrb
test
ljmp
test
psrad
ret
mov
dec
xor
xor
shlb
popa
or
decl
int
push
or
push
popa
ret
or
jge
call
push
out
adc
add
sub
insl
push
and
in
movsb
dec
insl
jmp
ret
jle
pop
imul
clc
jbe
dec
and
vandps
or
jp
dec
sub
aam
fsubp
mov
mov
repz
mov
sub
lock
sub
lods
out
and
out
lods
pusha
in
mov
dec
nop
ljmp
lock
mov
in
adc
stos
fmuls
scas
jnp
outsb
sub
xchg
int3
adc
lods
jns
push
ja
xchg
cmp
cmpsl
lcall
lahf
addl
push
pop
sub
dec
dec
mov
mov
mov
lods
leave
pop
lods
inc
dec
push
sbb
pop
das
mov
out
push
cmp
mov
dec
mov
out
add
andl
mov
mov
cmp
lods
inc
pop
dec
imul
std
inc
fmuls
jb
xchg
insb
pop
pusha
out
cmpsl
insb
fsubrl
pusha
imul
dec
hlt
loop
mov
clc
lock
push
dec
in
dec
aam
xchg
popf
cmovnp
popa
or
in
dec
or
xchg
lock
in
mov
cmpsl
inc
fsubrs
cs
push
jmp
aas
cmp
or
pop
scas
out
push
mov
lods
dec
fcmovu
mov
mov
addr16
mov
inc
xchg
xchg
adc
out
cmp
add
sbb
loop
mov
sub
mov
inc
cmp
mov
cmp
insl
dec
test
insl
pop
popf
lods
test
sub
int3
xchg
add
xor
enter
repnz
mov
pop
sub
mov
cli
lods
cwtl
call
mov
fsubrp
pop
xor
scas
or
stos
addr16
mov
nop
push
mov
and
std
test
jmp
sbb
push
dec
xchg
fmuls
test
jbe
repnz
das
in
in
pop
les
sub
lods
sub
pop
mov
insb
pop
jb
ret
push
cmpsb
or
out
mov
int
jmp
cmpsl
push
dec
in
lock
lea
adcb
inc
fldt
call
inc
jae
xchg
xchg
addb
add
outsb
jbe
icebp
add
lret
xor
pop
xor
insb
lods
mov
call
ljmp
scas
dec
psubb
xor
mov
dec
pop
sub
je
out
inc
mov
stc
int3
into
stos
mov
xchg
dec
dec
clc
je
into
or
and
jb
repnz
push
inc
mov
xchg
mov
ja
pop
add
jb
cmp
pop
jge
jmp
mov
movsb
pop
or
dec
mov
or
fs
test
leave
outsl
in
jb
mov
hlt
pusha
inc
outsl
insb
nop
in
dec
mov
cmp
lods
cmp
ja
push
pop
dec
inc
daa
outsb
push
mov
insl
lods
lret
enter
mov
cmove
lods
dec
cld
hlt
jge
std
sub
ja
hlt
loope
mov
icebp
mov
push
lods
pop
call
int3
orl
and
loopne
js
add
push
jg
inc
jle
sahf
loopne
cmpb
dec
ror
mov
lods
mov
in
mov
xchg
out
movsb
in
add
and
outsb
nop
lock
dec
fmull
in
xlat
addr16
cmp
mov
out
cmp
icebp
or
sub
push
jg
and
xchg
mov
and
les
sbb
aam
mov
clc
shrl
sbb
js
xor
mov
mov
cli
loopne
or
pop
and
pusha
int3
push
inc
test
dec
jle
in
push
shlb
mov
test
movsb
cmp
lods
push
or
test
mov
pop
das
cmp
scas
andb
ret
test
daa
das
xor
mov
dec
adc
jne
icebp
mov
dec
push
in
push
cmpsl
adc
leave
pop
int3
insl
jno
xchg
outsb
xor
dec
repnz
je
pop
or
lea
cmp
dec
mov
xor
sub
pop
out
out
or
enter
nop
lock
in
push
addr16
cmp
inc
or
jecxz
das
dec
jbe
sub
dec
lea
dec
xchg
repnz
push
in
int3
xchg
jecxz
cmpsb
movsb
or
outsb
mov
fmul
movsb
lods
fcomps
fimull
hlt
jmp
mov
lea
in
int3
test
cmp
lahf
std
jbe
pop
imul
sbb
inc
ja
rcll
dec
std
scas
outsb
roll
xchg
shll
scas
int3
std
scas
jg
mov
imul
pop
dec
aad
push
in
push
testl
in
stos
lret
cmp
scas
add
jmp
pop
fsub
mov
out
jae
inc
insb
scas
outsb
push
mov
jmp
outsb
outsb
xchg
cmpsl
cmc
stos
cmp
clc
addr16
mov
int
loopne
sbb
xchg
cmpsl
subl
test
adc
sti
pop
adc
and
mov
das
mov
jmp
imul
jmp
mov
popa
mov
addr16
in
or
imul
int3
test
mov
popl
add
lea
ret
push
daa
stos
movsb
cmp
sub
or
clc
outsl
inc
lahf
jl
pop
jo
pusha
mov
loop
xor
fnstsw
lahf
mov
lods
notb
icebp
mov
jl
cmp
cmp
xchg
sub
fldcw
xor
test
popa
pop
imulb
xor
pop
imul
clc
sahf
or
dec
cmc
cltd
movsl
xor
fsubs
add
mov
loopne
dec
aas
cmpsb
push
je
mov
test
in
push
pusha
int
std
mov
xchg
imul
cmp
insl
out
shrl
sahf
fwait
mov
adc
fxch
xchg
insb
icebp
popa
inc
rcl
ja
jmp
jae
ss
sub
out
lods
mov
jae
popf
mov
scas
adc
out
pop
outsb
popa
jns
clc
and
xchg
jbe
add
cmpsl
shl
loopne
fwait
jmp
loopne
adc
jbe
xchg
mov
sbb
mov
jae
in
fisubs
xchg
ds
out
loop
add
pop
mov
push
loopne
repnz
mov
xor
mov
int3
sub
loope
movsb
jno
inc
jo
push
fistpll
pop
push
jae
hlt
lahf
xor
dec
cld
pushf
push
add
pushf
ja
pop
pop
push
lods
hlt
call
push
lods
test
lock
mov
outsb
das
lock
je
icebp
out
dec
lret
jmp
dec
push
push
lock
push
insb
aam
push
es
or
mov
imul
callw
mov
sub
cmc
repz
dec
add
out
lea
hlt
lods
fprem
push
add
mov
clc
ja
pop
outsl
mov
bound
xor
lods
push
mov
idiv
stos
push
dec
push
scas
xlat
dec
jp
addb
xchg
sub
sub
add
mov
stc
call
inc
xchg
mov
xchg
pop
arpl
hlt
int3
sbb
aam
and
dec
loope
mov
jne
inc
add
xlat
sbb
dec
outsb
sahf
negb
inc
je
in
jne
dec
add
mov
jbe
inc
stos
jae
lea
xor
loopne
mov
test
divl
sbb
dec
jne
cltd
test
shlb
sbb
dec
dec
cltd
out
cmp
sbb
out
mov
xorl
outsb
loop
xor
xlat
imul
mov
imul
addr16
call
xchg
or
hlt
outsl
sub
dec
or
daa
movsb
pop
loopne
jnp
pop
xor
cld
jg
lock
out
scas
dec
in
sbbl
ds
cmp
test
call
jns
pushf
jae
aam
in
xchg
scas
fwait
dec
ds
rcrl
bound
jg
jg
mov
dec
jmp
dec
mov
les
addr16
adc
sti
jae
push
or
jg
out
pop
dec
lea
jae
add
test
movsl
fucomp
scas
jae
jg
push
push
addr16
cld
pop
and
out
mov
xchg
fsubr
jae
push
adc
lods
cmc
dec
out
int
std
fadds
inc
pop
int
jle
jg
in
xchg
fsubs
int
call
xlat
je
and
movsl
stc
call
sbb
jle
jmp
out
gs
test
or
pop
test
in
imul
mov
sbb
pop
out
out
scas
and
iret
data16
dec
add
jno
aas
jae
add
lods
cld
jnp
test
or
outsl
cli
pop
lods
cmc
rcl
outsl
cmpl
outsb
outsb
imul
shlb
jge
clc
push
dec
sub
outsl
sbb
and
jg
insl
push
bound
je
push
pop
add
int
sbb
pop
sbb
hlt
ret
fmul
movsl
stos
cmp
dec
adc
rep
dec
inc
stos
add
in
je
lea
mov
push
push
cmpsl
inc
adc
add
or
cmpsl
shl
cmpsb
cmpsl
outsl
jno
cmp
stos
adc
xor
dec
loop
sub
outsb
jae
into
jg
inc
movsb
or
sub
shrb
in
lret
sbb
lods
dec
mov
mov
push
scas
inc
in
aas
addr16
jg
lret
stos
aaa
dec
and
ja
dec
push
dec
icebp
pop
dec
insl
dec
mov
inc
out
push
pop
cmp
outsl
mov
stc
push
sub
test
notb
jg
call
cmpl
pop
sub
es
arpl
test
add
out
addr16
xchg
xchg
dec
stos
add
inc
cmpsb
inc
inc
hlt
inc
dec
iret
stc
sbb
xchg
imul
add
mov
in
mov
jmp
push
into
imul
xor
in
dec
idivb
or
mov
lret
in
jl
jae
movb
out
dec
in
je
jae
movb
out
dec
in
mov
in
enter
mulb
icebp
dec
daa
out
in
mov
inc
dec
shlb
insb
push
lret
or
outsl
enter
lods
xor
pop
clc
pop
xchg
dec
mov
cmpsl
in
stos
mov
cmp
scas
in
mov
xchg
xchg
in
cmp
push
xchg
imul
std
or
cli
jae
xchg
arpl
dec
mov
in
out
jp
out
mov
dec
sti
jae
mov
mov
xchg
dec
jmp
pop
jnp
add
dec
mov
mov
ss
or
out
in
pop
jl
aad
std
dec
sahf
es
imul
or
imul
dec
jge
incl
scas
sub
jmp
imul
in
jle
loop
mov
xor
pop
scas
dec
loop
incl
fsubs
dec
clc
outsb
pop
or
pop
imul
insl
fsubrl
dec
jecxz
lods
cli
inc
push
ficomps
outsb
cmpsb
ja
clc
inc
stos
je
or
std
mov
dec
add
ljmp
push
sub
cwtl
repnz
je
iret
pop
mov
mov
sbb
cwtl
lods
mov
cmp
int3
push
dec
jge
adc
add
repz
inc
push
jnp
gs
dec
mov
adc
xchg
int3
fs
xchg
cli
outsl
je
xchg
movsb
or
pop
test
sbb
lock
sub
int3
int3
pop
popa
in
adcl
add
or
lcall
and
test
or
mov
ljmp
sub
sbb
push
enter
dec
dec
nop
lock
jno
mov
pop
pop
lods
out
push
and
cmp
lcall
and
mov
aad
sub
ss
scas
push
dec
outsb
ret
mov
push
cmp
lods
mov
daa
imul
cmpsb
test
sbb
xchg
add
jmp
mov
dec
bound
mov
in
mov
mov
hlt
add
and
shufps
fs
jmp
outsb
pop
mov
enter
pop
or
xchg
rolb
mov
outsl
add
stos
mov
push
pop
jne
subb
jno
out
inc
add
jg
out
pop
push
add
fs
inc
in
insl
outsb
fucomip
lock
mov
hlt
stc
cmp
mov
scas
jmp
jns
or
aad
cs
dec
arpl
loopne
fsubs
jmp
das
inc
jmp
fsubrp
outsl
outsb
stc
add
mov
lock
sub
push
and
mov
mov
out
jle
mov
test
and
jns
cli
imul
js
fistpll
xor
imul
jp
inc
inc
data16
pop
pop
cs
hlt
fildll
addr16
mov
cmc
dec
jno
pop
decb
ja
xchg
rcl
add
es
out
xchg
mov
outsl
hlt
leave
insb
icebp
jae
dec
scas
adc
roll
repz
xchg
push
or
add
cmp
fnstenv
dec
cmp
xchg
mov
cs
jae
cltd
dec
js
xor
cmpsl
mov
mov
dec
mov
imul
mov
or
pop
lahf
adc
cmovle
cmpb
jns,pt
dec
or
popf
lret
cwtl
and
inc
lods
or
shll
sub
push
std
and
test
js
adc
popl
shrb
add
call
add
add
xchg
mov
mov
or
out
mov
data16
sbb
out
imulb
les
mov
mov
int3
es
hlt
in
add
loope
pop
repnz
or
bound
jae
xor
orb
insb
jno
add
fwait
mov
mov
shll
dec
pusha
xchg
pusha
shll
sub
mov
xchg
cltd
xlat
addr16
cmc
sbb
adc
xor
aas
dec
out
test
xchg
mov
adc
sub
dec
and
and
adc
bound
outsb
dec
dec
or
ljmp
lea
push
jae
outsl
mov
push
in
mov
add
jmp
scas
push
mov
cld
jmp
dec
mov
imul
insl
out
xorb
mov
add
inc
jg
in
lcall
loop,pn
cmpsl
and
popa
scas
lock
sub
jg
call
in
adc
mov
sub
jne
lods
ljmp
lock
int
and
xchg
adc
mov
xor
sbb
mov
cmp
iret
nop
dec
xchg
arpl
add
in
andb
mov
subl
insb
mov
jp
leave
in
mov
mov
xchg
or
iret
gs
popa
dec
push
int3
xlat
rcrl
dec
sub
jnp
mov
sub
inc
roll
add
jge
xchg
int
push
out
mov
lcall
pusha
mov
xor
and
cmc
hlt
outsl
inc
pop
mov
mov
push
and
xor
das
outsl
xor
and
dec
mov
jmp
xor
sub
fdivl
push
cmpl
rorb
shr
aad
xchg
xor
ljmp
adc
dec
and
je
add
xor
push
fdivrl
cmp
add
js
mov
pop
hlt
subb
jb
jae
jno
loop
jp
push
bound
mov
ljmp
int3
mov
scas
or
push
loopnew
lods
push
call
dec
dec
call
jbe
shlb
in
ret
daa
outsb
test
xlat
pop
outsb
sub
add
or
cmpsl
dec
xor
xchg
dec
vxorpd
jnp
cmp
xchg
dec
add
in
jnp
insb
jb
cs
mov
add
loop,pn
xchg
add
pop
adc
jmp
sub
mov
test
movsb
dec
dec
les
dec
outsl
xchg
jp
movsl
or
xchg
out
imul
cmp
fs
dec
fstpt
mov
fcoms
push
mov
aad
mov
push
push
dec
dec
fsubl
push
jbe
jg
push
adc
inc
add
sahf
jne
lret
pop
shrb
popf
outsb
pop
add
inc
jmp
sti
adc
in
or
fists
addr16
push
xlat
cmp
dec
sub
mov
dec
loop
addr16
sahf
in
jnp
push
or
pusha
or
int
jae
pop
xor
rorb
mov
add
test
inc
ljmp
sub
push
sbb
fmuls
sahf
negb
gs
mov
xchg
jl
fsubrl
sub
in
jmp
add
nop
mov
fucomp
cwtl
dec
into
clc
dec
mov
mov
and
mov
pushl
lret
shlb
mov
mov
call
cmp
jg
fwait
decb
cmp
test
dec
outsl
lods
fisttpl
mov
inc
ret
aas
int3
out
inc
xor
jns
lock
xchg
mov
jge
filds
adc
jmp
ljmp
repz
push
into
lahf
ret
sub
xorb
dec
add
sbb
cmp
or
xor
cmp
in
lret
mov
mov
mov
lods
jne
bound
popf
mov
sbb
dec
add
adc
clc
into
addr16
lods
pop
inc
xor
outsb
cmc
jp
movsb
xchg
test
sbb
mov
shr
imul
test
test
jae
adc
cmp
cwtl
lret
jl
scas
fnstenv
xchg
and
dec
insb
cmpsb
test
insb
in
arpl
in
call
test
das
aas
adc
xor
lret
jle
bound
push
or
dec
mov
xor
or
sbbl
inc
add
sub
ja
idivl
out
enter
lret
mov
xchg
jecxz
loopne
outsb
call
jle
or
and
pop
imul
ljmp
out
mov
jg
shll
cmp
outsb
sbb
mov
or
add
jp
call
push
cmpl
arpl
adc
cld
ret
test
cs
in
in
imul
jno
out
scas
rolb
ljmp
add
adc
outsb
and
ja
jnp
sub
cs
adc
movsl
sbb
lret
pushf
and
test
jae
insl
dec
aas
jg
dec
cs
decl
dec
xchg
inc
filds
data16
xor
add
fisubs
mov
cmp
add
adc
dec
aas
jns
mov
jmp
mov
imul
pop
test
or
xor
call
insb
outsl
ja
call
mov
jnp
sub
es
ret
xchg
mov
xor
dec
jb
roll
data16
mov
dec
mov
les
inc
mov
insb
imul
dec
jle
cwtl
xchg
nop
mov
fs
cmpsl
xor
cld
hlt
mov
popa
sub
mov
mov
leave
mov
in
ja
call
jne
iret
iret
ret
adc
leave
push
or
int
dec
insl
xor
imulb
test
xchg
jbe
loop
je
jp
mov
and
inc
sti
mov
and
push
mov
outsb
das
push
xor
jmp
pop
or
enter
jns
jae
in
xchg
mov
scas
sub
insb
divl
es
jg
scas
sub
inc
jle
and
and
shll
pop
lods
xor
test
insb
push
fidivs
xchg
mov
dec
sbb
ret
mov
ficoml
out
xor
mov
mov
mov
dec
call
ljmp
int3
add
outsl
popf
lcall
mov
dec
nop
sub
adc
outsb
xchg
push
adc
jge
cmpsl
in
pusha
les
jnp
and
mov
test
out
jae
outsl
cmp
xchg
jnp
sub
mov
xor
loop
mov
test
out
ja
or
popa
jo
shll
jle
sbb
jae
mov
sahf
inc
mov
ss
cmc
insl
addr16
xlat
out
insl
cmp
inc
mov
stc
movsl
cltd
shl
mov
sarl
xor
imul
add
jno
call
dec
jecxz
loope
call
xor
mov
mull
imul
jo
fucomip
cmpsb
pusha
mov
enter
fwait
pushf
jnp
fcomps
aad
jne
imul
out
sahf
shrl
cwtl
std
andb
ret
add
mov
jg
xchg
pop
jns
sti
mov
cld
adc
pop
push
loop
jbe
lock
es
outsl
in
jge
iret
in
adcb
fwait
icebp
add
lea
lods
mov
iret
push
jae
hlt
insb
xor
stc
xor
cs
adc
jns
mov
mov
mov
mov
push
xchg
outsl
lods
insl
mov
push
jl
push
clc
outsl
sbb
add
and
dec
pushf
ljmp
inc
not
fsubr
push
mov
push
jmp
inc
cmpsb
lds
js
leave
in
jge
test
hlt
popf
mov
and
insl
mov
push
test
or
push
scas
scas
pop
in
stos
in
cmpsb
and
xchg
frstor
sti
mov
sbb
dec
sub
add
add
sub
xor
ret
inc
sbb
lock
ret
sbb
jnp
pusha
clc
jb
cmp
dec
cmp
xchg
mov
and
daa
aaa
mov
jp
inc
shlb
loope
daa
mov
mov
jl
mov
aas
mov
les
ljmp
sub
mov
in
mov
loope
call
insl
aam
and
lcall
lods
inc
dec
mov
enter
or
or
fmuls
cld
faddl
sub
xor
jae
or
push
ret
push
jp
imul
into
addr16
fnstsw
aas
or
mov
insb
icebp
inc
lods
imul
dec
dec
xchg
cmp
inc
sub
jbe
aam
jno
xchg
push
popa
clc
mov
inc
cld
mov
mov
lock
mov
out
ja
out
add
push
mov
outsl
lock
int3
add
mov
stc
addr16
lea
add
push
outsl
jmp
jg
aas
aas
dec
push
into
loope
daa
xchg
cs
inc
in
out
mov
popa
mov
int3
adc
pushf
jo
pop
outsl
pop
mov
mov
sbb
ds
mov
ja
hlt
cmp
sbb
sub
ds
rorb
aas
mov
pop
ds
mov
ja
hlt
mov
inc
ds
mov
ja
aam
sbb
dec
sub
in
dec
test
adc
dec
push
jle
xor
cmp
dec
mov
loope
fucomip
outsb
mov
cmp
mov
jb
cmpsb
xor
fmuls
lret
xchg
loope
add
push
aam
dec
jl
sbb
into
mov
dec
fcoml
loop
inc
popa
sarb
rorl
sbb
fidivrs
cs
out
outsb
mov
movsl
pop
jmp
jle
gs
jp
fistpl
out
adc
inc
pusha
cmp
mov
fbld
iret
and
out
sbbb
push
aaa
movsb
xchg
repnz
mov
adc
sbb
test
call
inc
sbb
out
xchg
cmp
sbb
repz
insb
addr16
pop
push
push
mov
loop
push
sbb
cmp
dec
clc
test
mov
in
and
cwtl
adc
rolb
push
xchg
cs
push
jno
xor
lock
add
xchg
jb
adc
push
lret
pop
mov
xchg
jmp
dec
dec
jb
mov
lahf
push
pop
xchg
imul
outsl
into
outsl
inc
rcr
xchg
cli
aam
xor
xchg
inc
fcmovb
fwait
mov
mov
scas
les
dec
cmp
stos
pusha
scas
push
and
sti
xchg
jnp
psrad
bound
push
sbb
fldt
and
adc
xchg
and
sbb
push
in
insl
nop
ret
daa
lock
addb
mov
jb
mov
fmuls
adc
inc
jle
aaa
int3
into
adc
out
scas
xchg
fwait
push
es
adc
jg
jge
jb
js
add
mov
jmp
pop
out
cwtl
imul
addr16
lahf
and
shrl
push
cmpsl
out
adc
aas
push
loop
andb
dec
mov
push
popa
mov
mov
mov
out
push
jg
pop
gs
and
test
cmpb
fiadds
arpl
push
mov
mov
add
int
xor
push
dec
adcb
dec
lock
wbinvd
orb
outsb
scas
fidivrl
out
incb
mov
or
fucom
push
push
lahf
or
lcall
ja
sub
add
inc
add
pop
mov
add
adc
fs
shlb
push
out
pusha
xor
mov
sub
dec
cli
cs
loop
and
cmpsl
lock
jge
dec
aaa
pop
push
ret
sbb
ret
lea
ja
lahf
dec
xor
shlb
imul
adc
mov
pushf
and
mov
imul
fcompl
es
out
movsb
push
arpl
into
cmp
call
and
into
mov
adc
icebp
imul
jae
xchg
dec
push
xor
popa
sub
int3
push
inc
jecxz
fcmovnbe
arpl
fwait
rcrb
xor
push
pop
ja
ret
pop
or
in
jno
jae
mov
fsubrp
lock
dec
ret
lret
repnz
pop
loope
mov
sbb
outsb
aam
add
push
dec
fsubrs
icebp
xchg
jae
insb
jb
aas
movsb
or
push
mov
add
mov
cmp
ja
push
gs
dec
shrb
push
mov
mov
lea
in
out
sbb
sub
dec
jp
inc
adc
xor
lea
sub
shrl
jae
mov
cmpsb
fisttpl
sub
inc
rcl
in
xor
imul
test
nop
pop
jmp
jmp
push
dec
dec
inc
ja
fs
flds
es
jmp
and
in
adc
jbe
int3
jecxz
mov
int
xchg
bound
lods
nop
xor
test
xchg
out
fiadds
sub
sbb
ficoms
enter
xor
push
ret
lock
cmp
and
imul
lret
jle
rcrl
mov
test
sbb
lea
movsl
xchg
jg
repnz
call
stos
in
jae
scas
lods
das
lea
and
mov
adc
xchg
movsb
outsl
adc
push
into
push
stos
cwtl
inc
jb
mov
jno
sti
outsb
mov
mov
mov
scas
and
test
push
cmp
dec
in
bnd
aam
xchg
adc
fwait
lahf
mov
adcl
pusha
push
ja
dec
push
loopne
cld
push
sub
mov
jae
inc
jno
xor
inc
xchg
push
dec
pop
sbb
dec
sbb
mov
pop
push
das
not
sbb
push
cmpsb
aad
lods
jl
xor
fmull
and
xchg
ret
jle
adc
jl
xchg
xor
jne
out
mov
mov
xchg
fs
outsl
or
lahf
insb
jmp
nop
js
dec
cmp
xchg
inc
lock
mov
test
lret
inc
pop
in
jbe
outsb
mov
outsb
adc
iret
add
sbb
and
aam
xor
jno
fwait
inc
ds
dec
dec
inc
jo
adcb
sahf
cmp
sub
data16
push
pop
es
xchg
sbb
dec
sbb
mov
pop
shrl
ret
outsl
scas
push
lods
popf
adc
std
or
add
inc
pop
test
or
outsb
jmp
mov
test
jne
out
jl
dec
enter
ja
seta
outsl
lds
sarb
mov
outsb
jmp
in
mov
adcl
test
push
aad
stos
fld
loope
into
dec
ja
fmull
data16
lods
jb
sub
test
ss
jns
arpl
add
xchg
call
lods
dec
jmp
into
sahf
scas
xchg
jle
dec
xchg
mov
gs
imul
test
sub
adc
lahf
loope
pop
std
and
fistps
jle
pop
push
pcmpeqb
mov
xchg
sti
mov
outsb
gs
lea
mov
mov
mov
and
xor
mov
loopne
std
dec
jle
dec
outsb
inc
and
lock
pop
cmpsl
testl
push
ja
push
iret
imul
outsl
add
fcomps
ljmp
mov
out
pop
push
addr16
adc
mov
in
aam
xchg
add
mov
sub
jae
inc
loop
call
iret
mov
outsl
mov
jno
mov
and
xchg
and
leave
cld
push
push
fwait
stc
fwait
push
call
push
loop
jg
sbb
rcll
test
xor
push
mov
cltd
cmp
cmc
pop
adc
test
mov
ljmp
jbe
loopne
movsl
and
lcall
insb
call
jns
jae
aad
mov
mov
popa
push
movsb
rolb
jo
inc
out
mov
outsb
or
jo
loop
add
out
in
inc
add
xchg
out
mov
dec
and
inc
jo
outsl
inc
les
jl
push
out
aam
xchg
adc
scas
gs
in
loopne,pn
mov
fmuls
dec
mov
lods
lock
std
mov
enter
inc
es
or
insb
xor
clc
jno
pop
xor
outsl
outsl
ds
jbe
jecxz
inc
aad
stos
dec
cmp
scas
icebp
into
cld
arpl
lock
ljmp
out
icebp
mov
test
dec
or
add
cltd
mov
test
fmuls
lods
shlb
popa
test
dec
sub
test
imul
and
ljmp
nop
pop
cli
mov
lock
es
in
hlt
lods
scas
push
orb
sbb
outsb
add
shlb
lea
xchg
js
mov
pop
inc
mov
in
out
jmp
out
dec
loop
test
add
cmpb
clc
loope
roll
inc
jle
in
imul
ret
push
orb
stos
sbb
pop
lahf
cltd
dec
push
fwait
scas
lods
movd
cmp
sbb
shll
sub
shlb
lock
dec
aaa
orb
xchg
dec
cmp
test
out
insb
xchg
dec
insb
cs
mov
loopne
or
outsl
ror
dec
orl
dec
mov
sbb
out
fsub
repz
sahf
push
xchg
jne
outsl
inc
insb
lds
sub
sub
les
inc
jno
jnp
test
xor
gs
nop
scas
out
jecxz
inc
add
ret
std
mov
ljmp
iret
pop
mul
add
cmpsl
inc
cwtl
inc
inc
pop
inc
cs
in
cmpsb
out
gs
outsl
pusha
mov
addl
jge
inc
adcb
jle
cld
out
mov
aad
pushf
jl
ljmp
pop
sti
imull
dec
out
dec
inc
call
bound
sub
ja
outsb
movsb
in
out
movsl
test
lret
outsl
sub
into
out
cmp
and
cmp
xchg
adc
repnz
inc
das
repz
sub
lods
das
and
punpckhwd
arpl
sub
shrb
repz
push
out
mov
bound
mov
outsl
jmp
idiv
orl
imul
add
pop
jno
imul
fs
jle
sub
bound
xor
lock
clc
and
mov
jge
dec
cmc
xchg
or
xchg
mov
ret
imul
ret
dec
push
jmp
shll
mov
add
inc
jne
addr16
enter
inc
outsl
das
xchg
in
fisubrs
loopne
push
out
jg
lock
dec
aad
out
movsl
jecxz
sbb
repz
ds
jmp
enter
add
fs
arpl
dec
call
jle
add
rcl
scas
jp
in
mov
pusha
push
insb
adc
and
ja
hlt
jmp
mov
gs
inc
push
arpl
bound
add
push
jnp
repnz
add
je
sbb
outsl
mov
lods
dec
inc
jb
inc
fildll
add
test
out
movsl
push
int3
loop
and
arpl
jmp
and
push
pop
push
add
jle
xor
stos
xlat
xor
sbb
mov
push
ja
ret
bound
aam
add
add
sbb
inc
in
mov
enter
push
sbb
inc
inc
cld
dec
cld
int3
out
mov
in
cmc
mov
dec
rol
in
insb
xor
sarb
mov
stc
mov
push
lock
cmp
add
ficoms
out
xor
ja
adc
in
fsub
inc
fs
sbb
jno
repz
out
scas
push
idivb
push
mov
pop
dec
and
cmpsl
out
sti
or
or
dec
inc
pop
jmp
int3
aaa
cli
pusha
push
lret
sbb
mov
paddw
lods
loopne
sbb
clc
jecxz
loope
popa
fs
jnp
push
xchg
arpl
imul
ja
fcmovu
add
xor
lcall
add
cmp
add
dec
popa
inc
jmp
call
cmc
jnp
loopne
push
jbe
data16
testl
hlt
scas
loop
loop
jmp
fdivrs
loope
ljmp
sub
and
and
sub
jge
popa
pop
nop
jnp
dec
jg
sbb
jns
loop
movsb
js
push
out
and
pop
jmp
ret
stc
outsl
ljmp
cmp
jecxz
sbb
jbe
out
inc
outsb
mov
cmpsb
insl
jns
in
mov
cmp
dec
sti
pop
std
lods
jl
imul
out
jnp
jg
shll
icebp
ficoms
cli
lods
dec
js
icebp
sbb
pop
std
out
cmovle
outsb
fdecstp
repz
xlat
loope
scas
in
bound
add
push
xor
jbe
cmp
jo
sbb
shlb
jg
cli
icebp
clc
ljmp
daa
push
dec
outsb
into
out
mov
cmp
pop
push
pusha
jnp
in
jno
cld
outsl
call
in
outsl
jge
insb
lcall
lahf
rcrb
in
addr16
jp
cld
mov
jb
outsl
loope
scas
data16
daa
add
cli
dec
outsl
jp
dec
dec
out
lock
call
mov
inc
mov
dec
jle
into
femms
jbe
cmpsb
enter
inc
mov
cld
push
jnp
hlt
sub
subb
addr16
arpl
push
outsb
fidivl
sbb
repz
jb
repnz
push
arpl
clc
dec
jge
out
movsb
testb
das
jecxz
loop
sahf
push
out
cmp
cli
dec
js
jle
data16
dec
decl
mov
push
cmc
pop
and
jb
and
dec
pop
outsb
jnp
nop
std
out
movsl
dec
je
es
cmpsb
push
sub
cmp
ror
lock
cmpsl
loop
jp
mov
jp
add
dec
sub
stc
outsb
inc
cli
mov
sbb
rol
hlt
jno
incb
jp
jge
sbb
js
jecxz
out
in
in
bound
dec
iret
out
or
cmp
dec
jns
rcrl
insl
insb
pop
loop
jmp
dec
push
mov
mov
loop
loop
outsb
mov
data16
insl
mov
xor
add
pop
divb
out
dec
jno
cmp
arpl
hlt
jmp
testb
mov
fsub
or
sub
out
jno
mov
fmuls
push
repnz
xchg
repz
mov
sarl
clc
in
pop
les
in
pop
loopne
push
out
add
popa
std
arpl
repz
pop
out
mov
ja
push
in
lea
ljmp
outsl
push
icebp
outsl
scas
sub
pop
push
negl
dec
call
scas
shr
mov
pop
or
add
out
sbb
cmp
cmp
jle
insb
in
in
xor
jle
in
jle
call
arpl
test
insl
dec
outsl
addr16
in
bnd
dec
in
call
out
add
movsl
jle
popa
popf
out
mov
insb
outsl
mov
push
jmp
ljmp
push
mov
addr16
push
decb
in
outsb
stc
pop
test
mov
das
xor
js
xchg
dec
mulb
xor
loope
icebp
popa
xor
out
loope
in
cmc
dec
outsb
push
pop
jbe
in
das
insb
dec
call
fs
arpl
pop
mov
jo
mov
jns
mov
out
add
jle
sub
lods
testl
loope
jmp
inc
mov
push
ja
mov
mov
jno
push
out
jecxz
insb
inc
xorl
gs
fimuls
jmp
inc
scas
cs
ds
xlat
push
call
push
mov
ljmp
pop
cmp
xchg
push
cmp
push
loopne
stc
cmp
xor
push
cltd
ja
ja
lds
push
test
inc
scas
mov
lods
adcl
add
stos
lahf
dec
fsubrp
ret
pop
fldt
insl
lahf
mov
aas
repz
enter
push
das
rorb
mov
sarb
dec
jmp
arpl
mov
orl
in
gs
dec
out
xchg
cli
outsb
jge
test
repz
jmp
or
jle
popa
push
sbb
xorb
jge
and
jns
in
imul
xchg
mov
divl
popa
mov
push
loope
xor
xor
xor
adc
xor
push
push
jb
jmp
ljmp
add
out
pop
fs
jecxz
insl
push
and
dec
addr16
and
jmp
push
dec
scas
in
adc
jle
dec
cmovle
mov
mov
shrb
xchg
jae
call
fstps
and
jg
nop
out
inc
add
rorl
dec
out
pop
outsb
and
add
push
pop
dec
jns
insl
enter
in
in
jmp
pop
dec
outsb
out
cmp
inc
test
cmc
jmp
addr16
push
sti
xchg
jle
jge
dec
out
in
loope
je
enter
enter
dec
daa
das
imul
call
int
adc
stos
dec
out
cli
jp
sti
dec
std
clts
into
test
in
insl
lods
sbb
divb
out
scas
inc
in
cli
movl
and
insb
sbb
test
in
jmp
inc
jae
add
cltd
dec
stos
outsl
out
xchg
stos
inc
jle
inc
addr16
aad
jno
mov
fsubl
insb
arpl
mov
imul
mov
add
adc
add
adc
aas
jg
cmpsw
dec
jo
add
mov
jne
xorb
icebp
adcb
scas
jns
cmpb
push
pop
xchg
mov
mov
scas
cltd
or
data16
mov
push
adc
std
int3
jne
sahf
adcb
xorl
test
adc
dec
and
sahf
fcoms
std
jb
outsl
loopne
and
ffree
outsb
arpl
xchg
inc
mov
jg
and
push
jmp
pop
icebp
ret
push
out
popf
dec
lret
aaa
jae
in
and
nop
adc
aas
fisubl
jno
inc
mov
inc
jo
jg
fcomp
mov
in
clc
push
pop
jb
shl
inc
dec
pop
mov
jg
jge
jle
mov
sub
add
pop
out
pop
adcb
scas
movsl
cwtl
mov
sub
cli
push
xor
push
cld
test
int3
aas
bound
pop
dec
mov
dec
outsl
outsl
outsb
notb
ljmp
mov
fisubs
movsw
shll
std
mov
cs
jae
mov
data16
and
ret
jle
mov
dec
into
add
pop
cs
imul
mov
cld
inc
inc
push
mov
jmp
push
notb
pop
mov
test
sub
loopne
ficomps
mov
cmpsl
cmp
xchg
aam
je
push
mov
jbe
pusha
clc
repnz
dec
push
dec
int
mov
or
xchg
pop
mov
icebp
sub
nop
push
push
addr16
repnz
lods
fistpll
iret
bound
push
xor
sti
arpl
mov
jns
dec
cmp
dec
xor
bound
mov
dec
bound
fwait
movsl
and
sti
adc
mov
jns
sbb
pop
pop
dec
mov
jne
jae
aam
sbb
daa
sub
xor
mov
lock
stc
xchg
mov
into
sub
addl
leave
dec
rep
dec
sbb
rep
shll
shll
out
cmpsb
jne
pop
outsl
mov
dec
mov
addr16
mov
sahf
cmp
bound
in
insb
mov
fcompl
mov
dec
sub
rcl
dec
cs
adc
repnz
cmp
inc
xorl
enter
rcll
sti
sub
push
lcall
movsb
fs
dec
loope
lahf
dec
std
fbstp
in
mov
and
adcb
mov
and
mov
outsb
movsl
push
sbb
setp
inc
out
jae
jae
mov
add
mov
int
test
arpl
cmpsb
lock
enter
cs
das
and
mov
inc
cmp
in
aad
call
hlt
push
mov
imul
pushf
outsb
cld
imull
cmpsb
sbb
movsl
xchg
add
pop
mov
xor
push
shll
aas
call
push
andb
jl
cmpsl
or
icebp
adc
mov
pop
ret
inc
cmp
dec
outsl
sub
outsl
or
test
loop
cmpsl
jmp
lock
add
jg
lock
lods
addr16
pop
jns
jne
stos
rcl
jno
fildll
or
cmp
sbb
sub
fldenv
cmp
pop
outsb
outsl
fidivrl
int3
jae
mov
sbb
outsb
stos
jae
add
mov
mov
adc
mov
jne
push
addr16
loope
inc
out
xor
cltd
das
jnp
push
int
mov
shl
rolb
lahf
das
imul
jp
in
jb
push
inc
pop
arpl
call
loope
in
xchg
mov
ret
dec
in
iret
movsl
sub
out
or
jecxz
adc
jae
pop
fldenv
jmp
pop
rcrb
scas
outsl
adc
adc
xchg
sti
jae
xchg
in
in
aas
addb
xchg
push
iret
in
jne
movsb
xor
mov
cld
rorb
jg
push
into
jno
shr
hlt
mov
fsubrs
jbe
test
push
jns
sub
dec
sub
add
cs
inc
lret
subb
popa
outsl
das
ret
icebp
fwait
dec
inc
dec
int3
pop
out
or
int3
xchg
loope
inc
repnz
repnz
dec
jge
cmp
in
jbe
add
les
inc
inc
jnp
sbb
int
out
push
stos
shl
jnp
push
or
mov
mov
lds
iret
clc
repnz
cltd
iret
sbb
sbb
dec
js
jbe
shlw
mov
out
subb
cmpsb
dec
ja
push
ret
loop
rorb
out
pusha
jae
mov
jnp
cmp
ret
imul
pusha
cmp
mov
and
pop
fnstenv
pop
inc
jnp
subl
movsl
enter
pop
vcvtsd2si
jb
gs
mov
cli
and
icebp
fwait
cld
pop
mov
dec
mov
add
mov
outsl
cld
daa
pop
cmpsl
mov
ja
push
push
xor
or
std
in
cmp
out
hlt
lds
test
push
cmp
cmp
sub
insb
inc
dec
lods
test
mov
mov
les
outsl
or
adc
inc
xchg
popf
add
icebp
jne
mov
dec
lods
push
cmp
loopne
mov
mov
jp
icebp
loopne
and
in
add
int
mov
imul
cwtl
loop
dec
sub
dec
dec
insl
adcb
xchg
or
dec
mov
inc
xorl
int
adc
add
mov
gs
icebp
call
lock
mov
push
popa
mov
cwtl
inc
push
mov
and
nop
jae
pop
std
cmpsb
lds
xchg
fidivl
icebp
sahf
insl
pop
cld
movsb
arpl
loopne
scas
inc
add
xchg
adc
imul
jmp
xchg
pop
jg
incl
out
ret
outsl
xchg
push
mov
mov
inc
outsl
push
push
cmp
in
inc
jle
push
outsb
push
cmpsb
jg
hlt
cmp
test
mov
adc
adc
out
fsubrs
adc
cli
insb
outsb
push
out
loope
dec
fcompl
test
lret
cs
call
rolb
pop
adc
or
mov
loope
xchg
loope
stc
insb
decl
sbb
push
jbe
in
enter
xchg
mov
mov
testl
dec
outsl
mov
inc
and
aam
dec
hlt
stc
and
sbb
in
jae
push
call
adc
gs
fistpll
ljmp
cld
mov
ja
gs
pop
mov
outsl
dec
lods
jbe
loopne,pt
xorl
pop
scas
sub
lock
inc
pop
js
jmp
es
insb
hlt
out
jp
cmp
std
xchg
pop
scas
xchg
loopne
mov
iret
jmp
adc
mov
test
inc
daa
inc
or
nop
or
and
sbb
lcall
lret
iret
mov
mov
outsl
aad
test
dec
test
fwait
cld
out
pushf
out
jmp
mov
lock
lfs
ror
mov
pop
jne
dec
dec
push
outsl
aad
insb
aad
push
or
mov
into
inc
movsw
dec
daa
in
lock
sub
das
stos
insb
fbstp
and
stos
dec
hlt
loop
mull
aas
sbb
sbb
and
mov
cmp
stc
test
xchg
icebp
sbb
movsb
pop
jae
cld
pop
dec
sbb
push
mov
push
out
movl
cmp
jecxz
dec
in
jle
call
or
sub
or
testb
fcoms
jae
xor
shll
mov
arpl
imul
fnstcw
or
in
aaa
push
mov
les
ljmp
stc
stos
jns
es
outsb
into
dec
xor
sbb
xor
jp
xor
jp
jae
add
orb
lods
sbb
pop
xchg
lock
inc
out
imul
jp
lods
and
cmpsl
dec
cld
add
ret
dec
cmp
clc
xor
pusha
clc
icebp
and
mov
mov
mov
loop
and
jno
es
xor
or
push
scas
scas
jne
push
add
pop
arpl
jl
sub
pushl
fisttps
lods
jb
inc
pop
movsb
ficompl
sbb
add
mov
inc
rcrl
out
add
mov
adc
shl
dec
fsubrs
mov
inc
enter
ss
pop
mov
ret
jae
fwait
jns
push
int3
dec
inc
repnz
mov
pop
inc
insl
pop
and
imul
shrl
loopne
pop
insl
sub
xor
mov
sub
sbb
sub
xchg
ljmp
das
mov
push
inc
cmpsb
in
jnp
push
inc
shr
inc
int3
lret
and
mov
sub
outsb
cmp
cmpsl
push
adc
stos
in
jno
sub
dec
sub
movsl
in
dec
loopne
push
outsb
pop
cmp
pop
insl
push
out
call
inc
test
jnp
fcom
sahf
jmp
push
cld
cmp
jno
movsb
dec
dec
repnz
je
scas
outsl
cltd
dec
bnd
aaa
out
mov
data16
mov
lock
nop
jns
int
imulb
cmpsw
lock
call
clc
push
cmp
nop
inc
dec
push
sbb
int
lock
jle
out
repz
dec
mov
out
xor
cwtl
fwait
jle
dec
pop
push
push
push
and
mov
shll
fbstp
and
rcrl
jp
push
pushf
aas
fiadds
outsl
addb
loop
cwtl
cmp
jmp
cwtl
int3
mov
fwait
jae
or
lods
inc
in
jge
dec
or
xor
cld
bound
push
loopne
jno
xchg
jb
mov
sbb
inc
imul
outsl
jp
hlt
jb
dec
mov
ja
pop
push
mov
fucomip
data16
call
dec
push
sbbl
enter
js
mov
sti
test
pop
loop
repnz
push
imul
jecxz
insl
test
sub
cmp
dec
inc
movsl
adc
test
add
popf
popa
es
mov
cmp
fdivp
mov
lret
adc
cmp
mov
adc
ja
addl
cmp
xor
pop
sbb
adc
sub
in
mul
xchg
mov
or
out
sub
cmc
jp
addr16
mov
ret
adc
nop
mov
mov
dec
sub
push
pop
mov
jno
sbb
addr16
clc
lret
push
jecxz
pop
adc
out
in
mov
out
mov
loope
mov
mov
xchg
add
cmpsb
xor
out
jne
bsf
jae
mov
add
js
or
jae
sbb
clc
pop
scas
mov
loop
icebp
loop
lods
sar
jnp
dec
and
fisubrl
insb
mov
inc
mov
mov
jno
stc
xchg
push
and
fcompl
mov
dec
pop
add
loopne
jbe
fwait
push
fcmovu
mov
dec
ljmp
dec
ret
icebp
xchg
jno
cli
in
inc
popf
pusha
inc
mov
mull
and
push
xor
or
ja
push
xor
lock
loopne
jg
shl
movsb
xor
sahf
xor
dec
jb
dec
cwtl
out
lret
xchg
pop
sar
je
jl
mov
cmp
rorb
jns
mov
pop
ret
je
lds
ds
scas
loope
out
dec
nop
icebp
jge
pop
or
push
in
scas
sbb
outsl
dec
and
outsl
inc
or
sbb
adc
xchg
loope
jl
out
sbb
rcll
insl
ljmp
ret
xor
xchg
jle
ficoml
xor
out
cmp
adc
addr16
and
sub
cmpsb
stos
scas
dec
clc
nop
pop
pop
sub
add
push
inc
jns
jns
stos
cmp
inc
cmp
pop
inc
mov
xor
int3
mov
dec
loope
pop
daa
inc
jmp
insb
mov
and
jae
pop
inc
cmp
cmpsl
pop
xchg
inc
movsb
sub
and
or
and
mov
add
rclb
pop
int3
hlt
xor
gs
lcall
mov
in
inc
gs
sahf
push
scas
sub
hlt
ret
outsb
insb
sub
cmpxchg
into
cmp
ja
int3
sub
outsb
xchg
or
jne
and
xchg
outsl
cmp
push
scas
scas
mov
aas
pop
and
fisubrs
or
jge
cltd
mov
mov
mov
stc
jl
inc
js
outsb
insb
or
int
jg
push
std
mov
jns
movsl
sbb
hlt
jge
imul
std
inc
rcrl
clc
mov
ret
sbb
ja
jbe
jge
jp
push
pop
aad
mov
lods
jge
inc
sar
rcrl
cmpsb
cltd
dec
sub
jno
jns
jae
mov
ror
je
adc
pushf
in
pop
sub
mov
adc
push
sbb
inc
inc
add
incl
add
aam
and
xchg
push
fwait
mov
sub
mov
fstl
decl
test
fbld
pop
scas
push
jno
jecxz
loop
les
fnstenv
cwtl
mov
testb
cmp
jge
cmp
outsb
loope
test
lcall
inc
test
cli
in
inc
dec
movsl
gs
mov
inc
addr16
jne
fneni(8087
or
ss
dec
jb
out
nop
mov
jp
rorl
cs
mov
mov
add
lds
push
pushf
or
rclb
gs
loope
js
xchg
cs
daa
and
in
lcall
jno
std
or
popf
mov
ds
nop
popf
out
loopne
ds
das
mov
and
adc
xchg
mov
jl
loop
stc
inc
js
jae
cmp
lret
ret
loope
add
out
jg
pop
data16
aaa
repz
mov
jae
lea
pop
inc
push
lock
in
lock
mov
shrl
in
pop
jp
ret
fnsave
xor
lods
dec
sub
xchg
jmp
push
dec
and
js
jae
stos
int
fs
loop
add
dec
cmp
dec
mov
sbb
mov
push
cmp
push
mov
mov
lods
push
enter
and
outsb
rcrb
fidivl
lea
xchg
or
dec
sbb
cltd
imul
outsb
pushf
add
xchg
cli
cmp
push
sbb
dec
dec
in
adc
data16
cmp
mov
cld
dec
and
cld
mov
cli
or
pop
sbb
dec
mov
push
insb
adc
ret
outsl
jns
xor
lahf
sub
pop
shrd
jne
add
cmp
jmp
jge
cmp
std
jae
cmp
mov
outsb
xlat
jmp
arpl
nop
loopne
imul
das
or
movsl
stc
stos
jg
sbb
mov
dec
push
loope
mov
aam
dec
push
dec
jno
aam
popa
jae
cld
call
ljmp
or
mov
clc
dec
repz
insb
sbb
int
pop
jecxz
jae
cmpsl
sbb
hlt
mov
idivl
inc
jo
imul
dec
cmc
cmp
xchg
xor
int3
enter
adc
lock
or
aas
inc
push
cmp
mov
in
and
out
push
loopne
stos
xchg
xchg
lock
ja
mov
jecxz
fistl
mov
mov
xor
sbb
jnp
sbb
mov
adcl
aad
pop
mov
ror
ss
shrl
insl
es
cmc
pop
out
jns
mov
add
lods
repz
and
outsb
iret
jnp
jmp
mov
add
jae
jl
lods
mov
int3
addb
int3
lock
jl
vphsubwd
mov
and
pop
ljmp
mov
jno
jge
loope
xchg
inc
or
push
ss
and
scas
and
inc
jle
and
inc
out
pop
or
lock
sbb
test
mov
shl
cmp
jno
mov
enter
out
push
int
xor
repz
fmuls
test
mov
or
data16
aas
jbe
xchg
fwait
dec
je
sub
cmp
mov
xor
sub
lods
mov
into
in
mov
cmpsl
out
xor
je
cs
adc
bound
jne
les
nop
imul
sarb
movsl
mov
hlt
enter
pop
dec
gs
insb
pop
inc
test
xchg
out
ficompl
add
outsb
adc
out
xor
mov
cmp
es
pushf
push
cmp
test
xchg
jae
loop
lahf
stos
inc
gs
sbb
addr16
jae
xor
cmp
xchg
int
xor
jge
test
cli
int3
push
adc
cwtl
fisubl
add
outsl
lods
data16
jl
mov
arpl
lock
and
fsubr
jle
xchg
icebp
xor
pop
or
add
dec
dec
push
sub
scas
cmc
sbb
push
outsb
fstpl
call
sbbb
pop
or
jno
jl
mov
scas
or
or
fmull
cmp
mov
fldl
xlat
cmp
mov
jg
mov
inc
cmpsl
mov
jae
frstor
ret
aas
sbb
in
mov
loopne
mov
jbe
lahf
mov
xchg
in
cmp
das
lahf
pop
inc
sbb
fsubrl
jns
sahf
xor
dec
xchg
pop
jb
jae
jmp
pop
fsubl
mov
jb
ret
pop
jg
sbb
add
in
pop
sbb
ljmp
imul
out
dec
and
incb
jg,pn
out
mov
and
jmp
imul
pop
ja
test
outsl
cmp
int3
mov
cmp
js
add
sub
ljmp
rcrb
push
jne
dec
imul
or
lock
and
sub
cli
jae
sub
std
pop
insl
inc
repnz
imul
cld
xor
mov
sti
sti
out
dec
dec
out
rorb
pop
sub
loopne
mov
mov
mov
jle
jae
jne
push
sbb
jae
mov
jl
adcb
xchg
icebp
mov
pop
test
sbb
stc
icebp
movsb
aad
sub
insb
out
ss
shlb
imul
cmp
pop
xlat
rcr
dec
daa
xlat
adc
fs
jle
and
push
popf
aam
pop
jb
mov
sbb
xchg
jmp
adc
sbb
pop
sub
stos
add
inc
int3
jb
xchg
push
add
or
inc
lahf
or
insl
jae
icebp
movsl
pop
dec
jmp
les
push
sbb
cmp
sahf
sbb
mov
xor
inc
sbb
aaa
pop
test
sahf
inc
mov
xor
pop
outsl
arpl
in
les
sub
jae
inc
rclb
mov
jg
sarl
pmullw
and
iret
mov
popf
mov
fcomps
test
add
dec
test
repnz
cld
cmc
xor
cltd
std
cmp
aad
mov
fcomps
lcall
dec
jl
decb
out
stos
xor
ret
xchg
cmp
xchg
push
dec
xchg
outsb
scas
dec
mov
cli
xor
sti
hlt
jns
cmpsl
inc
jg
data16
bound
pusha
dec
in
dec
xchg
ja
mov
pop
inc
repz
sti
jnp
mov
shrb
in
iret
sbb
out
inc
fstpl
pop
mov
jl
add
jno
pop
lea
mov
ret
ret
dec
or
iret
inc
lret
or
in
lods
repz
push
std
gs
mov
ret
lods
xchg
cmp
push
mov
jg
sbb
rcr
mov
jno
cmpl
jg
pop
push
sbb
jmp
mov
add
mov
push
movsl
cwtl
popf
out
dec
popf
mov
xchg
jle
adc
cmp
lods
dec
ret
stos
std
leave
mov
fwait
xlat
fs
aaa
roll
fisubs
or
pop
pop
fildll
aam
inc
xor
insb
xchg
cli
out
pop
xchg
dec
shr
xchg
test
dec
arpl
daa
fwait
jno
in
aaa
pop
inc
fwait
sub
int
sub
mov
adc
cmp
dec
mov
js
icebp
aam
xchg
fmuls
xor
push
ret
cli
jecxz
push
mov
mov
pop
mov
mov
icebp
scas
push
daa
mov
std
lcall
adc
and
mov
push
pop
in
mov
mov
add
cmpsb
sub
inc
jb
mov
in
mov
xlat
xchg
filds
and
mov
adc
jo
sarl
sti
sbb
dec
cmp
cmpsl
mov
jne
cmp
push
or
cmp
incb
dec
cmp
lret
ret
aad
jl
push
pop
mov
xlat
test
out
xchg
stos
jb
out
hlt
mov
test
adc
inc
mov
aaa
add
lds
pop
mov
pop
and
int
repnz
sbb
shlb
xchg
jle
aas
jb
dec
xchg
repz
gs
dec
jae
test
cmp
sbb
mov
and
subl
movsb
jne
sub
hlt
mov
loop
jp
rcll
imul
cmp
in
ljmp
xor
fnstenv
jnp
xchg
icebp
pop
pop
fdivrs
mov
lahf
jle
jmp
daa
jno
inc
lods
pop
imul
icebp
movsb
ljmp
das
cmc
add
add
lcall
adcb
pop
jne
fwait
xchg
imul
shll
or
sbb
jg
mov
rorb
jae
incb
push
inc
add
loop
stos
sar
in
add
ljmp
xor
ja
pop
ja
push
shlb
ret
mov
daa
sbb
and
push
call
aad
insl
sbb
mov
cmp
gs
mov
bts
adc
lds
mov
inc
cs
cmp
push
mov
jmp
push
cmpsb
mov
jge
sbb
es
cmpsl
outsb
mov
frstor
sbb
xchg
orl
movsb
nop
jp
mov
leave
cmpl
add
and
fdivrl
or
std
scas
cli
dec
orb
nop
mov
dec
mov
call
xlat
imul
inc
push
in
xlat
lods
jno
int3
adc
jp
push
addr16
test
mov
call
pop
out
sub
xchg
loop
in
ficoml
lcall
dec
in
jno
out
int3
addr16
clc
or
int
jp
popa
in
pop
outsb
fs
lods
inc
xor
clc
out
out
xor
push
test
mov
out
addr16
jno
cmpsb
jae
in
fldt
push
mov
jae
lea
sub
mov
test
imul
lods
mov
adc
jae
cmpsl
lret
xchg
add
pop
mov
push
dec
or
in
icebp
inc
dec
jge
cli
popa
idivb
popf
outsb
sub
lcall
cmp
loope
push
xor
popf
mov
dec
push
mov
pop
push
mov
movsl
cmp
rorb
out
test
movsl
mov
sub
sbb
push
sub
or
push
cmpsb
or
jae
fwait
push
gs
movsl
fisubl
fsubr
jecxz
es
xchg
mov
loopne
lcall
inc
push
jmp
mov
pop
mov
ja
testb
add
cli
arpl
repnz
hlt
jl
push
repz
jno
dec
xorb
js
lahf
xchg
mov
jae
xchg
adc
imul
in
out
scas
cmc
sub
cld
movsb
sub
out
dec
sub
and
mov
cli
test
int
aam
sbb
pop
mov
cs
cmp
or
clc
push
xchg
ds
lock
sub
in
je
push
popa
push
cli
popf
shrb
test
aas
push
xchg
xchg
arpl
call
clc
leave
pusha
jae
push
sarb
sub
xor
dec
jb
and
out
jg
sbb
shl
fisubrs
in
outsl
imul
inc
pop
pop
push
movhps
clc
push
scas
scas
into
xor
lock
mov
imul
dec
lret
insl
sub
jecxz
mov
addb
cmpl
data16
push
test
in
int
push
mov
mov
push
xchg
mov
and
outsb
mov
cld
push
and
lcall
lods
pop
mov
mov
push
in
ja
inc
jmp
imul
adc
mov
iret
mov
jge
mov
arpl
addb
in
leave
push
lcall
mov
jb
test
rcll
sti
stos
xchg
push
imul
call
mov
hlt
mov
add
out
push
les
inc
pop
mov
out
fdivl
and
push
jl
insl
pop
mov
push
or
add
push
cwtl
pop
mov
dec
sahf
sarl
sub
outsl
adc
xor
out
iret
nop
xor
xchg
jmp
daa
out
jne
cli
inc
pop
mov
loop
rcr
adcb
insl
test
insb
ret
dec
push
subb
xchg
jl
xor
call
inc
mov
sbb
jno,pn
jbe
and
xchg
shlb
movsl
incl
ljmp
out
inc
jl
test
and
insw
jae
xlat
mov
xor
lods
aaa
in
inc
mov
stc
sub
out
unpckhps
inc
cmp
fdivrs
sub
push
dec
pop
stos
mov
xor
mov
mov
mov
cmp
pusha
inc
loop
inc
mov
jg
push
mov
push
into
adc
stos
or
out
out
mov
insl
shlb
jge
int
dec
rcr
out
outsl
cmpsb
out
outsl
inc
addr16
jl
movsl
jae
pop
bound
sub
sbb
rcrb
cli
and
fcoml
add
push
gs
jb
mov
lahf
jmp
mov
sub
xor
loope
aad
dec
mov
loope
lahf
cli
and
nop
adc
scas
clc
sbb
fidivrs
push
loop
lret
dec
mov
nop
mov
jb
rcrb
out
outsl
xor
cmp
cli
sub
lods
lcall
cmpl
push
movsb
repnz
loopne
lcall
nop
fbld
jae
ret
sub
jb
test
add
scas
push
cltd
scas
mov
sub
dec
push
cld
lret
push
test
jbe
shrl
jge
pop
les
movsl
mov
ljmp
stc
movsl
daa
sbb
xor
inc
xor
ds
mov
sub
addr16
dec
test
push
js
data16
lea
out
xchg
outsl
ljmp
mov
stos
fcoms
mov
add
push
out
scas
jle
mov
xchg
mov
mov
pop
or
ljmp
es
testb
mov
inc
cmp
in
mov
mov
lret
mov
test
push
iret
data16
and
lahf
iret
jle
daa
mov
negb
lahf
and
inc
xor
pop
scas
mov
jecxz
inc
cmp
jne
cli
and
add
jp
ljmp
add
pushf
test
repz
and
push
ffreep
xchg
xchg
mov
cmpl
addr16
nop
xchg
add
imul
call
mov
arpl
jae
or
fimull
pop
je
nop
pop
mov
aas
mov
pusha
lods
inc
dec
insb
lds
cmpsb
mov
aad
xor
mov
jecxz
fisttpl
mov
sbb
out
xor
add
mov
enter
repz
lock
add
mov
lock
test
add
cmp
repnz
decl
jle
jg
push
fcoml
inc
aas
push
and
mov
xchg
int3
add
mov
push
sbb
cs
xchg
mov
iret
xor
fwait
imul
fdivs
inc
push
or
add
mov
dec
dec
dec
scas
rclb
aad
mov
sub
xchg
xor
inc
rorb
dec
cwtl
pop
and
dec
jecxz
mov
cmp
inc
xchg
xor
mov
xchg
ret
stos
dec
mov
in
in
shrl
arpl
or
add
int3
inc
fildll
sbb
imul
push
test
or
add
test
or
push
jnp
divb
es
popa
movsl
jne
push
sbb
jb
xchg
mov
add
ret
lret
ds
xchg
arpl
stos
int3
arpl
rcl
push
clc
ret
add
mov
sbbb
lock
stos
or
sub
xor
mov
push
outsl
or
cld
pop
mov
cmp
out
repz
ja
sbb
addb
movsb
xchg
xor
fildll
push
pop
sub
jecxz
enter
and
and
mov
or
lds
pop
je
and
icebp
lahf
clc
cmc
and
jp
hlt
das
jae
hlt
and
xabort
adc
addr16
push
test
add
pusha
push
cmpsb
ret
aas
addr16
ja
rorb
cmpsl
hlt
out
lret
aad
mov
inc
and
jno
or
mov
shlb
jno
or
mov
dec
loope
outsl
out
inc
jno
dec
nop
jbe
call
test
xor
pop
imul
je
insb
and
pop
dec
sbb
insb
mov
mov
mov
orl
outsl
mov
xor
and
dec
add
ret
insb
int3
mov
add
mov
shlb
cmpsl
divl
data16
sbb
or
rorb
push
jg
addl
or
stos
subb
mov
mov
or
mov
mov
and
push
cmc
and
test
fisubl
dec
jmp
push
scas
xchg
outsb
jne
scas
push
jg
nop
repnz
xor
in
or
inc
out
lods
outsl
bound
loopne
sbb
and
adc
outsl
sbb
clc
outsl
shr
and
aad
test
mov
push
and
dec
outsb
je
xor
pusha
or
mov
jno
hlt
rcrl
adc
xchg
pop
lock
jns
int3
movsl
test
mov
lret
jle
fsubs
mov
ror
fidivl
pop
cmp
cli
xchg
mov
scas
fisubrl
pop
pusha
pop
and
xchg
ss
iret
je
mov
and
pop
mov
loop
mov
fwait
je
jp
inc
loop
daa
cmp
scas
mov
outsb
add
addr16
mov
jg
stos
test
ret
stc
std
inc
inc
inc
fdivl
or
push
mov
mov
test
in
shlb
jmp
test
fwait
dec
leave
scas
outsb
lret
dec
inc
sub
jb
aaa
sub
jle
fldl
mov
pop
push
sub
mov
cld
xchg
aaa
mov
imul
xlat
mov
add
add
loopne
sbb
push
mul
push
sti
jp
push
cmp
insl
jb
sbb
adc
dec
or
nop
mov
pop
in
out
xlat
or
popa
je
pop
in
xor
pushf
insb
outsl
cmpsb
mov
outsb
out
mov
sub
sahf
mov
and
cld
fucomip
dec
mov
aaa
add
mov
sub
mov
or
fidivs
mov
arpl
mov
nop
xor
js
mov
adc
cmp
and
out
add
xor
fbstp
and
fldt
pushf
cli
push
gs
push
sbb
into
out
inc
dec
push
clc
bound
add
gs
xor
mov
sahf
divb
push
test
out
lods
outsb
mov
or
push
dec
mov
dec
mul
or
xorl
divb
push
shrl
shlb
sub
fwait
jno
loop
xor
cld
clc
les
jge
mov
dec
out
insl
xchg
psubusw
or
xor
out
adc
lret
loope
sbb
mov
aad
or
jno
lea
dec
aaa
lds
mov
enter
gs
mov
or
jmp
test
jae
pop
push
movsb
lock
roll
out
lods
add
loop
icebp
add
insb
lock
push
add
or
add
insb
dec
cmpsb
add
clc
cltd
add
insw
jae
add
mov
push
imul
insl
jno
cmp
jae
mov
xchg
bound
sub
inc
popa
ret
jecxz
ja
push
cld
les
popa
jae
mov
in
in
xchg
push
icebp
scas
movsb
jle
jmp
andl
movsl
out
and
sbb
push
cli
iret
jae
dec
inc
mov
outsl
cli
xchg
sbb
and
sub
xchg
push
add
insb
shrb
or
lahf
int
mov
or
in
loope
dec
lods
out
cltd
mov
sub
js
add
lret
jle
and
cld
lcall
ds
sbb
jo
adc
jae
sbb
jae
lret
sub
jae
mov
shlb
enter
aaa
mov
and
sahf
enter
ja
add
push
pop
daa
sub
pop
jmp
jecxz
idivb
jnp
jp
mov
loopne
mov
xor
lahf
inc
xchg
test
cmpb
push
xor
jp
lods
aam
sbb
mov
insl
nop
cmp
sbb
xchg
in
in
lret
mov
enter
addr16
jl
and
jmp
pop
movsl
mov
and
test
or
mov
loop
mov
int
dec
ret
faddl
xchg
fs
xchg
fidivs
shrl
movsb
loope
jns
add
cmp
mov
loop
cli
mov
cmpsb
icebp
adc
enter
jmp
lods
enter
out
ss
insb
mov
divl
jl
pop
cwtl
dec
jae
imul
test
clc
mov
ds
and
insl
les
lods
sub
jbe
push
xor
ljmp
push
mov
mov
stos
mov
ds
ja
or
insb
shll
push
jbe
cli
dec
call
inc
inc
es
ja
mov
arpl
int3
xor
daa
mov
outsl
in
loope
fwait
gs
sahf
xor
stos
add
stos
dec
xor
out
jno
and
inc
insl
and
pusha
add
adc
cmpsb
mov
in
enter
fldenv
fldenv
ja
pop
call
sbb
add
mov
std
out
jno
insb
sbb
leave
inc
es
aas
mov
pop
pushf
jle
leave
adc
inc
jns
call
es
test
pushf
sahf
int3
stc
mov
add
sbb
sub
pop
and
aaa
mov
xlat
imul
outsl
jno
ret
mov
inc
add
orl
sbb
imul
lret
iret
jecxz
test
daa
jg
mov
ja
gs
mov
add
stc
pop
xchg
addl
iret
mov
push
jmp
mov
mov
pop
in
add
pop
out
jg
pop
sub
out
inc
jecxz
or
mov
cmp
inc
lods
sbb
pop
push
jecxz
pop
daa
mov
out
cmpsb
fldenv
dec
xor
push
sub
in
icebp
lock
xchg
sub
int3
test
outsb
int
or
jb
loop
cmpsb
loope
repz
addr16
mov
jns
scas
dec
push
sbb
bound
jecxz
in
xchg
ret
add
out
imul
mov
jl
dec
jae
das
and
scas
loop
dec
out
and
scas
into
cmpsl
or
lock
push
add
das
fsubs
push
test
sahf
pop
pop
lock
fsubs
jno
lock
enter
outsl
in
pop
movb
mov
gs
lcall
xorl
dec
roll
hlt
jne
xlat
mov
push
loopne
outsb
mov
cmp
or
xchg
mov
gs
loop
cld
sbb
jns
xor
fnsave
push
sub
xor
dec
adc
push
psllq
add
out
mov
in
subl
dec
mov
cmp
stos
shll
roll
clc
outsl
xor
jno
fdivs
outsb
jno
jnp
aas
lret
enter
add
outsb
out
adc
imul
cwtl
shlb
xchg
loope
jbe
push
push
dec
adc
jmp
mov
cmp
ret
lahf
jmp
mov
loopne
repnz
push
fcompp
lret
icebp
xor
inc
js
cmp
pop
repnz
mov
fcoml
mov
cmp
ljmp
in
jecxz
pop
xchg
inc
sub
mov
into
loop
dec
ja
jnp
pushl
inc
or
test
insl
mov
loope
rcl
jle
imul
push
loopne
lds
int3
rcll
add
sub
pusha
cmpsl
inc
arpl
mov
inc
cmp
mov
imul
push
inc
stos
outsb
cmc
ror
out
enter
push
lods
or
mov
jl
sub
jae
push
mov
lds
mov
enter
out
cmpsb
fwait
pusha
push
call
jae
xchg
xor
inc
fdiv
jae
cmp
push
sbb
sbb
dec
outsl
aas
in
sub
nop
fs
xchg
add
add
call
pop
jae
pop
xchg
into
cltd
push
dec
insl
jae
cmp
jno
jecxz
pop
lods
xchg
lret
lock
ljmp
or
js
xchg
sarb
pop
out
outsl
and
jle
stos
mov
hlt
lret
sbb
jno
in
rclb
in
int
push
aaa
xchg
sub
push
add
lcall
std
jl
dec
xchg
cmp
lea
jmp
pop
push
mov
mov
cltd
jl
xchg
ret
test
ss
jae
dec
testl
mov
adc
mov
sub
outsb
mov
dec
mov
dec
int3
test
sbb
add
or
in
jp
lods
out
mov
insb
mov
test
mul
mov
add
cli
pushf
jns
sbb
mov
imul
loope
dec
ljmp
fisubl
int
shr
nop
adcb
cs
rolb
xlat
mov
cmpsb
mov
out
and
repz
int3
call
fcmovne
adc
and
cmp
sub
insl
rcll
imul
lock
dec
imul
push
ljmp
or
push
out
lods
mull
push
jecxz
stc
sti
xchg
icebp
stc
int3
pop
mov
subb
subb
rolw
lds
adc
testb
rolb
pop
ret
push
xlat
movsl
stos
fwait
inc
pop
mov
xor
pop
sbb
and
sbb
out
rorb
rcl
loop
cmp
ds
in
fisttps
sub
jmp
jbe
mov
in
push
push
mov
inc
cmp
push
lods
ret
mov
push
jo
inc
jae
jae
inc
fcoml
mov
xchg
mov
data16
jno
add
xchg
enter
dec
jmp
icebp
push
test
and
mov
imul
mov
int3
adc
or
ret
pop
add
lods
std
pop
data16
repz
cmpsl
outsl
xchg
mov
repz
xchg
out
xchg
stos
xchg
repz
imul
into
repnz
pop
test
idiv
dec
or
in
push
out
pusha
mov
and
imul
sbb
or
out
jge
gs
in
jo
pop
arpl
push
mov
dec
sub
xchg
add
imul
jmpw
lahf
jg
jmp
and
xor
stos
repnz
fbld
push
dec
xchg
sbb
mov
sub
or
scas
hlt
jae
fisubrs
ret
mov
mov
lock
call
jl,pn
adc
jp
popf
dec
pop
ja
mov
std
fisubs
mov
lock
cld
xchg
sbb
xor
into
jecxz
test
jmp
clc
hlt
add
inc
test
add
sub
sub
repz
fnsave
pop
dec
xchg
in
je
adc
repz
mov
subl
fs
stos
push
dec
in
or
es
jecxz
xor
mov
bound
call
jge
shr
mov
push
add
pop
sub
lds
fstl
cwtl
mov
mov
or
push
inc
daa
enter
jae
inc
mov
ret
out
pop
inc
dec
mov
mov
xor
cli
push
push
in
cmp
mov
les
addr16
lods
fs
rol
dec
cltd
out
lods
cmp
jle
push
ss
fldl
pop
push
lock
insb
add
test
inc
inc
ljmp
cmpsb
stos
jge
mov
in
insb
fstps
xchg
insl
lods
pop
mov
les
adc
outsl
dec
mov
inc
ja
add
xchg
add
cmc
lock
fidivs
mov
push
xor
xchg
xor
or
push
add
dec
hlt
cmp
outsl
icebp
pop
mov
es
xchg
xchg
icebp
inc
mov
add
push
pop
fstl
push
sbb
adc
sub
jge
cmp
pop
mov
add
sub
cli
cld
sbb
dec
loop
scas
addr16
cmpsb
lock
mov
pop
out
and
pop
jl
and
fidivs
xchg
rcl
inc
mov
cmc
loopne
or
lock
in
mov
pop
popa
imul
insl
or
dec
mov
inc
outsl
mov
jmp
rorl
in
repnz
imul
cmpsl
add
jecxz
and
scas
jmp
int3
pop
scas
repnz
in
pop
rclb
dec
sbb
out
out
push
mov
sti
ret
jg
pop
jbe
cltd
call
clc
ret
jmp
outsl
lahf
pop
push
in
clts
push
int3
out
adc
add
call
dec
lods
insb
push
push
aas
call
jne
gs
aad
sub
ja
movsl
dec
or
fildll
loopne
pushw
mov
sbb
mov
lock
pop
inc
cmp
mov
out
mov
sarb
addl
gs
lock
rcrl
insb
dec
sub
jmp
push
insl
inc
mov
mov
popf
movsl
add
push
jbe
call
xchg
leave
fildll
mov
imul
lods
ss
dec
scas
decl
outsl
mov
outsl
mov
push
jb
movsl
ficoms
inc
add
outsl
push
add
jl
inc
arpl
jmp
scas
sub
sub
out
jbe
pop
repnz
dec
das
sbb
dec
das
pop
mov
add
sbb
call
add
lahf
xor
sbb
jecxz
cs
jmp
jecxz
adc
fsubrs
inc
gs
loope
mov
loop
pop
push
inc
fistpl
mov
inc
inc
dec
add
idivb
pop
push
jmp
out
cmp
push
push
fdivrl
dec
lcall
inc
and
cmc
xchg
sub
pop
je
jmp
sbb
std
aas
orl
imul
loopne
add
inc
dec
lahf
ret
pop
or
push
shrb
lock
in
out
jg
in
insb
pop
add
icebp
sbbl
hlt
out
test
xchg
loopne
push
mov
pop
and
cmc
aas
push
bound
mov
and
xor
daa
out
xor
or
loopne
in
shlb
mov
pushl
jae
and
xchg
dec
test
jae
test
xor
out
repnz
xchg
mov
mov
scas
mov
nop
insl
and
ret
lret
data16
cvttps2pi
notb
sbb
clc
push
out
push
ret
mov
cs
inc
pop
out
adc
gs
xchg
inc
imul
sub
jae
loop
cltd
lret
pop
dec
and
xchg
xchg
mov
cmp
outsb
ret
inc
jg
inc
inc
int
outsb
push
out
jb
jmp
push
mov
push
gs
jb
jne
fsubs
bound
loop
clc
push
xchg
test
push
add
or
jmp
adc
cli
inc
add
inc
imul
dec
push
cmp
cmpsb
daa
pop
cwtl
pop
ljmp
and
mov
addl
or
sahf
mov
jge
dec
add
dec
xchg
gs
and
mov
add
mov
rcll
xchg
mov
push
xchg
pop
push
jae
cmp
cs
out
push
jl
lea
jge
and
sbb
sbb
pop
jg
aam
sub
push
ljmp
jbe
stc
mov
scas
cmpsl
jae
add
in
sbb
cs
mov
loope
imulb
hlt
mov
lock
jns
push
dec
adc
or
jmp
push
push
bound
or
sbbl
shll
aad
ljmp
mov
lcall
ja
stc
hlt
popa
jmp
dec
hlt
jge
lahf
sub
inc
int
xchg
mov
lahf
aam
jp
xchg
shrb
sub
dec
mov
fildll
mov
cs
repnz
ret
mov
dec
pop
icebp
mov
mov
xor
in
lods
orl
pop
scas
pop
sti
movsl
adc
add
loope
dec
jns
mov
nop
mov
push
scas
loopne
sbb
adc
aam
outsl
gs
loop
popf
call
xor
sub
jne
cmp
lock
shll
arpl
clc
out
xor
pop
mov
sarl
outsb
test
push
xlat
push
daa
bound
gs
mov
xchg
es
jg
call
or
icebp
jmp
xor
bound
xor
mov
rorl
stos
inc
daa
test
dec
mov
mov
enter
leave
mov
cmc
add
add
ja
addr16
add
push
jmp
mov
shrb
in
ljmp
xlat
in
cmpsl
movsl
pmullw
repz
mov
incb
lods
ljmp
mov
push
cmp
les
scas
pop
std
out
xchg
les
outsl
adc
addr16
lret
mov
jl
push
cli
repz
xor
lock
mov
test
or
stos
sub
outsl
or
insb
in
lods
and
jae
mov
clc
lcall
fstp
aam
outsl
cmp
test
out
xor
add
mov
inc
jnp
xchg
lods
daa
outsb
rcrl
xor
jg
jp
shll
mov
ljmp
cmp
hlt
jbe
repz
imulb
adc
or
cwtl
mov
or
sahf
sub
xchg
ret
lods
mov
int3
lock
lret
les
mov
ret
sti
pop
loope
cmp
mov
mov
test
inc
sbb
sub
xchg
gs
leave
std
mov
stc
in
iret
pop
cs
lret
or
inc
out
mov
jbe
int
xor
cli
mov
stc
dec
adc
bound
lods
jl
sub
loop
movntps
lret
jae
rcll
adc
xchg
repz
int
push
ljmp
cmpsl
in
ljmp
stos
and
mov
int
inc
clc
out
dec
into
adc
popf
push
sub
addr16
jae
fdivs
jle
mov
ret
out
jne
dec
test
sub
sti
xchg
mov
out
xchg
ljmp
imul
cmp
scas
cmpsl
call
mov
add
or
out
loop
mov
in
bound
mov
mov
lock
push
xchg
dec
mov
xorb
leave
jge
icebp
std
je
adc
mov
mov
or
or
add
mov
bound
mov
add
inc
xchg
mov
pop
mov
out
jmp
jnp
inc
testl
inc
mov
pusha
jg
mov
add
sahf
sbb
lahf
jg
xchg
je
inc
in
xor
xor
mov
and
pop
popf
insl
xchg
out
jnp
stos
inc
push
push
and
sbb
cltd
xor
cwtl
mov
jae
cmpsl
xchg
fwait
mov
add
daa
sbb
ja
adc
loopne
xchg
out
or
inc
adc
push
int3
js
xor
pop
scas
mov
jge
iret
loop
pop
and
lock
mov
jg
xchg
inc
sbb
adc
ss
and
jle
cmp
xorl
mov
push
sbb
cmp
jmp
loop
jae
int3
ret
cmp
add
pop
scas
push
mov
jge
data16
das
mov
xchg
je
icebp
fdivrl
xchg
xor
mov
cmpsl
icebp
std
ret
mov
xor
push
sub
xchg
jnp
out
xlat
xor
repz
test
or
adc
std
sbb
sarl
das
or
and
pop
dec
out
cmpsl
mov
pop
mov
mov
dec
pushf
mov
jl
nop
push
sbb
dec
mov
insl
or
inc
pop
dec
inc
add
dec
mov
ret
pop
xchg
mov
test
cwtl
cli
push
mov
stc
inc
inc
xor
push
cmc
jne
rcr
sub
sub
mov
adc
out
icebp
cmp
mov
fnstsw
jmp
xchg
cmove
pop
inc
mov
xor
movsb
xor
insb
inc
ficoml
pushf
insl
inc
pop
add
aam
sub
sbb
pop
or
mov
out
jmp
insl
imul
jecxz
xlat
jb
mov
movsl
scas
call
test
adc
pop
or
mov
xchg
dec
popf
adc
xchg
outsl
jmp
addr16
clc
dec
jb
stos
dec
mov
mov
mov
push
in
jb
inc
pop
iret
dec
push
aaa
mov
aam
lds
pop
scas
push
pop
mov
mov
leave
outsl
pop
add
lock
mov
jg
hlt
dec
lods
fimuls
adc
sbb
jns
outsb
cli
lea
shll
mov
and
xchg
pop
mov
pop
push
pop
outsl
imul
jg
dec
dec
out
lea
int
fisttps
inc
sbb
shrl
jmp
jb
mov
xchg
mov
inc
jb
int3
gs
outsb
addr16
inc
pop
inc
mov
jb
pop
jmp
pop
sahf
aad
sub
lea
cmpsb
outsl
in
push
cmpsb
ret
stos
fwait
aas
sbb
in
lcall
dec
push
xchg
sbb
add
and
adc
inc
ret
sub
enter
int
xor
dec
loopne
xor
cmp
xchg
jl
fldenv
test
mov
mov
gs
mov
andl
jmp
aad
fnsetpm(287
call
incl
pop
fldenv
outsb
out
mov
jno
cmp
inc
xchg
repnz
lahf
mov
sarb
push
call
inc
push
mov
cmp
lahf
or
sub
cmc
insb
popa
cmpsl
xor
add
xchg
jae
out
addr16
push
pop
sarb
test
iret
icebp
sbb
scas
sub
push
call
sub
imul
sbb
insl
mov
add
out
cmc
push
popf
or
push
pop
stos
dec
scas
xor
mov
mov
ror
scas
out
inc
push
mov
hlt
inc
insb
movsb
sbb
jae
shlb
or
sub
inc
movsb
cmp
iret
fcmovne
jmp
cltd
sub
mov
adc
dec
cmpsb
adc
in
in
sub
sub
repnz
mov
sti
xchg
add
mov
sbb
popf
push
lds
insl
int
aas
mov
lods
je
scas
mov
out
mov
xor
fsubrs
mov
frstpm(287
hlt
add
xor
mov
gs
mov
es
inc
loope
imull
adc
jb
push
stc
xchg
loopne
adc
or
fldl
shll
and
daa
imul
jmp
push
mov
cmp
popf
adc
les
fisubs
pop
movsb
mov
or
and
imul
data16
sub
loopne
int3
mov
sub
add
mov
jmp
int3
outsb
xor
mov
jl
jo
test
stos
out
push
or
in
push
push
sbb
sbb
xchg
and
dec
lock
les
aam
and
outsl
les
dec
ret
jle
pop
jno
insl
sub
lock
push
jg
pop
jbe
hlt
add
dec
cmpsb
cmpsl
outsl
add
jno
jmp
push
inc
dec
outsl
test
dec
push
lods
sbbb
sub
dec
push
cmp
outsb
enter
ja
clc
sbb
or
mov
xchg
dec
imul
in
pop
aaa
pop
daa
dec
pop
js
lock
call
in
imul
dec
pop
outsl
add
and
stc
pop
ljmp
movsb
or
out
stc
or
movsb
adc
lret
sub
fcomps
mov
dec
ja
lret
stos
mov
mov
sub
dec
sub
imul
popf
dec
lock
inc
pushf
or
mov
je
testl
push
pop
lock
imul
jecxz
fucomi
icebp
insl
inc
add
pop
scas
lds
jge
cli
insb
loop
out
and
test
enter
dec
lea
pop
incl
int3
add
jns
cli
cmp
in
lret
nop
or
push
sbb
call
mov
push
nop
jbe
mov
or
sbb
test
mov
sti
stc
xchg
xor
clc
sub
and
imul
pop
pop
outsb
push
out
mov
dec
enter
sahf
fsubrl
out
dec
xchg
add
push
add
xor
sbb
jno
pushf
mov
jnp
testb
sbb
ss
sub
or
mov
jno
xor
push
int3
out
mov
or
xchg
in
inc
fsubrs
mov
jae
cmp
popa
rolb
outsl
fwait
subb
jb
xchg
jno
sbb
xchg
fiaddl
mov
adc
mov
outsl
jmp
add
xchg
aam
sub
dec
mov
mov
fadds
sbb
mov
mov
mov
outsl
or
sahf
push
mov
outsl
sbb
mov
repnz
cmp
pop
push
out
inc
insb
mov
repnz
adc
popa
sbb
std
in
fsubrs
clc
jle
out
adc
jno
xchg
outsl
jae
dec
ds
cmc
mov
pop
or
mov
mov
outsb
addr16
repnz
mov
xchg
pop
dec
in
jno
sti
dec
lock
jae
mov
cltd
cwtl
mulb
dec
int3
xor
xchg
clc
out
push
outsb
jg
mov
aad
jge
loop
mov
or
pushf
pop
aam
xlat
insl
or
insb
sbb
es
lds
imul
test
repz
push
js
imul
inc
mov
call
sub
sbb
lods
andb
in
stc
outsl
fs
xchg
test
pop
or
lea
xor
std
enter
jb
jle
addr16
mov
ja
sbb
add
negb
jbe
testl
xor
sub
in
jno
insb
or
scas
pop
push
ljmp
cwtl
shrb
push
mov
stos
out
je
mov
mov
cwtl
cmp
xchg
jmp
fisubl
inc
xchg
adc
call
pusha
insl
xchg
jl
add
xchg
push
xchg
mov
lock
sti
or
enter
push
dec
xchg
sub
lods
push
clc
cmpsl
pop
ja
mov
pop
mov
mov
or
jge
andb
and
sub
adc
dec
fbld
xor
pop
sub
dec
mov
stos
arpl
js
out
lods
sbb
mov
imull
xor
dec
xchg
adc
and
mov
insb
inc
iret
cmpsl
lea
inc
gs
dec
ja
or
movsb
inc
ja
sbb
mov
cmp
ljmp
test
push
insb
data16
jg
jg
push
xchg
fsubrs
xchg
cmp
dec
or
sbbl
dec
insb
imul
dec
pop
inc
cs
xor
ss
xchg
push
mov
pop
add
out
adc
movsb
mov
in
or
xor
pop
gs
jo
lret
jne
data16
cmc
or
xchg
and
sub
and
inc
out
in
mov
jae
mov
aas
stos
push
push
xor
sub
leave
add
imul
cmp
enter
cld
cmpsl
dec
hlt
inc
imull
movsb
push
and
xchg
mov
jle
std
subb
jno
inc
jl
inc
push
test
int
add
mov
shrl
movsl
jno
fsubrl
sbb
or
add
push
fiadds
or
dec
cmp
iret
pop
xchg
cmp
xchg
lcall
inc
and
push
mov
lods
in
subl
jg
mov
jne
in
lods
push
pop
inc
mov
dec
mov
pop
in
addr16
xor
or
dec
scas
dec
jmp
pop
mov
mov
movsb
into
mov
dec
call
in
dec
mov
mov
xchg
addr16
lods
mov
mov
mov
scas
xor
cmp
jle
lea
insl
add
sbb
popa
ficoms
and
std
iret
adc
lods
mov
ja
adc
xor
mov
jbe
or
lods
mov
adc
xor
mov
call
xchg
or
adc
loop
inc
pusha
inc
enter
outsb
cmp
dec
clc
add
stos
mov
aad
call
or
outsb
stos
xor
mov
sub
dec
int3
inc
and
dec
adc
jl
push
pusha
cmpsb
test
sbb
out
jb
call
out
imul
shlb
xchg
stos
mov
icebp
lods
cmc
and
push
icebp
out
pop
insb
mov
dec
ljmp
xlat
mov
loopne
lds
imul
or
dec
test
inc
xchg
in
insb
lahf
jb
data16
ret
xlat
sub
mov
lods
or
es
out
jge
xchg
insl
mov
es
mov
pop
shr
inc
jae
insb
aam
ret
mov
in
mov
fcoms
inc
stc
inc
add
js
xor
insl
push
mov
lret
popa
push
lock
movsbl
fsub
jns
xchg
adc
jp
jne
scas
andb
push
lret
in
jge
push
dec
mov
xchg
lea
xor
lds
lock
fwait
imul
movsl
jg
inc
mov
shll
in
lea
gs
ret
mov
mov
fcoms
imul
gs
daa
lcall
in
pop
in
sbb
pop
dec
dec
mov
mov
iret
and
in
inc
adc
mov
adc
and
xor
in
test
and
mov
leave
or
mov
daa
mov
movsb
lock
test
call
loop
mov
jle
ja
inc
xrelease
xor
jae
daa
sub
aaa
inc
sub
inc
mov
addr16
inc
stos
sbb
cmpsb
insl
mov
mov
loope
cmp
das
scas
scas
mov
out
push
xor
sub
and
mov
mov
mov
pushf
mov
lret
shl
mov
scas
call
fildll
mov
inc
loopne
outsl
les
cmpsb
jnp
push
test
fildll
mov
mov
stc
xor
movsl
sbb
pop
icebp
rol
xchg
ret
dec
pop
lods
inc
push
mov
push
xor
sub
jno
cmpsl
or
imul
mov
jae
gs
push
outsb
add
lret
sbb
jle
add
cmovnp
add
popa
loopne
movsl
mov
lods
xchg
popa
gs
in
ud0
dec
ret
pop
outsl
or
jb
lock
xchg
dec
adc
or
mov
inc
clc
or
mov
mov
subb
cmc
jb
aad
jno
test
ljmp
cmc
push
or
sahf
inc
imul
out
cmp
or
fldenv
mov
push
imul
dec
hlt
mov
rolb
enter
in
enter
mov
ss
jb
jle
imul
jo
jmp
xchg
scas
out
sub
outsl
stos
outsl
test
loop
clc
fwait
clc
out
mov
daa
outsb
sub
mov
int
inc
out
xchg
mov
pop
dec
arpl
push
repz
mov
jae
sbb
outsl
jae
scas
stos
xchg
and
icebp
lods
mov
shrl
sbb
inc
add
mov
ret
mov
adc
pop
fidivrs
out
icebp
dec
pop
fucomi
dec
and
mov
dec
stos
cli
dec
mov
adc
loope
in
pop
dec
fiadds
lea
outsl
cli
jmp
out
test
scas
jge
out
shl
inc
ljmp
push
dec
aaa
xchg
xchg
mov
mov
lret
xchg
jg
outsl
jns
clc
or
int3
inc
movsb
out
shlb
cltd
icebp
lods
mov
insb
cmpsl
adc
jae
movsl
add
lods
jae
sbb
int3
xor
adc
jae
or
lahf
dec
jg
inc
fiaddl
dec
xor
ret
cmpsl
cmpsl
xchg
jo
imul
xchg
push
sbb
cli
stos
sahf
repnz
je
aaa
andb
cmp
adc
xchg
insb
dec
ret
int3
rorb
daa
scas
dec
or
mov
xor
fstps
test
jae
rolb
xchg
lea
ss
mov
or
nop
clc
lods
jae
and
loopne
mov
jmp
dec
push
sub
xchg
inc
pop
push
imul
xchg
cld
jge
xor
jmp
add
sub
aad
js
imul
xchg
mov
cmpsb
shl
xlat
popa
vpackssdw
jge
loopne
das
mov
sub
test
dec
or
or
inc
data16
out
sahf
jmp
push
xchg
pop
shll
jl
ja,pn
lods
loopne
jmp
pop
adcb
jmp
jle
push
or
std
repz
enter
cwtl
out
xor
scas
inc
arpl
aam
xchg
inc
mov
loopne
jle
ljmp
ljmp
sar
je
repnz
das
fldenv
pop
xlat
mov
mov
push
insl
add
mov
cmp
out
adc
xlat
gs
push
lret
iret
adc
jge
arpl
and
imul
ljmp
inc
sub
jle
push
shll
mov
sub
shlb
lcall
cs
mov
in
push
repnz
and
sarb
inc
adc
int
mov
movsl
cwtl
cltd
out
out
jae
and
add
cmpl
add
in
sbbl
sub
cli
scas
jae
and
in
sahf
xchg
flds
fistps
outsl
and
dec
mov
sub
call
outsl
cmp
subl
movsl
data16
sbb
cs
mov
lret
pop
pop
push
lds
jl
cmp
sbb
cmpsl
lret
mulb
jecxz
outsb
je
add
pop
fwait
jg
mov
mov
mov
mov
push
adc
cmp
push
or
imul
push
cs
repnz
bound
clc
fimull
mov
push
mov
ret
jmp
mov
fwait
pop
fsubr
pusha
aad
repz
loopne
cmp
and
testb
and
and
enter
sub
repnz
out
cmpsb
xor
jae
stos
add
insl
in
jg
int3
aas
and
mov
out
xchg
daa
push
dec
cwtl
addr16
or
push
out
ret
lds
imul
dec
adc
cmpsb
lds
dec
dec
pop
mulb
addr16
fdivr
aam
mov
outsb
mov
xchg
out
jp
es
add
inc
stos
xchg
outsl
loop
dec
imul
sahf
rorl
inc
xor
add
or
adc
gs
add
jge
test
jg
sub
popl
ljmp
dec
xchg
push
hlt
jno
xchg
es
lds
mov
inc
lods
imul
cmp
xchg
in
sbb
push
repnz
enter
sbb
or
mov
mov
mov
loope
sbb
mov
pop
inc
scas
jecxz
rcll
dec
in
arpl
adc
adc
inc
xchg
and
xor
mov
adcl
adc
jmp
mov
fdivrs
call
lods
movsb
shr
ja
daa
sbb
je
sub
jp
out
data16
cmpsb
clc
in
add
jl
sbb
sub
movsl
inc
addl
xchg
mov
mov
jle
and
out
pop
int3
mov
lock
outsb
mov
fucomi
cld
test
jae
call
scas
adc
ljmp
push
mov
push
insb
dec
dec
add
outsb
stos
mov
push
and
aaa
rcr
stc
cmp
push
das
testl
in
data16
dec
mov
je
sbb
sbb
mov
movsl
and
sub
sbb
push
movups
push
mov
ret
sub
or
dec
cmp
lods
scas
into
lock
imul
loop
pop
scas
nop
xor
mov
call
add
aaa
mov
xchg
or
loop
push
int
dec
adc
fwait
insl
add
inc
cwtl
mov
adc
fs
cli
dec
inc
fucomip
xor
sub
iret
imul
mov
call
mov
cmpb
roll
jge
adcl
xadd
inc
outsb
push
inc
push
mov
push
insl
adc
or
outsl
ljmp
add
dec
inc
pop
das
and
cmp
test
outsb
inc
push
ss
bound
mov
addr16
hlt
cld
xor
cld
dec
or
inc
jne
dec
cmc
xor
xor
arpl
fimull
ficoml
sub
or
test
mov
mov
call
out
mov
clc
sub
jns
ljmp
sub
in
enter
inc
in
jb
cmc
outsl
sbb
xchg
mov
rcrl
pop
repnz
or
and
repz
jb
outsb
adc
mov
and
mov
jg
pop
enter
pop
cli
or
sbb
jns
hlt
stc
cltd
and
insb
inc
push
sbb
jb
xchg
dec
push
repnz
inc
idivb
jecxz
mov
inc
movsb
mov
nop
sbb
and
mov
cmpsb
lods
sbb
push
sub
mov
mov
sub
push
lahf
repnz
dec
pop
fwait
or
adc
popf
or
outsb
les
pop
outsl
sub
into
dec
outsb
jmp
data16
popw
ret
xchg
call
out
int3
push
out
mov
mov
add
jmp
xor
rorb
ljmp
push
cltd
jg
dec
test
mov
cs
js
mov
pop
pop
sbb
repnz
clc
inc
pop
xor
lret
orl
es
inc
lahf
inc
sub
lods
and
outsb
and
adc
sbb
ljmp
fcmovnb
lods
jae
or
stos
jno
and
push
sbb
data16
push
adc
xchg
movsb
push
cltd
push
mov
loopne
add
enter
pop
mov
xor
js
pop
or
inc
dec
pop
xor
xor
xchg
cmc
mov
test
dec
sub
inc
cmpsl
add
pop
sub
call
popa
imul
sbb
pop
mov
inc
inc
jno
popf
jbe
push
mov
loope
stos
dec
dec
outsl
sahf
push
nop
js
mov
jge
or
stos
insl
cmp
jno
pop
cmp
scas
fimuls
add
mov
mov
adc
xchg
sbb
negb
hlt
push
ljmp
xlat
cwtl
dec
push
dec
or
popa
add
add
inc
movsl
fnstenv
gs
pop
lods
imul
addr16
in
and
pop
or
repnz
stos
js
in
outsl
pop
mov
daa
enter
adcb
out
movsl
push
xor
dec
es
and
push
rcrl
mov
ja
pop
jbe
push
or
push
mov
aas
mov
adc
pop
je
testl
imull
push
rclb
lahf
fsubs
push
jnp
jns
lcall
cwtl
cmpsb
jns
outsb
pop
cmc
out
sbb
jb
add
aaa
das
lods
out
pop
incb
aam
pop
insl
sbb
out
or
in
test
imul
mov
dec
add
roll
mov
jb
fidivl
nop
mov
insb
mov
sub
jae
ss
pop
int3
in
mov
mov
mov
in
subb
pusha
adc
dec
lods
addr16
mov
xchg
xchg
jo
outsb
jbe
jae
addr16
xchg
pop
pop
and
jle
unpcklps
repnz
insl
aas
pop
xor
lcall
cltd
mov
dec
jge
stos
xchg
lea
aaa
enter
sbb
pop
lods
test
jae
jl
int3
inc
jg
or
fsubr
in
mov
mulb
das
loope
enter
pop
dec
loop
imul
sbb
ret
xlat
popa
cmp
movsl
jae
loope
cmp
push
inc
test
scas
js
fwait
mov
inc
inc
jle
insl
int
lea
ret
mov
or
sbbl
or
dec
frstor
es
sbb
arpl
inc
add
inc
push
xor
outsb
outsl
jnp
rolb
out
inc
bound
outsl
mov
inc
loopne
mov
sbb
fisttps
dec
sub
cld
mov
shr
in
inc
mov
repz
negl
int
insl
leave
pop
jl
orb
mov
mov
jle
in
gs
push
mov
sbb
jp
push
subb
inc
or
movsl
xor
sub
loopne
out
jae
mov
and
cltd
mov
fisubl
sbb
roll
sbb
data16
addr16
and
dec
shll
jbe
mov
rorl
dec
mov
in
rcrb
out
insl
nop
jno
imull
push
dec
and
mov
push
rcrb
or
push
insl
lods
mov
loop
pop
lods
inc
sub
stos
repz
lock
scas
mov
daa
push
sarb
rcrl
into
adc
and
imul
mul
jmp
das
aad
fcoms
imul
rcr
sbbb
mov
xchg
xor
mov
inc
iret
push
pop
xchg
mov
and
jae,pn
jmp
adc
lock
pushaw
call
ficoml
das
mov
or
ret
pop
int3
push
mov
shll
aas
mov
sub
aas
call
push
or
pop
enter
and
sub
jae
inc
mov
jns
mov
jb
dec
iret
xor
jae
inc
add
push
jecxz
lods
out
fisubs
outsb
fwait
pusha
cmp
lods
imul
stos
sar
cld
test
mov
aas
push
lods
bound
iret
xchg
mov
or
jnp
mov
inc
rcr
gs
dec
adc
mov
and
stos
lahf
shlb
fcos
push
stos
scas
xchg
scas
cs
mov
rol
scas
mov
daa
sub
push
scas
and
inc
mov
mov
test
popf
pop
lods
dec
outsl
js
lods
and
dec
out
icebp
xchg
dec
inc
rorb
dec
mov
out
mov
mov
pop
subb
scas
pop
lods
or
bound
cmp
mov
xchg
mov
fucom
cmp
ljmp
and
in
cwtl
dec
cmpsl
dec
jae
adc
mov
push
push
ret
push
dec
stc
mov
in
sbb
ret
jg
jmp
aaa
pop
loop
cmp
mov
dec
loopne
rcrl
mov
dec
leave
lock
leave
adc
mov
add
out
and
aaa
inc
ret
mov
orb
adc
mov
mov
fstpl
jo
lods
loopne
addb
xchg
dec
or
push
int
movsl
inc
pop
jg
or
mov
mov
call
inc
inc
out
sub
inc
push
stc
out
sub
add
roll
mov
mov
shrl
mov
popa
lret
mov
in
addr16
mov
call
pop
das
mov
inc
outsl
gs
mov
aam
subb
cmp
pop
scas
fimull
inc
push
aam
adc
inc
adc
sub
and
in
les
ret
dec
xchg
inc
test
jecxz
jle
ja
ret
loop
inc
jae
sbb
das
in
stos
lret
jecxz
pop
aam
fldcw
xchg
mov
lahf
sbb
repz
mov
int
xor
or
push
shrl
xchg
or
inc
add
pop
iret
in
insl
sbb
cmp
xchg
imul
in
data16
test
int
xchg
adc
hlt
mov
or
clc
shrl
jno
xor
out
dec
data16
adc
pop
and
add
jnp
jnp
add
xchg
shrl
int3
aam
pop
xchg
cmp
cmpb
aad
pop
in
mov
aas
sbb
xchg
mov
xor
xchg
push
loop
or
lock
pop
xchg
sti
or
ds
dec
mov
push
dec
dec
in
into
scas
ficoml
repnz
xchg
cmp
fdivrs
scas
imul
aad
mov
ja
enter
sbb
sti
sarb
jp
or
mov
out
pop
jae
scas
ret
push
mov
mov
in
push
scas
jns
sub
xor
adc
hlt
mov
xchg
jnp
imull
xchg
xor
inc
scas
dec
inc
and
mov
sbb
in
and
ja
imul
les
movsl
add
cld
subl
lds
pop
ffreep
out
sbb
xchg
daa
stc
dec
in
or
sbb
fcmovbe
or
inc
mov
mov
cwtl
cmc
out
xor
ret
jae
dec
inc
mov
phsubw
mov
lahf
or
movsb
and
dec
lea
jae
add
std
repnz
lea
nop
push
mov
jae
jns
in
dec
or
scas
addr16
mov
scas
add
stc
clc
mov
xor
jnp
push
icebp
inc
outsb
mov
jne
and
cmp
aas
and
sbb
dec
dec
imul
jg
stos
cld
in
push
call
insl
jne
pop
dec
inc
js
rorb
sub
mov
jg
sub
icebp
gs
out
pop
push
cmp
imul
in
xchg
push
int3
inc
scas
mov
imull
es
cmpsb
arpl
add
insb
fs
popf
jns
lods
xchg
mov
int3
test
cli
loope
cmpsb
add
jns
scas
imul
mov
add
dec
inc
outsb
sbb
jb
jecxz
fisttps
icebp
or
call
push
scas
mov
dec
stos
stos
aas
cld
dec
sbb
jg
iret
and
inc
mov
das
mov
add
or
mov
stos
out
enter
xor
lds
out
mov
outsl
dec
pop
dec
cmpsl
outsb
mov
clc
fs
repz
sar
insb
inc
xchg
sti
sub
movsb
clc
or
jne
daa
push
dec
inc
sbb
int3
cmpsb
hlt
dec
ja
push
popf
xchg
out
xchg
lret
maxps
icebp
aaa
xor
and
call
xchg
out
sar
push
into
or
add
jg
xchg
lds
sub
insb
mov
loop
inc
or
out
push
adc
xlat
sti
insl
stos
loope
xchg
push
pop
sti
out
outsl
jmp
dec
popf
jl
sbb
mov
jae
dec
icebp
push
inc
out
out
insb
mov
test
fisubrs
jno
push
lcall
adc
sbb
repnz
dec
int
mov
rorl
aaa
int3
in
lods
lock
js
out
mov
inc
clc
hlt
add
cmp
sbb
scas
mov
and
jl
mov
sahf
mov
pop
push
pop
push
outsl
popa
test
pop
mov
popl
test
arpl
and
jge
mov
dec
inc
rorl
or
sub
shr
scas
mov
scas
hlt
inc
aad
scas
mov
sbb
scas
mov
pop
psubsw
inc
dec
sbb
fisttps
lea
loopne
add
cmp
and
cmpsl
cmp
in
stos
loopne
fildl
push
push
cmp
cld
push
scas
jbe
add
dec
jno
adcb
jno
shrb
leave
nop
cwtl
push
jmp
push
imull
out
add
push
hlt
subl
mov
mov
push
out
cmp
scas
mov
sbb
stos
clc
loop
push
mov
dec
outsb
fistps
adc
or
dec
lahf
or
addr16
and
into
sbb
add
fstpt
out
push
adc
dec
cmpsb
and
popf
aam
inc
xchg
test
mov
jecxz
out
insb
bound
pop
movsb
mov
loope
xor
push
test
mov
pop
adc
dec
in
int3
insl
add
cmpsl
mov
pop
pop
fildll
gs
mov
dec
pop
outsb
ljmp
leave
imul
test
in
push
pop
sub
push
cmp
ja
int
sahf
or
or
push
jnp
sub
fldl
push
idivl
cli
shll
push
stc
cli
addr16
xchg
cld
mov
adc
test
stos
push
or
jnp
icebp
out
mov
dec
leave
iret
push
pop
sub
mov
inc
ja
pop
int
or
dec
xor
mov
out
mov
or
cld
cmpsb
dec
out
push
adc
add
test
jnp
or
insl
sub
insb
mov
out
test
jmp
jmp
jmp
test
ret
imul
les
in
push
repnz
sbb
repnz
adc
cltd
loope
push
rorb
scas
inc
inc
enter
gs
pop
inc
push
inc
lcall
push
mov
dec
jg
dec
test
pop
lcall
leave
cli
jae
add
and
mov
or
nop
pop
jl
mov
xchg
or
sub
dec
lds
lods
cmp
mov
xchg
out
lods
clc
push
jg
test
add
fsubp
inc
jb
cmp
mov
xor
ret
pop
cmp
cmp
jnp
je
pop
mov
test
or
and
out
sub
in
mov
mov
ret
cmp
pop
in
add
mov
lods
jl
outsb
rol
adc
mov
call
mov
or
out
sub
lods
dec
stc
imul
mov
gs
out
test
addr16
pusha
jae
repz
or
pop
push
iret
leave
cmp
cmp
lds
int3
rclw
and
jg
inc
frstor
sub
mov
loop
stos
jb
sahf
inc
cmpsl
push
inc
cmpsb
fwait
jg
test
enter
xchg
roll
add
addr16
subl
ljmp
lods
jb
mov
nop
in
jp
inc
pop
dec
lock
push
mov
jne
movsl
faddl
cwtl
aam
cs
pop
iret
repnz
inc
sbbl
cmp
add
and
mov
ficoml
xchg
into
xchg
insl
xchg
dec
mov
mov
xchg
clc
mov
inc
iret
loope
dec
dec
lods
mov
adc
fstpl
lods
adc
pop
adc
fs
jmp
jle
jbe
out
je
push
add
sbb
stc
dec
inc
or
xor
mov
inc
outsb
scas
int
enter
pop
sahf
jge
call
sbb
mov
imul
push
inc
jmp
fbld
loop
mov
inc
push
outsb
test
lea
xchg
jmp
push
insb
pusha
xchg
out
cmp
cmp
jecxz,pn
jg
xchg
mov
cli
sbb
stos
cmpsb
cmp
lods
pushf
imull
enter
test
dec
loop
ss
inc
xchg
outsb
push
adc
adc
movsb
dec
ret
pop
push
out
fwait
dec
xlat
dec
out
mov
dec
sub
add
jmp
iret
sbb
stc
cmpsb
in
sub
xchg
push
lods
pop
faddp
imull
clc
push
lret
in
lods
int
mov
ds
xchg
mov
hlt
inc
pop
faddp
loop
ror
pop
jno
xchg
aam
and
push
js
sarl
lcall
jmp
cltd
add
lret
xchg
mov
mov
ret
mov
test
xchg
imul
add
loop
pop
push
aam
sub
arpl
outsl
in
movsb
sbb
push
jmp
dec
xchg
adc
add
xchg
cmp
mov
repz
pushf
cmpsb
pop
stos
and
addr16
mov
mov
rcll
xor
mov
mov
repz
xchg
clc
adc
add
sub
loopne
mov
hlt
cmp
add
jmp
imul
mov
or
jb
dec
fnstcw
test
outsl
daa
test
xchg
push
jle
jae
lret
jbe
adc
insb
lret
in
add
nop
jmp
fldl
in
jno
lds
xchg
jg
ds
stos
dec
mov
imul
dec
imul
pop
daa
cmp
and
les
xchg
inc
jne
jno
cmpsb
addr16
push
gs
cmpsb
inc
lret
stos
in
ja
inc
pop
mov
imul
and
int3
aad
jecxz
int3
fcmovnb
divl
shrb
insb
dec
fnstsw
imul
mul
lods
dec
ljmp
jmp
jle
jle
cmp
loope
movsb
and
mov
inc
jge
inc
out
out
out
call
dec
movsl
outsb
into
insb
popa
jg
movsb
ret
loop
insl
cmp
cmp
add
xor
ja
cli
sub
dec
pusha
inc
es
push
call
imul
cmpsb
enter
test
push
mov
mov
sbb
es
mov
test
movsl
push
push
push
or
jecxz
adc
shrb
pop
xor
cs
jecxz
inc
movsb
aam
push
mov
rcrl
push
clc
out
test
dec
imul
or
loop
arpl
add
iret
dec
cwtl
xchg
call
and
outsl
jae
inc
or
pushf
out
lret
das
bound
jbe
std
mov
add
sbb
or
leave
popf
ljmp
fsubs
insb
lret
mov
push
shlb
int3
je
les
cmc
mov
test
addr16
imul
cwtl
insl
into
data16
cmpsb
mov
ss
shll
icebp
cmp
fdivl
es
movsb
mulb
push
outsl
int3
dec
stos
dec
sub
notl
mov
insl
and
dec
push
sub
push
out
imul
xchg
or
jecxz
mov
mov
and
jne
adc
xor
jbe
add
cmp
and
movsl
stos
mov
dec
ret
cmp
stos
pop
mov
lret
cmpl
outsl
ret
dec
dec
rcll
jae
repz
sub
xchg
pop
add
push
ja
lock
add
inc
shlb
rcll
pop
jl
inc
adc
cmp
scas
push
push
add
mov
lock
adc
xorb
jmp
in
jle
adc
loop
into
xchg
add
fcmovne
aas
jl
add
mov
adc
out
push
pop
xchg
rcr
adc
imul
divb
push
adcl
cmpsl
mov
pop
mov
fstps
out
fsubrs
mov
sub
mov
rol
or
mov
and
sub
andb
flds
xor
les
cli
sahf
movsl
cmpsl
and
sub
fsubl
xchg
rcl
add
ret
push
xchg
std
xor
arpl
cmp
push
or
mov
outsl
dec
add
jns
scas
and
loopne
aad
decb
pop
pop
sub
mov
pop
mov
pusha
push
sbb
mov
gs
dec
lods
lock
sbb
jg
outsb
jg
out
stos
outsb
mov
mov
and
adc
ljmp
jbe
sbb
dec
mov
scas
in
aad
add
jge
mov
xor
inc
gs
outsl
data16
mov
mov
sbb
xor
rorl
dec
subb
xor
gs
outsl
dec
xchg
cmp
outsb
stos
mov
stos
stos
es
sub
and
insl
pop
xor
sub
cmpsl
cwtl
mov
in
add
vphaddbd
add
cld
xchg
and
jnp
imul
mov
push
out
jne
xor
mov
cmpsb
mov
adc
lahf
dec
outsb
jg
push
sahf
sbb
dec
call
movsl
faddp
insl
in
pop
daa
repnz
out
ja
lds
inc
clc
shlb
adc
pop
je
ret
iret
loopne
lcall
lahf
scas
sub
add
add
addl
jne
nop
mov
mov
xchg
mov
push
inc
inc
lret
insb
popf
das
ficoms
sub
xchg
leave
aas
jmp
enter
pop
bound
pop
mov
jg
lock
insl
enter
mov
xor
cli
cmp
negl
cltd
xchg
jns
mov
dec
out
sub
push
jmp
stc
push
cmpsb
out
inc
loopne
sbb
mov
push
sub
and
loope
mov
ja
imul
outsl
cmp
outsb
outsb
xor
ljmp
lret
call
pop
outsb
and
mov
inc
sbb
in
xchg
push
call
dec
and
scas
pop
mov
ret
es
sbb
sbb
insb
or
cmp
cmp
outsb
repnz
fs
pop
xchg
mov
outsb
push
out
lret
ss
mov
adc
mov
scas
jae
out
and
mov
adc
mov
int3
push
cmc
jge
shr
jmp
jmp
aaa
outsl
je
jae
shlb
xchg
adc
sub
pop
ljmp
testb
pusha
call
imul
and
imul
push
pop
mov
dec
mov
adc
loopne
inc
movsl
add
push
jg
outsl
xchg
lods
push
imul
mov
and
jge
cli
inc
xchg
sahf
lock
mov
pusha
xchg
or
in
mov
imul
hlt
inc
in
lret
loope
and
pop
mov
xor
shll
nop
mov
pop
aaa
loop
dec
push
shr
mov
in
rorb
mov
stos
jecxz
mov
arpl
nop
ss
rolb
xor
push
pop
loop
dec
imul
push
dec
add
dec
ljmp
pop
lret
ret
jne
inc
inc
cmpsl
pop
dec
add
or
jge
dec
hlt
lret
push
test
xchg
rcl
out
out
push
lock
pop
imul
mov
fsubrs
adc
dec
gs
push
loope
or
outsb
jmp
scas
fidivs
imul
rcr
in
inc
add
out
push
sbb
out
mov
add
xor
sbb
dec
aas
xor
mov
push
lds
fwait
xlat
arpl
imul
into
push
mov
arpl
mov
add
movb
and
icebp
dec
negb
rep
dec
or
mov
xchg
pop
jmp
psubsb
or
outsl
or
roll
jl
popa
scas
fldl
jne
and
mov
scas
imul
outsb
outsl
js
dec
icebp
jb
negl
mov
leave
sub
fdivl
frstor
add
push
mov
add
adc
in
outsb
cs
mov
cmc
jmp
xor
data16
push
sarb
sub
xchg
pushf
stos
mov
cmp
ds
aaa
in
xchg
outsb
pop
mov
or
dec
outsl
pop
test
push
lock
filds
pop
jae
cmp
imul
mov
or
fnsave
xchg
push
ret
add
xlat
out
jbe
add
fdivl
push
in
adc
lods
call
int
or
imul
in
cld
fldl
mov
push
push
out
aas
outsb
call
data16
loop
dec
pop
sub
push
icebp
pop
cmc
adc
pop
and
push
add
push
test
jmp
imul
mov
movsl
cmp
insl
jecxz
pusha
xchg
enter
imul
repz
cmpsl
lret
outsb
mov
fiaddl
xchg
icebp
mov
insb
pop
mov
outsl
stos
in
jno
data16
ds
outsb
test
push
ljmp
rcr
or
scas
xchg
outsb
cmc
jae
test
cli
mov
jb
inc
xorb
jmp
add
pop
inc
out
out
push
repnz
dec
adc
mov
arpl
pop
cmp
jle
jo
loopne
ret
dec
je
add
imul
pop
dec
jmp
data16
bound
xchg
push
push
mul
xor
stos
jmp
add
arpl
addr16
sbb
test
insl
nop
push
jecxz
mov
xchg
arpl
out
push
test
outsb
mov
cld
pop
push
mov
je
ljmp
std
mov
dec
sbb
fwait
cs
fnstenv
xor
mov
mov
fsubl
jp
repz
mov
fcomi
dec
adc
rorb
mov
xor
pop
into
cltd
rorb
pop
xor
push
jae
mov
mov
aam
insl
add
push
add
lcall
dec
pop
jl
aad
rorl
cmovle
inc
out
jg
xchg
inc
test
std
sbb
inc
imul
sarb
jae
int3
aad
pop
sub
in
push
arpl
add
push
test
cmpsb
nop
sub
ds
repnz
pop
mov
jbe
pusha
pop
inc
out
pop
mov
movsl
fwait
test
scas
jae
pop
aam
data16
push
push
fmuls
repz
insl
fucomip
data16
inc
jecxz
out
push
lret
icebp
das
jne
in
and
hlt
repnz
daa
cs
mov
mov
sub
fisttps
dec
aam
jg
mov
stos
push
inc
imul
pushf
ror
push
add
jg
xchg
jae
cmc
mov
ss
je
hlt
inc
sub
pusha
jo
shll
dec
push
outsl
jl
xchg
push
mov
fcomp
call
bound
fdivrs
cmpsl
stc
js
jns
les
leave
jb
out
insl
scas
mov
roll
xor
xchg
loopne
loope
loop
pop
mov
mov
jp
pop
cmp
xchg
shrb
in
add
adc
sub
popa
jne
pusha
cmp
sub
jb
fsts
stc
cmpsl
inc
pop
ds
sahf
push
out
sbb
push
test
movb
leave
or
mov
addr16
jne
fsubrl
call
das
adc
movsl
fsts
sub
test
dec
sti
fwait
mov
maxps
jl
gs
loop
mov
shll
pop
fbld
mov
add
push
ljmp
add
pop
das
fbld
ficoms
out
mov
daa
shlb
xchg
psubsb
aaa
nop
aad
or
outsl
push
mov
scas
rclb
nop
imul
and
xchg
pop
lret
sub
test
outsb
cmp
in
jmp
inc
imul
outsl
pusha
cmc
out
loop
inc
jecxz
mov
or
cmp
xor
xor
mov
sbb
mov
int3
shll
mov
pop
sub
pop
or
dec
inc
mov
jae
lahf
sub
or
pushf
loope,pn
into
cltd
subb
cld
sub
outsb
sub
dec
into
ljmp
push
jns
out
cmpsl
sarl
cmp
pop
jnp
pop
icebp
xchg
insb
dec
mov
push
fcoml
std
icebp
inc
jae
aad
aas
jne
outsb
mov
xchg
pop
int3
ret
roll
int3
repnz
ret
sarb
aas
call
fbld
loop
movsb
sub
scas
or
dec
mov
or
or
pop
mov
lods
dec
inc
mov
outsb
mov
cs
mov
xchg
dec
push
in
jmp
ja
cld
filds
out
pusha
mov
lds
push
test
dec
mov
addb
and
and
add
xor
jp
push
je
jo
nop
mov
xor
jnp
jne
dec
dec
inc
inc
dec
pushf
sbb
out
dec
sbb
in
test
or
std
addr16
jle
test
xor
pop
add
hlt
inc
mov
loope
pop
rorl
inc
mov
in
pop
les
pop
inc
ja
hlt
andl
ds
add
cmpsb
pop
xchg
hlt
mov
gs
inc
mov
aam
stos
outsl
and
add
push
test
mov
hlt
enter
pop
in
addr16
inc
mov
hlt
mov
push
pop
dec
mov
hlt
lret
dec
or
imul
pop
mov
hlt
leave
mov
insb
ds
dec
mov
int3
mov
imul
dec
mov
hlt
lret
mov
fwait
imul
cmpsb
test
jmp
lods
cmpsb
test
xor
mov
repz
decl
mov
mov
sti
arpl
push
cmc
adc
fidivl
pushf
in
int
mov
test
xchg
in
out
add
shlb
sbb
enter
pop
nop
scas
out
lods
repnz
arpl
pop
in
bound
mov
pop
call
jecxz
inc
scas
out
add
or
sub
in
out
orb
add
cmp
movsb
ja
push
out
insl
mov
jecxz
les
jle
bound
cmp
inc
jecxz
mov
das
test
jecxz
cs
out
jp
test
mov
shll
ret
dec
movsb
nop
rolb
andl
adcb
push
pop
nop
push
faddl
dec
das
dec
addr16
punpckldq
cmp
outsb
call
rorb
mov
dec
sahf
iret
dec
into
out
ret
bsr
xor
fmul
outsb
pushf
enter
daa
adc
xchg
imul
int3
mov
adc
add
data16
test
loop
les
add
movsb
mov
dec
jnp
scas
outsb
iret
imul
addb
sahf
int3
out
jl
mov
ret
or
iret
scas
scas
das
mov
scas
xchg
gs
outsl
outsb
pop
mov
xor
outsb
nop
ret
ret
sub
sub
outsb
mov
out
outsb
addr16
xor
fisubs
and
sub
call
out
dec
test
imul
mov
out
imul
push
add
call
cwtl
jge
dec
jns
popa
push
out
xorl
in
jle
mov
into
clc
ljmp
fisubrl
push
mov
mov
pop
inc
and
dec
mov
or
call
or
es
stos
out
dec
imul
mov
testb
and
xchg
imul
out
out
xor
rcrb
jl
cmpsb
jg
xchg
mov
scas
adc
outsl
call
insl
inc
lsl
cmpsb
push
and
fldt
xor
cmp
mov
das
addr16
mov
gs
bound
add
cmpl
test
fs
imull
call
push
les
out
loope
das
mov
lret
ja
or
std
outsb
push
jle
in
enter
sbbb
loop
lock
js
pand
testb
in
imulb
outsl
enter
bound
inc
out
repnz
mov
mov
outsl
and
outsb
or
lea
fcmove
insb
nop
outsl
nop
jmp
add
sar
inc
push
jo
inc
xor
jo
outsb
sti
and
fdivrs
bswap
ret
jne
mov
pop
leave
cwtl
outsb
out
popa
test
imul
movsb
xchg
inc
xchg
mov
clc
outsl
movsl
push
jecxz
outsb
lods
fs
out
sbb
mov
xlat
insb
arpl
pusha
jo
out
es
scas
iret
and
and
outsl
sbb
out
lcall
ror
das
mov
insb
loop
push
test
cmpsb
push
cld
adc
fsubl
push
lock
fldt
gs
outsb
or
inc
xor
movsl
jge
cmc
pop
sbb
out
lock
cwtl
iret
outsb
gs
push
out
adc
mov
call
test
in
iret
lods
jl
jo
scas
xlat
jns
sub
dec
imul
sbb
in
ss
mov
in
jg
pop
imul
xchg
jle
mov
test
jae
aaa
insl
testl
idivb
jne
movsb
gs
pop
outsl
stc
scas
js
out
jbe
jge
inc
cmc
inc
in
imul
scas
push
dec
outsl
test
cli
pextrw
dec
outsl
mov
cmpsl
add
jle
and
or
outsb
in
pop
int3
mov
icebp
jg
push
or
mov
test
cmpsb
mov
neg
pop
dec
pop
pop
inc
scas
inc
stos
out
inc
cmp
out
insb
in
push
dec
fs
repz
push
dec
jmp
out
je
inc
push
jg
clc
fsubrl
mov
push
insl
scas
mov
icebp
mov
lret
dec
or
call
dec
jae
dec
insl
push
lds
loop
jno
push
hlt
scas
in
icebp
inc
adc
arpl
add
out
les
dec
sarb
popa
into
negl
in
lock
std
jne
and
insl
xor
xchg
sub
insb
push
nop
nop
in
ret
mov
mull
in
in
push
insb
sub
xchg
xchg
cmp
cmp
jmp
add
mov
scas
push
addb
dec
fs
test
js
dec
pop
imul
mov
fisttpl
loope
dec
jle
arpl
clc
cli
dec
sti
pop
fs
inc
movsb
jbe
insl
sbb
std
dec
cmpsb
dec
js
loope
sti
dec
cmovle
mov
in
xor
scas
out
xor
outsb
dec
loop
push
in
stc
rcrb
nop
inc
loop
cmpsb
stc
jl
jecxz
push
jae
outsb
lods
cmc
addr16
aaa
xchg
jb
inc
clc
ja
call
xchg
sti
push
ljmp
mov
xchg
repz
cmc
aad
xor
outsl
out
imul
das
popa
dec
call
stc
dec
call
imull
enter
mul
leave
out
addr16
push
dec
insl
into
addr16
call
scas
out
test
and
mov
movsb
fldt
out
in
ljmp
stc
mov
add
xchg
aaa
in
loope
shlb
loope
push
out
insb
loope
aas
and
jmp
mov
call
out
loope
dec
jle
sar
jnp
add
bswap
dec
cwtl
xchg
xchg
hlt
xrelease
jae
push
call
addr16
sbb
into
popa
xor
test
fyl2x
jnp
fcomps
pop
push
push
pop
xor
mov
mov
inc
ret
sub
mov
es
adc
out
mov
jne
cmp
mov
pop
int3
outsb
or
testb
pop
or
out
je,pn
sub
mov
cmpsb
pop
sbb
enter
into
repnz
test
lcall
and
xchg
outsl
or
stos
xor
js
and
push
addr16
add
mov
mov
mov
or
enter
insb
rorb
repnz
repz
xlat
mov
mov
scas
outsl
jle
xchg
cmp
invd
stos
outsb
outsb
shll
add
pop
loopne
pop
pop
or
xor
rcrb
les
mov
movb
dec
push
mov
sbb
ret
je
pop
xchg
push
mov
dec
dec
lock
mov
iret
addr16
mov
call
in
imul
ret
and
mov
ret
xchg
xor
fcompl
inc
dec
jbe
dec
mov
arpl
mov
mov
jne
sbb
xchg
adc
mov
and
dec
les
outsb
inc
mov
or
and
insb
loopne
loop
hlt
int3
roll
pop
sub
xor
popa
push
jno
outsb
sub
lret
jo
push
mov
dec
cld
ret
mov
xchg
loop
scas
pop
out
sti
xor
pop
andl
daa
mov
dec
xchg
scas
xchg
lret
in
out
add
push
in
gs
push
mov
in
cs
mov
popl
push
stos
testb
into
push
lods
and
xor
xchg
jg
jae
or
ljmp
or
sbb
rolb
xor
inc
pop
and
sub
mov
js
adc
or
push
hlt
repz
and
icebp
andl
lahf
pop
mov
mov
loopne
out
push
jbe
xchg
insb
fsub
jp
test
and
add
js
insb
pusha
push
stos
xchg
test
cmp
and
push
ja
and
insb
es
inc
inc
push
xchg
sub
int
pop
idivl
out
inc
push
outsb
les
jmp
mov
mov
shl
cmp
scas
out
ret
ljmp
add
arpl
ret
dec
aas
adc
jae
dec
addb
dec
inc
ret
je
mov
aas
addr16
push
adc
out
xchg
jmp
ret
jmp
mov
out
cs
mov
outsb
push
jb
inc
bound
mov
inc
fadds
mov
popf
mov
jge
test
in
add
ret
popa
jge
lods
loop
daa
add
addr16
and
dec
cmpsb
insl
dec
popl
mov
sbb
popa
inc
push
jbe
cli
in
jmp
and
push
or
inc
lret
out
loop
jns
sbb
icebp
xchg
outsb
arpl
sbb
mov
jl
loopne
push
add
inc
outsb
iret
fwait
push
mov
ret
sub
dec
into
in
mov
insb
mov
test
scas
js
outsl
out
js
das
or
in
and
sub
xchg
inc
insb
clc
lock
mov
jae
scas
insl
pushf
data16
es
jge
insb
xchg
dec
iret
adc
xchg
mov
mov
jns
push
or
ja
outsb
arpl
iret
cmp
add
shlb
xor
jae
fidivl
or
lods
mov
mov
push
sbb
or
pop
call
stc
in
out
mov
and
fcoml
rorb
mov
lret
ret
jo
jle
imul
mov
out
jae
xchg
scas
or
scas
sahf
cltd
jg
mov
repnz
pop
outsb
outsl
stc
lods
push
xor
push
mulb
add
data16
mov
jae
pusha
sbb
hlt
bound
pop
in
add
jno
dec
xchg
mov
add
out
jns
call
mov
out
cmp
je
test
push
out
cmpsl
sti
data16
dec
xchg
addr16
daa
push
cmpsl
xchg
fldcw
fs
in
es
enter
hlt
iret
daa
cmpsl
push
lods
cmpsb
test
push
popa
addb
stos
mov
sub
mov
in
test
pop
lret
xor
xchg
push
xchg
loope
cmpsb
xchg
xchg
ds
add
sub
sahf
inc
mov
dec
dec
insl
hlt
or
sbb
hlt
insb
je
fs
out
mov
scas
lahf
jb
xchg
jle
sub
push
data16
in
push
test
js
dec
pop
imul
mov
cli
insb
push
icebp
push
adc
cmp
mov
push
mov
lret
add
shlb
mov
mov
es
lds
iret
stc
mov
and
xchg
push
ss
out
mov
mov
or
sub
cmc
push
or
jmp
pop
mov
js
and
pop
in
mov
jmp
in
push
xor
ret
mov
xchg
xor
lock
mov
jmp
xorb
js
lods
cltd
mov
jge
jae
repnz
xor
xor
dec
sub
stc
xchg
mov
jnp
aam
xchg
mov
pop
call
jl
ja
ds
std
mov
icebp
push
ljmp
add
out
test
inc
into
stc
and
aaa
shl
and
sbb
jne
ficoms
arpl
pop
add
lds
jno
xlat
jmp
insl
mov
jge
fists
test
jbe
xchg
loop
dec
jge
dec
add
in
scas
out
sub
add
fcmovu
popa
jo
xchg
xor
in
cld
int
lret
adc
leave
out
cmp
fbld
jg
popf
insl
pop
sbbb
pop
cwtl
sbb
xorb
decl
bound
pop
push
bnd
mov
jle
jl
add
and
lret
scas
mov
enter
cli
ret
sarl
jns
stc
in
movsb
aam
out
sbb
inc
xchg
sub
jb
in
loopne
push
in
and
cmpsl
mov
int3
in
adc
inc
out
cmp
clc
add
ja
divl
push
loop
push
sub
stc
mov
das
jle
dec
call
mov
lock
jg
in
push
mov
loope
inc
stc
jo
mov
mov
add
sbb
mov
inc
jge
or
inc
push
call
cmc
insb
call
dec
out
xchg
dec
dec
mov
sbb
outsl
call
ja
clc
fsubrp
mov
cwtl
dec
outsl
xchg
out
int
xchg
mov
scas
iret
push
push
lock
data16
jle
jnp
xchg
outsl
fsubrs
inc
and
jg
push
fldenv
icebp
cmp
int3
call
pushf
sub
repnz
roll
add
ja
sbb
mulb
mov
cmp
push
arpl
mov
push
shl
pop
mov
pop
daa
cmp
xor
iret
dec
pop
push
loop
inc
outsb
lods
iret
sub
and
cltd
mov
dec
pop
test
mov
inc
insb
jmp
shll
dec
jmp
in
pop
ret
insl
mov
cli
cmp
xchg
lret
cmc
push
data16
mov
hlt
lds
sub
adc
push
jp
iret
inc
sub
adc
mov
dec
repz
jbe
push
std
jge
lock
jns
pusha
mov
icebp
iret
scas
pop
cmp
cmpsl
push
sub
xor
insl
xchg
dec
scas
jg
in
outsl
iret
sbb
in
mov
movsb
jmp
aas
daa
inc
sbb
insl
mov
imul
andl
outsb
push
cwtl
fldt
jae
push
in
movsl
or
outsl
ficomps
imul
daa
adc
loop
stos
insl
ds
pop
jo
je
xchg
mov
lds
sub
loop
mov
aaa
sub
dec
idiv
hlt
mov
or
push
fcompl
sbb
clc
xor
inc
dec
ret
jle
fcomp
adc
hlt
dec
imul
stc
xor
scas
lock
and
or
mov
out
xorb
bound
rcr
dec
mov
dec
in
adc
aas
ds
loopne
lock
cmpsb
mov
ds
adc
jg
repz
or
int3
dec
push
ret
push
mov
aam
imull
pop
jg
xor
mov
cmc
pop
jge
mov
fistl
dec
insl
xchg
xor
and
outsb
outsl
out
inc
sbb
in
testl
sbb
cld
ja
dec
pop
or
push
pop
mov
les
xlat
js
call
scas
loop
dec
xchg
push
repnz
clc
pop
cmp
pop
mov
or
add
cmp
fistpll
add
inc
addr16
inc
imul
jns
jnp
push
sbb
imul
stc
push
lods
in
aad
out
xchg
cmp
dec
hlt
inc
jns
dec
mov
or
cmp
loopne
icebp
lock
pop
mov
xorl
hlt
test
adc
and
rolb
push
scas
dec
inc
repz
jecxz
imul
pop
pop
mov
cmp
inc
mov
xor
sub
mov
nop
sti
sbb
in
insl
rcr
sbb
push
push
dec
push
add
push
push
mov
xchg
outsb
cs
push
lahf
in
mov
jae
and
push
dec
test
insb
repnz
lods
in
inc
mov
imul
mov
stos
scas
int3
mov
out
jmp
pusha
lock
pop
lea
jmp
mov
push
filds
mov
mov
xor
scas
adc
pop
mov
push
daa
outsl
arpl
mov
out
in
push
loopne
push
lods
dec
outsb
dec
jg
lods
inc
mov
icebp
dec
out
jg
test
in
cmp
sub
jg
push
adc
or
and
stos
pushf
fidivrl
nop
mov
xor
pop
imulb
sbb
jge
adc
jle
pop
ret
dec
fildll
insb
jnp
jl
dec
and
outsl
in
fsts
ret
negl
mov
subl
mov
xchg
insb
cmpsb
cs
push
outsl
xor
cs
lcall
cmp
dec
insl
data16
inc
pop
sub
sub
and
out
mov
pop
dec
bound
sub
sbb
enter
jg
in
sbb
decl
das
or
outsl
jae
dec
mov
or
out
cwtl
addl
insb
nop
pop
mov
clc
push
pop
push
jmp
ja
and
cltd
mov
push
testb
mov
repnz
xchg
ljmp
lods
fisubs
test
xabort
je
mov
push
iret
aaa
add
bswap
out
out
add
in
sub
out
cmpsb
iret
loope
jecxz
test
dec
inc
outsl
mov
mov
jle
mov
mov
jnp
mov
mov
into
lret
clc
inc
sub
js
fdivs
or
stc
xor
clc
in
in
adc
mov
iret
rolb
imul
mov
sbbl
mov
mov
into
mov
int3
loopne
out
jmp
cmpsb
loop
lods
sbb
ljmp
xchg
sti
clc
add
mov
nop
int3
cmpsb
repnz
fwait
clc
push
or
stc
call
nop
xor
outsb
out
sti
dec
push
pushf
sub
pop
std
out
push
add
sub
inc
daa
xorb
out
mov
adc
push
fwait
jmp
mov
and
sub
aas
in
dec
fidivs
push
add
insl
lcall
jmp
mov
imul
jnp,pn
pop
in
push
xchg
mov
sbb
jno
out
ficoml
cli
cs
dec
add
lahf
mov
mov
xchg
mov
add
bound
inc
pushw
mov
adc
sti
mov
popl
pop
mov
loopne
mov
mov
inc
das
dec
daa
lock
and
outsb
dec
mov
shlb
nop
fdiv
mov
mov
clc
fsubr
repz
in
incl
in
enter
jmp
mov
push
outsl
addb
push
mov
pusha
icebp
call
outsl
test
scas
push
add
sbb
je
or
les
fmull
imul
add
and
jb
pop
ss
call
outsb
out
cli
push
jno
dec
jg
out
inc
in
pop
jl
inc
sub
lret
cmp
testl
mov
or
sbb
jge
testb
stos
inc
mov
add
ss
je
in
mov
icebp
mov
out
scas
repz
adc
sarb
insl
flds
mov
xor
sbbb
jo
adc
mov
xchg
test
pop
std
cmpsb
mov
mov
jmp
js
insb
sub
jmp
in
mov
das
out
fsubrs
push
lock
repnz
insb
mov
mov
and
cld
movsl
inc
fwait
stos
arpl
lods
push
jb
into
test
sahf
jmp
push
jbe
fistps
add
xor
jb
subb
lods
in
bnd
in
icebp
test
xor
test
out
mov
jnp
outsb
jg
clc
jle
call
cwtl
xor
int3
and
inc
cmp
out
and
mov
mov
das
fsubp
jle
cmpsb
jp
stos
ja
outsb
push
fiaddl
and
jae
pop
shrl
or
lods
andb
imul
outsb
jle
mov
mov
mov
outsb
jnp
dec
insl
dec
jae
dec
outsb
pop
add
inc
shlb
scas
xor
push
shlb
add
xor
gs
data16
out
push
dec
repnz
adc
mov
in
jmp
scas
mov
cmp
lods
js
pop
dec
sub
clc
test
mov
out
jno
mov
mov
pop
out
insb
dec
cmp
xchg
pop
test
mov
xchg
out
adc
push
push
and
inc
insb
or
in
or
jnp
xor
insl
sti
cmpsb
scas
or
cmp
pop
or
rorb
out
mov
incl
scas
aaa
lods
add
add
and
test
fwait
incb
call
inc
fsubrs
jecxz
dec
sub
in
fsubs
inc
adc
int
mov
hlt
cmpsb
inc
pop
loopne
add
out
scas
jae
fdivrs
jmp
arpl
pop
data16
mov
outsb
dec
sarb
or
lds
and
stos
push
sbb
fildll
leave
outsb
ja
es
pop
ja
bound
jae
stc
cmp
orl
aad
incb
add
and
enter
cmp
xchg
push
push
jae,pt
inc
dec
sbbb
insb
cmpsb
hlt
push
outsb
and
fdivl
add
mov
xchg
cld
and
mov
out
sub
int
out
jb
movsb
pop
test
out
push
sahf
int
aam
and
outsl
fisubs
jp
in
mov
movsl
inc
outsl
push
push
lods
repz
mov
mov
mov
mov
xor
xchg
inc
push
sub
or
outsb
mov
arpl
insb
negb
lock
dec
outsb
filds
shlb
pushf
scas
xchg
rorb
jle
xor
repz
test
clc
sarl
inc
mov
cmpsb
or
scas
sbb
push
mov
jne
jle
mov
adc
add
mov
iret
add
shrb
xchg
je
cmp
inc
adc
stos
pop
cs
mov
mov
fdivl
aam
vpackuswb
pop
addr16
imul
scas
jnp
insb
ret
sbb
mov
pop
xchg
dec
ss
aad
cmp
fxch
cwtl
xchg
jge
push
test
pop
mov
je
xchg
mov
sub
sub
ja
insb
pop
in
lods
imul
xchg
andb
scas
xchg
mov
mov
jmp
cli
jp
pushf
dec
mov
xor
dec
mov
in
add
fsubrp
mov
dec
and
pop
add
sbb
or
pop
frstor
test
cmpsb
lahf
out
in
cld
scas
ljmp
shr
mov
dec
jmp
xchg
dec
leave
test
out
cmp
inc
aad
int3
jbe
movsl
leave
in
cld
in
int
enter
dec
outsb
imul
lods
and
adc
or
mov
lret
inc
outsb
pop
je
aaa
sarb
lds
push
arpl
mov
and
pop
popf
or
loop
out
push
lods
addr16
arpl
es
sti
xor
incb
or
or
or
push
mov
fistpll
fisttpl
mov
pop
or
mov
jmp
cli
jns
dec
lock
cs
gs
out
push
invd
push
dec
inc
outsl
aaa
push
jl
xor
pop
xchg
sub
pop
mov
jmp
rclb
sub
add
jg
out
inc
lea
sub
and
mov
dec
dec
push
ret
nop
pusha
imul
or
outsb
xlat
cmpsb
lea
cmp
das
push
das
mov
adc
dec
mov
inc
imul
sbb
mov
in
jae
insl
push
mov
sub
js
inc
popa
inc
mov
inc
cld
insb
fs
outsb
pop
and
cmc
pop
js
inc
inc
mov
dec
insl
xchg
or
hlt
xchg
ss
outsb
shll
cwtl
pop
in
lret
stc
imul
and
loopne
je
ja
mov
or
add
mov
int3
cmp
cld
loop
inc
mov
addb
outsb
push
jmp
sub
ljmp
or
or
fst
pusha
fldcw
imul
iret
ret
xchg
hlt
int3
push
stos
xor
mov
push
sbb
pop
push
xchg
in
or
push
out
nop
sub
sub
ljmp
insb
ficompl
outsb
lcall
sub
fistps
imul
cmp
leave
in
in
test
adcb
scas
mov
scas
cmpsb
mov
jno
pop
sub
stc
lock
loope
fists
push
mov
shlb
xchg
int
adc
mov
imul
push
pop
inc
shr
jno
dec
cld
push
int
pusha
sbb
fs
jp
mov
scas
mov
mov
push
inc
sub
sub
xchg
push
dec
cwtl
jno
rcl
xchg
pop
imul
and
movsb
mov
xor
test
xchg
mov
or
push
mov
lret
xor
aas
mov
cmpsb
outsl
outsb
ret
clc
push
inc
cli
mov
data16
inc
jae
stos
cmpsl
mov
sub
data16
lock
adc
xor
inc
inc
mov
mov
out
fbstp
repnz
mov
mov
pop
push
mov
rcll
data16
out
fcomps
fbld
cld
mov
outsl
repnz
test
add
mov
adc
out
adc
pop
jae,pn
insl
scas
jb
dec
and
mov
movsb
sti
ds
mov
call
mov
test
mov
jae
xchg
test
adc
jmp
jae
sub
nop
mov
js
fwait
incl
cmc
dec
or
xor
push
ja
and
mov
push
outsl
fdivl
mov
push
pop
out
in
push
cmp
push
je
sbb
icebp
xchg
jnp
pop
mov
outsb
ds
pop
push
outsl
jns
xor
mov
sahf
ds
push
mov
dec
xchg
sti
dec
in
sub
aas
out
cmp
pop
cwtl
dec
lods
xchg
sti
scas
and
jns
pop
adc
push
jmp
outsb
daa
push
mov
in
nop
mov
xchg
xchg
movsl
mov
insl
cmpsb
and
jp
ret
sub
push
jb
lods
jecxz
sub
or
mov
out
dec
mov
push
xor
pusha
push
loope
inc
cmpsb
outsl
in
ja
out
int
adc
dec
roll
popa
test
dec
aas
sub
adc
in
and
xchg
fwait
lock
xor
mov
insb
mov
push
mov
inc
push
push
or
mov
push
ret
mov
int
cmp
mov
out
pop
pop
ss
out
scas
sbb
jg
mov
inc
xchg
sti
data16
imul
sub
jne
imul
inc
lock
jecxz
les
call
inc
dec
and
sbb
jge
scas
jno
and
in
hlt
test
out
push
pusha
xchg
addr16
jne
jno
dec
sub
dec
adc
loopne
test
repnz
cwtl
out
iret
sbbl
mov
imul
hlt
adc
sub
sub
fucomip
mov
sub
inc
add
ret
data16
add
cmpsb
pop
or
mov
mov
lds
inc
jae
rolb
jle
or
pushf
mov
nop
ja
mov
data16
xor
lods
shlb
and
ret
lret
rolb
shll
stc
cmpsl
enter
mov
insb
ja
imul
or
out
push
testl
inc
mov
jl
inc
jp
adc
test
jns
mov
pop
clc
sub
nop
xchg
movsb
gs
mov
dec
shll
inc
nop
xchg
add
das
int
and
or
push
dec
jo
adc
and
mov
jns
and
lock
subb
inc
xorl
mov
jo
rcr
xor
fnsave
pop
fiadds
int
fcoml
test
sub
divb
and
and
jb
jg
imul
push
ret
int3
pop
jbe
sub
xchg
das
mov
or
xchg
xor
ss
sti
mov
in
insl
aad
les
in
pop
sub
daa
and
and
test
int3
insl
ds
imul
loop
add
scas
sbb
aad
mov
mov
test
cmp
xchg
inc
push
dec
outsl
mov
aaa
arpl
cs
jb
je
xchg
sub
pop
adc
mov
addb
aas
adc
test
jecxz
outsb
sbb
repz
mov
mov
sti
mov
in
dec
jle
lret
stos
jne
test
xchg
ja
sub
mov
pop
xchg
loopne
out
in
jne
clc
mov
fists
inc
imul
xor
xor
int3
push
fnstcw
cli
or
sub
nop
shl
pop
mov
out
sbb
clc
clc
sbb
out
movsl
lds
inc
xchg
pop
fiadds
xor
in
shll
dec
incb
loopne
movsl
mov
daa
xchg
les
mov
int3
ficoms
dec
cmc
ljmp
or
loopne
or
sub
inc
jecxz
pop
bound
xor
pushf
push
in
in
mov
or
mov
push
inc
jge
and
icebp
push
mov
jle
divb
xchg
sbb
lods
sti
int3
jg
push
push
ret
scas
xor
int3
pop
out
sub
pop
outsb
outsl
sub
jecxz
dec
dec
push
rcrl
and
mov
mov
rcl
outsb
cmc
ja
les
insb
repz
jae
fcoml
ljmp
dec
test
jg
rorl
pop
dec
xor
hlt
movsl
adc
neg
scas
ret
shlb
mov
sub
jae
or
sub
jb
scas
decb
sarl
in
addb
cmp
dec
mov
sub
mov
lock
in
out
outsl
rcr
and
adc
sbb
cmp
jmp
test
loope
sub
pop
outsb
dec
xor
cmc
jge
jle
repnz
mov
xchg
shl
in
hlt
pusha
jb
inc
pushf
movsl
fsubs
pusha
je
icebp
pop
dec
shrl
gs
in
cmc
mov
sub
lods
test
inc
out
fcompl
in
pop
add
lock
insb
inc
jl
or
cld
xchg
out
mov
mov
fstpl
out
mov
jbe
loop
insb
push
add
scas
icebp
gs
aad
imulb
jae
mov
xor
outsb
addb
enter
xchg
aam
mov
cmpsl
scas
jp
sbb
out
ljmp
sbb
push
pop
scas
call
cmp
test
cmpl
jg
inc
movsl
loop
xchg
mov
int
add
xchg
call
sbb
inc
pop
test
std
sahf
sbb
cmp
loop
sub
lret
xor
cwtl
testl
mov
jge
fnstenv
cmpsl
nop
fsubrp
or
in
lods
cmp
repnz
cmpsl
sbb
rcrl
push
fstpt
out
mov
daa
shlb
int
lods
fsubs
and
pop
push
imul
icebp
sub
push
in
pop
test
call
pop
test
fdivrs
cltd
push
imul
mov
outsb
loop
out
pop
xchg
sbb
imul
insl
pop
or
and
aad
insl
enter
sbb
clc
gs
mov
adc
add
lea
mov
adc
dec
ds
push
cs
test
pop
and
xchg
outsl
lods
outsl
fcomps
mov
in
lock
fwait
xor
clc
sti
popf
scas
adc
insl
mov
sub
cli
mov
fscale
loop
rorb
jge
cs
shl
lock
test
cld
mov
mov
lods
popf
pop
stos
push
outsb
xchg
jno
in
scas
push
lea
jle
das
decl
cmp
data16
ja
mov
std
dec
mov
insl
insb
fs
inc
jb
out
pop
cmp
jnp
cmp
pop
test
in
fmul
add
cmp
pop
lods
jl
sti
pop
mov
std
into
test
jbe
ret
add
push
inc
test
dec
movsb
ret
bound
rcrl
movsl
jb
lea
mov
push
inc
cmc
xchg
addl
sbb
mov
xchg
imul
sahf
mov
dec
dec
addl
jno
mov
dec
test
repz
lods
mov
push
nop
xor
outsb
push
fwait
add
jge
adc
pop
sub
jo
inc
sub
mov
test
inc
mov
pop
scas
dec
insl
test
mov
lods
add
mov
dec
test
movsl
icebp
xor
dec
jne
pop
jle
loopne
jg
fucom
out
cmpsb
cld
push
dec
ret
cli
sbb
stos
loop
insl
aaa
jno
sub
fldcw
and
out
pop
pusha
xor
dec
adc
test
cli
fisttpll
fs
addr16
dec
out
mov
inc
bound
xor
pop
dec
sub
push
outsb
mov
mov
lret
iret
outsb
dec
and
adcl
out
insb
test
dec
mov
inc
mov
adc
addr16
mov
xlat
mov
mov
outsb
sub
cltd
xchg
insl
cmp
xor
rol
ss
dec
jns
test
adc
cmp
mov
int
pushw
aas
mov
pop
out
xchg
int
test
scas
xchg
in
sbb
jle
outsl
inc
dec
dec
jg
nop
adc
mov
out
call
xor
xchg
sub
pop
mov
sbb
pop
test
adc
xchg
mov
into
test
shrb
cmp
cld
push
aam
or
leave
out
mov
arpl
test
nop
jns
jnp
out
and
outsl
movsb
arpl
lods
mov
outsl
or
icebp
jo
sbb
sahf
int
jl
in
inc
xchg
scas
imulb
jge
sbb
rcrb
inc
inc
pushf
mov
mov
lahf
stos
loope
fldz
ficoms
mov
mov
lods
pop
or
icebp
repnz
insb
into
int
dec
ret
aas
into
sbb
inc
mov
addr16
and
push
test
in
pop
xor
in
call
insl
or
test
add
enter
in
pop
sbb
outsl
jnp
inc
stc
dec
into
in
cmpsb
insl
loop
outsl
je
in
leave
mov
add
pop
int3
mov
adc
push
rorb
gs
inc
cmp
lods
scas
shlb
data16
insl
in
add
insl
ja
subb
mov
imul
and
ja
or
aas
jns
mov
in
pop
xchg
push
mov
adc
insb
roll
in
dec
out
mov
cmpsl
les
cwtl
cmp
mov
mov
sbb
xchg
adc
push
in
sbb
inc
into
clc
pop
mov
mov
inc
call
ret
push
pop
mov
sub
loope
es
sti
orb
call
hlt
mov
es
xchg
ror
push
stos
in
adc
imulb
xor
sbb
mov
adc
xor
sub
ljmp
fst
lods
dec
push
jae
out
divb
add
adc
add
imul
pop
jbe
test
dec
pop
jecxz
inc
and
gs
sti
or
lods
jp
fdivrl
xchg
and
jmp
xchg
aaa
repz
jae
movsb
stos
mov
lods
sahf
add
mov
mov
in
insl
mov
xorl
mov
mov
shrb
clc
pop
jns
enter
das
outsb
xchg
cld
pushf
fbstp
add
mov
aas
out
stc
imul
loopne
jae
sbb
in
mov
mov
mov
xor
imul
add
aad
xor
call
lcall
sahf
adc
movsb
pop
loope
cmpsl
pop
inc
sub
inc
ret
cld
outsb
jns
dec
mov
test
inc
ja
xchg
js
rcll
sbb
mov
lret
ds
and
or
jns
inc
test
mov
insl
xchg
sub
cmp
mov
inc
jge
mov
and
mov
mov
es
es
inc
jecxz
mov
add
ret
lea
and
sahf
into
sbb
pushf
pusha
jg
insb
cmp
iret
cld
sub
xchg
es
lods
and
adc
jb
pushf
test
jmp
ds
outsl
cmp
shrb
cmp
mov
push
mov
xor
and
jbe
out
daa
insl
ja
cmpsb
fs
ret
pop
inc
add
dec
outsb
or
cmp
test
add
pop
or
js
xchg
icebp
sahf
icebp
mov
jle
push
xchg
dec
mov
inc
fisttps
jg
jge
repnz
int
pop
mov
mov
mov
push
adc
mov
mov
push
popf
mov
cli
inc
mov
cmp
std
call
push
fadd
outsl
xor
lahf
pop
adc
in
xor
out
cmp
cmc
fsubs
mov
pop
ret
pop
mov
sub
mov
cvtdq2ps
mov
or
dec
imul
loope
or
mov
jne
int
orl
jmp
orb
pop
lea
or
aas
outsb
cmpb
daa
imul
pop
pop
pop
sub
pop
daa
test
sbb
bound
out
das
aas
outsb
aam
dec
push
pop
scas
iret
mov
xchg
inc
enter
imul
sub
inc
mov
scas
inc
pop
out
inc
cs
hlt
outsb
ja
fstps
ja
shrl
push
add
outsb
std
mov
fdivs
xchg
in
imul
je
dec
test
std
lock
xor
frstor
dec
gs
loope
bound
mov
movsl
jne
ror
cs
jge
jae
push
add
bound
mov
jae
pop
jge
jo
mov
cmpw
rcrl
cltd
sarl
xchg
and
call
rorb
adc
push
stos
or
enter
lods
mov
pop
dec
sub
outsl
aas
jbe
inc
adc
dec
add
push
addr16
out
or
movsl
inc
daa
jmp
or
add
cmc
push
pop
test
xchg
pop
pop
fucomip
daa
loope
lret
pop
dec
mulb
inc
loopne
fistpll
ljmp
push
jne
mov
imul
mov
mov
imul
mov
mov
xchg
mov
cmpb
mov
imul
in
xchg
mov
loope
in
jne
xchg
or
xchg
push
lahf
cmp
push
inc
push
jl
jns
mov
lret
cmc
jnp
imul
inc
dec
mov
or
mov
xor
push
add
in
out
mov
out
mov
mov
and
mov
mov
mov
push
arpl
dec
stos
ret
sub
pop
out
insb
in
and
outsl
push
dec
stc
mov
out
inc
aas
daa
and
pop
jae
les
jno
or
jbe
das
cmp
sbb
add
xor
jecxz
dec
mov
mov
mov
push
test
roll
inc
subl
dec
inc
inc
repnz
insl
es
cwtl
pop
dec
outsl
nop
adc
insb
outsb
int
stos
inc
cmp
arpl
ja
movsl
and
push
es
sti
mov
and
push
cmp
testb
jg
adc
fcomps
fidivrs
test
and
pop
je
cs
xchg
mov
dec
mov
xchg
rolb
out
and
ret
outsb
fsubrs
add
xchg
out
arpl
dec
adc
sub
int3
in
adc
pop
inc
dec
in
ljmp
out
clc
test
pop
sbb
inc
decl
jbe
pop
dec
inc
dec
leave
sub
jp
loop
cmpsl
pusha
inc
dec
mov
and
insb
adc
and
and
pop
loop
dec
pop
and
shrb
int3
das
clc
outsb
ljmp
outsb
out
inc
js
sub
clc
mov
insb
fcompl
in
add
stos
out
out
mov
push
dec
into
push
aas
and
sub
jg
mov
xchg
lods
inc
or
mov
iret
pop
or
adcb
xor
sahf
and
mov
shrl
or
pop
gs
aad
mov
les
adc
ficoms
fucomp
or
push
lock
dec
xor
xchg
mov
or
outsb
and
in
test
jo
sarl
enter
shlb
ja
push
popa
mov
imul
lahf
loope
inc
mov
jmp
mov
xchg
lret
lcall
negl
xor
call
negb
out
mov
enter
fdivrl
rcll
sbb
or
xchg
dec
orb
or
cltd
cmp
outsb
arpl
sahf
pop
xchg
jbe
add
dec
xor
mov
out
jl
xor
rcl
aaa
mov
enter
push
pusha
mov
push
mov
cltd
sub
pop
mov
xchg
jp
cmp
and
shl
cmp
repz
stos
aam
sub
das
fstps
and
xor
out
and
repnz
jae
outsl
hlt
mov
mov
call
mov
outsl
arpl
pop
mov
test
xor
ss
push
xchg
or
push
aas
xchg
nop
fbstp
in
pop
bound
mov
push
fsubrp
ds
enter
dec
mov
lods
lods
stos
fwait
adc
jmp
test
push
add
mov
loope
mov
and
cmp
xor
xchg
adc
add
aas
add
sarb
in
js
sbb
mov
pop
and
shll
dec
aaa
mov
adc
pop
stc
cmp
jg
data16
int3
xor
shrb
icebp
inc
sub
dec
clc
pop
mov
cmp
ficompl
in
jns
int
scas
sbbb
fs
test
pop
andl
lahf
scas
sbb
jmp
sub
fbld
cwtl
sub
mov
fsubp
lods
rcrl
cli
enter
in
les
scas
outsl
in
rorb
dec
pause
add
in
cwtl
mov
loope
pop
in
mov
xlat
cmp
jle,pt
push
test
xchg
pop
les
jns
mov
mov
or
cmp
int
dec
in
insb
cmpb
cmp
mov
outsb
inc
lea
imul
jae
hlt
int3
in
push
mov
fwait
mov
imul
adc
mov
into
jmp
in
mov
dec
sarl
addb
mov
dec
jb
in
in
add
loope
test
dec
out
or
pop
pop
inc
imul
jno
jmp
or
dec
jmp
mov
cmp
mov
mov
inc
in
cmpsl
sub
cmp
inc
scas
call
mov
fbld
scas
outsb
loopne
mov
test
inc
inc
or
imul
outsb
out
dec
clc
pop
push
rclb
push
xor
lret
or
inc
adc
mov
sbb
test
ljmp
mov
fwait
cmc
scas
mov
and
dec
lahf
jb
pop
out
in
pop
dec
jle
cmpb
xchg
add
mov
mov
subb
adc
in
sbb
dec
cwtl
in
pop
add
das
sbb
in
xorb
or
cmc
fimuls
xor
dec
sti
shll
enter
mov
mov
jp
repz
and
mov
dec
nop
or
aad
aam
movsl
push
mov
xlat
fiaddl
xchg
jge
ja
xchg
dec
xchg
loopne
popf
sub
lret
popa
pop
ficompl
aam
jle
sbb
pop
shll
repz
scas
out
dec
mov
add
dec
aad
arpl
xchg
cmp
pop
enter
imulb
cmpsl
stc
mov
addr16
subl
mov
inc
test
or
ret
mov
mov
and
push
int3
sbb
or
jecxz
outsl
into
ja
add
lret
or
lock
jmp
and
xor
sub
mov
bound
push
test
lea
cs
jg
cmp
bound
int3
incl
xchg
adc
scas
sbb
imul
sub
std
dec
xor
leave
mov
adc
scas
cmp
jg
adc
push
outsb
dec
xlat
insb
dec
int3
std
sbb
int
push
outsl
int3
adc
jns
push
push
xor
stc
mov
sbb
or
inc
adc
daa
jne
jns
test
mov
lds
ljmp
fiadds
push
push
dec
push
icebp
cmpsb
out
and
shl
mov
jns
add
inc
in
fsubp
mov
jns
mov
xor
add
movb
psubd
rcrb
enter
jle
pop
outsb
mov
or
push
les
sub
pop
jmp
lea
addr16
inc
lret
cmp
out
dec
aad
and
inc
add
aaa
mov
or
pop
or
pop
add
bound
dec
stos
lea
jnp
xchg
lods
inc
shlb
in
mov
fildll
xor
jge
xchg
addb
cltd
arpl
imul
stos
out
mov
pop
jnp
fdivl
xchg
lcall
inc
data16
dec
cmpsb
imul
mov
clc
pop
jnp
mov
pop
xor
xchg
pusha
xchg
adc
rcl
cmp
in
ja
rcl
lods
popa
jae
arpl
inc
imul
test
fistps
enter
enter
or
popf
lret
dec
lea
mov
rcrl
in
xor
test
fbld
scas
out
jge
or
mov
sub
lods
add
push
mov
pop
int
ljmp
xchg
add
shll
mov
adc
dec
fistps
fsubrs
rol
in
xor
cmpsb
lock
sbb
jne
sub
dec
sbb
dec
push
mov
shrb
pop
pop
inc
out
in
fimull
in
aam
insb
sbb
fmul
bound
add
and
insb
outsl
pop
outsl
daa
sahf
rolb
or
mov
fs
in
in
into
imul
jmp
cmp
xchg
jg
xor
cmp
decl
dec
je
shrb
fldenv
jle
loop
flds
ret
jbe
xchg
mov
cmpsl
or
jae
aam
xchg
dec
testl
popf
in
stc
fisubrl
in
xor
lods
add
push
mov
jecxz
or
outsl
clc
add
rolw
outsl
pop
out
add
inc
jae,pn
andb
movsl
xlat
out
fdivp
adc
loope
fwait
sub
and
sub
fsubr
inc
adc
adc
adc
jb
add
je
add
and
pop
movsb
sahf
or
pop
dec
imul
in
jle
test
outsb
cmp
stos
push
jge
nop
fistpll
fchs
scas
fnstsw
cmpsl
dec
data16
lods
outsl
outsb
sub
loopne
callw
mov
insb
or
es
dec
popa
pop
lods
dec
gs
adc
xchg
nop
sub
test
mov
ret
ret
sub
mov
outsb
or
fisubrs
call
add
lea
je
add
scas
xor
repz
repnz
cmp
out
enter
inc
dec
in
mov
lods
lea
pop
daa
ret
pop
mov
lods
outsl
in
rcl
test
pop
push
jle
jnp
in
cs
mov
mov
mov
aad
out
rcll
in
jb
xor
loope
fnsave
mov
aas
call
dec
repnz
sub
cwtl
dec
outsl
subb
and
cmp
adc
and
xchg
jno
ret
xor
adc
test
ja
jnp
jb
add
and
insb
pop
bound
aam
out
add
ja
lahf
jns
push
arpl
xor
outsb
jbe
mov
test
cs
dec
and
scas
cmp
mov
adc
add
cmp
mov
aam
pop
sub
bound
push
mov
xchg
fisubrl
stos
outsl
mov
jg
les
scas
imul
adc
xchg
imul
mov
xor
push
mov
mov
and
fildll
test
jae
xlat
mov
cli
fldt
mov
add
adc
rcrl
jle
and
jl
loop
cld
sbb
and
pop
in
bound
or
pop
mov
stos
sbb
mov
in
inc
rcl
outsb
adc
lret
in
leave
jns
insb
pop
jno
loop
mov
mov
or
lret
xchg
and
sub
sub
push
movl
mov
mov
out
cs
push
clc
sbb
ja,pn
in
and
dec
adc
sub
lods
out
ret
fcoml
add
into
and
xchg
insb
pop
adc
jp
pop
inc
add
push
mov
sub
inc
adc
lret
and
and
dec
test
aaa
test
cmp
sti
add
and
cs
xchg
shrb
out
add
jl
sub
popa
fiaddl
shrb
call
mov
popa
arpl
lahf
in
inc
lock
push
outsl
pushf
lods
dec
mov
ret
insl
test
add
inc
dec
fs
pop
lods
dec
ror
insb
std
jmp
jle
adc
push
scas
jp
sub
lods
lods
int
mov
fbld
in
push
mov
pop
mov
insb
arpl
xor
sub
ja
mov
int
xchg
mov
test
jp
je
in
mov
jns
push
jb
xchg
lahf
lods
and
leave
jle
jne
imul
stos
imul
int3
insb
and
scas
in
lods
subb
sbb
fnstenv
in
lret
dec
add
mov
out
hlt
and
sbb
into
mov
cwtl
mov
aad
push
lds
pop
jbe
cwtl
shlb
add
hlt
push
sahf
jg
loope
sub
test
dec
xchg
in
mov
or
cmc
data16
inc
loopne
mov
push
out
shll
fisttpll
fwait
cmpsb
mov
incl
iret
add
dec
sub
and
sub
sub
outsb
push
int3
out
outsl
ja
std
mov
add
sbb
call
xor
push
and
stos
outsl
lahf
pop
in
call
or
pop
mov
mov
push
cmp
test
popl
leave
popa
imul
outsl
cmpsb
icebp
divl
and
push
rcl
jmp
jg
js
sub
imul
mov
push
mov
jne
mov
mov
scas
pop
cmc
jae
xchg
jecxz
ljmp
out
jl
ja
and
test
and
daa
out
por
lret
pusha
and
mov
loopne
in
push
idivb
mov
iret
stos
dec
stc
xchg
fadds
mov
enter
jp
cmp
scas
sub
and
lock
or
cmpsb
cmp
jecxz
lret
stos
xchg
ljmp
lods
sub
jmp
sarl
shlb
in
mov
paddd
adc
loopne
lret
and
rcll
or
sub
sarw
int3
imul
lods
inc
mov
insl
shrb
mov
jae
ret
mov
dec
out
jns
dec
pop
test
mov
mov
adc
lcall
lods
rorb
mov
push
bound
jae
push
mov
mov
je
js
add
lret
leave
ret
hlt
mov
sub
push
inc
push
add
add
inc
mov
bound
bswap
jno
xor
lock
ret
xchg
jmp
ds
fcomps
bound
jne
jle
sbb
ljmp
mov
and
arpl
add
lods
int3
outsl
outsb
outsb
jae
pop
pop
test
test
arpl
inc
inc
stc
and
xor
mov
jg
out
ljmp
pop
and
sub
outsl
pop
out
in
iret
or
mov
imul
dec
cmp
shrb
rcrl
dec
push
adc
sahf
in
cmpsb
mov
mov
or
std
js
cld
mov
sbb
fs
pop
push
into
lods
xor
xor
cwtl
lret
fwait
das
aaa
fwait
inc
icebp
sahf
jbe
outsb
add
mov
adc
data16
andb
sbb
gs
roll
cld
jbe
loop
fdecstp
and
mov
or
xor
js
jmp
push
out
xor
orl
add
ffree
std
loop
faddl
addl
out
sarb
jae
mov
popf
dec
or
nop
adc
gs
push
mov
stos
push
gs
fsub
mov
xchg
xor
lret
adc
dec
and
addps
out
jg
mov
popa
stos
mov
data16
jne
mov
jge
push
aam
push
call
sbb
push
daa
andb
push
mov
jns
mov
out
hlt
jno
pop
hlt
cmpsl
cmp
lods
inc
insl
mov
insl
push
mov
movsb
lret
xchg
out
pop
scas
push
mov
cs
adc
push
dec
sbb
imul
mov
and
scas
imul
mov
int3
mov
outsl
sub
or
fld1
pop
lcall
mov
cmp
mov
adcb
fistl
push
push
sar
push
call
push
rcrl
add
test
outsb
into
ficompl
mov
add
dec
mov
clc
mov
hlt
gs
sbb
dec
repz
daa
in
sub
out
cmpsl
outsb
push
jae
or
cltd
inc
mov
mov
xlat
jno
sbb
pop
insb
addr16
or
lods
movsb
out
test
cld
movsl
jae
pushl
mov
dec
jle
cld
and
adc
cmpsl
lret
mov
dec
fidivs
clc
cld
out
fildl
add
je
test
add
add
sti
push
dec
push
xor
pop
mov
rolb
icebp
or
xchg
insl
cmpsb
jb
rep
clc
mov
sti
pop
jg
call
mov
and
push
and
std
dec
jmp
icebp
jnp
js
ficoml
arpl
pop
das
out
jecxz
ret
fdivrs
cmpb
sub
adc
mov
iret
xchg
addr16
sbb
add
cltd
ljmp
and
pop
lahf
push
fwait
jmp
lahf
jmp
cmpsl
mov
into
mov
dec
xchg
mov
outsl
mov
or
fwait
inc
adc
loop
mov
ret
ds
push
out
lock
into
xchg
dec
push
or
ret
jg
dec
imul
push
and
test
arpl
in
or
popa
outsb
dec
push
ret
scas
xor
adc
pop
outsb
xor
jb
outsl
mov
ljmp
int3
add
sub
addr16
cs
loop
inc
adc
sub
nop
imul
call
scas
outsl
jno
jno
lcallw
jb
jb
jno
js
mov
sbb
das
push
lcall
mov
out
rol
loop
mov
outsl
fstpl
stos
fwait
stc
in
fdivrs
dec
or
xchg
iret
or
popf
cmp
sbb
ret
scas
pop
repnz
inc
into
mov
int3
rcrb
in
mov
shrb
pop
addr16
xor
xchg
mov
adc
nop
enter
aam
lds
leave
enter
fcomp
jbe
jnp
fisttps
add
and
insb
lods
and
aad
and
mov
std
adc
pop
icebp
jg
outsb
in
cmp
gs
and
add
sub
push
lret
call
or
sub
leave
ljmp
add
scas
cmpsl
cmp
out
outsl
test
inc
lea
cmp
add
fwait
jmp
pop
and
aas
rorl
data16
lret
push
inc
xchg
stos
out
movsl
jb
pop
inc
idiv
inc
jle
xchg
inc
push
mov
or
pop
pushw
in
out
out
mov
mov
push
test
ljmp
push
cmpsl
pop
add
insl
clc
cmpsl
push
lret
cs
mov
gs
cwtl
dec
ljmp
adcb
outsl
stc
stos
dec
das
out
dec
mov
ljmp
add
dec
and
pop
dec
inc
in
and
add
dec
push
and
movsl
jae,pt
cmp
push
outsl
loop
ffree
mov
imul
loopne
hlt
out
outsb
into
cmp
ljmp
leave
dec
mov
outsl
scas
mov
sub
mov
jp
jae
cltd
pop
mov
ret
pop
sub
shlb
sub
mov
bound
or
inc
cwtl
out
xchg
leave
mov
jl
push
imul
mov
push
jg
lds
pop
dec
insb
cmp
pop
jge
adc
cmp
aaa
pop
push
adc
orb
push
sbb
inc
mov
xchg
and
addr16
jne
cmp
mov
lds
adc
pushf
js
ror
inc
imul
sbb
adc
jmp
sub
imul
in
mov
xlat
cmpsl
lods
rorb
mov
loope
addr16
mov
add
mov
mov
mov
pop
mov
icebp
lret
adc
loop
cmp
sbb
std
push
movsb
cmpsl
push
in
mov
push
imull
ret
push
cld
nop
mov
jne
push
cmp
in
movsb
push
mov
ljmp
outsb
add
insl
xor
adc
bound
loope
ljmp
into
arpl
out
lret
jecxz
mov
jno
lods
testb
scas
fsubl
mov
mov
ljmp
adc
in
mull
pop
and
sub
test
icebp
add
jne
sbb
pop
fs
inc
xchg
out
push
mov
aam
jbe
dec
jne
and
out
je
jle
cmpsl
xchg
mov
jo
cs
jmp
or
cwtl
pop
out
cmp
sbb
shll
adc
jge
test
out
jns
push
pop
cmpsb
outsl
test
cmp
xchg
in
xchg
das
icebp
lock
dec
cmp
or
cmp
out
mov
xor
out
test
je
pushf
jae
jae
fadd
out
mov
je
clc
cmp
push
inc
sub
sbb
out
pcmpgtb
ja
stos
and
das
xchg
test
lods
out
stos
and
mov
nop
aaa
pop
movsl
lea
orb
cltd
jle
pop
outsb
in
sub
outsb
push
mov
sub
testl
dec
xor
jo
aaa
out
dec
cli
cmp
es
hlt
ret
out
push
add
ds
imul
fwait
dec
arpl
push
and
int
sbb
hlt
pop
out
inc
push
jae
popf
sbb
mov
mov
pop
dec
mov
xor
loopne
adc
dec
pop
xorl
stc
fcomps
jno
imul
mov
cld
in
sbb
add
mov
in
aad
jl
hlt
jae
cli
sbb
out
push
push
mov
outsb
mov
fnop
addr16
ret
mov
lret
mov
cmpsb
push
rcll
jg
xorl
dec
mov
mov
stos
sbb
xchg
add
jge
bound
pop
shrl
stos
mov
jae
cmp
imul
int3
mov
dec
lds
sub
push
lds
test
cmpsb
repnz
push
dec
testl
icebp
outsl
mov
push
popa
jg
fstpt
xchg
push
push
testw
dec
xchg
push
sub
lea
lahf
out
insb
mov
pop
jbe
leave
mov
sbb
push
inc
repz
inc
sbb
jo
in
std
pop
int3
sarl
sub
in
cmpsl
cmp
mov
repz
xor
int
pop
shrl
mov
frstor
jne
les
xor
push
jne
dec
push
inc
outsb
jne
test
in
sub
popa
lods
adc
cmp
sub
in
fiadds
movsl
mov
outsl
and
adc
sbb
stos
dec
lahf
outsb
jbe
mov
addr16
push
fdivr
aas
jge
mov
mov
sbb
jno
pop
stos
insl
movsl
cld
dec
in
outsl
jge
insb
outsl
std
in
dec
jl
pop
out
mov
xchg
rolb
mov
cmpsl
jp
fiaddl
pusha
gs
test
lods
cmpsl
dec
mov
sbb
ret
jbe
cmp
add
sti
xchg
push
add
out
fcoml
int3
ss
fbstp
loop
mov
sbb
push
imul
fmull
lcall
add
adc
pusha
jmp
movd
pop
add
and
push
rorb
add
jns
mov
imul
dec
enter
xchg
adc
lock
out
jae
stos
cmp
dec
xor
add
outsb
jmp
jne
xchg
int
lea
das
bswap
mov
outsl
jae
mov
cmp
lea
and
xchg
xor
or
inc
popf
mov
add
out
xchg
stc
lock
pop
add
imul
xlat
cmp
stos
xchg
in
jne
fsubrs
or
push
out
out
mov
lds
mov
pop
outsb
cmpsb
dec
fldenv
jno
add
fisubs
dec
mov
in
nop
jne
fdivrs
into
sub
repnz
add
pop
add
outsl
add
mov
not
fwait
insb
mov
adc
fiaddl
dec
filds
insl
push
push
subb
jmp
roll
cld
jmp
pop
jbe
ret
pop
out
lds
filds
cld
outsl
ds
push
insl
mov
mov
aam
out
int
jecxz
int3
cmp
mov
mov
dec
xor
outsl
xchg
mov
xchg
fwait
ret
or
insb
loop
mov
pop
outsl
mov
lea
inc
pop
es
and
xchg
lahf
addb
lahf
jno
add
in
cwtl
out
sti
scas
ja
int3
rep
pushf
cmp
es
pop
xchg
fsubl
mov
mov
outsb
enter
lahf
loope
repz
push
lret
cmp
insb
mov
test
sub
jmp
in
jp
push
mov
aas
inc
cmpb
sub
orb
cli
pop
cmp
aad
push
jae
push
les
mov
push
jecxz
push
pushf
push
cmp
dec
cmc
in
icebp
outsl
push
mov
fisttps
or
fbld
sbb
pop
out
adc
aaa
mov
movsl
stos
cld
jl
pop
jp
jae
jb
hlt
dec
add
das
jo
loop
xchg
sub
rolb
inc
out
jecxz
sub
pop
push
imul
outsb
inc
sbb
test
testl
or
adc
rcrl
and
arpl
inc
pop
movsl
cltd
or
cmp
lods
in
out
fwait
out
push
and
push
leave
mov
mov
xchg
stos
push
add
inc
jno
jle
scas
loop
inc
xchg
shrb
inc
xchg
jno
dec
push
sarb
jnp
jle
xchg
outsl
stc
or
push
loopne
push
inc
dec
push
cs
xchg
in
fistpll
cs
outsb
jno
adc
xchg
or
mov
aad
int3
pushf
data16
loopne
mov
mov
and
xchg
gs
fsubrl
fmuls
in
add
lea
lods
das
and
imul
sub
dec
int3
pusha
mov
cld
scas
das
aaa
daa
imul
adc
xchg
push
cmpsl
mov
imul
mov
cli
mov
dec
in
jg
jb
call
pop
pop
fs
push
fldl
mov
inc
mov
mov
fdivs
dec
outsb
sbb
outsb
jg
jge
test
sbb
jecxz
rcll
fadds
arpl
in
mov
xor
xor
dec
gs
mov
jbe
lock
push
sub
adc
enter
sahf
insl
insb
inc
data16
fnstenv
out
jae
jle
pop
subl
xchg
outsl
cli
and
sub
lods
add
outsb
add
push
or
dec
jmp
sub
arpl
mov
es
jno
cmpb
stos
xlat
mov
lock
dec
jns
push
xor
mov
movsl
in
loopne
cmp
out
dec
add
or
add
push
out
lds
repnz
pusha
pop
scas
mov
dec
cmpb
mov
inc
shrl
sub
lods
loop
jns
mov
xor
gs
lock
add
sub
cmc
sbb
iret
data16
xchg
mov
idivb
outsl
xchg
aad
mov
mov
iret
insl
jae
aad
dec
and
pop
aad
dec
rorb
mov
xchg
addr16
jae
test
xor
popa
inc
push
in
sub
fsubs
ds
daa
lods
ja
outsl
push
cmpsb
in
test
push
pusha
push
outsb
mov
dec
sub
pop
out
dec
arpl
xchg
mov
inc
imul
enter
into
nop
xor
push
imul
or
or
sub
stos
stos
mov
dec
scas
or
lea
test
lds
call
mov
cmpsl
add
mov
dec
mov
xor
scas
sti
je
rorb
jmp
jae
test
dec
mov
mov
xor
pop
sub
pop
imul
mov
pop
push
and
jmp
mov
sbb
mov
stc
cmpsb
divl
cmp
mov
fisttpll
xchg
xchg
shl
push
in
rolb
push
dec
sub
jae
mov
sub
mov
push
and
call
ficoms
or
movsl
pop
push
or
jg
cmpsb
fs
inc
sbb
scas
ljmp
pop
loopne,pn
daa
pop
and
idiv
rol
jmp
aaa
pop
dec
push
inc
enter
push
pop
ljmp
sub
jne
std
add
dec
push
cmc
jmp
dec
pop
inc
call
cmp
sbb
jl
jl
fxtract
jle
ljmp
jg
cmp
sbb
fildll
mov
mov
fs
movsl
cmp
pop
sub
gs
mov
nop
mov
and
test
daa
ja
cs
bound
movsl
add
jbe
mov
pop
out
out
mov
out
ficoms
add
fs
repnz
out
mov
jae
shrb
scas
adc
or
sbb
push
mov
adc
das
sub
inc
mov
xor
iret
xchg
imul
inc
mov
fistps
mov
or
sbb
out
lret
fwait
jg
push
add
mov
pop
jl
xchg
push
loope
push
iret
push
loopne
xchg
iret
aas
pop
fs
xchg
cmp
mov
jmp
fldl
int
inc
rorb
add
xchg
std
xchg
movsl
call
sbb
call
mov
es
sbb
mov
and
adc
enter
lretw
add
cmp
fnstenv
fdivrl
mov
out
arpl
jbe
std
mov
mov
xor
adc
mov
les
repz
jle
insb
jp
stc
push
in
add
adc
loope
fidivrl
jg
and
push
movsl
add
jns
stos
inc
std
jns
negb
out
bound
movsb
test
clc
adc
lahf
rcll
repnz
pop
stc
stc
lret
add
cltd
add
ja
andb
adc
dec
roll
xchg
rorb
fs
pop
andl
frstor
in
mov
cmp
xchg
pop
gs
pop
aad
call
out
pop
std
add
or
sbb
outsl
out
mov
or
adc
movsl
cmp
mov
loopne
pushf
cltd
dec
push
or
stos
jns
jp
mov
aas
pushf
mov
js
and
ja
push
push
xchg
or
insb
push
push
cmp
addb
lods
sbb
mov
outsb
lock
sbb
cwtl
and
mov
or
int
js
pushf
in
cwtl
sub
out
jmp
adcb
xor
pop
push
nop
jmp
ret
mov
test
enter
jmp
cwtl
push
jmp
out
pop
or
daa
cs
mov
xchg
es
adc
sbb
dec
insb
insb
rcr
mov
pcmpgtd
les
mov
jmp
cmpsb
cmpsl
push
sbb
xchg
jnp
in
repnz
mov
push
or
pop
push
adc
pop
loope
imul
out
dec
cmpsb
push
inc
add
cmpsl
in
mov
jmp
or
test
push
daa
call
mov
fidivs
or
call
outsl
ret
push
out
scas
mov
or
sub
movsb
fldcw
add
stos
or
aaa
mov
icebp
pop
push
lods
add
mov
fsubp
and
push
aaa
fisubrs
and
and
sub
cmp
jno
pop
insb
call
cltd
mov
movsl
mov
push
dec
jae
std
cmp
xchg
pop
cli
jb
push
mov
out
push
pop
call
push
mov
clc
in
stos
iret
jmp
out
insb
rcr
imulb
pop
das
mov
xchg
jle
inc
int3
shll
shlb
ja
movsb
push
push
cmpsl
shll
mov
shl
arpl
mov
daa
testl
adc
ljmp
je
shlb
testl
es
call
inc
dec
jae
add
pop
add
pop
mov
jmp
mov
and
xor
test
inc
mov
pushw
xorb
rorl
leave
push
ja
sub
jge
adc
repz
pop
lods
fsubl
sbb
dec
mov
pop
loopne
inc
xchg
push
bound
add
push
adc
loope
ficoms
loopne
testb
shlb
ret
xchg
test
outsl
dec
push
or
mov
dec
repz
ja
xchg
mull
cmp
outsl
cli
add
jle
xor
lret
cmp
repz
or
and
jns
insb
imul
into
jbe
sarl
mov
imul
std
mov
or
mov
sar
test
mov
xchg
shlb
in
dec
inc
dec
add
sbb
test
iret
pushf
std
mov
in
insl
jl
iret
push
stos
mov
adc
dec
hlt
jne
pop
xchg
cmpsl
insb
cmpb
pop
jmp
sbb
movsb
test
cli
and
jb
stos
outsb
jmp
add
je
mov
jle
lahf
mov
mov
mov
dec
dec
call
pop
pushf
subl
jnp
pop
incb
stos
pop
mov
dec
jp
call
fdivl
inc
xchg
ret
outsl
xchg
rorb
mov
scas
aaa
sub
pop
int
repz
pop
mov
mov
insl
push
mov
adc
loop
imul
lds
sub
cld
clc
inc
roll
add
jle
loope
and
push
imul
ss
roll
sub
imul
negb
dec
out
mov
dec
add
xor
xor
test
push
add
add
xor
dec
adc
mov
jb
aam
add
stc
add
imul
jne
addr16
out
xchg
inc
test
pop
in
in
je
dec
enter
push
fnstenv
addr16
inc
icebp
movsb
int
vmovdqa
push
into
xorl
mov
ret
movsl
push
call
jae
xor
adc
daa
ljmp
mul
push
movsl
std
outsb
ret
call
ja
lock
jae
mov
fs
add
enter
pop
loopne
dec
inc
cmpsl
outsl
inc
or
call
cmp
xor
outsl
mov
xor
iret
xchg
cld
test
mov
testl
jb
repnz
jb
and
push
inc
dec
mov
dec
leave
icebp
jns
ret
in
or
sbbl
pop
insl
iret
and
outsl
pop
in
cwtl
lock
ret
js
jecxz
stos
test
or
and
mov
or
jl
or
push
sub
inc
test
stc
push
and
cmp
dec
test
pop
scas
ret
or
jne
in
out
orl
jno
scas
cmp
das
outsb
in
push
lea
dec
push
or
pop
jbe,pn
add
in
outsb
stc
imul
cmpsb
imul
and
insl
and
jmp
int3
push
add
mov
insb
lock
pusha
outsb
xchg
dec
insl
push
call
cmp
shl
add
jg
mov
dec
jno
or
xor
dec
ds
sbbb
pop
ss
adc
ret
out
insb
fs
fcomi
xor
outsb
mov
or
sub
mov
push
ja
adc
sbb
out
pop
push
inc
xchg
add
lcall
and
push
enter
scas
cmc
pop
lret
into
arpl
mov
insl
cmpsb
or
mov
outsb
test
jmp
enter
or
add
in
add
ss
cltd
inc
jns
insl
or
adc
pop
or
mov
jmp
rorl
and
das
imul
cmpb
push
out
int
push
fdivrl
insl
insb
outsl
movsb
fistps
xchg
es
xor
pop
pop
mov
ljmp
mov
adc
aaa
shrb
arpl
sub
ds
rol
lret
dec
in
add
les
lds
mov
and
push
push
insb
pop
xchg
sbb
inc
sbb
xchg
xchg
or
mov
mov
sub
or
add
add
rcrb
jg
je
aas
mov
loop
add
xchg
mov
scas
mov
xchg
jo
shr
ja
mov
repnz
out
jp
mov
inc
jle
imul
lret
sar
je
cmp
call
xchg
and
mov
nop
or
out
push
out
xor
cmp
jnp
fmull
in
daa
aam
ret
cmpsb
cmp
dec
testb
lret
out
dec
dec
pop
repz
pusha
push
jae
shr
out
data16
enter
clc
hlt
ljmp
xchg
stos
lock
mov
neg
push
ja
and
scas
insl
jb
rcrb
jbe
popl
fwait
out
clc
decb
fsubrl
outsb
sahf
sub
inc
mov
rorb
outsl
nop
dec
jae
shrl
add
dec
movsl
jp
sub
fsubrl
pop
in
in
int3
gs
add
sbb
loope
mov
enter
cwtl
aas
std
cli
pop
js
jge
data16
add
call
push
js
jns
pop
cmp
mov
es
sub
xor
popa
cmp
ds
data16
movsb
pop
and
pusha
mov
dec
ret
push
mov
mov
add
mov
jae
mov
push
pushf
mov
outsl
sbb
sub
outsb
and
push
ret
fmuls
and
cmp
andb
cs
arpl
pusha
sub
jmp
lcall
xor
out
jecxz
call
out
inc
mul
pop
dec
outsb
imul
insl
push
lahf
hlt
add
jg
dec
and
adc
in
sahf
test
stos
dec
icebp
out
in
add
das
jle
mov
pushf
cmp
push
pop
mov
or
out
jno
adc
mov
add
ret
insl
sub
push
outsb
insb
pusha
stos
mov
sub
inc
outsb
gs
cmc
push
mov
clc
pop
lret
add
xchg
fadds
sub
les
jge
and
mov
lods
call
or
daa
add
pop
es
push
jno
test
jb
add
test
dec
push
fwait
mov
shrb
add
lods
pop
ret
rorl
sbb
lret
dec
sub
insb
lods
lock
xor
arpl
and
outsb
lahf
jne
mov
icebp
loope
enter
ret
call
inc
inc
sahf
jmp
cld
insl
cmp
ss
int
pushf
arpl
pop
sar
xor
into
outsl
call
int3
jne
out
outsb
jns
rorb
stos
jge
call
lods
in
dec
push
out
jno
cwtl
movb
call
mov
push
in
dec
in
pop
mov
push
outsb
mov
pop
pop
adc
addr16
jle
shl
xchg
push
dec
insb
clc
push
inc
push
add
data16
ret
add
xchg
lea
jl
or
arpl
mov
mov
mov
out
push
push
iret
inc
addr16
cmp
mov
sbb
gs
sahf
icebp
jp
add
push
pushf
pop
js
push
scas
inc
fldt
mov
and
cmp
daa
cmpsl
in
mull
xchg
inc
das
scas
js
ljmp
add
lods
int
inc
lds
push
bound
insl
inc
enter
in
mov
sub
sub
dec
imul
inc
sbb
call
loope
popa
push
mov
cmc
enter
mov
cmp
ja
add
enter
rolb
out
in
in
dec
push
in
and
test
fwait
imul
push
out
mov
ret
jp
arpl
fsubrl
xorl
iret
test
mov
outsl
js
imulb
cvtpi2ps
outsb
int3
dec
inc
dec
scas
sub
int3
jg
mov
sbb
adc
imull
dec
fldt
pop
pop
adc
sbb
adc
push
fdivr
test
rol
inc
pop
inc
into
fmuls
dec
jmp
jle
testl
xor
dec
out
sub
add
jle
push
jl
sar
mov
gs
cmp
outsb
in
dec
mov
add
cmp
outsb
adc
jnp
dec
outsl
mov
incl
push
sub
dec
into
mov
leave
push
adc
push
xchg
pushfw
out
fists
fxch
mov
sub
cmc
jg
dec
fs
fistps
inc
outsl
jno
jae
or
shr
out
and
cmp
xchg
dec
icebp
mov
andl
pop
jno
je
sbb
or
sub
add
jns
imul
shr
leave
mov
push
in
scas
imul
dec
sbb
insl
push
stos
aas
test
jg
test
popf
in
xchg
imul
push
loop
gs
pop
out
adc
mov
adc
icebp
dec
dec
and
pop
out
int3
in
icebp
inc
call
ss
adc
add
stos
jnp
call
aas
in
ja
jp
adc
pop
out
cmc
out
call
add
arpl
dec
jns
outsb
mov
and
sub
xchg
inc
repnz
mov
sub
xchg
dec
mov
and
std
icebp
arpl
in
jecxz
mov
or
testb
jbe
cwtl
out
pop
adc
movsl
rcll
or
mov
shlb
cmpsl
out
and
arpl
dec
outsl
jle
xchg
fwait
sbb
add
xor
jle
cmpsb
lcall
mov
pop
je
jb
cltd
push
incl
mov
mov
roll
cmpsl
test
insl
movsl
shll
outsl
jle
in
add
dec
sbb
add
fisubl
xchg
lods
jge
or
stos
fcoms
out
lds
mov
hlt
inc
loope
call
push
scas
add
mov
pop
inc
insl
inc
loop
ffreep
push
sub
mov
xor
lock
ret
pop
aas
shlb
jle
mov
lds
jnp
mov
and
out
mov
clc
sti
fildl
mov
dec
jg
lods
gs
xchg
testb
movsl
repz
out
sahf
mov
repz
aam
cs
xchg
jb
inc
js
sub
dec
popa
push
mov
jge
imul
or
add
push
sbb
dec
ficoml
adc
fldt
in
jg
or
pop
push
adc
rclb
xchg
inc
ds
loopne
adc
add
ret
push
ja
jae
in
add
sub
jg
leave
or
jns
jb
jg
test
jb
je
stc
nop
xor
jo
daa
cmp
xchg
push
outsl
test
xchg
xchg
sahf
mov
and
popa
mov
xor
data16
cmpsl
mov
adc
pop
aaa
pop
test
cmc
sbb
in
inc
jge
mov
or
xchg
sbb
lea
pop
inc
mov
mov
dec
je
ret
pop
lret
or
popa
xchg
and
pop
aad
test
mov
jne
ficomps
lock
pop
icebp
push
push
dec
idivl
stos
or
xchg
addr16
out
jae
inc
push
insb
push
test
into
dec
lods
dec
mov
out
repz
jge
push
push
flds
dec
adc
aam
mov
in
or
dec
jbe
jae
xchg
ds
sbb
repz
leave
mov
push
sub
repz
mov
adc
xchg
cli
fwait
stc
jns
repz
xorb
cmpsl
shl
cmp
jb
cmpsb
je
test
je
fcoms
sub
icebp
or
dec
sub
jbe
je
mov
jmp
outsb
mov
idiv
pop
out
mov
push
das
jb
sbb
or
stos
lcall
push
in
xor
test
lock
in
mov
ret
les
mov
pop
imul
gs
pop
cmc
xchg
jae
mov
pop
cmpsl
jnp
test
call
adc
data16
xchg
das
mov
xchg
outsb
xor
jge
into
jno
mov
pop
sub
stc
je
dec
mov
ljmp
jae
ficomps
movsb
cmc
push
imul
int3
scas
scas
mov
test
jmp
pop
ret
scas
or
hlt
pop
jnp
inc
adc
in
cltd
sub
psubsb
add
mov
in
or
aas
pop
jb
ljmp
sub
mov
bound
add
lock
inc
repz
repz
sub
jge
xchg
orl
sub
and
xchg
adc
push
xor
test
in
mov
mov
jnp
mov
ret
test
mov
icebp
or
pop
sub
push
aaa
and
out
pop
shrb
dec
lahf
pop
sub
ljmp
or
lods
and
lret
dec
and
sub
ss
mov
shrb
push
outsb
lret
popa
pop
rorl
sti
cli
jl
jae
xchg
inc
outsl
dec
outsb
call
sahf
aam
js
popa
outsl
ret
push
jno
push
testb
test
arpl
mov
insl
lea
mov
out
mov
mov
add
jmp
movsb
adc
push
dec
mov
out
stos
and
lock
push
lds
mov
and
sub
outsb
inc
and
cmp
pushf
fcoml
mov
sub
inc
mov
je
addr16
push
dec
call
gs
mov
jg
inc
addr16
mov
gs
enter
out
call
cmpsb
lock
stos
lods
and
push
and
mov
in
leave
out
ljmp
shrl
arpl
out
dec
mov
shll
arpl
xchg
outsl
bound
pushfw
imul
add
stc
dec
out
dec
bound
shlb
outsb
loop
repz
xchg
lret
xorl
add
test
outsb
lock
shl
lods
dec
scas
dec
cld
xorb
mov
sub
sbb
pop
lock
or
dec
adc
test
outsl
repnz
test
out
out
outsb
insb
ja
inc
icebp
pop
dec
jae
fs
push
push
aas
shrl
add
or
in
jmp
aas
loope
jmp
scas
dec
out
cs
int
push
imul
les
push
mov
pop
movb
sub
mov
pop
scas
bound
enter
add
in
push
dec
add
sub
cmpsb
xchg
outsb
jl
loop
cmp
mov
daa
push
jns
push
iret
pop
sub
test
outsb
cmp
mov
loope
mov
cs
ljmp
lock
and
dec
je
xchg
test
sbb
in
std
in
in
pop
hlt
iret
jg
test
imul
outsl
ljmp
mov
ret
jl
out
and
dec
aas
imul
jg
or
imul
movsl
imul
repz
dec
pop
push
mov
outsb
js
pop
inc
imul
aam
xchg
jno
daa
out
outsl
stos
mov
adc
push
sti
jg
push
inc
subb
jmp
sbbb
pop
out
loop
into
dec
or
xor
pop
xor
aam
dec
dec
sub
dec
fs
arpl
test
lea
mov
push
mov
pop
out
jg
daa
decl
clc
std
movsb
jl
cld
insl
jnp
daa
sti
mov
cli
jg
clc
stc
add
clc
movsb
ja
imull
jmp
testb
hlt
movsb
jae
rep
jb
daa
repnz
icebp
std
mov
movq
out
movsb
outsb
dec
out
insl
insl
jmp
in
mov
jg
clc
jmp
push
ljmp
js
daa
dec
and
data16
call
dec
jp
int3
loop
sub
inc
rcll
add
mov
test
ljmp
xor
es
insl
lahf
xchg
insb
clc
lods
imul
imul
popa
sub
outsl
imul
dec
decl
mov
jle
in
sbbl
outsl
jge
loope
ljmp
outsb
daa
insb
sub
jl
cld
mov
jp
jns
ss
mov
dec
imul
fs
cmp
test
mov
add
call
sub
outsl
out
daa
sub
test
mov
ror
dec
stc
dec
addr16
js
gs
add
and
popa
scas
add
and
imul
jg
out
int3
pusha
jbe
outsb
ljmp
mov
jne
stc
imul
add
imull
cmp
cmp
in
mov
dec
repz
and
lods
icebp
imul
lock
insb
outsl
jb
in
fists
pusha
repnz
imul
dec
jno
out
int3
movsb
in
lock
lods
in
pop
rorl
pop
mov
push
push
add
fs
test
mov
add
sub
out
call
mov
outsl
jns
inc
add
out
fsubs
push
popa
inc
insb
pusha
insl
outsl
idivb
outsb
mov
dec
dec
in
dec
hlt
mov
insb
or
insl
xor
lods
pusha
in
outsl
in
outsb
mov
dec
imul
adc
out
outsl
insb
pop
or
push
add
sub
outsl
ljmp
pusha
imul
insb
jmp
jecxz
sbb
mov
imul
test
scas
loope
adc
ret
arpl
mov
push
bound
out
cs
dec
mov
add
mov
adc
repnz
inc
mov
xchg
jno
jp
test
in
insb
or
inc
mov
out
out
cli
or
fucomi
int3
adcl
push
lea
cmp
pop
cli
sbb
add
outsb
gs
test
push
popa
call
into
in
jbe
cld
mov
pop
mov
xor
ljmp
cld
and
loope
outsb
daa
jp
outsb
incl
in
xchg
add
movsb
jno
pop
jb
out
adc
jecxz
xor
inc
pop
imul
outsb
aam
add
mov
aas
faddl
mov
and
jns
test
cmp
scas
inc
push
popf
sub
dec
xchg
test
fadds
push
roll
jnp
outsb
test
cld
shr
push
sbb
insl
jle
jbe
adc
outsb
dec
xchg
outsb
cmpsb
or
hlt
out
jge
mov
fldl
pop
mov
pop
pop
add
movsl
ljmp
add
jno
repnz
leave
insl
outsl
push
cmp
fimull
xchg
insl
jecxz
mov
pop
es
cmpsl
cmc
call
xchg
lret
outsl
incb
add
data16
cmpsl
sub
jle
shl
lock
into
push
pusha
mov
out
aas
cmp
call
xor
cmpl
ret
cmpsl
push
cs
adc
lods
inc
cmpl
ficoml
lret
dec
mov
subl
add
push
adc
fisubs
mov
sbb
repnz
imul
dec
pop
dec
out
jae
fisttps
jg
push
int3
xchg
in
inc
sti
les
fildll
ja
inc
movsl
subb
mov
ljmp
in
imul
mov
jae
sub
jp
pop
xchg
fildll
clc
xor
imul
in
mov
scas
pop
mov
dec
test
out
adc
and
dec
andl
sbb
cmp
inc
jle
outsl
ljmp
in
fdivs
test
je
lea
outsl
ljmp
xor
je
add
push
lret
nop
jle
mov
rolb
mov
jb
adc
loopne
dec
xor
dec
decl
arpl
in
fldcw
jecxz
dec
clc
jle
mov
ljmp
out
rcrb
clc
out
pop
js
ja
outsb
and
dec
cli
dec
inc
gs
add
cmpsl
test
js
xchg
mov
insl
sub
mov
stc
int
movsb
frstor
or
inc
jg
popa
push
dec
addb
inc
and
jle
and
loop
and
pusha
jb
enter
popa
rol
pusha
clc
outsb
push
rclb
cltd
xor
cld
dec
stc
ja
idiv
insb
or
jbe
push
out
daa
inc
fidivrl
test
mov
into
addr16
mov
ljmp
lea
mov
push
and
dec
fisubl
inc
mov
mov
das
call
imul
nop
dec
in
fcompl
popa
imull
adc
mov
sub
mov
inc
sub
data16
pusha
adc
les
imul
pop
mov
push
and
hlt
lods
or
fmuls
dec
enter
dec
out
test
and
ljmp
mov
mov
mov
popa
cmpsb
push
mov
jbe
loop
mov
popa
jmp
push
jae
sub
sbb
ja
sub
cmp
adc
xor
jno
mov
cli
mov
jg
and
mov
les
in
mov
pop
dec
mov
int
dec
push
inc
lods
rcrb
push
mov
jae
adc
neg
int
push
icebp
ja
mov
cmpsb
cld
sbb
neg
push
adc
popf
hlt
insb
insb
xor
lea
mov
mov
jmp
push
icebp
mov
icebp
lret
ret
mov
push
in
out
push
mov
repz
rolb
outsl
mov
test
or
fidivs
mov
mov
push
roll
push
pushf
pushf
icebp
icebp
jp
and
pop
ret
and
mov
xchg
mov
ret
inc
stos
pop
lods
jns
jg
mov
add
sbb
mov
cmpsb
sahf
adc
mov
lahf
sbb
stos
inc
std
in
outsl
adc
insb
repnz
jl
scas
dec
or
out
cmpsb
inc
out
cmpsw
imul
call
inc
decb
out
push
xchg
jnp
fdivrl
rcll
inc
jp
dec
movsb
add
sub
loopne
push
stos
add
test
push
testl
out
outsb
fsubrs
orb
sarl
js
arpl
insb
mov
lock
lods
icebp
ds
in
adc
outsl
loope
mov
add
outsl
imul
andl
jmp
fs
out
sub
cmp
adc
dec
lds
jecxz
sbb
arpl
in
add
ljmp
sub
pop
xchg
cmpxchg
add
bnd
int3
sub
lock
pop
jne
ja
aaa
jge
jp
clc
dec
repnz
insl
clc
imul
loopne
ja
insb
add
scas
sbbb
scas
negl
stc
dec
jle
insl
jns
jnp
in
cli
pop
stc
out
jp
outsb
aas
call
lods
popa
xchg
lods
loop
jge
lods
bound
out
sub
mov
scas
leave
sub
pop
dec
cmpl
add
pop
and
jae
jmp
scas
outsl
lret
inc
dec
push
mov
dec
orb
popf
dec
jns
mov
call
cmp
insl
pop
outsl
in
xchg
sbb
dec
clc
lods
cmp
outsl
mov
repnz
in
dec
call
push
jecxz
jmp
xchg
stos
in
inc
push
movsl
dec
cmc
dec
outsb
das
out
inc
ret
ljmp
rep
fimuls
adc
nop
inc
test
sbbl
sti
lret
in
cli
lods
inc
jae
subb
jb
js
and
add
decb
jg
jne
sahf
out
mov
cld
dec
jbe
adc
pop
imul
call
rorl
jae
sbb
jbe
out
test
dec
pop
outsl
js
sbb
mov
jb
push
nop
fs
in
jge
pslld
outsl
divl
pusha
jmp
bound
push
pop
dec
cmp
jns
outsl
out
push
pop
cmp
je
subb
xchg
pusha
repnz
dec
addb
jecxz
outsl
cli
stos
aaa
insl
out
inc
push
outsl
mov
js
pop
arpl
ficoms
stos
push
inc
icebp
in
push
jmp
jns
mov
outsb
ds
xlat
pop
jns
mov
out
imull
dec
in
pop
data16
in
jne
movsb
popa
dec
out
out
pop
push
inc
ja
xor
call
and
movsl
cli
pop
mov
xor
jmp
aaa
insb
dec
in
dec
outsb
cmp
jb
dec
mov
movsb
loope
push
outsl
push
cs
xchg
jle
int
cs
movsb
imulb
mov
stc
rol
inc
out
sub
jp
insl
setle
mov
cs
shrb
in
call
je
sar
xor
mov
incl
mov
inc
dec
rorl
dec
cmc
out
jg
jl
jmp
dec
dec
push
inc
nop
out
cmp
jns
sahf
lods
pop
add
sub
push
addb
and
mul
lock
mov
sbb
mov
lock
mov
jl
repnz
fidivs
lods
lock
test
imul
mov
je
hlt
fiadds
dec
jae
out
repz
jne
add
or
cmpsl
out
in
insb
mov
cmpsb
sub
dec
mov
dec
jb
repnz
clc
jno
loop
mov
test
movb
xlat
ror
fs
idivl
cmp
ret
addr16
das
jo
loopne
xor
jae
mov
inc
mov
push
sti
push
bound
adc
scas
mov
cltd
int3
outsl
adc
lods
push
sub
push
mov
push
and
arpl
or
inc
sbb
in
inc
adc
inc
sbb
sbb
mov
sbb
cs
xor
adc
ret
xchg
xor
cmp
lea
iret
cli
cmp
enter
cmp
add
lock
insl
bound
sbb
inc
and
lahf
adc
jne
dec
sbb
push
and
insl
mov
jl
push
fs
push
test
mov
and
dec
sbb
repz
imul
mov
test
jne
icebp
lock
mov
insl
test
dec
rol
jo
test
jg
scas
jae
mov
insl
mov
push
insb
pop
scas
jae
add
pop
mov
out
out
or
adc
lds
es
sub
pop
adc
test
cwtl
insb
stc
sub
sub
sar
inc
lret
jp
adc
and
xor
movsb
bound
cli
out
jg
cltd
mov
insb
in
aad
loop
adc
addr16
bound
out
cmp
and
or
stc
leave
mov
sbb
iret
loopne
xchg
outsl
pop
cs
mov
lret
mov
movsl
or
loopne
je
dec
daa
jb
shlb
or
cltd
fcompl
scas
mov
cs
pusha
and
cs
rcll
mov
icebp
and
push
and
loope
stos
jle
cmpsl
xor
loope
outsb
pop
out
jg
imul
mov
fiadds
imul
orl
cmp
sbb
cmpsb
cmc
inc
inc
cwtl
out
scas
les
ljmp
inc
mov
out
lahf
xchg
push
jmp
leave
sub
dec
push
loop
nop
mov
push
pop
scas
cld
sarb
pop
sub
testl
mov
loop
hlt
fists
mov
clc
or
mov
lods
push
push
dec
push
add
jmp
pusha
icebp
insl
jb
imulb
jbe
add
insb
out
adc
sbb
xlat
sbb
into
jle
mov
shrl
jl
dec
icebp
out
sarb
outsb
out
scas
jno
insl
jle
gs
push
gs
dec
pushf
adc
mov
push
sbb
and
scas
in
fisttpl
je
add
mov
sub
and
and
add
cmpsb
lods
ja
lea
jle
dec
ja
repnz
jnp
in
xorl
addr16
sub
cmpsl
out
mov
pop
mov
test
xchg
xchg
sbb
sub
fldl
push
mov
jbe
mov
shlb
inc
mov
mov
loopne
shll
push
call
movsbl
add
xchg
hlt
or
pop
enter
insl
sub
aam
sub
fbstp
imul
mov
stos
push
stc
jg
mov
mov
sbb
aam
scas
cmp
pop
gs
negl
sahf
out
in
outsb
jmp
insb
fdivrs
jle
negl
ds
mov
fstpl
imul
sbb
xchg
imul
arpl
sti
push
mov
in
or
icebp
jno
mov
clc
andb
outsl
lret
lea
rcr
xlat
mov
or
pop
mov
call
jp
inc
mov
ja
fs
ret
scas
lods
add
xchg
popa
addr16
loopne
iret
in
jb
adc
sarl
lods
lds
dec
xchg
or
sbb
cmpsb
out
bswap
cmpsl
call
movsb
fs
and
inc
stos
out
push
xchg
sub
scas
stos
push
lock
cmpsl
xchg
mov
jp
aas
pop
aad
inc
pusha
out
in
cmc
stos
lahf
push
bound
mov
pop
xor
dec
mov
add
push
scas
jo
jmp
ret
xor
lea
cltd
shll
flds
inc
push
pop
popa
pusha
cwtl
adc
daa
data16
into
xchg
push
and
aaa
aas
orl
addr16
jae
cmpsl
xor
or
dec
clc
mov
push
dec
dec
push
lock
pop
inc
mov
mov
mov
div
dec
lds
jae
xorl
and
out
sbb
clc
gs
mov
das
out
test
int3
and
cli
repz
push
jmp
pop
stc
cld
data16
push
enter
iret
inc
pop
pop
sub
scas
test
mov
mov
xchg
je
xor
out
movsb
movsb
ljmp
out
sbb
fs
outsl
mov
hlt
dec
mov
in
ds
int
sub
or
mov
ja
hlt
nop
mov
das
ds
jl
scas
hlt
mov
cs
push
dec
jb
jg
hlt
mov
xchg
dec
repnz
sarb
pop
xor
hlt
mov
xchg
dec
icebp
in
sarl
and
and
pop
je
push
pop
mov
or
in
insl
mulb
call
scas
out
stc
addr16
call
scas
jmp
std
addr16
pop
lods
in
call
scas
out
in
loope
lock
loop
icebp
inc
lods
jecxz
repnz
repz
in
hlt
addr16
cmc
lods
out
imul
pop
imull
ljmp
in
pop
sti
scas
in
in
cld
addr16
pop
std
lods
out
call
dec
icebp
dec
mov
in
repnz
rep
loop
hlt
jecxz
cmc
scas
in
mulb
pop
imull
stc
scas
call
pop
sti
lods
ljmp
in
in
addr16
pop
ljmp
loope
lock
loop
icebp
outsl
jecxz
repnz
in
push
ljmp
jb
enter
jmp
and
mov
sub
stos
jns
xor
scas
rcll
gs
lods
jg
add
mov
aam
xor
pop
adc
pushf
jns
lret
add
push
jmp
das
jg
movsb
dec
jmp
jp
outsb
cmp
dec
lretw
outsl
and
fs
outsb
ja
outsl
je
inc
push
scas
rcr
out
jle
dec
cmovle
dec
loop
dec
scas
pand
in
out
jbe
sbb
add
mov
loopne
jae
pop
sub
xchg
arpl
imul
lock
add
shrb
adc
dec
adcb
ret
pop
and
aaa
mov
in
dec
and
mov
fs
push
movsl
mov
or
mov
jmp
xchg
sbb
sub
jno
xchg
sub
mov
push
add
popa
stos
xor
or
or
push
mov
lahf
rcrb
cmp
cmc
jno
test
xchg
cmp
mov
inc
mov
adc
scas
lds
out
mov
mov
lahf
cs
outsb
dec
clc
fwait
push
adc
push
or
or
dec
fdivrs
mov
or
jp
xchg
push
jae
mov
xchg
pop
mov
inc
aad
gs
in
std
add
imul
daa
icebp
and
icebp
inc
repnz
pop
fmull
push
dec
mov
test
call
or
xor
test
mov
push
mov
cwtl
in
stos
xchg
js
sub
ljmp
sub
fwait
scas
ja
popf
dec
fadd
mov
dec
push
sub
sbb
jle
pop
push
adc
jmp
push
inc
push
ja
mov
adc
mov
ret
pop
outsb
mov
sub
jl
push
jb
push
mov
ret
scas
inc
xor
je
and
addr16
inc
insb
cwtl
dec
sub
jl
jp
sub
aad
arpl
cmpsb
pop
stos
call
or
cltd
jge
mov
clc
into
mov
adc
inc
dec
in
inc
mov
cmpsl
clc
orb
insb
push
insb
mov
out
enter
mov
xchg
and
rorl
in
and
add
jne
pop
mov
or
jae
into
sub
jge
bound
mov
push
cmp
mov
pop
into
insl
xchg
test
lret
out
dec
std
in
jns
pop
insb
fs
xchg
xchg
inc
in
je
scas
imul
cmc
in
mov
test
mov
clc
xlat
test
mov
jb
test
xor
jle
jae
add
dec
xchg
and
push
aad
in
adcl
sub
fucomip
mov
jbe
add
fsubrl
mov
mov
in
mov
call
outsb
push
mov
jne
add
mov
mov
in
jb
mov
shlb
ds
adc
pop
xor
mov
push
mov
jno
jmp
insl
sub
and
sbb
ljmp
pop
movsl
shll
hlt
dec
push
cmp
sub
cmpsl
les
xchg
stos
stos
outsb
mov
fdivs
ljmp
sbb
push
sub
mov
lods
call
movsl
lock
and
addr16
or
ss
pop
mov
sbb
out
sahf
xor
dec
rcrb
leave
push
jle
jp
push
inc
insb
xchg
icebp
insb
loop
fldl
pop
mov
outsb
lahf
int
iret
jae
mov
or
mov
into
in
ret
jp
dec
mov
jg
mov
and
sbb
in
add
and
imul
icebp
pop
pop
outsb
push
sbb
scas
mov
jae
sub
testb
movsb
stc
ljmp
or
arpl
mov
dec
int3
fwait
scas
pushf
dec
or
push
in
pop
mov
adc
bound
insb
mov
testb
cmpsl
push
loope
dec
cmc
outsl
inc
sub
arpl
push
subb
lock
jg
add
out
ret
jge,pn
inc
inc
mov
jge
dec
movsb
dec
jecxz
push
xor
les
jp
aas
out
test
iret
out
jae
cmp
ret
jl
repz
push
scas
out
es
sub
shlb
repnz
or
popl
loop
and
and
outsl
movsb
sbbl
xchg
das
scas
stos
sahf
stc
shlb
or
add
cmpsb
push
jo
dec
and
push
sub
add
cli
inc
mov
push
jb
cmp
lods
adc
das
out
outsb
bnd
aaa
lock
xchg
ret
in
xor
jle
in
pop
outsl
jg
call
sti
andb
lods
insb
mov
aas
movsb
popa
int3
jecxz
insl
loop
imul
loopne
jecxz
hlt
sbb
imul
in
sarb
pop
dec
jl
or
jge
lea
or
in
adc
mov
shll
icebp
stc
jle
pop
cmp
jo
push
mov
and
jmp
test
bound
mov
jbe
dec
imul
gs
outsl
in
jge
dec
jmp
dec
sti
pop
outsl
incl
clc
outsb
in
inc
lods
jg
inc
lock
jne
sbb
repnz
mov
cs
dec
out
inc
andb
jl
out
fisttpl
jle
dec
dec
or
sub
les
cmp
out
cmp
lock
jo
outsl
addr16
jns
test
jno
test
data16
fsubr
jns
xor
jge
sbb
roll
pushf
add
jecxz
in
and
jmp
je
mulb
jns
aaa
outsl
pop
outsl
je
cmpb
repz
jb
bnd
pop
outsl
clc
jg
mov
testb
and
pusha
popa
cmp
sbb
call
incl
push
jp
aaa
dec
data16
jns
std
sub
dec
sub
dec
dec
insb
out
call
js
pop
jno
jb
inc
push
outsb
dec
dec
lcall
push
aam
lock
jae
fimuls
push
int
mov
inc
fisubrs
lock
jb
out
dec
sti
push
jmp
lock
lock
aas
push
in
dec
out
xchg
je
rol
mov
out
bound
daa
icebp
mov
leave
xor
jge
mov
call
ficompl
jb
mov
sbb
sub
test
jns
xor
js
subb
sub
xchg
xchg
pop
loop
aas
scas
popa
ret
mov
pop
test
adc
or
shr
popf
mov
out
pop
and
lea
daa
cmpsl
stc
lret
call
cmp
popf
pop
inc
and
movsl
adc
or
jl
xchg
cmpsb
sub
addr16
ret
jae
push
add
into
xchg
inc
clc
push
enter
ret
pop
jecxz
dec
sub
dec
push
imul
lcall
sbb
mov
jge
sub
mov
call
xor
inc
cmpsl
fs
out
inc
dec
sub
push
jmp
repz
jae
mov
jb
mov
pusha
int3
push
push
repnz
and
daa
popf
sbb
lods
rolb
int
push
and
call
ljmp
call
ss
mov
push
lret
daa
ljmp
aaa
ds
pop
dec
sub
push
clc
divb
pop
pop
pop
push
push
and
lods
outsb
ja
sti
pop
mov
inc
clc
dec
and
mov
sti
jmp
in
jg
xchg
ret
adc
addr16
inc
loopne
push
push
in
mov
addr16
dec
jg
xchg
fst
inc
mov
mov
sub
sahf
loope
lcall
jle
xor
lcall
mov
clc
gs
xor
sbb
mov
out
cmp
inc
insl
mov
and
int3
outsl
xor
fadds
mov
jle
cmc
dec
and
mov
lea
adc
test
push
jmp
pushf
lock
clc
xchg
shr
pop
lock
movb
out
inc
sub
call
mov
add
xchg
mov
adc
push
aad
mov
cmp
push
xchg
hlt
bound
icebp
fldl
cmp
call
cs
xor
sbb
sub
fsubs
sub
cmp
pop
nop
push
in
mov
adc
jmp
xchg
scas
or
cwtl
pop
fwait
sub
outsb
mov
loop
in
dec
and
lods
out
jb
jae
shll
cwtl
sub
lds
enter
decb
xor
stos
clc
xor
fistps
out
jo
jb
pop
lret
xor
mov
xchg
lret
out
dec
or
out
inc
std
mov
add
jns
dec
aam
jg
movsl
icebp
mov
into
jbe
jg
dec
icebp
outsl
jle
dec
jno
cli
clc
jne
sub
repz
outsl
cmp
call
cs
out
outsl
loop
popa
mov
ljmp
call
sti
pop
insl
sub
enter
scas
shlb
dec
iret
cmp
incb
idivb
mov
clc
gs
or
in
inc
out
ja
out
jmp
adc
add
mov
fwait
popf
into
movsb
xchg
out
out
mov
lahf
sub
xchg
addr16
into
mov
int3
inc
sub
movsl
andl
mov
mov
testb
loop
mov
mov
inc
fsub
stos
cli
fs
imul
push
jae
insb
sbb
icebp
ljmp
push
lods
faddl
pop
push
and
stos
sti
lock
fldt
jae
aaa
sub
rorl
jp
jno
faddp
mov
pop
push
out
sbb
out
xor
sub
cli
mov
into
jl
mov
lock
js
loopne
jl
inc
pop
jle
mov
pop
mul
test
xchg
call
adc
sub
mov
test
daa
xchg
cs
mov
stos
cmp
xor
mov
test
cmp
pop
and
pop
pop
dec
xor
xor
mov
xchg
jmp
scas
in
sub
push
lahf
push
test
ret
push
mov
ret
int3
ret
inc
outsl
dec
rcrl
add
add
imul
add
push
idiv
into
push
es
les
hlt
loopne
into
and
cmp
xor
and
test
addb
jg
repz
jg
mov
and
inc
xor
lods
pusha
clc
loop
pushf
cmp
scas
repz
cltd
push
outsl
cli
movsb
aad
bound
outsb
loope
shlb
inc
dec
bound
adc
mov
push
outsb
mov
jecxz
fucom
push
dec
mov
jne
test
rcrl
push
or
lods
mov
ljmp
fdivl
sub
push
lcall
fldl
jle
pop
ffreep
aaa
adc
and
jns
inc
adc
sbb
sub
out
push
jmp
cld
sub
inc
nop
lret
jp
xchg
pop
fisttpl
bound
jae
adc
fistl
xchg
out
into
push
jmp
or
ljmp
repnz
rol
les
push
enterw
outsb
adc
cmpsb
cwtl
testb
loopne
int3
xchg
adc
repz
leave
imul
sahf
insb
or
pop
clc
imul
movsl
icebp
jg
cmp
pushf
dec
loope
push
adc
sub
repnz
imul
cmpsl
mov
mov
or
xchg
dec
dec
out
pop
mov
call
lock
ret
imul
mov
add
imul
idivl
pmaxub
in
push
mov
outsb
jp
test
fstps
dec
icebp
fcomps
cltd
mov
cmpl
bound
pusha
enter
test
adc
lds
push
mov
dec
dec
aam
add
ja
popa
outsb
dec
mov
cmpsb
xchg
mov
mov
cmp
xor
jo
inc
fnstcw
and
xchg
inc
fildl
add
out
mov
mov
adc
repnz
jae
je
adc
aas
int3
cmpsl
call
inc
arpl
sub
lods
push
xor
mov
adc
mov
outsl
iret
addr16
aas
dec
add
dec
aam
sub
enter
ficoml
pop
mov
lret
jecxz
pop
insb
ljmp
jae
hlt
imul
and
hlt
faddl
xchg
add
ss
mov
mov
or
repnz
inc
lret
push
data16
arpl
dec
enter
outsb
imul
mov
cmp
imul
std
hlt
xchg
sub
pop
pop
pop
xor
clc
in
cs
or
jp
push
ret
adcb
xlat
mov
shlb
int3
jb
int
pop
sbb
pop
mov
xor
push
fcoml
sti
inc
out
call
xchg
and
mov
xor
mov
xchg
cmc
arpl
cltd
jae
dec
mov
sub
mov
stc
xor
pop
cmpsl
xor
inc
fstl
aam
out
js
repnz
dec
inc
xor
or
push
std
inc
lods
and
pop
xor
outsb
out
jno
push
std
mov
mov
out
add
ret
jo
cli
loop
inc
jg
aam
add
shlb
xchg
test
aam
shrb
es
or
mov
inc
add
push
hlt
out
dec
push
jbe
cld
xor
push
imulb
mov
add
jb
add
stc
insb
test
add
cmpsl
dec
sbb
decb
jnp
pushl
aaa
pop
xchg
fadd
jge
jae
test
test
mov
push
pop
orb
shlb
add
mov
loopne
imul
out
sub
ror
inc
roll
cli
pop
pop
dec
push
shrb
or
cmp
test
push
xchg
bound
repnz
lea
cli
rep
cli
test
jns
ret
cli
ud2
xchg
subb
test
lea
mov
add
sub
js
ja
mov
push
ret
adc
sub
cmp
jae
addr16
call
mov
jg
xor
adc
push
popa
ret
stos
mov
push
ljmp
push
jne
ja
dec
call
js
fimuls
imul
in
push
jmp
outsl
mov
inc
mov
in
popw
sub
xchg
dec
xchg
scas
mov
and
mov
xchg
add
push
xchg
inc
mov
fdivs
inc
hlt
movsb
push
and
and
addb
jne
mov
add
and
mov
fstl
test
inc
ret
sbb
jmp
mov
xchg
mov
mov
add
sahf
push
idivl
call
xor
or
pop
sub
imul
mov
mov
imul
movsl
ret
fincstp
scas
outsb
mov
icebp
xchg
or
or
push
jae
mov
mov
ftst
pop
mov
jl
daa
jbe
std
hlt
mov
adc
scas
jg
dec
icebp
inc
ficoml
in
imulb
sub
leave
jnp
fiadds
call
lcall
dec
fidivl
ret
movsb
out
test
int
inc
loop
add
gs
push
push
outsl
out
push
mov
test
shl
mov
sbb
mov
jne
outsb
fnsave
cld
inc
dec
mov
es
hlt
jge
dec
outsl
dec
and
pop
dec
stos
sbb
cmpsl
and
add
outsb
adc
lea
mov
dec
push
add
pop
jecxz
add
adc
loope
and
mov
insl
jle
pop
nop
out
add
xchg
cmpsb
sbb
subl
shl
cmpsl
bound
adc
das
scas
rol
lret
icebp
bound
outsl
mov
sbb
jb
jge
in
pop
dec
inc
add
daa
push
dec
push
dec
sbb
notl
imul
arpl
xor
mov
cmpsl
out
mov
outsl
test
ror
lahf
dec
xchg
push
mov
outsl
inc
mov
imul
mov
scas
lock
mov
das
xor
aaa
jbe
cmp
xchg
daa
nop
icebp
scas
jno
dec
call
rcrl
out
inc
test
scas
jnp
out
mov
shl
std
vlddqu
and
outsb
mov
dec
cmp
dec
arpl
out
xor
pusha
mov
aas
add
outsl
xor
testb
addb
add
mov
push
pusha
mov
jbe
push
cs
jp
ja
jnp
inc
mov
pop
pusha
out
js
jp
in
loop
sub
stc
das
int
jmp
jno
cs
in
dec
out
fs
cld
outsb
jmp
outsb
push
lods
js
hlt
adc
sti
dec
lods
in
aam
bound
fimuls
add
pop
ret
clc
addr16
sti
into
push
outsb
mov
data16
addr16
push
push
mov
std
dec
mov
or
leave
add
bnd
push
lods
out
sarb
jp
dec
and
call
lock
jl
insb
nop
pop
out
jns
mov
and
ja
les
enter
or
ficoms
and
or
nop
mov
enter
pop
jns
push
ss
jnp
jp
inc
inc
mov
jnp
and
jae
lahf
push
mov
xor
jle
xchg
jmp
mov
sbb
or
jg
push
insb
mov
popf
mov
dec
dec
jle
sub
lds
inc
fisttps
jle
jle
fbld
xchg
bound
push
mov
add
cld
pop
sar
push
push
int3
out
orb
push
sub
in
push
into
jo
add
arpl
ss
dec
in
movsb
das
xchg
out
pop
pop
jecxz
in
sub
mov
loopne
prefetch
mov
out
mov
dec
inc
sti
sub
and
pop
js
ljmp
push
dec
in
out
out
push
sub
pop
mov
mov
inc
inc
fiadds
pop
lea
dec
cmpsl
jo
mov
push
in
inc
es
lds
push
in
jns
das
loope
mov
add
int
pcmpgtd
mov
xchg
cwtl
stos
popf
lea
pop
divb
out
dec
stos
int3
in
mov
sub
addr16
or
xor
cld
test
call
push
loopne
std
ja
cltd
insb
std
test
mov
pop
outsb
aas
mov
repnz
sub
loope
mov
fsubrp
jle
mov
in
cmp
jecxz
push
out
in
push
xchg
mov
cs
imul
aas
jmp
in
cmp
jb
mov
arpl
sub
cld
push
mov
or
push
mov
inc
inc
outsl
push
jmp
out
jg
into
imul
mov
add
push
xchg
fs
cmpsl
dec
jnp
cld
mov
cld
popa
stos
clc
mov
stos
jp
enter
mov
mov
mov
stc
push
pushf
outsl
int3
call
sbb
test
lods
cmpsb
jp
or
lret
es
or
push
dec
imul
jle
sbb
and
testl
push
mov
sub
xchg
or
push
cmpsl
mov
mov
add
jecxz
cmp
loop
enter
inc
stos
in
fs
in
cmp
addr16
mov
js
push
test
imul
data16
loope
je
pop
popa
push
repnz
sbb
push
sub
lock
loop
call
popf
and
fiadds
fwait
stos
sti
pushf
cmpsb
and
add
mov
imul
out
ret
adc
ret
daa
out
or
mov
push
or
dec
in
cmpsb
bound
push
mov
cs
jns
mov
dec
and
jmp
outsb
or
sub
loop
mov
sub
add
pop
inc
fcomi
jo
add
outsb
dec
js
xor
push
insb
push
sub
push
cld
clc
ljmp
outsl
insl
jle
xor
jp
das
js
jp
dec
loopne
nop
cli
push
xor
dec
mov
cmp
movsb
arpl
movsb
inc
pop
ljmp
insl
ja
inc
insb
test
cmpsb
push
scas
call
mov
ret
fsub
mov
test
xchg
push
out
ja
add
push
int3
and
insb
movsb
stos
scas
mov
mov
scas
xlat
mov
in
dec
xchg
mov
dec
adc
jecxz
movsb
cmp
push
lock
sub
xor
scas
jbe
in
sti
sahf
mov
mov
inc
sahf
push
ja,pn
lds
mov
sub
or
mov
std
jg
bound
call
add
mov
or
jle
xchg
cmpsl
or
dec
lods
cmpsb
inc
loope
lea
ljmp
inc
or
dec
dec
inc
pop
loop
ljmp
scas
sub
lds
cltd
dec
mov
in
jle
outsb
insb
mov
push
sub
int3
in
xchg
sbb
pop
sub
ret
dec
jne
in
add
outsb
sti
and
jg
outsl
add
jb
ficomps
mov
outsb
jg
mov
imul
loope
push
in
std
jge
push
out
jp
hlt
imul
dec
mov
in
cs
sbb
rorl
flds
push
jmp
inc
jp
dec
in
jecxz
lock
and
dec
movsb
out
icebp
cmp
dec
dec
imul
pop
pop
push
xchg
stc
xchg
mov
push
into
mov
sub
jp
mov
jae
xlat
pop
cmp
aas
dec
dec
mov
scas
mov
push
iret
scas
mov
sub
add
scas
in
mov
loopne
into
or
sub
mov
inc
repz
sti
repz
imul
into
clc
int3
ret
stos
or
dec
sub
loopne
dec
scas
mov
or
jmp
outsb
lret
mov
or
loopne
dec
scas
mov
into
hlt
mov
lret
sub
test
repz
test
ja
lds
je
js
and
pop
imul
test
push
dec
das
bound
cmp
les
loope
test
and
jns
aas
movsb
es
in
cs
data16
outsl
out
dec
jb
mov
lret
out
sub
jle
sub
in
dec
in
enter
xorl
insl
aas
pop
arpl
aaa
insl
in
dec
jl
lock
movsl
pop
imul
jle
loop
sub
lods
ljmp
inc
push
lret
and
into
inc
call
rorb
fdivrp
sbb
xchg
pop
outsl
add
pop
or
mov
fwait
daa
insl
xchg
out
rorl
pushfw
inc
lock
adc
mov
ljmp
xchg
fwait
std
jecxz
and
sbb
jno
add
xlat
jp
out
or
int3
xorb
dec
xchg
xchg
int3
and
pop
hlt
mov
adc
mov
cmpl
outsl
or
xor
sbb
jae
add
sub
add
popa
lahf
int3
and
push
fs
mov
fs
push
jns
shll
inc
inc
shll
pushf
scas
scas
pop
shr
cwtl
int3
ret
lret
inc
out
mov
scas
out
bound
int3
push
aas
bnd
loop
mov
mov
xor
inc
aad
das
adc
mov
push
ss
sbb
jmp
imull
stc
scas
out
lods
arpl
jb
jbe
stos
sarb
out
loope
bound
mov
xlat
dec
ja
mov
jnp
or
inc
ja
imul
in
inc
sbb
in
sbb
cmpl
jb
outsb
sub
mov
adc
mov
lret
sti
add
ja
cmovle
xor
mov
sti
imul
mov
shll
xor
inc
xor
movsb
jecxz
adc
dec
mov
mov
pusha
pop
xchg
roll
mov
lods
in
mov
inc
mov
es
lcall
push
inc
aaa
outsl
mov
aaa
imul
xor
loope
and
movsl
add
and
cmp
or
add
mov
jne
adc
cld
jae
in
shrl
out
pop
jg
loope
add
out
dec
fdiv
int
sbb
xlat
clc
mov
int3
popa
data16
pextrw
push
adc
je
mov
loop
inc
icebp
xchg
push
cld
mov
aas
outsl
clc
movsl
leave
or
icebp
push
sub
sbbb
outsb
scas
cmp
sarb
xor
stos
jp
test
shl
push
fimuls
cmc
jg
adc
loopne
out
pop
iret
aaa
jno
lahf
imul
iret
jg
sahf
lea
out
mov
pop
jae
adc
nop
shll
cmpsl
inc
jno
clc
outsl
or
jmp
adc
hlt
test
sub
xor
gs
pusha
cmc
scas
outsb
jns
cld
sete
outsl
outsl
out
pop
mov
in
or
pop
hlt
je
cmc
pop
mulb
xor
jbe
jne
dec
mov
and
xchg
dec
sbb
movsb
stc
dec
insl
sbb
fsts
cmc
in
data16
cmp
jp
das
cmc
sbb
xor
in
imul
push
das
mov
mov
lret
push
jle
ljmp
jbe
fnstsw
in
jbe
xor
arpl
dec
imul
dec
iret
jae
shll
jbe
push
adc
inc
sbb
dec
jp
inc
icebp
popf
cmp
pop
xor
mov
or
in
xor
sbbb
mov
adc
cmpb
pushf
mov
cli
in
sahf
mov
xchg
hlt
or
xchg
xchg
xchg
imul
clc
pop
mov
xchg
jecxz
and
lods
subb
clc
aam
add
or
hlt
or
insl
mov
outsl
pop
jg
andb
add
xchg
add
bound
xor
sbb
xchg
push
push
cmp
fimuls
sbb
int3
adcb
int3
daa
add
stos
jae
xchg
add
fdivs
xchg
cmp
popf
mov
push
jecxz
pop
sarb
testb
or
scas
pop
imul
adc
adc
and
lahf
pop
lcall
or
dec
call
aas
enter
insb
xchg
jae
and
fs
ljmp
cmc
add
ds
jae
jle
test
cwtl
mov
in
pop
pusha
clc
add
jae
cmp
adc
aaa
movsl
xchg
out
insb
add
fsubl
xchg
or
loop
xchg
lock
push
and
mov
scas
lahf
test
out
and
add
mov
jge
push
cmpsl
dec
outsb
addr16
out
enter
jmp
jne
jns
shlb
add
inc
sbbb
rorb
addr16
cs
and
ja
add
into
pop
push
cmp
fdiv
lret
jg
sahf
sub
and
icebp
mov
lahf
jbe
fdivp
cmp
cmpsb
lea
outsb
outsl
test
pop
lock
punpcklbw
lret
jmp
insb
insl
cmp
lahf
outsb
imulb
test
push
dec
std
jnp
mov
or
ljmp
scas
sub
jbe
icebp
jp
add
sub
testl
jle
es
push
icebp
mov
sar
push
pop
out
add
int3
sbb
mov
lods
notb
inc
lock
mov
jp
xor
jg
mov
dec
inc
movsb
rorb
lcall
mov
jle
sahf
in
pop
cwtl
fisttps
sub
std
jp
and
iret
mov
in
out
movsl
aas
cmovge
outsl
cmpsl
pop
mov
dec
gs
xchg
iret
push
push
push
orb
adc
jno
mov
and
inc
insb
add
insb
sbbb
daa
or
out
in
xchg
movsb
dec
mov
gs
in
addr16
hlt
dec
popl
push
xchg
adc
dec
call
dec
out
call
scas
test
loop
jg
outsl
jae
in
cmpsl
cwtl
mov
arpl
sbb
mov
pop
or
dec
xchg
int3
cld
sbb
sub
icebp
popa
rorb
pop
xchg
sarb
sti
aaa
pop
sti
or
repz
xchg
jp
jns
xchg
insl
sub
sahf
cltd
movsb
xchg
dec
iret
f2xm1
xchg
imul
jle
xchg
je
mov
int3
notb
mov
loopne
pop
test
ret
imul
dec
add
mov
fistpll
pop
outsl
loopne
mov
cmp
into
jg
test
aaa
aas
in
mov
loopne
std
clc
jmp
outsl
mov
xchg
arpl
xchg
jnp
inc
and
out
cmp
test
dec
mov
dec
sub
add
pop
dec
lea
dec
outsl
insb
outsl
mov
mov
imul
outsl
cwtl
ljmp
lods
out
insl
ljmp
fiaddl
pop
aas
lods
int3
int3
loop
push
aad
cmpb
rol
push
xor
jg
push
pop
aad
ja
test
mov
gs
in
incb
mov
stc
les
enter
xchg
leave
outsb
jge
pusha
icebp
jae
cltd
mov
xor
adc
clc
repnz
cmp
xlat
xchg
in
lock
sub
imul
mov
dec
loopne
roll
repz
js
jae
sti
icebp
pusha
loopne
pop
pusha
aaa
sbb
lock
add
call
cmc
mov
xor
jnp
and
addr16
xchg
push
pop
mov
loopne
stos
jae
mov
stos
mov
ret
jns
out
inc
mov
in
mov
int
loope
movsl
xchg
in
adc
test
push
xchg
inc
cltd
mov
add
pusha
call
test
jg
mov
sbb
scas
decb
dec
dec
lret
lods
sbbl
and
pop
mov
lcall
aas
mov
mov
jmp
outsb
adc
jnp
call
dec
push
shufps
movsl
in
dec
and
fistpl
adc
add
cmpsl
jge
mov
xchg
jg
ds
test
outsb
fwait
mov
dec
push
dec
inc
int
and
push
sbb
out
mov
outsb
mov
mov
sub
insb
jecxz
clc
lea
jmp
push
xchg
arpl
fdiv
test
lods
rorb
mov
inc
cld
aaa
cmc
das
dec
ja
testl
cmp
sbb
pop
dec
rcrb
sbb
cld
xchg
js
stos
out
ret
sarl
out
xchg
jl
ja
xchg
and
pushl
daa
sub
xchg
lods
lock
push
gs
lock
or
pop
jbe
jmp
outsl
clc
mov
mov
and
dec
rolb
pop
mov
fs
mov
xchg
add
add
int
xlat
out
int3
push
shll
lahf
mull
add
adc
xchg
cld
dec
arpl
test
shrb
bound
jl
jb
push
cmpsl
data16
fbld
push
outsw
pop
push
repz
sub
mov
pop
jae
cmpsl
fwait
push
jae
xor
xchg
repnz
cwtd
add
adc
mov
add
outsb
lcall
repnz
rol
fsubs
test
ljmp
loope
scas
pop
mov
push
xchg
mov
dec
in
dec
popa
inc
sbb
mov
pop
scas
and
loopne
insb
mov
out
outsl
int3
cli
cmp
xorb
push
adc
jno
jbe
pushw
int3
fstl
mov
shrb
dec
mov
mov
fdivs
lods
and
jb
pop
stos
sahf
outsb
jg
rclb
subl
add
in
add
push
pop
das
adc
dec
fcomi
jb
jle
push
lock
shlb
daa
cmpsb
addr16
cmp
and
lret
sub
cmp
imul
jle
outsb
movsb
pop
lock
lea
pop
fbld
lcall
jae
push
fdivrs
repnz
insb
cmp
shrl
fnstsw
lahf
pop
jmp
jno
inc
push
or
fistps
scas
push
mov
push
inc
jmp
pop
shr
inc
dec
dec
jl
pop
dec
jns
jnp
stos
mov
and
aas
jl
cmp
dec
imul
dec
sahf
jnp
outsb
add
aas
cmp
add
test
bnd
test
int
fcmovnu
in
movsl
cld
in
sbb
push
push
rcl
lock
pop
in
lock
jg
jo
clc
outsb
fldenv
jno
out
push
mov
push
cmp
in
out
test
jb
lods
mov
xchg
test
dec
cltd
mov
push
jge
or
in
dec
pushf
nop
add
xor
icebp
inc
test
in
adc
dec
pop
je
or
inc
cmp
cmp
js
lahf
mov
jle
cli
sbb
dec
dec
jb
cmpb
push
sub
mov
roll
sar
mov
dec
jbe
je
repz
or
sarl
outsl
filds
lods
mov
int3
dec
test
lahf
jo
jnp
push
int3
mov
sbb
fildl
jmp
sub
adc
mov
cs
sbb
xor
test
jae
or
out
push
mov
addr16
outsl
mov
dec
lods
inc
int3
mov
mov
lahf
fldl
adcl
stos
jmp
insl
push
dec
lods
lods
dec
in
jle
pop
lahf
jle
pusha
nop
jno
push
mov
jae
das
pop
pop
add
jl
roll
push
push
rclb
cmp
dec
sub
movzwl
subb
shl
outsl
pop
dec
fs
enter
ret
int3
loop
cmpsb
insb
mov
jae
mov
rolb
test
in
icebp
loope
sub
fiaddl
mov
dec
sbbb
shll
mov
mov
mov
outsl
dec
and
add
jae
pop
dec
adc
into
in
or
push
sub
inc
arpl
adc
cmp
push
or
outsl
push
mov
mov
cmp
mov
test
jns
sub
pop
clc
push
loope
sbb
ss
mov
sbb
add
jae
es
loope
dec
test
imul
lods
inc
cmc
mov
fisttps
sahf
dec
mov
or
aam
pop
nop
outsl
mov
jg
int
pop
call
ja
or
stos
movsb
loop
mov
mov
inc
sarl
dec
insb
dec
insb
mov
mov
xor
sti
outsb
and
insl
cmpsb
movsl
push
xor
aam
cmp
push
mov
rorb
cmp
enter
insb
mov
pusha
in
jge
inc
ljmp
js
clc
aas
ret
and
push
dec
push
popa
aaa
call
sub
jl
xor
pusha
ret
bound
push
mov
adc
arpl
jmp
add
in
loope
int3
scas
fsubs
xor
push
jae
cmp
mov
jae
push
or
dec
hlt
enter
stos
dec
push
aas
mulb
jae
push
inc
xchg
jge
aaa
mov
jmp
hlt
call
cmpsb
fwait
jbe
addr16
icebp
cltd
mov
mov
dec
jnp
lea
mov
mov
test
dec
mov
jne
mov
mov
mov
push
pop
inc
repnz
mov
xlat
test
test
in
out
stc
daa
outsl
pop
sbb
dec
xor
jno
sahf
mov
adc
mov
jb
jecxz
or
loop
mov
xchg
data16
out
loop
call
cmp
lret
jg
and
pushf
mov
loopne
repz
andb
imull
insb
sbb
int3
aas
arpl
out
ljmp
cmc
imul
pushf
loop
lds
in
scas
and
mov
push
outsl
adc
rolb
pop
mov
adc
jae
cmpsl
sbb
mov
out
insb
sbb
test
in
sub
fldcw
pop
xchg
ret
dec
or
ficomps
outsb
lods
dec
out
xchg
mov
push
ret
lds
in
xor
inc
out
sbb
mov
inc
rolb
fistpll
cmpsl
scas
icebp
cs
jne
movsl
jno
decl
mov
add
shr
push
xchg
out
stc
scas
jmp
out
stos
or
aaa
jns,pt
cmc
adcb
leave
fxch
shrl
shll
adc
loop
mov
addr16
insb
dec
mov
dec
cli
mov
mov
pusha
loopne
cmp
test
imul
insl
mov
xchg
push
ljmp
jnp
orb
es
lret
test
scas
cmp
rorl
test
pop
lods
mov
mov
mov
aaa
clc
xchg
xchg
fcmove
int3
jmp
sub
mov
inc
mov
sbb
xlat
push
fwait
lods
scas
mov
popl
pop
adc
js
jle
in
mov
cmpsl
adc
movsl
mov
mov
xchg
adc
push
test
jnp
cld
jmp
jp
stc
push
inc
aad
add
inc
aam
dec
scas
add
nop
outsb
mov
cmp
sub
subb
sub
fdivp
mov
lret
dec
je
mov
xchg
add
cmp
es
xchg
mov
sub
repnz
loop
out
xchg
addr16
iret
mov
and
lea
shrl
popf
inc
fimuls
mov
xor
inc
ret
sbb
out
cmpsb
aas
cmc
mov
push
in
adc
sub
stos
mov
scas
fs
loop,pn
jb
cmp
xchg
imul
movsb
int3
lcall
xchg
inc
stc
mov
and
roll
cmp
jae
inc
fisubs
iret
jne
outsl
fidivs
lret
lods
jp
out
cmp
aas
mov
push
cmpsb
mov
or
jle
imul
mov
aaa
jg
inc
popf
lcall
jno
push
push
pop
es
ficoms
and
xor
inc
mov
hlt
sub
and
decl
pusha
xor
ja
imul
cs
jl
in
sub
xchg
lret
jne,pn
adc
icebp
push
mov
in
lock
push
xchg
out
mov
cmpsb
dec
mov
xor
movsl
or
rcl
ret
add
jae
pop
add
jecxz
pop
push
out
aaa
dec
or
adc
and
aad
arpl
sub
loopne
pop
or
xchg
mov
mov
or
rclb
stos
repnz
pop
outsb
push
enter
mov
sbb
lahf
outsl
gs
push
mov
test
push
bound
mov
adc
data16
adc
xor
jno
adc
mov
adc
sub
clc
scas
shr
xchg
xchg
inc
test
jno
cmp
pop
mov
or
icebp
jge
mov
mov
out
out
add
ret
mov
sbb
cmp
sbb
ret
mov
popa
inc
push
hlt
pop
test
notl
mov
cmp
rcr
movsb
pop
aas
xchg
or
sub
xchg
jbe
dec
cmpsb
xlat
ret
movsb
jmp
dec
dec
jl
xor
push
adc
push
or
fiadds
into
sti
add
out
jae
pop
push
clc
dec
mov
jb
lcall
pushf
sbb
add
cs
std
sti
lock
fnsave
and
mov
insb
mov
jb
sbb
loopne
sbb
rcr
sbb
adc
sbb
pop
int3
xor
repz
xchg
sbb
cmp
jns
sahf
and
popf
sti
xchg
sub
sub
cmp
push
outsb
loope
in
adc
cmpsb
gs
int3
mov
lret
je
pop
idivl
loop
fisubl
mov
sub
or
dec
inc
pop
dec
inc
inc
xchg
movsl
and
inc
jo
lock
ret
dec
xlat
std
cmp
rorl
sar
cmp
push
fnstsw
shl
xchg
repz
push
mov
mov
popa
shlb
cmp
movsl
and
cmp
cmp
or
es
jns
and
jg
mov
cmpsb
out
sahf
imul
mov
xchg
or
jle
mov
data16
popa
fbld
call
shr
jge
in
int
push
mov
jae
cmp
fisttpll
mov
sub
cmp
addr16
xchg
sbb
jne
dec
xchg
add
imul
sub
out
jbe
daa
repnz
imul
test
pop
xchg
xor
repnz
push
push
push
mov
push
out
int3
lahf
and
std
inc
adc
ret
jmp
sub
out
push
dec
lret
xchg
sbb
jns
in
jmp
pop
xchg
cld
mov
jns
shrl
fdivr
push
imul
out
imulb
gs
cs
cmpsl
xorb
es
das
popa
cmpsb
addr16
imul
shlb
sub
push
ljmp
loop
cmpsb
sub
dec
xor
mov
std
test
repnz
dec
mov
push
inc
loope
outsb
lea
test
lock
out
sbbb
mov
xchg
mov
or
test
add
setl
loope
in
mov
or
push
mov
mov
adc
ret
ja
insb
adc
mov
into
outsb
ret
mov
aad
xchg
xchg
adc
fcom
push
sti
cmpsl
push
fadd
mov
movsl
fdivp
pop
mov
lcall
xor
js
scas
mov
insb
bound
mov
call
mov
sub
icebp
bound
cwtl
push
popa
sbb
sti
pop
xor
into
cltd
popa
and
mov
mov
dec
jg
jno
insl
jo
scas
pop
scas
and
incl
in
mov
sysret
adc
outsl
adc
sahf
rol
aas
out
sub
cmpsl
push
test
xchg
popa
test
icebp
pop
sub
mov
pop
into
push
in
add
cmp
xchg
sub
in
int3
add
lods
outsb
decb
roll
add
or
icebp
mov
mov
out
scas
lods
into
mov
push
jg
sahf
rol
jno
and
sub
jg,pn
aaa
push
frstor
pop
cwtl
mov
icebp
xor
outsl
loop
sub
mov
addb
int3
and
sahf
shlb
dec
movsl
xor
data16
fcomps
jae
cmc
jl
mov
ja
sbb
mov
mov
outsl
jne
loop
test
ja
into
es
mov
insl
frstor
mov
shlb
dec
addr16
stos
fucomip
inc
jg
call
test
data16
bound
scas
pop
ss
call
mov
push
outsl
mov
test
jg
out
jle
xchg
push
sbb
pop
popa
xor
push
mov
movsb
sbbb
mov
mov
mov
mov
std
bound
sub
sti
add
push
movsl
psrad
push
xor
adc
or
sbb
in
add
stc
in
ret
dec
jle
add
pop
mov
loopne
mov
call
outsl
lahf
testb
xchg
or
pop
sub
or
fistps
dec
arpl
mov
lcall
lods
out
dec
in
mull
jle
push
inc
test
test
int
cld
pop
lahf
adc
addb
sub
lock
outsl
xor
pop
outsb
inc
mov
test
push
ss
rcll
loope
clc
imul
or
push
push
scas
enter
mov
add
cwtl
iret
mov
jp
iret
xchg
scas
sub
ficomps
sbb
aas
jmp
xor
adc
xchg
or
out
and
cwtl
call
sub
or
aam
and
or
mov
std
testb
mov
imul
inc
les
adc
mov
das
out
mov
or
inc
dec
out
test
or
pop
outsl
fisubrs
in
jmp
mov
out
faddl
std
dec
stos
cmp
jge
xor
sub
insb
jne
add
out
lods
push
push
jns
sbb
jae
stc
sub
loope
test
mov
out
cld
orb
cld
shlb
jbe
addr16
repz
pop
outsl
cmpsl
inc
mov
pop
jb
aas
in
mov
movsl
movsl
sub
jg
jnp
mov
outsb
enter
ljmp
cmpsb
inc
push
jb
mov
sbb
lcall
in
idivl
gs
jge
orb
sbb
mov
andb
sub
cmp
repnz
inc
push
dec
jmp
xchg
repnz
pop
test
outsb
inc
movsb
and
hlt
shlb
xchg
add
sub
dec
out
movb
fisubl
in
rolb
out
bound
mov
inc
push
inc
lods
arpl
push
and
les
scas
add
out
ret
into
mov
ret
lds
out
mov
mov
mov
dec
in
in
test
out
fsubp
inc
js
push
sub
cmpsb
jecxz
push
outsl
ret
mov
movsb
popf
outsl
stos
in
and
in
daa
out
mov
outsb
sbb
mov
outsb
repz
test
pop
out
imul
insl
insl
jbe
mov
mov
loope
ljmp
or
test
or
cmpsl
lock
scas
sub
add
cmp
ds
sub
das
sahf
daa
das
push
push
jbe
leave
and
pop
insb
fnstsw
insb
lds
loope
jg
loop
jae
enter
or
fsubl
sbb
aad
push
mov
out
xorb
loop
or
mov
jae
jmp
fmul
fldcw
out
mov
or
cmp
jbe
call
popa
xchg
es
lahf
es
out
adc
and
loopne
fwait
xchg
adc
inc
jecxz
arpl
dec
test
pop
cld
or
pop
cmpsb
movsl
lds
imul
inc
enter
outsl
dec
add
push
and
es
fcmovnu
xchg
cmp
push
insl
cmp
arpl
testb
imulb
outsl
mov
jp
mov
push
dec
pop
aad
fdivr
xchg
mov
call
adc
sbb
cld
add
add
and
popa
ret
fcomi
in
cmp
mov
ret
dec
hlt
cmp
mov
sbb
sub
mov
xlat
mov
loopne
dec
int3
aaa
add
in
push
sarl
shlb
dec
stos
xchg
add
repnz
push
mov
sub
test
dec
lock
icebp
or
dec
jle
jg
call
lea
jle
jg
call
js
mov
subl
lahf
mov
mov
xchg
add
inc
dec
es
pop
popa
push
gs
jb
add
pop
inc
adcb
push
cmpsl
sti
cmpsl
fistl
outsb
mov
nop
call
das
outsl
verw
jbe
dec
ja
cmpsb
pop
lods
and
loope
pop
jge
cmp
cli
addr16
loopne
out
ja
inc
out
outsl
inc
loopne
dec
jg
inc
sub
das
sub
add
cmpsb
mov
dec
dec
outsb
stos
mov
mov
or
nop
outsb
push
mov
outsb
out
das
inc
psubusb
pop
nop
lods
push
call
scas
mov
out
addr16
pop
sub
dec
pop
lods
scas
in
in
push
dec
nop
lods
mov
int3
in
dec
mov
cmp
or
daa
call
scas
mov
pop
fldcw
push
sbb
scas
mov
ljmp
call
scas
fwait
in
stc
xlat
pop
xor
repz
sub
stos
call
pop
and
dec
shrb
clc
call
or
push
fisubs
stc
dec
mov
cs
push
mov
dec
dec
and
adc
dec
push
mov
mov
push
mov
xor
jbe
push
lods
push
jg
mov
lods
in
dec
cmp
add
iret
imul
cmpsb
add
outsb
in
jg
clc
push
lods
imul
outsb
add
dec
jg
call
ljmp
imul
lods
iret
dec
into
outsl
push
test
dec
call
call
insl
outsl
out
daa
push
dec
dec
outsb
data16
sbb
ljmp
inc
int
fs
sub
inc
inc
or
movsb
loopne
insb
jg
inc
dec
outsl
in
outsb
lods
jg
inc
mov
loopne
in
jg
inc
int3
outsl
arpl
sbbl
mov
mov
insb
mov
sbb
clc
mov
icebp
xchg
out
push
je
push
mov
test
jae
push
outsb
and
mov
mov
and
jae
push
and
imul
aas
loope
mov
inc
loop
ja
insb
or
repnz
sbb
int
jne
inc
add
jne
outsl
js
in
pop
repnz
stc
mov
sub
jb
pop
ffree
dec
jae
xlat
shll
jle
stc
pop
mov
xor
add
xchg
out
inc
hlt
test
or
jle
jg
testl
pop
dec
adc
pop
mov
cs
int3
sub
in
inc
les
ss
and
inc
lock
pop
fwait
add
mov
aaa
div
mov
movsl
cltd
mov
jg
das
add
and
bound
pop
out
arpl
jae
pusha
out
lret
into
push
fists
mov
testb
jle
push
scas
lcall
dec
and
sub
jns
clc
jecxz
sbb
js
ja
push
pop
in
mov
ret
inc
ljmp
xchg
jns
pusha
jb
in
bound
outsl
add
scas
push
add
pop
test
bound
mov
or
imul
jmp
ja
pop
bound
call
dec
out
data16
cli
dec
fsubrl
mov
mov
clc
cs
cmp
inc
mov
jecxz
mov
aaa
mov
push
mov
outsb
scas
ja
jg
inc
int
dec
arpl
dec
cmp
icebp
scas
loopne
mov
into
mov
jle
mov
inc
jo
sub
and
insl
stos
test
push
pop
jg
loop
movsl
loop
cmp
dec
cmpsl
push
arpl
outsl
pop
push
pop
inc
mov
sub
aam
test
jae
pop
inc
sub
mov
jns
pop
int3
xor
xor
mov
dec
cmc
lods
test
mov
or
mov
sbb
mov
mov
pop
ficoms
push
in
scas
jle
lods
imul
int3
int3
xor
jne
sbb
popf
ja
mov
adc
imul
mov
sub
loopne
mov
lret
dec
mov
or
ja
lds
repnz
loop
stos
lds
cltd
mov
test
mov
mov
and
and
repz
repz
sbb
les
lret
fcomip
imul
popa
cltd
std
arpl
stc
fsubrl
out
dec
imul
cmp
and
jg
shlb
insl
jbe
imul
cli
xchg
outsl
repz
popa
repz
push
push
dec
insb
ljmp
inc
ds
outsl
clc
sbb
mov
pop
movsb
in
push
pop
pusha
jno
dec
jecxz
dec
jne
jbe
dec
fs
outsl
jns
das
jae
repz
jb
dec
and
stos
hlt
je
ja
insl
pop
cli
lods
jne
jae
xchg
xor
test
movsb
add
arpl
pop
mov
icebp
gs
fldcw
stc
push
call
outsb
lods
data16
jle
mov
jne
out
shll
iret
pop
repnz
addr16
stos
mov
inc
out
test
lahf
insb
pop
fldl
xor
inc
dec
and
sbb
mov
dec
jo
aad
adc
push
push
scas
mov
leave
sbb
scas
lea
mov
je
add
es
dec
push
out
daa
inc
push
dec
jae
pop
loop
jnp
insl
pop
or
jmp
out
mov
push
sub
and
cs
test
sbb
lock
es
sbb
imul
mov
or
imul
mov
add
lcall
decb
in
mov
inc
cld
push
in
scas
mov
sub
into
or
imul
stos
push
xchg
adc
test
repz
sbb
push
cs
mov
mov
push
dec
popa
loop
fimuls
or
out
inc
and
mov
jg
lds
pop
outsl
cwtl
stos
shll
enter
or
cmp
outsl
mov
es
scas
jecxz
jbe
ja
shll
add
sbb
js
cwtl
xchg
jbe
ja
outsb
pushf
add
adc
cld
mov
in
cltd
xchg
std
pushf
icebp
decl
sar
mov
push
cld
data16
push
clc
outsl
jl
lock
nop
pop
std
pop
cli
nop
or
je
outsl
std
mov
inc
outsb
jecxz
dec
loop
dec
sti
dec
outsl
pushf
mov
js
dec
fldcw
jle
and
jmp
dec
call
dec
outsl
das
mov
lods
cli
lock
xor
lcall
sbb
sahf
out
lahf
inc
imul
loopne
fadds
je
aaa
outsb
mov
cbtw
clc
stos
xchg
scas
shl
inc
add
aaa
out
int3
iret
lods
pop
clc
inc
sahf
dec
mov
sub
sbb
or
scas
fwait
adc
and
std
hlt
stc
movsb
repnz
scas
mov
push
in
scas
mov
xchg
sub
dec
subb
scas
insl
in
pop
adc
outsb
int3
pop
inc
and
xchg
scas
in
sbb
into
into
dec
int3
addw
pushf
lock
scas
inc
mov
cmp
mov
in
sub
aam
mov
sub
movsl
out
fnclex
xchg
fwait
int3
xchg
mov
icebp
mov
cmpsb
loop
xor
sub
insl
loop
mov
lods
mov
add
jnp
pop
mov
inc
inc
inc
mov
out
cli
clc
dec
out
jnp
repnz
pushf
insb
or
inc
ret
les
lahf
cld
sbb
mov
inc
outsl
jecxz
push
outsl
jle
repnz
fnstenv
movl
loop
cmp
lods
lock
xchg
xlat
aas
inc
imul
in
repz
sub
loopne
push
add
call
xorb
or
pop
dec
xchg
cs
sbb
jo
cmpsb
les
sub
adcb
and
int3
adc
xchg
mov
sub
sub
out
and
or
lock
dec
test
mov
lret
fstp
adc
or
ret
mov
mov
je
les
xor
outsl
testb
dec
cmpsl
in
push
test
jge
jle
pusha
inc
jae
addr16
mov
out
and
or
leave
repz
test
push
ss
out
cs
add
inc
jle
and
jno
out
add
and
fsts
popa
cltd
repz
jmp
xchg
sub
pop
xchg
cmc
adc
arpl
jmp
out
jmp
scas
ret
cmpb
jne
outsb
int
das
lock
in
push
sub
and
sbb
je
outsl
psubsb
in
shlb
ja
in
pop
outsl
jb
fstl
jle
jecxz
inc
cmc
outsl
mov
inc
testl
das
movsb
sbb
jle
dec
bswap
mov
jo
out
adc
loop
hlt
scas
ljmp
outsb
call
inc
call
cmp
movsb
add
or
in
call
adc
loopne
scas
cltd
mov
aaa
outsl
or
call
sti
inc
push
sub
cmc
mov
out
icebp
dec
dec
in
jmp
mov
xor
push
out
daa
out
inc
les
jle
lock
cmp
lea
pop
adc
mul
pop
and
fisubl
push
cli
insl
jecxz
pop
dec
jecxz
dec
loop
loope
add
out
out
je
sti
pop
out
sub
dec
bswap
mov
pop
addl
scas
inc
rcrl
lock
testl
pop
sub
test
fsubr
out
out
mov
js
jmp
mov
and
mov
mov
cmpsb
imulb
mov
or
lcall
or
or
loopne
sti
insl
decl
into
push
arpl
jg
lock
in
mov
jnp
outsb
popa
dec
outsb
insl
push
push
jmp
outsl
fdivl
mov
push
push
shlb
jle
jge
jge
bound
pop
jnp
mov
rorb
adc
cmpsb
sti
mov
into
mov
mov
push
repnz
loop
imulb
jl
xchg
jle
dec
jge
in
push
gs
sbb
out
loop
mov
mov
pop
mov
add
outsb
lock
dec
movl
inc
pop
mov
ret
dec
or
push
or
iret
jl
es
notb
sti
movsb
icebp
loopne,pn
push
mov
inc
movsb
xor
test
adc
adc
call
xor
add
call
dec
cmp
lods
out
out
addr16
pop
ret
add
hlt
int
ja
push
inc
xor
icebp
pusha
mov
dec
insl
inc
and
imul
or
out
pop
xor
mov
inc
dec
mov
pop
mov
mov
int3
repz
push
or
add
dec
repz
jne
ret
ljmp
xchg
out
in
adc
fwait
mov
push
or
dec
lret
nop
lods
push
mov
sub
fstl
cs
sub
push
lock
scas
popa
cmpb
stc
mov
int3
xor
aas
dec
mov
int3
mov
xchg
push
inc
adc
scas
mov
into
hlt
mov
leave
sbb
test
push
loop
push
push
ss
jmp
inc
push
add
add
mov
adc
popa
shrb
jle
and
adc
lcall
inc
call
call
out
jns
out
jne
rep
js
jmp
enter
insb
xor
loop
lahf
mov
inc
inc
jnp
call
je
inc
aaa
jge
jmp
in
dec
outsb
dec
jb
inc
data16
jle
loope
dec
in
stos
imul
insb
shrb
sbb
pop
out
stos
jno
into
out
adc
push
out
je
outsb
mov
dec
xor
dec
out
cmc
out
add
jecxz
cmp
movsb
imul
sbb
outsb
pop
ljmp
adc
push
mov
icebp
stos
dec
js
in
dec
frstor
out
je
or
aad
sub
addb
add
push
imul
test
xor
loop
jg
imul
loop
dec
jp
or
repz
outsl
dec
inc
xor
scas
outsb
lret
in
stc
mov
stos
das
jbe
sarl
mov
dec
clc
pop
lds
ud2
inc
addr16
push
xor
push
cld
inc
in
dec
dec
ds
jmp
cmpsl
sub
loop
jg
outsl
lcall
fcomps
loop
cltd
lret
scas
fildll
imull
out
icebp
push
loopne
push
jns
adc
xor
mov
call
test
push
xor
mov
repz
dec
into
and
sti
insb
out
mov
or
xor
inc
jecxz
and
fcmovbe
or
ja
lds
mov
into
adc
in
jae
fwait
dec
int
push
sub
daa
jnp
sbb
mov
out
call
dec
scas
mov
push
mov
add
sub
or
imul
dec
scas
mov
or
jmp
jle
cltd
dec
sub
or
push
lahf
outsl
adc
fbld
in
mov
sbb
pusha
mov
mov
or
push
dec
insl
cmpsb
mov
loope
scas
pop
fldl
in
std
adc
outsl
sti
jae
bound
cmp
xchg
add
mov
push
outsb
lret
dec
xchg
clc
or
jg
out
jnp
ljmp
jo
dec
fsts
mul
sti
dec
cli
jg
sub
outsl
or
mov
js
addr16
or
mov
jae
dec
push
sub
out
dec
hlt
js
inc
adc
xchg
push
dec
out
popa
in
mov
mov
lahf
sub
clc
mov
mov
jl
es
hlt
jmp
sahf
pop
iret
inc
mull
inc
push
sub
push
stos
push
outsb
inc
push
jle
cli
mov
ja
mov
and
push
inc
lsl
push
xchg
push
mov
or
into
push
hlt
sub
mov
xchg
mov
and
push
in
lahf
outsb
mov
sub
ret
sbb
cmpsl
mov
pop
push
stc
jmp
or
lcall
mov
sahf
push
dec
ja
jle
cmp
mov
jnp
loopne
adc
mov
cmp
xor
push
push
mov
sub
add
lret
mov
push
add
push
lock
or
push
xor
mov
in
call
scas
out
mov
clc
mov
pop
jg
push
cmc
outsl
pop
rep
xchg
sbb
jle
mov
cmovge
mov
push
cld
mov
sbb
int3
pusha
and
pop
pop
daa
lds
imul
enter
xor
jnp
fwait
outsl
sahf
sbb
inc
adcl
sti
push
test
inc
and
outsb
jg
fists
cmp
shll
add
scas
mov
ret
sarl
xchg
out
lods
stos
push
xchg
adc
icebp
in
dec
imul
xor
mov
aas
pop
jae
aad
repnz
cmp
loope
fildll
lret
mov
imul
sti
pop
dec
into
add
mov
outsl
inc
daa
push
or
jnp
aas
shlb
lahf
stos
sbb
xchg
popf
lret
jno
pushf
xchg
scas
stos
repnz
dec
call
sbb
mov
hlt
stos
ret
outsw
mov
gs
sub
int3
mov
xchg
rorb
decl
mov
mov
daa
inc
lahf
out
repnz
sbb
or
pop
rclb
cmp
ja
adc
push
fildll
sub
xor
sahf
mov
ja
insl
lea
imul
test
leave
jge
sbb
mov
inc
pop
les
and
dec
loopne
jl
pop
dec
cld
mov
pop
call
cmc
daa
std
dec
insb
sarl
out
jge
lock
xor
push
subb
jg
call
inc
mov
insb
popf
push
lock
adc
loop
xor
rol
pop
mov
mov
pop
or
dec
fucomi
lahf
das
adc
repz
adc
xchg
fisttps
jg
jmp
fadd
sub
outsb
stos
in
lcall
push
cld
in
xor
scas
jge
pop
jmp
sub
mov
xchg
mov
mov
inc
mov
call
lods
push
sbb
out
or
mov
movsl
mov
fs
shrl
push
loopne
xorl
xchg
jno
imul
inc
mov
adc
lock
ja
fiadds
rcrb
iret
shrb
jecxz
loop
add
mov
mov
out
fisubs
jg
add
rolb
call
repz
rep
jle
mov
gs
pusha
ffreep
sub
out
and
cmp
insl
iret
jl
mull
data16
nop
pop
cwtl
dec
xor
dec
xchg
movsl
aaa
xor
jne
testl
outsb
movsb
xor
std
cmp
out
and
popa
cmp
in
sub
jg
jns
fimull
add
xchg
stos
popa
jecxz
sub
imul
shlb
cld
ljmp
aam
sub
loope
insb
push
xchg
jbe
lea
dec
or
lock
cs
mov
adc
mov
fidivl
insl
mov
loopne
push
mov
lds
hlt
bound
pop
mov
mov
movsl
adc
push
addr16
and
outsl
push
adc
push
fnstsw
inc
test
test
jno
mov
adcl
loop
xchg
mov
out
sub
xchg
jno
out
sub
sub
dec
pop
gs
cmp
or
pusha
ss
loopne
xorl
lods
push
fs
lods
movsl
jg
sub
aas
inc
mov
jae
dec
sub
jne
out
pop
jne
jae
popa
xchg
js
mov
lock
push
es
lods
xchg
or
pop
out
mov
mov
add
hlt
outsb
dec
repnz
jmp
out
in
imul
xor
in
mov
imul
fnstenv
dec
and
pop
test
add
push
jge
jbe
aas
lcall
xchg
mov
pop
ljmp
scas
stos
orb
test
push
push
lods
scas
jb
cmp
xor
insl
jmp
data16
fcoms
push
outsl
jle
push
sbb
jle
insb
loop
add
loope
out
pop
inc
rcrb
xchg
push
outsb
dec
aaa
push
arpl
lock
sub
lock
in
in
pop
cmp
outsl
push
or
xchg
ljmp
mov
into
jge
push
inc
pop
or
mov
fiaddl
push
cltd
inc
inc
jle
mov
and
lahf
jno
pop
in
out
shrb
es
xor
cltd
mov
addr16
out
bound
ds
jb
shll
out
outsb
out
enter
out
push
dec
aas
mov
test
call
into
push
in
out
add
mov
xchg
test
ja
inc
add
push
scas
arpl
shrb
lds
nop
repnz
iret
data16
dec
clts
cltd
scas
arpl
das
xchg
adc
hlt
imul
jg
and
jg
loope
dec
stc
and
push
jg
outsl
jge
jno
lahf
cs
xor
and
lods
pop
jle
or
data16
mov
jp
mov
pop
sbb
shll
int3
hlt
dec
sub
push
adc
and
dec
jg
sbb
and
sub
sbb
add
stos
insl
jg
shlb
mov
xchg
cmp
jns
mov
push
sbb
pusha
xchg
pop
dec
out
fwait
push
jmp
loope
insl
dec
mov
enter
mov
lea
mov
test
pop
mov
out
xor
push
jge
adc
mov
push
popf
arpl
jg
outsl
mov
pushf
mov
es
adc
test
sub
out
mov
fimull
pop
cltd
sar
cs
jle
ficomps
daa
addr16
mov
popa
push
enter
test
test
repnz
cmpsl
rorl
outsl
push
jl
scas
mov
lret
push
psubusb
out
enter
aaa
hlt
xor
or
mov
cmpsb
push
jl
pop
ljmp
stc
push
dec
test
loop
cmp
fsubrs
outsb
pop
xchg
outsl
std
pop
inc
int3
mov
addr16
insb
outsl
lret
push
dec
jo
sahf
push
fwait
outsl
into
add
in
ret
add
data16
adc
vmovdqu
dec
add
inc
dec
out
add
lcall
mov
xchg
cmp
negl
adc
jle
scas
stc
test
shr
pusha
jb
cmp
mov
sub
test
arpl
test
add
add
mov
adc
movsl
xchg
dec
jne
push
mov
arpl
dec
stos
push
sub
imul
inc
jecxz
mov
in
test
sub
jg
and
imul
xor
add
push
hlt
insb
sub
mov
mov
outsb
popa
ficomps
mov
and
test
or
pop
test
stos
jg
outsl
xchg
dec
mov
call
loop
pop
adc
in
push
test
sti
fimuls
adc
frstor
lea
mov
or
bound
enter
dec
outsl
add
mov
sub
mov
stos
bound
and
repz
loop
sub
shlb
fdivrs
icebp
cmp
std
loopne
xor
fwait
loopne
cmp
arpl
callw
aas
imul
jbe
xchg
ljmp
inc
out
sbb
or
icebp
outsl
repnz
arpl
mov
xchg
insl
lock
push
icebp
and
sub
push
call
pop
mov
cs
js
mov
jno
lock
pop
out
or
nop
xor
stc
jle
xchg
inc
leave
jl
test
dec
test
inc
push
in
ficoml
addr16
cmpsb
imul
mov
ss
mov
je
lds
jnp
xor
adc
mov
push
inc
mov
mov
jno
mov
js
or
jecxz
adc
repz
pushf
jge
les
pop
jge
call
ja
daa
lock
js
mov
imul
sub
lock
dec
enter
cs
jnp
push
mov
pop
jp
dec
dec
stc
ja
clc
clc
xchg
pop
cmp
int3
bswap
call
jbe
pusha
clc
call
mov
addr16
leave
xor
je
icebp
pop
mov
xchg
fsubl
in
cmp
call
xchg
in
sub
sub
fldenv
mov
cmpsb
popl
rcrl
mov
lahf
imul
out
aad
sub
jbe
push
pop
jno
and
insb
inc
imul
xor
int3
ja
outsl
fimull
mov
xor
jge
cmpb
mov
push
cmp
test
sti
fldt
or
cs
fmul
std
jo
mov
into
cltd
ja
out
testb
push
addr16
jl
pop
outsl
fisubs
pop
das
imul
jns
sub
jmp
jb
or
inc
int
jne
xchg
daa
arpl
popa
mov
in
mov
push
or
add
sub
sub
mov
imul
hlt
setns
cltd
das
test
mov
mov
mov
xchg
sahf
mov
mov
sarb
dec
xchg
push
pop
je
loopne
jp
cwtl
adc
xchg
sbb
rcll
dec
in
bound
int3
pop
cmc
inc
mov
lods
mov
sbb
push
mov
jae
ret
or
scas
or
xchg
jno
fcompl
sub
lds
push
jmp
mov
cmpsb
out
fwait
hlt
lock
ret
xchg
fld1
lods
mov
push
ds
outsl
add
cli
ds
mov
mov
cmpsl
idivl
in
rcll
push
mov
mov
testb
iret
rorl
les
mov
aaa
lock
or
dec
cmp
int
push
sbb
addl
fidivrl
ja
out
lods
fldenv
aas
negb
fld1
out
test
mov
add
lcall
mov
mov
xor
add
pusha
in
movsl
icebp
stos
aaa
loop
pop
or
ja
movb
push
cmpsl
mov
dec
scas
mov
cmpsl
std
in
lods
and
xor
call
cmp
push
inc
fbstp
pop
sbb
iret
pop
pop
jno
adc
lahf
add
and
sbb
cli
pop
adc
ljmp
cmp
mov
rolb
in
aam
or
inc
ja
and
inc
mov
movsb
jo
push
sbb
mov
mov
and
cld
jns
lret
jl
data16
addr16
cmp
lods
lods
fucomp
lea
jl
pop
xchg
push
add
sub
jbe
inc
xchg
and
add
stos
and
mov
outsl
lahf
lods
call
testl
add
dec
dec
sbb
les
call
dec
or
stos
push
insb
pop
subl
mov
out
xchg
test
jmp
adc
icebp
in
add
cmpsl
mov
dec
inc
lods
or
aaa
xchg
enter
pop
and
mov
xor
outsb
xchg
outsl
call
leave
insb
mov
mov
or
sbb
hlt
test
test
test
or
pop
je
stos
cmp
sti
xchg
dec
mov
dec
sti
stos
rcl
xor
popa
and
inc
pop
jae
dec
test
cmpsl
imul
mov
imul
jle
jg
jbe
dec
decl
add
xlat
jb
xor
jbe
jp
les
xlat
call
scas
mov
ja
rol
insl
je
xor
adc
pop
pop
mov
add
and
test
xchg
iret
outsb
xbegin
out
outsl
dec
jno
lcall
outsl
sub
inc
add
fldcw
mov
jb
jae
lret
mov
rolb
scas
adc
pop
aas
jl
jae
push
das
sub
jle
loopne
dec
mov
xchg
in
adc
xchg
cwtl
bnd
sub
mov
out
push
pop
sbb
adc
mov
addr16
xor
fsubrs
adc
push
addr16
mov
lahf
test
or
dec
je
sbb
addr16
aas
in
adc
cltd
add
sub
mov
push
push
mov
lret
pop
push
push
sub
imul
mov
mov
repnz
or
test
daa
popf
loope
imul
imul
inc
or
jb
xor
jp
into
pop
shr
es
jg
inc
mov
js
xor
mov
jae
cmpsl
lcall
dec
scas
adc
dec
mov
shlb
lods
fs
loopne
xor
mov
cwtl
cmp
in
dec
inc
shlb
or
std
out
mov
outsl
fdivp
jae
cmpsb
jnp
mov
insl
test
push
mov
mov
mov
and
cmpsl
add
in
fsubrl
outsb
xor
out
mov
pop
and
and
xor
and
scas
fadd
fdivrl
loop
inc
fisubrs
das
leave
insl
or
jl
mov
xchg
or
adc
and
sub
lahf
sbb
pop
push
push
bnd
mov
or
push
ficomps
ret
andl
mov
lret
in
outsl
jle
in
mov
sub
out
fs
add
sub
mov
out
mov
inc
pop
push
mov
mov
insb
mov
sub
cli
dec
lret
push
ja
add
hlt
out
aas
xchg
sub
icebp
repnz
popa
add
push
adc
in
add
leave
lock
das
adc
push
add
popl
lods
jb
mov
aad
test
addr16
mov
in
loope
adc
lret
push
test
test
sub
psadbw
orb
stos
mov
lods
lret
rcr
mov
cs
xchg
outsb
mov
imul
push
dec
mov
push
jl
xor
stc
in
sbb
out
ja
fstp
pop
test
push
ss
push
mov
lahf
movsb
out
push
xchg
ljmp
and
lods
mov
push
jp
mov
insl
dec
clc
xchg
fwait
addr16
or
aad
loop
mov
lahf
xor
iret
loop
iret
lea
xchg
stos
decl
repnz
imul
int3
aas
sub
fstpl
lret
or
mov
call
xchg
inc
icebp
jnp
push
jnp
test
je
dec
jge
and
adc
add
push
scas
xorb
push
filds
cwtl
cmc
repz
and
fistpl
dec
jno
scas
repnz
inc
adc
push
cmp
cmp
pop
mov
jle
aas
add
arpl
sub
mov
pop
imull
int3
xchg
gs
xor
and
dec
or
in
lock
pusha
mov
data16
out
mov
cmp
scas
jae
int3
mov
or
fbstp
or
ret
insl
xor
gs
hlt
test
loop
call
fs
sbb
mov
fsub
lret
out
xchg
and
pop
out
scas
call
out
mov
push
mov
loop
lret
sarl
jbe
outsb
mov
decb
in
sarl
arpl
bound
ret
inc
inc
outsb
daa
lock
jne
mov
gs
stos
add
or
mov
jmp
cmp
pop
out
outsl
ret
or
push
daa
pop
in
sub
jmp
jmp
hlt
sti
int
push
push
imul
and
pop
call
xlat
jno,pn
xchg
pop
scas
popa
adc
shlb
leave
push
dec
arpl
dec
dec
popa
insl
pop
jg
int3
dec
fsubs
mov
test
xchg
out
inc
outsb
lods
xor
mov
in
outsl
cmpsl
fucomi
push
lret
mov
lds
test
ja
dec
mov
loopne
push
and
ja
mov
ret
pop
data16
fldenv
or
jmp
push
jae
xchg
pusha
xor
outsb
imull
out
or
jp
cli
imul
pusha
and
pop
adc
ret
out
xchg
into
or
and
mov
dec
sub
cmpsl
mov
mov
jbe
xchg
inc
icebp
and
xchg
jb
fstpl
push
outsb
inc
out
cli
fwait
dec
emms
jecxz
rorb
xor
xor
into
mov
rclb
dec
mov
arpl
adc
orb
pop
add
enter
out
mov
jmp
ret
fdivr
mov
jo
lret
or
not
movsl
and
sbbb
fidivs
jne
jmp
imul
jge
dec
pop
push
xchg
cmp
mov
into
call
jb
arpl
push
xchg
sub
rolb
push
adc
outsb
test
es
pop
mov
stos
mov
inc
jnp
xor
test
cmp
pop
fcompl
arpl
sbb
mov
inc
or
outsl
test
add
inc
adc
out
pop
add
fnstenv
lahf
fdivl
jo
mov
cltd
cld
pushf
in
dec
aaa
and
cmpl
repz
mov
enter
lret
test
xor
fcoml
stos
push
and
outsb
xchg
cltd
outsb
out
add
call
fwait
ror
imul
pop
decb
mov
stos
out
es
push
scas
push
mov
push
lods
pop
cmp
jne
fcompl
les
mov
push
sub
push
popa
mov
push
mov
sub
lea
dec
aaa
movsl
cmp
sbb
test
sub
stos
test
in
in
mov
or
outsl
fcompl
out
cmpsl
pop
mov
bound
in
cmpsl
mov
lea
les
repnz
fwait
xchg
pop
shlb
pop
cmp
sbb
mov
insl
mov
or
sub
inc
sti
jnp
jno
jb
mov
int
pop
and
inc
push
add
fwait
movsb
ss
enter
arpl
sbb
mov
add
and
lea
popa
pop
push
dec
sarl
mov
pop
clc
jecxz
test
jmp
sbb
and
push
push
ret
add
lret
les
lods
int
loope
pop
add
repz
mov
pop
ljmp
cmp
xchg
jnp
push
fnstsw
cltd
daa
pop
out
lret
insb
in
daa
and
mul
pop
daa
ret
push
pop
loop
je
cmp
push
test
lock
divl
outsb
push
icebp
jg
push
dec
xchg
stos
or
negb
cmp
mov
std
mov
popa
imul
cmp
bswap
out
sti
filds
loop
sti
pop
pop
out
mov
shll
mov
ja
mov
repz
addr16
push
xor
dec
pop
sbb
xchg
ss
lret
sbbl
add
jp
in
sti
neg
stos
xor
pop
xor
iret
das
or
mov
adc
lret
mov
data16
out
mov
fcmovbe
mov
add
mov
or
insb
mov
push
aam
jae
or
popf
dec
xchg
jp
dec
dec
decl
xlat
fiaddl
shl
adc
test
push
push
hlt
mov
jg
fdivp
adc
adc
dec
jmp
push
ret
shrl
arpl
add
rclb
lret
cmp
nop
push
stos
sbb
repnz
add
pop
dec
cmc
lea
repnz
dec
arpl
push
xor
push
fisttpll
clc
cld
push
mov
add
lds
test
bnd
cmp
stos
test
dec
xchg
scas
jmp
popa
loopne
cmp
sub
aad
lcall
xchg
scas
pop
or
and
call
lods
sub
dec
and
mov
mov
jb
ja
push
mov
mov
outsb
jl
fidivl
arpl
and
nop
jnp
mov
int
imul
lods
inc
popa
jg
shlb
lret
push
mov
or
repz
pop
cmp
leave
add
mov
imul
lods
mov
mov
push
iret
out
scas
push
loopne
add
mov
mov
pop
inc
cmp
popl
cmp
outsl
test
int3
push
push
in
or
ds
inc
fwait
pop
loop
and
inc
push
test
scas
push
mov
ja
out
jp
in
adcl
repz
xchg
push
mov
int3
sbb
lret
loop
popl
fdivrs
pop
push
dec
sub
decb
imulb
cmp
push
gs
out
mov
clc
sub
mov
xchg
outsb
loop
imul
inc
xchg
dec
pop
pop
lock
fs
jnp
mov
xchg
and
mov
adcb
sbb
mov
jbe
fcomps
pop
jae
dec
fisubs
inc
roll
outsb
inc
xchg
cmc
dec
stc
scas
enter
outsb
adc
aaa
nop
int3
adc
jnp
adcb
push
pop
pop
loop
addr16
addr16
ret
xor
aad
std
pop
loopne
aaa
sub
cmp
daa
xchg
jp
jmp
pop
int3
cmp
pop
lods
rep
push
insl
inc
push
xchg
sub
sub
mov
mov
jae
addr16
pop
lahf
into
jmp
mov
pushf
dec
cmp
in
xor
mov
sbb
sub
push
divb
jmp
jnp
jne
mov
sti
xchg
xor
outsb
adc
mov
mov
ljmp
in
in
scas
add
inc
cld
jmp
nop
imul
dec
sbb
jnp
fsts
lods
push
stc
scas
jmp
fdivs
jg
in
movsb
dec
dec
sar
in
stc
fwait
pushf
call
mov
les
aaa
fs
loope
add
cli
std
enter
mov
into
mov
enter
bound
cmc
xchg
in
int3
pusha
and
stos
add
cmpsl
xchg
xor
push
lahf
and
pop
or
add
adc
loop
push
into
mov
push
in
std
mov
xchg
xchg
add
les
int
xchg
loope
inc
shlb
lahf
aam
out
outsb
jae
sti
clc
sub
icebp
sub
repz
mov
xor
fsubs
hlt
into
mov
adc
adc
or
cmpsb
rol
adc
push
inc
and
out
iret
xchg
lods
xchg
es
fbld
mov
ffree
cld
fsubrs
fucomi
mov
adc
mov
jecxz
dec
and
fiaddl
xor
cli
jo
lods
push
xchg
mov
inc
jge
mov
dec
aas
add
jne
add
nop
mov
pop
adc
inc
rorb
shlb
pusha
push
dec
lea
gs
xchg
insb
jb
test
sub
add
dec
and
and
inc
mov
xchg
js
loope
and
adc
sub
insl
frstor
rsqrtps
and
out
mov
es
loopne
loope
pusha
stos
xchg
rcl
imul
rclb
dec
movsl
repz
das
pop
push
mov
jl
insl
jle
jmp
mov
mov
xchg
popa
loopne
outsl
mov
outsb
in
cmpb
enter
lds
mov
lcall
add
jle
mov
bnd
xchg
mov
sbb
outsl
mov
dec
sbb
shll
andl
jg
sub
sbb
or
cmovle
loopne
mov
jb
shlb
out
mov
or
mov
xchg
pop
loop
pop
inc
insl
add
call
jno
fs
mov
std
outsl
cmc
cmp
mov
mov
push
cmp
mov
xlat
movsb
push
movb
test
xor
cmpb
bound
or
inc
sub
sbb
inc
push
cmpsl
fisttpll
xor
add
aaa
push
mov
sub
test
iret
test
mov
in
loopne
ret
jecxz
mov
jmp
fcomip
fcoml
mov
cmc
sub
lods
inc
cmp
and
outsl
fsub
inc
and
xor
aas
xor
scas
nop
dec
ret
call
lock
pop
and
adc
jbe
fdivs
icebp
jbe
outsl
add
outsl
lods
jae
outsb
dec
insb
in
pop
or
in
leave
xorl
popa
les
or
in
and
addr16
in
pop
iret
jns
add
outsb
lahf
lock
repnz
mov
sahf
in
in
push
dec
lcall
mov
xchg
mov
cwtl
sub
mov
out
aam
outsb
out
arpl
nop
ljmp
shrb
lea
xchg
pop
add
shl
hlt
ljmp
fidivs
push
dec
stc
sub
into
mov
outsl
out
jb
sbb
mov
add
loope
cmp
mov
enter
movsl
test
js
arpl
sbb
insb
sahf
mov
pop
call
imul
lret
and
sub
call
repz
mov
into
aaa
and
arpl
outsb
sbb
bound
sahf
fcoml
call
push
insb
add
outsb
icebp
or
sbb
cmc
scas
push
in
dec
push
sahf
sub
or
pusha
fisubrl
scas
pusha
in
ret
and
xchg
pop
hlt
gs
jbe
and
clc
and
push
les
aaa
out
out
sbb
lret
sbb
shld
ja
sbb
jne
dec
mov
call
shrl
lret
mov
or
call
out
scas
stos
in
push
out
xchg
gs
jg
insl
ret
lds
or
push
divl
imul
xchg
mov
lds
outsb
pop
and
ds
jmp
out
lret
xchg
dec
mov
out
gs
aad
out
pop
pop
scas
in
arpl
shll
sti
jbe
dec
in
imul
mov
punpcklbw
lock
mov
mov
test
iret
mov
cs
push
shll
js
push
call
outsl
aad
inc
shlb
push
movsb
shrb
into
mov
repz
xor
test
pop
jle
inc
mulb
jne
inc
out
sub
in
iret
adc
das
dec
sbb
shll
xor
int
ja
push
outsb
sbb
pop
fisubs
push
add
sub
dec
mov
mov
sarb
jle
jns
pop
sub
or
in
insb
inc
cmpsb
popa
pop
lods
movsl
sub
hlt
test
inc
fsub
fmull
jnp
xorl
add
dec
jmp
push
dec
daa
mov
jae
movb
push
xrelease
mov
scas
mov
jb
jle
std
mov
pop
int3
adc
lock
or
popf
dec
mov
pop
outsb
ret
xor
pop
pop
jno
sarb
pop
test
jge
clc
mov
fiaddl
and
push
packssdw
add
mov
lock
mov
scas
dec
addl
cmpsl
gs
aaa
pop
inc
mov
stos
loope
movsb
xchg
sub
and
mov
lds
outsl
mov
je
or
scas
in
mov
push
push
push
xchg
out
mov
test
decl
add
outsb
loopne
dec
rcrl
xor
sahf
mov
movsb
jl
lock
push
add
xor
popa
lea
push
jmp
fidivl
imul
fs
cmc
add
mov
mov
jmp
lds
clc
mov
cmp
add
dec
stos
shlb
repz
shlb
pop
sub
xchg
mov
mov
xor
jae
int3
xchg
dec
sarl
dec
mov
mov
mov
cwtl
lcall
out
inc
jb
sub
aaa
lret
mov
jle
mov
push
xchg
fsubs
pop
dec
cmp
test
test
std
clc
jae
mov
stos
mov
dec
push
insl
out
test
cmp
popf
bound
hlt
jne
loop
inc
xchg
fisttpll
lret
push
mov
fistps
fcomip
fadds
ljmp
pusha
mov
dec
xlat
loopne
add
icebp
fucomp
or
add
sbb
add
pop
andl
sti
jno
mov
cld
sbb
xchg
js
arpl
sub
outsl
fs
mov
pxor
fstl
pop
int3
dec
xorl
cltd
cmp
mov
outsl
orb
pop
into
outsl
enter
jae
dec
sub
and
popa
ljmp
call
std
outsb
popf
fcomip
dec
cs
into
or
imul
fwait
push
insb
stc
add
inc
push
sub
adc
testl
mov
pop
daa
outsb
imul
dec
jbe
jge
gs
ja
fs
add
out
dec
mov
lods
adc
std
dec
test
dec
cmc
inc
cmpsl
lock
mov
adcb
jns
push
lds
vandnps
insb
jbe
nop
pop
dec
and
daa
fs
lfs
orps
jns
rorl
pop
dec
lock
repnz
mov
cmp
cmp
je
add
shrl
adc
outsl
or
mov
in
andl
mov
pop
adc
nop
jg
hlt
and
out
push
add
fucomi
lret
fldcw
scas
call
testl
dec
fucomip
dec
dec
pop
dec
scas
inc
in
inc
addr16
pop
inc
lods
inc
call
scas
dec
in
dec
addr16
cli
rcrl
sub
call
in
orb
pushf
insb
out
pushf
push
aaa
mov
cltd
xor
outsl
insb
jmp
inc
out
dec
loop
test
in
dec
cs
xchg
leave
movsl
or
mov
push
add
mov
dec
push
mov
scas
sbb
ja
jae
mov
ret
leave
outsl
lret
sub
shrb
movsb
sub
in
adc
arpl
mov
jne
jno
iret
hlt
mov
mov
fsubrs
clc
popa
push
dec
sub
lahf
xorl
pop
add
out
or
addr16
xor
xchg
pop
into
out
inc
jle
out
pop
push
fs
or
out
loopne
dec
stos
inc
aas
cmp
insl
cmpsl
xor
sbb
sahf
mov
push
sub
outsl
gs
outsl
mov
mov
outsb
dec
mov
jl
xchg
imul
jne
in
sti
or
scas
pop
inc
jbe
adc
dec
enter
rcl
cmp
cld
add
sbb
movhps
jne
test
jmp
jnp
or
jae
cmpsb
mov
lods
push
leave
aaa
mov
out
mov
jge
shlb
xor
pop
int3
fistl
scas
nop
cli
pop
xchg
mov
pop
cmpsl
out
jp
and
ljmp
in
lret
fs
mov
in
or
xchg
jl
lret
sbb
arpl
mov
sbb
outsl
and
icebp
lods
into
push
xor
pop
pop
ret
aam
dec
insl
jbe
icebp
pop
enter
jb
repnz
jae
jl
jns
sbb
int3
pop
or
and
enter
xor
xchg
icebp
add
inc
ljmp
in
inc
out
push
pop
fisubrl
dec
jo
arpl
push
es
shl
mov
lret
jae
test
lcall
icebp
and
mov
std
or
dec
out
lods
int3
xorb
dec
ljmp
push
test
dec
outsl
jb
xchg
iret
dec
lods
pop
push
orb
outsb
nop
mov
adc
mov
jb
xchg
xlat
stos
out
clc
dec
insb
in
dec
pop
test
jns
outsl
jae
lret
or
aaa
sub
scas
lcall
insb
sti
mov
adc
nop
jp
sub
aas
dec
les
es
pusha
clc
push
mov
scas
or
or
dec
dec
or
sub
leave
or
cmp
pop
in
pop
in
icebp
lret
mov
xchg
cmp
push
shlw
lock
push
andl
pop
or
push
dec
test
mov
mov
nop
dec
push
mov
push
scas
out
in
add
lea
jg
lds
mov
scas
mov
popa
mov
dec
lock
ret
bound
in
shlb
loopne
cmp
mov
push
or
inc
sub
jns
idivb
outsb
rcll
inc
hlt
out
jmp
sbb
adc
addb
nop
ds
pop
xor
pop
clc
imul
decl
push
mov
sub
and
dec
pop
outsb
or
subb
mov
cs
sbb
int3
add
imul
push
int3
add
addr16
out
movsb
shr
fldl
out
daa
mov
push
cmp
push
push
pushf
ds
push
ror
insb
adc
hlt
dec
xchg
push
aad
sti
mov
outsl
jno
lahf
dec
stos
jns
push
pop
clc
insb
inc
sbb
lret
mov
lds
sbb
sahf
daa
enter
outsl
mov
sub
in
outsl
or
jns
dec
repz
loope
push
mov
sub
xchg
sbb
in
pop
clc
jae
xor
dec
call
and
lock
out
mov
fldl
sahf
in
insl
outsb
and
arpl
outsl
out
dec
and
inc
mov
ja
cmp
gs
pop
mov
stos
mov
pushf
pushf
cmpsb
imul
es
enter
in
push
subl
in
test
mov
outsl
jns
loope
in
mov
pop
sub
dec
iret
fcoms
adc
mov
adc
xchg
fs
outsb
in
shr
sbb
test
sub
adc
push
test
repz
push
mov
and
out
push
jae
dec
xchg
xchg
scas
dec
mov
out
jmp
fadd
test
mov
mov
xchg
jae
in
sbb
and
mov
call
push
cmpsl
mov
sahf
pop
pop
push
or
in
push
ret
in
jbe
mulb
insb
push
mov
out
ret
cmp
sbb
cmp
fsubp
mov
enter
xchg
pop
jecxz
les
mull
test
fwait
xchg
xor
xorl
cmpsb
das
push
scas
scas
mov
nop
mov
cwtl
leave
repz
imul
dec
inc
clc
lods
xor
scas
dec
daa
scas
test
jbe
out
dec
repz
cmp
adc
xchg
pop
out
fcoms
lods
jns
insl
or
adc
shlb
jno
and
test
jle
fbld
js
pushf
out
popf
mov
adc
push
outsl
mov
popf
jg
pop
jl
mov
scas
out
jae
jae
pop
mov
pushf
popf
ljmp
out
outsl
scas
and
loopne
mov
flds
jno
push
sub
lretw
popa
push
lret
subb
cmpsl
xor
fsts
pusha
js
jae
push
pop
lahf
jbe
bound
push
int
test
inc
out
inc
in
or
out
out
pushf
fstps
adc
pushw
es
aas
mov
into
imul
out
in
cmp
mov
jg
das
pop
shrb
fsubp
mov
inc
lret
fldenv
outsb
mov
and
mov
inc
fst
stos
or
jne
push
fists
insb
sub
cwtl
std
mov
fwait
mov
push
mulb
push
dec
out
stc
dec
insb
inc
and
dec
cmc
dec
and
ljmp
jns
sbb
dec
pop
cmovle
dec
loope
push
jo
add
in
jmp
jg
adcl
or
outsb
sub
mov
cmp
jae
dec
int
dec
sti
jmp
outsl
cwtl
mov
jg
or
in
dec
push
clc
jmp
dec
loop
ljmp
dec
mov
into
jb
icebp
in
daa
push
js
scas
jns
loopne
enter
pop
adc
bound
call
je
gs
aaa
cli
dec
cmpsb
clc
jge
dec
popa
inc
in
dec
sti
cmpsl
push
jl
lds
ficoms
into
mov
in
hlt
mov
call
dec
clc
add
push
cmp
pop
je
out
test
outsb
jno
dec
in
icebp
inc
test
cmp
fcoms
call
pop
icebp
loope
nop
arpl
jp
cs
add
inc
and
jle
and
aas
arpl
push
subb
jg
cmpsb
movsl
enter
outsb
repnz
cmp
gs
add
pop
push
xchg
clc
jmp
pop
loopne
scas
adc
push
inc
inc
jle
mov
xor
int3
fwait
xlat
loopne
mov
ljmp
das
int3
ret
movsb
mov
in
sti
push
outsb
push
in
jecxz
pop
dec
out
push
and
dec
outsl
in
movl
scas
dec
sbb
add
aam
test
test
outsb
scas
xchg
inc
jecxz
call
arpl
jns
out
stos
scas
out
sub
cmc
es
sbb
mov
shlb
fdivs
in
popa
pushf
sub
jle
push
imul
mov
lcall
scas
outsl
out
xchg
in
insb
jnp
imul
pushf
and
nop
dec
ljmp
shlb
out
dec
sbb
test
xchg
sbbb
andb
jle
incb
out
push
stc
in
fisubl
cwtl
xchg
rolb
jns
notl
jno
mov
enter
insb
inc
lds
outsb
out
jge
pop
in
and
jbe
insl
out
test
pop
jnp
in
sbb
mov
sub
sub
sti
stos
out
push
cmp
mov
sbb
jl
mov
aad
lcall
repnz
mov
lcall
inc
mov
jg
inc
nop
int
lret
addr16
pop
addr16
hlt
pop
outsl
mov
and
adc
xor
popf
push
in
xor
inc
iret
aaa
loop
pandn
sbb
ret
cmp
decl
and
jg
in
ja
push
push
imul
in
mov
call
test
shll
nop
push
dec
lock
arpl
andb
jle
pop
pop
cs
sub
enter
jmp
jle
pop
jg
inc
jmp
jmp
dec
iret
xchg
pop
mov
out
rcr
xor
enter
or
cmp
fptan
andb
jle
jg
out
loope
xor
jg
and
call
imulb
mov
dec
test
xacquire
mov
popa
shlb
adc
sbb
test
sbb
scas
mulb
lock
lock
sbb
daa
les
out
scas
jmp
add
icebp
mov
mov
inc
jge
sbb
xor
jno
leave
adc
inc
add
sbb
movsl
sarb
jle
push
in
push
je
addr16
imul
pop
outsl
and
push
arpl
add
out
out
mov
xor
scas
sub
pop
aaa
dec
iret
repz
test
and
pop
outsb
in
and
data16
mov
add
push
mov
scas
mov
lahf
or
frstor
mov
aad
into
dec
pop
jno
outsl
mov
pop
call
xor
mov
pop
call
inc
rep
in
popa
test
aam
jne
popa
pushf
int3
popa
inc
enter
movsb
inc
popa
jmp
test
add
add
sbb
sub
das
in
jmp
fdivrl
mov
lret
dec
sub
jns
sbb
jge
sub
ret
mov
test
out
push
lret
scas
out
mov
inc
mov
lds
mov
pop
jp
std
mov
imul
pop
and
push
jo
loope
sbb
aas
loope
mov
jg
outsl
jp
int3
adc
mov
stc
mov
outsl
xorl
std
xchg
fwait
int
cmp
sub
popf
dec
daa
xor
xor
in
jp
int
cmp
sub
sbb
or
sbb
mov
in
xchg
test
push
pop
push
add
and
popa
xchg
mov
xchg
adc
hlt
xchg
xchg
xchg
mov
push
xchg
je
adc
xor
aad
cmc
xchg
xchg
xchg
mov
push
xchg
jne
adc
xchg
notb
push
xchg
jbe
push
xchg
jno
ss
xlat
xchg
notl
mov
push
xchg
push
xchg
ja
arpl
push
jbe
dec
repz
jmp
cmp
lock
jp
cld
call
pop
hlt
pop
stc
pop
dec
ljmp
jns
outsl
mov
in
push
jecxz
repz
outsb
pop
in
aaa
dec
cld
sbb
popf
pop
jle
insb
mov
dec
dec
jl
pop
fstl
pop
nop
jno
dec
js
outsb
in
cmp
testl
data16
outsl
fs
jae
ja
idivl
jne
cli
inc
cmp
pop
inc
jbe
aam
in
jbe
pop
out
pop
loope
dec
stc
jg
jge
out
jl
ja
sbb
sti
cmpsl
pop
jb
mov
dec
pop
inc
mov
jle
jp
mov
adc
lods
mov
mov
aad
mov
or
mov
int3
fabs
shlb
rclb
adc
inc
sti
jne
add
or
stc
adc
movsb
inc
das
lock
jl
and
jae
setl
sub
pop
data16
enter
lock
pusha
dec
out
xor
or
out
mov
xchg
add
ss
stos
sahf
gs
insl
inc
sub
or
jmp
cmp
clc
jmp
ljmp
xchg
push
int
jb
or
repz
mov
cld
js
fsubrs
clc
sbb
nop
mov
or
adc
nop
xor
addr16
add
and
idivb
outsl
sub
andl
cmp
mov
data16
je
je
aas
inc
cmpsl
xchg
mov
mov
scas
fdivrp
les
scas
lret
cmp
or
cmpsl
mov
xchg
or
movsl
call
lcall
adc
and
sbb
data16
leave
xchg
test
mov
outsb
mov
gs
les
ljmp
mov
outsb
fisttpl
imul
inc
push
leave
mov
jns
in
cli
adc
cli
in
cld
fdivrl
dec
xchg
movsb
inc
cmp
inc
icebp
add
sub
jo
rorl
pusha
mov
fs
mov
stos
mov
out
jns
push
outsb
inc
movsl
scas
mov
lock
in
ror
jecxz
dec
jno
add
rol
in
in
jp
daa
mov
lock
jno
sbb
and
icebp
sbb
dec
inc
cs
dec
es
sub
std
aad
imul
sub
shlb
fdivs
sbb
mov
jmp
or
mov
loopne
nop
dec
sahf
lods
ror
cmpsl
stos
ja
iret
push
mov
or
sbb
movsl
inc
inc
test
imul
add
popa
push
dec
push
lods
push
lods
push
lea
in
imul
or
or
bound
push
test
das
or
or
or
movsb
insl
nop
std
and
repz
sbb
cwtl
xchg
mov
xchg
sbb
xor
cltd
sahf
mov
push
bound
xor
sbb
cmp
fidivl
cli
int3
in
add
iret
cmc
dec
enter
dec
call
scas
jne
icebp
call
jg
mov
jns
repz
cmpb
inc
dec
ljmp
scas
imull
iret
adc
dec
sti
scas
das
movsb
out
test
jmp
insb
outsb
jb
in
pop
push
enter
outsl
call
or
insb
push
pop
dec
call
scas
fs
jns
lea
call
xchg
pusha
jle
dec
push
sbbb
xlat
dec
in
xchg
lods
dec
jecxz
loop
pop
add
repnz
jg
mov
mov
les
je
in
mov
xchg
ja
push
iret
out
inc
pop
dec
addr16
cli
ljmp
shrl
insb
imul
mov
xor
popa
add
dec
outsl
lods
fdiv
hlt
addr16
out
call
jl
out
jno
je
xchg
jp
repz
adc
dec
jb
dec
out
dec
icebp
nop
imul
dec
negl
dec
jae
cld
dec
jle
xchg
test
gs
outsb
and
dec
repz
jp
pop
cmc
mov
xchg
jge
xchg
cld
jno
push
mov
xchg
mov
push
and
mov
out
js
bound
add
mov
into
push
push
gs
stc
pushf
inc
mov
push
push
arpl
fnsave
loop
lock
dec
enter
cltd
push
lock
in
imul
insb
into
bswap
fimull
add
insb
jbe
or
add
test
testl
push
in
outsb
je
enter
dec
dec
ja
dec
mov
outsl
and
dec
insb
gs
xchg
or
jp
nop
call
clc
clc
lret
ljmp
push
mov
jle
mov
jne
out
jmp
jle
loope
popa
inc
pop
arpl
cmc
push
arpl
mov
rcll
jg
insl
inc
out
mov
in
add
dec
cmc
or
aad
out
inc
jge
cmpsb
jle
mov
into
arpl
daa
in
pusha
mov
push
insl
lds
jecxz
in
addr16
lods
div
scas
xchg
ja
jecxz
dec
cli
lods
sti
jl
jg
imul
test
cmp
scas
test
push
loopne
mov
push
stc
cli
dec
pop
int3
insl
nop
js
cmpl
sub
lock
outsl
nopl
test
test
enter
outsl
call
enter
add
jb
arpl
inc
dec
push
out
or
inc
sbb
imul
mov
mov
and
xchg
add
test
outsl
rol
das
movl
add
fs
scas
dec
sbb
lahf
fadd
arpl
gs
xchg
sbbb
or
inc
imul
insb
imul
addr16
dec
jg
movsl
stc
mov
call
mov
enter
clc
nop
fsubr
mov
adc
cwtl
pop
iret
out
lods
mov
out
arpl
dec
insb
mov
movsl
xchg
xchg
pop
in
xor
outsb
icebp
scas
sbb
mov
pop
cs
mov
mulb
pop
lods
call
scas
add
pop
addr16
fwait
lods
jns
push
mov
add
cld
popf
data16
jp
popa
fcmovu
lock
mov
in
outsl
hlt
jg
jmp
decl
outsl
testl
cmpb
jl
andb
lcall
outsl
inc
sbb
add
or
stc
enter
xlat
add
out
in
outsb
mov
lcall
testl
scas
dec
adc
dec
in
test
fimull
mov
lock
xchg
jne
add
jg
ffreep
icebp
pop
addr16
sbb
sub
addr16
decl
mov
insb
sub
jb
cs
cmp
std
loop
stos
mov
add
call
imul
stos
arpl
data16
imul
nop
out
push
das
outsb
add
pop
lods
mov
shrb
adcb
cld
lahf
insb
pop
enter
inc
inc
pop
xchg
mov
out
testl
sub
dec
ret
repnz
jmp
and
mov
loopne
loop
add
movsb
int
sub
inc
xor
pop
push
inc
mov
pop
mov
xchg
mov
aam
loopne
xchg
sbb
sbb
jle
aaa
movsl
sbb
clc
es
maxps
dec
inc
cmpsb
mov
jle
and
mov
add
hlt
or
mov
inc
pop
test
sub
imul
fildl
jmp
mov
sub
ljmp
inc
ret
jle
mov
or
es
mov
cs
jle
lcall
enter
sti
rolb
mov
pop
jecxz
inc
jg
das
sbb
out
es
xor
out
bound
outsl
inc
loop
and
cmp
inc
mov
xor
out
inc
inc
mov
pushf
negb
sub
dec
jge
push
mov
stc
xchg
leave
sbb
jno
jecxz
in
das
cmp
pop
outsb
mov
inc
jae
repnz
in
jp
outsb
cld
test
xor
pusha
in
inc
icebp
adcl
je
pop
adc
push
sub
outsb
call
push
jbe
xchg
in
add
in
jb
repz
call
arpl
filds
jg
or
jae
push
int3
scas
lret
sub
dec
fwait
outsl
xlat
lds
outsl
rorb
test
ret
mov
jae
or
inc
dec
jno
lret
mov
dec
jmp
xchg
divb
sbb
fnstcw
mov
sub
test
jne
cmp
repz
into
jae
or
xchg
out
xchg
lods
dec
outsb
int3
jb
xchg
out
jne
incb
outsl
pop
scas
hlt
out
fisubrs
sub
adc
push
mov
push
jns
aaa
pop
nop
outsl
or
out
aam
or
jne
pop
sti
dec
rcll
outsl
loope
fwait
mov
dec
sbb
aaa
scas
addr16
pushf
cltd
data16
mov
pop
cwtl
test
pushf
in
xor
dec
shl
sbb
mov
icebp
cmc
dec
ljmp
ficoml
adc
jg
cs
ss
les
pop
adc
stos
sub
jmp
sbb
lret
test
adc
fwait
push
dec
and
fisubs
mov
daa
xchg
push
mov
ja
pop
insb
subb
addr16
out
daa
push
ret
xor
xchg
leave
loope
pop
lods
dec
rcrb
sub
negl
dec
xchg
inc
mov
and
ret
add
push
test
rcrb
jle
movsl
pushf
les
jmp
out
outsl
sub
out
punpckhwd
andb
imul
imul
imul
jno
mov
fimuls
jne
dec
add
negl
sti
push
inc
mull
mov
inc
rcrl
dec
push
adc
jmp
mov
sbbb
xor
in
cmp
cli
sbb
or
inc
pop
nop
leave
and
add
cs
loop
lret
lea
inc
mov
nop
push
sub
inc
xchg
addr16
add
add
jae
popl
pop
call
adc
cwtl
popa
or
leave
imul
outsb
mov
jp
pushfw
pop
dec
adcb
pop
jmp
mov
cmp
loop
scas
and
int
clc
jno
test
pop
mov
out
or
push
jp
dec
push
inc
push
pop
out
outsb
imul
outsl
test
add
mov
loop
push
lock
jo
je
and
jns
out
lock
xchg
mov
out
cld
in
fldl
fistpl
test
mov
outsb
cwtl
dec
push
fsubs
popa
pop
mov
dec
fistl
sub
lret
in
mov
arpl
mov
out
mov
testl
push
loope
fiaddl
lcall
shll
call
mov
jno
imul
inc
mov
popf
pop
jb
push
jmp
cmp
and
les
inc
sub
dec
std
mov
push
add
fisubl
adc
jl
lods
dec
out
mov
mov
fdecstp
push
cld
out
sub
outsl
addr16
mov
inc
push
out
sbb
mov
sub
iret
out
mov
mov
jo
insb
mov
test
and
fisubl
inc
push
rep
rolb
dec
stos
sahf
xor
xchg
cmpl
dec
js
loopne
push
out
pop
jns
mov
aam
or
sub
xchg
ret
push
inc
dec
ljmp
lods
mov
xchg
and
jle
jecxz
es
std
mov
dec
in
iret
addr16
subl
cli
and
into
push
or
call
pop
pop
in
mov
sbb
sahf
rcl
imul
add
fidivrl
pushf
gs
mov
movups
cli
mov
mov
push
xchg
loope
add
out
xor
lahf
sub
dec
pop
push
adc
xlat
xor
testl
addb
mov
ja
jne
loopne
outsb
mov
pop
lret
inc
cmc
mov
sahf
jns
les
popa
test
mov
xchg
mov
lock
lock
mov
ret
rcrb
add
outsb
das
out
or
fdivrs
bound
pop
add
bound
xchg
dec
add
lock
mov
pop
cmpsl
xor
nop
into
loope
mov
push
hlt
imul
and
adc
cmpsb
mov
ret
ss
pop
les
repz
cmp
imulb
cld
rorb
in
mov
out
mov
enter
aam
std
jp
jno
sub
lahf
xchg
arpl
data16
jecxz
daa
call
sbb
imul
lret
hlt
xchg
stos
ljmp
loopne
outsb
or
and
int3
xor
rclb
jno
add
movsb
notl
jmp
arpl
dec
ret
dec
push
in
jp
jno
ret
jmp
sub
dec
and
xor
inc
mov
jg
adc
adc
pop
dec
cld
out
jp
lods
mov
add
dec
xlat
subb
fildll
dec
idiv
cli
mov
sbb
int3
lods
pop
in
lock
sti
daa
fiaddl
xchg
pop
cld
fsubr
int3
aas
pushf
adc
sbb
dec
out
repz
mov
jle
push
jb
rcll
rorb
jae
int3
leave
fs
xor
push
jo
dec
jae
xchg
je,pn
addr16
scas
and
jmp
sar
and
pop
in
aaa
mov
imul
stc
mov
bound
adc
xchg
icebp
xor
xchg
jb
sub
dec
scas
cmpb
inc
aas
outsb
sbb
scas
dec
jae
lcall
mov
out
test
test
add
cmp
lds
sub
data16
mov
push
call
adc
in
cmp
imulb
sub
ret
ljmp
out
iret
repz
insl
jae
xor
pop
xchg
scas
lahf
mov
iret
pop
int
into
in
sub
sbb
mov
in
filds
mov
fidivl
icebp
mov
mov
ret
pop
int
jmp
dec
mov
sub
push
in
sub
push
cmp
inc
mov
adc
xchg
lcall
dec
jns
cwtl
jmp
dec
aam
das
loopne
lock
and
in
out
ljmp
or
pusha
inc
mov
pop
jg
push
dec
cmpsb
arpl
jp
in
sbb
mov
add
cmpsl
add
jg
jns
push
out
xchg
repnz
daa
dec
inc
call
mov
jmp
sub
outsb
mov
test
dec
imul
lods
or
out
or
xchg
out
mov
and
loope
push
cmpsb
mov
lock
sub
inc
negb
push
dec
movsb
out
xchg
int
push
push
inc
idivl
push
or
pop
das
mov
iret
outsb
mov
dec
mov
sub
xchg
xlat
int3
mov
push
dec
mov
xor
insl
gs
mov
mov
and
decl
movsl
lret
xor
lods
mov
and
les
test
sbb
fisubs
dec
mov
xor
sarl
add
call
insl
loop
jg
push
cltd
push
stc
test
mov
test
loop
lcall
jae
xchg
lods
jbe
mov
pop
jno
iret
jg
mov
or
fcoms
push
lock
add
push
inc
clc
jno
mov
add
dec
pop
addr16
mov
jmp
aaa
shl
lea
out
scas
pop
lock
movsl
fs
pop
mov
pop
ret
sub
jg
mov
dec
pop
jae
lods
cmpsb
dec
out
push
in
stos
loop
inc
jl
stos
pusha
mov
test
pop
pusha
lea
pushf
mov
dec
ret
shrb
add
mov
lods
lods
mov
inc
mov
push
loop
jecxz
sub
xchg
test
mov
add
sub
inc
or
lock
outsb
loopne
sub
jns
dec
in
mov
mov
add
sahf
xchg
shl
adc
outsl
out
out
push
out
push
insl
mov
sub
in
pusha
mov
inc
lods
mov
jb
das
scas
mov
cmp
insb
pop
dec
lahf
xor
mov
popf
ret
enter
in
stos
mov
std
dec
xchg
push
cld
xor
pushf
cmpsb
or
lods
xchg
dec
push
sbb
aas
jp
sub
cmpxchg
int
mov
insl
pop
mov
xlat
dec
loopne
dec
inc
fsubrl
cmpsl
xchg
cmpsb
fwait
xchg
mov
outsl
js
xchg
in
inc
pop
iret
fwait
jns
test
cmpsl
out
fbstp
dec
out
jne
mov
shl
lock
out
int3
pop
mov
or
lods
aad
or
dec
lahf
int
xchg
pop
hlt
arpl
or
insb
xlat
stos
and
rorl
scas
subl
into
ljmp
popa
in
sbb
push
int3
jbe
cltd
mov
lods
pop
lret
fsubl
dec
andb
lock
test
sahf
xchg
mov
jl
outsb
jae
mov
sbbl
dec
in
leave
mov
cmpl
mov
test
out
popa
xchg
mov
and
insb
push
mov
jmp
xchg
addr16
dec
out
xchg
hlt
jbe
xor
aad
movsl
insb
popf
xchg
outsl
fmull
jo
mov
mov
push
inc
outsb
mov
leave
adc
inc
imul
popa
daa
push
das
jmp
push
outsb
add
jns
mov
outsb
pop
cmp
sub
cvtps2pi
inc
outsl
pushf
in
mov
shrb
jl
and
xchg
xorb
push
inc
movsl
sbb
hlt
hlt
je
icebp
pop
ss
leave
imul
inc
fstl
jno
push
push
je
xchg
test
cmc
int3
fstp
les
adc
push
and
mov
or
lahf
push
jnp
cld
or
mov
push
ljmp
lock
mov
stc
mov
daa
lahf
out
xor
imul
stc
mov
or
jmp
iret
in
push
sub
push
push
mov
mov
jle
xchg
sub
stos
and
out
aas
shl
out
repnz
mov
movsl
lea
sub
sub
sbb
sub
pop
stos
repz
and
or
add
push
pop
xchg
lds
sub
out
rorl
mov
int3
jae
lahf
shr
dec
sub
dec
dec
imul
jp
in
pop
mov
arpl
enter
std
jae
cmpsb
bound
imul
cs
add
mov
lcall
mov
lods
subb
cmp
dec
imul
push
cmp
and
jmp
repnz
xchg
jge
xchg
aaa
in
int3
out
aas
mov
mov
rolb
or
pop
lods
outsb
lock
int
arpl
and
aaa
push
mov
in
jg
pop
xlat
movsb
and
mov
push
push
mov
xchg
dec
repz
int3
mov
sub
cld
xchg
jnp
shlb
and
mov
pop
in
out
insl
mov
xchg
dec
pop
mov
out
outsb
mov
jne
dec
sti
roll
and
mov
cmp
and
mov
test
cmpsb
lds
int3
add
es
repz
scas
js
xchg
fdecstp
or
jp
push
repz
jl
test
xchg
sub
out
push
inc
out
xor
jnp
mov
rolb
insb
mov
or
aas
jno
leave
arpl
jmp
jl
jp
cld
pop
jmp
xchg
inc
mov
out
in
xor
and
scas
outsl
mov
jmp
mov
shrb
arpl
pop
and
lock
sbb
cmp
xchg
cmp
mov
mov
jns
jle
cmpsb
xor
mov
imul
mov
dec
aad
inc
jg
arpl
jns
sbb
mov
dec
out
int
stos
stos
aas
out
dec
loop
sbb
adc
hlt
orb
lods
xchg
inc
fldt
arpl
mov
inc
pop
lret
push
hlt
xor
xchg
xor
mov
adc
aad
mov
inc
movsb
je
jns
lahf
jp
shl
shr
shlb
add
jae
movsl
scas
test
add
cld
push
aaa
mov
lds
mov
push
lahf
lock
add
out
gs
jae
mov
daa
fcmovb
or
cmp
sub
cmp
add
push
lods
ficoms
shrb
sbb
aaa
loope
inc
inc
xchg
aaa
sbb
jb
jecxz
push
in
sbb
lds
enter
fcom
jp
push
loope
sbb
mov
or
sub
inc
adc
pop
and
xchg
ljmp
leave
dec
xchg
xchg
call
push
nop
dec
loop
add
stc
xor
push
les
int3
xchg
imul
out
es
add
repnz
int
loope
stc
and
adc
mov
into
icebp
push
sub
js
cmp
test
dec
es
ljmp
or
xchg
jl
shlb
mov
mov
fucomip
xchg
and
dec
dec
jns
pop
aaa
iret
js
mov
shr
dec
adc
xchg
test
iret
iret
mov
jmp
test
in
sub
push
loopne
roll
cltd
outsl
lret
xchg
push
nop
lock
enter
aas
in
fs
pop
dec
add
test
jle
mov
sbb
mov
dec
lods
outsl
test
jecxz
data16
in
lods
and
add
in
or
aas
enter
xchg
test
mov
push
mov
inc
outsl
fs
repz
pop
sbb
gs
mov
inc
pop
insl
adc
addr16
sub
dec
pusha
xchg
sbbb
xchg
test
adc
lret
popa
or
ret
cmp
cmp
jmp
mov
in
add
cmp
xchg
fwait
xor
in
jp
outsb
cli
xchg
ljmp
and
outsl
punpckhwd
out
fiaddl
rcr
fildl
in
jg
scas
jb,pt
sti
fsubrs
scas
push
mov
xchg
push
and
pop
scas
leave
loopne
push
mov
dec
rorl
lods
cmpsb
loop
push
out
jg
es
shl
aas
sub
mov
negb
sbbl
push
push
cli
or
jns
clc
arpl
popa
lods
adc
in
mov
rolb
inc
and
insb
pop
lcall
shl
fcoml
flds
aad
dec
sub
lock
stos
sub
xchg
xchg
push
imul
fistps
in
repz
xor
test
in
inc
cmpsl
in
scas
enter
sub
pop
or
aad
hlt
lods
jg
test
push
loope
int3
inc
xchg
in
jno
lods
sbb
cli
dec
sbb
dec
cld
jne
je
xchg
lret
out
jle
lods
mov
stos
mov
jmp
dec
subb
mov
add
pop
add
insl
and
dec
jmp
sbb
movsl
mov
fildl
jmp
xor
xchg
pop
push
and
cmp
test
jl
mov
pop
inc
int
fld1
mov
test
insb
pop
sbb
pop
mov
inc
movsb
dec
decb
loope
enter
jae
xchg
pop
lods
loope
mov
xlat
cmpsb
in
imul
mov
test
mov
jmp
stos
dec
test
push
outsb
mov
and
cmpsb
add
xor
mov
imul
ja
in
push
out
push
rcl
fsubrs
push
xor
cld
lods
call
into
push
in
icebp
movsb
call
jae
jle
xor
out
scas
in
scas
test
xchg
mov
outsl
pop
jp
out
or
insl
mov
gs
inc
subl
add
dec
ret
call
bound
add
dec
movsl
ljmp
outsl
mov
jle
repnz
jb
insb
dec
mov
and
add
pop
gs
or
jle
cmpsl
call
insb
and
shrl
adc
fsubrp
jl
js
jg
inc
lahf
xchg
xor
mov
pop
int3
loop
in
push
insl
gs
cpuid
mov
imul
outsl
gs
inc
in
movsl
lock
add
das
and
push
mov
nop
daa
cmp
sub
push
imul
mov
ja
jae
xchg
adc
mov
pop
rcrl
shlb
outsl
ret
fnstsw
xor
mov
jns
jmp
aad
lds
cmpsb
cmpsb
push
sbb
cmpsb
dec
jmp
pop
jecxz
push
sti
fwait
lea
nop
shl
lea
jp
pop
outsl
in
jnp
flds
fimull
pop
sub
dec
sti
adc
outsl
mov
scas
cwtl
sbb
sbb
int3
loop
lds
cmp
loop
mov
or
jns
jno
fidivrs
jae
addr16
or
pusha
gs
fsubrs
add
push
in
pop
ja
fdivr
sbb
jb
adc
insl
std
add
jae
or
iret
add
into
dec
jg
movzbl
pop
lret
out
pop
imul
and
adc
add
out
jecxz
aas
sar
dec
test
cltd
in
loop
inc
mov
jge
stos
loop
dec
jg
int3
data16
jb
movsl
fyl2x
loop
mov
ret
sti
shrb
lea
out
pusha
test
pusha
mov
xor
in
jle
pop
insl
or
inc
jmp
push
pop
fucomi
sbb
cmpsl
add
insl
out
dec
pop
gs
loope
inc
cli
xorb
in
in
push
sub
adc
call
cli
rcl
adc
jge
mov
data16
mov
mov
jg
and
jmp
out
mov
push
repz
icebp
outsl
pop
jno
movsl
icebp
out
xchg
out
adc
sti
ds
adc
sbb
and
push
adc
dec
jp
or
int
pop
outsb
outsl
insl
push
loopne
mov
inc
lret
loopne
leave
jg
cmp
mov
jb
add
jecxz
jb
in
int
xor
xchg
add
shr
mov
dec
xchg
call
or
xchg
test
jb
jg
clc
add
es
dec
cmp
stos
ret
outsb
push
adc
ret
jmp
jno
mov
js
and
jg
sub
sub
jmp
sub
adcb
out
insb
outsl
addr16
push
call
mov
push
hlt
shrb
pusha
jbe
rorl
sbb
incb
outsl
cmp
das
add
dec
mov
mov
jmp
je
out
mov
add
pop
idivb
inc
outsb
out
mov
mov
inc
cs
pop
out
add
push
dec
jb
mov
pop
out
sub
and
aas
or
inc
xor
mov
add
data16
outsl
dec
push
dec
push
cmpsl
mov
out
xorb
sbb
dec
xor
sbb
or
inc
jl
jne
imul
aas
jle
mov
xor
lea
daa
addr16
jg
sub
sub
fldl
imul
mov
ljmp
aas
into
lret
lahf
and
jno
and
cmp
sbb
mov
aas
call
xchg
sub
push
insb
push
inc
stc
sti
out
pop
lret
mov
insl
dec
sub
addr16
insl
mov
out
lods
ret
pop
jge
mov
cmp
out
es
pop
mov
cmpb
mov
jno
in
divl
sub
jnp
data16
inc
cmpsb
jmp
mov
outsl
mov
xchg
adc
push
fcomi
pop
mov
ljmp
or
and
sub
dec
lds
cld
inc
in
mov
push
dec
test
sbb
test
pxor
out
pusha
addr16
es
sbb
fildll
mov
xchg
dec
cmp
outsl
inc
xchg
mov
shll
les
sub
inc
sub
xor
pop
jg
lods
add
stos
roll
mov
or
pop
insb
sbb
out
pop
pushf
cmp
out
xchg
cwtl
push
ja
fildl
adc
in
push
addl
pop
or
fnstcw
jg
inc
xor
shlb
inc
icebp
sahf
sbb
aaa
addb
fdivrl
mov
inc
ljmp
xchg
push
pop
jp
lcall
mov
das
jns
lock
scas
outsl
or
scas
out
out
adc
negb
jg
test
seto
adc
lds
enter
pop
mov
pop
sbb
pop
std
mov
xchg
ficomps
pushf
jbe
aad
in
nop
idivl
sti
lahf
pop
out
rol
loope
call
adc
aad
xchg
adc
adc
xor
sbb
push
mov
fwait
outsl
cmc
dec
call
pop
push
cld
push
push
jae
notb
xchg
insb
nop
jp
mov
jp
daa
jb
das
scas
ret
daa
lock
lret
cmp
rolb
inc
inc
cmc
addr16
nop
lock
pop
setno
sbb
push
pop
jmp
mov
jg
dec
sub
mov
mov
fcoml
push
mov
adc
in
dec
imul
lcall
movsl
ret
out
pop
cli
jle
and
mov
mov
jns
jo
jbe
dec
pop
shll
mov
cmpl
cwtl
xor
add
jno
sbb
dec
scas
push
inc
mov
call
or
push
aad
ss
mov
add
xchg
mov
outsl
mov
xchg
das
iret
int
mov
data16
push
pushw
mov
lea
aas
lods
ss
xchg
nop
shlb
xor
insb
call
cmp
xchg
arpl
or
sub
imul
pop
enter
nop
fidivrl
mov
scas
push
outsl
xchg
lea
lret
push
js
out
sbb
xor
sahf
clc
pop
shrl
dec
cmpsb
outsb
mov
std
push
xor
mov
in
outsb
shll
and
mov
outsb
sbb
sbb
add
shl
jnp
mov
test
pop
hlt
mov
fisttpll
lea
int
mov
lock
sar
loopne
outsb
clc
testb
ljmp
out
inc
fsubp
insl
ja
ds
jl
dec
jg
jge
push
test
pop
out
decl
rcrb
and
loop
jg
frstor
es
and
adc
jmp
add
sahf
call
pop
loop
jmp
dec
dec
jae
call
dec
push
xor
retw
lock
ljmp
ljmp
popf
fisubrl
cmpl
xchg
pop
inc
pop
cmp
enter
gs
mov
jae
xchg
push
sbb
dec
lcall
outsb
mov
aaa
sub
hlt
pushf
and
int3
cwtl
adc
push
xchg
sbb
in
xor
inc
iret
jnp
in
out
in
lods
orl
scas
jnp
lods
faddp
jge
dec
pop
cmpsb
sahf
outsb
mov
ja
imul
sti
jbe
mov
mov
xlat
mov
pop
das
jg
cmp
cmp
addr16
sub
jl
aad
xor
shlb
cmp
out
testb
push
outsb
add
add
inc
pop
lahf
xor
dec
sub
jmp
out
fs
es
lret
addr16
loope
scas
aas
outsb
mov
push
push
roll
das
xlat
jno
add
dec
stc
lret
inc
mov
xorl
and
inc
adcl
scas
out
filds
inc
mov
in
lret
xlat
mov
fcmovne
xchg
stc
xor
fwait
xchg
and
and
fadd
xor
push
jmp
cmp
or
pusha
imul
fisubl
jmp
jp
js
ds
outsb
imul
repz
mov
sbbb
cmp
pop
jecxz
mov
jno
in
xor
daa
arpl
jmp
popa
mov
cmp
adc
xchg
sahf
ds
loope
inc
inc
loop
cmovne
mov
orl
mov
pop
fildll
aaa
fnstsw
loopne
lods
out
jae
int3
in
mov
mov
hlt
mov
bound
out
movsl
movsb
iret
dec
sub
jecxz
jge
adc
inc
inc
dec
dec
xor
fs
in
sti
mov
xor
daa
and
aad
mov
clc
lret
xor
jno
addr16
pop
mov
addr16
jae
or
jg
pop
dec
or
sbb
adcb
sub
outsb
ss
and
jecxz
cmpb
push
int
and
fsubrl
push
mov
add
dec
xor
cmc
aaa
loop
sub
adc
icebp
scas
mov
inc
mov
add
std
and
push
loope
ret
mov
lock
add
push
outsl
cmpsl
sbb
mov
loop
dec
sub
rcrb
call
icebp
mov
lds
dec
jae
jge
mov
pop
shrl
cli
xor
jecxz
insl
call
pop
adc
int
popf
addr16
movsb
lock
adc
inc
jge
bnd
pop
pop
int3
outsl
int
cmpsl
in
ret
or
icebp
sbb
pop
mov
jns
rorl
dec
shr
dec
xchg
imul
imul
or
xor
stos
icebp
out
sahf
jno
fldl
xchg
sub
test
int3
sbb
xchg
lods
notb
mov
mov
jg
xchg
mov
scas
fidivs
fadds
dec
inc
lock
incl
ja
adc
xorl
in
add
scas
ret
mov
movsl
mov
dec
loop
mov
and
adc
andl
push
dec
loopne
stc
dec
imul
add
sbb
ljmp
jg
mov
dec
mov
or
lock
lock
sub
push
lock
mov
fldenv
frstor
scas
xchg
mov
mov
ss
push
testb
clc
ficoml
and
inc
lods
jo
push
add
repnz
fnstcw
add
add
inc
aaa
xchg
les
lret
lods
clc
mov
fsubrl
movsb
xor
dec
adcl
call
dec
and
cmpsb
mov
stos
lds
xchg
movb
mov
sbb
shlb
dec
scas
test
adc
stos
xchg
cmp
push
xchg
retw
push
call
cmp
int
xchg
xor
aaa
loope
fcoml
mov
lahf
into
adc
and
add
ret
insl
ds
jbe
outsl
jns
es
int3
mov
in
dec
popf
and
clc
insb
dec
mov
std
sbb
or
adc
pop
stc
test
insb
or
enter
xchg
std
jmp
call
mov
fcmovbe
dec
insb
dec
and
fsubp
lea
pop
out
push
push
sbb
sub
and
jbe
xchg
sub
in
mov
outsb
adc
scas
cmp
loopne
outsl
pop
mov
fmul
movsl
add
repz
clc
rcll
inc
decl
and
mov
or
shrb
lock
out
jns
fisubs
push
mov
jno
dec
mov
or
push
insb
xor
loop
loop
popa
out
add
roll
repnz
fbstp
or
jge
out
jmp
or
call
jae
test
aaa
idiv
xchg
mov
inc
sbb
push
int
pop
out
jle
push
lods
jbe
in
pop
imul
cmp
sub
shll
cltd
mov
jns
dec
dec
ret
mov
jb
pushf
scas
mov
loope
outsb
xchg
cli
xor
cmc
xchg
out
xor
sub
in
scas
popf
pop
jecxz
clc
imul
in
setge
sub
push
fnsave
xor
bound
cmpsb
and
imulb
sub
xor
and
leave
xchg
out
filds
jmp
push
inc
in
pop
xor
lods
stc
sub
lahf
inc
loop
add
loope
dec
mov
add
pop
xchg
fwait
imul
jae
icebp
and
xchg
sbb
in
scas
push
loopne
out
push
dec
outsl
mov
pop
mov
lock
mov
outsb
adc
test
aaa
in
enter
cltd
test
out
add
inc
dec
xor
mov
imul
outsb
xchg
add
std
js
mov
sbb
xor
enter
sub
adc
outsb
ffreep
repnz
push
pusha
out
xchg
jmp
jg
outsl
inc
cmp
sbb
dec
nop
mov
mov
cmpsl
xchg
in
or
movsb
inc
loopne
push
sub
rcrb
lcall
aad
cmpsb
iret
xchg
and
shr
in
mov
mov
cmpsl
fbstp
jb
addr16
jg
sub
add
cs
inc
je
cwtl
nop
and
out
dec
int
push
incb
arpl
and
jno
push
stos
icebp
aaa
clc
cltd
jl
and
hlt
fwait
icebp
mov
pop
jb
inc
movsl
mov
je
mov
shl
cmp
nop
inc
sub
std
jb
sub
mov
or
and
jge
fisubl
int
enter
out
insl
repz
and
ss
mov
lods
sbb
dec
mov
cmp
or
mov
mov
int
jecxz
rcrb
xchg
add
out
mov
movsl
mov
outsl
movsl
fisubrs
js
mov
jg
imul
mov
mov
outsl
cwtl
ret
imul
loope
cli
int3
mov
insl
or
add
jl
rcrb
cli
xchg
movsbl
mov
push
fdivrl
sahf
xor
mov
mov
scas
out
push
cmp
enter
pusha
ret
dec
xchg
dec
xchg
enter
fnstenv
lret
aas
aad
inc
inc
jle
loope
xchg
popf
test
enter
ret
jg
mov
insb
cltd
fstl
imul
lahf
mov
popl
jle
out
mov
fisubrl
jae
movsl
pop
jge
cld
sbb
out
xchg
test
cltd
or
mov
insb
out
je
jae
jecxz
dec
mov
cmpsb
mov
and
mov
push
inc
sub
sbb
cmp
ret
cmc
push
arpl
hlt
imul
xchg
xor
lock
lcall
xchg
outsb
lcall
pop
add
add
push
aaa
cmp
call
jle
cmpsl
mov
rcrb
mov
cwtl
fildl
lds
lods
jae
push
mov
dec
jae
jecxz
jle
pop
popa
xor
jo
outsl
jg
out
mov
movl
popa
fs
cmp
lret
inc
jg
stc
addl
je
add
arpl
dec
push
xchg
add
ja
ja
add
push
es
je
les
jno
sbb
add
or
jge
xor
in
das
in
sahf
data16
dec
bound
cmp
in
pop
cmp
mov
jg
out
mov
inc
outsb
xchg
jb
dec
icebp
insb
les
inc
inc
and
sbb
xchg
push
mov
dec
enter
pop
xchg
and
pop
add
xchg
jae
mov
popf
lock
sbb
imul
mov
decb
pop
inc
pop
out
xchg
loop
or
loope
pop
scas
out
mov
mov
mov
sub
sbbb
sub
out
push
out
jmp
or
dec
push
mov
push
xlat
out
sbb
cld
scas
nop
inc
fwait
dec
push
push
inc
pop
pop
add
cmp
adcl
mov
mov
lea
out
imul
test
repnz
jno
xchg
jae
repz
mov
lods
cld
mov
nop
fnstsw
gs
or
cmp
stos
pusha
inc
and
shrb
outsb
das
ficoms
outsb
and
loop
bound
mov
cmc
cmpsb
out
dec
loopne
and
mov
div
jmp
outsb
sub
mulb
xchg
sarl
pop
sub
push
iret
mov
out
int
inc
dec
jp
outsb
ja
fimull
bound
xchg
lret
cmpl
scas
mov
out
xor
sar
push
sarb
out
jg
stc
cwtl
inc
shlb
ja
lock
cs
shrl
pmuludq
fidivs
imul
out
sbb
cli
stos
jno
cmp
fildll
add
pop
adc
enter
inc
pop
out
out
test
pop
mov
mov
cmp
std
push
mov
cs
mov
xor
cli
mov
push
loop
dec
lock
dec
cmpsb
es
xchg
scas
adc
fsubr
pop
mov
int
out
push
test
out
insb
in
or
test
popf
inc
and
cmp
push
pop
loop
ljmp
rcrb
sub
fsubrs
addb
fs
imul
push
loopne
inc
mov
jg
aaa
push
dec
shl
xor
scas
flds
mov
push
jae
push
xor
aas
fisttpl
shlb
pop
pop
mov
ret
lret
nop
mov
scas
stos
cli
mov
push
pop
inc
decl
pop
add
int
das
or
xchg
dec
rcl
das
xor
push
popf
in
or
push
dec
or
mov
lock
das
push
ds
jge
das
es
xchg
xor
xchg
aad
aad
loope
mov
cmp
sbb
lods
inc
aaa
push
sub
mov
loopne
mov
scas
jae
inc
int3
cmp
outsl
ds
push
jno
repnz
xor
mov
mov
leave
rcll
loopne
jge
jae
and
mov
and
inc
repz
push
adc
loop
push
das
stos
xchg
add
cmpsl
in
mov
sbb
frstor
xlat
pop
inc
xchg
sub
mov
xchg
mov
xor
data16
js
cs
callw
lods
or
lds
inc
dec
jge
popf
into
pop
gs
mov
dec
mov
xchg
jno
fisubs
add
jg
and
mov
imul
insb
ljmp
ja
xchg
cli
or
js
jno
test
add
ss
or
dec
jg
stos
mov
insb
push
pop
fisttps
icebp
ja
inc
lahf
ja
out
inc
mov
or
lods
mov
fnstenv
cmc
xchg
adc
gs
mov
cmpsl
jg
pop
jb
mov
ds
lret
in
mov
int3
lds
repnz
cs
xchg
push
and
insl
xchg
stos
push
aam
inc
stos
loop
stos
shrb
js,pt
jmp
mov
adc
test
push
mov
dec
sub
xchg
adc
xor
imul
mov
in
cmpsb
out
sbb
stos
xor
inc
pop
dec
and
addr16
cltd
stos
dec
scas
out
xor
sbb
push
test
fisttpll
or
scas
mov
fimull
cmp
jg
push
in
sbb
xor
or
ret
cmp
imul
sub
mov
in
outsl
clc
mov
jp
dec
mov
scas
pop
jae
inc
inc
cld
ljmp
fwait
dec
insb
mov
push
sbb
mov
stc
jg,pn
outsl
xchg
pop
sarb
outsl
add
fmull
data16
rolb
xlat
push
fldenv
jmp
movsl
mov
sub
pop
les
insl
icebp
outsl
mov
lahf
mov
fisttps
inc
scas
mov
test
mov
in
jp
iret
cmp
or
mov
jbe
sbb
ljmp
mov
pop
pop
push
bound
imul
fldt
daa
rorl
imul
mov
jg
data16
jns
test
mov
inc
inc
pop
cmpsb
mov
mov
pushf
mov
fcompp
mov
lcall
stos
fsubp
fimuls
fstl
call
add
int3
addr16
outsl
inc
pop
dec
xchg
or
pop
mov
outsl
dec
in
xchg
mov
cmc
mov
dec
je
stc
movsl
inc
lods
dec
push
mov
dec
sub
aas
std
jns
jae
sbb
add
cmp
mov
out
mov
inc
aas
rol
xchg
repz
outsb
rcr
inc
inc
loop
lock
mov
xchg
ficompl
jge
xchg
pusha
sar
jbe
movsl
jae
jecxz
sbb
jb
xlat
sub
insb
jg
jle
shl
in
mov
fdivs
push
int3
insl
into
loopne,pn
pop
stos
dec
fildl
push
in
pop
outsb
gs
add
andb
mov
add
pop
add
xlat
es
mov
xor
sub
rorb
pop
jmp
xor
cwtl
imul
jp
arpl
popa
jns
xor
mov
push
iret
jno
addr16
lock
scas
imul
or
in
outsl
cld
sub
lods
outsb
mov
sub
daa
jge
loop
dec
inc
or
mov
dec
pop
push
mov
iret
out
out
fucom
cld
test
xor
mov
xchg
mov
das
adc
mov
test
mov
imul
movsl
in
call
fldt
lock
cmpsb
outsl
xlat
insb
adc
sbb
ja
jecxz
mov
cmpsl
test
into
mov
scas
mov
pop
bound
aaa
sbb
mov
fcompl
push
insb
add
xchg
mov
push
pushf
rolb
int
add
lret
and
jl
lret
cmpsl
push
xchg
out
je
jae
ja
dec
mov
mov
cmpxchg
and
push
xor
lcall
and
test
inc
add
outsb
adc
ja
call
and
sbb
jle
inc
enter
and
ljmp
jle
mov
cmpsb
mov
push
insl
dec
out
outsb
movsl
sub
out
mov
xor
in
aad
pop
xchg
mov
mov
iret
jecxz
pop
dec
xor
mov
dec
push
shr
adc
dec
stos
outsl
mov
dec
cmc
out
out
shll
es
push
fnstenv
ljmp
ja
icebp
fbld
callw
mov
repnz
mov
stos
jno
lret
js
jmp
fbld
out
mov
mov
outsb
shrb
je
xchg
nop
mov
psubusw
sub
xchg
fcoml
clc
sbb
or
ljmp
in
in
lret
ss
sbb
rorb
jae
cld
lahf
xchg
push
add
mov
sub
inc
add
or
js
inc
inc
xchg
pop
cmpsb
insb
test
push
cmp
add
rorl
clc
cmp
dec
dec
fsubl
pusha
xchg
mov
jl
mov
or
add
sbb
mov
scas
pop
pop
add
in
jne
pushw
push
stos
mov
insl
in
dec
mov
shll
loope
js
xchg
pusha
ljmp
iret
mov
outsl
les
xchg
push
int3
dec
outsl
pop
repnz
lea
scas
call
clc
mov
addr16
mov
call
rorb
fidivs
pusha
ret
pop
adc
lret
shl
mov
jmp
icebp
imul
call
push
push
xlat
mov
mov
pop
push
jno
insl
subb
adc
in
mov
and
xchg
outsl
cmpsb
cld
dec
data16
popa
jo
xchg
faddl
sahf
lea
outsb
lods
inc
cmp
xor
into
imul
into
je
andb
stc
mov
jg
ljmp
and
mov
aaa
jo
lahf
xchg
int
pushf
inc
ret
fisttpl
pop
dec
cmp
testl
aad
insb
sub
insl
je
subb
ret
inc
ja
inc
jge
add
mov
out
shlb
das
setp
mov
lock
inc
pop
in
fmuls
mov
les
fcomi
jb
xchg
iret
popa
sbb
out
popf
sbb
sbb
lea
out
sub
mov
psraw
ljmp
sbb
call
rorb
in
das
cs
sbb
push
push
adc
mov
sti
pop
imul
insl
xchg
mov
rcll
test
mov
es
mov
data16
cmpsb
outsl
out
bound
adc
mov
pop
lcall
xchg
dec
lods
ds
je
and
ret
xchg
rcll
mov
nop
push
xchg
mov
cltd
rcll
popl
cmpsl
jp
xor
mov
fneni(8087
movsl
xchg
jmp
btr
fs
lcall
jne
popa
mov
fadds
imul
pop
and
mov
dec
shrl
leave
mov
xchg
faddp
addr16
stc
shlb
mov
inc
daa
pop
xchg
jmp
adc
mov
in
lahf
pop
sbb
xchg
lods
cmpsl
ret
and
xchg
loope
fimuls
xor
aam
test
out
addb
jecxz
lea
aas
out
addl
dec
push
cmc
stos
add
in
adc
and
dec
mov
lahf
testl
out
sahf
fwait
push
push
jnp
cmp
call
jmp
out
xor
out
cmp
outsl
stos
push
enter
jbe
outsb
lds
push
xchg
cmpsl
push
shl
push
sub
jae
movsb
xlat
aad
loop
jns
out
pop
mov
sub
xchg
pop
out
cltd
leave
arpl
std
push
mov
jbe
fdivrl
xchg
inc
negb
mov
out
mov
movsl
lods
dec
stc
ror
lcall
push
or
in
test
pop
xor
sbb
add
cmp
ret
fbld
cld
xchg
scas
fistpll
bound
aam
push
cmp
add
popa
sbb
sarb
dec
sarb
cmc
lods
in
test
mov
in
and
and
loope
adc
aas
outsl
pop
test
test
xchg
push
sbb
sub
pop
jne
pop
mov
jnp
pop
mov
dec
movsb
out
cmp
pop
loope
mov
mov
jl
hlt
in
sti
ret
movsb
out
fcomps
sbbb
pop
sub
mov
test
cmc
mov
cmpsl
lods
int
fldl
mov
pop
and
fimuls
dec
ret
bound
lahf
lods
sub
mov
inc
sbb
or
push
bnd
in
arpl
add
add
xlat
cmpsl
pop
gs
faddl
call
jp
stc
lret
incb
es
mov
pop
daa
iret
jae
xchg
icebp
je
jmp
mov
jae
push
or
xor
jmp
shlw
rolb
adcl
xor
jns
jge
sub
lods
js
sbb
jae
clc
dec
add
or
jnp
jb
mov
stc
je
sbb
neg
pop
xchg
lods
jns
ja
add
sub
cmp
dec
inc
cmpsb
mov
push
lods
add
je
sub
or
jle
out
daa
mov
or
add
pop
in
dec
andb
pop
dec
std
out
pop
sbb
data16
push
sbb
xchg
or
xor
cmp
mov
push
cmp
dec
jle
push
xor
addr16
shrl
sbb
icebp
pop
pop
push
cld
and
mov
outsb
mov
out
jg
inc
add
fisubrs
or
pushf
mov
inc
push
cmc
jle
bound
and
dec
fwait
cmp
fdivs
dec
lock
out
jae
push
stc
dec
xor
movsb
dec
clc
xor
sub
daa
je
test
adc
jo
mov
loop
xchg
lods
add
lock
dec
push
add
jle
push
into
mov
jg
jmp
loopne
xchg
inc
or
scas
repnz
lret
ret
fstpl
clc
je
jle,pn
cmp
inc
movsl
repz
dec
hlt
mov
outsl
adc
hlt
imul
test
mov
in
inc
jb
adc
hlt
outsb
mov
jb
jb
aaa
push
dec
pop
sbb
xchg
or
shll
mov
add
cmp
inc
adc
inc
push
xchg
lahf
mov
iret
fwait
lock
push
in
ret
mov
test
lock
out
test
addr16
ds
push
mov
mov
les
test
test
push
pop
sbb
dec
shr
and
push
fdiv
pop
outsl
mov
mov
push
mov
push
lock
add
dec
out
mov
in
push
repz
outsb
mov
xor
xchg
rorb
leave
sbb
ret
add
mov
jns
data16
cmp
popa
inc
pop
pop
bound
pop
jg
mov
rol
push
cmpsb
outsl
adc
lods
mov
rorb
aas
ficoms
roll
sbb
call
pop
out
mov
insl
pop
dec
mov
push
push
sub
pop
call
in
outsb
mov
cmp
xchg
insb
outsb
mov
dec
int3
push
jp
jae
ljmp
mov
rorb
add
enter
stc
pop
mov
stos
or
test
adc
push
dec
jae
push
inc
xchg
inc
and
aas
adc
mov
std
bound
ficoms
jae
movsl
enter
mov
adc
sub
xchg
mov
pop
ds
or
cmpsl
es
mov
push
push
daa
dec
repnz
fisubl
jbe
jae
es
sbb
xchg
and
pushf
mov
int
push
or
inc
mov
add
iret
lea
mov
dec
scas
jg
jb
movsl
mov
mov
mov
imul
add
int3
ret
add
lock
sub
xchg
addl
das
lcall
dec
inc
mov
ret
outsb
test
mov
das
test
xchg
and
cwtl
sbb
jb
jae
fstl
xchg
mov
jns
jp
fcoml
je
scas
xchg
add
ret
mov
sbb
and
cmp
ficompl
ss
cmp
bound
add
push
or
push
rcll
scas
mov
lock
insl
shlb
mov
mov
push
cmp
addb
inc
xchg
icebp
add
outsl
mull
and
fwait
adc
sub
push
ja
dec
lods
andl
jne
cmp
gs
mov
push
outsl
ret
mov
inc
cmp
iret
addr16
imul
jg
fsubs
mov
xchg
clc
shlb
jle
and
sub
fs
daa
lods
sub
mov
pop
jecxz
push
addb
std
outsb
jg
call
imul
mov
lock
leave
arpl
dec
out
and
clc
adc
jmp
sbb
inc
inc
jge
cmc
nop
lahf
mov
pop
lock
shrb
jbe
test
ss
mov
pop
lods
aaa
lock
pop
mov
adc
jnp
dec
push
jmp
inc
out
stos
hlt
pop
scas
movsb
fs
out
dec
jle
cs
aad
sbb
bound
scas
sbb
mov
jle
sub
movsl
int3
ret
aas
rorb
push
pop
loopne
lret
addr16
mov
pop
mov
mov
jl
out
lods
mov
imul
jo
push
ret
mov
mov
and
fs
xchg
cmpsl
lock
shll
mov
sbb
adcb
orl
arpl
imul
scas
dec
mov
sub
jp
dec
imul
xor
and
jbe
jge
jp
lret
sbb
push
ret
sbb
dec
or
outsb
addr16
sbb
pop
push
cmpsb
fadd
or
adc
jno
ficoml
div
xchg
call
cmp
xor
mov
repz
pusha
jle
in
aas
std
inc
push
lahf
jl
xchg
stc
mov
pop
iret
sahf
dec
xchg
iret
pop
sub
jg
add
push
leave
out
insl
addr16
loopne
mov
andb
cmpsl
lret
repz
rorb
sahf
mov
ss
dec
mov
and
sbb
push
loopne
movsl
mov
inc
adcb
push
push
aad
jmp
mov
fwait
jmp
cltd
pop
xor
out
dec
stc
mov
dec
test
dec
hlt
sbb
mov
in
sub
push
mov
addr16
aaa
movsl
inc
sbb
lods
add
scas
fisubrs
out
fimuls
push
xchg
in
fcoms
sar
decl
pushf
outsl
push
or
xchg
cli
data16
fidivs
cli
mov
xchg
xchg
mov
pop
cs
lock
mov
fwait
jg
loopne
roll
es
push
test
xor
sub
pop
arpl
jae
pop
lods
leave
sub
push
loop
sub
lods
mov
mov
in
and
mov
mov
das
jae
add
xchg
dec
lods
adc
sbbl
push
mov
xor
jns
stos
mov
fs
fisttps
sbb
mov
das
mov
pop
gs
xor
sahf
mov
inc
in
xorl
test
mov
dec
out
test
sub
outsb
repz
jmp
out
dec
cmp
cs
sti
ljmp
pop
cmp
sbb
ja
rcr
sub
jae
push
xchg
cli
pusha
bound
out
rcr
into
jbe
dec
push
js
dec
dec
test
mov
pop
lret
inc
outsb
mov
test
lods
mov
mov
scas
pusha
clc
adc
inc
cltd
fisttpl
xchg
fwait
xchg
cmpsb
outsl
and
call
lret
add
cmp
pop
mov
call
push
inc
movsb
jo
daa
push
loop
pusha
xchg
jle
outsl
adc
jo
scas
neg
fnstsw
or
outsl
cmpb
cmp
sub
mov
outsb
insb
addr16
push
xor
or
inc
insb
cwtl
nop
jecxz
data16
in
ficoml
aas
jle
out
das
pusha
in
pop
out
jns
add
imul
adc
lods
cmp
push
ljmp
clc
outsb
and
cwtl
add
pop
jecxz
lcall
cmpl
or
outsb
push
add
push
inc
fisubrs
ss
pop
dec
add
cmpsb
mov
jle
addl
push
lock
mov
sub
arpl
push
pop
enter
push
call
addr16
pop
test
push
dec
cld
add
cmp
pop
rclb
or
std
pop
aas
loop
push
push
dec
out
cmp
pop
jnp
addb
mov
iret
mov
iret
fisubs
rorb
dec
inc
mov
cwtl
fistl
dec
mov
and
out
jge
int3
sbb
shlb
ret
or
pop
lret
repnz
sub
inc
insb
xchg
outsl
in
mov
adc
lods
rcrl
out
push
into
xor
sub
or
inc
pop
out
lods
in
stos
inc
je
cmp
arpl
mov
mov
shll
jns
clc
shll
jmp
loopne
insb
lock
cmpb
call
in
outsb
jmp
lock
outsl
out
outsb
pop
out
lods
insl
sbb
aam
pushf
out
insb
rcrb
dec
iret
outsl
jae
cmp
test
orb
in
cmpb
outsb
in
xor
jno
shll
mov
lea
push
mov
mov
jbe
add
test
or
mov
sahf
inc
movsb
mov
add
mov
mov
sub
outsl
mov
lock
cmp
repnz
aaa
cmpsl
insb
jns
pop
lods
mov
push
cltd
icebp
push
mov
les
ljmp
mov
cs
ja
les
mov
scas
jl
jbe
jno
mov
jbe
and
pop
inc
std
insl
or
sti
scas
cli
jae
and
push
testl
dec
arpl
ss
push
imul
jbe
jo
call
add
sarl
jp
pop
jb
pop
rorl
jns
inc
jae
cwtl
fidivrl
xchg
or
sub
push
sbb
mov
les
dec
adc
xorl
lods
icebp
imul
mov
mov
fsubs
and
dec
mov
leave
dec
cmp
jge
out
push
cmp
and
pusha
mov
pop
pusha
imul
pop
cmp
pop
insb
fdiv
cmpsb
clc
daa
mov
xor
xchg
dec
push
jnp
lods
fdivr
lahf
and
push
das
mov
loope
popa
inc
lods
adcb
adc
sbb
out
mov
and
sti
mov
or
out
into
fsubrl
lods
cmpsl
xchg
cmp
mov
std
mov
and
cltd
xor
es
xchg
inc
jge
xchg
inc
adc
outsb
scas
pop
lock
es
xchg
ja
pop
jmp
mov
xor
loope
mov
loop
inc
aaa
popa
push
dec
adc
pop
dec
sahf
inc
jnp
cwtl
pop
ja
add
sti
adc
jp
mov
mov
popf
push
std
dec
into
testb
insb
fisubrl
mov
mov
cs
mov
je
into
sbb
out
dec
add
jns
or
and
ss
adc
popf
repnz
test
out
loop
cmp
ficomps
or
sahf
mov
test
movsl
mov
outsb
mov
fimuls
adc
fwait
sbb
or
cs
sarb
scas
dec
dec
pop
mov
lret
dec
jecxz
scas
outsl
xchg
and
ja
dec
les
repz
ljmp
sub
int3
cs
inc
scas
test
mov
mov
xchg
pop
xchg
adc
sti
scas
cmc
cltd
imul
inc
inc
jo
mov
es
inc
sbb
clc
int3
out
popa
mov
imul
add
daa
pop
sub
and
bound
mov
sub
mov
mov
jae
jl
mov
aam
mov
in
xchg
or
in
sub
loope
sbb
pop
outsl
je
cmpsb
lock
lret
xor
mov
ljmp
jae
mov
xchg
jp
mov
adc
and
test
or
scas
add
outsl
xchg
or
add
lock
leave
xchg
jp
imull
imull
mov
bound
das
push
aad
add
mov
ficoml
mov
mov
push
loopne
inc
call
jno
sub
loope
stos
add
mov
push
inc
mov
mov
sub
dec
mov
data16
loopne
sbb
das
movsl
repz
out
repz
xchg
shl
stos
xchg
es
mov
sub
sbb
pop
pop
call
sub
and
js
sbb
das
leave
xor
mov
dec
cmp
mov
or
call
dec
xchg
inc
sub
repz
jl
mov
sub
jno
decb
push
or
or
xorl
je
int
xchg
dec
test
orb
sub
arpl
out
imul
ds
and
mov
add
into
push
mov
xor
jb
imull
push
pop
lret
daa
out
push
aad
and
das
leave
fisubrl
jae
jle
popa
addr16
outsb
or
mov
in
shlb
push
rcl
popa
pop
cs
mov
lods
push
pavgw
lret
pusha
lret
sub
fxch
lret
xchg
add
xor
bound
insb
imul
push
enter
inc
bound
loopne
pop
push
outsl
lods
fstl
add
das
or
sub
inc
shl
mov
mov
fcomp
xchg
jmp
fimuls
sbbb
imul
arpl
adc
lret
jmp
int3
sbb
andl
fs
movaps
mov
int3
faddl
outsl
sub
outsb
int
mov
pop
arpl
mov
jae
ss
lcall
fsub
jo
pop
ja
dec
xchg
adc
mov
add
and
sbb
mov
rorl
pop
mov
pop
shlb
ss
mov
scas
jo
xchg
inc
lahf
subl
pop
addr16
pop
das
stc
mov
hlt
pop
lahf
pop
and
adc
mov
movsb
mov
dec
aas
add
sbb
scas
or
scas
lods
and
add
pop
adc
rolb
lods
or
fldenv
test
jae
pushf
in
mov
jno
ret
cmp
insb
sub
push
lcall
mov
ss
mov
lea
pop
inc
push
pop
sbb
sbb
in
xchg
push
out
ffree
pop
sbb
je
jp
cmp
lahf
dec
dec
mov
sahf
loope
hlt
push
jl
mov
mov
es
mov
push
ja
xchg
jae
mov
or
into
cmp
repz
push
insb
out
xor
pusha
xor
and
pop
out
clc
or
dec
lods
ljmp
push
pop
sbb
push
xchg
outsl
xor
push
lods
int3
repnz
dec
dec
add
daa
push
ret
scas
iret
test
and
ss
mov
in
mov
dec
jno
fisubrl
dec
sbb
cmpsb
scas
repnz
push
cwtl
push
adc
aad
jns
pop
xor
xchg
mov
es
int
addb
and
pop
insb
sub
aas
pushf
dec
mov
sbb
addr16
push
mov
sub
mov
dec
aas
or
movsb
fistps
adc
aad
call
xchg
test
rolb
xor
shrl
pop
pushf
mov
lock
xlat
movsb
and
xorb
pusha
inc
pop
adc
jmp
repnz
mov
out
je
mov
sub
dec
lahf
mov
mov
mov
lcall
push
adc
pop
addr16
sbb
out
dec
shll
jns
push
ljmp
out
mov
dec
negb
cltd
fmull
cmp
xchg
pop
aad
out
arpl
cld
loopne
mov
dec
sbb
xchg
jg
jb
insb
fnstenv
mov
outsb
insl
mov
xchg
fdivrs
call
and
sti
cs
or
jns
outsl
movsl
inc
mov
push
dec
jmp
stc
inc
mov
cmp
dec
fmull
outsl
sbb
or
or
insb
fnstenv
mov
test
sub
lods
dec
fcompl
xor
repz
pop
cltd
dec
aad
mov
xor
sarb
add
sub
scas
pop
sbb
jne
lret
xchg
lods
adc
ds
addr16
in
pop
ja
out
jle
nop
ja
jmp
incb
hlt
mov
rcr
adc
or
cli
in
xor
pop
mov
cmpsb
mov
daa
stos
pushf
addl
iret
xchg
test
dec
sub
out
pop
iret
sti
add
outsb
mov
dec
std
test
leave
fstps
lret
pop
in
adc
loopne
sbb
lock
xlat
inc
and
lahf
jb
mov
repnz
aad
xor
incb
jno
das
mov
xor
repz
fiaddl
add
add
push
sub
lret
push
add
mov
das
jl
in
stos
sbb
adcl
decb
insl
outsl
ss
imul
loopne
adcl
mov
xchg
jbe
jae
fisttpl
adc
and
xor
outsl
leave
ljmp
loop
leave
test
pop
lds
dec
jge
mov
jbe
in
arpl
and
in
jl
imul
pop
pop
les
aad
out
ficoml
mov
scas
lea
call
cmp
fdivs
cs
push
xchg
sbb
push
pop
mov
dec
xor
dec
insb
push
xor
mov
insl
aas
rcll
aaa
adc
inc
inc
outsl
lock
orl
dec
pushl
or
repz
jae
sbb
fdivrl
pop
mov
mov
add
push
movsb
rol
outsb
dec
outsl
ja
pop
xchg
or
pop
dec
dec
push
cmpsb
sbb
nop
fidivrs
xor
mov
adc
xchg
sub
stos
mov
fadd
int3
mov
cmp
inc
push
out
scas
push
imul
subb
jns
mov
push
inc
inc
mov
mov
or
in
push
imul
mov
outsl
in
lods
push
xchg
icebp
ret
lock
mov
cmpsb
maskmovq
testl
sti
iret
mov
lea
jne
dec
stos
js
mov
inc
movsl
and
jns
jne
pop
jp
and
es
pop
les
fbld
out
mull
push
jle
lods
mov
int
xchg
cwtl
mov
cwtl
sbb
inc
cmpsb
xchg
sbb
jae
or
cli
insb
mov
push
loopne
ficomps
mov
dec
cs
nop
pop
push
xor
xchg
shl
out
sub
mov
cmp
jb
xchg
sar
and
xchg
scas
lock
addl
orl
cmp
dec
jae
pop
push
dec
fstp
iret
lea
and
mov
sub
test
pop
push
push
repz
ja
mov
xchg
shlb
cli
push
sbb
out
xchg
add
push
jno
or
and
out
outsb
or
push
adc
int
out
test
dec
mov
call
and
push
data16
cltd
sbb
push
adc
dec
icebp
push
test
sbb
jg
or
xchg
dec
jmp
enter
add
into
lods
jmp
stos
sti
imul
sbb
loope
movsb
int
dec
adc
lcall
int
jo
or
pop
mov
jecxz
push
sub
add
aas
in
and
sbb
je
adc
mov
loop
xchg
inc
xchg
enter
scas
jg
push
scas
push
adc
loopne
mov
dec
test
stc
test
test
pop
in
xor
std
ja
jbe
sahf
outsb
arpl
test
inc
outsl
mov
clc
xchg
mov
push
dec
mov
dec
negl
mov
xor
xlat
es
mov
ss
cmpsl
js
xchg
insl
loope
mov
into
add
cli
es
pop
mov
xchg
ja
adc
cs
cld
ljmp
sbb
movsl
push
out
call
mov
mov
std
outsl
push
pop
fcmovnu
mov
mov
iret
and
pop
jg
in
xchg
insl
into
imul
int3
loop
daa
mov
mov
jb
push
inc
shll
adc
mov
in
lahf
jle
mov
and
test
in
sbb
lcall
in
and
iret
add
inc
jmp
inc
roll
notb
enter
rcrl
lock
sub
sbb
mov
in
lock
jle
jne
idivb
fistps
mov
fs
jp
xor
lods
adc
pop
int3
push
fninit
sub
enter
stos
sarb
lret
popa
jle
loope
ret
decl
scas
sbb
xchg
les
imul
es
mov
int3
xchg
pushf
mov
iret
mov
mov
push
int3
sub
test
jno
push
jno
mov
bound
push
loopne
sbb
add
bound
outsl
test
ret
pop
test
jg
ret
insb
mov
sbbl
cmp
mov
scas
shl
clc
jl
imul
jns
out
adc
ret
sub
fcmovb
outsl
or
push
fs
je
and
ja
aas
mov
inc
add
mov
mov
sub
fwait
imul
mov
outsb
lods
mov
dec
jmp
lret
int3
icebp
test
out
out
xor
push
dec
in
push
data16
in
mov
lods
imul
add
push
sbb
jecxz
xor
dec
dec
sub
cld
mov
mov
cmpsb
outsl
les
mulb
xchg
inc
movsb
frstor
jne
mov
es
mov
dec
rep
xor
cmpsb
popa
mov
mov
lods
xchg
jg
adc
sti
mov
outsl
loopne
mov
dec
stc
pop
data16
mov
popa
test
cmc
xchg
jnp
jp
jg
dec
mov
sub
js
cmc
push
or
iret
movsl
pop
cmc
mov
inc
mov
push
jmp
insb
mov
mov
repnz
and
sbb
mov
pushf
sbb
stc
xor
fisttps
insl
filds
jle
outsb
bound
nop
or
lds
data16
test
les
dec
push
test
lods
mov
lds
jae
mov
dec
repz
jae
test
jno
mov
cltd
mov
inc
lret
cmp
mov
mull
mov
mov
sub
outsb
mov
fwait
dec
stos
fnstcw
mov
negb
mov
push
in
sbb
stos
pop
stos
cmpb
pop
cld
jle
push
mov
cwtl
push
mov
dec
or
mov
push
add
xchg
add
mov
inc
and
mov
das
xchg
jae
mull
inc
sub
fisubrs
int3
dec
inc
push
test
pop
dec
sub
jecxz
xor
das
fisttps
push
xchg
rorl
or
addb
dec
int3
jb
mov
scas
ret
push
dec
loop
scas
cmp
sbb
outsb
lods
dec
push
sub
addr16
in
dec
or
ret
pop
mov
and
sub
sbb
cmp
add
gs
dec
sbb
dec
mov
sbb
cmp
in
mov
int
scas
or
nop
xor
pop
inc
insb
ljmp
dec
jg
mov
out
jmp
adc
aas
ljmp
cmp
out
in
push
mov
and
cli
pop
bound
adc
and
dec
mov
test
loope
xchg
ret
jae
mov
lock
rcrl
or
mov
jno
mov
add
in
sub
int
movsb
xchg
push
iret
add
mov
outsb
daa
lea
xor
loope
mov
out
xor
jmp
adc
mov
arpl
insb
push
mov
fsub
cld
inc
and
scas
ds
jns
into
pop
int3
out
inc
xor
jg
rcll
leave
out
sub
jecxz
jne
lret
cld
and
and
hlt
adc
imul
stc
cmp
sub
in
loop
in
xchg
xchg
sub
dec
or
push
stos
sub
addr16
mov
lods
clc
pop
sub
mov
scas
ret
imull
aam
push
in
pop
mov
pusha
outsl
xchg
push
push
inc
fdivl
ljmp
test
stos
outsl
sbb
and
sbb
call
hlt
add
lea
or
fcomip
mov
mov
out
repnz
cmp
xor
sub
mov
insl
push
jmp
fstps
sub
arpl
insl
mov
mov
out
jl
in
insb
sbb
imul
jne
icebp
dec
loopne
pop
dec
dec
dec
aaa
fwait
mov
fsubs
iret
stos
insl
pop
and
cmp
cli
jg
outsl
add
icebp
adc
add
hlt
lods
rcrb
dec
sahf
stos
out
pop
adc
and
mov
stos
mov
mov
scas
mov
fstl
sbb
loope
sub
sub
xor
inc
sub
shll
jp
imul
lods
mov
cs
out
mov
mov
adc
js
add
pop
aas
dec
or
out
and
pop
rclb
fcoml
xor
cmc
icebp
ja
inc
jae
xor
outsl
pop
pushf
ja
xchg
shrb
outsl
cs
mov
lock
xchg
test
sub
pop
cmp
or
dec
push
repnz
xchg
push
push
and
adc
mov
ds
or
stc
push
xor
or
ss
movsl
outsb
in
cmp
and
outsb
or
push
rcrl
pushf
outsb
imul
inc
pop
lods
push
mov
push
push
adc
insl
cmpsl
push
mov
adc
lods
stos
scas
jb
mov
lock
or
test
add
je
jbe
clc
fdivrl
mov
nop
es
mov
dec
andl
into
jns
cmp
insl
xchg
lock
pop
inc
in
jle
mov
daa
lock
mov
loop
or
push
dec
pusha
das
subl
xchg
lods
cwtl
js
lret
into
mov
mov
sbb
pop
popa
adc
aam
cltd
lcall
and
insl
inc
aas
lret
ret
pop
pop
cmp
rcrb
or
or
mov
xorb
pop
fdivr
sub
dec
dec
out
outsl
push
mov
ret
mov
adc
cli
out
xchg
test
pop
test
cmp
jle
loope,pt
repnz
jle
mulb
mov
sub
pop
fs
sub
or
enter
out
aas
inc
and
jnp
mov
jmp
sub
loop
test
mov
loope
ljmp
push
leave
loopne
ret
mov
out
mov
fs
add
jmp
dec
mov
jmp
adc
xor
out
adc
icebp
inc
daa
sub
fmull
aas
xchg
sbb
ret
push
xchg
into
inc
mov
pop
enter
orl
das
ffreep
clc
xchg
xor
xchg
dec
and
mov
test
sub
hlt
xlat
orb
sti
mov
mov
sub
int3
out
jecxz
repz
lods
out
and
hlt
fxam
stc
xchg
and
add
sbb
icebp
subb
ss
add
dec
mov
inc
jno,pn
dec
or
or
mov
mov
push
pop
insb
push
aas
lods
mov
pop
cli
lods
ja
mov
jecxz
icebp
and
jno
add
je
cwtl
dec
push
push
mov
repnz
dec
rcrl
fildll
xchg
movsl
clc
xor
iret
outsl
and
fs
lods
jno
sarb
ja
mov
iret
cmp
and
in
std
jns
pop
data16
dec
loop
or
ret
pop
push
or
cmpsb
xchg
dec
mov
or
in
xchg
stos
pushl
fnsave
ja
push
xchg
push
enter
mov
imul
xor
xchg
fisttps
and
xchg
vshufps
sbb
lock
mov
xchg
jae
push
stos
testl
scas
sub
call
mov
fcoml
mov
std
fistps
in
adc
inc
and
ret
adcb
jmp
testb
jb
in
pusha
jle
dec
fbld
and
movb
sbb
pop
mov
mov
add
and
fldenv
mov
stos
sahf
test
pop
cmp
xor
mov
push
push
jae
test
xor
loop
dec
lds
mov
inc
push
dec
outsb
push
inc
jae
or
xor
stc
cli
mov
mov
dec
mov
test
cmp
inc
push
movsb
lret
adcl
jp
imul
ljmp
push
pop
sub
jne
add
aaa
cli
mov
lods
cmpb
movsl
and
lods
in
ret
inc
mov
rorb
jno
ljmp
jp
mov
mov
inc
sbb
sub
outsb
enter
mov
mov
es
addr16
lea
and
mov
dec
sahf
in
xchg
cmp
lock
cmp
stos
cs
ljmp
mov
in
enter
out
jp
or
int3
test
sbb
add
shlb
aad
shl
stos
mov
xchg
loopne
xor
dec
xor
pusha
jmp
xchg
ljmp
scas
outsb
cmp
insl
mov
lds
jae
push
mov
lcall
fsubs
sbb
sub
push
imul
dec
cmp
iretw
jae
sahf
jae
test
js
mov
mov
out
in
in
ret
cwtl
shlb
and
mov
lock
mov
dec
aad
testb
xchg
or
jns
movsb
popa
pusha
icebp
dec
add
pop
and
insb
mov
outsb
addr16
js
xor
mov
xchg
lock
call
push
sub
outsl
xor
xor
xchg
sub
in
xchg
pop
dec
xchg
dec
xor
ficoms
add
jnp
inc
xlat
lea
mov
cmp
testl
repnz
jl
cmp
aad
or
outsb
add
jge
mov
outsl
gs
xabort
data16
jg
aaa
or
outsb
or
out
sub
mov
insb
movq
xor
lods
icebp
sbb
insb
push
icebp
jb
outsb
popf
xor
icebp
addr16
jle
sarl
js
jg
and
popf
mov
cmpsl
and
ljmp
sub
sbb
mov
lods
push
pop
mov
mov
pop
jne
sub
xchg
clc
inc
pop
and
clc
stos
movsb
scas
and
pop
add
push
imul
mov
jg
outsl
es
scas
stos
and
aad
cmp
lcall
sahf
xchg
popl
data16
pop
cs
sahf
dec
mov
dec
stos
das
xor
ljmp
inc
shrl
jg
mov
shll
mov
lahf
aad
add
push
out
sub
mov
sub
nop
mov
outsb
dec
add
orl
lahf
add
sub
dec
add
int3
pop
xor
repnz
and
mov
stos
lahf
icebp
repnz
xchg
mov
out
dec
push
popa
and
into
jb
shl
int
jp
sub
sbb
out
and
sub
jecxz
mov
rorb
jle
pop
mov
dec
addr16
out
into
leave
fisttps
jmp
jmp
inc
pop
cmc
dec
test
pop
sbb
push
out
in
lea
pop
iret
jae
push
icebp
leave
into
sub
dec
add
ljmp
jbe
movsl
cmp
addr16
jg
xchg
lock
sub
sub
mov
jmp
mov
and
insl
add
push
shlb
pop
pop
jg
mov
jp
jb
rcll
ret
pop
sbb
fmull
mov
mov
xor
adc
lods
iret
mov
scas
mov
and
out
out
das
mov
insb
xchg
bound
jmp
lcall
xor
mov
in
sahf
dec
icebp
mov
mov
imul
fsts
or
sbb
aam
stc
jo
mov
sub
sub
insb
repnz
out
pop
and
test
adc
cmp
clc
xchg
test
enter
shlb
pop
sbb
add
mov
dec
fidivrs
hlt
mov
icebp
out
mov
inc
jae
pop
xor
mov
aaa
cwtl
dec
lock
ret
enter
aad
xchg
mov
xchg
jbe
xor
add
stos
out
inc
enter
xor
xor
stos
sbbl
pop
shrl
daa
loop
xchg
and
and
or
mov
push
dec
iret
mov
out
outsl
iret
jecxz
lds
xchg
sub
xchg
daa
mov
lret
or
add
xor
imul
movsl
jl
dec
leave
sub
out
adc
outsb
in
pop
nop
pop
inc
std
dec
adc
mov
pushf
adc
mov
pushl
mov
xchg
adc
or
push
and
fwait
mov
xor
pusha
inc
sbb
hlt
and
roll
imul
repnz
fdivr
jno
outsb
jg
jb
out
adc
repz
pop
popa
pusha
jae
cltd
sbb
push
dec
xchg
je
shlb
cmc
outsl
testl
outsb
idivb
fsub
dec
mov
call
enter
mov
clc
and
out
arpl
data16
stc
scas
jns
xchg
icebp
push
inc
add
test
jmp
mov
das
outsl
jge
iret
xchg
aaa
enter
sbb
loope
test
fwait
pop
mov
subb
jbe
push
or
mov
xlat
push
scas
in
sub
sahf
mov
stos
stc
mov
dec
stos
aaa
xchg
scas
inc
push
push
lock
nop
mov
push
mul
das
idiv
jp
xchg
testl
aas
sub
test
in
mov
out
rcrl
jle
cli
mov
dec
stos
jne
das
fimuls
lcall
testb
in
mov
xorl
scas
je
ljmp
jns
mov
fmul
push
scas
lods
out
scas
cmc
xor
mov
xchg
xchg
addr16
lcall
arpl
add
mov
fwait
outsb
out
jne
out
imul
mov
insl
leave
push
jbe
out
aaa
out
scas
arpl
jbe
mov
out
mov
je
dec
fxch
mov
jle
insl
and
out
cltd
mov
mov
iret
out
in
cmc
dec
insb
mov
push
stos
testl
arpl
into
jne
and
mov
stos
lods
iret
shrb
addr16
clc
rorl
iret
cmp
in
data16
add
push
push
pop
push
xor
push
push
mov
jns
inc
fdivrl
or
sbb
bound
shl
shrb
insb
mov
adc
or
adc
outsl
adc
xchg
call
sbb
lods
cmp
outsl
aas
daa
int3
cwtl
pop
adc
dec
loope
push
cmp
in
sahf
mov
shl
push
addr16
call
jle
daa
jnp
jno
xchg
sbb
or
push
cmp
das
mov
push
test
sub
jge
and
enter
icebp
ja
push
jg
xchg
fsts
jmp
test
dec
out
subb
inc
daa
push
or
dec
xor
lods
push
js
pop
call
addr16
add
dec
in
mov
fs
dec
daa
cmc
and
pop
dec
mov
cs
int
mov
rcrl
hlt
movsb
and
lret
jg
dec
inc
add
in
add
pop
sub
add
mov
mov
cwtl
or
jne
scas
xor
repz
out
nop
dec
addr16
jbe
js
ret
pop
outsb
push
pop
fcmovne
jmp
lods
jmp
punpcklbw
stos
jbe
loopne
nop
outsl
mov
outsb
cmc
mov
imul
repnz
mov
mov
outsb
repnz
mov
clc
mov
rclb
cli
mov
cli
shrl
call
sub
and
cmc
adc
mov
test
cld
es
mov
ljmp
xor
xchg
adc
out
dec
mov
inc
add
dec
add
pop
aad
xor
hlt
enter
xor
mov
ret
and
dec
notb
xchg
insl
cmp
cmc
or
jmp
dec
aas
test
sub
ficoms
data16
or
flds
pop
mov
sbb
stos
jae
mov
sub
scas
dec
fs
xorl
cwtl
js
inc
in
mov
jne
ljmp
push
sub
stos
test
out
pop
test
pop
stos
and
negb
repz
jg
or
movsl
lods
stc
leave
js
ds
sbb
xchg
mov
dec
sub
xchg
jns
test
and
mov
and
scas
adc
push
hlt
mov
jne
dec
lock
jno
adc
xchg
out
insb
xor
shr
in
shl
call
int3
outsl
dec
je
outsb
add
push
cmp
cmp
pop
out
mov
fsubrp
ljmp
call
fldcw
add
dec
in
mov
stos
xlat
or
fldl
dec
cmc
dec
jne
dec
dec
leave
aaa
lods
mov
pop
xchg
cli
mov
dec
in
adc
shll
mulb
pop
push
adc
stc
sahf
pop
sub
jae
adc
or
jge
sub
lret
scas
xor
mov
sbb
popf
push
insl
call
sub
testb
ljmp
out
add
lods
call
loope
mov
xchg
shl
in
pusha
repz
push
mov
into
mov
fcmovnu
imul
sub
out
mov
pushf
jmp
in
inc
or
push
in
mov
xor
call
inc
rorl
mov
push
in
mov
pop
les
call
mov
xor
and
cli
mov
pop
aad
outsl
sbb
insb
dec
dec
jae
mov
outsb
mov
imulb
push
xchg
push
cmp
js
iret
pop
imul
enter
cmpsb
xchg
iret
dec
adc
lds
xchg
add
push
loope
imul
xchg
mov
dec
sarb
imulb
sub
xchg
aam
imul
mov
mov
dec
jae
and
mov
mov
imul
or
outsl
movsl
lds
xchg
ret
shll
data16
fmull
sbb
adc
outsl
flds
fwait
mov
adc
inc
mov
lock
mov
int3
pop
mov
pop
mov
outsl
mov
lods
repz
std
test
sub
int
pushf
repz
and
out
cmp
cmpsl
filds
mov
jae
arpl
xor
mov
inc
cmpsl
cltd
icebp
inc
ds
xchg
leave
insb
adc
sbb
inc
les
jg
jns
mov
pop
jmp
imul
sbb
inc
and
jmp
pop
sbb
sbb
dec
outsl
jno
js
xchg
cmp
mov
adc
repz
sub
jo
add
inc
xchg
data16
clc
xchg
int
inc
scas
gs
xor
lret
addb
outsl
repnz
lods
mov
add
insl
inc
mov
in
out
dec
cld
sbb
cmp
iret
outsb
outsl
pop
jae
push
mov
outsb
rol
push
dec
xchg
xchg
enter
and
addr16
sbb
rcr
outsb
push
jecxz
push
jb
lcall
lock
and
and
pusha
jbe
mov
push
push
mov
dec
stos
addr16
push
out
jmp
clc
and
scas
stc
mov
dec
jl
sbb
xchg
dec
jae
sbb
int3
test
push
mov
arpl
push
pop
cmpb
cmp
sub
mov
inc
inc
add
jecxz
jbe
mov
inc
lret
and
in
pushf
pop
loop
lock
gs
pop
outsl
mov
call
push
jle
mov
mov
cmp
call
scas
aaa
subb
adc
lret
sar
pop
rol
pusha
call
ret
sbb
mov
mov
dec
cmpsb
out
jo
mov
add
repz
sub
addr16
jle
mov
or
dec
mov
sub
push
adc
data16
addr16
jle
add
shrb
mov
aaa
test
mov
jno
jb
add
push
test
in
mov
in
pop
inc
mov
arpl
xor
loop
insl
ja
dec
movd
dec
or
jnp
jle
test
aaa
or
imul
pop
lret
repz
xor
scas
iret
cmpsb
sbb
sub
sub
push
xor
mov
dec
outsl
dec
sbb
nop
pop
cwtl
repnz
xchg
outsb
jmp
and
xor
sahf
call
je
cli
cmc
inc
jb
xor
sub
cmpsl
loopne
adc
xchg
test
movsl
outsl
repnz
sbb
dec
outsl
pop
inc
in
and
mov
scas
xchg
test
push
inc
pop
fadds
jg
daa
dec
cmp
outsl
out
mov
mov
mov
enter
fadds
mov
stos
data16
dec
repz
mov
and
sti
push
mov
push
xchg
or
add
cmp
inc
out
lods
or
add
clc
in
inc
jp
push
cmp
aaa
fimull
mov
jae
outsb
mov
outsl
stc
insb
jl
cld
aad
xchg
lock
sbb
addr16
popa
aas
jno
lods
stos
pop
das
repz
outsb
repz
xchg
xchg
ds
or
and
repnz
and
andl
cmp
mov
cmp
xchg
aam
dec
out
insb
std
test
gs
bound
xchg
mov
inc
jbe
add
outsl
xor
inc
clc
into
inc
adc
sub
aaa
repnz
scas
fisubl
pop
sbb
or
sub
mov
mov
lods
pusha
sbb
xchg
shll
cltd
xchg
sbb
out
xor
push
andl
add
dec
es
aas
push
je
mov
das
dec
push
push
and
les
imul
adc
js
lret
decl
test
outsl
and
popa
cmpsl
jno
repnz
std
mov
xchg
outsl
mov
mov
das
sbb
test
pop
cmp
cmp
scas
mov
inc
sub
pop
fcmove
std
dec
adc
add
idiv
inc
jns
inc
fcoms
jae
insl
dec
int
add
test
dec
fcoms
repnz
test
mov
pop
sub
inc
dec
inc
icebp
pop
jecxz
rorb
dec
rolb
jl
fsts
pop
out
mov
push
push
lods
aas
or
xor
fnstenv
movsl
shll
inc
out
jae
call
push
adc
xor
ficoml
fdivrs
nop
inc
mov
loopne
insl
mov
out
mov
lret
and
dec
or
mov
dec
mov
sbb
int
xlat
aaa
sub
mov
dec
inc
fistps
mov
xor
adc
sbb
ds
jmp
push
andb
dec
pushf
and
int
imul
gs
loopne
add
inc
stos
in
cmp
dec
push
pop
movsb
push
mov
and
inc
and
fisubs
cmp
movsb
cmp
movsb
xor
fsubrl
sub
jae
les
jbe
lods
ds
outsl
mov
and
ror
shlb
add
imull
or
xchg
pusha
push
ja
xor
in
jb
jmp
outsb
outsl
push
pop
in
mov
popa
sbb
sub
outsb
in
ss
push
cs
test
outsb
ret
mov
jae
das
in
inc
scas
adc
mov
repz
lock
mov
dec
lcall
push
pop
xor
cmc
andl
xor
or
sbb
jae
enter
mov
push
jbe
cli
mov
jp
cwtl
mov
inc
lcall
mov
mov
lods
mov
insb
cmp
shl
addr16
sahf
mov
sub
filds
xchg
in
jmp
cmp
mov
adc
lock
sub
inc
cmc
mov
push
out
iret
fstpl
pop
sub
pop
orl
mov
xor
inc
mov
mov
mov
dec
inc
bound
sub
ret
in
imull
imul
arpl
shll
inc
jecxz
push
adc
sbbb
sbb
or
fucom
nop
flds
and
xchg
mov
xor
repz
mov
sar
push
arpl
add
mov
cmp
shll
xlat
push
rolb
add
mov
daa
outsb
pop
xor
add
xchg
insb
inc
xor
outsb
inc
cli
dec
xchg
scas
outsl
pusha
outsb
es
sbb
mov
pop
andl
or
in
sbb
mov
scas
mov
push
mov
pop
cmp
scas
out
jbe
jae
mov
sub
mov
jnp
sbb
rolb
sub
mov
dec
and
scas
aaa
and
jmp
test
jae
pop
jno
dec
out
inc
add
loop
in
popa
and
pop
mov
push
stos
mov
loopne
pop
imul
xor
std
mov
mov
sbb
imul
hlt
xor
cmpsl
loopne
out
sbb
pop
rcl
les
or
lret
jns
push
lds
aaa
push
push
jg
add
andl
insb
loopne
cld
pop
or
jg
std
push
fwait
mov
or
rcll
push
inc
add
jb
lret
inc
xchg
popf
into
insb
fs
cmp
mov
gs
xchg
dec
pop
bound
add
stc
mov
xchg
cld
jmp
mov
dec
dec
mov
cld
das
subb
mov
sbb
outsb
arpl
mov
loop
jmp
inc
jge
in
inc
and
shll
jg
mov
in
push
and
or
xor
pop
mov
sbb
xor
ljmp
and
gs
ret
repnz
addr16
out
dec
or
mov
mov
pushf
adc
out
or
inc
fwait
jle
cmp
clc
mov
test
pop
insb
int
fistpl
outsb
decb
mov
ret
mov
xchg
or
imul
lcall
cld
mov
lret
out
stos
xor
sti
sbb
data16
sti
cmpb
out
cmp
lcall
push
cmp
ror
insl
cmp
xlat
outsb
pop
dec
inc
push
imulb
inc
jg
es
lods
sbb
icebp
pop
inc
push
das
jb
cmc
jno
pop
cmp
lock
xor
mov
je
add
out
insl
out
inc
int
rcl
test
aad
xor
mov
sbb
test
xchg
jle
repz
pusha
push
push
mov
test
and
pop
jne
push
push
mov
jne
and
cltd
ljmp
jp
sti
lods
std
pop
inc
repnz
sbb
addr16
jbe
jbe
pop
nop
fisttpl
repnz
movsl
fsub
hlt
mov
popa
xor
lods
pop
jns
mov
insl
add
mov
add
addr16
jmp
divb
call
ja
push
mov
out
mov
inc
push
loop
jo
out
cmp
mov
xchg
and
inc
ljmp
bound
rorl
outsb
test
sub
lret
sub
scas
outsb
mov
xchg
lret
jg
lock
push
out
mov
dec
push
scas
and
sub
scas
mov
insl
pop
cmc
daa
ja
popf
pop
mov
rol
xchg
aas
add
sub
bound
out
inc
in
sbb
push
jae
outsl
test
inc
jg
in
or
or
shl
bnd
loopne
daa
xchg
jp
cmovp
fbld
repnz
daa
lods
lock
mov
test
lret
lret
js
dec
iret
add
pusha
mov
mov
dec
in
dec
push
jae
or
sahf
push
pop
test
add
int3
jbe
push
jmp
adc
cltd
sti
push
decl
mov
fsubl
mov
loop
add
mov
mov
addb
lock
ja
jbe
es
push
add
jbe
xlat
lods
imul
push
push
inc
out
in
cld
test
pushf
mov
testl
roll
ljmp
mov
cmc
or
movsl
lahf
insb
push
and
in
add
mov
lods
or
shrb
clc
mov
mov
mov
ffreep
jbe
xchg
leave
stc
and
xor
mov
xlat
arpl
pop
pop
test
shrb
adc
ficoml
cmpb
jmp
iret
jbe
sub
das
mov
jne
int3
cs
lock
adc
in
pop
jno
and
andb
or
adc
jae
lcall
mov
outsb
es
fs
out
test
inc
adc
std
xor
cmp
pop
mov
jnp
dec
outsb
mov
arpl
fiadds
jg
mov
mov
cwtl
arpl
mov
movsb
xchg
ljmp
xchg
das
jae
dec
add
push
and
test
testb
cmpsl
cmpsb
pop
iret
out
xor
aaa
push
xchg
in
push
adc
push
cmp
adc
mov
cltd
neg
dec
ss
call
enter
mov
test
aad
leave
and
inc
scas
daa
int3
imul
shr
arpl
push
je
fucomp
add
jmp
shrb
dec
cmpsl
pop
iret
and
mov
mov
push
xchg
jecxz
or
int
sbb
jno
adc
shl
sti
call
ret
jnp
sbb
xor
jecxz
mov
jle
mov
pop
hlt
lret
and
insl
out
addb
gs
jg
inc
rcl
addr16
insl
mov
or
or
test
mov
mov
pop
fstps
scas
xchg
or
out
mov
movsb
aad
shr
cs
add
jae
aam
out
push
sbb
into
adc
out
int3
xchg
ret
or
fidivrs
mov
movsl
cmp
fwait
xchg
dec
call
xchg
dec
stos
and
jns
daa
shll
addr16
data16
sub
dec
insb
inc
adc
and
std
adc
call
stos
enter
daa
jmp
stos
int3
and
into
out
fcoms
or
je
sbb
push
jnp
int3
jb
xor
ret
lea
loope
dec
mov
xchg
into
stc
mov
mov
add
dec
cmp
int
jg
into
jno
and
inc
call
push
rorb
das
nop
mov
test
adc
imul
mov
sub
cli
fdivr
jl
sbb
imul
mov
outsb
rorl
call
add
xchg
inc
inc
mov
loopne
jg
push
pop
adc
push
hlt
jg
mov
loope
mov
mov
push
xor
push
xchg
out
addl
xor
dec
stos
cmp
in
and
xchg
data16
mov
jmp
leave
add
in
jae
incb
das
popl
ret
arpl
sub
cmp
imul
mov
xchg
xor
push
add
prefetcht0
es
sti
xorl
sar
jecxz
pop
lock
test
jg
xor
xchg
sbb
xchg
sbb
faddl
sbb
inc
push
or
jmp
mov
jno
add
sub
mov
or
bound
loopne
pop
xchg
int3
jmp
in
rorb
scas
out
in
lds
icebp
dec
mov
xor
sahf
stc
icebp
xchg
inc
movsb
cmp
mov
sub
jp
push
out
enter
gs
sub
fisttpll
test
or
add
mov
arpl
sub
mov
xchg
push
jno
pop
adc
jne
inc
hlt
and
loop
dec
in
je
popa
or
je
imul
adc
inc
sbb
loopne
push
popa
inc
or
loop
adc
inc
lret
jecxz
cmpsl
jg
fsubrl
stc
pop
stc
mov
push
and
cmp
in
mov
push
ret
out
fbld
mov
pop
push
xor
inc
cmp
dec
mov
sbb
pop
shrl
outsb
dec
pop
push
push
jg
pop
outsl
xchg
outsb
sbb
sbb
lock
jge
mov
cli
ret
xor
aam
xchg
mov
mov
ret
sub
cs
and
push
subb
arpl
xchg
push
outsl
adc
insb
daa
push
shrl
push
inc
xor
xor
lret
aas
ds
mov
jb
inc
icebp
or
xchg
push
jne
std
xchg
dec
aas
sub
insb
xor
jmp
imul
loopne
mov
sub
sub
mov
adc
je
nop
aaa
repnz
fsubs
push
rcll
dec
or
cmp
aam
cmpsb
push
enter
or
add
insl
mov
enter
push
outsb
adc
iret
dec
daa
and
mov
push
xchg
pop
adcb
outsl
dec
test
or
mov
xchg
inc
mov
int3
out
popa
fiaddl
clc
lds
popa
mov
test
mov
js
mov
cmpsb
mov
mov
ja,pn
pop
rolb
js
scas
std
and
jae
iret
xchg
inc
addr16
ret
scas
insl
push
test
mov
sbb
adc
and
xchg
insl
popf
int3
mov
jae
sub
scas
ja
clc
cmp
and
pop
pop
mov
and
test
cmp
movlps
jno
fadds
out
or
jecxz
xchg
cmpsb
insw
dec
add
sbb
pop
sbb
loope
call
ljmp
jae
jge
pusha
pop
and
stos
ret
call
repnz
rcrb
xchg
push
js
push
outsb
sub
pop
sbb
addr16
jnp
outsb
shlb
jae
xchg
ds
cmpsb
mov
cvtps2pi
pusha
cli
push
loopne
and
and
jae
push
dec
icebp
fidivl
jnp
fidivrs
popa
es
int
outsl
jb
pop
fdivrs
pop
lret
xchg
insb
push
cld
cs
lea
push
cwtl
lock
loop
sbb
xchg
mov
sahf
scas
lock
in
xchg
cmpsb
sbb
rcll
sbb
cmp
iret
jp
ds
and
or
pushl
adc
push
cmp
push
push
sbb
jnp
or
push
jle
stc
lock
xchg
add
call
addr16
cmp
mov
repnz
dec
jge
sub
out
inc
lods
mov
pop
out
pop
iret
mov
mov
imul
outsl
ret
push
shl
and
sub
push
sub
sahf
jae
stos
out
dec
jno
and
mov
dec
data16
or
stos
loopne,pn
lret
jp
in
sti
sub
es
push
xchg
cmpsb
adc
test
popf
mov
push
mov
outsl
mov
xchg
clc
stos
out
or
dec
outsl
inc
les
insl
subb
mov
fimull
mov
lds
fs
push
jb
jnp
in
mov
mov
out
outsl
getsec
aas
std
dec
inc
in
xlat
loope
cmp
or
out
add
dec
jmp
or
shrb
pop
or
xchg
mov
out
pusha
mov
jge
enter
outsb
xor
icebp
push
mov
sub
xchg
xor
dec
repnz
arpl
jne
jb
jbe
in
add
push
adc
mov
scas
mov
xor
lahf
lret
mov
cmpsb
in
movq
push
mov
out
jne
loopne
movsb
cld
test
rolb
out
jno
xchg
rcrb
ficoml
stos
inc
pop
add
or
insb
jae
adc
sub
repnz
call
or
fldt
insb
dec
adc
push
mov
mov
fsubrp
jmp
mov
sub
adc
mov
mov
jbe
aaa
push
in
fstpt
les
cmp
push
test
sbb
test
mov
sub
in
sub
scas
sbb
movsl
add
push
mov
mov
xor
xchg
push
pop
gs
sub
adc
rcrb
sbb
jo
lea
mov
cmp
stc
inc
insl
pop
push
shrl
mov
subb
jne
jb
pop
mov
cltd
sub
mov
cmp
aam
sub
add
adc
or
test
in
xor
jecxz
out
push
pop
jg
add
xchg
mov
add
stc
pop
sarb
xchg
dec
add
pop
int
xchg
js
in
data16
inc
addr16
inc
dec
lea
fdivs
add
pop
arpl
inc
jae
inc
lods
mov
adc
lret
jp
pop
es
mov
out
in
pop
pop
jecxz
loopne
add
sahf
repz
fcoml
lret
in
dec
dec
ret
daa
and
or
pop
pop
jp
add
cmc
es
sub
fimull
icebp
jnp
pusha
in
cs
jmp
add
sti
out
int3
cmp
add
cmpsl
cmpsb
xor
and
stc
add
sub
dec
add
jecxz
int3
jb
fdivrs
jno
jno
mov
fidivrl
mov
mov
dec
sub
clc
jne
dec
decb
cs
outsb
sbb
call
ljmp
movsb
xor
outsl
jle
jp
fpatan
xchg
xchg
mov
xor
movsb
iret
test
bound
popa
int3
outsb
jmp
mov
sbb
dec
loope
shlb
or
mov
jae
or
or
or
dec
fnstenv
sbb
imul
xchg
and
xchg
add
pop
data16
mov
inc
movl
inc
fcomi
dec
arpl
mov
dec
mov
enter
cltd
push
dec
popa
in
outsb
fisubrs
std
push
aas
mov
push
inc
clc
out
test
movq
aam
enter
and
lahf
sub
cmc
mov
sbb
lret
xor
mov
pop
inc
in
sub
aaa
ret
outsb
add
xor
xchg
dec
or
lods
dec
mov
int3
pop
jle
dec
xor
andb
fisubrs
add
out
xor
and
cld
lret
push
lds
push
pop
or
mov
ret
add
das
nop
and
mov
in
mov
aas
pop
xchg
jae
pop
dec
es
pop
dec
test
insb
jb
andb
xchg
xchg
fidivl
mov
fiaddl
and
inc
jae
cld
sbb
inc
add
inc
sub
pop
in
cmc
sub
sub
jae
out
or
cmp
xlat
ss
out
into
cld
out
xchg
scas
out
xor
in
adc
and
imul
cmp
loopne
add
sbb
fwait
mov
push
xchg
cltd
stos
and
cmc
fdivrl
xchg
xor
xor
jl
andb
sub
lods
lods
mov
jns
iret
je
ss
mov
mov
lods
test
and
out
cmc
adc
and
std
ljmp
repz
fwait
movb
ja
inc
add
outsb
jae
mov
outsb
mov
in
mov
mov
scas
mov
pop
call
imul
jle
shlb
in
add
jle
loope
cmpsb
test
push
inc
dec
sahf
lcall
in
enter
xchg
push
addl
lock
lret
sbb
add
addb
xor
lods
add
jno
bound
shrl
mov
jnp
add
sub
cmp
mov
ss
adc
push
and
pop
sbb
xor
or
pop
ret
cmc
adc
std
in
sbb
std
pusha
js
addr16
pop
jle
test
loope
ror
mov
adc
shl
pusha
outsb
jae
loope
jmp
mov
imul
dec
nop
xchg
fisttpll
fisubrl
jbe
repnz
xchg
cmp
sub
or
insb
mov
hlt
adc
mov
jl
out
imul
mov
xchg
dec
push
or
xchg
add
push
mov
xchg
dec
pop
xchg
repz
and
lods
sbb
out
rorl
cmpl
push
mov
adc
into
test
push
add
push
dec
cmp
js
test
mov
cmp
test
mov
dec
popf
movsl
in
repz
shr
les
lret
nop
in
stc
dec
into
dec
or
lahf
jb,pn
popf
popf
les
out
dec
mov
pop
or
xchg
test
sbb
xlat
or
mov
dec
test
or
dec
out
call
inc
add
data16
pop
mov
or
push
sbb
jb
inc
orb
lds
xchg
sbb
orb
cmpb
dec
icebp
pop
cmp
ss
idivl
std
xchg
dec
je
leave
sub
call
loop
xchg
mov
cmpsl
xchg
sbb
scas
gs
jbe
xchg
xchg
add
sub
ja
xor
sub
mov
xor
mull
in
lcall
pusha
pop
adc
mov
pop
mov
cmp
jno
in
dec
lods
adc
jecxz
pop
mov
push
call
lods
add
cmc
out
inc
jns
bound
adc
in
adc
imul
jae
imull
je
loop
add
xor
insl
loop
inc
jb
flds
loopne
pop
sub
in
pusha
lea
jp
mov
rorb
lock
fdivs
mov
mov
dec
inc
or
mov
ret
stos
sbb
cmp
in
pop
inc
data16
js
out
loop
cmp
xchg
aad
sub
lahf
push
or
fwait
push
add
push
cmpsb
cmp
xor
pop
cli
dec
scas
shll
and
test
mov
or
lock
mov
test
dec
sub
jge
cs
dec
add
cs
ret
repnz
les
add
out
sub
je
shl
xchg
mov
lret
jmp
push
das
int
adc
inc
outsb
fnsave
mov
and
sub
pop
add
dec
out
mov
es
adc
test
ret
pop
shll
ds
pop
cmp
out
mov
sti
sub
fnsave
xor
imul
movsb
data16
xor
cmp
adc
lock
stc
popf
or
and
push
pushf
notl
movsl
out
sar
stos
pop
scas
xchg
or
rcl
sbb
inc
sub
ficomps
push
inc
cld
inc
insb
sbb
dec
fidivrl
push
inc
push
or
stc
ja
push
enter
or
xchg
clc
xchg
imul
scas
xor
xchg
push
test
mov
ret
dec
ljmp
add
in
mov
in
test
ret
lret
dec
js
jae
gs
push
pop
xchg
out
add
in
cmp
add
push
ja
lock
repz
add
hlt
sub
ja
jae
je
or
ljmp
push
or
mov
pushf
pop
popa
insl
ljmp
sub
fcoml
pusha
push
or
jns
pop
lods
icebp
mov
test
mov
mov
loope
scas
test
inc
xor
push
pop
scas
outsl
shll
scas
adc
or
lock
scas
mov
outsb
inc
jns
cmp
shll
xor
iret
movb
cmpsl
adc
push
dec
push
mov
outsb
jle
push
xchg
push
pop
lret
jnp
cmp
mov
ficoml
fs
sbb
pushf
imul
pop
fcoms
outsb
sub
cld
inc
stos
adc
rcll
xchg
int
scas
mov
insb
cmp
daa
outsb
stc
mov
jae
add
cwtl
mov
sub
in
out
in
jae
or
xor
andl
jmp
movsl
xor
add
call
das
adc
fsubrs
mov
imul
loop
xchg
cmp
clc
push
adcb
movsb
movsb
push
loop
fildll
scas
cmp
imul
adc
mov
fmulp
cld
outsb
mov
pop
add
iret
arpl
xor
orl
xchg
mov
in
arpl
dec
jae
sub
cmp
jne
orb
sub
movsb
pushf
pushf
or
cmpsl
loop
adc
arpl
insl
dec
cmpsb
insb
imul
insb
in
call
push
fiadds
int3
pop
enter
cmpsl
into
leave
jge
lods
test
dec
js
dec
pushf
lea
outsl
jge
sub
cmpb
test
lock
sub
call
into
pop
mov
jne
jg
bound
lods
pop
fidivrl
into
jae
insb
or
dec
in
into
out
out
jnp
ficoms
std
loop
inc
xorl
xchg
mov
shll
in
mov
xchg
cmpsb
mov
fsub
sbb
xchg
movsb
xchg
in
fs
ret
inc
sub
in
shl
push
insl
pop
bzhi
arpl
cmpsb
sti
es
adc
int
aas
mov
icebp
jo
ret
adc
scas
jae
xchg
sbb
insl
dec
daa
adc
loop
insl
es
xor
out
cmpb
fsubrs
inc
ljmp
jb
shrb
cmp
dec
or
pushf
mov
addr16
xchg
mov
nop
scas
pop
and
fidivrl
int3
mov
addr16
mov
ror
xchg
lods
cltd
loope
repnz
inc
add
cwtl
xchg
push
ror
xchg
sub
add
mov
push
gs
jmp
je
shlb
xchg
test
mov
mov
sub
push
sbbb
enter
mov
incb
push
clc
into
cmpsb
out
pop
frstor
into
sbb
fsub
int3
jecxz
or
pushf
mov
dec
mov
icebp
in
cmp
push
out
push
xor
cmp
xchg
data16
and
inc
mov
jmp
xchg
out
mov
mov
in
loope
push
jno
mov
incl
dec
jae
sbb
outsl
sbb
inc
scas
dec
xchg
das
and
les
lods
scas
and
and
add
cwtl
test
sbb
add
repz
jne
pop
inc
pop
xor
and
xchg
pusha
mov
sub
mov
mov
outsl
out
sbb
pop
sub
dec
xchg
and
test
fs
push
xchg
movsl
mov
daa
out
mov
mov
addr16
movsb
loopne
mov
sub
outsb
out
add
jl
sub
add
les
pop
jmp
dec
mov
cmpsb
cli
sbb
fcomps
xchg
pop
dec
rcr
in
bsr
dec
jnp
jg
shlb
sti
dec
cs
mov
ret
ljmp
push
bound
int3
sub
adc
adc
and
fsubr
sub
clc
fnstsw
mov
dec
scas
je
mov
mov
ss
outsl
pop
enter
ret
inc
fs
jae
add
mov
mov
dec
into
jbe
in
out
sbb
mov
mov
pop
sbbl
outsl
jno
testl
lret
adcb
jae
sub
int3
and
and
jno
push
sahf
shrb
loope
push
pop
xor
dec
stos
sub
out
ja
add
mov
and
pop
outsb
pop
je
jle
push
lock
or
aad
pop
shrl
ljmp
dec
dec
jns
in
addr16
fs
icebp
rorl
out
mov
cmpsb
push
add
dec
mov
and
pop
sti
cs
rep
cli
imul
mov
push
ljmp
add
test
aas
clc
add
pop
jnp
mov
and
inc
out
and
insb
push
out
sbbb
mov
add
mov
int3
enter
jns
and
inc
mov
in
loope
in
jb
loopne
andb
jb
jae
add
mov
xchg
push
jb
sti
pop
fcomip
dec
jno
lret
or
dec
xor
outsl
jl
fmull
in
pop
mov
push
push
cmc
mov
scas
push
jge
adc
sbb
ljmp
in
jb
bnd
sti
outsl
arpl
clc
mov
mov
orb
addr16
push
jnp
popf
ja
pusha
mov
mov
cmp
out
call
data16
mov
orb
pop
cmpb
pop
jno
jb
inc
push
outsb
dec
iret
out
arpl
loop
dec
xor
in
jnp
hlt
psubd
cld
invlpg
dec
push
in
outsb
addr16
xchg
std
dec
dec
je
in
negl
out
xchg
lahf
in
push
inc
enter
dec
nop
mov
outsl
in
mov
xor
lcall
mov
outsl
jbe
cmovae
outsl
xchg
cli
loop
lcall
fists
ja
call
fiadds
push
out
insl
loope
aas
popa
in
push
int
gs
mov
jbe
std
dec
enter
test
bound
inc
lock
outsl
scas
out
in
outsb
addr16
pop
insl
lods
in
enter
test
scas
dec
out
mov
sbb
dec
jbe
in
xor
out
xorl
les
cmpsb
push
jae
mov
sub
and
inc
subb
push
rorl
lret
repz
or
aad
rep
ljmp
dec
outsb
mov
adc
mov
pop
enter
fmuls
imul
mov
jle
add
sub
adc
cmp
pop
fldcw
inc
aaa
mov
push
push
loop
fisttps
push
call
outsb
out
test
mov
jno
movsl
insl
sbb
hlt
mov
dec
aas
rcrl
movsl
cmpsb
sbb
lods
repnz
cmp
pop
push
pop
xor
out
xlat
cmp
sbb
xchg
mov
stos
frstor
ss
in
out
int3
insb
mov
loopne
into
mov
push
push
fimull
dec
gs
jb
mov
jle
mov
ljmp
cmp
outsb
cmpsl
mov
jb
adc
add
push
ss
xor
das
mov
stos
loop
inc
sbb
mov
lods
jmp
aaa
arpl
inc
mov
in
clc
jae
out
pop
ss
pop
ljmp
cmp
mov
mov
add
lods
adc
push
xor
mov
mov
mov
push
mov
push
jp
mov
mov
rol
jno
out
xchg
jb
test
pusha
call
fs
adc
pop
adc
arpl
loopne
or
pop
push
mov
imul
mov
dec
scas
outsl
and
add
dec
jmp
sub
jo
dec
icebp
jle
mov
jae
ljmp
sub
cmp
cld
sti
popa
dec
leave
test
in
xchg
arpl
push
insb
push
jl
push
sub
in
out
fisubs
cwtl
outsb
mov
push
lds
test
jns
faddl
test
mov
call
lock
mov
scas
lahf
aas
dec
insb
stos
xchg
fwait
dec
imul
jae
cli
inc
mov
mov
jle
or
lea
cmp
or
shll
lods
jne
in
orb
aad
and
and
or
mov
daa
popf
paddusw
in
push
push
adc
mov
sbb
jle
push
jg
pop
cwtl
out
out
or
fidivrs
xorb
cmpsb
jmp
pusha
test
fistpll
out
inc
or
dec
adc
inc
xchg
ja
and
lcall
add
lock
jmp
sbbl
lock
xlat
fnstenv
push
fwait
in
shll
dec
xor
dec
dec
cmp
div
or
or
bound
out
out
or
rolb
push
push
cmc
imul
add
ret
jp
xchg
pop
call
loope
xchg
add
adc
mov
mov
mov
sub
addr16
out
loope
icebp
mov
icebp
push
pop
push
nop
nop
and
mov
repnz
and
xor
inc
adc
cld
mov
outsb
imul
lock
inc
shr
pop
jne
xor
jae
xchg
cmp
add
or
in
cmc
xor
repz
jnp
je
shlb
push
inc
mov
cmc
fisttps
lret
sub
push
add
std
jne
cmpb
dec
xor
mov
jne
mov
test
pop
mov
xor
fmuls
add
dec
xlat
fs
mov
dec
pop
sub
das
push
ret
cmpl
addr16
jecxz
xor
loop
sub
add
xchg
adc
jne
vpsrad
pop
xchg
movsb
push
dec
out
mov
sub
fldenv
sbb
cmp
jmp
and
xor
jecxz
test
mov
ja
adc
mov
push
xor
jno
cltd
mov
add
int
dec
push
data16
stos
ret
jg
xchg
addr16
pop
insl
ljmp
push
jmp
mov
mov
inc
and
mov
fcomps
cli
popa
mov
in
mov
dec
add
jae
dec
icebp
and
in
xchg
dec
dec
dec
outsb
add
fs
mov
or
aam
adc
addr16
mov
js
fnsave
mov
outsb
js
mov
cs
mov
jne
loope
mov
hlt
jae
push
mov
test
jae
daa
adc
mov
in
and
lds
popa
dec
enter
or
in
cmpsl
xchg
push
push
insb
shlb
test
push
in
enter
dec
mov
push
sub
xchg
sbb
lods
loope
test
lods
loop
jg
mov
adc
mov
sub
adc
xor
scas
xchg
fsubs
outsb
push
cmp
daa
data16
jge
iret
cmpsl
imul
cmpb
es
inc
decl
sahf
jg
repz
adc
mov
mov
ror
call
movsb
cltd
fidivrs
push
out
pop
das
mov
jg
iret
cmpsb
or
sub
mov
lea
jne
push
inc
lret
mov
jle
fnclex
mov
jmp
mov
mov
flds
sub
jg
fidivs
insl
pop
jmp
push
sbb
ja
adc
mov
sahf
mov
mov
mov
lods
dec
repnz
sbbl
jo
ret
in
in
scas
xchg
lock
push
mov
add
rolb
call
xchg
mov
adc
andb
push
pop
mov
popf
dec
jns
fsubl
arpl
lods
ja
add
movb
push
imul
out
cltd
in
stos
pop
jo
jne
nop
iret
out
ficoms
pop
mov
orb
andb
test
ret
outsb
xchg
mov
js
add
imull
bound
push
les
fxsave
add
pop
scas
out
lds
xor
outsb
cmovae
xlat
das
outsb
stos
mov
or
pop
sub
popa
mov
clc
out
imul
outsl
dec
outsb
push
mov
loop
fwait
xor
jno
mov
subl
and
push
xchg
pop
cld
out
dec
std
fimuls
dec
repnz
mov
sbb
repnz
or
jmp
cmpsl
test
xchg
dec
mov
fdivp
dec
lea
loop
out
pop
mov
jns
stos
inc
insb
insb
out
jbe
negb
pop
rcll
pop
daa
ljmp
sbb
push
imulb
mov
daa
jno
call
or
aas
movsb
iret
mov
call
pop
push
clc
push
nop
add
out
ss
sbb
inc
lods
out
mov
mov
jmp
mov
mov
std
out
rorb
dec
es
std
ljmp
leave
adc
sub
ss
push
mov
outsl
xchg
hlt
jle
cmp
lock
jp
pop
sub
bound
mov
out
pop
iret
xor
call
sub
outsb
insb
fs
add
lret
stos
or
test
add
mov
rclb
rorb
xor
fldenv
testb
stos
mov
add
mov
or
xorl
movq
cmp
push
in
insb
and
mov
in
loop
push
pop
add
out
sbb
ror
mov
insb
adc
jmp
jne
pop
dec
lods
dec
sub
movsl
lahf
jge
adc
xchg
outsl
add
loopne
jg
push
popa
mov
inc
jl
iret
jae
push
mov
data16
scas
in
adc
loop
movsb
xor
scas
dec
lahf
popa
push
ret
mov
sub
jno
pushf
cmp
push
xchg
dec
and
mov
mov
loop
imul
test
adc
lods
jge
pop
imul
mov
js
call
mov
daa
sub
sti
insb
pushf
sahf
add
pop
or
mov
out
jmp
in
jbe
jb
fstl
in
jne
stos
jl
mov
cmp
push
mov
shrd
push
xor
addr16
xchg
cmpsl
jge
in
xchg
mov
lods
dec
jecxz
jmp
daa
and
adc
cmp
int3
mov
xor
adc
pop
in
ret
loopne
outsl
mov
jne
nop
add
subb
push
sub
loopne
aad
mov
xor
test
fisttpll
ljmp
push
cmpsl
xchg
arpl
test
shll
gs
sahf
or
mov
pop
mov
cs
add
mov
dec
loop
or
push
sbb
and
cltd
jg
sbb
xor
addr16
in
lods
mov
sbb
ret
jb
push
jg
inc
insb
xlat
icebp
repnz
sbb
arpl
lods
pop
inc
xor
in
sbb
pop
sbb
cs
xchg
adc
cld
int
add
jns
sahf
out
scas
gs
stc
jge
idivl
and
xchg
mov
sbb
andb
repnz
icebp
inc
lret
adc
iret
out
mov
aam
push
jg
jb
arpl
dec
leave
ret
outsl
pop
jmp
or
leave
movsb
test
cli
xchg
xor
pop
add
aam
out
xchg
outsb
mov
mov
adc
inc
pop
in
sub
iret
test
cs
sub
lret
xor
idivl
call
inc
and
icebp
sbb
jmp
mov
and
divl
pop
lods
insl
rorb
xchg
and
mov
xor
add
sbb
out
mov
jne
cmc
push
pop
iret
mov
ja
cltd
imul
jmp
xor
xor
pop
cwtl
add
sti
mov
call
out
and
arpl
or
nop
imul
and
jne
mov
rorb
into
sti
dec
push
stos
mov
test
enter
addr16
inc
lcall
call
outsb
in
sbb
js
pop
jae
sub
int3
out
inc
pop
imul
bound
sub
test
test
push
jl
out
jne
mov
or
push
sub
ja
mov
iret
mov
ss
xchg
dec
push
test
outsl
jne
lods
test
and
js
sbb
dec
scas
ret
pop
clc
pop
mov
into
aas
in
cld
mov
nop
out
xor
repz
mov
adc
adc
in
insl
icebp
aad
out
push
or
out
jl
aam
or
and
aad
outsb
sub
push
arpl
mov
movsb
aad
push
cmpsl
mov
outsb
lods
loop
inc
lods
outsl
nop
iret
lods
inc
or
mov
and
adc
outsb
loope
add
mov
js
gs
outsl
cwtl
jae
add
pushf
fs
cmp
jle
imul
in
enter
inc
ljmp
mov
movsl
out
jns
dec
jle
mov
dec
hlt
out
loope
xlat
push
cmp
jb
call
cmp
or
pop
scas
add
inc
out
or
sbb
or
testb
repnz
mov
pop
dec
and
jb
cmpsb
sbb
mov
mov
inc
xchg
lock
int
or
mov
mov
ret
jae
inc
push
sub
add
shrl
mov
lea
xchg
and
imull
adc
in
std
or
in
rolb
jecxz
jmp
mov
xchg
in
scas
cmp
ljmp
js
mov
dec
xchg
ret
mov
mov
lea
test
popa
xchg
xchg
mov
jbe
add
mov
mov
cmp
jae
push
mov
pop
inc
popa
inc
dec
mov
insl
jg
xor
mov
leave
out
mov
and
and
push
ja
test
hlt
fadds
push
jecxz
push
rcl
jge
mov
pop
lcall
lret
jle
int3
mov
iret
sbb
sub
pop
xchg
es
int
out
push
and
mov
mov
cmpl
dec
pop
test
xchg
adc
lret
dec
add
movsb
inc
pop
xor
cld
sarb
jns
fdiv
add
add
aad
mov
add
jns
jmp
pop
in
sbb
push
loop
icebp
add
repnz
push
mov
repnz
dec
andb
dec
nop
bound
pop
push
dec
adcl
jg,pn
scas
mov
in
or
cs
daa
jge
jne
or
adc
sub
stc
bnd
or
iret
ljmp
bound
push
pop
movsb
mov
lds
insb
mov
sub
insl
idivl
mov
pop
pop
dec
lock
mov
aad
icebp
cwtl
pop
test
ljmp
pop
jae
leave
fnstenv
arpl
cmpsb
addr16
xor
mov
pop
int
nop
fcoml
aad
inc
lea
or
pop
mov
insb
jae
sbb
stos
sbb
mov
dec
jne
or
pop
aad
adc
cltd
mov
jbe
lret
push
ficoml
mov
ret
or
insb
or
push
push
cmp
dec
orb
ffreep
inc
fwait
push
scas
cmpsl
lods
adc
pop
or
out
repnz
pop
orl
or
jmp
mov
inc
jo
mov
loope
int
mov
adc
icebp
dec
int3
and
adc
jae
or
lds
test
scas
loop
lods
sub
xor
xor
movsl
decb
mov
push
sbb
add
je
lds
cmpsl
sbb
xor
loopne
jae
cmp
enter
stc
push
test
loop,pn
inc
in
or
jno
xchg
jge
and
cltd
fisttps
fdivp
push
jg
fsubrl
out
sbb
outsb
mov
ret
mov
jb
push
jno
inc
imul
pop
cmpsb
clc
testb
or
into
stos
jb
or
test
xor
fisttpll
cli
movsb
mov
ret
pop
add
adcl
les
lods
loope
dec
insl
shl
scas
ret
stc
movsb
sub
xchg
scas
dec
cltd
lods
insb
jae
je
sbb
sub
stos
stos
jmp
ljmp
cmpsb
clc
nop
int3
dec
and
mov
mov
lods
and
stos
adc
push
fwait
movsl
add
mov
inc
inc
ljmp
pop
inc
jb
les
lods
in
daa
cwtl
sarb
repz
stos
mov
xor
es
loopne
test
out
sub
sub
jmp
ret
adc
mov
mov
adc
icebp
or
int3
je
lret
sub
test
jle
jbe
stos
fmul
mov
ret
std
imul
insl
popa
push
icebp
adc
xchg
bnd
nop
mov
or
push
mov
mov
mov
bound
rcll
leave
xor
outsl
loopne
jnp
pop
leave
test
fldenv
clc
dec
mov
xchg
dec
test
in
dec
pop
xchg
xrstors
mov
data16
adc
cltd
jbe
addr16
add
push
jno
xchg
dec
pop
xor
outsl
icebp
adc
cmpsl
xchg
or
hlt
bound
push
cwtl
je
sti
loopne
addr16
lcall
jbe
xlat
and
rcrb
lea
xor
jg
and
clc
sahf
cmp
and
dec
out
sub
or
cmp
cli
push
mov
sbb
mov
jl
aad
out
repnz
adc
call
div
movsl
xchg
repz
add
in
in
adcb
outsl
jg
stos
xchg
out
hlt
xchg
sub
mov
mov
inc
ret
loope
push
inc
js
and
cmc
sbb
dec
and
loop
jl
mov
subb
jns
popa
ljmp
xchg
pop
scas
pusha
inc
insl
pop
das
js
insb
imul
sub
outsl
testb
ret
movsl
jbe
cld
jnp
cld
loope
mov
fisttpll
popa
xchg
scas
loop
adc
out
add
xor
mov
ja
sub
dec
out
mov
ja
test
cmpsl
stos
mov
dec
xchg
mov
ret
inc
add
repnz
in
or
lods
pop
in
lret
lods
imul
icebp
mov
es
out
test
ret
cmp
cld
shrl
sbb
add
fs
dec
and
cwtl
es
nop
andl
iret
ljmp
adc
outsl
fldl
dec
daa
lock
and
out
outsb
pushf
mov
dec
adc
in
scas
call
scas
out
fcomp
stc
call
mov
inc
outsb
xor
outsb
jl
pop
je
cmc
jle
pusha
insb
out
dec
ljmp
scas
enter
jp
inc
mov
jb
jns
push
inc
sbbl
mov
ret
movsb
cltd
sti
imul
scas
dec
xchg
xlat
cmpsl
rorb
sbb
mov
and
sbb
lods
mov
xor
stos
dec
mov
xor
or
cmpsb
cmp
pop
inc
jecxz
xchg
dec
jg
gs
lods
xor
jl
sbb
fmull
hlt
popf
jbe
outsl
shrb
add
push
xchg
add
movsl
cld
imul
jecxz
dec
out
in
and
mov
roll
push
movsl
add
jbe
xchg
inc
jmp
adcl
jg
inc
sbb
adc
xchg
mov
test
dec
out
pop
push
nop
dec
sub
add
jecxz
mov
popl
in
sbb
cmp
sbb
mov
icebp
sti
adc
in
loope
out
out
sub
xchg
int
sub
loope
cli
outsl
outsb
ror
enter
ds
sub
jle
push
jae
dec
lcall
ljmp
call
stos
inc
imul
pop
outsl
pusha
imul
in
and
dec
jg
call
ficomps
xchg
sahf
jae
pop
jecxz
es
cli
dec
outsl
xor
mov
sti
jno
cmp
mov
jge
inc
enter
xchg
and
inc
in
mov
mov
subb
push
sbb
push
addr16
xadd
jno
jg
jns
mov
js
imul
pop
lock
testb
addr16
or
push
push
or
lret
sub
push
call
xor
das
out
pop
test
lods
and
outsl
ret
jl
nop
imul
sub
jle
out
sub
mov
xchg
lock
in
mov
les
sub
shrb
ficomps
in
and
scas
jmp
sbb
or
jne
addr16
insl
pop
sbb
in
mov
or
and
test
push
call
push
dec
imul
dec
adc
lahf
mov
movsb
jmp
into
enter
xchg
scas
or
ret
out
mov
test
decl
and
enter
push
jmp
sbb
inc
insb
jmp
add
or
iret
mov
pop
mov
mov
lods
out
shl
loope
lcall
xor
lock
sub
xchg
xchg
jg
in
inc
cmp
insl
pop
cmp
or
sub
push
outsl
pop
leave
jg
jns
push
scas
dec
mov
cmpsb
inc
in
sub
out
ds
repnz
lcall
outsl
adc
sub
push
cmc
jno
mov
inc
xorb
mov
push
fldt
call
jecxz
scas
addl
adc
pusha
ss
cmc
push
jb
xchg
pop
mov
push
scas
cmpsl
dec
scas
push
lret
pop
arpl
pop
jl
mov
in
aas
and
insl
jle
pop
out
aaa
testl
pop
mov
gs
add
push
insb
pushl
xchg
in
jmp
jne
inc
in
aaa
shrb
cmp
gs
and
enter
mov
shlb
push
add
cmpsb
jg
dec
nop
push
push
clc
pop
ljmp
inc
xchg
dec
out
scas
add
popf
jb
jbe
in
addr16
jne
xchg
pusha
out
mov
aaa
sbb
js
add
pushl
cmp
xor
sti
mov
pop
inc
stc
pop
lds
negl
mov
aam
push
dec
stc
in
repz
vsqrtps
mov
xor
and
push
sbb
call
jmp
jmp
mov
mov
adc
dec
call
testb
incb
add
inc
addr16
enter
mov
fbstp
mov
hlt
scas
cltd
jnp
jl
in
add
add
dec
sbb
inc
push
ret
sbb
leave
das
bound
inc
cmpsb
leave
decl
pop
lahf
gs
in
push
jge
fnsave
shlb
iret
stos
loop
sub
ret
out
in
sbb
std
sti
cmpb
ret
cld
mov
jge
mov
dec
and
and
jbe
into
jecxz
scas
bound
arpl
dec
lods
mov
push
add
into
jle
loopne
mov
arpl
push
scas
add
hlt
arpl
popa
stc
fldt
sti
sub
lds
inc
sub
icebp
clc
dec
cli
xchg
dec
scas
stos
push
and
add
cmpsb
cmovle
inc
sarl
hlt
iret
sub
decb
sub
lock
inc
mov
xor
xor
jp
dec
call
stos
outsb
xchg
loop
pop
jb
inc
fcoms
or
fcmovb
sub
lock
add
mov
out
je
arpl
xchg
cmp
push
sub
mov
pop
fisttpl
cmpsl
pusha
repnz
jg
popa
rep
ja
out
pop
icebp
inc
add
insb
fisubrs
div
loop
and
jecxz
call
xor
test
loop
pop
push
cld
int3
cs
dec
insb
jle
inc
in
sbbb
mov
lret
or
push
int3
mov
enter
addr16
cmpsl
xchg
es
inc
cmpsb
xchg
and
movsl
popa
sub
add
repnz
xchg
jg
into
bound
xchg
out
icebp
mov
repnz
mov
jle
push
in
pushl
data16
lock
nop
rorl
push
push
std
push
mov
loop
adc
shll
pop
enter
mov
sahf
xchg
lods
xchg
lahf
or
sbb
jne
shrb
insb
xor
dec
pop
push
push
fmull
icebp
icebp
sbb
mov
leave
aas
lods
inc
jns
add
rcrb
add
idiv
sahf
arpl
fiadds
test
mov
pop
lods
dec
jae
popa
and
add
jb
lods
in
push
arpl
mov
cwtl
mov
xchg
adc
mov
jo
loop
xchg
scas
adc
loope
fidivl
cmp
push
or
rorl
sub
push
adc
sbb
leave
mov
mov
mov
dec
adc
ja
lahf
out
lods
fdivrp
out
jae
sbb
rcrb
lods
sbb
test
dec
jbe
std
rolb
outsl
fiaddl
and
jns
lods
mov
pop
mov
dec
jae
jns
dec
mov
bound
les
cmp
lret
fildll
jb
fbld
adc
inc
jnp
out
jae
pop
mov
adc
hlt
aam
push
or
jne
sbb
mov
cmp
push
icebp
jb
lahf
or
pop
mov
test
mov
dec
cmpb
dec
test
and
call
mov
jge
xchg
pusha
repnz
lret
or
sbb
push
pop
icebp
daa
or
repz
ss
fs
movsl
mov
les
cld
dec
out
std
mov
decb
sub
ljmp
push
popf
dec
addb
add
mov
scas
cltd
int
sbb
mov
enter
mov
incl
push
insb
xor
into
push
push
scas
pop
and
outsl
insb
xchg
adc
mov
xchg
push
test
jno
dec
pop
loopne
xchg
fstpl
cltd
bound
push
mov
mov
inc
pushf
cmp
push
ss
push
inc
and
cltd
in
and
cmpsb
mov
pushl
je
cli
mov
cmp
out
mov
sbb
add
dec
xchg
popf
adc
lahf
aad
cs
sbb
dec
jp
cwtl
mov
pop
das
and
enter
inc
mov
gs
out
mov
outsl
test
sbb
or
dec
and
jg
in
nop
xor
call
ljmp
lods
jae
mov
test
loopne
or
cmp
push
enter
imul
data16
mov
or
outsl
xchg
jnp
lds
xor
in
repnz
in
sub
ret
dec
shld
xor
ds
push
stos
test
lret
dec
and
cmc
adc
jp
mov
sub
imul
stos
out
adc
push
nop
lods
in
les
push
and
test
repz
mov
aam
insb
mov
scas
ret
cmp
push
scas
enter
cld
aam
inc
lcall
fwait
jno
and
jecxz
xchg
fidivs
xchg
push
mov
add
je
movsb
push
insb
mov
jl
push
push
in
rcr
shrl
cmpsb
sub
dec
clc
popa
mov
arpl
test
add
out
lods
push
addr16
mov
lods
mov
inc
out
mov
scas
movsb
sub
mov
lahf
mov
pop
ja
push
mov
sub
insl
andb
lods
or
pop
ja
in
inc
fwait
outsl
push
cmp
aam
loope
popa
add
sahf
or
movsb
xchg
fsubrp
mov
enter
sub
adc
jecxz
cld
xor
and
lods
ficoms
sub
and
icebp
pop
in
jg
mov
fwait
shrl
popa
movsl
call
mov
int3
xchg
add
dec
in
test
cmpsl
push
jae
insb
pop
outsl
and
pop
bound
ja
frstor
aas
jp
dec
jl
jmp
fs
push
repnz
icebp
imul
dec
push
adc
dec
ds
in
mov
xchg
in
movsb
sub
ljmp
sub
dec
jg
mov
jmp
inc
shlb
push
lret
jmp
popa
outsb
in
stc
add
dec
add
or
fcoml
jp
lahf
pop
movb
fstps
in
mov
mov
xchg
or
jnp
mov
insl
adc
dec
mov
inc
or
nop
call
fsubrs
dec
xchg
jl
fists
bound
dec
popa
jb
pop
and
stos
data16
jg
jbe
xchg
push
sbb
daa
out
lret
shrb
data16
mov
int3
inc
add
popf
xorl
arpl
orl
bound
or
mov
das
les
jnp
cmpsb
xchg
or
scas
xchg
xchg
cmpsl
jno
insb
fs
mov
push
dec
push
xor
sub
inc
push
lock
dec
ret
sbb
or
ffreep
mov
jne
mov
and
out
pop
mov
insb
lds
and
das
fs
pop
enter
dec
seta
sub
int
add
fldenv
dec
xorb
jge
dec
or
lods
cld
cmp
out
cs
mov
push
xchg
outsb
dec
push
cmp
iret
imul
mov
lock
and
pop
and
call
xchg
outsl
fildll
mov
scas
mov
sub
call
dec
in
shlb
push
mov
jmp
testl
test
dec
pushf
dec
arpl
xchg
add
adc
xchg
add
sub
int
dec
xor
xchg
pop
insl
mov
sub
in
imul
test
mov
in
mov
imul
mov
push
jb
mov
cld
and
or
loopne
pop
faddl
jmp
and
call
dec
mov
mov
dec
push
cmpsl
inc
fwait
jmp
cmp
dec
inc
jge
dec
sti
xchg
push
sub
mov
add
push
addr16
scas
out
lods
lret
mov
mov
pushf
ljmp
xor
xchg
je
loopne
xchg
lcall
sbb
cmp
ret
imul
add
dec
or
or
push
ja
rol
fbld
jmp
cmp
mov
or
repz
clc
pop
shlb
inc
outsb
jecxz
cmpl
dec
fdivrl
push
cld
cmpsl
int3
out
xchg
push
outsl
ret
and
arpl
jl
test
int
lahf
mov
scas
fs
xchg
jae
cmp
mov
sub
stos
loopne
or
mov
sub
and
test
or
ret
nop
jmp
xchg
jnp
sbb
xor
xor
sub
pop
or
es
push
jbe
push
test
adc
popa
jae
push
out
push
pop
dec
sub
jo
enter
gs
gs
roll
testl
jne
sar
cmpb
ret
pusha
or
test
arpl
xchg
jl
inc
sub
bound
loop
dec
inc
pop
loopne
mov
xor
pop
sub
dec
lea
cltd
fsubl
mov
dec
dec
jmp
push
push
clc
jecxz
jbe
bound
push
in
shrl
dec
test
lret
pop
add
mov
ss
xchg
cld
lods
daa
sbb
lods
pop
push
ret
insb
adc
ljmp
loopne
dec
les
iret
adc
outsl
scas
cmp
scas
lods
stos
out
scas
pop
jmp
add
shll
push
push
sbb
movsb
insb
and
mov
inc
add
add
mov
sbb
and
mov
shrb
repnz
lret
cli
outsl
ja
ja
mov
or
push
dec
sub
pop
lret
test
cmp
outsl
mov
xchg
mov
outsb
xchg
sbb
lea
pop
push
cmpsb
cwtl
cmp
jg
jnp
xor
lock
popa
mov
imul
popa
push
jge
iret
push
mov
outsl
fwait
or
repz
dec
sti
das
ret
jle
fldenv
daa
pop
enter
sti
mov
mov
mov
das
sub
insb
pop
and
addr16
lcall
test
push
adc
xorb
sbb
cmc
les
enter
xchg
mov
scas
into
jb
pop
or
inc
call
sbb
ret
mov
mov
out
fisubl
pop
in
or
sbb
cmpsl
es
sti
aas
mov
movsb
or
incb
inc
insb
shl
jmp
iret
das
test
jbe
movsl
jb
mov
out
ret
push
xlat
shrb
scas
push
sub
cltd
loop
mov
in
push
pop
fwait
dec
loop
iret
test
stos
outsb
push
mov
pop
stos
dec
sbb
gs
insb
dec
imul
outsb
and
mov
icebp
out
outsb
mov
testb
push
loopne
cs
int3
jle
in
push
pop
je
add
cld
xor
outsl
out
xor
and
lret
jno
add
add
mov
adc
xchg
std
cmc
icebp
xchg
inc
mov
testb
scas
mov
sub
cmp
imul
je
mov
xor
popa
jbe
aaa
int3
push
int
fldl
push
pop
out
dec
cld
into
cmpb
test
mov
lods
or
insl
je
lret
pop
stos
test
iret
daa
hlt
dec
bnd
das
push
out
adc
jg
out
ret
push
push
adc
mov
pop
push
inc
cmp
sti
in
mov
js
pop
pop
gs
jno
and
fidivl
fs
sbb
inc
loope
cld
insb
pusha
xchg
imul
mov
aaa
movsb
pop
ret
cwtl
sbb
mov
fs
push
add
nop
and
ljmp
push
out
loop
jmp
jb
sub
lret
test
in
xchg
shll
add
mov
icebp
xchg
sub
dec
mov
daa
push
dec
icebp
pop
divl
push
iret
inc
pop
repnz
cld
iret
addr16
call
inc
jae
mov
and
out
daa
int
ret
sub
push
jae
imul
jge
int3
jg
cmpsl
mov
xor
xchg
in
mov
sub
data16
out
data16
mov
out
repnz
mov
movsl
push
pop
cmp
inc
imul
or
repnz
cmpl
dec
scas
addr16
inc
mov
jge
and
adcb
mov
inc
mov
repz
movsb
outsb
sbbl
call
aad
ds
bound
lock
sarl
movl
pop
add
outsl
and
push
mov
xchg
push
scas
sahf
ja
pop
out
inc
repnz
out
test
dec
mov
inc
dec
jb
xchg
sbb
test
addl
addr16
xchg
mov
jbe
imul
lcall
outsl
cs
fbld
test
mov
inc
and
icebp
push
mov
mov
fildll
push
push
out
cmp
les
repnz
leave
sub
arpl
call
add
les
mov
sub
not
in
mov
lock
mov
addr16
out
sub
leave
inc
lret
lahf
ret
enter
dec
mov
lret
fidivs
lods
repnz
test
pop
pop
scas
ret
subb
cmpsb
pop
jg
mov
xor
sbb
out
sub
jb
xor
adc
cmp
pop
test
mov
jmp
dec
xor
cmpsl
imul
add
add
les
sub
aam
adc
jg
movsb
mov
adc
int3
lret
fwait
adc
push
lock
jg
lods
imul
and
aam
out
int3
jae
mov
std
pusha
ret
and
pop
movsb
jae
inc
imul
in
or
in
stc
push
mov
js
dec
std
cld
or
iret
push
push
adc
std
nop
outsb
add
mov
out
movsb
and
cmp
sub
mov
and
std
iret
aam
xor
test
push
ficomps
loopne
shlb
jne
jp
xchg
mov
repz
movsb
mull
mov
ret
rorl
mov
dec
mov
jg
stos
jg
or
frstor
xor
cs
dec
call
movsb
mov
lods
push
adc
cmp
es
hlt
aam
pop
xchg
in
xor
mov
cld
pushl
pop
test
mov
xchg
addr16
mov
add
fildl
dec
ficoml
jg
inc
int
cmp
adc
sbb
jmp
fnclex
call
xor
fbstp
mov
dec
ja
lds
cwtl
add
cmp
insl
mov
pop
jb
jno
dec
outsb
sub
dec
call
adc
clc
xor
outsb
inc
push
stc
testb
add
loope
test
mov
stc
sub
lret
leave
out
push
push
jbe
mov
jnp
pop
jae
call
fisubrl
pop
jnp
inc
call
sbb
dec
cmpsb
ja
add
pop
push
std
pop
dec
jb
fwait
dec
es
pop
inc
mov
iret
stos
sbb
stos
or
outsb
data16
mul
and
cmp
add
shrl
lea
cmp
dec
data16
cmp
jne
xlat
push
jg
push
shr
dec
divb
sbb
mov
outsl
fmuls
jb
push
daa
lods
cld
leave
leave
outsb
cmp
fs
sub
add
fdiv
mov
cwtl
movsl
inc
imul
stc
mov
lods
out
test
sahf
mov
outsl
imul
shrl
out
and
aam
scas
mov
mov
movsb
subb
jge
je
lret
cmp
xchg
imul
incb
mov
stos
shlb
je
pop
jne
enter
jae
fimuls
outsl
dec
push
mov
xchg
out
xlat
cltd
sbb
xchg
jmp
outsb
adc
gs
rcl
sbbl
mov
pushf
inc
test
adc
cli
lods
outsb
arpl
jle
push
js
inc
or
push
mov
sbb
in
imul
sahf
test
jnp
fstps
or
ljmp
mov
or
gs
mov
jge
xchg
lods
cmpsb
and
dec
jae
insb
add
xchg
in
jp
rclb
mov
sub
out
movsl
ret
repnz
xchg
into
rcrb
out
jae
dec
jns
jge
xor
je
clc
movsl
sti
pop
rcll
loopne
das
out
dec
sub
fucomip
mov
jae
aas
dec
stos
or
ficoms
stos
jmp
mov
stos
add
push
add
jb
dec
and
into
lret
ret
xor
enter
insb
mov
cmp
ficompl
mov
insl
lcall
inc
mov
cmp
mov
cmp
repz
sub
push
outsb
pop
jg
sub
cmp
shl
jbe
scas
out
mov
orl
test
adc
adc
mov
cltd
xor
in
fdivp
lods
xchg
or
jnp
sub
lods
sbb
cmp
dec
iret
fiadds
lods
stos
push
add
sti
decb
or
outsl
dec
nop
dec
testl
cld
jbe
inc
lock
test
dec
xor
and
hlt
imul
add
cmpsl
lods
ffreep
cmc
mov
mov
shrb
mov
add
das
mov
iret
insb
jne
sbb
daa
loop
push
mov
inc
jg
cmpsb
mov
lret
push
jl
xchg
test
mov
jl
movsb
sbb
add
bnd
mov
sbb
clc
sarl
cmc
jae
dec
jle
add
sbb
mov
add
cli
sbb
repnz
test
jg
leave
add
je
xor
into
loop
fucomip
sub
sbb
cwtl
sub
sbb
add
jns
mov
add
andnps
addr16
mov
jle
fmuls
jne
scas
sbb
mov
xchg
roll
outsl
sbb
and
test
inc
lods
jg
cmc
inc
or
dec
lock
dec
sbb
test
daa
jnp
loopne
shlb
mov
addb
mov
jnp
out
insb
loop
xchg
mov
push
mov
enter
push
les
jmp
mov
xchg
jns
add
fwait
dec
loopne
or
dec
lods
addr16
add
and
aam
sahf
or
fisubrl
cltd
push
sbb
adc
int3
call
fstps
fisubs
ret
out
test
mov
jbe
in
mov
clc
shl
sub
mov
add
jmp
mov
fs
pop
imul
xor
bound
dec
xor
insb
mov
mov
addr16
push
push
bound
mov
xchg
dec
cmpsl
and
insb
in
ljmp
jl
pop
out
and
jae
or
jge
push
dec
jmp
mov
fucom
popa
and
mov
orl
xchg
jg
and
inc
ss
mov
jno
xchg
xchg
mov
enter
sbb
xor
fstl
loop
subl
dec
pop
cld
jle
dec
pop
inc
adc
int3
outsl
xor
sarb
lods
outsb
fldt
and
inc
aas
xor
enter
in
lahf
movb
lret
xchg
lock
call
push
push
aad
cs
lahf
adc
loopne
loope
mov
outsl
shrl
into
mov
es
sub
xor
cmpsb
out
scas
dec
and
xchg
repnz
imul
and
sarl
mulb
inc
test
icebp
movsl
or
pop
or
mov
add
jg
cmp
jmp
rcl
dec
in
fdivrl
xchg
popf
push
divl
jno
out
fs
pop
leave
in
pop
mov
loop
ja
stos
lds
dec
ret
loop
mov
xorl
jle
dec
dec
sbbb
jmp
mov
out
ret
xchg
scas
insl
jns
push
jnp
ja
shlb
cltd
mov
imul
xchg
mov
cmp
push
jnp
pop
xchg
push
inc
movsb
cmp
outsl
push
fldt
adc
scas
in
push
or
gs
movsl
sbb
jmp
jbe
ss
hlt
inc
icebp
xor
jb
fcomps
sarb
mov
fmull
dec
call
sahf
fists
jl
std
dec
cmp
fisttps
xchg
mov
and
cmc
out
sahf
sbb
popf
loop
mov
inc
jecxz
add
je
dec
sbb
mov
add
ficoms
imul
pop
loop
pop
in
and
clc
inc
out
cmpsl
cmc
mov
pop
out
das
xchg
inc
insb
hlt
push
push
call
lea
push
mov
xchg
in
xor
int
push
pop
test
jp
xor
jno
sbb
mov
daa
out
add
aaa
lret
ficoms
divl
pop
sub
test
xor
scas
outsl
bound
mov
jae
adc
loope
mov
dec
lods
or
aas
xorb
ljmp
lret
adc
adc
mov
aas
or
inc
jg
test
jg
scas
or
or
mov
int3
and
add
xchg
cmp
shr
xchg
push
mov
insl
out
insl
mov
aas
and
das
fldl
xchg
jg
jno
das
fiaddl
imul
dec
push
add
mov
out
sub
pop
cld
jecxz
mov
insb
sub
loope
jns
call
out
or
or
or
push
addb
push
push
pushf
or
fs
push
pop
sub
push
sub
xor
bound
insl
lcall
inc
fs
ret
cmp
adc
adc
sbb
scas
add
insb
in
push
hlt
imul
imul
pop
push
outsl
fcompl
mov
sub
jnp
les
out
mov
negl
push
call
pop
arpl
into
cmp
lcall
stos
mov
icebp
xchg
add
out
mov
mov
xor
fcoml
call
add
sub
rep
pushf
or
insb
arpl
mov
xchg
mov
aad
popa
test
loope
daa
jnp
popa
popa
cli
dec
daa
pop
cmpsb
dec
scas
dec
cmp
xor
pop
je
test
dec
sbb
mov
stos
cld
or
and
dec
jns
repnz
inc
loopne
jae
push
xchg
mov
enter
mov
cmpl
es
push
arpl
std
testl
add
scas
mov
mov
stos
movsl
adc
fstl
out
cld
popl
in
or
mov
mov
clc
clc
repz
hlt
dec
dec
dec
into
scas
xchg
ja
sbb
cmp
cmpsb
push
int3
inc
add
mov
mov
ror
jae
fucomp
jno
sbb
arpl
or
scas
icebp
or
pop
out
outsb
test
cmp
jae
pop
and
fnsave
negb
mov
lahf
sub
iret
jmp
mov
int3
push
pushf
int3
dec
add
sahf
pusha
pop
addr16
jno
mov
cmp
and
rol
mov
lods
pop
in
jae
or
mov
cmp
jg
call
fldcw
mov
stc
aaa
xlat
out
add
in
mov
push
lods
icebp
shl
dec
ror
sbb
das
enter
xchg
or
sub
lods
in
dec
into
and
push
mov
push
sbb
pop
outsl
inc
cmp
jb
sbb
roll
mov
jg
mov
call
sub
and
jmp
js
clc
push
mov
jo
jg
adc
xor
dec
or
pop
aaa
xor
mov
sbb
jns
repz
das
lret
mov
movsb
mov
lret
inc
inc
sbb
stos
inc
adc
sarl
popf
loop
repnz
aas
test
jg
in
imul
sbb
jecxz
sbb
push
dec
ja
jno
mul
dec
addb
repnz
push
lock
inc
push
aas
out
imul
sbb
pop
sti
mov
xabort
add
popa
enter
lock
pop
mov
inc
int3
shll
xchg
xchg
mov
scas
in
mov
jecxz
push
jg
loop
gs
iret
les
imul
nop
loop
push
add
sub
mov
mov
mov
pop
pushf
daa
push
ja
sahf
nop
mov
sub
test
and
cld
cld
scas
divl
insb
jmp
xchg
out
push
call
mov
insb
mov
scas
insl
cmp
cltd
push
mov
sahf
loop
dec
jbe
call
jmp
xorb
popa
aaa
stc
xor
mov
xor
pop
lahf
stc
lods
leave
outsb
adc
xchg
loop
sbb
inc
popf
push
popf
mov
call
outsl
mov
aam
rcrb
jmp
xchg
dec
mov
outsb
outsb
mov
lds
fnstsw
jmp
out
xor
xor
call
test
fdivl
pop
sbb
int
xchg
je
in
in
scas
jne
out
loopne
jg
cs
cmp
daa
shrb
icebp
loopne
xchg
cmp
push
sbb
lret
mov
fisubs
add
jae
push
pop
bnd
ret
xor
jp
or
and
sbb
sbb
and
in
jns
cmp
or
cld
es
je
pusha
pushf
in
mov
roll
loope
xchg
int3
jg
cltd
jae
gs
cmpsb
mov
mov
inc
mov
sbb
add
repnz
sbb
lret
mov
lock
xor
pop
and
iret
mov
lcall
ss
push
imul
mov
push
jle
cmc
popa
add
imul
mov
inc
jno
rcrl
xor
test
dec
insb
push
imul
adc
test
sbb
dec
xor
mov
stc
rorb
mov
or
loop
inc
push
shlb
rorl
xor
scas
dec
xchg
and
push
xchg
das
pop
push
sbb
mov
cli
xor
dec
lds
lahf
or
pusha
jge
add
fldcw
enter
in
push
stc
xor
shr
insl
sti
sub
jns
inc
stos
adc
xchg
cwtl
mov
xor
or
out
call
push
lret
jns
cmpsb
xor
fsubrl
iret
pop
ret
outsb
test
loope
es
mov
dec
ret
andl
lods
mov
gs
mov
addr16
jp
test
jg
add
inc
add
mov
scas
lea
outsb
dec
insb
sarl
and
ds
mov
sahf
and
and
xchg
dec
jg
and
call
sbb
dec
jae
and
fsubl
int3
jmp
loopne
jmp
xor
inc
pop
add
xchg
jl
aam
mov
ljmp
imul
mov
jmp
movsl
inc
jns
mov
shll
xchg
or
cmp
test
add
pop
outsl
sbb
sub
and
push
test
movsl
out
out
jmp
pop
jmp
xchg
mov
movsb
mov
das
xchg
and
ret
popf
mov
mov
stos
ret
or
loop
out
lcall
call
repnz
shlb
mov
test
in
adc
pop
sub
dec
scas
mov
adc
pop
scas
xchg
sbb
stc
and
pop
loope
xchg
mov
inc
fmul
adc
jno
roll
and
xor
or
pop
das
and
sub
mov
popa
outsl
decl
dec
inc
adc
or
rcrb
add
mov
shlb
rcr
ljmp
ss
jle
pushf
call
jmp
popf
and
cmp
jne
xlat
mull
pop
jae
adc
orl
rorb
xchg
or
rorb
add
imul
push
or
adc
jne
lret
cltd
or
mov
mov
pop
pop
arpl
aas
or
pcmpgtd
jge
iret
les
pop
lods
in
xchg
movsb
sub
loopne
or
push
inc
adc
push
outsl
pop
cli
inc
addr16
cmp
dec
insb
mov
sbb
dec
pop
dec
cmpsl
loopne
popa
xor
cmp
repnz
mov
and
cli
jg
dec
cwtl
mov
loope
sbb
sbb
jmp
outsl
scas
push
out
jmp
outsb
mov
mov
inc
push
jne
xor
icebp
scas
sbb
push
dec
imul
data16
fs
mov
aad
pop
js
dec
cmpsb
dec
sub
jle
nop
push
es
cmp
xor
pop
nop
mov
std
pop
outsl
in
lahf
mov
and
jp
adc
mov
ret
shrb
xor
test
or
cli
push
ja
aaa
int
pusha
pusha
mov
fmull
mov
lods
push
mov
nop
loope
xlat
jbe
int3
test
mov
sub
cmpl
and
mov
xchg
mov
cmp
and
pusha
enter
mov
dec
xchg
insb
loop
out
sbb
jns
hlt
or
cmp
mov
cltd
cs
scas
push
sbb
daa
and
or
sub
inc
jecxz
jg
mov
mov
push
imul
rorl
test
fisubs
call
in
and
pusha
adc
mov
test
jg
in
ret
scas
dec
ficoml
push
mov
xchg
stos
outsl
adcb
repz
inc
lret
xor
or
dec
inc
mov
fildll
imul
inc
out
imul
shll
add
out
in
outsl
pusha
mov
fdivl
test
mov
cmpsl
lcall
iret
fcomip
push
mov
fdivr
movsb
aas
cmpsb
outsb
into
xor
pusha
mov
pusha
daa
jp
fldl
mov
sub
ficoms
insl
mov
jge
pop
and
lea
xor
mov
cwtl
data16
sahf
mov
xor
jns
cmp
stos
lods
add
jb
mov
cmpsl
data16
imul
aaa
nop
aas
mov
sub
push
call
mov
daa
shll
adc
cmp
fistl
xchg
enter
aaa
fsubrs
jge
mov
dec
scas
iret
dec
and
lods
jne
sub
int
int
jno
lret
sahf
inc
rclb
arpl
mov
jno
cld
lods
bound
pop
scas
jae
add
xchg
test
jg
jae
push
cltd
mov
stos
cmpsb
mov
loop
fwait
jg
push
push
das
push
scas
cmpsb
dec
mov
xlat
dec
loope
out
out
mov
ss
or
push
mov
popf
test
addr16
pushl
dec
pop
aas
xchg
ret
dec
hlt
inc
sub
jbe
pop
subb
or
in
inc
push
lods
fwait
sub
orl
pop
and
xchg
xchg
inc
cltd
cmp
sbb
cmp
imul
or
sti
sbb
cli
dec
call
ss
leave
push
push
mov
sub
and
mov
addr16
or
outsb
inc
insl
call
and
imull
add
repz
fdivrs
in
jns
cld
bound
add
dec
inc
pop
or
xor
mov
mov
sub
shlb
mov
cmpsb
aad
pop
or
stos
in
mov
in
mov
out
sub
outsb
sub
out
in
das
lret
push
mov
push
mov
faddp
clc
out
stc
ljmp
insb
push
push
jbe
rolb
xor
call
sti
adc
jne
stos
imul
inc
rorb
rorl
lods
test
bnd
sub
andb
repnz
out
scas
dec
out
or
nop
pop
in
int3
ret
sarb
mov
lcall
pop
inc
push
mov
outsl
jbe
sbb
add
dec
and
sub
fidivs
sbb
out
icebp
jl
out
pop
adc
daa
jb
rep
je
rclb
jno
cld
jae
or
jae
and
nop
insb
icebp
pop
lods
push
cmp
mov
xor
pushf
xor
mov
xchg
ficoms
pop
inc
stos
xchg
sub
sub
pop
in
lods
pop
jb
cmpsb
lret
in
mov
shlb
clc
dec
cld
hlt
stos
loope
sub
jae
push
inc
clc
lods
inc
lds
daa
inc
cmp
lret
loopne
int
sub
out
xchg
and
xchg
mov
xor
jae
push
jnp
xchg
lods
mov
movsl
xor
jge
cmc
sub
in
inc
dec
add
insl
lret
pop
outsb
push
stos
xchg
dec
mov
mov
pop
imul
stos
les
std
dec
out
loopne
mov
pop
ljmp
cmc
sbb
loop
jge
pop
and
cmpsb
jge
outsb
aaa
push
mov
out
or
out
es
and
adcb
inc
and
rcll
adc
add
xor
or
push
in
imul
ljmp
lods
and
pop
inc
dec
rcl
mov
fnstcw
and
mov
mov
movsb
pop
test
mov
shll
es
jnp
xchg
in
mov
push
mov
xor
cwtl
insb
outsb
jmp
cld
in
dec
aad
arpl
imul
cmpsb
jae
mov
jmp
push
pop
data16
cld
jne
sbb
xor
add
pop
mov
lock
xor
iret
pop
adc
dec
popl
dec
icebp
pop
cmp
adc
xchg
jle
mov
out
mov
dec
cwtl
xor
sub
push
addr16
arpl
scas
lea
cmp
mov
push
and
subl
add
jmp
sahf
in
sub
gs
dec
and
divl
adc
scas
data16
lds
dec
pop
or
shll
and
shl
mov
jle
outsb
sub
push
mov
or
test
mov
repnz
xor
enter
sahf
mov
cs
or
mov
orb
cmpsl
ret
clc
pop
repz
cmpsl
jnp
outsb
jne
iret
jae
pop
adcl
sti
jae
and
dec
out
stos
fwait
jmp
mov
repnz
xlat
int3
outsb
fdivs
pop
mov
add
jbe
out
shlb
push
clc
das
leave
push
out
adc
mov
add
ss
sub
push
push
mov
or
stos
outsl
add
lds
push
pop
std
cld
inc
rclb
daa
inc
dec
jae
js
cli
enter
int3
inc
mov
daa
xor
pop
xchg
push
push
and
push
loope
outsl
lret
inc
fs
sub
daa
das
or
lret
lods
enter
loop
adc
sbb
push
inc
sbb
adc
jmp
jg
lret
scas
fnstsw
fsubrl
lods
jecxz
dec
mov
cmp
push
test
lods
push
stc
sub
or
push
adc
shlb
pop
nop
cmp
scas
ret
outsb
or
gs
pop
xchg
jg
nop
popa
pop
sbb
je
test
inc
mov
mov
repnz
lods
lods
scas
popa
mov
mov
mov
or
out
outsl
in
push
and
lea
push
gs
inc
loop
add
xor
jecxz
fidivrs
lds
fdivrl
push
out
xor
imul
notb
movsb
ja
xchg
push
pusha
scas
test
mov
lods
pop
sub
xchg
scas
cltd
stos
out
or
mov
xchg
repz
mov
pop
jg
mov
sbb
jg
cmc
mov
adc
mov
push
xchg
icebp
shl
dec
stos
jne
fldt
insl
xchg
outsl
mov
sub
jbe
into
fistps
insl
mov
sub
mov
mov
inc
pop
dec
push
dec
fbld
sbb
push
or
jg
std
pop
es
loop
dec
sub
int3
movsb
test
outsl
xor
or
test
lds
test
jb
pop
push
ja
popa
loop
pop
jg
fld1
jne
sbb
push
int3
mov
fdivs
mov
inc
ds
xor
dec
ret
dec
ds
pop
test
clc
push
imul
lods
enter
lods
sbb
hlt
jp
sbb
lods
clc
cmpsl
sbb
stc
outsl
out
xchg
inc
xchg
imul
out
add
mov
movsb
jle
mov
add
or
test
xor
loopne
sub
add
imul
stc
outsl
push
imulb
test
sarb
inc
rcll
or
out
xor
lahf
sub
pop
fcomp
aas
mov
mov
das
mov
nop
shlb
add
popa
inc
ficoml
push
les
mov
loope
arpl
sub
mov
outsb
dec
inc
int
mov
mov
mov
jmp
and
test
jne
test
in
fsts
ja
gs
dec
aad
iret
mov
jp
pop
sub
pushf
adc
xchg
insb
fimull
aaa
jnp
adc
pop
subl
dec
in
cmpsb
xor
in
dec
ja
inc
xchg
icebp
push
aad
jp
cmp
scas
add
in
mov
xorl
in
das
out
jle
dec
pop
xchg
or
dec
mov
mov
jg
daa
pusha
push
outsb
dec
sbb
into
sbb
sub
addr16
push
xor
mov
inc
pop
sub
add
repnz
xchg
or
mov
and
push
xor
sarl
scas
idiv
in
loopne
pushf
fsubp
mov
ss
xchg
in
and
push
sub
outsb
orb
outsl
scas
adc
or
sub
shld
xlat
xchg
sub
das
enter
jo
fs
es
pushf
push
mov
push
enter
push
sbb
jo
inc
pop
je
bound
sub
and
scas
or
fnstenv
mov
in
fsubp
shr
scas
xchg
cs
jae
pop
sar
imul
jle
fisubs
jmp
push
xor
test
xchg
mov
mov
dec
push
and
or
jp
push
loop
sbb
insl
fisubrs
sub
push
or
outsb
mov
or
cs
in
out
in
insl
sahf
lods
xchg
push
ret
and
lock
mov
push
mov
cmp
cpuid
aad
and
out
xor
xchg
xchg
adcl
cmpsb
lds
push
repz
bound
lret
jne
ja
add
notl
jmp
pop
jp
mov
dec
fs
movsb
and
mov
test
inc
scas
lds
jmp
stc
cmpsl
xchg
aaa
pop
push
jo
mov
xchg
cs
xchg
jae
dec
mov
test
mov
loopne
jns
push
fdivs
test
push
sub
dec
enter
xchg
out
loope
pop
jge
mov
mov
dec
lcall
jg
stos
mov
call
movsb
push
mov
std
mov
aad
push
push
xchg
inc
jp
mov
out
movsl
jge
insb
mov
or
xor
mov
icebp
movsb
add
mov
cmp
scas
mov
mov
mov
repnz
dec
imul
jge
xor
hlt
addr16
out
loopne
hlt
stos
outsl
dec
je
out
xchg
outsl
cmc
adc
jle
lods
jne
clc
dec
mul
js
jbe
repnz
inc
imull
in
dec
call
inc
dec
repz
stc
pop
outsb
pusha
jns
insb
lods
dec
cli
enter
in
outsb
hlt
adc
cli
lods
ret
cmp
pop
dec
mov
or
push
mov
shll
add
inc
pushf
sbb
xchg
pop
dec
setle
scas
mov
addb
je
mov
and
inc
lcall
sti
stos
sti
cmp
insb
ror
fwait
add
pusha
addr16
pop
lods
outsl
push
mov
ret
dec
push
addl
mov
mov
movsl
dec
dec
sti
add
jg
pop
cs
jp
jg
loope
in
jo
iret
out
test
jp
inc
mov
aas
and
outsl
add
jnp
mov
mov
dec
dec
inc
subb
les
ret
and
out
daa
jge,pn
xchg
cs
fistl
dec
add
daa
adc
sub
sti
mov
outsb
push
push
addr16
and
sbb
sti
mov
dec
repz
daa
je
xchg
sbb
mov
mov
pmaxub
mov
xchg
popf
stos
in
hlt
mov
out
daa
xchg
inc
add
into
cmp
jmp
cmpsb
imul
sub
dec
insl
and
clc
jecxz
inc
popa
jo
outsl
dec
scas
lock
mov
in
in
dec
enter
and
jne
xchg
enter
fdiv
test
mov
in
enter
shrb
enter
out
jg
into
push
out
shlb
adc
outsb
sub
pop
das
cmpsl
cmpsb
or
clc
mov
or
fidivrs
ret
add
movsl
jecxz
add
outsl
sub
lock
movsl
je
lahf
mov
or
dec
cld
js
and
cmp
call
arpl
mov
mov
stos
jnp
add
outsb
fsubr
cmp
push
movsl
jnp
xchg
adc
cmpsl
add
scas
or
in
out
inc
popa
dec
sub
addr16
xchg
call
cmpsl
outsb
mov
dec
mov
jmp
call
pushf
jne
jmp
dec
fucomi
test
out
jbe
imul
jl
dec
pop
ljmp
stc
inc
mov
pop
je
jg
push
insl
out
jge
aaa
outsl
repnz
stos
sti
shrl
or
dec
jmp
bound
pop
jge
sbbb
clc
outsl
out
das
add
fidivrs
je
outsl
insb
jns
imul
outsb
insb
js
hlt
jecxz
push
insl
decb
out
call
outsl
mov
js
pop
arpl
jg
jp
scas
repz
in
pop
icebp
xor
aaa
data16
in
outsl
insb
jae
mov
push
into
nop
jmp
sbb
or
pop
mov
in
dec
mov
sarl
dec
jge
shr
movsb
push
testb
inc
outsl
cs
lea
jmp
addr16
mov
out
in
sti
loope
andb
data16
nop
outsb
out
and
outsl
in
les
shrb
out
sub
movsb
in
aas
and
outsl
movb
lea
pop
out
call
add
nop
out
cld
sahf
add
iret
dec
jle
push
mov
jg
in
ds
mov
arpl
adc
dec
icebp
dec
lock
insb
mov
loop
sahf
mov
daa
xor
outsb
testb
dec
shrl
push
xchg
fxam
iret
loop
jae
imul
jbe
inc
cmp
adc
in
jae
jg
pop
in
cmc
aam
jb
out
dec
mov
mov
mov
dec
insb
stc
leave
test
test
push
mov
adc
call
lock
insb
nop
out
jnp
lods
and
xor
pop
push
push
pop
scas
sbb
sub
movsl
sarl
push
dec
inc
add
xchg
mov
inc
incb
bound
neg
call
pop
fmull
sub
mov
xchg
pushf
scas
rorb
xchg
ds
cli
pop
clc
jnp
int
jae
xchg
mov
mov
jne
loop
jmp
jmp
aam
add
out
cli
in
mov
adc
cmpsl
popf
fisubl
jle
or
pop
lds
add
dec
sub
lea
xor
xchg
or
add
bound
dec
and
in
scas
test
jbe
call
insb
call
inc
call
arpl
loop
pop
mov
inc
lock
mov
stc
mov
fldt
pusha
add
mov
mov
in
adcl
jbe
lods
movsl
loop
cs
or
cli
flds
inc
sub
sub
sbb
insl
inc
pop
cmc
ficomps
scas
or
ljmp
jle
pushf
mov
les
mov
sbb
inc
iret
add
call
sbb
addr16
dec
pop
bound
mov
lods
scas
outsl
pop
clc
out
mov
jl
sbb
pop
adc
mov
out
fiaddl
adc
cld
dec
imul
push
lods
pop
xchg
cmc
das
lods
add
addr16
mov
inc
xchg
test
xchg
test
pop
sub
inc
mov
xor
daa
insb
xor
ficompl
jp
or
shl
pop
ja
pop
push
imul
call
andl
push
inc
push
pop
outsl
arpl
dec
jle
mov
mov
lds
pop
div
js
loope
addr16
jp
mov
int3
mov
movsb
jge
inc
xchg
push
loop
fcmovne
jle
sbb
and
testl
push
mov
dec
cmpsl
xchg
lods
xchg
or
sub
into
loop
lods
outsl
push
or
or
ljmp
in
dec
insl
loop
jle
cmp
push
enter
addr16
mov
imulb
stos
call
icebp
cmpsl
ja
jbe
pop
mov
rolb
inc
mov
lea
je
inc
add
mov
ljmp
add
inc
add
and
fisubrs
mov
jo
out
or
sub
dec
imul
imul
shr
add
ja
push
jg
or
lds
lock
pop
add
sbb
pushf
add
cmpsl
in
lods
push
or
mov
mov
dec
jmp
outsb
push
or
jmp
ja
loope
mov
mov
dec
xor
bound
push
jecxz
push
add
in
mov
jmp
fmul
mov
mov
jo
pushf
push
enter
repz
dec
inc
jle
lahf
js
ljmp
into
das
std
dec
push
mov
mov
jbe
cmp
jp
sub
leave
rcl
adc
and
div
inc
nop
test
dec
pushl
outsl
add
test
inc
mov
jl
dec
mov
out
pop
ss
enter
leave
mov
pop
test
aad
in
imul
inc
jp
sub
ret
push
daa
scas
lods
cmp
rorl
sub
inc
pusha
jbe
mov
adcb
jle
jl
dec
out
mov
addr16
scas
bound
fucomp
lock
outsb
cltd
scas
dec
inc
cli
cmc
inc
dec
cmp
jae
scas
dec
imul
pop
out
pop
cmp
dec
outsb
lret
decb
loopne
push
das
dec
scas
cmp
and
addr16
outsl
in
stos
jg
enter
leave
dec
in
ret
test
nop
into
inc
scas
daa
out
add
out
sub
daa
clc
add
test
inc
gs
inc
jbe
faddl
aaa
jle
inc
das
mov
cmp
xlat
addr16
sub
push
jl
rorb
cmc
addr16
psubb
adc
aam
lods
inc
cmp
inc
push
addr16
inc
in
daa
outsb
scas
cmpsl
pop
cmpsb
jae
in
mov
outsl
lods
sbb
jle
jnp
cmpsb
das
inc
mov
adc
mov
ljmp
sbb
scas
outsl
clc
ret
xchg
inc
js
push
out
jle
call
imulb
dec
nop
nop
movl
push
shld
jecxz
pop
rorl
xor
jmp
inc
imul
ret
xchg
pop
add
add
call
lds
lret
mov
inc
sbb
jge
pop
test
iret
enter
mov
aaa
xor
dec
in
xor
mov
pushf
in
stc
int3
daa
pusha
bound
mov
cmc
xchg
dec
jne
pop
addr16
jg
jge
dec
outsb
testb
rclb
outsl
or
mov
and
add
mov
imul
daa
lcall
outsl
jge
mov
jg
test
cmpsl
jl
inc
xchg
outsl
or
xchg
cmpsb
hlt
jmp
loope
loopne
andb
imul
ja
adc
call
in
dec
in
pop
mov
jmp
dec
dec
jns
in
leave
je
out
je
je
je
je
mov
or
sub
push
fs
nop
lods
mov
loop
push
xchg
icebp
lods
insl
cld
push
push
or
push
rclb
push
outsb
push
cs
into
push
dec
push
int
dec
push
scas
push
dec
push
leave
push
outsl
push
call
mov
popa
pop
and
push
cmp
push
fistl
push
push
push
jbe
push
push
hlt
push
xlat
push
notl
push
push
jno
xchg
jl
out
mov
rol
outsb
and
fucomip
add
lods
jns
xor
inc
call
dec
dec
repz
test
jecxz
dec
dec
testb
dec
outsb
inc
jnp
mov
cli
outsb
dec
sti
test
jae
push
test
insb
add
ja
dec
dec
call
mov
jge
cli
dec
jb
xor
cmp
jne
dec
insb
cmpsb
xorb
jno
insl
push
js
fbld
fimuls
imulb
subl
outsb
jmp
jmp
loope
nop
ljmp
mov
lahf
js
enter
dec
push
mov
jle
xor
lods
les
in
dec
push
out
jecxz
jle
pop
iret
dec
xchg
dec
and
and
repnz
jmp
jg
test
iret
repnz
cmc
sbb
out
jb
push
mov
and
fnstsw
pop
push
gs
pushl
movsl
bound
cmpsb
jecxz
int
inc
test
das
fiaddl
xchg
push
inc
sub
mov
ds
ds
pop
cwtl
hlt
scas
mov
cld
or
sub
add
popa
sub
in
scas
lfs
fnstsw
enter
repnz
test
sahf
ja
repnz
in
inc
or
insl
sub
inc
and
bound
cmp
test
jg
ds
jmp
or
mov
sbb
push
rep
or
cli
out
push
mov
dec
add
push
in
push
stos
jae
inc
jle
xchg
int
stos
xor
adc
mov
xchg
add
outsb
into
pop
push
or
or
or
in
mov
xchg
sarb
pushf
sbb
dec
jge
jne
dec
cs
jae
test
add
repnz
mov
cld
gs
lods
sbb
pop
jle
hlt
stc
jecxz
in
loopne
int3
scas
mov
sub
rolb
push
inc
ja
xchg
inc
jp
cmpsb
bnd
sub
jle
je
stc
aad
call
jle
lock
jmp
shrb
das
push
jecxz
inc
and
test
outsl
repnz
daa
addl
int
js
cld
sub
movsb
sbb
inc
ja
les
stos
es
imul
sbb
cmpl
and
das
add
shlb
imul
or
sbb
mov
lret
jg
mov
cld
jns
fadds
or
push
jle
pushf
xorl
das
pop
insb
dec
push
sub
iret
dec
inc
popa
sub
or
push
pop
mov
aam
lcall
mov
cmp
popf
lret
push
sub
cli
mov
ljmp
sbb
xchg
add
mov
inc
jmp
fbstp
inc
push
bound
ja
daa
hlt
pop
push
xchg
scas
enter
test
and
les
pop
js
mov
sbb
push
outsb
loop
daa
cli
dec
rorb
push
add
notb
imul
mov
movsb
mov
jecxz
sub
inc
fscale
sahf
pop
lock
gs
mov
fimull
inc
lahf
stos
pop
inc
lods
mov
cmp
push
and
sub
int3
mov
loope
negb
sub
push
mov
adc
push
test
dec
or
enter
mov
or
push
arpl
sarl
jbe
rorb
outsl
xchg
and
lahf
repnz
and
jno
call
inc
in
enter
mov
out
in
scas
inc
loop
repz
lods
jle
mov
loope
xor
int3
mov
pop
sbb
add
out
addr16
lahf
cld
loope
sbb
jns
mov
jnp
add
pushf
mov
hlt
lahf
push
mov
ds
es
outsl
cmp
in
imul
andb
jae
sub
mov
mov
bound
cmpsb
xor
negb
sub
imul
clc
or
add
jae
dec
mov
push
jge
outsb
ud2
pop
pop
push
sub
inc
inc
or
sub
stc
enter
bound
pop
iret
addr16
mov
mov
int3
add
add
cli
jno
icebp
lds
push
lahf
js
lock
stos
arpl
cmpsb
shrb
in
dec
in
outsl
xchg
jl
in
or
dec
bound
andb
jae
repz
sbb
insb
lock
dec
bnd
jg
inc
dec
call
push
xor
cmpsb
aas
push
out
popa
mov
fnsave
push
push
or
mov
push
jle
das
pushf
test
mov
imul
imul
out
or
dec
fs
and
dec
jl
xchg
jbe
jmp
loope
call
hlt
ret
xor
imull
clts
out
fiaddl
ja
jg
push
ja
inc
adc
jg
jbe
cs
out
cltd
push
punpckhwd
ss
cli
fidivs
dec
jp
loopne
cli
jg
jb
aas
loopne
das
repnz
xor
dec
jg
call
cmp
out
inc
out
imul
in
add
adc
mov
cmpsl
dec
rcrb
dec
jo
outsl
xorl
xor
leave
mov
pop
addr16
clc
mov
jmp
iret
add
cmp
dec
loop
int3
sbb
cs
pushf
fs
std
cmpsb
test
xchg
arpl
lahf
push
adc
stos
jp
mov
lea
in
or
add
and
out
cmpsb
xchg
imul
scas
outsl
mov
std
push
loop
pusha
jae
push
lods
cwtl
push
jmp
jg
out
add
or
sub
mov
outsb
jle
lock
pushf
scas
inc
mov
pop
push
mov
jp
and
add
icebp
add
sarl
icebp
movsb
std
add
repnz
dec
mov
js
mov
test
sbb
in
add
sbb
out
ss
mov
mov
icebp
adc
mov
or
cld
add
jae
xchg
movsb
movsl
pop
push
call
jno
cwtl
dec
push
in
pop
xchg
jae
sti
and
out
cmp
push
jmp
xor
mov
in
jno
mov
dec
push
shrb
adc
maxps
div
insb
mov
inc
cmpsl
mov
leave
gs
push
into
call
mov
mov
stc
in
jnp
ret
leave
jl
jmp
dec
out
xchg
push
lods
cld
aas
dec
das
xor
mov
cld
and
arpl
jne
jae
and
jle
lret
push
out
loop
das
pop
outsl
and
mov
jge
cli
lock
fwait
cs
lods
out
sbb
pop
enter
mov
dec
mov
subb
aaa
dec
lock
mov
adc
testw
pushf
subb
out
data16
scas
rolb
lods
decl
adc
cmp
jge
popa
pop
pop
in
jbe
aad
pop
dec
das
jns
adc
jne
mov
add
outsl
inc
pop
outsl
ja
stos
lea
mov
scas
das
mov
cmc
test
test
mov
dec
das
or
test
insl
fdivl
or
dec
dec
mov
xchg
sti
or
imul
lods
test
cwtl
cld
icebp
scas
mov
shlb
adc
jo
loop
adcb
lock
pop
outsl
dec
mov
outsb
loop
jle
sub
jae
scas
mov
mov
adc
jbe
jg
fsubl
imul
push
adc
cmpsl
sbb
push
aaa
lock
mov
outsb
push
outsb
sbbb
scas
dec
out
lock
scas
out
mov
push
out
outsl
mov
lock
insb
cltd
inc
push
nop
mov
jl
out
daa
fistpll
push
xor
xchg
outsl
int3
or
sarb
int
jnp
je
out
daa
pop
outsl
or
test
sub
sbb
in
cmp
clc
ret
fnstenv
fsubrl
mov
lock
cltd
in
mov
mov
adc
mov
int
sbb
sub
jno
shl
rcl
fs
sub
neg
jle
jecxz
or
js
sub
arpl
jae
ljmp
lahf
xor
je
cltd
inc
out
xor
into
mov
in
mov
sub
add
jp
jg
pop
insl
and
xchg
push
push
scas
or
sub
call
pop
outsl
aaa
roll
insb
daa
mov
dec
push
movsb
imul
and
jmp
outsl
call
insl
mov
lcall
mov
test
or
mov
push
loop
ret
xchg
outsb
dec
into
mov
bswap
and
nop
ds
xor
les
or
hlt
sub
mov
mov
add
das
idiv
inc
pop
fstl
dec
stos
adc
lret
inc
out
push
dec
jbe
icebp
aas
pop
out
push
sub
sbb
jmp
test
cs
lods
repnz
mov
test
rcll
out
nop
xchg
das
addr16
fstps
xor
xor
mov
push
imul
bound
cli
movsb
jecxz
outsb
mov
xchg
and
call
out
xchg
aad
pop
out
jno
add
cmp
mov
das
gs
cltd
outsb
jl
push
add
mov
add
jmp
jae
mov
test
popa
pop
add
mov
jae
mov
out
sub
imul
pop
in
icebp
nop
jae
jle
leave
push
jae
das
ficoms
dec
aam
jne
mov
ret
or
lods
out
mov
repz
jle
es
pop
scas
dec
out
cltd
imul
lahf
mov
data16
imul
and
push
sbb
out
push
xchg
into
fs
mov
pop
mov
imul
pop
sarw
mov
adc
ret
mov
loop
and
sbb
ljmp
jns
jle
jle
ja
add
iret
cs
sbb
int3
mov
and
mov
sub
add
out
or
rcll
insb
int
int3
je
jae
sbb
in
xlat
fldcw
mov
std
mov
rolb
mov
enter
divl
jae
mov
pop
sarb
sub
es
bound
sbb
adc
xchg
pop
repz
ret
and
jle
cmp
mov
and
mov
fistps
dec
cmp
mov
gs
cwtl
cld
sbb
outsl
fidivs
into
push
xchg
stos
dec
scas
push
addr16
jbe
sub
out
dec
testl
ds
cmpsb
adc
ja
mov
jl
cmpsb
insb
sbb
pop
cmp
jae
movsl
xchg
int
dec
pop
xchg
push
insl
loop,pn
push
and
lret
jl
mov
popf
mov
ret
aas
cmpsl
mov
movsb
orb
sub
dec
mov
scas
lock
shrl
les
jae
jbe
in
mov
dec
loop
outsl
sub
test
cmp
test
daa
rorl
nop
jg
enter
push
add
ljmp
add
mov
in
dec
and
fmull
dec
push
sarl
out
dec
or
scas
mov
outsb
arpl
push
outsl
lods
in
dec
nop
jle
jg
cld
cmp
negb
lahf
out
inc
leave
mov
cld
xchg
pusha
lea
test
mov
test
hlt
fidivl
mov
jae
adc
jmp
xchg
in
mov
dec
dec
adc
int
fcomp
dec
or
inc
in
lods
mov
cmp
lods
cmc
push
cs
in
xchg
fwait
or
mov
mov
mov
xor
xor
cmp
in
sbbl
mov
xchg
jno
cmp
xor
push
imul
jns
aaa
push
xbegin
nop
test
jg
scas
mov
rcrl
ss
sbb
and
sub
scas
out
push
sbb
lea
lock
das
loopne
imul
pop
cmp
out
xchg
fs
out
iret
loop
lds
outsb
mov
fisubrs
aam
ja
mov
fbld
jae
dec
outsl
and
or
int
fnstenv
push
dec
out
mov
jg
movsl
rclb
hlt
or
repnz
mov
loop
rol
out
sub
aas
mov
aas
or
cmp
scas
jg
and
shrb
aas
jl
ljmp
outsl
in
mov
dec
imul
pop
loope
mov
outsb
loopne
rcrl
lods
stos
enter
mov
dec
in
push
stos
pop
gs
cwtl
leave
mov
mov
aaa
in
lret
dec
rcr
add
pusha
ret
aaa
push
xchg
int3
push
rclb
jb
ljmp
insl
fists
pop
mov
jle
scas
rdpmc
push
lock
xchg
imul
mov
dec
jle
push
xor
test
xor
in
imul
push
inc
mov
lods
sub
dec
loope
jb
jbe
sub
bound
dec
cli
enter
mov
push
out
rcr
cmpsl
in
and
dec
jmp
in
mov
add
xor
xchg
pop
pop
fsubp
icebp
rorl
test
idivl
dec
xor
outsb
out
dec
scas
loopne
outsb
insb
mov
inc
rorb
mov
lods
xor
mov
das
xor
sub
mov
xchg
js
sub
fbstp
cwtl
divl
add
add
das
mov
icebp
test
and
js
int
loopne
dec
push
das
and
mov
testl
imul
outsl
sar
cmp
add
sarl
daa
data16
shlb
xchg
scas
fwait
xlat
outsb
jecxz
mov
mov
sub
or
inc
pop
jg
stos
cmp
outsb
add
fildl
test
cmpsl
mov
lods
mov
add
cmpb
cmp
test
sub
out
cli
ret
xchg
jns
fs
stos
mov
repnz
inc
clc
ret
stc
sti
jp
pop
mov
shll
scas
or
inc
lods
inc
cmc
add
xchg
mov
lret
pop
inc
dec
mov
scas
adc
mov
stc
popa
cld
mov
xchg
cltd
mov
add
dec
xchg
adc
repnz
inc
xor
jle
jge
jge
call
and
cwtl
mov
test
jno
jp
add
popf
ss
or
test
mov
jae
shlb
or
add
sub
out
jno
out
test
cmpsl
out
or
inc
es
adc
sbb
dec
test
arpl
or
mov
scas
orl
lahf
stos
hlt
loopne
movb
sub
pop
lea
movsb
mov
lahf
xchg
outsb
or
aas
ja
inc
je
cmpsl
sub
push
subl
pop
push
loop
jg
outsl
cmpsl
push
dec
mov
js
int3
scas
xor
jge
xchg
out
icebp
test
shrl
and
out
stos
and
outsb
mov
sahf
sbb
mov
push
loopne
aaa
scas
jae
hlt
cld
mov
sbb
dec
sbb
push
aaa
subb
test
call
scas
sub
rcrb
push
mov
pop
xchg
and
push
mov
int3
xchg
in
mov
mov
jg
enter
jle
xchg
dec
mov
in
mov
sub
xor
ljmp
test
in
jbe
pop
push
iret
rol
loop
add
movsl
icebp
xchg
add
xchg
inc
mov
pop
push
and
out
push
sbb
lock
add
jmp
add
mov
lods
mov
sub
push
or
call
iret
and
jbe
dec
loop
add
test
mov
or
shrl
xor
scas
mov
imul
ror
int
dec
mov
out
scas
int
nop
pavgb
lcall
cmp
jb
lcall
in
sub
mov
call
iret
dec
shrb
std
sbbb
pop
cwtl
lods
or
push
jl
leave
pop
mov
roll
int3
and
scas
lods
mov
adc
jmp
dec
jmp
cmp
fwait
dec
out
insb
sub
out
add
lret
ja
fdivrs
dec
jno
push
in
dec
push
adc
add
jns
sub
xchg
jnp
movsb
shlb
hlt
sbb
sub
sarb
frstor
daa
xor
sarb
xor
cmp
in
cmpsl
mov
push
enter
rclb
cmpsb
jmp
push
lds
jp
and
sbb
in
jmp
jecxz
in
dec
fimuls
jae
ret
xor
or
mov
add
inc
arpl
push
pop
push
outsl
enter
aaa
cli
mov
pop
jg
or
dec
out
cld
mov
push
dec
popa
cli
inc
js
mov
in
out
push
loope
mov
adc
pop
adc
imull
xor
xlat
div
and
jl
or
scas
sub
enter
stos
push
aaa
adc
jae
and
mov
loop
jecxz
nop
push
insl
fidivrs
andb
insl
cmpsl
fstpl
cmp
out
imul
push
insb
xor
dec
cwtl
out
in
in
xchg
scas
mov
into
xor
inc
pop
push
ja
out
xabort
lock
out
lods
or
inc
cmp
xor
shr
bound
pusha
pop
jle
mov
fidivl
inc
sub
dec
dec
imul
pop
insl
lods
jmp
dec
mov
adc
daa
scas
int
ret
insb
cs
jle
inc
fildll
jno
push
das
jae
lcall
rolb
imul
into
pop
imul
fucomip
outsb
jp
outsb
call
insb
cmc
dec
jnp
insl
mov
aaa
sbb
push
out
sbb
fwait
mov
or
aaa
mov
imul
into
pop
mov
ds
dec
lock
loope
inc
in
sub
and
mov
and
test
hlt
and
push
dec
out
lahf
mov
xor
jae
aam
movsl
icebp
push
mov
mov
push
lret
mov
dec
and
xor
inc
or
jge
jae
es
push
dec
decb
inc
inc
mov
cmc
outsb
mov
mov
outsl
jae
inc
sbb
xor
jo
mov
mov
ja,pt
out
sbb
out
fs
scas
adcb
sub
in
mov
scas
dec
int3
out
mov
lods
in
ja
clc
dec
ljmp
add
pop
subb
data16
push
jb
es
push
or
dec
decl
mov
inc
xchg
push
in
repz
push
inc
ficoms
push
xlat
sub
sub
fcmovu
loope
xchg
in
jae
mov
stc
or
or
scas
push
inc
or
testl
add
dec
cmpsb
and
outsb
jmp
dec
insb
ss
in
push
push
sub
inc
jle
dec
loopne
pop
fdiv
mov
lods
outsb
loop
jb
xchg
sbb
sub
gs
call
sbb
loopne
iret
rolb
jmp
loopne
or
cmpsl
dec
jb
pop
iret
xchg
sbb
jb
les
stos
repz
repz
inc
fisttpll
sub
jbe
pusha
ja
enter
mov
jns
in
push
add
imul
nop
dec
repz
popf
mov
jae
imul
adc
loop
and
dec
mov
or
ja
cltd
mov
inc
dec
xor
scas
sub
push
andb
adc
loop
in
daa
dec
test
mov
dec
arpl
mov
dec
imul
and
test
jb
in
mov
inc
test
xor
movsb
push
imul
mov
ljmp
pop
imul
or
cmpsb
cmpsb
data16
imul
mov
jecxz
sbb
mov
xlat
dec
iret
adc
jle
dec
call
or
ret
pop
stos
lret
mov
sub
jns
push
mov
pop
push
scas
xor
add
jno
cmp
into
adc
aas
fadds
pop
mov
xor
sbb
xchg
cli
push
fcomps
test
dec
hlt
sti
mov
mov
nop
bound
sti
scas
xchg
mov
add
mov
aam
sti
rcll
or
mov
push
dec
icebp
rolb
push
out
movsb
ds
mov
mov
push
orl
pushf
dec
scas
sti
gs
ljmp
and
stos
mov
or
pushf
ljmp
mov
xchg
pushf
loopne
imul
ja
xor
cmp
scas
xor
hlt
mov
mov
lods
shr
int3
ret
mov
mov
pop
je
or
dec
aaa
push
fidivrs
or
scas
xor
jle
adc
mov
xor
scas
mov
cwtl
add
dec
dec
outsl
inc
test
mov
outsl
or
mov
or
test
cmp
add
subl
insb
stos
xchg
lods
pushf
lods
and
pop
out
cltd
sti
xor
dec
out
cmp
outsl
and
push
popa
sbb
jmp
add
in
inc
sbb
out
std
dec
pop
pop
int
insl
dec
mov
push
cmpsl
loopne
push
loopne
and
and
mov
roll
and
mov
test
xchg
inc
jnp
call
in
loope
shrb
mov
fs
mov
mov
jecxz
subb
clc
mov
dec
sub
dec
repz
pop
iret
push
cmp
gs
sahf
pop
insb
jb
mov
sub
mov
shll
inc
ja
inc
bound
cmp
lea
stc
pop
scas
fstps
jns
sbb
or
mov
out
adc
cmpsl
sub
outsb
jmp
out
mov
pop
out
data16
lret
bound
fdivrs
jmp
add
adc
xor
test
test
pop
shl
sbb
pop
outsl
jb
cmpsl
push
mov
popf
test
pop
outsb
dec
mov
sbb
jg
stc
gs
into
lock
sub
and
arpl
push
xorl
call
add
jbe
loop
daa
pop
mov
outsl
mov
mov
adc
mov
in
sbb
pop
int3
rcrb
movsb
pop
dec
pusha
arpl
outsl
xor
aas
inc
mov
lahf
ficoms
jns
mov
ljmp
mov
jne
popa
inc
stc
pop
inc
leave
mov
jge
dec
dec
rcrb
sbb
jl
mov
arpl
sub
adcb
mov
inc
out
add
dec
out
push
call
lock
xchg
xchg
leave
hlt
xchg
loopne
add
cmc
hlt
iret
xchg
push
pop
scas
sbb
out
popa
adc
dec
loopne
sbb
or
and
mov
push
sub
inc
mov
sti
fcoml
test
add
push
andb
sub
pushf
sbb
pop
shlb
imul
cmpb
inc
mov
test
push
aaa
sub
bound
sub
je
ja
cs
in
stos
or
dec
add
lock
or
test
jmp
fs
dec
push
jp
xchg
andl
xchg
mov
test
or
add
jmp
pop
test
scas
outsb
cmp
movsb
scas
hlt
jbe
adc
or
fisubrs
outsl
in
push
mov
push
fcomp
xlat
nop
mov
test
cmpsl
cmp
pop
sti
negb
enter
xor
ret
jp
mov
loop
add
add
xchg
sahf
loope
adc
and
jle
out
scas
push
adc
in
mov
pop
fcmovne
nop
fwait
std
xor
jns
bnd
mov
imul
add
add
addr16
sub
out
jp
ffree
stos
outsb
in
insb
mov
dec
ja
repz
cld
adc
int
pop
test
gs
and
xrelease
and
mov
pop
push
xor
or
out
dec
insb
or
mov
mov
out
daa
out
nop
mov
fdivrs
addr16
mov
cmpsb
xor
shlb
les
cltd
xchg
insb
cmpsl
popf
subb
pop
les
add
jmp
or
ret
push
gs
clc
adc
and
jle
adc
mulb
jecxz
int3
inc
nop
pop
adc
mov
js
andb
xchg
outsb
mov
inc
pop
cmp
or
jnp
and
roll
or
push
adc
out
mov
inc
pushl
addb
notl
cmpl
test
mov
inc
jbe
outsb
dec
mov
jmp
loop
push
jne
xor
pop
sahf
bound
lock
mov
cld
adc
mov
sub
bound
insl
outsl
add
jle
xor
call
mov
mov
dec
shll
or
test
fisubrs
xchg
mov
inc
pop
jno
mov
jp
mov
pop
adc
fcmovnu
and
jg
pusha
jg
push
and
and
outsl
push
leave
insl
dec
daa
jg
cs
outsl
scas
mov
xor
push
je
int3
inc
inc
cmp
cmpsl
loope
push
outsl
adc
or
pusha
sub
and
xchg
add
inc
int3
iret
icebp
sahf
in
idivl
mov
pop
adc
sbb
nop
or
js
daa
adc
add
mov
lods
inc
push
das
cmpsl
movsb
xchg
push
loop
aam
mov
lods
jp
jle
xchg
cmpsl
loop
push
fs
rolb
out
into
xchg
lea
loopne
les
inc
lods
fwait
lea
mov
ret
dec
jae
outsl
jecxz
mov
ret
test
jb
dec
inc
subb
pushf
lret
out
pushf
enterw
loop
pop
push
cmp
adc
and
dec
scas
jl
outsb
add
cld
outsb
jle
push
push
and
inc
lcall
push
pop
sbb
shlb
bound
fsubrs
mov
sbb
xor
mov
and
out
mov
or
insl
cmp
push
push
stos
push
jecxz
scas
in
cmp
push
dec
push
fucomp
or
add
es
loopne
test
negl
stos
add
outsl
fisttps
jae
pop
flds
sub
and
daa
popl
and
cmp
out
repnz
and
xchg
clc
sub
cmpsl
lods
mov
repz
iret
mov
cmp
call
mov
or
xchg
gs
mov
inc
dec
in
rcll
jo
rorb
adc
sub
xchg
jle
mov
loopne
and
jle
test
dec
jae
aaa
dec
imulb
lods
cmpsl
in
or
or
dec
or
insl
or
sub
out
dec
xchg
sub
movsl
dec
jae
cmpsl
lods
dec
pop
addl
jbe
out
pop
scas
sbb
jne
or
test
cmpsl
out
mov
addr16
fiaddl
orps
mov
jb
adc
neg
jbe,pt
lods
xchg
or
mov
inc
sub
or
inc
rcr
mov
lret
call
pop
outsl
sub
mov
and
sbb
push
insl
call
stos
inc
add
lock
push
inc
dec
cmpsb
stc
out
iret
aam
xchg
js
mov
test
add
shl
push
add
and
stc
repz
mov
insb
push
mov
rol
insl
cmp
or
lock
shl
lret
mov
out
inc
lods
cld
inc
movb
push
mov
mov
or
push
jg
dec
xchg
mov
shlb
dec
push
adc
stc
test
xchg
cs
out
int
jmp
mov
stos
data16
out
jl
push
cmpsb
or
ja
ret
call
cmpsb
insb
mov
sarb
sbb
or
mov
cmpsl
nop
mov
push
ret
add
xchg
mov
mov
jae
ss
outsb
cmp
push
rorb
cli
movsl
sbb
fdivrl
test
pop
lret
mov
js
ffreep
cmp
cld
loopne
int
xchg
and
cli
test
xor
add
aad
mov
pusha
jae
mov
pop
es
sbb
xchg
fildll
scas
mov
fisttps
xchg
push
cmpsl
adc
outsl
pop
sar
add
es
push
stos
repz
outsb
ficoms
jae
cmpsl
push
pop
mov
xor
lock
inc
scas
insb
sub
insl
cmpsb
mov
rclb
dec
or
dec
push
jecxz
int
sub
xchg
mov
bnd
mov
or
fsubs
lahf
leave
in
dec
mov
movsb
mov
or
adc
sbb
mov
data16
inc
cmc
outsl
or
xchg
dec
addr16
aaa
shlb
lret
in
dec
in
fwait
mov
push
enter
push
das
int
in
sbb
movsl
fnstenv
add
outsl
ret
pop
push
shr
mov
mov
pop
andb
inc
lods
clc
inc
aad
test
scas
loop
xchg
bound
dec
dec
sub
scas
jecxz
mov
add
sahf
mov
sub
xor
icebp
lods
aas
loop
or
xchg
sarb
pushf
hlt
leave
test
stos
or
push
inc
cmp
scas
xor
dec
lcall
cmpsl
fwait
push
out
mov
push
lcall
dec
test
test
add
nop
cmp
into
jle
push
ljmp
out
and
mov
add
dec
jae
mov
jb
in
andb
pop
inc
dec
add
add
pop
mov
lods
enter
adc
fisubrs
fwait
or
sub
hlt
pusha
jg
mov
insb
or
sbb
ja
mov
call
sub
mov
xor
out
mov
out
mov
clc
mov
dec
pop
jle
mov
in
cltd
dec
sub
out
bound
dec
xor
xor
inc
iret
fidivrs
and
movsl
cs
outsb
or
inc
fldenv
mov
push
pop
lahf
mov
pop
cmp
dec
imul
mov
popa
lock
or
ficoms
jle
in
das
sbb
out
jae
add
sarb
inc
mov
mov
pusha
data16
leave
enter
leave
pop
cmpsb
aas
jge
mov
loopne
int3
add
dec
insl
push
call
lcall
and
shrb
dec
cmc
inc
fnstcw
add
jle
xor
shrb
push
sahf
xor
add
and
or
ret
rclb
scas
idivb
push
pop
sahf
dec
stos
push
or
pop
push
movsb
mov
mov
aas
loopne
jg
stos
fs
mov
arpl
push
outsl
outsb
clc
xchg
fnstenv
std
popl
test
jbe
and
lret
hlt
add
sbb
lret
sub
mov
scas
loopne
shlw
push
add
flds
jae
mov
les
inc
popl
fnstcw
cmpsl
outsb
push
lea
ficomps
cmp
out
xchg
jbe
jmp
sub
mov
loop
testl
pop
jge
dec
cmpsb
call
xor
xor
mov
mov
mov
scas
push
sarl
mov
inc
mov
int3
mov
jecxz
adc
push
inc
dec
loopne
adc
stos
imul
and
mov
sub
mov
outsb
xchg
loopne
loop
stos
push
bnd
push
shlb
pusha
lods
stos
mov
pusha
xor
cld
int
fadd
icebp
ret
mov
mov
mov
ret
ror
sbb
les
aas
fyl2x
push
push
scas
xchg
testb
ficompl
iret
pop
jae
sub
inc
es
add
gs
inc
xor
pop
jno
dec
pop
cltd
jg
ljmp
int
inc
loop
dec
sub
mov
aas
insb
arpl
lea
cld
sub
scas
enter
push
xor
sub
arpl
mov
jno
iret
mov
out
call
add
sub
push
push
lea
out
or
jg
ss
outsb
shrb
sbb
push
or
xchg
sti
mov
jnp
sahf
xchg
test
sarl
sub
rcl
mov
xchg
hlt
adc
cltd
out
inc
das
jle
xchg
or
test
push
mov
outsl
xchg
jg
sarb
inc
push
cld
fisttpl
or
data16
sbb
loop
aas
mov
xor
aas
cmp
hlt
mov
imul
inc
lret
js
cmp
xchg
out
addr16
pop
jmp
lods
ja
mov
cmpsb
ss
push
mov
or
int3
leave
xchg
andl
add
lods
or
xor
dec
xor
add
jae
jmp
sub
shl
lods
push
mov
pop
sub
outsb
add
cmp
movsl
jb
lds
in
inc
xchg
lods
or
out
repz
mov
loope
call
pop
mov
int3
mov
in
cld
fmul
mov
xchg
push
push
push
lock
xchg
jmp
dec
xor
jecxz
arpl
cld
and
out
jp
pop
sub
mov
push
mov
ljmp
sub
imul
outsb
xchg
xchg
leave
xor
test
sbb
icebp
insb
sti
shll
out
imul
ffree
jle
inc
mov
sub
cmp
push
mov
lods
enter
stos
popw
dec
push
mov
mov
and
sti
enter
orl
scas
outsb
in
pop
pop
mov
shll
ret
cmpsb
sti
sub
daa
lods
dec
sbbl
jns
and
mov
fiadds
addr16
cmp
lods
jno
dec
adc
aam
outsl
scas
push
pop
xor
test
sahf
imul
fisubrl
notb
movsb
or
dec
inc
data16
subl
fsubs
outsl
insl
dec
fimuls
sub
inc
add
fs
inc
xchg
fmuls
int
outsb
adc
outsb
dec
jg
jl
into
mov
outsb
mov
mov
mov
pop
out
add
dec
out
pusha
movsl
lods
mov
lret
dec
or
test
xchg
imul
mov
pop
daa
call
pop
jle
mov
imul
mov
sub
rcll
lods
sub
push
jge
cmpsl
jp
shlb
mov
movsb
or
cmc
jmp
sbb
mov
aaa
pushf
dec
mov
adc
jle
push
pop
scas
xor
pusha
and
icebp
sbb
mov
cmp
xor
loopne
scas
test
out
pusha
es
scas
push
outsl
jl
pop
mov
cs
pop
xchg
and
inc
cmp
js
sbbb
inc
les
push
pop
stos
enter
adc
pusha
xor
mov
cmp
aaa
xor
cmpsl
sbb
xchg
stos
pop
dec
aam
xor
mov
out
scas
adc
fildl
int
inc
mov
pop
js
out
clc
cmp
rorb
loopne
out
movsb
cmp
outsb
xchg
xchg
gs
mov
push
adc
outsl
push
push
sbb
jbe
jl
stc
sarb
cltd
dec
test
mov
ret
mov
jl
push
lods
jle
addr16
jg
lods
mov
add
popa
dec
jl
stos
jl
mov
sbbb
shlb
cwtl
mov
inc
fcomps
stos
insl
popa
aam
addr16
mov
jge
dec
mov
insb
xchg
out
push
push
outsb
addr16
push
mov
aaa
insb
cmp
pop
or
addr16
scas
jnp
fwait
inc
int
sbb
adc
outsl
adc
add
or
xchg
pop
dec
xchg
out
in
or
enter
jbe
cmp
and
call
clc
pop
lcall
imul
insb
mov
mov
or
mov
push
add
dec
int3
push
cltd
pop
ret
and
lcall
cs
es
or
add
lcall
lret
enter
inc
ljmp
insb
repnz
fs
jns
das
pop
jae
stos
mov
cmp
push
push
ja
popa
cmp
les
or
leave
inc
lods
stos
imul
lahf
cmpsl
lods
lea
lret
push
dec
int3
mov
movsl
ljmp
insl
sub
movsl
test
mov
mov
movsb
enter
jle
pusha
clc
add
push
lret
dec
mov
enter
loope
xchg
adc
in
pop
cmpsb
fstpl
jmp
int3
dec
out
scas
ret
fisubrs
jbe
in
dec
mov
jge
movsl
inc
dec
rolb
aad
jo
test
fnstenv
je
jns
push
hlt
cmp
outsb
pusha
repz
lock
insl
outsb
repnz
lock
arpl
leave
arpl
xor
lock
aas
in
sub
lahf
push
inc
outsb
xchg
bound
insl
rcrw
jnp
xchg
fsubl
mov
icebp
fsubrp
or
pushf
mov
adc
sub
fnstsw
mov
inc
lahf
dec
xor
mov
fcomi
add
mov
stos
jo
lods
arpl
add
mov
inc
je
lret
sti
mov
rol
and
repz
xor
inc
mov
jne
push
inc
or
scas
out
xchg
sub
mov
xor
rclb
scas
xor
mov
xor
mov
loopne
push
enter
jecxz
pop
mov
mov
cli
mov
push
push
cwtl
pop
and
push
sbbl
or
pusha
dec
in
int
mov
sbb
adc
dec
sub
push
jge
mov
stos
movsb
gs
fldcw
xlat
bnd
add
xchg
lods
daa
sbb
ja
inc
sbb
push
pop
out
mov
loope
mov
cltd
pushf
gs
jb
cmp
addr16
adc
push
xchg
ret
in
mov
xor
movsl
and
and
rolb
dec
loop
je
insl
mov
es
mov
scas
xchg
cmp
sbb
pop
lods
lahf
sbb
and
in
je
arpl
fcoml
std
xchg
adc
and
push
loope
lods
sti
lods
mov
popf
adc
stos
dec
in
mov
inc
dec
orb
out
cltd
push
push
and
into
out
insb
push
and
fucom
xchg
jl
shlb
push
into
sbb
inc
out
aas
movl
push
mov
jb
mov
and
arpl
mov
jae
imul
je
mov
sti
sub
dec
in
out
das
out
dec
lahf
pop
sbb
add
dec
jae
mov
ds
cmp
dec
add
add
add
jae
popa
pushl
sbb
adc
xchg
fwait
mov
sahf
push
dec
mov
pop
xchg
pop
sbb
fsubrl
out
loopne
or
pop
out
cmp
jg
push
sbb
sahf
into
inc
adc
lahf
mov
lds
in
cmp
xchg
xchg
sub
shrb
out
jge
cmp
mov
mov
push
and
xchg
jle
cmp
into
mov
mov
pop
outsb
pop
cld
rep
pushf
xchg
cmp
xchg
out
sub
loop
data16
jle
sub
xchg
lock
mov
add
pop
mov
scas
mov
or
dec
dec
dec
mov
cmp
inc
jg
mov
sarb
stos
out
jbe
or
sub
xchg
call
testb
xor
ja
movsl
fisubl
jbe
push
fldenv
jmp
mov
and
mov
inc
ds
decb
mov
cs
cmpsb
lcall
outsl
scas
repz
pop
dec
inc
into
aas
outsb
aad
inc
call
arpl
call
stc
fisubrs
data16
xor
in
sbb
loop
imul
hlt
daa
pop
jns
lahf
jp
xchg
or
lea
xlat
push
mov
adc
push
fs
jae
pop
sub
jg
dec
ficoms
dec
mov
mov
pop
cmp
sar
inc
je
ds
lock
int
scas
sahf
mov
add
sbb
and
in
out
sti
sbb
sub
dec
add
inc
cld
out
jl
les
mov
scas
push
cmp
mov
mov
or
mov
test
or
out
inc
sub
repnz
in
mov
cmc
sub
mov
sub
imul
sti
xchg
jae
mov
or
sub
xchg
inc
mov
jg
add
jae
jmp
mov
dec
mov
xchg
leave
clc
push
out
in
pop
in
mov
push
and
inc
jmp
mov
mov
mov
gs
arpl
mov
add
aaa
add
and
mov
std
outsb
jno
neg
xchg
call
int3
dec
scas
jne
adc
mov
sub
les
cwtl
cmc
ret
cltd
bnd
push
out
pop
pop
sub
cld
repz
scas
and
aad
int
mov
leave
ljmp
outsl
or
test
or
push
lret
dec
mov
call
or
aad
add
fs
repnz
lods
sbb
es
mov
jge
push
stc
out
jb
sbb
mov
pop
dec
mov
mov
loope
xchg
push
pop
outsl
sti
mov
divl
std
sub
lock
dec
xchg
rcl
mov
mov
pop
jb
out
imul
aad
out
jns
add
out
das
sets
ud2
xor
movsl
bound
test
rolb
mov
dec
inc
adc
adc
mov
mov
sub
inc
cltd
lods
sub
mov
sbb
das
pop
lods
lods
xchg
mov
arpl
pop
xchg
lcall
verw
rclb
addr16
add
jb
xchg
and
outsl
cmp
mov
lods
add
inc
lods
shrb
out
iret
mov
sub
cwtl
lock
outsl
inc
movsl
movsb
cmp
test
xor
mov
rcrl
adc
jge
ret
cmc
jg
aas
mov
insb
xor
aas
es
jo
add
sbb
rclb
jecxz
pusha
aas
imul
cli
loope
arpl
lods
dec
push
xor
xchg
rorl
cmp
push
adc
lock
fidivl
es
stc
adc
pop
outsb
jnp
push
add
int3
fimull
in
out
adc
dec
or
rorl
and
xchg
jg
jno
into
ret
pop
mov
mov
add
in
aad
inc
mov
call
dec
push
cmpsb
shlb
out
roll
xchg
xchg
shl
sub
aam
mov
std
inc
add
addr16
push
inc
mov
xor
pusha
lret
sub
or
stc
lret
pop
xor
outsb
lock
lcall
jae
sub
pop
pop
pop
pop
nop
add
nop
xchg
gs
iret
inc
mov
mov
psrld
incl
in
xchg
hlt
rcrl
loop
cmp
mov
fidivrs
jo
jne
mov
jg
sbb
dec
loop
adc
adc
call
mov
jb
jae
stc
inc
movsl
xchg
arpl
push
hlt
lcall
mov
push
inc
inc
ret
rclb
sahf
adc
clc
sahf
into
fnstsw
out
andb
push
into
gs
sbb
es
aad
xchg
mov
test
xor
mov
push
dec
ret
dec
cmp
test
stos
outsl
push
lret
lret
or
outsb
lods
into
pop
icebp
push
or
pop
test
and
mov
xchg
mov
jg
ret
ljmp
cmc
mov
test
cmpsl
and
js
inc
xchg
add
pop
lods
pushf
push
push
out
fildl
dec
aaa
mov
and
mov
out
nop
xchg
cmovg
cli
ret
jmp
sub
push
pop
mov
jnp
jno
mov
jge
add
or
cltd
std
jl
fldl
test
leave
insb
out
jb
mov
mov
outsl
addr16
or
mov
dec
stos
dec
lret
mov
inc
push
mov
or
movsb
pop
inc
test
lods
sub
cwtl
push
xchg
lahf
cmpsl
cmpxchg
lea
push
cmp
pop
jecxz
push
jb
pop
pop
ljmp
cmp
scas
sub
data16
jg
jecxz
test
jle
dec
inc
aas
outsl
push
mov
mov
xchg
mov
out
push
adc
inc
mov
or
jb
out
sub
jmp
test
idivb
push
mov
mov
ljmp
cmp
lret
push
enter
int3
cmc
adc
fwait
lds
ds
sbb
dec
pusha
outsl
mov
lds
cvtdq2ps
jbe
pop
push
call
aam
movsl
dec
jae
in
jo
adc
fnstenv
aas
pop
lods
xchg
insl
loope
imull
mov
insb
mov
enter
adc
xchg
xchg
aaa
imul
sbb
pop
inc
dec
inc
add
aas
mov
loope
lods
mov
mov
cmp
daa
int3
out
xor
imul
fsubp
std
stos
jnp
js
repz
jae
daa
push
scas
xor
imul
sub
lods
into
cs
mov
inc
pusha
stos
jb
pop
in
mov
jb
jecxz
hlt
mov
xchg
mov
mov
fnsave
sarl
push
out
loop
lahf
dec
cmpsb
add
mov
cmpsl
insl
xchg
repz
scas
outsb
push
nop
sub
jmp
insb
out
loopne
outsl
jl
insb
data16
in
iret
cmpsl
in
cs
and
pushf
fadds
pop
scas
movsl
sub
push
cltd
ss
insb
pop
mov
pop
mov
mov
dec
rcl
add
lock
pop
mov
fdiv
adc
mov
outsl
mov
das
xor
outsl
inc
mov
push
adc
inc
popa
repz
ja
cmc
dec
jo
mov
aas
fwait
daa
es
or
roll
dec
jnp
jle
je
out
shrb
cmp
mov
inc
out
sub
push
frstor
fsubrl
sbb
stc
aad
jge
mov
clc
fstpl
insb
mov
pop
lock
xor
movsb
hlt
sahf
cltd
mov
push
ja
dec
loope
sti
pop
dec
fs
jae
dec
xchg
ret
adc
push
mov
test
dec
cmpsl
test
and
jl
push
fldl
ljmp
pop
daa
imul
mov
mov
aaa
scas
iret
and
fs
xchg
lds
mov
jae
rcrl
add
aad
dec
sbb
std
cmp
ror
xchg
imul
sbb
mov
pop
xchg
and
movsb
call
js
pop
xor
and
or
aas
fucom
sbb
sub
xchg
pop
cmpsb
lock
or
inc
jle
int3
std
nop
xor
outsl
fs
inc
cmp
sbb
jne
imul
rolb
insb
out
imull
ss
push
int
movsb
mov
ret
orl
addr16
xchg
xor
in
xchg
mov
jle
inc
ljmp
call
orb
cmpsb
dec
insl
stos
nop
mov
movsl
cld
aas
mov
or
stos
movd
sub
xchg
xchg
inc
dec
add
sbb
mov
jg
mov
push
mov
push
lret
mov
call
es
fldt
mov
divb
lock
lret
and
mov
daa
out
jp
daa
cmpsb
call
or
sub
add
jmp
frstor
jmp
mov
nop
sbb
pop
into
stc
aaa
mov
fisubrl
mov
cmp
push
mov
pusha
mov
es
jb
inc
fst
outsb
mov
mov
outsl
outsl
dec
add
push
lods
jb
bound
int
stos
fisubs
sbbb
mov
lock
xor
xchg
in
jp
stos
aam
roll
xchg
scas
cmpb
cmpsl
push
stos
mov
push
pop
outsb
push
mov
out
lcall
jecxz
andb
popa
mov
shlb
clc
jecxz
add
add
iretw
out
sub
and
sbbb
or
xor
add
mov
push
cltd
outsl
fwait
insb
scas
add
scas
lods
hlt
frstor
xchg
push
mov
pop
mov
int3
cmpsl
mov
out
decb
scas
lods
sbb
fidivrs
fisttpll
xor
xchg
outsb
pop
insl
loopne
inc
or
sub
inc
inc
clc
xchg
mov
xor
inc
pop
fmull
rol
push
xchg
cmc
mov
cltd
add
add
sarb
aas
movsl
dec
dec
jae
mov
pop
loope
arpl
xchg
out
popf
mov
mov
sub
int
xor
cmpsl
pop
and
loop
negl
stos
xor
gs
cmpsl
rorl
xchg
push
mov
xchg
enter
and
out
mov
enter
icebp
iret
repz
mov
push
cli
int3
jns
mov
dec
fwait
shr
jbe
mov
add
leave
ss
jno
fnstcw
pop
xchg
out
mov
xchg
or
mov
and
lahf
aam
xchg
mov
scas
add
jnp
iret
push
or
mov
xor
leave
adc
out
cmp
je
das
xchg
or
pop
jnp
int
shrl
or
mov
icebp
sahf
add
icebp
aad
scas
sbb
lret
mov
dec
bound
movsl
xor
in
stos
adc
mov
dec
adc
pop
jle
out
outsb
or
out
jge
mov
add
jnp
rorl
aaa
enter
test
testl
clc
stc
ss
mov
xchg
jle
push
xchg
into
sbb
sub
out
push
add
mov
jb
xchg
lods
push
ljmp
cltd
clc
adc
scas
and
shll
insb
jecxz
lea
ret
inc
xchg
jae
mul
cs
xchg
dec
stc
sub
data16
daa
sub
dec
push
pop
arpl
pushf
lds
in
pushf
outsb
ds
data16
mov
push
dec
arpl
outsl
test
xchg
xor
movsb
incb
mov
lods
add
in
mov
out
subl
cmp
int3
ret
pushf
jl
loop
std
loopne
stos
pop
mov
pop
jmp
lods
push
xchg
mov
imul
lahf
jbe
sub
inc
or
out
pop
dec
mov
xor
mov
jp
sub
sbb
mov
bound
mov
hlt
loop
outsb
mov
popa
ficoms
add
xchg
and
arpl
out
xor
es
int3
xchg
mov
test
sub
popa
addb
mov
pop
popa
bound
xchg
ja
insb
cmp
jge
loopne
sahf
push
mov
jmp
ja
lods
stos
scas
imulb
push
jns
adcl
movsb
fchs
xchg
out
sti
xor
cld
pusha
movsb
int
ret
test
stos
pop
jns
ret
lods
ret
pop
push
dec
insl
loopne
rep
subl
jno
jmp
cmpsl
insl
in
scas
or
shll
call
int
imul
mov
outsb
insb
insb
movb
add
insb
pop
lods
xchg
sbb
cmovl
sbb
mov
lods
mov
shr
cwtl
pop
bound
xor
ror
sarl
jl
mov
lds
jnp
dec
or
and
inc
enter
outsb
cmp
addb
mov
mov
lods
out
call
mov
push
xor
jbe
and
int3
adc
mov
loop
mov
ret
lds
dec
popa
jp
inc
and
lcall
fsave
mov
add
fstl
js
icebp
jecxz
adc
pop
lock
sbb
test
ljmp
loope
and
loope
ljmp
dec
sub
mov
push
and
or
clc
rorb
ljmp
enter
in
dec
loop
sbb
push
or
and
js
lods
add
out
movsl
mov
movsl
data16
jnp
push
and
jne
addr16
pop
es
sub
dec
out
outsb
sahf
stos
sbb
xchg
pop
out
mov
dec
enter
add
mov
mov
jle
loope
insl
mov
adc
xor
in
stos
iret
iret
dec
enter
inc
lret
icebp
xchg
repnz
jnp
jo
call
in
ja
lds
mov
jb
les
std
sbb
cld
dec
sub
mov
cmp
xchg
ret
add
nop
push
outsb
adc
cld
cmp
outsb
and
dec
es
mov
adc
add
into
ffreep
adc
cmp
lods
push
js
inc
testb
lea
repz
mov
scas
iret
stos
imul
shl
pop
loop
adc
popa
stos
popa
in
roll
push
jg
outsl
icebp
push
dec
add
and
mov
outsb
hlt
scas
pop
lods
xchg
imul
xchg
adc
mov
repz
cltd
mov
imul
sbb
es
mov
push
repz
sub
jbe
cmp
fwait
jne
icebp
aas
push
loopne
push
or
cld
xchg
pop
inc
mov
add
mov
fistps
out
jg
scas
jb
xchg
je
and
pop
filds
adc
and
jmp
int
idiv
pop
je
out
add
adc
negb
fsubrp
or
test
xchg
xor
dec
push
jmp
xchg
jmp
xor
data16
xchg
jbe
insb
subl
arpl
lock
pop
mov
sar
mov
out
outsl
jae
into
aas
stos
cwtl
imul
push
dec
mov
out
pop
jnp
jae
movb
mov
lods
push
pop
out
inc
stos
scas
lods
inc
insb
loop
inc
es
icebp
inc
ljmp
rolb
popa
cmc
aam
adc
test
sub
xchg
jecxz
test
aaa
push
ljmp
je
out
jae
test
rorb
dec
bound
inc
mov
lods
sbb
add
gs
mov
adc
sbb
xor
ret
call
lods
jmp
mov
adc
inc
rclb
fdivrs
mov
dec
pop
testb
cmpsb
in
in
cmp
fwait
imull
out
and
shrb
xchg
cmpsl
sbb
lock
xchg
aam
sarb
mov
jbe
repz
push
cmp
xchg
and
divl
lret
push
lds
mov
stc
cmc
les
push
sub
int3
jno
daa
hlt
mov
adc
out
mov
outsb
xchg
inc
jp
push
enter
aad
jb
cmpsl
jle
mov
stc
jb
pop
jns
rcl
aaa
mov
ret
push
incb
xchg
xchg
push
inc
jne
loope
sbb
push
rep
push
sbb
js
rorl
dec
and
pop
outsl
pop
mov
mov
xchg
push
cmp
popf
clc
lea
ficoms
lcall
mull
scas
ja
leave
or
pop
cmp
xchg
inc
or
jmp
xchg
cmpsb
push
repnz
dec
dec
push
stos
punpckldq
jl
ret
out
mov
imull
es
pop
shlb
xchg
out
aam
mov
imull
loop
stc
sbb
mov
out
loop
xor
and
fwait
rcl
mov
cmp
das
js
or
xor
or
ja
jg
ss
and
dec
jbe
scas
insl
out
pop
mov
push
push
sub
xchg
jecxz
icebp
loopne
cmpsl
jecxz
mov
mov
sarb
jg
testl
add
mov
pop
fsts
pusha
test
in
addr16
loop
mov
lea
mov
mov
xchg
outsb
loopne
xchg
fwait
in
in
jge
divb
lock
cmpsl
mov
dec
es
ljmp
iret
decl
jae
jne
pop
lods
imul
out
inc
or
imul
mov
leave
cmp
ja
push
out
mov
repz
movsb
in
aaa
jno
insb
stc
pusha
sbb
bound
or
shrb
lret
pop
push
nop
dec
jae
aaa
insl
les
dec
loopne
fsts
mov
test
loop
test
jg
in
imul
test
jg
and
fwait
dec
push
sub
jb
movsl
and
insl
sbb
mov
jns
sbb
pop
add
xchg
scas
cmp
jle
scas
sbb
mov
fiadds
jno
imulb
enter
sti
jecxz
std
loope
cmc
and
outsb
pop
sbbb
xor
dec
sbb
push
leave
xor
stc
or
pop
ficompl
popl
call
push
and
outsl
shr
sbb
add
mov
and
ljmp
push
outsl
gs
sub
xchg
aaa
outsb
sub
inc
inc
sub
lret
cld
mov
mov
bswap
fadds
pop
jne
mov
lret
sub
out
xchg
ret
mov
clc
cltd
xchg
cld
test
xor
mov
xchg
adc
dec
out
push
jmp
cmpsb
cmp
jl
xchg
sbb
je
loopne
mov
out
mov
mov
pop
dec
subb
mov
dec
loopne
out
in
ja
mov
xor
roll
xchg
dec
filds
push
scas
mov
inc
test
xchg
stc
in
mov
test
push
aas
aad
jmp
jle
adc
sub
or
daa
test
jne
dec
repz
mov
jns
add
orb
pop
and
sub
lods
xchg
inc
jle
out
mov
int
push
push
arpl
fsubrs
fs
movsl
mov
or
in
add
fwait
xchg
adc
shrb
xchg
stc
stc
lret
leave
movsl
rcr
and
das
das
lahf
pusha
xlat
xchg
repnz
mov
insl
jecxz
mov
and
mov
lds
jno
loope
in
enter
mov
dec
dec
scas
xchg
loop
data16
xchg
mov
bound
sub
inc
add
ljmp
imul
xchg
pop
add
loop
cmpsb
pushf
xchg
insb
add
imul
in
ds
lock
fiadds
inc
pusha
clc
jl
jnp
inc
fwait
ljmp
loope
jmp
sti
aad
jns
insb
mov
ljmp
adc
adc
enter
xchg
pop
bound
negl
test
out
enter
sbb
imul
xor
push
stos
lds
arpl
andl
or
pop
loopne
pop
mov
sub
sub
jle
fs
or
xchg
mov
xchg
fists
mov
pushf
fiaddl
cmpsb
ret
out
push
lds
in
push
shll
inc
imul
push
lahf
xchg
jae
dec
push
insl
ret
pop
test
and
loop
push
mov
pop
fildll
ljmp
xor
inc
jno
dec
lods
out
jmp
xor
and
jl
jle
sbb
add
jb
jp
xchg
pop
std
mov
jae
sub
in
stos
mov
mov
out
jmp
jmp
cmp
in
mov
mov
jae
cmp
dec
in
stc
add
or
movsb
flds
insb
out
adc
int3
sub
popa
jecxz
cs
or
xchg
dec
cld
roll
mov
int3
and
or
out
repnz
ret
leave
mov
jne
fstpl
jg
insl
sbb
sub
data16
push
mov
mov
mov
add
xor
addr16
shlb
jnp
mov
or
shrb
sub
stos
inc
dec
pop
pop
jecxz
mov
addb
push
pop
movsl
jl
movsl
ss
lods
insl
jg
lock
lock
push
fnstenv
xchg
dec
add
js
divb
out
sub
mov
sub
lock
push
ja
arpl
push
gs
insl
shrb
dec
mov
sti
xor
or
mov
stc
ja
push
sbb
movsl
and
nop
ss
in
push
ja
addr16
xchg
cltd
lret
je
push
sti
pop
insl
mov
add
sbb
in
dec
rclb
addr16
push
xor
data16
pusha
mov
mov
sbb
xor
and
sbb
xchg
jmp
subb
dec
call
test
loopne
aad
popa
add
mov
ljmp
dec
pop
dec
subb
dec
stos
push
mov
jg
inc
lods
xchg
in
mov
aas
repnz
mov
sub
mov
in
or
push
jbe
loopne
movq
faddl
in
outsb
push
jl
mov
out
dec
loop
sub
mov
xor
and
cmp
stc
outsb
jg
sbb
das
ret
cmpb
out
in
out
jae
insb
movsl
popl
leave
add
inc
mov
push
mov
mov
lods
dec
into
call
test
testw
pop
orl
and
aad
pop
xor
mov
ja
push
adc
addr16
mov
adc
movsl
add
mov
and
mov
sub
dec
and
in
lock
scas
inc
in
jnp
sarl
xchg
cmp
aad
xlat
sbb
xchg
push
addr16
das
dec
imul
and
xor
jno
mov
mov
jb
xchg
or
pushf
and
fwait
repnz
dec
lods
dec
insl
call
pop
dec
pusha
jb
lock
dec
in
dec
icebp
out
fcompl
add
mov
int
bound
and
es
jne
pop
dec
sbb
test
ds
icebp
mov
ljmp
ret
scas
xchg
ja
xor
inc
cmp
shr
je
push
outsl
jno
dec
pop
lods
pop
dec
sub
shrb
imul
mov
into
or
mov
lods
iret
arpl
mov
and
pushf
mov
int3
loope
push
and
or
mov
xchg
lahf
rorl
out
or
cmp
sub
mov
inc
and
dec
cmpl
jae
scas
cmpsb
xchg
and
jb
xchg
xor
mov
cmpsl
mov
push
cmp
loope
cmp
and
mov
call
xor
push
jmp
add
jmp
cld
out
jno
adc
ror
pop
xor
shll
pop
xchg
imul
adc
int
mov
ret
mov
cmp
mov
sbb
jns
push
shll
cmpsl
xchg
out
lcallw
mov
shll
add
push
mov
lea
push
into
lock
test
dec
pop
dec
or
testl
aad
push
repnz
pop
mov
rcr
mov
jg
mov
push
mov
mov
out
jmp
lock
mov
lock
push
rcll
lret
cmp
ret
lods
sarb
pop
aam
push
hlt
inc
jge
call
jnp
jg
jg
xchg
call
in
mov
cmp
repz
icebp
sub
repz
ret
iret
add
mov
mov
ficomps
xor
sbb
pop
repnz
add
push
cltd
xorb
das
outsb
bound
sahf
dec
sbb
fldcw
mov
aaa
sbb
sbb
xchg
nop
sbb
mov
stos
jb
outsl
adc
idivl
cld
xlat
dec
fldl
xchg
xlat
xor
mov
mov
cmp
dec
cmp
pop
icebp
mov
bound
or
pushf
negl
xchg
dec
mov
lahf
nop
inc
ror
in
cld
loopne
in
lret
inc
lea
mov
stos
clc
shl
pop
idivb
xchg
aad
in
ret
jbe
push
leave
stos
mov
mov
cmp
xchg
outsl
pushf
push
out
push
pop
mulb
aad
insl
std
cmc
add
sahf
rcl
clc
outsb
into
or
hlt
repz
cmp
clc
fmull
jle
idivb
lods
jae
dec
mov
and
fistps
daa
int
mov
scas
and
dec
jae
sbb
jbe
jne
inc
out
out
js
cs
jae
cmp
or
out
pushf
sub
movsl
arpl
loop
sbb
dec
int3
pop
mov
jns
loope
add
shrb
push
add
lods
ds
je
adc
and
and
inc
jns
lods
outsl
mov
sbb
dec
addr16
push
imul
cmpsl
in
shl
imul
mov
call
fldenv
fcomps
inc
jae
sub
cmp
pop
jae
and
insb
mov
pop
sbb
jno
jl
scas
fsub
fistpl
fucom
stos
sti
mov
popl
mov
inc
scas
in
mov
jp
lods
mov
insb
loop
add
repnz
ret
out
sub
cmp
mov
add
lods
push
mov
push
ljmp
add
ds
mov
lods
jnp
rcr
scas
sub
ljmp
addl
loope
lods
cmpb
loop
dec
or
stos
push
fucomp
push
outsl
cli
xchg
incl
arpl
cmpsb
cmp
inc
ljmp
scas
test
add
sbb
xor
lret
and
mov
arpl
incb
dec
sti
out
aas
imul
xlat
int
test
adc
push
insb
out
jae
dec
jbe
or
sub
or
nop
aaa
pop
movsl
push
out
sub
fisubrs
stc
shll
stos
xchg
dec
push
mov
mov
aad
movsl
dec
push
mov
dec
cmpsl
jl
xchg
out
sqrtps
outsb
sbb
stc
ret
fs
dec
inc
es
mov
push
push
mov
xor
out
dec
push
add
fisubs
sub
cmp
sbb
inc
adc
or
xchg
xor
lods
repnz
mov
gs
dec
cs
aas
fisttpll
insb
stc
scas
popf
scas
cwtl
lods
add
fildl
add
ds
lods
or
jmp
dec
cmp
sbb
jg
test
out
gs
out
stos
movsb
scas
roll
fs
mov
outsl
fbld
inc
dec
ljmp
rclb
jl
jnp
aad
xor
idivb
dec
ljmp
test
push
loopne
fldt
mov
pop
sub
in
aas
fidivs
sbb
sti
lods
in
out
xchg
push
es
mov
jns
out
jp
pushf
xchg
js
jne
out
std
mov
xchg
test
mov
lret
mov
or
and
dec
imul
repz
ljmp
push
insb
test
fucomp
movsb
jmp
push
stos
mov
jbe
pop
outsb
lahf
mov
jae
cltd
fwait
jbe
mov
mov
jge
jae
push
mov
xchg
jle
mov
cmp
lock
int3
pop
ss
in
test
adc
cs
mov
dec
ficoml
jmp
out
mov
mov
xchg
bound
insb
popf
out
and
mov
insl
mulb
push
push
iret
or
mov
leave
out
sti
xor
push
inc
divb
cmp
outsb
das
jp
icebp
out
mov
xor
or
rolb
loope
dec
scas
mov
dec
popl
sbb
cmp
arpl
xor
cs
cld
pcmpgtd
into
popa
sti
mov
mov
cs
push
pop
jle
add
shlb
push
inc
sub
orl
pop
mov
mov
sub
loop
repz
popa
call
leave
out
or
fs
pop
jae
aad
dec
lods
mov
loop
clc
jle
jp
mov
lods
inc
pop
insl
mov
and
repz
push
ljmp
pop
mov
repnz
shrl
mov
xor
or
or
mov
iret
mov
adc
loop
sub
js
mov
push
pop
ljmp
xor
pinsrw
pop
mov
push
lahf
or
push
mov
mov
mov
sub
outsl
mov
dec
lds
mov
or
nop
cmp
lock
add
int
arpl
sub
pusha
mov
rorl
hlt
mov
dec
gs
outsb
ja
push
repz
jae
mov
push
test
imul
pop
loop
imul
insb
mov
test
clc
imul
and
rorb
dec
jne
or
lret
mov
movsl
sub
push
sbb
call
loop
pusha
shrd
dec
mov
push
fxtract
sahf
out
jae
xchg
in
scas
xchg
test
sbb
movsl
int3
push
mov
inc
lret
ret
lcall
jmp
daa
xchg
jb
test
jo
and
fidivl
data16
cmp
int
fistl
push
outsl
ds
mov
sti
enter
or
jno
cmp
bound
or
js
out
je
add
mov
sub
push
pusha
or
mov
ficoms
std
icebp
cmpsl
jno
loop
sbb
and
jno
sbb
ret
jnp
dec
and
clc
stos
ljmp
das
xchg
test
push
pop
lock
stos
rorb
subl
dec
sbb
or
ja
sbb
inc
repz
push
cmp
mov
sbb
sub
nop
outsl
out
mov
inc
out
addb
enter
jb
rclb
lock
mov
mov
frstor
gs
adc
xor
mov
dec
out
mov
xor
push
push
pop
or
mov
popa
and
hlt
add
inc
add
popa
iretw
dec
pusha
rorb
scas
pusha
test
add
femms
shrb
jmp
mov
outsb
adc
into
stc
scas
call
insb
add
in
lods
stos
push
dec
rclb
lock
icebp
add
mov
dec
sbb
jl
lods
je
shll
ftst
xor
xchg
and
into
sbb
lods
adc
cli
loop
push
loope
cmp
jnp
pop
js
outsb
jae
neg
stos
push
ds
pop
lret
dec
cmpsl
dec
loop
arpl
out
mov
and
imul
or
xchg
imul
out
flds
push
sub
mov
inc
ss
arpl
adc
adc
and
cmc
mov
push
cmp
cs
add
cmc
jl
lods
out
ljmp
inc
ljmp
lods
dec
lea
iret
outsl
dec
add
pop
xor
sti
daa
or
pop
and
adc
dec
sti
cmpsl
pop
clc
loope
lods
sub
outsl
mov
jae
lahf
lret
push
sti
outsl
inc
jae
mov
daa
addr16
and
cmp
pusha
cwtl
mov
sub
xchg
loopne
enter
mov
push
aaa
xorb
sahf
adc
call
ja
mov
cmpb
insl
inc
xor
fiaddl
push
ret
mov
mov
inc
mov
lret
jge
dec
sub
adc
repnz
lods
jl
out
xchg
xchg
aad
mov
adc
sbb
or
jae
pop
jns
stos
jae
mov
inc
mov
dec
jecxz
outsl
call
shr
sbb
push
mov
jno
mov
sbb
or
clc
inc
dec
inc
ret
xor
out
outsb
mov
sub
out
cltd
sbb
outsl
in
dec
jg
inc
cmp
aaa
rcl
hlt
movsl
sub
pop
jle
sbb
mov
mov
adc
cmp
test
mov
xchg
insb
out
push
sbb
bound
add
add
rcrl
mov
outsb
cld
iret
jo
imul
or
out
outsl
add
insb
addr16
sub
rcrb
or
add
lods
jae
imull
xchg
fimuls
jae
loop
cmp
repz
push
sub
out
cmpsb
lock
pop
jae
jmp
pop
jmp
adc
and
pushw
mov
pop
insl
outsb
pop
mov
ret
lods
lods
jp
mov
push
scas
jb
or
adc
inc
in
dec
jae
jp
out
sbb
mov
outsl
push
ja
xchg
leave
std
popa
movsb
mov
rorb
loopne
jns
mov
orl
add
dec
cmp
xchg
outsb
xchg
sub
gs
xchg
pop
mov
sub
pop
adc
mov
imul
loop
addb
xchg
cmpsb
movl
mov
push
into
test
mov
imul
outsl
xchg
scas
ja
or
pop
jge
out
in
icebp
mov
or
daa
push
ret
push
sub
cmpsb
and
sahf
cs
notl
cs
lahf
sub
daa
add
push
call
lods
loop
xor
push
shrb
xchg
iret
mov
jp
ficoms
outsl
lods
push
inc
in
xor
mov
test
out
in
jmp
mov
imul
push
lea
mov
gs
mov
and
dec
xlat
lret
scas
cld
mov
sbb
mov
or
sub
jae
into
mov
xor
fwait
outsb
mov
jl
loope
fisubl
pop
and
xchg
outsl
std
iret
sar
cwtl
adc
jo
in
mov
mov
mov
xor
or
subb
in
outsb
lret
inc
out
jecxz
pop
adc
add
sub
out
inc
gs
clc
in
ficoms
fsubl
outsb
xchg
jecxz
and
clc
leave
ja
idivb
into
mov
push
sahf
inc
imull
pop
sub
cli
out
int3
stos
pop
add
shl
leave
fistps
and
jbe
mov
data16
cwtl
add
shrb
and
fs
mov
ret
repnz
call
inc
outsb
lahf
jnp
mov
adc
incb
imul
push
in
mov
push
mov
mov
mov
out
pop
adc
mov
mov
es
and
leave
movsl
xchg
outsl
jl
pop
jg,pt
mov
sti
pop
and
ret
sub
pop
in
rorb
jnp
push
mov
jae
test
fs
jge
inc
lods
in
fists
iret
dec
lock
dec
mov
jne
fucom
pop
rorb
adc
mov
test
cmpsl
cmc
loope
xchg
pop
pop
ret
or
mov
mov
mov
ljmp
jge
or
pop
cmc
loope
inc
loop
sahf
adc
cmp
mov
ret
dec
cltd
stos
push
add
je
pusha
jmp
dec
imul
mov
sbb
push
sbb
sti
dec
movsb
sbb
in
in
in
loop
inc
jge
sbb
mov
push
mov
jnp
mov
and
hlt
scas
inc
pushf
push
out
add
addl
mov
fsubs
into
and
pop
cmp
aas
insb
stc
and
or
stos
push
test
fsubr
mov
iret
leave
inc
dec
lods
out
stc
cld
lods
inc
into
negb
pop
lea
int3
and
cs
std
outsb
add
hlt
out
add
les
dec
jmp
dec
iret
cli
cmp
mov
and
shr
outsl
cmpsb
push
filds
dec
lods
xor
lahf
or
cmp
push
mov
imul
lret
and
scas
push
out
mov
lods
jno
repnz
mov
pushf
and
lds
push
pop
inc
jmp
push
or
xchg
xchg
outsb
mov
clc
sub
dec
jnp
push
repnz
orl
pop
addl
mov
int
popl
xchg
adc
lods
out
cwtl
inc
das
repnz
insl
jle
das
fucom
dec
lahf
repnz
clc
inc
int3
add
sub
mov
cmp
insl
jmp
sbb
mov
scas
cwtl
shrl
out
push
xchg
mov
pop
push
cmp
fmul
loop
mov
jns
outsl
sub
lods
cmp
inc
mov
pop
scas
add
dec
mov
in
xlat
mov
jae
lods
mov
idiv
insb
dec
sbb
or
sti
aas
fadds
fstps
shll
xchg
orl
mov
xor
pop
sub
xchg
and
sbb
push
cmpsl
jp
inc
call
jle
or
aad
or
lods
push
ljmp
sub
dec
int3
add
sbb
into
or
mov
daa
inc
inc
daa
out
out
std
add
ret
xchg
dec
mov
push
or
ja
call
jbe
xchg
out
lods
jae
or
pusha
or
mov
iret
movsl
jno
int3
lods
mov
jg
sti
or
addr16
pop
movsb
in
dec
and
scas
fwait
xchg
lods
in
repz
mov
jae
repz
mov
loop
pop
repz
imul
fildll
xchg
or
inc
cmp
push
nop
inc
shll
bound
mov
push
push
fwait
adc
sub
clc
enter
sub
jmp
cmp
inc
rorl
out
hlt
jb
mov
outsl
hlt
xor
push
imul
pusha
xchg
pop
xor
push
insb
push
lret
test
insb
dec
scas
dec
xchg
sahf
lea
xor
push
ljmp
inc
jns
jp
push
mov
int
dec
mov
daa
repnz
dec
jns
dec
jmp
cmovle
sbb
jno
xchg
cmp
hlt
popa
and
mov
adc
scas
testb
sbb
jl
stc
push
pusha
lock
pop
sarb
aam
mov
xchg
mov
loopne
ret
mov
arpl
lods
popl
mov
call
data16
push
push
push
cmp
or
sarb
inc
loopne
test
fcoml
pop
loop
xor
inc
repnz
pop
adc
mov
mov
mov
mov
fcoms
xor
add
add
test
mov
pop
popa
arpl
push
sbb
iret
sub
or
faddl
and
sti
or
lret
iret
das
outsl
xchg
sub
cmp
aas
repnz
cmp
jmp
push
out
rolb
fsubl
lds
popa
jge
pop
out
adcb
xor
sbb
dec
iret
and
mov
les
negl
daa
inc
push
and
add
xchg
stos
mov
test
icebp
fldpi
or
dec
inc
ror
mov
les
scas
or
daa
out
mov
insb
fcompl
das
or
mov
call
movsl
push
sub
es
cmp
ret
fsubr
push
sbb
arpl
sub
lods
pop
divb
addr16
in
adc
stos
jg
mov
aad
ss
ja
add
and
scas
and
push
loope
jae
push
adc
arpl
clc
aad
dec
sbb
dec
popa
push
lock
out
push
dec
outsb
pop
pop
pushf
insl
ret
or
jae
rol
ss
add
mov
adc
jae
insb
fwait
inc
stos
jmp
jle
add
mov
dec
dec
xchg
mov
mov
cmpsb
cwtl
jle
sti
ffree
leave
outsb
adc
negb
push
out
aam
push
xlat
notb
lods
jge
in
ljmp
int3
inc
outsb
out
ja
add
lea
add
xchg
or
push
je
sbb
jnp
inc
fsts
popa
mov
dec
push
fiadds
jno
push
push
jb
or
scas
nop
xchg
lock
sub
dec
fstl
outsb
out
push
mov
lods
addr16
dec
mov
cld
sbb
mulb
repnz
adc
pop
dec
faddl
xchg
cmp
pop
xchg
cli
out
xchg
loop
fisttpl
inc
cmpsl
dec
outsl
or
push
and
adc
adc
enter
repnz
and
or
lods
xchg
inc
mov
shr
adcb
dec
add
mov
add
outsb
jg
mov
je
clc
leave
or
callw
fidivs
js
lods
ficomps
inc
inc
lods
lock
shlb
imul
cmpsb
cmp
std
push
ds
fidivs
xor
and
mov
sbb
mov
pop
dec
push
adc
push
enter
or
xor
xorl
xchg
dec
pushf
stos
lea
adc
jle
dec
xchg
cwtl
mov
ljmp
insl
frstor
int
add
data16
imull
fidivs
loop
filds
cld
popf
lock
mov
imul
movsb
jno
xchg
cmpsb
aaa
cs
jge
call
mov
pop
or
inc
jle
push
cmp
sbb
dec
dec
push
inc
sbb
jbe
and
insb
fucomip
push
cmp
xchg
subl
int3
adc
out
or
test
int
loop
cmovg
enter
cmpsl
repz
repnz
jmp
jg
sub
jmp
jbe
jecxz
aas
or
std
jg
popa
into
push
add
scas
outsb
jle
pop
mov
fst
dec
mov
andb
rclb
add
jecxz
and
inc
inc
out
adc
mov
adc
or
call
jo
adc
movsb
sub
mov
xor
pop
addr16
arpl
jne
cmpsb
and
push
mov
mov
ljmp
fisubrs
and
lea
push
data16
pop
or
mov
push
cmpsl
inc
add
or
push
fdivp
dec
xchg
cmp
shrl
xor
test
clc
xchg
add
sub
shlb
pop
inc
shr
outsb
sub
xchg
jl
mov
ret
xchg
xchg
mov
out
out
lock
in
leave
outsb
mov
gs
aaa
lock
es
pop
lahf
fstpl
xor
andl
mov
jg
mov
call
jbe
lret
add
mov
mov
pop
mov
fwait
sarb
or
nop
out
xchg
int
popf
jbe
imul
sbb
filds
mov
loopne
xchg
lret
mov
shlb
xor
sub
js
add
xchg
mov
inc
movsl
mov
dec
sub
call
dec
xchg
fcomip
in
cmp
or
push
sub
add
jo
sbb
ret
lds
pushf
aaa
sub
lret
mov
dec
enter
mov
inc
pop
push
sahf
mov
pop
gs
inc
cmp
xchg
jo
mov
fwait
mov
jne
cmp
fwait
sbbb
iret
lea
icebp
mov
fwait
imul
repnz
lret
lods
stos
movsb
push
add
jge
nop
add
xor
lock
or
lahf
in
lds
divb
mov
mov
ss
int3
insl
jb
lahf
push
cs
ret
daa
cmpb
es
cs
mov
je
mov
fisubl
add
repz
mov
and
js
repnz
and
sub
ret
fnsave
mov
mov
test
adc
arpl
pop
adc
scas
mov
mov
cld
push
clc
inc
cmp
or
jae
loope
and
jle
mov
mov
outsl
enter
or
mov
in
push
ljmp
test
xchg
push
int
jo
add
jp
mov
outsb
imul
fstpl
bound
in
mov
jg
stos
dec
fidivs
fsubrp
mov
xchg
dec
inc
pop
shr
xchg
jns
mov
adc
mov
insl
fs
jns
loop
add
cld
outsb
lods
sbb
outsl
jmp
scas
icebp
ret
mov
bound
push
rcrb
adc
xor
scas
pushf
mov
sub
mov
scas
and
cld
jmp
inc
jne
fidivs
fimuls
push
xchg
mov
in
lds
out
dec
jp
mov
imul
jl
lock
shlb
push
mov
jmp
jmp
sbb
dec
out
mov
inc
xor
mov
xchg
mov
lea
ret
jbe
gs
fs
push
loopne
mov
rcrl
push
call
pusha
sti
sub
push
xor
mov
lret
data16
in
cli
push
cmpb
mov
push
fsubrs
ret
jns
in
sub
ljmp
cmpsl
add
int3
out
mov
daa
hlt
lds
das
stos
xchg
or
push
mov
inc
push
repz
out
dec
int3
mov
fists
call
lods
mov
add
repz
jns
sub
iret
adc
ljmp
mov
sub
popa
aad
ja
mov
lock
fisubs
lods
pop
mov
jmp
aas
jae
sbb
mov
jne
jecxz
cmp
jbe
stos
loop
notb
stos
outsb
cld
add
cmc
sbb
add
push
jae
mov
inc
push
dec
in
xchg
add
push
and
add
stos
insl
lahf
lret
lock
xchg
sub
aas
ljmp
in
stos
outsl
pop
pop
mov
ds
jg
gs
xchg
popa
xor
xchg
out
aas
stos
mov
jae
hlt
int
mov
aad
xchg
in
jmp
mov
jge
xor
jp
push
stos
fisubs
lods
jae
xor
or
mov
in
adc
ret
pop
pusha
mov
mov
and
dec
jns
pop
je
out
fimuls
loope
arpl
or
js
mov
pusha
cli
jae
xor
fistps
cmpb
imulb
push
cmp
sub
pop
mov
addr16
pop
and
test
mov
mov
scas
mov
mov
repnz
lods
bound
rcrl
xchg
sbb
mov
xor
add
cmpsl
arpl
pop
cltd
inc
or
mov
test
or
inc
lea
bnd
adc
jecxz
rcr
xchg
and
shlb
jmp
into
loopne
in
jl
jae
aas
sbb
std
test
pop
ret
xchg
lods
lea
loop
fdivr
testb
push
jp
jns
inc
xlat
lret
insb
and
adc
stc
lret
jns
enter
lods
enter
call
jae
imul
gs
arpl
addr16
sub
fadd
lods
mov
xchg
shl
daa
dec
push
cs
push
jle
das
cmpsl
jle
scas
add
inc
xor
test
add
push
insb
adc
dec
jno
mov
add
pop
imul
scas
mov
cmc
loopne
in
lock
mov
bound
mov
in
in
push
ja
add
call
scas
outsb
nop
mov
add
xor
and
mov
pop
cmp
enter
icebp
jae
xor
dec
js
jp
scas
aaa
or
aad
or
cld
push
dec
sub
mov
mov
subb
sahf
jb
push
add
arpl
roll
mov
mov
addr16
cmc
or
out
int
andl
xor
cmpsb
inc
outsl
mov
pop
xor
jns
fcomip
cmc
sbb
mov
jge
mov
mov
or
push
jb
dec
insl
scas
insb
and
sbb
pop
loope
jge
sti
dec
dec
out
cmpsl
cmpsb
out
pop
call
addr16
sti
lods
addr16
addb
repz
push
pop
sbb
jbe
pushf
mov
outsl
loop
out
clc
mov
in
imul
testl
test
dec
js
dec
imul
jmp
cld
mov
inc
in
dec
imul
outsl
dec
push
scas
scas
mov
jle
mov
imul
in
test
or
sbb
jae
fldl
mov
cmp
iret
out
mov
cmpsb
inc
imul
jmp
ret
xchg
insb
test
in
out
sbb
int
test
movsl
movsl
into
dec
aad
inc
scas
lock
sub
cli
sbb
jle
lods
out
mov
cmpsb
test
adc
clc
ror
pop
push
lret
sti
pop
push
outsl
imul
outsl
mov
int3
aad
neg
cmc
push
call
in
int3
out
adc
rolb
cmpsl
loope
sbb
cmp
clc
subb
movsl
inc
inc
mov
fisttps
bnd
lcall
sub
sub
je
lock
inc
jecxz
add
out
pushf
imul
clc
daa
pusha
jge
xor
leave
sub
addr16
sbb
cmp
int3
mov
les
and
stc
das
jg
or
leave
outsl
mov
test
nop
push
mov
lock
dec
inc
mov
xchg
dec
outsl
mov
outsb
push
jnp
imul
push
iret
sbb
das
cld
rorl
shl
flds
mov
mov
add
outsb
icebp
mov
push
pop
or
mov
insb
leave
inc
leave
pop
stos
pop
lea
dec
mov
addr16
mov
mov
adc
ljmp
jns
lods
xchg
cs
xor
rcrl
mov
xlat
imul
jg
jg
outsl
fcoml
std
loopne
mov
jecxz
pop
mov
bound
out
sbb
inc
fidivl
aas
sub
ja
movsl
cli
adc
push
fisttpl
xchg
mov
inc
mov
mov
sbb
bound
lea
or
mov
gs
fmuls
scas
mov
inc
ja
adcb
xchg
mov
das
outsl
mov
scas
out
jnp
jne
in
outsb
jns
or
mov
test
enter
mov
inc
pusha
or
mov
outsl
or
lock
fnstsw
mov
push
sub
adc
xor
scas
xor
sbb
mov
mov
jns
out
push
mov
out
gs
lods
iret
and
push
jb
add
or
ret
inc
lock
pop
dec
add
xchg
fmull
cmpsl
out
leave
dec
sarb
jbe
stos
imul
int3
mov
pop
push
insb
leave
or
call
xchg
mov
sub
es
add
mov
push
mov
out
or
jae
and
repnz
jae
scas
outsb
add
mov
outsl
xchg
out
cmpsb
repz
sbbl
outsl
mov
leave
mov
hlt
push
sub
cmc
loop
mov
ret
cmp
ret
xor
iret
insl
out
mov
test
push
das
dec
inc
out
inc
pop
fildll
insl
cmpb
aaa
imul
lcall
cli
mov
mov
gs
call
mov
lods
neg
xchg
mov
mov
imul
or
adc
clc
popa
mov
mov
inc
fimuls
ljmp
cld
mov
xchg
popa
fistps
repz
jae
gs
push
cmp
test
dec
scas
cld
ljmp
cli
dec
jg
dec
enter
mov
jae
cwtl
push
int3
cli
andb
jecxz,pn
les
in
gs
addr16
loopne
mov
imul
dec
mov
jle
dec
insb
jl
sub
faddl
movsb
call
iret
int3
pop
in
inc
out
jp
mov
imul
aad
cmpsl
in
rorl
add
scas
lret
dec
popa
xor
pop
lods
lock
outsl
cltd
push
push
arpl
push
shlb
jecxz
gs
xchg
mov
mov
push
ret
mov
push
adc
scas
dec
ret
jmp
jns
pop
repnz
cmp
in
imul
push
call
xchg
mov
mov
bound
mov
fldcw
add
mov
iret
mov
cltd
pop
fistpll
mov
mov
add
aaa
subb
pop
mov
xchg
insb
dec
xchg
adc
mov
test
mov
jge
les
test
mov
push
mov
jecxz
jno
xchg
movhps
cmp
mov
pop
outsl
scas
andl
imul
push
sbb
outsl
mov
or
cld
mov
mov
punpcklbw
stc
jmp
ja
mov
pusha
mov
push
and
fwait
jae
mov
cltd
in
sbb
mov
mov
das
push
jge
rcr
gs
pop
xchg
out
rol
int
subl
push
mov
push
stos
pop
mov
adc
fwait
outsl
test
test
jb
xchg
out
mov
pusha
or
ret
call
jle
push
sbb
fiadds
cmp
imul
int3
inc
pop
lcall
mov
push
sub
das
mov
imul
pop
mov
mov
jae
dec
ret
mov
xor
setno
cmp
nop
stos
mov
out
adc
lods
mov
add
push
sbb
test
fs
pop
jg
shrl
in
and
shrl
dec
jo
mov
xchg
enter
leave
loopne
outsl
inc
push
sbb
ljmp
mov
add
imul
pop
xchg
sahf
jne
xchg
test
cmpsb
jae
or
inc
jno
ljmp
aaa
and
adc
mov
push
mov
fsubl
dec
mov
lock
push
out
subl
jmp
lock
ret
pop
sbb
mov
lds
push
loopne
adc
lods
or
das
int3
or
jmp
adc
ficoms
iret
aaa
sub
aam
jmp
movsb
mov
inc
or
xchg
xchg
cli
iret
jne
imul
insl
sbb
mov
mov
mov
xor
mov
sub
iret
push
sbb
push
mov
daa
cmp
insl
mov
cmp
jb
mov
jbe
loope
and
inc
imul
inc
push
xor
cmp
scas
cs
cmp
insb
subb
dec
imul
jle
call
add
jle
out
mov
lods
decb
dec
out
sbb
jl
mov
jns
push
add
std
push
sahf
xchg
xchg
push
nop
test
sub
sbb
imul
movsb
xchg
pushf
adc
leave
dec
and
scas
loop
pop
pop
jae
sbb
int3
add
fsub
or
sbb
imul
push
fstpl
out
xchg
in
mov
cld
shl
xor
outsl
mov
dec
ret
push
in
dec
hlt
pop
mov
dec
movsl
push
lds
inc
dec
packuswb
in
addr16
popa
loopne
fldcw
sti
scas
pop
test
aam
dec
pop
hlt
sub
bound
outsb
jbe
or
mov
out
inc
ds
xchg
jno
scas
loopne
push
andl
cmpsl
addb
jmp
mov
jle
sub
cli
fmull
cmp
mov
xchg
mov
pop
pop
cltd
imul
or
mov
roll
insl
add
outsb
jns
lods
add
mov
and
push
popa
inc
cmp
repnz
roll
and
sbb
rolb
in
jmp
jae
cld
cmp
cmpsl
cltd
xchg
dec
xchg
mov
xchg
sahf
mov
jne
or
lock
jle
sub
mov
mov
fstl
repnz
out
fdivs
inc
subl
in
mov
sbb
lods
leave
subb
fwait
jns
mov
lds
addr16
jl
xor
int3
xchg
scas
inc
jno
sub
stos
sub
jmp
lea
cmpsb
ja
cmp
mov
xor
insb
adc
jnp
daa
stos
int3
daa
jmp
aaa
in
mov
idiv
scas
movsb
data16
push
jbe
cmpsl
dec
push
loop
fsubl
mov
scas
and
add
addr16
push
xor
mov
test
imul
out
dec
mov
mov
or
pop
in
xchg
sahf
insl
out
mov
inc
add
shrb
lock
clc
cld
cmp
scas
jno
cmc
aam
movsl
and
cltd
mov
jne
xor
mov
cltd
ret
outsb
jno
sbb
jge
mov
mov
mov
lock
je
mov
cwtl
lcall
and
rcll
das
loope
push
add
sbb
jae
les
cld
stos
icebp
lcall
lret
rclb
outsb
sar
xchg
das
mov
icebp
sub
jg
out
imul
xchg
lea
aaa
pop
in
outsb
cltd
mov
hlt
dec
pop
loop
in
sub
xchg
ss
push
sbb
icebp
cmp
out
ljmp
pop
int3
add
out
inc
sbb
fst
pop
daa
xchg
shl
divb
mov
xor
jb
bound
test
cmp
clc
mov
loope
push
imul
add
repnz
repnz
cmpsb
and
push
pop
pop
xchg
cmp
pop
pop
das
mov
mov
jnp
push
out
pop
adc
data16
stos
ja
clc
jbe
inc
jns
push
dec
dec
ja
mov
daa
jnp
out
cmpsl
outsb
sti
dec
int3
and
jp
out
mov
jecxz
outsb
fidivs
xor
les
out
sahf
stos
sbb
sbb
add
push
dec
cmp
inc
inc
lods
outsl
jb
out
add
xor
aaa
rcrb
test
bound
imul
stos
jne
and
nop
pop
mov
mov
adc
nop
pop
lea
out
and
insl
sub
push
in
in
fstpt
aas
dec
daa
into
jecxz
mov
fsts
sub
call
mov
out
pop
mov
xchg
push
roll
push
pop
negl
insl
lcall
mov
mov
sub
cli
inc
into
movsb
cmpsl
outsb
pop
lods
xor
adc
push
enter
push
outsb
movsb
mov
mov
mov
mov
in
or
outsl
je
jmp
dec
rclb
or
push
add
push
push
mov
cli
inc
cs
push
inc
out
mov
aam
dec
imul
mov
sub
push
mov
fs
cs
in
inc
mov
aam
insl
push
mov
mov
mov
insl
dec
inc
or
xchg
lock
pop
xchg
mov
jle
leave
inc
out
pop
jnp
mov
aas
adc
cwtl
push
push
nop
push
dec
gs
dec
ja
cmpsb
call
mov
dec
jle
push
aaa
insl
pop
das
mov
mov
ja
mov
ret
mov
cmpsl
in
sub
sub
scas
enter
jle
sarb
or
push
mov
push
pop
je
mov
ljmp
imul
stos
jb
addr16
mov
out
mov
dec
out
gs
in
fs
jecxz
mov
test
dec
cmpsl
arpl
mov
lret
call
out
leave
in
mov
in
jnp
packuswb
or
adc
pop
fstpl
fwait
or
mov
mov
jmp
cmpsl
loope
xchg
sub
mov
or
stc
push
lahf
xor
pop
test
mov
cli
scas
jns
push
sbb
mov
scas
sarb
scas
push
add
mov
adc
lock
mov
push
jp
lahf
or
lods
dec
and
mov
gs
and
in
outsl
idiv
data16
cmp
pop
jle
in
adc
mov
xchg
stos
cmp
les
cmp
sti
into
pop
loope
aad
scas
xor
push
cmpsb
jb
out
jbe
ljmp
xlat
jle
lods
ss
ljmp
negl
subb
mov
jl
inc
cld
dec
pop
mov
mov
call
scas
leave
dec
scas
clc
stos
dec
out
loop
mov
iret
mov
hlt
outsb
dec
mov
or
cwtl
add
xor
enter
pop
call
insl
addr16
int3
jno
in
roll
scas
push
mov
pop
shrl
pop
jae
jbe
aaa
mov
and
outsb
mov
mov
fsub
das
mov
mov
mov
jnp
adc
dec
mov
scas
jle
fnsave
and
imul
mov
pop
ja
rcr
push
xor
or
fs
data16
loope
lock
loopne
or
mov
sbb
and
subb
out
js
nop
xchg
jae
scas
inc
lock
pop
mov
pop
sub
jbe
pop
stos
adc
mov
jns
xchg
les
test
mov
or
cmpsl
mov
mov
adc
jae
es
pop
rolb
out
fnstenv
lds
sbb
test
mov
mov
push
mov
dec
mov
call
fdivs
inc
adc
mov
out
rcll
lret
mov
ja
lock
inc
insb
push
out
mov
ficompl
pop
jmp
das
mov
in
fisttps
ljmp
and
jns
pop
adc
mov
out
sub
test
lods
mov
rcl
mov
xchg
subl
dec
pop
push
mov
jne
push
dec
rorl
sti
movl
mov
test
out
adc
inc
cmp
and
loopne
repnz
mov
push
enter
cmpb
loopne
and
outsb
pop
jb
sbb
dec
inc
insb
add
andb
xor
negb
mov
out
cld
pop
inc
out
push
push
movsl
pop
mov
jo
aad
mov
and
mov
pop
pmaxsw
shll
loopne
in
and
dec
aam
xchg
arpl
movsl
in
in
sbb
add
and
add
rolb
ficoms
popa
icebp
clc
pop
adcb
jl
outsl
andl
jno
push
xchg
jecxz
in
insb
push
sub
scas
inc
jmp
mov
in
ja
outsl
mov
lds
int3
jle
xor
cmp
cmpsl
rorb
repnz
ret
mov
xchg
pop
push
dec
xchg
mov
jmp
mov
cmp
ret
call
or
pop
mov
cmpps
push
rol
sub
je
cmp
jecxz
mov
mov
call
mov
inc
hlt
dec
adc
fiadds
sub
daa
sub
push
sub
addl
inc
pop
or
xchg
rcrb
inc
addr16
stos
or
xor
call
insl
data16
out
push
loop
hlt
xchg
sbb
fisubs
mov
mov
sahf
das
push
ret
mov
mov
mov
aas
call
std
insl
ja
out
outsl
jl
xor
mov
jmp
sub
mov
mov
jl
mov
push
or
jge,pn
jb
push
faddl
and
loop
rcr
movsl
jns
jmp
mov
ljmp
inc
stos
ljmp
push
push
cmp
adc
sub
xchg
shlb
sti
push
jnp
sbb
adc
lds
sarl
rorb
pushf
fldenv
std
dec
sub
outsb
sub
or
bound
lds
pusha
scas
imul
stos
in
pop
sti
out
mov
ret
loop
pop
add
adc
xor
insl
push
test
push
inc
xchg
cs
mov
cmp
inc
rol
sti
push
push
adc
dec
sub
ret
incl
pop
rol
jno
shlb
pop
subl
repnz
jb
je
and
in
dec
lock
mov
add
xor
pusha
push
ret
enter
into
in
push
out
imul
insl
mov
mov
aad
ja
call
xor
imul
jno
test
cltd
jmp
sub
adc
testb
or
aam
insb
or
mov
es
and
insl
lea
cmp
outsl
fiaddl
inc
loopne
jge
aam
mov
addr16
hlt
addr16
jmp
jmp
mov
lods
imul
adc
mov
pop
imulb
xchg
jle
cmp
mov
loopnew
inc
fldpi
sbb
jb
imul
stos
test
shr
pop
out
dec
and
leave
adc
pop
xor
jno
push
rcll
mov
push
daa
lock
push
lret
sub
stc
cwtl
xchg
call
loop
lea
nop
les
rorb
in
pop
dec
leave
mov
lea
lods
test
stos
and
aaa
jo
pop
nop
not
daa
fidivrs
or
mov
outsl
out
popa
jbe
outsb
in
outsl
out
mov
outsl
insl
jmp
pop
in
out
insb
insb
fs
adc
dec
push
sbb
and
mov
cmpsl
mov
mov
push
js
loopne
rcll
stos
sbb
lock
add
and
jge
cmpsb
jae
xor
cmc
xchg
pop
outsb
inc
ja
hlt
xor
sbb
pop
pusha
jle
shrb
xchg
mov
movsb
add
aaa
sub
dec
scas
test
mov
sub
lods
dec
dec
scas
aaa
les
cltd
testb
loop
insl
or
lahf
mov
lahf
scas
fdivs
xor
addr16
enter
lods
in
scas
into
mov
mov
out
imul
jne
inc
into
fdivl
push
xchg
pop
das
iret
xchg
neg
xor
xchg
push
enter
xor
cltd
loop
out
outsb
mov
out
dec
xchg
cmc
test
mov
jl
pop
mov
dec
in
loope
jno
scas
outsl
ljmp
andb
mov
jecxz
insl
push
sbb
jae
cld
push
xchg
adc
jp
insl
insb
jg
jae
mov
and
sub
pop
out
imul
jae
pop
out
jmp
mov
mov
cmpsb
out
mov
mov
scas
mov
or
mov
mov
inc
nop
mov
dec
jnp
xchg
fidivrs
add
in
add
pop
dec
and
out
stos
dec
in
mov
mov
inc
fs
insb
xlat
dec
addr16
mov
pop
push
push
cmovb
adc
pop
js
ret
inc
dec
dec
add
cmp
mov
scas
add
enter
mov
sahf
insl
mov
in
pushw
add
pushf
in
int3
std
jecxz
leave
pop
or
pushf
cmpb
mov
int3
push
push
daa
aas
xor
ja
out
out
ud1
test
and
jmp
inc
ja
outsb
jae
xor
inc
in
rcrb
into
insb
insb
daa
imul
push
jl
sbb
and
iret
ljmp
push
pop
cli
divb
jbe
sub
hlt
daa
imul
or
gs
gs
cli
and
ljmp
sbb
xchg
inc
imul
fstl
out
or
mov
pop
stc
lds
ljmp
ljmp
out
jae
scas
adc
cmpsb
lret
cmp
aaa
and
mov
aaa
movsl
pop
addr16
mov
in
test
int3
jae
push
cmp
add
es
pop
into
sti
cmp
outsl
sahf
add
stos
lock
mov
mov
and
daa
xchg
and
into
rclb
add
xor
pop
imul
popl
loop
addr16
aas
jmp
cs
rcrb
scas
sbb
ret
ret
ja
gs
sbb
dec
out
scas
int3
dec
int
mov
addr16
int3
dec
ja
adc
mov
mov
scas
shrl
outsl
cli
icebp
xchg
cmp
aaa
imull
or
rol
inc
insl
push
les
in
ja
jl
sub
aad
and
sub
jb
sub
shl
adc
movq
cs
addr16
insb
jecxz
fs
jg
pop
dec
clc
push
fstps
jb
and
mov
outsb
mov
xchg
jae
imul
mov
or
xchg
cs
cs
jle
cmp
out
jne
popa
sbb
dec
inc
lock
imul
adc
push
pop
adc
push
adc
lods
cmp
ret
mov
and
or
xchg
pop
jae
call
loope
adc
sub
cmp
inc
mov
stc
dec
jl
mov
int3
into
mov
imul
mov
stc
inc
pop
jns
mov
je
mov
lock
jg
add
popa
movsb
lock
in
test
ljmp
or
pusha
xor
mov
repz
or
ret
push
push
mov
movsl
and
loope
hlt
outsb
out
es
sbb
cmp
mov
mov
hlt
mov
out
xor
addr16
pop
mov
cmpsl
mov
stos
loope
cmp
sub
xchg
mov
jle
enter
cmp
fcompl
or
push
add
out
or
sub
push
in
data16
or
out
adc
sar
add
fcomps
enter
jnp
pop
test
add
push
or
add
stos
inc
addr16
outsb
adc
out
ud1
pusha
shlb
dec
and
in
jmp
push
in
mov
xchg
idivb
mov
sahf
xorl
xchg
and
insb
xchg
les
jp
xchg
iret
sub
and
mov
mov
scas
add
jle
jg
rorb
shr
add
inc
push
add
std
nop
pop
mov
and
jp
adc
dec
inc
out
jp
xchg
outsl
rorl
aam
idivb
clc
mull
xchg
push
jecxz
repz
jle
xor
out
outsl
pop
shrl
sbb
mov
ja
push
fwait
out
test
xor
out
test
out
xchg
lret
into
mov
loopne
xchg
cmp
roll
pop
enter
popa
out
imul
out
push
jmp
push
das
unpcklps
in
mov
test
dec
jmp
out
in
push
sub
mov
into
mov
push
sub
movsb
pop
mov
sbbb
insb
and
jg
push
test
popa
jecxz
scas
mov
sub
cmpsb
movsb
loop
sub
outsb
pop
push
nop
adc
mov
aad
sbb
outsb
insb
jae
aas
test
mov
xor
pop
sbb
mov
jmp
lock
pushf
mov
lods
mov
xchg
out
nop
push
sub
ret
mov
dec
sub
fimull
fsubs
out
shlb
outsl
shrl
shll
lock
push
adc
out
ds
imul
lcall
adc
in
xchg
sub
push
shlb
pop
lcall
cmp
lods
jmp
pop
mov
je
loop
adc
push
mov
mov
xchg
lock
add
or
mov
das
clc
cmc
or
sub
or
int3
nop
sarb
mov
cld
out
cltd
rcrb
cmp
jg
scas
jle
shrb
int3
jp
adc
das
push
sbbl
lods
movsb
stos
mov
fucom
movsb
imul
loopne
idivl
jg
or
test
pop
ret
xor
jl
and
cmp
lret
mov
repnz
push
out
inc
jae
test
jmp
sbb
data16
nop
scas
and
sub
jns
movsb
cld
enter
test
shlb
popa
mov
fldenv
std
je
daa
ret
es
jae
repnz
daa
movsl
outsb
out
imul
xor
dec
in
xchg
xchg
dec
mov
int3
or
and
lret
mov
ffree
fsubl
call
cltd
cmp
gs
outsb
arpl
sub
push
jecxz
jmp
outsb
clc
jmp
pop
sahf
arpl
dec
cmp
jmp
jg
pop
arpl
add
insl
cld
jle
ret
fisttpll
ljmp
int3
xor
cld
arpl
xchg
mov
decl
je
xor
or
xchg
push
scas
jl
fcom
pop
ret
lods
and
stos
sarb
movsb
jbe
and
fsubp
in
movsb
into
out
out
dec
or
push
outsl
hlt
out
push
pop
fiadds
mov
push
mov
aaa
int3
in
lock
xchg
insl
fwait
cli
hlt
out
sbb
mov
shrb
outsl
pop
inc
test
dec
mov
inc
or
pop
int3
daa
cld
add
lret
dec
push
pop
or
sub
jnp
push
mov
pop
es
ret
les
add
jne
in
pop
xor
pop
jnp
fldenv
cmp
adc
shrb
aam
icebp
fdivs
dec
sub
loopne
ja
dec
clc
jnp
shlb
mov
jns
push
cmp
testb
cmp
push
dec
stos
add
lods
shl
pop
call
pop
inc
outsb
jmp
pop
in
out
gs
and
ss
stc
jecxz
popa
push
or
mov
clc
ss
out
cmp
add
incb
imul
mov
pop
pop
cmp
xchg
or
daa
add
outsl
rcrl
sub
sti
incl
arpl
ds
shlb
mov
outsb
divl
mov
cmc
xchg
sbb
xor
push
adc
fidivs
and
push
subb
cmp
lret
and
xchg
sub
or
outsb
mov
ljmp
in
push
test
loop
or
mov
cmpsl
and
sub
fdivrl
scas
stos
xchg
jle
cld
enter
outsb
std
mov
xor
inc
cmp
fbstp
out
push
cmp
subb
pop
daa
jl
adc
nop
lcall
xchg
sub
or
outsb
inc
in
or
mov
mov
mov
cmp
mov
flds
dec
or
mov
pop
jno
and
in
mov
fmul
das
push
sahf
pop
mov
xor
and
pop
pop
push
fxch
daa
and
push
jmp
in
movsb
pop
sti
rclb
lock
daa
nop
or
mov
mov
pop
movd
repnz
repz
cmp
outsb
jbe
mov
lret
fimuls
stos
add
dec
fucomip
xor
jmp
xchg
mov
jge
insl
pop
jmp
cmpsl
and
scas
pop
push
lcall
jp
enter
push
orl
int3
sub
loope
cmp
jbe
stc
fisubrl
and
test
ljmp
les
push
push
jne
fbld
sub
cmc
mov
out
popa
jb
mov
rcrb
loopne
outsl
mov
loopne
cli
jbe
loopne
xor
fdivrp
xorl
out
jno
xchg
jbe
add
cmpxchg
pop
sti
out
sbb
popa
cmp
push
loopne
lret
mov
lea
add
addr16
or
mov
popa
out
jl
bound
sub
aad
in
inc
dec
xchg
fsubr
nop
cmp
addr16
pop
and
inc
insb
xchg
test
adc
xorl
sub
push
sbb
push
fidivrs
data16
out
mov
mov
ret
rorl
imul
inc
int3
cli
jbe
ds
test
in
jmp
xchg
push
or
sahf
inc
test
push
xchg
add
and
lahf
mov
xchg
sub
mov
pop
push
out
mov
lock
ljmp
in
sub
jne
adc
jae
fidivrl
js
pop
ret
in
fiaddl
xor
xchg
sub
fisttps
scas
iret
or
jle
cmpsl
mov
call
dec
jecxz
add
gs
mov
cmp
nop
in
test
es
push
in
pusha
and
xchg
sahf
pop
insl
addr16
outsl
sahf
insb
mov
in
or
fmull
jle
push
push
cmp
clc
mov
insl
pop
push
pop
lods
inc
or
out
movsl
insl
cmp
in
push
xor
mov
inc
cmp
mov
imul
or
shl
lahf
mov
adc
add
pusha
mov
cmp
mov
jns
out
push
sahf
dec
dec
jmp
and
cmp
stos
int
mov
scas
dec
out
mov
loope
outsl
scas
and
call
adc
push
dec
pop
popa
insb
sub
stos
arpl
pcmpgtd
das
jbe
xchg
jge
cmpsl
jmp
and
rcr
int
in
in
daa
int3
sub
sub
mov
in
fwait
imul
jecxz
in
in
insb
or
setl
push
xchg
mov
stc
cli
xlat
daa
or
mov
dec
push
cmp
out
or
lret
cmp
jmp
iret
arpl
and
int3
in
lock
rorb
mov
dec
inc
push
neg
xchg
jge
cmpsb
add
jmp
push
cs
mov
rclb
cmp
push
mov
ljmp
xor
pop
cmp
or
data16
or
das
stos
push
jns
mov
icebp
out
cmp
adc
mov
xchg
xor
insb
lock
xchg
inc
pop
arpl
fsubrs
adc
out
fldz
pop
fisubrl
xchg
scas
testb
jle,pt
lahf
in
push
push
xor
fnstcw
loop
add
lock
scas
xor
jmp
jle
cmc
sbb
pop
push
xlat
int3
jge
rcll
cltd
out
adc
fidivs
pop
pop
push
pop
pop
lods
push
pop
inc
out
sbb
cmpsl
add
ds
dec
fwait
scas
sub
push
or
or
out
shr
push
ffreep
xchg
dec
dec
enter
int3
mov
addr16
push
adc
rcrl
and
xor
fmull
lcall
mov
mov
xchg
test
jb
lock
pop
jge
test
sub
adc
in
jns
enter
mov
mov
mov
pop
out
mov
mov
call
push
dec
cmp
jl
sbb
cwtl
testb
ljmp
andb
data16
dec
mov
jg
mov
jmp
pop
mov
adc
insl
fmul
jge
imul
jmp
add
out
mov
xlat
add
loopne
mov
mov
mov
shlb
aaa
add
cmpsb
push
mov
in
xchg
icebp
sti
dec
cli
shrl
stos
fxch
clc
data16
pop
jmp
and
scas
push
inc
inc
test
pop
rcrl
mov
fwait
and
sbb
adc
nop
push
rorl
jmp
dec
mov
jnp
test
mov
cmpsb
mov
xor
mov
mov
das
insl
jbe
push
pop
adc
jae
movsb
jecxz
push
idivl
jle
lret
les
lahf
adc
loopne
fs
sbb
out
loope
imul
decb
sbb
xchg
mov
mull
es
les
mov
dec
sub
je
popa
or
outsl
jmp
pop
mull
loop
int
iret
in
push
push
cmp
imul
icebp
shr
imul
dec
mov
stos
test
into
outsl
popa
rclb
mov
ja
in
lods
test
mov
inc
xchg
nop
jmp
insl
sahf
enter
ljmp
insl
or
xchg
mov
fisubl
cmp
mov
inc
popf
sub
icebp
lahf
enter
pop
lock
call
xor
iret
lds
pop
push
lods
sahf
stc
pop
mov
xchg
js
js
cmpsl
loop
push
or
arpl
into
pop
push
das
ljmp
pop
hlt
or
mov
gs
xor
popf
add
jge
push
dec
sbb
rcll
jmp
mov
ret
mov
mov
xchg
add
fcom
mov
lret
mov
shrb
daa
mov
adc
xchg
mov
test
mov
out
imul
out
cmp
inc
icebp
push
xchg
dec
sti
repz
sbb
mov
insl
outsl
or
std
shl
adc
push
daa
adc
dec
dec
xchg
data16
lods
cmp
fcmovnb
mull
loope
imul
add
mov
sub
or
mov
data16
popa
xchg
hlt
movsl
adc
das
adc
or
jne
xchg
add
cmp
es
out
push
sahf
popa
sbb
add
repz
ja
or
lock
int
lock
rorl
loop
pop
stos
addr16
insl
push
fucomp
jno
out
and
add
pop
cli
jno
sbb
dec
mov
fldz
sub
inc
mov
xchg
mov
pop
jle
cmp
addr16
add
int
and
mov
dec
repz
fbld
push
sub
mov
repz
cs
mov
inc
xor
mov
sub
filds
iret
div
lret
sub
push
xchg
push
push
ret
mov
outsb
xor
pusha
repz
inc
shrb
pop
sub
hlt
push
imul
outsb
aaa
xchg
xchg
cmpsl
dec
mov
fildll
stos
push
xor
lret
cmpsb
mov
outsl
mov
adc
mov
push
pop
loopne,pt
xchg
daa
call
iret
push
pop
push
jl
jb
dec
jb
stos
out
je
push
int3
dec
push
xchg
xlat
sbb
and
mov
dec
in
clc
inc
cmpsl
jns
popa
jb
popa
dec
pop
mov
loopne
daa
push
pop
inc
call
ljmp
data16
int
xor
hlt
addb
jge
pop
jae
dec
pop
outsl
push
out
dec
push
imul
aam
aas
iret
sbb
xlat
mov
cmc
cmp
stos
xchg
xor
and
daa
scas
jnp
pop
lds
les
mov
push
adc
lock
in
testb
lea
test
adc
and
in
jne
cmp
cld
jae
cmc
mov
mov
sar
daa
insb
je
dec
fsubrs
out
pop
mov
dec
push
xor
sub
push
cmp
aam
test
xlat
push
pop
mov
inc
bound
or
insl
xchg
ret
icebp
jle
pop
std
push
mov
push
loopne
iret
mov
fists
shrl
mov
jne
xchg
pushf
add
sub
es
mov
pop
loopne
daa
sub
cltd
gs
pop
mov
xchg
mov
push
mov
pop
push
outsl
mov
cmpsl
jle
out
ljmp
pop
and
inc
int3
mov
scas
aaa
or
or
lea
and
xchg
sub
mov
les
push
jge
pop
inc
insl
inc
ret
lock
mov
dec
sub
jbe
pop
jl
cmpsl
out
inc
jne
ret
mov
shrl
dec
insb
movsl
xchg
cmp
xor
cmp
scas
push
fxch
in
stc
pushf
dec
int
gs
cmp
dec
ret
and
dec
cmpsb
sub
loope
rcr
mov
nop
xor
insb
or
inc
daa
leave
lods
rorb
mov
push
jb
scas
jb
dec
mov
stos
adc
or
mov
add
rolb
shr
outsb
xchg
or
es
repnz
addr16
mov
call
pop
sbb
sub
jl
stc
pop
cld
mov
fnsave
dec
jp
test
xchg
add
and
lods
and
jmp
adc
popa
leave
in
lods
out
sub
mov
jns
dec
sub
addr16
add
push
xchg
and
sbb
std
dec
out
cmpsl
imul
jmp
push
adc
fsubrl
sub
imul
outsb
sbb
cli
jg
inc
outsb
out
ljmp
jb
dec
fcoms
addb
pop
filds
xchg
jmp
mov
sbb
fiaddl
clc
inc
xor
mov
aas
scas
insb
or
into
jnp
and
daa
add
dec
fisttpll
test
cmp
inc
popa
jae
ljmp
dec
pop
scas
data16
sub
es
in
dec
filds
in
xchg
sub
ljmp
push
push
push
dec
aaa
pop
push
mov
xor
stos
in
inc
jae
push
pop
mov
dec
cmp
addl
ljmp
push
sahf
stc
stc
fdivrs
enter
lock
cs
jmp
int3
add
mov
jnp
ds
scas
ja
push
insb
scas
outsb
and
dec
mov
mov
mov
ret
adcl
push
and
clc
imul
shrb
sti
inc
inc
push
jecxz
mov
sahf
jmp
add
in
test
jg
mov
mov
clc
in
and
xor
or
js
jae
pop
inc
adc
pop
cli
jno
sti
outsl
std
and
mov
test
mov
or
sub
inc
cmp
push
gs
popa
pusha
or
lods
imul
ret
out
mov
adc
cs
inc
mov
and
imul
outsb
loopne
pop
test
aas
jg
mov
scas
sub
dec
insl
out
outsb
xor
mov
or
sbb
sahf
out
clc
shrl
push
push
mov
in
push
sahf
mov
sub
rcll
aad
jnp
and
nop
jns
mov
mov
push
or
sub
jmp
jb
mov
xchg
movsl
push
mov
subb
mov
dec
push
jecxz
divb
jno
or
rclb
xchg
jne
xor
or
add
aas
mov
dec
sub
add
sar
stos
repnz
cltd
push
icebp
lcall
andl
aas
insb
dec
and
loopne
cmp
jbe
lahf
push
mov
dec
dec
pop
and
pop
ret
out
out
jne
out
loope
sub
lods
aad
add
mov
lock
mov
outsl
loopne
mov
dec
push
insl
inc
bound
je
shll
push
and
das
stc
inc
ret
lcall
insl
sub
lcall
loopne
lcall
push
mov
jno
in
outsl
mov
movsl
mov
aaa
out
dec
push
repnz
es
and
pop
add
stos
mov
push
xor
push
loop
adc
movsb
cld
dec
mov
aam
ret
ret
pop
pop
loop
lock
fmulp
mov
aaa
dec
mov
lret
push
pop
xor
push
pop
call
mov
cltd
je
xor
ja
sbb
push
clc
out
nop
js
stos
pop
aas
aas
pop
sub
dec
call
shrl
jp
insl
cmc
mov
adc
imul
mov
dec
stos
cmpsb
bound
sub
aas
iret
pushf
test
and
mov
xor
xor
inc
aam
ret
jle
insb
clc
push
mov
lock
testl
hlt
fwait
jmp
jmp
jg
fwait
repnz
aaa
out
dec
dec
mov
lods
fisubrs
mov
or
push
shlb
daa
or
mov
xor
xchg
sub
sbb
in
push
mov
dec
pop
xchg
mov
jl
xor
sahf
sub
pop
scas
stos
or
cli
ret
adc
cmp
xor
cmpsb
nop
push
or
xchg
je
jecxz
sub
enter
jne
sub
stc
popa
movsl
xor
cmpsl
push
fisttpl
mov
jno
pop
add
mov
and
or
inc
imul
fisubrl
xchg
loop
or
popa
xor
imul
arpl
pop
enter
icebp
je
fwait
stos
dec
and
lea
repz
ja
dec
outsl
inc
out
ja
and
out
mov
adc
out
push
xchg
stos
testl
movsl
test
ret
fsubrs
dec
je
enter
or
add
aaa
outsb
lcall
jge
dec
push
push
ljmp
mov
insb
ficompl
pop
and
ficoms
or
repnz
mull
sarl
push
sub
ljmp
into
test
or
outsb
mov
dec
call
jmp
adc
imull
in
add
push
outsl
scas
push
pop
test
cmpsb
jno
sarb
ljmp
faddl
and
xor
rorl
sbb
sub
loopne
in
cs
mov
sub
icebp
push
insb
add
out
jb
mov
loope
dec
sahf
mov
roll
mov
mov
adc
cmp
in
into
test
data16
fdiv
xchg
jnp
out
in
inc
jg
leave
dec
cld
xchg
xchg
shl
xor
jno
in
shrl
daa
dec
mov
xor
jge
xchg
je
hlt
push
dec
je
cmc
ja
inc
notb
aam
gs
cmpsl
mov
insb
jae
clc
dec
in
ja
and
mov
jp
sub
pop
stos
push
hlt
ja
je
out
pop
pusha
nop
mov
xchg
insb
xor
pushf
jae
sub
inc
inc
jne
cmpsb
insb
inc
jo
mov
repnz
nop
out
lcall
outsl
dec
jg
mov
mov
lret
scas
outsb
stos
dec
lock
rorb
in
ja
or
mov
scas
xor
pop
insl
fisubrl
ja
aas
pop
ja
sub
das
cmp
sub
imul
and
data16
push
xchg
enter
loop
or
scas
ds
mov
nop
loop
fucom
xchg
ds
loop
inc
into
outsb
push
rorl
sbb
dec
dec
das
les
cmp
lods
xor
lahf
jne
fsubp
sbb
push
jo
pop
daa
lock
push
pop
lcall
sbb
pop
mov
mov
pop
loop
pop
push
add
loope
push
push
lahf
jmp
mov
sahf
outsb
hlt
add
in
jl
call
jae
fidivs
dec
push
ret
loope
xchg
push
imulb
lods
repz
mov
loop
nop
test
pop
test
ret
clc
out
cmpsb
insb
pop
mov
xchg
mov
lock
inc
or
mov
imul
mov
into
add
mov
dec
fwait
scas
sahf
mov
xchg
jne
xchg
pop
rcrl
xchg
ja
jae
jmp
mov
int3
lea
push
sub
pop
stos
mov
mov
pushf
rorl
sbb
dec
scas
int
xor
xor
shrl
imul
mov
fnstcw
cmpsb
insl
xor
xchg
mov
js
iret
loope
mov
cwtl
daa
out
pop
movsb
inc
movsb
adc
xorl
push
hlt
pop
gs
pop
adc
mov
dec
hlt
mov
loopne
inc
int
fs
jb
and
mov
arpl
and
jp
ds
sahf
jbe
repz
jp
pop
pop
xchg
xchg
mov
push
idivl
push
outsl
rclb
sub
nop
mov
addr16
movsl
and
in
push
and
cmpsb
outsl
lock
insb
jae
inc
mov
cwtl
mov
outsb
dec
fisttpll
js
inc
out
iret
jno
and
scas
shll
out
daa
daa
mov
fcmovbe
pop
loopne
insb
mov
fadds
out
out
leave
lods
inc
xlat
and
mov
fiadds
imul
out
into
in
fdivp
adc
mov
int
cld
pop
mov
cmpsl
insb
mov
imull
in
pop
push
loope
mov
adc
out
clc
or
mov
cmc
mov
in
dec
fbld
mov
cld
stos
jno
dec
ljmp
sbb
pop
iret
out
shrl
mov
out
jb
js
lods
nop
mov
mov
jg
js
xor
call
mov
sbb
insl
xchg
std
iret
pushf
push
int3
outsb
mov
insb
out
push
popa
inc
outsb
push
push
sbb
fcoml
or
cwtl
enter
push
pop
outsl
scas
je
lcall
pop
lahf
sub
in
lret
push
stos
jnp
jg
sarl
in
inc
std
lds
cmpsb
lret
test
out
dec
rorb
in
outsb
xchg
cmp
pop
insl
push
notb
stc
xchg
xor
fwait
ljmp
out
dec
aad
cmpsb
jns
mov
mov
adc
shrb
in
cmpsb
shll
cld
xchg
cmp
or
mov
jno
aaa
jae
inc
push
push
or
xor
call
mov
pusha
xchg
call
mov
cltd
inc
stos
outsl
shl
jbe
xor
mov
add
jp
dec
pushf
dec
mov
outsb
push
in
mov
mov
push
ljmp
cmp
mov
xor
movsl
jb
mulb
sub
pop
aam
pusha
fmuls
fcoml
shr
inc
data16
sbb
imul
sbb
outsl
leave
scas
mov
test
mov
pop
loopne
mov
pop
adc
test
scas
sub
and
mov
loope
mov
pop
lods
dec
into
outsl
push
pop
clc
pop
pop
outsb
hlt
jno
inc
out
bound
xchg
dec
add
and
adc
mov
ret
add
pop
adc
lods
adc
lahf
add
addb
mov
movsl
popa
loope
sbb
stc
mov
or
test
movsl
gs
js
push
hlt
and
lahf
iret
jbe
cmp
dec
outsl
roll
je
mov
outsb
stos
jno
repz
cs
fisubrs
dec
addr16
test
das
cmp
or
xchg
lret
sub
mov
push
jno
mov
orb
lret
xchg
dec
pop
je
aaa
ret
mov
loope
add
popa
sti
hlt
sbb
mov
sub
add
and
loopne
repnz
outsb
jb
hlt
dec
jae
dec
out
sub
scas
xorb
and
cmp
aad
fsubrs
es
out
mov
cmp
decl
jle
les
add
jb
sbb
out
loope
add
push
testl
je
ds
fistps
mov
ss
in
dec
fidivs
inc
sub
or
decb
in
cltd
inc
fucomi
fists
insl
jbe
and
sbb
sub
pop
cmp
jne
outsb
repz
or
push
lods
mov
nop
inc
xor
roll
pop
xchg
das
jne
and
sbb
shrb
adc
push
cmpsl
jp
mov
out
imul
add
push
xchg
jbe
call
jge
jb
pop
push
ljmp
jbe
in
call
cmc
out
cmp
stos
mov
sbb
ljmp
fs
xlat
out
repnz
cmpsb
cmp
imulb
rclb
scas
stos
int
repnz
push
je
neg
mov
or
stos
ja
inc
ljmp
rep
inc
imul
stc
cmp
imul
jne
mov
or
add
repnz
insb
push
repnz
jne
mov
repnz
pop
push
fwait
dec
dec
jae
sahf
xor
xchg
jge
jb
dec
test
out
out
mov
int
jg
daa
and
add
pop
xor
fstl
mov
inc
insl
cmc
insl
jbe
mov
test
mov
gs
movsb
push
ja
cmp
clc
scas
push
fcoml
sub
mov
add
imul
pusha
ja
add
in
repz
scas
insb
mov
call
inc
gs
jmp
das
mulb
push
sub
nop
pop
push
das
jno
outsb
test
mov
push
lods
ja
and
add
push
dec
shll
and
icebp
lret
leave
push
push
xchg
outsb
out
fdiv
stos
lods
scas
inc
and
insl
push
sbb
push
outsb
stos
stos
sbb
lret
loope
xchg
xor
ja
jo
push
sbb
inc
nop
mov
js
jne
movsl
scas
clc
in
dec
clc
sub
inc
out
sbb
mov
je
aad
stos
dec
clc
jbe
ljmp
gs
pop
dec
mov
xor
dec
outsl
pop
ret
jge
int3
stos
xor
add
and
sti
daa
data16
rcrb
cmp
lock
mov
lock
or
pushl
icebp
insb
out
jbe
pop
js
jns
pop
add
stc
lret
inc
jbe
inc
add
bound
and
popa
cmp
sub
and
pop
orl
and
xchg
fildll
or
sub
push
cpuid
scas
loop
inc
or
or
je
into
jle
dec
dec
push
dec
jg
or
loope
sub
mov
pop
cli
cmp
stc
adc
push
pop
push
das
xchg
movl
push
out
dec
xor
imul
mov
call
hlt
fdivrs
movsb
nop
jae
les
xchg
adc
std
cmp
jecxz
pop
or
lea
std
lods
pop
inc
call
ds
and
cmpsl
lock
jg
push
icebp
dec
enter
stos
push
add
std
outsb
push
cld
call
cmp
mov
aad
enter
enter
movsl
xchg
xchg
ror
insl
xor
or
mov
adc
jno
je
or
int3
bound
jne
popa
jl
inc
and
lea
inc
jmp
and
lretw
sub
xor
push
mov
jns
test
cmp
push
shlb
jae
cmp
add
stos
xor
jecxz
push
fdivrs
dec
mov
adc
mov
out
imul
out
jns
pop
dec
adcb
push
test
es
test
rorl
out
adc
mov
xchg
cmpsl
repnz
pop
push
leave
mov
push
outsb
outsl
xor
cli
fwait
xchg
add
mov
in
int
ja
cmpl
or
jge
cwtl
pop
sub
mov
outsl
lds
lea
in
mov
sti
arpl
mov
sub
aam
or
xor
rep
jle
loope
pop
push
icebp
mov
ret
sahf
aad
jle
jmp
scas
inc
xor
jbe
imul
and
inc
in
cs
out
push
ret
shr
lods
adc
push
cmpsl
jg
icebp
mov
call
andl
test
push
push
bswap
ret
outsl
pop
rorl
mov
xor
add
ret
mov
hlt
ljmp
jnp
ljmp
sbb
loop
mov
lahf
xchg
insb
out
mov
imul
pop
cmovns
dec
nop
xchg
cs
fists
mov
aas
pusha
push
xchg
loopne
inc
mov
pusha
push
imul
push
aaa
inc
sub
add
jmp
add
lods
stos
scas
mov
sub
add
daa
jmp
les
mov
xchg
add
nop
movsb
jne
sbb
mov
mov
mov
xor
jbe
cs
mov
popf
lret
and
mov
or
sub
dec
and
out
sub
ficompl
cmpsl
dec
xor
mov
cli
aam
mov
in
pop
cmpsl
adc
sbb
xor
mov
push
jo
mov
inc
adc
jp
xchg
scas
cld
out
enter
mov
or
call
stos
xor
xchg
in
out
cmc
insl
inc
rorl
out
gs
pop
or
jmp
enter
sub
adc
ret
aas
sub
outsb
daa
in
cmp
int3
xor
mov
iret
repnz
sbb
loop
jo
xchg
sub
ficoms
test
or
jae
into
adc
jb
out
fstpt
adc
sbb
jae
enter
out
stos
stos
into
daa
jle
decl
mov
mov
testl
pop
pop
xor
imul
scas
push
mov
mov
cmp
mov
out
shl
adc
aaa
mov
mov
xor
in
in
stc
sarb
add
daa
imul
arpl
loope
jo
push
pop
mov
jne
fdivp
and
push
pop
aam
nop
scas
pop
mov
inc
test
pop
sub
or
sub
jmp
aas
shrl
add
dec
mov
pop
xchg
int
push
pop
pop
nop
inc
push
inc
in
lret
mov
jb
mov
int
test
stos
add
test
dec
and
push
lds
pop
push
mov
inc
xchg
std
jge
mov
pop
insb
out
xchg
imul
and
out
or
out
outsb
fldpi
les
lock
jb
xchg
lahf
xlat
xor
fcmovnu
mov
in
clc
xchg
cwtl
rorb
add
dec
cmc
cs
adc
pop
sbb
pop
lods
mov
insl
inc
stos
push
lock
xchg
lret
es
ljmp
insl
xchg
orb
nop
xor
cli
inc
cmp
imul
xchg
jnp
push
jae
sub
outsl
cmc
imul
scas
pop
enter
adc
lahf
jg
call
ja
jnp
mov
out
insb
push
imul
outsl
addr16
jne
xor
adc
adc
dec
mov
push
icebp
js
cwtl
mov
adc
cmpb
xchg
add
xor
jb
icebp
dec
int
gs
sub
push
stos
fisubrl
jno
sub
adc
cld
repz
mov
push
outsb
test
xchg
xchg
call
or
jno
dec
xorb
dec
test
iret
pop
test
out
ja
daa
out
add
jg
lods
jae
or
daa
daa
ja
and
out
in
push
outsb
imul
je
pop
outsb
mov
testb
mov
incb
sbb
add
gs
fnstsw
pop
jp
addr16
outsl
xor
push
movswl
push
dec
pop
loope
test
lock
addps
mov
repnz
jl
adc
aaa
push
dec
pop
push
mov
inc
push
fisttps
xor
push
clc
ja
outsb
jle
mov
aam
mov
sub
add
pop
dec
jno
mov
cltd
and
cmc
jp
rorl
push
sbb
ficoml
lcall
cmpsb
test
out
scas
loop
int3
mov
push
loopne
push
adc
jmp
mov
pusha
mov
ret
push
jp
add
mov
xor
pushf
inc
cli
insl
sub
verw
subb
shrl
mov
je
or
mov
jns
mov
inc
scas
enter
mov
adc
jbe
pop
xor
insb
jnp
mov
ss
cmp
idivb
test
jb
mov
repnz
inc
mov
xor
mov
add
add
cmp
inc
call
pop
shl
xchg
outsl
dec
fwait
outsl
outsl
mov
fsubrl
sbb
rorb
xor
leave
ljmp
out
aaa
fisubl
cwtl
popl
and
imull
cmpsb
popa
data16
inc
xor
scas
aaa
lea
pop
push
or
push
mov
nop
outsb
cmp
lahf
lock
or
ficomps
mov
daa
and
popa
scas
mov
push
inc
mov
mov
and
aam
setle
mov
jl
shll
fldl
mov
and
repz
scas
sti
pop
sbb
test
or
sub
or
cli
jne
and
sub
es
bound
pop
mov
push
rcll
lods
xchg
es
cmp
pusha
sbb
imul
jae
cs
jb
ret
lea
dec
cld
icebp
mov
xchg
repnz
mov
sub
cmc
jbe
cmpsb
sbb
in
lock
test
and
mov
hlt
add
sub
mov
xchg
push
stos
das
dec
push
es
bound
cmpsb
sub
dec
sti
out
imul
mov
cld
cs
lds
test
std
insb
jns
bnd
jno
inc
in
sti
jns
movsb
and
mov
or
mov
or
gs
out
cmp
inc
mov
ja
iret
js
nop
jg
stc
rcr
mov
mov
bound
jbe
stos
jb
lods
in
xchg
dec
lds
ljmp
push
push
lods
pop
test
add
jne
movsl
lods
je
cmp
imulb
push
mov
cli
mov
mov
and
push
int3
aas
jg
ror
sub
push
pop
dec
pop
push
lea
out
mov
push
mov
cwtl
outsl
push
outsb
lock
sub
in
pop
and
cwtl
sti
fiaddl
xchg
in
out
xchg
shr
pop
adc
cmp
mov
sbb
jmp
out
mov
repz
fbld
push
pop
out
lock
xor
lods
clc
out
out
stos
mov
out
bound
dec
repz
inc
sub
in
lret
inc
das
dec
xchg
out
rorl
out
enter
cmp
mov
cmpsb
xchg
ss
mov
lds
subb
push
addr16
and
aas
out
jl
mov
pop
scas
std
push
mov
adc
cli
pusha
outsl
sarl
and
jecxz
stos
jno
adc
outsb
lret
dec
dec
in
jae
scas
mov
aaa
ljmp
ret
jne
jb
cmpsl
xor
inc
mov
mov
sub
dec
mulb
imul
loope
push
scas
lock
je
xor
cmp
fnstsw
xor
mov
pop
cltd
mov
pop
jbe
aad
in
jno
push
pop
popa
inc
in
clc
jae
addr16
popa
jp
into
xor
inc
cmpsl
aas
sbbl
jle
push
and
sahf
mov
add
in
repz
cmpsl
adc
es
and
outsl
pusha
pop
mov
ret
xchg
inc
mov
adc
loop
adc
jmp
push
loope
insl
fucomip
pusha
outsb
push
jecxz
test
mov
stos
pop
jnp
ja
xor
jo
xchg
xchg
test
hlt
stc
mov
insl
or
pop
xor
mov
sub
hlt
out
jae
out
rcrl
in
add
sti
bswap
cmp
or
mov
add
daa
enter
jo
in
arpl
in
les
jmp
lods
test
mov
adc
dec
insb
dec
push
ljmp
cmc
lods
lahf
cmp
add
xor
das
or
sbb
pusha
ss
das
push
mov
ficompl
nop
jb
jmp
jno
or
push
mov
push
into
mov
insb
xor
push
jae
cmpsb
clc
push
subl
mov
xchg
testl
jbe
frstor
cmpsb
lcall
xchg
fstpl
in
shlb
sub
or
and
out
loop
jle
pop
jmp
mov
sub
aaa
scas
pop
das
je
mov
out
repz
cs
add
in
fisttpll
or
sbb
jae
daa
insl
fstpt
push
sbb
jb
cmpsb
pop
mov
pop
cmp
verr
fs
inc
outsl
cmpsl
dec
nop
push
xchg
mov
ja
mov
outsl
mov
sub
mov
mov
mov
aam
lods
lahf
xchg
arpl
out
mov
andps
xchg
jno
push
jo
gs
fiadds
jmp
leave
xchg
imul
negb
push
mov
movsl
into
inc
out
sbb
fadds
jno
lods
mov
jne
arpl
test
dec
movups
push
fucomp
xor
out
sbb
popa
loope
arpl
or
xchg
mov
vaddss
nop
xor
addl
pop
daa
xor
pop
loope
or
sbb
jnp
or
dec
jmp
mov
or
mov
in
stc
pusha
or
xchg
test
scas
cwtl
out
push
cs
pop
jmp
mov
jnp
sub
outsb
popa
in
push
inc
outsb
insl
xchg
adc
into
shrl
or
aas
into
inc
insb
push
add
rcr
fiadds
loope
mov
xchg
or
push
nop
jno
and
inc
lds
lods
pop
jmp
push
dec
in
and
mov
insl
test
pop
pop
repz
xor
fldt
mov
lcall
out
lock
leave
fstpl
adcl
aad
mov
inc
sub
push
sti
popf
leave
aam
mov
or
inc
xchg
iret
outsb
xor
je
dec
and
outsb
aad
popa
fmull
dec
mov
mov
jmp
out
aas
dec
cmp
lcall
jle
ja
mov
inc
test
push
aad
or
out
dec
mov
lret
popf
outsl
xor
cmp
mov
fbstp
jmp
or
jmp
xchg
les
fnsave
lea
jle
fisttps
clc
call
inc
addr16
shll
sub
movsb
in
sub
fistpll
xchg
and
jmp
push
adc
aas
jge
sbb
dec
lahf
jge
sub
sub
adc
inc
cmpsl
int
cmc
testl
push
scas
out
push
adc
inc
and
std
mov
repnz
fldt
sbb
jne
jno
mov
mov
or
inc
xchg
test
push
out
dec
xor
cmpsb
add
inc
xchg
test
jno
aad
jp
stos
frstor
insl
mov
mov
scas
sbb
outsl
shlb
jb
ja
inc
in
mov
sbb
aas
push
add
sarb
pusha
inc
and
mov
mov
push
loopne
cld
fisubrs
mov
jle
cmpsb
outsb
in
xchg
xchg
jns
stos
jl
adc
push
lea
popf
in
pusha
fsubrp
pop
mov
mov
ds
inc
sbb
in
mov
shrl
push
xchg
faddl
pop
sub
xchg
icebp
inc
push
daa
adc
loope
jbe
cli
hlt
inc
fsubs
push
call
movsl
cmpb
movsb
dec
lock
in
stc
imul
sarb
inc
out
and
dec
out
and
xchg
test
arpl
lods
xor
iret
pop
or
test
cmp
dec
pop
psllq
rorb
xor
lock
shlb
clc
cmpl
cmp
out
mov
in
jg
mov
push
mov
or
cmp
inc
insb
lret
inc
inc
enter
fbstp
pop
fdivs
xchg
test
addl
lods
aaa
ror
dec
mov
mov
jns
cmpsl
shrl
push
mov
and
repnz
cwtl
pop
cs
mov
int3
loope
mov
push
inc
sbb
dec
pop
sbb
outsb
in
mov
mov
ja,pn
out
adc
sbb
lods
dec
addr16
out
out
insl
inc
cwtl
popa
imul
jae
xorl
inc
sbb
dec
jle
es
fwait
in
cli
cmp
out
jl
push
pusha
stc
and
test
add
imul
ret
lds
in
filds
test
loop
data16
loopne
pushf
jg
dec
xchg
pop
xor
imul
dec
push
mov
adc
ret
ffreep
fcoml
jne
hlt
stc
test
int
xchg
cmp
out
xor
scas
int3
imul
cwtl
fistpll
imul
mov
out
jmp
pop
adc
jge
mov
pusha
stos
test
repnz
ljmp
xchg
mov
push
lock
or
into
dec
adc
outsb
fs
xchg
out
inc
fnsave
xlat
xor
aam
mov
stos
mov
inc
or
dec
inc
mov
add
insb
fildll
addr16
in
xchg
and
mov
shrb
pop
lahf
push
sbb
sub
and
mov
imul
inc
pop
dec
cld
cmp
in
sub
out
xchg
pushw
aas
sbb
fwait
cmp
fisttpll
cmpsb
sub
mov
add
pusha
cwtl
cmp
das
dec
push
shrb
inc
mov
fimuls
lods
cli
sbb
xchg
addr16
or
aaa
jne
lds
ja
sbb
fsubrl
addr16
pop
xchg
test
nop
cltd
pop
cmp
mov
mov
cmpsb
out
adc
test
push
clc
cltd
jae
addr16
arpl
add
movsl
dec
xor
cwtl
sub
out
adc
ret
lock
dec
push
mov
push
xchg
repnz
mov
fildll
in
lahf
xchg
push
pusha
out
push
out
or
lea
sub
mov
mov
mov
sbb
out
cltd
or
mov
mov
push
fcomip
jge
iret
pop
outsb
pusha
mov
lods
dec
test
ljmp
jle
xchg
pop
and
add
in
testl
pusha
in
or
sub
ret
lods
pop
aas
jg
dec
insl
ja
sbb
cmp
sbb
jp
es
xor
cmpsb
inc
pop
outsb
push
in
mov
inc
outsl
mov
jg
rolb
out
mov
in
mov
sti
enter
cmpsl
call
leave
enter
loopne
rcrl
fisttps
repz
loope
fsubr
test
out
out
mov
lods
std
or
cmp
sbb
pop
jl
and
pop
pop
adc
push
mov
loop
or
xor
mov
xor
push
cmp
mov
xchg
and
mov
and
out
xchg
dec
add
adc
sub
js
pop
pop
lock
stos
idivl
cmpb
in
call
pop
jmp
sahf
into
insl
jno
xchg
fsts
cmp
dec
out
rol
sub
enter
or
mov
jg
jo
mov
test
lds
je
fcmovnu
pop
add
cmp
out
or
fwait
mov
std
mov
fdivrp
mov
cld
aam
cmp
inc
ret
mov
mov
jmp
cmp
dec
ss
lock
mov
out
push
mov
xlat
push
mov
bound
lods
in
mov
sbb
aad
movsb
bound
andb
dec
pop
dec
adc
popf
insl
pop
pop
int3
and
sarb
out
repz
push
outsb
pusha
into
scas
insb
lock
dec
ud2
lock
les
fnsave
mov
nop
mov
scas
dec
pop
loope
and
imul
ja
or
insl
jp
shlb
in
mov
fprem
xchg
sbbl
popa
inc
pusha
ljmp
push
stos
mov
call
adc
jbe
clc
xchg
mov
int
inc
in
jmp
push
mov
mov
leave
fmul
pop
sub
out
test
loope
xor
test
and
jno
insl
dec
and
nop
inc
push
pop
das
add
jmp
xor
mov
xor
add
int
sbb
nop
pop
lcall
or
inc
mov
cmp
or
pusha
popl
fnsave
stc
lret
ret
push
inc
add
loopne
mov
or
out
and
outsb
inc
cwtl
jl
cmp
das
call
gs
xchg
lcall
mov
addr16
mov
lret
xchg
dec
out
popf
outsb
add
lods
dec
or
jp
stos
xchg
outsl
sbbl
mov
gs
or
add
andl
cmpsl
mov
xlat
in
dec
out
loop
enter
dec
loopne
jecxz
in
scas
in
arpl
sub
jne
pusha
lods
clc
out
cli
mov
cltd
imul
out
std
dec
stos
mov
mov
mov
outsb
sahf
jo
std
mov
ror
incb
dec
mov
addr16
mov
stos
scas
push
jmp
push
cs
int3
stos
cmpsl
icebp
push
jbe
into
or
sahf
in
out
outsl
arpl
in
dec
ja
ljmp
popa
ja
loop
arpl
hlt
stos
cld
xor
imul
dec
cmpsb
mov
dec
ljmp
mov
inc
mov
stos
push
es
jns
adc
pop
sub
pusha
fistps
jge
xchg
daa
je
jmp
and
sub
adc
and
and
push
jg,pt
fucomp
in
pusha
aas
xchg
aas
mov
lock
inc
fcomps
in
mov
add
mov
scas
out
push
loopne
loope
fisubl
in
sahf
loopne
pop
dec
xor
ret
dec
jg
xchg
mov
out
sub
stos
in
jmp
fildll
mov
divb
ja
call
pop
sub
dec
loop
add
adc
mov
ja
mov
mov
jnp
loopne
out
jg
hlt
jns
mov
nop
pop
fstp
mov
mov
js
pop
loop
mov
stos
pop
jnp
bnd
add
std
mov
mov
popa
out
push
sbb
jmp
fwait
dec
xorb
mov
jnp
loopne
out
arpl
pop
dec
nop
cli
lcall
mov
loop
faddl
xor
stos
fdivrl
adc
fistps
jl
dec
mov
out
loop
clc
enter
fsubrs
shrb
repz
enter
adc
incl
sub
cltd
sbbb
in
ljmp
sub
adc
pop
and
int
xchg
or
jne
sbbb
lock
repz
js
push
push
mov
xor
inc
lahf
in
orb
adc
cli
ret
dec
adc
pusha
clc
add
pop
sbb
lret
loop
inc
jg
sti
jnp
pop
das
push
outsl
mov
xchg
mov
pushf
out
clc
lahf
sbb
dec
test
addr16
ja
test
push
sbb
sbb
jnp
jg
jl
fisttpll
addr16
pop
fisubrs
or
xchg
cmc
or
add
mov
fdivl
jmp
adc
pop
or
imul
xchg
sub
pop
or
push
mov
ja
cmp
jbe
add
pop
lods
int3
push
icebp
mov
xor
movsl
xlat
sbb
gs
rcrl
outsl
insl
in
mov
icebp
orb
js
jmp
mov
ret
mov
aaa
mov
loopne
and
xchg
inc
icebp
aas
inc
clc
add
js
xchg
xchg
mov
aad
sub
lock
jnp
xchg
lret
sub
out
pop
insl
sahf
hlt
shrb
das
out
aad
outsb
int3
pop
movl
jbe
cmpsl
outsl
repnz
jge
xchg
mov
cmpsl
inc
pop
sub
out
push
sub
sbb
loope
repnz
out
dec
scas
int3
popf
inc
add
pop
sub
push
test
xchg
cmpsb
sar
stc
cmc
mov
insl
push
outsb
popa
dec
sti
insl
add
fbstp
jge
cmpsb
cld
pop
fstpl
outsb
mov
pop
xchg
mov
and
mov
cmp
mull
je
and
jge
mov
add
push
out
sub
faddl
xchg
xor
in
addr16
bound
cmp
stc
in
iret
cmpsb
cmpb
es
mov
and
push
push
lods
and
mov
add
lock
not
out
popf
test
insl
xchg
inc
add
jbe
mov
and
and
notl
pusha
cmp
ljmp
roll
pop
xchg
push
adc
and
sbb
pushf
jae
sub
dec
stos
push
loopne
cmpsb
mov
mov
cli
or
push
popa
cmpsb
int
mov
movsl
add
ljmp
outsl
cmpb
inc
mov
js
test
ret
push
push
shll
loop
das
or
test
pop
ret
or
imul
inc
pop
call
jno
mov
mov
data16
stc
lret
test
lea
insb
in
xchg
nop
addr16
loop
mov
sub
add
cmp
scas
mov
ljmp
adc
xor
cld
pop
frstor
mov
push
cmpsl
jns
dec
insl
or
sahf
lods
out
pop
pop
push
lea
or
insb
mov
and
push
gs
xor
jmp
scas
push
push
sbb
and
xor
ja
sub
add
in
xchg
les
addb
dec
sbb
or
stc
mov
push
fscale
int3
stc
int
pop
add
aas
jmp
sbb
pop
cs
cwtl
out
outsl
xchg
aaa
imul
pop
sub
inc
call
adc
cmpsl
mull
pop
call
and
push
fucomip
rcrb
jle
imul
mov
jmp
popf
xchg
xor
pop
cmc
jge,pn
cmp
es
fsubrs
jno
mov
adc
out
imul
mov
mov
and
test
or
jns
inc
pop
out
xor
loopne
aas
js
testl
dec
cmp
clc
fwait
mov
test
dec
lcall
adc
pop
xadd
pusha
and
call
jg
stos
cmpsl
xchg
jns
jg
inc
hlt
mov
outsb
dec
mov
mov
jmp
xchg
xor
xor
jbe
hlt
jns
inc
in
jae
dec
adc
cwtl
dec
out
data16
pop
out
jae
rcrl
jb
or
movsl
mov
cmp
sub
in
fiadds
jl
flds
test
sbb
mov
imul
fisubl
out
adcb
dec
dec
mov
add
icebp
and
xor
nop
outsb
cmp
dec
or
in
ret
jg
test
or
dec
xchg
jno
cmpsb
pop
xlat
mov
pushf
add
mov
mov
dec
loop
mov
lcall
pop
std
scas
jae
stos
scas
lds
movsb
rorb
lock
cli
insl
inc
hlt
out
ret
add
cmp
mov
pusha
dec
call
shrl
movsb
and
jle
or
mov
daa
push
sub
loopne
xor
ja
cmpsl
imull
lret
add
mov
cmp
push
or
repz
addr16
les
jecxz
mov
mov
movsb
mov
mov
dec
adc
repnz
jl
pop
inc
int3
mov
sbb
xor
sahf
push
inc
jl
mov
hlt
and
iret
jg
scas
test
lods
fidivs
fldl
jmp
jecxz
mov
ja
sbb
repnz
xor
dec
in
outsb
mov
jo
pop
push
lock
fs
mov
xchg
xchg
bound
mov
mov
lahf
adc
dec
xor
sub
lods
mov
data16
out
mov
bound
int
outsl
jb
lret
fsubrs
outsl
jmp
sbb
jmp
test
or
popa
mov
and
pop
sahf
mov
pusha
cmp
sub
sub
xchg
mov
test
pop
or
imul
loopne
and
push
jae
inc
inc
nop
mov
inc
mov
dec
dec
mov
out
inc
xor
aaa
movsl
es
xor
adc
sub
cmpsb
mov
jl
testb
sub
mov
outsb
test
mov
jo
loope
jl
repz
fisubl
pop
jle
cmc
add
push
sub
ret
cs
addr16
bound
ret
scas
movsl
mov
sahf
xor
jnp
fucomip
push
jmp
fdivrl
push
or
ss
cld
lea
push
jno
xor
and
btc
test
mov
sub
orb
rol
pop
cmp
lahf
jbe
testl
shll
ja
xchg
imul
test
or
sbb
lret
ljmp
hlt
mov
push
ljmp
mov
mov
rol
inc
sub
add
negb
jl
mov
jmp
gs
pop
mov
out
mov
mov
lock
subl
repz
sub
cwtl
mov
sub
lock
mov
cltd
jne
push
sahf
fistps
adc
in
mov
or
sbb
int3
xchg
data16
cs
jns
adc
cmp
sub
icebp
cs
cmpsl
cmp
jbe
push
fs
outsl
push
push
aaa
dec
mov
fs
ret
jmp
sub
in
lods
ljmp
xor
nop
mov
test
out
lods
int3
faddp
mov
imul
push
sub
xchg
imul
fcoms
mov
pop
mov
mov
pop
test
cmpsb
or
xor
cmpsb
inc
cmp
ret
or
mov
loope
pop
int
mov
or
add
lahf
dec
scas
xchg
adc
sub
cmpsl
hlt
ret
loop
or
es
inc
sarb
bound
shr
lret
in
sbb
jnp
dec
xor
xor
pop
out
and
jae
adc
adc
inc
rolb
jae
loopne
fisttpll
rolb
add
push
add
mov
subl
and
fs
adc
inc
clc
jne
hlt
or
lds
negl
jl
xchg
push
call
inc
js
lods
je
add
push
stos
xchg
jl
mov
icebp
cmp
insb
int
stos
scas
jno
and
in
ja
repnz
fs
js
jb
sub
gs
scas
cmc
lods
les
jbe
jno
jb
jbe
dec
les
iret
popa
test
test
in
cmc
sub
xor
insb
arpl
pop
dec
dec
les
cltd
outsb
hlt
push
jle
fs
jae
data16
mov
insb
insl
bound
mov
jae
stc
outsl
dec
les
stos
repz
je
clc
outsl
dec
les
loope
in
stc
lret
lcall
fdivl
js
mov
or
ja
test
mov
in
aam
not
add
ja
out
mov
frstor
jbe
jae
mov
push
sub
popf
pop
pop
cmovp
test
movsb
scas
popf
js
into
repnz
lcall
stos
jg
sbbb
push
test
sub
jmp
pop
mov
jbe
rcll
clc
fsts
sub
ret
sbb
xor
mov
mov
xor
pop
mov
in
in
out
test
cmpsl
adc
adc
inc
push
jge
jmp
or
jg
cs
punpckhdq
call
xchg
std
mov
sbb
mov
test
mov
scas
lock
jne
or
or
or
scas
xchg
insb
int3
fiadds
mov
jp
xchg
lret
xchg
in
xchg
or
fimull
mov
mov
in
call
and
add
shrl
aad
addr16
loopne
addr16
mov
sub
insb
add
add
sbb
addr16
inc
insb
fs
and
pop
bound
xor
leave
fs
pop
das
js
je
in
adcb
nop
imul
call
popf
repz
or
mov
js
hlt
sub
pause
iret
or
push
test
or
shll
insl
inc
xor
pop
inc
lods
outsl
nop
xchg
in
adc
and
jle
or
in
cs
outsb
repz
outsb
aas
inc
xchg
je
int
ret
mov
jbe
ret
add
bound
inc
fnstcw
cmc
aas
dec
mov
push
mov
nop
push
js
xchg
adc
mov
js
fucomip
jno
mov
imul
jl
nop
xor
add
xchg
lock
scas
mov
jle
push
push
add
scas
xchg
std
cmp
add
cmpsb
mov
nop
adc
sub
ror
stos
scas
dec
addr16
movsl
aad
cmc
in
dec
mov
nop
shlb
mov
jge
mov
push
imull
push
imul
hlt
cld
scas
je
pop
dec
enter
xorb
xchg
clc
xchg
rcr
mov
ficoms
and
jg
inc
mov
adc
rcll
sbb
scas
es
mov
addr16
popa
dec
test
out
mov
lock
outsl
sub
inc
leave
outsb
mov
pusha
push
pop
sti
dec
in
mov
mov
push
mov
das
cmpxchg
outsl
adc
and
shlb
scas
insl
inc
loope
pop
mov
cmp
dec
js
fstps
pushf
push
cwtl
push
add
rcll
and
sarb
ja
fildll
test
or
paddd
scas
or
sbb
or
lods
jae
jg
or
ret
sub
out
dec
fiadds
in
mov
loop
inc
call
sub
add
lea
inc
enter
and
sti
test
fldenv
mov
ljmp
pop
test
inc
loopne
fs
add
mov
pop
gs
nop
outsb
subl
imul
call
scas
shr
ror
pop
cmp
pop
dec
jns
es
insb
das
push
test
in
cmpsl
jo
or
insl
insl
jle
es
fs
inc
ds
jg
dec
push
pop
push
int3
jl
scas
mov
mov
fucomip
or
jno
inc
adc
ljmp
scas
das
nop
adc
xor
lods
dec
xchg
push
add
pop
das
mov
les
push
inc
and
data16
in
addr16
inc
lods
in
repz
outsb
insb
insb
cmpsl
jae
or
and
pop
mov
sar
inc
rcr
ret
inc
mov
mov
fs
pop
jnp
das
enter
xacquire
push
lods
sbb
inc
ret
repz
or
lahf
addr16
jae
sbb
fldcw
outsb
add
sub
sbb
outsl
in
jp
out
pop
push
mov
jno
sub
andb
mov
gs
cmc
dec
clc
sub
ret
pop
cmc
insb
jne
das
stos
dec
outsl
pop
xchg
enter
gs
shll
in
push
lahf
outsb
jns
fisubs
jle
test
fs
mov
sub
mov
nop
clc
hlt
test
add
inc
hlt
cmpsb
mov
addl
xchg
sub
jmp
fidivs
popa
mov
dec
lahf
data16
call
ss
out
push
out
mov
push
jg
es
dec
insl
pop
inc
addr16
dec
sti
call
jo
sbb
add
mov
insl
add
push
jno
bound
jge
gs
xchg
sub
mov
mov
sti
es
jno
je
sbb
lock
mov
pop
scas
es
ljmp
in
in
out
scas
fdiv
call
jmp
aam
sub
repnz
sti
cmp
sub
mov
clc
mov
pop
ja
dec
cmp
and
push
push
in
scas
data16
bound
pop
jecxz
stos
sbb
jmp
pop
insl
add
sub
sub
bound
mov
out
inc
xchg
xor
ljmp
dec
xchg
in
or
in
push
add
sub
daa
adc
inc
insb
inc
sbb
outsl
add
xor
mov
inc
mov
pop
xor
jne
pop
jle
imul
dec
and
or
dec
nop
mov
mul
dec
aaa
ja
inc
out
js
mov
outsb
enter
sub
lds
adc
push
xchg
loop
es
inc
gs
sahf
push
pop
in
inc
push
das
cmp
add
lock
mov
pop
and
sahf
out
imul
shr
mov
pusha
or
test
scas
movsl
fsubrl
lds
jp
loopne
inc
scas
sbb
mov
mov
stos
shll
out
test
jmp
and
je
bound
jmp
mov
es
leave
xchg
push
adc
push
lcall
mov
push
es
loope
sbb
cli
or
imul
sahf
jmp
iret
sub
aaa
mov
cmpsb
int
lods
sub
xor
out
insb
push
push
loopne
in
dec
adc
inc
imul
fistpll
inc
lock
mov
xchg
jbe
sbb
mov
and
cmp
loopne
push
cmc
add
mov
ret
loop
cwtl
lret
and
nop
ret
insl
imul
pop
aam
daa
test
lret
pop
push
mov
pop
stos
mov
lret
hlt
testl
popf
cmp
push
movsb
daa
xor
daa
enter
stos
dec
dec
mov
and
ja
in
mov
int
aad
and
mov
gs
shll
add
rcrb
call
outsl
insl
in
dec
out
pop
fs
pusha
mov
add
push
fidivrs
lcall
sbb
in
es
rep
ds
jnp
mov
sub
jge
xchg
dec
sbb
cmpsb
jg
in
rolb
jne
mov
jl
jl
push
neg
stos
aad
stos
enter
push
dec
xchg
xchg
mov
xchg
cmp
mov
push
loop
mov
out
ret
jmp
mov
outsb
fs
outsb
add
out
add
out
pop
les
out
divb
add
mov
outsb
fucom
pop
mov
dec
mov
xlat
or
push
lods
jae
clc
outsb
lds
mov
push
out
dec
jns
sub
rorl
mov
call
pusha
or
loopne
pop
addr16
loope
add
inc
loopne
nop
jb
lret
dec
xchg
xor
mov
mov
adc
popa
jne
nop
js
data16
mov
cs
and
popl
aas
fidivs
mov
inc
xchg
mov
dec
push
pop
shrb
jmp
enter
dec
clc
cmpsb
sub
xor
aaa
jg
sub
aaa
negb
loope
out
rcrb
xchg
add
push
andl
and
ret
mov
mov
add
es
sub
mov
stos
mov
mov
fucomip
push
sub
inc
cmp
lret
cmp
cmc
jbe
loope
sbb
dec
dec
inc
xlat
mov
dec
cmpsb
incb
and
push
mov
adc
and
sbb
jle
push
jle
lock
outsl
scas
movl
cld
jle
push
loopne
dec
or
arpl
mov
jno
pusha
push
idivb
in
mov
loopne
cmp
in
out
pop
and
jae,pt
stos
imul
mov
push
sbb
lret
dec
jg
out
push
out
insl
push
and
loop
jmpw
ljmp
shlb
pop
sbb
cmpsl
out
inc
outsl
fistps
dec
dec
outsb
xchg
outsb
ja
test
jg
push
sahf
sbb
xor
sbb
fnstsw
xchg
pop
outsb
add
in
scas
in
outsl
out
in
outsb
in
jg
outsb
out
ja
outsb
insl
ja
out
in
fdivs
mov
inc
dec
in
lods
loopne
mov
jnp
int3
scas
dec
sub
or
pusha
fldz
out
adc
mov
les
push
fistps
dec
outsl
shll
jae
push
or
es
out
mov
mov
and
loope
stos
jne
dec
pop
outsl
xor
push
outsb
loop
mov
pop
js
nop
adc
fdivr
pop
xchg
push
fmull
cli
gs
sub
adc
mov
xchg
out
scas
insl
jae
dec
into
cmp
adc
mov
dec
inc
jae
addr16
loope
push
jnp
in
dec
cmpsb
jae
dec
in
addb
cli
out
fcmovbe
xor
icebp
dec
pushf
es
mov
or
xor
jae
enter
stos
clc
add
in
fdivrs
imul
sub
std
jb
mov
fimuls
jmp
imul
bound
inc
imul
dec
jb
inc
xchg
push
sub
rcrl
std
xchg
and
js
jg
gs
cmp
in
aas
pop
leave
mov
mov
or
fadds
fnstsw
insb
jae
mov
sbb
movd
mov
test
add
stos
int3
push
movsl
mov
pop
xchg
adc
lea
dec
mov
jne
xchg
mov
push
daa
sbb
push
sbb
in
inc
sub
out
xchg
stos
add
lahf
shlb
arpl
pop
jl
jae
mov
sbb
jmp
sub
xchg
outsl
int
mov
or
in
scas
pusha
out
scas
out
lock
xchg
stos
xor
fadd
lahf
adc
adc
scas
pop
mov
mov
dec
out
sarl
push
insb
inc
popf
cmp
pop
xor
popf
sbb
sub
cmpsl
popa
ret
ss
arpl
mov
or
cmpsl
sub
lahf
lcall
hlt
jmp
pop
movsl
push
mov
std
add
pushf
xchg
test
dec
push
mov
jmp
xor
fadds
pop
pop
loopne
mov
or
add
xchg
ret
lock
cmc
nop
hlt
push
cs
shlb
add
dec
xor
insb
mov
mov
lods
cwtl
mov
pop
aas
insl
cmp
push
mov
and
xchg
xor
xchg
and
outsl
stos
out
mov
sbb
mov
imul
push
pop
push
insb
mov
lods
imul
dec
lahf
das
fisubl
mov
sbb
sub
lds
into
aaa
mov
das
daa
mov
mov
decl
or
out
lds
fdivrs
icebp
sub
mov
jle
jle
in
out
scas
fmul
loop
mov
mov
dec
iret
addl
pop
inc
adc
nop
push
xchg
es
fwait
sub
insl
stos
fcoms
jnp
add
das
mov
fwait
add
push
out
rclb
mov
call
mov
loop,pn
inc
mov
dec
scas
mov
sub
es
jecxz
cmpsb
and
mov
clc
test
inc
jecxz
add
push
test
cmpsl
jmp
jecxz
sbb
add
aam
mov
pop
outsb
test
mov
test
mov
jmp
shlb
stos
cwtl
cs
in
das
mov
nop
adc
test
adc
push
in
lods
dec
lock
sub
jo
fimuls
icebp
outsl
jno
enter
arpl
mov
pop
int3
jg
mov
cmpsl
cmc
lods
fisttpll
or
imul
lret
outsb
fsubl
mov
loopne
or
adc
inc
adc
fcoml
lods
or
scas
lea
dec
sbb
icebp
outsw
fbld
mov
subb
sti
mov
pop
leave
mov
cltd
add
fisubs
mov
jle
mov
pusha
mov
and
push
test
push
popl
lds
jae
adc
jmpw
xchg
sub
adc
xor
and
testb
std
insl
xchg
iret
enter
test
std
jg
push
hlt
mov
roll
pop
xchg
lahf
mov
push
dec
mov
mov
dec
movsl
out
jmp
mov
stos
sbb
imull
add
ret
lds
jno
pushl
gs
call
popf
outsb
mov
scas
pop
xchg
adcl
sub
jp
sti
sbb
rorb
int
repz
fs
enter
dec
iret
add
hlt
icebp
xorl
mov
mov
dec
jp
mov
xchg
xchg
lds
mov
add
jg
xchg
inc
dec
jmp
xor
jp
push
out
xor
jmp
insb
call
js
inc
push
jecxz
jnp
lret
mov
xchg
stos
icebp
insl
pop
lahf
mov
rcr
sub
stos
jns
ret
jge
cmp
lcall
adc
and
out
inc
mov
fidivl
movsl
lock
pop
lock
lret
mov
loope
inc
dec
jecxz
sahf
mov
movsb
lock
rol
scas
mov
cmpsl
stc
cmp
push
push
fwait
pop
sbb
mov
ffreep
mov
and
lock
mov
push
xor
fistps
push
push
or
popa
sarb
jmp
sub
xchg
in
not
imul
jno
cli
insl
cmpsb
sub
push
pop
push
test
nop
arpl
rorb
cli
fucomip
mov
add
call
jb
jge
idiv
andl
scas
sub
cmp
dec
sti
mov
cmp
pop
pushf
jle
call
test
outsl
lahf
das
imul
cmp
jae
fsubrl
sbb
mov
adc
movsl
add
mov
aam
js
cmp
or
fdivs
cmp
imul
loope
aas
loopne
loop
inc
sub
mov
in
add
sbb
fisubs
and
push
loop
mov
jmp
xchg
arpl
cmpsb
jae
sbb
cmp
fdivrs
cmp
sub
cld
lds
aad
mov
mov
sbb
mov
fdivrp
daa
or
jge
and
pusha
jle
aas
xchg
cmpsl
scas
pop
mov
loop
daa
mov
lret
fildl
movsl
dec
hlt
insl
jle
xchg
jl
mov
std
inc
jmp
lahf
add
rorl
fistl
sub
into
sub
dec
dec
insb
inc
pop
rcrb
xlat
jg
adc
fsubr
dec
outsl
mov
add
cmpsl
ljmp
inc
mov
mov
mov
xchg
shlb
push
ret
out
xor
cwtl
or
pop
ret
scas
push
jmp
mov
daa
adc
push
in
fisubs
sbb
ret
shl
xor
inc
jg
out
iret
pusha
mov
cmp
mov
and
jp
mov
imul
outsb
pusha
push
stos
call
mov
lods
sub
mov
fcomp
lret
pop
jmp
push
adc
pop
dec
dec
ret
nop
stos
jecxz
inc
pop
dec
or
inc
leave
lea
mov
sub
mov
xor
popf
std
push
jecxz
dec
addr16
mov
pop
and
mov
outsl
outsl
mov
pop
mov
jne
loope
cld
and
loopne
imul
movsb
pop
sub
insb
jb
ficoms
mov
pusha
loopne
sahf
or
in
int
mov
cwtl
into
xor
sti
sub
dec
xor
in
arpl
imul
mov
ret
push
pop
sub
popa
push
mov
sarl
dec
push
push
lret
xchg
iret
out
jmp
cmpsl
fnstenv
les
mov
mov
mov
lds
pop
movsl
lret
insb
cmpsl
test
dec
jge
jge
cmpsb
out
cmc
sub
xchg
sub
inc
mov
jno
shrl
imull
repz
jb
mov
adc
xor
push
pusha
xchg
js
or
nop/reserved
sub
dec
loope
pop
outsb
adc
outsb
inc
fisttps
enter
mov
loop
inc
cwtl
inc
out
sub
outsb
mov
ret
mov
and
mov
test
inc
lods
bound
lock
in
mov
push
loop
ja
or
sbb
popa
jge
cmp
aaa
jae
push
enter
outsb
xchg
or
push
enter
data16
push
outsl
jle
mov
dec
rolb
mov
cld
ret
pusha
lahf
pop
sti
mov
xlat
jbe
mov
mov
xor
push
test
jmp
out
mov
outsb
in
popa
dec
add
scas
and
outsb
mov
repz
or
subps
and
mov
daa
clc
fldl
xor
out
mov
mov
ss
loop
lret
cmp
sub
mov
pop
clc
mov
lods
sub
orb
lods
arpl
xor
mov
sarb
pushf
bound
push
dec
pop
pop
in
icebp
pop
stos
dec
add
insb
loope
call
pop
cli
sahf
mov
cltd
mov
inc
stos
dec
call
add
add
fistl
in
in
dec
ds
incl
dec
cmpsb
dec
push
fucomip
dec
mov
lcall
mov
nop
xor
pop
scas
mov
mov
add
jo
out
insb
cmpsb
and
push
push
push
mov
shr
and
cmpsl
int
sbb
adc
dec
add
fldenv
mov
mov
adc
pop
push
bswap
pop
pushl
cmc
mov
cs
lock
loope
loop
aad
mov
addr16
push
inc
in
xchg
xchg
adc
mov
out
bound
outsl
aas
lds
mov
rorb
adc
imul
xor
mov
pop
add
out
inc
mov
and
push
push
sub
out
lcall
xchg
pop
outsb
or
out
jno
pop
adcl
fwait
xchg
jp
out
push
jbe
aam
xlat
leave
or
pop
outsl
mov
xchg
jl
insl
cmp
popa
or
out
and
mov
pop
cmpsb
out
xor
jae
or
movsl
fisubrl
lea
out
int
fwait
dec
push
adc
dec
dec
in
test
and
das
and
pusha
ret
call
outsb
pop
out
ffree
cmp
bound
or
xor
push
sbb
nop
xchg
bound
call
popf
dec
xchg
lods
cmp
das
mov
movsl
adc
gs
js
sbb
and
cmp
icebp
aad
arpl
or
pushf
imul
adc
scas
addr16
mov
stos
cmpsl
xorb
addr16
mov
mov
lea
xchg
jp
pop
data16
imul
insb
les
xchg
inc
out
out
lret
adc
lcall
scas
stos
sarl
es
pop
js
xchg
nop
push
shrl
adc
jns
adc
jp
fdivl
pop
pop
add
mov
ljmp
loopne
rcl
dec
mov
jne
test
sub
pop
dec
fistpll
filds
mov
into
test
mov
nop
push
lds
xchg
push
lret
shlb
xchg
or
loopne
cmp
mov
test
cmpsl
mov
mov
outsl
enter
arpl
jb
rorb
pushf
icebp
enter
out
mov
call
gs
dec
outsb
add
xor
fcompl
and
or
imul
stos
lock
ljmp
xchg
lahf
cmp
int3
mov
sbb
in
jnp
mov
xchg
inc
pop
mov
sahf
jp
insl
cli
cmp
pop
jae
add
ja
stc
mov
cmpsb
imul
lods
mov
jbe
jae
push
cmovle
fwait
cmpsl
dec
mov
and
stc
addr16
mov
add
pop
pop
inc
mov
dec
cmp
dec
add
lods
shr
sahf
mov
push
cwtl
hlt
movsl
xor
outsb
lret
ja
call
or
adc
test
fadds
shll
sahf
and
or
add
rorb
ljmp
jno
jb
lock
aas
out
cmpsl
dec
jne
mov
dec
xchg
inc
imull
idiv
mov
lea
scas
jmp
out
mov
pop
pxor
arpl
cli
jbe
test
stos
loop
or
sbb
test
insl
out
pop
imul
pop
pop
cld
enter
xlat
jns
and
ds
ja
push
mov
xor
les
add
pop
scas
xchg
leave
or
jae
xor
mov
dec
imul
mov
mov
mov
pop
test
sti
rolb
xchg
pushf
pop
cmpsb
fiadds
add
stos
lock
xchg
mov
lahf
outsb
imul
lock
rcl
pop
jbe
outsb
int
ljmp
or
cmp
and
les
ljmp
or
shr
sub
jno
fdivrl
mov
ljmp
out
mov
sbb
daa
adc
fiadds
popa
jl
adc
pop
adc
bound
leave
loopne
sbb
pop
stos
into
adc
xchg
xchg
mov
in
push
push
insb
dec
in
xchg
mov
lock
jae
mov
cld
jb
inc
or
imul
aas
test
dec
mov
daa
jmp
lock
addr16
add
imul
lahf
push
nop
cmpsl
push
rcrl
inc
push
js
lahf
pop
repnz
adc
call
ss
imul
in
ror
push
jl
rcrb
cltd
dec
ljmp
cmp
push
scas
pop
pusha
push
out
push
stos
ficoml
push
mov
sub
ret
cmp
iret
iret
push
loopne
iret
dec
mov
mov
repz
or
rcl
jae
sbb
sub
sbb
jae
add
add
mov
pop
jle
scas
dec
imul
loop
sub
mov
mov
imul
adc
dec
push
dec
jg
out
movsl
jns
lret
xchg
add
inc
iret
scas
pop
sub
repnz
jmp
push
dec
push
fwait
mov
call
push
push
addb
mov
sub
mov
jp
movsb
jle
add
mov
add
outsb
ffreep
push
jecxz
es
cmp
rol
cli
push
adc
add
or
adc
clc
insb
leave
xchg
cmc
call
out
std
inc
cmpsb
loopne
insb
mov
pop
sti
add
test
fbstp
sahf
jp
and
cmc
pop
outsl
mov
jp
and
repz
and
inc
jae
pop
xor
out
push
push
inc
adc
jp
cmc
push
scas
test
mov
into
sbb
int3
in
mov
js
pop
jg
cmpsl
lret
add
cmpsl
mov
popa
ffreep
call
out
xchg
cmpl
leave
push
imul
fisubl
jnp
outsb
jb
cld
cs
in
shlb
out
sbb
cmp
gs
call
es
xor
dec
add
jg
cmp
lahf
insl
loopne
xchg
lret
xor
outsb
iret
mov
xor
cmc
xorb
int3
les
or
sbb
mov
hlt
addr16
xchg
inc
mov
orb
dec
xor
mov
pop
mov
mov
nop
jle
add
insl
gs
mov
dec
mov
imul
jge
gs
inc
out
sahf
ja
pop
shll
int3
dec
push
cmc
out
out
mov
scas
ret
hlt
or
inc
lods
scas
add
push
cmp
xchg
fs
add
test
mov
cwtl
sub
adc
enter
adc
push
inc
add
dec
inc
xor
adc
scas
jge
bound
cmp
jg
in
inc
insl
jnp
or
sti
jge
ret
sti
or
outsb
sahf
dec
out
test
mov
js
inc
fisttpl
push
jl
ja
outsb
imul
test
xor
mov
insl
popf
bound
imul
stos
adc
scas
cli
fwait
test
std
mov
dec
les
mov
jns
popa
push
sahf
jl
sub
add
and
dec
addr16
sbb
loop
xchg
mov
push
in
pop
mov
pop
adc
cmp
and
push
ret
push
inc
mov
call
push
pop
jmp
and
mov
in
in
stos
jecxz
call
ljmp
mov
xorb
imul
mov
pop
push
loopne
pop
cmp
jne
mov
jae
sbb
out
mov
or
hlt
pop
mov
lock
stc
rolb
add
xor
arpl
cmc
push
sbb
dec
in
pop
loop
out
out
mov
outsl
jae
add
mov
enter
shrb
cmpb
leave
lahf
aad
es
sub
loope
in
push
outsb
outsl
mov
daa
out
rolb
stos
clc
mov
mov
dec
clc
insl
mov
cltd
in
je
mov
add
and
ffreep
mov
ja
or
dec
scas
pop
jnp
adc
lret
mov
or
fistl
mov
movsb
lea
rorl
or
push
pop
pop
jg
je
xor
test
dec
mov
cmp
lock
dec
shlb
dec
clc
iret
or
xor
lret
fildll
mov
lea
ja
dec
pusha
subl
in
lret
pop
ljmp
jmp
in
cmpsl
shlb
pop
insl
subb
push
sub
mov
popa
xor
outsb
gs
add
mov
loope
ret
pusha
xchg
mov
cmp
mov
push
mov
scas
test
repz
fs
lahf
or
sub
and
out
mov
mov
add
sub
xor
jae
inc
push
mov
ret
and
je
popf
jbe
jecxz
enter
mov
in
rorl
stc
ss
stos
xchg
call
mov
xchg
call
lret
aad
idivl
inc
add
outsb
out
jg
call
daa
insl
shr
xchg
inc
ljmp
aad
pop
testb
rcll
push
push
outsl
cmp
mov
enter
data16
int
dec
xchg
cmpsb
sarb
jp
mov
insb
mov
fidivs
cld
out
test
mov
jg
clc
dec
lods
add
outsl
movsb
ljmp
int
mov
gs
push
lahf
jns
jmp
mov
sahf
cmpsl
in
inc
push
ret
inc
mov
cs
mov
int3
push
pusha
mov
pusha
inc
stos
mov
and
cmp
dec
fbld
jnp
push
jle
arpl
fdiv
mov
cmpl
es
loopne
negl
inc
sbb
into
mov
or
mov
dec
xchg
fistps
push
stos
clc
hlt
mov
inc
push
or
inc
es
xchg
cmp
rcll
sub
scas
mov
and
mov
dec
or
jg
insl
test
stos
stos
xchg
xchg
fsubrl
cs
dec
icebp
lock
lret
in
mov
mov
jb
pop
out
push
pop
addr16
movsl
add
push
inc
cmc
movsb
mov
ljmp
cmp
loop
out
movsb
inc
or
pop
shlb
mov
jmp
std
dec
sahf
jle
mov
in
int
dec
cmp
cmpsl
fldl
mov
mov
mov
int3
out
xchg
lods
les
frndint
clc
fistpll
sub
sub
xor
aad
xor
lret
arpl
call
stos
xchg
or
dec
ret
dec
push
inc
in
sbb
stos
outsl
int3
out
dec
cld
or
push
test
fisubl
jns
imul
dec
mov
xchg
jmp
insb
push
mov
out
pop
enter
outsl
in
outsb
out
in
test
outsb
outsb
push
out
shr
lods
insl
call
in
xchg
out
jge
and
out
imul
ret
insb
xchg
icebp
movsl
fwait
or
cmp
in
sub
neg
mov
lret
into
add
or
imul
xchg
rcr
cmpsb
adc
xor
hlt
loopne
jb
scas
adcl
cmp
dec
push
loope
pop
insb
imul
xor
xor
hlt
push
lods
cs
hlt
and
jns
fildll
repnz
in
movsl
nop
sub
movsl
dec
cmp
rsm
enter
jmp
mov
dec
ds
dec
inc
or
mov
cmpsb
add
addr16
clc
jns
mov
call
rcrl
out
jp
aaa
sbb
jnp,pt
mov
mov
sbb
dec
sub
jo
or
sub
aas
je
out
in
addr16
lods
data16
push
pop
adcb
rorb
push
cs
mov
sarl
cmp
push
fildll
loope
pop
pop
mov
daa
add
movsl
repz
push
cmp
mov
fucomp
nop
imul
lmsw
inc
int
cmpsl
icebp
orl
fsubrs
cmp
cld
mov
out
or
xchg
loope
push
and
clc
push
loopne
or
aam
cli
cmp
lea
lods
mov
mov
outsl
loope
imul
out
fst
mov
mov
push
add
push
add
outsb
outsl
or
imull
sub
mov
loopne
xor
cwtl
shrl
insl
push
mov
ds
dec
jp
dec
jge
or
fucom
xchg
in
pop
xchg
int
or
loop
or
stos
xchg
dec
scas
in
cmpsl
mov
push
fildll
mov
aad
inc
addr16
jne
vpexpandq
loop
aad
pop
shll
xchg
pop
cmp
fcomip
cltd
jmp
data16
in
mov
xchg
std
jb
mov
mov
enter
push
inc
xor
xorl
in
in
push
gs
inc
loop
xchg
shll
fpatan
ja
cmc
dec
mov
pop
in
hlt
imul
mov
mov
enter
jne
jae
cmpsl
insb
jnp
insl
fs
or
jae
stos
or
imul
mov
xchg
xchg
outsb
lret
cli
scas
cmpsb
mov
jg
sbb
and
ret
call
cmc
adc
add
inc
fnstenv
movsl
ret
cmp
lcall
daa
clc
fnstenv
rcll
cmpsl
push
mov
ss
dec
push
fnstcw
adc
pop
sub
jbe
push
lahf
test
out
gs
xor
xor
mov
and
pop
call
fldcw
cmpsb
loop
fistps
jle
mov
pop
nop
xchg
pop
mov
arpl
mov
iret
cmpb
je
dec
inc
mov
ret
inc
pop
push
dec
cmpsb
std
lock
xchg
sti
dec
outsl
pop
jg
push
out
jmp
pop
in
jb
mov
hlt
push
scas
sbb
lret
jmp
lods
fwait
loope
insb
sbb
fucomi
repnz
nop
imul
out
push
in
or
outsb
or
bound
push
cmp
adc
addr16
loope
inc
jns
lock
repnz
lcall
je
scas
sbb
addr16
push
test
push
movsb
dec
shr
lods
cmp
int3
xor
in
xor
hlt
fs
outsl
sub
cli
jge
jg
arpl
adc
out
sbb
sbb
orb
or
cmp
movsb
cld
icebp
jge
add
in
inc
loop
ret
pop
mov
loope
xor
jae
mov
and
cli
out
insl
mov
sbb
cmp
fimull
pushw
mov
movsl
jno
sahf
mov
inc
outsl
rorl
and
clc
push
icebp
es
in
int3
or
mov
icebp
stos
xchg
out
inc
sub
jge
mov
adc
inc
or
mov
divl
stos
arpl
sbb
cli
outsb
lods
mov
xchg
dec
pop
mov
mov
dec
and
movsl
out
or
push
test
or
insl
xor
sbbb
dec
insl
pop
in
fsubrl
in
mov
mov
pushf
mov
outsl
mov
stos
jae
cmp
enter
inc
insb
fists
insb
inc
in
xlat
xchg
popa
dec
pop
aas
cld
repz
pop
pop
scas
sub
int
scas
mov
xchg
cmpsb
jp,pn
shrb
adc
arpl
icebp
sub
out
out
leave
in
arpl
pop
mov
inc
push
ret
movsl
inc
outsl
pop
shr
outsl
outsb
jp
jl
mov
xorb
push
lods
mov
inc
xchg
inc
mov
outsl
add
dec
out
fistpll
data16
bound
pop
addr16
rcll
cmc
mov
inc
enter
jo
jae
out
dec
mov
and
xchg
mov
test
adc
pop
nop
cwtl
out
adc
cmp
ja
fsts
xorl
jle
cmp
fsubrl
out
inc
test
fmull
cli
es
adc
mov
mov
lret
popa
insl
fwait
in
mov
inc
rdpmc
fwait
daa
sub
data16
sbb
and
inc
aaa
iret
imul
in
jb
shrb
xchg
xchg
mov
fsubs
insb
call
sti
ljmp
xchg
xor
incb
shll
and
cmp
filds
ss
push
idivl
jo
int3
loope
push
mov
xor
and
mov
test
out
mov
ljmp
fisubl
mov
aaa
cltd
movsl
and
jmp
fbld
test
cmp
lahf
jns
inc
push
mov
mov
adc
push
aam
stos
or
push
cwtl
sub
rorb
sub
inc
mov
cmpsb
and
movsl
loop
int3
arpl
pop
mov
lock
pop
mov
popa
push
ljmp
cmpsl
outsb
pop
cli
ja
shll
and
cmp
xchg
stos
mov
xor
je
js
les
gs
scas
repz
stos
cmpsb
mov
cmp
cmpsl
push
lds
call
out
lock
test
scas
xchg
insl
sahf
xchg
aas
cld
out
out
subb
leave
scas
inc
jmp
shlb
repnz
mov
pop
adc
sub
jge
push
mov
aaa
sub
movsb
mov
out
push
mov
clc
or
arpl
jb
push
jmp
add
mov
in
repnz
mov
jp
adc
data16
mov
lock
repz
imul
adc
mov
sbb
lea
inc
in
stos
mov
jae
inc
adc
pop
jle
xor
hlt
pop
imul
mov
insl
mov
mov
pop
shr
push
dec
loopne
pop
jnp
cmp
lret
dec
adc
sbb
mov
icebp
add
jmp
aaa
jmp
xchg
pop
jb
sbb
je
sub
and
lahf
data16
jp
push
pushf
jne
dec
mov
mov
or
and
loopne
mov
out
iret
xchg
mov
jmp
lret
lea
daa
jbe
repz
mov
xor
add
mov
xchg
icebp
mov
mov
and
call
sbb
mov
lods
outsb
push
sbb
test
loopne
inc
ffreep
push
dec
loope
cmp
cld
sub
add
ss
scas
lock
fwait
push
mov
xchg
data16
mov
and
mov
ja
sbb
jmp
pop
test
jecxz
push
adc
fidivl
rcll
inc
xchg
fwait
sti
stos
les
nop
jnp
fldln2
pop
les
or
outsb
mov
xchg
mov
and
jle
popl
push
cmp
out
pop
xchg
sbb
cmp
mull
and
in
pop
dec
jae
in
mov
icebp
pop
mov
dec
xchg
push
mov
daa
in
call
xor
cmc
lahf
mov
test
js
jns
sub
inc
or
divb
out
stos
sub
repz
or
xlat
repnz
mov
sbb
call
dec
cmp
cmp
ret
in
jae
sub
pop
push
loop
loopne
insb
xchg
movsl
fdivrl
rorl
sbb
cld
enter
subb
cli
cmp
pop
ret
or
inc
mull
addb
xor
fistpl
xchg
add
dec
es
mov
push
pop
add
jnp
mov
repnz
outsl
push
push
dec
xor
xchg
adc
mov
test
sub
mov
mov
pop
imul
mov
push
mov
and
mov
insb
insb
nop
in
cs
shll
movsb
aas
insl
clc
dec
lret
int
sbb
sub
mov
pusha
pop
pusha
jl
mov
mov
inc
insb
sbb
nop
inc
scas
out
fwait
scas
jbe
scas
or
mov
icebp
xchg
into
jnp
jbe
xchg
mov
jmp
lcall
mov
or
shrb
dec
loopne
sti
nop
dec
out
xchg
mov
out
test
or
insl
ds
pop
dec
dec
jae
inc
push
cmp
and
lods
les
ljmp
adc
cs
push
dec
ret
and
fadds
fbld
arpl
pop
pushf
scas
popl
pop
and
loopne
icebp
xchg
repnz
fsts
mov
inc
jns
xor
or
aad
je
enter
mov
out
das
cmpsl
ljmp
hlt
jle
xchg
mov
addr16
notb
mov
dec
push
mov
sbb
fbld
or
push
push
iret
xchg
sub
cmpsl
fnstenv
enter
fmuls
idivl
jmp
sbb
mov
dec
test
dec
jmp
test
insb
pop
mov
sbb
xchg
sarb
dec
test
roll
out
aam
inc
push
adc
xor
das
lock
mov
pop
and
pop
cltd
or
dec
jle
scas
insb
or
test
cld
push
xchg
mov
add
lods
sahf
outsl
ret
xchg
push
dec
dec
add
xor
jae
jbe
pop
outsl
sub
jl
jb
dec
cmpsl
orb
cs
jmp
mov
fldl
shlb
jl
add
xchg
add
loopne
jns
loop
adc
in
nop
xchg
jno
pop
icebp
popa
sbb
popf
jmp
clc
cltd
mov
ret
push
scas
lea
hlt
mov
lock
icebp
jae
push
xlat
out
xor
out
test
out
sbb
mov
rcrb
inc
call
jb
mov
mov
inc
data16
pop
test
and
ret
xchg
imul
cwtl
jae
dec
rclb
aam
sbb
arpl
scas
push
les
adc
pop
data16
jno
outsl
sbb
imul
outsb
hlt
out
xor
bound
out
insl
repz
mov
dec
sbb
cmp
dec
lock
hlt
imul
test
cmpsl
mov
jno
imul
data16
push
arpl
je
or
xchg
add
aas
out
es
outsb
sti
sub
xchg
push
or
xchg
lcall
sbb
jge
xor
cmp
fsubp
mov
add
adc
inc
and
push
int
icebp
data16
inc
movsl
rclb
push
das
and
pusha
lcall
cwtl
int3
daa
and
pop
inc
mov
dec
int3
iret
and
daa
cmp
clc
insl
or
mov
outsl
mov
dec
out
add
fwait
lea
push
cmpsb
push
adc
push
fisubrs
stos
xchg
out
push
lret
pusha
mov
fwait
dec
fbld
adc
mov
cmp
sbb
loope
test
cmp
inc
leave
or
lds
pop
out
imull
movsb
rcrl
cltd
and
mov
mov
push
fucom
cli
and
cmpsl
repz
mov
mov
scas
and
daa
repnz
cmp
jb,pt
cs
aam
lods
jae
xchg
outsb
jg
or
cmp
insb
outsb
dec
out
outsl
hlt
decl
fisttpll
idivb
xor
in
dec
je
mov
push
stc
das
hlt
shr
or
popa
add
sub
outsl
dec
jae
and
rorb
pop
shrl
sti
jae
pushw
into
mov
cmc
push
push
pop
outsb
jb
insl
xor
icebp
fcompl
add
cmp
f2xm1
add
insl
dec
dec
pusha
mov
fstp
faddl
jae
incl
hlt
inc
push
push
loope
pushf
repz
cmp
repz
xchg
add
repz
data16
cmp
out
in
pusha
mov
outsl
inc
mov
cltd
mov
cs
xchg
mov
cltd
xchg
push
mov
gs
je
cmc
or
ja
leave
js
sahf
testb
mov
imul
jbe
jno
gs
inc
addr16
pop
int3
hlt
push
jg
stos
mov
dec
stos
out
xchg
outsb
jo,pn
jg
push
int
mov
or
add
std
jl
imul
icebp
or
inc
test
popa
xorb
lret
mov
test
subb
dec
incl
repnz
sarl
adc
cmp
push
aad
icebp
std
out
imul
jns
in
dec
imul
cs
in
mov
push
pop
add
and
in
fistps
andb
mov
in
pop
in
dec
jl
adc
loopne
cmp
mov
cmp
jg
sbb
xchg
loope
dec
mov
outsb
push
outsl
ja
dec
lret
fisubrl
loopne
lea
lret
dec
jl
xchg
pop
mov
or
cmp
inc
jg
loop
lock
add
fidivrl
repnz
outsb
outsl
jmp
loop
stc
jg
mov
dec
jg
data16
add
mov
dec
add
sbb
icebp
push
insb
aad
aam
inc
loope
mov
data16
pusha
cld
outsb
push
xchg
dec
aas
or
lret
loope
inc
fildl
mov
enter
fs
mov
fwait
js
imul
fcoml
pushf
dec
dec
jb
jmp
push
cmp
push
sbbb
mov
push
or
push
icebp
ja
sub
shll
and
adc
inc
or
fistpll
stc
xchg
in
cmp
inc
imul
cmp
xor
int3
pusha
hlt
jp
movsl
outsl
sbb
aad
sub
movsb
dec
mov
pop
sub
shll
hlt
cmpsb
adc
push
ss
jmp
repz
push
in
insl
jno
js
inc
cmp
dec
xchg
ss
xlat
notl
sub
mov
mov
jle
jne
test
sub
mov
or
outsl
nop
jb
lea
divb
jg
push
out
push
cmp
ss
repnz
push
push
jo
nop
pop
mov
jbe
mov
hlt
jg
shll
movsb
cltd
mov
mov
andb
mov
fincstp
push
pushf
jle
shrl
dec
xchg
xor
lea
sbb
add
push
xchg
aas
mov
icebp
push
fimull
xchg
aam
pop
xchg
popa
and
xchg
jg
sub
lods
mov
jbe
push
mov
push
stos
cmp
addr16
cmpl
int
jg
inc
scas
in
cmpsl
shrl
aam
clc
outsb
call
andb
popa
clc
sub
test
adc
push
jb
xchg
jg
movsb
test
mov
pop
mov
xchg
jmp
mov
cs
mov
ljmp
mov
adc
mov
cmc
cmpsb
lock
pop
cld
add
scas
jb
dec
pushf
ja
rep
test
aaa
out
mov
adc
flds
jl
aas
dec
sub
cltd
jbe
mov
add
jne
mov
fbld
xor
in
push
inc
pop
mov
or
rcrl
or
pop
das
push
lock
inc
hlt
xor
insb
cmpsl
inc
mov
outsl
movsl
pop
push
jne
pusha
push
or
scas
sub
sub
das
jmp
subb
scas
xchg
dec
push
shlb
icebp
jae
lea
dec
mov
sub
sub
jbe
imul
add
lea
sub
xchg
inc
mov
dec
movsb
daa
out
leave
pusha
in
aaa
push
outsl
jae
shll
cmc
sbb
je
pop
mov
mov
pop
adcb
or
cmc
imul
xchg
pop
dec
push
push
or
or
lcall
and
push
xor
cmp
lret
pop
loop
pushf
jnp
xlat
outsl
push
movsb
in
lea
pop
mov
outsb
enter
inc
andb
daa
or
xchg
mov
scas
xchg
pop
pop
dec
mov
sbb
stc
movsb
das
dec
shll
out
mov
dec
push
negb
ror
mov
enter
scas
and
push
push
push
repnz
outsb
pop
push
adc
push
stos
dec
in
jle
test
movsl
test
es
push
out
push
or
xor
ljmp
sbb
adc
mov
mov
lea
pause
xchg
push
imul
orl
int3
or
popa
in
push
adc
push
dec
rcl
jle
xor
jecxz
xchg
and
dec
xchg
and
or
xchg
mov
test
in
and
add
mov
mov
and
lea
loop
out
jno
sbb
mov
ss
adc
xchg
sbb
ljmp
cmp
fs
mov
mov
bound
inc
xacquire
out
push
mov
lock
outsl
mov
lods
in
xor
loope
aas
ror
pop
pcmpgtb
push
push
test
jg
imul
scas
nop
js
in
imul
cmpsb
add
and
clc
push
out
imul
jbe
arpl
add
test
mov
les
enter
imul
mov
lock
cmpl
dec
jecxz
test
scas
in
lods
mov
mov
jp
addr16
aam
roll
sbb
fstpl
or
push
inc
add
loope
sub
shrl
mov
add
xor
ljmp
out
in
cs
stos
js
leave
inc
loop
das
mov
push
nop
xor
nop
jle
out
lret
mov
inc
cmp
jle
shr
out
or
xor
inc
sbb
outsb
push
dec
sbb
loop
cld
cld
lock
mov
daa
inc
inc
punpckhbw
aad
cli
scas
movsb
hlt
insb
mov
mov
sbb
adc
aad
sbb
fucomip
out
jp
cs
dec
mov
call
lock
add
outsb
in
xchg
pop
jle
jne
in
imul
mov
jmp
push
dec
daa
ds
std
mov
paddusb
sbb
insb
adc
mov
test
enter
inc
and
inc
lock
daa
push
dec
lahf
das
orb
outsb
loop
inc
aas
std
rcrl
stos
out
out
je
call
fdivrl
jp
cli
ret
add
mov
pushf
or
dec
mov
arpl
movsl
jnp
scas
sbbb
out
pop
and
addr16
sahf
imul
add
stos
mov
jb
xlat
stos
xor
mov
inc
repz
imul
test
into
xor
adc
pop
push
jno
jne
mov
into
addr16
sub
into
dec
fstps
and
and
and
dec
sub
outsl
pop
or
lock
outsb
push
ja
out
in
mov
mov
jge
cmpsb
ficoml
push
lods
into
cmpsl
mov
push
scas
jg
ss
jne
adc
jnp
call
scas
jg
ss
fsubr
insl
loopne
ja
and
sti
cli
jp
enter
jae
jns
imul
sbb
imul
lret
insl
or
stos
or
or
lock
push
cmp
and
js
inc
adc
fsts
shll
mov
int3
andb
mov
aaa
cmp
cmp
jge
pop
nop
popa
cwtl
clc
icebp
aas
pop
and
das
or
cmp
fdivs
xchg
or
add
add
jbe
add
dec
push
fidivs
push
test
pop
cwtl
out
mov
and
sti
jmp
rcrb
arpl
pop
in
sbb
loopne
test
cmp
cmp
insl
mull
test
push
mov
xlat
cmpsl
dec
dec
data16
push
pop
dec
mov
mov
out
jge
scas
pop
jae
pop
fcomps
add
jbe
dec
fs
jle
jg
xchg
shll
mov
mov
outsb
jno
mov
scas
inc
enter
inc
cwtl
jp
xchg
das
shrb
inc
test
add
lret
push
xchg
pop
dec
loope
in
nop
insl
inc
arpl
stos
mov
mov
data16
mov
add
or
cwtl
out
cmpsb
movsl
pusha
pop
fdivs
int3
js
ja
sbb
les
pop
inc
jg
dec
xchg
xchg
jae
ja
mov
lahf
sbb
sbb
pop
shll
cmpsb
notb
lods
cltd
fnstenv
imul
dec
mov
push
in
daa
or
inc
cmp
das
jecxz
cmp
push
add
stc
sub
pop
jl
mov
mov
push
xor
js
inc
lahf
inc
hlt
xchg
add
and
test
f2xm1
test
xchg
sub
jge
inc
pop
shll
shl
test
scas
int
out
pop
xor
xchg
shll
rcrl
pop
mov
jecxz
std
pop
psubusb
mov
jmp
insl
rolb
and
inc
mov
and
jg
aas
out
push
push
cmp
scas
inc
cmpsl
or
cmpsb
xchg
adc
jno
fmul
mov
adc
dec
push
out
and
data16
daa
fmuls
pop
jae
aam
inc
hlt
add
mov
and
ret
rclb
xchg
push
in
movsl
lahf
cwtl
adc
bound
cmp
or
inc
jno
cld
inc
fdivl
cmc
insl
push
jmp
mov
jae
xor
enter
lret
scas
pop
mov
bound
xor
jbe
dec
sti
dec
shrl
mov
jae
xchg
int
jl
xor
cmp
insb
mov
lret
rcll
in
mov
es
mov
sbb
or
loopne
insl
je
xlat
je
outsb
mov
jae
clc
cli
or
outsb
xchg
cld
pop
scas
scas
lahf
and
add
jge
lock
fistps
outsb
test
scas
arpl
fsts
sub
rorl
push
mov
sub
dec
push
out
jb
call
dec
in
vmovsd
shr
adc
imul
dec
and
mov
inc
das
sbb
movsl
les
xchg
call
icebp
push
lret
adc
scas
cli
push
cmpsb
mov
out
sub
in
pop
mov
pop
cmpsl
scas
rorl
arpl
xor
xchg
mov
adc
pop
daa
dec
and
dec
and
fcmovnu
xchg
xor
adc
clc
jge
sbb
push
mov
lds
push
dec
fsubs
mov
dec
mov
in
out
ss
mov
lret
cs
xchg
pop
imul
negl
and
push
mov
inc
fistps
dec
out
shl
jmp
das
daa
mov
shrl
xchg
sti
pop
push
jbe
ret
scas
in
outsb
push
pop
xchg
rol
nop
daa
xchg
ret
sbb
and
outsl
cld
shl
mov
xor
imul
std
icebp
dec
xor
adc
push
mov
call
xor
decl
ljmp
jae
andl
cmp
std
hlt
insl
xchg
mov
fisttps
cld
std
xchg
scas
imul
mov
mov
scas
movsb
cs
mov
dec
and
insb
mov
mov
in
xchg
fld
stc
scas
lcall
pusha
mov
or
mov
cltd
or
icebp
sub
ret
sahf
jno
dec
add
stos
xor
xchg
jbe
sub
clc
mov
push
imul
hlt
call
movsl
lds
je
push
cli
push
into
add
ret
pop
push
pop
pop
stos
xchg
mov
mov
sbb
out
stos
out
add
jb
insb
mov
sbb
push
mov
lods
out
push
inc
adc
out
add
lods
adc
sub
xchg
lea
lret
ret
and
adc
cltd
inc
lods
push
loopne
jns
mov
jmp
jle
pop
xchg
inc
in
dec
icebp
out
cmpsl
insb
cmp
fisubs
lock
jp
adc
js
or
int3
push
cld
jge
movsl
mov
pop
pop
jg
push
pop
adc
adc
ret
dec
mov
jbe
scas
dec
jecxz
ja
sbb
cs
mov
jg
lret
stos
add
stos
cltd
lahf
dec
cmc
jbe
and
scas
and
and
decb
inc
dec
xchg
cltd
stos
clc
popf
dec
inc
jge
int
clc
cmc
xchg
in
lock
outsb
lock
add
xchg
mov
push
add
adc
loop
scas
jno
dec
nop
mov
sub
mov
cmpsl
mov
gs
cmp
sub
mov
cmp
loopne
ja
mov
daa
arpl
popf
repz
aas
in
jge
jae
mov
mov
mov
jb
je
test
push
and
cmp
pop
push
xchg
fs
lahf
enter
cmp
daa
ja
dec
nop
scas
insl
mov
or
push
das
fistps
iret
or
aam
pop
outsb
or
insb
dec
out
in
xchg
scas
int3
pop
push
rclb
imul
fadd
pop
ds
inc
mov
jmp
sub
ja
lock
ds
lahf
jle
fisttps
out
mov
loopne
outsb
sbb
call
imul
repz
xsaveopt
stos
or
test
nop
push
xchg
push
mov
sbb
sti
adc
outsl
imulb
mov
pop
adc
mov
das
mov
popa
int3
outsb
mov
outsl
or
ret
jmp
test
mov
jmp
cmpsb
mov
sub
mov
inc
das
mov
inc
mov
out
test
lea
loop
ret
in
fwait
push
xor
jae
pop
mov
shrb
cld
rcr
jno
add
add
mov
xchg
jae
pop
lcall
in
scas
lock
test
aad
xchg
xchg
xchg
imul
les
das
push
and
add
cmp
xchg
imull
inc
dec
out
mov
icebp
dec
popa
in
and
cmp
ffreep
jb
add
dec
out
lea
xor
icebp
stos
mov
xchg
pushw
outsb
fwait
jl
cmpsl
dec
lea
fs
notl
mov
sbb
lods
fucomi
adc
jns
loop
xor
fs
insl
fmulp
jg
hlt
ss
jecxz
ret
jbe
xor
jne
test
mov
in
dec
movsb
outsb
pop
add
lock
insl
aad
push
outsb
movsb
sbb
in
imul
jae
test
xor
pop
imul
scas
movsb
dec
jnp
cmp
psllq
or
adc
pop
or
mov
jle
ja
popf
insb
dec
stos
imul
outsb
or
mov
repz
in
push
mov
addr16
in
insl
out
lret
out
fwait
jecxz
dec
dec
insl
or
in
cmp
pop
iret
jb
out
jbe
repnz
out
xor
ljmp
ret
xchg
in
imul
dec
in
addr16
cmp
andb
out
add
lret
jmp
in
lcallw
push
lock
add
mov
pop
sarb
lock
mov
ljmp
mov
daa
subb
pop
mov
mov
push
ret
int3
int
jge
pop
outsb
insb
mov
test
popf
cmp
mov
nop
xchg
lock
adc
negb
leave
sbb
xor
enter
cmp
hlt
loop
outsb
pop
sub
or
hlt
scas
lods
call
outsl
std
xchg
lock
out
out
loopne,pt
push
xor
out
mov
dec
loopne
bound
outsl
das
loopne
popa
jno
mov
cmp
sub
in
add
loopne
stos
sub
shrb
jmp
sahf
in
dec
push
popa
mov
cmp
fldl
mov
xchg
push
jmp
cmp
sbb
and
jle
lret
jmp
out
jae
mov
adc
cmpsb
adc
in
lods
insb
aam
sbb
jne
cmp
imul
scas
jbe
mov
jecxz
fxam
pop
lds
shr
out
pop
add
mov
xchg
add
or
and
jl
scas
fcomip
sub
leave
pop
mov
rcr
int
paddusb
mov
xchg
push
jp
mov
int3
push
pop
jno
adc
dec
mov
mov
mulb
jecxz
xchg
scas
daa
fnsave
dec
stos
mov
fisttpll
loop
int
add
pushl
divl
cmp
dec
ret
negl
pop
mov
jne
cmp
mov
jns
cmp
hlt
add
pop
fidivrs
insb
xchg
movsl
cmc
loopne
cmp
jnp
filds
shl
rorl
push
scas
push
ret
iret
pop
xor
imull
xchg
sbb
and
pop
and
mul
mov
stos
mov
inc
cmc
xor
es
movsl
push
fnstsw
mov
es
in
out
int
and
outsl
lods
in
mov
lds
nop
add
add
ret
inc
sbb
in
lea
dec
mov
mov
out
mov
bound
jnp
mov
faddl
push
stos
xchg
cs
les
jle
int3
pop
jbe
adc
mov
inc
pop
sub
fs
push
dec
push
lock
dec
dec
decl
cltd
leave
jae
ja
rcrl
int
xchg
popa
out
jge
test
add
outsl
in
sti
inc
push
scas
pop
adc
xchg
out
repz
inc
sub
mov
das
mov
mov
xor
cmp
jmp
lock
mov
jae
imul
mov
mov
ret
clc
mov
pop
aaa
sbb
sub
stos
nop
pop
movsb
dec
pushl
mov
dec
jae
shrl
mov
into
inc
mov
jns
je
stc
xchg
mov
fsubrl
outsb
push
loopne
dec
xor
and
scas
jae
sub
and
push
fwait
sti
cli
shll
or
ljmp
outsb
dec
mov
in
clc
jno
or
daa
mov
adc
imul
scas
idiv
addr16
cmp
scas
mov
jle
out
and
jmp
pusha
xchg
fsubl
mov
sub
lcall
gs
fnstsw
out
sbb
fistpll
xchg
and
lock
addr16
mov
cmp
ror
data16
inc
sbb
lret
jmp
insb
fidivs
pop
dec
lods
inc
sub
movsl
sbb
stc
insl
adc
outsl
sbb
aas
and
enter
cli
jecxz
sbb
das
out
lock
outsl
dec
mov
inc
shr
and
jle
pusha
clc
xlat
cmovp
add
lahf
jmp
decb
mov
cmc
repnz
push
dec
xlat
aaa
pop
out
push
js
lahf
clc
or
test
ret
xlat
fists
and
xor
xchg
adc
mov
lcall
inc
cli
test
outsl
aaa
push
je
jno
adc
dec
mov
jne
xor
stos
gs
insl
inc
fiaddl
in
dec
mov
pop
pop
ds
and
insl
loope
mov
xchg
pop
inc
dec
and
adc
lahf
dec
dec
mov
sub
or
pop
xchg
dec
dec
xchg
jbe
sub
clc
loope
divb
jbe
add
out
push
jae
repz
adc
insb
pop
lock
call
pop
sbb
fimull
fucomip
jp
pushf
sbb
das
inc
mov
outsb
xor
xchg
repnz
or
push
std
sahf
pushf
outsl
mov
lcall
add
jbe
inc
mov
fildll
or
jns
pushl
dec
adc
adc
mov
data16
push
inc
jbe
dec
fcomp
shrb
cmpsb
jae
mov
add
ljmp
hlt
jl
in
xchg
loopne
xor
rcrb
cmp
scas
ja
mov
mov
mov
inc
arpl
cmp
push
loope
loop
sub
pop
xor
mov
imul
dec
pop
mov
gs
clc
sub
insb
xchg
test
xorb
in
dec
out
pop
push
clc
fmull
in
mov
adc
push
sub
pop
outsl
push
pushl
rcll
incb
sub
outsl
imul
cmpsb
sub
mov
add
inc
sbb
das
ljmp
push
out
out
xchg
jg
or
in
or
cs
call
test
jl
cltd
insb
jne
sub
scas
ss
or
adc
nop
int3
lock
ja
cmpsl
in
subb
inc
or
jp
lock
mov
out
push
dec
mov
cmc
xchg
subb
push
inc
or
inc
push
subb
adc
and
sub
inc
cmp
std
les
mov
lock
lods
push
or
pop
daa
xor
sahf
fwait
negl
pop
pop
xchg
test
push
aad
imul
mov
dec
sti
out
mov
mov
loop
push
push
movd
ss
inc
fisttpll
push
dec
pop
xor
xchg
add
push
inc
popa
or
iret
stc
scas
stos
sarb
dec
or
mov
dec
pop
lods
pop
call
loope
in
dec
outsb
fwait
in
xor
ja
ret
cmpsb
test
in
fimull
fisubrs
imul
or
out
jmp
push
mov
orb
lds
jae
mov
jle
ret
xchg
aam
rcll
test
cli
sub
in
lock
fnstcw
jno
jp
aam
pop
cld
inc
jns
cltd
inc
daa
pusha
mov
in
scas
outsb
mov
push
push
scas
mov
es
pushf
inc
icebp
mov
lock
jno
cmp
enter
jno
mov
rorl
xchg
stc
cmp
test
sub
push
xchg
mov
add
mov
call
nop
lea
arpl
stos
ljmp
xchg
push
xor
inc
hlt
lods
outsl
je
pop
add
jno
hlt
aas
ljmp
insb
out
jg
mov
jecxz
dec
enter
jae
mov
adc
js
shll
dec
jge
icebp
out
add
xchg
test
dec
repz
arpl
das
in
imul
adc
mov
or
test
iret
test
mov
dec
decb
or
inc
mov
xchg
pop
dec
sub
les
mov
add
arpl
call
ret
inc
jecxz
mov
lock
xchg
push
pop
sub
aas
push
jb
lea
xor
loope
addr16
jecxz
je
test
push
scas
mov
divb
loop
jbe
cli
lcall
mov
das
dec
pop
es
mov
out
jle
push
push
loopne
pop
rcrb
ja
ret
cwtl
sbb
icebp
inc
push
pop
outsb
in
or
dec
aam
pusha
dec
jne
jp
lods
pop
ret
aaa
enter
adc
inc
test
adc
adc
mov
add
imul
insb
pop
sub
inc
popf
and
xchg
mov
cmpsb
add
and
mov
js
in
adc
cwtl
dec
mov
inc
out
rorb
inc
pop
or
fwait
les
inc
repnz
mov
pop
cs
xor
out
sub
dec
push
shl
xchg
add
in
jb
jno
pop
jnp
jne
frstor
sti
jns
aad
lock
mov
jae
add
fistpl
jne
mov
ret
insl
lahf
and
je
push
mov
int
xchg
add
mov
lahf
sub
in
ret
dec
dec
sub
jmp
ds
lea
mov
mov
fidivrl
loop
imul
jmp
and
in
push
and
js
pop
daa
pop
jmp
in
stc
mov
call
out
movsb
dec
frstor
adc
int3
cmpsl
add
repz
mov
cld
inc
hlt
inc
shlb
cmpsb
in
fbld
pop
enter
adc
inc
push
mov
icebp
xchg
and
out
enter
cmp
fildll
fbld
cmpsb
adc
jmp
into
jnp
inc
add
lods
in
cmp
add
into
call
js
repz
inc
iret
stos
stos
lods
stc
add
jecxz
out
or
adc
sub
inc
movsl
imul
into
pop
or
mov
and
pushf
cltd
inc
cltd
scas
and
data16
mov
clc
lock
pop
adc
add
jns
cltd
push
jl
sub
pop
cmpsb
lock
inc
aad
jp
ds
adc
leave
scas
lds
xabort
pop
inc
nop
movsb
pop
outsb
std
mov
dec
push
leave
das
out
mov
dec
test
stos
lods
sub
in
push
add
scas
imul
sub
das
test
or
xchg
mov
dec
dec
push
mov
cmpsb
data16
mov
je
je
mov
psubq
add
insl
jo
rcrl
les
sub
inc
sbb
shll
add
lretw
and
in
cmp
stc
enter
lods
into
lock
rcl
add
push
jnp
jp
popl
sbbl
out
lods
xor
mov
push
lret
outsb
push
lods
imul
bound
stc
or
mov
sub
js
subb
pusha
clc
out
jbe
add
les
mov
sbb
mov
xor
movsb
dec
out
out
in
inc
rcll
jge
dec
in
cmpsb
xor
xor
data16
adcb
sbb
dec
arpl
or
ret
jmp
push
movsb
mov
and
sub
ret
mov
movsl
hlt
dec
push
inc
push
sbb
aam
dec
jg
cmp
in
enter
sub
popw
xor
jle
or
mov
pop
mov
cld
dec
enter
out
xorb
cmp
iret
cwtl
in
and
out
fnstsw
jmp
push
and
mov
push
xor
pop
out
jno
or
adc
dec
jl
or
mov
push
in
push
inc
outsb
push
adc
je
nop
outsb
and
lret
inc
scas
mov
xchg
and
xchg
sub
jp
pushf
jge
sub
pop
in
xchg
mov
mov
addr16
jnp
dec
dec
and
sbb
sbb
shlb
lods
xchg
xchg
negb
aad
pop
push
add
arpl
pop
nop
iret
js
add
xor
inc
sahf
mov
jo
sub
lahf
jbe
mov
fiaddl
sbb
in
xor
and
sahf
into
pop
loopne
sub
jmp
outsl
loop
mov
inc
sti
out
addr16
ret
pusha
jp
fstps
push
pop
pop
and
and
out
test
lock
push
in
into
xchg
mov
jno
cmp
xchg
mov
outsl
ss
lret
mov
rcrb
sti
shr
stos
ret
fisubl
je
jno
cld
arpl
jbe
pop
jl
jae
in
iret
push
clc
mov
out
scas
shr
andb
sub
add
fldcw
lret
adcb
cmp
outsb
je
xchg
inc
sub
push
insb
cmpsl
dec
pop
jae
outsl
inc
inc
out
outsl
dec
mov
cltd
xchg
pop
pushf
xchg
sub
pop
cmpsl
shrb
dec
call
loope
loopne
movups
cmp
repnz
ljmp
loopne
shrb
out
pop
push
jno
shr
sub
lret
shll
cmc
dec
dec
mov
psadbw
imul
jnp
and
rorb
jns
sbb
pop
push
add
mov
arpl
xchg
out
movsl
icebp
mov
pop
and
nop
push
shrb
jp
push
mov
jbe
ret
lret
push
jmp
divl
ffreep
jp
sub
inc
stc
scas
insb
xchg
aad
and
sbb
push
jo
pop
jae
fs
xchg
ret
dec
pop
sbb
xchg
jns
xchg
xor
adc
sub
xor
inc
sar
mov
push
sbb
xchg
jg
push
rorb
insl
repz
jnp
mov
ret
add
ja
les
push
clc
les
jge
jns
lret
cmp
cli
cmpsl
movsl
mov
mov
clc
xchg
das
push
js
pop
nop
pop
je
test
jae
fildll
addr16
fimuls
test
rcl
mov
jno
dec
push
mov
call
nop
or
jb
lret
ret
psrlq
insb
push
imul
les
das
daa
pop
ret
rcll
pop
xchg
int3
popa
lock
gs
outsb
jecxz
push
cs
mov
testl
cmpsl
mov
rolb
ss
stos
cmc
call
dec
out
mov
fwait
outsb
lods
std
xchg
sub
fwait
adc
inc
imul
test
mov
arpl
mov
nop
ret
fidivrl
divb
shlb
fnstenv
inc
fbstp
mov
and
cwtl
cmp
cmpsb
movsl
clc
std
ret
jp
dec
inc
shrb
scas
lods
leave
dec
jno
jb
or
data16
mov
lock
or
dec
pop
xorl
cwtl
out
mov
outsb
or
scas
mov
aam
into
ret
repnz
sahf
orb
insb
ja
or
push
out
ret
outsl
mov
cmp
sahf
push
add
test
fsubr
and
rorb
xchg
cs
dec
in
cmpsb
mov
jae
xchg
js
mov
imul
sbb
scas
dec
js
adc
cmp
xchg
lock
jb
addr16
jmp
mov
jmp
sub
mov
and
jo
cmpsb
data16
jbe
std
adc
scas
insb
jle
or
xor
inc
ret
fisubrl
xchg
jb
push
loop
icebp
fst
pop
cs
push
aas
shll
push
cmp
sub
sub
nop
dec
stos
loop
iret
iret
push
dec
pop
dec
lahf
jecxz
cmpsb
fs
inc
roll
cmp
adc
lret
in
sti
subb
out
mov
xchg
outsl
cmp
sub
stos
loopne
push
or
inc
sub
lahf
aam
lods
hlt
xchg
dec
js
xchg
pop
je
sbb
xor
mov
cmp
jbe
ja
in
loopne
xor
adc
cmpsl
ds
dec
xchg
dec
xchg
lods
and
cli
insb
arpl
sbb
dec
aad
outsl
adc
add
lahf
nop
cmp
rolb
scas
pop
nop
xchg
mov
arpl
enter
or
mov
pop
in
fmull
xchg
rolb
cwtl
mov
dec
outsb
test
jp
leave
repnz
pop
shrl
sub
arpl
push
repz
cli
lahf
out
push
pop
dec
inc
arpl
das
jae
ret
cli
dec
mov
les
out
ret
xor
mov
mov
iret
leave
imul
mov
cwtl
push
stos
test
out
mov
or
ret
aas
repz
jle
inc
jb
jae
mov
jae
add
ret
push
in
pusha
out
add
fstps
or
js
not
stos
adc
out
mov
lock
lret
inc
mov
add
xchg
popf
xor
jns
repnz
ret
gs
pop
mov
sbb
outsb
xor
dec
hlt
loopne
andb
loop
pushf
stos
pop
out
in
out
lcall
es
push
jb
jbe
pop
cmp
dec
imul
push
loopne
cmpsl
dec
call
pushl
push
sub
jg
data16
pop
dec
testl
outsl
out
insb
cs
ret
loop
ret
dec
in
bound
stc
notl
dec
jb
inc
jbe
add
and
insl
xchg
pop
lds
cmp
lds
scas
push
and
xchg
popf
push
rclb
lods
outsb
add
xchg
sub
mov
repnz
out
mov
cmp
push
mov
jbe
loop
repz
out
xchg
add
and
lret
push
add
outsl
scas
xchg
ja
out
ret
dec
les
jg
inc
fisubrs
lret
cmc
data16
mov
rorb
sub
insb
out
test
ja
jl
out
popf
mov
pop
dec
lods
dec
call
scas
add
in
xchg
jno
jbe,pn
sbb
pusha
mov
push
dec
mov
or
call
ror
mov
in
in
bound
xchg
clc
lods
sbb
dec
imul
cmc
jno
fisubrs
outsl
nop
addr16
xchg
push
push
outsl
out
out
add
loop
repz
adc
lea
lods
insb
add
in
cmpl
test
cmpsb
insb
pop
mov
scas
mov
pop
xchg
stos
inc
jl
test
addr16
pop
inc
lods
mov
add
insb
dec
dec
mov
scas
cmp
inc
sar
xchg
sub
xchg
cs
data16
insl
ja
sahf
insb
bound
pop
inc
cli
test
das
push
inc
test
ret
or
insl
rcr
insl
jmp
dec
enter
xor
test
fisttpll
aaa
data16
jbe
jbe
stc
dec
and
decl
imull
jnp
clc
addr16
jmp
push
push
js
jle
jbe
dec
jge
outsl
jne
dec
in
cmc
dec
jmp
ja
jp
icebp
jae
push
loopne
in
dec
inc
out
shr
pop
mov
sub
js
jle
in
jg
dec
nop
popa
mov
mov
bound
mov
std
test
fisttps
sub
sti
lret
mov
scas
rcl
cltd
pop
fisttpll
cli
data16
jg
push
fimuls
adc
pop
hlt
mov
and
xchg
jbe
jmp
xchg
rep
dec
les
and
pop
testl
dec
addr16
insl
imul
icebp
shlb
mov
jbe
in
inc
pop
stos
addr16
sub
jecxz
add
subl
and
icebp
jae
fs
das
dec
outsl
leave
or
ss
sbb
push
loope
clc
jne
jae
fs
and
jg
inc
add
outsb
jmp
aas
dec
jno
or
or
lods
pop
jmp
bound
push
inc
cs
sub
xor
dec
jmpw
cmp
imul
mov
ja
push
or
daa
out
outsl
lods
add
aaa
jg
mov
imul
int3
popf
ljmp
shrb
or
mov
xlat
loopne
ret
in
scas
inc
xchg
leave
cmp
add
jp
and
jle
sbb
incb
out
fbstp
inc
ljmp
dec
repz
sbb
es
xor
je
pop
push
jg
and
push
mov
cmpsb
imulb
filds
xchg
mov
cbtw
fmull
fldt
pop
mov
sub
loopne
pop
add
add
or
mov
bound
xchg
out
xchg
dec
or
pusha
enter
nop
jne
call
fnsave
jmp
mov
dec
jb
inc
shrl
int
insl
jne
inc
out
and
inc
js
adc
flds
hlt
mov
dec
addr16
push
sub
cmp
cwtl
push
mov
xor
jge
test
repnz
or
in
mov
insb
out
add
mov
sahf
hlt
in
in
adc
in
mov
adcb
jg
push
jmp
mov
call
mov
sub
aaa
add
and
mov
sbb
dec
jne
sbb
test
sti
imul
imul
xor
testl
jno
lock
dec
mov
jbe
dec
inc
mov
jg
data16
repz
push
sub
pusha
ss
stos
mov
imul
push
sub
pop
cmc
rorb
outsl
push
or
imul
sahf
int3
je
out
mov
xor
loop
push
jg
add
fwait
mov
icebp
fiaddl
aas
lock
adc
push
ret
sbb
pop
lea
inc
mov
lock
xchg
test
jb
cmc
icebp
aam
and
mov
insb
test
daa
and
pop
mov
add
repz
cwtl
das
jne
cld
in
mov
adc
in
popf
movsb
or
xchg
push
push
pmaxub
jne
cmpsl
enter
lret
lods
jnp
stc
sub
imul
jnp
lods
push
and
mov
inc
mov
dec
lods
lods
aas
clc
fs
mov
or
in
enter
add
leave
jge
or
adc
lret
je
sbb
mov
dec
pop
imulb
icebp
jmp
lds
push
shlb
negb
mov
pop
and
mov
aad
aaa
push
mov
inc
lods
insb
or
jmp
movsb
in
lock
fsubs
jbe
imulb
inc
rcrl
shll
push
stos
movsb
jmp
lea
and
xchg
data16
outsl
jle
push
lods
or
lock
bound
pop
add
mov
lods
cmp
repnz
test
inc
jo
ja
repz
sarb
mov
sbb
xchg
out
pop
call
imul
mov
inc
outsb
stc
test
cmp
xchg
cmpsl
call
test
popa
imul
sub
movsb
arpl
mov
rclb
ljmp
dec
mov
lret
cmpsl
notb
lea
cmp
std
outsb
dec
shll
cmp
mov
push
pop
fistpl
lods
paddsw
sbb
scas
imul
push
cmovbe
xchg
pop
stc
stc
push
dec
mov
clc
pop
jmp
ljmp
dec
mov
ja
lahf
ljmp
je
sub
loopne
sub
sbb
adc
imul
xchg
insl
bound
out
cmp
add
lock
stos
jecxz
sahf
push
out
mov
push
pop
cmp
shrl
aam
pop
fistpl
lea
jae
sub
pop
jecxz
in
les
jmp
imul
scas
jb
shl
in
andl
aas
fsubp
xchg
xchg
or
ljmp
push
pop
out
loop
lahf
push
push
scas
shrb
jb
cli
int3
fnsave
pop
push
pop
ljmp
lds
test
add
pop
push
push
das
out
test
jae
inc
mov
outsl
mov
stos
insb
mov
add
stos
lret
adc
ja
outsb
fnstcw
dec
sarb
sbb
xchg
mov
nop
data16
mov
out
and
das
call
scas
hlt
sub
aas
xor
fistpll
inc
xchg
ret
enter
ret
outsb
stos
mull
xor
xor
bnd
mov
cltd
and
vorpd
push
outsb
push
aad
ljmp
ss
xchg
cltd
xor
scas
xorb
xchg
imul
pop
cmpsb
jno
lret
in
clc
dec
bound
or
sub
add
sub
insb
dec
ja
fbld
jg
and
clc
mov
int
fs
lods
cltd
pop
movsl
mov
sahf
mov
or
int3
adc
dec
addr16
xor
dec
out
mov
lock
add
jb
mov
inc
nop
insb
jae
adc
inc
dec
shlb
ds
lods
mov
inc
or
fsubrs
xchg
clc
test
out
push
out
cmpsb
push
in
add
mov
out
loop
out
fidivl
scas
out
and
xchg
jb
es
mov
cmc
in
cmp
xchg
sub
loope
push
out
adc
mov
and
repz
adc
movsb
jae
cmp
nop
fcmovbe
cmpsl
inc
cmp
out
out
push
push
mov
jbe
sbb
cmp
mov
rcrl
sub
std
jbe
pop
push
or
shlb
cmp
sub
movsl
lock
in
inc
insl
loopne
out
daa
mov
jg
test
push
mov
popf
and
in
mov
inc
cli
fs
pop
jle
cmc
jmp
jno
ret
frstor
cmpsl
scas
and
addr16
xchg
call
sahf
mov
pop
fnstsw
jg
lret
or
jae
cmp
hlt
cmp
jae
pop
aad
mov
std
mov
ljmp
test
dec
pop
sub
hlt
cmpsl
fs
arpl
iret
jne
divb
cmpsl
cmpsb
mov
insl
popa
dec
subb
sbb
xchg
nop
mov
data16
into
addl
scas
sub
sub
xchg
insb
sahf
test
mov
push
dec
or
test
xchg
add
and
stos
xor
cmc
fdivs
add
hlt
lret
sub
push
popa
inc
xchg
dec
jg
and
xchg
in
aaa
mov
inc
adc
idivl
out
mov
inc
pop
xor
rcrl
jg
cs
mov
mov
dec
pop
inc
mov
testl
int
loop
arpl
decb
iret
adc
jae
cltd
dec
das
pushf
out
or
dec
popf
or
outsb
outsb
out
push
loopne
daa
cmp
outsl
out
call
adc
enter
out
mov
mov
mov
push
pop
data16
adc
adc
and
inc
lods
test
cltd
lea
out
add
cmc
stos
xchg
mov
scas
inc
cmpsb
aam
into
scas
out
xchg
pop
xchg
aas
test
pop
mov
stos
xchg
ror
fsubp
jno
std
xchg
sbb
sub
xchg
push
into
leave
insl
pop
and
mov
sub
pop
dec
jl
dec
jl
mov
push
push
add
std
mov
lret
jecxz
outsb
dec
outsb
addr16
push
ret
div
stos
dec
icebp
les
movsb
fucomi
cmp
inc
or
dec
or
popf
addr16
dec
imull
lret
jecxz
je
jg
dec
cli
push
inc
in
sbb
insb
insb
xchg
mov
jp
fstl
imulb
jge
cmp
xor
jae
mov
in
in
loope
aas
dec
mov
fwait
inc
loop
jno
aam
mov
in
jmp
loopne
lret
mov
testl
dec
xchg
dec
call
jecxz
mov
inc
jge
insl
lret
inc
outsl
push
imul
outsl
xor
test
call
les
gs
enter
dec
call
fiaddl
js
mov
mov
dec
iret
pop
push
cmpsl
and
imul
stos
roll
mov
stos
out
dec
je
daa
cmp
js
dec
sub
mov
dec
scas
or
mov
call
pop
add
sub
loopne
mov
pop
iret
jnp
adc
jmp
mov
mov
es
mov
fildll
mov
mov
sub
jns
mov
pop
iret
cld
es
dec
movsl
lods
fadds
jae
dec
adc
hlt
out
arpl
out
cmpsb
ret
cmp
sub
adc
push
mov
dec
iret
dec
xchg
mov
call
dec
pop
mov
push
aas
cli
call
shl
out
std
add
pop
jg
push
pop
lods
ret
pushf
mov
mov
push
sti
nop
add
dec
jno
shrb
mov
test
or
sub
pop
mov
in
mov
outsb
mov
xchg
jmp
dec
mov
inc
push
lods
dec
xor
xchg
jno
sarb
or
dec
imul
out
dec
jge
dec
fcompl
lods
sbb
notl
xor
fistpl
cmp
jecxz
inc
in
aas
addr16
pop
jl
sub
lods
or
call
dec
mov
and
lds
loop
shr
lea
es
test
cmpsb
dec
out
dec
fcmovne
sub
lds
mov
sub
dec
gs
dec
or
mov
in
pop
xchg
and
dec
in
insl
test
sub
test
push
pop
in
movsl
sub
int3
dec
dec
sub
jb
inc
arpl
jmp
call
test
jbe
sbb
arpl
addr16
insl
cld
int
in
outsl
enter
outsb
std
xor
out
jl
andb
or
jp
jge
pop
outsl
jle
out
jmp
push
fs
inc
jge
outsl
dec
repnz
data16
rcrl
mull
mov
testl
jg
mov
out
incb
add
jne
lret
jns
imul
dec
imul
jecxz
outsb
gs
outsb
out
insl
clc
mov
mov
outsl
mov
pop
jbe
insl
jg
jp
scas
repz
push
outsl
add
out
cmc
mov
loop
fdivrp
push
js
mov
mov
gs
psubsb
movsb
lock
mov
je
outsb
call
scas
mull
in
dec
in
push
popa
and
dec
call
push
scas
sti
ja
push
mov
es
ds
rorb
dec
push
stos
pusha
push
and
jge
jae
imul
clc
call
outsl
idivl
insb
jmp
pop
lcall
pop
sti
out
cmovle
dec
xlat
je
test
fists
push
movsb
dec
addr16
mov
mov
inc
into
jno
push
popa
or
dec
insl
pushf
push
outsl
into
pop
lods
movsl
and
jge
daa
popa
xlat
dec
fidivrl
iret
xchg
jae
or
fnstcw
or
fcompl
stc
mov
jno
push
dec
mov
sub
xchg
inc
jae
xor
pop
mov
pop
mov
loop
sbb
pop
jge
aaa
dec
addr16
push
loope
sbb
sbb
pop
imul
mov
lds
lods
jno
mov
xchg
sub
testl
jae
imul
out
mov
movsl
int3
sub
mov
push
mov
fildl
push
dec
xchg
insb
and
movsb
out
pop
sub
adcl
insb
out
aas
jns
sbb
adc
insb
dec
iret
insl
mov
shrl
fldenv
loope
ja
jnp
adc
pop
sbb
insl
es
push
jae
outsb
es
lods
divl
jp
in
lds
push
in
loop
int3
shrl
cmp
icebp
sub
test
mov
pop
scas
jb
addr16
dec
icebp
popa
ljmp
jecxz
push
fnsave
pop
lcall
jge
jl
out
fisubs
out
loopne
shrb
clc
sbb
or
push
loope
shlb
ret
fs
jbe
outsb
call
orl
pop
cli
mov
insl
in
fsubr
dec
lods
cwtl
inc
jo
gs
int
push
dec
adc
dec
xor
sbb
dec
mov
insl
cmpsl
rorb
sahf
insl
mov
pop
mulb
dec
sbb
in
outsl
gs
xlat
mov
out
xor
ret
jno
push
dec
scas
out
in
push
ljmp
ror
mov
dec
out
jae
in
in
and
or
add
imul
call
popf
movsb
xchg
and
mov
push
leavew
xchg
outsl
dec
arpl
xchg
lea
cwtl
loop
sub
jno
fsts
lods
mov
inc
addb
lea
lret
js
mov
pop
leave
mov
push
lea
mov
stos
stc
das
pop
outsl
xchg
jo
into
mov
jae
adc
sub
ret
shl
sbb
lcall
inc
cwtl
ljmp
cmp
popl
leave
xor
jnp
fistps
jno
cmpl
mov
push
push
into
out
fucomip
iret
jae
push
xchg
into
das
jmp
push
mov
add
or
inc
push
in
cmp
aam
stos
xchg
fcmovne
push
std
pop
test
dec
lods
mov
aad
jmp
jge
lock
pop
pop
mov
sub
je
sub
insb
loopne
cs
push
sub
lods
bnd
push
in
inc
outsb
shll
mov
mov
mov
cmpsb
int
inc
pop
das
add
cmovl
jmp
or
mov
out
dec
fiadds
dec
dec
in
mov
call
jbe
or
insb
cs
je
xorb
push
out
jae
out
icebp
or
call
gs
mov
out
mov
andb
cld
sub
add
inc
xor
imul
inc
dec
ljmp
jb
push
loop
pusha
push
stos
enter
imul
into
imul
add
into
mov
outsl
fbld
mov
ja
inc
add
jmp
dec
arpl
jbe
mov
insb
adc
inc
shl
enter
fnstsw
sar
lahf
add
jae
nop
push
mov
repnz
mov
pop
cmp
lea
in
mov
in
daa
dec
sub
jge
dec
cwtl
push
lret
subb
jg
stos
hlt
sbb
js
xchg
orl
lret
imul
out
jno
js
leave
scas
push
push
lock
jno
xor
jae
dec
imul
mov
daa
jge
lock
xchg
xchg
jg
jl
out
sbb
pop
ja
fst
out
sti
faddp
cld
jg
lods
mov
pop
mov
inc
cmp
jae
dec
leave
mulb
sarb
dec
jl
aas
and
in
cmc
mov
mov
bound
xchg
jae
sbb
in
pop
pop
pop
inc
mov
dec
pop
dec
sub
sub
jge
ja
pop
pop
pop
repnz
jns
in
movsl
jle
jg
inc
xchg
or
repz
in
loopne
mov
pop
test
dec
rorb
and
scas
cmp
or
mov
lock
jmp
xchg
sbb
push
or
mov
jno
aad
fidivrl
out
cmp
pop
mov
xor
bound
in
pop
int
shlb
push
sbb
sbb
mov
jae
cmp
cmp
mov
fs
data16
xchg
mov
jae
fcmovne
sub
mov
jg
insl
fnstsw
mov
mov
mov
pop
or
insl
je
sahf
mov
xor
adc
insl
out
into
adc
dec
mov
enter
adc
dec
inc
nop
sub
xchg
cmp
mov
jp
orb
lea
jne
jp
shrl
pop
insl
in
out
mov
jle
in
jnp
sub
and
mov
or
daa
push
in
out
clc
push
pusha
xchg
sub
das
leave
pop
stc
ds
mov
pop
std
cwtl
add
cld
or
mov
adcl
push
or
mov
movl
js
push
mov
xorb
push
mov
bound
adc
outsb
mov
enter
sbb
sbb
mov
or
int3
movsl
adc
push
sbb
arpl
js
dec
mov
mov
inc
loopne
insl
mov
outsl
sub
out
scas
push
fwait
test
mov
cmpsb
mov
ds
mov
jmp
std
movsl
xchg
inc
arpl
popl
inc
aam
sahf
cli
fistpll
mov
nop
pop
les
movsl
outsb
sub
dec
jae
shll
lret
cli
imul
dec
jno
in
outsl
adc
repz
icebp
or
jns
lahf
jge
insb
mov
repnz
jbe
sub
dec
dec
jae
add
iret
jg
ret
dec
aas
adc
add
xchg
cmp
jecxz
cs
out
fwait
scas
aad
clc
enter
loop
aas
sbb
ds
in
pushf
imul
lahf
int3
mov
dec
xchg
pop
icebp
ret
inc
inc
cmpsb
inc
cmp
addr16
in
dec
js
das
mov
out
aas
loop
push
in
hlt
mov
xchg
lret
pushaw
inc
push
sahf
ret
sbb
adc
jae
inc
out
loop
fimuls
jno
cwtl
gs
out
or
cmovne
idivb
or
divl
cmc
pop
lret
test
push
jp
mov
jae
aam
lds
call
dec
out
rorb
or
nop
outsl
lahf
lcall
out
sbb
hlt
push
into
pop
push
jp
in
xor
out
lods
in
int3
and
nop
imul
xchg
int3
xor
pop
icebp
xchg
inc
lods
pop
outsb
or
mov
add
scas
imul
mov
jp
or
mov
fsubrl
repz
js
jbe
ss
fsubrl
inc
repnz
and
sbb
sbb
leave
int3
mov
movsl
mov
and
das
xor
test
sbb
mov
daa
flds
out
je
mov
and
add
in
adc
fisubrl
xor
push
add
dec
sub
dec
ffreep
jb
or
sub
mov
adc
outsb
int3
dec
pusha
jb
adc
outsl
inc
cmpsl
scas
lcall
push
fldenv
add
jle
jb
or
or
notl
or
shr
incl
loop
clc
scas
adcb
mov
pop
and
scas
push
and
aas
cs
add
dec
inc
dec
shr
in
pop
lcall
cltd
shrl
mov
or
adc
loopne
test
test
stc
std
lret
idivb
pop
aam
dec
mov
inc
adc
in
fbstp
outsb
mov
iret
jp
or
hlt
data16
lock
jecxz
lret
push
push
fdivl
shlb
repz
jno
pop
repz
xchg
inc
icebp
in
iret
rcll
adc
jns
loope
fsubrs
push
incl
clc
push
or
repnz
dec
sbb
in
loopne
out
or
decl
add
in
dec
nop
mov
lahf
mov
lock
sbb
mov
int3
cmc
jbe
and
mov
push
mov
ret
das
pusha
insb
repnz
push
inc
addb
push
lret
test
pop
pop
xor
xor
jae
imul
imul
daa
fldenv
cmp
cmpsl
pop
out
nop
mov
xchg
in
imul
xor
push
jmp
mov
jle
out
inc
or
stos
jecxz
dec
cmc
insb
imul
iret
adc
out
mov
mov
push
rcr
iret
inc
in
jae
inc
rcrb
fcoms
in
sub
fisttps
aad
or
in
xchg
out
jnp
rorl
and
jmp
lock
push
in
iret
sub
add
mov
outsb
jno
jle
dec
add
decb
popf
lcall
icebp
add
mov
jmp
jle
shrl
xor
jae
sbbl
jge
stc
mov
pusha
rcll
mov
fcmovu
gs
fcompl
and
push
enter
es
pop
push
dec
mov
aaa
mov
and
dec
testl
mov
icebp
pop
push
inc
mov
cmp
sub
adc
cmc
mov
ret
mov
and
sub
pop
fsubl
mov
cltd
in
jbe
jg
in
sbb
xchg
out
inc
jle
arpl
xchg
jbe
sub
pop
shlb
ficomps
mov
mov
adc
jp
or
push
xchg
push
loop
xchg
fcomps
inc
sub
xchg
adc
aam
mov
mov
and
sub
ffreep
or
sub
push
add
out
mov
mov
js
test
cmpsl
je
nop
fbstp
stos
jg
lods
test
cmp
jne
outsb
dec
cmp
ja
filds
movsb
arpl
fwait
call
dec
mov
loopne
out
shll
push
jp
push
les
iret
inc
leave
movsl
push
scas
repz
scas
cmp
leave
lds
fistps
roll
and
xor
or
icebp
aaa
insl
adc
fs
jp
or
inc
imul
inc
arpl
dec
rcrl
lods
push
icebp
lods
aam
jne
orb
and
sub
add
mov
sbb
dec
hlt
out
mov
es
popf
int
pop
cmp
or
mov
jb
pop
dec
fstpt
jae
fcompl
insl
in
imul
ficoms
push
out
or
repnz
outsl
dec
mov
mov
out
scas
xor
or
push
inc
mov
push
ljmp
mov
xchg
rcl
xchg
jl
hlt
xchg
lret
dec
push
test
sub
or
faddl
cmp
fldenv
or
dec
inc
out
pop
divl
int
pop
jbe
fsubrl
mov
outsl
adc
mov
pop
xchg
ja
aam
imulb
into
xchg
and
in
jns
inc
push
and
sub
or
pushf
outsl
outsl
mov
sbb
pop
xchg
cmp
xchg
xchg
push
jae
dec
sub
sub
pop
jnp
imulb
scas
mov
outsb
aaa
dec
push
cmpb
jg
sbb
subb
cld
outsl
shr
dec
inc
push
mov
and
rcll
dec
pop
ret
imul
add
aad
fistl
cmp
jmp
add
xlat
xor
movl
mov
ret
xchg
mov
mov
test
shlb
dec
lretw
sub
icebp
push
pop
dec
adc
and
repz
ret
jns
lahf
int3
loopne
pop
mov
cmp
and
or
xor
mov
cmpsb
das
and
data16
jbe
dec
cwtl
jmp
jbe
sub
test
outsl
sub
xlat
testl
bound
insb
jno
std
jne
movsl
stos
loope
push
roll
pop
xorl
mov
pop
adc
jne
shll
push
je
jno
iretw
push
imul
loope
fisubrs
cld
mov
add
popa
xor
sbb
xchg
stos
outsb
mov
ret
pop
fldt
fwait
inc
jecxz
mov
unpckhps
scas
push
mov
data16
pop
cmp
cld
clc
mov
jecxz
push
out
mov
xchg
dec
mov
loop
mov
inc
jo
and
xor
xchg
sub
mov
dec
cld
std
dec
sbb
out
shl
add
xorb
pop
pushf
sbb
das
loopne
ljmp
xchg
cld
outsl
call
sahf
and
gs
pop
outsb
sbb
push
andl
imulb
call
orb
jno
dec
jae
sub
stos
inc
mov
and
and
xor
pop
loop
mov
adc
mov
rorb
addr16
stc
dec
into
xchg
insl
lods
mov
lock
mov
sub
gs
cltd
mulb
popf
test
xchg
into
add
cltd
outsb
ds
pop
xor
enter
cwtl
insb
mov
push
cmp
mov
imul
pop
imul
add
cmp
flds
loopne
lea
mov
lock
inc
fistps
mov
icebp
out
push
xlat
scas
rolb
in
xchg
adc
xchg
add
xor
es
jp
or
add
les
lock
xchg
sub
insl
dec
push
sub
lods
or
or
nop
xchg
outsb
test
arpl
mov
push
sti
int3
push
and
outsl
mov
add
cltd
push
or
imul
stc
mov
into
or
cli
aaa
out
scas
jae
imul
out
out
push
push
lds
insl
add
mov
inc
test
aaa
and
outsl
jp
sbb
dec
or
mov
or
arpl
dec
fsubs
jecxz
xchg
adc
movsl
dec
lods
dec
dec
arpl
sub
xchg
fdivrs
mov
fidivrs
pop
jb
jle
inc
xchg
adc
add
je
cmp
jae
pop
xlat
adc
outsl
jne
in
xchg
addr16
dec
cmp
sbb
xchg
pop
test
ret
lea
arpl
inc
popa
inc
mov
or
or
or
lods
mov
ret
fisubs
gs
jb
movsl
aas
stos
les
push
cmp
jb
loop
imul
push
push
or
icebp
sbb
or
out
clc
adc
mov
or
pop
leave
mov
push
call
and
mov
lods
popl
dec
lret
scas
gs
int
adc
shr
call
loop
mov
ret
add
imul
jp
pop
fisttpll
icebp
fcoms
outsl
mov
adc
in
mov
sub
mov
sbb
push
out
daa
fs
and
sbb
add
stc
jge
movsb
lods
push
inc
outsb
ret
mov
inc
out
inc
std
push
lret
daa
dec
sbb
bound
push
rcrb
imul
add
jns
mov
arpl
in
dec
cmp
out
data16
test
jg
mov
loopne
data16
or
pop
jae
mov
inc
cmp
push
mov
fcmovnu
insl
test
test
jl
das
push
add
push
arpl
mov
out
jae
fdivrs
push
cmpsl
data16
test
or
mov
mov
fcomi
cmp
mov
subl
add
jae
xor
push
adc
jno
jg
test
add
xchg
cmp
test
cmp
add
mov
xor
and
jns
lea
mov
outsb
stos
fisttps
adc
out
lahf
ret
and
hlt
xor
les
push
dec
mov
cld
mov
lea
cmpsl
pusha
sbb
pop
and
or
cs
les
push
sbb
mov
add
xchg
arpl
pop
pop
daa
lea
call
clc
mov
mov
outsl
mov
test
push
cltd
add
jg,pn
jne
outsb
fstl
aad
jge
jge
ja
cmp
ret
hlt
out
repz
xchg
insl
insb
mov
insb
or
push
mov
sbb
mov
jmp
out
pushf
loop
adc
fnsave
xlat
fimull
add
add
and
pop
mov
sbb
loopne
outsb
jg
mov
mov
aas
mov
sti
out
out
loopne
mov
outsl
adc
jae
pop
fldt
call
movsl
ret
arpl
test
out
push
les
pop
icebp
ret
in
test
hlt
cli
arpl
xchg
shr
data16
jnp
cmp
dec
lods
mov
mov
inc
out
inc
inc
or
sarb
add
and
test
movsb
push
xchg
adc
cld
sbb
mov
lret
jg
cmp
repnz
pop
insb
xchg
xchg
in
out
xor
insb
andb
pushf
int
cmp
sub
add
insl
mov
call
push
and
popf
xchg
imul
and
lock
jae
roll
dec
daa
lock
inc
orb
ret
fstl
sub
enter
jbe
fbstp
cld
inc
and
mov
sub
stc
scas
das
adc
test
in
jmp
pop
jle
out
mov
mov
sub
push
push
fucomip
jle
jae
addr16
icebp
xchg
imul
xchg
mov
xchg
outsl
push
pop
pushf
loope
in
mov
mov
cmpsl
xchg
lret
adc
add
jnp
sub
xchg
push
mov
cmpsl
jae
cwtl
xor
push
adc
icebp
mov
es
and
jno
nop
or
out
mov
js
jae
or
lock
mov
outsl
push
out
out
ror
aaa
sub
int3
in
xor
test
dec
outsb
cwtl
sahf
test
gs
or
xchg
cli
out
xchg
mov
jb
mov
mov
pop
fisttps
add
push
sub
xor
xchg
in
dec
pop
cmp
push
lock
in
inc
dec
sub
scas
in
out
jno
lods
and
pop
mov
imul
outsb
aas
xor
pop
sub
mov
outsb
cmpsb
push
rorb
aaa
jno
lock
repnz
jae
sahf
shll
cmpsb
imul
imul
jns
stos
mov
outsb
popf
dec
mov
shl
out
or
jl
imul
iret
push
xor
addr16
push
pop
loop
lods
jno
jnp
add
jmp
add
stc
adc
push
xchg
insb
ss
test
cmp
push
add
mov
out
xchg
shlb
pusha
dec
insl
icebp
push
jno
outsl
in
dec
shl
mov
mov
sbb
out
nop
lock
stos
dec
mov
addr16
pop
imul
icebp
jae
jno
shlb
push
push
xchg
adc
in
lret
sub
jl
or
mov
arpl
pop
lcall
lea
ljmp
pop
lcall
je
setae
pop
push
jne
jecxz
push
add
sub
insb
or
cmpsb
mov
sub
lods
addr16
dec
imul
enter
push
enter
call
test
rorb
sub
dec
mov
mov
pop
in
push
arpl
repnz
add
mov
subb
cs
dec
inc
push
dec
loop
lock
inc
push
mov
sbb
inc
inc
add
pop
insb
cmpb
fdivrl
pop
mov
jbe
scas
popa
cmpsb
icebp
push
out
in
enter
cwtl
pop
pop
adc
lret
flds
pop
stc
into
scas
dec
xchg
inc
rorl
sub
dec
dec
push
fisttps
sub
in
inc
xchg
pop
dec
cmpsl
ds
jns
xchg
lods
cmp
movsb
idivl
test
clc
cmpsb
arpl
divb
loopne
xor
ret
inc
push
into
jbe
cmp
repz
mov
xchg
addr16
xchg
movsb
lods
mov
sub
lods
push
mov
test
enter
dec
pop
test
outsl
mov
push
cmpl
in
out
fnstenv
rcl
mov
xchg
gs
add
mov
lods
mov
out
outsb
daa
sti
jmp
push
sbbb
into
xchg
call
jnp
lods
daa
stos
push
and
aaa
stos
bound
dec
sub
dec
add
mov
jo
dec
iret
out
inc
mov
repz
sbb
inc
hlt
icebp
insl
sbb
mov
jecxz
and
int3
out
out
popf
xchg
andl
imul
outsl
test
add
mov
iret
sub
iret
cmc
in
dec
loop
movsb
scas
outsl
sub
ret
add
jmp
scas
dec
rcrl
sub
shll
mov
popa
xchg
xor
push
pushl
addb
dec
adc
testl
sbb
dec
push
pop
pusha
fcomps
push
dec
push
scas
xchg
mov
xor
cs
out
mov
xor
cli
int
fdivl
outsb
fxch
jno
out
out
xchg
sbb
inc
dec
outsl
enter
cld
outsb
cs
sbb
sti
hlt
ja
fstps
push
xchg
pop
dec
aam
push
fiaddl
scas
out
jle
push
fisubrs
dec
jbe
and
stos
cmp
in
loope
xorl
out
xor
jg
or
mov
call
outsl
xor
jns
push
loop
push
in
out
imul
jae
dec
hlt
out
ret
dec
or
lahf
call
outsl
cld
lods
jl
cmp
insl
shll
mov
xlat
bound
nop
ja
mov
dec
ret
and
pop
pop
dec
push
insb
nop
pop
je
jg
and
sub
rclb
sbb
data16
and
div
movsl
sbb
or
lods
push
addr16
inc
addr16
push
jae
lret
xor
inc
add
mov
imul
mov
add
jnp
movsl
jp
sti
test
clc
repz
or
inc
in
inc
fs
mov
rcrl
jle
insb
dec
loope
xchg
xchg
js
add
mov
in
cmpsl
in
cmp
sub
testl
loop
mov
adc
testb
cmp
xor
sub
xchg
orb
mov
js
push
cmp
fucomip
mov
orb
and
mov
push
and
or
lret
sbb
dec
gs
movsl
cmc
xchg
inc
es
ffreep
icebp
mov
fucom
inc
imul
mov
int3
pop
pop
and
outsl
sbb
mov
or
mov
jb
dec
jae
and
xchg
xchg
jmp
jle
pop
daa
xchg
in
ljmp
mov
out
dec
imul
outsl
icebp
cmp
cwtl
scas
push
rcll
mov
inc
cmp
in
xor
mov
repnz
imul
lods
dec
xchg
adc
adc
inc
mov
movsl
push
xchg
push
push
arpl
xchg
lcall
adc
call
pop
dec
jae
pop
call
jae
lea
pop
inc
add
mov
inc
adc
jmp
addr16
and
adc
je
and
stos
ret
ret
lea
jmp
call
jmp
in
pop
lock
daa
ret
sub
imul
jmp
push
sar
jle
inc
ja
in
adc
incl
aaa
int
sbb
lods
scas
in
fmull
fdivl
dec
rorl
cmpsl
jecxz
jl
stos
sbb
lret
cmp
std
xrelease
mov
adc
stos
hlt
test
std
mov
outsl
repnz
jno
imul
mov
dec
call
push
movsl
aaa
cmp
icebp
or
fbstp
imul
xchg
push
aas
rcll
aas
into
ret
lcall
push
xchg
inc
insl
js
mov
call
push
fisubrl
xlat
dec
sub
nop
cmc
jae
mov
call
xchg
call
addr16
imul
arpl
lock
insb
inc
mov
jg
data16
out
inc
xor
or
mov
push
fldenv
adc
dec
out
xor
push
mov
outsb
fisubrl
cmpsl
ljmp
cmp
ljmp
in
addr16
out
push
js
push
popl
les
add
pusha
push
pop
stos
mov
xor
cmpsl
xchg
jo
test
jbe
test
fidivrl
pop
ljmp
outsl
dec
push
shlb
or
mov
imul
sub
sub
jbe
push
sub
and
lods
mov
sti
enter
fsubr
jbe
pop
out
popa
mov
add
xchg
out
incl
mov
lock
sub
mov
test
outsb
lret
fsub
icebp
outsl
dec
inc
data16
add
inc
shl
es
loopne
in
lods
psubd
sbb
xor
inc
popa
in
sub
arpl
in
addr16
mov
pop
dec
clc
in
sub
arpl
xchg
movsb
jecxz
outsl
add
test
mov
add
scas
ja
in
leave
repz
loop
gs
out
pop
mov
andb
in
out
sbbl
orb
add
jb
shlb
inc
sbb
cmpsb
out
jmp
dec
shlb
push
jae
sbbb
iret
push
out
subps
mov
in
imul
addb
imul
sub
shll
enter
and
inc
add
jmp
insl
or
into
pop
fistpl
jbe
aas
sub
jns
mov
bound
inc
testb
mov
fsub
sub
sub
nop
mov
clc
lock
gs
daa
add
cmp
push
scas
ja
add
out
jmp
and
push
jecxz
xchg
cmp
outsb
scas
jle
addr16
cmp
aas
loopne
in
sub
addr16
lea
mov
jle
cmp
int
out
test
mov
clc
xchg
mov
cmpsl
loop
cmc
data16
sbb
add
sbb
mov
test
arpl
loop
cmp
insl
loope
pop
out
lcall
fadds
and
jae
out
lds
hlt
push
daa
loop
lret
mov
xchg
lock
loope
scas
jle
insl
fwait
push
add
jno
lret
call
and
call
outsl
push
xor
movsb
push
add
in
ljmp
jnp
repnz
inc
rorb
mov
dec
mov
xor
mov
jo
call
ret
adcb
insb
xchg
jle
imul
dec
mov
in
cmp
cmpsl
data16
or
inc
pop
outsb
jns
das
insb
loope
inc
fistpl
sub
out
data16
gs
lods
pop
push
dec
ja
mov
in
dec
pushf
je
out
out
call
outsl
insb
leave
mov
sbb
scas
daa
jg
push
mov
pop
sub
stc
loope
mov
sbb
incl
out
loopne
in
and
add
int3
push
into
pop
dec
mov
mov
dec
bound
dec
mov
in
add
lods
lods
ja
or
or
inc
loop
push
outsb
lahf
cld
loope
jle
pop
dec
jl
rolb
int3
std
or
insl
mov
dec
out
lods
push
lods
dec
sahf
xchg
lods
cmp
cmp
fsubl
mov
jno
dec
xchg
sahf
push
pop
ficoms
enter
clc
cmp
lods
push
sbb
addr16
jb
mov
inc
or
imul
testb
leave
xchg
jecxz
pop
dec
jg
hlt
dec
fldenv
pusha
ret
xchg
mov
out
jmp
call
or
in
mov
out
mov
sub
mov
push
sbb
cli
das
pop
cs
jmp
int3
int3
jle
div
fxch
mov
outsb
arpl
and
sahf
popa
movntps
xchg
xor
bound
andl
das
popa
loop
fisttpl
and
sbb
xchg
dec
dec
idivb
jecxz
adc
stos
enter
bound
or
pop
aas
jle
addr16
mov
rcrb
jge
inc
and
xchg
pop
popa
dec
fs
lret
dec
xchg
iret
mov
mov
jmp
sub
jmp
push
jp
or
or
push
jns
fsub
sub
push
or
push
dec
pop
mov
lret
xchg
dec
jle
inc
ret
pop
fnsave
push
mov
daa
sti
inc
enter
test
std
div
inc
jne
cld
loope
add
das
je
dec
fucomi
std
lret
ss
stos
jg
jae
pop
xchg
sub
out
inc
aas
xor
enter
bound
push
iret
arpl
jle
mov
xor
mov
xchg
arpl
mov
into
cld
dec
xor
adc
lods
adc
sub
or
call
inc
cmp
pop
hlt
les
sbb
xor
cmp
sub
sub
jl
adc
inc
push
loope
mov
fs
jae
test
rcrl
cmp
fsts
sahf
int3
shll
xorb
dec
movsb
and
or
iret
loopne
enter
inc
cld
cmpsl
and
sbb
jmp
cmp
and
flds
outsl
xchg
enter
pop
mov
fildll
and
mov
daa
imul
add
mov
mov
push
pop
pop
push
call
jmp
out
push
int
bound
roll
push
fildll
xchg
inc
mov
imul
xchg
dec
dec
jg
lret
stos
inc
push
mov
movsb
inc
sbb
and
xchg
add
lock
rolb
in
addr16
mov
lods
or
scas
scas
in
out
dec
pusha
jmp
ret
je
cwtl
ffree
fwait
outsb
mov
push
jb
sub
int3
loop
js
mov
inc
jle
and
xor
clc
xor
sbb
jmp
gs
inc
sbb
add
popa
push
sub
mov
or
imul
xchg
push
sbb
add
jl
loope
lahf
lahf
inc
and
nop
xchg
into
out
dec
out
cmp
and
std
cmpl
test
xor
jl
and
leave
jae
ja
ret
cmpsb
mov
dec
sub
data16
cwtl
loop
arpl
jle
lods
jno
mov
lahf
inc
mov
decb
iret
adc
jae
leave
out
enter
out
movsl
mov
aad
add
xchg
popf
nop
out
inc
and
test
jb
lahf
push
xor
pop
dec
in
rclb
stc
sti
jl
arpl
outsb
mov
cltd
mov
dec
xlat
lea
sub
outsb
dec
arpl
cmpsl
into
or
dec
fs
pop
mov
shl
ret
inc
movsb
and
insl
inc
sbbb
jo
xor
data16
xchg
loop
mov
or
jl
jle
jle
mov
xchg
aas
outsb
test
mov
insb
std
dec
arpl
dec
gs
mov
jmp
shrl
pop
pop
clc
insl
ret
mov
jns
xchg
out
inc
jl
lahf
push
add
dec
in
bound
pusha
jge
dec
push
mull
pusha
in
clc
jecxz
cld
sub
pusha
jae
pushf
int
pop
sbb
mov
rorb
dec
lock
imul
and
jl
mov
jge
and
mov
hlt
std
and
in
out
je
fwait
cli
dec
das
jp
fiaddl
scas
mov
jmp
inc
cmc
or
pushf
subl
jne
xor
dec
dec
mov
out
or
xchg
loopne
scas
lea
sub
subl
std
mov
dec
gs
clc
movsb
in
arpl
jmp
bound
clc
andb
daa
jle
decb
sbb
dec
jl
cld
clc
jnp
sti
dec
jp
cli
jmp
jns
stc
jmp
ja
idiv
jbe
testb
cmc
jmp
je
hlt
dec
jae
repz
jb
repnz
jno
icebp
pushl
daa
lock
outsl
cmp
les
jo
push
bound
lock
xchg
in
stos
pop
pop
push
dec
enter
mov
nop
das
arpl
jae
cmp
outsb
aas
jg
sbb
dec
in
cltd
movsb
arpl
jge
pop
ja
scas
out
mov
inc
outsl
bound
jle
jg
push
inc
int
in
push
lcall
or
sub
in
ja
jbe
or
bound
outsb
insb
pusha
jecxz
popa
outsb
push
mov
mov
loop
jnp
aaa
out
push
js
xor
or
mov
icebp
in
subb
add
pop
repnz
or
dec
in
mov
lock
insl
jle
pop
jmp
outsb
jg
push
aaa
mov
mov
dec
in
sbb
add
std
inc
outsb
or
loope
mov
scas
lock
lods
jle
pop
subl
outsl
adc
insb
outsb
sti
jg
push
inc
out
pcmpeqw
js
in
cwtl
sub
outsb
jg
in
dec
jns
pop
outsl
stc
shrl
mov
mov
out
subl
push
in
shrb
test
mov
and
outsl
imul
addr16
mov
scas
jbe
gs
mov
testb
inc
hlt
scas
dec
jne
loope
popf
jae
outsb
cmc
jg
push
ds
dec
mov
mov
bound
pusha
hlt
outsl
jnp
outsb
push
push
and
pop
jns
pop
mov
outsb
repz
push
bound
insb
mov
mov
rcrb
repnz
outsl
daa
jecxz
ss
lea
jg
xchg
shll
icebp
call
lods
mov
bound
pusha
lock
bound
outsb
adc
insb
lods
outsl
int3
aaa
ror
ficoms
and
sub
and
ds
test
outsb
jnp
fistpll
push
ret
arpl
ret
mov
inc
or
out
int3
and
out
mov
add
adc
add
test
test
addl
add
and
dec
out
stos
inc
incb
adc
ret
mov
mov
push
jbe
inc
xchg
jb
push
xchg
push
lret
arpl
pop
insl
mov
in
ficompl
jl
call
cmp
pop
cli
sbb
ret
mov
sub
dec
xor
scas
and
in
out
loopne
insb
sub
inc
jle
push
inc
dec
mov
test
mov
loopne
lret
divl
pop
js
add
out
adc
pop
ret
xor
or
mov
pop
outsb
stos
add
outsb
mov
mov
in
out
inc
arpl
pop
mov
daa
popf
inc
xchg
bound
arpl
popf
jnp
xchg
xchg
cmpsb
sub
mov
arpl
adc
adc
outsb
dec
xchg
outsb
cmpsb
or
hlt
out
jge
dec
mov
xor
mov
mov
js
xor
sahf
fldcw
inc
inc
and
insl
cmp
jae
xlat
mov
push
jns
xchg
push
inc
clc
int3
decb
or
lds
or
xchg
icebp
lea
and
imul
adc
lods
mov
dec
out
and
mov
lea
insl
jmp
xchg
ds
imul
jns
mov
lret
rorb
fs
movsb
xor
repz
adc
adc
sti
inc
mov
ss
imul
lret
addr16
push
and
adc
gs
jnp
pushfw
shlb
adc
bound
mov
daa
adc
loope
arpl
and
lahf
fisttpl
mov
imul
push
dec
xor
call
insb
outsb
imul
test
push
mov
or
or
inc
inc
bound
lock
xchg
imul
in
int3
add
mov
jmp
jge
push
shll
xchg
mov
outsb
cmp
leave
inc
cld
jle
fidivrl
mov
mov
xchg
and
daa
xor
jle
mov
icebp
mov
dec
leave
jecxz
shr
lret
dec
mov
inc
outsb
ret
add
pop
inc
insl
push
fwait
je
dec
jge
pusha
dec
cwtl
aad
pushf
push
sub
repnz
mov
or
push
out
shlb
sub
shll
and
adc
scas
test
dec
push
push
or
xor
imul
mov
orb
push
lahf
pop
fabs
mov
jae
out
jmp
sub
call
loop
mov
jno
or
cmp
sbb
mov
out
dec
and
negb
and
push
xor
xchg
ret
int3
gs
das
fisttpl
lret
addr16
pmaxub
out
add
pop
mov
pop
inc
add
dec
dec
nop
outsl
mov
push
cli
testl
in
xchg
mov
and
aas
xor
imul
movsl
jl
out
inc
pop
cmp
test
repnz
jl
in
addr16
mov
iret
out
pop
xor
sbb
insb
xor
scas
enter
mov
mov
or
and
sub
pop
mov
and
mov
dec
out
xchg
outsl
hlt
jg
insl
add
dec
jmp
aad
testl
in
push
jmp
outsl
je
lock
jbe
add
xor
andl
pusha
xor
into
test
scas
cmc
cmp
imul
sub
or
push
jae
cmc
sub
cwtl
pop
pop
loop
fwait
mov
jne
dec
pop
sbb
cmp
pusha
orb
mov
jbe
int3
lods
rcr
std
int3
xor
fistl
stos
push
ror
and
mov
xchg
ret
data16
lods
jp
insb
push
sti
jecxz
push
call
jecxz
outsl
std
dec
mov
sub
inc
out
sub
lea
inc
xor
dec
sub
jne
lret
mov
xor
dec
jl
mov
enter
dec
das
enter
mov
inc
sbb
xor
repnz
inc
test
cwtl
jle
in
mov
mov
pop
test
mov
jp
mov
nop
pusha
sti
xor
mov
cmp
dec
and
mov
push
pop
inc
nop
mov
mov
orl
sarb
cmovo
xchg
lods
push
push
roll
arpl
jg
inc
lea
sbb
gs
outsb
fistpll
and
dec
or
lock
out
xchg
clc
dec
out
nop
movsl
scas
add
fwait
addb
mov
add
jmp
push
pop
or
or
je
xchg
in
lods
dec
ds
outsb
loope
daa
add
mov
movsl
mov
inc
jmp
insb
enter
inc
ret
loopne
test
loop
add
repz
jl
cmc
daa
xchg
xchg
int3
jecxz
addr16
out
std
sub
fldl
mov
divb
outsl
dec
fistpl
loop
pop
inc
lcall
jbe
decb
mov
push
lock
outsl
icebp
sbb
test
push
or
jg
sub
sbb
sahf
jle
or
int3
ss
movsb
mov
or
sub
sbb
xchg
das
pop
je
js
daa
xchg
aad
cmc
bound
repz
pop
aaa
inc
push
xlat
push
testl
imul
cmp
fcmovbe
out
fdivl
jmp
adc
loopne
xchg
cmp
xlat
jne
push
and
mov
jbe
sbb
xchg
sub
int3
add
negb
aam
and
out
add
or
jne
xchg
mov
sahf
insb
inc
aad
lret
xorl
addr16
dec
xchg
mov
pop
or
dec
mov
dec
les
push
test
out
scas
xchg
cmp
outsl
orb
outsb
mov
jbe
out
cmpsl
push
data16
add
jb
cli
add
out
pop
sbb
sti
push
mov
js
mov
hlt
adc
ss
loop
xchg
dec
push
scas
jl
jg
repz
sub
pop
arpl
ret
cld
mov
pop
punpcklwd
jl
pop
jae
or
ljmp
aad
setg
jg
stos
inc
jp
lods
lcall
adc
dec
jne
int
call
scas
or
and
jae
clc
adc
dec
pop
xchg
out
mov
cs
jge
jecxz
je
jae
scas
jmp
out
xchg
lds
dec
mov
cwtl
in
test
pusha
mov
mov
xor
push
out
mov
data16
xchg
repz
inc
xchg
out
dec
sub
mov
insl
fists
sub
inc
and
xor
aas
sbb
sahf
xor
testb
jbe
lcall
ja
add
pop
insb
ret
popa
sbb
js
pushf
scas
xlat
ljmp
fidivrl
mov
dec
mov
popa
clc
scas
mov
dec
repnz
in
inc
je
push
mov
inc
jle
out
popf
outsw
ja
cmpsb
ret
jle
cmp
repnz
lods
js
xchg
lret
pusha
xchg
sbb
xchg
lcall
xchg
pop
sub
stos
jno
pop
push
insb
mov
mov
xchg
ret
dec
jg
shll
stos
inc
hlt
decl
lock
xchg
orb
pop
xor
ss
lcall
stos
sub
sti
out
jge
arpl
mov
sbb
sbb
out
in
mov
fcoms
insl
pop
mov
leave
jg
inc
out
rolb
jge
xlat
ss
sbb
or
mov
xchg
out
dec
sub
scas
out
sub
iret
fmuls
and
xor
test
out
and
jb
ret
iret
jae
mov
sbbl
scas
js
cvtps2pi
xchg
jne
outsl
outsl
pop
mov
inc
aaa
mov
xor
out
push
dec
lahf
mov
test
jecxz
stc
lods
inc
jecxz
xchg
push
or
stos
or
lock
mov
jg
outsl
inc
cmpsl
outsb
jle
idivb
jg
addr16
aam
enter
gs
sub
push
ds
pop
add
adc
dec
imul
mov
push
mov
xchg
mull
xor
outsb
pop
daa
mov
lret
loope
adc
lret
xchg
xor
adc
test
pushf
out
add
outsl
jle
pop
aas
dec
out
leave
icebp
mov
mov
push
sti
and
sub
outsl
mov
or
jg
mov
jge
xchg
aam
or
icebp
scas
jmp
pushf
jno
xchg
xlat
stos
push
and
lret
aas
jp
cmpsl
mov
movsl
push
in
cmp
clc
sub
int3
outsl
jbe
fs
push
ja
hlt
aam
xchg
xlat
leave
sqrtps
in
rolb
sub
stos
outsb
mov
call
and
outsl
push
repnz
jb
scas
add
sarl
mov
jle
shrl
jl
and
out
mov
aaa
dec
dec
jbe
je
test
shr
cmc
add
push
mov
sub
add
scas
outsb
iret
mov
cs
icebp
pop
jno
cli
push
daa
out
sub
jae
or
out
out
aam
dec
stc
jo
lahf
inc
loopne
push
test
mov
xchg
jge
ljmp
dec
push
daa
or
lahf
stc
cmpsb
mov
mov
push
xchg
dec
jmp
insb
mov
mov
das
cmpsl
xchg
stos
dec
scas
ljmp
dec
adc
scas
jle
insb
push
dec
js
scas
cwtl
adc
testl
out
pop
xor
scas
jne
pop
test
or
sti
pop
cmpl
stos
dec
cmc
in
stos
xor
scas
jg
inc
mov
shll
dec
ffreep
mov
loop
jl
jae
inc
insl
je
in
rorb
int
sbb
aam
mov
or
and
int
jmp
inc
push
add
inc
xor
push
dec
adc
test
jae
cmc
insl
or
shlb
hlt
xor
jae
jae
mov
movl
dec
sub
je
imul
enter
dec
jg
daa
out
repnz
xchg
in
and
ljmp
out
aam
leave
mov
mov
dec
or
outsl
push
xchg
mov
inc
pop
or
daa
mov
outsb
scas
stos
outsb
adc
icebp
imul
jb
xor
sbb
adc
push
pop
lods
xor
fcompl
fwait
out
je
xor
add
pop
mov
push
jns
adc
jb
jl
jae
mov
lods
inc
jnp
sub
jae
ret
testl
outsb
pop
mov
nop
xchg
mov
popa
psllw
or
adc
add
jno
das
shr
or
repnz
insb
lods
rol
das
ret
insl
inc
inc
xchg
adc
jne
movsl
outsl
jp
xchg
adc
gs
xor
sbb
cmp
or
dec
xchg
outsb
jb
repnz
jno
xor
jbe
jp
push
lods
inc
cmp
mov
or
and
sub
lds
sarl
insb
or
push
xchg
lea
mov
nop
loop
repz
aas
inc
pop
jmp
shlb
pop
je
sysenter
aaa
sub
fidivrs
outsl
mov
insl
bound
xor
jb
jb,pn
jae
lret
inc
sahf
mov
inc
inc
sysenter
outsb
cs
cmp
mov
rorl
std
sarl
out
and
inc
pop
cmp
bound
or
jae
lock
jns
nop
push
pop
jae
loop
mov
add
pop
pop
je
out
int3
dec
inc
jle
jno
es
lea
hlt
bound
add
stos
sbb
lods
jo
or
ss
call
iret
sbb
pop
icebp
dec
js
and
dec
sbb
adc
xchg
icebp
dec
jno
rcrl
mov
cmc
es
lret
xlat
js
cmpsl
xor
movsl
js
and
fwait
xchg
or
pop
fcoms
flds
popf
sbb
sub
dec
jb
pop
xor
enter
negb
scas
mov
rcll
lods
cmpsb
push
pop
rcll
insb
call
movsl
dec
mov
xorl
push
mov
hlt
lret
mov
and
dec
daa
std
or
addr16
aas
mov
push
xorb
loop
pop
scas
add
sub
adc
mov
lods
imul
lret
pop
ret
data16
sub
push
nop
ja
pop
push
pop
jno
inc
movsl
adc
jns
mov
idivb
ret
jnp
imul
ljmp
mov
lea
paddw
adc
fs
daa
insb
mov
es
mov
xor
es
insb
add
stos
addr16
lret
sahf
outsw
mov
dec
dec
mov
mov
push
repz
sub
lods
loopne
loop
cmpsl
xor
dec
insb
jns
sub
ss
cld
push
xor
mov
mov
jle
lock
mov
xor
inc
adc
xchg
dec
out
xor
inc
sub
insl
xchg
lret
jae
in
fbstp
xchg
idiv
inc
xchg
lds
add
out
pop
movsl
fiaddl
repnz
jl
jae
loop
aas
inc
pop
int3
aad
dec
adc
pop
out
xchg
lret
out
aas
push
xor
push
jne
insl
dec
jae
fdivrl
cmpsl
and
push
mov
pop
pop
lret
sub
mov
rcll
lods
pop
jbe
imul
jge
out
jl
xorb
frstor
sbb
inc
adc
mov
mov
loope
stc
out
pop
repnz
int
cwtl
jmp
inc
movsb
mov
add
out
xchg
mov
insb
xchg
fstps
mov
fimull
jne
pop
push
cmp
pop
testl
dec
jp
dec
mov
lret
in
int
xor
int
insb
mov
pop
jle
jg
mov
or
data16
mov
loopne
les
movsl
pop
adcl
mov
das
aas
cmpsl
mov
mov
cltd
mov
or
inc
or
addr16
lds
bound
aaa
mov
and
sbb
sbb
add
mov
in
iret
ljmp
mov
call
scas
sub
xchg
iret
pop
mov
jl
out
mov
int3
out
scas
fs
jge
xchg
cltd
mov
sbb
mov
insb
nop
add
xorb
or
inc
pause
mov
add
pop
xchg
in
leave
mov
lods
push
jg
push
xchg
add
mov
lods
push
nop
jg
sbb
dec
sub
loope
call
pop
outsl
mov
outsl
clc
mov
outsl
lcall
pop
and
outsb
div
mov
mov
xchg
cli
movsb
mov
mov
shr
imull
je
pushf
mov
mov
jl
mov
jle
shrb
mov
jp
push
scas
outsl
out
jns
push
rcl
repz
jle
dec
xchg
scas
sbbl
push
pop
add
mov
push
movsb
inc
inc
cmc
and
jle
xor
ljmp
xor
divl
and
lock
cld
pop
in
add
fisttpll
sahf
inc
fsubrl
xchg
std
cmpsl
dec
pop
fisubrs
fmull
dec
jns
cmc
pop
dec
std
xor
es
in
jg
popa
jl
mov
insb
jl
pop
in
lds
mov
std
dec
insl
dec
iret
mov
arpl
jle
call
or
mov
stc
ss
jecxz
or
mov
ret
cli
add
out
add
in
pop
xchg
lock
nop
out
outsl
sub
pop
arpl
lock
cmpsb
imulb
sub
sarb
cs
loop
xchg
ret
cs
jge
sub
push
lods
sti
push
sahf
push
in
cmp
outsl
testb
pusha
bound
pop
mov
or
adc
sub
pushf
out
jmp
out
pop
jle
mov
dec
fsub
out
clc
ja
insl
popf
sarb
fldcw
jle
call
dec
out
popa
call
dec
mov
xchg
das
jb
push
jp
mov
scas
jns
add
push
jno
pop
lahf
mov
cmp
xor
rol
xchg
pusha
xor
inc
ret
jae
bound
rcrl
nop
aaa
jge
inc
dec
and
ljmp
into
pusha
mov
dec
mov
sbb
fildll
pop
cs
pusha
push
or
test
icebp
jmp
loopne
insb
aas
jae
or
testl
scas
jae
add
dec
loope
das
jne
outsl
push
lds
popf
jae
lret
cld
fbld
rol
int
jnp
adc
cmp
fs
out
push
push
fs
loopne
iret
outsb
mov
or
aad
jno
xchg
add
sti
jnp
lcall
pop
mov
out
pop
sti
dec
dec
pop
xchg
lret
cli
push
add
dec
mov
push
cmc
es
cmp
ja
push
push
js
mov
orl
scas
inc
or
push
scas
sbb
jle
xor
ret
adc
mov
sbb
mov
cmpsl
jge
add
adc
dec
out
scas
insb
arpl
int
push
xor
idiv
mov
inc
cmp
push
insb
icebp
popf
test
cld
cmp
outsb
mov
push
inc
in
test
clc
pop
ret
loope
out
sti
sbb
sub
movsb
lods
arpl
out
jl
mov
adc
call
pop
test
dec
testb
jg
fcomi
bound
sbbl
in
je
push
das
jne
out
jle
add
pusha
into
shrl
repnz
icebp
push
jb
mov
jno
das
repnz
push
mov
cmp
inc
cmp
dec
mov
enter
ja
insl
enter
jmp
adc
test
btc
mov
movsb
push
dec
in
jle
subb
test
repz
call
cli
add
push
pop
add
stc
js
xlat
and
out
pusha
jb
jno
or
scas
jl
repnz
out
insb
dec
xlat
nop
test
in
jns
int
cmp
movsb
shr
mov
bound
sahf
jecxz
add
movl
mov
push
adc
mov
inc
mov
adc
cwtl
push
xor
dec
nop
cwtl
lds
jle
sahf
and
roll
cld
out
jbe
fisttps
in
and
loop
dec
insb
mov
dec
rorl
push
inc
jne
cmp
mov
push
cmp
xchg
nop
mov
and
or
dec
cld
and
jo
mov
jne
and
mov
shrl
iret
dec
icebp
outsb
insb
xchg
jae
add
inc
sbb
mov
jae
and
mov
push
je
data16
sahf
and
repnz
out
arpl
lds
cmp
mov
ljmp
mov
daa
call
add
and
cs
cmp
push
cmp
xchg
pop
ljmp
cmp
sub
adc
outsb
in
jb
stos
cmpsl
jno
call
sbb
and
push
int
adc
fs
add
data16
push
push
jo
mov
cmpsl
mov
aad
stos
mov
push
outsl
outsb
out
incl
or
out
mov
or
mov
iret
cltd
imul
je
jnp
cwtl
mov
test
mov
movb
sbb
add
in
jg
enter
xchg
inc
mov
addr16
sbb
mov
ret
inc
imul
mov
test
sahf
mov
pop
add
sbbl
cli
mov
push
fs
cmpsb
aaa
fldenv
mov
jmp
repz
inc
jae
stos
nop
mov
sbb
lods
in
test
adc
gs
push
pop
das
adc
das
sub
int
into
fs
jns
and
inc
add
fmulp
cmp
cmpsb
sub
pop
adc
dec
into
je
sahf
daa
pop
mov
and
pop
mov
cmpsl
ss
mov
mov
jmp
mov
and
mov
js
cmpsb
lock
jne
inc
dec
enter
outsb
mov
fucomi
in
lea
daa
test
add
fisubl
iret
jne
nop
cld
ret
cld
sahf
jp
dec
cmp
sub
mov
roll
push
push
mov
mov
clc
imul
outsb
pop
ret
mov
mov
push
scas
scas
in
loope
jle
xchg
fiaddl
stos
jae
imul
lea
mov
call
lret
je
jae
pop
mov
cwtl
push
lods
imul
push
dec
cltd
fdivrl
xlat
pushf
stc
inc
mov
das
addr16
lods
addb
inc
xchg
push
out
xor
sbb
je
push
jl
incl
test
inc
inc
mov
je
xor
mov
imul
sbb
and
sub
sbb
xchg
mov
or
fbstp
push
xchg
mov
dec
ret
push
push
mov
xchg
jl
xchg
mov
mov
in
scas
addr16
leave
mov
loope
and
aaa
pop
mov
cmpsb
pop
dec
in
jno
in
dec
outsl
stos
push
jmp
dec
popa
cwtl
test
pop
in
out
xchg
xchg
loop
mov
insl
or
pop
outsl
fsubp
scas
push
jb
push
lock
out
inc
bound
adc
ftst
mov
das
out
jg
cmpsb
ret
fisubs
sbb
pop
mov
sbb
xlat
mov
int
or
xchg
ret
push
ja
or
jmp
str
movsb
lock
sbb
mov
in
or
fstps
outsb
jge
lods
sbb
jnp
pop
mov
scas
outsl
add
cmp
sbb
lods
test
loope
loopne
int
ja
inc
and
loop
mov
mov
arpl
jmp
sub
jecxz
test
into
lods
imul
ror
jb
xor
ret
test
test
sbb
test
movsb
mov
leave
out
mov
mov
js
and
rorl
cmc
sbb
es
add
push
adc
cmp
adcl
fwait
push
aad
shll
mov
fcmovnu
pop
fmuls
adc
xchg
jmp
dec
mov
jmp
shlb
outsb
clc
fidivl
or
lret
jecxz
hlt
cwtl
fwait
lcall
ds
ljmp
xchg
mov
repnz
scas
push
mov
and
push
cmpps
xchg
sbb
jae
jae
xchg
ljmp
insl
fnsave
push
call
mov
push
inc
in
mov
sub
es
cmp
add
sub
pop
pop
int
cmp
jp
inc
dec
jbe
xchg
insl
jno
out
test
push
mov
dec
jmp
inc
in
aam
cmp
mov
imul
stos
push
mov
fldenv
sbb
sub
icebp
mov
mov
cltd
push
push
xor
mov
ds
jns
mov
mov
vpunpcklqdq
movsl
dec
cmp
orl
xchg
arpl
insb
lock
add
xchg
dec
and
jne
clc
xor
pop
scas
cmp
xchg
xchg
sbb
jne
inc
call
hlt
addr16
frstor
cmp
loope
mov
outsl
sbb
pop
jmp
out
and
insl
out
outsl
fdivrl
stos
jns
push
aaa
daa
dec
out
jmp
es
mov
push
mov
test
repz
nop
vfrczss
stos
or
cwtl
arpl
inc
ret
xchg
xor
jl
jae
rcrl
jle
lods
and
test
jo
mov
sbb
movsl
scas
mov
mov
imul
insb
inc
prefetchw
sub
xchg
xlat
test
push
rolb
sarl
jge
or
xor
adc
addr16
push
scas
addl
jmp
repz
aam
int3
mov
jne
loop
lods
add
xor
or
mov
sbb
pop
add
push
push
shl
movsl
fldenv
adc
nop
stc
sub
movsb
or
push
dec
outsl
add
jb
mov
inc
mov
imul
out
pushf
out
push
push
cmp
enter
mov
sbb
jns
loop
rcrb
int
and
dec
push
or
and
movsb
cld
clc
mov
mov
sbb
vhsubpd
in
pop
insb
dec
adc
outsb
cmp
outsl
mov
ret
jo
cmpsb
cmp
clc
cmp
sbbb
icebp
mov
lcall
mov
movb
inc
imul
ljmp
daa
daa
out
dec
mov
pushf
mov
sub
ljmp
or
ret
das
jae
mov
xor
stc
sbb
cmpsl
lods
insb
in
pop
mov
popl
mov
ret
xchg
leave
out
jecxz
int
inc
loop
out
add
cltd
in
fldlg2
add
je
outsb
and
sub
cmp
fsubs
xor
out
and
fsubp
jae
stc
lret
dec
nop
pop
or
dec
rcr
lds
add
and
jl
icebp
frstpm(287
dec
outsl
ja
xchg
and
fcoms
push
rcl
fistpl
mov
adc
mov
jo
add
jmp
cmp
sub
daa
inc
push
pop
adc
iret
loop
inc
fmul
out
sub
imul
aas
pop
mov
mov
lea
lahf
xrelease
repnz
xchg
xor
ss
push
aam
jnp
loopne
mov
in
lods
mov
ljmp
mov
into
ret
jg
fsubs
dec
cmpsl
push
mov
sub
mov
movsb
or
sub
mov
xor
daa
es
mov
mov
out
mov
test
enter
or
lock
out
push
sub
mov
mov
lret
scas
clc
dec
mov
pop
mov
mov
outsb
push
aad
add
jbe
mulb
push
inc
pop
aad
je
xchg
pop
andb
into
mov
test
lret
mov
in
xor
loopne
insb
lods
mov
into
enter
jmp
jb
lret
push
popa
repz
addr16
inc
inc
jae
sub
adc
or
mov
js
jb
repz
ret
insb
mov
xor
jnp
hlt
jae
or
add
icebp
dec
mov
insb
jle
adc
mov
shl
in
int
leave
mov
into
fisubrs
out
dec
testb
jne
push
hlt
fstpl
adc
pop
mov
mov
test
mov
jle
cmp
imul
fidivl
and
dec
out
cwtl
jmp
xchg
movsb
pop
ss
and
repnz
imul
and
test
or
xchg
xchg
pop
faddl
pop
xlat
jmp
aad
adc
lods
jo
out
test
cmpsl
push
popf
or
std
xor
push
pop
sub
es
pop
or
movsb
sub
mov
lea
out
repz
or
repz
sub
das
or
testb
mov
sbb
cmp
add
clc
pop
inc
jg
push
sub
lea
inc
popf
sti
push
fists
movsb
in
shl
stos
shll
pop
dec
outsl
addr16
mov
ja
outsl
push
div
dec
nop
rcrb
sub
fnstcw
pop
or
stc
pop
xchg
jbe
pop
ret
xor
stos
daa
sub
outsb
and
or
inc
loopne
adc
js
fbstp
clc
pop
cmp
or
iret
mov
sub
push
mov
xor
loop
aas
into
test
stos
ret
ljmp
vpsubb
sarb
insl
mov
rcl
jle
sti
jge
cmp
jne
push
push
ljmp
mov
mull
mov
jbe
stc
push
and
sub
jg
dec
pop
mov
dec
inc
jmp
jb
sti
xor
out
stc
popf
daa
lret
testl
xchg
jbe
repnz
dec
cmp
hlt
out
or
cwtl
inc
stos
stc
rcr
out
stc
lock
aaa
in
xchg
out
xchg
lock
push
mov
jae
outsl
test
lods
jbe
idiv
repnz
mov
mov
lods
fwait
xchg
mov
push
xchg
repz
sub
outsl
dec
mov
cmc
pop
push
bnd
test
push
dec
jb
mov
jle
lods
hlt
push
dec
jp
scas
idivl
dec
add
add
scas
mov
push
sub
dec
addr16
cmp
dec
adc
jae
hlt
loop
mov
xchg
dec
add
or
stc
cmpsb
icebp
jecxz
sbb
add
loop
dec
icebp
cld
in
std
xor
xor
push
aas
outsl
call
int
sub
out
scas
out
push
push
add
push
inc
loope
clc
cmc
mov
enter
mov
inc
loopne
mov
jle
rorl
jno
jnp
sti
xchg
dec
adc
add
mov
out
call
push
jmp
fistpll
pop
jne
stos
int3
dec
stc
cmc
loope
arpl
je
xchg
cli
mov
lahf
pop
dec
cmc
cmpsl
mov
call
xor
je
lret
loope
int3
hlt
rclb
mov
pop
lock
jb
popf
out
mov
xchg
mov
loopne
mov
cld
mov
lods
mov
mulb
shlb
pop
pop
repz
mov
dec
das
xchg
mov
pushw
iret
outsb
cmp
pop
testl
add
mov
pop
sbb
cmc
shr
push
xchg
xchg
lret
je
jb
ret
fisubl
mov
cmc
mov
scas
mov
dec
cltd
pop
xor
adc
lods
icebp
out
cmp
dec
ljmp
adc
push
adc
inc
push
jmp
sbb
add
dec
mov
mov
sub
dec
repnz
cmp
mov
out
fcmovnbe
dec
add
insl
mov
mov
jmp
xchg
sbbb
jae
iret
xchg
push
int
adc
sbb
cmp
loop
lahf
lock
cld
dec
repnz
adc
sar
adc
push
pop
mov
sti
pop
jg
pop
or
jle
mov
out
fcomps
jo
sub
mov
repz
jb
and
cmp
icebp
dec
xchg
push
call
aam
xor
mov
pop
loope
icebp
hlt
mov
jp
sub
movsl
test
push
ss
cmp
repnz
sbb
xchg
push
ret
mov
int3
daa
test
add
xor
dec
stos
jmp
es
adc
mov
mov
mov
iret
testb
push
mov
call
push
and
lcall
in
mov
shlb
mov
enter
test
push
jno
dec
in
mov
mov
aad
xor
xor
dec
outsl
mov
and
add
push
cltd
scas
mov
xchg
push
fxch
divl
iret
inc
adc
and
cmp
push
out
out
ret
lods
jae
mov
std
call
mov
lcall
loopne
inc
jge
jae
dec
adcl
imul
mov
mov
negb
repnz
in
movsb
into
xchg
imul
pop
mov
mov
mov
mov
add
or
cmp
rolb
popf
lahf
js
sub
orb
mov
dec
int
ret
arpl
mov
aaa
jne
jge
pop
outsl
in
imul
loopne
or
je
mov
lret
hlt
xor
ja
enter
sti
and
jg
mov
push
inc
cmp
out
jns
fldcw
aaa
loope
push
mov
mov
xchg
dec
mov
ret
out
cmp
nop
pop
loope
sahf
cmpsb
jp
rcrb
inc
dec
sbb
mov
loope
psrad
jmp
mov
ficoml
or
sub
or
mov
and
fidivs
imull
jnp
int3
mov
mov
outsb
imul
in
sti
cli
mov
jp
loop
mov
pop
sahf
mov
jbe
cmpsb
dec
aas
and
dec
mov
or
fsts
clc
shrb
movl
dec
lret
idivl
dec
cmp
push
mov
cmp
mov
outsb
mov
inc
xor
xchg
dec
outsl
adc
out
cmpsb
mov
leave
outsl
inc
push
pop
xor
repnz
dec
xchg
push
movsl
ds
lock
cltd
cwtl
jg
sti
loope
mov
ljmp
popa
mov
push
fwait
lcall
lock
and
mov
mov
mov
inc
mov
mov
repnz
imul
mov
fwait
pop
mov
dec
jmp
sub
sub
jl
out
or
subb
and
pop
xchg
cli
add
cltd
pop
in
addr16
addr16
shrl
shr
loope
mov
adc
icebp
mull
lcall
xor
js
push
mov
pop
mov
addr16
shll
add
push
dec
adc
mov
out
adc
je
data16
pop
outsl
scas
outsb
lret
insb
mov
push
lret
pusha
outsb
loopne,pn
rolb
outsl
xchg
xchg
mov
add
addr16
add
inc
cmpsl
xor
clc
or
adc
pop
add
imul
movsl
xchg
out
jae
je
scas
mov
das
adc
xchg
mov
cmp
sub
clc
pop
lcall
cmc
addr16
mov
scas
mov
stos
sub
pop
int
jbe
mov
lock
bound
ss
movsl
lret
jp
inc
xlat
jg
ds
pop
mov
mov
cmp
fisubs
mov
loop
lret
jg
sti
xchg
aas
mov
out
xchg
inc
pop
mov
sub
loopne
outsb
pop
repnz
push
aaa
sahf
cmpsl
or
lea
push
push
jb
andb
rorb
mov
mov
jp
pop
sub
test
lods
into
test
adc
mov
pop
jns
sub
pop
lods
sahf
mov
push
popa
insl
xor
adc
or
mov
push
pop
lock
add
imul
fwait
add
arpl
cmpsb
pop
sub
stos
jno
cmpb
adc
pop
mov
lahf
lds
cmp
out
adc
out
test
pop
xor
push
inc
icebp
loopne
push
push
addr16
out
cmpsl
mov
jo
test
lds
jg
or
mov
cmovne
insb
add
loop
loop
dec
stos
mov
inc
sub
hlt
div
int3
leave
cmpsb
js
and
psrad
insl
xchg
sub
cmc
xor
inc
xchg
push
push
and
push
push
jne
push
into
fwait
iret
bound
mov
das
pop
xchg
outsl
xlat
mov
dec
dec
push
dec
enter
cwtl
rolb
test
jg
jbe
push
das
push
jg
dec
inc
xchg
lahf
das
add
dec
loope
inc
inc
shll
test
add
push
in
aaa
lock
inc
ret
mov
dec
pop
xchg
and
mov
pop
mov
call
mov
and
js
mov
adc
xchg
adc
ja
inc
out
xchg
mov
or
pop
incb
mov
mov
add
test
fcoml
movsb
orb
cmpsl
or
mov
jae
or
pop
rcr
lods
jecxz
cmp
rcrb
imulb
call
int3
stc
scas
je
divl
jg
jae
push
leave
cwtl
cld
test
test
cmp
jnp
out
cmp
sub
or
jo
scas
mov
dec
jae
fsub
stos
mov
jg
icebp
test
mov
outsl
or
pop
fdivr
subl
stc
decb
ss
and
aas
mov
sbb
add
call
mov
push
add
fwait
dec
xor
sub
out
ss
ret
inc
nop
popf
shll
out
adc
std
or
aaa
mov
adc
ss
fldenv
loopne
lret
jne
sbb
aad
std
hlt
bnd
icebp
pop
xchg
mov
and
ss
call
adc
mov
mov
or
xchg
repz
lret
imul
mov
xchg
jae
subl
mov
adc
push
and
mov
mov
fcomps
outsb
inc
adc
rcrb
dec
into
cmp
pop
mov
adc
lock
fadds
lds
lods
outsl
out
call
jb
call
insb
data16
dec
pop
out
rcrl
test
insl
sahf
xor
xor
adc
add
ficomps
std
or
jp
out
jae
std
push
insb
lcall
sub
addr16
adc
out
nop
jno
stos
lock
movsb
repnz
out
cmpsl
cwtl
push
sub
mov
nop
mov
sahf
dec
dec
dec
inc
ret
push
sub
mov
adc
sbb
mov
or
imulb
mov
in
pop
in
loop
adc
lret
loope
jb
sub
or
outsb
push
add
xor
jae
scas
sub
mov
aad
push
pusha
sbb
lret
inc
dec
xlat
out
xchg
call
add
push
sbb
out
pop
cltd
jg
mov
jne
jae
lret
mov
aas
dec
dec
cld
push
sub
jb
cmp
enter
insb
std
dec
and
ds
add
sbb
out
jnp
movsl
bound
out
movsb
sbb
cmpsb
outsl
and
push
mov
outsl
jns
hlt
rol
mov
rcll
divb
idivl
mov
clc
and
insb
repnz
repz
and
addr16
mov
imul
mov
mov
push
push
js
mov
mov
mov
pop
or
push
cs
int3
lods
popa
stc
outsb
test
adc
js
push
xor
jg
enter
lea
jge,pn
push
push
jb
inc
popf
add
cmc
jecxz
push
aas
test
je
out
sti
xor
jae
ret
fldl
mov
lock
ret
mov
in
mov
fmull
dec
push
adc
int3
sahf
in
test
add
movsl
stc
aaa
or
loope
call
xchg
mov
sbb
inc
daa
cmp
cmc
mov
dec
out
and
lock
or
sbb
jg
xchg
lds
adcb
xor
or
mov
mov
cmp
fmuls
xchg
mov
pop
and
mov
mov
repz
movsl
or
hlt
sbb
test
xor
mov
test
or
add
mov
in
mull
xchg
sbb
fwait
dec
and
je
or
jnp
jns
mov
adc
cmp
outsb
mov
jg
fidivrs
shlb
mov
dec
mov
sub
daa
pusha
lock
jge
fcoms
insl
adc
add
xchg
gs
or
sti
jle
mov
psubsw
cli
nop
lret
icebp
lods
jp
repnz
sti
outsb
jbe
ja
divb
idivl
push
imul
movsb
aaa
mov
add
pop
sti
iret
cmpb
out
jae
pop
movsb
inc
in
mov
insb
stc
test
dec
lea
sbb
cmp
cld
xchg
mov
ja
cs
stc
outsb
cmc
lods
jnp
das
mov
jnp
jp
jle
movl
je
jmp
pop
ret
pop
stc
jg
loop
pop
mov
int3
jae
test
stc
mov
sti
sub
mov
cli
jmp
mov
je
out
cmp
test
jne
mov
sbb
jg
mov
in
lock
and
movsb
subb
outsl
sub
pop
je
maskmovq
divl
stc
inc
sbb
arpl
or
test
hlt
xchg
jne
add
push
pop
xchg
sub
adcb
pop
dec
xor
ja
mov
inc
mov
jmp
cwtl
mul
imul
sahf
and
sub
sub
lahf
ret
std
stos
daa
fdiv
dec
lret
out
cmpl
mov
sub
mov
and
test
or
cwtl
dec
add
and
mov
stc
js
outsl
jns
icebp
sar
inc
jbe
pop
les
mov
repnz
dec
ret
cmp
in
fs
push
loop
test
cltd
outsb
enter
mov
repnz
push
add
sub
bound
call
fwait
mov
stos
imul
fldl
mov
mov
jb
in
sbb
lret
jno
jne
icebp
das
jne
xchg
icebp
xor
out
clc
pop
imul
add
sbb
fildll
testb
imul
push
imulb
xchg
outsb
ficoml
push
pop
jp
lods
sahf
popa
ljmp
imul
stos
jns
xchg
in
out
add
push
jne
pusha
pop
decl
mov
test
cli
out
jb
lods
pop
or
test
dec
dec
lret
sub
sub
mov
dec
in
jnp
mov
jg
push
mov
push
cmp
push
dec
lret
lods
imul
es
mov
loope
mov
fs
scas
and
dec
push
push
lods
xchg
jmp
add
or
sbb
clc
inc
cmp
push
cld
inc
cmpsb
xor
loope
jb
jbe
push
lods
and
mov
push
push
inc
gs
arpl
call
dec
pop
and
imul
clc
call
cmp
and
test
imull
push
lcall
dec
in
jbe
and
mov
jg
cld
movsl
pop
popa
mov
pop
pop
fisubrs
cmp
movsl
data16
pop
dec
out
jg
fdivr
or
loopne
lods
mov
jmp
gs
mov
jnp
jns
ja
cmp
jns
out
call
mull
push
stos
sbb
jns
xchg
dec
arpl
pop
mov
std
push
mov
mov
mov
xchg
jne
add
push
jg
cmp
mov
andl
jg
repz
mov
xchg
imul
jecxz
xchg
add
pushf
stos
add
cmp
addb
lock
or
mov
in
scas
insl
pop
mov
xchg
out
outsb
push
ljmp
popf
mov
dec
adc
push
mov
lea
mov
xor
cli
adc
clc
test
call
repz
daa
xchg
add
add
jbe
push
repnz
arpl
mov
push
sub
mov
xchg
add
push
or
jnp
push
orb
shrl
cmp
enter
push
jmp
shlb
neg
add
jl
lds
mov
fnstsw
ljmp
repnz
ja
jae
call
mov
into
xchg
mov
out
out
imul
scas
cld
out
imul
stos
fidivl
std
stc
pop
scas
lock
add
sbb
call
lods
in
dec
gs
insb
outsb
outsb
xlat
jg
jg
aaa
call
lods
out
or
popa
daa
icebp
push
insb
insl
jns
xor
popf
div
jmp
xor
sbb
mov
xor
and
lret
or
jb
xchg
out
sti
dec
loop
mov
cld
scas
stc
push
jno
cmp
inc
fwait
insl
jmp
lret
out
icebp
pop
xchg
in
push
insl
cmp
jno
xchg
adc
mov
sub
push
lods
in
and
addr16
lahf
mov
andl
jecxz
jb
push
dec
insl
stc
popa
test
sub
outsl
xchg
stc
in
das
loop
dec
outsb
dec
lods
sub
mov
jecxz
and
inc
addb
lods
bound
in
test
loop
sahf
jae
jle
lcall
pop
out
or
jg
insl
andb
test
outsb
cs
dec
ret
scas
or
mov
roll
aad
cli
dec
outsb
cmpsb
jle
cld
outsb
out
cwtl
repnz
xorb
mov
out
mov
outsb
arpl
popa
outsb
inc
out
pop
test
test
fwait
jb
xorl
push
repnz
cld
fldl
in
bound
scas
jl
outsb
inc
outsb
jmp
fildl
cmpb
jne
adc
lods
outsl
rolb
xchg
int3
add
test
sbb
add
insl
movsl
arpl
push
bound
movsl
addl
out
xlat
push
cmp
mov
inc
daa
jnp
call
xchg
add
dec
add
xchg
mov
out
out
pop
imul
mov
add
dec
std
imul
inc
xchg
loopne
dec
jb
out
roll
mov
addr16
addr16
into
xchg
jle
mov
mov
adcl
out
cs
dec
das
fadd
imul
out
push
mov
mov
sahf
fwait
in
ret
push
div
xor
add
cmp
lea
push
bound
outsb
push
ljmp
gs
inc
adc
jae
and
jge
dec
xchg
and
ret
sbb
stos
dec
dec
push
lods
adc
dec
jp
mov
cli
in
cltd
out
in
scas
xchg
test
imul
inc
push
sbbb
in
cmpsb
mov
pop
gs
insl
xchg
insb
xchg
push
jp
cld
push
dec
es
outsb
sub
leave
in
cmpb
stc
test
jle
pop
scas
in
pop
stc
jle
in
mov
into
popa
mov
in
test
mov
push
mov
out
mov
in
mov
in
hlt
into
xchg
dec
mov
cmpsb
int
idiv
ret
insb
out
sbb
jbe
dec
or
in
pop
dec
movsb
bound
cli
stos
jne
repz
aam
repz
sbb
fwait
std
clc
dec
xor
mov
scas
in
pop
idivl
lock
jbe
insl
pushf
je
in
mov
sbb
icebp
xchg
dec
mov
lods
ret
icebp
push
cs
pop
dec
push
dec
push
insb
enter
imul
pop
lock
pop
push
loop
in
hlt
sub
mov
or
or
sbb
dec
insl
insb
mov
mov
pop
sub
push
ret
dec
fildl
pop
in
jbe
mov
insb
mov
arpl
and
sub
jne
dec
out
ja
mov
imul
pop
jnp
sub
out
in
in
cld
and
movsl
sahf
dec
out
in
and
dec
cli
and
in
in
push
in
cli
mov
stos
loop
mov
jno
in
push
int
int3
shrl
mov
mov
sbb
pop
call
js
cmp
and
pop
out
push
aam
gs
test
clc
in
lock
jmp
not
dec
iret
xor
insb
in
bswap
jle
es
into
in
pushl
outsl
cmp
adc
xchg
dec
in
jb
bound
adc
or
mov
into
clc
in
cmp
cmp
insl
hlt
outsb
call
outsb
adc
inc
pop
pop
mov
psubw
xchg
jge
lods
jb
int3
push
add
std
jmp
jge
xor
xchg
mov
xor
fucomi
mov
jae
in
andl
inc
pusha
gs
push
push
mov
ret
movsb
stc
es
fsubl
clc
arpl
in
mov
outsb
in
inc
out
or
hlt
jp
imul
dec
icebp
in
call
jecxz
mov
into
mov
stos
ljmp
js
and
call
cmc
mov
outsl
mov
aaa
in
insl
loop
sbb
dec
xor
divl
popl
out
insl
movsb
iret
outsl
jp
lock
dec
arpl
addr16
repz
jb
bnd
imul
mov
dec
das
stc
dec
call
cld
jg
int
ljmp
dec
imul
icebp
imul
jp
cli
addr16
je
arpl
pusha
lock
outsl
lods
jmp
outsb
lret
lock
pop
jecxz
jg
out
push
dec
push
addr16
push
out
dec
dec
insl
lods
in
call
sti
pop
jp
repz
sub
inc
dec
in
dec
data16
jg
or
lea
inc
lods
dec
insb
call
dec
pusha
ja
dec
fs
in
dec
arpl
sub
out
pop
imul
dec
loop
cli
icebp
pop
jns
je
lock
loop
lahf
lods
dec
jmp
or
in
dec
push
pop
js
clc
in
jno
ljmp
dec
outsb
enter
out
lods
sub
jg
jp
imull
fiadds
jg
jp
repz
dec
pop
dec
insl
outsb
jecxz
lods
call
dec
outsl
mov
dec
loop
out
popa
dec
out
pop
jns
jge
clc
dec
jge
push
inc
dec
incb
pop
testl
pop
outsb
in
lods
fiadds
sti
outsl
mov
fcom
mov
jne
pop
push
repz
jle
or
fsubr
push
arpl
pop
push
stc
jle
outsl
loop
test
push
bound
jns
imul
testl
fdivl
add
jnp
cmp
mov
jle
stc
sar
mov
out
xor
jmp
jb
xor
dec
inc
and
mov
dec
pop
pop
mov
cmp
shlb
mov
mov
inc
aam
icebp
stos
leave
clc
sub
insl
adc
jbe
push
cmpsl
jno
in
dec
jmp
sbb
movsb
sbb
jmp
fwait
pusha
mov
xor
mov
lret
out
fisttps
push
ljmp
xchg
push
popa
mov
cld
sub
fldl
cmpsl
adc
inc
sbb
int
mov
arpl
int
jp
push
mov
push
test
scas
push
int
fdivs
aad
push
ret
fadds
sub
loope
cmp
add
popa
push
pop
scas
insb
addr16
ds
js
push
daa
insb
sub
outsl
gs
fidivs
fwait
sahf
out
mov
sub
mov
insb
sub
xchg
jns
mov
xor
sahf
test
sbb
shlb
insl
mov
dec
fs
sub
out
pushf
pop
in
add
int
adc
cmpsl
and
xchg
pop
jge
mov
sbb
mov
aad
sti
stos
out
mov
mov
mov
sub
xchg
push
cmp
fnstenv
into
insb
sar
fldenv
xchg
movsb
push
shrl
jno
imul
mov
out
xor
into
sar
xchg
jecxz
in
pop
xor
sbb
adc
sbb
imul
cwtl
push
frstor
mov
fabs
imul
mov
adc
and
dec
jb
in
test
lock
scas
sbb
push
ficoms
xlat
mov
cmpsl
cwtl
repz
sub
lods
adc
dec
movb
pop
mov
xchg
push
sahf
pop
sarb
sbb
jae
mov
lds
dec
inc
aaa
dec
outsl
dec
outsb
mov
sbb
jno
fmull
scas
mov
insb
jb
aaa
notb
aad
and
mov
mov
xchg
mov
mov
inc
jns
ja
es
mov
leave
test
dec
fmull
and
repz
mov
add
data16
add
repnz
adc
push
insb
or
pusha
push
insb
gs
cwtl
add
loop
mov
lret
sahf
rolb
inc
jae
mov
out
mov
mov
outsl
test
arpl
stos
insl
xchg
es
sbb
add
jmp
daa
adc
add
loop
jmp
mov
les
insb
insl
fs
xchg
testl
insb
xchg
cmp
imull
add
jmp
pop
pop
jnp,pn
add
jecxz
mov
in
xchg
fmull
in
mov
mov
addr16
out
inc
xchg
push
std
and
push
cmp
or
mov
sub
push
loope
fnsave
in
outsl
xor
popa
fadds
incl
adc
lock
arpl
cmp
ja
ror
and
mov
scas
pop
push
clc
push
pop
and
mov
scas
scas
pop
outsl
out
jae
or
push
call
sti
outsb
xlat
test
pop
or
adc
daa
sbb
pushf
jno
inc
in
add
mov
cs
inc
dec
lret
std
mov
cwtl
or
jae
lahf
mov
sub
insb
cmc
xchg
inc
decb
into
loope
hlt
mov
lods
in
lds
or
loopne
jl
mov
fnstenv
or
add
out
inc
jb
dec
jg
int3
adc
in
insb
push
jno
ret
xchg
lds
sbb
lcall
lcall
sub
in
dec
jg
mov
mov
add
pop
data16
dec
dec
push
sti
and
mov
lods
or
jg
cmp
sub
cmp
loope
mov
daa
dec
dec
lea
mov
jge
cmp
push
icebp
es
out
mov
xchg
test
push
cli
inc
pop
jecxz
push
insb
xchg
add
call
test
mov
inc
push
imul
dec
fsubrl
nop
mov
lcall
loopne
xor
repnz
std
iret
es
imul
lea
fwait
sbb
push
pinsrw
sub
mov
sbb
xchg
inc
leave
pop
xchg
testl
cld
out
aas
jne
inc
in
out
sarb
in
dec
dec
inc
jge
call
test
jg
mov
mov
push
mov
cld
mov
sti
push
or
jbe
or
rclb
dec
nop
xor
cmp
add
jne
scas
jae
movsl
push
adc
pop
scas
mov
enter
xchg
mov
mov
movsb
ret
mov
jecxz
imul
or
aad
or
fs
jnp
jae
pop
jns
jne
dec
ret
adc
push
test
es
ret
lods
outsb
mov
out
pop
cmp
adc
aad
pop
jne
adc
xchg
in
mov
push
sub
imul
inc
push
cmpsl
xchg
ret
test
sbb
lret
lret
sub
into
loop
sbb
mov
xor
sbb
mov
lods
pop
push
adc
mov
stos
lods
in
lock
loopne
ja
and
cmp
cmp
jg
jl
mov
cmp
pop
sti
jno
jecxz
dec
je
arpl
dec
pop
mov
dec
es
add
dec
lahf
dec
mov
mov
out
inc
lock
rcrb
in
in
jb
xchg
loop
mov
lret
out
icebp
ret
inc
lock
jle
loope
arpl
pop
dec
clc
sub
arpl
sbb
adc
js
xor
jle
clc
leave
mov
enter
shl
out
loop
mov
leave
xor
sahf
dec
sbb
lock
sbb
push
jg
fs
movsl
jg
jbe
sub
subl
pop
dec
in
outsl
jnp
mov
repnz
popa
fs
xchg
jg
push
ja
imul
mov
and
dec
or
movsb
jmp
add
roll
jo
jmp
push
gs
jno
arpl
leave
cmp
into
in
mov
xchg
jo
xor
mov
jae
jae
mov
cs
push
cmp
inc
mov
popa
int3
notb
pop
sbb
popf
das
mov
mov
lret
icebp
jb
das
and
and
out
inc
loop
or
fwait
cld
daa
addr16
lock
out
xor
mov
outsb
jle
xor
sbb
pop
xchg
insl
hlt
test
mov
loopne
sbb
in
mov
scas
mov
data16
test
push
xchg
aaa
xchg
ret
ficoms
jle
sahf
test
xor
xor
int3
sar
add
icebp
pcmpgtw
mov
into
lods
mov
repnz
out
or
lahf
in
stos
jno
outsb
pop
add
outsb
pushf
lret
add
cmp
imul
clc
inc
mov
sti
add
xchg
and
dec
in
imul
clc
jmp
pop
stos
sti
pop
fwait
int
fidivs
mov
xor
pop
das
jnp
loop
or
ret
shrb
addr16
arpl
insl
int
mov
dec
popa
dec
pusha
jg
call
mov
test
out
imul
int3
sti
pop
add
outsb
test
pop
xchg
add
cmp
nop
lods
xor
idivb
dec
sub
movsb
add
in
imul
jecxz
test
data16
push
out
inc
addb
xor
xor
clc
aad
jmp
jnp
mov
dec
ret
hlt
int3
in
call
stos
jno
test
mov
mov
add
test
xchg
data16
data16
call
out
mov
cltd
sarl
test
ret
xchg
int3
repnz
cmpsb
mov
neg
mov
inc
imul
adc
sub
ss
lds
stos
jb
test
dec
repz
dec
push
push
pusha
outsl
jb
hlt
outsl
out
aas
adc
ja
inc
mov
or
add
mov
add
or
loop
mov
jne
daa
inc
outsb
jg
dec
loopne
vprotd
repz
and
dec
hlt
popa
aas
test
ja
aas
mov
sub
or
mov
jle
imul
mov
and
push
mov
mov
push
je
xor
push
mov
sub
outsb
movsl
mov
sub
mov
mov
dec
in
jne
xor
adc
addr16
fmull
lock
test
dec
sub
xchg
pop
jb
das
lds
insl
xchg
mov
sbb
sub
ds
fst
xlat
xchg
pop
cs
and
mov
xchg
jge
jmp
dec
push
mov
inc
call
push
out
and
inc
aaa
inc
cltd
sbb
mov
sub
bound
add
hlt
jle
out
and
cmp
fldenv
es
xor
repnz
lock
fsub
lock
pop
lahf
cmp
or
test
cmp
jmp
adc
xor
inc
out
test
into
mov
scas
add
fnstenv
clc
out
mov
fs
sub
shrl
or
shl
lret
call
push
leave
mov
mov
mov
test
mov
sti
loop
das
subl
cwtl
dec
lods
pop
out
loope
push
dec
stos
ucomiss
lcall
bound
fistl
mov
mov
ret
cmpsl
adc
or
scas
ljmp
mov
lock
lret
jg
mov
dec
data16
sub
jle
dec
mov
pop
in
inc
jl
std
test
sub
pop
loop
and
jl
inc
stc
adc
stos
dec
outsl
decl
adc
arpl
ljmp
hlt
sub
sahf
pop
add
add
mov
adc
in
jae
icebp
pusha
stos
out
mov
repz
outsb
mov
add
inc
pushw
sub
in
in
push
push
ret
pop
in
or
mov
lods
mov
add
mov
mov
daa
loopne
jmp
cmp
or
inc
test
mov
mov
les
or
sahf
xchg
stos
data16
fmull
jno
test
lods
pop
push
or
pushl
inc
jns
into
mov
out
fimuls
xor
nop
test
js
mov
jns
bnd
aas
mov
into
jns
push
jbe
inc
pop
sub
lret
nop
inc
ds
loope
mov
ljmp
cmpsl
inc
add
ljmp
sub
insb
pop
inc
inc
push
lret
cmp
dec
roll
fistpll
outsb
int3
lock
out
adc
jno
loope
fisubs
aam
and
bound
push
ret
cmc
arpl
daa
mov
push
repnz
add
ret
rclb
jae
fcmovnb
sarb
call
adc
roll
pusha
jae
xlat
mov
and
push
mov
stc
or
or
pushf
repnz
mov
mov
dec
lods
mov
out
push
jnp
pop
mov
lret
outsl
jae
jae
test
insl
gs
dec
negl
sbb
mov
jbe
ret
fwait
andl
jle
xlat
pop
jno
hlt
add
ficompl
dec
aaa
rolb
pop
cld
out
int3
lea
nop
js
sarb
xchg
sub
dec
jae
xor
push
ss
or
rol
outsl
hlt
cmp
stos
shlb
dec
jae
ret
add
sar
jl
pop
inc
dec
shlb
arpl
inc
add
add
add
lods
hlt
repz
adc
mov
pop
lret
push
xor
das
cld
jl
dec
loopne
addr16
movsb
shrl
inc
push
jp
mov
or
out
mov
dec
inc
out
mov
jge
sbb
mov
loop
add
inc
das
jmp
xor
or
neg
or
pop
arpl
xchg
push
cmp
sub
loop
mov
fstp
inc
jmp
ja
add
sub
lock
test
outsb
mov
adc
leave
call
int3
mov
inc
das
call
pop
psubsb
and
scas
bound
insb
jg
jb
jl
add
ljmp
pop
jne
dec
ljmp
in
add
jae
push
cli
scas
stc
neg
hlt
imulb
push
outsb
negb
dec
imul
dec
jecxz
test
cmp
jns
call
jle
sbb
scas
jecxz
loopne
daa
cli
mov
out
pop
jnp
cli
hlt
jno
dec
jno
insb
hlt
sbb
or
aas
ret
sbb
or
sub
push
lods
lock
dec
call
dec
in
iret
jmp
loopne
adc
outsl
movsb
jnp
lods
sbb
add
outsb
insb
xchg
mov
and
imull
dec
cmc
mov
jecxz
xchg
and
call
jns
push
shlb
js
jb
pushw
outsl
insb
jb
aas
popa
outsl
mov
jmp
lock
aad
cmc
test
dec
jle
test
mov
stc
or
adc
dec
add
pop
ret
iret
jae
lret
sub
dec
mov
int3
or
dec
pushf
in
pop
call
jo
jl
call
pop
out
lahf
inc
or
cmp
cmp
in
sub
pop
insb
imul
mov
push
xchg
loope
jle
es
popa
xchg
into
lods
iret
dec
mov
rorb
adc
negl
cmpsl
jg,pn
in
inc
push
jb
pop
add
out
sahf
aas
add
mov
mov
scas
pusha
push
add
push
mov
mov
arpl
sub
nop
dec
inc
lea
xorl
mov
call
test
ja
call
scas
dec
rclb
dec
mov
mov
scas
jmp
push
das
add
into
cli
push
ja
call
add
test
dec
iret
outsb
outsb
jg
call
inc
in
into
add
movsl
push
xchg
pop
adc
out
jns
test
popf
dec
scas
mov
lcall
dec
clc
push
scas
jno
sysret
push
cmp
adc
dec
adc
add
jl
mov
data16
loop
and
push
lods
in
sbb
mov
enter
mov
adc
or
in
repz
adc
push
cmc
lods
dec
dec
aaa
mov
ljmp
arpl
add
add
arpl
aaa
mov
enter
or
sbb
jg
xchg
cld
arpl
mov
shlb
mov
clc
push
inc
xor
cltd
sub
jp
out
lods
mov
into
call
outsb
sub
lods
dec
or
ljmp
arpl
mov
repnz
mov
push
push
outsb
lods
mov
in
lea
in
call
outsb
lock
push
fs
dec
rorb
mov
ljmp
arpl
add
sub
rcl
mov
outsb
adc
sub
aaa
sub
cltd
call
test
xchg
movsb
fwait
dec
dec
pusha
movsl
in
dec
and
pop
cmpsb
ja
call
jle
jg
push
scas
or
dec
outsl
push
mov
xor
mov
call
ljmp
sub
lret
call
rclb
add
push
out
inc
btr
sub
jae
hlt
pop
mov
cmp
fcmovu
xrelease
mov
xchg
xor
push
mov
loop
pusha
movsl
jns
cmpb
mulb
int
pop
das
into
push
out
maxps
outsl
loop
mov
or
mov
dec
insb
mov
push
push
cwtl
addr16
xchg
mov
adc
test
jb
xchg
lock
in
loopne
jp
repz
call
scas
jae
adc
das
sub
hlt
jle
notb
xchg
fcomi
enter
outsb
ljmp
jg
push
mov
mov
cmp
push
sub
jmp
aaa
iret
jne
ljmp
fs
out
scas
lds
jb
sbb
cs
jae,pn
call
loop
out
int
jno
lods
jbe
loop
test
jp
dec
add
mov
push
stos
daa
hlt
add
call
fisttpl
dec
fidivs
mov
stos
sub
in
xchg
call
pop
shrb
insl
lods
cltd
in
imul
in
fisubrs
out
sub
add
and
sub
cmc
test
mov
xchg
sub
addr16
cmp
pop
mov
inc
pop
in
adc
jle
push
and
ljmp
dec
das
dec
jp
mov
fidivl
in
lods
dec
xchg
lds
jb
sti
lcall
test
mov
out
add
test
jnp
rorl
test
ja
in
pop
fimuls
out
dec
or
call
mov
or
cmp
in
push
scas
mov
push
mov
add
bound
lods
lods
lods
mov
in
lods
loopne
insl
cld
mov
gs
adc
dec
pop
mov
test
xchg
dec
cwtl
push
push
dec
adc
clc
xchg
adc
in
dec
pusha
clc
mov
ja
xor
jb
in
push
sub
pop
jae
loopne
aaa
enter
xor
jmp
outsb
jae
in
push
jge
xor
insl
nop
mov
inc
rcr
lods
arpl
lods
ja
std
xor
add
pusha
push
jae
ss
jecxz
es
in
jmp
sub
push
mov
jae
call
test
imul
enter
mov
das
xor
or
js
fdivl
int
jmp
loopne
jg
mov
loop
fs
pop
and
add
outsl
xor
or
mov
mov
xlat
shll
insl
inc
outsl
xchg
outsl
movsl
out
sub
adc
enter
sub
dec
lret
gs
scas
test
cmp
mov
scas
loopne
je
pop
out
out
into
jae
jmp
mov
lret
sub
imul
dec
mov
and
je
jg
mov
dec
iret
ret
lahf
dec
test
xor
or
mov
push
push
jb
testb
call
cmp
test
ret
jb
test
js
push
fildll
jno
mov
lock
outsl
icebp
and
mov
jbe
push
mov
fnsave
loopne
jbe
clc
int3
mov
sub
xchg
jns
and
inc
push
sub
clc
clc
xchg
xchg
decl
fwait
mov
scas
and
mov
sbb
push
jb
jp
jg
stos
mov
pop
pusha
loope
inc
stc
sbb
clc
push
add
insb
pop
ss
jmp
jae
fldl
test
inc
cwtl
push
xor
or
pop
outsb
outsl
dec
outsl
dec
mov
xchg
daa
notl
outsl
insb
sub
mov
push
dec
lea
and
push
add
je
mov
jl
insl
push
mov
loop
jb
jmp
xchg
scas
and
mov
push
dec
dec
outsb
outsl
ja
data16
mov
xchg
dec
mov
out
aas
mov
pop
dec
out
stos
mov
call
daa
insl
dec
scas
stos
cmpsb
lea
out
pop
out
dec
in
or
push
test
sub
stos
rclb
scas
lgs
sub
pop
inc
clc
popf
mov
inc
inc
add
pop
mov
sub
xchg
adc
loop
faddl
mov
dec
mov
push
push
lret
dec
insb
lods
mov
jmp
insl
aaa
jecxz
dec
in
sub
push
pop
push
inc
lcall
insb
xchg
pop
jl
outsl
and
mov
xor
pop
xor
xchg
lods
push
dec
jne
test
or
xor
lods
ret
push
fsubl
sbb
pop
and
outsl
and
mov
out
mov
shr
jno
and
cs
hlt
or
mov
mov
je
out
dec
lahf
ja
add
sub
lahf
out
jns
jle
mov
jae
and
mov
xor
add
movsl
cmp
mov
js
push
push
repz
push
outsb
pop
in
mov
cmp
ja
daa
ja
inc
call
scas
ja
icebp
xchg
mov
je
out
xor
test
dec
push
dec
das
jl
shlb
lods
sub
add
add
mov
repz
sbb
sbb
or
es
shll
insb
in
das
cli
outsl
jns
stc
stos
js
mov
mov
push
test
in
dec
inc
mov
jg
cmpsb
lock
hlt
outsl
into
push
sbb
cmc
push
inc
lds
rcr
loope
lods
pop
int3
ficompl
testl
outsl
dec
push
test
pop
dec
mov
loopne
mov
shlb
pop
mov
jge
insl
out
jae
mov
pop
jae
data16
ret
push
xor
jae
shll
jl
push
jmp
mov
dec
pusha
push
divb
leave
push
movsl
mov
test
dec
jne
out
mov
lods
and
dec
xchg
push
movsb
inc
outsb
dec
gs
push
popa
out
sarl
les
push
divb
add
rclb
mov
jmp
mov
dec
outsb
pop
mov
scas
bound
sub
dec
and
jg
pop
stc
scas
xor
sub
add
fistpll
cmpsl
xchg
fists
sahf
pop
ljmp
push
push
outsl
push
push
jle
ja
push
adc
mov
lods
sub
test
add
xchg
hlt
icebp
fdivp
cwtl
pop
fnstcw
dec
dec
ljmp
arpl
test
daa
out
std
sahf
xchg
scas
leave
outsb
outsb
stos
lods
or
call
mov
inc
mov
jle
jp
sbb
mov
ffreep
jp
lods
jb
loop
lods
jl
ja
pusha
notl
ljmp
cmp
dec
jnp
lock
scas
negb
pushf
loope
push
add
jl
popa
mov
stos
orb
mov
dec
jmp
loopne
bnd
gs
or
mov
das
jp
imul
sbb
fidivs
jne
outsb
loop
push
lock
lock
mov
test
push
xchg
test
inc
sti
mov
gs
jg
jge
or
or
cmc
xchg
xchg
icebp
mov
inc
leave
push
add
clc
jmp
bound
addr16
lret
mov
jge
adc
push
adcb
jb
addr16
jecxz
icebp
push
add
popf
out
nop
lock
sub
add
xor
stos
inc
shrb
ja
jbe
test
aas
shll
jne
cli
out
out
stos
fimull
mov
out
je
test
leave
inc
call
hlt
fistps
push
fidivl
cmp
mov
call
inc
imul
outsl
mov
dec
out
jge
test
dec
push
and
sub
repnz
add
cld
idivl
decb
mov
mov
inc
inc
lea
cld
lods
movsl
xor
xchg
aaa
loop
ret
ret
pushf
out
mov
pushf
mov
dec
or
test
push
pop
mov
cmp
jge
ja
mov
push
inc
inc
movsl
mov
jp
pop
loop
lret
outsl
pop
dec
xchg
mov
jl
cld
inc
scas
mov
in
inc
lret
lret
mov
push
pushf
push
repz
xchg
inc
in
imul
push
mov
xchg
inc
icebp
and
jg
fucomi
filds
pop
adc
jle
add
adcb
out
test
sub
mov
or
push
dec
pop
outsb
in
dec
mov
adc
and
test
mov
cld
xchg
ds
add
in
jmp
stos
pop
outsb
jne
shrb
cwtl
mov
es
es
in
js
mov
add
xchg
fs
lret
out
lods
xchg
out
sub
imul
jne
jo
jmp
data16
mov
aas
out
xchg
lods
jmp
shrl
movsl
jmp
outsl
scas
inc
movsb
and
add
jb
mov
pop
addb
xchg
nop
mov
xchg
addr16
cli
adc
push
out
in
xchg
repnz
scas
push
daa
ret
jmp
jno
ja
xchg
jg
es
lret
sbb
dec
jns
in
dec
mov
je
inc
pop
and
mov
push
test
sub
pop
mov
test
adc
push
stos
push
and
out
lods
andb
ret
lods
test
aam
pushf
xor
sub
mov
jns
add
fwait
int3
fs
or
pop
stc
outsb
cltd
xchg
lret
dec
dec
imul
jmp
mov
or
lret
dec
push
jo
cs
dec
sub
testb
out
hlt
std
ja
movsl
fsts
push
lahf
jle
out
mov
iret
inc
fsubrs
scas
nop/reserved
xchg
cmpsl
popa
cmp
push
repnz
or
mov
dec
cmp
iret
mov
negl
pop
outsl
cmp
cld
gs
loop
imul
outsl
sar
pop
mov
cltd
jle
mov
out
insl
xchg
bound
lods
xchg
lock
mov
js
mov
rcl
ror
jle
xchg
fcmovnu
sbb
add
scas
mov
cmp
int
out
inc
xor
imul
clc
imul
outsb
or
pop
lret
or
lods
jo
xchg
aam
or
js
cmp
mulb
dec
mov
jg
out
xchg
dec
mov
jmp
sub
jecxz
pusha
into
lret
outsl
push
sbb
in
into
outsb
inc
out
add
lock
push
mov
jbe
push
jae
cmp
dec
lods
push
imul
arpl
mov
sarb
subl
into
outsl
mov
jle
jnp
add
sbb
pop
push
dec
or
mov
cmpsl
sub
pop
insl
xchg
stc
sbb
pop
push
outsb
jle
cld
push
cs
xchg
cmc
pop
out
inc
inc
out
out
iret
les
popa
fstpl
push
push
xchg
adc
or
cmpsl
pop
orb
inc
addr16
addr16
xor
std
push
mov
dec
push
addr16
jp
push
insl
push
inc
fs
jae,pt
sub
incb
fldenv
es
stc
sbb
clc
cmp
fs
add
test
outsb
mov
mov
std
sar
push
sub
mul
cld
ja
and
lret
push
pop
les
imul
aam
test
fcompl
dec
xchg
jae
outsb
loop
insb
sub
sub
dec
in
data16
pop
addl
loope
inc
por
ljmp
or
fldenv
mov
shrl
sbb
movsb
pusha
mov
test
xchg
jbe
xchg
sub
call
out
clc
imul
lock
adc
in
push
in
sub
dec
insl
sbb
push
xchg
push
cmpsl
test
mov
outsb
inc
mov
lods
push
pop
fisubrs
jmp
fnsave
mov
jl
call
mov
hlt
jne
or
cmpsl
negl
sbb
mov
add
lods
xor
sahf
lods
decl
fildll
dec
test
rorb
cmp
in
out
daa
daa
fmul
enter
movsb
jmp
ds
mov
xchg
call
pop
mov
loop
cmp
jp
popf
loopne
das
push
pop
jge
cmp
sub
dec
aam
xor
dec
pop
test
call
inc
repnz
push
xchg
xchg
nop
insb
ja
lcall
lcall
cmpsl
jmp
jp
call
xchg
xchg
ljmp
and
insl
testl
lods
outsb
aam
add
fldcw
mov
mov
arpl
xlat
ficoml
xchg
push
lods
sahf
or
test
loop
in
sub
repnz
jb
adcb
mov
test
push
jns
pop
xchg
mov
loope
cltd
sub
jne
dec
test
outsl
outsl
mov
ficomps
jbe
fs
out
int3
or
dec
add
jg
pop
pop
inc
fbstp
inc
inc
jle
sbb
adc
hlt
mov
add
test
pop
push
mov
push
cmp
push
lea
ja
std
hlt
inc
mov
movsb
push
or
in
xchg
add
jmp
push
inc
ret
jnp
clc
jle
mov
jl
xchg
ja
lahf
xchg
or
push
les
call
cmp
mov
or
shlb
ret
or
movsl
and
outsl
sub
jg
jmp
outsb
mov
jge
roll
hlt
pushf
repz
jg
xchg
imul
pop
popa
hlt
stc
inc
cli
mov
push
sbb
mov
adc
lret
mov
enter
into
int3
in
cmpsl
out
xchg
es
imul
xchg
jmp
mov
ret
ljmp
mov
xor
movswl
scas
sub
add
scas
pusha
clc
pop
jb
sbb
xchg
mov
out
pusha
js
lea
add
shrb
xchg
ljmp
push
pop
push
dec
xor
divl
fisttpll
clc
cltd
pushf
pop
jae
mov
ja
push
fsubp
cmpl
data16
fs
jae
mov
hlt
mov
loopne
frstor
scas
jno
addr16
cmpsl
ret
sqrtps
mov
shlb
cli
jo
mov
outsb
pusha
in
mov
push
dec
ja
test
and
arpl
mov
scas
dec
fmuls
repnz
lds
sub
in
mov
stos
icebp
xor
imul
insl
add
loop
ljmp
gs
dec
stc
mov
daa
clc
scas
and
add
or
ja
jnp
mov
push
add
ljmp
xor
imul
push
lret
ja
mov
xchg
push
scas
lock
mov
orb
test
loopne
dec
xchg
fisttpl
dec
ret
leave
push
imul
pop
adc
mov
mov
cltd
mov
shll
negl
xchg
int
in
push
pop
jmp
push
or
cs
iret
stos
in
push
jl
lea
or
mov
lds
movsb
cmp
push
mov
arpl
sub
jbe
popl
ret
add
cmp
inc
jle
mov
add
int3
in
lock
ret
imul
fdivl
lea
in
dec
add
pop
pop
lods
mov
or
in
lea
mov
das
or
pop
lea
cmpsl
jmp
add
add
imul
aaa
scas
inc
in
sub
or
test
dec
mov
fldcw
outsl
xchg
pop
arpl
inc
imul
outsb
daa
lods
dec
call
stc
bound
lret
lret
sbb
jno
lret
sbb
inc
cld
icebp
mov
adc
jnp
daa
dec
dec
nop
pop
repz
daa
pop
add
loop
xor
fdivp
cmp
outsb
mov
hlt
cmp
hlt
shll
push
daa
ljmp
push
jecxz
jae
shll
push
sub
inc
cmpsl
aam
mov
dec
mov
push
mov
loopne
push
jns
and
cmp
jl
in
xchg
pop
jno
lds
sub
sub
ja
add
mov
cmpsl
dec
cwtl
push
repz
jb
jns
mov
aad
cmpsl
mov
andl
scas
mov
push
inc
and
jb
push
jmp
lock
xor
mov
scas
out
lock
mov
aas
dec
setae
test
outsl
cs
rclb
xchg
stos
add
dec
in
sub
xchg
lock
pusha
jl
xchg
jg
into
or
cmpsb
pop
inc
leave
rorb
scas
shr
lods
inc
outsl
mov
insb
dec
fnstcw
pop
sub
xor
inc
xchg
out
mov
imulb
iret
cmpsl
imul
inc
push
pop
jb
xrelease
call
add
mov
push
pop
data16
jg
out
mov
cli
inc
push
stc
jae
sbb
in
cmp
in
push
cmp
push
push
pop
cmp
mov
cmp
aas
jb
xchg
jae
xchg
mov
or
mov
sahf
add
orl
pop
pop
out
xchg
sub
push
outsb
in
movsb
loop
sarl
cmpb
xchg
sub
out
outsb
gs
outsb
sarb
inc
jg
dec
push
cmp
ror
out
mov
sub
push
mov
lahf
xchg
xlat
cld
pushf
in
add
dec
outsb
sahf
divl
aam
in
inc
xor
lds
loopne
repnz
lock
jb
push
mov
dec
popa
mov
scas
lock
into
loop
imul
and
mov
addr16
fsubr
lds
bound
fisttps
je
stos
pop
aad
jmp
outsb
sub
inc
mov
dec
scas
lods
dec
lock
scas
mov
cwtl
xlat
out
jle
iret
insb
cmpsb
push
dec
ja
scas
dec
cltd
and
out
fiadds
jo
xor
subb
call
sbb
test
pushf
nop
sub
add
popl
fstl
dec
js
das
pop
out
push
sarb
lea
addr16
scas
cmp
sbbl
outsb
adc
xor
inc
loop
sub
shlb
or
push
repnz
fdivl
cmpsl
in
sbb
mov
or
hlt
sbb
xchg
add
pop
lock
jmp
fmuls
insb
out
and
shl
stos
xchg
xor
pushf
pushf
out
push
sbb
mov
lcall
cmp
orl
bound
xor
shrl
cmpsb
sub
xor
int
mov
shll
xor
pop
lock
pushf
pop
rclb
outsb
sbbl
jmp
mov
mov
pop
sub
arpl
cmp
in
mov
in
mov
xor
pop
adc
js
pop
ja
hlt
cwtl
mov
aaa
ds
pop
mov
push
ja
hlt
xchg
mov
ss
push
mov
pop
ja
hlt
lcall
ds
sbb
hlt
cltd
mov
cmp
pop
sbb
hlt
pushf
mov
cmp
pop
sbb
push
hlt
dec
pop
cmpsb
inc
and
pop
jnp
inc
outsb
xor
or
in
mov
and
sbb
hlt
imul
mov
xchg
mov
scas
pop
out
out
dec
sarb
daa
sbb
add
insl
fwait
pop
je
push
push
dec
out
ja
aaa
mov
ficoms
or
loope
jae
out
ret
test
cs
jbe
lock
nop
mov
ja
push
cmp
push
out
lret
andl
cs
into
dec
push
loopne
imul
dec
out
add
and
test
jl
test
test
pushl
in
out
inc
lcall
cmp
jb
in
push
dec
dec
and
out
cmpsb
mov
cmpsl
prefetch
jno
mov
mov
cmp
jg
out
inc
sbb
ljmp
and
sahf
dec
nop
test
add
lahf
cld
inc
jecxz
or
rorl
cmc
cmpsb
sbb
jle
imul
addb
ret
faddl
mov
lods
mov
je
push
insb
aaa
lods
dec
out
jbe
lahf
ret
loop
ljmp
outsl
jle
ret
addr16
in
lods
in
stos
or
jecxz
adc
push
dec
pop
out
sbb
fisubrs
mov
clc
and
jbe
lods
out
sub
mov
dec
jbe
aaa
scas
xor
insb
add
imul
lods
call
sbb
insb
sub
pop
mov
cmp
or
xchg
jnp
scas
loope
sub
stos
cmp
add
mov
jp
push
loop
js
out
mov
in
in
mov
call
lock
mov
scas
xchg
or
add
mov
scas
jno
lock
call
cmc
inc
outsl
ret
push
dec
ret
cmp
movsl
push
rcrl
testl
lahf
jbe
nop
xchg
mov
cmpsb
nop
mov
xchg
fdivs
outsb
inc
jg
mov
es
ret
and
in
mov
out
mov
mov
outsl
xchg
jbe
out
sbb
fbstp
inc
cwtl
sub
push
dec
sub
mov
imulb
addr16
push
mov
cmpsb
cmp
inc
dec
xchg
test
adc
push
lcall
jmp
lret
fldt
outsl
inc
jb
out
or
mov
jecxz
clc
fisubrs
push
dec
or
int3
adc
insl
dec
roll
push
adc
jmp
out
fbstp
dec
nop
scas
out
repz
adc
inc
mov
dec
outsb
sub
inc
out
das
shrl
push
data16
cmpsl
mov
jle
cmp
enter
ud0
movsl
int
jle
and
and
cmp
lret
lret
jae
pop
lock
ds
pusha
lret
sti
jle
inc
in
cmp
push
loope
jae
xchg
in
dec
ss
lea
pop
enter
mov
fisubs
scas
cmpsl
scas
les
inc
popa
out
loop
mov
jl
dec
out
hlt
cmpsl
jmp
sbb
int
mov
push
jae
pop
mov
pop
inc
mov
nop
add
enter
cmc
in
and
lods
and
push
loopne
scas
lods
data16
outsl
hlt
clc
popa
imul
es
ret
hlt
pushf
lcall
mov
jbe
adc
cltd
scas
loope
mov
push
stos
sbb
je
call
mov
pop
cli
xchg
cmpsl
jbe
add
stos
imul
cwtl
nop
lds
jne
mov
mull
mov
push
loop
dec
xor
push
push
arpl
xchg
xchg
mov
hlt
xacquire
nop
mov
xchg
clc
out
add
mov
and
loope
lock
sbb
dec
mov
out
aas
mov
nop
mov
imul
dec
mov
xor
jb
imull
or
jmp
and
mov
push
test
bound
je
es
nop
ss
and
insb
jge
cmpsl
icebp
fistl
pop
cmc
outsl
pop
xchg
sbb
sarl
xlat
outsl
sbb
incb
mov
add
mov
es
loop
push
inc
sbbl
je
xlat
hlt
movsl
push
push
add
ret
and
lods
sub
lahf
fistpll
mov
push
push
ds
out
xlat
xchg
jle
jl
stos
lret
or
add
enter
dec
inc
sbb
lds
stos
ret
mov
les
adc
out
jae
jb
and
adc
cmp
mov
sbb
nop
pop
fstps
mov
mov
jl
jno
lock
int3
pusha
mov
mov
dec
nop
lahf
or
dec
sub
mov
xor
clc
cli
subb
mov
dec
pop
insl
jns
outsb
dec
je
stc
mov
icebp
dec
hlt
mov
lock
stos
jne
clc
outsl
fsubp
cmc
outsl
ja
add
lcall
or
fnstenv
aad
adc
test
cld
ja
push
rorl
pop
sahf
push
mov
out
shr
sbb
outsb
mov
mov
orl
out
in
mov
stos
jmp
outsb
nop
aaa
cs
leave
jbe
inc
insb
lds
xlat
out
aad
lret
add
outsb
aaa
fisttpl
mov
lea
xchg
lock
lret
jl
je
scas
jne
xchg
and
cmp
shll
xor
cltd
jg
fisubs
jg
jno
push
rorb
lock
sub
jp
fcmove
push
push
or
sahf
pop
test
cwtl
push
mov
inc
adc
jbe
and
inc
jg
scas
jle
adc
icebp
cmp
push
lret
out
inc
mov
ret
scas
jmp
or
xchg
es
imul
divb
fsubrs
mov
dec
push
ret
fcmovnu
mov
and
jae
sti
cmp
adc
inc
es
xor
test
cltd
mov
dec
sub
xor
enter
ljmp
imul
jns
push
ret
test
stos
mov
push
lahf
mov
call
sbb
mov
ja
pop
jp
mov
int
mov
add
mov
mov
loop
add
pushf
inc
cmpsl
or
mov
loope
jmp
and
push
scas
sbb
bound
jb
nop
pop
mov
add
jns
fucomip
lods
loopne
mov
ds
je
out
push
addb
lods
mov
lds
xor
xchg
popa
stc
add
daa
push
jecxz
loop
push
ret
ljmp
divl
ds
xlat
jno
pop
and
dec
sahf
scas
mov
xor
data16
push
mov
push
mov
into
imul
inc
call
outsb
in
xchg
repnz
out
or
mov
push
mov
movsb
xor
insb
outsb
cmp
pop
adc
push
dec
jmp
into
out
sub
and
popa
outsl
sbb
outsb
mov
cmp
mov
jnp
ror
cmp
dec
inc
pop
jecxz
pop
lea
clc
daa
lret
ret
fimull
jle
push
insb
mov
insl
out
push
and
mov
inc
adc
cmp
into
insl
push
gs
adcl
and
dec
add
clc
dec
fst
pop
adc
sub
mov
lock
outsb
push
ds
movsl
push
aad
mov
inc
push
inc
ja
in
jmp
cmpsb
adc
fmulp
push
arpl
and
inc
adc
rol
fcomi
cmp
call
ja
cli
nop
mov
sarl
push
mov
pushf
and
subl
or
es
or
dec
or
mov
pushf
mov
insb
scas
adc
dec
cld
outsl
int
adc
pusha
imul
out
dec
icebp
int3
incb
imul
sbb
push
je
cmpsb
dec
es
lds
in
add
faddl
imul
lods
and
xchg
sbb
mov
andl
xchg
xor
imul
dec
out
call
push
pop
adcb
sbb
or
loop
test
enter
mov
mov
cmc
or
xchg
dec
in
jns
jmp
cwtl
cld
xchg
outsl
test
arpl
ljmp
lret
dec
adc
aaa
movsb
push
mov
outsb
call
iret
insl
mov
add
cwtl
xchg
pop
push
outsb
aaa
mov
xchg
imul
into
es
rcrb
push
bound
add
xchg
dec
dec
mov
jmp
lds
push
cmp
data16
iret
mov
insb
iret
push
push
incl
inc
push
out
gs
dec
loopne
sub
xchg
sub
cmp
jecxz
mov
popa
loope
jle
jae
fadds
in
lret
rcrb
leave
sbbb
mov
xchg
std
pop
ljmp
into
add
outsl
xchg
int
ja
push
fisubrs
jge
fdivs
xchg
mov
or
loopne
cmpsl
push
in
into
mov
or
add
xchg
cld
dec
imul
pop
pop
outsb
and
andb
in
mov
cmp
add
cmp
sbb
gs
in
push
mov
cmc
jge
jl
clc
outsl
ja
ja,pt
mov
dec
and
sub
in
ret
mov
pop
out
sub
mov
xor
xor
shr
aad
gs
cmpsl
test
jbe
mulb
xor
bound
test
stos
mov
mov
jb
lods
sub
cmp
add
mov
or
dec
add
mov
jne
imul
imul
fsubl
cmpsb
inc
movsb
shrl
cmpb
lahf
es
addr16
cli
cmp
aam
mov
int3
cmpsb
adc
in
dec
cmp
cld
or
clc
xchg
in
pop
jae
xchg
push
imul
lods
sti
daa
outsl
clc
cli
sub
mov
lea
jnp
pop
inc
push
scas
outsb
pop
xchg
inc
cld
jae
in
dec
ds
mov
les
test
jg
pop
inc
push
or
mov
outsl
imul
pop
test
jbe
addb
adc
jnp
mov
xor
jnp
adc
and
mov
inc
pop
jo
outsb
pop
adc
out
out
insb
inc
addr16
mov
jb
outsl
pop
test
jbe
push
pop
ret
adc
jae
rcll
outsb
nop
pop
jns
xchg
cmp
pop
in
repz
mov
in
push
sbb
sar
dec
rclb
out
addr16
lock
mov
xor
mov
mov
cmc
xor
movsb
push
cmp
pop
dec
xor
push
fdiv
cmpsl
ret
jne
xlat
je
mov
notb
ret
cmp
dec
dec
adc
aad
repnz
push
jg
xchg
cltd
orl
in
outsl
jecxz
mov
xor
inc
jo
push
xor
dec
out
mov
mov
cmp
fmull
xchg
jge
in
mov
fldl
loopne
in
adc
xor
out
mov
ret
in
mov
mov
subl
scas
das
out
jns
xchg
jno
rorl
iret
mov
jbe
imul
mov
fsubr
clc
hlt
movsb
pop
repz
and
fstps
lods
lds
leave
ja
inc
cmp
insb
sub
out
popa
icebp
mov
sub
scas
in
lods
scas
dec
outsb
in
call
es
aaa
out
subl
je,pt
pavgw
sub
and
popa
repnz
fldcw
insl
dec
jle
add
or
testl
mov
mov
mov
ret
push
fsubl
add
out
push
adc
orb
jmp
packssdw
adc
aaa
push
mov
outsl
jb
inc
push
xchg
xor
jmp
adc
add
fdivs
jmp
lock
aad
cmpsl
outsb
sub
sbb
push
fdivl
mov
lock
xchg
imul
jbe
pop
outsb
jns
and
inc
push
dec
mov
pushf
xor
dec
in
add
out
pop
orb
dec
adc
mov
test
dec
inc
inc
data16
std
jle
jg
out
lods
ja
fcomi
adc
adcb
lea
mov
lock
push
iret
out
lret
mov
frstpm(287
pop
mov
and
xor
pop
xlat
push
jmp
mull
fldcw
and
adc
fwait
cmp
insl
rclb
out
in
fidivs
adc
shll
sub
mov
out
xor
fsubs
lahf
nop
scas
insb
pop
push
test
imul
adc
in
daa
jno
rorl
mov
nop
ja
ja
sbb
mov
xchg
or
mov
loope
sub
mov
cmc
xor
push
pop
fimull
push
cmp
push
cmc
mov
outsl
repz
mov
add
in
fisubs
and
fsubr
sub
inc
inc
leave
out
loopne
out
mov
icebp
shrl
mov
mov
daa
das
test
dec
cmpsb
xlat
repnz
lret
mov
cli
in
inc
push
jmp
iretw
ljmp
cltd
mov
lods
fidivl
je
jno
ja
mov
mov
repnz
loope
pushw
notl
mov
cs
inc
push
scas
adc
dec
in
jne
cwtl
jae
into
out
pop
scas
inc
add
out
inc
out
ret
rcl
fsubl
inc
add
push
es
mov
cltd
out
mov
mov
mov
xchg
adcl
jb
inc
movsb
nop
js
inc
stc
lahf
mov
rorb
in
shr
add
lret
cs
aas
shr
fnsave
pop
das
xchg
iret
fsubrs
aaa
push
scas
mov
arpl
imull
ret
hlt
in
xchg
adc
jno
icebp
xchg
ja
lds
jmp
clc
cmpsl
and
addb
aaa
iret
add
or
ja
mov
stos
push
aaa
jae
cmp
and
sub
pop
outsl
adc
dec
pop
add
loop
enter
xchg
mov
out
addr16
in
sub
adc
repnz
je
lods
in
movsb
mov
xor
and
mov
shr
mov
in
and
fidivl
outsl
movsb
lret
aas
mov
adc
cwtl
nop
pop
push
pop
imul
push
xchg
leave
mov
pusha
and
shl
dec
ljmp
enter
jae
lahf
jbe
neg
inc
push
ljmp
sub
test
jp
xor
jae
pop
pop
clc
pop
int3
inc
repnz
aad
test
mov
pop
push
inc
leave
iret
mov
lods
sub
cwtl
dec
into
pop
daa
xchg
mov
push
xchg
mov
inc
pusha
xor
push
ja
xorb
cld
into
add
dec
push
in
fucomip
dec
mov
mov
ret
scas
aaa
incb
mov
daa
ficoms
inc
mov
in
pop
mov
inc
aaa
inc
sahf
dec
addr16
fistpll
enter
mov
es
jle
call
ret
sbb
dec
daa
sbb
and
rclb
popa
pop
leave
daa
int
mov
daa
push
sub
testl
push
add
fisttps
jl
push
lcall
mov
push
jge
mov
sbb
push
popa
es
push
daa
mov
loop
jno
jns
cmp
loop
mov
ja
dec
dec
inc
pop
adc
xor
lahf
pop
lcall
xchg
and
lahf
pop
dec
jle
mov
loopne
fiadds
daa
and
xor
in
mov
xchg
adc
mov
dec
push
xor
push
xchg
lock
scas
imul
cmp
adc
sbb
push
jmp
push
cwtl
add
dec
push
int3
ljmp
adc
mov
into
stos
xchg
pop
enter
loop
mov
dec
pop
test
jl
ret
ja
mov
movsb
insb
xchg
dec
mov
jl
or
jge
and
sub
push
push
int3
cmpl
outsl
jmp
pop
repz
iret
es
fistl
adc
and
or
aad
mov
into
fadds
in
aaa
push
inc
jl
adc
or
push
in
mov
pushf
sbb
stc
cltd
repz
mov
cwtl
push
inc
sub
and
mov
push
mov
pop
inc
add
jbe
jb
or
outsl
pop
rclb
sub
psrad
jp
stos
sbb
dec
pop
sti
inc
imul
mov
scas
sahf
ret
jns
mov
iret
cwtl
adc
jno
mov
push
scas
lods
popa
fwait
jno
fs
or
js
icebp
jg
dec
xchg
cmpsb
cs
push
aaa
jb
rorb
add
lods
fwait
popa
jge
out
enter
mov
xor
sbb
cmp
inc
cmp
xchg
lods
sub
xchg
das
add
mov
dec
pushf
sub
xorb
lds
popf
xchg
ljmp
jg
mov
pop
in
dec
movsl
ss
jno
lock
mov
mov
adc
sub
into
push
pop
das
xor
faddp
popf
gs
movl
pushf
mov
sub
je
add
cli
jne
iret
jb
repz
aam
nop
xor
mov
add
ljmp
insl
nop
arpl
cltd
insl
nop
loopne
push
mov
ljmp
dec
and
fwait
cld
ss
loopne
pop
leave
push
jl
push
outsl
or
or
cmp
mov
inc
push
pop
mul
data16
cltd
imul
push
adc
sub
std
lock
loope
pop
ret
lock
and
rcll
jae
lret
sbb
and
sub
and
ja
xchg
fs
jb
mov
inc
cmp
mov
int3
sub
push
movsl
pop
push
dec
mov
jl
cmpsb
movl
dec
fdivrp
cmp
insb
jle
or
mov
cld
outsl
dec
out
jnp
out
ficoms
and
mul
fcomps
scas
sbb
lret
rolb
xor
push
jp
or
mov
stc
test
jl
imulb
push
jle
or
xor
mov
pop
lods
mov
pop
mov
dec
or
mov
cmc
ret
divb
cmpsl
push
cmp
push
insb
notl
mov
pop
ds
lret
decb
insb
mov
dec
sub
rorl
pop
cmc
xchg
dec
hlt
jae
in
jne
mov
cmpsb
data16
out
int
ret
and
movsl
gs
aas
fwait
or
outsl
into
ds
out
outsb
xor
neg
ljmp
push
jae
fcmovnu
fwait
mov
mov
cltd
dec
mov
sti
data16
sbb
inc
and
adc
ret
jno
filds
mov
mov
jnp
inc
outsl
scas
fsub
imul
pop
inc
lock
sti
je
mov
push
daa
aad
push
scas
xchg
inc
fcmove
pop
cld
and
xlat
idiv
push
add
sbb
cmpl
mov
cmp
jnp
lret
jae
sub
or
repz
sti
xchg
std
pop
scas
pop
in
mov
push
loope
mov
outsl
mov
mov
lods
xchg
push
fs
jae
in
ljmp
jle
mov
mov
xchg
dec
jecxz
loopne
push
mov
xor
lahf
cwtl
fidivrs
jno
std
or
dec
mov
jl
and
je
std
scas
lock
subb
cld
pop
scas
add
ret
fstl
int3
addr16
shlb
xchg
insl
dec
scas
int3
pop
pop
out
idivl
jg
lahf
loope
push
inc
into
xor
mov
orb
nop
xchg
addr16
inc
in
pop
push
sub
leave
movsb
and
outsb
adcb
sub
popf
shll
jb
mov
ret
mov
inc
or
mov
fdivrs
cltd
scas
cmc
mov
and
adc
cmp
mov
inc
dec
pop
cmp
add
scas
lcall
adc
insl
scas
adc
pop
scas
inc
or
dec
push
or
fdivl
pop
mov
sbb
popa
in
jbe
cmpsb
sbb
popa
shrl
mov
ja
sbb
jo
test
jne
jge
shr
inc
gs
nop
lcall
mov
scas
ret
mov
xchg
enter
jbe
fcmovne
mov
ret
pop
in
mov
addr16
shl
lea
jno
adc
icebp
mov
cmp
mov
cld
pushf
mov
shll
pop
bound
int
dec
mov
jg
pop
xor
sub
jns
sti
scas
jl
iret
call
hlt
sbb
or
std
in
jmp
xor
movsb
repz
jnp
fistpll
into
aam
push
jecxz
and
repz
cld
and
js
mov
cli
fildll
jmp
pop
xor
sti
shlb
pusha
shlb
mov
mov
in
mov
loope
shlb
push
adc
cli
jne
cmp
push
call
cmp
out
ljmp
cs
mov
add
cmp
cmp
fsubr
push
lcall
leave
cmp
shll
dec
dec
mov
stos
nop
mov
sbb
cltd
movsl
lods
jp
jle,pn
jmp
gs
mov
jb
pop
test
pop
mov
stc
xlat
push
or
mov
mov
fadd
mov
mov
push
mov
inc
adc
mov
enter
pop
ja
dec
enter
iret
outsl
pop
push
jae
cld
stos
jmp
or
jle
addl
into
imulb
jg
hlt
scas
jmp
mov
jbe
sbb
mov
xor
sub
push
and
cmp
or
mov
roll
push
push
mov
xchg
arpl
in
cli
cmpsb
sbbl
pop
pusha
inc
and
cmp
mov
dec
xor
pushf
outsl
negl
jbe
stos
out
ja
repz
insb
pop
push
out
div
add
cmp
pop
insl
stos
cmpsb
pop
adc
pop
or
sbb
insl
inc
mov
sub
nop
ficoms
or
pop
push
jle
mov
addr16
pop
insb
push
xchg
dec
add
dec
jmp
call
push
scas
xchg
jl
sub
dec
push
mov
lock
and
icebp
xchg
test
or
jg
jb
push
gs
or
lock
idivb
jge
pop
mov
add
test
mov
out
push
dec
pop
lds
sbb
rclb
and
int3
pusha
pop
mov
cmc
xchg
mov
push
data16
out
xchg
mov
sub
mov
mov
push
cmp
xor
xchg
dec
cmpsl
hlt
loope
push
mov
mov
xchg
dec
and
mov
in
mov
xchg
test
mov
mov
jnp
repnz
xor
xchg
outsb
jg
xor
icebp
test
or
stos
cmpb
sub
sar
inc
jg
xchg
imul
pusha
clc
addl
xchg
lret
xchg
hlt
cltd
mov
fidivs
dec
loopne
imul
xchg
je
iret
xchg
das
notl
sbb
mov
icebp
insb
pop
fnsave
out
dec
das
adcb
sbb
rorl
dec
rcr
clc
in
and
outsb
push
jae
lahf
xchg
cltd
or
cmpsl
pop
clts
xor
stos
mov
int
das
and
pop
scas
aaa
inc
bound
ja
repnz
shrb
adc
dec
jno
push
testl
icebp
dec
rcl
dec
inc
dec
jge
pop
pop
iret
pop
push
sti
cmpsl
lret
push
jecxz
lahf
loopne
test
sahf
or
cmc
ret
mov
stc
cltd
ja
in
jne
add
testb
insl
loope
mov
add
or
loop
lods
mov
jo
xchg
push
mov
and
dec
jg
mov
jmp
cmc
dec
dec
aad
addr16
pop
je
xchg
jb
movsl
lods
jg
daa
scas
nop
inc
ret
lret
or
cltd
push
pop
lret
dec
mov
push
stc
movb
xor
xchg
mov
dec
fcomps
rcll
cltd
or
ret
jge
es
ja
mov
and
movsl
fisttpll
mov
xor
data16
pop
out
jl
adc
lock
lock
push
mov
out
jns
and
xor
aad
mov
data16
loop
cmpsl
repz
das
xor
mov
fsub
sahf
repnz
xchg
jbe
aad
and
cltd
lock
sahf
xor
insb
push
mov
out
cmpsb
sahf
dec
ljmp
addr16
mov
add
movsl
lea
adc
xor
push
es
out
dec
pop
mov
ja
jmp
dec
mov
jno
je
mov
push
adc
lods
push
sahf
xchg
adc
jae
std
inc
ss
mov
idivb
cs
fsubs
push
mov
imul
inc
mov
adc
insb
mov
loopne
loope
addl
in
pop
mulb
sub
lahf
add
adc
xchg
int3
in
aaa
repnz
cmpsb
lods
arpl
xchg
push
ret
loope
push
adc
pop
sbb
inc
bound
loopne
stc
mov
pop
clc
enter
lods
xchg
mov
add
jmp
sahf
adc
insb
hlt
push
lcall
push
or
mov
jl
adc
je,pn
jb
js
ficoms
sbb
or
jle
std
inc
cmpsb
insb
dec
push
jae
mov
subb
jno
jl
outsb
enter
cmpsb
pop
fimull
scas
pop
push
cli
out
push
add
mov
jp
xor
imul
xchg
enter
dec
jmp
rcrb
jae
jns
push
iret
add
xor
insl
loopne
and
sub
enter
daa
mov
or
push
lods
sub
dec
hlt
pop
int3
push
imul
stc
cmpsl
imul
idivb
in
jle
mov
lods
out
jne
and
in
and
xchg
push
inc
testb
sub
test
mov
add
out
int
shll
icebp
test
cmpsb
sub
in
inc
or
faddl
in
ljmp
jge
aaa
sub
stos
mov
shll
dec
sbb
sub
xchg
bound
arpl
test
fwait
mov
push
push
imul
punpckhwd
dec
ret
mov
dec
leave
scas
and
push
dec
mov
pop
cmc
out
loope
lea
test
push
jecxz
outsl
jg
daa
dec
dec
bound
jnp
pop
jne
jnp
stc
loop
add
dec
lods
loope
fnsave
adc
in
inc
cmpsb
pop
sbb
loope
lret
dec
cmp
jae
pop
repnz
adc
mov
jno
sbb
pop
jb
mov
push
adc
xchg
dec
test
pop
xchg
mov
mov
loope
pop
jae
cmpsb
sarl
push
mov
jb
add
ret
xchg
adc
adc
ret
inc
stos
dec
xlat
ja
push
inc
mov
jg
cmpsl
push
ljmp
fimuls
insb
outsl
inc
add
jbe
popa
push
bound
in
fwait
or
sbb
add
nop
push
mov
lret
sbb
adc
pop
or
xor
test
or
mov
or
mov
hlt
sbb
ja
add
push
add
xchg
movsl
mov
dec
ljmp
mov
fwait
push
daa
sub
addr16
in
mov
sbb
and
add
scas
popf
idiv
out
fstp
sbb
add
movsl
ds
call
and
cwtl
dec
jbe
loopne
clc
aam
aaa
cmp
mov
inc
pop
test
das
mov
mov
dec
pop
hlt
test
stos
xchg
pop
nop
sub
adcl
mov
mov
adc
pushf
or
add
test
jne
push
add
scas
xchg
outsb
cmp
mov
pushf
inc
hlt
or
ja
popa
pop
sarl
lahf
lret
imul
call
jg
int
enter
cmp
shr
jge
outsb
xchg
mov
ds
mov
shll
cmpsl
sti
imul
mov
mov
scas
aam
dec
xchg
add
lcall
or
repnz
adc
mov
mov
sub
ret
cmp
stos
stc
inc
or
sub
repz
pop
gs
add
out
dec
mov
xchg
jg
pushf
push
imul
cmp
lret
jbe
loopne
mov
lret
inc
cmpsl
ljmp
push
jns
add
pop
adc
xchg
xchg
imull
rcll
xor
insl
negl
pop
repz
shr
js
pop
decl
push
dec
mov
lods
in
mov
dec
jl
pop
push
decb
rorb
jl
imul
push
movsl
ss
sahf
cmpsb
cmc
lahf
cmp
sbb
inc
cld
or
jge
ja
repnz
lret
inc
push
and
xchg
outsb
pop
cmpsb
or
and
jb
xchg
adc
aad
jno
xchg
lahf
adc
mov
sub
dec
push
sahf
or
ret
enter
push
sub
xchg
inc
subl
mov
in
cmc
out
fistl
shll
push
sub
clc
sarl
dec
test
inc
outsb
cmp
pop
jns
cmp
out
lret
int
clc
add
mov
jnp
popf
push
sbb
iret
je
pop
pop
push
cmpsl
clc
push
pop
fistpll
not
sbb
idivb
sub
push
jecxz
pop
shl
or
shl
cmp
mov
push
sub
out
add
icebp
and
nop
jns
test
mov
bnd
dec
pusha
shll
psrad
or
test
shll
aas
cmp
push
repnz
xlat
fldt
xchg
adc
jmp
in
ljmp
fildll
push
in
addr16
in
push
scas
cmp
jb
imul
lcall
call
mov
sub
jge
enter
loopne
push
push
call
jns
fucomip
inc
mov
pop
fstps
ret
adc
add
clc
out
push
lods
nop
or
lods
divb
into
in
dec
lahf
mov
leave
outsb
sbb
mov
ja
ret
inc
or
loope
cli
arpl
int3
mov
icebp
sub
insb
push
xchg
loopne
pop
clc
popa
mov
loopne
imul
jnp
cmp
cmpb
mov
sub
xor
dec
in
ja
test
push
int
push
mov
cs
cmp
push
sub
cmpsl
xlat
inc
stos
push
mov
pop
loop
insl
aaa
inc
and
int
jecxz
loopne
test
fsubrs
movsl
stos
ja
imul
push
adc
mov
mov
inc
cmp
in
incl
hlt
jno
fbstp
push
outsb
fnstsw
mov
push
xor
mov
adc
jno
mov
mov
sub
inc
int
int
dec
sub
cmp
jns
cmpsl
sti
test
and
xchg
jne
add
pop
cmp
out
outsb
shll
push
and
popa
xor
and
in
mov
imul
inc
out
and
adc
test
int3
aaa
mov
push
xchg
pop
mov
int3
jbe
addb
addr16
push
push
jmp
mov
jae
inc
shrb
and
jo
mov
pop
jecxz
sub
sub
pop
xchg
loop
xor
dec
fisttps
mov
in
dec
sbb
push
push
loope
and
dec
test
int
repnz
jmp
lods
outsb
add
and
push
push
add
sti
xorb
repz
inc
sub
cwtl
sub
inc
and
inc
add
fldenv
pop
jmp
rcrl
sub
or
mov
xchg
jae
push
shlb
sub
push
ret
dec
out
icebp
or
xchg
int3
lods
dec
adc
or
xchg
addr16
out
fdivrs
mov
sub
gs
ret
lret
mov
mov
testl
in
jecxz
push
test
ss
rcrl
adc
ss
pusha
pop
jae
repnz
or
jne
popf
cmpb
cmpsb
into
in
cli
lret
mov
sub
out
scas
fwait
in
xor
adc
push
ss
movsl
lock
and
mov
pop
test
adc
sbb
xchg
cli
outsl
jge
dec
dec
ja
jbe
ud1
jbe
adc
cld
lret
arpl
out
int3
loop
lret
lods
ljmp
test
sub
cwtl
cltd
ss
fldt
pop
xor
into
lcall
push
sbb
xor
loopne
dec
js
inc
out
mov
outsl
and
dec
in
and
outsb
adc
aad
mov
insl
xor
test
out
arpl
xchg
addr16
fisttps
inc
dec
das
scas
fnsave
xlat
out
in
adcl
movsl
test
int3
outsl
push
cmp
inc
iret
jle
outsb
iret
xchg
vpcmpeqw
push
xchg
clc
xchg
insb
sbb
in
cmp
mov
stos
in
test
inc
mov
adc
mov
cs
in
pop
nop
lahf
aam
xchg
jl
in
inc
sbb
call
dec
sbb
push
in
cli
push
mov
jmp
mov
fbstp
inc
inc
cwtl
inc
or
jmp
je
xor
sbb
mov
push
imul
mov
jmp
lods
lock
out
out
pop
add
test
jae
pop
aad
jno
mov
ljmp
stos
sbb
push
dec
loopne
fwait
or
add
addr16
in
sahf
inc
jge
pop
push
jg
xchg
mov
xchg
imul
out
jae
call
minps
repz
mov
imul
addr16
inc
shrl
mov
pushf
iret
cli
out
addr16
sbb
out
mov
loop
dec
add
mov
and
pop
pusha
popa
mov
mov
into
push
cmp
cmp
xchg
dec
jp
in
lods
addr16
pop
push
inc
sub
aas
cld
cmpsb
out
enter
movsb
fwait
movsl
fwait
sub
jmp
xor
data16
lods
push
outsl
stos
call
cmp
cwtl
push
sti
movsl
mov
lret
lsl
push
sbbb
push
xchg
xchg
push
insb
das
jg
out
jns
xchg
pop
cmpsl
jae
loope
stos
jmp
lcall
in
dec
popa
lods
mov
and
scas
fisubrl
data16
cwtl
cmp
push
jg
cld
fisttps
enter
pop
out
lods
jns
ficompl
lods
arpl
dec
jmp
jle
jg
test
popf
dec
jge
push
add
jle
fstpl
fucom
js
sbb
pop
aas
test
dec
cmp
rep
loopne
jbe
aas
lods
lock
out
in
dec
dec
test
pop
in
lods
cmpsb
dec
imulb
add
ja
call
out
addb
or
repnz
fsubp
cld
dec
rcrl
dec
jmp
iret
aaa
dec
repz
sbb
xchg
dec
cld
sbb
outsb
mov
jmp
roll
ljmp
jg
in
dec
sbb
dec
jmp
sub
out
ret
jbe
jecxz
in
outsl
and
addb
xchg
test
add
outsl
dec
add
jns
dec
insb
outsl
out
in
lods
push
outsb
icebp
mov
inc
cmp
xorl
loope
lock
cmc
dec
jnp
insl
add
ja
call
out
call
stc
outsb
in
jge
js
dec
loop
pop
add
jle
jg
test
rorb
les
daa
jg
stc
outsb
out
jno
jbe
mov
mov
stos
outsl
out
pop
in
lods
dec
dec
add
xchg
scas
outsb
outsb
in
mov
call
dec
call
loopne
in
aad
in
mov
dec
loop
testl
dec
cltd
outsl
loop
push
dec
cld
outsb
mov
insl
call
out
jbe
test
outsb
gs
ja
call
lock
cmc
jns
test
and
mov
test
call
lock
call
outsl
mov
cwtl
xor
xchg
add
inc
add
and
jecxz
adc
insl
dec
insl
hlt
inc
fimull
add
cld
jmp
and
iret
in
add
in
mov
call
cld
imul
xorb
insl
inc
mov
insl
xchg
iret
cmp
jbe
insl
je
inc
in
les
push
insl
mov
insl
push
sbb
adc
out
sbbb
insb
outsb
shrb
dec
xchg
ja
mov
insl
jle
hlt
cmp
bound
dec
jmp
arpl
outsl
cmp
adc
push
xchg
es
loop
lods
out
popa
in
icebp
mov
jbe
repnz
jns
push
ja
mov
imul
inc
popa
sub
jecxz
mov
pop
out
std
cltd
mov
pop
or
les
cmpsb
jle
jle
fmull
iret
push
mov
xor
arpl
popa
mov
inc
scas
jb
addr16
cli
dec
call
mov
cld
insb
ret
mov
iret
cmpsl
insl
arpl
push
pop
pop
insl
xor
stc
into
cmp
pop
out
ja
mov
inc
pushf
divb
divb
sub
call
arpl
stc
outsb
data16
andb
pop
bound
jecxz
imul
mov
insb
dec
xor
ret
in
jl
nop
outsb
out
cmp
mov
dec
shrb
or
pop
mov
outsl
jle
daa
leave
ret
mov
sti
aaa
add
cmpb
das
dec
stc
call
movsb
jle
outsl
cs
call
and
push
mov
adc
mov
jecxz
out
mov
push
mov
lock
and
callw
outsb
outsb
jle
fsub
or
rorb
leave
add
jmp
out
dec
push
iret
data16
add
mov
psubsb
les
sub
mov
call
ror
sbb
ret
enter
jmp
movl
dec
rorb
shrl
js
out
push
addr16
ret
call
into
ljmp
inc
movd
mov
arpl
movsl
lock
stc
iret
push
mov
shl
jne
adc
jmp
jnp
fldcw
cmp
outsb
call
jp
insl
sub
stos
lock
jne
jg
je
in
outsl
enter
imul
dec
cwtl
les
fs
das
cmpsl
scas
insl
push
insb
jge
push
and
push
push
jmp
outsb
jge
pslld
outsl
insl
fisubl
mov
outsb
jmp
bound
pop
dec
dec
sbbb
jg
out
out
add
fisubrs
je
outsb
insb
jns
imul
dec
imul
jns
push
inc
clc
dec
out
scas
in
push
mov
outsl
mov
js
pop
arpl
mov
out
rep
in
push
pop
icebp
scas
lea
cmp
pushf
jle
mov
push
idiv
dec
insb
addr16
dec
insl
push
push
mov
sub
loope
jnp
mov
lods
jmp
jp
bound
or
pop
testb
pop
cmp
stc
pop
insb
out
shlb
jb
jne
inc
pop
in
std
dec
ja
dec
jp
outsl
cld
mov
insb
in
pop
iret
out
mov
ja
out
cmp
bswap
fmull
loopne
popf
mov
mov
test
test
clc
pop
sbb
cmp
je
jge
in
test
call
lock
arpl
ret
cmpb
pop
cwtl
and
lock
push
mov
dec
ret
aad
inc
lods
pop
inc
push
or
imul
jl
jecxz
push
dec
inc
fstpt
dec
mov
push
bound
or
rorb
fwait
mov
enter
jns
fistl
pop
outsl
sub
push
push
out
sbb
push
jbe
call
add
jmp
outsl
sbb
jmp
mov
ret
cmc
jne
mov
sub
je
pop
int3
xchg
jne
stos
pop
loope
push
cld
mov
data16
jns
out
ds
dec
add
lahf
loop
and
imul
fst
mov
sub
in
inc
popa
sub
pop
outsl
jecxz
call
cmc
or
sub
jnp
int3
dec
mov
push
xchg
int3
pop
xchg
xchg
jge
add
xchg
jmp
dec
fwait
mov
loop
xor
mov
in
lods
cld
popl
psrad
iret
add
xor
pusha
rorb
bound
lods
pop
push
push
cmpsb
pop
ja
mov
pop
imul
xchg
insb
xchg
lahf
mov
daa
out
mov
mov
call
push
jbe
pop
xchg
bound
addr16
and
cmpsl
fildll
cmc
scas
push
pop
jp
push
shlb
lods
in
pop
pop
jl
bound
mov
xor
mov
mov
mov
push
ljmp
sti
fimuls
mov
inc
adc
inc
test
ljmp
mov
out
lds
outsl
sub
jmp
scas
pop
pop
add
dec
loopne
inc
lock
sbb
push
out
pushf
aad
ljmp
sub
leave
rorb
add
jbe
in
arpl
sub
inc
pop
stos
sahf
inc
inc
pop
cmpsl
jns
push
jle
sbb
jg
mov
mov
testl
fimuls
add
xchg
cld
loope
loopne
add
loop
outsl
lahf
cld
rorl
dec
in
insb
in
enter
test
mov
or
inc
les
movsb
push
ja
pop
xchg
or
popa
lcall
pop
xor
inc
iret
test
addr16
aas
je
inc
push
or
mov
dec
or
fisubrl
mov
push
test
dec
or
scas
out
out
popa
push
std
insb
dec
dec
fadd
bound
mov
es
mov
mov
lods
jno
loopne
daa
push
dec
lock
cmc
inc
ljmp
mov
push
mov
pop
mov
pop
mov
sub
ja
addr16
cld
loope
pop
add
mov
fsubs
aaa
imul
dec
arpl
std
cmp
imul
jb
outsl
lods
enter
fimull
inc
dec
out
xcrypt-cbc
cmpsl
adc
data16
cmpsl
out
out
outsl
imul
pop
rcl
xor
mov
idivl
int3
jnp
sub
std
push
test
insl
inc
mov
movsl
push
cmpsb
shll
into
jp
imul
std
sbb
inc
bound
hlt
out
jle
leave
sbb
jp
das
addr16
fnstenv
cltd
adc
outsb
mov
jmp
imul
lock
pushf
adc
jo
add
arpl
call
inc
jle
rcl
insb
and
out
sbb
scas
in
jecxz,pn
cmp
je
and
jae
aas
out
lea
mov
lods
dec
insl
and
fsubrp
dec
inc
cs
cld
inc
test
scas
pushl
inc
jmp
lods
test
loop
sti
in
sbb
mov
xchg
lret
lds
aam
insl
hlt
enter
orb
add
cmp
jle
out
jp
jecxz
sub
arpl
cmp
inc
jge
pop
out
subb
les
loop
sti
iret
fldenv
std
pop
inc
pop
lahf
js
aaa
pop
push
jae
outsb
push
sahf
push
addr16
cld
add
add
inc
addr16
cmpsl
mov
dec
out
test
outsl
popa
pop
stos
insl
jnp
jl
jbe
cmpsl
popa
push
mov
je
orb
push
dec
or
in
push
decb
dec
xor
dec
rol
les
and
les
sti
jnp
imul
imul
das
jns
pop
in
loop
jle
not
lcall
ljmp
aas
sti
sbb
pop
call
mov
mov
addr16
dec
clc
negb
sbb
insb
fnstenv
push
test
pop
repz
xor
out
pop
push
dec
sbb
sbb
aad
mov
test
sub
in
jge
jge
pop
add
iret
jns
dec
add
inc
jbe
imul
inc
arpl
stos
call
or
scas
pop
mov
sub
clc
dec
icebp
or
ljmp
in
and
sub
shrb
xor
out
or
add
cmpsb
jp
idiv
dec
std
xchg
outsl
dec
ds
or
je
mov
dec
cld
cmp
pop
dec
sti
lods
std
imul
pusha
sub
dec
dec
incb
notl
pusha
loope
and
mov
mov
in
jbe
je
xchg
fs
mov
jmp
inc
jmp
or
aam
and
lea
nop
mov
lock
bound
mov
push
out
rolb
loop
and
movsb
mov
addr16
out
out
or
or
ss
clc
lods
test
push
dec
and
imul
and
js
gs
testb
mov
mov
jns
mov
cmpsl
test
scas
insb
loope
xor
call
sub
jge
insb
dec
cmpsl
aas
dec
push
jp
popa
ja
dec
js
int3
pop
jge
icebp
imulb
dec
outsl
outsb
pusha
je
ja
nop
stos
push
cld
jb
jg
dec
into
mov
or
repnz
insb
insb
lea
insl
iret
xchg
lods
push
in
jp,pt
es
ds
pop
imul
xchg
or
cli
sbb
cmp
fistpl
push
clc
jmp
ljmp
int3
call
and
pop
jmp
out
jle
ja
out
call
repnz
jbe
bswap
shrb
fistpll
shll
add
in
dec
inc
testb
out
push
inc
inc
cmpsb
hlt
fstpt
shlb
sbb
fsubrs
movsl
xchg
sub
xchg
sbbl
and
int3
leave
in
jge
dec
ds
cmpsl
jne
or
mov
fiadds
pop
js
mov
xor
push
jmp
enter
mov
pop
lret
xchg
movsb
ljmp
fimuls
sub
gs
xchg
clc
pushf
cmpsb
push
in
add
pop
and
int
mov
mov
mov
mov
out
dec
or
cmp
mov
mov
lods
cmp
stos
pop
popa
inc
int
mov
jle
pop
mov
push
decl
lods
sub
ljmp
jmp
leave
outsb
xor
add
pop
sarl
aam
out
arpl
les
lret
sub
outsb
or
stc
test
bound
ja
int3
sub
cmc
pop
lods
arpl
stos
test
jmp
loope
jns
jbe
mov
test
es
in
clc
cmc
ljmp
jno
mov
shl
imul
jb
dec
add
test
jbe
mov
jmp
test
gs
in
cli
push
cmpsl
jp
fisttps
cmpsl
mov
jg
sub
pop
jmp
gs
outsl
ja
out
scas
popf
popa
lods
arpl
clc
pop
test
xor
test
bswap
mulb
jmp
jge
dec
inc
stos
cmp
pop
fistpl
inc
or
adc
cld
dec
push
push
clc
cmp
jnp
imul
imul
add
xchg
jle
int
test
insl
jle
xor
test
es
adc
jno
in
nop
pop
sub
mov
mov
outsl
in
adc
dec
jae
cs
dec
ljmp
cmpsl
jne
sub
mov
jns
mov
insl
das
pop
xchg
jp
push
out
imul
in
outsl
cli
push
pop
fdivrl
int3
les
push
imul
pop
jp
lea
stos
repnz
cltd
stc
jne
in
inc
addb
push
jae
iret
add
push
mov
jecxz
pop
insb
fisttpl
mov
xor
mov
imul
adcb
sub
ret
repnz
mov
in
call
adc
push
pop
push
insb
fisttpll
adc
andb
in
mov
call
fstl
push
insl
cs
sbb
lods
scas
cmp
into
hlt
in
stos
ja
cmpsb
mov
insb
mov
fisttpll
inc
movsl
push
jecxz
or
jle
cltd
mov
cmpsl
inc
lods
cs
xchg
cld
popa
mov
cli
pop
ljmp
jle
cli
cmc
sub
loop
fsubrl
mov
mov
inc
mov
jp
lea
jae
pushf
jge
fs
push
jne
add
cmpsl
clc
std
lds
xchg
cmpsl
hlt
outsb
jnp
out
movsl
inc
ja
daa
dec
imul
fdivrp
jnp
jle
mov
jecxz
mov
lret
lcall
loopne
inc
xchg
push
sub
lret
fsin
or
cmpsl
add
sub
mov
out
push
imul
shl
or
jmp
test
cmpsl
sbb
push
or
stos
fmull
call
push
mov
push
fsubrs
mov
jns
fildl
test
addr16
or
inc
sub
and
sbb
mov
mov
popa
dec
lock
jg
data16
mov
pop
pop
sub
and
call
out
pusha
in
mov
jo
pop
push
imul
outsl
outsb
das
push
mov
test
lcall
push
inc
loopne
loop
push
xchg
and
xor
movsl
ljmp
stos
ret
cwtl
inc
scas
test
lock
adc
sbb
and
add
cmp
jmp
enter
pop
add
mov
daa
mov
pop
cmpsb
inc
lock
cld
out
call
mov
aas
inc
lret
dec
movsl
or
lcall
leave
or
jne
fildll
bound
and
fistpll
jnp
mov
cmp
mov
sub
shrb
into
imul
in
jae
sbb
leave
fdivrs
mov
mov
stos
addr16
push
jle
sbb
pushf
dec
dec
dec
ret
daa
xor
push
aam
cmpsb
mov
push
out
movsl
mov
inc
sub
shl
jge
xchg
jae
stos
or
loope
jl
sbb
addr16
and
ret
es
xor
or
xchg
jns
xor
jle
ljmp
xchg
jp
add
dec
les
mov
pusha
clc
jmp
sar
aas
repnz
insl
xchg
cmpb
sub
loopne
popl
subb
add
leave
roll
sub
adc
icebp
andb
scas
jae
pop
movsl
pop
lret
adc
into
sti
mov
dec
outsl
insb
jnp
sub
sbb
call
test
jae
cli
es
jne
mov
jg
imul
cltd
cmpsl
rol
jg
xor
negb
pop
mov
jle
mov
xchg
mov
sub
test
das
dec
notb
jge
cli
ret
push
lds
mov
jge
push
sbb
test
mov
xchg
jno
jnp
les
push
sti
sub
cmp
ret
out
imul
cmp
xchg
mov
ret
pop
jecxz
mov
je
xchg
mov
decl
mov
dec
sub
push
xchg
ror
xchg
das
cmpsl
outsl
lods
das
insb
jno
lock
insb
xchg
nop
push
stc
fdivl
push
iret
scas
aam
jl
push
scas
add
call
xor
push
dec
mov
out
lock
mov
orl
mov
mov
rolb
leave
rcrl
mov
imul
sti
data16
nop
sbb
jge
in
lds
lock
xchg
push
push
push
mov
ret
shlb
popf
cmpsl
mov
dec
scas
data16
mov
and
aam
dec
push
loopne
cltd
dec
xchg
and
gs
ret
dec
hlt
insb
outsl
lods
lock
vcmppd
lret
or
into
dec
xchg
clc
hlt
in
xchg
cld
inc
mov
out
movsl
inc
sub
sub
lods
bound
mov
bound
push
outsb
lods
push
dec
insb
pop
in
mov
loopne
mov
cwtl
mov
jle
gs
lods
and
insl
gs
jno
add
loopne
dec
lret
subl
clc
out
leave
outsl
ja
call
sbb
ljmp
insb
mov
xlat
push
dec
int3
cmc
cwtl
push
fnstcw
into
lret
imul
cmc
mov
add
stc
mov
ljmpw
addb
mov
jae
jp
negb
loope
pop
mov
push
add
test
push
nop
test
xor
mov
or
jno
cmpsb
lods
insb
fmull
dec
std
xchg
pop
jnp
xor
dec
adc
inc
imul
out
out
or
dec
xchg
jnp
jno
and
sbb
jb
dec
es
aaa
jae
mov
out
jmp
mov
decb
loopne
loop
imul
mov
mov
cltd
push
cs
mov
dec
fmul
imul
dec
insb
daa
loopne
jg
cmp
call
xchg
ret
jns
inc
cmp
ret
in
je
sbb
cmc
test
mov
das
je
dec
pop
mov
scas
push
shll
xchg
stc
fs
out
in
nop
dec
scas
divb
dec
and
xchg
je
xlat
sub
out
xor
aam
ret
push
fdivrl
test
les
dec
mov
or
aad
xlat
and
or
ret
inc
cmp
dec
cmp
clc
shrl
enter
push
xchg
xchg
scas
or
xchg
clc
sub
sub
das
stos
decl
in
mov
sbb
hlt
add
dec
insb
divl
mov
hlt
mov
jne
jmp
in
shlb
xchg
cmpsl
sti
push
mov
outsb
cmpsl
stc
jecxz
frstpm(287
out
pop
lods
enter
mov
mov
push
dec
repz
jnp
cs
out
ds
lods
imul
adc
inc
cmp
das
sub
add
mov
cmp
filds
je
incl
daa
jg
cmpsl
test
test
data16
enter
jmp
hlt
outsl
fisttps
outsb
mov
ja
push
fsubrl
inc
jne
das
cmpsl
out
stos
aad
mov
scas
cmp
mov
xor
add
pop
std
or
shlb
cld
scas
pop
out
dec
push
adc
insl
inc
jmp
push
cmp
popf
callw
inc
cmpsl
dec
mov
adc
outsl
push
fwait
ret
mov
les
icebp
jae
cmpsl
fwait
dec
mov
mov
insb
nop
call
mov
dec
dec
insl
sub
into
sahf
in
repnz
mov
xchg
jge
mov
sbb
pop
xlat
mov
push
outsl
call
ficompl
mov
sbb
jmp
mov
jnp
pop
jle
push
mov
js
pop
stos
loop
repz
jle
xchg
mov
out
cmp
int
addr16
lods
dec
nop
jne
pop
lret
outsl
inc
dec
icebp
lock
xor
dec
jae
mov
pop
outsb
mulb
add
mov
jb
movl
enter
call
call
xchg
aad
jne
mov
test
ret
out
stos
arpl
out
loop
aaa
enter
int
mov
leave
std
cmp
nop
filds
sub
pop
sub
jmp
jae
pop
mov
mov
inc
dec
inc
insb
sub
cli
lcall
es
push
cwtl
dec
jae
aad
data16
push
dec
lods
sbb
add
arpl
mov
xchg
pop
cmp
jecxz
adc
aaa
sub
movb
fbld
imul
loopne
sbb
cmp
cmp
cmpsb
and
xor
inc
outsb
xchg
test
vshufps
fidivl
cmpsl
inc
dec
inc
mov
outsb
outsl
ret
push
xchg
pop
in
hlt
mov
ffree
jle
sti
cmp
mov
clc
loop
out
icebp
adc
mov
mov
push
sti
loopne
sahf
pop
adcb
jae
in
and
jecxz
arpl
cmp
inc
popf
iret
mov
out
faddl
cmp
adc
movb
cmc
add
popa
enter
mov
pop
sub
push
test
jns
cmp
jge
call
cmovnp
outsl
iret
sub
jl
out
xchg
fcoml
rorb
test
ja
push
das
push
xchg
dec
bound
mov
mov
stos
imul
mov
jbe
scas
stos
mul
stos
jg
push
movsl
fs
xchg
frstor
pop
xor
jmp
nop
notl
mov
clc
add
js
das
imul
cmpsl
mov
inc
jge
dec
lock
xchg
mov
sub
xor
jg
int3
mov
jg
mov
cmp
mov
xchg
mov
sti
inc
imul
adc
or
stc
out
insb
test
ds
call
xor
xchg
enter
inc
in
outsb
dec
sahf
mov
icebp
inc
push
lret
pop
dec
sbb
ja
fsubrl
push
shrl
add
mulw
andb
nop
roll
lods
nop
fstpl
xor
mov
push
out
dec
popf
insb
stc
sub
lock
jae
push
ljmp
lahf
psadbw
into
mov
out
adc
fdivrs
pop
add
outsl
shrl
jo
or
int3
mov
pop
add
aaa
pop
fs
outsl
imul
mov
adc
ljmp
adc
in
and
mov
test
loopne
jae
out
test
inc
add
in
lods
pop
mov
mulb
jnp
push
inc
loop
in
mov
test
jae
lahf
outsl
movsl
into
mov
lahf
adc
rcr
in
sub
mov
cmpsl
mov
ljmp
pop
stos
or
adc
xor
dec
clc
rcl
arpl
movsl
or
push
test
int3
test
in
inc
mov
xchg
data16
or
imul
leave
cli
and
movsb
push
dec
adc
dec
and
ret
fs
fldt
cli
adc
out
loop
aaa
repz
pop
lahf
movsb
aam
mov
ds
scas
lea
leave
mov
lret
dec
pop
dec
pop
inc
dec
jne
xchg
add
jnp
cli
stc
arpl
jle
dec
and
pop
outsl
mov
sbb
sbb
mov
mov
out
mov
fistpl
mov
jne
mul
cmpsl
imul
push
iret
nop
jb
imulw
push
decl
sbb
lods
or
add
mov
lea
test
lock
inc
lea
outsl
push
dec
nop
inc
cmp
jg
into
inc
mov
insl
fst
jmp
pop
jg
mov
scas
iret
xchg
testb
sbb
xchg
push
loop
mov
xor
push
mov
test
shr
mov
andb
fdivs
out
or
mov
xor
mov
mov
imul
lock
out
mov
js
dec
fisttpl
ja
sbb
stos
jle
xchg
mov
sub
rorb
jmp
xchg
leave
repz
cs
out
in
push
jb
dec
xor
cmp
jge
call
out
mov
mov
and
fwait
cmc
jb
in
sti
icebp
iret
jle
mov
pop
cltd
pop
xchg
aas
or
jge
bound
loop
dec
push
icebp
out
sub
in
pushw
data16
jb
cli
add
adc
fstpl
out
outsl
bound
stos
or
fldt
lcall
jb,pn
mov
mov
adc
lods
data16
push
js
pop
cs
outsl
mov
xor
or
xchg
in
testl
icebp
xchg
jae
and
mov
push
xor
and
addr16
sbb
push
cmpsl
scas
imul
push
xchg
outsb
mov
addr16
pop
jne
jae
ret
in
dec
sbb
leave
stos
mov
out
ffreep
pop
add
sub
das
fmuls
xchg
imul
xor
int3
mov
pop
cld
jg
lcall
mov
adcb
sub
imul
sbb
dec
insl
mov
adc
xchg
stc
imul
nop
cltd
sub
mov
mov
push
and
sbb
insl
daa
jle
movsb
das
cmpsb
outsb
cmp
pop
ds
fnsave
comiss
xchg
das
jmp
cmpsb
mov
imul
mov
stos
adc
out
loopne
ret
xor
hlt
aad
in
daa
xorl
push
pop
mov
adc
rcll
lock
pop
cmp
dec
imul
testl
jle
mov
int3
data16
into
mov
stos
adc
jns
scas
adc
pop
cmp
and
aam
dec
enter
lret
adc
or
sub
jae
or
rclb
cwtl
and
jecxz
out
sti
mov
lea
add
mov
ja
enter
xorl
mov
lods
jae
pop
or
test
jl
test
or
mov
adc
sbb
popa
jl
scas
mov
push
loope
mov
jecxz
daa
repnz
rol
lcall
add
fstl
dec
stc
shrl
ret
add
adc
jae
mov
std
adcb
scas
mov
insb
xchg
cmp
push
mov
fimull
push
sti
push
loopne
xchg
dec
xchg
cmp
dec
sub
mov
mov
inc
ss
imul
mov
arpl
loopne
shl
cmpsb
enter
cmp
sbb
mov
xor
sub
add
add
add
dec
stc
cli
xor
ret
fwait
ss
and
xor
pop
ja
and
xchg
loopne,pn
mov
pop
inc
mov
sahf
jg
xchg
and
mov
out
les
jne
add
jbe
push
inc
rol
les
jmp
filds
jmp
inc
sub
lock
test
pushf
iret
xlat
adc
dec
xchg
fildll
jecxz
jle
inc
test
mov
inc
jp
add
lock
jae
mov
loop
andb
aaa
xchg
inc
das
pop
dec
add
add
movsl
jle
gs
outsb
or
pop
fmulp
inc
push
pushf
jg
clc
outsb
and
ds
and
iret
lahf
aas
data16
and
dec
outsb
sti
ja
insl
xchg
out
or
loopne
aas
dec
mov
das
and
mov
jo
jae
arpl
fwait
ret
lock
jl
sub
jno
and
pop
cmp
mov
xchg
es
rol
hlt
shll
test
outsl
into
es
shll
add
loopne
mov
xor
sahf
test
mov
insb
lds
jb
movsb
adc
cwtl
add
out
pusha
cwtl
mov
movsl
gs
in
movsl
cwtl
xchg
mov
mov
cmp
jns
std
sbb
mov
out
dec
pop
scas
fucomp
das
sub
outsl
call
or
scas
mov
addr16
ret
push
cltd
in
inc
fdivrs
push
imulb
jns
add
lods
xchg
and
stos
test
loop
int3
push
pop
jg
cs
aad
movsl
sahf
movb
jae
inc
movsl
or
ljmpw
sbb
dec
xchg
pop
mov
popf
xor
daa
out
adc
insb
repz
or
test
gs
outsb
sbb
xchg
pop
jmp
jae
lds
mov
js
xchg
add
mov
mov
and
mov
sbb
pop
nop
pop
sub
addb
xchg
mov
adc
inc
outsl
mov
mov
push
subb
push
arpl
loopne
jne
mov
or
not
popf
and
adcl
cs
aaa
cs
outsl
leave
das
mov
pusha
mov
mov
add
arpl
fstl
add
and
bound
mov
sti
sbb
mov
jno
pop
fidivrl
stos
adc
dec
mov
andl
lds
shl
das
addb
jp
aaa
sarb
mov
lock
push
outsb
dec
push
out
paddb
outsb
cli
xchg
fsin
xor
push
jge
shr
cmpsb
cmp
aad
and
jns
test
pop
xchg
or
add
jne
cmpsl
pop
dec
mov
test
stos
pop
mov
lea
jae
sbb
in
xor
daa
popa
push
nop
andb
fistps
push
pop
fimull
insl
insl
decl
arpl
daa
cmp
jae
adc
lahf
lock
jae
stos
add
fwait
into
ret
ror
xor
arpl
clc
imul
div
aam
aam
in
decb
pushf
xor
and
dec
dec
test
jg
into
das
xchg
fdivs
adc
sar
pop
cmpsl
repz
jns
xor
adc
stos
imul
and
into
repz
adc
out
mov
outsb
stos
pop
punpckhdq
fwait
cwtl
push
jge
mov
in
xlat
insl
loope
cmpsl
sbb
loop
ret
mov
push
xor
dec
ret
lock
out
pop
call
insl
jae
adc
jmp
jle
jae
pop
or
mov
sub
icebp
fstpt
or
in
adc
cmp
cwtl
addr16
fisubrs
adc
cmp
insb
dec
jae
fidivrs
jle
inc
or
stc
dec
sbb
xchg
or
test
lahf
jle
int3
in
iret
aaa
sub
sbbl
scas
adc
test
popf
clc
pop
insl
push
push
faddp
mov
mov
mov
sahf
jbe
xchg
cld
dec
popf
push
push
or
sub
lods
or
rcll
xor
push
sub
or
shr
push
or
ljmp
movsb
sub
and
je
inc
fs
cltd
imul
mov
fwait
mov
repnz
iret
leave
add
setne
dec
mov
sar
bnd
in
scas
jno
arpl
push
stc
push
jg
xlat
mov
pop
push
mov
mov
outsb
sbb
push
in
pop
dec
outsl
adc
mov
jb
xchg
nop
and
aam
inc
insl
xor
or
out
dec
sub
inc
leave
mov
add
jl
paddq
stos
adc
les
mov
mov
in
int3
dec
push
lods
jmp
xchg
xchg
jg
test
or
cs
int
or
add
lods
sarl
mov
outsb
jae
fisttpll
sbb
and
inc
stos
dec
lcall
ja
test
mov
inc
rcrb
fwait
mov
outsl
cmp
cmpsb
je
pop
ds
insb
lret
xchg
mov
pop
inc
mov
push
pop
or
mov
dec
int3
lds
sbbb
pop
xor
sbb
lret
dec
sarb
sbb
xchg
sbb
jno
mov
mov
mov
in
sbb
mov
mov
cmp
je
outsb
inc
xchg
sub
sbbb
andb
mov
pusha
inc
add
movsl
push
call
sub
fstl
dec
insl
pop
pop
lods
stos
inc
jne
imul
sbb
iret
and
push
xor
aad
insb
xor
jne
xor
sub
dec
stos
mov
sahf
and
enter
mov
clc
pop
outsb
jge
incb
out
dec
orb
lret
outsl
sub
into
mov
dec
leave
out
jle
lds
sbb
mov
test
cmpsb
js
jmp
into
dec
adc
stos
ret
dec
cmp
stos
push
sub
movsb
pop
cmp
in
xor
aam
es
and
add
sbb
scas
pop
outsl
and
popl
je
scas
das
out
ljmp
aaa
ret
push
fisttps
loopne
jmp
ja
mov
add
mov
repnz
mov
gs
mov
fsubrl
dec
mov
push
jmp
mov
jno
repnz
dec
mov
jno
std
adc
or
jae
sub
cmp
push
adc
notl
adc
fisubs
iret
insb
pop
outsb
and
or
xor
pop
adc
jle
xchg
push
ret
mov
int3
out
in
loopne
and
mov
xor
dec
sub
filds
sar
das
cmpsl
fldl
mov
mov
and
dec
bound
pusha
xchg
and
into
cld
data16
in
jns
int3
in
inc
mov
loope
inc
xor
xor
outsl
and
sub
sub
out
jae
mov
lretw
outsl
out
sbbb
cld
push
sarb
xor
jno
cmp
daa
inc
jmp
xchg
dec
outsb
loopne
cmp
mov
arpl
add
adc
aam
lods
repz
outsl
cmp
cmpsb
inc
stos
icebp
fs
push
insl
cli
sbb
shrl
jne
out
push
aas
lock
sahf
enter
repz
fistps
dec
mov
ljmpw
int
mov
cmp
out
mov
dec
cltd
xchg
scas
pusha
push
nop
mov
cmc
out
cwtl
mov
fstpl
and
push
insl
push
jbe
dec
push
dec
mov
mov
mov
jecxz,pn
jp
mov
test
jae
roll
aad
cmpsb
jmp
cwtl
jo
lock
dec
jno
push
or
outsb
mov
sub
dec
lods
or
orl
loop
in
cmp
add
jns
popf
lea
push
lods
outsl
push
outsb
xchg
outsl
mov
stos
scas
pop
movd
mull
movsl
out
aad
lret
sub
xchg
ds
xchg
dec
pop
outsb
push
cwtl
cmpsl
mov
xchg
sub
cli
loope
xorl
pop
jmp
pop
lahf
cmp
test
xchg
ss
cmovb
jl
ljmp
inc
enter
inc
push
in
sub
scas
ja
shll
aad
push
lret
pop
pusha
scas
jg
xchg
iret
sub
outsb
cli
sti
scas
loopne
adc
iret
stos
test
push
cld
imul
call
dec
iret
icebp
pop
test
lret
arpl
cs
mov
sub
imull
adc
lock
popa
out
insb
lock
fucom
scas
outsl
push
out
nop
inc
in
adc
xchg
mov
sub
xor
inc
fcmovu
ds
xchg
pop
call
fs
nop
in
popw
out
sub
dec
mov
mov
in
into
xchg
sbb
jp
lea
push
das
sbb
and
insb
out
into
ret
ja
mov
out
add
movsl
rcr
pusha
lret
xchg
jmp
inc
push
adc
jae
jmp
std
ljmp
lea
push
pop
in
pop
in
dec
lods
lock
mov
adc
outsl
out
arpl
sbb
fcomi
js
xor
mov
out
das
push
cmp
sbb
mov
sub
mov
inc
jmp
outsb
cld
dec
mov
dec
lea
mov
lcall
imul
rcrb
sub
repz
ss
insb
xchg
inc
out
mov
sub
ja
popa
mov
mov
in
mov
je
fistpll
fstpl
jae
sub
jle
or
jl
jns
lahf
testb
into
jae
push
jne
mov
mov
or
pop
leave
les
xor
clc
jmp
fdivs
popa
call
pop
negb
inc
in
lock
outsl
out
loope
iret
out
jmp
insl
lret
sbb
or
sbb
sarb
xchg
lods
sub
into
mov
int
mov
sub
rorl
fbstp
rcll
push
dec
loope
or
aam
sbb
ja
sbb
mov
add
jle
scas
jg
jp
jae
xchg
xchg
into
inc
arpl
iret
cmpsl
sbb
xchg
cmpsb
fstpl
jmp
xchg
jmp
add
dec
out
push
imul
push
push
ja
divb
pop
outsb
inc
jb
aas
pop
push
in
lea
pop
add
shr
daa
outsl
icebp
or
icebp
adc
lea
lds
loope
idivb
movl
loop
in
mov
dec
std
inc
mov
cmp
adc
hlt
outsb
xchg
bound
sbb
push
mov
push
or
subb
loop
out
or
les
dec
lods
cld
cmp
or
shll
in
mov
mov
ds
mov
mov
mov
dec
cmp
ffreep
push
dec
repnz
mov
repz
jae
mov
inc
jge
out
mov
hlt
lods
push
adc
cmpb
maxps
repnz
lods
fwait
jno
mov
ljmp
add
mov
cmp
adc
sub
ja
lods
adcb
mov
sub
mov
pop
ret
sub
sbb
jns
in
or
in
mov
ja
and
inc
sbb
shr
jge
rep
jae
loop
enter
pusha
cmp
lcall
push
cmp
jg
pmaxsw
jno
cmp
out
insb
cmpsb
add
bnd
gs
scas
pop
jb
inc
out
scas
xor
xchg
stos
loopne
add
mov
js
imul
cmpsl
lods
or
jbe
sub
sub
loopne
icebp
jg
rol
mov
mov
sbb
mov
inc
movsl
jb
inc
jmp
push
cli
lahf
enter
mov
sub
jb
in
loope
int3
aas
mov
and
daa
mov
mov
inc
lcall
fwait
das
mov
xchg
stos
mov
lds
or
ret
cmpsl
icebp
xchg
jge
mov
lods
test
mov
in
stos
or
subl
pop
out
inc
in
add
enter
mov
stos
mov
js
test
push
into
shll
inc
push
jmp
mov
mov
inc
mov
sbb
mov
aam
pushf
fs
jne
into
mov
mov
out
test
lock
outsl
pop
push
mov
sub
bnd
xchg
or
dec
inc
lds
add
movsb
jo
add
mov
fdivrp
cld
pop
fwait
outsl
outsb
jb
mov
adc
cld
outsb
outsb
pop
push
and
and
insb
lds
jae
jecxz
lods
sbb
mov
mov
mov
test
fwait
ds
push
add
add
push
shll
xor
lret
pop
scas
cli
dec
nop
cmpsb
dec
lods
sahf
or
mov
nop
xchg
mov
push
and
mov
sbb
push
or
add
imul
or
icebp
imul
jp
or
xlat
dec
lods
repz
jne
inc
push
loopne
scas
daa
cwtl
rorb
loop
push
push
sub
jae
push
pop
rcr
iret
xchg
pop
icebp
out
rcrb
pop
push
lods
mov
pop
sub
mov
push
ja
inc
mov
mov
xchg
loope
push
mov
jno
mov
sub
test
lock
or
js
pop
fcoml
push
bound
push
out
test
and
lahf
push
test
dec
lds
sub
hlt
mov
out
xor
xorb
je
mov
scas
or
jl
jae
inc
out
mov
inc
jp
pop
repnz
cli
jle
pop
push
test
sti
and
fldenv
mov
test
movsb
fadds
insb
rcrb
movl
mov
or
or
mov
out
imul
popa
ror
jae
lret
imul
cmp
iret
mov
jmp
push
arpl
out
xchg
or
imul
inc
xor
in
and
inc
push
inc
and
push
imul
das
jno
add
or
lret
out
xchg
inc
out
jae
sbb
insb
cwtl
xlat
ljmp
add
push
sub
sub
mov
inc
lock
dec
outsb
push
scas
inc
jb
dec
or
pop
mov
jecxz
jno
rorw
je
pusha
sti
mov
cmpsb
iret
insb
jae
movsl
cmpsb
mov
clc
cmpsl
pop
push
pop
fsubrl
fstl
sahf
mov
jge
or
stos
pusha
mov
cmp
mov
jg
int3
jno
push
dec
sub
arpl
jmp
sub
dec
jg
call
pusha
cmpsb
inc
or
imul
sbb
or
into
jb
sub
pop
jge
cmpl
jp
dec
and
inc
xchg
jmp
aas
or
test
jno
sub
mov
add
push
in
xchg
and
gs
sbb
jnp
cmp
lahf
ja,pt
cmp
loop
mov
sbb
cmp
pop
jno
cmpsl
push
aas
jle
inc
cmpsl
or
test
enter
pop
js
cmp
ja
jg
add
cmpsl
mov
dec
out
cmp
mov
and
add
adcb
gs
sbb
fisttpl
pop
out
adcb
pop
lret
bound
out
cwtl
xchg
inc
inc
cmp
lahf
andb
mov
scas
int
fwait
xlat
jb
les
or
out
lods
add
cmp
lods
cmpsl
push
push
repz
jp
sbb
push
mov
fmulp
jae
into
and
scas
ss
cmpsl
rorb
add
iret
mov
pop
add
pop
and
test
push
rorb
test
add
jmp
test
add
lea
int3
into
push
ret
dec
push
lret
xor
int3
in
xchg
movsb
sub
stos
adc
adc
loopne
push
lret
into
mov
cmp
out
in
adc
or
mov
sub
cmc
loopne
lcall
mov
div
clc
jae
stos
mov
loopne
mov
loopne
jbe
aas
es
xor
push
sub
mov
cmp
push
stos
nop
sub
xchg
and
xlat
idivl
lock
test
outsb
lea
adc
sbb
scas
and
in
mov
outsb
jno
lock
shl
mov
jg
gs
test
aam
mov
icebp
imul
jae
pop
mov
dec
insl
inc
xchg
fsubs
in
rcll
pushf
mov
dec
ret
pop
movsl
jle
push
out
lods
ja
inc
or
mov
in
or
insb
hlt
add
clc
mov
arpl
ja
inc
dec
fistpll
mov
jle
jb
fidivrl
sbb
stos
jmp
jnp
sub
push
outsl
stc
insl
xor
jmp
dec
int3
or
xchg
arpl
dec
insl
out
callw
popa
pop
in
in
mov
cwtl
mov
bound
push
leave
mov
cltd
mov
push
xor
sti
pop
bound
inc
ficompl
in
out
je
lret
adc
push
lods
lods
out
outsl
sbb
inc
fildl
pop
mov
and
data16
shr
arpl
in
mov
gs
mov
pop
arpl
imul
stos
js
inc
addr16
add
add
enter
inc
sub
jge
int3
stos
sbb
sbb
es
into
inc
les
xchg
sub
test
jg
into
call
cmpsl
loopne
push
test
sub
movsl
cli
lock
add
insl
fidivl
cmp
or
dec
adc
aaa
push
imul
xor
daa
mov
mov
movsb
mov
xor
stos
push
dec
popa
mov
dec
cmp
dec
shrb
shrb
or
push
mov
pop
sub
or
rolb
xchg
rcr
xor
ljmp
loope
imul
sub
or
sbb
xchg
lret
imul
cwtl
add
push
subl
xor
dec
mov
xor
xor
xchg
addr16
push
adc
in
push
xchg
fidivrs
mov
arpl
jns
in
loope
out
mov
sbb
push
jg
push
outsl
lea
xchg
xor
push
data16
cmp
sub
cmpsb
jp
ret
test
in
and
push
pop
or
jge
int3
daa
inc
faddl
pop
mov
jb
adc
jae
ret
lea
xor
mov
jle
push
jb
mov
and
push
in
xor
into
lret
push
xchg
jbe
cmp
das
aaa
jae
mov
fsubl
clc
or
add
push
xchg
jecxz
in
jl
cmp
dec
xchg
jge
sub
aam
loope
pop
cmp
push
xchg
mov
js
or
mov
xor
push
lock
xorl
into
dec
imul
popa
lock
aam
arpl
and
scas
pusha
repz
jbe
cmpsb
mov
xchg
jne
faddl
shlb
xor
int3
sub
adc
jecxz
hlt
or
xchg
ss
movsb
sub
xchg
pop
mov
out
jo
cmp
es
fsubrl
ret
shl
inc
sbbb
lock
ret
lods
sti
pop
lds
negl
push
and
dec
sub
jbe
jmp
adc
or
jne
push
ret
dec
mov
ljmp
into
out
loop
cmc
xchg
mov
lcall
pop
dec
pop
jnp
dec
shlb
andb
cld
pop
call
jg
add
push
scas
push
push
lods
repz
or
outsb
mov
outsl
lds
sub
mov
outsb
sub
scas
xchg
or
dec
dec
test
stc
std
dec
sbb
iret
lret
jl
repnz
enter
loop
mov
jg
in
insl
push
adc
std
dec
xchg
jnp
mov
inc
leave
faddl
mov
inc
lods
jecxz
insl
jne
cmp
and
add
lods
imull
cltd
mov
mov
push
mov
mov
mov
inc
xor
inc
jecxz
jne
dec
fwait
shl
ljmp
add
icebp
pusha
movhps
out
sub
jg
mov
jecxz
xchg
mov
and
lahf
imul
imul
aaa
ss
dec
outsl
out
mov
or
call
lcall
dec
sub
in
push
xchg
orl
in
mov
arpl
ret
es
lods
jp
dec
in
out
push
shrb
mov
add
scas
xchg
hlt
push
dec
bound
insb
xchg
pusha
mov
fistpll
scas
or
negb
icebp
sbb
in
sbb
jae
jecxz
sahf
fldcw
adc
cld
inc
pop
pop
cmc
and
aam
scas
jno
mov
xchg
mov
cmpsl
push
and
mov
dec
ja
jl
int3
mov
inc
in
lods
gs
and
in
push
or
xor
insl
dec
xor
inc
mov
dec
cld
push
pop
andl
into
inc
nop
out
in
add
push
enter
insl
mov
push
sub
mov
pop
stos
jmp
mov
out
pop
push
mov
pop
mov
aam
cmpsl
fs
popa
push
inc
out
lret
mov
lods
mov
mov
out
jle
dec
cmpsb
addr16
mov
or
push
pop
insl
sub
pop
mov
mov
add
imul
push
xchg
add
pushf
xchg
ret
xchg
pop
out
or
js
jle
outsb
mov
adcb
test
int
or
lods
test
and
icebp
cwtl
mov
outsl
cmp
or
jbe
or
push
xchg
insb
pop
scas
out
push
inc
lds
js
lock
fsubrs
jae
insb
cli
into
jb
pop
sbb
mov
in
loop
jg
scas
inc
stos
pop
jmp
and
pop
scas
ja
pop
out
ljmp
dec
xor
int
mov
mov
out
or
dec
inc
adc
scas
arpl
xchg
lret
pop
inc
jg
es
mov
int3
frstor
mov
repnz
jo
mov
pop
out
jg
popl
scas
popa
jno
jle
sbb
xor
rcrb
jb
cs
loopne
rorl
pop
lret
jb
mov
add
js
sub
ja
push
out
or
xchg
scas
pop
dec
lahf
shrl
ljmp
rcll
int
dec
push
add
std
xchg
fnstcw
loopne
sub
out
xchg
filds
in
mov
insl
pop
jecxz
cmpsl
sbb
jle
out
pop
sbb
lock
mov
jl
push
insb
lock
add
out
inc
sub
pushf
call
outsb
ret
sbb
or
outsb
rcrl
test
pop
or
or
insb
inc
mov
mov
andl
and
jne
cmpsb
movsb
or
xor
insb
pop
in
mov
xlat
sub
fs
dec
inc
iret
movsl
xlat
lock
out
stc
jb
jb
cmp
pop
insl
add
add
iret
xor
mov
mov
push
imul
adc
hlt
insb
add
lret
jle
jbe
pop
movsb
xor
call
lahf
jno
scas
lods
or
cmpsl
adc
xor
insl
mov
ret
add
outsl
jle
mov
mov
in
jne
enter
mov
sbb
test
insb
adc
dec
inc
and
or
loop
das
mov
idivb
decb
call
pop
scas
aas
loope
test
fcomip
fcmovnu
test
jle
sub
lret
mov
add
das
les
out
mov
test
clc
cmp
lods
bound
adc
xchg
mov
aas
faddl
push
sub
sub
sti
push
movsl
dec
cld
pop
dec
or
clc
pop
adc
dec
push
nop
in
std
mov
sub
push
in
push
out
cs
out
cs
imul
sbb
mov
push
sub
sub
dec
sahf
loopne
cmpsb
and
or
in
outsl
dec
loop
jb
dec
push
mov
arpl
fisubrs
xor
sti
jmp
arpl
jmp
mov
xchg
adc
test
fiadds
and
lock
pop
inc
lcall
pop
lret
imul
stos
sbb
mov
pop
jecxz
ret
addb
in
mov
and
out
and
shr
pop
sub
in
outsl
inc
sti
fistpl
decb
int3
pop
es
insl
or
dec
jns
insb
cmpsl
push
pushf
cmpsl
aaa
scas
dec
or
scas
shl
cs
call
push
or
addr16
inc
dec
or
out
xchg
xchg
aaa
push
jnp
mov
loop
aad
or
out
shlb
out
lods
imul
dec
lret
lock
movsl
enter
data16
adc
scas
outsl
sub
sarl
push
decl
lock
aaa
pop
fld
scas
push
xchg
cmovg
into
inc
mov
subb
fdivr
hlt
add
roll
test
xor
dec
inc
scas
inc
add
or
les
sub
dec
dec
bound
test
mov
xchg
mov
push
add
cmp
jne
or
test
cmp
push
movsb
mov
dec
push
push
add
push
stos
outsl
mov
dec
xor
roll
cs
in
jmp
xor
xchg
leave
lods
mov
inc
ss
cmpsl
jecxz
lret
jb
out
loopne
lock
mov
dec
cmpsb
lock
sbb
dec
xlat
test
das
popl
imul
loop
sub
pop
or
pop
and
or
test
dec
scas
arpl
push
mov
jae
insl
cmpsb
pop
xor
in
mov
insl
test
test
stos
testl
shrb
loopne
pop
or
mov
sbb
xor
inc
cmp
nop
lock
int
inc
jecxz,pt
test
das
leave
sbb
repz
clc
sub
dec
pop
pushf
jge
push
push
sbb
loop
xor
inc
cmp
sub
fmull
outsb
inc
repz
outsb
cmp
xchg
fidivl
imul
lods
cmp
rorl
cltd
mov
lods
ret
jp
into
aaa
mov
mull
jge
sahf
jno
je
in
inc
mov
loope
stos
enter
mov
ror
add
push
xchg
dec
jns
xchg
into
pop
add
out
imul
pop
mov
dec
out
inc
out
push
pop
test
inc
in
cmpsl
cli
adc
mov
or
xor
add
imul
test
sub
data16
cmp
scas
scas
cltd
int3
lret
cli
popa
mov
fldl
pop
inc
lods
jno
push
repnz
push
jno
jle
aas
stos
loopne
shll
cmpsl
inc
mov
popf
jge
mov
add
xchg
xchg
push
movsl
sub
or
pusha
push
outsl
scas
xchg
out
fdivr
sbb
scas
inc
pop
into
jnp
mov
push
scas
pop
icebp
mov
and
inc
lock
sub
and
or
sub
shlb
or
push
xchg
pop
mov
insl
dec
jb
xor
arpl
mov
push
fstpl
push
mov
xor
stos
dec
aaa
setne
sbb
out
call
jg
das
or
push
loop
xor
lods
daa
outsl
add
ljmp
jns
xchg
mov
and
jno,pn
mov
stos
das
repnz
test
xchg
movsb
cli
loope
add
pop
nop
push
xor
repnz
mov
xchg
addr16
mov
jp
dec
jp
test
sub
push
sti
test
dec
sti
out
lds
popf
in
or
xor
jp
gs
out
pop
push
ljmp
das
sbb
xchg
mov
pop
or
lock
dec
sub
sub
xchg
sti
ljmp
arpl
jno
push
cli
jg
cmpsl
in
adc
hlt
sbbb
sub
out
sub
sub
in
lock
scas
stc
fimull
neg
fisttpl
sarl
inc
cmp
loop
pop
aas
stos
xchg
test
lods
ja
aaa
xchg
shrl
push
dec
xchg
sub
mov
daa
xor
mov
add
push
in
int3
cmc
push
movsb
lahf
ss
push
out
sub
inc
push
test
add
movb
sub
adcl
push
and
jns
jbe
inc
insb
es
pop
pop
int3
scas
out
ss
cwtl
jbe
mov
sbb
push
fsubs
dec
sub
scas
jae
xor
cwtl
inc
scas
aad
inc
mov
outsl
sti
ficoms
pop
ds
cmp
cmp
nop
lahf
dec
add
jae
dec
clc
or
sub
sti
idivl
xor
sub
jae
xchg
movb
test
int
cld
lods
ffreep
jecxz
outsl
cli
cmp
sub
pop
mov
out
jge
jle
mov
int
scas
cmp
lock
sub
insb
into
rcr
push
jg
enter
hlt
dec
and
inc
insb
popf
xor
sbb
jne
mov
fsubs
inc
lcall
cmp
dec
into
arpl
dec
lahf
fs
scas
enter
imul
mov
cmpsl
call
mov
xchg
xchg
test
in
inc
sub
aam
out
mov
gs
call
jmp
sub
add
lods
outsl
bound
lds
sbb
xor
repz
in
push
xlat
push
mov
fildl
sub
dec
jmp
add
sbb
insl
call
dec
mov
adc
mov
jmp
shr
push
movsl
push
clc
cmp
in
pushf
sub
and
clc
call
fdivr
jle
push
xorl
dec
icebp
shrb
clc
mov
jle
lods
out
jle
xchg
out
loopne
jge
add
pop
sbb
add
jle
repz
push
and
mov
pop
imul
mov
int3
pop
data16
or
push
pop
sub
xchg
dec
notl
mov
xorb
xchg
dec
lods
lahf
adc
cmp
inc
outsl
orb
jns
stc
lret
inc
aas
loope
and
push
decl
jbe
clc
clc
inc
pop
sub
cld
pop
lock
mov
xorb
mov
lods
dec
xchg
movsb
lahf
push
dec
insb
push
and
fisttps
cmc
mov
push
sub
xchg
daa
test
xchg
imul
xchg
sub
mov
imul
test
std
movl
fstpl
or
test
test
mov
iret
addr16
bound
bound
in
mov
push
pop
lods
push
jge
or
loop
enter
mov
cli
xchg
es
cs
arpl
add
xor
and
test
scas
jae
out
pop
add
push
add
and
popa
jl
addr16
loopne
pop
je
xchg
rcrb
mov
mov
pop
aas
push
mov
ss
test
push
dec
push
dec
fcomip
adc
stc
and
mov
ror
fistl
les
add
jno
lahf
pcmpgtb
and
push
sbb
mov
outsl
imul
lods
push
outsb
and
in
stos
insb
and
xchg
imul
sbb
push
dec
dec
lea
lahf
jmp
jecxz
or
js
hlt
movsb
mov
sbb
fmul
cmpsl
cltd
mov
push
sub
push
fcomps
jecxz
add
xor
jb
jae
insb
push
mov
mov
mov
gs
enter
push
gs
adc
lods
test
in
pop
dec
aad
scas
lcall
imul
stos
mov
sar
dec
test
rcl
and
jl
pop
test
or
xor
sti
lea
cwtl
and
lods
arpl
jge
or
push
push
out
fistps
in
mov
imul
and
push
out
loopne
std
jmp
test
ss
and
cmp
stos
cmp
test
or
add
data16
mov
xor
xchg
add
out
insl
fdiv
fdivrl
dec
lock
inc
in
aas
jb
xchg
in
pmovmskb
or
movsb
or
sbb
pop
loopne
cmp
stos
dec
mov
mov
out
xorl
inc
cmp
das
in
jle
mov
test
push
push
mov
sub
lods
mov
hlt
or
out
sarb
xchg
inc
stos
test
xlat
or
insb
stos
cmp
dec
outsb
mov
les
lods
cmp
mov
int
mov
in
push
test
ljmp
mov
popa
and
aas
ret
pop
mov
lcall
daa
jno
cmpsb
call
data16
jle
insl
inc
iret
repnz
jae
and
ja
jle
sbb
dec
push
or
pop
aas
mov
push
scas
xor
jns
insl
ret
mov
movsl
cwtl
stos
int3
or
sti
test
das
xchg
jae
idivb
mov
out
dec
and
jg
pusha
dec
and
test
inc
outsb
movsb
inc
mov
or
leave
mov
outsl
loopne
xor
inc
push
or
dec
push
xchg
add
lahf
roll
cmp
mov
pop
or
rolb
lods
sti
xor
arpl
jp
aas
adc
sbb
rcrl
out
addr16
add
es
sbb
dec
sbb
xchg
sbb
mov
cmp
sbb
push
xchg
push
push
xor
push
notl
jmp
subb
pop
aaa
add
dec
push
fisttps
insl
fidivrs
and
push
das
sub
pop
push
push
mov
jmp
adc
and
outsl
jecxz
cmp
mov
scas
jno
imul
test
movsl
xchg
pop
mov
arpl
jno
cmpl
int
es
ss
in
sbb
mov
repnz
in
out
ret
pop
pop
xchg
xor
shrl
or
call
adc
ret
shl
or
testl
ja
outsl
stc
ljmp
jno
jbe
sub
call
add
jg
std
jle
sub
test
incl
addb
icebp
sbb
mov
xchg
lahf
out
fsts
ja
xor
xchg
add
ss
ljmp
push
call
pop
dec
dec
sub
fidivs
jno
popa
sbb
pop
xor
add
adc
cmp
imull
into
pop
subb
in
push
test
dec
outsl
jns
jb
xlat
out
lahf
sbb
inc
stos
jae
ljmp
orb
sbb
jge
cs
cmpsl
sub
dec
xor
outsl
adc
push
dec
lods
or
mov
cmpsl
xchg
mov
scas
push
enter
lahf
fcoms
jnp
sub
ret
iret
jbe
adc
pop
cmp
and
mov
pop
or
or
in
repz
cmpsb
cmp
dec
xchg
insl
fistps
scas
xor
push
add
mov
pop
pushf
add
clc
adc
ret
pop
icebp
jmp
pop
dec
das
and
movsl
aam
push
orb
test
jb
xchg
scas
dec
pusha
jnp
aad
mov
shll
push
inc
pusha
mov
shrl
scas
mov
es
hlt
pop
inc
sti
mov
dec
xlat
dec
mov
xor
push
ds
in
push
sub
jp
outsl
cwtl
push
mov
shlb
mov
insb
out
dec
push
popfw
jmp
sbb
fistpll
rorb
or
addr16
test
out
cltd
lret
ret
sahf
out
addr16
imul
adc
outsl
fnsave
ror
sbb
or
out
out
cmpsb
mov
repz
mov
daa
mov
push
sub
cli
push
in
cmp
and
mov
adc
int3
pop
loope
les
pop
jecxz
incl
enter
push
iret
loopne
dec
xchg
mov
dec
enter
call
push
xchg
imul
bound
jno
in
into
mov
movsb
loop
cmp
xlat
dec
loop
mov
inc
rcll
clc
jns
jo
sub
es
jmp
imul
dec
xor
es
mov
mov
push
insl
pop
xor
scas
xchg
or
enter
out
stc
lret
test
jmp
or
repnz
mov
stos
xchg
aad
sbb
or
pop
fisttps
fmuls
shll
or
imul
mov
cmp
mov
fisubrl
rcll
mov
imul
pop
mov
rcl
stos
sub
cmp
imul
addl
loopne
and
push
loopne
dec
popa
cld
dec
lcall
inc
in
dec
dec
in
repnz
bound
mov
mov
lea
lods
mov
in
mov
loope
xchg
jle
inc
outsl
rcrb
orl
in
inc
xchg
pusha
arpl
in
in
jmp
mov
jne
imul
lahf
rcrb
mov
xchg
es
mov
scas
jl
iret
push
dec
outsb
add
push
jnp
wrmsr
nop
test
or
jmp
pop
loopne
dec
jno
push
imul
arpl
stos
call
outsl
rclb
enter
pop
addb
mov
push
sub
aaa
mov
movsb
lods
mov
imul
gs
addr16
repz
mov
dec
xchg
nop
test
cmp
hlt
out
push
mov
dec
dec
imul
test
mov
enter
and
pop
add
mov
jnp
into
lahf
outsw
in
dec
pusha
sub
fistpl
xchg
inc
jl
dec
add
jbe
out
shll
xor
roll
arpl
ret
push
pop
subb
inc
and
mov
mov
sub
pop
ja
push
sbb
xchg
or
insl
movsb
mov
or
mov
and
mov
lods
loop
mov
sub
test
jmp
add
sub
enter
dec
xor
xor
ret
or
cmpsb
cltd
in
inc
movsb
sbb
repz
repnz
add
ret
or
aam
dec
push
clc
loop
push
loope
xchg
jg
add
test
dec
jo
lock
mov
jecxz
imul
pop
arpl
push
mov
mov
pop
sub
dec
loopne
pop
xchg
dec
mov
mov
mov
pop
cmp
sub
in
outsb
pusha
inc
or
out
out
mov
subl
stc
enter
push
or
into
or
into
in
scas
lods
int
xchg
push
outsl
add
mov
dec
outsb
or
sub
frstor
inc
pushf
mov
in
push
loope
enter
adc
or
ja
outsb
insl
mov
lods
movsb
mov
mov
jno
in
mov
cmp
aad
pop
cs
cmp
or
call
frstor
sbb
sarl
in
sbbl
das
jle
lods
imul
ret
mov
rcrl
inc
sub
inc
lods
or
cmpl
pop
pop
xor
loope
popa
pop
insl
mov
repnz
ja
gs
pop
movsl
outsb
pop
mov
adc
shl
push
push
add
sub
lcall
dec
out
adc
mov
mull
out
xchg
dec
mov
adc
das
mov
test
aaa
mov
push
mov
mov
jmp
in
loopne
insb
clc
out
xchg
inc
insl
cmp
push
cmc
sbb
lcall
sub
lods
dec
outsl
cmp
loop
int3
cli
aam
jl
fisttps
pop
add
sbb
xor
fsubs
mov
inc
adc
lods
in
pop
jecxz
cmp
cli
orps
mov
mov
or
add
bound
pop
jmp
jne
daa
cli
clc
sub
sub
fwait
mov
cmpsl
jo
cmp
ljmp
lock
lods
fisubrs
cmp
xor
or
jmp
cmc
sub
mov
lods
arpl
out
sti
scas
jle
sbb
sahf
scas
cltd
int3
test
fstl
jno
hlt
sbb
test
ret
mov
push
push
jbe
mov
das
loopne
loope
test
mov
jmp
mov
fwait
jle
xor
ja
loop
adc
fbld
jo
cmpsl
ret
pop
sbb
je
push
stos
sub
add
adc
ja
inc
pop
add
adc
add
lods
outsb
iret
decb
xchg
sbb
xor
jnp
std
ljmp
dec
dec
cmp
push
stos
jecxz
xchg
movsl
dec
lods
or
shlb
push
add
ret
bound
sbb
dec
dec
mov
xor
movsb
int3
scas
scas
pop
lods
in
movsl
add
in
mov
fwait
inc
lcall
mov
shll
inc
outsb
scas
movsl
mov
cmpl
outsl
push
dec
cmp
sub
cmp
push
adc
std
xor
hlt
jg
icebp
adc
lret
lds
shll
jg
aaa
scas
mov
jae
pop
push
into
ds
cltd
fadd
dec
pop
outsl
out
test
nop
addb
inc
mov
push
xchg
jp
outsl
test
dec
jge
inc
pop
jae
xor
rolb
cmc
and
ret
dec
or
sarb
push
xor
shlb
pushf
mov
and
adc
lock
lcall
dec
aad
fstl
das
add
inc
out
and
mov
nop
mov
pop
jl
mov
sub
cmp
ja
out
dec
fsubrl
xchg
int3
adc
jbe
xor
insl
ja
mov
test
pop
sub
push
clc
jg
cltd
leave
jne
fnstenv
ficompl
dec
jo
xor
push
lock
lods
fmul
outsl
insb
sub
mov
jns
inc
fistpll
inc
mov
lods
imul
mov
cmp
cmp
push
dec
or
data16
popa
idivl
pop
sbb
add
test
jno
or
repnz
scas
bound
shlb
mov
movsl
jg
inc
jmp
mov
mov
cltd
repz
inc
and
insb
mov
jae
pushf
repnz
jns
dec
clc
push
inc
js
push
repz
int
out
arpl
xor
ljmp
adc
stos
mov
and
mov
mov
imul
into
in
bound
lret
aaa
fstl
lcall
inc
lock
hlt
por
add
push
dec
xchg
add
mov
les
mov
mov
sub
jnp
sbbb
jae
mov
jno
mov
sbb
in
xor
outsb
fists
xor
cmpsb
mov
inc
rolb
xor
aad
outsl
mov
jmp
into
mov
jecxz
ljmp
and
sbb
fsubl
es
cmp
fistpll
scas
xor
jno
dec
rolb
mov
xor
clc
inc
sub
ffree
lods
fwait
mov
push
sarl
sub
dec
ret
mov
in
repz
inc
jge
fcomps
popa
jae
xchg
mov
loop
cs
into
addr16
mov
sbb
pop
xor
xor
cmc
nop
aad
sbb
and
mov
stos
sub
jmp
dec
leave
js
mov
mov
test
out
repnz
mov
mov
mov
mov
mov
aad
xchg
aad
fsubs
lea
scas
and
in
push
lock
dec
popa
mov
sahf
mov
cmpsl
enter
lods
dec
sub
dec
inc
dec
xchg
inc
dec
lods
push
jg
mov
into
dec
out
daa
cmp
dec
xchg
sub
xchg
xchg
pusha
or
xchg
scas
aas
xchg
in
jnp
sbb
lret
hlt
push
cmc
jmp
mov
mov
jbe
xchg
mov
shlb
fidivs
test
outsl
mov
xchg
testl
int
add
cmpsb
out
pop
je
es
push
mov
sub
js
or
imul
lods
fmul
pushf
lret
cmpl
jmp
dec
arpl
sbb
inc
lods
lock
imul
pusha
and
sti
jl
jecxz
jno
jns
push
test
and
pushf
or
add
jmp
shr
xchg
push
pop
inc
sbb
popa
mov
adc
ss
xor
scas
mov
sub
xchg
lret
mov
aam
pushf
stos
aaa
in
xchg
or
mov
xchg
out
test
cltd
jg
xchg
out
aas
push
dec
jnp
cltd
or
pushf
movsl
lret
inc
mov
lahf
imul
popa
les
push
jnp
cmpsl
xor
fstps
cli
mov
jg
pop
push
mov
or
pop
je
in
xor
mov
nop
jle
jne
fbld
jmp
sub
loopne
or
jne
out
into
cmp
mov
test
adc
push
fsubp
addr16
push
fs
shlb
sub
div
pop
pop
dec
es
loopne
adc
mov
adc
outsl
or
sbb
repnz
jne
cmpsl
push
mov
sub
aas
sti
stos
add
les
mov
jle
sbb
and
mov
and
dec
push
sub
inc
stc
into
in
ljmp
jns
jl
rcrb
add
and
scas
data16
shlb
fs
jp
jno
pop
out
out
xchg
dec
sub
repnz
and
jle
inc
cwtl
push
mov
inc
scas
xchg
jb
outsl
adc
add
xchg
fsubs
fwait
pushf
jp
ds
push
xor
arpl
push
sbb
mov
or
movsb
in
and
fldcw
adc
bound
push
xor
in
dec
roll
mov
dec
inc
mov
and
push
aas
jne
out
dec
mov
call
movsb
and
mov
dec
int3
fdivrl
test
push
cmc
lcall
dec
arpl
or
pop
mov
in
adc
cwtl
xchg
mov
lahf
jno
and
fldl
insl
and
mov
and
in
push
inc
nop
and
adc
scas
out
dec
xor
in
cli
add
push
mov
mov
push
loope
outsl
jae
sbb
push
out
mov
dec
inc
or
outsb
in
push
jg
outsl
mov
insl
lret
xchg
inc
aam
lods
or
push
adc
out
outsb
jne
adc
loop
mov
adc
js
mov
sarl
icebp
sub
sub
ret
xchg
sub
cli
insb
sub
inc
adc
insb
insb
inc
mov
mov
cld
add
lahf
aas
push
outsl
repnz
aas
ret
sbb
xchg
or
inc
aas
cmpsb
or
fldenv
lock
add
dec
ret
dec
repz
scas
je
fcomps
popa
ffree
insl
mov
or
imul
xor
mov
xchg
pusha
outsl
pusha
insl
mov
cmpsb
ljmp
sti
cmpsb
adc
pop
mov
test
pop
pop
outsl
ret
jb
aas
imul
scas
jae
push
jnp
arpl
lds
jae
lea
or
jae
insb
lcall
out
jmp
bound
xor
cs
ret
addb
cmp
jmp
mov
adc
cli
dec
bound
cwtl
in
imul
jnp
mov
idiv
andl
mov
dec
jb
jp
xor
cmp
sub
push
inc
insl
lret
in
jg
jl
jg
xchg
pop
jmp
or
scas
lret
imul
jbe
scas
pop
dec
mov
push
out
scas
stos
dec
andb
xchg
aas
sub
cwtl
pop
inc
push
bound
stos
sub
jecxz
es
xchg
cs
inc
loop
jae
mov
adc
inc
mov
mov
subb
incb
mov
inc
daa
push
xchg
jb
dec
outsl
sbb
arpl
testl
int3
and
inc
aad
fcmovne
and
rcll
jge
test
sbbb
inc
outsl
scas
xchg
arpl
iret
out
xor
jmp
inc
loop
xor
pop
lock
fs
lds
dec
jecxz
scas
bound
shlb
dec
out
pop
add
loop
add
cmp
std
cmc
pop
jns
add
xlat
add
lds
pop
data16
adc
inc
push
out
add
cmpsb
mov
lods
jbe
fcompl
iret
out
outsl
lret
out
mov
inc
and
xor
in
in
subb
cmp
push
dec
mov
je
std
or
mov
jae
jg,pn
push
jmp
out
in
in
icebp
jae
push
out
outsb
add
imul
fsub
out
add
push
cmpsl
outsb
lods
sub
clc
stc
fdivp
push
push
bound
dec
addr16
xchg
sbb
out
out
xchg
cmc
call
or
jns
outsl
arpl
lds
negl
push
out
sub
imul
out
andb
insl
insl
dec
clc
push
in
cs
das
cmc
dec
insb
call
insl
inc
add
loop
mov
mov
outsb
rep
dec
sti
bound
nop
mov
cwtl
fstpl
iret
fsts
jge
data16
jp
loop,pn
pushf
pop
sub
pop
and
lcall
inc
test
outsl
fwait
jl
inc
dec
jmp
out
dec
jnp
data16
push
lock
outsb
into
stos
fs
and
dec
jne
and
dec
cmc
dec
inc
js
mov
dec
jmp
inc
push
imul
xor
jns
outsl
pop
inc
pavgw
mov
push
outsb
dec
icebp
loopne
test
imul
out
loop
and
mov
lock
sbb
sahf
or
adc
shll
jmp
xchg
inc
mov
push
imul
icebp
push
mov
dec
add
icebp
mov
outsl
stos
cmp
icebp
hlt
dec
outsl
mov
aam
cmpsb
pop
movsb
rcr
test
lret
sub
insl
ret
iret
push
scas
sub
jns
mov
dec
or
popa
dec
repz
das
lock
dec
int3
adc
and
cmpsb
cmp
outsl
arpl
mov
call
dec
hlt
enter
fistpll
ljmp
outsl
outsb
dec
xchg
insl
imul
ljmp
cld
out
and
insb
cs
xchg
lret
addr16
aaa
cmp
ljmp
mov
popa
out
and
test
add
nop
negb
or
loopne
inc
push
mov
jge
dec
inc
ret
mov
add
mov
test
sbb
pushf
dec
mov
sub
in
adc
sbb
scas
loop
jmp
and
push
sub
test
leave
andb
dec
in
adc
pop
inc
sub
outsl
or
adc
ljmp
push
outsl
dec
stos
lahf
cmp
aam
jmp
iret
or
sarl
jp
imul
call
test
mov
jbe
outsb
add
outsl
scas
jp
inc
or
fisubrs
adc
js
pop
enter
daa
outsl
jne
pop
mov
add
xchg
inc
cltd
je
outsl
pop
divb
outsl
cltd
mov
inc
out
push
loope
je
aas
or
bound
or
push
daa
lods
jb
add
test
aaa
pop
push
inc
ljmp
je
pop
iret
addl
push
jecxz
int
clc
and
test
insl
jb
bound
popa
gs
pusha
cli
mov
outsb
call
lahf
fcomi
pop
les
jno
in
stos
outsl
int
jne
xchg
jbe
cmp
out
insl
insb
cld
mov
jg
loope
loop
clc
aad
cld
push
jg
ljmp
dec
inc
outsl
clc
sbb
dec
in
add
pop
out
jno
jecxz
mov
cmpb
out
out
outsl
popa
push
je
sub
push
dec
mov
jmp
fs
movsb
jbe
out
mov
imul
dec
insb
cld
mov
dec
call
xchg
clc
daa
cmc
mov
fsubs
clc
hlt
aaa
cmp
data16
repnz
out
dec
push
in
dec
push
push
ljmp
fucom
je
enter
addr16
leave
push
mov
push
or
push
insb
adc
dec
lret
sub
push
dec
jle
mov
xchg
jmp
cmp
pop
repz
fwait
cmpsb
das
sbb
adc
mov
imul
iret
scas
mov
into
clc
in
lret
stos
mov
mov
lock
mov
ljmp
scas
out
js
les
je
pop
dec
in
or
outsl
pop
sub
jp
fs
insl
imul
and
call
dec
xlat
movsl
rorb
ds
pop
dec
outsb
mov
mov
clc
sub
mov
sbb
jle
repnz
sbb
in
repnz
jg
andb
sahf
push
inc
ja
mov
addr16
lret
mov
and
imul
out
mov
popf
xchg
mov
xor
inc
pop
addr16
or
xchg
push
scas
lea
sub
test
jae
loopne
dec
scas
mov
sub
out
add
stos
fiaddl
push
mov
cld
and
std
jecxz
pop
xchg
push
js
dec
repnz
dec
dec
in
ret
bound
jmp
cltd
cli
outsl
into
mov
inc
gs
jl
outsb
add
leave
jg
decl
outsb
ljmp
add
test
negb
out
lods
das
repz
call
sti
dec
pop
or
mov
loop
jae
jge
and
repz
in
dec
clc
addr16
je
rolb
dec
ret
gs
outsb
clc
dec
loopne
dec
jle
loope
dec
in
stos
imul
insb
rcr
xchg
adc
xlat
dec
test
test
jns
mov
inc
mov
test
jns
pop
leave
add
sub
loope
and
jmp
outsl
gs
test
and
jmp
imulb
hlt
clc
dec
push
push
stc
push
js
sbb
dec
notl
jne
fs
insl
nop
mov
das
jg
out
icebp
in
jb
dec
and
pop
dec
aaa
sbb
or
jmp
and
inc
inc
scas
dec
mov
add
dec
ja
out
lods
hlt
movsb
das
jg
and
repz
out
cmp
in
dec
in
imull
dec
cs
decb
test
ja
mov
sarl
push
in
jmp
decb
dec
jno
push
xchg
lods
fwait
and
aas
out
gs
pop
mov
enter
lcall
mov
loop
push
cwtl
pop
sti
adc
test
xchg
adc
in
arpl
js
notb
sbb
mov
js
in
xchg
sbb
mov
cld
jmp
jle
cmp
fmull
jp
adc
test
pop
decb
jae
in
imul
es
divl
mov
push
dec
inc
jmp
icebp
push
stos
or
loop
or
lds
dec
mov
hlt
fs
jl
std
pop
jge
addr16
jmp
rorb
jg
les
insb
jnp
jl
ret
loop
jl
call
xor
fdivrp
dec
sub
adc
or
iret
push
add
cmp
repnz
addr16
call
xorb
mov
out
jecxz
sub
dec
sarl
sub
sti
jmp
and
repnz
add
ja
mov
ljmp
xor
call
sbb
lock
es
out
cli
aam
jmp
lock
or
rcrl
fs
adc
dec
xchg
xor
js
pop
jmp
jmp
dec
push
test
pop
roll
out
sub
xchg
mov
hlt
out
mov
clc
popf
fst
jmp
leave
imul
mov
cli
repnz
daa
inc
cmc
dec
or
gs
shrl
mov
mov
loop
mov
push
nop
sub
cs
jae
pop
pmuludq
jle
sarb
add
jne
jge
imul
dec
add
std
repnz
jecxz
sbbb
clc
jno
mov
shr
outsl
fs
push
std
mov
xor
add
bswap
dec
xchg
jle
outsb
pusha
push
out
js
lcall
adc
arpl
mov
hlt
in
iret
dec
movsb
adc
into
bswap
fsubr
sub
in
ljmp
dec
insl
dec
insb
sbb
jns
or
ret
sub
pop
jns
pop
jno
sbb
push
xor
xor
incl
xchg
pop
imul
mov
or
mov
jp
mov
loope
dec
mov
in
mov
lods
cwtl
jl
clc
orl
add
popa
subb
mov
cli
stos
ja
add
mov
jne
std
lods
xchg
outsl
out
cmp
repnz
xor
in
jo
aam
addr16
pand
in
aas
dec
sahf
fs
rcll
ds
shrl
sbb
ljmp
jecxz
icebp
iret
ret
outsb
cs
repz
push
pop
or
mov
cs
or
push
adc
outsb
dec
fidivl
stc
push
pop
scas
sbb
repz
in
es
aam
fisubrs
cli
ss
add
lret
shlb
cmp
inc
sub
clc
insl
mov
jne
mov
fdivrl
xor
mov
fwait
daa
ret
cmpsb
mov
bound
sub
enter
sub
xor
in
sub
ljmp
int
andb
mov
xchg
jno
loopne
insb
xor
les
jg
mov
in
sub
jle
rep
push
loope
je
mov
lret
fcmovnb
or
outsb
imul
jae
loopne
jmp
mov
mov
jle
mov
stos
repz
push
ljmp
ret
call
lds
push
std
lahf
dec
repz
loop
test
mov
repz
mov
jno
or
adc
andb
test
jp
and
push
mov
jne
in
jg
ret
out
out
jbe
xor
shrb
and
jmp
dec
aam
inc
je
sbb
outsl
pop
mov
cmp
imulb
mov
and
out
dec
jp
cmpsl
or
je
jl
and
outsb
in
cmpsl
mov
mov
jecxz
cmpsb
addl
dec
cmovge
scas
out
pop
scas
dec
sub
ds
out
movsl
outsb
lods
ljmp
test
cmpsl
or
inc
scas
pop
fidivrl
jnp
jge
outsl
test
in
jae
or
sbb
mov
popa
hlt
jle
insl
loope
imul
jecxz
sti
out
add
jecxz
clc
dec
cmp
cmpsl
insl
cld
mov
pop
lock
xchg
mov
cmpsb
jae
inc
in
sbb
std
outsb
out
or
cmp
adc
sub
test
dec
scas
fldt
js
out
jp
shl
das
test
mov
clc
add
idiv
fcompl
xchg
outsb
out
fsubrl
aaa
dec
jns
outsl
jb
bound
outsb
cwtl
outsb
jp
outsb
sbb
js
push
fldcw
cmp
outsl
pop
std
dec
lret
aad
addr16
mov
xchg
inc
jmp
aad
jecxz
mov
call
cmpsl
in
leave
and
orl
shl
imul
jbe
lea
jecxz
iret
jl
and
test
cmp
in
bound
je
sbb
inc
mov
adc
mov
jecxz
mov
xchg
cmp
enter
and
dec
mov
mov
cmpsl
jno
push
push
mov
jg
mov
lock
mov
jae
jg
dec
jbe
insl
cmp
jns
rcr
lahf
stos
add
mov
lahf
lock
or
out
loope
ljmp
leave
and
or
sbb
add
dec
xchg
orb
enter
mov
add
mov
lock
out
add
lods
xor
mov
lahf
jl,pt
cmp
xor
movsl
in
pop
cld
cmp
or
dec
in
imul
out
loop
mov
jmp
dec
leave
loop
sub
xchg
mov
aad
push
inc
in
stc
out
je
sbb
dec
or
test
add
bound
xchg
cmp
fs
repz
inc
or
lahf
daa
outsb
or
orl
xorb
int3
lret
fldenv
imul
xchg
jne
cmp
mov
in
iret
adc
movsb
add
xchg
cs
out
jle
mov
jmp
sarb
inc
lock
jno
mov
jge
outsb
and
jg
out
add
pop
popa
gs
dec
bound
aaa
imul
popl
hlt
adc
mull
icebp
jge
decl
or
pop
cs
das
pop
outsb
into
pop
sbb
in
loope
outsb
out
test
dec
lock
push
das
jl
in
dec
repz
pop
ja
jno
psrld
inc
inc
pop
lret
adc
inc
icebp
xor
ret
mov
mov
and
jne
in
gs
insl
sub
in
cmc
push
dec
xbegin
addr16
adc
bound
dec
jle
std
test
imul
jle
mov
add
rcrl
jp
pop
int3
lret
out
fnstcw
jecxz
lods
sub
sbb
popa
adc
pop
mov
sub
imul
lock
add
pop
adc
scas
jae
cmpsl
ljmp
mov
cmp
popf
ja
or
jg
or
jbe
imul
scas
gs
daa
mov
daa
lret
dec
daa
push
out
mov
idivb
push
addr16
enter
in
loope
aas
inc
cld
insb
inc
out
loop
lock
data16
in
jg
jae
insb
xchg
fidivl
jle
icebp
into
or
xchg
stos
xchg
inc
mov
lods
imul
fs
sub
js
cmp
fs
pop
jecxz
cltd
adc
shl
xchg
lcall
arpl
pop
jg
jge
scas
lcall
jle
mov
sti
ret
into
push
aaa
mov
sahf
bound
mov
std
mov
dec
xor
or
or
call
in
and
shlb
xor
loop
sti
and
or
xchg
lock
gs
inc
adc
and
cltd
or
add
and
test
movb
inc
rsqrtps
pop
jecxz
test
out
stc
or
outsl
push
cmp
mov
call
sahf
dec
repz
in
cmp
inc
scas
testb
outsl
lahf
daa
lahf
and
jecxz
jle
sbb
test
incb
xchg
cmp
xor
iret
cmpsl
dec
xchg
movsb
pusha
imul
idivl
aad
iret
test
xor
inc
imul
in
mov
out
bound
jae
xor
ret
xchg
mov
xor
imul
push
ss
scas
cld
lahf
xchg
mov
cmp
cmp
add
jnp
pusha
sub
sbb
pop
out
or
cmpsl
jns
outsb
jg
into
jg
xchg
sbbl
mov
inc
aas
das
adc
jmp
mov
fwait
mov
arpl
and
imul
adc
xchg
dec
adc
call
cmpsl
adc
lahf
clc
sbb
sarl
stos
je
icebp
cwtl
fiadds
data16
add
scas
je
lahf
mov
jmp
out
enter
es
push
xchg
out
mov
dec
adc
cmpsl
outsb
stos
lods
pop
out
inc
push
xchg
insl
push
push
xchg
sub
flds
push
push
cmpsb
loop
sbb
pop
pop
inc
xchg
inc
pop
arpl
imul
sbb
xor
xor
dec
fisubl
cmpsb
int3
sub
xchg
xor
outsl
rorl
lahf
cs
cmp
cmpsl
int
sub
mov
data16
jae
shrb
gs
add
out
mov
out
jae
pop
icebp
jo
aaa
lock
xchg
ret
in
movsl
ret
mov
push
pop
out
cld
test
xchg
pusha
js
mov
mov
int
mov
xchg
into
in
and
push
mov
mov
mov
sbb
aaa
frstor
jg
sbb
sbbl
pop
daa
outsb
jge
pushf
mov
mov
stc
adc
pushw
loopne
lock
stos
mov
enter
imul
scas
lock
dec
loope
jg
xor
repnz
add
rclb
add
xchg
dec
rorb
add
rcl
int3
mov
ja
in
and
xor
std
pop
xor
mov
int3
and
subb
es
add
filds
sahf
imul
pop
imul
int3
cmc
addr16
mov
stc
push
outsb
jl
loop
mov
dec
sub
loopne
xorl
arpl
arpl
pop
cmpsb
pop
push
sub
xchg
in
push
dec
addr16
movsb
aad
stos
shll
inc
lds
adc
sub
jmp
sti
enter
push
jle
mov
sbb
imulb
imul
xor
mov
gs
or
int3
fs
push
mov
nop
in
shrb
mov
xor
sbb
divl
out
push
int3
shll
ja
loop
idivb
mov
scas
xchg
outsb
movsb
inc
sar
cmp
xorb
aaa
sti
push
xchg
rorb
mov
dec
rorl
sub
in
aas
loope
int3
xor
imul
mov
xor
jg
imul
dec
insl
mov
loope
dec
and
inc
aas
test
adc
in
inc
and
out
inc
data16
dec
into
fsubrs
mov
mov
cltd
xor
outsl
out
xchg
push
and
insl
jg
mov
repnz
sbb
shr
ljmp
xlat
inc
mov
lcall
and
ljmp
inc
dec
stos
mov
out
sahf
into
test
std
mov
fwait
push
cmp
icebp
movsb
decb
or
repnz
jl
iret
call
or
fistps
out
or
aaa
data16
aaa
loope
outsb
push
mov
jae
push
cmp
push
cli
jbe
ficompl
insb
adc
std
pop
iret
jmp
ja
mov
push
fstl
fistps
sti
mul
adc
call
push
orl
push
mov
jbe
dec
jae
es
into
icebp
enterw
ffreep
cmp
int3
fcmovnb
stos
mov
mov
push
cmp
movsl
push
mov
push
or
mov
pop
xor
cltd
xchg
iret
sub
pop
xchg
mov
inc
mov
gs
inc
test
repz
add
dec
jg
and
icebp
push
mov
dec
mov
adc
mov
dec
inc
in
xchg
call
cld
out
xchg
ja
inc
jg
sub
lods
in
out
imul
jecxz
in
fbstp
and
fcomi
or
pop
push
and
call
mov
push
cltd
insb
ljmp
push
xchg
rcl
xchg
jb
mov
icebp
mov
cmpsl
push
out
jmp
lea
mov
loopne
ret
lods
jo
jno
xor
jns
push
into
fwait
pop
outsb
cltd
lods
cwtl
add
mov
sar
movsb
xchg
sarb
movsl
pop
dec
das
ret
mov
lret
scas
aas
pushf
or
mov
call
mov
xchg
cmpb
icebp
inc
stos
hlt
das
jae
xchg
inc
outsl
adc
test
inc
addr16
out
fwait
mov
dec
in
inc
lds
aaa
daa
popa
outsb
aaa
in
mov
data16
in
clc
push
pushl
jns
dec
push
cmc
mov
clc
inc
mov
pop
int3
push
mov
jae
sti
ds
enter
stos
cmp
mov
std
dec
out
jae
scas
aas
xchg
test
daa
dec
ja
jne
jae
dec
mov
lock
jae
movsl
shll
or
insb
pop
add
frstors
push
and
icebp
out
cmpb
and
mov
mov
loope
notb
repz
sti
outsl
xchg
mov
repz
and
mov
sub
jmp
push
hlt
jge
xchg
mov
jle
les
ljmp
push
sbb
popf
icebp
fstp
xor
stc
popa
mov
jne
xor
mov
out
sbb
loopne
ror
cmpsb
xor
je
jg
data16
adc
ds
in
lods
cltd
mov
loope
mov
call
popa
adc
jae
adcb
jno
dec
out
sub
mov
outsb
decl
in
outsb
call
call
jno
out
mov
push
cmp
outsb
int
movsb
fldl
mov
fnstsw
lock
add
pop
add
adc
clc
fidivs
xor
xor
clc
test
mov
in
sub
outsl
xchg
gs
mov
mov
scas
and
jmp
std
or
frstor
mov
inc
es
lfs
lods
addb
add
fldl
pop
jnp
scas
adc
iret
jae
jno
imul
mov
and
xchg
or
repz
lock
or
sub
fwait
stos
iret
pop
dec
pop
dec
mov
in
and
ror
dec
push
fucomi
and
jl
aaa
fnclex
mov
or
mov
or
insb
add
pop
mov
shlb
jae
jbe
testb
push
lods
adcl
test
jecxz
and
hlt
mov
mov
shl
mov
xchg
test
das
nop
push
mov
lahf
sbb
divb
pop
sub
in
lods
out
xchg
outsb
mov
ds
call
negb
jb
mov
lds
inc
shll
daa
popa
outsb
pop
add
inc
adc
scas
or
xchg
shr
dec
xchg
and
sbb
sahf
jo
nop
xchg
push
insb
push
xchg
rorl
pop
push
mov
push
lcall
sub
loopne
jle
mov
iret
mov
pop
jae
popf
inc
test
popa
call
outsl
mov
aas
pusha
push
push
push
lret
mov
out
arpl
and
mov
push
rorb
xchg
ljmp
cwtl
inc
sub
test
pop
sub
lock
xchg
inc
sahf
sub
imul
and
pop
scas
into
pop
mov
in
bound
push
arpl
add
repz
outsl
xlat
mov
or
pop
mov
lcall
mov
out
insl
mov
outsb
arpl
xchg
jnp
movsl
ljmp
pop
cltd
clc
cmp
pop
pop
nop/reserved
mov
scas
lret
cltd
insb
mov
outsb
test
in
into
test
fnstenv
rol
mov
jp
int3
push
adc
cmp
cmpsb
jle
push
pushf
sub
pop
sbb
sbb
and
flds
outsl
in
xorl
out
dec
xchg
dec
jae
nop
dec
xlat
ja
in
das
lods
xchg
or
dec
jp
inc
icebp
mov
ja
jnp
int3
scas
pop
pop
jge
and
dec
mov
lret
es
sbb
sub
insb
push
ret
loopne
fidivl
popa
bound
dec
lcall
push
cli
mov
jp
sub
jmp
call
lods
scas
insb
cmp
push
push
xchg
out
sbb
shrb
sub
and
outsb
cmp
lods
xor
scas
insb
es
dec
mov
sub
jae
cmp
jnp
cmp
repz
lock
insl
jno
repnz
xorl
mov
mov
jns
pop
inc
aad
enter
outsb
cmpsl
cmp
test
mov
iret
hlt
jae
mov
sub
data16
dec
sub
dec
adc
pushf
incl
test
mov
insb
inc
repnz
mov
xchg
xor
jg
xlat
or
xchg
fs
xchg
pop
dec
out
scas
jne
mulb
and
inc
mov
int3
mov
adc
repz
xorl
scas
push
iret
sbb
mov
add
adc
enter
fstps
mov
aaa
jns
ret
dec
add
mov
in
pop
scas
push
lock
dec
inc
jle
jg
jecxz
cmpsb
aas
mov
insl
xchg
or
out
test
jno
jbe
jne
mov
repz
push
jae
div
insl
push
mov
inc
fdivrs
in
int3
xchg
sub
and
push
or
sbb
cltd
dec
pop
xor
jns
jae
fiadds
xchg
xor
outsb
pop
lock
cmp
lods
out
cltd
sbb
xchg
cli
pop
insl
imull
xchg
ja
jb
push
sub
cmp
or
loopne
mov
mov
pop
jno
cmpsl
cltd
les
test
int3
push
mulb
push
daa
nop
jg
jmp
cmpsl
cmp
xor
push
subl
push
pusha
push
dec
lahf
cmpsb
data16
inc
ds
outsb
mov
test
dec
mov
ret
xor
jae
jbe
ja
xchg
test
lock
iret
jae
lods
dec
mov
mov
jae
es
out
cmp
out
xor
or
jb
cmp
cmp
out
dec
sbb
in
adc
jae
lods
sbbl
stos
xchg
stos
negb
lods
iret
mov
loop
loop
jbe
dec
push
sbb
lods
or
cmpsl
repz
mov
cmp
shlb
xor
loop
imul
rcrb
and
popf
adc
dec
movsb
mov
fistps
push
add
add
pusha
push
add
ret
pop
clc
stc
pop
cld
xchg
loopne
insb
clc
subb
mov
cli
test
pop
cmc
add
dec
xor
arpl
bound
push
xchg
cmpsb
mov
cs
add
push
cmp
dec
cld
xchg
ret
add
into
idivb
jae
xchg
mov
test
cmp
lret
and
aas
pop
cli
cmp
add
incb
mov
mov
xor
mov
lock
jg
fists
dec
push
outsb
test
ljmp
bound
rcr
pop
jle
popf
pop
or
sar
lret
sbb
clc
incl
ljmp
mov
dec
jle
adc
pop
ret
mov
mov
loopne
stc
insb
dec
mov
fwait
push
jbe
cmp
bound
cmc
add
xchg
dec
loopne
out
mov
movsb
cli
xchg
fdivp
push
out
adc
aam
jns
xchg
mov
gs
stc
leave
repz
dec
outsb
dec
lock
mov
or
and
dec
outsl
mov
inc
aam
inc
loopne
cmp
cs
jbe
cli
sub
cwtl
insl
push
clc
xor
xchg
ja
lcall
pop
cmpsl
add
loop
out
popa
lods
lahf
mov
jecxz
fidivrl
add
pushf
xchg
or
xchg
sbb
push
test
js
xchg
sub
sub
mov
mov
push
sbb
scas
repnz
rolb
in
and
sub
sub
lock
mov
cs
int3
mov
xor
lret
mov
movsl
adc
cmc
add
pop
outsb
or
or
cmp
sub
push
pop
paddd
adc
cmpsb
xchg
xlat
insl
or
imul
cmp
jp
ret
dec
pop
loop
mov
dec
enter
mov
aas
mov
jae
cmp
test
loope
lcall
sti
mov
mov
outsb
movsl
xchg
daa
add
and
insb
test
push
mov
mov
fcomi
mov
or
lock
les
jg
outsl
popa
adc
test
dec
cwtl
sbb
mov
xor
sub
sub
cmpsl
lods
dec
cmp
in
pop
xchg
sbb
int
adc
jmp
mov
int3
adcl
jl
fcompl
cld
aam
lcall
mov
dec
jnp
ret
pop
cmp
push
fwait
xchg
mov
popl
adc
xor
pushf
ret
out
mov
scas
pop
mov
cld
jg
add
and
mov
cmc
or
mov
jae
jb
cmpsb
and
mov
clc
shrb
lretw
dec
sbb
sahf
or
mov
nop
pop
loope
add
mov
sbbb
aaa
jno
cld
lods
or
pop
clc
jbe
jmp
mov
je
adc
adc
pop
jg
pusha
pop
gs
jl
es
ljmp
insl
sbb
in
jmp
push
aam
loop
loopne
dec
mov
ljmp
dec
shrb
jne
jmp
mov
jnp
loop
xor
outsb
imul
or
mov
jns
ja
daa
add
pop
loop
cmp
pop
add
push
jne
js
outsb
mov
mov
repz
push
sub
jae
jnp
sub
ror
ret
mov
dec
dec
outsb
outsl
lea
sub
dec
out
jo
jae
inc
xchg
and
shrl
lods
jns
jl
pop
imul
add
popa
xor
xchg
mov
mulps
mov
dec
nop
cwtl
scas
test
or
add
pusha
or
or
cmp
dec
insl
lret
cmp
daa
lods
or
jg
dec
mov
cwtl
add
jae
xor
loop
fldcw
inc
out
std
shll
jge
mov
aas
shlb
inc
ja
inc
and
std
jmp
add
fistpll
loop
dec
and
pop
inc
push
jle
insb
dec
cmpsb
js
mov
das
out
dec
fildl
mov
or
in
data16
fldcw
jge
loopne
test
or
xchg
mov
jmp
loop
outsl
loop
out
jne
xchg
mov
mov
xchg
bnd
fidivrs
pop
cmp
jp
imul
mov
mov
sub
cmpsl
mov
mov
fimuls
jae
loopne
je
xchg
clc
or
ret
loopne
pop
aas
jecxz
jae
aad
jno
jle
cli
inc
hlt
mov
push
mov
mov
mov
dec
shll
es
xchg
arpl
pop
lret
and
jg
mov
out
pop
jbe
imul
mov
in
cmp
outsb
mov
cwtl
adc
sbb
pop
push
sahf
out
ds
leave
push
push
test
popa
sti
inc
and
loope
shlb
mov
or
lods
fisttps
jmp
test
ds
in
ljmp
leave
lock
fsubr
out
add
push
and
cmp
xchg
mov
jmp
outsl
or
jg
push
rcll
pop
adc
push
adc
popa
loopne
loop
outsl
jnp
mov
ret
in
int3
push
divl
dec
mov
inc
adc
cmpsl
inc
lds
mov
fidivs
clc
fists
ret
arpl
jecxz
push
mov
mov
test
sbb
movsb
dec
pop
mov
sub
loop
loope
push
fbld
mov
andl
mov
xor
jo
loopne
or
jmp
mov
pop
bound
aaa
push
mov
enter
sbb
and
jns
clc
orb
dec
loop
in
cmc
fwait
sub
push
and
fldenv
cltd
add
dec
outsl
mov
out
ret
fcoms
dec
clc
inc
int
inc
jg
mov
adc
rcr
pushf
mov
jle
mov
loop
pop
in
xchg
dec
push
adc
pop
addr16
je
jae
iret
scas
xchg
addr16
mov
outsl
dec
cld
add
repnz
cs
sub
and
and
push
jnp
imul
mov
shlb
scas
fidivl
and
std
cli
jnp
xor
sub
mov
pusha
pop
mov
rclb
dec
bound
leave
cmp
dec
data16
sti
mov
mov
cli
orl
sarl
mov
or
fsubl
aas
jmp
mov
call
adcb
add
mov
dec
loop
jbe
insl
or
lock
dec
sub
inc
rol
xchg
loope
mull
cmp
out
aas
cs
inc
mov
lsl
push
out
pop
push
jb
pop
lret
in
es
ja
sbb
dec
imul
mov
ja
jns
rorb
mov
adcl
test
dec
mov
mov
dec
push
outsb
jae
jge
pop
add
loop
dec
shl
or
push
sub
xchg
dec
dec
addr16
mov
call
lods
cmpsb
mov
adc
outsb
mov
into
mov
cmp
outsb
notl
lods
and
lock
jge
ja
out
and
add
cmp
or
fistpll
xor
mov
repz
mov
outsb
or
dec
sahf
xcrypt-cbc
cmpsl
push
dec
addr16
rcll
dec
or
outsb
fs
sub
dec
imul
jns
or
fldcw
and
jmp
es
jg
pop
sub
shrb
pop
insl
dec
fnstcw
outsl
sarb
clc
rclb
push
cmpsb
cli
adc
jnp
cmpsl
imul
add
outsb
jge
std
push
mov
inc
iret
jg
push
movsl
push
in
sbb
dec
add
outsl
cli
cltd
jmp
lcall
push
iret
dec
inc
xchg
lea
push
fstpt
pop
rcrl
dec
dec
and
outsb
call
xchg
pop
jge
sub
pop
imul
add
jbe
sub
dec
scas
in
scas
rolb
movsl
mov
outsl
int3
aam
inc
leave
push
mov
mov
lods
data16
pop
sbb
jge
je
cwtl
mov
int3
je
in
daa
jo
jp
shll
jg
inc
mov
imul
mov
lock
inc
dec
ret
imul
nop
icebp
shll
call
std
jbe
sti
mov
dec
sub
inc
lret
sti
in
sub
and
push
mov
or
in
fwait
inc
sub
jle
loope
mov
mov
push
or
sub
mov
popa
lahf
cmp
push
sbb
data16
xor
pusha
pop
or
adc
sbb
mov
fcompl
jmp
lods
mov
cmp
insb
push
pop
pop
gs
inc
icebp
xor
pop
sbb
push
pop
and
sub
scas
xchg
jg
mov
cmp
aad
dec
mov
lods
lret
filds
clc
pop
test
mov
lock
cltd
inc
into
fdivp
cwtl
or
mov
test
lock
sub
and
rorl
outsb
das
lret
cwtl
push
mov
out
or
or
jmp
jo
mov
loopne
test
mov
loope
xchg
test
mov
or
icebp
ret
add
adc
dec
out
or
mov
adc
sbb
fwait
xchg
pop
test
push
out
lods
shll
push
mov
aam
adc
sbb
adc
sub
loop
nop
outsl
shll
aaa
mov
pop
lea
xor
mov
movsl
push
push
aaa
jmp
mov
push
ljmp
mov
pop
jns
xchg
fildl
insl
cs
int3
pop
insb
outsb
mov
and
jecxz
icebp
fidivrl
mov
mov
bound
jge
and
shr
cmpsb
jle
mov
push
adc
lods
or
push
outsb
rcll
sbb
pop
insb
jae
mov
fildl
iret
or
cltd
mov
push
or
addr16
leave
mov
aaa
mov
daa
and
mov
movsb
rclb
out
cmc
call
push
ja
and
add
jecxz
and
sti
cmpsb
or
pop
jne
jnp
cmp
and
push
loope
outsl
and
lods
gs
test
sarl
stos
xchg
in
pop
or
dec
fadd
out
fdivrl
ljmp
fadds
jg
shrl
jno
sbb
mov
pop
rorb
dec
push
icebp
lcall
pop
out
call
sub
mov
pop
aam
or
push
rcll
inc
lea
insb
jno
ja
orl
jg
sbb
out
jns
test
lds
cmp
add
jbe
fldl
in
dec
jae
jmp
bound
lock
or
pop
mov
adc
push
scas
push
js
adc
loope
sub
adc
cmp
fldcw
xchg
push
xorl
in
lods
das
outsl
outsl
ljmp
repnz
jecxz
daa
inc
add
jecxz
sbb
adc
dec
dec
in
dec
daa
and
mov
mov
xor
jae
sbb
inc
xor
pop
and
push
jg
fisubl
imul
and
add
outsl
push
cmp
outsb
adc
outsl
ja
push
cmp
outsl
lods
add
bound
adc
ret
hlt
call
add
jae
popf
leave
cmp
inc
repz
lcall
scas
add
push
xchg
cs
inc
mov
adc
jae
fnstenv
and
ljmp
mov
pop
das
cmpsl
jae
cltd
test
xchg
loope
int3
jmp
cmc
icebp
mov
inc
push
sub
xchg
scas
jae
mov
movsb
or
inc
ret
mov
lock
movsl
xchg
es
out
imul
insl
jmp
gs
push
in
out
xlat
or
xchg
outsl
sub
cltd
or
sub
rolb
adc
or
mov
inc
repz
mov
lret
int
popf
test
test
jle
insl
les
dec
mov
mov
enter
int3
xchg
pop
in
loopne
icebp
imul
lds
jnp
aam
pushf
fs
jne
cmp
lods
xchg
out
dec
lahf
ljmp
ds
inc
mov
not
mov
or
adc
jmp
mov
inc
idivb
outsb
jl
push
adc
ja
jnp
push
jp
jns
pop
sahf
jae
popa
shlb
movsl
mov
pop
pusha
or
nop
cwtl
ja
lock
mov
lahf
jae
or
stc
inc
xchg
call
mov
addb
mov
mov
shrl
jecxz
outsl
jge
dec
or
inc
inc
jl
push
xchg
dec
jle
in
sbb
dec
dec
ja
scas
mov
mov
xchg
push
add
lret
fs
sbb
jns
push
pop
shlb
mov
icebp
ja
cmp
push
scas
push
ret
pushf
dec
cmp
into
pop
cmp
pop
out
mov
shl
outsb
outsl
pop
add
jb
aaa
clc
scas
andb
inc
test
fnstenv
inc
mov
popa
out
inc
mov
stos
xchg
or
inc
dec
ja
scas
lea
mov
sub
mov
or
jg
in
add
inc
add
and
test
out
out
cwtl
and
push
or
into
xchg
dec
mov
inc
addr16
pop
mov
jae
ljmp
out
mov
mov
mov
faddl
pop
xor
fdivrl
mov
movsl
pushf
jns
jns
xchg
fmull
jmp
loopne
mov
jns
xchg
pop
xor
xchg
mov
xchg
add
sub
nop
sub
mov
mov
cli
dec
add
xchg
xchg
dec
jb
mov
mov
imul
gs
into
out
jg
enter
xchg
pop
lock
xchg
xchg
or
hlt
or
dec
inc
push
daa
adc
lret
loopne
ret
and
popa
xorl
pusha
outsb
in
add
jle
mov
pop
arpl
pop
dec
fistl
dec
cld
dec
pop
adc
movsb
std
rcrl
xor
fistpll
dec
jne
imul
pop
pop
inc
xor
aam
jle
jne
dec
pop
inc
movsb
scas
dec
mov
arpl
sub
stc
js
cltd
enter
addl
cli
call
mov
outsb
or
sub
jle
mov
std
into
sub
xadd
mov
insl
out
mov
sub
std
fidivrs
outsb
movsb
ret
push
test
mov
lahf
xchg
int3
jecxz
ljmp
test
stos
or
pop
negb
mov
cmp
movsl
add
cld
scas
imul
mov
fwait
repz
inc
enter
xchg
stos
cltd
mov
jae
imul
rcl
pop
jmp
adc
jb
cmc
sub
stc
xchg
lret
xchg
inc
jae
dec
pop
or
push
pop
or
dec
pop
jne
dec
jp
hlt
gs
iret
outsl
xor
cmp
ds
sub
orl
sti
loope
clc
pusha
dec
mov
mov
push
lea
mov
jnp
sti
push
test
mov
imul
or
and
scas
xchg
sbbl
push
jns
sub
sub
cmp
pop
pop
leave
int
orps
cmpsl
outsb
test
adc
test
pop
stos
add
inc
outsl
jne
pop
imul
cld
int3
inc
shlb
push
mov
adc
push
pusha
sti
push
jbe
mov
dec
loope
add
sti
and
sbb
push
sarl
ja
jle
xor
into
push
arpl
adc
jge
ja
push
iret
push
out
push
mov
enter
in
pop
jae
jle
negl
outsl
aas
lahf
xchg
movl
xorl
icebp
pop
push
in
shrb
push
clc
arpl
cmp
dec
pusha
sti
dec
dec
gs
jno
aaa
xor
insw
das
dec
dec
xchg
out
mov
mov
xor
inc
int
mov
imul
jae
and
and
stc
icebp
ret
or
push
div
add
inc
aam
lcall
xor
outsl
cmp
or
fcoml
mov
ffreep
hlt
sub
mov
jno
push
sbbb
xchg
enter
lcall
stos
data16
dec
aas
sub
dec
mov
arpl
lods
outsb
fcmovnu
out
movsl
jl
ja
dec
call
in
xchg
mov
data16
lret
xchg
dec
sub
lahf
lcall
aad
pop
mov
enter
mov
rcrl
nopl
ficoms
psrad
mov
cli
fisubrl
int3
cmp
insl
stos
add
mov
into
subb
jb
mov
xchg
mov
int
clc
dec
aas
mov
sar
imull
fwait
movsb
aas
shrb
and
inc
jo
jl
jnp
push
pop
scas
arpl
pusha
test
or
dec
jne
in
jbe
ret
cld
or
add
ja
jle
into
xor
ds
bound
daa
dec
mov
inc
jb
pop
xor
outsb
xor
cmp
out
mov
pop
fxch
xchg
stos
imul
sarb
jmp
test
daa
outsb
imul
js
adc
cmp
lret
cmpb
stc
stos
jmp
call
aam
insb
dec
push
pop
lods
lea
jp
inc
cmpb
jnp
mov
aaa
jmp
and
jp
mov
jne
rorb
and
jo
loopne
lahf
aaa
xor
in
nop
push
mov
clc
mov
mov
pop
xor
out
lahf
imull
stos
and
out
outsb
xchg
and
pop
test
inc
xor
mov
dec
cmpsl
push
xor
mov
jo
imul
cmpsl
in
jg
sti
or
lock
shr
movsb
and
push
mov
ja
scas
outsl
ret
jns
sets
loope
hlt
int3
mov
xchg
lahf
cmpsl
jne
sbb
push
aaa
xor
xor
fsubrl
mov
cltd
cmp
das
mov
ja
call
insb
lds
jg
outsb
push
push
fidivs
test
inc
mov
in
mov
lahf
dec
leave
xor
xchg
into
xor
stos
mov
call
and
and
inc
push
or
call
test
mov
shlb
adc
popa
mov
std
popa
fsubs
xor
loop
sbbl
jge
inc
pop
dec
pop
out
mov
out
cmp
jnp
pop
out
dec
into
outsb
sarl
sbb
push
or
loopne
mov
outsb
sbb
test
insl
sub
sarb
ja
jg
dec
push
xchg
test
jnp
sub
dec
or
sub
out
cmpsl
jae
inc
enter
dec
loopne
incl
imul
jno
in
daa
pop
fisubs
adc
stos
push
inc
jp
cmpsl
inc
stos
jae
cmpsl
daa
xrelease
arpl
test
dec
lret
pop
imul
cli
jg
insb
mov
bound
mov
dec
sub
mov
adc
cmp
call
or
sub
sub
out
dec
loopne
pmaxsw
imul
and
nop
mov
inc
test
and
enter
ret
das
pop
cltd
mov
les
rorb
or
sub
int3
add
push
mov
adc
lods
add
or
xchg
jnp
push
addr16
cmp
cmpsl
jo
das
jmp
cs
outsb
sub
mov
scas
sub
jne
sbb
mov
cvtps2pi
in
aam
mov
les
lock
xchg
mov
xor
movsl
clc
hlt
negl
ds
mov
pop
sbb
stos
mov
in
lock
lcall
aam
enter
dec
xchg
and
test
mov
pushl
hlt
inc
inc
sbb
add
jg
jp
dec
lds
in
in
sub
xchg
in
insb
outsb
inc
lea
add
pop
lret
jg
adc
call
dec
sbb
pop
pop
push
sub
or
mov
cmp
jg
lods
mov
std
lods
test
inc
shl
ljmp
fcompl
mov
stc
mov
push
std
fisubrl
mov
add
and
adc
testb
cmpsl
repnz
mov
iret
mov
in
jno
jne
aas
mov
mov
lds
lock
mov
out
test
out
test
mov
push
aam
lods
cs
int
iret
inc
imul
out
push
rcll
mov
fsubl
or
and
in
adc
jle
push
mov
int3
pop
inc
xchg
cwtl
jae
mov
incb
fistps
insb
jbe
mov
lock
xchg
outsb
ficoml
fcompl
imul
xchg
loopne
sti
in
bnd
test
jl
insl
fs
dec
stos
xorl
mov
repz
idivb
xchg
icebp
dec
nop
mov
ljmp
inc
jae
pop
out
sahf
notb
fcomps
fwait
xor
es
adc
push
xlat
push
mov
jg
and
test
insl
or
scas
mov
test
fmull
jecxz
out
scas
outsb
mov
inc
int3
loopne
popf
or
cli
loop
xchg
mov
aam
or
cmp
jno
pop
rcrb
outsl
xor
popa
jg
divl
dec
jno
xchg
xchg
pop
jns
stos
jmp
add
jg
in
in
leave
movsl
inc
xor
stc
adc
in
inc
data16
je
gs
xchg
push
popa
inc
mov
mov
scas
and
cld
popa
mov
enter
das
dec
inc
cld
aad
in
mov
cmpsb
movsl
shrb
xchg
sub
cltd
cmp
cmpsl
cmp
pop
push
or
ja
or
int3
push
insl
test
jle
add
les
xor
lods
cld
mov
lea
or
push
pop
aas
mov
jmp
arpl
imul
cmp
repnz
lock
xchg
mov
cwtl
clc
mov
xor
mov
test
inc
or
adc
mov
hlt
das
jae
hlt
scas
repz
ror
xchg
scas
cmpsl
shrl
jbe
mov
and
jl
cmpsl
push
fists
or
popa
push
fidivs
fdivrs
das
jns
add
popf
mov
pop
cmpsl
test
mov
popf
loope
loop
mov
enter
mov
loope
push
dec
jp
mov
or
pop
push
pushf
les
sbb
js
pop
outsb
push
mov
dec
sbb
sub
xor
inc
inc
or
jg
dec
sbb
shll
or
push
mov
je
aas
outsb
jg
add
sahf
cmp
ja
add
mov
xor
mov
jg
ss
pop
sub
jb
mov
jb
iret
mov
or
push
in
dec
lahf
push
iret
dec
les
mov
push
jo
in
pop
shl
inc
xor
enter
stos
or
push
imul
pop
insl
insl
aam
test
mov
lret
insl
ja
cmpsb
cs
lret
xchg
push
int3
fistps
sub
push
adc
mov
push
jnp
loope
jne
loopne
pop
xchg
nop
push
xchg
pop
mov
enter
jae
mov
cmp
shrl
rcrb
mov
dec
test
scas
push
call
popf
pop
push
sarb
and
sbb
addr16
xchg
mov
push
in
in
pop
leave
mov
mov
mov
xlat
and
or
pop
xchg
cmpsl
push
pusha
jb
mov
repnz
repnz
ret
jge
test
add
out
cmp
into
repnz
clc
sub
jmp
fwait
pop
pop
enter
stos
jp
mov
aas
in
rolb
sub
xchg
clc
xor
dec
sbb
cmp
flds
push
enter
xchg
sti
pop
shr
sub
into
pushf
mov
xchg
xchg
sub
pop
push
popa
in
mov
dec
cli
outsb
jmp
cld
insl
dec
mov
sbb
cmpsb
cmpsb
xor
addr16
mov
test
lock
mov
loope
pop
mov
out
ret
and
test
movsb
mov
xchg
sub
lret
mov
mov
mov
and
cmpsb
jecxz
outsb
or
out
shlb
cmp
pop
add
inc
dec
cmp
and
imul
inc
sub
sbb
jmp
pop
xchg
cmpsl
xor
mov
movsb
or
and
in
call
shl
sti
jns
sbb
jae
fisubl
or
push
out
daa
data16
xchg
es
pushf
jmp
lcall
stos
mov
adc
cmp
mov
mov
pop
in
pusha
dec
push
push
mov
jg
mov
daa
cmpsl
fcoms
test
incb
jne
repz
inc
push
dec
dec
shll
je,pt
jnp
jle
adc
fcompl
and
lods
test
clc
lock
lret
jne
jp
pop
daa
iret
xor
cmc
cli
push
or
pop
pop
inc
icebp
add
scas
adc
push
pop
movsb
push
pusha
jbe
in
dec
mov
arpl
je
xchg
and
inc
loope
inc
sub
sbbl
cmp
stc
jg
addr16
sub
outsl
jne
jbe
outsb
xlat
into
sub
jmp
mov
outsb
inc
mov
scas
inc
outsl
sub
sub
outsb
scas
xchg
das
outsb
cld
subb
dec
pop
jge
xor
dec
jb
pop
gs
push
cmp
mov
mov
cwtl
jle
ja
pop
mov
ds
jae
inc
mov
stc
cli
mov
in
mov
nop
outsb
outsl
or
dec
mov
sarb
dec
outsl
jae
mov
xchg
lret
pop
inc
aas
or
and
adc
pop
inc
xchg
adc
je
jp
mov
jae
subl
jmp
cmp
fidivs
inc
das
arpl
xor
push
jl
inc
pop
pop
gs
hlt
rclb
lds
inc
pop
sub
sub
pop
or
mov
outsb
cli
inc
in
adc
addr16
push
repz
cmpsl
test
add
cmp
add
cmpsb
icebp
add
sub
les
dec
dec
push
inc
sub
gs
and
mov
mov
jle
sub
jae
enter
test
sub
and
aad
fsubl
outsb
sahf
test
addr16
dec
dec
sbb
ljmp
jl
icebp
mov
mov
pop
jl
or
pop
pop
andb
jmp
mov
push
fistps
dec
add
das
stos
inc
push
jecxz
sahf
mov
sub
cmp
into
cmp
mov
or
xor
aam
mov
ljmp
pop
jnp
mov
lds
jmp
sbb
icebp
ds
dec
iret
js
adc
pop
pop
mov
fldcw
dec
xchg
insl
fucomip
ffreep
and
mov
inc
add
cld
jg
push
loopne
and
dec
add
ret
sbb
sar
push
mov
add
push
pushf
pop
mov
sbb
pop
in
pusha
insb
mov
push
loopne
or
push
push
outsl
cmp
popa
mov
jo
ja
cmpsb
or
sbb
clc
ljmp
pop
lret
filds
test
in
and
mov
out
sti
hlt
add
jno
push
stc
mov
aas
leave
add
xlat
ret
cmp
push
push
mov
aam
sbbl
inc
scas
mov
pop
loopne
out
mov
cmp
jl
in
add
add
std
inc
cld
inc
insl
out
mov
jmp
jl
mov
fdecstp
mov
fptan
scas
add
adc
cmp
mov
js
jle
xchg
xchg
sbb
push
or
jns
data16
jg
jp
in
pop
sub
lea
push
inc
insl
sub
dec
pop
addr16
iret
dec
test
imul
inc
data16
ljmp
das
pop
pop
xor
outsb
scas
jbe
mov
sbb
ja
inc
dec
out
lret
pop
dec
rclb
sub
and
test
pop
dec
int
es
ja
call
in
adc
mov
xlat
add
inc
sub
cli
dec
jae
sbb
out
ffreep
icebp
push
shll
mov
xor
loopne
das
or
cmpb
pop
xor
fsubrp
loopne
add
jbe
inc
divb
dec
cs
dec
stos
dec
out
stc
in
arpl
push
in
idivb
jg
sbb
addr16
jbe
inc
xchg
loopne
sbb
sahf
mov
jae
cwtl
mov
cmpsb
insl
push
pop
and
mov
lods
ret
or
lock
jns
and
sub
lods
int3
adc
jge
jp
shl
clc
and
rcrb
loop
inc
ljmp
pop
push
push
and
dec
lods
push
pop
add
push
dec
pop
clc
push
scas
jnp
sbb
fcoml
outsl
shlb
lods
push
jo
outsb
jae
andb
xchg
dec
ret
or
adc
mov
cld
jbe
jge
or
xor
and
jp
test
movsl
nop
xor
mov
pusha
jl
jns
sub
movb
lock
outsl
jge
js
pop
pop
popa
xchg
lret
mov
push
jae
mov
gs
shrb
sub
call
push
cmp
enter
test
jg
sbb
fsubl
ficoml
jno
push
push
push
test
jmp
xchg
mov
das
add
inc
mov
jg
movsb
mov
nop
jle
jns
loopne
mov
xchg
scas
mov
inc
inc
sbb
cmp
or
push
push
mov
or
jge
cmpsb
cmp
mov
outsb
es
push
push
ljmp
out
mov
sarl
mov
jae
ret
nop
push
pop
mov
xor
inc
mov
fwait
in
dec
lret
and
xchg
cltd
pop
add
mov
inc
jecxz
fwait
sbb
cli
xchg
cmp
mov
lods
call
insl
sahf
pop
nop
idiv
or
int
mov
hlt
fwait
clc
outsl
cltd
mov
cwtl
jg
xchg
dec
inc
pushf
jo
out
rolb
frndint
test
cli
mov
test
int3
pop
int
cmp
cmp
xor
cwtl
or
lcall
xchg
into
or
les
test
test
lea
mov
rcll
push
xchg
push
jne
mov
cmp
packuswb
mov
mov
adc
pop
cs
adc
cmp
lods
adc
out
sarb
dec
ss
cltd
frstor
loopne
inc
ret
ficoml
aam
gs
fidivl
gs
add
lret
pushf
mov
test
mov
orl
int3
hlt
push
das
or
pop
xor
mov
aam
or
cmp
sbb
push
aad
mov
or
push
andl
out
jmp
inc
jg
inc
sbb
xchg
out
push
xchg
ret
pusha
popw
call
stos
mulb
sub
shl
shl
push
loope
out
push
dec
and
movsb
or
push
sub
in
arpl
movsl
add
lods
popa
xor
out
and
dec
jecxz
xchg
fildll
mov
outsl
push
aas
inc
push
out
iret
or
mov
and
in
in
stc
cmp
jmp
or
push
aaa
push
jae
rcrb
and
mov
cmp
psubq
mov
ja
jae
imul
shll
pop
int3
push
mov
xchg
mov
add
ljmp
clc
mov
adc
push
daa
insl
push
xor
mov
and
jne
inc
xor
mov
inc
dec
das
pop
sbb
xchg
repz
mov
and
jb
test
push
out
mov
add
in
push
je
repnz
test
inc
hlt
and
fnsaves
fisubrs
sbb
repz
dec
sub
in
jae
rcr
loope
lods
and
lock
push
mov
addr16
in
push
pop
gs
sbb
scas
cmp
insl
and
decl
pushf
push
mov
int
adc
jo
inc
push
mov
mov
sbb
rorl
in
setno
ja
sti
jecxz
dec
cmp
stc
pop
xor
pop
sub
mov
ret
xchg
insl
add
popa
sbb
scas
xchg
jae
cli
cld
ret
adc
xor
mov
int3
and
loop
pop
js
out
in
pop
xchg
insl
das
xor
inc
pop
imul
in
movsb
inc
cmpsb
sbb
leave
xor
jmp
mov
xchg
ljmp
fnstcw
jge
lahf
sub
mov
iret
jo
pop
sub
sbb
les
out
pop
xchg
repz
cmp
dec
mov
xchg
xchg
mov
ret
adc
mov
cmp
xchg
je
dec
or
iret
movsb
push
sub
mov
dec
xchg
pop
ss
or
outsl
rorb
scas
pop
fcoms
sti
in
and
into
lods
adc
mov
mov
test
jnp
jbe
lock
das
or
xor
mov
in
dec
in
imul
sbb
idiv
mov
pushf
xchg
rcll
aad
test
std
jae
stc
roll
notb
add
lds
push
loop
or
loopne
std
scas
aaa
ja
push
jno
mov
jae
hlt
inc
movsb
push
inc
movsb
nop
es
ja
or
inc
add
dec
out
call
les
jae
lahf
inc
adc
out
loop
imul
pop
or
cwtl
sub
jg
jmp
int3
sub
cwtl
and
xchg
cltd
divb
out
insl
cmp
pop
pop
test
jno
jmp
inc
nop
fs
and
pop
out
clc
jae
or
or
cmp
dec
pusha
ds
mov
lret
xchg
js
mov
xchg
mov
adc
or
xchg
inc
dec
lret
ds
test
gs
bound
rorb
fldt
fabs
shrb
lods
jg
out
jns
clc
xchg
xchg
xlat
inc
ljmp
pop
pop
aad
lret
inc
xchg
jmp
outsl
or
xchg
gs
lea
cli
sub
fisubs
movsl
jmp
xchg
mov
out
pop
aas
adc
mov
outsb
mov
scas
sahf
imul
cs
je
add
icebp
inc
clc
dec
repnz
test
dec
lret
sub
push
shrb
xchg
add
movsl
roll
pop
das
mov
scas
mov
jle
iret
jae
jg
rclb
out
xchg
add
sub
in
gs
jmp
addr16
test
pop
loope
xchg
jecxz
loopne
loope
fs
dec
xchg
loope
aam
lret
adc
stc
fists
jg
push
push
cmpsb
and
inc
adc
mov
aam
push
test
shl
dec
popa
in
aas
pop
mov
leave
test
ljmp
mov
mov
lret
aas
test
xor
clc
sub
or
imul
stc
daa
daa
pop
outsb
pop
xchg
mov
sub
mov
addr16
inc
or
xor
orl
dec
adc
adc
pop
push
cmpsb
imul
test
add
idivb
xchg
movsb
mov
pop
push
sbb
push
jg
imul
jmp
ret
ret
fnstenv
aad
aas
inc
add
test
dec
cmp
fxch
gs
leave
mov
pop
pop
xor
in
add
inc
dec
mov
mov
xor
into
dec
mov
xor
jge
insb
rorb
or
pop
popf
roll
lret
jmp
inc
jecxz
test
push
addr16
clc
stos
xchg
sub
mov
in
dec
push
jmp
movsl
stos
jmp
lock
and
sahf
jne
icebp
mov
test
fcompl
stos
pop
inc
jle
xor
pushf
adc
div
jg
jl
je
fld
ret
jb
push
and
xor
fwait
pop
xor
dec
mov
inc
sarl
jmp
test
decl
clc
aas
lods
xchg
pop
push
xor
out
inc
and
or
aas
and
xchg
jne
dec
loop
pushf
mov
mov
stc
data16
xchg
and
pop
cmp
push
stos
cmp
jp
mov
jg
mov
insl
sbb
mov
push
or
aaa
in
sbb
out
outsl
inc
popf
cmpsb
outsb
std
test
jp
and
jp
insl
push
scas
mov
inc
icebp
xchg
mov
push
fs
mov
outsl
repnz
dec
insb
push
rcrl
xor
inc
movsl
jns
mov
mov
ljmp
fldcw
xchg
sbbb
push
movsb
stos
cmp
or
out
sub
inc
jg
stos
xor
mov
dec
or
pop
xchg
int
push
mov
mov
push
mov
scas
lods
sarb
ds
adc
or
dec
mov
inc
addr16
or
adc
or
adc
xchg
cmp
in
dec
mov
xchg
adc
jno
lea
in
dec
push
push
sarb
inc
cltd
push
stos
jno
sbb
mov
fistps
and
push
or
add
into
lret
add
test
rorl
xchg
push
xlat
or
xlat
ljmp
bound
add
mov
inc
jo
loope
sbb
insl
adc
js
daa
and
ss
xor
mov
or
jp
enter
ja
mov
scas
jno
jnp
cmpsl
loop
jne
jp
push
cmp
loop
jno
out
aam
xchg
push
loop
xor
xor
jne
xor
pop
dec
test
negb
push
or
ja
jp
pop
pop
jle
cmp
lock
jl
pop
cmpsl
mov
mov
and
faddp
pusha
int3
ret
lahf
push
cmc
xor
in
lods
int3
push
outsb
cmpsb
sbb
fsubrs
or
insl
aaa
mov
sub
call
test
repz
and
addr16
incb
lock
out
mov
dec
jae
les
mul
dec
fisttps
shll
xor
rclb
insb
test
idivl
xchg
sub
jle
adc
mov
or
lods
xor
pop
and
lds
push
push
pop
outsl
in
shrb
push
inc
shlb
jnp
cmp
jns
out
jae
ret
lahf
or
sub
test
xchg
lock
in
ja
mov
and
jmp
out
xchg
loope
cmpsb
cmp
das
dec
adc
pop
andb
push
mov
xchg
out
pop
mov
pop
and
faddp
jecxz
lods
scas
bound
movsb
lds
cmpsb
loope
mov
inc
ljmp
arpl
mull
pop
test
out
out
outsl
out
mov
jmp
outsl
dec
addr16
mov
add
stc
add
inc
mov
mov
in
std
popa
jg
jg
call
test
mov
fs
ds
mov
pop
fldt
push
sub
sbb
mov
push
outsl
pop
jae
pop
or
daa
jecxz
inc
pop
mov
out
outsb
js
xor
data16
pop
and
push
lock
sub
cmc
loop
jp
add
push
outsl
cmp
outsb
push
xchg
in
js
cld
stos
into
push
outsl
sub
arpl
mov
ja
lock
push
push
pushf
test
mov
loopne
add
inc
loopne
mov
mov
cmpsl
test
jae
pop
bound
jne
mov
ror
pop
inc
dec
in
sti
cltd
dec
push
cli
movsb
push
jnp
insl
xor
mov
es
out
bound
shrb
cmp
int
data16
addr16
test
jnp
outsb
jle
xor
out
insb
in
loop
mov
cltd
repz
pop
jl
jae
cmpsl
dec
clc
push
cmpsb
scas
xlat
cld
xlat
gs
call
fs
sub
popa
out
cs
int
cld
push
mov
popf
inc
inc
mov
fisubrs
int
imul
dec
int
addb
movsb
push
addr16
push
loopnew
in
cmp
shr
add
inc
mov
sbb
push
sahf
fcmovne
xchg
arpl
pop
pop
push
imul
imul
fldt
out
inc
syscall
push
pop
pop
fwait
mov
test
adc
insb
sbb
dec
add
jmp
push
call
into
add
icebp
stos
cmpsb
imul
xor
outsb
fdivrs
enter
in
dec
mov
and
mov
repnz
xchg
push
bound
clc
mov
dec
mov
mov
cmpsb
dec
jg
nop
js
xchg
lods
enter
inc
outsl
scas
cmp
jp
repz
iret
in
scas
jg
jl
call
mov
aas
popa
aaa
jecxz
dec
push
pop
lahf
inc
jmp
std
dec
cmp
lods
jl
insl
pop
pop
paddusb
jmp
cmp
clc
push
sub
incb
mov
or
sub
pop
lods
loopne
sbb
outsl
fsubrl
aas
jge
icebp
outsl
push
iret
aam
sub
mov
inc
clc
out
stos
jle
idivl
dec
fdivrs
sbbb
or
out
push
mov
xor
sub
dec
insb
call
subl
xor
jae
iret
fisubrl
add
mov
adc
jnp
jne
inc
mov
add
mov
mov
bound
xor
lcall
jb
push
mov
sbb
mov
jmp
es
jmp
sbb
ja
testb
aas
nop
mov
loopne
xor
jne
push
pusha
mov
loope
adc
jo
push
sbb
pop
jecxz
xor
pop
sub
and
in
scas
push
mov
int
cmp
and
sub
mov
cmp
leave
push
or
sbb
sub
out
out
pop
dec
repz
adc
dec
adc
pop
jae
mov
sub
jmp
add
jl
dec
push
sbb
mov
dec
adc
mov
or
mov
insb
inc
addr16
jo
jl
call
cmp
cmpsl
jg
jle
inc
sub
mov
insl
aas
cmp
imul
mov
xchg
pop
in
fsubrp
xchg
sbb
sub
jb
ja
add
dec
mov
stos
testb
sub
je
jnp
cmc
dec
inc
jae
adc
sub
inc
cmpsl
xchg
test
pop
lea
dec
pop
faddl
call
and
test
insb
xchg
movsb
and
mov
rclb
arpl
test
mov
loope
outsb
lahf
xchg
mov
pop
test
xchg
insb
mov
pop
movsb
or
dec
fcomip
outsb
mov
scas
mov
xor
xor
movsl
in
mov
ljmp
popa
cmc
pop
test
xchg
dec
cli
into
orl
cmc
mov
nop
xchg
sub
cmpsb
push
insl
test
mov
pop
lea
mov
rcr
jmp
mov
jbe
inc
outsb
ljmp
cmpsl
mov
aam
iret
push
movsb
or
jmp
push
out
xor
ja
add
dec
ljmp
lds
push
mov
fs
pusha
xchg
incb
hlt
movsl
out
icebp
add
das
or
hlt
in
aas
daa
movsb
ds
jg
fucomi
push
fstps
in
xchg
mov
mov
les
mov
clc
mov
pop
jmp
dec
mov
outsl
or
scas
imul
pusha
insl
lcall
in
lcall
mov
in
call
hlt
jae
daa
sub
shrb
imul
test
mov
out
inc
pop
ds
mov
push
cltd
xchg
jg
fnsave
sub
nop
or
and
or
dec
add
lock
jp
inc
dec
sbb
or
mov
and
mov
xchg
or
clc
cli
test
jecxz
jle
mov
pop
rclb
mov
xchg
jg
sub
dec
xor
inc
dec
lahf
hlt
imul
or
sub
stc
xchg
dec
mov
jno
pop
cmp
sbb
call
and
lods
ja
inc
sbb
dec
push
jae
daa
mov
xor
outsl
sub
pop
insb
ja
inc
dec
in
movsb
sbb
call
jae
mov
fiadds
sti
outsb
shrb
push
enter
sarl
fists
lods
xor
jmp
imul
mov
and
mov
sub
gs
push
je
adc
xchg
cli
sub
push
clc
push
ss
jg
mov
jae
cmpsl
adc
sti
test
pop
dec
loop
cmp
dec
jae
ret
lock
jne
or
loopne
sti
cmp
jbe
insl
shlb
aam
arpl
repnz
jge
or
mov
sub
aam
fneni(8087
sarb
shlb
outsl
pop
xor
inc
inc
mov
mov
loopne
mov
insb
outsl
fmull
in
mov
push
sbb
sub
addr16
mov
sub
div
and
add
jb
adc
inc
mov
ret
ljmp
popf
pop
cmpsl
and
arpl
ljmp
xchg
pop
leave
into
add
pop
movsl
mov
mov
lret
push
hlt
mov
out
out
sbb
mov
fwait
cmpsl
out
test
repnz
add
out
pop
add
add
sub
adc
pop
sub
mov
sahf
inc
bound
xor
gs
pushf
sti
cmp
stc
lahf
pusha
adc
js
jmp
mov
add
call
call
adc
vpmulhuw
xor
idivl
into
dec
cmpsb
stos
adc
out
incl
or
out
js
push
lea
push
call
dec
jns
and
fbld
test
mov
in
mov
out
clc
int
ja
and
sub
add
sub
or
dec
testl
cwtl
or
jp
xor
fiadds
xchg
loope
test
dec
js
mov
shlb
sub
sarl
or
mov
clc
pop
sbb
lock
xor
inc
jb
mov
icebp
xchg
insl
pop
int
and
mov
icebp
lahf
jae
loope
push
ffreep
daa
mov
cmp
mov
push
ret
sub
push
imul
lret
add
inc
mov
jg
call
in
ljmp
jg
outsb
mov
jg
inc
stos
cs
or
testl
jg
mov
mov
loopne
adc
jbe
sarb
jbe
cmp
ja
loop
inc
dec
jae
pop
xchg
fiadds
pop
nop
add
roll
scas
popa
pop
outsb
jle
jns
loope
aas
mov
scas
dec
and
je
xor
mov
loop
and
mov
inc
mov
jno
outsl
xlat
adc
dec
pop
inc
and
jmp
bound
lret
mov
dec
lods
popf
stc
mov
jae
movsb
in
shl
testb
outsb
jns
fcomip
push
push
outsl
imul
sbb
pop
mov
enter
stos
in
addr16
mov
pop
idiv
sbb
mov
ja
push
jne
mov
hlt
cmc
jmp
add
mov
aas
cld
jmp
lods
icebp
movsb
fisttps
mov
dec
insl
dec
pusha
mov
in
popf
or
outsb
or
xchg
jg
mov
mov
loop
mov
add
push
outsl
insl
xor
clc
push
mov
std
insl
test
cmpsl
xchg
imul
jne
xor
cmp
mov
xor
or
jnp
insl
push
hlt
jg
roll
hlt
dec
xchg
movsl
ret
add
je
into
loope
jg
imul
jae
mov
and
movsb
push
xchg
dec
sub
insb
std
mov
sub
pop
and
mov
jo
xchg
pop
push
jg
insl
jmp
sub
test
fstpl
push
add
mov
ja
out
mov
loope
jg
insl
dec
jmp
data16
insl
mov
sbb
jmp
sub
dec
outsb
push
dec
mov
test
insb
mov
les
xchg
mov
mov
jae
inc
dec
push
fistpll
or
lahf
pop
and
insb
jno
adc
pop
insl
and
push
sbb
jmp
inc
out
fsubl
jae
add
add
mov
test
adc
inc
outsl
int
xor
lock
inc
cs
in
cwtl
cltd
adc
mov
xor
cld
mov
and
test
pop
mov
in
jge
scas
jae
addr16
push
lret
test
mov
and
add
mov
lret
in
mov
adc
or
xchg
adc
adc
outsb
orb
stos
dec
jae
dec
mov
lcall
and
dec
bswap
mov
mov
lcall
push
inc
test
out
inc
ljmp
lods
call
pushf
stos
dec
jg
dec
std
jle
cld
rcll
jg
cmp
stos
jae
test
dec
add
adc
xchg
and
sbbb
push
add
in
push
mov
mov
jmp
test
cs
out
loop
dec
adc
leave
out
lods
push
imul
call
inc
sahf
lock
icebp
inc
xor
loopne
jge
loopne
sbb
push
lock
lods
mov
pop
jb
loop
add
cli
lret
dec
lods
out
adc
lahf
mov
mov
pop
jo
jmp
int
pop
ss
inc
xchg
scas
ret
out
mov
xchg
push
xchg
test
adc
jns
xchg
mov
test
repz
and
insl
lds
stos
xor
gs
mov
jecxz
cs
jle
test
dec
ret
pop
out
lea
out
scas
pusha
pushf
out
dec
pusha
cld
outsl
loop
imul
lret
pop
cs
jg
clc
pushf
in
int3
jae
pop
ficoml
out
push
mov
cli
xchg
ja
outsl
out
jae
stos
cmpsl
jbe
test
xchg
outsl
dec
push
imul
xor
dec
dec
dec
dec
pop
ret
shrl
ret
pusha
int3
push
push
mov
std
push
mov
push
fs
push
pop
loop
xchg
push
push
or
sub
lods
mov
sub
sbb
pop
or
shl
outsl
enter
fs
jp
jns
xor
adc
pop
in
movsb
movsl
into
in
ret
stc
push
xchg
sar
scas
or
cmp
mov
mov
icebp
add
add
mov
aas
xchg
mov
in
lret
das
push
sti
dec
out
jmp
jns
add
ljmp
enter
test
jg
outsl
jae
mov
std
push
sbb
js
jg
test
dec
out
fdecstp
jecxz
sub
sti
insl
pop
mov
sub
jnp
cld
inc
xorl
mov
in
stc
sti
or
cmc
mov
jmp
outsb
insb
fdivl
pop
repnz
push
loopne
pop
clc
pop
and
mov
inc
cli
stc
popa
cmp
call
out
mov
orb
das
movsb
ffree
jecxz
inc
andb
popa
pop
push
test
pop
hlt
mul
jno
loopne
je
in
lret
and
clc
dec
dec
daa
or
add
push
ficompl
insb
mov
in
mov
push
sub
adc
inc
mov
out
insb
test
shll
jg
cwtl
or
pop
in
inc
dec
icebp
add
mov
andb
jae
push
repnz
clc
int3
dec
sub
cmp
imul
add
mov
repz
jbe
out
aaa
mov
jno
mov
cld
leave
xchg
clc
cli
call
or
pop
cltd
mov
push
and
mov
sti
sbb
stos
cld
jp
lock
jnp
mov
lods
les
inc
out
in
jb
scas
pop
repnz
push
cmpsb
inc
std
mov
cmpsl
pop
stos
jl
add
shrb
jg
pop
arpl
aas
mov
outsb
sahf
fisttps
mov
mov
xlat
pop
or
insb
outsl
scas
mov
in
rcr
jp
rclb
scas
shrl
sti
hlt
add
repnz
dec
jl
push
rcr
cmpb
dec
mov
jbe
xchg
lods
jae
imul
repnz
jne
push
pop
repz
or
sbb
add
addb
repnz
xchg
jno
mov
push
mov
adc
mov
sti
outsb
fsubrl
rolb
js
mov
xchg
aas
push
sub
jno
ja
mov
daa
int
stos
repnz
scas
mov
idivl
lock
xor
sub
pop
scas
lret
xchg
mov
dec
lods
call
mov
fwait
jmp
jno
scas
mov
out
pop
xor
sbb
insl
xchg
fwait
push
fisubrs
stos
cld
mov
lcall
dec
loopew
push
call
pop
or
shll
in
mov
jmp
add
sti
pop
xor
dec
add
mov
sbb
aad
ljmp
or
in
scas
imul
dec
out
shrb
or
lods
jmp
lods
imul
mov
or
popa
lock
push
sub
lods
addr16
fsubr
fiadds
lret
repz
sub
scas
test
out
inc
test
nop
fwait
pop
xchg
pop
in
dec
push
dec
ret
fnsave
mov
out
insl
in
loope
ds
inc
outsb
pop
mov
dec
arpl
mov
dec
arpl
in
out
inc
test
out
sbb
mov
jl
scas
in
mov
arpl
shll
mov
lcall
add
popw
pop
and
jnp
aas
dec
jp
enter
pop
jl
into
sub
xchg
ja
push
dec
leave
or
dec
jl
orb
mov
and
jno
insb
cli
sbb
mov
in
sbb
mov
imul
mov
ss
mov
and
out
jns
push
loopne
dec
insb
lock
mov
fbstp
aas
out
lods
dec
inc
nop
mov
and
mov
jl
out
mov
pop
jae
inc
mov
inc
lods
and
sub
inc
es
add
sub
sbb
call
rclb
int3
out
cltd
es
lods
je
or
adc
pop
ret
xchg
push
insb
icebp
fstl
dec
in
pushl
jb
jg
adc
cli
nop
and
jp
xor
into
das
ds
imul
jmp
cwtl
out
loop
scas
inc
add
inc
mov
inc
xchg
mov
add
sbb
xchg
push
push
stos
iret
jns
inc
lcall
dec
cld
mov
mov
mov
pop
inc
aas
ret
stos
add
or
bound
outsl
es
jl
dec
jg
out
jmp
adc
sbb
xchg
pcmpgtd
repnz
or
inc
or
popa
test
clc
inc
fst
pop
pop
notb
in
add
ss
nop
xchg
nop
xchg
fmull
mov
outsb
jle
and
xchg
lret
iret
repz
mov
sub
loop
inc
inc
outsl
out
fs
fists
cmpl
dec
aas
dec
out
fsubl
mov
sbb
outsl
int
arpl
mov
push
repz
jae
nop
and
pop
ja
dec
shr
clc
xchg
dec
sub
mov
test
pop
test
call
adc
cwtl
int3
push
jbe
ja
jb
pop
out
test
or
popa
xor
add
jb
ja
divl
into
xchg
das
test
pop
out
mov
cld
out
repz
cmp
pop
xchg
arpl
or
lcall
mov
daa
faddl
jae
pop
mov
adc
push
movsb
dec
into
cmpb
andl
jecxz
mov
call
mov
fs
jae
js
jle
jg
pop
lret
pop
or
mov
jmp
add
ljmp
sahf
lea
mov
out
mov
test
dec
in
sub
cmp
pop
inc
sbb
or
dec
test
mov
inc
push
push
in
lock
mull
outsb
lock
test
in
stos
call
clc
cmpsl
push
xor
sbbb
push
test
lods
mov
cmp
loop
insb
add
dec
bound
or
sub
loope
inc
add
mov
cmp
mov
outsl
push
mov
shrl
sub
outsb
dec
stc
call
lret
jmp
into
and
das
push
pop
call
pop
mov
test
test
pop
xchg
mov
hlt
pushf
jecxz
inc
sub
addr16
add
loop
mov
cwtl
mov
das
ljmp
test
negb
inc
and
xor
rcl
insl
inc
ss
xor
jle
clc
pop
or
call
push
mov
dec
or
rolb
push
mov
scas
sub
xchg
ss
push
outsl
into
mov
dec
stos
stos
pop
lcall
sub
jae
clc
add
daa
jno
stc
mov
enter
mov
cmpsb
test
sub
ret
dec
and
or
sbb
popa
daa
push
push
cmc
mov
sub
jp
aaa
or
andb
cs
data16
out
cli
stos
scas
dec
jmp
dec
or
and
jae
dec
mov
stos
dec
mov
test
out
loop
or
aas
or
loopne
xchg
call
loop
cmp
test
dec
or
push
jg
hlt
ljmp
add
and
mov
hlt
sub
or
je
daa
movsl
push
jne
push
mov
dec
add
pop
in
arpl
mov
cltd
stos
mov
jle
lea
mov
nop
xchg
int3
test
mov
into
loop
and
mov
pinsrw
leave
mov
push
rorb
pusha
add
mov
jb
xchg
shl
scas
das
and
clc
push
dec
or
push
stos
pop
clc
push
imul
jle
add
or
fdivl
filds
push
inc
and
popa
out
jmp
bound
mov
insl
fistpll
mov
mov
sub
das
xchg
loop
and
cmpsb
out
rol
pop
sub
loop
mov
xor
mov
jae
out
inc
and
mov
es
mov
js
xchg
dec
jge
mov
imul
lods
int3
jecxz
push
sbbl
clc
je
in
mov
mov
add
mov
pop
inc
ret
int3
addr16
inc
lock
lret
dec
and
jbe
push
pop
sbb
push
inc
das
popf
xchg
mov
mov
inc
loopne
nop
into
add
es
movsl
jae
iret
mov
mov
fwait
in
insb
pop
jbe
dec
sahf
fidivl
inc
jmp
mov
dec
xor
pop
int3
push
cmpsb
dec
mov
loop
dec
std
add
push
pop
mov
pushf
push
push
dec
sub
insl
into
dec
lahf
aas
jg
or
orb
insb
push
stos
lret
xchg
dec
push
and
into
jmp
xor
ja
dec
mov
xchg
daa
push
cltd
dec
pop
inc
pushf
sub
sarl
sbb
cs
pushf
jb
pusha
push
sbb
cmp
or
inc
jg
push
xchg
out
push
push
rcll
hlt
cmpsb
dec
dec
dec
dec
call
lea
sub
negl
cmp
mov
out
outsl
iret
lods
or
jp
dec
addr16
shlb
xchg
or
mov
rol
mov
shrl
mov
lock
fwait
push
cmc
pop
nop
jmp
mov
std
mov
mov
cld
scas
adc
stos
jle
jns
pop
outsb
jnp
mov
outsb
adc
mov
nop
or
pop
fstps
cs
inc
imul
mov
jg
mov
sub
sbbb
mov
jbe
mov
popa
or
add
scas
mov
mov
cmp
aas
stos
mov
mov
or
in
ret
jge
out
lods
outsl
and
push
push
mov
sbb
push
int3
sub
out
stos
xor
jmp
mov
lea
insb
lea
call
shlb
mov
inc
mov
testb
fdiv
lret
movb
lea
xor
test
out
loop
sti
flds
out
sti
pop
dec
adc
repnz
mov
push
ja
arpl
movsb
lods
data16
and
addr16
test
and
xchg
sub
push
push
xor
pop
fsubr
or
mov
stos
push
sub
aaa
push
mov
stos
cs
sub
bound
mov
stos
scas
push
loop
loop
out
mov
jae
insb
adc
ret
mov
add
dec
mov
dec
daa
fsubs
scas
out
push
je
or
clc
loop
pop
sti
sub
sbb
cs
iret
lret
je
loopne
les
jmp
in
push
jne
pushf
out
imul
les
cwtl
hlt
mov
mov
clc
or
ret
rep
adc
in
xor
insb
jmp
fiadds
mov
pop
es
shl
cmp
out
inc
scas
call
iret
cmpsl
insb
adc
push
ret
out
mov
out
push
icebp
fcmovnbe
inc
xchg
popa
in
das
dec
imulb
lods
out
mov
cltd
jmp
aaa
es
in
aam
test
ja
sbb
inc
ret
pop
or
xchg
push
aaa
jae
or
xor
aam
sbb
xchg
mov
cmpsb
mov
cmp
loope
hlt
cltd
sub
push
dec
dec
outsl
push
mov
sahf
test
call
lret
cmpsl
add
dec
mov
ret
std
mov
pop
push
leave
pop
sbbb
pop
insb
push
xchg
pop
dec
push
mov
jecxz
push
or
sub
xor
xchg
sub
enter
iret
pop
pop
add
call
adc
cmpsb
pop
cmc
arpl
jecxz
pop
jnp
out
out
push
insb
dec
insl
push
rorl
sub
lds
jo
jb
adc
or
xorb
mov
ss
and
jge
ret
mov
out
rcl
jge
daa
dec
xor
outsb
xchg
cmp
mov
loop
sub
out
fucom
sbb
stos
xchg
in
test
fs
outsb
imul
nop
cmp
ljmp
fldpi
pop
test
jge
clc
push
ja
sub
cmpsl
cmp
sahf
jae
cmpsl
repnz
int3
repnz
push
mov
insl
jp
pop
out
hlt
mov
scas
xor
push
sub
std
in
outsb
mov
lock
jg
ret
pop
je
inc
jne
sbb
jno
outsb
rol
lock
cmc
mov
mov
add
push
ss
mov
int
or
int3
shlb
outsb
inc
adc
xor
into
xchg
jg
dec
mov
jae
lods
into
dec
push
inc
stos
xchg
mov
loopne
lods
inc
or
cmp
out
xchg
cs
jno
idivl
xor
lea
ja
inc
lds
cltd
stos
mov
push
pushf
in
dec
jae
loop
scas
addr16
movb
xor
mov
cmc
xchg
push
lods
add
outsb
addr16
cmp
jae
mov
out
mov
ljmp
add
or
andl
sub
xchg
arpl
jle
movsl
idivb
mov
jbe
sti
jno
push
jle
mov
dec
std
cs
adc
mov
daa
std
aam
movsb
jne
adc
inc
fidivl
es
outsb
jge
jge
outsb
mov
sbb
shrl
pop
mov
loope
mov
inc
push
pop
mov
xchg
xchg
fadd
cmpsl
out
sbb
push
arpl
subl
pop
and
test
ret
dec
lods
sub
dec
mov
jg
iret
cmp
inc
pop
fsub
shrl
mov
inc
push
push
outsl
push
rcrb
push
cmpsl
mov
mov
dec
dec
outsl
divb
adc
loop
lock
icebp
pop
loopne
push
inc
test
sub
inc
add
lods
push
xchg
es
subl
aam
test
fmull
ds
pop
or
stos
out
dec
lock
xchg
push
push
or
test
adc
pop
xor
xchg
mov
cltd
mov
enter
out
xchg
push
pop
stos
out
dec
lock
cmp
and
push
js
add
out
out
das
pop
sbb
into
jno
enter
sub
test
and
jae
mov
mov
sbb
sub
cmpsl
in
rorb
mov
cld
mov
ljmp
out
pop
ljmp
cmp
mov
jb
push
sub
push
test
push
ljmp
and
inc
push
ret
test
nop
jbe
adc
mov
push
lea
out
pop
push
pop
jne
xchg
repz
repnz
out
in
add
adc
jmp
movsb
out
in
ja
lahf
imul
into
ret
arpl
mov
cmp
inc
enter
pusha
dec
push
xchg
aad
mov
fsubl
dec
adc
aam
ds
push
outsb
adc
dec
pop
jl
outsb
pop
lock
dec
sub
push
push
je
dec
clc
or
fstpl
jmp
scas
lcall
cld
hlt
adc
jb
ss
daa
popf
sbb
cld
bound
sub
int
adc
or
push
mov
lea
test
repnz
loope
arpl
pop
jns
rcll
int
xorl
aad
jle
jb
jns
loopne
dec
cmpsl
dec
dec
push
add
in
dec
mov
jb
xor
pusha
dec
xchg
repnz
mov
mov
out
adc
lods
mov
or
rcrl
flds
or
int
ss
dec
aas
imul
cmp
pushf
inc
adc
outsl
cmp
in
lock
call
test
adc
dec
loopne
fndisi(8087
imul
inc
aaa
icebp
test
fsubl
inc
std
push
std
cmp
jns
test
push
je
mov
lods
in
xor
dec
aaa
fmuls
jns
ret
mov
xor
pop
jge
addr16
lahf
roll
lds
push
xchg
xchg
mov
sub
repnz
repz
mov
enter
div
add
test
lds
jno
sbb
insl
dec
stc
jle
cmp
fidivl
push
and
adc
loopne
lods
cmc
sbb
push
setno
out
imul
fiaddl
enter
or
jae
jnp
insb
outsl
ljmp
sti
adc
pop
out
jp
mov
rorb
insl
std
lcall
jne
cmpsl
jne
sub
jl
int
outsb
aad
lahf
outsl
push
test
movsb
jg
outsl
add
sub
or
fisttps
loopne
xchg
lods
mov
mov
cmp
jecxz
loop
push
bound
xor
pop
adc
jle
xchg
cld
incb
out
pop
adc
dec
out
loopne
popf
mov
dec
jo
inc
clc
gs
enter
repz
stos
push
insl
sbb
nop
xchg
add
xchg
cmpsb
sub
pop
push
movsb
push
jne
out
pop
in
pop
int
outsb
dec
xchg
dec
and
js
dec
dec
fildl
lods
mov
bound
ret
repnz
dec
mov
inc
mov
push
cmpsl
mov
jno
rorb
shrl
andb
or
push
jp
xchg
lret
pop
cld
sbb
lret
add
insb
gs
push
pushf
cmc
divl
in
cli
lods
lds
inc
xchg
outsb
mov
or
stos
and
mov
test
outsl
pop
add
jge
jae
or
repnz
cltd
aam
test
lret
or
cmpl
add
rolb
addb
lahf
aaa
add
add
repnz
flds
cmp
mov
loope
loop
test
push
rorl
flds
xchg
into
and
out
xchg
outsl
cmp
aam
xor
mov
xor
sbb
stos
ret
std
bound
jmp
je
dec
sub
inc
sahf
cltd
dec
arpl
mov
shl
push
dec
rclb
xlat
lock
mov
enter
pop
addl
jae
fisubl
popa
movsl
lds
sti
push
insb
xor
jo
jae
cld
xchg
outsb
add
add
inc
iret
das
mov
push
cmc
inc
into
mov
outsl
mov
inc
xor
in
jle
int
outsb
frstor
push
jmp
insb
xchg
sub
sahf
rorl
scas
cld
call
add
dec
jle
xor
int3
and
add
xchg
push
enter
dec
push
inc
cmpsl
int3
cmp
hlt
bound
cwtl
je
add
mov
push
sub
cmp
jb
clc
and
andb
cmp
arpl
jle
mov
loop
jle
sahf
sbb
jle
pushfw
jne
call
mov
repz
inc
scas
int
scas
ret
jbe
repnz
dec
pop
cld
outsl
xchg
decb
dec
push
jns
mov
sti
fs
add
xchg
int3
push
fsubrl
mov
sbb
ljmp
scas
jl
dec
sti
int
arpl
std
mov
xchg
jae
adc
pop
pop
ret
xchg
xor
or
xor
nop
jg
ja
pop
push
arpl
ret
int3
sbb
icebp
jae
push
add
orb
test
xchg
xor
out
aad
or
scas
xchg
mov
rcrb
or
scas
outsb
negb
xchg
xchg
loopne
or
sahf
test
adc
lret
mov
xchg
imul
arpl
mov
mov
cmp
lret
mov
jbe
dec
sbb
jg
mov
mov
add
adc
jl
lcall
shrl
cmc
adc
out
insl
call
in
inc
stos
insb
inc
insb
mov
xchg
out
mov
sub
lret
xchg
stos
jmp
lds
xchg
out
inc
sbb
push
cmpsl
nop
mov
mov
jae
xorl
lods
mov
xchg
movsb
mov
inc
mov
lods
lock
int3
push
inc
pop
jge
add
xor
fcomp
mov
dec
ljmp
std
gs
lret
push
xorl
ret
aaa
push
outsl
push
xchg
pop
hlt
arpl
iret
cmp
ja
out
xchg
cmpb
push
iret
adc
out
cmc
outsl
outsl
jae
ljmp
or
imul
out
fwait
xorl
xor
jg
aaa
fs
sbbb
mov
outsl
int3
mov
jp
iret
ja
mov
add
inc
jbe
inc
lds
subb
ja
pop
insl
cmpb
push
cmp
aas
jae
and
outsl
adc
jbe
push
and
jns
outsb
cltd
dec
mov
lock
imul
nop
add
add
cltd
dec
sbb
pop
xlat
lods
imul
xchg
mov
push
scas
jb
mov
xchg
sub
cmp
sbb
sbb
xchg
xor
push
lods
push
rorb
push
pxor
pop
shl
outsl
pushfw
es
stos
mov
inc
roll
rolb
mov
or
mov
push
dec
call
xchg
and
jmp
xchg
cmp
mov
xchg
iret
pop
enter
mov
in
dec
ret
sahf
xchg
sar
sub
cltd
lock
pop
outsb
inc
mov
test
mov
scas
int3
je
lea
cs
das
sub
adc
xchg
icebp
dec
jg
divb
ret
pop
arpl
push
jns
ficoml
mov
xchg
fwait
jne
cmp
ljmp
out
and
xchg
dec
test
mov
or
sub
into
mov
push
dec
in
shll
into
ja
push
or
sub
movsb
mov
mov
adc
jae
push
mov
lea
arpl
mov
push
jae
stos
inc
jp
xchg
rcr
stos
cmp
jne
dec
arpl
dec
cwtl
jae
cmc
jg
mov
lods
scas
push
mov
out
jecxz
aas
mov
push
jmp
and
cwtl
and
push
add
mov
loopne
jnp
in
ss
sub
test
les
pop
imul
xor
test
stos
int3
fisubrs
subb
mov
xchg
ss
cmp
loopne
scas
push
dec
out
out
mov
jno
pop
outsb
or
pop
test
add
mov
roll
les
test
push
mov
jge
cwtl
std
adcl
pop
mov
std
cmc
mov
iret
sbb
mov
sub
movsb
lock
scas
mov
and
jge
addr16
push
jnp
lcall
insb
in
mov
loopne
pop
arpl
push
push
pop
dec
imul
hlt
arpl
push
out
je
dec
add
dec
cmc
dec
insl
pop
jne
add
loopne
jbe
jle
in
cmpsl
je
in
call
int3
jp
in
js
cmc
stos
insl
stc
int3
insb
stos
fs
clc
mov
in
jp
popa
stos
insl
sti
int3
arpl
stos
out
in
loope
jl
ja
insl
std
lods
inc
dec
jge
jl
in
scas
jns
insl
jle
out
aas
insl
in
ljmp
jecxz
pop
inc
out
mov
out
mov
imul
sbb
cltd
movsb
jg
repnz
pop
subb
scas
jp
loop
jl
bound
arpl
lods
jge
imul
out
inc
sub
mov
inc
movsl
jns
fsubrs
sbb
fs
scas
pop
outsl
jae
iret
mov
ret
imul
outsl
int3
lahf
push
add
mov
nop
jae
and
and
scas
inc
pop
mov
outsb
push
pusha
in
cs
repz
mov
xor
hlt
ja
mov
xchg
mov
push
xor
inc
jns
jle
jae
ja
pop
outsl
loop
test
dec
call
pop
clc
and
xor
mov
dec
push
mov
nop
or
ja
mov
ja
idivb
add
mov
sbb
shl
pusha
xchg
std
adc
jno
orb
add
out
aaa
leave
stos
jp
mov
sbb
push
ds
push
mov
cmp
pop
fmuls
arpl
js
xchg
jmp
ljmp
ja
mov
jns
xchg
in
lahf
iret
es
dec
cmp
ffree
lret
cmpsl
mov
in
add
nop
cmp
mov
xchg
or
pop
jo
orb
es
test
cltd
aam
outsb
nop
iret
xchg
push
lods
dec
out
mov
add
xor
andb
sub
call
ja
outsl
imul
movsl
in
jns
mov
imul
and
lds
out
frstor
push
jg
jl
fxam
js
adc
dec
dec
nop
ret
pushf
and
dec
imul
xchg
push
in
les
imull
jne
pop
cmp
inc
jecxz
ret
stc
push
lock
movsl
outsb
stos
repnz
insl
sbb
mov
pop
lock
and
push
out
dec
inc
jae
mov
mov
pop
push
out
scas
cld
cmp
and
and
in
out
fdivrp
stc
mov
cmp
js
sbb
jno
mov
mov
data16
pand
cli
jno
shr
adc
mov
in
mov
dec
iret
scas
ljmp
shlb
shlb
daa
outsb
inc
sub
nop
popa
outsl
sub
or
pushl
inc
andb
jl
dec
push
add
mov
mov
xor
sbb
js
scas
andl
ret
dec
test
sub
sbb
shrl
scas
iret
xchg
call
lcall
jmp
in
outsl
or
ja
pop
popl
out
dec
inc
data16
lods
ficoms
mov
outsl
mov
cmpsb
jns
mov
mov
mov
lods
jle
and
mov
or
inc
mov
outsb
and
out
jno
das
insl
and
sub
scas
pop
xor
dec
dec
push
gs
out
pop
stos
or
cld
loope
into
clc
outsb
mov
lock
jmp
jbe
lcall
xchg
into
mov
pop
inc
das
cmpl
xor
mov
push
mov
push
jge
dec
jbe
in
mov
enter
xchg
sarl
mov
mov
sahf
arpl
ss
jns
stos
mov
scas
cmpsb
repz
lds
clc
test
inc
adc
xacquire
fs
pop
jle
rcrb
addr16
les
outsl
pop
xor
into
mov
jb
cld
loopne
in
fcompl
mov
jle
mov
into
ret
jno
sbb
popa
sbb
and
fsubr
fcoms
pop
sbb
inc
out
out
pop
jge
cmp
inc
push
js
imul
and
test
in
xor
lock
icebp
pushf
outsb
in
data16
mov
in
dec
mov
fptan
fnsave
jae
out
cmovge
mov
cmp
jg
cmp
repnz
mov
dec
jmp
sub
lock
in
pop
or
insb
ljmp
and
mov
test
nop
xchg
dec
arpl
movsb
mov
iret
in
mov
rorb
xchg
inc
test
aas
fsubrs
inc
lahf
dec
pop
jb
push
jecxz
sbb
and
cmp
jge
sbb
gs
sub
out
dec
insb
pop
insl
pop
cmp
mov
cmp
jl
dec
fiadds
pop
cld
gs
loop
or
aad
cmc
in
dec
insl
mov
hlt
das
lock
and
btl
jl
cmp
mov
outsb
in
addr16
test
mov
inc
imulb
addr16
jg
push
pusha
paddsb
add
sti
iret
call
inc
xor
xchg
out
js
shrb
cli
jne
inc
and
add
adc
andl
and
mov
out
cmpsb
inc
inc
sub
mov
mov
sub
jecxz
dec
cs
sub
int3
popa
sarb
les
adcb
das
cmp
sbb
adc
in
sbb
stc
lcall
push
adcb
cmc
cmp
sbb
jne
mov
sahf
xchg
out
outsl
rolb
fwait
cltd
insb
scas
add
and
mov
negb
push
mov
inc
push
fldt
mov
dec
push
stc
mov
gs
iret
cltd
sbb
or
ljmp
sahf
subb
out
loopne
bound
add
inc
pop
add
sub
enter
in
out
fisttpll
cmpsb
scas
stos
inc
aaa
out
into
addr16
test
aaa
insl
add
fdivrl
enter
rcrb
pop
std
pop
mov
xor
les
dec
dec
out
lods
subb
mov
push
js
add
sarb
imul
loopne
xor
out
dec
imul
push
incl
jg
jp
bound
loopne
out
push
mov
push
jns
imul
loop
nop
sbb
cmp
in
dec
jge
pop
out
repz
in
jecxz
fimuls
testl
gs
scas
mov
loope
jg
popa
decb
mov
dec
jge
movsl
test
int3
adc
aam
mov
in
loope
out
mov
and
sub
orl
mov
movb
dec
cs
sbb
adc
fisttpl
adc
sbb
add
inc
cmpsl
mov
mov
in
in
in
lds
xchg
lret
mov
jae
jns
cmp
mov
jle
insb
mov
pop
cli
dec
negb
dec
dec
inc
outsl
gs
push
std
js
jns
ss
shl
mov
cld
scas
pop
sub
aaa
movsl
into
mov
out
dec
jnp
dec
dec
inc
and
imul
addr16
mov
hlt
clc
pop
sbb
fwait
cmpsl
xchg
popf
aas
fisttpl
jb
sub
ja
ret
cmp
test
sti
out
loopne
lds
mov
pop
jno
popa
mov
sub
cmp
adc
mov
inc
ret
jnp
loopne
sub
out
cs
jns
ja
insb
add
cmpsb
enter
icebp
repnz
push
push
jae
outsb
pop
data16
outsb
imulw
jns
loop
idivl
std
pop
insl
pop
inc
out
subb
out
jecxz
inc
dec
pop
outsb
pop
dec
cli
mov
in
mov
dec
repnz
pop
push
outsl
hlt
push
inc
jb
dec
xorb
pop
dec
jecxz
ja
outsb
lods
cmp
popa
add
jecxz
test
push
jnp
aaa
inc
jbe
outsl
call
andb
inc
add
sub
sbb
jno
push
fs
mov
dec
and
int3
push
popa
jg
mov
xor
js
jae
and
jecxz
call
pop
lock
movsb
iret
insl
mov
into
cs
mov
arpl
std
xabort
ja
fldenv
das
dec
test
jns
incl
les
mov
and
shrb
lock
je
insb
jbe
mov
addr16
cmc
bound
aam
scas
lock
xchg
repz
popf
std
in
mov
xor
cld
jle
fbld
mov
hlt
sbb
jge
ret
bound
inc
imulb
and
mov
and
xor
enter
ds
out
sub
in
and
loop
fs
jmp
sub
das
cmpsl
adc
inc
fdiv
xchg
fwait
fbld
mov
scas
andl
xor
pusha
jecxz
faddp
stos
xor
out
pop
fsubrl
inc
push
gs
jle
lock
or
pop
jno
lock
xchg
mov
and
xor
add
mov
cltd
popa
cmp
xor
arpl
lock
fs
cli
leave
outsl
sbb
ja
dec
test
cmp
mov
idivb
sahf
outsb
jg
cmp
pop
mov
ljmp
dec
arpl
dec
in
mov
in
fs
dec
lcall
incb
xchg
add
sbb
insb
out
add
mov
jne
dec
out
enter
add
mov
icebp
frstpm(287
mov
scas
loop
jg
popf
imul
dec
jg
mov
stos
imul
ja
test
jnp
lods
cmpsb
jle
mov
into
arpl
daa
jmp
sbb
lods
testb
insl
dec
insb
cmp
outsb
mov
jns
daa
mul
dec
sti
loop
sbb
jmp
dec
cmc
imul
movl
test
stos
imul
add
divb
inc
testl
outsl
fs
push
push
shll
cltd
lods
adc
mul
repz
out
jmp
in
movsb
out
imul
in
jle
enter
addr16
in
outsl
push
js
popl
adc
clc
sub
push
movsl
icebp
or
pcmpeqw
cs
bound
mov
in
push
xchg
loop
in
mov
mov
jecxz
dec
dec
dec
pop
outsb
in
jns
mov
sub
push
push
mov
pop
pop
push
shlb
xor
jge
inc
xor
in
sbb
loope
and
fildl
mov
mov
cmc
dec
sub
sbb
cmp
call
mov
mov
insl
out
jle
lcall
dec
in
loopne
fldcw
outsl
sub
jns
adc
out
xor
jne
jnp
aaa
jg
outsl
outsl
icebp
mov
jbe
jp
dec
jnp
in
push
jecxz
out
fldcw
mov
bswap
jbe
mov
sti
mov
scas
adc
popa
jo
sahf
push
pop
popa
outsl
in
mov
loope
jae
dec
mov
jecxz
add
dec
jecxz
push
aaa
imul
imul
cmc
lret
jecxz
out
sbb
push
cmpsb
xor
inc
arpl
dec
push
jecxz
add
mov
daa
mov
int
ja
xchg
imul
jg
popa
in
xchg
cmpsb
iret
icebp
ja
scas
icebp
aam
inc
das
outsl
stos
add
mov
adcb
jns
add
loop
jecxz
stos
mov
xchg
mov
sahf
in
mov
and
mov
inc
aam
faddl
iret
jns
pop
xor
pop
inc
out
mov
insl
mov
fs
mov
ret
add
mov
test
xor
mov
test
mov
lods
jp
das
cs
leave
stos
fs
dec
outsl
cmp
jecxz
mulb
dec
push
dec
add
test
fsts
mov
out
add
shll
add
mov
mov
outsl
outsb
lock
fmul
shl
dec
das
enter
sub
popf
in
loop
imul
repnz
test
mov
out
leave
sti
add
xchg
ljmp
and
pop
call
push
int3
test
jp
push
push
jle
jae
repz
jb
push
insl
dec
ljmp
scas
outsl
std
pop
out
stc
lods
dec
outsl
and
jl
call
insb
jmp
out
add
out
lods
loop
shlb
dec
mov
pop
mov
mov
mov
cs
cs
iret
fsub
call
das
js
scas
push
daa
fiadds
shlb
adc
mov
ds
das
addr16
std
dec
in
outsl
jecxz
push
loop
push
arpl
repz
cli
push
jmp
dec
jnp
dec
push
jns
in
cmpsl
out
push
fs
dec
push
lock
bnd
and
or
and
pop
lret
lds
add
fisttpl
xchg
in
std
and
push
shrl
mov
outsb
fldt
add
xor
cmpsl
mov
push
inc
lds
lock
insl
cmpsl
push
in
or
adc
jno
inc
mov
das
out
pop
xlat
sbb
popa
add
je
push
movsb
cmpl
pop
outsl
faddp
aad
jbe
and
mov
dec
xor
loopne
mov
mov
sub
scas
movsb
out
in
jmp
out
clc
push
sub
daa
xchg
mov
mull
sbb
ficomps
insb
int3
lcall
mov
int3
xchg
call
mov
jmp
sbb
cmp
push
mov
mov
mov
sub
outsb
je
sub
shr
jns
pop
jmp
jmp
int
push
cmp
scas
out
bound
cli
mov
jmp
jns
dec
bound
jns
cmpsl
jg
arpl
test
inc
dec
lea
int3
into
adc
fistpll
sub
in
fstp
sbb
jecxz
or
add
test
scas
faddl
repnz
inc
bound
sbb
cmpsb
scas
mov
lret
jmp
xchg
jge
or
adc
adc
pop
pop
stos
adc
and
les
lock
test
push
cld
loope
std
ja
dec
jbe
xchg
fsubp
int3
call
lods
enter
push
sub
add
pushf
faddl
or
pop
sub
push
imul
mov
or
imul
pop
jge
jmp
push
lods
or
dec
outsb
push
scas
insl
lds
aam
daa
dec
daa
cmp
cmpb
jmp
outsb
call
mov
int3
in
fnstenv
jae
out
out
movsb
arpl
test
incl
mov
pop
arpl
loop
outsb
bound
mov
add
in
call
outsl
fmull
data16
stc
inc
clc
cmp
incl
sbb
addr16
addr16
pop
imul
jle
sbb
iret
dec
push
scas
jb
inc
sub
cmp
cli
mov
out
jmp
popa
addr16
in
sub
push
dec
loope
pop
in
int3
shr
je
data16
cld
scas
out
fsubrl
and
xor
imul
jecxz
push
sahf
fs
in
and
mov
fbld
pop
mov
decb
and
dec
decb
jnp
push
idivb
out
in
fildl
sub
mov
mov
call
jns
xorb
pop
outsl
loop
insl
outsb
dec
sti
lcall
stc
mov
dec
cmp
hlt
dec
push
loope
out
jnp
jecxz
pop
lock
pop
outsb
imul
stos
in
lahf
js
enter
call
rclb
inc
inc
aas
jns
xchg
fs
xlat
aas
jle
pop
in
cmp
cli
mov
or
clc
cmp
cmp
mov
popa
inc
inc
pushf
lock
pop
stc
jle
imul
mov
push
ja
insl
repnz
pop
lcall
f2xm1
repz
lock
mov
push
bound
imul
xchg
jns
push
repz
stos
clc
stos
testb
dec
mov
pop
push
push
push
arpl
xchg
and
sub
clc
push
imul
dec
in
outsb
inc
cmp
gs
jb
dec
outsb
outsl
xor
pop
hlt
mov
mov
mov
dec
decl
mov
pushl
and
xor
addr16
jno
dec
dec
loope
notl
ljmp
inc
add
imul
pop
in
test
fisubs
insl
sti
out
outsl
addr16
cmpb
jg
push
insl
jbe
jl
xlat
dec
dec
dec
pop
dec
jns
in
insb
mov
jmp
lods
popa
les
cli
call
adc
testb
cmp
call
jecxz
lods
in
prefetch
bt
movsl
shl
jmp
sub
jmp
inc
add
add
jmp
pop
int
test
int3
rolb
inc
fisubrs
das
sub
jle
pop
std
data16
lock
dec
sub
repz
cmp
mov
sub
stos
fs
outsb
jmp
sti
stc
clc
dec
lods
mov
int3
das
cli
dec
call
repz
ljmp
push
int3
sbb
jnp
dec
outsl
ljmp
lahf
cmpsb
js
dec
jle
mov
pop
sti
outsl
lock
jecxz
push
lcall
mov
lcall
fwait
arpl
mov
jae
dec
std
dec
out
inc
lock
addr16
repz
pushf
fimull
enter
sarb
add
sti
imul
dec
daa
dec
gs
jne
sbb
in
enter
inc
outsb
jg
fwait
outsl
call
cmc
enter
daa
insb
inc
repnz
mov
cmp
dec
mov
pop
in
je
push
scas
lds
jle
gs
ja
sub
jae
xchg
clc
imul
push
idiv
stc
in
xor
outsb
test
xchg
jmp
test
lret
daa
jge
outsb
idiv
dec
je
sub
mov
and
cmpsl
in
xchg
ss
shrb
sub
dec
daa
sti
insb
xlat
pop
repz
add
jge
mov
or
test
fs
insl
in
inc
mov
jno
jge
push
or
cmpsb
dec
test
cmp
insb
clc
andb
imul
ja
xorl
nop
in
sub
pop
push
test
pop
outsl
outsw
decl
jp
xor
int
dec
cs
inc
xchg
mov
prefetch
or
adc
and
decl
lahf
iret
jg
out
into
call
jae
jle
and
cld
sbb
jge
repnz
call
lcall
roll
xchg
cmp
fisttps
cmc
mov
fisubl
lret
xchg
cltd
pop
imulb
cmpsl
loopne
decl
ret
pusha
sarl
or
ret
in
jae
cwtl
sub
mov
or
cs
cmp
insb
jno
jb
mov
lahf
outsb
dec
cli
arpl
out
sbb
mov
cmp
jecxz
leave
arpl
fmul
dec
jecxz
call
jno
pop
inc
adc
and
or
add
jns
xchg
imul
push
mov
sarl
sub
outsb
push
in
scas
lcall
mov
in
add
sub
lock
mov
cltd
mov
test
lahf
outsl
enter
inc
pop
es
xor
mov
or
addl
shll
lods
lods
int3
subb
cmpsb
insb
imul
sub
mov
push
mov
sti
or
pop
mov
push
bndstx
sbb
xchg
cmp
das
pop
dec
gs
push
or
cwtl
out
cmp
mov
add
lahf
jae
mov
and
cmp
push
clc
aam
ret
jg
outsb
mov
cs
jl
push
enter
or
lahf
leave
add
test
stos
dec
imul
push
mov
mov
cmp
pop
aas
scas
lods
ljmp
jp
arpl
in
orb
mov
pop
mov
jb
rcll
leave
test
mov
adc
ljmp
mov
cmp
cld
mov
mov
jae
mov
mov
dec
mov
inc
mov
out
mov
rorl
mov
lods
mov
mov
mov
cmpsb
scas
imull
jbe
or
mov
adc
jmp
cmc
push
scas
pop
cmp
sbb
out
std
mov
outsl
pusha
clc
insl
lret
or
insl
inc
lods
call
call
jg
lcall
push
cmpsl
push
stos
inc
pop
loope
mov
out
mov
addr16
outsl
sbbb
ds
movsb
jl
outsl
add
ja
in
dec
jb
adc
mov
pop
out
lods
dec
mov
lods
dec
lahf
iret
mov
cwtl
sbb
xacquire
xor
xchg
bswap
icebp
lock
sub
rorb
or
jle
push
dec
ja
daa
mov
out
lahf
sub
out
mov
sbb
xchg
enter
fwait
mov
jmp
icebp
mov
out
jl
cld
pop
fwait
scas
mov
pop
pop
lods
cmpsb
cli
sbb
insl
sub
dec
mov
incl
mov
shlb
out
jg
ret
cld
xchg
divl
adc
out
pop
out
fisubl
pop
out
shr
ss
add
xchg
inc
push
leave
faddl
out
insl
dec
outsl
cmpsb
outsl
cmpsb
in
in
inc
out
lds
pushf
outsl
fwait
out
lahf
loopne
mov
lret
popf
ljmp
mov
out
andb
dec
out
mov
xchg
mov
outsl
mov
shl
jp
sbb
test
daa
ljmp
and
sarl
fdivs
imul
mov
and
call
inc
das
jae
fisubl
pop
cli
jecxz
out
out
and
push
outsl
push
adc
out
sbb
shrb
jmp
insl
shlb
xor
sbb
sti
addr16
mov
leave
pop
mov
inc
adc
sahf
lret
push
loop
scas
push
daa
lock
sub
mov
sbb
scas
adc
outsl
xchg
push
xchg
outsb
cli
ja
jg
cmpsb
mov
push
fidivs
ss
pop
jo
int3
cwtl
call
or
push
nop
adc
andb
push
jae
outsb
ss
popa
ja
pop
push
mov
addr16
js
xchg
add
arpl
jns
loope
push
mov
in
add
dec
push
xchg
mov
cmpsl
add
mov
xchg
mov
xchg
lock
xor
pop
jns
sti
push
cld
mov
dec
iret
push
jmp
cmp
mov
mov
cmp
aam
jl
fdivp
and
pop
out
push
movsl
push
and
adc
push
aaa
cmpsl
adc
ljmp
call
inc
mov
imul
outsb
push
xchg
nop
call
icebp
and
inc
mov
in
pop
out
aad
xchg
pop
xchg
dec
icebp
ret
sahf
int3
cmp
pop
sub
negb
jle
jbe
clc
pop
ja
add
in
pop
dec
or
add
jg
inc
cmp
sub
outsl
in
sbb
ja
mov
lds
cs
or
enter
inc
and
shrl
cmp
out
xor
lock
jle
dec
aaa
xorb
mov
lods
aad
inc
outsb
in
ja
arpl
and
stos
call
dec
daa
dec
int3
xor
jnp
outsb
call
add
dec
aad
mov
jb
cmp
aad
mov
popa
lock
imul
iret
outsl
in
clc
ljmp
xor
pop
dec
popa
mov
pop
iret
xchg
mov
sub
int
mov
jns
push
or
or
sub
aad
lods
call
imul
aaa
popa
mov
stos
daa
jbe
pop
cmp
lods
call
jg
mov
fcoms
aad
mov
cmp
push
addr16
std
outsl
lock
call
jns
loop
jg,pt
clc
data16
popa
lret
jb
xor
dec
bnd
aaa
popl
pop
sub
outsb
dec
inc
ja
lcall
and
adc
adc
cmc
jp
scas
aad
adc
push
push
mov
add
jb
cwtl
rolb
adc
jb
scas
lahf
shr
es
lods
dec
sbb
call
add
arpl
cltd
icebp
cmpsl
jb
sahf
data16
out
dec
jb
int
stc
fdivr
cmpsb
frstor
and
xchg
fisubs
stos
jo
leave
add
dec
inc
ljmp
dec
jae
outsb
and
sar
aam
jae
fadds
arpl
out
sbb
sbb
lods
pusha
stc
cs
xchg
dec
ja
out
jae
pop
popf
clc
stos
cmpsl
outsl
outsb
mov
in
lods
dec
je
cmc
bound
mov
xchg
add
dec
adc
dec
idiv
jne
negb
dec
not
lods
test
repnz
add
in
and
sbb
push
mov
ljmp
mov
lods
dec
lcall
sub
xchg
shll
push
jg
cmpsb
jae
cmp
inc
add
add
inc
stc
lods
cltd
xor
fldenv
cmc
inc
sbb
repnz
fldcw
test
cwtl
pop
sarb
out
shlb
rorl
out
dec
fisubs
ljmp
outsb
sub
ret
sbb
push
xchg
outsl
mov
stos
add
sub
lahf
mov
inc
pop
in
shl
les
add
stc
loop
xchg
jmp
cmp
ret
adc
out
inc
cmpsl
stc
lahf
sbb
mov
outsb
mov
mov
push
xchg
and
and
lock
sbb
push
xor
outsb
pop
mov
out
shrb
repnz
fucom
jne
add
sarl
cmp
idiv
fiadds
mov
ficomps
int3
test
jmp
pusha
mov
mov
pop
je,pt
jge
cmpsb
loope
cmpsb
in
ljmp
repnz
test
lods
or
stos
xor
sahf
movsl
mov
outsb
test
or
xlat
in
push
jl
ja
repnz
test
adc
repz
or
ret
data16
daa
mov
sahf
push
outsb
lods
in
ja
adc
test
clc
add
jns
push
cmp
lods
outsb
bound
push
sti
fisttpl
enter
mov
and
jbe
mov
std
test
sbb
and
mov
and
mov
push
lods
cmp
movsb
xchg
sub
cmpsl
xchg
xor
xchg
insb
es
popa
inc
pop
dec
ret
dec
inc
mov
sub
push
pop
loop
mov
push
xor
mov
inc
inc
dec
mov
pop
popa
mov
xor
or
out
dec
mov
call
ret
movsl
mov
les
stc
jmp
fisubrl
xorb
fidivs
outsb
push
pop
addr16
mov
lock
addr16
insb
outsl
sbb
repnz
fwait
aam
sub
inc
pop
jb
popa
inc
sub
dec
dec
es
stos
jb
and
mov
or
outsb
repz
imul
cli
addr16
loope
insb
sbb
mov
mov
xchg
pop
fidivrl
jg
or
inc
psubq
into
lret
shrb
scas
pop
jle
andb
sbb
jne
inc
inc
push
xor
subl
pop
dec
scas
imul
xor
jne
dec
leave
add
cmc
and
out
daa
sub
int3
popa
imul
fsubrl
leave
jno
arpl
jecxz
and
mov
insl
outsl
cmc
add
and
loop
cltd
je
dec
cmp
data16
mov
in
push
mov
imul
nop
int
lahf
leave
popf
or
sub
dec
push
adc
inc
mov
std
or
fdiv
jmp
lahf
add
xor
add
mov
in
outsb
ret
pop
lahf
dec
or
addr16
insb
mov
sub
inc
movsb
lods
mov
ja
call
into
mov
das
inc
and
in
dec
fwait
sub
clc
xchg
mov
jne
sbb
call
lea
mov
jg
inc
mov
add
dec
jg
sub
push
dec
idivb
fsub
gs
xchg
call
jb
mov
jno
dec
daa
push
cmpsb
mov
dec
in
inc
es
dec
mov
outsb
mov
sbb
out
data16
sbb
loopne
inc
mov
jae
fstl
bswap
mov
push
stos
sub
stos
dec
icebp
or
jno
repz
jno
loop
pusha
loope
or
push
in
inc
and
andl
pop
dec
mov
in
outsl
mov
imulb
jne
inc
mov
mov
adc
into
push
sub
add
push
xchg
add
mov
icebp
adcl
loope
enter
in
dec
mov
xor
sbb
and
scas
jle
dec
pop
push
dec
jmp
push
enter
xchg
and
movsb
aas
lods
ljmp
daa
mov
mov
mov
lret
add
orl
nop
in
lret
jno
mov
fnstsw
or
jb
testl
insl
lods
jnp
add
mov
test
ret
and
cmp
jno
icebp
rcrl
in
add
cmp
subl
out
repz
jge
fwait
inc
push
xchg
loope
sbb
outsb
out
xchg
mov
push
movsb
push
addr16
aas
push
dec
arpl
out
mov
pop
mov
bound
dec
gs
push
cmc
xchg
pop
shrl
ret
clc
es
add
loope
and
push
outsl
rolb
and
mov
add
jp
insl
fwait
jns
pop
out
sub
jecxz
rolb
out
adc
mov
push
outsb
in
bound
or
in
adc
idivl
movsl
out
pop
imul
pusha
adc
insl
xchg
xor
pop
sub
mov
lret
pop
out
sub
push
ret
or
js
nop
xchg
test
lods
jp
test
rcl
icebp
and
loop
push
xor
adc
stc
mov
jae
fs
lods
jecxz
push
xchg
int
mov
gs
shll
dec
in
scas
std
pop
imul
inc
inc
or
outsl
inc
jnp
sub
shrb
fbld
pop
mov
pop
imul
loope
dec
cmc
daa
mov
or
popa
push
pushf
xchg
or
mov
outsl
in
and
add
or
mov
lret
lods
lahf
mov
add
or
ret
imul
jge
addr16
out
dec
ret
ljmp
aas
sub
xor
int
fbld
sbb
and
mov
push
aas
dec
pop
jle
iret
ja
lock
inc
or
outsl
in
stos
out
dec
in
out
xchg
bnd
in
fistpll
and
sub
into
shll
lahf
mov
push
add
loope
push
inc
sbb
sarl
xor
into
leave
scas
jmp
dec
aas
jg
into
stos
dec
add
ja
call
dec
xchg
out
mov
cmp
outsl
push
arpl
jmp
xchg
mov
mov
out
dec
dec
push
jl
out
push
loopne
and
and
fiadds
push
jae
ret
dec
gs
sub
and
pop
jb
loopne
mov
pop
jle
movsl
push
and
cmpsl
push
outsb
out
pop
mov
push
ljmp
out
sub
push
pop
jo
inc
out
push
add
mov
push
or
lret
jge
xchg
repnz
shll
stos
ret
push
bound
push
jg
shl
pop
in
in
push
mov
inc
cld
lret
das
mov
dec
jmp
jbe
sub
jle
push
stos
out
mov
das
repz
xchg
push
jle
mov
inc
inc
in
jle
jle
sbb
loopne
iret
scas
jae
xlat
mov
pop
jg
jns
or
add
outsb
mov
je
data16
dec
hlt
sub
jp
pop
out
cmp
insl
and
out
pop
mov
lock
or
xor
sub
mov
xchg
popa
or
cmpsb
sub
insl
fildll
in
mov
jg
cmpsl
loope
clc
out
jecxz
test
pop
xchg
jle
into
pop
subb
adc
push
push
mov
mov
xor
jne
lds
popa
stos
jl
js
add
inc
ret
dec
mov
xor
jae,pn
je
jle
mov
pop
jmp
aas
data16
mov
in
std
xchg
cli
cmpsb
out
outsb
lods
push
cmp
rorb
data16
inc
in
pop
add
jge
rolb
loop
inc
mov
add
lret
sbb
sbb
lods
pop
or
lahf
ror
inc
xor
out
in
xor
adc
pop
in
in
outsb
mov
scas
repnz
sub
dec
in
ret
ljmp
scas
cld
lds
inc
ret
mov
lock
arpl
scas
scas
in
imul
cmpsb
out
inc
repz
pop
jb
mov
je
push
dec
aam
in
pop
push
ljmp
stc
lea
imul
dec
outsl
cwtl
popa
xchg
add
movsl
adc
aas
insl
cwtl
loopne
xchg
imul
outsl
inc
ret
push
push
add
dec
cmp
in
mov
shr
jb
pop
dec
sub
pop
hlt
clc
lcall
ljmp
lock
lea
aas
shr
sub
mov
into
and
and
call
test
mov
les
data16
lahf
mov
int3
popa
int
add
je
inc
movmskps
dec
cs
aam
stc
xchg
add
lds
lahf
mov
mov
mov
addr16
jnp
mov
ss
jbe
enter
icebp
test
push
jbe
mov
movsb
cmp
mov
and
sarb
pushf
ja
pushf
pop
mov
jge
jecxz
xchg
sti
dec
sub
xchg
push
push
clc
sbb
mov
movsb
jp
inc
mov
lret
adc
mov
cmp
test
out
lret
sbb
scas
dec
test
pushf
insb
mov
repz
outsb
out
fcompl
lock
jmp
inc
pusha
iret
mov
mov
xchg
mov
mov
scas
negl
xchg
orb
imul
pop
adcb
rorb
pushf
ds
push
dec
decl
loop
scas
daa
jmp
jmp
add
mov
test
jg
push
push
out
jae
pop
shrl
mov
lock
out
out
xchg
je
pop
icebp
call
sarl
jmp
rorb
cmp
pmullw
and
mov
jae
pop
jle
xor
add
movsl
jns
lods
loop
pop
ljmp
add
mov
in
int
pop
ljmp
inc
dec
mov
out
js
lock
or
cmp
in
ja
dec
sub
sbb
ret
popa
and
jge
popa
arpl
jne
sbb
pop
movsb
pop
inc
test
jmp
aas
imul
in
cmp
scas
mov
in
adc
lahf
aas
addr16
outsl
std
in
cmp
sbb
mov
fnstcw
inc
fldenv
fildl
pop
in
dec
mov
jle
sti
and
loopne
test
fisubrs
sbbl
and
fldt
mov
loop
ja
out
xor
pop
xlat
pusha
pop
jbe
pop
jb
inc
pop
add
lret
scas
adc
mov
std
dec
pop
jl
jb
int3
mov
scas
imul
add
imul
sti
pop
out
scas
mov
in
hlt
push
lret
mov
cmpsl
imul
mov
cmc
push
sub
mov
aas
dec
sbb
xchg
cmp
dec
inc
push
and
imul
mov
sbb
popa
pop
add
sbb
jecxz
fmull
and
add
ds
mov
lret
loopne
out
jo
dec
jecxz
mov
ljmp
add
adc
test
jecxz
lods
sbb
jg
loop
loopne
xor
cmpb
fnstsw
in
les
leave
stos
in
jmp
shll
jmp
outsl
cmpsb
loopne
int
adc
fsub
and
mov
xor
stos
je
inc
xabort
xor
hlt
clc
in
jmp
outsl
mov
mov
inc
dec
jne
enter
xchg
nop
cmc
enter
dec
ss
outsb
dec
movsb
pop
jbe
inc
jecxz
xor
div
ret
call
in
movsb
out
dec
adc
outsl
andl
dec
outsl
jne
insb
mov
xchg
pop
jge
pop
into
js
les
jp
popa
jb
ja
jb
aas
popa
jno
jns
lds
mov
jge
xor
xchg
push
sbb
and
inc
dec
and
add
testb
jne
sbb
pop
ss
adc
stos
cltd
dec
lahf
shlb
add
lds
stos
adc
mulb
fsubrp
mov
daa
iret
cs
fsubrp
out
lods
jae
dec
jecxz
iret
push
sahf
out
or
mov
aaa
ss
mov
fwait
imul
repz
mov
hlt
scas
sbbb
mov
jns
add
and
stos
loop
cmp
mov
dec
jno
pop
fldenv
push
stos
mov
dec
iret
dec
or
push
or
push
push
roll
mov
mov
shlb
cmp
test
imul
sbb
sub
shl
dec
cli
data16
stos
sub
fcoms
int3
jg
xchg
xchg
loope
lahf
sahf
xor
cmp
xchg
mov
dec
ja
rorl
int3
sbb
lods
mov
sub
and
mov
popa
inc
push
into
and
xchg
daa
adcl
dec
stc
lret
das
repz
outsb
int3
mov
xchg
ret
cs
cs
push
sbb
lock
outsb
cmp
inc
fnstsw
shll
sub
mov
sahf
jne
mov
cwtl
mov
cli
mov
jb
adc
cwtl
stos
mov
test
daa
cs
leave
cld
outsl
in
cmp
xchg
dec
jmp
and
and
mov
insb
fsubs
call
in
jbe
jmp
xchg
insb
scas
data16
dec
loopne
cmp
cld
aas
out
mov
arpl
fsubp
aas
sti
stos
aas
jmp
loopne
sbb
out
stc
jae
adc
cmp
cmp
and
add
lds
jl
mov
jne
and
fidivrl
sbb
sub
repnz
push
outsl
addr16
push
xchg
jns
lock
cmp
lahf
out
inc
icebp
cmc
add
out
stos
xor
xchg
mov
inc
data16
loopne,pt
mov
dec
lret
mov
pop
mov
dec
sbb
clc
stc
mov
fidivs
ss
loop
jg
sbb
addr16
stc
inc
in
es
call
scas
js
lock
mov
mov
cmp
pushw
mov
sahf
adc
lcall
adc
push
dec
dec
jo
cmpsl
aad
bound
sahf
nop
test
xlat
in
xadd
out
pop
aam
imul
inc
xlat
hlt
sti
dec
sbb
hlt
xchg
pop
fistpll
fcmovnbe
mov
in
pushf
mov
fildll
fsubrl
outsl
inc
xlat
test
cmp
into
aaa
jnp
fnstsw
jecxz
les
in
mov
dec
add
mov
bound
cmc
pop
push
mov
jo
push
movsb
cmpsb
mul
jnp
cmp
testl
sbb
push
daa
xchg
ja
and
xchg
mov
mov
lret
es
outsb
in
shll
sub
outsb
pop
ja
ffreep
cld
les
jnp
cld
dec
jno
cltd
jl
aam
add
push
push
add
dec
aaa
daa
out
pop
xchg
outsl
call
inc
jge
pop
cli
cltd
dec
out
cmp
lods
xchg
arpl
mov
cltd
cmp
iret
jl
ss
iret
jns
aaa
jno
jge
mov
les
jae
fstpl
add
test
sar
nop
dec
add
add
mov
inc
mov
fs
dec
imul
out
enter
jbe
aas
mov
mov
outsb
sub
mov
negl
dec
sub
int3
pop
jmp
hlt
in
stos
std
lock
in
lahf
fcmovnb
mulb
xchg
scas
xor
push
loopne
lock
call
shrb
add
loop
inc
ja
clc
popf
subb
adcb
enter
mov
cli
or
scas
outsl
sub
in
dec
ffreep
add
sub
test
leave
std
ljmp
lcall
and
push
arpl
subl
gs
dec
dec
jg
xchg
popf
mov
fnstenv
sahf
mov
jae
inc
lret
pushf
sub
sahf
fldenv
shrb
outsl
out
push
sbb
iret
push
lods
fcoml
loope
or
mov
aad
loopne
addr16
jbe
popf
aas
cmp
dec
jnp
jae
mov
loope
arpl
insl
cmp
push
jecxz
imul
mov
sub
adc
movsb
jg
mov
ror
push
push
and
movsl
ljmp
pop
push
movsb
xchg
repnz
dec
subb
pop
mov
jp
stc
in
aaa
push
inc
cmp
scas
mov
in
arpl
outsl
inc
or
pusha
pop
aad
jecxz
out
in
mov
mov
filds
in
stos
arpl
into
dec
mov
dec
mov
fsubl
outsl
cmp
ljmp
jns
into
dec
cmp
lods
jle
adc
nop
and
add
repz
dec
stos
ret
scas
scas
in
clc
sub
test
pop
lock
push
out
into
inc
jns
mov
ja
add
dec
fs
repz
gs
pushf
jge
xchg
push
movsb
and
sbb
sub
gs
in
bound
and
addr16
pop
pop
mov
stos
mov
push
sub
addr16
or
std
into
loopne
add
pop
mov
sub
je
popa
test
out
shr
inc
out
jg
cmp
movl
in
inc
imul
mov
lret
jbe
aaa
ficoms
call
xchg
scas
mov
xchg
outsl
pop
adc
inc
sbbb
push
test
shl
ret
sahf
jmp
in
mov
xchg
mov
mov
mov
mov
jnp
into
int3
adc
mov
stos
jmp
jns
mov
dec
jae
push
in
xchg
fcmovnu
dec
loop
lret
stos
lods
add
dec
aas
adc
andb
pushf
sub
scas
arpl
mov
aas
xor
sub
xchg
push
xchg
dec
jae
mov
mov
ret
xor
js
in
aam
hlt
enter
jno
and
lret
or
iret
xor
lea
push
push
jae
add
push
mov
div
inc
roll
xor
stos
cwtl
cmc
insl
lods
or
cmp
jae
mov
cli
mov
mov
jl
adc
inc
mov
mov
add
lock
fwait
xor
in
xchg
jecxz
xchg
fisubs
mov
scas
and
inc
and
mov
jp
push
cwtl
dec
lock
sbb
sbb
fmull
mov
lods
jae
pop
inc
xor
lret
add
out
xchg
pop
sub
nop
push
in
inc
push
nop
addr16
imul
scas
out
insb
add
fldcw
icebp
mov
jae
sti
insl
aaa
sbb
sub
stos
adcl
adc
les
cmp
lcall
les
mov
and
sub
fwait
jg
xor
rorl
int
push
mov
call
punpcklbw
sbb
inc
dec
mov
int
je
lods
movsb
cli
mov
lods
jmp
shll
lret
mov
data16
pop
cmpsb
mov
dec
cmc
pop
jne
and
mov
into
add
inc
scas
and
mov
in
or
test
xchg
shll
ss
sahf
ret
and
jmp
push
aas
stos
mov
das
mov
dec
sub
shl
jb
jno
out
or
movsl
jne
sahf
xchg
or
and
xchg
and
add
xor
outsb
aas
enter
push
pop
data16
mov
push
inc
scas
inc
rcr
pop
fldenv
mov
cmp
push
pop
or
cmp
out
jp
mov
decl
int3
mov
push
lret
fistps
pop
pop
push
js
inc
filds
dec
leave
push
dec
xchg
sub
lret
into
sti
sub
test
icebp
adc
ljmp
xchg
insb
pop
cld
dec
dec
loope
dec
dec
or
xchg
add
xorb
cld
scas
push
je
les
out
push
shlb
pop
or
mov
out
dec
repz
dec
dec
into
pop
test
jmp
loope
dec
push
test
ret
stos
test
pop
inc
pop
adc
mov
outsl
mov
shl
movups
push
outsb
lret
cmpsl
mov
data16
test
dec
in
mov
jb
push
in
mov
enter
push
pop
cli
xchg
insb
mov
aas
cld
push
call
in
inc
or
mov
and
stos
aad
insb
stc
mov
and
insl
push
incl
or
pop
mov
cmc
sbb
jb
cmp
xchg
stos
push
jns
lods
outsb
xorb
ja
outsb
fcoml
fidivs
aaa
cmpsb
or
jmp
imul
mov
lcall
inc
cs
inc
addl
jle
mov
push
dec
nop
cmp
shrl
push
leave
cmp
mov
mov
lahf
cld
dec
stos
loopne
ret
and
mov
ret
or
scas
lret
call
and
out
push
loopne
outsl
mov
icebp
cmc
sbb
fmul
mov
fisttpll
inc
inc
push
loope
loopne
enter
push
cmc
adc
cs
cmpsl
adc
cmp
movsb
insl
mov
and
popa
pop
push
sbb
sub
clc
add
push
or
push
lock
or
cmp
jae
dec
movsl
dec
idiv
and
mov
stos
xor
out
mov
and
or
mov
in
pop
ds
stos
loopne
subb
int
dec
xor
pusha
aam
sbb
in
into
les
dec
loope
dec
pop
in
iret
fmulp
int
ss
mov
mov
push
scas
test
adc
push
mov
dec
lds
mov
sub
sti
jbe
lods
insb
inc
pop
aas
test
pop
sub
ficomps
ds
pop
lea
imul
scas
test
pop
pop
mov
mov
fwait
mov
or
cltd
out
add
and
mov
int
imul
mov
ljmp
jmp
lret
cltd
insb
dec
adc
ja
data16
xchg
add
repz
out
adcl
in
or
enter
stos
out
jp
mov
pop
clc
sbb
mov
sbb
stos
mov
dec
stos
shrl
addr16
dec
jmp
mov
mov
in
sahf
imul
pusha
sbb
sub
enter
dec
test
out
and
sub
xor
adc
dec
lcall
add
lret
sahf
test
inc
or
cmp
sbb
pop
inc
dec
insb
jo
xor
inc
jae
pushf
mov
mov
mov
mov
adc
pop
imul
jmp
out
in
imul
imul
jle
imul
outsb
hlt
out
sbb
lret
arpl
out
lahf
loopne
cmpsb
push
shlb
out
lods
xchg
xchg
push
es
jae
mov
push
js
cli
adc
bound
int3
pop
lret
inc
sti
shlb
mov
pop
stos
test
mov
sub
cmpsb
mov
cmp
aaa
add
add
outsl
pop
outsb
imul
mov
scas
data16
and
lods
mov
in
jmp
cmp
mov
data16
xchg
push
shll
adc
call
hlt
xchg
rcrb
lret
ljmp
and
mov
dec
jle
sub
fistps
shlb
push
std
rol
es
jnp
out
push
pop
mov
xor
jecxz
or
fimull
test
repz
imul
sub
push
aaa
in
pop
stos
test
std
mov
into
cli
nop
rorb
das
mov
pop
in
fists
hlt
dec
nop
lods
loope
cmp
dec
pop
pop
or
ret
jns
mov
lcall
insb
sahf
mov
mov
and
int
push
push
pop
int
out
jge
hlt
sbb
inc
jle
out
mov
ljmp
aas
push
leave
scas
or
or
xchg
jg
scas
popa
sbb
xchg
mov
test
lods
add
jecxz
in
loope
jl
fldt
mov
adc
mov
cld
pop
in
outsb
cmovnp
add
cmp
imul
cmp
fcoml
mov
or
popa
adc
bound
sbb
xor
lods
jns
fiaddl
test
sbb
mov
push
xchg
cwtl
pushf
adc
data16
loope
stos
stos
mov
fdivl
dec
sahf
push
push
outsl
sbb
pop
cmpsl
jle
mov
push
ret
shrd
les
adc
cmp
or
add
push
imul
xor
cmp
cli
decl
push
sahf
ds
outsb
push
out
lahf
or
jbe
out
cmpl
cltd
adc
cld
or
jno
gs
xchg
lea
ror
mov
lods
push
loop
imul
add
jp
add
mov
dec
test
outsl
jb
sbb
jg
leave
in
add
mov
lods
mov
dec
out
stos
int3
insl
bound
dec
mov
rolb
cmp
jmp
sti
adc
push
cmp
mov
mov
test
std
or
push
cld
pop
lret
repnz
roll
pop
call
push
pop
push
test
into
test
js
fcoml
lds
gs
dec
enter
outsb
loope
movsb
call
sbb
pop
xchg
jnp
out
jbe
loopne
lock
jp
cmpsb
dec
or
data16
ds
out
clc
push
cltd
inc
in
mov
inc
pop
jle
add
clc
in
jae
fdivs
pop
scas
adc
rorl
pushl
mov
test
test
cmp
adc
add
addr16
aam
clc
lret
dec
rorb
je
mov
mov
scas
sahf
stc
cld
sub
fildll
jp
daa
shll
xor
int3
adc
dec
inc
sub
scas
out
jae
xor
mov
cmp
fucom
dec
insb
mov
dec
loopne
cwtl
jmp
cwtl
jb
pushf
pop
cmpsl
shlb
clc
inc
mov
out
pop
add
frstor
sub
rcrl
orb
push
nop
enter
push
fadd
jae
arpl
call
std
or
out
shrb
outsl
or
mov
int3
incb
aaa
push
mov
pop
or
xor
adc
ret
aaa
lcall
pop
mov
ja
in
imul
out
xor
sub
call
lock
xchg
cmc
or
movl
push
imul
mov
push
and
add
mov
out
out
data16
out
outsl
repz
adc
xor
and
xchg
nop
test
cld
imul
scas
add
pop
lock
push
ror
lea
test
jg
clc
orl
loope
insb
icebp
and
xchg
mov
into
mov
adc
or
imul
push
rclb
scas
shrb
bound
ds
insl
push
pop
and
sbb
mov
into
outsl
sahf
sar
insb
push
and
in
outsb
das
ret
scas
xchg
test
and
data16
xchg
leave
xchg
lods
jb
mov
and
out
fsts
cltd
add
fisttpll
xor
stc
lahf
cwtl
push
xchg
rcl
int
ljmp
repnz
fs
inc
mov
outsb
pushaw
mov
add
js
iret
imul
lods
iret
scas
ret
sbb
call
sbbb
add
imul
lods
push
pop
iret
or
push
aad
dec
clc
outsb
adc
outsb
fwait
inc
lods
call
insb
adc
fisttpll
dec
sbb
icebp
push
jmp
test
mov
mov
dec
and
lret
data16
out
mov
lods
cmp
add
mov
lea
mov
pop
lock
jmp
shlb
inc
mov
ja
jno
rcr
insb
or
sub
insb
test
lods
sub
or
mov
pop
or
lcall
clc
jnp
cmp
add
jno
pusha
fucomip
out
mov
dec
sti
pusha
lock
ss
outsl
or
test
sbbl
mov
mov
test
ret
outsl
pop
pop
mov
fiaddl
dec
push
mov
lret
ja
popa
jne
add
mov
jb
add
int
jecxz
jge
fistps
loop
std
xchg
rorl
loope
xor
lock
inc
out
push
data16
mov
sub
add
ret
repnz
mov
sahf
out
jno
mov
jg
lret
xorb
div
loope
repz
sbb
jbe
ljmp
add
cmc
push
mov
xchg
imul
push
cmp
mov
xor
xchg
xor
ret
dec
jno
loop
jno
test
fcmovnb
in
mov
mov
call
pop
outsl
lds
adc
xor
inc
repnz
mov
into
lods
mov
in
mov
popl
or
jae
in
mov
pop
bound
pop
mov
jno
clc
or
xor
insl
loope
adc
xor
rcll
out
je
enter
add
mov
inc
imul
into
add
in
roll
push
dec
call
lea
popa
ja
jecxz
mov
push
nop
notl
daa
into
fdivl
dec
addr16
pushl
loop
nop
xorl
movsb
jg
xor
mov
insl
lock
outsb
mov
dec
cmpb
shrl
test
sbb
jge
sbb
add
loop
xor
and
sbb
xor
sub
adcl
in
mov
int3
push
into
xchg
mov
call
jmp
adc
xchg
dec
adc
push
cmpsl
inc
xor
mov
jae
shl
pushf
or
adcl
ret
shll
int3
test
dec
xchg
mov
sub
repz
jge
loop
cmp
loop
xor
inc
stos
out
mov
testb
or
adc
push
out
push
xor
sub
cwtl
push
jno
fimuls
or
and
arpl
scas
add
out
jg
pop
fiaddl
data16
insb
add
outsl
mov
hlt
sub
add
mov
imul
add
clc
cld
repnz
data16
les
int3
aaa
hlt
scas
mov
dec
pop
dec
mov
dec
negb
jge
imul
mov
jne
gs
test
imul
jmp
jle
data16
and
dec
scas
in
fwait
push
mov
data16
ljmp
inc
mov
mov
aad
adc
cmc
inc
hlt
sub
sub
pop
and
mov
test
mov
outsb
iret
sbb
icebp
mov
mov
nop
sub
dec
adc
daa
nop
ja
clc
insb
movsb
rorb
push
sbb
icebp
mov
push
outsb
sbb
icebp
mov
dec
lock
jg
xchg
inc
inc
int
aaa
ja
fmul
cmp
push
jae
push
scas
rorl
jb
outsb
addr16
dec
cwtl
push
or
out
outsl
cltd
jl
push
call
fstpt
jge
outsl
insb
fimull
outsb
mov
mov
sub
add
push
arpl
add
cmp
into
iret
inc
lock
insl
addl
out
sbb
fstl
incl
adc
lcall
cmpsb
push
sti
mov
dec
sub
mov
lods
dec
insl
dec
push
mov
in
push
aad
sub
test
movsl
addr16
xor
popl
dec
int3
stc
dec
mov
hlt
sti
add
push
ljmp
add
xor
test
roll
jle
add
jbe
cld
scas
push
rol
enter
in
mov
jae
ret
test
data16
out
insb
add
mov
popw
dec
pop
or
movsl
jbe
bound
lret
mov
popa
popf
lods
cs
add
inc
inc
jne
jno
push
xor
stc
lock
cmp
mov
fwait
pusha
scas
xchg
mov
test
imul
stos
sub
xchg
pop
sar
and
mov
insb
scas
ja
cmp
data16
int
add
mov
enter
fldl
loop
pop
jne
inc
std
addl
adcl
push
push
cli
loope
push
lock
or
fs
sbb
xchg
lods
inc
loope
and
outsb
mov
jo
mov
call
out
daa
push
daa
push
ja
cs
dec
xchg
adc
dec
dec
cmpsl
enter
mov
jno
mov
inc
xchg
cmpsb
dec
ljmp
ja
in
push
lods
push
movsb
mov
loop
xchg
loop
lods
mov
fnsave
or
push
mov
mov
dec
or
sahf
movsb
push
adc
mov
pop
mov
sub
iret
pop
cmp
add
xchg
or
push
sub
xor
inc
daa
ret
clc
push
notl
shl
adc
push
xchg
dec
test
cli
inc
pop
loope
or
es
or
xchg
pop
jae
mov
mov
xlat
clc
jne
gs
pop
negb
mov
mov
inc
xor
ret
shrb
cmp
xchg
dec
neg
lds
or
mov
jae
test
hlt
and
and
imul
xchg
cmpsl
fs
js
call
sub
outsb
daa
daa
dec
out
in
lods
ret
icebp
call
orb
jge
push
mov
xor
adc
sbb
in
pop
jp
jae
shl
ret
data16
xchg
and
push
xor
cmpsb
iret
pop
in
jno
jb
aaa
sar
repnz
push
scas
push
push
repz
or
mov
inc
ss
xlat
jmp
lods
out
ja
mov
xor
sbbb
adc
mov
popa
int
jae
sub
into
outsb
xor
notb
in
lea
les
out
repz
push
out
jne
mov
mov
push
stc
js
in
dec
fistps
ret
rorl
mov
imul
aas
adc
or
inc
jg
rcl
outsb
out
sub
jae
inc
xor
out
dec
xor
fcoml
sti
iret
mov
in
rcl
fisubrs
pop
mov
out
fbld
sbb
cld
push
sbb
addr16
iret
mov
movb
or
or
jae
mov
pop
cltd
pop
mov
insb
lock
fidivrl
sti
decl
outsl
mov
push
dec
dec
jle
scas
ficoms
add
hlt
ficoms
pop
adc
push
mov
xchg
inc
inc
dec
scas
push
nop
setle
cld
push
mov
out
outsl
bound
loop
addr16
pop
andb
fsub
add
mov
sub
lret
xlat
outsl
dec
in
sbb
inc
inc
sub
add
iret
mov
out
arpl
outsl
pop
nop
test
xchg
jae
cli
lret
out
mov
out
sahf
inc
sahf
xor
lock
outsb
fnstcw
cmp
mov
ja
mov
clc
es
loope
xchg
aaa
jns
pushf
notl
sarb
icebp
push
and
mov
mov
push
jne
sbb
loope
test
and
push
into
push
sub
mov
fnstcw
in
ljmp
jae
imul
lahf
jle
push
pusha
bound
andl
push
in
mov
pushf
mov
sub
cwtl
outsb
rcll
hlt
push
adc
stos
xchg
sbb
in
in
fsubrl
loop
cli
sarb
mov
inc
mov
dec
jg
and
lea
imul
out
mov
mov
fidivl
dec
sub
push
or
out
and
repnz
scas
scas
lock
sbb
cmpsb
inc
jl
lcall
clc
cmc
xor
jp
xchg
xchg
inc
pop
pop
out
pop
jno
les
in
scas
jae
es
out
ret
pushf
dec
xor
insl
cmpsl
outsl
sub
out
imul
outsb
lea
or
dec
insl
loop
out
jo
sub
push
jbe
inc
dec
or
test
stos
decl
push
lcall
lret
lahf
enter
dec
insb
cmc
out
loop
xchg
test
in
mov
test
in
sahf
insl
testb
in
out
lods
cwtl
imul
es
shll
mov
js
mov
dec
ljmp
add
pop
mov
loopne
leave
push
mov
dec
sub
loopne
nop
jecxz
dec
repnz
call
arpl
jne
addr16
jg
inc
pop
scas
jg
jne
cltd
test
jg
inc
ret
scas
jg
jne
add
jl
lahf
js
in
jb
sbb
nop
lods
outsb
xor
repnz
mov
das
inc
setae
jae
mov
mov
outsl
xchg
add
jle
out
xor
pop
push
dec
inc
scas
out
rcl
adc
inc
and
jno
dec
and
test
jle
cmp
movsl
jae
ret
insl
idiv
xchg
sbb
out
mov
dec
mov
lds
mov
jae
fadds
pop
idiv
arpl
int3
fidivl
mov
mov
fadds
sbb
mov
mov
fnstenv
aad
mov
scas
jae
int
hlt
ljmp
and
fidivs
insb
and
sbb
jo
int
insl
shrl
cmc
adc
mov
mov
push
loope
mov
das
lds
xchg
loopne
jg
and
dec
aas
pusha
ljmp
or
in
imul
in
jae,pn
cmp
ljmp
aaa
xor
sbb
dec
xor
sbb
movsb
mov
es
or
inc
jl
les
xchg
int3
into
out
xor
test
jns
cs
and
push
sub
in
mov
lock
test
lcall
add
test
mov
ja
fidivs
subl
lcall
jno
ja
imul
es
mov
in
or
test
aad
pop
leave
stc
loope
dec
push
in
add
and
adc
jno
push
repz
xchg
mov
scas
push
pop
sbb
lock
jae
dec
out
sub
outsl
out
lods
lods
add
in
dec
cli
insw
outsb
mov
dec
mov
add
lea
sbb
in
cmpsb
data16
sti
xchg
aam
mov
sbb
push
aad
loop
cmp
jle
mov
cmp
push
dec
mov
dec
mov
out
sar
shll
push
jns
test
xor
mov
arpl
xchg
pop
jo
cmp
nop
inc
decb
and
dec
loop
loop
adc
out
cmpsb
cs
stos
in
inc
adc
loop
scas
aam
je
test
pop
inc
adc
adc
or
or
int
mov
cmp
cld
inc
orl
xchg
dec
hlt
mov
outsl
dec
pop
rclb
mov
cmp
mov
mov
imul
mov
loop
xchg
mov
fisttps
inc
imul
xchg
xchg
add
outsb
xchg
scas
xchg
push
movb
enter
in
jmp
shll
xchg
jno
outsb
ss
jno
pop
push
push
cmp
std
imulb
shrl
dec
cmpsl
call
cmp
add
test
jmp
loopne
xchg
in
pushf
lds
and
popf
outsl
xchg
adc
pusha
mov
mov
daa
lods
sahf
jecxz
insl
fdivrl
xor
stos
or
and
test
mov
repz
dec
xchg
sub
outsl
xor
or
pop
jno
stos
in
ret
out
cmp
enter
ret
xchg
outsb
scas
loop
pop
imul
into
fisubs
dec
incb
clc
js
scas
inc
xchg
je
mov
cmpsl
dec
and
scas
jae
add
in
xchg
push
add
and
in
push
jge
sub
jge
jg
mov
push
xchg
sub
add
movsl
arpl
xchg
shr
lods
cld
out
cmp
jg
mov
dec
fs
mov
out
sarl
fdiv
dec
and
jo
mov
add
and
nop
and
xchg
and
arpl
sbbb
arpl
outsb
movsl
in
popl
repz
push
pushf
sarl
add
xchg
int
jp
jae
mov
mov
loop
stc
dec
adc
cmpsl
outsl
jae
mov
mov
jle
cmpsb
iret
cltd
dec
push
mov
mov
in
fsub
dec
or
xchg
lcall
lods
mov
loopne
pop
es
pop
idivl
sbb
insl
ja
cmp
ja
inc
pop
subl
mov
loope
push
jne
in
daa
int
xchg
jmp
adc
in
clc
andb
rorb
inc
sbb
jns
out
jns
aad
push
sbb
jae
mov
jle
adc
cmp
push
js
lods
mov
subb
xchg
test
pop
push
add
into
sub
lods
pusha
out
test
dec
adc
inc
sub
dec
shrb
mov
int3
cmpsb
and
jge
imull
orb
jnp
sub
fmull
vshufps
dec
shr
add
adc
jmp
je
cli
or
test
sbb
out
mov
push
add
mov
cmp
stc
ja
jle
dec
mov
cwtl
push
mov
xchg
xchg
sbb
xchg
sbb
push
dec
xchg
cli
pop
mov
xchg
dec
xchg
scas
dec
dec
mov
movsl
lods
in
mov
fstpl
popa
jle
push
imul
les
dec
push
push
sub
xchg
mov
clc
out
xor
jae
in
cli
mov
cmp
jecxz
add
push
test
pop
mov
mov
lods
jae
jne
sbb
outsb
push
in
movsb
scas
in
out
scas
mov
adc
add
xor
mov
jmp
xchg
call
imul
loope
dec
cmpsb
scas
repnz
pop
fs
adc
shlb
mov
add
mov
scas
icebp
sbb
ljmp
xor
or
decl
inc
int
les
int3
je
ds
addl
add
test
test
insb
les
fldl
cmpsb
add
add
out
hlt
push
cs
lods
cld
mov
mov
popa
pop
fdivrs
jne
jg
push
enter
insl
in
loop
stc
clc
push
sub
rolb
jbe
inc
pop
pop
pushf
mov
jno
jle
jg
push
jne
lods
repnz
test
inc
outsb
push
mov
dec
push
stos
enter
imul
mov
js
push
ret
das
sarl
pop
outsb
cmpsb
dec
lock
test
lret
call
inc
jg
clc
call
xlat
stos
push
lret
xchg
push
push
fmull
decb
cwtl
pop
adc
jno
xor
pop
sar
add
pop
mov
sub
cmp
out
in
pop
in
xor
pop
jge
add
lods
dec
pusha
or
dec
outsl
push
call
lods
add
push
inc
in
inc
mov
dec
mov
push
push
pop
aaa
mov
js
or
xor
movsb
mov
adc
clc
or
mov
sahf
and
cmpsl
jb
jmp
in
mov
out
push
movsl
sub
loope
jecxz
testl
test
jb
add
cmp
outsb
mov
int3
adc
test
ss
repz
add
lret
fdivrs
stos
adc
add
mov
imul
enter
ret
into
call
lock
out
shrb
adc
jne
add
out
std
xor
pop
in
out
xchg
and
aam
mov
lret
push
xchg
imul
divl
clc
mov
and
dec
clc
lret
out
and
cltd
dec
jl
insb
jmp
imul
or
jg
mov
adc
mov
or
daa
ficoml
pop
fs
jp
imul
out
sub
jp
mov
mov
ret
shlb
out
sbb
cmp
aaa
pop
hlt
test
iret
sub
sub
dec
sub
or
or
xor
lods
inc
aad
shrl
jb
jne
movsl
xchg
mov
jae
sbb
or
cs
mov
fwait
mov
js
mov
push
leave
sbb
ljmp
dec
in
jne
pop
jp
adc
out
push
push
dec
rep
into
mov
jno
test
inc
xor
or
loop
pop
inc
sub
pop
jp
mov
aam
pop
leave
adc
dec
adc
or
dec
sbb
scas
and
nop
insb
shlb
cs
scas
inc
insb
jle
imul
call
cmpsb
mov
inc
jle
jae
mov
mov
and
mov
pop
inc
jae
mov
inc
lahf
mov
sub
jg
inc
adc
xor
flds
sbb
test
jg
and
sti
int3
pop
push
daa
inc
subl
outsl
test
ffreep
jle
insb
push
sbb
addr16
imul
shl
dec
pop
das
jle
cld
xorb
leave
jecxz
adc
push
xchg
dec
sbb
imul
cmp
loop
in
or
scas
xchg
out
dec
inc
int3
mov
cld
sbb
dec
push
pop
mov
std
fcmovb
pop
cmp
outsl
repz
xchg
dec
dec
lahf
pop
or
sub
cmp
fisttps
ja
add
cli
das
sbb
pop
xor
mov
and
mov
and
test
xlat
sub
and
fadd
mov
dec
push
out
and
das
cmp
std
pop
jge
lret
adc
and
lods
and
ja
stos
sbb
mov
fsts
cmp
and
or
repnz
arpl
push
loope
outsl
repnz
neg
mov
pop
leave
fldt
lods
pop
jae
ljmp
mov
or
lods
sbb
mov
fwait
jecxz
aas
add
dec
orb
mov
xlat
clc
lret
out
test
pop
jmp
sbb
mov
jnp
jns
ds
adc
testl
in
mov
sahf
or
mov
cmp
jae
pusha
fs
pop
rol
dec
add
dec
imul
stc
push
insl
lock
test
aad
repz
jp
cmp
repnz
and
dec
aas
pop
jae
mov
push
ret
lahf
ret
fwait
jge
sbb
pop
lock
mov
iret
push
lock
mov
push
jmp
cmp
or
mov
jne
call
mov
xchg
mov
addps
xchg
cmpsl
cmp
cmpsl
rcll
fsubl
test
repz
sbb
dec
xor
outsb
je
int3
filds
cwtl
sarb
insb
fnstenv
out
push
pop
scas
outsb
out
or
nop
adc
xor
cmpsb
clc
call
test
push
cld
test
into
test
mov
xchg
insl
out
cmpsb
fwait
pop
pop
pop
dec
or
mov
jnp
ficompl
sub
repz
cld
or
push
addr16
outsb
lret
lods
jg
mov
pop
in
inc
cld
sub
sub
dec
icebp
ljmp
adc
or
fldl
push
xchg
ja
sbb
dec
mov
xor
call
std
out
cltd
icebp
outsl
test
scas
repnz
pop
pcmpgtd
mov
inc
and
mov
cmp
lock
out
jmp
jae
sub
jno
and
test
jg
push
lock
xor
xor
jae
cltd
insl
sub
jle
je
out
mov
mov
sub
fcomi
push
inc
aaa
sbb
dec
mov
jnp
iret
stc
pop
fstpl
out
testl
les
ja
in
stos
jb
fldl
inc
call
outsb
call
sub
pop
in
push
stos
les
lods
outsb
bnd
cmpsl
inc
bound
pop
imul
push
insl
cmp
shrl
mov
jle
jg
mov
jbe
xlat
cmc
mov
lock
movsl
mov
sub
loopne
push
scas
imul
jno
nop
sbb
ja
dec
mov
mulb
jns
push
outsl
pop
data16
stos
outsw
scas
jnp
addr16
xchg
xchg
sbb
lret
test
out
nop
sbb
int
ljmp
test
push
in
test
arpl
fcoms
neg
test
xchg
push
fsubr
dec
jno
into
je
ror
cld
mov
test
dec
add
les
pop
or
jle
sbb
out
mov
das
push
pop
push
mov
pop
dec
lea
loopne
mov
push
rep
dec
mov
roll
mov
xchg
aad
sbb
and
jae
scas
notl
lahf
stc
cmp
flds
cmp
mov
mov
inc
push
cld
sub
cmp
inc
jle
sub
lods
and
ud1
pop
jmp
bound
lods
hlt
cmp
ja
inc
enter
jle
dec
mov
mov
dec
dec
into
and
scas
mov
jg
imul
push
imul
pop
fs
dec
fstpl
inc
out
aaa
mov
fmull
inc
jns
je
jb
push
aas
jbe
scas
mov
cmp
pop
and
fisubs
ja
fnstcw
adc
push
rcrb
xor
insb
push
es
out
pop
and
xorb
dec
ret
mov
xchg
out
push
cmp
or
in
cmpsb
push
jmp
lods
mov
mov
aas
cmp
fsub
cmp
mov
dec
icebp
out
pop
or
cmp
sub
pushf
sbb
enter
cltd
jae
imul
dec
into
xchg
sub
cltd
or
addr16
nop
cmpsl
mov
or
dec
outsb
lods
lahf
aaa
or
inc
ja
fmul
dec
mov
mov
ficoms
pop
mov
es
inc
fimuls
or
outsb
fbstp
int
and
cld
lds
cmp
sub
pop
rcrl
dec
and
outsl
f2xm1
dec
and
cmp
hlt
test
push
dec
insb
xchg
inc
int3
mov
push
jge
in
outsb
outsb
je
popf
or
mov
push
jge
testb
push
iret
lret
repnz
lods
outsl
std
and
and
loop
cli
and
xchg
push
jns
xchg
dec
clc
dec
imul
and
cld
js
repz
aaa
rorl
mov
idiv
xchg
mov
dec
jp
xchg
lret
sub
inc
and
jg
decl
sbb
stos
jmp
out
imul
fidivl
xchg
aas
call
or
mov
cltd
aad
push
in
aas
push
mov
aas
dec
in
dec
jae
loope
insb
out
adc
in
call
mov
and
cmp
in
jge
push
add
das
cmp
mov
out
add
outsb
pop
hlt
dec
mov
mov
mov
mov
ret
xor
jl
out
test
dec
mov
loopne
sti
ja
outsb
cmp
into
lea
clc
mov
scas
pop
mov
dec
push
mov
xor
lea
insb
jb
pop
scas
push
sub
in
pop
int
pop
push
shlb
lods
pop
loop
xlat
jg
and
or
leave
gs
sbb
int
cmpsl
xchg
sub
mov
mov
clc
in
inc
loop
inc
xchg
mov
es
mov
jg
jl
cmc
into
dec
sbb
dec
clc
jno
inc
pushf
mov
es
cmp
das
jae
cltd
clc
xchg
add
jmp
dec
ja
arpl
enter
sbb
rcrl
lret
scas
repnz
enter
rorb
faddl
outsl
add
out
adc
sbb
cmp
xchg
hlt
lock
mov
lock
sub
pop
scas
in
scas
insb
inc
sub
pop
inc
lcall
mov
cmp
in
sub
mov
pop
adc
sub
or
decl
cmp
lds
int
jmp
negb
or
lock
icebp
push
jbe
mov
in
pop
loope
sub
test
jle
daa
push
es
in
test
mov
movsb
movsb
dec
cwtl
push
test
repnz
stc
jnp
xchg
xor
sub
dec
pop
jg
push
bound
add
push
push
insl
or
aaa
in
cmp
sbb
lock
scas
jae
stos
pusha
sub
mov
es
jns
jl
call
or
cmp
lock
repnz
mov
mov
fstl
hlt
lcall
aas
out
and
lcall
shlb
xchg
lods
loop
pop
dec
inc
or
pop
fildl
daa
inc
add
shrb
mov
jle
rcr
jle
sbb
std
stos
jmp
mov
dec
inc
and
cltd
ja
ret
repz
jb
push
shl
nop
push
jecxz
push
mov
call
imul
mov
xor
sub
or
aas
mov
dec
call
push
add
mov
mov
orl
dec
push
repnz
fdivrs
mov
jno
xor
nop
xor
jae
scas
mov
xor
xor
push
outsb
rcrb
or
pop
scas
out
into
mul
scas
rclb
inc
aad
jp
outsl
pop
das
cmp
out
jae
add
lock
xchg
cs
call
xor
xor
stos
into
repz
xchg
addr16
aaa
push
dec
cmp
fildl
cmp
jne
sub
jg
jae
sbb
xor
das
push
and
out
dec
mov
ret
pop
add
mov
out
iret
scas
js
sub
and
sub
adc
out
fisubs
ficoml
and
fdiv
jmp
adc
push
repz
inc
dec
pusha
jg
xchg
cmpl
fwait
std
hlt
sbb
add
dec
add
sbb
jbe
inc
aas
mov
inc
push
test
ss
vmovdqu
push
xchg
sbb
loop
ja
pop
out
push
mov
add
mov
cmc
lds
sbb
out
iret
nop
je
adc
or
mov
add
ret
std
std
aas
enter
lret
rorb
mov
mov
repnz
fsubl
sub
add
jns
and
mov
cmpsl
fimull
movsb
es
push
inc
leave
aas
jmp
outsb
fldl
cmp
test
stos
divb
adc
das
mov
repnz
dec
lret
pushl
or
jle
psubusb
out
daa
lock
jb
xchg
outsb
leave
mov
mov
add
push
int
pop
dec
lret
mov
andb
mov
jno
inc
and
lock
repz
mov
and
pop
leave
jg
pop
dec
cmpl
adc
mov
ja
or
inc
push
ficomps
iret
pop
or
sti
jl
and
rcll
sahf
jae
mov
iret
mov
notb
mov
clc
int
add
cld
lods
mov
pop
repnz
stos
cld
jnp
loop
rclb
call
unpcklps
in
and
es
bnd
sub
inc
loopne
xchg
sub
mov
lret
scas
xor
adc
push
out
je
push
push
shl
js
xchg
cmpsb
and
arpl
xor
sahf
pop
push
inc
cmp
sbb
les
ljmp
adc
out
or
adc
lock
imul
mov
adc
cld
das
das
mov
out
add
sar
xor
scas
out
lock
push
sub
les
or
cltd
mov
out
mov
repnz
cmpsl
outsb
icebp
in
push
lods
pop
mov
pop
popf
out
pop
pop
push
jns
scas
jp
bound
sbb
outsl
sbb
outsl
xchg
test
pop
jmp
test
add
dec
mov
nop
sbb
outsl
mov
cmp
mov
lock
out
cli
ds
pop
push
mov
nop
lock
jbe
test
jmp
dec
fwait
test
sbb
mov
enter
and
push
dec
inc
scas
dec
push
dec
or
push
mov
out
dec
or
jle
mov
xchg
out
pop
jmp
or
lret
test
push
add
xchg
icebp
aad
lods
clc
outsb
fimuls
insb
ljmp
add
js
popa
jg
dec
sbbl
add
movsl
inc
lods
push
addb
pop
sahf
outsl
or
sbb
add
mov
out
sub
and
in
in
arpl
aas
pusha
int3
jae
ret
aaa
mov
test
push
out
clc
scas
sbb
mov
gs
or
insb
lods
pop
insl
jg
dec
pop
lret
insb
lea
xchg
into
pop
dec
bswap
imul
fisubs
clc
push
sbb
scas
cmp
les
jge
add
or
sub
rcrl
and
jne
cltd
dec
inc
clc
mov
fmulp
jg
outsb
call
call
scas
jbe
xor
dec
inc
ljmp
inc
call
scas
loopne
ds
icebp
xchg
ret
add
add
outsb
inc
mov
sub
popf
imul
std
inc
dec
int
iret
sub
in
adc
mov
pop
out
scas
outsl
fcomp
stos
jle
mov
sbb
sub
mov
xchg
loope
mov
loop
or
in
or
inc
sub
lods
push
test
add
out
call
ljmp
enter
fimuls
dec
outsb
in
nop
lods
bsr
dec
xor
int3
pop
sahf
daa
test
data16
jle
sbb
pop
mov
rcr
adc
clc
xchg
sbb
mov
cmp
sub
lahf
insb
dec
xchg
and
shrb
scas
imul
dec
dec
pop
rol
mov
and
outsl
int3
jb
sahf
sahf
pop
or
enter
loopne
pop
addr16
jmp
xor
mov
mov
add
sub
shll
dec
jl
add
jg
jmp
nop
enter
std
shl
scas
int3
adc
in
imul
dec
dec
ret
mov
daa
jnp
movsb
leave
es
int
imul
mov
pop
inc
shl
aas
or
fistpll
jg
or
mov
pop
fnstenv
pop
or
mov
aaa
out
shrb
sbb
push
out
dec
mov
es
dec
pushf
mov
shll
jle
add
icebp
testb
adc
add
mov
ret
pop
stos
hlt
orl
xchg
pop
dec
or
mov
jecxz
out
mov
fcoml
stc
sub
pushf
lods
sbb
cmpsl
cmpsb
sbb
mov
cmc
xchg
stos
dec
je
mov
jp
int3
out
imul
mov
imul
arpl
sbb
ljmp
jle
mov
jb
jle
mov
sub
dec
mov
mov
mov
fnstsw
jno
push
pop
cltd
aaa
adc
pop
cli
or
shrl
jnp
inc
ds
ljmp
push
stc
mov
cmpsl
jns
test
hlt
mov
xchg
loopne
in
mov
fdecstp
inc
dec
pop
out
xchg
lret
mov
and
mov
inc
jg
imul
aaa
clc
xchg
or
cld
gs
call
lea
dec
xor
outsl
ret
fildll
mov
aaa
in
jmp
cmpl
ljmp
mov
aaa
adc
dec
out
adc
cs
mov
cltd
mov
bswap
ljmp
cli
cltd
imul
sbb
enter
ja
ds
jns
fwait
xchg
cltd
dec
fadd
dec
pop
and
cli
dec
sbb
pop
xor
cs
push
xchg
inc
fisttps
add
inc
and
scas
inc
and
jl
xor
adc
mov
scas
sbb
clc
dec
sti
dec
xor
rorb
sub
mov
jb
and
sbb
les
xor
ret
stc
imul
dec
push
in
mov
insl
mov
mov
loop
adc
aam
mov
sub
sbb
inc
lock
fcoms
pop
sbb
adc
je
outsl
sbb
stos
sub
pop
repz
ret
pop
lea
aaa
addr16
ja
inc
mov
adc
pusha
lods
jb
dec
sub
daa
mov
data16
mov
aas
and
out
mov
xchg
xchg
cmp
outsb
aas
add
sbb
jo
dec
mov
jg
mov
cld
xor
sbb
std
sbb
or
loopne
inc
lret
dec
loop
shl
int3
lret
std
call
sbb
fimuls
int
jge
push
loope
lock
scas
xchg
das
mov
push
pop
jae
sti
repz
fisttpl
cmc
repz
pop
xchg
mov
mov
loope
jno
xchg
jae
movsl
mov
cmp
outsb
add
mov
xchg
std
mov
push
out
pop
add
xchg
pop
add
xabort
imul
sbb
or
loop
filds
ret
mov
shl
jo
add
or
cmc
cmpl
aaa
mov
insb
pop
inc
lahf
lea
sub
push
push
imul
out
in
mov
or
dec
ljmp
jae
movl
movl
inc
es
pop
push
js
icebp
mov
cmpsl
test
or
sbb
test
outsb
dec
or
pop
out
dec
xor
mov
fdivs
scas
push
es
call
js
insl
sub
jb
sub
xchg
movsl
iret
push
movlps
outsb
xor
sbb
movsb
dec
push
jg
insb
jbe
jle
in
repz
loope
or
push
ret
pop
mov
data16
sahf
in
and
pop
call
xor
int3
icebp
sahf
scas
add
add
movsb
pop
out
cwtl
das
mov
dec
push
scas
movsb
and
insl
mov
dec
test
imul
call
jg
sbb
add
push
xchg
xchg
jmp
jge
add
dec
lea
jp
jg,pn
xchg
jle
pop
xor
idiv
or
sti
xlat
daa
mov
adc
lock
iret
rorl
mov
movsl
add
fisubrs
jns
or
leave
add
bound
push
add
or
mov
jae
dec
inc
jbe
sbb
int3
out
and
jge
sub
cmp
cmpsl
mov
jecxz
jl
shl
aas
enter
xchg
xchg
mov
scas
enter
clc
dec
js
stc
mov
inc
aas
mov
rolb
push
test
mov
dec
mov
scas
jns
scas
js
shr
outsl
ret
jg
mov
insb
in
pop
mov
stos
ret
xor
cmpsl
pop
pop
inc
mov
pop
jne
loope
mov
out
add
inc
and
stc
push
movsl
pop
push
add
out
es
out
adc
mov
sub
loope
jae
jmp
jno
lock
push
sar
test
hlt
repz
push
in
les
jg
nop
cwtl
push
xor
adc
add
lcall
dec
int3
push
cmc
jae
loop
cmp
nop
mov
fsubr
pop
movsl
fs
fsubs
emms
xor
sbb
lock
dec
repz
dec
adc
pop
or
int
es
sbb
out
dec
cmp
loop
pop
adc
movsb
daa
es
sub
out
xor
je
iret
xor
scas
call
pop
fidivs
sbb
imul
imulb
imul
and
dec
fdivrs
inc
rolb
and
lret
xchg
push
pop
mov
out
ljmp
sub
sub
mov
dec
outsb
dec
std
stos
je
insb
ljmp
mov
cli
mov
xchg
xor
ja
mov
iret
sahf
push
inc
test
add
popf
out
std
jmp
cmpsb
mov
pop
dec
adc
test
ja
jmp
arpl
ljmp
iret
adc
test
ja
call
stos
add
xchg
loope
out
outsb
xchg
sub
pop
bound
insb
int3
mov
sub
popa
dec
pop
xchg
sbb
xor
sub
sarl
or
insb
mov
xchg
xchg
jns
inc
adc
out
jmp
mov
pop
insl
mov
inc
ret
clc
movsl
pusha
ja
cmp
nop
dec
cli
fucomp
fs
pop
cld
outsb
nop
mov
mov
mov
cmp
shl
cmpsb
jmp
aas
xchg
int
stos
out
nop
loop
inc
ret
test
outsl
xor
repz
dec
icebp
sub
mov
out
mov
pop
mov
inc
cltd
pop
mov
loop
mov
in
sti
in
enter
xchg
mov
cmpsb
and
add
subb
push
out
inc
lahf
scas
push
mov
scas
lahf
sub
movsb
dec
jge
subl
repz
shrb
loop
repz
push
dec
cmpsb
inc
in
add
adc
bound
std
add
popa
xchg
pop
mov
lods
lret
or
cmp
mov
les
enter
subl
lret
pop
or
jbe
addl
sub
xor
scas
ljmp
dec
push
sbb
adc
mov
movsb
lcall
dec
push
daa
out
lret
popa
movsb
sub
mov
ja
mov
cltd
sbb
les
je
ds
insb
ret
lret
add
lods
movsb
or
jns
shr
int3
notb
inc
pushf
call
dec
cwtl
dec
lods
out
or
xor
lods
add
jl
repz
xchg
xchg
sbb
ret
mov
mov
mov
pop
sub
stos
mov
fisubrs
jae
mov
scas
push
dec
sbb
mov
out
loopne
outsl
inc
lcall
xadd
call
loopne
hlt
insb
mov
inc
popl
js
ret
mov
xchg
push
loope
jge
cmpsb
loope
jg
push
lock
mov
xchg
andb
fsubrl
adc
shrb
pop
das
xchg
lock
mov
cs
shl
scas
lret
ret
aad
xchg
mov
lock
mov
fimuls
push
ljmp
out
inc
xchg
outsb
jg
test
xor
enter
sbb
inc
jmp
call
dec
push
inc
lahf
addb
call
mov
out
movsl
push
movsb
mov
data16
sub
pusha
cmpsb
pop
dec
lds
and
dec
pop
adc
cmp
mov
push
mov
mov
dec
popa
sub
push
lock
ret
mov
jle
add
mov
in
pop
out
daa
cmpsl
xor
cmp
dec
cli
jne
mov
jb
mov
in
dec
jl
mov
scas
push
dec
jne
mov
lods
lock
jg
jle
mov
in
ljmp
xor
movsl
add
out
imul
xchg
repz
push
sbb
mov
ja
inc
jg
mov
data16
push
sbb
jg
sub
lcall
push
fsubl
cmpl
out
mov
jle
mov
dec
add
xchg
cmpsb
rcll
sub
cmpsb
imul
out
out
test
push
outsb
arpl
pop
negb
addr16
jle
inc
lods
loop
pusha
xchg
lock
jg
cwtl
stos
cmp
mov
push
outsl
xchg
sub
fisttps
out
lret
dec
ljmp
and
inc
in
loop
ja
int
jnp
jne
sub
push
cwtl
out
mov
push
outsl
pushf
aaa
nop
scas
addr16
ja
pop
ds
hlt
ds
jg
scas
push
ror
cmpsb
pop
out
cltd
mov
add
ss
cmpsb
cmp
jb
arpl
ja
xor
sarb
mov
fisttpll
sahf
popa
inc
add
rclb
jns
add
adc
loop
mov
insb
ret
add
popa
adc
xchg
std
lret
inc
mov
mov
push
pop
lret
ficoms
or
add
and
lods
test
out
pop
pop
push
pop
push
mov
aad
xor
inc
mov
pop
push
cmc
arpl
fsubr
pop
jnp
scas
or
hlt
enter
pusha
hlt
in
adc
lods
jg
or
les
jnp
movsl
or
mov
mov
push
idivl
popa
add
mov
pop
push
add
clc
jle
and
ret
inc
bound
lock
ja
mov
sahf
je
mov
or
popa
ljmp
sub
and
fistpll
lds
mov
mov
jnp
xchg
or
xchg
roll
mov
cmpsb
xchg
shl
xor
repz
mov
xchg
stos
adc
push
ds
mov
js
std
outsb
ja
inc
shrb
gs
call
dec
dec
sahf
cmp
mov
push
dec
and
mov
mov
ljmp
dec
stos
fadd
daa
ljmp
iret
push
push
inc
sbb
in
pop
addb
in
mov
add
sub
xor
movsb
ljmp
push
add
out
in
imul
fs
jmp
in
enter
pop
mov
pop
ljmp
in
jae
pop
mov
mov
test
outsb
inc
jmp
jns
mov
js
pushf
cmovno
addb
push
add
jp
adc
sub
lret
mov
jg
push
movsb
cmp
cld
sub
outsb
dec
gs
mov
push
jl
and
popf
mov
stos
repnz
dec
repnz
fs
and
test
push
mov
push
jle
ja
push
jb
jnp
sub
iret
add
clc
and
jmp
add
test
xchg
popa
hlt
xchg
in
pop
jmp
add
loope
inc
jp
or
data16
jl
test
sti
stos
shlb
lods
or
ret
push
dec
push
jle
fidivs
testb
push
push
lods
mov
push
dec
sub
fisttpll
clc
lret
sbb
mov
in
in
nop
fsubs
sahf
mov
lds
pop
in
call
test
mov
pop
loop
dec
or
inc
out
jo
les
mov
mov
movsb
insl
sub
aas
movsl
stos
push
lock
mov
sbb
rcl
fmul
cltd
icebp
mov
pusha
clc
shr
add
xor
jge
xor
ljmp
int3
pop
fidivs
out
dec
mov
and
cs
mov
ds
dec
dec
leave
dec
popa
pop
jecxz
sub
pusha
pop
jg
push
in
cmp
sub
adc
test
imul
dec
test
mov
xchg
shr
cmp
outsl
addb
subb
out
arpl
jl
loopne
xor
sarl
mov
outsl
pop
mov
movsb
xchg
jle
rcll
imul
data16
test
sub
lcall
es
lcall
and
or
mov
in
cmpsb
pop
hlt
mov
mov
and
dec
fisubrl
mov
push
lods
jne
adc
mov
insl
lret
add
jmp
jb
jne
dec
out
test
mov
sub
sub
or
dec
xchg
mov
div
mov
xchg
xchg
imul
pusha
mov
loopnew
mov
inc
jecxz
mov
cmpsb
or
icebp
and
scas
mov
fcoms
xchg
loopne
sub
xchg
xchg
push
mov
adc
ja
sub
mov
mov
mov
mov
push
ss
push
stos
mov
push
lret
in
inc
outsl
lods
outsb
jle
push
cmp
add
inc
call
loope
inc
adc
xchg
prefetch
or
fwait
stos
loop
clc
xor
pop
inc
adcl
pop
decl
jns
in
movsb
addr16
hlt
mov
pop
arpl
sbb
fildl
aam
int3
mov
test
testl
decl
roll
mov
xor
loope
xor
clc
pop
into
sub
sahf
scas
cmp
cld
gs
dec
movsl
push
stc
sub
ret
dec
clc
sbb
lea
ss
jge
nop
push
sbb
inc
push
jae
jmp
xchg
insb
decl
or
jno
inc
rep
jne
inc
or
xor
enter
add
leave
insl
ss
xchg
dec
les
outsl
int
pop
jecxz
jb
jo
jl
pop
or
xor
jle
adc
sub
xor
out
ffree
repnz
mov
xchg
adc
sub
das
push
dec
leave
aas
ret
add
mov
inc
mov
lret
in
jne
adc
sbb
jg
mov
adcl
pop
in
add
sbb
cs
mov
scas
push
xchg
lock
icebp
sar
iret
nop
dec
jnp
clc
xchg
sub
mov
mov
mov
imul
mov
mov
stos
jg
lret
dec
sbb
icebp
or
cmp
sub
sbb
dec
lock
into
or
or
dec
movsl
push
mov
push
popf
lods
pop
subl
inc
xchg
in
dec
push
xchg
mov
into
and
imul
popf
and
loopne
lock
xor
mov
add
insl
xchg
and
dec
lds
jmp
fdivrl
mov
inc
nop
jmp
adc
adcl
bound
popf
inc
in
lahf
fsubl
ds
das
mov
test
push
mov
dec
das
outsl
jns
and
sbb
enter
popa
mov
pop
xchg
mov
xchg
and
imul
mov
sbb
jmp
mov
add
movsl
lret
mov
int
outsl
icebp
notl
ret
pop
outsl
mov
out
mov
xchg
daa
mov
outsl
add
inc
lods
push
mov
shrb
xchg
adc
verr
or
cmp
or
mov
int3
stos
fcom
and
jae
xchg
daa
jbe
dec
add
popa
pop
dec
pop
outsl
add
pop
enter
mov
xchg
xor
sbb
sahf
mov
out
xchg
loopne
js
sub
dec
mov
lcall
push
icebp
dec
inc
jnp
stos
dec
push
stos
enter
dec
bound
push
jne
outsl
sbb
cmp
xchg
dec
sbb
mov
push
mov
fwait
add
jns
cmc
leave
jns
dec
add
and
arpl
add
jae
sub
je
je
divb
das
xchg
cs
jae
lret
cwtl
push
clc
pop
lret
push
push
xchg
in
xor
out
inc
test
push
out
adc
movsl
inc
sbb
mov
stos
pop
sub
lods
dec
scas
xchg
iret
xor
test
xchg
shlb
add
xor
data16
pop
outsl
mov
mov
fs
scas
repnz
fwait
dec
cmpl
psraw
pop
mov
mov
push
xchg
sub
lahf
push
mov
jg
inc
inc
dec
gs
jecxz
daa
mov
in
icebp
in
mov
aam
loopne
icebp
jnp
or
imul
inc
add
scas
dec
lahf
int
sbb
je
dec
ret
mov
dec
insl
ja
push
push
cld
pop
adc
sbb
call
lret
lds
shrl
push
popa
pop
xor
mov
pop
or
movsl
push
dec
loope
add
iret
nop
and
int3
mov
jno
pop
rclb
cmp
inc
dec
sub
jno
pop
andnps
mov
xor
xchg
add
jl
repnz
rcr
pop
outsb
jbe
xchg
mov
mov
inc
rclb
enter
xchg
cmpsb
aas
add
gs
pop
mov
mov
fiaddl
jne
fisttpl
cmc
addr16
jb
insb
dec
cld
rclb
jle
push
cmp
cmpsl
mov
inc
outsl
and
ja
inc
or
outsb
adc
out
iret
jae
lret
or
out
mov
clc
cmp
mov
int3
adc
dec
outsb
cmpsb
push
xchg
pop
pop
mov
lods
repnz
mov
and
pop
xor
fcomps
sbb
lds
popa
out
mov
ja,pt
in
lret
xor
pop
sarb
out
outsl
aaa
ja
sub
mov
cmp
aam
cltd
dec
jns
mov
sub
lret
nop
mov
outsb
les
xor
adc
movsb
cmp
out
and
aad
mulb
fsts
pop
mov
fcompl
data16
add
movsb
fldenv
ja
dec
rcll
dec
divl
xchg
jp
pop
mov
lock
cwtl
and
dec
dec
mov
out
xchg
orb
decb
sub
mov
add
jg
jae
fisubl
xchg
shlb
mov
jmp
aas
jp
jae
notl
jb
lods
mov
push
xor
cli
dec
cmc
or
test
mov
mov
fwait
push
or
call
adc
mov
jg
outsl
sbb
mov
add
stos
gs
aam
in
fisubl
sbbl
addb
mov
out
and
mov
ss
mov
dec
loopne
push
xor
cmpsl
mov
add
push
or
iret
pop
inc
jns
outsb
test
sbb
push
out
imul
sbb
pop
pusha
cmp
imul
in
in
int
jecxz
call
int3
xchg
xor
adcl
in
lods
adc
cli
call
dec
pop
pop
jbe
push
in
mov
and
cs
lods
dec
jg
jle
jg
inc
bswap
aad
pop
dec
mov
pop
xor
inc
out
inc
iret
stos
jne
adc
mov
pop
test
cmc
sub
lock
hlt
sub
insb
lods
repz
mov
mov
repnz
jle
aas
loopne
es
mov
nop
or
loope
xchg
cld
fwait
dec
mov
and
insl
imul
cmpb
push
addr16
flds
aas
das
jl
fsubl
cwtl
inc
insb
das
mov
push
cmp
mov
in
dec
xchg
pop
inc
lods
out
jp
cwtl
cmc
mov
add
mov
inc
repnz
lock
dec
in
mov
lret
sub
loope
dec
push
lock
jnp
pop
add
and
aaa
push
mov
rcrb
jbe
stos
fcom
jg
pushf
jg
jns
xchg
pop
aas
jns
fcom
imul
mov
add
or
outsl
jge
fdivl
dec
rol
add
and
js
xor
xchg
adc
inc
mov
add
xchg
rorb
xchg
inc
es
iret
iret
int3
std
or
push
lret
xchg
sub
inc
das
push
sbb
add
fs
fwait
xor
xor
out
icebp
je
int
mov
xchg
popa
sti
mov
in
shlb
xor
clc
mov
fs
shl
pop
mov
adc
fimuls
test
hlt
fstl
test
adc
fisubrl
sub
fldl
mov
inc
jmp
call
add
jo
neg
cs
rorb
sbb
lock
bound
adc
mov
push
fwait
stos
cmp
setbe
cmpsl
movsl
dec
ss
in
dec
inc
decl
aaa
jno
lea
mov
xchg
bound
push
cwtl
add
mov
roll
outsl
loope
lea
gs
out
loop
xchg
push
ljmp
xor
cmp
xchg
mov
inc
cs
in
adcb
pop
shl
out
xchg
dec
push
xchg
mov
out
ja
xchg
test
cltd
jae
out
sti
filds
pusha
scas
lods
lahf
nop
fisubl
stos
lods
add
push
sub
mov
jae
mov
fisttpll
jle
adc
mov
stc
or
outsb
mov
xor
imul
add
call
dec
pop
cmp
call
insb
call
jg
mov
xchg
sub
loopne
push
or
leave
bound
test
outsl
lock
jle
mov
add
rcrl
mov
daa
sbb
push
loop
or
xchg
stos
mov
mov
imul
dec
fdivp
pop
test
dec
mov
test
subb
int3
fnstenv
in
xorb
out
sub
jo
pop
xchg
mov
mov
push
dec
mov
dec
and
xchg
loopne
xchg
pop
bound
xor
int3
push
outsl
cmp
sbb
adc
ja
and
cmp
adc
xchg
out
je
xchg
into
and
roll
mov
ljmp
into
mov
mov
cmp
jg
imul
and
outsb
jb
mov
pusha
pop
mov
mov
fmuls
jns
cmp
leave
mov
jge
sub
enter
jg
sub
cld
mov
int3
jb
pop
mov
out
jle
adc
push
add
mov
sbbb
and
pop
push
shr
jne
and
jns
inc
adc
out
scas
mov
xchg
test
jne
pop
out
sbb
inc
arpl
stos
popf
add
shll
add
in
cwtl
lods
xchg
out
adc
pop
outsl
std
repz
fwait
push
mov
hlt
pop
into
mov
ret
leave
enter
xchg
xchg
in
and
leave
xor
insb
int
add
lret
jbe
popa
push
loop
mov
adc
mov
push
test
fsubrl
mov
icebp
shll
fs
movd
mov
push
mov
push
sbb
inc
mov
dec
stos
xor
stos
cltd
ja
ficoml
jae
outsb
imul
mov
mov
stos
mov
icebp
dec
mov
scas
sub
cmp
add
xor
xchg
sub
lds
pusha
test
and
or
xchg
test
out
in
dec
stos
ret
adc
icebp
push
testb
jae
sbb
mov
in
stos
jae
sub
push
scas
sbb
add
insb
js
clc
loop
clc
jle
loopne
push
mov
inc
jns
stc
ljmp
movsl
sub
mov
stc
jg
jno
out
and
cmpsb
mov
or
mov
jle
sti
ja
jnp
sti
out
shll
call
jp
cli
mov
rolb
test
mov
arpl
inc
ret
ja
in
shr
sti
pusha
jp
jno
fmull
ljmp
outsb
insl
cwtl
mov
into
add
cmc
pop
in
gs
lock
arpl
movsb
test
fldenv
lods
mov
daa
test
shlb
shrl
sbb
add
inc
jno
roll
lcall
hlt
bound
neg
cmpsl
mov
stos
mov
inc
pop
movsb
dec
movsl
dec
hlt
cwtl
add
bound
sub
jno
pop
push
inc
outsl
sub
sub
mov
test
jbe
mov
lock
adc
imul
scas
mov
int
mov
sub
stos
pop
out
push
adc
rol
sbb
xchg
out
stc
popf
sbb
pop
daa
xchg
adc
pop
sbb
cmp
ss
lahf
mov
fwait
shlb
cmp
data16
adc
pop
jb
outsb
ds
dec
pop
sbbl
aas
das
pop
mov
or
push
int
and
lds
add
andnps
add
out
rcrb
sub
lods
lahf
hlt
mov
inc
ja
mov
xchg
dec
stos
push
lea
mov
fnstcw
pop
xor
fldl
jo
xchg
jecxz
frstor
loope
imul
leave
cld
adc
or
es
dec
mov
mov
dec
mov
or
inc
push
nop
ss
repnz
stos
scas
mov
fwait
sbb
out
jno
lods
popa
or
lea
sbb
jle
inc
ja
icebp
call
xchg
pop
test
shrb
inc
jb
dec
hlt
mov
mov
das
sub
sbb
lret
push
das
mov
jbe
insb
adc
scas
ffreep
xor
mov
and
ret
out
scas
out
push
add
add
enter
xor
pop
outsl
imul
add
mov
outsl
mov
int3
aad
outsl
adc
dec
repnz
ljmp
loop
mov
sub
jmp
adc
iret
mov
sub
out
imul
push
mov
call
vmovsldup
outsl
jmp
jmp
in
or
out
cmpsb
pop
sub
aam
mov
mov
in
push
popf
mov
fimull
jmp
push
stc
cmpsl
into
pop
cmp
jb
add
cmpsl
les
clc
cs
mov
push
push
jg
rorl
pop
pop
mov
out
push
pop
dec
in
ja
clc
jecxz
mov
sub
insb
push
int3
push
adc
lods
imul
das
addr16
mov
or
es
xor
pop
jge
push
xchg
mov
cmp
daa
clc
aaa
push
adc
jnp
pop
pop
sbb
scas
pop
dec
lock
ret
xor
hlt
in
scas
cmpsl
mov
jno
dec
add
xchg
or
sub
push
cwtl
pop
outsl
mov
out
out
or
add
mov
mov
push
scas
pop
dec
add
dec
pop
push
lods
jno
enter
push
xchg
iret
mov
daa
dec
dec
dec
arpl
mov
imul
outsl
jno
push
call
dec
popw
in
or
pop
pop
push
outsl
lock
jg
jb
fstpl
lea
xor
sarb
jnp
add
pop
into
mov
lret
ja
inc
mov
cwtl
imul
mov
dec
sub
dec
mov
outsb
notl
sar
or
in
push
cwtl
mov
add
aas
mov
xor
mov
add
popa
fiaddl
mov
lret
xor
inc
fisttpl
push
out
xchg
mov
or
mov
out
mov
sti
mov
fisttps
or
jecxz
imul
push
jp
sbb
shlb
repz
dec
data16
push
lahf
scas
cmpsl
or
pop
dec
test
mov
outsb
pop
jg
clc
shrl
or
imul
xchg
jle
fcmovbe
xchg
cs
push
jp
push
std
sbb
cld
int
and
into
das
rorb
or
xchg
pop
adc
outsl
in
ljmp
ret
ljmp
adc
mov
sar
mov
jo
cmpsb
xchg
lds
imul
dec
aam
pop
jg
or
ds
mov
push
xchg
push
push
mov
pushf
mov
add
shrb
xchg
xor
add
rol
andl
vpshab
xor
ljmp
in
and
cli
daa
xchg
jmp
adc
je
orl
jmp
repnz
mov
test
movsb
insl
dec
lds
mov
inc
cmp
xlat
scas
push
test
push
dec
pop
loope
outsl
pop
push
xor
push
or
add
mov
iret
out
xchg
sub
pop
and
sbb
dec
les
jg
loope
cs
push
jb
xor
daa
jmp
fsubrs
jns
adcl
xchg
icebp
mov
in
push
lods
sbbb
pop
shlb
inc
mov
rcrb
in
dec
push
cwtl
push
inc
pushf
mov
lahf
dec
xchg
stos
imul
dec
lock
push
ds
jmp
testb
cltd
ret
xchg
popf
imul
ja
jmp
inc
ret
ss
xchg
xchg
subl
xchg
xor
cmp
imul
mov
inc
xchg
xchg
add
mov
xor
subl
repnz
mov
lock
shrb
xchg
xorb
push
ss
xchg
clc
shrl
xchg
stos
jno
inc
dec
in
sbb
mov
clc
inc
push
inc
mov
loope
ja
cmc
in
adcb
aam
fdivp
clc
jne
adc
mov
daa
and
xchg
xor
fdiv
fsubl
lcall
push
enter
dec
add
push
imul
lods
push
fnstenv
popa
cmc
xchg
fsubl
mov
out
and
addr16
rorb
mov
xchg
sbb
hlt
mov
stos
movsb
lahf
hlt
mov
dec
mov
popa
cli
or
hlt
test
push
pop
or
js
pop
shll
sub
sbb
shrb
dec
sbb
or
lret
pop
imul
scas
in
mov
dec
push
divl
xor
fdivp
push
in
pop
sbb
ds
jge
das
mov
cltd
int3
jle
sbb
lock
sbb
sbb
sti
sahf
sarb
in
fwait
call
push
shrb
loopne
aad
jp
out
fidivs
fwait
data16
push
test
repz
inc
je
loope
dec
pop
sub
movsb
fidivs
push
aaa
jns
cmpsl
mov
jno
fptan
ds
mov
fiadds
push
scas
mov
adc
sti
adc
bnd
or
add
pop
dec
sbb
mov
in
mov
jnp
fmull
test
push
sub
mov
mov
mov
jl
das
add
xor
or
nop
jecxz
dec
mov
lods
mov
jo
jnp
mov
push
scas
push
cmp
ss
mov
cwtl
add
push
jb
add
imul
cs
icebp
xlat
test
push
pop
shrl
hlt
fidivs
push
lds
sti
cwtl
add
shlb
fbld
mov
les
out
pop
mov
jno
ret
in
leave
loopne
inc
push
ret
test
push
jg
pop
inc
lds
mov
out
test
ror
repnz
scas
popa
out
push
dec
xchg
sti
sub
push
xor
cmp
in
daa
jbe
xor
movsb
shrb
repz
enter
sub
mov
leave
enter
jmp
and
xor
xchg
and
cmc
sbb
cmp
xchg
stos
or
inc
or
and
scas
cmp
loop
test
mov
jb
jno
cmp
test
cmc
shlb
into
scas
iret
stos
cwtl
mov
push
out
movsl
shll
push
jl
arpl
pop
jp
rorb
push
inc
push
add
mov
and
cmpb
inc
loop
stos
dec
or
pop
xor
mull
sub
sub
out
push
imul
dec
ret
xchg
nop
in
mov
into
aaa
aad
cmp
loop
inc
pop
cwtl
add
push
dec
cld
nop
in
dec
cmpsl
call
fmuls
jo
loop
dec
inc
out
pop
jns
bound
lods
lock
call
outsl
cmpsl
xchg
mov
out
ja
gs
addr16
int3
xor
dec
mov
dec
mov
lcall
cmc
mov
and
dec
lret
clc
movsl
mov
jle
pop
push
push
xchg
lods
jg
imul
outsb
dec
movsb
dec
jle
xor
aas
or
movsl
jg
ret
fstl
arpl
jnp
clc
lds
cmp
mov
out
jo
jae
pop
outsl
sub
xchg
adc
mov
mov
pusha
mov
adc
add
loop
fldcw
push
setae
outsb
sub
xor
mov
xchg
bound
mov
inc
je
cs
push
dec
push
lret
xchg
adc
mov
mov
xchg
and
lahf
lds
adc
mov
shrb
test
adc
mov
lret
jle
adc
or
lods
cld
lea
mov
mov
push
stos
fstpl
push
mov
mov
hlt
insl
dec
pushf
call
jle
ja
pop
arpl
sbb
pop
mov
push
int
jne
outsb
das
mov
mov
mov
pop
test
pop
mov
mov
push
daa
int
std
fdivrp
pop
fs
popf
cwtl
push
ret
xchg
jnp
push
push
int
out
dec
js
xchg
int
pop
pop
jb
push
repz
repnz
xor
insb
push
popf
das
loopne
in
movsb
mov
out
sbb
lock
std
popa
cmp
in
call
cli
lret
jmp
xchg
push
push
and
sub
push
pop
test
inc
cmc
subb
xchg
add
xchg
cs
dec
mov
data16
dec
call
scas
mov
sub
loope
in
push
or
sub
pop
fsubrs
dec
push
sub
shlb
pop
push
push
fidivs
test
add
jmp
ret
aaa
dec
adc
inc
das
dec
gs
xor
push
aam
mov
dec
out
gs
stos
adc
icebp
mov
outsl
shlb
in
cli
or
ljmp
out
xchg
fwait
mov
incl
or
in
mov
or
movsl
out
push
fsubs
cmpsb
or
lods
movsb
and
push
in
add
in
inc
push
mov
sarb
clc
shll
mov
and
sub
outsb
loope
rcrb
xor
cmp
adc
push
pop
xor
push
loopne
cld
xor
rcll
and
in
in
orb
pop
test
repz
cmpsb
xor
roll
inc
push
mov
xchg
popa
mov
fwait
ljmp
sti
pop
pushw
mov
adc
lock
and
adc
dec
in
mov
mov
dec
loopne
or
pop
into
sub
arpl
pop
sub
fistpll
and
andl
cmc
call
xchg
jmp
add
sub
repz
ss
jnp
xorb
clc
cmp
fs
inc
adc
in
sub
in
push
fs
pop
xchg
push
shrb
data16
mov
mov
mov
inc
ss
les
lods
cmpsl
addr16
sub
cs
dec
push
jg
mov
cmp
call
out
xchg
mov
pop
xchg
lea
mov
popa
xchg
or
ret
or
scas
out
test
adc
aad
int
and
out
sbb
push
daa
punpckhwd
mov
xchg
sti
movsb
sub
mov
insb
mov
cmc
imul
loop
adc
negb
outsl
inc
stos
add
icebp
jne
in
sbb
mov
jmp
pop
jne
dec
arpl
lret
cmp
dec
icebp
pop
inc
in
inc
shll
mov
int
repnz
dec
je
push
arpl
sbb
dec
orb
pop
pop
push
mov
inc
in
andl
call
scas
xor
adc
pop
adc
stos
fidivrl
pop
pop
or
pop
shll
xchg
ljmp
lods
lea
xchg
ds
jno
mov
pop
lea
out
dec
incl
fwait
lret
lods
icebp
xchg
inc
lea
pop
stos
and
sbb
clc
hlt
jmp
xor
xchg
mov
cmp
insl
dec
test
add
push
shrl
inc
out
or
test
push
and
les
cld
or
movsl
cmc
lcall
xchg
mov
out
xchg
scas
xor
push
push
jge
xlat
movsb
add
mov
adc
push
lock
mov
inc
in
pop
lock
leave
push
nop
cmp
jle
pop
insb
cwtl
push
scas
dec
jg
dec
and
dec
jg
dec
inc
pop
pop
stos
xor
dec
or
xchg
hlt
mov
push
jb
mov
lock
in
mov
push
adc
popl
ss
push
jnp
sub
jle
in
arpl
scas
out
es
scas
iret
inc
in
roll
dec
mov
scas
outsb
fwait
adc
insb
mov
jecxz
push
mov
jns
xor
push
int
fbld
clc
add
lahf
inc
and
mov
call
scas
mov
outsb
gs
out
push
outsl
cmpsl
add
mov
call
fdivrl
addl
leave
cld
add
jmp
pop
sbb
lods
addr16
mov
add
or
mov
add
mov
in
sub
mov
iret
or
and
xchg
or
mov
insb
pop
xor
dec
frstor
sub
aad
stos
pusha
sbb
pop
mov
scas
add
inc
sub
or
mov
shll
mov
arpl
adc
lock
in
imul
lods
add
lock
mov
or
and
pop
xor
jae
push
mov
xchg
daa
in
mov
xchg
daa
movsb
out
xlat
in
cmpsb
cmp
ja
popa
sub
dec
add
add
lock
pop
mov
mov
mov
imul
xlat
testl
rclb
pop
push
lods
outsl
mov
mov
ljmp
mov
cmp
into
jge
scas
sub
cmp
jp
add
ss
mov
jmp
jae
mov
outsb
dec
lods
xchg
lret
hlt
push
jns
mov
add
and
arpl
mov
shll
loopne
mov
mov
sub
fadds
cmp
cmpsl
cmp
movsb
pop
jne
testl
push
pusha
mov
sub
cld
addr16
test
incl
ljmp
lret
and
or
test
and
subl
int3
loope
addr16
in
mov
loopne
mov
mov
movsb
in
imul
cs
mov
jns
or
outsb
sbb
lret
jb
les
jae
stc
push
cmp
and
ja
dec
ds
dec
xlat
xchg
adc
push
pop
or
sub
lret
mov
movsl
ror
iret
stos
dec
adc
jno
xorl
add
lock
lea
jle
pop
jo
js
dec
mov
sub
in
shll
or
lahf
push
pop
clc
mov
sub
scas
ret
shlb
mov
sub
push
gs
inc
cmp
dec
loop
sbb
mov
jne
pop
mov
clc
aas
fisttps
push
scas
fisubrs
loope
scas
scas
insl
adc
jle
sub
loopne
adcl
add
in
mov
or
sub
clc
pop
orb
xchg
repz
mov
test
int
jle
out
or
add
mov
cli
push
adc
loopne
lods
xchg
lock
adc
fisttps
outsb
add
cld
pop
or
adcb
mov
jnp
adc
adc
jae
pop
jg
stos
push
daa
adc
int
mov
jg
scas
push
adc
push
stc
mov
loopne
rcll
fsub
jnp
sub
dec
pop
dec
jg
aas
bound
jae
ret
xor
add
xorl
test
clc
push
sub
add
mov
call
mov
sbb
addb
ljmp
push
es
outsl
jbe
mov
pop
je
out
loop
sub
mov
clc
xchg
sub
jle
cld
mov
outsl
xor
xchg
sahf
orl
outsl
push
xor
mov
addl
lods
das
rorl
stc
xchg
test
daa
pop
mov
cs
cli
pop
es
bound
pushw
xchg
daa
xchg
dec
in
mov
cli
jne
int3
shlb
lock
push
call
lods
bound
pushf
cs
jg
push
in
dec
aas
mov
or
cld
xor
popa
xchg
jae
fcomps
or
lret
push
xor
pop
int
xlat
and
cli
mov
repz
mov
and
out
adc
and
pop
outsb
scas
jnp
push
or
jbe
iret
pop
outsl
aam
inc
sub
cld
sbb
outsb
xchg
loopne
mov
fcmovbe
out
insb
iret
cmpsb
nop
imull
in
xor
jne
sbb
out
and
lahf
mov
push
xchg
mov
pop
arpl
push
ds
dec
bound
outsb
outsl
mov
or
sbb
icebp
or
jno
ss
dec
rorb
dec
or
repnz
xor
pusha
std
pop
push
xchg
or
xor
jbe
pop
jg
lods
aas
call
add
scas
rol
sub
xor
popa
push
xchg
xlat
xlat
xchg
cmpsl
or
inc
loopne
xchg
rcrl
out
cs
mov
pop
sub
mov
test
insb
push
ds
lock
cmp
mov
in
dec
les
mov
sbb
xchg
out
jmp
xchg
aad
dec
ljmp
jg
push
mov
loopne
fisttpl
xchg
movsb
jno
in
mov
das
jmp
addr16
jb
adc
stos
arpl
pop
dec
sbb
jle
add
dec
push
mov
push
inc
xchg
lods
ret
fists
xchg
and
rorb
adc
or
sahf
xchg
movsb
fs
in
outsl
cmp
mov
jle
or
mov
mov
mov
or
aas
or
andps
ret
dec
inc
mov
mov
repz
out
ja
pop
repnz
repz
cmp
fs
ror
fsubr
mov
insl
out
loopne
push
push
popa
aam
add
push
jle
xlat
outsb
jg
mov
jg
sbb
add
push
aad
imul
das
stc
xor
repz
jno
and
icebp
dec
fstl
das
pop
dec
mov
dec
std
xor
jg
clc
xor
gs
movsb
jae
push
jbe
aad
gs
roll
dec
int3
or
jmp
mov
out
outsl
pop
sti
inc
ja
mov
repnz
jp
outsb
ret
and
xchg
lahf
push
push
xor
pop
popa
outsl
adc
cmp
int3
loop
pop
imulb
fxch
sarl
js
imul
mov
lods
xchg
dec
and
mov
shrb
sbb
mov
idivb
fistl
aaa
mov
cld
push
mov
mov
lock
in
orl
adc
dec
and
stos
xorb
add
movsb
mov
icebp
sbb
mov
addr16
jne
les
dec
out
pop
inc
cmp
fdiv
into
lret
mov
outsb
outsb
test
cli
xchg
mov
pop
dec
mov
outsb
pop
nop
add
push
in
jge
leave
stc
mov
popa
dec
bound
sub
push
cld
adc
mov
pop
mov
adc
outsb
mov
mov
sahf
xor
idiv
xor
idiv
push
mul
push
mov
mov
outsl
es
inc
mov
xor
mov
repz
push
dec
mov
jae
mov
mov
mov
mov
ljmp
pushf
in
pop
mov
dec
loop
clc
jl
dec
lds
sbb
mov
stos
mov
rcl
scas
in
test
ja
adc
xchg
add
add
stos
enter
clc
lret
sub
pop
xchg
in
sub
dec
mov
test
and
test
sbb
js
cmp
rolb
cmpsl
inc
mov
aaa
dec
push
scas
jne
push
addr16
and
jae
xor
cli
test
push
xchg
dec
adc
jge
or
push
jp
jg
mov
test
xchg
pop
inc
stc
testl
fistpll
call
test
mov
in
lods
outsl
dec
ja
lods
dec
dec
add
idivl
addr16
push
mov
shlb
xor
pop
nop
push
stos
lock
data16
push
addr16
sbb
inc
dec
das
jl
lahf
cwtl
push
repnz
shl
add
mov
and
sub
rcrl
or
frstor
jge
aas
nop
fldl
movsl
jns
stos
popa
ja
xor
js
aaa
enter
xor
je
in
scas
repz
pop
arpl
daa
xor
int3
bound
test
mov
stc
dec
mov
inc
in
sbb
mov
push
jo
test
orb
dec
mov
dec
fistpll
sub
ret
pop
jns
xchg
dec
bound
stc
mov
jl
ljmp
shrb
ret
xor
jle
cmpb
jae
insl
adc
mov
push
jg
ss
repnz
and
clc
mov
dec
std
jle
pop
andb
jecxz
inc
aam
les
add
test
lcall
repz
mov
mov
jbe
xchg
push
hlt
dec
xchg
outsb
aam
xchg
fwait
push
add
insb
not
int3
into
xor
dec
lret
scas
mov
aaa
pop
xchg
scas
mov
clc
pop
loopne
jbe
lea
lea
jns
lcall
repz
mov
call
mov
xor
ror
sub
imul
xchg
das
ror
jne
adc
outsl
out
pop
outsb
mov
add
and
xor
imul
lret
sbbl
addr16
das
dec
rclb
iret
xorb
push
jle
lods
in
int3
imul
je
jle
out
out
idivb
pop
jle
and
ja
pop
out
outsl
jb
dec
xor
dec
in
cmp
outsl
add
imul
out
and
js
leave
jno
movsb
cmpsb
jmp
dec
loope
insl
jle
jae
mov
inc
loopne
cwtl
dec
insb
loop
pushw
jae
movsb
sbb
lods
lea
xor
jbe
mov
pop
daa
in
out
and
pop
dec
adcl
ja
outsb
pop
shrb
inc
jmp
enter
in
and
push
fdivrl
sub
adc
adc
and
fadds
mov
ljmp
inc
inc
sbb
add
mov
adc
adc
xchg
add
out
scas
push
decl
xor
and
stos
icebp
add
add
xor
stos
mov
push
add
sahf
cs
imul
clc
push
lcall
mov
test
stos
ret
add
cmp
pushl
bnd
xchg
xor
loopne
ds
pushf
cmpsl
call
sub
jl
inc
outsl
jle
fldenv
ljmp
out
or
bound
out
push
stos
xchg
out
out
add
orb
mov
or
adc
movsl
frndint
mov
xchg
or
push
ret
outsl
adc
push
ljmp
pop
int3
sub
mov
xchg
test
mov
popa
outsl
inc
adc
push
mov
mov
inc
je
jne
in
es
test
test
and
or
jae
dec
jno
mov
or
mov
lea
jno
loop
or
data16
in
mov
mov
pop
data16
pop
out
outsb
rorb
dec
lret
vrcpss
outsb
mov
xchg
or
inc
jno
cltd
insl
xchg
outsb
inc
imul
ss
scas
int3
sti
fwait
adc
int3
repnz
aaa
xlat
adc
jno
imul
mov
push
lret
movsl
inc
out
and
out
out
or
outsl
fdivrs
dec
xor
out
sbbb
stos
mov
mov
adc
fisubrl
sbb
add
xchg
frstor
xchg
ljmp
mov
insb
fdiv
addb
rcll
mov
mov
pusha
mov
sti
scas
ret
outsl
sbb
ret
mov
int3
andl
insb
xor
pop
sbbl
xchg
jbe
test
mov
and
pop
insl
sahf
icebp
jle
fists
push
dec
dec
and
dec
icebp
call
sub
mov
inc
into
sti
add
xchg
out
int3
insl
jns
ret
loopne
adc
lahf
adc
mov
enterw
fistpll
add
lcall
dec
lods
push
xor
pusha
inc
jae
ret
jle
loop
faddp
jle
or
loope
int3
push
xchg
xchg
pop
out
adc
or
jg
fsubrs
in
rol
cmp
loopne
addr16
xchg
loopne
and
out
push
ljmp
jg
clc
inc
mov
pusha
nop
shl
imul
sbb
outsb
insb
mov
sbb
mov
arpl
mov
dec
xchg
das
mov
rcll
mov
les
jp
lret
ret
ret
mov
or
mov
jns
call
aad
adc
xchg
call
pop
xchg
or
test
sbb
aas
in
lret
int3
dec
cmp
jb
mov
jb
in
sbb
lods
fs
insl
data16
cmpsb
fs
sbb
adc
inc
mov
sbb
shl
outsl
testl
loop
pop
adc
jae
mov
sti
push
push
ljmp
out
jae
mov
into
hlt
add
dec
ja
push
sbb
sti
movsb
subb
mov
lods
stos
in
sahf
int
xor
imul
fsubrl
rcl
pop
and
adc
addr16
mov
push
arpl
pop
test
cmpsl
je
jmp
mov
outsl
aam
mov
aaa
sub
ss
and
ss
mov
xchg
fsincos
mov
ret
fwait
lods
inc
dec
scas
rcl
or
popf
subb
add
bound
mov
cld
xor
cld
imul
data16
sub
cmpsl
ljmp
dec
ret
outsb
lret
mov
sahf
scas
lret
call
arpl
cmp
mov
in
xchg
ljmp
xor
dec
cld
arpl
test
sti
or
sbb
test
notb
in
dec
fmul
dec
cmp
push
notb
mov
out
scas
add
push
cmpsb
lock
mov
fisubl
ss
addr16
dec
add
aam
mov
jle
dec
pop
add
mov
mov
mov
jg
pushf
ficompl
lods
insl
fidivrl
lahf
jle
sub
in
or
adc
out
mov
mov
out
in
fisubl
sbb
cmp
mov
out
and
mov
push
fs
inc
fs
aaa
mov
cs
mov
in
fsubrl
int
xchg
mov
dec
add
xchg
sub
and
xchg
fcoml
mov
call
pop
repnz
fsts
sbb
add
fmuls
fimuls
or
ljmp
icebp
inc
and
jmp
inc
mov
pop
scas
mov
clc
sub
inc
loopne
dec
stos
sub
mov
sbb
inc
fstpl
dec
cmp
loopne
ds
lahf
pop
cld
shll
imul
sub
jmp
lods
mov
outsl
les
test
jnp
cmp
imul
mov
dec
mov
mov
loopne
lock
mov
mov
jp
and
out
cltd
jg
adc
pop
mov
xlat
jmp
std
clc
pop
sbb
cmp
xor
mov
jbe
movsb
cld
in
xor
mov
in
inc
imul
mov
subl
xchg
mov
or
int3
scas
leave
inc
xchg
insb
xlat
and
mov
popf
pushf
insl
mov
cmpsl
pop
insb
mov
sarl
out
push
mov
or
mov
sbb
xchg
xchg
clc
mov
pop
cmpsb
mov
scas
out
cmc
jnp
int3
jb
jl
vpsllq
pop
test
imul
rcll
scas
xor
das
or
or
adc
mov
ja
in
add
shl
mov
arpl
in
movsb
sub
mov
xchg
sbb
dec
or
fistpl
cmpsb
push
adc
fwait
ja
or
stos
xor
dec
aam
dec
jns
stc
imul
clc
and
popf
adc
push
rorb
test
scas
push
and
dec
aam
or
push
clc
out
sbb
in
in
pop
sub
xchg
sbb
shrb
cmp
ja
or
pop
jno
jl
or
shrl
push
ficoml
jnp
sti
imul
clc
loopne
mov
jbe
stos
dec
sub
movsl
cmp
pusha
sub
mov
lret
cmp
push
in
adc
push
flds
mov
inc
mov
test
aam
lods
mov
pop
shr
inc
dec
jbe
lock
out
test
loope
cmpsb
shrl
test
sbb
aaa
adc
popf
push
or
mov
jnp
push
mov
repnz
mov
andl
or
mov
dec
adc
cmp
stc
out
or
fdivrp
jg
push
loop
imul
or
push
inc
pop
addr16
insl
xchg
dec
add
out
sub
dec
push
in
addr16
jp
nop
mov
pop
jne
mov
loope
ds
subb
cs
dec
xchg
out
mov
in
jo
xchg
pop
mov
popf
mov
sbb
fstpl
jmp
je
aaa
rcr
add
mov
xor
or
cmpsl
out
mov
lock
jp
test
xchg
dec
push
xor
clc
jno
sbb
cmpsl
mov
repnz
dec
addb
mov
std
mov
pop
jo
and
cmpb
ss
add
cmpsb
and
push
into
push
ss
gs
bnd
scas
cltd
pop
xchg
mov
hlt
adc
ss
pop
or
jg
mov
xchg
fisubrs
test
in
cmpsb
cs
dec
int3
adc
outsl
out
mov
mov
dec
stos
push
stos
or
jge
or
lds
push
or
sbb
lcall
mov
push
jnp
and
push
repz
dec
mov
jae
lea
dec
lea
mov
xchg
add
into
xchg
roll
loopne,pn
xchg
imul
dec
lret
lods
push
imul
xchg
jl
sbb
push
insl
repz
jnp
jnp
nop
fldl
dec
imul
jnp
sub
aaa
out
loope
enter
push
cmpsl
pop
sub
add
sub
in
sub
scas
scas
ja
inc
repz
imul
push
jnp
pop
jle
cmp
adc
arpl
xchg
loopne
test
xchg
sub
out
repnz
xchg
leave
into
add
mov
loopne
or
adc
in
inc
mov
xchg
xchg
repnz
pusha
dec
sbb
cmpsl
ficoml
mov
jae
test
mov
out
outsb
mov
popa
roll
out
mov
out
imul
orl
mov
jne
cmp
nop
mov
out
outsb
xor
in
ja
bound
sbb
jge
push
and
and
sub
sbb
icebp
inc
cs
push
add
shll
pop
jmp
or
shll
push
lret
adc
sbb
jp
test
sti
push
fwait
dec
xor
or
mov
push
or
loopew
mov
loopne
or
mov
cmp
lock
lods
nop
fiaddl
dec
or
pop
xchg
rcr
dec
into
add
outsl
in
into
or
xor
ret
jb
sbb
hlt
into
loope
out
mov
mov
cmp
int3
add
or
mov
jnp
sbb
sub
fiadds
outsb
adc
mov
ss
mov
or
into
stos
loop
adc
int
fmull
push
mov
adc
mov
incb
outsb
sub
dec
mov
hlt
js
xchg
jmp
sbb
or
push
loopne
adc
fwait
jb
sahf
rcr
or
and
mov
dec
stos
xor
mov
into
sub
js
pusha
sti
sbb
or
sub
in
das
fwait
xchg
out
outsl
xchg
mov
cmp
and
add
mov
lret
push
clc
arpl
sahf
stos
add
pop
fwait
ret
enter
imul
outsl
mov
shrl
lods
dec
lret
outsl
lds
dec
inc
or
lret
and
popa
adc
add
in
push
jb
push
dec
ret
sub
add
push
test
push
adc
add
outsl
outsl
pop
std
jb
dec
stc
push
inc
pop
scas
xchg
std
bnd
ret
repnz
test
pop
add
adc
das
jmp
push
lock
test
in
jp
aas
xchg
fptan
cltd
push
xchg
insb
call
mov
out
push
pop
push
push
dec
adc
fwait
outsl
and
push
jg
jb
push
mov
out
xchg
sub
aas
and
mov
nop
jno
loopne
pop
sbb
pop
nop
mov
rcrb
clc
push
dec
xor
and
rcr
pop
lret
clc
das
sub
dec
adc
das
jecxz
mov
mov
lock
loopne
pop
sbb
pop
lock
jg
push
xchg
mov
out
mov
adc
stos
mov
pop
mov
test
inc
in
jbe
mov
dec
int3
test
hlt
in
xchg
dec
dec
pop
lods
bswap
inc
je
in
fildll
fmull
sbb
in
mov
inc
xchg
push
outsl
shrl
inc
addr16
clc
pop
and
pop
jae
test
jg
popa
jl
test
push
mov
adc
or
shrb
outsb
test
rorb
push
add
jmp
or
shrb
pop
aas
mov
dec
mov
test
adc
aad
or
xchg
sbb
in
ret
pop
jbe
fistps
jb
mov
lret
or
push
mov
enter
xchg
ja
in
push
in
and
push
repz
fdivrs
daa
dec
cmp
bound
addr16
and
adc
in
adc
dec
mov
clc
into
jbe
stc
icebp
inc
or
jl
rolb
mov
fistpll
sub
lods
pop
shrb
mov
movsb
filds
fmuls
out
push
push
or
cmp
xchg
sbb
jl
test
inc
shrl
jp
xorb
fmull
ficoms
inc
lds
xchg
rorw
das
cmovnp
outsl
cld
push
jb
cmp
out
daa
into
xchg
or
loop
xchg
mov
pop
clc
dec
addr16
cltd
cld
xor
fcomps
imul
adc
adc
jl
out
mov
roll
dec
pusha
fsub
enter
call
insl
jns
jae
mov
cmp
je
mov
xlat
stos
jle
or
pop
sub
or
fdiv
out
idivl
add
addr16
or
das
ret
or
cmovno
push
dec
inc
jge
jp
in
mov
xor
push
enter
jns
scas
clc
aam
push
clc
xor
or
testl
lret
xor
fldt
cltd
dec
data16
test
add
xchg
popa
fsubrl
jge
mov
dec
gs
sub
or
in
push
movl
jecxz
mov
test
rcr
push
testl
mov
xor
repnz
call
or
mov
repz
jbe
xchg
or
mov
fmul
inc
mov
repnz
xor
cmp
arpl
adc
inc
rorb
aad
or
mov
mov
pop
out
gs
pop
clc
idiv
in
call
js
jecxz
mov
insl
insl
add
mov
sahf
mov
jg
in
ret
or
lock
out
inc
mov
jbe
dec
and
jb
mov
test
popa
mov
js
sbb
bound
enter
pop
push
fbld
into
loop
mov
pop
mov
in
loop
test
mov
dec
clc
loope
mov
outsb
loopne
test
push
roll
or
test
or
lea
ficompl
sarl
gs
jmp
ss
xchg
pop
fstps
stos
mov
icebp
adc
int
jg
mov
test
push
cld
add
push
repz
mov
lock
add
loopne
cltd
scas
scas
iret
sub
cld
dec
dec
sub
mov
dec
add
push
mov
dec
push
ret
loopne
mov
mov
cmc
dec
and
iret
enter
dec
push
mov
fucomi
dec
call
or
mov
pushf
mov
repz
int3
aaa
sub
push
test
push
ror
pop
jmp
or
ret
adc
mov
sbb
mov
shll
enter
or
outsb
clc
jno
mov
aad
mov
push
push
jae
notl
les
sti
pop
movsl
hlt
jle
adc
dec
aad
sbb
out
push
mov
pop
int
push
sti
mov
insb
enter
adc
cmp
outsb
sub
ja
clc
sbb
and
dec
cmp
and
enter
mov
adc
xlat
xlat
fucomip
js
pusha
out
jo
jae
test
clc
ljmp
int3
add
adc
sbb
xchg
xor
xchg
xchg
std
push
xor
testl
mov
adc
lcall
scas
sbb
loope
call
mov
frstor
xchg
enter
inc
popl
mov
lds
cmp
xchg
mov
inc
shll
daa
or
ret
fadd
and
xchg
and
pop
push
cmc
out
es
fisttpll
xchg
das
adc
cmpsb
dec
into
adc
aas
icebp
std
jns
adc
js
pop
ss
ret
xchg
clc
out
int
mov
lcall
addr16
jmp
movsl
out
mov
mov
and
gs
mov
ja
add
adc
jmp
movsl
inc
out
cmp
dec
in
lods
enter
test
cltd
mov
push
scas
jae
and
mov
sbb
movsb
gs
fidivl
rol
jae
test
inc
push
popl
out
inc
call
lds
xor
aad
mov
fwait
addr16
in
cmpsl
cmpsb
fwait
cmc
repnz
cmpsl
inc
sbb
daa
pop
dec
lahf
call
lret
add
jp
dec
xchg
int
pushf
movsb
push
dec
in
dec
rorb
add
shrl
fadd
mov
jns
fwait
cmc
xor
daa
call
xchg
sub
in
mov
dec
fs
out
call
arpl
out
loopne
aas
mov
jmp
call
repz
xor
mov
loope
leave
mov
outsb
jbe
fistpll
push
test
sti
test
mov
and
xor
and
mov
in
lret
mul
in
aaa
sbb
mov
adc
enter
jp
and
pop
cmp
jno
xor
out
pop
pop
loope
in
jmp
push
daa
add
subl
fsubs
jne,pt
mov
scas
cmc
add
call
imul
dec
arpl
and
fmull
push
inc
sub
jl
sub
out
lds
lock
test
sub
jge
pusha
outsl
je
xchg
outsb
scas
in
mov
jno
iret
test
cld
outsb
jb
jbe
outsb
scas
cmpsb
outsb
cmp
outsb
mov
ja
aad
pop
jnp
les
mov
jmp
xchg
cli
pushf
sbb
sub
pop
push
enter
stos
imul
xchg
and
cmc
lret
in
jle
push
fwait
popa
lods
outsb
inc
mov
jg
xchg
jg
pop
fistpll
ret
out
pop
pop
lods
jge
inc
mov
push
loopne
inc
jne
rorl
aaa
push
jns
mov
jl
xlat
pop
aas
mov
test
jae
pop
mov
aad
pop
mov
shrb
sbb
mov
mov
jecxz
ja
push
push
mov
or
and
jae
add
int
dec
sub
mov
xchg
mov
sarl
cmpsb
lock
insb
jmp
test
push
sbb
mov
loopne
add
xlat
cmpsb
push
rcrb
push
movsb
mov
out
xor
es
fld
movsl
js
sti
lcall
insl
mov
into
loopne
and
mov
xchg
mov
jne
popa
fildll
loop
pop
dec
lods
add
jg
popa
test
jns
pop
ja
dec
lea
loopw
addr16
jno
add
lcall
ds
mov
xchg
pop
loopne
and
jg
dec
in
xor
and
mov
sub
push
shlb
out
dec
iret
push
add
repnz
mov
std
xlat
outsb
shl
les
push
scas
xor
outsb
lret
ljmp
jns
fmuls
cld
push
enter
rorb
and
and
ret
push
vcvtpd2dqx
fdivs
dec
ja
test
jae
test
fstl
dec
movsb
mov
fmull
sbb
cld
ret
adc
ret
ss
jmp
loop
repnz
outsb
pop
rcr
test
push
popa
fisubs
mov
sbb
scas
iret
inc
and
daa
outsl
pop
jg
mov
pop
sbb
push
push
dec
in
push
sarb
sub
sbb
and
and
decl
loop
mov
les
pusha
cld
scas
fiaddl
mov
xlat
pusha
into
cmp
lea
sub
into
filds
dec
xor
jns
addr16
sub
aaa
or
shll
sbb
cwtl
mov
jae
cmp
loope
jae
scas
sbb
stos
push
sbb
cmp
sbb
or
scas
push
ja
out
in
cmp
pop
rcrb
xchg
pop
lret
shr
dec
jmp
cwtl
jno
adc
movsl
pop
mov
lods
fstpt
pop
arpl
bound
push
fiaddl
xlat
jmp
or
mov
or
aam
ljmp
xchg
add
adc
and
push
clc
pop
inc
jmp
jl
jge
jle
xor
outsl
hlt
dec
jb
dec
outsb
outsl
push
data16
call
scas
mov
xchg
addr16
rorl
das
inc
jmp
scas
stos
mov
dec
rorl
es
ss
lret
lret
and
int
insb
sub
xor
mov
insb
std
ror
and
dec
aad
insb
lret
xlat
and
mov
out
pop
jmp
pop
add
insb
inc
pusha
mov
popa
mov
fwait
mov
lret
dec
cmp
sbb
arpl
add
mov
xor
popa
add
or
hlt
push
pop
ljmp
or
sub
in
push
outsb
jno
jb
ja
xchg
scas
or
xorb
imul
jmp
dec
fmul
inc
ret
push
arpl
and
incl
in
cmpsb
movsb
test
loopne
sbb
cmp
jl
sub
pop
and
and
xchg
mov
call
and
bnd
fdivr
clc
and
jno
pop
ret
push
imul
pop
cli
mov
lock
or
xlat
icebp
enter
inc
imul
lods
scas
test
sbb
ret
mov
add
adc
jne
mov
fidivl
and
mov
mov
xor
ja
sbb
icebp
in
imul
outsb
lahf
pop
stos
mov
outsb
mov
test
insl
xorl
out
loopne
or
scas
xchg
lods
pop
mov
push
negb
out
aaa
and
add
pop
leave
add
in
and
imulb
mov
popa
pop
fcoms
mov
aaa
mov
sarb
inc
sub
scas
cmc
or
adc
push
xor
pop
gs
imulb
and
aam
lahf
adc
cmpsl
dec
shrb
ret
lret
add
ds
ret
push
lock
jl
jmp
movsb
pmaddwd
js
jne
and
hlt
and
sub
outsb
les
call
ret
cld
inc
add
out
ds
jecxz
minps
addr16
cmp
repz
pop
xchg
imul
loop
sahf
dec
sti
movl
adc
xchg
or
mov
sub
in
jno
sahf
jp
cmp
jmp
outsb
dec
pusha
cld
shlb
jecxz
mov
clc
cmp
cwtl
inc
sbb
cmpl
jg
clc
add
push
leave
xchg
jne
outsb
xchg
loopne
loope
insl
sbb
iret
stos
imul
andl
movsl
cmp
sahf
int3
test
aam
lahf
out
sub
inc
mov
int3
adc
sti
inc
sarb
jne
outsl
xor
test
movb
jns
cwtl
jle
shrb
subb
cmpsl
lock
push
aam
push
push
mov
stc
leave
or
jmp
jg
sbb
jbe
sub
pusha
addr16
inc
test
adc
outsb
inc
rcl
push
lahf
cld
dec
adc
cmpsl
lods
ja
mov
sbbb
mov
or
jo
jmp
dec
sub
rcr
sbb
sbb
push
mov
outsl
or
jae
mov
mov
mov
into
lods
sub
sbb
call
pop
jl
cwtl
jnp,pt
insb
outsb
orb
mov
mov
int3
insb
inc
aas
adc
outsb
mov
pop
xchg
or
dec
jns
push
or
jmp
xor
cmpsb
sahf
jg
adc
pop
xor
shll
pop
je
xor
es
lods
xlat
nop
mov
std
ss
push
add
jno
push
out
sti
jl
hlt
or
lret
adc
xchg
jge
sub
repnz
xchg
lock
and
jo
dec
clc
dec
sub
fdivp
cmpsl
jmp
sti
out
scas
dec
mov
scas
js
outsl
push
sub
jae
inc
cs
clc
loope
inc
push
enter
orl
gs
xchg
and
mov
loopne
adc
or
add
test
and
fldl
mov
dec
xor
inc
jnp,pn
imul
xor
adcb
es
adc
xchg
lcall
jb
xor
clc
cmp
mov
and
rcl
ss
mov
sub
sbb
cmpsl
add
cli
inc
mov
mov
aas
sub
repnz
gs
inc
int
sbb
inc
xlat
dec
repz
mov
call
or
pop
fwait
icebp
inc
outsl
lea
sbb
cld
stos
fisttpll
push
pop
mov
test
lret
outsl
cmp
mov
mov
fistpll
lret
inc
gs
add
inc
shl
sbb
out
out
sub
cmpb
push
lock
fiaddl
sub
clc
lcall
sbb
mov
xchg
lea
jb
std
mov
arpl
test
sbb
push
mov
outsb
lcall
sti
dec
loopne
enter
inc
mov
add
in
imul
mov
mov
mov
pusha
iret
push
lret
adc
push
xor
cltd
sti
out
dec
repz
lahf
scas
test
into
push
cmp
call
inc
mov
xchg
xchg
shrb
or
out
pop
fisttpll
xlat
in
dec
push
jge
or
sub
pop
fisubs
lock
loopne
stc
xor
mov
mov
shll
clc
iret
leave
mov
sahf
iret
or
lock
lret
or
je
jne
stos
pop
cmp
or
in
mov
push
jp
or
sbb
dec
push
outsl
in
pop
dec
mov
in
stc
scas
movsb
ret
dec
into
call
jle
and
imul
add
imul
mov
movsb
popf
imul
push
shrb
mov
in
inc
or
cmpsl
outsb
movsb
divl
mov
mov
adc
inc
out
push
adc
loope
or
subb
or
cmpsb
xor
mov
shlb
bound
xchg
imul
aad
mov
adc
xchg
lds
rcrl
mov
mov
fsubs
psubsw
jp
sub
rclb
movsb
jge
cmpsb
call
mov
sti
into
popa
push
movsl
jbe
outsl
rclb
dec
or
sub
outsl
adc
pop
loopne
push
outsb
jge
adc
xchg
shr
xor
push
lcall
jg
xor
xchg
lar
rcrl
jae
outsl
adc
add
mov
movsb
mov
jg
mulb
adc
pop
add
in
mov
in
test
das
cmp
dec
pop
hlt
or
pop
addb
scas
ss
in
dec
call
dec
out
adc
dec
addr16
pop
mov
test
jmp
mov
imull
lret
lock
insb
dec
dec
mov
data16
xchg
scas
sbb
add
pop
mov
inc
in
es
ss
jge
test
loopne
adc
push
rcrl
xchg
stos
loopne
add
and
test
pop
sub
push
xor
mov
in
and
lahf
add
pop
int
and
sahf
popa
fldt
push
mov
or
dec
in
pop
add
pushf
add
out
add
daa
mov
mov
xchg
mov
lea
sbb
pusha
std
xchg
inc
mov
fmuls
mov
pop
dec
out
or
inc
movsb
add
push
pop
ret
sbb
mov
fbstp
jbe
xchg
loopne
jne
call
push
dec
loop
icebp
arpl
push
stc
adc
sub
jge
ss
in
cltd
cmpsl
inc
xchg
std
push
and
jmp
adc
xchg
mov
pop
vpcmpeqb
sbb
or
into
and
mov
push
mov
or
xchg
jns
mov
popa
lahf
sbb
shrl
loopne
jecxz
fdivrp
dec
mov
dec
push
ds
and
outsl
xor
dec
mov
push
jbe
sbb
jb
stc
dec
ds
lret
pushf
gs
fildll
in
mov
mov
repz
add
mov
jge
enter
stc
dec
repnz
out
lock
lods
xlat
push
je
dec
pop
outsl
testb
outsb
clc
or
mov
mov
and
jge
push
sub
loope
push
push
xor
pop
xor
inc
test
pop
jne
adc
xlat
or
push
jbe
sub
insb
dec
stos
fidivrl
xor
dec
sti
adc
or
dec
dec
xor
adc
jb
push
sbb
xchg
leave
pop
imul
lods
gs
dec
pop
repnz
outsb
loopne
pmullw
pop
dec
push
jno
jg
sbb
jp
jno
mov
outsl
cwtl
lahf
jne
icebp
push
mov
mov
lock
push
insb
jg
push
outsb
dec
xor
jp
mov
push
loope
imul
pop
cmp
dec
movsl
rcl
or
lcall
addr16
imul
xchg
in
xchg
data16
dec
in
add
mov
and
in
xchg
push
in
ss
mov
sub
jno
pop
sbb
add
test
out
loope
test
lcall
push
fistpll
xor
lods
ret
jne
pop
clc
outsb
cs
mov
ss
ljmp
dec
or
xor
test
inc
outsl
mov
test
movsl
jb
mov
frstpm(287
jmp
std
sti
dec
sbbl
cmp
out
or
push
sbb
xchg
scas
ss
mov
imul
cwtl
loopne
and
mov
cli
sub
out
ror
push
testb
push
lock
or
loop
inc
add
xchg
pop
bound
in
outsl
out
inc
addr16
out
push
pop
sbb
bound
jp
es
out
stos
sub
dec
inc
jno
push
js
stc
inc
mov
dec
and
sbb
mov
shrl
ret
into
out
push
outsl
test
sbb
add
mov
ljmp
outsl
out
pop
sbb
push
rol
push
add
orb
jae
lds
add
lods
or
mov
xchg
leave
xor
jb
mov
loop
push
dec
call
and
not
xor
sbb
sahf
data16
mov
pop
add
sbb
jp
cmpsl
rcrb
outsb
adc
and
hlt
xchg
cmpsb
sub
imul
popa
fwait
xlat
cmp
push
inc
sub
dec
loopne
lret
imul
or
xchg
xchg
xor
test
jmp
pop
sti
in
leave
push
inc
and
shlb
out
push
pop
scas
mov
das
in
pop
call
push
sahf
bound
popa
outsl
out
pop
in
mov
packssdw
jle
mov
stos
mov
sbb
in
mov
arpl
pop
cmp
pop
daa
cli
mov
pop
outsl
cmp
jp
sbb
sbb
mov
xlat
imul
jmp
sbb
insb
mov
lret
dec
dec
hlt
mov
insb
fistps
loop
rolb
data16
xchg
dec
test
ja
pop
push
dec
push
add
ja
stos
arpl
xor
les
sub
pop
dec
imul
mov
loop
sti
sahf
sarb
xchg
or
sbb
in
cld
int3
pop
mov
xor
in
push
lock
or
out
dec
lret
or
push
sbb
test
mov
adc
fsubrs
adc
test
inc
loopne
xchg
std
out
xchg
nop
int3
insb
lock
call
std
cmp
xlat
sub
xchg
push
pop
mov
in
xchg
negl
outsb
aaa
daa
popa
test
jg
xor
pop
gs
lock
xor
inc
ret
loop
dec
lods
jge
les
push
inc
pusha
mov
std
push
dec
in
movsb
ret
lods
out
mov
jg
inc
cmpsb
sub
jmp
out
mov
sti
std
fildll
jg
clc
iret
ljmp
push
test
mov
jge
std
cs
pop
push
jl
mov
icebp
push
lcall
test
clc
loopne
imul
push
mov
shlw
jl
dec
scas
bound
jecxz
xor
xor
fdivr
cld
fisttps
or
ja
mov
pop
xchg
insl
scas
ret
dec
decb
push
add
bound
nop
arpl
pop
call
pop
call
insl
pop
sbb
es
jg
push
jnp
out
ja
and
sti
popf
jae
nop
clc
inc
lods
sti
jmp
sub
mov
mov
jp
cmpsl
pop
call
sub
pop
clc
or
jg
out
icebp
mov
lods
leave
out
ffreep
ja
dec
loop
push
cmp
scas
jbe
mov
dec
sub
into
roll
adc
daa
dec
add
jg
cmpsb
addr16
int3
cld
out
push
and
cs
gs
insl
bound
cs
addr16
add
imul
dec
imul
push
outsl
mov
setbe
hlt
cld
and
dec
mov
pop
or
test
icebp
and
or
add
push
mov
cmc
xchg
jns
push
outsl
mov
adc
and
mov
lods
sbb
push
pop
push
out
out
adc
xchg
in
out
scas
addb
imul
int3
repz
or
out
adc
insb
gs
add
or
call
rcl
jbe
mov
or
imul
xor
sbb
iret
xor
fidivs
mov
jg
pop
decb
xchg
loop
or
sub
mov
icebp
add
scas
iret
out
xchg
sub
or
sub
inc
jo
mov
dec
outsl
nop
xchg
scas
mov
lock
xchg
scas
jp
fldt
cltd
dec
std
mov
add
std
loopne
pop
mov
mov
pop
sti
and
outsl
sahf
cltd
out
imul
std
mov
xchg
pop
lds
fsubl
sbb
fstl
jae
xchg
lahf
fbld
jmp
or
push
lret
into
loope
fisubrl
xor
inc
call
aas
call
mov
xchg
dec
mov
inc
jle
jge
shrb
out
pop
fists
ljmp
inc
loopne
jbe
cmc
sub
inc
addr16
push
call
xchg
mov
sbb
dec
jmp
cltd
mov
data16
xchg
call
loop
cli
jns
ficomps
pusha
inc
mov
mov
or
mov
jb
cltd
cld
enter
dec
dec
dec
outsb
loope
xchg
mov
jge
jmp
icebp
lcall
mov
aad
push
cltd
inc
pop
out
ljmp
pop
test
push
icebp
push
addr16
ljmp
push
iret
pop
outsl
jmp
cs
in
movl
mov
mov
add
outsb
xchg
stos
mov
jmp
xor
aaa
inc
mov
jbe
pop
dec
iret
cmp
jcxz
das
sub
in
test
gs
dec
scas
int
mov
jb
and
adc
mov
push
jmp
test
pop
sti
dec
push
test
loopne
fmul
int3
jle
push
or
mul
adc
dec
das
add
mov
stos
mov
scas
cld
and
and
jle
cmpsl
mov
dec
mull
pop
inc
stos
sub
iret
jle
jg
hlt
cli
lods
sbb
aam
lods
sti
or
jae
lahf
xor
pop
and
rcll
and
inc
or
lret
out
sahf
mov
pop
inc
jle
xor
xchg
icebp
jmp
call
ja
sub
scas
jmp
clc
dec
mov
xor
sub
or
aaa
mov
stos
dec
out
dec
sahf
sub
stos
jle
std
sahf
inc
scas
xchg
lahf
fiadds
mov
cmp
lods
and
pop
pop
pop
aaa
mov
pop
popa
dec
mov
xchg
dec
cmp
int3
ljmp
scas
iret
pop
loop
inc
rolb
mov
mov
cmpsl
pop
scas
iret
lods
pushf
jge
mov
dec
das
add
in
lret
mov
out
pop
test
sti
push
daa
fimuls
sarl
push
lret
rcrb
lahf
fcoml
mov
inc
mov
push
insb
xor
inc
and
mov
out
jmp
push
clc
push
mov
jb
das
call
fadds
mov
add
pop
movl
lea
sbb
cmpsb
adc
mov
inc
xorb
dec
ret
shl
stos
imul
cli
aas
and
xchg
fnstsw
jne
cwtl
sbbb
add
enter
out
gs
dec
sbb
lock
push
js
test
aas
jne
outsl
sbb
xchg
dec
pop
add
cmp
adc
sub
jg
out
aam
aaa
leave
scas
pop
out
pop
mov
rcrb
cld
inc
in
test
jg
outsb
pop
push
loope
jecxz
mov
inc
and
mov
rsqrtps
movsb
pop
jmp
repz
xchg
xchg
cmp
pop
mov
cmpsl
pop
jg
aam
scas
lods
add
pop
push
xor
cmp
inc
clc
jae
sub
jp
or
xchg
xchg
sti
push
sbb
push
adcb
pop
ficoml
packuswb
out
daa
call
pushf
stos
adc
ret
mov
mov
in
mov
add
addr16
add
stos
popa
ficoml
dec
cmp
lea
fsubrl
add
xchg
pop
sahf
enter
cwtl
push
outsb
loope
cltd
add
jp
push
std
test
into
jb
push
lods
pop
ficomps
out
mov
mov
push
ret
fistpll
daa
addr16
insb
aad
mov
or
lret
pop
out
push
xor
inc
adc
out
dec
sub
dec
movsl
sub
dec
jne
outsl
xor
inc
idivb
jnp
hlt
mov
bnd
cmpsl
push
cmpb
ret
push
inc
pop
sahf
jg
mov
cld
xchg
outsl
xor
mov
xchg
sub
sub
cld
push
jae
in
test
int
sub
cltd
out
push
ja
in
sub
clc
popf
rclb
add
jle,pn
jg
inc
imull
jg
scas
cld
sub
add
dec
shlb
mov
fnstenv
scas
aad
pop
jbe
mov
mov
mov
movsb
lret
or
les
jae
add
lcall
pushf
jle
cwtl
push
dec
adcl
addr16
add
leave
mov
pop
push
dec
mov
push
lods
es
insb
dec
ss
sbb
and
xchg
dec
out
scas
push
icebp
iret
jb
cmpsb
or
dec
filds
leave
rorl
or
jbe
testl
ss
mov
test
je
stos
lods
add
ja
lock
jp
cmp
loop
inc
sub
push
or
and
popa
fbstp
outsb
lahf
add
pop
and
mov
mov
addb
inc
outsl
aas
jg
cmp
das
and
dec
daa
stos
clc
xor
or
out
xorb
in
shll
sti
inc
or
gs
shlb
outsl
mov
enter
jg
xchg
mov
xor
loopne
outsl
adc
icebp
jl
cmp
or
andl
jp
mov
rolb
aas
mov
dec
pop
in
popa
shlb
lret
insl
jnp
push
and
mov
movsb
jl
push
gs
push
mov
inc
movsb
xlat
test
fiaddl
popf
push
dec
dec
fistpll
lods
sbb
jle
and
pop
cltd
movsb
imulb
xchg
jl
test
mov
xchg
lds
and
flds
fnstcw
lret
repz
fldenv
push
xchg
aaa
lods
js
leave
rclb
test
outsb
call
fnstsw
mov
int3
fisubrs
cmp
push
js
decb
test
mov
jge
sbb
jne
sbb
insb
xchg
xlat
subb
addr16
outsl
out
das
or
mov
out
xor
pop
es
inc
adc
insl
arpl
mov
aas
in
push
fstl
mov
dec
sub
out
jno
test
add
into
out
out
in
nop
mov
call
shrl
push
pop
adc
dec
xchg
cmpsb
pop
insb
jg
clc
insl
xchg
scas
jns
pop
mov
in
xchg
test
mov
add
out
cwtl
outsl
enter
adc
sbb
pop
inc
test
lcall
jp
mov
ljmp
push
fildl
mov
cmp
ss
pop
pop
mov
push
out
lret
fisubrl
sbb
enter
mov
clc
aas
test
fwait
stos
clc
mov
test
dec
and
bound
loopne
out
in
dec
cwtl
sub
mov
dec
jnp
mov
cltd
inc
and
jns
lods
jae
popf
add
jmp
scas
or
lock
out
fisubs
pop
repz
mov
jns
cmc
into
jmp
out
fs
adcl
push
jl
jbe
shlb
sbb
jbe
mov
shrb
xchg
outsb
sbb
sub
xor
push
sub
mov
dec
and
xchg
cwtl
stos
data16
xchg
lods
lods
cmpsl
push
dec
insb
mov
das
icebp
xchg
jns
popf
lock
jmp
out
xchg
dec
jge
jmp
movsl
mov
mov
and
jmp
adc
pop
mov
dec
xchg
scas
pop
out
cmpsl
mov
mov
mov
imul
out
decb
jb
imul
clc
jmp
rorl
hlt
out
jmp
jbe
pop
jg
out
xor
addr16
arpl
fimull
loopne
imul
bound
out
pop
or
jecxz
jp
out
mov
aad
pop
mov
test
cmp
mov
int3
rcrb
out
insb
pop
jge
pop
pop
jge
jae
inc
push
movsl
push
mov
outsb
in
shlb
lcall
popa
mov
inc
arpl
dec
scas
into
sahf
and
shl
xchg
int
mov
lods
mov
out
jns
dec
cmpb
mov
vmwrite
dec
xchg
popa
call
fcompl
fcoml
fnstcw
std
mov
mov
pop
lea
nop
in
push
add
imul
dec
arpl
mov
add
mov
pop
addr16
inc
adc
shrb
adc
loopne
ret
jns
insb
push
loope
cmp
xor
add
test
push
mov
mov
fildll
cwtl
jmp
mov
mov
fcmovbe
into
push
jns
jae
mov
jae
adc
lahf
shrl
aad
xchg
clc
adc
fdivrl
int3
xor
icebp
or
test
leave
push
add
js
dec
mul
inc
jae
cld
xchg
push
mov
jg
pushf
jmp
xorb
dec
addr16
ja
pop
loopne
in
pop
in
sub
jb
fidivrs
ljmp
iret
xor
inc
jl
and
stc
jb
scas
push
sbb
or
daa
cmp
insl
add
repz
fnstsw
imulb
jecxz
xchg
push
bound
aam
leave
insb
or
mov
mov
dec
pop
sub
push
push
mov
out
mov
inc
add
xchg
xor
mov
test
fiaddl
scas
push
stc
insl
pop
into
mov
addr16
mov
jg
xchg
imul
data16
mov
imul
lock
xchg
and
cwtl
dec
pop
and
sti
test
jb
or
fucomp
in
pop
repnz
pop
in
jmp
xchg
call
jp
pop
inc
or
jle
jg
dec
enter
jne
and
xchg
pop
jno
mov
jns
lods
inc
mov
test
fldt
test
mov
jnp
fwait
ljmp
rcr
bnd
pusha
clc
or
inc
dec
pop
pop
stc
and
dec
pushf
cmpsl
clc
rorb
xor
add
jae
insl
mov
in
jl
sub
and
out
loopne
pop
or
iret
lret
int3
mov
jae
out
mov
sub
repz
call
jle
std
jg
pop
test
div
sub
xor
iret
and
jb
dec
addb
out
inc
lahf
rclb
jo
xchg
xchg
loope
ljmp
jae
and
push
xor
outsl
out
out
outsl
out
jmp
adc
ret
or
dec
jns
insl
rcll
pop
imul
mov
dec
or
daa
lret
pop
mov
lods
jb
jns
loop
sti
pop
add
jns
jg
imul
js
mov
xchg
xchg
cmpsl
shrb
mov
aas
pop
enter
enter
iret
fcmovbe
stos
dec
jae
jno
in
lock
mov
fwait
sbb
imul
in
std
dec
outsl
fisubs
inc
jo
mov
outsb
push
shrl
jecxz
andb
and
andl
addr16
push
hlt
cwtl
lods
and
sub
push
or
rcl
imul
cmpsb
push
push
gs
hlt
test
push
sarb
cmc
stos
add
dec
lods
js
inc
in
aaa
movsb
sbb
inc
add
repnz
loop
out
fdivrp
bound
adc
scas
call
into
add
sbb
adc
pop
pop
and
inc
inc
push
out
mov
and
sbb
jp
push
aaa
imul
push
mov
lds
scas
mov
xchg
or
imul
jg
insl
dec
xchg
push
mov
and
mov
mov
scas
insl
and
sbb
mov
out
outsl
jno
cmp
inc
add
mov
sbb
adc
mov
lret
imul
sahf
dec
jno
data16
cwtl
push
lret
cltd
sub
cmpsb
test
pinsrw
hlt
push
mov
insl
out
test
cmp
mov
push
clc
out
mov
cmp
pop
loop
inc
mov
jg
inc
in
aam
out
jmp
test
test
mov
outsb
in
mov
dec
orb
xor
xchg
nop
and
addr16
arpl
loopne
ja
out
mov
and
arpl
xchg
test
dec
cs
loopne
outsb
ret
sub
push
data16
cli
fistps
adc
ret
xchg
add
inc
ljmp
jae
into
shlb
rcrl
pushf
cmpsb
outsl
lret
xor
push
imul
int3
push
cmpl
lods
pop
stos
daa
mov
icebp
ja
jle
mov
sub
pushf
dec
fisubrs
das
pop
mov
in
lods
imul
sbb
dec
lods
adc
in
jmp
fcom
cmpsb
lret
fs
and
movsl
dec
std
call
lret
in
aas
jmp
hlt
jns
out
out
test
aaa
xchg
inc
fimuls
adc
lret
pop
movsl
push
xor
jmp
leave
aaa
aas
pop
push
fbstp
mov
loopne
xor
xchg
xor
int3
enter
jae
mov
add
and
out
jg
adc
push
adc
mov
mull
movsbl
sub
outsl
movb
push
dec
outsb
fs
fwait
out
mov
or
mov
or
dec
imul
daa
ret
shlb
insb
hlt
in
adc
push
pop
jmp
call
dec
lret
jle
mov
cmpsb
repz
pop
cwtl
mov
popa
fs
outsb
and
repnz
mov
dec
sbb
stos
pushf
add
mov
jle
push
inc
cmp
or
notl
xor
idivb
inc
and
dec
insb
scas
test
lods
pop
sbbb
mov
mov
dec
xchg
mov
daa
dec
stos
out
loope
js
push
pop
addr16
call
imul
dec
pop
movsb
scas
dec
enter
add
stos
dec
arpl
pop
jmp
inc
popa
insb
out
stos
push
push
cmpsb
mov
subb
pop
aas
pop
add
stos
out
test
lea
mov
stos
fiaddl
jle
testb
rclb
sub
loopne
dec
inc
loope
adc
mov
pop
scas
jle
cmpsb
das
and
push
je
or
lods
add
xor
test
bnd
pop
call
push
int3
mov
cmpsl
cmp
mov
fsubs
aad
stc
cmpsl
mov
add
jmp
sbb
insl
pop
cs
into
not
sbb
aad
inc
push
ficompl
daa
mov
inc
mov
pop
mov
push
jp
bound
subb
nop
ret
add
sti
adc
mov
xor
pop
lahf
pop
mov
jb
lods
outsb
jmp
jecxz
loope
icebp
jns
add
fs
sbbb
mov
push
test
xchg
xchg
pop
sti
test
insb
cmpsl
scas
iret
mov
pusha
lret
call
pop
push
call
sbb
data16
aad
mov
inc
pushf
ja
outsl
add
or
xchg
sub
mov
ret
fwait
lods
repnz
lret
jne
out
pop
dec
pop
test
push
and
scas
push
ficomps
popa
test
out
scas
push
xchg
repnz
in
cmp
xchg
stos
adc
push
arpl
call
push
decb
xor
dec
icebp
jns
xchg
sbb
add
dec
out
xor
jbe
sub
fadd
outsl
jb
adc
lds
arpl
xchg
sub
mov
or
jae
fisttpll
inc
arpl
xchg
jecxz
cmp
scas
enter
jmp
mov
sub
xchg
mov
mov
push
sub
out
cmp
sti
dec
jge
das
jmp
pop
mov
xchg
outsl
fildl
push
jb
repnz
lods
push
dec
jmp
stos
push
test
jb
add
cs
loopne
push
cmpsb
loopne
xchg
mov
fdivs
ret
mov
cmpsl
out
mov
sar
mov
and
jnp
ss
outsl
xchg
dec
xchg
jb
cwtl
lret
call
loopne
arpl
mov
outsb
imul
mov
mov
addb
outsb
out
fsubrs
repz
outsb
mov
jg
data16
outsb
shrl
sahf
and
fadds
cmp
sahf
pop
test
addr16
xchg
hlt
loope
es
jecxz
mov
push
repnz
js
in
das
sbb
dec
notl
push
insl
test
inc
dec
mov
fbld
lret
ljmp
push
cmp
into
out
daa
inc
and
cld
std
xchg
ss
and
pop
inc
in
xor
jne
in
shrb
test
adc
mov
rorl
daa
inc
js
dec
leave
out
add
push
mov
xchg
repnz
stc
into
cmc
dec
imul
das
movsl
lea
mov
jg
xorb
in
aas
jae
dec
sub
loope
inc
mov
push
test
insb
pop
std
sti
out
outsl
mov
pop
inc
add
pushf
sahf
leave
push
imul
dec
aam
and
dec
outsl
aam
dec
ljmp
insl
ljmp
sarl
div
insb
stos
mov
jmp
ret
push
dec
sbb
es
clc
add
or
insb
inc
cmpsl
push
jle
int3
ja
pop
les
xchg
jne
sub
outsl
into
xor
xor
push
adc
push
out
sbb
leave
fmuls
dec
out
mov
push
dec
es
in
dec
movsb
pop
lods
cmpb
xchg
push
loopne
iret
out
outsb
pop
roll
dec
and
sbb
clc
mov
out
push
insl
les
lods
loop
cmpsb
stos
sbb
testl
jbe
call
ja
addr16
aaa
enter
pop
ret
mov
dec
inc
or
cmpsl
sarb
out
mov
jnp
mov
and
out
into
push
mov
insl
std
push
mov
pusha
adc
ror
add
mov
jg
fsubrs
ret
out
test
jg
ret
out
jg
inc
inc
es
out
mov
mov
push
stos
std
or
pop
inc
scas
push
jae
xlat
pop
cs
xor
jg,pt
xchg
pop
xorb
inc
fidivrs
xchg
cmpsl
ja
enter
jbe
inc
stos
ret
xchg
jg
jg
dec
in
inc
loop
out
mov
adc
mov
mov
or
jecxz
leave
lock
cld
adc
movsl
add
inc
insb
addr16
decl
ja
scas
gs
outsb
stos
mov
sbb
ret
out
pop
jle
inc
cmp
enter
pop
pop
mov
dec
sub
addr16
out
lock
out
push
cmp
mov
idiv
cmp
push
mov
cmc
je
dec
fucom
ds
stos
ljmp
jae
lret
lods
cmp
mov
and
js
cmp
call
jbe
mov
xor
mov
mov
adc
outsb
adc
shll
out
pop
lret
out
xchg
leave
xchg
dec
hlt
xchg
inc
test
outsb
xor
push
nop
test
bound
mov
aaa
xor
mov
out
call
bound
outsb
out
or
scas
pop
push
jmp
cmp
jne
ja
or
mov
xchg
and
jno
sbb
in
lods
testb
mov
pop
sbb
out
movsb
or
cli
cld
es
in
and
adc
cmp
outsb
xadd
xchg
mov
xchg
push
lret
add
add
rorb
mov
or
mov
cmpsb
out
dec
movb
push
cld
int
outsl
cmp
xchg
imul
movsb
push
mov
push
lret
arpl
in
movsl
mov
insb
aas
dec
andb
jg
dec
ret
incl
jle
in
pop
push
jge
inc
sti
into
mov
lret
adc
nop
hlt
mov
sbb
rolb
jl
push
addr16
out
mov
scas
push
inc
push
jno
shrb
cltd
mov
push
in
mov
dec
sbbl
sar
inc
xor
push
int3
fsubl
das
aaa
in
sub
jno
stc
loope
int3
xchg
pop
test
pop
add
scas
repnz
mov
adc
daa
xor
cwtl
lea
psubsw
push
add
xchg
mov
imul
xchg
mov
pop
test
out
xchg
push
xchg
xchg
jns
lods
pushf
add
pop
mov
mov
out
nop
cli
out
push
lea
adcl
cmp
and
mov
cli
cld
sub
push
insl
data16
loope
dec
ljmp
mov
pop
jle
pop
pop
call
fcompl
fmull
push
sub
mov
or
mov
movsl
js
mov
sub
addr16
rorl
add
lcall
lods
shlb
loop
jg
xor
add
pop
add
pop
adc
repz
flds
fistpl
cmc
fldcw
aaa
lods
enter
out
lock
rcll
imul
mov
stos
rolb
sbb
sub
pop
jbe
lret
jg
nop
xchg
add
icebp
mov
mov
bound
rdpmc
ja
mov
pop
adc
adc
mov
add
dec
scas
mov
ss
jno
std
fbstp
insl
sub
add
cmc
push
push
pop
mov
ljmp
into
in
jge
mov
outsb
lods
adc
flds
pop
sti
adc
cmp
sahf
insl
dec
jns
mov
and
jle
push
rcr
xlat
insw
lock
outsb
insl
leave
out
outsb
add
dec
push
loope
nop
aas
xchg
cmpsl
inc
add
pop
jecxz
out
std
cmp
dec
jle
scas
adc
jle
jnp
sti
pusha
jg
insl
nop
push
and
cmc
inc
xchg
out
jae
or
jp
pusha
cli
dec
jl
mov
sub
stc
or
popf
loopne
pop
jbe,pn
iret
loopne
pop
dec
jbe
outsb
cmpsb
xchg
fsubrs
or
sbb
lods
jmp
ja
jae
fsubs
into
sbb
ret
mov
mov
lds
jp
cmp
ja
push
mov
fsubp
outsb
add
sbb
pop
dec
cmp
mov
enter
jg
lock
and
adc
in
inc
xlat
test
fsubl
cli
pop
mov
cmpsl
sub
faddl
lea
mov
aad
adc
out
in
pop
mov
jmp
xchg
dec
add
lcall
lret
int3
cmc
movsb
mov
popa
dec
leave
cmpsl
xchg
repz
push
dec
xor
lret
shrl
sub
jl,pn
xchg
jno
xchg
or
sub
or
lahf
ret
hlt
mov
pop
and
jne
xchg
jmp
outsb
lods
cmp
inc
dec
adc
movsl
inc
jmp
and
add
outsl
inc
xchg
adc
xor
shrl
into
test
test
clc
jb
addr16
adc
notl
sbb
insl
push
in
sub
into
hlt
mov
adc
fsubrl
or
or
xchg
xchg
and
out
dec
jmp
in
push
stos
in
stc
out
cmp
lds
fcomps
in
pop
sub
mov
ja
inc
test
lods
js
push
xchg
out
fistl
outsl
dec
sbb
call
in
dec
shlb
mov
imul
test
dec
push
mov
pop
cmp
adc
movsb
adc
arpl
repz
dec
jecxz
mov
sub
jecxz
mov
mov
daa
dec
insb
in
or
push
in
pop
lods
clc
icebp
xchg
test
mov
into
int3
je
xor
mov
popa
add
das
jns
add
mov
adc
jb
js
jp
jae
out
lods
repnz
and
cli
aad
popf
inc
fcompl
dec
icebp
cld
lret
and
inc
ja
inc
and
jge
mov
push
jecxz
scas
inc
add
cmpsl
mov
mov
outsl
xor
imul
scas
lock
push
addr16
mov
outsb
mov
loop
and
rorl
in
aaa
add
mov
sub
scas
or
sub
ds
scas
mov
pop
cmp
scas
loope
daa
dec
clc
outsb
push
inc
adc
outsb
jg
pop
rolb
push
add
imul
mov
lds
and
pop
jmp
adc
outsl
cmp
adc
cmp
xor
add
andb
cmpsb
dec
movsb
popa
push
les
mov
movb
popa
pop
hlt
clc
outsl
mov
mov
aad
jne
jne
loopne
cmpsb
outsb
arpl
mov
leave
push
ljmp
outsl
and
clc
push
mov
or
mov
outsl
repz
cmp
push
in
sub
pop
daa
mov
cmp
jle
sti
lods
ds
subb
arpl
mov
inc
loope
pop
mov
inc
xor
mov
clc
imul
sbb
xor
jb
cltd
shll
jp
cmp
dec
repz
mov
push
sub
adc
fadds
push
push
iret
add
dec
loopne
nop
shl
jg
jge
nop
repz
pop
clc
jae
push
sub
add
insl
xchg
dec
loop
mov
adc
dec
push
iret
into
mov
out
mov
pop
mov
add
push
dec
call
inc
in
pop
mov
push
mov
or
fwait
loopne
lods
mov
pop
scas
jle
insb
ljmp
icebp
jge
xchg
dec
adc
push
mov
loope
out
test
jge
xchg
out
pop
int
add
fidivrs
outsl
fstl
dec
mov
sub
testb
xchg
es
dec
jmp
add
dec
push
cmpsb
sub
mov
fisubrs
jbe
rcrb
outsl
jne
mov
in
outsb
sbb
cmp
dec
mov
push
jge
xchg
lods
jl
and
add
xor
dec
insb
into
jp
ret
js
sbb
dec
fs
test
rcrl
aas
sbb
fdivrp
add
hlt
mov
test
aas
test
cmp
mov
ds
scas
inc
out
out
ds
push
mov
jae
pop
mov
lahf
dec
inc
shll
mov
stos
cs
xchg
mov
vpmaxub
dec
pop
adc
mov
mov
loop
loope
mov
rcrb
test
lods
pop
inc
aas
outsl
fcmovbe
in
fwait
int3
jae
inc
mov
and
dec
jae
das
ds
dec
shl
cli
ja
and
pusha
xchg
shrb
push
ret
dec
add
pusha
outsb
inc
ja
adc
sbb
add
dec
fcoms
add
mov
mov
fnstenv
xlat
and
dec
dec
movsl
ret
movsb
adc
sub
sbbl
jmp
loope
lods
imul
fisttpl
xchg
xor
xchg
xchg
or
lock
mov
xchg
scas
lods
mov
add
fld
push
lds
rorb
dec
or
aam
psubusw
int3
loopne
sub
add
data16
aad
cwtl
jae
in
add
xchg
or
addr16
nop
adcb
or
shl
sub
daa
cmp
cli
inc
adc
dec
ja
and
push
xor
sub
mov
inc
lcall
fs
ljmp
jo
adc
insl
xor
in
pop
mulb
fistps
adc
clc
or
sub
jmp
adc
nop
jmp
inc
mov
bound
jle
mov
push
and
or
xchg
jg
xchg
lcall
fmull
pop
stos
adc
fsubrl
push
mov
pop
leave
imul
out
out
scas
add
mov
iret
pop
enter
cmp
cwtl
int
xchg
shlb
push
pop
and
scas
inc
outsl
sbb
pop
xchg
inc
push
leave
xabort
cmpsl
bound
lahf
dec
adcl
xchg
stc
mov
push
mov
std
mov
loope
cmpsb
push
loopne
cmpsb
lcall
out
lds
xchg
addr16
sub
add
lods
dec
mov
push
aas
std
out
xor
or
dec
cmpsl
data16
loopne
xchg
mov
push
dec
das
push
push
outsl
es
pushf
mov
push
lods
scas
ret
into
test
sbb
cmp
daa
sti
sbb
or
lock
xchg
push
jle
shr
sub
outsl
xor
inc
mov
cltd
lahf
out
mov
or
out
verw
xchg
shrb
pop
stc
ror
pusha
outsl
mov
popa
pop
shl
rcr
mov
push
aas
mov
adc
imul
leave
mov
jmp
pop
out
outsl
test
mov
movsb
xchg
and
outsb
mov
mov
imul
fld1
push
leave
sahf
xchg
pop
test
mov
das
pop
or
dec
imulb
pusha
out
in
addr16
cmp
lahf
xchg
mov
add
repnz
mov
xor
std
outsl
add
mov
std
mov
add
lock
je
scas
leave
xor
scas
add
cmp
leave
fcomps
mov
xor
push
add
out
insb
jle
out
mov
insb
push
shll
cmp
add
dec
cmpsb
fcomps
mov
out
sub
loopne
inc
into
scas
cld
addr16
mov
out
in
stos
add
pop
test
shrb
scas
loopne
xor
imul
movb
nop
ljmp
out
cmpsb
stc
cmc
clc
fimull
push
fisubs
push
or
jb
lret
test
arpl
fmul
fnstsw
jo
push
insl
lahf
jb
addr16
outsb
lock
cmpsl
ret
mov
sbb
out
mov
scas
add
out
jne
outsb
jecxz
mov
test
jle
in
mov
sbb
aam
rclb
dec
test
insb
jns
out
or
inc
lcall
adc
inc
cmp
dec
lea
jne
push
fsubrl
adcl
mov
clc
dec
in
sbb
outsl
pop
mov
jne
push
pop
sub
aas
lret
loopne
jp
dec
xchg
add
outsl
pop
in
mov
mov
daa
into
mov
inc
gs
xchg
aas
pop
jp
ja
sbb
clc
mov
call
xor
in
gs
push
mov
insl
jb
xchg
lock
imul
stos
mov
mov
je
lahf
into
imul
movsb
jmp
push
mov
dec
xor
outsl
jl
mov
movsl
adc
and
jg
je
ss
movsb
cs
out
mov
sti
inc
ljmp
rcrb
or
jl
call
repz
or
pop
rcrb
shr
pop
or
insb
sub
dec
jg
jge
mov
lock
sarl
in
mov
call
mov
jmp
sub
jge
jnp
loop
cmpsb
outsb
in
ja
adc
clc
jbe
inc
notl
outsl
cmp
test
outsl
jg
lret
sub
lret
pop
mov
cwtl
loop
pop
add
xor
ret
cmpsw
es
adc
lds
int3
pop
or
or
aad
int3
add
call
das
shll
sub
dec
sar
rolb
inc
or
es
push
xchg
pop
or
dec
popa
mov
bnd
das
xchg
xor
das
mov
push
imul
iret
je
js
fcoms
cwtl
cmp
push
rorb
mov
fwait
push
dec
cmp
lods
pop
outsl
addr16
dec
aas
jb
mov
movsl
fmul
hlt
xor
jcxz
mov
data16
rolb
mov
sbb
pop
lahf
rolb
sub
push
bound
andb
ret
inc
jg
push
nopl
scas
int
pop
popa
bnd
mov
daa
in
push
mov
data16
adc
dec
scas
hlt
jne
add
xchg
sub
cmp
aas
in
add
push
out
in
inc
daa
pusha
cltd
xor
clc
je
mov
jne
and
xchg
adc
jae
mov
out
jle
movsb
icebp
in
inc
xchg
xor
out
cmp
mov
pushl
jne
mov
and
mov
dec
jg
mov
adc
nop
outsb
adc
loopne
mov
jg
and
aad
push
mov
jmp
or
inc
pop
lods
repnz
cmp
loopne
pop
test
dec
sub
dec
loopne
nop
push
pop
and
sbb
dec
sbb
cs
mov
mov
testb
dec
dec
cmpl
add
ljmp
pop
and
cmc
dec
mov
xchg
jle
cmpsl
mov
push
mov
or
xchg
xor
mov
push
rolb
lret
jo
aam
stos
repnz
pop
jg
mov
and
mov
outsb
jae
xor
xor
shrl
pusha
cmc
insb
jo
mov
cmpsb
sub
mov
int3
xorb
test
lds
hlt
stos
xchg
jg
test
notb
inc
lahf
push
xchg
cmp
mov
jge
in
jno
mov
mov
push
fidivrs
jno
xor
shlb
xor
clc
sahf
fstpl
clc
addb
and
sub
jle
inc
ds
xchg
aaa
ljmp
lea
clc
shlb
call
jg
div
mov
pop
movsb
ja
fwait
jnp
repnz
jg
pop
rcl
push
call
imul
mov
mov
outsb
adc
in
shl
out
daa
mov
push
stc
sti
pop
pop
enter
or
outsl
insb
stc
outsb
cwtl
leave
jg
lahf
pop
repz
fbld
adc
test
cmc
add
adc
and
sbb
jp
imul
jp
sbb
or
sbb
cli
shlb
stos
daa
ljmp
pop
jecxz
cs
out
repz
sbb
ds
roll
imul
xchg
jae
adc
sub
pop
mov
sub
xchg
or
inc
hlt
mov
sbb
lahf
notl
dec
mov
push
cmpb
push
test
push
xor
aas
enter
mov
andb
mov
fnstcw
add
into
scas
jae
sub
sar
lret
pop
inc
fmuls
sahf
call
mov
push
adc
lret
push
int3
outsb
repnz
aam
lods
cmp
xchg
jns
fistpl
in
and
rcl
add
test
popa
dec
sti
pop
aad
lahf
push
jbe
jle
fcomp
out
repnz
repz
loopne
nop
loope
mov
inc
cmp
mov
inc
enter
mov
test
and
or
sahf
pop
xchg
cmp
pop
or
lods
stc
mov
xchg
xorb
xchg
push
push
jmp
xor
mov
loope
fildll
rorl
iret
lcall
data16
sbb
sti
and
fldl
rdmsr
out
leave
shrb
mov
fsts
sbb
call
jecxz
lods
frstor
push
sahf
push
shll
xor
add
pop
jl
or
add
fst
push
in
in
loope
dec
sbb
test
or
xchg
cli
mov
dec
and
fdivrs
in
lcall
movsb
leave
or
lea
xchg
aaa
xor
out
cmp
push
ret
insl
mov
sbb
scas
mov
jbe
daa
aad
arpl
or
or
repz
lcall
pop
pop
or
lahf
fwait
dec
imul
mov
sub
daa
imul
les
mov
xchg
dec
cmp
out
inc
inc
or
out
dec
inc
adc
outsl
xchg
out
fdivp
addr16
lea
ljmp
ss
ficomps
dec
mov
cli
sub
outsl
lahf
stos
cli
outsb
mov
jo
mov
xchg
cld
mov
aam
lods
outsb
mov
inc
ret
mov
outsb
call
pop
les
lea
imul
push
mov
adcb
push
hlt
mov
mov
mov
mov
clc
das
insb
xchg
jae
xor
imul
pushf
mov
lret
es
mov
push
movsw
jns
out
out
dec
jle
in
add
mov
jae
ss
mov
iret
sub
inc
xor
sub
aas
ret
jae
test
fildl
cmpsl
mov
inc
push
push
sub
fs
push
clc
xchg
cmpsb
dec
pop
mov
out
movsl
inc
subl
pop
outsb
mov
lea
out
ja
adc
xlat
push
mov
xchg
xlat
sahf
pop
fisubs
cltd
fwait
stc
jmp
scas
dec
out
mov
jnp
in
lock
imul
sub
fbld
movsl
pop
xor
push
dec
insl
out
sbb
cmp
jle
iret
loop
mov
loop
xchg
daa
push
outsb
dec
mov
pop
lahf
enter
outsb
in
bound
mov
cltd
mov
jge
sbb
xchg
push
jle
xchg
mov
enter
mov
push
pop
data16
mov
mov
xlat
nop
push
mov
shlb
ret
mov
daa
add
nop
mull
ja
add
xchg
pusha
mov
add
ja
mov
jne
in
clc
pushf
hlt
repz
fildll
outsl
inc
jp
shlb
sbb
outsl
cmp
scas
hlt
fsubrp
iret
lods
jp
mov
mov
lods
inc
mov
outsb
mov
adc
xor
add
inc
int
xacquire
pop
xchg
stos
xchg
sub
dec
dec
loopne
sub
mov
sahf
add
mov
dec
sub
ss
lea
js
ja
aaa
sbb
mov
push
dec
lods
test
addr16
mov
daa
bound
inc
jae
xor
or
mov
dec
jne
mov
dec
or
out
inc
pop
stos
push
adc
jb
mov
dec
mov
fmull
outsb
jno
xor
jno
push
or
dec
xchg
imul
pop
push
dec
ljmp
adcb
pop
push
sahf
inc
arpl
and
call
xor
mov
or
add
inc
outsb
sub
ja
test
mov
rorb
fsubrl
jl
out
push
pusha
insl
push
xchg
dec
gs
push
stos
pop
mov
jecxz
out
mov
xchg
insb
mov
lcall
clc
inc
push
mov
cmc
or
inc
inc
pop
dec
ficoml
or
cmc
insl
aas
rorb
in
mov
in
ret
jae
in
jne
ljmp
jae
stc
repz
inc
ljmp
out
ljmp
sbb
loop
pop
mov
or
fucom
pop
pop
es
jg
stos
jl
shll
mov
jmp
out
sub
mov
fldcw
imul
mov
cmpsl
xlat
or
jl
jge
sbb
mov
imull
fmull
jae
xchg
fdivl
mov
jge
and
dec
sub
stos
js
lods
ffreep
pusha
xor
jle
xor
adc
cmp
cmpsl
mov
repnz
xor
xchg
mov
loop
fcmovnu
out
cmp
icebp
jae
push
and
inc
mov
inc
lock
mov
jnp
xchg
and
sub
loope
je
je
inc
add
shl
loop
or
test
int3
dec
jmp
sbb
jae
pop
repz
call
or
push
loopne
cmp
inc
fsubrl
cmp
sbb
cmp
sub
arpl
jb
scas
test
mov
inc
shrl
insl
outsb
lods
test
jp
pusha
push
mov
push
pop
adc
jle
daa
push
or
push
lods
dec
mov
scas
adc
sti
lahf
add
daa
ret
xor
rolb
xlat
imul
push
push
popf
mov
dec
mov
lcall
aaa
imul
xchg
xor
mov
push
loope
mov
repnz
lret
dec
enter
and
hlt
sbb
mov
mov
test
lods
cld
add
pop
push
mov
cmpsb
push
imul
cmpsl
hlt
jo
aaa
or
icebp
fcomps
mov
enter
cmp
leave
aaa
dec
mov
out
test
scas
cli
aaa
inc
cli
mov
into
scas
ror
outsl
repz
leave
mov
lret
and
cmc
enter
fldl
add
fisubl
das
pop
mov
out
cwtl
push
mov
icebp
test
xchg
pusha
lea
mov
mov
in
jnp
test
ret
gs
dec
xor
jbe
cmp
loopne
jmp
mov
jge
call
std
inc
std
cld
sahf
out
enter
xchg
icebp
xorb
rolb
inc
ds
pop
push
adc
aaa
test
aam
jb
outsb
or
or
jbe
inc
outsl
sbb
or
in
jne
out
imulb
jbe
cs
into
dec
insb
je
cmpsl
data16
imul
mov
test
clc
and
test
test
mov
int
mov
call
and
repz
jo
jne
xchg
mov
ret
es
loop
lds
cmp
cmc
mov
lods
leave
xchg
test
or
inc
push
mov
inc
jl
lock
repz
repz
sbb
xchg
int3
cmp
cmpsl
adc
ret
test
cmc
das
rclb
jbe
sub
push
enter
jl
and
mov
int3
out
popf
or
mov
scas
dec
ljmp
dec
push
or
push
in
cmpl
mov
stos
nop
out
mov
mov
mov
aas
push
dec
pop
out
jae
jg
pushf
push
mov
lock
sbb
mov
xor
xor
cmp
imul
sti
popf
mov
shrl
aas
or
xor
or
mov
pop
xchg
cmpsb
xchg
out
push
xchg
xorb
int3
lahf
ret
xchg
mov
divl
push
cmpsl
out
push
outsl
scas
dec
bound
sub
arpl
sahf
lock
xlat
push
outsl
push
ret
sbb
push
mov
shrl
call
dec
int
jno
fmuls
or
pop
add
mov
outsb
loope
jge
in
xor
sbb
std
shlb
adc
push
ret
cmc
outsb
divb
scas
pusha
shl
fidivrl
jmp
cmc
das
jne
cmpsb
std
jl
dec
repnz
or
arpl
out
sbb
lods
insl
xchg
mov
cltd
xor
int3
xchg
sbb
jae
mov
jbe
lock
mov
in
mov
xor
mov
mov
lret
iret
mov
cmp
xchg
jno
push
push
lea
fisttpll
xchg
push
dec
call
inc
scas
lret
dec
and
in
insb
icebp
mov
sti
enter
stos
cs
sub
mov
mov
sbb
sub
mov
pop
dec
push
lock
dec
data16
push
xchg
pop
inc
pop
lea
jge
dec
sarb
scas
movsb
dec
push
hlt
cld
or
mov
cmp
insb
inc
call
aam
dec
inc
dec
and
mov
int3
add
pop
mov
cmc
mov
xchg
xor
jg
sbb
push
sbb
xchg
and
jl
dec
xchg
add
xchg
lock
mov
jg
imul
nop
sbb
cmc
dec
mov
push
es
sub
pop
imul
mov
es
pop
push
dec
xchg
push
dec
rclb
xchg
aad
out
in
scas
mov
mov
push
mov
cmp
hlt
mov
pop
arpl
iret
lock
adc
pop
cmpsb
mov
pop
adc
gs
add
or
stc
fistpll
sbb
in
inc
orl
test
dec
inc
lods
enter
adc
scas
xchg
lea
movsw
adc
dec
pusha
sti
ret
mov
jp
cmp
mov
popa
hlt
add
sub
repz
fcomp
aad
movsb
dec
pop
je
outsl
fildll
in
lret
lret
fcmovu
or
call
insl
xchg
push
out
pop
lock
and
xor
lahf
and
lcall
push
push
jmp
outsl
out
pop
cmpsb
aaa
jno
xor
mov
fidivs
adc
and
dec
dec
mov
xchg
lahf
lds
cmp
stos
cli
in
jge
aas
movsb
mov
aaa
push
sub
mov
jne
and
push
je
cmc
rep
cmp
push
cmpsb
sub
jecxz
ret
add
fnstcw
movsb
pop
cltd
ds
push
scas
mov
je
popa
into
fistpll
stos
xchg
push
rorb
scas
mov
lret
xchg
mov
bound
mov
or
call
dec
cmc
into
mov
mov
fcoms
int3
jmp
or
imul
mov
fcompl
jl
sbb
inc
shr
cmp
sub
mov
lock
xchg
movsl
dec
insb
mov
pop
mov
mov
outsl
mov
xor
mov
jg
dec
aam
hlt
lods
dec
sub
aad
pop
sbb
incb
sub
jle
pushl
pop
cmp
dec
or
mov
dec
js
and
outsb
cwtl
adc
icebp
xchg
loopne,pt
pop
stc
push
cmpsl
adc
sbb
sahf
lods
repz
jge
loop
movsl
outsl
xor
sbb
mov
xchg
loope
jbe
stos
push
push
fldl
push
aaa
mov
int
outsl
pop
cmc
inc
or
insl
sub
xchg
fadds
cmc
jo
dec
xchg
xchg
inc
add
mov
jmp
pusha
outsb
nop
test
divb
mov
repnz
nop
lahf
mov
addr16
push
shll
popa
push
inc
stos
scas
pop
push
shl
and
test
xor
outsb
call
idiv
add
mov
outsb
insl
jg
dec
xor
outsb
sbb
enter
ss
insb
dec
jle
outsb
scas
mov
outsb
mov
imul
js
cmp
adc
ja
jns
mov
pop
mov
push
lods
outsl
push
addr16
jnp
out
jbe
sbb
fbstp
dec
or
out
das
out
enter
push
pop
inc
mov
mov
jecxz
jg
faddl
jnp
mov
scas
inc
adc
pop
stos
sub
lea
cs
xor
test
jb
pop
jg
jle
shlb
cmp
mov
ss
and
lock
push
cmpsl
testb
jbe
mov
ljmp
mov
icebp
mov
in
addr16
es
icebp
loope
inc
jle
sub
pushf
das
test
cli
pop
gs
fcomps
cs
and
mov
test
loopne
jno
in
arpl
jb
call
ja
int
jbe
cmpsb
dec
cs
lret
lret
sub
add
pop
test
inc
sbb
call
dec
movsl
fsubrs
nop
sub
ljmp
shrl
in
call
push
dec
das
imul
ljmp
cmp
ljmp
cwtl
outsl
dec
mov
nop
push
adc
js
push
inc
outsl
sub
test
daa
jno
out
ljmp
push
mov
ds
mull
enter
push
push
mov
aas
mov
lods
stc
rorl
jmp
inc
cmp
notb
add
in
in
xchg
jmp
push
aaa
int3
les
out
pop
out
and
movsl
sbb
out
out
out
mov
pop
xlat
mov
je
pop
mov
iret
aad
lods
int3
mov
mov
dec
mov
movsb
cs
add
out
cmpsb
dec
and
insl
and
pop
pop
mov
outsl
pop
fists
pop
jg
pop
jg
int
loopne
sub
lods
jns
mov
xor
rcr
and
sub
fdivrp
inc
cmc
sti
arpl
mov
outsl
cltd
add
push
outsl
fistpll
adcl
std
or
outsb
jle
xchg
addr16
shl
xchg
scas
mov
adc
jle
mov
out
rorb
imul
adc
dec
adcb
addr16
mov
dec
lahf
insb
sub
jecxz
sub
movsb
jle
imul
jae
mov
xchg
test
jae
insb
jg
inc
comiss
xchg
enter
xchg
cmp
mov
lock
js
add
cmp
jbe
into
jno
sbb
lea
dec
pop
ja
clc
ds
insl
dec
ret
pop
out
mov
inc
pop
lock
mov
nop
aaa
jo
call
in
xchg
int
pop
dec
push
push
jnp
push
addr16
mov
clc
or
pop
into
out
cmp
push
mov
in
jno
add
jae
mov
jg
shl
dec
fucomip
out
clc
jge
dec
lea
mov
outsb
mov
repnz
push
loopne
dec
shll
sub
fsts
pop
je
dec
jae
mov
adc
test
clc
inc
or
pop
imull
jbe
int3
fldcw
scas
test
inc
call
jg
pop
rclb
xchg
pop
out
mov
and
add
mov
push
cwtl
push
and
vorps
es
clc
mov
shlb
pop
sbb
mov
je
movsb
mov
clc
dec
inc
subb
sub
enter
mov
movsb
xchg
mov
movl
xlat
jno
nop
in
sar
mov
pushf
add
dec
jg
fwait
loop
and
xor
mov
pop
loop
sbb
jl
outsl
int3
push
je
inc
mov
rcl
sbb
jmp
adc
daa
push
mov
add
cs
sub
into
aaa
shlb
test
dec
mov
dec
dec
jbe
dec
sub
mov
imul
ss
lods
das
mov
pop
fdivl
in
push
pop
xchg
xchg
jo
repz
cltd
imul
icebp
imul
sub
dec
jge
pop
decb
fnstenv
outsb
push
mov
out
int
or
add
dec
movl
jp
insb
out
arpl
ret
mov
sbb
push
and
mov
or
or
call
add
mov
inc
imul
icebp
stos
and
lret
xor
sub
mov
and
out
pop
ja
leave
sti
bound
pop
stos
mov
sti
outsb
test
jle
lods
outsb
iret
sub
pushf
rorb
call
ljmp
out
mov
mov
out
movsb
pop
sbb
outsb
bound
and
jmp
pop
imul
divl
das
outsl
mov
scas
inc
ret
imul
outsb
push
leave
out
lods
ljmp
loop
mov
push
dec
movsb
cwtl
lret
and
cmpsl
shlb
jecxz
add
bound
and
jmp
jg
fiaddl
add
push
pop
lcall
sub
xor
pushl
jp
cltd
addr16
dec
insb
out
stc
outsb
testl
and
mov
add
sti
sub
mov
dec
out
ret
lock
movsl
jecxz
dec
xchg
in
cmp
push
jns
and
fisttpl
incl
outsl
in
outsl
jge
ljmp
stos
popf
add
push
cli
xchg
popa
shlb
test
addr16
lods
outsl
add
call
push
lock
sbb
jle
lods
out
scas
ljmp
enter
mov
bound
gs
inc
idivl
mov
movsb
dec
enter
add
jg
jbe
mov
enter
movsb
mov
mov
sahf
rol
movsl
mov
fcmovne
pop
add
adc
adc
push
jg
out
clc
in
stos
es
jl
aad
sub
adc
adc
fmul
js
out
push
nop
and
push
cs
and
jns
rcrb
sarb
mov
and
sub
daa
addr16
adc
cwtl
push
push
add
xchg
cli
or
sbb
rolb
mov
pop
je
cwtl
aad
jae
push
fnstenv
out
bound
xor
jo
cmp
dec
mov
push
mov
aad
jp
insb
jmp
inc
push
scas
jmp
mov
daa
imul
es
ljmp
icebp
insl
aam
cmp
xchg
movsb
or
in
rclb
nop
test
mov
mov
scas
xor
jnp
push
clc
ss
ffreep
xchg
mov
insb
cmp
icebp
test
inc
icebp
dec
imul
mov
ja,pn
pop
and
and
enter
pop
adc
call
adc
out
mov
inc
sub
dec
adc
jno
ret
ret
loope
scas
push
adc
ret
leave
cmp
outsb
xchg
insl
and
xor
lahf
aaa
pop
int3
stc
sub
and
or
pop
test
outsl
in
jg
and
in
push
mov
inc
insl
out
dec
scas
imul
jnp
xchg
mov
insb
out
dec
mov
push
lods
call
stos
loop
sbbb
mov
push
ljmp
or
outsb
mov
scas
dec
push
jle
jp
jae
aas
sub
das
sbb
adc
dec
jle
cmp
hlt
jmp
adc
icebp
xor
or
mov
ret
loop
rcrb
jmp
test
cld
mov
add
jb
shrb
or
or
mov
lock
mov
lods
dec
sub
xchg
xchg
out
sti
mov
into
or
popa
ja
outsb
push
loope
pop
jno
aaa
int
bound
out
sub
out
xchg
in
into
mov
imul
sub
loopne
xchg
mov
imul
out
in
mov
repz
jnp
sbb
insb
insl
test
in
jmp
mov
inc
ss
test
out
rcl
popa
pop
loop
out
hlt
lock
jg
emms
mov
out
mov
insb
lahf
xchg
pushf
fildl
movsb
pop
cmp
mov
dec
mov
push
mov
inc
jg
and
into
pop
xorb
mov
loopne
jmp
sub
mov
xchg
movsb
push
shll
outsb
int3
jae
push
xlat
and
sub
out
dec
addl
push
out
int3
xchg
in
fildl
push
xchg
in
mov
jle
dec
lock
ss
pop
clc
add
test
sub
adcb
lcall
loop
call
js
test
lods
or
and
outsl
pushf
add
mov
cmpl
jno
jp
adcb
iret
frstor
sub
jno
and
addr16
insb
jp
lods
das
ja
add
push
or
hlt
stc
mov
cwtl
inc
jns
scas
mov
mov
insb
arpl
add
cld
push
push
and
fildll
lea
popf
cwtl
lods
insb
fidivrs
fbstp
out
or
aas
fiaddl
jbe
or
sarl
mov
loope
ja
movsb
push
ds
shlb
inc
int
sub
scas
movsb
out
adc
push
xchg
into
and
xor
test
pop
jbe
icebp
jg
jmp
loopne
inc
ss
jmp
nop
push
jecxz
inc
imul
stc
or
xchg
fwait
dec
getsec
fwait
shrl
ljmp
push
inc
or
inc
nop
xchg
or
stos
ds
jmp
xor
inc
add
stos
iret
daa
mov
push
push
sarb
out
xchg
cmpsb
mov
mov
cltd
xor
adc
out
sarl
sub
insl
arpl
stos
shrb
fcmovb
imul
add
fmull
movsb
mov
loop
xchg
xor
push
pusha
mov
push
call
jae
cld
sti
jbe
cmp
scas
cmp
push
push
or
xor
fistps
mov
mov
lods
add
popa
mov
xchg
je
mov
push
ret
ljmp
popa
insl
add
xchg
es
push
pop
outsb
pushw
xor
mov
sub
in
jle
dec
cmpsb
data16
jge
jae
dec
std
mov
mov
int3
movsb
test
jmp
enter
push
sbb
outsb
jns
out
ja
add
add
jle
sbb
loop
mov
pop
jecxz
add
mov
aaa
int3
fs
daa
sbb
call
mov
jae
in
arpl
out
stos
xor
cmp
lds
pop
in
xchg
loop
scas
pusha
adc
adc
and
aad
out
xchg
das
imul
imul
out
inc
cmp
mov
lds
in
insl
push
in
xchg
push
dec
stos
bound
mov
mov
jne
mov
mov
iret
ret
popf
ljmp
sub
jne
mov
shrl
sub
dec
add
daa
add
push
fadd
loope
sub
dec
dec
jmp
jmp
pop
in
mov
pop
out
ja
mov
jo
mov
dec
push
cmp
imul
vphaddbw
aad
jno
xchg
or
aam
stos
push
add
mov
adc
outsb
push
cmpl
loop
stos
lret
mov
and
out
cmp
adc
mov
pusha
xor
cmp
ds
xchg
addb
das
in
xchg
iret
in
setg
push
cld
icebp
sbb
mov
pop
adc
pusha
mov
pop
nop
mov
push
imul
andl
out
shrb
mov
scas
pop
out
pop
mov
and
push
jmp
scas
subb
fcoml
cmc
dec
xchg
imul
cmc
and
jae
out
pusha
dec
jno
or
lock
mov
jmp
jge
daa
xchg
ret
je
add
push
mov
dec
pusha
test
pop
out
sub
push
repnz
or
jmp
je
push
cmpsb
jecxz
mov
popf
nop
lods
push
data16
push
out
inc
push
add
aaa
daa
out
ficoml
nop
shlb
pushl
pop
mov
and
lock
pop
loope
popf
aas
push
add
ffreep
rclb
sbb
and
loop
cmp
mov
nop
push
sti
pop
sbb
xor
aaa
pop
dec
push
pop
jo
sub
addb
lods
mov
aaa
outsb
push
sub
inc
sahf
call
mov
in
lret
mov
ret
inc
sbb
push
shl
fdivr
mov
inc
iret
pop
mov
jp
daa
repz
lret
nop
icebp
cmp
inc
adcl
xor
addr16
sbb
loop
inc
into
daa
jecxz
dec
dec
xor
dec
stos
xor
jl
mov
in
std
repnz
daa
js
sub
jmp
add
loop
xor
or
gs
js
mov
and
int
sbb
fbld
lods
loopne
jne
dec
movsb
repnz
mov
hlt
pop
stos
add
subl
and
mov
sub
aam
aas
dec
xchg
xchg
rcrb
sub
add
sub
dec
xchg
in
or
push
mov
scas
jae
sub
mov
jecxz
popf
repnz
adc
lods
scas
in
das
cmpl
inc
jno
addl
adc
add
add
adc
sub
or
icebp
sahf
pop
std
iret
pop
xchg
pop
cli
push
lds
adc
fildll
in
add
lahf
and
lahf
mull
in
pop
popf
xchg
loop
mov
call
sub
dec
aaa
test
les
shlb
test
rolb
insb
lret
les
dec
test
popf
out
and
fs
jle
adc
mov
xchg
push
sbbb
out
dec
dec
mulb
jne
pop
mov
mov
inc
inc
mov
mov
test
pop
fs
fs
lods
pop
lods
dec
icebp
daa
cmovl
addb
mov
mov
stos
nop
mov
xchg
icebp
xchg
movsb
mov
insl
xchg
and
aam
lods
mov
call
movsb
cli
jmp
pop
mov
sbb
xchg
push
mov
cs
out
xchg
cmpsb
in
repnz
ds
push
mov
outsl
mov
decb
mov
nop
xchg
mov
sbb
imul
mov
das
or
testb
nop
dec
test
popa
adc
mov
inc
xchg
push
xchg
movsl
dec
xchg
pop
movsl
push
into
adcl
movsl
cmp
push
jle
cli
pop
lods
xchg
and
xchg
jnp
insl
cwtl
xchg
loop
jl
pop
outsl
outsl
call
sub
cmp
jb
imul
lea
lods
or
imul
mov
dec
or
pop
jmp
orl
sub
xchg
mov
mov
inc
cli
push
pusha
iret
jbe
out
mov
inc
dec
or
add
and
insb
push
jl
sub
out
ljmp
mov
dec
loop
push
cmpsl
pop
out
popa
ds
pop
daa
jo
dec
push
pop
cltd
vpshaw
js
dec
pop
dec
xchg
xor
push
xchg
aaa
push
adcb
cmc
mov
mov
maskmovq
notl
inc
nop
andb
rorl
xlat
movsl
pusha
xchg
dec
lahf
mov
mov
push
cmp
or
push
jo
jae
dec
fdivs
orl
jns
add
push
aaa
out
mov
je
sbb
jmp
sub
scas
or
pop
add
mov
pop
mov
xor
sub
jnp
mov
outsl
nop
mov
jg
mov
out
xchg
mov
das
push
push
popl
add
out
int
insb
repnz
or
shrl
pop
mov
xor
mov
testb
call
cld
push
subb
lahf
inc
fsubl
insb
mov
lock
jb
filds
scas
insl
mov
xor
cwtl
cmc
dec
xchg
shl
lods
mov
enter
insb
push
mov
push
dec
sub
jbe
pop
mov
out
in
insl
les
clc
jle
jg
adc
dec
mov
test
pop
or
push
cs
andl
push
pop
lcall
sub
jo
out
rol
sbb
bound
sub
outsl
xchg
enter
xchg
push
jne
jmp
mov
jmp
dec
mov
push
call
ds
jle
sti
out
jbe
rcl
xor
int3
scas
roll
les
out
out
or
outsl
aad
pushf
ja
out
and
push
jle
dec
nop
jecxz
lods
dec
test
outsb
outsb
mov
insl
cli
cli
fmuls
xchg
pop
pushf
pop
repnz
clc
call
pop
mov
dec
sub
lods
ja
push
lock
or
mov
ss
adc
add
ja
pop
mov
rolb
mov
mov
and
loop
adc
cld
das
add
cwtd
lds
out
pop
sbb
sahf
or
test
push
movsl
inc
dec
test
leave
mov
cmovns
and
jge
sbb
mov
push
xchg
jae
popa
popw
sub
sahf
shlb
push
cmp
scas
sub
shlb
fmuls
jl
mov
outsb
movsl
xchg
adc
mov
sub
mov
push
add
out
mov
push
sub
cwtl
push
stos
mov
jae
mov
ljmp
rol
decb
mov
fsubrs
aam
push
cmova
pop
mov
xor
imul
add
test
loope
add
addb
mov
int3
lret
and
nop
mov
int3
push
hlt
mov
shlb
orb
adc
jmp
and
push
dec
les
push
addr16
call
bound
dec
xchg
and
test
nop
dec
cmpsl
push
outsl
mov
out
shrl
jg
nop
movsl
rcr
sti
adc
dec
out
jle
cmp
mov
out
loopne
daa
push
outsl
fidivrl
dec
sahf
jb
leave
sub
pop
lcall
insb
push
push
sbb
mov
ret
dec
push
addb
inc
or
dec
repnz
outsl
pop
insb
sbb
iret
movsl
out
shl
icebp
xchg
xchg
or
push
jmp
mov
shll
mov
out
pop
insl
dec
sub
dec
in
das
inc
inc
mov
aad
fbld
icebp
movsl
adc
shrb
adcl
jge
mov
and
aad
out
shl
sbb
out
mov
out
cli
push
mov
xor
or
adc
push
jae
push
mov
enter
imul
xchg
push
fs
push
loop
sti
into
lods
xchg
sbb
cli
repnz
in
pop
ret
inc
repnz
jmp
lldt
sub
pop
repnz
jno
loop
outsl
jns
call
xor
outsl
cmpsl
ljmp
pop
inc
xchg
mov
int
ret
pop
inc
push
mov
pop
sbb
loop
scas
inc
and
inc
jecxz
in
movsb
jnp
test
in
jg
mov
les
add
arpl
cmp
enter
shrb
inc
popf
in
xor
inc
in
inc
mov
popa
inc
ret
movsb
add
jecxz
jmp
bound
loop
jecxz
mov
rcrl
imul
outsl
adc
pop
push
mov
test
xor
cmpsb
aad
jns
enter
inc
mov
inc
adc
aas
insl
jg
outsb
cmp
rcll
mov
mov
push
outsb
xchg
je
add
mov
sub
sbbl
test
outsl
insl
xchg
xlat
orb
add
outsl
das
push
outsl
imul
lods
xor
movsl
pusha
sub
scas
inc
xchg
cmp
cmp
daa
dec
das
push
xor
sub
cli
test
out
xor
addr16
paddd
sahf
push
outsl
mov
inc
lahf
insl
sub
push
ret
ret
push
popf
rorb
popl
test
pop
out
outsl
cld
dec
outsl
push
push
push
inc
imul
out
dec
mov
and
andb
xor
rclb
sbb
loop
fdivrs
or
aam
gs
lcall
push
std
rcrb
mov
imul
inc
inc
lods
jmp
daa
mov
dec
jnp
loop
std
dec
push
lods
imul
push
adc
shrl
ret
mov
mov
jge
push
mov
int3
movsb
mov
roll
xor
mov
decb
dec
xor
adc
outsl
adc
xchg
jno
in
cmp
dec
in
push
inc
lock
jno
ja
push
insl
lock
push
ss
mov
scas
inc
fstps
cld
jo
es
paddq
push
mov
or
in
icebp
push
add
push
jne
push
bound
mov
call
jae
fildll
rclb
adc
mov
in
outsb
mov
mov
sti
or
pusha
mov
scas
push
stos
push
xchg
adc
sub
sti
cmpsl
call
ret
lock
sub
insl
cmpsb
out
cmp
movsb
mov
and
and
ja
cmpsl
xchg
std
sahf
add
addr16
mov
dec
dec
scas
arpl
mov
add
imul
mov
cmpsl
jae
and
xor
mov
dec
add
fsubr
rcr
pop
inc
mov
xorl
mov
cmp
popa
dec
out
fildl
fadds
mov
push
jns
jg
pop
out
jle
mov
sbb
jle
sbb
cmp
sub
mov
lods
xchg
and
lret
data16
xchg
ret
push
push
mov
or
sbb
clc
insb
push
dec
xor
lea
mov
je
jle
sarb
mov
fstl
insl
mov
adc
lock
rep
scas
out
dec
insb
test
in
push
ljmp
push
pop
mov
mov
xor
scas
pop
shl
cmp
or
stos
xor
notl
iret
jo
mov
and
push
cli
xchg
bound
xchg
add
jb
insl
mov
push
adc
insl
mov
jno
outsb
fsubl
rcrl
mov
cmpsl
into
dec
insl
ret
jb
or
lock
inc
in
xchg
add
push
inc
push
cmp
cmpsb
data16
pusha
mov
dec
mov
outsb
or
add
or
je
leave
into
xor
jb
push
cmpsb
mov
decb
mov
jne
outsb
decb
sub
jbe
push
inc
cmp
push
add
aas
scas
mov
ljmp
out
stos
add
sub
shl
rorb
pop
mov
out
stos
and
or
sbb
mov
jne
push
ja
imul
test
adc
adc
lods
add
test
cs
pop
pop
pop
stc
testb
mov
in
and
dec
rcrl
mov
aam
scas
xchg
pop
and
stos
loopne
jmp
gs
mov
fdivrs
sar
scas
sbb
push
js
mov
outsb
pop
arpl
jg
rcrb
adc
mov
lock
and
mov
lock
dec
xor
push
mov
iret
pop
push
stos
jae
ljmp
push
test
mov
movsl
incb
jns
mov
sub
icebp
dec
test
push
inc
push
jg
sub
add
rorb
and
lock
repz
push
jnp
icebp
and
and
in
fsts
jmp
inc
in
mov
dec
movsl
mov
push
outsb
outsb
lods
and
popa
mov
shlb
lret
scas
cmp
fidivs
movsl
test
pop
das
cmp
cs
lahf
data16
lahf
xlat
jno
movsb
mov
aaa
pop
xchg
cwtl
jae
not
xor
push
sbb
outsb
push
add
cmp
invd
lahf
out
ss
dec
call
jle
insb
or
pop
sbb
aas
xchg
iret
pop
aaa
pop
insl
inc
xchg
test
xchg
ret
mov
sbb
jge
pop
out
xorb
push
loopne
out
shrl
xor
push
das
mov
scas
into
push
xor
cld
scas
mov
jge
xchg
out
push
pop
in
bound
arpl
mov
ljmp
fdivs
push
pop
test
dec
xchg
int
inc
mov
jae
pop
or
lahf
mov
in
inc
pop
icebp
outsl
dec
ja
inc
pop
xor
dec
out
add
popf
pop
mov
jae
or
ret
fcmovne
lahf
std
mov
fstl
prefetcht1
cmp
adc
mov
nop
mov
ret
and
fiadds
aad
sahf
jb
outsb
outsl
mov
in
je
out
pop
sbb
dec
or
in
xor
ss
out
jnp
mov
scas
jb
in
rol
iret
addr16
and
jae
lock
xchg
push
push
adc
bound
jecxz
in
mov
stos
addr16
and
push
in
cld
std
dec
mov
inc
mov
mov
and
nop
xchg
in
insl
dec
add
and
push
dec
push
dec
push
cmp
jg
jle
jp
push
push
mov
and
push
lea
push
pop
push
sub
aad
sar
sbb
pop
mov
jmp
pop
hlt
sarb
ret
adc
mov
mov
ds
rcl
push
gs
inc
sub
in
cld
push
call
pushl
test
imul
enter
jnp
push
sarl
incb
xchg
fiadds
clc
xor
lods
enter
xchg
xor
jbe
insb
aaa
enter
mov
clc
adc
pop
insb
ret
add
push
and
pushf
in
push
dec
or
cltd
out
push
ljmp
cwtl
lock
fisubrs
pusha
loopne
dec
jp
push
testb
addb
movb
cmpsb
dec
das
shrl
mov
inc
inc
ljmp
pop
outsb
rol
cs
lret
out
imul
test
mov
dec
in
xchg
sbb
sbbl
lods
dec
ret
pop
add
insb
and
jmp
arpl
cld
in
cmpsl
mov
add
scas
add
addr16
les
inc
in
xchg
movsb
insb
insb
call
movsl
dec
sbb
add
jg
outsl
fidivl
inc
add
inc
push
and
loopne
mov
mov
jno
fld
mov
ret
mov
adc
insb
sar
cmp
in
ja
jo
in
mov
mov
mov
push
outsb
lcall
and
push
pop
mov
out
or
jno
pop
and
xlat
insl
adc
xor
jne
mov
bound
jp
add
xabort
cmp
out
jge
sbb
inc
in
xchg
scas
negl
jnp
push
mov
push
cltd
dec
decb
lods
mov
into
mov
mov
outsb
jmp
mov
pop
int
lods
jle
and
pop
push
adc
pop
push
or
insb
dec
dec
fwait
xchg
add
or
mov
test
pop
jmp
outsb
adc
es
insb
mov
aad
mov
call
pop
mov
iret
outsb
negl
hlt
stos
push
lods
dec
addr16
fisubrl
dec
jae
push
push
mov
dec
mov
add
jns
push
adc
dec
paddusw
xlat
aas
nop
xor
scas
mov
cld
add
imul
cltd
rclb
jb
mov
inc
subb
cs
cmc
inc
add
push
sub
pop
xchg
lahf
dec
aaa
shrl
dec
scas
mov
add
xor
nop
mov
push
xor
and
ficoms
dec
ret
insl
fucomip
xchg
fsubs
insl
stc
sbb
cmpsb
pop
movsb
or
pop
pop
hlt
mov
es
insl
je
outsl
mov
and
enter
sarb
jae
imul
nop
cmpsb
or
div
into
stos
ljmp
in
pop
fucomp
idiv
in
lret
xchg
das
imul
dec
jne
addr16
int
cmc
push
jmp
inc
out
int
stos
stos
pop
jp
mov
jl
fcomip
adc
aaa
movsl
mov
or
imul
lods
leave
loopne
sbb
je
in
iret
rolb
call
mov
bound
mov
push
into
lods
out
stos
lods
or
imul
pop
test
out
jecxz
nop
mov
sub
lret
inc
push
dec
insl
dec
movsl
push
jae
loopne
ret
into
imul
or
add
dec
scas
rcrl
add
stos
in
ret
movsb
loopne
hlt
add
adc
mov
rorl
mov
pop
jns
and
es
aad
add
xor
mov
mov
jge
sbb
mov
hlt
int
aad
mov
mov
add
outsb
dec
cmp
sub
or
sub
and
dec
jae
xchg
xor
add
push
pop
ljmp
or
imul
je
data16
in
in
inc
test
sub
xor
aaa
adc
or
ret
test
inc
and
ret
adc
into
xor
std
ret
bound
loop
int3
add
outsb
sub
mov
insb
call
push
jb
mov
rcrl
insb
jmp
mov
in
jae
mov
in
pop
decb
mov
imul
imul
scas
lods
imul
push
jno
ja
cwtl
push
and
sti
popf
loopne
cmc
mov
into
mov
std
inc
jle,pn
pop
jno
jge
push
push
cmp
dec
les
movsl
pusha
shl
testb
lods
push
in
ret
call
lods
mov
mov
xchg
iret
lods
in
pop
cmp
lods
loopne
push
sbb
sub
idivb
shll
or
loop
fisubrs
push
div
fsubr
xchg
sub
mull
cmp
xor
das
mov
pop
adc
push
enter
or
xor
out
dec
cmp
sbb
test
movsb
outsl
test
mov
out
ret
pmulhuw
or
push
or
jb
pmulhuw
popa
ja
enter
cwtl
shr
sub
aas
loop
pop
xchg
xchg
in
loope
out
ror
jg
mov
call
pop
call
mov
jg
pop
in
or
ret
cmp
fsts
test
insb
fisubl
sub
call
mov
imul
lods
into
pop
shrb
cmpsb
into
pop
es
jno
insb
ds
out
imul
sbb
test
or
dec
data16
xchg
mov
xor
and
jbe
loope
lgs
and
enter
cmp
pop
sbb
iret
mov
in
jecxz
dec
mov
iret
push
ficompl
dec
mov
lds
imull
and
iret
bound
push
mov
push
jae
or
cwtl
dec
push
in
nop
xchg
pusha
imul
cmp
imul
leave
ljmp
out
mov
sbb
lcall
pop
mov
jb
pop
iret
fwait
xor
jp
cmp
mov
cmp
xor
dec
jp
sbb
or
cs
mov
sub
and
xor
aad
dec
into
push
sbb
lods
dec
xchg
jmp
mov
pop
jle
insb
mov
pushf
into
test
mov
int3
mov
pop
xchg
push
jg
pop
jne
adc
pop
sub
testb
mov
jnp
ffreep
out
xor
push
ss
mov
js
cmpsl
lock
jno
rcrb
push
jp
push
jge
scas
call
outsb
mov
movsb
lock
jb
jne
in
cmpsb
mov
mov
jg
fsubs
inc
pop
or
shr
outsl
test
dec
jmp
scas
cmp
fisubrl
jle
jl
scas
outsl
std
dec
jnp
mov
jg
lcall
daa
add
out
loope
and
iret
das
xor
jbe
sub
dec
out
cli
xor
in
in
imul
pop
dec
movsl
inc
cmp
addr16
insb
sti
scas
outsl
shll
fldenv
cwtl
ud0
test
je
nop
insl
xor
mov
call
lahf
std
aam
cmp
and
in
mov
addl
pop
or
mov
dec
lea
add
ja
mov
dec
inc
or
and
jge
test
daa
cmp
ds
push
addr16
jle
lea
cs
test
hlt
orl
dec
loopne
sahf
call
punpckhwd
dec
popl
jne
push
or
insb
loope
pop
pop
jg
popl
outsb
lahf
jle
cld
jle
incb
jnp
out
push
cwtl
lea
push
sti
and
push
lods
fimuls
add
dec
or
pop
sub
mov
xor
addl
les
test
aam
or
jge
insl
mov
sarb
sarb
jge
jecxz
pushf
in
pop
mov
xchg
and
nop
ljmp
gs
lods
std
sbb
fidivl
mov
sub
xchg
out
loop
xchg
out
lret
push
mov
mov
loopne
test
sub
and
xchg
addr16
jg
mov
repnz
decl
pop
mov
in
movsb
into
mov
mov
out
scas
jo
mov
sub
imul
mov
and
push
inc
cld
dec
in
mov
adc
cmpsb
fcompl
dec
lock
cltd
dec
dec
lahf
mov
xchg
nop
in
xlat
outsb
cmp
mov
jmp
mov
xchg
or
jp
cmp
jbe
fcmovb
idivb
jmp
dec
mov
push
mov
jl
jmp
add
lock
addr16
dec
mov
stos
fnsave
enter
push
mov
sbb
adc
das
pop
cli
push
inc
jns
lock
xchg
movzbl
lods
daa
push
test
stos
jle
mov
lea
mov
pop
mov
xchg
dec
in
or
cmp
cmpb
add
lahf
imull
push
dec
call
dec
mov
or
inc
loope
daa
pop
dec
out
mov
lcall
push
xor
int3
outsb
push
sbb
ss
push
push
lret
sub
pop
add
push
cmc
mov
add
adc
adc
pop
sahf
mov
mov
xchg
pop
pushf
nop
jl
cmpsb
movsl
jle
repnz
mov
test
dec
mov
push
cmc
lock
mov
and
inc
jecxz
pop
mov
addr16
pop
and
es
lods
jecxz
push
scas
push
fisttps
mov
cmpsl
aam
ja
insl
push
or
stos
loopne
rclb
call
ret
fldl
popa
rol
cmpsl
mov
inc
jecxz
push
stos
jb
loopne
loopne
ret
mov
inc
jae
das
sub
testl
test
scas
and
mov
adc
adc
lahf
cmpl
outsb
mov
sahf
stos
jae
cmpsl
cli
dec
xchg
jmp
mov
mov
repz
pop
insb
in
cmc
shl
adc
or
pushf
mov
jno
pop
cs
xchg
sub
xor
das
sub
out
mov
push
dec
sub
lods
cmpsb
push
xchg
ret
loope
out
daa
in
rcrl
out
jns
dec
call
cmc
sbb
push
mov
dec
jno
das
test
adc
mov
int
cld
das
imul
mov
cli
bound
arpl
xchg
aad
cltd
enter
out
pop
mov
fs
dec
pop
mov
into
mov
and
xchg
mov
stc
push
aas
jae
int3
jge
in
mov
lret
inc
cli
in
fildll
sub
push
mov
xor
outsl
str
mul
std
into
pop
stos
mov
cmpsl
pop
mov
shrl
add
xor
hlt
inc
hlt
in
mov
shrb
mov
push
in
dec
dec
loope
dec
mov
in
popl
mov
fisubs
or
shll
lahf
jns
dec
lahf
mov
cmpsl
addr16
mov
mov
stos
pop
js
fwait
nop
adc
lahf
mov
sbb
add
push
sbb
jbe
jl
xchg
sar
mov
xchg
int3
inc
mov
add
mov
pop
dec
xchg
cmp
lods
out
pop
cltd
repz
cmp
aas
test
in
aaa
add
fiadds
mov
cmp
dec
and
push
insb
or
call
mov
inc
imul
xor
sub
jmp
ja
xchg
outsl
and
dec
addr16
cli
jb
sub
or
sbb
scas
insl
popa
fnstsw
push
push
loopne
into
jae
mov
sarb
and
imul
lahf
xchg
xchg
jno
inc
cmpsb
jnp
push
mov
or
push
xor
je
jbe
scas
and
or
stos
adc
push
jb
imul
mov
in
stos
mov
out
ret
xor
mov
jmp
aas
cwtl
sahf
movsl
sub
mov
das
orl
daa
daa
lock
inc
mov
dec
xor
fsubp
jb
ret
mov
in
loope
and
ja
jle
dec
or
jnp
push
aad
jp
mov
loop
cld
popf
iret
or
mov
jbe
push
rol
mov
int
fisubl
scas
mov
push
jno
roll
daa
sub
enter
dec
mov
xor
fs
cmp
nop
xchg
test
push
psraw
int
mov
insl
xchg
cmpsb
test
loope
outsb
rclb
enter
outsl
pop
jo
mov
and
aaa
push
push
push
jmp
cld
repz
out
mov
xchg
jb
xchg
add
lock
and
or
decl
mov
pop
shll
ret
sub
jle
gs
out
adc
sub
sub
in
jp
mov
pop
imul
cmpsb
dec
jge
movsl
inc
jae
outsb
lds
loope
fimull
out
repz
xlat
sub
loope
loopne
jae
movsl
push
push
aaa
jno
jl
enter
jge
add
scas
dec
pop
jae
sarb
out
sahf
adc
jle
push
jnp
imul
jg
loope
jno
popa
dec
decl
icebp
aas
push
rcl
pop
mov
loopne
scas
mov
imul
adc
push
pusha
clc
mov
fwait
inc
or
pop
pop
mov
add
sbb
inc
inc
stos
out
insl
ja
ror
insl
dec
cltd
jg
xorb
sub
mov
xchg
sahf
call
bound
mov
mov
cmp
rcr
and
lock
cmpl
pop
cltd
lds
mov
js
clc
lcall
mov
pushf
test
jb
cmp
in
std
fld
popa
cmp
insb
call
pushfw
scas
add
nop
iret
mov
imul
dec
dec
pop
ror
pushf
cs
jbe
xchg
gs
in
scas
lods
ljmp
movsl
lret
aaa
dec
sub
daa
jmp
les
mov
movsl
addb
push
test
dec
lea
mov
test
pop
lods
add
adc
imul
and
dec
push
fucomip
sub
cltd
mov
sbbb
ja
xchg
in
imul
push
orb
test
scas
xchg
outsb
mov
punpcklbw
sub
pop
adc
lock
cmpsb
push
and
push
sbb
xorb
mov
add
xlat
popa
or
jmp
mov
scas
sahf
jbe
faddp
sub
push
outsb
int
sbb
aad
in
scas
sbb
loope
rol
inc
mov
mov
outsb
add
push
fsubs
xor
ds
test
adc
clc
sub
add
jns
inc
xchg
out
pop
outsl
pop
imull
jne
cs
mov
clc
test
lock
sbb
mov
rcl
lret
sub
shlb
and
sti
xchg
mov
subl
cmp
in
daa
pop
ss
pop
imul
jge
int3
mov
cmp
orl
push
mov
fdiv
push
popa
pop
mov
mov
outsl
jno
jae
call
cmp
jp
shlb
aaa
fiadds
jae
inc
dec
test
xchg
jmp
outsl
xor
mov
adc
jae
in
add
push
pop
adc
cmpsl
sub
imul
xchg
jmp
fbld
mov
adc
jae
sbb
lret
mov
push
insl
and
int
cld
aam
mov
out
loopw
insl
or
ficomps
loopne
insl
enter
imul
fwait
inc
shrb
aam
sbb
cmp
xorb
insb
add
lods
xor
mov
shl
inc
add
mov
dec
gs
scas
inc
aad
out
mov
clc
sbb
adc
pop
jb
fstl
mov
add
mov
stos
xorb
mov
inc
lahf
aaa
sub
call
pop
push
sub
fsqrt
repz
lods
imulb
lret
cmp
orb
cmp
mov
push
inc
mov
jb
mov
or
mov
jp
sbb
aad
mov
insb
push
and
lods
fnstsw
cmpsb
cmc
shrl
mov
or
xor
loope
es
idivb
icebp
xor
push
scas
in
add
enter
cmp
imul
add
and
in
jle
lods
mov
pop
pop
pop
leave
or
ja
lret
fistl
insl
xchg
adcb
mov
mov
sub
popa
flds
sbb
jns
mov
cmp
in
sub
shlb
lock
in
xchg
sbb
mov
jnp
insl
sub
pop
insb
jns
sti
xchg
lods
mov
mov
iret
add
loop
insb
insb
pop
arpl
es
and
pusha
int3
clc
lock
xor
jp
mov
xchg
clc
dec
mov
mov
push
mov
call
in
insl
outsl
xchg
andl
rolb
rolb
cmpsb
scas
mov
shrb
nop
mov
adc
inc
dec
and
pusha
pop
mov
nop
lods
xor
negb
outsb
inc
cld
out
fstpl
xor
pusha
push
mov
inc
xchg
push
loopne
mov
adc
xchg
sub
xchg
dec
insl
outsl
orb
inc
jmp
lock
xchg
lret
cld
lods
jle
lods
loope
fdivl
aad
lods
xor
in
ret
test
or
gs
sti
xchg
in
jg
iret
sbb
arpl
fldl
inc
nop
outsl
out
out
les
add
push
test
dec
dec
clc
or
das
addb
test
loop
or
jnp
pusha
shlb
sub
push
arpl
jle
sub
out
cld
into
add
test
and
dec
mov
gs
jle
mov
iret
mov
lods
mov
jg
ds
and
pop
dec
and
jecxz
mov
outsb
lcall
mov
movsb
mov
repnz
jnp
je
ja
adc
jg
nop
add
addl
daa
imul
inc
bound
addr16
mov
push
pushf
xchg
pop
jbe
ds
and
mov
push
jp
int
xchg
test
mov
negb
cs
test
mov
rcl
dec
cmp
add
adc
ret
or
insb
mov
fisubs
push
aam
mov
inc
out
std
dec
mov
dec
xchg
in
scas
outsl
scas
addr16
ljmp
ficompl
icebp
lock
out
mov
call
dec
loop
cmc
stos
scas
sti
pop
xor
push
pop
cmpsb
outsl
xor
testb
sub
cs
iret
outsl
in
iret
and
push
jle
sti
jle
rcrb
iret
in
enter
mov
dec
mov
mov
xor
jae
xchg
sbb
jne
testb
jecxz
es
scas
pop
mov
scas
jbe
sub
int
shrb
mov
test
mov
fisttpll
shr
iret
stos
int
std
out
mov
inc
into
mov
lock
mov
dec
pop
jl
push
and
rcr
aaa
mov
inc
test
and
bound
inc
ret
mulb
lods
out
icebp
popa
aas
call
ja
dec
pushf
fsubs
scas
or
cbtw
rorb
inc
call
cmpsb
out
cmp
data16
jnp
sbb
sub
jbe
maxps
jmp
nop
jg
maxps
jne
push
add
jae
in
sti
cs
mov
in
outsb
call
aaa
jbe
data16
mull
dec
std
xchg
push
out
fildll
dec
pop
dec
jno
icebp
or
dec
or
daa
scas
fistps
adc
jno
mov
outsl
and
mov
in
outsb
mov
movsb
out
mov
in
call
scas
dec
cmp
fnsave
jg
in
js
orb
dec
jle
mov
jb
dec
push
into
bound
out
not
dec
jb
push
jle
lock
fwait
mov
pop
jl
xchg
int
jmp
aaa
xor
jns
push
imul
popa
jns
ja
rep
insb
daa
lock
jmp
and
stos
add
sbb
fdivp
jae
add
arpl
cmp
dec
jnp
icebp
mov
pop
inc
out
outsl
outsl
dec
lods
dec
loope
testb
inc
inc
ss
test
mov
dec
mov
cld
les
js
fmuls
out
imul
out
scas
lods
in
loope
cld
jge
test
jbe
xchg
mov
sbb
insl
inc
sub
sub
dec
movsb
jg
orb
inc
and
jle
inc
jns
jno
mov
and
outsl
ljmp
mov
adcb
xor
shll
repz
or
push
jge
push
mov
ja
movsl
into
test
out
insl
rcrl
sarb
mov
outsb
mov
fs
fisubs
mov
mov
test
movsl
fistl
fisubrs
cli
nop
cltd
das
dec
ret
add
dec
cli
scas
add
pop
into
ja
ss
sub
cmpsb
scas
out
iret
imul
sahf
popa
pushl
stc
mov
xchg
add
outsb
jno
mov
add
das
cli
inc
outsl
jno
xchg
inc
dec
aaa
inc
dec
insb
lds
test
movsb
outsb
outsb
in
out
enter
lods
push
insl
imul
outsl
loope
pop
inc
push
mov
mov
pop
cmpsb
clc
dec
or
clc
jno
cli
sub
std
dec
push
lods
pop
mov
test
inc
dec
inc
into
cltd
lahf
add
push
jae
jle
out
ljmp
mov
js
lock
shlb
mov
and
mov
imul
cld
fisubrs
adc
es
mov
add
outsl
scas
mov
jecxz
loopne
jnp
ss
dec
nop
pop
adc
or
into
icebp
arpl
scas
mov
les
and
push
nop
add
mov
add
scas
sbb
inc
add
add
iret
outsl
imul
cmpsb
movsb
cmpl
ret
sub
dec
jp
scas
lock
bound
daa
out
es
xor
aad
in
lret
fstpt
fsts
dec
shr
mov
popf
jl
enter
int3
out
decb
cs
bound
or
jl
dec
lods
xchg
addr16
pop
add
outsb
and
rcll
int
out
scas
mov
jge
pop
repnz
ja
sub
mov
bound
cmpsl
shlb
dec
cmp
mov
mull
push
outsl
iret
or
adcl
xchg
in
or
out
je
ret
loope
pusha
push
jge
push
xchg
test
and
push
ja
enter
fs
jae
pop
lods
fdivs
push
pop
stc
pop
xor
or
mov
out
jnp
jmp
insl
jg
sub
stc
lock
sti
addr16
dec
push
call
movsb
jecxz
sbb
or
scas
cmp
into
out
outsb
mov
jecxz
cli
add
popa
test
jns
cmpsl
add
popa
hlt
aaa
dec
jbe
dec
cmpsl
subl
test
loop
inc
daa
bound
ja
mov
mov
lahf
sub
cld
lods
call
jecxz
das
call
mov
mov
mov
xchg
sahf
lods
iret
mov
jecxz
dec
in
push
or
cmpsb
in
push
ljmp
imul
jnp
lock
cmp
les
xlat
push
add
add
shrl
xor
clc
inc
imul
jns
clc
inc
call
outsl
adc
in
faddp
jle
mov
aad
in
push
sub
jns
mov
sti
jg
adc
imul
out
call
int3
icebp
jecxz
int
int3
dec
lahf
js
or
out
sbb
in
clc
and
out
xor
jecxz
add
mov
out
addb
push
dec
jnp
dec
addr16
in
xchg
jl
outsb
jbe
mov
aad
dec
dec
jecxz
fdivrp
inc
cli
ja
pop
push
in
sub
das
xchg
imul
dec
push
or
jg
cwtl
addr16
outsl
in
jns
gs
insb
ror
data16
mov
gs
cli
outsb
mov
jp
jb
outsb
ja
cmp
call
push
arpl
lret
xchg
nop
dec
ljmp
lock
jp
js
cmpsb
stc
pop
call
fistpl
pop
insb
fildl
cli
pop
testl
sbb
out
cmpsl
bound
jo
dec
sarl
jno
outsb
out
cmp
pop
sub
mov
lea
mov
jge
loop
outsl
aad
inc
pusha
dec
ja
jns
fcmovne
insb
xchg
pop
inc
mov
or
mov
mov
cmp
into
out
lods
add
mov
jle
fistpll
sub
ds
js
in
pop
dec
ja
jb
out
xchg
in
dec
jnp
add
in
sahf
loopne
stc
mov
jecxz
jb
pusha
fs
lret
inc
je
cld
inc
dec
insb
inc
and
testl
pop
jnp
insl
jns
sti
es
and
daa
ret
inc
mov
decb
in
outsb
xchg
add
jl
sub
jns
addr16
jns
daa
pop
mov
jge
adc
pop
mov
xchg
dec
dec
ja
enter
dec
aam
stos
dec
std
insl
and
jmp
xor
jg
hlt
push
outsb
lods
data16
jp
pop
outsl
in
fiadds
je
dec
jle
ja
pop
jg
data16
dec
sahf
data16
dec
stc
out
cmovge
aam
movsw
inc
insb
gs
xchg
xchg
jnp
insl
jbe
sub
into
cli
outsb
mov
scas
in
xor
sti
jge
insb
pop
scas
xchg
in
popa
cmc
clc
dec
bound
outsb
outsb
mov
or
mov
enter
lods
jmp
in
sub
insb
mov
inc
and
sarb
pop
in
dec
testl
xor
js
ljmp
popf
cmp
mov
std
int3
jmp
dec
jnp
fucom
xchg
cmp
call
fsin
lcall
decb
or
enter
dec
les
push
sbb
or
fisttps
mov
mov
bound
mov
sub
clc
outsl
xor
and
adc
insb
in
sbb
push
jg
outsb
dec
popf
divb
push
loope
clc
aam
popa
icebp
pushf
pop
outsl
data16
add
loope
faddl
pcmpeqb
addr16
adc
into
xchg
push
testl
int
mov
dec
clc
or
int3
outsl
out
pusha
in
insl
sbb
mov
outsl
push
push
and
add
lret
xor
movsb
push
into
mov
push
out
inc
jns
imul
jp
add
lea
sbb
hlt
js
outsl
push
in
pop
pop
or
cli
jg
cmp
cld
out
js
es
stc
enter
cld
mov
inc
fisubs
mov
jne
outsb
mov
mov
sbb
push
mov
mov
imul
in
int
dec
push
scas
and
add
fdivrs
stc
pmaxub
hlt
cltd
mov
rorb
pop
sub
movsb
jle
in
cmp
push
int3
sub
in
stc
jnp
icebp
lods
or
cmp
fistpl
push
scas
adc
jo
clc
nopl
scas
ja
sub
enter
inc
push
iret
mov
sti
loope
imul
clc
hlt
sbb
test
jns
pop
sbb
imul
les
dec
cmovl
sub
fcomip
cli
pop
outsb
xor
pusha
or
xor
lock
mov
stos
mov
dec
in
add
test
jg
lahf
jno
fimuls
cs
dec
dec
or
std
mov
out
icebp
jno
outsb
fs
xchg
jg
mov
imul
lock
out
mov
jbe
mov
hlt
xchg
andb
cmp
orl
pop
insl
aaa
sahf
test
les
adc
mov
inc
xor
cli
xorb
stos
xchg
cwtl
jmp
lcall
bound
out
pop
imul
dec
outsb
sbb
push
jg
movsb
pop
imul
adcb
push
xchg
and
insb
sbb
insb
int
xchg
mov
ja
in
loopne
xchg
test
jle
cld
mov
cmp
inc
iret
sbb
sub
pop
ljmp
xchg
fwait
mov
mov
daa
and
cld
jae
movb
mov
icebp
cmp
adc
xor
es
fiaddl
sbb
mov
ffreep
repnz
and
outsb
stc
in
jno
inc
inc
lds
test
jecxz
push
or
add
mov
sbb
fidivl
lods
dec
mov
mov
movsl
lea
dec
cmp
xor
stos
mov
bound
inc
dec
mov
xchg
and
jb
mov
dec
jle
lret
xchg
push
xlat
or
pop
aam
addr16
loopne
xor
popa
outsl
xor
mov
inc
adcl
test
out
add
call
pop
fisubrs
jg
sbb
subl
mov
inc
push
scas
and
add
mov
adc
mov
cmp
mov
cltd
jae
clc
fisttpl
outsl
sub
and
aaa
mov
dec
push
mov
mov
int3
or
lods
add
sub
outsb
fnsave
out
in
jbe
or
mov
icebp
sbb
pop
sbb
jno
xor
fists
cmp
adc
repnz
jmp
push
xchg
mov
or
decb
mov
stos
sub
sti
bound
outsb
imul
daa
fidivs
jb
into
outsb
jl
fbld
scas
push
jne
push
lcall
repnz
xchg
push
jmp
ss
data16
jg
add
imulb
cli
mov
idivl
call
addr16
aas
mov
xlat
movsb
sub
dec
out
push
test
push
add
dec
imul
gs
dec
out
loop
cld
into
insb
dec
push
xor
aam
pop
or
dec
fisubs
mov
nop
test
sub
jecxz
xchg
adc
das
pop
push
sub
push
bound
mov
int
add
scas
xor
lretw
mov
in
out
testb
outsw
cmp
lahf
repz
imul
outsl
popa
mov
jmp
xchg
adc
xor
repnz
jb
add
ljmp
push
dec
jle
les
arpl
mov
xchg
ret
add
push
pop
sti
ljmp
bound
iret
imul
pmaxsw
sbb
jmp
shlb
imul
cmp
ds
out
addr16
call
call
lds
sub
sbb
int
xor
sub
jmp
addr16
mov
jle
outsb
loopne
dec
data16
or
sbb
sbb
xchg
lret
cld
or
add
adc
rol
or
add
ljmp
outsb
data16
pop
mov
add
insb
and
scas
pop
mov
mov
movsl
int
arpl
out
xor
mov
inc
cmc
insl
sub
mov
pop
call
mov
jns
imul
pop
sbb
lea
lahf
cmp
adc
out
std
stos
xchg
add
or
inc
movsl
mov
jno
xchg
dec
push
or
ret
addr16
or
xchg
push
outsl
testb
cmpsb
sarb
sbb
test
mov
xor
lea
xchg
push
lock
pushf
cltd
adc
imul
mov
in
test
lock
jle
xchg
jl
lods
xchg
lds
sub
dec
fcoml
outsl
call
inc
out
ret
orb
test
push
jnp
jg
mov
pop
jl
fld
adc
cmpsl
xchg
in
mov
imul
out
adc
xchg
out
add
dec
inc
mov
sub
movsb
add
push
xchg
mov
push
mov
movsb
sub
lock
jb
leave
dec
movsl
sub
cwtl
jb
repnz
xchg
and
hlt
bound
add
push
test
sbb
iret
fiadds
outsl
bnd
in
ljmp
adc
outsb
sbb
fiaddl
dec
jg
push
lret
xchg
imul
pop
je
jno
jne
sbb
sahf
out
mov
jnp
scas
push
ret
int
jae
scas
lods
jmp
jns
add
icebp
mov
jg
test
stos
into
jle
add
jmp
cld
pop
mov
xor
sub
adc
sub
dec
mov
int
mov
mov
mov
push
outsl
repnz
outsl
out
sbb
mov
stc
jb
pop
std
fisubrs
jg
mov
adc
shlb
sub
add
add
sub
out
mov
stos
stos
or
clc
in
inc
out
mov
stos
in
outsb
mov
pop
dec
and
jmp
pop
adc
out
or
in
lods
aas
add
loop
scas
dec
sub
mov
xor
mov
add
add
stos
outsb
clc
imul
out
lods
lods
dec
inc
mov
test
lods
mov
outsl
cmp
outsb
xchg
je
pop
popa
das
outsl
jbe
xchg
jnp
daa
in
and
out
out
mov
dec
mov
mov
shrb
scas
outsb
mov
dec
mov
out
and
sti
outsb
enter
out
add
in
imul
push
call
mov
outsb
das
push
shlb
pusha
into
insb
outsb
mov
outsl
pop
clc
lds
mov
sarb
outsb
stos
mov
pop
or
dec
cld
push
dec
jecxz
gs
add
pop
in
xchg
mov
xchg
jnp
or
jbe
enter
out
je
xchg
out
negl
jae
inc
mov
lods
outsb
mov
mov
inc
add
sahf
inc
lods
sub
pop
das
test
dec
out
outsb
and
jle
jg
call
sub
pop
mov
mov
or
lods
in
jmp
xchg
fmull
adc
mov
push
in
outsb
dec
cmc
push
in
sbb
outsl
push
add
sar
add
cmovl
mov
call
mov
sarb
aas
out
enter
fs
arpl
out
jg
inc
into
dec
xor
mov
sub
jb
or
cmc
mov
inc
fdivl
insl
push
lock
push
loope
in
dec
enter
lods
sub
lods
fcompl
dec
outsl
pop
pop
ss
test
dec
cmp
jmp
mov
lea
mov
js
decb
mov
sbb
jg
addr16
in
lret
lret
lods
sub
sub
into
fcoms
outsb
adc
lods
mov
hlt
xlat
mov
or
push
dec
shrb
cmp
dec
test
dec
insb
outsb
fwait
jg
fisubs
sub
sbb
jle
and
sub
out
and
out
or
mov
movsb
pop
dec
dec
sub
mov
xor
mov
mov
add
outsb
leave
loopne
testl
aam
out
xor
outsb
enter
lcall
cltd
mov
lods
add
mull
lods
mov
lods
mov
lods
paddsb
cmpsl
ds
or
add
arpl
pop
sub
loopne
mov
jle
add
xchg
mov
lods
push
dec
cli
dec
dec
dec
mov
outsl
scas
pop
lods
mov
push
sahf
pop
outsb
mov
fwait
das
scas
sahf
stos
mov
popf
sub
sub
xchg
ds
dec
push
dec
or
loopne
lods
jg
call
mov
dec
mov
adc
ljmp
jb
and
lods
fwait
push
add
in
jecxz
nop
movsb
add
fs
add
dec
cmp
fsubp
pop
mov
movsb
jnp
std
mov
rol
inc
loop
pusha
outsb
arpl
adc
les
outsl
mov
xchg
out
jg
jmp
inc
ljmp
call
bound
bound
fstpl
inc
arpl
ret
cld
dec
mov
les
hlt
xchg
mov
mov
movsl
jecxz
imul
inc
bound
pushf
out
inc
xlat
jmp
push
push
test
dec
push
leave
loopne
mov
int
test
xor
or
test
xchg
scas
rolb
dec
pop
cvttps2pi
mov
xchg
dec
jg
call
into
mov
imul
or
sbb
scas
cmp
insl
jle
shlb
fsubl
cmpsl
mov
clc
repnz
push
mov
dec
inc
outsl
popa
jb
imul
test
arpl
push
leave
outsl
jb
icebp
movsb
inc
lock
jne
call
push
or
hlt
in
mov
ljmp
outsl
rorl
jge
dec
jae
mov
and
call
push
mov
clc
sti
xchg
mov
insl
adc
lret
out
ret
adc
cmpsl
cs
inc
or
mov
xor
call
out
jns
dec
iret
lea
inc
out
es
jg
dec
jno
cwtl
int
sub
push
maxps
outsl
mov
jg
out
jge
repz
jno
inc
push
nop
repz
aad
roll
jg
lds
cli
or
xchg
cmp
push
adc
clc
inc
mov
filds
inc
xor
mov
mov
inc
movsl
loop
movsb
mov
dec
sub
jno
mov
cwtl
jae
or
data16
bound
dec
mov
imul
les
xor
movsb
sbb
repnz
xor
les
cmp
icebp
out
adc
aas
adc
jmp
hlt
dec
in
cwtl
or
lods
jle
jg
add
ljmp
mov
call
sahf
add
lret
arpl
mov
jne
mov
arpl
insl
arpl
out
push
repz
out
jae
out
test
jae
jge
shlb
in
lods
add
inc
add
jnp
adc
imul
lea
loopne
or
test
mov
gs
jle
fwait
cs
pop
sbb
mov
addr16
adc
imul
pop
test
in
dec
data16
fisubrs
mov
in
imul
jg
clc
push
sub
mov
mov
cmc
cmpsb
push
dec
add
loopne
mov
push
popl
mov
test
or
jp
xchg
jp
sub
gs
adc
fs
or
inc
pop
int3
mov
inc
fisttps
push
mov
lock
cmc
outsl
stos
dec
mov
stos
imul
sub
push
scas
scas
outsb
mov
fbld
movsb
adc
add
int3
not
cmpsl
insl
cmp
aas
insb
jae
movb
dec
leave
gs
mov
or
push
cmp
daa
test
call
jno
mov
lcall
push
sbb
out
scas
dec
out
gs
dec
sbb
stos
mov
pop
inc
xchg
ja
in
adc
gs
add
gs
xchg
pop
push
mov
fiadds
mov
ss
ret
and
cld
add
inc
jg
sbb
hlt
insb
cmp
lock
rolb
inc
shr
and
and
outsb
test
xchg
push
cmc
outsb
ret
imul
loope
xchg
mov
ljmp
pop
cmpl
push
pop
mov
iret
cwtl
les
test
out
cmp
push
dec
cltd
jb
call
repnz
adc
icebp
loop
lahf
mov
xchg
test
aad
mov
xchg
jp
inc
mov
call
jp
and
jbe
lods
negl
sub
outsb
jmp
daa
enter
cs
aaa
push
sub
shll
js
enter
mov
clc
add
mov
dec
dec
icebp
mov
sub
jg
sbb
dec
insb
mov
arpl
inc
mov
or
pop
add
fists
ja
mov
repnz
movsb
jge
int
mov
jmp
daa
fstps
insl
jb
rep
xor
jno
adc
outsb
movb
pop
and
arpl
test
mov
ljmp
hlt
ret
jecxz
pop
in
shrl
in
ret
mov
in
cmp
in
das
jne
cmc
or
outsl
insb
out
mov
adc
imul
cmc
pop
mov
das
ror
mov
pop
cmc
dec
lret
iret
mov
imul
iret
mov
jmp
jg
test
icebp
lcall
out
ljmp
les
outsb
jb
test
pop
jae
adc
aaa
outsb
call
imul
hlt
cmpb
cld
insb
aaa
mov
out
or
dec
inc
icebp
fcoms
xor
pop
cwtl
mov
fmul
fsub
mov
clc
and
push
ret
inc
push
dec
xor
outsl
pop
xor
popa
andb
dec
leave
push
icebp
pop
lea
clc
push
mov
inc
sub
mov
mov
cmpsl
mov
in
dec
cmpb
mov
rolb
mov
and
repnz
mov
notl
xor
bound
fwait
xorb
lock
mov
roll
xchg
call
pop
aas
fsin
popf
xchg
adc
cltd
add
test
adc
cmpsl
outsb
jle
cld
adc
push
out
adc
fcoml
mov
push
sahf
jne
and
mov
mov
push
jmp
rcr
jae
out
int
pop
loope
inc
icebp
mov
nop
iret
mov
xchg
insl
bound
sub
pop
push
ret
sub
xor
out
pop
gs
pop
mov
dec
add
inc
and
movsb
loopne
gs
xchg
cmpsb
add
dec
xchg
rolb
int
scas
sahf
xor
mov
insl
pop
dec
sarb
cltd
fimuls
push
add
add
clc
jnp
adc
ljmp
test
sub
out
mov
push
test
sub
jb
jbe
cmpsl
test
dec
in
outsl
xchg
inc
shlb
sahf
mov
and
je
es
dec
ss
loopne
mov
outsb
dec
jg
in
inc
dec
jecxz
sub
inc
test
mov
outsl
lret
jb
cmpsl
lock
icebp
lock
imul
cli
movl
leave
jmp
mov
xor
out
dec
lods
fdivl
imul
daa
xchg
adc
in
addr16
add
inc
shr
in
mov
mov
bound
int3
xchg
or
cmp
mov
mov
adc
jae
push
mov
mov
inc
adc
mov
pop
pop
faddp
iret
inc
or
lock
shlb
js
adc
daa
jno
jp
dec
dec
rorl
dec
sti
jle
mov
xor
and
pop
xchg
mov
insb
push
insl
push
loopne
loope
lods
lock
xor
xchg
mov
push
pusha
imul
imul
scas
pop
and
mov
or
repz
lods
cmpsb
lock
call
mov
jnp
mov
loope
fidivs
push
pop
int
iret
pop
or
or
dec
dec
outsb
stc
adc
repnz
and
idivl
inc
pop
ret
mov
xorl
dec
mov
or
jno
adc
js
sbb
cmc
push
cmp
int3
mov
xchg
or
stos
jp
shlb
jg
xchg
push
push
xchg
dec
adc
sbb
ja
out
stc
jg
call
push
pop
sub
xorl
sbb
mov
pop
pop
or
outsb
xor
fsubrl
cmpsl
test
dec
rep
pop
movsw
mov
dec
out
sbb
or
ljmp
clc
arpl
ja
and
imul
xchg
mov
aaa
movsb
aam
out
out
int
push
dec
cmovbe
xchg
mov
push
jb
lods
add
push
incb
cld
popf
fdivrl
push
add
push
in
aaa
mov
dec
lods
insb
stos
lock
lret
push
push
ret
sub
jne
dec
ds
jecxz
addr16
addr16
movsb
gs
mov
mov
clc
loopne
fidivrl
ret
sbb
insl
inc
jno
push
sbb
jne
xchg
daa
in
xor
push
lahf
mov
pop
in
ret
mov
outsb
clc
lods
jns
mov
in
sti
ljmp
ja
push
loopne
out
daa
inc
dec
add
mov
mov
incb
jb
repnz
in
adcl
xchg
test
xchg
cmpsl
fucomip
lods
or
pushf
aaa
or
mov
test
jmp
pop
mov
outsl
cmp
hlt
mov
push
sti
aaa
sbb
fs
xor
and
or
add
lea
dec
fstpt
mov
jae
or
mov
sbb
nop
dec
mov
and
hlt
push
fidivl
je
int3
daa
hlt
out
fistpll
and
inc
in
add
dec
xchg
push
imull
test
ja
stos
ja
push
sbb
mov
sub
loope
dec
xchg
xor
aas
pop
cld
mov
add
aad
iret
jg
push
mov
add
add
insl
mov
aas
push
das
pop
pop
push
daa
imul
pop
shll
stos
push
sub
in
insb
inc
xor
mov
pop
lods
insl
lret
cmp
dec
popa
push
insb
and
jle
jecxz
pusha
loop
jmp
dec
push
mov
lahf
mov
out
jg
shr
jle
shr
aas
shrl
add
movsl
push
dec
dec
xor
dec
aaa
mov
fldpi
jbe
enter
repz
sub
stos
popf
imul
icebp
add
daa
inc
negb
cmpl
sahf
movsb
idivb
add
icebp
add
jae
aad
jp
repz
or
jmp
outsb
or
out
mov
mov
mov
jl
out
in
fidivrs
xor
popf
pop
int3
push
insl
xchg
call
xor
sbb
fidivrl
xor
imul
imul
and
sub
stos
fidivs
dec
fdivrl
js
jl
cli
repz
lcall
cmp
scas
mov
inc
pop
mov
jns
into
imul
loope
icebp
push
test
int3
jmp
mov
or
std
jge
or
mov
mov
mov
jmp
lock
popa
push
ret
out
call
int3
testl
cli
fnstcw
stos
idivl
shrb
imul
sbb
or
nopl
or
push
dec
enter
jb
jbe
or
or
push
or
dec
mov
dec
movsl
cmpb
loopne
shrb
jl
jge
mov
out
repz
sub
xbegin
test
inc
sti
or
jl
clc
test
ret
sub
mov
aaa
and
out
scas
mull
jae
lcall
jl
test
dec
cmp
loope
pop
outsb
hlt
sbbb
xchg
sub
xor
or
psubb
sub
pop
adc
mov
clc
cmc
dec
xor
and
pop
in
stc
inc
mov
cmp
xchg
int3
xorl
pop
lds
xchg
mov
mov
dec
fmuls
ret
jns
rolb
lods
mov
dec
mov
scas
hlt
in
out
imul
fcmovbe
imul
loopne
in
loope
int3
hlt
sub
leave
fmuls
nop
dec
jecxz
lock
push
mov
dec
or
data16
popl
mov
rorl
push
push
sarl
jl
jecxz
aas
sub
push
ret
add
dec
cmp
daa
push
mov
mov
roll
dec
mulw
jmp
or
fldt
xor
daa
dec
out
sbb
movsl
jae
in
out
pusha
mov
mov
in
loope
push
jbe
ret
jmp
jbe
and
pop
in
dec
int3
push
xchg
pop
imul
call
ret
lods
mov
jmp
into
addr16
dec
mov
push
je
ret
out
inc
push
jmp
mov
fmuls
sub
nop
scas
ret
adc
pusha
xor
jecxz
mov
test
in
imul
mov
mov
jmp
data16
outsb
push
insb
and
sbb
ret
rorb
cmpsb
xor
add
out
pop
repz
in
mov
dec
adc
mov
nop
inc
pusha
inc
jae
lods
movsl
mov
out
ret
jmp
ljmp
cld
int
pop
add
iret
ret
jmp
je
pop
sub
leave
fs
mov
in
stos
inc
out
or
xchg
lods
imul
in
es
shlb
movsl
pop
std
popl
dec
xor
xor
sbb
mov
sbb
loope
xor
fisttps
jmp
aad
sbb
push
jmp
in
addr16
lahf
rcrb
sub
push
or
in
jecxz
xor
insl
xchg
icebp
aam
fidivl
imul
jp
mov
pop
sub
outsb
pop
inc
test
cmp
call
in
mov
js
fs
cltd
cmp
or
push
test
in
dec
jae
and
sahf
data16
fildll
xor
mov
in
dec
sub
or
or
or
mov
in
jbe
mull
paddusb
daa
inc
cmp
ja
lods
in
outsl
adc
ret
repnz
push
fdivrs
cmp
and
clc
imul
movsl
int3
mov
loop
jg
xor
lret
fstp
es
lock
jae
into
jg
loop
outsb
sbb
mov
push
data16
jmp
out
lret
scas
push
xor
data16
aaa
sub
loop
mov
mov
scas
sti
imul
or
jne
cmp
inc
pop
lahf
mov
jae
pusha
ret
ret
aas
xchg
hlt
dec
mov
mov
adc
mov
push
mov
pop
and
in
fsubs
outsb
dec
hlt
insl
cmp
movsb
push
dec
and
mov
and
mov
mov
mov
mov
add
je
dec
popf
in
mov
lods
sbb
cmp
pop
testl
sub
push
or
pop
imul
mov
dec
lods
push
imul
dec
add
out
test
stos
rorb
sahf
dec
bound
hlt
mov
mov
or
and
iret
fs
sbb
outsb
lret
cmpl
es
xchg
or
sub
inc
jecxz
xchg
ljmp
bswap
cmp
push
jne
inc
popa
shlb
jb
shlb
adc
fstl
ffreep
cmpsl
mov
xor
and
ret
out
inc
test
outsl
ret
add
push
or
mov
push
test
out
push
ror
and
rorb
cmp
mov
lods
and
lcall
scas
inc
in
dec
insl
addr16
sub
test
into
arpl
mov
mov
dec
stos
mov
mov
sbb
pop
xor
and
cwtl
xchg
jg
mov
std
lret
inc
mov
jae
xor
xlat
inc
push
sbb
dec
jno
int3
js
jae
sbb
lcall
shl
mov
stos
push
push
outsl
sub
dec
push
dec
pop
mov
mov
and
sub
in
jae
jmp
lods
jg
sbb
jmp
mov
xor
in
or
cmp
adc
cmp
es
out
jge
push
dec
out
sub
pop
inc
mov
jle
mov
pop
int
jge
dec
clc
rcl
jmp
adc
out
enter
mov
sub
pushf
lock
ret
out
pop
push
jnp
push
sub
das
cmp
adc
push
and
loopnew
dec
jp
mov
sub
das
aaa
call
add
push
xor
aas
es
push
test
jmp
lods
or
jmp
adc
and
addr16
dec
lock
or
pop
xchg
scas
and
divb
dec
or
mov
add
sub
imul
fsubr
aas
sub
data16
pop
cltd
mov
mov
push
les
dec
out
sbb
stos
xchg
in
sub
and
jg
fcomps
cld
sbb
mov
ja
cmp
mov
mov
push
xchg
and
out
in
shll
xchg
cmp
push
dec
jbe
push
mov
enter
scas
xchg
xchg
add
pop
sbb
scas
jae
int3
pop
daa
jmp
test
dec
inc
push
pop
and
mov
adc
and
or
arpl
jno
add
lods
adc
sbb
gs
subb
stos
sub
dec
xchg
jae
add
jno
push
dec
je
pop
dec
and
inc
sbb
outsl
scas
lods
and
icebp
int3
push
aas
lea
loopne
pusha
subl
adc
pop
jo
js
xchg
rol
enter
pop
adc
test
adc
stc
push
pop
insb
dec
cmpsl
sub
or
mov
xchg
out
lods
sub
enter
frstor
mov
aaa
aam
jg
and
and
xchg
push
sbb
dec
sbb
cmp
mov
jbe
pop
in
push
fbstp
pop
into
cmp
push
sbb
mov
mov
fwait
aam
jae
mov
bound
dec
shl
inc
inc
push
pop
dec
mov
mov
aas
in
lret
inc
dec
mov
jge
int
dec
enter
notb
test
mov
frstor
pop
loop
out
xchg
pop
fiaddl
cmpsb
daa
sbb
xor
add
ja
ja
pop
push
mov
fsubrs
adc
rorl
cmp
mov
xor
add
pusha
adc
in
pop
mov
xchg
mov
imulb
scas
repnz
into
or
adc
mov
fistpl
xchg
cwtl
push
testl
or
lods
rorl
mov
mov
sti
daa
and
cmpsb
inc
gs
ljmp
icebp
pop
xchg
dec
cld
outsb
mov
jmp
push
pop
aaa
cmp
push
pop
mov
and
push
nop
gs
mov
scas
mov
imul
jmp
incb
clc
or
stc
inc
inc
lret
ja
add
test
dec
push
cmpsl
incb
sbb
add
aaa
mov
nop
and
in
subb
jnp
loopne
sub
jb
test
sti
jle
push
push
into
sarb
inc
jns
cli
inc
imul
test
mov
into
mov
xor
scas
mov
imul
lret
je
mov
movsb
imul
or
addr16
lret
or
cltd
into
jge
or
inc
fnstenv
inc
xchg
sub
and
sbb
test
jg
scas
test
pop
sub
imul
fsubr
out
jb
jg
shrb
imul
or
mov
imul
xor
and
xchg
gs
aas
cmp
sar
cmpsl
or
push
loop
mov
or
out
ljmp
dec
outsl
jmp
and
lret
outsb
jle
jg
xor
clc
sub
adc
nop
xchg
or
aaa
lea
andl
outsl
rdtsc
mov
bound
dec
ljmp
mov
push
dec
jmp
xchg
xchg
mov
push
xchg
clc
dec
inc
icebp
xor
xor
idivb
dec
xchg
lret
testl
jg
stos
jle
push
jmp
push
inc
add
loope
lods
cmpsb
mov
clc
fistpl
sbb
outsl
lea
add
sbb
mov
lods
jle
ja
clc
clc
and
mov
and
and
pop
adc
push
sbb
outsl
insl
jl
bswap
repnz
mov
push
jecxz
pop
dec
ret
cs
jno
push
dec
fnsave
insl
out
addr16
lods
jg
call
pop
stos
mov
mov
pop
int3
sub
add
add
jnp
mov
pop
shrl
stos
add
lods
outsl
outsl
mov
test
cmp
lods
scas
cs
enter
mov
mov
orb
adc
xchg
dec
roll
faddl
cmp
mov
lret
add
mov
imul
roll
mov
xchg
jmp
push
mov
mov
es
add
dec
std
fnsetpm(287
xchg
or
mov
push
mov
std
pop
imul
mov
dec
add
jae
je
add
jnp
bnd
xchg
arpl
test
cwtl
push
pop
inc
xchg
je
popf
into
outsl
ret
sti
push
sub
add
dec
sbb
outsb
sti
stc
lods
pop
inc
xchg
out
imul
jnp
sub
jmp
imul
es
xchg
out
inc
xchg
testl
jle
ds
ja
pop
push
cs
mov
ja
ja
jae
push
inc
xor
adc
jmp
adcl
rorb
inc
das
int3
cli
lds
sarb
lcall
cli
insl
mov
cmp
test
orl
mov
mov
scas
sahf
jg
pop
add
jae
cs
sbb
xlat
pusha
cmp
leave
mov
and
adc
jno
cli
out
arpl
scas
jg
clc
pop
push
test
xchg
sub
xor
fdivl
sbb
dec
andl
dec
scas
mov
ret
pushf
dec
jle
loopne
pop
jne
cmpsb
out
lods
mov
mov
aad
enter
fwait
and
mov
sbb
neg
rorl
out
push
ficoms
stos
xlat
loop
leave
fxch
cmc
std
bound
insb
scas
insb
das
push
in
push
sbb
fcompl
lahf
push
enter
out
mov
pop
xchg
or
sbb
inc
dec
pop
dec
repz
in
mov
outsl
or
or
loopne
adc
xor
and
fs
outsl
jg
fstl
cmpsb
xchg
mov
ret
ljmp
jbe
and
dec
push
mov
insb
out
push
cmp
out
dec
bound
mov
cs
push
xchg
shlb
cmpsb
pop
adc
in
movsb
es
ja
ja
cltd
int3
hlt
mov
adc
cltd
sub
loop
ja
sarb
cmp
pop
gs
sbb
imul
movsl
sbb
fistpl
movsb
insb
lods
dec
dec
repz
ds
or
push
xchg
mov
pop
scas
push
es
pop
pop
jge,pn
ja
mov
pop
mov
fisubrs
das
test
jg
loop
sbb
ret
outsb
sub
dec
adc
mov
cmpsb
andl
lock
push
iret
adc
pop
js
lret
sub
xor
enter
pop
stos
call
push
ljmp
icebp
jmp
xchg
out
fbld
mov
gs
test
scas
mov
jg
pop
into
dec
jae
inc
in
pushf
add
sub
nop
dec
mov
outsl
add
mov
flds
mov
and
pop
jo
repnz
dec
aas
mov
ja
sub
enter
test
jg
out
mov
dec
mov
add
insl
ds
xchg
mov
rorl
outsl
add
inc
test
mov
push
iret
gs
out
idiv
mov
xor
je
inc
sbb
push
lahf
incl
sub
loope
inc
dec
popa
pop
jae
out
mov
fs
leave
inc
test
add
mov
pop
out
cltd
xor
adc
lret
scas
mov
in
push
mov
lea
sbb
jae
dec
icebp
mov
adc
pop
pusha
jmp
mov
jmp
or
dec
test
std
add
lcall
ds
imul
es
mov
fimuls
imul
pop
inc
sub
pop
ljmp
xorl
jle
dec
xchg
ret
add
outsb
outsl
sti
lods
push
outsl
adc
or
btcl
mov
popa
dec
arpl
out
mov
or
and
push
push
outsl
xchg
decl
cmp
or
fnstsw
loopne
jle
dec
call
stos
or
jmp
dec
inc
data16
push
mov
pop
lret
pop
aas
incb
aas
hlt
in
sub
mov
insb
arpl
loopne
jmp
jns
mov
xor
mov
jno
out
shll
sahf
scas
imul
out
add
fbstp
mov
mov
add
das
lods
loope
ror
push
mov
push
adc
adc
mov
shlb
ficoms
mov
pop
shl
inc
imul
add
stos
adc
inc
jecxz
xor
in
cltd
dec
lods
sub
xor
lods
int
add
loope
mov
jns
dec
add
pop
adc
ret
dec
sub
pop
or
mov
cmp
lcall
lahf
dec
out
jae
out
push
cmpsb
ja
test
add
xchg
in
jmp
sub
cwtl
jecxz,pt
mov
in
xchg
mov
out
push
xchg
dec
rcll
enter
mov
jnp
subl
rol
mov
mov
mov
mov
xor
imul
dec
iret
loop
out
hlt
jns
mov
cmpsb
imul
nop
xchg
pop
out
ljmp
cmpsb
data16
aaa
lock
xchg
push
sub
sbb
int3
sub
mov
or
cmp
imulb
lods
adc
jno
shlb
mov
outsb
out
into
push
xor
dec
dec
test
addr16
jo
jae
dec
sbb
push
clc
lea
sbb
xchg
iret
jne
mov
push
rcrb
push
rorb
mov
push
rcrb
addl
push
insl
dec
in
stos
xchg
fldenv
ja
inc
add
push
imul
mov
outsl
pop
cli
jno
mov
mov
cwtl
push
and
inc
mov
sarl
dec
push
jno
clc
sbb
xorb
pop
repz
mov
or
ret
outsl
xor
xchg
in
repz
pop
hlt
shrl
xchg
filds
stos
rclb
bnd
jns
test
jg
test
fimull
outsl
xchg
adc
leave
popf
mov
sub
mov
sti
pop
outsl
ljmp
mov
jp
jno
cmpsl
lahf
ljmp
pop
repnz
mov
add
out
outsb
clc
cmp
and
lods
lods
enter
mov
inc
mov
sub
pop
insb
cmp
sbb
shlb
jne
xchg
ss
pop
bound
jp
outsb
out
xchg
mov
fs
movsl
mov
dec
jp
xorb
clc
ljmp
dec
out
mov
data16
or
mov
addl
lods
xlat
add
mov
xlat
ss
clc
mov
into
xor
fldcw
adc
jno
sub
dec
mov
sbb
mov
cmp
and
out
stos
sbb
push
out
lcall
lods
scas
mov
cmpsl
sbb
aam
or
push
or
dec
add
test
clc
jno
mov
sarl
sbbb
stos
mov
jecxz
xchg
scas
je
inc
mov
cmpsl
insb
ja
jns
fbld
sti
insw
xchg
pusha
jg
cmpsl
inc
mov
xchg
movsl
inc
sbb
in
cli
rcrl
jmp
movsl
in
cmp
loop
negl
lods
mov
pop
cmc
dec
mov
lock
mov
sbb
sub
jg
pop
rorl
mov
pop
icebp
lcall
loope
dec
mov
push
dec
inc
ja
lret
pop
dec
inc
iret
adc
les
push
cmc
lea
aas
out
insb
pop
lock
out
nop
jle
mov
cli
test
fmulp
mov
jne
in
mov
fcoms
pop
out
stos
fildll
push
icebp
imul
mov
dec
stos
addr16
cmpsb
lods
add
pop
sbb
or
xor
fsubrp
js
mull
outsl
ja
addb
sub
pushw
mov
xchg
sbb
pop
scas
insb
sbbb
popa
xor
mov
nop
push
lea
jns
or
int
cs
enter
cwtd
inc
stos
shll
ljmp
in
pop
filds
adc
mov
xor
mov
stos
push
jbe
add
repnz
enter
xchg
cmpsl
sub
mov
sub
cmpsb
jmp
add
popl
sbb
push
and
lds
inc
push
inc
xor
insl
imul
pop
cld
pusha
mov
mov
pop
lret
shlb
popa
arpl
nop
xchg
ds
loope
scas
into
scas
inc
rcll
bound
shll
aas
outsb
inc
loopne
mov
hlt
mov
leave
xor
clc
mov
xor
outsl
pop
scas
cltd
mov
js
inc
cwtl
push
sub
mov
out
push
loop
out
es
fmul
push
imul
ror
lock
aas
mov
mov
shr
push
lds
fs
jg
xor
clc
xchg
mov
std
orl
inc
out
mov
in
hlt
call
test
fcmove
xchg
ret
rorl
pop
or
dec
scas
pop
add
jecxz
add
hlt
jns
mov
xchg
in
das
mov
pop
mov
adc
jmp
inc
adcb
cli
add
clc
and
in
mov
push
cmpsb
jge
enter
xor
in
ds
ljmp
daa
out
hlt
sarb
cli
mov
mov
cmp
pop
lahf
push
adc
mov
int3
pop
aas
push
scas
dec
mov
dec
cli
push
dec
add
std
add
sbb
mov
sbb
jbe
fwait
add
test
dec
negl
mov
and
mov
loope
dec
std
pop
adc
sti
fisubrl
xchg
gs
xor
mov
fimuls
jp
std
mov
ja
or
loopne
insl
scas
dec
mov
mov
dec
xor
mov
rcrb
in
aam
movsb
mov
cmpsb
xor
inc
fiadds
jae
imul
add
addr16
daa
xor
sub
mov
insb
xor
lcall
fs
fsubs
ja
and
xor
stos
loopne,pn
jp
ljmp
dec
xchg
lods
mov
call
cmpps
dec
movsl
or
mov
mov
mov
dec
jl
cmpsw
jp
sarl
outsl
aam
sub
or
sbb
in
jns
mov
or
scas
ret
push
repz
pop
das
ja
test
int3
or
pushl
xchg
add
arpl
push
push
adc
out
jle
mov
sub
movsb
mov
sub
xchg
ja
xorb
lea
aam
inc
jmp
jae
pop
insb
mov
sub
outsl
mov
mov
hlt
jmp
je
scas
pop
scas
ljmp
scas
push
xchg
in
icebp
fisubrl
faddl
xor
sub
pop
pop
les
fsubs
pop
pop
sbb
imul
insl
out
mov
dec
ret
fdivrs
sub
dec
ja
imul
lret
lods
icebp
cmp
lods
mov
dec
jp
lds
fadds
jnp
clc
mov
int3
inc
movsl
add
rcll
dec
push
mov
adc
mov
pop
sbb
cld
or
int3
dec
das
jle
mov
mov
call
icebp
mov
stc
faddl
insl
pop
jnp
cli
adc
out
out
mov
lods
int3
stc
dec
adc
jnp
movsl
int3
outsb
sbb
add
mov
outsb
mov
out
ret
js
sbb
push
adc
sbb
and
addr16
pop
sbb
iret
out
iret
leave
inc
ret
xor
pop
mov
and
xor
es
pop
inc
jl
fldl
gs
stos
pop
mov
push
xor
pop
mov
jp
xor
push
mov
dec
jp
gs
fisubs
in
cmpsb
jae
xchg
mov
cmp
and
out
sahf
insl
dec
iret
jg
xchg
inc
in
jecxz
cwtl
xor
ja
push
xchg
sbb
sbb
xchg
or
push
clc
cld
or
je
icebp
push
mov
outsl
ss
lods
pop
fstl
sub
dec
js
cmp
outsb
mov
cld
shr
pop
sarl
pusha
call
pop
xorb
es
test
jmp
std
and
xchg
lods
enter
clc
int3
xchg
lret
in
cmp
out
mov
xor
inc
enter
xchg
and
mov
xor
out
jp
int3
dec
popf
into
pop
out
pop
scas
jnp
stos
sbb
push
dec
dec
out
sbb
adc
ret
pop
daa
out
add
subb
insb
int3
adc
dec
mov
push
cmc
add
mov
or
int3
push
lahf
jae
movsl
das
xor
xchg
repz
shl
push
add
leave
fisttps
mov
lret
cmc
jg
shrb
mov
dec
mov
cmpsl
lcall
dec
test
outsb
xor
loope
pop
fucomp
in
lock
mov
mov
sbb
sbb
jg
mov
jae
xlat
cmp
adc
int
imul
cld
iret
and
pop
adc
call
dec
call
lods
pop
daa
xchg
fcoml
push
out
inc
add
adc
jnp
cmpsb
mov
fdivrs
outsb
sub
scas
push
and
add
mov
loop
int
arpl
loop
mov
mov
lods
or
xor
mov
outsb
fdivs
mov
test
scas
nop
xchg
test
mov
clc
jae
cmc
cmp
mov
adc
pop
xchg
scas
es
lock
jbe
inc
and
inc
pop
lods
ja
stc
in
sbb
js
data16
cmpsl
daa
lea
mov
test
bound
xor
mov
cmpsb
lahf
ret
pop
cmp
xor
xor
ds
data16
leave
dec
jno
jg
bound
decl
test
add
push
loopne
sub
imulb
inc
push
xchg
add
imul
push
mov
clc
mov
mov
xchg
add
push
lea
jge
xchg
popf
dec
inc
pushf
lea
jge
xchg
push
outsl
dec
daa
pushf
mov
mov
lahf
repnz
xchg
fnstsw
cld
cmc
icebp
outsl
mov
push
sbb
arpl
sub
icebp
adc
xchg
jmp
daa
cmp
push
xchg
jmp
lods
mov
div
pop
iret
xchg
ret
sti
out
jb
int
orb
lock
hlt
xchg
lcall
xchg
hlt
sbb
dec
mov
fldt
insl
push
rcrb
push
ficoml
jnp
cmpsl
pop
mov
sbb
decb
outsl
mov
scas
frstor
mov
cmp
scas
add
pop
cwtl
scas
xchg
js
xor
stos
fstl
jge
dec
pop
mov
push
mov
adc
or
xchg
outsb
iret
mov
inc
lock
imul
inc
dec
repz
iret
mov
mov
stos
movsl
insl
pusha
mov
cld
stos
pop
iret
xlat
fadd
adc
out
or
insb
mov
daa
push
call
jno
sub
ds
test
xchg
xchg
sub
arpl
mov
push
and
dec
fistpll
int3
jae
test
xchg
outsl
or
xor
jne
incl
sti
clc
or
test
cmpsb
scas
movsb
in
mov
lods
sbb
pop
adc
mov
rep
rcl
call
dec
sti
sbb
daa
sti
pop
lret
mov
cli
test
fmulp
fisubrl
repz
mov
in
xor
jg,pn
jbe
sbb
test
outsb
fnstenv
push
mov
int
enter
sub
stos
dec
out
cwtl
lock
into
ljmp
push
dec
jl
inc
mov
outsl
add
and
dec
cmpsl
mov
out
scas
call
test
outsl
mov
lods
dec
das
pop
mov
call
lods
adc
xor
mov
push
repz
test
inc
mov
insb
inc
fidivl
popf
push
cmpsl
popa
xor
fidivs
jae
jecxz
jp
clc
cli
rolb
pop
jg
sti
add
cli
repz
dec
sub
cs
ss
sbb
dec
outsl
mov
bound
mov
jg
test
sahf
inc
dec
movsb
cmp
push
cmp
dec
lea
ja
arpl
mov
pop
lea
dec
test
cmp
add
repnz
lock
xor
mov
sub
divl
popa
outsl
add
lret
push
xor
lods
mov
dec
fs
mov
clc
sbb
cmc
dec
ucomiss
clc
mov
in
shll
xchg
loope
xchg
sbb
push
std
mov
sarl
stos
and
dec
sbb
jl
sbb
pop
std
subb
cwtl
mov
ja
addr16
std
cld
pop
jg
cmp
dec
and
pop
repz
outsb
jecxz
sti
bnd
fistpll
in
ljmp
push
add
mov
cmp
cmc
inc
ss
sub
jbe
dec
js
cli
sub
in
stos
out
xchg
sahf
test
js
lods
xor
adcl
repz
sbb
lahf
cmpsb
sahf
inc
lock
clc
insb
jg
pop
add
outsb
mov
sub
test
clc
mov
and
lods
clc
je
jns
subb
inc
call
push
lods
dec
mov
push
jmp
mov
cli
fcomps
or
sahf
add
xchg
daa
out
xchg
xchg
ja
out
sti
repnz
sub
sub
dec
shll
into
inc
and
jbe
cmp
mov
sub
sub
xchg
loope
stos
pop
js
jp
daa
cmpsb
ja
push
sti
lea
fildll
xchg
gs
push
cmp
mov
nop
scas
jae
mov
pop
out
inc
jae
fabs
ja
or
pop
cmp
ss
ja
jp
js
dec
cld
clc
jnp
sti
pop
mov
jmp
clc
rcl
icebp
lcall
push
sahf
imul
call
mov
sub
fldl
mov
mov
jb
loopne
jbe
push
push
xchg
jne
xlat
repz
idivb
out
lods
shr
push
dec
es
imulb
push
scas
adc
add
jg
push
and
sbb
mov
aad
xchg
bound
and
aaa
xor
aaa
into
push
pop
lret
scas
push
test
jno
neg
mov
js
loopne
pusha
push
jae
push
push
mov
push
sub
adc
bound
xchg
jno
icebp
dec
push
jae
loopne
mov
inc
clc
mov
shlb
xchg
scas
push
sbb
inc
in
scas
jg
lods
lock
dec
lock
fdivs
inc
xchg
ljmp
data16
sbb
adc
ds
outsl
addr16
mov
push
jmp
call
data16
mov
out
insl
add
ror
inc
fwait
dec
xchg
mov
filds
cmpb
cli
cmpsl
stos
out
mov
outsb
lcall
mov
adc
cli
adc
inc
jecxz
movsl
add
push
xchg
inc
call
mov
out
push
nop
in
add
xchg
pop
pop
cmpsl
cmpsl
inc
jne
dec
push
xchg
xorl
fbstp
dec
and
pop
imull
jle
jae
fadd
inc
cs
push
loop
jae
sbb
dec
sub
inc
jns
aad
adc
mov
fidivrs
mov
push
jns
in
or
mov
xchg
fs
setbe
mov
inc
aas
sbb
in
std
nop
jnp
pop
jg
cmp
xchg
pop
jae
xchg
sub
and
add
cmpsb
sub
push
repnz
movsb
jb
lahf
add
pop
pop
divl
scas
jae
mov
add
push
enter
pop
popa
pop
push
fisubrl
sub
stos
jno
mov
pop
pop
jbe
sub
xor
lcall
xor
rolb
mov
pop
lret
mov
nop
imulb
imul
dec
pop
pop
jg
push
ja
pop
mov
es
xchg
cmpsl
inc
cli
das
push
mov
xchg
outsl
push
jae
pop
pushf
outsl
inc
cmp
les
jo
adcb
sarl
add
sbb
dec
xor
data16
test
push
pop
jae
pop
jne
and
jp
or
pop
mov
adc
rcll
mov
push
rcll
outsl
rcl
jae
clc
subl
pop
inc
gs
pop
popf
imul
xchg
loopne
jne
out
inc
adc
adc
in
push
outsb
out
hlt
ds
pop
fmuls
data16
mov
jge
mov
push
jns
sti
sahf
movsl
mov
cmp
mov
push
mov
movsl
dec
clc
ljmp
stos
stc
jecxz
pop
pop
xchg
mov
push
iret
imul
fs
call
data16
xor
sub
or
in
insb
sub
icebp
xor
scas
sub
lods
sbb
mov
inc
and
shl
retw
mov
test
imul
fdivs
push
outsb
jb
jnp
es
mov
fisubs
mov
mov
test
fld
outsb
loopne
outsl
dec
stc
outsl
insb
pop
mov
lcall
xchg
rcrb
in
jmp
mov
pop
cmc
jg
and
and
mov
sarb
add
call
xchg
sub
cmp
je
mov
xchg
movsb
dec
sbb
int3
lods
mov
or
subb
adc
les
jecxz
shll
lea
scas
and
and
mov
or
insl
popa
push
ficompl
mov
scas
ror
loop
daa
jnp
into
test
dec
je
dec
dec
outsb
out
jg
daa
ljmp
ret
sbb
adc
and
aas
pop
jno
inc
mov
popa
push
out
jg
ficoml
scas
rcrl
xchg
scas
lods
subb
stos
push
out
call
sub
pop
pop
outsl
outsb
call
jge
test
add
loope
pop
movsl
or
pop
scas
loope
enter
mov
imul
fimuls
sub
mov
pop
add
add
out
cmp
cltd
out
ffree
pop
dec
pushf
xor
dec
shll
mov
into
jle
cmp
aam
call
stc
xchg
cmp
imul
ret
dec
cmpsl
dec
imul
repnz
jb
cwtl
jl
insl
insl
add
outsl
jp
bound
js
in
push
pop
imul
dec
jae
dec
imul
ljmp
fs
in
outsb
outsl
xchg
outsb
in
dec
jecxz
pusha
pop
jle
jbe
insb
mov
fs
inc
xchg
jle
mov
jge
outsb
outsl
xor
std
dec
imul
clc
dec
push
lock
jecxz
inc
dec
call
outsl
insb
icebp
hlt
insb
jle
call
inc
mov
clc
dec
call
arpl
gs
std
dec
call
inc
shr
jns
subb
aaa
dec
in
dec
inc
push
imul
jg
rolb
fs
out
outsb
call
jmp
dec
jecxz
pop
dec
in
and
ret
roll
dec
jmp
outsl
push
jecxz
test
pop
sti
and
outsl
je
repnz
dec
notb
in
push
addr16
pop
repz
popa
jg
sub
lods
call
outsl
movsb
leave
push
dec
sub
lock
dec
insb
jg
insb
out
insb
jmp
in
dec
out
cli
dec
jae
jp
mov
pop
dec
jne
cmc
out
lods
push
lock
push
dec
mov
pop
insl
insb
dec
dec
insb
jb
xor
cmp
divl
dec
add
in
in
cld
aaa
dec
jecxz
pop
push
xor
decb
mov
inc
dec
stos
jge
outsl
clc
sub
insb
js
insb
gs
in
popa
enter
inc
dec
dec
testl
push
imul
cli
dec
clc
lret
lcall
or
jecxz
out
pop
ljmp
dec
clc
pop
jae
pop
mov
std
mov
lock
xchg
sbb
out
dec
cmp
push
filds
mov
addb
xchg
scas
push
dec
mov
por
sbb
out
cmp
dec
cmp
cmp
ljmp
xor
sub
or
adc
inc
mov
add
sbb
mov
mov
enter
test
nop
wbinvd
push
in
outsl
mov
fistps
in
mull
pop
pop
sbb
lock
jnp
adc
outsb
outsl
mov
xor
mov
jo
pop
push
xchg
sbb
adc
in
or
bound
jle
xchg
notl
fsubs
cli
dec
adc
push
xchg
sbbl
jg
mov
mov
or
jo
adc
in
adc
add
cmpsb
mov
out
movsl
mov
or
push
lret
je
fimuls
rcll
stos
outsl
sahf
mov
add
pusha
test
sbb
int3
pop
test
pop
popf
jle
jno,pt
hlt
dec
pop
loope
iret
into
pop
mov
xrelease
sbb
test
outsl
or
push
add
addr16
add
daa
mov
jae
jg
outsl
cli
call
jno
push
pusha
pop
lret
adc
lret
pop
jae
jmp
pop
cmp
inc
jle
outsl
cmpsb
test
enter
out
outsl
adc
int
jge
push
mov
and
xchg
repz
in
decb
xorb
int
adc
dec
adcl
add
stc
call
test
adc
aas
shll
addl
aas
push
or
adcl
cmpsb
dec
int
inc
pop
mov
and
inc
hlt
pop
repnz
sti
or
testb
pop
sarb
inc
in
mov
mov
pop
jae
pop
or
mov
ror
or
nop
insl
ljmp
imul
sub
call
mov
in
push
aam
out
and
das
mov
sbb
ss
sub
dec
mov
imul
es
add
aam
popa
scas
lock
pop
inc
and
dec
pop
jecxz
mov
iret
aaa
testl
jo
add
das
call
jae
in
aas
dec
mov
xor
and
mov
cwtl
je
jae
pop
fcoms
gs
dec
jae
mov
dec
decb
cmovl
jb
jae
pop
mov
and
bnd
mov
cld
bound
insb
dec
and
movsb
fwait
jg
in
daa
test
fwait
clc
daa
fimuls
sar
cmp
jl
push
fdivrl
lods
in
jg
addr16
pop
jp
movsl
sahf
sub
push
popa
int3
mov
scas
dec
sub
mov
and
lret
aas
lods
mov
cmp
mov
lods
mov
shrl
jnp
xchg
lods
fcmovbe
cwtl
mov
test
test
pop
lock
insl
mov
mov
jl
mov
shr
jmp
insb
mov
in
mov
imul
mov
push
std
ds
std
ja
jp
packssdw
mov
push
jmp
loopne
push
out
dec
call
addr16
clc
outsb
jnp
out
in
ds
pop
mov
shrb
mov
gs
cmp
mov
mov
in
ds
pop
arpl
mov
outsb
imul
mov
hlt
bound
scas
stos
mov
jbe
adc
loopne
ficomps
jg
sbb
xchg
daa
jge
dec
out
mov
and
mov
mov
and
cmpsl
mov
mov
dec
cmpsb
dec
test
pop
dec
test
dec
dec
dec
xchg
inc
imul
lcall
cli
lret
jmp
enter
push
jl
repz
hlt
pop
cs
scas
out
inc
jg
sbb
inc
out
fcmovnb
cltd
sub
imul
xchg
loop
pop
ret
lods
lock
mov
xor
xor
add
sbb
cld
loopne
and
fisubrl
arpl
scas
cmp
loopne
add
pop
loopne
in
cmc
out
or
test
sub
and
ljmp
sub
inc
pcmpeqd
icebp
xchg
fisttpl
jne
clc
outsb
shl
push
dec
js
jae
or
outsl
scas
gs
out
outsb
out
sbb
jb
dec
sub
inc
inc
rorb
sbbb
mov
dec
xor
dec
je
pop
xchg
stos
loope
mov
xor
pop
mov
ret
and
sub
dec
sub
xchg
cmp
pusha
in
dec
dec
inc
mov
jae
imul
jle
insb
cmpsb
outsl
sub
out
ljmp
sub
fxch
fwait
mov
ja
sbb
pop
je
push
jae
arpl
loop
sbb
and
cmc
lahf
fisubs
sub
fldt
fnsave
ljmp
ljmp
dec
mov
push
or
out
mov
daa
je
enter
sbb
mov
sub
mov
jno
adc
in
sub
cs
add
shl
sbb
pushf
cwtl
dec
mov
push
scas
adc
jne
outsl
adc
fistps
insl
xchg
or
push
dec
jg
clc
scas
dec
gs
inc
fcompl
loop
adc
push
je
dec
pop
jne
xor
lock
xor
pop
lods
mov
jne
jb
lret
in
js
fstpt
jo
test
out
cs
std
shlb
jb
fisttps
xor
out
mov
xor
adc
dec
outsl
call
sbb
dec
cltd
lods
cwtl
call
enter
outsl
dec
xchg
int3
outsl
pop
int
into
hlt
iret
lods
jge
sbb
outsb
push
pushf
adc
dec
test
adc
inc
jo
xor
push
push
mov
jg
jle
pop
mov
scas
lock
and
ljmp
sbb
addr16
mov
enter
call
test
rcll
mov
push
lock
fucomi
xlat
inc
adc
mov
or
fistpll
or
dec
mov
popa
jl
mov
and
call
test
outsl
call
mov
loopne
sbb
lods
jg
outsb
insl
jg
jle
sbb
mov
insb
pusha
sarl
inc
mov
dec
adc
ljmp
mov
mov
mov
jg
js
push
add
test
std
inc
call
mov
mov
in
mov
cld
insb
dec
lods
inc
insb
mov
xchg
outsb
call
dec
push
add
jle
pop
dec
orb
push
inc
shlb
repnz
call
push
cld
test
mov
enter
add
ror
inc
sbb
sbb
push
jno
sbb
shll
mov
sbb
xchg
dec
lods
or
les
repnz
cmp
into
mov
cmp
lret
lock
test
xchg
pop
dec
dec
xchg
lods
int3
xor
shlb
xchg
mov
sub
dec
dec
mov
sub
loope
xchg
xchg
scas
or
repnz
stos
adc
scas
jb
xchg
lds
push
pop
inc
mov
pop
out
into
jb
sub
cli
inc
pop
push
ja
popa
pop
lret
enter
mov
inc
imul
std
lods
divl
lods
pop
stos
lods
enter
lods
test
int
movsb
repz
nop
adc
xchg
mov
rclb
sub
push
ret
popf
out
sub
sbb
gs
ja
cmpsb
mov
add
movsb
enter
dec
test
adc
inc
jmp
orb
into
push
push
or
jmp
ret
nop
push
int3
inc
rorb
call
push
hlt
cmovs
push
adc
lods
outsb
scas
push
aad
jae
dec
push
xchg
lret
pop
and
stos
call
mov
mov
push
cmp
in
popf
pop
push
fldcw
clc
addr16
pop
mov
push
call
xlat
add
ret
ucomiss
clc
data16
mov
dec
test
outsb
icebp
mov
xchg
stos
mov
push
lret
inc
push
outsb
mov
dec
push
lcall
mov
bound
push
scas
mov
lahf
jmp
and
loop
mov
sbb
les
dec
xchg
stos
outsl
adc
xchg
adc
lods
adc
xchg
pop
sub
cmpsl
pop
call
test
sub
test
fsubrs
cmpsl
loopne
insl
stos
lods
dec
pop
cmp
outsl
jecxz
pop
stos
popa
addr16
nop
dec
data16
pop
outsl
lds
mov
mov
repz
jbe
push
ret
jecxz
mov
mov
xchg
stos
inc
iret
dec
out
in
stos
cmpsl
lea
lods
xchg
add
jg
out
xchg
and
fidivl
mov
pop
dec
jp
clc
sbb
cmp
push
imul
out
pushf
addl
cmpsl
loopne
imul
stos
jge
fs
movsl
add
leave
scas
xlat
jbe
pusha
xchg
test
scas
pop
mov
cmpsb
add
repnz
sahf
xor
pop
fistps
idiv
xor
pop
adc
push
imul
mov
loop
aas
shrl
cmpl
pop
sahf
stos
xor
daa
call
fsub
decl
addr16
outsl
pop
jnp
mov
pushf
or
xor
dec
loop
lock
outsl
idivl
cmp
shll
mov
xchg
mov
clc
das
mov
imul
loope
add
inc
lret
stc
fildl
mov
loope
pop
icebp
inc
lods
lods
ret
or
cmpb
or
dec
mov
mov
cli
mov
ffreep
repz
sti
ficomps
sub
icebp
icebp
or
jecxz
mov
xor
jb
push
cmpsb
lret
dec
subl
out
adcb
out
cmp
lret
jae
enter
daa
mov
repz
out
xchg
push
das
fistpll
mov
jae
jl
cmpsb
pop
lret
sbb
insb
sub
enter
addr16
inc
pop
add
sahf
call
out
fwait
mov
add
adc
mov
lcall
jb
mov
fsubp
scas
sahf
sar
dec
mov
lock
push
jns
les
push
bound
jle
sbb
nop
jae
mov
mov
mov
daa
inc
aas
add
je
jmp
loope
mov
mov
lcall
adc
lret
xchg
repz
xor
sahf
pop
dec
push
out
mov
push
int3
das
jge
push
test
mov
movsb
fidivs
fs
mov
repz
jmp
clc
shl
ficoml
sbb
add
dec
dec
jbe
lock
ds
mov
fcomi
outsl
arpl
fists
lods
pop
add
ja
es
outsb
mov
mov
sahf
popa
mov
and
adc
mov
nop
movsl
cmpsb
int3
and
loope
mov
sbb
lds
mov
jp
popa
jmp
scas
pop
mov
xchg
cld
arpl
push
nop
lods
pop
rcrl
ja
call
mov
pop
xorl
ds
outsl
dec
sub
add
jle
xor
lret
test
call
call
loopne
fimuls
dec
jae
daa
movsl
jnp
adc
pusha
sbb
jno
aaa
jae
rolb
add
call
ja
cld
notb
xor
fs
push
stos
mov
inc
inc
out
fsub
lods
outsl
fists
cwtl
sahf
cwtl
xchg
daa
popa
movsl
mov
fldt
test
lahf
clc
add
fsubl
cmc
pop
clc
dec
inc
loop
popa
aad
jle
dec
dec
mov
jb,pt
mov
pop
xor
dec
lock
mov
int3
mov
jb
add
imul
int3
add
ljmp
mov
test
test
lds
outsl
jae
mov
int3
data16
dec
insb
movsl
sub
sti
inc
imul
or
test
jb
xchg
dec
stc
imul
dec
arpl
lret
cltd
jge
rcl
nop
cmp
mov
cs
data16
decl
clc
iret
sub
push
push
mov
cmp
jbe
nop
mov
mov
inc
dec
cs
test
ret
sahf
mov
sbb
nop/reserved
je
sbb
nop
iret
dec
repz
out
sub
mov
mov
out
sbb
mov
pop
clc
outsb
dec
inc
std
jbe
mov
les
jp
rcll
jmp
jmp
inc
adc
imul
sbb
out
ds
add
or
fiadds
push
ljmp
pop
xorb
loope
mov
xchg
add
or
out
mov
jae
in
mov
jp
jl
loopne
xor
push
push
mov
jae
mov
inc
xlat
mov
das
sub
popf
inc
scas
push
and
cmpsl
mov
dec
mov
push
outsl
ss
cmc
mul
lods
outsb
adc
xchg
and
into
push
sub
cltd
outsb
out
test
loope
push
mov
inc
dec
rorb
xchg
mov
lods
mov
imul
scas
in
xchg
scas
faddp
out
sub
int3
dec
icebp
shll
mov
sbb
ja
xchg
loope,pt
js
aas
ja
mov
bound
je
dec
imul
inc
arpl
test
daa
push
aas
incb
ljmp
in
or
or
lret
outsl
push
dec
mov
sbb
sub
jg
add
dec
stos
xchg
add
sub
and
mov
mov
outsb
es
and
das
xor
js
cmp
and
inc
pop
stos
or
add
addr16
in
call
add
test
loop
repnz
push
lods
xchg
xchg
stos
and
rolb
push
pop
repnz
jmp
push
jge
mov
out
or
ja
push
lds
xor
das
stos
adcb
cs
xor
mov
popa
out
rolb
mov
shl
loop
mov
sbb
loop
pop
outsb
fs
ficomps
xchg
push
lock
push
test
mov
aaa
decl
fidivl
pusha
scas
shrl
ret
adc
xor
stc
hlt
scas
mov
iret
fstl
lret
insb
xlat
or
inc
dec
mov
add
aas
inc
bound
mov
movsb
in
fcompl
xchg
push
das
mov
dec
faddp
xchg
fisubrs
outsb
sbb
mov
aam
mov
cmc
pop
mov
jmp
setg
movsb
add
movsb
roll
movsl
push
ret
outsl
xchg
test
das
cli
or
scas
adc
mov
push
xor
outsb
in
pusha
sub
push
inc
jne
imul
loopne
out
adc
xor
inc
fldz
push
jo
lock
mov
sbb
cli
iret
add
mov
pop
xor
stos
out
lock
adc
in
in
pop
nop
xchg
mov
push
mov
shlb
cltd
dec
nop
xor
es
das
or
mov
dec
pop
inc
out
out
pandn
sub
push
pop
mov
lock
mov
loop
push
push
into
cltd
aam
iret
into
mov
negb
adc
scas
cld
sbb
divl
mov
lcall
dec
dec
stos
setbe
cmpsl
loope
mov
aad
jg
jg
mov
dec
lea
xchg
idivl
daa
ret
addr16
jge
cwtl
xor
push
popa
movsb
pop
inc
lds
dec
call
mov
push
dec
dec
or
int3
scas
mov
dec
or
lods
mov
and
iret
nop
repz
push
dec
in
sub
lods
sub
iret
mov
cmc
iret
jle
arpl
iret
aad
addr16
es
jbe
dec
pushf
add
arpl
dec
clts
mov
in
call
mov
jg
push
loopne
cs
dec
scas
cmpsb
out
in
scas
test
js
inc
push
and
das
movsb
and
imul
call
pop
jge
in
decb
add
scas
call
pop
out
outsl
in
pop
test
jp
mov
iret
xor
mov
addr16
jb
push
lock
mov
setno
sbb
adc
sub
in
jno
fsub
mov
lods
loop
push
in
jno
outsl
mov
call
pop
fucom
incb
das
icebp
aaa
lahf
insl
push
sub
inc
imul
out
jae
call
pop
mov
jge
fldt
lods
rep
push
push
in
dec
mov
mov
insb
sarl
mov
outsb
adc
into
jg
loope
das
push
mov
outsl
push
fisubrs
pop
or
sbb
les
and
dec
cli
jg
inc
jmp
into
mov
movsl
out
mov
into
dec
sti
out
rcrl
mov
in
mov
xchg
in
mov
movsb
adcl
cwtl
pop
into
mov
dec
test
subl
lcall
dec
pop
sahf
scas
jp
scas
clc
push
outsl
xchg
daa
pop
outsb
enter
ljmp
sti
scas
and
scas
dec
pop
lahf
outsl
bound
push
xor
xor
sub
sub
insb
xchg
mov
jg
dec
iret
xchg
jmp
cld
rorb
jns
fildl
dec
sbb
repnz
and
scas
jge
movl
testb
fidivrl
rorb
ljmp
rorb
mov
xchg
scas
push
roll
arpl
jmp
dec
lods
js
popa
push
stc
xchg
gs
inc
cmp
sbb
loopne
xor
push
xchg
dec
movsl
outsb
pop
shlw
iret
gs
in
mov
cmp
add
fisubrl
daa
sub
out
xor
mov
cs
dec
inc
incl
out
insl
jae
inc
daa
adc
loop
pop
loope
mov
jnp
and
dec
loop
dec
aad
xchg
ret
arpl
lods
loop
in
fstl
pop
loop
hlt
add
out
test
cmpsb
jge
dec
xchg
jmp
push
arpl
push
scas
sub
ja
xor
in
mov
cmp
adc
repz
push
arpl
jg
add
jmp
call
sbb
xor
pop
data16
out
arpl
lods
loope
cmpb
scas
cld
in
jnp
mov
lods
ljmp
insb
lods
outsb
in
push
mov
push
movsl
loopne
and
out
stos
pop
pusha
out
outsb
icebp
mov
mov
inc
stos
scas
dec
sub
movsb
sub
sbb
imulb
testl
rcrb
call
sahf
ja
adc
dec
scas
xchg
xchg
repnz
sub
jne
push
lds
int
mov
imul
push
fistps
add
mov
out
push
stos
push
jmp
dec
in
call
xor
mov
jbe
pop
out
hlt
imul
shrl
mov
outsb
negl
fbstp
push
aaa
stos
leave
movsb
in
clc
pop
cmpsb
dec
outsb
pop
mov
shlb
daa
out
popa
imul
mov
lret
scas
jae
pop
push
or
fiaddl
mov
movsb
cmp
dec
xchg
mov
xchg
push
add
or
pop
out
and
in
lret
lcall
dec
xchg
inc
inc
jle
jmp
out
fdiv
pop
mulb
or
bound
mov
xchg
data16
lods
shrl
sub
imull
imul
add
jp
pushf
xor
mov
neg
sbb
sti
jl
jle
jg
jg
xchg
fmulp
fistpll
cmpsl
mov
lods
mov
rol
mov
mov
xchg
call
pop
and
insb
sub
xlat
insl
out
clc
popa
lods
sub
pop
mov
insl
inc
cmp
adc
dec
test
mov
jg
clc
stos
movsb
lcall
fnsave
std
decl
lret
hlt
in
aas
and
inc
into
js
push
xchg
call
jp
push
cmp
pop
sahf
add
scas
dec
daa
pop
mov
mov
pop
ret
jmp
jae
int3
push
fwait
and
outsb
stos
push
addr16
mov
mov
decl
lods
sub
push
mov
cld
ljmp
and
inc
push
sbb
enter
cmc
adc
mov
movsl
lahf
jl
leave
xchg
sub
dec
jmp
pop
sub
test
fidivrs
aas
fwait
mov
xchg
test
sbb
in
adc
push
fs
scas
mov
outsb
push
mov
lods
cmpb
leave
loop
jo
xchg
push
ret
outsl
sbb
add
out
mov
out
test
fucomip
mov
cmp
in
test
adc
daa
bound
push
add
pop
adc
xor
shlb
dec
or
mov
in
mov
dec
mov
and
pop
pop
call
sub
sbb
dec
dec
pop
hlt
or
ds
loop
outsb
scas
pop
xchg
in
icebp
outsb
mov
and
ljmp
cld
outsb
xor
pop
cmc
arpl
push
sub
cld
scas
jg
clc
mov
add
in
add
jg
xor
iret
ds
insl
dec
mov
sub
cld
das
gs
stos
mov
jbe
mov
adc
cmpsb
bound
enter
int
pop
cmpsl
mov
lea
andl
test
or
ret
movsb
mov
ljmp
out
daa
cs
call
fs
mov
ljmp
in
jns
push
cmp
std
dec
or
insb
ds
std
leave
imul
outsb
push
in
ss
adc
adc
or
add
dec
mov
jae
add
sub
cmp
jge
rclb
in
mov
ljmp
pop
jle
dec
jns
dec
cmpsb
dec
jno
mov
dec
jbe
test
ja
call
and
mov
sub
outsb
sub
lret
cmpb
and
out
gs
idivb
mov
mov
dec
out
addb
out
inc
xchg
jb
xor
test
adc
push
jg
leave
mov
dec
fdivrp
inc
mov
fdivl
adc
daa
add
out
mov
xor
icebp
mov
call
call
enter
push
pusha
pop
or
sub
push
fmulp
adc
popa
mov
shlb
ja
call
jecxz
sbb
mov
testb
jp
mov
aaa
out
xchg
xchg
pop
inc
hlt
int3
outsb
leave
jg
repnz
clc
xchg
mov
lock
out
jbe
test
fwait
inc
repnz
xor
mov
or
mov
jae
inc
ljmp
adc
outsb
xor
mov
test
xchg
outsb
xchg
call
dec
pop
das
bound
cmp
jecxz
dec
pusha
xor
mov
sti
and
sbb
pop
and
jae
insl
test
pop
inc
ja
add
xchg
cmpb
aad
into
adc
repz
mov
negb
icebp
int
dec
iret
xchg
sub
scas
sub
cld
aam
insb
test
das
ret
cmc
and
dec
ja
lock
imull
cltd
scas
jnp
pusha
jmp
imul
add
or
sarb
lock
call
mov
lods
insl
mov
call
sbb
adc
xchg
scas
mov
jae
mov
movsl
rcrb
lock
pop
push
dec
and
ficoms
xchg
and
dec
in
dec
xchg
out
dec
lea
or
lods
add
cmpsb
push
jne
add
sbbl
insl
test
pop
fsubs
out
jmp
jg
clc
mov
xchg
and
clc
ret
movsb
movsb
ljmp
jg
push
dec
insl
sub
dec
int
scas
push
dec
iret
ljmp
mov
test
pop
adc
jl
insl
incb
or
jne
icebp
insb
pop
lods
into
loopne
imul
mov
adc
out
insb
push
insb
jecxz
sbb
push
sbb
mov
hlt
adc
outsl
pop
mov
cld
popa
jae
aas
mov
jne
inc
cmp
mov
call
mov
lret
insb
lods
cmp
push
jb
cmp
enter
int3
inc
mov
or
int
cmp
aaa
push
adc
fstps
pop
dec
or
add
push
sbb
data16
jp
stos
mov
dec
pop
push
repz
push
inc
and
lret
cmp
xchg
mov
ret
add
out
adc
lds
mov
lock
xchg
data16
cmp
lods
scas
cmp
lods
es
pushf
addr16
pop
and
adc
inc
mov
jae
stos
hlt
fwait
or
dec
add
inc
jnp
decl
xchg
in
ds
xchg
ljmp
mov
mov
shr
push
ljmp
out
dec
sub
sbb
sub
xchg
orb
sbb
movsb
pop
clc
sub
jno
lret
cltd
add
les
xchg
mov
jl
outsb
out
push
fsubrl
imul
test
inc
mov
nop
inc
mov
test
imul
push
lret
gs
cmp
int
jbe
push
in
outsb
jg
push
and
inc
mov
jp
add
in
cmp
jbe
aam
hlt
and
jmp
imul
icebp
loope
in
push
icebp
jnp
pusha
sbb
imul
outsb
adc
sarb
out
cmp
clc
dec
jecxz
lock
dec
lock
rolb
push
pop
add
addr16
lret
xor
dec
jne
mov
jne
shrl
mov
mov
push
scas
cmpsl
pop
jecxz
xlat
mov
mov
inc
fidivrl
std
shrb
int3
mov
jg
inc
scas
scas
mov
or
imul
aam
sti
test
das
push
adc
cmp
mov
decb
mov
xorb
fsubrl
fsubrl
jp
icebp
cld
add
fisubrs
in
outsb
cmp
scas
out
xor
out
cs
arpl
arpl
in
in
fldt
sub
fwait
mov
xor
or
pop
rol
sbb
mov
addr16
call
lods
add
out
mov
sub
sub
shrl
popa
daa
clc
mov
push
roll
push
mov
inc
imul
mov
inc
out
insb
rclb
jle
das
push
cmpsl
ljmp
outsb
sbbl
jp
std
ljmp
in
jle
insb
cli
push
mov
and
push
jae
int3
insb
push
push
fiaddl
hlt
push
arpl
outsb
mov
pop
jl
cmpsl
dec
push
add
cmpsb
imul
add
push
ret
dec
out
pop
lock
xchg
out
ljmp
call
ljmp
insb
daa
outsb
cltd
lds
daa
lds
das
dec
das
mov
mov
xor
ljmp
repnz
pop
inc
jae
lahf
add
push
addr16
cmpsb
loopne
dec
jno
pop
push
sub
push
jmp
jns
out
cmp
pop
cmp
cli
mov
pop
fdiv
in
jnp
jg
fcmovb
popf
fsubrs
lods
popf
bound
in
pop
nop
push
pop
subl
push
test
push
shll
ss
dec
mov
mov
xchg
push
test
add
dec
dec
xor
lock
inc
mov
xor
es
ret
bnd
sbb
fwait
dec
loope
push
inc
mov
push
jg
out
xchg
cltd
pop
jnp
hlt
movl
cltd
loop
and
fmull
cli
or
in
push
ror
cmp
jmp
outsl
ss
insl
mov
icebp
dec
or
mov
hlt
rorb
dec
test
xchg
jg
loop
cli
or
arpl
int
icebp
cmp
push
mov
ja
xchg
cmc
jno
daa
call
cmc
dec
sbb
push
push
outsb
push
add
or
mov
add
outsl
mov
imul
imul
pop
out
jmp
into
sbb
or
ss
dec
imul
mov
jbe
mov
mov
mov
jg
enter
loop
scas
pushf
insb
sub
test
and
add
mov
lret
sbb
add
jp
cwtl
or
mov
mov
in
dec
iret
push
or
aam
loop
or
test
test
leave
xchg
mov
and
mov
jg
iret
sbb
mov
cwtl
xchg
mov
pop
out
mov
cmp
mov
xlat
loope
xor
cmc
gs
jno
pop
mov
adcb
in
arpl
test
and
mov
push
sahf
adc
xor
jl
sub
xchg
dec
push
jmp
jnp
out
out
cmpsl
add
repz
inc
xor
arpl
pop
mov
test
sbbb
out
add
rcrl
adc
subb
aas
outsb
pop
lock
xchg
insb
mov
mov
rorl
scas
outsb
jg
push
mov
lea
bound
add
scas
dec
push
and
jp
xchg
pop
pop
mov
cmp
mov
outsb
mov
hlt
divb
loope
lods
imul
movsl
es
xchg
or
mov
sub
in
jns
dec
mov
mov
mov
pop
jae
pop
bound
lret
arpl
lods
mov
pop
mov
outsb
xchg
into
mov
cmc
and
int3
arpl
xor
pop
fs
es
push
outsl
scas
push
test
out
or
les
test
inc
jg
ljmp
cmc
dec
xchg
ret
test
ja
gs
and
or
test
in
adc
ja
mov
out
decl
jnp
jbe
fdivrs
stos
data16
ret
xchg
loopne
and
xchg
pusha
and
jno
pop
daa
xchg
and
cmp
std
bound
movsb
xchg
into
jbe
mov
bound
in
mov
loop
insb
fldcw
out
sub
jmp
or
or
mov
dec
mov
pop
adc
stos
clc
dec
lods
imul
ss
inc
iret
movsb
mov
icebp
mov
inc
push
xorl
cmc
cmp
add
add
sub
mov
imull
out
push
add
mov
and
xlat
sbb
xchg
jmp
sbb
repz
jmp
mov
inc
mov
sub
dec
pop
push
jg
into
pop
jge
in
sub
inc
ljmp
push
sbb
insb
jecxz
push
pop
test
outsl
sub
sub
jp
das
mov
out
dec
ret
pop
loop
lea
hlt
dec
outsl
sub
stc
int
or
jge
xchg
pop
pop
in
lds
pop
lock
je
jmp
sub
fldl
xchg
jl
into
push
loope
pop
or
sub
movsb
fnstenv
out
inc
mov
jp
dec
push
mov
daa
cmpsl
in
insb
loop
jbe
aam
ja
enter
jae
push
inc
in
dec
push
daa
es
push
icebp
dec
mov
ret
int
mov
jp
adc
call
mov
dec
lds
add
into
jg
test
es
sbb
dec
dec
pop
loop
sub
dec
jns
dec
mov
ret
push
add
sbb
scas
and
call
push
es
cmp
sbb
fisubrl
mov
in
hlt
ljmp
fsubs
call
adc
in
xor
out
mov
mov
aas
dec
mov
addr16
clc
loop
jl
adc
enter
push
imul
xchg
aas
clc
xchg
stos
mov
repz
jg
out
mov
add
add
xor
mov
jns
in
out
xor
data16
mov
frstor
pop
or
jbe
in
imul
cld
xchg
xchg
mov
and
dec
lods
pop
sub
outsb
sub
inc
fildl
jbe
scas
nop
xchg
inc
imul
mov
dec
loop
lock
push
call
inc
pop
xor
lock
inc
dec
xchg
jae
testl
dec
dec
dec
out
jge
sbb
je
dec
in
rolb
cmc
lea
push
xchg
movsl
jb
jb
outsb
daa
push
lock
mov
inc
jno
fidivrl
mov
ret
mov
inc
imul
dec
jbe
out
xchg
pop
fwait
aam
mov
pop
call
mov
notl
or
loop
std
in
push
outsb
add
push
lea
mov
addr16
loop
ljmp
test
clc
call
sbb
mov
insl
push
jo
xchg
inc
sub
cltd
jg
and
jmp
test
rorb
push
call
dec
pop
mov
outsb
call
jmp
fsubrp
aaa
mov
data16
pop
jmp
mov
fs
fimuls
loop
lret
stos
inc
xchg
sub
iret
mov
fsubr
push
outsb
dec
cmpsl
stos
fdivr
pop
int3
hlt
mov
sti
adc
mov
int3
xor
aas
imul
call
push
add
inc
lock
idivb
or
xchg
mov
xchg
call
outsl
out
pop
or
movsl
pop
mov
mov
dec
sbb
jo
daa
jne
push
push
add
mov
mov
clc
lods
gs
stos
out
xchg
and
outsb
and
arpl
enter
mov
sub
dec
mov
sub
insl
sub
jmp
mov
loope
call
push
movsl
cmpsl
insb
or
xchg
lods
shlb
in
stos
xchg
and
mov
and
mov
sbb
repnz
cld
fwait
inc
inc
cs
mov
js
mov
push
test
in
dec
test
insb
xchg
sbb
lahf
xor
sub
scas
enter
in
mov
ret
test
jg
inc
ja
in
add
mov
outsb
mov
in
lods
push
loopne
add
sbb
pop
aaa
in
push
insw
sub
cmc
cmp
dec
push
and
repz
loopne
pop
ss
int3
repz
daa
add
int
cld
les
add
dec
mov
shlb
push
sub
add
aas
jb
jae
loop
sahf
fsubrs
hlt
push
nop
bound
stos
jae
into
or
adc
or
adc
adc
mov
inc
stos
xchg
mov
xorl
cwtl
ja
js
stos
and
dec
outsl
outsl
loope
in
fisttpll
mov
mov
push
mov
sub
stos
scas
ret
cmpsl
mov
add
and
fidivs
and
in
pop
les
dec
dec
arpl
mov
scas
pop
out
int
mov
cmp
adc
mov
inc
adc
into
enter
ds
ja
loopne
lret
push
jns
cmp
cmp
dec
xor
jae
pop
sub
mov
in
imul
mov
mov
mov
jmp
int3
push
aam
mov
test
test
stos
outsb
mov
inc
jb
hlt
data16
dec
lea
out
jae
lods
mov
push
or
jmp
int3
call
test
clc
jle
dec
dec
push
jmp
out
test
pop
xorl
nop
test
iret
push
xor
jle
divb
sub
mov
jns
jg
or
sub
out
in
dec
jae
lods
lahf
loop
andb
dec
je
leave
testl
scas
test
inc
cmpsb
pop
cmpsl
xchg
in
cmpsb
das
sub
stos
scas
in
outsl
adc
lods
mov
pushf
dec
and
sbb
sbb
idivl
icebp
mov
xchg
and
mov
repz
dec
lock
add
mov
jecxz
pop
xchg
hlt
mov
fmull
inc
ja
push
ds
call
push
cmp
mov
sub
lea
dec
jmp
or
loop
add
xchg
stc
loopne
jl
daa
sti
or
jno
xchg
xchg
sub
call
push
and
cltd
leave
imulb
mov
pop
jno
scas
dec
sub
imul
sub
imul
lret
push
jmp
cmp
jmp
popa
or
lds
repz
out
enter
pop
push
into
dec
mov
inc
mov
sbb
in
out
mov
dec
daa
push
push
jle
push
outsl
sbb
popa
push
in
add
sbb
in
xor
mov
push
aas
push
stos
scas
mov
outsb
insl
sub
dec
adc
js
sti
repnz
ja
outsb
clc
loopne
test
test
mov
mov
add
int3
push
and
imul
scas
pop
dec
sub
lods
scas
sub
stos
sub
push
sbb
sti
pop
dec
das
sbb
xor
cmp
mov
jmp
fwait
sub
fsubrs
dec
iret
in
add
add
lods
push
or
lods
outsb
pop
lods
add
push
stos
movsl
sbb
add
outsl
in
sti
jmp
adc
sbb
clc
movsl
in
movsb
mov
xchg
aaa
xchg
in
dec
shlb
pop
shrl
lcall
out
cld
mov
lret
in
xchg
and
mov
test
dec
or
push
mov
xor
movsl
clc
ljmp
jecxz
xchg
mov
dec
jno
loopne
sub
popa
jns
mov
loop
insb
scas
test
mov
outsl
sahf
repz
xchg
jecxz
jb
enter
in
jmp
jl
jno
jno
repnz
or
inc
data16
or
push
cmp
sbb
add
loop
mov
sub
jg
aad
dec
insb
xor
or
sub
adc
loopne
jg
or
idivb
out
cmpsl
mov
in
test
jne
bound
ja
enter
push
sub
jns
mov
add
outsb
inc
sbb
xor
inc
push
push
fists
add
mov
or
mov
jl
fidivs
lret
xchg
pop
stos
push
gs
icebp
popf
fdivp
and
push
insl
fiaddl
cmp
dec
outsl
ds
jno
aam
xchg
jle
adc
xchg
inc
enter
push
mov
out
shrl
cld
inc
outsb
mov
data16
sbbb
sbbb
imul
icebp
fdiv
rcl
jle
jge
fimuls
in
data16
lcall
scas
sub
dec
jb
sub
xor
cwtl
out
push
pop
pop
jmp
push
dec
jmp
dec
inc
push
jg
inc
push
jbe
adc
into
xor
cmp
pop
dec
mov
or
mov
inc
out
mov
xor
lods
ja
cmc
call
push
push
fidivrs
enter
mov
out
jge
xor
mov
or
ss
in
loop
cmpsl
ret
jg
mov
inc
les
test
add
mov
push
lock
std
mov
dec
jle
or
dec
inc
ja
out
std
pop
in
les
cmp
mov
push
outsb
shrl
pop
nop
dec
in
inc
enter
xchg
inc
test
jns
fwait
mov
xchg
test
sar
out
add
aas
jmp
ljmp
loopne
pop
insl
mov
in
dec
sbb
xchg
or
jmp
or
loopne
cltd
jmp
dec
or
push
shrb
mov
xor
xchg
mov
imul
insl
clc
add
xlat
push
into
jle
xor
insb
into
dec
mov
fwait
in
push
mov
iret
decb
adc
or
sbb
ficoms
mov
mov
lret
cs
ljmp
mov
loopne
scas
pop
dec
push
pop
test
or
dec
sbb
xchg
out
scas
mov
cmc
iret
sub
pop
add
outsl
push
and
push
add
add
mov
call
ret
call
mov
adc
inc
je
lea
adcl
mov
stos
outsb
into
cmpsl
ret
pmaddwd
sub
call
movsl
test
out
aad
mov
aas
dec
addr16
adc
push
pop
fildll
std
outsl
push
dec
mov
cli
inc
mov
outsb
les
inc
push
std
pop
sub
cmc
std
loope
inc
imul
daa
dec
nop
fnsetpm(287
xchg
ljmp
pushf
pop
std
inc
scas
scas
movsb
icebp
mov
inc
jecxz
add
addr16
lea
or
xchg
jge
and
or
jno
cmp
add
xor
sub
sub
dec
mov
lock
and
scas
jle
shl
bound
cmpb
clc
mov
mov
aam
xchg
mov
sub
adc
outsb
shll
in
jp
fnstenv
cld
jp
mov
rolb
outsb
adc
dec
iret
xchg
std
in
xor
pushf
add
loope
and
loop
cmp
insl
jae
push
filds
xor
cld
jp
mov
imul
adc
and
jb
dec
mov
mov
call
insb
cld
lahf
adc
in
ljmp
jl
sbb
out
test
dec
test
loopne
imul
xlat
adc
or
iret
dec
cmpsb
ja
sub
xchg
sub
xor
jb
pushf
dec
xchg
gs
add
pop
js
insb
push
arpl
xlat
mov
xor
cmp
popa
stos
dec
add
push
daa
cmc
add
iret
inc
testb
pop
in
es
repz
arpl
outsl
daa
mov
imul
repz
insl
out
call
vmovlps
mov
add
fwait
in
push
mov
lds
fnstcw
data16
fcom
and
mov
or
add
je
rclb
std
push
loop
adc
push
imul
cld
std
push
sub
pusha
ljmp
inc
stos
sti
push
mov
jmp
insl
or
xchg
scas
insb
mov
addr16
sti
pop
daa
scas
in
mov
add
mov
xchg
scas
jecxz
daa
out
call
pop
ljmp
dec
jmp
pop
mov
test
ret
hlt
shrb
mov
out
sub
shll
xchg
mov
pop
lahf
xchg
in
mov
inc
ljmp
stc
mov
cmpsl
jb
cmpsb
lods
mov
shr
dec
add
sahf
clc
in
jmp
jno
inc
jmp
test
ja
cmp
pop
ret
xchg
sub
sub
rolb
mov
pop
add
stc
jo
add
ja
jg
leave
mov
jb
outsb
loopne
mov
mov
movsb
inc
das
loop
jl
dec
imul
data16
or
or
test
leave
lock
pop
mov
add
add
jl
inc
outsl
outsb
push
inc
dec
ret
shr
xchg
in
loope
insb
mov
jb
sbb
fldt
addr16
aas
dec
mov
clc
addr16
out
sub
push
aaa
sub
outsb
imul
push
jne
xchg
xchg
outsl
lods
outsl
lock
out
add
jns
adc
sub
jecxz
stc
mov
loope
ss
insb
jl
sbb
repnz
xchg
sbb
imul
push
sbb
stc
jmp
jmp
xchg
jb
lds
mov
dec
fstpt
jge
sbb
rorl
dec
sub
aad
mov
mov
mov
out
mov
test
and
movsb
fisttps
jbe
add
repz
push
xchg
push
mov
ss
cwtl
ret
leave
inc
pop
into
pop
scas
dec
arpl
sbb
outsb
sub
fisttps
subl
stos
orb
add
jge
or
bnd
into
add
imul
ljmp
mov
jae
dec
enter
jecxz
add
stos
jle
xor
inc
jmp
mov
arpl
adc
inc
xchg
ja
or
aad
scas
push
ret
push
cmp
xor
jne
xchg
test
cmp
push
jno
push
test
pop
mov
ja
ljmp
lea
fstpl
fildll
mov
fwait
add
mov
adc
imul
xchg
add
adc
stc
lock
xor
fistl
inc
pop
outsb
das
in
scas
call
mov
pop
or
ret
loopne
sbb
pop
or
test
dec
cmp
jg
in
lods
jl
outsb
outsl
fidivrs
test
dec
mov
inc
lds
fcoms
sub
sbb
arpl
daa
jmp
popa
sbb
inc
inc
push
jmp
cmpsl
xchg
stos
pop
lods
ja
outsb
fcoml
jae
cmp
inc
push
sub
out
out
loopne
int
out
jbe
fwait
sub
stos
insl
into
outsl
adc
insl
outsl
mov
loopne
pop
jmp
xor
scas
jg
inc
subb
adc
arpl
call
mov
mov
roll
mov
or
xchg
fisubl
fbld
dec
mulw
add
pop
fcomps
push
jne
jmp
imul
jg
repnz
js
mov
cli
insb
xchg
jbe
insb
repnz
jle
ja
add
jg
movsb
mov
jmp
aas
es
imul
imul
outsl
adc
call
iret
repz
xor
xchg
jg
in
lods
outsb
lea
out
sbb
mov
in
jne
mov
fs
add
pop
stos
testb
imul
inc
shlw
aas
test
dec
jge
jle
jg
fcoml
clc
push
mov
testl
add
jb
xor
sbb
scas
mov
movsb
insl
or
lcall
mov
add
jne
ljmp
add
in
ffreep
stc
xchg
popa
outsl
inc
pop
or
mov
les
lock
fisubrs
sbb
cs
psubd
outsb
jns
je
or
jl
mov
loopne
jns
add
leave
mov
push
cmpsb
movsb
pop
pop
jns
loope
arpl
outsb
sub
inc
in
jp
imul
mov
jb
sti
outsl
mov
adc
fistpll
ja
clc
xchg
fildll
ret
loop
cli
imul
jnp
bound
ja
dec
inc
clc
cld
dec
cmpsl
jb
xor
xchg
fisttps
jns,pt
out
clc
mov
or
xor
dec
jns
leave
cmc
insb
lods
xchg
inc
jb
push
mov
jmp
and
ja
jb
or
xor
outsb
imul
clc
mov
shrl
xchg
outsl
jmp
test
dec
push
jg
push
cmpsb
jns
push
outsl
jne
arpl
lds
stos
cs
xor
movsl
adc
lods
jecxz
ljmp
test
cmpl
outsb
pop
sarl
add
cmp
add
imul
ljmp
cmp
test
push
xchg
cmp
push
jbe
sbbl
jae
call
cmp
jle
xor
mov
mov
xor
fsubp
sbb
mov
imul
test
out
dec
fisubs
jg
leave
push
jbe
sti
call
outsb
and
mov
clc
outsl
int3
fdivrl
xchg
inc
dec
mov
add
pop
dec
xor
dec
ljmp
leave
or
repnz
push
dec
sub
in
arpl
mov
loopne
stos
loop
jmp
arpl
test
and
adc
fimuls
repz
adc
scas
call
cmp
push
dec
jl
bound
jmp
icebp
dec
or
out
lods
lock
xchg
sub
scas
jmp
scas
loopne
lret
add
lods
jae
jl
enter
pop
iret
in
outsb
cwtl
push
mov
jbe
inc
outsl
push
movsl
jg
movsb
add
inc
mov
fstps
lds
fsts
jmp
inc
lds
pop
out
scas
mov
jle
jle
lods
outsb
and
cmp
push
in
xchg
adc
mov
out
mov
dec
andb
mov
mov
xchg
test
mov
sub
ret
dec
cld
mov
jecxz
inc
mov
cld
pop
cmp
inc
and
repnz
movsl
loop
adc
jo
push
popf
lods
push
xchg
jbe
mov
imul
mov
mov
add
ret
addr16
sarl
fidivl
clc
push
insl
pop
stc
or
cltd
cmp
pop
insl
cmpsl
clc
mov
insl
sahf
and
sbb
roll
repz
mov
pop
mov
cmpl
test
inc
mov
jns
stos
mov
mov
lock
popa
sub
xor
pop
outsl
inc
movl
fimull
ret
insb
xchg
lds
das
push
sub
jmp
pop
repz
sbb
mov
imul
dec
xor
rclb
loopne
es
lahf
jb
mov
adc
fmul
cs
xchg
mov
loop
xor
sub
repz
or
mov
loop
repz
hlt
ds
mov
cmp
pop
sarb
or
popf
repnz
daa
xchg
es
dec
popf
ds
lods
in
sarl
mov
mov
mov
scas
push
gs
je
mov
fs
jnp
cmp
scas
dec
mov
mov
jg
in
jge
aaa
sub
nop
sbb
int3
mov
in
mov
enter
cmc
sbb
xchg
arpl
dec
or
push
lret
mov
arpl
jmp
in
mov
outsb
or
pop
daa
outsb
sbb
jmp
aam
jle
jg
push
out
lods
jg
inc
out
in
cmp
outsb
insl
jg
push
insl
lods
jg
inc
insl
in
add
into
xchg
mull
mov
ss
inc
add
mov
faddl
lret
pop
push
outsl
clc
mov
push
push
dec
pop
inc
bound
scas
ja
jbe
mov
and
pop
pop
dec
in
inc
cmp
out
testb
imul
push
insl
outsl
jl
fs
imul
cmp
stc
and
dec
dec
sub
ja
call
outsb
dec
mov
dec
sub
outsl
aaa
mov
pop
jo
addr16
sub
ret
negb
movsb
xchg
cmpsb
repnz
in
dec
shlb
leave
jmp
dec
mov
push
fldcw
lahf
jno
ffreep
movsl
cmc
cmp
movsl
pushf
out
inc
push
push
pop
or
add
out
push
repz
fisttps
cmp
mov
hlt
cmp
push
pmuludq
addr16
cmpsl
ljmp
sub
pop
xlat
jne
das
dec
insl
jle
testb
icebp
popf
xchg
cmovbe
mov
mov
leave
jne
and
rcll
gs
daa
lock
sub
jmp
jg
insl
sub
stos
repnz
repz
imul
sub
je
mov
test
mov
mov
fdivr
outsb
inc
repnz
insl
rorl
push
das
sub
lock
imul
in
stos
jae
out
cld
popf
cmpsl
or
ja
cmp
sub
xor
out
mov
jae
sub
arpl
adc
repnz
fnstenv
in
jb
push
cmp
pop
bound
out
aaa
jae
or
push
nop
add
sub
sub
shlb
les
cwtl
insl
repz
mov
push
outsb
mov
nop
aad
fcomi
in
and
inc
idiv
in
mov
push
dec
jge
adc
jae
and
jne
xchg
push
mov
ja
hlt
adc
leave
sub
dec
in
mov
or
out
int3
mov
push
and
mov
icebp
pop
scas
push
push
mov
fisubs
sub
mov
sbb
cs
mov
jne
int3
pusha
mov
scas
push
data16
push
lods
cwtl
jno
jne
add
call
les
inc
repnz
add
lahf
sbb
lods
xor
sbb
decb
in
sub
pop
shll
out
lahf
sbb
das
mov
shr
insl
add
into
dec
insl
sbb
add
add
shr
addb
and
pop
outsb
cs
out
inc
shrb
push
sub
outsb
xchg
sub
jns
or
cwtl
iret
xchg
shrl
pop
jbe
or
rorl
pop
out
leave
lods
imul
jl
pop
adc
and
insl
xor
push
add
pushf
sub
insb
fmull
jle
sub
xor
data16
cmp
pop
call
xchg
cmpsl
mov
cmp
and
cmp
mov
jae
in
inc
mov
in
out
out
mov
push
sbb
pop
push
sub
add
clc
outsl
push
in
arpl
push
les
in
in
lret
add
outsl
aaa
push
out
pop
cmpsl
fbstp
jmpw
fcompl
ljmp
mov
mov
dec
mov
test
lea
jmp
or
xbegin
popf
in
mov
nop
lock
out
push
add
stos
lods
outsb
lret
scas
push
imul
scas
xchg
scas
mov
adc
jg
call
cmp
push
jecxz
fistpll
push
out
pop
lods
pop
lock
inc
nop
cs
jnp
mov
mov
out
mov
dec
dec
pop
mov
dec
int3
gs
dec
push
clc
xchg
mov
pop
daa
mov
cmp
mov
jno
xchg
mov
outsl
mov
mov
pop
aas
pop
test
push
in
insb
out
loop
stc
fmuls
outsl
cmp
jbe
push
xor
punpckhbw
cld
dec
imul
lock
mov
or
into
pusha
clc
mov
mov
dec
inc
jg
call
movsb
sbb
xchg
outsl
nop
push
in
jmp
mov
sbb
cmp
or
movsl
cmc
jbe
sub
add
xor
mov
sbb
xchg
scas
pop
jg
pop
push
iret
out
int
movsb
push
xor
outsl
lcall
sub
into
jno
xor
fmul
mov
rol
pop
jno
mov
icebp
mov
shrb
call
test
lea
or
aad
push
xor
repnz
jns
test
pop
cmp
or
and
in
ja
std
or
mov
pop
outsl
into
insb
into
nop
inc
jg
dec
push
push
sbb
loope
cmp
data16
push
sub
iret
mov
push
outsb
les
dec
cmpsl
push
les
sbb
addr16
shl
push
sbbb
jmp
jns
mov
cld
mov
jo
loopne
frstor
xchg
add
pop
testl
fucom
mov
push
mov
sub
mov
sub
or
add
outsl
jns
out
aas
push
mov
ret
push
cmc
add
inc
daa
add
push
push
mov
scas
add
xor
call
mov
cmp
pop
inc
push
pop
mov
mov
bswap
ja
dec
mov
or
js
loopne
cmp
ds
jns
sub
sbbl
lea
sti
add
rol
mov
es
outsb
lea
enter
adc
add
stos
dec
daa
push
jno
test
sbb
sarl
test
pop
sbb
or
adc
jns
sbb
pop
addr16
insl
fildll
adc
fmuls
iret
push
pop
test
repz
sti
rep
mov
xor
jno
pop
dec
insb
jp
ja
and
dec
mov
adc
imul
scas
mov
punpckhwd
cmpsb
test
imul
lret
lret
mov
sbb
push
mov
shrb
inc
jae
mov
push
dec
inc
int
out
fisubs
mov
sub
data16
mov
push
xchg
dec
outsl
jecxz
mov
movaps
rcll
cld
scas
jmp
cli
mov
jae
pop
pop
mov
mov
rorl
pop
jns
cs
xor
rol
jnp
fldt
mov
test
cmp
cs
inc
mov
lcall
jmp
loopne
repz
mov
bswap
test
outsl
or
lret
popa
shr
jmp
test
pop
loope
cs
test
mov
jecxz
mov
sti
fcmovu
test
jmp
test
scas
or
jno
shl
data16
das
loopne
dec
stos
fdivp
dec
movsl
ret
ret
imul
xchg
xchg
xor
jge,pn
mov
jnp
or
call
lods
cmp
add
push
dec
out
add
add
inc
out
pop
aam
out
mov
fdivs
lods
or
dec
sub
call
arpl
repz
out
jb
and
divl
outsl
js
int
test
insb
dec
mov
pop
call
addb
jns
insl
in
outsl
bnd
cs
pusha
in
mov
jne
inc
add
jg
popa
andb
dec
dec
out
out
clc
data16
in
outsb
jnp
jno
test
fildl
dec
mov
out
pop
test
imul
imul
mov
cli
lods
dec
popa
test
dec
arpl
imul
jge
jmp
insb
outsb
lret
outsl
cld
and
insl
jp
call
out
dec
jnp
jmp
stos
sti
aaa
dec
out
outsl
call
scas
popa
or
cmp
dec
in
dec
jcxz
dec
lock
outsb
out
pop
push
ja
nop
std
dec
dec
lock
sub
dec
in
push
stos
addr16
jp
in
imul
sbbb
cli
cwtl
pop
dec
pop
js
movntq
clc
dec
jl
out
sti
dec
stc
pop
repnz
popa
dec
lahf
mov
lock
pop
jp
fs
imul
jmp
pop
in
js
jg
insb
dec
xchg
and
dec
jae
insb
outsb
mov
addr16
jg
in
xchg
push
jne
mov
lods
in
lock
insb
out
xor
dec
jmp
nop
ljmp
inc
jae
dec
add
lret
enter
jns
jge
dec
in
nop
popa
stos
dec
push
bound
loop
dec
jmp
dec
jmp
outsl
out
xchg
insl
je
popa
enter
outsl
repz
dec
in
cmc
push
inc
daa
in
dec
clc
outsl
out
mov
dec
jbe
dec
outsl
aad
jg
cmp
addr16
cli
mov
pop
imul
mov
mov
stos
je
prefetchwt1
das
shll
pop
test
div
xchg
and
mov
fmuls
pop
or
adc
jge
cmp
pop
jmp
stc
out
enter
push
pop
cmpsb
into
jg
stos
or
fiadds
inc
push
xor
scas
dec
dec
int
repz
sbb
out
lods
adc
push
mov
divb
nop
sub
int3
mov
repz
out
stos
icebp
fiaddl
aas
pop
xchg
mov
je
pop
outsb
sbb
lock
fucomip
outsl
ljmp
in
fistps
insl
dec
adcl
pop
or
push
outsb
mov
repz
shl
jo
push
add
jo
pop
and
pop
jae
push
dec
into
xor
sbb
test
daa
mov
shl
iret
jae
mov
popf
pop
mov
cld
lock
and
outsl
test
add
xor
push
xor
dec
enter
leave
jmp
popa
out
lret
test
aad
cmpsb
sub
les
adc
mov
test
jb
icebp
pop
aam
dec
in
jae
loop
xchg
jns
or
and
aam
jge
out
push
push
std
lods
outsl
sar
cmp
inc
cmp
cmpsl
loop
mov
test
sahf
sti
loope
dec
shrb
test
mull
cmp
sti
imul
cld
test
imul
dec
test
repnz
xchg
dec
jp
xlat
movsl
mov
into
pop
xchg
pushf
dec
sub
mov
sbb
dec
push
cmp
inc
clc
test
dec
int
xor
push
cld
pusha
jae
daa
mov
out
sahf
std
sbb
fldt
sbb
andb
aaa
ffree
adc
lods
pop
mov
jmp
dec
dec
xor
sbb
imul
test
mov
mov
arpl
rclb
add
cli
or
or
adc
js
out
test
cli
sub
rcrb
enter
jmp
je
js
ja
hlt
or
xor
add
inc
sbb
mov
out
dec
xchg
and
jmp
addb
inc
fsts
cltd
pop
inc
inc
jge
mov
dec
stos
mov
aad
pop
cwtl
lods
push
out
push
das
sub
sub
push
or
stos
and
jae
inc
fld
fcom
mov
and
fnstenv
jns
mov
jle
jmp
mov
inc
ret
cli
and
icebp
adc
mov
bound
ss
jne
xchg
dec
test
popf
popf
dec
cli
and
negl
outsb
pop
or
mov
arpl
pop
mov
fsubrl
push
pop
dec
int
push
test
repz
jae
dec
add
cmp
sbb
jae
xbegin
out
cmp
mov
lods
mov
stos
adc
movsb
inc
scas
mov
xchg
cwtl
dec
idivb
jmp
out
and
fs
mov
filds
shlb
out
xchg
pop
fsubl
mov
push
pop
andl
cmp
xchg
pop
in
mov
lods
test
in
divb
scas
mov
sbb
ljmp
movsb
ss
repnz
jae
dec
imull
jl
lods
scas
scas
mov
cmpsb
or
addr16
adc
cmp
cld
clc
jbe
sbb
pop
out
daa
push
sbb
sti
popa
jge
call
mov
popa
data16
test
stos
fcmove
pushf
mov
cltd
jns
pop
pop
dec
mov
mov
insl
mov
aam
rorb
mov
cs
aad
stc
xor
mov
test
lods
pop
mov
je
pop
inc
push
jge
ljmp
roll
outsl
je
xchg
scas
out
jmp
lcall
insb
mov
scas
test
mov
addr16
mov
xchg
adc
mov
adc
xor
xchg
std
jl
popa
dec
pop
xor
lea
sub
sub
dec
int3
or
mov
notl
sbb
imul
faddp
mov
jo
push
arpl
repnz
jmp
outsb
jns
jg
test
mov
sahf
popa
hlt
dec
aam
jae
push
mov
xchg
add
push
test
dec
imul
or
pop
push
inc
cmp
addr16
repz
in
dec
jae
lret
nop
js
jne
stos
cwtl
mov
imull
outsl
push
push
and
out
add
mov
lahf
add
stc
pop
pop
add
cltd
pop
cmc
push
shll
jae
test
add
test
aaa
ss
pop
ja
out
arpl
mov
ja
cltd
jno
cmp
xor
hlt
jae
test
outsl
add
clc
popf
push
sub
dec
jg
clc
stos
inc
push
pop
insl
cmpb
cmp
clc
pop
test
mov
mov
mov
outsl
mov
ret
sub
out
push
sbb
push
nop
repz
fdivr
loop
lret
dec
decb
lahf
hlt
stos
scas
scas
jmp
out
push
pop
repz
push
inc
mov
dec
inc
xchg
lret
test
push
jge
js
pop
test
popa
scas
data16
test
es
sub
push
hlt
adc
mov
repnz
ror
ja
xchg
addl
jo
in
and
int3
dec
push
jmp
mov
xchg
push
es
pop
mov
pop
adc
mov
sub
neg
push
movb
jbe
std
dec
mov
nop
mov
addr16
out
xchg
gs
movsl
xchg
jmp
rcrl
xchg
fisubrl
pusha
fsin
inc
jbe
xor
dec
in
sub
ja
hlt
es
bnd
test
ja
push
adc
xor
jns
nop
outsb
and
addr16
lret
mov
out
add
mov
outsl
into
or
clc
cmp
stc
xchg
scas
pop
mov
imull
mov
hlt
sub
cmpsb
es
outsb
enter
inc
movsl
xchg
arpl
out
gs
xchg
push
leave
add
jecxz
dec
jp
push
adc
add
mov
test
ljmp
xchg
mov
in
jbe
in
jmp
sub
xchg
icebp
orb
dec
xchg
sub
sub
js
out
mov
jg
push
in
pop
jb
pop
pop
fs
loopne
daa
in
imul
stos
arpl
sub
pop
jecxz
fs
dec
out
incl
loope
into
in
movsb
jge
dec
push
sbb
jg
push
aad
loope
pop
idivb
inc
add
or
mov
fistpll
ja
inc
push
dec
in
lcall
imul
bound
clc
rsm
jge
pop
sti
std
data16
inc
jbe
dec
push
sbb
pop
call
test
clc
out
push
ret
xor
dec
arpl
sbb
pusha
mov
mov
das
shlb
repnz
lock
out
stos
xchg
jb
jle
repnz
std
gs
mov
mov
jb
stc
fcmovb
pop
nop
fsubrl
jmp
negb
outsl
neg
pop
mov
test
jp
mov
daa
jle
pop
or
jns
jmp
jl
out
xchg
test
ja
push
ljmp
into
dec
sti
mov
mov
mov
clc
adc
sub
jns
js
je
mov
clc
movsb
out
pop
sub
ljmp
xchg
push
push
jbe
loope
dec
int
idivb
cltd
outsb
jne
ja
mov
cmc
in
popa
js
test
clc
outsl
mov
mov
clc
rorb
mov
jg
repz
int3
dec
jb
jns
das
aas
test
ja
jb
mov
repz
ja
icebp
loopne
lock
push
pop
out
lock
or
imul
out
mov
dec
out
and
lret
dec
outsb
mov
sub
pop
lods
insl
sub
in
jmp
push
outsb
pop
ja
inc
repnz
mov
decb
sbb
out
jmp
pop
call
lods
jg
in
jmp
push
outsl
adc
bound
adc
pop
add
cld
clc
mov
clc
jg
in
jmp
push
outsb
in
cmc
inc
repnz
leave
jle
pop
out
fimuls
mov
sbb
mov
dec
out
gs
pop
aas
test
cmc
test
mov
loope
mov
push
outsb
in
pop
in
popa
enter
ja
push
sub
jecxz
pop
divb
repz
loop
outsl
daa
cmp
jmp
push
outsb
mov
sub
aas
test
ja
push
jecxz
add
pop
in
dec
jg
mov
sub
in
jmp
push
dec
jb
add
mov
push
stos
jge
pop
repz
jle
sbb
sbb
jl
insl
push
loop
cld
loopne
jmp
dec
jbe
mov
clc
sub
jg
in
jmp
push
outsl
jno
call
mov
jp
mulb
aas
xchg
mov
clc
popf
stos
jns
mov
loope
stc
sub
in
add
mov
in
dec
mov
std
out
outsb
iret
loop
sbb
mov
xor
xor
push
and
xchg
add
jg
add
icebp
imul
out
pop
mov
test
push
push
inc
jg
out
pop
les
and
fldl
cwtl
dec
pop
pop
cmp
cmp
fisubrs
fsubrs
mov
insb
out
outsb
insl
fcompl
push
sti
fmuls
in
and
fildl
in
sub
nop
push
in
hlt
fcoml
out
addr16
in
sub
mov
inc
popa
mov
fstl
push
xchg
in
ret
inc
jecxz
push
cmpsb
lock
into
shll
inc
ror
decb
outsb
cli
inc
insb
movsl
dec
pop
jne
xchg
jmp
imul
cs
dec
cld
insb
test
xchg
inc
adc
scas
call
mov
fwait
pop
stc
xchg
lods
mov
stos
lret
dec
loopne
aad
dec
xchg
add
aad
mov
sbb
add
xchg
sub
sbb
xchg
sbb
cwtl
int
cmpsl
loop
insb
aam
mov
in
arpl
mov
sub
andb
hlt
cmpsb
in
je
call
jecxz
in
in
dec
in
mov
and
xor
push
jnp
repnz
sub
inc
enter
fnstenv
in
sbb
mov
mov
arpl
loop
shr
xor
cltd
jbe
dec
insb
jl
insl
fsubrs
pop
cmp
cmp
mov
sbb
sub
insb
jno
sub
jmp
ret
inc
and
jge
sbb
sub
test
jbe
pop
mov
sub
sbb
pop
imul
dec
xchg
cmp
add
loopne
int3
adc
mov
daa
insb
hlt
sbb
in
insb
pushf
out
cli
ljmp
ds
lret
scas
addr16
mov
mov
sub
mov
push
out
in
and
xchg
notl
fildll
add
arpl
sbb
scas
mov
or
cmpl
daa
insl
out
mov
cmp
sti
ja
mov
mov
in
inc
and
add
in
sub
dec
in
jle
fildl
outsb
dec
pop
pop
mov
iret
leave
in
les
pop
xchg
push
or
rol
inc
pop
imul
jle
pop
call
scas
jecxz
dec
jmp
test
mov
cwtl
cli
in
out
inc
imul
std
in
jp
dec
loop
jg
mov
insl
add
mov
push
aad
gs
bswap
sarl
push
loop
jno
dec
outsb
sub
and
fdivr
pop
out
sahf
add
pop
out
jg
inc
in
sbbl
ss
outsb
sub
outsl
and
dec
je
out
int
jp
insl
xchg
xchg
in
mov
clc
test
jle
jbe
mov
negb
outsb
arpl
or
lock
icebp
imul
sbb
jmp
bound
inc
lea
in
pop
pop
cmp
pop
movsb
les
dec
ljmp
bound
mov
and
cmp
mov
add
daa
insb
cmp
dec
dec
lock
cmp
pop
push
and
lods
out
pop
sub
xchg
rcrl
out
jne
or
jmp
es
ret
stos
mov
andb
fldt
enter
std
out
mov
dec
or
loope
in
cld
push
fadds
jp
test
iret
mov
cmc
stos
aad
fldt
test
pop
fbld
test
xor
lea
mov
xor
dec
in
lods
dec
xor
xor
cmpsb
popl
rorl
jl
mov
and
jno
xor
loopne
xchg
jge
jmp
push
xor
and
dec
xchg
scas
insl
push
jbe
aas
jae
pushfw
inc
repnz
mov
jnp
sbb
xchg
push
dec
arpl
pop
and
movsb
aas
jnp
fiadds
xor
push
inc
outsl
dec
icebp
mov
cmp
push
in
out
daa
mov
mov
std
xchg
lahf
lea
sti
lahf
lods
ret
fsubrl
pusha
icebp
mov
mov
jno
cmc
pop
movsl
pop
repz
fistpl
cmpsb
movsl
out
iret
mov
sbb
cltd
mov
jg
test
sbb
mov
xchg
jnp
in
shll
and
addr16
cmp
fst
ljmp
and
cmp
hlt
lahf
push
mov
adc
xor
arpl
int3
or
arpl
ret
lock
pop
shrl
cvtps2pi
jae
gs
leave
jnp
clc
jg
enter
sub
dec
jmp
out
outsl
sub
outsl
sbb
push
aam
and
dec
cmp
addr16
movsb
shlb
dec
arpl
fstl
xor
sti
std
mov
ja
sarb
jp
jbe
dec
mov
jg
hlt
imul
cmpsl
dec
iret
in
pandn
stc
dec
incl
outsb
dec
xor
jns
popf
pop
ja,pn
inc
jno
call
jle
inc
sbb
repnz
push
rcl
push
imul
mov
into
cmp
add
out
clc
rep
jle
outsb
repz
ja
jg
jae
int3
adc
xor
fs
outsb
xor
iret
out
out
lcall
sbb
outsb
jg
lods
jbe
in
push
and
jae
sub
call
push
jecxz
mov
jg
mov
mov
add
xor
jg
arpl
lret
les
push
mov
xchg
mov
mov
cld
dec
sarb
imul
insb
cmp
sbb
push
js
daa
inc
test
push
popa
in
jp
jecxz
std
jb
dec
in
or
in
mov
out
popa
xchg
jmp
data16
hlt
out
outsb
data16
fdivp
ja
adc
fcmovnbe
or
mov
stos
shll
push
mov
adc
nop
sub
mov
sbb
pop
inc
out
leave
mov
mov
mov
outsl
aam
sahf
xchg
shll
jecxz
data16
sbb
jbe
jb
xchg
or
push
jle
imul
jmp
dec
outsb
stos
gs
arpl
mov
add
and
mov
int
dec
lret
pushf
jmp
lret
jle
add
pushf
mov
pop
clc
movsl
mov
or
loop
mov
ja
jns
jbe
into
adc
pop
xor
test
dec
into
fnstcw
add
or
pop
mov
jmp
je
jns
dec
xor
outsl
dec
mov
mov
lds
ret
call
pop
dec
lds
mov
es
adc
mov
mov
or
test
jg
mov
ss
push
cmp
and
dec
mov
icebp
jns
mov
shrb
push
pop
jb
iret
mov
adc
lods
and
subb
and
repnz
dec
and
outsb
fstpt
sbb
in
sub
inc
mov
jg
inc
dec
outsb
mov
scas
loop
int
stos
lods
sahf
push
mov
push
xlat
mov
cmc
outsl
cmp
add
fiadds
cmpsl
adc
add
jge
xor
mov
lock
pop
addr16
dec
jp
inc
adc
test
add
cltd
rep
nop
imul
jmp
jmp
movl
imul
xchg
xchg
jno
hlt
cli
add
addb
add
pop
jns
aam
push
aad
in
nopl
sub
popa
gs
push
das
std
out
in
ret
jae
insb
jp
cwtl
fldenv
mov
fildll
jnp
cli
mov
xchg
notl
nop
addl
push
lret
rcrb
loopne
adc
arpl
xchg
add
and
mov
dec
and
aad
cmp
dec
lret
aas
rep
fs
lods
mov
jb
push
nop
mov
push
icebp
or
nop
cmc
push
sti
pop
gs
testb
adc
pop
addr16
nop
sub
mov
and
das
ret
jb
mov
mov
test
mov
shrl
ljmp
cld
cli
xchg
cmpsb
jns
add
scas
pop
lock
bound
enter
ds
lret
cmpsl
cmp
sti
call
lea
lods
addb
mov
push
test
dec
icebp
pop
sub
mov
and
dec
out
insb
ret
push
ss
dec
jae
scas
pop
outsb
std
sti
cltd
insb
push
in
out
jnp
jg
bound
xchg
mov
sub
ljmp
inc
pushf
loop
out
ja
out
lret
pop
test
dec
or
mov
push
vaddpd
jp
shlb
mov
cmpsb
in
imul
imul
mov
push
jnp
stos
jae
jnp
add
icebp
pop
adc
push
push
dec
xor
and
lock
dec
cmpsb
outsl
scas
dec
outsl
dec
fsubr
add
jb
dec
jno
and
outsl
out
dec
and
daa
out
mov
jl
test
sub
test
jnp
add
sbb
pop
int
mov
rorb
pusha
jne
mov
dec
into
ret
adc
aas
enter
js
leave
jns
cmp
jae
adc
jnp
daa
ljmp
das
jnp
dec
mov
rol
sbb
das
xchg
nop
adc
sub
adc
xchg
mov
sbb
imul
cmp
add
sbb
jno
cli
dec
outsl
mulb
inc
jecxz
ret
divb
mov
mov
scas
call
sbb
dec
test
mov
jge
popl
push
mov
add
lods
cli
daa
testb
cmp
daa
sub
into
fidivrl
mov
test
cltd
les
ja
jg
loop
xor
ljmp
dec
mov
mov
push
cld
shll
inc
add
cmp
cmp
xor
inc
pop
inc
jne
test
in
xor
xchg
pop
or
clc
and
cmc
stc
dec
jge
js
fsub
imul
mov
dec
out
dec
or
jmp
adc
xor
push
fs
xchg
outsl
inc
xchg
test
dec
jb
cmc
mov
dec
mov
jmp
repz
adc
sub
mov
addr16
pop
push
ja
dec
outsl
cmpl
imul
fisttps
mov
out
stc
dec
jns
scas
xor
push
lret
xchg
inc
repnz
int3
jnp
jae
imul
outsb
stos
repz
dec
jmp
outsb
jg
xchg
insb
pop
mov
imul
pop
scas
bound
and
xchg
outsl
das
push
loopne
in
inc
pop
add
dec
lret
xor
test
xor
decb
arpl
mov
daa
xchg
dec
hlt
aaa
push
sbb
mov
and
mov
ja
mov
and
fstl
xchg
add
jp
sub
adc
and
push
loop
xchg
fadds
cli
gs
inc
inc
adc
dec
hlt
push
mov
cld
std
cmpsl
into
loopne
add
out
scas
shl
dec
into
lock
mov
inc
mov
or
fs
lret
mov
dec
jp
nop
mov
cli
sbb
test
push
mov
outsl
outsl
ds
jb
fwait
adc
dec
cwtl
push
out
xchg
xor
lcall
jp
andb
hlt
gs
mov
cmp
xchg
movsl
pop
mov
pop
dec
inc
dec
idiv
out
mov
data16
lret
lods
andb
mov
negb
outsb
fsubrl
dec
sub
iret
and
push
inc
aaa
adc
enter
xchg
adc
fimull
dec
nop
scas
clc
adc
sti
out
ss
ja
outsb
testl
cmp
movsb
ret
bound
jno
pop
jbe
jl
out
in
mov
movsl
cmp
cmp
dec
xor
stc
pushl
jae
cmp
mov
inc
add
scas
test
lock
int
rcl
pop
cmp
jecxz
cmp
pushf
cmp
dec
imul
push
cs
mov
mov
jge
sbb
aas
lock
push
push
mov
cmpsl
mov
cmp
dec
lea
mov
mov
dec
add
out
cli
dec
jae
inc
in
jne
out
jns
dec
dec
inc
arpl
and
mov
jg
cwtl
inc
sub
in
jle
icebp
fsubrl
call
mov
jg
mov
push
fsubrl
call
fsubrs
lcall
mov
push
icebp
shl
cmpsl
xchg
test
push
scas
lret
sub
loop
or
iret
mov
cwtl
pop
jmp
dec
push
not
outsb
jle
nop
jg
pop
lock
stos
mov
stc
out
fwait
ja
clc
pop
push
lods
inc
insb
insl
mov
xor
push
scas
icebp
sbb
cmp
pop
out
push
mov
pop
addr16
je
jmp
out
ljmp
mov
and
lods
call
dec
loop
stos
ljmp
xchg
inc
leave
mov
daa
mov
call
inc
clc
aas
jle
shlb
cmp
icebp
and
addr16
sub
push
mov
or
hlt
out
fwait
adc
in
push
push
sub
repnz
dec
ja
aad
lock
imul
sub
inc
jne
into
xor
jbe
pop
sub
mov
mov
into
dec
loope
loopne
outsl
xor
nop
push
outsb
in
mov
mov
mov
rol
mov
inc
pmulhw
mov
jns
lds
ja
fs
push
fidivrs
mov
loop
das
int3
cltd
repz
dec
push
mov
bound
scas
call
cmpsb
lock
mov
outsl
mov
scas
fs
jns
mov
pusha
mov
rcll
enter
pop
vmovss
and
mov
mov
mov
jno
decb
fistps
dec
fisubrs
push
ds
jg
pop
call
xor
ret
aas
jnp
adc
mov
jg
mov
ret
pop
dec
cmpsb
aad
xchg
add
fdivrl
jae
add
ljmp
cltd
or
ja
pop
das
insb
iret
shrb
dec
xchg
mov
js
jg
jle
jae
loopne
push
lcall
stc
daa
sbb
pop
jns
in
add
clc
movsl
inc
cmpsl
mov
dec
mov
lret
cmp
mov
jge
aaa
test
inc
loopne
mov
or
out
push
push
or
cwtl
inc
cld
cs
xor
sub
lock
push
jns
rcr
pop
test
cmpsb
jnp
ja
inc
jp
arpl
cmpb
out
sbb
sbb
pushf
and
scas
mov
lahf
jp
and
outsb
mov
push
out
bound
jae
int3
fwait
dec
adcl
stos
lods
dec
dec
call
scas
in
in
test
lods
inc
call
out
jle
aad
call
aam
push
movaps
enter
imul
insl
lods
cld
stos
daa
mov
lods
shrb
aam
int3
lock
ljmp
sub
in
pop
mov
dec
sub
push
addr16
das
outsb
imull
push
outsb
mov
lock
leave
lods
dec
call
inc
scas
fs
add
pop
ret
call
scas
jge
sbb
push
ds
pop
inc
hlt
jl
insb
daa
rorb
clc
lock
push
dec
dec
insl
scas
jmp
mov
mov
out
fwait
adc
cmp
popa
arpl
mov
mov
ret
jb
mov
daa
decb
bound
and
faddp
mov
outsl
loop
inc
xor
mov
xor
icebp
test
lahf
jns
enter
pop
mov
xor
out
ljmp
push
cmpsl
ljmp
outsb
bnd
push
shrl
xor
dec
adc
jno
jne
clc
dec
lock
mov
addr16
sbb
mov
movsb
pop
mov
cmc
inc
out
mov
rclb
jmp
pop
adc
repnz
outsl
dec
rorb
stc
lahf
push
loopne
adc
jp
cmp
into
cmp
rcrb
divb
dec
aaa
mov
adc
xor
divl
int3
sahf
sbb
movb
mov
push
imul
outsb
ret
xor
aas
inc
mov
mov
bound
lock
int3
mov
pop
pop
aaa
add
je
int
sub
or
ja
push
dec
je
push
lock
xchg
inc
xchg
popf
mov
sbb
pop
pop
test
out
repnz
into
pop
aam
push
out
xchg
cli
inc
or
imulb
jg
mov
mov
mov
jbe
jle
aas
mov
dec
test
push
xor
or
addr16
ds
xor
cmp
into
js
lahf
cwtl
pop
test
sub
int3
mov
dec
dec
xor
dec
jmp
mov
rorl
cwtl
outsb
test
mov
mov
cli
out
push
rcr
cmpb
dec
push
dec
adc
int
jg
testb
dec
mov
ja
popa
add
aas
sbb
or
fwait
push
jg
push
adcb
jae
xchg
or
push
repnz
outsb
outsb
adc
test
xchg
dec
add
shll
dec
pop
mov
in
decb
test
test
or
out
cmpsb
sub
dec
xor
or
jns
mov
and
add
lods
sbb
call
scas
push
in
adc
xchg
sub
outsb
icebp
lods
push
sub
pop
outsb
das
dec
test
pop
scas
mov
test
jle
pop
sbb
aad
fcomps
in
dec
mov
pop
pop
imul
out
mov
out
flds
pop
cltd
push
sbb
cli
sub
push
fsubl
sbb
cmc
dec
hlt
addr16
repnz
icebp
in
lock
call
movsb
in
dec
outsb
in
insl
ds
sub
outsb
xor
xor
cld
lods
dec
jmp
lock
and
icebp
daa
pop
iret
das
scas
jno
daa
sub
negb
push
mov
push
hlt
scas
sbb
xchg
add
jl
xor
fdivr
xchg
mov
loop
jg
stc
dec
pop
xor
mov
dec
fmuls
jmp
xorb
shr
in
xchg
push
mov
lea
lods
mov
mov
or
cmp
push
adc
call
scas
mov
loop
xor
lock
inc
shrl
jecxz
shl
inc
jl
outsb
lods
jecxz
jnp
loopne
xchg
xor
jns
test
pop
push
xchg
lahf
xor
xor
test
ffreep
xchg
mov
imull
jg
ss
cs
jae
jp
jle
scas
mov
inc
jle
icebp
outsb
adc
push
iret
imul
sbb
lahf
cmpsb
out
shld
add
scas
sahf
loop
and
inc
icebp
dec
cs
fs
es
push
jno
cwtl
insl
xchg
movsl
call
ret
into
jmp
add
push
dec
pop
cwtl
lea
mov
daa
outsb
mov
and
sbb
outsl
jmp
mov
pop
jg
sbb
push
nop
addb
jno
cmp
mov
or
xchg
rclb
lea
int3
aas
dec
mov
cltd
sbb
ljmp
adc
cmpsb
outsl
int
xlat
shl
mov
lret
loop
add
in
outsl
jge
push
sti
out
xor
push
jmp
dec
repnz
popf
outsl
gs
mov
cmp
pop
subb
inc
int
outsl
adc
sub
dec
sbb
adc
pop
popf
into
push
dec
lahf
push
fmuls
jge
push
mul
dec
jp
or
enter
inc
call
nop
shlb
pop
cltd
in
js
or
dec
mov
ljmp
xchg
mov
sub
loopne
xlat
addb
or
xchg
stos
adc
pop
pop
cmp
mov
test
insb
test
mov
div
testl
in
push
pop
leave
inc
jg
xor
sub
dec
push
loope
insl
mov
fwait
push
dec
mov
and
nop
mov
lahf
ds
lahf
xor
sbb
dec
or
mov
dec
out
jmp
add
loopne
stc
imul
bound
lahf
pop
pop
cmpsl
jg
push
outsb
stc
mov
pop
mov
jecxz
dec
lahf
xchg
enter
pop
movsl
outsb
sbb
adc
stos
xchg
xchg
dec
jp
cmc
bound
add
lea
addr16
xchg
sbb
nop
sub
dec
pop
mov
stos
push
inc
xor
negl
mov
sbb
scas
add
movaps
mov
pop
sub
and
fmull
dec
ja
insb
lods
adc
jb
sbb
ficomps
push
xorl
and
sub
clc
ret
jecxz
dec
push
add
mov
nop
test
mov
imull
int
jp
jg
inc
nop
scas
loopne
inc
fs
out
loop
pop
test
sbb
jle
pop
xchg
out
in
lods
jg
xor
ja
ror
push
data16
lods
push
push
movsb
subb
insl
mov
rorb
mov
in
fld1
daa
xlat
out
mov
xchg
loopne
aas
lcall
mov
jae
sbb
ret
es
movl
mov
xchg
mull
fisubs
test
out
andl
pushf
lds
out
fmul
add
fnstcw
or
addr16
cmpsl
sub
mov
mov
sbb
push
outsb
or
push
and
out
paddsb
out
fisubl
pop
int3
bound
in
jmp
data16
xchg
test
sbb
push
lock
or
das
cmp
shrl
sahf
cmp
js
sub
dec
int3
push
test
into
push
sbb
jg
push
test
stc
sbb
je
mov
outsb
js
push
jecxz
out
aas
test
cmp
or
mov
and
xor
loopne
ss
outsl
lods
push
pusha
mov
mov
mov
mov
dec
out
out
repnz
pop
dec
xchg
push
call
dec
loop
loopne
cltd
pop
push
mov
dec
out
incb
imul
lahf
mov
and
test
clc
notb
xchg
outsb
flds
jne
sbb
inc
jecxz
add
test
xor
aas
scas
push
sti
hlt
mov
clc
repz
inc
push
push
aam
push
hlt
jp
jnp
jp
add
xchg
pop
dec
mov
push
call
scas
rorl
or
xchg
movsb
xor
xor
fldenv
jge
inc
jg
push
xor
adc
push
push
cld
push
lods
outsl
out
adc
mov
fdiv
in
dec
inc
add
dec
iret
push
into
adc
cmc
in
shrl
mov
xchg
add
repz
xor
pop
outsb
sub
in
ret
fs
in
sti
addr16
adc
sti
inc
test
out
clc
shll
add
push
add
add
push
lods
outsb
inc
roll
mov
cltd
mov
rcrl
add
cmp
iret
add
pop
ret
mov
stc
gs
outsb
fcompl
in
jno
loopne
add
jno
lret
cwtl
add
jl
daa
and
mov
in
cmp
mov
shl
jae
dec
mov
icebp
xchg
xchg
jno
movsl
aaa
sbb
push
and
mov
aam
stos
mov
out
sub
mov
rorl
outsl
adc
mov
hlt
mov
xor
sbb
inc
pop
ficomps
dec
pop
lods
shr
pop
pop
pop
pop
scas
pop
in
pop
cmpsl
pop
in
arpl
inc
push
scas
hlt
mov
jge
xchg
jecxz
outsb
jg
in
jle
in
call
out
imul
outsl
jmp
fdivs
ja
pop
push
bound
dec
sbb
fcoms
push
vmresume
inc
pop
notb
call
scas
test
in
ret
faddl
ljmp
dec
rolb
push
das
out
cmpsl
nop
stos
mov
push
xor
icebp
mov
push
and
in
inc
dec
hlt
mov
xchg
mov
clc
gs
arpl
outsb
sub
pop
mov
fcomi
dec
mov
or
cli
jg
jmp
insb
cmp
dec
dec
sub
push
xlat
cltd
movsb
jo
mov
pop
sub
adc
xor
outsl
clc
jnp
shll
insl
jns
fsubp
pop
mov
ret
or
push
es
jmp
cmp
aam
cmp
cli
pop
inc
xor
and
pushl
mov
icebp
nop
aas
icebp
push
aas
push
mov
or
imul
stos
lahf
inc
dec
mov
or
xor
cltd
pushf
push
popa
mov
and
jp
dec
cli
out
add
cmc
mov
adc
xchg
outsb
aad
jne
push
pop
mov
mov
pop
and
arpl
push
lods
data16
jg
inc
movsl
add
frstor
inc
js
loopne
loop
enter
mov
clc
nop
movsb
mov
lock
mov
repz
or
out
cmp
xchg
and
inc
mov
rcl
mov
pop
shrb
lock
jl
loop
ret
daa
rcl
pop
lods
shll
into
push
das
in
dec
call
scas
imul
add
xchg
mov
roll
jbe
and
repz
sbb
std
aad
andb
daa
push
rcrb
mov
inc
cli
mov
movsbl
jmp
and
sub
sub
cmpsl
notl
jno
xor
mov
or
sub
pop
adcb
ja
call
add
lea
dec
call
repz
jp
push
lret
nop
jb
lods
jae
push
loop
out
leave
dec
xchg
push
add
js
rorb
stc
dec
call
lods
ja
hlt
dec
mov
loopne
movsb
pushf
push
inc
jp
and
adc
jno
gs
dec
test
add
jecxz
fmull
mov
cmp
jp
decb
jp
hlt
enter
cmpsl
ss
gs
insb
and
out
addr16
cmp
xor
cmp
popa
xchg
es
inc
inc
cmp
in
dec
push
fistps
sub
dec
punpckhbw
xchg
inc
loope
and
cmpsl
and
fsubr
lea
add
or
bound
or
fstpl
or
mov
rep
mov
cli
fldl
repnz
aaa
sbb
mov
popf
mov
std
push
movb
out
xor
jle
mov
out
frstor
adc
ret
data16
popa
out
adc
dec
mov
subb
or
adc
insb
pop
lock
outsb
outsb
jb
lods
jmp
popa
mov
insl
js
out
xchg
mov
xor
and
stc
push
jmp
jb
dec
jl
repz
insb
xchg
lods
dec
bnd
dec
mov
out
insl
outsl
mov
insl
repnz
outsl
jge
lock
out
in
dec
sti
xlat
dec
out
dec
pop
adc
xchg
mov
dec
sti
and
jns
pushf
jp
ja
cli
pop
dec
jns
stc
scas
repz
fildl
outsl
jp
add
js
pop
ja
jmp
mov
push
out
gs
jg
shl
imul
lahf
bnd
pop
cli
and
push
jns
sti
das
pop
data16
cli
scas
jbe
jmp
nop
mov
dec
jl
dec
cld
call
subb
pop
jne
cmc
lods
out
scas
lock
hlt
dec
add
jl
pop
dec
ljmp
jnp
pop
sti
dec
jp
jb
cld
icebp
dec
ljmp
loop
dec
popa
pop
jl
jb
icebp
pop
out
dec
imul
outsl
out
mov
lods
in
call
dec
notl
lods
pusha
jmp
dec
out
call
lea
sub
jecxz
pusha
bound
jb
repnz
push
lods
dec
imulb
fldenv
jl
dec
cld
pop
imull
iret
outsb
lock
outsb
fs
insb
insb
jne
call
mov
push
dec
popa
dec
push
jle
nop
lea
dec
stos
dec
push
sti
dec
insb
clc
mov
add
dec
insb
mov
out
add
outsb
cmc
dec
lods
std
flds
sub
popa
sub
jecxz
in
clc
les
leave
into
dec
xor
lret
outsb
es
std
jo
push
outsl
push
imul
push
pop
pop
jmp
ret
aas
cs
and
imul
out
cwtl
jge
lret
mov
insl
outsl
inc
dec
push
data16
test
popf
call
pop
sbb
outsl
mov
movsl
popf
or
or
adc
jle
jmp
push
outsl
pop
cmpsb
jb
out
mov
es
cld
out
xchg
clc
clc
out
xchg
call
pop
daa
push
cwtl
nop
push
jne
adc
mov
adc
xor
cltd
int3
pop
int3
adc
push
sti
cmp
nop
dec
jl
mov
mov
xchg
insb
mov
test
dec
bound
mov
pop
sub
dec
dec
inc
in
lods
cmpsb
pop
jmp
push
shrb
loopne
das
jg
addr16
mov
in
iret
add
jno
out
test
lods
push
sub
push
mov
jle
sahf
ja
inc
movsb
into
mov
ja
enter
mov
dec
out
dec
faddl
jb
mov
mov
lea
mov
out
pop
sub
scas
arpl
adc
repz
mov
dec
xchg
mov
mov
sbb
cld
scas
lock
add
dec
mov
ret
push
movsb
lods
dec
das
dec
out
dec
ljmp
arpl
mov
insb
sub
xor
out
call
outsb
iret
jg
push
std
and
mov
enter
movsb
fadds
pop
dec
jg
push
dec
outsl
insb
push
dec
into
sbb
jae
jne
dec
pop
jle
jg
push
xchg
lods
dec
out
dec
fnstenv
std
clc
pop
arpl
bound
outsl
movsl
push
dec
aaa
jg
call
outsb
dec
jg
push
iret
lods
dec
lods
outsl
adc
lea
push
xchg
lods
dec
in
dec
fidivl
clc
pop
arpl
pop
cmpb
or
cmpsb
push
outsb
pop
cli
jne
dec
add
mov
mov
push
int3
outsl
xor
int
xchg
push
dec
outsl
mov
dec
dec
cmp
dec
sahf
arpl
jle
mov
lods
dec
mov
mov
ljmp
arpl
add
lods
jg
push
sub
daa
in
clc
xor
jmp
jg
push
push
sbb
dec
sti
xchg
call
sub
rcr
popa
push
es
fsubrs
js
jno
pop
pop
mov
imul
outsb
jbe
js
lea
js
sbb
push
loop
insl
push
test
pop
pop
pop
xchg
outsb
push
push
jb
cltd
dec
mov
into
xchg
or
cwtl
outsl
out
rol
cmp
mov
mov
fists
xor
mov
movsb
cltd
jbe
sub
lods
mov
loopne
inc
test
data16
test
call
push
loop
pusha
hlt
jae
jg
or
lret
shl
mov
sti
fmuls
sbb
js
punpcklbw
mov
cmp
outsb
daa
dec
or
jno
out
outsb
inc
cs
dec
sbb
shl
and
sarl
pop
test
sub
jl
pop
pushf
scas
dec
les
das
loop
jae
fsubrl
add
std
gs
ljmp
xchg
or
or
dec
in
xchg
inc
repnz
mov
movsl
rep
mov
sbb
dec
stc
lods
push
call
push
jbe
bound
ja
data16
lret
hlt
jg
mov
sub
cli
jge
int
jmp
call
test
jg
push
mov
mov
out
fildll
pop
mov
hlt
mov
shr
pop
add
shlb
add
incl
mov
jmp
jecxz
mov
movsb
out
cmpsb
cs
jnp
incb
rcrb
stos
out
js
sti
dec
repz
out
or
insb
jp
ja
xlat
test
ss
call
testl
stc
xchg
in
les
lock
arpl
push
out
pop
outsb
dec
lods
in
dec
mov
mov
loopne
jae
ja
scas
jl
jae
daa
jle
mov
addr16
xchg
push
mov
inc
int3
sahf
outsb
in
loop
fldenv
mull
scas
cmc
aas
cmpsb
idiv
int3
loop
and
stc
push
jecxz
add
xchg
test
dec
mov
loop
imul
pop
call
or
lods
sub
in
cmpsl
xchg
cmp
in
xor
testb
push
rolb
out
dec
or
push
mov
sarb
dec
clc
inc
lea
push
add
enterw
scas
cmpsb
incl
adc
push
jno
pop
dec
js
clc
add
mov
xor
stos
inc
outsb
mov
sti
pop
in
in
outsl
cmp
jae
sbb
xchg
roll
jae
pop
test
outsl
sti
ds
add
jge
and
js
jmp
adc
sbb
add
push
mov
loop
rorl
xchg
stos
lods
inc
or
jae
lods
jo
mov
cmpsb
lods
outsb
or
out
cs
shlb
or
inc
in
mov
ret
int
dec
add
jbe
aam
pop
and
arpl
cmp
push
rcll
mov
outsb
lds
in
verw
call
mov
xchg
or
mov
sub
test
pop
dec
xchg
clc
enter
dec
push
out
cltd
jns
jg
fdiv
jae
jp
push
je
ja
fisubs
loop
and
mov
inc
push
lahf
int3
inc
bound
jbe
sub
call
xchg
pop
jmp
outsl
mov
push
fnsave
dec
pop
mov
add
dec
out
in
push
push
fs
orb
sahf
das
enter
aas
push
cmp
in
scas
add
add
lret
sub
cmpsl
out
stos
push
into
ljmp
outsl
in
in
or
xor
jae
sub
jecxz
mov
mov
fs
shr
shr
adc
loope
and
and
ds
movsl
and
stos
mov
mov
fs
int
dec
in
push
push
add
xchg
mov
cltd
jb
xor
inc
imul
test
into
imul
aad
mov
xlat
js
pop
mov
daa
scas
nop
repnz
jp
int3
push
mov
mov
jbe
mov
addr16
xchg
shrl
insl
lock
mov
sti
outsl
faddl
or
cmpsb
int3
idiv
mov
imul
mov
daa
cli
movsl
xchg
pop
js
stos
cmp
mov
push
mov
push
fcmove
jg
and
movsb
xchg
scas
xor
addb
insl
pop
dec
sbb
loop
mov
lods
sbb
jmp
popf
stos
data16
sahf
incl
enter
sub
add
stc
addr16
dec
out
push
xor
loopne
out
jne
mov
aam
dec
insl
lret
gs
jecxz
js
push
divl
test
jne
xor
daa
adc
mov
scas
push
mov
dec
sar
lock
scas
lods
mov
enter
outsl
sub
or
imul
scas
call
jne
add
stos
or
mov
pop
jmp
test
cmc
adc
in
out
adcb
adc
and
and
lret
pop
jg
mov
outsb
into
loope
arpl
sub
pusha
push
mov
loopne
lock
leave
mov
popa
push
dec
sahf
adc
adc
dec
inc
sbb
cmp
mov
dec
shl
mov
les
test
rcll
mov
mov
mov
mov
mov
jno
es
push
psubb
cmpsb
fstpt
xchg
subl
add
clc
mov
and
jle
fisubs
cwtl
push
cmp
jae
sbb
jno
in
jmp
bound
fcoms
sbb
push
add
push
mov
cmpsb
insb
xchg
sub
add
push
mov
mov
shlb
gs
imul
inc
pop
cmp
sub
lret
xchg
and
dec
sub
cmp
insl
dec
mov
aas
cmp
pop
fsubrl
mov
jp
fdivp
mov
dec
nop
sbb
cltd
out
adc
sarb
dec
subb
cmp
sub
pop
jns
repnz
xorb
jbe
inc
sub
ja
mov
pop
outsb
xor
rorb
dec
outsl
sub
adc
mov
enter
lods
fsts
xchg
fwait
dec
bound
jle
pop
xchg
ja
faddl
and
sub
and
dec
sub
imul
ljmp
into
dec
in
pop
shlb
lods
out
and
pushf
ror
lods
mov
orb
gs
pop
mov
pop
cmp
adc
out
sbb
xchg
jbe
xchg
mov
cli
jns
cmc
sbb
jae
sbb
xor
roll
push
mov
adc
or
push
insb
mov
xchg
std
add
mov
pop
in
adc
icebp
cmp
adc
add
and
icebp
xchg
lods
dec
adc
and
add
into
push
imul
popf
sbb
daa
test
mov
pop
lods
pop
pop
jno
pop
test
or
aam
scas
xor
cmp
andb
sub
out
roll
loopne
shll
inc
dec
test
ficompl
dec
cs
mov
shll
mov
or
sbb
and
xor
es
jno
in
in
insb
stos
jmp
sub
jle
pop
sub
insl
mov
cmpsb
outsl
sub
add
and
nop
test
and
push
cmp
and
xchg
jo
sub
mov
mov
pop
pop
ja
dec
in
mov
cmp
ret
mov
or
scas
inc
shrb
pop
repz
jae
xorb
xchg
mov
in
cmc
arpl
test
mov
lods
outsb
push
mov
in
dec
or
sbb
test
push
sub
loope
inc
adc
in
xchg
movsl
add
sbb
insl
lcall
andl
loopne
xorl
notl
into
lods
cmpsl
cmp
push
inc
repnz
out
add
cmc
imul
jmp
inc
test
jno
fucom
lock
push
loopne
outsb
inc
jae
aas
and
add
sub
jge
outsl
dec
les
dec
or
or
icebp
stos
mov
insl
inc
in
dec
pop
jle
pop
jmp
repnz
inc
fsubrl
shrl
in
xchg
mov
sub
xchg
mov
sub
sub
insl
lods
in
pop
jmp
mov
fidivl
dec
jb
or
inc
inc
cmp
loope
cmp
insb
sub
sbb
imul
mov
pop
xlat
popa
push
push
imul
inc
out
dec
outsl
ljmp
pop
jmp
xchg
cmpsb
in
dec
in
hlt
insl
lods
call
insl
cmc
dec
fwait
movsb
xor
sub
push
insl
mov
popa
repnz
insb
pop
ja
push
push
adc
mov
push
add
mov
mov
loopne
sub
es
sti
and
fwait
mov
subl
mov
mov
add
and
push
into
or
jns
mov
or
insl
pop
lea
push
decb
insl
mov
push
xchg
sub
mov
nop
test
fs
pusha
stc
mov
in
mov
dec
fisubs
out
adc
int3
loopne
gs
call
jle
jbe
daa
outsb
shl
push
fs
jne
cmp
std
adc
cmp
pop
stos
jnp
arpl
or
stc
in
pusha
mov
in
sub
xchg
ror
mov
and
xchg
mov
mov
out
movsb
fcompl
sub
push
push
xchg
add
loope
mov
mov
cmp
ja
inc
push
push
sbbb
or
arpl
scas
or
mov
inc
addl
xchg
gs
mov
cltd
out
je
frstor
das
push
mov
fcmovnu
lock
inc
push
das
pop
data16
das
popw
xor
adcb
repz
outsb
mov
jle
cltd
xorb
loop
jo
sub
jo
int3
out
inc
repz
loop
mov
inc
insl
test
push
jle
cmpsl
sub
mov
or
test
repnz
push
jmp
push
pop
notl
and
lods
dec
dec
call
scas
pop
in
pop
and
adc
sti
mov
cmp
fisttpll
and
loopne
mov
in
dec
ret
insl
in
lods
daa
dec
push
dec
inc
sub
leave
jmp
dec
add
hlt
dec
out
push
sub
movsl
lcall
daa
inc
add
push
in
xchg
add
clc
mov
mov
dec
and
test
dec
outsl
stos
or
icebp
pop
jle
push
cmp
push
or
int3
inc
scas
popl
shlb
cmp
jmp
sbb
or
outsl
cltd
shlb
inc
pop
out
imul
ds
notl
sti
xchg
dec
adc
mov
lock
iret
sub
ret
loop
mov
fcmovbe
jle
mov
mov
adc
loop
orl
aas
stc
mov
or
mov
imulb
or
xchg
outsl
adc
loop
cmc
stos
je
test
jnp
and
sbb
hlt
sbb
idiv
jp
fidivrl
and
scas
jmp
cmpb
jge
xchg
dec
ds
aas
test
add
bound
arpl
jle
idivl
decb
cli
mov
jbe
mov
adc
adc
cmp
xor
add
pop
add
add
inc
mov
jno
inc
sbb
mov
mov
test
repz
stc
mov
pop
xchg
out
js
adc
mov
inc
dec
into
cmp
inc
ja
jle
cmp
and
ds
rcrb
mov
scas
fdivrl
dec
daa
pop
add
or
and
enter
lret
iret
xor
hlt
jp
or
pop
push
outsb
in
inc
aad
das
test
les
or
int
dec
test
int
xor
mov
sub
test
cli
aas
mov
push
std
cmp
out
ret
inc
insb
mov
js
rorl
jg
in
push
cs
cmp
jae
mov
sub
outsl
mov
push
inc
dec
sub
dec
dec
cmpsl
xchg
and
je
jb
dec
mov
cmp
sub
insl
test
cmpsl
movsb
sbb
cmp
jle
fsubrl
sub
xchg
insb
lock
aas
mov
jg
or
xchg
dec
dec
mov
hlt
scas
sbb
outsb
push
jb
push
test
push
pop
adc
jmp
push
dec
or
fcmovu
sub
dec
mov
sub
mov
adc
rep
sbb
dec
scas
mov
or
in
cmp
lea
movsb
leave
mov
into
divl
pop
and
popl
and
daa
mov
jo
mov
sub
incb
out
mov
scas
sub
cmp
jbe
xor
outsb
mov
adc
or
cmp
mov
fsubrl
mov
sub
insl
decl
sub
sahf
outsl
ret
inc
sarl
push
inc
test
roll
sbb
fldt
pop
cmpsl
stc
ljmp
dec
ret
or
out
sub
lods
in
xchg
and
pop
repz
sbb
and
xchg
xchg
jb
dec
xor
repnz
aas
fs
nop
int3
xchg
lahf
enter
int3
jecxz
test
test
addr16
stos
lcall
adc
mov
inc
add
jnp
cmp
loope
push
insb
jg
mov
cs
push
dec
sub
pop
into
imul
jmp
cwtl
dec
jne
call
push
loopne
loopne
jnp
mov
pop
mov
mov
add
jl
stos
mov
or
mov
mov
add
cmc
fiaddl
das
dec
jne
out
sub
and
les
outsb
lea
add
inc
dec
xchg
mov
shll
loopne
xchg
sub
add
arpl
fmull
jns
ja
popa
mov
pop
fisubrl
imul
adc
clc
sar
pop
clc
mov
jnp
outsl
idivl
dec
and
add
push
lods
ja
push
insb
lods
sub
xchg
icebp
xchg
jns
insb
rorl
scas
nop
mov
shll
les
mov
les
arpl
outsl
mov
fldl
enter
shl
test
arpl
mov
push
lock
push
stos
lods
lcall
jl
data16
imul
mov
or
cmc
fxch
sub
mov
out
lods
outsb
dec
test
cmp
je
dec
dec
or
dec
push
mov
rorb
nop
xor
clc
js
inc
in
push
fsubrl
xor
ljmp
test
in
push
xchg
xor
xchg
dec
fcoml
loop
test
dec
jmp
and
iret
mov
imul
push
in
mov
in
ja
mov
mov
bound
rorb
mov
dec
jg
xor
xchg
mov
mov
int
call
push
mov
sub
dec
je
inc
stos
pushf
mov
push
inc
mov
jle
sahf
pop
shll
mov
hlt
test
push
xor
sbb
fildll
sub
or
jbe
ljmp
out
jg
test
aam
lret
add
int3
cmc
jmp
movsl
into
int3
cmc
jmp
mov
mov
xchg
cmpsb
inc
jo
hlt
shlb
mov
and
push
xchg
sbb
mov
mov
sub
add
aam
ret
sub
push
cmp
rcll
jae
insl
aaa
dec
dec
int
bound
aaa
cmpsb
insl
loopne
outsl
bound
inc
mov
mov
daa
in
xchg
jg
ljmp
pop
hlt
mov
xchg
xchg
mov
mov
rol
or
xchg
sahf
scas
mov
sbb
sub
pop
jg
and
xchg
movsb
jmp
imul
pop
in
sbb
sbb
es
add
in
test
stos
mov
rcrl
sub
cwtl
sub
xchg
xchg
loopne
xchg
dec
lods
xchg
push
cmp
lock
cwtl
jge
jle
cmpsl
insl
inc
add
mov
test
push
inc
lret
aad
out
ret
or
push
int3
mov
fdivr
outsl
imul
enter
mov
clc
inc
inc
adc
lahf
test
outsb
std
xorb
and
mov
out
dec
lret
lods
dec
in
xchg
add
pop
cmpl
stos
cwtl
pop
pop
adc
fsubs
sub
and
lock
scas
push
cltd
je
mov
inc
mov
out
inc
mov
inc
push
xchg
dec
and
mov
clc
es
cltd
sbb
mov
lods
clc
and
ficoml
jle
mov
mov
xor
mov
xchg
or
loope
outsl
int3
dec
sub
clc
mov
test
idiv
xor
jmp
out
sub
fsub
or
mov
fwait
adcb
sbb
jo
rorl
scas
dec
insb
xchg
xorl
lods
jb
insb
popw
jg
sub
sbb
into
int3
or
jbe
push
or
sub
lds
dec
adc
xchg
movsl
in
aas
push
sbb
stos
pusha
mov
xchg
inc
in
mov
outsl
call
xchg
aas
lcall
loope
clc
jnp
jns
pop
and
in
movsl
loope
movsb
jno
or
xlat
push
mov
push
arpl
inc
jmp
or
xchg
jo
sbb
add
imul
mov
mov
jg
cmp
insb
lock
pop
stos
push
jl
rorl
mov
int
lret
test
sub
not
pop
xchg
cmpsb
and
dec
push
hlt
xlat
in
fnop
mov
outsl
sub
mov
sub
enter
sbb
inc
jl
fstl
into
lret
add
popa
xchg
mov
mov
in
jne
in
fildll
stos
push
mov
repz
fcoml
mov
loope
xor
sub
inc
outsb
xchg
add
mov
sbb
loopne
mov
mov
jg
sub
jle
fisttpll
in
arpl
lods
int3
dec
mov
clc
out
jmp
outsb
lret
subb
data16
arpl
pop
jmp
jle
lock
test
imul
dec
add
rep
ja
ja
inc
in
ret
dec
in
push
cs
outsb
push
jmp
popa
pop
lods
repnz
js
push
ljmp
in
push
and
inc
test
gs
lods
ja
cmovge
xor
outsb
add
jnp
popa
bound
cs
inc
js
pop
daa
imul
sbb
pop
test
cs
add
cs
sub
mov
out
sub
pop
push
pop
jmp
inc
fldl
outsl
imul
lret
bound
xchg
aaa
push
jmp
outsl
push
iret
push
jle
sub
hlt
ud2
jnp
pop
mov
fnstcw
push
jmp
outsl
jno,pn
cmpsb
mov
push
ret
dec
outsl
push
pop
dec
and
scas
call
jg
and
adc
and
or
and
push
adc
xchg
pop
bound
push
mov
xor
xor
daa
jno
mov
xchg
pop
jmp
push
pushf
int
or
imul
cmpsl
adcl
out
push
mov
xchg
xchg
sbb
xlat
jbe
in
xlat
js
sub
sbb
gs
call
sbb
ljmp
push
nop
outsl
outsb
fucomi
outsb
sarb
inc
ret
adc
testl
cwtl
mov
mov
test
mov
dec
lea
cli
in
xchg
enter
pop
popa
jmp
jg
push
lea
push
mov
push
dec
scas
outsl
hlt
push
xchg
repnz
jns
out
outsl
mov
into
dec
pusha
sub
and
sub
jg
call
outsb
insl
jg
push
mov
jne
mov
pop
jle
jg
push
push
lods
dec
lea
mov
ljmp
arpl
add
inc
jg
push
sub
gs
dec
mov
dec
jmp
ret
and
push
ret
jmp
adc
in
dec
int3
dec
xchg
mov
sub
std
loope
add
mov
lea
push
mov
push
dec
sub
fildll
sbb
xor
dec
sub
mov
ljmp
inc
xor
std
sub
pop
sbb
mulb
sbb
jns
xchg
in
icebp
mov
xchg
loop
pop
int3
call
dec
and
mov
dec
xchg
fildll
push
out
xchg
jg
cmpsl
aad
lods
dec
insl
cmpsl
dec
fsubrl
mov
adc
push
mov
or
outsl
loopne
bound
loopne
and
or
mov
inc
fmulp
out
enter
jmp
xor
sub
out
test
xchg
data16
pop
outsl
push
inc
inc
push
xchg
out
jnp
fmull
cld
lret
cmp
mov
out
cmpsb
test
add
sub
daa
push
lea
mov
repnz
aas
test
push
mov
out
outsb
mov
jns
daa
addr16
jbe
arpl
xchg
scas
outsb
add
fsubrl
arpl
push
or
push
push
fs
ljmp
mov
sub
jno
mov
jg
xchg
enter
mov
mov
loope
mov
jns
loopne
jecxz
adc
add
popa
test
outsl
sub
or
fdivrp
dec
dec
jle
into
out
and
sub
push
and
sbb
out
movsb
loopne
into
fmuls
mulb
cld
aam
mov
dec
out
jg
mov
cmp
mov
hlt
push
inc
mov
mov
mov
insl
inc
jmp
sub
inc
or
outsl
xchg
lock
inc
dec
inc
and
shlb
clc
adc
or
mov
stc
int3
push
jecxz
jo
testl
repz
out
imul
dec
imul
es
cmp
push
hlt
pop
aas
call
in
mov
popa
pop
insb
in
dec
jl
subb
push
out
lret
dec
cs
xchg
inc
mov
aas
andb
push
jg
xchg
dec
loop
add
cmp
stos
call
outsl
lahf
out
nop
xor
scas
jmp
xchg
xchg
iret
lock
int3
imull
scas
out
add
jns
cmp
in
sub
std
jns
insb
xchg
adc
sbb
out
mov
outsb
dec
jb
not
mov
inc
adc
imul
inc
dec
push
dec
jae
lds
jge
push
mov
insl
cmc
jae
xor
loopne
ds
adc
push
int3
adc
jae
arpl
stos
scas
push
mov
in
hlt
arpl
cmp
test
popa
lea
test
cmp
xchg
fwait
xor
andb
test
faddl
in
test
ja
mov
ret
fnstcw
fidivs
lods
mov
addl
out
cld
push
cmpsb
shll
xor
test
repnz
movl
cmp
or
test
movsl
mov
rcll
roll
divl
shll
xchg
and
dec
stc
lock
fsubrl
out
lahf
imul
fucom
mov
lret
or
sub
insb
jno
in
jl
cmp
call
lock
nop
int
iret
mov
test
outsb
sub
push
test
adc
addr16
jbe
fwait
mov
fnstsw
inc
movsl
add
outsb
pop
xorb
jb
repnz
out
mov
movsl
lahf
jne
ret
in
dec
loope
insb
mov
cmp
jecxz
leave
push
add
in
dec
jg
loop
bound
or
dec
sbb
xchg
das
push
push
icebp
inc
ret
loop
test
adc
and
push
jae
jmp
sub
cmp
into
gs
inc
inc
mov
test
popl
scas
xchg
imul
scas
pop
dec
adcl
pop
cmpb
pop
inc
gs
dec
adc
popl
pop
jmp
in
and
cmp
std
sub
fmul
push
aam
outsb
rcrb
in
jnp
das
mov
pusha
iret
aad
jecxz
insb
pusha
outsb
xlat
popf
fstpl
insb
fistl
vpcmpgtb
insl
and
dec
sub
data16
cmp
orb
xchg
and
andl
push
push
arpl
xchg
xlat
push
xlat
xor
jns
dec
push
and
jo
std
pop
add
pop
icebp
pop
pop
insl
and
repz
shr
dec
jae
sub
dec
jbe
sbb
xlat
mov
sub
sbb
scas
cmp
out
lds
scas
jge
push
lods
pop
das
mov
sub
jg
into
adc
lds
mov
lock
inc
mov
push
lock
mov
fsts
pop
mov
fsubs
sbb
cmc
jne
rclb
jo
pop
fs
repz
fst
sub
pop
adc
inc
cmc
fisubrs
lahf
cmp
jne
cmp
out
and
call
insb
add
test
dec
std
pop
jle
pop
sub
aam
push
and
pop
in
out
pusha
jae
dec
iret
pusha
gs
maxps
in
insl
xchg
dec
xor
loope
dec
xlat
mov
test
adc
out
inc
dec
inc
adc
xor
xlat
dec
lret
imul
lods
push
fdivl
clc
rep
xor
in
sarb
jbe
pop
jg
mov
mov
stc
mov
test
pushf
stos
add
popf
and
shrb
push
cs
jae
ljmp
jge
cmp
jg
popf
and
mov
pop
out
vmread
xchg
fistps
out
into
incb
ljmp
sbb
xchg
push
icebp
pop
test
xchg
pop
adc
jp
dec
rcrl
lea
ja
pop
aam
xchg
adc
xor
clc
cs
push
das
sti
push
arpl
test
jb,pn
add
repz
out
loopne
in
clc
xor
int
pop
out
pop
mov
add
sbb
popf
xor
and
out
lock
jmp
or
sbb
imul
outsl
in
add
repnz
in
dec
fs
es
dec
arpl
insl
mov
sub
scas
mov
aam
sarb
mov
jno
decb
incl
cmp
movsb
dec
or
fcoml
js
popf
test
daa
cmpsb
shlb
jne
dec
push
outsl
outsb
int
data16
cli
adc
sarb
add
inc
lret
mov
lock
js
and
adc
das
mov
jae
mov
out
lock
dec
push
sub
dec
sbb
jo
shll
cmpsl
int
jns
or
adc
js
addr16
sbbb
call
loop
stos
pop
mov
pusha
outsl
add
adc
out
and
loopne
or
sahf
dec
and
sbb
inc
imul
jmpw
nop
jbe
in
test
add
mov
sbb
dec
adc
lds
popa
shrl
shl
fsubp
jae
out
fsubr
xlat
xorps
lea
fsubrp
call
fadds
shlb
rcrb
std
outsl
fs
fcmovnbe
xchg
mov
xor
dec
cmp
jg
jno
aam
lahf
daa
addr16
nop
scas
in
lods
jecxz
mov
mov
cli
dec
shlb
inc
pop
subb
outsb
in
mov
gs
and
loopne
jo
mov
adc
ret
dec
outsb
push
aam
stos
cmpb
enter
hlt
out
mov
jg
mov
pop
pop
repnz
enter
call
mov
pop
pop
or
out
mov
adc
nop
push
mov
rcr
ja
sbbb
and
mov
dec
inc
mov
es
push
popa
mov
push
in
lock
mov
inc
jae
sti
fnstsw
lock
jae
andb
mov
pop
imul
loop
push
xchg
pop
fnstenv
pushf
fldenv
sbb
ljmp
ret
or
jmp
movsl
into
push
jb
mov
into
in
cmpsb
mov
shlb
mov
subb
mov
outsl
mov
mov
or
adc
pop
mov
in
stc
int3
daa
bound
jle
cmc
xchg
jne
dec
in
outsl
addr16
outsb
std
sub
outsb
testb
stos
jno
call
mov
jno
dec
push
dec
nop
jge
out
jge
aaa
outsl
repnz
addr16
sti
shrl
push
push
mov
jmp
jmp
pop
and
outsb
sbbb
jg
out
nop
insb
or
dec
hlt
fsubrp
jge
insb
and
xchg
outsl
enter
nop
jne
dec
outsb
insb
push
test
insl
je
andb
inc
aaa
outsl
lock
les
jge
stc
arpl
inc
insl
push
out
mov
in
cmpb
lods
outsl
cli
push
stc
push
mov
shl
call
in
dec
jecxz
pop
push
sub
lods
gs
js
bound
test
icebp
or
rcrb
jg
lock
lock
out
push
das
lock
fisttps
or
push
stos
insl
jg
in
jle
mov
in
dec
insb
sub
das
movsb
repnz
arpl
stos
push
outsl
jo
mov
movsb
stos
imul
mov
call
dec
sub
movsb
lret
dec
or
add
in
fstps
in
mov
mov
sbb
push
movsb
dec
bound
out
push
les
cmp
imul
sub
or
push
or
jg
push
jnp
adc
std
outsb
scas
ss
mov
jecxz
mov
insb
scas
shlb
add
loop
jg
andb
xor
outsl
outsl
xchg
arpl
mov
push
data16
outsb
test
arpl
test
out
test
addr16
push
outsl
imul
jp
and
dec
imulb
out
fsubrs
insb
bnd
cli
lcall
lret
jge
adc
and
cmp
and
sbb
xor
call
daa
out
jp
mov
ret
scas
jae
push
popa
dec
lock
cmp
fbld
in
sub
lods
xlat
psubb
or
stos
aad
lahf
ret
jle
arpl
pop
dec
or
xor
shll
cli
push
sbb
std
push
adc
js
mov
js
nop
mov
mov
cmp
push
ja
inc
das
es
fidivrs
cs
dec
jbe
loope
lock
push
adc
insl
mov
scas
pusha
lock
pop
js
push
int3
dec
clc
imul
cs
std
clc
inc
jae
jl
adc
sbb
cld
test
dec
out
xchg
push
adc
cmp
dec
insb
mov
stc
lods
cmp
movsl
je
fs
push
fisttps
arpl
loope
inc
push
std
jo
jns
cmp
sub
mov
xor
rclb
jmp
iret
push
mov
movswl
std
xor
ret
mov
mov
jo
insb
ja
cmc
inc
arpl
and
shrb
cmp
inc
scas
inc
mov
fiadds
cmpb
jae
xor
inc
mov
pop
rorl
stos
repz
jle
das
dec
ljmp
xor
add
scas
pusha
cwtl
mov
cmpsb
jno
in
adc
gs
cs
xchg
mov
mov
fsts
out
dec
xor
fnstenv
cmp
fsubrl
insb
pop
shll
adc
ljmp
xor
dec
add
lret
stc
jno
push
pop
xor
push
xlat
pusha
rcll
mov
dec
adc
or
stos
cmp
ds
pop
insb
mov
leave
add
or
sub
iret
fs
add
push
push
jp
mulb
xchg
or
cmpb
xchg
addr16
cmp
push
outsl
insb
enter
out
push
push
mov
jae
sar
dec
pop
dec
shr
ja
test
pop
sub
rolb
mov
pop
xchg
push
xor
adc
adc
xor
inc
in
pop
aaa
out
cmc
fs
inc
sbbb
ss
mov
or
pop
fwait
testb
aaa
fwait
cwtl
std
cmp
cmp
out
and
jbe
xorb
js
mov
mov
pop
lahf
out
paddw
roll
out
inc
lfs
out
out
sti
fs
cmp
mov
js
ror
fwait
adc
outsl
sti
lock
xor
insl
ljmp
repnz
jno
xchg
mov
dec
mov
test
jge
sti
fs
jb
lea
push
push
sbb
adc
rcl
call
xor
es
out
mov
or
out
push
xorb
iret
lock
xor
pop
lock
xchg
jae
imul
jge
js
daa
and
sub
stos
and
aad
popa
mov
inc
in
mov
pusha
test
push
fs
inc
jae
imul
sahf
mov
test
cmp
xor
push
js
mov
lea
mov
fdivl
lods
pop
push
push
jmp
push
push
sub
lcall
push
jnp
insb
inc
jle
sbb
andb
cmp
in
ds
jne
cmpsl
pop
jo
pop
lret
test
sbb
gs
mov
push
dec
xchg
outsl
push
icebp
push
arpl
addr16
int3
push
push
push
jp
mov
jae
les
scas
nop
sub
pop
sub
push
add
cs
loope
sar
mov
stos
stos
xor
dec
fisubrs
mov
and
stos
rorb
pusha
mov
pop
push
or
fucomip
les
dec
mov
push
xchg
and
xor
and
pop
inc
outsb
shr
and
in
mov
rolb
push
out
shl
gs
dec
in
mov
dec
hlt
scas
or
push
hlt
and
or
filds
xchg
insl
outsb
incb
inc
bound
cmp
stos
mov
mov
inc
fwait
jbe
int3
outsb
add
out
subl
in
testl
pop
repnz
clc
dec
out
dec
pop
in
dec
jmp
ljmp
inc
outsl
jnp
push
imul
push
push
cmpsb
ljmp
inc
outsl
out
mov
lods
lock
mov
inc
cs
test
data16
shl
jmp
out
jb
hlt
adc
imul
dec
fs
push
in
inc
dec
insb
jl
dec
divl
dec
mov
insl
insl
dec
dec
jb
insl
orb
dec
imul
insl
push
cld
lods
mov
in
in
ljmp
lods
dec
clc
insb
jle
call
popa
jg
sub
call
add
call
mov
shrl
clc
dec
imul
sti
negl
dec
loop
call
inc
dec
jge
in
out
pusha
out
scas
cld
in
loop
add
outsl
out
icebp
leave
dec
js
jno
jae
fimuls
add
inc
bound
clc
dec
push
push
outsl
jns
out
jmp
hlt
dec
repz
in
jo
push
das
dec
or
jmp
jecxz
push
dec
out
in
aas
insl
jp
outsl
call
jecxz
outsl
div
outsl
jg
jg
clc
outsl
push
push
popa
lahf
bnd
jg
outsl
idivb
in
push
mov
outsl
loope
hlt
xor
aas
js
insb
out
insb
notl
out
loop
cmpsl
jle
inc
outsl
in
mov
add
and
outsl
addr16
insl
insl
pop
dec
ljmp
popa
outsb
dec
jecxz
lods
jmp
hlt
clc
dec
hlt
push
cli
jg
dec
dec
repz
cmpb
dec
repnz
outsb
jp
es
ja
insl
mov
fisubrl
cli
imull
inc
bound
data16
movsb
cld
dec
out
mov
outsl
ja
jge
addr16
repz
stc
scas
jbe
bnd
inc
jge
dec
arpl
aam
arpl
dec
outsl
arpl
sti
dec
dec
jge
icebp
arpl
cld
idivl
jmp
or
mov
cld
sarb
cmp
push
mov
shl
out
fsubrs
repnz
jg
pop
add
mov
std
push
cmp
imul
pop
push
test
pop
in
lock
sbb
jae
popf
mov
mul
call
in
xlat
rorb
and
jo
inc
movb
movb
mov
call
sbb
adc
push
mov
fcmove
in
nop
lcall
jo
jbe
push
jno
inc
mov
out
mov
lds
imul
call
popf
adc
add
aad
mov
cmp
addr16
pop
mov
shrl
sbb
cmp
cmp
fldt
xchg
sahf
mov
out
data16
cmpsl
or
pop
jne
sbb
rorb
jbe
push
loope
push
call
and
cmp
aaa
call
flds
mov
popl
mov
add
out
pushf
adcl
or
xor
dec
mov
fnstenv
xor
int
imul
mov
ret
lea
je
pushf
and
pop
out
sti
mov
jbe
adc
inc
add
push
mov
lods
add
in
lods
data16
and
add
mov
push
cwtl
sub
mov
and
sbb
ret
ds
lods
ror
sbb
idiv
hlt
jns
out
cmp
imul
and
cmpsl
fwait
inc
adc
es
adc
mov
rcll
and
jns
jg
push
jne
enter
movsl
cmpsl
add
nop
mov
pop
or
bound
imul
loope
pop
daa
cmp
shl
mov
sub
insb
cld
cmc
cwtl
dec
xor
push
ror
sbb
adc
adc
enter
cmp
pop
lea
xchg
punpckhdq
mov
add
fidivrl
or
mov
inc
mov
dec
ret
add
xchg
lock
mov
add
mov
or
mov
mov
and
adc
push
pop
ljmp
les
ja
push
cmp
imul
inc
inc
sbb
sub
mov
pop
jge
enter
cmp
mov
lcall
mov
add
pop
mov
or
xor
loop
add
jb
jne
insb
inc
insb
insb
outsl
arpl
lods
decl
mov
pop
sub
and
movsb
cs
arpl
mov
push
sub
or
or
xor
nop
cmc
and
dec
lock
dec
pop
in
xor
xchg
sbb
rorl
int
dec
push
fdivl
dec
adcl
cmp
jne
jle
je
xchg
mov
xchg
fistpl
or
mov
cltd
jno
jbe
mov
cltd
mov
dec
mov
fs
repz
and
call
jmp
cmp
les
push
xor
or
jno
cs
cmpsb
xchg
inc
jbe
clc
movsb
xchg
and
xchg
movsb
insb
jno
leave
or
into
inc
iret
sub
jmp
lcall
xor
shlb
movsl
enter
mov
push
outsl
lea
fiadds
movd
or
in
xchg
pushf
jmp
inc
bt
pusha
pushf
cmp
cmpb
push
jmp
adc
jno
rcrl
hlt
jge
mov
decl
dec
sbbb
pop
outsb
jae
jp
cmc
in
ret
or
jmp
sahf
jmp
dec
pop
fwait
xchg
sbb
jb
cmpsb
jb
scas
or
sbb
iret
out
repz
es
lcall
outsb
sbb
xor
jns
pusha
data16
or
sub
jbe
mov
stos
or
inc
and
pop
mov
or
cmp
push
call
je
push
push
call
lock
xor
or
sub
inc
lods
clc
cli
enter
cmc
loopne
ret
in
jns
sub
sbb
cmpsl
stc
xor
pop
xchg
sbb
mov
mov
shrl
push
in
adc
sbb
aam
outsb
adc
sub
dec
cmp
adc
xchg
push
mov
lds
pop
jp
adc
xchg
rolb
enter
adc
leave
in
outsb
pop
es
adc
mov
in
lcall
cmp
mov
arpl
or
dec
and
lea
je
call
cmpsl
js
add
shl
repz
push
sub
cmp
xor
loope
mov
hlt
pop
jae
les
dec
pop
cmp
and
stos
fcoms
sbb
or
std
xor
mov
xor
test
cwtl
xor
bound
mov
not
sbb
insl
js
mov
inc
dec
rcl
fs
movsl
popa
add
mov
movsb
xlat
mov
enter
in
cmc
adc
xlat
ljmp
or
popf
cld
ljmp
xchg
test
je
enter
xchg
hlt
lock
mov
decl
imul
pop
int3
mov
cld
inc
pop
arpl
mov
mov
mov
arpl
xor
imul
jmp
cmp
xor
jne
push
mov
inc
push
mov
jno
adc
pushf
scas
push
test
daa
xor
inc
sbb
clc
xchg
fwait
push
mov
mov
and
inc
outsl
enter
adc
add
add
pop
and
sbb
inc
pop
push
dec
inc
xor
sub
aad
dec
outsl
pop
push
adc
jbe
fmuls
push
fsubl
and
mov
outsl
mov
mov
test
lock
dec
aas
outsb
xor
dec
mov
imul
pop
add
in
hlt
jno
cmp
xchg
xorl
data16
lods
pop
add
jnp
clc
inc
jl
sub
fistps
or
fnstenv
call
ja
repnz
mov
mov
jbe
lret
or
stos
push
divl
mov
or
jnp
jmp
int
push
jae
xchg
jg
xchg
inc
js
sub
dec
std
fmulp
xchg
nopl
sbbl
or
jle
out
xchg
sbb
les
xor
adc
sti
ret
iret
push
jno
jb
xchg
mov
nop
insl
pop
jecxz,pn
or
dec
inc
cmpsl
xor
cmp
roll
lahf
ljmp
js
addr16
gs
outsb
push
neg
lahf
insb
sbbl
push
call
sub
jge
test
mov
xchg
dec
mov
subl
popa
jb
sub
nopl
lods
pop
test
in
int3
stos
jmp
adc
mov
in
cmp
adc
sti
sbb
and
dec
bound
mov
cmpsb
xlat
sbb
jns
mov
lock
testl
mov
call
pop
ret
xchg
inc
or
adc
movl
mov
xchg
mov
test
pop
ds
adc
imul
ret
pop
rcl
dec
fsubrs
sahf
pop
sbb
ffree
stc
lea
mov
push
sarl
js
mov
mov
mov
push
and
add
repnz
in
faddp
jno
xor
insb
inc
fistpll
mov
mov
mov
pop
repnz
ret
push
mov
cli
mov
mov
not
mov
movsbl
mov
not
bswap
lea
pusha
pushf
jmp
push
call
rclb
sbb
daa
pop
call
scas
out
mov
in
aaa
or
push
insb
pop
outsb
lea
adc
loopne
push
out
xor
dec
xor
call
aad
pop
lods
cmpsl
ret
inc
xor
jecxz
cmp
movsb
push
fs
dec
jle
js
pop
mov
pop
sahf
arpl
fists
into
pop
aad
pop
mov
adc
imul
sahf
mov
movb
pop
pop
jle
out
imul
ret
sbb
aam
jbe
or
push
call
pushf
cld
nop
add
cmc
rcr
pushf
add
and
movsbw
dec
mov
pusha
cmp
shr
clc
clc
cmp
push
jmp
shld
rcl
mov
stc
test
call
push
call
sub
dec
add
add
add
sub
add
add
shrb
add
repz
dec
add
add
add
subb
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
jle
add
xor
mov
sub
call
std
sub
add
add
or
add
push
call
imul
mov
push
call
outsb
jl
pop
in
gs
mov
push
push
mov
jp
xor
call
fdivrs
movsb
int
pop
mov
pop
lods
clc
rcrb
test
xchg
cmpl
push
pop
cmp
sbb
iret
or
cmp
xor
push
bound
cmpsl
movsl
pop
fdivrs
aad
jo
movsl
fmuls
or
mov
fisttpl
insl
mov
jo
jmp
pop
or
inc
inc
cltd
xchg
jbe
mov
and
sbb
je
pushf
pushf
jmp
push
call
push
ret
bnd
test
cmp
mov
cmp
sub
imul
xchg
sub
imul
pushf
adc
stos
mov
adc
es
dec
icebp
fildll
movsb
int
fdivl
daa
mov
and
out
inc
out
push
setnp
push
je
cld
outsb
std
imul
rol
mov
addr16
xor
inc
loopne
jbe
sub
push
call
dec
stos
fisttps
imul
movb
cmc
stc
cmp
jmp
push
call
imul
clc
add
ret
jae
add
jl
push
call
xchg
stc
pusha
lea
ja
pusha
bt
add
cmc
pushl
pusha
jmp
push
call
es
out
jg,pn
pop
call
sar
jg
cs
hlt
sub
pop
outsb
sbb
pop
lret
imul
jge
call
jecxz
arpl
shlb
mov
shl
mov
stc
pushf
rol
cmp
stc
test
sub
jmp
mov
cmp
popa
sbb
dec
jno
mov
inc
dec
std
into
fisttps
in
cld
jne
aas
cmp
scas
sarb
sbb
mov
pusha
sub
pop
mov
fs
ficoml
or
fmul
stos
pop
loop
enter
jb
call
sbb
xchg
lcall
inc
imulb
into
and
hlt
mov
hlt
into
xorb
jl
dec
adc
or
in
adc
jbe
mov
orb
clc
add
fisttps
jl
sub
movzbw
shr
cmc
test
mov
rcr
bt
rcl
call
fwait
or
sub
xchg
ds
imul
mov
cmp
loopne
mov
fimull
in
and
mov
loopne
addb
adc
inc
mov
sub
lods
cmc
cwtl
aas
cltd
out
jns
ds
lcall
push
clc
movsb
jmp
aad
sar
popa
fisubs
cmp
cld
cmp
mov
pusha
test
or
push
jae
push
call
sub
mov
inc
call
nop
loopne
test
mov
jg
mov
inc
pop
out
call
insb
sbb
push
fistpl
xor
js
aas
in
cmpsl
push
lahf
clc
adc
add
stos
jecxz
pop
and
pop
stos
scas
inc
xchg
mov
xchg
push
lcall
sbb
mov
mov
enter
xor
sbb
cmp
xor
shll
inc
jl
mov
es
insb
jne
outsb
std
or
and
loope
mov
cmp
test
lret
fwait
cmpsl
xchg
cld
mov
outsb
fcomp
shll
leave
arpl
xlat
push
adc
insb
pop
rcr
xchg
aaa
cmpb
mov
jae
std
ret
dec
add
inc
fdivrs
push
mov
stos
sub
das
loopne
push
pop
pop
insl
sbb
aaa
jecxz
push
pop
shlb
lods
cmc
ret
test
xor
mov
out
das
sub
cli
cmp
je
test
sub
sub
lret
mov
mov
dec
adc
xchg
and
mov
or
mov
or
sub
les
add
pop
pop
stos
push
call
xor
in
inc
adc
leave
xchg
cmp
out
arpl
jmp
adcl
movsl
clc
or
pop
pop
das
stos
sub
aad
pop
cmp
and
dec
repnz
jecxz
dec
or
push
cmp
cmc
pop
aam
stos
bswap
inc
cmc
stos
ljmp
sub
imul
aad
pop
cli
movb
outsl
pop
mov
jmp
xor
cmp
sub
mov
sbb
mov
mov
push
push
and
jbe
push
out
pop
pop
dec
inc
inc
fwait
out
push
sub
adc
inc
es
dec
mov
mov
jmp
mov
daa
ret
pushf
in
dec
test
jbe
adc
inc
ds
ffreep
pop
or
or
jbe
dec
xchg
cmp
arpl
mov
cltd
mov
test
mov
push
ljmp
cmp
pop
mov
addr16
test
int
je
dec
in
fwait
jl
add
fwait
test
test
arpl
pop
sbb
jbe
call
push
ljmp
or
stos
lcall
data16
fsubs
push
add
test
inc
outsb
rorl
and
jo
js
shlb
iret
adc
sbb
std
mov
lock
pcmpgtd
inc
jl
adc
les
call
xchg
adc
jnp
pop
or
insl
mov
in
dec
mov
mov
mov
jl
call
stos
ret
xor
hlt
lcall
lahf
inc
sbb
mov
pop
mov
fcoms
cmp
adc
or
mov
test
popf
scas
or
lods
push
cmpl
pop
xor
xchg
shll
dec
jb
or
xor
sub
xlat
dec
cmp
jmp
jecxz
ds
add
and
jbe
cmp
in
xchg
cmpsb
xchg
sbb
xor
mov
int3
pop
in
daa
ja
jae
mov
adc
cli
mov
mov
mov
mov
xchg
pop
jb
jbe
mov
push
add
outsl
dec
mov
cmp
cli
gs
in
outsl
sbb
mov
sbb
jbe
lcall
dec
mov
pushfw
popw
pushl
jmp
leave
cs
sub
cmp
pop
out
js
mov
jle
sub
sbb
pop
sbb
test
dec
mov
data16
scas
lcall
mov
jmp
sub
xor
call
pop
cwtl
idivl
mov
adc
imul
scas
xor
pop
clc
adc
mov
or
aad
jecxz
clc
jbe
mov
andl
es
sub
or
bound
push
stc
mov
pushl
jo
jp
fidivl
cmp
push
xchg
xchg
jl
mov
add
inc
jb
into
cld
add
lcall
push
insl
scas
je
sahf
enter
jg
hlt
outsl
fcmovu
push
insl
scas
je
add
imul
xchg
jmp
ds
sbb
sub
pop
lds
push
inc
call
adc
jmp
or
xchg
fisubs
loop
push
daa
and
mov
cmp
push
iret
or
std
and
push
movsb
movsl
push
or
faddl
sahf
xchg
add
repz
pop
dec
imulb
dec
cmp
adc
out
xchg
aas
cmp
jmp
or
sub
popa
push
call
out
xlat
fsubr
dec
push
push
dec
cltd
mov
addr16
pop
xor
dec
pop
pop
pop
inc
js
shlb
push
add
dec
mov
fadds
sbb
std
nop
sub
xchg
lahf
ss
jne
xchg
das
mov
push
mov
add
insl
jne
shrl
or
dec
mov
mov
jbe
add
pcmpeqw
mov
pop
sub
in
mov
mov
mov
movsl
fcomps
sbb
in
mov
cli
rsqrtps
cmp
dec
nop
jle
xchg
xor
gs
cmpsl
and
ljmp
incl
push
mov
stc
outsb
mov
and
hlt
add
xchg
jp
cwtl
test
pminub
pop
jo
push
or
sub
push
and
xchg
mov
push
push
push
in
jns
fstps
imul
mov
shrl
mov
dec
mov
dec
and
stos
cmpsb
cmp
and
loopne
jbe
out
cltd
mov
imul
pop
stos
jne
sbb
dec
in
pop
gs
loop
push
sahf
mov
xor
pop
mov
sub
sti
stc
mov
sbb
sbbl
out
fwait
xor
loop
andb
mov
in
das
pop
cmp
push
pusha
xchg
scas
xor
lret
mov
fs
push
movsb
lods
xchg
cwtl
dec
test
stc
add
call
scas
lret
mov
shrl
cli
int
mov
cmp
jecxz
movsl
mov
and
xor
or
imul
fisubrl
or
sti
pop
add
fs
test
add
insl
in
jb
adc
pushf
xchg
imul
sub
pop
inc
lea
fwait
add
pop
flds
push
mov
sbb
cmp
cmp
lret
add
cmpsl
aad
jle
inc
clc
xor
mov
outsl
imul
pop
push
gs
and
mov
sub
sahf
les
or
and
dec
rcrb
mov
or
adc
inc
jo
stos
xchg
stos
sub
shll
lcall
sub
cmp
sub
inc
mov
test
addr16
in
jle
push
outsl
shrl
out
or
aas
sbb
sbb
cmp
outsl
mov
sub
push
paddusw
icebp
rcl
dec
bound
je
jp,pn
cwtl
jne
rcll
test
push
test
mov
lret
sbb
subl
add
shrb
je
outsl
popf
sub
mov
stos
pop
outsl
and
xor
pop
les
jnp
or
aam
int
out
fucomp
fcomps
add
dec
jno
stc
or
push
mov
cmp
in
insl
push
push
fcomi
push
les
cmpsb
dec
cmpsl
push
ficompl
cmp
mov
pushf
adc
scas
push
mov
loope
dec
inc
xchg
mov
into
fbstp
incb
or
push
shr
xchg
and
pop
and
add
or
scas
pop
scas
push
call
dec
mov
lea
je
bsf
mov
stc
mov
test
stc
clc
test
sub
push
pushf
shr
call
push
call
aas
mov
inc
stc
cmp
movb
movb
pushf
pushf
lea
je
pusha
pushl
pusha
pushf
lea
jmp
stc
shr
lea
cmp
jmp
push
call
aas
pop
pop
xor
clc
decl
xchg
shlb
mov
add
push
call
outsb
subb
xchg
mov
fs
dec
pop
lret
fsts
jae
or
call
fsts
push
or
daa
inc
cli
jecxz
jb
inc
push
addr16
or
dec
out
push
mov
rclb
adc
fwait
sbb
hlt
std
iret
insb
mov
xchg
xor
js
push
add
push
jns
sub
sub
mov
idivb
jnp
fwait
jecxz
cmp
scas
lcall
inc
push
fcompl
or
jns
adc
add
mov
adc
ss
adc
add
fistps
dec
bndldx
es
es
mov
add
or
or
xchg
std
mov
out
jle
cmp
mov
xor
loop
rcll
ds
lds
int3
inc
cmpsb
lahf
mov
pop
inc
mov
adc
jp
in
and
jb
or
inc
and
mov
movb
out
mov
or
push
xor
pusha
lea
je
pushf
mov
sub
pusha
test
pushf
cmc
cmp
push
mov
pushf
call
dec
scas
movsb
jle
scas
push
add
push
adc
popf
add
hlt
ds
rcll
cmp
cli
fnstcw
lcall
or
inc
lea
jnp
lcall
adc
jle
lcall
clc
fisubs
into
bound
fldenv
cli
and
movsl
mov
bsf
adc
inc
adc
je
sahf
inc
and
sbb
mov
push
leave
ljmp
jae,pn
lods
xchg
cmpsb
in
fcmovnu
or
xor
shrb
jg
mov
fwait
data16
mov
call
push
call
in
xchg
push
call
xor
push
call
sahf
loopne
mov
test
add
add
xor
rclb
js
jbe
lret
xchg
mov
bound
cli
cmp
addr16
xor
add
faddl
pusha
or
mov
jl
xchg
cmc
fmuls
das
mov
aas
ljmp
push
in
stos
mov
mov
inc
pop
stos
ljmp
and
adc
mov
pop
jb
adc
jbe
jge
adc
xor
inc
mov
ja
and
mov
ljmp
cld
dec
mov
shrl
ret
cwtl
mov
cs
shl
loop
add
ret
icebp
xchg
mov
les
fwait
sub
mov
mov
pop
dec
cmp
lods
mov
popf
pop
comiss
in
lret
jge
cmp
outsb
push
cmp
pop
out
popa
xor
lods
gs
sub
popa
xchg
jl
fldt
out
repz
inc
or
fwait
insb
callw
lcall
clc
ljmp
ja
test
adc
add
push
call
daa
push
adc
ja,pn
and
les
add
jecxz
imul
pop
jle
add
fstpl
or
shrb
sti
ret
jb
push
jl
and
lret
xchg
dec
mov
mov
or
push
jno
lods
jo
loope
jns
mov
ds
dec
ljmp
pusha
mov
mov
jno
inc
lcall
mov
mov
lods
xor
mov
sub
jp
cmp
scas
push
ror
repnz
shll
cmp
mov
jbe
stc
add
ja,pn
dec
call
fisttpll
loope
mov
sbb
scas
cmpsl
popa
jecxz
call
cltd
loope
and
nop
adc
les
push
jnp
sub
sarb
pop
addr16
inc
hlt
jno
push
cmpsl
data16
jg
mov
pop
les
mov
call
and
es
fsubs
mov
into
sub
mov
mov
adc
sub
jmp
adc
and
pusha
or
pop
pop
mov
and
rorl
add
jbe
imul
call
mov
cs
add
call
arpl
cwtl
pop
mov
mov
mov
test
cmp
dec
insl
gs
add
or
pop
and
call
shrl
mov
daa
shll
adcb
push
lcall
flds
mov
mov
dec
sbb
test
int3
jmp
into
loope
out
mov
xor
popa
or
jge
test
in
cld
rcrb
decl
ja
cmp
inc
lds
jbe
mov
cs
jmp
sbb
ret
sbb
ss
inc
ljmp
mov
int3
inc
pop
adc
mov
jecxz
aas
pop
sub
adc
xor
sbbb
sub
outsl
stos
or
lea
cmpsl
push
shrl
sub
mov
mov
cmpsl
imul
cmpb
dec
and
bound
add
push
mov
and
imul
add
int
inc
in
jle
out
sbb
stos
inc
xchg
mov
or
in
pop
mov
stos
sbb
sbb
mov
imul
xchg
sub
pop
or
mov
pop
in
or
addr16
mov
std
add
or
pusha
pop
inc
aas
testl
paddd
nop
cld
aad
aas
testl
fidivl
into
test
push
mov
enter
daa
sub
loope
xchg
rorb
fmull
or
push
movsl
scas
push
call
xchg
add
and
fs
push
sahf
loop
jbe
icebp
inc
test
in
cmovns
shlb
daa
push
mov
fdivs
xchg
sahf
into
adc
or
out
cli
ret
test
sbb
and
lea
in
push
cmp
mov
ja
mov
push
or
sbb
push
or
xchg
sbb
add
jecxz
xchg
mov
sbb
and
loope
movsb
shlb
pop
js
mov
or
icebp
sbb
lea
jne
bswap
not
pushf
mov
mov
pushf
popl
test
cmp
bt
or
push
movl
call
cld
imul
in
push
rol
push
lea
mov
cmp
outsl
mov
dec
jmp
mov
sbb
xor
pop
or
push
add
dec
mov
pop
cmp
pop
icebp
enter
adc
push
imul
inc
stos
shll
lret
sub
xor
jmp
aam
jns
movl
jae
scas
dec
mov
stos
adc
shl
sub
out
cmc
and
addr16
xchg
pop
mov
fs
or
add
hlt
pusha
adc
pushf
pushf
push
pushf
lea
jmp
push
call
cwtl
push
call
push
and
push
call
int
pusha
stos
pushl
pushl
pushl
mov
lea
jmp
pusha
cmpl
call
push
call
ror
push
add
orb
ds
xchg
add
pop
out
sub
sahf
in
mov
daa
and
stc
lods
out
xor
inc
sbb
cwtl
cltd
mov
fs
cmp
dec
push
out
and
into
mov
scas
sti
jbe
out
mov
es
out
idiv
data16
mov
je
dec
cltd
loope
sbb
pop
loopne
ret
xlat
aad
int3
jb
fwait
ss
and
or
inc
dec
xchg
add
push
jge
and
jle
and
and
jne
adc
fisubs
push
xlat
inc
cmp
into
icebp
aaa
add
mov
mov
push
add
int3
cmpsb
loopw
loope
lds
push
mov
push
test
dec
pop
std
clc
and
adc
jge
dec
push
into
pop
movsl
pushf
cmp
pushf
movsl
in
jb,pn
mov
jae
mov
jo
decb
push
adc
sti
into
fcoms
inc
xor
cmovne
rorl
repnz
push
adc
jbe
jge
cmp
call
aas
repnz
aam
jno
mov
pushf
in
adc
dec
push
dec
adc
mov
jl
cmc
or
pop
leave
cmp
add
mov
mov
adc
jns
xor
lret
mov
imul
sti
fcmovu
es
add
je
call
xor
pop
or
xchg
lret
jmp
pop
push
in
in
or
sub
cmp
pop
lea
call
movsl
mov
jmp
ror
in
subl
cmp
aaa
out
hlt
or
and
aas
push
mov
fadd
ljmp
scas
fsubl
movsl
movsb
insb
xor
push
in
into
imul
popa
mov
addr16
push
jb
outsl
mov
arpl
dec
movsb
sub
xchg
cld
test
in
fisubrs
sub
mov
lock
idiv
push
call
outsl
mov
cs
jmp
call
jb
cmp
jg,pn
cs
leave
push
call
mov
jg
or
xchg
data16
xchg
jo
nop
jmp
jo
cltd
ljmp
adc
or
jo
movsb
sbb
adcb
xchg
cs
je
aas
leave
cwtl
mov
mov
jge
mov
movsb
jg
rolb
out
cmp
aam
ljmp
das
pop
fcoml
imul
push
inc
cmc
or
pop
or
jo
dec
and
dec
test
jo
mov
xor
and
ret
add
fstpt
jo
test
sub
hlt
aas
out
pshufw
clc
int3
xchg
add
sub
push
into
adc
mov
xchg
xor
pop
push
fistl
mov
in
test
push
jo
icebp
jp
inc
add
lea
enter
mov
mov
xor
std
sub
je
lds
jnp
scas
mov
mov
push
push
xchg
inc
arpl
dec
mov
jo
cmpsl
sub
xor
rorb
inc
jmp
andb
cmpb
mov
mov
jo
xor
pushf
in
setbe
push
add
or
subl
les
lret
in
fcoml
cli
int3
or
fwait
xchg
pusha
jbe
pop
stos
mov
mov
jo
jnp
adcb
jo
or
cmp
pop
ss
rclb
mov
and
pop
imul
shr
jecxz
jmp
cmpl
jb
push
mov
lock
pusha
pop
push
push
jo
and
xor
jo
loop
pop
mov
jp
prefetch
or
arpl
imul
test
cmp
xor
or
stos
push
hlt
test
aaa
fucomip
dec
cmc
sub
push
cs
pop
js
fiadds
sub
aaa
sub
push
arpl
testb
lods
pusha
fnstcw
inc
jo
sbb
add
lret
sbb
cmp
notb
orb
pop
sub
in
lods
push
and
and
adc
cmpsl
xor
mov
inc
movsb
shll
out
pop
jne
mov
pusha
cmp
lea
aad
in
mov
fisubs
test
ss
sbb
adc
ds
test
mov
dec
int3
mov
jo
pop
lods
shl
inc
outsb
arpl
aas
xor
addr16
add
mov
gs
or
jnp
pusha
mov
jl
test
jne
inc
mov
push
jbe
test
push
int3
insb
mov
scas
call
dec
test
xchg
mov
dec
pop
test
jo
out
push
les
movsl
inc
cmp
out
fldl
mov
jns
mov
jo
jno
inc
mov
xchg
add
jl
push
test
ret
fs
xchg
mov
xchg
jo
dec
push
jp
rol
mov
adc
jo
popa
into
xchg
out
icebp
jo
xchg
pop
inc
notl
mov
and
mov
dec
dec
mov
jns
arpl
lcall
ret
mov
jo
mov
fcmovbe
pop
push
mov
mov
loop
xor
xor
push
xlat
jo
or
pop
jo
repnz
imulb
or
inc
sbb
mov
cmp
dec
pop
std
add
lret
imul
or
add
js
js
popa
std
mov
dec
mov
stos
repz
jo
or
jl
jo
xchg
xchg
imul
inc
jo
aad
sbb
scas
mov
insb
pusha
cli
pop
test
shlb
xchg
inc
adc
lea
xor
cmpsl
jp
in
sub
lock
dec
jo
sbb
mov
xlat
push
call
in
ds
out
pushl
decb
xchg
mov
fisttps
sbb
push
stc
and
jns
les
iret
jo
xchg
pop
mov
sbb
out
js
push
adc
je
outsb
mov
cltd
jo
pop
int
dec
outsb
xorl
sub
cmp
push
or
cmp
bndldx
imul
dec
lcall
ficomps
das
jne
inc
xor
pusha
test
lea
mov
imul
fldt
gs
mov
cmp
int
cmc
jo
inc
pushf
dec
mov
jmp
lock
in
test
mov
dec
push
push
jmp
test
xor
inc
ret
push
xor
cmp
leave
or
push
sbb
es
out
das
out
pop
cs
xchg
pop
ja
aaa
push
in
lds
imul
lcall
outsb
jmp
das
jg
push
mov
hlt
movsl
push
ret
sarl
pop
nop
mov
mov
insb
push
sub
push
dec
push
js
fisubl
testl
div
jo
xchg
add
aam
iret
inc
push
fidivl
mov
scas
mov
jle
das
jmp
cmp
cmp
imul
xorl
cmpsl
adc
fisubrs
jo
sub
jnp
xchg
nop
xor
jb
std
jle
stos
add
push
int3
inc
mov
scas
add
je
xor
sub
mov
pop
xor
js
jg
mov
stos
pop
adc
test
jo
push
sub
addps
lods
imul
mov
sarb
or
testb
and
test
push
jo
push
sti
clc
push
aaa
jmp
mov
jo
insb
cmpsl
add
jnp
out
xchg
adc
ds
enter
in
lock
push
out
mov
pop
adc
mov
cmp
scas
push
fwait
insb
sbb
sbb
cld
mov
sbb
push
pop
stos
inc
jo
dec
mov
pushf
jmp
popf
adc
mov
push
mov
jbe
fs
mov
ret
dec
aaa
jo
cmp
jge
jo
push
and
push
cs
mov
outsb
vmovhpd
mov
jo
fstpl
xchg
addb
shl
out
mov
sti
notl
fsubrs
mov
mov
rorl
fwait
mov
mov
sbb
bt
rolb
fdivrs
jo
fsubl
test
imul
daa
rol
or
mov
sbb
sbb
add
std
mov
pop
inc
rorl
pop
lret
jo
shlb
mov
cmp
jp
aad
sti
push
jo
dec
sar
loope
nop
push
ljmp
jecxz
push
xor
out
test
cwtl
je
pusha
in
sti
push
js
icebp
mov
dec
or
int
jo
cmpsb
inc
loop
jmp
inc
subb
shrb
fldt
loop
fiadds
jl
xor
outsl
jp
push
mov
popf
jo
std
xor
shrl
dec
jo
ret
add
cmp
call
jo
or
sti
in
jo
scas
jb
push
les
jnp
sub
push
mov
jo
push
mov
push
sub
add
pushf
aas
inc
decl
fs
stc
into
jo
mov
imul
mov
pop
jo
dec
inc
ret
rcr
aam
fists
jo
testb
pushf
xor
nop
mov
sarl
inc
xor
fs
jne
insl
inc
mov
mov
lret
xor
test
mov
pusha
jo
subb
push
prefetchwt1
je
notl
dec
adc
sbb
repz
lret
cs
sub
out
dec
orb
les
stos
inc
push
or
jge
popf
dec
jo
repnz
add
jo
xor
and
fsubrs
and
or
nop
xchg
jle
sub
int3
jnp
sub
and
sti
adc
fcmovnb
loope
push
pop
xchg
leave
loopne
jmp
jle
xor
movsl
mov
insb
mov
xlat
leave
aad
jo
mov
xchg
test
dec
jo
cwtl
adcb
sub
mov
xchg
sar
push
push
loop
inc
jne
jb
jo
cli
lods
xchg
sub
fwait
mov
ret
lock
inc
in
daa
or
or
sbb
sahf
xlat
jg
pop
pop
nop
les
jle
sbb
gs
divb
inc
xchg
dec
cltd
adc
sub
push
jno
jae
jne
das
sarl
mov
sbb
addr16
aad
addl
add
popf
mov
hlt
cli
fnstenv
jo
test
dec
gs
mov
mov
pop
mov
inc
cmp
jo
xchg
pusha
push
insb
cmpsb
xchg
cwtl
pop
les
push
cmpsl
outsl
jo
cld
add
divl
sub
mov
lret
jp
es
jmp
imull
out
sbb
or
jmp
xchg
js
cmp
sub
out
jbe
lret
lock
clc
bound
adc
ss
pop
jne
stc
push
jo
xchg
inc
daa
or
test
sbb
int
ret
nop
inc
std
fiadds
xor
jle
mov
jo
adc
out
movsb
xor
cli
lret
mov
add
cmp
imul
cld
mov
xor
icebp
loopne
xchg
mov
pop
pop
loop
lcall
fsubl
clc
nop
dec
sbb
and
xchg
adc
sbb
ljmp
arpl
imul
jnp
jmp
fld
adc
mov
jo
mov
and
das
nop
mov
mov
dec
sbb
jo
push
mov
or
fs
sahf
jo
iret
sbb
loopne
xlat
dec
nop
out
cmp
jmp
push
sbb
clc
push
add
call
mov
lock
and
test
jno
insb
mov
xor
data16
xchg
scas
es
hlt
push
add
ja
push
xor
fbstp
out
dec
push
aas
out
sarb
js
std
repnz
xchg
gs
cmp
loop
xchg
and
icebp
push
and
or
sahf
das
nop
and
notb
ds
xor
mov
insb
aaa
movsl
cs
cmp
addr16
push
in
xchg
or
mov
lret
cmc
cmc
cmpsb
ror
dec
jle
xchg
in
mov
push
rclb
jo
push
enter
mov
iret
out
jns
insl
xor
jo
inc
ljmp
mov
jecxz
sbb
push
test
sub
leave
pop
push
shr
pop
ficomps
adc
pop
das
mov
jno
stos
push
and
jo
jbe
jp
jmp
out
jo
aas
imul
pop
sbb
add
xlat
push
fcmovbe
or
pop
mov
xor
sti
xor
aaa
xor
stc
rdmsr
mov
inc
mov
xor
cmp
inc
in
lret
push
dec
lods
mov
sub
enter
jae
cmc
nop
lock
into
bound
push
jo
pop
mov
cld
rcrl
je
lahf
nop
das
std
xchg
data16
mov
jo
lock
jle
fs
push
mov
pop
add
jo
shrl
clc
test
adc
fnsave
jo
popf
jmp
dec
and
repz
jo
pushf
jb
daa
mov
or
mov
jbe
mov
cmpb
jo
lods
and
sarl
jns
stos
sbb
lret
jo
mov
movb
movsl
in
jl
jo
add
add
aad
inc
bound
inc
aam
push
or
int
cmc
js
imul
jg
loope
ss
mov
mov
popa
mov
mov
dec
dec
rcll
fs
jns
push
dec
jo
jg
jnp
and
in
push
mov
jo
popf
xor
ss
pop
outsl
out
mov
sbb
addr16
dec
fwait
movsl
dec
xchg
and
mov
mov
cmp
js
jecxz
and
and
pop
int
cmp
sbb
mov
jo
mov
pop
std
dec
stos
jle
push
xor
xor
js
sub
loope
cmc
dec
push
add
es
pop
jp
stos
mov
les
jo
xchg
pop
into
leave
cmp
jo
lahf
add
repnz
rcr
dec
jo
or
repz
mov
jns
jg
icebp
mov
sbb
pop
clc
js
rcr
cmp
flds
int
sub
cltd
pusha
fcoms
lods
pop
ja
ret
sarl
shr
cmp
xchg
and
imul
pop
nop
jmp
mov
imul
repz
pop
dec
xor
lea
cld
fs
nop
inc
mov
jo
loop
stos
out
repnz
adcb
push
pop
data16
xor
bnd
sub
scas
je
push
je
data16
jnp
push
cmp
sub
mov
aaa
push
jo
add
cmpsb
xchg
dec
xchg
jle
push
bound
dec
push
sbb
xlat
jl
jo
repnz
in
stc
inc
lds
and
call
ljmp
adc
fisubl
daa
mov
and
imul
mov
pop
sbb
lods
je
clc
imull
sub
in
shrl
cmp
jo
mov
aaa
clc
sbbl
adc
in
push
jo
xchg
popf
sbb
mov
inc
jo
mov
lods
ljmp
pop
add
les
jo
test
pop
cld
add
aad
orb
arpl
data16
das
or
pop
iret
sahf
insb
sqrtps
add
push
outsl
lahf
dec
gs
ss
push
js
adc
pushf
mov
add
loop
mov
and
or
and
outsl
imul
sahf
into
ficoml
jo
aam
mov
scas
sub
jo
jg
bound
jo
xor
dec
stos
notl
xchg
cmp
addr16
mov
jo
pop
cmc
mov
jo
push
mov
scas
add
aam
out
fildll
mov
jo
push
xchg
out
stc
leave
adc
call
adc
cs
daa
cmovnp
insb
clc
sub
jo
mov
sub
repz
movsb
add
packuswb
push
inc
add
xchg
add
mov
scas
jo
out
cwtl
imul
or
call
cs
mov
mov
mov
hlt
add
xchg
fld
sub
sbb
stos
dec
gs
jo
test
xchg
xchg
or
cmpsb
pop
mov
inc
xor
xor
push
jecxz
or
addb
mov
inc
gs
dec
subl
mov
push
js
sub
aam
jle
dec
mov
sahf
adcb
stc
outsl
test
push
in
mov
mov
jo
inc
hlt
mov
pop
fst
dec
xor
or
jae
rclb
xchg
jmp
xchg
jo
pop
fistps
sbb
ja
mov
aam
cwtl
mov
jo
out
cmpb
sahf
jnp
sbb
mov
sbb
shlb
das
mov
call
sbb
push
adc
adc
subb
adc
dec
jo
add
mov
inc
sbb
out
add
popf
ror
incb
dec
jmp
mov
test
inc
jbe
mov
cmpb
mov
scas
imul
xchg
outsl
subb
in
xor
cmp
outsl
bound
pusha
inc
sarl
in
mov
mov
movsl
jo
fcmove
or
push
jo
lods
movl
mov
test
scas
jg
jo
cmp
aas
js
test
jle
ss
mov
adc
imul
out
jo
xchg
cmp
insl
and
insb
jg
jo
and
mov
nop
flds
or
jo
push
pop
mov
jo
and
push
or
dec
imul
inc
icebp
jno
popa
jo
arpl
int
fdivrp
xorb
mov
jo
xchg
inc
addl
aaa
in
inc
pop
mov
dec
jo
out
mov
push
xor
pop
cli
mov
shrl
jo
testb
lock
jmp
xorb
iret
adc
jo
push
js
cmp
sub
sub
mov
sbbl
leave
jnp
test
jl
outsb
movsb
jo
push
movsl
cli
mov
sar
int3
sub
mov
push
imul
arpl
push
xchg
mov
shlb
pop
or
call
in
fdivrp
sub
add
adc
push
imul
dec
shrl
cmc
pop
mov
cmp
mov
mov
call
add
pop
sti
adc
adc
test
ja
jmp
leave
jo
mov
inc
out
adc
jo
pop
sbb
jo
push
in
fsubl
inc
imulb
icebp
xchg
ja
jo
jne
lret
out
ds
adc
test
push
or
es
pop
push
mov
sub
xor
jns
jo
jnp
xchg
out
jo
push
pop
pop
push
sub
push
dec
arpl
jns
push
jecxz
ds
mov
pop
out
xor
and
in
in
inc
sbb
or
test
lea
lahf
sahf
xchg
xlat
push
js
pusha
jo
out
or
or
cs
adc
xlat
std
xchg
sub
mov
imul
mov
test
faddl
adc
xorb
jmp
mov
addr16
pusha
movsl
cmp
jno
cmp
lods
adc
add
jo
sbb
icebp
negl
dec
shll
leave
dec
daa
test
roll
xlat
fdivrl
clc
push
xchg
mov
ss
lock
dec
pop
and
sbb
adc
mov
sti
fadd
jl
mov
int3
outsb
add
push
roll
jp
decl
insb
xor
push
pshufw
adc
jo
jo
mov
adc
gs
psubd
dec
das
adc
nop
std
jle
ds
jno
lahf
inc
out
shll
or
es
push
cs
pop
jl
and
jo
daa
push
push
out
inc
repz
pminub
sbbb
faddl
fs
gs
out
jo
jnp
or
push
push
cmp
bound
std
sarl
test
mov
mov
jmp
jo
loop
inc
jo
adc
call
movsb
mov
inc
nop
mov
push
sbb
shlb
out
les
repnz
scas
push
mov
pop
sbb
loopne
jno
mov
and
je
cmp
xchg
xchg
sub
mov
loopne
xor
rorl
push
ret
add
and
in
inc
es
pop
inc
stc
push
clc
mov
mov
mov
je
popl
inc
jmp
xorb
add
cmp
int
sbb
and
jge
inc
cmp
icebp
in
dec
ja
push
mov
jb
sub
push
add
cmpsb
mov
pop
inc
mov
jb
mov
jmp
fistpll
bswap
or
xorps
rolb
or
popa
testb
imul
and
or
jae
nop
lods
addb
jmp
and
sti
sub
and
push
xchg
mov
dec
inc
lret
das
sar
shl
xchg
hlt
pop
in
pop
movsl
test
jae
outsb
lods
mov
aam
adcb
jne
fidivrl
inc
jns
mov
jge
pop
push
cmpsl
popf
pop
or
call
cs
push
push
sub
fisubrl
js
ja
idivb
adc
insb
pusha
adc
mov
cmpsl
jo
and
mov
push
fs
mov
mov
push
xor
loop
dec
mov
in
cmpsl
lods
xor
insl
clc
push
add
ret
jo
es
dec
sub
out
fdiv
xor
andb
xlat
stc
das
jle
fistpl
out
adc
pop
mov
sub
xor
fwait
ret
stos
push
xchg
mov
push
pop
push
xorl
or
cmp
imul
xchg
xor
js
xchg
dec
in
adc
mov
daa
divl
xchg
pop
je
leave
lods
enter
repnz
push
rorb
es
jno
push
and
push
mov
out
sahf
adc
mov
pop
pop
out
push
js
push
cmc
jmp
jo
pop
in
and
insb
pop
nop
cmp
fisubl
ja
inc
jnp
sbb
loope
or
popa
dec
adc
dec
mov
cwtl
adc
pusha
xlat
jae
adc
filds
outsb
add
negl
adc
jns
jmp
xorb
push
cmpsl
inc
je
mov
test
mov
sahf
nop
fisttpl
pop
jp
in
in
test
or
lea
jmp
stos
sbbb
ss
jns
dec
inc
adc
mov
mov
popa
lea
ds
mov
jo
mov
nop
les
mov
mov
call
and
clc
movsb
icebp
cs
inc
cmp
pop
sub
mov
subb
cld
test
das
jmp
sub
scas
add
push
push
pushw
add
mov
adc
mov
adc
outsb
insl
lods
das
sbbl
mov
add
test
cmpsl
mov
cli
mov
push
dec
mov
adc
repz
aad
es
lock
mov
lods
sub
cmpb
pop
and
setae
ljmp
bound
icebp
test
jo
dec
mov
loop
lcall
mov
mov
sub
xchg
cmp
inc
add
push
hlt
sbb
jne
add
pop
xchg
repz
sbb
js
arpl
push
clc
jns
roll
repnz
mov
fs
add
dec
jbe
mov
dec
cmp
cmp
sub
imul
cld
jo
push
or
pop
push
out
outsb
push
arpl
inc
ss
inc
and
xchg
std
fildll
push
or
jo
mov
xor
lock
mov
mov
push
jecxz
sahf
aas
jno
xchg
jnp
add
cld
or
pop
mov
leave
lock
sbb
bnd
repz
jo
andl
jo
xchg
outsl
mov
je
jo
mov
aad
ljmp
xchg
movsb
mov
mull
mov
sub
inc
int3
jb
mov
mov
sub
fidivrs
cs
idivl
push
scas
push
pop
mov
test
ret
cwtl
mov
pushf
push
mov
jo
add
lahf
dec
cs
inc
cltd
cmp
xchg
push
pop
xor
xor
insb
cltd
mov
push
fsubs
push
pop
testl
cmpsb
dec
push
sbb
nop
lahf
adc
fisubl
push
orb
lods
jo
mov
test
jo
mov
pop
mov
cs
in
push
scas
and
adc
mov
movsl
dec
jo
dec
cmc
mov
dec
mov
jns
push
jge
adc
mov
and
dec
fxch
out
push
es
insl
dec
xchg
lds
jo
jnp
outsb
and
mov
data16
jns
nop
cs
clc
mov
movsl
xlat
push
test
cli
imul
leave
bound
mov
and
scas
adc
rolb
mov
jo
cmp
mov
or
out
test
ret
xchg
adc
insl
ret
sbb
imul
into
mov
incl
sub
jmp
mov
pop
and
cmp
das
aam
js
mov
jo
out
xor
mov
jb
jo
loop
test
push
popa
or
in
movsl
adcb
mov
xchg
ljmp
insl
mov
clc
loop
fstl
js
popf
fld
in
popa
cmp
cs
or
xor
rclb
jae
push
pusha
rcrl
in
jne
adc
push
bound
cs
jo
movsb
xor
in
stos
sub
fcos
mov
or
cld
out
sbb
jo
fwait
lods
mov
sbb
pop
js
push
pop
leave
sub
loopne
rcr
or
lret
outsb
and
insb
cwtl
add
push
pop
jmp
lea
add
push
out
jmp
jo
insb
xchg
leave
rcr
cli
loopw
dec
cwtl
stos
in
mov
lret
cmp
add
jl
fcomi
jg
bnd
pop
int
sub
jo
mov
lock
out
pop
into
mov
and
jo
push
clc
jbe
sub
mov
in
push
iret
jge
stc
mov
push
inc
lret
sub
adcb
mov
push
ja
jo
adc
xchg
out
imul
cs
repnz
adcb
push
sbb
ret
adc
lods
lret
mov
js
add
jecxz
push
jno
mov
icebp
jo
scas
pop
jle
mov
push
stos
mov
adc
out
inc
dec
popf
ret
jo
lods
mov
cmp
repz
sub
xchg
and
and
into
sub
pop
fisttpll
xor
outsl
jo
jmp
test
push
movsl
in
jbe
push
mov
mov
shll
popa
sub
jp
loopne
sbb
adc
mov
dec
jb
cwtl
repnz
shlb
sbb
jl
jo
sbb
outsb
xchg
cli
pop
jle
push
sti
scas
lcall
sub
mov
out
je
ret
adc
movsl
fs
mov
nop
or
mov
rcrl
bswap
insb
ja
loopne
jl
in
outsl
or
mov
xor
loope
cs
pop
cmovle
jp
lret
jp
jo
lret
adc
popf
xchg
notl
stc
and
pusha
fs
lahf
push
mov
lods
cmpl
nop
addr16
xor
xor
mov
push
jo
icebp
pop
cmc
jecxz
shufps
push
cwtl
loope
mov
mov
mov
jbe
fwait
jo
sbb
cmp
jl
ja
bound
hlt
adcb
nop
jg
testb
mov
add
test
sbb
addb
insl
mov
jo
js
lcall
mov
jo
and
inc
mov
ret
in
fld
and
jmp
mov
mov
in
jns
push
repnz
mov
adc
or
loop,pt
jecxz
ljmp
insb
scas
sub
jg
orb
sbb
jmp
lahf
push
push
fstp
stos
dec
cs
hlt
jo
pop
mov
shlb
addb
movsb
mov
and
jnp
and
out
mov
sarl
adc
aas
popa
scas
push
and
nop
sbb
mov
push
push
jo
imul
ret
push
scas
scas
dec
mov
insb
rcll
int
or
mov
aam
in
imul
adc
lock
inc
scas
pushf
test
call
push
mov
xor
add
shll
shlb
pop
inc
mov
jbe
jo
movsl
out
arpl
mov
fbstp
xchg
mov
stos
les
jns
stos
jo
pop
mov
in
sti
push
xchg
jecxz
sahf
nop
clc
ret
pop
fs
jbe,pt
jo
scas
sub
nop
push
cli
lock
lods
jg
dec
mov
stos
jo
out
outsl
mov
iret
outsb
movsb
pop
in
shlb
adc
inc
std
orl
aad
mov
repz
mov
pop
sub
insb
aas
fmul
hlt
jo
dec
stos
add
cmp
mov
repz
out
push
imul
sub
jp
in
push
sub
dec
loop
cmp
ja
lds
pop
icebp
in
mov
cmp
rorb
leave
cmp
inc
es
gs
jo
pop
ljmp
out
and
sbb
fs
inc
mov
mov
xor
js
push
out
inc
or
push
ja
xor
js
sahf
mov
xor
or
ds
and
test
aam
repnz
popf
fiadds
adc
xchg
inc
xchg
lret
das
cmc
test
loopne
nop
sahf
lret
bound
outsb
insb
mov
arpl
inc
loope
inc
push
mov
cwtl
cmpsl
sub
or
sub
sub
pop
dec
adc
xchg
jl
aam
psubusw
stos
lcall
xchg
jo
inc
jecxz
fldl
xor
nop
scas
adc
pop
sbbl
pusha
loope
push
out
test
into
hlt
shl
cmp
push
mov
and
sarl
jmp
mov
mov
jae
je
leave
mov
mov
fsubrs
ss
out
shrl
repnz
cld
cmp
xor
in
jo
cmpsb
pop
out
ret
jnp
add
jo
xchg
les
addr16
or
nopl
pop
pop
dec
jne
adc
adc
dec
fwait
jo
mov
mov
lock
ljmp
andl
push
je
lock
push
outsb
xchg
fcompl
loope
cmc
pop
sbb
rcll
cmpsl
nop
add
push
fsubs
cli
je
lods
pop
mull
adc
ds
fcoml
clc
jo
repz
xchg
ja
mov
pusha
ret
inc
or
jo
sub
in
add
pusha
jmp
push
add
sub
out
gs
shrl
sub
sbb
cwtl
mov
loopne
push
push
mov
cltd
icebp
pop
cmp
jbe
les
xor
rorl
test
mov
mov
mov
jnp
out
xorb
xor
lds
jl
mov
fdivs
mov
jo
cli
imul
loop
nop
stos
sbb
xor
cmc
jb
fstpt
mov
pop
nop
add
jecxz
js
pushl
adc
outsb
in
lock
in
or
pop
mov
pushf
jo
inc
jne
sbb
mov
fs
in
xchg
pop
jo
mov
or
popa
and
cmp
jo
push
pop
xor
inc
sub
jge
xchg
push
jo
jae
insl
pop
mov
xchg
sub
adc
mov
push
jb
test
repnz
arpl
pop
push
test
jno
add
jmp
shlb
repnz
enter
mov
nop
sbb
pusha
vpsubb
push
fistpll
push
ss
loop
inc
mov
test
push
push
rcl
stos
cmp
cmp
loope
bound
jo
mov
inc
roll
inc
cmc
push
mov
mov
ljmp
mov
pop
jo
pop
xor
addb
xor
jo
out
add
dec
sbb
fwait
loopne
mov
imul
ret
loope
push
mov
mov
push
mov
inc
shl
fs
int
mov
imul
jge
mov
lods
iret
sub
bound
xchg
jge
jo
push
jg
pop
outsl
jp
ret
add
lds
and
pop
bound
addb
adc
sbb
in
cs
mov
push
pop
test
cmp
ret
or
adc
cmpl
into
jns
push
cs
push
int
rclb
js
xor
push
std
add
sbb
loopne
jp
sbb
xchg
push
mov
mov
adc
xor
pop
lret
shrb
jl
aad
xchg
mov
sbbb
nop
inc
jns
xchg
addl
adc
mov
je
pop
lods
js
fdivs
fs
nop
pusha
ja
stos
or
inc
in
dec
mov
and
fsts
andb
jo
jge
insb
aad
push
fisubrl
icebp
xchg
enter
testl
or
mov
sub
add
jae
js
push
ficompl
out
mov
dec
jae
xchg
jo
sub
sbb
imul
xlat
cs
mov
push
js
sbb
mov
add
call
push
dec
ja
jmp
shll
in
adc
sub
cmpsl
pop
js
repz
sbb
jo
fwait
xorl
lock
or
das
add
outsl
loopne
lods
jbe
pop
jo
mov
je
ljmp
jo
xor
jnp
gs
mov
sarb
ss
mov
cwtl
or
xchg
push
addr16
insl
out
test
outsl
push
aad
inc
or
lock
jb
outsb
pop
imul
clc
mov
mov
div
insb
call
jo
mov
and
in
jge
xor
out
dec
sub
insl
jl
or
xor
xchg
outsl
aaa
in
decb
xchg
shll
test
xchg
jo
out
pop
iret
mov
inc
pop
ud2
jns
jno
xorb
pop
in
sub
mov
mov
sbb
idivb
aas
push
jo
out
lea
jo
pop
icebp
sub
xchg
and
cmp
inc
push
adc
add
fstl
jmp
sub
notl
push
sahf
add
icebp
lret
xor
imul
cs
xchg
cld
jo
cmp
das
dec
mov
jo
fnstsw
push
in
insb
jae
in
ds
push
push
xor
rorb
test
test
imul
cwtl
mov
sub
jecxz
xchg
jae
jnp
dec
aad
pop
add
mov
nop
dec
push
orb
dec
lock
scas
mov
cwtl
lret
imul
sub
mov
pop
cmpsb
pop
test
bound
mov
lea
stos
lahf
clc
movntps
cmp
push
jne
loope
je
push
jo
mov
mov
push
xor
out
in
int
fwait
push
js
jg
cs
lcall
mov
js
cld
orb
shrb
jo
filds
repz
jo
jge
or
aas
cwtl
lock
jo
loope
mov
outsl
outsl
pop
xlat
icebp
push
jecxz
mov
arpl
mov
cltd
insb
lea
jmp
jmp
cmp
cs
push
xchg
jo
mov
addr16
daa
add
ljmp
dec
mov
dec
adc
inc
and
insl
in
movsl
loope
jo
dec
or
mov
js
mov
outsb
lea
rorl
lahf
cmc
or
sub
dec
mov
pop
sbbb
cmpsl
sbb
push
dec
and
push
sti
inc
je
addb
daa
stc
jbe
in
cld
les
cmpsb
sub
sub
test
jo
xor
xor
je
in
stos
xchg
mov
out
jns
shlb
jo
mov
push
add
out
mov
xchg
ret
js
mov
stos
das
test
push
ja
mov
and
mov
adc
sub
lahf
cmp
cmpsl
paddsb
sti
jbe
rcrb
xor
jo
pop
sahf
cld
mov
enter
rclb
push
or
xorb
dec
and
xchg
fdivl
imul
lods
pop
rclb
xor
cmpsb
in
inc
mov
lcall
les
test
and
mov
jp
jo
arpl
sbb
dec
or
xor
loopne
nop
sub
fnsave
aas
mov
dec
inc
shr
pop
cmp
pop
je
dec
inc
xor
mov
cs
subb
add
pop
inc
test
or
mov
jle
jo
pushf
test
jo
cmp
fsubrl
push
pop
xchg
neg
inc
push
aad
out
add
add
outsb
iret
scas
xchg
jo
pop
or
lea
jb
jne
test
js
cmp
mov
and
int
jecxz
ja
jo
hlt
push
mov
std
adc
jl
js
movsl
aaa
jge
xor
lock
push
or
pop
or
js
fbstp
sbb
mov
cmp
movsb
inc
cmp
mov
mov
pusha
pop
dec
mov
js
in
das
push
fstps
pop
notb
addr16
mov
and
cmpsl
mov
dec
and
mov
push
mov
sub
int
ss
push
xchg
divl
push
jo
pusha
jb
xor
xor
inc
dec
mov
or
data16
orl
movsb
dec
in
jo
dec
pushf
mov
in
push
inc
jp
dec
xchg
mov
sbb
in
js
xor
nop
pop
nop
push
lds
jne
dec
in
jns
jo
adc
cmp
add
cmc
mov
cmp
aaa
sbb
mov
push
mov
mov
add
xor
aaa
repnz
jge
std
mov
xor
pop
xchg
imul
out
int3
dec
dec
aad
add
repnz
lea
jle
jbe
pop
cmpl
lret
test
aas
pop
fidivs
dec
aam
mov
mov
push
out
shll
inc
pop
cmpb
in
xchg
ret
mov
jmp
pop
je
jo
add
or
dec
xor
popf
imul
sbb
mov
dec
inc
inc
or
test
ljmp
add
sbb
das
lea
dec
test
mov
inc
jb
mov
adc
aas
cmp
test
xchg
xlat
lock
loope
push
jg
cs
in
insb
mov
sub
xor
mov
mov
or
sub
mov
or
push
dec
test
rorl
mov
jne
pusha
sti
divl
movsl
add
dec
lea
pop
jl
nop
out
fwait
lock
idivl
inc
aaa
xor
cmp
js
and
push
imul
aas
movb
dec
cmp
push
sbb
aaa
rcrl
arpl
lock
js
jp
mov
push
sub
push
dec
mov
fnsave
sbb
aam
xchg
sbb
mov
test
sub
icebp
mov
jne
xor
mov
pushf
repz
mov
pop
push
mov
jo
loope
mov
jo
mov
idivb
sub
imul
mov
mov
shrl
jo
inc
std
xor
sub
push
jo
out
movsb
inc
jle
add
in
loope
mov
dec
mov
xchg
adc
jo
and
xor
adc
or
cmc
cli
push
popa
fnstenv
ja
pcmpgtb
add
fistl
jo
dec
jp
jo
ret
or
inc
mov
add
stos
icebp
imul
pushf
test
mov
nop
mov
rcll
and
addr16
xchg
out
adc
ret
test
fistps
pop
movsl
pop
jo
subl
nop
dec
push
sub
jo
cli
lods
leave
cmp
jo
cmp
adc
subb
jge
scas
pop
jo
repz
cmpsb
or
shll
repnz
sub
add
jo
xchg
sub
lret
mov
adc
pop
jnp
fwait
push
loopne
out
add
jno
scas
cltd
imul
sbb
xchg
fstpt
add
jns
repz
in
inc
ret
dec
push
ret
push
call
lods
jne
pusha
lea
je
push
pusha
cmp
movw
jmp
push
call
dec
mov
seta
mov
cmc
clc
pushf
movb
test
pushl
jmp
stos
rorb
push
and
rdtsc
sbb
or
jg
mov
or
lock
xchg
scas
push
icebp
sbb
sbb
stc
sub
mov
test
push
jp
mov
into
mov
ljmp
fiadds
inc
iret
into
inc
inc
cmp
inc
pushf
jbe
inc
jecxz
inc
add
lods
add
test
insb
jo
das
cltd
push
cmpsl
xchg
adc
cmpsl
add
pop
dec
aaa
lods
ja
ficoml
xchg
sub
dec
pop
rorb
inc
push
or
int3
mov
lret
cmpsl
pop
cmp
dec
scas
push
fadds
popa
or
mov
fs
insb
add
movl
or
add
push
je
jle
repnz
lock
inc
pop
mov
mov
sbb
out
adc
rdpmc
sbbb
mov
jb
xchg
cmpsl
push
sbb
fnstcw
xchg
jne
out
xchg
notb
push
hlt
xchg
dec
sbb
ret
mov
pop
in
lds
sarl
iret
in
imul
xor
mov
mov
ljmp
jo
fwait
or
idiv
out
andb
pop
cmp
mov
jne
dec
add
jge
scas
fcomps
loop
aad
cmp
adc
inc
push
inc
adc
push
lcall
enter
mov
xchg
adc
movsl
fwait
pop
add
in
add
push
in
inc
sub
rcr
lcall
push
es
int
mov
mov
mov
pop
es
or
cmpsl
push
out
pushl
movb
lea
call
push
lea
jb
push
pushl
ret
test
cmc
jmp
adc
or
xchg
enter
mov
jne
sbb
jl
mov
inc
ficomps
jne
push
pop
repnz
inc
iret
sti
pop
sbb
decb
mov
mov
dec
gs
mov
ljmp
inc
jb
inc
push
or
add
xor
add
jbe
in
ljmp
nop
sbb
jg,pn
and
cmp
out
popa
push
call
sbb
cs
add
inc
dec
jge
sub
inc
xchg
xchg
push
cld
mov
stc
jae
scas
mov
adc
xlat
mov
sub
jns
cmp
insl
jecxz
mov
cmc
pop
sub
loopne
andl
int
pusha
jns
vmovd
pop
jb
and
or
mov
nop
ljmp
push
mov
test
fwait
in
daa
or
jp
xchg
pop
fnstcw
aaa
cmp
cs
cmp
call
clc
sbb
sub
cs
fiadds
add
pop
adc
mov
mov
add
aam
jl
repz
xor
movsb
xor
pop
add
or
jnp
data16
cwtl
add
nop
and
pop
mov
into
sbb
push
adc
or
add
int3
add
xchg
xor
mov
push
leave
daa
dec
mov
adc
jno
mov
lods
cs
or
imul
push
and
mov
push
movl
call
pushl
dec
jmp
xchg
cmp
and
pop
mov
aaa
sub
mov
jno
icebp
loopne
cmpsl
lret
adc
or
cli
sbb
or
in
adc
lahf
push
cli
pop
adcl
fs
pop
lcall
push
jnp
xchg
leave
dec
scas
adc
pop
add
mov
gs
pop
sub
out
pop
mov
call
frndint
xor
jne
push
push
or
cmc
adc
sti
sub
inc
sbb
jbe
in
or
popa
call
xlat
jo
jbe
ja,pn
mov
flds
add
je
je
pop
pop
mov
pusha
jae
jno
and
jle
sbb
int
je
cs
or
xchg
mov
mov
pop
testl
fcoms
insb
lcall
inc
dec
push
adc
push
movsb
and
repz
jb
pop
ret
fxtract
outsl
mov
xor
dec
push
cmp
icebp
pop
add
imul
pop
and
jns
dec
jbe
popf
loop
mov
jg
fmull
leave
adc
and
jecxz
or
loop
lcall
jne
inc
and
or
add
mov
setge
push
lea
call
inc
cmc
cmc
cmp
cmpb
pushf
push
push
lea
jne
pusha
movb
pushl
ret
imul
pop
push
cmp
cmpsl
adc
daa
pop
hlt
adc
mov
nop
out
sti
into
sbb
mov
cmp
xchg
enter
cmp
cmpsl
pop
mov
jl
rorl
mov
mov
xchg
sub
iret
jnp
add
inc
fs
loopne
insb
mov
mov
jnp
inc
mov
jnp
movsl
shlb
push
xchg
movsb
mov
dec
lds
lret
xchg
ret
and
cmp
fstpl
subb
dec
push
call
es
test
pusha
das
cmp
cmp
add
mov
mov
in
jnp
lods
ljmp
adc
pusha
cltd
in
lret
int3
adc
jno
loopne
dec
mov
lods
add
int3
adc
or
rcrb
shrl
jb,pn
pop
pop
lods
in
test
popf
aad
cmc
lcall
out
sub
fcomip
xor
dec
js
sub
push
lret
sbb
enter
xchg
sbb
jp
or
fldt
shr
das
and
push
call
lods
mov
mov
clc
clc
cmpb
pushf
lea
jne
btr
sub
bswap
mov
xor
dec
add
dec
mov
cmp
call
push
call
jns
rorb
enter
mov
cs
pushl
enter
out
push
call
push
push
jmp
lea
je
pushf
mov
pushf
pusha
lea
jmp
adc
pop
jne
mov
daa
ljmp
jecxz
fnstsw
add
inc
insb
les
jecxz
and
jmp
loope
adc
mov
loopne
xchg
jmp
repz
push
dec
pop
dec
int3
mov
scas
inc
fmul
xchg
pop
jl,pn
mov
fbstp
std
mov
fmul
movsl
mov
xor
mov
sub
fdivs
fsubs
xchg
inc
popf
cs
fnstsw
mov
bnd
mov
push
mov
lcall
or
test
ljmp
leave
repz
addb
icebp
push
sub
xchg
imul
mov
nop
call
dec
popf
pop
sysenter
ret
iret
inc
dec
addr16
hlt
mov
cltd
mov
push
lds
jg
pop
loop
dec
mov
jb
sbb
cmp
nop
sub
into
push
mov
les
or
cmp
sbb
xor
arpl
jbe
push
icebp
pushf
push
call
sahf
stc
cmp
pushf
lea
je
pusha
pushf
pusha
lea
jmp
daa
xchg
adc
in
arpl
push
hlt
lret
mov
push
in
imul
icebp
imul
and
xchg
adcl
sub
lret
or
repnz
or
push
fs
fistl
inc
out
sub
xorl
cmp
xor
outsb
in
mov
jns
aas
or
jns
lret
push
call
cmpsb
pop
lods
cmp
negl
imul
mov
dec
mov
fldl
stos
mov
mov
jge
in
dec
inc
pop
push
fdivrp
fnstsw
pop
mov
dec
popf
or
push
push
adc
fcoms
movsl
sbb
cmp
stos
arpl
dec
call
mov
iret
dec
ss
mov
and
aaa
pop
jl
popf
in
lods
les
je
xor
nop
mov
in
scas
lods
mov
stos
iret
loope
mov
shlb
pop
shl
orb
cmp
fsubrs
jg
hlt
call
pop
push
call
out
dec
sub
clc
mov
sbb
xor
adc
dec
notb
xor
or
lods
fwait
out
push
cmp
les
jae
mov
iret
out
jg
xchg
cmp
jge
and
adc
jns
mov
push
test
cmp
in
adc
loopne
fcompl
sub
sbb
nop
mov
jne
mov
mov
push
call
jno
lcall
or
jecxz
push
push
cmp
aad
inc
mov
pop
popa
mov
adc
shrl
xchg
jns
add
and
jns
fsubr
testb
aad
dec
pop
mov
test
jns
sbb
mov
jl
jns,pt
mov
loopne
jge
xchg
mov
addr16
and
cli
std
test
imul
mov
mov
inc
jle
cltd
push
push
fs
cmp
pop
les
mov
icebp
stc
or
aas
pop
xlat
jmp
rcll
loopne
bound
in
mulb
and
inc
leave
mov
ret
mov
cmp
mov
bound
nop
les
pop
sarl
and
and
xchg
mov
lock
les
cmp
mov
sbb
std
xor
lods
inc
pop
into
decl
and
add
movsb
insl
adc
sbb
cmp
int
fdivrl
in
and
fs
adc
leave
or
insl
or
mov
adc
jg
call
sbb
hlt
pusha
rol
cmc
cmp
sub
clc
pusha
ror
push
clc
pushw
popfw
mov
inc
pushf
mov
push
adc
pushf
pushl
ret
movl
not
call
push
call
xchg
push
sub
cmp
pop
fdivrs
stos
cmp
mov
or
sti
ja
add
in
jae
testb
mov
adc
lds
pop
movsb
icebp
movsb
in
scas
or
clc
inc
iret
int
and
outsl
dec
sub
lods
xlat
push
push
mov
adc
and
das
mov
mov
loopne
fldcw
push
imul
mov
jp
lret
mov
repnz
out
test
and
dec
mov
xchg
je
lret
and
add
xchg
aam
pusha
lea
call
jg
push
pushf
mov
pushf
lea
jmp
mov
inc
call
pop
bound
scas
not
push
icebp
sub
lret
sub
mov
adc
outsl
xchg
aad
ret
lret
push
xor
jmp
lcall
aas
sbb
outsb
mov
mov
add
adc
out
sbb
aas
in
cmc
mov
xor
aam
shl
sti
pop
ds
lods
daa
mov
cltd
stos
mov
push
sbbb
adc
sbb
and
iret
add
fwait
mov
or
popa
push
mov
cs
repz
lock
add
push
push
call
sub
inc
sbb
lret
mov
and
mov
ret
mov
mov
idivb
sbb
mov
sbb
addr16
es
mov
pusha
cli
scas
mov
pop
cwtl
loope
dec
push
popa
jge
arpl
add
outsl
mov
repnz
jle
stc
rcll
popf
test
cmp
fidivl
xor
lods
loopne
ror
test
inc
movsl
xlat
push
scas
daa
scas
ss
popa
lea
enter
jne
jo
pop
mov
sarb
stos
or
in
push
test
pop
push
test
mov
sbb
arpl
fldt
testl
or
push
shll
js
sbb
mov
in
dec
cmpsb
fcmovb
xchg
dec
in
pushf
cs
aad
push
lret
stos
or
adc
jl
loope
jae
pop
stos
ja
ror
fistps
pop
mov
mov
sub
mov
mov
inc
lret
imul
push
jge
mov
mul
nop
add
leave
push
add
push
sbb
xor
sti
divb
iret
dec
lds
adc
fmulp
sub
shl
icebp
cmp
xor
sub
test
mov
daa
jns
and
jp
jbe
mov
and
xchg
iret
dec
jnp
nop
scas
jg
push
jne
cmpsl
add
or
sub
pop
inc
cmp
sbb
pushf
pusha
clc
cmp
sti
add
mov
mov
adc
push
pop
mov
mov
adc
sbbl
std
xor
pop
testl
adc
dec
dec
inc
mov
test
ja
test
or
sub
jmp
out
sub
push
jns
dec
cmp
aas
ss
mov
sti
out
mov
mov
sub
mov
divl
in
jo
outsl
test
aad
repz
cld
lock
insb
jp
inc
lahf
pop
fnsave
call
pop
iret
push
jle
orb
mov
test
mov
jmp
inc
push
cld
icebp
add
mov
imul
sub
mov
mov
loop
xchg
popf
or
fldt
push
call
fiadds
push
and
jne
and
imul
push
push
add
vmread
out
in
inc
std
cwtl
dec
jmp
push
pop
jae
inc
sbb
pusha
fs
xorb
mov
outsl
loop
adc
push
scas
gs
inc
jae
or
inc
push
jl
insl
jnp
aaa
loop
jo
push
jge
push
aad
scas
je
mov
cltd
cmp
jae
mov
ja
data16
lock
out
insl
dec
xchg
clc
ljmp
lea
jae
xor
push
into
cmpsb
mov
scas
pop
jge
outsb
fs
push
push
cmpsb
je
and
dec
jl
lock
imul
loopne
pusha
lahf
pop
hlt
push
pop
call
mov
or
ljmp
aad
xchg
scas
dec
push
ljmp
out
cmp
push
test
mov
xor
jne
imul
sbb
push
mov
push
push
mov
rcrb
arpl
cmp
stc
imul
push
scas
out
scas
cmpsb
xchg
int3
aad
xchg
pop
fdivr
or
and
push
xchg
and
cs
push
jne
subl
cld
push
lods
mov
leave
adc
and
andl
insl
xchg
test
mov
sub
jl
arpl
dec
jge
fists
jecxz
pop
push
fs
sbb
addr16
stos
ss
push
xlat
aaa
adc
inc
inc
imul
jl
fistps
test
sahf
fsts
fwait
mov
mov
jo
and
popf
jbe
imul
les
lock
or
pop
push
jb
push
aaa
std
js
movsl
das
lahf
fistpl
sbb
cmp
sbb
dec
out
and
mov
cmp
jg
icebp
sbb
inc
stos
scas
jl
adc
std
mov
and
jg
das
push
rcr
sarb
dec
divl
insb
test
pop
mov
sbb
xchg
add
out
sub
mov
pop
les
pop
gs
imul
pop
lock
fwait
loopne
or
xchg
into
clc
and
xor
sub
ss
mov
imul
ret
dec
iret
in
push
pop
xlat
fucomi
jecxz
sbb
outsl
leave
sub
ret
pop
outsl
imul
mov
out
mov
repnz
mov
push
sbb
xchg
or
jmp
push
pusha
lock
loopne
imul
imul
mov
clc
dec
pop
add
dec
lods
jae
loope
cmpsl
inc
addr16
out
std
test
test
lea
lock
cwtl
xor
jns,pn
pushf
test
mov
outsl
dec
push
inc
shll
inc
ljmp
add
xchg
jle
mov
xchg
jo
daa
and
push
fsubp
outsw
xor
cld
xlat
out
xchg
pusha
push
push
mov
inc
daa
out
aam
insb
test
add
subb
addr16
arpl
gs
std
mov
add
xorl
push
jl
add
dec
sbb
cmc
shrb
scas
and
jns
sti
pop
dec
stos
data16
lea
imul
cmp
cs
mov
push
fs
and
fs
mov
popf
cmp
mov
jecxz
add
xlat
out
dec
or
xchg
adc
pop
aaa
movsb
inc
mov
arpl
jle
fs
cmp
push
movsl
adc
jge
mov
xor
inc
jg
dec
inc
jmp
mov
shrl
shll
or
insb
or
cld
imul
fistpl
pop
xchg
dec
and
cs
pop
push
test
mov
mov
jle
out
inc
in
rcll
cwtl
out
hlt
inc
movsb
jo
ret
arpl
and
push
fimuls
sub
fwait
add
imul
cmc
jp
xor
cld
addr16
bound
std
repz
ljmp
inc
push
inc
je
jp
add
jg
out
xor
movsl
mov
pop
clc
js
pop
xor
fbstp
imul
lahf
out
ret
inc
mov
pop
mov
jae
cwtl
ja
out
add
pop
shrb
dec
jmp
mov
cltd
lock
jl
out
jnp
lods
lock
or
outsl
addr16
imul
mov
notb
mov
cmp
jae
mov
mov
lock
jmp
pop
xchg
fs
xchg
jmp
lods
ljmp
mov
xor
jp
or
pop
or
inc
mov
int3
nop
fs
mov
clc
jo
lods
dec
fs
loop
push
add
iret
pop
adc
jecxz
in
jge
inc
or
fdivs
or
xrelease
sub
jnp
pushl
fs
stos
xchg
lods
shr
mov
loope
cmpsb
add
mov
mov
arpl
or
xorl
jle
aas
sub
xchg
js
jnp
mov
cmpsb
out
jbe
jmp
in
inc
cmp
into
push
inc
jp
cmp
xlat
sub
jae
mov
pop
fisttpl
ljmp
and
sub
out
jecxz
add
inc
mov
push
xchg
ja
int3
push
jl
xchg
or
mov
mov
mov
cmp
push
sub
push
sub
loopne
aaa
mov
pop
nop
scas
push
ss
jmp
js
arpl
sub
cwtl
mov
insb
adc
jo
adc
loop
stos
mov
push
pusha
mov
call
fs
iret
push
sub
mov
scas
ja
ret
js
jg
insb
xor
push
pusha
shlb
or
insb
scas
out
bound
shll
iret
add
les
push
fwait
jg
jae
pop
ja
adc
inc
fwait
xchg
jl
shrl
fiadds
loope
out
cmc
dec
pop
pop
push
xchg
sub
xchg
push
lods
mov
lcall
pop
lea
into
jle
push
add
push
push
xchg
out
cmpsl
xor
pop
push
data16
loop
mov
adc
sub
outsb
cmp
lock
loope
inc
insl
js
or
sarl
ljmp
mov
outsb
out
daa
out
js
sbb
xor
push
mov
fs
add
addr16
pop
lahf
dec
and
jmp
mov
cs
out
sbb
sub
pop
mov
push
xor
push
pop
pusha
push
es
mov
jmp
mov
fstl
ljmp
das
int
cmp
pop
pusha
gs
addb
loope
jb
mov
cmp
add
iret
pop
insb
sahf
int3
mov
jmp
dec
jo
fucomip
loopne
inc
mov
jecxz
int
test
xchg
jp
push
lret
cmpsb
test
scas
jnp
push
mov
aaa
or
ficoms
data16
scas
jae
cmpsb
movsb
scas
fidivs
dec
xchg
sbb
sub
and
dec
mov
xor
mov
inc
xchg
ja
jecxz
mov
inc
enter
jecxz
clc
push
jle
sub
jmp
jne
cltd
in
data16
push
jmp
dec
or
shll
mov
or
push
addr16
push
sarl
mov
shlb
fldcw
lock
inc
cmp
nop
hlt
sub
jne
push
testb
push
loope
call
inc
mov
jmp
cmp
push
push
mov
int
outsl
out
jl
push
mov
dec
lock
add
loope
shl
fisubl
pusha
sbb
cs
ds
orb
adc
dec
sub
inc
mov
jmp
jg
jge
scas
dec
mov
test
arpl
dec
jb
repz
idiv
mov
mov
shlb
scas
outsl
mov
pop
mov
arpl
push
les
ljmp
popa
sub
or
jb
jnp
push
adc
inc
pop
add
jg
or
mov
out
test
roll
jmp
loopne
std
cmpsb
aad
lods
cwtl
lcallw
mov
enter
icebp
sarb
outsb
pusha
loop
add
mov
mov
out
sbb
fs
cmpsl
out
adc
inc
subb
ja
arpl
enter
mull
push
outsl
adc
clc
jae
in
dec
mov
sarb
call
xchg
pop
jl
or
test
dec
jae
das
push
cmp
popf
push
imul
jmp
cmp
arpl
xor
add
mov
mov
xchg
enter
and
pusha
fwait
mov
add
outsb
adc
cmp
xor
jne
mov
xor
mov
cmp
sub
jle
xchg
std
popa
nop
jae
nop
shrb
andw
out
ljmp
sbb
int3
insl
push
addl
scas
sahf
cmp
jle
bound
xchg
cmp
inc
subb
and
loopne
daa
pop
or
mov
xor
fistps
mov
mov
pop
cwtl
sub
mov
pop
inc
mov
jo
and
rcrl
lock
movsb
xchg
out
clc
push
and
loopne
sub
mov
frstor
and
movsl
jae
es
push
loopne
dec
push
ljmp
loope
ds
rol
add
call
jmp
pop
mov
and
mov
mov
fs
cmc
out
jl
in
jp
js
loope
pop
insl
shlb
outsl
out
adc
movsb
cmpsb
jle
lcall
movsl
in
pop
xchg
mov
sbb
inc
adc
mov
jns
push
mov
push
std
push
push
sbb
jge
push
dec
push
aam
mov
inc
sbb
pusha
outsl
jns
push
cmpsl
mul
pop
and
lds
ljmp
movsl
pop
cmp
gs
xchg
mov
aad
scas
xor
inc
lcall
adc
inc
arpl
cmp
fsubrs
sbbl
out
jo
loopne
int3
clc
lods
xor
stc
jge
sub
stos
jo
add
mov
cmp
pop
mov
lds
cmp
nop
inc
jo
xchg
or
jo
xchg
dec
mov
lods
pop
xchg
jo
iret
hlt
mov
push
jecxz
cmp
fisttpl
sub
jge
push
cmp
dec
int
push
aaa
adc
sbb
push
les
lret
jno
pop
jo
inc
adc
mov
add
sahf
dec
iret
add
je
loopne
loop
les
fxch
and
das
pop
loope
mov
pop
jo
fwait
mov
adc
iret
inc
or
sub
arpl
dec
push
jo
cwtl
xor
adc
hlt
mov
jo
rcll
or
pop
jo
subl
xchg
enter
js
jo
fwait
xchg
outsl
inc
inc
iret
sub
push
rclb
and
adc
add
lret
rcrb
or
mov
shlb
jb,pn
les
sti
cld
cli
dec
or
cmp
and
in
popa
aaa
sti
mov
inc
cmpsl
jmp
leave
pop
xor
mov
and
scas
xchg
jo
mov
dec
xor
jno
push
xor
nop
adc
jo
lock
dec
push
adc
jmp
inc
jne
mov
insl
je
movsb
incl
pushf
jo
add
test
es
jecxz
dec
je
jo
mov
stc
pop
mov
jo
andl
test
xchg
cmpsb
jo
push
dec
arpl
lock
sbb
pop
sbb
xchg
cmovle
icebp
pop
dec
pop
cltd
xor
mov
xor
mov
pusha
xchg
nop
pop
xchg
and
in
rorl
rcll
or
out
int
aaa
sub
adc
aas
dec
jo
push
mov
sbb
push
in
jg
enter
and
sbb
leave
add
jg
mov
lret
mov
pop
fisubrl
adc
loop
popa
inc
xchg
jo
into
push
sub
mov
adc
loope
jp
mov
xchg
sub
cmp
rcrb
nop
in
xchg
int
dec
jae
add
cld
dec
push
adc
cmpsb
jo
in
mov
popa
push
adc
push
dec
div
xor
outsl
mov
ret
cmp
push
fidivl
adcb
mov
negl
mov
jmp
mov
loop
nop
lcall
cmp
push
outsl
lret
iret
shlb
jo
cltd
mov
lcall
add
jo
pop
stc
sub
mov
jnp
cmp
jle
xlat
imul
jo
daa
arpl
pop
scas
xor
xchg
ss
inc
and
aam
jo
push
clc
popa
dec
jo
sahf
lds
fistps
lods
jo
jbe
jno
nop
mov
lcall
cmp
shlb
pushl
or
pop
xor
sub
rolb
int
ss
out
jae
add
add
inc
jecxz
inc
jg
and
sub
xlat
or
jo
lds
in
sub
or
stc
dec
sbb
mulps
fcompl
jecxz
add
int3
push
mov
pop
inc
pusha
adc
and
or
das
pop
clc
pop
adc
push
sub
lcall
and
mov
sbb
cltd
repz
jo
andb
inc
lret
mov
push
je
pop
jo
add
mov
loope
lods
arpl
jo
xchg
movsb
inc
add
inc
xor
scas
jecxz
jge
pusha
cld
ljmp
aad
add
cmc
adcb
mov
add
jp
minps
stos
std
jo
pop
pop
aad
sbb
icebp
jo
sbb
dec
movsb
bswap
fdivp
inc
cmpsb
sub
mov
call
jo
and
sub
fld
jo
rcll
dec
dec
out
jo
add
je
jo
inc
sbb
fwait
jo
add
cs
scas
push
stc
cmpsb
lahf
jmp
push
jo
std
add
jo
inc
dec
inc
gs
ljmp
push
fsubl
jo
push
test
in
jo
movsl
push
xchg
jo
and
add
jge
pusha
mov
pusha
or
scas
xlat
sbb
sahf
sub
insl
xor
fists
aam
and
mov
xchg
icebp
rorl
addr16
sub
jl
ret
xor
jle
inc
jo
push
ret
sahf
cmp
cmp
mov
fsubl
dec
rcrl
pop
pop
loop
arpl
insl
dec
or
push
daa
push
or
cld
rcll
loop
into
mov
adc
jo
dec
sti
das
cmp
pop
mov
cmpsb
es
loop
cmpb
sub
test
sbb
mov
push
mov
adc
push
cmp
jo
stos
adc
sbb
rcpps
rcrb
adc
inc
sbb
jo
jl
fwait
xchg
jno
ret
mov
cltd
mov
sub
pop
nop
stos
imul
jns
adc
jo
pop
adc
pusha
jo
arpl
mov
dec
mov
int3
push
cli
push
add
insb
leave
sub
lods
sbb
xchg
fdivl
mov
add
in
cltd
sarb
add
test
jo
pop
mov
jo
cltd
imul
jo
mov
popa
aas
sbb
push
jp
mov
sub
mov
mov
jnp
movsb
jbe
std
insl
iret
psllw
mov
pop
dec
sub
mov
stc
loop
pop
in
xchg
fidivs
das
addl
movsl
jo
nop
aaa
sbb
jge
mov
mov
pusha
push
ss
xlat
loop
lods
xchg
mov
rolb
fucomp
in
iret
jb
mov
scas
sbb
inc
add
cmpxchg
sub
pop
or
add
pushf
call
loopne
cmc
and
pop
jo
pushf
outsl
nop
mov
jne
mov
xorb
test
push
jbe
push
fsubrl
incb
call
jns
andb
xchg
je
mov
pop
inc
ss
add
pop
jne
repz
cmp
dec
jae
mov
pop
bound
add
lods
addr16
or
adcb
add
sub
wrmsr
or
push
fs
gs
roll
dec
push
jno
adc
out
adc
sbb
lods
inc
jmp
lods
add
cmpsb
cwtl
clc
jo
or
xchg
cli
mov
loopne
repnz
cmp
sti
mov
and
push
adc
jo
xchg
mov
or
cmpsb
jo
dec
aam
mov
movsl
scas
nop
add
lcall
test
inc
jo
xchg
xchg
pop
mov
mov
cmp
adc
jo
xchg
mov
jo
mov
js
loopne
fs
xorb
andl
int3
leave
xor
gs
lods
mov
enter
xor
cmp
dec
push
insl
js
js
fcmovne
dec
cmp
loope
cmp
sub
daa
xor
pusha
sarl
push
jo
push
xor
adc
inc
dec
sub
mov
es
test
push
jo
and
cmp
mov
setae
or
jo
imul
jo
call
xchg
lret
adc
ds
dec
iret
gs
stos
int
mov
and
outsl
fimull
orl
push
jns
incl
es
fldt
lahf
push
add
and
inc
std
pop
xchg
xchg
xchg
adc
rcr
pop
hlt
dec
mov
sub
add
fs
or
push
push
xlat
mov
js
cmc
sub
jg
call
jp
out
mov
lds
pushf
sub
int3
push
jp
mov
lods
sbb
inc
dec
stos
imul
push
addr16
loopne
icebp
lock
cmpsb
repz
mov
mov
int3
fs
and
or
push
test
lock
mov
jnp
mov
add
sub
and
scas
fnstenv
insl
sbb
inc
mov
out
fistl
push
pop
pop
aas
js
sbb
insb
fildl
gs
leave
xor
mov
push
test
je
mov
test
mov
push
jg
ret
mov
cmp
pusha
std
fs
ljmp
xchg
push
int3
bnd
rorl
lret
movb
dec
dec
insb
mov
mov
sbb
iret
jae
fs
dec
push
fsubl
mov
push
jne
mov
cli
inc
pop
jg
movsb
jnp
or
test
fs
mov
and
scas
sub
mov
shrl
add
imul
mov
je
out
jl
stos
or
int3
mov
mov
cmc
jp
push
loope
pop
push
push
dec
pop
push
addr16
xor
or
mov
mov
inc
aad
jl
sbb
scas
mov
and
cli
jns
push
test
sbb
pop
cmp
fs
repz
jle
ja
bound
fisubrl
clc
mov
inc
mov
jle
repnz
out
sbb
enter
test
cmpsb
mov
js
mov
jns
mov
outsl
out
sbb
inc
add
test
rcrl
push
mov
pop
mov
dec
and
jl,pt
cmp
fldt
in
jle
or
shrl
in
or
push
ljmp
iret
or
dec
cmp
addr16
jae
xchg
loope
rcll
push
jno
out
push
mov
lds
dec
inc
jg
mov
sub
movsl
pop
jge
es
or
jle
mov
add
test
repnz
cltd
add
push
or
sbb
daa
mov
sub
pop
addr16
mov
sbb
add
repz
pushf
test
in
inc
outsl
fists
stos
das
andl
adc
das
xchg
cltd
lods
scas
push
adc
pop
xchg
imul
jae
loop
pop
jb
cmp
inc
mov
push
jb
mov
repz
in
shr
mov
inc
js
outsl
fwait
jp
mov
or
stos
inc
scas
dec
clc
out
xor
clc
jge
loop
mov
fs
lods
je
xor
dec
mov
insl
fcompl
xchg
sub
int3
rcrl
das
add
push
loope
cmpsb
fs
sahf
in
sti
dec
lahf
out
lods
hlt
rcrl
jb
jb
jnp
das
rcll
adc
mov
inc
jg
pop
mov
cmp
mov
js
aas
arpl
and
lahf
or
movsl
int
or
lret
aas
insb
sbb
jae
jl
jae
mov
and
push
subb
dec
pop
scas
push
aas
sub
mov
in
notb
dec
out
mov
insl
ret
jl
jno
mov
mov
jmp
push
jns
mov
xor
shrb
pushf
inc
xchg
in
imul
sbb
mov
aad
test
fcmovb
lods
mov
or
adc
xchg
pusha
in
outsl
sahf
iret
rorb
movq
pusha
insb
mov
dec
hlt
mov
mov
sbb
stos
and
outsl
shrl
outsl
xchg
pop
das
dec
loope
jb
lods
pop
push
push
inc
and
lahf
sbb
into
fstl
aad
xchg
mov
aam
cld
repnz
sahf
mov
loope
sub
outsb
push
das
out
dec
out
push
js
dec
or
cmp
cmp
mov
shlb
mov
mov
push
movsl
push
hlt
push
cmpsl
arpl
or
iret
pop
dec
jg
adcl
pusha
mov
in
jge
sub
inc
adc
in
jns
mov
mov
xlat
lcall
stos
adc
scas
das
push
hlt
jae
cmc
insb
or
sub
es
cwtl
arpl
jle
sub
dec
lods
pop
cmp
insb
xchg
shrb
imul
or
negl
es
xchg
mov
jb
mov
xchg
test
push
lcall
shlb
ljmp
push
lret
jle
mov
nop
mull
or
repnz
imul
sbb
movl
ja
inc
jb
jne
mov
fs
loopne
lock
inc
test
lock
pop
sbb
inc
loop
lods
lret
mov
bound
js
or
inc
fs
inc
and
xchg
loopne
sub
sbb
cmovl
mov
push
imul
cmc
addb
std
dec
fs
out
mov
pusha
cmpb
jb
outsb
sbb
mov
pop
cmpb
sbb
fwait
cmpsl
test
cld
jae
mov
add
sbb
dec
movl
in
push
das
fistps
adc
add
mov
pop
fs
in
push
xor
lods
push
mov
insl
hlt
jns
dec
inc
outsl
dec
stos
out
jmp
dec
sub
sub
ret
add
xchg
jns
or
shrl
jno
xchg
pop
mov
out
mov
shr
mov
cmp
xor
jae
xchg
fdivs
push
and
insb
or
arpl
jg
pop
fsubrl
and
out
jno
ja
ss
nop
std
mov
gs
es
jmp
xchg
mov
cs
adc
sti
dec
scas
mov
mov
push
inc
iret
lret
das
ds
ljmp
pop
addl
and
popa
loop
cmp
mov
push
jmp
sub
insb
mov
cmp
sti
dec
cmpsb
negb
sub
leave
pop
loopne
push
lcall
scas
inc
gs
scas
jl
test
dec
jae
inc
pop
rclb
pop
xchg
xchg
xor
test
jne
jae
dec
insb
mov
loop
pusha
push
andb
mov
stc
insl
pop
call
outsb
jl
add
sub
jno
inc
cs
xor
mov
cmp
out
mov
ja
sub
outsl
insb
add
push
dec
clc
lret
cmp
outsb
mov
into
xchg
iret
jae
jg
subl
sbb
pop
fwait
jge
lods
divl
mov
insl
dec
cmp
stos
add
negb
cmpb
lea
rcrl
imul
cwtl
xor
aaa
or
xchg
or
push
cs
cli
mov
cmpsl
lods
nop
loop
jns
lods
sbb
sahf
jmp
aam
test
dec
test
int3
imulb
std
add
mov
lock
jae
ret
and
dec
jge
mov
fs
repnz
nop
outsl
arpl
xchg
shr
bound
repz
dec
dec
scas
dec
insb
or
jmp
rcrb
in
outsl
movsb
enter
and
sbb
cwtl
push
shl
xlat
fldcw
sbb
call
mov
or
outsb
mov
push
outsl
pop
mov
dec
out
sbb
scas
push
dec
rcll
jns
gs
pop
int
inc
push
xchg
or
and
pop
xor
add
jae
or
sub
mov
bound
iret
pop
cmp
mov
jg
repz
cmpsl
popf
mov
jp
fidivl
mov
dec
daa
and
mov
into
sti
jp
jmp
popf
xor
xlat
or
bound
call
xor
aad
jo
ss
cld
mov
mov
fwait
int
shrb
push
pop
jo
xchg
mov
pop
cmp
fadds
aaa
or
jo
xchg
jne
jecxz
push
out
jnp
adc
test
in
push
aaa
test
stos
je
int
inc
xchg
addb
jo
mov
lahf
fnsave
jle
pop
cmc
and
pop
test
ror
jmp
push
xor
fcompl
or
lret
jo
jl
out
ret
xchg
pop
je
sbb
shl
jmp
cwtl
test
cld
jb
lahf
dec
xor
sti
test
and
mov
imull
pushf
inc
dec
fwait
popa
lcall
imul
xchg
xchg
in
or
popl
jnp
outsb
cmc
pop
repz
pusha
pop
push
in
fldl
bound
nop
and
cltd
and
sbb
jae
adc
dec
push
test
out
cmp
xchg
stc
dec
ljmp
add
ret
scas
mov
test
nop
in
and
adc
je
xor
and
or
mov
dec
mov
inc
and
into
cmpsl
jmp
mov
push
insb
mov
fstl
jo
inc
icebp
cld
sub
and
lahf
mov
cmpl
clc
gs
push
popa
into
std
push
fcompl
xchg
adc
cvttps2pi
mul
idivb
gs
sub
jle
es
xchg
cmpsb
jo
test
or
or
jo
cwtl
push
hlt
aam
lds
add
test
jp
aas
mov
clc
push
test
jo
xchg
jo
mov
fimull
vpunpckhdq
enter
popf
push
pop
add
imul
xchg
imul
idiv
mov
es
mov
adcb
ret
js
push
psrlq
and
push
cmp
fs
in
add
pop
lds
xorb
or
pop
hlt
jecxz
es
sub
inc
dec
jo
pop
add
mov
jo
mov
sarb
fwait
adc
or
push
in
popa
notl
jmp
dec
jnp
subb
sti
add
jl
push
unpckhpd
push
inc
xor
leave
mov
jo
cld
nop
pop
iret
lods
xor
out
dec
push
adc
mov
xchg
dec
xchg
dec
xchg
jo
shr
jp
dec
enter
std
xchg
mov
js
fidivrl
cmpsb
pushaw
mov
jo
pop
dec
push
call
push
sub
or
inc
lret
loopne
mov
shr
fmul
xchg
sti
dec
scas
cmc
cmp
nop
pop
sbb
adc
xor
je
aam
jne
movd
push
pop
daa
mov
stc
into
jo
arpl
push
jo
bound
xor
or
cmp
mov
jo
shr
sbb
cmp
sub
clc
mulb
xchg
add
jp
adc
jo
fidivl
daa
nop
xchg
jle
cld
pop
jne
shrl
jo
flds
mov
sbb
mov
clc
sub
lahf
jb
jo
outsl
mov
rcr
jo
inc
cwtl
out
fnstsw
mov
dec
pop
or
lret
hlt
add
outsb
jo
ja
int3
aam
in
ret
jo
xchg
sub
inc
or
in
ljmp
or
loopne
sbb
popa
adc
lds
and
add
jecxz
mov
je
and
jmp
sbb
jo
popf
add
jo
enter
or
or
pop
out
mov
sti
pop
jae
push
inc
xchg
movl
mov
cld
jl
adc
xor
stos
ror
add
loop
andb
cmp
pop
or
jo
icebp
sahf
sbb
mov
jo
xchg
and
jo
add
icebp
fists
ljmp
cmp
jbe
pop
cs
jb
or
pop
mov
repz
dec
fst
in
jo
in
outsl
vcmppd
sub
addr16
push
test
shl
mov
repz
lds
out
jno
pop
xchg
mov
mov
mulb
cmpb
sbb
mov
push
dec
inc
test
mov
hlt
js
mov
jo
int
mov
popf
jo
cmp
pushf
movsl
clc
nop
repnz
scas
test
push
jae
sbb
push
pop
sub
movaps
insb
xor
int3
loop
sar
and
sub
fcom
pop
leave
jnp
bound
repz
jle
jg
and
andb
lar
test
sbb
sub
adc
testb
pcmpgtw
xor
in
xchg
pop
jo
cld
neg
push
xchg
sbb
sbb
mov
in
ja
jb
xchg
test
sti
or
sub
push
in
dec
inc
int
push
xchg
addb
mov
shl
ret
add
les
ret
mov
cmp
inc
aad
or
push
push
pop
sbb
es
mov
adc
mov
add
fwait
iret
sub
jl
fs
or
xchg
vmread
cmpsb
mov
mov
testl
or
or
mov
jbe
mov
subb
mov
jns
sbb
lods
push
pop
adc
fsubrl
adc
jl
inc
cmp
js
pop
int
imul
push
jo
or
stos
faddl
adc
mov
cld
mov
jge
or
dec
leave
push
push
pop
iret
repz
adc
insb
cmp
jl
pop
mov
test
and
cld
mov
dec
ret
mov
adc
into
lea
je
pop
daa
adc
and
repz
jo
subl
vmread
jae
add
test
add
call
push
and
sub
xchg
addr16
add
fs
pop
jb
dec
imul
jno
jp
pop
fs
pop
clc
sub
mov
xchg
and
cs
std
das
xor
out
push
inc
mov
out
in
jo
mov
lcall
or
js
mov
add
xor
push
out
adc
jecxz
leave
lds
fs
sbb
addl
adc
mov
jns
xchg
xor
jg,pn
imull
gs
xchg
shll
xchg
movsl
inc
dec
cli
cmp
dec
call
testb
mov
hlt
jne
imul
filds
push
bound
repz
jmp
mov
push
mov
sub
dec
cvtps2pi
je
add
xchg
lret
insl
push
cltd
sbbb
mov
leave
out
idivl
add
push
or
sub
insb
ret
jne
jnp
int3
xor
ret
bound
imul
push
push
jo
mov
icebp
fsub
pop
xor
aas
lahf
fnstenv
cwtl
add
jo
pop
xchg
scas
jmp
sub
pop
pusha
add
xor
das
insb
into
push
aam
sti
movlps
inc
shll
xchg
jae
sub
pop
mov
int
loope
in
jne
add
insb
std
cmc
data16
or
aaa
out
pop
shll
push
cmpsb
xor
push
xchg
jo
adc
inc
addr16
or
fidivs
int3
and
jns
sub
test
loope
nop
pop
stos
cmp
xchg
jp
fisubs
jo
cmpsb
inc
xchg
add
mov
or
into
fstpl
or
push
fidivs
sar
stos
jmp
inc
jo
movsb
xchg
pop
outsl
lahf
ja
pop
sbb
mov
jmp
outsb
dec
jo
popf
mov
pop
outsl
pop
addr16
out
jo
push
jb
add
rol
sub
mov
mov
lds
cltd
mov
cli
xorl
scas
jecxz
insb
rclb
fcmovnb
cmpsl
andb
mov
jo
push
jno
mov
lcall
daa
mov
jae
inc
jbe
jp
sbb
lock
stc
insb
push
push
lret
out
insb
jg,pn
add
and
mov
xor
push
sub
ret
jp
lahf
popf
sub
stos
fbstp
test
outsl
mov
cmp
or
les
insl
cmpsl
jo
lock
jae
sub
xchg
mov
lods
fdiv
sbb
fisttpll
lock
push
sti
flds
sub
cmpsb
faddp
cmpl
lea
dec
xchg
std
or
or
stos
adc
or
arpl
rclb
scas
push
nop
out
cmpsb
add
jne
mov
int3
fwait
push
inc
dec
jae
dec
stos
mov
inc
arpl
push
dec
popa
aad
mov
pop
iret
fnsave
fsubl
xchg
push
lods
pop
insl
jo
out
xor
mov
push
dec
sarl
jns
mov
lahf
sbb
es
jne
mov
outsl
mov
call
jecxz
fdivrp
mov
jecxz
insl
push
and
mov
jae
sbb
pop
inc
movsl
xor
jge
outsb
std
dec
fsts
xchg
mov
mov
lret
mov
pusha
sub
inc
and
pop
adc
and
jnp
xor
cltd
jmp
cmpsl
ret
add
pop
int3
scas
mov
scas
fldl
xchg
push
outsb
and
cmp
mov
or
adc
sub
shll
sbb
or
in
in
mov
insl
repnz
inc
rcll
es
mov
cmp
pop
jnp
mov
cmpsl
mov
addr16
mov
xchg
and
adc
jo
pusha
adc
xor
add
xchg
cmp
add
cmp
rorb
fcoml
or
mov
add
push
pop
or
or
aam
dec
ja
dec
gs
sbb
mov
dec
test
add
xchg
ss
push
rclb
lods
jae
lock
jmp
jo
mov
push
mov
mov
inc
sbb
xchg
out
js
jae
out
bound
lock
dec
pop
add
hlt
xchg
sbb
cmpsl
xor
mov
test
add
push
inc
mov
addr16
dec
scas
pop
pop
inc
js
push
shlb
out
mov
push
scas
std
jle
lock
bound
cmp
or
xchg
mov
insb
push
or
clc
adc
and
jnp
mov
jns
aad
dec
cmp
jno
sub
fnstsw
jp
addr16
mov
icebp
mov
or
xor
movsb
or
mov
stos
sub
xor
mov
xor
arpl
adc
rcr
xor
ja
mov
jge
out
pop
dec
imul
fbstp
cmpsl
push
push
sbb
loope
shlb
insb
pop
adc
mov
jae
mov
jl
xchg
sbb
mov
dec
mov
int3
rcrl
xchg
add
test
cmpsb
push
movsl
xchg
popa
lock
lds
push
gs
mov
rcrb
loopne
xchg
push
jmp
mov
lcall
xchg
pop
mov
or
xchg
mov
cld
mov
lcall
int3
sahf
stos
mov
movsb
xlat
rorl
add
movsb
mov
loopne
int3
sub
out
ja
in
out
mov
push
mov
enter
cmpsl
push
add
dec
cs
imul
push
lea
shlb
mov
dec
andl
and
sbb
out
mov
mov
pop
dec
inc
sub
icebp
cmpsb
fs
in
cmp
sbb
shll
dec
pop
ljmp
dec
cmc
dec
sysexit
push
movsb
add
adc
pop
sbb
xchg
insl
mov
inc
and
dec
in
push
mov
cmp
ss
jae
mov
sahf
sbb
mov
mov
jo
pop
pop
mov
test
xor
dec
in
mov
dec
in
jno
dec
lahf
or
sub
pusha
fs
std
push
test
leave
inc
push
and
adc
in
out
cmp
sub
fnstenv
and
mov
int
sbb
mov
repz
pop
mov
outsl
jge
in
push
xacquire
dec
and
lock
insl
nop
out
mov
lds
test
mov
arpl
mov
imul
jno
out
and
push
push
outsl
inc
add
push
sbb
fsubs
push
int3
sub
inc
arpl
jbe
mov
aam
scas
jp
std
jg
inc
push
out
leave
in
xor
mov
xchg
xchg
push
addr16
jge
mov
pop
jge
sbb
mov
pop
mov
cld
mov
outsl
inc
jg
movsl
mov
sub
fst
out
bound
cmc
inc
scas
xchg
stc
stos
or
xor
or
aaa
sub
push
jno
and
iret
out
jp
and
out
xor
lds
and
mov
xchg
or
mov
and
data16
lock
ljmp
out
xor
fdivs
mov
out
add
mov
lahf
jno
std
loope
push
in
jae
lock
in
or
mov
clc
push
mov
add
xor
nop
into
push
test
loopne
outsl
frstor
lods
cltd
and
out
frstor
and
insl
add
mov
jmp
mov
pop
cs
jg
pop
sbb
rorb
movsb
jae
stc
mov
xor
aaa
jb
sub
jg
and
mov
std
pop
add
pop
scas
out
dec
insb
orb
je
in
push
push
or
and
jae
lods
sub
jnp
sahf
mov
sti
jp
aad
subb
or
xchg
aam
mov
or
cmpsb
cltd
push
mov
pop
lock
jae
addl
mov
lret
repnz
mov
jae
aas
mov
repnz
and
scas
dec
pop
xor
daa
pop
bound
jl
sub
sti
call
mov
jp
repnz
orb
arpl
stos
pop
pop
dec
imul
cli
dec
push
ficomps
std
fists
jo
leave
jae
insb
cwtl
nop
and
sbbb
cmp
mov
loopne
ja
jae
aam
fs
mov
cwtl
adc
ljmp
inc
inc
jns
add
sub
push
push
dec
sub
cmp
das
sbb
pop
lock
jg
in
int
cmp
and
push
lahf
mov
jle
jl
add
mov
mov
outsb
cltd
pusha
xor
xor
xchg
inc
cmp
call
pop
rorl
jne
out
lret
insb
jmp
sbb
jg
jg
leave
imul
cwtl
filds
mov
hlt
hlt
out
out
mov
ds
enter
in
dec
add
ja
push
push
mov
xchg
imul
or
call
inc
jecxz
mov
or
xchg
mov
xor
push
shrl
push
ret
shll
lock
or
dec
stos
insb
ja
repz
lds
mov
xchg
xor
and
jle
pop
mov
sbb
ljmp
jne
mulps
pop
jns
mov
inc
shll
in
nop
xchg
dec
outsb
hlt
mov
adc
popa
mov
clc
fdivrp
outsb
or
aas
adc
lock
loop
fsubrl
mov
mull
or
inc
or
or
out
inc
cmp
push
call
pop
and
add
inc
xor
cmpsb
sbb
imul
jle
push
cwtl
xor
ret
push
stos
xchg
mov
cltd
movsl
jp
cld
push
mov
jae
inc
mov
pushf
fstpt
push
or
adcl
jo
inc
mov
and
testl
out
xchg
sahf
jne
ljmp
movsb
push
cwtl
jns
fldcw
ja
or
ror
inc
out
sub
cmc
les
sub
mov
repnz
sar
insb
cmc
inc
and
dec
push
int3
mov
ljmp
jg
out
cmp
mov
lret
or
das
ja
push
adc
gs
mov
int
or
arpl
out
sbb
in
cmp
test
cmp
in
outsb
out
jbe
mov
inc
pop
mov
pop
cmp
cmp
lods
mov
mov
stos
xor
loopne
or
jle
repz
push
xchg
jo
sbbl
nop
add
ret
jo
mov
ret
xchg
lret
xlat
mov
lahf
nop
sbb
popf
jno
xchg
subl
fiadds
xor
xor
cmc
test
arpl
inc
jle
lretw
imul
push
cwtl
addr16
cmp
fstpl
lahf
divl
jo
cmc
sub
jo
jg
cmpsl
cs
shll
stos
lcall
jo
pusha
js
into
mov
jmp
jl
pop
jb
gs
mov
adc
jo
ror
lret
pop
or
leave
jb,pn
stos
add
pop
dec
push
jl
jo
das
sbb
addr16
push
pop
sbb
sarb
js
lds
xlat
fsubs
jo
data16
mov
cld
xor
shrb
mov
cmp
jo
add
in
or
add
cmp
and
imul
ret
fidivl
mov
adc
add
cmp
in
mov
mov
lds
jo
stc
dec
inc
dec
inc
inc
dec
leave
leave
jnp
or
sar
popf
cmc
inc
mov
inc
js
fsubp
enter
clc
xchg
nop
adc
iret
pop
aad
push
sbb
int
cs
dec
les
dec
fs
xchg
es
or
mov
movb
data16
into
insb
fnstenv
cmp
add
rorb
testb
call
jo
xchg
or
push
mov
fstl
fistpl
shlb
xor
xchg
mov
dec
xchg
outsb
xor
scas
call
popa
je
dec
pop
sbb
dec
popf
movsl
loop
xchg
mov
xchg
fwait
rcrl
fldl
sub
xchg
and
mov
ljmp
mov
xlat
mov
push
rcr
clc
sti
or
xchg
ds
call
xchg
incb
xor
leave
mov
inc
insl
pop
int
mov
shlb
or
dec
addr16
jo
mov
sub
or
add
jb
mov
xchg
rcll
xor
addr16
nop
jbe
push
imul
scas
mov
fadds
push
pop
jge
push
dec
lahf
jb
jno
and
sub
jo
inc
mov
push
sarb
mov
aaa
or
pop
daa
jnp
rorl
loope
or
jo
add
lds
xchg
dec
xor
aaa
push
aas
jle
dec
mov
in
mov
lock
mov
push
pop
cmp
sub
mov
mov
and
xchg
mov
out
jo
js
cmp
add
loopne
jp
gs
add
xchg
movsl
sub
les
push
xchg
shlb
jle
jo
pop
jmp
aad
cmpsb
xchg
mov
lods
jg
mov
and
outsb
pop
mov
scas
sbb
into
xor
jo
or
push
imul
adcb
dec
sbb
push
xor
lea
mov
jno
and
mov
sub
jb
mov
cltd
push
shlb
push
repnz
and
nop
clc
mov
jl
popa
fidivrl
adc
into
push
orl
xchg
outsl
push
mov
mov
test
fs
inc
jmp
or
inc
add
fimull
int
xor
push
mov
pop
jmp
daa
std
rcll
js
and
int3
lea
in
push
ret
sti
jnp
pop
sar
xorb
popa
lret
push
jno
or
and
dec
clc
cli
je
in
xor
push
mov
mov
push
adc
jo
mov
mov
adc
cmp
popa
std
jb
fcomps
imul
jo
in
ret
dec
pop
mov
lds
je
pop
jno
in
and
jo
jnp
inc
or
jo,pn
fwait
orb
ror
mov
popa
stos
rep
sbb
pop
pop
and
scas
jl
push
pop
call
mov
popf
stos
jo
jae
and
jo
mov
mov
std
xor
fcoml
cwtl
enter
mov
push
js
aaa
sbb
sbb
pushf
sbb
negl
push
enter
adc
rorb
jge
jo
mov
aaa
xor
and
cmpl
jmp
fiadds
enter
dec
jo
add
push
lds
add
repz
adc
sub
inc
inc
push
enter
ret
add
hlt
jo
adc
stos
mov
mov
inc
cmp
out
or
mov
cmp
push
adc
push
or
arpl
pop
add
cs
xchg
adc
add
addb
int
mov
xor
jo
jge
cmp
divw
jle
adc
xchg
aam
jo
repz
xor
scas
fldenv
xlat
jl
or
jo
xor
test
and
pop
and
pusha
loope
jb
ret
mov
and
rolb
push
fbstp
popa
push
enter
add
jo
or
sub
jo
rorl
add
dec
add
and
cmpb
mov
jae
stos
insl
outsb
xchg
or
stos
subb
cli
pop
sub
mov
lret
or
jg
ret
push
aad
sbb
mov
dec
and
mov
jo
jbe
xor
test
add
mov
mov
xchg
aas
cmc
xor
adc
adc
scas
fwait
leave
cmp
jo
ret
bound
push
xchg
pop
jle
pop
movsb
push
and
jo
in
cmp
push
jo
adc
xchg
or
out
jo
std
xor
adc
jo
lret
push
add
mov
fildl
adcb
int
pop
pop
insb
loopne
testb
adc
jo
repz
dec
or
inc
mov
nop
push
jo
loope
jl
jnp
fbstp
test
and
in
dec
jo
div
inc
sub
mov
popf
pop
in
cwtl
fnstcw
shll
cld
xor
jo
out
pop
stos
xchg
xchg
lods
lea
pop
aas
lret
xchg
aaa
xor
jo
mov
cmc
jne
mov
rcl
test
pusha
rorl
jp
push
dec
sub
pop
inc
pop
mov
push
ja
xchg
mov
jo
ret
push
dec
repz
lret
mov
nop
sahf
inc
jecxz
add
jb
adc
enter
jnp
jo
and
cmp
dec
xor
sub
jo
push
pushf
pusha
lods
sbb
or
arpl
int3
jmp
jo
aad
in
leave
xchg
sets
sbb
jb
loop
cmp
cld
fmuls
insl
popa
js
push
imul
jo
fdivr
mov
mov
hlt
pop
jo
das
in
cmp
mov
jo
add
outsb
jnp
pop
mov
idiv
sub
jo
jns,pt
pushf
lea
nop
mov
or
fsubp
jo
es
and
mov
mov
mov
loopne
jle
pop
sub
ds
cld
xchg
jne
dec
out
hlt
jmp
ret
jo
jle
sarb
pop
xlat
enter
cld
nop
popa
lss
aam
jns
jge
mov
cmp
push
dec
xor
fs
jo
ret
xchg
movsl
and
outsl
les
xor
mov
jae
mov
xchg
cld
push
or
fs
jne
int3
jmp
mov
int
lahf
pop
xchg
xchg
xor
jae
lods
lods
mov
or
addr16
mov
mov
jg
push
bound
dec
arpl
lock
mov
sbb
shll
xchg
je
popa
jno
cli
imul
xchg
mov
mov
stos
mov
cmc
jo
jp
imul
mov
mov
insl
pop
mov
or
pop
in
ljmp
sti
dec
insb
lods
jno
insb
xchg
imul
cmpl
shrl
pop
stos
jl
sbb
mov
jae
bnd
lea
sbb
xchg
iret
mov
cwtl
lods
outsl
jo
pop
jp
mov
push
xchg
sub
cltd
lds
pop
in
outsb
xchg
push
adc
gs
cmp
imul
in
nop
or
aas
sbb
cltd
jne
into
fdivs
repnz
sbb
fucomip
push
mov
mov
addr16
or
shrl
mov
movsl
adc
sbb
js
xlat
mov
or
stos
in
jo
ret
cwtl
sub
icebp
push
add
or
xor
add
inc
or
inc
xchg
xor
add
jo
mov
mov
popf
inc
jo
rolb
daa
sub
bound
pop
aaa
cs
gs
inc
insl
add
out
mov
jo
adc
push
pop
sti
daa
ret
fs
xor
adc
push
cmp
movsb
sbbl
nop
sub
aad
loopne
xchg
xor
cmp
and
fmuls
sub
push
test
test
shr
test
adc
sub
sub
mov
jle
lock
into
shlb
adc
jo
nop
mov
jecxz
mov
xchg
dec
out
fwait
push
subb
pushl
sbb
loopne
dec
pop
test
popa
scas
stos
aam
push
jo
cli
xchg
outsl
sbb
add
jo
dec
cmpsl
scas
rolb
push
jnp
stc
into
je
and
sub
cmp
arpl
add
mov
mov
mov
invd
jp
push
jnp
mov
aas
lea
push
insl
loop
fs
mov
les
addr16
sub
pop
jo
adc
xor
and
icebp
jo
sub
xchg
out
mov
inc
cs
loope
ret
addb
and
sub
jbe
inc
jo
lahf
insl
xor
je
mov
aam
jo
mov
add
loope
add
loopne
andl
xor
jo
ja
xor
in
inc
or
jnp
or
nop
das
fisttpll
dec
pop
jl
push
gs
xchg
add
mov
sbb
push
inc
aaa
or
stos
int
mov
rorl
jo
dec
jb
mov
gs
mov
jo
dec
jecxz
fs
pusha
xlat
jo
ss
popf
push
and
jo
mov
pop
cmp
fnstenv
xchg
ret
or
mov
out
sbb
ljmp
cli
mov
xchg
aam
cmp
ss
std
mov
jo
pop
xor
nop
push
push
out
stc
push
fwait
jp
bts
xor
or
push
xchg
dec
dec
cmp
jae
cmpsl
mov
scas
jp
les
jb
ret
jo
stc
xchg
jns
lods
pop
inc
jo
mov
sahf
fs
fildl
sbb
adc
jae
inc
jo
pop
dec
ljmp
adc
push
ret
mov
hlt
jns
mov
incb
in
jo
mov
add
pop
jmp
jecxz
jnp
and
bound
or
jp
mov
mov
imul
xor
gs
push
pop
mov
push
mov
mov
mov
sub
call
xchg
inc
or
adc
popl
xchg
mov
rcrl
subl
stos
data16
xchg
sub
sbb
pop
out
out
pop
cs
sbb
in
fmull
jg
push
xlat
out
les
mov
outsb
cld
xchg
xchg
sub
sub
and
xchg
insl
jnp
cs
test
sbb
push
sbb
inc
sbb
clc
jo
fcmovnbe
sub
ja
mov
fs
mov
xcrypt-cfb
cmpsl
bound
push
and
mov
outsl
loopne
sub
stc
scas
fidivrl
insb
xchg
roll
sub
clc
add
fucomip
jo
gs
xchg
inc
pop
and
mov
movsb
inc
xorl
jmp
push
xchg
add
mov
enter
shlb
adc
and
jo
pop
in
push
and
jns
cbtw
jo
inc
pop
sub
cld
xor
loopne
or
daa
dec
fwait
jo
out
xlat
mov
mov
rcll
fdivl
sti
add
push
xchg
lock
mov
xchg
inc
scas
nop
call
out
mov
xchg
xchg
sbb
cmpb
pop
mov
pop
jo
add
sub
ret
jo
aad
jg
xor
push
jo
add
xchg
xchg
adc
sub
je
lahf
or
decb
cmc
mov
push
push
and
iret
lret
jbe
jo
cmpb
stos
lds
jo
pop
jle
xor
push
pop
cmpsb
and
out
xchg
jb
adc
daa
jo
lret
sbb
push
gs
and
or
push
jo
push
mov
sbb
in
cs
lods
mov
out
push
scas
ficomps
add
sub
mov
pop
mov
das
lcall
adc
jns
inc
xor
jo
xchg
or
enter
test
mov
out
add
pop
ret
ljmp
sub
jge
adc
es
cmp
jne
jo
jmp
lock
imul
repnz
inc
xor
je
xchg
test
shll
out
or
cmpsw
js
test
out
sub
cmp
xchg
push
jo
out
rep
mov
pop
mov
xlat
sbb
das
sti
jo
xchg
fldcw
rcll
mov
daa
jo
pusha
nop
shrb
xchg
jo
faddl
loopne
pop
or
xorb
inc
testl
dec
inc
test
push
int3
enter
inc
flds
pusha
pusha
add
js
jl
inc
data16
out
aaa
mov
adc
push
and
and
xor
js
cmpsl
mov
movsl
imul
ret
test
mov
cs
nop
out
clc
add
pop
inc
xchg
icebp
mov
nop
stos
mov
mov
lods
push
mov
jle
test
je
movb
out
ss
cs
push
jp
mov
pusha
lahf
out
cltd
das
pop
and
fsubl
cli
jecxz
adc
test
mov
push
loop
jo
push
imul
pop
sbb
subb
sub
data16
inc
scas
xor
pushf
mov
inc
cs
cmc
aaa
js
repnz
dec
popf
lret
orb
shrb
cld
fsubl
sbb
in
fsubr
jo
pop
clc
or
jo
mov
sub
jo
lock
and
out
sub
sub
subb
out
and
es
aaa
add
insb
cmp
lahf
notl
mov
inc
into
xchg
jmp
inc
mov
aam
mov
cmp
fcmovb
pop
inc
stc
jo
push
cld
cltd
mov
xor
mov
daa
movsb
jmp
jo
mov
std
hlt
nop
fwait
test
add
jl
scas
jo
mov
lret
push
sub
push
inc
lock
inc
incl
cs
xor
test
push
mov
xchg
popa
mov
jle
js
sbb
sbb
xor
adc
jo
or
cmp
xchg
pop
sbb
insl
and
lods
fsubr
sbb
int3
int
jo
pop
inc
push
cltd
dec
cwtl
sbb
roll
and
pop
imul
je
lcall
jmp
popa
sbb
int
jo
movsb
adc
xchg
movb
test
hlt
jo
mov
nop
mov
test
sti
jb,pn
aas
addr16
mov
xor
jl
mov
cs
cmp
sbb
adc
push
pop
xor
mov
das
and
loopne
cmp
cmpsb
lock
in
into
lock
test
mov
out
add
scas
push
inc
or
outsl
push
rorl
mov
jno
mov
jmp
mov
les
mov
mov
scas
std
repz
push
scas
add
push
in
cmpsb
loopne
and
fistps
test
fimull
mov
sbb
cmpsl
sti
mov
outsb
imul
add
aam
mov
and
scas
jle
cmc
or
lock
fwait
push
arpl
push
ds
divl
sbb
aaa
sbbl
cld
aaa
test
push
popa
out
pop
js
icebp
fnstenv
daa
xor
or
into
adc
dec
push
pop
cmpl
ficompl
out
push
or
or
lahf
add
in
insl
or
sub
mov
mov
and
push
jns
mov
movsb
add
or
push
leave
push
ret
mov
xchg
js
repnz
fnsave
lods
das
je
jae
mov
fidivrl
sbb
adc
pop
sbb
out
push
stc
cwtl
jae
mov
push
mov
mov
bound
sbb
daa
push
testw
testb
mov
pop
and
stos
inc
mov
inc
pop
mov
mov
js
push
push
es
sub
shlb
aam
pop
push
push
or
mov
test
test
mov
nop
rcr
lds
pusha
sub
mov
fnstcw
push
repz
lret
rorb
or
inc
cmp
movaps
mov
jg
push
ficoms
mov
stc
fidivl
shrb
test
cmp
aaa
mov
sub
jle
add
std
lret
in
adc
test
jg
imul
ret
ret
or
loope
nop
push
mov
scas
push
cs
add
lcall
outsl
inc
fldcw
int
sub
push
sti
mov
lret
pushf
add
jae
mov
jno
test
xor
adc
testb
in
lods
sti
data16
inc
push
push
sbb
stos
cmp
jmp
jbe
adc
push
mov
fwait
out
aas
test
inc
xor
sbb
sub
push
lret
testl
sbb
sbb
xor
out
pop
cmp
es
int3
push
sbb
dec
mov
xchg
outsl
mov
imul
mov
sub
inc
inc
jecxz
add
jg
shr
xor
std
out
add
dec
inc
sarl
pop
xor
subb
xchg
fimull
pushw
out
or
fnstsw
scas
jl
daa
shlb
call
bound
jp
sub
inc
inc
fucomi
add
xchg
xchg
xchg
in
and
mov
jnp
orl
out
cmpsl
mov
iret
lret
push
xor
in
sub
mov
pop
std
sbb
outsb
int
cli
gs
sarb
jne
dec
cmp
mov
jns
int
and
je
into
imul
lock
fildll
jo
xchg
dec
jno
nop
leave
push
movsb
pop
or
jbe
hlt
std
popa
lahf
jle
push
nop
jo
ljmp
in
mov
inc
dec
xchg
mov
scas
sbbb
jne
add
cmp
jbe
divb
jmp
or
cltd
mov
mov
or
xor
nop
loopne
outsl
fs
and
mov
fwait
ds
js
in
cltd
sub
in
or
addr16
push
dec
push
sub
push
ss
stc
inc
add
fnstcw
cmpsl
fisttps
jmp
es
insb
scas
inc
push
xchg
mov
xchg
js
shr
cmp
jo
lods
mov
pop
shlb
push
rcrl
shlb
xor
loop
jb
imul
push
push
mov
dec
sti
mov
or
sbb
inc
push
ret
nop
pop
pop
rorb
mov
shlb
and
data16
mov
jl
sti
jo
cwtl
cli
mov
jo
out
dec
loop
ret
jle
jo
pop
aam
push
pop
xor
jo
enter
mov
sbb
dec
jo
mov
repnz
dec
push
jl
fiaddl
sbb
mov
int
mov
jo
lea
sahf
push
mov
mov
sbb
ffree
psubsw
sbb
dec
out
pop
std
insb
jae
push
jo
push
lock
cmpsb
insl
ret
dec
lahf
aad
xor
cmp
push
jae
lret
mov
imul
addr16
lea
push
mov
out
push
lret
inc
fcompl
mov
sahf
mov
mov
enter
loopne
nop
lret
es
push
inc
cmpsl
je
in
xchg
add
repz
adcb
out
out
stos
cld
pusha
mov
int3
xlat
das
sbb
or
lock
movsb
pop
clc
xor
jl
jns
cmpsl
sbb
test
imul
jne
cmp
and
or
push
push
arpl
xor
clc
mov
dec
lea
popf
int
inc
into
bound
xlat
stos
loopne
sub
pusha
cwtl
mov
mov
cmp
loope
nop
pop
test
add
pusha
mov
or
sbb
jg
cli
lock
mov
lcall
sbb
data16
push
or
inc
cld
insl
mov
mov
incb
adc
and
fs
bnd
enter
shlb
xor
xchg
inc
imul
adc
dec
icebp
pandn
inc
mov
int
insb
in
ds
pusha
mov
jo
dec
cmpsb
sub
cmp
and
inc
pop
push
mov
test
adc
adcb
int3
in
and
fdivl
bound
jl
outsb
out
cmp
addr16
sbb
and
mov
fimuls
outsb
push
stos
scas
inc
push
fistps
adc
jge
jmp
mov
call
dec
fsubrs
fldcw
movsl
sbb
sbb
pop
stos
and
das
mov
in
insl
repz
repnz
cmpsb
outsl
sbb
mov
mov
xor
in
push
ja
aas
jae
sub
mov
jl
popa
test
adc
leave
shrl
cmpsl
insl
je
mov
jg
mov
sub
add
pop
xlat
fsubs
imul
dec
int3
cmp
arpl
js
inc
cld
mov
adc
mov
sub
mov
push
mov
dec
pop
sub
fsubrs
push
out
pushf
bound
mov
cmp
xor
xchg
push
inc
sub
jl
mov
or
popa
loope
push
push
gs
jge
cmc
imul
jl
inc
cltd
adc
add
xchg
mov
jbe
inc
dec
xor
fistpll
xor
push
imul
in
push
hlt
aam
movsb
insb
js
insb
adc
fldlg2
xor
mov
shrb
cmc
into
xor
sbb
arpl
into
fisttpll
je
ret
aas
pop
add
arpl
sbb
dec
pop
dec
jle
clc
jns
xchg
shrb
outsl
in
sub
outsb
sbb
stos
cmpsb
sbb
mov
pop
jns
add
lods
cmp
out
inc
mov
push
jbe
orb
sti
test
jp
mov
fs
adcl
cmp
call
push
dec
add
shlb
in
call
mov
mov
lods
sub
add
sbb
mov
shl
iret
jle
mov
outsl
push
pusha
jg
js
dec
pop
xchg
shll
and
stos
inc
out
fdiv
shlb
shlb
pop
push
in
mov
inc
insb
jns
sub
mov
aad
push
mov
dec
push
pop
js
xor
inc
clc
loopne
jl,pt
test
mulb
hlt
popa
add
es
mov
add
inc
xchg
dec
push
mov
fstpt
pop
jmp
std
sbb
pop
inc
push
mov
pusha
add
adc
daa
dec
mov
fimull
sti
fnstsw
inc
scas
jns
xchg
dec
mov
in
lock
xchg
pusha
mulb
adc
cmc
sub
jo
mov
std
stos
movsl
js
dec
push
pushf
imul
dec
repz
xor
stc
lahf
mov
fstpl
iret
out
or
pop
inc
std
inc
fisubrs
popf
xor
add
test
leave
in
das
sbb
arpl
cli
jo
iret
cld
ficoms
adc
imul
aaa
cmp
out
jo
lods
ja
sti
mov
and
pop
rorl
xor
jo
lcall
xor
out
mov
cmp
sub
aad
popa
mov
daa
stc
lods
gs
xchg
inc
jmp
sub
lret
sub
out
inc
xchg
loopne
xor
add
je
fldenv
pop
xchg
xor
shlb
dec
inc
cwtl
mov
push
shrb
or
jmp
arpl
mov
mov
sbb
xchg
push
aaa
daa
cmp
js
fs
jns
xchg
shrb
xorb
cmpsl
nop
push
mov
cmpsb
fs
arpl
insl
ds
mov
call
inc
std
roll
sahf
das
pop
data16
and
mov
sub
test
int
push
rorl
in
nop
jno
mov
push
or
dec
mov
mov
ja
push
lock
iret
out
jg
cltd
cmp
int3
and
cmp
mov
sbb
jae
dec
out
lea
xchg
in
test
lret
jl
mov
sbb
xor
mov
data16
js
shlb
push
bound
es
jns
inc
pusha
cmpsl
insb
pop
int
or
pop
jno
fisubrl
mov
rcll
stc
jnp
je
sbb
cltd
daa
scas
mov
mov
xor
add
leave
movsb
shll
cmp
fs
rclb
out
push
mov
lods
cmpsl
icebp
fimull
and
sbb
inc
pop
fs
gs
mov
pop
aaa
add
pop
and
cld
in
scas
add
test
aam
dec
sbb
stos
outsl
sub
out
sbb
xor
push
add
jo
mov
inc
stos
inc
clc
push
or
or
adc
pop
scas
adc
lret
bound
or
ror
rol
aam
cmp
jno
in
fwait
mul
jo
pop
adc
into
mov
jo
ltr
lret
mov
pop
nop
and
adc
add
xor
sub
les
or
out
xchg
push
xchg
ljmp
sbb
fsts
mov
fcomi
repz
pop
push
push
mov
es
push
loope
adc
imul
ret
pop
insl
jp
xor
es
pop
xor
fs
sub
hlt
mov
inc
lret
pop
cmp
daa
fisttpll
inc
in
sbb
mov
mov
mov
jbe
xchg
fs
xchg
sbb
movsl
and
push
test
dec
jo
add
dec
push
pushf
ret
dec
fimuls
loop
mov
arpl
imul
cmc
lods
ret
aad
or
and
xor
mov
ds
push
dec
inc
cmpsb
pusha
or
scas
lret
cmp
dec
push
out
mov
pusha
inc
int3
mov
add
test
or
rclb
out
mov
fstpl
fcoms
mov
popf
shrb
push
mov
imul
int3
gs
mov
dec
insl
push
adc
lret
inc
lods
imul
adc
jae
mov
call
lret
pop
dec
cli
daa
mov
les
sar
mov
stos
mov
mov
test
cltd
add
cmp
movsl
cwtl
add
rolb
adc
js
adc
in
jae
sub
push
xor
mov
out
or
ja
sub
leave
rorb
xor
loope
jbe
and
or
fwait
nop
push
mov
in
insb
arpl
aaa
scas
outsl
scas
es
mov
dec
stos
cmp
or
xor
scas
push
js
inc
or
sbb
rorl
data16
mov
push
imul
mov
mov
push
mov
out
xor
cmpsl
rcl
dec
push
push
data16
shll
in
push
sbb
fcomip
les
dec
lock
std
jns
adc
sbb
into
jmp
cmpb
inc
in
push
jns
sarl
sarb
mov
maxps
shll
cmpsl
rcl
cmp
jg
cltd
dec
push
aad
mov
push
jg
dec
stc
outsl
sub
lahf
push
push
add
push
or
inc
pop
outsb
outsl
scas
leave
into
add
out
jbe
jnp
ds
push
pop
xchg
pusha
addb
xchg
cli
mov
cmpb
sbb
xchg
push
sarl
out
cwtl
addr16
out
packssdw
mov
ret
xchg
subl
fnstenv
cmpsl
insl
inc
mov
nop
test
insl
into
subl
lds
clc
cmp
adc
movsl
jns
in
shlb
in
je
sub
or
mov
inc
popa
rorl
shlb
mov
decb
sbb
or
shl
mov
mov
loop
and
pop
mov
xor
push
xchg
lds
cli
kmovb
xorl
imul
and
or
loop
lock
cmp
mov
jp
jae
pop
dec
dec
push
mov
in
mov
scas
loopne
fimuls
pop
sbb
cmp
sbb
cmp
call
xor
or
pop
cmp
jg
out
cmpsl
adc
imul
lock
or
or
add
addl
std
mov
mov
xchg
jo
mov
push
imul
push
xor
in
sbb
in
xchg
repnz
jae
cwtl
daa
das
cmpsb
inc
popa
cmpsl
out
push
out
push
fnstcw
sub
std
out
fldt
sub
jae
int3
dec
push
push
in
aad
dec
mov
out
out
lods
lods
insb
push
punpckhwd
sbbl
int
insb
inc
jae
mov
push
and
mov
insb
mov
jb
mov
loopne
mov
rcr
movsb
icebp
or
adc
sbbl
cld
in
ljmp
icebp
mov
or
add
add
data16
adc
repz
sub
lahf
pop
fsubrp
xchg
push
daa
xlat
in
imul
xor
int3
xchg
mov
xor
enter
mov
pop
insl
adc
inc
mov
xchg
js
xchg
hlt
out
test
pop
dec
fwait
and
ljmp
shlb
pushf
mov
or
rcl
in
lods
pop
push
clc
adc
mov
dec
lahf
dec
sub
lea
mov
mov
out
sub
fldt
insl
fs
and
push
aad
inc
dec
pop
inc
jb
ret
fildl
int3
je
or
pushf
movsb
push
out
int3
in
mov
jmp
nop
push
dec
inc
cmpb
add
fs
arpl
mov
lods
lret
xor
addr16
xchg
lock
clc
jne
xchg
cmpsb
mov
mov
data16
ja
aam
inc
hlt
jnp
in
out
jl
pop
cmpsl
stc
faddl
add
inc
cld
outsl
aas
fyl2xp1
lea
mov
inc
outsb
sbb
arpl
imul
out
xchg
outsl
out
lcall
mov
jg
add
push
sbb
outsl
adc
mov
inc
enter
cmp
stc
int3
out
or
lahf
in
addr16
insl
movsl
jbe
scas
lcall
mov
jae
cmp
sub
sbb
or
dec
je
scas
call
call
adc
dec
push
loopne
hlt
jns
mov
sti
xor
push
mov
hlt
pop
pusha
xor
adc
cwtl
movsl
jle
pop
stos
xchg
jae
fwait
dec
pop
pusha
mov
and
pusha
cmp
pop
out
cmpsl
pop
adc
lea
push
lods
inc
fsubl
pop
mov
adc
jae
and
arpl
adc
or
xchg
inc
cs
adcb
mov
sbb
add
sub
cmpsl
aas
mov
aaa
pushf
loop
and
ret
vfrczps
test
mov
push
in
test
mov
mov
xor
jmp
xchg
shrb
cmp
dec
daa
sub
es
loope
scas
add
jg
push
dec
push
xchg
fwait
inc
dec
lods
jg
jecxz
inc
lock
into
pop
or
popf
sub
mov
stos
arpl
loopne
in
push
jbe
cmp
shlb
test
bswap
xor
add
pop
sub
push
push
jl
lret
sbb
aad
or
jns
pop
and
mov
mov
cmp
jnp
in
int3
lock
daa
pop
pop
cmp
jae
shlb
rcr
imul
xchg
and
push
clc
pop
gs
std
xchg
je
jmp
sub
xchg
int3
push
hlt
xchg
push
hlt
push
jae
mov
pop
pop
jbe
sub
repz
gs
gs
mov
sbb
inc
cmpsb
mov
aad
jmp
push
stos
daa
push
mov
outsb
sub
nop
es
add
lods
mov
repz
add
faddl
stos
xchg
mov
lret
mov
jo
xor
adc
aaa
add
in
imul
lock
loop
popa
sbb
cmp
es
cwtl
cs
xchg
inc
cmpsl
out
adc
stc
stos
inc
insl
fmull
sub
pop
out
dec
sub
insl
mulb
mov
push
sbb
push
test
test
out
lea
jns
pusha
cmp
repnz
icebp
std
push
and
jno
mov
xor
dec
hlt
mov
dec
nop
and
imulb
xlat
xor
dec
mov
xchg
cmp
push
es
mov
out
pop
das
out
cs
push
mov
jg
jle
push
xchg
arpl
sub
jl
aaa
jl
jge
fcompl
cltd
stos
jle
mov
dec
cwtl
jns
push
inc
cmp
pop
dec
pop
add
pop
xor
popa
mov
call
pop
push
sub
or
sub
jns
sub
sahf
loope
imul
adc
sarb
daa
jecxz
ret
fistps
mov
push
scas
pop
dec
and
in
sbb
test
mov
fs
ret
adc
jbe
push
gs
outsl
xchg
and
int
jns
cwtl
sub
cmpsl
mov
mov
mov
stc
stos
lret
stos
mov
mov
cld
xchg
inc
int3
cmp
movsb
sub
jg
sbb
jge
fbld
sahf
jo
aaa
push
nop
push
jns
movb
pop
mov
hlt
mov
imul
xor
nop
fwait
jg
cmp
mov
push
lds
dec
jae
test
lods
lret
lahf
scas
and
cmp
and
pop
or
lcall
mov
sbb
jbe
icebp
push
repz
gs
push
push
mov
std
mov
out
mov
aam
outsb
lods
rorb
pop
aam
les
inc
sub
and
mov
and
add
rclb
fwait
out
imul
and
inc
test
ljmp
stc
mov
add
jmp
stos
popa
mov
dec
pop
addr16
cmp
insb
addr16
dec
bound
add
test
mov
das
xor
aas
and
adc
shl
decb
cmpsb
and
mov
cmp
js
aas
insb
fdivr
xor
vpshufhw
push
mov
je
gs
adc
out
test
movsb
ds
daa
inc
insl
push
lock
jl
or
push
push
jmp
mov
inc
or
sbb
dec
cwtl
mov
pop
mov
jl
lods
mov
shlb
shll
sub
bound
aam
pusha
arpl
sub
mov
pop
push
and
push
inc
xchg
jo
sub
dec
stc
push
roll
cwtl
mov
cmp
nop
inc
mov
jecxz
mov
sub
add
fldcw
pop
jne
sbb
pop
out
add
int
into
xlat
ret
push
adc
dec
out
xchg
shr
test
or
mov
sub
mov
mov
inc
cmp
sbb
mov
movsl
pop
xor
dec
rcll
cmp
enter
nop
loopne
pop
outsb
xor
cmpsl
and
add
bound
pop
outsl
sbb
jnp
insl
lock
out
or
xchg
loopne
lods
fwait
testl
gs
sbb
movsl
fbstp
out
xchg
and
popf
or
push
cmp
insb
inc
xlat
jl
arpl
push
cs
mov
push
dec
mov
cmp
test
stc
adc
or
mov
lcall
fldl
push
pop
add
xchg
push
lock
mov
adc
mov
fidivs
sub
and
arpl
fidivrl
out
jmp
repz
jg
pop
in
imulb
dec
pop
xor
fdivr
fwait
pushf
jae
jmp
and
ret
in
loop
int3
and
inc
push
xchg
loopne
or
clc
cli
stc
inc
dec
push
lea
imul
repnz
cmc
ja
xchg
shll
sbb
push
inc
lods
jae
lock
ss
and
cwtl
js
out
push
stos
jg
arpl
out
jge
sbb
mov
aad
add
sbb
nop
sub
sub
test
xchg
divb
adc
push
mov
mov
sbb
xchg
mov
sbb
dec
sbb
sti
fs
push
outsb
cmp
loop
mov
cltd
arpl
inc
dec
xchg
scas
das
sti
mov
add
jnp
loope
das
sbb
xor
cld
shll
mov
jmp
push
or
in
loope
sub
outsb
pop
xorl
arpl
xor
sahf
sub
in
stos
adc
ja
pop
test
jne
xorl
int3
pop
rolb
outsl
dec
mov
addr16
cmp
pop
sub
mov
aad
adc
cld
jmp
fldt
mov
in
imul
dec
sar
jnp
pop
mov
iret
aad
jnp
jae
sub
unpckhps
andb
sbb
mov
jp
jo
jns
cwtl
pop
adc
movsb
ljmp
jae
stos
jae
mov
fmuls
fs
lock
scas
sbb
dec
std
jns
sub
mov
push
adc
jae
cmpsl
jmp
shrl
adc
jnp
lods
jmp
pop
popa
lcall
es
in
mov
test
out
push
sbb
loop
addb
inc
jo
mov
mov
fmuls
dec
adcb
lret
adc
mov
fmulp
xchg
insl
jp
fcompl
jo
push
test
cmp
test
xor
outsb
jo
hlt
adc
movl
sub
mov
and
cs
addr16
push
mov
insb
shl
popa
dec
jo
push
lock
mov
enter
repz
xchg
mov
push
jae
lock
mov
or
mov
mov
jo
mov
fisttpl
fsubs
clc
or
out
add
jo
and
sub
sub
nop
jo
mov
jge
nop
dec
pop
jle
fwait
jge
pop
popf
jo
and
addr16
inc
jo
test
mov
push
mov
pop
jmp
mov
pop
xchg
adc
mov
push
jl
cmpsl
sbb
mov
cmp
js
rolb
movb
mov
rorl
bnd
insl
enter
jp
je
in
sbb
inc
js
xchg
sahf
mov
lods
mov
orl
in
idivl
adc
inc
lea
mov
add
ja
jp
loopne
mov
jo
jle
pop
out
repnz
sbb
sub
test
xchg
ljmp
jle
cmpb
dec
sbb
xchg
mov
pop
data16
out
shlb
imul
jo
bound
adc
and
test
les
clc
jp
xchg
je
int3
jo
popa
sub
int
in
jo
movl
or
add
out
xor
loop
shl
lahf
mov
and
cmp
mov
imul
addr16
add
sub
pop
bound
shlb
jo
or
pop
xchg
into
in
cmp
js
mov
xor
jo
lock
mov
mov
sub
push
rcrl
into
mov
arpl
cwtl
pop
jae
aas
cmp
xor
dec
aaa
insb
sbb
movsl
dec
sub
inc
dec
in
jo
lcall
popa
lret
in
inc
xchg
jo
cmc
fists
cld
ret
jo
lahf
cmp
pop
mov
shlb
and
add
leave
addl
orb
cmpsb
mov
push
pop
jle
xor
fnstcw
por
add
mov
gs
loop
outsb
clc
and
sti
and
das
mov
cmp
pop
cmp
insb
jle
xor
adc
jle
out
push
mov
ficoml
pop
xor
or
inc
and
mov
ror
mov
sbb
ljmp
mov
pop
pushf
mov
jp
insb
mov
adc
sbb
popf
outsl
and
lock
sbb
out
mov
iret
cmp
movsb
aaa
sbb
adc
cwtl
xchg
outsb
repz
fmul
icebp
hlt
call
std
scas
cltd
or
inc
pop
push
jge
dec
lods
xor
pop
insl
sub
mov
push
dec
push
inc
dec
pop
xor
test
jg
sub
jbe
subl
lock
mov
inc
lret
push
nop
pop
mov
pop
gs
lods
dec
push
test
frstor
or
mov
jo
pusha
xor
sbb
jns
pop
mov
imul
fistl
nop
jno
adc
mov
or
out
movsb
pop
push
arpl
dec
mov
push
hlt
push
mov
out
outsl
inc
mov
mov
dec
mov
daa
push
incl
mov
xor
xchg
pushf
ftst
ja
inc
cli
dec
insl
loopne
xor
add
sbb
cmp
or
jge
popf
movsl
stc
add
sbb
icebp
leave
jnp
pop
push
lods
or
scas
lods
jb
or
or
inc
dec
ljmp
mov
adc
ds
sbb
icebp
jmp
push
repnz
mov
bound
cmc
push
jb
imul
fmulp
insl
or
and
shrl
xchg
repz
jae
sbb
mov
in
test
sbb
mov
or
jo
push
daa
sub
jns
or
mov
mov
cmpsl
adc
jo
repz
cmp
hlt
lea
fsts
push
pop
xlat
mov
pop
enter
push
mov
push
enter
inc
cmp
out
psubq
pop
dec
jbe
or
inc
mov
push
inc
add
mov
outsl
pop
xchg
stos
js
push
xchg
jp
jle
xlat
or
sub
sub
loope
jecxz
mov
sub
loope
insl
mov
mov
or
aaa
data16
cmpsb
jl
dec
add
into
in
dec
nop
std
cmp
xchg
push
mov
lods
cmp
xor
dec
js
arpl
loop
cmp
mov
mov
pop
repz
out
cmpsb
int3
mov
scas
push
mov
xchg
mov
in
gs
jmp
fsubs
notb
idivl
ds
sbb
mov
fiaddl
arpl
icebp
jecxz
xor
mov
testb
ret
jns
fisubs
pop
enter
and
lret
insb
aaa
arpl
fs
push
jno
xchg
mov
outsb
xchg
in
cmp
mov
add
push
jmp
ss
sub
or
rclb
add
stos
addr16
ja
icebp
fwait
out
aaa
xor
push
jmp
xchg
pop
hlt
cmpsl
enter
sahf
cmp
jmp
cmpsb
inc
mov
xchg
mov
movsl
and
jge
cmp
dec
ret
insl
pop
cmp
scas
shl
outsb
and
inc
push
out
xor
vmovntdq
add
out
insb
aas
lods
stos
aaa
mov
cmp
pop
dec
jae,pn
mov
or
cmc
jbe
es
sti
stos
mov
sub
pusha
movsl
popa
call
xor
and
inc
or
and
dec
or
sbb
mov
jp
push
lods
cmp
or
xor
push
or
dec
arpl
and
sbb
call
stc
scas
test
js
pop
imul
insb
mov
psllq
scas
cwtl
aam
jle
icebp
ss
test
gs
xor
mov
xor
jg
add
jp
rorl
push
call
or
push
mov
jo
subb
dec
loop
cld
shr
xchg
xor
mov
sbb
xchg
and
jb
or
shlb
js
loop
mov
mov
add
gs
aaa
and
xor
inc
stc
jl
hlt
popf
scas
xchg
das
ret
inc
std
jns
push
jbe
ficomps
xor
sti
add
movsl
mov
loopne
nop
jge
insl
xor
imul
int3
mov
sbb
dec
stc
cltd
call
pop
shl
jbe
js
call
sbb
pop
dec
jmp
hlt
lahf
push
test
push
loopne
cwtl
movsb
cmp
data16
sti
xchg
inc
pop
testb
loope
pop
test
add
lahf
pop
lods
mov
inc
jne
int
lret
adc
mull
insb
sub
push
stos
stc
sub
ss
xchg
rep
lds
ficoms
sub
pop
cvtdq2ps
test
mov
daa
out
xor
pusha
mov
xor
mov
mov
dec
lods
imulb
call
inc
clc
rolb
andl
out
cmp
outsl
jae
out
shrb
shll
in
in
xorb
pop
imul
push
mov
fistpl
mov
cmp
mov
bound
sub
fnstcw
or
in
jle
sbb
cmp
push
insl
inc
inc
sbb
test
fwait
mov
subl
sub
subl
push
pop
xor
imul
pushf
into
and
insb
cmp
mov
xchg
addr16
or
jl
xchg
jmp
jge
sub
mov
sub
cmp
lods
mov
and
negb
outsl
inc
pusha
arpl
cmp
aaa
movsb
push
inc
mov
add
lret
je
faddp
pop
adc
imul
mov
cmp
cwtl
loope
mov
lret
imul
add
insl
insb
lcall
mov
mov
add
popf
sbb
dec
mov
out
jno
scas
fincstp
dec
test
jo
nop
cmp
jae
gs
pusha
adc
arpl
jg
add
sbb
in
lock
jns
mov
cwtl
mov
jmp
cmp
jae
hlt
icebp
or
mov
rorb
mov
rclb
and
mov
into
sub
push
sti
jb
stc
and
cmp
rcrb
inc
mov
lret
jae
cmp
pop
shlb
mov
subb
push
in
jle
sub
shrb
shll
jns
inc
xor
lahf
dec
push
shlb
fstl
nop
sahf
cmp
notb
test
imul
das
in
xor
xor
je
mov
and
pop
xchg
test
fisttps
cltd
fmul
pop
in
test
fs
pop
pop
push
in
push
es
sub
and
fstpl
arpl
fs
pusha
cli
scas
fists
push
jae
pop
clc
cltd
sbb
lret
sbb
lea
mov
push
outsl
sti
pop
fisubrs
mov
inc
dec
mov
lcall
out
ret
sub
pop
lock
in
jg
imul
and
popa
sti
jmp
fsts
out
les
push
stc
mov
nop
popf
inc
data16
clc
mov
cmp
mov
std
mov
addr16
xchg
inc
testb
lock
addr16
je
inc
gs
dec
jg
push
adc
mov
push
scas
data16
popa
push
push
shrl
mov
lcall
pop
insl
fwait
sbb
sub
xchg
arpl
sub
jne
adc
enter
jge
loopne
pusha
jo
dec
stos
jle
sbb
insl
rclb
push
mov
aad
add
push
mov
shll
ljmp
push
mov
xor
mov
fchs
mov
xchg
scas
jb
arpl
inc
aam
in
push
das
fs
inc
push
enter
mov
popf
push
pop
fnstenv
out
jmp
push
mov
insb
std
test
push
shll
lock
out
inc
mov
cmpb
ret
out
jg
dec
xchg
pop
outsb
xchg
or
cmpsb
mov
push
mov
jns
and
sub
leave
adc
jnp
jb
dec
jb
cmc
add
adc
push
punpckhbw
add
bound
lods
or
cs
xchg
arpl
xchg
add
fists
and
push
addr16
pop
lea
arpl
add
cmpsl
cmpsl
dec
adc
push
test
movsb
mov
or
scas
popa
lock
pop
mov
sub
sub
adc
daa
test
push
mov
xchg
add
js
dec
inc
mov
mov
push
outsl
cmp
shlb
mov
out
xlat
loopne
out
fs
outsb
shll
sbb
loope
or
push
mov
cmp
pop
fdiv
push
test
pusha
mov
pop
or
daa
push
mov
imul
lods
xchg
ret
mov
cli
cmp
lcall
sbb
loop
and
sti
es
adc
ja
out
arpl
imul
jmp
scas
xchg
pusha
enter
mov
arpl
jns
push
out
xchg
mov
popf
mov
ret
pop
fcomip
mov
movsb
push
push
pop
pop
dec
mov
sub
cmp
push
es
add
mov
or
mov
and
loop
xor
pop
imul
cmp
xchg
outsl
pop
dec
outsb
push
dec
iret
je
jae
pop
mov
adc
mov
push
push
push
and
sub
dec
pushf
fiadds
popl
push
inc
inc
adc
dec
dec
fistps
push
and
and
sbb
fmuls
out
inc
dec
pop
pop
mov
jecxz
pop
loope
lods
mov
mov
mov
push
aas
test
mov
or
xor
mov
jo
sub
enter
pop
jnp
fwait
fs
arpl
pop
adc
pop
push
mov
cmpsl
sub
movsl
stos
das
repnz
jecxz
data16
dec
mov
jecxz
adc
jae
shlb
push
aam
lcall
mov
jl
sub
popl
aad
insb
push
mov
push
fsubrp
cmp
or
lods
lret
mov
fstl
cld
xor
pop
test
mov
lret
test
cmpsl
jae
mov
pop
setns
scas
ror
ja
hlt
into
call
inc
sub
push
das
sub
outsl
adc
scas
lahf
fldcw
out
push
or
push
arpl
push
in
lods
and
sbb
mov
notl
cmp
inc
inc
imul
pop
push
xor
stos
and
cld
adc
mov
pop
scas
pop
mov
repnz
aas
xchg
ret
int
push
xchg
pop
dec
sub
insb
cmp
push
jo
ja
lods
lahf
sbb
jo
xchg
mov
or
cmc
jmp
cmpsb
aaa
jo
xchg
lcall
sub
rorl
cmp
jp
lds
testl
pop
lcall
cmp
sub
and
add
gs
or
test
jl
lock
insb
cmp
jo
adc
mov
in
fidivrs
addb
mov
sub
lds
iret
lret
jo
xchg
push
add
mov
jo
cli
lcall
push
or
dec
xor
data16
lea
jb
adc
mov
dec
sbb
jo
roll
push
lcall
xchg
mov
jae
int
lret
stc
popf
std
shlb
dec
dec
xchg
icebp
daa
mov
fcomps
call
popa
outsb
pushw
pop
and
push
xor
jo
mov
sub
mov
and
lea
sahf
cld
jns
mov
cwtl
out
jp
jo
or
mov
jle
cli
int3
cmpsb
testl
mov
and
sub
orb
xchg
jg
pushl
jnp
test
pop
cmpsb
jo
xchg
rorl
mov
icebp
cltd
push
fcmovb
mov
in
mov
jnp
jo
pusha
bound
pop
cmp
aam
pop
movsb
xor
test
pop
cltd
stc
sbb
lcall
or
nop
push
and
sbb
xor
sbb
sbb
sti
jge
ja
pop
in
inc
xchg
sub
mov
jno
ja
jo
jl
das
and
cmp
daa
cmpsb
lret
fcoml
andl
js
pop
pop
rcll
mov
orb
jae
mov
mov
jo
pop
xchg
inc
push
pop
mov
xor
roll
sub
inc
fbstp
pop
fmulp
xor
jo
insl
out
rcrl
roll
int
cmpsl
daa
jo
and
sbb
inc
in
xor
jo
idivl
scas
insl
pop
jno
jo
sbb
sbb
push
jo
mov
mov
dec
lods
mov
adc
mov
sub
jns
jae
comiss
adc
stos
hlt
int3
jo
sub
lret
and
add
jbe
js
addb
jo
fistpl
mov
sbb
popa
jo
sti
push
mov
jo
jmp
pop
shll
cmp
xchg
lret
fwait
les
dec
fistpll
adc
test
xchg
mov
jae
cs
mul
orb
mov
out
fnsave
mov
mov
jae
jge
cmp
test
sbb
jb
jnp
insb
fcmovb
jo
pop
sbb
and
add
imul
fcmovbe
int
jp
adc
lret
xchg
jl
shrb
fsubrs
sub
or
fsubrp
in
jo
mov
push
dec
jo
or
outsl
xor
mov
xchg
popa
test
jno
mov
adc
pusha
icebp
adc
adc
insl
outsb
jo,pn
sbb
popf
arpl
add
daa
repnz
inc
cmp
xlat
and
xor
jns
in
aas
sub
js
arpl
shlb
sti
mov
nop
test
cmc
mov
push
div
pusha
pop
cld
enter
add
stos
pop
into
out
test
aas
mov
dec
cmp
add
jo
repnz
popf
les
mov
jo
outsb
insl
das
imul
sbb
dec
and
push
mov
fisttpll
pop
jae
dec
nop
rcrb
testb
cli
fnstcw
jno
jbe
repz
mov
lock
xchg
icebp
xchg
cwtl
outsl
inc
pop
sub
jo
cs
dec
insb
cmpsl
or
stos
xchg
test
bound
mov
test
dec
shll
gs
loope
cmpsb
sub
and
xchg
jle
mov
xchg
jno
cmc
je
fstl
and
add
arpl
mov
gs
inc
cs
push
add
mov
sub
push
jecxz
mov
loopne
pushf
pop
test
call
clc
lret
push
xchg
int
cld
jo
xchg
lods
cmp
pop
and
popa
int3
mov
mov
js
in
popa
lea
jmp
je
xlat
sbb
sbb
sbb
mov
out
mov
sarb
insb
jo
and
sbb
mov
sbb
jo
sub
lea
movsl
inc
jo
xor
mov
subl
aam
shrb
loope
jo
addr16
xchg
cmp
loopne
inc
jle
insb
xchg
mov
stos
lock
adcb
jno
inc
addr16
test
loope
jo
ret
dec
mov
jo
pop
and
jo
xchg
jmp
jle
cmp
push
xchg
scas
jne
add
jo
cmp
jo,pt
cld
cmpsb
mov
out
jb
xor
js
jo
cmp
lds
inc
out
mov
xor
sarb
add
fdiv
xchg
jo
push
and
push
hlt
jp
jo
orb
dec
das
mulb
orb
in
sbb
inc
pop
sub
cmc
movsl
cvttps2pi
ljmp
jecxz
xchg
pushf
xchg
push
rcr
jo
push
sbb
push
mov
lcall
mov
es
cli
into
xlat
add
inc
sub
jo
or
mov
push
shll
or
pushl
mov
loop
sarl
sti
repz
mov
sbb
mov
pop
push
sahf
int
popa
mov
int3
jno
jg
bound
sbb
mov
jae
and
and
arpl
push
push
sahf
jo
mov
cmpsl
cltd
out
ret
loop
push
pop
mov
pop
insb
imul
test
inc
mov
ret
je
dec
jge
jo
test
rorl
push
adcl
sub
push
push
mov
out
sub
or
subb
and
push
cmp
fs
mov
gs
dec
adc
inc
mov
mov
and
jb
icebp
pop
pushw
fstps
outsl
jo
mov
xor
jo
repz
hlt
in
sub
xchg
stos
ficompl
push
add
imul
popf
jo
mov
pop
nop
mov
out
push
rclb
bound
cmpb
pop
inc
mov
je
sub
mov
mov
aad
dec
jo
xchg
xor
pop
adc
in
jo
cs
mov
sub
inc
inc
insl
pop
stos
test
sbb
mov
jg
adc
mov
adc
arpl
mov
xor
sbb
jl
shl
out
inc
sub
enter
jns
ljmp
and
daa
and
sar
out
mov
hlt
inc
jo
mov
add
dec
sbb
jo
ret
loopne
cwtl
inc
xor
sarb
pop
subl
or
cmp
adcb
je
jo
lods
dec
lcall
xchg
movsbl
test
out
pusha
jo
mov
inc
repz
outsb
nop
xchg
mov
pop
adc
jo
sbb
in
test
xchg
jmp
push
jge
or
btr
inc
outsl
js
iret
push
xorb
dec
ljmp
bnd
jae
cmp
test
lea
mov
adc
xor
or
lods
gs
inc
sbb
andb
mov
inc
sub
jno
inc
jo
cmc
and
sbb
inc
mov
mov
pop
jo
fwait
adcl
adc
inc
add
xchg
idiv
daa
movsl
int
arpl
mov
dec
jo
mov
in
and
aam
jae
lods
and
mov
out
lret
insb
je
jo
cs
ret
or
shlb
cs
cltd
faddl
jo
lods
mov
in
dec
sarl
pop
xchg
in
in
insb
xor
sub
jo
or
push
dec
icebp
loope
ret
push
jge
das
xorb
imul
dec
clc
test
mov
sub
loop
iret
xchg
jno
rcl
push
cmc
push
jp
adc
dec
push
in
mov
xorl
scas
mov
pop
ret
cmp
xchg
mov
mov
fcmovnb
movsl
cld
sub
jne
scas
mov
mov
js
addr16
sbb
or
mov
aam
fcoml
leave
mov
rcrb
jae
xorl
mov
pop
inc
hlt
mov
mov
push
lods
fwait
jmp
pop
pop
jp
aad
mov
sbb
or
addr16
es
xor
push
je
std
sbb
mov
jb
arpl
fs
sbb
es
rcrb
adc
adc
add
mov
mov
nop
cltd
insb
push
rcl
xor
mov
enter
insl
adc
and
into
sub
jle
sub
rclb
inc
rcl
hlt
add
jae,pn
int3
jge
and
push
mov
sbb
lcall
push
js
jle
insb
es
mov
lret
cmpsl
ja
pop
dec
rcrb
aad
pop
push
repz
mov
arpl
clc
lea
pop
ds
dec
add
lods
add
mov
pusha
xchg
mov
loop
push
mov
pusha
test
jns
mov
jns
fadd
and
dec
nop
arpl
mov
push
push
sbb
ret
pop
das
scas
arpl
xor
mov
shr
push
jg
mov
xchg
or
mov
jb
int3
jecxz
mov
jbe
sbb
push
push
pop
pop
gs
fldenv
or
hlt
rcr
loopne
cwtl
jle
dec
daa
addr16
add
shll
push
mov
cmpsb
jbe
std
fs
hlt
stos
arpl
test
mov
or
cmp
or
stos
inc
ja
pop
out
aas
jp
bound
jle
and
add
dec
mov
popf
dec
int3
jne
andb
jae
imul
dec
scas
jns
adc
sbb
mov
add
test
or
push
push
pusha
daa
jle
stos
mov
enter
mov
rcll
je
xchg
push
insb
das
call
negb
gs
ds
mov
fsubrs
arpl
push
mov
lea
xchg
push
jae
xchg
andb
dec
mov
add
in
loope
add
inc
inc
leave
cmp
aam
loope
cmp
add
cs
in
iret
cmp
movsl
or
fcomps
out
lds
add
add
imul
mov
push
outsl
jp
jmp
xchg
movsl
adc
scas
push
in
fidivl
daa
jae
out
mov
ret
loop
add
add
sbb
ret
lret
xor
adc
fidivrs
aas
dec
pause
xchg
fwait
mov
imul
mov
aas
fiadds
or
xchg
add
insb
mov
out
arpl
push
fldcw
mov
inc
sub
mov
arpl
add
pop
push
lods
xor
insl
dec
push
adc
xor
cli
push
mov
cmpl
xor
jno
fsubrs
xor
je
sub
inc
inc
jle
dec
loope
mov
movq
movsl
xchg
test
jae
loop
add
cwtl
jns
testl
js
arpl
sbb
sbb
or
outsl
fbld
insl
mov
fs
das
pop
add
pop
add
push
je
arpl
push
sub
push
cmp
ja
in
inc
inc
cmpsl
in
add
testb
or
enter
and
xchg
cltd
ret
add
lret
xchg
sub
sbb
xlat
inc
push
ss
leave
imul
xchg
sub
lock
leave
dec
rcrb
cmc
dec
icebp
test
add
inc
jno
das
add
sbb
je
pop
insl
jge
popa
icebp
ret
lock
adc
inc
push
jle
int
mov
into
loopne
jle
add
xor
pusha
into
sbb
out
std
sbb
lods
jae
jmp
and
push
push
test
mov
gs
mov
mov
outsb
fildll
imull
fisttpl
xchg
in
push
out
push
mov
push
xchg
and
addr16
sbb
loopne
jae
cmp
jl
mov
popf
push
adc
mov
shll
push
lods
lock
and
fwait
jae
cmpsl
fsubp
sbb
inc
add
dec
jle
mov
adc
sbb
dec
pop
and
pop
mov
cs
pop
call
outsb
pop
sti
loopne
iret
cmp
rorb
and
xchg
int
shlb
enter
ss
add
xor
rcrb
xlat
adc
push
jl
iret
cmpsl
push
sbb
xor
mov
mov
push
std
subb
scas
mov
or
ljmp
mov
xor
std
inc
fnstcw
sbb
dec
push
pop
sbbl
loope
rcll
ljmp
sub
scas
les
mov
nop
lret
popf
mov
loopne
mov
repz
mov
cmp
sarb
scas
inc
inc
pusha
jns
add
jne
mov
mov
xor
push
cmp
push
mov
outsl
pop
mov
shrb
xor
push
push
outsb
cld
int3
dec
jno
pusha
mov
jecxz
cld
mov
movsb
fs
int
stos
cmc
mov
scas
fld
gs
mov
repnz
addr16
cmpsb
sti
int3
lret
and
mov
insl
scas
lzcnt
dec
or
or
es
push
in
xchg
sub
pop
cmpsl
inc
xchg
aam
hlt
adc
push
push
pusha
xlat
std
idivl
ja
stos
jae
jp
adc
push
lret
push
lods
fsubrl
arpl
or
inc
xchg
jns
aas
and
cmpsl
jle
inc
lock
jae
sbb
lret
jo
mov
jge
fisubl
cmpsb
sbb
add
stos
sub
xor
cmpsb
adc
xchg
nop
std
jae
addl
mov
es
adc
jnp
aaa
push
in
jnp
stos
mov
or
sti
push
mov
ror
das
icebp
outsb
fdivr
lock
daa
mov
cs
add
mov
cmp
sbb
jae
sub
adc
dec
das
mov
mov
push
lock
add
mov
jle
pushf
mov
fstp
arpl
imul
add
jmp
jge
leave
out
cld
adc
cmp
in
jle
xchg
fs
jo
adc
mov
cmp
sbb
or
stc
sub
cmpsl
add
xchg
jmp
cltd
icebp
inc
es
mov
adc
enter
sub
mov
jo
xchg
pop
xchg
popa
ss
cmpsl
inc
cmp
xorb
stc
orb
into
add
andps
sub
jo
xchg
lds
mov
cs
subl
test
mov
sbb
dec
jg
int
jo
mov
cwtl
and
ss
sub
pop
mov
xchg
pop
nop
out
lock
inc
pop
js
jo
mov
rsm
out
mov
sub
add
and
dec
mov
jo
aam
lock
es
pop
hlt
xchg
sahf
push
or
repz
sub
arpl
pop
push
mov
sbb
xor
adc
adc
js
xor
jecxz
sub
or
loope
add
into
mov
out
pop
push
pop
xchg
or
ret
or
mov
push
sub
xchg
pop
push
nop
enter
fwait
push
lahf
xor
sbb
jo
repz
fistpll
xchg
pop
xor
pop
loopne
frstor
cmpsl
jo
mov
or
jbe
adc
fidivl
fneni(8087
ret
movb
mov
pop
test
mov
xor
push
js
cmp
std
jo
dec
adc
mov
pop
pop
pop
sbb
cmp
pop
xor
jge
out
cmp
cmp
sub
pop
xor
jbe
fidivs
xchg
and
jnp
aaa
sahf
jo
movsl
mov
push
mov
jo
mov
fsqrt
xlat
faddl
jo
and
loop
lods
aad
jo
ret
mov
xchg
lcall
lea
jmp
iret
daa
push
and
pop
pop
add
push
and
jo
mov
fs
test
insl
mov
stos
mov
int
js
es
xchg
out
adc
mov
pop
cli
sahf
test
out
fucom
fcoms
scas
fwait
enter
xlat
fidivl
lahf
mov
or
hlt
aaa
push
dec
or
jg
mov
imul
lock
add
pop
hlt
in
jae
insb
jecxz
inc
dec
lcall
add
or
jns
ss
insb
fsubs
mov
mov
add
sbb
xchg
outsb
and
les
loopne
push
adc
fistpll
sub
lahf
add
xor
cmp
adc
fldcw
or
fstps
jecxz
in
adc
xchg
pop
jns
in
cld
xchg
ja
sahf
pushf
rcl
js
and
push
or
shlb
mov
bound
adc
adc
dec
and
adcb
sbb
mov
push
out
push
out
dec
jp
out
fs
xchg
jno
push
and
scas
pop
insl
push
pop
cmp
outsb
arpl
mov
jmp
mov
aaa
incl
ja
pop
sbb
or
mov
je
lahf
mov
push
test
pop
push
lret
cmpsb
ja
jae
dec
sub
lods
pop
shl
inc
ds
push
hlt
adc
jge
cmpsb
jno
push
es
xchg
nop
sbb
mov
stos
lahf
cmp
int3
or
ja
or
hlt
and
mov
ljmp
push
mov
in
into
lds
and
es
les
in
icebp
aam
mov
shlb
icebp
leave
das
cmpb
xchg
daa
jl
push
mov
and
jle
or
rol
and
mov
xchg
ja
add
sbb
in
loop
push
ret
mov
loopne
dec
repnz
pop
fstp
push
xor
sbb
dec
mov
xchg
and
sti
sbb
lahf
popf
cmpsb
mov
fwait
xor
je
xor
push
mov
leave
fadds
xchg
add
jo
mov
jne
mov
cmp
iret
pop
mov
outsl
sub
cltd
out
int
lcall
or
or
shll
and
push
fs
jbe
jo
cs
or
jg
add
popa
clc
sub
outsl
xor
xchg
mov
inc
lret
jbe
stos
push
add
jb
xsha256
cmpsb
adc
scas
jle
insl
jns
jo
lahf
lret
sbb
dec
cmp
lods
add
pusha
jnp,pn
sbb
test
jp
rclb
mov
add
pop
cld
jo
cmp
mov
jo
sbb
or
sti
sub
pop
xchg
in
push
mov
jo
lds
pop
inc
inc
addl
js
ret
stos
xor
sub
dec
inc
test
or
mov
mov
mov
aas
pop
lretw
add
out
je
sub
mov
pop
or
in
fs
pop
cli
aad
xchg
jmp
shlb
mov
subb
stc
cmpsl
add
dec
or
cmp
sub
in
notb
dec
jmp
jl
inc
int
nop
dec
jg
xchg
xchg
sub
mov
in
jo
jnp
jne
jg
xchg
jo
pop
mov
jb
test
jne
fptan
adc
cmp
stos
out
pop
ret
scas
mov
outsb
test
mov
out
mov
jo
movsl
imul
in
int
dec
mov
popa
js
cmp
cmp
ret
sbb
call
js
cli
das
sub
insb
jo
push
push
aam
xchg
add
cs
jae
jl
mov
int
mov
dec
xchg
sub
lock
test
stos
xor
jcxz
jo
loop
xorb
cmp
cmc
les
popa
jmp
fbld
loope
pop
mov
mov
jnp
push
mov
icebp
jo
insl
mov
jp
lret
sti
jl
addb
jb
int
enter
cmp
jae
fs
bound
aas
test
rclb
int3
ret
imul
cs
test
js
jmp
jns
sahf
mov
jae
repnz
adc
lock
mov
push
push
dec
jmp
sub
jae
inc
movsl
orb
or
nop
push
or
push
mov
stos
and
dec
adc
push
dec
sub
add
mov
jo
push
inc
xchg
movsl
rolb
mov
repnz
pop
loope
outsb
inc
push
sbb
jne
je
mov
mov
pop
cwtl
jle
cmc
rcrb
stc
cmp
jno
push
mov
mov
nop
xor
lds
imul
push
push
data16
add
xor
in
inc
addr16
adc
sar
aam
jo
ss
dec
or
jbe
mov
stos
jecxz
xchg
jo
cwtl
cmpsl
in
lret
in
dec
jo
adc
leave
push
into
or
lock
iret
dec
and
inc
out
jmp
adc
dec
cmpsl
je
xorl
pop
jg
pop
jle
pop
loop
jae
imul
das
push
sbb
mov
frstor
lock
ret
lods
jb
xor
dec
cld
and
jo
enter
xchg
and
fisubrl
pop
push
fildl
jmp
pop
js
clc
leave
sti
xor
or
jbe
mov
aad
cmpsl
scas
mov
cwtl
test
outsl
roll
jno
mov
mov
aad
sub
popf
notl
outsb
fbld
call
jo
cmp
enter
insb
sub
rcr
ds
fistpll
popa
ds
lahf
dec
fsubrs
jo
arpl
jle
cmpsb
sub
repz
repnz
sbb
mov
ret
rcr
jo
lock
repz
dec
test
jle
inc
imull
jae
push
push
popa
out
pushf
jo
mov
pop
lock
aaa
mov
and
loope
pop
hlt
dec
out
jmp
pop
dec
lds
sub
add
xor
pushf
and
inc
push
out
nop
mov
push
ja
push
sub
sub
jo
out
push
mov
nop
jb
jns
fdiv
jnp
xor
inc
jbe
rcll
insb
fstpt
jne
mov
jo
and
or
mov
lods
add
into
jo
add
jae
cmp
jo
xchg
fists
or
push
jo
pop
into
pop
cmp
pop
jmp
incl
jo
mov
sti
mov
sub
scas
and
repz
pushf
loop
add
mov
divl
add
test
lock
pop
mov
push
divl
shll
or
push
or
fsubrs
out
ss
jle
mov
pop
push
add
push
adc
jo
pop
sti
jno
in
pop
andl
and
jo
pusha
es
nop
xchg
in
int
xchg
addb
icebp
fdivrl
or
adc
jl
push
dec
in
fbstp
cwtl
xchg
sub
stos
jo
and
movsb
mov
sub
cs
insb
sbb
push
fisubrl
inc
pop
adc
pop
add
xor
int
fidivl
cld
dec
dec
jo
rolb
jo
and
jl
adc
cmp
pop
je
dec
fdivs
or
mov
rcpps
xchg
jb
push
mov
mov
shrb
mov
loope
dec
jb
sbb
pop
jo
jbe
dec
cli
xor
cmpb
cmpsb
les
fs
lahf
jge
stos
fiadds
je
stos
dec
jae
clc
push
shl
lds
mov
adc
test
jo
rcll
pop
dec
push
sbb
mov
push
jo
inc
loope
push
cmpb
xor
jo
imulb
jo
or
sbb
adcl
out
sub
fimuls
mov
xchg
cmp
mov
nop
or
push
mov
popa
adc
std
xchg
pop
push
pop
jge
jo
shlb
jo
mov
mov
sbb
gs
adc
adcb
mov
decb
cmp
add
inc
sub
push
mov
outsb
dec
add
jne
xlat
jp
lcall
je
inc
std
jo
cmp
jb
cmp
push
jbe
in
sbb
test
jae
cs
mov
insb
lock
inc
pop
xchg
lods
sbb
pop
push
clc
bound
push
inc
cltd
cmp
dec
dec
inc
lock
jl
lret
int3
dec
stos
xlat
xor
jae
insl
std
es
mov
es
sub
pop
push
dec
stos
mov
insb
jge
xor
je
push
jmp
jnp
subb
sbb
xlat
xchg
cmpsl
in
and
inc
clc
in
push
in
push
fistps
stos
mov
sub
cld
jae
in
outsl
xchg
push
loopne
shll
and
insb
sbb
arpl
aaa
stos
inc
repz
int3
inc
xchg
adc
inc
and
or
cmp
lret
les
bound
fldenv
imul
aaa
ja
arpl
push
lret
mov
imul
xlat
pop
xor
inc
cmp
or
mov
add
jge
jmp
test
inc
jo
ss
cmp
test
outsl
push
in
arpl
jmp
mov
popa
repnz
xchg
andl
adc
rep
lock
inc
dec
xchg
sub
test
mov
bound
mov
popl
and
inc
outsb
lret
push
mov
jb
sub
arpl
jbe
fadds
mov
leave
icebp
es
andb
mov
in
sub
push
mov
cmp
insb
jbe
push
adc
adc
jbe
and
cmp
sub
lods
pavgb
push
and
shrl
sbb
xor
jns
ja
xorl
stc
enter
push
sub
inc
mov
dec
push
xchg
data16
out
pop
rolb
int3
out
add
lret
fs
les
lds
hlt
mov
or
jb
cmp
repnz
nop
mov
imul
cltd
push
mov
out
cmp
out
mov
lock
jmp
insb
sbb
sub
mov
mov
icebp
push
push
push
or
adc
sub
popf
jb
insb
dec
mov
out
add
into
xchg
jb
fldt
cmpsb
das
outsl
je
or
xchg
and
in
aad
js
scas
mov
icebp
push
ja
in
inc
fistpl
das
push
mov
add
js
push
mov
push
daa
xchg
cmp
pop
mov
pop
jns
xor
adc
imul
inc
iret
jnp
adc
cmp
or
and
cli
adc
imul
pop
xchg
mov
sub
jno
mov
add
notl
imul
arpl
push
cs
lcall
dec
xchg
ret
cld
pop
cmp
fwait
jle
push
xchg
nop
ds
mov
out
jo
rorl
xchg
jo
and
aaa
push
aad
int
xlat
inc
orb
push
inc
mov
mov
call
out
jge
jne
or
shrl
cltd
stos
lds
js
ret
inc
insl
int
sub
xchg
cmp
jge
test
add
sbb
jo
cli
pop
mov
pop
or
test
clc
loop
jo
mov
int
daa
in
push
in
aas
inc
lcall
je
ror
clc
sub
jo
rorb
mov
movsl
sbb
jo
inc
lret
aaa
out
mov
xor
and
push
adcl
dec
icebp
add
jno
nop
je
sub
imul
fs
dec
xchg
shr
shll
jo
mov
sub
shrl
fcmovu
adc
or
jge
xchg
add
or
out
scas
cwtl
lods
mov
fcmove
push
data16
stos
fbstp
sbb
or
fwait
loope
mov
jle
push
cmpsl
xlat
jo
ljmp
jo
imul
or
cld
pop
sbb
aad
pop
sbb
in
push
movsb
negb
and
adc
pop
sbb
or
dec
push
mov
fstp
int
jo
sbb
pop
or
push
insb
inc
lods
fimull
into
jl
adc
jo
fistpll
jo
or
test
jp
shrb
imul
loopne
test
data16
jp
jae
fisttps
pop
jo
xchg
fstpt
inc
ret
sti
and
aaa
pop
mov
inc
adc
mov
mov
adc
push
jae
and
andb
jo
repz
pop
dec
xor
sub
xchg
pusha
in
dec
xchg
ljmp
aam
arpl
mov
rorb
pop
es
inc
pop
mov
ja
xchg
lods
jo
fisubs
push
lcall
sbb
cwtl
jbe
inc
mov
pop
push
gs
mov
jecxz
cmp
jo
fimuls
mov
push
movsb
or
repz
ret
jo
dec
adc
fsubl
sub
mov
shl
push
mov
shlb
and
pop
repz
jo
push
out
nop
fwait
cmp
test
adc
push
lret
jno
sbbb
pop
cltd
fbstp
sbb
jmp
jl
mov
and
dec
jnp
sbb
jg
fucom
adc
and
shlb
jo
and
jo
loopne
mov
std
mov
jle
in
movsl
mov
jg
sub
push
dec
fidivs
xchg
test
mov
lods
mov
movb
int
mov
cmpb
jmp
jo
insb
push
dec
in
pop
lea
mov
push
or
mov
inc
andb
jp
push
int
not
ljmp
pop
out
outsb
cmp
pop
popa
loopne
pop
sar
imul
mov
das
jg
cli
push
popa
ds
push
inc
psrad
jge
mov
xor
cmp
push
repnz
ret
jo
movsl
jl
pop
out
popf
nop
ljmp
mov
dec
outsb
xchg
jo
jl
icebp
lods
mov
cwtl
jo
push
and
or
call
bound
jno
bound
outsb
pop
jo
mov
loopne
mov
jo
imul
xor
js
or
fidivl
or
aad
jne
xchg
ret
jo
mov
mov
and
cmp
mov
inc
call
mov
jecxz
lock
sarl
xchg
jae
mov
and
xor
xchg
aas
roll
dec
pusha
fsts
inc
jo
outsl
xlat
bound
fildll
adc
jle
lret
jecxz
fs
in
repnz
imul
xchg
jo
sahf
xlat
gs
jbe
jae
mov
in
popa
jmp
movsb
jmp
mov
or
dec
push
aam
pop
hlt
test
mov
xor
out
sub
enter
addr16
sarb
push
jne
je
sbb
std
cli
jmp
jne
xlat
pop
dec
in
cltd
jl
sbb
sbb
push
xchg
jbe
pop
rcrb
sub
jg
xor
sbb
cmp
mov
int3
or
jbe
jo
sub
fsubp
jge
cltd
add
sub
xor
jo
int3
jg
jne
mov
out
mov
xchg
dec
orb
xor
mov
cmp
data16
push
movups
push
in
jnp
mov
xor
push
cmp
push
xor
faddl
fs
cmpsl
sub
xorl
dec
ljmp
leave
nop
shlb
lret
orb
mov
xchg
jb
popa
xor
jo
xchg
xor
bound
lock
xchg
cmp
cmp
xorl
mov
in
ss
repz
inc
sbbb
nop
cwtl
mov
sub
mov
inc
dec
out
jns
jo
enterw
imulb
mov
xor
xchg
nop
sub
stos
in
insb
push
jge
mov
mov
cmp
cwtl
fiadds
cs
mov
and
xchg
adc
aam
roll
lds
lret
push
jne
xor
xchg
jo
dec
xor
inc
mov
daa
jmp
out
jae
lock
arpl
or
push
add
jle
adc
jo
sbb
faddl
xor
mov
lock
and
jnp
xorl
cmp
push
add
mov
lock
in
cmc
js
lret
adc
and
mov
sbb
daa
jl
shll
or
push
scas
jo
jno
adcl
mov
testl
jo
jmp
inc
xor
icebp
mov
adc
xor
mov
in
jo
sbb
incb
xchg
xchg
pop
and
or
js
loop
imul
fisubrs
rorb
lock
lods
jns
add
ja
jo
test
in
sti
adc
cmp
mov
lea
jo
xor
dec
and
mov
cmpb
nopl
or
lods
mov
jo
cmp
inc
hlt
insb
std
mov
daa
mov
jo
ljmp
mov
ss
adc
inc
jo,pn
xor
cmc
out
lea
xchg
push
int3
sti
enter
mov
mov
invd
sub
rcr
add
mov
pop
pop
jo
sub
into
nop
xor
lds
push
jo
imul
or
fdivp
inc
and
cmp
fisttps
cltd
inc
pop
mov
xchg
push
test
cs
pop
push
jae
nop
stc
ds
fadd
divl
pop
syscall
adc
decb
xor
out
jo
jb
xchg
sbb
push
fs
lret
fimuls
pop
aad
cmc
adc
mov
push
pop
and
out
inc
pop
out
jecxz
movb
mov
jbe
leave
push
mov
icebp
inc
jno
and
jno
ret
dec
ret
sahf
xchg
ljmp
bound
fs
cmc
fwait
adc
test
outsb
jo
leave
jge
aam
push
loope
stos
mov
push
test
sub
clc
pusha
jle
or
xchg
cld
mov
les
mov
and
jl
xchg
add
int
test
frstor
loopne
cld
mov
jecxz
jo
ds
mov
out
and
arpl
int
xor
into
dec
shlb
jo
or
sub
cli
cld
push
sub
mov
add
fiadds
mov
test
xchg
testb
mov
or
pushf
fs
cmpsl
and
jge
jne
rclb
js
mov
lret
push
pop
das
out
jl
push
popf
sub
js
aad
imul
ret
push
popa
fdivs
and
or
inc
stos
jo
xchg
jge
jecxz
jle
jo
nop
inc
mov
jo
fs
mull
cmp
les
adc
inc
jo
xchg
add
nop
jb
jns
jmp
jb
aam
jo
and
xchg
pushf
and
mov
icebp
lods
pop
and
jmp
push
push
insb
mov
add
adcb
dec
stos
rorl
int3
pause
lahf
fbstp
sub
push
nop
xor
xchg
scas
arpl
ja
pop
insl
cs
and
lret
sub
pop
dec
adcb
or
mov
lahf
in
enter
sub
lock
les
pop
shrb
dec
out
jo
or
xchg
cmpsb
popa
push
popf
rolb
leave
out
ret
adcl
jns
push
dec
inc
mov
mov
mov
push
shrb
loope
push
add
mov
stos
cmp
dec
mov
jg
push
cmp
loop
pop
arpl
sbb
js
test
cmpsb
cmp
or
xchg
sbb
js
shlb
test
scas
mov
sti
pop
jmp
adc
adc
add
add
in
push
bound
out
pop
and
mov
nop
std
arpl
shl
mov
insl
mov
lahf
jae
adc
push
ffree
loopne
jmp
push
push
call
jno
pop
out
aam
call
data16
mov
dec
pop
and
adc
std
pop
idivb
stos
dec
and
out
mov
mov
and
push
jns
xchg
inc
nop
loopne
adc
in
cmp
aaa
call
add
adc
shld
mov
test
lret
pop
aad
addb
test
jae
scas
pop
aaa
ficomps
aaa
ret
or
jno
ficoms
dec
mov
jle
outsb
cmpsw
ja
pop
imul
or
aad
cmc
aas
test
mov
xchg
outsb
pop
pusha
jno
mov
sub
imul
push
mov
dec
scas
mov
xor
outsl
push
es
je
jns
mov
loopne
sbbb
ds
pop
cs
insl
sub
ret
notb
lock
int3
out
adc
xchg
outsl
xlat
cmp
and
push
sbb
das
out
pushw
pusha
xor
xor
cwtl
or
jne
lahf
mov
mov
dec
inc
std
mov
les
lods
sbb
lds
int3
cmpsb
insl
icebp
mov
repnz
fdivl
jbe
and
sbb
loop
inc
pop
jl
mov
js
jg
and
call
or
mov
je
mov
mov
scas
xchg
jmp
and
jno
mov
out
or
pop
xor
adc
push
roll
outsl
dec
inc
lcall
pop
pop
xchg
maskmovq
testl
daa
pop
insb
insb
jg
push
int3
xor
xor
cld
int
loope
pop
in
jae
addr16
push
inc
or
cltd
sbb
xor
data16
xchg
ja
stos
xchg
lret
aas
xor
imul
shlb
js
mov
xor
jmp
std
bound
shlb
lock
popa
jg
pop
pop
xlat
mov
fcmovnbe
dec
scas
sbb
f2xm1
cmp
sbb
sbb
pop
data16
imul
sbb
cmp
movsb
leave
sub
xchg
push
filds
jae
sbb
out
adc
mov
and
enter
aas
out
xlat
test
add
dec
jge
in
push
sub
in
mov
mov
and
fldl
mov
adc
scas
pop
rcrb
pop
sub
xor
adc
add
push
lods
ficoms
cmp
add
cltd
lret
push
int3
xchg
xchg
mov
cmp
cltd
inc
in
scas
add
or
mov
and
inc
sub
test
cs
pop
lds
cwtl
cmp
cli
lahf
imul
push
aas
push
dec
mov
mov
or
add
xchg
cmp
pop
inc
int3
pop
cs
mov
fwait
test
jae
sti
and
lea
out
nop
jmp
pop
out
and
dec
das
lcall
pop
rcrl
cltd
es
jnp
lret
mov
addr16
stos
out
nop
fucomp
jle
or
jno
pop
pop
mov
mov
add
mov
fnstcw
jae
scas
movsl
outsl
testl
movq
divl
mov
das
shrb
fiadds
or
fsts
data16
xor
sbbb
and
fmul
stos
decb
ljmp
aaa
inc
pop
pop
xchg
mov
jae
pop
xor
out
mov
addr16
inc
pop
mov
fsubp
sbb
jmp
outsl
adc
lea
dec
jae
push
gs
inc
mov
pop
ret
mov
push
loopne
dec
pop
push
jp
xorb
repz
scas
ljmp
test
lods
and
and
fsubrp
inc
scas
stc
jo
sbb
fists
jnp
push
inc
in
je
dec
cmpsb
lcall
ret
call
lods
pusha
ja
mov
ja
or
loop
hlt
shrl
mov
aam
ljmp
movsb
jo
push
mov
shll
outsb
mov
js
call
jae
subl
cmpsl
scas
pop
adc
divl
es
out
xchg
push
mov
bound
repz
cmp
fdivrl
lret
cmp
pop
sub
xacquire
jmp
xchg
movsb
push
orl
das
outsl
jo
cmc
push
cmp
jns
leave
xchg
mov
cmc
loopne
dec
push
fs
out
stos
sbb
inc
push
mov
push
leave
cvttps2pi
iret
jle
xorl
adc
filds
fimull
das
out
jae
mov
movsb
test
jge
or
cs
sbb
and
fldt
gs
lea
xchg
imul
cmp
testl
scas
fdiv
test
mov
arpl
cs
in
mov
and
push
jge
jge
nop
xchg
std
test
lods
mov
pop
pop
out
fiadds
jge
push
cmp
mov
cmpsb
cli
jo
hlt
sub
xchg
xchg
in
jae
std
sbb
pop
and
sub
hlt
xor
cld
adc
in
sbb
dec
adc
clc
inc
jns
outsl
xchg
imul
push
sbb
popa
or
cmp
push
lret
adc
popf
cld
insb
lods
push
popa
je
out
cmp
inc
ret
jbe
xchg
ret
add
and
ss
out
gs
push
out
jnp
cmpsl
data16
pop
or
cmp
out
sti
mov
or
dec
xchg
or
cmp
xchg
fmul
loop
xchg
outsb
push
std
dec
flds
and
xor
mov
outsb
add
pusha
xchg
lret
es
push
sbb
push
outsl
aad
cli
es
cmp
push
add
cwtl
outsb
shlb
jnp
pusha
roll
jns
adc
lret
inc
bound
pop
or
cmpsb
das
hlt
lret
jb
push
jae
fcmovb
push
inc
push
sub
sub
lods
and
es
arpl
cmc
mov
bound
mull
jae
push
jl
push
outsl
rorl
out
pop
andl
fs
xor
sbb
add
inc
nop
mov
int
xlat
jo
lock
jae
sbb
mov
int3
jg
xor
mov
fdivr
and
mov
aas
lret
aad
cwtl
testl
xchg
inc
sbb
leave
lods
mov
or
out
cli
lahf
pushl
jae
push
test
cmpsb
orl
ljmp
outsb
cltd
or
jns
shlb
dec
ffree
jle
cmp
jae
js
arpl
call
in
mov
fdivrl
inc
sub
loop
faddl
loopne
jmp
mov
jae
push
fcoms
scas
push
add
imul
jg
sar
enter
dec
mov
arpl
cmpsl
xchg
mov
ret
bound
in
pop
push
push
pop
addl
sub
sahf
jb
lock
addb
pop
xchg
shl
data16
pop
add
negb
std
out
jns
int3
cmpsl
cmpsb
pop
or
jae
pop
push
cwtl
xorb
addr16
std
nop
adc
cmp
rorl
aad
sbb
ret
adc
insl
pushf
xchg
dec
push
pop
fistl
push
mov
adc
sbbb
imul
pop
jnp
insl
dec
add
xchg
cltd
and
lods
lock
out
shrb
ret
pushf
and
pop
and
cmp
imul
push
adc
movsb
sarb
or
sub
call
fs
xor
ja
jmp
mov
adc
sub
push
in
in
jo
push
cmp
ss
jp
pushl
test
xchg
in
jo
pushf
xor
mov
cmp
adc
jo
mov
add
jo
pop
popa
add
in
lret
cmp
inc
jne,pn
dec
test
push
pop
sbb
xor
aaa
pop
sub
fnstenv
jb
dec
xchg
jecxz
nop
mov
pop
and
jb
inc
jo
cli
push
adc
sub
repnz
mov
pushf
and
xor
add
push
in
test
add
mul
xchg
nop
lret
roll
lods
xor
insl
cmp
lock
scas
ret
idivl
cmp
faddl
int3
aas
sbb
inc
jo
mov
ret
mov
jp
sti
sahf
rcrb
sub
push
pop
push
jg
mov
std
dec
mov
xchg
pop
mov
push
outsb
pop
add
mov
stc
xchg
rorb
or
scas
pop
jle
arpl
pusha
loope
xorb
add
popa
xor
add
jne
mov
bound
call
rolb
into
arpl
into
or
ret
aas
data16
cmp
xchg
add
outsl
ja
iret
and
cmc
cmp
sub
icebp
frstor
mov
push
adc
pop
pop
insb
inc
int3
mov
in
orl
mov
lock
loop
in
mov
xorl
daa
aad
repnz
call
sahf
xor
mov
adc
lcall
jae
aad
mov
orps
loopne
push
test
outsl
cmpsb
arpl
and
xor
imul
jnp
int3
adc
jmp
mov
call
in
pop
pop
sub
jle
std
adc
dec
push
mov
dec
adc
fldz
rolb
shll
js
lahf
sbb
repnz
cltd
or
jo
aaa
lret
arpl
std
mov
jae
fiaddl
das
push
push
loopne
sbb
mov
es
pop
sbb
xchg
imul
push
cmp
out
push
jo
mov
andl
fiaddl
sbb
xor
inc
and
dec
push
sub
adc
dec
pop
mov
mov
fucom
je
push
jp
sbb
lock
je
jo
js
stos
and
movaps
andl
push
test
inc
decb
inc
insl
fwait
inc
dec
pop
mov
xchg
scas
enter
roll
xchg
xor
fwait
adc
loopne
push
mov
es
js
add
aam
jge
adc
sbb
xorb
mov
cmp
xchg
shl
fs
jo
loop
loope
adc
and
jns
jae
jo
cmpsl
mov
ficoml
ljmp
inc
loope
sub
aam
jge,pn
or
jl
add
es
jo
mov
rcrb
out
adc
dec
dec
adc
jo
retw
sbb
cli
leave
ret
xor
repz
jmp
int3
es
shl
std
icebp
ret
xchg
dec
dec
popf
pusha
or
aas
lods
scas
adc
ss
ficomps
sub
lahf
sahf
pop
shll
cs
push
loop
sub
jo
mov
and
repz
ret
icebp
jecxz
pop
pop
push
or
decb
cmp
repz
pushf
movsl
xor
add
out
jb
cs
jne
xchg
dec
lods
ja
dec
insb
xor
inc
push
jecxz
xchg
and
adc
stos
or
inc
fdivrs
imul
dec
cmc
divl
arpl
or
lods
mov
xorl
jae
cli
pop
fisubs
repnz
mov
mov
stos
imul
xchg
jge
enter
mov
sub
jno
aas
iret
push
cmp
jo
mov
add
movb
adc
into
jo
adc
inc
loopne
les
push
xorl
mov
adc
bound
dec
sub
xchg
or
stos
inc
xor
mov
repnz
loop
das
xor
mov
stc
inc
inc
stc
sub
into
mov
fbstp
add
test
jns
inc
sbb
dec
popa
cmp
imul
inc
mov
out
push
xlat
mov
dec
jns
sbb
pop
cwtl
xor
enter
mov
cs
mov
jl
adc
xor
xchg
loope
lahf
aaa
aam
jo
add
test
jo
dec
das
mov
jo
add
xchg
sbb
sti
imul
dec
xor
add
mov
nop
jg
push
popa
loope
push
imul
inc
test
fdiv
jp
in
loop
pushf
sbbb
out
mov
push
test
outsl
xlat
mov
adc
je
inc
adc
or
and
jo
leave
xor
cwtl
or
shll
rcrl
and
jge
enter
sbbl
jle
jo
mov
mov
out
lea
and
das
add
jo
daa
clc
xlat
outsl
in
in
pop
jo
les
jo
mov
mov
push
mov
bound
add
jno
dec
imul
sub
mov
fidivrl
sbb
nop
cmp
jns
pop
add
jo
jae
adc
psubd
sbb
or
gs
ret
pop
jo
push
push
xchg
dec
jge
inc
push
daa
xorb
das
and
add
in
ror
imul
xor
jge
jo
clc
cmp
lea
addr16
and
fisttps
push
insl
dec
push
mov
shll
sub
xchg
jo
jb
sbb
and
hlt
stc
pushf
aad
mov
pop
or
decl
mov
sub
mov
sub
jmp
mov
and
inc
out
stc
jo
test
insl
sbb
mov
int
inc
and
addb
sub
lods
jo
cmp
pop
jo
add
mov
shlb
mov
ds
or
pop
shr
out
and
mov
movsb
cmpsb
cmc
sbb
pop
push
inc
xchg
ds
push
in
out
pop
stos
aam
in
cmp
inc
std
adc
jo
inc
nop
daa
lret
xor
jo
test
aas
loope
jo
rcl
nop
repnz
cmpsb
ret
or
clc
scas
cmp
movsb
xorb
in
and
lds
add
mov
push
dec
xchg
and
icebp
cmpsb
sub
push
cmpsl
push
lea
stos
pextrw
pop
into
push
fsts
cmp
cmp
jae
test
jo
sti
loop
jne
fdivrs
xchg
or
xchg
xor
push
pop
pop
push
push
sti
in
insb
xlat
mov
mov
jbe
pfsubr
lock
je
cwtl
mov
lret
dec
into
pop
xchg
sbb
call
ss
jno
movsb
xor
pop
push
lret
jg
dec
xchg
and
cmp
aad
cmpsl
rclb
mov
cmp
sbb
clc
jo
rorl
dec
mov
adc
mov
jbe
add
scas
aaa
inc
rsqrtps
mov
jbe
mov
jno
jo
rcrb
push
fsubrp
mov
mov
js
adc
fnstsw
dec
ja
add
fbstp
in
arpl
mul
cwtl
cmovp
sbb
sbb
xor
js
jno
test
adc
mov
pushf
fimuls
ret
decb
jns
add
jo
nop
lahf
leave
mov
sub
inc
and
cmp
in
pop
jo
ret
std
rorl
in
arpl
rolb
jae
xor
pusha
js
stc
repz
add
fbld
jp
push
jnp
jbe
aaa
imul
cmpsl
jo
push
std
adc
cmp
push
jmp
xor
test
pand
cmp
cmpsb
leave
les
jo
mov
mov
ret
sub
std
ja
mov
jo
movsb
push
xchg
xorb
movsl
popa
jbe
pop
mov
sub
adc
add
or
fldl
in
popa
mov
dec
lods
ss
pop
xlat
test
out
mov
gs
pop
test
out
xor
jo
xchg
sub
imul
andl
or
or
xchg
mov
pop
mov
inc
xor
mov
jo
cmp
imul
call
pop
stos
gs
jmp
cmp
lods
js
rorb
mov
pusha
xchg
jo
jb
inc
in
dec
stos
jmp
push
pop
add
jo
inc
jmp
shl
in
inc
mov
outsb
data16
or
rcrb
and
insl
dec
adc
inc
jl
hlt
out
bound
cli
and
gs
add
or
inc
loope
stos
out
test
mov
xchg
jl
testl
lea
ja
addr16
dec
adc
in
add
shlb
and
xchg
in
scas
int
rdtsc
xchg
add
add
and
stos
jg
mov
or
loop
push
mov
inc
push
mov
in
jo
or
int
scas
bnd
insb
cs
sub
enter
lea
in
test
popf
out
je
or
pop
nop
push
pop
xor
and
jne
jne
jo
insl
lcall
push
xorb
mov
jo
adc
leave
retw
xor
cld
je
daa
jo
lods
ja
inc
ss
repnz
pop
addr16
mov
cmp
int3
mov
test
mov
cmpsl
adc
pop
repz
sbb
or
or
xchg
test
jo
cmp
test
std
jae
mov
sbb
fucom
push
and
push
pop
xor
sub
mov
xchg
push
cmp
lds
adc
dec
mov
or
subl
mov
jnp
sbb
lock
loop
repnz
pop
mov
fisubl
jp
push
push
aas
outsl
pop
mov
enter
jge
push
sarl
or
sub
mov
dec
add
cmp
cmp
call
pop
and
jae
lock
xchg
test
mov
fistl
packsswb
cmp
mov
xchg
frstor
cli
jno
aaa
lcall
mov
mov
mov
ss
xchg
or
pop
aas
sahf
out
mov
and
push
lret
and
lcall
imul
dec
xchg
ljmp
int3
mov
loope
mov
adc
imul
mov
sti
test
out
or
mov
push
ficoml
dec
push
push
lret
insb
xchg
xchg
sub
inc
cmpsb
ss
clc
mov
jae
adc
inc
dec
jecxz
mov
pop
adcl
mov
out
dec
cmpsb
sahf
lret
dec
push
inc
xchg
je
sbb
sub
jmp
adc
push
jb
iret
sub
fs
jo
jmp
enter
pop
xor
pop
cwtl
mov
mov
inc
lock
sti
std
packsswb
jge
xchg
sub
ds
lock
push
mov
fwait
jno
js
mov
movsl
outsb
fucomp
xor
les
in
das
or
jle
adc
jns
test
or
fbld
aam
repz
aad
inc
cmp
xor
gs
inc
sbb
push
jns
or
and
adcb
out
push
push
mov
in
jbe
inc
xchg
mov
std
add
sahf
mov
xor
xchg
or
adc
lahf
cmpsb
out
orb
mov
cs
lds
add
mov
jae
adc
jle
adc
push
in
mov
daa
fisubl
gs
inc
mov
jns
jne
jno
stos
mov
mov
add
or
mov
shrl
xchg
mov
js
sbb
js
sub
mulps
xchg
fwait
pusha
or
inc
sub
push
dec
xor
mov
les
lods
mov
mov
jo
rol
ljmp
push
cmp
fs
add
aas
imul
push
in
pushf
cmp
dec
cmp
mov
dec
iret
or
test
cmp
insb
outsl
js
test
into
scas
ja
out
sbb
push
push
xchg
mov
int
sbb
mov
pushaw
insb
dec
arpl
icebp
cmp
fistl
mov
add
aam
push
lret
out
sbbl
xchg
sub
mov
stos
sbb
or
xchg
loopne
gs
adc
xorb
push
inc
xor
test
cltd
fisttpl
out
mov
sub
jbe
mov
pop
push
enter
mov
mov
and
loope
movsb
inc
ret
das
add
or
stos
or
popa
sbb
aaa
scas
or
sahf
push
insl
sub
pop
repnz
insb
jl
inc
add
es
push
loopne
sbb
cmp
pop
pop
or
jmp
addl
daa
std
adc
inc
pop
in
mov
bound
mov
out
fmull
andb
lret
sbb
mov
push
mov
pop
daa
add
cmpsl
int
inc
imul
popa
not
inc
shll
and
cmp
xlat
pop
out
stc
addl
pop
push
pop
xlat
scas
xor
arpl
jae
sbb
scas
cmp
adc
mov
push
outsb
fs
shl
xor
rcrl
push
inc
jmp
fwait
push
int3
les
lods
call
in
push
cs
aaa
pop
or
daa
jb,pn
add
push
mov
outsb
aaa
mov
add
shll
sub
stos
jae
je
int
inc
das
xchg
rclb
js
sbb
mov
inc
xchg
je
jo
mov
call
xlat
out
outsb
or
and
sbb
cld
setne
cltd
in
into
bound
pcmpgtb
cmpsl
xor
popf
lods
or
cltd
bound
lea
push
ss
inc
ja
add
jo
or
fisubrl
stos
jp
dec
repnz
hlt
lahf
nop
adc
cmp
pop
addr16
dec
insl
cld
dec
insb
iret
ja
fcmovb
sbb
out
into
cmp
or
mov
aad
pop
mov
loope
or
jo
add
mov
pop
jecxz
xor
or
push
mov
rorb
sahf
push
add
out
inc
mov
fwait
push
dec
jnp
ss
stos
js
stos
jo
fistpl
call
add
jmp
xlat
jo
sbb
pop
mov
mov
sbb
or
push
and
decb
push
xorl
adc
jo
iret
mov
inc
outsb
lcall
push
sbb
mov
inc
jp
lods
push
xor
sbb
mov
jl
xor
imul
pop
adc
cwtl
mov
divl
xor
pop
mov
mov
mov
rcr
jo
fistpl
cmp
lds
lret
hlt
xor
cmc
or
negl
repz
xchg
cmp
jo
sub
outsl
inc
pop
xchg
sub
sahf
addb
mov
ds
dec
jo
pop
test
out
jmp
inc
mulb
jo
jg
adc
xchg
loopne
mov
jp
std
cmp
dec
cmc
inc
fistpl
jno
shrb
adc
xor
outsb
jo
aam
jge
or
stos
or
xor
mov
jo
shr
fimull
andb
xchg
sbb
aas
dec
jo
push
jns
inc
es
mov
jmp
jge
jo
and
int3
icebp
das
push
pushl
stc
mov
nop
sub
out
jo
dec
add
int
xor
pop
pop
cmp
fdivrl
mov
inc
stos
pop
sbb
inc
fwait
ss
adc
pop
and
mov
sub
cwtl
jae
shll
inc
sbb
mov
ret
xchg
jo
int
imul
or
in
pusha
jg
and
inc
das
jo
in
pop
jnp
icebp
enter
jbe
sub
cmp
divl
sbbb
stc
das
xor
int
in
and
dec
sbb
jl
cmp
jo
xchg
jne
out
push
in
jo
inc
jp
cmp
xorl
jmp
cmpsb
mov
xor
adc
pop
insl
jo
mov
psrlw
mov
addr16
imul
ror
bnd
sub
movsl
pop
nop
jo
out
jg
sbb
adc
gs
loopne
test
jae
test
jno
xor
and
nop
push
cltd
into
push
dec
adcl
xchg
lea
sbb
adcb
push
mov
jns
idivl
sahf
pop
cmpsb
jb
inc
sub
pop
das
push
fsubs
subb
jb
daa
movsl
jo
loope
dec
insb
mov
xor
cs
xchg
xor
or
dec
pop
lock
dec
or
add
jo
fiadds
mov
negb
leave
jg
cmp
out
out
jo
imul
int3
getsec
mov
outsl
dec
insb
cmc
add
jno
aam
inc
push
xlat
jo
out
xchg
movsb
cmpsl
add
xchg
pop
pushf
sbb
mov
dec
ss
add
hlt
outsb
aas
imul
out
adc
int3
dec
cmp
loop
dec
xlat
ja
pop
mov
or
fcmovbe
jo
ss
or
mov
pop
arpl
test
jo
andb
mov
jno
loopne,pn
xchg
dec
addb
sti
ret
pop
testb
jo
scas
dec
out
dec
pushf
mov
ljmp
test
stos
mov
push
add
jp
xor
sarb
ret
and
cli
jmp
cmc
dec
mov
sub
sub
nop
test
data16
pusha
jo
rcl
cltd
sbb
adc
jo
cli
push
in
adc
mov
pop
jae
fistpll
jno
fcompl
rolb
xor
in
pop
jo
push
popa
pop
mov
call
imul
aaa
jno
jo
sbb
pushf
jo
repz
adc
xchg
jo
lds
xchg
adc
ret
or
jo
int3
push
sub
jle
rcrl
lods
cmp
call
data16
inc
rcrb
jo
adc
and
add
jo
shl
cld
cmpsb
xchg
aas
pop
jo
fisttps
scas
fiadds
jo
vmread
ja
mov
mov
jp
pop
sub
mov
fnstcw
stc
sahf
add
pop
in
call
out
jo
cmc
inc
pop
dec
inc
mov
mov
mov
outsb
sbb
jbe
loopne
xor
rdmsr
jp
bound
mov
add
xchg
mov
push
in
shll
fnstcw
sbb
pushf
cltd
popl
outsl
sbb
int3
jo
inc
out
clc
or
aas
mov
add
adc
pop
mov
jle
or
in
in
pop
cmc
add
jo
jle
movsb
les
sub
pop
cmpb
jno
add
or
movsb
insb
cmpsb
inc
cmc
jne
jl
ret
jo
dec
push
jns
xchg
mov
ret
lret
mov
cld
add
sahf
push
inc
mov
idivb
pop
mov
loopne
bound
jo
xchg
or
inc
cs
test
add
push
jmp
jg
inc
pop
call
sbbl
jnp
clc
add
pop
jo
mov
orl
js
fisttpll
jg
mov
cli
add
sbb
inc
mov
imulb
jo
mov
stos
aam
cmp
sub
lods
dec
movsl
ja
jo
cmp
jmp
lret
mov
jo
mov
test
jo
mov
add
out
jo
sahf
sub
nop
jge
iret
sub
jg
push
inc
cmp
idiv
jo
jle
inc
filds
shlb
jo,pt
pop
jb
stos
cli
jno
or
add
repnz
xor
int
jge
cmc
sbb
jno
xchg
orl
outsb
out
negl
mov
sub
jo
xchg
mov
and
std
add
add
popa
jge
jo
loop
mov
xor
mov
dec
adc
aad
test
mov
jne
cmp
mov
mov
scas
filds
in
ret
xor
mov
js
xchg
addl
sub
mov
or
push
cmpsl
scas
add
sbb
jae
xchg
lds
pop
ja
gs
pop
lods
ja
sub
jbe
cmp
sub
sub
adc
xchg
lods
and
and
xor
clc
add
leave
dec
js
imul
scas
js
enter
les
adc
sahf
rsm
add
push
push
adc
fnsave
jo
mov
fidivl
sub
mul
jo
sbbl
mov
and
outsl
cmp
lods
nop
xor
adc
adc
dec
mov
stos
jmp
faddl
leave
aaa
jge
pop
jl
enter
sysexit
xor
jbe
jp
mov
lret
jns
cmp
sub
jo
jge
adc
addb
sarl
add
arpl
bound
nop
push
lcall
clc
nop
outsl
lahf
imul
mov
jge
push
divl
push
insb
mov
int3
cmc
mov
and
sbb
push
cli
and
push
push
adc
out
gs
mov
data16
ror
aad
cmpsb
int3
ja
mov
add
ljmp
cmp
adc
jle
pop
cmpb
and
aas
das
jbe
sbb
xlat
xor
je
lret
shlb
xor
fs
into
cmp
xchg
es
dec
xchg
xchg
lea
or
pop
out
fnstcw
sub
pop
mov
stos
repz
insl
jp
push
or
fdivrs
jle
or
xchg
lds
jae
add
shl
xchg
or
sbb
inc
sub
iret
mov
adc
fndisi(8087
or
out
or
sbb
and
leave
int
push
scas
sub
and
enter
ljmp
sub
push
loopne
stos
repz
cmc
mov
jae
and
mov
movsb
repz
fs
push
test
mov
push
mov
and
adc
xor
lea
insl
xor
data16
fdivl
xchg
sbb
seta
cmpsl
and
mov
inc
push
add
icebp
cltd
data16
int3
rcl
inc
or
test
pop
fldt
cs
pop
and
push
nop
or
stos
imul
bnd
scas
push
mov
out
sub
in
jnp
mov
xlat
jb
inc
fs
ficomps
cwtl
loope
jg
mov
stc
sub
and
pop
cmp
sbb
arpl
inc
lret
int3
or
test
sbb
idivb
push
mov
arpl
xchg
inc
out
xchg
in
scas
and
icebp
fsubl
jge
inc
mov
std
jecxz
fs
fstps
add
out
inc
sbb
in
lret
out
movsl
repnz
dec
sub
add
mov
mov
xchg
movsl
mov
jb
imul
js
imull
xchg
xor
mov
cmc
sbb
dec
fiadds
hlt
int
jno
push
and
push
sti
cmpsb
xchg
inc
repz
fcompl
out
clc
fcompl
push
sbb
adc
push
mov
cmpsl
sub
fldt
push
mov
sub
in
cmp
pop
js
push
pop
in
xor
shl
leave
push
dec
pop
imul
faddl
dec
mov
mov
jbe
fdivrl
ret
and
inc
sbb
jae
pop
push
jno
int3
mov
push
mov
adc
dec
cmp
shrl
iret
dec
int
jae
pop
xchg
or
out
xlat
sbb
mov
shlb
xchg
test
clc
xorl
enter
ret
push
push
test
inc
addb
cmp
jb
sbbl
add
mov
push
sbb
lock
mov
jl
inc
fsubp
loopne
sub
mov
pop
jns
stos
insb
std
inc
fisubs
sub
adc
ljmp
cs
or
test
cltd
pop
pop
mov
cmpsb
shl
xor
hlt
std
inc
jle
fiaddl
imul
int3
jbe
inc
lds
lock
push
cltd
dec
sarb
pop
or
test
add
fidivrs
push
dec
rcpps
aad
xor
addr16
out
shll
andb
int3
in
sub
sbb
test
sbb
lcall
outsb
bnd
lock
xor
xor
jle
cmp
sub
sarb
ljmp
arpl
loope
xor
hlt
jg
arpl
lods
fidivs
push
mov
fcoml
mov
push
inc
jae
xor
call
call
pop
xchg
aad
data16
xchg
hlt
out
xchg
insb
test
dec
insb
ret
repz
push
sub
jmp
scas
pop
sub
or
jge
outsl
clc
es
pusha
inc
add
mov
mov
sbb
pusha
imul
mov
inc
in
repnz
out
pop
sbb
mov
and
xor
out
mov
pop
mov
shr
insb
call
jo
into
sub
cmpsb
inc
push
jbe
jae
repnz
jmp
int
scas
push
clc
loope
fwait
mov
out
push
mov
test
fucomip
lds
cltd
out
xor
cmpsl
call
and
dec
dec
stc
in
iret
shll
icebp
inc
xchg
cmp
lahf
icebp
andl
cmp
lea
cmp
adcb
mov
inc
call
lods
mov
lods
mov
pop
out
mov
filds
clc
mov
das
leave
subb
fisttpll
sbb
cltd
push
fldcw
insl
imul
jo
pop
sub
sahf
addr16
xchg
stos
cmp
push
pop
je
fs
cld
xchg
jp
das
int
fsubs
loopne
mov
adc
out
and
inc
pop
dec
imul
push
stc
iret
sbb
mov
lods
dec
jl
mov
cmp
out
mov
faddl
rclb
movsb
xchg
cmp
pop
stos
push
mov
int
das
aas
orl
mov
dec
dec
jne
pop
fistl
popf
jmpw
xchg
cmp
loopne
xor
jge
sbb
pushf
sbb
xchg
mov
out
jbe
scas
sbb
pop
inc
jl
mov
inc
test
push
fstl
sub
sbb
lea
ljmp
adc
mov
movsb
es
pusha
pop
jae
ss
or
dec
mov
int3
out
out
xor
clc
popf
inc
pop
std
enter
iret
fs
push
push
in
inc
inc
loope
lret
xor
push
mov
pavgw
das
fwait
mov
popa
xchg
lods
and
loop
push
push
cmc
inc
mov
cld
xor
je
jae
mov
cmp
mov
ret
dec
lock
jb
fisubs
jp
rorl
lret
xlat
and
outsb
ffreep
in
jno
pop
out
add
test
add
sar
insl
jae
jecxz
pop
cltd
add
mov
sbb
inc
mov
and
inc
out
rcrb
sbb
pop
mov
daa
add
sbb
aad
xchg
scas
push
cmpsl
shrb
mov
daa
lahf
mov
fwait
adc
push
lahf
and
jl
incb
aad
mov
cmc
shlb
stos
xchg
jle
xchg
call
leave
stc
sbb
sbb
xchg
js
scas
stos
mov
fisubl
pusha
push
xchg
outsb
mov
sarb
insb
outsb
mov
inc
cld
sbb
enter
ror
dec
inc
push
cwtl
jae
mov
sarb
sbb
inc
loop
sahf
mov
aad
dec
clc
iret
and
adc
rol
and
ljmp
jo
out
ret
xchg
arpl
mov
adc
bndldx
pop
mov
or
addr16
push
mov
push
movsl
sahf
cmp
outsl
fs
xorb
dec
mov
scas
inc
push
pusha
sbb
mov
add
lahf
cmpb
ret
fistpl
mov
xor
mov
dec
pop
pusha
mov
mov
sbb
lea
ja
push
xchg
xor
push
stos
add
outsl
popl
inc
lock
ja
arpl
xlat
jecxz
cmp
xor
sub
scas
in
inc
mov
fs
sub
lock
nop
lods
adc
adc
jb
push
or
aad
mov
or
xchg
sbb
shlb
scas
mov
add
into
adc
push
jae
xor
xor
and
outsl
fwait
inc
fcompl
cmp
push
mov
loop
popf
outsb
jae
es
repnz
jp
arpl
dec
lret
addb
jns
or
push
nop
loope
fstpl
dec
test
xchg
test
loopne
repnz
aam
lock
xor
and
sti
or
dec
movsl
std
scas
out
jmp
sbb
loope
xchg
pusha
adc
out
xchg
push
jnp
mov
test
xor
lods
mov
fldz
lret
test
cmc
arpl
mov
cli
scas
mov
xchg
sarb
jo
cmp
mov
packsswb
ret
pusha
lea
xor
mov
in
and
loop
cmp
jg
bnd
lock
push
cmp
sub
push
cs
cwtl
sub
dec
aaa
movsl
js
int3
mov
mov
push
arpl
and
sbb
jge
push
lock
sub
push
gs
or
dec
lret
mov
test
arpl
sub
mov
pop
lods
mov
push
pop
adc
insb
sub
fs
call
xchg
fs
mov
push
div
jae
ss
paddusw
dec
addr16
arpl
test
mov
ja
outsl
fsubs
daa
or
xchg
ficompl
int3
push
inc
stos
shlb
lcall
adc
cmpsb
xchg
or
dec
mov
dec
mov
movsl
mov
idiv
push
push
push
cmp
rolb
ret
test
jle
mov
jbe
addr16
or
popf
adc
cmpsl
insl
cmp
cmp
psubusb
jge
ds
sbb
lahf
out
sub
cmp
cltd
rorb
cmp
dec
push
sahf
cs
sub
hlt
aas
jae
xlat
out
jp
sbb
clc
sti
push
rolb
lods
xchg
call
sbb
imul
mov
mov
cmpsl
xor
cmpsb
xor
sub
in
js
in
sbb
mov
cmp
add
popf
jne
mov
jl
jnp
cmp
cs
out
xchg
inc
pusha
test
adcb
je
sti
repz
push
push
ljmp
aad
jmp
les
cltd
sbb
ds
jae
jg
pop
jae
cmp
loope
mov
adc
imul
out
xchg
testb
and
xchg
ljmp
push
inc
das
lock
insl
movsb
inc
and
enter
mov
dec
push
jp
in
insl
aas
call
push
jo
pusha
sbb
out
add
jg
arpl
fldcw
mov
js
js
sarb
mov
sub
stc
imul
jge
and
sub
mov
inc
or
xchg
xor
test
and
stc
ret
xor
push
lds
outsl
aad
mov
in
popf
dec
out
imul
xchg
xor
xchg
mov
cs
gs
cli
and
xchg
test
lock
mov
stos
scas
enter
mov
mov
cmp
mov
in
les
in
cmc
mov
fs
test
cmp
cwtl
mov
xchg
insb
xchg
std
push
pop
lds
stos
mov
imul
rolb
lcall
pop
out
jno
imul
or
insb
pushf
lea
rorl
jmp
out
pop
push
mov
mov
mov
jle
arpl
adc
add
or
xor
adc
popa
mov
jle
mov
jo
ss
push
jns
cmpsl
enter
xchg
iret
push
addb
jg
push
pop
push
ds
adc
add
dec
adc
aam
inc
mov
lret
inc
xor
pinsrw
in
ds
cmpsl
push
mov
out
nop
fnstsw
fcmovb
in
lea
ret
jp
mov
sub
test
jge
cmp
mov
lahf
repz
jl
call
sahf
movsl
sub
sbb
mov
shrl
hlt
orl
sahf
dec
int
lock
sub
insb
es
adc
fsubrs
cmp
scas
jg
jg
jns
shrb
sub
fs
add
pop
sarb
adc
mov
sbb
inc
or
push
xor
mov
hlt
inc
cltd
inc
leave
add
pop
and
sub
adc
paddsw
mov
loope
add
int3
into
inc
fs
cmp
cmpsl
mov
sbb
dec
cmp
data16
xor
daa
push
test
aam
dec
aaa
into
movsl
jno
or
or
je
xchg
shlb
mov
mov
lock
and
fcoms
lahf
adc
std
shll
nop
enter
orl
jno
fisubl
ljmp
dec
adc
lret
jae
es
popa
add
jne
sbb
dec
out
scas
fcom
insl
or
lret
out
shlb
fwait
pop
pusha
cwtl
ja
sahf
sahf
mov
mov
ds
les
pop
push
outsl
stos
jno
cmp
jae
loope,pn
mov
jp
push
lahf
fstpt
rorb
sub
test
jle
mov
std
mov
lret
gs
jno
jo
mov
sarl
add
test
xor
jo
int
mov
lock
scas
sbb
cmc
insb
adc
call
shll
es
in
mov
out
jo
cmc
jmp
jo
sbb
in
jo
dec
inc
sub
nop
mov
or
daa
cmp
and
sub
fcmovu
push
aas
fdivs
mov
out
lea
push
repz
in
aas
or
pop
dec
push
test
sti
loopne
cmpsb
mov
out
push
pop
cmp
mov
cmpsl
jle
jp
inc
push
xor
xchg
jae
push
mov
hlt
xor
fstl
in
rolb
call
add
jo
sbb
pusha
push
jns
mov
rorb
aam
movsl
shl
scas
sub
imul
jle
popf
add
sub
cmp
sahf
jecxz
rcrl
push
sbb
nop
arpl
or
sub
xor
mov
sbb
lds
cld
fldenv
pop
rcrb
jle
lock
cmp
pusha
arpl
int3
pop
arpl
fstps
jl
andl
cwtl
aas
push
nop
mov
inc
fs
push
out
iret
xor
cmp
cwtl
mov
movsl
cmpsl
out
cli
or
das
lea
in
mov
shlb
xor
outsb
outsb
inc
or
xor
int
call
mov
ja
out
xor
ficomps
aad
call
pop
lcall
inc
js
repz
out
mov
mov
mov
sar
lcall
and
mov
pusha
popf
cmpsb
mov
push
mov
pop
arpl
shll
sub
repz
movsl
ljmp
sbb
jbe
fsts
dec
jae
hlt
loopne
pop
in
mov
push
inc
xor
or
xor
in
cld
cmp
roll
push
adc
ljmp
sub
adc
xchg
push
jne
sbb
popf
jl
lret
add
xchg
mov
sub
mov
pop
mov
sbb
nop
push
and
mov
cmpsb
xor
push
repz
std
push
arpl
push
adc
add
xor
jno
cld
jmp
jbe
imul
cld
jno
adc
nop
sub
pop
sti
je
fldt
int
mov
pusha
add
xchg
gs
push
mov
or
pop
and
lock
hlt
shrb
sahf
xor
inc
mov
jmp
addl
inc
mov
push
int
imul
cmp
xchg
add
arpl
jno
rcrb
dec
inc
rorb
xchg
fcompl
es
fistps
or
jg
mov
mov
mov
insb
sti
loop
int
shrb
imul
push
jmp
or
inc
and
fcomi
mov
lock
dec
imul
push
and
pushf
fs
push
cmp
in
sub
sbbl
movsb
jmp
and
filds
mov
pop
cwtl
int
cmpl
mov
push
test
sbb
fst
insb
bound
push
push
and
stos
add
fistps
and
lret
dec
andb
movsb
sub
cmp
test
or
fiadds
out
jmp
mov
out
icebp
or
pop
cmpsl
inc
insb
inc
push
mov
xor
pop
test
jbe
stc
jg
xor
add
pop
andb
je
fstl
lock
lock
pop
mov
jnp
int
fstl
dec
push
add
lods
dec
test
in
fs
mov
sub
dec
mov
jl
jge
cmp
pop
popa
sub
jo
mov
dec
sar
jo
mov
mov
adcb
imul
insb
pop
push
pushf
lock
xchg
mov
in
jge
repnz
insl
xchg
jae
xor
bound
mov
and
xchg
fdivl
mov
cvtps2pd
dec
jmp
dec
and
jecxz
stc
and
dec
sbb
cmp
mov
sbb
jae
test
outsl
fnsave
or
push
inc
arpl
shlb
jo
fbld
das
cmp
dec
dec
popf
push
lods
cmp
imul
shrb
movsb
push
sbb
pop
test
xchg
pop
das
pop
in
rorl
push
adc
pusha
jle
mov
imul
fs
xchg
and
lea
mov
hlt
add
cmp
sub
subl
sub
jl
cmp
scas
jge
dec
in
stos
mov
in
pop
pop
mov
clc
dec
int3
std
add
loopne
mov
nop
pop
and
int
sti
pop
push
outsl
mov
cmp
push
jno
insl
scas
insb
lret
test
jo
fdivs
mov
int3
stos
adc
jo
mov
dec
pushf
inc
dec
or
incb
and
pop
jge
push
mov
sub
fbld
lds
aam
adc
call
sub
lret
push
cwtl
cs
push
or
mov
and
fldt
adc
jno
jo
add
into
cs
es
loop
cmpsb
or
mov
jo
rcrb
push
push
sub
pop
push
and
jo
stos
pushf
xor
inc
lahf
jo
or
xchg
add
lods
fs
cmp
jo
sub
je
jmp
shlb
incl
sbb
pop
adcb
jl
daa
repnz
pop
sbb
ret
push
andb
fimull
mov
or
js
js
fisubrs
insb
shll
mov
loope
jo
iret
mov
pop
rorb
jl
loopne
mov
cs
jb
jo
ljmp
movhps
mov
bnd
mov
sbb
insb
das
jo
push
sub
jg
push
cmpsl
jge
jb
pop
xchg
loope
jae
mov
adc
mov
xorb
add
movsl
inc
mov
push
cltd
jo
mov
mov
inc
jns
dec
movsl
cltd
and
movsb
push
push
mov
inc
xor
aam
repz
lods
sbb
pop
iret
push
sbb
in
dec
add
pop
fnsave
addb
jo
lods
mov
mov
scas
pop
lock
leave
es
add
arpl
lret
das
jo
test
stos
mov
out
insb
xchg
test
enter
paddusw
inc
mov
shlb
inc
insb
xchg
shll
jne
addr16
sbb
rclb
psrlq
sub
jg
dec
seto
pop
outsb
or
xor
rol
mov
sarb
jae
jo
imul
dec
mulps
add
jnp
mov
jo
test
mull
mov
pop
jb
jo
sbb
shld
pusha
mov
out
hlt
das
add
ja
fnop
je
rcl
add
mov
xor
pop
aas
sub
and
aaa
xor
jo
repz
sti
add
in
ss
mov
mov
mov
pop
push
aaa
sahf
imul
dec
push
xchg
cmp
cmp
dec
aam
pop
sub
div
xchg
sbb
and
inc
loopne
test
es
cmp
or
orb
ljmp
js
cmpsb
mov
cmp
push
xchg
fwait
outsb
loop
cmp
adc
jo
and
jo
xchg
push
pop
cmp
add
jo
pop
lods
ljmp
xchg
cs
xchg
mov
test
jo
ss
pop
rcrb
dec
aas
xchg
sub
push
cmpsl
mov
jns
and
hlt
ret
inc
jo
loope
mov
push
jae
call
cmp
bound
test
ret
adc
jmp
cmc
sub
pop
mov
iret
sub
push
dec
jo
dec
loop
xchg
int3
mov
cs
adc
inc
testl
mov
or
orb
nop
jo
pop
add
jo
pop
mov
sbb
jne
jo
enter
shll
rolb
sub
or
js
jno
add
and
and
fldt
dec
cwtl
les
xchg
mov
test
sub
add
fs
push
add
outsl
loop
cmpsl
jne
dec
pop
test
loop
sub
adc
mov
out
pop
and
cs
and
mov
mov
test
push
or
movsb
in
fwait
int3
cmp
sahf
lret
jo
mov
mov
cli
and
inc
mov
jbe
aas
mov
movsb
jo
js
mov
inc
movsl
jo
mov
pop
jl
orb
insl
push
cmp
fistpll
dec
xchg
aad
addr16
jo
xchg
xchg
cmc
fwait
pop
cwtl
movsl
loop
push
sbb
orb
cmp
push
decl
xor
jo
ss
pop
dec
xlat
setl
push
cmpsb
fidivrl
sub
ret
jmp
lods
clc
notb
push
push
jl
in
fiaddl
or
cmp
hlt
repz
jo
loope
push
ds
pmulhw
sbb
sbb
mov
mov
pop
xstore-rng
cmpsl
add
xchg
js
ds
shll
mov
jl
popa
div
cltd
xor
pushf
xchg
shl
jo
int
inc
mov
pop
xlat
sub
repz
xor
push
mov
jmp
and
push
mov
test
imul
or
enter
cwtl
add
fwait
cwtl
jp
cmp
inc
push
xorb
inc
and
sub
out
jmp
loope
cmc
ljmp
jo
and
jo
mov
icebp
xchg
jo
test
fwait
clc
cld
loop
mov
or
adc
dec
fs
cli
je
push
sub
sti
jo
adc
xchg
push
mul
or
icebp
xadd
pop
and
leave
fstpl
fistps
mov
jmp
sbb
aad
push
lcall
push
pop
add
xor
pop
push
jo
mov
filds
lcall
mov
imul
es
sbb
lods
cli
add
in
xor
cmp
or
test
call
into
push
adc
xchg
cwtl
mov
nop
xchg
xor
cmp
xor
xchg
mov
jp
jo
js
popf
mov
xor
paddb
scas
xchg
inc
ret
sbb
cmp
jnp
jo
mov
shlb
cmp
mov
jno
mov
movaps
sbb
and
aam
pop
jge
push
dec
xor
js
xchg
mov
pop
push
mov
ss
jno
xchg
adc
jne
cmp
outsb
orb
add
cmp
mov
jecxz
lds
add
cltd
pop
push
je
out
ret
mov
imul
mov
jle
mov
fistl
cs
add
jl
stc
jo
add
adc
cmp
js
stos
and
jno
iret
or
test
repz
push
pop
dec
inc
sbb
mov
lods
std
cli
push
subl
add
rolb
imul
ljmp
fsub
jo
daa
pusha
shr
lea
sbb
imull
jo
bsf
sti
xor
pushl
test
rcll
xor
rcrl
testb
jo
mov
lahf
push
fcmovnu
out
mov
pop
je
test
sahf
inc
icebp
lock
stc
pop
and
jo
push
ds
sar
sub
idivl
jo
xor
xor
xor
add
mov
enter
jnp
pop
in
push
mov
dec
imul
jo
jbe
aam
js
cmc
jo
hlt
or
xchg
stc
arpl
adc
dec
push
push
mov
pop
ja
ret
or
nop
das
fimuls
std
jnp
jo
ret
push
mov
or
or
test
inc
pop
jns
scas
jp
xor
movsb
inc
js
pop
push
jae
jge
jnp
int3
inc
call
in
fcmovb
stc
pusha
pop
jo
mov
mov
mov
mov
inc
add
jae
fldenv
insl
mov
inc
sbbb
dec
jg
sub
dec
fs
xchg
cld
nop
pushl
iret
ja
pusha
jl
fidivl
gs
shlb
push
jecxz
fldl
out
les
mov
shll
push
sahf
shl
sub
ss
and
mov
out
adc
push
fistpll
xchg
insb
xchg
sbb
mov
adc
lea
sbb
mov
push
inc
divl
push
or
cld
jns
lret
mov
xchg
and
inc
add
sbb
lret
cmp
mov
push
ret
data16
int3
imul
sbb
fcoms
add
scas
mov
lds
icebp
push
jl
std
mov
pusha
adc
or
cmp
lock
mov
lcall
aas
std
jge
test
adc
mov
add
repnz
inc
insl
sbb
lret
andb
mov
jp
dec
iret
loope
dec
in
fbld
loop
out
sbb
add
inc
in
repz
enter
scas
loop
not
cmp
hlt
jb
mov
jle
jmp
and
mov
dec
popa
ret
xor
popf
or
xchg
push
xchg
jb
jle
push
repnz
clc
pop
out
pop
lods
out
sub
add
jle
inc
sbb
dec
and
jae
adc
rclb
mov
std
pop
insl
xor
sub
inc
jle
jo
arpl
rolb
sbb
imul
mov
dec
jl
jge
fidivl
xchg
xchg
mov
loope
xchg
movsb
sub
sar
sbb
outsb
add
jns
fists
mov
xor
sbb
dec
jg
std
cs
cmp
pop
push
mov
mov
lods
mov
pusha
mov
mov
movsb
xor
adc
testb
jg
jle
mov
int3
dec
inc
lret
inc
mov
aas
pop
and
xorb
leave
sahf
lods
test
mov
in
push
inc
in
fsts
adc
mov
sub
xrelease
jno
enter
xchg
cmp
lmsw
je
jmp
sub
xor
out
xorl
push
lgs
jno
push
aad
pop
push
rcrb
xor
adc
mov
push
arpl
test
add
jae
add
pop
pop
es
inc
push
leave
hlt
fidivl
jbe
jne
sbb
adcb
jg
loop
push
pusha
and
repnz
int
cmpl
aas
jecxz
jmp
jo
ret
jle
mov
mov
dec
jo
xor
or
lods
sbb
mov
in
jo,pt
mov
fists
jo
mov
loopne
js
jle
xor
lahf
push
dec
fwait
imul
sti
push
popa
mov
adc
sub
js
test
icebp
jo
jmp
jae
test
or
repnz
pusha
shrb
cmp
and
pusha
or
ficoml
sbb
outsl
and
mov
mov
jns
inc
ret
nop
je
push
nop
scas
imul
arpl
mov
sub
enter
insb
xrelease
jg
mov
popf
xorb
ficoms
nop
dec
stos
push
fnstsw
loopne
fists
dec
ljmp
pop
ljmp
mov
ret
mov
dec
add
mov
dec
or
movsb
int3
dec
pusha
sbb
dec
insb
sub
sbb
push
in
enter
xchg
call
std
cltd
or
pop
add
ds
jb
sbb
fstps
testb
or
xchg
icebp
out
push
cmpsl
lcall
jae
fcoms
mov
stos
xor
hlt
sub
mov
push
mov
jmp
xchg
xorps
inc
inc
lret
int
stos
ss
cmp
push
or
sub
pop
xor
mov
in
scas
and
loop
xchg
sub
mov
sbbb
dec
aaa
and
pop
push
mov
pop
mov
fcompl
fisttps
movsb
pop
adc
sti
adc
jae
aad
sbb
movsl
xchg
out
jg
stc
stos
aas
add
cmp
jl
xchg
push
inc
idivl
int3
sub
xor
inc
dec
lahf
mov
mov
and
cmp
xchg
sbb
movsb
sub
iret
dec
push
sub
mov
dec
and
dec
jg
fbstp
loope
js
push
lahf
sbb
mov
push
fs
movsb
mov
mov
incb
mov
out
rolb
push
hlt
add
addr16
fs
add
add
pop
fnstenv
int
or
scas
pop
pop
gs
dec
mov
pusha
mov
cmp
dec
scas
ds
out
shll
sbb
push
xor
bound
mov
mov
cmp
jae
shlb
les
cmp
cmp
jp
mov
dec
mov
xchg
dec
or
roll
jns
and
xchg
sbb
js
xchg
jb
adc
arpl
aas
js
xchg
aad
cmc
jle
xchg
test
loopne
and
test
jecxz
sbb
fs
sbb
mov
pop
fbstp
adc
shlb
sti
sbb
int3
cmp
jbe
gs
cmp
cs
and
in
shlb
enter
addr16
shrl
sbb
push
hlt
sbb
jns
sbb
hlt
xor
clc
pop
jo
pop
sub
push
cmpsl
lcall
sub
sbb
hlt
rorl
imul
sarb
shll
fnstenv
cli
push
inc
push
fnstsw
jns
ljmp
out
sbb
push
lret
sub
or
mov
cmpsl
shrb
lea
out
xor
outsl
fcom
jle
pushl
adc
out
inc
push
dec
lcall
push
neg
push
and
cmp
pop
mov
sub
dec
ret
dec
fnsave
fbld
adc
cmc
mov
ret
xchg
insb
test
or
sar
sbb
addr16
sahf
mov
xor
pop
pop
arpl
jae
mov
and
iret
mov
scas
push
xor
dec
fildl
fstps
fwait
loopne
push
in
dec
aam
leave
pop
in
testl
push
je
push
insl
push
push
inc
movsb
jae
ret
int3
aam
mov
std
cld
inc
fidivs
arpl
xchg
or
xchg
stos
pop
cmc
popa
mov
or
or
push
cmpsb
mov
out
push
hlt
push
mov
movq
push
push
jle
cmp
popf
es
or
mov
jo
int3
cmpsl
mov
push
adc
arpl
push
hlt
pusha
sbb
sbbl
jecxz
aam
push
mov
or
add
jo
adc
ljmp
fisubrl
enterw
jo
push
lods
fsqrt
lahf
mov
decb
popa
sbb
cmpl
adc
outsl
out
xchg
neg
nop
stc
add
sub
mov
inc
fnstcw
nop
sbb
add
add
jnp
mov
jo
sub
jnp
ficoms
sbb
mov
jo
std
mov
mov
and
loope
jo
adc
xor
sbb
divl
icebp
outsl
das
addr16
pop
pusha
je
and
inc
push
jge
dec
fsincos
cli
mov
jbe
xor
sub
sub
sub
clc
out
add
sub
dec
xchg
cmp
mov
mov
lock
mov
insb
mov
in
pop
sub
push
push
mov
andl
ret
jnp
fldenv
or
xchg
xchg
inc
lods
in
dec
mov
add
jno
out
push
test
add
data16
enter
pushf
sbb
lock
push
jae
xor
lock
lea
push
shrb
adcb
pop
dec
jns
jno
test
notb
popf
cmp
push
int
sub
jae
pop
rorl
insb
rorb
js
into
out
or
mov
bnd
adc
test
sub
or
clc
mov
js
cltd
xchg
js
xchg
push
dec
inc
lret
xor
inc
cmp
cmpsb
jg
dec
xorb
push
pusha
loop
mov
jp
xchg
int3
das
add
test
fsubrl
jg
xchg
mov
stos
nop
dec
fs
pop
push
out
jmp
dec
jp
fs
loopne
pop
lock
push
push
add
dec
push
add
mov
sarl
push
and
insb
sub
inc
cwtl
push
mov
lods
cmp
jae
mov
aas
xlat
in
test
inc
lock
out
test
repz
jge
mov
adc
fs
mov
sbb
ljmp
mov
push
lock
sbb
adcl
ret
mov
sahf
dec
outsb
movsl
lcall
add
sti
jg
and
call
dec
push
xor
les
in
in
call
jae
arpl
inc
cli
js
rolb
addl
flds
mov
in
das
sub
push
add
insb
xor
inc
mov
push
xor
jne
rclb
mov
mov
lock
pop
jge
icebp
adc
dec
mov
scas
sbb
outsl
push
outsb
andb
xor
out
test
pushf
push
lret
testb
out
shrb
test
xor
inc
xor
mov
push
push
jae
lahf
das
inc
mov
sub
dec
sbb
stc
lods
xchg
outsb
test
shrb
mov
sar
scas
push
jae
add
test
adc
arpl
stc
inc
mov
lock
xchg
sbb
xchg
mov
movsl
xor
je
sub
in
test
pusha
jl
adc
rclb
add
mov
test
sub
mov
lea
push
das
inc
pop
jecxz
push
in
or
pop
push
jns
cmp
shr
jo
std
roll
jae
dec
hlt
pop
xchg
fyl2x
cltd
dec
fisttpl
adc
jle
mov
sub
scas
bound
push
sub
jmp
jae
test
cmp
or
lods
xchg
mov
lea
xor
mov
imul
jns
sarb
mov
rclb
adc
push
cli
and
jp
jae
std
or
ja
jb
push
or
data16
jns
sub
add
dec
push
xor
sub
or
stc
es
ror
push
insl
sub
stc
hlt
sub
adc
sbb
ja
test
jecxz
jo
or
dec
push
in
xorb
adc
jle
jo
dec
out
mov
shll
or
mov
jae
rdpmc
ja
inc
les
std
xor
popa
stos
sbb
xor
cmp
insb
add
cmpsb
out
fmul
pusha
cmp
mov
pop
jo
add
popa
mov
cmp
or
sub
mov
inc
loop
repz
or
jmp
addr16
xchg
cmp
insl
sbb
je
mov
call
out
lahf
nop
aas
fwait
mov
mov
mov
cmp
hlt
out
in
scas
or
add
push
jp
lret
jl
ret
push
jle
or
cltd
jo
sbb
sarb
test
ret
jo
cmc
cld
clc
mov
mov
xor
repz
in
adc
cmp
ret
and
push
sbb
repnz
push
jno
push
repz
jo
mov
pop
mov
repnz
iret
cs
ret
xor
adc
lret
in
sahf
or
jle
sbb
cmp
mov
movsl
mov
decb
inc
inc
in
popf
je
fwait
mov
jo
adc
sbb
setae
jecxz
unpcklps
push
dec
jmp
xchg
xchg
lret
test
das
stos
or
cld
outsb
inc
js
pop
push
popf
adc
lea
jbe
push
inc
mov
inc
pushf
sbb
and
mov
nop
andb
pop
pop
xchg
xor
jo
sub
loope
sub
fists
pop
cmp
bound
pop
or
rorl
mov
xor
mov
cmp
jo
aam
fwait
dec
hlt
or
call
rorb
leave
xor
sub
jo
jecxz
and
sub
jo
xor
cmp
stc
xchg
dec
jo
popf
mov
cld
jge
xor
sbb
dec
leave
xorb
pop
jo
stos
inc
pop
aaa
out
cmp
adc
push
shlb
xchg
ja
sub
and
cli
sbb
xor
jmp
and
enter
mov
jo
add
hlt
in
push
fxch
mov
and
or
fucomi
sub
enter
lea
in
cmpb
jnp
cmp
sbb
shlb
cwtl
sbbb
popf
mov
xor
dec
pop
adc
pop
jo
movsl
cmp
icebp
stos
jo
jg
inc
cmpsb
lret
sbb
and
xchg
test
cmp
leave
fdivrs
cwtl
pop
pushf
and
jns
dec
mov
and
sbb
cltd
cmp
mov
xlat
cwtl
repz
sti
jge
xchg
int
insl
sub
scas
mov
push
sub
inc
jo
iret
cltd
es
sbb
mov
mov
rcrb
movsb
imul
stc
test
push
jns
int3
mov
in
pop
jae
add
mov
add
bound
sbb
out
cmc
jo
imul
lods
fmul
add
icebp
ret
dec
mov
ret
sbb
push
pusha
addl
push
jo
mov
js
scas
sub
sub
repnz
rolb
mov
adcb
aaa
jo
cmc
jecxz
push
cs
jns
inc
enter
mov
pop
jo
or
jo
stos
icebp
push
into
insl
nop
xchg
cmpl
sbb
mov
mov
imul
adc
pop
add
cmp
and
jo
insl
xchg
icebp
push
xlat
mov
and
cltd
insl
mov
cmp
xchg
dec
aam
mov
clc
add
xor
ljmp
je
inc
jo
pop
in
mov
outsb
repz
repz
jp
mov
inc
dec
jns
sbb
dec
jge
pop
ret
jle
jo
and
int3
fidivrl
into
loopne
pop
dec
out
pop
jo
add
aaa
jo
int
aad
mov
fwait
mov
popa
push
mov
mov
outsl
push
jo
sbb
inc
xchg
mov
ds
ror
push
push
shlb
inc
fbstp
push
push
outsl
cmp
scas
push
in
xor
into
adc
notb
scas
dec
cmp
rcrb
aad
pop
mov
nop
test
lds
push
fnstenv
push
xlat
iret
mov
rcrb
test
popa
bound
dec
mov
popf
pop
jo
out
mov
xor
adc
in
xor
jbe
lods
movsb
jo
push
jb
inc
pop
lcall
xchg
jo
mov
lock
test
jo
xor
iret
mov
cmp
stc
mov
mov
jp
jo
call
aad
jo
adc
inc
sbb
lds
lahf
orb
test
push
cmp
je
mov
jnp
movsb
gs
push
jo
mov
mov
pop
in
scas
or
mov
lea
sub
sarl
mov
mov
fbld
in
insb
push
sbb
dec
xor
leave
add
lds
js
aam
pop
nop
fxtract
sarl
xor
xchg
lcall
mov
in
inc
fldl
bound
insb
jo
adc
mov
mov
sahf
inc
add
and
sbbb
out
leave
aad
add
lret
into
jo
ljmp
or
and
jo
cmp
xchg
fimull
xchg
aaa
imul
jo
sbb
repz
jo
inc
adc
or
stos
dec
data16
out
pusha
pop
or
sahf
push
imull
pusha
dec
leave
xor
cld
in
cmpsb
outsb
sbb
and
xchg
sbb
push
inc
fistpll
xchg
clc
mov
jg
ds
bound
sbb
into
xorb
shlb
mov
pop
xorl
loopne
xor
mov
sub
jge
nop
mov
cli
lods
mov
loopne
movsb
in
adc
repnz
inc
fnsave
movsl
lahf
xchg
xchg
rol
jno
pusha
xchg
xchg
dec
loope
in
in
hlt
dec
push
and
pushf
jo
pop
add
cs
mov
inc
out
jo
ljmp
mov
adc
inc
popf
outsl
mov
je
outsb
testl
pop
outsl
je
addr16
testl
inc
loopne
aas
comiss
jg
sub
push
mov
sti
cli
pusha
jbe
jecxz
outsl
mov
mov
mov
or
stos
fildll
adc
leave
mov
mov
cs
daa
mov
sub
jbe
jo
pop
push
xor
dec
mov
mov
sar
jo
lods
sbbl
loopne
fwait
test
repz
clc
das
out
xchg
jge
jo
pop
lcall
aas
xchg
jo
adc
aad
lods
dec
xor
incb
or
out
and
iret
or
mov
adc
lret
push
jmp
in
xor
clc
jg
pushl
jge
fwait
data16
orl
inc
push
jbe
jns
adc
outsb
push
insb
cmp
sbb
shl
dec
push
jnp
jno
mov
fnsave
inc
shlb
das
movsl
scas
push
test
cmpsl
fdivl
cmpsb
push
xchg
jl
fbstp
ja
fs
nop
push
mov
mov
mov
cmp
jbe
xor
icebp
or
mov
cmp
fcom
movsl
inc
scas
jo
push
out
and
gs
leave
fs
ljmp
jae
jp
lret
out
xchg
cmc
cmp
xchg
pop
insl
mov
pusha
jge
jle
and
repnz
int
pop
jg
sti
mov
in
mov
and
mov
pop
jge
jno
shll
and
push
mov
inc
mov
cmp
adc
mov
mov
call
fs
lods
mov
call
paddq
ds
pop
daa
jo
mov
fucomip
rorl
lahf
sbb
jbe
and
sbbb
outsb
jae
push
pop
hlt
in
loop
into
sahf
ss
pop
and
icebp
adc
xor
outsl
sarb
shrb
xchg
bound
scas
sbb
imul
bound
pop
push
out
and
inc
push
inc
sti
jle
mov
repnz
loop
lods
in
cli
shl
push
hlt
repnz
movsl
cmp
aad
or
add
xor
inc
jl
outsl
pusha
dec
mov
adc
dec
cmpl
js
ds
stos
mov
subb
imulb
jbe
stc
ljmp
fbstp
pop
mov
out
pushf
fstl
sbb
dec
dec
cltd
in
jge
jo
push
lods
cli
stc
fisubl
jo
call
std
out
jo
lock
push
jb
loope
jo
test
sbb
cmp
mov
push
xor
lds
pop
mov
cmp
sub
push
xchg
jo
push
imul
insl
jbe
or
std
jb
test
xchg
jo
icebp
in
inc
jno
jp
les
push
fnstcw
test
jo
jb
lods
es
pop
jo
dec
movsl
dec
clc
and
ret
push
pop
lahf
push
enter
call
pusha
push
jo
jb
adc
add
jo
dec
or
idivb
aam
push
mov
je
mov
jmp
mov
push
adc
divl
lahf
fdivs
dec
push
hlt
enter
xor
lock
cmp
je
jo
xchg
inc
cmp
ret
jo
adc
xor
jo
out
pop
mov
lret
clc
int
jecxz
push
std
in
cwtl
push
int3
adc
add
push
ret
jo
in
daa
pop
jns
jmp
aaa
inc
je
iret
push
add
or
outsl
ljmp
jo
jmp
xor
jns
mov
rcl
in
out
mov
push
addr16
jo
jns
sub
int
enter
pop
inc
cmp
jo
shrb
sti
dec
pop
jo
icebp
sub
mov
cmp
xchg
lret
out
scas
and
test
imull
mov
sub
or
test
ret
xchg
in
sbb
aam
dec
frstor
in
lahf
sbb
dec
test
pusha
mov
sbb
fsubs
pop
jge
out
sbbb
and
cmpsb
es
in
arpl
lret
jae
inc
rorb
and
gs
int3
aad
rcrl
and
sbb
pushf
pop
setg
add
iret
adc
push
in
movsl
push
insl
call
arpl
js
addb
or
cmp
or
pushf
shlb
gs
xchg
loopne
lahf
stos
jg
mov
insl
sbb
sti
push
mov
push
or
push
and
pop
dec
fisubl
rcll
mov
lret
shl
loopne
aad
mov
enter
jae
and
imul
sti
dec
pop
mov
mov
test
fnsave
sub
push
jno
inc
mov
out
ja
sbb
hlt
int3
or
and
movsb
xlat
iret
out
push
outsl
jp
jo
pusha
mov
fucomip
aad
out
push
mov
mov
sbb
jg
cltd
push
inc
mov
dec
insb
adc
insb
addl
sbb
scas
out
push
mov
mov
adc
call
call
jae
js
mov
lahf
jg
shl
repnz
and
dec
iret
das
ss
xorl
out
jge
lock
pop
lret
int3
icebp
push
sub
cmp
pop
cmpsb
shlb
cs
cwtl
cmpb
fistps
test
sub
ljmp
sti
pop
repnz
xchg
lret
incl
mov
xchg
dec
cmp
cltd
or
mov
ficomps
test
repnz
sub
mov
mov
inc
mov
adc
aaa
out
rcrl
mov
lods
inc
mov
lahf
data16
jge
and
inc
fadds
xchg
data16
int3
push
xor
test
or
mov
scas
lret
xchg
or
insl
int3
cmc
movsb
sbb
fstpl
push
adc
mov
inc
and
push
mov
push
call
or
pushf
je
dec
out
push
lods
sbb
or
push
mov
xchg
mov
aas
pop
xor
sub
push
cmp
stos
sub
add
mov
ds
leave
mov
fisttpll
adc
mov
jo
inc
test
and
mov
jecxz
dec
sbb
leave
icebp
mov
jmp
das
jo
sbb
out
repnz
fs
aas
cmp
jge
fldcw
test
lds
xchg
clc
cmpsb
cmc
and
push
mov
jae
ss
aaa
ret
or
dec
pop
mov
mov
andb
or
pusha
lahf
cmp
jl
test
xchg
jne
sbb
push
aas
add
es
mov
mov
movsl
movsb
pop
pop
test
out
movzwl
out
testb
fucom
push
push
lods
add
ljmp
push
xor
out
adcb
xchg
out
xchg
cvttps2pi
aam
inc
js
fiadds
jle
sbb
fisttps
sub
or
movb
imul
inc
subb
fwait
in
es
push
jae
xlat
inc
in
gs
repnz
pop
aas
mov
imul
outsl
sbb
xor
jbe
iret
sub
jmp
cmp
cmpsb
mov
add
and
and
in
in
push
jg
dec
movsb
jge
xchg
ljmp
jb
xchg
add
xchg
test
mov
jp
je
dec
jl
out
scas
pop
or
add
cwtl
jle
jge
mov
jge
cld
nop
sbb
xchg
lock
dec
lods
mov
jl
inc
fldcw
mov
push
pop
jp
loope
out
xchg
and
adc
test
jge
jg
int3
add
and
xchg
sbb
aas
jnp
push
lahf
lea
les
adc
lret
mov
testl
nop
adc
xchg
jae
aad
and
pop
lock
repz
divl
aam
rclb
dec
lahf
jae
cmp
cmp
movsb
shl
popa
add
es
fisubrs
jne
lds
inc
cmpsl
jle
sbb
push
bsf
sub
leave
dec
push
adc
rorl
mov
push
mov
mov
in
addr16
jae
add
pusha
mov
mov
xor
shl
rcll
inc
shll
mov
xchg
mul
mov
int
enter
loopne
and
fimull
xor
sahf
sbb
push
jg
add
movsl
mov
in
lock
sub
movsl
scas
ss
ret
bound
fs
outsl
jge
sbb
addr16
cmpsb
push
scas
sti
jbe
pop
jo
pop
mov
mov
ds
pop
push
and
lds
push
cmp
stc
leave
mov
sahf
jo
sub
cmpsb
outsb
push
out
jo
pop
lea
addr16
mov
bnd
shll
clc
push
jns
jo
lcall
lock
popf
shrl
push
xchg
cmp
fs
xchg
lahf
jb
in
jo
aam
add
pop
sub
int3
mov
lret
test
cmp
testb
sbb
ljmp
insl
fxch
in
rorl
or
rcrl
push
cmp
test
add
aad
lcall
cmpsb
fbld
dec
jo
or
inc
les
inc
loope
loop
mov
popf
xor
arpl
mov
lock
inc
mov
jmp
out
pop
jo
fsubrs
cmc
clc
xchg
and
pop
pushf
push
cwtl
inc
pop
subb
adc
mov
fidivl
add
hlt
add
xchg
cmp
loopne
cmp
xchg
push
iret
or
xor
mov
mov
push
inc
imul
ret
dec
mov
xorl
rcrl
add
lock
sub
lds
jnp
sub
jo
xor
adc
lahf
cmp
inc
dec
loopne
stos
sti
leave
cmovno
mov
push
sbb
sahf
pop
push
push
lret
in
cmpsb
and
insb
xchg
push
sub
cli
fldenv
loope
push
pushf
loopne
mov
dec
rclb
mov
jae
pop
add
bt
lahf
push
mov
addb
cmp
dec
lock
push
popf
stos
stos
faddl
repnz
push
sahf
jo
fucomip
fidivrl
mov
cli
jno
and
pop
call
add
push
or
stc
xchg
lock
inc
stos
or
imul
sarb
popa
jbe
addr16
sub
xor
arpl
xchg
cmpsb
test
repnz
inc
aad
jp
pop
xorb
out
ret
ljmp
dec
push
mov
mov
mov
cli
add
mov
add
or
sbb
or
fwait
push
mov
sarl
or
mov
fbstp
jns
push
lret
sbb
sbb
cld
fs
mov
jae
pop
outsl
ljmp
mov
jae
popf
jno
sahf
push
xchg
mov
dec
cmp
shll
loop
jge
addr16
test
sub
push
loope
lea
ljmp
iret
daa
loop
dec
fs
jnp
mov
mov
xor
loop
cmp
jecxz
imul
in
fisubs
imul
add
arpl
mov
out
test
adc
cmpsl
ss
or
cltd
push
or
aam
hlt
mov
pop
or
fwait
dec
dec
xchg
adc
push
or
sahf
data16
push
mov
inc
addr16
dec
mov
in
mov
cmc
ja
jmp
lock
dec
mov
sarb
push
sbb
adc
out
xchg
outsb
dec
stc
or
and
xchg
dec
scas
lods
ds
xor
ljmp
out
scas
dec
cmp
insb
push
arpl
push
icebp
fs
js
hlt
fs
jl
pop
mov
mov
and
sbb
test
outsb
jo
enter
cmp
jmp
cwtl
adc
adc
sub
dec
les
jae
out
xchg
mov
inc
gs
lret
stos
push
cmp
push
push
jnp,pt
outsb
repz
je
inc
add
push
into
nop
mov
sub
or
or
mov
mov
mov
jecxz
lahf
push
rcrl
mov
mov
dec
mov
shll
daa
cmp
js
insl
mov
sbb
dec
push
arpl
cmp
enter
mov
push
imul
pusha
xchg
jg
pop
xor
outsl
mov
bound
sahf
xchg
push
mov
fabs
mov
cmc
or
lods
mov
gs
add
dec
xchg
or
les
imul
hlt
sub
mov
inc
jo,pn
mov
jo
and
jno
cmp
out
mov
iret
jb
jns
jp
xchg
or
movsb
into
pop
testb
cmpsl
popa
xor
addb
scas
xchg
test
dec
fsubp
mov
push
call
mov
jo
lahf
push
adc
cmpb
cltd
movsb
push
hlt
cmp
popa
insl
add
movlhps
push
adc
inc
bound
lret
aaa
es
or
xchg
pop
dec
jo
data16
or
push
cs
clc
out
flds
push
push
push
push
sar
xchg
pop
xor
mov
add
cmp
sbb
dec
fwait
jo
insl
mov
lods
mov
jo
fst
into
pop
pop
cmp
jns
lds
ret
lcall
inc
jo
cmp
and
push
jo
or
nop
jo
xchg
push
jo
je
xor
or
stc
jo
pop
cmp
in
mov
loopne
popa
mov
stc
test
fsubr
jl
xchg
pop
das
xchg
ss
add
pop
push
ficoml
sub
lds
jns
testl
mov
mov
in
jo
push
inc
cs
hlt
pop
fsubr
icebp
add
cld
mov
sarl
daa
push
mov
fdivl
push
mov
pusha
sti
adc
inc
push
mov
jmp
sub
les
xlat
lock
mov
mov
je
inc
nop
mov
jo
push
sbbb
push
insb
rcr
scas
inc
notl
push
jo
fstpl
pop
mov
data16
pop
pop
adc
jo
je
out
decb
or
cmp
add
mov
xchg
mov
ret
xor
inc
adc
jb
push
sub
inc
rorl
pop
dec
jl
push
aam
xor
and
mov
mov
enter
pushf
add
nop
add
sbb
or
jb
jl
sbb
xor
xchg
idivb
xchg
push
cmp
rcll
push
daa
jg
push
loopne
je
stc
frstor
jnp
jnp
sub
es
sbb
scas
lret
fsubl
or
lock
adc
mov
in
cmp
scas
nop
mov
add
mov
fwait
sahf
and
ret
push
cli
mov
jo
jbe
fidivrs
xor
jo
mov
lods
mov
dec
repnz
mov
xchg
movsl
and
arpl
fwait
test
jo
push
das
ficompl
stos
xchg
sbb
je
or
into
orb
rolb
inc
mov
ja
out
push
fildll
rcrb
mov
aas
or
jo
icebp
jl
shlb
fwait
push
jo
cld
push
test
outsl
or
inc
or
inc
ficoms
cmpsl
jo
jnp
mov
jo
cld
scas
inc
sbb
lods
jo
sahf
movsb
push
cmp
lods
jo
insb
cmp
or
jmp
dec
cmp
cli
hlt
fidivs
jb
int
imul
js
mov
jo
out
dec
xchg
jo
ljmp
jo
in
enter
cmp
pop
sbb
cwtl
cmp
or
nop
push
cmpsb
addb
adc
pop
mov
clc
jo
cmp
lea
popa
push
xchg
insb
jbe
aas
fdivs
ss
adc
sbb
out
sub
sub
mov
dec
mov
notl
cmp
and
cmpsb
jo
push
and
lods
repnz
ja
or
mov
and
jo
sub
out
jno
int
cmp
imul
mov
les
xor
push
cs
out
leave
jo
cmp
add
nop
mov
divl
sbb
loope
pop
jo
outsl
int
mov
add
jo
dec
int3
fimuls
jp
xor
mov
xor
fisubrl
or
jp
test
xchg
add
push
mov
sbb
jmp
pop
out
lds
inc
lea
jbe,pt
xor
add
xor
pop
push
jnp
sbb
jns
jb
sub
mov
stc
xor
xchg
xor
inc
add
mov
adc
loop
jo
or
ret
xor
mov
test
sahf
out
lds
mov
hlt
adc
imul
mov
aam
cmp
cmc
out
jge
shrl
mov
fcomps
fwait
jo
ss
jl
push
push
adc
or
mov
sub
pop
sbb
push
jo
xchg
mov
push
cpuid
xchg
andl
mov
lret
cltd
icebp
repz
dec
cmp
outsb
or
pop
dec
jne
std
cltd
inc
call
mov
jo
jmp
add
movsl
test
add
outsb
pop
pop
bound
je
mov
sbb
pop
xor
popa
scas
cli
push
or
push
fnsave
jecxz
jl
ljmp
or
out
sahf
ret
fisubrl
js
daa
pusha
jo
inc
fistpll
add
mov
mov
out
dec
fs
sub
sbb
xor
std
and
popf
adc
gs
add
jo
jp
sub
jnp
outsw
cmc
dec
mov
jb
into
das
fisttps
mov
xchg
aad
add
je
xchg
scas
cmp
jo
orb
leave
pop
inc
jo
outsl
repnz
sbb
dec
inc
sbbb
jo
cmp
mov
jo
call
mov
jo
loop
fstl
shlb
xchg
fs
addr16
mov
bound
inc
mov
pusha
or
cwtl
sbb
out
ja
jmp
push
jle
or
push
nop
jo
pop
nopl
mov
and
pop
aaa
push
cmp
fidivs
mov
xor
sub
lds
push
jge
nop
push
jge
add
cs
test
mov
cmpsl
arpl
xor
sub
dec
xchg
movsb
jo
pop
or
in
xlat
xchg
jo
cmc
popf
ret
and
and
clc
inc
xchg
repnz
pavgb
inc
lahf
and
push
daa
les
ja
sub
jge
pusha
jmp
adc
xor
mov
bound
mov
outsb
or
imul
push
mov
lgs
enter
mov
jmp
fbstp
push
jle
push
cld
or
bound
push
push
test
push
and
es
popa
dec
pop
call
jmp
inc
insb
mov
push
xor
add
cmp
clc
cltd
jo
arpl
inc
movsl
jle
inc
lock
repnz
cmpsb
js,pn
iret
clc
jo
outsb
in
mov
sbb
or
push
sub
jne
test
add
sub
pop
push
test
je,pn
out
filds
push
call
data16
xchg
cs
and
or
jmp
dec
mov
jo
dec
dec
mov
dec
xchg
mov
inc
int3
dec
jo
insb
mov
cmpsb
and
lahf
icebp
and
sarb
lds
jo
xchg
mov
push
aad
sahf
xor
dec
mov
addr16
jmp
or
jo
xlat
push
push
inc
rcll
and
jle
jo
outsb
push
inc
je
and
sub
popa
sarb
jae
dec
jo
fwait
mov
pop
jb
and
add
imull
sub
loop
and
scas
sub
sbb
nop
fiaddl
and
aas
jns
push
xor
enter
ss
mov
aas
std
rorb
ret
ds
or
pop
js
stos
xchg
jo
pop
sbb
dec
sub
clc
pusha
pop
push
adc
sub
popa
pop
iret
insl
jo
push
jns
and
jo
mov
imul
in
jecxz
loope
sbb
jo
mov
xor
sub
dec
xchg
jo
stc
xchg
fisubrl
lea
jae
cltd
mov
imul
jno
jle
mov
aad
pusha
jo
adc
sbb
dec
cmpsb
into
jo
cwtl
inc
mov
adc
mov
and
mov
lods
cmp
inc
das
jge
push
test
mov
lods
mov
sbb
mov
push
decb
fistps
clc
arpl
mov
lcall
enter
int3
in
add
das
mov
adc
je
arpl
mov
jl
pop
leavew
lds
add
mov
push
jne
push
xor
test
add
lahf
cmp
or
repnz
fstpl
ficoms
push
cmp
push
gs
push
out
jg
mov
sahf
stc
gs
lret
mov
out
jne
imul
jae
and
jo
xor
cmpsl
test
jecxz
sbb
adc
call
ret
adc
push
clc
push
std
push
bound
test
lock
mov
clc
push
jmp
mov
stc
sbb
cmp
pop
arpl
mov
mov
lds
rclb
xor
ja
out
aam
jmp
das
je
dec
mov
cmpb
mov
loop
jno
arpl
int3
mov
mov
jmp
jmp
mov
sub
xchg
mov
xchg
hlt
adc
and
push
push
imul
sub
adc
add
int3
push
xchg
stos
inc
rcrb
adcl
and
add
mov
inc
fwait
shrb
outsl
out
sbb
cwtl
jae
pop
xor
shrl
mov
hlt
jle
push
push
arpl
jg
cmp
jbe
mov
mov
out
pop
imul
push
add
test
or
mov
xor
clc
out
push
add
data16
cmp
cmp
cli
out
cmp
movsw
mov
xchg
adc
repz
outsl
cmp
pop
mov
leave
sub
icebp
jae
jbe
rcrb
fsubl
rolb
out
push
out
push
adc
sbb
jo
push
jae
push
ljmp
ret
mov
push
rcr
push
sbb
sbbb
arpl
xchg
int
push
push
adc
nop
cmp
mov
popf
int3
dec
pop
js
in
cmp
lahf
out
sbb
inc
fcompl
or
mov
push
aas
je
arpl
jae
lcall
push
or
jp
popa
push
loope
arpl
popl
inc
mov
outsl
lret
test
cmp
mov
sbb
clc
jp
out
fisubl
popf
push
mov
add
mov
fidivrs
add
jb
outsb
clc
push
stc
std
xchg
scas
adc
sbb
in
jo
push
cltd
mov
les
repnz
cmp
lods
add
cmp
jge
data16
idiv
lahf
imul
mov
andb
loop
xor
jmp
dec
mov
mov
sub
loope
adc
jecxz
out
in
inc
pop
lock
push
inc
add
push
xchg
dec
mov
jg
xor
lods
cmpsb
mov
sbb
xor
mov
call
popa
in
sbb
jo
push
pop
insl
xchg
outsl
fldl
inc
jo
mov
jmp
mov
push
pop
pop
push
sub
jae
je
mulb
arpl
mov
adc
jns
adc
loop
jecxz
jmp
out
popf
mov
push
flds
test
jecxz
jae
cmp
fwait
jmp
jns
mov
add
inc
fucomp
fisubrl
adc
xor
adc
and
call
outsl
mov
in
push
aam
in
cli
ss
nop
mov
mov
inc
pop
mov
inc
pop
jmp
dec
inc
pop
cmpsl
add
xchg
push
cmp
dec
ja
es
aaa
pop
pop
shlb
lahf
adc
stos
add
lahf
jl
je
scas
sub
out
imul
add
notb
cwtl
pop
fistps
sbb
shrb
adc
cmpsb
iret
and
mov
fs
jle
lret
shll
cli
shl
push
fs
push
cmp
call
out
pop
mov
push
jle
outsl
or
iret
jo
pop
fdivl
push
fidivrl
movsb
jle
xchg
inc
push
push
add
pop
sub
mov
in
idivl
mov
test
movsb
arpl
mov
sbb
sbb
xchg
adc
push
dec
pop
add
adc
dec
addl
or
jp
insl
fistpll
xor
adc
jne
f2xm1
sub
out
cmp
in
mov
pop
out
and
rclb
mov
sub
xchg
hlt
loopne
outsb
cmp
push
or
cmp
aam
movsl
dec
mov
pop
fildl
enter
push
cld
aad
cli
xor
es
es
push
adc
jmp
jmp
in
int
sub
jl
lock
xchg
hlt
dec
or
psubsb
add
shll
push
imul
imull
cli
lret
clc
pusha
lret
shrl
jb
push
mov
insb
cmpsl
data16
scas
or
mov
add
aaa
dec
into
sbb
sar
cld
mov
jmp
mov
and
popf
out
insl
and
jge
stos
jmp
mov
mov
int3
repnz
in
aam
fdivrl
lret
cmpsb
mov
scas
dec
dec
sbb
cmc
out
outsl
fidivrs
dec
arpl
aaa
insb
or
push
lret
push
orl
in
jo
out
out
test
pop
inc
or
popf
pop
rcrb
xor
lret
add
adc
gs
cmp
lock
and
xchg
cmpsl
loopne
xchg
loopne
call
andl
jmp
and
fwait
inc
sti
push
loopne
scas
mov
push
dec
js
imul
jae
xchg
sub
outsb
push
adc
xchg
fs
int3
outsb
fadd
icebp
jnp
jae
in
mov
std
add
fsubr
jge
js
pop
jp
pop
ja
push
inc
push
mov
fs
lock
jne
cmp
outsl
xlat
add
fdivl
mov
shlb
es
popa
cmpsb
mov
lret
clc
push
pusha
xor
xchg
mov
push
sahf
cwtl
pop
push
stc
jbe
and
insl
inc
js
sar
pop
xchg
iret
mov
mov
sub
pop
sbb
fcomps
sub
sbb
or
iret
add
movsl
fs
dec
repz
xor
and
lcall
out
jae
loope
lock
fs
jno
icebp
jge
inc
sbb
shlb
fs
xor
jl
inc
xor
push
and
psubd
cli
scas
jae
lret
cs
add
pop
mov
fisubl
mov
mov
mov
cltd
sbb
je
arpl
or
jp
andb
das
out
sub
out
aas
cmp
inc
repz
mov
inc
push
hlt
dec
add
lret
into
stos
xor
scas
dec
add
popf
push
cmpsl
push
test
mov
xor
repnz
adc
inc
xchg
adc
push
loopne
fadd
roll
sbb
mov
arpl
repnz
je
mov
les
lret
stos
scas
mov
inc
or
pop
xor
sub
in
push
lahf
or
rcrl
xchg
mov
arpl
xor
or
or
lret
lock
lds
or
js
cmp
mov
xor
and
loopne
in
cmp
aas
fnstsw
add
in
cmp
push
jne
insb
rcl
jo
pop
mov
fisubrl
jecxz
in
sub
pop
gs
push
mov
mov
add
push
and
ss
dec
cmp
dec
push
push
lea
pop
aam
jp
ja
jle
stos
add
sbb
in
or
add
cli
into
aam
or
mov
int
daa
adc
push
movsl
mov
aaa
clc
jns
push
mov
mov
add
pop
andb
dec
sub
pop
outsl
push
in
mov
inc
push
out
cmp
js
cmp
dec
sub
stos
out
cs
push
dec
arpl
push
push
cmpsb
fs
fs
dec
jae
vandps
outsl
xchg
xchg
jns
jp
mov
jo
in
sbbb
sbb
fs
mov
aam
pop
mov
mov
push
subb
scas
movsl
jb
mov
or
or
jae
subb
insb
inc
xor
mulb
mov
movsb
enter
jae
or
jo
and
xor
sub
leave
mov
jnp
jo
int
lods
lcall
aam
data16
push
cmp
dec
xor
push
jo
fucomi
rorl
in
sbb
push
jo
xor
das
xchg
xorb
jo
test
jecxz
test
nop
push
sbb
and
xchg
nop
in
or
jnp
pop
dec
jo
js
movsb
pop
mov
or
adcl
mov
jo
fisttpl
movsb
sbb
pop
addb
push
int
xor
sub
loop
adc
jb
sub
jo
lcall
cmp
out
fdivs
pop
lret
xor
ret
cs
pop
gs
jo
arpl
cmp
mov
add
pop
sbb
pusha
cld
gs
sub
mov
push
fs
mov
and
or
cld
jno
add
xchg
inc
sub
xchg
push
outsb
mov
ds
jo
insb
cmp
ja
push
mov
mov
jle
dec
dec
bound
and
pop
nop
nop
xchg
iret
ret
icebp
lret
scas
test
inc
lock
dec
lret
shll
scas
mov
xchg
jne
and
adc
jg
inc
jo
lea
mov
sti
pop
popa
jo
lods
jmp
sub
mov
jo
inc
cld
pop
ffreep
ss
jp
cmc
or
jo
xor
loop
mov
xchg
jge
push
icebp
sub
sub
sbb
jo
or
bound
das
dec
lcall
xchg
jno
push
jo
loopne
and
add
sbb
lds
jo
jne
cmp
mov
loopne
pusha
push
jle
dec
sbb
lea
mov
lahf
adc
fisubrl
and
int3
xchg
rclb
cmpsl
sub
xor
sbb
and
popf
jo
scas
push
mov
nop
or
mov
popa
repnz
lahf
jg
pop
xchg
or
fldcw
js
out
push
and
jae
in
insl
pusha
jo
push
pop
dec
pop
nop
push
jo
dec
push
cwtl
in
sub
in
std
jo
in
pop
inc
scas
push
cltd
jo
xchg
inc
xchg
ret
jo
movsb
or
jns
popf
jo
pop
jge
adc
add
imul
mov
mov
xchg
adc
jo
cs
in
movsb
adc
jo
ret
pusha
push
test
popf
push
icebp
adc
push
pop
cs
in
push
push
jo
cmc
inc
and
xor
fiaddl
mov
push
jae
fildll
push
xchg
xor
sbb
pop
push
pop
xor
mov
push
outsl
insb
jl
nop
cmc
pop
test
shrl
jae
ret
xchg
adc
dec
push
push
cmp
push
mov
and
jmp
mov
push
inc
push
andl
add
into
push
repnz
push
inc
pop
jo
sbb
inc
ffreep
lds
sbb
dec
mov
js
in
mov
popf
aam
enter
xchg
push
pop
mov
xchg
cmp
jo
popf
testl
movsb
mov
jle
imul
xchg
sub
out
cs
xor
pop
inc
mov
and
cmp
adc
jo
xchg
cmp
and
mov
aad
leave
jo
ja
insl
sbb
das
outsl
dec
repnz
mov
sbbb
sub
xor
jo
cmc
lcall
and
jo
push
mov
and
inc
add
push
push
cmp
xor
push
and
hlt
fisubl
pop
inc
gs
jo
clc
mov
pop
nop
dec
stos
lods
sti
xchg
inc
je
and
fmul
add
cmp
push
jno
cmp
je
mov
mov
or
add
or
push
jo
les
or
cwtl
js
xchg
jmp
xchg
repz
push
push
pop
fidivl
loop
stc
das
mov
iret
aaa
outsb
push
jo
and
push
jo
jb
div
jl
adc
xchg
lea
and
jo
dec
pop
insl
or
icebp
je
push
mov
adc
inc
lods
xlat
mov
mov
out
fstl
test
repnz
into
popf
nop
cmp
mov
jns
in
jo
dec
test
jo
push
vpshufd
push
jo,pn
push
sbb
sahf
mov
cmpsb
mov
add
dec
jo
mov
jnp
rcll
xchg
loope
shlb
lahf
pop
cli
mov
xchg
daa
nop
rorl
data16
adc
xor
jne
cmpb
jge
imul
outsb
add
push
into
add
or
jno
lods
jo
mov
push
pusha
inc
mov
movsb
push
in
sbb
xchg
xor
lock
negb
divl
sbb
or
loopne
mov
jmp
js
cwtl
adc
out
dec
sti
lods
mov
jle
xor
mov
rorb
fmull
aaa
jl
add
and
cwtl
inc
push
lock
lret
jo
ja
and
push
in
mov
rcrb
cmc
insl
dec
fwait
push
cmpsl
dec
sbb
mov
lret
out
sbb
lds
mov
pop
cli
inc
outsb
in
out
cwtl
sarb
and
shlb
sarl
add
adc
jmp
mov
test
mov
shr
dec
std
dec
in
adc
cld
dec
je
mov
mov
insb
jl
cs
lods
adc
lret
mov
dec
loopne
shlb
dec
xor
push
push
xchg
mov
xchg
xlat
ficoms
pop
cmpl
jo
daa
xchg
loopne
ret
jmp
mov
sbb
cmc
inc
add
imul
je
fisubl
int3
jno
lds
enter
aad
je
and
add
push
or
ljmp
and
xchg
mov
pop
inc
stos
nop
or
hlt
xchg
outsb
sti
notl
add
mov
xchg
mov
mov
pop
push
cmp
loope
inc
push
mov
insl
arpl
shl
cmp
sbb
aad
add
pop
jb
ja
test
sub
lods
add
movsb
lahf
pop
adcb
or
inc
fiaddl
movsl
pop
jg
add
out
jnp
shl
mov
xchg
mov
outsb
insb
mov
cld
pop
cmpsl
mov
push
sbb
data16
inc
mov
jo
sub
sbb
std
push
xrelease
lock
jae
cmpsb
inc
lret
sarl
paddq
pop
push
pusha
push
jl
dec
or
sbb
jae
pop
sti
fs
jmp
inc
sarb
or
out
push
cmp
sbb
mov
popf
in
mov
sbb
inc
xor
out
push
xor
lcall
mov
pop
sub
xchg
pop
jae
cltd
out
fwait
std
xchg
add
pop
fsubl
add
jmp
inc
mov
jns
pop
xor
inc
ret
outsl
and
adc
jae
sub
or
gs
ja
jb
outsb
shrb
fldenv
jecxz
fcoml
decb
cmp
es
sbb
popf
jae
int
and
int3
mov
fsubp
inc
mull
push
arpl
std
out
data16
cmp
add
rcrl
data16
dec
scas
xchg
push
andb
mov
fldl
std
add
ret
cmp
cli
push
outsb
mov
std
std
enter
addr16
fcom
ja
popf
scas
imul
sub
out
inc
fs
jae
cmc
xchg
in
sarb
andb
pop
imul
pop
adc
or
mov
jl
push
push
das
in
cmp
mov
mov
and
inc
insl
mov
jle
or
mov
xchg
dec
cmpb
in
and
xor
test
in
nop
call
jg
icebp
inc
mov
loopne
inc
ret
mov
repnz
jecxz
out
push
push
jae
push
outsb
push
and
cmp
push
lret
shrl
ss
sbb
shr
jl
jnp
mov
jge
cs
jb
int3
fbstp
adc
fdivrs
mov
inc
xchg
push
sub
dec
cmp
icebp
out
in
out
jg
sbb
mov
xor
test
inc
inc
cmp
lret
mov
push
adc
in
xchg
sub
pop
rolb
insb
outsl
add
jge
scas
xor
or
repz
fwait
incl
jmp
divb
add
inc
and
frstor
cmpl
aam
rorb
mov
test
jns
scas
test
call
fnsave
pop
imul
lret
jmp
adc
add
out
sub
push
or
lock
ficomps
jle
jae
out
movsb
pusha
mov
pop
iret
inc
and
sbb
imul
insb
aaa
xlat
in
push
or
dec
and
push
xchg
loopne
dec
jle
push
push
add
sbb
icebp
pop
cmp
push
push
fiadds
sbb
push
lahf
fsubrp
or
lods
jne
clc
lods
sbb
cltd
pop
es
js
or
or
and
out
stos
call
push
mov
pop
or
pop
sub
jne
dec
fwait
dec
dec
and
or
in
repnz
mov
fimull
adc
hlt
jp
mov
in
mov
jns
xor
sub
dec
addr16
push
call
push
sub
jp
shlb
add
adc
movsb
repnz
out
sbb
xchg
push
mov
pop
or
cmp
xchg
xchg
mov
sub
inc
push
in
stos
clc
xchg
in
cmp
jbe
jge
inc
lock
and
pop
mov
fucompp
pop
lods
inc
push
pop
mov
cmp
movsb
iret
pusha
mov
sbb
cmp
pop
enter
and
xchg
push
cmp
jle
mov
enter
loope
jne
jg
jns
nop
push
enter
es
xchg
xchg
shrb
sub
xchg
in
lret
xor
pop
addr16
sub
cmpsb
fisubrl
outsl
out
cmpsl
sub
mov
es
js
and
mov
ljmp
repnz
pop
mov
repz
scas
jae
inc
sbb
ret
mov
jl
sbb
cmpsb
mov
daa
mov
sub
int3
and
pushf
sub
push
cmc
push
inc
sbb
mov
xor
cmpsl
and
mov
pusha
arpl
xchg
aad
sbb
mov
xor
push
sahf
out
pop
add
lods
movl
mov
jo
adc
push
shr
push
pop
xor
sub
or
add
or
filds
add
repz
mov
dec
mov
loope
mov
fs
xor
mov
aam
cli
mov
fnsave
call
add
xchg
sbb
or
insl
jae
mov
hlt
daa
out
fwait
mov
movsl
adc
hlt
das
mov
int3
xchg
mov
in
arpl
push
mov
mov
jo
fwait
sbb
es
repz
inc
pop
adc
sub
push
add
fsubp
fcompl
bound
mov
xor
out
jns
orb
fnstsw
jae
inc
pop
xor
ds
jle
or
push
mov
jae
mov
add
dec
xorl
cmp
in
gs
lahf
rcl
sub
pop
pop
int3
or
scas
push
inc
fists
rorb
daa
inc
es
push
js
mov
in
test
xchg
pushl
in
in
sub
loope
dec
int3
sbb
mov
rcrb
or
out
jae
and
shrb
or
or
sbb
jnp
pop
outsb
or
scas
sbb
std
dec
add
jne
insl
aad
daa
adc
out
sbb
adc
pop
lss
andl
pop
shll
pop
add
insb
nop
aaa
jmp
or
sub
push
stos
movsl
js
pusha
jg
lret
mov
mov
rolb
jae
out
mov
fsubrs
cmp
pop
and
and
cltd
sub
ja
out
bound
push
mov
jo
and
sbb
jae
xorb
arpl
out
mov
xor
repz
cmp
or
dec
push
push
xchg
mov
loope
das
ja
lods
insb
mov
cmp
jg
int3
mov
std
mov
xor
cmp
sub
xchg
jge
ror
dec
pop
cmpsb
mov
nop
hlt
xchg
inc
mov
lret
jp
and
xor
push
pop
ret
out
insb
lods
fucomp
mov
mov
mov
mov
hlt
jo
arpl
lret
adc
outsb
jmp
pop
and
sahf
sub
push
sub
cmc
sbb
scas
push
adc
pusha
aad
aas
fs
insb
inc
enter
sti
loope
push
sbb
in
cmp
scas
cli
push
sbb
jp
vpsubusw
inc
aaa
mov
shll
jl
bound
and
inc
scas
test
in
jnp
fnstsw
push
dec
add
pusha
add
imul
cmp
or
dec
add
lds
add
sub
xchg
mov
aam
pop
mov
insb
xor
pop
in
sarb
or
xchg
test
je
sub
and
movq
rclb
sbb
stc
fs
sub
dec
or
cltd
ds
and
iret
mov
mov
mov
jge
dec
mov
and
push
inc
fldcw
inc
pushf
mov
lods
push
lock
negb
test
incb
shl
fnsave
dec
fisubs
cmp
icebp
scas
push
adc
push
andb
mov
cmp
push
imul
inc
icebp
cli
sub
sbb
stos
in
or
cmpsl
addr16
sbb
je
or
scas
icebp
lret
int
scas
std
xchg
cmp
xchg
adc
inc
ja
jae
add
push
jne
sbb
push
repz
xor
sub
mov
bound
mov
cmp
jmp
addr16
cli
test
mov
mov
imul
add
xchg
ret
push
jmp
jo
mov
sbb
jo
sahf
xchg
fidivl
dec
imul
cmp
ret
test
andb
lods
insl
shrb
or
mov
mov
rcrl
test
scas
adc
call
cmpsl
jo
movsb
test
or
arpl
aad
mov
jbe
in
lcall
xchg
xorl
mov
pop
push
mov
jo
fs
push
mov
scas
jo
insb
lret
jno
loop
cmp
dec
or
lret
nop
pmaxub
push
test
mov
es
mov
adc
lods
je
adc
popf
jne
pop
dec
mov
push
add
jnp
or
mov
push
push
jo
dec
lock
mov
xor
adc
mov
jle
mulps
pusha
jb
test
ficoms
jne
sti
jns
adc
and
mov
jb
sahf
xorb
mov
les
inc
jo
sbb
fisttpll
cmpl
cltd
cmp
jo
adc
clc
cmp
loopne
push
xchg
dec
mov
jl
int
jo
mov
pop
mov
insl
adc
js
in
fidivs
mov
dec
in
pop
adc
adc
xchg
cwtl
mov
push
popa
add
pop
add
jb
sbb
lcall
hlt
mov
push
sub
jo
jmp
insb
jle
data16
xor
mov
push
loope
clc
pusha
jo
sbb
outsl
jo
inc
jle
push
jne
mov
and
jecxz
fld
jo
add
sbb
jo
stos
call
in
popf
insb
js
mov
xchg
adc
cmp
cwtl
cmp
add
jns
or
por
jp
push
test
sub
mov
and
fstpl
add
xor
jo
in
jg
jbe
incb
jno
jo
mov
cmp
adc
jo
pop
cli
shrl
bnd
roll
call
je
test
nop
in
out
xor
pop
mov
mov
mov
cmpsb
lea
loope
jo
aaa
add
push
or
repz
insb
cmp
fldenv
adc
jp
pop
addb
push
dec
jae
jle
sbb
mov
push
jg
push
jp
inc
lea
pop
pusha
jno
roll
jo
cmp
es
mov
add
pop
popa
jo
outsb
jno
xor
xchg
ss
cmp
js
fsub
aaa
push
mov
insl
mov
xchg
jo
xchg
mov
fmulp
stos
cs
movsb
arpl
xorb
inc
popf
pop
sbb
inc
xor
or
push
adcl
jo
sbb
dec
incb
xor
pushf
cmp
clc
nop
adc
mov
xchg
xchg
xchg
in
pop
jecxz
pop
xor
je
jge
cmpsb
data16
sahf
xorb
add
jo
add
loopne
repz
dec
jp
maskmovq
idivl
jo
fadds
dec
insl
mov
push
pusha
mov
xorb
xchg
pop
imul
sub
and
int
jo
fdivrs
test
xchg
mov
int
mov
inc
rorb
push
mov
outsb
fs
popa
lds
movsl
or
andb
jo
fdivrs
or
shl
xchg
xor
clc
in
test
mov
nop
loop
fdivl
repz
or
xchg
dec
push
gs
cmpb
leave
sbb
mov
cltd
addr16
mov
imull
nop
add
jns
xchg
sahf
bswap
je
outsb
pop
lret
jae
insb
jo
lods
cmp
xor
aad
cs
je
push
mov
mov
gs
lahf
push
xchg
or
jns
sbb
dec
cmp
insl
orb
test
test
xchg
lods
insb
dec
xchg
loope
jmp
nop
daa
jo
ja
jnp
mov
and
sti
pop
and
imul
cwtl
lods
bound
push
jo
cmp
cmp
outsl
insb
popa
ret
aad
jo
sub
jp
cmc
insb
int3
fwait
test
mov
jo
adcl
je
ucomiss
cmp
and
pop
sub
mov
dec
jmp
add
jns
add
outsb
push
mov
dec
lods
sub
jmp
xchg
jo
dec
xor
imul
or
lds
dec
add
inc
inc
sbb
xchg
mov
cmp
adc
cld
fucom
jo
push
aad
icebp
fmull
push
sub
lcall
lret
push
and
jecxz
inc
sbb
push
mov
jae
scas
insb
inc
imul
push
jo
and
sbb
lods
adc
inc
lret
das
je
add
push
adc
sbb
xor
pop
and
aam
push
das
cmp
jo
in
out
push
cmp
and
xchg
sub
add
xor
xor
fiaddl
sahf
in
jb
jo
gs
hlt
mov
js
mov
out
mov
push
outsb
sahf
cmpsl
mov
push
mov
int
jmp
shlb
rorl
sub
mov
or
fimuls
sbb
cmc
xorb
addl
mov
or
lock
jbe
jl
xchg
mov
jp
jmp
sub
push
jmp
test
mov
xorl
adc
jl
divl
out
cmpsb
jo
clc
fnstcw
xchg
mov
mov
jo
popf
xor
fdivs
jmp
cs
imul
leave
jns
icebp
mov
sbb
rcll
stc
xchg
jo
xchg
rclb
pop
fistl
add
and
mov
imul
cmp
dec
loop
mov
xor
fistps
leave
ljmp
fsts
inc
aam
popa
sbb
jbe
jl
sub
imul
xor
mov
int
out
sti
je
sub
and
cwtl
je
sub
testb
pop
cld
jno
add
loop
fs
jg
jnp
push
adcb
cmp
ret
mov
push
je
leave
and
sub
jo
adc
addr16
insb
daa
push
mov
sbb
js
jnp
jg
xchg
mov
in
popf
adc
loope
push
inc
pop
fdivl
mull
js
jmp
andps
lret
orl
jne
in
jo
mov
lods
push
cmp
popf
sub
js
add
sub
jo
sti
pop
xor
fwait
insl
inc
jo
cmp
rorl
xor
cs
je
sbb
or
jo
testb
fnsave
and
fsubp
cmp
cmp
out
mov
inc
jbe
fdivl
mov
leave
in
jo
int3
stos
in
or
mov
inc
xchg
xchg
sub
jne
xor
lods
fbld
inc
sub
jo
jp
push
popa
pop
loopne
cs
repz
icebp
jo
iret
fwait
mov
jg,pn
dec
sahf
aad
inc
mov
outsl
lock
xchg
cld
inc
sbb
pop
or
aas
push
dec
mov
add
fsubp
mov
adc
jle
sub
repnz
mov
jno
cld
adc
lea
outsl
jae
inc
rorb
xor
scas
cwtl
mov
or
pop
fbstp
xchg
aas
into
dec
cmp
inc
mov
int3
sahf
dec
bound
or
je
sub
rcrb
outsl
push
out
mov
imul
adc
scas
cltd
or
inc
shl
pusha
xchg
xchg
jns
dec
dec
ficoml
sbb
add
lret
mov
cwtl
xor
cmp
xchg
aas
arpl
outsb
rcr
or
dec
fistps
insb
out
pop
leave
data16
xor
push
sbb
sub
into
sbb
or
mov
push
fldl
icebp
inc
loopne
add
pop
mov
jo
xor
jae
mov
fisttpl
cli
dec
dec
push
sub
cmp
scas
nop
cmpsb
lahf
pop
out
rep
or
rcl
fadds
icebp
mov
jle
sbb
fwait
mov
enter
test
aaa
mov
imul
sub
adc
or
sub
adc
pop
pop
dec
add
fnstenv
mov
fsubrl
in
cmp
cmp
aaa
cld
inc
jg
fbld
imul
testb
shll
ja
imul
mov
and
adcb
lock
sbb
lods
mov
fsubrp
xor
push
ss
adc
test
mov
dec
jb
sub
push
dec
repnz
jb
sbbb
or
stos
push
and
push
lock
jecxz
push
mov
lahf
daa
jb
fcmovnbe
daa
insb
or
jno
insb
hlt
insb
sbb
jp
inc
sub
mov
hlt
pop
loope
adc
inc
dec
inc
inc
push
mov
incl
lahf
dec
shll
inc
insb
shr
push
adc
cmp
aas
add
into
push
sub
pop
jo
std
gs
and
sbb
mov
xor
or
ret
lods
lea
and
cmp
adc
arpl
sahf
data16
push
rcrb
loope
sub
iret
or
loope
rolb
dec
mov
cmc
sub
icebp
cltd
push
mov
es
sbb
js
cmpsb
arpl
cmp
test
mov
xchg
shrl
xor
icebp
pop
cwtl
jl
mov
jae
cld
lret
repnz
pop
sarl
lods
adc
xor
iret
shrb
test
stos
pop
sti
xorb
cwtl
stc
ret
std
xchg
pop
hlt
sahf
gs
in
jae
xor
pop
into
xchg
inc
shll
prefetch
insl
test
das
shl
dec
into
stos
add
loopne
dec
or
sub
push
push
sub
sti
and
dec
add
out
int
in
fistps
imul
push
outsb
cmp
pop
pop
fiadds
repz
xor
ljmp
aad
icebp
wrmsr
jne
test
jno
nop
mov
inc
xchg
das
cmp
dec
dec
sub
push
scas
js
pop
push
aad
push
or
mov
and
cld
in
arpl
sub
mov
mov
adc
xchg
sub
adc
std
bound
dec
push
xor
leave
into
fwait
xadd
std
cwtl
cs
sub
xchg
or
sbb
cmp
mov
fidivrs
std
xchg
push
jg
xor
or
jae
out
insl
loopne
data16
jle
out
push
cmpsl
or
cmp
outsl
fiadds
fsubrl
flds
popa
jge
sbb
and
data16
push
cwtl
and
icebp
loopne
ret
fucom
pop
sbb
or
sbb
rcr
jmp
jl
sub
imul
jbe
adc
mov
pop
push
out
push
lds
dec
jo
jmp
cwtl
adc
xor
jo
stos
sub
repz
das
aam
xor
rorl
xchg
movsl
fmulp
xchg
cmp
and
jo
sbb
jge
psraw
and
jno
ljmp
lahf
push
sub
cmc
jo
stos
cli
mov
andps
jo
stc
and
jae
jo
xchg
lock
cmp
xchg
cltd
pop
push
push
nop
mov
push
cmpsb
imul
adc
inc
sbb
out
cmp
jo
mov
adc
jo
fdiv
pop
imul
ret
jae
lahf
jl
mov
loop
cli
mov
add
pop
in
jns
jo
cmp
jnp
rcrb
adc
add
jbe
into
lcall
fildl
orb
sub
cmp
sub
rcr
jb
jle
cmpsl
pushf
test
pop
jno
add
mov
in
pop
stos
repnz
xchg
or
cld
mov
sub
in
mov
jle
bound
jo
or
jmp
mov
je
insb
jne
inc
cmp
sti
push
mov
and
test
cld
push
rorb
mov
xorb
jne
mov
stos
jo
sbb
push
aad
gs
jmp
mov
pop
jo
mov
push
jo
ret
or
js
scas
popa
jo
imul
sbbb
enter
sbb
pop
push
mov
and
das
test
mov
jae
pextrw
xor
out
jl
push
inc
pop
jo
data16
adc
mov
jo
jg
jge
outsb
into
mov
repz
mov
js
jo
fidivs
ljmp
pop
push
inc
in
stc
ja
stc
ds
add
inc
dec
bound
jo
imul
jno
add
push
inc
lock
mov
xor
xor
scas
inc
push
enter
dec
lcall
int3
je
loope
addr16
xchg
pop
xchg
adc
cmp
jns
jo
sbb
xlat
jl
mov
lret
jo
xchg
popa
pop
push
das
jo
inc
adc
xor
out
mov
xor
ret
pandn
push
push
shrb
push
jae
push
popa
jb
scas
in
aas
or
adc
notb
sbb
sub
fisttpl
lods
xor
nop
cltd
dec
dec
subb
js
rcrb
ds
int
and
adc
addb
fdivs
adc
mov
add
xor
sub
cmp
jmp
cmc
mov
daa
jp
loop
xchg
or
push
xchg
xor
xchg
cmp
mov
arpl
popf
dec
jo
hlt
les
jo
push
mov
push
jne
aaa
adc
clc
mov
xor
adc
pushf
sbb
xchg
test
aaa
push
int3
outsl
push
push
shlb
cli
sub
lcall
mov
pop
jo
mov
sbb
and
jmp
das
popf
shll
mov
mov
ds
in
cmp
cmpb
push
cmp
dec
pop
pop
pop
hlt
mov
jae
nop
add
xchg
inc
in
jno
subl
lods
jne
aad
gs
jo
loope
and
xchg
scas
dec
jge
add
cmpsw
shlb
mov
mov
cmp
movsb
mov
push
jmp
jo
ficomps
cli
test
mov
jge
or
adc
pop
add
gs
jae
mov
inc
mov
push
mov
into
ret
rorb
call
push
pop
mov
jno
adc
enter
sub
xor
mov
jo
pop
stos
aad
iret
leave
mov
jmp
in
ret
movsb
arpl
fidivl
inc
fwait
mov
test
xchg
jo
or
mov
gs
imul
mov
out
stc
xchg
mov
sbb
cltd
push
imul
test
outsb
xor
xchg
mov
and
fcmovne
nop
pop
mov
stc
sbb
jl
mov
jo
mov
mov
cmovb
adc
arpl
in
push
and
mov
fwait
sbb
aad
mov
sub
in
jo
out
daa
or
enter
jae
xchg
pusha
add
outsl
mov
je
bound
pushf
sarb
aam
inc
addr16
lods
push
xchg
fcoms
outsb
sbb
rcrb
jmp
das
dec
xchg
mov
outsl
insb
in
mov
int3
pop
sar
jno
aam
arpl
pop
std
push
adc
cmpsb
adc
cmpb
popl
mov
adc
mov
pop
and
gs
push
fisubrl
xorl
ret
jo
xor
xchg
jo
jns
push
lock
pop
jae
jo
sti
push
push
and
jl
jle
jo
fwait
in
add
mov
cmpb
cmpsb
push
iret
jp
fisubrl
jle
mov
xor
addl
jmp
mov
dec
lds
jo
jl
gs
js
push
imul
nop
xchg
jmp
stc
push
push
arpl
mov
in
jb
sub
xchg
ret
fs
rclb
mov
mov
mov
push
icebp
repnz
sub
bswap
mov
push
jp
xchg
ror
cs
dec
out
mov
jp
negl
fwait
push
or
decb
sub
insb
cltd
lds
in
insl
js
sbb
xchg
push
push
dec
adc
cmpsl
stos
sub
test
jle
ret
js
and
lock
js
push
lea
xchg
addr16
xchg
push
mov
pop
jge
int
loopne
or
add
ss
imul
mov
ret
sbb
jno
insb
pop
xchg
or
divl
cmp
add
mov
outsb
out
mov
mov
dec
adc
call
adc
je
imul
out
int
std
fldl
mov
das
in
in
cmp
xor
orl
pop
push
call
jecxz
out
or
adc
clc
or
es
pusha
pop
sbb
cwtl
test
lahf
rorb
dec
xchg
push
mov
popa
ljmp
add
cmp
addb
popa
into
pop
jo
fdivrs
call
jo
repz
or
cmc
mov
mov
jbe
lods
dec
jo
dec
push
sbb
push
pop
test
and
cmpsb
jge
ret
and
cmc
int
inc
mov
inc
sbb
xor
jo
push
inc
pop
mov
jno
into
xor
js
sub
bound
je
cmp
cmp
inc
jp
xor
jno
pop
and
jo
pop
ljmp
mov
cmpsl
movsb
subl
jnp
not
mov
sub
je
mov
dec
jle
cli
fnstcw
jo
and
xor
jo
dec
sub
rcll
clc
jo
popa
mov
mov
lea
push
or
and
cld
jle
sarl
push
dec
push
sub
outsb
imul
mov
jo
cltd
jmp
cld
xor
xchg
nop
rclb
jge,pn
mov
jo
sub
jle
jo
jmp
jmp
jo
into
and
xor
push
dec
stc
or
push
aad
cmpsb
jo
xor
js
and
adc
dec
pop
aad
int
xlat
enter
adc
cmp
xor
rorb
cmpsl
test
or
fsubrs
leave
pop
test
xchg
pushf
or
movsl
jmp
icebp
xor
mov
int
out
fstpt
popf
sbb
lods
xor
adc
enter
jo
push
into
shrb
mov
mov
mov
jecxz
imul
movsb
xchg
pop
cli
ljmp
dec
sbb
js,pn
pop
cmp
fs
out
adc
push
mov
jne
cld
jo
fsubrl
mov
repnz
pop
cmpsl
jae
jno
mov
shlb
decl
divl
cmp
xlat
stos
xrelease
jo
into
adc
jns
sbb
xor
out
sub
xchg
jecxz
loop
je
jo
xchg
adcl
fwait
icebp
scas
push
test
test
repnz
popa
sub
jo
testl
adc
sbb
ret
ret
or
mov
out
in
int3
lcall
and
daa
jbe
jno
pop
jo
out
shr
ret
stos
xchg
cltd
jge
push
mov
pop
jns
cs
sbbb
fnstenv
cmpb
push
icebp
push
cmp
push
insb
xchg
lods
jo
cmp
lcall
pop
fdivs
in
repnz
xchg
jo
std
adc
shll
ret
sbb
xlat
cmp
xor
mov
jo
repz
lods
jo
out
pop
scas
add
or
into
mov
jo
dec
out
mov
sbb
pop
in
imul
sarb
scas
xor
jo
test
pop
xchg
sub
adc
out
insb
mov
and
cmp
fs
jo
dec
jl
jmp
rcl
imul
push
dec
inc
ds
mov
sbb
sbb
jbe
cltd
jo
mov
mov
push
add
cmpsb
sub
out
je
call
sbb
xorb
pop
and
je
jo
mov
iret
jecxz
jnp
jo
das
mov
jns,pt
int3
shlb
ja
sbb
fwait
popa
js
add
imul
push
fdivs
cmp
jo
stos
je
add
or
and
mov
stc
ret
je
mov
and
cltd
cmp
mov
dec
orb
imul
mov
xchg
xor
push
or
cwtl
daa
pusha
sbbb
cmpl
test
iret
adc
shlb
cli
inc
jl
adc
jo
cld
or
push
jo
jp
or
inc
mov
fisttpl
sti
add
push
test
xchg
cmp
and
jo
sti
dec
mov
mov
fidivs
stos
mov
sbb
pop
jge
and
stc
movsl
mov
loope
mov
sub
test
cmpsl
pop
out
jo
push
lds
push
test
jo
xchg
jo
mov
aad
addr16
push
cmp
dec
daa
adc
rcrl
mov
pop
orb
xchg
dec
fsts
xorl
scas
adc
jp
das
faddp
xor
mov
movsl
repnz
cmp
fstp
jno
jo
outsb
or
cmp
xchg
leave
popf
ja
loop
gs
cltd
pop
cmc
jo
mov
cmpsl
nop
int
leave
rolb
in
or
push
pop
jo
sbbb
sub
xor
inc
or
jge
adc
mov
movsb
lock
push
lds
and
add
pop
push
jo
das
pop
fstpt
xchg
jo
negb
mov
test
loop
sbb
jo
lods
dec
sub
mov
in
mov
bound
movsb
jo
jecxz
lods
insb
mov
pop
jo
hlt
daa
shll
jne
int3
sahf
inc
stos
sub
imul
scas
data16
inc
jo
xor
sti
repnz
add
sbb
je
cmpxchg
in
cli
jp
out
mov
push
and
popa
js
fwait
mov
nop
jo
jmp
movswl
pop
out
jno
outsb
faddl
out
push
movsb
cltd
jo
rcll
lods
jo
addr16
std
jne
ret
leave
or
out
xchg
fmull
inc
jo
enter
outsl
or
testb
filds
cmpsl
lea
add
jbe
push
js
mov
adc
sub
rol
aam
push
scas
add
imul
jo
pushf
mov
or
cmp
jo
mov
inc
leave
popf
add
rorb
lcall
test
test
sub
mov
outsl
mov
fs
dec
jo
mov
jne
xchg
test
roll
fucomip
fisttpl
testl
push
jecxz
mov
pop
sbb
jmp
inc
std
inc
outsl
clc
rcl
repz
dec
adc
in
push
ss
push
int
sub
fisubl
xchg
cmp
pop
sbb
arpl
lods
test
add
movsl
jno
sub
out
gs
rorl
push
or
add
fsubrs
in
push
xchg
das
push
scas
bound
std
lret
adc
mov
mov
test
push
jmp
sub
icebp
hlt
push
js
rclb
mov
addb
or
pusha
jo
sti
pop
pop
lret
and
stos
cli
jo
sbb
jo
lret
dec
jne
aaa
out
dec
jae
pop
bound
and
adc
add
insb
mov
dec
bound
sbb
jge
jo
das
sbb
push
push
insl
shl
fmull
popa
jnp
in
popa
sbb
jge
lret
jo
push
pusha
fwait
mov
daa
std
push
mov
js
fdivp
fldcw
jo
and
push
and
jo
nop
xchg
or
lcall
push
cmpsb
jae
js
xchg
pop
push
into
arpl
mov
out
icebp
aam
jo
mov
add
dec
sub
arpl
divb
sub
push
or
or
dec
int
dec
daa
jo
rep
movsl
rorb
cmp
fistpll
push
jle
mov
sbb
sub
dec
jo
cld
jb
jo
rolb
enter
bound
xchg
sbb
jb
movsb
xor
popa
jp
or
jo
jnp
dec
inc
std
xor
jbe
jle
jo
or
or
lcall
rcrl
stos
or
fisttps
push
lcall
fldenv
testb
jns
jo
mov
xorb
pop
jmp
psraw
jno
fcomps
mov
xor
bswap
push
jnp
je
mov
jmp
outsl
hlt
ds
int
jo
adc
movsl
imul
mov
cmp
incl
loop
and
or
jbe
push
scas
mov
xchg
jb
dec
add
js
inc
scas
sbb
lret
movb
or
jo
lahf
cmpsl
mov
stos
std
xchg
fwait
and
sbb
insb
jo
mov
push
bound
jne
or
mov
addb
daa
xor
loop
loop
testl
pop
lcall
xor
sti
fs
and
cmp
jp
mov
sti
fwait
sbb
loop
gs
popf
jo
jae
pop
mov
fdivrs
scas
cs
into
shll
popf
lahf
sti
jo
outsb
fdivs
std
and
je
dec
fucomp
shlb
or
lcall
sbb
add
outsb
jg
add
scas
sub
jo
pop
xor
and
push
sbb
xchg
add
jo
pop
daa
push
inc
xor
das
test
adc
lock
push
in
cmpb
cmpsb
pop
nop
pop
enter
lds
or
jo
inc
fs
and
popf
lcall
ret
xchg
mov
cmp
add
fildll
je
jb
mov
pop
ds
js
jg
push
loope
jo
loopne
xor
fiaddl
scas
mov
push
fs
mov
daa
rcrb
aam
arpl
sub
mov
outsl
adc
movsb
or
jmp
fiaddl
and
lret
nop
fldt
jge
push
aam
dec
int3
or
repnz
fisttpll
xchg
mov
push
xchg
adc
and
mov
stos
aaa
scas
pop
jl
lcall
mov
jo
shll
jno
adc
jo
ret
psraw
cmp
sub
xor
lret
pop
add
mov
xchg
push
lret
pop
jae
cmp
jb
jo
in
test
out
xorl
pop
in
sub
sbb
push
cmp
add
dec
inc
ja
arpl
ret
lret
cs
loope
loopne
inc
addb
jo
lods
in
jnp
out
push
and
sub
aas
cli
cmp
loope
jo
std
lock
pop
jns
xorb
adc
jmp
push
testl
leave
stos
mov
enter
ss
push
mov
or
push
leave
sbb
sbb
imul
mov
adcl
or
nopl
mov
jl
push
mov
xorl
mov
fs
call
push
add
cmpsb
int3
stos
jo
and
scas
jnp
in
adc
sub
dec
mov
lret
inc
inc
push
cmpb
shll
xor
test
mov
incb
jae
or
and
call
mov
jo
aad
dec
jle
cs
gs
dec
jo
xchg
out
push
fidivrs
jo
out
pushf
xchg
fistpll
jo
int3
out
pop
aam
les
sub
insl
push
je
rcl
test
jo
xchg
add
js
in
or
and
popa
cltd
sub
xchg
push
cmp
ficoml
add
cmp
sub
std
sub
adc
popa
sub
repz
rclb
dec
inc
jo
int
stos
inc
push
cltd
xchg
nop
dec
mov
pop
and
mov
jno
sti
gs
push
in
test
js
sbb
inc
jne
jno
jo
dec
inc
xchg
dec
and
push
comiss
out
pusha
js
js
cs
loope
cmc
cld
push
fisttpl
imul
or
std
jo
add
jb
sbb
ret
or
mov
fsub
sub
in
aas
int
inc
lret
jo
inc
mov
dec
mov
fsubrl
rcr
inc
lods
jo
adc
dec
inc
out
test
ret
pop
inc
xchg
jb
push
shlb
sahf
mov
xor
aas
call
lods
mov
daa
and
cmp
sahf
sbb
fisttps
cld
push
stos
adc
loop
mov
inc
icebp
andb
dec
mov
dec
js
aad
pop
cmp
inc
pmulhuw
mov
xchg
repnz
jo
mov
lea
leave
adc
cltd
insb
xor
inc
scas
push
pop
dec
repnz
xor
inc
stc
lods
dec
sub
rorl
xchg
jo
test
sbb
data16
fsubs
hlt
jne
idivl
js
dec
lods
enter
pop
lods
xor
movsb
jnp
ja
jo
rcll
push
mov
into
sbb
push
sub
xorb
arpl
xlat
iret
imul
xchg
sub
ret
cmc
aas
mov
clc
adc
aaa
movsb
xor
popf
and
mov
shrb
jae
data16
fcomps
in
in
cwtl
loopne
lods
cmp
insb
xchg
push
shlb
subb
jge
jo
sbb
xorb
cmp
lret
sub
xor
int3
mov
jo
mov
xchg
pop
sub
rolb
mov
jo
xor
loopne
or
in
jp
lods
icebp
in
cli
cs
jo
inc
xchg
mov
js
pop
shlb
addb
stc
mov
dec
add
aad
jo
push
movl
inc
cmp
mov
or
data16
jo
loope
dec
popa
inc
and
jae
addb
ss
pop
jo
adc
aam
shl
cld
subb
fs
mov
jne
mov
insb
cmpb
cmp
fdivl
in
adc
cmp
mov
enter
lret
xchg
lea
ss
mov
jg
fdivl
jo
mov
mov
fisubs
push
js,pn
test
fistpl
mov
push
jno
mov
mov
mov
mov
leave
lea
cld
in
and
xor
and
sub
and
out
mov
mov
rorl
scas
insb
xchg
pop
pop
dec
jo
mov
cwtl
inc
inc
ret
cmp
repz
jo
adc
xor
xchg
cwtl
out
or
sbb
addb
jo
mov
mov
fnstenv
jo
xchg
cltd
call
into
cwtl
push
or
jo
push
out
loopne
out
daa
psubsw
pop
jge
je
orb
jo
jbe
sbb
mov
and
push
jo
std
mov
mov
cli
xchg
xor
pop
rcr
jo
fucomi
dec
imul
jo
mov
notb
add
rolb
pushf
js
fdivrl
test
out
xlat
cmp
pop
mov
jp
jno
movsb
jo
dec
add
sarb
push
and
inc
sar
leave
mov
dec
sahf
jo
push
sbb
fadd
mov
in
add
inc
and
jo
rcrb
dec
fimull
or
cmc
mov
or
pop
sub
sub
insb
loope
dec
imul
imul
and
ds
pop
cmp
movsb
jo
aas
je
divb
xchg
leave
jo
in
push
in
pop
addr16
pop
jg
fldenv
daa
hlt
xor
jo
test
mov
mov
fisubrs
andl
xor
push
lock
xor
mov
or
sub
gs
adc
mov
bswap
testb
jl
mov
cmp
insl
rolb
ljmp
pop
push
xor
push
mov
mov
and
pop
pop
inc
fwait
inc
jmp
jb
mov
hlt
stc
subb
mov
adc
mov
mov
mov
and
aad
mov
or
mov
jae
xor
int3
rcrl
adc
or
arpl
je
cltd
xchg
jmp
xor
mov
push
xlat
loope
fs
cmp
imul
pop
sbb
fistps
push
icebp
cmpsl
push
mov
mov
pop
lret
and
lahf
push
data16
out
bts
sahf
and
jns
out
fs
shl
daa
or
jne
repnz
push
notl
mov
xchg
lcall
test
push
sub
and
cmp
pop
cld
push
mov
daa
hlt
push
out
sbb
jnp
aad
adc
add
and
dec
sbb
andb
int3
cmp
outsb
jo
and
pop
gs
cltd
mov
pop
packsswb
fnstcw
js
ffree
cmp
pop
add
xchg
mov
dec
push
pop
mov
jle
sti
sub
fbstp
cmpsl
repz
mov
in
push
pop
mov
push
jae
lahf
out
fildl
in
push
shl
test
arpl
call
lock
stos
das
mov
push
jne
pop
jle
push
cmpsb
ret
outsb
adc
pop
mov
ret
and
and
lret
lods
sbb
sahf
inc
icebp
enter
mov
inc
adc
add
lea
cmc
subb
push
sub
jae
mov
sarb
ja
xor
xchg
inc
repz
js
cs
pop
divb
mov
push
in
scas
arpl
fisttps
or
dec
out
js
sub
push
fwait
daa
pop
pop
bound
dec
or
imul
mov
lds
shrb
adc
lods
addl
push
cmp
cmc
jge
fidivs
jl
add
adc
sbb
cmpsb
fwait
jle
lods
jle
std
fiadds
in
lret
pushf
inc
cmp
fcomp
dec
adc
sub
imul
aas
mov
das
out
std
jae
and
inc
push
add
sub
ljmp
dec
mov
js
inc
xchg
iret
fisubs
mov
sub
aaa
xlat
jne
jae
pop
push
jge
enter
xor
jl
jecxz
jmp
push
add
dec
fisubrs
cmpsl
jmp
nop
rcr
xor
call
test
cmpsb
divb
sub
scas
imul
cmpsb
in
stos
cmp
movsb
fsts
push
call
imul
mov
or
jp
mov
jecxz
cmp
xchg
mov
xor
es
jle
pop
sbb
lock
in
and
inc
push
fisubrs
cmp
sar
aas
popf
in
mov
add
inc
push
inc
aas
mov
notl
out
arpl
or
das
jae
mov
das
add
dec
mov
xor
out
arpl
jp
push
jo
mov
adc
lods
mov
sbb
arpl
sub
xor
push
nop
out
inc
xor
push
mov
and
dec
adc
jae
add
lods
in
in
jle
and
pop
cld
adcb
mov
xchg
arpl
test
rorb
and
add
insb
sbb
lock
jge
xchg
mov
inc
aas
cmp
jg
in
out
mov
dec
lahf
jnp
mov
or
mov
data16
mov
js
xor
mov
xchg
jle
sarl
insb
adc
inc
mov
ljmp
pushf
add
gs
fcom
push
imul
shrl
lcall
sub
mov
outsb
sbb
dec
jo
fucomip
sar
imul
nop
adc
in
addr16
lods
aaa
scas
out
add
mov
movsb
rorb
dec
sti
hlt
cmpsl
and
mov
ja
or
sti
mov
cmp
sti
mov
leave
loope
push
outsb
sbb
push
pop
in
sbb
xchg
push
fs
push
mov
fwait
stos
sbb
ja
jns
inc
push
push
or
mov
outsl
or
lret
aad
sub
outsl
loopne
mov
add
test
pop
fcoml
add
leave
push
xchg
loope
fsubr
fildll
mov
mov
inc
rol
fldenv
daa
lods
cltd
mov
sbb
xchg
pusha
cltd
jns
mov
insb
mov
sarb
scas
in
cmpsl
push
in
ficomps
xchg
fstps
jl
insl
mov
stc
mov
add
and
cmp
push
pop
movsb
or
push
jns
adc
mov
arpl
jmp
push
add
pop
sbb
xor
inc
ret
lock
cmp
or
out
fdivp
std
push
pop
enter
sbb
sbb
sahf
test
mov
jle
ds
push
xchg
lock
ja
push
les
mov
add
push
push
subl
mov
pop
mov
add
js
add
pushf
xchg
mov
jae
mov
outsl
cmpl
sub
lahf
xchg
and
imul
daa
xchg
mov
and
cs
push
icebp
fmull
insb
out
shll
aas
lods
jp
dec
fldenv
push
adc
mov
inc
pop
push
push
clc
push
ret
sub
mul
dec
inc
xor
push
pop
inc
sub
push
clc
cltd
in
or
cmp
es
jno
or
outsl
mov
push
pop
xchg
dec
push
test
call
and
push
dec
jns
xchg
cmpsb
xor
mov
cmc
xchg
jg
out
pushf
iret
mov
loopne
and
sbbb
jp
or
add
sbb
rcll
imul
sarb
pop
mov
xchg
sub
jns
jo
es
stos
lcall
ss
loope
mov
daa
adc
cwtl
dec
outsb
in
cli
sub
cmpsl
inc
iret
lds
sub
jg
jo
xor
hlt
arpl
dec
add
mov
fbstp
cmp
sub
add
pop
jo
outsb
rcrl
dec
cmpsl
or
dec
jmp
nop
test
xchg
addl
insb
fisttps
push
push
mov
nop
cmp
jnp
add
push
loop
jp
je
enter
js
mov
cvttps2pi
push
xorb
lret
sub
adc
sbb
pop
pop
lds
adc
mov
mov
mov
jo
inc
rorb
mov
sub
in
sub
adc
je
enter
jmp
movl
sbb
sbb
js
xor
pop
jo
pop
push
ret
sbb
dec
out
mov
push
out
std
rolb
adc
data16
dec
or
dec
jno
jo
fwait
mov
mov
jp
inc
in
mulb
jo
xlat
sbb
ret
fcom
jo
icebp
inc
xchg
adc
sub
pop
jae
lret
cs
push
bound
rdrand
sti
dec
cmpb
mov
bound
and
roll
mov
cmp
lcall
dec
lahf
jbe
xor
or
sbb
jmp
out
jecxz
dec
jmp
movl
xor
cmp
sub
adc
jo,pt
stos
inc
push
test
pop
xor
jl
nop
je
and
and
push
aas
movsl
jo
and
add
ja
push
adc
mov
ss
push
push
repz
add
sbb
push
sbb
jo
lahf
or
cmp
pop
nop
jb
mov
sbb
jg
rol
filds
cwtl
jo
into
dec
shll
pop
pop
jo
cmp
loopne
xchg
sti
xorl
sbb
js
or
loope
lock
push
add
mov
js
add
jo
sets
loopne
dec
jo
push
pop
test
and
and
orb
jge
inc
mov
pop
and
mov
fcmovnu
or
cmp
cmc
jo
add
jae
shl
xchg
mov
pop
jo
xchg
ds
push
pop
ds
xor
push
and
pop
mov
mulb
jbe
test
test
iret
test
adc
lahf
mov
fcom
cmp
test
testl
mov
ss
cmp
sbb
jo
mov
pop
push
jo
add
inc
es
jo,pn
cmp
repnz
inc
jns
push
pop
jge
push
sub
scas
lock
sti
jae
dec
jo
jns
push
arpl
fbstp
int3
js
pop
xchg
dec
jo
ret
push
scas
or
pop
jg
sbb
jge
adc
jb
cmp
pop
cwtl
cmp
shll
add
cld
sub
je
and
scas
mov
jo
cmpsl
or
rcll
adc
sahf
lock
cld
jo
leave
cmp
jnp
mov
leave
cmp
jo
xor
push
bound
add
mov
pop
xor
nop
rcll
je
in
shll
pop
sbb
xorl
nop
cmp
scas
movsb
arpl
ficompl
mov
aaa
mov
pop
test
test
cmp
cmp
mov
maxps
shlb
movsl
jns
test
push
shr
movsb
pop
push
in
jmp
hlt
popa
loopne
sub
xor
gs
cli
lcall
pshufw
sbb
adc
rol
jo
mov
aam
popa
ljmp
adc
add
enter
xor
xchg
dec
cs
fs
pop
into
pop
jns
mov
aaa
add
je
arpl
jns
dec
outsl
jo
addb
push
cmp
cmpb
mov
jo
xor
js
cs
pop
jbe
sbb
test
sbb
repnz
jo
mov
mov
stos
popf
jp
mov
int3
imul
jnp
nop
dec
pop
inc
or
xchg
pusha
jecxz
push
jo
mov
lock
dec
xchg
and
ficoml
jo
add
insb
adcb
add
xor
jbe
jl
jns
fildll
arpl
enter
shlb
lds
sbb
insl
call
bound
jo
ret
sub
fmuls
cmpsb
xchg
jo
sbb
scas
inc
push
jo
iret
and
sahf
fdivrs
imul
sbb
mov
pop
cmpsb
jo
push
shlb
cmp
or
pxor
test
ljmp
sbb
dec
imul
jo
mov
or
sbb
xorps
push
and
and
popa
nop
xchg
or
int3
mov
dec
add
sti
jmp
aam
movsl
jo
push
jbe
arpl
loopne
jp
jo
fimull
sti
mov
push
cwtl
ret
cmp
mov
psubsw
loope
js
in
jo
add
ss
adc
js
jp
les
mov
dec
int
in
jo
push
imul
rclb
xor
stc
push
mov
es
or
iret
cmp
scas
push
lret
repz
push
push
jle
repz
nop
nop
std
jno
fiaddl
mov
ret
xor
jae
out
out
nop
push
into
inc
iret
insl
sbb
pop
test
mov
add
cmovae
sub
jno
in
test
and
aam
and
ds
je
xlat
cs
mov
lds
inc
mov
dec
ss
dec
les
stc
pop
nop
je
mov
aaa
jnp
inc
leave
addr16
fdivl
sub
mov
xchg
jo
dec
and
sub
rcrb
add
incl
jo
push
mov
clc
jo
cld
hlt
or
push
in
loop
jo
jge
cmpsb
xor
lahf
pop
jo
in
fsubrl
sar
lock
xchg
dec
cmp
js
adc
mov
fprem1
je
pop
jbe
xchg
jne
movsb
lret
mov
int3
into
sbb
subb
push
adc
xor
sub
int
pop
mov
orb
cld
dec
mov
or
shrb
call
sub
mov
fprem
fisttpll
hlt
lea
jo
int
jg
jle
xor
pop
push
jbe
dec
fwait
jo
inc
and
test
js
cmp
inc
aam
ret
dec
aad
jo
push
ret
inc
test
jo
rcll
cmp
push
xchg
xor
inc
jo
les
das
cs
cmp
ljmp
xlat
inc
stc
add
bound
pusha
dec
jnp
bound
popf
add
cmp
and
add
dec
lret
mov
arpl
ss
and
les
sarb
adc
or
push
jbe
xlat
jg
pop
add
jnp
addr16
mov
lea
push
imul
jo
pop
inc
dec
push
mov
mov
pop
cmc
addl
pop
adc
xchg
ret
xor
mov
mov
jne
sub
or
jbe
mov
jno
cmp
push
dec
jae
push
mov
mov
sub
jo
push
cmpsb
outsl
xor
data16
nop
xorb
pop
and
mov
popa
fldl
lret
jo
push
dec
outsl
mov
inc
mov
or
rorb
xchg
and
stc
testb
jbe
sahf
pop
or
js
mov
lock
and
dec
jns
cmp
push
jmp
push
push
popa
lock
pushf
fcmovbe
cmp
cs
dec
xchg
inc
int3
push
aam
in
fistpll
jns
jae
jne
dec
sub
je
daa
outsb
xchg
mov
dec
int
dec
test
pop
movsl
arpl
ret
inc
mov
xchg
inc
imull
out
shrl
xchg
out
inc
nop
add
sarb
xor
clc
loopne
inc
lock
sub
jo
lods
scas
lret
cmp
push
mov
sbb
jge
xchg
push
iret
stc
leave
inc
sub
jae
fs
arpl
mov
xorl
ljmp
jecxz
scas
push
xor
cld
repz
push
lea
pop
cld
nop
mov
in
arpl
pop
jb
outsb
fs
insb
lahf
popf
mov
in
ja
mov
push
fwait
lcall
inc
inc
outsb
insb
mov
push
cmp
insb
andb
push
test
stc
inc
insb
lock
call
xlat
aad
adc
int3
mov
andb
xchg
add
xlat
xchg
pushf
cmpb
mov
dec
call
and
out
ucomiss
int
loopne
dec
push
data16
cmpsl
jge
imul
in
fs
std
sarl
cmp
ja
inc
mov
arpl
push
loop
ficoml
rcr
pop
out
push
fisubrs
adc
lods
push
lcall
push
and
jle
and
jno
or
jne
cs
mov
jmp
and
add
push
or
iret
movsb
insl
xor
mov
ret
sbb
jge
adc
fimuls
jmp
scas
dec
pop
fbstp
fs
mov
xor
xchg
mov
mov
jp
lock
gs
es
insb
jnp
push
jbe
clc
mov
mov
adc
sub
fisubrl
jae
inc
jmp
fnstsw
cmp
je
popf
fdivs
cmp
pop
push
popf
adc
add
jg
cmp
fdivr
sub
pop
adc
sarb
das
push
mov
int3
clc
insl
xor
and
out
pop
adc
daa
lret
in
leave
jno
aas
mov
dec
xchg
fldcw
xchg
add
push
push
adc
adc
add
push
std
pusha
xor
inc
insb
loopne
or
loope
xchg
pop
cmpsl
cmp
rorb
pop
arpl
cs
shr
jle
inc
inc
xchg
pop
jae
shlb
or
insl
repnz
fcmovnb
fst
lods
imul
pop
iret
scas
pop
mov
mov
outsl
push
insl
loope
push
sub
xor
xlat
cmp
cmp
push
das
arpl
mov
outsl
mov
mov
inc
or
aam
lods
cmp
push
scas
jg
and
mov
pop
mov
icebp
frstor
clc
push
jmp
stc
xor
loopne
jne
dec
cmp
je
adc
cmpsb
ss
xchg
fimuls
add
sbb
cmp
cmp
out
les
adc
int3
mov
loope
inc
push
in
imul
adc
push
imul
push
fists
mov
lea
jmp
ds
incl
xlat
fadd
loopne
lock
repz
push
in
push
dec
mov
repnz
or
jge
outsb
mov
loopne
jge
ljmp
push
fs
or
pushf
adc
rorl
cmp
jle
imul
jae
mov
mov
xor
ljmp
inc
inc
and
loope
out
mov
std
pop
jmp
int3
push
jb
cmp
cmp
insl
sarb
dec
sub
push
pop
jo
mov
nop
repz
cmpsl
dec
notb
sub
mov
mov
loop
push
ss
push
jnp
test
add
lret
pusha
in
push
xchg
sub
xor
dec
cmp
jne
jecxz
cmp
dec
insl
add
outsl
js
movsl
aad
enter
and
add
jl
adcb
scas
xchg
xor
rcrb
sub
jl
sbb
jge
addr16
inc
dec
popf
addr16
es
xor
cwtl
sbb
push
imul
insl
mov
mov
stos
jmp
fmulp
psrld
jecxz
mov
ficoml
sub
xchg
call
jg
and
mov
in
pop
out
and
mov
bnd
subb
lock
push
or
je
aad
xchg
jne
dec
dec
add
sub
or
push
nop
mov
jle
idivb
or
lahf
aaa
sub
inc
cmovp
mul
push
sbb
sbb
adc
nop
pop
addr16
iret
xor
jns
imul
cwtl
push
insl
insb
icebp
mov
int3
mov
call
adc
imul
inc
lcall
out
ljmp
mov
pop
in
popf
jo
hlt
repnz
lock
mov
add
dec
push
pop
and
adc
jo
pop
pushf
mov
jns
aad
fs
push
gs
xchg
push
or
hlt
dec
addl
fiadds
inc
jo
add
nop
cli
jo
repnz
fbstp
mov
lret
inc
imul
mov
inc
cmovp
inc
dec
orb
xchg
cwtl
sbb
mov
jo
push
cmc
je
pushf
push
cmp
adc
jecxz
pop
xor
bound
jo
insl
outsb
mov
xchg
sub
div
out
mov
rcll
inc
enter
repz
nopl
jmp
lahf
mov
fdivrs
pushf
jle
jg
mov
aad
ljmp
xchg
or
scas
mov
xor
and
fs
cs
sbb
jo
inc
or
jo
adc
xor
push
pop
mov
jo
xchg
xor
xor
cli
neg
sbb
test
jo
xchg
shrb
jo
in
sub
jno
jo
sbb
addr16
cmp
jmp
dec
xchg
push
rol
in
jmp
test
arpl
jo
push
orl
xchg
add
andb
pop
outsb
inc
add
sbb
dec
in
bound
lcall
jns
imul
iret
sub
cmc
jo
jl
insb
or
sub
xchg
leave
shlb
or
mov
lret
jg
pusha
or
pop
jnp
aaa
jne
jo
clc
jp
sub
popa
faddp
out
mov
or
push
psubsw
push
hlt
sub
bound
xor
inc
subl
repz
ja
jo
scas
push
and
fwait
int3
gs
jo
adc
dec
js
jo,pn
xor
adc
sbb
into
jo
fildl
sti
mov
mov
mov
shll
fistpll
jo
fistpl
int
lcall
cmp
loope
out
rcrl
sub
jo
mov
mov
outsb
insb
mov
pop
faddl
cmp
pop
jo
pop
lock
addr16
add
outsl
mov
jae
pop
fiaddl
mov
in
or
jae,pt
push
xchg
inc
mov
or
fucomip
rolb
jbe
imul
xchg
sub
mov
cmc
add
pop
mov
dec
call
test
xchg
addb
sbb
sbb
shll
inc
les
xor
mov
and
insl
dec
pusha
lret
sub
bound
push
push
fwait
pop
add
sub
mov
out
fsubrl
adc
mov
jge
leave
pop
inc
xor
or
imul
jmp
jle
scas
jo
popa
jl
jno
scas
sub
outsb
inc
cmp
jo
fldt
jb,pn
popa
jo
pop
xor
ljmp
and
repz
xchg
pop
mov
int
mov
scas
js
jo
push
lods
xchg
jo
ret
das
cmp
mov
inc
arpl
call
jb
jo
outsl
add
jo
xchg
xor
mov
jmp
int3
in
fs
imul
mov
sub
nop
mov
push
jae
lea
test
push
jo
pushw
nop
jb
jno
jo
loopne
inc
dec
inc
dec
push
loop
jo
xor
aas
dec
fucomp
shll
xor
daa
xchg
push
icebp
jo
fcoml
xorb
in
mov
jo
pop
gs
xor
push
loop
aaa
mov
cs
scas
das
mov
inc
mov
sub
jecxz
in
and
dec
out
or
and
add
iret
int3
sahf
mov
es
or
loopne
mov
mov
adc
data16
push
cmp
or
ja
and
popf
inc
rol
pavgb
pusha
mov
addr16
add
ret
dec
ss
int3
jo
movsl
add
sbb
adc
pop
sbb
orb
inc
mov
repz
fwait
loop
or
fsubrs
jle
pop
jo
mov
add
ljmp
stc
xor
mov
jo
cmc
push
inc
jae
inc
jno
cmp
push
hlt
aad
mov
mov
sub
lea
cwtl
or
jne
js
nop
cmc
das
dec
mov
in
dec
push
rolb
add
popa
ret
xor
sbb
int3
nop
outsb
arpl
imul
out
add
hlt
nop
or
pop
scas
enter
lds
inc
add
cli
jo
and
int
or
add
pshufw
mov
pop
jno
stos
jo
push
push
cmpsl
lret
jo
mov
and
jo
jbe
pop
rorl
mov
jo
adc
popa
movups
arpl
in
andb
lods
jo
mov
push
push
push
fs
mov
xor
adcb
aam
lret
xchg
jo
outsl
insb
mov
jne
sbb
stos
dec
jge
gs
movsb
mov
xor
je
test
jle,pn
loopne
inc
test
pop
push
inc
xor
jo
fmuls
push
fsub
mov
xor
addr16
clc
xor
mov
or
inc
jb
jo
cltd
bound
or
in
adcb
jne
enter
filds
insl
in
test
outsb
jo
push
xor
mov
pop
inc
jo
enter
gs
push
rep
in
jg
jo
call
inc
and
inc
jno
lods
out
jg
adc
call
repnz
sbb
lcall
ss
ljmp
mov
jmp
je
push
aad
dec
mov
xlat
jo
mov
xchg
int
xor
nop
add
outsl
ffree
int3
jp
mov
lret
jns
ljmp
pop
pop
pusha
inc
sbb
jle
pop
leave
mov
imul
fmulp
fmuls
jg
pop
push
imul
lods
jo
dec
icebp
out
and
mov
inc
jo
xor
jbe
nop
fs
int3
pop
mov
bound
jo
sub
fs
inc
push
in
es
jg
dec
iret
testl
scas
or
jo
call
jo
mov
push
cmp
jns
enter
lret
push
jo
js
inc
sub
in
in
sbb
pop
imul
imul
bnd
adcw
adc
lock
repnz
adc
mov
xchg
mov
and
dec
push
popf
sub
leave
xorl
insl
out
lcall
mov
fs
dec
in
jo
loop
mov
mov
inc
fnstenv
mov
shl
mov
jge
jo
dec
jne
ret
mov
cwtl
mov
sub
and
xchg
scas
xchg
mov
lahf
push
mov
fnsave
mov
inc
lcall
mov
add
insb
pop
rcll
sbbb
scas
fdivrs
mov
cmp
inc
mov
popf
jo
movl
out
and
jecxz
and
jo
insl
dec
scas
add
clc
lds
and
cmp
dec
addr16
arpl
sbb
pop
or
repnz
xchg
loope
int
out
mov
or
aam
and
das
int3
xor
cld
dec
pop
cwtl
fwait
shll
pop
in
daa
push
mov
clc
loope
inc
bound
lahf
mov
vmread
sub
jle
loope
leave
inc
mov
mov
in
je
pop
je
jg
cmp
and
dec
push
xchg
ljmp
ret
lock
es
outsb
inc
adc
in
fbstp
adc
nop
jle
mov
jo
dec
iret
scas
jp
dec
push
imul
mov
sub
pushf
loope
pop
mov
jb
push
divl
pop
add
cmp
jnp
fwait
test
adc
fld
cmp
cmp
fwait
mov
mov
mov
popf
iret
in
or
jno
pop
addl
nop
push
nop
jp
ret
out
jmp
jo
adc
or
jbe
jo
jle
and
jo
shl
lds
or
xor
gs
jo
movsb
in
xor
dec
push
cmpb
xchg
rorb
jo
push
out
pop
jmp
pop
inc
lcall
mov
bound
jo
mov
xor
push
subb
cmp
push
loop
xlat
lods
psllq
push
mov
aam
or
into
push
aas
popa
add
push
jo
mov
outsb
div
xchg
mov
loop
lea
adc
je
lahf
xor
push
jo
out
loop
sbb
mov
dec
lods
pop
dec
sbb
inc
jo
test
daa
xorb
xchg
mov
lock
enter
lds
xor
sub
xchg
jbe
inc
mov
jo
sub
sbb
loop
das
cmpsl
inc
js
xchg
mov
ja
jle
jo
pop
imull
outsb
jge
and
cs
in
or
aad
test
jo
sbb
ljmp
movsl
mov
inc
sbb
jo
or
push
pop
dec
jnp
fsubs
gs
popf
sti
mov
push
xchg
or
inc
jo
out
in
iret
cmp
pop
cs
sub
pop
jbe
jo
mov
shll
loopne
call
mov
xlat
repz
mov
mov
push
hlt
mov
push
sub
sbbb
or
enter
jg
push
jo
in
cwtl
cmc
cs
xchg
cs
dec
mov
or
insb
clc
cmp
xchg
xchg
rorb
inc
mov
xchg
xorl
jl
cs
shlb
ja
lret
jo
jge
and
xchg
test
jbe
out
sbb
sti
sbb
mov
nop
fbld
jns
add
insl
das
jo
cmc
ret
mov
imul
jo
popa
pop
and
cwtl
dec
movsl
jo
inc
jmp
repz
sub
xchg
jle
jo
adc
dec
movsb
ret
dec
das
jge
das
xor
sub
shlb
lcall
jne
scas
insl
rcll
outsl
mov
jge
or
outsb
dec
divl
cbtw
int3
cwtl
jl
pop
ljmp
jno
push
inc
push
or
push
stos
or
data16
cld
ljmp
sub
repz
xchg
int3
orb
lock
push
xorb
sbb
cmp
push
pop
pop
cltd
int3
pop
dec
pusha
and
int3
jmp
movsb
add
jae
adc
aaa
add
dec
fsincos
add
jge
arpl
sbb
repz
pop
dec
fs
movsl
scas
cmp
and
js
shrb
outsb
cmp
test
lock
aad
mov
ljmp
data16
and
xor
push
mov
cmp
int3
xor
push
gs
mov
and
mov
mov
daa
add
divb
insb
jae
fildl
dec
fsubrs
test
out
idivb
or
rcll
mov
mov
hlt
rorb
ret
dec
mov
push
or
aad
outsb
test
push
adc
cmpsl
mov
test
bound
xchg
stos
inc
call
imull
popa
call
dec
je
dec
ret
neg
mov
jmp
ja
jle
or
andb
int3
cmc
lods
ja
and
pop
jecxz
imul
mov
xor
adc
fldt
fisubl
insl
hlt
xchg
push
mov
jmp
mov
push
sbb
je
call
mov
sbb
push
clc
push
test
add
scas
out
jae
dec
fucomp
data16
pop
test
pop
int3
sub
and
lods
fsubrs
inc
mov
call
fcoms
fisubrs
mov
lock
data16
inc
cs
es
out
rorb
les
dec
or
ljmp
dec
add
dec
push
xor
mov
ljmp
je
xor
cmp
cmpsl
jno
test
xchg
les
add
and
mov
pop
popa
sub
iret
or
or
mov
loop
insb
and
inc
push
dec
popf
data16
cmp
shrl
inc
xchg
mov
push
sbb
test
push
inc
cmpsb
fsubs
push
inc
jp
cmpsl
push
inc
pop
jnp
stc
lock
and
cmp
mov
rcrb
outsl
and
int3
mov
adc
mov
repnz
cmpsb
inc
mov
scas
fisubrl
mov
ret
dec
pop
lock
jo
stc
cmpsl
test
push
ljmp
push
pop
clc
imul
les
or
andb
mov
sub
imul
mov
data16
mov
add
cltd
pop
pop
push
jmp
fsubs
bound
nop
arpl
push
mov
lret
cmp
pop
call
dec
psraw
xor
mov
lahf
push
ja
imul
lea
mov
mov
stos
dec
adc
or
dec
jno
pusha
adc
xchg
push
mov
jne
sti
loope
or
psrld
push
pop
cwtl
rcrb
lds
das
sbb
cwtl
fsubrs
test
addb
jbe
sbb
adc
pop
pop
mov
and
movsl
adc
mov
or
notl
xlat
mov
negb
mov
insb
out
cmpsb
cmpsb
and
icebp
or
or
push
sbb
stos
jb
lret
sbb
lock
bound
ja
sub
into
pop
clc
pop
dec
push
cmp
cmp
pusha
arpl
mov
bound
ljmp
sbb
cmp
outsb
jmp
sti
pop
xchg
ljmp
andb
add
jg
sbb
aaa
pop
push
or
lock
jmp
std
sarb
call
flds
xor
inc
insb
sbb
in
sub
mov
pushf
rcpps
inc
call
mov
test
sbbb
add
mov
out
and
adc
mov
or
push
sub
loope
cltd
sahf
mov
das
stos
push
subl
movsb
mov
xchg
mov
jne
jp
mov
scas
or
dec
test
sbbb
jle
xchg
add
shlb
dec
jne
adc
aaa
out
std
xor
jb
lock
jns
push
cltd
das
mov
out
adc
imul
adc
xchg
sub
mov
shll
aaa
nop
sub
add
shlb
dec
jle
push
test
xor
cwtl
inc
es
mov
loope
gs
push
lret
cmpsl
pop
push
mov
rolb
addb
jnp
inc
out
mov
inc
jl
fs
lock
xchg
jae
sbb
daa
rorb
xchg
lock
pop
dec
idivl
pop
icebp
out
imul
in
mov
xchg
out
test
daa
jp
outsl
ficomps
mov
mov
stos
ja
cmp
jle
add
gs
das
and
jns,pn
call
jl
push
and
cmpsb
outsl
out
jo
or
fdivs
jno
jae
push
enter
sub
arpl
loope
xchg
jne
xor
test
dec
cltd
jg
or
in
scas
ljmp
into
jle
ret
lds
and
inc
lods
bsf
cmc
lahf
orb
fidivs
stc
sub
or
outsb
jle
idivl
mov
lcall
add
hlt
js
jns
mov
push
les
std
mov
cmp
sbb
sbb
repz
xchg
cwtl
sbb
push
sbb
scas
dec
stos
in
xchg
lock
bound
fimuls
sbb
push
fildll
xor
or
or
int
cli
dec
ljmp
mov
fbld
push
in
push
add
push
pop
mov
add
daa
jg
sbb
push
ficoml
bound
pop
mov
jle
fcoms
dec
pop
sub
imulb
lret
push
adc
jnp
cs
mov
ljmp
jle
or
mov
sbb
cmp
lret
xchg
jmp
loope
push
push
jb
xchg
jle
jl
repz
pop
dec
jae
jbe
mov
mov
xor
psubusw
repz
mov
mov
cmp
imul
sbb
ret
cmp
pop
pop
mov
sub
sbb
nop
mov
int3
push
pop
fwait
outsl
mov
fadd
cld
sbb
pop
adc
lock
inc
cmpsl
mov
rcrb
cmp
in
popf
int3
sbbb
jae
movsl
pusha
add
data16
xchg
sub
dec
jo
cmp
xor
xor
movsb
mov
insl
std
and
test
push
sub
insl
cs
xorl
imul
nop
ljmp
mov
lret
sarl
cmp
repnz
push
imull
hlt
jmp
mov
cmp
loop
cmp
push
arpl
mov
scas
cmc
cltd
icebp
mov
in
lret
call
xor
enter
mov
fiadds
lock
cmp
js
dec
ss
pop
rclb
and
mov
aaa
pop
adc
mov
xchg
pop
push
bound
or
call
xchg
fsubrs
xchg
clc
jle
fdivrl
in
aas
pop
mov
outsb
ret
fwait
push
test
cmp
fwait
mov
xor
in
std
adc
push
push
outsb
jae,pt
xchg
mov
xchg
jmp
lds
pop
test
push
std
ja
fs
jg
sub
add
mov
sahf
jmp
aas
movsb
inc
sub
mov
xchg
loope
add
cmp
rcrb
xor
int
inc
mov
popf
or
stc
pop
sub
stos
lcall
pop
lds
dec
mov
les
outsb
mov
mov
cli
cmp
mov
xor
pop
jo
or
mov
push
std
sbb
or
jo
push
shll
aam
jno
xchg
lock
mulb
push
lods
into
arpl
daa
pop
add
fcmovnu
jo
inc
mov
inc
and
cld
lock
xchg
push
sti
idivb
jo
ja
std
in
jo
enter
data16
lcall
push
xchg
xor
dec
lret
daa
pop
mov
pusha
xchg
movsl
jecxz
push
jae
sbb
movsl
sbb
arpl
sub
cmp
pusha
jl
call
inc
cli
and
sub
xor
mov
adcb
nop
jae
sbb
jae
in
imul
adc
imul
xchg
popa
dec
cmp
orl
shll
js
or
lcall
shll
jg
cmpsl
fnstenv
add
stos
cli
sbb
negl
cmp
dec
dec
mov
ja
or
push
ret
aad
push
mov
repz
mov
shr
fwait
orb
xor
aad
out
sti
insl
cmc
adc
int3
gs
sbb
aad
cs
notl
daa
add
add
cwtl
mov
scas
and
jo
mov
jg
in
xlat
out
cld
mov
push
jo
xchg
mov
icebp
jo
mov
ds
sbb
adc
aad
jo
repnz
clc
xor
leave
andb
xchg
leave
jo
pop
clc
pop
mov
mov
fwait
mov
jmp
pusha
jo
adc
xchg
nop
clc
jo
shrb
xchg
xor
jo
add
add
add
adc
insl
out
sub
mov
das
xor
jo
ds
cltd
lahf
jnp
sbb
repz
int
nop
inc
sbb
xchg
icebp
jge
cltd
movsl
in
or
imul
aaa
jo
sbb
fwait
inc
dec
addr16
lods
push
rcrb
leave
cmp
jo
sahf
loope
adc
ret
int
pop
push
shll
sbb
jo
mov
adc
popa
push
leave
lds
mov
pop
xor
cmp
lcall
push
mov
scas
fdivp
movb
jo
arpl
std
loopne
inc
pop
jo
xchg
push
addr16
test
mov
jnp
sub
out
loop
enter
scas
ja
mov
mov
mov
lock
icebp
cmp
in
lods
adc
rclb
add
loope
mov
cmp
icebp
pop
xorb
fildl
adc
push
call
sbb
daa
je
push
xor
fs
mov
ret
mov
fwait
pop
adc
roll
xor
pop
enter
jo
jnp
sbb
jo
ja
fldcw
out
outsl
pop
jo
add
mov
js
sahf
test
xchg
test
in
fmuls
or
les
mov
push
xor
scas
and
adc
daa
cmp
iret
scas
sub
xchg
jo
or
jo
cs
nop
xor
jo
push
jl
cmc
mov
inc
mov
pop
cmpsl
pop
inc
adc
push
jns
mov
cmp
in
add
in
ficomps
jo
xor
pop
pop
inc
jo
mov
fs
int
lds
add
leave
mov
rcrl
mov
aad
inc
pop
dec
or
fadds
popa
sub
sbb
jmp
push
push
imull
jle
inc
xchg
mov
jo
int3
cmp
sbb
cmp
loope
mov
cmpb
lock
fldpi
sar
push
and
inc
hlt
jo
pop
fstpl
xchg
jb
jge
popf
lahf
mov
lret
jo
aad
sub
mov
sub
jo
scas
push
mov
jo
inc
jb
inc
mov
or
cli
xchg
stc
addr16
xchg
push
cs
push
rcrb
fnsave
pop
les
cs
iret
cltd
gs
mov
push
jl
arpl
mov
push
pushw
mov
push
dec
dec
mov
push
xor
aam
hlt
mov
push
pavgb
orb
jo
aaa
bound
jo
xchg
push
fcomps
add
and
data16
stc
sahf
cmp
sbb
cmp
popa
jo
mov
js
jo
loope
shl
inc
loop
xor
cmp
arpl
rorb
mov
xor
jo
add
pop
xor
stos
std
out
cs
jo
stos
je
jmp
scas
xor
xchg
push
lds
or
cmp
hlt
pushf
dec
fistl
sbb
movb
mov
lret
add
js
mov
jo
in
xlat
mov
xor
jbe
cs
push
or
xchg
push
js
cmp
bound
jo
adc
push
xorb
hlt
or
stc
jbe
popf
xchg
fs
or
xor
inc
jo
jns
dec
aaa
ja
cmc
jo
xchg
repnz
mov
sub
test
sbbl
cmp
adc
xor
jo
bound
xchg
dec
sahf
jo
xchg
jg
pop
xor
xchg
jo
mov
dec
ret
sbb
bound
or
out
rolb
insb
mov
sbb
push
add
xchg
cltd
jnp
jl
sub
sbb
adc
mov
sbb
push
xor
mov
xchg
adc
cwtl
jnp
or
jo
push
mov
jne
add
dec
ficompl
lea
pushf
push
leave
fwait
sub
cmpb
fstps
jo
xchg
std
jnp
or
mov
or
jo
sub
out
mov
je
sbb
lds
mov
shll
jo
push
jge
jo
jmp
hlt
icebp
mov
sub
idivl
repnz
jns
jo
push
add
jne
into
ret
jo
mov
fisubl
mov
mov
mov
nop
jae
loopne
int
pop
leave
and
pop
jo
mov
incb
js
jo
or
fbld
push
mov
push
jo
test
pop
xchg
test
xor
out
mov
inc
and
and
js
and
add
mov
mov
dec
push
dec
lds
cltd
and
pop
lret
imul
sbb
xchg
insb
push
mull
push
int
sbbl
jo
imul
prefetcht1
movsb
mov
xor
sub
adc
sbb
fiaddl
inc
jle
jp
jo
lcall
in
fdivrl
in
aaa
inc
stos
adc
scas
subb
mov
push
mov
psubq
enter
xchg
gs
push
cmovbe
dec
outsl
fs
bnd
sub
out
test
jnp
push
aaa
mov
sbb
mulb
das
lea
out
aad
mov
cmp
jmp
int3
in
mov
jo
sahf
inc
cwtl
sbb
pop
jo
ljmp
addr16
in
sub
jo
adc
mov
mov
rclb
jo
inc
xchg
stos
or
pop
por
addl
das
push
mov
call
cli
jo
ds
out
fs
lret
dec
sti
shll
stos
jmp
sbb
mov
inc
sub
shll
fwait
or
dec
fsubrs
pop
jbe
clc
aam
jae
out
inc
or
cmpsb
cmp
shr
sub
push
punpckhbw
jo
pop
outsb
iret
push
sbb
mov
inc
lock
cmpsl
mov
fcmovne
shlb
data16
movsb
push
in
pop
xor
lahf
mov
jg
loop
bound
insb
stos
mov
dec
lods
jo
jb
stos
xchg
mov
inc
pop
movsl
cmc
cltd
cwtl
or
xchg
mov
nop
jb
xorb
pop
jns
jg
jo
or
inc
cli
jmp
xchg
mov
aam
push
push
jge
inc
pop
je
jo
sub
cmp
jp
jge
out
mov
adc
jne
xor
in
xorl
cmc
jae
mov
and
sub
jge
clc
jo
sar
in
fwait
push
dec
xor
add
daa
lret
push
test
ds
stc
sub
lock
test
jmp
push
scas
jo
xor
xor
sub
insb
pop
ljmp
shufps
sub
data16
shlb
cld
in
mov
rorb
arpl
xor
sub
dec
subl
in
push
sbb
aam
dec
lock
jae
arpl
jmp
or
xchg
lcall
xor
cmpsb
mov
sub
cmp
or
jo
outsb
scas
fwait
mov
sub
test
xor
ja
adc
int
push
dec
in
lods
jb
pcmpgtd
mov
js
loope
outsl
sbb
clc
frstor
mov
mov
pop
sti
push
adc
jmp
and
movsb
std
movb
pop
movups
or
shll
lods
xchg
out
clc
jno
mov
fwait
ljmp
inc
insl
stos
mov
pop
outsl
sbb
or
add
call
in
data16
cmp
dec
mov
pushf
scas
push
and
dec
add
stos
jecxz
inc
out
js
out
adc
shrb
jae
rcll
and
outsl
push
ret
fldenv
arpl
push
popa
jae
jle
jg
imul
push
cmp
add
adcb
mov
adc
call
xor
aad
into
shll
icebp
xchg
dec
inc
sbb
or
add
rorb
arpl
dec
cld
xlat
mov
fldl
lcall
daa
jl
or
xor
scas
popf
fcomi
insb
mov
mov
add
movsb
test
push
xchg
lock
loopne
jecxz
xor
lds
ja
push
ficoms
add
outsb
es
cmpsb
mov
mov
xor
pop
imul
clc
idivl
in
inc
cmp
insb
cmp
and
shlb
add
xchg
out
xchg
mov
push
lods
cmp
imul
outsl
insl
jmp
xor
xchg
inc
das
imul
cltd
mov
shlb
adc
insb
orb
popa
lds
sub
jb
jle
jae
rcrb
jl
cmp
jg
lock
xchg
fnsave
mov
imul
sbb
cmpsl
out
mov
add
and
std
cmp
divl
xchg
filds
lahf
cmp
stos
jmp
ljmp
aas
jno
inc
into
out
sub
adc
cltd
outsb
fimull
rorb
popf
aam
clc
test
jle
fistpll
jbe
sbb
arpl
jbe
paddusw
clc
inc
adc
cmpsl
sbb
rep
out
dec
mov
jno
jle
arpl
mov
pop
inc
sti
mov
push
adc
daa
mov
or
push
arpl
pop
dec
jle
mov
add
int
pop
fisttpll
test
testb
jmp
inc
add
outsl
out
push
jb
loopne
dec
inc
loop
rcr
pop
in
scas
fwait
or
add
inc
outsl
lret
scas
sahf
mov
arpl
and
push
jle
lret
adc
cmp
and
jae
mov
idivb
pop
sbb
aas
es
mov
arpl
imul
lods
jp
aaa
aad
xchg
adc
loopne
std
xor
mov
repz
add
and
jae,pt
data16
mov
dec
js
cmpsb
xchg
fstpl
int3
movsb
add
imul
repnz
adcl
push
fidivrs
test
scas
sub
repz
pop
imul
sbb
int3
shlw
popf
fistpl
outsl
test
jae
out
cltd
ja
in
imul
inc
or
mov
jle
jmp
dec
jno
pop
orl
push
inc
imul
push
sbb
pop
je
jmp
int
pop
fs
and
lods
adc
inc
mov
shlb
sub
insl
bound
inc
lods
xchg
add
xchg
sbb
push
or
stos
fistpll
push
leave
push
jae
mov
or
arpl
push
push
popf
cs
jno
addb
faddp
fsts
sbb
mov
enter
cld
push
fimuls
mov
sbb
enter
out
inc
adc
fldenv
mov
nop
jge
outsl
xchg
mov
insb
add
inc
std
xor
cltd
ljmp
test
fmuls
nop
pushf
mov
out
insl
inc
jmp
divl
cmp
fidivs
out
addb
mov
arpl
fxch
pushf
mov
inc
sub
das
cli
or
les
jl
call
xor
or
cli
push
push
mov
fs
cwtl
arpl
jns
into
push
sub
cmpsl
inc
aad
aaa
gs
leave
arpl
mov
mov
inc
mov
pop
in
xor
scas
sub
shr
fsubrs
std
repz
jp
mov
inc
insl
pop
ljmp
xchg
push
dec
out
aam
cmp
aam
or
pop
arpl
or
and
pop
xorl
aam
xor
iret
fcmovbe
xor
nop
outsb
push
aas
or
cmp
dec
stos
andl
andl
xor
pop
push
mull
es
fldl
xchg
jo
aad
and
and
lock
pop
add
loope
push
fildl
jae
pop
fnstenv
or
xchg
ja
out
pop
gs
xor
enter
dec
jno
mov
add
jl
out
ftst
xchg
mov
outsl
scas
jo
dec
jle
mov
xchg
mov
mov
pop
lret
in
test
rorb
adc
lods
pop
cld
popf
push
push
bound
mov
jo
cli
movsl
fistpl
jb
jo
cmpsl
xorl
stos
push
cli
or
iret
fistpll
xor
jb
and
pop
cmova
fucom
adc
cmp
jle
pop
or
inc
fs
mov
jno
jo
jmp
jmp
or
jbe
mov
jae
add
mov
push
jb
cmp
fldlg2
enter
daa
sti
mov
sbb
jo
adc
adc
mov
and
push
push
bound
lcall
insl
jne
and
aad
add
rcr
xor
xor
movsl
dec
push
or
in
jmp
sti
cmp
mov
mov
mov
pop
jne
jne
mov
cmp
fwait
pop
add
lds
fs
adc
mov
add
or
push
out
cmp
out
into
or
dec
cld
sub
cmpsl
cmpsb
fwait
mov
ljmp
bound
test
addr16
jg
fsubr
jae
xchg
loopne
sbb
out
push
mov
lock
push
add
jle
ds
cs
enter
outsb
mov
iret
into
and
inc
fadds
daa
dec
leave
je
fldl
insb
sub
adc
mov
or
test
mov
roll
lea
out
xchg
sbb
adc
movsl
ljmp
outsl
mov
mov
jge
xchg
push
js
mov
sub
arpl
lods
in
int3
push
int
push
fs
fldcw
cmp
inc
lods
enter
mov
in
outsb
pop
xcrypt-ecb
cmpsl
or
inc
fisubrs
in
sar
test
ret
loopne
pusha
xchg
lret
push
or
movsl
add
mov
mov
cmpsl
pop
pusha
lahf
mov
jmp
out
mov
lods
push
pushf
mov
lret
xchg
and
jb
dec
loopne
cmpl
dec
aas
or
push
push
stc
lock
sarb
mov
mov
jae
jecxz
adc
jns
and
push
imul
xchg
and
inc
xor
xchg
mov
addr16
cmp
shll
push
adc
mov
dec
cmp
mov
daa
mov
int3
shlb
mov
inc
not
aam
in
std
xchg
lret
inc
mov
jle
and
stos
ret
arpl
inc
sbb
repz
addr16
std
pop
repnz
cltd
and
adc
je
pop
daa
jnp
loope
sbb
fdiv
outsb
xor
push
arpl
xor
je
jae
xchg
outsl
dec
mov
mov
adc
inc
adc
stos
mov
cmp
test
sub
push
sub
rorl
inc
imul
fldl
xchg
testb
movsb
mov
dec
sub
shll
das
fs
sub
xor
mov
ljmp
inc
arpl
js
test
movsl
mov
mov
loopne
shlb
cmpsl
pop
sti
repnz
imul
xchg
loopne
data16
add
or
lret
mov
mov
orl
iret
sbb
movsl
and
add
repz
sahf
sarb
popf
js
jbe
cs
adcb
in
jb
sbb
jle
mov
call
dec
out
std
mov
stos
ljmp
fistpl
mov
mov
cli
dec
jle
mov
std
pop
int3
fwait
nop
hlt
push
xor
aaa
or
jg
insl
xchg
ss
lcall
popl
sahf
push
jmp
dec
es
push
jl
fiaddl
sub
add
shrl
out
inc
repnz
pop
fbstp
std
mov
and
in
mov
jge
sub
xchg
cmpsb
rcll
fucomip
rcll
cs
xor
mov
jae
insl
in
mov
push
test
lahf
js
push
pushf
inc
mov
int3
data16
fsub
je
cmp
fldl
mov
and
jl
stc
in
cmp
jae
icebp
sub
mov
add
push
mov
outsl
mov
push
mov
es
mov
adc
add
cmp
outsl
ss
push
mov
out
stos
mull
rol
leave
lock
nop
cmc
js
jae
push
mov
cmp
jbe
sub
dec
xchg
pop
push
fcompl
repnz
push
pushw
sbb
xor
adc
lock
daa
xchg
cld
mov
add
mov
movsb
retw
mov
bound
mov
dec
aaa
iret
clc
lret
cs
jnp
add
sub
xor
ret
sbb
fimuls
inc
inc
pop
mov
push
cmp
in
outsb
sbb
pusha
adc
or
lock
js
addl
cli
cmpsl
cs
lock
js
sbb
cmp
das
push
insl
callw
jmp
and
ret
and
sbb
dec
cmpsb
add
out
lret
out
xchg
clc
jle
dec
sub
and
push
rcrl
push
pop
push
sub
xchg
pcmpgtb
inc
jl
dec
dec
imul
dec
int
inc
ljmp
sarb
jo
in
cmp
hlt
or
pushf
mov
jae
add
push
jge
cwtl
pop
js
sub
clc
mov
cltd
fimuls
xchg
adc
push
jns
adc
inc
sub
sub
push
outsb
mov
gs
imul
mov
xchg
adc
clc
pop
sti
stc
and
mov
pop
jo
mov
add
lods
ja
jmp
ficoms
jo
inc
outsl
mov
ffree
insl
mov
fbld
test
mov
or
jae
fwait
popl
pop
ret
stc
add
shll
repnz
test
int3
cmp
sahf
cmpsb
shlb
in
mov
addr16
in
sbb
jmp
add
lock
out
ljmp
mov
fisubl
push
push
lods
sub
pop
fisttpl
cltd
in
xor
sub
fimuls
icebp
jl
jle
inc
imul
int
cltd
push
cmpsb
jle
dec
xchg
cmpsl
icebp
xchg
and
fcoml
cmp
testb
das
popf
je
fwait
push
cmp
xchg
hlt
das
mov
or
aaa
enter
or
mov
mov
xchg
xor
or
xchg
ljmp
pop
fsubr
movsl
clc
mov
jmp
outsl
jae
xchg
scas
pop
das
mov
jle
pop
dec
cmp
lods
leave
push
push
add
push
ljmp
jp
aas
addl
repnz
xchg
sbb
jmp
bound
mov
push
outsl
mov
jo
test
lock
add
lahf
addr16
jo
xor
jo
sbbb
pop
mov
fcompl
lds
push
xorb
inc
dec
jo
sub
rcll
adc
imul
rcrb
xchg
nop
dec
sbb
push
sub
jl
xchg
fnstenv
pop
and
lods
cmp
sbb
or
push
les
push
mov
jp
dec
ljmp
mov
fdivs
adc
popa
cmpsb
or
dec
add
fs
jo
jp
shlb
xchg
stc
into
repnz
push
lcall
lds
insb
mov
shll
jo
pop
pop
cmc
and
cli
mov
mov
push
push
xchg
iret
lret
or
and
cs
xchg
enter
cwtl
mov
push
inc
out
pop
sub
fdivl
cmpb
aad
or
jo
cmpsb
out
lea
shr
scas
sbb
xor
fidivs
jo
inc
push
sbb
movsb
mov
mov
aam
mov
nop
push
mov
test
dec
js
fidivrs
mov
test
es
ror
cs
pop
mov
fmull
sti
aas
pop
stc
nop
jl
jp
cmc
mov
ljmp
sub
xchg
inc
push
xorl
sahf
scas
adc
jl
mov
subb
nop
cmc
out
add
pop
in
pop
and
insb
lret
mov
arpl
rcrl
scas
and
push
cmp
xchg
cli
jo
repnz
sbb
mov
or
in
or
mov
xchg
inc
cmp
pushf
mov
mov
neg
aad
adc
invd
jmp
mov
negb
add
add
lock
push
mov
bound
add
add
or
lret
mov
mov
in
popf
das
ja
loopne
hlt
jecxz
inc
aam
mov
sub
xor
ss
xchg
pop
jo
and
fld
repnz
add
punpckhbw
sub
popa
mov
ret
sub
leave
sti
or
jo
shrl
xorb
lahf
test
les
jo
xchg
leave
test
pusha
xchg
sahf
xor
jo
sbb
push
mov
jmp
sbb
in
arpl
pop
push
dec
cli
jo
sbb
push
and
jb
xchg
fs
cmp
cmp
inc
popf
push
pushf
xlat
out
and
adcl
mov
lahf
fldt
enter
fcomps
mov
push
add
mov
dec
roll
bsf
pop
stos
fs
fstps
insb
lods
out
cmpsb
std
cwtl
mov
aam
insb
push
fs
inc
lahf
push
dec
loopne
cmp
mulb
adc
movsb
shll
js
cmpsl
aam
and
lahf
xchg
dec
in
shl
cmp
pop
rcrl
into
popa
add
add
cmpb
scas
inc
jb
inc
adcl
daa
popf
lds
flds
add
subl
ficomps
cmpsb
add
cmp
cmp
pop
in
out
push
loope
mov
jne
dec
jnp
sarb
mov
insl
rclb
jo
lods
jae
imul
in
in
ja
dec
jo
mov
jne
pop
bound
movsl
outsb
icebp
dec
cmp
jbe
movsb
mov
push
stc
nop
mov
jo,pn
fnsave
xchg
xor
mov
cmc
fcoml
jae
sbb
addb
pop
dec
test
jecxz
ror
xchg
lret
in
repnz
mov
and
sub
jp
imul
sahf
lea
jo
pop
pop
loopne
add
inc
mov
jo
into
xlat
roll
aad
nop
push
ljmp
jbe
or
mov
pop
jp
jo
push
subl
jb
jae
lock
fsubrl
jle
xchg
push
xorl
addr16
jo
mov
sahf
or
cmpsl
and
or
sbbb
or
lds
mov
lahf
insb
jge
jo
push
pop
clc
jns
cltd
pop
jmp
dec
in
das
adc
add
in
jg
xchg
aam
adc
inc
xor
push
xor
inc
data16
push
push
shr
mov
popa
mov
sub
lahf
hlt
push
icebp
mov
outsl
aas
mov
xchg
cmp
scas
mov
lcall
inc
mov
or
aaa
loop
imul
ret
lret
stos
cmc
add
inc
daa
dec
int3
cmp
pop
loopne
pop
out
into
mov
push
into
or
push
int
adc
mov
loopne
ss
push
pop
mov
stc
adc
jl
lea
ljmp
jge,pt
lock
sub
mov
pop
sar
movb
sbb
inc
fdivp
push
inc
js
mov
imull
add
je
cmpsb
aad
xchg
test
es
sbb
mov
mov
inc
jl
ret
dec
cli
push
or
stos
inc
mov
fcoml
enter
gs
mov
dec
das
pop
xor
xchg
pop
pop
repnz
pusha
test
jmp
xchg
dec
cmp
pushf
or
add
jle
push
shlb
jns
into
pop
outsb
dec
in
inc
jle
sbb
and
pop
clc
xor
dec
add
xchg
lret
jno
sub
add
scas
dec
mov
mov
jns
jbe
out
mov
adc
dec
cwtl
jp
mov
adc
push
lock
rcll
fidivrl
mov
pop
jo
mov
jp
inc
jbe
aam
movl
mov
testb
mov
ljmp
imull
inc
push
pop
nop
add
sahf
push
jns
test
rclb
out
insl
pop
std
nop
push
insb
jno
repnz
or
sbb
xchg
roll
and
cmp
sbb
fnstcw
shr
in
js
call
jo
jl
mov
sbb
js,pn
movl
ja
pop
xor
lds
jno
setg
std
jo
adc
ja
and
jecxz
dec
cltd
ss
popf
cmp
movsb
out
pusha
and
sub
jo
stos
lds
not
add
loope
dec
cmp
jo
hlt
push
add
pop
pop
out
push
leave
test
out
loopne
xchg
imul
jecxz
mov
cmp
mov
cmova
cmovge
xchg
insb
aaa
fs
lock
js
lahf
fwait
adc
inc
insb
or
adc
or
daa
and
gs
xor
fwait
lahf
xor
sbb
fs
loop
movsl
push
add
push
fwait
lretw
cli
jno
pop
jo
ljmp
cs
mov
push
inc
pop
mov
inc
or
cmpsl
mov
pop
mov
pop
stos
mov
out
jo
sub
pop
repnz
push
jo
mov
mov
in
mov
sar
and
jo
aad
repnz
jge
jo
dec
pop
cwtl
out
insl
fisttpl
hlt
mov
addb
mov
icebp
js
or
push
cltd
loope
loopne
jo
inc
cwtl
lret
ret
xchg
mov
jo
adc
dec
sahf
dec
jb
cmpsl
lea
arpl
jo
icebp
pop
mov
mov
pushl
pushf
std
or
ret
cmpsl
adc
popf
inc
mov
mov
adc
arpl
loope
inc
loop
dec
push
pop
addb
mov
push
sub
int
das
cmc
push
push
inc
lods
push
loope
mov
ja
leave
jo
push
cmp
shll
push
outsb
popf
pushf
loopne
cmp
fadd
psrld
or
je
mov
jo
dec
lds
insl
or
jo
shrb
cltd
dec
mov
mov
sub
ret
dec
pop
inc
je
data16
cmc
and
add
sbb
xchg
call
ja
shr
aam
jo
cmp
fldcw
icebp
shrl
or
stc
jo
mov
jbe
fstps
popa
lcall
int
sbb
bound
xorb
xchg
sbb
test
push
gs
push
pop
inc
mull
incb
ja
imul
imul
cmp
orb
sbb
stos
mov
jo
cmpsb
sub
xorl
and
stc
sub
imul
jo
ljmp
jo
dec
cli
jl
sarl
jo
arpl
inc
and
div
mov
xor
sub
addb
or
add
icebp
mov
inc
add
or
adc
dec
imul
mov
xrelease
inc
mov
jl
jo
fcmovnb
xchg
jno
dec
adc
pop
adc
sub
mov
push
repz
ss
xchg
inc
inc
jo
stos
lock
mov
sbbb
int
or
dec
mov
and
jmp
push
enter
or
aam
adc
test
addr16
jo
andl
out
and
add
in
mov
iret
loopne
shrb
lock
jo
inc
enter
xchg
or
cmp
push
fisttpl
xchg
jno
sahf
std
inc
hlt
stos
jge
sbb
cs
inc
insl
js
sbbl
popf
aas
jo
jns
pop
jb
mov
pop
add
push
in
xorl
popf
jo
pusha
add
xchg
cmp
jo
dec
xor
adc
popa
mov
es
xor
push
testl
imul
jne
cmp
fbld
pop
cmp
and
add
jo
icebp
mov
or
rcr
pusha
subl
std
pushf
mov
sub
shrb
shll
test
pop
ss
jo
sbb
jb
nop
jge
insl
stc
ficomps
jp
jle
data16
in
das
sub
lcall
push
jo
pop
dec
out
loopne
jmp
sbb
xor
fs
bound
in
mov
fdivs
sub
int
insb
adcb
testl
inc
iret
dec
rdpmc
mov
aam
jo
ja
divb
cmp
test
jne
xor
dec
jo
setb
jge
fisttpl
xchg
jle
ljmp
std
lds
dec
scas
mov
jo
or
mov
bound
jo
and
cmpsb
lret
mov
ret
xor
fsubrs
jp
imul
xor
push
inc
jo
mov
ret
xor
in
in
mov
hlt
jo
sbb
js
mov
leave
mov
sub
xor
xorl
push
ds
das
rcll
imul
arpl
jo
ja
popa
add
pop
jbe
mov
pusha
jo
fistl
mov
jb
jo
out
jp
popf
adc
insl
push
mov
test
mov
call
mov
jo
stos
add
or
imul
push
push
jo
shll
sbb
and
push
shrl
dec
data16
aam
jo
arpl
pop
stc
push
nop
jo
data16
testb
aas
stos
add
mov
sbb
xor
cmp
jae
mov
sahf
fisubs
pop
leave
shlb
test
in
cmp
sub
xor
js
jle
dec
jb
jo
mov
js
jae
push
xor
or
jmp
in
leave
cmp
lods
adc
shll
inc
pusha
nop
sbb
scas
in
popa
data16
sub
adc
jo
sbb
adcl
mov
xchg
mov
push
decl
cmp
lea
xor
cmp
std
and
mov
mov
repnz
loope
or
mov
jno
aad
iret
pop
lods
dec
lcall
mov
les
js
xchg
jo
push
ror
or
clc
lock
sub
jns
push
mov
pop
arpl
fstps
hlt
xchg
inc
outsl
jo
dec
xchg
dec
mov
push
or
sbb
js
dec
jl
push
dec
idivl
dec
dec
faddp
test
popa
mov
mov
mov
xchg
cmpsb
mov
mov
and
lock
nop
shll
jae
cmp
test
or
inc
add
xor
movsl
push
lcall
cld
jmp
inc
xchg
imul
imul
sub
js
inc
mov
es
mov
test
mov
ljmp
pusha
lods
punpckhdq
jo
jg
sub
mov
xchg
jo
aaa
and
jo
push
and
and
jo
pop
and
stos
jg
xor
popf
into
push
adc
cli
lret
test
rorb
lds
push
jb
fistps
repnz
outsl
cmp
mov
rcll
inc
int3
mov
sahf
insb
adc
xchg
add
xchg
jg
jge
popa
das
mov
push
jo
out
lret
in
cmp
mov
fnsave
pavgw
mov
and
and
and
push
cmc
xor
bound
int
jo
xor
sub
cmpsb
in
cs
ss
out
lret
loop
jbe
sbb
dec
jo
inc
mov
lret
mov
jne
dec
inc
divb
nop
cmpsl
xchg
fwait
addl
sti
jo
mov
sbb
cmpb
sbb
jmp
aam
push
mov
cmp
and
inc
ud2
fstpt
push
hlt
jle
arpl
cmp
adc
lods
testl
sbb
jo
clc
incl
andb
dec
lods
pusha
loop
jo
or
stc
pop
into
cli
sub
ss
push
sub
push
sub
fildll
push
lock
ficoml
and
outsl
mov
sbb
out
or
inc
pushf
rcll
insl
sbb
mov
shrb
mov
add
fs
std
int3
mov
jae
mov
or
cmp
mov
mov
sub
push
jle
jae
into
cmp
nop
pop
cli
scas
pop
push
mov
push
fwait
movsb
inc
dec
out
add
cmp
nop
idivb
fs
out
imul
push
sbbl
test
jae
xchg
mov
jne
lahf
inc
insb
faddl
and
sbb
rolb
xor
push
xchg
lret
je
fwait
xchg
movsb
test
mov
adc
xor
movsl
push
add
pop
push
test
fistpll
mov
test
pop
sti
jmp
lods
enter
mov
ja
in
sahf
mov
imul
movsl
in
mov
scas
jg
pushf
loopne
stos
push
push
adc
insb
out
mov
call
push
fcoms
lahf
mov
fs
setnp
xor
cmp
inc
sbb
ljmp
pop
jg
out
inc
test
push
fisubs
imul
in
jbe
jno
add
mov
jecxz
jne
pop
push
mov
imul
inc
scas
jmp
adc
push
mov
push
mov
dec
iret
sub
ss
int
imulb
les
cmpsb
data16
pushl
out
jns
clc
fimuls
mov
repnz
pop
lock
lods
mov
xchg
addb
inc
sbb
out
mov
jecxz
imul
stos
fdiv
cmpsb
add
dec
or
and
xor
or
jp
movsb
lods
popf
div
out
adc
rol
sbb
aaa
sub
pop
inc
inc
jne
int3
test
rcrl
jno
mov
inc
inc
add
dec
sbb
mov
sbb
hlt
loopne
mov
sbb
push
xchg
loopne
daa
scas
cmp
hlt
push
outsl
mov
mov
sub
sbb
in
loopne
add
mov
sbb
push
je
and
out
scas
fs
repz
mov
push
insl
dec
in
aad
xor
jmp
leave
fcmovnb
or
mov
push
inc
inc
popa
xchg
bound
or
je
mov
aaa
jmp
fidivs
fsubrs
inc
fcoms
pop
mov
inc
popf
xor
adc
pusha
movsl
addr16
rcll
jb
jo
cmpsb
fcmovb
push
push
jg
out
pusha
rcrl
sub
cmc
and
faddl
insl
push
xchg
lods
andb
gs
pop
fsts
inc
xlat
insl
loopne
push
xchg
sahf
pop
in
cmp
daa
mov
xor
mov
ljmp
pusha
mov
sahf
dec
add
and
cmp
push
aam
sbb
xor
inc
mov
hlt
ljmp
mov
jbe
arpl
cs
movsl
sub
addb
into
mov
jmp
fucomip
fdiv
dec
add
jecxz
mov
jae
out
mov
lcall
pop
mov
xchg
int3
out
push
pop
or
sbb
jns
mov
jg
fwait
out
in
mov
enter
push
cmp
jae
fs
mov
push
mov
push
xor
add
push
shlb
jbe
mov
in
push
js
dec
inc
fs
lods
repz
loop
enter
movsb
cmpl
pop
adc
adc
push
mov
jae
scas
sub
repz
cltd
push
dec
dec
mov
hlt
pop
das
in
push
and
cmpsb
xor
fucomip
insb
lds
jb
sub
in
incb
lds
loopne
repz
cmpsb
shlb
lds
movsb
loope
out
movsb
adcb
iret
fisttpl
push
sub
xchg
push
push
mov
or
lods
xor
mov
jbe
dec
push
fidivs
fisttps
cmp
adc
in
dec
jmp
sub
fimull
in
mov
rcrb
pop
in
clc
dec
fnstsw
mov
or
fistps
and
push
jb
pushf
xchg
mov
clc
add
nop
add
or
fistpl
outsl
mov
mov
movsl
jg
sub
or
sarl
aas
dec
xchg
out
cs
insl
test
ljmp
sbb
pop
dec
test
pop
xor
decl
orb
push
out
cmp
dec
movsl
inc
nop
arpl
sub
or
jbe
jae
out
movsb
mov
jo
loop
and
test
jo
pop
sbb
cld
mov
jo
sbb
inc
jo
sti
mov
fnstenv
shlb
lret
mov
scas
shll
push
test
aam
cmp
ljmp
mov
fildl
sub
cmp
pusha
int
cld
inc
xchg
adc
add
pop
in
xor
js
rorl
cwtl
fisttps
clc
lds
push
outsl
mov
aas
shrl
jno
pusha
aad
out
loop
adc
push
cmp
or
inc
xchg
mov
lock
shll
dec
mov
add
orb
pop
sub
jg
aad
sbb
xor
pop
fistpl
dec
lock
mov
cmpsb
sbb
adc
sub
inc
adc
fimuls
das
and
fs
out
adc
mov
test
or
fistpll
push
push
imul
mov
outsb
or
dec
ret
dec
dec
test
cmpl
cltd
data16
or
xor
stos
ret
mov
adc
add
ja
out
xor
ja
call
mov
xlat
xchg
imul
fs
push
mov
xchg
mov
insl
add
call
loop
das
cmp
scas
stos
int3
lds
dec
cld
cmpsb
in
mov
pop
outsl
push
shlb
adc
scas
test
mov
inc
push
imul
imul
mov
mov
sbb
jbe
aaa
fldenvs
xchg
imul
stos
jmp
jns
in
push
int3
dec
sbb
jg
dec
or
pop
xor
ds
fidivrs
jns
jle
jmp
out
jle
cwtl
rolb
add
fnstenv
enter
pop
push
or
add
dec
pop
std
jae
or
inc
inc
mov
cmp
dec
cmpsb
out
pop
jecxz
mov
dec
jae
das
sub
pushf
dec
shrb
mov
inc
or
lock
mov
push
lahf
gs
cmp
or
subb
sub
fs
out
push
ljmp
mov
inc
js
sub
and
cld
jp
mov
aad
inc
orb
lods
and
loop
insl
aaa
lret
fs
jns
stos
xor
jae
fcoml
mov
mov
pop
xchg
lahf
arpl
ss
hlt
es
notb
addr16
outsb
sbb
xchg
icebp
pop
outsb
fnstsw
or
sub
es
popa
or
mov
int3
ret
cltd
test
mov
or
dec
std
stos
push
push
cmpsb
jge
jae
inc
sbbl
insb
adc
sbb
push
jno
int
inc
inc
and
pop
jg
sbb
addr16
lret
scas
out
adc
and
fs
fistpll
es
neg
insb
mov
jle
outsb
mov
in
jo
push
cld
lods
jae
xor
mov
jecxz
and
push
cmp
js
jae
pop
fstps
jmp
inc
sub
inc
out
pop
jnp
jb
fucomi
fisubrs
mov
mov
insl
subl
mulb
pop
test
jl
loope
push
lock
popl
test
sbb
or
inc
mov
outsb
pushf
addr16
andb
lds
ljmp
fwait
loope
jb
sub
jg
call
push
jmp
nop
cld
mov
ja
int3
adc
push
jns
fisubs
pop
pop
cmpsb
jle
and
out
int
in
rcll
leave
push
ljmp
inc
inc
aad
inc
mov
mov
or
js
imulb
push
imul
lods
xchg
imul
push
sub
mov
mov
or
xchg
jg
lods
inc
scas
inc
adc
dec
lret
out
push
jge
popaw
imul
jp
leave
dec
jmp
adc
and
clc
clc
in
jo
mov
push
adc
mov
pop
push
and
or
lahf
push
add
test
test
push
jl
push
shr
inc
cmpsl
cmpsb
push
cltd
mov
fistpll
ss
test
mov
fwait
mov
sbb
mov
cmp
gs
ret
or
mov
xor
aam
mov
mov
pop
out
mov
out
rcr
int
pop
push
ja
jbe
adc
jns
add
frstor
es
daa
sbb
in
push
das
int3
mov
xchg
dec
scas
mov
push
jle
mov
arpl
popa
dec
roll
shrl
in
jno
lock
movsb
fdivr
jmp
icebp
sub
jns
cmp
gs
shlb
sub
insb
vpcmpgtb
or
rcll
lret
iret
mov
and
mov
ljmp
mov
jns
mov
add
xor
ja
pop
dec
add
sarb
mov
clc
sbb
out
lret
movsb
sbb
bound
scas
imul
mov
out
mov
mov
xor
aaa
and
stc
pinsrw
push
loope
lcall
jl
data16
inc
xor
or
loope
not
jae
mov
xchg
fnsave
icebp
and
xor
shr
cmp
cmp
or
pop
and
popa
rorb
aaa
repnz
aad
sbb
jns
sub
hlt
lahf
ljmp
lock
adc
jge
xor
and
das
dec
cmpsl
jo
mov
sub
lea
push
jae
icebp
mov
stos
outsl
mov
dec
dec
rcrl
push
or
pop
movsb
push
std
cmp
mov
push
arpl
mov
push
mov
push
out
imul
mov
int
sbb
jnp
bound
aad
adc
fdivl
out
or
push
outsb
arpl
std
and
pushf
pop
js
jae
push
stc
jo
out
mov
aaa
js
ret
icebp
hlt
scas
xor
jbe
enter
js
lds
push
mov
jo
xchg
and
cs
mov
inc
es
cmpsb
shr
insb
leave
dec
mov
mov
lret
or
push
xor
dec
push
lcall
repnz
stos
stc
cmpb
jo
push
ds
insb
imul
jo
pop
fsubrp
aas
mov
loopne
or
scas
jg
push
adcb
jl
adcl
mov
jo
cmpsb
in
dec
repnz
cmc
jo
ss
jns
mov
out
nopl
add
cmc
out
movsl
fs
gs
std
pop
add
das
hlt
jecxz
mov
xchg
sti
cld
mov
js
jo
jmp
mov
out
cmp
enter
inc
ror
out
mov
xor
xchg
out
push
adc
test
js
sbb
pop
xchg
or
mov
jp
push
testl
or
jo
adc
scas
jo
mov
or
jo
fwait
and
mov
xor
xlat
cltd
test
lret
inc
enter
jo
leave
adc
or
das
ret
adc
movsb
xchg
pushf
xlat
jge
and
xor
sub
stos
adc
xor
pop
dec
icebp
cmc
lods
shlb
jae
inc
sub
aad
in
sahf
jo
stc
fists
dec
test
lret
and
cmp
pop
movsb
or
cmpsl
pop
jo
mov
jae
test
lcall
lret
add
aaa
arpl
fstpt
lret
jo
add
cwtl
adc
in
ds
push
jo
pop
push
jno
jo
lods
inc
mov
jo
push
imul
sub
js
pop
pop
adc
jo
subb
xor
dec
lret
pop
scas
sbbl
bound
xor
nop
and
push
jbe
jae
push
xchg
out
xchg
rcll
js
shll
stos
push
lcall
jae
sti
jo
mov
push
daa
jl
mov
test
jnp
lods
mov
jo
cmp
rorb
add
xchg
int3
push
jo
sub
sti
das
test
sahf
call
imul
jno
mov
hlt
stos
jo
in
cmp
repz
addb
jo
stos
push
or
sysenter
mov
xor
out
push
jo
inc
insw
jo
jg
mov
inc
rcll
je
push
fdivrp
xchg
jae
pushf
jo
std
or
dec
divl
cli
sti
addr16
or
adc
and
clc
ficoml
pop
test
js
stos
repnz
jb
sub
push
xor
xlat
push
mov
mov
mov
jle
sarb
test
inc
jo
push
fcmovnb
je
loopne
sbb
outsl
dec
jno
jmp
mov
xor
les
lock
sub
mov
xchg
test
add
sub
adc
mov
leave
dec
and
or
sub
jmp
test
pop
enter
cmp
shlb
mov
into
shll
gs
sbb
push
std
and
sub
rcl
insb
xor
xorl
xor
jo
call
adc
push
bound
insb
adc
jo
je
leave
sub
sbb
aam
or
aad
pop
mov
adc
repnz
cmp
mov
cltd
pshufw
call
orb
andb
mov
adc
add
outsl
or
push
daa
mov
shrl
cmc
out
punpcklwd
xor
out
xsha256
cmpsb
xchg
cld
fcomi
push
jo
inc
and
push
pushf
and
fs
jnp
cs
jns
repz
fs
icebp
hlt
outsb
jo
imul
mov
in
sbb
inc
add
aaa
sub
mov
jl
dec
rolb
jo
out
lods
adc
enter
mov
movsb
cwtl
pop
dec
ret
movsl
mov
pop
iret
lret
aam
cmpsb
fwait
ficoml
inc
lea
mov
mov
ja
lcall
mov
push
and
aam
sub
jo
mov
movsb
mov
jo
mov
mov
push
xor
mov
pop
fidivl
lods
js
cmp
jmp
jo
das
add
lcall
jg
imul
mov
and
jo
movsb
pusha
sbb
cld
sub
and
mov
cmc
cli
adc
push
add
mov
js
or
cld
mov
pop
jo
das
xlat
aas
xor
and
iret
loope
mov
test
lahf
push
push
jo
les
push
shll
cmpsb
ja
push
pushf
adc
jae
out
mov
add
mov
insb
fsubr
js
jo
adc
jne
pop
nop
sbb
mov
lcall
test
sbb
aam
xchg
jo
fildll
or
inc
adc
push
frstor
xor
pusha
xchg
addl
or
out
and
loop
orb
sbb
xor
bound
scas
ret
inc
push
movsb
mov
cwtl
mov
cli
lods
sub
clc
das
mov
gs
outsb
xor
jnp
sub
xchg
subb
dec
pop
loope
xlat
in
inc
int
dec
mov
aaa
pusha
pop
test
xchg
shll
mov
dec
sbb
scas
fisubrs
mov
jg
jp
loop
push
dec
jae
dec
fldcw
add
ja
push
jo
cli
fistl
push
lock
stos
imul
imul
dec
sub
push
cwtl
pop
mov
jno
jo
imul
mov
jecxz
cld
pusha
jge
sub
mov
fmulp
xchg
mov
mov
out
ret
loope
mov
repnz
lock
js
sti
pop
popa
jo
pop
sbbb
jno
sti
sbb
shrb
cli
jo
insb
lods
and
dec
inc
inc
pop
mov
decl
jo
icebp
and
push
test
mov
movsl
dec
push
arpl
cmpsl
mov
rcrb
daa
or
cli
and
cmpsl
loop
xchg
or
mov
loop
nop
push
idivb
pop
cmp
jo
mov
xchg
inc
push
dec
push
insl
xchg
mov
repnz
push
xor
lea
pop
outsl
rcrl
jo
xor
lods
xchg
lock
enter
sub
je
stos
sbb
bound
mov
enter
mov
xchg
fwait
arpl
add
nop
xor
fisubrl
es
jo
cmp
pop
cmp
push
xchg
lret
mov
repnz
jo
std
mov
mov
mov
pop
cs
adc
mov
pop
hlt
stc
es
adc
outsl
push
das
sbb
clc
pusha
out
jnp
fwait
movsb
testb
xlat
fcompl
jo
xchg
in
lea
ret
pmullw
cmp
fcmovne
imul
inc
fimuls
cwtl
daa
or
pop
popa
push
mov
and
leave
jo
push
jmp
int
sbbl
sbbl
xchg
jo
inc
shll
mov
sahf
jo
loop
adc
cmovb
xchg
jo
cmp
jo
and
mov
in
outsl
mov
dec
lahf
mov
mov
or
push
mov
cs
aam
outsl
mov
or
lock
mov
fptan
mov
out
jg
add
in
movsl
adc
mov
push
divb
sbb
loope
jmp
insl
iret
arpl
scas
loope
sbb
fsubl
andl
adc
lret
jns
sbb
mov
cmpsl
xor
adc
cmp
jns
adc
test
jbe
jae
rolb
rclb
inc
jne
bound
lret
inc
mov
insb
dec
outsl
jae
sbb
jne
fidivs
cmpb
adc
sbb
and
xchg
lock
dec
dec
call
movsb
mov
decl
and
cmpsl
cltd
fucom
dec
pop
push
iret
movb
jo
std
mov
testl
cld
adc
jl
sbb
shl
mov
movsl
sub
push
lret
jne
jp
cmpsb
add
into
int
push
dec
adc
es
mov
push
sbb
dec
ficoms
adc
addb
push
incb
cmp
pop
lahf
out
aad
fldcw
xorb
arpl
pop
xchg
bound
shl
pop
push
jae
ss
and
out
mov
push
rcr
ret
loope
xlat
js
leave
dec
stc
cmpb
out
lahf
sub
aaa
sub
push
in
shrl
or
rcrb
nop
xor
cld
cmp
push
lock
mov
mov
jle
mov
jnp
in
in
and
in
add
mov
adc
cmp
dec
add
das
mov
fisttpll
adc
jae
out
aas
push
inc
cmc
dec
stos
and
int3
jg
cmp
addl
shlb
or
call
insb
add
add
fistps
xchg
dec
mov
loop
cmpsb
call
arpl
and
push
push
insb
das
dec
mov
fwait
out
jbe
jnp
icebp
cmpsl
call
push
push
sub
cs
mov
arpl
sbb
sub
shrb
inc
jle
push
incb
iret
fwait
mov
mov
mov
hlt
and
cmpsb
pusha
cltd
cmp
pop
fisttpll
dec
aad
push
add
clc
mov
add
adcl
or
popf
add
jns
xchg
sub
or
shlw
push
dec
nop
lods
imul
sbb
movsl
sub
jge
sub
mov
adc
cmpsb
bound
push
jbe
mov
and
mov
dec
js
sahf
jns
xlat
jl
jmp
imul
cmp
dec
push
pop
mov
in
xchg
in
cli
pop
xor
out
adc
xor
call
mov
jp
xor
dec
scas
sbb
push
push
or
sbb
jns
mov
push
mov
nop
repz
adc
sub
js
add
push
fisubrs
cli
data16
cli
imul
pop
xchg
iret
out
lret
test
orl
mov
stc
and
jge
fidivl
ja
insl
jecxz
xor
js
insb
cmp
arpl
mov
push
xchg
ljmp
mov
sar
lret
sahf
cs
jg
mov
mov
push
imul
lock
sub
insb
pop
out
cltd
add
add
addr16
sub
cmp
aam
jne
or
fisttpll
shrb
xor
and
or
out
call
arpl
dec
stc
and
push
mov
mov
mov
mov
minps
push
in
sbb
xor
lret
sbb
xor
mov
adcl
jmp
xchg
addr16
inc
mov
es
sub
movsb
iret
jne
lea
cmpb
leave
into
imul
mov
in
ret
scas
adc
jmp
dec
inc
push
sbb
mov
jo
roll
jo
iret
mov
sbb
pop
xlat
push
lret
sub
pusha
jle
mov
pop
scas
add
add
mov
out
fld
orl
push
movsl
add
mov
into
insl
sub
lods
fstpt
pusha
xor
jb
mulb
aaa
fcomps
ljmp
icebp
addr16
outsb
mov
jl
stc
lea
scas
jns
adc
pushf
inc
pop
pop
jb
loope
push
sub
std
push
cmp
outsb
dec
test
cmpsl
sti
inc
push
xchg
in
js
push
add
es
sub
mov
sub
pop
sbb
push
xor
aas
bound
jo
arpl
jns
dec
push
fldenv
pop
mov
pop
sbb
popf
pop
fsubrs
movsl
shrb
mov
push
and
gs
clc
cwtl
push
lods
rep
lods
std
aam
add
cmc
fstpl
mov
xchg
in
vpmaxsw
test
in
push
call
fnstenv
mov
pusha
arpl
mov
or
cmp
daa
repnz
mov
int
sub
ja
mov
mov
out
out
dec
add
add
mov
imul
sub
lock
jae
adc
inc
ror
pop
cmp
inc
jae
cmp
std
out
aas
scas
add
sbb
bound
je
nop
arpl
cmpsb
pop
adc
sub
dec
lods
mov
mov
flds
lds
imul
or
inc
push
mov
push
or
pop
ret
xor
outsb
fildl
aaa
call
mov
and
adc
outsl
push
outsb
mov
push
sbb
sub
xorb
loop
push
xor
outsb
repnz
lcall
test
int3
cmp
clc
mov
jle
jae
int3
push
subps
shrb
xchg
adc
add
in
jg
in
mov
push
push
stc
fucomip
loopne
xchg
bound
imul
loop
test
adc
mov
inc
xchg
lea
push
mov
aaa
mov
dec
adc
xor
jl
xchg
or
fwait
iret
xor
mov
into
sbb
and
mov
xchg
imul
mov
push
or
fisubs
stos
cmp
inc
dec
stos
imul
ljmp
mov
adc
cwtl
mov
notl
cmpb
inc
out
inc
gs
sarb
mov
int3
xor
in
outsl
push
ljmp
insl
sbb
fistpll
clc
pushf
push
mov
xchg
jne
sbb
aas
leave
int3
rcrb
inc
int3
shlb
xlat
fs
xchg
adc
sbb
xchg
das
int3
aad
inc
push
scas
insl
pusha
popf
cld
clc
mov
mov
nop
fnstcw
sub
shlb
insl
xor
pop
sbb
inc
xchg
add
lret
mov
shll
adc
add
and
xchg
and
mov
jns
or
fisubl
cmpsl
xor
inc
dec
xor
jp
frstor
addr16
dec
es
fisttpl
mov
dec
jns
xchg
outsb
test
push
and
shll
pop
add
add
aas
pushf
sub
cltd
and
int
xor
aaa
je
sahf
sbb
inc
das
movsb
cmpsb
outsb
push
or
movsl
adc
loope
pop
sub
or
lahf
jne
dec
push
shlb
shld
inc
out
add
int
mov
es
push
pop
les
lret
cmp
ljmp
xor
nop
lret
adcb
mov
out
aas
cmpsb
adc
sbb
xor
ja
mov
and
dec
sbb
adc
push
lret
xor
test
sti
lods
adc
sub
insl
add
cltd
mov
bound
arpl
sbb
ret
shlb
popa
pop
jg
and
cld
inc
mov
add
cmp
xchg
enter
cwtl
push
mov
sub
fbstp
push
cmp
pop
shrb
fsts
data16
or
data16
jb
sti
or
cmc
mov
mov
cmpsb
lahf
out
add
sub
enter
push
into
or
push
js,pt
lret
inc
jae
push
std
test
and
bound
movsl
dec
push
mov
adc
and
mov
mov
pop
push
ret
pop
adc
loop
and
xchg
es
jge
or
test
fistps
insl
orl
shlb
xor
mov
or
jl
push
add
mov
popf
sub
enter
xchg
and
insl
ret
daa
call
or
sub
insl
xchg
sub
nop
fmulp
std
subb
out
int3
push
js
insl
mov
mov
mov
je
xchg
push
test
shr
mov
pop
call
dec
cwtl
mov
aad
in
or
sarb
in
jno
jle
pop
aas
xor
int
inc
sbb
rep
push
jle
pop
ds
mov
lods
mov
sub
subl
lret
cmpsb
scas
sbb
arpl
imull
lcall
outsl
sub
dec
push
push
fs
xchg
inc
fstps
push
int
inc
dec
sub
sti
cld
lds
and
std
fwait
arpl
jle
sbb
push
jo
fs
ret
cmpsl
fwait
jle
xchg
andb
adc
or
push
popa
inc
xchg
sub
xchg
sub
jle
sub
mov
ret
sub
movsb
dec
and
sar
push
cltd
scas
cmp
pusha
popf
mov
add
inc
scas
mov
negb
fidivrl
cmp
jmp
repnz
fcomp
or
mov
shll
cmp
repz
jmp
popf
clc
vmwrite
mov
jmp
insb
ss
pop
sub
outsl
or
push
add
in
js
jmp
in
movsb
ret
movzwl
mov
inc
jo
fdivs
flds
jb
jns
inc
jl
fidivs
ss
mov
lea
fs
inc
add
adc
adc
cltd
loop
mov
jae
mov
mov
mov
pop
push
daa
xchg
mov
lret
adc
or
dec
push
dec
test
inc
sarb
rcr
ds
mov
jg
mov
divl
adc
xchg
divb
fwait
jo
jno
outsb
jnp
int
jb
int
or
test
xorb
mov
fwait
shrl
popa
push
or
mov
push
jo
jge
push
into
sahf
pop
cs
inc
je
push
mov
ret
mulps
push
mov
cs
stos
mov
cmp
js
je
jo
insl
fstps
xchg
clc
push
aaa
jmp
or
lods
mov
test
sahf
enter
dec
xor
add
jne
cmc
xor
fimuls
pop
and
or
inc
jmp
movsb
push
inc
je
icebp
and
cmp
leave
pop
pushf
scas
sub
daa
jo
insl
repz
fs
cli
aas
push
jnp
insb
out
add
xchg
nop
pop
icebp
mov
lock
pop
jo
aas
xor
imul
adc
rcrl
jb
scas
or
insb
cmpsb
push
divb
popf
pusha
movsl
jmp
jmp
or
jae
aad
out
popa
out
mov
push
inc
push
es
push
push
jo
jb
fs
loop
aaa
push
pop
jae
int
add
jae
cld
push
clc
outsb
je
enter
out
aas
std
ds
sub
push
rcl
jno
cmp
jae
fnsave
sbb
clc
add
fs
jge
dec
push
jmp
nop
push
xor
repnz
fxch
hlt
inc
in
mov
cmp
cltd
out
mov
insb
rcrb
shrl
jno
or
outsl
fdivl
pop
jae
das
aas
xchg
inc
jo
popl
cmpsl
std
pusha
lods
jo
orb
lret
lea
mov
inc
lock
cmp
inc
popa
fstl
js
xlat
inc
jl
nop
xor
bound
insb
jo
sub
mov
icebp
mov
sbb
les
pop
jo
fisubrl
cltd
jae
adc
pop
push
push
xor
add
xchg
mov
push
cmp
les
mov
jmp
stc
lcall
ss
mov
stc
mov
sub
les
jo
stc
fimuls
inc
mov
jo
fldt
movsb
and
int3
or
mov
adc
sub
aad
mov
or
sahf
sbb
imul
test
movsb
jo
adc
sbb
fwait
mov
mov
dec
push
stc
mov
adc
scas
ret
js
enter
mov
mov
aam
lock
or
insb
and
or
ficoml
int3
inc
out
lea
in
mulb
xor
xchg
ret
and
lock
bound
cwtl
loopne
jb
ja
das
adc
pop
mov
mov
sbb
push
stc
jo
stos
push
sbb
cwtl
nop
dec
ret
ffreep
ret
pop
mov
push
mov
mov
jbe
imul
icebp
int3
ljmp
mov
pop
push
jo
mov
adc
sub
js
jo
dec
ljmp
cmp
movsl
jl
sti
jo
dec
mov
fcoml
les
call
pop
xchg
jo
push
inc
sbb
mov
aaa
push
ds
xchg
cmpsb
push
jo
out
lret
add
lods
sahf
nop
dec
dec
addr16
sbb
jo
push
adc
push
jns
mov
or
testl
lcall
pop
jl
jnp
mov
nop
sbb
mov
sub
leave
dec
repz
shll
push
inc
jno
mov
mov
stos
into
mov
jo
xchg
sub
push
loopne
jo
or
sbb
pop
xlat
fmuls
inc
js
out
pop
loope
jo
and
rol
cmpsl
leave
lret
xlat
addb
sub
pushf
mov
sti
fidivs
aam
and
jo
mov
sbb
jo
push
rcll
push
ss
mov
jo
lahf
cmc
pop
jno
stc
inc
std
jo
jne
inc
sub
xor
cmc
jmp
add
xchg
mov
std
xchg
mov
mov
icebp
das
pop
mov
sti
cmp
or
data16
jge
mov
ret
mov
addr16
push
nop
push
jne
pusha
jnp
push
sbb
cltd
mov
test
call
add
rcll
sbb
sahf
in
sub
inc
out
inc
xchg
jo
sub
dec
sub
pop
pusha
in
dec
icebp
shlb
jo
das
push
cli
pop
inc
jmp
outsb
popf
and
mov
mov
xor
shrl
pop
jo
fdivs
dec
mulps
pop
addb
repnz
push
hlt
fsubl
repnz
insl
jo
lods
sbb
ficoms
ret
cli
lcall
loop
int3
bound
aaa
jb
mov
mov
add
jno
and
xchg
shll
pushl
andl
or
cmp
add
pop
or
imul
fmull
jne
cmp
jo
mov
inc
dec
jae
jo
mov
movsl
cli
xchg
scas
push
jo
repz
fmuls
cmp
shl
adc
mov
sbb
fdivr
jle
or
es
jmp
enter
jo
mov
mov
fstps
jge
fsubrp
jo
hlt
into
aaa
sbb
daa
jb
scas
xor
mov
pop
and
pop
jo
mov
jnp
jo
cs
cmpb
pop
iret
fsubrs
dec
sub
je
mov
add
cmpb
aaa
adc
add
idivl
idivb
sub
mov
fsubrp
int3
or
push
mov
cmp
call
dec
hlt
in
filds
int3
in
ds
mov
adc
mov
xor
or
insl
mov
cmc
push
out
jle
jne
xor
or
xchg
push
push
mov
std
mov
jb
ljmp
jo
xchg
and
cmc
insl
add
jmp
mov
push
in
aam
pop
jg
adc
fdivrl
lret
mov
divl
loopne
lea
rorl
sub
ja
rcrb
lock
jle
push
test
or
stc
and
and
xchg
pop
jp
ljmp
mov
xor
adc
movsl
lcall
popa
nop
dec
fnstenv
rcr
cwtl
pop
inc
push
sbb
in
cmp
lret
shl
cmc
mov
das
jne
ja
ret
lahf
jo
rol
jae
add
push
sub
dec
stc
scas
sbbb
mov
ret
movsb
xor
mov
cmovge
or
negb
sub
pop
xchg
aas
imulb
das
inc
outsl
mov
inc
fisubrs
adc
rcr
dec
cld
jge
sbb
push
repz
cmp
dec
insb
mov
mov
xchg
push
sahf
push
adc
xchg
push
daa
pop
push
dec
push
arpl
or
jns
xlat
mov
sub
idivl
mov
movsb
out
stos
sub
je
adc
fistps
mov
test
test
bound
inc
int3
push
adc
mov
lods
icebp
and
inc
or
pop
inc
repnz
hlt
stos
fbld
sub
add
testl
adc
loope
out
add
inc
ss
mov
shlb
sarl
lock
push
mov
xchg
push
inc
push
loopne
xchg
mov
mov
iret
stc
add
jo
jae
notb
fldenv
movsb
arpl
or
adc
or
jecxz
push
or
and
xor
sbb
cmpsl
nop
jbe
dec
test
jbe
jmp
mov
mov
dec
out
sub
arpl
pop
add
ja
or
lahf
aas
mov
into
daa
test
lret
movq
mov
insb
push
and
pop
lcall
sub
xor
clc
sbb
bound
repz
aaa
repz
jo
in
pusha
jae
mov
loopne
stc
and
outsb
sbb
loop
xor
sub
outsl
fbstp
lods
pop
dec
mov
mov
hlt
add
in
cmc
test
or
mov
shll
arpl
inc
xchg
sbb
enter
cvtps2pd
pop
out
je
xchg
mov
mov
push
sub
fbstp
js
inc
xor
mov
sub
pop
shlb
or
lret
pop
add
outsl
add
mov
mov
pushf
push
movsb
mov
pushf
loopne
xchg
gs
dec
push
jnp
or
push
add
mov
inc
call
fstpt
mov
or
das
push
adc
pop
sar
push
dec
mov
mov
inc
repnz
cmp
int3
mov
arpl
push
adc
push
outsb
iret
outsl
mov
pop
xor
cmc
lcall
pusha
shrb
xor
and
je
adc
aas
mov
es
arpl
shlb
cld
insl
aaa
movb
in
cltd
push
lods
out
lock
mov
lds
mov
rcrb
out
and
jae
movsb
mov
mov
xchg
fwait
pop
xchg
lods
testb
dec
adc
rorl
jle
jmp
cmpsl
jae
mov
cmp
xor
imul
je
and
adc
insb
fwait
push
outsl
and
add
xchg
int
fnsave
aas
loop
lock
and
shlb
mulb
mov
push
pop
add
jb
or
pushf
fcoms
jno
jmp
jb
cmp
push
nop
out
or
in
test
in
cmc
jae
jo
or
push
xchg
cmc
and
jo
popf
jmp
pop
ja
jb
cmp
xchg
pop
cltd
jo
xor
dec
out
iret
data16
pop
xor
scas
jo
dec
in
cmp
pop
movsb
daa
addr16
push
jo
outsl
fnstsw
mov
adc
fistps
lods
sub
push
faddl
cmp
add
adcb
mov
adc
dec
cmp
add
sub
das
adc
xchg
jmp
shlb
enter
xlat
cmp
push
jmp
jo
mov
es
cs
jo
cmp
pop
pushf
popa
nop
cpuid
insb
and
andb
enter
cld
pop
std
xorb
call
jo
cli
add
adc
mov
xor
cmp
xchg
ret
out
jbe
mov
jge
insl
int3
jo
in
int
jecxz
sub
jo
test
notl
xchg
fidivrl
test
es
aaa
sbb
int
pop
inc
jo
inc
inc
outsl
or
push
jg
jo
inc
adc
xorb
shl
pop
cmpsl
das
int3
jp
jo
arpl
xchg
cmp
adcb
in
fimuls
jb
dec
lods
and
cmpsl
test
pop
sub
data16
and
xor
mov
inc
adc
or
shrb
push
mov
lods
mov
adc
fistpl
mov
sub
mov
sub
outsl
lods
fsubr
or
push
cmp
mov
fwait
jp
mov
in
shlb
shlb
xor
xchg
repnz
mov
imul
imul
fnstenv
fs
rcl
aad
add
arpl
aas
sbb
inc
fisubrl
sbb
sbb
or
push
popa
xor
leave
mov
lock
pop
test
inc
push
push
jae
mov
xor
nopl
jmp
mov
or
mov
cmp
or
out
sbb
adc
sbb
add
and
push
sahf
movsl
cwtl
jnp
in
rorl
clc
xlat
std
lahf
fistpl
pop
jmp
mov
xor
cmp
es
ljmp
push
mov
pop
dec
frstor
bound
lahf
pop
fcmovne
sbb
lods
xchg
mov
jo
xor
pop
adc
cwtl
adc
mov
cmp
ror
ja
push
movsl
xchg
cmpsb
cmp
data16
xchg
or
es
out
xchg
cmp
jae
pop
mulps
imul
jb
pop
inc
jmp
sti
xchg
mov
repz
push
scas
bound
push
add
addl
adc
dec
cwtl
imul
sub
hlt
arpl
adc
cmp
jae
xchg
xor
dec
push
fiadds
sub
in
out
or
mov
arpl
and
ljmp
mov
pop
cmpsb
adc
xor
loopne
inc
jae
lock
testb
jns
jle
mov
dec
aaa
pop
int
mov
push
xchg
arpl
cltd
iret
cmp
or
out
in
enter
push
std
cmpb
jae
std
nop
sbb
mov
mov
adc
fsubl
jno
xchg
push
jle
sub
jge
push
pop
bound
pop
lods
mov
stc
sbb
inc
cmp
stos
pusha
or
call
sbb
mov
jo
jb
pop
jg
es
pop
jnp
out
xchg
insl
movsl
xchg
jno
dec
mov
pop
fstl
jmp
gs
dec
movq
sbb
or
mov
lods
lret
or
jb
sbb
dec
imul
jns
popf
mov
sub
es
aad
push
push
add
push
inc
test
xchg
cwtl
int3
jl
sub
jecxz
inc
call
or
test
fstpt
adc
pop
and
stos
rclb
ja
sbbl
push
mov
sbb
sub
jnp
imul
fstl
test
push
aaa
sub
jl
adc
jge
jo
arpl
lret
stos
sub
sbb
and
or
leave
mov
das
sets
xor
pop
sbb
fs
mov
lahf
xchg
mov
jns
roll
mov
mov
frstor
inc
js
add
sbb
jo
jnp
lret
leave
inc
jo
push
push
mov
orps
dec
sbb
sbb
rorb
stc
in
leave
push
cld
sti
out
push
je
divb
out
inc
imul
xlat
nop
adc
xchg
push
dec
lcall
mov
jo
mov
arpl
fisttpll
jo
popf
dec
and
xor
ret
jmp
or
push
test
mov
mov
loopne
or
xchg
dec
jo
mov
add
adc
test
mov
inc
repnz
lahf
imul
cmp
dec
jae
xchg
fiadds
jmp
filds
inc
fsubrs
xchg
push
cs
js
mov
cmpsl
xchg
jnp
jp
testb
sub
jae
pushl
jmp
or
jge
in
or
push
mov
mov
scas
shlb
stc
mov
cmp
mov
xchg
inc
les
lds
xor
scas
fiaddl
or
sbb
je
mov
pop
mov
sbb
aam
lods
xor
movsb
mov
sbb
or
movsl
pop
jmp
dec
rolb
xor
daa
lea
cltd
push
fnstsw
rclb
icebp
dec
ret
sbb
sub
mov
lret
cli
or
xchg
xchg
mov
mov
mov
imull
out
sbb
sub
inc
xor
or
jge
inc
xor
sti
es
mov
out
lahf
test
loopne
ds
and
cmp
xor
push
jbe
jbe
addr16
and
mov
ret
sub
mov
jae
push
xchg
sub
test
cmpsb
ja
popf
aaa
fiaddl
xchg
pop
and
add
or
dec
add
pop
out
ljmp
and
std
fs
push
push
popa
loope
lock
arpl
adc
out
mov
stc
clc
out
cmp
mov
lods
jl
push
loope
dec
rorb
sub
jbe
lahf
out
adc
lods
dec
sbb
cld
mov
sbb
or
pop
into
push
in
pushl
cmc
lret
repz
mov
stc
test
xor
popf
mov
fidivs
pushf
xor
lds
out
inc
dec
lea
cmp
mov
jle
fidivl
inc
xchg
sub
popa
add
jns
xor
roll
fidivrl
push
cmpsb
jae
jnp
and
nop
add
movsl
rcll
sahf
lock
mov
mov
rcrb
and
outsb
mov
xor
jbe
mov
mov
jle
push
mov
xchg
jb
scas
inc
jb
xchg
inc
insb
repz
fcmovb
cmpsl
dec
sbb
dec
mov
cmovne
fnstcw
sti
or
in
adc
fisubl
movsl
sub
add
xchg
lock
daa
loopne
mov
and
xchg
add
ficoms
mov
push
mov
test
mov
outsl
jae
cmp
jl
xchg
imul
arpl
int3
xor
jbe
mov
inc
xchg
cmp
jnp
test
inc
mov
mov
mov
shll
pop
enter
outsb
pop
adc
movsb
popa
dec
jbe
cmpsb
clc
ss
std
nop
fs
jge
adc
mov
xchg
mov
addb
aas
jg
shlb
fistl
push
mov
inc
mov
sti
cmp
add
cmpsb
lock
and
jo
rcrl
inc
or
mov
cmp
shrb
inc
arpl
xor
add
loope
scas
aaa
pushf
movl
xor
loope
cmp
shrb
lret
xchg
jae
ret
xor
sub
and
cmp
add
inc
aaa
sub
pop
adc
arpl
dec
imul
int3
sub
pusha
cmp
mov
cmp
shrl
pop
xchg
mov
jge
fiaddl
push
jo
fidivrs
jge
jae
mov
stc
shlb
mov
fsts
dec
dec
jnp
lds
inc
sbbl
test
mov
pop
leave
dec
jo
int3
xchg
dec
in
lret
sbb
jo
pushf
push
xor
mov
ror
fucomi
mov
mov
mov
pop
ss
mov
lret
sahf
adc
cmp
jo
cmpsb
out
sbb
es
sub
jnp
sahf
or
cmc
orl
push
cmp
jmp
jnp
jno
jmp
inc
adc
pop
mov
aas
add
int3
movsb
arpl
in
dec
pushf
stc
push
fs
mov
fistpll
jo
adc
into
jo
mull
addl
jne
out
test
pop
jo
stc
mov
xorb
outsb
dec
icebp
fisubrl
mov
stos
test
test
jo
fs
pop
add
ljmp
pop
or
outsb
nop
dec
ds
add
or
and
arpl
bound
mov
repnz
push
jbe
mov
popf
sbb
pop
out
mov
xchg
jo
ret
test
push
subb
out
data16
inc
xor
cltd
cmp
or
add
mov
fst
jb
shl
dec
int
popa
push
push
or
pop
mov
jbe
fbld
bound
iret
dec
xchg
cmp
mov
lds
sub
sti
out
mov
mov
push
push
mov
pushf
jbe
xchg
jo
inc
jae
data16
jge
and
cwtl
flds
jp
arpl
movsl
mov
or
notl
pop
aad
cwtl
mov
clc
repz
adcb
lret
pusha
jmp
cmc
or
cmp
scas
push
mov
mov
adc
sbb
pop
mov
fldenv
outsb
add
jnp
xor
loop
jo
pop
push
push
fadd
push
popl
inc
loopne
outsb
mov
fsubrp
scas
jge
fistps
or
mov
addb
cmp
mov
xlat
outsb
mov
leave
mov
jl
imul
mov
and
jg
stc
ret
cltd
test
sub
cld
xorb
mov
out
mov
aad
push
mov
pop
loopne
sub
mov
cmp
hlt
jge
xor
mov
shlb
aas
iret
add
mov
add
and
adc
push
jl
mov
fcomi
inc
pop
push
rolb
cmp
mov
daa
push
mov
inc
enter
mov
loop
gs
int
pop
and
test
xlat
pushf
and
jae
mov
or
pop
xchg
pop
in
js
int3
ret
push
xchg
pop
sahf
or
outsb
jo
lock
adc
clc
or
sub
mov
xor
inc
mov
lret
int3
sbb
sub
and
out
pop
rcrb
das
push
jo
mov
push
je
adc
jo
shrl
inc
jo
pop
bnd
push
or
push
rcll
xchg
push
xchg
pop
add
or
add
push
out
jmp
jo
mov
arpl
mulb
rcrl
xor
jo
or
movsl
pusha
das
aas
popf
ror
fsub
push
dec
jp
push
nop
dec
add
add
dec
mov
or
je
iret
jne
adc
jo
stc
or
arpl
cmp
and
gs
inc
pop
je
test
loop
daa
test
addb
rclb
sub
in
jbe
and
das
or
xchg
test
inc
jno
lret
jl
mul
stos
in
jge
jns
sbb
sti
pop
fsts
inc
mov
hlt
fcmovnu
pop
lcall
ds
movsl
and
jo
and
gs
test
add
mov
insl
cmp
cwtl
orl
loop
xchg
cs
mov
dec
push
test
xor
sbb
jo
test
addr16
inc
out
aaa
xchg
mov
pop
ljmp
jl
push
jo
pop
sti
jnp
mov
int
adcb
adc
mov
push
mov
or
dec
or
leave
cmpsl
stc
jo
enter
orb
movsl
mov
jo
mov
mov
int
bound
imul
inc
mov
mov
or
movb
xor
or
in
mov
lret
pop
push
sbb
dec
push
cmp
mov
ljmp
add
or
mov
xorb
mov
inc
xor
jo
add
int
arpl
adc
dec
lods
sub
push
stc
out
xchg
addr16
mov
ror
cmpsb
cmp
mov
ret
in
scas
mov
jbe
dec
jo
adc
or
inc
imulb
jp
lcall
in
and
cwtl
in
push
push
sub
cmp
jne
pop
montmul
cmpsb
lds
je,pt
xlat
fildll
in
sarl
iret
jge
rorl
bnd
inc
mov
mov
mov
sbb
nop
jbe
cmp
xor
add
in
adc
clc
push
les
sub
loope
aaa
mov
and
mov
les
fs
add
repz
loope,pt
and
xor
ficoms
fwait
inc
into
pop
xsha1
cmpsb
lret
jle
xchg
jl
aam
and
movsl
sbb
xor
sarb
mov
jecxz
inc
mov
addb
xchg
mov
inc
sub
inc
das
xor
test
or
rcrb
xchg
js
jp
cltd
repz
adc
je
repz
icebp
cmp
popf
lret
arpl
test
gs
xchg
jo
mov
jno
xorl
aas
icebp
test
lds
nop
mov
mov
addr16
shlb
lds
push
push
xchg
xorl
mov
push
xchg
sub
lock
jo
int3
and
pop
cmp
lods
add
xchg
stos
mov
les
jmp
inc
jne
or
loope
push
and
jl
sbb
pop
iret
lods
adc
outsb
jle
lret
and
imul
es
pop
aas
jmp
jo
adc
pop
xchg
mov
lret
fs
orb
jo
test
push
mov
cmpb
js
mov
xchg
scas
xchg
sub
xchg
stos
cmp
mov
shrl
mov
mov
add
ja
and
loopne
adc
aaa
xchg
sub
inc
dec
pushf
push
mov
inc
iret
jae
arpl
das
mov
pushf
hlt
mov
in
adc
xor
jno
sar
pop
lea
pop
cmpsl
mov
outsl
xlat
in
dec
mov
cmp
mov
scas
pushf
popf
or
in
push
cmc
arpl
mov
mov
call
lret
jecxz
js
je
jg
loopne
mov
mov
fcom
iret
xorb
mov
sets
dec
shll
insb
pushl
jmp
mov
xchg
jle
jo
or
mov
inc
pop
pop
push
inc
ficomps
nop
mov
iret
jle
jb
xchg
mov
rcrl
pusha
je
mov
sub
adcl
and
sti
enter
jo
push
jno
mov
jns
mov
inc
jnp
and
sbb
jl
sub
jo
leave
mov
popa
or
pop
fidivs
pop
adc
daa
jo
or
lds
out
dec
jo
inc
ljmp
and
push
xor
out
or
xchg
inc
ljmp
jmp
lods
lahf
push
sti
jno
mov
jl
cmpb
loope
sub
jo
mov
clc
pop
movsl
mov
jge
xchg
jno
and
dec
pop
jo
arpl
repnz
leave
adc
push
jle
out
cmp
into
adc
sub
repnz
or
xchg
cwtl
lret
or
dec
push
dec
shlb
out
aad
arpl
adc
jae
popa
bound
add
lss
and
push
popf
mov
and
cmpsb
ffreep
sbb
adc
cs
stc
cmp
sbb
dec
jno
mov
test
pop
fwait
ljmp
push
pop
fcmovnb
scas
aam
shlb
and
push
popa
xchg
xor
sahf
sub
mov
insb
adc
test
ret
jbe
loope
out
fdivrs
cmp
push
and
hlt
add
arpl
out
cwtl
cli
cmpsl
mov
loope
mov
mov
ja
loop
cmp
or
add
xchg
xorl
int3
dec
jae
loop
test
arpl
mov
out
mov
les
std
pop
push
add
pop
add
inc
aas
outsl
fidivrs
dec
xchg
push
and
fldenv
xor
cltd
jbe
fidivl
or
arpl
jp
sar
adc
iret
out
or
and
arpl
movsb
dec
stc
or
or
or
mov
dec
push
and
push
movsl
outsb
cmpsl
imul
cltd
jge
push
or
ja
jg
add
iret
fs
cmc
jno
icebp
sub
rcrb
repnz
call
push
fucomp
sbb
pop
test
mov
jae
dec
add
mov
arpl
notb
hlt
xchg
jb
push
cmpsb
dec
ljmp
jne
in
movl
push
jns
dec
jnp
adc
and
add
pop
push
adc
mov
xchg
roll
pusha
imul
jle
jae
scas
js
mov
mov
sbb
sbb
arpl
arpl
cltd
insb
ljmp
lods
fcoml
pop
scas
repz
xlat
mov
movsl
push
gs
sbb
je
dec
rcl
aad
push
adc
adc
fs
lea
pop
sub
push
test
pop
je
faddp
push
pusha
ds
add
testb
aad
in
rcrl
sbb
adc
mov
fs
sub
adcb
mov
cmp
sub
adc
inc
loope
add
mov
cwtl
add
popf
subl
int3
inc
xchg
sarb
add
mov
stos
pop
es
cmp
in
popa
bound
movsb
fsubs
inc
mov
jmp
mov
lods
test
hlt
sbb
shlb
or
pop
clc
in
adc
add
add
arpl
fistpll
test
lods
adcb
test
call
out
add
pusha
xlat
mov
mov
or
mov
insb
fildl
repnz
or
fidivrl
arpl
insl
out
pop
mov
cmp
add
sbb
and
adc
push
mov
insb
add
in
xchg
int3
mov
out
jno
xchg
jp
out
movsb
in
mov
push
inc
inc
adcb
out
inc
das
push
push
mov
movsb
fimuls
bound
xlat
aas
das
xchg
dec
push
or
out
loopne
ds
sub
subb
mov
jg
add
inc
lds
fadd
pop
leave
in
sub
add
cmpsl
cmp
mov
cltd
mov
or
jmp
das
pop
sbb
mov
mov
in
jo
cmp
pop
mov
cltd
xor
lahf
jle
jmp
cli
push
scas
xchg
dec
pop
lock
inc
cmp
lods
cmp
cmp
movsb
aam
dec
mov
ret
nop
dec
cmp
pop
add
jge
in
push
outsb
fldcw
addr16
inc
jns
pushf
inc
push
ret
or
arpl
pop
sub
jae
sbb
icebp
jae
aad
push
clc
or
xor
push
shl
cmp
push
repz
js
jns
arpl
mov
sti
in
xchg
xchg
xor
mov
jge
out
repz
inc
das
xchg
in
test
push
jae
xor
outsb
mov
adc
jo
xor
dec
xor
out
lods
insl
mov
inc
lods
jbe
ljmp
bound
es
or
cmp
adc
loopne
sbb
mov
push
shl
inc
sub
jle
cs
insb
into
cmp
mov
xchg
andb
arpl
dec
mov
push
loopne
rorl
jns
fwait
test
dec
jmp
push
dec
jp
test
sub
push
mov
stc
pusha
mov
jo
pop
dec
pop
nop
das
and
inc
and
sbb
pop
mov
aas
pop
add
mov
icebp
es
push
dec
jecxz
fs
pmulhuw
cmp
jo
movsb
xchg
pushl
xchg
aaa
in
dec
lahf
ret
push
imul
dec
pop
dec
shrb
bswap
lods
jb
jbe
and
sbb
popf
rorl
jmp
pop
xor
out
push
icebp
sarl
xchg
push
sti
sbb
es
je
xchg
jg
jl
inc
and
iret
int
and
aad
ja
pushfw
scas
or
pop
or
gs
aam
dec
mov
mov
cmpsl
xchg
push
mov
mov
inc
push
jecxz
pop
jg
hlt
mov
ljmp
popf
ds
addr16
add
ret
into
push
inc
movl
aam
hlt
xchg
xadd
lretw
mov
dec
sub
or
jns
addb
pushf
outsl
mov
xchg
cmpsl
mov
mov
inc
out
cwtl
push
push
xor
in
push
dec
int
push
jo
sbb
jmp
sub
mov
jnp
in
or
fbstp
mov
push
jo
sbb
rcl
mov
and
pop
xchg
stos
mov
orb
pusha
mov
sub
cwtl
mov
movsb
in
pusha
js
xchg
xor
jo
adc
push
sarb
out
cmp
add
jo
add
movsl
xor
movsb
jae
mov
inc
inc
cmp
lds
insb
in
pop
cmp
sub
loop
lcall
jo
add
js
ss
add
aam
loopne
push
imul
mov
outsb
mov
push
push
cld
add
pop
jo
push
jg
adc
adc
xchg
inc
shlb
push
lea
clc
mull
shlb
sub
nop
or
pop
jae
iret
jns
ljmp
xor
jo
dec
push
mov
sbb
mov
jo
mov
mov
add
jo
pop
dec
orb
inc
je
cs
push
sahf
add
jecxz
loope
jo
lahf
enter
gs
fidivrl
pop
jmp
xor
mov
sbb
jmp
bound
pshufw
cli
xor
popa
jo
cmp
js
aas
or
and
test
mov
jo
cmc
dec
and
jle
jo
stos
insb
popa
inc
mov
push
in
sbb
jo
ret
mov
int3
push
sbb
xor
clc
push
jo
xchg
lods
sahf
les
push
jmp
scas
cld
jo
sub
push
fistpll
jmp
int
inc
repnz
clc
sti
jecxz
pop
cld
aam
push
shrb
sbb
push
adcb
xor
fsubs
sub
rclb
sbb
loop
jo
daa
nop
lahf
leave
xorb
js
mov
out
scas
pop
test
ja
dec
inc
out
xor
lock
adc
sub
jle
push
or
lods
inc
frstor
cmp
xchg
in
pop
add
and
cmp
popf
pop
loopne
prefetchw
insb
andb
pop
cmpl
decb
jecxz
xchg
out
fbstp
push
mov
jl
stos
data16
and
dec
lahf
xchg
or
es
pop
outsl
jo
scas
sub
jo
pop
sbb
sbb
xor
sbb
mov
ljmp
sub
psllw
mov
push
inc
fwait
sbb
jae
sub
pop
pushf
mov
repz
loop
imul
push
lret
jp
mov
cmp
mov
mov
jmp
inc
insl
and
cmp
test
loope
xchg
shrl
jle
inc
fwait
jo
cld
xchg
adc
lea
pop
xchg
and
adc
jo
jle
xchg
js
dec
data16
aad
adc
out
mov
xchg
xchg
push
pusha
mov
notb
mov
int3
vhsubpd
imul
jo
fcmovnb
in
add
test
icebp
shlb
das
inc
aam
dec
cmp
add
xchg
mov
xor
mov
loop
rorb
iret
test
ljmp
sbb
adc
in
int
jo
dec
adc
dec
push
add
push
cwtl
mov
mov
sbb
leave
jb
adc
sub
jl
jo
or
in
adc
jle
hlt
add
movsb
or
cmp
sbb
enter
bound
je
jb
insb
inc
mov
pop
push
std
rcl
js
daa
mov
adc
lea
inc
mov
insb
xor
jo
lds
fimuls
test
jo
mov
test
rcrb
data16
jo
ficoms
sbb
dec
movsl
jo
mov
adc
ja
insl
gs
sub
sub
outsl
xchg
xchg
jle
sub
ds
ret
in
rcl
push
push
push
subb
les
sbb
adc
jo
cli
adc
jmp
fs
scas
ret
jo
pusha
adc
lahf
sub
in
stos
dec
and
pop
orb
adc
pop
iret
ficomps
push
jo
pop
in
sahf
mov
sbb
jo
pop
loope
jae
shl
jo
leave
jle
inc
stc
repz
je
push
jge
mov
jo
mov
jbe
jo
pusha
push
xor
mov
test
xchg
rolb
clc
lea
jge
jbe
push
shlb
pop
clc
pop
in
test
dec
ds
test
ljmp
mov
in
out
outsb
mov
xchg
jo
ret
imulb
dec
and
jo
mov
add
jo
cmc
les
xor
xor
insb
mov
push
popa
mov
dec
sub
and
and
gs
sar
jl,pn
es
subb
mov
aas
mov
jo
inc
out
test
xor
xlat
iret
jb
mov
das
sahf
lcall
ja
imul
jmp
adc
in
jp
in
shlb
mov
ljmp
dec
pusha
push
je
stc
mov
inc
gs
inc
in
popa
aad
sti
inc
cmp
cli
cmc
xchg
aam
mov
leave
lcall
push
jo
into
iret
and
in
loopne
or
out
aam
ret
add
repz
jno
cld
jo
sahf
andps
pop
xchg
sarb
pop
ja
insb
sti
sub
jo
or
push
push
mull
cmp
inc
mov
jge
pop
sbb
loope
roll
movsb
xor
inc
pop
xchg
popa
out
cltd
das
mov
and
mov
mov
fwait
lds
in
push
and
adc
sbb
mov
push
mov
push
mov
divl
outsl
imul
sbb
daa
in
xchg
push
lahf
inc
dec
ss
jo
mov
pusha
popf
jo
lcall
jge
jmp
scas
jecxz
sbb
adc
jo
fiaddl
xchg
push
mov
popa
pusha
aas
push
xor
mov
mov
push
std
es
dec
jne
test
mov
aam
pop
push
out
add
fidivs
jp
push
or
repz
ja
push
out
lcall
cmp
jno
out
sbb
pop
jbe
mov
or
dec
sub
out
jo
xor
stos
jo
xor
popl
mov
pop
fadds
into
cmpsb
test
and
adc
inc
push
nop
loop
lret
inc
or
or
push
mov
sbb
push
fsubs
adc
sub
sarb
sbb
mov
adc
pushf
push
jno
jb
add
je
movsb
cmpsl
xchg
pop
jmp
ds
stos
icebp
out
mov
sub
xchg
mov
xor
pusha
mov
xorb
lea
push
jo
jg
je
mov
in
jo
call
fcmovbe
jo
mov
push
jge,pt
mov
push
sarb
push
and
leave
addr16
mov
dec
xorl
scas
mov
test
push
add
pushl
lret
ljmp
xor
or
bound
mov
gs
cmc
cmp
js
sub
inc
adc
jo
adc
push
imul
jno
neg
aad
movnti
dec
jo,pn
clc
sbb
aam
jl
arpl
add
push
outsb
shr
scas
pop
mov
mov
cmp
sbb
push
jo
add
pop
push
inc
mov
inc
inc
lea
loop
stc
xchg
mov
scas
lods
jg
jg
test
clc
sub
push
push
mov
fcompl
xchg
jp
jmp
sbb
adc
or
and
or
jg
popa
pop
dec
dec
in
insl
lods
ss
jl
adc
xor
xor
scas
in
cmpsb
fnstenv
push
data16
push
push
inc
fldenv
sbb
lahf
dec
and
jmp
xor
flds
fildl
mov
jb
push
jo
in
shrl
xor
pop
cltd
imulb
popf
fisubl
cmpb
call
push
popf
sub
imulb
cmp
mov
xlat
shrl
arpl
lcall
push
jmp
shl
cmp
rorl
xchg
or
xchg
jb
sar
mov
hlt
or
clc
lahf
out
cwtl
loope
push
sub
lahf
movsl
push
and
jge
out
dec
sbb
mov
shrb
mov
sbb
dec
mov
and
and
fnsave
adc
outsl
and
fs
mov
sub
fnstenv
pop
pop
cmc
jle
push
loope
je
arpl
pop
mov
adc
fmull
shlb
bound
push
rcrl
lock
arpl
cli
xchg
push
adcl
xchg
pop
sbb
dec
sub
dec
lock
cmc
xlat
mov
inc
add
in
andb
mov
adc
int3
push
fisubrl
jo
jmp
xchg
js
shlb
or
out
sbb
jns
std
test
inc
sub
jle
fldt
mov
dec
pusha
dec
or
std
pop
lock
push
lock
cmpsb
mov
into
mov
rolb
pop
add
fbstp
call
mov
xlat
imul
add
clc
jmp
push
int3
cltd
adc
notl
jae
sbb
hlt
shll
xor
xlat
dec
sti
mov
push
loope
shlb
cmpsb
and
fwait
add
andb
ds
mov
arpl
jge
movsb
inc
mov
push
push
adc
mov
sub
fs
cmpsl
fs
mov
mov
push
mov
icebp
orl
cmpsl
flds
fsubrs
out
push
pop
fadd
inc
mov
addr16
or
xchg
fisttpl
daa
call
adc
js
je
fsin
xchg
imull
xchg
adc
pop
pop
push
mov
ljmp
xchg
inc
lret
lock
sbb
adc
lock
fucomi
xchg
fistpll
clc
sub
out
mov
or
cs
shlb
orl
sti
mov
dec
je
arpl
jge
jo
pop
inc
sub
jo
mov
xchg
add
inc
stos
scas
sbb
sbb
out
xchg
mov
dec
mov
mov
push
jo
jae
cltd
fiadds
mov
jo
adc
lahf
pop
pop
push
lea
rol
data16
cltd
mov
rolb
fnstsw
add
jo
jno
push
in
jge
push
insl
fs
jg
sti
sahf
out
cmp
dec
cmp
ffree
adc
sbb
mov
int3
mov
setae
sbb
dec
shl
stc
insb
pop
cli
insb
cmp
push
test
stc
orl
out
mov
push
lea
aam
push
fldenv
inc
xor
push
add
popa
dec
push
je
arpl
mov
pop
outsb
push
mov
jnp
outsl
or
lock
mov
mov
mov
xor
xchg
daa
push
sbb
xor
add
mov
or
arpl
fisubs
push
and
lea
jle
rcrb
push
mov
and
subl
sub
shlb
cmpsb
adc
mov
adc
add
mov
mov
push
or
push
fdivl
out
std
js
jl
repz
ljmp
imul
outsb
fbld
insb
dec
arpl
mov
xor
fildl
hlt
push
sub
rcrl
pushf
js
mov
adc
mov
or
xchg
fstpt
out
jne
lea
jbe
lahf
fisttpl
xrelease
addr16
sbb
and
jl
jae
push
jl
repnz
mov
or
or
push
sahf
mov
xchg
mov
stos
sbb
call
dec
mov
xchg
mov
mov
jmp
movsb
out
call
adc
rcrb
sbb
fimull
lcall
enter
xor
mov
mov
es
aaa
test
pop
movsb
sbb
out
lcall
pop
jae
adc
xchg
or
call
lods
fs
jbe
and
sbb
push
mov
adc
lret
jo
aaa
sahf
cli
jae
sub
in
test
jae
jo
mov
fisttpll
icebp
div
adc
push
aam
jle
pop
imul
adc
mov
outsb
jo
mov
jo
leave
enter
cmp
das
and
jo
xchg
cld
xor
jle
jp
addr16
mov
adc
out
lea
imul
outsl
rclb
xchg
les
es
lock
dec
xchg
bnd
loopne
sbb
jmp
int3
bound
nop
or
lds
aaa
hlt
hlt
push
nop
rorb
pop
lcall
jl
sub
jo
inc
ret
cmp
mov
dec
xor
mov
jnp
inc
in
or
outsl
sbb
inc
movsb
and
inc
add
loope
fldenv
je
outsb
push
nop
imul
cltd
jp
sub
pop
pop
decb
std
sbb
xor
ja
xchg
dec
jo
pusha
push
push
jo
mov
mov
mov
mov
data16
fldenv
pop
mov
mov
or
mov
jae
jo
and
inc
push
cwtl
push
jo
xor
test
sahf
iret
push
adc
lcall
lock
push
push
and
fs
push
and
sub
hlt
cmp
sti
inc
jo
xor
xchg
cmp
test
sub
sbb
dec
jns
test
je
cmp
pusha
clc
mov
jb
xchg
jo
push
dec
jno
inc
orl
das
aaa
jle
mov
cmc
fwait
adc
jnp
lret
jo
add
jo
pop
and
ss
divl
cmpsb
xchg
out
out
in
jo
mov
pop
add
je
jo
cs
jbe
popa
les
int
add
arpl
imull
jns
lcall
ljmp
inc
jo
sub
in
xrelease
fdivs
push
fidivs
in
shlb
push
arpl
lahf
mov
hlt
push
jo
and
adc
push
ret
hlt
popa
jo
sahf
sbb
int3
push
xor
jns
pop
dec
jl
mov
jge
jo
sbb
out
jl
sbbb
bound
js
int3
jo
outsl
movsb
jo
lds
popf
jo
jge
ljmp
sbb
cmp
imul
xor
insb
jo
inc
jg
push
mov
adc
xchg
lcall
in
xor
jnp
push
jns
jo
adc
xchg
xchg
das
mov
mov
pop
out
xchg
je
push
nop
push
add
mov
mov
jo
repz
jns
pop
pop
mov
ss
dec
mov
push
jo
scas
add
xor
call
mov
andb
fnstenv
xchg
das
xlat
repz
mov
inc
mov
out
add
jnp
xchg
jo
push
stc
or
adc
xorb
or
sbb
sub
cmp
iret
push
rcrb
mov
les
or
xchg
pmullw
cmpsl
mov
push
sarl
jo
jno
rorb
mov
addb
je
je
mov
cmpsl
sub
stos
and
or
pop
jo
jmp
dec
adc
xor
out
loop
ds
jo
sahf
xor
cmc
mov
cmp
pop
xor
loope
xchg
mov
or
int3
shlb
adc
push
jo
gs
sub
in
leave
xor
stos
sub
push
aam
mov
push
add
cmpsb
jo
dec
mov
mov
pop
mov
pushf
sahf
jno
pop
add
xor
cltd
loope
jo
and
hlt
jo
imul
rcl
push
lea
cmp
fst
and
xorb
das
jo
jae
and
scas
jge
inc
fnop
call
xchg
jp
sub
bound
sbb
ljmp
and
addl
mov
cmp
popa
ret
jne
jae
push
jecxz
dec
lcall
jo
mov
jae
dec
nop
leave
dec
cmpsb
addb
jns
scas
cltd
jo
dec
out
inc
iret
testb
jle
mov
cmpsl
mov
sub
mov
inc
mov
and
xorb
jo
mov
popa
push
das
pop
into
xchg
mov
mov
cmpsl
icebp
mov
enter
scas
inc
xor
jo
mov
in
int
mov
jo
adc
dec
imul
ret
rorl
lods
js
lahf
mov
sbb
loopne
addr16
cmp
jb
lcall
rcr
push
xchg
mov
jo
scas
lods
xchg
xorb
xchg
lods
lock
stos
insl
push
adc
jo
jns
insb
andl
in
mov
sub
jo
clc
sbb
scas
jo
cmp
mov
xor
sahf
addr16
mov
nop
jb
nop
sub
js
jns
mov
fstl
test
hlt
das
inc
add
int3
mov
loopne
js
or
pop
cmp
rorb
sbb
and
push
int3
imul
ds
rclb
add
out
mov
dec
jnp
outsl
mov
popf
pop
lcall
mov
jo
js
mov
repnz
or
mov
fimuls
and
jp
lret
jo
push
sub
jo
and
cld
jmp
imul
jo
add
add
popa
mov
in
lret
xor
cmp
jo
loop
fadd
int3
pop
push
jo
add
leave
ret
mov
in
lret
xchg
repz
cmc
sbb
fsub
lds
cltd
dec
add
lods
push
jo
mov
jne
jo
ret
cmp
cmc
sub
bound
jne
fcomp
jmp
fldenv
pcmpeqd
jo
pop
add
rcr
jl
jb
lods
fcoms
movsl
xlat
mov
add
lods
test
addr16
dec
cmp
repnz
andb
inc
psrad
cmpsl
cmp
pop
cmp
jnp
mov
jo
stos
bndldx
push
pop
jae
loope
jo
lret
cmp
push
fbstp
pushf
push
hlt
xchg
lods
sbb
call
nop
shll
mov
out
lahf
mulb
jae
jo
leave
std
data16
mov
jo
ja
test
pinsrw
ret
cld
jmp
repz
stc
aaa
ds
jb
bound
push
cmpsl
mov
aad
cli
ss
loope
jo
pop
dec
xchg
push
pop
jns
push
es
sti
mulb
addb
pop
insb
in
mov
js
movsb
fisubrs
sub
jno
sbb
aas
or
nop
jg
dec
mov
test
lcall
jae
xchg
les
push
inc
jo
and
dec
addb
xor
push
andb
and
push
scas
inc
frstor
jo
fmull
xor
mov
rcr
outsl
mov
movsl
scas
rcll
arpl
in
pop
cmp
mov
jl
xor
lock
test
cs
fsts
sbb
jo
pop
and
mov
data16
xchg
mov
pop
jo
push
inc
int3
cmp
popa
movsl
jo
xchg
test
push
push
clc
dec
jecxz
jo
xchg
fwait
into
insl
sbb
aaa
push
sbb
xor
jo
pop
mov
add
ror
lods
jo
popf
lret
add
idivl
mov
jo
add
jo
test
jl
push
stc
outsb
jmp
not
cld
jo
divl
sub
xchg
out
mov
nop
rcrb
pop
jae
rcrb
jns
pop
js
in
lret
jo
bts
jo
fucom
pop
std
adc
aas
jo
xchg
rcr
mov
insb
das
cmp
pop
and
sbb
cmp
mov
push
movsl
lar
adc
jl
inc
in
jo
mov
mov
dec
and
push
fistl
cmp
sbb
lock
mov
pushf
nop
sbb
or
leave
jo
cmp
jno
loop
arpl
das
iret
adc
push
jo
mov
ljmp
mov
mov
fwait
adc
std
push
jo
add
es
sbb
out
enter
push
lock
jnp
sub
cmpsb
punpcklbw
sub
fdivs
cltd
jns
xchg
jmp
xor
mov
dec
jae
sbb
pop
out
outsb
jge
arpl
sti
ja
jns
aas
mov
xor
sbb
add
inc
lds
xor
inc
outsl
ret
repnz
repnz
imul
or
lds
add
mov
popa
add
adcb
mov
in
fst
out
repnz
int
mov
out
nop
arpl
xor
xchg
add
xor
pusha
add
jae
sahf
call
pop
lds
stos
cs
out
jg
sbb
or
cmp
mov
ret
jae
imul
xor
mov
lret
in
jnp
not
jo
div
hlt
adc
ljmp
lock
pusha
xor
sub
das
cs
into
fsubs
jns
or
jno
jle
shll
repz
sbb
mov
in
test
sbb
mov
dec
fwait
jae
mov
mov
clc
ret
std
cwtl
mov
and
xchg
orb
xchg
imul
repz
push
sbbb
and
jmp
and
insl
pop
mov
xor
sub
es
cmp
or
cwtl
inc
jecxz
sbbl
or
adc
dec
mov
stc
dec
mov
jae
inc
inc
jmp
cli
pop
adc
add
das
rolb
sub
mov
loopne
lret
pop
or
frstor
nop
xchg
fwait
test
out
xlat
jb
jge
push
popa
stos
mov
movsb
sbb
add
push
xlat
ret
lods
clc
mov
int3
imul
and
and
xor
repz
mov
xchg
pcmpeqw
enter
aam
add
lds
jmp
fcoml
dec
data16
js
jle
mov
imul
mov
jo
stos
inc
jae
hlt
push
sub
cmp
js
cwtl
mov
iret
test
push
mov
fstpt
sub
fidivl
mov
xchg
mov
arpl
movsl
fisttpll
pusha
cmp
stos
in
in
pop
pop
cltd
repnz
enter
fwait
mov
aaa
mov
ret
sbbb
sub
mov
lods
clc
jbe
mov
push
lock
arpl
test
jnp
cmpsb
add
add
adc
nop
mov
lret
push
push
jo
hlt
dec
pusha
adc
xchg
negl
lds
aaa
xorb
or
rclb
xchg
jp
xlat
dec
xor
push
loop
dec
and
xchg
inc
mov
or
daa
jo
pop
xchg
pop
aaa
popa
mov
lods
test
jns
shlb
mov
or
mov
add
rorl
test
add
sbb
sbb
mov
pop
loopne
jo
mov
jge
mov
push
sub
pop
push
sarl
push
ljmp
and
cmp
dec
js
pop
mov
cmpsb
cwtl
push
jg
cltd
lcall
or
jbe
sbbb
ja
cmp
std
in
scas
cmpb
sbb
xchg
popa
xchg
push
dec
outsb
in
pop
jbe
insl
mov
or
pop
cld
sarb
ret
add
int
out
jl,pn
sbb
lds
jae
rcll
jge
mov
mov
mov
ret
push
dec
sbb
dec
add
push
test
stc
je
call
push
daa
sbb
lock
hlt
iret
jae
sbb
push
sete
dec
jns
movsl
pop
pop
and
mov
scas
outsl
in
fidivs
push
adc
jle
push
stos
decl
dec
xchg
jge
lods
es
fnstsw
popf
test
in
cmp
int3
inc
mov
popa
and
mov
in
xchg
pop
rclb
ja
mov
inc
mov
adc
cli
cld
mov
jae
in
mov
repnz
mov
sahf
mov
dec
cmp
cmpsl
inc
xchg
push
add
jae
or
push
lds
arpl
repnz
test
pop
mov
imul
sbb
vphaddbw
cltd
int3
out
or
mov
arpl
push
push
insb
aas
std
cmc
mov
ret
repz
fnstenv
cmp
adc
add
or
idiv
fistpl
cmp
sub
lea
sbbl
stc
pushf
xchg
aad
inc
ficoml
ljmp
loop
pop
decb
add
sub
std
mov
arpl
cmpsl
imul
arpl
idiv
rcrl
add
es
push
cmp
or
lret
sbb
test
insb
mov
hlt
movsb
sub
mov
ret
in
mov
lret
aas
and
sahf
loopne
stos
jbe
movsl
sub
outsb
xchg
shll
fwait
push
pushf
icebp
cs
jns
jp
or
jne
and
jae
pop
inc
shlb
and
test
insl
outsl
int
pop
mov
and
pop
and
and
idiv
sbb
dec
pop
push
add
pop
pop
push
inc
lods
insl
pop
lret
aaa
cld
std
data16
negl
lea
enter
fidivrl
push
dec
repz
mov
or
stos
or
inc
mov
mov
popa
in
xchg
mov
je
cmpb
xor
push
mov
sbb
nop
mov
xor
push
inc
cli
push
jnp
lahf
push
aas
mov
subl
jb
dec
pop
adc
sarl
scas
push
popa
cmpsl
xor
cmpl
jns
xor
xor
inc
or
cmpsb
xchg
inc
jmp
loop
cli
and
jo
arpl
stc
int3
es
ja
sbb
mov
pop
out
jo
iret
and
push
lods
cmpl
jae
repnz
out
lahf
jmp
imul
arpl
clc
push
aam
push
add
lahf
popf
fcomi
sbb
xchg
fs
or
jg
mov
addr16
mov
sbb
insw
sub
movsb
xor
lock
and
clc
repnz
mov
rorb
add
int
xor
mov
sarl
movsb
push
sub
xor
sub
push
shrl
pushf
out
jbe
js
outsl
mov
lods
xchg
sub
push
sbb
mov
inc
jns
push
fdivrl
mov
cmpsb
or
jo
ret
dec
dec
push
outsl
test
int3
and
lret
bound
push
mov
mov
je
shl
fisubrl
sbbb
add
and
lock
in
xchg
mov
and
push
jo
pusha
xor
mov
lock
outsl
mov
and
frstor
stos
fwait
bound
jae
mov
adc
mov
call
push
arpl
test
lock
ret
sbb
mov
int
shrl
arpl
scas
and
sub
push
popf
jmp
xlat
pop
pop
push
int
mov
mov
in
jns
int3
push
mov
adc
and
xchg
dec
es
sub
jge
bound
scas
imul
stos
cmp
out
sbb
popf
je
pop
xor
adcl
cmp
out
daa
das
sbb
test
int3
sub
fldenv
lods
xchg
nop
or
insb
leave
xor
or
push
jl
filds
rclb
sahf
push
pop
xor
jg
mov
shrl
gs
imul
lahf
or
and
fs
push
arpl
in
push
or
xor
push
inc
dec
repnz
jmp
cmpsb
mov
mov
pop
dec
push
fistps
sub
scas
dec
mov
loop
mov
xor
adc
call
add
call
cmpsl
and
push
and
test
testl
cmp
add
stos
jnp
mov
pushf
nop
inc
sbb
fiaddl
mov
mov
aam
xchg
pusha
iret
popf
jge
insb
lea
insb
fwait
sub
and
xchg
fstpl
loopne
lahf
adc
mov
xchg
or
xchg
rep
gs
dec
sub
sub
test
pop
jno
fnsave
dec
aam
push
shlb
lahf
movsl
cltd
dec
and
inc
xor
sbb
test
adc
mov
pop
ficoms
lods
das
jnp
mov
fidivl
mov
pop
sub
inc
repz
mov
mov
cs
int
dec
jb
mov
mov
lret
fsubs
adc
cwtl
cmp
dec
hlt
push
aam
test
gs
out
dec
in
jae
ds
fnsave
cmp
sbb
pop
mov
es
scas
pop
push
das
cmp
jmp
sub
mov
jns
or
sbb
mov
sub
sub
xchg
pop
loope
adc
dec
in
sbb
push
push
pop
sarb
arpl
mov
fisubs
insl
test
int
or
insb
add
push
jmp
xchg
fisttpll
cmp
insb
jmp
push
sarl
movl
jb
andb
clc
rorb
cld
sub
pop
pushl
call
scas
jne
cmp
sbb
mov
dec
mov
xchg
rorb
faddl
jae
push
in
and
lock
enter
push
shrl
or
dec
mov
sub
sbb
xor
jns
aas
xchg
push
sub
repnz
inc
jg
mov
call
push
xchg
push
fnstenv
fwait
arpl
add
jae
xor
fwait
int3
fldt
xor
mov
jecxz
sbb
mov
add
or
push
push
adc
mov
test
jmp
call
mov
mov
cmpsb
outsl
fs
icebp
test
sti
push
pop
cmp
cli
jp
jo
xor
flds
je
dec
sub
and
dec
push
sbb
test
mov
sbb
je
jae
psrlq
pop
outsb
das
fildll
sarl
add
push
inc
dec
stos
jns
add
inc
and
sub
mov
lahf
jecxz
ret
fs
imul
js
add
mov
pop
push
test
outsb
and
shll
push
stos
dec
outsl
push
repz
sub
loopne
clc
inc
push
icebp
icebp
mov
xor
jne
icebp
jmp
loop
sti
adc
mov
lock
pop
inc
jae
call
mov
addr16
sub
lods
nop
hlt
push
mov
insl
dec
lcall
mov
mov
andb
les
cli
out
and
dec
inc
aas
sub
lcall
mov
mov
push
int
rolb
add
inc
add
insb
mov
ret
mov
cmc
jp
data16
pop
dec
mov
aam
mov
push
outsl
push
mov
xchg
xor
orb
arpl
jmp
int3
cmpsb
push
mov
jb
adc
pushf
sbb
cli
mov
jl
jns
es
cmp
mov
adc
xchg
push
fbld
adc
push
mov
arpl
scas
sbb
sbb
mov
mov
arpl
inc
mov
inc
push
sub
xlat
and
jmp
sub
das
xchg
push
inc
fs
aam
dec
pop
in
sub
lea
addr16
cmpsl
xor
pop
push
push
and
dec
in
pop
push
fs
out
lds
add
jo
sahf
iret
jecxz
xchg
mov
icebp
jbe
fcmovnu
jo
rcrb
pop
cmc
or
int
into
sbbb
hlt
das
pop
push
arpl
call
lcall
mov
mov
add
in
push
or
imul
nop
int3
mov
out
icebp
fdivs
fildll
fstpt
jg
sbb
pop
hlt
and
cmp
jg
rcr
shlb
ret
pop
movsl
dec
dec
loop
jo
sub
push
cmp
adc
jo
cmp
fcmovu
adc
insb
jo
pop
mov
xchg
rolb
mov
jno
sub
push
movsl
xchg
das
or
jo
xor
push
popf
sarb
lock
adc
dec
jo
test
cwtl
add
sub
and
jmp
dec
dec
push
xor
inc
cs
jmp
xchg
jae
and
data16
les
sbb
sub
push
inc
hlt
int3
sub
aas
cli
es
jge
mov
out
sbb
push
inc
cmpsl
xchg
in
jns
push
mov
inc
pop
or
push
fsubp
mov
push
add
adc
or
push
sbb
fs
movsb
decl
and
pop
mov
mov
addr16
cmpsb
push
lret
jp
test
das
dec
in
xchg
or
sub
mov
pushf
fbld
icebp
lods
sbb
cld
jns
inc
std
and
bound
das
xor
jl
addr16
sbb
jae
and
iret
jns
sbbb
fs
pushf
pop
push
mov
jns
sbb
mov
jle
mov
into
ja
in
scas
subb
dec
jae
sahf
push
in
push
shll
inc
sbb
mov
movl
ss
pop
inc
add
cltd
pop
mov
sub
adc
xchg
imul
jl
sti
cmpsb
lds
jp
push
lret
mov
imul
icebp
in
arpl
xor
mov
add
jle
arpl
push
sub
scas
scas
decl
imul
aaa
out
insb
pushf
xchg
movsb
adc
jns
jge
inc
jbe
add
scas
and
adc
xor
push
or
adc
xor
stos
lea
pop
scas
push
imul
js
out
rclb
mov
mov
jmp
repz
xchg
mov
rcll
inc
outsb
enter
fdivrs
sub
sbb
push
leave
xlat
loope
negb
aaa
popl
cmp
mov
scas
jb
mov
jae
sti
jmp
sub
jnp
js
jl
sahf
jae
fwait
mov
cs
jmp
cltd
cmc
push
pop
cmpsl
cmp
das
sbbb
fptan
cld
sbb
lahf
fucom
fdivl
push
getsec
imul
sub
js
fs
mov
sub
enter
pop
outsl
leave
mov
lock
cmpsl
out
pop
hlt
and
push
jno
add
adc
sub
ss
rcrb
loop
sub
pop
push
gs
mov
std
and
lahf
imul
inc
notl
pop
inc
int3
into
ss
lock
hlt
or
cmpsl
mulb
imul
pop
shlb
pushf
jl
arpl
mov
cmpsb
add
insl
repz
cltd
push
add
dec
adc
inc
ja
sbb
scas
addb
fsts
inc
hlt
fimull
cmc
loope
out
sbb
dec
fnsave
fmull
mov
mov
sub
arpl
outsl
in
mov
pop
fs
out
push
pop
xchg
cmp
pop
inc
cmc
cmp
and
repz
xchg
pop
inc
ret
fnstenv
xchg
inc
popa
and
js
mov
out
push
or
das
cmc
popa
xchg
ja
adc
xchg
je
mov
std
jae
mov
fldl
cmp
fldcw
mov
test
clc
jns
push
fnstcw
jo
ljmp
dec
cs
subl
fstp
shl
lret
or
fsubr
pop
mov
es
dec
shrl
es
icebp
pusha
dec
push
insb
or
nop
pop
roll
rol
inc
rol
push
mov
arpl
cld
cld
enter
pop
or
clc
out
inc
clc
js
roll
jecxz
or
daa
scas
jne
xchg
dec
cmp
or
out
hlt
inc
fmuls
xor
stos
lock
mov
outsl
cs
jae
mov
fdivl
orl
sub
scas
cmp
xchg
add
fisubl
fwait
and
and
popa
lahf
adc
cmp
push
gs
sahf
mov
scas
test
dec
mov
lret
es
dec
hlt
sarl
dec
lea
sub
stc
mov
je
push
jae
in
fisubs
xor
inc
idivb
lea
dec
arpl
mov
stc
cmp
lods
pop
xchg
lock
mov
arpl
bound
aas
bound
pop
shr
push
in
int3
push
mov
xorl
les
sub
loop
sbb
fs
add
cmpsl
cmp
dec
jae
add
and
jge
inc
pusha
in
xor
insl
pop
and
and
xchg
scas
out
sbb
lret
jmp
pop
fisubs
adc
test
ds
fdivl
adcb
in
mov
out
outsl
push
sti
pop
mov
push
jp
cmp
lcall
sub
push
or
in
xchg
mov
ja
arpl
cmp
xor
inc
xchg
mov
imul
xchg
cmc
or
jp
push
sbb
dec
dec
jae
xchg
hlt
ljmp
out
xor
aas
push
lock
iret
jl
cli
add
mov
cltd
inc
add
jae
movsb
lods
out
jle
push
fcomip
fstpl
xor
arpl
sbb
jae
les
push
and
mov
in
aad
or
or
mov
push
test
cmp
push
mov
int
loop
test
test
mov
std
out
lods
stos
lds
scas
imul
fcomp
out
mov
cmp
pop
push
aad
in
dec
cmp
cmc
pop
cmpsl
imul
inc
inc
int
call
hlt
popl
das
adc
mov
repnz
cmp
jb
xchg
fucomip
nop
enter
sbb
inc
mov
packsswb
test
es
inc
int3
cs
and
sbb
inc
daa
hlt
pop
icebp
test
dec
nop
inc
mov
adc
mov
push
mov
sarl
insb
xor
mulb
ss
cltd
jp
and
or
push
test
xor
dec
dec
jae
push
lods
test
leave
sbbb
push
sbb
pop
cmc
sub
insl
in
mov
mov
sub
shrb
icebp
loopne
adc
cmp
frstpm(287
adc
mov
jns
cmp
jae
sub
arpl
or
dec
int3
dec
in
vpsubb
and
xor
mov
mov
lods
fisubs
mov
in
fldt
lret
mov
push
lret
xchg
xor
lods
xor
fs
iret
mov
add
repz
inc
pop
sub
movsl
rcr
mov
cmpsb
pop
addr16
sbb
addl
imul
lock
jge
add
mov
idivl
scas
mov
iret
insl
push
clc
insb
fs
std
mov
and
scas
mov
repnz
movsb
test
rcll
outsl
xor
inc
shrb
inc
es
pop
aam
mov
int
mov
mov
jp
repz
cmp
push
out
inc
pop
call
repnz
adc
out
cmp
in
les
js
scas
adc
xchg
jne
mov
arpl
shll
aas
out
aas
hlt
xor
push
rclb
xchg
jg
cmpsl
movsb
push
icebp
pop
les
scas
add
ficoms
mov
jae
fcoml
fbstp
mov
movsl
scas
sub
dec
jnp
push
lcall
insl
pop
or
test
jg
mov
mov
mov
mov
mov
inc
push
fucomip
les
je
movsb
cmpsl
mov
fwait
ja
xlat
mov
xchg
dec
add
pushf
scas
rcl
inc
in
cld
lret
in
push
call
cmp
data16
pop
push
pop
cmpsl
pop
fwait
push
push
dec
jnp
in
in
jo
push
pop
fdivr
pop
mov
bound
je
imul
sbb
mov
cmc
jmp
adc
xchg
stos
mov
mov
push
push
outsl
js
push
pop
xor
adc
push
and
fwait
ljmp
pop
inc
int3
sub
push
fildll
jmp
jno
add
pop
sub
enter
jp
imul
clc
jns
dec
cmp
lds
imul
inc
leave
xchg
rcll
imul
maxps
les
push
es
cmc
xchg
jae
lock
jg
push
lea
and
push
mov
xchg
mov
pop
addr16
mov
mov
leave
mov
hlt
jns
jo
and
cld
xor
addb
imul
adc
jae
pop
das
mov
data16
mov
fsubs
pop
fldl
dec
test
jle
mov
push
dec
inc
push
aad
xchg
xor
dec
stc
mov
shr
sbb
jo
rol
dec
pop
xor
mov
mov
push
cmpsb
arpl
adc
pop
xlat
and
ret
fistps
or
add
mov
mov
addr16
in
dec
jle
lds
mov
les
inc
pop
stc
outsl
iret
dec
lea
dec
shr
and
dec
mov
jg
ret
sub
push
push
mov
arpl
sub
xchg
pop
sbb
ss
xchg
sub
popf
rcpps
push
jo
sahf
pop
add
lea
insl
jo
mov
clc
lock
test
or
mov
xchg
dec
dec
jecxz
in
jno
jo
daa
cwtl
push
mov
pop
leave
sub
in
mov
jle
fisubl
icebp
push
cld
jo
in
dec
xchg
or
fwait
pop
jo
jmp
mov
pushf
enter
sub
xchg
sbb
xchg
dec
jnp
lods
push
push
mov
cmp
scas
out
repz
roll
inc
pop
test
inc
aad
lods
imul
mov
push
xor
sti
xchg
and
and
nop
pop
push
sarb
stc
cmc
sti
fnstenv
push
stos
lret
jecxz
sub
imul
sarl
or
arpl
icebp
mov
dec
jo
sub
ldmxcsr
or
mov
xchg
scas
jo
clc
and
jo
test
sbb
out
mov
sete
sub
adc
repnz
jo
iret
push
pusha
arpl
xor
clts
cld
mov
mov
jo
fsubr
loop
addr16
jo
negb
pop
jbe
xor
sub
sub
jp
adc
push
pop
push
pop
in
mov
fisubrl
xchg
nop
cmpsl
jo
adc
xor
dec
test
mov
xor
mov
out
jmp
divl
imul
scas
shl
sub
loopne
std
mov
sub
test
out
daa
test
jo
mov
stc
jo
mov
shrb
dec
add
mov
lods
popf
out
std
leave
lahf
loopne
inc
jo
divl
ror
sbbb
jnp
jo
sbb
pop
jo
push
push
jne
mov
bound
and
mov
scas
icebp
xchg
cmp
mov
and
mov
mov
lahf
add
jae
js
xchg
stos
nop
push
sarb
loopne
xchg
call
cmp
mov
rolb
mov
xor
sub
scas
sbb
inc
out
je
jo
out
pop
js
daa
into
jo
jne
subb
jle
pop
aam
mov
jo
push
mov
or
shrb
push
or
je
out
stc
je
jo
sub
pusha
fs
lods
pushf
jo
std
sub
inc
jo
sar
push
imul
out
dec
cli
pop
sub
cltd
popa
dec
nop
mov
adc
ret
inc
divl
fdivrl
jl
inc
les
lret
notl
into
mov
outsb
jg
jo
cmp
jp
push
mov
sti
push
dec
jo
js
xchg
add
push
dec
imul
shll
es
int
and
test
mov
pop
or
mov
jo
jns
call
jno
outsl
pop
jo
inc
sbb
scas
xor
aam
jl
dec
adc
das
lods
jae
sahf
stos
jo
neg
or
jae
es
dec
cld
call
clc
adc
std
fldcw
adc
push
sbb
insl
loopne
cld
mov
pop
push
ds
ret
mov
mov
and
cli
jecxz
imul
popa
in
and
in
xchg
lahf
mov
pop
inc
int3
mov
mov
mov
jp
mov
pop
push
mov
xor
sti
cmp
testb
outsb
jae
test
ret
imull
mov
loop
js
fnsave
fldcw
xchg
fistps
rcll
fwait
repz
or
inc
inc
aas
jbe
pop
test
sub
mov
and
sbb
mov
pop
pop
es
flds
sbb
iret
enter
cmpl
xchg
sbb
and
xlat
in
cmp
lret
jb
popf
cmpsl
xor
fcompl
je
push
push
push
std
push
push
xor
or
loope
cli
cmp
std
push
insl
mov
movsb
inc
xor
xchg
dec
mov
jge
jg
xor
out
push
ret
push
scas
je
mov
leave
push
dec
aad
sti
jne
and
in
push
sti
enter
mov
jbe
xchg
or
lret
jge
subl
dec
clc
rcll
inc
fisubs
mov
sub
add
mov
movsl
std
cmpsb
adc
ljmp
xchg
mov
jno
cld
lahf
sbb
xchg
bound
mov
enter
jnp
sub
cmpsl
loopne
cmpsb
imul
cmc
and
lods
add
mov
sub
fcomp
jmp
pop
and
mov
push
enter
push
push
sub
push
or
repz
sbb
imul
adc
pop
push
in
sub
xchg
stos
mov
out
jecxz
icebp
mov
add
jnp
fwait
mov
js
lods
cmc
lahf
inc
jae
mov
fistl
jge
ret
cmp
mov
aam
ja
push
adc
pushf
push
mov
sbb
aam
sbb
sti
pop
add
test
xor
cmpsl
xchg
sbbl
stos
mov
pop
mov
insb
aaa
arpl
cmp
loope
popa
shrb
mov
add
loope
or
jg
and
mov
lret
mov
mov
mov
dec
sub
add
ljmp
inc
push
or
adc
insb
lods
pusha
test
lret
jae
push
lea
ja
push
bound
sub
push
pop
sub
mov
dec
and
cmc
lahf
inc
xor
jge
faddp
insb
xor
dec
xchg
mov
scas
fwait
das
dec
xor
out
push
sbb
add
sarl
xchg
adc
cmpsl
inc
push
iret
mov
or
and
andl
repnz
insl
sub
int
es
jp
out
mov
push
adc
mov
dec
xchg
sbb
out
mov
testb
sbb
or
jl
xchg
xor
or
mov
lods
add
xor
xchg
jne
adc
das
sub
sub
and
leave
mov
shrl
push
out
jmp
dec
xor
ficomps
movsb
addb
dec
mov
mov
push
mov
xchg
aad
xchg
push
jo
lahf
push
xor
or
pop
lock
pop
cmc
hlt
or
add
xchg
push
mov
dec
cmp
or
sbb
inc
push
fwait
jo
or
sar
jo
pop
hlt
cmpsb
sbb
cmc
iret
lea
andl
jo
pop
int
xchg
jno
push
nop
or
test
loopne
popa
dec
push
jne
nop
js
fcoms
insl
dec
push
cld
fdivrl
stos
testl
xor
pop
mov
repz
aam
mov
hlt
fnstenv
loop
mov
rcrl
out
leave
jle
sub
out
jo
and
lea
fisubs
add
mov
das
pop
lret
imul
add
xorl
adc
add
push
mov
push
ja
mov
jnp
jno
xchg
imul
aad
lods
arpl
inc
aas
xchg
enter
jle
xor
cmpsl
and
repnz
push
mov
xorb
add
dec
jbe
bound
das
bound
jo
jp
mov
ud1
dec
dec
bound
mov
fs
rcl
mov
js
loopne
xorb
mov
sbb
push
mov
movsl
jp
sub
sysret
jb
cmp
jb
lods
inc
es
mov
mov
iret
add
stc
adc
cli
fs
or
gs
js
and
cmp
inc
inc
std
cmp
xlat
jnp
push
mov
cmpsb
xchg
jo
sub
loopne
jo
cs
add
fldcw
int3
cltd
std
and
bound
data16
jb
nop
pop
notb
outsb
push
jl
xor
clc
jae
mov
cmpsl
imul
jb
daa
test
fdivrs
cmp
xor
mov
je
shr
daa
sub
popf
adc
jmp
mov
jo
mov
vpaddusw
outsb
pop
movsb
adc
jo
out
idivl
dec
inc
jo
cmp
fidivl
clc
inc
aad
pop
mov
jo
pushf
fwait
push
jns
outsb
jo,pt
mov
adc
xchg
in
int
insl
in
loope
xchg
cmp
jbe
add
roll
push
xor
aas
jbe
out
std
lods
or
rol
jo
inc
xchg
jge
mov
stc
dec
xchg
das
test
jo
sbb
ucomiss
imul
sbb
sarl
jo
shlb
into
or
mov
mov
adc
jbe
jo
fdivrl
inc
jle
jo
push
xchg
xor
fnstcw
cmp
cmp
pushf
or
outsl
pop
cmp
fs
or
mov
cwtl
or
in
sub
fistpl
mov
shrl
mov
push
sub
insl
push
es
outsb
lret
push
mov
ljmp
xchg
push
jo
push
add
add
push
lods
outsb
jo
pop
inc
dec
xorl
inc
jo
sub
push
dec
pushf
loop
leave
sbb
cli
xor
mov
jnp
nop
fsubl
inc
sub
and
loopne
movsb
push
test
jae
aad
call
mov
jo
lea
frstor
ret
cmp
addb
je
xchg
lret
push
jne
jo
pop
mov
push
fisubl
jo
stc
cmpb
pandn
cmp
sahf
jecxz
movsl
push
push
xor
and
dec
insb
out
mov
jo
adc
mov
ja
dec
jo
filds
jg
mov
xchg
push
insl
jmp
test
movsl
pop
cld
push
xchg
inc
jnp
mov
jo
jge
bound
dec
and
ret
lret
cmc
icebp
loop
push
lock
sub
pop
repz
out
jo
rolb
clts
xor
cmpsb
pop
rcll
jo
xchg
nop
cltd
fsubs
cmp
testl
xor
loope
add
dec
cmp
pop
mov
test
lahf
sub
or
ficomps
daa
imul
adc
push
ss
into
xor
xchg
repnz
jo
pusha
lahf
popf
fs
dec
pop
fnstsw
jb
fwait
ret
add
iret
shrl
add
and
loop
mov
lcall
fidivl
push
daa
inc
mov
je
jo
imul
push
shl
xor
xor
scas
adc
cmc
comiss
subb
pop
mov
jle
lds
push
sarl
dec
push
addr16
jo
mov
pop
push
sbbb
js
icebp
push
dec
addr16
xorl
jns
jae
xchg
fs
jo
not
push
pop
dec
xor
cltd
xchg
jbe
jg
jo
cmp
mov
inc
jo
fs
xchg
mov
cmp
jo
out
add
fidivs
inc
test
fsubl
xor
jo
fmuls
les
adc
push
and
aas
out
rolb
sbb
int3
in
orb
add
js
movsb
mov
sbb
jo
sbb
adc
out
jo
jge
push
pusha
add
push
out
in
stos
xchg
and
fidivs
xor
mov
xor
bsf
push
outsl
jl
cmp
test
sahf
jo
fsubrs
int
ja
jo
lcall
mov
aaa
jb
or
js
testb
cmp
sub
lods
jo
fmul
mov
jo
and
lea
daa
sub
cs
scas
je
dec
xor
les
test
stos
mov
add
sti
repnz
mull
mov
shld
lahf
out
jp
ss
cmp
lret
inc
sbb
dec
adc
jl
hlt
push
mov
les
lds
cmpsb
js
xchg
inc
pushf
je
jns
out
dec
mov
shlb
and
mov
mov
mov
das
sbb
xlat
mov
mov
jns
fisttpll
and
push
orb
push
jl
jge
pop
fsub
inc
mov
imul
jo
dec
test
ret
xor
mov
add
mov
xorl
sub
dec
loopne
mov
jo
sbb
int
or
mov
fcomps
jg
into
bound
push
ror
and
inc
imul
jmp
pop
ret
sub
out
jns
imul
mov
dec
push
xchg
jae
popf
sub
and
push
pop
repz
push
iret
mov
sub
add
add
and
sub
movsb
repz
lea
sub
cmpsb
outsl
jo
in
sbb
or
fists
imul
js
out
aas
push
adc
push
insb
cmc
jg
inc
loopne
and
lahf
imul
fcoml
push
mov
xlat
mov
icebp
sbb
add
jo
sub
sub
pop
stos
add
xchg
jo
or
rorb
data16
movsl
mov
cmp
dec
testb
pop
and
mov
jl
aaa
bound
xlat
xchg
testl
jo
inc
dec
push
outsb
movsb
and
sub
jo
cmp
cld
push
insl
jo
dec
lock
shl
ss
jmp
test
sbbl
add
lds
mov
cmp
jo
mov
push
divb
gs
dec
bound
fdivs
imul
dec
mov
sub
ljmp
jl
jg
int
ljmp
imul
jo
inc
mov
push
hlt
decl
mov
cmpsl
push
jo
mov
jo
movl
jo
nop
jns
test
cmpsl
adc
pop
or
leave
sub
jae
cltd
dec
gs
jb
dec
or
and
into
or
push
adc
scas
mov
rcr
cwtl
jae
push
dec
in
jle
mov
mov
pop
sbb
jns
stc
adc
or
fistps
dec
xor
mov
hlt
test
xor
mov
repnz
inc
or
scas
pop
data16
pop
xor
cmp
add
cmpxchg
out
dec
push
and
sub
push
lret
loope
push
clc
inc
jmp
dec
or
inc
dec
push
add
jecxz
out
mov
mov
mov
ret
or
imul
and
push
jae
scas
xchg
mov
repnz
sbb
jno
adcl
fimull
jae
add
xchg
dec
hlt
mov
ja
loope
push
pop
fimull
jne
rcll
fcomi
cmovae
and
push
daa
out
push
mov
dec
mov
push
data16
mov
push
or
mov
filds
outsl
jle
push
aam
mov
loop
jne
mov
jb
arpl
push
test
cwtl
rcrb
int3
and
add
mov
jno
jae
rcll
test
out
nop
adc
jg
enter
lahf
sub
lret
daa
inc
out
fs
sub
test
aas
lcall
pop
dec
mov
mov
shrl
mulb
cmp
push
arpl
dec
and
addr16
push
ja
mov
pop
lahf
and
outsl
jae
out
nop
sbb
or
or
orl
cwtl
cmc
ficomps
dec
jb
push
ss
aad
not
push
inc
mov
xor
arpl
push
jnp
mov
add
rclb
add
mov
adc
adc
imul
sbb
push
out
jne
call
insb
nop
pop
jae
and
mov
lds
ret
add
mov
aam
push
stos
jns,pn
sub
mov
das
dec
add
mov
enter
or
out
push
mov
shlb
popf
sbb
sbb
dec
inc
imull
pop
inc
ret
std
insb
in
shrl
scas
leave
mov
loop
mov
xor
or
test
jae
inc
adc
cmpsl
out
js
pop
inc
bound
stos
xor
cmpsl
mov
or
mov
xchg
movsl
scas
into
push
stc
sbb
or
xor
roll
mov
jo
inc
andb
test
btc
xlat
addr16
ss
gs
xor
cmpsb
mov
aas
pusha
xor
dec
jae
test
aaa
mov
push
and
aad
sbb
bound
enter
or
ds
push
add
mov
jmp
int3
add
mov
or
ljmp
jg
add
cmp
and
cmpsb
sbb
mov
lret
pop
jmpw
out
loope
push
adc
sbb
jns
xchg
lcall
mov
jno
push
clc
imul
ud0
shlb
pop
jne
mov
xchg
mov
and
or
push
adc
scas
aas
sub
push
cmpsb
fiadds
cmpsl
add
push
daa
push
xor
clc
arpl
push
nop
popf
js
or
movsl
cmpsl
clc
cltd
mov
push
js
jns
insb
test
std
test
insl
mov
jge
pop
jns
das
jno
dec
arpl
int3
mov
scas
jae
and
ja
call
lea
arpl
sarl
jb
ljmp
jb
int3
sbb
aaa
pop
push
lret
add
sbb
decb
jmp
jns
dec
mov
das
hlt
mov
insl
push
xchg
iret
scas
fs
pop
sbb
lahf
cmp
jo
arpl
test
jecxz
inc
pop
fwait
jmp
mov
adc
movsl
insb
imul
xchg
lcall
sbb
jle
jae
dec
inc
mov
push
fiaddl
dec
cmp
dec
pslld
mov
jns
shlb
int3
in
mov
js
arpl
ficoms
sarb
mov
pop
insb
push
mov
outsl
in
jmp
push
cli
sub
shll
xor
push
jnp
fisubrs
arpl
xchg
lret
cmp
cmp
gs
jns
or
pop
lods
mov
stos
sbb
mov
push
mov
jae
jge
and
add
adc
scas
add
loop
jge
int3
clc
adc
and
addr16
daa
adc
or
jle
outsl
stc
arpl
movsl
add
xchg
fs
push
inc
ja
je
cmpsl
cmp
arpl
and
in
les
or
mov
push
loope
dec
lret
pop
stc
cs
arpl
into
movsb
invd
mov
mov
adc
inc
push
xchg
sub
out
jle
pop
icebp
pop
stos
lods
mov
rolb
arpl
das
jae
jg
mov
imul
jb
pop
das
ja
aam
push
sub
xchg
dec
orb
js
fwait
test
cs
stos
sub
in
je
dec
lret
mov
cmp
lea
inc
jno
fisttpl
cmp
lahf
ret
push
int3
sbb
sbb
in
pop
jl
insl
xor
jae
mov
fidivs
fildll
out
fldenv
lds
sub
pop
inc
xlat
dec
xchg
cmp
out
push
push
flds
stos
shlb
xor
jne
inc
lods
or
xor
cmpsb
inc
sti
call
shrb
test
fldenv
int3
sub
mov
inc
shll
xlat
pop
ror
insb
cmc
xor
pop
pop
pop
push
push
jl
xor
inc
test
outsl
inc
insl
roll
inc
mov
mov
mov
nop
ret
cld
cmp
mov
fistps
pop
inc
cmpsb
ret
nop
sbb
lcall
adc
ror
sbb
inc
rorb
jle
jae
es
test
xor
stos
and
fs
rcrl
test
and
idivb
push
out
mov
sbb
sub
mov
jne
add
call
frstor
lock
inc
and
outsb
icebp
out
jl
lahf
mov
adc
jg
cmp
rcrb
jae
cmp
xchg
add
cli
das
push
loope
imul
mov
push
cpuid
insl
mov
outsb
adc
test
fdivrl
imul
fwait
shll
adc
popf
jo
pop
inc
mov
cmp
inc
cmpb
loope
imul
sbb
push
cmp
add
pop
mov
fwait
cmc
mov
adc
jo
add
lea
push
push
mov
jo
clc
pop
push
adc
hlt
jo
push
cmp
or
lods
je
mov
mov
xchg
popa
xor
sub
ja
mov
or
sbb
jo
fstl
cmp
push
dec
mov
dec
xchg
dec
ljmp
loope
push
mov
jge
js
and
bnd
jo
mov
leave
jo
mov
pusha
pop
push
pop
push
das
dec
out
and
nop
frstor
and
shll
xchg
jo
inc
dec
imulb
mov
jae
das
xchg
lock
pop
nop
lods
in
inc
gs
out
fyl2xp1
notl
hlt
mov
jno
or
inc
dec
or
sbb
jbe
or
inc
jo
push
push
roll
insl
jo
aad
aas
mov
iret
insb
add
fs
mov
or
outsb
int
mov
fstpt
or
jno
sbb
mov
fidivl
mov
loop
cmpb
xchg
fwait
ds
jmp
pop
jbe
js
mov
pushf
rol
push
mov
test
mov
test
mov
dec
in
lcall
clc
fwait
movsl
push
pop
out
insb
and
push
fsubp
push
mov
sub
es
ja
xor
inc
fildl
mov
enter
outsb
sti
movsb
jmp
jo
mov
mov
push
sub
jbe
iret
xor
pop
cmp
fisubl
outsl
or
sbbb
je
loop
jo
sub
cmp
xchg
out
repnz
jb
jo
jl
sub
loop
adcl
adc
icebp
pop
cld
jo
scas
xor
sub
ja
out
mov
dec
jl
lea
lock
loope
in
and
xchg
test
jle
fs
popf
sub
fwait
or
or
shl
jg
mov
js
dec
das
hlt
jmp
out
ret
add
aas
push
push
popf
int3
adc
repnz
jl
push
dec
push
sub
mov
dec
insb
inc
out
sbb
pop
jo
insl
push
sti
enter
jo
sub
in
lods
inc
mov
js
pushf
adc
mov
leave
jo
push
pop
jp
xorb
lret
daa
push
aad
sbb
push
pop
jl
cmp
jo
push
mov
in
mov
push
xor
das
pop
push
jo
xor
adc
orb
or
and
inc
pop
sbb
cmp
mov
jo
orl
push
xchg
push
pop
mov
or
in
lds
sub
das
pusha
pop
pop
push
lcall
fdivl
imul
mov
pop
or
cmp
push
cmp
in
push
jo
pop
ret
cmp
nop
ljmp
xor
aam
lcall
sarb
push
ret
jb
outsb
jbe
outsl
jo
and
lods
cmpsl
adc
push
in
fdivp
data16
jns
jo
call
ja
or
je
jo
pushf
push
dec
adc
scas
sub
je
jge
out
enter
add
pop
fdivl
cli
inc
push
cmpsl
jmp
neg
jo
testl
jo
fisttps
inc
xchg
add
jo
mov
jl
fxch
inc
in
test
push
adcb
dec
fnstsw
lock
mov
jo
int
sbb
imul
mov
inc
pop
adc
pushf
nop
cmp
lcall
inc
imul
rolb
or
ja
insb
sub
negb
mov
xchg
pop
pop
iret
sarb
push
pusha
mov
sub
inc
jo
mov
xchg
pop
push
xchg
movsb
sub
es
push
call
addr16
add
or
push
in
in
add
jo
fwait
mov
jmp
lcall
xchg
mov
adc
jmp
imul
jnp
sbb
enter
jecxz
loop
sahf
cmpsl
sub
push
repz
inc
dec
or
rcrb
lret
jo
pop
xchg
xchg
fnstenv
jne
pushf
repz
mov
xor
into
fbld
dec
dec
pop
add
add
mov
push
xchg
in
xlat
in
pop
jno
insl
js
mov
xor
lds
xchg
in
jo
mov
sbb
fisubl
xor
dec
das
xchg
jo
lods
jge
xchg
or
add
pusha
ja
sub
popa
jbe
dec
loopne
adc
jo
mov
mov
jo
push
rolb
mov
push
cmpsb
sbb
pop
inc
jns
sub
je
push
jnp
jb
iret
imul
bound
mov
popa
js
add
sub
inc
push
jo
sbb
jnp
mov
test
mov
dec
cli
enter
rcrb
movsl
inc
repz
jl
mov
mov
mov
testl
pop
or
nop
loop
xchg
jnp
cld
pusha
jo
leave
push
mov
xchg
fdivrs
cmp
rclb
xchg
fs
xchg
jo
add
int
addr16
lea
rclb
push
repnz
movsl
and
scas
xchg
nop
jno
xor
xchg
jge
mov
mov
lret
enter
ss
sub
test
aad
es
cltd
push
ja
cmpb
ljmp
jo
mov
loope
adcb
mov
xchg
stos
mov
jo
lock
frstor
outsl
jo
aad
imul
orl
adc
inc
iret
jo
lods
rclb
sar
pop
cmpsl
adc
pop
nop
xorb
mov
push
cs
pop
cmc
jmp
lret
les
inc
cmp
out
stos
adc
sbb
out
fcoms
cli
cmp
jb
subb
jo
add
pop
or
sub
add
sbbl
push
jns
jnp
lea
jb
pushf
lahf
lret
pop
scas
imulb
inc
push
and
mov
pop
push
insb
stos
cmp
gs
jb
adc
ret
jno
fwait
mov
movsb
cmc
xchg
pop
sub
mov
xchg
repnz
pop
scas
jmp
pop
js
shlb
jo
sbb
mov
jmp
dec
xchg
pop
aad
jbe
adc
xchg
int
jne
mov
push
xchg
push
mov
mov
jo
sahf
and
fildll
cmova
shlb
mov
and
stc
inc
rcll
movups
xchg
and
mov
insb
xor
mov
push
pop
push
notl
push
out
cwtl
shll
js
xchg
lds
mov
scas
mov
and
lock
dec
ja
fmull
into
or
jg
mov
mov
scas
mov
dec
jo
mov
jo
push
add
jo
and
outsl
fwait
push
addr16
add
and
nop
adc
ret
inc
jb
xchg
dec
jo
icebp
adc
jo
daa
mov
shll
popf
dec
push
out
inc
jg
into
outsb
rcrb
inc
test
out
adc
popa
imul
push
loopne
pop
jl
or
or
cli
mov
pop
gs
or
push
xor
inc
leave
or
test
mov
mov
sub
sar
xor
orb
roll
shlb
sahf
pop
into
rol
fs
jbe
lods
and
cmp
dec
ret
pop
and
adc
jle
sub
cmpsb
add
repz
addr16
in
sbb
adc
add
inc
nop
cmp
jg
push
xchg
scas
fstps
jb
lahf
leave
fcomi
imul
mov
or
aas
iret
hlt
cmp
pop
adc
jge
sbb
stos
jno
pop
in
out
push
push
inc
mov
repnz
popf
je
add
gs
lret
sub
int3
fistpl
pop
mov
test
add
cwtl
sahf
cmp
outsl
fwait
xchg
nop
lret
data16
dec
insl
rorl
jae
sbb
pop
inc
movsl
mov
scas
mov
shll
std
sub
mov
xchg
jns
loope
inc
push
fisubrl
push
pop
ret
jmp
mov
call
fistps
push
push
mov
sbb
or
dec
lret
imul
jb
insl
pop
or
xadd
cmpsb
jns
rorb
jo
cmp
je
insb
inc
cmp
fsubr
inc
mov
jg
cltd
pop
sub
dec
addr16
mov
and
or
outsl
xlat
mov
or
dec
imul
cmp
push
push
setns
pusha
add
dec
jge
xchg
push
fistl
es
fwait
mull
push
int3
jbe
js
sti
in
jl
arpl
scas
mov
push
insl
daa
xlat
shr
mov
rcr
sbb
loope
push
call
xchg
shlb
jp
jecxz
sahf
insb
data16
ret
xchg
jo
pop
clc
inc
mov
fimull
pusha
icebp
mov
push
fidivrs
iret
dec
cltd
dec
dec
loope
mov
sbb
and
in
data16
in
dec
shlb
scas
leave
xchg
mov
mov
dec
gs
nop
adc
cmpb
xor
scas
stos
and
jg
lret
sub
add
popa
jae
ja
add
mov
enter
imul
testb
inc
cld
add
loopne
rorb
push
and
mov
xchg
adc
outsb
pop
pop
mov
lret
lods
push
ljmp
arpl
out
mov
mov
sbb
insb
pusha
fstps
out
xor
inc
or
jmp
lods
jns
adc
xchg
das
fwait
and
dec
xor
pop
mov
sbb
push
xor
mov
aam
insb
iret
jle
jne
jmp
popf
adc
std
jo
mov
cmpsb
sub
lahf
pop
inc
push
add
dec
push
mov
xchg
add
jo
inc
lea
nop
into
pop
pop
jo
mov
fldenv
pop
imul
dec
cmpsb
push
shrb
pushl
push
xchg
cmp
jmp
or
pmulhw
xchg
jb
fldt
push
ret
scas
out
dec
leave
jl
jp
xchg
jo
pop
mov
mov
cmp
jo
sbb
je
fiaddl
cmp
fsubrl
jno
neg
jns
jo
pusha
sbb
shrb
mov
push
mov
jg
xchg
imull
addb
cwtl
cmpsb
pop
pop
das
xchg
cmp
push
mov
imul
mov
push
pushf
int
mov
int3
lret
outsl
repnz
ret
mov
and
dec
sbb
adc
sbb
insl
stos
or
push
mov
int3
out
mov
xchg
andb
in
xor
in
insb
dec
aad
int
lret
in
test
or
or
xchg
sub
jecxz
adc
pop
int
sbb
mov
andb
adc
and
loope
jo
xchg
std
xor
add
jo
daa
cmp
shl
or
pushf
in
jo
scas
mov
add
repnz
mov
sbb
test
cmp
and
scas
setae
fistpll
push
data16
lea
rolb
fisttpl
dec
mov
test
lret
adc
mov
xchg
int
in
xchg
xchg
sub
jne
lahf
xchg
lods
leave
enter
test
mov
sub
int
mov
inc
out
inc
pop
lret
fyl2x
shld
out
xchg
xor
xchg
cltd
mov
leave
jo
adc
lea
in
nop
cmp
aaa
stc
adc
jns
lret
cmp
or
dec
cld
mov
ss
out
sarl
mov
jo
cwtl
push
push
ret
repz
adc
dec
aam
and
jo
push
pop
inc
xor
nop
mov
pop
sbb
xchg
sbb
insb
push
sbb
jo
sub
push
fsubr
add
ljmp
inc
cld
lock
dec
rorl
repnz
xchg
mov
decl
out
lret
cmp
jo
icebp
loope
fisubrl
mov
inc
dec
jo
aaa
ds
sbb
pop
adc
adc
xchg
movsl
inc
xchg
cmp
ss
repnz
enter
fs
cltd
shlb
push
ds
mov
jo
sub
xchg
imul
jo
or
push
jo
mov
sbb
leave
fwait
jle
mov
push
cltd
mov
pop
jo
inc
clc
shr
fadds
lds
in
xlat
add
dec
jo
xchg
fwait
test
lret
mov
shrl
sbb
rep
pop
pmulhuw
mov
cld
into
test
fnsave
clc
push
mov
push
sbb
daa
xchg
cltd
fadds
sub
cmp
lea
adc
jo
push
mov
roll
jo
inc
cmp
jo
les
pop
xor
cli
jo
stc
cltd
xor
fmul
jne
neg
jo
fnstenv
imul
jbe
pop
xor
dec
inc
jg
bound
sahf
push
cmp
adc
push
push
lea
int
mov
repz
ljmp
sub
pop
jp
rcrb
push
notb
inc
mov
jo
dec
cmp
mov
mov
xor
dec
arpl
lcall
or
clc
sub
fwait
inc
jle
cmp
jo
setb
xchg
fisttpl
adc
add
or
inc
fwait
xorb
std
repnz
cmp
mov
push
xchg
iret
out
and
sbb
push
inc
es
fwait
or
adc
fs
in
movups
insb
je
pop
mov
push
mov
xchg
test
fcoml
jo
cmpb
jo
clc
fisubl
jo
push
icebp
int3
std
jno
pop
int
pop
mov
arpl
lock
ss
xchg
or
add
imul
jge
dec
jle
sahf
fisttps
mov
subb
push
cmc
pop
push
pop
sub
lods
jge
jmp
inc
loope
in
test
int
dec
jo
cwtl
or
jo
push
cld
pop
fdivl
mov
jo
mov
xchg
cmp
jo
loop
push
add
jo
shrb
pop
fstpt
jo
bound
popf
jne
das
jo
adc
movsl
imul
mov
xorb
jmp
mov
sar
shll
out
imul
es
jo
ret
mov
add
mov
jo
fmull
add
sub
push
xlat
jge
xchg
xchg
jo
shlb
jb
bound
loop
inc
pop
push
xchg
adc
decb
fs
rorb
xchg
jo
punpckhwd
cld
in
lods
jle
or
xchg
xor
jg
mov
mov
out
jo
arpl
push
push
loope
cmp
mov
inc
xor
imul
leave
out
add
xor
jbe
or
mov
imul
jo
push
push
mov
jo
or
scas
shll
pushw
pop
cmp
sub
jo
or
jl
in
bound
js
aas
test
xchg
push
mov
ret
mov
jge
hlt
jge
push
dec
outsl
ret
idivl
out
xor
xchg
inc
mov
lahf
and
jo
pushl
push
rcr
adc
or
orb
leave
mov
movnti
popa
mov
icebp
or
nop
dec
adcb
outsl
push
jo
xor
push
je
ljmp
test
aaa
es
jo
mov
jo
adc
hlt
inc
sub
mov
mov
out
dec
popa
jno
scas
mov
adcb
jo
lods
push
pop
pushf
rcll
sub
sbb
sarb
addr16
jo
lret
pop
out
setl
nop
jl
scas
cmp
mov
pop
mov
je
dec
int3
es
sti
clc
xorb
push
sti
pusha
testl
xlat
sar
mov
push
xor
bswap
jae
jge
add
jnp
aam
jo
cmp
cmc
jmp
filds
mov
push
jmp
jle
movsl
incl
icebp
bound
adc
sub
outsl
gs
std
xor
jo
cs
loope
ud1
in
jmp
mov
and
cmpsl
sbb
in
fadds
call
arpl
test
int
enter
jge
or
mov
cmp
jl
jge
cwtl
dec
jo
fcoms
in
sub
call
jns
shrb
jecxz
push
mov
scas
push
leave
dec
mov
jo
sub
add
mov
ja
scas
push
in
cmp
ficoml
ja
and
inc
fwait
stos
adc
xor
fnstenv
int
push
test
shlb
outsl
pop
cmp
mov
lock
inc
imul
mov
mov
lret
sbbl
cmp
div
dec
push
push
mov
sub
sbb
xchg
jne
jae
std
jns
inc
jmp
je
mov
das
push
imul
and
mov
mov
mov
mov
jmp
jecxz
sbb
scas
addr16
js
aad
add
mov
sub
ret
mov
jb
testl
jbe
fdivl
data16
dec
jae
cs
cmp
std
push
sub
mov
loope
je
push
lret
push
and
je
outsb
fucomip
xlat
faddl
das
fs
add
pop
adc
jbe
fwait
in
mov
or
and
or
mov
cmp
mov
xchg
fstl
jp
mov
data16
outsl
or
push
sbb
outsb
sar
sbb
outsb
mov
xchg
shlb
cmp
xchg
and
or
or
or
push
xchg
pop
cltd
lods
mov
sub
mov
push
and
pop
push
pop
mov
lock
push
adc
push
adcl
cld
aas
loopne
xchg
loop
inc
lods
mov
lock
xchg
andb
push
mov
mov
inc
xchg
sub
push
je
jae
int3
and
cmpsl
outsb
test
clc
push
xchg
into
insl
and
popa
adc
cmp
repnz
pushf
push
adc
aad
jns
dec
insl
and
jb
push
dec
and
arpl
mov
mov
out
stos
adc
fcmove
sub
push
shrb
xchg
jle
insb
std
cmp
cwtl
andb
and
ret
js
out
cmp
pop
into
cmp
dec
mov
cltd
or
subl
push
in
dec
cmpsl
xor
adc
in
cli
fs
in
or
push
add
xchg
push
xchg
cmc
push
pand
loopne
dec
jno
lea
hlt
pop
enter
or
sub
fcmovnb
hlt
inc
clc
jl
sbb
icebp
ds
cwtl
push
outsb
or
and
xor
add
jmp
mov
push
mov
out
sbbb
nop
cmc
or
or
jecxz
mov
pusha
ljmp
rol
pop
lcall
data16
mov
cmp
fisttps
xchg
adc
popf
mov
push
ficoms
mov
outsb
or
inc
sbb
pop
or
rorl
clc
scas
sbb
xchg
cltd
cmp
push
out
mov
push
lret
jp
js
xchg
das
or
js
inc
xchg
icebp
lahf
fs
mov
push
popf
filds
stos
sbb
imulb
mov
cmp
adc
das
dec
adc
aas
sbb
iret
repnz
push
cwtl
jl
jecxz
and
mov
xor
fsts
jae
repz
push
jbe
arpl
sbb
pop
push
cld
out
pop
loope
or
fs
push
mov
xchg
sahf
jl
sub
mov
cmp
pop
out
ret
stos
jle
fbld
stc
inc
push
adc
stos
es
dec
fdiv
pop
mov
ret
mov
cmp
cmp
aas
fisubrs
inc
mov
push
jecxz
pop
insb
mov
mov
push
dec
jge
cltd
insb
adc
cld
clc
inc
outsl
inc
fcoms
xor
push
mov
jb
lock
mov
xchg
fs
aas
mov
xchg
subl
insb
jbe
inc
jns
jae
xor
dec
and
inc
ss
fadds
adc
xor
lock
into
outsl
dec
push
mov
adc
mov
int
dec
test
sarb
mov
mov
jmp
lods
rcrb
mov
fs
mov
pop
sar
sub
mov
push
mov
negl
mov
mov
add
sub
jmp
push
int3
jb
lds
je
dec
push
pop
inc
out
dec
or
fistps
mov
jb
jbe
push
cli
jae
fldenv
out
sub
push
push
mov
mov
jg
xchg
or
popf
jb
fldcw
call
sub
ret
outsl
and
pop
jae
mov
add
sbb
jl
or
sub
xor
out
mov
outsb
lea
scas
sbb
mov
jl
subb
dec
psubusw
out
decl
jae
mov
mov
or
out
jg
push
dec
jne
add
jg
outsl
sbb
in
jns
add
int3
xchg
adc
dec
loope
jae
ret
int3
xlat
ljmp
xchg
pop
repz
xor
nop
pop
out
test
repnz
movsb
cmpsl
add
dec
push
imul
push
fs
sub
dec
ds
lock
mov
cmovbe
jecxz
inc
inc
fs
je
or
jo
sbb
mov
fwait
add
and
push
cltd
add
push
and
pop
jb
in
pop
mov
push
push
outsl
push
push
or
and
mov
data16
outsl
in
add
add
xor
in
adc
adc
push
insl
jns
loope
push
mov
sbb
gs
fs
cmp
in
fcomip
ror
add
loopne
sahf
out
movsb
xor
xchg
int
pop
mov
push
pop
es
test
sub
fisubl
dec
adc
pop
in
xchg
lret
icebp
jae
xchg
in
push
sbb
arpl
mov
mov
xchg
in
push
sbb
dec
add
scas
fyl2xp1
add
jl
mov
out
lahf
stos
xchg
rolb
repz
subl
xor
jae
pop
jmp
ljmp
sbb
jae
pop
push
fnsave
mov
js
cwtl
add
xor
clc
lret
mov
hlt
divb
jb
nop
imul
shll
bound
push
jbe
shrb
daa
outsl
scas
push
lret
inc
and
fstl
out
xchg
outsl
push
inc
xor
std
shl
push
addl
outsb
outsb
xchg
adc
lret
call
ljmp
cld
cwtl
call
ljmp
cmp
subb
pop
leave
pop
je
adc
and
lock
and
push
imul
jne
out
add
ret
divl
jl
and
fadds
sbb
imulb
pusha
adcb
jae
in
or
aas
test
jb
push
stos
arpl
jno
fs
fists
je
cmp
inc
mov
jg,pn
lock
xchg
push
scas
outsl
std
pop
imul
mov
add
hlt
jb
gs
jl
xchg
sti
xchg
hlt
jne
int3
jae
cmpsb
fs
cmp
cltd
add
adc
clc
mov
jno
lods
movsb
jg
mov
and
mov
loopne
pop
mov
stc
arpl
or
pop
jle
out
mov
sub
scas
jns
jp
push
cmp
jo
adc
pop
jns
lcall
arpl
movsb
mov
ficompl
cs
pop
adc
insb
sbb
fsubs
les
decb
adc
xorb
daa
sbb
ss
inc
xchg
push
inc
out
mov
out
scas
cmpl
inc
test
scas
and
lds
movsl
mov
aas
int3
sbbb
fsts
ret
or
sub
int3
xchg
mov
jo
xor
mov
add
pop
pop
jo
push
ds
cltd
mov
xchg
jo
push
loopne
mov
lahf
push
cld
in
inc
push
addr16
cmp
mov
das
mov
xor
bound
lcall
jo
cmc
aaa
andl
pusha
push
insl
jl
orb
cs
rolb
pop
stc
sbb
dec
cmp
sub
or
daa
mov
gs
pop
movsl
jmp
mov
notb
mov
pop
inc
jbe
xchg
inc
push
xchg
loop
add
mov
jmp
jecxz
js
sub
jo
or
jne
faddl
fiaddl
pop
jle
cld
jns
sbb
jo
andl
stc
sbb
and
jo
mov
aam
rcll
sahf
pop
les
imul
repz
ret
cmpsl
ds
aaa
cli
sbb
mov
jl
sub
fmul
push
out
push
test
and
push
mov
jnp
lods
addb
sub
popa
fldpi
test
mov
mov
adc
xor
mov
test
inc
xchg
inc
push
pop
jg
stos
mov
jo
loope
mov
xor
push
or
inc
jo
daa
jbe
lret
mov
lcall
je
xchg
shlb
insl
ret
xorl
in
jo
cmp
sub
mov
xor
mov
jo
clc
mov
ja
iret
push
std
sub
cmpsb
imul
sub
add
nop
test
pop
mov
test
insl
ret
in
jae
fldenv
addb
bound
jg
test
adc
jo
dec
imul
iret
jo
es
js
adc
fs
imul
push
imul
lea
jg
add
cmp
push
jo
dec
pop
xchg
xor
pop
xorl
mull
xor
jo
cmpb
out
add
mulb
mov
push
in
shrd
push
in
nop
pop
cltd
pop
mov
dec
sti
jo
stc
push
add
jbe
jo
in
add
xchg
sub
loopne
sar
or
mov
sbb
cmp
pop
jle
jo
jmp
or
pop
cs
jae
pushf
lea
into
dec
je
xchg
mov
fidivl
xor
loop
jo
jl
je
dec
fimuls
addr16
push
iret
add
fistpll
sbb
push
dec
adc
hlt
fidivrl
hlt
aam
js
fwait
or
test
jo
inc
stos
and
xchg
cmp
sbb
je
jo
xchg
cmp
adc
js
mov
movsb
data16
std
fs
repnz
xchg
mov
nop
ret
test
cmp
shl
adc
aad
insb
sub
push
lods
inc
jecxz
orb
dec
aas
jo
mov
xchg
dec
daa
fnstcw
call
xor
js
shll
sbb
jo
out
test
adc
lock
mov
scas
mov
xchg
xor
jnp
jns
xorl
pop
lret
push
mov
and
inc
inc
pop
add
les
gs
sbb
mov
std
jge
pop
dec
or
test
movsb
jle
inc
adc
test
sbb
xchg
cmp
sub
in
push
adc
cmpsl
add
pop
jo
fwait
xchg
sbb
or
jmp
in
push
push
lcall
rolb
mov
push
ret
push
fisubs
add
jae
test
movsl
xchg
lret
jns
xchg
sbb
add
test
push
movlps
inc
add
sub
and
jo
in
sti
jne
or
js
mov
xor
push
les
lcall
jbe
jmp
nop
push
fmulp
cmp
jo
mov
cmc
sub
jp
inc
hlt
jmp
mov
dec
cld
out
cli
in
stc
das
jo
cmpl
pushw
cli
jnp
shll
fisttpl
imulb
add
xor
sbbb
xor
adc
mov
cltd
icebp
js
mov
jo
pop
adc
mov
sub
push
sbb
ret
fnstenv
mov
jecxz
ret
add
cmovb
lret
jns
fs
fdiv
jo
push
inc
sub
jl
or
jo
movsb
push
cmp
adc
fisttpl
jae
fwait
nop
out
les
pop
and
mov
fbstp
xchg
fwait
mov
sahf
jo
pusha
adc
xor
arpl
jns
into
jo
add
mov
sub
nop
ficompl
push
jo
outsl
xchg
pop
xchg
dec
xor
push
stos
std
aaa
and
push
shl
je
jo
dec
aas
mov
sbb
lods
pop
out
jmp
mov
call
ss
add
test
lahf
ret
xorb
fbstp
lret
addr16
repnz
xor
jns
and
sbb
dec
sub
das
add
jnp
cmp
adc
cwtl
jno
mov
mov
push
push
stc
aad
fdivrp
cmp
cltd
jo
cmp
mov
dec
jo
out
mov
adcl
insl
call
push
xor
and
sbb
jo
imul
fisttpll
cmpsl
nop
mov
loop
push
bswap
mov
stos
ret
lock
movsl
jle
js,pt
orb
test
sbb
jbe
adc
jo
sub
jmp
fnsave
out
and
out
shll
fwait
cmp
pop
dec
inc
dec
idivl
nop
icebp
sub
lock
jo
cs
dec
int3
imulb
and
push
or
push
ss
shl
fdivl
pop
pop
sbb
inc
enter
cmpb
es
ss
mov
ja
and
jl
es
movsb
addr16
mov
mov
xchg
mov
out
mov
xor
jae
jbe
inc
jo
lret
pop
mov
clc
mov
push
pushf
mov
aaa
mov
daa
push
add
es
and
jb
push
mov
push
js
cmp
jo
ljmp
sub
aaa
mov
jmp
out
or
pop
fstl
lret
xchg
add
mov
test
scas
mov
sahf
jo
add
inc
mov
cmc
jb
sbb
mov
push
shrb
push
xchg
jl
sahf
mov
jnp
pop
test
mov
mov
xor
shrl
push
mov
mov
mov
pushf
add
arpl
int3
xlat
rorb
pop
cmp
enter
xor
test
fnstenv
out
xchg
js
add
nop
cmp
cmc
insb
mov
lock
bnd
sti
cld
imul
mov
cmp
push
fs
push
jo
add
xlat
movsb
push
xbegin
mov
psubq
je
mov
lds
jne
or
dec
stos
jo
fs
sub
lds
push
pop
insl
sahf
imul
negb
lret
lods
pushl
enter
aaa
lret
pop
ss
push
mov
mov
mov
fdivrl
jo
jle
pop
push
mov
push
and
out
cmp
divb
xchg
jo
push
push
fidivl
stc
sbb
shrb
int
sub
jmp
jo
aad
lahf
cmp
push
popa
add
mov
adc
insb
sbb
gs
addr16
sbb
test
jmp
mov
sahf
js
jnp
push
aad
xor
push
loope
iret
adc
push
push
cmpsb
roll
mov
jmp
outsl
xor
sbb
enter
inc
mov
subb
xchg
push
fxam
xlat
cmpsl
or
cmp
mov
xor
imul
nop
pop
loop
ret
out
add
stos
push
sub
sub
lret
push
add
ja
jnp
rclb
and
and
adc
mov
ret
insb
in
push
out
loop
pop
or
mov
sbb
jns
out
sub
test
cmpsl
cmp
scas
jl
loop
iret
and
shlb
pop
sub
xchg
cwtl
shlb
mov
xlat
scas
setl
add
cmp
int3
repnz
jp
mov
push
add
ret
pusha
shlb
loop
sbb
xchg
fwait
lock
inc
xchg
jg
cmc
jae
mov
ja
outsl
and
xchg
mov
js
add
out
xor
xor
lock
push
inc
inc
xchg
cli
add
or
jb
aam
shll
imul
leave
mov
adc
bsf
pushf
lret
push
mov
arpl
shll
jae
icebp
addr16
popf
inc
dec
hlt
in
sub
iret
xor
mov
cmp
cltd
cmpsb
std
aaa
outsl
add
aas
loopne
cmpsl
pop
sbb
shrb
icebp
mov
iret
es
inc
jnp
sbb
aaa
and
push
pop
test
mov
mov
sub
xor
adc
inc
xchg
jae
or
pop
sarb
and
jns
ss
or
xor
jb
add
dec
xchg
jmp
push
push
call
mov
mov
out
dec
mov
imul
sti
rorl
scas
jne
insb
insl
add
xor
fmul
ljmp
decl
jg
or
pop
cmp
dec
gs
out
jns
inc
cmpsl
jmp
cmpsl
test
fwait
or
xlat
in
lock
pop
mov
out
idivl
js
xchg
mov
lds
jmp
inc
adc
insb
xchg
add
push
inc
out
out
test
mov
push
iret
stc
adc
sbb
arpl
cmp
movsb
xor
and
mov
out
pop
xchg
lods
jb
int3
es
repnz
orl
pop
mov
fs
mov
sbb
jge
jae
test
xchg
pusha
out
push
mov
mov
mov
inc
sbb
cmc
aad
push
xor
cltd
frstor
adc
shr
cmpsl
into
ljmp
xor
and
je
in
mov
sarb
mov
mov
jb
in
mov
sub
pop
sti
jo
imul
xchg
sbb
push
fiaddl
cmp
nop
or
mov
lds
jae
inc
jge
sbb
lock
xorl
pop
mov
push
outsl
roll
rcr
in
stc
imul
fdiv
arpl
cmpb
lods
sbb
sbb
aad
sub
repz
lock
dec
sbb
pop
out
sti
arpl
xor
cmc
mov
dec
xchg
sbb
out
adc
sbb
mov
sbb
outsl
push
clc
lock
jmp
inc
pop
in
outsb
push
pop
pop
xchg
xor
xor
imul
jl
int
jne
arpl
mov
dec
out
xchg
inc
aad
inc
mov
dec
repz
jne
sub
lea
and
je
mov
addr16
add
xchg
test
xchg
or
adcb
in
pop
fstpl
lock
jae
out
push
pop
jno
mov
shll
ljmp
push
fwait
repz
mov
push
dec
movsb
mov
pcmpeqb
rcrl
push
data16
popf
out
sbb
mov
mov
lods
mov
push
les
fsub
sbb
ljmp
jl
lods
loopne
mov
shrb
test
stos
cmpsl
jp
repnz
sbb
jbe
mov
int3
negb
mov
sbb
push
sub
stos
testb
nop
jbe
add
nop
mov
lds
lods
rcrb
cmp
and
jecxz
and
jnp
xor
jmp
dec
int
gs
mov
jbe
aad
jg
out
mov
std
pop
subb
jp
in
jns
adc
mov
pop
es
mov
subb
outsb
xchg
lcall
fbstp
dec
xchg
xlat
mov
pop
cltd
xlat
outsb
mov
pop
cmp
movsl
jmp
or
add
cmp
mov
test
popa
sub
pushf
and
mov
sahf
dec
cmp
dec
aad
sbb
fwait
adc
sahf
pop
in
pop
shlb
mov
ljmp
push
imul
cmp
rorl
pop
loopne
sub
push
mov
or
mov
pusha
leave
maskmovq
shll
int
lds
fnsave
or
mov
mov
xchg
xchg
jo
add
fs
cmp
xchg
fsubs
mov
or
and
inc
jno
mov
sbb
sub
sbb
mov
jmp
jno
inc
mov
inc
cmpsl
push
mov
pop
in
daa
jae
sub
pop
stc
sarb
adc
xor
fldt
sub
in
cmp
or
ret
mov
in
cwtl
push
xchg
out
pop
hlt
sar
add
fildll
and
push
push
out
insb
xchg
sbbl
arpl
mov
mov
push
out
scas
dec
lahf
cmp
popa
loop
ret
imul
nop
insl
fsubrp
arpl
mov
stos
mov
out
mov
shll
inc
hlt
popf
and
pop
mov
dec
or
xchg
jmp
test
lret
adc
movsl
pop
push
into
in
pop
push
insb
out
cmpl
inc
push
rcr
xor
mov
enter
inc
jne
xor
loope
inc
mov
out
and
and
movups
mov
sub
dec
mov
add
jo
fcomps
mov
ds
xchg
rclb
or
jae
pusha
mov
and
jno
sbb
shrb
jns
movl
pop
loopne
scas
out
mov
scas
and
int
in
pop
fwait
shll
cmpsb
jle
jp
inc
in
push
aad
ljmp
jne
xor
in
jge
xor
add
push
mov
mov
jmp
repz
lret
cs
push
push
cmp
pop
jbe
hlt
mov
and
scas
sahf
outsb
sbb
loop
test
mov
add
test
arpl
mov
sub
lock
push
fldenv
sbb
roll
in
fwait
inc
jmp
adc
lods
scas
xchg
test
rclb
test
insb
or
mov
inc
repz
gs
inc
insb
cmpsl
ljmp
scas
cpuid
sti
jge
dec
out
add
mov
mov
arpl
mov
dec
scas
dec
push
ret
lea
jg
sbb
pop
cltd
mov
adc
jge
jbe
jmp
cmp
fldcw
jb
daa
clc
outsb
js,pt
cmpsb
daa
out
lock
xchg
mov
xchg
lods
dec
push
cmc
sarb
push
adc
push
pop
sub
sbb
xchg
cmp
movsl
mov
andb
pop
cmp
adc
mov
add
inc
data16
repz
aad
push
call
jle
push
pop
filds
inc
sub
adcl
std
add
inc
xlat
sub
jg
cs
xchg
jns
scas
push
jae
push
mul
imul
mov
jle
xchg
mov
fstl
cld
das
mov
sahf
sub
jae
fstps
mov
push
lds
cld
outsl
mov
push
mov
inc
mov
in
cmp
mov
or
fidivl
mov
mov
push
cmp
mov
inc
mov
movsb
int
std
test
in
push
cmp
nop
and
sahf
mov
pop
popf
mov
pop
pop
push
or
arpl
mov
in
cmp
arpl
push
xchg
jg
mov
or
lahf
inc
test
sub
dec
scas
test
fidivl
lods
fstpt
popa
lds
inc
imul
xchg
jns
sbb
fdivrl
daa
mov
push
add
or
sbb
add
outsl
cltd
lahf
lret
push
cmp
js
jp
push
insb
lods
mov
xchg
fnop
insb
std
cmp
jae
sbb
je
sbb
sbb
mov
and
fsubrs
sbb
stc
fmull
bound
mov
push
sbb
ret
mov
jnp
mov
sbb
and
test
je
and
mov
pinsrw
or
jns
jmp
test
jae
fnstenv
imul
stc
imul
jo
xor
andl
mov
pop
dec
push
inc
lock
or
jae
inc
jmp
cli
mov
cmp
mov
gs
pop
sub
and
jge
mov
out
push
mov
insl
mov
in
shrl
dec
push
sub
mov
arpl
movsl
cmp
mov
mov
fcmove
push
test
inc
lahf
outsb
jbe
cmp
aam
jl
jl
cltd
adc
shrb
in
mov
jl
test
sbb
cli
sub
push
xor
outsl
vpcomub
cmp
jo
arpl
test
mov
xchg
pop
jg
push
popa
jo
jb
xchg
adc
push
inc
test
mov
subb
inc
enter
pop
insw
push
push
int
scas
adc
lods
jecxz
cmp
jo
sti
push
cld
mov
sub
cwtl
stos
sbb
leave
inc
loopne
nop
xorps
stos
adc
mov
cmp
insb
mov
cmp
xor
idivl
inc
test
jp
lret
inc
insb
cwtl
mov
sub
jl
jmp
xor
push
in
stos
sbb
jp
xchg
nop
filds
sbb
sbb
jo
stos
fwait
pop
imul
movsl
push
jnp
repnz
mov
xor
add
or
inc
mov
jo
fsubrl
add
cmpl
scas
inc
mov
jo
mov
and
jo
jmp
mov
push
add
and
call
movsb
pushf
shlb
ret
pop
idivb
mov
stc
mov
and
insl
pop
lea
int
addr16
sbb
pop
cmpsl
test
xchg
lahf
mov
jo
das
pop
mov
int
movsb
loopne
shl
out
faddl
pop
popa
mov
nop
or
lods
jo
icebp
mov
gs
jo
outsl
lahf
and
cmpb
mov
adc
and
lcall
test
addb
or
pop
jo
pop
push
xor
jo
jb
dec
push
scas
xor
out
pop
jl
fadd
jo
popa
leave
fsubp
bound
inc
dec
sahf
mov
sub
xchg
sbb
test
mov
jge
scas
jbe
bound
sub
pop
cmp
cmc
daa
enter
jmp
negb
jo
mov
shrb
movl
icebp
lahf
mov
push
notl
arpl
mov
loope
jo
push
shrl
xorl
jmp
lcall
jo
adc
or
inc
scas
cmp
pop
xor
inc
lahf
jb
movsl
lret
jo
cmc
cmp
sub
sbb
add
jge
adc
xchg
mov
inc
aaa
movq
js
mov
into
jo
pop
dec
mov
jo
mov
fistl
adc
dec
jo
popf
mov
orb
fs
add
adc
clc
cmp
lahf
xor
jo
stos
aas
fiaddl
and
jo
jg
in
loopne
out
xchg
jo
movsb
mov
leave
int
mov
push
sub
nop
cmpsb
test
jp
mov
nop
in
mov
loopne
jge
sti
mov
mov
ss
xchg
jo
das
sub
ljmp
aas
insb
jo
shlb
popf
es
inc
xor
cmp
jns
aas
rolb
scas
jg
ja
subl
mov
inc
int
sub
clc
cwtl
dec
mov
or
stos
enter
and
push
jo
jb
aaa
jecxz
inc
jo
sahf
inc
xor
add
mov
outsb
jno
cmpsl
std
sub
lret
lods
xchg
pop
mov
cmpl
jge
push
aam
dec
int3
ret
cs
ljmp
mov
ud1
imul
push
jp
repnz
push
test
cld
out
lock
cltd
jo
ds
imul
mov
fbld
imul
jo
std
xchg
fsts
xchg
adc
ja
jo
cmp
cwtl
je
shr
jns
jo
aad
mov
inc
and
cmpsb
loopne
fildl
jo
mov
xor
mov
jo
sarl
outsl
jo
daa
inc
mov
jno
imul
mov
jo
rclb
xor
jo
xchg
inc
jbe
insl
mov
jo
cwtl
xchg
push
insb
mov
pop
int3
or
push
jl
call
rcll
dec
jp
add
or
mov
gs
je
mov
jo
arpl
xlat
push
stos
or
popf
sbb
testb
mov
loope
cltd
jle
mov
jo
in
lods
lret
lea
js
cld
stos
ret
cs
arpl
data16
push
adcl
daa
and
pop
clc
and
shll
jl
push
into
ljmp
mov
jnp
js
mov
in
cmp
sbb
nop
mov
dec
jle
inc
stos
nop
lret
movsb
nop
clc
jns
xchg
cs
adc
mov
test
jo
jno
aaa
xchg
lock
jo
and
push
add
lret
call
mov
cltd
sub
repnz
push
push
dec
push
rcl
out
xchg
pusha
cmp
adc
adc
sub
mov
or
mov
mov
pop
movswl
ficoml
cmp
adc
cmp
ret
sub
push
jo
data16
or
lock
out
fs
inc
cmp
mov
mov
test
push
jo
sub
sub
cli
jae
jo
mov
dec
bnd
testl
jo
gs
fistl
insb
mul
jno
xchg
nop
cmc
and
and
jp
sub
jo
inc
push
pop
add
arpl
mov
jno
or
cmp
orb
push
test
jae
mov
and
movsl
arpl
mov
sub
and
mov
or
mov
inc
jo
cmp
xor
mov
jge
dec
dec
add
push
inc
ret
xor
pop
jg
jnp
in
xchg
or
dec
jo
jb
xchg
and
jno
push
mov
jle
aas
dec
jo
ret
sbb
in
aam
xchg
lea
loopne
xor
fs
test
enter
scas
js
add
sbb
mov
imul
nop
sarb
add
push
outsl
scas
adc
je
sbb
or
js
dec
stos
pop
push
mov
pop
dec
push
adc
cmpb
jns
loope
jo
stc
loop
stos
xchg
sbbl
push
iret
cltd
stos
fucom
push
roll
movsl
pop
ljmp
fmuls
mull
pop
icebp
inc
jo
sbb
xlat
imul
jne
jl
lods
in
push
jo
xchg
xorb
cmp
out
lcall
mov
pop
pushf
mov
or
outsb
sub
cmp
xor
divb
aad
out
pop
ret
xor
sbb
mov
mov
mov
sbbb
aaa
push
jo
mov
daa
cltd
scas
cmpsl
mov
dec
push
jbe
jge
bound
test
adcb
sbb
mov
fists
pop
fs
mov
dec
pop
push
and
xorb
jae
ret
or
jp
sahf
mov
inc
cmp
int
mov
imul
or
test
sub
push
add
jmp
jns
push
cmp
adc
xchg
imul
fs
mov
jmp
and
jp
mov
jo
arpl
xor
flds
push
xchg
push
gs
fsubl
sub
mov
mov
mov
adc
ret
les
in
aaa
mov
push
sti
mov
inc
and
sbb
jecxz
cwtl
shlb
xchg
or
aad
cltd
ja
inc
sub
push
jg
das
mov
pusha
cmpsb
xor
jb
mov
xacquire
jne
test
jns
pop
loop
xor
dec
and
in
sbb
aas
shrl
and
adc
jecxz
test
iret
ss
in
pop
xchg
sbb
notb
addr16
jo
mov
or
sub
mov
movsl
sub
jo
les
push
sub
cmc
lock
jo
in
push
xor
aad
ja
xor
mov
jo
lret
cmp
mov
cmc
cmp
jo
inc
insb
inc
sbb
cmp
popf
lahf
dec
jo
stos
addr16
and
jnp
jo
add
xchg
jo
out
mov
xchg
push
and
cmp
outsb
scas
jo
push
arpl
sub
test
shll
sbb
nop
jns
adc
inc
xor
inc
cmp
insb
push
dec
into
clc
push
jo
faddl
and
jnp
data16
inc
out
shlb
test
jecxz
mov
repnz
jo
ljmp
push
push
iret
shl
adc
jo
pop
loope
movsl
ja
pop
nop
roll
jle
jbe
lock
orb
js
shlb
push
jo,pn
lods
dec
inc
pop
jg
dec
or
sbb
pop
cmp
test
or
sbb
lahf
add
rcrl
jo
mov
out
adc
or
leave
cmpsl
mov
add
jl
jmp
fbstp
adc
jp
jo
stos
aas
add
pop
pop
nop
add
imul
sub
jg
pop
push
mov
xchg
mov
jo
fistpll
out
sbb
jg
std
pop
aas
sub
sbb
icebp
push
adc
jae
xchg
xor
and
mov
or
inc
loope
mov
movsl
pusha
fs
mov
outsl
mov
mov
mov
mov
sbb
mov
and
shlb
sbb
push
jbe
sbb
lods
push
push
pusha
cli
xchg
mov
sub
and
das
and
andl
data16
nop
and
aaa
fadds
adc
jae
divl
hlt
jp
sbb
les
or
inc
xor
call
shlb
fisubs
push
stos
adc
inc
fiadds
cmpsb
add
xor
xchg
stos
jo
out
cmp
fimull
xchg
push
or
nop
mov
xor
xor
mov
out
cltd
shl
popa
add
imul
fstpl
jg
push
and
xchg
cmc
aas
ja
dec
out
jns
sbb
inc
dec
scas
add
addl
mov
outsb
jae
inc
jle
les
push
imul
mov
fnstcw
aad
int3
jp
movsl
push
jg
jns
pop
pop
enter
jbe
lahf
mov
jae
outsb
das
inc
sub
std
and
adcb
pop
mulb
sbb
je
fdivp
fwait
rorl
pop
jle
idiv
or
or
mov
ret
cmp
inc
sarb
stos
pop
comiss
es
mov
xchg
mov
icebp
cwtl
jp
jge
xchg
ds
jbe
push
cmpb
pusha
rolb
sbb
mov
pop
xchg
fisttpll
out
aad
lods
xor
sub
imul
cmpsl
lahf
xorb
dec
es
not
or
sub
shll
fstpt
mov
rcr
notb
pop
stos
shl
fidivrl
sbb
xchg
movsb
das
in
pop
cwtl
ret
sbb
pop
addr16
iret
jle
push
in
jae
subb
mov
adc
xchg
imul
ret
lock
lret
repz
aaa
call
xchg
pusha
lahf
fistpl
mov
jg
cmp
xchg
jb
aad
mov
dec
push
popa
inc
repz
jo
arpl
std
xor
xchg
adc
psubusw
in
inc
test
enter
push
loope
insl
jmp
cmp
mov
adc
jno
dec
mov
pop
mov
xchg
int
push
adc
faddp
fdivrs
out
sbbl
mov
addr16
ficoml
push
gs
or
mov
sti
xchg
fisttpll
das
out
pop
outsb
inc
cmpsl
shll
jge
mov
mov
in
push
sbb
lods
fnstsw
mov
xor
sbb
fs
out
ret
or
mov
je
mov
mov
mov
mov
das
or
test
loope
int
add
lock
xor
lods
sub
icebp
in
pop
jp
nop
push
or
jmp
ljmp
xorl
rorl
inc
in
jo
das
sbb
dec
enter
lahf
cmp
scas
out
add
jae
ret
pop
orb
dec
pop
xchg
out
mov
ret
lock
cmp
scas
mov
scas
mov
rclb
mov
jns
sub
pop
adc
xchg
movsb
mov
sub
test
push
pusha
hlt
dec
dec
das
push
push
imul
sbb
ret
fsubs
test
sbb
jns
pop
mov
mov
clc
hlt
shlb
dec
mov
cmp
pop
cmp
out
aad
xchg
fcomp
dec
cmp
adc
aam
cmpsb
mov
loope
mov
push
mov
cmpsl
inc
cmc
pop
lret
and
pop
int
adc
scas
out
xchg
push
jnp
mov
movsl
inc
rorl
orl
adc
idivb
push
les
mov
popf
inc
hlt
push
or
mov
mov
pop
cmp
out
pop
cmp
push
stos
cmp
jmp
or
push
sahf
and
loopne
mov
jge
add
lods
cld
iret
scas
outsl
cmpl
int3
sub
inc
in
lret
or
push
pusha
xchg
inc
push
sti
divb
sub
stos
mov
js
js
and
outsl
sbb
es
jl
addl
pop
cmp
cmp
bound
xchg
ficoml
loopne
sarl
ljmp
push
xchg
mov
cs
add
movsb
repnz
add
mov
or
aam
mulb
les
jae
xchg
inc
adc
repz
loopne
xchg
test
push
ret
int3
add
les
cmp
daa
jae
rorl
xchg
sub
xor
mov
int3
xor
in
mov
dec
and
dec
inc
loopne
cmp
pop
rorl
mov
sub
imul
cmp
movsb
enter
hlt
jg
or
mov
divb
imul
lock
xchg
fucomi
mov
mov
es
mov
mov
out
jo
jmp
outsl
push
aas
das
mov
fildl
xor
jle
scas
lcall
mov
lods
cmp
add
cmp
jnp
int
or
andb
pushf
inc
mov
inc
jo
insb
push
lret
or
cs
hlt
ret
je
lods
loope
cmc
call
jo
es
cmp
roll
push
jo
sbb
pmuludq
out
dec
push
test
cmp
jmp
popf
mov
pop
andl
orl
cmpsb
div
inc
inc
adc
in
jnp
aad
in
mov
mov
and
sbb
in
dec
movsl
out
mov
loope
pop
jle
sub
dec
movsl
mov
push
push
pop
mov
pop
xchg
sub
jb
clc
out
jecxz
pop
pop
insb
mov
lret
push
mov
xor
push
jg
lock
das
jbe
push
mov
fidivs
aam
bound
xor
out
sub
fcoml
push
sbb
xor
mov
lods
popf
inc
in
dec
int
div
lret
add
mov
cwtl
push
pop
test
inc
dec
sub
in
test
adc
je
mov
add
insb
call
pop
gs
psllq
adc
jno
popa
mov
aam
pop
int3
pusha
mov
call
stc
xor
dec
xor
adc
xchg
adc
pop
mov
xchg
xor
mov
push
and
mov
call
pop
outsb
cmp
scas
cmp
scas
xchg
dec
aam
push
jl
loop
xor
sbb
inc
jns
xchg
jge
add
add
outsl
jge
outsb
fisubl
add
xchg
ret
lods
pop
inc
fdivp
adcl
sbb
add
out
push
loope
jge
or
push
xchg
out
int3
ud1
cmp
pop
mov
aad
xor
or
mov
jle
sub
cmp
dec
inc
aam
je
jae
xchg
cli
clc
adc
add
call
jbe
sbb
data16
insl
mov
sar
fidivrl
or
in
dec
sbb
sbbl
mov
add
push
shlb
in
es
xchg
ja
jmp
and
in
loopne
loop
xchg
push
add
and
jp
fsts
or
aaa
push
test
enter
cs
sbb
sub
or
and
cltd
pop
movsl
push
jle
sub
adc
add
flds
jmp
cli
cmpsl
jg
jmp
outsb
jp
push
shll
popa
in
stos
or
jge
or
mov
scas
out
lahf
ja
jl
arpl
push
scas
lea
jle
and
shlb
inc
fnstenv
mov
and
lret
pop
bound
sbb
mov
adc
mov
fisttps
inc
lods
push
mov
mov
in
test
sub
sub
xchg
xor
sti
push
test
imul
sub
insl
in
or
mov
dec
mov
data16
mov
clc
pushf
dec
jb
stos
arpl
rcll
js
or
sahf
mov
jns
jl
jmp
xor
lret
stos
daa
mov
aaa
ljmp
mov
std
int
js
cmpsb
cmp
call
lea
jle
sbb
xor
cmp
movsb
in
jnp
adcb
fsubrl
int
lcall
imul
sbb
cmpsb
jno
jo
sub
dec
aas
jae
dec
out
mov
push
xor
popa
cmp
je
mov
lods
sbb
dec
outsl
mov
hlt
shll
jmp
jae
jg
push
mov
sahf
and
jecxz
push
xchg
ljmp
lret
in
mov
fs
scas
jns
xchg
addr16
sub
cmp
js
aad
mov
push
dec
mov
sub
inc
push
rolb
jl
add
sbb
lods
or
mov
frstor
les
mov
lahf
sub
mov
sub
out
movsl
mov
sub
scas
and
in
jne
out
rorl
out
dec
mov
stos
jae
push
leave
pop
mov
jns
jp
push
ljmp
aam
push
mov
xor
xor
adc
repz
jecxz
insb
inc
mov
xor
jl
iret
push
or
out
sub
xchg
and
fldenv
jle
and
dec
jnp
lock
notl
test
or
fnsave
push
jb
mov
test
lods
mov
mov
push
arpl
push
pop
cld
or
push
mov
and
jnp
lcall
cmpsb
test
mov
mov
sub
pop
mov
inc
fcoml
lock
sub
ljmp
and
inc
pusha
lods
cwtl
jmp
push
push
call
xor
scas
push
sub
fistpl
arpl
jl
mov
cmp
lds
outsb
mov
daa
jo
pop
adc
ret
add
lds
inc
mov
cmp
inc
fs
xchg
jle
push
add
imul
dec
out
clc
loopne
insl
not
mov
lret
out
mov
xorl
push
data16
cmp
mov
push
push
lahf
add
xchg
fdivl
out
das
insl
aas
je
test
ret
inc
scas
xchg
aad
jo
int
in
insb
jle
xor
jo
mov
sbb
jbe
jl
stc
jbe
mov
fcmovu
jno
das
mov
test
adc
mov
mov
jo
fbld
imul
rcrl
cmp
je
cwtl
pushf
dec
jge
mov
push
dec
jg
stos
aaa
mov
cmp
lret
dec
push
jnp,pn
and
jo
inc
or
std
or
bswap
insl
popf
add
idivl
pop
inc
ficompl
popa
jo
lcall
add
jo
sti
jp
sbb
call
and
jo
pusha
xor
cmp
xchg
jo
cmp
adc
shlb
or
cmpsb
dec
pusha
pop
jo
sub
cmp
clc
jne
adc
push
enter
xor
scas
jo
es
sub
jo
pop
daa
cltd
in
push
adc
pop
cmp
dec
in
fbld
imul
test
xor
mov
pop
jo
dec
mov
jo
icebp
push
cmc
xchg
outsl
pop
nop
add
jno
jmp
jo
clc
adc
js
push
es
sahf
jo
mov
inc
jo
pop
mov
lret
out
inc
lods
mov
jge
shll
cmp
and
cmp
jg
mov
pop
jo
pop
add
mov
popf
mov
xchg
jo
add
cmpsb
mov
bound
and
and
xchg
idivb
jmp
movsb
orl
inc
stos
inc
lock
sub
mov
push
ret
insl
rclb
lock
shl
dec
jo
out
or
xchg
fcom
jo
pop
jmp
inc
shrb
jo
lret
sbb
adcl
scas
jns
lds
jns
lret
fdiv
jo
or
cs
repnz
mov
jmp
cld
jo
or
jo
mov
jmp
push
loopne
pop
pusha
imul
push
sbb
stos
jo
nopl
xor
push
arpl
inc
xchg
adc
jl
into
xor
push
enterw
jo
mov
push
movsb
add
push
push
repnz
jo
dec
adc
lret
jmp
cmp
cwtl
dec
mov
jo
andl
sub
mov
clc
mov
dec
push
notl
insl
jbe
in
push
add
jo
popf
mov
fsubrs
pop
test
jp
imul
in
push
mov
arpl
aaa
jmp
js
scas
shlb
jo
adcl
sbb
jo
shlb
das
or
jo
push
sbb
sub
ljmp
xchg
push
and
inc
adcl
xor
mov
movsb
and
push
mov
adc
or
jg
pusha
or
mov
cld
push
or
cltd
or
mov
cs
pop
or
cmp
pop
adc
int
js
arpl
push
roll
xor
sbb
test
adc
mov
xchg
andb
sti
hlt
push
fs
pop
stc
int
addr16
cmpsb
fucomip
aam
call
mov
insl
fnstenv
and
fldcw
and
insb
test
and
xor
xchg
jb
int3
pop
shlb
mov
push
push
cmp
mov
inc
lds
std
ret
outsb
arpl
adc
test
pop
andl
pop
or
insl
pop
cmpsl
cmp
jg
out
mov
das
jmp
dec
inc
jmp
jo
arpl
adc
fistpll
push
nop
xor
fyl2x
jg
mov
adc
in
out
sub
negb
out
in
loope
pop
insl
in
push
in
iret
in
push
imul
mov
mov
je
es
pop
push
mov
dec
sbb
pop
mov
add
pop
cmp
push
cmpsl
sti
mov
nop
jnp
mov
mov
and
daa
ficomps
into
pop
mov
sub
and
icebp
dec
in
pop
jle
movsb
fmuls
mov
nop
adc
adc
or
push
add
push
std
and
sbb
adc
xchg
shlb
xchg
leave
mov
pop
and
in
sbb
xchg
movsb
inc
adc
sarb
pop
push
fbstp
pusha
popf
dec
in
inc
add
jmp
xor
xor
push
push
mov
repz
iret
scas
push
cmp
hlt
je
jns
or
jae
mov
mov
iret
mov
lods
xchg
push
movsb
and
out
imul
dec
in
add
ljmp
xchg
fnstenv
jo
xor
lahf
jbe
aas
dec
inc
ss
push
clc
inc
pop
pop
shr
cmpsb
out
data16
add
movsb
les
mov
jmp
push
or
loopne
jns
add
push
imul
adcb
scas
pop
pop
rcr
xor
into
sub
fwait
inc
ret
arpl
sub
jg
jae
jmp
jae
mov
cmpsl
add
ret
mov
mov
inc
cmp
sub
icebp
popa
scas
push
adc
scas
jmp
fimuls
jl
mov
xor
es
sub
fistps
push
xchg
adc
shlb
push
jl
mov
movsb
and
lods
iret
addb
cmp
lods
add
mov
inc
push
jnp
cmp
push
and
jp
jmp
cli
mov
mov
arpl
and
pushf
jmp
insl
pop
fwait
and
xor
push
lret
outsl
ret
outsb
jae
sbb
in
mov
cmp
js
inc
inc
fs
mov
out
add
jne
and
xchg
jae
clc
mov
cmpsl
pop
xchg
mov
push
mov
inc
jl
xor
adc
test
aad
and
inc
rolb
outsl
cmp
mov
outsb
inc
aad
out
jle
jae
mov
shrb
inc
bound
out
mov
arpl
scas
sub
repnz
mov
mov
ja
sbb
mov
add
gs
fs
jmp
jg
imulb
movsl
pop
push
rcrl
and
arpl
pop
cmp
xchg
xor
fdivs
stos
les
dec
shrb
mov
push
jg
xchg
pop
or
sti
adc
clc
push
lret
jo
add
insl
adc
stc
or
fstps
push
ss
ret
repnz
sub
int
add
pshufw
add
lock
jb
sub
dec
in
iret
cmpsl
and
inc
jle
iret
push
push
dec
icebp
mov
out
std
add
pop
out
jae
out
jno
pusha
adc
js
push
pushf
divl
mov
frstor
std
xchg
fs
cltd
push
xchg
fwait
jne
pop
dec
shrl
dec
and
pop
sti
pop
loopne
push
shlb
out
movzbl
lods
rcrb
push
test
mov
mov
sahf
lock
push
mov
jl
outsb
or
test
adc
adc
cmp
test
in
call
jg
out
in
and
mov
pop
push
mov
imul
inc
fistps
hlt
fs
jns
cld
cmc
pop
jle
push
sub
pusha
push
jge
dec
mov
push
sti
lcall
out
pop
pop
cmp
repz
imul
pushf
ja
inc
sahf
jnp
pop
cld
mov
adc
add
add
addr16
pusha
lods
int3
or
jmp
mov
mov
push
faddl
push
sub
out
adc
jbe
nop
or
arpl
aas
fisttpl
or
hlt
loopne
inc
mov
aaa
mov
mov
ficompl
out
xchg
lea
popa
push
or
sbb
lret
sbb
ficompl
std
add
jne
filds
add
mov
cld
into
mov
mov
scas
push
dec
insb
dec
push
lahf
lods
fs
inc
loopne
or
mov
push
xchg
fcomi
in
js
jle
movsb
data16
aaa
test
xchg
sbb
sub
arpl
int3
in
mov
inc
add
and
test
sarb
cmpb
popf
cmp
fldl
test
hlt
or
xchg
mov
jns
and
roll
jo
xchg
inc
aad
dec
jle
scas
mov
loop
mov
fisttpl
mov
dec
lret
jbe
test
outsb
jae
mov
push
push
sub
in
fisubrs
jle
rorb
or
mov
jo
xchg
sbb
xchg
pop
shl
adc
mov
out
inc
in
xchg
pop
outsl
push
sbb
jae
pop
or
nop
popa
ds
xorl
ja
loopne
push
mov
popf
imul
inc
sbb
arpl
jbe
jae
das
inc
push
push
in
in
push
cmp
push
sarb
jle
inc
nop
arpl
andb
inc
lret
cld
fsub
ljmp
cmpsl
xor
dec
cmp
fs
push
dec
arpl
fsts
mov
out
insl
or
jns
and
repz
arpl
jno
sahf
js
mov
addr16
pop
and
inc
aad
sbb
shlb
dec
lret
mov
test
mov
cmp
ss
jl
cmp
xchg
stc
sub
inc
mov
inc
jl
push
pop
add
jg
mov
or
add
outsb
iret
inc
cmpsl
cmp
cld
fbstp
ja
mov
mov
cmp
inc
out
or
jb
sar
mov
jnp
sahf
lret
cmp
push
jecxz
out
aaa
mov
insb
popf
ss
leave
int3
cmp
dec
popf
adc
insl
imul
lcall
mov
fsts
sub
arpl
mov
add
addl
cld
in
scas
jecxz
mov
and
push
lock
outsb
push
movsl
fldt
push
cmp
jecxz
stos
cmp
jb
movb
xchg
xor
dec
jecxz
fs
ja
insb
jo
or
lret
sub
inc
push
rclb
add
aad
inc
pop
testb
mov
je
out
sbb
adc
cwtl
dec
gs
mov
outsb
pop
shrb
fadd
adc
test
and
inc
int3
cltd
aas
jge
cld
nop
jmp
mov
push
mov
iret
dec
add
lahf
mov
cmc
jae
push
sbb
hlt
jmp
push
cmc
pop
mov
iret
mov
adc
pop
rorb
fs
dec
jae
insb
in
scas
aam
es
imul
xor
sub
cmp
jmp
in
inc
rcrl
mov
xor
icebp
inc
subl
push
pop
aaa
dec
std
mov
cmp
pop
aas
popa
setg
in
push
test
add
icebp
dec
pop
push
ss
xor
test
shlb
pmuludq
leave
dec
stos
or
pop
adc
or
lods
push
outsl
sub
push
ds
rcrb
mov
data16
jo
movsl
arpl
ja
xchg
shr
stos
pusha
adc
pop
adc
int3
fisttps
inc
xchg
ljmp
clc
sub
push
je
iret
jns
test
insl
psubw
scas
add
fiaddl
push
call
insl
loop
push
inc
lock
jne
jb
scas
dec
iret
ret
sub
sahf
xor
dec
repnz
add
movb
in
add
push
adc
je
sbb
sbb
movsb
xor
sub
mov
jb
xchg
movsl
dec
mov
or
stos
or
js
leave
sbb
out
mov
fcomps
rclb
and
fs
ficoml
mov
xchg
push
sbb
fmul
xchg
les
xchg
stos
xchg
adc
stc
test
pop
pushf
mov
addb
pop
je
xlat
push
dec
mov
push
push
pop
mov
push
xor
pop
adc
sub
fcompl
mov
arpl
lret
insb
in
test
xchg
movups
lret
jne,pn
imulb
jle
pusha
jbe
in
gs
jge
popa
outsb
jbe
xor
mov
insl
mulps
inc
lea
push
jecxz
add
addr16
push
pop
cmp
lods
call
ret
pop
jp
int
cmpsb
test
shrl
mov
cmp
ret
cmp
test
inc
sbb
and
xchg
dec
inc
dec
subl
and
cmp
mov
mov
nop
lods
cld
outsb
cmp
or
sub
int
ja
push
sub
mov
call
ja
rorb
lret
jns
fistl
sub
loop
pop
sbb
mov
and
xchg
or
aam
test
push
pop
jmp
pop
dec
lahf
sub
sub
out
inc
push
xor
fmuls
mov
and
out
enter
or
mov
or
add
add
orb
movl
ja
js
mov
lods
cmc
mov
adc
push
ja
mov
add
or
jge
int3
dec
lods
rolb
jno
or
mov
in
bound
fwait
call
xchg
xchg
sahf
dec
mov
out
aaa
movsb
shr
adc
in
sbb
push
loope
and
jg
or
jg
sbb
cmp
repnz
ret
jle
push
data16
xchg
out
cmc
out
test
fmull
sub
and
aaa
test
jg
out
push
imul
or
popa
cmp
hlt
inc
jns
shrb
push
add
xchg
ljmp
clc
clc
dec
pop
push
shr
dec
cmc
popa
sub
pop
sbb
add
ret
stos
mov
mov
out
push
jb
or
mov
jae
arpl
dec
mov
jbe
mov
or
inc
lcall
jo
mov
push
jno
sub
movsb
mov
fstpt
adcb
call
lods
push
sub
mov
add
ret
push
mov
scas
push
mov
xor
out
push
imul
cmp
push
out
mov
cwtl
mov
sub
fcmovnb
adc
fnstenv
jae
adc
out
dec
add
mov
test
push
push
pop
bound
fwait
lods
pop
sarb
push
arpl
mov
out
cmp
sub
mov
xchg
jl
lock
push
xchg
mov
std
jae
aad
aam
adcb
mov
inc
fdivrs
jl
ficoms
mov
xchg
pop
movsl
inc
mov
je
jo
arpl
push
xor
mov
sub
xor
mov
outsb
dec
out
mov
mov
rcrl
outsb
jbe
inc
xor
fnsave
push
xor
jp
jae
sub
add
xor
jle
leave
fs
imul
push
sbb
pop
xlat
inc
rorl
lods
dec
cmp
scas
fiadds
hlt
jecxz
xor
add
cmpsb
push
fs
cwtl
imul
sarl
push
arpl
and
lods
insl
xchg
cmp
movsl
rorb
inc
mov
sbb
pop
rcrb
mov
rol
addl
jle
outsl
repz
pusha
mov
fildl
xchg
push
in
sub
dec
cmp
push
js
add
aam
repnz
ss
jb
adc
lahf
mov
aas
mov
xlat
test
stc
dec
clc
imul
jl
push
jle
push
push
lahf
hlt
cmp
pop
jo
dec
imul
ja
push
push
add
bound
repz
cli
fistpll
fisttpll
leave
jge
mov
out
jb
sbb
jo
and
lods
or
sbb
popf
pop
cltd
push
sub
jo
mov
pop
inc
mov
sbb
xchg
lock
js
daa
ljmp
in
or
rep
movsl
xor
or
sbbl
je
pusha
sub
jo
fwait
cmp
jb
aam
inc
ja
mov
cltd
pushl
aas
pop
xlat
nop
mulb
add
sbb
leave
imul
cmp
push
jo
daa
mov
mov
and
inc
push
aas
dec
mov
add
sub
outsb
cmp
mov
push
cwtl
push
shlb
inc
nop
jo
xor
test
xchg
fnstcw
mov
popa
mov
fisttpl
cli
in
ds
and
cmc
add
mov
jle
xor
ja
pusha
jo
addb
push
lret
sub
outsb
and
lock
sbb
inc
imul
cmc
adc
push
lea
scas
stos
paddw
sub
data16
push
mov
xchg
pop
push
mov
sub
outsb
add
test
mov
and
hlt
xor
aad
jo
jl
mov
jo
push
outsb
mov
xchg
jo
ffree
test
adc
push
jo
push
xchg
jb
in
int3
push
imul
ljmp
sti
gs
sbb
inc
adc
pop
nop
jle
in
xor
add
hlt
shll
les
loop
xchg
shll
sti
jnp
sbb
sarb
push
mov
cs
add
scas
insb
test
xchg
fstl
out
pop
jo
mov
jl
jp
iret
jo
dec
cmp
lea
mov
push
push
hlt
sub
jo
xchg
sub
push
loopne
push
and
pushw
and
inc
jo
sbb
mulb
and
outsb
dec
test
dec
jle
cmovs
int
lea
cmp
adc
fs
dec
sti
inc
gs
imul
mov
mov
jo
das
inc
adc
fildll
in
mov
mov
jno
dec
repz
inc
stos
and
sbb
dec
jo
push
and
add
adc
mov
mov
ret
inc
sbb
pop
jne
psubusb
js
js
jbe
adc
enter
xchg
dec
out
jns
nop
loope,pt
mov
pop
sbb
xor
popa
stos
mov
mov
dec
jle
xorb
fiaddl
data16
int
ret
cmpl
xor
cmp
xchg
lret
sub
xor
xchg
xchg
repz
and
inc
xor
jle
jo
in
or
pushl
dec
insb
mov
nop
cli
aaa
subl
cmp
scas
or
outsl
pop
xchg
popf
arpl
cwtl
outsb
mov
push
jnp
fsubrl
adc
lret
in
push
call
inc
frstor
push
push
outsb
fistl
jmp
sbb
jecxz
scas
mov
fldl
inc
jbe
jp
arpl
push
sahf
inc
fldenv
sub
or
xor
aas
fcmovnbe
dec
cs
push
cmp
push
ja
cmc
xchg
push
or
mov
das
ret
or
out
pushf
mov
fs
ret
push
arpl
es
js
add
push
dec
ljmp
out
mov
adc
in
cmpsl
mov
fs
mov
faddl
jno
andb
mov
adc
xor
push
dec
push
sub
movsl
mov
jg
pushf
inc
sub
or
stc
jae
mov
dec
imul
add
push
cli
rorb
adc
jnp
xor
xor
jae
xchg
fs
lods
xchg
es
test
in
fisubrs
aaa
jae
lahf
cmp
jg
cld
add
cmp
push
inc
mov
aaa
push
std
arpl
dec
push
push
dec
cmp
mov
out
adc
test
data16
jae
mov
mov
xchg
in
add
cltd
jg
xor
or
test
std
mov
xchg
loop
clc
lock
or
add
fdivs
data16
cwtl
mov
movsl
imul
rclb
out
les
push
ds
jge
rcrl
or
jae
ret
xchg
imul
dec
xor
in
pusha
sbb
aas
push
mov
mov
arpl
and
jecxz
lahf
out
inc
test
cmpsl
sbbl
or
int3
sti
push
cld
push
dec
outsb
cmp
push
inc
out
out
sbb
mov
dec
imul
dec
dec
jae
in
int3
popf
insl
scas
clc
xor
icebp
orb
in
pushf
sbb
arpl
add
pusha
xor
loopne
inc
sbb
jmp
loop
orb
cld
out
push
jge
mov
inc
mov
js
dec
pop
or
loop
mov
repz
and
dec
mov
rol
push
pop
nop
jg
subl
or
cmpsl
jecxz
inc
add
pop
xor
jo
lods
push
push
mov
out
dec
outsl
pop
mov
add
pop
out
push
nop
push
mov
sbb
inc
add
insl
xchg
push
cmpsb
arpl
movsl
out
mov
push
in
arpl
fisttpl
inc
adc
or
lcall
data16
xchg
fimuls
xor
push
add
inc
shll
daa
xchg
or
test
lock
insb
nop
or
pusha
insl
fstpt
notl
inc
adc
dec
xchg
in
leave
jecxz
jecxz
mov
mov
mov
inc
mov
sub
lahf
push
mov
lods
or
jae
jb
lock
or
sub
lcall
repnz
fsts
pop
or
push
mov
aam
sbb
add
adc
ss
sub
sti
or
mov
mov
out
mov
or
sbb
scas
jo
sub
sbb
jo
lret
adc
mov
lock
mov
loop
xchg
cwtl
mov
push
pop
dec
jno
pusha
popf
addb
and
pop
jo
or
sub
in
jl
jmp
dec
mov
mov
jns
adc
jmp
je
jo
mov
mov
cld
sub
jo
iret
mov
and
inc
in
jo
mov
das
jb
fidivl
fwait
mov
lds
out
jo
fisttps
lahf
and
arpl
cld
ret
jecxz
test
sti
push
cwtl
fs
push
lret
shlb
pop
imul
iret
insl
cs
stos
je
fs
jo
fcmove
call
nop
inc
xchg
and
pop
ss
mulb
jo
and
add
or
xchg
push
jo
hlt
cli
mov
outsl
rcrl
jno
jo
out
nop
bound
jo
or
push
jo
dec
addr16
sti
loopne
jo
insb
pop
stos
inc
push
es
or
cmc
sub
orb
add
leave
jo
je
lcall
pop
jecxz
jno
mov
jo
subl
js
ljmp
bound
movsl
push
call
repz
jo
inc
scas
mov
cmpxchg
dec
sub
fldl
push
jle
andb
adc
add
sbb
arpl
imulb
mov
hlt
shlb
addr16
jbe
nop
jbe
ds
loope
mov
jmp
clc
outsb
or
sahf
sbb
dec
mov
jl
mov
push
jg
push
sbb
paddsb
xchg
subb
sbb
mov
test
push
pop
pop
mov
pop
jnp
xchg
xlat
push
add
js
jnp
xchg
push
jno
mov
loope
xchg
test
xor
push
inc
sahf
pop
push
nop
add
je
pop
push
push
cs
je
gs
int
setnp
jo
ljmp
jo
jg
lds
wbinvd
cld
in
push
add
sbb
or
mov
pop
std
out
nop
mov
mov
repnz
lods
jo
push
sbb
loop
das
pop
adc
add
add
scas
mov
arpl
jno
stos
leave
jle
adc
xor
jo
inc
repz
rcrb
add
mov
frstor
sub
scas
jo
push
push
cmpsb
ret
mov
and
aad
adc
into
adc
cmp
add
movsl
fwait
adc
inc
out
and
xchg
jo
fildl
mov
jge
xor
pop
jo
jecxz
clc
out
push
out
and
pushf
mov
and
addr16
hlt
jo
mov
or
push
int3
aas
mov
jb
sub
push
push
add
mov
cmp
in
xor
aaa
fs
lret
das
mov
mov
mov
jo
push
or
test
lcall
scas
add
sbb
sub
pop
jo
loopne
jbe
lcall
cld
sub
mov
inc
lds
mov
add
sub
lea
push
fs
jecxz
add
imul
lahf
hlt
fwait
test
imul
jle
insl
jle
push
xor
pushl
dec
lcall
mov
mov
stc
loopne
hlt
nop
mov
movsl
jb
jo
addr16
cmc
gs
jo
mov
mov
jno
fwait
cwtl
fcomps
clc
jns
push
or
sub
jnp
jo
dec
push
mov
jmp
cmp
je
aaa
push
ds
mov
adcb
inc
punpckhwd
xchg
popf
iret
jo
xchg
jle
fsubr
and
xor
nop
mov
dec
jp
push
push
jo
cli
adcl
dec
call
pop
jl
cli
dec
xor
push
imul
and
fldl
mov
stos
jo
jae
in
mov
enter
inc
jns
call
cmpsb
push
negl
sbb
jbe
xor
fldl
jnp
jge
xorl
movsl
fsqrt
jo
icebp
xchg
or
jo
mov
xor
jo
sbb
jle
push
lahf
xchg
jo
gs
dec
js
add
sub
mov
insl
add
push
push
test
jo
stos
test
push
loop
bound
sub
sub
cmp
ja
out
jle
jo
movswl
addr16
jo
decl
sbb
and
inc
movl
enter
xchg
mov
shrl
lret
dec
cltd
jae
jo
addr16
and
add
ljmp
jg
jo
leave
std
call
mov
inc
mov
mov
add
jge
xor
pop
dec
das
fimuls
sti
pushf
jae
repnz
pop
js
stos
mov
mov
test
imul
cs
jo
jne
lds
shll
sbb
jl
and
dec
mov
jecxz
psadbw
cli
push
jmp
or
aas
inc
sub
loope
int
jb
stos
mov
push
aam
scas
les
push
imul
in
out
fstps
lahf
div
lds
sbb
xchg
mov
stos
push
jo
stos
shlb
jo
fwait
push
jg
or
jo
mov
adc
cwtl
aas
jo
rolb
pop
addr16
jecxz
loope
cmp
cmp
aam
jo
mov
add
mov
loopne
xchg
add
mov
movsl
pcmpgtd
mov
in
jmp
xor
fidivrs
pop
popa
and
mov
mov
jl
inc
stc
aas
jo
or
ja
sbb
adc
or
push
nop
pop
jns
bnd
jne
dec
jle
mov
cltd
pop
sub
test
iret
mov
or
shlb
scas
adc
sub
mov
leave
jno
or
cmp
loop
test
mov
outsl
add
clc
push
jno
fisubl
mov
test
push
jo
jge
sbb
lods
loop
sub
loopne
pop
dec
mov
ret
and
add
fwait
mov
push
ret
xchg
sub
inc
inc
and
ljmp
add
fs
push
loopne
test
sbb
add
cmp
rolb
mov
repnz
and
xlat
mov
jmp
cmc
das
fwait
push
push
mov
jno
pusha
push
sub
ret
cmp
es
or
into
mov
inc
jmp
pop
jo
sbb
push
inc
nop
xor
jbe
push
xchg
mov
sahf
and
ret
mov
pushl
stos
orb
fidivrs
or
jb
fisttpll
cmpsl
mov
and
add
fldcw
inc
jo
or
pop
pop
jb
inc
sbb
jmp
mov
cld
pop
lret
sbb
pop
jp
cli
shlb
jns
leave
cmp
sbbb
xchg
xchg
xor
pushf
xchg
aaa
sbb
mov
xor
mov
xchg
add
hlt
in
inc
int
dec
shrb
cmp
fstp
jo
push
shll
inc
lret
or
mov
jo
and
xchg
cmp
shll
sub
popf
push
jo
aas
cmp
out
mov
leave
and
test
pop
add
pop
arpl
inc
test
lcall
mov
das
dec
pop
in
cmp
mov
push
in
jecxz
sbb
bnd
es
andb
loopne
stc
inc
xchg
mov
jo
add
mov
nop
push
outsb
fadd
mov
inc
push
sub
jo
xchg
movsb
jge
xor
xchg
jbe
xchg
adc
adc
jne
ds
jo
scas
mov
push
lods
jo
out
dec
dec
popa
in
ret
add
jo
hlt
imull
cmp
es
jo
and
adc
cmp
xchg
call
cmc
push
stos
adc
out
xlat
repnz
adc
lea
arpl
rcr
or
call
je
inc
push
xchg
jo
inc
cmp
sbb
pushf
mov
mov
pop
fisttpl
repz
mov
js
push
push
push
adc
jo,pt
mov
pop
or
jmp
jp
sub
add
leave
mov
addr16
push
subl
push
out
add
mov
imul
sbb
dec
in
xchg
sub
pop
in
imul
push
addb
and
test
jnp
out
adc
mov
pop
outsl
cmp
clc
dec
sbb
push
mov
loop
mov
and
je
add
push
test
mov
jecxz
repz
xor
ljmp
ja
or
xor
int3
nop
sub
repz
test
fldlg2
leave
shrb
divl
aam
jae
mov
fisttpll
rolb
aaa
insb
xor
jns
lods
mov
and
je
dec
out
outsl
insl
xlat
mov
lods
cmp
jle
out
mov
dec
insb
xor
cs
jmp
push
xchg
jo
push
das
or
fnstsw
xchg
jo
mov
mov
pop
pop
push
stc
or
std
xchg
lods
aad
dec
subl
lea
mov
cmp
cwtl
cmpsl
shl
js
mov
sub
sbb
or
lcallw
testb
push
jo
js
jb
call
out
fisttpl
mov
lods
cs
jno
jo
iret
lcall
lcall
outsl
cmp
aad
pop
shl
cs
and
lds
into
int
hlt
push
jo
pop
sub
enter
or
insb
ret
jge
jo
aad
orl
jnp
mov
jl
pop
imul
push
mov
adc
negl
jmp
gs
and
enter
inc
cmpsl
cld
and
cli
cs
push
insl
sub
addr16
lret
loopne
ret
and
imull
xor
out
cmp
cwtl
arpl
jl
insl
push
push
and
nop
mov
divl
fwait
out
fnsave
pop
aas
sbb
sti
adc
or
in
mov
addb
popa
jmp
bound
nop
xchg
repnz
test
jne
pop
sti
xor
hlt
xchg
jo
inc
loop
or
pop
repz
push
rcrl
test
out
mov
lock
dec
das
mov
addr16
sub
sbb
xor
int
pop
cmp
push
jo
or
push
pushf
fldt
bound
subb
push
push
and
scas
dec
gs
and
jne
jns
or
in
inc
aad
aas
push
arpl
mov
jl
iret
fisubl
cs
push
jne
std
in
fnstcw
insb
mov
insl
adc
out
cld
sbb
mov
mov
push
int3
je
rclb
lret
add
fistps
inc
mov
mov
nop
je
mov
insl
imulb
jg
ljmp
mov
lods
jns
imul
or
out
jne
in
jb
and
fwait
or
or
mov
push
cmp
push
pop
movsl
mov
xor
and
push
jl
jae
push
push
mov
push
xchg
push
add
jl
pusha
rclb
cltd
mov
xchg
sub
dec
out
adcb
data16
movsl
bound
repnz
shrl
and
push
mov
arpl
insl
and
fbld
into
sarb
xor
sbb
shlb
dec
in
jmp
negl
xor
inc
jl
push
pop
out
in
addr16
xchg
aad
lock
xor
inc
push
mov
pop
xor
leave
and
mov
call
lds
xchg
mov
pop
mov
stos
std
in
leave
andl
mov
movsb
add
std
arpl
test
leave
imul
dec
dec
push
xchg
fbld
sbbb
sti
cltd
js
pop
mov
lahf
mov
outsw
inc
and
imul
mov
mov
enter
dec
jnp
movsb
xchg
test
push
cmpsw
jle
add
and
mov
mov
cwtl
jle
imul
dec
in
cmpsl
inc
ss
mov
gs
cs
mov
repz
cmpb
stos
lock
sub
insl
adc
int3
nop
cmc
adc
xor
rclb
jmp
sbb
adc
popf
out
into
ret
das
jnp
dec
add
and
adc
mov
icebp
sbb
aam
lods
adc
aas
and
push
jb
fstl
sbb
push
add
add
aad
mov
outsb
fldt
das
add
mov
out
leave
ss
fldenv
pop
cmpsb
pop
push
sub
inc
cmp
pop
mov
and
xor
jbe
sub
dec
mov
sbb
push
fistpll
push
out
je
movsb
rorb
stc
fisttps
xor
outsb
pop
loop
fidivrl
mov
aad
inc
jno
sbb
bound
push
gs
lea
negb
out
inc
in
enter
adc
repnz
rorb
mov
mov
rclb
aaa
pop
sti
jg
jae
push
imul
jbe
pop
push
repnz
addr16
jae
jle
arpl
ret
mov
aam
adc
push
arpl
jl
fcmovnbe
fisubs
sub
leave
pusha
xchg
cmp
dec
aaa
repnz
mov
sub
mov
xchg
mov
cmpb
inc
or
dec
jno
push
mov
fdivs
push
cltd
es
data16
sar
jae
lock
cld
test
clc
movsb
movsb
aam
and
gs
jge
sbb
push
insb
scas
cmp
ficoms
aas
mov
mov
test
lods
icebp
pushf
std
popa
je
push
sbb
fcoms
push
pop
ret
inc
pop
mov
xchg
jge
pop
ja
pop
sub
lahf
adc
mov
or
inc
or
sbb
inc
xchg
loope
outsl
jae
lcall
outsb
aam
shlb
arpl
idiv
pop
enter
gs
and
jae
test
mov
imul
ja
xor
inc
lahf
and
inc
arpl
mov
imul
shrd
inc
aad
rcl
lock
aam
ds
pusha
xor
jle
ljmp
lcall
mov
push
jle
jg
sbb
sbb
repnz
outsb
pop
cmc
pop
ficoml
xchg
fdivr
insb
jne
mov
jg
mov
mov
das
sub
jmp
out
out
lods
xor
mov
dec
inc
cmpsl
sbb
cmp
inc
mov
inc
inc
inc
movsb
imul
jl
push
cmp
cwtl
dec
pop
imul
jae
ja
mov
lods
mov
add
test
scas
xchg
inc
jl
dec
push
retw
inc
push
jae
and
out
xor
daa
sbb
adc
push
and
ljmp
aam
add
mov
hlt
outsb
and
adc
movsb
lock
pushf
fistps
movsl
push
popa
dec
xchg
xchg
push
jno
out
imul
cmp
into
pop
jb
loop
push
pusha
jne
xlat
adc
or
jns
pop
push
sbb
pop
aaa
outsl
mov
lret
stos
in
sarb
scas
repnz
push
sub
out
or
shrl
push
or
mov
out
outsb
push
mov
add
cmpsb
or
cwtl
vmulss
xchg
and
push
popa
outsl
fstpl
rorb
test
jae
divb
jp
out
pop
sbb
pusha
arpl
dec
push
lods
push
cltd
mov
sahf
in
mov
movsb
outsl
push
and
sbb
clc
pop
jl
push
rorl
scas
xchg
or
int3
push
out
and
pushf
adc
lret
imul
sub
cmp
xchg
int3
jbe
adc
test
xor
xor
loopne
mov
stos
mov
int
loope
push
sub
xor
sbb
fildll
mov
mov
jae
mov
sub
adc
fistpl
pop
outsl
push
add
push
lcall
jmp
insl
imul
sub
mov
ljmp
rcr
std
sbb
mov
adc
dec
dec
push
inc
cld
inc
negb
negl
jle
mov
hlt
jl
or
jg
add
inc
mov
repz
sti
cmc
or
pop
push
jle
lret
jae
scas
out
or
std
nop
push
ljmp
jge
leave
push
cmpsl
rdpmc
xchg
ret
das
pop
pop
add
ss
push
into
leave
movsb
andl
imul
cmpsb
cmp
jo
push
shl
mov
in
mov
cmp
xchg
mov
jmp
inc
aam
mov
int3
add
cmp
in
movl
push
lret
sub
arpl
jae
sbb
dec
in
xor
add
shlb
hlt
into
in
fs
pop
sbb
pushf
pushf
fldcw
shll
popl
testb
jne
es
sub
divb
mov
test
mov
sbb
dec
sub
imul
sbbb
push
push
daa
data16
fistpll
arpl
fcoms
cs
inc
jb
jg
add
enter
xchg
jno
addr16
cmc
sbbb
inc
adc
mov
insl
push
xor
sahf
mov
cmpsl
sbb
hlt
int3
push
dec
jo
mov
test
jecxz
movsl
mov
adc
dec
cmpb
and
mov
lahf
sbb
dec
dec
insl
ret
add
pop
shlb
popaw
add
mov
shll
jns
xchg
fmul
lock
lcall
adc
mov
aas
jle
mov
pushf
imull
fiadds
or
dec
mov
mov
out
shll
pushf
fstl
and
dec
outsb
sahf
repnz
das
test
mov
inc
mov
test
repnz
xor
push
push
icebp
jmp
movsb
lock
out
sbb
cmc
pop
mov
push
pop
jle
cmc
andb
mov
jo
mov
xchg
jae
sbb
out
fcmovnbe
int3
jne
xchg
adc
xchg
es
mov
std
outsl
std
mov
mov
loopne
fildl
lods
dec
jecxz
xchg
add
lods
mov
in
insb
sbb
lods
fisubs
imul
adc
arpl
push
push
add
adc
push
lock
cmpsb
xchg
inc
mov
shlb
sbb
cmp
out
mov
sbb
stos
sbb
int3
and
ljmp
insb
dec
mov
sub
lahf
mov
xorb
dec
mov
xor
or
lock
outsb
xchg
push
in
test
add
jecxz,pn
push
andl
fs
frstor
leave
lcall
ldmxcsr
inc
hlt
fs
and
sub
dec
movsl
add
subl
in
push
outsl
or
mov
lret
stos
push
jae
pop
cmpsb
jbe
in
jo
bound
ja
mov
jle
lock
out
sbb
xor
sub
xor
adcb
ljmp
jge
or
int
nop
aam
pop
imul
pop
into
imul
ds
cmpb
pop
call
pop
mov
aad
jo
mov
and
sarb
sub
inc
subl
iret
jg
or
push
and
aas
cld
cli
lds
or
xchg
sti
daa
cmpsb
inc
adcl
clc
jle
cs
in
dec
jl
cwtl
mov
ret
or
sbb
cmp
jns
roll
sub
sub
jl
xchg
inc
in
out
lret
inc
int3
ljmp
pop
clc
dec
xchg
fnstenv
rolb
fnstenv
jbe
jae
xor
cmp
xchg
adc
jge
mov
out
out
and
test
mov
push
das
cld
and
jg
xchg
jnp
mov
jp
xor
jg
jge
mov
pop
pusha
mov
push
aad
pop
ss
mov
jo
add
into
sbb
dec
jae
cmp
jle
ja
lods
fisubl
xor
adc
pop
mov
mov
fcomps
test
or
mov
mov
jo
sub
add
movsl
scas
jg
mov
mov
sbb
fidivs
mov
mov
pop
out
frstor
jne
jg
lea
sahf
push
aaa
imull
pop
or
add
fimull
jg
cmp
loop
xlat
mov
mov
fprem
xchg
jnp
or
jne
sbb
inc
mov
cmpsl
sbb
fistpl
jae
jae
push
arpl
insb
jno
jg
andb
push
ja
push
pop
jp
in
pop
mov
shll
push
pop
addr16
dec
push
inc
xchg
cmp
insl
outsl
pop
sarb
jmp
or
push
jmp
cmp
ljmp
and
sub
push
sub
or
xor
je
stos
or
inc
int
pop
add
test
arpl
dec
outsb
jle
push
jmp
test
andl
jae
push
icebp
jnp
or
loope
sub
sbb
xor
jae
fldcw
push
ret
fistps
push
dec
add
stos
int3
fnsave
rcr
gs
mov
out
lcall
fs
clc
js
ja
jns
testb
mov
bound
test
jns
push
cld
add
js
arpl
frndint
inc
cld
into
mov
imul
xchg
arpl
negb
xor
cmp
pop
jo
ret
pop
out
or
mov
push
or
add
cld
aas
out
mov
cmc
inc
push
push
jb
ror
push
or
push
mov
mov
jge
int3
inc
jbe
dec
clc
imul
lret
fiadds
loop
dec
push
cmpsl
imul
mov
jecxz
shrd
std
sbb
lahf
push
cmp
fs
fwait
addr16
and
negb
std
pop
out
orl
leave
cmpsl
xor
jp
addr16
xor
jge
sub
pop
adc
push
adc
lock
mov
or
xchg
jp
inc
mov
mov
fmuls
cmpsb
das
out
lret
lret
fistpl
sub
test
xchg
mov
add
jns
and
add
xlat
popf
into
or
push
ja
inc
push
cmp
add
data16
mov
xchg
mov
mov
xchg
fidivrl
mov
xor
addr16
jns
loope
mov
fdivl
pop
insb
jg
loope
fstps
jo
in
into
push
mov
dec
mov
cmp
lea
jbe
cmc
call
jg
in
stos
outsb
inc
sbb
rcrb
loope
mov
cmp
push
enter
repz
sti
and
mov
and
es
int3
dec
adc
imul
dec
push
mov
and
loope
stc
clc
push
jo
cltd
push
les
jp
dec
js
iret
arpl
in
sar
fcmovbe
dec
xor
lret
arpl
mov
lock
and
inc
adc
mov
jp
add
mov
imul
test
cmpsl
cmp
sahf
pop
out
lcall
add
outsb
dec
loopne
pop
xor
xlat
inc
cmp
fs
pop
dec
movsl
push
sbb
mov
rcll
jmp
vblendpd
pusha
lods
jp
mov
xchg
int3
inc
mov
flds
ss
and
pushl
mov
lock
mov
cmc
fmuls
mov
hlt
add
mov
fsts
pop
mov
add
xchg
imul
aad
jle
sbb
mov
mov
in
in
mov
inc
std
shll
push
cmpb
push
mov
adc
pop
subb
push
or
mov
mov
mov
lock
xchg
jnp
aaa
lret
cltd
lods
xor
xor
push
mov
mov
sub
fdivrp
fsubrs
imul
jmp
add
movsl
push
hlt
test
sub
adc
scas
mov
jnp
and
test
jo
popw
jno
pop
push
pop
jo
pop
mov
sarl
nop
ja
lods
mov
cmp
aam
imul
jo
or
dec
mulb
stc
sub
push
cltd
mov
push
jo
add
cmp
pop
cli
dec
jo
jl
and
inc
pop
data16
and
movsb
cwtl
cmp
jne
push
js
loop
xchg
mov
or
int
sbb
stos
dec
jbe
movsb
jle
insl
pop
in
pop
jne
jo
mov
std
shll
push
push
mov
push
aaa
pop
push
btc
xchg
inc
mov
or
pop
leave
and
adc
pop
dec
and
lea
pop
and
push
ljmp
add
lea
cmc
sub
push
adc
lret
in
ja
cmpb
aam
nop
xchg
jo
sub
mov
lcall
xor
push
dec
or
inc
lds
sbb
jo
push
in
out
ret
pushf
jo
mov
mov
dec
rclb
pop
insl
jo
stos
dec
movsl
push
flds
mov
cs
push
add
xor
xor
jo
pop
leave
mov
mov
bound
xchg
test
psubusb
jmp
jbe
cmp
jo
aaa
enter
leave
fwait
jo
lds
xchg
mov
jo
sbb
pusha
xchg
lods
nop
mov
xor
adc
popf
in
fbstp
xor
or
int
xor
in
pusha
test
fbstp
push
mov
adcl
mov
sarb
xchg
in
adc
icebp
and
mov
icebp
lods
add
cmp
outsb
jge
adc
jecxz
push
sub
int
push
aas
cs
out
or
sbbb
xchg
rcll
icebp
jo
mov
add
push
jo
fistpll
xchg
jo
mov
negl
orb
shl
mov
outsb
cmp
sub
imul
adcl
in
ficoml
pop
loope
shrb
add
jo
push
repnz
xor
or
into
and
nop
sahf
inc
fwait
lea
gs
mov
sbbb
lcall
xchg
popa
gs
outsb
sbbb
sbb
xor
fidivl
jg
testl
jge
in
inc
outsl
jb
test
popa
jnp
lret
stos
dec
add
pop
cmp
xor
pop
scas
loopne
enter
mov
es
push
jns
dec
sbb
jo
into
lods
popf
in
jg
adcb
cmp
sub
js
shl
or
pop
scas
jnp
push
ja
ds
ret
jns
les
std
jo
lock
mov
cmpsb
movsl
jo
jne
sahf
aas
jg
aam
lds
jno
inc
icebp
mov
cld
daa
pop
out
loope
outsb
hlt
fnstenv
sub
leave
push
inc
add
mov
adc
inc
fisubrs
les
jb
push
jne
xlat
arpl
addb
in
mov
xor
nop
mov
inc
mov
mov
pushf
lahf
shr
sub
outsb
or
jl
sub
das
fnstenv
add
cmpsb
pop
shl
xor
fwait
sarb
scas
pop
jo
rorb
data16
xchg
stc
and
outsb
jo
popf
incl
push
or
cmp
mov
hlt
bound
jo
fwait
jl
ret
rcrl
aam
dec
aas
or
loopne
sub
mov
jo
int3
mov
and
jo
mov
loope
cmp
jo
xchg
pushf
add
pop
je
jo
mov
xlat
push
mov
pop
sub
xor
xor
sti
mov
jo
outsl
push
sarb
jmp
jo
mov
pop
lods
or
inc
mov
imul
sbb
and
inc
push
jbe
and
jl
jo
je
in
cwtl
dec
pop
jo
push
mov
and
insl
add
push
dec
jae
pushl
pop
js
or
sahf
nop
cs
hlt
mov
nop
loope
xchg
pop
xor
pusha
inc
fidivrs
mov
jmp
scas
inc
sbb
bound
xor
jo
fwait
call
jo
add
decb
add
cld
cwtl
movsb
mov
pop
mov
nop
es
out
into
jg
xchg
mov
jo
push
inc
ret
cli
pop
pushl
xor
cmp
in
pusha
inc
push
mov
rorb
insl
push
dec
cmp
aaa
push
lahf
cli
repnz
xchg
jo
cmp
sub
add
and
and
pop
divb
test
push
sub
roll
addr16
push
mov
fs
inc
push
jb
int3
dec
fsubr
jo
ljmp
ror
jo
dec
inc
cmpb
test
and
fsubl
lahf
pushw
jp
jo
jmp
xor
jnp
mov
nop
mov
push
push
mov
std
sahf
repz
jnp
xchg
add
add
imul
xchg
or
cld
test
ficoms
mov
push
fstps
xchg
cmpsb
mov
jo
push
sub
inc
jmp
jae,pt
mov
scas
adcb
mov
mov
popf
jnp
or
iret
xor
insl
jmp
in
inc
dec
xchg
subb
shlb
jo
test
out
sbb
add
add
mov
xor
cmp
fdivs
sbb
mov
in
js
push
mov
rorb
out
icebp
shlb
pop
jo
pop
or
aad
and
nop
popf
pop
sbb
inc
int
fnsave
sbb
mov
dec
jge
lahf
xchg
and
cmp
std
push
lcall
aaa
pop
daa
ss
je
das
xchg
push
and
jo
jae
punpckhdq
pop
mov
lea
shlb
cmp
stc
cmp
add
insb
xchg
cmc
lock
jo
testb
or
in
mov
inc
leave
push
rcll
testl
jo
and
and
shl
leave
mov
add
enter
sub
sbb
cmc
fwait
pop
pop
jle
pop
shrb
add
mov
jae
push
imulb
std
aam
lcall
sti
mov
nop
sbb
push
jge
add
sahf
rcrb
push
je
mov
mov
mov
movd
mov
pop
jo
cld
in
xchg
xchg
xchg
jge
jo
and
xchg
push
sub
xchg
rorb
jo
daa
and
jo
loop
mov
xchg
out
jo
fdivr
aaa
dec
je
xchg
jo
dec
mov
xor
inc
push
jo
or
push
movsl
and
repz
lock
jmp
into
subb
rclb
int
cmp
push
dec
loop
jo
mov
cmpsl
or
adc
cltd
dec
hlt
jmp
aam
and
jecxz
test
in
dec
xchg
jl
popl
dec
sbb
jo
and
ret
aad
jbe
adc
xor
jo
das
mul
sti
xor
les
in
mov
jo
cmp
xor
inc
imul
stc
cmp
fisubrl
sti
lea
jo
jmp
sahf
and
mov
imull
and
jo
push
out
pop
std
div
jb
push
inc
and
or
mov
loopne
xchg
je
mov
jmp
lret
mov
dec
outsb
stos
xor
jbe
xor
jo
jbe
andb
test
mov
xor
std
dec
lods
lahf
adcb
in
add
cld
jo
adc
mov
mov
test
outsl
pop
sub
or
repz
scas
jns
adc
fs
push
push
insl
subb
xchg
cmp
sahf
mov
popa
push
test
jno
jl
fidivrl
call
nop
outsl
push
dec
push
fdivr
jge
push
mov
or
lea
out
dec
mov
fadd
mov
in
jle
jae
rep
sar
xor
insb
pushf
push
negb
bound
jo
add
xchg
imul
jb
lods
or
xchg
pop
and
insl
mulb
inc
push
pop
das
push
or
xor
xor
adc
pop
xchg
cmp
test
das
fimuls
jp
shrl
mulb
or
std
inc
xchg
es
loopne
and
sbbl
sbb
add
jae
and
jb
aam
insl
outsl
cli
sub
bound
xor
lds
or
ret
test
popa
jns
mov
pop
lock
sub
lcall
mov
cmpsl
scas
pop
push
in
lahf
mov
sbb
dec
xchg
adc
push
fldenv
out
je
push
shl
pop
test
adc
lret
fidivl
es
mov
cmp
nop
pop
scas
jae
jp
sbb
or
lcall
and
out
cltd
and
shrb
sbb
cld
cmpsb
std
arpl
jb
test
xchg
jb
cmp
jae
nop
test
jns
mov
insl
dec
dec
std
xchg
xor
jnp
icebp
jle
int3
ja
js
arpl
mov
mov
gs
push
loope
movsb
lock
in
sbb
lahf
jecxz
pop
test
sbb
pop
push
outsl
out
out
xor
insb
scas
jae
dec
pop
push
mov
ja
fcomp
adc
mov
pop
add
xchg
rcll
loopne
and
movsl
lock
push
xchg
add
scas
fisttpl
mov
jns
sub
fwait
push
fsubs
pop
fldenv
push
cmp
xor
add
inc
bound
int3
aam
js
les
dec
das
dec
movsl
mov
jne
mov
inc
lcall
sub
loope
stos
fwait
mov
ljmp
mov
insb
ss
dec
cmp
jae
xor
inc
cmp
dec
mov
bound
jae
dec
shll
adc
out
pop
sarb
outsb
xor
orb
jns
or
adc
es
sbb
movsb
repz
bound
dec
rcrl
xor
inc
mov
stos
pop
out
inc
mov
fs
ds
and
pop
lahf
push
mov
clc
iret
pop
pop
and
xchg
ljmp
cmp
xor
sub
or
popa
popf
sbb
jae
push
cmp
pop
mov
pop
pop
lcall
xor
xlat
fxch
scas
jno
mov
shlb
add
popa
addb
and
scas
in
out
mov
popf
jg
flds
or
cmp
pop
jecxz
jb
jle
ds
mov
outsl
movsl
shll
dec
cmp
ljmp
pop
mov
mov
scas
stc
cmp
jle
mov
lods
cmp
jne
push
cmp
popf
jg
lea
jno
dec
cmpsl
ret
inc
push
pop
xchg
jno
pop
nop
pop
pop
sti
inc
and
adc
jns
test
int
sbb
mov
mov
push
lahf
lods
jo
or
push
pop
push
ficomps
mov
mov
gs
or
es
mov
mov
in
pop
popf
or
outsb
push
xor
or
jmp
movsb
es
pop
xor
shrb
sub
jns
scas
daa
in
sbb
pop
jmp
test
mov
es
mov
mov
pop
lods
xor
inc
dec
jge
cmp
sub
frstor
and
or
test
push
int3
pop
push
addr16
lea
shrl
sub
mov
int3
cmpsb
cmpb
es
in
jo
out
aaa
push
push
pop
adc
lods
pusha
jnp
push
orb
jg
push
in
sarl
scas
push
aam
jns
cwtl
subl
push
pushf
mov
xor
lds
mov
sub
inc
dec
cli
arpl
inc
add
jb,pt
push
fwait
int
push
add
and
push
aas
dec
test
loop
popa
push
repz
jae
xchg
leave
test
imul
out
dec
nop
lcall
or
arpl
sti
push
lahf
xor
xchg
jo
int3
mov
incl
movsb
mov
shrl
outsb
test
xor
push
imul
jae
movsl
jo
into
fucomp
cmp
pusha
push
xor
rol
add
jg
test
push
jl
inc
inc
sub
jo
sbb
arpl
imul
psrld
rcr
jp
sti
push
jnp
xchg
shll
les
lret
xchg
shl
cli
and
pop
sbb
sub
shrb
movsb
jb
imul
arpl
or
push
inc
addb
sub
mov
push
ds
aaa
pusha
cld
lret
es
adc
jb
cmc
add
pop
hlt
jb
or
push
dec
jp
xchg
andb
pop
xor
push
int
into
out
sub
repz
xchg
jns
pslld
mov
sbb
in
outsb
jo
int3
push
xorb
dec
in
inc
lret
in
test
xchg
mov
rcll
je
xor
xor
jmp
int
mov
jle
inc
xchg
loope
jmp
push
arpl
xchg
outsb
ja
inc
sub
jp
jo
mov
xor
jmp
cmp
hlt
jo
push
cltd
ret
roll
pminsw
mov
mov
orl
gs
push
mov
loope
cmp
fsubs
pop
out
jo
xlat
adc
ret
faddl
adc
xchg
adc
inc
push
xor
sbb
das
sub
cmpsl
aas
xchg
orb
fcomip
push
test
and
ljmp
mov
lods
mov
andb
roll
jmp
sub
cmp
cmp
cs
out
in
mov
jo
fs
and
cmc
jo
sbb
mov
adcl
popa
jo
arpl
adc
insl
sub
nop
bound
jle
inc
test
adc
aad
mov
jp
test
inc
mov
cmpl
movl
int
enter
ret
xor
jo
lea
xor
push
insl
test
jbe
jge
sub
andb
jmp
fnsave
nop
mov
addb
cmp
je
dec
int
mov
jo
popl
pushf
int
nop
jge
mov
sub
stos
mov
in
js
sti
lods
std
xor
fstps
lods
inc
loope
lret
jo
cs
sbb
loop
jo
or
add
jo
div
lods
dec
rcll
jns
js
and
sbb
mov
imul
ficompl
repnz
cmp
xchg
lahf
sub
in
mov
popa
aaa
jmp
push
frstor
repnz
in
mov
icebp
jg
das
xor
jecxz
jo
push
outsb
push
ljmp
and
sub
jne
or
imul
push
inc
cmp
jp
xchg
sbb
testb
into
mov
lret
int3
call
add
fldt
mov
mov
inc
negb
or
jo
jb
xchg
cmp
out
pop
mov
cltd
aad
fs
popa
push
in
jb
lods
imul
cwtl
in
push
push
pop
js
fisubrl
cmp
ficoms
stos
iret
je
divl
xorl
xor
jbe
fidivl
adc
adc
jnp
ja
push
and
xchg
rorb
into
shrl
mov
and
mov
xlat
and
adc
sbb
adc
sbb
mov
ficoms
in
add
insl
lahf
nop
jbe
out
and
lods
jmp
or
faddl
jo
push
pop
fldcw
call
mov
xor
loopne
lcall
mov
outsb
jmp
jo
jae
cmp
xchg
mov
cs
out
mov
in
adc
xorb
pop
add
pop
loopne
xchg
inc
stos
lock
mov
xor
cmpsb
shrl
fadds
jae
shrl
inc
insb
shl
lcall
xor
rol
pop
push
gs
sbb
dec
inc
fisttpll
je
mov
or
xorb
mov
and
dec
orb
xchg
mov
pop
jbe
stos
jo
mov
xchg
ret
cwtl
mov
jo
sub
jl
or
jge
enter
jo
cmp
jecxz
ljmp
add
insb
inc
or
cmp
mov
subl
clc
sub
add
into
push
ja
lret
push
cli
cmpsb
mov
lret
add
jo
ss
in
scas
mov
xchg
repz
nop
aam
lahf
call
pop
dec
iret
mov
aaa
adc
lret
fisubs
jmp
bound
jge
push
aad
stos
mov
cmpb
jo
lods
dec
bound
push
fistl
jo
mov
cmp
push
add
add
lahf
ret
push
stos
jmp
pop
aas
mov
inc
rcrb
cmpb
mov
mov
in
sub
xor
lcall
mov
mov
sbb
fwait
xchg
ret
cwtl
lret
cli
mov
js
jo
data16
fisubs
add
add
mul
adcb
mov
add
jecxz
imul
mov
in
mov
mov
jg
jnp
cli
jmp
add
adc
cmpsb
jo
pop
jbe
cmpsl
jnp
lea
xor
jnp
sahf
int3
jo
addr16
push
adc
out
jo
movsl
dec
adc
mov
jo
adc
push
fs
xor
xorb
clc
push
imul
ds
aas
xor
jo
rclb
addb
xor
call
sbb
lahf
pop
mov
adc
mov
xchg
cld
sub
rcr
shlb
jae
inc
inc
ret
in
adcl
mov
out
cmp
nop
jae
rorb
cltd
divl
data16
das
fldl
je
jo
pop
pop
insl
xchg
test
push
xchg
mov
and
testb
dec
jo
jge
xor
adc
nop
out
cmp
or
jb
push
adc
in
jp
cmpsb
or
mov
xor
push
into
in
lcall
leave
jns
jb
mov
adc
out
movsl
adc
inc
jns
xor
imul
subb
leave
mov
sahf
xchg
fists
jae
leave
sar
xchg
out
dec
mov
jo
mov
jae
jns
jo
clc
sbb
mov
adc
out
test
aam
out
jle
push
movsl
mov
nop
imul
jno
js
setle
push
repz
mov
je
inc
xchg
test
stc
mov
ja
test
ds
or
add
fmulp
mov
mov
idivb
dec
loop
out
sbb
sbb
dec
insb
int
out
push
jo
adc
es
push
popa
and
push
pop
mov
les
pusha
jns
jb
mov
adc
mov
dec
xchg
jo
lock
cli
dec
pushf
pop
mov
test
xor
push
enter
mov
movsl
out
lock
ljmp
push
lahf
sub
das
test
in
xchg
imul
jb
outsb
pop
aam
mov
jne
fldenv
inc
das
mov
inc
cmp
xchg
add
icebp
sbb
jle
cli
push
in
enter
fnstcw
std
jae
popa
xor
shlb
fldl
mov
leave
enter
fstp
outsb
fmul
hlt
xchg
sbb
frstor
xor
hlt
sbb
lds
add
jbe
xchg
mov
cmp
arpl
push
lcall
out
add
dec
das
rcrb
andl
mov
in
pusha
and
lcall
pushf
in
rolb
scas
ds
inc
sub
mulb
movb
or
xor
xor
enter
jo
xor
popa
dec
jo
dec
repz
pushf
sti
inc
jo
xchg
xor
mov
sbb
mov
enter
adc
nop
and
and
loopne
test
mov
insl
in
jo
aad
bound
cld
mov
inc
push
pop
dec
jo
push
push
xlat
jae
add
jo
push
mov
or
jo
stos
sti
or
out
xchg
jo
jns
mov
xchg
or
sub
push
xlat
adc
arpl
loope
xor
outsb
out
sbb
jp
push
daa
clc
scas
aad
nop
push
insb
js
or
cmpsl
inc
push
and
in
jmp
adc
mov
faddp
icebp
daa
pop
test
addr16
push
enter
lret
in
and
lret
call
popf
stos
mov
jo
jbe
shrb
adc
popa
jno
mov
and
aas
cli
cmp
and
inc
lods
jo
aam
in
fprem
xor
jo
add
add
adc
mov
jo
movl
inc
push
subl
pop
or
jo
mov
lock
add
in
subb
bound
test
push
cmpsb
or
ja
and
push
call
movsl
add
nop
gs
push
sbb
push
lods
fdivs
call
xchg
or
mov
jmp
int
mov
pop
xor
in
sahf
in
sub
sbb
cmp
int
insl
push
jo
sbb
scas
push
xor
nop
out
test
inc
sbb
cmpsb
data16
dec
xor
outsb
or
arpl
es
inc
inc
inc
faddl
xchg
icebp
jge
xchg
jo
jae
xorl
sub
push
push
push
loope
add
mov
out
dec
into
mov
push
fwait
xchg
sbb
jae
out
cmpsb
push
pop
mov
mov
in
sbb
xor
subl
orl
jnp
mov
out
jae
xchg
out
int3
push
roll
mov
and
add
loop
add
xchg
jp
rolb
js
lea
jnp
out
mov
push
fwait
mov
push
mov
movsb
loop
cmpsl
jmp
subl
cmpsb
mov
jae
gs
fucomip
cmp
addr16
bound
loopne
cmp
add
inc
mov
sbb
stos
inc
jo
arpl
mov
jae
out
push
stos
data16
sti
pushl
jns
dec
rolb
lcall
mov
inc
cwtl
dec
dec
push
or
xor
xchg
lods
lock
fdivs
inc
stc
pusha
jae
in
jle
mov
dec
call
mov
out
xor
repz
lods
js
pop
inc
pop
cmp
nop
movsb
pop
push
in
test
push
es
adc
xchg
cmp
jo
inc
sub
push
jo
mov
divl
xor
mov
ds
jns
les
jo
sbb
testb
lds
cli
pop
jnp
jo
cmp
lret
jo
inc
adc
jo
in
repnz
or
push
jp
adc
jecxz
negb
jmp
xorl
add
sbb
jo
mov
das
adc
adcb
fwait
int
pop
sub
ret
rorl
xchg
mov
mov
rcrb
jo
dec
lret
shlb
sbb
mov
mov
cs
xor
test
mov
cmp
cmovg
jp
scas
jmp
leave
adc
cmpsb
fs
scas
sbb
rcl
mov
jo
sub
cmpsb
inc
push
jo
cs
das
pushl
jge
jo
add
adcb
mov
jo
xchg
arpl
inc
pop
jp
ret
jne
fwait
sub
dec
testl
mov
jbe
sar
insb
scas
cmp
or
test
icebp
fdivl
in
mov
cmp
push
sarb
mov
dec
cmpsb
or
pop
xchg
dec
jno
mov
jo
loope
in
sbb
cwtl
jo
cmp
or
loope
call
jo
dec
inc
lea
mov
xchg
xchg
stos
clc
jo
dec
js
push
mov
jmp
out
test
sub
add
jnp
adcl
inc
mov
repz
ret
mov
negl
sub
xchg
cmp
in
and
pop
xorl
pop
push
pshufw
aaa
rcl
stos
mov
int
push
pop
sbbb
inc
jno
test
stc
adc
mov
repnz
add
mov
imul
popf
call
jge
inc
jnp
adc
push
ficompl
mov
inc
or
cmc
scas
adc
dec
mov
sarb
pop
rcll
bound
inc
das
mov
jl
jo
leave
lret
fmuls
push
ret
jo
std
iret
xor
inc
sahf
push
xchg
mov
sub
in
xor
mov
push
mov
sub
jnp
jns
repz
jo
sub
mov
in
xor
xchg
dec
sbbl
jo
roll
mov
sbb
cmp
cmpsl
and
jo
cmp
jbe
jo
stc
stos
out
mov
jp
xchg
push
lret
xchg
add
jo
and
in
and
jg
and
add
or
or
mov
outsl
jo
lcall
int
cli
call
aam
xchg
cmc
jo
lahf
sub
fmuls
xchg
jo
push
push
mov
xchg
stos
mov
mov
shrl
ret
movsl
or
outsb
leave
cmp
outsl
insb
fnstcw
divb
lods
shrb
push
jmp
cld
hlt
notb
aam
in
dec
mov
fldcw
mov
in
fsubrs
xor
sub
test
cmp
sbb
addb
mov
in
cmpsb
pop
push
and
jae
adc
push
xor
rolb
aaa
in
nop
mov
pop
dec
aad
cmp
jo
jecxz
push
std
mov
jo
add
xchg
adcb
push
jo
test
jo
jbe
cmpl
jmp
mov
mov
cs
jbe
adc
sar
cmpsb
loopne
add
jo
sub
cmp
mov
mov
inc
jns
push
loopw
mov
daa
and
adc
add
jnp
jo
pop
inc
call
jo
stos
cmp
inc
repnz
jo
scas
jb
adc
int
xlat
jle
dec
adc
pop
jp,pn
or
lret
xchg
sub
mov
jns
gs
jo
das
push
pop
cmpl
xadd
dec
mov
popa
xchg
nop
add
gs
inc
mov
sti
mov
mov
jo
movsb
test
mov
jne
mov
call
mov
xor
push
cs
mov
sbb
lods
sub
addr16
dec
push
test
cmp
je
repz
shrb
pusha
in
jg
shrb
out
hlt
cmp
sub
dec
mov
and
and
mov
ja
cmpsb
add
inc
shlb
sbb
mov
mov
push
pusha
mov
repz
mov
setl
pop
cmpsb
inc
xor
jle
lods
push
or
loop
adc
in
xor
dec
std
sete
push
shr
jae
rorb
arpl
fistps
adc
sub
in
inc
add
jle
stos
jb
pusha
adc
int3
inc
mov
sbb
mov
rcrb
mov
cld
rcr
xor
sbb
add
mov
jo
push
lahf
pop
adc
sub
xorl
dec
jne
movl
das
js
add
aaa
push
das
std
inc
cmc
mov
ljmp
xor
out
int
fs
mov
sub
fwait
ja
mov
push
xchg
push
jge
xchg
icebp
push
inc
sub
enter
cmp
fsub
aad
andl
jnp
lock
sbb
dec
mov
loopne
ja
loope
mov
pop
into
pusha
jmp
scas
je
nop
popf
jo
jbe
mov
adc
loopne
test
jge,pt
cmpsl
sbb
push
stc
fcmovnb
or
or
sub
jmp
xor
js
test
jo
mov
push
xor
jmp
subl
sbb
push
fs
out
jns
sbb
mov
sub
fdivp
ljmp
fdivs
aas
xchg
jne
mov
dec
mov
insb
dec
pop
and
jno
lret
mov
loopne
push
fsubrs
int3
push
push
jo
iret
mov
fsubr
jns
imul
icebp
jo
nop
je
daa
out
cmp
test
lahf
xor
or
fdivl
xor
sbb
jmp
mov
orb
jnp
sahf
mov
leave
mov
fnsave
xor
out
jp
jo
in
push
inc
gs
cmp
pop
shll
pushl
pop
lea
jo
lcall
push
or
cmp
cltd
fdivl
adc
push
xchg
gs
fsubs
loop
push
cld
jns
pusha
add
js
jo
cli
pop
xchg
fcoml
lret
pcmpgtd
stos
inc
repz
rcrb
sbb
ljmp
dec
xchg
je
call
test
xor
movsb
pop
fs
clc
cwtl
nop
push
push
adc
nop
flds
pusha
dec
scas
jo
cmp
outsb
jns
movsl
xchg
push
lcall
jno
lret
jo
push
xchg
sub
push
dec
mov
sbb
sti
sahf
jo
pop
das
and
add
lods
aas
sub
imul
lcall
jo
adc
jo
arpl
xchg
in
mov
add
int3
push
xor
jle
imul
stos
ja
sbb
mov
jnp
imul
mov
xchg
mov
fdivl
mov
loope
sarb
pop
shll
orb
mov
jo
ljmp
jo
cmpsb
add
cltd
sub
mov
cmp
xchg
push
mov
dec
js
dec
or
dec
insl
sub
call
mov
jo
adc
inc
montmul
cmpsb
add
icebp
mov
push
pop
inc
mov
stc
xor
jo
pop
decb
cmp
in
pop
dec
sbb
inc
sbb
sub
inc
gs
and
outsb
hlt
lods
cmpsb
mov
mov
jge
leave
cmp
pop
ret
cmc
inc
mov
sahf
jo
dec
int
dec
mov
add
shrl
jne
movsl
scas
mov
mov
push
ret
fdiv
fidivrl
mov
scas
xor
sbb
fisttps
adc
stc
mov
push
lahf
test
xor
jmp
lods
into
mov
aas
xchg
ret
push
jo
jno
push
sub
ljmp
in
fstl
outsl
in
mov
jo
mov
mov
unpcklps
add
adcl
mov
cli
adc
lret
dec
jo
inc
and
jo
mov
jecxz
daa
sarb
hlt
cmp
pop
popf
sbb
xchg
lahf
inc
daa
adc
idivb
mov
imul
shlb
jge
xchg
test
and
mov
arpl
add
out
pop
xchg
add
jo
or
mov
mov
cld
test
jbe
push
push
xchg
js
stos
jo
jmp
sub
mov
jo
adc
mov
mov
push
dec
xchg
mov
xor
xchg
andb
lret
cmpsl
ja
jo
in
fdivrs
jecxz
mov
pop
fdivl
push
xchg
test
sbb
push
or
insb
pop
cmp
or
jp
in
xchg
jl
push
cltd
aad
or
push
ljmp
fbstp
jg
or
fimuls
push
xorb
movsb
push
mov
xchg
mov
sub
clc
dec
sti
mov
fs
or
movsl
mov
cmpb
jns
pop
and
sub
jb
jo
aad
lea
or
and
pop
imul
es
das
mov
ror
mov
push
pop
out
jns
in
jo
out
or
pushf
dec
xchg
mov
mov
movsl
inc
subb
pusha
jo
out
fwait
leave
pop
ljmp
pop
or
jae
lcall
mov
loope
in
xor
push
js
ret
sbb
sti
bound
pop
adc
or
add
jbe
ret
mov
les
inc
nop
leave
lock
sbb
movsl
cwtl
jp
jle
enter
jae
mov
dec
adc
lods
or
cmp
jle
pop
sub
push
mov
xor
add
lods
or
inc
aad
jno
jecxz
pushf
xchg
int
xchg
mov
mov
jge
fimuls
push
sub
cmc
mov
iret
into
jns
sbb
std
jl
jp
inc
add
shll
ret
pop
jns
bound
jo
outsb
ljmp
add
push
or
fcomip
imul
adc
hlt
sub
fadd
nop
or
rcr
pushf
pop
pop
insb
sarb
jns
jo
xor
dec
jne
xorl
sub
dec
add
ret
push
adc
jo
mov
sbb
xor
pushl
xchg
mov
dec
jo
fs
ret
cmpsl
jbe
jo
popa
ficoms
aas
es
int3
lods
mov
stc
xchg
xor
jo,pt
cmp
jecxz
jns
push
clc
aas
out
stos
iret
xlat
or
in
mov
adc
fdivr
aam
cmp
xchg
sub
cmp
or
imul
hlt
jae
or
sahf
outsb
fs
mov
lods
push
adc
in
cltd
stc
jo
out
jg
sub
jo
mov
mov
jo
push
mov
push
aam
nop
xchg
packssdw
add
mov
and
pop
aaa
lods
adc
and
or
pushf
mov
mov
jo
jmp
aad
ret
jo
push
dec
int3
fisubs
add
mov
outsb
ret
mov
lods
sub
jno
xorb
jnp
les
dec
adc
enter
pusha
cld
jo
or
popa
repz
jo
xchg
pop
div
fistpll
out
ret
sub
icebp
ja
xchg
pop
dec
push
or
fdivr
ds
sub
sbb
jo
inc
or
test
movsl
push
jle
mov
mov
out
jge
fwait
lcall
js
mov
sbb
fdivl
jno
testb
mulb
jo
out
test
nop
pop
inc
inc
std
ret
sub
jo
jns
fs
ja
shlb
dec
fsts
clc
jnp
jl
jo
push
lcall
shr
pop
aaa
jo
in
movsb
adc
mov
andl
push
es
cld
or
inc
sbb
fsubs
push
inc
mov
pop
mov
jb
mov
addr16
dec
dec
sub
imul
jo
xor
push
and
jo
mov
gs
jecxz
xchg
adcl
xchg
jge
mov
inc
pop
shll
int
fwait
dec
jo
sbb
out
out
pop
gs
jo
pop
stos
arpl
xchg
sub
scas
insl
rcl
add
xor
mov
enter
add
sbb
lods
xchg
shrl
and
cwtl
shrb
test
scas
add
xor
cmp
mov
pop
shl
push
into
jno
fwait
cld
cld
call
or
sar
js
cmc
fistpll
mov
push
inc
mov
mov
test
pop
jo
fcoml
xor
js
pushf
fs
roll
int3
adc
mov
shlb
push
dec
out
cmp
mov
pop
sahf
pusha
inc
sub
or
pop
in
lock
into
xlat
lret
psubd
cmp
jno
cmp
jne
xchg
fadds
loopne
mov
push
and
pusha
xchg
jo
ret
arpl
sub
in
inc
mov
in
fnstcw
inc
popf
in
jle
xchg
push
push
mov
cld
adc
sub
cmp
add
pop
nop
push
cltd
imul
dec
test
shlb
mov
insl
fistpll
jle
arpl
push
clc
mov
cmpsb
sbb
or
mov
stos
dec
mov
leave
scas
icebp
mov
mov
outsb
aad
jge
test
roll
enter
cmp
shrl
subl
pushf
pop
push
pop
jns
clc
pop
loope
lret
cld
add
iret
and
fadd
mov
fs
xchg
pop
mov
fdiv
cltd
inc
adc
mov
or
lods
adc
dec
mov
ret
aad
sbbl
cli
int3
out
rorl
call
call
imul
mov
loopne
mov
push
jg
xor
cli
push
out
add
or
in
fwait
iret
andb
cltd
push
ja
push
push
push
jae
mov
lods
mov
jle
aad
xor
jle
imul
stc
icebp
xor
jns
adc
fwait
lock
push
jb
sbb
sbb
mov
cmp
nop
subb
jbe
jae
xchg
fcmovnb
pushf
pop
sbb
movsb
fdivrl
adc
xchg
xchg
jle
ljmp
bound
add
adc
mov
test
out
sbb
xchg
insl
mov
push
push
jp
inc
out
dec
xchg
rorl
mov
test
int
xchg
fs
pop
push
jge
push
mov
js
adc
test
sti
in
push
rol
fsubrs
xor
cmp
xor
mov
xor
mov
mov
pop
xchg
clc
lret
inc
xchg
imulb
outsb
cmpsl
filds
lds
jb
out
push
xchg
movzbl
jle
jmp
mov
jbe
xchg
lahf
nop
pop
lret
arpl
push
pop
sbb
jo
push
and
push
mov
jo
and
cld
jo
inc
cli
fcmove
jb
pop
jl
lods
sbb
cld
sahf
mov
hlt
jb
pmulhuw
loop
pop
pop
mov
subb
sub
xor
call
push
imul
daa
dec
inc
dec
sub
inc
inc
into
xor
adc
test
ret
pop
sahf
stos
inc
es
mov
push
out
rcl
lock
jl
ja
push
addl
fs
mov
jl
rorb
lea
decb
loope
in
movsb
call
fisubl
jo
add
sub
ljmp
pop
dec
and
jo
out
jno
stc
push
test
mov
imul
aaa
daa
shlb
dec
fwait
aam
cmp
inc
ja
cwtl
add
adc
test
ds
aad
push
insb
pusha
inc
cmp
popa
jno
sbb
or
negl
je
loope
fsts
mov
sub
and
jo
jne
aas
xchg
dec
xchg
mov
sbb
fnstsw
pop
dec
prefetch
add
or
popa
adc
push
lds
xchg
js
add
jo
or
outsb
mov
push
jnp
inc
xchg
xorb
jecxz
sub
call
pop
mov
jo
fisubl
out
jp
shlb
ffree
pop
es
je
jo
add
mov
inc
adcl
sub
jo
cmpsb
vpaddd
int3
cwtl
jo
lahf
push
lods
cmp
movsl
leave
orps
rorl
xchg
mov
loopne
jne
mov
sahf
jbe
xor
stos
or
scas
vphaddubd
popf
adc
sbb
jle
add
jl
cmp
je
jo
lock
daa
inc
adc
jo
rolb
nop
stos
shrb
xchg
leave
jo
add
mov
repnz
fidivl
test
mov
push
jo
jbe
inc
rorl
mov
nopl
addr16
jb
jmp
mov
pop
hlt
cmp
outsb
push
pop
mov
jo
and
xchg
or
js
push
push
outsl
stos
hlt
fs
mov
push
jnp
dec
push
mov
jo
cmpsb
and
adc
pop
xor
xchg
in
cmp
js
xchg
jae
adc
aaa
pop
xor
addl
or
imul
bnd
insb
lcall
js
lds
nop
xor
sarb
es
jo
dec
cwtl
leave
lods
jo
or
xchg
repnz
pop
or
scas
jo
cmp
negb
inc
dec
xor
dec
mov
loope
orb
movsl
adc
sbb
pop
add
or
push
xchg
js
je
das
ret
mov
fdivr
sbb
or
cmp
fstl
jo
nop
inc
aam
out
dec
in
sbb
dec
mov
je
aad
sbb
jns
cmp
addl
cmp
icebp
dec
adc
cmpsl
xor
in
test
movsl
call
daa
or
xor
hlt
push
mov
jno
xor
ds
mov
xchg
out
outsb
stos
gs
jp
pop
sub
jae
and
xchg
inc
cltd
stos
mov
mov
inc
inc
subb
dec
push
les
mov
pop
mov
sbb
js
mov
sysenter
push
jo
push
push
xor
jbe
inc
mov
pop
pop
jo
add
mov
inc
mov
jmp
xchg
jl
dec
mov
jo
das
push
sbb
cld
jo
repz
inc
sbb
dec
jp
cs
daa
and
shll
mov
cmp
push
mov
sbb
testb
imul
and
sbb
aad
dec
xchg
repz
fisubl
lret
pop
pop
call
cmp
fwait
dec
out
sbb
scas
xlat
jno
out
shld
ja
js
out
xacquire
push
and
push
jo
popfw
sbb
add
into
lds
ret
xor
mov
fidivl
iret
jmp
jnp
pushf
out
jo
loop
lahf
dec
adc
js
in
into
in
jp
and
sub
nop
lods
subl
movsl
jo
xor
dec
push
dec
pop
inc
dec
inc
jo
pop
mov
jl
jl
ljmp
inc
ret
andb
or
std
mov
push
push
cmc
fs
mov
repz
lahf
cmp
add
sbb
sbb
jo
adc
mov
mov
movsb
add
mov
out
jo
not
or
mov
inc
sbb
insb
jo
sahf
cmp
jo
xor
and
popa
xchg
push
roll
mov
lock
or
loop
jo
sbb
inc
cld
jo
hlt
jle
jecxz
adc
lods
loopne
jo
cmpsl
pop
rcrb
push
popa
movsl
imul
notb
jo
ss
xchg
sbb
pop
sahf
ljmp
jo
ja
orb
push
and
cmpsb
hlt
jne
sbb
icebp
dec
fisttpl
jo
rcrb
test
push
bnd
arpl
inc
scas
insl
xchg
dec
ja
shll
mov
into
das
test
jo
mov
lods
dec
mov
movsb
mov
xor
stos
dec
lret
jo
xchg
inc
enter
sbb
sub
add
mov
push
sbb
push
leave
je
xor
and
call
mov
or
fwait
push
iret
and
jo
ds
inc
dec
outsb
lcall
or
jae
lods
cs
gs
hlt
push
fsubrl
ret
movsl
nop
jge
adc
xchg
push
jb
rorl
imul
imul
notl
jb
jle
emms
mov
inc
add
mov
sbb
pop
pop
push
jecxz
mov
cmpsb
stos
es
jne
push
cmp
mov
mov
ficompl
xor
int3
sbb
int3
mov
cwtl
mov
ss
mov
lret
insl
sub
mov
jbe
xorb
mov
nop
lods
mov
aad
add
in
jo
lcall
or
or
mov
push
aam
je
orl
negl
and
call
fdivrl
lret
fcompp
mov
bound
xchg
sub
mov
pop
loop
jo
mov
mov
out
mov
adc
push
add
xor
and
jo
and
jo
out
faddp
xor
jo
fdivr
cmp
pop
push
add
or
jo
dec
es
push
negb
enter
cmc
fsubp
test
ret
push
js
arpl
nop
cmpsb
aam
pop
lret
idivb
jo
fidivl
push
jo
mov
xchg
sar
jbe
fmuls
dec
cli
sub
jl
add
xlat
pushl
into
lcall
mull
in
pop
sub
jbe
jne
lock
sbbb
jo
jg
add
push
lea
cli
adc
movzwl
aas
sahf
popf
out
dec
or
addb
sbb
fisttpl
imul
push
enter
cmp
jo
pop
fnstcw
or
xor
pop
push
or
push
jo
mov
or
imul
xor
inc
std
mov
lcall
mov
js
add
popl
dec
pop
push
addr16
cmp
fs
jo
pusha
bound
mov
outsl
mov
call
sbbb
fs
es
inc
int
jb
arpl
sub
pop
mov
out
hlt
jo
aad
movsb
outsb
aam
inc
in
subl
sub
js
mov
jmp
je
loopne
bswap
sub
sbb
andb
inc
stos
repz
push
cli
inc
imulb
movsl
mov
fstps
rcll
mov
jno
outsl
push
ret
push
ror
clc
cmp
push
xchg
aaa
icebp
hlt
adc
push
jo
mov
or
sbb
push
insl
mov
cmpsb
pushf
pop
in
mov
cmp
cmp
inc
pop
sbb
loop
xor
icebp
clc
push
jp
sbb
push
jae
add
int
add
adc
cmp
mov
add
popa
or
jl
sbb
in
frstor
lret
jl
pop
mov
dec
and
movsb
addl
inc
add
adc
mov
int3
jge
sarl
push
sub
mov
insb
std
push
mov
fnstsw
mov
pusha
jmp
mov
rorb
push
mov
dec
rcrb
cmpsb
mov
lahf
sub
mov
les
decl
add
lods
outsl
lods
les
rcrb
add
sub
stos
jg
lret
jo
lods
adc
out
sahf
mov
sti
push
je
pop
pushf
cmp
popa
xor
jbe
mov
into
ficoml
nop
fs
outsb
jns
jmp
pop
pop
cltd
jmp
addr16
cmpsb
cmp
mov
jecxz
jns
mov
mov
int
lock
xor
lods
jo
fsubr
out
pop
sahf
mov
stos
push
dec
rcl
addr16
xor
nop
or
and
cwtl
imul
jae
call
xchg
js
insl
fbstp
cs
sbb
jae
adc
rclb
add
clc
data16
push
mov
or
sahf
dec
jl
sbb
test
push
adc
fs
arpl
pop
fnstsw
adc
push
aad
sbb
sbb
mov
dec
movb
sub
dec
push
prefetch
push
sbb
aad
mov
jae
aad
out
aam
in
xchg
scas
mov
mov
das
ja
scas
dec
test
mov
aaa
and
jnp
cmp
jae
ret
sub
out
or
xor
jp
sbb
aas
jmp
push
in
flds
stc
jle
cmp
jno
and
stos
jmp
notl
sbb
dec
xorb
pop
adc
arpl
test
lds
inc
push
icebp
sbb
outsl
dec
shll
xor
push
lock
xchg
int3
in
mov
push
sbb
clc
pop
faddp
sbb
push
sub
xor
scas
and
shll
dec
mov
jae
rep
jo
arpl
lcall
fs
adc
jb
add
xor
or
shlb
movsb
ljmp
inc
in
inc
ds
adc
cmpsl
mov
enter
sub
in
je
sti
test
inc
insl
stos
test
imul
divl
pushf
in
jmp
std
fwait
aad
ljmp
imul
or
push
out
adc
xorb
push
mov
decl
cmc
aam
jle
jl
mov
repnz
mov
cmp
add
dec
pop
and
arpl
cmc
add
repz
push
sahf
cmpsb
cwtl
sub
sbb
out
blcs
arpl
xchg
rorl
inc
xor
xchg
lahf
mov
bound
xlat
adc
push
jle
push
inc
ljmp
jb
fbstp
inc
shlb
call
pop
loopne
push
inc
sub
jnp
xor
mov
inc
or
adc
jno
das
sbb
pop
mov
sub
out
stos
push
xor
lds
inc
scas
ret
movntq
pop
fldcw
mov
xchg
mov
sbbl
lds
clc
shll
push
sbb
dec
sti
repz
jl
outsb
push
fdivrp
nop
sbb
jns
test
xor
mov
in
mov
js
lods
adc
add
xchg
js
out
push
out
sarb
mov
sub
out
xor
in
cwtd
xchg
jl
sbb
jae
leave
mov
and
or
and
push
add
mov
xchg
out
arpl
ss
adc
mov
cmp
jae
dec
test
fs
dec
pop
sbbb
add
pop
pop
rcrb
cmp
mov
fdivrl
call
jnp
fcomps
sub
pushf
jae
fmul
test
cmpb
enter
jle
jmp
mov
pop
jns
sti
push
popa
jg
outsl
cmp
fs
out
push
pop
scas
push
jle
or
dec
cmp
mov
pusha
jae
inc
xchg
pop
cmpsb
mov
out
stc
scas
std
out
outsl
test
jl
subps
std
shll
dec
adc
sub
scas
insl
fnstenv
pop
lahf
pop
push
ss
jge
sbb
xor
daa
inc
mov
add
mov
pop
nop
pop
test
cld
pop
sub
mov
jmp
inc
out
imul
jp
mov
ror
outsl
push
sbb
push
lds
sub
negb
mov
inc
outsb
dec
int3
xchg
stos
pop
jb
add
imul
inc
push
jo
fs
mov
xchg
arpl
dec
int3
mov
pushaw
int
pop
sub
rcrb
adc
hlt
gs
add
ret
xor
push
xor
mov
lods
ljmp
shlb
out
inc
test
out
xchg
jae
test
loope
fs
js
inc
daa
shrl
jle
scas
shlb
jg
insl
movsl
lcall
out
push
repnz
fnstenv
dec
pop
data16
test
jae
arpl
pop
cmp
insw
pop
cmpsl
mov
cmp
and
jns
dec
and
imul
pop
das
mov
movsb
mov
je
out
pop
inc
mov
or
loop
inc
popf
sbb
into
jl
and
repnz
lock
fistl
mov
sbb
pop
jmp
push
sub
sysenter
ror
insb
nop
sub
cli
cli
dec
outsb
mov
shrb
shlb
push
outsl
xlat
mov
mov
push
mov
aad
mov
add
dec
sub
nop
dec
inc
jns
fadds
imul
loope
notl
cmpsb
scas
lods
add
daa
pusha
or
and
push
arpl
adc
lcall
xor
xor
xlat
out
pop
ja
rol
push
enter
orb
push
shr
gs
fcmove
adc
dec
lods
jae
xchg
movsl
dec
sbb
movsb
pop
faddl
jp
adc
mov
xchg
adc
out
mov
inc
sub
nop
hlt
ds
int3
jbe
in
xchg
data16
out
sub
xchg
gs
outsl
sbb
mov
test
push
pop
leave
nopl
mov
outsl
cmpsb
std
in
xchg
test
std
shlb
aas
add
xchg
scas
inc
outsl
jne
and
or
arpl
ret
fistps
scas
jae
imul
sbb
out
push
insb
sbb
ret
sbb
mov
in
sub
aad
aas
stos
xor
loop
and
cwtl
out
sahf
mov
lds
es
push
scas
je
sarl
pop
lock
out
fst
cld
and
push
movaps
mov
arpl
jbe
cwtl
test
adc
enter
daa
add
cmpsl
and
mov
ldmxcsr
dec
fs
sbb
sub
mov
repnz
xchg
test
sbb
js
jbe
sub
jb
cmp
iret
inc
movsl
outsl
lock
jae
sbb
and
pop
push
fs
push
inc
fwait
inc
ljmp
mov
das
or
pop
jns
daa
daa
inc
lds
loop
xchg
jecxz
insb
pusha
into
mov
cmp
pop
out
popa
rcll
dec
movsl
inc
repz
mov
out
jmp
arpl
popa
stc
imul
outsl
fidivs
imul
out
jmp
inc
out
cmp
pop
das
call
cwtl
in
cs
lock
icebp
test
jne
or
cmpsb
xchg
sahf
call
xchg
mov
push
sbb
rorb
pushf
jno
idivb
adc
mov
stc
jae
aas
in
ljmp
lods
pop
mov
cmp
sub
out
arpl
xchg
sbb
push
and
jae
lock
add
xor
mov
rcrb
push
outsl
push
icebp
xor
mov
aaa
fildl
pop
sbb
nop
lcall
pop
rcrb
push
stos
mov
push
movsl
jno
std
mov
sbb
call
movsl
repz
xor
in
add
cmpsb
xchg
in
xchg
addr16
sub
jl
je
ret
lods
cltd
push
push
inc
lock
push
xchg
pusha
das
fs
addps
fs
enter
sbb
dec
adc
clc
les
leave
mov
into
push
mov
shrl
add
sub
and
movsb
cmp
cs
subb
clc
ljmp
pop
mov
mov
jbe
push
pop
sbbl
cmp
fs
test
jae
mov
and
jp
lahf
pop
xor
cmp
scas
sti
add
push
pop
js
subl
jge
repz
cmp
into
andl
jae
and
jae
or
xchg
aad
mov
fs
add
shl
sbb
or
jae
sbb
clc
nop
lock
flds
adc
loope
adc
inc
pushf
fisubl
stc
pop
xchg
and
adc
fists
push
mov
out
rcr
jle
adc
adc
test
push
scas
pop
xchg
and
lcall
add
jmp
mov
jbe
cmp
push
cmp
pop
sbb
jae
mov
test
xchg
adc
inc
int3
push
ret
or
pop
fmuls
xchg
mov
lds
mov
insl
push
pop
loope
mov
fdivr
cld
push
jge
jp
fidivrl
mov
pop
jl
and
sbb
dec
and
xor
dec
arpl
bound
fadd
nop
cmp
sbb
addr16
push
fstps
lds
mov
imul
sbb
hlt
imul
shrb
pop
int3
sbb
bound
inc
sarl
test
push
mov
push
xor
and
jae
fnsave
into
shll
arpl
sub
ljmp
pop
int
add
pop
pop
lods
xchg
jb
nop
sarl
mov
cltd
shrb
cmp
in
cmp
insb
inc
sub
fildll
shrb
cmp
dec
jle
filds
jne
jae
in
fcoms
cmp
mov
push
mov
cltd
movsb
in
push
cvtpi2ps
scas
loop
and
ret
jne
stos
pushf
fdivl
into
bound
push
fadd
jecxz
sbb
cld
lods
pop
xchg
out
sub
inc
push
jle
ficoms
aaa
cbtw
sbb
inc
cmp
mov
js
inc
mov
cwtl
arpl
and
mov
cmp
pop
addr16
and
xchg
xor
push
cmp
dec
gs
arpl
push
xchg
push
mov
out
out
ret
sbb
jl
mov
cmp
pop
movsb
popf
aad
mov
pop
xchg
ss
push
lahf
and
jo
arpl
and
sub
jae
loop
test
arpl
cmp
add
inc
sbb
mov
ljmp
outsl
push
and
pop
mov
test
je
cmpb
jle
jp
hlt
aas
push
mov
arpl
das
inc
push
jge
xor
cli
and
shll
fsubrs
int3
xchg
xor
jae
push
adc
nop
aaa
dec
daa
push
pop
cmp
imul
movsl
scas
adcb
repz
imul
in
std
shll
lret
xchg
push
mov
jae
sub
scas
int3
lods
das
repnz
cmp
mov
inc
adc
test
decl
mov
fs
ret
test
sbb
cld
push
and
mov
dec
push
mov
fs
jns
push
sbb
scas
inc
mov
jmp
ficoml
jg
adc
mov
ret
sbbl
in
nop
fistpll
sarl
cld
je
jl
cmp
rolb
and
leave
sub
or
push
sub
sbb
mov
pop
jle
ficoms
sbb
push
ljmp
fsubs
mov
das
in
out
scas
int
loop
rcrb
inc
sahf
es
shrb
or
fcom
push
push
push
ss
dec
dec
shlb
cmpsl
enter
out
icebp
sub
adc
sbb
cmp
out
mov
mov
fbstp
icebp
sbb
loopne
out
ret
dec
jmp
testb
mov
mov
and
bound
aas
shrl
movsl
cmp
addl
sbbb
test
pop
jnp
or
int3
movsl
stos
scas
mov
cmp
clc
lea
mov
les
or
mov
jae
arpl
jo
inc
or
shrb
mov
and
inc
movsb
jo
out
lea
imul
fmull
std
adc
fwait
jns
sub
adc
mov
or
jo
outsl
mov
fcmovbe
cmpsb
out
mov
fxch
xchg
or
pop
mov
das
dec
mov
orl
mov
pop
scas
je
jge
jae
cltd
ja
jl
mov
add
push
lahf
xlat
push
rcr
call
mov
and
shlb
movsb
clc
outsl
sbb
dec
xchg
jb
mov
mov
daa
jae
dec
and
jno
jo
sti
sbb
jno
lret
outsb
clc
movsb
rclb
mov
shrl
push
mov
or
dec
xchg
arpl
jg
out
add
aad
pop
jae
and
cs
sbb
push
popf
js
sbb
inc
pop
lahf
sub
out
out
jno
dec
popa
mov
scas
jae
sbb
and
xchg
jg
fists
dec
push
cltd
add
lret
xlat
dec
arpl
lret
sbb
inc
pop
or
js
pop
fldenv
push
dec
push
nop
jae
cmp
inc
push
pop
sub
iret
mov
mov
inc
mov
stc
loopne
sub
push
cwtl
jo
cld
push
lds
hlt
or
outsb
rcrl
pop
inc
nop
iret
cli
pushf
sbb
loope
dec
loopnew
test
int
test
xor
mov
in
insl
push
add
pushl
shrb
int3
cwtl
jb
push
pop
adc
xchg
pop
ljmp
adcb
pushl
jns
dec
dec
cmpsl
dec
or
imulb
repz
rorb
scas
mov
mov
popa
push
inc
mov
int
jns
cwtl
add
sbb
sbb
jno
ja
dec
jo
outsl
inc
stos
rolb
mov
test
andb
adc
stos
cltd
xorl
or
adc
and
and
subl
cmpsl
lods
test
sbb
adc
adcl
pop
leave
arpl
or
insl
repnz
in
sti
das
push
mov
movsb
out
movsl
add
jge
cmc
xchg
xchg
jo
sbb
lahf
outsl
inc
les
cld
call
sti
ret
xchg
adc
sbb
jle
psllq
je
ret
data16
xchg
test
or
stc
shrb
out
sbb
mov
xor
or
adc
dec
addb
fldt
outsb
nop
rclb
jge
stos
addr16
test
notl
inc
aad
pushf
aas
loopne
stos
shlb
sbb
pop
jno
xchg
sbb
fisttps
push
aaa
jo
push
pop
cmp
and
hlt
inc
idivl
fmull
nop
popf
icebp
loope
mov
xchg
xchg
push
or
and
rol
push
jbe
jo
test
add
sbb
les
ret
mov
mov
jo
inc
ss
adc
jo
int
in
dec
mov
addr16
ret
mov
jo
js
mov
cmp
imul
or
push
lcall
idivl
rclb
call
clc
and
pop
inc
xorb
push
inc
xchg
scas
jo
and
mov
cmpsl
cmpsb
movsb
int3
mov
xchg
mov
cltd
jo
push
mov
aad
mov
cwtl
in
jbe
jo
jge
cmp
loope
pushf
mov
or
push
pop
lea
add
pop
dec
jbe
or
popf
push
sarb
mov
dec
mov
fsub
addr16
ud0
icebp
mov
nop
loop
mov
sub
fstl
imull
bound
call
mov
dec
jae
repz
and
imul
xlat
popa
mov
jnp
bound
mov
dec
push
or
insl
jne
cmc
pop
push
repnz
sar
fidivl
nop
mov
dec
jo
lahf
cwtl
inc
ljmp
sbb
adc
dec
adc
imul
mov
sub
sahf
jo
or
jnp
imul
jo
mov
fadd
pusha
jo
xchg
hlt
ljmp
cmp
add
and
mov
pop
inc
xchg
inc
ficoms
jne
mov
stos
jge
jge
out
inc
roll
add
pop
sbbb
fnstenv
subl
icebp
xlat
rorl
outsb
rolb
mov
mov
jo
lods
mov
inc
jo
fcmovnu
in
cmc
inc
orb
or
dec
jne
inc
mov
jo
into
in
movsb
mov
add
mov
clc
dec
pop
cmp
or
pop
scas
bound
sarl
dec
sarl
mov
jae
mov
cmp
nop
add
dec
sbb
loope
pop
fstps
push
adcb
jo
mov
push
and
jo
sbb
sbb
gs
push
jo
dec
into
test
mov
jbe
xchg
add
push
jo
or
dec
pushf
jo
movsl
jle
dec
cmpsl
lsl
adc
push
dec
push
es
rcll
mov
adc
ja
jnp
mov
jo
cld
lret
xchg
push
loope
imul
and
mov
jo
stc
repz
push
or
int
aas
cs
js
jmp
jo
inc
mov
dec
in
daa
jo
cld
jbe
fwait
mov
insl
sub
mov
xchg
nop
mov
jb
cmp
pop
jp
sub
jo
sbb
mov
fidivl
lret
cmp
int
insb
leave
mov
sbb
pop
jne
jg
add
mov
repz
jnp
dec
and
fdivs
das
adc
sahf
push
lea
cmp
push
and
xchg
addr16
sarl
sahf
dec
sbb
and
jo
or
ret
and
pop
repnz
fcompl
int
add
sarl
jl
jbe
pop
inc
inc
jo
daa
outsb
iret
sub
jp
jo
into
cmpsb
push
out
test
mov
mov
cmpb
xor
mov
jecxz
xor
xchg
xchg
push
fdivrl
xchg
loope
jo
imul
mov
lret
cmpsl
mov
or
jo
inc
xchg
push
push
mov
pop
js
push
shll
sub
pop
push
cmp
mov
icebp
ljmp
xchg
cmc
pop
mov
jp
jo
inc
pop
sarb
lret
mov
jo
imul
ds
loopne
mov
sti
daa
hlt
jge
inc
sub
iret
pusha
jnp
adc
jo
jge
jmp
mov
test
pop
and
and
xchg
or
ficoms
enter
xchg
add
int3
movsb
jne
inc
jo
lods
lahf
xchg
es
scas
fisubrl
outsl
pmullw
adc
fdivs
popf
mov
pop
fistps
int
lds
data16
scas
test
jo
mov
mov
jp
dec
clc
xchg
mov
dec
sbb
lods
jne
iret
pop
and
roll
jno
scas
popa
mov
inc
mov
mov
inc
pop
fcoml
xchg
dec
pop
cld
jo
add
jmp
add
fs
mov
ret
fnstcw
pusha
push
call
fucomip
xlat
jo
outsl
mov
gs
sbb
jo
aas
mov
pmaxsw
or
inc
add
ficoml
arpl
and
aas
nop
lret
or
ja
lock
pop
push
add
loope
dec
pop
addb
insl
jl
sub
sbb
call
push
arpl
insl
sub
push
adc
sbb
stos
addr16
pop
inc
ss
stc
or
insb
divb
cmp
dec
divl
cmpsb
sahf
push
mov
pop
mov
jnp
cltd
or
mov
jecxz
gs
clc
lock
aam
cwtl
add
push
pop
rcll
testb
jg
fnstenv
movsb
ja
cmp
or
lods
adc
int3
loop
loope
jo
je
push
mov
mov
bound
test
dec
mov
push
jg
jge
mov
xchg
dec
sarb
nop
sbb
jo
add
mov
sar
jmp
outsb
aaa
repz
sub
andb
mov
lock
or
or
mov
xorb
stos
jl
inc
inc
add
and
jne
nop
pushf
shlb
or
pop
cmp
cwtl
jl
imul
cmpsl
or
ja
add
icebp
cld
jo
push
arpl
sub
and
rclb
lret
push
jp
cs
jo
fisttpll
push
jmp
mov
xchg
bound
lods
xorb
in
push
bswap
xchg
mov
arpl
adcl
and
jae
es
mov
cli
cmpsb
adc
shrb
jno
bound
dec
push
cwtl
pop
add
lahf
mov
shlb
lods
das
cmovle
je
dec
or
negb
roll
sbb
mov
cmp
pop
lret
arpl
in
and
jmp
je
mov
jo
sbb
and
pushf
inc
es
out
sub
and
xchg
pop
scas
stos
fwait
dec
jg
cmp
adc
repnz
xor
scas
mov
dec
cmc
jae
insl
outsl
cmp
test
mov
jns
sub
jbe
cld
cs
into
sub
dec
js
lock
add
jae
js
fldcw
cltd
xor
test
cmp
mov
nop
dec
mov
aaa
add
xor
xchg
outsb
mov
icebp
outsb
mov
pop
rorb
fwait
rorb
fildll
mov
mov
je
mov
sub
ja
and
mov
xchg
mov
out
lret
fs
jp
movsl
push
stos
ret
mov
outsb
ret
cmpsl
icebp
lret
jge
pop
pop
cmp
jle
jecxz
inc
out
dec
scas
jae
das
pop
sti
jle
push
mov
call
aaa
ror
xchg
cltd
xor
cli
push
mov
adcl
data16
mov
pop
ss
ret
add
fsts
loopne
rcll
aad
mov
je
adc
and
add
dec
pop
fwait
addr16
aas
add
std
mov
cmp
inc
ret
mov
push
mov
mov
cs
loope
out
or
pusha
clc
jle
negb
sub
pop
and
out
xor
sbb
lret
fidivs
stos
sub
add
jg
mov
mov
movsl
add
and
mov
scas
arpl
sub
das
sar
sub
cmpsl
jae
loop
cmc
mov
data16
or
sub
lods
sbb
cmp
shrl
xor
insl
inc
ficoml
mov
sti
inc
outsl
dec
mov
mov
mov
cmp
sar
mov
mov
xchg
enter
jg
orl
push
inc
cmp
imul
sub
pusha
jb
scas
lahf
jae
fidivrl
pop
enter
fimuls
pusha
dec
jae
jne
add
mov
sbb
push
add
sarl
dec
push
fnstcw
outsb
test
lea
push
std
pop
lcall
cmp
sub
or
pop
insb
std
inc
mov
cmpsl
xchg
sub
cmp
mov
push
xor
loope
ret
xor
cltd
pop
push
stos
iret
imul
jg
movsl
call
in
cmp
out
pop
paddd
imulb
or
or
mov
jae
push
push
push
pmullw
dec
xchg
sub
cmpsl
mov
jge
sbb
jl
lahf
cmp
sbb
cmpsb
xchg
ret
lods
jmp
mov
fwait
test
mov
inc
pop
int
push
sbb
jge
jmp
lods
mov
test
xchg
xor
fdivrl
sbb
jp
stc
es
imull
leave
add
add
rorl
scas
mov
leave
fucomip
add
mov
dec
daa
or
loopne
pushf
stc
push
sub
jmp
sarb
mov
iret
test
sub
push
push
repnz
ficomps
cmp
pop
xor
adc
test
lahf
popf
iret
sahf
or
mov
div
sbb
fsubl
sbb
or
pop
fstl
div
mov
je
or
mov
sti
mov
aad
mov
or
out
testb
loop
rcrb
jg
repnz
push
inc
xchg
push
das
lds
test
push
sbb
in
push
and
push
xchg
movsl
popa
dec
and
test
cmpsl
cmp
insl
arpl
xchg
out
sub
lods
dec
clc
cmp
aad
call
inc
and
insb
push
pop
lods
cmp
pop
add
ret
adc
pop
out
or
sub
push
fs
sub
addb
push
lret
stos
adc
xchg
in
jb
icebp
int3
daa
aaa
ja
mov
pop
mov
popf
cs
stc
mov
xor
push
pusha
xchg
rclb
and
sbb
cmpsb
fstpt
mov
xchg
jp
out
or
mov
mov
xchg
lods
inc
sub
mov
lret
jno
clc
cmp
xor
mov
sbb
fistpll
popa
inc
push
pop
inc
xor
mov
in
lahf
fistl
xor
outsb
inc
movsb
aam
push
inc
cmp
scas
test
push
addr16
addb
rolb
hlt
popf
sbb
nop
push
test
dec
cltd
mov
sbb
mov
jo
pop
ds
insl
push
adc
jg
jae
stos
popa
movsb
imul
scas
mov
inc
adc
mov
pushf
scas
add
andb
mov
dec
adc
shll
push
xor
cltd
dec
add
cmp
pop
add
lds
int3
mov
lret
and
icebp
addr16
lock
loop
aam
lahf
out
and
sbbb
loopne
or
cmpsb
loope
in
sbb
or
ret
jbe
aas
std
push
sarl
mov
mov
mov
jmp
js
fiadds
pop
mov
sbb
arpl
mov
inc
or
mov
outsl
and
push
jne
cmc
inc
jae
pop
aam
popa
cltd
es
add
insl
stos
pop
xorb
ret
cmp
mov
rclb
add
mov
cmp
out
and
xor
loopne
sbb
sbb
das
sub
and
inc
hlt
xchg
and
sbb
outsl
cmp
jae
mov
cmpsl
push
push
incb
pop
sub
dec
movsl
mov
sub
fnstcw
sahf
fprem1
sarb
nop
das
jle
mov
cmp
sub
fs
arpl
xchg
sub
dec
imul
sbb
push
cmpsl
out
outsb
jno
lahf
fdivrl
mov
fs
sbb
pop
adc
je
scas
jo
cmpsl
pop
out
outsl
add
sub
push
mov
mov
add
inc
loopne
je
test
fbstp
xchg
cmpb
add
jae
bound
sbbb
jg
out
imul
cmpsl
dec
pop
cmp
pop
stos
aas
pop
lds
adcb
jne
sbb
xor
mov
mov
pop
outsl
mov
pandn
insb
je
jno
jle
in
or
out
aaa
mov
fwait
jo
mov
imul
push
xor
xor
ss
repnz
sub
adc
jge
cmp
xchg
sti
mov
ljmp
jo
sbb
dec
pop
sbb
jo
mov
push
xchg
jae
adc
xor
out
es
cs
loopne
jae
int3
adc
jns
sbb
jo
xor
jmp
push
sub
dec
lock
mov
sub
jo
roll
jo
rclb
dec
fxch
xchg
or
js
sub
and
int
add
jo
and
push
es
jo
xchg
or
dec
lods
mov
xor
sbb
jo
ss
cmp
ret
mov
mov
jo
test
cmpsl
mov
out
jo
dec
out
push
adc
jo
test
mov
cmp
dec
inc
xor
lods
jo
jecxz
pop
fisubl
test
arpl
pop
outsb
loopne
iret
mov
pop
insl
xchg
jns
nopl
push
sbb
xor
rcrl
xchg
jae
int
mov
xchg
jbe
jecxz
andb
outsb
jo
mov
inc
xor
les
popf
cmp
push
cmp
jo
fwait
sub
nop
or
inc
inc
es
mov
cwtl
daa
ss
sti
ja
cmpsl
loop
leave
push
xor
adcl
mov
inc
jo
sbb
es
popa
out
js
bound
nop
call
xorl
loope
jo
and
out
adc
xlat
xchg
in
jo
aam
mov
test
daa
jo
fists
aaa
ret
push
sbb
cmpsb
lret
clc
lret
std
shl
stos
ffree
add
jo
or
push
je
gs
pop
dec
or
fs
adc
jbe
in
xor
xchg
test
cmp
or
imul
and
mov
dec
dec
xchg
push
jo
cmpsl
cmp
in
jo
cmp
into
jp
jo
loope
jg
fisubrs
loopne
dec
arpl
sbb
xchg
mov
inc
mov
mov
or
pop
aam
jl
rorb
mov
fwait
std
cmpsb
mov
pop
bound
cld
pop
sub
pop
rolb
xchg
lret
and
imul
cmpsl
and
pop
mov
jmp
pop
lret
bound
fiaddl
jo
jle
adc
add
jne
cli
jp
add
sbb
cmpsb
nop
xchg
stos
rcr
push
je
cmp
movsl
clc
jmp
xchg
jo
dec
lock
daa
imul
sti
inc
addr16
xor
sub
out
inc
jl
push
sub
loope
pop
jle
das
lahf
sub
push
sbb
cld
jbe
sub
cmc
dec
nop
jo
jmp
out
pop
sub
hlt
sarb
jae
ss
jnp
daa
movsl
push
sbb
test
xchg
icebp
push
adc
mov
sbb
pushw
or
popf
lret
rorb
adc
je
mov
or
int3
cmpsl
add
add
cmp
adc
add
cltd
mov
in
mov
scas
pushf
jle
sbb
sbb
mov
add
in
sbbl
push
aas
xchg
in
decb
insb
push
mov
push
sub
adc
lock
int3
jno
mov
jns
lret
stos
dec
lret
push
aas
loop
ret
mov
imul
inc
lds
shrb
std
add
int3
add
and
frstor
xor
arpl
push
pop
orl
cwtl
movb
es
aam
sbb
inc
and
jle
arpl
add
rcr
call
mov
jl
xor
lcall
fwait
cmpsl
or
hlt
jo
push
xchg
push
ja
sbb
fimull
inc
cmc
outsb
dec
lahf
das
cmpsl
sbb
int3
mov
std
pop
sbb
pop
jmp
mov
je
fnstsw
rclb
add
lds
std
or
int3
mov
pop
aad
mov
mov
cmp
fstps
sti
es
pop
and
mov
mov
mov
insb
fdivp
pop
jg
call
inc
push
sbb
das
mov
pop
fs
push
xchg
rol
mov
push
pop
mov
sbb
js
add
in
jne
into
mov
add
scas
notl
ljmp
jl
test
mov
and
or
xor
pop
or
cs
and
sbb
mov
cmp
jo
xor
or
sbb
sbb
pop
add
pop
jmp
test
test
insl
xchg
dec
movsl
outsl
lahf
mov
dec
ds
xor
add
adc
xchg
out
jo
es
int3
arpl
std
xor
push
out
fstl
jg
in
inc
adc
scas
adc
jl
inc
sub
jne
mov
add
sub
hlt
pop
popf
repz
xor
cmp
jbe
push
aas
mulb
mov
xor
push
sub
mov
mov
pop
test
pop
call
dec
imul
cltd
add
push
sub
pop
outsl
mov
es
lahf
mov
mov
bound
iret
jb
imul
xlat
fs
jge
mov
out
adc
fsubs
mov
add
push
xorb
fld
push
cmp
scas
test
push
push
cmc
xchg
pusha
iret
pop
cwtl
test
jle
pop
shrb
or
jp
stc
jl
mov
insl
pop
mov
cmpsl
lock
jae
add
loope
subb
cmpsl
sahf
out
sarl
stos
jb
cmpsb
jae
dec
loope
or
arpl
cltd
pushf
call
inc
add
sub
inc
pop
cltd
inc
jo
test
xor
inc
bound
and
es
aas
fnstenv
cmpsb
loope
sbb
add
mov
in
mov
dec
pop
lods
push
sub
push
arpl
jmp
mov
ret
mov
sbbb
mov
lahf
sbb
push
stos
test
lea
jno
imul
push
and
jg
jl
popf
imul
mov
xlat
fimuls
dec
sbb
stos
or
adc
push
in
fwait
test
or
fs
push
and
daa
mov
push
inc
roll
sbb
add
or
xchg
loope
out
push
xchg
pop
shll
push
xor
fisttpl
lret
push
insb
mov
cmpsl
outsb
xor
ficoms
pop
and
sbb
aad
ljmp
adc
pop
test
mov
jmp
jbe
mov
add
shlb
cmpsb
out
jns
or
stos
cmp
mov
pop
fbstp
lock
repz
ljmp
cmp
jle
and
lahf
xchg
inc
pop
jecxz
es
xorb
lock
jbe
data16
dec
dec
add
or
cld
pusha
faddp
adc
insl
jle
or
test
scas
stc
icebp
inc
movb
rclb
push
jae
and
jno
push
lock
cwtl
lock
jae
in
ficompl
sub
jle
imull
sub
std
sti
push
test
orl
popf
cwtl
jae
fcomps
jo
cmpsb
cltd
lret
cmp
sub
dec
inc
add
add
xchg
cmp
or
orl
fxch
jle
imul
out
arpl
sbb
pusha
ret
int3
sahf
jns
loopne
mov
or
and
mov
mov
insb
popf
cmp
andb
pushf
mov
fwait
and
or
imul
frstor
lods
mov
ret
xchg
insb
jmp
inc
inc
add
dec
jle
adc
rcrb
mov
xor
dec
pop
fs
push
in
div
xchg
das
cmp
sbb
out
jns
xchg
xchg
or
and
xor
loope
and
imul
scas
dec
icebp
ret
mov
push
insl
add
cmp
std
add
adc
xchg
mov
push
xchg
cltd
jecxz
addr16
in
add
aas
or
and
mov
es
lock
fiadds
in
ss
sbb
cmp
add
cmp
stos
jecxz,pn
jge
daa
test
add
shll
jle
inc
loopne
or
lea
add
jne
iretw
push
pop
adc
mov
pop
pop
adc
dec
incl
and
jnp
insb
aam
mov
add
decb
gs
xor
and
cli
inc
out
scas
sbb
arpl
push
mov
rolb
jno
bound
dec
push
test
adcb
fs
mov
lahf
fxsave
xor
push
pop
mov
inc
cmp
or
imul
adc
ljmp
daa
das
dec
inc
out
adcl
test
stos
xchg
jg
cmp
mov
cld
ror
jle
in
movsl
dec
mov
rcll
loop
push
mov
jle
jb
outsb
jo
fisubrs
addr16
enter
jne
ja
cmp
ja
pop
xor
scas
mov
pop
and
push
fisubrs
xor
andl
and
daa
push
xor
fcomip
enter
in
sub
mov
push
ret
loopne
dec
fs
inc
mov
lods
mov
mov
and
outsl
int3
cli
jbe
daa
and
jae
cmp
rolb
negb
push
repz
add
xchg
and
in
aas
test
mov
insb
jae
iret
outsl
ja
lds
cs
pusha
inc
lcall
ret
inc
push
fwait
out
rolb
add
xor
ret
into
je
mov
and
jmp
nop
insl
mov
push
inc
fisubl
cltd
inc
xchg
jecxz
sub
and
sar
gs
push
arpl
pop
cld
jae
pop
lock
lahf
dec
push
pop
loope
std
orb
jl
or
xlat
xchg
lock
aad
outsb
mulb
sub
in
jl
cmp
xchg
clc
stc
jno
inc
mov
push
in
or
mov
add
aad
ja
push
jne
call
sbb
mov
pushf
push
subb
fs
arpl
out
pop
dec
dec
xchg
out
mov
dec
call
pop
sbb
mov
sbb
adc
jno
ret
adc
pop
pusha
outsl
add
cmp
dec
cmpsb
jae
push
cmp
push
lahf
outsl
es
push
jno
lock
jle
jmp
pop
inc
cmp
call
mov
jae
fdivl
push
jae
pop
sbb
lock
add
lret
cmpl
adc
lods
aas
in
jnp
inc
and
dec
mov
aas
push
sub
mov
lock
fwait
in
and
jae
rcrl
and
dec
fdivrl
xchg
es
cmc
pop
pop
xorl
push
js
sub
pop
mov
in
jle
push
cmp
mov
out
jge
cmp
arpl
jecxz
and
jo
push
movl
sub
addr16
arpl
scas
arpl
push
dec
std
lock
stos
push
call
lret
push
in
inc
dec
leave
mov
mov
pop
adc
xchg
push
enter
or
ljmp
shll
mov
mov
gs
pop
jo
mov
sub
subl
jne
push
lods
xchg
inc
jno
gs
jae
cld
pop
jp
sahf
loopne
ja
lret
inc
sub
pushf
sub
in
std
cmpsb
es
cmp
and
out
outsl
jge
cld
adc
xlat
imul
push
gs
mov
sbb
jbe
or
jge
dec
pusha
mov
gs
int3
clc
xor
arpl
ljmp
xor
scas
sbb
sbb
arpl
scas
push
jg
cmp
or
xchg
arpl
sbb
pop
call
inc
cmpb
cmp
jmp
jg
out
dec
sbb
gs
jns
inc
daa
pushf
jg
icebp
add
push
pop
icebp
jbe
dec
cli
mov
push
scas
dec
jo
arpl
cmp
imul
mov
fsts
cmpsl
xor
shrb
xor
xchg
adc
leave
insl
and
xor
cmp
mov
and
les
mov
fisttpl
addr16
pushf
int
mov
adc
jge
inc
xor
shll
or
pop
fbstp
and
inc
pop
cmp
mov
arpl
pop
adc
loope
xor
xchg
dec
sub
pop
xchg
in
mov
dec
push
mov
lret
fisubs
and
loopne
push
cmp
lcall
hlt
pop
mov
mov
call
daa
lock
inc
jbe
and
push
xor
ds
loope
jle
jo
and
lock
xor
jae
pop
and
and
xor
lods
mov
insb
push
push
out
cmp
jnp
dec
sub
pusha
loope
mov
pop
cmpsl
inc
scas
inc
mov
into
testb
mov
ja
ljmp
push
outsb
xor
sbb
cmp
mov
push
out
test
sbb
dec
mov
adc
push
daa
jns
sbb
xchg
push
adc
pop
scas
aad
cltd
or
push
push
es
mov
sub
push
js
movsb
rcrb
dec
cmp
shrl
shll
lahf
stos
mov
pop
stc
imul
sub
lock
aam
pop
cmpsb
add
push
jle
mov
cmc
rcr
xor
push
mov
mov
jg
mov
aad
pop
fdivs
in
je
mov
aaa
add
dec
push
jecxz
sarb
ds
arpl
cli
jae
dec
arpl
push
je
mov
loopne
adc
jle
xchg
push
pop
test
lret
stos
loop
mov
add
mov
jae
stc
mov
mov
fldt
push
fnstcw
pop
lods
pop
jo
mov
lahf
popf
test
lods
jl
and
cmc
dec
les
in
int3
sbb
out
push
xchg
rolb
dec
jbe
pushf
gs
jns
mov
push
push
insl
rcll
inc
sbb
jae
jnp
dec
fimuls
and
das
arpl
sbb
dec
stc
jg
jbe
fmull
insl
cmpsb
or
sub
cmp
jge
and
jg
inc
dec
js
inc
nop
shl
jp
inc
test
sahf
test
jle
cld
je
pop
bound
loopne
pop
rolb
loope
mov
jg
and
jmp
push
repz
pop
pushl
dec
mov
pushl
pop
sbb
push
or
mov
jae
or
lock
shrb
inc
mov
cmp
mov
add
int
stos
mov
cmpsl
push
dec
push
fiadds
inc
lret
xor
or
jmp
xchg
dec
pushf
lret
sub
dec
lret
jns
dec
jp
jne
xor
sbb
xor
jl
in
icebp
jmp
mov
dec
jl
xchg
jle
mov
xchg
pop
iret
hlt
int3
idiv
jbe
cs
push
or
movsb
je
jb
imul
mov
negw
xlat
outsb
divb
shrb
push
das
mov
xchg
mov
mov
jmp
pusha
out
sub
in
stos
add
and
push
lds
and
dec
sub
push
clc
scas
and
fildll
jmp
mov
sbb
inc
fnstenv
cmp
popa
fistpll
into
and
lods
cmc
out
push
cmpsl
iret
mov
lds
push
mov
lods
bound
mov
xchg
mov
in
sub
and
fdivl
push
pop
iret
push
test
gs
sbb
cltd
fdivl
push
sbb
fidivrl
in
loopne
enter
mov
inc
movsl
dec
outsb
out
xor
cmp
dec
sbb
inc
mov
lods
in
mov
cmpb
sarb
pop
cmpsb
add
inc
cmpsb
iret
adc
jecxz
jge
add
fisttpl
aam
movsb
das
fs
imull
stos
frstor
mov
sarb
test
mov
xchg
callw
jae
xor
jl
js
or
mov
andl
insb
and
shll
movsl
out
das
fisubrs
dec
popa
dec
jae
inc
inc
xchg
repz
xchg
sarl
imul
ja
inc
arpl
sbb
icebp
and
xor
dec
std
sbb
leave
hlt
pusha
sahf
sub
aas
mov
mov
and
jns
push
xchg
push
int3
dec
sub
hlt
dec
lods
push
scas
sbb
dec
mov
jnp
adc
cmp
out
clc
lahf
sbb
bsf
adc
push
pop
sbb
xor
and
jp
xchg
fldenv
or
movsl
sbb
arpl
xchg
mov
adc
sub
outsl
iret
pop
loope
push
jno
sbb
mov
imul
xor
jmp
int
push
outsb
andb
jns
clc
xchg
std
mov
push
mov
adcl
cmp
testl
movb
loopne
cmp
jo
repnz
jo
push
nop
add
pop
add
xchg
movsb
adc
imul
lret
xlat
sub
rorb
testl
ja
bts
fs
mov
cmp
stos
dec
jo
sbb
jg
or
jo
nop
push
pushf
test
sbb
xchg
jle
push
insb
and
mov
shld
dec
pop
lcall
das
push
cmpsl
cmp
push
dec
jo
mov
das
and
push
push
enter
cmp
xor
push
dec
pop
pop
push
das
push
jo
les
add
test
in
adc
nop
mov
imull
inc
das
inc
loopne
bound
insl
cmp
and
gs
inc
test
movsl
push
das
imul
xchg
or
jae
in
jo
lods
sub
cltd
jo
push
lahf
mov
das
and
sub
pop
mov
enter
mov
inc
dec
push
mov
ds
sub
push
jo
test
fsubrl
mov
mov
sahf
test
addr16
xchg
sub
mov
jo
leave
adc
mov
inc
cltd
jo
adc
movsb
pop
push
xlat
subb
in
push
cmp
and
insb
je
cs
insl
sub
enter
dec
int
xor
ja
xsavec
imul
push
jb
jp
pop
pop
subps
inc
dec
xchg
je
enter
mov
pop
pcmpeqb
add
adc
idivl
cmpsl
enterw
cli
dec
test
or
jns
inc
push
push
mov
xchg
divl
xchg
jo
xor
mov
jo
xor
iret
push
mov
inc
sub
fisubl
std
xor
add
clc
pop
xor
enter
flds
outsl
push
xor
mov
mov
in
push
jo
xchg
sbb
loope
inc
icebp
roll
jecxz
pop
sbb
dec
insb
imul
sub
xchg
test
pushf
xor
add
push
jo
pop
and
xchg
jo
aam
lods
mul
pop
xchg
popa
xor
loope
out
xchg
pop
jo
or
aas
adc
cmp
dec
fs
mov
test
rcl
jg
dec
ret
fbld
insb
mov
or
dec
or
psrlw
xorl
sbb
ds
jo
jmp
scas
xchg
mov
call
cmp
dec
pop
lret
and
add
std
push
add
addr16
lea
jns
cmp
das
int
int
jb
push
or
sbb
cmp
mov
xor
push
lods
pop
ds
or
lcall
push
jo
ja
push
pop
in
xchg
insb
xchg
push
push
call
cs
dec
mov
jbe
pop
or
loopne
add
ret
arpl
push
push
xor
jo
push
mov
jo
pop
adc
cmp
mov
push
jb
mov
popa
icebp
cmpb
jne
jb
dec
pop
sbb
push
int
sbbb
imul
push
jo
pop
mulb
fwait
mov
jo
addr16
mov
dec
jmp
cli
jo
mov
mov
mov
call
stos
xchg
xor
inc
or
xor
fs
mov
jns
cmp
xor
jo
inc
cld
sbb
stc
fdivs
jp
xchg
xor
push
mov
lods
int3
and
mov
aad
and
jns
jo
add
adc
test
daa
ja
adc
jo
lret
or
mov
or
cmpsl
jle
xor
inc
inc
pop
dec
and
pushl
push
push
sarb
add
insb
adc
dec
mov
fwait
stos
rcrb
push
jne
mov
and
out
jnp
imul
or
add
mov
and
mov
fistl
add
jo
mov
mov
jo
fdiv
push
add
insl
xor
jo
xchg
jl
pusha
dec
jmp
pop
jo
call
jge
shlb
test
push
dec
ret
and
add
mov
or
jo
cmp
mov
mov
xchg
pop
sub
cwtl
xchg
repz
mov
push
subl
jnp
rdmsr
cmp
pmaxub
movsb
pop
xchg
jo
shrl
icebp
mov
mov
add
jmp
pop
cltd
sbb
xor
leave
and
jo
jecxz
xor
cmp
shlb
addb
sub
mov
push
pop
out
or
mov
test
icebp
lods
jo
xchg
mov
data16
push
imul
js
pop
push
sub
inc
cmpb
xorb
add
inc
mov
in
pop
mov
push
jo
mov
out
adc
jo
repnz
sbb
mov
add
cmp
adc
or
and
dec
outsb
jg
fs
lret
jp
cmpsb
adcb
inc
mov
das
jo
std
inc
prefetch
or
sub
js
jl
push
mov
bound
jo
cmp
cli
rclb
aas
insl
adc
or
out
mov
mov
rcll
mov
adc
mov
adc
in
sti
mov
cmp
jne
cmp
ret
sub
loop
es
sub
fs
lahf
xchg
pop
ss
push
popa
xchg
jo
stos
movsb
sarb
mov
xchg
ret
jge
push
push
push
js
fcomip
je
shl
mov
test
cs
pop
js
jns
jbe
jo
adc
sbbl
scas
jo
lods
add
stos
mov
lock
push
es
xorb
jo
inc
sub
push
dec
and
out
xor
nop
test
dec
adc
repnz
leave
int
mov
leave
cmc
dec
jo
test
xchg
rolb
movsb
xchg
fsubr
inc
jo
lds
jg
insb
dec
jo
arpl
outsb
test
push
test
aam
xor
dec
jae
or
pushf
sbbl
and
mov
jo
mov
je
xor
mov
inc
cmpsl
pop
mov
inc
or
cmpsb
jns
stc
sbb
cmc
inc
std
fldl
and
js
int3
leave
ret
mov
das
xchg
lods
shll
lret
arpl
ror
pop
cmp
jle
jne
movsb
sub
popf
scas
adcb
ret
mov
sub
pop
add
add
jae
movsl
insl
shlb
mov
or
jg
pusha
mov
xor
sbbb
cs
fsubrp
jb
aaa
or
dec
call
addr16
pop
dec
ja
cmp
loopne
adc
shrl
xor
xchg
js
push
jg
jae
shrb
loopne
mov
xchg
jnp
lahf
in
add
loop
cwtl
xor
cmc
aad
xor
xchg
add
xchg
jns
push
jge
stc
ficompl
mov
daa
sahf
out
in
mov
xor
xchg
push
jno
cli
call
enter
mov
ja
fcompl
dec
push
repz
outsb
nop
jg
dec
lcall
fidivs
data16
ret
pop
lods
and
into
lock
mov
mov
pop
shrb
and
jp
mov
std
mov
adc
inc
xor
push
fidivrs
and
inc
jle
rorb
icebp
dec
and
push
nop
mov
jns
aad
mov
jle
iret
dec
push
mov
fisubs
inc
cltd
cmp
jnp
mov
mov
fsubp
and
xchg
fidivrs
out
sub
xchg
scas
pop
cld
loop
mov
inc
dec
sbb
bound
cmpsb
jle
jb
inc
jae
add
lret
insb
data16
cwtl
mov
lock
subb
push
sub
dec
pop
loopne
out
jo
mov
jno
xor
or
out
pop
mov
push
lret
outsl
mov
mov
dec
jne
push
and
shlb
je
xchg
es
jno
xor
stos
cld
inc
mov
sbbl
cmpsl
out
pop
fdivr
and
jne
imul
cmp
mov
push
lret
shl
jle
arpl
fstpt
adc
xor
faddl
mov
fistps
pop
sub
lret
clc
jo
inc
ss
push
cld
jae
pop
push
dec
inc
dec
nop
popf
in
push
push
lock
rolb
lret
pop
push
pop
push
pop
xlat
xchg
aaa
psubusw
stos
out
in
out
mov
jae
xlat
das
dec
dec
js
into
fidivs
or
and
and
insl
push
add
fcompl
xchg
jge
dec
arpl
mov
pusha
shr
xchg
insb
xorl
loopne
scas
gs
inc
and
mov
cli
enter
push
fiadds
test
bound
jmp
mulb
sub
and
xchg
or
mov
jge
not
fwait
repnz
lret
cld
mov
sti
int3
sbb
or
mov
leave
push
stos
rcrl
out
sbb
lahf
pop
adc
fistpll
xor
adc
sub
push
repnz
adc
arpl
mov
mov
in
add
jb
out
imul
ljmp
sbb
repnz
lea
fdivl
jb
out
in
mov
lea
jns
popf
rol
frstor
push
or
mov
and
cld
mov
in
movsl
push
jmp
jecxz
sub
inc
fldcw
cmp
adc
out
jb
add
push
or
jae
sbbl
xchg
in
add
rclb
sbb
test
inc
lods
insl
add
inc
dec
outsl
pop
out
addr16
xor
loope
and
daa
cmp
inc
imul
mov
cmp
nop
jbe
gs
jne
xlat
sbb
dec
subl
add
rclb
and
arpl
mov
jmp
icebp
fnstcw
push
scas
mov
cmp
fucomip
pop
clc
lock
cmp
popa
loop,pn
lret
cld
cmp
fs
fisubs
push
adc
test
mov
pop
out
cmc
inc
jae
inc
pushf
dec
enter
out
jge
push
test
lahf
cmp
cmpsl
push
js
mov
lret
test
fistpl
lock
or
roll
int3
push
cltd
popf
mov
aad
add
out
inc
es
loopne
sahf
sbb
xor
or
cs
call
dec
es
mov
sub
out
ja
or
out
add
imul
movsb
mov
adcb
clc
repz
jge
pop
xor
or
test
call
pop
outsb
mov
movsb
out
lret
mov
sbb
push
sbb
sub
popa
lods
cmpl
mov
xchg
cmp
enter
pop
jo
fildl
push
sbb
paddusw
and
addb
push
insb
push
sub
fs
gs
stos
dec
cmpsl
dec
jge
mov
movsb
cmp
jae
popf
out
dec
cltd
adc
lods
jae
mov
pop
icebp
inc
leave
xchg
addr16
popf
jae,pn
add
dec
push
mov
add
dec
push
jns
sub
jns
shrb
scas
jg
push
data16
ret
jae
lods
leave
in
scas
sbb
movsb
imul
mov
rolb
mov
xchg
arpl
out
mov
ret
orb
movsb
lods
mov
push
mov
ret
pop
sbb
adcb
push
rcll
sbb
inc
js
jns
je
jb
sahf
xor
pusha
arpl
scas
mov
pop
rorb
pop
sub
add
pop
test
fwait
mov
xchg
jl
jp
in
sub
add
mov
jae
inc
jg
ljmp
dec
cmpsb
push
mov
push
inc
or
int3
xlat
test
sbb
push
push
test
cwtl
idivb
sahf
and
fimull
loop
cli
outsl
data16
or
mov
xor
shlb
call
in
cs
push
xchg
adcb
pop
scas
push
lods
xchg
rcrl
jnp
fs
xor
push
jns
or
in
fsubp
and
cmpsl
pop
out
pop
push
mov
mov
jae
and
dec
lds
arpl
pop
jns
repnz
test
mov
pop
out
sbb
and
mov
dec
out
or
add
mov
test
lods
push
mov
mov
lock
mov
loope
pop
lahf
ljmp
outsl
sub
fmuls
add
mov
in
repz
mov
cmpsb
gs
out
add
pop
lods
pop
jl
cltd
cli
inc
loop
lret
loope
fistps
fsubrs
push
das
add
jmp
loope
sbb
jg
xchg
movsb
arpl
inc
push
pop
push
sub
in
fucomi
jb
xor
fisttpll
pop
outsl
sub
cwtl
sbb
fidivl
add
frstor
mov
sub
sbb
orb
fnstcw
shll
xchg
cltd
je
push
nop
cwtl
push
xor
adc
subl
jns
imul
orb
sbbl
add
pop
mov
aas
or
imul
adc
loope
xor
arpl
inc
jg
mov
jb
jo
xchg
push
push
jnp
mov
jmp
dec
test
and
cmpb
pop
fdivs
movsl
mov
ficompl
add
fsubrs
cli
inc
xor
mov
push
loop
lea
popf
sbb
sub
imul
sbb
subb
nop
fwait
orl
ret
pop
out
insb
xchg
sub
add
movsl
orb
test
bound
cltd
bndstx
iret
loop
mov
pop
repz
pop
out
jns
gs
push
stos
cmpb
xor
aaa
les
js
pop
outsb
cld
mov
loop
or
out
jo
mov
adc
mov
jo
out
mov
jo
sbb
adc
dec
hlt
add
mov
bound
jo
fstl
in
jo
lahf
sub
or
out
push
mov
lds
mov
dec
sbb
dec
fdivp
out
pop
in
push
cltd
out
pop
xchg
or
ja
lock
xor
js
xchg
dec
jmp
mov
jmp
adc
ljmp
daa
mov
jg
push
jns
inc
adc
pushf
nop
or
jns
rorb
movsb
sbb
popa
xor
xor
div
iret
mov
vphadddq
xor
and
pop
js
sbb
sub
jo
shrb
pop
jae
in
mov
xor
push
mov
add
jo
push
es
jns
sbb
xchg
lret
sbb
mov
mov
jmp
mov
ds
jo
lret
lret
jae
enter
xor
add
mov
sti
add
imul
xor
jo
mov
ret
rcll
aas
nop
movsl
in
sti
inc
ss
pop
je
ret
cld
jl
loop
scas
jo
adc
pop
add
stc
mov
hlt
sahf
jo
cmp
lret
jo
push
push
push
push
pusha
sbb
lock
je
cmp
shlb
iret
push
aas
in
sahf
push
rol
sub
out
dec
rorl
shlb
mov
ss
inc
mov
and
subb
push
jo
xor
mov
adc
mov
data16
mov
cmpb
lods
stos
push
pop
test
cmp
les
addr16
and
mov
iret
mov
in
out
sbb
or
mov
jo
mov
test
cwtl
cltd
xlat
xchg
mov
mov
in
add
out
das
in
add
pop
mov
addr16
xchg
jno
out
sub
in
imul
or
and
popf
loope
jnp
fsubr
jo
inc
repnz
jo
and
shlb
leave
pop
sbb
jo
call
dec
pop
lahf
add
jo
dec
sbbb
or
sub
mov
push
jns
movsl
lods
scas
and
dec
ja
push
push
sub
outsl
iret
dec
xor
loopne
jg
mov
dec
aad
pop
jo,pn
adc
fcomi
les
aam
and
ret
jecxz
mov
push
dec
and
lcall
jb
ds
xor
mov
lcall
push
pop
bound
sbb
mov
mov
data16
adc
mov
bound
xchg
cmp
jl
inc
pop
icebp
push
fs
push
data16
addr16
aad
ficomps
test
sub
jne
and
jno
add
mov
popf
or
or
add
push
es
dec
insb
or
ljmp
je
push
subb
xchg
jbe
dec
orl
imul
pop
ret
pop
jo
mov
mov
popl
lea
nop
stos
jp
sbb
lods
jbe
cli
loope
mov
cltd
add
out
nop
xor
mov
inc
jne
adc
or
js
jmp
jo
das
mov
jge
jns
in
je
leave
jo
and
jo
scas
mov
cwtl
jo
cmpl
mov
sub
sub
dec
setb
xor
ljmp
inc
and
jno
jo
or
inc
sbb
ficoml
iret
ja
dec
addr16
mov
inc
cmp
sarb
loope
fcoms
cmp
xchg
cmpsb
xor
mov
pop
or
mov
jo
push
jbe
xchg
or
jo
jns
je,pn
jo
in
fucomi
mov
push
jns
jb
xchg
scas
in
loop
testl
mov
out
imul
jne
cmp
and
insb
rcrl
push
es
cmp
xlat
pop
adc
xchg
pop
push
sub
mov
push
or
jo
fsubrp
sub
in
adc
out
hlt
clc
add
out
out
jo
adcl
xchg
cltd
jle
je
xchg
lods
outsb
test
pop
rorl
pop
mov
jle
inc
notb
jb
jbe
jo
dec
lds
push
outsl
insl
xchg
jo
int3
mov
loop
fists
ja
fldt
cmpsl
push
int3
add
xchg
sub
mov
xchg
jl
pop
insb
add
int
and
jo
xchg
and
xchg
jo
outsl
out
pop
lcall
outsb
es
loopne
in
dec
inc
sub
gs
jl
xchg
adc
cld
mov
icebp
add
pop
push
pop
xor
mov
jno
shr
inc
daa
jo
call
out
dec
ss
mov
mov
jo
daa
or
cmp
cs
xlat
jmp
mov
jo
push
and
jo
xchg
sbb
lahf
push
dec
test
je
imul
repnz
add
add
and
jo
mov
fs
xchg
dec
fdivs
cmp
cmc
leave
and
xlat
aam
mulb
xchg
xor
xor
subb
sbb
leave
bound
jo
jns,pn
aas
mov
scas
sarl
pop
cltd
mov
push
sti
push
adc
test
daa
leave
pop
jo
or
dec
adc
jo
sahf
js
pop
lock
adc
jl
or
rep
jne
pop
fwait
cltd
loope
fnstsw
stc
clc
pop
mov
sbb
loopne
push
cltd
dec
xchg
stos
rorb
nop
cmpsl
inc
test
xorl
sbb
mov
orb
adc
repnz
inc
shr
pop
movsl
cwtl
cs
jp
inc
pop
icebp
sbb
test
insb
ljmp
rcll
mul
cmp
jo
and
jne
xor
jo
sti
loop
cld
adc
inc
xchg
je
stc
dec
push
in
aaa
dec
cmp
xchg
xchg
inc
sub
add
jo
lock
loope
or
push
es
push
mov
fmull
lea
subb
cmp
notb
mov
stos
pop
in
pop
ret
jo
or
addr16
jo
jne
push
add
loop
loope
hlt
rolb
xchg
or
add
lahf
mov
push
addr16
and
lods
jb
inc
xor
jae
es
lock
stc
sbb
sub
testl
mov
add
mov
jo
sbb
into
pop
cmpl
pop
sbb
fs
in
fisttpll
xchg
outsb
sub
dec
in
xor
imul
add
daa
ss
jl
xor
jle
add
nop
or
jecxz
dec
insl
stos
leave
les
pop
or
dec
addr16
test
sub
add
jle
popa
mov
pop
pop
cltd
divb
mov
add
fst
stos
enter
rorb
add
jae
adc
sbb
mov
movsl
mov
call
mov
out
mov
pop
inc
aaa
subb
xor
or
pop
push
jp
mov
cltd
scas
push
jl
inc
ja
jae
inc
mov
imul
das
and
cli
icebp
sbb
ret
sar
adc
cld
add
pop
add
push
xchg
enter
jo
arpl
xor
clc
and
cltd
mov
xchg
aad
repz
mov
sub
addb
inc
jg
mov
pop
rorl
insl
xor
sbb
cmp
nop
fs
add
idivb
or
ret
js
cli
xchg
push
mov
mov
addb
int3
jl
fisttpl
int
xor
fwait
hlt
lcall
adc
pop
adc
mov
jmp
and
or
mov
inc
sub
lock
push
imul
arpl
outsb
jle
xor
cmp
sub
jle
out
lret
pop
ja
fs
int3
into
and
addr16
scas
popf
cmp
iret
adcl
inc
hlt
or
mov
outsl
dec
mov
push
cmp
ljmp
push
jbe
rcrb
call
and
gs
cmp
cmp
xchg
cmc
loop
movsl
fdivrp
fwait
mov
ror
orb
pushf
fnsave
xor
jno
das
cltd
push
repz
lret
mov
sbb
cmpsb
xchg
jne
cwtl
fs
and
push
push
jle
test
or
mov
mov
mov
sbb
push
pop
mov
aad
jbe
popf
js
jns
jp
popa
popa
cwtl
aas
mov
and
jno
mov
icebp
test
jge
jo
out
roll
xor
in
xor
add
mov
data16
inc
jp
xchg
loop
mov
icebp
jmp
push
inc
insb
sbb
dec
adc
dec
push
testl
sahf
mov
or
xchg
inc
cltd
and
dec
xor
ljmp
xchg
adc
sbb
xchg
mov
dec
nop
sbb
je
jae
or
push
push
mov
in
insb
jmp
dec
jle
cmpsb
loope
mov
dec
dec
in
xchg
sub
insl
and
push
mov
sahf
arpl
or
add
jl
pop
sbb
jbe
dec
shlb
jmp
clc
bound
rcr
lds
jo
mov
arpl
fidivs
mov
cmpsl
mov
sub
out
stc
sbb
push
xchg
mov
inc
jns
jne
sbb
mov
lock
xchg
in
pop
jle
adc
insb
jne
push
sbb
flds
test
out
test
add
jecxz
outsl
xchg
push
or
test
mov
lock
outsb
mov
sbb
imul
ltr
sbb
in
cmpsb
jae
pop
and
ja
insl
shl
and
pop
mov
add
daa
mov
pop
imul
adc
push
mov
adc
xchg
jae
inc
or
push
mov
sbb
inc
loop
mov
sbb
inc
lret
dec
add
push
jnp
push
jbe
call
mov
test
out
jge
mov
insl
and
mov
mov
stos
in
cld
out
out
push
jmp
lock
mov
test
jne
lods
sbb
bound
in
mov
sqrtps
cmp
rcrl
rcrb
add
gs
insl
push
outsl
xor
pop
xchg
lods
pop
pop
shll
out
sarb
sub
push
push
adc
xor
das
iret
hlt
lods
lock
or
call
push
jae
test
sbb
cmp
lods
out
scas
dec
call
stos
ljmp
dec
loop
loopne
mov
lret
xor
xchg
outsl
xchg
cltd
push
mov
test
sbb
hlt
or
mov
data16
scas
sbb
lret
sahf
lock
loop
mov
dec
push
icebp
mov
sub
adc
xchg
in
mov
shlb
out
lret
xchg
sbb
scas
std
aad
xor
lock
push
clc
sbb
mov
cmp
ror
ds
jl
lock
xor
inc
push
sub
adc
or
lock
out
cmp
mov
insb
jo
flds
lret
push
movsl
aam
jne
test
sub
popf
rorb
mov
fs
xchg
dec
cmpsb
jnp
int3
imull
cli
popl
push
pop
popa
or
cmp
add
push
sbbb
or
adc
aaa
int
jns
jle
int3
push
rol
mov
push
cmpsl
push
mov
xor
jb
stc
mov
sti
fistpll
scas
hlt
jnp
fs
cmp
xor
jns
jb
sub
adc
xor
fstl
out
das
out
aas
js
sbb
push
in
scas
sub
rcrb
ret
lock
ss
dec
cld
lret
addr16
sub
lods
push
sarl
or
push
jl
les
push
jae
jle,pn
push
enter
sub
dec
jmp
lock
jne
cld
jne
leave
push
icebp
xlat
mov
push
push
lock
xor
shlb
add
cmp
outsl
aam
inc
jno
xchg
loope
aad
sti
xor
xchg
ss
dec
jl
or
out
jle
jge
add
xor
xor
pop
jmp
stos
adc
xchg
push
das
cld
inc
scas
mov
pop
pop
in
enter
outsl
cmp
sbb
stc
mov
push
dec
inc
add
jae
sbb
and
push
or
sub
sbb
gs
cmp
jle
xchg
mov
push
ret
insb
xchg
test
add
inc
cmpsl
xchg
jp
mov
aaa
jecxz
fidivl
pop
push
pop
xchg
sahf
outsl
mov
xor
aam
in
imul
or
and
mov
mov
jle
in
jns
lret
mov
jo
push
mov
jge
cmp
out
sub
pop
addr16
and
popl
inc
adc
mov
pop
andl
mov
iret
lds
loopne
mov
adc
jl
or
insl
pop
adc
js
mov
jo
sub
scas
ja
loop
sbb
test
cmpsl
jo
xchg
test
mov
jo
lret
minps
dec
jo
cmp
pop
sub
xchg
xchg
jo
cwtl
lahf
movl
xchg
lret
adc
rcr
test
mov
cmp
out
jo
call
cwtl
je
iret
fisubl
int
ret
sarb
cs
sub
sub
dec
out
sbb
jo
repz
fdivrl
cmp
mov
sub
outsl
dec
mov
mov
jo
imul
mov
andb
test
xor
fcmovu
add
mov
fstps
or
cmp
out
mov
int
daa
xchg
imull
jno
sub
dec
adc
data16
or
xor
jo
cli
push
sbb
jo
or
outsl
jmp
imul
ret
jo
xchg
andl
in
leave
movsb
stos
jo
int3
cmp
jle
adc
jo
fstps
sub
cmp
adc
adc
or
and
outsb
and
sahf
out
xchg
inc
jo
sub
sarl
aam
lret
cmpsl
lret
sub
push
std
jle
fwait
pushf
jle
dec
fldenv
cwtl
movsb
mov
mov
pop
stos
inc
pop
push
adc
fnop
or
cltd
scas
push
fwait
leave
xchg
shlb
dec
cmp
stos
xchg
sub
inc
dec
rcrb
jle
inc
push
fcompl
cmp
ret
cmp
imull
jmp
xor
sbb
dec
decl
xchg
sub
clc
rclb
loope
jno,pn
or
cltd
mov
add
mov
sub
stos
pop
popf
icebp
fiaddl
out
mov
xor
xchg
fwait
aaa
fwait
add
cmpsb
dec
push
pop
xchg
sub
xlat
mov
dec
adc
insb
jle
scas
loopne
sub
pop
cld
xor
dec
pop
jae,pt
testb
jno
into
sbb
xor
bnd
mov
dec
lock
mov
sbb
outsb
jl
sub
inc
adc
mov
mov
dec
sub
pop
xor
pop
nopl
push
mov
or
jns
push
push
imulb
adc
or
decb
insl
mov
adc
mov
mov
cs
jnp
std
dec
inc
cmc
pop
adc
adc
push
or
ljmp
jg
imul
add
or
fcomi
cmp
jae
xor
pushf
fs
lds
outsl
xor
pop
movsl
cmp
push
pop
fidivl
imul
js
xchg
lods
mov
jnp
xor
dec
gs
sbb
repz
push
or
cmp
push
js
dec
out
sub
pop
imul
and
ret
push
int3
jp
jo
dec
adc
aaa
mov
xor
clc
fldenv
push
or
in
push
sbb
xchg
mov
jo
daa
add
dec
sub
inc
sahf
scas
mov
pusha
test
jg
std
js
mov
jp
insb
pop
stos
insl
jo
and
into
sbb
loop
mov
jo
adc
sbb
and
inc
or
fldcw
popf
pushf
cld
shll
jo
rcll
inc
xchg
pusha
push
jo
es
or
xlat
mov
repnz
jge
cmpsb
lcall
aas
add
or
mov
sub
adc
and
out
cmp
cmp
push
gs
push
push
lret
ret
scas
push
dec
xor
pop
lret
xchg
mov
rol
inc
retw
lock
icebp
adc
imul
mov
mov
cmc
aam
adc
insb
in
and
jae
rcll
push
popf
xchg
sbb
sbb
jno
mov
out
add
sbb
and
xor
xchg
lret
aam
mov
mov
sbb
mov
sbb
inc
addr16
cltd
xchg
jle
push
cmp
in
cmc
jecxz
sbb
push
stos
cmp
pop
ja
stos
iret
jp
dec
push
push
push
sti
sub
pushf
jge
push
lock
lea
xchg
xor
dec
fs
ja
repnz
jle
push
mov
adc
scas
jp,pn
and
push
xchg
imul
adc
in
int
test
sbb
rcrl
mov
inc
adc
xor
xchg
into
mov
xchg
sbb
xchg
jg
jae
cwtl
nop
stos
push
add
mov
movl
std
mov
mov
sbb
cmp
pushf
pusha
cwtl
sbb
loop
fcmovnu
xor
ss
arpl
dec
fstpt
in
loope
mov
mov
pop
lea
push
test
fcmovu
and
out
loope
int
push
sahf
adc
inc
inc
add
cmp
movsb
add
insb
movsl
xor
popl
orb
mov
jnp
cmp
ficomps
xor
push
das
pop
fs
mov
test
or
and
jle
jae
stos
xchg
mov
insb
call
data16
and
sub
jge
fistpll
jbe
lea
cmc
mov
mov
xchg
xor
pusha
adc
adc
pop
out
dec
xorl
gs
mov
paddw
sti
aas
jb
inc
mulb
adcl
test
out
push
clc
inc
push
ret
lea
insl
sbb
lods
mov
jb
icebp
mov
rol
repnz
sbb
mov
cmp
adc
pop
stos
pop
add
pop
testb
mov
pop
dec
jo
sub
sbb
xor
jo
popf
mov
rclb
lock
add
cld
mov
sbbl
lahf
fadd
xor
jnp
out
xor
jae
in
insb
xchg
jo
sbb
dec
dec
fs
hlt
repnz
loop
jge
or
adc
pop
xchg
jnp
jno
jo
sbb
and
gs
pop
icebp
jns
sub
ljmp
or
push
lock
int
add
aas
sbb
ss
stc
push
icebp
cmp
sub
push
jecxz
jno
push
pushf
lock
test
cmpsb
and
pop
jns
pop
mul
loopne
call
jb
loope
jle
stos
test
jo
outsb
sub
xchg
mov
js
fwait
xor
int3
inc
jo
cmp
inc
movl
jl
jp
cmc
lahf
fidivl
iret
notl
add
adc
jo
pop
outsl
out
addb
nop
dec
rcr
push
test
mov
je
insb
ret
jno
mov
and
cmp
test
imul
mov
jp
jo
xlat
cmpsb
push
push
sub
aaa
jo
sbb
data16
jo
das
sarl
mov
push
jns
mov
pop
getsec
in
push
inc
mov
jo
mov
cmp
lods
adc
fidivl
xorl
leave
push
push
inc
mov
sub
repnz
sub
sbb
pop
push
repz
adc
stc
or
mov
jo
aaa
aas
sbb
out
push
lret
imul
jae
adc
out
les
sbb
pop
sti
sub
popf
inc
cld
stos
mov
fwait
sbb
pop
movsl
xor
mov
jbe
arpl
add
stos
outsb
and
mov
daa
call
cs
push
test
enter
and
lret
jle
mov
xchg
mov
scas
and
dec
rclb
nop
xorb
pop
test
inc
into
add
mov
xor
mov
push
pop
push
push
out
idivb
push
sub
adc
inc
jns
or
cwtl
lret
rcrl
lock
pop
dec
cmpl
data16
xchg
cmp
adc
out
dec
out
mov
addr16
sub
ret
in
dec
dec
mov
aam
stc
scas
inc
and
movsb
sub
hlt
mov
xchg
sub
pop
lock
aam
jb
mov
out
out
push
inc
ret
xchg
fiadds
mov
pop
jo
arpl
jp
push
testl
ss
out
subb
cmpb
shll
js
data16
push
jo
adc
mov
add
cmp
mov
aam
fldt
lcall
aaa
push
emms
rolb
insl
int3
push
cs
jns
jo
test
and
inc
ret
cli
rsm
dec
stos
sbb
jle
mov
fistpll
jbe
lret
push
ret
mov
fidivrs
push
fbstp
jmp
jo
leave
pop
inc
and
aaa
xchg
arpl
push
mov
mov
mov
mov
mov
add
or
shld
push
sub
xchg
mov
insl
sbb
dec
mov
andb
push
out
xor
sub
das
repz
jmp
rdmsr
out
mov
cmc
inc
repz
jb
push
inc
imul
xchg
mov
adc
out
mov
push
xchg
or
jo
mov
cwtl
jmp
sbb
js
nop
sub
cmp
mov
ret
pop
and
mov
hlt
test
sub
insb
in
mov
inc
movsl
inc
jne
aaa
in
repnz
push
icebp
out
std
xchg
mov
jbe
sbb
mov
pushf
or
xor
or
loope
fcoml
jp
pusha
lahf
lock
mov
and
add
popa
fcoms
stc
popf
icebp
mov
lods
hlt
jo
xchg
jo
out
int3
mov
add
stc
scas
in
rcll
shrd
jmp
adc
repnz
dec
adc
or
sub
fisttpl
add
aam
xor
notb
aas
mov
mov
jmp
jo
clc
mov
jl
jo
mov
aaa
jo
xchg
jmp
add
push
iret
out
cld
add
sbb
or
jae
cmpb
in
mull
nop
fdivs
push
data16
push
in
dec
addb
xlat
movsl
ja
je
insl
rolb
jae
shll
pop
test
ds
jo
shl
cmp
cltd
mov
cmp
pop
mov
cmpb
arpl
inc
and
ret
sahf
jo
mov
test
icebp
and
rclb
ljmp
jl
ret
mov
mov
ss
dec
xchg
push
adc
ja
js
out
jmp
mov
movsb
les
push
push
jo
mov
push
sub
push
and
hlt
cld
jo
ss
push
mov
add
sub
out
in
pop
push
ret
pop
xchg
push
pshufw
mov
pop
nop
jae
inc
push
or
jbe
sbb
push
jle
stos
out
sub
dec
mov
push
pop
and
inc
ljmp
int
repnz
xor
push
ret
jb
dec
or
orl
cmc
mov
add
lahf
xorb
popf
dec
xchg
jo
adc
out
mov
pushf
jo
fdivrl
aad
dec
es
mov
jo
fs
js
jae
popl
sti
cs
adc
das
jo
pop
xor
cmp
xor
dec
flds
push
dec
xchg
test
cltd
scas
jae
and
scas
or
js
faddl
ds
int
cmp
jno
out
iret
jo
mov
mov
fstpl
mov
pop
mov
xchg
jnp
push
mov
jne
int3
jo
cwtl
hlt
dec
xchg
je
sbb
loop
inc
es
mov
lods
mov
mov
scas
push
cld
push
jo
xor
add
jo
lcall
nop
out
adcb
pop
push
shll
adc
pop
jo
fcmovu
mov
lods
ret
sbb
cmp
rcll
mov
xor
mov
lahf
push
ss
mov
adc
cmp
rol
mov
popa
inc
push
and
xor
fidivl
mov
jo
lods
push
arpl
inc
je
int3
insl
and
sbbb
sub
cmp
mov
mov
hlt
shll
mov
lds
in
aam
sbb
mov
xchg
cmp
mov
icebp
push
call
inc
std
rcrl
pop
lret
dec
dec
jo
xor
je
jae
cmc
shrb
add
pop
js
inc
fsubrl
shll
insb
mov
mov
sbb
adc
shlb
jo
loopne
popa
out
out
xchg
sub
jb
jo
pop
add
push
cmovns
sbb
cmpsl
and
and
push
push
int3
sbb
fwait
jo
jle
mov
push
pop
adc
je
xor
fnstcw
fdiv
push
jge
jo
shr
pop
inc
jno
shlb
cmp
sbb
js
jo
jbe
sti
out
xor
jo
fwait
inc
jmp
mov
jmp
xchg
or
or
into
jbe
push
jo
xlat
push
pop
repnz
push
cs
push
sti
mov
fisttps
and
jo
pop
call
mov
adc
and
push
lods
jmp
jo
test
repz
movsb
pop
pusha
mov
adc
xor
sbb
mov
mov
cmp
or
inc
mov
push
pop
and
add
add
add
pavgb
in
push
mov
mov
lcall
cmpsb
mov
push
js
icebp
lret
loope
mov
sar
xor
jge
jo
lock
push
add
ret
inc
jns
push
jmp
xchg
aad
insb
cmp
pop
jb
shr
sub
outsb
sub
push
ret
mov
clc
push
inc
mov
lods
or
dec
and
jo
or
pusha
lret
pop
int
scas
xorl
jmp
aaa
push
xchg
iret
mov
cmp
and
repz
jo
and
fwait
dec
dec
leave
mov
push
sub
mov
push
jmp
cltd
es
mov
mov
ss
shl
dec
push
nop
jb
das
ds
jo
xor
aam
xchg
cmp
scas
jo
sbb
xchg
xchg
jo
jg
xor
fcom
mov
fildl
jle
add
xchg
push
loop
jo
and
jo
sbb
mov
jo
cltd
inc
fidivrl
lods
sub
bound
xlat
in
sub
scas
push
mov
mov
lea
cmpsb
push
inc
es
sub
enter
dec
shll
add
imul
daa
push
test
cmp
jno
add
jo
adcl
xchg
jo
or
aaa
mov
roll
dec
in
xchg
and
ret
pushf
cs
add
pop
ja,pn
xlat
jb
push
nop
xchg
dec
bound
adc
xlat
test
mov
and
in
shll
out
push
mov
push
jo
mov
xchg
aas
adc
cmp
hlt
sbb
mov
in
mov
leave
sbb
ret
ret
int3
repz
mov
loop
jne
jo
imul
inc
iret
push
pop
sahf
cmp
ret
sbb
hlt
push
sbb
push
scas
jno
rcr
in
inc
jo
sbb
aas
dec
jo
enter
insl
mov
sub
fldt
push
add
outsl
js
pop
cmp
jl
add
jo
sub
add
push
icebp
inc
jo
shlb
aaa
jo
bound
and
jl
inc
xchg
mov
testb
call
sbb
lret
mov
js
xchg
xor
enter
jo
insb
cmpsl
jbe
add
pusha
jbe
cmp
push
popa
lret
in
mov
pusha
arpl
mov
xchg
aam
jbe
cmpsb
arpl
pop
mov
mov
inc
cmp
push
arpl
mov
jmp
adc
xor
rcrb
icebp
jae
add
test
subl
mov
repz
shl
cmpsl
cwtl
loop
mov
lock
arpl
add
in
sbb
sub
and
arpl
fistpll
jp
out
shlb
mov
test
or
test
add
je
jae
cmpsl
aaa
jnp
and
stos
fidivl
pop
jmp
inc
bound
add
mov
push
roll
mov
test
jae
xchg
incb
xor
sub
popa
pextrw
test
cmc
int
out
inc
repnz
inc
xor
jae
pcmpeqw
inc
push
sbb
xchg
test
in
rolb
mov
sarb
inc
fwait
push
fists
aad
fst
dec
cmc
lock
scas
xchg
push
mov
mov
scas
lea
mov
cmp
iret
movsb
movsb
and
push
pop
inc
leave
daa
lret
push
notl
sbb
imul
mov
xor
shr
fsts
cltd
call
sub
cmovo
and
shll
roll
dec
cmp
fadds
jg
jecxz
jl
pop
sbb
sbb
jmp
les
mov
imul
jno
in
jmp
mov
scas
rcrb
out
shll
ljmp
insb
push
pusha
mov
add
sbb
pop
int
imul
dec
mov
inc
rcrb
out
sbb
movl
pop
negb
orl
jp
out
jle
mov
dec
outsl
fucomip
aad
xchg
cli
sub
mul
xor
adc
lidtl
fwait
out
pop
mov
push
cmpsb
jbe
js
adc
mov
pop
dec
dec
mov
jle
lea
repnz
loope
push
cmp
adc
xor
sub
mov
data16
int3
pop
loopne
adc
lods
xor
jnp
inc
ss
inc
add
cli
mov
jnp
push
fildl
mov
dec
xor
aam
mov
or
xor
loop
imul
out
hlt
in
stos
pushf
popa
out
push
mov
xchg
fistl
push
sbb
jo
sub
popf
xchg
jo
lahf
add
leave
andb
mov
push
popf
or
test
lods
adc
inc
aaa
mov
sub
stc
in
jg
cmpsl
lret
mov
cs
fbld
loopne
inc
push
mov
jo
cmpsl
pop
jmp
jo
jno
dec
cli
pop
outsb
stos
xor
xchg
adc
add
movsl
push
inc
lret
gs
jo
jecxz
negb
jo
leave
pop
adc
jno
js
lahf
inc
lea
outsb
jbe
push
sub
testb
sbb
jo
xorl
jo
cmp
nop
leave
jno
mov
pusha
dec
or
mov
adc
ret
insl
test
cltd
repz
push
jo
add
pop
pushf
nop
fbld
test
jae
jo
sub
mov
and
scas
add
jnp
int
stos
inc
loop
mov
sbb
arpl
pop
xlat
das
ja
adc
ljmp
xchg
push
inc
bound
push
sti
negl
xor
mov
mov
mov
loop
cld
bound
stc
ljmp
out
or
xchg
pop
insl
mov
mov
hlt
into
mov
pop
inc
stc
cmpsb
mov
sub
xlat
mov
insl
in
fwait
jb
cmp
out
jl
jle
andb
jb
or
into
mov
cmp
sbb
lods
cmp
in
js
pop
scas
fs
push
fsubr
cwtl
ljmp
sub
pop
mov
or
push
out
mov
sti
dec
or
fdivl
fists
hlt
xchg
jo
push
sbbb
sbb
gs
mov
push
xorl
bound
sbb
jo
lahf
stos
mov
xchg
jne
sahf
push
mov
into
arpl
nop
mov
int3
je
hlt
jne
mov
add
rdtsc
cmpsl
sub
lds
inc
addr16
nop
out
loop
cs
jbe
scas
ret
aas
mov
addr16
in
ss
insl
call
xlat
pop
and
rcrb
jo
aam
cmpsb
lcall
dec
jmp
sbb
mov
and
add
sub
jo
nop
test
shll
push
mov
pop
mov
push
jo
jg
push
aam
in
jo
ds
in
cmpsl
mov
add
push
push
mov
scas
fcmovne
repz
push
mov
les
lds
jo
xchg
and
fnsave
imul
mov
int
adcl
xchg
loop
or
mov
jno
mov
push
jbe
cld
cli
js
mov
adc
stos
mov
sbb
rol
int3
fmuls
popa
sbb
std
adcb
push
out
pshufw
daa
jo
or
push
lods
sbb
mov
jo
or
orb
cmp
add
and
repz
repnz
inc
je
cmp
mov
inc
mov
dec
push
mov
and
scas
jmp
andl
pop
fcmovne
aaa
fidivs
rcl
out
subl
xchg
mov
jb
iret
test
testb
mov
mov
sti
add
pop
xchg
orb
jo
mov
xor
xchg
adc
jo
data16
mov
in
jo
jae
popf
sbb
and
int
shlb
dec
fnstsw
add
adc
add
sbbb
mov
and
cs
pop
mov
inc
inc
xor
adc
mov
mov
and
test
lea
xchg
in
mov
leave
sub
je
nop
aaa
adc
jo
dec
xor
lahf
ljmp
into
rcr
jae
jo
pop
clc
js
xor
jo
jecxz
imul
mov
jb
inc
mov
cwtl
and
jo
xchg
aad
mov
mov
push
xor
jo
inc
xchg
test
scas
jo
movsl
adc
setnp
mov
aas
add
jo
sub
mov
jo
sbb
stc
fdivs
test
cltd
les
incb
aas
int3
jo
inc
push
jns
dec
adc
pop
fnstcw
jg
jo
push
fidivs
mov
adc
or
movl
imul
and
sbb
jns
imul
jo
mov
out
mov
xchg
icebp
sbb
or
dec
cwtl
jne
jo
xor
inc
xor
push
or
adc
cmp
aaa
lret
dec
mov
test
iret
jo
mov
adc
dec
inc
fwait
cmpsl
jns
ljmp
stos
fistl
mov
enter
in
jo
mov
jo
xchg
lods
adc
add
fldenv
and
pop
xor
push
scas
inc
std
lock
sub
add
mov
xor
jne
jbe
mov
lret
mov
fists
test
das
xchg
jle
dec
push
xchg
mov
out
pop
dec
mov
jo
xchg
mov
cmp
fs
jno
adcb
jo
inc
push
xor
jo
outsb
mov
sub
cmp
cltd
imul
sahf
jo
int
pop
call
xorb
into
and
jo
cmp
das
mov
data16
dec
pop
scas
test
sbb
ss
sub
jl
and
and
hlt
data16
and
fnstcw
mov
into
ret
mov
xor
gs
cmp
jecxz
ljmp
scas
pop
in
cmp
aad
js
and
pop
sbb
and
add
cmp
enter
or
pop
cs
daa
outsb
mov
push
adc
bound
jbe
xlat
mov
inc
jo
xchg
inc
or
mov
jo
movsl
es
mov
aas
lret
sbb
js
xchg
cmp
jae
mov
scas
inc
arpl
rcl
pop
jo
mov
inc
add
pushf
test
pop
imul
add
inc
jl
jo
jns
insl
cmpsl
jnp
sub
and
repz
in
nop
fcom
popf
dec
xchg
lods
jp
enter
jo
inc
je
ja
fxch
mov
jg
pop
out
cli
jb
push
loope
lods
adc
and
jo
icebp
pop
inc
and
lods
aaa
shufps
dec
pop
jecxz
inc
imulb
mov
or
and
pop
or
aaa
pmullw
sub
outsb
or
bound
in
clc
mov
cmp
push
mov
or
xor
jo
cmp
data16
and
jo
adc
push
xchg
cmp
pop
mov
push
adc
shll
imul
add
mov
xor
xchg
mov
shll
les
in
inc
cmp
dec
add
sub
jo
add
in
jno
lock
or
outsb
das
jo
jae
sbb
movsl
std
xchg
jmp
loope
in
jmp
pushf
les
cmp
rclb
int
repnz
pop
divl
por
lock
aam
jnp
mov
sub
shl
cmp
jmp
mov
push
enter
cmp
dec
push
mov
add
fistpll
adc
std
xor
test
xchg
fbld
jbe
or
dec
ds
shl
fstl
mov
cmpb
xchg
int3
push
cmp
add
push
sub
pop
sub
push
shrl
cmp
bound
je
arpl
fcoms
lods
mov
daa
ljmp
stc
insl
es
repnz
jp
sti
jo
or
push
xorl
ret
out
push
in
xor
sub
das
dec
mov
or
pop
mov
loope
insb
jl
subps
sbb
jl
arpl
das
nop
push
pop
dec
jmp
mov
nop
fstl
jl
fiadds
jg
shll
fldt
push
pop
jl
adc
loopne
sbb
pushf
add
fidivl
inc
in
sbb
divps
dec
loop
mov
lock
fstpl
adc
jno
sub
jnp
cli
or
testl
add
je
lock
jae
xor
adc
sti
ds
shll
out
jmp
jne
xchg
nop
pop
jmp
loopne
or
sbb
and
or
scas
jg
arpl
mov
jne
sub
rclb
scas
mov
jae
outsl
xchg
push
adc
lods
int
xor
adc
push
addl
fst
pop
dec
jnp
andl
jns
shr
add
out
jae
in
repz
or
add
pushf
cmc
inc
mov
lock
xorl
stos
fs
arpl
sub
jmp
int
nop
std
push
gs
sarb
mov
pop
jmp
jno
pop
mov
or
lock
pop
pop
loope
push
pusha
imul
mov
cmp
ret
jp
clc
xchg
dec
mov
mov
sbb
ja
lock
pusha
cs
jae
adc
je
push
lret
mov
mov
add
push
jne
cli
ret
aad
lds
idivb
ret
pusha
pop
jae
cmp
arpl
mov
jo
push
cmp
mov
adc
out
xchg
cmp
jae
mov
shrd
arpl
mov
push
enter
lcall
cmp
nop
push
mov
or
push
and
js
out
jle
int3
lock
lret
add
xchg
daa
mov
fistl
stos
push
pop
adcb
sahf
mov
mov
or
push
xchg
and
dec
xorb
dec
mov
push
outsb
jmp
mov
std
js
subb
out
popf
insb
scas
jae
and
fnsave
push
adc
into
xor
hlt
cmpsb
jmp
and
jnp
mov
jns
hlt
lds
inc
lock
orb
arpl
jns
jle
into
out
int3
sub
push
jle
lret
cmpsl
push
cli
fs
sub
nop
lds
arpl
ljmp
dec
jo
fwait
cli
inc
shlb
jbe
pushf
push
movsl
fs
jp
sti
and
sbb
xor
dec
out
popf
mov
inc
sbb
idivl
xchg
and
jle
arpl
sbb
xchg
cmc
in
push
xchg
xor
pop
testl
call
xor
addr16
jo
cmp
lock
add
fistpl
and
xor
jno
add
fiadds
faddl
scas
add
imul
lods
into
mov
negb
insl
xchg
push
dec
loop
jbe
mov
mov
jns
popf
js
add
or
fsts
sbb
dec
jge
mov
imul
fsubrs
inc
mov
push
lea
stos
mov
fs
jge
cmpb
xchg
test
inc
insb
shlb
add
cs
mov
jl
test
push
cmp
mov
adc
pop
in
das
jmp
int3
insb
cmp
in
imul
jb
addr16
dec
pop
inc
mov
or
aaa
into
stos
pushf
arpl
dec
jns
mov
add
xor
sbb
clc
scas
ret
pusha
arpl
mov
adc
shl
cmpsb
xchg
jnp
jl
repz
out
xlat
inc
sbb
addr16
push
push
test
lahf
mov
fwait
lahf
adc
mov
in
cmpsl
push
int3
imulb
mov
jns
sti
and
out
add
mov
andb
sbb
adc
sahf
cwtl
push
cmc
std
das
pop
out
leave
shl
out
loopne
lock
xchg
mov
insl
andb
jle
pop
pop
xlat
cli
and
sbb
cmpsb
sbb
jae
stc
cmp
push
xchg
mov
pop
js
xorl
mov
pop
mov
push
mov
fs
arpl
rorb
jae
sbb
rcl
insl
jb
test
push
or
sbb
call
mov
or
pushf
test
jae
lods
xchg
mov
pop
push
scas
aaa
cltd
inc
cmp
out
or
lret
insb
pusha
xchg
inc
out
lods
outsb
push
pop
or
rep
fdivl
mov
dec
jb
push
inc
fiaddl
cmpsl
stos
fdivp
mov
fnstsw
fisttps
push
icebp
or
sub
push
aas
icebp
test
fucom
outsl
std
insl
inc
jecxz
jmp
scas
adc
addl
sub
mov
xchg
mov
add
xchg
insb
outsb
int3
stc
lret
aad
sti
jne
add
sahf
in
imul
push
mov
cltd
insl
loopne
pop
hlt
add
jge
jmp
jne
insl
ret
das
mov
fwait
mov
inc
and
sbb
int3
xor
mov
hlt
daa
xor
enter
out
mov
pop
out
or
jge
or
enter
into
sub
and
jge
jae
addr16
mov
bound
ja
pop
fucomip
inc
dec
ret
jmp
xor
mov
lcall
inc
or
insb
ret
pop
jb
idivb
xchg
pop
repnz
scas
fwait
inc
cmp
test
loop
sarl
jge
push
dec
push
xchg
or
test
ljmp
pop
arpl
repz
in
push
mov
mov
dec
fsubp
add
test
lds
jb
stc
insb
addr16
gs
lock
pusha
pop
xchg
in
sbb
jge
gs
test
loopne
jno
pop
jmp
jg
xor
and
sub
dec
in
mov
xchg
add
mov
lods
fadds
arpl
xor
jle
cmc
test
and
xor
addr16
mov
pop
loopne
neg
leave
roll
xor
sbb
jge
movsl
repnz
ljmp
dec
xor
mov
mov
and
dec
or
jl
mov
jns
mov
sbb
mov
scas
popa
push
dec
sub
or
jmp
call
jae
push
icebp
mov
mov
clc
repz
movsb
jns
mov
or
into
cmp
jae
xchg
push
js
aas
movsb
popf
fstpt
arpl
cmp
mov
out
fnstenv
sub
fs
push
cltd
or
sub
stc
iret
test
jmp
push
cld
push
out
pop
test
push
jl
ret
out
jnp
cli
mov
jge
movsl
sub
ss
cli
inc
in
jle
js
jle
cld
cmpsl
jp
jmp
mov
and
sub
cmp
icebp
mov
and
es
fmul
or
movsl
jecxz
cltd
pop
xchg
js
or
or
pusha
xchg
push
das
fcompl
cmp
fidivrs
push
push
stos
add
mov
out
xchg
sbb
enter
xchg
inc
add
in
mov
sub
nop
mov
insl
jnp
shlb
shlb
inc
adc
dec
push
imul
insl
lahf
scas
out
fxch
xchg
inc
xor
test
lock
and
push
sub
sub
or
in
mov
or
lods
cmc
jne
insl
pop
cli
mov
stos
cmpsl
push
xor
adc
and
jae
fucomi
pusha
cltd
sbb
xorb
jnp
lahf
icebp
fnstenv
ret
mov
decl
xor
mov
inc
loopne
cmp
sahf
inc
mov
inc
or
jae
and
add
mov
out
mov
jae
in
rcrl
fdivl
cmp
clc
fyl2x
pop
and
sbb
dec
push
jle
cltd
outsl
mov
addb
les
nop
cmp
sbb
jae
or
fsub
mov
arpl
int3
inc
or
cmc
je
pop
mov
dec
pop
fisubs
xor
cmp
clc
sbb
loopne
arpl
aaa
enter
inc
sbb
pop
outsb
pusha
add
mov
movsl
int3
out
ds
or
dec
adc
mov
mov
je
mov
outsl
pop
xchg
imul
insb
mov
jg
fldcw
xchg
jae
adc
pop
sbb
mov
lahf
sub
jae
xchg
and
jge
mov
push
loope
push
dec
scas
notl
int3
sub
hlt
out
jae
inc
mov
movsl
jecxz
outsb
or
inc
in
notl
fxch
or
sub
pushf
dec
out
cmpsl
mov
mov
clc
cmp
cmpsb
mov
out
mov
subb
xchg
sbb
jns
jae
test
int3
scas
mov
mov
adc
sub
jo
push
rcrl
cwtl
js
test
jns
mov
ds
aas
xchg
les
push
add
jb
jl
push
ds
and
lret
repz
in
imul
les
and
or
and
mov
pop
xor
jl
pop
sbb
ljmp
aam
das
icebp
push
lcall
ficoms
cmpsl
jmp
imull
test
sub
out
aad
loop
out
jae
subb
push
scas
pop
push
jbe
mov
inc
push
mov
in
lahf
loopne
fnstenv
lds
imul
unpcklps
cmp
add
ud1
cmc
int3
sbb
lret
inc
sub
dec
cmp
aas
sub
pop
imul
ficoml
mov
sbb
inc
loope
add
insb
fs
add
lcall
and
cmpsb
ljmp
and
ret
or
fstps
jl
pusha
pop
out
sub
xor
sbb
test
pop
adc
xchg
xchg
leave
xchg
mov
add
imul
lcall
cmp
add
inc
lock
dec
adc
mov
jg
repnz
dec
ljmp
jo
movsl
sbb
inc
sbbb
popa
jo
inc
sbb
pop
xor
jp
lea
ud0
mov
mov
lret
addb
xor
pop
jb
outsl
jl
jo
push
lahf
pop
sub
jge
mov
movsl
add
mov
nop
mov
mov
jo
in
std
push
and
mov
fbld
inc
push
and
cmp
push
jge
outsl
jmp
loopne
leave
mov
pop
jbe
fdivs
shll
jp
fldlg2
jmp
hlt
js
gs
add
int3
jo
or
sub
push
jo
das
adc
pop
mov
inc
fidivrs
jo
jg
imull
mov
dec
jecxz
stos
push
std
mov
xchg
cmpb
add
sub
dec
jo
icebp
xlat
cmp
scas
jo
dec
jge
or
mov
jo
xchg
es
cmpsb
mov
bound
inc
int3
pop
addb
cmp
rolb
dec
pop
cmpsl
loop
lds
jo
test
mul
push
shll
rcrb
arpl
aam
xor
mov
rcll
mov
std
push
xor
cmp
mov
cmp
mov
inc
pop
dec
jo
mov
mov
ds
mov
leave
mov
rol
mov
sub
std
sub
test
push
push
rcr
cmp
adc
repnz
in
push
je
xchg
ljmp
and
jne
jp
sarb
sbb
cwtl
cmp
je
in
mov
push
inc
mov
int3
popa
push
ret
aaa
xchg
or
adc
arpl
mov
adc
or
movb
xor
in
inc
adc
dec
cli
jecxz
ret
lret
mov
xor
je
arpl
jle
hlt
push
fidivl
in
mov
fnstenv
addl
outsl
and
fdivs
repz
divl
subb
enter
push
dec
imul
imul
jge
pop
popf
push
fisttpl
jg
lds
add
pop
inc
jo
mov
inc
xor
addr16
arpl
jg
movb
dec
jnp
jb
insl
jae
sbb
dec
dec
jl
fbld
inc
sbb
ja
sahf
daa
push
std
arpl
xchg
mov
xor
orb
mov
mov
inc
sahf
or
ljmp
and
jle,pn
lret
mov
lretw
icebp
dec
test
sbb
mov
lcall
mov
add
adc
lds
xchg
enter
mov
push
es
jle
cmc
push
xchg
cmp
add
out
adc
test
inc
jle
or
outsb
sbb
scas
ss
dec
mov
repnz
rcl
ljmp
lahf
adc
dec
push
dec
jae
dec
mov
ficompl
aam
mov
cli
int
fimuls
scas
jge
jo
jge
cltd
push
pop
data16
mov
inc
jmp
jnp
jae
push
jp
imul
and
xchg
repnz
or
ret
decb
push
js
jle
arpl
mov
mov
popf
push
aas
out
pop
sti
inc
cmc
cmp
push
jp
hlt
outsb
dec
jns
jb
fs
lahf
pop
xor
pop
jno
or
je
pusha
testl
lea
or
cmpsb
xchg
aas
stc
shr
lds
sub
mov
jbe
call
clc
in
fidivl
data16
je
xchg
lods
mov
xchg
addr16
sbb
xor
subb
sbb
adc
mov
fwait
int3
data16
jo
daa
cmp
insl
and
jo
imul
enter
jo
out
push
dec
lret
insb
int
sub
jb
mov
ss
cmp
mov
xchg
dec
les
push
pop
inc
push
aaa
mov
pushf
sbb
mov
sbbb
aas
icebp
adc
pop
add
loopne
lret
xorb
dec
in
lods
nop
sub
out
shlb
mov
push
jge
xchg
sahf
scas
in
cmp
inc
xchg
sub
dec
cmpsb
pop
jo
inc
cs
xchg
mov
xor
pushf
mov
xchg
stc
lods
das
imul
jo,pn
inc
inc
lea
es
gs
js
xlat
jo
add
imull
aas
outsb
cmpsl
sbb
ja
pcmpgtb
inc
pusha
fnsave
jno
int3
jmp
mov
cli
jp
out
cmpsl
adc
js
push
dec
bound
aam
or
sahf
adc
adc
mov
cmp
cmp
hlt
mov
jle
scas
mov
xor
add
imul
xor
cld
cwtl
js
lods
mov
pushf
cmpsb
pusha
sbb
push
call
push
dec
cmp
scas
push
jge
cs
fnstenv
clc
and
inc
lea
call
push
imul
add
push
bound
pushf
jle
mov
add
xor
lahf
mov
imul
pop
movsl
ljmp
call
jp
jp
cmpb
test
in
icebp
xor
lcall
insl
in
jns
dec
xchg
sbb
outsb
push
mov
mov
daa
pushf
dec
mov
loope
arpl
ja
mov
jle
call
jnp
aaa
ja
arpl
or
sub
push
sub
add
mov
popf
aaa
int3
popw
add
outsb
xor
std
jb
lds
sub
int3
push
fsubrl
gs
in
mov
shlb
xchg
xor
push
add
popa
jl
out
add
movsb
jb
enter
inc
push
pop
arpl
dec
push
addr16
scas
mov
mov
shll
push
mov
loopne
cmp
sbb
fdivp
stc
and
mov
arpl
in
arpl
mov
lds
adc
jns
mov
mov
push
jle
push
add
inc
mov
jg
cmp
jae
inc
cmp
andb
les
mov
repnz
add
xchg
mov
inc
popf
jge
pushw
outsb
loopne
repnz
push
mov
add
adc
nop
mov
ljmp
ret
clc
inc
icebp
fcoms
sbb
dec
daa
or
int
xchg
iret
std
sbb
in
mov
mov
mov
add
sub
jecxz
pop
sbb
jg
test
jns
xchg
stc
mov
pop
ret
in
shl
push
mov
adc
aad
push
dec
jbe
cmp
add
aam
push
xor
sub
insl
xchg
xor
popf
sti
sbb
cmpsb
mov
call
mov
xor
rol
adc
jle
hlt
xchg
jp
mov
add
xor
jle
stos
mov
mov
ja
pop
packsswb
xchg
repz
scas
dec
dec
xor
imul
rcl
fsts
xchg
mov
pop
xchg
pusha
out
mov
mov
jle
push
lock
dec
add
push
mov
mov
arpl
cmp
jmp
mov
repz
cmp
mov
addb
mov
or
loope
ds
jne
and
xchg
nop
aad
test
das
dec
fwait
loop
lcall
fnstenv
push
js
lock
mov
mov
lret
mov
repz
aaa
ss
or
std
xchg
hlt
jmp
nop
pusha
rclb
roll
adc
cli
push
jnp
and
mov
outsl
and
daa
je,pn
nop
dec
jle
jmp
repz
push
push
cmpsb
flds
sub
xor
push
pop
pushf
aas
jo
mov
icebp
je
lahf
test
mov
les
pusha
fstl
and
cmp
out
push
aad
jge
repz
and
inc
dec
push
frstor
imul
jg
xchg
sbb
push
mov
inc
and
push
jae
stc
jmp
mov
pop
ret
out
popa
das
rolb
adc
mov
push
outsb
lds
lret
out
push
sub
dec
mov
sub
scas
xchg
dec
mov
xchg
popf
jb
sbb
and
dec
int
negl
bound
test
dec
dec
adc
idivb
xchg
imul
dec
sub
inc
jmp
shlb
mov
cs
aaa
lret
aad
jecxz
jo
pusha
add
ljmp
push
les
repz
repnz
mov
fscale
les
inc
lods
outsb
out
jo
mov
popa
sbb
mov
and
cwtl
js
sbb
inc
je
and
jo
push
mov
push
and
ljmp
dec
sbb
jbe
lret
mov
addr16
movups
adc
sbb
jo
mov
imul
aaa
xchg
rcrl
xlat
xchg
mov
xor
push
sub
stos
loopne
mov
test
pop
cmp
sub
dec
cs
and
push
mov
mov
pusha
xchg
ficomps
mov
negl
or
jae
jo
icebp
out
adc
jo
mov
stc
ljmp
cmp
sub
sub
jo
jl
add
add
insl
mov
add
call
cmpsb
mov
jle
unpckhps
ds
lds
mov
xchg
jo
xchg
mov
xor
or
add
into
cmp
stos
in
mov
dec
inc
mov
lds
sti
das
or
in
out
push
sbb
fnstenv
inc
jle
scas
xchg
cmpsl
jo
xchg
mov
jno
loopne
jo
addl
jo
jb
aaa
push
dec
cltd
aad
into
or
fisttpll
cmpsb
push
jbe
push
dec
inc
or
es
ljmp
mov
shlb
xor
adc
bound
jo
fwait
test
cmp
sub
sbb
pop
sahf
clc
ret
add
scas
fcom
pop
js
jo
int
sub
jo
ja
fs
cs
push
out
mov
gs
dec
jmp
mov
or
sub
pop
lods
or
cmp
mov
push
adc
fdivrl
xor
fucom
sbb
and
jo
stos
xor
jecxz
rclb
add
out
push
xchg
jb
jno
mov
jo
dec
ja
scas
and
shlb
jl
pop
mov
mov
lods
jb
nop
or
xchg
jnp
ss
pushl
orb
fwait
aam
sbb
loop
cmova
outsb
push
jp
sti
test
pop
or
imul
push
nop
xlat
push
jbe
and
sbb
dec
pop
test
jo
push
fs
pop
jo
iret
jg
mov
xorb
fsubl
mov
push
jo
xchg
jmp
lret
jl
and
add
iret
cltd
repz
jb
adc
sub
hlt
roll
jo
lds
cmp
test
lock
sbbb
pop
jo
popa
or
or
pop
push
push
jl
shl
aad
repz
push
ja
adc
push
daa
xchg
mov
or
mul
rorl
cmp
jecxz
jo
mov
or
adc
test
out
lret
push
ret
movsl
in
insl
popf
jno
ja
sbb
jo
jge
mov
nop
mov
les
iret
ficompl
adc
dec
aaa
jo
test
cld
in
sub
fidivl
inc
xor
xor
pop
je
mov
and
or
pop
out
cs
jl
fildl
dec
jo
push
pop
lock
out
cmc
push
movsl
sbb
orb
mov
fdivrl
dec
xor
bound
jo
div
mov
outsl
test
pop
sbb
adc
cwtl
jo
inc
aam
imul
xchg
call
sarl
ja
inc
mov
or
sbb
and
and
ja
mov
pop
or
cld
cmp
pop
clc
add
mov
pop
jo
mov
xchg
inc
fs
fmull
test
call
mov
subb
mov
push
nop
mov
jmp
test
pop
add
pop
jo
mov
mov
xchg
inc
int
clc
and
ficoml
push
test
movsl
cs
or
pop
mov
es
push
rcll
aas
mov
jo
gs
pusha
inc
out
sbb
adc
push
xlat
cmovb
push
push
stos
js
adc
push
jo
jle
lods
mov
or
das
mov
in
data16
mov
jbe
mov
jo
mov
icebp
jo
pop
inc
jg
sahf
xchg
stos
jp
or
dec
cld
jmp
jge
or
lcall
mov
add
push
loopne
rorl
lods
xor
enter
inc
jge
mov
lods
jg
jo
sbb
test
mov
out
cmc
hlt
or
outsl
arpl
push
bound
out
adc
jo
gs
jge
cmpb
jo
test
inc
jp
mov
icebp
push
xor
imul
adc
pop
mov
and
sub
xchg
js
mov
jle
sub
or
fimull
mov
iretw
sbb
xchg
aam
sbb
jp
mov
sub
lock
or
xchg
xchg
movsl
jo
popa
fcomp
imul
sbb
adc
or
shr
push
mov
xchg
inc
fcomps
push
xrelease
out
cmp
push
sub
inc
ljmp
js
jo
and
or
xor
cmp
mov
push
fs
inc
cmp
pop
icebp
inc
jne
sbb
jg
fidivrs
adc
jo
test
das
data16
in
inc
mov
pop
ud0
test
fnstenv
mov
fs
mov
roll
jnp
rol
jo
nop
add
or
popa
sbb
mov
out
imul
les
sub
cltd
nop
out
sysenter
push
jne
cmp
jle
ficoml
arpl
addb
sub
jo
into
int
xlat
mov
xchg
pop
inc
hlt
jo,pn
cwtl
mov
mov
jmp
jmp
lods
mov
sub
xchg
sub
imul
repz
xchg
test
cmp
jbe
and
jge
pop
xor
xchg
or
sbb
cwtl
or
hlt
lds
fidivl
sbb
cmp
jo
test
dec
das
push
push
sub
jne
nop
call
push
jbe
rep
mov
out
jecxz
jne,pt
int
pop
mov
shlb
iret
adc
fidivrl
add
mov
mov
xchg
sbb
inc
rorl
nop
int
test
sub
hlt
xchg
ret
insl
lods
jae
add
leave
ret
xchg
shl
test
addb
ret
int
mov
js
cmp
add
jmp
int
cmp
xor
aam
mov
jo
rcr
mov
and
sahf
jo
and
fs
rcr
push
cld
inc
xlat
xor
add
divb
mov
inc
int
cmp
repnz
jg
push
sar
mov
cs
lds
stc
xorl
sti
in
push
push
sub
prefetchnta
sub
test
in
dec
cmp
jae
ja
mov
inc
jno
cld
ss
xorb
mov
insb
sub
mov
hlt
or
fsqrt
xlat
mov
xorb
xor
rorb
scas
mov
rcll
and
hlt
lds
push
jo
add
or
mov
out
ret
popa
hlt
jo
mov
mov
pop
mov
xchg
loope
ja
jo
and
inc
clc
test
jp
inc
loop
shr
jo
aaa
rorl
add
mov
mov
stc
and
jle
mov
in
out
arpl
dec
push
mov
negl
cvtps2pd
and
fcomip
dec
xchg
cld
jo
mov
out
jo
ss
jge
xchg
jo
jg
jmp
in
enter
push
loope
lods
pop
jo
jg
jle
iret
add
sbb
outsb
xchg
fstpt
insl
mov
or
fsubl
lret
cltd
mov
jge
xchg
int3
push
mov
lret
sub
data16
imul
pop
inc
jne
inc
pop
in
xor
mov
mov
or
fsub
push
mov
filds
lcall
lock
jmp
mov
jae
or
nop
adc
test
loop
sbb
cmp
jo
es
ret
xchg
fstps
mov
sbb
rolb
xor
jno
stc
jae
jns
xchg
stc
leave
nop
scas
sbb
jg
fdivs
incl
cs
nop
pop
jle
stc
jo
pop
jno
jns
inc
cmp
mov
jl
stos
cs
mov
mov
notl
jae
imul
sti
push
mov
ja
loopne
sub
shlb
dec
pop
lea
loopne
push
xchg
cld
xlat
jae
es
hlt
data16
shlb
divb
pop
fmull
shrl
adc
gs
daa
insl
sbb
push
or
cwtl
pusha
sbb
mov
cmpl
jae
sbb
or
insb
test
dec
stos
sarl
fs
pop
or
sbb
pop
pop
xor
insl
insl
int3
jae
imul
sarl
arpl
pop
icebp
or
add
shlb
mov
xchg
shrb
xchg
in
es
xchg
mov
jo
arpl
push
or
dec
fbstp
loope
cmpsl
stos
inc
leave
xchg
aad
into
jno
fsubp
popa
mov
sarl
pusha
hlt
push
cs
scas
push
sub
push
call
hlt
je
inc
xor
stos
sbb
shrb
stos
mov
outsb
add
stos
loop
xchg
out
int3
lds
adc
or
cmp
or
cmp
mov
std
add
fnsave
pusha
pop
adc
jl
and
xlat
sub
jp
cs
pop
jno
mov
fmuls
inc
lock
xor
loop
pusha
andl
mov
add
mov
or
jae
mov
xchg
xor
lret
mov
fidivs
xchg
aaa
jp
gs
mov
enter
loop
scas
icebp
lock
std
scas
sbb
js
arpl
mov
pop
sarb
xchg
ja
cmpsb
and
fs
adcb
or
ret
lcall
mov
xor
negl
add
mov
inc
call
rolb
and
shll
pop
andb
sbb
push
lods
shll
addb
int3
jle
lock
jp
cmp
fidivrs
inc
out
test
cltd
xchg
cmp
mov
movsb
push
int
push
add
push
sub
movsb
les
stc
pop
add
sbb
out
sbb
pusha
and
jno
shlb
lret
push
xor
popf
lea
loope
aam
ret
es
adc
notl
jmp
cmp
cld
dec
sbbb
jecxz
insl
aad
filds
addr16
addr16
in
cmpsl
int3
pusha
notl
jbe
ror
cltd
mov
dec
or
mov
mov
push
loope
sub
scas
sub
bound
push
mov
and
aas
aad
and
adc
sub
lahf
jp
iret
mov
frstor
fldt
sbb
add
test
rclb
jno
inc
xchg
inc
hlt
inc
test
cmpsl
pushf
bnd
pop
stos
and
rcl
filds
js
hlt
mov
pop
test
mov
pop
add
shl
mov
pop
or
push
sbb
in
ficoml
arpl
pop
pop
mov
mov
mov
popa
iret
jp
sbb
mul
xchg
das
fidivs
mov
in
jb
lock
inc
mov
mov
xor
sub
pop
pop
fnstenv
push
add
mov
stc
xchg
dec
or
cmp
mov
data16
pusha
dec
aaa
loopne
mov
orl
jg
out
mov
es
xchg
lret
push
push
and
addr16
push
xchg
push
sbb
pop
sbb
push
push
out
and
hlt
dec
outsl
arpl
ja
rorb
cmp
mov
and
stos
pop
xor
push
sbb
sbb
lds
loopne
fisubrs
mov
add
push
fnstsw
lret
jb
mov
inc
mov
shr
pop
dec
lock
xor
lea
leave
scas
push
sahf
add
push
shr
mov
mov
push
push
es
pop
push
pop
loope
mov
xor
xchg
test
dec
push
addl
cmp
inc
in
test
popf
arpl
mov
ljmp
adc
dec
cltd
jnp
push
xchg
push
inc
insl
inc
andb
aas
sub
push
mov
movsb
push
out
movsb
dec
mov
out
sbb
mov
xor
loop
in
mov
jle
mov
jbe
mov
decb
test
orb
lea
jbe
pop
jo
mov
iret
stc
jae
sub
clc
dec
and
dec
mov
jl
ret
and
test
repnz
stc
nop
stos
enter
stc
jae
adc
test
mov
jmp
insl
cmp
xorl
lods
sub
inc
inc
inc
rcrl
lret
aam
lds
movsb
push
fnstsw
xchg
add
mov
lcall
xchg
scas
cld
stos
sub
in
jge
sarb
adc
fadd
dec
nop
cli
aaa
add
cmp
inc
pop
mov
mov
mov
sub
int3
scas
loopne
push
lret
inc
stc
xchg
jns
lcall
mov
imul
adc
cltd
jo
arpl
dec
imul
adc
mov
xchg
or
loop
xchg
sbb
jbe
mov
cmpsb
and
push
cwtl
dec
outsb
out
divl
scas
push
filds
push
jo
push
loopne
push
cmp
add
iret
push
int3
and
fucomp
xor
cld
shlb
test
insb
jae
inc
sub
jl
clc
lds
xor
test
shlb
in
dec
dec
add
xchg
mov
inc
out
or
sbb
push
inc
outsb
je
adc
aas
pop
jbe
and
push
shll
adc
push
ljmp
insb
dec
jl
push
lret
in
hlt
push
fisubs
dec
filds
shlb
push
daa
mov
sbb
gs
stos
stos
shlb
mov
shlb
inc
sub
imul
data16
sub
mov
cmc
imul
imul
fistpl
ja
sub
imul
inc
rorb
cmpsl
outsb
insb
out
xchg
sarl
jae
repz
add
pop
push
fiaddl
jge
mov
mov
rcrl
or
dec
mov
add
xchg
mov
insb
mov
push
outsb
dec
push
xchg
mov
fbstp
sub
dec
lea
pop
jo
pop
xor
enter
jo
fdiv
out
xchg
gs
repz
mov
pop
push
jnp
add
or
shll
sub
addl
aaa
test
rcrl
dec
pop
sbb
jo
and
adc
push
pop
inc
push
leave
sbb
popa
lds
neg
push
jmp
pop
xor
or
jo
and
fmulp
jl
push
movsl
fdivl
jmp
adc
out
sbb
in
int
push
or
out
les
shlb
mov
movsl
push
xchg
push
xchg
dec
or
sbb
jmp
xor
subl
or
iret
jns
data16
pop
repnz
xlat
bound
fisttpll
dec
in
fisttps
xor
inc
mull
mov
push
jle
mov
jmp
aad
test
mov
jo
lds
mov
cli
and
insb
and
add
bswap
in
xchg
or
adc
test
js
or
dec
stos
mov
fldenv
divl
stc
adc
mov
adc
mov
xchg
test
push
mov
jo
xchg
sub
jo
addr16
push
jecxz
lret
sbb
sub
and
insl
pop
cmp
mov
xchg
in
push
jbe
js
js
pusha
xchg
in
jo
shld
vprotd
sbbb
int
jns
adcb
outsb
popf
dec
xor
call
xchg
sbb
sarl
xchg
shll
dec
fisttps
push
jo
call
mov
jb
dec
imul
arpl
ffreep
jo
pop
xor
test
jecxz
jl
incl
mov
sub
jle
dec
mov
inc
addr16
mov
mov
push
inc
je
and
xchg
popa
test
sbb
jp
pop
jmp
mov
daa
mov
in
aas
cmp
lds
sub
cld
cmp
inc
int
out
subb
fimull
mov
shlb
test
rol
leave
mov
sahf
loopne
fnstenv
je
add
lahf
out
pop
jmp
xor
and
sbb
mov
aas
pop
jo
inc
into
mov
data16
dec
aad
cs
jns
fwait
aaa
mov
add
shll
in
cs
xor
and
add
sbb
or
dec
stc
dec
jo
xchg
inc
mov
je
jo
out
push
xchg
xor
xchg
jb
sub
xchg
or
add
push
sbb
enter
cmpsb
mov
push
and
dec
sub
pop
in
push
pop
aas
jg
dec
shl
inc
jo
dec
jns
add
mov
ret
push
jb
ret
lret
faddl
sbb
adc
cmp
push
dec
fisubrs
sub
jnp
or
out
push
sarl
and
jo
dec
out
mov
int
mov
enter
sti
xor
cmp
ja
cs
mov
dec
je
out
pop
xlat
xorb
lret
les
jo
cmp
dec
sarl
cmp
lret
hlt
pop
loop
add
loope
xchg
nop
mov
std
jnp
adc
jo
rorl
adc
orl
xchg
sti
popf
jne
mov
cmpsb
data16
pop
mov
inc
adc
imul
jo
jno
or
notl
push
mov
jo
cmp
popl
rorl
orb
pop
mov
mov
pop
cmp
jo
cmc
fwait
sbb
packssdw
sbb
je
xchg
adc
adc
dec
pop
insb
test
mov
ret
bt
jg
or
jo
in
add
in
cmc
hlt
pop
mov
push
imul
jg
nop
dec
mov
loopne
adc
mov
lds
ljmp
sarl
jo
aam
movsb
pop
pop
int
xchg
js
stos
cmc
pop
arpl
mov
outsb
jl
scas
jo
int
xchg
sub
push
incl
addl
dec
into
jb
mov
and
popf
jg
mov
xor
adc
movsl
inc
cltd
dec
pop
cmp
leave
mov
jmp
mov
or
lret
movd
fiaddl
pop
bound
sbb
fsubrl
sbb
in
jo
pusha
lcall
mov
cli
fimull
jecxz
mov
ret
jo
add
xchg
ja
shll
jbe
cltd
fwait
xchg
in
fidivl
mov
movsl
aas
dec
cmp
mov
xor
add
cltd
inc
loop
jno
pop
sbb
lods
cmp
or
jo
add
or
push
inc
into
mov
mov
xchg
xchg
bound
push
nop
jb
ss
dec
js
sub
adc
sbbb
mov
fbld
push
adc
mov
add
dec
jo
roll
outsl
ljmp
mov
ficompl
cvtdq2ps
or
lret
out
hlt
mov
pop
sbb
stc
nop
arpl
mov
xor
push
jmp
leave
fwait
gs
xor
je
push
pop
mov
dec
jo
xchg
aas
sub
add
jo
repnz
pop
sub
dec
xor
mov
data16
mov
das
sub
adc
mov
xor
jo
enter
int
or
out
mov
push
shr
push
xchg
dec
outsl
sbb
cmp
xor
xor
mov
aam
add
mov
loope
punpckhdq
lods
sbb
mov
outsb
repnz
xor
leave
hlt
jb,pn
push
add
mov
or
fcomp
pusha
lods
jbe
cmp
jo
repz
test
adc
pop
push
push
add
inc
test
fistl
into
lods
call
dec
out
push
or
inc
sahf
xchg
iret
nop
xchg
jnp
outsb
xchg
push
fstl
push
or
movsl
dec
jmp
sub
jo
cmp
lahf
bound
adc
lret
imul
fmul
jo
int
hlt
jmp
test
repz
fs
mov
js
adc
xchg
xlat
mov
and
data16
addb
ljmp
leave
lret
in
in
out
imul
insl
cltd
cmp
inc
or
xchg
shll
movsb
jo
xor
in
stc
lods
mov
push
adc
ficomps
mov
or
xor
xlat
pusha
jae
push
mov
mov
pop
imul
comiss
xchg
cmpb
pop
repnz
jo
jecxz
pop
or
push
popa
cmp
rcr
lahf
jns
jb
inc
sub
arpl
dec
mov
neg
lods
jp
jo
or
out
cmp
xchg
or
jo
fwait
or
mov
inc
jo
mov
mov
sbb
jl
mov
xchg
shrb
xor
fstps
jo
or
sbbl
push
mov
mov
aas
adc
bound
pop
lods
dec
js
das
push
adc
sub
sub
stos
jae
mov
adc
mov
jo
dec
aad
xor
gs
icebp
jb
push
mov
imul
inc
or
test
sub
mov
jo
dec
cmp
xor
loope
popf
dec
sar
or
push
xchg
pop
dec
mov
int3
push
repnz
inc
adc
lret
pushf
sbb
addb
je
adc
mov
lcall
shl
sbb
xlat
outsb
jo
pop
or
mov
xor
jo
mov
or
jo
lret
pop
cmc
mov
mov
shr
lahf
push
in
push
dec
iret
pop
inc
and
adc
ret
sbb
pop
xor
mov
sbb
mov
dec
pop
lds
outsb
flds
jmp
shr
or
mov
stc
stc
xchg
sbb
dec
and
xchg
outsb
add
mov
js
shll
push
sub
rcr
sub
jne
mov
aas
adc
ds
add
insb
push
pop
sbb
movsb
es
sarb
jp,pn
dec
cmp
mov
push
out
pop
je
addr16
mov
test
fistpll
sub
xlat
les
and
adc
xor
and
outsl
jle
jb
push
ret
scas
pop
lcall
rcll
mov
arpl
outsl
shll
add
and
test
xlat
vpmulhuw
lea
mov
out
and
push
outsl
imul
add
movswl
jae
rolb
lea
adc
mov
mov
call
gs
cmp
out
imul
xor
cmp
jbe
fs
sub
outsb
mov
inc
push
cmpsl
jb
lock
shrb
jp
into
bnd
rol
arpl
pop
loop
inc
inc
imul
and
adc
or
rclb
stos
and
addr16
push
jbe
hlt
clc
jae
mov
bound
push
std
push
insl
mov
jo
stc
pusha
inc
ret
cmp
mov
jo
lret
or
in
dec
mov
sub
dec
jns
sbb
xchg
or
lea
add
cwtl
xchg
sub
nop
sarl
jmp
icebp
xor
pop
sub
js
outsl
xchg
cmp
mov
and
jo
int3
inc
jmp
mov
jg
fnsave
pop
sarl
in
jbe
mov
dec
mov
imul
xchg
mov
cwtl
push
push
ret
cmpsl
sbb
loop
sub
sub
mov
or
movl
scas
aas
stos
int3
xor
mov
jo
xor
and
ljmp
pusha
shll
cmc
push
mov
call
in
mov
jmp
pop
lds
movsb
add
fadds
sbb
cld
mov
mov
jmp
loop
js
adc
pushl
and
or
out
pop
negb
imul
inc
mov
cmp
in
rorl
vmwrite
mov
aad
adc
xor
adc
pop
sahf
fidivl
xor
fbld
repz
jo
daa
jb
cmp
sarb
js
mov
adc
ss
fimull
sub
orb
lds
and
fcomps
mov
xor
aam
mov
xchg
inc
rcr
cmp
imul
fwait
xchg
mov
aas
lcall
jo
adc
cs
cmc
insl
jo
cmp
sub
ljmp
repnz
cmpsl
xor
lahf
mov
test
mov
dec
jp
jo
fcomps
dec
test
cmc
stos
mov
stc
add
xor
testl
jl
jo
mov
aas
movups
cli
xlat
push
test
out
jo
fiadds
xchg
jae
mov
ds
jmp
cmp
push
movsb
jo
cmp
scas
lret
clc
sbb
xchg
cmp
enter
rcrb
inc
ljmp
and
pushf
mov
dec
test
adc
add
and
xchg
in
mov
cmp
jo
xchg
pavgb
pop
cs
aas
push
xchg
pop
in
xchg
fstl
jo
js
push
adc
push
and
je
out
xor
unpckhps
xchg
or
js
shlb
jmp
aas
pop
mov
jo
mov
popf
outsl
dec
inc
xor
cwtl
in
fistpll
lea
jo
jno
pusha
ljmp
leave
xor
adc
add
inc
imul
pop
jo
rcll
lods
dec
popf
pop
jo
jb
fistps
sub
mov
lods
movsb
cmp
rcll
bound
ret
inc
rolb
call
push
dec
or
nop
out
cmpb
aam
jl
sbb
jo
mov
add
xlat
jo
in
insb
mov
scas
shlb
inc
std
testb
bound
lret
pop
cmp
xor
pop
inc
jo
sbb
cwtl
imul
js
pop
adc
sub
fldz
push
lds
stos
jo
xlat
scas
jp
lret
jo
and
imul
mov
mov
mov
push
jo
dec
and
in
stos
imul
push
enter
xchg
jbe
sbb
inc
insl
ja
lods
jo
mov
shlb
jg
jo
bound
cli
cmc
cld
imul
cmpsb
adcb
dec
mov
xchg
push
movsl
mov
cs
shlb
pushf
jmp
sti
cmpsl
adc
push
add
pop
xorb
jo
out
mov
test
inc
mov
mov
daa
push
scas
in
jb
nop
jl
cmc
mov
pop
js
xchg
sub
and
ret
outsl
lar
in
loopne
xor
push
sub
cs
xchg
mov
jo
dec
bound
jo
lret
cmc
lea
pop
or
out
fldcw
setg
hlt
xchg
jae
pop
invd
pop
addr16
push
packssdw
jo
xchg
pop
in
stos
lock
sbb
inc
pop
push
pop
mov
sbb
or
dec
fs
nop
xchg
insl
addr16
xlat
outsl
sub
sbb
add
and
cs
jo
and
mov
xor
add
loopne
andb
sub
sahf
subb
push
ret
addr16
sub
test
ret
jns
push
aaa
in
aas
push
mov
mov
gs
cmovg
inc
push
bound
and
repz
jbe
dec
jo
sbb
fs
push
push
mov
jge
jne
lock
and
inc
orb
sub
loope
push
sub
stc
jb
xchg
jb
mov
js
cmpsb
xchg
push
mov
aam
shr
pop
push
push
fldl
jo
mov
out
insl
mov
jo
outsl
mov
xorb
jmp
adc
push
movsl
jp
iret
xor
dec
mov
pop
or
sbb
cmpsb
lret
dec
repnz
mov
sbb
sub
jo
mov
daa
push
cmp
mov
dec
jl
mov
push
out
sbbb
in
je
jmp
arpl
push
ja
pop
loope
insb
cld
jno
insb
mov
jne
xorb
push
xchg
xchg
and
inc
jge
mov
nop
rolb
js
cmc
xor
out
pop
cmp
pop
xor
fcoms
and
jns
dec
xchg
notl
push
sub
dec
sbb
xor
fstpl
pop
jo
das
mov
jp
xchg
inc
lret
lahf
mov
filds
sarl
adc
outsl
cmc
jo
inc
insl
cwtl
mov
rcrl
in
icebp
jp
fwait
adc
lea
shll
push
outsb
jo
dec
xchg
jge
adc
xor
pop
fs
sbb
cmp
and
js
int
or
push
push
icebp
jo
mov
test
mov
in
cmpsl
xchg
popa
jb
jo,pt
sti
rcrl
sbb
pop
push
pop
iret
xchg
sub
icebp
cwtl
cli
repnz
push
rolb
lock
out
mov
xchg
xor
call
test
scas
sub
xor
adc
dec
jns
sub
or
sahf
test
adc
outsb
cmp
cmp
test
ss
mov
jo
scas
inc
push
sub
imul
jo
fucom
test
jo
inc
fcomi
daa
sub
jg
sbb
scas
mov
paddq
jge
jb
jo
mov
rcll
mov
push
shlb
fimull
push
pop
sub
lea
js
mov
cmp
mov
adc
loop
jo
loope
in
nop
sub
test
setnp
push
test
dec
dec
jno
pusha
pushf
pusha
pop
test
inc
jbe
sbb
scas
mov
xorb
in
faddl
add
dec
cmp
push
mov
je
lcall
mov
dec
pop
jmp
ficoms
fsubr
push
into
lods
aad
jae
test
push
dec
fwait
dec
jo
mov
mov
xor
loope
dec
hlt
jo
int3
xor
cltd
dec
rcll
in
aaa
jo
or
sub
and
xor
pusha
js
cmpsl
cmp
aas
into
jo
ljmp
cmp
repz
or
orb
mov
and
nop
je
jbe
mov
jp
jmp
arpl
pop
mov
jo
xor
call
jp
jg
adc
cmp
int3
icebp
and
aaa
cmc
sbb
mov
mov
movsl
lcall
jmp
or
pop
stos
lods
ficoml
push
outsb
fistpll
mov
jne
testb
test
int3
ret
mov
leave
push
lock
xor
and
outsb
inc
or
jo
fs
pop
lods
cmpsl
push
mov
dec
add
jae
mov
mov
jmp
mov
mov
sub
gs
sub
repz
call
decb
adc
jg
mov
mov
aas
mov
jo
mov
imul
loopne
jnp
neg
fucomip
fstps
enter
fidivl
push
jg
lea
push
or
int
pushw
sar
out
fistpl
das
mov
lahf
int
mov
jmp
out
cmpb
test
aaa
mov
insl
xorb
sub
or
cmc
aas
add
dec
stos
cmp
jb
mov
into
jg
popf
test
sbb
mov
xchg
inc
inc
sar
int3
push
cltd
push
inc
cmpsb
or
inc
push
out
sbb
push
dec
popl
lds
aam
or
out
orl
sbb
lods
jnp
out
sub
sti
xchg
scas
fists
dec
adc
pop
sbb
sub
int3
pushf
insb
mov
addr16
in
jmp
imul
pushf
jnp
fildll
icebp
insb
scas
data16
arpl
out
and
movsl
mov
jae
fsincos
cmp
movsb
push
fdiv
sub
jle
mov
cwtl
jae
mov
or
push
cmp
jecxz
cs
outsl
ret
or
cmp
ret
arpl
das
xorb
push
xor
insl
and
inc
nop
jg
outsb
pop
cmp
gs
das
inc
mov
and
push
loope
faddp
sub
loopne
push
or
sbb
enter
push
stos
mov
ficompl
inc
sbb
lcall
jl
mov
push
jle
pop
insb
push
cmp
aaa
or
xor
inc
mov
inc
pop
aaa
or
mov
test
int
scas
mov
in
jno
aas
scas
in
pop
sbb
mov
arpl
outsb
fwait
insl
pop
jae
arpl
ss
rcrb
and
loopne
or
shrl
sti
or
pushf
and
icebp
sti
rcr
mov
mov
mov
clc
sub
mov
dec
sbb
sbb
inc
ljmp
popf
shll
cs
mov
jns
in
adcl
cli
mov
in
insb
and
pop
mov
mov
push
mov
repnz
rolb
mov
adc
sub
pop
sbb
xor
add
movsb
scas
jae
and
pop
arpl
dec
sbb
adc
push
push
les
rolb
leave
js
arpl
mov
xor
push
sbb
std
test
and
call
shrb
mov
insl
or
in
ror
nop
jmp
inc
js
jge
mov
into
xchg
xchg
and
dec
push
jo
push
mov
fnstenv
arpl
cmpsl
popf
adc
mov
jge
packsswb
push
sub
dec
leave
imul
push
jbe
les
and
push
pop
sub
loopne
add
sbb
mov
jae
rol
insl
lock
inc
or
jmp
sbb
sbb
lret
repnz
lock
call
shl
add
sbb
sub
lods
xchg
mov
into
roll
lock
sbb
pusha
popf
jno
rcrb
sub
nop
mov
out
test
jae
out
push
int
jle
add
shl
sbb
shll
nop
push
insb
shl
leave
jne
push
pop
inc
movb
paddd
lret
dec
clc
rclb
mov
hlt
and
add
pop
jl
test
fistl
add
push
cli
mov
fs
xor
pushf
and
roll
jo
and
push
dec
or
bound
push
scas
inc
jne
test
jmp
mov
push
push
jb
cltd
addr16
aad
out
cmpb
adc
jo
out
mov
mov
xor
cmpsl
cwtl
int
jo
movsb
mov
pusha
negb
jo
mov
sbb
jb
jo
mov
sub
sahf
vpmadcswd
loope
out
mov
mov
and
adcl
mov
scas
jo
shlb
inc
mov
outsl
jg
mov
sbb
in
jl
inc
ret
movsl
dec
ficompl
push
addr16
bound
dec
fwait
xchg
adc
test
mov
or
movsb
pop
ljmp
es
bound
mov
inc
adc
xchg
add
shrl
sbb
sbb
mov
mov
dec
or
stos
inc
or
lods
movsl
in
inc
in
push
scas
sti
pusha
push
das
je
stos
insb
inc
xchg
push
lahf
popf
or
flds
xor
loope
cmp
xor
mov
mov
sahf
dec
jno
jo
mov
mov
movsb
int3
jae
mov
push
mov
push
sbb
lret
insl
mov
mov
lcall
add
std
mov
add
dec
add
mov
xor
fldl
pop
fsubrl
rol
xchg
mov
inc
add
imul
ret
or
inc
jae
xor
scas
clc
xor
jbe
and
pop
int3
lods
mov
push
and
incb
lock
sub
sub
shlb
xchg
arpl
lcall
fidivrs
testb
data16
mov
jo
notl
mov
lock
hlt
push
out
jo
jle
ljmp
sub
movsl
jae
add
xchg
mov
sub
push
dec
rcr
enter
dec
or
insb
mov
in
inc
adc
jo
pop
jb
lods
das
ret
call
mov
inc
gs
inc
jp
js
xor
push
pushf
adc
push
dec
jo
aad
mov
jo
pusha
std
fwait
cld
sbb
fistpll
mov
lret
out
cmc
leave
jb
iret
fwait
pop
stc
scas
cmp
mov
xchg
imul
jo
jb
leave
mov
cltd
iret
jo
scas
cmpl
mov
loop
adc
ret
arpl
lcall
xchg
xlat
jmp
jo
scas
xchg
fmuls
loope
shl
test
bound
pop
lods
mov
aas
fidivrl
negb
cmp
cld
cmp
cmp
cmc
stos
jp
inc
gs
js
arpl
ret
adc
xchg
dec
or
mov
sub
jae
adc
stos
push
cli
xor
rclb
add
mov
arpl
enter
xchg
insb
shll
add
stos
jp
testb
cmp
cmp
cmpsb
bound
arpl
and
shlb
pop
sbb
shrb
and
jo
repz
jae
xor
enter
mov
mov
jmp
add
sub
and
xchg
dec
sbb
fcompl
mov
scas
jne
mov
cmp
mov
mov
sub
clc
inc
xchg
mov
iret
jge
adc
rcrb
dec
or
stos
push
dec
loop
dec
push
push
jbe
dec
jne
int3
fwait
sub
mov
je
jge
jno
dec
mov
and
and
sarl
gs
inc
xor
cli
mov
cmpb
mov
inc
js
cmp
sbb
inc
das
cmp
pop
jo
pop
mov
dec
inc
and
lahf
fistl
xor
and
and
mov
imul
fwait
mov
lods
clc
addr16
mov
push
dec
jp
xor
movsl
inc
xchg
add
int
sub
pop
xor
mov
pop
jne
xchg
pusha
cmp
cltd
insb
movsb
rcl
sbb
push
lds
sbb
mov
cmp
aad
sbb
xabort
xchg
mov
andb
imul
mov
add
mov
lds
dec
dec
lods
lods
pop
je
push
push
fnstsw
jae
xchg
cmp
das
mov
cmpsb
rcr
inc
cs
xchg
dec
xor
movb
sub
movsl
divl
insb
xor
xor
pop
in
sbb
imul
aam
cltd
std
lret
xor
jb
movsl
movsl
push
adc
fcoml
add
aaa
cld
xor
sub
insb
mov
push
xlat
and
and
dec
scas
push
stc
pop
mov
pop
jns
or
sti
cmpsl
and
pusha
xor
fsts
test
outsb
dec
pop
loop
pushf
int3
jae
adc
push
sbb
rcrb
cmpsl
lods
in
bswap
ss
ret
aam
dec
cmpl
mov
mov
inc
cmc
mov
jne
dec
aas
stc
fdivr
insl
xor
mov
jae
sub
ja
in
xchg
test
in
push
insl
jge
jbe
inc
ss
nop
push
mov
test
sbb
mov
pop
out
fisubrl
fs
arpl
xor
push
movsb
je
bound
sub
inc
inc
dec
call
cli
aam
mov
gs
nop
outsl
mov
jp
xchg
jb
stos
in
lcall
mov
pop
test
stos
test
ror
pusha
lock
iret
cmovp
ljmp
cmpsl
pshufw
or
nop
sahf
push
in
ja
mov
jg
sub
ret
leave
add
pop
dec
nop
int3
dec
je,pn
out
jns
inc
cld
xadd
pop
rcrl
push
sbbb
addb
mov
jns
lock
sub
mov
ja
cmpl
aas
arpl
scas
mov
jle
dec
scas
pop
xor
pusha
mov
lods
cwtl
adc
push
add
stc
loop
adc
call
inc
sbb
sub
enter
scas
xchg
sbb
mov
xor
xchg
mov
pusha
mov
jae
into
rolb
movsl
sbb
fistps
and
mov
scas
in
dec
sub
mov
movsb
lahf
push
cwtl
push
outsl
xor
mov
data16
ret
jns
push
sbb
mov
lahf
popf
data16
jle
push
push
sarl
daa
jge
mov
repz
push
add
push
inc
icebp
jmp
xchg
aas
into
add
notb
jns
xchg
popa
or
cmp
or
mov
dec
cmp
and
insl
fnstcw
push
xchg
xchg
loop
shll
gs
outsb
sarl
sbb
mov
insb
inc
sub
push
mov
scas
jle
mov
and
repnz
shlb
mov
andb
push
insb
push
jae
in
in
jne
push
sub
mov
sub
nop
mov
pop
push
cld
stc
cmpsl
mov
jns
xor
mov
add
push
pop
jp
arpl
push
faddl
fcomp
inc
mov
add
pusha
dec
ret
add
loop
je
push
fnstcw
push
sbb
loopne
jmp
lea
push
das
fsts
stc
jne
or
leave
pop
mov
sarl
push
adc
je
cltd
incl
sahf
aaa
mov
pop
mov
out
cmp
push
shrl
jb
in
pop
push
adc
add
in
frstpm(287
test
pop
push
dec
dec
jmp
ret
outsl
push
cmpsl
nop
int3
testl
dec
aad
or
dec
adc
outsb
shlb
push
push
lahf
jne
pusha
dec
pop
popa
push
jae
push
sbb
clc
mov
or
add
sub
jg
xchg
mov
fwait
adc
xchg
mov
mov
cmp
shlb
push
push
stos
dec
mov
insb
addr16
or
out
jbe
lock
out
insb
int3
outsb
mov
lcall
ja
and
test
psadbw
xor
fcmovnbe
scas
shrb
mov
xor
and
jnp
sub
xchg
push
fbstp
mov
mov
push
inc
shlb
aaa
dec
mov
pop
das
das
call
and
push
push
outsb
sbb
push
in
std
cli
add
testb
add
pop
call
arpl
mov
sbb
aaa
jle
jno
test
sub
mov
call
adc
loop
or
xchg
xchg
mov
mov
cmpsb
dec
leave
aas
pop
std
jo
jmp
ja
add
sbb
fcmovnb
jmp
or
jl
lret
push
xor
push
push
int
jno
js
leave
out
adc
pop
bound
test
add
jo
insb
aad
push
push
inc
jbe
stos
cld
xchg
sti
push
out
outsl
jg
lods
pop
mov
aam
subl
cmpsl
push
les
out
daa
test
jle
mov
arpl
cmpsb
push
ret
pop
cmpsb
out
fs
fucom
mov
cmpsb
fs
jnp
jp
scas
jae
xor
daa
mov
icebp
push
xor
fcmovnbe
push
arpl
roll
out
mov
add
xchg
jae
or
sbb
xor
bound
jmp
add
aam
mov
mov
mov
pushl
jmp
das
daa
les
mov
xor
cltd
sbb
fs
cmp
dec
cmp
inc
jp
pop
das
cli
shrl
xchg
mov
mov
outsb
rclb
adc
push
jl
add
sub
shlb
mov
das
mov
scas
mov
fnstenv
inc
incl
mov
cwtl
push
in
push
pop
jo
hlt
push
sbb
push
out
cmp
ss
mov
in
insb
add
xor
mov
pcmpgtw
cmp
lods
push
popf
cwtl
add
adc
push
xorb
scas
or
mov
inc
adc
sub
insb
adc
outsl
inc
insb
inc
pop
fistl
out
outsb
sbb
lea
loop
dec
push
lcall
push
adc
push
mov
xor
jle
and
mov
aad
outsb
jle
arpl
rcl
mov
inc
pop
push
pop
mov
cs
or
mov
mov
push
fstl
sbb
xchg
ljmp
test
pop
or
mov
cmp
jbe
insl
sbb
sub
inc
xchg
cld
scas
insl
push
jae
inc
xorb
and
jge
push
xchg
mov
repz
ja
jae
icebp
xor
mov
and
negl
mov
ret
jno
mov
inc
ds
push
pop
mov
inc
and
faddp
add
es
jae
je
push
inc
pushf
mov
or
out
es
arpl
divb
addr16
into
mov
xor
xor
in
mov
sbb
inc
mov
arpl
push
inc
jp
imul
mov
jmp
lahf
stos
lock
nop
scas
out
xor
test
jg
dec
popf
mov
rclb
sarl
lret
outsl
ds
sub
jnp
fs
dec
jle
jne
sbb
push
insb
mov
or
mov
push
or
arpl
test
pop
sbb
fs
loope
mov
xchg
pop
ljmp
sbb
pop
ljmp
or
cld
adcb
cmp
inc
sbb
jno
xchg
test
cmpsl
add
jb
out
pandn
int3
mov
mov
insb
xor
test
mov
jo
sub
sbb
xchg
mov
jecxz
dec
outsb
aas
fiaddl
out
xlat
fcmove
scas
jo
push
pusha
mov
lods
shlb
sub
inc
sub
jle
sbb
rep
movsb
push
jge
adc
pop
bound
fwait
sqrtps
adc
sub
cmp
and
in
js
outsl
or
icebp
or
sbb
cmpsb
xor
fs
jae
into
push
lea
cmpsl
jmp
cltd
lods
push
insb
out
dec
jg
sub
xchg
cmpsb
sahf
jmp
mov
popa
fisubl
mov
dec
out
pop
loopne
popa
push
test
in
sub
iret
pop
pop
push
lahf
outsb
cmp
xchg
inc
insb
or
movsl
hlt
cli
xchg
aas
cmpsb
jae
add
cltd
push
lret
sbb
or
or
jno
adc
fs
xchg
movsl
lods
push
lret
sbb
call
dec
cli
push
je
inc
sub
hlt
mov
xchg
inc
push
fistpl
test
sbb
xor
jle
cmp
lods
sbb
imul
insb
ret
cmc
movsl
hlt
leave
arpl
das
ret
sbb
pop
inc
fidivl
mov
xchg
mov
ss
inc
stos
in
out
xchg
out
cmc
pushf
in
cmp
xor
andb
pop
fmull
in
mov
cmp
mov
mov
addl
jno
cmc
inc
adc
flds
sahf
pop
fisubs
lods
out
loop
addb
dec
jge
jg
imul
add
mov
out
loope
es
cmc
cmp
and
sbb
int3
lock
mov
mov
lret
jmp
pop
out
rcl
cltd
mov
es
leave
scas
out
jle
mov
add
ljmp
out
cmp
mov
or
cs
imul
leave
rorb
outsl
lret
lret
jp
sub
pop
popa
jp
cs
mov
push
push
mov
sub
lret
shrl
divb
ficoml
int3
loopne
nop
arpl
jbe
scas
pop
sub
mov
or
shl
mov
sbb
out
mov
mov
shl
cmpsl
ficompl
mov
mov
fistpll
or
push
lea
add
jl
jae
or
sti
movups
sarb
inc
mov
dec
push
out
and
jae
and
test
mov
sub
addr16
mov
rcrb
push
outsb
mov
add
inc
mov
mov
xor
ss
cli
mov
sbb
lcall
addr16
mov
lcall
xor
leave
mov
sbb
inc
rcll
pop
loopne
mov
push
fs
cmp
add
stc
and
xor
jp
fwait
add
out
jo
jge
mov
mov
andb
lock
rcrl
insb
xchg
jmp
dec
mov
mov
cmp
insb
inc
rcll
mov
pop
ljmp
inc
jmp
mov
scas
mov
mov
mov
lock
push
mov
arpl
test
mov
mov
loope
cs
adc
xlat
int3
mov
cmp
and
pop
outsl
add
or
outsb
lods
push
xor
testb
std
dec
pop
scas
stos
dec
jno
or
es
imul
xor
jae
test
dec
xchg
dec
lahf
fstpt
push
and
jb
xor
and
jns
imul
jmp
rolb
sub
addr16
xor
movsl
outsl
lds
lret
jb
in
enter
rolb
imul
cmpsb
ret
fdivrl
pop
jg
inc
push
loopne
fstl
mov
roll
push
orb
popl
test
pop
fcmovnbe
jb
insb
mov
subb
inc
ja
fstps
sbb
in
push
cmpsb
sbb
insl
pushf
or
cmp
fs
shll
add
inc
and
and
add
mov
mov
sbb
shl
mov
fbstp
ret
fcmovbe
sbb
lock
imul
pop
sub
ss
xchg
insl
iret
cld
in
cmp
and
mov
jge
dec
mov
ja
xchg
repz
stos
int
scas
jmp
mov
push
sbb
sbb
push
or
jle
mov
jae
fists
dec
imul
popl
lods
jle
shlb
jbe
adc
pop
sahf
cmpsb
mov
or
mov
dec
sbb
cli
push
adc
jle
mov
add
enter
nop
lret
push
loopne
lea
iret
cmp
scas
aad
pop
xchg
arpl
rorl
cmpsb
aaa
ss
iret
push
enter
aaa
mov
mov
aad
pop
clc
test
test
and
icebp
mov
push
leave
push
xor
mov
leave
pop
sbb
cmpsl
lock
jns
scas
fucomip
jo
addr16
arpl
insl
add
xchg
xchg
or
call
fisubs
addr16
out
mov
and
push
into
xor
test
sbb
pop
xchg
inc
int3
cmpsl
or
js
subb
mov
ret
ja
or
push
stos
jo
push
loope
arpl
inc
popa
out
and
or
push
movsl
xchg
or
mov
cld
popf
out
sahf
cmp
push
cmp
sbb
and
out
pop
jo
movsb
divl
adc
adc
jo
jne
fnstcw
dec
movsl
jo
pop
in
movsb
jecxz
call
jbe
jnp
or
repnz
ror
sbb
ret
sub
icebp
jno
and
dec
out
jo
leave
cli
push
aam
ss
sahf
out
adc
dec
js
ds
subl
test
aas
cwtl
rcrb
mov
hlt
rcll
or
jo
outsl
movsl
sub
ret
cmp
out
daa
mov
mov
xor
popa
insl
andb
enter
sbb
jo
lods
push
pop
sbb
adc
jae
and
or
out
xor
dec
jno
sbb
jo
movsb
adc
cmpsl
xor
js
outsb
jge
adc
push
ret
ja
cs
je
pushl
sub
or
push
sub
xlat
stc
sub
jbe
js
inc
test
out
lret
sbb
jo
scas
pop
in
lahf
add
push
sub
sbb
cmp
movsl
jo
and
imul
js
nop
mov
jo
dec
cmp
add
mov
jo
pop
or
filds
cmpsb
jo
xor
loopne
int
cmp
andb
cmp
out
cmc
nop
fimuls
jno
jl
jmp
lret
sub
cs
aam
dec
xor
push
xchg
jl
xorb
sub
or
inc
or
fdiv
jae
cmc
jns
jo
mov
stos
pop
push
mov
icebp
pop
pop
mov
jb
or
dec
js
dec
xchg
movsl
jbe
adc
sbb
arpl
jo
pop
insb
cmp
loopne
add
fnclex
inc
jmp
push
js
sbb
addr16
xchg
mov
sub
pusha
movsb
outsl
jg
pop
dec
scas
jo
loope
cmp
sbb
inc
pop
aad
lods
mov
movsb
add
out
inc
mov
push
addr16
push
ret
into
cltd
and
push
aam
jnp
inc
sbb
mov
rcr
and
xor
mov
mov
inc
jle
xlat
mov
jae
xchg
out
fwait
adc
sbb
mov
jns
jae
imul
leave
out
arpl
aad
push
cmp
push
iret
test
aad
xor
mov
sar
sbb
cmp
pop
jns
dec
jp
jmp
fldt
les
movsb
inc
mov
pop
and
sti
fisubs
and
fsubrp
ret
movsl
imul
mov
out
jp
out
xor
or
mov
jno
sub
jg
adc
hlt
pop
push
dec
cmpsl
push
push
data16
les
in
mov
adc
jae
insl
xor
add
aad
add
inc
adc
aaa
ret
pusha
imul
adc
lock
loope
je
popf
shlb
mov
sti
push
add
jle
dec
frstor
pop
int3
std
adc
cwtl
das
mov
sbb
xor
loopne
insb
data16
out
dec
out
hlt
xchg
int3
loope
sbb
push
pusha
inc
stos
mov
jg
ljmp
jle
mov
inc
jle
aaa
cli
push
addr16
es
push
sub
pop
inc
scas
shlb
sahf
in
clc
pop
jle
stos
xchg
pop
push
and
inc
sbb
outsb
mov
pop
cli
mov
jnp
int3
mov
sbbb
mov
sbb
out
int3
scas
sbb
lds
dec
std
jae
arpl
cmp
mov
ljmp
add
sarb
fldpi
daa
or
push
xchg
insw
jae
daa
pop
test
xchg
sbb
xchg
arpl
push
pop
pusha
or
fsts
call
cmp
push
out
clc
cmpsb
ficoml
ficompl
jg
insl
pop
pop
inc
add
scas
xlat
lock
xchg
mov
pop
test
adc
mov
jl
xor
adc
insb
call
pop
jae
push
sbb
sbb
mov
lahf
mov
lcall
pop
iret
or
pusha
das
xchg
jmp
data16
fs
fwait
dec
mov
sbb
cmpsb
cmp
inc
inc
mov
std
mov
data16
mov
and
xchg
xchg
insl
popa
cmp
sub
shr
enter
xor
xor
mov
scas
or
addr16
mov
dec
js
sbb
and
insb
sub
xchg
fidivrs
pop
mov
cmpl
cmp
or
or
punpcklbw
lds
das
fisubl
push
in
fwait
xorl
out
mov
arpl
or
jecxz
pop
sahf
mov
cmp
sbb
add
dec
or
fcoms
les
scas
cmp
xor
fdivl
stc
sbb
fwait
rcll
ljmp
inc
sarl
call
fistpl
pop
ret
pop
jae
xchg
inc
mov
push
cltd
mov
jmp
leave
mov
out
popf
pop
jmp
jmp
push
cmp
scas
cmp
or
ret
pop
and
subl
inc
rolb
lods
out
jl
es
dec
clc
lods
or
mov
movsb
lret
in
jns
call
sbb
adc
dec
sbb
dec
dec
push
push
jge
jns
aas
daa
mov
outsb
mov
out
test
stc
xor
int3
push
das
or
lock
push
cli
sub
mov
sbb
scas
cwtl
rcrb
arpl
xlat
fs
test
in
loopne
push
xchg
insl
not
and
in
out
sbb
sbb
or
addr16
jae
xchg
jb
fcmovnu
xchg
cmpsl
pop
cmp
cli
jne
or
dec
cmp
insl
push
mov
xor
jb
leave
sub
inc
inc
aaa
adc
xor
mov
adc
ljmp
leave
subb
std
jns
push
sbb
ret
add
loope
adc
mov
and
push
mov
lods
push
cmp
cs
sahf
idivl
test
adc
rclb
or
fstl
xor
fdivp
push
mov
pop
loop
rorb
mov
imul
sbb
jg
fsts
mov
cmp
mov
int
push
sti
mov
scas
test
push
imul
jg
mov
inc
aas
in
aad
fldcw
sahf
or
outsl
lods
fwait
test
inc
push
jnp
mov
scas
repnz
mov
loop
jecxz
daa
dec
pop
movb
or
pop
aas
push
sbb
xor
cld
adc
push
push
orb
pusha
mov
sbb
in
mov
sub
jecxz
arpl
mov
test
lods
dec
mov
movb
mov
inc
pop
push
xchg
test
pop
scas
jae
adc
push
cmc
insl
pop
sbb
push
decl
les
jne
sub
pop
sbb
adc
xchg
sarb
xor
xchg
aam
hlt
xchg
mov
and
jb
insl
jns
adc
cmovle
in
jno
inc
aaa
mov
bound
mov
pop
mov
sbb
push
loop
sbb
out
outsl
sahf
out
insb
mull
lret
push
sub
dec
dec
pushf
in
xchg
jle
movsb
sbb
je
rcl
out
data16
in
and
or
cli
mov
icebp
xchg
ret
cmpsb
pop
scas
dec
xor
and
lds
rcll
lcall
loop
push
ds
push
jg
add
dec
cmp
outsl
push
and
pop
mov
sbb
addr16
mov
jae
dec
mov
mov
mov
imul
push
insl
les
aas
mov
or
fistps
out
xchg
js
arpl
out
add
insl
mov
jle
outsb
gs
cli
scas
xchg
outsl
or
jle
std
cltd
jns
jno
out
inc
mov
scas
mov
sbb
imul
jmp
pop
ljmp
pop
aaa
lahf
fistl
bound
pop
in
jns
inc
xchg
stos
jns
mov
aam
cmp
push
sbb
or
pop
jp
fs
insb
arpl
dec
mov
sub
and
pop
daa
ljmp
es
aas
cwtl
push
ret
jb
inc
cs
scas
jp
dec
sub
sar
cmp
pusha
pushf
lock
addl
or
xor
xchg
adc
mov
push
andb
xchg
faddl
sub
arpl
loopne
js
ss
sbb
sub
push
push
arpl
in
cmc
jo
shlb
or
nop
mov
lods
outsb
aam
add
sarl
dec
xchg
xchg
lahf
in
arpl
adc
adc
mov
cmp
in
es
sbb
loop
jmp
mov
inc
scas
fcoml
push
push
sub
push
addr16
or
push
jne
sbb
pop
movsb
mov
dec
out
pop
dec
cld
call
iret
repz
mov
cmc
jns
sub
bound
lock
test
lock
jae
mov
xchg
push
mov
mov
or
cmpsl
jle
arpl
stos
fstpt
fcmovnbe
mov
cmp
pushf
cmp
push
xchg
outsb
orb
je
fistps
ret
stc
adc
inc
jl
nop
out
push
jbe
iret
out
ja
outsl
jge
sub
call
shr
jmp
add
fwait
jg
push
lret
sub
lods
pop
jmp
pushf
pop
pop
and
xchg
in
dec
and
les
jo
jns
inc
daa
pop
inc
add
lods
outsl
sub
data16
lahf
out
popf
xchg
fcompl
dec
dec
mov
out
xor
xor
xchg
loopne
push
stos
jno
lea
mov
ds
mov
imull
int3
and
add
jnp
arpl
clc
jns
jle
or
jb
es
ret
push
mov
orl
mov
in
dec
inc
mov
loopne
popf
push
cmp
adc
inc
data16
or
aam
lret
xor
lret
insl
pop
test
arpl
pop
pop
clc
jp
jo
aas
jns
lea
mov
lods
push
mov
inc
lock
mov
add
inc
cmpsl
pop
rcrb
sbb
dec
adc
test
xchg
clc
in
push
mov
stos
push
lock
lahf
popf
and
dec
insl
sbb
sahf
pop
jmp
into
jno
fcomps
cmpsb
filds
and
push
lods
mov
lds
sbb
repz
jae
aaa
aam
push
aad
sub
cmc
pop
mov
imul
xchg
rclb
icebp
mov
bound
fldcw
data16
ljmp
cwtl
push
mov
inc
cmp
and
and
jno
fwait
xorl
insl
sbb
fisubrs
sbb
or
and
xor
mov
dec
popf
inc
sbb
xorb
and
pop
in
in
add
inc
lret
sub
add
adc
pop
gs
jae
xor
adc
scas
push
nop
xchg
pusha
mov
mov
out
insb
les
sahf
and
std
sub
addb
repnz
xchg
cmpl
pop
push
scas
adc
test
ss
push
leave
or
and
mov
sub
mov
lcall
imul
cmp
mov
in
int
filds
nop
cmpsl
scas
hlt
jns
movsb
insb
nop
xchg
sbb
xor
shrb
jp
subb
dec
lods
jns
or
inc
outsb
jle
les
popf
cmpsl
repz
push
test
jb
hlt
add
nop
dec
aad
inc
push
inc
test
addr16
push
in
and
add
jbe
scas
cmp
pop
or
fwait
dec
das
imul
test
jl
insb
int3
pop
lret
mov
insb
fists
loope
fldenv
arpl
loope
iret
je
negl
mov
sub
sahf
rclb
inc
shl
push
mov
arpl
es
shrb
pop
in
fs
fmull
jb
popf
addr16
pop
es
into
and
xchg
std
xchg
repz
mov
xchg
clc
popl
mov
mov
pop
lret
dec
test
push
lock
push
lds
fisttpl
aam
in
sbb
push
sbb
adc
scas
in
cmp
aam
sbb
or
out
ret
lea
xor
cmpsl
test
xchg
xchg
in
inc
push
cmp
cltd
scas
mov
and
movsb
lds
xor
dec
repnz
dec
mov
adc
push
dec
sub
outsl
test
push
rclb
or
fnstsw
jno
add
sahf
aas
pop
mov
daa
xchg
clc
scas
mov
movsl
js
mov
nop
cmp
test
movsl
push
and
push
dec
lock
inc
iret
daa
mov
cmp
int3
fimull
adc
mov
mull
out
out
push
adc
fs
push
xchg
mov
push
jns
dec
push
test
fs
lock
lahf
mov
addr16
test
jne
lock
inc
adc
jae
sti
pop
sarl
popf
xchg
sbb
sbbb
jmp
sarl
xlat
and
lock
bound
cmpsl
pop
add
lcall
or
std
lods
mov
sbb
jae
push
xor
mov
push
arpl
mov
fiaddl
pushf
or
js
popa
mov
sbb
fcmovnu
and
push
jmp
sti
push
fucomip
push
call
lock
int3
xor
pop
adc
sub
mov
imul
push
sbb
leave
ficoms
in
outsb
add
sbb
dec
mov
adc
or
inc
out
add
cmpsb
imul
cmc
in
xor
call
nop
lcall
repnz
push
imul
gs
pop
js
insb
loop
aaa
cli
shll
arpl
cmp
lods
mov
pop
stos
adcb
mov
xor
ucomiss
xchg
aad
pop
in
call
gs
loop
mov
jae
or
das
add
seto
xor
xchg
out
lret
repnz
movsl
adc
movsb
scas
mov
mov
jp
or
testl
mov
es
ja
rol
xor
out
adc
lret
push
adc
repz
js
sbb
or
mov
cs
loope
add
and
pop
dec
jp
mov
aas
mov
push
mov
mov
andl
sbb
mov
das
orb
cs
sub
insb
out
nop
mov
jns
push
sub
scas
xchg
insl
xchg
xlat
add
fs
cltd
jmp
movsb
pop
pop
leave
ffreep
pusha
leave
loop
cmp
pop
ret
push
jae
fisubl
or
mov
rcr
push
arpl
adc
rcrb
push
in
loopne
sub
mov
xor
pop
mov
fdivl
shll
adc
xchg
mov
cmp
push
xlat
jp
cmpsb
mov
idivb
jge
mov
gs
cmp
add
xchg
fwait
insb
divl
int
movsl
and
add
fcmovnb
arpl
dec
add
add
loop
cli
scas
inc
scas
fdivs
adc
repnz
lea
jnp
pop
or
mov
shl
cltd
jb
add
sbb
pop
in
scas
shlb
mov
xchg
rorl
or
les
jge
mov
jae
je
and
dec
loop
fnop
push
xchg
push
jge
icebp
or
pushf
jp
fs
inc
out
mov
fcomps
jg
mov
adc
lret
and
test
add
push
cli
ja
fstpl
ss
ljmp
and
sarl
cmp
cs
jp
inc
xor
imul
mov
lahf
imul
push
nop
and
sub
adc
icebp
mov
push
movsl
sti
pop
mov
push
mov
shrl
mov
into
mov
or
adc
cltd
jbe
push
outsl
push
fwait
es
or
push
jbe
dec
xor
cmpsb
add
jo
lods
xchg
into
inc
enter
std
sbb
in
inc
orl
xchg
jo
cli
lahf
scas
push
inc
lcall
jns
sub
pop
sub
mov
jl
jp
insl
xor
pop
jmp
add
lea
jno
dec
xchg
cmp
xchg
mov
pop
out
das
xor
dec
lds
adc
cmp
mov
push
rcl
in
mov
cmpsb
icebp
movsl
test
inc
test
jo
ret
gs
sti
xor
mov
mov
adc
cmp
sbbl
jb
test
in
inc
pop
sbb
push
sahf
and
mov
pushf
jp
jo
es
cltd
ja
cmp
sub
test
stos
fdivrs
sub
mov
add
outsl
or
popf
jo
inc
cmp
cltd
mov
cmp
jo
nop
outsb
mov
imul
sub
out
ret
pop
xchg
inc
sahf
add
dec
jo
cmp
cmp
xstore-rng
cmpsl
add
nop
shlb
xchg
dec
and
jo
xchg
ja
jbe
push
in
popa
sub
or
mov
rorb
jge
data16
outsb
lods
pop
mov
jo
inc
jbe
push
rcrl
or
adc
pop
leave
nop
pop
xor
movsb
or
ja
lods
std
cs
sahf
ljmp
jo
pop
popf
lahf
mov
xchg
mov
cmp
cmp
and
bswap
and
bswap
test
bnd
orb
pop
stc
in
hlt
push
scas
pop
repz
out
push
and
add
outsb
or
or
xchg
ss
js
shl
jo
push
inc
lcall
ss
loope
stos
jo
mov
shr
in
cmp
pop
repnz
cmpsb
loop
jo
xchg
bound
push
lods
cwtl
aas
mov
or
sub
cs
fistpl
sbb
jnp
jp
jb
or
jo
jno
inc
sub
sarb
ss
cltd
mov
xor
gs
sub
scas
sti
iret
stos
ja
push
mov
cli
push
je
mov
inc
jo
adc
pop
lret
xor
jo
jns
sti
mov
pop
sub
or
and
jo
sti
aaa
popf
gs
sub
jne
mov
xlat
inc
and
pop
xchg
add
dec
pusha
adc
jo
imul
mov
ret
aam
push
xor
into
mov
jg
movsb
lret
fs
jae
bound
jb
clc
pop
jns
insl
bound
sti
repnz
arpl
cmp
sub
pushf
fs
xlat
jo
or
inc
divl
mov
adc
outsl
cmpsb
stos
stos
shll
cmp
xor
jo
push
lds
in
add
adc
and
andb
je
stos
jo
mov
in
stc
push
sbb
xchg
int3
jnp
add
jo
mov
cmp
or
popf
jo
fldl
lret
inc
stos
movsb
mov
jne
int3
out
insb
and
sub
or
xchg
push
add
popf
jecxz
jo
sarl
pop
push
pop
aam
fisttpll
lods
sahf
jo
jb
std
pusha
int3
jecxz
add
jo
bound
add
out
and
mov
inc
add
xorb
xor
mov
outsl
in
pop
sub
cmpb
pushf
sbb
int
gs
inc
mov
mov
jnp
int3
sahf
jo
adc
cli
cld
inc
xor
les
or
jbe
loopne
jo
icebp
mov
loope
test
jo
in
sub
adc
jmp
mov
xor
sub
mov
jmp
into
jo
cmpsb
orl
test
scas
daa
aas
out
xadd
dec
movsb
mov
mov
and
and
test
sub
imul
sbb
jp
xchg
jo
mov
imul
mov
mov
sub
add
add
loope
aad
pop
jns
xor
lret
loope
fsubrs
xor
sbb
in
xchg
xchg
orl
sahf
pop
stos
cmp
out
or
pop
in
leave
out
insb
movsl
or
mov
arpl
inc
cmp
je
sbb
jo
push
aad
sti
cmp
mov
dec
into
push
cmp
xorb
mov
jno
jo
mov
push
mov
xor
ret
int
lods
mov
mov
push
imul
in
mov
int
mov
outsl
aam
and
pushf
or
jne
cmp
push
inc
push
mov
push
jo
adc
into
add
or
insl
negb
dec
frstor
adc
or
sub
inc
faddl
jo
hlt
sar
mov
fsubrs
jmp
jo
and
mov
mov
or
cwtl
jp
pop
pushf
bswap
int
jo
xchg
or
pop
push
xor
pop
mov
mov
dec
sti
push
and
jp
jo
mov
mov
jmp
cld
jle
enter
addr16
cli
mov
clc
cmp
mov
mov
in
ds
ficoml
jae
dec
push
mov
jo
out
mov
dec
sbb
jo
enter
data16
cmpsb
jo
addl
jo
inc
into
push
jo
xor
data16
xchg
js
or
cwtl
adc
popa
std
dec
mov
sub
mov
int
pop
js
inc
into
jns
mov
push
pop
pcmpeqb
jae
rclb
sub
mov
enter
sti
push
jo
mov
sub
int3
fildl
clc
mov
mulb
jo
popf
jge
push
shlb
sbb
xchg
ljmp
mov
js
push
or
mov
out
mov
dec
push
adc
pop
push
clc
add
sub
sub
js
stos
nop
in
cld
cmpsl
jp
dec
jo
jg
xor
stc
dec
jo
inc
sub
subb
mov
iret
imul
inc
xor
sbb
in
xchg
xor
fdivs
xor
aaa
sahf
dec
into
add
jo
fists
adc
xchg
push
int
idivl
loope
mov
push
adc
mov
push
je
test
and
cs
fwait
or
shlb
fdivs
in
sbb
mov
xchg
xchg
negb
jo
or
lods
mov
mov
push
inc
out
inc
pop
mov
bound
jns
dec
dec
iret
ds
adc
push
cmpsl
leave
int
push
sti
aas
into
int3
mov
xchg
pusha
cmc
cmpsl
test
jo
stos
outsl
or
leave
cmp
mov
xchg
add
adc
dec
add
jg
andl
clc
fnsave
repnz
mov
sub
sub
dec
jo
mov
aaa
inc
jns
jo
ret
jmp
sub
pop
es
push
in
imul
push
mov
mov
sbb
stos
shl
loopne
int
push
push
nop
push
cld
jecxz
lahf
and
inc
movsl
jo
out
fidivrl
xor
sub
pop
fs
push
pushf
in
hlt
mov
push
or
xor
mov
xchg
daa
jo
cwtl
sti
mov
jo
cmp
clc
push
dec
push
dec
mov
sbb
fldl
jo
pop
xchg
cwtl
es
sub
xchg
mov
dec
icebp
dec
jno
cs
cmc
test
jae
fisubs
outsb
xchg
pusha
mov
mov
mul
loop
mov
testb
fsubrp
jge
jo
xchg
lret
scas
stc
xlat
cmp
fsubl
and
pusha
sbbb
mov
je
aaa
jo
jns
dec
or
xor
inc
outsl
mov
shll
fistps
mov
push
sbb
fwait
repz
jns
or
jo
lds
push
nop
pop
inc
rorb
mov
fcoml
test
inc
xlat
or
mov
loopne
sbb
ja
jo
fistpl
clc
dec
push
inc
jo
sub
pop
jno
movsl
nop
xor
cmp
fcompl
out
mov
arpl
mov
jno
push
fldcw
out
in
or
cmp
sahf
adc
pop
or
loop
or
ljmp
std
fisubrl
arpl
or
sahf
out
push
lcall
pushf
push
nop
adc
mov
fcmovnb
jnp
dec
das
push
and
lahf
sbb
pop
xchg
lock
data16
insl
xchg
jnp
push
repnz
mov
shrl
arpl
loope
jns
add
cmp
imul
das
lahf
fistl
jae
mov
mov
xchg
cmp
push
mov
or
cmc
repz
xor
out
jno
fbstp
push
dec
call
mov
inc
sbb
arpl
cld
repz
loop
sbb
and
mov
outsb
or
push
or
sahf
rol
addr16
pop
daa
mov
xorb
and
or
adc
jmp
adc
or
scas
sub
sub
add
mov
pop
sahf
shll
pop
pop
in
mov
rcr
dec
test
lret
add
pop
outsl
adc
push
inc
adc
push
jl
jnp
cwtl
push
fldenv
bound
pop
mov
mov
ja
gs
or
sbb
sub
lcall
or
outsb
enterw
arpl
mov
inc
scas
inc
call
and
clc
xor
cmp
shlb
jno
or
stos
outsl
fists
fcmovnb
fcomp
std
push
mov
popf
inc
jo
imul
lods
pop
out
pop
out
jle
arpl
int
fs
ja
pop
fildl
mov
pop
inc
sub
jne
cwtl
sub
in
stc
mov
push
ss
mov
cmpsl
fs
addl
imul
clc
push
xchg
push
ljmp
andb
rcrl
into
fidivl
idivb
int
enter
xor
push
push
cmp
repz
xchg
xor
iret
sti
in
cmp
imul
mov
jb
jg
out
js
ret
cmp
mov
loop
mov
cld
daa
call
out
jbe
jecxz
data16
stc
fcoms
sarb
jbe
addr16
and
mov
ret
movsb
outsl
sbb
aad
or
lock
xor
and
jb
rolb
or
xor
test
ja
insb
cld
add
xor
push
lock
jnp
lahf
push
mov
pop
push
xor
mov
mov
roll
fistpll
pop
sahf
dec
adc
pop
mov
xchg
sbb
push
lret
jns
lds
mov
in
popf
push
and
lods
idivl
sub
pop
inc
movsb
fisttpll
xor
shl
and
cmpsl
les
out
mov
data16
jae
aad
adc
fwait
adc
mov
in
outsl
mov
add
xchg
jb
pop
mov
mov
or
adc
or
fsubl
aas
or
in
lret
jo
movsl
imul
mov
lock
inc
imul
addr16
sbb
sub
mov
shll
data16
jae
push
mov
cltd
bound
and
lock
lahf
das
sub
mov
and
adc
fs
jmp
mov
mov
jg
lods
rcll
add
jo
jbe
inc
pop
enter
testb
stos
pop
popf
aad
jo
pop
sti
cmpsl
inc
push
adcb
inc
cmc
cs
push
ljmp
lods
stos
sub
jo
cmp
sub
add
jb
cmp
or
jo
clc
aaa
outsl
mov
sub
push
push
lret
jp
adc
push
aam
test
cmp
enter
mov
pop
or
mov
hlt
arpl
lcall
call
mov
add
jo
ja
pop
sub
ret
fisubl
jno
push
and
js
ds
mov
fldt
cvtps2pd
adc
insl
pop
es
xor
cmpsl
mov
lahf
iret
std
scas
fidivs
cmp
pusha
popf
xor
jo
xchg
popa
mov
jo
lcall
jo
cmp
loopne
movsb
mov
aam
jo
xchg
jmp
adc
jo
mov
out
prefetchw
push
push
cmp
jns
jnp
mov
imul
fistps
push
pop
or
repnz
jns
jo
inc
subl
xor
gs
clc
fs
push
jmp
add
or
cmp
push
xchg
mov
xchg
gs
pushl
mov
repnz
orl
sbb
mov
imul
out
out
jge
pop
lds
sbb
sbb
in
mov
je
pop
push
or
ror
popa
cmpsb
outsb
lds
add
xchg
stos
inc
int3
test
and
xor
mov
jb
adc
xor
outsb
cmpsl
std
and
mov
lock
sub
add
push
seta
stos
push
jo
dec
cwtl
fwait
ja
push
scas
jno
das
jae
aam
ja
pop
arpl
testb
gs
cwtl
andb
cli
sbb
mov
cwtl
clc
add
pop
inc
lds
and
ja
dec
sbb
lret
dec
sbb
ss
imul
adc
mov
into
pop
sahf
pop
jecxz
insl
or
mov
loopne
cmc
je
jae
mov
mov
xor
mov
js
cmp
jns
popa
arpl
jb
lods
mov
cltd
and
leave
add
loop
xchg
addr16
push
addr16
mov
or
in
mov
in
push
inc
or
in
dec
sub
mov
jae
fcomip
or
imul
push
stos
pop
pop
pusha
jne
jmp
mov
mov
xor
rcll
mov
or
lods
push
jmp
add
imul
sbb
sbb
scas
scas
mov
jg
test
sbb
pushw
adcb
out
xchg
shlb
jb
hlt
push
in
ror
sbb
jmp
mov
mov
loop
enter
test
shrb
nopl
arpl
dec
xor
lea
scas
dec
push
pop
xor
mov
and
mov
jge
dec
data16
sub
ja
aas
mov
je
pop
jb
test
stos
add
sbb
cmpsl
jns
push
data16
pop
lahf
add
pusha
push
push
mov
aad
add
add
loopne
loop
mov
mov
repz
jge
push
mov
int3
lret
xor
dec
cmc
leave
and
pusha
xor
xchg
andb
lret
bnd
std
imul
stos
pop
sbb
sbb
adc
retw
arpl
fldl
sbbb
dec
aam
pop
jmp
mov
int3
add
jns
or
iret
jb
push
mov
in
insl
pop
cltd
dec
js
fstl
push
int3
and
and
add
inc
inc
stc
loopne
or
mov
sti
popa
data16
add
push
sti
or
dec
inc
shrb
xchg
cmpsb
bound
out
pop
jl
mov
jno
insl
mov
push
sbbl
xor
notb
out
or
jo
mov
and
pop
roll
mov
add
dec
sti
inc
xchg
jo
pop
cmp
adc
stos
in
add
in
add
negb
nop
movsb
push
lods
dec
inc
adc
stos
mov
std
xchg
jo
jnp
pushf
and
adc
jo
mov
pop
adc
dec
iret
jo
jecxz
sub
das
mov
fimull
scas
mov
xchg
mov
jo
sbb
mov
fucomi
adcb
dec
ds
es
stos
fwait
inc
cli
jb
push
out
mov
pop
xchg
dec
cmp
sbb
xor
iret
out
dec
xor
push
jle
paddusw
jb
test
cmp
mov
stos
jl
addr16
cmp
jo
sbb
out
repz
jo
pop
sbb
jo
sub
lock
mov
popa
xchg
xadd
adc
cmc
mov
mov
mov
jo
pushf
cld
je
jne
jo
add
mov
cmova
aas
cmp
cmpsl
mov
dec
dec
pushf
push
add
inc
xchg
adcb
dec
xor
lods
cmp
jecxz
pop
test
inc
jbe
cld
enter
imul
mov
cmp
adc
hlt
mov
xchg
leave
lret
jo
dec
jp
xor
jb
inc
mov
add
jmp
sbb
inc
sub
mov
sarl
jo
or
imul
jecxz
lds
or
ljmp
sbb
push
pop
xchg
in
inc
jb
and
sub
mov
push
out
int3
jo
push
mov
cmp
loope
test
jo
lret
sbb
cmpsb
and
pushf
sbb
sub
hlt
jo
int
jno
stc
loop
mov
out
push
call
mov
je
dec
add
popa
das
jo
cltd
mov
ds
repnz
sub
nop
fmuls
dec
les
fidivl
mov
or
imul
push
pop
push
inc
hlt
mov
ds
je
imul
lea
in
notb
imul
mov
dec
cli
jo
shrl
pop
jo
xchg
rcrl
jge
jo
xor
imul
adc
push
lock
mov
mov
sub
mov
or
ja
and
mov
stc
jg
jo
loop
icebp
cli
adc
cmp
outsl
in
push
es
xor
int3
test
cmpsl
jo
or
inc
dec
mov
jo
inc
xor
xchg
into
hlt
or
cmp
dec
pop
int
sbb
cmp
fdivrp
daa
sub
mov
cmpsl
jo
mov
les
cmp
inc
cwtl
xchg
call
jle
pop
sbb
aam
mov
les
out
ljmp
inc
jecxz
xor
into
xlat
int3
es
or
jo
or
jo
sbb
insb
mov
mov
ljmp
repz
jp
out
dec
out
mov
xchg
xchg
paddsw
or
fwait
jne
jmp
loope
pusha
and
push
mov
addr16
adc
shlb
inc
arpl
dec
dec
in
fdivl
mov
nop
mov
aaa
jge
mov
lods
addr16
cs
sub
sub
sbb
jmp
rcll
scas
jbe
nop
push
inc
mov
pop
enter
in
cmp
jge
and
mov
arpl
nop
rsm
jnp
xchg
xor
push
jb
cmp
cmp
stc
nop
mov
std
repnz
in
repnz
cltd
push
icebp
js
lret
and
jg
sbb
loopne
and
pop
int
adc
jne
mov
fisubl
sbb
rol
int3
inc
mov
adc
mov
fwait
mov
cmpsb
std
fs
test
adc
add
adc
cmp
pop
and
mov
stc
inc
or
xchg
adc
jnp
mov
mov
mov
in
addr16
aam
mov
jae
sbb
inc
ds
jg
pop
dec
neg
loopne
lds
imul
jne
js
or
xchg
stos
xchg
jbe
cmpsl
js
mov
pop
pop
loopne
shll
push
and
int3
xchg
fsubp
push
jecxz
push
imul
sbb
cs
adc
mov
pop
repz
dec
sub
sub
arpl
jmp
pushf
jge
inc
xor
lds
push
jnp
push
in
adc
mov
mov
in
and
pop
add
dec
xor
cli
mov
pop
xor
mov
push
lret
or
arpl
test
adc
lea
xor
mov
fbld
ds
mov
js
in
data16
xchg
pop
outsl
outsb
adc
jae
push
or
sub
shl
cmp
frstor
or
bound
test
ja
push
dec
mov
das
push
push
xchg
or
add
pusha
outsb
jle
fisttpl
lret
rorl
or
mov
mov
lret
sbb
mov
sbb
into
stc
cmp
shl
xor
add
out
xor
add
jo
out
pop
addr16
push
push
cmp
cmpsb
mov
jno
inc
cmp
test
mov
mov
dec
adc
jmp
scas
mov
in
imul
xor
lret
mov
add
imul
jecxz
add
pop
out
mov
call
test
hlt
test
mov
push
lds
jns
adc
outsl
divl
pop
mov
addr16
xchg
psubd
push
mov
pop
arpl
lret
leave
jp
insl
out
push
in
enter
aas
dec
or
clc
popf
idivl
outsb
xchg
scas
dec
push
sub
mov
dec
les
or
lret
cmpsl
and
arpl
insl
dec
sbb
lods
into
out
out
hlt
or
shr
dec
cmp
fbld
aas
push
cmp
pop
scas
dec
mov
repnz
adcb
jnp
hlt
cmpl
sub
test
sbb
cmp
je
xor
push
xchg
inc
push
jle
pop
inc
mov
cmp
cmp
movsl
or
sub
sbb
subl
mov
decl
adc
dec
cmp
inc
pop
adc
aad
add
and
mov
dec
xchg
cld
jb
pop
in
shrb
addb
push
daa
push
cmpsl
mov
stos
adc
shr
push
arpl
cmp
hlt
loop
iret
jmp
sub
mov
les
mov
pusha
scas
arpl
jl
push
loopne
shll
mov
in
push
add
jecxz
out
loope
scas
in
jae
out
nop
dec
lock
repz
pop
dec
cmpsb
call
popl
repnz
addl
ffree
pop
mov
xchg
repnz
ljmp
std
icebp
ret
int3
lcall
outsl
cli
fidivs
fisubrs
inc
xchg
cmpsb
inc
stc
scas
addl
mov
lahf
fucomi
adc
lods
or
lea
fcompl
and
test
lock
aad
testb
adc
clc
pop
cltd
js
push
imul
rolb
mov
test
pop
out
mov
mov
pop
jne
jne
xor
fisubrl
sbb
add
mov
outsl
cmpb
testl
clc
push
outsb
pop
rol
push
mov
out
pop
xchg
stc
sub
fistpl
xchg
pusha
pop
mov
lock
jno
repz
lock
mov
scas
dec
push
inc
test
arpl
sub
ja
out
es
pusha
sarb
shll
cmp
jmp
mov
pop
fdivs
lret
jns
xchg
insb
xchg
push
std
add
arpl
repz
mov
jae
add
xorl
jp
fdivr
mov
xor
movsb
out
jl
jmp
xor
js
lret
xchg
mov
dec
add
and
jns
movsb
es
sbb
pop
in
jecxz
jmp
xlat
mov
cmpsl
jo
jnp
scas
fstpl
bound
sbb
pop
push
std
mov
jge
jo
loope
in
lret
pusha
mov
dec
ljmp
xor
out
fstpt
and
mov
insl
adc
mov
outsl
shll
cwtl
and
lahf
push
imul
ss
out
repnz
jo
sti
adc
ret
stos
adc
mov
test
jg
data16
pushf
inc
sub
jmp
push
jmp
sub
outsb
pop
mov
inc
push
jo
ficomps
leave
mov
aas
pop
pusha
jl
shll
pop
bswap
imul
icebp
std
orb
add
jecxz
nop
xchg
movsbl
lcall
ret
or
sub
int
mov
aas
xchg
dec
int3
adc
push
pop
test
in
push
fisttpl
mov
and
xchg
jo
mov
inc
lret
in
bound
dec
push
out
repz
add
sub
cmc
sbb
cmpb
jo
push
and
test
mov
mov
std
loop
or
and
cmpsl
sub
pop
gs
ss
test
and
movl
inc
and
sub
pop
aad
and
push
pop
pop
lods
mov
mov
xchg
shl
out
dec
js
orb
not
push
pop
mov
xor
jo
stc
cwtl
or
push
test
or
push
push
in
cmp
dec
pusha
mov
jmp
mov
insb
pop
aas
xchg
mov
jo
outsl
cmp
add
enter
in
inc
insl
add
xchg
ret
adc
das
jle
inc
in
scas
xchg
imul
js
and
cmpsb
cmpb
jl
cmp
xchg
inc
xor
adc
push
lds
mov
xchg
mov
fsubrl
add
insl
jb
pop
outsl
sub
scas
fisubrs
pop
and
push
jl
outsl
pop
jo
roll
inc
movsb
mov
repz
jo
in
testl
loop
xchg
fistl
push
mov
mov
add
jns
dec
push
aam
adc
xor
jne
add
cmp
int3
pop
cmp
aas
xchg
movsb
int3
push
push
int3
scas
sub
mov
aas
andb
nop
and
pop
ljmp
mov
sbb
std
cwtl
xor
subb
mov
ficoml
lods
mov
or
into
xchg
std
cltd
jnp
subb
push
xor
or
push
and
pop
outsb
mov
cmp
jg
pusha
dec
mov
rcl
pop
mov
out
dec
dec
fs
fucom
lret
stos
rolb
push
jae
popa
jg
arpl
dec
pushw
xchg
push
cmp
in
int3
std
and
ret
adc
test
mov
ljmp
mov
insb
mov
cltd
scas
in
aad
lock
mov
or
cmp
test
ja
add
shlb
pop
scas
in
je
addr16
data16
icebp
test
jmp
out
adc
adc
pop
mov
bound
movsl
lock
sbb
imul
pop
or
lcall
add
jg
test
out
loope
mov
movsb
movsb
mov
mov
push
mov
xchg
xor
inc
out
pop
adcb
sub
add
fstps
jge
out
arpl
pop
lcall
aaa
lcall
push
jp
pop
movsb
cld
xor
fildll
jo
or
push
out
fldenv
out
out
mov
sti
or
shrb
cmp
out
out
in
insb
xor
in
negb
jbe
int3
adc
and
out
mov
sahf
cmp
test
jns
es
xor
stos
add
gs
in
jae
out
mov
xchg
mov
fimuls
call
mov
cmpsb
sbb
dec
jecxz
xchg
fs
mov
mov
in
lahf
pop
jns
xchg
dec
daa
mov
cmpb
cli
jo
adc
mov
lahf
fisttpl
cmp
and
popf
cmpsb
mov
jae
xchg
jle
push
jg
mov
push
add
mov
adc
xor
pop
mov
jae
sbb
outsl
fsub
fsubs
fmull
or
outsl
fs
cmp
lret
mov
mov
call
clc
mov
jmp
es
xchg
sti
sub
push
test
mov
fisubl
mov
add
call
cltd
xchg
jo
data16
lock
push
cmp
jbe
add
pop
push
push
pop
pushf
andb
xorl
arpl
cli
jecxz
mov
or
int3
mov
test
adc
lea
cmp
mov
inc
loopne
mov
xor
mov
in
mov
push
jae
jg
scas
inc
and
dec
mull
or
inc
pop
imul
dec
xchg
cmpsb
fbstp
inc
jecxz
data16
sarl
orb
inc
cmpsl
jnp
sbb
jae
or
loope
sahf
jmp
and
movsl
daa
or
pmulhuw
adc
cmpsb
sahf
dec
pop
mov
or
jl
sbb
jmp
sub
add
out
add
pop
sub
push
inc
jmp
add
shlb
int3
xchg
pop
stc
loop
fcmovnb
in
xor
jmp
sbb
or
movsb
scas
loope
add
cmp
pop
in
mov
jp
call
or
push
fidivrs
sub
dec
gs
jle
mov
mov
and
sub
xchg
iret
gs
in
in
in
outsl
mov
imul
lret
push
or
insb
pop
out
xchg
sti
mov
jle,pt
sbb
xchg
adc
imul
rclb
or
pop
outsl
mov
cmc
imul
xor
mov
rcrb
stc
sub
cmp
shlb
in
adc
jp
jg
imul
cmpsb
jmp
adc
push
xchg
nop
and
mov
daa
sbb
shlb
xor
lret
adc
mov
loopne
mov
xchg
mov
aaa
mov
mov
xor
xchg
jo
bound
adc
mov
jo
dec
pop
add
add
push
inc
and
je
mov
adc
daa
adc
mov
dec
lock
xchg
add
jo
in
insb
jae
ds
mov
inc
dec
ret
cmp
pop
nop
jb
push
push
jno
addb
imul
mov
xchg
lret
sub
decl
add
xor
into
sbb
pop
das
mov
nop
xchg
push
mov
jb
in
jo
xor
jbe
mov
cmpb
mov
les
stc
out
adc
push
int
or
pop
mov
hlt
insb
outsb
outsb
push
inc
pusha
pop
and
repnz
repz
jo
aam
jmp
sbb
sbb
je
sub
jbe
jo
push
repnz
xor
jo
adc
xchg
int
or
push
bound
jo
insl
dec
in
lods
cmp
xchg
jno
xchg
mov
xor
dec
enter
je
les
jo
out
or
dec
out
imul
and
rorb
inc
mov
test
jg
mov
lods
rorb
rorb
mov
loopne
push
sub
xchg
lahf
icebp
subb
or
leave
push
mov
mov
jo
push
adc
add
adc
aas
fsubrl
jo
jmp
mov
outsb
fwait
jo
cmc
xor
dec
nop
leave
jo
jle
mov
push
dec
jo
push
insb
outsl
into
pushf
daa
or
mov
adc
add
pop
data16
sbb
cmp
adc
mov
scas
inc
jo
mov
fstpl
jne
add
cmp
cltd
gs
subb
sub
jns
dec
maxps
mov
jbe
fwait
sbb
sbbb
jp
sub
pop
jo
mov
pop
xor
test
rorb
sub
pop
jne
add
dec
test
gs
mov
inc
ja
sub
daa
or
sbb
inc
lds
jecxz
bound
popl
aad
bound
pushf
inc
scas
jg
in
mov
dec
dec
xchg
pop
lret
push
push
notb
add
jne
les
cmpsl
nop
enter
rolb
mov
outsb
push
xorl
or
ret
jae
or
mov
ja
f2xm1
sbb
out
ja
xchg
sbb
jmp
jns
dec
push
repz
sub
fsubrl
sub
xchg
jnp
mov
pop
sbb
sub
jl
imul
mov
xor
mov
push
mov
jmp
data16
dec
shl
xchg
into
fbstp
xor
outsl
mov
pop
jnp
inc
sub
or
mov
mov
and
sub
arpl
int3
std
data16
jne
out
stc
cmc
push
aad
jge
sbb
mov
adc
inc
mov
pop
imul
out
arpl
xchg
or
and
or
push
insl
pop
imul
lsl
or
xor
xor
out
push
xchg
push
jns
push
sbb
call
lret
cmp
sbb
test
adc
dec
push
out
sub
add
je
pusha
adc
dec
mov
repnz
adc
adc
push
inc
out
mov
fstpt
mov
out
dec
sub
mov
xor
jecxz
aam
mov
inc
mov
mov
and
adc
jle
iret
xchg
mov
xchg
sti
arpl
jns
xchg
loopne
jg
repz
loopne
scas
mov
xor
loop
fimull
js
push
xchg
cmpsl
mov
add
aas
into
push
xchg
cmp
cmp
je
jo
lahf
cmp
hlt
movsl
into
jl
or
xor
hlt
lock
pop
xchg
loopne
out
xor
push
inc
clc
dec
push
insb
fwait
jbe
fldenv
es
dec
fsubl
insb
xor
mov
mov
cmpsb
cmpsl
xor
xchg
std
sahf
jae
repnz
dec
aas
std
imul
int
outsb
mov
hlt
loopne
push
xchg
jno
xchg
jge
dec
outsl
add
arpl
inc
xchg
mov
aas
mov
cmp
cmp
fistpll
js
xorl
loop
xchg
pop
cmpsb
inc
mov
cwtl
es
push
or
bound
test
rol
and
mov
scas
inc
push
cs
arpl
scas
jp
mov
lock
or
jno
out
jo
out
pop
dec
push
jge
jo
xor
mov
push
mov
shll
nop
lea
ds
fdivrl
in
push
insb
cmp
mov
lods
jo
push
jle
stos
jo
enter
addr16
and
rorl
inc
jb
out
xchg
insb
out
push
push
ficoml
outsl
adc
cmp
insl
jne
mov
dec
push
addb
out
jp
inc
jbe
xchg
jo
ficomps
pusha
rolb
lods
xlat
dec
out
or
jb
sub
push
movsb
pop
inc
out
add
jbe
xchg
push
loope
sbb
pop
daa
clc
mov
inc
xor
in
loop
fldcw
cmpb
push
int
push
mov
and
inc
loopne
int3
xchg
pop
aam
lret
mov
push
js
xchg
push
shr
pop
mov
aad
adc
inc
or
jp
sub
jg
push
ret
add
sbb
pop
jle
fnsave
popf
cs
jns
cmp
jnp
mov
or
xor
data16
dec
push
mov
getsec
cmp
pushf
jo
imul
movsb
jo
orb
test
cltd
jo
lret
ljmp
pop
adc
mov
mov
push
sub
or
and
and
lcall
jo
jge
and
dec
push
mov
nop
fdivrp
mov
pop
hlt
jno
xchg
xchg
nop
cmp
mov
push
fs
jo
pop
sti
and
jo
xchg
inc
dec
or
push
call
outsb
xchg
in
repz
and
xlat
rcr
jmp
subl
push
xchg
jo,pt
push
mov
fs
testl
adc
mov
aad
pop
fistl
mov
ret
shrl
jo
cmp
mov
jo
pop
push
xchg
jne
push
shlb
dec
popa
sub
ss
mov
mov
add
icebp
sbb
xchg
jo
sub
push
xor
lret
insb
jo
jge
and
jo
cmpsb
shrb
sbb
sbb
xor
and
subl
lret
pop
pop
in
mov
adc
repnz
mov
push
or
mov
inc
int
lcall
xor
push
stos
add
jno
jg
jo
aas
mov
jge
xor
add
xchg
lds
cli
xchg
jmp
loope
xchg
jo
cmp
or
push
xlat
repz
int
jg
orb
lods
in
dec
jo
xchg
mov
push
dec
pusha
call
andb
ja
jo
cwtl
scas
xchg
inc
xor
cs
out
inc
jl
sub
jo
pusha
add
jo
xlat
dec
push
aas
insl
mov
fs
addr16
repz
jo
xchg
mov
dec
mov
fadd
fimuls
add
testb
cwtl
cmp
pusha
in
jo
outsl
insl
sbb
and
cs
jp
sub
sub
sbb
icebp
mov
daa
add
lea
xchg
js
loop
stos
sbb
jo
in
inc
dec
jg
shlb
sub
and
dec
mov
pop
cmp
imulb
gs
or
xchg
jo
xor
ds
or
and
repz
ljmp
fs
jo
mov
mov
cmp
data16
out
mov
push
scas
jo
sub
and
pop
mov
call
inc
xorb
and
jbe
out
ret
loopne
adc
jg
push
pop
lds
pop
in
stc
mov
push
push
test
out
in
xchg
and
popf
mov
add
pop
inc
jns
fldt
dec
scas
insb
mov
cmc
insl
xchg
adc
shlb
dec
divb
pop
int3
out
in
repnz
push
pop
jecxz
cmp
xchg
dec
aas
push
in
and
cmp
mov
jne
subb
arpl
andl
sar
lea
mov
jmp
adc
jo
xchg
pop
jo
aaa
test
lods
adcb
rcrb
inc
jo
mov
xor
mov
test
bound
xor
mov
mov
lock
js
or
push
sub
adc
sahf
push
jo
jne
mov
jo
sti
sub
repnz
jo
mov
xchg
mov
sub
das
fsubrs
dec
xchg
push
incl
mov
sbb
addr16
nop
lret
arpl
imul
or
pushf
mov
push
push
add
stos
inc
mov
push
movq
into
cld
out
dec
xorb
adc
pop
or
add
mov
push
fsubs
shl
stos
bnd
nop
xchg
or
cmpsb
js
pushf
push
addr16
lea
repz
push
mov
lods
lock
fwait
insl
cltd
push
add
cmp
stos
ds
adc
aam
loope
pcmpgtb
mov
adc
cmp
or
out
add
push
xor
inc
adcb
imul
push
out
jo
imul
bound
cmpsl
setns
out
subb
lds
pop
sub
jae
add
inc
mov
aas
xchg
jp
fbstp
jo
pop
mov
push
addr16
jo
xor
mov
jo
aad
les
cmp
xchg
xchg
aam
jo
jp
push
jo
xor
shlb
cmp
sahf
xchg
sub
push
mov
mov
loopne
cmp
mov
es
test
popf
xor
addr16
sti
xor
subb
jo
int3
cmpsb
dec
pop
push
or
lret
stos
cld
ret
jo
sbb
mov
fwait
aam
add
arpl
mov
fimull
pusha
push
pop
xchg
jne
enter
out
popf
pop
cli
lds
stc
pop
addl
loopne
and
int
xor
int
fiadds
push
test
or
jo
adc
cltd
xlat
outsb
push
push
jecxz
popf
jg
inc
xchg
xorb
scas
jo
cmc
adc
mov
nop
inc
xor
movsb
or
jne
xchg
jnp
cmp
fisubl
inc
jno
push
cs
xor
inc
fiadds
jo
sahf
repz
sbb
ret
inc
push
jmp
jp
jo
sub
scas
push
fcmovnbe
out
imul
mull
ret
in
js
data16
rcr
pusha
icebp
cmp
fdivl
xor
xacquire
sti
adc
jo
lds
nop
btcl
and
dec
xor
decb
sti
hlt
jo
cmc
dec
filds
jo
jle
fsubrl
fwait
into
jo
xor
push
inc
push
dec
push
cmp
test
mov
or
leave
add
fidivs
xor
dec
sahf
cs
cltd
popf
jo
xor
loopne
es
mov
xor
mov
pop
cs
sub
popf
enter
sub
in
test
mov
mov
rorl
insl
inc
or
std
mov
aad
movsl
leave
arpl
cmp
xor
enter
add
fnstcw
fbld
xchg
sub
push
lock
or
outsl
pop
movsb
pop
clc
cltd
inc
icebp
std
mov
push
shl
divb
out
xchg
ficoml
lock
cltd
adc
test
sub
mov
or
push
int3
jb
jl
mov
adc
lock
dec
filds
xchg
sti
push
test
push
ljmp
dec
ret
mov
fs
jo
pop
out
add
push
xor
pop
mov
sub
add
pop
data16
das
repnz
andl
dec
pop
arpl
sbb
push
leave
nop
rolb
popl
sbb
push
mov
int3
jnp
aad
outsb
adc
outsb
fmulp
arpl
xchg
dec
jae
mov
pop
hlt
and
cli
imul
inc
lret
mov
rclb
mov
push
shrb
lahf
cmp
sub
mov
pop
stc
cmpsl
test
xor
cmp
xchg
inc
sbb
dec
shrb
xchg
sbb
inc
aas
rclb
jae
sbb
or
push
in
xchg
pop
mov
flds
mov
insl
mov
pop
sbb
xchg
cmp
sti
push
outsl
pop
push
out
inc
mov
mov
sub
inc
inc
out
or
cmp
sbb
and
cld
push
shlb
leave
fdivs
and
out
inc
sbb
divb
ds
push
dec
out
mov
lret
outsb
inc
in
std
pop
mov
jnp
xchg
fsubrl
enter
sub
sbb
movsl
mov
inc
out
data16
lods
pop
or
push
mov
cltd
int
out
xor
push
pop
fldl
mov
jae
adc
cld
sub
pop
enter
ret
test
and
ficomps
neg
push
pop
push
setg
dec
push
fidivs
or
shl
lea
adc
loope
cltd
dec
xchg
out
out
in
jecxz
inc
dec
pop
push
cmpsl
mov
clc
out
xchg
push
es
in
movsb
inc
shlb
push
stos
add
pop
fimull
and
sub
xchg
push
mov
scas
loop
sahf
fwait
dec
dec
mov
fcmovnbe
jne
jle
or
rcrb
fs
push
test
loopne
lds
adc
sbb
add
fiadds
sbb
add
mov
adc
cmpsb
scas
inc
mov
push
out
sbb
or
loope
out
outsl
fistpl
iret
fisttpll
cmp
xor
hlt
rclb
pop
cwtl
pop
sbb
outsl
mov
jmp
scas
sbb
dec
repnz
fstpl
add
xchg
mov
inc
ret
mov
mov
sub
sbb
mov
repnz
ds
testb
int
test
inc
jge
adcb
inc
inc
xchg
pop
test
mov
sbb
push
shl
int3
outsb
mov
jge
imul
in
lods
inc
test
fstpt
movsb
jmp
popf
pop
push
andl
inc
pop
stos
mov
jge
mov
out
xchg
inc
jbe
out
adc
mov
cmpsl
rcr
aam
pop
xchg
mov
je
push
fistpl
in
fnsave
xor
or
mov
inc
push
push
mov
mov
mov
test
iret
add
sub
lods
push
outsl
inc
cmpb
std
dec
mov
sbb
ret
stc
orb
jae
dec
and
leave
das
and
push
in
outsl
add
xchg
loopne
adc
movl
jno
loop
pushf
stos
cltd
sub
outsb
inc
cmp
mov
jg
sub
xchg
insl
fsubs
clc
data16
push
cmpsb
lds
mov
lock
sub
ja
insb
dec
jae
roll
mov
fucomp
mov
lret
cmpsb
loopne
in
sbb
jne
movsb
cmpsl
inc
mov
insb
sbb
pop
xchg
add
call
mov
out
add
js
adc
ret
das
lock
inc
push
addb
fnstenv
pushl
jnp
scas
ljmp
jns
and
into
inc
movsl
jb
lock
mov
cmc
lcall
dec
scas
pusha
out
or
xchg
dec
stos
lret
xchg
or
adc
loope
lahf
dec
popf
loopne
or
mov
xchg
dec
add
mov
dec
jbe
mov
or
cmp
out
adc
fsubs
jmp
sbb
hlt
lods
popf
enter
add
inc
daa
xchg
lea
mov
mov
mov
adc
sbb
pop
in
inc
js
jg
inc
sbb
add
inc
movsl
je
pop
mov
mov
rorl
shl
mov
lahf
mov
bound
xor
jo
testl
sub
push
mov
and
int
or
sub
add
lods
sub
jns
psubw
push
adc
and
mov
xlat
test
frstor
fcoms
xchg
cmc
jo
cmp
and
sub
sbb
imul
push
xchg
icebp
pop
push
lahf
repnz
jo
aas
sbb
inc
adc
lods
dec
dec
xor
pop
push
scas
js
lds
mov
pusha
outsl
add
adc
push
pop
jo
jae
pop
xor
cwtl
cmovne
dec
in
dec
cs
push
jno
jo
shrl
mov
pop
xchg
push
xchg
test
ficoml
mov
cwtl
iret
inc
addr16
or
push
dec
xchg
add
xor
nop
addl
xchg
test
cmp
dec
cmpb
mov
ret
aas
or
jo
mov
out
inc
lea
addr16
iret
mov
jle
sbb
data16
into
add
insb
inc
jo
mov
popa
and
push
ret
adc
mov
adc
xchg
frstor
clc
bound
std
adc
pop
jo
inc
ret
inc
jne
jo
in
aaa
sahf
addb
pop
add
divl
arpl
int
push
sbb
adc
pop
mov
bnd
mov
nop
cmp
enter
out
cli
das
jo
and
mov
xor
movb
in
and
das
enter
xor
xchg
mov
jno
iret
jo
loop
std
arpl
add
mov
mov
jo
loop
jmp
js
out
sub
cmp
jns
sub
xor
nop
inc
pop
mov
in
nop
mov
aaa
aam
jl
fldt
jmp
fiadds
jo
pop
imul
lock
pop
lret
icebp
adc
rol
jno
pop
xchg
clc
jo
sbb
sub
jo
sub
orb
stos
jo
inc
mov
add
and
js
adc
cltd
adc
sub
push
push
sbb
into
jg
push
das
dec
jo
sbb
jae
xchg
add
xor
std
mov
scas
in
jmp
mov
pop
das
test
push
push
xchg
lods
push
cmp
jg
insb
int3
pop
jo
insb
stc
jae
jecxz
jo
repnz
dec
int3
mov
fiadds
jo
mov
mov
or
cmp
push
xchg
loope
dec
cmc
nop
inc
xorb
ficompl
repnz
or
adc
jo
fsubp
jl
push
ss
jo
pop
push
sbb
jns
xlat
jo
rorl
sub
stos
jo
mov
fldcw
hlt
sbb
loop
mov
or
jp
dec
bound
jbe
aam
mov
sub
pop
jo
repz
xchg
mov
dec
cmp
arpl
jo
lea
xorb
js
adc
pop
ja
loope
jo
arpl
pop
dec
or
inc
sub
cmp
aad
jge
mov
out
incl
jo
adc
lcall
pusha
rcrl
sub
fwait
jo
idivl
dec
xchg
leave
sub
clc
pop
sub
inc
je
and
and
repnz
mov
rcrb
stc
push
cwtl
int
jg
icebp
jo
adc
insb
inc
dec
push
jle
sub
cli
addb
jo
lock
xor
mov
mov
in
cs
pop
xor
imul
nop
cltd
inc
lds
jbe
add
fcomi
push
sub
jo
or
mov
enter
sub
push
test
lea
cmpps
push
jns
push
aas
jl
rorl
or
cs
mov
nop
xlat
mov
pop
rorl
lds
or
xchg
dec
push
push
and
add
lcall
inc
mov
insl
add
and
adc
dec
pop
xor
push
mov
lods
loopne
sarb
nop
and
cmp
push
js
dec
sub
xchg
iret
adc
mov
jne
jo
lods
push
lcall
fimull
dec
push
mov
jae
pop
dec
ljmp
daa
xorl
lods
inc
push
int3
pop
xchg
cmc
popf
inc
xchg
fisttpll
test
sub
pusha
inc
push
and
ds
pop
stos
sbb
jo
movsl
aas
cmpsb
xchg
mov
or
xchg
es
mov
mov
jns
fwait
push
jo
test
popf
call
jge
jo
sahf
arpl
adc
stos
jge
bound
jecxz
pop
addr16
mull
xor
jo
inc
sbb
je
jo
imul
push
nop
adc
inc
pop
aas
jbe
pushf
jge
push
pop
scas
js
ja
sbb
ret
push
fwait
jae
fmull
mov
mov
jno
aad
aam
dec
jo
xor
mov
test
cmc
cmpsl
mov
shrl
jle
loop
out
fisttpl
dec
popa
push
fs
mov
jo
test
cmc
and
jo
test
leave
jno
mov
xchg
pop
es
mov
jmp
dec
fwait
push
out
clc
mov
or
rdtsc
jns
movsb
push
and
jo
mov
inc
stos
jo
and
push
and
pushf
jo
cmpsl
dec
mov
in
xlat
and
shrl
or
js
leave
pop
add
xor
adc
daa
adcb
movzwl
xlat
das
movsl
pop
adc
lea
pop
mov
mov
js
lahf
hlt
out
jno
repnz
rcrb
cmpb
mov
pop
xor
lret
push
shrb
cmp
and
jo
pop
sbb
adc
stc
push
ret
jbe
jo
lock
call
jo
in
sbb
and
inc
push
jle
mov
sarl
negl
movsb
and
pop
and
push
fs
jge
jo
test
subb
sub
jecxz
inc
add
jo
out
mov
test
lock
cmp
inc
xchg
jns
nop
and
push
les
out
jo
mov
mov
jo
push
dec
addr16
inc
adc
jb
in
push
dec
subb
mov
or
aad
mov
xchg
mov
repz
loop
jo
ja
aam
gs
test
cmc
inc
pop
popa
and
addr16
std
xchg
mov
jb
mov
mov
cmp
jge
inc
inc
repz
mov
mov
xchg
cmpsl
jo
std
andl
mov
inc
adc
negl
jo
sub
xor
jge
lcall
jo
adc
cli
int3
mov
stos
lock
out
jo
iret
notb
cwtl
push
andl
pop
outsl
dec
push
scas
mov
icebp
pop
aam
jno
inc
jo
push
sub
jmp
add
test
xor
xor
sbb
lods
jo
cmp
jp
jo
inc
imul
xchg
lcall
pop
jmp
adc
push
repz
mov
xchg
fnstenv
int3
mov
ja
popf
pop
push
mov
jo
daa
adc
mov
xchg
push
rcr
dec
js
jo
lret
outsb
in
stos
jo
sarb
aas
push
xchg
push
add
mov
pop
mov
nopl
in
nop
popa
shlb
leave
sbb
lea
push
les
sub
pop
jo
rolb
icebp
int3
pushf
or
jo
ficoms
fstps
mov
stos
fwait
dec
cmp
mov
pop
sub
sbb
or
sub
xchg
pusha
push
sti
and
scas
orb
jl
push
and
jo
fisttps
aaa
sahf
or
scas
repz
jo
mov
and
jb
push
jo
gs
xor
fmull
dec
aas
int
stc
jo
mov
outsb
imul
nop
aaa
cmpsl
xor
mov
aam
xor
push
pop
and
nop
adc
sub
push
dec
mov
xor
popf
push
outsb
adc
pusha
mov
loop
lods
in
dec
gs
mov
jle
xor
jmp
sarl
lcall
jo
shrb
jo
xchg
std
rcrl
and
leave
inc
fisubrl
sbb
cmp
mov
mov
inc
mov
pop
jg
and
dec
cmpl
mov
icebp
jo
insb
inc
imul
mov
pop
xor
jo
shll
xor
mov
add
mov
pop
cmp
test
jne
push
cmp
or
leave
jnp
dec
jne
xchg
pop
or
fildl
or
jle
fmul
mov
xchg
scas
sbb
sbb
cmp
xlat
fldenv
adc
loop
add
out
inc
jae
negl
lock
push
outsl
ret
movsb
les
push
or
inc
xchg
jns
arpl
loopnew
jo
popf
xor
out
andl
bnd
or
das
rclb
add
inc
push
xor
cmp
sub
out
data16
lahf
pop
gs
shlb
popf
sbb
xchg
lcall
inc
pop
push
ds
pop
movsl
push
xchg
xor
js
pushw
push
jae
cmpsb
xor
pop
ljmp
mov
ss
xchg
mov
pop
and
xchg
mov
es
pop
mov
sub
mov
arpl
mov
jo
imul
mov
xor
lds
push
test
leave
stc
mov
inc
lea
insl
sbb
inc
mov
or
adc
lea
inc
sbb
clc
add
aaa
roll
lahf
scas
sbb
fs
nop
xchg
fcmovne
fwait
divb
clc
jg
mov
jmp
or
std
sub
arpl
jmp
xor
inc
add
frstpm(287
jns
push
arpl
push
gs
jg
imul
push
sarb
dec
icebp
add
jnp
pop
ret
cmp
add
inc
jp
lock
inc
mov
jg
mov
xchg
and
cmp
mov
repz
out
mov
push
lcall
arpl
insl
push
gs
insb
imul
dec
sahf
mov
dec
arpl
mov
sbb
testb
and
mov
out
sbb
daa
or
mov
emms
lret
data16
pop
insb
push
shrl
hlt
test
ret
cltd
loopne
jae
xchg
and
movsl
leave
sbb
arpl
cmpsl
lahf
mov
outsl
pop
cmc
dec
adc
add
inc
push
loope
out
pop
ret
in
leave
sub
repz
rorb
das
add
sbb
push
pop
shrb
fcompl
inc
cltd
mov
stc
xchg
jbe
mov
pusha
inc
sbb
cmpb
shrb
add
int3
add
dec
dec
sbb
sub
xchg
rcll
pop
rol
adc
js
out
scas
jae
xlat
mov
aas
xchg
int
dec
cwtl
nop
sbb
sub
mov
out
cmp
sbb
jmp
dec
ja
out
jae
aas
fwait
xchg
mov
pop
fstl
mov
add
sbb
mov
dec
xor
and
pop
inc
inc
in
movb
mov
fdivs
aam
jmp
push
or
pop
fsubrl
add
data16
push
ja
outsl
loop
sub
insb
les
or
mov
push
aam
xchg
ret
je
jle
inc
pop
scas
sub
fwait
inc
jg
arpl
jmp
fucomi
dec
cli
adc
int3
fisubrs
repnz
jmp
pusha
xor
popf
or
add
arpl
xchg
repnz
add
or
aaa
out
in
mov
cmp
mov
cmp
pop
arpl
test
cmp
outsl
cltd
scas
sub
jae
imulb
mov
ljmp
jno
jae
or
mov
jmp
adc
inc
push
adc
es
incl
inc
pop
mov
push
test
dec
lods
sbb
and
sarl
shrw
arpl
ret
push
stos
out
inc
out
lock
scas
xor
leave
sub
sub
es
mov
inc
mov
mov
push
mov
repz
mov
sbb
testb
xchg
jg
sti
sub
out
call
add
cmp
stos
aad
stos
cmpsl
xchg
aad
xchg
dec
loopne
mov
das
jne
fidivl
jo
fcompl
push
cmpsb
loopne
je,pn
xchg
out
sar
das
pushf
mov
notb
das
mov
dec
mov
push
pop
js
and
cli
imulb
mov
mov
popa
into
sbb
jg
jnp
inc
cmp
jp
mov
aas
push
dec
test
unpckhps
mulb
add
fcompl
xchg
decb
push
jecxz
cmp
sbb
scas
jae
lahf
mov
jb
pusha
mov
jp
jmp
pop
pop
jbe
shlb
xchg
fwait
xchg
jg
jmp
push
bound
adc
xor
jns
adc
mov
push
stc
fmull
mov
cmp
push
inc
popf
mov
dec
outsl
test
or
dec
movsl
inc
fwait
insb
mov
rcrl
inc
int3
imul
aaa
lds
dec
sub
sbb
aam
or
lret
or
inc
lea
pop
pop
push
xchg
mov
mov
push
call
or
std
sbb
pop
or
xor
movsb
xor
jnp
loope
loopne
cmpsl
xor
sbb
leave
dec
mov
add
push
lret
mov
fistpll
imul
repz
and
cmp
cmp
add
data16
jmp
cmp
jle
out
sbb
pop
cwtl
out
jo
ret
jae
aam
push
jo
push
mov
sti
insb
nop
adc
jno
nop
shll
inc
fisttpl
es
jo
mov
in
jo
sub
insb
pushf
ss
jo
adc
xchg
mov
jge
sub
xlat
sar
popa
es
xchg
or
mov
jne
mov
pop
jge
jo
fimuls
sahf
mov
cmpsb
cmp
jp
inc
mov
push
repnz
xchg
jge
lcall
jmp
jo
fcmovu
sub
and
and
push
jnp
adc
jge
loope
out
movsl
and
xchg
arpl
imul
adc
mov
jge
into
shlb
ds
mov
jge
xchg
xchg
mov
sub
in
cmp
jbe
je
fcmovnbe
jo
out
push
push
sbb
sub
add
mov
jl
xchg
out
jo
cltd
and
fnstenv
nop
lock
pop
sbb
push
pop
icebp
loop
inc
push
lret
jb
insb
push
inc
daa
or
lods
in
jbe
out
mov
in
cmp
push
mov
push
sub
inc
sbb
mov
sysenter
jg
pusha
loope
mov
push
push
fnsave
xchg
sbb
out
push
sbb
cmp
or
add
dec
cs
dec
imul
adc
cld
sbb
mov
mov
pop
jg
and
hlt
es
rcr
scas
jle
xchg
sub
cld
push
mov
mov
lcall
and
and
cmc
jnp
or
cmpsl
adc
add
mov
xor
notb
jo
test
out
cs
jno
js
xchg
lret
adc
or
ds
jo
add
js
cld
push
sub
jecxz
mov
jo
sbb
xor
mov
xchg
jo
mov
mov
jo
pop
repz
into
je
das
lods
add
sti
push
xchg
jmp
jo
lods
cmp
flds
mov
jo
jae
stc
fsubrl
or
daa
pop
xor
divl
jns
stos
inc
dec
sub
jo
push
mov
out
mov
pushf
lock
jnp
xor
nop
lds
lcall
mov
jb
jo
xchg
es
les
jo
push
psubsw
mov
mov
icebp
dec
inc
hlt
test
inc
cmp
mov
nop
mov
orb
ja
pop
lcall
mov
jo
rol
inc
in
gs
scas
jmp
ss
jb
mov
xor
mov
adc
mov
add
jmp
jge
std
mov
jo
pop
pusha
xor
sub
cli
inc
inc
std
dec
mov
push
and
out
jo
iret
test
into
lods
insb
inc
jo
int
or
je
invd
dec
sub
shl
sbb
xchg
ret
adc
cltd
mov
rclb
jl
ret
dec
test
push
adc
push
lcall
sub
cs
xchg
dec
add
leave
rcll
cli
mov
es
add
in
cmp
int3
fsts
mov
mov
jo
sub
imul
filds
aad
and
jo
or
das
int
sti
inc
jo
mov
out
mov
int3
in
daa
js
and
or
push
popa
jecxz
stos
bound
and
out
push
or
push
pop
jns
xor
into
repnz
data16
dec
xchg
xadd
dec
mov
inc
sbbb
add
into
pop
je
addr16
sub
jae
mov
jo
or
push
jo
xchg
pop
fcmovbe
fwait
jp
jo
aaa
popa
cmp
out
push
test
or
sbb
ret
sub
je
in
outsb
lcall
popa
imul
push
repnz
add
mov
add
icebp
cmpsl
adc
ret
fmull
sar
cmp
cmc
shr
dec
add
sbb
sbb
shll
dec
imul
sub
or
je
ljmp
xchg
xor
psraw
fs
sub
imul
sbb
sub
xorb
sbb
int
dec
leave
js
pop
fprem1
scas
xor
mov
out
xor
jns
add
out
mov
xor
inc
pop
xor
lret
xor
add
pop
push
std
pop
mov
or
rorl
mov
imul
sub
int3
clc
and
cli
jae
push
add
inc
pop
inc
push
pop
cmc
frstor
and
lahf
sub
adc
and
xchg
jecxz
sbb
xchg
sub
out
and
inc
sbbl
shlb
pop
mov
adc
rolb
ret
icebp
jo
mov
aam
jae
and
jbe
xlat
jle
fsts
lahf
pop
jbe
or
jo
adc
dec
test
inc
fwait
repz
jne
popf
aam
cld
out
inc
leave
js
arpl
fs
xlat
scas
loope
mov
cmpsb
test
cmp
xor
pop
jo
xchg
shll
mov
mov
inc
aaa
mov
mov
out
cmp
shlb
dec
pop
inc
repnz
push
movsl
icebp
pop
add
cmp
push
push
out
push
push
pop
fsub
fdivrl
dec
popf
std
pop
jbe
pop
inc
shl
inc
std
mov
psubusw
test
fs
sub
mov
pop
and
mov
inc
add
jae
nop
fcoml
push
repz
pop
mov
push
movsl
sbb
jg
repz
dec
insb
fcoms
gs
in
dec
lcall
int3
lods
mulb
sbb
cmp
in
rorl
int
fwait
addr16
xor
cli
sti
out
adc
repnz
fidivl
adc
insl
xchg
jae
xchg
push
out
jmp
xchg
fists
cltd
or
andb
subb
imul
xchg
mov
and
rcrb
sarb
aam
mov
gs
movsb
pop
adc
js
push
mov
dec
dec
mov
push
clc
jae
jmp
xchg
add
or
es
pop
pop
lock
stos
movsb
js
inc
ror
addr16
popl
scas
push
mov
mov
jae
fdivs
pushf
repz
and
or
jmp
jmp
mov
jmp
out
jnp
cmp
xor
sbbb
or
lahf
push
clc
pop
das
arpl
pop
lret
pop
add
fld
push
ja
rcl
jae
mov
outsl
call
cmpsl
sti
push
clc
call
jae
lahf
add
inc
std
mov
push
sbb
add
loop
icebp
pop
loope
pushf
jmp
out
ds
push
loope
arpl
or
shrl
adc
cmp
dec
jae
dec
in
and
push
mov
ja
in
adc
and
cmp
xor
test
popa
ljmp
pop
jg
and
mov
dec
out
mov
sbb
mov
mov
lret
sub
add
movntps
enter
dec
std
jmp
mov
jns
shlb
xchg
jp
lock
jae
mov
jns
cmpsl
test
sub
jo
xchg
inc
fwait
xchg
mov
into
add
insb
add
in
sbb
lret
popa
sarl
enter
ljmp
rcll
call
jns
test
cs
mov
outsl
repz
out
cs
outsl
addr16
push
dec
sarb
sub
shlb
iret
in
xchg
or
cmp
lds
in
inc
mov
xchg
lds
jae
cmpsl
xchg
cmp
sbb
xchg
sbbl
out
ret
test
pushw
aas
dec
cmc
or
jp
into
lret
js
in
push
push
inc
stos
outsl
mov
pop
in
icebp
lods
in
xchg
push
rcr
lahf
imul
rclb
dec
ficoms
sti
stos
pop
movsb
dec
pop
sbb
ror
add
cmc
imul
fldl
mov
fisubl
loopne
gs
cltd
jb
pop
sbb
dec
and
sti
frstor
scas
loopne
je
jns
mov
cltd
xchg
mov
and
lahf
jbe
cmp
inc
jl
arpl
nop
mov
push
push
cmp
loop
sbb
stos
xlat
push
mov
push
arpl
aaa
xor
lods
les
push
lock
xlat
inc
xor
out
pop
lock
lock
int3
mov
mov
hlt
outsl
xchg
inc
jge
sub
xchg
scas
imul
cmp
jp
sub
mov
ret
sub
adc
pop
fnstenv
arpl
sbb
mov
mov
data16
push
int3
xchg
xchg
shlb
xchg
das
loope
push
dec
lcall
bound
incb
aas
fstpl
xchg
jb
push
inc
mov
imul
push
scas
push
xchg
lea
mov
and
lcall
jmp
jo
outsb
sahf
pushf
mov
mov
popa
stc
dec
cltd
ss
shlb
cmp
cs
mov
sub
and
bound
xchg
fs
shll
movsb
test
fwait
xchg
jp
xor
mov
lcall
dec
aas
jne
cmc
jo
xor
adc
test
into
jo
pop
add
mov
jmp
pop
mov
dec
ljmp
out
mov
xor
jo
add
xor
sub
jo
xchg
sarl
pop
stc
movl
outsl
pop
pop
or
or
inc
dec
sbb
daa
scas
cwtd
mov
int3
out
inc
rcl
test
xchg
dec
or
inc
lods
push
pop
and
jno
out
xor
enter
sub
frstor
mov
cwtl
enter
dec
repnz
push
movsb
jns
dec
imul
cmpsb
push
mov
scas
mov
shlb
mov
int
pop
sub
cmp
sar
jnp
mov
insl
pop
sub
mov
adcb
data16
loopne
cmpsb
dec
arpl
jl
cmp
loope
fprem1
add
cmp
aad
addr16
pop
enter
arpl
out
pop
and
int3
mov
dec
pop
test
push
stos
aas
or
sub
movsl
movsb
or
es
sbb
push
mov
push
das
roll
popf
lcall
xchg
adcl
lock
pop
rcll
call
push
or
mov
push
fisttpll
insl
cmc
xlat
add
cmp
xorl
out
jbe
scas
cld
inc
or
ret
imul
fs
scas
jg
nop
loope
push
xlat
mov
femms
sbb
test
lock
mov
ret
or
enter
dec
jge
icebp
push
push
xchg
push
loop
mov
mov
inc
jbe
repnz
fisubl
add
pop
aas
push
pop
push
push
cmp
je
mov
dec
mov
jo
sub
mov
bound
cmp
repz
mov
sahf
lds
jne
jo
cmp
mov
pop
ljmp
orb
mov
dec
cmp
xor
loope
pop
rcr
jo
aad
dec
sub
data16
nop
int3
lret
scas
loope
jne
push
sub
leave
and
test
jo
mov
mov
sub
icebp
or
pop
out
neg
pop
js
outsb
push
ret
test
daa
sbb
cmp
call
ds
push
ljmp
testl
dec
testb
or
mov
pushf
xor
lret
movsl
js
adc
add
or
adc
or
cmc
push
lahf
pop
add
test
mov
or
not
lods
gs
dec
jae
insl
rorl
imul
mov
mov
mov
lock
scas
sbb
dec
dec
or
lods
push
ja
jns
dec
cmc
mov
dec
out
dec
test
mov
sbb
cmp
push
mov
mov
mov
sbb
xor
mov
cmpsl
stos
pushfw
sbb
in
or
inc
in
add
insb
fcomi
fnstsw
arpl
into
xchg
inc
jns
popa
daa
mov
xchg
cltd
jno
mov
xor
scas
sub
je
xchg
movsl
xchg
xchg
int
sub
mov
push
ljmp
bound
in
mov
sahf
cwtl
cltd
fcoml
push
iret
adc
jae
lock
push
addl
mov
out
jae
out
jns
cmp
sub
hlt
jg
arpl
push
jp
out
daa
std
sub
jnp
or
cld
push
or
pusha
xchg
sbb
and
push
jle
inc
out
aas
pop
sub
mov
push
idiv
outsb
jae
xor
mov
adc
mov
dec
test
pop
inc
jae,pt
int3
inc
push
inc
jmp
cmp
jb
cmp
push
jnp
pop
ds
push
cli
pusha
jle
jmp
aaa
pusha
imul
adcl
dec
mov
movsl
mov
lcall
cld
idivb
jns
lock
in
mov
adc
lds
test
gs
es
cmc
adc
movsl
inc
fwait
dec
test
pop
push
scas
push
arpl
xor
outsb
pop
dec
leave
mov
cltd
lahf
mov
xor
push
out
cmpl
lock
push
cmp
sub
stc
xchg
dec
fdivrs
int3
ficomps
push
ljmp
pop
lock
jno
mov
insl
out
ds
or
rclb
mov
das
push
push
sbb
push
push
int3
imul
popf
mov
lock
cltd
pmullw
jge
aas
push
loope
xor
fdivrs
sub
sahf
fst
mov
fiaddl
mov
sbb
sbb
inc
pop
xchg
and
push
jbe
lock
dec
leave
call
addl
pop
dec
faddl
mov
aas
add
dec
xor
xchg
insl
sub
arpl
cmp
sbb
gs
mov
sub
movsl
test
jmp
fcomi
aam
mov
leave
rcll
and
cwtl
fistps
shlb
push
sub
nop
movsl
loopne
mov
pop
sub
jae
mov
jp
aad
lods
cmp
fucomip
shll
mov
jb
std
mov
sub
mov
push
ljmp
fisubl
std
imul
jg
into
jae
mov
nop
lahf
les
jo
pop
push
adc
add
sarl
xor
fs
lret
adc
push
mov
pop
popa
push
pop
jle
es
add
sbb
arpl
pop
jbe
and
push
outsl
testl
movsl
lods
xchg
dec
xchg
clc
jne
cmp
fdiv
adc
daa
or
lret
xor
push
scas
sbb
jle
addr16
sub
mov
int3
sub
cltd
mov
in
cmp
test
fcomps
lock
movd
pop
jae
cmpsl
sbb
lds
mov
pop
inc
call
lods
cli
fs
mov
xor
out
imul
fadds
mov
or
sub
push
into
sub
out
jno
shrb
roll
stc
rclb
dec
lods
call
xlat
movsl
pop
or
imul
cmpsl
js
cmp
lods
fdivp
or
nop
push
mov
in
fnsave
aad
mov
push
lods
xchg
pop
add
adc
dec
scas
xorb
arpl
into
mov
inc
xor
pop
mov
test
sub
in
lret
pop
addr16
int3
out
lods
into
inc
and
outsb
rol
pop
or
lcall
add
scas
inc
jae
je
arpl
loopne
xor
jl
popf
fisubrl
in
pushf
adc
xor
fisubrl
decl
cmp
out
push
mov
jae
enter
push
inc
pop
imul
cmp
addr16
jecxz
push
loopne
adc
push
out
fiadds
sub
cld
cmp
sub
mov
pop
cmp
les
jmp
pop
push
mov
push
mov
xchg
in
sub
sub
scas
mov
dec
xor
jg
mov
out
xchg
add
dec
sbb
push
or
lea
sbb
or
scas
fwait
gs
jp
add
mov
or
std
mov
data16
push
pop
sbb
stos
lret
scas
out
jne
pusha
jae
xlat
icebp
sbbb
iret
push
push
xchg
push
jle
aad
movl
ficoml
mov
xchg
mov
popa
inc
inc
dec
dec
scas
call
cmpsl
xchg
jg
push
sub
fwait
mov
inc
jnp
inc
pop
fs
aaa
jo
fnstenv
xchg
enter
dec
adc
push
nop
clc
lret
lea
aas
mov
mov
int3
out
fs
or
sbb
jae
inc
jecxz
and
dec
cmp
push
cmpsl
mov
fdivs
lahf
cwtl
nop
arpl
mov
movsb
mov
lret
in
loope
dec
sub
jg
jp
ficompl
push
mov
testl
mov
aam
jle
out
push
sub
subl
push
sbb
push
lds
pop
jns
shlb
shl
ljmp
push
mov
mov
sbb
jnp
orb
dec
in
loopne
add
js
sub
push
jb
add
in
aam
xchg
adc
cmpsb
pop
jl
arpl
adc
inc
mov
adc
jnp
jo
lea
lock
xor
cmp
add
or
xorl
pusha
enter
mov
mov
lods
pop
outsl
rcll
outsl
xor
scas
sbb
std
push
stc
int3
loopw
mov
decl
push
loopne
dec
push
add
cmp
fdivrs
lahf
loop
lahf
ds
fwait
mov
mov
ret
sbb
and
fucomp
loopne
push
cmpl
mov
mov
lret
pop
cmpsl
int3
push
dec
cmp
cmp
scas
pop
dec
mov
dec
cmp
or
mov
push
sbb
push
sub
rcrb
sarb
scas
xor
sub
mov
pushf
mov
or
lods
jno
inc
fwait
jl
sub
sub
in
or
sub
cli
out
mov
arpl
add
test
fwait
lock
out
xorps
testb
jbe
adc
jnp
sahf
clc
xor
mov
mov
ficoms
int
popf
addl
je
xchg
cmpsl
xor
rcrl
sub
jp
jmp
cli
movsb
clc
adc
mov
adc
jge
insb
arpl
rorl
xchg
hlt
ja
and
sub
pop
and
fisubrs
push
push
data16
test
ror
inc
fcomps
xchg
adc
jns
dec
repnz
outsb
fs
xor
jmp
out
mov
jno
mov
int3
aaa
sbb
mov
stc
xchg
adcl
xlat
in
stc
mov
xor
arpl
scas
jle
inc
or
mov
das
pop
leave
jnp
cwtl
gs
sbb
ficompl
sbb
scas
fdivp
arpl
iret
push
cmp
lock
xchg
jg
aad
adc
sub
push
cmpsl
or
and
mov
push
dec
mov
nop
push
mov
mul
cmc
sbb
sarl
int3
dec
mov
insb
jecxz,pn
notb
add
jbe
cltd
xor
mov
dec
xorl
pop
test
ficompl
nop
fisubrs
add
xor
addl
lcall
jo
mov
popa
add
or
mov
js
mov
adc
shl
dec
xchg
pushl
aas
push
xor
js
sbb
cmpsl
lret
in
jecxz
pop
and
mov
and
stc
xchg
pushf
push
jge
jb
jo
and
jge
push
cmp
test
sbb
jo
push
imul
stc
jo
fidivl
jg
mov
loopne
jmp
movsl
call
and
sbb
cmp
mov
jp
lds
and
pop
loop
xor
xchg
loop
push
pop
mov
mul
jmp
lods
in
icebp
insb
lods
std
jo
lret
sub
nop
packuswb
out
daa
jo
imul
jo
flds
jo
gs
movsb
pop
jo,pn
std
mov
jo
outsl
sub
pop
mov
nop
dec
popf
and
out
lret
inc
ljmp
mov
jo
cmp
jge
pop
mov
sbb
addr16
push
imul
push
jo
mov
mov
ud1
and
mov
int
icebp
movsl
fildll
push
in
ds
add
add
lahf
jo
inc
mov
jo
inc
mov
loope
add
xor
loop
into
pop
bound
fcomps
imul
push
gs
out
jo
test
xchg
jbe
lock
lock
and
stos
jge
shll
nop
push
js
loopne
push
or
imul
pop
push
jo
aas
inc
xchg
dec
push
push
insl
jo
jbe
gs
enter
inc
jl
jg
mov
and
shrl
or
das
push
adc
in
jnp
incl
mov
inc
loop
incb
je
cmc
outsb
mull
adc
mov
jle
stos
aam
pop
jo
idivb
push
ja
scas
nop
int
lods
adc
adc
xor
jo
adcb
inc
sbb
mov
jae
jo
fldt
cs
pushf
or
lret
stc
fidivl
dec
dec
and
in
mov
addl
add
add
scas
out
xchg
roll
stos
push
lods
jbe
enter
sarb
add
push
jo
jno
out
xchg
mov
pop
push
ret
cmp
das
jo
pushf
mull
dec
xchg
leave
sub
adcb
pop
dec
insl
stc
push
pop
mov
pusha
je
loopne
adc
xor
push
daa
mov
push
fdivl
stos
out
int
xor
push
shrl
fldcw
xlat
mov
nop
movsl
xchg
or
and
sub
sbb
out
outsb
lldt
push
test
cmp
jo
add
hlt
jge
jo
stos
pop
push
outsb
sub
mov
fildll
jnp
sahf
jo
push
jo
xchg
pop
inc
int
fwait
pcmpgtw
adc
dec
cmp
mov
pop
cmp
jo
dec
mov
mov
stos
xchg
shll
mov
nop
test
cwtl
orl
int
es
pop
aam
xlat
shlb
cmpsl
test
cwtl
add
jnp
lret
or
cmp
rclb
neg
je
mov
adc
lea
jl
xchg
int3
je
xchg
sub
mov
xchg
mov
fidivs
jl
sbb
hlt
mov
leave
mov
jo
ret
sti
jecxz
sub
pop
adcb
daa
imul
js
mov
jo
sub
cmc
nop
cmp
jmp
movd
dec
imulb
call
lock
add
repnz
jo
aaa
mov
xchg
cmpsl
add
add
nop
mov
inc
mov
push
sbb
js
jg
dec
jns
mov
jne
cmp
enter
and
push
out
popa
cmpb
jge
pusha
mov
add
shl
in
nop
jge,pn
jno
jbe
lods
clc
jmp
sti
push
repnz
and
lock
fnstsw
rcrb
js
cld
outsb
jns
gs
sub
and
push
loopne
add
sub
sub
push
jo
push
std
dec
insl
sub
mov
out
sbb
or
xchg
pop
sahf
repz
das
icebp
cmp
mov
mov
jo
sub
sbb
mov
sarb
stc
aas
mov
jo
std
cld
jno
cwtl
lea
push
out
sti
dec
push
jmp
call
xor
adc
jo
cmp
cmpsb
sub
jge
loopne
mov
jo
jne
inc
fisttpll
or
popf
cmp
jl
inc
mov
fsts
and
pop
jmp
int
gs
inc
aad
andb
sub
imul
enter
inc
or
fsub
pop
and
cmp
aas
sub
jo
ret
xchg
scas
das
std
dec
mov
mov
fsts
inc
push
clc
cli
icebp
daa
push
or
push
lods
sahf
adc
sbb
jo
ret
mov
push
imul
aad
shlb
mov
xchg
pushf
fwait
test
mov
aaa
mov
jmp
adc
js
xchg
add
cld
out
lock
push
xor
enter
aaa
xchg
jmp
adcb
gs
jle
sub
cmc
adcb
inc
and
dec
jmp
in
jge
daa
pop
jo
aad
xlat
push
movsb
mov
leave
jg
jo
lcall
add
pop
jg
sub
sbb
cmp
cs
inc
repnz
out
inc
lret
mov
test
scas
imul
and
jo
sar
adc
imul
jo
idivl
sub
xlat
shrb
out
imul
mov
pop
outsb
mov
aaa
pop
jp
mov
xchg
cld
push
js
pop
lock
out
rorb
cmp
jmp
in
adc
cmp
shll
pop
jo
ss
dec
jns
movsb
xor
sbbl
pop
fcoml
fstl
cmpsl
add
sub
cltd
jo
dec
rclb
sti
popf
sbb
adc
pop
jo
lock
repz
call
dec
pushf
push
fcom
in
sbb
bound
nop
adc
mov
mov
sub
push
lea
std
jo
sub
aas
jmp
lcall
les
mov
into
mov
xchg
sub
test
movsb
nop
outsb
insb
arpl
movsl
aad
adc
mov
sti
inc
push
in
sbb
shll
and
xchg
mov
or
add
jo
mov
jnp
bound
test
pusha
inc
xchg
mov
adc
jo
clc
push
pushf
jp
cmp
aad
add
add
or
sbb
es
push
sbb
jo
xchg
xchg
popa
dec
mov
xor
rorl
xchg
int
push
cmp
loope
ds
pop
nop
aam
fisttpl
in
lea
push
call
jo
je
push
mov
mov
mov
clc
adc
aaa
dec
or
mov
outsl
das
cs
pop
push
test
scas
jno
jb
cmp
hlt
jge
dec
or
fnsave
dec
dec
nop
adc
inc
jo
aas
lret
jle
add
rcll
repnz
mov
mov
icebp
cmp
pop
icebp
add
push
ss
pop
hlt
sub
push
dec
jo
jb
decl
push
sub
pop
mov
fldl
out
jo
aas
adc
jnp
push
add
xor
mov
nop
xor
dec
jbe
xchg
int3
push
lock
push
sbb
cmpb
enter
dec
sbb
jo
mov
push
add
jo
cltd
xchg
shufps
and
addl
add
aas
rolb
push
jae
push
and
dec
sub
push
sbbb
insb
pop
xchg
lock
out
movsl
xchg
js
into
gs
sub
pop
pop
sahf
repnz
adc
jbe
push
jnp
add
pop
repnz
jno
ss
arpl
xor
ljmp
inc
sti
test
arpl
cmp
sarb
fs
in
shrl
add
dec
mov
test
nop
mov
mov
xchg
lds
js
clc
push
cmpsb
bound
xchg
in
lock
jb
jae
jne
pop
test
push
cmc
in
testl
xchg
dec
clc
inc
divb
push
nop
or
cmp
xor
xor
jo
pop
insl
push
in
mov
inc
pusha
mov
out
mov
jae
jo
lods
hlt
inc
mov
push
jno
cs
inc
jnp
js
cmp
daa
lea
cmp
mov
push
lret
je
popf
test
outsl
jo
adc
repnz
jno
xor
fdivrl
div
fimuls
jnp
fistl
lahf
jo
roll
out
push
notb
popa
push
jo
fdivs
sub
nop
lret
jo
jb
mov
mov
aas
push
outsl
mov
addr16
jmp
iret
xor
inc
ret
cs
add
mov
jecxz
scas
or
xchg
loop
dec
jp
sub
pop
test
ja
imul
or
pop
sub
insb
shlb
nop
jo
push
cmpsl
cmp
or
pop
cmp
outsb
sub
push
jbe
mov
sarl
or
loope
sbbb
and
dec
ficoml
into
jo
xchg
je
sub
and
push
xor
fmull
and
jl
mov
cwtl
enter
lods
dec
jo
imul
pusha
fisubs
or
xchg
aas
out
je
push
or
xchg
adc
shll
mov
mov
jo
pop
xadd
in
ret
pop
jo
sbb
push
std
sti
repnz
insl
imul
inc
sub
int
outsb
jge
xchg
jg
fs
xchg
cwtl
aam
xchg
mov
sub
repnz
push
popl
jecxz
es
adc
lar
in
test
xchg
fnstsw
push
mov
mov
cld
dec
les
jecxz
jnp
push
xor
shlb
cs
rcr
push
pop
fdivs
es
lds
jmp
iret
nopl
push
imul
fbstp
xchg
inc
mov
jo
sbb
mov
call
jo
je
inc
jmp
movsl
test
je
push
sub
pop
jo
inc
sbb
shlb
mov
dec
lcall
jae
xor
push
pushf
mov
sti
lea
out
ss
outsl
push
pop
push
jno
movsl
sub
pushf
sbb
daa
sub
lcall
pop
in
inc
js
jg
mov
and
push
je
ljmp
test
in
lock
jo
and
jp
xor
test
and
mov
pop
jo
int
mov
outsb
cltd
das
xchg
lret
xor
inc
sbb
adc
mov
adc
mov
ljmp
test
int
in
and
icebp
call
cli
jo
aam
jno
rol
shll
shlb
test
fildll
jo
jp
hlt
stos
push
jo,pt
mov
mov
push
mov
inc
test
incl
aas
sbb
xor
and
incb
cmp
adc
mov
jo
or
cmp
je
lods
idivb
adc
sbbb
jo
sub
sub
dec
add
stc
mov
sbb
mov
fisttpll
cmp
shll
adc
shl
jo
push
and
push
mov
sbb
loopne
movsb
sub
xor
pop
into
push
push
push
push
xchg
in
shlb
inc
sbb
out
push
movsl
cmp
inc
aam
fsubrl
xor
enter
mov
mov
adc
fs
lods
call
sahf
std
push
pop
mov
mov
xchg
inc
es
jae
fstpl
push
ss
push
pusha
mov
into
andl
sahf
mov
xor
mov
add
mov
pop
jae
jl
sahf
and
mov
dec
das
jae
xchg
mov
mov
fldt
and
sahf
gs
jb
mov
mov
icebp
sbb
cli
xor
sub
in
gs
scas
jns
fidivs
outsb
ret
pop
or
cmp
jae
cmp
jo
dec
adc
dec
jo
dec
mov
mov
in
rcl
push
sbb
adc
call
mov
or
ret
xchg
inc
add
fisttpl
mov
insb
outsb
cmp
sub
lods
in
cmc
cld
call
ja
or
jno
int
cwtl
daa
inc
jl
dec
jae
push
pop
jp
popa
mov
push
push
je
mov
jo
dec
cmpb
ja
in
aam
cmp
mov
push
xor
out
mov
xor
arpl
dec
addl
fs
xchg
jb
sbb
movsb
push
aam
sub
and
xor
mov
stos
dec
jp
lods
push
pop
iret
jb
xor
shlb
scas
in
jp
frstor
dec
inc
arpl
jnp
or
lcall
pop
pop
push
inc
bound
lahf
popf
mov
mov
xor
inc
jg
and
xor
je
clc
xchg
fnstenv
jle
mov
adc
lahf
pop
dec
mov
popf
sub
bound
int3
std
lret
data16
inc
dec
dec
add
mov
scas
adc
fistl
xchg
call
pusha
out
push
out
and
pushf
fisubrl
je
int3
cltd
pop
cmpsl
scas
push
jge
and
push
sahf
out
xor
push
xchg
movsb
xchg
pop
in
jmp
pop
mov
aam
ja
adcl
push
jg
pop
inc
xor
gs
pop
xchg
repz
inc
insb
sbb
or
sbb
repz
stos
mov
cmp
and
or
fnstenv
pusha
sub
imul
mov
fnsave
push
rolb
pusha
rcrl
push
rorl
mov
ret
xor
jae
sub
aad
jp
imul
jae
inc
mov
jmp
arpl
leave
mov
insl
repnz
stos
cli
push
mov
jmp
or
add
push
rclb
xchg
pop
sbb
scas
or
lods
push
inc
rol
dec
in
aaa
mov
es
mov
arpl
andl
repnz
push
or
loopne
sub
cmp
adc
es
das
sbb
push
pushf
lock
pop
stos
jg
test
ljmp
sbb
popa
push
cmpsl
gs
lahf
gs
or
dec
insb
rcr
mov
or
insl
mov
mov
mov
lock
test
scas
lcall
dec
push
adc
xor
cmpsb
cvtdq2ps
dec
mov
fdivr
sti
fcoms
sbb
ljmp
insb
stos
sbb
inc
outsl
dec
lahf
int
jmp
imul
iret
int3
xchg
jae
ss
cmpsl
je
test
jae
fcompl
pop
lret
jp
jb
sti
add
mov
jo
fucomip
mov
lock
and
lret
inc
mov
cwtl
fimull
insl
push
pop
lods
sbb
lret
es
adc
inc
xchg
call
xor
pop
pop
mov
and
push
insb
sub
scas
adc
xchg
aas
subb
dec
sub
cmp
emms
mov
push
adc
ljmp
ret
push
stos
mov
cmp
and
repz
push
out
jmp
shll
and
push
ficompl
in
dec
out
xor
ret
gs
psadbw
test
ret
push
ror
int3
inc
lahf
inc
mov
lcall
cmp
jno
lock
sarl
arpl
xchg
xor
push
cmpsb
rcrb
push
jae
jne
nop
arpl
mov
loop
jge
scas
jae
notb
movsl
fdivrl
ja
imul
idivb
or
popf
xchg
push
mov
aam
test
xchg
test
push
push
push
adc
sar
mov
jne
adc
in
out
adc
cmpsb
or
les
fdivs
adc
inc
cmp
mov
pop
sbb
repnz
lahf
jp
or
cmc
test
xor
stos
inc
jp
mov
int
jmp
push
in
jns,pn
jp
pop
sbb
xchg
jae
push
pushf
fidivrs
mov
dec
popa
mov
push
jge
jae
adc
ret
fldenv
test
lods
fstpt
and
in
fisubrl
xor
cli
sub
lret
enter
dec
sarb
pop
add
xor
inc
mov
or
div
cli
mov
adc
loope
mov
jg
fisubs
jecxz
xor
xchg
lahf
test
sbb
sub
inc
rcr
sarb
lock
outsl
mov
mov
bound
mov
and
push
insb
push
jmp
mov
int3
lret
jmp
incb
jns
rorl
fidivl
loopne
inc
jp
push
jmp
lock
inc
jl
aas
sub
imul
mov
jle
inc
pushf
aad
orb
jnp
inc
cld
cmp
sarl
adc
pop
mov
inc
out
xor
mov
test
shrb
fldcw
daa
sti
sub
test
dec
data16
rorb
incl
call
pusha
inc
imul
push
sbb
cmpsb
push
out
xchg
out
and
dec
arpl
jne
sbb
les
mov
mov
nop
adc
pop
mov
cmp
loopne
inc
outsb
cmc
xor
andb
mov
xor
xchg
sbb
jnp
and
nop
jmp
rol
out
data16
js
jae
imul
leave
outsb
sti
and
pop
fldcw
addr16
pop
out
jno
cwtl
data16
insb
dec
add
cmp
push
cwtl
sub
dec
repz
test
outsl
fldl
add
leave
xor
scas
jo
arpl
es
jp
xchg
frstor
pop
xlat
mov
and
or
mov
int
add
std
mov
or
lret
loope
clc
fs
lods
mov
cmc
lret
inc
loope
arpl
fidivrl
adc
out
rcr
call
pop
xchg
test
ret
insl
cmp
add
cmpsl
jae
adc
mov
arpl
mul
out
sbb
fstl
add
lret
pop
mov
mov
inc
bound
jmp
movsb
push
mov
mov
jno
cs
sbb
jge
jns
cmp
lock
in
mov
fnstenv
adc
push
cmp
lods
xchg
arpl
mov
test
jae
incb
push
push
nop
gs
icebp
xchg
std
and
dec
fs
inc
adc
add
bound
arpl
xchg
imul
pop
jae
pop
sbb
xchg
les
jmp
adc
push
nop
gs
mov
sahf
ds
push
cmp
pop
mov
fs
sub
sti
cmp
imul
push
movsb
xor
inc
repz
sbb
rcl
inc
repz
pop
ja
in
jae
sahf
outsl
pop
push
insb
shll
xor
icebp
or
fwait
jecxz
ret
ds
xor
add
in
jbe
xchg
lods
and
jge
and
sti
fisttpll
nop
testb
mov
dec
fst
dec
sbb
or
ljmp
pop
lock
repnz
lahf
sbb
dec
jbe
xchg
mov
dec
sbb
cmc
mov
call
dec
fs
test
pmuludq
test
sahf
iret
jae
mulb
push
decb
jnp
sbb
mov
xchg
scas
lret
idiv
arpl
mov
push
imul
cmp
xchg
mov
nop
mov
mov
jmp
leave
xor
xchg
xor
jp
push
xchg
sub
pop
lcall
bound
outsb
movsb
hlt
pushf
xor
clc
xchg
lret
call
cmpsb
pop
addr16
sbb
cmp
jno
aas
lods
lock
mov
mov
outsl
inc
adc
adc
cmp
adc
lea
inc
push
sahf
pop
xor
insb
insl
mov
lahf
aad
setg
imul
jns
repz
fldz
shrb
sub
lock
xor
lcall
push
mov
mov
dec
adc
test
jge
push
mov
shlb
insb
mov
shr
sub
xchg
mov
mov
or
out
mov
push
cmp
shlb
std
push
add
mov
jge
sbb
sub
fadd
outsl
rep
ss
data16
hlt
or
data16
cmc
lods
dec
dec
out
mov
les
jo
pop
int3
fcoml
call
and
sub
jge
shll
fildll
push
outsl
lods
arpl
dec
pop
imull
sbb
in
push
stos
jae
js
mov
rcr
repnz
test
das
lock
mov
jae
dec
fstpt
cli
cld
mov
shlb
mov
or
out
or
push
add
and
jno
fistpll
push
xchg
mov
imul
stc
in
arpl
sub
test
lahf
aaa
lock
loopne
xchg
push
xchg
push
push
mov
cmp
jl
add
dec
pop
mov
push
stos
aas
xchg
scas
cld
pop
jo
dec
xor
add
repz
adc
movsl
mov
xchg
out
jmp
sahf
fbld
jb
in
daa
outsb
push
dec
outsb
lahf
and
mov
sahf
adc
xchg
and
push
inc
mov
adc
jle
adc
shr
mov
jp
data16
adc
nop
clc
adc
jmp
push
mov
stc
mov
cmp
notl
xchg
loopne
sbb
mov
lods
mov
fiaddl
push
dec
sub
pop
dec
call
imul
mov
int
insl
mov
xor
sahf
insb
clc
arpl
add
or
fwait
pop
fmull
xor
fdivs
das
jmp
mov
es
fiaddl
fs
push
testl
ficompl
and
mov
pop
fidivl
scas
jno
fidivl
cmpsl
sbb
add
mov
add
add
cmp
and
inc
cmc
inc
ds
sbb
xchg
arpl
popa
push
in
subb
or
loope
addr16
push
adc
arpl
sub
mov
mov
int3
jge
mov
jbe
in
shlb
mov
or
or
imul
and
std
add
pop
jae
xchg
dec
scas
jle
mov
cs
nop
movsb
pop
or
fildl
cmpsb
xchg
out
xchg
fs
and
nop
inc
push
imul
inc
mov
imul
xchg
fwait
inc
js
push
pusha
cmpxchg
cld
or
adc
mov
xor
jg
sbb
xchg
sti
in
pusha
test
or
arpl
lret
adc
and
or
rclb
jle
call
mov
int3
add
mov
movsb
or
sub
psraw
xchg
add
shll
jnp
scas
scas
sbb
jmp
adc
lcall
dec
rclb
sub
lock
or
call
mov
jno
cld
mov
push
pusha
push
arpl
rolb
flds
imul
pop
inc
sub
jp
mov
and
lock
fidivs
fcomps
lods
icebp
mov
js
popa
in
or
clc
roll
arpl
test
pop
fimuls
push
adc
dec
and
pop
lahf
jnp
or
inc
xor
movb
out
push
mov
sti
push
arpl
insb
and
adc
pop
aam
adc
push
add
bnd
pop
jnp
pop
nop
push
mov
rcrb
repz
cmp
jbe
mov
or
test
lds
arpl
outsb
push
jae
add
ljmp
lds
loopne
push
xchg
outsb
ja
setg
mov
pop
aas
jmp
es
add
add
fwait
and
pushf
jmp
jae
outsb
std
repz
shl
int3
sbb
movsb
mov
stos
cld
movsl
nop
dec
ja
mov
lret
mov
arpl
mov
pop
cmp
xor
repz
xor
fnstenv
aaa
test
and
mov
push
xor
movsl
xchg
mov
fs
or
push
repz
test
gs
add
mov
xchg
nop
xchg
and
lods
das
mov
or
out
lcall
mov
push
dec
xchg
lahf
stos
imul
cmp
sub
xchg
sbb
jo
push
jge
adc
xchg
movl
mov
test
push
xchg
jo
aas
les
movsb
xor
in
xchg
call
push
cmp
lock
and
lret
jns
jo
mov
repnz
inc
sbb
xor
jl
pop
mov
and
repz
flds
and
jo
idivb
out
jno
jo
jle
hlt
setle
js
insl
out
and
jo
sti
push
popa
mov
fdivr
push
sbb
and
dec
inc
or
mov
pop
icebp
add
rorl
xor
push
ljmp
rol
sbb
xchg
popf
cmp
jo
push
adc
push
fsubl
sub
es
inc
jl
and
gs
sbb
jmp
nop
inc
jl
shll
push
xor
jo
popa
pushf
idivb
lret
pop
cmp
ja
or
and
sbbb
jo
lret
stos
mov
int
ja
adc
shrl
pop
jo
gs
sub
jge
jo
add
cmpsl
fldlg2
xor
xor
pop
div
push
bound
frstor
jno
mov
lret
jo
jns
mov
jo
bound
cmpsl
jo
mov
loope
push
test
lods
add
sahf
lcall
xor
jo
inc
iret
les
fwait
mov
adc
and
jl
ds
daa
xorb
adc
test
jo
pop
inc
imul
cli
pop
adc
je
mov
jo
cwtl
in
aas
mov
xor
sub
test
mov
adc
cli
jo
mov
mov
insb
rolb
inc
ss
xor
lods
jo
loope
jmp
sbb
mov
jg
nop
ss
or
mov
jo
adc
in
sub
mov
add
cltd
popf
in
in
mov
cmpsb
pusha
xchg
jb
sub
jo
dec
popf
or
ja
xchg
shll
cwtl
xchg
cs
inc
mov
push
fwait
in
in
decb
lret
in
pop
xchg
pop
inc
stos
xchg
repz
mov
and
cmpsl
js
adcb
popf
ljmp
lods
fs
push
icebp
and
jle
out
cmp
adc
and
jo
mov
push
push
ja
pop
sbb
fcmovnbe
aad
jmp
in
dec
sahf
cmpsl
sub
scas
movsl
add
sbb
xchg
inc
dec
push
push
jecxz
lods
dec
add
dec
adc
sub
mov
xchg
jo
std
aad
lcall
enter
jge
out
and
sti
add
test
xor
aam
hlt
or
scas
jnp
mov
xchg
pop
popf
sub
fwait
cmp
push
cwtl
icebp
gs
jo
jmp
ss
jo
or
dec
mov
outsl
ljmp
jo
ret
sbb
aaa
lret
jo
fbstp
or
nop
movsl
mov
insb
mov
xor
mov
mov
inc
shll
rorl
sbb
stos
scas
jno
jo
in
cmp
insb
dec
sbb
testl
imul
je
je
test
dec
and
mov
xchg
jo
gs
adc
in
out
push
shrb
fs
xchg
mov
shll
xor
das
jl
and
jo
lahf
cmp
addr16
jo
jecxz
es
shl
cmovae
jno
inc
sbb
jb
jmp
xchg
jo
pop
in
jp
jae
xchg
mov
push
add
dec
cmp
dec
leave
xor
loop
push
imul
insb
int
call
sub
and
or
imul
sbb
shl
bound
les
loopne
dec
sub
push
push
movsl
loop
lret
out
lock
inc
imul
jo
insb
fisttpll
xchg
mov
inc
paddq
xchg
mov
outsb
xor
push
fs
add
pop
fisttpll
inc
mov
mov
xchg
lcall
push
push
cmp
enter
hlt
fwait
orl
dec
mov
mov
inc
dec
jo
clc
mov
mov
stos
push
xor
test
jg
rorb
push
push
jo
or
in
jbe
test
push
and
dec
push
sub
xor
mov
jo
mov
in
ret
scas
addr16
push
jle
cli
and
push
das
jne
and
jmp
repz
adc
out
sbbb
sbb
loop
xlat
fsubs
inc
push
jle
add
jo
insb
cltd
popa
call
rolb
out
lcall
and
rclb
mov
push
mov
sub
jne
jo
push
cld
ja
and
jo
lret
sbb
ret
dec
jo
jmp
loopne
jo
jp
cmpsb
cld
lret
jns
imul
shl
ljmp
daa
xchg
imul
xchg
loop
iret
dec
scas
jne
mov
dec
mov
ds
js
rorb
ljmp
out
cmp
shrl
xor
mov
pushf
mov
jo
cmp
push
divl
cmp
jmp
push
jae
out
xor
push
lods
jne
sub
js
adc
fldt
add
subl
mov
mov
jo
daa
not
sub
jae
jno
rclb
pop
jge
fistpl
cwtl
cmpsb
lcall
jmp
or
inc
lret
mov
add
lds
adc
neg
gs
std
pop
out
repz
fnstcw
jo
pop
rclb
enter
lea
cmpb
sub
test
in
daa
aam
js
stos
jns
fists
jo
cmpsl
enter
jmp
jo
add
data16
in
enter
jo
insl
or
lcall
int
fimuls
jae
add
jae
mov
adc
mov
jmp
fs
pop
cmpl
pop
stos
xchg
mov
push
mov
movsl
mov
push
icebp
adc
std
rcrl
jo
sbb
mov
movsl
pop
jno
jo
jno
xor
xchg
movsl
pusha
pushf
cmp
jno
std
mov
push
xlat
fdiv
jns
cs
push
adc
jge
test
cmp
rcl
jnp
in
jo
xor
int
into
aam
xlat
dec
hlt
jecxz
jo
cs
lret
fwait
add
cmc
faddp
push
fdivl
mov
inc
inc
adc
outsb
or
pop
dec
mov
xchg
mov
push
aad
lea
fs
gs
cmp
aad
jo
in
mov
cs
movsb
push
push
jg
xor
pop
test
fldcw
pop
ja
sub
das
jns
pop
shlb
test
cmc
pop
mov
jo
nop
adc
jns
bound
out
xlat
jo
cli
pop
loope
jecxz
outsb
mov
adc
sub
jp
cwtl
adc
or
mov
repz
sbb
mov
scas
mov
test
jo
stos
jne
mov
sbb
in
test
popa
xchg
addr16
popf
jmp
faddp
cltd
mov
outsl
jle
jo
adc
jo
jb
fisttps
sbb
icebp
jp
pop
inc
jl
les
add
addr16
and
mov
inc
pop
xchg
jo
mov
mov
mul
push
int3
jo
pop
lock
pusha
in
xor
rcll
mov
loopne
push
mulps
movsl
xor
dec
out
out
testl
mov
jo
stos
call
push
repnz
lock
ret
push
adc
add
jne
push
or
les
lret
shr
test
cmp
dec
subb
xchg
and
sub
into
icebp
shl
cltd
xchg
sbb
push
fnstcw
jge
lahf
outsb
lea
push
add
pop
out
jbe
test
sub
cmp
push
leave
das
pop
jae
xor
or
scas
or
inc
or
dec
push
jmp
mov
loopne
add
mov
pop
or
mov
ds
sti
out
xchg
jg
loope
mov
in
sbb
pop
es
push
pop
sbb
mov
pop
add
stos
xor
jle
shrl
cmp
push
or
jae
lods
sub
push
aaa
sbb
mov
fs
lods
in
in
fbstp
cmpsl
inc
add
jb
ret
jb
push
inc
push
dec
mov
shlb
adc
dec
test
push
sbb
xchg
arpl
loopne
out
test
sbb
push
clc
gs
rorl
cltd
nop
pushf
push
stos
sbb
jbe
jae
ret
cmpsl
and
dec
aad
rcr
in
subl
test
lcall
aaa
aam
xlat
pop
push
push
push
and
and
mov
outsb
dec
arpl
jbe
pusha
sbb
dec
dec
sub
jb
lods
mov
jl
cmpsb
iret
je
arpl
xchg
pop
jb
shll
fnstenv
mov
xchg
cltd
jp
pusha
cltd
mov
jo
fcoml
pop
mov
fdivrl
rcrb
fdivs
jle
add
icebp
dec
add
jmp
fs
push
icebp
xchg
test
out
add
push
stos
mov
mov
adc
jae
jle
imul
mov
clc
mov
push
jmp
lds
mov
dec
rorb
fs
fdivs
jae
or
idivl
jne
imul
sbb
pusha
stc
cmpxchg
adc
lret
cmp
sub
push
jo
cmpsl
and
mov
cmp
mov
jae
sub
repnz
fcmovnu
lds
xor
outsl
nop
stc
arpl
dec
incl
sbb
xor
inc
aam
mov
dec
sarl
cmp
sahf
add
sbb
popf
mov
inc
or
push
stos
outsl
aam
push
push
fs
mov
push
lret
add
adc
dec
xor
jl
imul
jle
mov
inc
push
cmp
and
inc
in
sbb
mov
test
cltd
mov
pop
mov
out
push
or
pop
mov
sub
jl
sub
fistl
xor
mov
push
mov
aam
mov
pushf
pop
in
out
int3
and
jle
adc
hlt
jae
jmp
jg
frstor
lods
mov
popa
push
xor
or
or
sbb
jno
gs
sbb
sbb
jl
in
mov
xchg
int3
pop
int
rolb
stos
cmp
outsb
out
pop
cmp
sub
sbb
cmpl
jbe
jle
addr16
push
out
das
push
leave
lods
inc
sub
dec
pop
pop
xchg
imul
push
in
mov
fnsave
fadds
mov
mov
ret
insl
std
sbb
mov
scas
in
hlt
and
dec
flds
jl
int
sbb
mov
clc
ret
int3
inc
sarl
pop
out
mov
test
scas
xor
inc
mov
out
sbb
fadds
pop
pop
mov
jno
jl
adc
aam
stos
call
push
or
test
lea
in
pop
sbb
stc
jae
nop
lock
arpl
iret
lock
cmp
fnstcw
out
stos
lods
and
push
shlb
ja
cmp
int
pop
call
push
faddp
push
push
data16
mov
cltd
sub
pusha
add
xchg
sahf
jae
and
das
cvtps2pd
cmp
xor
imul
aaa
and
mov
jae
rolb
addl
loope
mov
xchg
xchg
out
cmc
inc
clc
negb
inc
xchg
jmp
lcall
cli
inc
push
test
fwait
int3
mov
cld
ret
cmp
in
push
cmp
adc
xchg
fmuls
xchg
lahf
test
icebp
and
and
psubusb
loope
add
arpl
xchg
or
out
add
pop
fnsave
addr16
xchg
dec
xlat
jle
loop
sbb
dec
push
dec
test
and
cmpsb
adc
push
or
xor
inc
mov
jae
xor
call
xchg
rcl
pop
fldcw
scas
jl
in
das
mov
ds
jns
pop
loop
mov
scas
jg
mov
enter
je
dec
pop
cmp
mov
ret
and
jae
cmpsb
pminub
icebp
push
ficoms
mov
mov
sti
jb
pop
test
push
arpl
mov
sbb
fs
mov
movsb
push
jg
mov
mov
sbbb
jnp
cwtl
mov
inc
inc
push
jbe
int3
xor
pusha
xchg
call
cmc
lods
in
sbb
iret
lret
or
dec
and
les
sbb
add
sub
subb
pop
fidivl
sub
xorb
gs
dec
or
push
cmpsl
sbb
cmp
adc
sub
jmp
es
dec
ret
mov
icebp
xchg
mov
add
mov
or
insl
cltd
int3
sub
pop
mov
repnz
fcmovnb
xor
fmuls
xchg
jbe
std
cltd
loope
add
test
testb
nop
daa
imul
cmp
cmpl
in
and
scas
sbb
pusha
adc
pusha
gs
aas
xchg
fldl
lret
lock
and
fmull
add
mov
and
jae
and
push
scas
xor
jns
rolb
rolb
in
or
addr16
dec
jnp
dec
ds
shlb
dec
xchg
xor
sub
pop
add
xor
push
sub
xchg
gs
sahf
or
mov
stos
dec
lret
into
jne
lods
outsl
lret
imul
lods
mov
push
mov
fldcw
popf
adc
pop
ljmp
sub
shrl
mov
ret
cmp
dec
jae
cmc
imul
and
and
in
jbe
pop
or
outsl
movsl
int3
sbb
aas
and
sqrtps
pop
enter
out
pop
push
cld
int3
insb
sub
jno
outsb
add
call
call
jno
inc
mov
mov
dec
sbb
scas
sbb
lret
rolb
ror
out
repnz
outsl
test
test
fidivs
adc
ja
jae
jle
sbbb
push
cmp
enter
jo
arpl
in
push
xchg
inc
sub
mov
cmp
mov
cmpsl
std
loopne
dec
rclb
call
xor
test
sbb
jns
lret
push
adc
inc
in
scas
push
lods
or
jg
pop
data16
fsubrl
js
insl
push
mov
scas
rclb
pusha
pusha
xlat
or
jg
in
sbb
nop
xor
pop
or
lds
mov
mov
or
nop
nop
subb
xchg
jmp
add
cmp
jns
dec
cmpsl
arpl
out
loop
and
mov
data16
scas
in
fsubrl
mov
insb
insb
mov
pop
jbe
xchg
push
pusha
jnp
jle
test
repnz
mov
lock
fsubl
pop
or
lea
in
sar
outsb
adc
pushf
xchg
gs
divb
ror
rcrb
pushf
bt
ja
jmp
and
andl
cmp
in
lcall
test
pop
or
enter
stc
mov
out
push
outsl
and
lock
push
mov
lret
or
jbe
push
jmp
je
fldl
rclb
andb
test
push
popf
insb
mov
mov
jbe
xor
pop
icebp
bound
daa
je
pop
loop
add
insb
mov
jle
insl
movsl
adc
inc
in
sbb
add
fst
movl
int3
xor
mov
ret
mov
lock
jnp
push
repnz
je
das
cmc
movsl
int
iret
fcomps
pop
inc
mov
dec
cmp
insl
roll
jae
popf
icebp
jl
in
xchg
dec
loopne
add
test
shlb
jp
cmp
out
fs
rcrl
shl
cmp
sub
and
fidivrl
addr16
cmp
stos
stos
stos
and
insl
movsl
xor
push
mov
sbb
push
or
fmuls
mov
hlt
popf
xor
push
mov
or
es
pop
movsb
push
insl
xor
imul
cmp
xchg
xor
nop
lods
pop
repnz
hlt
leave
jo
pop
fs
push
out
insl
cmpsl
mov
jo
push
cld
mov
pop
xor
push
cmp
sub
nop
jb
test
inc
gs
out
es
adc
mov
nop
or
dec
lds
fldcw
jo
and
jo
cmpl
add
add
push
jo
xor
test
mov
mov
mov
mov
pusha
mov
les
fmulp
loop
jo
je
sbb
add
test
sbb
push
in
cmp
xlat
repz
jo
test
lret
push
jae
out
cltd
aad
pop
mov
jo
or
adc
jo
and
xor
popa
cmp
adc
fwait
pop
movsb
pop
push
jne
jmp
test
lcall
jae
sub
dec
and
inc
pop
push
dec
xor
cmc
notl
lock
fdivrs
mov
popa
insl
push
push
xor
xor
nop
pop
ffreep
pshufw
cmp
jb
jge
push
mov
ss
push
and
xchg
out
aam
pop
mov
ficoms
test
lret
leave
push
popa
ret
xchg
in
cmc
aas
or
adc
jae
in
das
in
pushf
sbb
pop
mov
adc
lea
jbe
inc
sub
loopne
jo
imul
cli
sub
jno
add
cwtl
mov
jmp
and
leave
push
xchg
test
sbbl
shrb
xlat
push
in
jo
jbe
mov
jo
push
sub
adcb
jge
pop
mul
mov
popl
push
adc
pop
repnz
popa
jo
and
pop
std
pop
pop
sbb
jo
lods
rcl
cmp
push
mov
push
ja
test
pop
jo
aad
cmp
xor
dec
push
or
jne
and
out
or
insb
test
cmpb
sub
xchg
add
sub
fbld
pop
lret
jo
outsb
leave
ffree
adc
into
jo
mov
sti
pop
lret
or
in
or
jo
aas
dec
lahf
cld
push
iret
inc
sbb
pop
mov
dec
cmp
jne
cld
xor
jno
insl
or
and
into
sbb
xor
xchg
punpckhdq
hlt
jb
les
dec
mov
test
or
shlb
or
adc
cwtl
pop
inc
jnp
add
jo
and
int3
jo
imul
cli
xchg
cwtl
xor
gs
jp
inc
mov
mov
jmp
jo
or
jg
sub
loope
and
pop
push
or
ss
icebp
in
pushf
mov
popf
jp
sub
faddp
jo
inc
push
cld
inc
cltd
add
push
push
inc
js
in
mov
or
and
lret
sub
pop
add
fnstsw
cmpsb
movsl
fwait
mov
inc
pop
sub
jo
inc
lods
mov
jo
mov
divl
and
paddb
dec
pusha
cs
arpl
push
mov
mov
aaa
xchg
jg
sbb
nop
mov
lahf
stc
or
push
jo
jge
or
add
inc
mov
fstps
ja
and
adcl
faddl
sub
bound
inc
adc
movsl
adcb
add
jge
movhps
scas
push
mov
fnstcw
js
orl
hlt
lcall
mov
arpl
push
dec
jle
and
int
imul
sbb
push
pop
hlt
mov
icebp
xlat
iret
sahf
shll
imul
dec
inc
subb
and
jo
jle
cmp
inc
daa
jo
jecxz
stos
ret
je
dec
jo
hlt
push
fsts
mov
jns
fs
ja
xor
nop
stos
jmp
jg
push
or
imul
cmp
js
jecxz
jo
in
xchg
sbb
data16
lock
outsl
push
mov
pop
mov
es
cltd
jo
mov
sub
out
pusha
and
xchg
nop
mov
cmpb
pop
cvtdq2ps
push
jne
dec
sbb
mov
jl
and
push
adc
pop
xor
rcrl
jo
popa
orl
or
jae
mov
mov
jo
mov
xchg
lcall
fcomp
lret
jo
adc
lret
out
xor
mov
fisubl
es
in
and
sbb
xor
les
dec
jg,pn
inc
in
cs
dec
jnp
addr16
push
popa
mov
faddl
inc
aad
in
sub
sub
xor
mov
add
adc
adc
xorl
subb
cmp
sub
jp
xchg
pop
jo
mov
inc
mov
cmpsl
sub
std
jo
insb
xchg
outsb
cmp
jo
out
adc
inc
out
jbe
mov
mov
cmp
fisttpll
jo
lret
enter
lock
cmp
ret
dec
push
push
popf
es
ds
mov
lahf
mov
and
fs
mov
xchg
dec
mov
or
sub
push
out
pop
fs
int3
decb
fdivrs
xchg
lods
lret
popa
fimuls
sub
pop
scas
jg
xorl
iret
loop
adc
jo
test
adc
sub
push
pop
imul
stos
xor
inc
push
cld
leave
and
mov
xchg
jo
pushf
cli
int
mov
xor
mov
push
pop
ror
mov
rorb
pop
dec
shll
xlat
push
in
xor
fiaddl
test
rol
movsl
and
fwait
jo
push
cmp
or
repz
nop
dec
adc
decb
jo
push
sub
xchg
fstl
and
fists
aad
jae
scas
vmread
nop
sub
jb
es
jae
dec
xor
and
adcb
adcl
push
add
sub
or
pop
cmp
rcrb
mov
pop
push
jo
daa
mov
inc
int
add
push
or
jo
fisttps
push
inc
lods
bound
mov
movsb
pop
jo
lock
shlb
pop
jae
call
cmp
dec
shl
adc
jo
insb
mov
inc
jo
das
or
stc
jo
mov
mov
mov
jo
fimuls
lret
shlb
cmpsb
xor
xor
inc
sub
cmp
test
fldenv
fwait
sbb
add
and
inc
push
mov
dec
fisttpl
pop
xchg
lea
and
jno
sahf
shll
pop
into
push
xchg
mov
and
mov
loope
add
shlb
aad
cld
lock
xor
sub
cmp
pusha
inc
mov
das
mov
lea
xlat
dec
lahf
insl
pop
cmc
push
jo
inc
call
repnz
add
dec
lds
pop
sti
mov
shlb
pop
xchg
push
push
adc
push
jecxz
je
push
xor
mov
fdiv
aas
mov
loopne
shl
jo
int
movsl
xor
inc
rclb
bound
je
call
shll
sub
dec
dec
jo
jno
iret
std
add
cs
push
lds
gs
sbb
mov
jl
rcpps
push
inc
iret
imul
pop
hlt
push
adc
cltd
jo
push
out
xchg
and
xor
pusha
das
nop
xchg
mov
inc
scas
pop
fadd
jo
ljmp
jo
stos
mov
aas
arpl
enter
shrb
dec
fdivrl
repz
fucomi
mov
jbe
lock
or
mov
andb
adc
loopne
sbb
les
fisubrl
add
or
aaa
jno
sahf
jl
jae
out
adc
push
mov
notl
inc
scas
sbb
cmpb
fiadds
push
aas
push
insl
inc
in
btc
cmp
xchg
pop
mov
sub
mov
je
cmp
lahf
xchg
mov
stc
sbb
xchg
lods
dec
outsb
data16
scas
fs
sbb
add
fdivrs
xchg
arpl
sub
stos
push
scas
dec
pop
and
mov
rolb
mov
jge
mov
sbb
push
test
lods
xorb
call
lret
daa
jl
ljmp
sbb
mov
pop
lock
cmpsb
push
out
in
lret
ret
or
shlb
and
xchg
adc
pop
sarl
insl
fxch
inc
arpl
or
aad
add
outsb
ret
push
cld
sub
fwait
ja
mov
stc
sbb
andl
lahf
out
sbb
xor
mov
fcomi
dec
enter
sub
or
nop
jns
mov
cmpsb
addr16
jg
jae
jg
xor
push
mov
sub
push
inc
xchg
jae
mov
clc
ret
xor
pusha
arpl
xor
fldt
adc
xchg
dec
scas
mov
outsb
push
pop
test
arpl
sub
sbb
gs
adc
or
je,pt
es
xor
dec
arpl
pop
add
mov
sub
mov
ja
mov
fbstp
int
mov
insb
add
xadd
movsl
xor
addr16
icebp
in
cmp
or
add
xchg
into
mov
std
push
into
faddl
jae
inc
aad
or
mov
in
andb
pop
popa
jp
cmp
dec
jns
jmp
and
mov
pusha
sbb
sbb
mov
outsl
cli
test
leave
jae
sbb
clc
scas
pop
lcall
push
xor
idivb
fs
inc
jo
addb
fldenv
lods
bound
push
imull
in
hlt
mov
sbbb
pop
gs
in
jl
xor
and
xchg
popa
mov
push
adc
repnz
add
push
mov
sub
dec
lock
sub
jae
rcrb
mov
mov
push
lret
add
jae
or
mov
sbb
adc
mov
scas
test
pop
xorb
out
pop
adc
jae
arpl
fstps
aad
iret
data16
push
push
pop
mov
das
mov
pop
movsb
stos
jae
mov
scas
fistps
test
imul
push
add
mov
or
lcall
sub
inc
xor
xchg
mov
xchg
fisttpll
xchg
ljmp
rclb
push
jecxz
test
jg
add
in
sbb
jo
fucomip
cld
lock
enter
loopne
cmp
pop
or
mov
jge
mov
and
xchg
lock
pop
int
addb
push
out
mov
push
xor
inc
arpl
push
pusha
dec
push
insl
orl
mov
cmpsl
fwait
repnz
cmp
fwait
fs
lock
cmp
jns
xlat
cli
shl
push
sahf
inc
push
xor
sbbb
sub
rcrb
std
das
ret
adc
inc
pusha
sub
loopne
ja
out
push
jne
daa
scas
lock
stos
fstpt
lret
outsb
and
jb
push
stos
jae
mov
xchg
jmp
sbb
push
arpl
jae
pop
jl
mov
movsb
and
inc
push
jle
push
add
jp
shl
jo
fistpll
jb
das
or
lea
icebp
movsl
sbb
inc
mov
add
roll
in
sub
jae
hlt
sub
jns
mov
jle
cmc
repnz
cli
loopne
into
sbb
mov
dec
inc
xchg
mov
rorb
inc
pushf
push
lds
nop
fnsave
mov
fisttpll
arpl
imul
test
sub
inc
push
push
and
loopne
cmp
pop
inc
xchg
push
fistps
mov
mov
je
sbb
negl
lds
fildl
jae,pn
ret
lret
add
adc
mov
pop
sahf
cmp
xlat
jmp
fwait
stc
sbb
add
cmp
jbe
test
pop
jo
adc
repz
mov
dec
jo
int
test
add
pop
sub
jecxz
sbb
push
cmp
xor
adc
jo
repz
and
jmp
sbb
jne
mul
sbb
xlat
sahf
es
test
xchg
sbb
dec
jo
add
aas
or
xlat
jge
nop
test
adcb
in
push
jecxz
jo
je
ds
ss
sub
lcall
dec
or
pop
insl
sbb
add
scas
repz
stos
inc
sbb
cltd
push
xchg
mov
jmp
cld
pop
cli
or
xor
dec
xchg
outsb
jl
aas
gs
lcall
jns
mov
je
xchg
mov
iret
ja
cmp
dec
sub
scas
and
and
sar
push
sub
dec
fnstenv
testb
jg
outsb
jp
mov
lods
ljmp
sti
mov
out
sbb
in
fnsave
cmpl
sbb
fs
pushf
mov
jae
movsl
popa
push
fld
pop
mov
loope
push
dec
stos
popf
jle
and
repz
inc
jae
mov
jmp
or
mov
fdivl
mov
out
sar
pop
in
cmp
cmp
jae
pop
fistpll
xchg
sub
in
sahf
out
xchg
pop
jae
or
pusha
mov
icebp
push
sbb
std
xchg
addb
dec
imul
jp
jge
jl
pushf
lea
mov
stos
fldl
or
mov
mov
cmp
xchg
repz
sbb
cmpsb
dec
std
adc
insl
jnp
push
and
imul
clc
inc
fwait
repz
mov
arpl
pop
pop
stc
add
adc
fadds
fwait
xchg
std
jo
xchg
fistpll
jl
and
jp
int
mov
lret
in
add
push
dec
mov
lds
aaa
push
fisubrl
insb
and
xor
pusha
lock
imul
shll
and
mov
mov
add
xchg
out
stc
xchg
or
jle
mov
loop
call
mov
jns
dec
jno
push
fistpl
test
inc
dec
inc
dec
ljmp
push
jae
mov
adc
out
icebp
adc
jno
jns
or
add
sbb
leave
sbb
aas
hlt
jae
mov
jle
or
aad
mov
mov
aad
daa
mov
enter
push
je
pop
cmp
shrl
arpl
es
push
fmull
or
arpl
decb
and
dec
and
mov
cs
xchg
jnp
stc
pop
xchg
jg
mov
rcll
sub
sbb
in
push
sbb
adc
bound
js
fstpt
cmpsb
arpl
jae
repz
test
hlt
out
lahf
mov
lock
jecxz
call
jae
cmp
cmp
or
and
nop
lods
arpl
jmp
or
or
and
add
pop
test
push
scas
icebp
fisttpl
cltd
jp
jbe
dec
xchg
push
and
sbb
popa
inc
add
xor
jmp
dec
jp
shr
insb
lret
mov
lea
push
repz
aad
jae
bound
push
jno
push
out
mov
xchg
jno
clc
scas
sub
and
scas
stos
fisttps
inc
adc
sbb
outsl
and
out
pop
aad
jnp
cltd
xor
into
xchg
jnp
lds
loopne
fxch
cmpsl
push
push
sbb
add
imul
mov
pop
push
into
xor
iret
pop
pop
inc
add
pop
scas
jns
loopne
es
addb
popf
lahf
sbbb
hlt
int
out
bound
orl
push
cld
loop
push
pop
jno
lods
repnz
movsl
jo
repz
push
pop
mov
lds
packsswb
add
addr16
popa
xchg
cld
push
outsb
mov
imul
xchg
mov
sub
pop
lret
lcall
fiadds
mov
imul
mov
fldl
xchg
jg
xchg
sub
mov
push
jmp
subb
bound
bnd
iret
cld
in
add
push
fs
test
cmp
outsl
jge
jmp
or
mov
xchg
js
popa
lcall
movsl
out
testl
rorb
cwtl
fistps
adcb
cltd
fsts
std
out
aam
insb
shlb
lea
ljmp
dec
inc
subl
fmul
mov
fs
jae
stc
jl
enter
or
inc
jge
pusha
sbb
xor
inc
push
dec
xor
lods
lret
mov
popa
enter
cmovo
push
inc
mov
ret
std
and
lahf
add
int
lret
int3
test
lods
dec
mov
xchg
cli
jl
xor
sbb
inc
adc
dec
jle
or
aam
arpl
fcoms
mov
popa
jb
iret
push
lahf
clc
test
inc
mov
scas
and
xchg
lret
inc
lahf
inc
rolb
out
aaa
pusha
fwait
xchg
push
inc
arpl
lahf
ja
pop
adc
pop
imul
sbb
pop
cltd
sbb
les
mov
add
inc
xlat
sti
sub
jne
repnz
outsb
inc
push
or
icebp
and
es
fnstcw
lahf
cmp
and
in
mov
jle
jnp
push
fimuls
mov
pandn
aam
xchg
mov
mov
inc
hlt
add
out
mov
out
gs
xchg
fwait
dec
jmp
fisttps
inc
inc
xchg
sbbb
popf
cs
or
stos
mov
push
xor
xchg
fucomip
xlat
jo
fsubrs
pop
ret
sbb
jae
stos
ficomps
ds
cmp
lock
push
or
or
lds
pop
cmp
or
mov
loopne
push
repz
jns
scas
addr16
insl
sub
movb
dec
jae
fs
imul
mull
call
jl
mov
lock
sbb
repnz
lahf
pusha
in
adc
pop
mov
mov
popa
pop
sub
cltd
push
jo
mov
pop
inc
jo
add
xchg
repz
das
jns
sub
jo
cmp
out
shl
out
jo
mov
repnz
pusha
fists
in
jbe
sti
dec
imul
and
and
jo
jp
rcrb
mov
stc
xchg
jnp
daa
adc
or
jo
fsubl
call
mov
mov
or
fdivrs
imul
int
aaa
jmp
inc
xchg
into
jl
testb
jo
nop
ljmp
repnz
pop
pop
je
sub
push
jo
outsb
add
push
loope
sub
xor
sar
addb
nop
dec
repz
dec
mov
mov
push
clc
iret
enter
xor
addl
and
inc
pop
jb
adc
adc
pop
jo
xchg
test
sahf
push
fistps
cld
push
cmp
push
dec
push
jbe
jns
in
insb
sub
jo
out
sti
dec
fcoms
mov
jo
pop
or
sub
jo
cld
daa
pushw
add
ret
jo
pop
pop
mov
jo
mov
cmp
jmp
ss
add
cmc
cmp
gs
push
add
cmp
dec
ja
aad
jo
cld
sbb
mov
or
push
rcrb
xor
sub
outsl
andb
or
jmp
mov
cs
mov
xchg
pop
lods
mov
dec
je
xor
popa
fisttps
pushl
cli
imul
fucomi
xchg
adc
mov
loop
jo
xchg
lahf
cwtl
jns
in
jo
pop
fldl2t
fwait
push
cmp
jle
lret
mov
xor
adc
sbb
test
js
ljmp
jg
nop
or
test
push
sbb
inc
mov
nop
sbbb
in
jo
mov
nop
mov
jae
sahf
jo
iret
imull
call
xor
nop
or
dec
sti
jb
jge
xlat
cli
mov
mov
call
jo
mov
ljmp
jo
icebp
lcall
int
mov
mov
or
mov
jns
testl
outsb
and
push
mov
adc
jle
addl
jo
mov
lahf
es
or
xlat
push
push
setno
addr16
sahf
bound
sbb
mov
loop
xor
test
jg
jnp
mov
push
jo
cmp
mov
shll
pop
push
jge
lods
and
sbb
mov
pop
adcb
into
sbbb
jo
aad
subl
mov
mov
pop
push
push
mov
stc
shrb
fs
lcall
push
andb
push
sub
xchg
pop
jle
pop
andb
test
jle
addb
rorl
jo
mov
adc
push
inc
lock
pop
insl
add
aaa
mov
or
xchg
jo
loope
xor
int3
dec
jo
xchg
cmpl
cs
inc
jnp
mov
and
adc
stc
in
add
mov
lods
jo
push
cwtl
lock
dec
inc
lds
xchg
mov
test
dec
enter
sub
hlt
das
pop
jo
int3
push
add
pop
mov
cmp
mov
repnz
sub
jecxz
outsl
aad
push
loop
cld
fs
xor
dec
leave
sahf
cmpsb
test
ficoms
jo
ss
sbb
cmp
ds
test
sub
add
mov
xchg
or
cmpsb
push
mov
sbb
es
popf
cmpsl
jb
sbb
test
enter
mov
stc
pop
pop
je
idiv
shlb
or
xchg
dec
pop
xor
jo
in
lds
shlb
testl
scas
sti
jae
push
popa
test
add
mov
imul
jo
jp
daa
shl
sbb
mov
push
cmp
jo
lret
push
xor
jo
pop
and
cmp
call
pop
repz
sub
mov
insb
jnp
test
cmp
shll
jbe
js
fs
add
jo
rcr
push
and
jl
mov
loopne
jo
jp
cli
imull
rcl
clc
out
mov
jne
fdivrs
mov
outsb
jmp
push
mov
sub
retw
lods
mov
pop
pushl
adc
add
mov
inc
mov
sbb
jge
mulb
sub
adc
jb
je
int3
sbb
shlb
imul
mov
inc
jne
lcall
push
mov
jbe
pop
xor
lock
dec
add
mov
mov
cld
scas
xor
xor
pop
data16
lock
int3
jo
repnz
movsl
cmpsl
pop
sbb
sbbl
jo
push
sarb
pop
ljmp
jp
mov
jb
jo
dec
es
iret
inc
shrl
cmc
stc
insl
mov
aaa
sti
repz
leave
mov
popf
in
inc
jo
fiadds
stc
jo
fwait
outsl
sbb
insb
aas
lock
mov
xor
movsb
jo
sti
nop
cwtl
pop
aam
jbe
add
inc
adc
push
push
movsb
xor
sub
mov
push
popf
inc
xchg
or
loopne
jo
push
int3
jnp
adc
jo
pop
jb
bound
xlat
rolb
bnd
sub
in
push
pop
xor
out
sbb
lock
imul
pop
jbe
int
xchg
int3
push
mov
jo
dec
mov
jo
aad
sbb
jo
cli
aas
mov
push
inc
adc
sar
cmp
rol
push
cmpsl
int
inc
hlt
xchg
cmp
aad
mov
push
mov
pop
rcrb
aaa
push
jae
decb
out
out
dec
jg
xor
lret
sub
adc
and
mov
jae
mov
in
lock
mov
sysexit
sbb
clc
lods
jo
arpl
inc
vmwrite
int3
sbb
push
dec
loopne
lcall
popf
xchg
jb
or
sub
jns
or
jno
in
or
jg
popa
fidivl
xor
out
mov
sarb
test
push
dec
imul
and
pop
cmp
imul
lret
pop
imul
adcl
dec
or
mov
ss
test
in
cwtl
inc
xchg
aad
cwtl
cmp
cli
push
mov
push
adc
cmp
mov
xchg
jae
pop
add
fadd
xor
push
mov
std
push
fnstenv
icebp
and
sti
fbstp
lea
mov
jo
adc
scas
mov
xorb
sti
cmp
popa
arpl
test
std
pop
cmp
ds
jmp
dec
cwtl
and
mov
sahf
mov
xchg
mov
movsl
or
and
pusha
add
sbb
fistpll
sbb
es
leave
sub
inc
mov
mov
test
push
mov
jbe
inc
xchg
call
fbld
mov
stc
mov
adc
inc
insl
out
mov
ror
addr16
push
imul
stc
inc
lahf
jecxz
ss
sbb
or
mov
cli
lret
je
movsl
mov
imul
sub
pop
fadd
xor
arpl
jbe
add
xor
fs
xor
addr16
mov
jo
push
adc
cli
cwtl
push
jmp
adc
imul
xchg
xchg
lods
fdivrs
fbstp
add
jbe
leave
popf
or
je
and
arpl
mov
jb
push
frstor
or
insb
dec
jae
data16
test
addr16
push
pop
push
inc
clc
cmp
mov
xor
mov
repnz
inc
fnstsw
je
jae
add
pop
inc
jo
cltd
mov
pusha
push
and
inc
ss
divb
loopne
imul
pop
addr16
push
sbb
adc
int3
cmpb
pop
mov
jae
shll
cltd
add
lock
mov
std
imul
scas
or
push
or
orb
mov
add
xchg
outsl
pop
pop
pop
jae
fsubr
pop
xchg
rolb
jge
iret
lahf
imulb
push
nop
cmp
cmp
int3
push
dec
dec
std
jge
insb
push
sbb
and
nop
sub
sarl
dec
cmp
pusha
lock
xchg
jnp
jbe
add
rorl
fstpt
or
push
mov
pushf
push
or
mov
xlat
ja
xor
and
shlb
sub
cld
shl
out
movsb
xor
pop
mov
pop
syscall
inc
loope
mov
lods
push
dec
cmp
sub
jge
js
pop
movsb
pop
scas
in
nop
push
arpl
jo
push
xchg
fistps
std
mov
cmp
push
push
ret
pusha
rorl
cmp
add
das
jnp
out
or
jno
sub
mov
xchg
mov
mov
mov
xchg
call
mov
jmp
jae
sbb
icebp
mov
shlb
adc
mov
adc
sub
push
sbb
lds
pop
and
cmp
ljmp
dec
stc
push
or
push
or
test
jle
stc
xchg
lods
or
adc
scas
fsubl
daa
out
call
loope
gs
popf
addr16
cmpsb
movsl
dec
xabort
fs
movsb
jle
int3
sti
sub
sub
mov
mov
ret
mov
ds
mov
enter
push
and
insb
dec
sbb
popf
out
pop
les
adc
xchg
imul
inc
inc
popf
shl
fimull
jo
or
adc
jns
in
gs
jl
int
xchg
xchg
jge
sub
adc
cld
pop
test
adc
dec
inc
out
mov
ljmp
dec
ljmp
mov
add
pushf
mov
out
out
pop
pop
fildl
inc
mov
fdivrs
mov
cwtl
je
rorb
pusha
mov
rcl
adc
pop
pop
adc
mov
subl
scas
and
push
push
push
jmp
push
std
roll
pop
dec
pop
out
pushf
cmpsb
mov
inc
adc
cmp
adc
jle
sbb
icebp
mov
jg
stc
enter
xchg
scas
push
sbbb
mov
xor
cmc
xchg
out
pushf
inc
out
js
inc
mov
shrb
jae
imul
cmpsb
mov
add
push
xor
add
inc
cld
add
scas
negb
stc
jb
insb
mov
mov
es
stos
ja
cmp
gs
push
push
iret
cmp
mov
adc
decl
cmp
cmp
inc
sbb
imull
aaa
and
in
or
dec
ds
jb
popa
cmpsb
movsl
std
jae
adc
cmp
sub
in
bnd
mov
mov
leave
popf
add
jns
jp
push
push
sbb
insl
lods
dec
dec
jle
adc
pop
movsb
pop
xor
frstor
xchg
push
inc
dec
lods
insb
std
jmp
sbbb
and
nop
arpl
sbb
or
lods
jmp
cltd
shl
xchg
push
xchg
mov
cmpb
pop
adc
sub
jns
add
jl
insl
push
out
mov
pop
dec
add
jmp
add
lock
fdivr
sbb
mov
sub
cmpsl
stc
nop
mov
add
inc
push
insl
mov
call
stc
push
in
repz
outsb
in
push
jmp
jl
sbb
and
sub
outsb
mov
dec
pop
cwtl
pop
add
arpl
adc
jns
cmp
pop
push
sub
xchg
fsts
outsl
jae
xchg
nop
outsl
jmp
push
shrb
std
ret
shlb
ret
aad
lcall
dec
lahf
data16
aas
mov
mov
xor
imul
inc
rcrl
lea
int3
shr
scas
lahf
jle
arpl
cmp
and
and
test
call
repz
shlb
adc
jmp
cli
mov
lret
shrl
rol
sub
adc
data16
into
rcrb
int3
fistl
fsubl
mov
adc
call
test
inc
xor
fildl
jmp
jo
ror
push
out
cmp
jae
in
popa
loopne
jbe
js
xchg
and
out
cld
fstl
fnstsw
ss
es
aam
insl
mov
cmp
xchg
movsl
lcall
lahf
sub
pop
fdivs
data16
sub
mov
dec
mov
push
fdivs
int3
xlat
repnz
cmpsb
pop
mov
pusha
std
imul
movsl
outsl
leave
mov
jnp
sbb
pop
out
sti
lret
xchg
jge
out
mov
arpl
fdivrs
push
jmp
fs
inc
adc
loop
fwait
ja
push
or
mov
insl
inc
jns
divb
rcr
scas
push
add
push
sbb
mov
adc
mov
jae
push
add
sarb
bound
shrb
stos
push
cwtl
or
in
xchg
mov
sub
mov
test
fdivrs
or
push
cmp
insl
outsl
andl
sahf
push
push
push
push
push
sub
call
in
push
inc
addr16
cmpsl
and
jle
sarl
lret
push
sub
fwait
dec
sarl
call
sbb
ds
addl
outsb
jp
jno
test
jle
pop
repnz
fisubs
outsb
and
ljmp
cmp
bound
lock
xchg
sbb
insl
push
jmp
insl
push
call
cmpsb
sub
stos
jbe
jo
fucomip
shl
mov
mov
inc
loop
aam
shrb
jo
and
jne
std
mov
mov
jg
xor
shrl
mov
adc
adc
pop
out
jp
fldcw
add
int3
mov
sub
mov
push
xor
popa
sahf
mov
add
add
imul
mov
and
lock
bound
sub
xor
push
loopne
dec
sub
dec
std
jae
adc
dec
adc
adc
xchg
imul
dec
xlat
pop
push
mov
cmc
js
push
std
sbb
out
pop
and
cmp
xchg
add
mov
jl
push
pop
pop
mov
sbb
neg
repnz
xchg
mov
in
inc
jae
std
int
stos
and
lods
mov
xchg
push
lock
mov
jae
inc
les
das
add
cmp
inc
lods
scas
jp
jecxz
mov
das
jae
or
ficoms
ffreep
fcompl
data16
stos
mov
push
dec
fiadds
hlt
lods
cld
push
notl
inc
daa
push
dec
arpl
inc
push
dec
stos
ja
cmp
pop
jge
sub
rep
scas
jae
xchg
inc
aad
aaa
sbb
cltd
jo
cmp
out
pop
jge
cltd
mov
je
push
ja
jg
jns
xchg
dec
xor
addr16
daa
int3
jle
sub
push
scas
push
or
popf
and
negl
sahf
pushaw
arpl
fnstcw
in
lock
jno
out
sbb
mov
arpl
jae
inc
jnp
loopne
sbb
fsub
push
push
mov
mov
adc
jae
popf
pop
push
insb
dec
push
shll
or
gs
inc
pop
in
pusha
pusha
xlat
scas
call
ficomps
aaa
repnz
mov
or
lret
pop
int3
addr16
aaa
std
cmp
clc
imul
out
pushf
xchg
or
out
shlb
dec
mov
xor
push
and
gs
imul
lods
cmp
push
ja
sbb
sbb
scas
and
sbb
sbb
cmp
ds
je
ret
and
test
lock
popa
mov
mov
or
shlb
jge
out
jo
in
mov
js
and
jo
mov
xchg
imul
andb
add
sahf
sub
sbb
mov
ja
in
jne
cmc
adc
jb
xchg
repz
xchg
nop
movsl
fwait
ret
sbb
je
sub
clc
or
and
pop
outsb
daa
sbb
sub
cs
movsb
inc
add
ret
daa
xchg
mov
std
and
add
adc
cmp
fildll
cmc
xchg
movl
mov
psrlq
cwtl
andb
push
add
push
or
add
leave
sbb
outsl
inc
sarb
mov
lahf
mov
dec
jo
push
sub
push
xchg
es
jo
sub
aad
cmp
loopne
push
mov
cmp
in
shll
jcxz
sbb
mov
adc
test
hlt
out
lcall
fwait
je
movsl
or
nop
pop
xor
mov
pop
mov
out
sbb
sub
ss
xchg
adc
mov
cmpsl
mov
fsubl
cmp
popa
sbb
inc
out
or
dec
andl
sbb
xchg
pusha
mov
adc
jae
cmpsb
or
push
mov
daa
out
pop
mov
scas
mov
mov
dec
insb
sub
cmp
add
xchg
mov
cmpl
hlt
stos
test
std
cmpsb
repz
jnp
or
and
lds
leave
insl
jae
movsl
ljmp
add
sbbb
dec
divl
push
lret
pop
jae
jae
add
sbb
fs
xor
out
mov
cs
and
pushl
jmp
shl
add
xchg
sbb
inc
xor
stc
or
out
jae
fistpl
test
out
fistpll
test
sbb
stos
bound
or
and
cmp
out
test
inc
xor
lretw
aaa
dec
std
movb
jns
es
dec
sti
push
in
xchg
jno
cli
mov
lret
cmp
or
jbe
dec
leave
rolb
rcrb
jae
xorl
sub
mov
pusha
cs
xchg
cwtl
addb
or
mov
cld
push
roll
add
addr16
fs
push
mov
push
movsb
cmp
cmpsb
mov
daa
mov
lret
inc
sbb
outsl
cltd
jle
imul
je
repnz
push
mov
inc
call
stos
jns
fldl
dec
lcall
test
fs
dec
loop
jb
mov
test
add
push
scas
fsts
sub
pusha
mov
sti
lea
push
mov
mov
jae
mov
mov
iret
insl
mov
jp
jmp
pop
stos
sub
cmp
push
cmp
fldln2
or
adc
sub
adc
es
idivl
cmp
ljmp
outsl
repnz
insb
jne
inc
sbb
jmp
fs
push
js
jns
add
sti
pop
adc
inc
bound
mov
dec
inc
fbld
in
in
out
in
push
scas
jae
in
int3
push
and
ja
adc
stos
push
fmull
mov
mov
pop
cmp
cltd
lret
scas
push
add
xor
gs
mov
xor
inc
bound
mov
bound
movsb
add
es
push
in
icebp
mov
stos
xor
mov
out
push
push
mov
push
ja
and
cmpsl
jo
out
jp
aaa
jae
sub
fnstcw
mov
sub
hlt
lock
lds
insl
fucomip
mov
push
jns
pop
inc
add
inc
js
mov
xchg
sbb
push
repz
outsl
sbb
pop
push
lods
sub
leave
insl
sbb
jns
jno
cmp
sub
add
test
ja
mov
push
fldt
and
shl
adc
arpl
mov
sbbb
sbb
mov
push
int3
aad
pop
inc
jecxz
mov
mov
push
jmp
lret
mov
add
sbb
test
sbb
movsb
divb
ja
out
pop
adc
sbb
sbb
in
xchg
add
mov
push
jnp
call
test
movsl
sahf
out
orb
pop
xchg
sub
out
es
enter
jne
and
cmpsl
pop
jle
add
push
xchg
sti
mov
push
loopne
dec
inc
and
mov
mov
sbb
cmpsl
push
idivl
mov
lcall
outsl
xor
adc
push
loope
xchg
cmp
push
or
in
or
call
mov
add
inc
fcoml
shrb
rcrl
xchg
mov
lret
dec
adc
sbb
sarb
xor
popf
jg
push
pop
scas
data16
cmpsl
idiv
or
insb
pause
cmpb
sbb
outsl
imul
mov
dec
push
or
xchg
call
in
subb
mov
cmp
movsl
popa
mov
cmpl
push
or
xor
outsb
mov
push
xor
push
inc
xchg
lahf
in
jne
rolb
jmp
shll
add
out
cmp
cltd
dec
xchg
jo
sub
sbb
test
sbb
rolb
adc
aas
push
fisubrl
and
xchg
push
jle
jns
imul
gs
or
push
xchg
mov
jge
sbb
sbb
and
js
mov
test
stc
shlb
test
repz
cmp
inc
sbb
pshufw
outsb
inc
pop
out
pop
push
movsl
test
jbe
lods
lret
icebp
mov
shll
test
hlt
enter
pop
xchg
negb
jmp
mov
jecxz
or
cltd
jbe
dec
daa
jb
insb
ss
repnz
inc
jns
adc
ljmp
dec
inc
sbb
mov
scas
das
dec
push
pop
scas
mov
jno
sahf
mov
or
or
ljmp
imul
push
and
xor
add
int3
rcrb
mov
fidivs
jge
xchg
jmp
push
data16
sbbl
aad
mov
adc
and
sbb
lret
int3
sbb
pop
es
mulb
adc
mov
hlt
fs
dec
in
xor
fiadds
cmp
icebp
mov
imul
push
sbb
inc
xchg
cmp
in
psllq
xor
int3
fidivl
andl
jle
scas
repz
cmp
jnp
in
cli
ss
out
add
jmp
out
rolb
insb
xchg
stc
sbb
popa
mov
rclb
fs
in
jno
pop
mov
and
mov
push
xchg
ljmp
xchg
clc
in
stc
lahf
cli
ljmp
cmc
outsl
push
sbb
lret
sub
rorb
mov
mov
and
imul
out
arpl
push
clc
xor
inc
ss
outsb
dec
andb
in
std
cltd
movd
cmpsb
pop
sahf
push
cwtl
cmp
pusha
int
fsubrs
pop
dec
mov
or
fs
jae,pn
mov
push
mov
or
hlt
or
outsb
out
push
sub
jns
sahf
imul
sbb
cmp
fmul
sbb
adc
stos
dec
sub
push
cli
lds
scas
enter
jo
sbb
jp
gs
inc
lods
shrb
push
icebp
sbb
ss
lret
sbb
sbb
mov
or
sbb
push
movsl
dec
push
lret
es
pop
and
mov
sar
adc
fdiv
mov
frstor
arpl
cmpb
or
cli
imul
mov
dec
mov
mov
outsl
std
rcrl
sbb
call
cmpl
cmpsb
jge
in
push
sbb
mov
xor
out
jge
jae
lret
mov
in
stos
push
lods
nop
cmp
pop
out
jae
pop
jns
repz
fstpt
idivb
dec
rorb
pop
insl
ret
push
inc
test
lock
mov
jle
xchg
pop
push
mov
add
iret
dec
dec
scas
aaa
outsb
cwtl
out
xchg
jmp
inc
xchg
jmp
not
inc
movsl
jmp
addr16
sbb
outsl
stos
aam
mov
push
mov
arpl
int3
inc
call
fstl
jbe
add
sub
cmc
mov
pop
pop
lret
mov
jg
inc
in
and
push
shl
jb
xor
rcrl
std
xor
push
jae
clc
out
sbb
jg
mov
imul
int
negb
popf
es
out
sarl
das
cwtl
cmp
jnp
rcrb
fsubrl
cmc
push
mov
inc
adc
dec
ud2
in
notl
dec
push
sbb
mov
pop
sub
in
pop
out
out
repnz
pusha
jecxz
mov
push
psubsw
jmp
shl
mov
lock
addl
mov
arpl
sub
test
jle
push
dec
pop
sbb
call
pushf
sub
sti
add
cmpsl
arpl
out
aaa
pop
and
lock
xor
rcrb
das
fnstenv
arpl
add
jno
lea
lea
icebp
adcb
xor
push
dec
sbb
mov
aad
jle
inc
lock
out
inc
sub
aad
pop
repz
mov
sbb
pop
cld
xlat
push
jbe
fldcw
dec
xlat
dec
sub
std
add
popf
jecxz
xor
fidivl
add
mov
lods
paddusw
outsl
lods
push
sti
and
out
test
jge
fldcw
add
aam
sbb
fistps
loope
add
outsb
jl
movl
pop
fldenv
out
xchg
mov
pop
sub
xor
inc
adc
out
enter
cmpb
push
outsl
cmp
int3
push
ja
adc
fcmove
jo
sub
popl
std
jb
sbb
and
sub
sub
loop
lods
nop
fs
dec
cmp
jo
inc
mov
ret
jo
shlb
push
pop
adc
cmp
lahf
jbe
stos
mov
mov
jo
insb
shrb
push
cmpsl
aaa
test
cmp
jl
and
jo
bound
inc
nop
int
mov
iret
out
ja
mov
xor
dec
ss
jo
xchg
int
jle
mov
jo
mov
or
in
sbb
cli
and
movq
push
and
cmpsb
addb
xorb
in
loop
pop
jo
push
sti
pop
fwait
gs
sub
xorl
mov
fs
rorl
push
adc
or
fsts
insl
mov
lret
push
imul
out
mov
enter
ds
push
ja
dec
mov
push
clc
aaa
les
cmp
jo
sti
mov
add
and
rcrb
push
sbbb
pop
xlat
mov
sbb
pop
je
xor
outsl
push
jo
cwtl
call
gs
inc
imul
sub
jge
js
jns
push
dec
lcall
je
or
jo
popa
mov
shlb
pop
iret
pop
arpl
cwtl
add
dec
mov
and
sahf
call
push
inc
jo
xor
fstps
data16
lret
pop
je
repz
sahf
jo
fsubs
ja
adc
gs
jo
jbe
xorb
aam
jb
repnz
out
xchg
xchg
scas
ss
add
push
in
xchg
nop
sahf
sbb
stos
aad
jo
aas
icebp
and
jo
xchg
xchg
xorb
out
push
push
loop
inc
ja
scas
cmp
mov
movsl
jb
and
xor
pop
sbb
push
jo
jae
fldl2t
int
inc
bound
jo
dec
dec
mov
aas
inc
xor
stc
push
cld
xchg
cmpsb
jo
jno
and
xor
jne
add
cwtl
stos
dec
fsubs
mov
lods
mov
shrb
fldenv
cmp
test
lret
aaa
inc
jo
movsl
pop
out
inc
outsl
push
sub
jo
jb
lcall
mov
pxor
xchg
ljmp
in
bound
jmp
repz
out
data16
nop
sahf
orl
xchg
out
mov
xchg
inc
jp
in
jo
mov
adc
loope
nop
js
xor
ss
push
gs
clc
adc
sarb
adcb
mov
jo
test
jnp
mov
sub
jmp
gs
out
jle
neg
cmc
mov
lcall
call
xchg
pop
and
out
out
mov
mov
aad
enter
mov
pop
jo
mov
cmp
sub
int3
push
mov
inc
lea
pop
adc
xor
mov
fcmovb
popf
dec
js
fwait
sbb
inc
xchg
xchg
inc
outsl
dec
mov
cmp
inc
mov
iret
jo
adcl
jp
jo
data16
pop
fs
mov
sbb
xor
jne
jo
mov
xor
das
cmp
sub
sbb
jo
sbb
xor
test
xchg
aas
in
jo
cwtl
imul
dec
sbb
mov
mov
push
mov
inc
fwait
dec
lods
stos
xor
fs
sbbl
xchg
cmpsl
xlat
fisubrl
scas
movsb
sub
pushf
ss
je
nop
mov
mov
dec
daa
loopne
lds
sbb
test
push
fstpl
dec
jb
jo
sti
or
repz
cmc
jo
fs
in
ret
sbb
cmp
adcb
sbb
iret
push
jae
jle
test
mov
imul
jo
in
popa
das
push
mov
test
sbb
push
out
shrb
jmp
push
sub
and
nop
pop
jo
test
cltd
xorl
outsl
mov
ljmp
int
stc
xchg
pop
int
mov
sbbb
fistpll
inc
jg
lock
aad
les
mov
pop
or
dec
movsl
xlat
pop
inc
jl
pusha
pop
jae
xchg
add
push
sbb
popa
dec
sub
add
add
jp
sahf
or
adc
push
fbstp
xchg
insb
pop
xorl
out
test
push
loopne
mov
or
add
jge
jne
pushl
stos
push
jl
rcl
pop
jo
add
mov
jo
cmp
lahf
push
sub
loopne
jo
and
pop
xchg
mov
sbb
jae
jmp
je
ficomps
push
mov
push
sub
cwtl
test
add
or
cmp
addr16
or
lret
add
shll
fs
in
shlb
fadds
ret
xchg
mov
push
das
jae
stc
jo
push
fstl
mov
cmp
push
add
xor
imul
jg
adc
or
cmp
sbb
jns
sub
fstp
adc
sbb
popf
int3
inc
cmp
mov
jo
xor
sub
push
cltd
jo
shr
loope
mov
mov
mov
dec
jmp
and
jo
jb
xorb
mov
sar
fisubl
add
xor
and
les
jo
sbb
dec
cs
scas
loope
js
push
dec
cli
add
and
jge
sbb
jb
sub
outsb
sti
jl
push
xchg
cmp
pop
out
jl
pushf
out
mov
jp
jo
jmp
fstpl
clc
int3
jl
loopne
in
jo
shll
dec
push
add
cmpsb
mov
jmp
cld
je
in
sbbb
jae
adc
daa
stc
sub
jb
jo
insb
sahf
push
lcall
aad
cwtl
cmp
add
pop
jmp
test
sbb
push
clc
jo
notb
jo
iret
cmp
push
std
push
add
or
shlb
aad
jo
loopne
stc
add
or
lcall
stos
push
into
dec
fsubl
sbb
in
xchg
lcall
ret
push
add
leave
lret
mov
out
xor
adcl
jo
push
push
jnp
fmuls
aas
or
arpl
fs
lea
push
dec
push
test
push
push
jo
cmpsb
push
enter
aam
hlt
popa
int3
jnp
xorb
cmc
xchg
loop
jbe
fs
mov
clc
jns
int
jle
out
stos
jo
mov
sub
sahf
js
jecxz
outsb
cmpb
jno
sbb
js
push
jo
push
lret
mov
mov
mov
xor
adc
jo
push
insl
sub
add
cmp
ja
adc
les
dec
stc
push
sbb
cmpsb
int
and
imul
inc
xor
sbbb
xchg
mov
test
lods
sbb
cmpsb
adc
in
jo
xchg
leave
jns
push
xor
imul
fstl
mov
xchg
cmp
ja
daa
add
je
sub
or
push
mov
out
mov
xchg
mov
fdivs
adc
clc
mov
leave
out
lock
xchg
mov
sbb
push
js
popa
imul
jae
sbb
lds
inc
adc
mov
jo
and
inc
in
or
dec
dec
inc
lea
jo
mov
imul
push
cmp
pop
jo
loopne
mov
jo
jno
or
lds
sub
inc
xchg
adcb
in
push
xor
inc
adc
les
sbb
hlt
fisubrl
sub
pop
mov
push
outsl
pop
in
push
fwait
jo
sbb
jle
mov
dec
jno
dec
mov
loope
ds
gs
xchg
fadds
mov
fs
push
je
add
and
or
pop
push
outsb
sub
out
int3
scas
data16
mov
popa
scas
jae
xchg
mov
out
add
push
jae
cwtl
mov
lds
lods
sbb
nop
pop
sub
push
pop
test
std
test
push
mov
and
sarb
hlt
inc
lock
paddb
sti
insl
and
and
push
lods
andl
mov
sub
outsl
push
and
popf
inc
arpl
insl
push
sub
lretw
jle
movsl
add
pop
mov
jae
mov
hlt
lcall
cli
push
push
clc
gs
jns
ret
jp
aaa
in
fwait
mov
jmp
xchg
out
jae
hlt
jecxz
sbb
cmp
jmp
sub
lods
fbstp
ja
mov
xor
pop
fwait
outsl
pop
push
notl
rol
jle
arpl
cmp
or
xor
jae
stos
lea
dec
xor
and
pop
lock
aas
jl
pop
or
pop
call
cmpsl
aas
push
fstl
insl
mov
call
and
out
int3
repnz
shrb
push
push
rclb
cs
pop
not
ljmp
push
imul
cltd
lcall
outsl
stc
aas
mov
scas
push
mov
cmp
xor
dec
inc
in
sub
loopne
mov
aam
pop
add
stc
scas
ret
cmp
jo
in
stos
test
out
mov
add
sub
sarl
fisubl
lea
jo
lock
dec
and
loop
fucomi
inc
mov
dec
cmpsl
das
das
outsl
pop
or
dec
mov
fnstenv
cwtl
mov
adc
fcmovne
adc
pop
xchg
jo
cs
out
dec
xchg
in
pop
nop
mov
test
outsl
popa
inc
enter
add
cmpsl
and
mov
pop
clc
jns
das
push
pop
pop
lret
int
sbb
jbe
push
mov
fisubrs
fstps
cmp
adc
jl
jmp
jae
adc
mov
fwait
sbb
sbb
mov
mov
leave
pushf
lahf
or
js
rcrb
lods
enter
lahf
push
and
and
push
xlat
out
std
frndint
push
fs
sub
and
pop
fimuls
pusha
loop
dec
add
outsl
lea
jg
sbb
test
dec
sti
mov
add
fisttps
sbb
ret
iret
out
adc
jae
movsl
das
gs
loope
or
xor
gs
fadds
in
sbb
mov
das
insb
fs
cmpsb
sbb
jg
pop
out
outsb
imul
lret
push
lods
sub
push
push
jae
fstl
dec
imul
mov
out
mov
int3
cmp
push
int3
ljmp
xchg
mov
sub
mov
ljmp
mov
sub
mov
jo
data16
arpl
shrb
or
shll
fistps
arpl
mov
dec
std
dec
cmpsl
outsl
mov
push
sub
stos
adc
mov
mov
mov
test
dec
mov
push
fcomps
pop
test
sarl
pop
jbe
or
jbe
arpl
xchg
data16
jnp
sbb
jb
jg
xchg
cmp
sub
adc
and
xor
add
ret
mov
ret
fcmovu
xor
xlat
push
jne
inc
nop
ret
in
out
push
push
inc
rorb
mov
sub
idivl
scas
lds
fcmovnbe
push
push
fidivrs
pop
fisubs
ficoml
decb
in
enter
fstps
das
jl
jle
stc
adc
sub
je
fimuls
lock
xlat
in
jae
push
dec
cltd
inc
in
aad
jbe
fs
jmp
idivl
arpl
sar
out
mov
movsl
mov
call
imull
xchg
les
es
popa
lock
rorb
or
push
push
int3
bound
xor
sti
cmpsl
fistps
adc
sbb
cmp
mov
pop
mov
sub
jmp
leave
outsl
pop
push
xlat
lods
sub
pop
push
enter
inc
push
shr
jmp
mov
rcpps
shl
scas
and
mov
xor
leave
fstl
scas
nop
test
repnz
push
mov
cld
enter
pop
jae
jl
aas
and
xchg
sahf
out
das
add
cwtl
jne
jae
jno
fnsave
sbbb
fs
stc
mov
js
and
push
inc
push
jg
fisubs
roll
push
or
shlb
ret
pop
leave
inc
mov
cmp
test
xor
pop
jle
cmpsl
test
nop
incl
pop
std
push
shrb
in
add
and
imul
stc
sub
jbe
dec
sub
fidivs
arpl
mov
fs
push
inc
xchg
pop
push
adc
sbb
mov
ljmp
flds
ja
sbb
mov
jbe
out
and
add
mov
and
mov
lock
jae
xor
jae
lret
xchg
imul
lods
inc
add
imul
jg
rcr
icebp
pop
cmpsb
inc
or
push
and
out
insl
add
les
adc
adc
ret
jl
stos
pop
mov
js
aaa
nop
hlt
mov
and
add
cmc
jo
mov
inc
mov
jo
cld
lods
jo
pop
leave
addr16
lret
adc
cwtl
out
mov
jmp
ja
or
popa
push
popa
push
paddusw
dec
dec
mov
mov
jnp
pop
fstl
jecxz
add
pop
outsb
sahf
call
jo
push
cmp
jnp
fdivrl
outsb
pop
dec
int3
imul
dec
gs
push
mov
and
imul
jbe
repz
jo
faddp
or
hlt
jno
dec
or
pushf
dec
stos
xchg
std
decl
dec
js
call
aam
push
push
sbb
je
cwtl
fwait
or
dec
mov
popf
out
test
lods
jl
jo
mov
xchg
sub
push
sub
out
mov
sub
sub
pop
jnp
dec
jp
fwait
mov
mov
mov
cwtl
adc
cmpsb
dec
stc
sub
or
test
sbb
call
sub
xchg
and
out
cld
cmpb
sub
mov
lock
mov
cmp
inc
jecxz
or
loop
push
jle
mov
fisttpl
pop
out
test
xchg
and
adc
xchg
pushl
out
xor
popa
jo
cmp
sbb
jo
inc
dec
aam
inc
xchg
es
xchg
mov
or
fsubr
ret
pop
popf
scas
jb
shll
mov
jg
sahf
or
pop
pandn
xchg
les
inc
push
cmp
jo
enter
push
adc
or
push
iret
pusha
jae
xchg
mov
bound
jo
push
xor
repz
lahf
mov
jo
xchg
and
andb
cmp
loope
pop
jae
test
jp
push
xchg
jno
shrb
xchg
jns
ret
push
stc
pop
loop
leave
fwait
mov
lds
inc
push
jge
je
and
mov
mov
nop
rorb
push
dec
shl
inc
test
cmp
mov
sti
jmp
outsl
mov
cmp
push
pop
and
leave
rsqrtps
mov
insb
clc
bound
jo
push
pop
mov
les
bnd
adc
icebp
push
add
pop
mov
aam
rcrb
dec
or
lds
push
fdivrp
mov
or
mov
mov
aam
jne
cmpsb
sbb
jo
movsl
ret
sbb
fstpt
dec
jo
push
mov
enter
outsb
inc
sbb
sbb
jo
aam
sahf
inc
xchg
imul
lds
cmp
sbb
div
nop
out
mov
je
leave
push
lret
jg
loope
inc
dec
jo
cld
jb
pop
mov
xor
push
leave
cmp
ja
xchg
dec
mov
orb
pop
movsl
jo
test
cs
xor
push
and
dec
notb
clc
nop
cmc
xchg
lea
push
cmp
inc
or
push
test
lahf
xchg
or
and
and
movsl
lds
xlat
cmp
cmp
or
xor
add
jno
data16
insl
mov
nop
mov
ja
xchg
mov
push
cltd
sbb
push
jb
sarb
add
push
xor
sub
pop
ret
xchg
jo
loop
ret
or
jmp
dec
sahf
push
dec
jae
xlat
iret
xchg
mov
sbb
lds
movsb
insl
lock
pop
mov
sub
push
pop
orb
mov
out
mov
inc
or
cs
nop
rsm
mov
mov
push
jo
repz
jae
and
xorl
out
jmp
inc
xor
jo
mov
mov
in
and
rcrb
xchg
sahf
or
pop
push
cmp
push
mov
sub
xchg
mov
jo
es
sbb
fnclex
sub
xchg
xchg
aad
jo
inc
inc
movsb
sbb
js
mov
xchg
mov
inc
adc
xchg
jne
nop
cld
sarb
jo
popa
cmp
fidivs
and
sub
mov
dec
jo
jge
roll
andb
andb
push
stos
pop
jo
inc
loopne
mov
roll
bound
jb
cmp
call
es
ljmp
mov
jo
js
add
ret
push
in
mov
cwtl
sub
clc
jg
popf
push
mov
int
inc
mov
repnz
lret
push
dec
pop
pop
addb
test
leave
xchg
cmp
rclb
dec
notl
jo
in
sub
xor
pusha
jo
fimull
sub
jae
imul
mov
mov
loope
sub
and
jne
push
fs
mov
nop
aad
add
js
sub
pop
loope
jo
aam
flds
adc
mov
int3
aas
clc
les
cmp
scas
inc
push
xchg
inc
jo
and
outsb
mov
es
mov
jns
pop
inc
fs
or
push
gs
jo
and
fs
shld
pop
insb
iret
and
lret
xchg
adc
jo
dec
or
fucomp
xchg
cli
mov
je
adc
xlat
sbb
sbb
lea
ret
fimuls
outsl
jo
movsl
hlt
pop
lahf
nop
xchg
dec
jo
mov
and
lea
iret
push
fisubrs
bound
inc
jbe
mov
mov
insl
int
mov
cld
popf
cmp
aam
repnz
jo
or
pop
push
xor
push
jo
sahf
xchg
mov
mov
jo
adc
mov
fstps
inc
push
mov
jo
mov
out
jo
pop
pop
sbb
incb
push
mov
jo
pop
ss
rcrl
aad
jo
mov
mov
in
das
bound
push
sub
cli
orb
repnz
xchg
jle
push
std
cmp
adc
imul
xor
or
nop
jecxz
dec
jns
add
sbb
xchg
sbb
mov
leave
push
mulb
adc
jo
insl
or
enter
movsl
sub
sub
cwtl
js
jl
sbb
jo
sbb
outsl
int
jb
or
sub
test
popfw
fidivl
out
addr16
push
dec
xchg
pusha
xchg
in
adc
adc
pop
jp
xchg
mov
mov
les
jo
mov
or
jo
sbb
inc
sbb
jl
hlt
jmp
xor
icebp
cmp
jo
mov
jmp
loop
mov
ds
imul
stos
bound
inc
int
xchg
sbb
and
imul
cmpb
xchg
push
mov
jns
test
aad
push
inc
adc
lods
movq
xchg
pop
pop
insb
stos
jbe
into
nop
and
fcoms
outsb
mov
xchg
jno
xchg
ret
xchg
push
icebp
scas
mov
cmc
adc
sub
jge
js
lds
mov
dec
and
xor
jo
sti
sbb
sbb
xor
cmp
lea
push
mov
mov
jo
add
or
jo
es
mov
jo
lods
aas
jl
add
mov
movsb
fcoms
stos
sub
jmp
ljmp
jns
xchg
jo
push
push
call
loop
jo
test
pushf
les
add
fbstp
movsl
daa
cwtl
and
inc
xor
inc
sub
fistl
dec
hlt
cwtl
jo
out
adc
into
push
mov
xchg
movsb
push
sub
jae
mov
jnp
push
mov
fucomi
push
adc
shrb
sbb
addr16
jnp
es
js
mov
int3
cwtl
push
in
push
cs
jge
stos
lcall
jl
test
cmp
jae
pop
js
mov
jns
adc
filds
shr
shlb
testb
mov
fs
push
pop
adc
sahf
insl
or
xor
out
aam
push
mov
scas
das
ret
inc
scas
jae
mov
popf
inc
imul
mov
pop
push
in
xchg
lods
pop
jmp
and
sbb
mov
and
and
insl
push
jp
mov
hlt
int3
and
jg
cmp
push
and
das
std
jle
sub
lock
dec
jns
xorl
mov
cmc
mov
repz
repz
nop
xchg
cltd
mov
les
push
sbb
push
push
rorb
and
adc
testl
inc
jp
push
bound
jnp
cmp
push
mov
xchg
mov
stos
xchg
and
push
jnp
cmp
fdivs
or
jbe
pusha
sub
xor
cmp
and
dec
subb
insl
inc
movsl
jp
mov
adc
adc
ljmp
cs
test
fstps
jp
in
imul
loopne
push
jno
cmp
sub
test
pop
jnp
clc
mov
and
arpl
jbe
js
xchg
xor
mov
loop
mov
cmp
cmpsl
mov
sbb
arpl
pcmpeqw
adc
arpl
push
or
jns
jle
xchg
insl
xchg
nop
lea
nop
es
lret
sub
add
cli
stos
add
fsubs
push
je
sbb
mov
add
fimuls
push
cmp
test
inc
sti
sub
aas
in
hlt
sub
mov
arpl
int3
fisubs
add
inc
xchg
pop
rol
scas
std
xchg
insl
fiaddl
mov
popf
mov
push
movl
ss
add
stc
mov
jle
addr16
sbb
push
push
mov
js
push
divb
inc
ja
mov
jg
sbb
je
sahf
cmp
or
std
xchg
dec
or
out
push
mov
cwtl
mov
or
leave
ja
flds
xchg
sbb
jae
pop
cltd
call
lods
cwtl
data16
insb
iret
ds
mov
andl
mov
lahf
scas
call
sbb
jae
data16
iret
dec
call
rclb
call
call
or
sub
inc
imul
jne
dec
and
inc
adc
loopne
inc
jnp
add
push
sbb
jnp
arpl
lea
stos
or
aad
cld
jle
in
push
mov
stos
shl
rolb
mov
cmp
in
in
hlt
jnp
xor
rcl
loope
jle
and
scas
cltd
sahf
mov
lea
mov
imul
inc
jmp
les
xchg
imul
jl
and
popa
arpl
inc
xchg
stos
jle
xchg
adc
push
int3
lahf
inc
mulb
and
repz
rol
out
mov
outsb
cmp
mov
cmp
mov
sahf
aad
lret
ss
popa
adc
pop
add
arpl
insl
cmp
pop
subb
or
jae
ja
mov
cmp
in
dec
pop
sbb
inc
scas
das
ficoms
rolb
loop
test
hlt
cmpsb
test
or
xchg
jbe
rorl
push
js
sbb
call
lcall
pop
fnstenv
mov
lahf
lahf
sub
stc
out
mov
inc
adc
and
and
jp
scas
scas
gs
inc
cmp
test
mov
sub
hlt
jecxz
push
imul
cmp
std
xor
clc
in
hlt
mov
cwtl
cmp
xor
xchg
idiv
mov
pop
dec
adcb
jnp
std
test
jle
cmp
shlb
sar
fldcw
mov
dec
adc
jle
imul
test
outsb
xchg
add
sarb
int
inc
sbb
popa
cmp
add
push
mov
or
push
ja
cmpb
fwait
dec
sub
push
jl
jp
out
fsts
pop
mov
mov
inc
mov
xor
test
js
jae
cmp
mov
int3
mov
cmpsb
mov
in
lret
sbb
pop
push
std
jle
sbb
sub
or
or
pop
push
cmc
dec
outsl
in
arpl
jmp
je
sbb
adc
insl
push
lds
dec
jmp
fs
cmc
arpl
mov
pop
jmp
push
lret
xchg
pop
xchg
es
out
xchg
and
dec
test
sbb
mov
out
inc
mov
or
idivb
sbb
xor
push
clc
out
scas
sbb
push
outsb
mov
lods
and
pop
mov
test
loope
cli
push
xchg
inc
scas
pop
inc
insl
xchg
call
jns
fs
addr16
mov
dec
int3
and
xchg
cmp
push
mov
pop
sbb
push
mov
mov
adc
xchg
cld
sub
mov
xor
pop
mov
fs
imul
pop
test
adc
inc
pop
sub
jge
cmp
js
cmp
insl
cmpsl
inc
in
mov
jge
fwait
sbb
imul
xor
cwtl
outsl
mov
lods
stos
xchg
shlb
repz
cmc
mov
sub
shll
inc
jo
sbb
inc
sbb
jae
cs
mull
pop
cmp
outsb
push
sub
orl
xchg
mov
in
mov
jecxz
mov
nopl
fldcw
in
movsb
es
sub
and
lea
dec
addr16
xor
jmp
jae
imul
sbb
fldt
les
out
pusha
stos
xchg
shrl
addr16
dec
inc
test
add
pop
arpl
imul
nop
arpl
xchg
pop
in
std
fnstcw
sub
xor
jl
sub
sbb
mov
pusha
out
iret
cld
sbbl
lods
sub
xor
es
jae
cmp
ljmp
scas
push
xor
into
aas
xor
lock
pusha
insb
fucomip
push
xlat
inc
dec
push
mov
lods
xchg
repz
push
sti
fs
lahf
pop
jae
xchg
mov
jns
into
dec
test
mov
push
mov
push
sub
test
jnp
cmpsb
cmpsb
shlb
mov
pop
cmpsl
js
mov
loop
test
cmp
arpl
icebp
and
mov
mov
xor
fadd
sbb
dec
sbb
push
jae,pt
dec
nop
cli
adc
js
lahf
add
pop
push
je
shlb
popa
mov
mov
add
scas
icebp
push
dec
push
mov
add
insl
arpl
shll
sub
dec
cmc
jo
add
aam
sub
aaa
repz
lods
add
jo
cmc
and
or
test
sbb
push
mov
in
mov
dec
sub
mov
mov
dec
mov
mov
cmp
test
test
int
lahf
push
andb
leave
inc
pop
jo
repnz
test
test
repnz
push
jo
movsl
aad
repz
insb
movsb
in
or
push
cld
cmpb
aam
pop
pop
mov
ljmp
jge
pop
jnp
je
fldcw
jp
push
or
ret
pusha
bound
lea
imul
push
jmp
ficoms
fwait
insl
lods
imul
inc
cld
or
lea
inc
sbb
jo,pn
push
sbb
mov
imul
jmp
jo
fisttpl
cmp
dec
cmpsb
repnz
es
nop
mov
cwtl
nop
xlat
mov
sub
jne
fidivs
xchg
shrb
jbe
jno
jo
es
pop
jo
fistl
cs
mov
les
sub
out
dec
outsb
cmp
ffree
movsl
mov
scas
shrb
ret
movsb
pop
popa
and
push
jo
fnstenv
rcr
jo
test
cmc
jo
mov
xor
pushf
and
push
push
cmc
jo
notl
or
or
push
xchg
inc
sbb
push
fisubrs
icebp
jne
jo
les
sub
sub
and
js
or
mov
mov
jmp
out
xorb
imul
inc
shlb
loope
cmp
mov
xchg
mov
stos
in
aam
dec
jo
clc
mov
jg
jb
das
jge
jne
shll
xchg
pop
add
pop
loopne
fstps
dec
mov
jo
daa
sti
mov
mull
or
fwait
push
push
mov
into
mov
fldl
mov
or
or
xor
repz
jo
dec
out
mov
mov
mov
pshufw
sub
pop
lock
sbb
xor
ja
test
push
or
inc
add
jo
repz
lock
inc
mov
int
or
jo
fsts
stos
popl
shlb
imul
push
push
lret
leave
dec
sbb
jo
sub
or
aas
dec
xor
sahf
xor
rclb
sbb
jne
pop
cmp
jle
pop
dec
sub
xorb
inc
jo
mov
xchg
xchg
or
push
sub
mov
testl
js
sbb
jo
mov
cs
pop
int
sub
xor
mov
or
sub
push
xchg
jo
sbb
in
div
mov
jmp
test
cltd
pop
ss
sbb
xlat
cli
loope
or
mov
fidivs
dec
pop
fadd
mov
sub
jo
rcr
out
mov
sbb
or
stc
or
loopne
push
mov
jo
jae
ja
adc
push
in
loopne
pop
sahf
xchg
ds
xchg
push
mov
cltd
in
fyl2xp1
or
push
sub
lock
std
push
sub
mov
fisttps
jmp
dec
push
in
and
push
lahf
fstpt
ret
int
shll
xchg
jae
sbb
fnsave
movsb
push
push
test
lret
inc
lods
imul
out
mov
xchg
and
jmp
lcall
xchg
fcom
cmp
lret
jae
xchg
pushf
jge
adc
pop
mov
testl
push
mov
or
cmpsb
pop
sbb
xchg
dec
loop
dec
sarl
ja
lock
insl
dec
xor
leave
cmp
lret
out
sub
inc
lods
xor
mov
arpl
sarb
fs
pop
int
enter
cli
or
fidivs
add
dec
mov
jae
dec
push
jmp
sub
add
add
sub
adc
inc
fxam
es
dec
sub
cmpsb
mov
scas
lret
inc
shll
lea
lret
test
adc
push
mov
adc
adc
call
loop
cmc
mov
xorb
fucomip
and
roll
jno
scas
leave
jmp
jg
fcmovu
inc
mov
and
push
pop
mov
push
sub
lock
scas
jns
insl
pop
aas
std
lods
or
adc
mulb
inc
add
mov
jecxz
bound
sti
fwait
cmp
lods
jne
sarb
mov
jnp
lret
pushw
inc
mov
out
jno
cli
sti
test
push
mov
inc
inc
xchg
xor
inc
rclb
js
xor
arpl
jae
rcrl
xchg
mov
push
jo
push
xchg
mov
mov
cld
shrb
xor
sub
shll
dec
jae
in
dec
or
mov
scas
xor
and
cwtl
lahf
cmpsl
xchg
std
pop
sahf
mov
sbb
enter
push
mov
cmpl
push
hlt
andb
test
jae
push
mov
or
bsr
imul
loope
test
rcrb
fsts
mov
inc
mov
es
dec
int3
arpl
mov
jae
push
scas
hlt
fistps
shlb
das
out
push
push
test
xor
adc
mov
cmp
pop
push
push
daa
fxch
xchg
fcmovnb
pop
sub
jmp
mov
out
sahf
jno
test
jmp
mov
loopne
std
push
and
jnp
jmp
cmpsl
sbb
cmpl
cmp
daa
pop
out
repnz
mov
stos
leave
shlb
stc
cs
add
arpl
cltd
sbb
pusha
adc
aad
xor
data16
mov
mov
andb
mov
rclb
pop
mov
in
es
mov
fucomi
push
xchg
mov
mov
mov
mov
mov
ja
sub
push
push
mov
sbb
cmp
jnp
pop
out
dec
das
shll
lea
push
pusha
shll
push
out
mov
xor
test
addl
xor
pop
lret
lahf
dec
out
adc
push
es
stc
xor
adc
xlat
mov
dec
xor
push
inc
xchg
cltd
add
mov
add
lds
push
enter
vrcpps
add
stos
adc
sub
push
and
fisubl
sbb
mov
mov
leave
loopne
sbb
inc
lret
push
icebp
push
fisubrs
mov
fs
je
iret
cli
mov
mov
out
cmp
lods
sbb
rorl
fcmovnu
nop
cmp
enter
or
mov
adc
and
sub
push
test
cmp
rolb
out
pusha
mov
fldl
push
mov
aaa
scas
sbb
scas
dec
loope
out
lock
arpl
scas
cli
jae
or
mov
icebp
in
addr16
jbe
inc
mov
ds
cmpsb
and
js
arpl
jb
push
loopne
mov
cli
cmpsb
out
fwait
ja
add
pop
cmpsl
cmpsl
pop
lahf
sahf
mov
fnsave
int3
lahf
inc
mov
jl
push
and
stos
push
inc
pusha
push
cld
dec
roll
loop
jne
dec
out
int
jmp
mov
mov
in
imul
pop
inc
sahf
mov
enter
cmc
lahf
mov
subl
dec
fwait
aaa
sar
jae
xor
leave
sbb
shrl
nop
push
js
xlat
lds
jns,pn
scas
fldcw
mov
pop
aaa
cli
pop
enter
out
pop
adcb
movsb
fs
dec
xchg
lock
adc
pushf
lea
in
dec
rolb
stos
lds
in
into
mov
sub
popf
in
mov
dec
jo
xchg
cmp
movsb
sbb
arpl
pop
dec
jae
sub
das
or
in
jo
mov
mov
mov
adc
insb
or
jo
sub
loop
cmp
push
movsl
xchg
mov
subl
push
cwtl
cld
adc
lret
mov
jmp
push
jo
xchg
push
js
int3
stc
cltd
jo
lods
mov
loopne
xchg
imul
jo
jno
lods
mov
arpl
enter
mov
dec
pop
aaa
mov
push
mov
sub
push
add
cmpb
jp
jo
push
shll
jge
lea
jp
mov
shrl
insb
jge
les
xor
int3
push
in
xchg
arpl
nop
daa
mov
pop
dec
pushf
jb
shlb
test
sbb
pop
pop
sahf
inc
mov
add
lods
je
jo
dec
or
sub
jo
jmp
orl
imul
jle
pop
std
andb
jae
pop
dec
popa
lret
mov
xor
or
ficompl
push
pop
inc
packssdw
iret
xchg
mov
adc
lea
and
and
loopne
lret
and
sbb
jo
gs
mov
aam
add
sbb
imul
addb
mov
push
insb
jo
andl
pushf
call
test
daa
mov
mov
cmp
lds
movsl
push
lret
mov
pusha
je
in
stos
lock
bound
lds
jo
rcrb
in
add
jmp
pop
fstps
jge
jo
fdivl
cmp
outsb
jo,pt
lret
out
and
push
xchg
dec
dec
adc
cmp
jo
sbb
cwtl
cmp
mov
ret
jae
adc
scas
scas
test
cmc
cmp
push
repz
psubsb
pushf
cmpsl
data16
jecxz
pop
push
jae
sub
subb
fists
push
mov
jnp
jmp
xchg
lock
loope
int3
fstps
rol
inc
adc
xchg
jl
daa
jo
shrl
mov
in
mov
movsl
imul
xchg
pushf
jbe
jp
lea
nop
add
jns
cs
jo
push
cmpsl
movsl
sub
mov
imul
icebp
or
shl
jo
inc
pop
or
aad
xor
sub
repnz
xor
jo
lret
jg
dec
add
js
mov
loop
jo
jl
mov
daa
dec
fcmove
mov
in
andb
inc
adc
jo
rcll
cmp
or
xlat
nop
xorl
jne
sbb
pusha
jo
sub
mov
lret
xorl
sub
jbe
add
data16
mov
or
sahf
stos
or
je
xchg
xchg
pop
sub
pop
pop
xchg
sub
shll
hlt
insb
sub
lea
or
pop
cltd
iret
bound
pop
pop
mov
inc
insl
xchg
aaa
faddp
popf
arpl
cli
scas
jmp
dec
enter
cmpsl
and
jo
out
cmp
imul
dec
in
jmp
in
adcb
adc
pushf
cltd
jns
push
sbb
cmpb
jae
xor
aam
stos
mov
ret
fisubs
into
adcl
inc
dec
fmull
imul
inc
clc
inc
push
out
jp
popf
mov
dec
cmc
xor
stc
push
push
pushf
out
mov
fstl
idivb
daa
push
push
pop
push
sbb
pop
pop
jl
sbb
push
shr
cld
addr16
xor
mov
push
fcomps
mov
data16
pop
ss
mov
les
push
lods
xchg
mov
into
mov
cmpsl
daa
in
xchg
pop
ror
mov
sbb
popa
sub
fsubrl
aas
test
in
stos
rol
sahf
cmp
push
call
push
or
jae
mov
std
jo
xchg
mov
xchg
lea
or
fidivrl
push
or
cmc
push
jle
fistps
pushf
or
popf
scas
xlat
lret
in
xchg
xchg
es
in
mov
int3
shll
int3
push
inc
hlt
out
jg
jae
test
jae
cmp
ret
cmp
mov
xchg
cmp
sbb
dec
and
enter
mov
xchg
xchg
mov
fisubrs
loop
shrb
mov
aaa
pop
fadds
stos
dec
lret
jmp
cmp
test
ss
push
out
jge
pop
mov
mov
fs
mov
jns
sahf
es
repnz
mov
jle
push
push
push
int3
mov
rcrl
addr16
cmpsl
into
iret
mov
bound
or
outsb
xor
adc
xlat
pushf
cmpsl
inc
test
fiaddl
push
fsubrs
push
ljmp
aad
ret
adc
jae
jg
lock
push
and
repnz
out
div
pop
lcall
orl
pop
mov
mov
dec
jae
or
hlt
enter
divl
and
mov
push
loope
mov
mov
sbb
fsubrp
or
xor
push
push
adc
ret
scas
das
adc
pusha
shrb
push
lret
decl
jo
popa
int3
jns
in
in
or
add
xchg
xchg
mov
mov
dec
adc
and
mov
cwtl
jo
mov
mov
gs
dec
jo
mov
jecxz
jno
mov
mov
insb
mov
push
enter
jp
cmpsl
xor
xchg
ror
lock
fdivrl
aam
ret
push
xchg
push
push
adc
sbb
jo
add
sbb
push
enter
push
xlat
lds
or
and
insl
arpl
jo
jl
lds
scas
mov
jp
cmp
sbb
jo
xchg
daa
and
lods
fdivl
lea
outsb
jo
fisttps
cwtl
mov
loopne
int
pushf
and
adc
sub
ds
pop
insl
loop
jl
ja
pop
js
jge
fadds
add
xchg
sub
in
xorb
arpl
mov
mov
push
mov
ror
jnp
repz
cmpsb
sbb
js
mov
adc
inc
xchg
lret
jle
dec
fsts
lea
cmc
sub
jo
cmp
sti
jl
insb
jo
sub
pop
das
fcompl
jo
arpl
cld
mov
lcall
jo
jne
ret
imul
incb
or
xor
jo
push
popf
push
push
jg
rcl
or
mov
jo
lcall
jo
sbb
mov
mov
out
movsb
or
push
pop
jo
testb
lods
mov
jo
or
std
xchg
jo
jp
push
pop
test
and
add
addr16
pop
jo
xor
in
daa
adc
jecxz
cmp
inc
mov
or
and
mov
inc
in
xorb
icebp
mov
dec
out
cltd
or
adc
fs
xor
mov
jo
pop
xor
push
into
adc
testl
and
push
jnp
xchg
adc
jo
outsl
inc
daa
xor
sub
xor
jb
lods
ljmp
pusha
mov
pop
jp
cmp
jo
mov
sub
shll
test
inc
sbb
cltd
movsb
lods
call
xchg
int3
loopne
mov
mov
dec
std
loope
les
mov
aaa
dec
push
loop
push
adc
lock
pop
cli
mov
lcall
jo
addl
add
lods
daa
ret
jo
pop
fbld
jle
mov
jo
repz
pop
lahf
jo
and
test
sub
jnp
add
fldl
jno
sbb
pop
aas
push
stos
mov
mov
das
jnp
repnz
in
jge
fs
jo
sahf
or
jo
adc
mov
outsb
jmp
int3
xor
jmp
movzwl
js
out
jmp
and
nop
dec
mov
fldcw
das
mov
jo
push
mov
mov
loop
pop
adc
lea
push
jg
lret
jl
repnz
pop
nop
mov
sahf
cld
nop
inc
aam
testb
sbb
dec
outsb
hlt
leave
cmp
sub
dec
mov
data16
add
incb
lds
nop
pop
cmc
lods
leave
ljmp
add
sub
lret
xchg
test
xchg
xchg
orb
fcmovne
fwait
mov
push
xor
jno
lock
dec
cmp
sub
xor
jo
pop
mov
js
sub
xchg
adc
push
dec
adcb
ret
dec
stc
jo
sbb
xor
shrl
repz
xchg
add
mov
pop
test
imul
xorb
jle
mov
dec
xor
data16
fisttps
sub
sub
jno
push
jnp
cmp
jo
inc
push
mov
jo
loope
inc
mov
imul
shrl
xchg
insb
stos
test
sub
nop
pop
stc
movsl
shr
int3
jae
movsb
mov
xor
mov
std
or
push
or
int
setbe
inc
push
callw
loope
js
movsl
in
int
psubb
jno
pushl
test
cmp
pop
call
sarb
inc
inc
sti
sub
jae
push
push
in
jno
mov
pop
jae
xor
ret
jg
inc
jns
popf
mov
cmp
mov
cmc
aam
inc
orb
xchg
pop
cvtps2pi
rolb
out
scas
xchg
or
mov
sbb
mov
fdivl
scas
jo
mov
shlb
inc
les
in
lahf
or
daa
nop
mov
fs
insl
push
jo
pusha
jmp
shrb
mov
ds
loope
out
in
add
nop
xchg
push
jb
aam
mov
bound
mov
into
push
sub
mov
xor
cli
cmp
dec
jecxz
in
lcall
sub
push
mov
mov
add
repz
push
ss
push
loope
loopne
lahf
sub
adc
jo
mov
push
nop
pop
stos
lret
outsl
jno
or
mov
ficompl
add
jo
cmc
cmp
lcall
mov
mov
jge
cmp
push
lret
cltd
and
ret
push
insl
repnz
outsl
jo
movsb
pop
out
pop
aam
out
jo
add
push
out
inc
jo
insb
or
jl
leave
xchg
or
mov
sar
xchg
inc
fcmovb
push
sub
lods
loop
jo
xchg
mov
mov
mov
adc
addr16
js
jo
add
jge
inc
sub
push
sub
push
mov
mov
lods
lcall
cmp
dec
leave
xlat
popa
clc
or
lret
les
ja
pop
insl
cmc
subl
je
mov
sbb
mov
pop
pushf
nop
and
fistpll
xchg
pop
sbb
mov
mov
comiss
je
ja
cmp
xorl
mov
sub
arpl
das
cmpb
mov
rclb
es
call
jle
sbb
clc
test
push
cmp
mov
sti
mov
cmp
mov
or
jae
push
and
sbb
in
lds
filds
sti
jo
dec
out
push
push
lods
hlt
and
jge
lahf
stc
neg
inc
cmp
inc
and
loop
sbb
pop
lods
and
cmc
sarb
ja
xchg
ja
lock
push
and
mov
es
xchg
fidivrs
decl
lahf
dec
mov
in
rorb
pop
roll
enter
nop
aad
xchg
jp
lahf
cmp
scas
out
jae
cmp
sbbb
jge
in
jg
out
push
sbb
inc
mov
inc
fmul
inc
pop
gs
jmp
jle
std
shlb
jp,pn
or
sbb
and
insl
int3
lock
mulb
jl
push
arpl
dec
jae
cmp
sti
xchg
dec
fs
xor
add
add
lock
enter
out
rcll
xor
fsts
adc
stc
cmpsl
push
adc
and
fxch
adc
add
mov
lret
or
into
outsb
enter
pusha
test
or
ljmp
and
cmp
fidivl
lea
jnp
std
mov
addr16
adc
xchg
xchg
out
negl
add
xor
fwait
jle
xor
and
insl
dec
out
nop
mov
xchg
and
jns
inc
jle
int3
push
jge
stos
push
jae
mov
sub
fisubs
mov
dec
int3
xchg
lds
cmpsb
jmp
call
mov
scas
push
int
xlat
leave
pop
mov
add
cltd
push
adc
push
xor
adc
insl
pop
mov
and
push
push
xor
pop
adc
inc
cld
std
mov
repz
clc
aaa
ret
nop
ljmp
std
lea
arpl
push
in
push
out
lock
xchg
lock
sbb
push
and
cltd
mov
scas
lds
in
push
movsl
pop
fs
push
pop
mov
cmp
lret
adc
xor
push
jmp
mov
dec
int
out
mov
mov
stos
jle
xchg
test
jo
push
add
mov
inc
sub
test
scas
push
dec
rol
xchg
shlb
mov
push
xchg
jle
data16
ret
shlb
sbb
inc
mov
nop
loope
adc
pop
sub
divl
loope
out
adc
sbb
mov
sbb
lret
or
scas
lea
pop
xor
dec
push
fildl
cmpl
xchg
nop
in
mov
cs
test
mov
imul
mov
dec
fdiv
xchg
pop
les
jo
lret
mov
outsl
jbe
leave
nop
stos
xor
cmpsb
arpl
or
rcrb
or
push
xchg
call
xor
loope
mulb
pop
cmp
xchg
test
mov
sub
xchg
js
pop
das
jmp
lret
sub
fwait
in
fwait
add
mov
ds
scas
sbb
sbb
inc
inc
aad
clc
mov
loope
ficoms
cmc
xor
xchg
push
sahf
jecxz
movsl
xor
fs
insb
jae
push
add
push
mov
mov
xchg
or
ljmp
inc
dec
adc
mov
aas
test
mov
mov
int
and
in
vmovapd
fwait
cmp
les
mov
ficomps
imul
jno
mov
jge
push
jmp
jns
ljmp
dec
pop
push
pop
dec
out
or
push
inc
push
lods
mov
cmpsl
shl
cltd
out
jno
imul
movsl
lea
sti
jmp
push
dec
out
int3
scas
xorl
xchg
inc
pusha
outsl
lahf
scas
push
mov
mov
sub
fimuls
es
dec
mov
adc
adc
jns
xchg
jns
jmp
lgs
inc
test
shlb
mov
mov
jae
add
xchg
mov
or
bound
cs
cmp
ffreep
jge
fwait
dec
or
outsl
addr16
mov
loope
jmp
jnp
xlat
in
mov
stos
xor
xchg
insb
sub
push
imull
insb
iret
cli
adc
inc
push
push
pop
xchg
sbb
lock
out
add
adc
dec
inc
es
sbb
sub
pop
bound
jge
fwait
outsl
mov
arpl
aam
pop
push
aad
cs
cltd
fbld
fwait
cli
pop
pop
int3
stc
fs
fs
cmpsb
daa
in
push
adc
xor
scas
pusha
mov
mov
int3
aad
sar
or
pop
mov
cwtl
lods
sbb
ss
mov
je
and
js
ud2
mov
xor
xor
jbe
jae
xlat
xchg
mov
cltd
cmp
lods
sbb
insb
inc
xbegin
sub
jne
out
push
add
xchg
add
hlt
in
pushf
jp
add
sbb
filds
cwtl
dec
and
add
dec
mov
pop
push
mov
sub
scas
cmp
out
and
out
bnd
jecxz
cmp
push
xchg
push
or
jo
mov
ror
dec
mov
sbb
cld
out
int3
fsts
add
shr
adc
nop
cmpsb
mov
or
in
sbb
mov
repz
mov
test
in
cmp
push
out
xor
cmp
xor
lds
stos
dec
push
imull
jo
push
addr16
push
out
js
mov
dec
cmp
arpl
push
rcrb
rcrb
lret
psubsb
ljmp
test
out
dec
push
mov
jae
fisubl
inc
inc
xor
test
sbb
push
mov
or
sti
data16
xor
xchg
testb
push
lods
push
adcl
mov
xchg
jns
pushf
lahf
xor
in
inc
xchg
int3
adc
push
adc
arpl
xlat
fldcw
shlb
xchg
mov
mov
mov
in
pop
shl
mov
movsb
pop
xchg
mov
or
cmpsb
fs
ljmp
push
mov
push
es
mov
inc
shll
inc
popa
push
sub
dec
hlt
outsb
rcll
adc
icebp
xchg
incl
ficompl
jle
stc
jp
inc
movsl
or
jp
push
inc
loope
and
fdivl
fistpll
in
xor
push
xchg
mov
mov
or
int
faddl
dec
incl
and
jae
xchg
mov
loop
dec
loope
xor
scas
xchg
pop
fdiv
outsl
inc
inc
mov
push
outsb
test
sbb
movsb
or
xchg
xchg
out
push
loope
mov
mov
enter
jle
test
js
imul
sbb
mov
xor
rorl
jae
rolb
fsubrs
mov
pop
xchg
inc
mov
dec
out
in
jns
and
jge
lret
lea
inc
flds
pushl
pop
cmpsb
pop
vpsubsw
lret
mov
push
jbe
add
lock
jl
imul
insb
lcall
imul
rol
sub
jne
fs
negl
hlt
call
aad
cld
sbb
jmp
pop
or
and
jg
or
pusha
lret
outsl
mov
test
xor
add
or
lock
ror
jg
adc
pop
jae
repnz
call
fsubl
inc
adc
push
shrl
adc
jnp
push
ficoml
and
ja
pop
call
add
adc
adc
cmp
add
ja
mov
lea
daa
arpl
jmp
mov
inc
ds
mov
sub
push
popf
lahf
add
mov
clc
or
xorb
rcr
jge
jmp
jp
cmpb
roll
push
sbb
push
adc
sarb
scas
jae
ja
mov
xchg
sbb
dec
push
aad
pop
jne
or
js
outsb
pushf
jae
stc
xchg
arpl
out
lret
nop
arpl
insb
push
aam
ffree
pop
fldl2e
xor
leave
fsubr
test
mov
mov
gs
xorb
std
add
sub
push
pusha
pop
into
add
mov
inc
outsl
mov
pop
jae
iret
stc
jnp
and
es
pop
loopne
les
push
ret
jp
and
and
push
sbb
loope
movsb
jb
sbb
fcmovu
mov
xchg
dec
insl
movsl
lock
ret
add
insb
or
jno
and
mov
test
mov
std
jo
shrb
aaa
mov
stc
push
outsl
sbb
inc
push
mov
repnz
in
add
movsb
je
inc
test
push
aad
out
arpl
aaa
mov
xchg
movsl
test
fstp
inc
push
ss
push
leave
jae
or
lods
xor
loope
loopne
push
jo
repz
insl
fidivs
jb
ja
and
push
or
add
jae
adc
test
es
ds
push
divb
xchg
imul
in
mov
push
dec
popf
in
cli
fwait
mov
push
repz
inc
cmpsl
push
cli
lds
cmc
subl
adc
or
adc
pop
stc
std
enter
cmpb
addb
add
sub
testb
pminsw
xor
dec
shll
std
movsl
mov
jp
in
jno
in
stc
out
mov
movsb
call
mov
jns
or
push
adc
push
test
push
or
ret
or
arpl
or
out
fimull
pop
popf
jns
add
cmp
jae
pop
int3
jae
addb
scas
sub
sbb
pop
ljmp
aas
gs
neg
add
sbb
add
sub
shlb
inc
push
hlt
aaa
xchg
pop
xchg
cmpsl
fwait
stc
sub
out
shlb
add
add
pop
cs
or
push
sbb
mov
lret
mov
rorb
mov
or
and
outsl
arpl
rorb
or
hlt
jmp
fsubs
mov
movsb
test
and
adc
shll
jmp
mov
jmp
lcall
mov
push
stos
sbb
pushf
dec
dec
pop
mov
mov
enter
mov
insl
dec
pusha
xor
dec
lock
xor
push
xlat
sbb
andb
pop
inc
inc
dec
and
rol
in
or
add
mov
scas
push
cld
xchg
push
cmp
jno
pop
push
xor
dec
mov
push
or
fldt
mov
imul
cmpsb
shlb
jne
imul
xor
xchg
mov
jle
and
sbb
or
insb
jb
sbb
pop
xor
and
shll
repz
xchg
pushl
push
cmpsl
add
adc
movsl
scas
sbb
push
test
mov
arpl
cmp
insl
and
jnp
fdivp
xchg
test
outsb
ret
lds
xchg
insl
jbe
or
or
push
lods
push
arpl
push
jne
push
mov
pop
out
adc
andb
mov
js
call
sub
scas
mov
fwait
push
push
shrl
outsl
test
jo
out
jbe
add
test
xlat
inc
and
inc
nop
push
mov
xor
jle
cmpsb
mov
dec
dec
gs
pop
mov
inc
xchg
mov
adc
mov
jmp
out
and
push
inc
inc
and
xchg
hlt
loopne
pop
or
pop
jno
jge
fiadds
xor
stos
push
mov
xor
xchg
cmp
xor
icebp
hlt
in
jns
fcmovb
jge
sarl
cld
xchg
xchg
jle
les
rolb
cmpsb
xlat
scas
dec
mov
andb
xor
xchg
movsl
inc
mov
mov
pop
shlb
jmp
sub
jmp
mov
lret
int
push
push
mov
add
fsts
js
test
push
jge
or
rol
jo
jae
push
lods
xor
std
cmp
jle
mov
inc
mov
inc
mov
cmp
fnstcw
fldl
xor
scas
mov
add
sub
sti
push
push
inc
mov
push
pop
outsl
push
stos
outsl
push
scas
jmp
dec
mov
jae
lahf
cs
sti
mov
leave
cmpsb
sbb
std
sub
inc
je
mov
cmp
lret
insl
enter
xchg
das
pop
dec
jbe
shlb
pusha
test
xor
insl
imul
or
out
inc
sub
scas
fisubl
jae
rclb
aad
cmp
loope
fldl
shlb
mov
jl
and
mov
scas
push
pop
push
mov
fists
lret
mov
ljmp
sbb
add
xlat
dec
std
jg
lcall
push
xchg
pop
mov
dec
push
push
divb
int3
mov
sbbl
es
fucom
aaa
repnz
test
arpl
push
xchg
adc
dec
rolb
jmp
xchg
jl
sub
lcall
jg
push
icebp
sub
sbb
sbb
mull
stos
outsb
sub
loope
fadd
lea
je
or
xchg
in
jmp
icebp
jecxz
fdivr
mov
lret
addr16
aam
xor
push
cmp
jns
arpl
fidivrl
test
and
in
fs
popf
cmp
jg
sti
outsl
jae
scas
enter
adc
aad
push
adc
sbb
pop
lods
mov
std
outsb
inc
jg
sahf
mov
pusha
adc
xchg
ja
fs
jns
arpl
rorb
imul
es
xor
push
in
jl
xchg
jmp
int3
daa
add
ja
mov
lret
cmp
adc
mov
clc
push
push
adc
rcrb
addr16
xlat
arpl
jne
std
and
jno
xchg
dec
lock
cld
sbb
mov
adc
les
insl
sbb
addr16
xchg
cmpsl
rcrb
or
pop
xchg
dec
mov
fsubs
in
out
xchg
jmp
jle
adc
jl
out
out
add
add
mov
addr16
out
outsb
add
iret
jae
incb
out
adc
or
clc
mov
js
xorl
jae
push
sub
repnz
ficoms
loopne
sub
push
adc
shlb
jae
jae
movsl
test
cs
out
jns
arpl
sti
cwtl
mov
inc
xor
mov
pop
shrb
or
shll
jge
xor
mov
sub
arpl
lock
jae
test
push
lret
fs
jge
adc
clc
xchg
adcl
push
push
push
mov
pop
lret
js
jno
jae
cli
lock
cmp
rorb
sbb
mov
std
pop
lcall
cmp
push
rcr
jb
or
jnp
xlat
arpl
fsubr
adc
mov
xchg
mov
cmpsb
lock
andb
mov
mov
fcoms
nop
loopne
gs
jne
data16
dec
cli
fcompl
xor
push
cld
mov
sbb
sub
inc
jae
mov
in
loopne
fcmovbe
jp
loopne
mov
mov
mov
das
fs
frstor
aam
jo
shll
test
push
and
pop
push
shll
in
sti
movsb
push
lods
lock
repz
xchg
fbld
cltd
pusha
dec
dec
fdivl
dec
lret
imulb
mov
insb
sbb
push
and
in
jg
cltd
sbb
mov
and
rcrl
popf
and
sbb
dec
mov
jnp
jnp
push
push
xchg
or
jns
mov
mov
adc
and
xchg
pop
pusha
and
push
push
insb
jmpw
sub
mov
out
fwait
out
adc
fsubrs
jle
sbbb
movsl
arpl
ss
and
rcrl
stos
push
xchg
out
xrelease
mov
jae
mov
in
popa
inc
cld
int3
sub
das
les
inc
out
je
xlat
dec
xchg
cli
mov
flds
add
mov
pop
sbbl
inc
sbb
inc
cwtl
mov
sti
shll
mov
bound
ds
cmpsl
mov
out
loop
arpl
jbe
pop
inc
mov
scas
jne
cmp
cli
sbb
ds
jae
cmp
movsl
mov
faddl
xlat
sarb
jno
subb
push
lret
imul
cmp
std
shll
mov
sbb
sbb
or
jecxz
mov
and
fiadds
xor
jo
mov
pop
fsts
jo
sub
movsb
pushf
add
jo
inc
lods
mov
mov
jp
stos
mov
out
out
sbb
jnp
push
cmp
xchg
xor
xor
cmp
data16
push
popf
jo
fxch
leave
lahf
pop
and
clc
ja
jo
jae
notl
cwtl
aas
nop
ret
les
stos
sub
nop
dec
sbb
or
in
push
push
enter
or
push
sbb
sub
adc
mov
push
mov
pop
push
jo
dec
push
pushf
in
fistpl
mov
addr16
test
cltd
jo
push
pusha
imulb
sbb
jo
fstpt
push
add
and
cld
jo
enter
iret
sub
jo
mov
add
outsl
out
jo
and
or
das
jo
dec
pusha
or
sahf
mov
out
call
cmp
mov
mov
and
repnz
clc
sbb
mov
leave
insl
stos
shlb
daa
loope
std
xchg
mov
mov
pushf
cmp
scas
inc
jo
xor
loop
data16
sub
xorb
and
ficoms
cmpsb
pop
mov
cmp
cmc
jo
pop
sbb
push
hlt
mov
pop
adc
cmp
xchg
mov
or
mov
or
mov
jb
mov
push
arpl
pop
out
insb
jecxz
add
mov
fldcw
add
jo
adc
pop
cld
lcall
adc
mov
and
std
adcl
xor
and
icebp
fisubrl
xor
jo
in
decl
nop
mov
dec
test
insl
jl
aas
or
mov
outsl
fwait
xor
dec
jns
lcall
mov
inc
xchg
dec
xor
cwtl
sti
jnp
addr16
jo
mov
in
jo
ljmp
movlps
je
sbb
scas
mov
js
loop
roll
insl
loopne
adc
ret
cli
mov
push
lahf
out
ss
inc
sub
leave
jo
adc
pop
stos
insb
inc
int
sahf
pop
lret
cmp
outsl
fimuls
add
cwtl
and
nop
mov
insb
jmp
ret
dec
push
lods
je
shlb
cmp
jne
hlt
push
and
ror
ret
pusha
mov
aaa
push
jns
add
mov
fsts
ss
hlt
push
push
jo
xor
testl
mov
mov
cld
dec
in
lea
imul
xor
jo
clc
jg
pop
addr16
jno
cltd
enter
int
shr
add
scas
cli
gs
orl
adc
xor
nop
cwtl
mov
cld
leave
mov
loop
adc
jo
inc
imul
out
test
push
push
insl
pop
sbb
shrb
rcrb
shll
jg
jo
dec
jge
int3
dec
sub
xchg
inc
push
loop
stos
sub
cmp
scas
sti
jo
push
cli
popf
xor
in
mov
pop
inc
sub
xchg
push
xchg
mov
sub
bnd
pop
inc
sbb
xchg
jbe
in
or
sbb
shll
iret
nop
xchg
add
mov
mov
in
lds
jmp
std
sub
pushf
outsb
jo
mov
loopne
nop
xor
das
pop
mov
sbb
popf
xchg
jmp
jo
add
addl
mov
inc
loope
jge
jo
jae
mov
outsb
outsl
test
loopne
add
mov
or
cs
cmpsl
call
add
subb
clc
les
inc
or
xchg
dec
xchg
cmp
or
inc
scas
ja
aad
jo
decl
sub
fnstenvs
in
stc
mov
mov
aam
sti
push
adc
in
inc
insl
pop
divb
mov
mov
lods
pop
fadds
inc
jo
mov
add
xchg
and
neg
sbb
jo
adc
mov
cwtl
mov
jo
and
ss
pop
orl
push
push
testb
nop
jg
xor
out
or
orb
jmp
mov
jo
movsl
mov
addr16
scas
leave
out
or
jp
enter
jo
add
scas
stos
mov
lods
ds
movb
sar
mov
jns
pop
vpshufd
cmp
rorl
pop
push
mov
jle
sbb
ret
mulb
pshufw
clc
mov
mov
test
lods
das
inc
shlb
jo
dec
andl
push
lds
jo
in
jb
jge
xor
xor
inc
aas
neg
push
adc
out
idivb
xchg
jge
sub
outsl
movsl
js
add
fs
jo
int3
xor
cwtl
xchg
repz
jo
mov
cmc
cmp
into
push
push
and
hlt
les
repnz
mov
movsl
ror
popf
daa
inc
js
and
push
aam
js
xchg
je
loope
xor
inc
jbe
jo
ret
pop
ret
jo
cld
icebp
data16
inc
xchg
aas
jo
ss
mov
fnsave
test
dec
jle
cmp
popa
xor
inc
out
dec
inc
cli
and
pop
jo
repz
pinsrw
daa
orl
inc
jmp
mov
in
jo
fwait
xchg
cmpl
lods
lahf
mov
bound
pop
adc
and
jo
mov
pop
pop
mov
inc
out
jl
push
out
mov
push
scas
sub
je
dec
clc
or
enter
int3
ret
jg
lea
js
aad
pop
xchg
test
mov
xor
jo
lret
push
push
mov
mov
xchg
cmp
sub
jo
pushaw
mov
push
dec
push
push
lahf
lods
cmp
xchg
mov
jbe
xor
ret
push
inc
movb
addr16
out
lret
test
nop
jns
adc
and
jnp
xchg
aas
jo
or
loopne
mov
jo
jecxz
lret
hlt
or
add
insl
inc
pop
ljmp
das
or
aaa
fucomp
js,pt
sbb
push
test
sub
inc
loop
jo
sbb
icebp
xchg
xor
test
mov
push
inc
shrb
sbb
jl
fs
out
mov
and
pop
xchg
jo
das
fdivl
xor
dec
into
add
nop
rcr
cmpl
insb
mov
jo
xchg
jo
add
int3
push
push
loope
repz
fs
ds
lock
mov
sbb
shrb
pop
into
stos
xchg
testb
cmpsb
fs
mov
icebp
subl
nop
movsl
movsb
mov
mov
jp
xlat
in
jo
mov
xor
jo
sbb
xor
adc
cld
push
insl
imul
jo
leave
shl
adc
pop
cli
call
sub
mov
pop
adc
je
pushf
sbb
js
jecxz
jmp
jmp
repz
or
cmp
jo
cmpsb
lods
sbb
jo
mov
jp
and
mov
js
loope
in
ficomps
push
jle
mov
push
dec
xor
fnsave
jo
pop
sbb
push
aam
or
lret
out
xlat
and
jo
imul
pop
cmp
xchg
inc
and
jo
mov
les
lret
sahf
cs
mov
and
sbb
inc
jns
jo
sub
xchg
pop
dec
add
jo
sbb
push
sti
jo
aas
xor
push
pusha
rclb
push
dec
jo
pop
les
jmp
out
insb
aas
adc
mov
jno
push
scas
jo
add
mov
jo
fcomi
xorl
pop
add
jo
std
enter
bound
sub
add
or
jb
mov
enter
xor
mov
cld
lods
dec
adc
bound
jo
and
push
arpl
ljmp
test
js
or
sub
inc
sub
imul
sahf
pop
ficomps
push
mov
sar
xor
jnp
add
out
lret
mov
out
mov
outsb
sub
jp
and
fmuls
imul
push
jo
mov
sbb
fbstp
vmovaps
push
inc
push
adc
xchg
or
push
xor
xchg
and
dec
pop
lods
dec
cmpsl
and
js
test
roll
test
mov
push
lahf
mov
outsb
xchg
es
xlat
xor
and
xor
lahf
loop
ret
xchg
imul
stos
sub
int
cmp
sbb
nop
xor
ret
jmp
sarb
movsb
cmp
repnz
lret
xchg
mov
add
cmpsl
pusha
mov
call
lods
test
push
cs
pop
and
push
pop
test
inc
push
dec
aas
push
jg
xor
loopne
mov
movsb
sub
push
mov
and
or
shll
negl
push
push
adc
lret
rcll
cmp
iret
xor
orb
dec
or
inc
push
jg
popa
test
rolb
mov
mov
or
sbb
jle
outsl
stc
das
adc
jae
xchg
mov
sbb
ret
mov
aaa
in
dec
ss
push
ljmp
repz
mov
test
pop
fdivrl
fisubs
xor
daa
arpl
adc
jae
loope
jo
nop
lods
xor
test
xor
xor
das
pop
stos
imul
adc
aad
mov
test
fldt
xor
movsl
mov
push
mov
out
mov
shll
int3
lds
jle
sub
out
adc
test
xchg
das
lock
call
jae
xor
insl
jae
dec
mov
or
cmpsb
outsl
and
lods
adc
fucomip
loopne
lret
rorl
imul
popf
scas
stos
pop
sarb
pop
mov
xor
push
pop
fdivp
mov
dec
cltd
adc
adc
inc
adc
insl
fwait
push
je
sti
fisubrs
push
in
adc
jae
push
sub
lock
dec
movsb
shl
and
mov
xorb
xor
enter
fsts
fucomip
fisttpl
lea
decl
or
xor
add
jae
or
pop
test
jb
xor
pop
aas
pop
imul
xor
mov
pop
into
scas
pop
mov
jmp
xor
mov
subl
roll
std
cltd
cmp
movsl
dec
jnp
xchg
sbb
fdivs
adc
xor
movsb
inc
cmpsb
jge
scas
mov
push
sbb
in
loopne
dec
add
inc
jbe
xchg
lock
push
or
jl
es
bound
out
popa
in
int
test
jg
jae
adc
or
push
and
jns
in
xor
or
jb
pusha
and
adc
pop
mov
test
in
idivb
sti
xchg
xchg
shr
xor
mov
leave
out
ljmp
xchg
in
insb
imul
fwait
lds
pop
cmpsb
sub
mov
mov
or
jle
jae
bound
mul
sbb
jecxz
dec
ret
lret
mov
clc
mov
mov
lahf
je
pop
lret
jp
jns
pop
sbb
cmpsb
imul
push
stos
scas
mov
mov
jb
mov
out
jae
lahf
jle
mov
fnstcw
enter
jae
dec
insl
rcll
xor
std
sbb
jp
or
add
cmp
cli
pop
rolb
les
push
cld
jne
stos
dec
xor
sub
and
sbb
jb
nop
fistps
fildll
jne
pop
push
in
stc
pusha
arpl
ret
and
push
cmp
notb
fldl
add
sub
sbb
jmp
jg
pop
sub
jo
xchg
sbb
dec
inc
pop
mov
xchg
xor
jle
sbb
push
mov
icebp
adcl
jo
xor
jbe
das
pop
ljmp
xor
iret
mov
test
pop
das
jae
fwait
mov
mov
sbb
dec
jle
xchg
inc
mov
push
jns
aam
cltd
rclb
ss
fsubs
in
das
inc
xchg
xor
mov
or
pop
adcb
insb
push
aam
shrb
pusha
push
scas
push
ds
inc
inc
mov
fdivl
mov
inc
mov
xchg
sbb
sbb
les
mov
lea
das
out
mov
lret
int
test
gs
rcr
push
cld
push
pushf
fdivl
iret
enter
dec
shl
add
jmp
lret
movsb
mov
call
jae
into
shl
jb
insl
repnz
pop
push
and
pop
and
aas
add
movsb
jne
xchg
fnsave
sbb
adc
nop
lock
cltd
dec
inc
es
mov
arpl
xor
lock
push
cmp
adc
je
and
and
adc
mov
pop
pushf
add
jle
xchg
mov
mov
arpl
into
das
aam
xlat
push
icebp
xchg
jnp
fcmovu
aad
add
add
add
in
addr16
int3
out
xchg
mov
int3
gs
int
ret
mov
cmpsb
inc
test
add
insl
shll
outsb
in
pushf
inc
insl
andb
push
mov
int3
xchg
xor
xchg
pushw
mov
or
sub
xchg
and
mov
cmpsl
add
mov
cmp
jo
out
call
jo
test
test
mul
inc
mov
ret
cmp
test
sub
dec
fwait
dec
push
xor
cmp
ds
test
and
mov
lods
dec
adcl
js
or
out
push
sar
jo
and
mov
push
mov
imulb
jae
stos
add
adc
ja
movsl
stc
push
outsl
dec
add
inc
shll
ds
inc
jo
cmpsb
loop
or
test
mov
push
jmp
outsl
shrl
cld
pop
addl
add
mov
mov
test
int3
insl
mov
cmpb
data16
cs
shrl
pusha
enter
mov
icebp
xlat
jo
lahf
lods
ja
sbb
or
xchg
stos
jne
jo
out
dec
cli
loopne
and
jo
mov
pushf
or
aam
inc
pop
sub
repnz
repz
mov
xlat
jo
adc
push
mov
ret
es
fistl
test
pop
mov
or
lcall
jo
je
xor
jmp
ds
clc
cmc
jo
sar
stc
mov
pop
scas
jo
outsl
sarb
and
jo
xorb
jo
leave
pop
adc
or
bound
repnz
jl
popa
scas
adc
xchg
add
out
mov
lret
mov
hlt
sub
inc
lea
jo
pop
push
enter
lret
mov
dec
jo
xor
jp
add
xor
popa
lock
out
push
jbe
vmwrite
sub
lcall
es
add
cmc
popf
imul
loop
mov
aad
or
sahf
scas
inc
jo
call
mov
leave
sti
into
pop
rcrl
add
jo
inc
sub
pushf
in
loop
and
pop
mov
sub
or
push
lret
enter
jo
jae
jle
mov
jo
les
cmp
ds
add
test
popa
clc
jo
fcompl
xchg
sub
insl
mov
std
jl
sti
insb
mov
out
xorb
fistps
dec
jne
xorl
lret
jp
xchg
loop
jo
aas
test
mov
cmp
dec
push
dec
xor
jecxz
loop
jo
mov
sarl
jo
lds
test
xchg
loopne
adcb
repnz
sub
mov
je
jnp
in
cmp
popa
orb
xchg
push
jo
mov
sbb
imul
rorb
mov
push
jo
dec
loopne
out
movsb
jge
jo
jge
xchg
add
add
jo
les
xchg
adc
cltd
jo
fwait
mov
je
and
or
lods
cmp
jb
loopne
insb
ret
xorl
call
and
lahf
fwait
mov
icebp
imul
xor
imul
out
mov
cmpb
dec
xchg
jo
xchg
pusha
lock
or
fidivs
cmpsb
sahf
push
out
imul
xchg
testl
dec
push
das
xchg
shll
test
push
inc
je
jl
movsb
push
sub
cmp
push
adcb
push
mov
shrb
xlat
gs
jle
decl
pop
xor
push
ljmp
mov
ljmp
stos
adc
test
out
mov
ljmp
mov
test
inc
sarb
adc
push
add
dec
dec
mov
jle
mov
adc
dec
mov
add
jo
xor
sub
fsts
cmc
ret
adc
inc
movsl
push
enter
in
fnstenv
jnp
push
mov
roll
in
push
popa
fadd
jo
jmp
sub
dec
nop
stos
arpl
pop
cmp
jo
inc
leave
movsl
lods
and
jo
shl
jnp
sub
fdivr
ss
or
mov
dec
test
loopne
xorl
jmp
mov
insl
jmp
mov
cmp
aaa
mov
js
pop
xchg
in
push
jo
sub
addr16
xchg
adc
test
add
mov
push
mov
ljmp
mov
out
out
jecxz
imulb
inc
pop
xor
jbe
push
lods
mov
mov
pop
mov
repnz
inc
dec
mov
xchg
cmp
inc
jo
and
adc
aas
adc
jnp
fadd
jo
xor
clc
jb
icebp
dec
jo
and
call
jo
mov
out
lock
and
push
xor
mov
std
repz
add
jo
sbb
or
fdivrl
add
aaa
data16
test
gs
jo
xchg
nop
lahf
popf
jae
cli
push
jns
int3
cmp
inc
repnz
mov
or
fldcw
pop
pop
dec
outsb
stos
cmpsl
jne
das
push
sbbb
icebp
mov
mov
shl
jo
test
mov
xchg
test
icebp
adc
jl
mov
out
sub
push
adc
idivl
mov
lret
out
jbe
push
rcll
insb
into
xor
subb
or
rolb
xchg
jl
scas
jo
icebp
mov
sti
test
cwtl
push
mov
pop
daa
adc
adc
vgf2p8affineinvqb
jp
jo
add
jns
push
jno
jne
in
dec
ja
dec
jo
lds
xchg
or
mov
sub
adc
pxor
sub
add
jecxz
push
adc
call
jno
jo
ds
testb
imul
ficompl
jge
iret
mov
push
lahf
div
cmpsl
rorl
in
dec
fnsave
inc
gs
and
sub
mov
mov
cmpb
aaa
mov
imul
repnz
popa
xor
popa
movsbl
pop
sbb
push
add
jo
lret
arpl
adc
mov
sbb
push
pop
ret
cmp
movsb
mov
cmp
jno
loop
sbb
jl
clc
jg
mov
push
pop
jecxz
mov
and
lcall
adc
jmp
xlat
sbb
sub
std
xor
call
jns
rol
push
mov
test
imull
jo
mov
dec
xor
mov
pop
shrb
push
enter
icebp
jp
inc
cmpsl
add
in
nop
jbe
mov
mov
mov
testl
mov
jnp
shrb
test
rcrb
fisttpll
jo
test
in
into
shl
mov
je
cld
mov
xor
add
jo
push
loope
sub
lock
test
movsl
pop
mov
popf
ret
ja
cltd
repz
jmp
test
cld
pop
inc
call
mov
loope
xchg
in
dec
xchg
stc
jo
mov
dec
xor
aam
insb
fcomi
popf
add
pop
sub
xor
mov
cmpsb
jo
pop
xor
movswl
lds
popa
mov
mov
jge
and
jmp
xor
mov
daa
jo
out
fistpll
xor
addr16
lcall
ret
and
cld
mov
aam
push
jo
sbb
push
imul
mov
rcpps
pusha
xor
pop
out
and
mov
mull
jo
xchg
mov
or
dec
fisttpll
mov
cwtl
nop
jno
cmp
adc
xchg
call
cmp
aas
cwtl
pop
mov
xor
fdivs
dec
ja
sbb
mov
fs
mov
es
xorb
es
adc
ds
mov
negb
in
pop
cmp
jae
es
fstps
movsl
adc
and
call
mov
test
ret
das
arpl
cmp
test
jg
out
les
cmp
mov
mov
push
or
xor
in
pop
out
mov
rcll
fs
push
mov
jl
nop
jp
lret
mov
dec
or
xchg
mov
ret
test
fmull
popl
dec
push
mov
or
sbb
push
daa
xchg
out
cmpl
lock
out
je
jo
push
adc
and
das
and
jo
rorb
inc
aas
push
mov
mov
pop
rclb
adc
scas
stc
ljmp
push
hlt
jae
nop
sub
rclb
mov
adc
fwait
icebp
cmp
in
adc
pop
cmp
adc
mov
sub
dec
stos
jae
aad
cltd
cmp
movb
ljmp
lods
aam
inc
or
int3
inc
js
scas
jnp
jae
jo
xchg
and
or
rdpmc
movsl
shll
xlat
in
inc
out
repz
rolb
inc
jo
xor
mov
test
fsubr
fs
and
or
and
test
jp
jo
mov
leave
test
push
pop
sub
int3
mov
mov
cmpsl
cmp
mov
push
sub
sbb
pop
js
hlt
mov
dec
push
aam
es
xchg
testb
fimuls
sub
repz
push
mov
neg
stos
ljmp
sbb
mov
jp
jge
add
test
mov
fstp
mov
sahf
icebp
stos
jo
js
push
jo
in
xor
xlat
jb
mov
pop
hlt
jo
dec
decb
jo
je
mov
push
cmp
mov
sbb
cmpsl
dec
and
ss
aad
sarb
je
jo,pn
cmp
stos
lcall
push
into
add
jnp
jo
mov
pop
and
jp
cmc
nop
inc
jo
cmpsb
into
or
mov
lea
and
scas
jo
rcr
sub
jecxz
mov
xchg
and
test
scas
je
nop
adc
xchg
inc
jnp
push
bnd
pop
into
scas
jnp
enter
push
mov
test
push
imul
sbb
ljmp
push
sub
movsl
lock
nop
jo
pop
pop
jl
and
xor
push
add
xchg
cltd
mov
in
sbb
imul
sub
fdivr
jo
pop
or
sub
movsb
xchg
xchg
jnp
scas
mov
js
dec
sbb
xor
arpl
pop
dec
aad
jae
fcmovu
add
push
mov
inc
cmpsl
or
scas
test
or
push
xchg
roll
hlt
nop
shrl
lcall
adc
sbb
fisubrl
mov
jo
and
push
cvttps2pi
fstpt
pop
ret
jo
mov
xlat
outsb
in
jne
sbb
fldt
push
jo
dec
add
int
pop
aam
lds
or
mov
cltd
lret
add
popa
lock
neg
jg
dec
or
pop
cmc
sub
jecxz
cmp
lret
cmpsl
js
and
jns
adc
jo
dec
es
loopne
or
xchg
dec
iret
sbb
mov
push
mov
jmp
nop
add
sub
jbe
in
and
push
jo
jp
lods
push
pop
sub
sub
pop
fcoml
inc
jo
jmp
sbb
sub
jo
or
int
cmc
cmpsb
pusha
rclb
fdivp
and
das
movsl
and
repz
js
lret
mov
jge
gs
ret
loope
mov
nop
lret
push
mov
fnsave
pop
inc
int
cmpsl
inc
push
mov
dec
sarl
push
in
ja
xchg
lods
orb
jne
push
xor
mov
jo
rcr
jge
loope
jo
arpl
sub
sarl
loop
das
in
jne
jo
sub
stos
idivl
int
push
in
jo
andl
aam
je
jno
mov
push
je
dec
popf
dec
movsbl
cmp
xor
add
mov
addb
ss
jp
outsb
test
cmpsb
in
mov
dec
popa
inc
xchg
jo
negl
pop
mov
sbb
test
test
bound
xchg
dec
pop
std
sub
mov
sbb
adc
dec
sub
push
fsubrl
mov
jno
cld
and
mov
mov
in
mov
mov
adc
lock
stc
mov
decl
jmp
adcb
add
sti
fucom
xor
sbb
mov
arpl
or
jns
scas
jae
out
les
adc
sbb
andnps
scas
mov
std
fwait
ljmp
addb
jns
mov
subb
loopne
jae
fisttpll
mov
orb
aas
push
and
xor
and
sub
add
add
fdivs
push
enter
jne
jo
out
cs
lods
iret
and
jl
inc
push
fstp
movsb
int3
sbb
in
shll
addb
cmp
dec
lods
fdivl
xchg
dec
xchg
jbe
das
and
mov
jo
push
orb
call
data16
adcb
dec
cmp
or
repnz
fidivs
pop
neg
popa
push
mov
sub
mov
lcall
jae
cwtl
sbb
mov
lods
add
fcoms
pop
sti
faddl
jo
dec
jle
xchg
mov
pop
jo
outsl
into
add
jne
adc
nop
sti
fwait
scas
mov
fwait
mov
xor
ljmp
sub
jae
pop
jo
pop
jecxz
in
mov
jbe
cmpsb
mov
test
leave
mov
in
mov
xchg
lret
fldt
and
push
gs
movsl
shlb
fsubrs
inc
cmp
adc
cli
dec
jo
jle
sub
sti
dec
pushf
jo
dec
or
in
fistpll
jo
rorb
mov
fcmovnb
shrb
in
jns
je
xor
xor
add
push
fdivs
lock
jo
rorb
movsl
jge
push
bound
lret
icebp
adc
stos
in
popf
mov
shrb
sbb
mov
jns
iret
jo
or
jo
out
ds
scas
nop
cmpb
ljmp
jae
jo
into
sbb
sbb
push
enter
or
int3
scas
in
stos
imul
aad
mov
stc
push
je
cltd
or
aas
or
xchg
data16
out
jo,pn
add
xor
std
mov
je
shll
ret
push
xor
lods
sub
icebp
loop
cwtl
cs
cmp
fs
mov
lcall
add
ss
xchg
sti
lahf
bound
cli
repz
dec
pop
decb
iret
stos
movsl
cmpsb
push
pop
xchg
jge
adc
jo
lods
rclb
jo
fnop
and
vmptrld
je
inc
mov
lods
adc
xor
push
jo
pop
sub
mov
mov
pop
jo
cmp
xchg
and
notb
in
jge
and
loopne
push
sub
mov
rclb
in
pop
xor
dec
dec
lods
negb
dec
out
pusha
jle
sub
mov
mov
mov
inc
call
pusha
or
scas
cltd
sti
daa
mov
jo,pt
stc
xor
jbe
mov
mov
test
inc
repz
xchg
nop
lods
fsubr
mov
xorl
inc
push
sub
cmc
jo
pop
je
mov
imul
repz
inc
sbbb
jo
stos
cld
inc
push
fcoml
xchg
dec
xlat
cltd
mov
loope
shll
dec
repz
outsb
out
push
std
and
es
jo
pop
cmp
xlat
jge
scas
xchg
imul
lds
jo
adc
jae
mov
xchg
mov
jnp
inc
xorb
sub
jo
xchg
js
push
arpl
adc
and
in
and
into
outsl
sub
mov
adc
mov
cmp
enter
lods
jo
lret
and
stc
xchg
out
je
or
mov
push
adc
lea
pop
test
loop
add
rclb
ret
mov
pusha
adc
mov
dec
xchg
mov
idivb
push
aad
xor
stc
xor
mov
enter
inc
xchg
push
test
cmp
imul
add
fcomip
sahf
test
lcall
pop
iret
cmp
jno
lock
mov
jo
test
fsubrl
sbb
mov
mov
call
fcom
fnstenv
leave
sbb
int3
test
outsl
and
dec
push
jle
iret
in
les
ja
imul
mov
sub
ljmp
imul
ret
jge
jo
xor
pop
inc
jo
std
pusha
mov
push
push
in
adc
jne
divl
jo
test
test
jecxz
decb
into
dec
ja,pn
shlb
imul
ret
dec
pop
sub
je
btrl
test
add
dec
nop
xchg
cmpsb
hlt
mov
jb
push
xor
jo
dec
pop
inc
in
inc
xor
rcrb
int3
mov
add
add
mov
not
lea
iret
sub
leave
pop
les
js
js
lea
jo,pn
add
xchg
push
and
outsb
push
jne
inc
jo
xchg
inc
jo
and
scas
mov
ds
and
jle
movsb
jo
mov
cmp
xchg
adc
cs
frstor
js
sbb
cmpsb
sub
add
imul
cld
pusha
or
ret
stos
jo
shll
cmp
scas
jo
sub
or
dec
lea
je
and
loope
das
fdivrl
es
push
pop
and
mov
insl
cmpsb
pusha
lds
stc
jo
mov
mov
insb
sbbb
dec
pop
pand
jge
or
sarl
jo
cmpsb
mov
nop
adc
lds
inc
mov
test
js
lea
or
mov
jl
cmp
adc
jo
enter
sub
shlb
jo
clc
sbb
stos
jb
mov
inc
fcomps
push
mov
imul
in
mov
jns
ja
frstor
add
fdivs
test
xor
pop
add
test
jo
push
aaa
ja
notb
js
xor
sbb
js
or
popa
test
lea
jo
aad
add
fidivrl
addr16
scas
mov
add
dec
repz
jo
mov
in
cli
jo
xchg
pop
xor
cmp
inc
jo
lcall
jmp
int3
or
cmp
xor
pop
int
outsb
call
mulb
out
loope
in
repz
cmp
and
mulb
icebp
jo
inc
add
std
jns
insb
cmc
cwtl
jo
mov
mov
dec
andl
in
pop
call
repnz
jo
ja
repz
aad
fs
test
xorl
jns
jne
mov
movsl
inc
jo
push
sbb
and
dec
mov
lret
scas
cmp
insl
jo
cvtps2pd
inc
cltd
jo
notb
shll
mov
or
mov
andl
loope
dec
mov
jo
dec
adc
xor
jbe
vpunpcklbw
in
lahf
jo
testb
cvtps2pi
pop
mov
lds
popa
push
or
sub
push
inc
jo
xlat
dec
cmpsl
jns
orl
add
adc
push
sub
imul
pop
test
push
jnp
jp
bts
insb
add
jle
js
mov
or
pop
rcl
pushf
nop
es
cmp
jbe
sub
ja
add
xor
inc
daa
inc
xor
stos
mov
addb
jp
inc
in
push
dec
cmp
fwait
cmp
in
loopne
dec
and
jo
pop
fcmovbe
leave
mov
outsl
je
xlat
out
xchg
divb
jl
pop
lods
pop
les
cmpsl
mov
insb
jmpw
mulb
sub
jb
jmp
pushf
jo
jnp
xchg
push
popa
mov
jae
jo
jbe
adc
ret
inc
jb
pop
or
push
scas
cmp
mov
clc
icebp
lods
popa
mov
mov
leave
mov
ljmp
jl
rorl
or
jo
push
push
push
inc
add
pinsrw
sub
add
dec
shrl
jo
stos
sub
cli
jo
cmp
mov
addb
imul
lcall
or
aas
push
fisubl
cs
outsb
cmpsl
jae
dec
inc
insb
add
mov
jg
std
dec
jg
xchg
mov
cmp
mov
jbe
pop
icebp
sbb
xor
sahf
mov
loope
scas
je
and
cmp
daa
sub
lret
push
rorb
in
aaa
out
mov
movsl
repz
cmp
sub
ror
sbb
jns
movsl
dec
int3
cmp
xor
inc
sbb
push
stos
push
xor
push
pop
inc
pusha
mov
jg
push
inc
cmc
push
hlt
imul
xor
sahf
rcl
inc
jbe
out
fdivrl
and
pop
lret
jg
ret
jbe
dec
hlt
int3
sub
movsl
insb
adc
pop
outsl
jne
fldcw
int
cmpsl
in
cmp
stos
ror
insl
jg
cmc
cmpsl
inc
pop
dec
jmp
adc
aas
mov
jnp
adc
movsl
orb
lcall
pop
dec
dec
movsl
or
mov
jle
dec
jbe
jbe
sub
xlat
shlb
push
cli
shr
test
xor
mov
push
xchg
fchs
aam
in
icebp
mov
lods
fwait
jns
sub
push
clc
mov
negb
lret
jle
and
sub
dec
das
repnz
jecxz
lock
pusha
movsl
sub
push
dec
mov
js
push
outsb
and
jg
out
mov
ret
insl
add
xchg
dec
jae
pop
dec
stc
adc
adc
lret
sbb
aaa
jmp
loopne
lahf
outsl
dec
jp
cmp
mov
inc
inc
mov
or
add
pop
mov
test
jae
mov
mov
scas
adc
je
fldl
adc
pushf
arpl
enter
mov
shlb
pop
sub
in
xchg
inc
test
stos
lea
mov
arpl
or
in
jge
orb
es
int3
aam
inc
stos
jnp
jp
aad
sub
stos
adc
mov
push
fs
popf
addl
int3
out
in
inc
sbb
push
aas
out
mov
and
scas
je
adc
movsl
dec
jl
adc
jo
fildll
mov
add
jne
mov
and
sub
xchg
push
pop
dec
cmc
in
jo
repz
push
xor
out
sbb
bound
or
push
mov
pushf
orl
cmp
push
int
mov
xchg
push
mov
arpl
ja
imul
out
push
cli
jmp
pop
bnd
pop
addr16
cmp
sub
push
mov
xchg
loop
nop
sbb
jo
xchg
inc
fmuls
out
push
popf
lret
xchg
call
jo
mov
sbb
aad
xor
dec
lea
jo
test
jb
jo
push
sub
int
pop
shll
pop
pop
in
fdivl
jo
or
pop
xor
nop
sbb
fstpt
xor
je
mov
js
jb
xor
xchg
jo
clc
imul
movsl
test
test
inc
jo
mov
lock
jns
jo
aam
and
subb
push
daa
push
or
je
mov
and
adc
sub
gs
js
stc
lods
lret
fistps
push
cmp
jo
sub
cld
or
add
jo
fldcw
roll
jno
adc
xchg
bound
push
xchg
jne
cli
jo
inc
inc
adc
loopne
mov
mov
jo
outsb
xchg
mov
in
xor
jo
loope
sub
jo
cltd
and
lret
sub
lea
xorb
mov
insb
sub
add
cld
outsb
fadds
sub
xor
movzwl
and
loop
out
jnp
sbb
jne
hlt
js
push
inc
ds
jo
or
mov
mov
pop
out
stos
sbb
leave
pop
fmull
lret
fs
aam
push
sub
mov
rcll
adc
nop
hlt
ja
insb
mov
jo
push
jge
jb
jo
pop
mov
lods
sub
jo
push
pop
mov
push
bound
int3
sbb
nop
sub
js
dec
aad
lods
lea
cmp
adc
imul
push
cs
jne
test
pop
dec
fnstenv
je
cmpsb
xlat
addr16
stos
stc
adc
les
or
pusha
sub
pop
xchg
push
call
pop
pop
cwtl
sub
adc
pop
bound
mov
jo
cmpsl
add
sbb
jo
in
int3
gs
push
lea
sub
pop
and
lds
sbb
nop
ljmp
pushf
mov
ja
push
sbb
ja
ret
xchg
hlt
inc
divl
into
sti
xchg
push
and
jo
and
and
jo
fwait
dec
in
push
sub
test
test
sbb
push
jo
mov
push
add
jo
loope
inc
sahf
push
jo
xchg
repnz
addr16
or
out
mov
xor
jo
mov
arpl
sub
jo
popf
mov
push
push
rsm
jnp
int
mov
ljmp
adc
inc
push
jo
xchg
cmp
cmp
pop
cli
jo
adc
push
rdmsr
mov
push
xchg
jo
repnz
or
js,pt
pop
scas
movsl
cmp
shl
jns
lret
popa
mov
inc
popa
nop
adc
subb
xor
cmpsl
jo
repz
cltd
cmpsb
insb
xchg
xchg
jo
mov
loope
xor
xorl
rcll
data16
pop
and
fs
xchg
movsb
rorb
lcall
inc
mov
inc
dec
fsubrl
mov
cmp
adcb
jno
mov
imull
adc
divl
push
mov
fcoms
pushf
ljmp
outsl
xor
gs
cli
jnp
cmp
mov
out
mov
ret
jo
cmp
push
cltd
jle
jo
rorb
in
int
xor
add
pop
xorb
sbb
mov
pop
inc
mov
nop
mov
and
xor
leave
mov
jo
pushf
add
sbb
lock
jnp
ljmp
sub
sbb
push
mov
js
addr16
adc
aam
add
xorl
jo
cmc
dec
mov
cmp
lods
xchg
dec
gs
jo
xchg
outsl
aas
fistpl
mov
push
lahf
sbb
gs
lahf
int3
and
or
cmpsl
push
sbb
fs
fnstsw
cli
push
ret
lock
ret
dec
xchg
fiadds
subb
into
outsb
sbb
mov
mov
mov
mov
fsts
pop
pop
push
in
jge
bound
jns
jne
adc
fidivs
jno
mov
arpl
add
jle
xchg
jb
mov
rcll
mov
push
inc
jae
sub
stos
sub
das
mov
add
xor
popf
ss
or
bound
ret
mov
jp
imul
pop
addr16
xchg
adc
push
rcl
jle
aaa
mov
jo
inc
fs
push
sbb
imul
fwait
mov
ds
adc
mov
mov
popa
imul
or
sbb
insb
cmp
mov
pop
push
sub
xchg
sti
lret
testb
imul
xchg
push
pop
adc
or
icebp
icebp
in
in
push
mov
dec
es
jp
xor
sbb
mov
push
outsl
mov
add
lcall
push
fldenv
or
dec
arpl
add
jae
mov
cwtl
lret
loop
lret
push
cmpsb
into
iret
cmp
shlb
mov
btr
xor
arpl
insl
xchg
out
repz
sti
les
stc
inc
mov
popa
stos
movswl
xchg
push
mov
ljmp
cmp
es
xor
sub
sbb
and
xor
or
imul
jo
arpl
pop
or
push
xor
mov
cltd
xchg
mull
cwtl
bound
mov
mov
negb
mov
push
icebp
and
fs
dec
push
push
fldenv
pop
xor
ret
sbb
jl
sbb
loope
xorl
shll
or
fistpll
mov
clc
push
fldenv
shll
mov
lods
xlat
jnp
leave
sbb
sbb
mov
or
sarb
or
test
lock
repz
repnz
mov
insb
lret
std
out
push
xchg
and
nop
addl
dec
jnp
mov
test
cli
add
fcompl
and
loope
xchg
inc
int3
cmc
add
in
or
mov
cmpsb
dec
add
pextrw
lahf
dec
mov
xlat
lods
jnp
mov
mov
lock
adc
pop
in
jns
imull
dec
dec
sbb
push
cmp
xchg
cmpsl
frstor
fisubl
push
bound
fnstenv
push
arpl
shll
scas
jae
pop
sbb
iret
pop
rcrl
cltd
outsb
inc
les
xchg
mov
lds
out
jp
fisubs
jg
pop
sarb
cs
lea
in
cmp
std
ret
test
in
arpl
arpl
sub
inc
mov
xchg
outsl
sub
aam
sub
outsl
or
out
jns
fildl
insb
arpl
gs
push
fisttps
sub
mov
rorb
sbb
or
jmp
mov
cmp
pusha
inc
nop
cmp
push
fnstsw
push
mov
sub
arpl
test
xchg
jmp
fisttpll
adc
lock
mov
subb
dec
call
xor
ja
add
out
sbb
imul
nop
int
jle
and
mov
cmp
jle
outsl
adc
pop
jle
imul
adc
cmpsl
xchg
push
jae
sbb
dec
jne
jno
jmp
mov
test
jecxz
pusha
aad
jg
mov
fld
push
stos
xor
fdivr
add
int3
push
rorl
dec
adc
pop
nop
sbb
out
ljmp
mov
sub
out
roll
xchg
hlt
adc
pusha
mov
cli
xor
push
mov
repnz
lret
out
subb
stc
cmpsb
stc
sub
fildl
pushf
stos
and
icebp
xchg
sbb
je
enter
xchg
insb
mov
inc
out
lods
negl
push
add
shr
adc
push
cmp
test
push
clc
lods
mov
popa
dec
insl
push
stos
sub
das
add
arpl
add
fsubr
push
in
loopne
push
jle
push
in
arpl
adc
or
shrb
jp
insb
inc
sbb
std
push
inc
pop
stos
shll
not
and
pop
or
inc
dec
pop
pop
lock
or
fidivrs
xchg
call
roll
andb
inc
stos
sbb
mov
push
mov
and
sbb
insb
sbb
mov
lock
stos
push
sti
rcrb
nop
or
nop
jge
outsb
rclb
lahf
mov
xchg
pop
pop
mov
jb
sub
stc
iret
enter
xlat
push
inc
inc
cltd
inc
mov
lret
adc
fldt
fs
insb
jae
popf
add
adc
out
xchg
arpl
shlb
jae
int3
mov
in
outsb
les
stc
arpl
shrl
loopne
sbb
jnp
inc
xchg
push
fucomip
or
push
ljmp
pop
add
call
int3
add
sbb
arpl
adc
push
push
clc
sbb
shll
mov
sti
popaw
pop
add
shl
adc
dec
sbb
flds
daa
push
mov
sub
repz
mov
add
jg
jmp
ja
pusha
mov
jbe
or
cmp
nop
mov
push
jae
jmp
cwtl
push
sbb
shlb
in
ret
fldl
sub
iret
mov
mov
into
iret
cmpsl
xchg
jns
mov
inc
hlt
pop
add
sbb
jbe
int3
in
test
arpl
rcl
xor
ss
add
insb
and
jl
push
adc
ss
call
fldln2
sub
stos
out
cmp
lahf
fcompl
inc
lret
pop
addl
inc
lret
fwait
and
mov
std
xor
cmpsl
pop
cmpsb
push
sbb
push
jne
jae
ret
mov
in
jl
xor
mov
sub
and
lods
push
insb
bnd
push
pop
cbtw
mov
orl
popf
xchg
xchg
leave
pop
nop
ret
mov
repz
jnp
je
shrb
and
adc
push
push
stc
inc
pusha
test
insl
dec
cmpb
fisubrl
adc
ja
sbb
dec
sbb
int3
sarl
push
adc
lret
dec
jl
bswap
xor
pop
mov
push
aam
xchg
sub
shl
cli
or
shll
leave
cmpsb
or
and
cmp
or
test
push
cwtl
mov
movntps
sub
data16
mov
mov
cwtl
in
lock
inc
sbb
jo
cltd
subb
fisttpl
fnstenv
clc
pop
and
call
orl
mov
mov
mov
inc
jmp
dec
imul
pop
jno
fcoms
xchg
fists
jmp
nop
or
jns
xor
jo
inc
loop
xchg
jo
xchg
or
fs
jo
pop
mov
hlt
out
int
jo
cmpsb
lods
xor
repnz
add
inc
push
ret
cmc
nop
jns
and
je
adc
push
sub
in
push
pop
push
add
jo
mov
stos
xlat
pusha
jo
outsl
aas
pushf
jbe
sti
shrl
sbb
loope
rcrl
cmp
push
mov
js
into
aaa
sub
dec
bound
test
mov
pop
dec
ja
and
jns
clc
and
pop
out
mov
insb
sbb
xchg
divb
sti
sarb
mov
cld
jo
arpl
mov
jae
fcomi
int3
ljmp
in
inc
loopne
inc
cmp
arpl
pop
das
mov
fnsave
lods
jmp
and
data16
mov
sbb
mov
jns
out
xchg
and
mov
push
pop
push
mov
inc
cmp
mov
inc
pop
in
mov
pop
insb
pop
pop
test
mov
out
shl
or
cwtl
jns
sub
dec
pop
outsl
lods
pop
clc
jg
adc
out
dec
insl
pop
sub
not
push
push
inc
js
jge
push
or
sbb
mov
addr16
fimuls
xchg
push
icebp
or
cmpsl
cmp
fbstp
add
add
sbb
shrb
cmp
jmp
in
mov
lahf
mov
repz
lds
pop
sub
or
dec
inc
push
push
push
xchg
aaa
mov
xchg
jle
push
cltd
cli
sub
mov
popf
icebp
ljmp
jg
loop
push
aas
rcrb
adc
movsb
lahf
int3
dec
adc
push
push
arpl
inc
daa
std
mov
shl
aam
shlb
inc
mov
cmp
xchg
psubsw
xor
inc
ret
rcrb
int3
mov
cltd
shlb
mov
lret
sub
push
lock
and
fildll
lods
in
stos
xor
dec
lcall
push
fucomi
pushf
push
cld
cmp
bound
sbb
imul
ret
or
rcll
loopne
out
and
or
and
sbb
jno
pop
ja
sub
jae
jns
test
push
outsb
push
mov
addr16
rcrb
cmpl
sub
xchg
sbb
cmp
jmp
add
dec
jmp
dec
sbb
jl
mov
and
test
into
jno
jb
frstor
push
push
push
mov
pop
xchg
pop
adc
mov
xor
scas
jge
jns
add
lock
rclb
fsubr
jo
jnp
mov
cmp
and
pop
mov
xchg
adc
or
xchg
scas
jae
scas
pusha
and
out
adc
scas
popf
and
lods
mov
xchg
mov
in
fdivs
dec
test
fadd
js
loopne
pop
outsl
push
out
negb
mov
into
aas
mov
inc
mov
clc
adc
xorb
or
pop
nop
jne
sub
dec
inc
lods
or
mov
add
insb
dec
lods
out
xchg
sub
jmp
scas
arpl
std
arpl
xchg
mov
sub
icebp
adc
movsl
ret
shr
push
rcr
xchg
lcall
pushf
add
arpl
jns
mov
mov
mov
pop
push
stos
das
mov
mov
aas
jge
xchg
jge
les
push
mov
lods
mov
dec
sti
insb
pop
gs
push
add
sar
sar
fldl
push
icebp
sbb
jae
imul
push
imul
fs
inc
bound
xor
aaa
jmp
cwtl
fnsave
mov
sbb
mov
mov
popf
outsb
sub
clc
sub
cmp
arpl
fdivr
cltd
and
cmp
imul
pop
inc
or
inc
fisubs
and
jle
mov
les
sub
rcrb
push
out
lock
xchg
mov
jg
dec
and
test
cmp
mov
or
sbb
dec
jmp
cli
lods
and
sbb
mov
mov
jle
add
enter
or
in
push
push
lahf
fwait
loop
xorb
mov
cmp
fsubrl
daa
and
push
lock
iret
and
pop
ds
outsl
mov
out
nop
lret
jo
pusha
push
sub
lret
sbb
cmp
cli
std
jno
xchg
jns
nop
mov
pop
jbe
mov
or
mov
out
xor
dec
mov
adc
aad
or
sbb
testl
jns
and
mov
add
jp
cmp
dec
xor
mov
mov
xchg
rorb
and
jle
jae
arpl
ficoms
mov
out
fcoms
mov
adc
fidivrl
addb
jbe
fcmovu
sub
insl
arpl
cmp
sub
pop
or
loop
add
mov
test
ret
mov
loope
scas
push
pop
sub
push
aas
jp
jge
out
jae
push
cs
or
push
mov
cs
fidivl
jg
aam
insl
jo
iret
jecxz
idiv
in
imul
sbbl
hlt
insl
call
rorb
pop
push
or
inc
pushf
adc
jbe
ljmp
leave
inc
push
mov
pop
sub
mov
or
ljmp
ret
and
pop
add
scas
add
popf
andb
adc
insl
push
movsl
js
cmpsb
fisttps
popf
in
cmpsl
and
mov
sub
jp
js
or
jo
pop
or
jo
fsubr
push
mov
dec
inc
xchg
jo
test
movsl
pop
shll
faddl
inc
cli
cmc
add
jno
jmp
jp
es
mov
mov
or
int
repz
xor
filds
or
xchg
stos
xlat
cmp
sti
jl
mov
push
adcl
loopne,pt
mov
int
insb
push
aas
push
cmpsb
jno
and
aam
jo
push
mov
jo
int3
lods
lahf
cmp
sbb
bound
pop
insl
jne
sbb
or
and
jo
sub
cmp
push
add
mov
mov
mov
lret
jnp
push
jb
sub
jle
push
cmpsl
inc
sbb
scas
push
je
add
aas
addl
fldenv
vpshufd
push
xor
leave
dec
movl
adc
movsb
aam
push
pop
jo
call
stc
std
jo
daa
cld
idivb
push
pushf
test
dec
mov
loope
insb
das
jecxz
inc
mov
add
mov
shrb
cld
aaa
lods
sub
bnd
jg
mov
pop
dec
cmp
mov
jl
dec
cmp
push
pop
ljmp
daa
jo
push
dec
in
mov
fwait
jmp
cmp
imulb
push
sbb
add
fs
mov
cmp
scas
cmp
stc
dec
adc
push
mov
jo
mov
xor
jo
pop
and
dec
jo
and
push
sbb
sbbl
pop
jo
fildl
inc
or
shrl
sbb
mov
js
or
xor
sub
test
add
lods
cmpsb
inc
push
inc
shlb
jo
imul
repnz
dec
push
fcompl
mov
add
jg
and
enter
mov
test
jmp
andb
arpl
jg
fs
push
push
mov
ljmp
jo
inc
mov
jo
sub
and
pop
test
add
out
aad
fs
adc
sub
hlt
stc
xor
popa
mov
fnstenv
cmpsb
test
adc
pop
mov
fisubrl
data16
lea
lret
sahf
cmp
sbb
dec
into
js
dec
jo
push
pushf
mov
jo
rcll
push
mov
bound
mov
pop
or
xlat
inc
add
sbb
sub
rcll
push
jo
outsl
pop
xchg
cmp
movsb
jecxz
aad
sub
dec
lock
inc
arpl
imulb
lret
mov
into
push
rorl
jae
mov
xor
or
mov
dec
mov
sbb
push
or
je
data16
loope
xor
sbb
div
mov
jno
pop
leave
push
push
adc
push
jle
jnp
dec
xchg
mov
pop
cltd
adc
jp
std
push
setge
lods
lock
sti
dec
dec
push
cli
cmpsb
adc
dec
loopne
or
lock
aaa
stos
ror
repnz
nop
mov
gs
scas
jecxz
xchg
addb
std
cmc
cmove
imul
inc
and
jle
arpl
jae
jge
lea
xor
shr
flds
in
psubusw
xor
imul
imul
push
push
cmpsl
xor
mov
jne
mov
push
test
gs
xor
fsubl
jl
jb
test
mov
cmp
in
add
std
adc
mov
inc
xlat
adc
repz
xchg
call
imul
call
jl
dec
nop
outsl
out
and
js
jnp
sahf
test
repz
scas
insl
cmp
inc
sahf
fsts
inc
add
adc
test
pop
adc
andb
js
fsubs
inc
jne
insl
std
mov
dec
push
or
mov
inc
scas
out
cmc
or
mov
mov
mov
sahf
sbb
mov
fmul
inc
pop
push
jp
sub
jg
out
jmp
push
aas
outsb
jp
adcl
inc
addl
std
shl
cmp
imul
loopne
mov
xor
adc
dec
jp
lods
jae
and
adc
mov
lods
cmpsl
push
out
repz
sbb
or
out
jg
insb
push
fmulp
xchg
or
jns
xchg
fldenv
jo
pop
add
cmp
push
sub
sti
ret
adc
ds
adc
mov
movsb
xchg
jbe
ficompl
dec
daa
push
clc
imul
and
stos
or
adc
aam
inc
inc
push
and
leave
or
xor
insb
mov
lock
in
das
rcrl
insb
out
add
imul
add
out
jns
pop
test
fistps
outsb
mov
fsubrp
and
inc
pop
push
cmp
movsl
sahf
sub
scas
imul
inc
push
sub
ret
inc
jnp
or
mov
xor
lods
jo
arpl
je
notb
std
gs
shlb
add
jno
adcl
sbb
mov
inc
xor
cli
call
mov
sbb
ret
aaa
scas
mov
push
aad
jg
pop
jo
arpl
cld
xor
cltd
mov
xchg
cmp
push
pop
jle
arpl
addb
push
clc
or
sub
sbb
mov
call
pop
dec
jae
repz
addr16
jbe
clc
bound
cmc
adc
mov
fidivs
js
mov
push
mov
jge
inc
push
push
jbe
jle
fisttps
mov
cmp
mov
cmp
or
or
out
and
cmp
shrl
es
add
arpl
jg
outsl
lahf
cmp
rorb
mov
lods
loope
outsl
fistpll
pop
clc
hlt
sbb
je
and
daa
jl
push
ret
test
xchg
incl
fistpl
push
mov
xor
or
popf
ljmp
arpl
sbb
mov
add
mov
mov
lods
cmp
inc
outsb
daa
scas
gs
xchg
in
pop
dec
fwait
xor
in
mov
add
jmp
lcall
mov
pop
int3
adc
add
mov
or
xor
int3
cmp
addl
adc
mov
jl
lret
lea
and
fldl
mov
mov
mov
push
das
cld
inc
push
outsb
jbe
mov
std
xor
jae
push
out
add
icebp
div
sbb
fs
jno
mov
fistpll
addr16
rcrl
popa
pop
xor
in
and
out
or
arpl
lahf
pusha
mov
in
frstor
jnp
add
inc
filds
jns
in
sbb
mov
out
movsl
dec
rcrb
or
rcrb
ret
xor
int
xchg
mov
push
daa
sbb
fs
in
test
lcall
jns
and
sbb
and
jnp
sbb
or
mov
mov
cmovbe
mov
aas
push
test
or
cmpsl
add
icebp
sbb
das
push
inc
pushf
and
push
pusha
fcomps
mov
push
in
std
in
insb
out
jae
xor
inc
pop
add
clc
jns
and
cmpsl
out
ret
popf
xchg
outsb
fbstp
add
mov
test
mov
iret
lds
fiaddl
out
inc
push
imul
inc
pop
and
xchg
push
push
fwait
mov
pop
cwtl
add
fildll
jo
mov
out
scas
mov
mov
cmovp
mov
and
lahf
std
arpl
adc
mov
jge
push
xorl
outsl
mov
pop
push
lahf
sub
jp
push
cli
out
mov
int3
icebp
loope
sub
clc
sti
inc
add
pop
imul
mov
inc
mov
data16
push
xor
bound
arpl
lds
test
sbb
stos
gs
out
sub
insl
dec
cwtl
xor
test
and
push
imul
fcomps
scas
outsb
into
imul
push
cs
mov
mov
mull
push
lods
pop
dec
in
mov
fdivl
loope
and
iretw
mov
pop
clc
push
xor
cmp
clc
enter
push
test
jns
adc
sub
and
inc
adc
mov
lcall
mov
jae
mov
push
lahf
mov
or
iret
push
and
stos
mov
push
mov
dec
jae
les
loope
pop
imul
fs
addr16
sahf
mov
loopne
icebp
rclb
inc
mov
and
sbb
dec
scas
pushw
orl
mov
inc
mov
inc
lods
pop
sub
jg
mov
jnp
fistpl
push
bound
sub
mov
inc
and
push
push
loope
bound
push
aam
fiaddl
mov
inc
jmp
lret
loopne
add
mov
mov
push
push
push
adc
push
mov
jb
jle
lcall
int
testl
imul
sub
clc
or
shlb
xchg
cmp
push
jge
test
adc
sub
pop
fistpll
bnd
arpl
cltd
pusha
imul
loope
mov
dec
movsl
pop
dec
scas
insb
adc
push
inc
and
xlat
lret
cmp
jo
aaa
cmpsl
sbb
repnz
jge
clc
push
push
jo
call
xchg
adc
sbb
out
adc
sub
pop
dec
dec
push
xchg
xchg
jnp
dec
xor
sbb
lret
outsb
loopne
lcall
push
inc
andb
sub
in
push
and
mov
out
fldcw
adc
addr16
pop
mov
cmp
lods
or
notb
arpl
mov
adc
aad
adc
jl
add
jne
and
js
push
ds
es
mov
test
stc
cs
push
sbb
pop
pusha
orl
out
or
js
popf
push
or
call
icebp
inc
cmc
jo
and
jge
xchg
mov
push
jbe
push
adc
cmp
jecxz
mov
nop
and
mov
mov
das
mov
bound
out
inc
lcall
mov
pop
test
jo
cwtl
push
xchg
lcall
sarl
fisttps
dec
dec
jo
xor
repz
inc
sub
push
mov
enter
jno
adc
and
adc
or
ljmp
xadd
jne
push
jle
cmp
jg
mov
cmpsb
sahf
jno
repnz
jo
and
ljmp
fadd
jo
or
dec
xchg
sub
push
jg
inc
push
imul
test
jae
and
adc
shrb
and
pop
mov
push
in
jp
mov
xchg
fucomp
xchg
fistpll
aas
gs
jo
push
pop
cli
cld
inc
cmpsl
jo
fcoms
ds
andb
push
jo
insb
imul
in
and
push
add
sub
aam
jbe
cmp
sub
shr
jp
mov
jge
dec
jg
jmp
lock
and
or
and
jo
mov
push
fldenv
mov
pop
rcll
mov
jo
ret
mov
pushl
mov
sar
dec
xor
fcmove
daa
testl
rcr
pop
out
jo
inc
cmpsb
aas
imul
fsubrs
dec
insb
inc
and
mov
es
arpl
sarb
fimuls
xchg
jo
mov
pusha
dec
sbb
xor
push
sti
leave
push
mov
jo
mov
fadd
mov
pop
push
enter
mov
icebp
leave
jno
jo
and
sbb
mov
jno
cs
arpl
mov
fisubs
pop
or
push
mov
test
aas
pop
mov
int
dec
push
jo
fs
and
push
popf
or
loope
movsl
je
dec
cmpsb
int
inc
lcall
add
inc
xlat
shll
rcrl
inc
dec
int3
das
jecxz
push
insb
sbb
dec
pop
mov
jo
or
xchg
lcall
jno
mov
mov
out
push
or
jge
jo
movsl
mov
push
and
mov
adc
jo
int3
inc
sbb
cmp
pop
mov
repz
lcall
or
cli
push
cltd
xor
jo
repz
lahf
rcr
aad
jo
test
mov
ret
leave
mov
xchg
cmp
sti
jo
pop
push
cmc
jmp
outsb
pop
push
or
ret
ja
jle
push
jo
imul
fwait
or
dec
sahf
hlt
out
shl
xchg
jnp
cmp
xor
push
fistpl
jno
je
or
push
and
mov
stos
jo
pop
add
rcrb
nop
push
mov
mov
pop
xor
repz
inc
mov
jo
fs
and
int3
mov
jo
imul
xor
xor
sbb
mov
jle
js
bnd
cmpsl
fdiv
push
xor
pop
cmp
mov
sarb
jo
jecxz
jbe
insb
pop
dec
jo
clc
push
adc
out
pop
arpl
cmpsl
jo
sbb
ja
lea
sbb
lret
in
mov
mov
in
cmpsl
pop
mov
lahf
xchg
jb
cld
xchg
jo
ss
cmpb
cwtl
cmpb
mov
sahf
mov
cmpsl
jae
lea
lods
andb
sub
add
out
lea
jo
ss
fimuls
push
or
fs
cwtl
sar
and
out
clc
idivb
fs
ret
in
pop
sbb
jo
mov
fisubs
and
push
jns
jo
cmp
xchg
mov
ret
stos
cmp
jae
mov
movsl
std
jo
sub
push
insb
mov
jmp
jo
mov
xchg
mov
in
mov
jo
mov
pop
dec
jo
xor
cli
ret
cmpsb
adcl
or
testl
cmp
jnp
add
shrl
jle
mov
mov
jo
insl
inc
gs
call
jns
outsl
or
sbb
sbbb
bound
mov
aas
out
fs
jl
jo
jg
cmp
test
int
fsts
cmp
imul
inc
and
jbe
cmc
lds
inc
jo
sub
adc
xor
or
fdivl
inc
mov
bound
xchg
movsb
lea
xor
nop
jns
jbe
fwait
sbb
adc
sbb
push
adc
fdivs
pop
sub
ja
dec
jo
mov
or
xor
pusha
add
dec
or
adc
stc
aam
repz
popl
push
mov
push
je
lods
inc
push
inc
add
aas
xchg
jb
dec
shlb
cld
xor
and
push
cmp
adcl
lock
sbb
into
mov
popa
test
in
enter
fs
jo
jmp
adc
sbb
inc
and
or
fisttpll
lds
add
shrl
dec
pop
push
pop
adc
cmp
inc
sub
or
insb
sbb
fstl
test
xlat
adc
jo
movsb
stos
popa
pop
loop
les
sbb
xchg
push
js
ror
fcompp
pop
pop
loope
xchg
ja
shrl
push
push
jb
inc
es
jae
mov
jo
fdivr
cmp
aaa
and
jo
into
dec
push
add
mov
mov
repz
jo
cwtl
dec
pop
push
mov
jo
jmp
xchg
mov
cmp
pushf
pop
test
bound
fstpl
je
jo
repnz
mov
stc
lret
mov
mov
or
lcall
rclb
sub
push
gs
jo
dec
dec
hlt
ljmp
push
pop
dec
outsl
and
icebp
mov
bound
jo
or
test
scas
lret
jo
add
jo
in
adc
movzwl
push
dec
jno
out
push
dec
movsl
pop
or
bound
push
xorb
push
hlt
scas
inc
adc
jo
jmp
lret
out
gs
jecxz
in
xorl
sbb
outsb
int3
xchg
lods
dec
ret
xchg
mov
test
data16
jle
jecxz
cli
push
rcrl
or
adc
ds
jge
push
and
decb
mov
dec
mov
sbb
xorb
jmp
inc
popf
es
adc
mov
jo
mov
pushf
xor
subl
lock
into
sbbb
clc
lret
fldcw
adc
call
popl
iret
dec
push
ret
fs
ret
inc
ficoml
lock
shl
mov
in
cli
fsts
fstl
dec
arpl
jnp
cs
shrl
jae
test
shlb
pushf
sub
cmc
cmpsb
pop
jp
mov
inc
push
or
dec
dec
mov
xor
dec
sar
mov
mov
cmpsb
data16
xorb
bound
mov
pop
pop
adc
mov
adc
js
mov
or
ficompl
pushf
and
cmp
xor
pop
mov
sbb
and
cmpl
sub
divl
mov
push
add
cltd
cmc
out
adc
xor
adc
ss
loop
sbb
aaa
lock
rcrb
or
out
stc
daa
frstpm(287
mov
cmp
pop
sbb
arpl
data16
enter
pushf
ljmp
flds
sub
adc
or
jns
push
dec
add
sub
in
jo
in
inc
mov
fidivl
sub
push
rolb
mov
out
orb
xchg
cmp
push
sbb
mul
sbb
out
ss
call
xchg
xchg
je
push
imull
das
bound
push
sbb
mov
inc
scas
cmpsl
dec
push
add
jns
xchg
out
imul
cmpsl
stc
jp
fwait
fs
out
cmp
pushf
hlt
test
fs
fldenv
push
shrl
jno
inc
ss
sbb
popf
push
pop
mov
xor
data16
mov
add
push
push
adc
pop
lret
sub
into
and
xor
pop
inc
xorl
dec
push
in
jns
xor
or
adc
inc
lock
rcrb
mov
in
daa
int3
bnd
out
dec
lahf
ret
jg
mov
out
stc
jg
and
imul
xchg
mov
cmpl
outsb
das
mov
or
xor
and
push
sbb
fs
ret
and
push
into
cmp
clc
xor
insb
stos
add
addr16
sub
fistpll
in
or
insl
jecxz
cmp
jp
pushw
dec
push
imul
push
roll
cli
xchg
int3
or
scas
mov
jg
add
lcall
cmp
out
shl
fidivl
lock
aaa
xchg
mov
sarb
lahf
add
insb
mov
xchg
dec
sahf
outsl
jg
adc
and
xor
pop
mov
or
std
addr16
push
xchg
dec
ret
pop
xor
insl
in
add
aad
add
sub
pusha
rcrb
aas
lahf
cs
shrb
sar
mov
addr16
addr16
sbb
mov
xor
sub
xchg
jg
push
or
data16
test
sbb
xor
repz
aad
inc
scas
push
lods
sahf
inc
out
push
arpl
ret
sub
mov
sub
push
daa
add
in
lret
out
repnz
and
imul
cmpsb
lret
sub
out
inc
and
outsb
push
gs
incl
push
loop
test
mov
cmp
add
push
ss
dec
xchg
xor
call
add
cmpl
mov
xchg
stos
mov
aas
sub
mov
inc
add
test
je
jo
js
sbb
flds
jo
mulb
cld
jo
adc
push
addr16
js
jo
mov
inc
push
jo
inc
inc
cwtl
add
and
loope
jo
mov
pop
and
aad
push
orb
jne
out
and
push
pusha
xor
cmp
fwait
push
nop
sub
jnp
in
psrlw
mov
test
fmul
jo
fimuls
mov
push
test
or
das
ds
insb
popa
jo
mov
jbe
aam
jnp
adcb
jns
data16
das
jge
pop
rorb
aam
mov
and
mov
bound
js
jmp
push
inc
fldt
push
add
push
pop
jno
les
mov
scas
inc
jo
lods
sub
test
cmpsb
mov
adc
jo
inc
xorb
lcall
rclb
jo
pop
insb
add
xlat
orb
jo
dec
jg
ret
sub
xchg
ja
in
jo
mov
movsb
inc
mov
enter
push
adc
sbb
outsl
push
mov
mov
add
jge
jo
cmp
dec
push
mov
sub
and
push
idivl
jo
push
lahf
pusha
mov
movsb
push
icebp
pop
sub
sbb
push
shlb
lcall
xor
popf
cs
fsubs
push
sbb
push
sbb
or
and
aam
imul
fidivrs
stc
jl
out
mov
cmpb
cmpsl
mov
scas
pop
ljmp
imul
sbb
lods
jmp
jp
sarb
das
sub
outsb
jmp
jns
adc
mov
mov
push
aam
push
mov
mov
lret
push
inc
in
cmp
mov
cs
or
sub
movsl
out
pop
xlat
mov
lea
add
nop
lods
cwtl
iret
rsm
orb
aaa
int
and
add
fsubs
jnp
cmpsb
test
jp
in
inc
jo
dec
mov
xchg
jo
lret
in
xor
push
and
push
mov
orb
lahf
shll
xor
jae
addr16
out
lret
icebp
cmpsl
aaa
mov
mov
and
add
jno
jo
loop
xor
fists
cltd
outsl
jle
add
jo
movsb
or
jo
sbb
or
mov
adc
loope
adc
jo
in
pop
inc
call
mov
out
adc
mov
and
bound
jo
iret
jle
mov
jmp
insb
mov
push
jns
jo
xchg
fidivrl
sbb
outsb
sahf
call
jae
xchg
mov
pushf
dec
jo
rol
lods
sub
insl
jo
jne
jb
aaa
ret
pusha
mov
xchg
and
cltd
xor
sbb
movsb
xchg
mov
adcb
fwait
jb
repz
outsl
aas
xor
iret
push
jo
pop
in
mov
arpl
mov
add
adc
lret
pop
test
mov
dec
adc
jg
jo
insb
and
push
sbb
jo
fsubl
push
pushf
jne
push
and
push
add
mov
aas
mov
adc
xchg
sub
test
xchg
mov
fwait
repnz
ljmp
sbb
or
sbb
mov
les
push
and
push
test
dec
jae
xor
pop
shlb
dec
pusha
dec
inc
addr16
sbb
jns
scas
jns
mov
mov
icebp
pop
mov
outsb
ror
iret
push
std
hlt
ret
stos
sarl
gs
cwtl
lods
in
sub
adc
fists
es
std
xor
cmpsb
arpl
cmp
push
xchg
mov
sub
xor
pop
jecxz
jle
loopne
xor
div
sub
das
dec
adc
pop
out
lahf
and
bound
inc
fisttps
loop
gs
sub
popa
sbb
roll
adc
mov
daa
sbb
push
je
or
lret
xchg
dec
push
and
and
xchg
cltd
arpl
aas
scas
mov
insl
jae
inc
ficomps
mov
pop
sbb
je
sbb
stos
incl
push
adc
in
int3
inc
xchg
mov
or
arpl
scas
mov
jp
outsb
or
fnsave
inc
adc
sbb
mov
fisubrs
push
and
outsl
mov
fcmovnb
mov
lret
ret
mov
push
test
pop
push
es
and
cmp
test
sub
xchg
or
dec
cs
subb
fistps
cltd
out
stos
call
test
lds
fimull
mov
stc
sub
packsswb
cmc
sub
jae
dec
xor
ljmp
xchg
es
sub
pop
jp
mov
ljmp
xor
aas
add
jo
nop
xor
xor
sub
subl
lahf
push
cs
out
adc
xchg
add
pop
fimuls
loopne
sti
ja
push
lock
sub
sbb
ret
outsl
sub
or
bound
jae
push
push
adc
aaa
pop
lret
sub
pop
jnp
inc
cld
cmp
push
fs
inc
mov
scas
arpl
xor
and
pop
shrb
fs
xor
mov
xor
outsb
das
addb
cmp
or
imul
mov
mov
test
hlt
lahf
xchg
test
mov
jle
daa
cmp
lock
and
add
adc
fcmovbe
add
rcrl
mov
nop
inc
lcall
jo
push
fstps
jle
pop
movsb
in
xchg
pop
into
rclb
mov
stos
das
or
cmpsb
cmpsl
cmpsl
cmp
jg
sbb
in
xor
lcall
loope
call
lcall
pop
cmp
lds
push
andb
or
push
mov
adc
sbb
jecxz
cld
push
int3
fdivrl
jae
movsl
pusha
xchg
sub
scas
inc
jl
xchg
xor
mov
add
push
push
std
in
roll
or
scas
mov
pop
adc
mov
pushf
and
cmp
lahf
cli
pop
jmp
stc
fbld
push
mov
rcrb
xlat
mov
jae
gs
jecxz
roll
iret
xchg
push
push
addb
fisubl
jmp
cmp
cmc
push
les
arpl
in
push
inc
sub
pop
in
inc
pop
push
std
sub
jp
push
out
adc
sbb
sbb
push
in
cmpsl
mov
insb
xor
sar
push
push
pop
mov
scas
jae
pop
jge
mov
pop
cld
mov
inc
mov
adc
sbb
xchg
movsl
xchg
outsb
add
clc
in
test
dec
shlb
jns
addr16
repnz
pop
dec
add
mov
mov
adc
loop
in
mov
xchg
icebp
mov
mov
icebp
inc
das
andl
push
mov
pop
pop
mov
inc
push
push
push
mov
jmp
popf
imul
xorb
jg
sbb
lret
int
dec
ljmp
test
ret
jp
xchg
xchg
sub
jo
xor
xorb
mov
daa
out
adc
or
xor
pop
xchg
cmc
push
incb
cmp
fdiv
xchg
in
push
lcall
dec
les
negl
xor
jo
inc
xchg
xchg
fnstcw
mov
add
sbb
and
dec
pinsrw
out
mov
cmp
clc
stos
mov
jo
xchg
mov
adcl
cmpsb
lods
mov
mov
lcall
aaa
in
stos
inc
insb
ret
jo
cmp
decb
repz
dec
xchg
jno
xchg
cs
push
fisttpl
gs
xor
loope
into
cmp
scas
push
jo
or
jnp
aas
jecxz
jo
loope
jg
add
leave
lcall
or
pushf
imul
orb
xchg
dec
mov
rcrb
jo
rcll
mov
scas
jo
pop
enter
insb
xchg
jo
sub
dec
jo
push
or
sub
xor
push
and
leave
push
and
xchg
jb
aam
sbb
adc
scas
mov
add
dec
fnsave
dec
xchg
lds
sub
jo
mov
cmp
adc
repnz
lret
xchg
adc
xchg
les
clc
dec
pusha
cmp
dec
jo
or
fcmovne
inc
cmpsl
mov
adc
sbb
in
cmp
les
mov
add
cmp
mov
lahf
adc
or
movb
xchg
mov
and
dec
loop
jo
andl
jo
pop
push
dec
fcmove
cmc
xor
jmp
push
add
jo
mov
sbb
jnp
adc
fstps
fwait
xchg
add
lds
add
push
out
sbb
repz
fbstp
dec
imul
xchg
or
sub
jae
jo
fmull
jns
mov
sub
push
lea
es
daa
xchg
push
push
cld
push
push
xchg
outsl
mov
jmp
jecxz
icebp
xchg
out
das
inc
subl
xchg
push
fidivrl
sbb
arpl
jno
mov
jo
push
test
pop
sub
andl
test
scas
or
repnz
jo
inc
adc
lock
xor
loop
jno
pop
jne
inc
mov
mov
movsl
or
aaa
jo
push
xor
je
repz
jo
and
mov
jo
push
inc
inc
jo
dec
paddw
push
mov
fld
jns
xchg
and
inc
inc
sbb
pop
pop
andb
mov
adc
add
push
in
cs
into
jmp
and
fld
jo
mov
out
dec
popl
jg
cmp
nop
sbb
lds
or
lods
sbb
xchg
stos
cmpsb
jo
lret
push
adc
mov
sub
xor
shr
pop
pop
sbb
mov
xchg
xor
enter
insb
je
jo
mov
cld
pop
mov
jo
jbe
jae
mov
out
jo
es
imul
bound
inc
dec
xor
mov
pop
dec
dec
andb
sarl
ror
in
or
shll
xchg
movsl
adc
ret
testb
push
icebp
addb
movsl
jo
jmp
mov
sbb
inc
orb
loope
xor
icebp
xchg
cmpsb
fs
or
dec
jo
mov
jg
jo
test
push
loop
jo
or
xor
fadd
pop
js
or
je
push
lods
aam
push
inc
mov
jb
xchg
cmovbe
pop
sbb
adc
insb
aas
hlt
imul
jo
mov
mov
lcall
lret
leave
mov
test
arpl
and
mov
inc
fcomi
insl
jnp
jo
dec
aaa
fwait
daa
and
sbb
cmp
jo,pn
sub
js
jo
jl
cmpsb
pop
mov
into
adcb
lea
cmp
leave
xlat
lahf
or
jge
stos
lret
jo
add
imul
jo
into
xchg
enter
inc
push
icebp
loop
mov
jne
jo
push
lea
cmp
jo
fiadds
into
cmc
call
jns
dec
leave
lret
scas
repnz
jo
cmp
or
sbb
cltd
cmp
sub
push
mov
xlat
int3
and
adc
out
jnp
ficoms
jno
mov
cmp
sbb
in
loopne
sbbl
jne
icebp
ret
nop
cmp
loop
mov
xlat
int3
sbb
je
test
setle
test
mov
inc
adc
mov
notl
sbb
out
ret
mov
push
hlt
xchg
and
js
shl
leave
mov
mov
push
ret
insb
mov
jo
popf
pushf
cmpl
mov
jle
outsb
and
jo
cmp
icebp
pop
jo
jae
dec
jle
scas
mov
sbb
mov
pop
cmovo
cmpsb
and
subb
jo
and
mov
dec
xlat
icebp
mov
mov
scas
test
jo
pushf
pop
inc
xchg
add
add
jo
mov
jno
inc
sub
jecxz
movsl
mov
pop
outsb
jo
xchg
mov
inc
xor
jle
push
push
imul
loope
jo
repz
outsl
call
std
out
adc
sar
push
fldt
push
xor
out
push
ljmp
push
sti
bound
scas
jo
and
mov
mov
lock
inc
std
jo
cltd
jne
pop
jl
mov
or
lods
mov
in
pop
faddp
mov
xchg
out
rol
dec
jo
push
dec
adc
data16
jo
movsl
sbb
inc
repnz
sbb
pop
addr16
vphaddubd
push
jo
ja
jae
mov
mov
repnz
lret
xchg
mov
mov
setb
cmp
jo
xor
inc
jo
pusha
jbe
sbb
mov
mov
jbe
and
adc
test
lahf
jnp
push
xchg
or
cmp
bndldx
in
push
filds
jl
sbb
movsl
lock
lcall
jo
cltd
xchg
sbb
fdivr
dec
inc
pop
push
ret
scas
cmp
shl
je
jo
ja
inc
push
push
stos
mov
daa
adc
mov
outsl
inc
fnsave
cmp
cmc
and
cli
std
lret
or
jo
js
iret
push
add
pop
int
bound
stos
add
loopne
in
into
rcrb
mov
js
rcrb
mov
jo
test
jo
aam
adc
jo
xchg
test
jo
mov
push
push
pusha
push
inc
inc
fiaddl
test
je
jns
out
jo
ror
into
xor
jo
jne
dec
inc
sbbb
pop
add
jl
fsubrl
or
test
loope
call
push
dec
push
outsl
aas
inc
repz
ror
jae
inc
xor
fisubrs
mov
push
sub
cmp
sub
sti
subb
adc
xchg
pop
cld
adcb
loopne
pop
nop
xor
or
mov
pop
add
push
lock
in
imul
jbe
jo
xchg
push
shll
jecxz
jmp
sub
push
cmp
xchg
addr16
ljmp
push
pusha
xchg
sti
clc
andb
out
test
xor
lods
stos
cmp
mov
cmpsl
mov
sbb
fldt
bnd
dec
xchg
jecxz
adc
jns
dec
dec
xchg
int3
adcb
call
nop
fcmovnb
xlat
inc
popf
jp
xor
pop
or
sbb
lea
sbb
popa
mov
sub
push
pop
cmpsl
sbb
sub
ret
jo
les
int
imul
push
ljmp
outsb
fimull
cwtl
push
cmpsb
sub
add
jp
adc
fcoml
subb
dec
or
int
jns
push
test
mov
hlt
mov
ja
divl
inc
rcll
sub
dec
scas
nop
pop
adc
push
loopne
push
fs
inc
jo
pop
mulb
mov
cmp
sub
test
push
popa
add
xor
mov
jo,pt
and
sub
xor
rorb
shlb
hlt
xor
int
dec
movsl
mov
jno
ljmp
bnd
dec
dec
xor
jae
jns
lds
dec
bswap
fmuls
mov
mov
aas
jo
std
int3
cmp
sahf
push
lcall
pushf
aaa
xor
out
stc
push
push
decb
pop
call
and
pop
mov
out
daa
jo
out
mov
psubusw
and
mov
out
int
leave
movsl
cld
sbbl
and
push
test
adc
pushf
push
ret
xor
adc
inc
push
cmp
std
inc
jp
and
push
js
pop
cmc
push
push
hlt
dec
dec
inc
data16
push
loop
popa
jo
imul
mov
push
add
nop/reserved
and
inc
es
lcall
mov
pushf
dec
jo
add
mov
cmpb
out
aad
mov
or
stos
fdivrp
jb
pop
xchg
data16
sub
cmpl
push
scas
pop
cli
jo
ljmp
jo
ss
pop
in
adc
lea
mov
push
push
sbb
xor
nop
xchg
lahf
in
mov
js
cs
jo
lcall
or
dec
jo
xor
sub
scas
mov
cmpsb
out
push
scas
mov
int3
jle
fcoml
jb
mov
rolb
in
sbb
bound
shrl
mov
add
in
call
jo
inc
lahf
sub
add
leave
daa
mov
sbbb
jmp
icebp
mov
jo
mov
hlt
add
jmp
mov
sub
test
push
or
je
inc
sti
in
bound
jecxz
notb
mov
xchg
mov
ss
cld
cs
or
xlat
jmp
ljmp
mov
or
jle
mov
or
lds
aaa
sub
test
pop
jo
outsl
test
clc
adc
test
xchg
cmp
adc
bound
add
dec
jae
mov
add
jb
jo
insb
mov
xchg
push
mov
or
ficoml
xor
jg
pop
jo
pusha
push
mov
jo
mov
rep
pop
mov
fsubrs
jo
js
scas
jo
repz
cli
shl
jl
push
je
mov
jo
push
inc
ret
xor
jo
fists
inc
in
int
mov
mov
popl
ja
fwait
loopne
mov
jo
dec
out
xlat
mov
xchg
lahf
shrl
je
in
jo
sub
adc
xchg
lock
sahf
lea
es
sbb
pop
lds
fwait
jo
bound
test
inc
fs
fst
pop
je
and
ffreep
fs
sub
mov
loope
or
lcall
push
incl
dec
mov
jl
icebp
outsb
push
cld
sub
jge
push
push
mov
cmp
je
enter
pusha
loope
daa
jb
fists
pop
cmp
jecxz
leave
pop
sbb
adc
out
ret
ljmp
insb
clc
sbb
sti
aam
jl
fidivl
dec
inc
push
fnsave
loopne
call
lcall
pop
shl
mov
nop
pop
xchg
std
cwtl
jo
or
in
movl
or
imul
cs
outsl
xor
popf
out
jo
aad
lahf
or
pusha
dec
jo
movsb
fmull
pop
lock
pop
inc
data16
mov
sub
mov
add
pushf
xchg
pop
icebp
or
hlt
jns
outsb
subb
jo
jmp
aad
jo
lods
iret
inc
shll
push
clc
subb
sbb
ficoms
push
lret
rcr
mov
cpuid
int3
int
ret
addb
push
mov
jo
push
imul
lock
nop
fisttpl
and
push
icebp
cmpsl
jo
cmpsb
adc
lcall
repz
mov
inc
jo
leave
outsl
or
pushl
cld
ljmp
cs
bound
jl
xor
loope
fs
pusha
cmpl
in
and
xor
push
sbb
jo
cltd
mov
fld
add
test
arpl
pop
sbb
into
push
stc
int
inc
adc
aam
sub
jle
shll
jg
mov
ss
test
lea
je
or
in
jo
jno
jl
test
loopne
xchg
cli
lahf
orb
dec
jo
push
repnz
xor
in
cmp
pop
jo
dec
movsb
xchg
lcall
sub
adc
ret
adc
nop
in
pop
push
adc
in
sub
jo
cmp
jno
or
loope
lahf
jo
orl
int
in
xchg
leave
aad
jecxz
pushf
std
push
jbe
jo
pop
ljmp
fld
jne
lret
loope
sbb
cmp
push
lcall
repnz
mov
outsb
mov
push
sbb
push
inc
push
mov
sub
jo
dec
inc
adc
fstpt
jo
mov
cwtl
mov
leave
adc
test
jnp
mov
mov
jo
jp
jle
test
push
gs
and
scas
pop
shr
loope
int
push
cmpsb
sahf
jo
mov
add
and
lret
ficompl
jo
inc
out
adc
jo
mov
jecxz
jo
aad
inc
fisubl
test
rcrl
mov
xor
and
adc
in
inc
mov
pop
xchg
mov
push
xchg
cmc
fwait
push
xchg
xlat
int
xchg
pop
stos
xchg
push
in
jae
mov
adc
sub
hlt
jmp
dec
movb
xchg
push
enter
dec
test
scas
je
push
cmp
mov
addl
or
xchg
subb
push
cli
jo
arpl
xchg
shrb
ja
pop
lcall
sbb
rclb
shlb
adc
xchg
jl
and
xor
insb
imul
dec
push
dec
js
test
jo
in
hlt
sbb
js
pop
fwait
cmp
jno
loopne
jo
adc
outsl
mov
mov
mov
loopne
mov
inc
push
xchg
test
sub
jo
sbb
sub
jo
insl
popa
lret
aam
jl
mov
testl
sbb
shlb
daa
jbe
andb
push
int
testb
add
xchg
xor
ret
mov
and
andb
mov
scas
xchg
sub
inc
lret
pop
inc
int3
nop
daa
or
add
js
lock
jo
sub
xchg
cmp
scas
aaa
dec
mov
jne
sbb
nop
ret
shr
adc
cwtl
jb
cltd
add
jp
scas
xor
jo
ja
sbbb
xchg
mov
push
repz
ficoml
cli
js
jb
test
testb
arpl
inc
mov
adc
enter
or
push
and
fldt
pop
push
mov
imulb
insb
adc
pop
jo
add
jb
mov
aas
xor
cmpsb
movsl
mov
sarl
outsb
mov
and
rclb
jo
add
pop
scas
fldz
or
push
leave
push
jo
loopne
jne
sti
mov
jo
into
mov
out
aaa
xor
dec
and
pop
icebp
lods
int
inc
fadds
enter
mov
adc
jb
adc
bound
pop
outsl
aas
arpl
sub
mov
pop
jo
pusha
comiss
les
nop
jl
jg
mull
push
imul
push
cmp
dec
mov
cmp
mov
adc
dec
addr16
push
out
rorb
ds
repz
call
mov
sub
jae
inc
icebp
inc
xor
sbb
pusha
xchg
mov
mov
adc
dec
adc
jo
jecxz
xor
xchg
scas
loop
push
adc
xor
pusha
arpl
cs
ret
ja
jg
cmpsb
shrl
ja
jae
inc
adc
insl
aaa
mov
adc
cmp
icebp
sbb
jmp
pop
adc
scas
stc
sti
push
xor
jmp
mov
sbb
adc
pop
sbb
lods
add
in
jo
arpl
outsb
lret
push
or
je
xor
movsb
lock
dec
pushf
push
lahf
fistl
xchg
aaa
mov
fstpl
push
addb
inc
xorl
incb
ss
movsl
jb
fbstp
sub
repz
mov
push
sub
adc
loopne
out
push
std
or
pop
add
xor
imull
xlat
mov
f2xm1
mov
jo
dec
cmpsb
test
jle
imul
jmp
xchg
cmp
dec
int
pop
dec
lock
inc
shll
cmp
cmpsl
xchg
outsl
ss
cmp
or
push
mov
cmp
sbbb
test
xor
pop
push
or
cmpsl
jecxz
arpl
in
add
mov
adc
add
arpl
cmp
das
pop
dec
inc
test
push
cmc
orb
arpl
and
ret
rcrb
inc
gs
fimuls
xchg
lret
loopne
sub
mov
rclb
sbbb
sbb
jl
aad
lret
enter
sti
jecxz
push
mov
jo
push
fsub
int3
push
sahf
imul
push
loop
stos
pop
nop
sub
jo
lock
leave
cmp
cmp
addr16
mov
pop
cmp
fidivrl
push
fs
cs
ljmp
sub
mov
jo
fidivrs
inc
jle
inc
fnstenv
adc
jmp
loop
jo
int
adc
stos
jo
sbb
in
mov
cmp
jo
add
and
add
adc
test
jo
test
push
jo
mov
adc
sub
nop
push
pop
push
je
push
dec
inc
mov
xor
xchg
jnp
jne
nop
pop
out
divl
pop
pop
repz
in
shl
rdmsr
dec
cld
jo
stos
loope
jo
fdivs
rclb
dec
add
cmp
stc
testl
aaa
outsl
ljmp
fwait
test
or
pcmpgtb
arpl
mov
pushl
popa
call
imul
addr16
popf
nop
sbb
or
xchg
xor
leave
jo
cli
pop
xor
leave
fsubl
pop
push
ficompl
das
sub
scas
repz
loope
into
roll
sub
ljmp
fwait
sub
pop
mov
sub
mov
lods
ljmp
jecxz
hlt
add
dec
add
rorb
jp
jo
adc
dec
lret
cltd
xor
mov
and
dec
idivb
push
xor
fisubrs
in
jno
sahf
push
ret
pushf
cmp
and
jo
xor
push
inc
movsb
inc
hlt
xor
scas
popf
in
gs
jl
js
fcoml
jo
lahf
ret
pop
add
rcll
xchg
inc
cmp
roll
fs
jp
in
xchg
jo
mov
sahf
sub
arpl
mov
dec
xor
std
dec
dec
mov
ljmp
cmp
dec
jo
mov
pop
sbb
jmp
jo
scas
loopne
outsb
mov
mov
sbb
adc
iret
push
aad
jo
into
adc
dec
jo
ds
aas
sbb
lcall
pop
xor
sub
cltd
aad
icebp
test
sbb
andb
sbb
cwtl
lahf
mov
mov
fcmovnu
fcom
mov
jns
cmpb
iret
pop
addr16
test
shrb
inc
and
xchg
sub
mov
in
push
mov
pop
inc
fwait
mov
jae
testb
pop
xchg
push
jo
nop
out
adc
aas
movsb
push
hlt
lock
xor
inc
or
mov
push
or
push
out
push
fwait
ss
rcrl
cmove
lret
add
ja
cmp
xchg
stc
das
mov
sub
es
jo
sub
into
cmpb
iret
nop
lods
pop
repnz
popa
jo
ds
ljmp
pop
xor
shll
dec
movsl
sbb
lcall
js
pusha
repz
nop
jecxz
mov
ds
jo
fdivrl
mov
xchg
push
jo
mov
test
sub
popa
push
stos
movb
dec
ljmp
mov
iret
xchg
inc
sbb
dec
stos
gs
jo
rorl
dec
jae
add
test
mov
icebp
out
pop
push
push
nop
movsl
dec
inc
stc
and
jbe
sub
jg
enter
xchg
mov
int
mov
mov
push
cmp
cli
cmc
push
mov
cltd
loope
out
pop
lods
nop
and
adc
mov
sbbb
cmpps
aam
cwtl
lret
add
jo
push
fcmovnu
test
cltd
jo
dec
pusha
aam
pop
sbb
loop
adc
jo
mov
adc
cmc
mov
cltd
add
fndisi(8087
leave
adc
jmp
jne
cmc
and
jo
xchg
jg
push
pop
dec
mov
rolb
test
pop
xchg
js
and
mov
hlt
dec
jo
sbb
lret
push
aam
mov
mov
mov
inc
in
repz
jo
adc
repz
cmpsb
test
int
cmp
jb
fnsave
sarl
and
xchg
push
imul
adc
cmpl
test
jmp
jb
jle
mov
xlat
push
je
nop
fs
jo
lods
sub
and
test
insl
pop
mov
adc
out
and
mov
pop
ja
notb
sub
add
xor
pop
xchg
sbb
inc
cmp
shlb
data16
jo
movsl
outsb
inc
test
jmp
push
in
out
mov
mov
ror
adc
xor
aaa
jo
sbb
inc
shld
jl
imul
test
mov
xlat
sbb
pusha
adcl
sub
mov
adc
jmp
xchg
xchg
inc
jb
jo
ja
orl
ret
pop
jecxz
xchg
sbb
mov
mov
pop
sub
pop
add
push
push
scas
or
jle
xchg
out
test
imul
ret
enter
gs
test
lock
jle
or
inc
add
adc
sbb
movsb
dec
lahf
cmp
jp
xchg
jns
aaa
mov
pop
mov
pop
jae
lods
xchg
outsb
xor
inc
jl
scas
cmp
out
fmulp
ss
cs
fcoml
movsb
lds
enter
mov
iret
lock
mov
mov
test
push
mov
jns
fildll
mov
loop
stos
imul
cwtl
scas
push
and
mov
sbb
inc
xor
or
push
insb
fbstp
adc
jno
pop
mov
cmpsl
jo
adc
sub
mov
lea
in
mov
inc
or
sbb
and
cmpsl
in
lds
mov
ret
popa
xor
push
ficompl
rorb
adc
arpl
jle
cmp
dec
jns
push
push
gs
mov
or
mov
dec
cmp
leave
out
repz
or
push
sbb
cmpsl
xchg
movsb
repz
push
or
xchg
or
sti
fidivl
imul
push
mov
xor
out
data16
pop
lds
add
lock
jge
cmp
push
cmp
mov
call
inc
cmp
or
gs
lock
adc
xorb
nop
sbb
push
pop
daa
adc
or
jae
and
mov
or
lods
mov
fst
jp
jecxz
shlb
int
roll
or
insl
adc
orb
rorl
std
jo
pop
scas
adc
mov
add
or
leave
push
shll
bound
mov
mulb
xchg
lock
mov
sbb
push
inc
pop
sub
nop
mov
push
ss
repz
fnstsw
out
fdivl
fsubrs
mov
xchg
jmp
ds
repz
push
xchg
clc
inc
mov
add
pop
fdivs
test
sbb
push
lock
mov
jae
ret
mov
cmp
fs
andl
daa
pand
inc
stos
jle
es
push
and
lds
rolb
scas
push
cmp
movsb
xor
addb
test
cmpsb
fucomip
fidivrs
out
clc
dec
mov
xchg
push
xchg
xor
jbe
gs
packsswb
mov
lcall
fwait
jae
sbbb
add
push
jnp
fisubrl
fisubs
adcl
jge
pop
mov
push
xor
pop
mov
pop
hlt
out
cli
frstor
in
jmp
dec
adc
das
sub
fcoml
test
inc
out
jae
shlb
mov
out
daa
dec
iret
aas
lock
mov
orb
lock
std
push
pop
aaa
leave
arpl
adc
push
jmp
loop
fstpl
push
sbb
pop
sbb
jg
xor
popa
sahf
out
push
outsl
push
push
mov
sbb
aam
jns
mov
dec
scas
push
ds
jae
aas
popf
in
adc
pop
xor
add
push
fbstp
cmc
faddl
jo
mov
addb
mov
dec
sbb
shrl
pop
jo
cmp
js
mov
jecxz,pn
sbb
fwait
xor
dec
jo
cmpsb
mov
cld
imul
jo
aam
fsts
cwtl
int3
nop
cmp
push
sbb
sbb
stos
mov
mov
mov
mov
sub
arpl
mov
cmp
push
mov
add
rcrb
dec
scas
fwait
ljmp
adc
mov
movsl
push
mov
js
sbb
xchg
popa
dec
add
mov
cmpsl
inc
mov
fwait
inc
mov
inc
xlat
mov
push
mov
sub
sub
jo
addl
sbb
addl
sti
xchg
and
mov
insl
sub
fcomip
jge
mov
mov
fpatan
sub
jg
cmp
test
mov
stos
in
inc
push
sbb
xchg
je
inc
mov
jns
pop
push
xorb
push
in
and
ret
je
int
jno
clc
lret
js
arpl
pop
loope
push
jl
scas
xlat
xor
sbb
and
arpl
popf
mov
nop
pusha
push
jo
shrb
subb
inc
push
or
xor
into
sbb
nop
dec
push
lahf
jo
add
xchg
stos
js
lret
and
les
cmp
jbe
jmp
loopne
cs
fs
movsl
fdivl
nopl
stc
popf
push
xchg
loopne
jo
cmp
push
jo
inc
test
mov
jge
jl
xchg
mov
loop
lcall
dec
pop
dec
sub
fiaddl
xor
shlb
jo
lcall
jo
rorl
repnz
addb
push
jo
cmc
mov
insb
ds
test
adc
mov
test
jo
add
inc
mov
jo
mov
fidivs
mul
mov
gs
lods
in
jbe
jo
and
ror
fdivrs
sbb
lods
inc
daa
jo
add
neg
xchg
push
sub
mov
pop
cmp
lret
out
movsl
in
jae
mov
rcll
imul
jp
loope
pushf
int
inc
mov
dec
and
jo
jno
lret
sub
mov
in
xchg
push
out
jo
les
popa
inc
and
xlat
sti
orl
mov
jo
or
xlat
mov
popa
test
lret
dec
push
movsl
dec
jo
daa
lds
push
bnd
mov
sub
mov
dec
jl
ficoml
jo
xchg
insb
aam
add
rcrb
or
enter
mov
mov
adc
pop
out
mov
push
rcll
mov
cmpl
pop
dec
inc
and
jbe
mov
xchg
das
sbb
arpl
lret
into
push
and
xchg
scas
ja
jecxz
adc
pop
sbb
mov
cs
mov
cwtl
pop
orb
out
std
add
jo
push
dec
outsl
xchg
or
aad
add
mov
mov
push
movsl
jo
jmp
cmp
jb
xchg
jo
fwait
stos
cwtl
jl
pop
jp
and
push
outsb
xor
ret
cmp
mov
scas
test
insb
rclb
mov
outsl
jo
inc
dec
jae
cmp
adc
push
push
mov
push
push
aaa
jae
lret
or
mov
jo
lods
pushf
xchg
xchg
movl
iret
dec
xor
shrl
into
nop
or
cmp
adc
popf
cmpl
popl
pop
jne
mov
scas
clc
into
in
jo
popa
cmp
push
lret
push
ficomps
nop
rolb
xchg
jo
lahf
std
mov
cmpsb
cmp
popa
xchg
push
jno
int
and
jecxz
xor
add
push
sub
inc
adc
pop
movsb
repz
bound
clc
dec
jns
or
and
adc
adc
sbb
cs
push
sub
leave
jne
imul
jbe
shlb
push
test
and
mov
popf
push
sub
lods
orb
divl
push
jmp
add
js
xchg
pop
and
fimull
inc
inc
push
leave
mov
sub
jbe
fdivp
rcr
in
test
pop
addr16
jp
inc
arpl
into
scas
mov
and
inc
fistl
or
and
mov
jae
xchg
jo
data16
lods
xchg
push
mov
jo
loopne
fimuls
mov
inc
std
xor
subl
jns
fstp
or
pop
dec
movsl
fdivs
mov
fdivrl
jle
push
fldcw
out
sbb
gs
or
mov
into
std
mov
jl
scas
sub
push
int
fstl
pop
shll
in
add
sbb
scas
fnsave
leave
clc
inc
fsin
pusha
push
shrb
lahf
cmp
shlb
aam
ja
sarl
loopne
mov
mov
arpl
movsl
adc
dec
out
stos
mov
pop
gs
adc
fwait
out
or
aas
and
cmpsb
jg
insl
subb
mov
adc
aas
test
sbb
aas
sbb
cmpsb
stos
insl
inc
scas
lea
cmpb
push
inc
mov
inc
xor
mov
pop
loop
add
lods
push
jmp
dec
shl
adc
ret
nop
dec
andl
es
and
push
dec
mov
add
push
cmpsb
std
xchg
pop
pop
sub
scas
jae
call
test
adc
pop
into
pop
repz
xorb
out
jno
imul
stc
jb
lock
fstps
icebp
mov
jns
lahf
add
sbb
cmp
call
cmc
lods
ret
push
ljmp
inc
lods
sub
dec
insb
cmp
mov
xchg
cmp
inc
inc
adc
in
cmc
adc
aam
and
shl
jle
ds
mov
ss
je
rcll
aad
andb
lea
out
insb
cmc
shlb
jae
sahf
jp
nop
dec
push
call
fs
lock
out
dec
test
or
imul
cwtd
pop
sbb
nop
out
jmp
xor
xchg
jp
mov
add
test
mov
adc
jl
jae
addr16
adc
icebp
scas
nop
cmpsb
inc
push
in
addr16
push
jl
inc
cltd
xchg
out
ret
out
push
mov
ftst
and
icebp
jne
jl
sbb
sub
mov
int3
sbb
fs
cmp
std
pop
add
push
sbbl
sahf
aaa
imul
into
dec
repz
push
mov
nop
lods
push
or
push
and
fucomip
roll
nop
mov
xchg
outsb
mov
or
int3
inc
add
not
pusha
jo
rep
and
mov
inc
xchg
jae
mov
jbe
cli
cmp
adc
push
sub
lock
fcmovu
and
jb
lret
jns
or
cmpsl
xor
dec
xchg
and
sub
push
std
iret
clc
addl
jb
loope
and
or
dec
pop
jle
sub
cmp
and
sbb
push
lahf
and
or
call
inc
in
cli
minps
ja
repnz
sbb
movsb
mov
nop
loopne
or
jbe
fnsave
jne
xchg
and
out
add
fisubrs
fs
jno
mov
stos
es
pop
frstor
mov
outsb
add
push
jo
arpl
push
adc
movsl
push
insl
add
cmp
lods
pop
and
nop
ja
das
dec
mov
xor
int3
insb
add
test
gs
inc
movsb
cmc
pop
xchg
pop
jae
jbe
leave
or
ret
out
pusha
lahf
inc
inc
sarl
mov
test
dec
rclb
cs
roll
jle
test
stos
enter
ficoml
test
jmp
cmp
jae
insb
push
cwtl
cmp
mov
aam
or
rclb
jae
xchg
xor
je
js
popf
shll
addb
popf
push
fcmovbe
hlt
lahf
mov
std
rcrb
jbe
sar
aaa
gs
dec
int3
and
jno
push
adc
insb
mov
fs
out
arpl
fs
call
jae
dec
mov
rolb
fistps
push
push
imul
jle
stos
movsb
idivb
sub
and
jmp
std
nop
cmp
cs
scas
data16
inc
outsb
mov
arpl
xchg
cmp
mov
add
mov
fwait
dec
adc
mov
mov
sbb
or
stos
out
pop
int
cmc
outsl
mov
sub
add
fs
int3
dec
icebp
push
out
sub
push
pop
xor
mov
mov
mov
cmpsl
dec
imul
in
jne
out
jle
dec
stos
lcall
out
xchg
and
mov
push
fucomip
fadds
jne
and
sbb
daa
movsl
mov
mov
adc
dec
lret
xor
call
imulb
xlat
dec
or
sbb
and
and
loope
subb
and
pop
mov
or
lahf
stos
imul
scas
rorb
pop
sbb
push
cmp
sbb
sub
push
and
fiaddl
insb
xchg
stc
push
jmp
out
push
jge
or
std
jb
or
push
mov
mov
add
mov
ss
test
stc
out
or
pop
lret
mov
sbb
dec
mov
push
add
dec
pop
outsb
or
insb
filds
xor
mov
mov
cmp
xor
jo
adc
rorb
scas
xor
pop
sbb
or
dec
dec
mov
jnp
mov
xchg
sub
fisttpl
mov
in
mov
je
jno
or
repnz
jge
jo
push
int
cli
ds
outsb
sub
gs
mov
add
inc
mov
jge
pop
repnz
mov
insl
mov
jno
jo
dec
in
sub
push
fstpt
in
inc
cli
call
fwait
dec
cmp
jo
scas
inc
jle
add
int
mov
jo
movl
daa
jo
sti
cli
pop
bound
out
or
outsl
insb
adc
jo
punpckhdq
push
mov
push
adc
cmp
jo
cmp
out
pop
lcall
or
push
pop
fwait
mov
andb
lret
jo
mov
mov
xchg
jg
push
jo
jne
movsb
mov
pop
push
pop
fsts
mov
es
lock
lret
cmc
mov
nop
xchg
jo
jmp
push
jo
pop
jae
pop
fdivrl
outsl
call
push
push
mov
repz
adc
mov
hlt
movsb
jnp
pop
push
jo
add
sti
xchg
pop
jo
lret
dec
mov
pop
push
je
mov
pusha
dec
out
xchg
xor
nop
xor
sbb
leave
sarl
loopne
push
cmc
rcl
sbb
lock
jo
push
pop
lds
add
cmpsl
fsubr
das
pop
pop
cmc
cs
mov
sub
out
arpl
jo
fs
lahf
xchg
adc
std
and
div
cmp
dec
subb
sub
rcrl
push
xchg
xor
test
pop
in
fbld
imul
dec
ja
xchg
pop
jo
mov
enter
mov
aas
bnd
or
push
jo
mov
outsl
mov
mov
sub
in
shll
xchg
mov
sub
jno
fcmovnu
lock
add
imulb
clc
jo
int
xchg
inc
pop
cmpsb
push
pop
push
push
mov
jmp
xor
bound
jno
sbb
repnz
jb
nop
dec
cs
sahf
xlat
inc
ja
in
jo
cmp
mov
repnz
mov
pusha
mov
jo
pop
pop
xchg
pcmpgtd
jo
enter
mov
pushf
adc
shll
js
out
shll
or
mov
sub
mov
push
test
pop
lret
xchg
add
and
test
jmp
lods
shll
dec
adc
call
in
sbb
push
xor
jo
hlt
loopne
sbb
lret
xor
andl
out
cwtl
dec
std
xchg
adc
jo
push
sbb
das
push
dec
add
fsubrp
lret
sub
jae
test
jo
dec
push
sbb
sub
mov
push
pop
inc
repz
sub
js
fmull
pop
movl
push
lods
arpl
dec
sbb
cwtl
jo
sbb
aad
cltd
xchg
subl
out
call
jae
push
pushf
sub
mov
es
adc
jo
push
mov
in
aam
mov
stos
and
rolb
das
jo
jg
imul
rorb
jmp
sbb
movb
pop
xchg
mov
and
jo
insl
jbe
dec
jle
scas
jo
cld
sti
xor
aaa
push
push
jo
jecxz
leave
sub
push
cli
cmp
mov
push
add
and
hlt
jl
adc
sbb
movsl
push
xor
jo
inc
stos
dec
xchg
xchg
cwtl
mov
push
lock
lods
mov
ficoms
popf
je
es
push
jp
jo
lahf
fld
in
lret
outsb
divb
cmp
sbb
push
dec
pop
loop
dec
and
shl
mov
add
js
jle
cmp
push
aas
int3
ret
movsl
or
mov
adc
jne
jno
inc
lods
into
jo
call
or
add
mov
bswap
loope
sub
stos
or
sub
or
mov
mov
int
dec
pushf
js
movsb
sarl
sub
sbb
mov
mov
stos
sarb
stc
lret
cmpsl
jo
push
nop
push
clc
scas
call
lds
adc
in
imul
jmp
add
sub
xchg
xor
dec
in
inc
dec
cmp
cmp
pusha
ret
lret
mov
jo
rorl
in
mov
cmp
lret
dec
push
adc
ds
adc
or
jae
xor
mov
sub
dec
and
jbe
sbb
adc
orl
adc
sub
mov
dec
mov
aaa
mov
scas
pop
xchg
xor
dec
pushf
push
in
fs
jo
in
fwait
ss
repz
sub
xor
ljmp
orl
gs
jo
pop
pop
movsl
mov
jl
lock
lret
jo
or
xchg
mov
xchg
dec
sub
cld
iret
push
pop
xchg
add
insb
add
stos
cltd
cmc
mov
jecxz
mov
push
lret
sub
jbe
push
in
mov
mov
dec
sbb
dec
ja
and
pop
jo
call
mov
sbb
cld
out
ret
mov
iret
adc
loopne
scas
bound
dec
mov
mov
mov
das
data16
insb
mov
jo
cli
xor
ja
xchg
jg
ret
mov
pop
jo
test
ljmp
mov
sub
pop
iret
ret
clc
fmul
aad
jo
jne
inc
dec
adc
pop
jo
pop
aaa
mov
push
push
adc
jmp
orps
cmp
and
sub
mov
data16
mov
jl
insb
push
pop
fnstsw
aas
push
out
xchg
push
test
fcompp
lods
jmp
or
repnz
xchg
sbbb
lcall
std
ficoms
data16
or
mov
lea
jnp
insl
popf
shl
lock
dec
cmp
mov
dec
call
push
pop
lahf
dec
add
mov
mov
cs
lret
lock
xchg
add
movsb
mov
cmp
sbb
mov
push
jne
insb
jmp
mov
jae
jl
xchg
andps
sbb
jno
jo
scas
adc
cs
inc
inc
dec
or
mov
mov
inc
jo
mov
adc
jb
testl
jo
push
movsb
xor
mov
xor
sahf
jo
jge
push
sbb
imul
orb
pop
repz
pop
mov
mov
jmp
push
je
jnp
ret
jo
xchg
mov
jmp
in
or
sub
and
daa
adc
push
jl
test
jo
fcom
adc
xchg
jl
jg
pusha
ror
pop
push
mov
jnp
and
mov
fstps
cmp
insl
rorb
ja
seto
pop
out
sbb
stos
xchg
je
clc
outsb
jl
xor
mov
ret
jo
xor
mov
push
push
adc
push
imul
sbb
push
je
pop
jo
stos
int3
fldt
sbb
dec
jmp
popf
jg
pop
jne
dec
testb
clc
cmpsl
bound
shlb
fnsave
scas
inc
in
cs
lea
xchg
pop
pop
and
mov
xchg
or
sub
in
movsl
icebp
jle
repnz
call
fsubr
jae
mov
push
or
cmpsb
add
insb
push
xchg
jo
shll
jae
adcb
sbb
jo
push
xchg
adc
in
jo
sbb
xchg
push
daa
mov
push
lods
cmp
icebp
sahf
test
shll
sbb
sub
push
je
jo
xchg
nop
fwait
cmc
scas
and
jo
inc
cwtl
addr16
adc
aam
lods
jo
or
xchg
jecxz
sbb
jge
sbb
shl
pop
pusha
jo
or
add
outsb
notl
shll
ljmp
loope
rcrb
cmp
clc
mov
mov
adc
int3
lds
and
push
pop
adc
push
mov
jl
hlt
add
pop
dec
pop
mov
sbb
sub
or
jo
outsl
aas
pop
mov
xchg
jg
mov
push
je
xor
jo
jmp
sub
in
adc
push
rcr
mov
in
jae
add
push
mov
mov
push
pop
negb
mov
test
adc
jno
arpl
aam
je
or
xor
adc
add
push
push
test
icebp
and
push
mov
push
mov
data16
sbb
mov
scas
mov
ss
movsl
sti
cltd
cmp
out
scas
inc
lock
loop
mov
mov
lods
add
test
inc
pop
fs
cmpsb
call
cmp
push
push
mov
sub
and
add
jmp
loope
clc
push
push
xchg
scas
mov
jno
out
or
sbb
xor
push
adc
rolb
jp
xchg
arpl
xchg
lea
jns
mov
int3
mov
cmpsb
push
ficompl
pop
rclb
jge
cmp
in
aam
lcall
xor
dec
push
mov
data16
out
and
shlb
and
add
jbe
frstor
push
sbb
addl
nop
jae
sbb
and
icebp
lock
sub
scas
fstps
jbe
int
repz
mov
jae
xchg
loopne
push
sub
lods
leave
sub
das
jae
stos
sbbb
scas
push
jl
arpl
test
int3
pop
adc
enter
int
add
andb
cmp
lret
std
loopne
das
inc
sbb
sti
jns
mov
adc
stos
divb
ficomps
outsl
cld
xchg
mov
arpl
fidivrs
xchg
pop
or
bound
scas
jae
mov
out
add
jno
out
cld
test
icebp
fimuls
sahf
mov
shrb
int3
pop
mov
push
cmp
pop
mov
cmp
add
in
test
sub
mov
sbb
mov
testb
repnz
movsb
pop
push
outsl
fbstp
xor
jnp
testb
or
pop
in
add
sub
xchg
mov
in
js
pop
ds
testl
jle
mov
xchg
fldl
inc
sub
adc
jmp
adc
jle
call
scas
sbb
aaa
and
cld
lock
and
addr16
pop
pop
mov
adc
fcmovnbe
cmp
jno
xchg
mov
mov
mov
pop
dec
push
xchg
iret
inc
mov
xor
shlb
pop
xorl
sbbb
mov
psllq
scas
cmp
fdivr
mov
cli
cmp
inc
lock
ja
push
jb
inc
test
cmpl
movsl
pop
sahf
js
popa
push
leave
jle
test
lds
jl
mov
cmp
lret
push
cmp
stos
inc
dec
fdivl
or
cmp
push
push
testl
add
inc
stos
mov
add
enter
mov
inc
mov
and
in
arpl
stc
data16
pop
add
cs
inc
inc
cmpsw
loop
inc
pop
clc
insb
add
shlb
test
cmp
mov
sbb
and
xor
xchg
outsb
incb
add
add
cmp
lock
dec
xor
and
stos
sub
cmp
pop
mov
pop
outsl
cmc
std
and
jmp
stos
jg
outsb
or
sub
inc
sub
in
popf
imulb
cmc
sub
pop
insb
pop
mov
inc
pop
imul
xchg
cmc
dec
psubw
mov
sbb
push
push
cmpb
jne
insb
sub
lds
dec
jmp
out
outsl
jl
addr16
cmp
lahf
insl
outsb
mov
insl
js
das
jb
adc
cwtl
xor
jne
cmpsl
and
mov
mov
fnstcw
cmpsl
fistl
xor
cwtl
jle
push
insl
jne
xchg
mov
mov
xchg
push
orl
loop
push
shrl
add
add
mov
lret
jmp
mov
push
lds
sub
aas
outsl
int3
inc
daa
push
out
arpl
ret
das
cmp
jae
js
jbe
mov
mov
in
inc
push
test
dec
je
cmp
nop
and
and
movsl
mov
sbb
or
dec
dec
es
aas
sbb
add
xor
shlb
push
pop
nop
js
pop
jbe
sbb
in
mov
repnz
cmp
jle
mov
pop
mov
popa
bound
stos
fiadds
inc
pop
add
nop
mov
mov
pop
xchg
into
sub
das
ljmp
in
push
pop
push
outsb
cld
and
int3
rcr
or
push
pop
push
mov
cmp
insb
subl
add
icebp
pusha
xor
icebp
das
sahf
sarb
push
push
and
fidivrl
in
cmp
mov
nop
dec
push
je
or
jle
scas
mov
inc
inc
sahf
sbb
jns
mov
sub
daa
mov
enter
inc
inc
int3
and
xchg
mov
xor
xor
mov
sub
inc
fnstsw
popa
shlw
fwait
fs
aas
jae
pop
push
sbb
shlb
cmp
aaa
rorb
clc
rorb
mov
mov
pop
push
das
push
xchg
jae
rolb
nop
nop
hlt
incl
or
hlt
cmp
fs
jno
mov
in
dec
pushf
ljmp
js
sbb
xor
sbb
pusha
rcr
add
add
add
xchg
loopne
loope
sub
ds
fiadds
nop
push
ficomps
sarb
fnstcw
push
lret
jbe
push
out
adc
mov
mov
push
push
insb
movsl
and
pop
cwtl
or
or
jb
cmp
adc
jno
clc
adc
rcrb
outsl
push
add
out
test
push
cltd
icebp
into
mov
stc
fs
popf
test
push
xchg
and
arpl
dec
cmpsl
mov
repnz
mov
push
testl
shll
push
push
cld
je
pop
push
faddp
sbb
scas
stos
mov
arpl
push
movsb
xor
das
ret
sub
jb
mov
inc
add
and
add
lock
cli
mov
jle
xor
arpl
testb
cmp
lods
adc
mov
xchg
out
jne
xchg
idivl
cltd
adc
daa
rclb
loopne
or
xchg
jg
out
adc
jo
mov
fidivs
out
mov
push
jle
mov
insb
sar
dec
ret
jg
bound
rcrb
mov
enter
inc
icebp
jle
pusha
fnsave
xchg
jae,pn
mov
iret
adc
mov
mov
sbb
mov
outsb
sbb
cmpsl
sub
sub
imul
pushw
cmp
fiaddl
outsb
mov
mov
jmp
andl
out
outsb
bound
pop
or
stos
je
ret
cmp
call
jae
inc
lcall
mov
mov
inc
xchg
fs
mov
xchg
jno
xchg
jnp
stos
nop
ret
lock
mov
or
aam
subl
add
mov
push
jmp
mov
ja
pop
sbb
jne
ss
sub
xor
push
mov
femms
cmp
dec
imul
push
push
pusha
arpl
or
aam
sbb
adc
sti
sub
xchg
mov
outsl
into
rorl
mov
out
rorb
mov
jge
sbb
leave
outsb
fs
inc
xchg
jne
lcall
notb
xchg
subl
aaa
mov
sub
cwtl
and
call
push
lods
aad
push
shlb
jbe
adc
fsubs
mov
jae
insl
xchg
push
popf
arpl
xor
clc
lock
dec
xor
incb
test
nop
push
hlt
pop
xor
das
popf
cld
cmp
fidivl
fidivl
cli
pop
jae
test
and
push
arpl
xchg
stos
cs
out
outsb
push
call
and
cmp
out
push
movsb
inc
and
sarb
pop
aaa
push
int
cld
jle
cmpsb
movsb
sahf
lock
rorl
xchg
nop
daa
std
mov
sub
into
nop
inc
push
jae
cmpsl
call
and
xor
jbe
jl
mov
arpl
xchg
in
fists
hlt
push
add
fucomp
or
lds
jne
dec
lock
ret
dec
pop
int
mov
adc
rcrb
sti
mov
insb
jge
jae
and
cmp
mov
outsb
sbb
inc
cmp
es
add
push
loope
dec
jns
pop
and
out
jbe
out
push
pop
sarl
fnstenv
insl
out
fcomip
pusha
xchg
mov
icebp
cmp
dec
addb
mov
sbb
dec
fwait
lahf
addb
push
mov
cmp
mov
pop
xchg
out
xlat
sub
inc
test
stos
aam
pop
gs
outsb
xchg
les
push
insl
fwait
xchg
bound
or
daa
add
data16
cmp
xor
jno
loopne
xor
out
xchg
popa
lahf
enter
add
loope
inc
ret
adc
jbe
je
pop
lret
pusha
mov
cmp
adc
je
pop
jnp
jae
sbb
rolb
in
sub
js
pop
jg
pop
ljmp
out
jmp
cs
mov
insb
mov
fmull
std
out
insl
pop
es
cmp
xor
fs
inc
imul
add
add
incb
dec
and
cmpsb
out
xchg
jae
xchg
sub
mov
addl
pop
and
jae
fldl
pop
lret
call
das
mov
out
js
arpl
lret
stos
cwtl
test
fucomi
rorb
enter
subl
mov
or
pusha
jp
xchg
sarb
pusha
mov
shl
subb
fdivrs
arpl
std
jno
adc
add
pop
insb
xchg
cmpb
js
lds
jmp
andb
int
pop
mov
bound
push
gs
jns
out
icebp
jae
dec
and
arpl
jg
arpl
cmpsl
insl
jne
fiaddl
pop
push
stos
and
pop
pop
and
cld
mov
jmp
or
cmp
fistps
repz
inc
mov
out
cli
mov
lret
cmpsb
sbbb
int
inc
mov
add
mov
mov
push
pop
out
lods
add
lock
sbb
cwtl
cmp
in
insl
mov
push
push
out
and
adc
mov
out
call
test
push
adc
add
sub
loopne
andb
jae
xchg
pop
cli
pop
lret
scas
inc
mov
dec
ret
push
jmp
mov
insl
aam
mov
adc
hlt
jae
pusha
flds
push
pop
call
jo
fistps
movsb
in
in
lods
push
jae
jns
and
bound
loop
xor
fidivrs
adc
bound
dec
inc
jl
push
sub
call
dec
push
push
insb
rcrb
push
jae
movsl
cmp
rcrl
xor
jbe
cwtl
cmpsl
add
pusha
add
jae
fs
xor
inc
fcomp
push
xor
mov
lea
sahf
mov
push
jmp
ss
or
int
lock
lock
mov
and
enter
and
sub
cmp
mov
dec
in
mov
adc
mov
inc
and
mov
jb
imul
fadds
sub
mov
dec
out
sti
adc
in
inc
mov
mov
adc
setge
mov
stos
push
mov
pop
das
mov
and
out
jp
bound
add
cmp
test
or
lds
bsr
ss
mov
outsl
in
jb
cmpsl
std
jl
shlb
add
inc
pop
mov
lcall
jl
lahf
mov
or
jae
stos
sti
movsl
mov
mov
loopne
vpsubsw
cltd
rclb
xchg
push
in
push
push
movsb
addr16
ret
into
mov
fnstcw
mov
mov
mov
pop
lods
popw
pop
and
mov
rcrb
or
cmp
cmpsb
cmp
arpl
hlt
cmp
mov
cltd
stos
jge
fs
pop
pshufw
fdivs
mov
jo
out
mov
outsl
mov
cltd
adcb
push
shl
shlb
xchg
dec
out
jns
out
adcb
mov
int
pop
inc
in
mov
rclb
push
je
mov
jmp
mov
and
test
lret
mul
sub
fsubs
sti
push
loopne
hlt
subb
add
pushf
test
movsl
jo
adc
daa
loop
mov
out
inc
inc
mov
mov
popf
xchg
es
shlb
maxps
or
mov
mov
jnp
or
insl
add
bound
cld
mov
push
jg
pop
jo
in
stos
movsl
push
adc
fldt
ds
or
into
jo
jmp
sub
jo
lcall
lds
xchg
fsubrs
in
nop
js
xchg
cltd
jne
dec
bound
mov
pop
lahf
in
inc
adc
ds
push
into
ror
loope
jo
ljmp
imul
xor
xor
mov
stc
sub
push
iret
cld
lods
mov
pop
cmp
out
fimull
ss
fucomi
xor
adc
mov
xchg
cmpsb
jg
jae
sub
adc
es
out
xchg
mov
clc
cmp
jb
sub
mov
test
inc
push
sub
fidivrl
fidivrs
nop
pop
cmp
or
xchg
xor
nop
loop
popa
stos
mov
jo
lock
addl
push
jb
pushf
enter
cwtl
sub
adc
sbb
sbb
repnz
inc
jo
push
int
out
adc
and
inc
out
je
mov
jo
aad
bound
sub
addb
mov
sbb
xor
add
mov
loopne
scas
addb
mov
pop
sub
mov
mov
mov
xchg
test
mov
leave
jbe
xchg
addr16
xor
je
enter
lock
pop
nop
test
daa
add
push
aas
pop
pop
add
rcrb
fistpl
dec
scas
movsb
or
add
sbb
inc
int3
sti
sbb
push
jo
je
jl
subb
js
movsb
pushl
xchg
and
stc
mov
cmp
jo
loope
aam
or
jle
xchg
shrb
mov
jl
test
xor
jp
stos
stc
fcmovne
add
lds
jo
scas
rcrb
sbb
lods
jo
and
xorb
jo
sbb
cmp
pop
ret
in
sub
jmp
hlt
or
xchg
push
jg
or
seta
inc
out
nop
aaa
dec
je
inc
cmp
in
je
jo
jns
push
insl
out
scas
sbb
or
ja
clc
xor
push
xchg
scas
imul
icebp
das
push
xchg
push
xchg
sub
mov
jo
jmp
xchg
in
leave
sbb
adcl
rdmsr
jl
push
xchg
mov
mov
jp
leave
sbb
sbb
and
mov
adc
pop
xchg
jg
jmp
push
fisubs
push
ljmp
call
div
into
jge
jmp
sbb
lock
fsubrl
xchg
insb
pop
shl
jae
jns
push
inc
jmp
in
scas
jno
cmp
and
call
in
popa
js
pusha
xor
sbbb
mulb
decb
lds
jle
and
sti
dec
cmpsl
xchg
pop
in
cmp
dec
mov
xorb
scas
insl
sbb
andb
dec
sbb
sbb
out
std
out
repnz
push
adc
loope
stos
dec
xorb
subb
and
push
fildl
jl
mov
sbb
in
ret
xbegin
cmp
outsb
pop
jae
dec
out
sub
inc
iret
neg
cmpsb
clc
mov
out
decb
andb
xchg
xchg
and
loopne
xchg
sub
mov
frstor
sbb
pop
push
arpl
jne
pop
shrl
insb
mov
faddp
in
add
cld
xor
js
add
mov
xchg
scas
sub
or
pop
and
dec
push
aad
rorl
or
mov
test
repnz
lret
pop
insb
iret
sbbl
in
xor
jmp
fwait
xlat
inc
ja
repnz
js
push
idiv
fcoml
mov
push
sbb
dec
pop
jmp
scas
out
bound
shrb
rcll
insb
imul
flds
andb
sbb
je
js
push
adc
mov
adc
in
stc
push
sub
lcall
cmp
mov
sbb
inc
jae
xor
addr16
and
mov
sub
scas
mov
sbb
mov
lcall
jns
cmpsb
push
ret
or
int3
adc
repnz
test
dec
arpl
fwait
push
incb
push
mov
dec
add
inc
in
push
fstl
jne
rolb
inc
icebp
jae
outsl
addr16
aaa
adc
ljmp
push
jle
f2xm1
jae
pop
mov
dec
push
mov
inc
lock
ss
jbe
cmpsl
mov
lock
ds
mov
adc
arpl
ja
movsl
lret
adc
mov
paddusw
dec
fsubr
push
jns
out
fsts
icebp
cltd
mov
and
xor
pop
out
jg
and
inc
std
mov
int3
xchg
pop
les
shrl
xor
or
and
and
cld
stc
lahf
js
dec
lret
mov
pop
lret
add
cmp
add
pop
sbb
fbld
test
mov
pop
test
rcll
cmp
insb
pop
pop
data16
fucomip
xchg
pusha
sub
jns
nop
sarl
mov
arpl
lock
cmp
jb
iret
or
mov
sub
decb
xchg
std
add
jp
dec
cmp
imul
mov
fildl
jnp
lods
adc
add
jge
gs
es
lock
dec
int
pop
popa
inc
out
in
outsl
adc
aad
insb
stc
xchg
cs
jae
jl
push
push
test
loopne
or
ljmp
dec
popa
out
push
cmp
and
icebp
out
mov
push
daa
js
arpl
rorb
insl
dec
adc
inc
or
sub
xor
dec
les
adc
outsl
inc
inc
xchg
popl
or
leave
sub
lret
mov
push
cli
repz
mov
xor
cli
stc
sbbb
fcmovne
arpl
test
in
cmp
outsl
sbb
arpl
lods
bound
pcmpgtb
xchg
dec
iret
xchg
mov
sti
movsb
dec
push
mov
cmpb
lret
sub
cmp
add
cmpsb
cmp
clc
sbb
or
dec
inc
push
sub
call
out
in
out
je
fdivl
jmp
jg
ret
jnp
xchg
insb
add
jle
push
inc
jb
xchg
int
lahf
jl
test
scas
icebp
fwait
pop
loop
int3
mov
adc
gs
and
leave
stc
shll
and
bound
dec
push
rorb
or
push
test
push
add
xchg
insb
push
dec
sti
in
orb
mov
pop
dec
loop
outsl
icebp
mov
outsl
push
insb
mov
scas
sbb
sbb
and
movsb
pop
adc
test
popf
int3
mov
mov
scas
shr
insb
in
ds
or
mov
mov
xchg
loopne
jae
mov
push
in
paddsb
adc
sbb
aas
scas
movsl
push
arpl
jp
mov
loop
lahf
push
xor
inc
pop
sarl
sbb
mov
shl
lahf
call
icebp
push
jecxz
sbb
shrb
mov
mov
mov
inc
mov
xlat
fxch
inc
push
lods
cmp
rorb
jae
addr16
dec
adc
movsl
roll
icebp
jae
xchg
mov
ljmp
cmp
and
out
loope
jge
jns
ja
lods
jae
and
push
xchg
adc
push
mov
test
sub
jns
cmc
popa
adcb
popf
dec
jo
arpl
push
pop
mov
scas
bound
leave
imul
push
mov
pop
sub
or
mov
push
test
nop
ja
mov
icebp
negl
mov
jne
mov
rolb
fsubp
push
lahf
or
rclb
std
fwait
cli
hlt
and
loop
scas
mov
jg
push
jne
cmpl
data16
scas
sub
sub
aad
xchg
xchg
dec
lret
callw
or
sbb
push
adc
sbb
std
cli
jge
scas
and
or
push
js
push
not
mov
jno
lret
fwait
fs
mov
sarl
add
inc
loopne
push
cwtl
adc
sbb
lret
and
shr
sbb
clc
jmp
sbb
out
dec
sub
xchg
xchg
inc
aas
push
fildl
ds
lahf
pop
stos
xchg
into
sub
jg
lods
dec
insb
mov
xor
push
push
inc
mov
mov
pusha
cmp
mov
loopne
adc
jno
sarb
and
inc
insb
xor
aas
es
call
push
add
dec
fs
dec
jae
inc
loop
push
imul
inc
outsl
arpl
sub
push
fisttpll
lahf
addr16
push
sbb
xchg
rcrb
fisubrl
out
test
je
loop
sbb
insl
addb
pop
jg
mov
add
movsb
or
adc
jg
dec
fs
fistps
adc
aaa
rcrb
push
arpl
leave
mov
inc
into
fwait
sub
movsb
add
mov
std
das
test
out
jae
inc
shll
pop
std
loop
add
push
scas
pusha
fistl
add
inc
xchg
sti
pop
jo
and
xor
icebp
fs
or
or
sbb
or
mov
inc
bound
insl
mov
daa
scas
mov
jns
lock
adc
fwait
xor
dec
dec
pop
cmp
fwait
jl
fnstenv
stos
xchg
scas
xor
mov
out
sub
lret
and
fildl
pop
cmc
mov
sbb
add
and
pop
outsl
repz
cltd
test
pop
mov
add
cwtl
sub
mov
pop
arpl
sbb
lds
pop
fwait
cmp
sbb
mov
pop
or
pop
sub
es
xor
cmp
inc
test
dec
les
mov
bound
cmpl
arpl
movsl
std
mov
and
add
out
fs
inc
ja
sbb
cwtl
push
cmp
movsl
cmp
sti
pop
lods
jb
pop
mov
cmpsl
and
inc
mov
adc
jl
mov
cmp
xchg
ret
js
cmp
sub
push
xchg
dec
jmp
insb
call
dec
loope
into
pop
mov
imul
sbb
push
into
fs
movsl
cli
and
pop
filds
add
pop
cld
call
mov
fwait
mov
pusha
test
inc
mov
fistpll
bound
push
mov
imul
jle
std
and
cmp
cmpsl
mov
push
pop
jl
data16
decb
dec
cmp
mov
mov
sbbb
or
mov
pusha
xor
sar
or
js
stc
or
int
aad
xchg
movb
jo
lret
xchg
es
push
icebp
pop
add
jmp
sahf
dec
pop
call
jno
pop
sbb
insb
mov
nop
sbbb
lods
insb
je
jne
gs
std
cmpsl
add
and
lods
mov
decb
mov
cmc
into
jle
mov
push
mov
push
xor
push
sbb
mov
pop
ss
jae
sub
inc
outsb
sar
out
cli
xchg
jnp
pop
mov
out
call
pop
cmp
nop
mov
cld
int3
adc
movsl
test
cmpsb
or
jbe
sbb
lea
insb
dec
jae
ret
xchg
sub
imul
rorl
fs
js
push
mov
push
jae
inc
jo
jns
cmpsl
sbb
das
sbb
jb
xor
repz
sub
out
sbb
pop
push
mov
mov
test
jmp
sbb
mov
sahf
mov
loope
xor
daa
subl
push
int3
arpl
sbb
cmp
inc
scas
mov
and
push
mov
dec
jns,pt
push
jo
cmp
push
test
or
push
loopne
mov
rol
lods
mov
jp
sbb
test
jmp
lods
push
mov
xchg
cld
jmp
lret
pushf
mov
fs
roll
movsb
lcall
fwait
ljmp
and
inc
neg
movsl
sbb
jmp
push
ljmp
in
add
add
xchg
ljmp
mov
pusha
mov
dec
test
popa
aad
ret
lahf
out
adc
lret
push
jo
scas
mov
dec
jo
or
aas
push
imulb
cmp
xchg
inc
sbb
or
and
mov
adc
push
arpl
fadd
dec
and
push
int
xor
adc
xchg
fst
push
mov
stc
jg
mov
fsubrp
loope
push
dec
mov
or
mov
xchg
dec
or
stc
mov
push
jmp
jae
mov
mov
push
stos
dec
sbb
fs
stc
in
mov
inc
push
dec
cmp
loope
add
dec
jno
ljmp
jae
daa
jnp
xchg
push
or
popl
push
xchg
aam
push
lea
cld
push
loopne
jg
mov
push
in
mov
inc
jmp
mov
lret
jae
mov
jl
loop
jo
out
xor
push
testb
mov
inc
fistl
insb
daa
lret
add
ds
jmp
cli
lret
stos
jle
mov
test
sub
sub
inc
and
jbe
fucomip
fucomi
adc
arpl
xchg
or
jg
ss
jae
cmpsb
lret
sbb
cmp
sahf
jo
daa
mov
sbb
adc
neg
scas
sub
enter
ds
in
xchg
inc
out
jnp
pop
sar
loop
pushf
mov
cmpl
mov
int3
sub
jo
push
movsb
test
dec
push
arpl
mov
inc
cmpsb
cmp
fcmovu
jnp
cmp
xor
jae
and
jnp
xor
icebp
jno
sbb
insl
lret
call
js
sbb
add
sahf
dec
mov
pop
jbe
movsb
jg
dec
dec
icebp
in
mov
rorb
stos
pusha
pop
fdivl
out
jmp
jmp
sbb
push
sbb
cltd
int3
mov
push
addr16
mov
cmpsb
mov
repnz
push
xchg
scas
push
shl
dec
pop
sub
pop
fwait
sub
stc
jl
shrb
and
or
in
arpl
out
scas
pop
cmp
mov
idivl
jae
nop
push
jae
stos
sbb
and
aaa
and
and
rcrb
push
lods
mov
int3
aad
mov
ljmp
mov
dec
stos
pusha
xchg
mov
push
xchg
outsb
xchg
inc
lds
fs
outsl
push
pop
push
jmp
adc
frstor
adc
adc
ss
push
or
mov
insb
push
jb
xor
std
mov
in
arpl
mov
push
aad
mov
mov
scas
mov
sub
std
push
cmpb
mov
xor
in
mov
je
jg
fdiv
cltd
je
push
in
lahf
jge
int3
adc
addr16
cs
sbb
arpl
js
out
loop
mov
popl
push
ja
addb
adc
fnstcw
jae
fisubl
push
add
cltd
adc
outsb
inc
dec
test
fstp
dec
movsb
lret
sub
outsb
pop
ret
lock
sti
dec
add
aam
rclb
push
rcll
movsl
iret
aad
loope
push
ja
loope
pop
sbb
in
sbb
sbb
add
shr
cmp
arpl
mov
hlt
jne
int3
mov
push
cmpb
lret
xchg
roll
scas
mov
out
ljmp
std
sbbl
dec
jp
fisubs
out
or
xchg
ja
dec
jae
sbb
int
mov
inc
test
pop
frstor
fisttps
loope
lock
rolb
iret
xchg
test
dec
lea
stos
loopne
pop
int3
xor
mov
stos
or
outsb
pop
test
insl
or
xchg
lds
inc
arpl
xlat
push
inc
jno
pop
clc
stos
adc
repnz
mov
popa
jae
jae
pushf
jbe
std
sbb
fadd
pop
sub
push
inc
in
pop
jae
xchg
cmpsl
mov
fldcw
and
push
test
add
jae
mov
push
or
push
mov
push
shr
xor
insl
add
add
cmp
xchg
lock
cmp
jb
push
jae
jge
push
leave
fwait
jl
dec
add
pop
jo
inc
mov
lock
call
cltd
or
xor
jno
insb
xchg
outsb
cmc
js
inc
jns
mov
dec
mov
xchg
or
dec
sub
sbbl
fiaddl
stc
subl
rorl
push
daa
pop
int
orb
xor
ds
mov
lahf
lock
push
push
jl
cmpsl
cmp
pop
jae
testl
push
jbe
mov
push
cmpb
jmp
and
sub
out
outsl
mov
sbb
cmpsb
cmp
adc
gs
cld
cmp
fiadds
nop
imul
outsb
jge
pmuludq
or
inc
stos
mov
jo
push
jo
loopne
dec
pop
jnp
addr16
ret
fs
sbb
push
mov
xchg
push
sub
mov
xorb
sub
imul
data16
pusha
jns
adc
xchg
pop
sbb
jl
add
cmp
mov
or
adc
call
xchg
dec
jo
cmp
fstpl
inc
or
rdmsr
cmp
xlat
mov
pop
repz
mov
pop
xchg
inc
fistps
test
xchg
jo
pushl
cwtl
xchg
push
insb
in
std
xlat
push
fsubrl
jnp
ss
imul
js
dec
or
je
or
jo
mov
loopne
inc
popa
or
jo
jns
cmp
rdmsr
das
aaa
xchg
inc
data16
push
fdivs
addr16
jo
inc
movsb
add
cmp
enter
bound
xchg
xor
cmp
movsb
movsl
ljmp
push
es
jp
fdivrl
orl
imul
and
cmp
or
mov
add
push
pop
iret
cs
fnstcw
jbe
mov
rorl
cmp
cmp
out
or
push
jo
mov
push
addr16
jecxz
jo
popa
and
cmp
and
hlt
stc
jg
cmpb
lret
jecxz
xchg
xchg
adc
dec
push
out
pop
pushf
mov
jo
sahf
jnp
mov
sub
or
aas
jo
insl
scas
mov
test
mov
push
lods
out
pop
jo
push
xor
repz
ret
xlat
aas
push
lret
je
int
hlt
shrb
mov
dec
rorl
add
aaa
mov
call
xchg
mov
loope
xor
inc
mov
dec
cmpb
mov
stos
mov
stc
and
add
out
mov
mov
jo
aas
cmp
dec
pop
pop
mov
jo
dec
xor
push
sahf
insl
mov
insb
aad
dec
std
and
add
sbb
out
sbb
iret
rclb
mov
jae
lods
sub
xor
inc
jo
jle
xchg
loopne
pop
jo
jl
outsl
scas
mov
shrw
fcoml
push
push
je
aad
icebp
scas
sbb
pop
pop
jne
mov
cmp
and
jo
cltd
lret
rcl
push
pop
inc
cmovae
push
neg
push
jb
jnp
nop
repz
je
push
xchg
jo
dec
stc
fs
fnstsw
test
cs
push
dec
or
in
xor
cwtl
cltd
or
lea
movsb
pop
cld
pop
test
jl
fcmovb
dec
sbb
jnp
sub
andl
push
insb
mov
stos
sbb
in
inc
nop
sbb
dec
ja
jle
mov
mov
pop
push
je
sub
adcb
mov
test
std
inc
out
cmpsl
pop
int3
jmp
leave
popa
sub
mov
sbb
cltd
and
inc
mov
lods
loope,pn
lretw
jo
bound
js
jl
mov
xchg
cmp
mov
sbb
inc
ret
mov
mov
scas
test
jne
jmp
popf
es
cmc
lds
sub
js
stos
out
mov
inc
add
jo
and
add
call
cs
test
testb
std
sbb
fimull
fs
fisttps
push
push
mov
icebp
inc
test
push
addr16
xor
push
mov
fcmovbe
hlt
call
loope
lds
stos
and
xlat
ja
add
jno
xchg
test
jo
fwait
inc
jb
xor
nop
xchg
xor
push
jnp
pop
subl
sub
sbb
ret
leave
sbb
mov
push
sbb
dec
fstpt
mov
dec
jmp
jo
ret
imul
jne
or
dec
les
std
iret
mov
shrb
jne
aaa
pusha
jae
in
pmaxsw
and
push
loope
addr16
mov
adc
cwtl
int
in
int3
cmp
cmpb
inc
in
or
jle
cmp
jmp
push
mov
lods
push
loope
fnsave
scas
mov
repz
add
jo
xchg
shll
addb
mov
loop
jo
inc
xor
sub
dec
imul
mov
outsl
test
xor
jo
push
dec
or
mov
cwtl
daa
roll
fs
dec
jo
mov
xor
jp
imul
cmp
dec
arpl
jo
orb
push
dec
jo
daa
cli
ficomps
jno
push
paddsw
jbe
roll
jo
enter
dec
mov
sahf
xchg
das
ret
cld
stos
jb
xor
pop
aas
pop
jne
dec
jb
mov
repnz
push
mov
ret
sahf
jge
lcall
jo
or
jo
or
ljmp
mov
test
dec
push
sbb
insl
dec
jge
or
mov
daa
push
fldpi
adc
lods
jo
sub
pop
add
mov
push
pop
out
les
push
and
jno
and
push
cmovae
jle
in
and
push
jbe
xor
insb
cli
ja
fwait
or
nop
aam
or
adc
jo
jle
iret
sti
push
pushl
inc
add
cs
mov
loop
nopl
insl
js
push
jg
jo
popa
jnp
call
movb
mov
bound
xchg
cmc
cmp
jo
popa
gs
mov
ljmp
insb
pusha
or
and
fisttpll
push
jl
std
cld
jge
jo
add
dec
jbe
inc
arpl
ss
sbb
sub
jb
stos
lcall
mov
adc
iret
aas
cmpsb
push
ds
test
mov
cmpsl
add
andb
in
xor
push
cld
xchg
xor
pop
push
sbb
jecxz
pop
inc
idivl
ret
jp
pushf
int
fistpll
push
jo
pop
leave
adc
dec
jp
imul
xchg
and
cmpb
xor
pop
and
cmp
cld
jmp
test
adc
xlat
orl
lahf
aad
mov
add
jbe
mov
andl
js
add
mov
int
inc
mov
jbe
shrb
fistpl
add
loopne
stc
mov
cmp
mov
push
xchg
mov
lret
imul
mov
popf
jmp
and
mov
jo
dec
sbb
push
mov
hlt
jbe
adc
push
lds
lock
jo
daa
add
std
cmp
scas
push
mov
xor
dec
jo
ret
hlt
mov
jne
jo
movsb
lcall
outsl
aas
into
xor
and
adc
and
flds
jb
int3
or
dec
sub
or
cmp
sbb
pop
or
add
mov
adc
jo
dec
int3
nop
inc
mov
lock
sub
jae
sbb
inc
and
or
loop
push
xchg
in
int3
movsb
xchg
loop
jae
leave
orb
jae
jns
test
lahf
xor
in
sub
out
data16
fldl
jae
push
sbb
sub
push
paddusw
or
push
push
jns
testb
xchg
test
mov
inc
sbb
mov
and
call
ljmp
pop
mov
aaa
lock
lods
dec
mov
sahf
stc
outsb
outsl
jle
lods
iret
inc
sub
push
push
movsb
lds
jne
cmp
aaa
fcomi
xor
lock
push
or
cmp
enter
xchg
jg
stos
test
cltd
dec
lret
and
das
push
cli
inc
jecxz
iret
add
aam
popa
clc
jge
lock
ljmp
dec
fdivrl
ret
adc
pop
jl
add
arpl
mov
inc
loopew
dec
push
jo
mov
mov
cli
stos
or
lods
in
push
imul
aam
xor
jae
or
jbe
mov
ds
dec
push
mov
xorb
push
int
cmpsl
xor
pop
adc
cli
push
push
mov
cmp
mov
sub
xor
into
dec
mov
sbb
sub
or
jo
jecxz
dec
sbbb
cs
sub
jo
xchg
lods
sahf
inc
repz
in
adc
mov
inc
popf
or
js
and
pushl
insl
pusha
fs
or
jg
adc
insb
arpl
sub
fmul
cmp
or
das
and
or
mov
sarb
leave
jns
stos
dec
xorb
faddl
xor
shll
add
cli
test
pop
insl
leave
iret
add
fwait
dec
jg
push
out
in
orb
js
inc
pop
sti
cmc
jg
mov
and
sbb
jne
imul
mov
jb
sbb
and
cwtl
shrl
fdiv
out
rcl
mov
jl
inc
adc
sbb
adc
adc
aaa
iret
mov
mov
mov
pop
ljmp
adc
test
mov
push
into
pop
xor
rclb
pusha
ljmp
push
cld
ror
sub
repz
imul
cli
in
push
out
sbb
mov
jns
lahf
sbb
pop
push
pop
sbb
lds
orl
in
jo
sbb
movq
sbb
xor
mov
jp
xor
into
lods
cmp
mov
sub
push
es
jl
xchg
and
clc
cmpsb
sbb
dec
fnsave
pop
pop
jmp
lods
mov
or
fidivl
fstps
dec
test
add
xchg
lds
mov
inc
ffreep
insb
fnsave
fistl
in
lret
dec
ret
mov
jo
lock
lahf
popf
pop
pop
bound
movsl
jae
sbb
popf
mov
jge
mov
mov
out
add
push
in
push
cmpsb
push
xchg
mov
out
xchg
insb
cs
jae
mov
int3
mov
je
loopne
scas
in
test
in
xchg
dec
adc
adc
mov
lret
pop
out
cmp
jg
cmp
push
pop
pop
mov
dec
pusha
mov
jns
ss
adc
adcl
arpl
jbe
pop
cmp
out
jns
andl
sbb
int
mov
add
sub
jns
sbb
mov
nop
push
xchg
lock
pop
lods
pushf
mov
arpl
adc
mov
add
fbld
xchg
addr16
jne
das
outsb
movsl
cltd
xchg
das
pop
in
inc
aaa
nop
or
add
mov
ret
js
fcmovnu
icebp
loop
fcmove
arpl
jns
fs
popf
fcomps
pop
in
loopne
xchg
rorl
in
push
bound
mov
out
icebp
lcall
rcrb
shlb
jo
out
rcrl
loopne
mov
adc
dec
sub
xor
cmp
nop
mov
in
push
mov
sbb
pop
int3
and
mov
or
ljmp
jl
arpl
sbb
or
lods
jb
and
scas
jae
imul
sub
inc
adc
sbb
daa
dec
dec
sahf
push
int3
jnp
jge
arpl
mov
ss
nop
jecxz
fs
push
dec
xor
shl
jmp
xlat
ss
sub
push
sbb
insb
jge
aaa
je
pop
out
dec
jae
inc
cld
jle
ss
xor
xlat
nop
and
mov
push
adc
xchg
movsb
lea
and
jg
movsl
adcb
lret
fisubrs
mov
scas
mov
push
add
sti
cwtl
loope
enter
dec
pop
ret
out
push
cmpsl
popf
sarl
test
add
sbb
pop
in
jle
add
inc
icebp
pushf
mov
popa
xor
lods
jae
imul
mov
jmp
mov
lcall
xor
dec
fsubrs
push
jle
enter
pop
or
popf
cmc
or
push
fimuls
mov
or
pop
xchg
scas
fs
cmp
mov
andb
dec
push
mov
in
fisttpll
pop
add
mov
jmp
or
lock
add
dec
cmpb
arpl
push
orl
nop
push
mov
jns
add
dec
or
shlb
bound
pop
adc
or
pop
jle
push
xchg
imul
mov
sub
dec
adc
jae
jp
push
dec
cmpsb
push
test
out
loopne
push
push
sub
int3
dec
insb
aad
mul
sahf
push
push
pushf
sbb
fcoms
and
loop
sbb
or
push
fisttpll
arpl
sub
lret
lods
cli
fld
outsl
nop
pop
addr16
mov
push
cmc
fwait
mull
sbb
fwait
int3
mov
not
test
test
jle
scas
push
or
xor
inc
js
cltd
icebp
loop
push
aad
mov
arpl
mov
dec
sahf
fs
lret
dec
loopne
daa
add
pop
jae
add
mov
stc
cmp
add
fimuls
out
pop
push
loopne
add
add
jae
inc
xor
ret
inc
out
jmp
ds
int3
mov
or
jnp
fimull
roll
aad
loop
call
movsb
xor
cs
dec
shl
push
mov
jge
dec
push
push
push
or
cmp
xor
add
sbb
pop
je
and
icebp
out
movsb
or
xchg
inc
enter
adc
aad
sbb
jmp
nop
lahf
cmp
fisttpl
dec
push
imul
mov
mov
xchg
lock
xchg
inc
pop
push
repnz
lret
es
fsts
push
inc
cmp
jns
jge
in
xorb
mov
xchg
orb
shlb
jbe
and
mov
sbb
jnp
adcb
pop
dec
outsb
xor
ret
outsl
jmp
bound
xor
icebp
xor
jne
aam
nop
in
jo
movb
adc
and
mulb
ljmp
cli
mov
in
jo
pop
and
push
dec
bound
cmp
cltd
or
enter
out
add
andb
jg
push
jno
mov
jne
jge
or
push
xchg
lds
imul
push
lods
shrl
rcr
mov
das
int
cmp
aaa
pushf
xchg
mov
lds
cmp
std
fldenv
jg
scas
mov
sbb
mov
jmp
inc
push
inc
inc
mov
mov
fcoml
pusha
or
xor
mov
xchg
lret
push
xchg
stos
xchg
push
add
stos
cmc
das
dec
dec
shll
push
divb
xchg
call
or
shll
pop
packsswb
imul
idiv
es
dec
xor
cmp
cmp
mov
ja
repnz
mov
mov
jmp
into
and
mov
cmp
pop
inc
xchg
out
jmp
mov
insl
insb
lahf
movsb
mov
rolb
lret
inc
pop
stc
jecxz
data16
dec
push
inc
test
cmp
lods
je
adc
aas
rolb
pop
imul
out
lret
add
sub
add
rcll
fbstp
cs
sub
test
jg
dec
add
addr16
movsb
mov
mov
insb
subl
movsl
cmpsb
jge
movsl
push
ja
call
xor
lock
jg
icebp
cmpb
lahf
cmpb
and
shr
adc
into
test
push
jge
pop
aaa
fwait
out
jmp
and
pop
scas
xor
adc
stos
jge
popf
ds
sar
outsb
mov
sub
insb
mov
nop
popf
int
arpl
pop
mov
jno
shrl
repz
sbb
fistps
je,pn
add
or
rcrb
addr16
dec
out
pop
sub
repz
in
and
mov
dec
lock
es
sub
add
lock
push
out
xchg
mov
das
subb
lods
push
inc
loope
div
rcrb
mov
fwait
mov
mov
movsb
outsb
push
pop
mov
inc
icebp
mov
mov
dec
lods
add
jne
cmp
ljmp
mov
leave
pop
jo
imul
popf
sub
jo
pop
lret
or
sub
jb
sbb
repz
jo
sbb
outsl
movsl
nop
cltd
rcll
mov
scas
aas
mov
or
xor
mov
mov
inc
addl
aad
orb
sub
xor
mov
out
add
ja
insb
mov
dec
jo
pop
movsb
mov
or
push
add
adc
in
int3
bound
push
xchg
dec
outsl
scas
addr16
fld
pop
aad
push
shrl
out
ds
inc
lods
mov
in
sbbb
jo
sub
popf
push
cmp
lds
dec
add
fsubrl
push
test
out
jo
inc
dec
sbb
add
int
cmpsb
push
inc
daa
cs
and
jb
adc
xchg
repz
lret
jo
and
sub
dec
fwait
div
jno
out
jo
mov
ficomps
imul
movhps
jmp
cmpl
adc
out
inc
test
cmp
adc
jp
leave
shl
jo
repz
iret
push
and
fdivp
fwait
into
push
dec
jns
dec
ja
cmp
aaa
xor
jp
sub
jmp
clts
push
popf
hlt
mov
subb
mov
aad
sub
test
jns
roll
mov
je
jo
push
popf
sbb
sti
jp
je
std
jo
clc
loop
and
mov
lods
dec
cs
mov
adc
push
outsb
enter
adc
pop
fnstenv
and
push
jo
lret
in
and
inc
adc
xchg
movsl
cmc
loop
jmp
sbb
jo
clc
jne
pop
jle
loopne
mov
mov
sub
push
jns
mov
scas
adc
jl
add
fs
sbb
dec
push
in
test
sub
mov
xchg
inc
aas
repnz
les
push
mov
icebp
jo
shll
hlt
movsb
sbb
or
cmpsb
pushf
mov
sbb
xchg
push
mov
jb
pop
jo
lahf
cmp
mov
cmpsb
jnp
cli
call
adc
pop
and
push
sub
jge
aam
xor
rcrb
dec
xlat
push
push
cltd
js
jns
dec
jo
lods
clc
imul
push
stc
lock
scas
mov
insl
pusha
es
punpckhbw
repz
sub
push
ja
outsl
fcmovne
aad
pop
pop
xor
add
int
and
push
aam
jo
xchg
sbb
inc
cmp
xchg
insb
enter
pop
mov
arpl
lods
cmp
cmp
loope
push
sbb
jbe
mov
push
mov
jo
push
stos
pop
test
call
inc
popa
cld
loop
adc
movsl
push
fwait
mov
jo
jno
and
jo
adc
out
into
push
cmovns
cmp
jo
mov
fwait
jo
mov
ds
jo
xchg
popf
stos
jne
clc
inc
or
cmp
je
hlt
vunpcklps
and
adc
jo
into
push
addr16
mov
cmp
fprem
xchg
cmovs
ljmp
jo
add
xchg
adc
ja
enter
mov
int3
popf
xchg
inc
jmp
jle
jae
jns
xor
andl
std
jl
push
test
inc
mov
inc
jo
sbb
je
xchg
lea
pop
or
int
mov
fwait
sub
pop
push
leave
mov
cmpsb
pop
push
jnp
sub
xor
loope
dec
jo
push
ljmp
addb
divb
or
mov
push
cld
xor
fidivs
xor
or
sub
pop
pop
outsl
ds
xchg
mov
ljmp
jno
loopne
and
inc
add
cwtl
call
daa
fcmovbe
sbb
cmp
in
xchg
mov
adc
dec
dec
sbb
aad
or
xor
pushf
mov
inc
jge
lret
loop
popf
mov
sahf
outsb
nop
ror
loope
pop
dec
addb
or
and
or
cmp
lods
imul
enter
or
popf
sub
outsb
js
out
sub
dec
addps
je
pop
add
sub
jae,pt
pop
or
pop
and
fldl
je
scas
xor
adc
hlt
std
add
mov
jnp
mov
fwait
push
jo
or
jo
mov
dec
iret
push
adc
shrb
push
cld
das
cmc
rorl
lret
mov
fisubrs
loopne
pop
fbstp
inc
mov
aad
in
sub
and
andl
xor
and
pusha
sub
or
cli
xor
mov
subl
jo
dec
decb
jo
mov
mov
jo
repnz
js
xchg
addr16
jo
sub
cmpsb
out
cwtl
and
scas
adc
mov
mov
sub
jp
jbe
in
loopne
popl
cmp
lcall
cltd
fs
arpl
mov
pop
pop
push
les
jo
xor
fldl
xor
and
inc
cmpsb
ja
and
sbb
push
adc
hlt
cmpsl
jo
sbb
xor
sbb
cmpsb
jo
push
pushf
lahf
cmp
mov
sbb
xor
adc
lock
dec
dec
sub
lret
rcll
adc
mov
clc
cmp
jne,pn
sbb
jl
adc
neg
int
add
sar
mov
cmpsl
out
push
sbb
jo
xchg
jecxz
cmp
into
mov
sti
xlat
jo
lret
ret
cmp
out
sub
jo
jns
xor
jnp
sbb
mov
ret
loope
inc
mov
jo
push
mov
jo
xchg
imul
jne
outsl
mov
shll
mov
push
dec
jo
lds
pop
sub
psubsw
rolb
aam
or
push
sarb
jae
dec
hlt
mulps
test
outsb
mov
enter
xorl
shlb
pop
jo
xchg
mov
pop
cwtl
mov
mov
sub
pop
jge
mov
lods
lret
shl
jo
stos
aaa
mov
mov
fidivs
push
sbb
int3
or
mov
movsl
lock
xchg
jo
cli
xchg
repz
je
psraw
inc
insb
pop
daa
push
jge
add
fmulp
mov
dec
mov
nop
xlat
lcall
xchg
or
ss
lds
push
decl
ja
xor
rclb
sbb
in
data16
mov
fisttpll
pushf
clc
movsb
pop
mov
xor
jo
pop
test
jo
cld
cmp
std
mov
mov
js
xor
push
jo
add
adc
jo
mov
xlat
sub
mov
mov
int3
jmp
insb
jo
lds
pop
mov
pop
cmpb
xadd
sub
js
mov
adc
or
or
adc
test
fsubrs
addl
sbb
push
jo
mov
jbe
jo
cmp
push
push
jo
mov
mov
cltd
mov
xchg
xchg
sub
inc
pop
jo
xchg
mov
add
dec
js
mov
sub
inc
jp
insl
aaa
mov
mov
jo
dec
je
iret
cld
enter
repnz
rorb
fs
push
pop
push
int3
pop
mov
gs
push
lods
jo
pushf
adc
pop
xor
jo
xchg
cwtl
xchg
cmovle
jmp
fisubrl
cmp
adc
je
cmp
adc
movsb
repnz
int
loop
test
xchg
into
loopne
and
mov
arpl
repnz
gs
stos
pop
xlat
sub
jo
fmul
out
cmc
jl
cltd
int
testb
fisttps
jmp
pop
jno
mov
sub
cs
js
dec
insb
adc
jo
pop
outsl
loopne
sub
fs
stc
lahf
mov
mov
js
imul
sub
insb
pop
repnz
loopne
mov
arpl
dec
add
push
inc
push
ljmp
mov
mov
gs
sub
xchg
sbb
cmp
jmp
and
add
xchg
stos
mov
jo
push
xor
mov
and
or
orb
sbb
bound
cmpsl
out
inc
push
inc
add
enter
mov
add
mov
mov
cmpsl
adc
cmp
and
or
packsswb
shl
cmp
sbbb
mov
dec
pushl
lock
ss
mov
sbb
xchg
lock
sub
std
lret
daa
xchg
inc
push
mov
and
cld
adc
pop
mull
out
imul
adc
mov
push
sahf
mov
cmpsl
cmp
stc
jns
adc
xor
xchg
lret
in
arpl
in
add
test
xorl
mov
cmpsl
mov
dec
loop
xor
push
int3
mov
lods
out
sbb
mov
lahf
cmp
stos
or
in
mov
sub
cmp
sbb
pop
inc
rcr
cmpsb
insb
mov
pop
outsb
in
push
fidivrs
incb
jae
aad
and
popa
stos
mov
mov
fs
mov
or
inc
adc
cltd
cmp
lahf
inc
mov
and
cmp
sbb
inc
push
test
ret
and
and
mov
lds
mov
cmp
mov
dec
in
sub
or
in
jge
push
dec
push
ss
ret
cli
int
call
push
mov
push
lock
rcr
sarb
sub
jl
ja
shlb
xchg
dec
xor
xlat
dec
push
mov
test
cmpsb
movsl
in
cmp
lret
fcoms
jae
push
xchg
add
fcmovb
push
lods
or
xchg
lea
xor
push
je
mov
pop
mov
cmpsl
sub
jle
dec
cmpsb
popf
mov
enter
andb
ret
mov
sub
loopne
pop
fnstenv
int3
mov
repz
test
out
and
mov
sub
ss
add
incl
sub
mov
repz
jle
mov
jo
pop
rorl
rolb
insb
dec
out
js
outsl
leave
std
jo
insl
cwtl
cmp
int3
hlt
nop
mov
jns
shr
test
mov
mov
loop
mov
test
mov
jo
and
xchg
mov
adc
enter
fstpl
gs
mov
and
jge
mov
push
mov
call
neg
mov
out
addr16
adc
pusha
add
ja
fwait
jo
int
cmp
mov
js
imul
push
inc
notl
inc
fs
jp
xchg
stos
and
mov
stc
enter
cmp
xchg
xchg
pop
mov
sub
fbstp
add
add
negl
movsb
stc
push
lahf
sar
jl
fdiv
enter
jo
dec
fldt
push
mov
mov
jo
cmpsl
dec
inc
mov
insl
shrb
cltd
mov
cmp
leave
mov
or
sub
sub
pop
dec
cmp
dec
xchg
enter
inc
lds
mov
insl
iret
imul
adc
adc
divl
mov
or
push
mov
cld
imul
or
cltd
xor
jo
add
jns
loop,pn
jl
jp
jp
adc
xlat
fnstenv
pop
int3
push
jne
insb
sub
mov
lods
int3
xchg
sarl
dec
lods
ds
insb
push
mov
and
flds
push
dec
or
out
mov
cmpsl
in
pop
outsl
xchg
call
xchg
push
jl
mov
mov
adc
inc
xor
fs
mov
jnp
subb
pop
push
cwtl
push
ds
mov
fwait
clc
insl
jns
loopne
adcb
xor
shl
lret
pop
push
inc
and
lods
lock
fistps
xor
push
lcall
stc
sub
bnd
adc
push
xchg
scas
push
loope
add
adc
ss
imul
jb
es
jb
push
cmpsb
sbb
xchg
fdiv
in
adc
push
lock
ds
mov
lock
data16
inc
jns
scas
dec
aad
mov
push
mov
pop
jo
arpl
inc
sub
ds
test
mov
test
rol
push
std
rcll
leave
xor
ljmp
jp
movsl
xor
idivl
jbe
push
or
mov
inc
cmpsl
insb
loopne
idivl
aad
insl
jb
imul
mov
arpl
inc
mov
jmp
fnstsw
pop
sub
shll
scas
inc
push
rcrl
push
add
mov
loop
mov
sti
js
or
add
push
pushf
ds
jp
imul
sbb
cmpsb
add
pop
inc
in
mov
push
faddp
nop
mov
lahf
jnp
xor
dec
fisttpl
or
in
jmp
add
or
movsb
loop
ret
fcmovne
out
andb
push
inc
or
or
jns
sbb
and
inc
outsb
mull
xchg
push
sbb
nop
mov
movsl
jge
ljmp
notb
mov
ss
repnz
addr16
xchg
mov
inc
or
xlat
dec
cmp
repnz
imul
pop
daa
xor
xchg
push
in
cld
jge
fadd
mov
arpl
adc
fstpl
jbe
push
sbb
out
lock
jae
sti
notb
dec
mov
testl
cmp
and
cmp
mov
push
pop
ret
jo
sub
scas
std
push
sbb
jae
pop
xchg
sbb
pop
or
and
outsb
lret
mov
adc
ret
punpckhbw
jns
stos
sub
push
mov
lea
test
mov
mov
push
pop
jno
jo
xor
out
and
xor
rclb
jmp
sbb
push
push
ljmp
cmpb
push
pop
jae
testl
pop
cltd
mov
ss
cli
in
test
or
sbb
jae
and
add
inc
pushf
inc
ljmp
mov
nop
shlb
adc
dec
mov
inc
movsl
icebp
jae
outsb
mov
inc
aad
jns
faddl
inc
lret
es
insl
mulb
subl
jo
xchg
sub
int3
mov
sahf
sbb
cmp
lea
mov
push
cmc
xchg
cmp
mov
cld
loopne
pop
xor
sbb
fistpll
scas
jno
jo
repnz
fidivs
and
imul
or
mov
lock
repnz
push
mov
stos
pop
and
sti
push
cmp
es
add
push
adc
pusha
rcrb
stos
sbb
jb
sbb
jo
add
enter
pop
fbstp
lcall
mov
jge
inc
lahf
mov
in
mov
rcl
adc
mov
xchg
pop
dec
cmp
jo
fcomp
into
or
mov
inc
pop
jb
pop
push
jo
lret
jne
stos
xchg
movsl
lods
jo
out
xor
jo
stos
mov
jne
xchg
jo
arpl
xor
cmp
push
dec
or
inc
push
je
leave
loope
jo
stc
sbb
enter
aas
pop
xchg
cmp
jo
push
xchg
pop
orb
in
lret
jo
sahf
pop
jge
push
fadd
xor
jo
into
cmc
cs
mov
xor
pop
lret
jg
mov
mul
roll
jo
add
adc
popa
mov
pop
jo
xlat
sub
jmp
jo
enter
xor
and
outsl
loope
das
aad
jo
xchg
clc
pop
dec
sbb
mov
mov
mov
jo
in
xor
pop
push
jo
push
add
jl
hlt
jo
lret
sar
add
mov
lret
shrl
bound
push
mov
jo
loopne
dec
mov
push
pop
jecxz
mov
movsl
jo
jg
repz
fdivrl
out
stos
push
adc
rcrl
add
dec
push
xor
jns
dec
push
ljmp
inc
jae
out
jo
shrl
mov
popf
jecxz
ficoms
add
outsl
sub
test
movsb
lds
jo
pop
cmc
pop
inc
es
adc
les
jo
dec
cs
nop
inc
ljmp
pop
iret
xor
jb
stos
int
xorb
and
outsl
popf
and
push
mov
jb
sarb
cs
dec
js
adc
jo
andl
jo
scas
test
fnstsw
cmp
jo
pop
and
push
push
mov
cwtd
fimuls
jae
sub
dec
inc
pusha
stos
adc
nop
inc
js
xor
pop
in
push
dec
cmpsl
scas
xchg
mov
negb
shrb
out
mov
cmp
mov
cmp
fs
shlb
xchg
insl
test
stc
cs
push
push
insl
ret
mov
dec
ret
mov
or
sbb
iret
jo
icebp
fwait
insl
incl
xor
sbb
mov
jb
cwtl
or
stos
je
stc
inc
fdivl
rep
adc
insb
dec
sahf
mov
and
out
fcomi
mov
cli
xchg
adc
fcmovnb
mov
add
jmp
mov
ror
mov
ja
orb
inc
cld
jle
mov
fs
inc
push
mov
movsb
xor
push
arpl
nop
clc
dec
add
xchg
dec
dec
sub
or
mov
ds
shlb
rorl
sub
cmp
gs
sbb
inc
and
inc
int
mov
push
adc
data16
jle
mov
cmp
std
lret
rclb
jae
sbb
arpl
mov
rclb
mov
jbe
jae
mov
fistpll
jg
dec
fwait
lock
fadds
mov
popf
cmp
iret
scas
insb
scas
cltd
mov
int3
std
rclb
enter
pop
sub
add
out
jecxz
lahf
in
push
add
push
push
imul
jmp
std
idiv
xchg
add
addr16
cmp
popf
fisubrl
shrl
or
jns
imul
jmp
push
sub
dec
mov
jae
inc
cmp
lods
mov
mov
push
cli
push
lahf
fists
mov
push
mov
rolb
mov
cmp
fcmovne
jmp
cmp
xchg
lcall
jbe
popa
fisttpll
arpl
idivb
lahf
sub
mov
push
add
test
das
mov
mov
jns
or
inc
sub
adc
fnstenv
outsb
adc
fldl
mov
sbb
mov
adc
es
and
or
cmp
incl
push
insl
inc
and
mov
test
ss
sbb
mov
out
cmp
outsb
out
push
jge
frstor
jo
dec
arpl
adc
adc
adc
mov
fdivp
lcall
dec
lods
cltd
addr16
mov
push
pop
test
fnsave
xor
jbe
or
jne
jecxz
std
inc
in
sbb
add
sub
daa
stos
insb
or
jl
jae
jmp
push
inc
or
jne
mov
sbb
test
sub
imul
icebp
bound
scas
das
fs
sbb
push
dec
push
xor
or
clc
fisubs
leave
je,pn
sti
lock
push
or
push
mov
arpl
lea
jae
xor
shl
fwait
xchg
es
loopne
push
shrb
jns
inc
push
xchg
mov
sub
sub
mov
arpl
push
push
lret
and
dec
jge
lock
call
cmp
push
or
mov
fwait
je
arpl
or
add
mov
adc
loope
push
inc
scas
scas
divl
or
sahf
inc
jl
insb
pop
imul
sub
leave
stos
dec
cmpb
pop
xor
adc
adc
sarl
lcall
lods
push
cmp
adc
sbb
push
cmp
mov
out
lea
mov
jge
jns
aas
pcmpeqw
add
xor
inc
fwait
scas
out
bound
call
cli
push
or
data16
lods
cmp
push
sbb
fcompl
mov
sti
jge
in
int3
mov
xchg
push
xchg
insl
aaa
adc
dec
ljmp
push
ret
sub
xchg
pop
jbe
scas
popa
sarl
push
pusha
jno
pusha
out
stos
stos
in
das
cmp
and
cmpsl
cmp
and
add
xchg
pop
loopne
mov
cmp
cmp
stc
lods
pop
jae
xchg
data16
cmp
adc
test
out
mov
jae
das
add
out
sub
es
cmp
jmp
jns
cmp
and
loopne
lcall
mov
mov
loope
insb
xor
sub
ljmp
jge
xchg
psubd
bnd
xchg
adc
pop
jno
rcrb
movsb
out
lcall
ja
sbbb
jl
es
add
imul
mov
js
and
mov
pusha
xor
jp
je
mov
ret
imul
shlb
mov
xorb
lret
scas
lods
fs
mov
mov
loopne
inc
sbb
sbb
push
cwtl
ss
pop
call
jns
dec
xlat
mov
lock
cs
repz
js
shlb
add
ja
pop
sbb
pop
pop
out
mov
sbb
pushf
nop
call
js
pop
jge
pop
bound
icebp
sbb
aas
addr16
xor
cld
imul
frstor
sub
pop
sbb
push
out
inc
or
sti
inc
fsubrl
pop
mov
rcll
or
push
pushf
mov
int3
mov
lds
jns
in
rcl
add
inc
in
push
test
into
scas
push
add
jg
add
cld
add
jle
loopne
inc
cmp
mov
inc
int3
out
add
daa
movsl
iret
sti
scas
jle
mov
loopne
int
cmp
std
jge
mov
pop
mov
lock
inc
xor
cmpsl
sub
xor
mov
sbb
push
gs
push
aad
mov
push
or
mov
mov
ja
imul
jo
iret
jno
and
bound
scas
sbb
sti
fistps
insb
add
mov
jae
add
cli
shll
fs
sarl
call
sub
arpl
jg
in
or
test
aad
mov
shlb
fs
shll
xchg
scas
pop
dec
push
mov
gs
fsubl
sarl
fwait
cmp
rcrb
mov
je
sti
jge
jnp
lahf
fildl
hlt
lret
push
adc
lock
call
adc
or
data16
lea
jnp
inc
std
int
adc
dec
xor
int3
sbb
jae
out
cltd
sbb
push
inc
adc
fbld
insl
scas
pop
and
jg
out
sbb
lods
loopne
divb
push
cld
bnd
shll
int3
sub
fs
cmpl
icebp
mov
sub
cmp
sar
scas
xchg
loope
jmp
xor
push
mov
mov
out
mov
arpl
movsl
cmpsb
mov
in
pop
rep
inc
push
lahf
jbe
insb
and
mov
cmpsl
fdiv
cli
cli
xchg
add
mov
and
mov
jmp
push
imul
icebp
jo
xchg
loopne
mov
jbe
xor
or
fidivrl
jl
pop
stc
adcb
insb
sbb
in
adc
cmpsl
fimuls
mov
xchg
cmpsl
je
mov
idiv
mov
imul
mov
out
jae
sbb
jns
pusha
imul
sti
adc
scas
and
lret
mov
pop
mov
dec
aas
lahf
mov
icebp
dec
ftst
xor
mov
ja
test
fisubrl
enter
dec
mov
out
dec
fs
push
sarb
add
xor
push
sbb
movsl
mov
mov
stos
sti
xchg
sbb
scas
xorb
inc
lcall
add
inc
dec
cld
icebp
lret
inc
add
lock
insl
jae
push
loopne
or
out
idivb
gs
dec
and
pop
mov
push
lds
out
cmp
adc
ljmp
or
jae
lds
mov
ret
inc
xor
sbb
clc
xchg
dec
out
xchg
pop
jle
adc
in
jbe
push
js
adc
xchg
lods
push
movsl
shl
push
mov
repz
jmp
sub
pop
sbb
dec
adc
mov
jo
mov
pusha
scas
aas
push
pop
push
sarb
jmp
pop
lret
sub
add
shl
mov
lock
popf
dec
pop
lea
mov
ljmp
cmpsb
mov
std
mov
rolb
shl
jno
test
cmp
int3
push
adc
sub
repnz
outsl
repnz
loopne
xchg
and
pop
mov
cmp
repnz
jb
aas
movsb
lcall
sub
and
push
addl
in
fwait
push
stos
sub
loop
es
mov
mov
jbe
scas
dec
mov
xlat
inc
push
in
shrb
cmpsl
mov
int
jmp
jl
jns
sub
lahf
in
nop
pop
push
testb
ljmp
in
xchg
inc
mov
popf
and
xchg
pop
push
and
or
ret
fs
addl
pop
pop
in
pop
lock
lock
int
sbbb
mov
ret
pop
cmp
cmpsl
or
jecxz
arpl
repz
jb
stos
fs
inc
xchg
imul
movsl
mov
les
nop
or
inc
hlt
mov
push
mov
mov
push
and
daa
sti
fsubrs
mov
mov
inc
jae
lds
xor
icebp
push
mov
mov
mov
rcll
dec
xchg
nop
aaa
mov
dec
and
movsl
xchg
mov
cmpsb
push
cmpsl
call
pop
mov
movsb
jbe
shll
xchg
das
jae
sarl
movsl
xchg
hlt
and
rcr
or
sub
inc
sbb
lret
iret
jmp
ret
out
and
stos
outsb
inc
xlat
lahf
sub
leave
inc
fistpll
daa
xchg
lock
push
ss
mov
pop
mov
mov
xor
out
push
loope
fdivrl
rcl
xor
sarl
cmp
nop
push
push
inc
lock
and
adc
mov
push
jae
cltd
and
ret
ss
xchg
aaa
jae
cmp
jecxz
js
arpl
sbb
adc
pusha
adc
mov
xchg
jp
inc
xorb
rcrl
aad
imul
push
inc
and
xchg
and
xor
dec
stos
nop
cmpsb
rorb
subb
lea
iret
mov
fwait
fwait
stc
rcll
xchg
inc
shll
mov
mov
and
mov
int
cmpsb
outsl
fwait
push
sti
cmp
pop
test
das
mov
and
fwait
pop
outsl
xor
add
inc
and
or
xor
mov
ja
repnz
inc
push
ret
or
icebp
adc
cmp
xchg
mov
lods
lret
rorb
shlb
pop
mov
fstpt
in
lods
or
or
mov
jecxz
cmp
sub
or
pop
push
incl
cmp
fmul
push
jae
sub
jbe
xchg
in
orl
repnz
inc
clc
in
pop
jo
adc
sbb
mov
movsb
sarb
or
sub
mov
in
jle
or
dec
out
jae
jae
xchg
fiaddl
sbb
icebp
or
lret
jmp
mov
ret
xor
cmpsb
cmpsl
mov
fimuls
mov
pop
in
push
xchg
or
sub
cmp
fs
jns
sti
fld
jae
bound
inc
inc
xchg
pop
mov
clc
leave
popa
sbb
push
pusha
loope
sub
inc
lcall
fs
stos
rcrl
pop
push
outsl
and
mov
popl
insl
ds
sbb
push
push
clc
sbb
out
adc
mov
dec
cmp
call
cs
test
aad
and
jno
loop
in
inc
xchg
adc
and
mov
push
mov
scas
mov
jno
js
xchg
pop
shl
jo
jl
xor
xchg
or
mov
rcrb
repz
stos
das
mov
stos
por
adc
mov
push
xchg
out
or
arpl
pop
jmp
sahf
sub
shll
outsb
out
xchg
jmp
inc
jnp
xor
repnz
pushf
push
sbb
js
int3
mov
or
add
dec
repz
and
enter
scas
int
fimull
rcr
loope
cwtl
pushf
js
sbb
jo
out
mov
mov
lahf
xor
sub
addb
jb
push
pop
xor
push
adc
lret
mov
fdiv
mov
jecxz
ret
and
out
sbb
mov
or
xor
je
fidivs
sbb
jnp
jl
insb
stos
fsubrp
push
inc
add
aam
scas
fcomi
pop
out
jo
movsb
push
pop
in
inc
test
out
punpckhwd
loopne
and
outsb
jnp
mov
push
addr16
cmc
sarl
loop
push
xchg
mov
dec
pop
inc
in
jns
adc
xchg
xchg
mov
jo
outsl
mov
sub
mov
lods
push
xlat
push
int
or
mov
test
inc
inc
and
int
lods
xlat
orb
nop
mov
out
jo
sbb
dec
lods
jo
out
cmpsl
jae
jo
daa
loop
xchg
and
add
sub
jne
and
movsb
or
imul
lods
in
pop
sub
mov
cltd
aaa
pop
js
fsubs
scas
dec
jmp
add
andl
xor
adc
rcll
pop
sub
jo
cwtl
je
sub
dec
dec
cmp
loop
fs
and
es
jp
out
push
jo
imul
ret
jb
rcrb
push
xor
aam
jo
cmp
loopne
stc
stos
dec
jno
jo
xchg
sub
cmp
addb
and
dec
jo
dec
adc
jo
adc
loopne
inc
or
jo
mov
jge
jo
and
sub
sub
cmc
push
push
arpl
jo
and
sbb
dec
dec
jo
dec
adc
jmp
ss
psubw
jae
adc
inc
add
xchg
pop
sbb
inc
sub
mov
and
xchg
mov
lock
mov
xchg
xor
mov
push
jo
cmc
cmp
lds
imul
andb
pop
fcoml
arpl
icebp
fbstp
pop
roll
sbb
gs
xlat
aad
fisttpl
jo
leave
cmpsl
data16
mov
push
sbb
insl
nop
aas
imul
fs
jo
push
movsl
push
fimull
add
sub
jbe
mov
icebp
scas
mov
push
fdivl
je
notl
pop
sti
pop
arpl
inc
subb
cmp
jo
cwtl
addr16
mov
jbe
jnp
push
mov
sbb
push
aam
ja
hlt
mov
push
push
or
mov
cmp
in
mov
adc
lods
popf
cld
mov
xchg
xchg
sub
mov
out
mov
cmp
fcomi
data16
inc
inc
dec
xor
mov
movlps
adc
orb
cltd
push
jns
jmp
or
sub
scas
ljmp
pop
rdmsr
jo
outsb
mov
jo
nop
mov
std
cmpl
sub
push
xchg
outsl
sbb
fidivrs
nop
ljmp
pop
mov
aas
jle
jo
mov
push
js
cmpsl
jo
cmp
or
nop
subl
mov
pop
fneni(8087
bound
test
je
xchg
jle
pop
or
icebp
jg
mov
mov
jmp
adc
movsl
dec
ret
jb
out
imul
and
out
ja
aad
add
pop
cltd
jae
adc
bound
loop
cmp
xor
or
xchg
xor
out
sub
push
leave
push
mov
xor
sti
sub
adcb
cmc
add
jo
enter
xchg
fbld
add
pop
sbb
xorb
jmp
dec
jmp
jo
xchg
mov
cmpl
inc
rorl
pop
jo
in
pop
and
roll
push
sub
mov
jo
add
inc
mov
dec
nop
add
aam
je
push
mov
fsubrs
jg
andl
inc
dec
jo
outsl
pop
aas
pop
cs
hlt
mov
jl
pusha
cmp
mov
fs
jo
or
enter
xor
in
fwait
xchg
sub
ficoml
fstpt
ret
popf
insb
aam
test
xorl
xor
cmp
daa
pop
sbbb
ret
adc
cltd
imul
fisubl
jae
repz
loopne
cld
je
mov
cs
mov
fwait
jl
jb
fs
bound
popf
and
push
insb
sub
imul
jo
add
shrb
mov
std
dec
ret
ja
cmp
add
insl
jo
cli
adc
adcl
or
gs
pop
popa
dec
jo
cmp
dec
pop
sti
mov
mov
mov
adc
push
popa
arpl
in
lds
jo
adc
jno
test
jmp
cmpb
std
icebp
jle
push
out
jo
loopne
dec
pop
mov
mov
in
ds
inc
jo
test
sub
inc
lcall
xchg
daa
dec
pop
jg
in
div
mov
scas
mov
jne
push
dec
test
jmp
gs
cmpb
cmp
fstpl
dec
ret
mov
xor
mov
push
jl
cmpsl
pop
shlb
jo
xchg
test
push
push
and
jmp
mov
push
pop
adc
addr16
out
jae
in
gs
push
js
into
fs
fidivs
jl
sti
jbe
inc
mov
adc
fs
in
iret
bound
out
jo
ja
push
mov
in
fiaddl
pop
lahf
mov
pop
test
gs
mov
mov
mov
mov
daa
jo
rorb
xorb
cs
imul
loop
jb
jo
scas
cltd
and
fldt
mov
popa
shr
sbb
jo
int3
stos
fwait
imul
inc
pop
cmpsb
and
mov
and
or
insb
mov
or
je
das
push
repnz
jo
jg
in
int3
sbb
sbb
movaps
cmp
movsb
mov
shll
jo
gs
test
mov
sub
push
jle
jne
test
jp
clc
push
sbb
rorb
mov
js
lds
or
test
push
pop
push
jo
adc
daa
ja
fdivl
adc
inc
jl
add
add
pop
inc
sbb
mov
and
sti
pushf
jo
test
bound
mov
jbe
popf
inc
xor
adc
icebp
mov
jo
xchg
dec
jb
fistl
xlat
and
sub
nop
adc
movsl
jnp
or
jo
sbb
lahf
fidivl
dec
jmp
jle,pn
mov
jo
xchg
arpl
fsubrp
nop
pop
movb
cmp
jbe
jae
nop
jg,pt
and
and
jo
leave
pop
xor
add
xor
mov
cmpsl
push
in
mov
mulb
cmc
sub
jo
and
fstl
outsl
loopne
jle
mov
lret
jo
fisubl
stos
add
std
cmp
adc
cmp
push
icebp
ret
lods
xor
xchg
xor
test
pcmpeqw
pop
add
sub
sub
xlat
inc
cmp
repz
into
sbb
jo
push
cwtl
fcmovnb
push
movb
mov
push
cwtl
int3
fsubr
sbb
add
jo
mov
mov
nop
lock
cmp
js
dec
push
cmp
repz
pusha
test
or
pop
sub
sbb
jo
xlat
dec
les
stos
mov
dec
jl
arpl
mov
inc
push
icebp
ret
es
nop
inc
fisttps
fidivs
jg
sbb
mov
fadd
add
and
xchg
cld
jo
mov
pop
mov
js
test
jl
xor
stc
mov
enter
sub
lret
int
jne
jo
cld
jo
sahf
add
push
mov
iret
jo
out
xor
pop
pop
loopne
xor
mov
hlt
mov
jo
pop
test
pop
or
mov
fucom
loop
loopne
pop
or
or
sbb
into
inc
cmp
jo
sbb
int3
insb
or
nop
popa
mov
les
out
sbb
sbbb
inc
out
dec
into
xchg
push
mulps
jo
or
pop
ret
xchg
shlb
and
repnz
jo
mov
rolb
and
xchg
jo
pop
in
sbb
mov
mov
in
mov
xchg
out
cmpsl
std
inc
jge
jo
int
movb
pop
div
loope
mov
test
movsb
lahf
push
shrl
sub
ret
paddq
in
xchg
pop
jp
push
lea
pop
pushf
adc
xorb
inc
or
addr16
loopne
cld
push
cmp
add
cmpsl
clc
ret
xlat
std
jo
dec
push
loopne
mov
movl
stos
jno
jge
negb
jo
sub
mov
ret
jp
push
pop
rolb
push
pushf
xor
add
movhps
push
jecxz
push
dec
jae
shlb
lea
movsb
cmp
sub
es
add
push
out
insb
jo
pusha
push
dec
adc
iret
cmpsl
add
movsb
out
shll
add
testl
pop
sbb
rcl
lea
lahf
cmpsl
jne
jo
in
or
lret
jo
pop
stos
test
nop
mov
add
adc
outsb
add
push
jp
sbb
dec
es
insl
cmp
std
mov
punpckhbw
xor
clc
hlt
jo
push
in
test
enter
mov
test
insl
ret
pop
lods
jo
scas
sub
xchg
test
xchg
jns
pop
scas
ds
mov
orl
inc
ja
xor
ret
insb
popa
mov
imul
jns
rorl
arpl
movsb
cmp
aas
mov
mov
icebp
jge
icebp
sub
cmpsb
xchg
popa
jo
fldcw
daa
jo
mov
out
clc
or
lahf
jge
mov
jle
test
ds
cmp
addr16
imul
mov
pusha
adc
cmpsb
loopne
addr16
push
push
mov
addb
rcrl
xor
cmp
add
xorl
jns
aad
pushl
sub
inc
cltd
xorb
das
std
bnd
je
push
scas
push
and
int3
aas
and
pop
ss
out
movsl
inc
mov
insl
jo
cmp
bnd
mov
enter
jo
sbb
das
push
push
mov
nop
mov
mov
fsubp
popl
jb
mov
dec
dec
pusha
or
cmp
mov
sbb
cmp
mov
sbb
inc
testl
mov
sub
jo
in
mov
jo
push
pop
pusha
add
mov
mov
in
cmp
jle
shlb
jo
mov
popl
cs
push
rep
mov
test
pop
push
sub
lea
orl
aaa
add
adc
mov
jb
jo
add
shlb
xlat
fadd
jmp
sub
push
int
in
adc
or
sub
jo
sbb
mov
jo
mov
cmp
fisubrl
jo
in
in
ja
add
add
gs
jo
dec
push
mov
push
jo
ret
pop
xchg
pop
mov
popf
adcl
in
cmc
jo
das
fists
cwtl
jb
jo
sbb
xor
jge
imul
jo
push
push
mov
iret
mov
dec
addl
mov
adc
std
daa
xchg
inc
insl
lret
xorb
fimull
jno
adc
adc
stos
jle
lock
outsl
dec
mov
jo
cli
adc
add
insb
jo
addl
icebp
xor
jo
or
sti
out
iret
push
repz
sbb
stos
push
jae
orl
inc
xchg
pop
xchg
loope
dec
repz
sub
push
or
sub
sbb
fidivrs
mov
aam
jo
push
xchg
dec
cmp
stos
aad
mov
jo
push
das
adc
lods
fidivs
das
jb
adc
cld
jo
or
dec
jmp
xor
js
sahf
orl
jmp
pop
dec
addb
out
imul
in
pusha
loop
push
jo
and
mov
addps
repz
aam
outsb
shlb
fcomps
mov
vpmuludq
inc
jo
inc
mov
aas
pushf
cmpsl
jo
sbb
jecxz
push
lods
sub
inc
dec
mov
imulb
rorb
fldl2t
sbb
mov
add
cltd
sbb
or
jae
cs
cli
aad
std
js
xor
je
push
jo
cmpsl
es
dec
dec
dec
mov
js
pop
shlb
cmp
jo
insl
jb
mov
mov
jo
hlt
ds
mov
imul
jge
in
xchg
js
sub
inc
push
push
and
into
repz
mov
cmp
lods
in
pop
jae
or
jns
push
push
fwait
push
in
sahf
int
jbe
xchg
fbstp
xor
aam
mov
in
imul
test
xchg
xchg
lea
fs
ja
je
int
xor
push
nop
pop
and
fstl
in
pop
inc
cmpsb
pop
jo
mov
pop
rorb
sub
jecxz
cmp
inc
jnp
xchg
push
jo
add
stos
loopne
divb
cwtl
jo
pop
imul
jno
les
jo
test
xor
cltd
mov
or
loop
xor
daa
cmp
fdivrs
sub
mov
mov
nop
pop
adc
mov
aaa
lea
push
sbb
xlat
rcrb
les
shl
or
jo
loop,pn
adc
lret
aad
or
jo
sbb
jo
mov
and
jnp
icebp
pcmpeqw
xchg
dec
out
add
call
cltd
xchg
sub
sbb
or
daa
out
nop
shrl
cld
imul
push
adc
dec
fistps
aad
push
adc
je
jo
aaa
add
jmp
xchg
mov
xchg
cmp
jl
stc
inc
jg
jo
les
repnz
adc
jo
ljmp
in
shlb
jbe
or
inc
and
in
jo
push
test
cmp
mov
push
sti
call
or
popf
jo
dec
pop
aad
movsl
stc
vpcmpgtb
nop
in
sbb
sub
jb
or
arpl
push
decl
or
pop
sar
int
or
inc
aas
js
dec
sahf
adc
sbb
mov
dec
jge
xchg
das
jo
jno
loopne
or
flds
add
mov
jl
cltd
popf
jb
sbb
mov
nop
add
frstor
in
stos
lods
outsb
add
or
call
adc
inc
mov
mov
xchg
mov
sbb
dec
das
inc
add
mov
aaa
popl
push
pop
inc
frstor
lahf
mov
mov
cmp
xchg
pop
iret
mov
push
jecxz
cmp
lock
or
xchg
fsubrl
push
dec
pop
out
sbb
push
or
mov
arpl
cmp
imul
mov
addr16
test
mov
pushf
adc
jns
jns
cmp
mov
push
and
mov
loop
test
ljmp
leave
push
movups
iret
xchg
adc
imul
mov
lret
sub
sub
jge
jae
insb
jecxz
mov
out
in
cmpsl
xchg
mull
xor
imul
das
xor
pop
mov
jae,pn
rcrl
shlb
push
shlb
xor
xchg
dec
aaa
cwtl
xorb
sbb
test
mov
mov
mov
clc
fcmovnu
lahf
repz
lret
les
mov
pop
adc
xor
lock
jae
pop
cmp
movsl
aas
jge
push
sub
cmp
or
or
imulb
mov
jb
scas
ret
lcall
scas
js
vmwrite
andl
mov
jmp
pop
in
adc
jp
int
fs
xchg
mov
mov
push
es
xor
lods
icebp
xchg
fsubl
jge
or
mov
cmpsw
mov
add
mov
bound
mov
fiaddl
mov
or
dec
aaa
rorl
xorl
mov
cld
jle
and
out
or
jne
mov
xor
sbb
xchg
mov
jae
dec
sub
lds
jae
lock
rcl
sub
cli
jo
out
cmp
bound
lock
in
cmp
add
pop
mov
ja
hlt
jo
mov
jg
jo
loop
pop
dec
or
mov
adc
jmp
mov
fimull
bound
push
fs
mov
push
pop
and
xchg
cmp
mov
shll
lahf
xor
mov
jl
sub
in
sub
sub
xor
jae
inc
cld
mov
jo
mov
lret
cmovge
cmp
mov
nop
xchg
jo
push
xor
pushf
jo
rcr
inc
fsubrl
insl
jo,pt
cmp
ss
xchg
mov
jne
or
dec
call
jb
cmpsl
test
cmp
imul
sbb
pop
js
mov
or
push
dec
insb
xchg
repnz
loopne
xchg
mov
punpckhwd
lret
xchg
sub
popa
cs
sti
adc
js
add
enter
add
add
sbb
sub
jo
inc
into
insl
or
sub
sbb
dec
icebp
xchg
mov
bnd
pop
int
push
sbb
inc
push
jno
stos
sub
pop
push
push
push
testl
inc
iret
rep
xor
sbb
push
movsl
pushf
jo
pop
xor
fisttps
jge
test
push
daa
js
arpl
nop
mov
cmpsb
movsb
sub
in
pop
pushl
xchg
lds
mov
mov
je
jo
in
and
sbb
push
xchg
mov
jo
gs
mov
jl
jo
jnp
adc
jo
lea
jo
mov
out
test
xor
ds
js
sti
jbe
jno
jo
adc
loope
jo
clc
scas
lods
jl
gs
jo
adc
push
lds
cld
or
cmpsb
jmp
add
sub
mov
xchg
and
jo
jmp
outsb
jne
neg
or
mov
push
mov
mov
leave
jo,pn
pop
scas
push
adc
mov
lods
mov
and
and
test
mov
lret
lock
mov
cltd
cmp
mov
pop
mov
jno
mov
pop
inc
jp
cmp
cmpsl
jmp
clc
int
aam
std
shll
adc
dec
or
fists
sub
lea
dec
repz
xlat
rorl
jg
int3
and
scas
jo
adc
push
jae
adc
jo
das
js
jp
add
jo
pop
lods
mov
cld
in
xchg
hlt
pop
xorb
shl
mov
cwtl
xchg
mov
adc
pop
ljmp
shrb
imull
xchg
test
push
hlt
pop
jl
jo
mov
ret
ljmp
bound
ljmp
lahf
das
mov
mov
add
gs
sbb
bound
cltd
loop
push
movsl
lcall
cld
fadds
shrl
cmp
sub
arpl
dec
cmpsb
jo
or
in
mov
ret
mov
jo
mov
std
cmpsl
sbb
jo
mov
lcall
push
xchg
stos
insb
jp
push
mov
inc
stc
int3
clc
jo
cmp
jp
bound
pshufw
dec
cltd
lds
or
mov
pop
je
xorb
cli
in
xchg
jne,pn
jbe
mov
inc
cmc
lock
lcall
cmpb
cmp
xlat
jl
rolb
cwtl
xor
leave
sbb
pop
jno
adc
jo
push
test
xchg
dec
leave
inc
push
in
push
mov
mov
adc
jno
push
xchg
adc
in
cld
scas
divl
jo
push
data16
xor
out
cmp
cs
mov
sbbb
lea
dec
jo
cmp
mov
jo
sub
pop
shll
fldenv
in
cmp
jo
mov
lcall
mov
add
xchg
jo
add
inc
sub
lods
add
jo
sbb
cmp
inc
fadds
jo
pop
hlt
cmp
pusha
xchg
cmpsl
loope
jo
xchg
jmp
ret
das
push
xor
jg
cs
push
fs
pop
dec
pop
sub
lds
andb
jo
mov
xchg
jo
xchg
cmp
jae
mov
mov
inc
add
or
push
ret
mov
add
enter
lock
loop
mov
cmpb
jo
cmp
mov
popf
mov
push
xor
jecxz
addr16
or
gs
pusha
pop
mov
imul
lds
loopne
mov
push
adc
mov
lods
xor
add
sbb
push
jg
call
and
jo
aas
jle
pop
std
cli
rclb
sub
sbb
movsb
xor
mov
sbb
sbbb
mov
and
push
push
ss
push
sahf
imul
mov
aad
cs
stc
sub
and
loop
push
jmp
addb
lock
cmp
rorl
inc
stos
test
add
insl
dec
sub
imul
sub
in
jae
js
mov
jno
rorl
pop
jge
fstpt
jmp
outsb
gs
adc
movsb
insl
jo
adc
sub
dec
imul
cmp
xor
dec
mov
push
adcb
jmp
adc
inc
jo
inc
fadds
jo
movsb
jmp
lock
imul
icebp
popf
js
imul
adc
lods
insl
ss
dec
les
jo
stos
into
mov
seta
rorb
add
push
pop
fs
imul
icebp
fimull
outsb
mov
pushf
dec
js
cld
jo
popf
push
jl
loope
sub
lahf
andb
fdivrp
sub
fildl
xor
push
rcrb
push
imul
cmp
jo
aaa
fmuls
adc
test
sub
nop
push
jns
fs
mov
mov
mov
dec
jnp
and
sti
push
imul
sahf
jo
push
loop
or
sbb
fnsave
out
int
inc
xor
push
gs
adc
ret
insl
xor
jo
stc
fistpll
jo
imul
mov
or
mov
sub
shll
or
out
cmp
mov
jecxz
push
and
out
into
pop
jo
or
clc
and
jo
pop
mov
dec
lods
and
or
jo
mov
add
rorb
fdiv
sbb
int
and
xchg
aaa
sbb
cmpsb
mov
add
shlb
leave
cli
movl
xor
mulb
bound
cmp
cs
imul
push
jbe
mov
xor
mov
mov
adc
and
dec
mov
jo
scas
mov
adc
xor
or
sub
imul
icebp
sub
or
out
lret
imul
jnp
mov
stos
pop
shlb
insb
jns
and
xor
test
mov
push
mov
loope
js
fdivrl
mov
xchg
pop
inc
xchg
jo
mov
mov
mov
xor
sbbl
jo
lret
pop
add
push
jo
jle
adc
sub
lcall
into
adc
js
dec
push
ds
adc
inc
inc
xchg
je
clc
jo
orl
push
out
fidivrl
cmp
int
lret
or
inc
pop
aaa
add
ljmp
je
sti
stc
cmp
mov
cmp
jo
cmp
mov
adc
or
xchg
add
jecxz
out
dec
loop
jp
jo
cmpl
push
jl
jl
pop
aas
sahf
nop
mov
sbb
lret
jo
adc
bound
adc
dec
jo
lock
dec
fimull
repz
jl
mov
mov
icebp
je
inc
adc
sub
pshufw
push
ds
adcb
xchg
fwait
cmovne
aas
jo
inc
imul
mov
push
xchg
cwtl
sub
dec
mov
arpl
test
lret
pop
or
outsl
pop
push
gs
mov
sub
push
shrb
push
sbb
fldl
js
mov
rep
adc
aad
jge
rorl
jo
mov
or
sti
andb
adc
xchg
jno
pop
nop
enter
push
dec
jbe
xchg
adc
shr
jno
inc
or
hlt
pushf
mov
in
cltd
mov
mov
push
sub
xchg
sub
push
std
jo
int
pshufw
inc
inc
imul
xlat
dec
insb
pop
jo
adc
cmpsl
test
daa
in
add
outsb
fisubrs
jo
adc
sub
mov
cmpsb
sbb
mov
jo
mov
sub
push
jmp
enter
out
jnp
mov
cmc
outsl
loopne
in
ror
inc
jae
cltd
cltd
shlb
jecxz
and
jae
lahf
imul
mov
lret
jle
imul
das
inc
jge
rorl
pushf
sub
insb
xor
mov
add
cmp
push
out
push
shll
shrl
lods
lahf
sbbb
sub
int
arpl
adc
jl
push
out
hlt
cmpsb
sub
and
mov
dec
mov
mov
incl
lock
jbe
jns
adc
sbb
push
ss
and
adc
fbstp
imul
or
and
xor
lret
jbe
push
and
in
cmp
or
or
or
add
fisubrs
outsl
add
mov
or
insb
lds
pop
push
inc
sbb
jmp
movsb
jl
pushf
into
outsb
jne
je
dec
jns
mov
inc
scas
insb
sti
ficoms
add
mov
int
addr16
lahf
inc
repnz
ret
stc
cmp
clc
lods
fs
jns
cmp
push
popf
cmpsb
cltd
jle
cmp
dec
iret
xor
and
div
iret
mov
arpl
ljmp
jp
insl
mov
jnp
outsb
out
fidivs
adc
cmp
movsb
xchg
fsubrl
rcrl
pop
loopne
jae
cmpsl
push
mov
out
cltd
pop
jecxz
ja
push
ja
push
pop
jp
cmp
call
jg
insb
ffree
jge
arpl
sub
lock
cmc
xor
ljmp
jne
add
aam
and
int
sbb
jbe
inc
xchg
sbb
push
js
xor
sbb
adc
add
sbb
jecxz
inc
in
dec
loopne
inc
or
dec
out
mov
test
aad
pop
aad
xor
mov
push
adc
xchg
or
lahf
fildl
xor
mov
inc
jg
hlt
fcomi
pushf
cmp
and
mov
ss
call
mov
xor
push
mov
sbb
out
adc
xchg
sub
inc
sti
push
imul
in
loop
popf
movsl
arpl
and
push
fsubr
cmpsb
xor
add
ficompl
mov
imul
jae
mov
sbb
imul
adcb
cmpsb
insl
inc
lds
push
push
out
lods
or
mov
in
pop
pop
dec
adc
add
mov
mov
stos
fisttpl
inc
xchg
outsb
bnd
ffree
pop
inc
mov
int3
repnz
test
or
nop
and
fsubp
mov
jnp
mov
shrl
or
or
push
mov
mov
xchg
decl
sbb
mov
pop
imul
sbb
jle
push
mov
mov
inc
cmp
xchg
and
sub
jno
imul
iret
push
leave
mov
mov
dec
jge
stos
les
repnz
jbe
adc
dec
leave
add
divl
sbb
repnz
out
jmp
adc
sub
ljmp
rcrb
pop
cmp
inc
lretw
dec
jne
lret
rorw
fadd
push
inc
fstl
js
mov
pop
sbb
ja
xchg
and
outsl
std
test
adc
sahf
pop
add
mov
and
jle
fld1
das
int3
out
add
ss
popf
repnz
repnz
cmp
pop
xor
xchg
notl
mov
in
cmpl
cltd
push
and
cmpb
fucomp
jecxz
mov
push
xchg
repnz
outsb
and
outsl
xor
mov
mov
cmp
outsl
pop
pushf
mov
push
mov
in
pop
cmpsl
inc
or
cs
dec
imul
ja
js
and
aad
outsb
iret
clc
xchg
std
mov
std
popa
lock
das
sbb
imul
or
push
sub
mov
arpl
das
sbb
jae
stos
mov
push
insb
ja
jo
and
add
jmp
push
pushf
sub
mov
lcall
das
dec
es
jo
pusha
outsl
aad
gs
jo
bnd
push
push
stos
cmp
push
push
testl
aas
sahf
out
int
outsl
add
stc
or
and
jle
imul
add
rorb
js
test
loope
mov
xchg
pusha
negb
pop
cmp
jp
jp
in
scas
jo
pop
scas
or
cmpb
xor
dec
pop
js
jl
inc
inc
mov
mov
or
fnstenv
push
rorb
fstp
mov
mov
mov
pop
andnps
fstpt
jmp
out
pop
lcall
xchg
or
hlt
fs
cmp
sbb
jecxz
adc
mov
das
cmp
add
fdivl
mov
jge
xor
test
push
xor
dec
ljmp
fisttpll
dec
pop
inc
pop
xorb
incb
clc
rorb
repz
sub
push
add
mov
test
jecxz
lods
sub
aad
pop
mov
repz
test
or
lret
xchg
dec
pop
push
pop
jno
mov
mov
and
pusha
jo
inc
push
shll
xchg
cmp
js
mov
dec
test
mov
xor
cmpps
jecxz
push
adc
and
lock
jnp
testl
lret
jb
jae
rsm
das
or
inc
and
push
inc
push
mov
icebp
xchg
pop
jo
mov
out
jo
or
outsb
xchg
fwait
mov
jo
fsubrs
pop
jno
dec
mov
fcomip
push
fsts
jbe
cld
ss
sub
stos
ljmp
sbb
leave
shl
push
out
xor
insb
adc
mov
shrb
adc
out
into
push
jnp
outsl
loopne
roll
dec
cltd
hlt
subb
repz
lcall
push
loopne
cmp
ljmp
push
inc
and
ret
out
inc
mov
rolb
cmp
pop
jmp
lahf
pop
das
outsb
mov
xor
mov
and
push
movsb
adcb
or
scas
sbb
jno
jmp
sahf
cmp
fs
jo
mov
das
subl
jo
xchg
loop
dec
push
jmp
cmp
mov
inc
es
iret
bound
sbb
mov
sub
ficoms
inc
hlt
inc
jo
arpl
cmc
lahf
jmp
sub
xor
imul
nop
or
sbb
dec
jle
fistpl
cmpsb
pop
scas
jl
jp
add
or
fstps
shlb
pop
cmp
jb
mov
jecxz,pn
bound
cmpsl
push
xorb
jp
movsb
cmp
idiv
in
sbb
mov
mov
loope
and
jo
divb
test
mov
scas
add
nop
xorl
jmp
and
push
repnz
cmp
pusha
cmp
lahf
adc
loopne
push
jle
imul
idivb
stos
jo
mull
jo
fwait
pusha
roll
out
jo
inc
pop
dec
jnp
jns
rol
cli
jo
es
rclb
pop
push
adc
sbb
jo
inc
pop
xchg
xor
dec
cld
xchg
xchg
xchg
jae
ret
int3
popa
movsl
xor
addr16
mov
xchg
cmpsb
inc
xor
lock
mov
in
sub
dec
dec
mov
lods
mov
xor
sbb
pop
mov
rorb
cwtl
push
inc
mov
and
xchg
jo
outsl
outsb
sarl
dec
jo
pop
ds
test
pop
sub
mov
inc
dec
push
shlb
je
nop
ss
shlb
mov
sti
pop
dec
sbb
xchg
ss
xchg
push
repz
lret
shlb
cmpl
les
aad
in
in
imul
adc
add
repz
xchg
mov
nop
jns
push
clc
cmc
je
div
jle
jo
and
movb
mov
mov
push
cmpsb
popf
bnd
es
fnstcw
adc
sarb
jo
cld
cmp
fwait
jo
push
movsl
push
mov
div
jo
xor
shlb
push
loop
inc
cli
imul
jo
sarl
cwtl
jo
push
lock
jo
jno
mov
mov
xchg
leave
in
push
lds
jo
xchg
cltd
lods
dec
xchg
shll
dec
insl
mov
shlb
cmpsb
js
xchg
push
mov
call
mov
mov
sbb
pop
pop
cld
add
push
stc
inc
addr16
std
mov
lret
into
jo
fwait
shl
lea
ja
pop
or
cmc
es
jns
nop
and
push
enter
cmp
xchg
popa
jo
sarl
outsb
bound
xchg
cs
das
add
lods
cmp
adcl
adc
imul
movsb
nop
faddl
add
call
repz
dec
gs
sub
fisttps
sub
push
sbb
jo
inc
inc
aad
mov
cmp
xor
imul
in
call
fildl
mov
sub
les
cmp
outsb
pop
mov
pusha
push
adc
cmpl
push
dec
mov
js
ss
adc
adc
cmpsl
shr
mov
xchg
inc
fwait
jo
flds
xchg
push
mov
push
mov
movsb
test
jo
mov
xor
bound
mov
jo
popa
je
test
clc
and
cli
mov
xchg
jo
push
lahf
imul
aas
icebp
insb
jmp
mov
dec
lds
stos
cmp
jo
and
push
aam
popa
ljmp
data16
pop
mov
sbb
mov
nop
shlb
mov
add
dec
int
loope
lret
arpl
rorl
pusha
inc
cmp
mov
ret
es
jo
into
jb
divb
jo
push
add
push
push
jecxz
jns
jo
andb
int
popf
and
sti
mov
sahf
sub
iret
inc
push
js
mov
jo
leave
xchg
adc
xchg
nop
mov
mov
mov
test
pusha
in
and
sub
jns
jo
aam
pop
ds
xor
test
jbe
cld
jo
test
icebp
sbb
iret
mov
or
or
jb
jo
rep
push
lods
mov
int3
jo
ffree
outsb
adc
mov
leave
xchg
mov
je
xor
ds
jge
fdivl
enter
mov
push
jo
mov
sbb
imull
inc
imul
and
and
cwtl
shll
pop
mov
and
jl
iret
je
fwait
daa
jo
mov
les
dec
int3
push
pop
push
push
cmp
setns
pop
or
sub
call
push
jg
jge
adc
or
sub
add
pop
ja
mov
jo
aaa
fdivl
jnp
fcomps
mov
popf
adc
fptan
jb
push
popa
push
jo
inc
loop
adc
scas
js
mov
jo
xchg
cmpsb
in
int3
pop
push
push
insl
mov
outsl
inc
not
es
jo
dec
sbb
xchg
jo
inc
test
stos
shl
jo
bnd
jecxz
xchg
sbb
ljmp
and
cmpsb
out
xchg
pop
sbb
mov
pop
fbstp
aam
jmp
es
mov
xorb
imul
jae
imul
adc
xchg
iret
push
pop
popa
jo
repz
outsl
loopne
jns
jno
std
jae
mov
sti
cs
xchg
fs
and
sti
aaa
rorl
sub
fldenv
jmp
jnp
and
mov
outsb
in
lds
xor
xor
inc
int
mov
mov
jmp
in
jle
scas
xor
sub
or
mov
fsubs
sub
lret
pop
push
sbb
cmpsb
mov
icebp
and
lcall
xchg
or
mov
cmpb
stos
xlat
sbb
test
jecxz
mov
sub
test
imul
hlt
xchg
or
pop
in
out
bound
push
push
add
adc
pop
in
or
popa
or
jge
outsl
xor
sbbb
jnp
push
les
sbb
ljmp
and
inc
je
jp
mov
dec
jecxz
test
pop
fwait
imul
out
jns
ret
lds
clc
int3
cwtl
jns
xor
push
imul
mov
cmp
jo
xor
clc
dec
cmp
cld
push
out
stc
push
lock
bound
imul
lret
sti
inc
out
addb
jle
aad
in
das
mov
test
mov
jp
jmp
mov
popf
lea
add
sub
push
jo
push
fadd
mov
add
xchg
cmpb
xor
js
mov
in
mov
pandn
out
push
push
fadd
jo
cmp
and
mov
mov
mov
int3
jmp
adc
jmp
cmp
je
mov
insl
mov
fmul
sub
mulb
push
notb
inc
cmp
dec
push
inc
jae
imul
xchg
andl
add
fisubrl
sub
jo
repz
out
mov
adc
ss
dec
xchg
in
enter
push
push
jo
mov
roll
jmp
fistpll
sahf
out
pop
jo
in
xlat
xchg
ljmp
inc
and
mov
pop
shrb
gs
hlt
fdivs
pop
pop
daa
je
sbb
cmp
xorb
repnz
jp
sarl
jo
jmp
int
sbb
movsl
arpl
sbb
fidivrs
mov
js
imul
cs
in
jo
dec
or
test
js
mov
cmp
lcall
lock
int
push
mov
jle
popl
jo
imul
pslld
jns
push
xor
xor
dec
cmp
ss
jo
and
rorl
mov
nop
jns
inc
mov
fadds
lods
dec
sar
lcall
ret
cmp
imul
adc
jae
pop
jo
mov
js
pop
push
mov
out
push
out
jb
cmp
sub
jp
divl
test
jo
mov
mov
aas
add
stos
mov
pop
ljmp
pusha
hlt
popf
sub
dec
int
jo
and
rclb
popa
fidivs
cmp
pop
jo
push
divb
nop
jnp
mov
outsl
push
jo
push
mov
and
loope
insb
hlt
movsb
jo
fsubrl
or
jo
xchg
xchg
adc
jns
mov
xchg
cmp
js
out
jo
inc
ds
add
cmc
je
mov
stos
sarl
add
xchg
inc
pop
jo
sub
add
cmp
inc
imul
ds
lock
jnp
xlat
sub
mov
cld
sub
pop
jo
movsb
lcall
mov
pop
xor
jo
or
inc
push
jo
lods
add
popa
inc
adc
hlt
icebp
test
xorl
pop
jo
loopne
inc
mov
sub
xchg
xorb
lahf
and
out
add
ret
jle
pop
imull
adc
sbb
adc
pop
sub
jg
push
jo
iret
dec
cmovg
mov
add
sbb
push
fiaddl
jo
mov
xchg
lahf
popa
mov
sub
dec
stos
arpl
inc
jp
popf
sahf
xchg
mov
add
scas
in
std
clc
jo
les
cwtl
je
dec
cs
adc
aad
lcall
outsl
fidivrl
int
xchg
mov
insb
jo
mov
sbb
femms
jo
hlt
iret
gs
mov
push
jo
add
mov
nop
outsb
jae
cmp
inc
ret
jo
std
push
dec
das
push
in
cwtl
jo
pop
mov
out
fiaddl
addb
mov
mov
mov
and
mov
cs
cwtl
dec
add
aas
test
cs
mov
pop
sbb
xchg
jecxz
inc
stc
in
push
testb
xor
fdivs
cmp
jmp
jo
lds
mov
dec
sub
cwtl
cmpb
pop
dec
xor
dec
das
pop
adc
popf
ret
jo
lcall
jo
es
dec
mov
stc
and
xchg
shl
jo
lock
pop
jo
ret
push
push
test
push
cmpsl
dec
push
dec
test
mov
repz
mov
adc
push
pushl
icebp
push
sbb
adc
imul
jo
shrl
insb
inc
fs
or
pop
or
jnp
jo
add
jl
pop
pop
jo
push
sbb
push
lods
xor
push
sub
mov
dec
in
roll
loope
jo
lcall
add
test
ja
or
mov
jo
push
cli
push
mov
xchg
or
test
addr16
addr16
push
mov
mov
mov
jnp
cmp
ud1
and
pop
clc
nop
cmpsb
sti
mov
sbb
jo
dec
jge
and
jo
and
ss
mov
insl
xor
jo
lock
sti
subb
dec
lods
mov
dec
in
imul
cmpsl
and
cmp
pusha
pop
xchg
scas
push
mov
xchg
inc
nop
fcomps
imul
sub
push
and
fldt
cld
jecxz
mov
inc
sub
or
shll
and
aam
push
out
loopne
mov
push
jo
jge
push
push
orb
mov
xchg
pop
cltd
sbb
mov
xor
psrld
and
xor
push
jo
pop
or
sub
dec
pop
daa
xor
seto
pop
in
sbb
js
adc
push
or
clc
jns
mov
pop
divl
sub
cmp
mov
mov
jnp
aas
outsl
test
fldpi
jecxz
insb
jp
xor
or
in
and
xchg
jns
jo
and
dec
cltd
pop
jmp
push
frstor
push
insb
pushf
inc
jo
lret
loopne
les
jo
in
roll
add
push
aam
cwtl
push
jne
mov
jmp
aam
sub
ljmp
push
leave
ja
jp
fs
jo
and
adc
xchg
add
add
mov
mov
or
rclb
cmp
fucomp
dec
inc
mov
mov
lcall
outsl
nop
jecxz
int3
mov
jb
mull
xor
data16
icebp
jno
cmp
xchg
hlt
cmp
loop
jo
inc
std
jl
cmp
mov
jo
enter
test
push
jo
xchg
inc
xchg
repnz
ret
mov
sub
insb
mov
jo
testl
jo
pushf
pop
pop
jg
into
mov
adc
mov
mov
sub
cmp
and
cli
xlat
mov
sbb
mov
pushf
shll
inc
jb
rcrb
sti
push
jmp
nop
cmp
jns
cmp
inc
loopne
scas
in
pop
inc
sbb
test
andb
mov
mov
mov
pop
bswap
mov
cltd
mov
je
ds
out
test
xor
clc
fs
aas
das
jo
cmp
loopne
wrmsr
out
iret
test
mov
adc
fs
dec
std
gs
jle
jmp
mov
jo
outsb
adc
sbb
jo
or
mov
clc
cmp
sbb
pushf
enter
repz
test
shll
push
lock
jmp
fisubs
add
add
mov
mov
push
popa
pop
sbb
dec
push
fidivl
cmp
lods
mov
xchg
push
nop
inc
fisubs
or
pusha
or
add
dec
jo
dec
xchg
mov
mov
dec
repnz
arpl
lahf
or
sbbb
jne
es
jle
inc
pop
mov
lret
jg
push
leave
test
pop
dec
mov
add
jns,pn
lds
or
lahf
orb
sbb
icebp
or
inc
je
dec
mov
cmp
xor
aam
push
jle
lret
mov
mov
pusha
cli
push
icebp
push
xchg
adc
lock
push
pop
add
add
and
inc
jae
scas
dec
lods
imul
mov
or
arpl
mov
xchg
sti
push
cmp
add
jle
jae
fidivl
add
outsb
lock
pop
adc
repz
sub
push
insl
jb
test
push
jl
xor
jo
std
fistpll
xchg
aaa
xor
mov
addr16
cmp
mov
mov
arpl
mov
stos
adcb
std
shlb
fldl
out
jmp
cmp
out
cmp
and
pop
xchg
out
mov
push
jmp
stos
test
mov
jp
add
shll
call
movb
outsb
mov
push
sbbl
call
jae
or
imul
mov
xlat
push
sub
cld
or
pop
mov
inc
sub
push
imul
lret
insl
std
cmp
add
jp,pt
dec
outsb
mov
jbe
shrb
ljmp
push
mov
lock
pop
es
bnd
inc
test
xor
ss
rorb
push
lcall
jo
sbb
fisttpll
pop
adc
jae
xchg
je
dec
push
lcall
shrb
fsub
push
xor
popa
jb
mov
jo
adc
sub
stc
add
sub
cvtps2pd
jne
xchg
jb
mov
cmp
aam
cmp
xchg
jo
jne
dec
movsb
daa
pop
or
mov
fsubr
sbb
cmp
jg
xor
arpl
and
jp
mov
sub
fldln2
cwtl
xchg
jnp
out
jmp
clc
xorb
inc
out
and
or
or
fs
or
and
push
sti
or
jo
mov
fnstenv
or
insl
and
dec
add
out
push
cmpsb
pop
outsb
or
sahf
dec
sub
addr16
fmull
call
shll
or
sub
out
in
loop
cmc
sbb
xchg
fistpll
sub
xor
sarb
pop
test
dec
push
mov
xchg
and
out
loope
arpl
sbb
dec
push
outsb
adc
addr16
jae
add
jb
mov
out
sti
cmp
add
push
sbb
popa
shlb
push
incb
push
and
into
mov
jle
fdivr
js
push
popa
cmp
jns
cmpsl
jmp
sbbl
jb
scas
test
adcb
push
jl
mov
sbbl
push
adc
out
cmpsb
xor
in
cmc
push
std
sbb
or
or
jnp
push
ud1
scas
stos
inc
mov
js
lret
mov
rorl
std
pop
arpl
gs
fidivs
cmp
inc
dec
xor
push
mov
push
xchg
sub
inc
cmpsb
add
pusha
push
mov
push
xchg
sbb
ljmp
int3
enter
push
jno
adcb
cli
rol
xchg
mov
xchg
mov
cli
and
js
mov
add
inc
pop
pop
popf
mov
repnz
dec
pushf
call
std
fstl
mov
jae
pop
les
das
mov
pop
sbb
xor
fstps
jmp
push
cmc
out
push
lret
pop
int
xor
add
mov
lock
and
lock
stos
hlt
sbb
jae
fs
or
shl
stos
out
call
js
test
js
ret
lods
jl
jae
add
sbb
shrd
xchg
sub
dec
je
lret
dec
push
rcrl
pusha
push
mov
out
repz
or
pushf
call
add
mov
mov
js
sahf
js
jns
mov
mov
dec
xor
mov
mov
push
cmc
mov
fldcw
in
jb
jg
out
xorl
out
xchg
xor
inc
jo
mov
call
imul
lds
andb
jo
stos
outsb
cmp
inc
cmp
add
lret
ds
cmpsb
pop
je
xor
adc
adcb
nop
std
test
fsubp
leave
jne
sub
gs
mov
in
test
add
jo
sub
push
sub
call
jb
cld
push
stos
loope
mov
mov
mov
faddl
jo
dec
adc
mov
fwait
jle
xchg
test
add
pusha
stc
sub
jo
and
test
xor
in
xorb
sub
pop
sub
cmp
nop
pop
out
aad
sbb
ret
std
push
sub
xchg
notb
sbb
pop
filds
fnsave
das
add
daa
or
cltd
scas
cs
in
mov
jg
popa
sbb
adc
mov
shlb
pop
pop
or
insb
jo
sahf
push
inc
xchg
dec
and
jo
scas
sbb
stos
jbe
push
inc
sahf
mov
push
bound
scas
mov
cmpsl
gs
jo
repz
icebp
mov
jnp
pop
popf
add
add
lret
pop
sbb
add
cs
out
jmp
ja
sbb
fs
mov
loopne
sbb
arpl
jge
xchg
add
push
xchg
jg
cltd
fmul
fs
or
js
bnd
lock
out
subb
sarb
add
mov
dec
out
push
pop
add
push
mov
loopne
pusha
cltd
xor
sbb
push
cmp
loopne
inc
cltd
pop
bound
mov
out
jmp
stc
into
int3
xchg
pop
sbb
adc
sub
in
les
dec
std
cmp
scas
jo
pop
or
sbb
imul
jle
cltd
rolb
lret
mov
inc
andb
fdivl
inc
addr16
jo
cmp
mov
or
rorl
sub
jo
dec
add
orl
lea
scas
andb
out
in
mov
push
pop
push
pop
fists
push
rcr
les
into
call
sbb
pop
int
fimuls
pushf
add
jp
jle
jo
sub
ja
jo
push
nop
movsb
adc
imul
push
mov
xchg
jo
popa
je
jg
mov
sbb
jo
dec
jmp
jecxz
sbb
inc
pand
xor
out
xchg
imul
shrb
xchg
lahf
sub
pop
call
jle
add
adc
sub
int
xchg
stos
loop
adc
cld
addr16
sub
iret
push
inc
int3
shrl
addr16
sub
jae
jo
in
andl
clc
popa
mov
inc
xchg
xor
lods
in
into
enter
xchg
cmp
jo
aad
or
mov
push
jne
push
push
jo
test
int
ret
loop
jo
add
mov
jo
stos
aam
dec
aas
mov
jo
sbb
js
call
push
pop
fs
out
xchg
cs
mov
pop
mov
push
cmpsb
test
js
pop
push
jp
xlat
daa
xchg
div
cmp
icebp
sahf
pusha
cmp
sub
out
in
cmp
shll
pop
loop
mov
xor
addr16
aad
loope
movsl
mov
dec
mov
mov
jo
in
mov
push
nop
scas
inc
ja
adc
dec
nop
adc
add
sbb
xor
hlt
out
rclb
sub
loopne
rolb
test
add
jo
mov
arpl
movl
cs
pusha
push
cmc
mov
sub
push
and
test
mov
out
lock
or
aas
movsb
or
xor
add
lea
xor
sbb
pusha
jmp
into
and
mov
mov
xchg
adc
push
pop
outsl
xor
nop
imul
xchg
lret
imul
add
inc
dec
push
mov
pop
fstl
jo
lahf
pop
xchg
js
int
aad
adcb
mov
mov
scas
mov
outsl
out
jb
push
mov
jle
or
mov
lcall
xchg
jg
push
jno
xchg
gs
jnp
mov
aaa
insb
sbb
int
out
cmpsl
dec
stc
mov
adc
test
pusha
jae
test
mov
sub
fs
and
sahf
push
mov
inc
push
push
shrb
xrelease
jge
push
loop
pop
pop
mov
js
cmp
sbbb
clc
daa
mov
and
mov
iret
push
mov
add
aad
xchg
push
insb
jp
gs
cmp
dec
js
arpl
push
pop
inc
sbb
pusha
mov
sbb
pop
cwtl
insl
loop
insl
xor
cmpsl
lcall
insb
lods
jae
mov
push
mov
sbb
bnd
popa
mov
mov
mov
lret
jge
push
loope
shl
popf
aam
addr16
sub
je
roll
sahf
lods
sub
push
dec
cmp
and
test
pop
or
outsl
fdivs
icebp
inc
push
repz
bound
sbb
cmp
xchg
fistps
clc
out
or
insb
cwtl
sbb
mov
leave
into
mov
lahf
es
test
inc
jno
mov
inc
insl
push
ret
mov
test
adc
cmp
push
cmpsl
xlat
fcompl
lea
int3
cmp
nop
int3
or
mov
hlt
or
and
sbb
fs
push
adc
in
mov
cltd
loopne
pop
pop
test
test
pop
out
stc
ja
mov
cmp
ja
shrl
inc
call
sbb
test
mov
in
inc
das
mov
mov
xchg
je
and
fwait
push
pop
lret
stos
lahf
scas
cmp
jnp
clc
adc
mov
jae
pop
roll
icebp
jle
fxch
mov
mov
in
and
push
or
add
fs
in
cmp
push
insb
loopne
insb
push
or
xor
push
push
mov
lahf
cli
data16
mov
fdivrl
push
or
loop
or
jle
bound
sbb
xor
mov
out
pop
mov
roll
mov
das
inc
jp
and
and
sub
dec
push
cwtl
stos
jae
lds
adc
jle
push
js
mov
arpl
push
xor
out
ret
nop
insl
addb
and
dec
jmp
pop
sub
sarl
jle
jle
icebp
inc
push
mov
push
int3
insb
xor
cmp
daa
and
xchg
nop
jmp
xchg
xor
push
and
and
dec
push
push
notb
ret
ja
adc
in
mov
arpl
or
push
jg
push
loop
lret
es
mov
jnp
dec
rclb
xor
scas
scas
inc
stc
negb
xchg
and
lods
mov
adc
shlb
pop
clc
cmpsb
cwtl
mov
pop
call
pop
sarl
jecxz
add
arpl
lcall
add
jnp
fistpl
insb
xchg
cmp
mov
jnp
pop
cltd
ja
pusha
arpl
or
outsl
rcrb
lahf
lea
es
stc
xor
aad
int
mov
jmp
or
or
lds
mov
push
mov
push
scas
jns
inc
inc
sub
jle
mov
addr16
sti
xchg
jb
mov
xchg
clc
cwtl
std
pop
mov
rcrb
mov
out
cmp
jle
push
push
outsl
mov
sbb
popf
icebp
arpl
push
icebp
jg
jl
jae
fcomi
and
mov
in
mov
lods
push
jnp
out
pop
loope
push
int3
and
popa
adc
jae
popf
mov
xor
sbbl
cmpsb
xchg
pop
hlt
mov
inc
adc
pop
outsb
xorb
in
shr
dec
adc
mov
js
push
xchg
decl
jb
sarl
loopne
adc
pushf
mov
lds
and
pop
push
int3
xor
into
cld
push
mov
popa
cmpsb
popa
dec
in
jae
cmp
scas
insl
cmp
push
rcl
cmpsb
and
jae
mov
mov
je
xchg
pusha
int3
gs
xchg
jle
jle
push
and
out
rorb
cmp
popf
sbbb
sbb
mov
clc
push
or
cmpsb
notb
xchg
jae
and
not
push
scas
push
pop
fadds
lods
daa
ffreep
jnp
jmp
sub
dec
xchg
xor
decl
ljmp
cmc
mov
imul
push
inc
ret
add
sub
add
and
out
scas
insl
imul
xor
stos
add
lret
sub
add
out
push
sub
xor
int3
xor
das
cmpsl
pop
out
xchg
or
jo
sub
neg
cltd
push
add
xor
leave
lock
xor
lds
mov
cmp
jmp
xchg
sub
daa
dec
and
int3
test
jb
fisttpll
cmpl
ljmp
imul
inc
mov
sbb
out
dec
cmp
jg
mov
cmpsb
sbb
inc
scas
loopne
sbb
aas
inc
cmpsb
cmp
ror
dec
in
push
repnz
mov
leave
jl
stc
add
pusha
out
movsb
call
sub
ja
int3
scas
int3
orb
jecxz
loope
cmpsb
inc
stos
out
mov
and
std
jns
int3
mov
dec
xchg
mov
pop
mov
jp
daa
jns
neg
mov
jp
or
mov
mov
stos
adc
stos
popa
es
js
popa
dec
sub
cmpsl
fdivs
imul
inc
add
or
sbb
cmp
stos
pop
faddl
inc
sbb
jle
xor
data16
enter
sbb
push
stos
pop
nop
dec
jno
imul
cmp
push
or
clc
test
clc
stos
jmp
add
xchg
shll
arpl
dec
cmp
stos
test
push
jp
in
cmpsl
and
adc
xchg
jae
inc
jbe
push
sbb
fcoms
notb
sbb
sbb
lret
jbe
adc
xchg
scas
arpl
mov
faddl
add
mov
push
sbb
pop
lods
lcall
push
ficomps
jle
insl
jecxz,pn
adc
and
inc
arpl
out
testl
rolb
dec
push
rcrl
push
sbbb
dec
adc
mov
push
mov
outsl
daa
push
dec
sbb
icebp
scas
sbb
push
std
aaa
addb
adc
fs
mov
dec
push
lods
fcoms
fmul
mov
movsb
es
dec
adc
add
shlb
push
or
ret
cwtl
aam
lcall
jne
push
or
mov
aaa
mov
in
add
outsl
inc
push
push
adc
jnp
lahf
shll
mul
pop
jmp
pop
xor
jo
sub
xchg
jmp
lock
rolb
xchg
cmpsb
pushl
out
sub
imul
xor
cmpb
and
mov
fildl
ret
push
jle
sti
data16
notl
xor
push
cld
and
jp
lret
or
mov
jno
int
xchg
xchg
adc
nop
test
dec
repz
js
mov
sbb
push
xchg
xchg
mov
mov
lock
jmp
test
add
repnz
cmpsl
into
scas
and
xlat
jo
je
sbb
jo
loop
or
into
mov
stos
shl
adc
mov
nop
push
mov
jle
jbe
out
mov
add
and
jns
in
lds
adcl
dec
cmp
imul
cli
jo
dec
mov
pop
sbb
dec
mov
jo
stc
lods
fstpt
jl
call
outsb
les
push
mov
sahf
pushf
or
imul
pop
das
sub
jo
sub
mov
jo
or
jl
cmp
dec
xor
lods
push
int
aam
sub
jo
cli
add
insl
pop
fiadds
andl
sarl
xor
sbb
idivl
or
jo
roll
pop
lods
fwait
adc
fldenv
jb
lahf
nop
adc
out
cs
inc
stos
jo
repz
dec
lea
jg
hlt
in
pop
out
ljmp
loope
push
adc
popa
jb
xchg
sti
jo
push
pop
push
movsl
jo
add
nop
jno
lret
inc
cs
cmp
jo
insl
inc
fisttpl
imul
addr16
xor
mov
das
leave
rorl
add
sub
lahf
pushf
jo
ficomps
scas
jae
cmp
fs
and
test
inc
cs
cmp
js
mov
movsl
jg
js
les
dec
jo
fwait
outsb
cmpsb
lods
ljmp
and
jmp
mov
fnstenvs
sbb
xchg
xchg
jp
bnd
jmp
xchg
jne
outsb
fisubs
push
push
lods
sub
push
push
jo
cmp
push
jecxz
push
inc
cmc
xchg
notb
subb
and
andb
xchg
mov
xchg
xchg
es
sbb
lcall
inc
push
shll
adcb
lods
ss
popa
je
cs
mov
mov
and
pop
and
sbb
repz
js
aam
in
aaa
push
pop
cmp
jo
into
mov
mov
or
hlt
jae
push
ja
sub
mov
jns
daa
cmpsl
mov
in
mov
mov
int3
fimuls
jae
sar
jo
popa
push
mov
jo
cmpsl
or
jo
lret
pop
and
dec
repz
das
rorl
push
cmp
jmp
dec
scas
notb
jbe
add
ljmp
jo
enter
leave
jecxz
or
test
mov
ljmp
call
loopew
push
std
push
out
insl
out
lret
or
lds
xchg
jo
jae
mov
nop
xchg
fnstsw
cmp
movsl
insl
push
aad
add
sbb
inc
and
or
insb
stos
ds
mov
add
lret
sub
lret
and
adc
add
mov
int
jo
and
stos
cmp
pop
jo
ret
addr16
inc
sbb
fldl
outsl
mov
jmp
mov
push
jnp
adc
and
mov
shlb
cld
adcb
jo
cmpsb
mov
sub
nop
daa
mov
aam
adc
jo
lock
inc
out
mov
insl
mov
cmp
pushf
clc
stc
out
and
cli
sub
data16
ja
lret
lcall
in
adc
dec
test
mov
xchg
mov
push
jo
fidivrs
cmpsb
jo
lret
jp
mov
cwtl
or
inc
jo
nop
lods
xchg
sbb
pop
jo
rclb
jo
hlt
and
mov
rep
jecxz
xchg
ret
push
push
inc
adc
mull
mov
call
clc
mov
shlb
stos
rcpps
mov
lret
loopne
mov
outsl
jo
sbb
or
mov
sub
dec
xchg
out
pusha
leave
mov
mov
sbb
sub
aaa
and
cmc
jo
int
push
popa
inc
das
mov
pop
and
inc
aam
jns
js
jmp
in
pop
sbb
jp
jno
xorb
rcl
sti
push
adc
jns
jo
push
add
fdiv
in
jo
xchg
fcmovnu
and
mov
push
das
cmp
mov
xchg
hlt
call
jo
aad
or
mov
push
push
and
xchg
and
push
xorb
out
scas
vmovsd
or
xchg
fwait
cli
mov
jo
push
pop
loop
in
test
inc
adc
aaa
lret
jecxz
out
mov
mov
repnz
push
jo
movaps
jo
jno
adc
add
sub
bswap
cwtl
hlt
test
cmpb
das
fdivp
jo
fs
lret
push
jb
sti
jp
les
mov
insb
jo
or
nop
data16
push
ucomiss
cmp
push
jo
cmp
push
shlb
pop
jo
adc
cmc
in
cmp
cmpsb
sbbb
jo
jnp
int3
addr16
stos
adc
inc
jbe
or
push
dec
jo
adcb
data16
mov
jo
mov
loop
mov
xchg
and
jo
aam
adc
nop
dec
in
stos
or
aas
cs
jge
xchg
inc
adc
inc
out
shr
out
ss
icebp
fsubs
dec
cli
ds
std
jo
adc
fnstcw
dec
mov
xchg
nop
xchg
mov
pop
jle
lcall
rclb
icebp
mov
push
sbb
dec
dec
js
add
jg
inc
sub
mov
mov
popa
jno
lcall
in
or
loope
xchg
mov
loopne
cs
push
sar
add
insb
fists
sarl
mov
sahf
mov
les
addb
push
jbe
add
jb
jo
cld
shll
out
nop
int3
add
loopne
mov
pop
mov
lods
jo
jecxz
jmp
bound
das
push
xchg
subb
jle
push
add
leave
je
cltd
imul
mov
sub
dec
mov
mov
test
inc
jo
repz
mov
push
mov
inc
adc
dec
stos
jo
sub
stos
scas
pop
mov
ljmp
data16
dec
fnstcw
into
pop
popa
sub
push
int
cmpsb
je
cli
cmc
xorb
mov
aaa
test
fisttpll
jb
mov
fiaddl
jmp
cmp
ljmp
cwtl
mov
mov
lock
ljmp
and
push
pop
jns
sbb
inc
jo
adc
lock
outsl
clc
jo
test
xchg
jg
ret
call
pop
jno
ds
cs
fcoms
add
cli
les
push
mov
adc
or
jo
pop
dec
lods
cmpsl
xchg
cmp
jo
jns
sub
or
sarl
nop
or
sub
pop
jo
shrl
in
gs
adc
xor
dec
lret
dec
and
insb
subb
test
inc
sub
fwait
mov
ja
test
test
ss
fcmovu
pop
sahf
or
les
rorl
xorl
je
imul
mov
leave
xchg
in
jo
sbb
jo
sub
push
cs
stos
loop
push
jecxz
inc
xchg
and
jle
in
je
and
jo
pop
jmp
arpl
es
in
sub
dec
sub
addr16
xchg
jo
push
out
pop
mov
xor
cmpsl
dec
jle
and
dec
rcll
jo
push
loop
jo
jne
pop
mov
xchg
pop
fwait
aaa
and
in
stc
insb
xor
mov
cmpsl
jo
mov
pop
adc
jo
xchg
movsb
cltd
ss
jo
mov
push
mov
loopne
pop
scas
std
aad
push
jecxz
pop
inc
fbld
pop
xorb
bound
std
jle
sub
shrb
push
fs
lahf
mov
adc
les
jae
test
popa
lret
cltd
out
mov
mov
sarl
sub
pop
in
adc
add
movsl
aam
aad
addr16
shrb
rcrl
jmp
sbb
or
std
ja
mov
jle
mov
mov
mov
test
das
dec
push
popl
xchg
cmpsl
sbb
push
fistpll
mov
jb
mov
and
inc
cltd
iret
cmp
pop
xor
cwtl
insl
pop
ret
push
mov
shll
and
je
lods
aaa
rcrl
jbe
ret
in
fwait
dec
lret
out
push
mov
jecxz
push
sahf
and
push
jmp
adc
pop
outsl
lret
in
scas
loop
push
push
mov
sub
pusha
imul
and
mov
jge
mov
sub
test
js
loopne
and
enter
ss
stos
insl
scas
push
push
sub
add
mov
push
cmp
xchg
cmp
or
lahf
ds
dec
xor
sub
in
pop
js
or
je
adc
imul
mov
std
stc
es
push
pop
cmp
jo
add
mov
fdivrs
ret
loop
cmp
sub
mov
out
outsb
mov
jle
mov
mov
aaa
pusha
add
ds
jle
push
arpl
or
push
dec
push
push
sbb
jns
mov
repz
mov
es
outsl
inc
jnp
xchg
pop
in
lret
or
lea
lahf
pop
xor
je
add
or
cmp
add
loop
lods
lcall
test
adc
call
int
lods
pop
lds
scas
mov
hlt
and
push
leave
int3
sub
rclb
fwait
out
sahf
jl
daa
aas
popf
scas
insl
mov
push
mov
jo
adc
scas
je
jno
push
das
data16
jge
sub
lcall
jno
out
add
aad
push
cmp
fists
out
jo
inc
ret
hlt
mov
fmull
cmp
xchg
lock
inc
push
pop
sahf
rolb
sbb
sbb
js
ret
or
add
add
pop
stc
inc
ret
sbb
cld
icebp
movsb
mov
adc
xlat
roll
inc
imul
cmp
inc
imul
sub
sbb
xor
dec
int
push
sub
test
adc
mov
mov
dec
cmp
std
inc
xor
sahf
jp
sbb
inc
lds
jle
sarb
jb
cmp
mov
jno
jecxz
xchg
cmp
or
outsb
mov
inc
out
jae
inc
sbb
mov
out
test
test
jne
pop
jbe
mov
push
out
test
dec
inc
out
out
or
out
inc
sbb
cmp
fcmovnbe
jo
jecxz
and
icebp
aas
aad
xchg
loope
lret
xor
sbb
in
mov
addr16
mov
fs
hlt
fiadds
and
and
pop
mov
jle
xchg
fwait
cld
sbb
mov
aad
push
adc
jno
jnp
pop
mov
les
mov
fnstcw
fnsave
inc
xchg
push
mov
popf
xor
insl
dec
call
out
mov
fucomp
or
mov
mov
ja
cmp
outsl
cmp
ds
cmp
fs
or
in
lock
sbb
ret
hlt
shl
fbld
cs
sbb
xor
jg
inc
pop
mov
stos
xchg
test
sbb
push
es
gs
arpl
or
aam
fsts
mov
adc
arpl
push
cmpsl
pop
jmp
pop
insb
je
fstpl
sbb
add
sub
int3
insl
inc
xchg
shll
addb
push
sub
mov
dec
jae
mov
in
sub
std
xchg
push
add
loop
adc
scas
dec
ret
movb
cltd
adcb
dec
mov
ret
sub
mov
push
ja
or
xchg
sub
push
cmpsl
stc
cmp
adc
scas
mov
lods
cmpsb
scas
sbbb
cmp
jp
push
mov
mov
push
lock
pop
dec
loop
xchg
out
xor
and
pcmpgtd
fs
jle
push
dec
lret
push
test
fwait
mov
movsb
outsl
int3
loop
es
pop
push
or
dec
or
or
in
mov
addr16
mov
sbb
dec
enter
notl
jge
into
mov
out
or
adc
scas
inc
push
xor
mov
call
repz
cmovno
arpl
test
inc
cmpsl
xor
mov
es
cltd
fstp
sub
aaa
push
loopne
add
sbb
ret
inc
addr16
jae
test
cmp
daa
inc
imulb
push
aam
in
jmp
dec
insl
inc
jmp
cmp
stc
adc
adc
jne
ljmp
int
adc
negb
arpl
mov
jns
mov
popa
add
loope
movsl
sub
enter
jp
push
and
ret
nop
mov
push
decb
in
or
cmpsb
popf
inc
shrl
mov
mov
in
xchg
xor
packsswb
sub
mov
inc
add
cld
jle
jns
xchg
sti
dec
and
lock
gs
and
and
movsl
mov
add
push
lods
xor
adc
xor
jae
dec
inc
sarb
adc
mov
out
pusha
inc
push
mov
movsw
les
jne
jge
inc
pop
push
mov
and
jg
imul
push
jl
mov
aad
jp
testl
xchg
pop
xchg
outsb
lret
imulb
in
fdivr
and
lahf
out
mov
shlb
fmul
dec
sbb
or
fildl
out
mov
mov
or
scas
sub
cltd
inc
or
jmp
push
imul
mov
xchg
or
add
and
addr16
cwtl
fstl
lods
dec
sub
xchg
xor
xor
push
cs
sbb
pop
inc
lahf
sub
je
inc
cmpsl
adc
cld
aad
or
pop
push
mov
inc
enter
divb
fwait
push
fldl2e
push
das
jp
jecxz
cmpsl
inc
addr16
ljmp
mov
movsl
shlb
sub
insl
popf
push
movsl
xor
inc
xchg
sbb
add
roll
jnp
cmpb
ret
call
into
pop
popf
inc
jbe
mov
dec
mov
mov
mov
sbb
movsl
lock
xor
fdivrs
repnz
jge
je
push
pushf
and
xlat
mov
sti
mov
sbb
insl
fldenv
sarl
mov
add
jmp
mov
mov
push
fwait
and
cmpsl
icebp
mov
ljmp
adc
fs
jae
inc
xchg
mov
popf
negl
dec
lahf
sbb
or
mov
push
or
sbb
xchg
adc
clc
add
sub
dec
insl
out
and
repz
push
add
cli
or
mov
inc
or
pop
movsb
popa
add
pusha
mov
jae
aaa
ljmp
pop
push
and
add
fstps
mov
outsb
arpl
shrb
rorb
out
pop
addr16
cmpsl
xchg
inc
dec
xchg
imul
sub
sbb
dec
es
mov
imul
sbb
and
push
push
loope
lock
lds
addr16
push
lahf
mov
stos
std
fistpll
int
rclb
nop
jp
pop
jecxz
or
jle
rorl
loopne
insb
add
push
movsb
jae
jmp
fdivrl
jo
das
call
mov
cmpsb
jne
pop
mov
stc
data16
aam
ds
mov
xor
jo
lret
cli
sbb
or
nop
gs
dec
add
clc
jo
jne
push
xchg
cmovo
addr16
loopne
icebp
sbb
mov
jo
and
add
cmp
mov
aam
mov
out
xchg
sbb
inc
cli
scas
das
scas
add
dec
cmpsb
movsl
int
sbb
fcoms
push
lea
into
popf
hlt
push
pop
stos
mov
adc
push
pop
nop
pop
sub
jno
add
inc
je
xor
xorl
push
testl
test
dec
loopne
int
pop
cmp
imul
jo
mov
push
clc
jge
mov
jnp
xchg
push
push
iret
shll
add
cmp
jmp
shl
push
jo
adc
int
mov
out
mov
ja
pop
repz
andb
dec
or
stc
mov
jo
sahf
pop
adc
xor
out
rclb
jo
ljmp
jo
push
popa
in
aam
xchg
jo
cltd
push
mov
je
loopne
xor
mov
push
jo
jmp
or
shll
add
jle
jo
loop
add
leave
aad
leave
sub
cmpsb
inc
cmp
pusha
mov
mov
push
push
sarb
xorl
imul
jo
lds
sub
inc
std
ret
cmpl
pusha
repnz
outsb
push
push
mov
mov
mov
out
mov
and
dec
data16
out
call
push
mov
cmpsl
call
xchg
fldcw
pop
dec
loope
mov
lahf
loope
outsl
push
pop
push
fstpl
mov
movsl
fstpt
ret
ffree
shufps
clc
pop
jmp
into
jbe
adc
xchg
mov
fistpll
mov
adc
lds
xchg
stos
jo
jb
pop
bound
daa
sub
jl
mov
test
pop
lea
dec
mov
sahf
xor
cld
iret
lock
sar
fs
push
cwtl
cmpb
and
xchg
push
mov
or
hlt
sbb
fiadds
lret
dec
cmp
and
xchg
faddp
add
jo
sbb
sub
dec
cltd
inc
mov
lret
outsb
and
lock
cmpsl
pop
in
in
scas
inc
jns
sbb
mov
out
out
mov
sub
cmp
mov
arpl
xchg
into
aaa
jns
pop
cs
mov
fwait
jg
jae
mov
aam
pushl
jl
push
sbb
sub
rorb
jne
fnsave
sub
stos
scas
rcll
pop
fistl
or
jae
fxch
out
sahf
insb
push
xor
mov
pop
sbb
sahf
sbb
lahf
lock
scas
jae
mov
insb
shlb
mov
out
xor
push
imul
int3
test
lock
xlat
in
push
ljmp
gs
sbb
mov
add
push
arpl
add
addr16
pop
dec
cmp
icebp
inc
sbb
movsb
and
push
and
repz
outsb
dec
incb
jmp
sub
mov
test
pop
dec
mov
in
sti
push
cs
jle
sub
add
fisubl
mov
jmp
push
fldl
loop
aad
inc
mov
xor
lcall
out
inc
push
aam
mov
nop
inc
jae
scas
lock
cmp
pushl
xchg
jns
inc
mov
arpl
aad
lret
mov
in
dec
mov
sub
inc
ljmp
pop
scas
in
pop
std
xorl
in
xchg
scas
data16
sbb
in
lcall
adc
push
xor
fldl
movsb
mov
or
sahf
cmp
sbb
std
inc
jmp
imul
cmp
fs
lock
xor
fwait
push
arpl
enter
sub
movsl
push
push
clc
int
js
arpl
jge
int3
aam
mov
or
cld
je
fwait
inc
push
sub
adc
arpl
push
iret
mov
fsubs
push
fs
xchg
je
imul
adc
or
fists
out
pop
movsb
sub
sbb
bound
push
arpl
pushf
jno
data16
cld
xor
add
fucomi
scas
rcll
cltd
or
lcall
mov
sub
mov
clc
push
jnp
xchg
pop
sub
sub
jg
dec
jge
sub
mov
lret
jb
lahf
out
and
add
dec
ret
xchg
push
rcll
jl
mov
ret
shrb
pusha
and
add
js
arpl
in
mov
shll
sub
push
fsub
stos
jo
xor
jnp,pt
xchg
das
shlb
outsl
sub
pop
adc
mov
sarl
call
pushf
stc
and
bound
dec
loopne
dec
loopne
test
push
pop
arpl
nop
cltd
sub
cmpsl
adc
adc
jne
jne
or
stos
xchg
or
mov
adcb
popa
jmp
mov
divl
pop
ds
or
and
lret
adc
cmc
xchg
loopne
cmp
ja
outsl
jp
adc
bound
push
adc
inc
push
push
les
jne
pusha
loopne
jecxz
add
adcb
or
push
mov
push
sbb
xchg
push
xchg
js
in
and
or
cli
sub
pop
jno
inc
jb
mov
inc
shlb
jno
mov
in
ljmp
fiadds
shrl
stc
dec
add
cld
sbb
es
outsb
ljmp
nop
dec
push
pop
and
add
fistl
sti
scas
das
scas
mov
jns
shl
mov
mov
js
adc
int3
test
adc
push
das
fdivrs
sbb
dec
xchg
dec
push
insb
mov
sti
sbb
xchg
lds
aas
js
ficompl
iret
mov
sbb
cmc
xorps
in
dec
cld
mov
lock
xchg
xchg
rorl
adc
add
std
xchg
sub
leave
fsts
inc
shl
push
lret
es
cmp
jae
jp
add
fsubp
xchg
test
pushf
mov
outsb
fadds
mov
and
xchg
adc
ds
inc
imul
mov
rcrb
out
int
hlt
jnp
scas
xor
mov
jno
arpl
jecxz
dec
mov
jno
std
pusha
arpl
mov
pop
cs
loope
push
cmc
in
stos
mov
dec
dec
lods
ret
loope
mov
loop
sub
jno
push
push
jle
and
push
add
lret
xor
inc
push
out
aas
mov
mov
gs
xchg
add
inc
add
outsl
ds
jmp
ja
and
imul
imul
in
aam
fsts
or
inc
pop
movsb
jmp
roll
insb
jae
cmp
rorb
inc
scas
movsb
add
or
loopne
popl
popa
xchg
ljmp
in
shlb
sub
ss
mov
xchg
pop
out
lahf
xchg
fs
add
inc
dec
ficoml
mov
mov
xchg
in
int3
hlt
inc
in
xchg
xchg
sub
shll
arpl
mov
fidivs
sbb
pusha
cmp
jge
mov
aad
mov
or
cmp
cmp
roll
xchg
out
inc
pop
push
out
push
inc
mov
push
in
jle
sub
push
xorl
mov
mov
shlb
push
inc
imul
aam
icebp
arpl
js
push
push
cmp
leave
mov
mov
mov
jo
aaa
scas
mov
mov
in
out
pop
jno
push
imul
adc
push
sbb
mov
loope
push
es
push
out
and
push
jno
or
nop
adc
jb
aad
lock
ret
jae
fistpll
outsl
daa
jne
out
cmc
std
mov
adc
movd
xchg
popa
fisubs
movsb
data16
scas
lcall
fistpl
cmpsb
jp
jl
jb
jae
out
sub
in
orb
lds
push
testb
dec
nop
pop
lret
adc
push
sub
lea
scas
and
popw
mov
jp
mov
dec
clc
mov
xor
imul
loope
mov
test
mov
cmp
movsl
xchg
add
rcr
decb
jg
jne
push
cld
xchg
jbe
leave
pop
inc
inc
xor
cld
mov
sbb
pop
in
jnp
fs
pop
pop
inc
fcmovu
pop
rorl
cltd
dec
inc
mov
xor
push
sbb
popf
cs
jle
fs
lret
xchg
xorb
imul
loope
cltd
push
sahf
jne
xor
push
out
inc
jmp
push
sbb
or
enter
add
jle
jo
stc
in
pop
cli
insl
sbb
jae
jno
icebp
push
xor
popa
int3
dec
add
push
std
inc
fs
xchg
cwtl
addr16
pop
incb
pop
int3
lods
dec
inc
movsl
dec
mov
xor
stos
lds
cmp
ret
cmp
push
repnz
xchg
mov
imul
in
cmp
push
call
or
test
jae
inc
rcl
es
push
arpl
push
in
mov
mov
setns
xor
aad
inc
adc
loop
sub
es
dec
test
and
mov
int
jno
pop
out
add
inc
push
xor
or
lret
push
xlat
push
scas
ds
sbb
sti
adc
mov
cmp
insl
push
lret
jecxz
mov
sub
pop
dec
test
dec
add
push
inc
pop
pusha
imul
jae
fistl
scas
jns
adc
push
sti
mov
add
add
push
adc
test
xchg
or
adc
mov
sub
push
je
xor
push
lahf
out
in
pop
arpl
pop
arpl
jmp
jno
call
in
scas
cmp
outsl
sar
dec
mov
jb
and
aad
push
xchg
daa
inc
mov
fbld
lods
sbb
loopne
addr16
push
stos
mov
sub
push
or
xor
das
stc
lea
jae
ds
lret
cs
jl
mov
push
mov
stc
mov
xchg
lret
and
in
sub
mov
push
push
pop
push
push
push
loope
or
out
inc
cmp
or
jb
xor
jle
xchg
xor
mov
mov
push
jae
jns
pop
imul
pop
add
jno
mov
aaa
fists
jl
jmp
daa
out
cltd
cmp
pop
enter
cmp
js
push
jbe
fidivrl
test
in
sbb
add
scas
out
lret
mov
mov
xchg
insl
push
stos
sbbl
mov
xchg
lods
sbb
out
jns
cmc
cmp
push
arpl
push
fwait
lahf
bnd
mov
mov
mov
pop
mov
jb
movsl
pop
insl
and
sbbb
scas
or
add
cmp
push
stos
sbb
andl
push
mov
fistps
mov
test
imul
mov
shrb
or
loopne
cld
dec
popf
sub
mov
sbb
insl
push
push
in
arpl
push
cmc
push
das
pop
popf
clc
cmpsb
frstor
xor
rorb
sti
ffree
dec
sub
sbb
pop
mov
sub
and
mov
insl
rcrl
shlb
add
fildl
out
pop
mov
scas
mov
dec
pop
mov
jbe
imul
jb
lods
and
adc
mov
push
sub
test
xchg
mov
pop
out
cmp
jno
arpl
push
fadd
mov
and
push
in
adc
pusha
inc
fbld
lods
ljmp
cmp
dec
fldcw
repz
outsl
cmp
mov
hlt
cmp
inc
mulb
push
xor
nop
mov
cmp
addr16
mov
out
fidivrl
fucomi
rcll
cli
sbbl
sbb
cmp
lock
jae
add
add
sarb
and
mov
and
cld
or
jle
and
fs
and
cmc
mov
sarb
gs
xchg
dec
shlb
mov
dec
aas
mov
shll
sahf
mov
imul
test
and
pop
dec
aaa
mov
mov
jo
xor
es
icebp
gs
bound
shr
push
pusha
fcomps
adc
mov
jns
cmc
mov
jl
insb
jnp
add
sub
adc
add
pop
repz
push
popl
jbe
in
or
or
scas
movsb
sbb
iret
mov
call
pop
jg
lcall
add
inc
daa
lods
and
dec
pop
mov
inc
dec
sbb
das
fdivrs
insb
pop
lret
add
ret
jmp
mov
jae
jmp
stos
out
mov
insb
lret
dec
xchg
add
js
into
in
out
mov
mov
xchg
lcall
sbb
adc
dec
pop
push
cmp
or
push
bound
movsb
loop
mov
sbb
lcall
cmc
popf
jg
das
dec
push
icebp
out
mov
mov
out
stos
xchg
push
jae
out
mov
aas
xor
insl
push
ret
cmpsb
push
sbbl
cmp
xor
mov
push
shr
scas
and
push
mov
loopne
and
in
outsl
push
mov
xchg
dec
mov
ficompl
rcll
cmp
jbe
shrl
add
xchg
cmp
sub
inc
fstl
loopne
mov
das
cmpsb
mov
jle
sub
shlb
mov
out
push
or
and
pop
fwait
inc
adc
ss
cmpsl
mov
movsb
in
mov
insb
loopne
popa
mov
dec
cmp
xor
test
sarb
xor
pop
inc
mov
jae
jmp
adc
pusha
lods
mov
jmp
lahf
add
and
push
ret
mov
push
out
xchg
cltd
outsl
jae
fwait
movsb
movsl
mov
sub
sbb
jge
addr16
sbb
add
stc
out
cs
mov
push
fldcw
jl
shlb
mov
cmpsl
or
inc
xchg
aam
xorl
je
lea
pop
mov
push
mov
jno
gs
jmp
ret
fidivl
imulb
out
mov
and
pusha
xor
data16
jno
aaa
jecxz
mov
sbb
xor
scas
push
push
push
rolb
xor
jae
pop
fcompl
out
outsb
and
sbb
imul
xchg
sbb
insl
jle
stos
pop
push
pusha
cmp
enter
out
popf
jecxz
push
lcall
lock
jg
dec
fisttpl
andl
arpl
dec
int
int3
mov
std
mov
lea
dec
jae
mov
nop
dec
xchg
mov
mov
add
mov
push
pop
je
arpl
in
out
mov
mov
popf
cltd
dec
mov
pop
jb
sbb
and
pop
jae
dec
in
gs
add
pop
rorl
decl
scas
jg
lock
adc
mov
jo
push
push
fucomip
aad
in
fldcw
scas
sub
nop
out
mov
movsl
mov
stos
data16
fisubrs
push
mov
je
das
mov
sub
clc
negb
sahf
push
add
push
pusha
test
outsl
nop
sub
addl
lahf
lock
cmp
into
subb
inc
fidivs
imul
mov
les
scas
ss
pop
outsb
jg
loop
mov
cmp
mov
hlt
aad
jae
mov
inc
lret
lock
cmp
jbe,pt
push
jbe
sbb
scas
jns
adc
loope
xor
roll
push
lock
adc
adc
ss
xor
mov
fsubr
jb
push
push
clc
repz
ror
xchg
int3
and
pop
lock
mov
adc
pop
jae
push
jle
inc
adc
fdivl
lcall
xor
insl
mov
lret
mov
mov
mov
pusha
push
jno
push
lods
mov
and
shrb
pushf
js
adc
dec
add
mov
cs
bound
lret
shrb
je
sbb
xchg
arpl
push
aas
pop
int
cmpsl
mov
outsb
nop
jno
mov
xor
add
inc
and
pop
sub
fimuls
mov
xchg
adc
std
and
dec
push
cmp
int3
into
ss
mov
cmpsl
sbb
mov
gs
dec
pop
fdivs
inc
sarl
sub
std
or
adc
stc
mov
test
mov
xor
arpl
jne
out
inc
mov
in
add
or
les
les
lcall
jnp
sub
jge
test
mov
mov
dec
cmpsl
vunpcklps
in
sbb
push
push
out
inc
sub
in
mov
inc
push
mov
arpl
jno
data16
push
loope
cmp
jb
lret
lret
pop
imul
add
fnstenv
sbb
ja
popf
nop
xor
sbb
loopne
cmp
mov
push
jo
aad
fisubs
ljmp
pop
push
add
call
mov
pop
jo
push
mov
dec
jecxz
aad
subb
push
push
cmp
mov
jo
ret
sbb
cmp
inc
addr16
lret
scas
pusha
loope,pn
adc
push
add
jno
inc
iret
shlb
loope
add
popa
add
jo
ja
ljmp
mov
and
dec
fidivl
pop
imul
loopne
adc
in
inc
popf
in
xchg
xor
bnd
mov
jnp
pushf
push
mov
stos
xorl
add
ja
xor
or
ret
or
jg
jae
out
xchg
divl
leave
addr16
repnz
push
aad
in
inc
adc
inc
fistl
fldcw
stos
or
fistpll
arpl
mov
xor
rcll
xchg
test
shlb
xchg
xchg
push
inc
in
mov
aam
cmp
sti
xchg
je
icebp
xchg
adc
test
xor
or
cmp
jo
cmpsl
mov
or
xor
int
lock
aaa
iret
dec
and
fstl
dec
cmpsl
je
pop
or
ret
rcrb
aaa
mov
loop
cmp
leave
sbb
pop
jo
push
hlt
fucomp
inc
dec
sarl
pusha
and
xor
in
fsubs
enter
adc
dec
mov
fldenv
and
stos
mov
push
fistps
sbb
dec
sbb
jne
cmpsl
in
daa
sti
dec
xor
ja
out
push
jge
push
or
dec
or
icebp
xchg
inc
sub
or
orl
mov
leave
adc
xor
or
movsb
and
arpl
hlt
gs
sbb
mov
dec
and
fiadds
fisubrs
int3
push
add
fiadds
ud1
mov
aad
arpl
lahf
push
insb
push
mov
outsb
dec
test
and
movsb
mov
xor
add
xchg
pop
in
sahf
xor
cwtl
divl
pop
fwait
inc
jg
add
jae
out
jp
aam
out
jb
mov
push
mov
test
ret
imul
rolb
dec
je
add
lret
out
clc
mov
mov
mov
scas
xchg
rol
shrb
cli
pusha
rorb
xor
call
mov
jg
loope
cmp
jmp
int
push
and
inc
push
aam
mov
xor
inc
std
cmpsb
outsl
addr16
sbb
jb
clc
xchg
mov
sub
xor
mov
arpl
sub
mov
or
xor
add
cld
arpl
test
roll
std
mov
mull
mov
data16
repnz
mov
popa
test
rolb
rorl
push
aaa
cmpsl
mov
or
jno
js
test
testl
mov
fldt
lock
fdivrs
dec
adc
cmp
loop
sbb
push
adc
hlt
inc
outsb
ficompl
push
andb
or
mov
mov
pop
repz
sbb
ficoml
data16
and
sbb
cmc
bound
push
jle
movsl
mov
fcmovnb
lock
mov
mov
push
arpl
fistpl
rcrb
add
sahf
cld
sahf
mov
stos
icebp
lods
daa
xchg
stos
dec
sbb
ds
xorb
push
fidivs
jg
add
mov
dec
push
repz
mov
mov
mov
sub
jge
push
je
int3
ja
in
and
insb
and
xchg
push
lods
inc
clc
es
xlat
pop
sub
fisubs
xchg
jae
add
roll
stos
ja
cmp
shll
fsubl
mov
mov
shll
push
out
mov
shlb
movsl
or
fs
sbb
jne
inc
inc
dec
mov
add
enter
mulb
push
icebp
mov
add
push
mov
xor
xor
cmp
and
inc
lds
and
mov
lds
mov
andb
pop
push
jge
cld
nop
scas
push
jp
test
fdivp
inc
dec
cmpsl
imul
testl
cltd
scas
mov
inc
cltd
cmpsl
cmp
aam
pushf
aaa
sub
mov
in
imul
sarb
arpl
xchg
xor
or
jae
adc
jns
inc
int
out
repz
packsswb
adc
pop
pop
fwait
adc
out
jle
add
pusha
inc
imul
pop
aad
or
xchg
adc
scas
push
xchg
xlat
cmp
adc
mul
sub
mov
ret
xchg
loopne
jle
add
adc
inc
aam
pop
sbb
stc
jle
xchg
push
cld
fidivrs
xor
xchg
mov
add
sub
fsts
push
cwtl
outsl
push
loopne
xchg
sbb
inc
lret
loopne
sub
and
or
addr16
xlat
in
cmp
sub
jg
out
cmp
scas
fwait
xchg
sbb
bound
loopne
pop
fwait
xchg
daa
loop
lahf
lea
jae
mov
nop
adc
sti
and
xacquire
push
daa
xchg
jl
push
das
imul
cmpsb
xor
es
insb
inc
ret
dec
jo
xchg
adc
mov
testl
lock
push
decl
out
jg
stc
mov
push
rcll
jns
je
mov
cmpl
jg
repnz
jae
std
mov
dec
imul
dec
sub
xchg
daa
pinsrw
aas
sbb
cwtl
jle
inc
mov
pop
out
push
cmp
push
lea
in
imul
fcompl
insb
data16
adc
pop
push
arpl
flds
jae
add
cmp
les
dec
cmp
push
aaa
sub
leave
js
lahf
insb
hlt
addr16
cmp
sub
call
and
es
das
les
push
sahf
mov
mov
aaa
enter
imul
dec
push
lahf
fcmovnb
fistpll
pop
xchg
or
icebp
fnstcw
adc
repnz
xlat
cs
std
aaa
test
mov
cmc
xchg
pop
lock
inc
pop
mov
outsl
movsl
mov
std
cmp
pop
imul
pop
enter
int3
fwait
in
jnp
fisubrl
test
in
add
inc
lods
push
dec
adcb
jecxz
inc
jecxz
je
sbb
out
or
rcrb
test
mov
shlb
cmp
aaa
jge
mov
jmp
arpl
xor
lods
adc
jno
lds
mov
xchg
cmp
es
mov
xchg
cmpsb
jae
test
fs
sahf
and
and
push
jns
xchg
imul
frstor
mov
test
sbb
fisubrl
inc
or
mov
dec
movsb
outsl
imul
bound
mov
inc
xchg
mov
fs
jae
or
out
lds
mov
ret
shlb
inc
push
cmp
pop
fisubl
jo
repz
pop
lahf
hlt
inc
jmp
sub
push
ljmp
cmpsl
xchg
adcl
jae
in
inc
mov
add
popa
add
andb
adc
jb
xor
xor
shr
mov
sbb
call
and
mov
xchg
push
cmpb
xchg
push
xor
movsl
mov
jge
lods
jge
mov
sarl
push
and
sbb
jae
jae
mov
fiaddl
cmp
ret
push
inc
out
outsl
mov
fwait
cli
call
push
test
out
int3
mov
dec
dec
sbb
mov
movsl
sub
or
jb
fildl
jae
scas
loop
sbb
clc
dec
and
mov
jae
xlat
in
sbb
mov
xor
fs
sub
cwtl
fwait
push
pop
stc
shlb
jae
add
push
jbe
repz
push
sbb
into
cmc
in
testb
jle
gs
iret
inc
push
jecxz
mov
xlat
dec
sub
mov
ret
in
lock
push
mov
in
and
paddw
pop
cmpsl
fdiv
xchg
aam
nop
jae
pushw
fs
hlt
lea
loop
mov
sbb
out
loopne
and
std
movsb
int
sti
sbb
xor
sbb
mov
push
cmc
ss
inc
xchg
push
js
jp
mov
pop
or
daa
and
mov
insl
add
or
sub
xorb
enter
scas
cmc
or
ljmp
stos
ja
dec
lret
xchg
pushf
xor
sbb
pop
cwtl
jns
xor
jmp
pop
fcomps
loope
jmp
arpl
repz
cmpsl
jmp
rclb
lds
mov
loop
repz
insl
pushl
shlb
ret
sbb
in
loop
inc
jae
jno
add
repz
push
popf
cmp
sti
push
test
mov
pop
or
or
fs
jmp
adc
mov
jecxz
pop
pop
jae
andl
outsl
sub
inc
or
es
int3
je
jl
mov
mov
jg
aas
pop
xor
outsl
in
or
cmpsb
mov
imul
outsl
push
mov
addr16
add
js
jae
pop
inc
push
xchg
incl
nop
fidivs
in
sbb
incb
push
mov
insb
push
lods
mov
clc
loopne
and
ljmp
ss
xor
xchg
mov
cmp
jno
stc
test
in
inc
inc
lret
cmpsl
shlb
push
cmp
add
jmp
cmp
push
sbb
fadd
nop
mov
pop
sbbl
mov
lock
or
dec
adc
arpl
pushf
push
jge
insl
ficompl
gs
push
mov
mov
in
test
outsb
inc
adcb
xchg
xchg
mov
xor
jl
mov
sti
mov
out
inc
xor
movsb
test
pushf
mov
arpl
sub
push
cmp
mov
jb
xor
jnp
jae
insl
and
std
push
filds
int
imul
shll
mov
xor
hlt
add
push
mov
jle
pop
push
push
mov
mov
in
mov
fdivp
fwait
out
imul
push
fistps
rorl
pop
add
pop
ja
xor
pusha
data16
shlb
sbb
clc
jp
in
mov
in
cmp
pop
fildll
mov
bnd
jno
sbb
cltd
pop
adc
adc
fisttps
add
loop
aad
pop
adc
pop
mov
or
fdivs
mov
cwtl
dec
xor
mov
dec
sub
push
lock
dec
repnz
test
imul
outsb
xorb
add
fstl
lret
xchg
xor
loop
and
adc
xchg
les
jnp
movsl
pop
not
std
mov
cld
push
dec
out
pop
lret
and
outsl
arpl
adc
cmp
or
gs
lock
ret
lcall
hlt
es
jo
cmp
sbb
js
cmpsl
insb
mov
sub
in
mov
jae
mov
dec
in
sub
imul
data16
orl
mov
push
iret
or
or
cmc
sti
push
mov
lock
push
push
pop
into
dec
push
lods
sub
pop
popf
push
stos
in
imul
out
inc
push
je
or
mov
out
jmp
and
mov
dec
imul
or
lcall
mov
push
xchg
mov
stos
adc
jnp
mov
daa
fisubrl
ror
pop
adc
bound
and
jge
jae
test
inc
inc
or
ret
push
jns
mov
cmpsl
scas
jl
dec
shlb
sub
mov
xor
adc
xchg
xchg
mov
mov
and
cltd
clc
jge
mov
or
pop
adc
aaa
mov
movsl
call
xchg
add
sbb
out
sub
jle
loop
cmpsl
nop
test
dec
or
inc
jmp
sbb
in
fistps
sub
or
dec
jae
or
xchg
inc
mov
fdiv
pop
mov
cltd
sub
mov
int
enter
xor
cmp
jl
or
out
sbb
call
nop
fwait
jbe
push
sarl
adc
dec
mov
jne
and
out
rclb
and
pop
push
cmp
scas
insb
pop
ljmp
out
and
mov
push
popa
mov
add
test
mov
mov
jg
leave
lds
pop
sbb
loop
pop
mov
and
out
and
fs
mov
test
dec
test
out
push
pushf
shlb
mov
push
push
sub
push
jae
out
ja
pusha
jbe
sarl
dec
ss
data16
int3
int
scas
fsubrs
pop
jp
std
sbb
push
mov
add
sub
data16
mov
arpl
sbb
cmp
mov
mov
loope
add
jnp
or
pop
in
xchg
sbb
push
stc
jnp
ds
push
scas
outsb
fcomi
lret
jle
andl
vucomisd
in
addr16
adc
jmp
dec
std
imul
xor
mov
xor
adc
xor
add
in
cmp
pop
inc
push
adc
mov
xor
inc
lock
xchg
mov
mov
dec
add
rclb
push
push
xor
pop
jne
ret
pop
dec
shl
arpl
mov
fsubs
xlat
lds
mov
xor
dec
into
mov
jno
gs
mov
test
cmpsb
lods
lock
outsl
cmp
outsl
push
xchg
xchg
mov
push
fistpll
lods
adc
imul
adc
stos
push
mov
and
xchg
jae
sbb
gs
pop
mov
dec
cmpsb
or
mov
or
je
out
xor
push
xchg
bound
adc
xchg
std
push
mov
mov
xchg
in
push
jmp
cmp
pop
fsubl
add
js
jae
cmp
xor
add
enter
sbb
das
rcr
mov
push
addr16
arpl
jl
xor
add
push
repz
mov
jo
mov
mov
mov
jo
ficoms
stos
add
cld
js
cmpsb
aaa
add
inc
pop
int3
pop
in
cmp
cli
xor
inc
sub
dec
and
push
pop
pushf
fsubs
enter
sbb
xor
sahf
jo
mov
fsubrs
dec
cmp
sbbb
movsb
dec
fisttpll
dec
ds
je
inc
pop
xchg
es
jg
xchg
pop
in
dec
aaa
xlat
jo
mov
add
dec
push
fdivrp
or
jl
sbb
insl
pop
dec
mov
je
std
ss
das
xchg
jo
mov
jp
dec
lock
jb
iret
xchg
inc
enter
insl
jg
xchg
sub
test
mov
data16
std
dec
push
mov
jo
ja
aad
fwait
stos
sbb
stos
fdivs
fsubrl
xor
jo
mov
cmp
ret
xor
cmp
ret
and
mov
scas
jle
jmp
nop
cwtl
fsubrl
dec
les
jo
mov
cltd
lret
jle
cmp
loop
dec
lahf
sub
inc
jo
dec
lods
push
imul
push
mov
push
out
lods
xchg
icebp
adc
fs
insb
mov
jo
and
push
jo
xchg
or
adc
xor
add
add
sbbb
fwait
lahf
xor
test
loope
jle
out
jo
gs
out
xchg
int
orb
pop
mov
jo
pop
adc
xlat
jo
inc
lock
lcall
mov
test
test
scas
mov
pop
jo
or
loop
xchg
fdivl
adc
jo
adc
leave
push
stc
roll
push
cmc
mov
ss
shlb
sbb
ds
xchg
dec
jae
push
adc
shll
outsb
orb
es
ficompl
ljmp
mov
clc
ja
or
ret
sub
xchg
stc
pop
aad
fistpll
xchg
dec
inc
stos
fadd
jo
sbb
or
mov
jo
xor
cmc
jo
test
xchg
mov
fadd
movsl
nop
xchg
sub
inc
pop
pop
inc
js
aam
push
outsl
xorb
push
or
sub
cltd
nop
xorl
sub
jo
pop
out
xchg
scas
out
inc
jo
lock
dec
shl
push
jo
rol
ss
add
xor
arpl
sub
jo
scas
rcl
mov
add
stos
fistl
outsl
sbb
dec
je
out
pop
jae
dec
jo
push
xchg
dec
int3
push
movsb
jo
add
and
cmpsb
cmc
mov
ret
orl
insb
mov
jb
push
push
arpl
cmpsl
xor
and
ret
es
jo
inc
cmpl
sbb
add
jb
jo
or
ret
push
cld
les
sbb
aam
jo
xchg
out
hlt
jp
dec
ljmp
mov
xor
mov
loope
fldl
jo
jecxz
push
inc
mov
push
int3
jnp
mov
cmp
aas
or
shll
mov
repnz
cmp
jg
negb
cltd
popf
mov
cmp
test
nop
leave
mov
das
pop
inc
jle
add
pusha
cmc
mov
add
out
pop
ja
hlt
adc
aam
in
jp
gs
iret
es
fstpt
jge
xorb
add
jb
push
jo
stos
testl
mov
or
repnz
sbb
pop
and
insl
nop
inc
out
in
dec
jp
rol
dec
push
cmp
jle
fcmove
xchg
jo
arpl
jno
imul
xlat
jg
mov
jmp
mov
test
xchg
mov
incl
mov
add
cmp
jo
dec
int
pop
cmp
nop
stos
aaa
pop
enter
xor
jo
xor
mov
jo
test
mov
lahf
sbb
jp
pop
ljmp
jo
sub
mov
and
sbb
xorl
jo
mov
pop
outsl
cs
cld
mov
insb
push
add
mov
cmp
push
and
popf
orl
xor
jbe
inc
das
adc
inc
fiaddl
addl
bound
scas
cmpxchg
insl
fmull
test
push
mov
jo
inc
adc
fimuls
sbb
adc
push
jl
out
pop
enter
leave
adc
dec
mov
cmp
jo
sub
ljmp
or
push
xchg
fistpl
sbb
shrb
add
pushl
mov
lods
jo
cmpsb
mov
insb
lock
jmp
inc
ret
aad
mov
push
lods
add
ret
cmpsb
int3
jp
inc
and
and
sub
xchg
sbb
xor
xor
sbb
int3
cmc
xor
jecxz
ljmp
sbb
imul
xor
push
es
out
daa
test
jge
pop
out
call
mov
idiv
sbbb
imul
cmp
xor
sbb
push
fbstp
shr
or
icebp
in
ror
jo
dec
pop
push
pop
jecxz
xchg
inc
push
repz
cmp
push
mov
or
mov
data16
sub
int3
mov
outsb
jo
enter
aas
xor
jo
sbb
iret
insl
jo
pop
popf
and
andb
cld
pop
push
fnop
or
adc
out
xor
mov
or
nop
xor
xor
sbb
int3
cmpb
mov
jo
cld
adc
jb
jo
roll
rcrl
sbb
nop
sub
jl
movsb
cmp
push
push
adc
or
jo
fdivrl
in
imul
sbb
mov
jo
sub
push
lcall
xchg
addl
jo
jbe
jns
mov
dec
dec
mov
loop
popa
les
mov
jo
sub
mov
ret
cmp
mov
xchg
mov
std
bsf
push
pop
and
rcll
jo
mov
jo
fmulp
push
ffreep
lcall
out
push
mov
repnz
in
adc
and
out
fincstp
push
test
leave
push
sbb
imul
test
dec
stc
in
mov
and
das
pusha
fs
sub
fstl
add
jl
xchg
aam
mov
sub
or
mov
jbe
movsb
push
shl
add
pop
das
loop
daa
push
jo
inc
cmc
inc
adc
dec
jo
fiaddl
pshufw
jno
adc
jb
push
test
iret
mov
adc
ja
push
fdivs
mov
jmp
and
jns
enter
call
popa
xor
sub
xor
add
add
xchg
aaa
dec
push
cli
in
roll
jo
push
push
jne
jbe
dec
xchg
and
lret
ficoml
mov
jp
mov
rcrl
mov
and
jo
pop
subl
cmp
or
push
inc
dec
outsl
ret
addb
call
push
nop
dec
test
fmull
jbe
dec
inc
jne
data16
das
ljmp
std
test
fs
insl
add
sub
xchg
cmp
mov
jo
incl
es
mov
pop
jo
imul
fidivl
mov
xchg
jo
pop
sbb
and
pop
shr
lock
lea
lret
call
mov
mov
jo
enter
xlat
sub
aad
arpl
test
push
mov
inc
adc
and
js
jo
lods
push
fmul
lock
loopne
or
push
andl
cmp
jnp
js
je
stc
fwait
sbb
pop
jg
sahf
add
test
push
jnp
inc
inc
jo
mov
sub
add
sub
push
out
or
mov
adc
jne
or
dec
jge
lea
push
scas
mov
jo
push
add
cmp
scas
loope
push
sbb
mov
jb
fcompl
andb
loopne
es
lret
add
faddp
sub
inc
jae
aam
bound
add
pusha
fxch
or
std
push
lds
mov
andb
mov
pop
mov
jae
jle
mov
stc
call
es
or
out
jae
and
jne
test
inc
fcompl
lahf
mov
push
movsl
sbb
sbb
inc
cmpsl
movsb
div
adc
loope
push
adc
sbb
fptan
aaa
stc
repz
add
fisubl
cs
test
rol
jae
mov
inc
aaa
or
clc
or
out
xor
jg
fisubs
fdivs
push
lods
lods
out
pop
and
lahf
or
add
xchg
push
and
ja
arpl
ffreep
sub
dec
dec
jns
dec
gs
and
stos
imul
fnsave
in
mov
pop
out
xchg
notb
out
outsl
cmp
int3
rorb
outsb
jae
and
ljmp
dec
pop
jg
loop
push
jmp
jbe
and
push
testb
scas
cltd
or
stos
cmpl
into
scas
adc
cmp
mov
in
xor
jo
imul
sub
and
lret
lods
repz
ret
daa
sub
stos
push
xchg
sub
adc
pop
notb
js
cmp
jmp
or
or
mov
dec
dec
jo
xor
sti
pop
pop
push
jecxz
gs
mov
in
jo
adc
jl
mov
jb
scas
push
xchg
push
sbb
pop
jbe
jnp
inc
jecxz
call
jle
dec
repz
lret
jp
jo
cmpsl
dec
outsl
out
jo
jns
xor
cld
shll
dec
inc
xor
stos
xchg
mov
out
xor
gs
mov
incb
ja
jo
in
or
jo
sbb
mov
cmpsb
sub
jo
xchg
cld
movsl
mov
mov
mov
fnstcw
push
sahf
jo
fisubs
leave
push
and
mov
mov
int3
lods
je
sub
loope
andl
stc
aas
movsb
push
jno
pop
jo
dec
rcrb
arpl
clc
aam
mov
decl
pop
mov
mov
and
out
sbb
add
jo
sub
fmulp
shll
mov
test
subb
jo
dec
pop
add
stc
jbe
and
adc
pop
sbb
mov
mov
rclb
jp
jo
jecxz
mov
sbb
push
cs
sbb
inc
pop
mov
hlt
jo
addl
ss
push
in
aad
jp
push
mov
push
lea
mov
push
mov
xchg
inc
iret
cmc
mov
mov
jle
jg
cwtl
lods
fs
je
push
cmp
andb
cltd
mov
push
jo
in
orl
mov
stos
xchg
call
loope
lods
call
xlat
aam
sub
mov
inc
stc
ret
or
mov
mov
insb
push
lcall
lahf
jns
push
dec
push
out
cs
out
fs
mov
lock
push
movsl
lahf
jnp
fnstsw
lock
fistl
test
in
les
imul
fildl
lock
push
cmp
nop
xor
mov
stos
cmp
mov
imul
mov
dec
mov
lea
jecxz
sbb
ffree
dec
jmp
pop
mov
mov
ljmp
dec
fstps
pop
in
out
sbb
and
dec
adc
mov
jmp
in
lahf
ljmp
push
testl
clc
mov
inc
sub
movsl
clc
in
imul
ret
arpl
cmp
out
repz
push
stc
xchg
mov
mov
xchg
jae
mov
and
jb
or
mov
shlb
push
icebp
jno
push
adc
adc
mov
dec
cmp
mov
lcall
test
jo
push
int3
std
mov
pop
icebp
lock
jno
out
sbb
rcll
out
sbb
jle
mov
out
sub
aas
mov
out
dec
xor
and
jns
loop
and
test
sub
les
jg
call
call
sub
cmpsl
aad
fcoms
scas
add
std
add
jmp
add
jnp
jle
push
xchg
or
out
or
mov
rorl
xor
add
xchg
adc
fbld
pushf
cmp
gs
nop
add
pusha
or
mov
add
xchg
mov
imul
in
push
out
stos
inc
lds
fmuls
push
cmp
movsb
pop
or
movsl
out
fs
pop
enter
mov
jp
cld
sbb
pop
add
adc
imul
dec
dec
push
mov
push
mov
cmp
inc
push
xor
inc
sub
inc
daa
xor
cli
aam
enter
popl
jae
cmp
mov
push
jo
call
xor
mov
lahf
adc
test
and
or
cld
fxrstor
or
or
push
xchg
pop
lds
mov
jo
leave
add
leave
nop
jae
out
inc
xlat
cmp
js
daa
pop
xor
dec
cld
pop
add
ss
jl
mov
add
jmp
inc
dec
pop
cmp
test
sbbb
push
dec
push
pop
xchg
mov
fwait
insb
fildll
out
lret
push
mov
jae
adc
push
loopne
or
push
mov
sub
sub
xchg
or
std
aaa
inc
insl
lock
lods
mov
loope
mov
push
adc
inc
inc
call
in
push
push
faddl
xchg
and
add
movsl
ds
dec
and
shrl
push
lods
aad
and
sti
out
jo
fistpll
fldl2e
sar
cltd
ja
out
outsl
aas
xchg
shr
jmp
in
push
scas
pushf
xchg
sti
jns
xor
rclb
mov
imul
das
pop
push
arpl
imul
ret
insb
push
jl
stos
ja
push
adcb
sbb
clc
mov
jmp
fsubrs
or
dec
aas
std
xor
je
jno
in
xlat
stos
out
aas
sub
fildll
pop
xor
push
xchg
mov
js
jnp
xchg
into
sbb
jle
mov
popa
jge
adc
sarb
add
cmpsb
jg
movsl
xor
or
mov
aad
sub
jmp
test
dec
mov
movsb
ja
jo
sbb
mov
mov
dec
add
leave
or
xor
aad
scas
lods
jg
nop
sub
int3
inc
ret
jo,pn
movl
pusha
jo
mov
shlb
sub
pushf
insl
bnd
add
loope
orb
nop
lahf
call
je
mov
insl
mov
insl
or
gs
mov
push
jo
in
jne
movntq
lret
nop
mov
pop
fwait
ret
cmp
sbb
outsl
jne
add
stos
or
movswl
repnz
xchg
int
out
cmp
jge
mull
xor
pop
jb
mov
sarl
sahf
jo
out
and
cwtl
hlt
jo
push
push
ja
xchg
sub
jo
pop
add
mov
lods
fistpl
je
and
hlt
dec
call
nop
iret
mov
sub
dec
pop
loopne
je
popf
jo
test
aas
xchg
pop
shrl
push
sbb
and
ljmp
jg
mov
dec
and
xchg
leave
and
jo
out
popa
ds
sub
movsl
xchg
loopne
pop
pop
daa
mov
jo
mov
clc
aad
jg
stos
js
jo
mov
xor
push
mov
lahf
ss
orb
jne
push
sbbb
cwtl
jle
jo
sub
vpshuflw
jns
jo
sbb
add
mov
mov
cmpsl
outsb
insl
out
push
mov
pop
sbb
jo
lods
sub
cmp
out
cld
xor
dec
mov
shll
inc
sbb
sbb
push
fadd
dec
xchg
daa
addb
xor
cli
cmpsl
popf
or
mov
mov
sub
push
jns
or
dec
out
fwait
dec
fdivl
lcall
jo
in
mov
and
fnstsw
nop
mov
cmpsl
nop
xchg
adc
lret
jo
out
cmp
xchg
call
popf
pop
jo
popa
out
xor
test
out
or
ja
js
dec
stos
mov
addl
icebp
ja
pusha
cmp
jo
push
call
jo
clc
lret
or
pop
addb
and
add
stc
inc
dec
call
jge
int
fsubp
cmpb
out
sbb
jo
jmp
sub
test
imul
enter
clc
fcoms
xchg
sbb
sbb
call
cmp
push
inc
xor
outsl
ficoms
repz
jo
je
sub
ja
push
xor
jbe
jo
insl
fmuls
xor
or
out
mov
jl
rolb
fdivl
cs
cltd
xlat
and
out
subb
or
sbb
stc
mov
cld
sub
cltd
dec
js
xchg
sub
in
pop
cli
jmp
jae
data16
xchg
inc
sub
repnz
add
and
popa
inc
cmpb
addl
js
int
adc
jo
jmp
xlat
mov
jo
mov
imull
mov
xor
jns
fwait
jo
mov
ret
cli
push
cmp
cmc
fdivl
addl
jb
stos
sub
int
pushf
cs
inc
sbb
icebp
fs
push
jbe
jge
fwait
insb
ja
ret
mov
aad
fcmovnb
les
dec
and
push
imul
push
ljmp
clc
pop
jecxz
nop
icebp
je
es
push
pop
nop
jae
jnp
loopne
jo
dec
or
jmp
xchg
mov
jo
lds
mov
je
xorb
xchg
mov
mov
sbb
push
jmp
mov
leave
mov
adcb
sarb
fs
push
leave
push
jae
jecxz
nop
mov
fucom
jo
scas
cmp
rorl
std
in
adc
test
rorb
mov
push
hlt
add
dec
pop
insl
lea
mov
ds
jo
ret
jbe
sub
rcll
xchg
std
pusha
inc
pop
jo
sbb
add
xchg
out
aas
mov
stos
mov
call
mov
hlt
jmp
mov
jl
stos
in
jp
movsl
pop
jle
inc
es
icebp
adc
add
cmp
repnz
js
mov
mov
cmpsb
stc
lds
mov
xchg
mov
bound
arpl
sub
addb
lods
nop
mov
mov
je
push
fsubrl
jecxz
imul
stos
push
fwait
jo
inc
jb
cmpsl
xchg
rol
jo
in
jno
pop
addr16
cmp
or
xchg
cld
pop
lods
mov
or
inc
jmp
mov
in
inc
pop
mov
and
pop
jo
cmp
mov
mov
ficomps
mov
pusha
repz
repnz
lcall
dec
xor
xchg
push
sbb
fs
bt
inc
push
outsb
jg
loop
test
xchg
andb
shrb
push
mov
cmc
mov
daa
jo
xchg
popa
sti
aam
jnp
jle
sub
andb
dec
js
test
repnz
leave
aam
pop
dec
xchg
xor
cwtl
inc
pop
push
andps
mov
add
int3
adcl
push
imul
dec
in
loopne
jl
xchg
lahf
sub
jo
or
push
dec
les
add
xchg
cmp
fldenv
in
jo
call
ret
cmp
fsub
pop
xchg
adc
shlb
push
popa
fcomps
icebp
push
rcrb
movsl
push
outsl
ret
cmp
adcl
mov
push
fstl
call
int
shlb
push
scas
lret
and
pop
stc
push
xor
popa
out
nop
xchg
xlat
arpl
pop
fidivl
cli
xchg
jo
sbb
dec
cmpsb
push
jne
jo
jb
lds
dec
inc
and
dec
inc
jo
into
cmp
insl
jo
jl
mov
mov
sub
jae
pop
imul
xchg
mov
sub
in
test
or
xor
push
sub
mov
ja
clc
lock
hlt
or
stc
loop
aam
cs
pop
addl
and
outsl
push
mov
inc
repnz
cmp
stos
push
cmp
sub
cmpsl
js
cmovl
daa
aam
je
decl
out
addr16
fidivs
xor
and
insl
jo
notb
adc
mov
push
cld
xor
sbb
in
cmp
jecxz
mov
rolb
jl
ss
js
pop
push
and
xchg
fisttpll
sub
out
ja
jo
xchg
mov
dec
sti
roll
aaa
sub
int
das
and
add
jo
outsl
pop
aam
cmp
add
push
repz
into
jo
out
push
pop
mov
add
pusha
push
push
roll
scas
dec
xor
imul
dec
outsb
pop
push
paddusw
xchg
sbb
cmpb
jo
fnstcw
jg
sbb
aas
sahf
scas
jne
jo
or
xor
sub
test
jo
cmpsb
pop
xchg
shll
xlat
pop
cmpl
rolb
jns,pn
lret
pop
fs
mov
sub
jo
fstl
xchg
test
cs
insl
jo
jne
out
and
aad
outsl
ja
push
out
fistpll
jle
mov
leave
lock
mov
sbb
bound
fcmovu
inc
push
out
scas
cmp
rcpps
mov
push
xchg
jb
jnp
cmp
xor
in
or
cltd
fidivrl
jnp
push
inc
arpl
dec
iret
insl
inc
xor
jno
push
jns
nop
and
add
ds
in
mov
out
daa
jo
dec
mov
add
jae
xor
sub
dec
sub
je
jo
in
stos
jecxz
rorb
iret
cmp
sbb
push
or
movups
inc
mov
pop
rol
push
setne
loopne
mov
js
imul
imul
dec
push
dec
cmpsb
jo
les
sub
cltd
xor
jle
stos
adc
or
pushf
jl
lret
bound
test
pushl
cmc
xor
mov
icebp
pop
insl
fistps
int
jmp
mov
pop
adc
and
test
dec
mov
test
loopne
pop
cs
in
mov
test
adc
enter
ljmp
dec
subb
add
mov
push
jp
cld
inc
pop
mov
pusha
arpl
in
test
aas
sbb
pop
pop
ret
sub
add
xor
aad
mov
jge
pop
iret
xor
mov
and
xchg
mov
gs
push
pop
mov
mov
mov
aas
mov
in
or
jle
shlb
filds
test
jns
push
push
roll
lret
ror
ret
or
aad
test
cmc
push
movsl
or
icebp
and
xchg
clc
sarl
repz
js
outsb
xchg
push
push
pusha
arpl
mov
mov
mov
sbb
xor
stos
adc
sub
sub
fidivs
sarl
jns
movsl
int
inc
xlat
lcall
hlt
mov
pop
mov
jae
int3
sub
shll
insl
push
das
fdivl
inc
xchg
stos
and
mov
adc
jge
in
fnsave
outsl
mov
in
dec
ljmp
xor
mov
mov
fwait
add
in
add
sbb
mov
aad
mov
int
frstor
xor
xor
insb
mov
dec
out
xchg
cmp
fildll
mov
mov
jns
push
fcomip
cmpps
fdivs
je
dec
push
and
xchg
lock
mov
imul
fdivrp
adc
jg
cld
repz
or
pop
mov
push
mov
jg,pt
imul
mov
xchg
icebp
jge
insb
push
push
repz
in
sbb
pusha
in
xor
mov
mov
call
movsl
mov
leave
add
popf
and
sub
push
xor
mov
pop
sbb
dec
nop
fiadds
shll
inc
arpl
xchg
jb
scas
dec
shrl
loop
mov
in
scas
dec
xorb
test
jmp
mov
fwait
push
addr16
inc
cli
int3
push
es
addr16
dec
jae
sbb
push
in
push
xor
and
mov
mov
scas
insl
loope
xchg
js
mov
repz
inc
inc
xor
mov
shll
mov
bnd
mov
bound
and
xor
sub
scas
sub
sbb
mov
cmpsl
dec
mov
jb
fwait
cli
ror
insb
push
mov
mov
sbbb
imul
das
jns
push
imul
adc
clc
dec
push
push
das
hlt
lret
mov
pop
and
push
cmpsl
sbb
pusha
push
imul
std
cs
arpl
mov
mov
jp
inc
repz
dec
mov
sub
add
fucomip
mov
imul
pop
dec
mov
pop
cltd
push
test
push
cmp
leave
pop
addr16
or
fnstenv
add
stos
icebp
adc
jo
leave
lret
jge
jae
outsl
inc
inc
push
or
xor
fidivl
push
inc
insb
arpl
rorb
fyl2x
stos
gs
inc
dec
push
adc
mov
adc
inc
sbb
mov
outsl
or
cmpsl
scas
push
mov
xor
repz
cmpsb
test
jmp
mov
andb
pop
or
in
fs
mov
jne
cmp
add
pop
fbstp
cs
jne
stc
and
lcall
or
xor
pop
ja
ja
xor
sbb
cwtl
scas
jg
idivl
jbe
imul
push
mov
adc
lahf
jle
or
jns
mov
pop
cmp
push
cld
dec
dec
nop
aas
addl
jae
mov
pop
fistpll
or
es
out
jp
out
push
mov
testb
arpl
stos
jb
sbb
gs
push
xchg
inc
sbb
inc
andb
and
pop
push
iret
jge
adc
jmp
data16
imull
sbb
fisttps
or
add
gs
std
pop
pop
mov
mov
xlat
pop
jge
sar
mov
mov
outsl
repz
xchg
jmp
ss
and
jg
push
js
jge
push
pop
ds
or
test
ss
enter
out
ja
repz
mov
xchg
out
clc
inc
insl
push
insl
fldcw
jmp
nop
push
scas
and
in
push
lahf
sbb
aaa
sub
pop
cmc
repnz
adc
jge
inc
ss
cmpb
adc
aam
ds
dec
push
ss
aaa
xchg
mov
add
dec
dec
xor
sbb
or
inc
cmp
pop
stos
rorb
scas
test
mov
push
mov
mov
pop
scas
add
je
jae
sub
push
sub
in
les
and
or
lds
xchg
add
sbb
lahf
test
mov
fldl
mov
js
fbld
stc
stos
adc
adc
pop
jns
mov
jl
sub
or
add
or
mov
in
mov
mov
mov
or
push
repz
lock
cmpsl
js
cmp
aad
orb
jo
arpl
adcb
push
jo
insb
mov
mov
mov
aam
in
je
ret
notb
mov
xchg
sbb
jnp
outsb
pop
dec
rorb
inc
jne
bnd
add
or
insl
jmp
in
lds
mov
jbe
repz
sarl
add
repnz
mov
lea
ds
push
xor
and
jae
out
jae
dec
and
outsb
addb
sbb
cli
test
sub
mov
cmpsb
imul
mov
fldcw
mov
pop
or
jg
sub
div
fldl
inc
insl
mov
sbb
dec
cmpb
jno
push
out
jl
int3
or
js
lahf
ret
xor
imul
fisttps
mov
sub
insb
icebp
push
fimuls
leave
scas
cmp
jmp
xlat
pop
lock
add
inc
in
call
mov
add
movsb
call
cmpsl
shlb
outsb
out
ret
dec
outsb
push
out
fiadds
add
jle
dec
outsb
push
fucomip
aad
cmp
addr16
xchg
jo
shl
gs
pop
push
fisubrs
inc
data16
arpl
fdivs
enter
insb
movsl
data16
nop
push
loop
insl
inc
push
dec
mov
jge
scas
cmp
nop
mov
pop
sub
idiv
mov
pop
push
dec
inc
mov
dec
push
or
push
adc
inc
out
sbb
pop
fisttpl
mov
lods
inc
scas
ja
mov
push
jae
sbb
ret
mov
and
notb
stos
ret
repz
loope
pusha
mov
fcmovbe
lds
xor
insl
mov
xchg
mov
fs
scas
cld
xor
pop
mov
or
dec
addr16
cmc
jae
xchg
inc
jne
mov
xchg
add
dec
test
cmp
cli
xor
sbb
or
outsb
dec
mov
test
imul
pop
inc
sub
test
mov
add
add
fdivl
lock
mov
pop
jns
imul
sbb
int3
inc
dec
sbb
fs
mov
insb
jecxz
jbe
push
inc
aam
jae
sbb
bound
insb
mov
addb
pop
push
imul
dec
jae
jno
jg
jle
push
icebp
rcrl
and
mov
insb
into
outsb
push
push
addb
mov
inc
fisttps
lahf
mov
stos
mov
mov
mov
in
mov
lahf
pushf
pop
rcrl
jge
gs
mov
mov
test
and
jle
arpl
xor
lret
pop
incb
inc
fcmovnbe
mov
push
sub
stos
pusha
lds
stos
je
inc
lret
pop
lea
and
push
out
push
shrd
adc
mov
cltd
sub
test
sub
pop
shll
lds
jecxz
mov
push
test
mov
outsl
arpl
xor
jnp
add
icebp
sbb
inc
gs
fnsave
jns
xor
fcompl
cltd
adc
inc
sub
push
jo
fistps
dec
add
mov
fsts
cli
call
push
rolb
mov
test
push
in
jge
shlb
pusha
jae
jnp
bound
mov
dec
adc
lahf
scas
adc
icebp
subb
sub
inc
out
aad
mov
adc
mov
add
cmp
in
frstor
xchg
jae
adc
adc
lret
mov
jmp
sbb
mov
insl
lret
andb
loope
pusha
shll
dec
cwtl
ret
sbb
push
ss
and
or
mov
fmuls
pop
enter
mov
arpl
cmp
ja
loop
jle
mov
push
in
inc
pop
xchg
cmp
dec
not
jnp
das
jg
mov
insb
lret
daa
aas
push
imul
ss
pop
sub
rcl
call
out
mov
ret
in
xchg
in
ja
call
adc
sbb
lods
mov
jb
or
lahf
pop
or
out
dec
pop
jmp
fs
stos
adc
xor
xchg
and
out
enter
mov
movl
dec
mov
pop
or
jg
bound
ds
imul
adc
out
push
mov
imul
ret
xchg
stos
mov
mov
jmp
leave
or
outsb
sub
orb
dec
test
das
cmp
jg
imul
stos
movsb
js
or
xchg
popf
sarb
push
jp
or
adcl
mov
lret
ja
stos
jae
insl
add
out
push
cltd
or
out
lcall
xor
loopne
dec
mov
subl
ss
xor
js
out
popa
jg
std
into
mov
push
das
and
pop
xor
call
out
lcall
std
lea
jle
push
incl
imul
and
repz
in
sub
and
mov
push
shrb
pop
enter
mov
push
cwtl
repnz
inc
outsb
pop
or
stos
inc
scas
cwtl
add
sahf
push
icebp
in
xchg
out
inc
sbb
mov
xchg
scas
iret
or
int
sbb
fildl
fsubl
aas
insb
addr16
jle
dec
nop
cmp
lea
xor
imul
ds
rclb
popa
fisttpll
jns
and
pop
sbb
pop
mov
jle
jno
inc
mov
push
pop
push
jg
jge
idivb
shrb
sub
loope
outsl
scas
mov
outsb
shll
or
shl
cmp
out
bound
bswap
shlb
imul
dec
pop
push
pop
clc
cmpsb
mov
gs
lret
mov
lock
cli
cmp
jmp
pop
int3
adc
adc
push
leave
in
orb
cwtl
cltd
aam
push
pusha
icebp
popf
jns
in
lret
dec
cmpsl
hlt
test
movsb
pushf
sub
gs
outsb
add
out
outsb
cmc
shll
sarl
mov
cmpsb
inc
std
push
test
mov
mov
nop
mov
inc
jl
xor
mov
jl
sub
add
push
push
sbb
lds
jae
xor
repnz
loopne
mov
cmp
push
call
loope
or
dec
ljmp
test
iret
outsl
adc
out
fmul
lret
pop
adc
sbb
inc
test
adc
lret
movb
or
or
pop
in
inc
mov
pop
daa
inc
xor
mov
push
jecxz
cmpsl
add
sti
xchg
xchg
out
xchg
fucomip
fsts
cmp
pop
mov
sub
jmp
or
mov
lds
testb
pop
inc
stos
pop
jo
fucomip
shrl
xchg
das
sbb
in
adc
ljmp
scas
pop
mov
sbb
or
xor
fs
out
ja
add
mov
enter
push
andl
push
dec
outsl
pop
mov
imul
icebp
jg
push
inc
fidivs
frstor
jecxz
movsl
add
mov
mull
ret
cltd
call
xchg
imul
mov
insb
cmc
sbb
dec
jp
fstl
push
ss
mov
cmpsb
jg
pop
push
dec
movsl
leave
or
add
scas
push
repnz
sub
pop
rcrb
inc
stos
mov
push
movb
cld
jo
ret
jae
popf
shl
xor
call
inc
rorl
jne
pop
pusha
pop
push
shlb
mov
sahf
fidivl
jg
fisttpll
inc
mov
and
pop
cmpsl
fwait
jmp
push
sub
test
lock
arpl
inc
jl
inc
push
sub
push
cltd
cmpsl
inc
mov
icebp
setl
jg
ljmp
gs
je
std
data16
sub
ja
das
imul
into
sub
push
popf
push
arpl
and
js
mov
jns
xchg
mov
cmpsl
out
mov
push
ret
std
in
mov
sahf
sti
repnz
mov
cmp
mov
out
arpl
pop
adc
push
hlt
push
push
mov
stos
and
add
mov
adc
out
mov
push
mov
and
insb
repnz
mov
mov
pusha
shlb
jg
or
imul
jge
mov
xchg
fwait
and
jle
push
lret
inc
int3
shrb
stos
xchg
sbb
ljmp
dec
jae
int3
shrb
adc
rolb
insb
popa
sti
pop
jg
push
jb
lcall
je
subb
sbb
fucomp
cmp
xor
lods
dec
add
and
jae
dec
aad
add
lahf
fs
or
sub
push
pop
jnp
cmpsl
sub
lret
std
mov
rorl
iret
insb
movsl
out
stos
push
cmpsl
xchg
cmp
adc
rol
lods
push
pop
or
xor
mov
shll
jne
and
sbb
xor
call
jo
arpl
sbb
cmp
sub
or
pop
xchg
add
fldl
in
push
mov
scas
int3
push
lock
xchg
scas
ljmp
call
test
imul
cmp
dec
jae
repnz
loopne
mov
mov
jb
jmp
or
std
idivl
iret
fs
stos
pop
inc
inc
scas
out
push
xor
cld
mov
test
repz
fbstp
mov
dec
nop
cmp
pop
popa
iret
or
stc
jo
xor
ret
in
icebp
jo
mov
sub
pop
in
lcall
enter
xor
push
js
cwtl
in
lea
push
add
jno
and
inc
sub
mov
jg
je
lcall
out
lahf
pop
jo
jmp
fsubr
add
nop
mov
mov
je
sbb
adc
lcall
push
cmp
test
cmp
xchg
cmpsl
jo
or
sub
outsl
jp
cs
jo
stos
ljmp
or
xor
pop
dec
cmp
insl
adc
lcall
adc
add
inc
jp
xchg
inc
push
out
lcall
clc
jns
cmc
test
mov
int
lods
mov
ret
iret
fisubrl
popl
cmp
ds
inc
jge
fstps
shlb
aaa
stc
mov
lock
movsb
lahf
push
jns
jo
imul
push
adc
mov
sbb
sub
xchg
nop
aaa
mov
inc
sbb
jo
sbb
fisubrs
repz
ss
inc
mov
pop
test
xor
popf
xchg
repz
jle
mov
jo
fistps
lret
mov
sub
sub
mov
out
xor
sbb
rclb
rcrl
bound
pop
xchg
dec
out
sbb
inc
call
aaa
xor
das
jo
xor
fcmovbe
and
pop
jo
cmp
in
xchg
cmp
or
or
push
mov
shl
or
jo
xchg
cmpsb
pop
lds
pop
insl
or
or
jae
loope
push
ret
imul
xor
add
xor
pop
mov
add
test
push
fcompl
xor
mov
ficomps
ffreep
cwtl
lret
adc
outsb
es
sbb
mov
xchg
jns
cli
xchg
push
jg
mov
lock
stos
jg
ja
or
jns
stos
add
pop
ljmp
in
inc
scas
pop
jne
and
jg
insl
bound
pushf
xor
xorl
pop
mov
and
mov
and
mov
inc
ss
sub
dec
dec
sbb
mov
mov
orb
sub
adc
pop
push
sbb
out
adc
push
in
push
fistl
mov
mov
outsl
movsb
fstpl
jge
popf
xor
and
xchg
inc
das
fs
xor
jp
insb
inc
and
fnstcw
test
arpl
xor
dec
cmp
or
das
xchg
push
fwait
sbb
lahf
pop
scas
int3
movsl
loope
push
mov
roll
sub
inc
movsl
es
or
inc
mov
add
je
cmpb
setne
cltd
adc
cs
push
adc
stos
jb
or
out
pop
mov
jl
mov
or
sbb
in
adc
test
sarb
pushf
cwtl
bound
dec
or
xchg
add
and
xchg
xor
ja
pop
cmpsl
ljmp
jae
and
in
push
mov
ljmp
push
sbb
imul
call
dec
scas
fildl
iret
into
loopne
push
fsubrl
mov
test
or
scas
dec
hlt
call
cld
test
mov
add
test
sub
sbb
pop
pop
aas
xchg
mov
hlt
push
and
pop
cltd
inc
mov
shrl
mov
jae
sti
add
jle
jae
mov
jnp
add
jo
pop
iret
push
data16
jo
mov
mov
mov
push
mov
dec
add
lret
lret
jmp
fidivrl
mov
mov
int
scas
cmp
nop
scas
sbb
sbb
adc
add
sub
mov
jle
arpl
in
push
dec
pop
ds
add
inc
pop
jae
dec
hlt
and
movsb
adc
cmp
add
push
jg
jp
popf
add
cmp
mov
in
negb
jg
xor
inc
lock
aad
cld
rorb
xor
mov
sarl
push
lock
lods
lods
xchg
cmpsl
loope
aaa
aad
pop
icebp
sahf
ds
push
cmp
aad
subb
xor
xchg
arpl
hlt
mov
shr
imul
dec
mov
cmpsb
scas
dec
pop
sub
std
data16
mov
adc
popa
cs
jne
push
cmp
push
mov
sub
cmpsb
je
in
xchg
cmp
xchg
jp
sbbb
out
lret
cmp
out
arpl
mov
xor
in
dec
cltd
dec
pop
das
scas
mov
add
out
std
cmpsl
stc
clc
lret
fs
push
dec
add
cltd
mov
sub
inc
sbb
cmp
mov
loop
sub
fsubrl
jbe,pt
popf
test
arpl
jne
ds
push
adc
push
cwtl
jecxz
scas
mov
outsl
add
icebp
outsl
cli
add
adc
andb
mov
lods
je
xor
std
and
pop
lahf
xchg
push
mov
mov
push
jle
lea
lcall
pop
fidivs
mov
inc
ljmp
jl
lret
cmp
pusha
push
jns
cltd
push
inc
jns
xor
add
mov
in
cld
lret
loopne
mov
mov
sbb
daa
popa
jecxz
cld
lods
mov
dec
pop
in
lahf
dec
int3
inc
call
fucomip
insb
loope
mov
inc
adc
push
aam
les
mov
jne
outsb
jns
andb
sbb
cmp
push
push
sub
mov
jg
push
mov
ror
fdiv
sbb
stos
mov
idiv
imul
pop
adc
mov
adc
mulb
cld
jo
arpl
rcll
data16
dec
leave
mov
sbb
and
fmul
jmp
cmp
cmp
arpl
test
jnp
arpl
int3
ss
repnz
mov
push
shrl
adc
fiaddl
dec
sarl
in
push
pop
and
mov
les
mov
push
add
cltd
negl
faddp
stos
ret
push
jo
jb
scas
lahf
or
dec
xchg
lret
jnp
xor
in
pop
call
jne
js
fidivrl
jno
jae
imull
loope
sbb
lods
insl
hlt
cmpsb
jle
add
mov
mov
xor
ja
or
cld
push
jae
adc
mov
mov
leave
xchg
push
adc
cmp
repnz
mov
xor
fs
aas
inc
cmp
dec
imulb
lcall
pop
call
xchg
adc
cs
scas
pop
push
jle
xor
das
fstps
test
in
insb
imul
into
add
push
push
bound
cltd
out
fsubrp
xor
mov
cmp
scas
lea
scas
adc
mov
mov
ja
ljmp
jmp
imul
sbb
sbb
std
push
dec
mov
inc
mov
cmp
add
pop
enter
or
cmp
jns
int3
lods
inc
mov
sub
jae
or
xchg
lret
xchg
jle
insl
mov
mov
hlt
or
and
clc
fs
push
lret
or
xchg
push
dec
jg
push
sbb
xor
cmp
push
xor
fimuls
mov
pop
jge
add
cld
jbe
dec
and
adc
out
fs
adc
lret
xchg
push
xchg
ret
xor
outsl
sbb
les
scas
inc
jle
pop
jg
sbb
stos
xor
arpl
xor
sub
lds
scas
std
mov
xchg
and
mov
sub
xchg
xlat
shll
lds
sub
mov
inc
jl
sub
mov
inc
cmp
sub
pusha
push
mov
out
sarl
push
or
sbb
dec
add
stos
mov
test
or
xor
popl
mov
jno
mov
test
dec
scas
js
pop
or
in
mov
aaa
mov
pop
inc
div
inc
addr16
cmp
push
xlat
and
std
sbb
inc
pop
out
push
push
dec
dec
pop
mov
rcr
adc
mov
jp
jae
fcomps
dec
gs
ss
dec
shrl
insb
orl
js
nop
std
inc
cmpsb
shll
adc
push
jmp
add
jnp,pn
scas
push
xor
loope
mov
jae
out
xchg
or
scas
ja
or
idivl
jmp
cli
cmpsb
lret
jg
aad
inc
pop
out
pop
movsl
jmp
lret
sbb
fidivs
mov
out
sbb
adc
lock
mov
aad
int3
inc
push
fnstsw
jo
mov
pop
jns
cmp
jnp
arpl
lods
dec
daa
das
bnd
cmpsb
jp
scas
add
push
push
fildll
cmp
cmpsl
scas
sbb
shlb
in
int3
daa
andl
test
mov
loope
push
jnp
cwtl
js
jne
and
jns
cltd
push
pop
mov
clc
and
xor
clc
or
inc
call
jae
cmpsb
mov
or
pushf
mov
pop
push
push
ficoml
sbb
dec
jge
xchg
stos
sarl
dec
mov
adc
movsl
and
ljmp
jae
lret
cmp
xchg
popa
sbb
arpl
aas
test
or
out
sbb
loopne
mov
sub
shrl
cld
bound
cltd
push
sbb
dec
sti
into
mov
adc
and
xchg
sbb
rol
or
or
sbb
rcl
gs
or
pushf
packsswb
or
out
js
mov
out
inc
sub
bound
push
repz
jmp
fisubs
mov
scas
and
mov
mov
testb
test
lcall
repnz
inc
aaa
and
lahf
adcb
lods
gs
int3
dec
jmp
push
mov
arpl
scas
mov
push
lret
scas
call
scas
faddl
lock
rcrl
add
lods
call
call
data16
mov
lds
aas
popa
jmp
pop
fidivs
xchg
fdivl
sbb
and
std
fsubl
ss
ja
lds
push
and
cmpsl
or
enter
push
out
dec
insb
rcrl
es
and
imul
arpl
or
inc
xchg
insb
outsb
pop
dec
adc
add
pop
jae
test
cmpsb
xor
push
int
jae
xchg
or
mov
arpl
lahf
mov
push
add
nop
xor
pop
test
dec
clc
mov
xchg
push
jae
adc
cmp
divl
fxch
add
xor
outsb
jmp
jne
inc
sbb
mov
sub
std
cltd
push
jl
pop
mov
jge
pushf
aaa
lods
mov
push
mov
sub
sbb
push
dec
xor
sub
mov
mov
pusha
out
sbb
fnstcw
xor
dec
imul
mov
xor
rolb
jae
jno
or
clc
js
ja
stos
mov
test
pusha
cld
lods
rcrb
pop
sub
test
or
imul
mov
dec
outsl
movsl
adc
fs
cwtl
nop
ds
sub
out
or
or
jno
jg
inc
mov
in
cmp
or
gs
dec
lock
call
test
jp
cmpsb
loope
loope
ret
cld
xchg
xor
fbstp
and
std
mov
scas
mov
xor
or
adc
xchg
jb
loopne
cmp
enter
das
xchg
cltd
pop
add
sti
inc
push
xchg
addb
sub
insl
jae
sbb
add
jb
cmp
int
and
aaa
out
pop
leave
sub
mov
push
fldenv
xor
xor
cmpsb
loop
aad
xchg
pop
inc
gs
jae
mov
xchg
xor
arpl
add
cmp
mov
out
push
mov
or
movsl
lock
xor
mov
sub
xchg
pop
fimull
fldt
mov
jne
or
dec
and
pop
es
jnp
js
lahf
fistpl
cs
inc
stos
aaa
rcr
cmp
divw
ja
mov
repz
sahf
jp
and
mov
lock
pop
rcll
pushl
lret
cmpsl
inc
pushf
aas
push
repnz
xchg
clc
arpl
push
arpl
shlb
mov
push
jno
or
aas
pop
push
subl
cltd
and
push
mov
lret
lods
dec
mov
lds
sub
faddl
pusha
arpl
pop
mov
sub
js
jg
ror
outsb
mov
in
jae
icebp
add
pusha
mov
sbb
cltd
mov
rcr
xor
insb
lods
ffree
jge
mov
fwait
dec
repz
out
jno
xchg
pop
test
xchg
push
loope
pop
je
push
jbe
push
sbb
outsl
ret
int
and
mov
add
mov
aad
adc
jmp
pop
mov
jle
mov
xchg
mov
test
inc
faddp
jne
inc
jae
xor
movsl
ss
jo
adcl
push
sub
repnz
and
addr16
xchg
mov
xchg
dec
jno
mov
stos
fwait
xchg
bound
cmp
add
sahf
js
stos
inc
mov
sub
ret
int3
addr16
mov
mov
jl
cmp
fnstenv
cs
insl
cmpsb
aas
nop
pop
jne
pop
stc
xchg
aas
inc
mov
sub
sub
cmp
adc
jbe
sbb
cmp
push
mov
jp
cld
in
push
popa
aam
and
loope
xor
sahf
jae
cld
push
adc
out
pop
xchg
lods
inc
add
xor
pop
sbb
jae
divl
call
jae
test
fs
repz
ds
push
or
fistpl
gs
fsubr
inc
imul
subb
push
pop
sbb
and
jg
push
scas
jae
test
repz
jmp
test
cmpsb
push
sbb
arpl
pop
cmpsl
pushf
xchg
cltd
jnp
cli
mov
stc
sub
out
lods
cmp
sub
dec
sti
dec
add
jmp
push
std
sbb
sbb
xor
pop
dec
or
mov
out
push
and
pop
jo
in
inc
out
rol
out
sbb
repz
dec
inc
addr16
bound
movsl
inc
sbb
adc
xor
ljmp
push
push
mov
mov
arpl
jecxz
mov
dec
push
test
jle
jns
std
cmp
jbe
test
frstor
sbb
or
fsubl
int3
mov
or
xor
jp
es
xchg
clc
sub
lret
mov
and
mov
addr16
push
out
inc
add
sbb
lods
rcl
jle
fwait
push
sub
movsb
out
mov
scas
int3
xchg
sub
femms
js
int3
sarl
cmc
int
insb
sbb
push
mov
rcrb
mov
test
dec
push
jae
cwtl
push
mov
fs
jo
in
and
sbb
jl
in
fwait
and
dec
nop
shlb
push
mov
xchg
ljmp
lret
lahf
xchg
push
ret
sahf
gs
push
nop
mov
subb
sub
sbb
sbb
jp
popf
loop
jo
sbb
adc
pusha
lea
ret
and
ret
std
jo
sub
icebp
mov
mov
adc
push
test
add
inc
sbbl
scas
pop
push
mov
jo
addl
dec
ffreep
adc
jae
in
fs
jo
pop
push
frstor
push
adc
fs
sbb
dec
jo
outsb
push
cmp
mov
out
and
setb
fs
pushf
shlb
and
dec
add
fsub
ret
rorl
mov
fcoms
aad
adc
jo
xchg
fsubrs
jmp
sub
cmp
jge
pop
cli
jo
sti
fmull
add
stc
jo
adc
lods
scas
imul
jae
and
jo
or
sbbl
add
sub
pop
cmp
aad
jo
ja
or
loope
and
jp
ffree
lods
in
push
fstpt
xchg
cmpsb
pop
jno
outsl
jo
xor
movsb
leave
sbb
jno
mov
jbe
daa
xchg
cli
popa
jo,pn
push
xlat
mov
sub
shr
xchg
scas
aas
sahf
jo
xor
push
in
cltd
hlt
xcrypt-ofb
cmpsl
scas
stos
daa
bound
xchg
lods
gs
push
aam
in
imul
mov
lahf
mov
jo
cmp
in
in
int3
mulb
mov
mov
mov
jle
cmp
inc
sti
int
sbb
out
fbstp
scas
pop
pop
and
jb
lock
test
loope
jl
jge
adc
test
jne
pushf
cvtps2pi
iret
cmpsb
lock
int
fwait
stos
ficoml
imul
add
arpl
adc
mov
outsb
into
add
jb
insb
rcl
jo
push
xchg
pop
stos
addb
sbb
fcmovnu
pop
rsm
inc
jle
iret
push
in
sub
mov
dec
loopne
out
addb
je
sti
cli
outsb
mov
out
pop
loope
int3
dec
xorl
adc
mov
movsb
inc
pop
test
lret
test
or
dec
in
or
cmp
cmpsb
pusha
jb
mov
rorl
jo
xor
cmp
adc
out
fstpt
mov
jbe
add
clc
mov
cltd
jo
out
shrl
push
xor
ss
jle
inc
rcrb
jo
sahf
mov
inc
jo
cmp
fisubrs
xor
inc
jl
cltd
adc
ret
sub
dec
dec
repnz
mov
out
jp
push
xchg
mov
pop
mov
sbb
iret
popf
cmc
push
sub
push
cmp
jnp
rorb
push
cmp
ret
dec
in
fists
push
in
loope
divl
pop
jo
mov
adc
outsl
loopne
fimuls
mov
iret
repz
jo
push
add
xor
into
in
imulb
mov
arpl
scas
int
inc
pop
imul
mov
loopne
sub
dec
daa
dec
cmp
cmpsl
push
inc
cmp
fsqrt
sbb
lahf
cmp
xor
dec
push
mov
mov
ret
or
sbb
add
cltd
add
mov
sti
pop
repz
dec
outsb
popf
ret
lock
into
repz
sub
loope
and
jae
imul
js
jae
fistpll
or
push
loope
in
cli
jecxz
stc
or
cli
in
mov
and
movsb
sbb
pop
dec
sub
cmpsl
cld
dec
jae
flds
sub
arpl
ss
xchg
cmpl
dec
test
lahf
mov
fldt
jae
push
adc
lea
mov
push
mov
stos
lock
adc
outsl
stos
hlt
inc
out
inc
outsl
mov
repnz
mov
cwtl
xor
movsl
outsl
ficomps
ds
cltd
push
pop
enter
fwait
jb
jno
out
mov
rol
in
sub
jecxz
xchg
ret
sbb
or
jae
sub
mov
sbb
mov
mov
fs
movsl
in
daa
imul
pop
shlb
fsub
add
es
cmp
push
outsb
add
arpl
push
lock
xlat
pusha
cmpsl
out
adc
pop
jl
mov
inc
fs
dec
push
xor
dec
loop
inc
mov
add
popf
das
js
in
adc
stos
or
dec
push
cmpsl
lock
pop
push
scas
out
loopne
pushf
lods
or
jg
insb
cmp
arpl
mov
sbb
inc
test
xchg
int
repz
push
decl
test
xchg
jbe
jae
mov
cmp
cmpsl
aas
xor
mov
das
xchg
out
lahf
cmpsl
fucomp
ljmp
xchg
jo
push
stos
xlat
sub
mov
sti
dec
sub
pusha
add
lock
mov
mov
lea
arpl
imul
jp
push
mov
pop
leave
mov
mov
and
loopne
jb
jle
cmpsl
mov
push
adc
test
push
repnz
or
pop
sub
push
rclb
mov
and
jge
mov
dec
stos
ds
push
sbb
aas
mov
xchg
cmp
push
cmp
sbb
push
call
addr16
push
lret
xchg
shrb
push
nop
in
push
fwait
add
daa
mov
sbb
push
cmp
fisttpl
ja
cld
les
mov
int3
ret
aaa
jecxz
sub
push
pop
lds
mov
test
adc
adc
mov
push
and
or
jle
sarb
fildl
pop
insb
push
xchg
mov
sub
gs
mov
adc
cmpsb
rep
imul
adc
mov
fucom
testb
std
in
mov
hlt
popf
mov
pop
out
adc
lahf
icebp
cmp
mov
mov
jae
inc
icebp
jle
cwtl
push
pop
cmpb
pushf
mov
xchg
subb
dec
xor
push
out
pop
jae
push
xchg
arpl
mov
jb
push
inc
push
psubsb
mov
mov
ljmp
shrb
fmul
push
or
setne
add
mov
cmp
clc
sbb
sbbl
ds
lahf
insb
sbb
mov
inc
aaa
adc
fstps
push
mov
jne
pop
fisubrs
sbb
inc
xchg
nop
push
jmp
popf
int3
mov
or
mov
push
pop
ja
lahf
jle
aad
imul
arpl
cmc
movl
xchg
ja
push
mov
jnp
test
pusha
ret
lds
xchg
add
hlt
pop
dec
imul
mov
sub
lods
jle
out
xchg
shrb
jae
mov
js
insl
jo
sub
aad
adcl
sub
adc
add
or
into
pusha
in
sbb
ret
mov
cmp
sbb
push
stc
xlat
aam
pushf
les
sub
add
sub
adc
test
mov
jecxz
mov
pop
imul
pushf
add
shrl
test
or
xchg
stos
in
mov
adc
imul
cmp
mov
dec
imul
sbb
dec
scas
push
xchg
test
cwtl
mov
pop
add
mov
add
test
call
add
mov
aad
mov
sbb
jno
xchg
cltd
jmp
push
cmpsb
sahf
imul
xor
sbb
loope
jae
push
push
xor
xchg
jne
scas
popw
call
cmp
mov
lods
push
shl
arpl
mov
mov
aad
lods
out
insl
arpl
sbb
add
setbe
or
test
sub
lret
jl
in
sbb
outsb
out
sub
sub
dec
inc
cmp
out
pop
mov
lods
push
sub
or
iret
mov
lods
xchg
xor
mov
je
mov
ljmp
dec
xor
test
adc
jmpw
lret
repz
xchg
lock
aas
sti
enter
push
push
pop
decl
push
ja
mov
adc
nop
or
popa
andb
sub
fnsave
data16
testb
outsb
mov
fistps
dec
xorb
jo
jg
mov
aad
jo
mov
mov
cmp
cs
push
rorb
je
jae
jo
cwtl
jmp
sarb
in
cmp
adc
xchg
daa
add
sub
mov
jnp
orl
pop
jge
js
add
jo
outsl
pusha
push
jecxz
dec
mov
or
stos
jo,pn
iret
jl
jnp
mov
lods
in
je
pop
jo
sarb
cs
adc
faddl
inc
ret
rcll
xor
add
or
clc
int3
js
mov
add
sub
fildll
aad
cmp
test
or
call
pushf
les
pop
loope
insl
js
hlt
pop
push
sahf
in
jbe
lahf
lea
out
xorb
sbb
fucomp
xchg
iret
and
out
jo
push
pop
xchg
mov
xchg
imul
dec
xchg
jo
adc
je
jo
pushf
or
push
aaa
popa
stc
mov
and
pop
aam
idivb
cwtl
ret
fadd
add
jo
loope
mov
jo
addr16
icebp
cmpl
mov
adc
out
shlb
icebp
inc
das
cmp
jnp
in
stos
in
pop
aas
xor
add
push
int3
pusha
cmc
mov
jne
ja
push
jo
cmp
pop
xchg
dec
rcrl
outsl
cmpb
pop
pop
lods
jo
mov
loopne
pop
and
cmp
in
jo
mov
ret
sbb
in
jbe
jo
jnp
mov
dec
or
repz
sub
adc
sbb
cmp
scas
imul
adc
ds
dec
jb
cwtl
inc
test
iret
jns
insb
jo
cmp
pop
in
mov
fs
jo
mov
nop
lock
jno
xchg
sbb
xor
push
mov
sub
mov
mov
pop
push
clc
jo
repz
lock
jo
pushf
pop
and
jmp
mov
xorl
loopne
mov
lret
lahf
jg
pop
cmp
or
mov
push
bound
mov
add
mov
add
cmpsb
mov
jmp
push
xchg
sub
jae
pop
dec
push
loop
mov
pushf
cld
out
enter
add
fs
sbb
jns
xchg
xor
int3
sub
mov
jae
push
sti
loop
nop
mov
lods
adc
lock
mov
out
int3
cmp
pop
leave
sbb
imul
addl
inc
sbb
xchg
pop
and
mov
mov
in
fmul
lahf
jge
xor
sbb
dec
add
clc
icebp
outsb
mov
cld
or
ljmp
sub
dec
fimuls
loopne
sbb
cmp
lock
cmp
pop
gs
lgs
hlt
adc
pop
insl
mov
sub
add
int3
imulb
rclb
push
push
es
js
adc
rorl
gs
test
pop
dec
mov
jle
movsb
jg
jno
aam
mov
jae
xchg
fisttpl
dec
ss
mov
out
rorl
jno
in
imul
add
mov
inc
in
mov
jg
jge
jnp
push
insb
icebp
xor
push
les
scas
cmp
sub
inc
lock
std
cmpsb
shrb
out
into
push
xchg
push
xor
hlt
mov
cltd
sbb
mov
loope
add
pop
cld
jnp
and
icebp
rolb
pop
mov
push
es
cwtl
pop
orl
jno
add
xchg
fsts
mov
add
inc
cmp
scas
test
cmpsb
test
lds
xchg
sbb
lods
dec
cmpsl
mov
xor
adc
inc
mov
popl
gs
repz
sbb
in
dec
test
movsl
fisubrl
mov
xchg
lret
cs
sbb
loope
inc
jg
xchg
push
pop
cmp
sbb
in
mov
movsl
inc
stc
xor
push
arpl
push
into
mov
std
enter
add
xor
sbb
and
lock
repnz
insb
push
int
icebp
pushf
mov
repnz
inc
mov
insl
lret
addr16
xor
xchg
ja
fimull
xor
jge
jle
imul
fs
out
shlb
mov
inc
and
adc
cmp
dec
stc
xchg
rol
fisubl
cmp
out
pop
insb
ficoms
sub
insb
ljmp
ret
mov
cmp
movsl
testl
add
aas
jo
arpl
push
das
xchg
dec
test
pop
nop
and
outsl
ljmp
arpl
stc
popf
cmp
call
insl
loopne
xor
dec
xorl
sbb
add
adc
pop
or
pop
lods
push
xchg
xchg
pop
pop
mov
cmp
loopne
loopne
dec
addr16
imul
cmp
jl
insb
out
and
inc
xchg
push
push
lea
arpl
sub
lcall
and
out
decb
adc
mov
lret
push
dec
lock
adc
sbb
fsts
push
fisubl
ja
frstor
and
ds
loopne
sahf
popa
outsl
mov
inc
daa
rclb
insb
push
jle
or
fcomps
stos
push
in
sub
push
jbe
and
pusha
fstp
mov
lret
jne
or
js
std
cmp
sbb
enter
cmp
pop
in
movsl
cs
cltd
xlat
sahf
push
cwtl
sbbl
xlat
pop
shlb
or
mov
out
mov
push
sub
stos
fsub
xchg
lods
out
iret
xchg
rorb
fldcw
test
ret
mov
mov
sbb
hlt
push
sub
cld
int3
mov
or
fisubl
daa
in
mov
push
pop
js
add
push
mov
or
dec
push
icebp
inc
fcmovnbe
mov
mov
cmc
sub
cmpsl
je
loop
mov
into
int3
xor
adcw
or
js
jno
in
jae
inc
test
pop
scas
pop
adc
imull
dec
pusha
arpl
dec
xor
adc
push
mov
sub
inc
insb
sbb
mov
lcall
test
sub
add
arpl
push
xchg
enter
sbb
adc
adc
push
mov
push
dec
mov
xlat
lds
scas
push
hlt
add
add
adc
in
test
jae
shlb
dec
mov
mov
call
lcall
push
push
subb
out
icebp
add
xchg
sub
mov
bound
pop
adc
jno
ficoms
push
add
gs
inc
cmpsl
push
sbb
fisubrl
jae
mov
dec
xchg
fisubrs
arpl
scas
scas
mov
in
sbb
add
cmp
ret
dec
mov
icebp
xor
roll
mov
push
jb
ljmp
add
pop
imul
jecxz
out
clc
sub
out
lods
out
jmp
sub
pop
push
fadds
jbe
out
psrlw
and
xchg
jbe
mov
daa
jp
les
sub
icebp
out
or
xchg
sub
cwtl
inc
jle
mov
fwait
out
xchg
cmp
jg
cmp
jns
add
mov
rolb
bound
xor
mov
lcall
mov
adc
mov
jns
push
dec
cltd
cli
mov
sbb
push
or
inc
xchg
mov
out
cmpsl
in
nop
sbb
pop
inc
test
sub
push
pop
and
pusha
pusha
cmpsb
es
arpl
push
jno
sbb
jns
sub
xchg
mov
mov
push
loop
xchg
or
mov
add
insb
arpl
pop
adc
mov
js
std
pushf
ljmp
cltd
jo
push
or
lret
dec
lods
je
stc
add
test
mov
pop
lret
and
sub
mov
inc
lods
nop
and
jne
push
inc
iret
and
xchg
clc
fs
scas
loopne
sub
imul
fdiv
and
pop
jg
jb
cmp
or
subb
enter
xor
jno
jb
lods
mov
dec
pop
xchg
icebp
hlt
mov
xchg
mov
scas
dec
mov
lea
pop
mov
stc
rcrb
jne
push
daa
mov
rolb
cltd
pop
mov
pop
jae
pop
push
push
jne
jns
and
mov
sbb
jno
or
shl
xchg
repz
ret
vpmadcswd
call
or
jg
and
icebp
sub
inc
mov
mov
fprem
mov
fists
inc
jmp
jne
mov
rolb
inc
pop
data16
dec
jae
sub
mov
add
or
out
push
in
or
mov
ret
testb
sarl
into
push
aas
out
mov
or
jnp
mov
or
psubusw
cmp
inc
jo
rcrl
mov
mov
mov
gs
xchg
xchg
gs
xor
pop
xor
pop
movsl
test
adc
jl
sub
test
dec
mov
js
out
out
js
cmp
jg
std
xchg
pop
mov
xor
addr16
or
pusha
stos
rcl
sub
inc
jg
out
mov
jl
and
cmp
test
push
sahf
aas
stc
and
gs
inc
jecxz
fisttpl
jo
imul
jo
fisubrs
or
out
out
adc
inc
andb
push
shlb
jmp
jno
or
add
jo
pop
sar
xchg
and
jo
adc
xchg
out
jo
sub
mov
test
jl
repz
mov
rorl
xchg
sub
mov
in
divl
push
imul
stos
or
xor
jae
lods
cltd
leave
mov
cmc
pop
push
sub
add
push
sbb
inc
pushf
mov
in
pusha
jmp
repz
xor
stos
push
mov
bound
je
icebp
out
lock
cld
repnz
push
subb
push
jge
jl
sub
fcomps
imul
stos
orb
mov
repnz
jp
sbb
call
xor
xchg
or
xchg
stos
jae
xor
jl
mov
jo
add
xor
push
out
dec
sti
jae
inc
prefetchw
jb
sub
imul
jo
sbb
inc
sbb
mov
jnp
ss
into
aad
adc
cmp
xor
push
and
int
test
js
cmp
jo
das
or
jo
mov
flds
pop
jo
jg
cmp
aad
jo
xchg
dec
or
sub
js
xlat
icebp
jo
add
aas
stos
orl
mov
orb
out
add
mov
pop
into
stos
xor
push
imul
scas
jb
push
aas
mov
sbb
mov
gs
iret
fisubs
pop
xor
mov
push
and
and
sbb
cmp
push
pop
and
sub
ja
nop
iret
loope
fdiv
test
push
and
stos
daa
lds
pop
push
pavgb
xor
data16
sbb
or
xor
filds
repz
dec
std
mov
sbb
sbb
xchg
adc
ret
mov
out
out
jo
scas
pop
mov
xlat
nop
pop
sub
jnp
mulb
mov
sbb
jo
gs
ret
inc
push
fldenv
fisttpll
arpl
lea
jno
repnz
lods
pop
fnstenv
inc
adc
mov
mov
repnz
jo
xchg
test
movsl
add
daa
inc
mov
cmp
push
fistpl
out
jo
mov
xchg
aam
jo
aas
lahf
jmp
lods
into
xor
test
cmp
fstpt
loop
sub
pop
subb
test
cwtl
jecxz
push
movsb
std
push
sub
jo
in
mov
aas
jo
fidivs
enter
or
adc
std
je
jo
test
or
jmp
rorb
addr16
mov
jo
fisubl
push
jo
xchg
jo
fwait
adc
xchg
mov
jmp
or
scas
or
pusha
jno
jo
xor
add
shll
jecxz
or
jo
outsl
lods
push
dec
dec
fwait
imul
dec
mov
mov
in
cmpsb
adc
push
push
mov
popa
mov
andl
andb
add
mov
push
das
vpunpckhdq
jo
aaa
add
popa
jg
xchg
sbb
jb
sbb
enter
lods
aas
decl
sti
fcoms
bound
loope
jno
js
mov
xor
jnp
imul
mov
xlat
fbstp
ds
rcll
jl
mov
jo
and
cmpsb
les
shlb
decl
mov
cmp
fsubp
dec
cmc
jo
jge
dec
out
aam
jo
fldt
sbb
js
mov
cltd
fldln2
and
lret
popa
dec
sub
mov
jo
lock
ret
int3
jo
aaa
sub
pop
jo
jecxz
cld
test
fwait
xchg
push
inc
aaa
push
mulb
jo
aas
pop
scas
jmp
and
lret
mov
jo
xchg
cmpsl
push
bound
inc
mov
mov
lds
jae
jo
mov
sbb
sahf
insl
mov
call
adc
cmpsl
xchg
in
push
jo
cmp
leave
js
popf
pop
andl
sahf
out
int
jo
xor
addr16
stc
xchg
and
rorl
lods
mov
push
inc
mov
sbb
inc
cmpb
in
jecxz
test
xor
cmp
lods
out
jmp
outsb
ficoms
jno
mov
mov
jo
xor
or
sbb
dec
xsavec
push
adc
adc
subl
sti
pop
push
jo
xor
mov
mov
sbb
fsubrs
cld
jl
insl
jae
jo
mov
shl
jmp
fadds
lods
mov
stc
mov
or
aaa
out
pop
jo
pushf
mov
jae
sub
cmp
mov
cmpsb
pop
int3
cs
push
pop
jo
pop
push
mov
xor
push
test
fisubrs
mov
jo
jb
inc
pop
cwtl
mov
add
sub
dec
push
and
cmpb
rorb
mov
jo
adc
sbb
push
xchg
insb
mov
pop
loop
jbe
js
aaa
mov
dec
or
jle
push
jb
inc
fs
stos
fmuls
mov
in
fsubp
cmp
push
xchg
outsl
jo
cmp
adc
setb
sub
add
mov
jo
adc
mov
mov
sub
inc
mov
addl
jl
in
add
inc
les
pop
push
pop
lret
sbb
push
jo
push
subb
push
xchg
ret
mov
pop
pusha
jbe
lcall
jo
mov
mov
pop
fwait
jmp
mov
jo
pop
fisttpl
loope
push
add
stc
jo
or
loope
aam
push
je
jp
pusha
out
push
inc
adc
nop
or
scas
jle
mov
inc
xor
mov
cmp
mov
sub
sbb
or
jb
jp
jo
loopne
stc
sub
jo
insb
jae
pop
jne
lods
jo
xchg
pop
inc
pop
mov
pop
mov
vmwrite
jg
fsubs
pop
bnd
jno
fisubrs
imul
mov
mov
lods
jo
adc
daa
fbld
test
mov
xor
mov
scas
sub
mov
lret
cmc
jecxz
fisubs
sub
cmp
shlb
std
mov
jecxz
cmp
lret
loope
jo
xor
imul
cmpsl
movsb
stos
jl
xor
fstpl
or
sub
push
pop
icebp
push
and
jo
inc
lahf
cmp
xchg
int
push
push
loope
cltd
push
jge
jmp
pop
das
cmpl
shrb
aaa
dec
andb
xor
aas
and
ss
mov
test
jbe
dec
repz
xorb
es
cmpsb
jns
outsb
add
mov
push
cmp
jo
xchg
sub
xchg
int3
inc
rol
pop
int3
adc
lret
cli
jecxz
xor
enter
mov
jo
xlat
sti
jmp
popf
and
mov
mov
or
pop
fdivl
pop
push
ljmp
push
out
dec
je
dec
fiadds
xor
cli
cmp
loop
xchg
ja
xor
mov
fsubp
adc
and
ret
repz
xor
sbb
add
cmpsl
nop
push
pop
insb
and
rol
xor
lahf
mov
mov
call
int3
ret
movsb
and
jbe
test
in
and
dec
or
out
clc
imul
jae
push
out
pop
jns
mov
or
sub
mov
jg
stos
in
or
ret
push
or
inc
lock
ss
movl
sbb
push
repz
pop
scas
cli
add
scas
xor
jg
jmp
xchg
fwait
push
in
push
lods
or
lods
xchg
call
sbb
sbb
loope
jecxz
out
fs
cs
xor
jecxz
je
mov
jg
jns
pushw
pusha
lods
xchg
into
jb
pop
dec
out
xor
and
in
lret
sub
pop
arpl
loope
mov
sbb
jg
push
shlb
adc
and
mov
jl
push
mov
xor
lahf
aam
js
jmp
xor
call
xlat
jne
and
aas
mov
mov
inc
jle
adc
mov
pop
sbb
push
pop
loope
push
lahf
mov
mov
loopne
into
push
repz
in
stc
cmp
popa
inc
gs
into
inc
lds
sub
movsl
insb
and
faddp
inc
jns
arpl
rorl
xor
pop
cmp
imull
sbb
lds
adc
sbb
rclb
daa
adc
adc
pop
pop
adc
xchg
loopne
push
jp
or
mov
mov
cmpsb
shr
sahf
mov
ret
cltd
sub
dec
stc
enter
jae
add
arpl
cmp
es
mov
sbb
mov
sbb
arpl
and
jb
xlat
jmp
push
int
pop
mov
je
shr
mov
xor
sti
mov
ljmp
mov
cmpsl
sbb
arpl
adc
push
jge
and
stos
repz
stc
loop
mov
addr16
ret
cwtl
shlb
and
adc
imul
out
dec
scas
cld
aam
cmpsb
mov
push
or
sub
push
mov
fisubrs
mov
addl
xchg
and
dec
scas
push
xor
repnz
inc
rolb
scas
std
add
mov
rcl
clc
inc
in
outsl
loopne
xchg
xchg
sub
jmp
push
test
dec
adc
xchg
leave
lock
dec
push
pop
hlt
add
pop
jae
pop
dec
dec
push
in
pop
test
push
sbb
sbb
out
sbb
into
pop
xchg
lret
aad
and
test
add
in
fiadds
sbb
ss
or
mov
mov
adc
icebp
inc
pop
cmp
jbe
cmp
xor
std
cmpsb
cli
and
push
xchg
and
rclb
nop
push
and
sub
fldcw
dec
sbb
repnz
out
stos
or
push
inc
xchg
inc
mov
aaa
pusha
insb
jae
fwait
push
addr16
aam
movsl
jb
add
cmp
fldenv
xor
mov
push
inc
xchg
pusha
pop
test
fsubl
mov
cmpsl
push
pop
pop
push
adc
dec
nop
sub
dec
sbb
pusha
xor
popa
rol
push
imul
xchg
add
sbb
mov
std
sti
pop
pop
out
push
xor
inc
test
mov
ret
test
xchg
test
dec
push
or
inc
mov
add
out
fsubrl
lret
jmp
movsb
sub
cli
mov
int
cmp
dec
push
inc
repnz
mov
inc
rcr
mov
jmp
imul
push
adcl
cmp
xchg
push
in
inc
push
sub
jle
xchg
jp
mov
xchg
shr
push
mov
mov
aas
mov
xchg
mov
pop
cmp
inc
push
call
jle
dec
mov
mov
xlat
mov
nop
addr16
push
dec
enter
xchg
sbb
movsb
jle
in
add
mov
ftst
lea
dec
and
jle
mov
fistpl
iret
test
out
cmp
cmp
ja
test
outsb
adc
xchg
decl
inc
stos
repz
insb
movsb
push
add
in
mov
stc
mov
aas
mov
fdivl
loope
sub
sub
repz
fsubr
xchg
js
aas
out
mov
inc
xchg
enter
pusha
xchg
cltd
xor
shr
xchg
mov
xor
rcr
in
popf
shl
js
arpl
add
xchg
call
mov
lock
ret
mov
movsb
fsubrl
nop
cmpsl
inc
or
sti
adc
insl
pushw
push
fucom
repnz
cmpsb
push
and
xlat
hlt
lds
sbb
ss
adc
ljmp
sbb
movups
push
add
xchg
fucom
push
in
xchg
push
loope
aas
adc
ss
sbb
out
push
fstp
jno
or
cmp
call
cmp
add
pop
jae
cmp
sbb
cmp
xor
mov
stc
push
push
dec
sbbb
fiadds
aas
mov
arpl
mov
jle
sbb
ror
mov
outsl
out
scas
add
lods
cmp
ds
pop
mov
or
stc
mov
test
or
addr16
outsl
test
add
pop
xor
test
or
in
scas
roll
fists
xchg
fistl
test
orb
xchg
lock
dec
xchg
je
scas
pop
in
mov
cmp
movsb
dec
scas
pop
rorb
sub
stos
jmp
dec
lahf
std
mov
mov
ret
sub
add
scas
std
inc
ljmp
jb
outsb
and
imul
stos
lea
dec
push
ljmp
cltd
stos
cs
shlb
cmp
mov
xchg
or
rorb
outsl
jns
mov
pop
mov
jg
hlt
or
adc
adc
sar
dec
mov
lahf
push
xor
adc
out
ucomiss
jae
das
nop
insl
xchg
sub
mov
scas
mov
ret
cli
jns
int
add
data16
arpl
rorb
xchg
jp
push
pop
lret
clc
ss
stc
mov
mov
fdivrp
mov
daa
push
aam
repz
fldl
insb
dec
pop
jns
dec
xor
test
jnp
adc
loope
out
adc
push
xor
lock
es
fs
mov
shr
pusha
int3
std
adc
sub
xchg
add
jno
jb
in
leave
test
filds
add
cld
pop
pusha
in
in
std
and
dec
mov
ret
cmp
je
andb
jae
enter
mov
mov
jbe
out
testb
ficompl
outsl
inc
test
push
and
out
dec
test
xchg
nop
arpl
jge
push
adc
add
sbb
rolb
arpl
testb
inc
and
cmp
ja
clc
inc
dec
clc
outsl
xor
dec
mov
or
arpl
sbb
popf
mov
jo
out
fisttpll
mov
jo
jns
jle
arpl
sub
cs
repz
dec
rolb
push
hlt
adc
jp
imul
and
arpl
repz
pop
call
inc
cmpsb
pop
and
adc
dec
xchg
push
sbb
outsb
cld
iret
cmp
sbb
out
incl
jecxz
sbb
loope
sub
push
jb
cmp
mov
mov
mov
xchg
dec
ret
pop
das
xchg
sarb
xchg
jge
fisubs
jae
in
gs
xor
adc
mov
dec
cmpsb
mov
lahf
popf
out
insb
cmp
pop
pop
jo
scas
lods
lock
sub
xor
sbb
imul
pop
rcrl
decb
clc
pop
fstl
fs
int
adc
inc
mov
mov
arpl
inc
sbb
rol
mov
xchg
add
fistps
adc
inc
push
inc
push
repnz
add
mov
or
lret
int
add
outsb
clc
mov
sbb
adc
js
idivb
in
jae
ja
jns
insb
and
cmp
fldenv
cli
jbe
xor
lock
repz
dec
or
inc
aam
imul
mov
inc
int3
jp
pop
nop
pusha
cmp
jno
call
dec
jb
xchg
scas
lods
inc
cmp
mov
stos
movsl
loop
scas
dec
jno
fs
test
jnp
into
add
xor
fadd
stos
and
jp
mov
jo
sub
mov
mov
fsts
aam
add
cmpsb
jecxz
mov
adc
inc
leave
fisttpl
enter
shl
xchg
fldl
pop
push
int
out
cmovs
inc
xchg
clc
andb
mov
fcompl
call
cmpsb
dec
movsb
fiadds
xor
push
test
lods
rcr
into
mov
int3
pop
pop
sbb
mov
jbe
or
movsb
or
call
pop
jg
push
pop
out
push
or
iret
lock
das
movsl
push
mov
dec
cmp
jmp
mov
inc
stos
dec
in
or
add
loopne
outsb
add
insb
xchg
scas
into
sbb
mov
mov
addl
cmp
add
je
in
je
add
repnz
pop
pop
xor
adc
pop
jl
rorl
in
inc
jnp
lock
mov
sub
int
mov
sbb
or
sar
rclb
dec
xchg
dec
jae
pushf
pop
iret
lcall
cmp
arpl
dec
imul
cmpsb
in
xchg
out
cmpsl
add
inc
xor
jno
add
cli
leave
add
and
daa
adc
lock
sarl
addb
sbb
pop
rcl
imul
ja
pop
and
and
xchg
push
cmp
and
sbb
jl
push
clc
sub
movl
lock
push
cmp
ror
jmp
lods
sti
mov
cli
int3
cli
sbb
push
sub
cmp
ret
insl
inc
jl
jae
data16
add
hlt
lret
push
ss
mov
mov
jns,pn
adcl
pop
push
sbb
push
xlat
pusha
and
xor
es
jbe
lds
sub
imul
dec
insb
mov
jae
jg
mov
mov
jmp
out
out
fs
pop
pop
std
jbe
or
lock
sub
inc
arpl
scas
jb
and
icebp
push
pop
cld
repz
inc
jo
js
sbb
jp
jae
out
adc
ljmp
xorb
mov
pop
push
push
mov
lea
sub
sbb
gs
lahf
inc
shll
fldenv
insb
jno
sbb
int3
mov
in
mov
shl
je
jno
lahf
std
and
out
negl
push
iret
aas
jae
arpl
mov
jl
xor
inc
icebp
stos
add
adc
mov
inc
cmpsb
pusha
cli
arpl
jo
push
xchg
ss
iret
jo
scas
loope
stc
fldl
jecxz
jb
insb
mov
lcall
jno
bnd
ss
sbb
stos
cli
lods
or
jnp
sbb
stos
jo
jbe
xchg
repnz
addl
dec
sub
ljmp
xchg
test
cwtl
repz
movsb
jo
popa
mov
add
cmp
bound
sbb
pop
xchg
xor
movsl
jo
cmp
iret
mov
cs
mov
inc
punpcklwd
adc
mov
xchg
test
xchg
inc
jmp
sti
rorb
outsb
jmp
mov
neg
xchg
push
adc
cmpsb
leave
test
pop
xor
ss
jle
jo
jns
push
cmp
lods
into
push
shlb
jmp
jo
mov
fwait
sub
cld
add
loopw
inc
jl
inc
cs
or
cmp
call
jle
and
daa
ret
scas
nop
sub
popf
imulb
or
mov
mov
xchg
sti
add
popa
pop
jle
and
test
xor
fbstp
xor
roll
dec
data16
stos
movsl
mov
and
jno
jo
push
fcoms
pop
ja
jo
shlb
into
addl
data16
jle
repnz
push
in
cld
repz
dec
jmp
cs
adc
mov
enter
fs
xchg
xchg
pushf
cmp
add
roll
cmp
mov
lahf
push
jo
mov
jmp
add
sbb
movsb
jo
fisubl
push
add
aaa
js
inc
sbb
imul
daa
pop
mov
push
repz
mov
fldl
or
jb
outsl
add
rcll
pop
xchg
and
jno
jecxz
push
or
mov
cmp
and
sbb
aam
js
arpl
dec
pop
sahf
jg
adc
mov
rolb
push
push
int3
mov
rolb
stos
sbb
ret
pushf
imul
sbb
mov
push
cmpsb
mov
cmp
lods
cld
mov
xchg
push
pusha
enter
mov
mov
hlt
sub
jb
pop
repnz
sub
stos
xlat
cmpsl
ret
pop
leave
loopne
mov
les
push
movsl
mov
imul
lahf
jmp
jae
sti
push
sbb
inc
ljmp
or
loopne
or
pop
jmp
fwait
xchg
cmpsl
and
fwait
sahf
cmp
ljmp
arpl
jns
jns
test
jne
pop
popf
and
xchg
repz
or
sti
nop
popf
sbb
jnp
jno
sahf
jo
in
cs
lods
shrl
sbb
and
mulps
mov
jbe
pushf
inc
push
dec
rcrb
xorb
fs
dec
add
js
mov
shl
or
jb
stos
loopne
dec
push
leave
into
cli
xor
mov
std
hlt
fucomi
mov
pcmpeqd
jo
mov
notb
sbb
xchg
xchg
fs
dec
jns
insl
push
sbb
push
int3
scas
inc
pop
xchg
insb
out
icebp
nop
adc
jnp
xor
movsl
jo
xchg
jle
sbb
scas
lea
call
das
mov
enter
jo
mov
pop
fcomi
sub
into
enter
popf
or
mov
mov
jo
iret
cmp
dec
test
fucom
aas
imul
push
dec
push
iret
xchg
fs
add
pop
divl
stc
pop
adc
fisttpll
shll
shl
ljmp
movsb
and
dec
test
mov
sub
jg
push
aaa
cli
jo
sub
jae
psrlq
imul
push
out
adc
cmp
push
mov
jo
jmp
inc
es
inc
fistpll
push
in
sub
xchg
dec
jno
jo
xor
fs
pop
adc
push
icebp
lods
mov
or
push
push
fldcw
test
jge
push
xor
sbb
xor
cli
add
pushf
fcmovb
sarb
loope
roll
inc
xor
shll
out
call
sub
or
xchg
ss
repz
in
insl
jo
xchg
inc
sarl
mov
je
subl
xchg
out
inc
jo
pushf
repnz
sub
push
fmull
ja
stos
in
jl
test
insb
cs
jo
fisubrl
and
jo
or
sbb
movsb
cs
fdivs
xchg
inc
jo
shr
into
fistpl
sbb
fidivl
cmpl
jmp
push
push
mov
add
dec
incl
xor
push
arpl
sub
bound
shl
jo
inc
xchg
das
pushf
fmul
jo
ljmp
jo
pop
or
es
dec
leave
inc
add
sti
push
std
sbbw
fistps
sahf
dec
hlt
aaa
into
shl
dec
dec
jmp
pop
int
push
push
std
in
sbb
jl
mov
mov
sub
repz
push
push
ss
push
jge
push
jbe
or
jmp
mov
cmp
rep
sbb
icebp
sub
xor
jle
into
rclb
insl
jb
clc
sbb
push
je
cmp
or
push
lods
pop
jle
test
nop
outsl
hlt
push
in
jp
adc
cmc
push
xchg
stc
cltd
mov
jb
arpl
addr16
jno
insl
outsb
fwait
and
inc
pop
inc
mov
push
or
fcoml
fsubs
mov
fdivrl
icebp
ds
adc
push
inc
inc
push
ss
arpl
test
xchg
sbb
lahf
sbb
pusha
int3
out
shr
enter
jp
push
dec
jecxz
push
daa
or
jge
es
xor
adc
jo
repz
pop
mov
icebp
lret
add
jle
mov
mov
pop
xchg
jo
sub
sti
push
jp
xlat
jbe
jo
cmc
or
repz
xor
mov
sub
jle
in
jo
xor
adc
xchg
lock
out
jo
xchg
mov
push
xchg
push
cmpsl
fwait
fistl
or
xor
fucompp
stos
test
or
js
jno
mov
jo
inc
sahf
mov
and
enter
cmp
push
jl
jne
imul
test
jb
xchg
out
inc
inc
cmp
std
pop
add
fsts
xchg
or
lret
addr16
je
into
imul
ret
pop
insb
xchg
mov
sbb
clc
fildl
adc
mov
xchg
jnp
repnz
jo
rcr
jae
cmp
sub
mov
out
out
xchg
test
jnp
scas
mov
gs
push
jno
xor
imull
cmp
cwtl
xchg
cld
pop
ja
je
movsl
das
push
jle
mov
stc
xchg
iret
jo
cmp
aas
cs
lock
or
push
mov
fisttps
insb
movsb
xchg
aad
sti
pop
add
pop
jle
sbbb
xor
dec
cmc
jo
mov
mov
out
rcr
jo
dec
iret
nop
cs
pop
xor
in
cmp
lods
icebp
es
imul
fidivrs
enter
add
pop
mov
sub
cs
sbb
mov
fnsave
mov
adc
push
mov
xlat
fwait
out
scas
sti
push
lahf
mov
and
lcall
int3
ja
cmpsb
cmp
xor
out
jl
scas
jmp
test
push
lods
xor
push
or
lcall
add
gs
bnd
cmp
sbb
mov
cli
aas
inc
jge
addr16
gs
in
push
in
mull
jo
xchg
rcrl
lock
dec
aad
push
outsl
inc
push
xchg
sub
outsb
mov
repz
pop
ss
push
and
lret
xchg
jmp
jo
mov
lret
fldt
xor
sahf
in
adc
sbb
jno
push
bound
dec
arpl
and
jle
popf
jo
movsb
xor
insb
jo
les
mov
mov
push
xor
jmp
jo
push
sbb
push
sub
out
stc
adcb
jo
adc
das
jle
sbb
cwtl
aaa
movsl
push
out
in
jo
jnp
js
nop
mov
fsub
test
dec
lods
adc
pop
cmp
mov
mov
mov
mov
test
shrb
test
push
mov
inc
outsb
pop
ret
fldcw
bnd
adc
mov
mov
jo
sub
sub
jnp
jo
inc
or
jb
outsb
loope
jle
jo
xor
push
lds
add
daa
and
jo
add
or
jo
ret
leave
stos
fiaddl
jo
sub
xlat
dec
sub
jo
scas
mov
iret
mov
inc
adc
jo
enter
mov
mov
in
cmc
mov
or
mov
jo
inc
xor
sub
add
sub
cwtl
and
popa
mov
mov
mov
xchg
test
jo
cmp
xor
jecxz
pop
adcl
sub
push
jo
pop
mov
dec
leave
mov
mov
jp
add
inc
lods
pop
push
inc
inc
push
int3
je
or
cmp
jo
insl
dec
add
pushf
and
jae
push
push
sub
mov
jmp
sbb
lods
test
mov
jae
push
jo
in
mov
mov
out
xchg
xlat
push
movb
icebp
lods
jo
xor
shl
xchg
mov
jo
daa
data16
mov
jo
gs
jle
fidivrs
mov
aad
mov
or
dec
adc
push
xchg
push
jo
pushf
push
inc
push
jo
mov
adc
lret
outsb
jno,pn
add
mov
arpl
pop
sahf
out
fstpt
js
xor
stos
call
mov
ret
nop
or
mov
mov
rcpps
xor
fwait
je
sub
push
adc
sub
cmc
jnp
jb
nop
mov
pop
cmp
clc
pop
imul
sti
add
mov
mov
imul
stc
inc
leave
xchg
cmp
cmp
cwtl
jo
int
sub
or
orb
push
jle
xor
ja
jecxz
cs
popf
ret
push
push
loopne
pop
nop
and
ss
mov
jo
jne
mov
iret
lock
pop
out
push
addl
divb
jo
sub
jnp
stos
jo
std
sbb
jbe
imul
add
mov
cmp
out
adc
cmp
lock
sbb
dec
leave
sub
lods
jbe
dec
addl
ss
shlb
mov
jo
fsubrl
daa
mov
and
icebp
imul
jo
out
mov
aas
clc
push
cs
movsb
nop
pop
xor
into
or
dec
push
xorb
inc
dec
inc
repnz
out
or
push
in
mov
mov
test
inc
push
clc
mov
rclb
mov
roll
sahf
mov
inc
push
jo
and
pop
add
pop
jo
ss
cs
inc
aam
pop
dec
sbb
pop
ljmp
jo
fidivrl
jb
jecxz
jo
repz
push
lcall
mov
nop
enter
aas
adc
mov
and
xchg
in
fdivl
push
lods
xchg
das
xor
rol
jo
orl
xor
and
in
sub
mov
adc
mov
fsubs
push
fildll
push
sub
ja
cmp
icebp
mov
pop
test
arpl
or
mov
inc
and
jp
fbstp
xchg
mov
ret
orb
nop
push
mov
repnz
sbb
sub
pushl
and
inc
adc
out
push
movsl
movhps
insb
mov
int
pop
mov
sub
fcoml
sarl
in
jo
int
popf
mov
pop
fidivs
shl
pop
jo
ret
pop
push
outsb
and
mov
xor
push
lea
or
out
aam
movsl
add
push
jnp
sbb
cmc
data16
push
rolb
and
sub
jo
adc
nop
push
sbb
in
add
push
shll
xchg
je
inc
jo
jmp
scas
pop
or
fdivs
add
xchg
pop
jo
jae
cmp
pop
ja
mov
cmpsb
xor
outsb
test
ljmp
stc
jo
mov
push
jo
sub
push
mov
lods
jae
push
sbb
jge
repz
ret
pop
fsubl
orb
jo
mov
ret
cmp
out
std
xchg
into
sbbb
jecxz
jl
aas
rcr
jo
enter
pop
shll
sub
ljmp
and
add
and
nop
push
mov
push
xchg
push
pop
dec
lods
pop
add
fcom
fs
shll
sbbl
jo
test
out
dec
call
stc
mov
xor
adc
bnd
or
cmp
adc
mov
xlat
jo
mov
dec
les
dec
jo
mov
sbb
dec
jb
je
cwtl
jo
inc
or
adc
push
cmp
nop
or
xor
cld
mov
jo
mov
hlt
xchg
or
cmp
sahf
mov
push
lods
push
outsl
add
repz
hlt
call
or
les
icebp
fbstp
jo
jbe
loopne
pop
push
adc
and
dec
out
push
pushf
fmull
js
sbbl
mov
lahf
lods
pop
sbb
sub
outsl
mov
sarl
or
jb
punpckhbw
lahf
xchg
fs
addr16
cmc
or
loop
mov
jg
xor
pop
adc
std
repnz
push
addr16
sbb
xchg
inc
jle
jb
in
movsl
mov
insb
and
inc
push
push
arpl
ja
mov
xchg
jae
jp
cmp
inc
dec
jo
scas
mov
into
push
mov
stc
andb
insb
lret
test
inc
xchg
jl
jno
test
lock
pushf
sbb
or
aad
push
sub
out
sbb
in
jbe
jb
mov
enter
popf
xchg
push
lods
mov
js
rorl
stos
jo
outsb
mov
lea
jo
rcl
in
cmpsb
js
jbe
lret
pop
jb
sbb
ret
inc
sub
mov
jo
and
cmp
inc
jo
imul
jg
hlt
inc
xchg
scas
jmp
aaa
jo
cmp
mov
and
xor
cmovle
xchg
mov
sbb
push
adc
push
sahf
sub
dec
mov
and
jp
xchg
push
sbb
mov
cs
xchg
push
and
mov
add
cli
leave
repz
jo
mov
xchg
jge
repnz
test
call
test
in
xchg
out
inc
push
jle
and
jmp
out
adc
jl
lret
add
stos
or
sahf
push
mov
jo
mov
mov
pop
daa
dec
cmp
xor
adcl
sbb
stos
sbb
into
mov
out
push
inc
ss
mov
sarb
lret
loope
data16
cmpsl
aaa
cwtl
jo
fiaddl
xor
paddb
insl
inc
jo
sbb
jbe
cs
cs
lds
jl
add
and
add
cmp
loope
and
cs
sbb
and
pop
inc
sub
sub
insb
xor
stos
inc
mov
sti
sub
lods
jg
rorl
divl
test
or
xchg
movl
movsl
inc
orb
jo
int3
push
add
push
fmull
mov
add
repnz
ss
cs
jge
cmpb
mov
call
into
push
movsb
lock
adc
pop
dec
frstor
jle
mov
mov
fdiv
xor
std
iret
out
enter
and
add
sti
andb
fcoml
pusha
rcl
sub
test
push
test
adc
lret
imulb
pusha
adc
jns
sub
or
icebp
push
mov
dec
sarb
sbb
daa
dec
mov
mov
sbbb
or
movsl
bnd
imul
jle
jl
in
push
jge
insl
jns
or
jae
out
jle
mov
in
mov
xchg
mov
cs
jg
insl
test
cs
pop
mov
xor
loop
jge
les
jb
lret
jbe
dec
lret
icebp
outsl
mov
xchg
cmp
imul
popa
nop
lahf
pop
dec
mov
andb
mov
xor
mov
dec
adc
or
xor
pop
sbb
daa
push
mov
push
loop
insl
cltd
mov
lahf
push
in
xchg
or
inc
add
inc
shl
mul
rcrb
and
mov
cmpb
xchg
cmpl
sbb
mov
fnsave
fmulp
push
push
jbe
xlat
syscall
fistl
lret
pop
popf
pop
lea
jbe
dec
adc
add
sbb
add
lods
sbb
test
pop
jecxz
gs
lahf
addb
dec
push
shrl
push
pop
outsb
fidivs
adc
jle
mov
fs
cmp
movsb
xor
shll
jno
push
call
push
pop
nop
cmp
test
dec
push
jo
cmp
jmp
fcomps
aam
jnp
out
push
or
sub
sbb
mov
adc
mov
mov
xlat
in
sbb
mov
push
int3
inc
jne
add
dec
jl
jg
jo
jle
mov
int3
xor
adc
adc
add
stos
pop
mov
mov
mov
sbb
rcrb
add
aaa
ret
dec
jne
cmp
adc
xchg
fs
mov
rcrl
sbb
mov
push
push
inc
pop
out
insb
jecxz
fldenv
mov
loopne
shlb
pop
push
in
std
in
adc
xor
into
add
adc
call
imul
adc
rorl
pop
lds
jl
lock
or
add
std
movsb
stos
mov
add
mov
sbb
andl
inc
sub
fwait
movsb
cmp
repnz
mov
inc
xor
fldenv
or
sbb
add
fsubrl
jne
out
mul
loop
push
imul
lret
ss
test
shlb
jae
rcrb
cmp
push
nop
xor
dec
push
subl
stos
add
fiadds
scas
lcall
lcall
scas
jl
shl
push
mov
dec
mov
or
loop
dec
mov
imul
test
lret
cmp
test
in
adc
sub
dec
aam
jle
std
sbb
icebp
ret
xor
jae
adc
test
mov
es
mov
jmp
lret
shl
addr16
or
push
imul
xchg
push
add
out
inc
push
xor
dec
test
jl
pop
rclb
jno
push
mov
mov
ret
addr16
shlb
cltd
adc
stos
adc
cwtl
push
scas
add
cvttps2pi
mov
inc
in
mov
jnp
cmp
aam
sbb
lds
dec
ffreep
mov
jae
fst
jae
js
stc
dec
pop
outsb
mov
int3
ss
daa
icebp
xchg
scas
popf
stc
test
xlat
xlat
outsb
mov
push
es
xlat
shrb
push
fisttpl
jmp
and
cmp
add
cmp
das
xchg
push
xchg
ja
xchg
dec
clc
cmpsl
adc
mov
fidivrs
fsts
ret
lods
inc
sbb
xchg
rcrb
xchg
xor
mov
sbb
or
ja
cli
out
adc
pop
pop
xor
adc
outsb
pusha
and
les
shrl
int3
scas
inc
pop
xor
xlat
xor
rcll
cltd
xchg
sbb
sarb
ror
mov
xchg
fisubs
sbb
ficompl
mov
outsb
pop
push
cwtl
in
movsb
pop
add
shr
rcrl
sub
xchg
push
xchg
push
lock
insl
lahf
fldt
push
and
adc
cmp
mov
mov
std
ss
sub
add
push
je
pop
xchg
icebp
in
sbb
jno
rol
in
fbld
lea
lret
sub
mov
mov
popf
inc
xor
add
or
repz
sbb
and
dec
mov
mov
mov
push
jle
push
mov
xchg
pop
cld
lret
jns
mov
iret
cmp
mov
scas
ffree
push
fildll
or
gs
mov
add
mov
xchg
inc
dec
outsb
repz
lock
pop
shl
sbb
bound
mov
dec
pop
push
and
js
gs
aaa
cmpsb
mov
inc
movsl
jnp
loopne
stc
dec
sbb
scas
shlb
pop
shlb
ds
push
adc
insl
xchg
push
sbb
jb
insb
or
pop
ja
add
mov
xor
mov
pusha
not
or
xchg
fs
jne
cmc
insb
inc
fs
das
mov
outsl
pop
insb
fwait
popl
fwait
sahf
sub
sbb
arpl
pop
fldl
sbb
enter
xor
pop
dec
jae
fcomps
and
adc
fidivs
lea
ficoml
or
arpl
or
lea
push
fistps
pop
sbb
imul
inc
sub
test
rol
pop
mov
sbb
inc
lock
jbe
jb
in
out
sbb
xor
sub
mov
test
push
outsl
rcll
scas
fstpt
pusha
or
andb
insl
loope
dec
out
xchg
addr16
jne
add
enter
popl
dec
dec
int3
dec
insb
shrl
es
mov
dec
fstps
aad
mov
in
sub
sbb
push
repz
fs
xchg
jns
cli
ror
test
ljmp
adc
cmp
lods
addr16
shll
fidivrl
rcll
mov
fisubrl
lock
scas
cmc
mov
xchg
aas
sub
leave
or
rcr
cmp
outsb
fnsave
ss
sbb
inc
shr
mov
js
in
inc
in
sbb
cltd
and
ret
ljmp
iret
ljmp
fsts
inc
mov
dec
xchg
jbe
sub
pop
or
arpl
pop
cmp
cmp
add
fsubs
aad
and
dec
push
addr16
jns
loopne
in
jne
std
sub
imul
call
pop
movsb
addr16
and
sub
pushl
sbbb
js
ja
push
sub
data16
xchg
cmp
mov
jmp
shll
mov
jle
shll
add
push
add
or
movsl
pop
sbb
push
pop
ja
mov
out
cmc
popl
clc
out
sti
dec
jl
lods
into
pop
into
cmpsb
sbb
in
or
arpl
inc
andl
call
dec
jmp
dec
sbb
sub
pusha
movb
arpl
in
cmpsl
in
mov
push
ljmp
fnstsw
cmc
out
mov
xchg
lock
sahf
pop
jg
rorb
cmc
sub
lahf
out
mov
adc
adcb
in
sub
outsb
in
sub
push
repnz
jnp
cmpl
jle
jo
lahf
jmp
pop
fldl
sbb
mov
nop
pop
iret
stos
lock
cmp
pop
jns
push
sub
pop
loop
push
test
out
adc
cld
push
adc
pusha
mov
sti
cmpsl
cmp
popa
xlat
cmpb
push
jecxz
insb
cld
inc
rcl
add
cli
push
in
lock
out
mov
add
push
leave
movsl
sti
notl
dec
les
insb
add
push
out
rclb
mov
fistpll
jp
lock
loope
pop
in
jecxz
out
mov
inc
pop
scas
pop
clc
mov
mov
push
cmpsb
fnsave
cli
adc
dec
push
xchg
mov
push
ljmp
pop
cmc
lods
imul
jb
mov
pusha
sub
push
into
sub
jp
push
push
xchg
inc
in
data16
cmp
int3
mov
pop
mov
jmp
aaa
int3
or
mov
sbb
dec
das
repz
cmp
call
dec
test
or
inc
inc
cmp
repnz
mov
popf
repz
push
enter
ret
jo
push
mov
or
mov
and
and
out
cmp
sbb
inc
sbbl
mov
int3
xor
sbb
sbb
stc
inc
or
in
sbb
or
cmp
mov
enter
stc
nop
ret
js
jp
jb
or
push
add
pushf
jae
aas
add
lds
pushl
sahf
mov
andb
cltd
scas
push
aad
repz
lea
in
scas
pop
inc
loopne
mov
dec
icebp
and
or
dec
sub
mov
add
pop
or
scas
incb
mov
cmp
lahf
sbb
or
jns
insl
sbb
nop
testb
test
sub
mov
dec
mov
test
scas
cmp
inc
push
xor
adc
inc
push
sub
ss
test
mov
je
lds
icebp
mov
xchg
sti
xor
xor
push
mov
arpl
and
mov
in
jo
fs
adc
cmp
push
mov
nop
popf
cmp
rcrb
cmp
lods
sub
lock
rcrb
push
call
and
enter
in
or
push
mov
mov
arpl
ret
mov
pop
insb
jne
mov
cltd
add
sbb
xor
push
mov
cmpsl
dec
cmpsl
or
sbb
out
add
lds
push
cmpsl
insb
outsl
push
mov
fbld
or
ds
movsl
pop
xchg
ljmp
and
insb
data16
and
rolb
adc
mov
push
pushf
scas
inc
push
leave
push
jns
pusha
fcmovne
arpl
adc
add
das
pop
inc
jno
or
add
dec
jmp
les
inc
dec
sub
and
jle
cmpsl
push
xchg
ret
loop
xchg
rcll
adc
dec
neg
inc
sbb
gs
popf
clc
std
out
jns
sbb
rcll
call
iret
push
int3
cmp
cld
sub
int3
sub
pusha
xchg
pusha
pop
push
mov
mov
push
jo
push
pusha
mov
sub
lods
mov
add
inc
inc
or
pop
add
cwtl
jae
xor
mov
pop
mov
jae
out
in
rcr
or
je
mov
sahf
fmuls
lods
call
xchg
js
fs
shlb
cltd
dec
popf
xchg
fsubl
mov
sahf
mov
add
pop
pop
out
mov
shrb
push
jno
je
mov
icebp
push
lret
mov
xor
adc
test
xor
and
push
xchg
mov
push
nop
xchg
sub
faddl
outsb
lcall
test
push
cmp
hlt
inc
push
insl
sbb
dec
rorb
mov
push
aam
arpl
lret
xchg
inc
ret
and
sub
adc
cmp
das
js
push
mov
lret
imul
mov
cmp
cld
in
aad
adcl
push
or
mov
test
inc
ljmp
xchg
cltd
pusha
dec
dec
testl
push
in
insl
out
fistpll
fmul
mov
cmpsl
push
loop
push
int3
xchg
sbb
xchg
mov
mov
aad
xchg
movsb
mov
ljmp
outsl
addb
arpl
cmp
lea
mov
scas
loop
out
mov
xchg
jno
cld
or
push
lahf
lods
xor
cmp
xor
shl
jle
loopne
push
jne
subb
scas
lea
cmp
sub
cmp
or
mov
xchg
fsubrs
push
orb
adc
jp
je
jo
fadd
movsl
loope
popa
push
nop
repnz
jl
jo
add
gs
push
pop
add
push
leave
jno
add
push
les
jnp
mov
or
sbb
or
test
das
sub
or
xchg
mov
fldcw
pop
jl
mov
loopne
dec
sub
mov
ficoml
mov
popf
repnz
or
rorb
xchg
scas
sbb
mov
ja
xchg
mov
dec
fisttpl
sub
stos
push
js
inc
jl
dec
popf
jo
lock
mov
loopne
mov
xor
insl
inc
insb
xor
xor
or
cwtl
inc
das
insl
xor
jo
addr16
imul
xor
xchg
in
or
andb
int3
push
and
xchg
xchg
xchg
jo
jecxz
imul
dec
jo
addb
jle
js
call
jo
div
fmull
push
add
inc
sub
lds
xor
xchg
mov
or
jae
jo
cmp
ja
jo
jge
inc
in
sbb
jo
hlt
test
cmc
and
jo
sahf
sub
clc
pop
xchg
je
das
mov
dec
jo
push
jmp
fcomps
push
hlt
dec
cs
pop
sub
cmpsl
mov
shrb
arpl
inc
pop
add
jo
cmpsb
jge
aas
pop
lock
idiv
pop
mov
or
sti
mov
cs
cltd
stc
cmp
pop
inc
je
jo
xchg
ja
lcall
adc
movsl
leave
mov
aam
cmpsb
dec
jno
add
sti
cmp
addr16
cli
loop
shlb
shr
outsb
int
dec
push
add
cwtl
int3
test
aas
pop
fldt
mov
jae
imul
stc
jp
sbb
repz
test
bnd
loope
mov
mov
fildl
fcomps
adc
jns
loopne
push
shrb
inc
and
pop
bound
divb
push
and
test
push
and
je
test
pop
sub
cltd
mov
int
or
hlt
mov
and
int3
inc
jo
inc
ljmp
or
or
adc
aam
fisttps
out
jns
lahf
push
das
jo
jecxz
mov
repz
movsl
jb
test
fstl
sahf
into
jo
in
push
xor
rorb
cs
cmc
jns
repnz
stos
pcmpgtd
lret
pop
sub
movsb
jo
adc
dec
mov
insb
das
xor
je
sti
fdivl
nop
cli
mov
jo
push
xchg
shl
xor
lret
bnd
out
mov
scas
rorl
push
push
aam
in
xchg
lcall
jo
les
ljmp
mov
sarb
xor
mov
sbb
push
pop
dec
dec
out
pop
loop
jo
pop
sub
pop
jb
jo
and
out
xchg
es
jo
aad
jmp
mov
dec
push
cmp
pop
inc
js
mov
outsb
jge
sahf
ljmp
add
or
mov
jo
pop
imul
popl
jo
ret
insl
lods
subl
shrl
jge
aaa
cs
dec
out
in
dec
jne
xchg
xchg
shll
jb
cmp
push
aas
and
mov
subb
mov
cld
jo
addr16
jo
enter
and
jo
pop
xchg
gs
loop
psrld
inc
cmpb
dec
lret
jo
dec
mov
pop
ret
inc
mov
pop
push
hlt
jo
test
lahf
or
mov
inc
ss
lret
xorb
push
mov
leave
jo
push
and
jo
cmp
cld
pushf
ss
daa
jo
inc
loope
ljmp
and
xchg
jl
insb
std
addr16
adc
sbbl
cmpsl
test
pop
loopne,pn
push
arpl
sub
jo
push
and
cmovge
sti
mov
lock
jo
xor
cmpsb
xchg
or
xorl
mov
add
dec
jg
jns
mov
pop
out
inc
jge
je
mov
adc
push
mov
xchg
scas
mov
cmp
or
por
aaa
push
or
sbb
mov
xchg
data16
cmp
jns
nop
or
inc
out
ret
jae
dec
icebp
rclb
repz
mov
add
or
fdivrs
scas
fidivs
pop
push
xor
mov
cld
jo
into
loopne
pop
mov
adc
sti
jo
sub
dec
inc
jo
jp
shrb
dec
cmp
and
bound
mov
push
out
sbb
fs
mov
lea
inc
dec
imul
mov
mov
push
mov
jo
inc
hlt
sub
out
lret
pop
cmp
rorl
mov
mov
or
cmp
out
std
leave
test
mov
pop
sarb
lcall
jo
add
jp
jecxz
pop
jo
xchg
inc
jnp
lods
mov
jle
mov
fcmovnbe
testl
jo
cli
call
std
push
mov
sahf
dec
popf
jo
test
mov
jo
mov
mov
and
push
dec
sbb
jge
ficoms
mov
test
in
xor
or
ljmp
lret
or
lock
push
gs
mov
ret
mov
lahf
mov
lock
jo
icebp
xchg
loopne
mov
xchg
loop
or
adc
inc
hlt
ret
orl
sbb
xchg
fisubrs
dec
lock
mov
push
jp
or
jo
pusha
stc
popf
sbb
sbb
bound
mov
sub
mov
xchg
inc
fcom
stos
das
out
jecxz
cmpsl
cmp
es
mov
sti
or
fisubl
mov
ds
xor
mov
data16
sub
dec
sbb
pop
xchg
push
lock
add
xor
mov
out
ja
lcall
scas
mov
popf
mov
and
jp
mov
sub
mov
mov
xchg
add
lret
push
pop
hlt
sbb
push
or
test
out
dec
add
sub
fldlg2
mov
jo
mov
add
or
call
sub
sbb
js
xchg
sti
mov
addr16
mov
push
fucomi
loop
mov
lahf
repz
insb
jo
mov
outsb
js
xchg
sahf
jo
sbb
daa
mov
sub
test
add
dec
inc
mov
bnd
inc
inc
inc
sbb
add
inc
aam
outsb
xor
sbb
and
ljmp
push
call
xor
push
rol
adc
js
pop
outsb
in
cmp
mov
mov
scas
scas
jp
in
les
mov
sti
add
shrl
ja
sub
test
sbb
nop
stos
nop
cli
mov
jbe
sbbl
call
fs
nop
cmc
orl
arpl
adc
daa
subb
jo
jbe
fwait
xor
mov
or
out
rcrl
jo
ja
sbbl
das
inc
fs
out
aaa
cmc
adc
adc
aas
fs
ss
mov
jo
mov
test
push
adc
or
push
inc
xchg
jo
mov
pop
dec
bound
out
and
xchg
mov
es
sub
fisubrl
out
cmpb
out
enter
scas
pop
in
and
mov
mov
adc
outsb
aas
mov
mov
inc
rorl
xchg
jno
dec
ss
jo
cld
push
jle
pop
push
shll
adc
adc
repz
and
test
jbe
mov
xor
jbe
inc
jg
ljmp
pop
sbb
jle
ret
sahf
addb
ljmp
test
push
push
dec
out
jae
push
jmp
pop
or
repz
xchg
jecxz
and
or
shrb
jns
popa
and
in
push
insl
mov
orb
stos
in
rcrb
mov
pop
ss
out
xor
mov
jb
insl
push
mov
shlb
cmp
js
fistl
jg
dec
mov
out
dec
sub
test
daa
cmc
jae
jae
mov
call
fimull
popa
mov
jge
fwait
lret
lds
fs
call
lcall
test
jo
push
stc
sbb
fisttpl
jae
jg
insb
cmp
push
shrl
pusha
lods
dec
clc
divl
and
mov
cmp
shrb
pop
out
fbstp
inc
mov
fsubl
es
push
in
daa
jg
or
fs
imul
stc
shufps
addb
xchg
sub
nop
xchg
mov
pop
push
nop
repnz
fcoms
inc
jmp
aad
fwait
icebp
adc
push
stc
in
jle
mov
movsl
dec
mov
mov
stc
mov
jmp
dec
jnp
jle
rclb
jb
push
or
cmp
xor
and
call
cmp
fisubrl
sub
and
lahf
push
out
stc
lcall
out
out
mov
xor
jmp
ja
jp
push
jno
je,pn
sub
rcrw
push
inc
sub
pop
jno
loope
pop
lods
stos
jno
xchg
test
and
xorb
fidivrl
push
jae
or
and
pusha
clc
mov
dec
jbe
sbb
pop
or
jno
push
lock
dec
mov
sarb
xchg
jge
sub
lcall
adc
lock
sbb
bound
and
and
fwait
or
test
shlb
mov
mov
inc
push
lock
cmpsb
test
push
addr16
cmp
outsl
into
test
mov
jae
and
jle
jle
cmc
or
cltd
out
movl
add
cmp
lds
jnp
ljmp
mov
xchg
add
scas
dec
in
push
ljmp
or
scas
scas
sub
out
sbb
insl
sbb
and
cltd
mov
loope
pop
incl
pop
pop
shl
movl
pop
push
loope
sub
ret
cmp
lret
pop
out
push
lahf
push
sub
out
add
jo
jp
int3
jae
std
inc
lock
pop
scas
mov
cmp
and
imul
movsl
les
push
pop
mov
xchg
iret
ja
lods
movsb
jbe
xor
inc
sbb
rorl
dec
push
adc
add
jb
jae
mov
loop
pop
pop
lcall
xor
pop
jno
mov
into
insl
dec
push
mov
lret
daa
push
mov
mov
mov
cmp
enter
push
or
push
jno
scas
push
cmp
in
jg
pushf
loop
rol
xor
out
movsb
cmp
adc
mov
sbb
outsb
mov
xchg
je
push
cmp
mov
outsl
add
out
cwtl
pop
jae
lea
mov
in
test
outsl
out
jne
fnstenv
icebp
pushf
xor
push
pop
jae
add
lock
pusha
push
xor
add
xchg
int3
mov
cmp
pop
sub
push
and
test
xor
sbb
std
sbb
js
xchg
lock
sub
repnz
outsb
repz
addr16
push
pop
xchg
lock
push
add
mov
js
fadds
fimull
mov
sbb
ret
or
add
hlt
sbb
addr16
xchg
push
dec
cwtl
shll
ljmp
cmp
add
add
jae
mov
loop
jo
mov
push
fsubrs
sub
jo
push
cmpsl
iret
jo
shl
imul
cmp
cwtl
mov
push
nop
jle
push
je
jo
xor
push
jo
jecxz
inc
dec
shll
jo
ret
ljmp
inc
xor
mov
mov
push
cmp
popa
add
or
dec
lock
xorb
sbbb
ret
mull
push
pop
int
adc
lock
je
loope
out
inc
rolb
and
mov
push
loopne
lret
jo
jp
insl
or
pusha
pushf
loopne
faddl
jo
aad
stos
je
inc
movsb
jo
outsl
add
or
cmp
xchg
inc
shlb
cmp
das
mov
push
sti
repnz
mov
pop
xor
sbb
sbb
xchg
add
and
icebp
mov
push
adc
std
sbb
jl
bound
sub
std
test
or
mov
add
sbb
pop
out
mov
jns
dec
loopne
hlt
fcomip
repz
sub
popf
add
mov
jl
ret
push
or
mov
arpl
push
push
stos
add
aam
adc
mov
xchg
test
mov
xor
call
divl
sub
dec
inc
sarl
in
or
inc
in
xchg
in
jmp
mov
jmp
pop
and
dec
xchg
add
aas
fsubp
mov
cld
cmp
iret
sbb
xor
repnz
inc
lods
mov
repz
repz
push
subl
jbe
clc
cmp
sahf
xorl
in
stc
ficomps
fldl
add
or
je
jns
pop
cmpsb
sarb
jae
fs
arpl
mov
and
mov
stc
fdivl
xchg
inc
enter
jg
cmpsb
mov
cmp
inc
jo
arpl
mov
out
dec
lock
mov
xchg
arpl
out
aam
cmp
inc
in
inc
outsb
es
push
shl
inc
aad
cltd
lods
sbb
arpl
pop
or
fs
xchg
mov
mov
and
lahf
mov
fisubl
dec
pusha
push
lret
push
lods
or
out
arpl
pop
sahf
mov
xchg
mov
push
mov
xchg
jg
test
enter
out
std
mov
or
dec
push
scas
mov
inc
lret
and
dec
shlb
push
repz
sub
jmp
stos
out
mov
push
lds
xchg
out
xchg
mov
dec
add
pop
scas
pop
add
imul
mov
rcr
lock
cmpsb
test
adc
inc
cmc
add
adc
add
std
pop
and
mov
jle
push
dec
mov
pop
clc
push
daa
or
mov
jae
mov
push
shr
shll
inc
movsl
mov
pop
aaa
mov
scas
inc
in
mov
sbb
cli
jecxz
push
in
stos
pop
xchg
hlt
sahf
popl
mov
dec
fisubrl
icebp
pop
adcb
cli
ficompl
xor
insl
mov
mull
icebp
es
mov
std
lock
lods
mov
ficomps
repnz
push
outsl
shll
pop
imul
and
hlt
cmp
xchg
shrb
pusha
imul
cmp
sarb
adc
jb
mull
aaa
lcall
popa
inc
orb
push
outsb
mov
sbb
and
mov
imul
imul
mov
movsl
add
lock
shrb
ficoms
iret
sahf
push
arpl
mov
cmpb
adcl
divl
adc
jle
xor
pop
in
cmp
idivb
sub
add
jb
lock
pusha
arpl
inc
in
dec
xorl
insb
std
cmp
inc
jecxz
pop
inc
xchg
jae
jg
decl
addr16
fwait
sbb
fnstenv
pushf
fmulp
cmpsl
aam
repz
mov
sub
or
push
mov
add
push
pop
sbb
xchg
movsb
repz
pop
shrb
mov
roll
and
flds
push
insb
adc
sbb
shlb
and
push
arpl
jp
jae
fs
decl
pop
cmpsl
sbb
cmp
cwtl
jle
adc
jne
sbb
push
call
xorb
out
inc
sbb
push
scas
sbb
add
dec
outsb
mov
outsb
ds
inc
cmc
movsb
mov
mov
pop
movb
inc
push
pop
outsl
adc
rolb
xor
inc
adc
loop
or
incl
mov
push
mov
icebp
in
divl
sbb
cmp
imul
cmpsl
jae
jl
push
icebp
subb
xchg
negb
test
xchg
popa
daa
or
mov
out
pop
in
add
jns
int3
in
xor
in
cld
jae
sub
std
cltd
xchg
inc
mov
fisubrs
ror
add
push
jmp
xchg
push
les
mov
mov
outsb
adc
push
test
push
stos
cmp
aam
mov
insb
data16
shrb
push
test
jb
xor
divb
gs
out
es
sbb
ficoms
enter
mov
cmp
cli
mov
add
ret
push
int3
stc
divb
test
nop
sbb
movsl
jp
pop
push
jmp
xchg
test
mov
pop
cld
pop
push
out
scas
jo
pop
loopne
ficoml
fs
jae
jns
fdivp
dec
sbb
stos
cmpsl
sarb
push
out
fwait
movsb
fnstsw
xchg
jb
and
mov
mov
out
lock
sbb
mov
pusha
arpl
test
aad
fcmovnu
mov
push
movsl
icebp
ffree
std
mov
and
addr16
popf
cmpb
les
stc
insl
out
inc
mov
shlb
add
pop
nop
push
arpl
push
mov
xchg
imul
push
push
and
sbb
dec
dec
lret
cmp
cs
pop
dec
cld
add
jg
mov
lock
movsl
and
das
jmp
mov
arpl
fiadds
inc
int
scas
mov
sub
fs
adc
sbb
xlat
andb
or
mov
test
jnp
sarl
add
insb
je
push
out
pop
mov
add
sbb
and
jnp
test
jae
inc
aad
mov
xchg
ja
push
cmc
idivb
lock
fiadds
pop
jae
lods
xchg
pop
les
mov
mov
test
jnp
add
xor
negb
arpl
in
jbe
inc
aaa
outsl
repz
into
imul
outsl
shl
popf
cmpsl
inc
idivl
frstor
aam
hlt
dec
repnz
pop
push
test
jb
pop
loope
subl
movsl
shrb
push
jmp
add
fnstcw
call
pop
cmp
cmp
xchg
mov
or
add
xchg
lcall
out
addb
push
sbb
push
in
cs
adc
and
jo
pop
fistl
outsb
or
lahf
insb
add
popf
or
fwait
mov
or
sub
rol
jo
cmp
fdivs
hlt
jne
std
sbb
lea
js
dec
jo
out
pop
add
cmpsb
push
das
daa
xchg
add
test
setae
mov
inc
sahf
push
rcrl
mov
in
mov
test
loop
mov
xchg
leave
inc
popf
jl
and
and
fstpt
pop
repz
sbb
mov
adc
jo
pop
mov
and
ret
repz
pmaddwd
jo
loope
mov
pushf
das
push
ss
xchg
jae
inc
into
jo
mov
jmp
jo
mov
and
mov
ss
cmc
repnz
or
lea
mov
test
aas
push
pushf
nop
and
scas
hlt
jo
lret
jo,pn
jmp
notl
push
pop
mov
pop
fisubl
cmp
sub
xlat
je
int
and
pusha
lahf
test
mov
jl
push
cmpsl
je
lods
inc
pusha
and
adc
jo
cmp
cld
jnp
xchg
xchg
jbe
sub
mov
jmp
dec
lods
divl
jmp
movsl
or
xlat
xor
add
push
jo
lds
xchg
jo
insl
xor
inc
sub
and
mov
nop
or
imul
frstor
sti
pop
enter
in
insl
and
adc
or
jmp
push
xorw
dec
mov
mov
sbb
push
xchg
jo
loope
dec
sbb
mov
inc
xorl
add
in
mov
inc
push
jae
cmp
nop
test
adc
js
jno
jb
push
fs
and
aas
in
or
addl
inc
call
dec
jo
stos
xor
int
shr
rcll
jo
orl
lret
test
rcr
pop
push
inc
dec
dec
jo
popf
xchg
sahf
pop
in
out
mov
xchg
aas
ror
movsl
sub
pusha
pop
and
mov
pushf
cmpsb
jne
xor
jo
ja
dec
jp
lret
jmp
addl
dec
scas
shlb
fcomps
jo
test
aas
sub
inc
add
push
addr16
stos
mov
enter
and
mov
or
sarl
lret
mov
cmpl
add
pusha
jg
jo
jmp
movsb
xchg
lock
xchg
stos
les
cs
into
je
push
test
mov
mov
or
jo
inc
cmp
in
and
dec
lock
into
cwtl
loope
sub
rclb
pop
adc
jae
js
pop
dec
insl
jo
shlb
xor
jo
stos
or
test
push
push
sti
fs
sub
lret
ds
add
jecxz
push
test
lods
icebp
pop
adc
outsb
divl
mov
gs
fwait
insb
ja
xchg
dec
jo
out
push
and
pop
mov
out
ret
pop
repz
js
xor
mov
adc
fstpt
mov
popa
mov
std
repnz
pop
dec
mov
jo
jnp
and
add
jo
fldl
pushf
jo
push
inc
xorb
add
jo
push
xor
lret
add
inc
jo
aaa
cli
adc
mov
jo
nop
cwtl
enter
shll
add
adc
scas
repz
popf
movsl
cmc
imul
nop
or
jne
stos
popf
xchg
jno
add
jo
test
lahf
mov
fwait
mov
loopne
jmp
mov
psrlw
lds
push
adc
push
push
sub
sar
lods
jo
pop
inc
fcmove
fidivs
or
push
xor
mov
out
push
inc
jl
ficoms
cmp
cmpsb
xchg
cld
or
mov
push
sbb
call
out
sbb
add
aas
sbb
cmpb
in
inc
add
jno
jge
jo
and
jno
dec
mov
jo
imul
in
push
nop
pop
jo
adc
jge
jle
fadd
add
aas
jo
ds
cmpsl
test
xor
or
outsl
je
int
jg
add
pop
ret
mov
rolb
add
xchg
jo
mov
mov
ljmp
adc
push
push
aad
jb
push
jo
push
je
jo
hlt
es
push
jecxz
rcr
add
lods
pop
jb
arpl
in
fimuls
dec
scas
js
jl
inc
dec
jns
lods
rcl
cmp
fidivl
sub
cmp
pop
aas
jo
mov
inc
dec
stc
js
jae
mov
fisubrl
icebp
pop
shrl
popa
jo
lahf
mov
test
push
jo
add
jo
addr16
in
not
cld
sahf
cmc
addb
rclb
stos
xor
dec
leave
nop
and
jge,pt
popa
mov
mov
jbe
cltd
pop
jo
dec
imul
lds
sub
sti
xor
cmp
add
jo
pop
std
push
push
cmpsb
ficoml
sub
js
mov
jo
adc
imul
push
mov
push
jbe
mov
lods
adc
popf
jns
call
mov
jo
push
mov
ds
or
insl
sti
mov
cmc
fldl
jo
ja
mov
stos
or
test
fistl
sub
jo
imul
jo
inc
repz
pop
out
aad
jo
in
mov
rorb
jnp
push
jp
jo
push
xor
dec
call
sbb
outsl
gs
jae
fmull
sub
lock
and
mov
mov
dec
adc
imull
push
sub
pop
adc
shlb
cmp
pop
add
push
repz
iret
insb
lret
sub
ss
push
jo
add
ret
jle
jo
jl
fisttps
mulb
jo
aam
outsl
mov
cmpsl
sub
jmp
mov
inc
push
pop
rolb
fnstcw
int
pshufw
in
push
mov
push
cld
insl
pop
jno
notl
adcb
dec
lods
dec
or
push
mov
sar
pop
xchg
sti
and
insb
enter
xor
push
outsl
cli
jo
neg
mov
adc
and
in
mov
mov
jo
js
decb
cld
movsl
lock
out
push
pushf
xchg
dec
in
cli
jne
es
lcall
jo
shl
in
mov
loope
call
repnz
cmpsb
insl
lahf
add
scas
mov
jnp
popf
xchg
inc
jo
jl
cmpsb
imul
lahf
int3
push
mov
out
xchg
testl
les
repz
subb
jo
shl
mov
clc
les
add
popf
in
mov
xchg
pop
pop
leave
dec
js,pt
faddl
jge
inc
std
data16
or
and
jo
or
pop
mov
cld
mov
test
out
jno
loop
push
mov
loop
mov
mov
mov
push
addr16
pop
cmp
jo
cmpsl
es
imull
fwait
subl
push
out
ljmp
fcmovb
push
jo
movsl
cwtl
stos
sbb
xor
nop
mov
lcall
jo,pt
inc
jne
and
jo
pop
push
addr16
adc
inc
call
cmovnp
add
jbe
sbb
gs
mov
push
loope
xchg
fbstp
mov
pop
cwtl
jo
xchg
jo
inc
imul
jo
jae
add
pop
push
jnp
nop
test
test
mov
leave
outsb
push
or
or
mov
in
and
mov
jp
pop
cwtl
movsb
push
ja
daa
push
inc
jg
lods
xor
popf
js
add
jo
jne
test
inc
je
jo
lahf
mov
jle
mov
xchg
jo
addr16
js
loope
add
fdivs
testl
jo
data16
jnp
out
out
jg
insb
nop
jne
pop
test
jo
scas
cmpb
xchg
pushf
mov
mulb
inc
dec
bound
jo
adc
ds
lods
or
jo
mov
sbb
sub
enter
outsb
xchg
outsl
add
sub
pop
mov
fidivl
xchg
jmp
pushl
call
inc
jne
jo
es
adc
sub
out
movsl
xchg
in
add
xor
ret
mov
pop
rcrb
xor
das
cltd
lods
test
lds
push
in
leave
nop
int3
and
jae
movsl
scas
sub
loopne
lret
push
xchg
add
repnz
inc
or
lcall
jno
mov
push
pushf
pop
repz
and
sbb
sub
dec
push
jmp
sub
jno
fnsaves
popa
rcr
dec
test
inc
or
jle
mov
mov
adc
lock
in
dec
ret
sbb
jge
lahf
subb
hlt
std
sub
outsb
scas
push
xlat
pop
jmp
cli
mov
and
push
cmp
adc
mov
cmpsb
pop
sub
xorb
jbe
xor
cld
subb
int
fdivs
or
testl
shll
jmp
inc
cmp
mov
add
jle
int3
or
add
arpl
ret
xchg
daa
rcrb
outsb
adcl
cmp
xchg
arpl
aam
lret
cmc
sbbl
inc
sbb
pop
pop
fs
loopne
push
push
jo
stc
jl
sti
outsl
jo
sahf
push
pop
cmp
pop
xchg
outsl
mov
notl
arpl
and
es
imul
lods
pop
das
pop
jae
cmp
sbb
movsb
loope
arpl
lds
dec
clc
adc
inc
inc
cmp
test
mov
mov
in
xchg
shl
adc
mov
es
jnp
pusha
xor
setns
je
sub
or
daa
xor
hlt
xlat
fwait
nop
and
add
js
sub
jle
scas
jae
xchg
in
dec
mov
ljmp
dec
test
jae
pusha
push
lret
fisubrl
jg
loope
lods
sub
arpl
mov
pop
add
cwtl
xchg
js
xor
out
decl
sub
push
mov
xor
xchg
lods
mov
outsl
out
mov
test
push
fnsave
sub
mov
je
xchg
xchg
cmpsb
shrl
inc
pop
xchg
cmpsb
pusha
movb
out
adc
and
xor
push
sbb
xor
sti
popa
int
repz
mov
arpl
xor
mov
add
jo
outsb
dec
inc
cmp
andl
stc
cltd
inc
cmpsb
push
notb
push
out
xor
cmc
mov
into
out
sbbb
lods
fcos
fsubp
cli
idivl
je
push
jo
aaa
xchg
fs
add
or
inc
or
out
popf
mov
jo
lea
and
sub
sub
insl
jp
or
add
inc
xor
pop
pop
jo
dec
mov
repz
or
cmpsl
xchg
xor
xor
pop
fisttps
jl
stos
push
ja
xor
aaa
add
jnp
dec
xchg
jo
sub
addr16
jle
and
iret
jge
pcmpgtw
sub
inc
jb
push
clc
jle
jo
int3
aam
xchg
sbb
das
repnz
xchg
inc
inc
push
jns
or
stos
jae
popa
cs
repnz
insb
in
cmpsl
icebp
fwait
jns
adc
orb
sub
scas
cltd
jo
pop
loop
and
sbb
dec
push
stos
xchg
jl
in
cwtl
notb
aad
fwait
adc
repnz
xor
stc
scas
iret
push
jo
rolb
inc
jp
es
sbb
out
out
jp
jo
ficoms
insl
rclb
test
dec
xchg
jae
mov
jo
cli
ljmp
push
dec
stos
push
jo
xchg
mov
jo,pt
jnp
cmp
loopne
mov
pop
loop
ja
out
jo
ret
aaa
push
sub
mov
dec
jo
push
fwait
das
icebp
cmp
test
clc
jo
pop
sahf
or
sbb
jmp
movb
js
shlb
xorb
pop
lret
out
enter
aam
mov
test
mov
pop
sarl
mov
jo
jbe
and
push
cli
mov
lock
enter
fwait
jo
dec
add
and
adc
cltd
push
sub
loope
jo
or
repnz
jmp
ljmp
sti
jo
shlb
scas
jo
inc
cmpsl
testb
out
rclb
dec
jo
sub
or
push
loop
xchg
clc
in
xchg
bound
jo
cmp
xchg
inc
xor
xor
mov
sahf
imul
xor
ret
xchg
jns
cltd
add
jo
xlat
pop
sub
inc
fsubrs
push
mov
loop
lock
fwait
sbb
mov
push
cmpsb
lret
scas
adc
out
mov
je
push
fisttpl
pop
lock
sbbl
out
add
xor
and
data16
cmovns
inc
xor
sbb
sbb
cmp
fbstp
xchg
mov
or
push
mov
out
jae
cmp
jo
push
push
or
popa
inc
push
jno
xor
jnp
out
push
xchg
inc
lods
mov
bound
stc
out
push
or
push
mov
mov
call
cmp
aas
int3
dec
push
imul
insb
sub
clc
or
inc
pop
jo
nop
lret
jo
int3
int
or
fcomps
testb
mov
idivl
in
insb
dec
inc
inc
or
mov
out
jo
add
inc
mov
sub
or
mov
inc
or
imul
jo
push
cmp
rol
clc
in
xor
cmp
in
jmp
sub
insl
push
lods
pop
js
or
cli
jnp
sahf
lea
sub
stos
cmp
lret
divl
inc
in
jle
xor
jo
jnp
into
cmp
mov
push
adc
data16
movsb
mov
cmpb
pusha
fs
or
data16
in
test
add
pop
ja
mov
add
fistl
lcall
scas
in
psrlw
insb
outsb
movsl
in
push
jo
xchg
je
cmp
imul
dec
test
mov
lods
and
adc
mov
jo
cmp
es
jmp
les
or
out
mov
jae
inc
mov
jo
cwtl
shr
hlt
iret
add
jo
lock
xor
xorb
shll
adc
leave
dec
xor
iret
cs
je
dec
out
and
aaa
lods
add
jo
loope
test
sahf
leave
and
in
subb
fimull
cmp
jo
mov
popf
pushf
pop
inc
dec
rcrl
int
or
push
cltd
add
movsb
push
push
insb
cmp
mov
xchg
inc
sub
adc
fs
and
or
pop
inc
ret
setne
fimull
dec
pop
outsb
mov
adc
jo
cs
mov
mov
inc
adcb
incl
bound
add
mov
aad
pop
jne
cmpl
push
fsts
das
insb
shll
jl
mov
jo
cmp
sub
cs
nop
mov
lahf
sub
adc
aad
sahf
insl
scas
xor
cmp
das
sub
in
jo
in
stos
sbb
mov
repz
lahf
jecxz
mov
in
dec
mov
inc
push
cmpsl
inc
addr16
cld
mov
jo
pop
std
or
pushf
xor
jo
les
sbb
mov
jo
sub
pop
cwtl
mov
pop
cmpsl
mov
push
xchg
jo
negb
inc
loop
int
mov
js
dec
outsl
sarb
iret
jo
push
or
test
sub
test
push
out
mov
push
xchg
mov
cltd
sub
inc
adc
idivb
or
xor
sbb
sbb
int
jo
lock
fs
dec
movsl
or
mov
sbb
sub
pop
push
pop
lods
lret
inc
and
stos
mov
xchg
rorl
fnstcw
dec
add
and
in
inc
arpl
sti
xorl
cmp
jmp
mov
add
cwtl
xchg
xchg
jo
out
adc
push
addr16
pusha
pop
ljmp
or
jo
inc
push
in
test
or
jne
ret
or
jecxz
outsl
pop
stc
mov
jo
test
pop
dec
push
imul
test
push
push
out
push
aam
or
jo
push
cmp
gs
lea
scas
mov
clc
pop
lret
cmp
test
dec
js
cs
cltd
repz
clc
jo
adc
push
movsl
sub
shr
jmp
mov
shll
sub
stos
add
orb
jo
mov
mov
jo
test
push
jmp
pop
outsl
sti
xchg
jo
mov
adc
imul
pop
jo
js
jb
push
mov
add
xchg
aaa
jae
push
push
loop
push
sbb
mov
mov
loope
push
sbb
jae
in
pop
dec
inc
mov
jo
xchg
sbb
je
mov
mov
jo
frstor
push
pop
mov
test
sbb
adc
pop
dec
nop
xchg
js
loop
add
cs
pop
imul
clc
mov
ja
movsb
ss
outsb
ret
arpl
sbb
and
sub
mull
or
adcl
inc
add
xor
das
jo
ficomps
js
dec
push
xor
push
jo
dec
push
xchg
push
push
les
repnz
jp
int
sbbl
sub
inc
cld
int
mov
jns
fnstcw
push
je
jo
sbb
out
push
or
sub
call
add
int
xchg
push
cwtl
sahf
or
ret
stos
cli
fdivrs
cmp
imul
push
pop
inc
mov
js
mov
jo
cmp
sbb
push
dec
cli
nop
inc
adc
icebp
inc
mov
jmp
std
arpl
mov
insl
and
and
xor
insl
jns
push
in
scas
mov
add
jecxz
insl
or
int3
stos
cli
lds
loope
data16
imul
cmpsb
out
movsl
jecxz
cmp
rcrl
sbb
mov
push
pop
push
popa
sub
into
sbb
adc
add
sbb
mov
inc
fisubl
and
je
and
sbb
pop
lds
inc
cmp
ret
stos
dec
mov
shll
loop
movsl
and
cmp
cmp
aad
in
lods
test
and
je
fcmovne
sti
sub
ljmp
push
xor
xor
mov
out
and
jns
dec
dec
lods
sbbb
stos
das
xlat
lods
daa
jae
fnstenv
jle,pt
arpl
xor
fimull
mov
jbe
jnp
pop
mov
adc
and
jmp
inc
das
push
mov
add
popf
adc
notb
scas
data16
mov
dec
xor
xchg
inc
jecxz
ds
lock
xor
imul
or
int3
sub
inc
push
lea
out
loope
or
mov
mov
jne
fdivrs
cltd
add
jo
dec
mov
je
adc
mov
xor
aaa
jo
inc
repnz
pop
int3
test
sub
shlb
or
int
add
dec
ret
mov
test
das
nop
xchg
push
jae
jno
bswap
xor
push
mov
mov
mov
fbstp
insl
cmp
addr16
jl
push
in
ljmp
mov
ljmp
cs
fsub
cmp
sbb
test
fisubs
inc
ljmp
jo
push
mov
xchg
xor
data16
jbe
decl
adcb
in
enter
xor
mov
push
sti
xchg
pop
xchg
arpl
jb
addr16
and
inc
cmc
das
dec
and
or
bound
xchg
cmp
cwtl
xchg
cmc
aaa
stos
in
or
jbe
jle
les
jo
dec
aad
fiaddl
pop
psrld
movsb
dec
pop
push
jo
fstpt
dec
pop
push
lret
mov
popf
mov
mov
dec
sbb
jl
and
in
xlat
push
lea
mov
inc
stos
addb
sub
stc
jo
aas
hlt
in
jno
lods
nop
jecxz
pop
insl
stos
jb
subb
jge
pop
xchg
mov
aam
push
mov
inc
jo
mov
mov
cmovb
nop
test
jns
push
mov
and
lods
mov
xor
decb
sbb
pop
fxch
insl
imul
mov
lods
roll
adc
adc
jne
mov
mov
push
push
fincstp
xor
ds
mov
pop
std
or
jle
pusha
jno
xor
jo
xchg
mov
mov
sarb
inc
cmp
pop
rol
leave
or
and
jo
push
out
mov
sbb
das
jg,pt
in
mov
cmc
dec
pop
aas
orb
insb
push
xor
jo
push
adc
dec
xor
sub
movsb
mov
inc
push
leave
dec
mov
pop
es
shrl
pop
mov
sub
fwait
jo
or
in
xchg
hlt
add
lock
mov
addb
push
xchg
adc
lahf
jo
sub
ja
jo
pushf
les
jo
cmp
or
mov
test
scas
nop
and
inc
loopne
sub
mov
les
push
mov
movsl
stc
jae
jo
lds
outsl
jo
mov
xchg
lods
jo
fldl
test
jo
jno
fcoms
mov
pop
jo
cmp
xor
add
push
jp
shr
push
mov
adc
vcvttpd2dq
push
xchg
mov
ret
xchg
xorl
jo
jg
iret
int3
andl
std
mov
mov
aad
rcll
add
pop
jbe
insb
loopne
js
sub
dec
push
in
mov
xchg
nop
mov
push
jns
jecxz
adc
jo
xor
xlat
jo
lcall
and
rorl
or
jb
sbb
jmp
call
test
jae
sub
mulb
mov
fnsave
xor
jo
push
adc
int
xchg
outsl
cs
lcall
out
incl
xchg
mov
mov
cmp
jo
imul
jo
jge
ret
nop
mov
add
jo
inc
cmc
add
lcall
dec
push
pop
push
push
rol
adcb
fildl
shlb
outsb
dec
and
mov
idivb
jo
dec
gs
cmp
dec
cmp
sbb
les
movsl
xor
shlb
jno
and
sar
int
pop
jbe
push
inc
mov
xchg
mov
int3
push
orb
clc
mov
ds
sub
push
shr
xorb
int3
jmp
in
adcl
data16
sbb
inc
mov
jmp
xor
cs
sti
insb
test
dec
sbb
xor
fnstenv
add
and
jo
frstor
shlb
push
stos
imul
mov
mov
into
ret
sub
dec
inc
push
std
data16
jnp
fwait
and
cld
out
movb
cmc
adc
and
jns
pop
cmp
sub
jo
jl
cmp
push
sbb
jo
mov
mov
pop
cld
mov
jo
push
cli
test
jo
xchg
pop
ljmp
cld
push
mov
or
ret
mov
fmuls
push
push
pop
outsl
xchg
sahf
mov
loope
movl
mov
add
rclb
pop
rorb
cmp
cwtl
fwait
mov
dec
pop
cs
addr16
insb
jo
ljmp
mov
xor
jo
xchg
inc
data16
inc
jo
int
movsl
rorl
jmp
cmc
loop
in
pop
adc
subb
jo
pop
cmp
jo
call
xor
ljmp
dec
jb
jmp
sub
test
in
jg
insb
loope
push
movsl
push
aaa
cmp
dec
mov
aas
fsts
jo
scas
fwait
int
dec
pop
push
leave
and
xor
pop
lahf
and
cld
repz
sub
push
xor
andb
and
jg
ljmp
jle
mov
sbb
push
add
pop
jo
fisubrl
push
jo
daa
jl
jne
jae
nop
or
stc
dec
push
xchg
js
jle
lret
mov
mov
pop
and
push
adc
or
xor
push
ret
push
mov
jo
and
or
rolb
dec
adcb
clc
or
jo
mov
inc
iret
jo
adc
add
dec
cli
add
mov
js
mov
frstor
idiv
push
jo
fstpt
shlb
inc
fwait
iret
mov
ret
push
xor
and
xor
push
js
jo
shl
xchg
or
sbb
cmpsb
test
and
pop
lods
xor
cmp
push
dec
nop
js
nop
movsb
xchg
add
add
shlb
scas
inc
cmpsl
imul
jo
popa
cmp
xchg
adc
or
clc
push
and
jo
dec
mov
mov
jo
cmp
or
push
jo
mov
jbe
sbb
push
mov
jo
push
dec
imul
in
sbb
fisttps
sbb
pushf
pusha
dec
jg
mov
and
lret
out
popa
jbe
shrl
xchg
rorl
jnp
dec
adc
mov
jae
dec
bound
ds
sbb
push
push
push
fstpl
lods
sbb
aad
mov
jp
jo
movsb
scas
icebp
push
add
push
jmp
pop
jb
aad
or
lods
mov
pop
push
ljmp
jo
enter
jae
mov
sbbb
scas
mov
icebp
out
push
mov
and
icebp
mov
xchg
mov
mov
fiadds
push
or
mov
nop
jmp
add
xor
cmpsb
into
lret
fisttpl
insb
push
sbb
jecxz
fdivl
repnz
mov
mov
in
and
xor
mov
cli
xchg
in
test
inc
out
inc
pop
lock
adc
div
jmp
insl
sbb
mov
insb
or
cmp
dec
xchg
xor
add
sarl
mov
push
je
cmpsb
jo
inc
and
push
jecxz
push
push
bound
mov
cwtd
into
fisttps
xchg
push
inc
xchg
dec
ss
push
cmp
repz
jle
ds
aas
mov
into
jae
iret
mov
jp
lahf
imul
pop
push
dec
jo
lret
fstp
pop
das
cmpsl
pushl
inc
push
mov
xchg
sub
not
aaa
in
jb
stos
int3
jae
loope
dec
add
out
jo
int3
nop
fsubrs
mov
imul
repnz
loopne
outsb
pop
cmpsl
inc
mov
clc
sbbl
jne
jle
sbb
getsec
add
jecxz
jae
push
scas
out
lret
and
jae
jnp
rcll
std
inc
inc
cmpsb
mov
shl
pop
and
outsb
jne
jo
arpl
or
jb
or
push
stos
sarb
and
mov
std
mov
push
jg
add
ret
in
jo
pop
or
sbb
mov
cld
pop
or
std
push
adc
pop
out
jne
jo
jge
arpl
in
scas
push
add
in
bound
mov
jnp
sbb
xor
add
or
or
lds
add
test
mov
imul
jno
gs
mov
scas
cmp
movsl
mov
mov
inc
jo
inc
aad
repz
cwtl
imul
sub
inc
inc
sub
mov
cmp
dec
aad
icebp
and
lahf
xor
out
addr16
mov
cs
call
arpl
mov
ljmp
adcb
jbe
jge
in
inc
sti
js
bnd
jo
add
sarb
jno
in
ja
push
jns
xlat
inc
dec
sub
aas
int3
pop
fwait
pop
insl
andb
sbb
and
insb
imul
mov
inc
jg
jo
inc
mov
loop
mov
mov
fldt
out
addl
push
xor
push
pop
nop
inc
mov
cmp
dec
pop
pop
jbe
dec
cli
bswap
out
sbbb
push
outsl
inc
xor
sbbb
jo
and
jge
outsl
jb
jo
lcall
jo
in
pop
insb
xchg
cmp
mov
dec
inc
nop
dec
adc
push
sub
mov
pop
inc
adc
jo
adc
jae
xchg
mov
push
xchg
addr16
xlat
aam
pop
testb
adc
xor
xchg
iret
adc
icebp
imul
addr16
lret
pmaddwd
mov
test
fidivs
fidivl
stc
or
jo
incb
jbe
cmp
shl
push
push
insl
jp
jo
push
push
cmp
repz
mov
jl
or
adc
test
xchg
out
xor
ds
adc
js
inc
cmpsb
popa
in
push
dec
pop
jo
jl
adc
cmovl
mov
in
xchg
mov
out
clc
sub
es
jns
jo
out
cmpsb
add
data16
sub
and
aaa
dec
fmul
push
or
jg
mov
add
int
fmulp
jo
idiv
lods
add
popa
sbb
jo
gs
mov
into
addr16
add
rcll
jo
sbb
and
daa
icebp
nop
adc
pop
js
push
push
mov
jno
js
repz
movsl
jo
fsubl
mov
loope
sbb
push
pop
lahf
and
and
nop
aam
popl
les
and
sub
iret
sbb
les
jo
pusha
scas
pop
push
jb
jnp
xchg
jae
cs
ds
mov
and
jbe
xchg
dec
pop
push
cmp
test
cmp
mov
insl
jae
sub
jo
push
mov
sub
and
ljmp
cmp
inc
ds
js
in
arpl
dec
xor
or
and
or
scas
jo
inc
es
popa
jmp
jo
lods
push
dec
cmpsb
jbe
jo
inc
pop
out
cld
loopne
jo
stos
push
mov
and
nop
scas
adc
lods
sub
stos
ds
int
sbb
jo
jmp
loop
jo
sub
jg
and
out
cmp
in
stos
out
pop
xor
mov
sub
xor
jo
popf
bswap
sbb
lret
int
imul
ds
xlat
sbb
add
cmc
jo
lock
pop
fucom
lea
pop
push
jmp
jo
imul
jo
xor
clc
lahf
movsb
mov
and
jo
dec
push
scas
add
fsubrl
xor
sahf
jo
out
or
mov
add
mov
insl
jo
inc
mov
repz
dec
decb
hlt
adc
aad
sahf
add
out
nop
push
pop
and
repz
aam
leave
fistl
inc
int
sbb
push
loop
inc
in
jo
fwait
adc
out
jo
lret
push
dec
ja
insl
outsl
retw
push
imul
jecxz
and
add
mov
je
scas
outsl
cmp
jo
xor
mov
pop
int3
jge
fisubrl
jno
jo
insb
and
mov
jo
aad
ror
mov
test
dec
mov
xchg
jo
mov
inc
enter
imul
rcrl
xchg
nop
bound
ds
jle
mov
cmp
rolb
dec
stos
fiaddl
jns
push
mov
jl
adc
fsubrl
fnsave
bswap
popa
outsl
daa
mov
int3
jle
jno
cmpsb
push
mov
sub
jns
divps
lock
jo
getsec
int
imul
outsb
ret
hlt
adc
sbb
pop
outsl
in
and
push
cmp
test
jo
outsb
and
jb
inc
xorb
ficoms
pop
scas
push
or
loope
sarb
test
cmp
sbb
adc
push
enter
dec
stos
jo
int3
dec
jo
pop
pop
shll
mov
pop
movb
push
push
xchg
movsl
push
pop
pop
mov
jne
jno
arpl
adc
xchg
inc
je
jo
shrl
stos
jo
inc
mov
jo
arpl
sti
pusha
and
test
fimull
mov
jo
pushf
add
cs
outsb
scas
aaa
xchg
cmpsl
ss
sub
enter
inc
ret
outsl
lea
jb
fiaddl
add
mov
push
ror
jns
mov
cmpsb
xchg
push
in
test
jns
push
adc
faddp
sbb
cmp
dec
jmp
repz
add
sub
int
pop
js,pt
pop
or
mov
pop
das
jle
add
lcall
add
scas
int
mov
mov
and
mov
xchg
inc
lock
fs
sahf
cltd
pop
mov
je
and
jo
hlt
fidivrl
jo
lret
add
ljmp
lods
loope
mov
inc
je
xor
nop
in
xor
pop
or
mov
popf
jo
out
scas
xchg
popa
sbb
mov
jae
inc
aad
dec
insb
loopne
cmp
xor
mov
pop
inc
push
lahf
add
fbstp
sbb
and
sub
aad
enter
adc
pop
cld
adc
iret
sub
sbb
push
stc
cmp
dec
sub
jbe
mov
pushf
and
dec
jne
inc
std
jo
imul
int
loopne
push
jg
in
lahf
gs
pop
in
pop
inc
and
dec
adc
hlt
inc
fcom
iret
shrb
jle
jo
stc
mov
mov
cmp
mov
adc
mov
jo
push
sbb
in
loop
sub
stc
arpl
cmp
out
inc
mov
xchg
leave
outsl
insb
or
rolb
inc
xchg
jo
neg
das
sub
mov
jge
fcmovnb
flds
lcall
arpl
cmpsl
jo
out
xor
cmp
mov
mov
sub
mov
clc
ffreep
mov
jo
push
stos
imul
jle
xchg
nop
jmp
sbb
jnp
pop
cmpsl
jo
aam
sti
mov
rorl
in
jo
push
std
pop
test
imul
je
int
repz
sub
loop
push
mov
dec
rcll
xor
leave
sub
xor
and
scas
jl
jo,pn
adc
pop
sbb
and
push
pushl
jo
js
andl
jo
das
insb
xchg
inc
inc
jne
jo
icebp
mov
cmp
jle
cmpsb
cs
pop
xor
leave
inc
in
ret
push
or
xor
in
dec
scas
push
jo
adc
shll
mov
mov
adc
push
pusha
add
xchg
pmullw
xchg
mov
jl
xor
insl
xchg
push
jb
fbstp
jo
jmp
shlb
sbb
sub
fistps
test
sbb
push
mov
es
clc
push
ret
jo
mov
sub
pop
bound
loop
pop
lock
mov
enter
push
sub
sar
dec
je
jmp
xorb
fnsetpm(287
outsb
cmp
push
fildll
jo
lret
repnz
dec
jo
xor
xor
jno
adc
inc
and
and
mov
jo
popf
fisubs
push
outsl
cmp
repnz
dec
lods
mov
push
xor
cmp
jo
inc
outsb
mov
mov
mov
cmc
jo
push
add
jo
shrb
mov
out
outsl
add
inc
dec
push
fildl
lods
mov
leave
sbb
inc
imul
mov
mov
lds
pushl
push
adc
push
std
fdivp
rcrl
sbb
lret
push
jns
push
faddl
pop
inc
push
and
xchg
xchg
outsb
nop
jl
enter
rorb
sub
out
jp
push
lcall
mov
mov
call
gs
imulb
hlt
mov
push
lock
push
pop
cltd
adc
jle
pop
movsl
or
orb
lods
mov
out
jae
add
jnp
and
xor
fwait
dec
or
insb
adc
movsl
sub
fwait
divb
sub
cmp
lret
pop
inc
clc
movq
leave
jl
pusha
cmp
call
cli
adc
fnsave
push
dec
mov
iret
lods
mov
out
jne
add
popa
rolb
pop
imul
cmp
push
ja
jle
cmp
cmpb
push
data16
push
mov
push
imul
cwtl
addr16
add
push
test
mov
data16
sub
hlt
lock
out
and
and
iret
icebp
cltd
shlb
inc
xchg
jae
jp
ja
push
lods
jl
jl
jmp
pop
in
bnd
push
inc
jns
ret
mov
clc
mov
xchg
loop
dec
sub
icebp
cmp
pop
fisttpll
sahf
push
out
faddp
pop
jp
shll
out
cmpsl
pop
jle
fistps
cs
push
out
push
call
inc
aad
popf
add
jno
sbb
fstl
cmp
movsb
push
insl
pop
pop
jo
sbb
into
fsubs
jo
pusha
xchg
cs
test
adc
pinsrw
pushf
aad
mov
push
cmp
or
inc
mov
xor
xor
xchg
or
leave
neg
push
sbb
adcb
inc
add
xor
adc
adc
inc
fstpl
inc
cmc
and
loopne
jae
push
push
jae
js
int3
pop
push
es
cmc
lea
rcrl
push
lcall
inc
dec
sbb
pop
and
mov
hlt
or
lea
xchg
dec
add
mov
inc
xor
or
stos
lods
push
daa
jle
mov
shr
hlt
fnsave
loop
pop
dec
push
test
lock
test
dec
mov
ret
outsl
test
icebp
mov
jae
xchg
jae
mov
sub
xchg
dec
cmpb
cs
or
movsb
std
in
mov
adc
sbb
ss
push
pusha
mov
pop
jbe
adc
jge
mov
jle
add
loop
xchg
mov
dec
hlt
mov
arpl
aad
es
addr16
scas
inc
pushf
sub
inc
pusha
daa
mov
in
jae
adc
imul
jl
ret
inc
test
pop
xchg
int
adc
push
popa
fidivrl
or
test
sub
ret
bound
insl
jo
lahf
fisttpl
ret
add
insb
fildll
cmp
cmpsl
push
xchg
shlb
cmc
enter
push
gs
mov
lcall
shll
cmp
rclb
push
adc
push
scas
rep
and
out
mov
sar
out
aas
cmp
rcrb
add
and
inc
xchg
jmp
lods
xorb
adc
or
jle
cmp
inc
fldenv
jge
scas
pop
cs
mov
mov
jnp
arpl
mov
addr16
lock
les
or
mulb
jl
jns
imul
andb
xchg
scas
jae
iret
sbb
or
mov
scas
adc
pop
sbb
fsubl
sub
les
ljmp
pop
mov
push
nop
xlat
jae
sahf
cmpsl
jecxz
push
jmp
sub
ss
and
out
or
int
loop
push
pop
jp
lahf
inc
cmc
mov
push
ficomps
pop
jp
mov
int
test
loope
inc
shrl
xchg
push
mov
mov
out
lds
adc
stos
jns
adc
arpl
mov
outsb
mov
dec
int3
hlt
cmpsl
nop
add
outsl
insb
shll
mov
es
test
xchg
shl
dec
xor
test
or
cmp
jge
lods
out
add
lcall
pop
fbstp
xchg
dec
lret
cmp
mov
inc
push
adc
scas
jae
push
lds
pop
adc
add
sarb
jns
push
xorl
imul
loop
xchg
jg
cmpsb
inc
fwait
subl
inc
xchg
scas
sub
push
mov
sbb
rorl
jecxz
arpl
fxch
xchg
addr16
dec
adc
cld
fadds
pop
enter
xor
jae
imul
mov
notb
jo
mov
sbb
daa
pop
in
jecxz
call
dec
or
imul
jle
jae
jmp
pop
decb
popa
or
cmp
xor
inc
aaa
outsb
and
sbb
mov
out
push
pop
xor
cmp
es
add
inc
sub
loop
jno
xchg
dec
inc
mov
jno
imul
push
enter
sbb
add
sub
push
sahf
jmp
dec
fucomip
aam
ds
sbb
pop
ficompl
or
dec
shlb
or
sbb
xchg
dec
out
mov
inc
pop
push
outsl
pop
xor
and
fs
outsb
mov
xor
repz
mov
pushf
lret
mov
xchg
sbb
arpl
or
popa
bound
or
cwtl
mov
adc
fs
inc
addr16
mov
xor
mov
push
lret
jle
pop
xchg
xchg
mov
jne
xorb
andb
sti
addr16
pop
mov
faddl
cmpsw
fsubs
cmp
sub
mov
mov
ds
in
sub
push
sarb
lret
daa
add
push
dec
jmp
je
sbb
out
in
nop
mov
inc
vpandn
sub
pop
dec
add
or
in
add
jno
adc
hlt
wrmsr
jae
imul
mov
xor
xor
pop
xorl
push
imul
jbe
loope
push
out
pop
adc
icebp
adc
mov
insl
in
js
pop
out
ret
adc
ret
sbbl
pop
mov
cmpsb
dec
movsb
push
mov
jbe
shl
loopne
inc
enter
incb
sub
lods
jg
into
cmp
out
arpl
dec
jecxz
push
or
fs
pop
lods
jle
push
or
push
mov
jae
dec
enter
mov
cwtl
pushf
pop
notl
xlat
dec
or
repnz
jne,pt
imul
push
leave
lds
lods
cmp
sbb
arpl
dec
lds
ljmp
sbb
daa
data16
jne
rcrb
pop
push
pop
call
sti
pop
loope
popf
pop
jb
rcrl
and
lods
test
lods
lods
std
in
xchg
dec
fnstenv
pop
out
adc
stc
and
or
push
sbbb
jo
xchg
cmp
movsb
push
jge
into
pop
push
mov
jmp
cmp
scas
push
aas
pop
xchg
inc
repz
iret
add
cmp
nop
arpl
inc
jecxz
dec
fnsave
shlb
pop
mov
mov
sub
sbb
dec
andb
cwtl
cltd
loope
es
fs
repnz
into
scas
call
je
lock
stc
movl
popf
and
dec
cmp
loop
imul
notb
jle
mov
add
inc
push
sbb
imul
pop
mov
add
ret
adc
insl
mov
in
mov
in
cmp
lret
pop
nop
call
cmpsb
inc
dec
ds
jmp
mov
outsl
imul
pop
pop
arpl
xchg
mov
jmp
xchg
ds
gs
jae
fwait
push
mov
dec
lea
cmp
push
repz
mov
add
add
mov
ror
sbb
lret
xor
cmp
fptan
fwait
inc
aas
xlat
imul
pop
icebp
push
xor
adc
sahf
pop
mov
xchg
sbb
jmp
in
jo
std
arpl
push
fidivs
jb
and
and
test
fs
pop
pop
imul
sub
scas
push
call
push
sarb
jne
repnz
inc
out
xorl
in
aas
mov
mov
sbb
das
pop
add
out
and
push
mov
pusha
hlt
mov
inc
xor
ja
cmpsl
sbb
or
stos
cmp
fs
dec
aaa
in
out
jl
mov
xchg
sbb
pop
out
movsb
pop
aam
mov
adc
test
imul
mov
out
add
loopne
cmp
and
push
sbb
mov
xor
out
mov
daa
pop
inc
mov
call
dec
scas
dec
cltd
ja
es
sbb
push
mov
test
xor
lret
xor
cmpsl
loopne
rolb
sub
in
imul
test
div
xchg
icebp
cld
call
sub
cmpsb
arpl
mov
xchg
jae
shrb
jl
imul
mov
push
pop
das
insb
lret
adc
dec
push
shrd
repnz
gs
data16
popa
xlat
js
cld
jns
out
inc
arpl
nop
sbb
jge
or
jo
inc
in
xor
sbb
jo
lahf
push
enter
adc
mov
inc
fs
inc
js
xchg
fidivl
jbe
arpl
cmp
cmpb
idivb
and
push
jge
inc
punpckldq
pop
inc
aam
shll
jo
sarb
add
fmulp
jle
inc
jo
mov
cli
rcl
dec
in
sub
jae
scas
xchg
iret
mov
test
roll
mov
call
mov
shlb
jo
loop
xor
stos
fisttpll
push
test
xor
fcoms
pop
popa
leavew
pop
js
out
jg
lcall
pop
daa
adc
test
ljmp
nop
sbb
xchg
push
lcall
in
and
jo
add
ljmp
pop
dec
std
pusha
icebp
insb
addr16
jo
dec
lahf
bound
mov
push
adcl
sub
lahf
push
jo
cmc
pop
notb
mov
lock
adc
js
add
sahf
sub
scas
popa
mov
insl
xchg
inc
inc
shrl
bound
cmp
pusha
and
add
into
cmp
push
data16
dec
xchg
xor
sti
sbbb
pushl
dec
jo
out
movsl
cmp
js
lret
enter
inc
lcall
dec
dec
insb
sub
mov
jo
dec
shr
inc
popf
xchg
jo
jle
sahf
push
mov
mov
fs
jo
mov
andb
pop
cmpb
leave
or
jo
ret
ret
insb
add
sbb
jp
jne
scas
xor
addr16
mov
dec
xchg
sbb
xor
lcall
sub
ficoms
mov
jo
fcomps
jp
insb
jo
mov
sub
out
xchg
sub
mov
fnstcw
inc
ret
test
jne
shll
mov
addr16
jg
jp
or
add
outsb
lods
mov
shrb
test
out
xchg
js
mov
jge
push
pop
xlat
add
sub
add
pop
or
mov
in
fldcw
and
shll
ret
out
popf
std
movsl
jo
or
ret
shll
lret
daa
xchg
decb
stos
cmp
out
mov
outsl
mov
pop
adc
pop
xchg
mov
inc
lcall
inc
push
jo
nop
sbb
xchg
push
repnz
inc
jo
or
pop
fisubrs
lret
or
es
subb
int3
jne
jo
aam
sub
cmp
jo
mov
jmp
mov
sahf
dec
into
add
pop
btr
lods
addr16
jp
jo
or
movsb
out
mov
pushf
lret
sub
pop
mov
dec
dec
jo
daa
lcall
pop
jo
or
jo
stos
mov
sub
xchg
inc
jo
ret
test
jo
in
push
sub
push
ljmp
xor
jno
mov
jge
add
bnd
adc
dec
gs
lcall
xchg
int
addr16
push
pop
xlat
enter
pop
jg
test
push
lret
movsl
adc
lds
xorb
lock
add
in
rcl
inc
cmp
dec
inc
int
and
in
mov
push
rol
inc
outsl
xor
das
push
sub
jo
or
sti
jo
into
dec
rol
fldcw
mov
ja
nop
fsub
or
inc
mov
push
adc
push
in
jo
adc
call
rcrl
fsubp
jo
cmp
outsb
insb
lcall
add
inc
inc
loope
out
loopne
popa
cmpsl
icebp
test
lock
dec
scas
in
jle
pop
xor
xchg
aaa
sub
mov
jb
cltd
pushf
fists
cwtl
mov
jae
push
jo
stos
mov
pusha
pop
addr16
rorb
lahf
in
cmp
push
repz
mov
test
xchg
imul
cmp
jge
xchg
jmp
xorb
dec
sbb
int
mov
shl
mov
stos
daa
ficoml
out
push
inc
or
xchg
lods
push
jmp
js
and
jo
repnz
push
jo
fmulp
fwait
adc
xchg
push
pop
dec
test
sbbb
xchg
sbb
mov
js
orb
scas
sarl
cmp
cld
jb
shl
xchg
jo
cmp
les
cmc
cmp
push
jle
xchg
jp
jo
repnz
inc
xchg
xor
push
aaa
idivl
mov
test
mov
sbb
inc
jo
pushf
jno
inc
mov
mov
cmp
sub
fists
sbb
mov
cmc
repnz
ds
in
jne
jbe
into
jo
enter
repz
imul
aad
cmpsb
je
sub
in
mov
sub
xor
fs
test
jb,pt
xchg
jo
fdivrl
pop
pop
lret
rep
jmp
cwtl
fadds
fucom
cltd
xchg
mov
xor
adc
push
jo
push
fucom
outsb
enter
imul
sbb
hlt
pop
sbb
add
loop
jg
inc
xchg
scas
insb
aaa
cltd
insl
pop
jo
sbb
daa
xor
jne
loopne
mov
cmpsb
insl
and
dec
jo
popa
shl
sub
jo
ret
test
lahf
and
mov
hlt
lds
mov
inc
mov
stos
dec
sbb
add
jo
xor
out
lock
cmpb
loop
nop
leave
fnstenv
xor
jbe
push
daa
jb
loop
ffree
jo
mov
push
and
aad
sbb
push
cmc
xor
or
lsl
into
add
inc
notb
push
lock
stc
push
sub
mov
aaa
add
jl
insl
cltd
mov
test
jne
fcmovnu
ss
mov
inc
js
xchg
lcall
pop
shrb
pusha
repz
int
ljmp
loop
xchg
adc
lods
nop
or
fiadds
sbb
lahf
lods
nop
addr16
ss
jo
js,pn
push
or
pop
jo
divl
movsl
xchg
dec
xor
daa
ret
lock
push
lcall
sahf
repz
mov
and
or
sub
pop
stc
xor
lock
mov
xchg
dec
add
roll
adc
jbe
cmpb
test
icebp
cmp
imul
adc
sub
inc
lds
sbb
push
sti
xor
cmc
dec
jg
stos
bnd
cmp
pop
jo
mov
mov
adc
and
xchg
add
das
add
pop
jo
inc
mov
pop
add
arpl
neg
dec
test
dec
das
fldl
sub
and
push
push
sti
or
cli
xor
test
push
mov
hlt
cmc
add
repz
scas
or
jo
cmc
mov
mov
mov
push
or
mov
testl
rolb
push
aaa
xchg
mov
xor
push
pcmpeqd
push
stos
dec
dec
push
insb
aam
adc
lock
push
push
repz
dec
inc
nop
or
test
das
mov
lcall
jle
mov
jo
stos
ret
ret
xor
cltd
scas
inc
dec
pop
hlt
inc
xor
out
jg
sub
jge
rorl
xchg
popf
test
orb
mov
stos
jo
clc
lret
xchg
hlt
lods
out
xorb
jg
push
push
cs
adc
mov
mov
pop
pop
stos
jae
push
movsb
fimull
jb
ret
mov
popf
dec
xchg
cmp
mulb
jo
sub
mov
lret
add
repnz
add
cmc
jo
test
sub
outsl
add
dec
bound
push
sbb
loop
or
jp
jo
inc
mov
cmpsl
inc
sbb
xor
call
pop
pop
loop
mov
jnp
push
pop
test
jo
cmp
push
hlt
aas
rcl
push
push
sub
sahf
dec
sub
lret
mov
inc
nop
loope
outsb
xor
pop
mov
cmp
divl
ret
or
sahf
sbb
push
mov
adc
das
daa
out
inc
pop
ds
lahf
orb
cmp
ds
push
pop
adc
pop
jbe
fs
sub
jns
inc
and
das
xor
mov
in
and
popf
pusha
cld
pushl
push
lret
inc
dec
jge
mov
out
or
pop
icebp
push
imul
lahf
mov
movsl
scas
sub
incb
fistl
stos
mov
push
adc
fsubl
sub
jle
outsl
mov
sub
dec
sbb
int
out
filds
in
lahf
jp
inc
cmp
add
jge
inc
push
adc
dec
mov
mov
mov
xor
ss
scas
and
push
mov
subb
faddp
dec
int3
jmp
adc
std
push
popa
pop
xchg
pop
hlt
mov
aaa
cltd
stos
adc
leave
mov
addb
inc
rcr
and
test
cmc
shll
movsl
lea
push
bound
push
push
adc
int
jo
ss
xchg
ds
xlat
arpl
push
movsb
out
jp
mov
lock
add
scas
out
jmp
pop
call
sub
jnp
push
arpl
jb
xchg
xchg
adc
push
push
mov
leave
out
sbb
dec
mov
inc
repz
push
and
icebp
scas
jecxz
push
jae
push
xchg
mov
fs
out
inc
dec
arpl
pop
out
scas
sahf
sarb
insl
mov
cmp
arpl
stos
pop
lcallw
mov
jno
test
jge
or
add
sub
xchg
ljmp
push
jl
std
outsb
push
mov
dec
mov
aas
arpl
fwait
addr16
lret
sub
test
add
mov
push
push
push
arpl
icebp
push
hlt
jle
insb
add
ret
lock
jl
fldcw
push
mov
jmp
mov
jge
and
jp
jae
jmp
pop
nop
mov
mov
rorl
sti
movsl
add
popa
jbe
insl
sbb
jno
int3
sub
jp
sub
jg
pop
and
adc
incl
sub
add
clc
jmp
cwtl
cmp
scas
and
or
psllq
in
addr16
ret
add
popf
and
jae
sub
xor
js
jne
adcb
jae
mov
sahf
xor
pop
hlt
cmp
cwtl
add
js
fsubl
mov
std
adc
jmp
nop
and
leave
dec
in
notl
insl
xor
addb
adc
pushf
pop
mov
jo
aas
mov
fidivl
adc
push
movsb
dec
in
jle
lret
pop
add
inc
jne
xchg
popa
cmpsl
das
roll
cs
pop
or
jl
ljmp
mov
and
movsl
bnd
in
sbb
xor
fcompl
ds
sub
jp
je
nop
pmaxub
jmp
mov
movl
mov
es
mov
cmp
aas
sub
dec
add
lret
aad
ja
sbb
insb
mov
mov
les
scas
movsb
cmp
cmp
xchg
pop
xor
cmc
pop
jnp
pop
dec
jo
mov
pop
jmp
fisubl
pop
scas
mov
int
fsts
pop
lret
js
loope
xor
sub
aas
in
jo
pop
dec
into
stos
mov
scas
sub
pop
sbbb
jecxz
mov
shlb
popf
cwtl
roll
jnp
mov
stos
jo
jp
fimull
sbb
pop
out
mov
xor
or
ret
push
mov
jo
xchg
mov
fiaddl
lea
add
addr16
adc
mov
inc
test
and
dec
bound
xor
jo
insl
mov
xchg
rorb
popa
int3
fwait
inc
add
and
jo
das
cwtl
ret
ficoml
int3
insb
jb
push
xor
and
rorl
jl
mov
or
add
jp
dec
mov
mov
adc
call
and
pusha
dec
sbb
or
xrelease
jg
add
or
imul
shrb
dec
xchg
xchg
push
sbb
xchg
adc
push
cmp
pop
imul
mov
popf
jo
cwtl
push
cli
repz
daa
jo
add
ss
xor
pushf
pop
jo
outsb
sub
push
sub
mov
mov
and
or
mov
dec
jmp
jo
test
jo
sub
clc
add
jle
xor
xchg
ds
jo
popa
int
mov
rorb
pushf
xor
push
adc
mov
xlat
stos
jne
cmp
mov
cmp
out
int
xchg
mov
jo
ljmp
mov
nop
stos
xchg
mov
sahf
ret
adc
aaa
xor
repnz
adc
test
mov
xchg
mov
jo
mov
std
push
out
popl
adc
xlat
fst
jb
ret
ljmp
cmp
push
push
mov
jo
jmp
into
insb
jo
cs
popl
inc
jnp
xor
repz
into
sbb
enter
insl
adcb
push
push
jmp
sbb
pusha
or
sub
lret
pop
push
and
js
lock
xlat
sbb
movsb
ds
jo
in
sti
lods
out
or
jo
push
and
push
pop
xchg
xor
fs
repz
jo
and
jne
les
mov
jmp
mov
or
dec
sub
bnd
mov
xorb
into
hlt
adc
je
mov
dec
push
jmp
jo
jge
outsl
or
push
xchg
inc
repnz
xor
jge
dec
xor
inc
and
pushf
movsb
or
xor
sahf
js
xor
loop
jo
enter
mov
inc
int
jo
xor
loop
xor
shlb
pop
sub
mov
mov
leave
xor
inc
pop
sahf
pop
jo
testb
outsb
fcoms
mov
shlb
insl
push
mov
in
add
nop
add
pop
jo
insl
aam
ljmp
or
mov
out
jo
dec
add
ljmp
test
adcb
orl
cmc
xchg
cmp
in
xchg
jnp
stos
fs
dec
loop
push
inc
mov
and
pop
sbb
cmp
cmpsl
and
icebp
outsb
ret
jle
xorl
fidivrs
push
push
mov
pop
test
or
xchg
nop
lock
inc
add
mov
loop
xor
dec
xchg
mov
filds
arpl
cmpsl
or
dec
mov
loope
cmpb
leave
cmp
adcb
push
out
cwtl
lods
xchg
xor
notb
dec
fnstcw
and
imul
pop
push
sbb
adc
jo
sbb
and
jo
mov
divl
mov
sub
cltd
dec
out
ja
pop
ljmp
jmp
cld
mov
xor
nop
rolb
fstl
call
jne
jg
js
push
sbb
sbb
outsb
sub
mov
mov
stos
mov
das
adc
dec
lcall
sbbb
js
xor
in
ficompl
xchg
jmp
out
into
movsl
fucomi
and
cs
lock
mov
fwait
sub
jo
sub
adc
inc
add
dec
idivb
cmp
mov
ja
and
push
das
je
sub
xchg
popf
jo
outsb
orb
ret
sbb
add
imul
arpl
or
ret
xor
ror
mov
outsb
jo
xor
clc
jo
pusha
mov
imul
cmp
inc
js
mov
sbb
mov
pop
leave
test
ror
fildl
ss
xorl
jbe
push
cmp
xor
mov
cmp
lret
and
or
pop
jo
cs
hlt
push
adc
jb
loop
jo
fistpll
cmpsl
push
in
push
jmp
jae
xchg
jo
sbb
dec
int
stos
cs
lds
xchg
aam
mov
lcall
adc
iret
jb
in
int3
scas
jb
loop
andb
sbb
outsl
je
and
cmpsl
dec
mov
lcall
leave
sbb
xor
shr
adc
xor
mov
mov
bnd
dec
aas
jmp
jo
pop
lret
push
bound
jno
jbe
jnp
out
int3
jo
rolb
jmp
jmp
leave
jo
decw
cmc
add
dec
push
loopne
adc
pop
movsb
xor
dec
out
sbb
push
push
nop
jmp
fcmovb
xchg
nop
mov
push
jo
popf
pop
xor
jns
into
sub
jo
cmpsb
scas
int3
jne
xor
sar
imul
ljmp
inc
or
jmp
sbb
jo
lods
arpl
xchg
cs
cld
cltd
fstpt
and
in
icebp
push
sti
and
and
fs
pop
pop
lds
mov
clc
sbb
mov
xchg
jl
xchg
lock
sbb
jecxz
jo
call
loopne
jo
pop
das
jae
fs
mov
js
ljmp
in
xchg
dec
fcomps
cmp
adc
cwtl
rolb
imul
rcr
mov
js
cmpb
aam
push
pop
call
and
ds
cmp
jo
adc
aam
cs
dec
hlt
lea
and
jo
jmp
scas
lret
ljmp
jp
cltd
sbb
jmp
cmp
fisubrl
hlt
fucomp
mov
scas
sti
push
push
pusha
cmp
js
sbb
mov
sub
test
lds
jo
outsb
add
movsl
pop
ja
mov
adc
test
jno
xchg
int3
xor
and
xor
lock
std
insl
out
cmpsl
push
test
repnz
movsl
call
and
push
mov
repz
aaa
stc
sbb
sbb
cmp
sbb
xlat
sbb
add
cmp
in
out
cmp
mov
stos
jae
cmp
push
inc
in
out
mov
shl
xor
shll
mov
pop
mov
push
or
jmp
repnz
push
stos
cmp
push
inc
and
or
jb
inc
es
subb
push
bound
push
sbb
xor
mov
push
scas
scas
loope
jle
out
pop
cmp
dec
mov
add
push
jg
mov
sbb
jb
cmp
andb
fmull
mov
sub
xor
mov
js
push
lret
pop
mov
pop
cmovle
shrl
sub
or
mov
xchg
stos
jo
outsl
in
movsb
repnz
or
add
pop
push
icebp
hlt
xchg
cwtl
dec
push
mov
inc
xor
lds
scas
repnz
mov
stc
mov
clc
jno
pop
jo
adc
push
jo
dec
inc
dec
dec
cmp
arpl
insb
push
push
cmp
iret
sti
push
mov
sbb
cmp
mov
sbb
pop
subb
rol
stos
sub
js
loop
or
xor
push
add
fwait
int
jg
int
sbb
dec
cmpsl
lods
stc
push
jo
movsl
jl
cmp
jbe
out
add
insb
jo
pop
adc
sarb
jo
aam
std
push
mov
mov
outsb
jbe
hlt
stc
mov
cmpb
ss
loop
aam
loope
jle
cmpsl
xorl
xchg
jne
jns
movsl
jo
pop
push
inc
pop
or
push
sti
fsubs
jbe
cmpsl
popaw
push
in
mov
mov
jne
les
mov
inc
mov
cmp
ret
mov
add
sbbb
adc
test
or
fcomps
mov
push
pop
les
pop
sub
inc
outsb
xchg
arpl
mov
add
insb
pop
jle
sub
cmovo
push
jp
int
frstor
dec
lods
notl
std
cli
into
pushf
sub
inc
xchg
jo
hlt
jmp
xorl
out
ffree
add
js
xchg
scas
notb
addb
addr16
adc
aas
mov
mov
fistpl
jle
pop
pusha
push
dec
dec
stc
jne
clc
mov
mov
xchg
add
sar
aaa
fists
imul
fsubp
add
sub
push
xchg
iret
fcoml
mov
pushf
xorb
fwait
lods
flds
jo
mov
dec
in
aas
xor
add
jo
lret
test
inc
xchg
lods
push
push
js
and
xchg
push
into
pop
mov
cmp
jo
jno
outsb
call
or
sti
test
inc
cmp
sub
int
inc
jbe
push
mov
jo
nop
lcall
rorl
mov
adc
sbb
fwait
or
dec
ud2
hlt
pop
mov
daa
xor
nop
and
lds
lahf
mov
jo
or
into
push
adc
and
repnz
xchg
adc
cwtl
jo
xchg
or
jo
mov
jo
fcom
sti
popf
cmp
mov
je
push
mov
fstps
mov
dec
loop
xor
jo
cmpsl
jns
cmp
arpl
popa
xchg
pop
insb
stos
sbb
sbb
cmp
and
sbb
inc
andl
into
loope
cmp
push
add
push
and
jp
jo
or
pop
out
mov
repnz
xadd
out
jl,pt
cltd
loope
or
cld
and
data16
jo
ljmp
jo
shr
sub
mov
mov
mov
scas
sbbb
out
jle
mov
or
movl
fs
call
test
xchg
push
pop
scas
daa
jge
cs
sbb
jo
and
jno
ret
popf
cmp
jp
mov
jo
loopne
sbb
imul
pmaxsw
pop
lahf
mov
mov
push
sbb
push
out
dec
into
les
jae
rcl
enter
in
push
xchg
loope
iret
add
ja
jne
jno
subb
shlb
dec
cmp
sub
and
fldt
popf
lcall
inc
out
dec
repnz
sbb
imul
or
jo
sub
xchg
sbb
cmp
jae
adc
fidivrl
xchg
into
and
jo
xor
or
jo
add
repnz
out
in
outsb
xor
ds
aaa
cmpsb
inc
sub
in
lods
adc
xor
mov
rcrl
xor
mov
jae
lret
ss
jo
lahf
lods
xlat
jmp
xchg
add
das
jecxz
aaa
lret
jo
daa
jbe
jmp
cwtl
pop
je
dec
or
fidivl
mov
lret
cli
push
push
inc
out
test
jo
ja
or
dec
aam
int
mov
push
dec
cmp
push
gs
sub
dec
sbb
sub
sub
mov
icebp
cltd
xor
insl
dec
movsl
fwait
jecxz
sti
xor
js
inc
fimull
jl,pt
lods
xchg
cmp
push
lret
enter
sub
sbb
jo
sub
sub
push
dec
push
in
and
and
loopne
jo
cmp
int
pop
inc
or
xor
imul
sbb
adc
aaa
jo
fdivp
fildll
in
test
dec
out
jo
mov
gs
div
arpl
vcvttps2dq
jb
and
mov
sbb
jo
jb
sbb
mov
jo
jmp
and
aad
pop
nop
iret
les
subb
sub
lahf
jo
push
xor
jo,pn
xor
jo
sub
xchg
out
dec
sahf
xchg
mov
jo
das
mov
jo
movsb
stos
ljmp
xor
mov
scas
jo
sbbb
lret
fsubl
lcall
jmp
es
stos
insl
jns
inc
mov
push
out
enter
pushf
setnp
jno
shrl
jmp
rolb
orb
daa
jo
sub
lds
push
jb
arpl
lods
inc
outsl
adc
xor
pushf
subb
jo
stc
push
pop
icebp
mov
mov
vmovntps
mov
sahf
rol
fincstp
or
js
mov
inc
mov
and
mov
loopne
movsb
sub
jo
mov
sub
scas
add
push
icebp
add
cli
movsb
ljmp
push
test
faddp
gs
sbb
xor
cs
pop
sbb
sub
imul
clc
scas
pop
shll
jo
mov
or
push
adc
adc
popa
fs
push
and
ja
jbe
dec
or
nop
es
jge
sub
sub
sbb
or
adc
repz
in
cwtl
add
xor
mov
jo
stc
xchg
fistpl
mov
int
shl
sub
scas
cltd
movsb
mov
jecxz
clc
jbe
adc
add
jmp
and
lds
pop
insl
adc
lret
xlat
sub
mov
iret
push
dec
xchg
jo
jmp
jo
mov
xchg
jg
adc
inc
add
jo
xor
mov
mov
and
cli
lret
xor
sbb
int3
fdivs
rcrb
call
je
jo
lods
and
push
mov
fwait
sub
xchg
test
lds
repnz
jle
lods
scas
jo
pop
xor
nop
and
push
push
push
pop
jle
lret
dec
lock
stc
int
fmull
pop
out
aaa
xchg
cmp
out
stos
jns
jl
bound
or
nop
fsub
or
js
ja
aaa
rcl
std
lahf
and
lcall
in
mov
popf
adc
adc
and
add
lds
sub
dec
lret
cltd
lcall
daa
dec
push
pop
jo
push
push
call
jno
jo
mov
mov
pop
lret
sub
stos
into
xor
inc
mov
lds
ss
cwtl
jo
cltd
popa
xchg
mov
arpl
es
clc
or
push
out
cmpsb
mov
jg
divb
jo
cmp
aas
stos
ret
popa
xchg
jne
imul
mov
sub
out
push
push
dec
ljmp
orb
rolb
cmpsb
dec
mov
sbb
fcmovnbe
or
push
out
cmp
sbb
scas
sub
push
imul
sub
push
inc
pop
push
xorl
repz
xor
int3
test
cmpsb
pop
lods
mov
sbb
repz
pop
jecxz
jns
jp
arpl
inc
aas
sbb
sbb
or
insl
scas
or
sahf
jg
sbb
addb
pop
mov
xor
sub
arpl
test
bound
pop
cmp
push
pop
add
orb
cmp
cmp
and
in
icebp
std
mov
dec
and
das
jae
dec
js
arpl
sub
mov
and
push
test
push
sarl
arpl
mov
sbb
imul
arpl
xor
fisttpll
or
add
ja
mov
sub
mov
scas
xchg
cli
jp
xchg
jbe
jb
adc
pusha
or
testl
pop
cmp
push
js
jno
xchg
scas
stos
push
insl
jg
jae
mov
mov
add
stc
cmp
mov
jp
cwtl
jnp
cmp
divl
or
and
icebp
jge
push
ja
push
imul
or
sub
adc
mov
and
dec
push
jbe
mov
or
in
sarb
or
movsl
cmc
add
test
call
push
or
cmc
cmp
imul
ret
ljmp
test
pusha
js
arpl
fiaddl
or
xchg
jmp
arpl
fsubs
mov
jae
popf
rcl
dec
int3
push
negl
mov
mov
xor
mov
or
mov
out
jae
lds
sbb
pop
mov
pop
or
mov
mov
inc
inc
and
popf
sub
sahf
jle
dec
jmp
mov
cmp
or
pop
imul
ss
out
add
pop
outsb
rcr
mov
xchg
cmpsl
pushfw
pop
jns
or
push
or
pop
cltd
pop
shll
das
adc
sbb
outsl
add
dec
mov
fildl
push
subl
imul
jg
cmp
add
fnstsw
test
push
push
out
mov
cltd
ret
aam
cmp
cltd
imul
inc
popa
daa
mov
lock
aam
js
pusha
fs
arpl
into
imul
in
push
sbb
dec
push
ret
sbb
and
push
lret
or
lods
and
dec
ret
pop
pop
mov
mov
shrb
pop
jae
out
xchg
arpl
mov
arpl
popf
mov
gs
mov
add
xchg
stos
xor
mov
lahf
mov
sahf
lea
push
adc
arpl
stos
adc
sbb
mov
arpl
addb
pop
adc
xor
fs
repz
in
outsb
add
stos
fistpll
pop
inc
rcrb
and
repz
adc
jns
test
mov
out
mov
repz
sbb
scas
pop
lcall
mov
mov
arpl
test
or
dec
shlb
push
vlddqu
je
pop
shll
shll
mov
jae
stos
adc
enter
js
mov
sub
dec
push
int
inc
jp
and
mov
push
and
jge
jae
push
jno
xchg
in
bound
xchg
dec
fndisi(8087
shrb
xchg
push
cmp
addr16
mov
daa
sub
mov
jae
and
in
testl
data16
arpl
ror
add
xchg
imul
mov
into
xchg
sub
lret
ficomps
cmpsb
jle
add
ljmp
push
xor
movsb
inc
jno
cs
in
or
xor
cmpsl
dec
push
in
imul
dec
add
mov
mov
movsl
out
cmp
stos
scas
jo
outsl
mov
out
test
scas
mov
addr16
push
mov
and
scas
add
xor
xor
sarl
mov
sahf
in
cmpsb
cmc
xchg
imul
add
mov
aad
cmp
fisubrs
mov
sbb
cmp
das
in
jae
pop
and
icebp
dec
push
add
xchg
mov
adcl
mov
loopne
sbb
arpl
test
mov
and
mov
shrb
addr16
pop
aas
cltd
pop
xorb
out
add
scas
mov
add
cmp
xor
dec
xor
sbb
push
or
xor
cmp
movsb
or
dec
pusha
js
jno
pop
mov
add
lock
scas
int
into
lods
mov
loope
pop
outsl
mov
std
and
sti
and
outsb
mov
pop
xor
fwait
pop
nop
pop
aaa
push
push
js
jecxz
add
push
xchg
movsb
mov
rcrl
jle
shlb
xchg
or
mov
xor
inc
outsl
shrl
inc
ret
pop
lock
sahf
mov
or
arpl
or
mov
sbb
test
idivb
jae
xchg
sbb
data16
or
daa
aad
fld
xchg
mov
roll
sub
ds
inc
jbe
add
jg
inc
xor
jecxz
in
sub
adc
in
mov
pop
imul
jo
popa
and
push
sbb
sub
add
lds
jmp
add
inc
sub
cmp
xor
fisttpl
shrb
test
jae
add
cmp
cld
pusha
add
cltd
mov
add
scas
cmpsb
rcr
mov
stos
cmp
adc
les
mov
out
jge
jne
dec
outsb
es
mov
shlb
pop
fimuls
jns
sub
sub
jb
in
mov
mov
jge
jno
popf
or
int
idivb
inc
xchg
lret
pop
insl
xchg
xlat
rolb
cmpsb
jnp
stc
out
inc
push
je
mov
inc
dec
pop
jae
mov
add
int3
add
mov
mov
fs
lock
iret
mov
lods
test
adc
out
aas
in
ja
rorb
push
enter
pusha
out
nop
jl
outsb
push
jmp
and
rcrb
in
lock
sti
xor
xchg
dec
xchg
dec
and
inc
int
lods
add
fs
dec
mov
push
pop
or
stos
xchg
lret
push
push
mov
aad
lea
repz
mov
mov
jo
mov
call
push
pop
fldt
push
cmp
xor
mov
fdivl
call
gs
loopne
mov
rclb
jo
test
sarb
xchg
or
rcrb
add
jbe
popf
mov
leave
mov
xchg
cmp
push
jle
cltd
ret
aaa
lahf
fcomps
and
push
iret
leave
push
arpl
sbb
add
jo
test
arpl
sti
mov
int3
call
mov
es
sub
xor
push
fxch
xchg
adc
and
ljmp
add
push
cmp
dec
xchg
add
pop
repnz
ds
outsl
jns
cli
cmpsw
xor
insl
add
push
cmp
and
mov
fcoml
int
xor
or
fdivs
insl
cmp
xadd
push
sbb
adc
cld
nop
or
sub
loope
xor
scas
stos
inc
es
cwtl
jg
out
mov
insb
nop
das
insb
out
push
jge
icebp
fidivl
les
jmp
cmpsb
movsb
mov
lock
xchg
dec
xor
imul
subb
dec
div
cmp
aam
test
jp
icebp
jo
daa
lock
cmp
rorb
and
jnp
hlt
push
pop
icebp
push
jo
adc
xchg
aad
test
lods
insl
into
lret
mov
andb
lock
in
loopne
dec
fisubs
repz
push
lds
scas
call
jecxz
movsl
jmp
jmp
and
mov
push
rcrb
mov
fsubp
sub
pop
pop
les
sbb
test
int3
jne
xchg
outsb
lods
inc
jg
or
mov
inc
and
fsubr
xchg
xchg
push
je
cmpsb
out
dec
in
adc
arpl
jae
shll
rcll
push
jge
cmpsl
xchg
adc
leave
shll
jae
jbe
adc
or
push
push
sbb
pop
scas
mov
subl
notb
mov
or
in
pop
scas
outsl
fs
test
xor
jns
cmp
out
fistpll
sbb
test
test
jae
adcl
xor
xor
dec
bound
pop
por
lret
xor
int
ret
arpl
sub
mov
mov
mov
dec
mov
push
xchg
push
pop
cmp
stos
and
mov
jo
loop
jno
xor
and
loope
mov
cmp
arpl
call
lret
jno
lahf
xchg
cmp
in
jnp
lea
test
scas
cmp
cltd
push
shll
mov
mov
cmp
test
stos
data16
ja
arpl
xor
cld
nop
sti
sahf
out
call
ret
xor
arpl
out
scas
mov
out
push
lcall
test
pusha
adc
lret
roll
hlt
call
int
or
mov
xchg
out
fstl
xchg
sub
push
push
or
dec
addr16
or
dec
pop
sti
fstpt
mov
sub
mov
out
leave
mov
adc
pushf
pop
ret
testb
js
scas
jns
sbb
cli
push
xor
inc
xchg
and
pop
adcb
repz
pop
pop
loope
mov
pop
cltd
lock
fisubl
pop
push
or
in
js
pop
pop
std
ficoms
inc
punpckhdq
fprem
rclb
jae
push
fistps
dec
mov
in
pop
insb
popf
insl
into
out
testl
jae
mov
jmp
dec
ret
push
aad
add
test
hlt
add
or
and
lahf
ret
or
pop
sbb
push
orb
test
adc
out
sbb
adc
repz
enter
sti
shrb
jecxz
loopne
into
imul
inc
add
outsb
mov
dec
mov
je
rclb
imul
inc
sahf
jmp
outsb
cmpsl
mov
pop
mov
dec
adcb
push
mov
mov
outsl
insl
push
xchg
cs
out
fimuls
mov
ss
test
insl
xchg
add
test
addr16
cmpsb
pop
packsswb
test
jmp
jl
or
lods
add
repz
int
adc
sub
int3
xchg
or
js
enter
out
int
clc
dec
mov
jg
or
adcl
mov
jmp
arpl
xor
lahf
fildl
jecxz
lahf
push
dec
sub
xchg
jne
jae
sarb
lcall
sbb
add
push
mov
pavgb
pop
rorb
fs
std
mov
cmc
adc
push
scas
aad
out
out
into
int3
repnz
add
sbb
cmp
pop
jae
lret
mov
cmp
cmp
and
jp
arpl
lret
lret
pop
push
sbb
in
int3
sub
add
sub
or
in
jae
xor
lods
in
lock
divb
iret
dec
clc
test
das
add
jp
or
stos
push
push
and
shrb
mov
je
std
inc
fwait
andl
idiv
inc
lds
mov
push
out
repnz
imull
outsl
jbe
or
sysret
roll
icebp
pop
cmp
sub
adc
stos
pop
and
mov
repnz
push
jg
testl
jge
xchg
jle
cmpb
js
mov
pop
mov
lds
test
or
or
mov
es
sbb
xorb
mov
cmpsb
loopne
insb
xor
arpl
sub
inc
pop
adcl
dec
sub
pop
shll
ljmp
jae
dec
xchg
jecxz
xor
jecxz
imul
jns
ja
mov
pop
adc
pop
cs
insb
scas
or
push
fsts
rcll
push
mov
mov
push
aam
std
cmp
push
xchg
mov
imul
jae
arpl
sarb
pushaw
push
pop
or
jmp
pop
xor
cltd
adc
xor
sbb
dec
and
add
add
ja
inc
adc
stos
es
push
dec
js
mov
cld
adc
mov
test
out
mov
ss
imul
dec
fisubrs
or
push
lock
push
xchg
stos
ja
mov
cmpsb
les
push
fs
out
jae
icebp
adc
push
insb
cmp
mov
addr16
mov
jle
mov
sbb
or
adc
inc
aam
fs
fucomi
adc
fiadds
push
xor
ret
stc
out
add
push
arpl
push
add
sub
in
add
push
pop
mov
fstsw
lods
push
icebp
gs
push
mov
xchg
mov
imul
out
rclb
insl
cmpb
fsubr
adc
sub
sbb
push
cmp
fisubs
mul
push
pcmpeqb
and
push
dec
push
cmc
scas
push
mov
mov
mov
fistps
das
out
cmp
add
or
jl
push
push
jle
jae
jns
ret
in
pop
in
mov
cmp
mov
js
lods
cmpsl
inc
fs
inc
fwait
push
stos
jne
cmp
aam
mov
add
sbb
inc
pop
push
jle
jae
mov
int
ss
inc
aam
ret
mov
sbb
popf
fcompl
leave
and
push
out
mov
jae
xchg
inc
dec
in
push
xor
or
loope
enter
or
dec
hlt
mov
dec
cld
scas
lock
rolb
jb
and
test
fcoms
fs
rclb
pusha
xor
push
mov
sub
xor
lods
dec
popf
lock
push
mov
jle
dec
mov
adc
or
lahf
mov
int3
jle
in
jmp
lahf
lock
outsl
mov
lock
gs
lea
xchg
inc
outsl
sarb
jo
arpl
popa
cs
insl
jae
aam
push
add
loop
jo
sbb
out
mov
push
inc
std
cli
add
xor
mov
dec
rcrl
or
jle
jb
mov
in
in
loop
pop
cli
inc
and
adcb
sbb
and
sbb
insb
inc
push
mov
jne
cmp
sbb
fs
dec
sub
je
ss
lgs
cmp
test
mov
fstpl
push
add
push
sbb
scas
push
mov
icebp
mov
cli
dec
int
out
pop
les
jl
xchg
shr
adc
jp
arpl
dec
jg
out
xchg
push
fucomip
mov
fcoml
insb
sbb
ljmp
dec
jmpw
fldenv
sti
xchg
sbb
jae
daa
mov
xchg
mov
mov
es
ja
fnstenv
test
jle
jmp
push
mov
into
fiadds
into
imul
jbe
arpl
mov
cwtl
cmp
scas
adc
xor
mov
inc
mov
scas
adc
xlat
push
cmp
fs
popf
push
nop
push
mov
dec
mov
xchg
insb
xchg
fstps
xchg
add
mov
fs
test
sbbb
mov
call
fstpl
and
int3
xchg
cli
sbb
and
inc
dec
ds
js
mov
ret
add
lods
mov
hlt
js
cltd
jbe
jbe
out
out
pop
stos
jl
shr
push
pusha
int3
push
jbe
lahf
addl
sbb
cmp
push
mov
push
or
push
cld
decb
ja
pusha
fdivrl
add
popl
add
aam
mov
scas
sti
out
mov
push
mov
push
imul
mov
leave
lock
push
dec
mov
std
and
jne
mov
repnz
mov
add
lock
xor
fisubrl
pop
inc
fisttps
jno
jo
add
sbb
mov
lcall
jg
push
in
jge
les
adcb
aam
movsb
adc
push
xor
movsb
rcll
pop
ds
inc
stos
js
lahf
mov
fs
ja
sbb
bound
cld
std
out
shrl
ret
sub
inc
jns
stc
lea
push
dec
hlt
incl
pusha
mov
push
roll
xor
jnp
das
cmp
jnp
data16
outsl
arpl
mov
push
add
nop
pusha
sub
xor
ds
pushf
xchg
hlt
pusha
mov
filds
cmp
sub
jae
inc
add
jne
xchg
mov
inc
add
mov
gs
add
dec
enter
out
jae
jne
mov
out
js
idiv
mov
jae
sub
push
sub
pop
repz
out
mov
xchg
pop
add
ror
aad
xchg
hlt
push
fistpl
mov
push
inc
jnp
ljmp
lods
fwait
add
call
mov
rorb
pop
scas
cltd
cmp
loopne
push
loop
pop
sbb
push
mov
out
lret
sbb
add
sub
cmpsl
xchg
cmp
fdivrs
ror
xlat
pop
loopne
imul
sbb
xor
cmp
addr16
xor
sub
dec
mov
add
sbb
std
pop
popf
lret
mov
dec
out
jge
das
cmp
inc
xchg
aaa
xchg
popf
sti
imul
jge
or
inc
lods
insl
cld
push
xchg
test
xchg
xchg
lret
lock
rcrl
lds
cmp
out
arpl
arpl
aad
push
pop
pop
pop
pusha
add
popa
das
arpl
js
mov
in
fidivrl
mov
out
and
mov
push
cmp
push
mov
inc
fs
in
pop
adc
test
xor
jne
sub
loopne
lods
mov
in
dec
push
inc
mov
or
push
jno
mov
ret
xor
cwtl
and
roll
cmp
jae
jbe
add
stos
inc
pop
cmc
bound
js
sarl
call
or
mov
addr16
scas
scas
les
inc
push
adc
sbb
and
jl
jae
cmp
fs
pop
sti
imul
in
in
cmpsb
mov
imull
xchg
loopne
scas
fldenv
test
lock
cltd
aad
pop
pusha
mov
fs
pop
jnp
push
inc
sbbl
nop
stos
cltd
fnsave
sbb
rclb
ja
push
and
push
add
insb
sti
mov
jle
out
adc
call
or
in
in
jne
push
pushf
push
xor
fstps
shll
repz
inc
loope
dec
bnd
les
scas
mov
and
or
dec
push
fbstp
fs
popa
hlt
push
sub
jo
lcall
add
hlt
orb
iret
xor
jecxz
dec
lret
dec
mov
fs
jae
xchg
std
rcrb
dec
fsubs
mov
jnp
popa
jae
in
inc
inc
fstps
aas
sub
push
cmpsb
pop
lock
or
mov
jb
or
dec
jne
cmp
test
push
jno
imul
nop
xorb
xor
inc
aad
movsl
jle
mov
into
sbb
xorl
jle
stos
pop
mov
std
pop
xchg
cltd
xchg
mov
dec
pop
shl
xchg
mov
int
outsb
lea
or
pusha
xor
inc
cmp
jb
cmp
pop
aaa
and
or
and
xchg
test
test
or
xchg
insb
dec
push
adc
cmp
shrb
pop
out
xchg
sahf
jns
test
xor
sbb
arpl
or
pop
insl
mov
dec
mov
aad
mov
push
hlt
out
jae
stos
test
adc
inc
mov
sub
xor
loop
and
pop
fcomps
push
inc
scas
dec
xor
jae
test
ljmp
lock
ds
jne
scas
pusha
adc
int
loopne
into
cmp
and
pushw
rolb
and
mov
repz
jae
ss
insb
pop
jno
pop
jmp
js
cmc
sub
xlat
xchg
lods
testl
mov
inc
dec
mov
push
shll
fstpl
and
mov
daa
fistpl
cli
push
ja
out
aaa
lock
push
push
dec
adc
mov
pop
test
in
les
notb
ss
jae
xchg
ror
add
xor
int
fstl
dec
std
mov
pop
mov
jnp
loopne
cmp
jb
rcr
dec
scas
add
lods
mov
push
mov
jo
fistps
pop
movsl
mov
cmpsl
mov
adc
jo
sbb
mov
xchg
cmp
dec
ljmp
push
js
push
sbb
or
repnz
push
or
aas
je
fwait
daa
ljmp
push
outsl
and
clc
push
mov
jbe
xlat
stos
xor
fdivrs
into
cmp
sub
and
cmp
cs
test
nop
imull
loope
and
or
inc
lds
xchg
shll
lret
pop
xor
hlt
rcll
pop
scas
mov
icebp
cmpsl
repz
mov
test
sub
dec
clc
iret
jge
fstl
cmp
pop
xchg
lods
in
and
ljmp
mov
push
cmp
cmpb
imul
mov
int
fwait
cmp
shrl
add
notb
imul
push
je
insb
std
push
rolb
jg
out
pop
je
stos
cmp
arpl
jae
mov
add
and
push
push
mov
xchg
fs
mov
aaa
inc
jae
pop
pusha
movsb
sahf
sbb
iret
dec
gs
and
pop
mov
pop
sub
jae
pop
fwait
pop
push
call
rcll
stos
and
lret
out
mov
std
std
daa
or
cmp
sub
or
cltd
push
or
cli
nop
arpl
jp
push
mov
ljmp
cmp
dec
or
xchg
jl
mov
sub
and
mov
cmpsb
repnz
inc
rcll
arpl
xchg
mov
adc
xchg
aad
mov
jle
pop
int3
lahf
adc
das
aad
lods
jp
adc
sbb
and
xor
movsb
dec
enter
xor
adc
std
pushf
pop
sub
addb
sbb
push
mov
jnp
addr16
sub
addr16
add
sbb
dec
popa
test
fs
imul
mov
push
rorl
mov
jg
push
xchg
pop
test
insb
pop
mov
rorl
and
adc
enter
mov
mov
repz
mov
push
mov
add
xor
nop
cltd
cmc
jno
imul
pop
scas
rorb
sub
cmp
jno
into
pop
cmp
es
int3
out
xor
mov
jp
adc
fstps
out
arpl
or
pop
sub
out
outsb
movsl
jno
jae
fldenv
movsb
inc
outsb
pop
idivb
push
sti
lret
sub
sbb
and
adc
out
sbb
xor
lds
popf
adc
sti
movsb
jmp
ljmp
mov
lods
pop
pusha
xor
sub
fistpl
cmp
lcall
mov
and
cmpsb
dec
fbld
adc
push
jl
inc
push
pushf
push
mov
jo
movsb
fisubrl
je
das
scas
mov
call
sbb
repnz
data16
aam
pop
addb
clc
rcrb
dec
pop
lds
cs
mov
ret
xchg
dec
lret
out
ret
in
pushf
scas
push
test
pusha
mov
test
and
adc
jle
sub
xchg
pop
jb
xor
in
mov
call
xor
and
loop
jno
or
ds
mov
mov
sbb
xchg
imul
inc
ss
adc
aas
arpl
call
int3
cmp
aas
jle
jae
sbb
fildl
xchg
rorb
and
fldenv
sub
push
rcrw
cs
mov
mov
jae
lcall
rorb
pop
test
push
mov
in
ja
mov
xchg
enter
das
movl
cli
sahf
ljmp
sarl
popl
nop
ret
inc
icebp
mov
lea
insl
mov
ja
insb
mov
jae
cs
xor
sub
loopne
lea
sub
movsb
out
cli
mov
cmp
dec
add
jbe
mov
xor
push
jge
adc
shrb
xor
jb
test
push
push
push
call
jge
xor
aas
cmp
cld
out
jae
xchg
rcrl
iret
or
repz
cmpsl
cmp
cmp
lret
push
jg
pop
push
cli
dec
jb
jns
insb
mov
or
adcl
mov
movsl
loopne
jl
push
xor
cmp
sbb
fldcw
sub
push
inc
cwtl
mov
lret
xor
jmp
das
dec
data16
outsl
pop
jnp
push
cmpsb
out
repz
out
or
inc
test
adc
aaa
cltd
cmp
pop
dec
call
mov
es
mov
cltd
out
xchg
fcoms
jl
dec
dec
add
js
push
fmul
mov
rcrb
cmpl
in
pop
push
stc
inc
movsb
sbbb
aas
xor
in
add
jo
loope
pop
sub
jo
dec
cmp
int
ljmp
dec
or
and
sub
pop
mov
sub
repnz
lret
jb
enter
mov
aaa
nop
xchg
rcl
pushf
push
mov
dec
aas
sub
add
jo
mov
and
rcl
test
mov
mov
pop
xor
dec
ss
lcall
dec
pop
jle
sbb
mov
roll
jo
inc
ds
mov
dec
adc
xchg
es
lret
push
mov
test
test
jmp
xor
push
or
mov
jo
ss
xchg
xchg
dec
arpl
jbe
scas
add
cmp
or
rclb
push
pusha
cmc
cmp
ja
imul
sbb
pop
push
dec
or
jno
push
out
jae
in
jbe
push
jo
jecxz
aad
mov
xor
adc
fs
mov
cmp
push
jo
outsb
push
xchg
jo
mov
dec
jo
adc
pop
sub
jnp
int
subl
int
adc
popf
int3
dec
shll
jo
inc
clc
rol
xchg
ds
int
es
imul
push
insb
stc
in
push
xor
inc
sub
bnd
insl
or
cltd
aam
add
dec
outsb
shrb
cmp
bound
sbb
pop
arpl
nop
jo
adc
add
push
popf
inc
movsl
sub
sti
sub
je
mov
fistl
xor
jo
mov
lret
xchg
mov
cpuid
jge
lret
or
pop
sub
gs
fstl
xchg
divl
ret
in
jo
dec
push
pop
xchg
xor
or
pop
mov
mov
cmp
out
in
or
testl
aas
in
jae
fstps
js
dec
fs
push
loopne
dec
jo
dec
clc
push
repz
out
pop
sbb
push
sbb
lcall
mov
das
mov
inc
fbstp
jp
int
pop
sub
push
or
xchg
or
mov
xor
jno
jnp
sub
add
xchg
jo
int3
jle
cld
jle
jo
jmp
or
and
inc
dec
jae
lock
jecxz
jo
xchg
sub
je
js
gs
push
jl
mov
xchg
mov
mov
xor
dec
icebp
negb
sub
stos
mov
icebp
jo
pop
add
fisttpll
push
mov
mov
mov
negb
popf
sub
push
cmovp
pop
insl
idivl
sbb
cmp
repnz
cmp
repz
les
cmp
test
jge
pop
mov
addr16
xchg
nop
cltd
mov
fimuls
push
mov
jo
pop
out
pop
jp
lret
push
lcall
idiv
jno
loope
mov
mov
cltd
jo,pn
popf
rcl
adc
adc
jbe
and
mov
lds
inc
or
fldt
jae
xchg
movsb
jo
sti
loop
jmp
xor
pop
lods
jns
fimull
sub
imul
jne
dec
sub
bts
mov
imulb
pop
rorb
out
movb
mov
jo
int
sbb
std
push
xor
jg
lds
call
out
jo
pop
cmp
nop
push
cmc
add
bound
jo
cmpsb
dec
pop
popa
fiadds
dec
cs
push
cwtl
inc
fcoml
ret
cmp
sbb
or
xchg
mov
adc
xlat
outsl
jo
cmpsl
loop
mov
dec
repnz
pop
push
mov
adc
hlt
jo
mov
ljmp
sub
and
pop
jo
fld
jmp
xchg
rcrb
movsb
cmc
divl
push
lret
xlat
inc
stos
adc
push
push
lahf
mov
pusha
call
cmp
aas
and
cmp
mov
cmpsb
ss
jo
mov
jmp
mov
sbb
sub
idivb
sub
lret
cs
jne
mov
ss
push
xor
add
les
xor
and
sub
mov
pop
push
jne
mov
dec
sbbb
ds
jo
xchg
and
push
jo
pop
xorb
jbe
outsl
in
xchg
cmpsl
insl
dec
mov
push
dec
int
inc
jo
xchg
add
jge
push
jo
jno
dec
push
dec
mulb
pop
mov
push
push
xor
iret
rorb
add
and
insb
aam
movsb
jo
out
fbstp
into
jecxz
subl
adc
add
jo
cli
ss
pop
push
and
out
call
mov
fwait
in
dec
or
lcall
hlt
loope
arpl
or
sub
jo
movsl
inc
mov
adc
and
jo
pop
stc
sti
jno
das
pusha
push
out
mov
push
hlt
dec
mov
mov
scas
ret
icebp
push
push
or
icebp
mov
ret
ficompl
jo
clc
cwtl
lret
mov
sub
jo
dec
sub
xchg
divb
loopne,pt
movsb
faddl
jo
fucomi
cmp
sub
inc
shll
scas
jl
mov
rorb
lods
jo
in
mov
insb
shl
sub
jecxz
jo
mov
push
lret
jmp
jno
sub
mov
push
andb
inc
call
subl
cs
es
hlt
push
subl
sub
gs
xor
dec
mov
mov
mov
cmp
xlat
notl
call
stos
cli
pop
push
and
pusha
sub
mov
cltd
shr
mov
packsswb
cli
xor
icebp
incb
sti
fs
sbb
mov
fwait
jmp
pop
lea
shll
dec
mov
ret
scas
dec
pusha
insb
jo
mov
cmp
xor
jbe
inc
push
ret
xchg
cmc
aam
bound
push
mov
xchg
xchg
adc
jo
jmp
add
das
jp
adc
in
lret
fdivl
hlt
xor
xor
add
cwtl
lds
xorb
pushf
mov
jo
es
jo
scas
aad
adc
jbe
ds
jo
mov
mov
pop
shrb
fwait
dec
popf
jo
lahf
push
stc
mov
xchg
push
jo
movsb
or
jmp
test
push
jno
popf
mov
mov
mov
push
aas
jo
rorl
jne
call
mov
js
adc
subb
in
mov
mov
adc
xchg
nop
lock
mov
or
xchg
pop
or
cmp
jl
out
push
fwait
sbb
mov
or
dec
cmp
cmp
aad
test
jo
roll
bound
inc
std
int
jo
mov
inc
add
cmp
and
fisttps
pop
xlat
loopne
jmp
jle
leave
int
andl
clc
inc
cmp
jo
popa
xor
data16
cltd
jo
inc
sbb
jo
mov
out
mov
lcall
jo
adc
push
xchg
bnd
dec
xor
stc
insb
jo
pusha
sahf
or
push
push
dec
jo
ljmp
jo
add
xor
jo
gs
pop
mov
cli
sub
mov
fisubl
adc
stc
pop
jae
dec
inc
repnz
stc
inc
pusha
push
push
fldcw
loopne
sub
mull
sbb
sbb
repz
shrl
outsb
out
sub
xchg
xor
js
icebp
stos
clc
mov
xor
test
mov
test
mov
push
loopne
cmc
data16
mov
and
test
mov
xchg
inc
and
loopne
call
arpl
fidivl
inc
insl
jns
shll
mov
ds
or
jl
in
ja
out
xchg
stc
pop
std
pop
adc
xchg
fcoms
mov
mov
sub
repz
lahf
sbbb
xchg
jg
fists
mov
inc
add
xor
movsl
sbb
inc
orl
fs
scas
out
cmp
cltd
cmp
in
scas
push
iret
or
xchg
pop
push
test
call
gs
inc
and
mov
data16
push
push
hlt
push
and
add
ja
aam
test
add
pop
ret
leave
mov
push
arpl
sbb
adc
jp
xchg
imul
and
and
or
lahf
fnstcw
imul
lret
push
sti
fisttpll
push
in
sub
fidivs
sbb
out
and
jg
cmp
push
dec
jae
cltd
adc
aad
mov
or
jno
mov
add
out
out
xor
sbb
add
movsb
cmp
fstps
fistps
mov
std
fsubrs
lods
daa
push
mov
mov
insl
xor
imul
inc
mov
cmp
push
cmp
mov
insb
add
out
xchg
jo
lock
test
shrl
leave
pop
dec
or
std
mov
pop
ja
pop
ljmp
and
jo
arpl
adc
and
pop
scas
into
std
push
leave
adc
mov
inc
fxch
mov
jno
sarb
sbb
add
push
ja
lods
mov
sub
xchg
dec
cmpxchg
je
shlb
xor
mov
arpl
add
in
push
cmpsl
pop
sbb
addr16
daa
aam
jb
cltd
jae
adc
hlt
jae
sub
pop
in
dec
je
roll
imul
xor
xlat
test
ficoml
sbb
out
popf
int3
gs
sub
aad
and
adcb
repnz
adc
mov
lods
loope
pop
je
sbb
sub
and
xor
cwtl
inc
scas
and
nop
push
mov
jle
mov
xorb
sbb
pop
sub
cmpsb
xlat
shrb
ja
rol
test
jno
lahf
mov
ss
sar
and
icebp
xchg
mulb
into
test
sub
sbb
jle
pushf
orl
mov
add
adc
and
sub
aas
fildll
imul
lahf
pop
mov
xor
mov
push
icebp
jb
iret
push
cli
dec
shll
lock
adc
push
dec
sbb
mov
fimuls
mov
test
arpl
cmp
inc
cltd
shlb
cmp
or
mov
rcrl
add
lret
idivl
sbb
out
ret
cmpsb
idiv
jl
nop
aad
in
fldcw
repz
imul
cmpsb
jns
int
test
fldl
aaa
or
add
mov
in
and
lods
dec
je
pop
lret
mov
and
popa
out
xchg
pusha
mov
arpl
pop
mov
rclb
dec
pop
cmpb
cmpsb
sbb
cli
inc
xchg
or
cmpsl
sub
mov
push
inc
cltd
cmp
mov
cld
jo
mov
push
cmp
inc
jmp
loop
adc
in
add
pop
dec
xchg
addb
pop
sti
inc
mov
xchg
add
push
or
xorb
mov
lcall
and
xor
mov
pop
jo
lahf
popa
pop
or
out
dec
loopne
push
cmpsb
push
mov
inc
jo
nop
sbb
in
cmp
xor
ret
adc
std
shll
test
jno
sub
sarb
push
jge
ss
pusha
jmp
push
dec
shld
jo
fdivs
mov
jo
adc
push
dec
mov
bswap
fwait
loope
je
out
outsb
jo
rcrl
jo
cmp
xchg
test
icebp
mov
ficomps
pusha
inc
sbb
add
inc
pop
jo
ffree
loope
ret
clc
dec
psllw
cmpsl
movsb
xor
jne
shlb
repz
cld
push
insl
adc
sbb
sub
stc
pusha
jo
andb
lret
mov
pop
push
cmpsl
rclb
sub
inc
push
pop
cmp
lods
mov
cltd
sbb
mov
out
mov
jo
lods
push
daa
nop
cld
outsl
add
hlt
loopne
jae
cmpsl
sub
ljmp
or
shlb
jae
mov
cwtl
inc
out
addr16
lret
xchg
dec
stc
call
xchg
jle
mov
out
dec
in
leave
fisttpll
in
lret
mov
outsl
dec
dec
nopl
xor
fdivrl
push
and
nop
cbtw
and
out
push
ss
cmpsl
adc
insb
das
rolb
inc
insl
cld
addr16
clc
jg
mov
int3
pop
sarb
mov
cmpb
insb
cld
and
inc
lods
jg
mov
fstl
sbb
xchg
mov
jg
cmp
xchg
jae
mov
sub
sbb
fstpl
pop
mov
jno
insl
cmp
sbb
movsl
pop
jg
mov
das
jne
arpl
test
lock
insb
cmp
out
aaa
dec
mov
fs
imul
push
push
rorb
jle
push
stos
clc
out
out
mov
shlb
xor
aam
cmp
repnz
std
scas
jl
mov
inc
jmp
cmp
jo
lahf
lds
jns
in
jecxz
mov
or
ds
pop
movsl
rorl
xor
movsl
cmp
cmp
pop
and
lods
pushl
fsubs
cmpsl
pushf
fisttps
fisttpl
sbb
xor
test
xchg
push
xorl
cmp
jae
sbb
bound
pop
jbe
cmp
push
inc
sub
mov
out
jge
fnstsw
push
mov
mov
jnp
aas
jae
call
adc
subl
out
test
loopne
mov
in
js
arpl
add
xor
sub
movsb
imul
jne
fnsave
iret
cmp
fildll
js
xor
fldenv
sbb
jb
dec
mov
lret
ret
adc
shr
cmpsl
je
leave
cmpsl
jp
les
in
hlt
stos
lret
xor
jns
scas
mov
lods
setae
mov
movsb
scas
add
jae
repnz
outsl
je
inc
mov
call
push
int3
push
cmp
prefetch
out
push
jb
scas
jae
and
rclb
push
jge
mov
icebp
jae
loope
scas
fs
jae
lret
repz
inc
inc
out
movsb
int3
adc
inc
insl
cmp
mov
sub
cmpsb
or
push
fs
mov
sub
mov
movsl
sbb
jae
fidivs
rolb
mov
jae
leave
movsl
ret
test
stos
stos
aaa
nop
adc
push
lock
xchg
prefetch
out
xchg
push
xor
push
mov
push
jns
push
cmp
daa
inc
sbb
aaa
out
xor
rorb
mov
mov
pop
jne
insb
arpl
jge
adc
lcall
mov
push
stos
lds
xchg
fiaddl
inc
imul
cmp
addr16
scas
ficompl
out
dec
outsl
mov
jl
xor
push
push
xchg
adc
int3
xorb
dec
push
and
ret
lods
adc
add
push
jbe
rcrb
sub
imul
sub
cmpl
lods
pusha
and
subl
mov
lret
lock
insb
icebp
add
inc
nop
push
push
shll
sar
aam
lea
adc
xchg
sub
and
jo
aad
es
aas
sbb
daa
jo
mov
add
cmpsl
mov
adc
rorl
out
jo
pop
or
mov
rcrb
insl
xor
mov
das
adc
leave
push
icebp
jo
fimull
jae
out
dec
sub
mov
js
sub
adc
push
and
ret
enter
xor
test
jge
out
push
and
push
shrl
out
call
out
int
xor
fs
out
add
in
ljmp
sub
push
push
jns
inc
aas
sub
mov
mov
push
push
adc
sub
sub
push
xchg
mov
daa
sahf
xchg
lret
jb
int3
cltd
push
jnp
insb
mov
jo
negb
mov
fdivrp
movsl
mov
sub
push
leave
lods
icebp
in
dec
movhlps
xor
lahf
jo
xchg
imul
pmaxsw
sbb
xchg
xchg
jo
or
pop
fidivl
rolb
in
push
xchg
lea
pop
cmp
sbb
leave
xorb
mov
pop
insl
fdivs
push
fcoml
lds
jne
adc
das
cmp
jo
je
jnp
pop
inc
in
jo
repz
das
std
push
xchg
xor
les
mov
push
jp
inc
fisubs
sbb
mov
repnz
xor
addr16
mov
jg
add
cmp
jle
nop
push
mov
xor
jo
stc
scas
aas
mov
out
ret
inc
out
andl
outsl
jbe
scas
out
push
sub
sahf
jns
dec
jecxz
cmp
add
aaa
or
dec
jo
pushf
adc
fs
pop
jo
sbb
pop
je
mov
inc
xor
jo
icebp
dec
arpl
out
ss
ljmp
lea
mov
jmp
dec
push
call
popa
loope
jp
sbb
inc
ret
jnp
mov
xor
sub
cmpsb
dec
jo
cmp
jns
repz
jo
loop
sbb
mov
out
mov
jo
mov
repz
test
sub
push
shl
cmp
pop
icebp
repz
es
fimull
ret
movsb
js
pop
stc
sti
cld
add
pop
repnz
insb
fstps
cli
je
repz
addb
loopne
out
sub
inc
jo
es
push
movsb
mov
xchg
jo
cld
rorl
out
pushf
or
add
xchg
loope
enter
xchg
mov
ret
iret
jo
pop
mov
jo
add
and
div
dec
cmc
sti
icebp
cmp
movsl
push
pop
jo
cli
addb
loop
jo
jmp
dec
or
or
add
loopne
mov
jg
adc
jp
jo
fnstsw
dec
jo
test
scas
xor
push
ss
pop
lahf
push
ljmp
jno
fs
jo
lcall
jo
fs
fistl
in
xchg
jo
jmp
mov
jo
orb
jo
pop
mov
xchg
sti
je
jle
jo
or
and
int
pop
pop
jge
xor
imul
cmpsb
in
mov
push
jns
sub
mov
mov
sbbb
jb
push
lock
packuswb
add
andb
mov
inc
adc
jo
xlat
bound
sub
dec
push
push
inc
sub
test
dec
jae
lcall
lods
movsl
jnp
es
jl
jo
xchg
shll
pop
outsl
lds
or
push
jo
loope
or
xchg
out
and
cmpsl
jb
mov
jne
sbb
pop
mov
bnd
scas
cmp
jmp
mov
loop
dec
or
imul
push
xor
mov
push
mov
xchg
sti
pop
pop
pop
je
imul
insl
mov
xchg
mov
lahf
mov
cmp
imul
inc
sbb
fsubrs
push
jo
dec
dec
cwtl
mov
scas
xchg
push
cmp
pushf
jnp
sub
jb
leave
sahf
sub
cmp
ss
test
xchg
ja
jb
ljmp
cmp
adc
xchg
xor
repnz
jle
aaa
out
mov
push
lods
or
or
mov
xchg
mov
or
dec
cmp
jo
cli
push
inc
pop
xchg
daa
mov
sub
jbe
push
push
or
js
ss
jp
push
cltd
test
or
loope
shll
aad
mov
jmp
ja
dec
cmpsb
sub
pop
push
cmp
insb
aam
int
sub
mov
sbb
jb
jo
sahf
movsb
jle
lret
xchg
setno
dec
addr16
jmp
jo
cmpl
imul
fcomps
stos
push
insb
cmp
xlat
lods
cmc
out
psraw
lea
mov
jg
jge
popa
jge
jo
jecxz
bound
push
adc
das
ss
movsb
out
fists
jns
ret
xchg
jo
or
bound
xchg
add
sarl
or
js
push
fsubl
negb
pop
cli
je
pop
dec
jo
lock
out
pusha
lea
jo
dec
dec
je
xchg
hlt
pop
scas
sbb
dec
adc
clc
inc
jnp
and
push
cmc
inc
mov
test
shll
jo
aam
sbb
aas
outsl
shll
dec
lea
mov
xlat
jae
sub
addr16
ss
paddd
inc
and
push
divl
cmc
mov
or
inc
mov
mov
jo
pop
fnsave
cmp
ljmp
jo
xchg
mov
stos
jo
les
mov
data16
xchg
cli
xchg
xchg
ss
mov
inc
out
inc
dec
or
or
cmp
mov
jb
sahf
push
insl
or
jo
repnz
or
and
xchg
outsl
jge
jp
jo
adc
shl
mov
jo
xchg
rclb
flds
loop
icebp
vmovups
in
dec
jo
fimuls
mov
cmp
divb
sarb
add
in
xor
and
movsb
push
arpl
mov
pop
sbb
sbb
or
jo
or
adc
jmp
cwtl
jo
lds
jg
mov
add
pop
jo
push
xchg
std
xor
pushf
or
sbb
sbb
mov
xchg
pushf
rorb
data16
jmp
push
jle
jo
and
pop
push
xchg
mov
pop
pop
push
jae
mov
sbb
insb
aad
js
je
jo
push
or
popa
nop
int3
es
scas
in
pop
jns
int
and
test
fs
or
std
push
cltd
call
pop
shll
fwait
and
subl
and
stc
jmp
idivl
jo
popa
out
in
sbb
cmpsb
pop
jo
mov
sbb
push
mov
ljmp
test
sbb
pushf
fadds
push
pop
xor
movl
push
push
inc
outsl
enter
and
fs
mov
mov
sahf
jns
add
push
aas
inc
sub
testb
cmpsl
jo
repz
fcomi
xchg
int3
arpl
out
jne
xor
jo
dec
mov
inc
mov
fbld
xlat
jo
mov
or
xor
mov
sub
cmp
jecxz
popf
sbb
add
mov
stos
mov
mov
xlat
push
lea
in
rorl
lds
dec
mov
xor
pop
out
std
stos
hlt
js
arpl
push
jle
xchg
aad
gs
jmp
cmp
nop
sahf
popa
jb
xchg
js
das
sbb
jns
icebp
sub
xor
jo
rorl
jo
jae
ret
sbb
cmpsl
and
stos
cmp
jo
popf
cmp
ss
mov
pop
loope
mov
js
xor
or
in
mov
add
push
hlt
out
mov
test
inc
push
jo
xor
add
lock
popa
push
sub
jg
xor
pop
lods
fs
int
push
and
jge
push
mov
shlb
xchg
mov
std
mov
pop
ret
add
mov
push
fs
mov
add
sbb
cld
popa
js
insb
scas
jl
pusha
fidivl
xor
fs
cs
mov
cld
lock
ret
xchg
push
fiaddl
mov
aad
cmp
push
push
fidivs
and
push
mov
inc
in
fidivl
xor
insb
cmpsl
adc
adc
push
shr
pop
add
int
jae
or
push
pop
mov
jo
push
sti
add
xorb
sti
dec
mov
mov
std
add
fistpll
mov
out
inc
mov
in
addb
pop
push
aas
repz
out
outsb
mov
mov
data16
in
jo
pusha
push
out
jns
inc
mov
and
stos
jle
jmp
jp
push
inc
xor
cmc
or
and
jmp
flds
mov
push
push
cmpsl
add
cmpsl
lea
out
fs
xchg
lods
ss
daa
add
mov
loopne
outsl
mov
mov
pusha
std
push
adc
lcall
mov
imul
xchg
cmpsb
mov
popa
movsl
mov
mov
pop
and
mov
call
inc
shlb
push
jno
push
loope
dec
insl
jg
fs
outsb
push
inc
adc
push
shll
shrb
adc
sbb
cwtl
scas
out
mov
imul
inc
xchg
nop
jle
aas
dec
sub
jns
jbe
unpckhps
adc
sbb
add
push
jo
lret
pusha
push
repnz
call
mov
into
aaa
jo
outsl
jp
scas
pop
mov
fwait
push
mov
mov
jo
addb
loopne
sub
data16
mov
es
jbe
pop
mov
add
jmp
or
sbb
xchg
jo
xlat
imulb
jo
add
arpl
lahf
insl
pop
rcrb
aas
jo
xchg
xchg
negl
icebp
lods
sub
jo
in
mov
insb
jo
loop
movzbl
xchg
lret
pop
sub
jo
mov
jno
nop
sti
clc
ret
add
jge
pop
je
shl
int
xchg
cmp
dec
sahf
lahf
or
fdivl
or
adc
xchg
test
jecxz
in
mov
dec
or
mov
inc
pushf
std
enter
lock
ja
pusha
lods
cwtl
aad
jae
xchg
jo
add
push
cmc
push
repz
hlt
or
mov
test
divl
adc
or
and
fildl
hlt
xor
inc
jns
mov
popa
sbb
jle
movsb
mov
aad
sti
icebp
repnz
mov
pop
rclb
roll
jbe
and
nopl
lea
add
rcll
bound
push
jno
adc
mov
aaa
gs
ret
cwtl
dec
or
push
add
imull
jo
adc
stc
stos
push
xorb
xchg
pop
mov
sub
in
jb
cmp
leave
loope
ret
mov
xchg
sbb
push
mov
movsb
xchg
in
cmp
orl
mov
add
sahf
es
je
or
iret
xor
pop
xor
inc
sbb
or
repnz
call
je
test
inc
jo
pop
ljmp
dec
test
jo
cmp
or
sub
push
in
mov
sets
xchg
js
fldcw
xchg
sub
pop
movsl
sbb
mov
jp
loop
jae
loope
int3
add
aaa
icebp
adcl
push
loope
mov
iret
or
imul
repnz
aam
call
jae
jge
pop
ret
mov
bound
cli
jp
lock
or
cld
cmpsl
iret
adc
push
mov
shll
insl
jbe
xor
mov
xchg
add
xchg
pushw
mov
pusha
shll
cmp
and
pusha
je
cmp
mov
je
fdiv
jo
ror
and
cmp
ljmp
ljmp
ljmp
jg
cmp
jo
adc
les
sbb
jo
jge
mov
jmp
aas
das
cmc
jp
jne
or
out
dec
push
pop
pusha
or
pop
nop
inc
mov
sbb
mov
lock
in
mov
push
cmpsl
rolw
ficoms
ficompl
test
out
jb
cld
das
inc
sub
nop
pop
jg
ret
push
data16
fs
rorb
js
fidivrs
notl
sbb
mov
into
nop
jecxz
xor
inc
js
aad
jo
xor
popf
xchg
xor
adc
hlt
dec
rcrl
bound
ret
jns
mov
xchg
imul
cmp
insb
lea
int
pop
lods
push
push
cli
daa
cmp
jp
pop
mov
into
clc
adc
jo
popf
dec
add
es
mov
xchg
dec
adc
loop
inc
mov
hlt
xchg
push
pop
jb
or
xchg
decl
and
out
mov
jo
out
mov
jb
push
jp
outsb
cmc
xchg
jg
out
bnd
lret
jecxz
xor
jb
int3
shr
repz
test
cli
dec
mov
fimuls
inc
sbb
js
xchg
jnp
jo
testl
js
lret
push
mov
jo
push
mov
jo
mov
imul
scas
rcr
mov
jo
mov
sub
in
and
punpckhbw
mov
jo
dec
cmp
push
fbld
into
jl
jbe
cmc
add
xchg
sbb
out
stc
loop
lock
in
mov
pop
add
mov
jo
mov
sarb
test
stos
jo
punpckldq
cmpsb
aas
or
push
sub
mov
rcrb
jno
sbb
popf
cltd
mov
btr
mov
inc
jo
sbb
lcall
xchg
outsb
repz
sub
loop
mov
js
fwait
bound
sahf
pop
daa
push
xchg
mov
jo
mov
pop
jg
aas
es
jns
jo
gs
lods
jo
push
adc
cmp
cmpsl
test
sub
imul
sub
shll
jmp
push
pop
loop
or
and
nop
inc
mov
mov
mov
shll
xchg
cmpb
push
test
bnd
insl
ja
insb
cmp
push
je
clc
mov
xor
stc
rcrb
adc
sub
popf
dec
inc
add
ljmp
daa
mov
jo
je
adc
xor
jo
mov
in
push
dec
pop
pop
jp
sbb
jno
push
js
adc
xor
scas
daa
mov
jo
inc
lahf
pop
mov
xorb
jp
enter
jo
sub
je
dec
or
push
jl
inc
into
jp
lgdtl
fucom
pop
push
mov
cmpsb
movsb
test
xchg
fcmovb
cmc
je
or
mov
das
movl
js
and
repz
int3
inc
jo
ret
dec
sub
divl
adc
dec
xchg
out
rcll
or
movswl
inc
jo
lcall
jo
fsubrs
into
std
movsl
jo
call
pop
mov
mov
and
test
shl
cmp
pop
mov
sub
fldcw
nop
idivl
adc
idivb
subb
and
pop
lds
inc
incb
mov
ja
cmovg
dec
mov
adc
lcall
xchg
mov
les
in
push
push
fsubrs
xor
int
lahf
push
xchg
jo
and
mov
pop
insb
ret
lret
nop
jae
mov
xchg
jo
mov
aad
jo
jns
daa
jno
inc
shll
insl
mov
mov
xor
jle
sti
ss
push
orl
aaa
pop
cmp
insl
bndldx
push
jp
test
stos
cmpsb
int
or
jnp
jo
or
std
push
cs
aaa
out
movsb
aas
lret
lock
cli
jo
sahf
inc
and
lahf
mov
test
mov
push
cmc
sbb
leave
sub
mov
cmp
xor
push
mov
xchg
dec
jo
mov
cmp
sti
mov
dec
enter
cld
add
and
lods
sbb
xor
roll
sti
clc
jno
mov
mov
out
inc
jo
cltd
movsl
xor
push
sbb
popf
gs
out
push
jnp
add
push
inc
scas
ficompl
or
sbb
rcrb
mov
sub
out
out
ss
int
jo
inc
and
stos
ja
lds
mov
pushl
push
in
mov
pop
pop
jo
std
add
test
dec
xor
pop
cs
push
testb
hlt
js
adc
cmp
xor
push
adc
cmpl
pop
sahf
icebp
inc
add
call
cli
push
out
adcb
das
jo
sbb
xor
cmp
mov
xchg
cltd
push
cmp
mov
mov
xorb
mov
and
jo
out
scas
pop
add
adc
jnp
sti
nop
outsl
repnz
mov
ret
ret
ss
repnz
and
sub
push
fldenv
mov
nop
sub
push
dec
mov
jo
ljmp
jo
repz
mov
jo
cli
aad
jo
dec
push
fs
jne
dec
into
pushf
data16
inc
jo
cmp
loope
int
pop
dec
cltd
jne
ret
push
les
roll
xor
or
rorb
sbbb
sub
pop
shll
imul
mov
mov
or
jo
insl
push
mov
loope
jo
mov
lock
scas
pushf
jo
cwtl
daa
dec
fists
sub
dec
and
cmp
xlat
test
hlt
pop
sbb
jb
pop
mov
xor
lret
movsl
jnp
icebp
lock
cs
xor
jmp
in
ret
cs
sbb
mov
jmp
or
out
xorb
fisubl
xor
nop
repz
mov
ret
fldcw
rorb
lret
add
mov
adc
cs
lahf
nop
xchg
cltd
mov
test
test
je
sbb
lret
dec
popa
dec
jo
imul
ss
sub
aas
call
jbe
out
push
mov
and
cltd
pinsrw
xchg
pop
mov
mov
mov
leave
ljmp
sbb
popa
lcall
cld
sub
push
push
push
inc
addr16
sahf
or
rolb
pusha
or
mov
cwtl
je
ja
sbb
fwait
xchg
js
ds
jo
lcall
sub
xlat
imul
sub
test
jb
xchg
lock
push
adc
and
mov
lret
push
jnp
mov
insb
jo
mov
ret
jo
outsb
pop
cmp
push
sbb
jo
pop
add
or
pop
xchg
fisttpll
inc
jl
lds
int
rol
daa
inc
mov
pop
xorb
sti
push
sbb
and
inc
sahf
mov
add
imulb
rcll
sbb
hlt
push
and
les
adc
inc
cmp
jo
push
fildll
adc
movsl
nop
push
popf
nop
xchg
dec
cmp
icebp
sbb
jo
js
aad
cmc
pop
xchg
jo
push
call
jmp
jp
jo
outsb
xlat
jge
repz
jg
cmp
jb
ja
rcll
add
xor
xorl
movsl
dec
jo
aas
or
fldcw
lock
call
out
add
sti
cmp
or
sub
lret
jle
out
mov
pop
mov
push
adc
push
push
push
add
pop
pop
push
sbb
or
sub
popf
test
lds
and
js
cmova
ss
movsb
push
sbb
repz
inc
push
cmpsb
fistpll
mov
test
movsb
mov
fs
insb
arpl
jmp
adcl
dec
pop
cs
adc
cmp
lahf
and
and
into
adc
mov
out
mov
jae
push
sbb
inc
sub
add
lahf
sbb
xor
fistps
sub
adc
jle
pop
or
fidivs
sbb
xchg
jl
jno
add
popa
jp
jge
jae
imul
jne
mov
cmp
inc
dec
sbb
stc
push
movsb
rcll
inc
ret
push
out
adc
sbb
xor
cld
negb
shll
or
and
out
je
lahf
stos
cmpsb
icebp
fucomp
shlb
mov
push
hlt
jmp
rcll
sub
shll
mov
push
mov
pop
and
mov
cli
cmpsl
or
mov
nop
add
jno
xchg
je
sahf
in
dec
xchg
adc
cmpb
fistps
push
xchg
enter
mov
dec
push
jo
push
sub
jo
xor
sbb
jo
lea
movsb
pop
adc
jl
stos
jo
scas
add
inc
cmp
jo
mov
je
mov
or
jae
push
cs
rcrl
mov
test
pop
dec
hlt
push
and
popa
dec
testb
hlt
and
mov
mov
mov
push
mov
pushl
adc
mov
mov
imul
rclb
sub
sti
lret
addr16
cltd
jo
adc
imul
movl
fsincos
fisttpl
pop
daa
lahf
stos
cmc
pop
push
fwait
xor
sbb
push
push
outsl
fistps
jo
sti
jecxz
es
inc
dec
mov
inc
mov
ret
push
inc
pop
pop
add
mov
push
xor
and
cltd
in
pop
negl
jo
jecxz
into
mov
mov
mulb
cmpsl
in
hlt
xor
jl
adc
popf
dec
ret
push
jo
bound
icebp
cs
cmp
pop
xchg
lods
ljmp
arpl
aaa
dec
xor
ss
mov
into
mov
fcmovnb
dec
cmpsl
mov
stos
outsl
lahf
mov
sbb
mov
pushf
or
sarl
stc
rcrb
mov
pop
addb
add
push
jo
sub
shlb
nop
cs
mov
inc
bound
jo
mov
outsl
imul
jl
rcrl
push
lret
jb
xchg
fldl2e
jmp
sbb
push
loopne
fs
jo
lret
enter
jo
or
sbb
and
cmp
inc
popa
push
outsb
insl
jo
std
jnp
dec
aaa
cli
push
cs
sbb
int3
in
xor
leave
loopne
js
fwait
lcall
inc
stos
inc
sub
and
mov
pop
mov
repz
push
movsb
cmpsl
imul
sub
addr16
jge
shl
divl
lea
subl
jo
xchg
jecxz
int
je
mov
jo
add
pop
into
in
push
jo
inc
scas
rcrl
test
jo
jecxz
jo
inc
mov
loope
mov
add
nop
inc
bound
test
jae
xor
adc
icebp
icebp
movsl
pop
sarb
adc
cli
jo
pop
lds
inc
sub
std
jo
adc
mov
jo
push
jno
cmp
cmp
dec
ss
sbb
jo
dec
std
daa
and
rcll
cmp
imul
jo
ficoml
mov
xchg
and
sub
push
ret
jo
or
inc
int3
rolb
push
xchg
jecxz
push
fidivl
mov
inc
outsl
add
and
push
stc
sub
addr16
lock
sub
gs
mov
subb
es
icebp
das
lock
and
xchg
sbbb
or
mov
or
or
in
in
sbb
cmpsl
lods
ret
ja
cmp
sub
imul
cli
imul
jo
pop
test
add
xchg
xchg
push
mov
push
inc
jne
push
into
scas
idivl
push
adc
push
adc
jo
cmp
xchg
jo
lret
xlat
lcall
adc
scas
xor
xchg
jo
mov
or
jnp
fdivl
and
cmpsb
mov
and
js
test
push
cmp
adc
cmp
nop
jb
stc
test
jp
jo
mov
inc
test
orl
std
jo
scas
mov
xchg
jo
add
in
mov
add
jo
enter
shl
test
subb
add
into
fildl
xchg
outsl
jb
inc
xchg
pop
imulb
jo
dec
xchg
mov
aam
adc
mov
jmp
call
sub
push
negl
ss
xchg
mov
scas
push
inc
js
adc
jo
mov
fldl
cltd
jmp
cmpsl
push
sbb
adc
dec
insl
jo
leave
xadd
loop
or
mov
in
cmp
lods
sub
push
mov
xor
sub
pop
ja
test
ss
cmp
in
mov
jb
neg
cmp
inc
jne
shrl
test
jmp
stos
hlt
lock
jo
xor
sahf
jo
inc
lods
scas
repnz
mov
gs
lea
or
orl
pop
pop
mov
pop
add
sahf
loop
jo
js
mov
xor
ret
pop
shrb
sub
inc
dec
test
xchg
sbb
sbb
imul
jbe
mov
repnz
fidivs
loopne
xchg
rolb
scas
jo
test
lods
jp
and
cltd
xchg
cld
xor
jo
gs
jbe
int3
bts
xchg
mov
xchg
int
cmp
ret
jo
pop
aad
xor
addb
jo
pop
stc
cmp
mov
daa
mov
loope
dec
pop
mov
popa
jae
pushf
out
xchg
mov
nop
or
inc
out
call
jo
cmp
pop
fnsaves
and
arpl
mov
out
popf
pop
mov
push
icebp
test
mov
icebp
pop
mov
ret
push
icebp
shl
xorl
sarl
xchg
ljmp
mov
test
push
out
jo
lret
push
xor
jmp
pushl
jl
jnp
jo
out
pop
dec
push
or
jo
dec
or
mov
subb
push
dec
fs
jae
cmpsl
jo
add
rcl
pushf
shlb
aam
aas
sbbl
mov
popa
jle
jns
xchg
mov
aam
push
xchg
push
jmp
and
div
xchg
rcl
and
xchg
dec
cltd
bnd
aam
push
jecxz
inc
es
ret
in
inc
jo
ret
sbb
xor
jo
add
seto
pop
outsb
jbe
not
movsb
jo
stos
lds
jo
and
dec
mov
or
movsl
or
imul
lea
hlt
out
gs
sbb
stos
jo
out
rcl
loop
aam
jo
daa
jno
pop
add
insl
jo
and
push
repz
sarb
fs
popa
jg
sub
out
test
mov
ds
outsl
jo
in
xchg
pop
fs
dec
jo
iret
int3
add
jnp
xchg
lahf
test
test
data16
pop
jecxz
shrl
ret
fcom
hlt
sahf
dec
jo
mov
int
jo
call
and
or
pop
cmpb
scas
dec
stos
outsl
ljmp
xchg
mov
cmp
je
mov
adcb
xchg
sub
or
jo
pop
push
jg
jo
mov
adc
jo
stc
push
jp
out
pop
paddq
sti
jbe
fs
sbb
push
pop
jae
sub
sub
getsec
jg
push
fs
fsubs
jo
stos
xor
pop
pop
sub
pop
cmp
mov
dec
lcall
pop
push
jns
nop
adc
pop
subb
nop
int3
int
mov
bound
inc
ja
iret
in
mov
jmp
add
sub
nop
cmovg
daa
jnp
ljmp
mov
insl
jne
mov
popf
frstor
cmpsb
jo
lods
lret
mov
cmp
int
xchg
mov
mov
je
add
xchg
jo
push
mov
or
pop
add
in
and
aaa
adc
js
dec
fwait
ds
sbb
add
cmpsb
add
sub
mov
cwtl
xchg
leave
push
jbe
cmpsb
jo
insb
mov
fcoml
sub
xchg
cltd
stc
jo
mov
loop
jo
mov
aam
jo
je
dec
mov
cmc
pop
jo
stc
lock
mov
jge
mov
test
push
cmc
jo
cmp
call
push
scas
mov
dec
dec
jnp
jae
popl
jo
dec
sub
xchg
mov
popa
jo
mov
ret
push
int3
divl
jo
sarl
mov
adc
insl
lcall
cs
shr
push
jo
ja
cmp
addb
mov
iret
in
mov
fmull
jo
cltd
ret
insb
test
dec
jo
int
mov
mov
jo
mov
loope
dec
jg
sbbb
outsb
aas
or
dec
sbb
ret
cmp
shll
dec
out
daa
fucomi
mov
hlt
stc
lahf
sub
std
ret
int3
das
mov
cmpsl
addr16
cmp
jo
push
imul
enter
jne
sub
mov
dec
flds
push
shl
mov
xor
fimull
stos
mov
sub
aas
sbb
clc
cmpsl
std
fs
test
ret
jns
jg
cmpsb
adc
nop
arpl
out
pushf
pusha
popa
in
test
int3
pushl
sbb
arpl
push
or
mov
xorb
xor
xchg
xor
push
mov
aaa
mov
out
xchg
iret
push
xchg
clc
jae
sbb
cltd
mov
outsb
imul
loop
and
in
dec
cmpsl
and
std
lock
stc
notl
cltd
cld
icebp
fbld
lock
cmp
dec
fcomps
adc
xor
dec
out
cmp
andl
cmpsl
or
fs
loope
lcall
sub
xchg
inc
ljmp
lea
adc
out
fs
sti
cmpb
or
mov
mov
stos
xor
adc
mov
dec
mov
add
aaa
test
cmpsb
fdivl
pop
inc
push
mov
lds
popf
std
jne
mov
mov
inc
data16
mov
popa
inc
add
xchg
insb
cmc
arpl
jae
mov
mov
aam
lahf
scas
pop
scas
mov
leave
pop
int
lods
outsl
jle
lret
lcall
mov
pcmpgtb
lret
cmp
or
mov
pop
call
outsl
mov
popf
and
add
adc
shlb
out
pop
pusha
test
dec
pop
popf
clc
scas
lea
xchg
shrb
lret
std
xchg
je
fimull
repnz
push
xchg
sub
xchg
cltd
sti
jo
call
push
mov
ret
aad
pop
jne
lds
imul
repz
cwtl
cmp
out
outsl
sub
inc
push
into
pushf
push
mov
je
fcoms
xchg
clc
stc
jo
maxps
repnz
mov
jo
push
bound
sbb
add
or
push
jl
loope
adc
je
xor
shrb
adc
addr16
ds
xlat
inc
jnp
mov
into
cmpsl
sub
jmp
aaa
es
pop
inc
push
sbb
xor
bound
push
in
insb
aad
fcmovnb
xorl
std
dec
inc
int
fdivrl
fucom
push
inc
push
ret
or
test
pop
and
jo
out
ficoms
ret
cmpsl
add
addr16
cmp
xorb
xor
je
pop
mov
inc
dec
jnp
lods
inc
fs
or
push
test
push
jb
ret
xchg
enter
adc
dec
inc
nop
gs
push
lock
inc
hlt
dec
cmpb
insb
icebp
xorl
xchg
lcall
xor
xchg
pop
nop
pop
jecxz
aad
pop
cmpb
nop
dec
pop
mov
jge
subb
or
xchg
push
cmp
mov
mov
out
test
xchg
rcr
lea
jo
jne
xchg
fisttpl
push
sarl
jp
jmp
outsb
pop
outsw
je
addb
shl
pop
jae
jo
adcl
nop
clc
test
sub
rorb
mov
sti
iret
jle
fs
push
and
push
jl
sbb
jbe
push
sbb
jo
stos
imul
movsb
push
sti
lods
out
push
jo
mov
div
jo
push
iret
ret
shl
stos
adc
push
mov
ljmp
mov
gs
nop
and
push
mov
enter
pushf
pop
xchg
jo
jnp
dec
mov
inc
stos
jo
cltd
das
cmp
test
rorl
aam
and
js
shlb
or
add
stos
dec
or
jo
into
xor
shr
loope
bound
jo
lds
mov
lcall
push
inc
enter
mov
sbbb
adc
push
jmp
aam
or
out
pop
lahf
mov
sbb
pop
mov
dec
mov
jle
sarl
inc
pop
sub
popa
fs
push
mov
jl
lahf
in
mov
fistpl
fsubr
fimull
mov
shl
add
push
mov
nop
int3
jl
xor
enter
dec
mov
jo
sub
xchg
cmp
adc
insb
xchg
and
sti
push
sbb
inc
jae
xchg
jno
jo
rolb
in
jo
dec
sub
repz
shlb
or
push
mov
mov
sbb
mov
inc
push
fadd
repz
dec
jp
dec
jnp
add
jno
and
pop
sbb
mov
or
cltd
push
jo
loop
push
into
adc
xchg
jb
cmp
jg
adc
pop
nop
inc
cmpsb
notb
xor
in
mov
daa
pop
scas
nop
ljmp
push
loopne
push
popf
mov
aam
pushl
dec
out
fadd
mov
add
push
jne
push
dec
xor
push
adc
push
addl
pusha
fisubs
mov
pop
add
stc
andb
mov
jnp
xor
jne
xor
jmp
dec
lock
cmpsb
daa
xor
scas
jae
ficompl
or
loope
loopne
fistps
xor
push
mov
add
insb
jae
inc
jbe
push
inc
sbb
dec
insl
pop
out
loop
jo
jns
cltd
call
aas
inc
lock
and
push
sbb
adc
ljmp
sbb
arpl
dec
lock
jg
out
sbb
inc
mov
bound
mov
stos
xor
xor
adc
jnp
outsl
push
ja
dec
fnsave
pop
xor
das
js
popf
aaa
sarl
sbb
sbb
add
xchg
cmp
aaa
or
cmp
jnp
iret
push
push
fisubrs
sbb
pop
sub
ret
fwait
mov
lock
jle
adc
rcrl
insl
scas
popa
imul
inc
js
push
add
rorl
jns
int3
bound
pushf
popl
mov
fstps
cmp
out
shr
addb
mov
inc
inc
and
fwait
ljmp
cmp
fs
jmp
mov
dec
addb
mov
subb
push
inc
adc
stos
fbstp
es
mov
shll
xlat
adc
sub
inc
fisubs
aad
orb
test
lds
adc
stos
pushw
dec
ret
ret
repz
je
xchg
adc
stc
xor
repz
loope
jmp
sbb
add
mov
mov
fnstsw
cmpsl
xchg
mov
cmpsl
jae
out
cmp
out
cmpsl
inc
jp
xchg
and
in
test
sub
adc
pop
in
cli
pop
xor
std
adc
inc
mov
adcl
sbb
push
dec
fistpl
push
cmpsb
jae
xor
imul
or
dec
mov
test
add
rolb
movsb
jle
pop
jae
pop
push
je
mov
insl
hlt
add
aas
test
xchg
mov
cmp
lahf
popf
add
push
push
sbb
jnp
arpl
adc
out
pop
mov
outsl
fistpll
and
add
push
jnp
clc
into
jle
rcll
xor
or
inc
jo
push
out
pop
jge
sub
and
scas
sub
push
insl
mov
outsb
push
inc
hlt
add
fsubs
inc
push
and
and
inc
mov
push
insl
fucomip
xlat
out
bound
add
std
push
jge
out
pop
and
mov
adc
cmp
push
mov
mov
jae
pusha
jae
insl
nop
js
inc
jo
orl
add
lods
jecxz
jle
stos
mov
cmc
std
xchg
dec
adc
sbbb
push
flds
call
shll
mov
rclb
pop
out
fnstenv
sub
push
pop
jae
jns
out
jp
jg
jno
out
mov
sbbb
mov
sbb
or
les
cmp
xor
add
test
push
mov
jne
out
ds
inc
sub
popf
popf
clc
xchg
jno
sbb
and
xor
bound
fimuls
sub
and
push
imul
sarb
jns
push
mov
lcall
push
int
fbstp
xchg
pop
jb
adc
jae
push
sbb
mov
mov
loope
and
daa
insl
sbb
aam
arpl
hlt
data16
popf
jb
push
lea
jmp
inc
ret
jp
xchg
mov
iret
fs
push
mov
out
add
scas
loop
push
jp
push
inc
fs
lret
repz
dec
ds
lcall
in
push
inc
xor
es
data16
xlat
adc
movb
lea
pause
add
subl
xchg
and
jno
push
faddp
insb
fstpt
in
cmpsl
pop
jno
pusha
push
adc
std
jns
sub
or
arpl
je
das
or
dec
mov
push
jmp
lahf
scas
or
fadd
mov
dec
pop
add
in
cmp
pop
rorl
lahf
xlat
pop
and
fidivs
data16
jae
dec
and
mov
pop
clc
imul
cmp
fsts
cltd
xor
push
jp
push
xorb
test
pushf
repz
data16
fcmovbe
push
mov
and
jae
sub
cld
jp
iret
inc
mov
popa
push
add
sbb
loop
pop
jae
out
iret
push
xchg
mov
sub
pop
out
test
mov
mov
jnp
movb
loop
pusha
xor
push
adc
jmp
push
js
cwtl
outsl
add
xchg
xor
out
inc
jb
jbe
mov
fsubrs
mov
je
jne
test
jle
jmp
cmp
jnp
mov
call
clc
shrl
stc
pop
mov
fwait
lea
mov
sub
lcall
inc
sarb
mov
enter
pop
imul
jge
adc
dec
add
inc
xchg
xchg
faddl
add
out
std
popf
in
push
popf
gs
repnz
jb
cmc
jno
xchg
das
or
outsl
ret
stos
mov
push
fstl
push
les
pop
lock
xor
or
jmp
fsubl
daa
scas
out
or
pushf
or
jae
jnp
insl
cmp
dec
jg
clc
out
adcb
iret
inc
in
sarb
addr16
cmp
cmpsl
aad
lods
lds
push
mov
push
lods
lret
add
jmp
outsl
js
fcomip
loopne
jecxz
call
xchg
sbb
lret
jnp
or
xchg
and
xchg
mov
js
xor
sbb
sar
test
testl
dec
arpl
xchg
mov
outsb
xchg
mov
popf
lock
jle
cmp
push
mov
dec
imul
push
icebp
pop
push
int3
mov
je
mov
pop
icebp
xchg
shrb
out
adc
outsl
leave
stc
imul
div
adc
add
bound
push
mov
ss
arpl
sti
scas
dec
dec
iret
dec
stc
mov
mov
sub
sti
push
push
dec
cmpsl
add
and
mov
adc
aad
xchg
cwtl
dec
pop
jl
xchg
mov
mov
adc
fcmovnb
jp
arpl
mov
movsl
adc
xor
push
aad
mov
enter
jg
shlb
jp
adc
je
or
sub
int
jbe
and
fucomip
shrl
inc
jno
int3
push
in
push
cwtl
cmp
jno
lret
std
add
push
jns
ljmp
mov
and
test
test
fs
and
loop
cld
xorb
add
ficomps
xchg
gs
in
arpl
ret
jno
setg
and
pop
fistps
mov
adc
mov
call
pop
sahf
lock
scas
dec
jp
xchg
jl
or
inc
jo
rolb
sub
xor
xlat
lcall
mov
insb
lock
aas
sbb
adc
cmp
push
cld
push
lahf
lods
or
mov
jo
lea
cmp
popf
xchg
jo
push
rorb
push
mov
sbb
pushf
fildll
sub
and
xor
jg
outsl
push
daa
adc
orb
push
dec
cs
fs
inc
xchg
mov
je
jl
sbbl
movsb
das
and
jo
pop
pop
inc
cltd
mov
sti
jo
shrb
jb
or
aad
jo
and
mov
push
sbbb
xlat
pop
and
cmp
pushl
inc
dec
xor
xchg
xor
seto
and
enter
mov
push
mov
imul
mov
and
dec
bnd
scas
insl
or
imul
movsl
fwait
dec
mov
jle
jo
jl
in
sbb
in
leave
mov
or
rsm
cli
outsl
jb
add
bnd
xchg
mov
jo
mov
and
in
sbb
popa
push
mov
inc
testb
push
jmp
cltd
ljmp
mov
push
xchg
xor
nop
imul
jno
adc
pop
in
mov
jo
pop
sub
imul
mov
mov
mov
lret
or
lods
jns
aas
jle
in
sti
jo
xchg
cmpb
iret
cmpsl
movhps
stos
jo
jmp
loope
cwtl
negb
add
jo
cmp
sub
cmp
leave
mov
aaa
psubw
cmp
inc
ss
jo
in
xor
jo
push
xchg
aad
xchg
cmpsb
hlt
scas
mov
stos
jnp,pt
inc
movsl
mov
xchg
pop
xor
outsl
mov
setb
mov
lods
pop
push
js
fnstcw
push
mov
mov
das
mov
mov
xchg
xchg
scas
fs
push
jp
dec
jo
sbb
mov
loope
push
jmp
push
jb
cmp
xor
cwtl
mov
ss
xorl
or
mov
jge
sbb
adc
cmp
js
jle
divb
or
ljmp
jo,pn
fistl
hlt
pop
mov
test
jae
lahf
aad
push
mov
xor
mov
aas
inc
jb
js
mov
or
adc
ljmp
sub
xor
in
jbe
dec
pushf
mov
add
jmp
mov
movsl
mov
dec
jbe
cmpsb
loop
and
xchg
jno
sbb
mov
mov
clc
sub
ret
jo
test
xor
cmp
ret
mov
stos
divb
sub
xor
test
sarl
or
nop
cmp
push
adc
or
adc
js
and
push
jne
loop
mov
jge
adcb
jb
lods
fsubs
mov
cmp
out
add
dec
ljmp
into
jge
mov
jns
pop
sbb
jo
jb
in
ljmp
mov
pushl
js
add
jecxz
stos
imul
dec
adc
jl
scas
int
and
jg
xchg
adc
nop
outsb
jae
shrl
jo
and
clc
fists
xchg
in
sub
jo
sub
push
ficoms
and
pop
mov
stos
mov
inc
decb
std
push
add
movsl
lcall
xchg
push
xor
xchg
push
jo
stos
out
lret
xchg
xchg
fwait
test
dec
cmpl
xchg
jnp
cli
or
push
js
movsl
jo
arpl
and
test
mov
cltd
jo
pop
cmp
adcb
outsb
push
mov
insb
fisubs
sbb
dec
ljmp
test
pop
cmpb
mov
pop
sub
jns
aad
mov
scas
adc
jb
stos
mov
adc
jle
inc
frstor
dec
insl
push
in
lret
jno
dec
jo
cmp
xchg
int
xchg
xchg
jb
add
inc
dec
fadds
clc
xchg
push
pop
rorl
xchg
mov
imul
sar
sbb
cmp
int
sub
dec
in
dec
outsb
es
sbb
xchg
imul
sub
jle
pusha
sbb
push
inc
pop
loopne
jae
sub
mov
sbb
push
xchg
fldt
sbb
mov
aas
imul
mov
aad
sbb
iret
std
aam
pop
int3
or
loop
or
scas
sbb
and
fstpl
inc
push
sbb
ret
push
or
add
cmp
inc
into
das
jae
das
stc
das
arpl
sub
jle
push
push
xor
xor
add
pop
addr16
adc
push
lret
lods
jmp
dec
adc
out
fpatan
sahf
clc
lea
jns
loopne
std
xchg
outsl
imul
les
cld
mov
sbb
fstpl
cmpsl
cmp
mov
fs
push
mov
inc
add
mov
fwait
inc
test
push
jo
jae
dec
sbb
cwtl
inc
fs
and
shrl
and
clc
fsub
adc
sbbl
insb
shll
stc
jbe
cmp
lret
movsl
inc
push
fidivrs
push
add
cmpsb
add
ljmp
pop
je
repz
out
cmpsb
repnz
aas
mov
mov
dec
popf
call
js
hlt
mov
xor
xchg
daa
fs
sbb
jp
mov
cmpsl
mov
xchg
icebp
lret
mov
jae
dec
xrelease
std
fucom
push
out
call
inc
clc
btr
scas
lahf
cmc
ffree
mov
insb
sub
mov
gs
sbb
mov
xchg
push
test
cmpsb
sbb
es
or
inc
mov
icebp
hlt
adc
pop
imul
add
outsl
lret
mov
push
add
mov
jae
test
in
mov
outsb
inc
outsl
js
cmp
int
lcall
arpl
pop
lret
adc
jne
xor
sti
dec
mov
cmpsb
inc
adc
sti
outsb
mov
out
ljmp
data16
push
jae
test
sti
xor
push
insb
js
rorb
push
fidivrs
mov
xchg
sbb
dec
out
jae
lcall
stc
test
adc
lods
dec
imul
stos
frstor
cmp
xchg
pusha
dec
int
mov
xor
adc
insb
push
dec
dec
shrb
data16
stc
fnsave
clc
arpl
push
dec
dec
jns
lret
imul
mov
hlt
test
lret
arpl
jae
es
arpl
add
and
xchg
iret
mov
and
loope
loopne
into
jl
jl
aaa
jo
aas
dec
mov
ljmp
andb
push
imul
xor
mov
mov
data16
out
gs
pushf
enter
pop
adc
and
jg
loope
sub
jno
popa
cmp
cmpsl
imul
add
pusha
and
adc
mov
dec
lcall
and
sbb
jle
lahf
shrb
vmwrite
inc
out
add
dec
dec
mov
mov
dec
inc
out
or
idivb
mov
bound
add
test
jno
cltd
mov
repz
faddp
push
shl
mov
test
je
test
outsl
mov
mov
inc
ljmp
sub
nop
out
cltd
lock
push
sub
sbb
xchg
pop
mov
sahf
ret
jp
fmull
nop
mov
adc
scas
jle
adc
hlt
sub
and
mov
push
sbb
jp
jns
sbb
gs
mov
jg
or
pushf
sbb
movsl
cmpsb
fsub
clc
out
ja
insb
and
cmp
scas
lahf
in
popl
das
imul
inc
and
sub
cwtl
into
cmp
sub
loopne
ljmp
inc
push
lods
mov
repz
mov
push
cmc
ret
in
or
fs
cs
jmp
in
daa
xlat
int3
cltd
xchg
pop
shll
cld
adcb
lods
repz
dec
mov
jne
dec
add
mov
push
sbb
fldcw
sarb
add
imul
cmp
inc
test
les
fs
rol
push
add
gs
sub
insb
cmp
jl
loop
std
lods
imulb
fimuls
cmp
icebp
das
orb
hlt
data16
inc
or
push
ret
adc
sub
jle
xor
push
and
cli
loopne
mov
fldt
and
xor
jo
add
push
add
and
and
shlb
mov
mov
aad
mov
sub
ja
add
adc
mov
fs
jecxz
movsl
xor
lds
push
loopne
dec
sbb
int3
pop
aad
ja
in
push
fstpl
cmpb
sbb
je
xchg
shrb
sbb
jge
outsb
stos
sub
insl
pusha
pop
outsl
jmp
outsl
cs
push
bound
ds
enter
dec
jmp
jg
adc
dec
lock
pushf
push
dec
iret
add
jnp
stos
sbb
testb
iret
jae
adcb
sbb
dec
jne
or
aad
cmp
pop
sti
les
mov
cmp
inc
std
out
fiaddl
mov
sub
push
mov
mov
js
out
sbb
imul
jmp
insl
call
repz
lock
adc
adc
jmp
and
imul
jae
cltd
ret
hlt
adc
jge
cmp
jae
cltd
rcll
push
add
xor
push
fwait
xlat
mov
jmp
es
mov
sahf
aad
mov
cmp
les
or
mov
inc
int3
pop
jnp
push
outsl
sub
cmpsl
pop
daa
orl
lcall
mov
xor
cld
ljmp
ds
adc
sbb
bnd
lds
loop
and
imull
sbb
clc
aaa
fisubl
shlb
cmp
fdivp
rorl
push
insb
rcrl
jl
xchg
mov
cmp
mov
xchg
mov
mov
jmp
arpl
pop
pop
fs
adc
fs
shlb
ret
in
jo
xchg
movsb
mov
dec
sahf
daa
in
ljmp
or
inc
xchg
mov
pushl
push
jb
mov
adc
jae
dec
add
cs
xor
data16
xor
ficoms
scas
insl
ja
add
sub
clc
or
fs
mov
test
movsb
dec
out
mov
pusha
fnstcw
mov
aam
in
push
xor
xchg
xor
fs
out
cmp
mov
out
xchg
loope
int3
dec
out
lea
adc
cmp
fs
cmpsl
aaa
pusha
pusha
sbb
lret
imul
xchg
inc
aaa
or
mov
out
inc
jae
jno
fbld
mov
add
shll
dec
outsb
mov
std
and
test
xchg
sarb
mov
in
push
insl
mov
and
push
push
stc
and
mov
cmp
stos
cmp
test
push
cld
lock
add
outsb
xor
lcall
push
test
mov
mov
jnp
jecxz
arpl
faddl
adc
stos
mov
je
mov
aaa
pandn
iret
xchg
jmp
lret
inc
jg
repz
push
lea
out
push
push
xor
lret
jnp
pop
outsl
adc
xorb
shll
ficoms
test
lock
inc
aam
arpl
jbe
cmp
and
push
loope
jns
movsl
rcr
pop
fldcw
call
aam
mov
push
jle
repnz
or
lcall
push
cld
jnp
cmpsb
jae
and
xor
lret
cmc
jne
mov
add
outsl
lods
push
jae
xchg
push
out
mov
xor
and
stos
jl
adc
push
clc
jae
mov
xor
inc
je
pop
mov
inc
push
scas
out
mov
leave
punpckhbw
push
repnz
int3
imul
lcall
lods
push
xchg
pusha
dec
outsl
xchg
jg
xor
scas
mov
test
xchg
fildll
lret
jmp
pop
dec
mov
lods
mov
pop
fldcw
mov
pop
jmp
mov
inc
jle
mov
mov
jae
cmpsb
jp
jo
mov
jecxz
cmp
sbb
push
pop
xor
pop
add
push
push
mov
fidivl
cmp
je
mov
nop
lds
xchg
loop
scas
test
pop
iret
mov
pop
sub
or
cmp
dec
xchg
cmpsb
sub
nop
pop
insl
in
mov
sbbl
inc
jb
movsl
lahf
fists
psrlq
lea
jbe
push
inc
loop
mov
pop
push
leave
aam
lret
xorl
fwait
pop
push
mov
popa
cld
int
pop
ja
inc
mov
mov
inc
push
out
jo
popa
adc
cltd
mov
fisubl
sbb
iret
xor
and
add
mov
jo
add
out
mov
mov
jo
pop
xchg
push
mov
lods
jo
mov
or
negl
cmpsb
push
out
mov
jo
cs
xchg
shll
and
jb
aad
nop
data16
divl
shl
xor
lock
das
or
sub
fucomi
mov
sub
jns
ret
repz
add
mov
mov
hlt
push
ret
data16
jo
mov
mov
in
jmp
or
push
das
mov
inc
je
jo
push
and
pop
lret
sub
or
mov
fdivrl
out
jo
xor
insl
push
mov
adc
aam
xlat
mov
shlb
lret
iret
nop
lahf
xor
jo
mov
xchg
jo
cmp
dec
jo
daa
fisubl
pop
mov
jne
push
sub
or
adc
fwait
jo
inc
pop
scas
dec
stos
ss
pop
les
data16
push
clc
bnd
jo
xchg
xlat
loopne
mov
cmp
shll
std
mov
xor
jge
arpl
sbb
nop
and
lock
test
push
loop
sarb
cs
push
mov
jo
mov
inc
dec
xor
scas
scas
das
pop
insl
and
jo
lock
movsb
ja
jo
aam
cwtl
sti
loope
jo
cli
out
popf
jae
mov
rcll
mov
scas
xor
add
push
sbb
dec
dec
jnp
mov
mov
cmp
push
rolb
in
lret
jmp
js
mov
mov
push
nop
inc
push
cmpsl
dec
jnp
andb
imul
sbb
cmp
dec
jo
xor
into
jg
sbb
test
xchg
cltd
popf
insb
dec
dec
ljmp
cld
mov
sahf
jo
mov
jl
mov
add
aas
add
mov
push
out
inc
push
inc
insl
or
loopne
jo
jg
push
push
jmp
push
inc
dec
mov
inc
jp
or
ljmp
jle
out
mov
insl
jl
jo
cmpsl
std
pushl
psrlq
icebp
and
fisttpl
xchg
push
test
jl
mov
loop
push
daa
insl
jl
movsl
mov
mov
jo
push
ja
cmp
and
jg
clc
push
fdivl
insb
push
mov
imul
push
push
xlat
movsb
in
mov
fisttps
push
shl
jno,pn
ret
pop
mov
xor
rorb
push
mov
pop
xchg
jle
ficoms
jo
fstps
and
inc
pop
repz
scas
pop
scas
repnz
les
or
bound
cmp
cmpsb
test
je
imul
jo
mov
jbe
popa
cmp
jo
push
or
lods
dec
xorl
jmp
mov
sub
nop
xchg
lea
pop
xchg
inc
lret
push
rol
mov
leave
sbb
lock
out
push
andb
adc
or
ja
add
das
es
dec
fldl
dec
mov
inc
aaa
arpl
js
dec
jle
rorl
outsb
gs
test
ficomps
stos
jno
add
rsqrtps
adc
xor
jb
dec
imul
loopne
dec
stos
jo
mov
jg
jo
dec
sub
mov
loopne
pop
xchg
cli
push
orb
sbb
sti
mov
push
nop
sub
xchg
sub
das
inc
xchg
jo
adc
mov
popa
fucomp
sub
jo
mov
jo
dec
cltd
stos
mov
push
cmp
leave
dec
adcl
nop
dec
jne
scas
xor
jae
pushf
imul
ja
cmpsl
xchg
and
mov
stos
pusha
add
jo
jae
sub
or
ds
lods
jp
jo
sbb
mov
nop
mov
js
movsl
in
orb
cmp
jo
fstpt
shr
loope
jo
leave
or
mov
adc
ret
jns
sub
ficomps
rol
adc
int3
dec
sub
jae
addr16
repnz
and
sub
daa
loope
out
arpl
xlat
enter
cmpsb
js
loop
sarb
xchg
jmp
lcall
adc
hlt
js
mov
nop
dec
fmul
notl
bound
inc
or
cmc
ficoms
mov
adcb
jo
addb
sbb
push
or
jo
lcall
mov
jo
and
insb
arpl
cmp
sub
jnp
or
inc
loop
mov
repz
rcr
cltd
sahf
dec
outsl
call
mov
ficompl
push
mov
cmovbe
xor
scas
sub
mov
loope
test
sbb
cld
dec
icebp
push
adc
cmp
pop
in
in
lock
sbb
adc
out
shr
cmp
push
dec
sub
or
out
and
js
inc
push
popa
ss
pop
mov
and
cmp
mov
inc
cltd
jo
adc
pop
aad
push
jo
pop
aas
popa
rorb
push
out
mov
iret
jbe
jo
scas
lock
into
and
or
cmpsl
imul
test
cmp
mov
ljmp
inc
inc
lret
insb
call
scas
and
pop
imul
addb
cmp
mov
leave
push
es
test
jo
sbb
mov
jno
mov
adc
lds
sarl
mov
mov
push
jle
mov
jo
fiadds
pop
jnp
gs
aad
sub
dec
push
stos
ret
push
pusha
mov
pop
out
mov
gs
in
sarb
pushl
cs
int3
dec
mov
inc
jne
jle
addr16
jo
mov
fs
std
mov
out
mov
nop
scas
or
cmovo
mov
pusha
es
fistl
mull
adc
insl
mov
aam
ljmp
sbb
repz
dec
call
adc
xor
inc
inc
insb
fs
sub
lea
sbb
jae
fs
iret
int3
mov
jo
popa
data16
and
xchg
pinsrw
ret
jp
jae
stos
jo
test
cmp
sbb
jo
and
push
pushf
cmpsb
pop
pop
jl
sub
shlb
lahf
or
imul
mov
push
enter
insl
jo
push
lds
fbstp
divl
sti
stc
out
repnz
mov
sar
out
ret
imul
sub
repnz
add
insb
inc
les
jo
pop
push
cmp
jnp
pusha
das
aas
push
jle
xchg
ja
pop
push
fidivrs
repnz
pop
jo
mov
jecxz
nop
cmc
inc
in
test
mov
out
jg
mov
fldt
and
shlb
push
fisubs
outsb
fnstenv
or
mov
insb
sahf
jle
jae
lods
scas
pop
lods
push
xor
inc
jbe
pop
jb
mov
sub
in
cmp
jae
daa
sbb
sbb
jbe
outsb
shlb
call
xor
adc
mov
add
pushf
push
and
mov
int
shrl
lock
arpl
sti
nop
jmp
jae
test
stos
std
push
call
addr16
and
inc
fs
cmp
imul
inc
mov
imul
push
sbb
sti
out
jle
loop
sbb
cwtl
push
mov
orb
shll
arpl
jle
loopne
nop
scas
iret
pushf
xor
xchg
jo
jle
int3
pop
movsb
cmpsl
push
mov
das
fnstcw
ja
stc
movsl
gs
mov
js
sub
test
adc
fnsave
xchg
dec
xchg
lret
mov
cltd
loop
or
xchg
jae
cmp
push
dec
and
mov
lods
clc
jl
mov
add
rolb
add
lods
mov
js
cmpsl
fisubl
popa
mov
pusha
add
mov
xor
sub
mov
xor
inc
frstor
repz
out
push
push
or
out
dec
push
sbb
jae
push
pop
push
pop
cltd
bound
push
iret
sbb
out
fadd
dec
dec
loop
movsb
push
fdivp
cli
add
mov
fldenv
fsubrl
and
fs
pop
mov
push
mov
rolb
insb
inc
in
test
push
vcomiss
push
fs
or
fsts
pop
bound
or
add
idivl
fstps
mov
mov
call
xlat
outsl
mov
icebp
push
daa
mov
arpl
xchg
outsl
shlb
data16
push
loopne
imul
cmp
sbb
add
adc
jo
lcall
dec
ret
push
out
jbe
jg
out
addr16
rcrb
sbb
imul
push
shll
lret
sbb
or
jmp
or
jo
mov
fildll
push
jo
loope
lret
inc
cmp
or
jge
add
cld
xchg
jo
mov
add
push
cmp
mov
push
jo
adc
adc
jbe
js
and
xchg
ret
inc
clc
icebp
out
add
mov
test
push
push
or
lods
push
btr
lock
aam
movsl
jo
shrl
cmp
push
add
pusha
jo
push
cmp
adc
lahf
or
ss
iret
in
scas
and
sahf
loop
jo
jbe
hlt
jb
loop
jo
fdivrl
iret
push
inc
jl
stos
scas
lret
cmc
mov
leave
xor
cld
jno
jo
rcl
shll
pop
jo
lahf
aad
pop
jle
pusha
nop
insl
add
movsl
cmc
pop
out
test
jb
push
cmp
sub
pop
call
or
sbb
xor
sub
cmp
lds
in
inc
insb
orb
mov
cltd
dec
pop
sub
jo
arpl
js
and
nop
loope
sub
or
jo
adc
add
out
push
shl
lods
fmul
mov
push
lds
xchg
pop
push
fidivl
mov
inc
adc
jne
mov
fisttpll
push
jo
add
pop
in
mov
jae
ds
pop
pop
jo
js
adc
jo
rcll
icebp
mov
int
sets
pop
pop
push
subb
xchg
mov
pusha
mov
mov
stos
in
ss
sub
jb
sub
insb
nop
or
or
jns
jp
int3
xor
jl
repnz
or
xchg
xchg
negl
push
jo
add
stos
sub
setge
fcmovb
or
je
dec
jo
rclb
in
repnz
mov
rcl
sarb
add
xchg
pop
jo
inc
adc
loop
mov
rorb
imul
sub
jo
in
cltd
mov
jge
jo
xchg
insb
push
scas
cmp
je
cmpsl
mov
adcb
mov
jo
movsl
jae
pop
adc
jo
mov
mov
mov
mov
nop
push
cld
sbb
mov
adcl
shll
mov
sahf
in
jp
es
inc
adc
or
dec
std
xchg
ret
sub
iret
push
sub
into
jo
xchg
push
leave
repz
int3
jo
gs
insl
test
xchg
mov
mov
or
and
sub
cltd
jo
pop
adc
xor
popf
inc
push
ljmp
int3
inc
mov
sub
repz
js
pop
xchg
ja
hlt
mov
aad
iret
test
lock
in
cli
mov
popa
jo
outsl
mov
std
or
jl
xlat
test
jae
mov
xchg
push
outsb
xchg
insl
push
data16
rorl
into
push
in
out
adcl
inc
lds
push
in
aad
push
or
pop
push
ret
cmp
out
lcall
or
xor
clc
sub
jae
lret
push
js
pusha
mov
mov
shll
imul
rclb
clc
push
or
jg
test
add
dec
inc
or
cwtl
pop
push
test
adc
mov
dec
inc
lret
leave
imul
fnsave
bound
mov
push
pop
push
mov
jbe
add
jl
popa
xchg
jo
mov
pop
dec
mov
jo
fsts
mov
sbb
roll
cmp
gs
lcall
mov
jo
cwtl
lock
lret
or
and
fidivl
pop
push
pop
or
dec
lea
andb
shlb
pop
paddb
daa
aas
addr16
pop
std
outsb
popa
fnstenv
imul
xchg
jo
jp
push
rcll
jo
sbb
mov
sbb
inc
jo
lcall
jo
mov
fiadds
mov
mov
pushf
orb
or
mov
stc
mov
repnz
out
mov
addb
shlb
sbb
cmp
or
jp
jl
dec
fbstp
xchg
cmp
dec
sbb
jo
bound
imul
mov
jge
repz
out
sub
testb
xor
hlt
test
jmp
es
jne
mov
or
imull
out
push
xchg
int
mov
nop
in
pop
lcall
jo
jecxz
icebp
push
add
ljmp
cwtl
test
jbe
push
enter
nop
mov
fmuls
insl
add
jb
lea
lock
cwtl
dec
fdivs
adc
fwait
jo
aas
fildl
and
pusha
sbb
loop
das
inc
sub
or
out
add
lock
mov
shll
movsl
cmovb
es
push
call
mov
in
push
mov
cmp
pushf
and
sub
xchg
xchg
lret
test
and
xor
sbb
add
cmpsb
adc
enter
loope
stos
repz
inc
mov
popa
push
clc
cmpsb
inc
push
jns
xchg
int3
popf
add
or
cld
mov
cmpsb
inc
mov
or
cmp
movsb
push
jnp,pn
pop
xchg
leave
mov
or
dec
jo
mov
xor
sub
decl
dec
adc
arpl
movsl
pop
xor
mov
in
jl
jno
test
rorb
aas
out
jl
lahf
addb
cmp
inc
push
std
cmp
xchg
fsubs
mov
mov
jge
mov
and
jb
es
dec
mov
push
shlb
xor
clts
sbb
mov
cmp
je
cmp
es
fadd
cmp
cmp
cmpsb
xorl
mov
mov
divl
nop
std
add
arpl
ficoml
ret
add
out
loopne
and
mov
jno
das
outsl
movsb
jnp
out
ret
mov
push
mov
scas
xchg
push
xchg
in
or
add
mov
lret
push
pushf
sub
test
negb
rcr
incb
xlat
sti
orb
fmull
jbe
mov
ret
or
cmp
shlb
pushf
pop
lds
sub
mov
popf
aaa
mov
call
lds
xor
add
cmp
mov
lret
ficomps
jae
xor
addl
push
mov
push
inc
mov
jp
add
sbb
push
cmp
pop
aad
enter
push
mov
or
rcrl
enter
out
jge
xchg
push
or
iret
fadds
mov
cmp
lock
and
dec
push
leavew
insb
cmp
in
testl
out
hlt
enter
lahf
std
daa
es
rcl
jp
mov
cmp
test
jge
sbb
dec
or
lock
adc
ds
bound
ret
incb
cmp
out
push
fldt
pushf
scas
scas
test
mov
add
shr
bound
imulb
pop
mov
sub
jg
icebp
jns
jae
movsl
insl
das
fists
bound
ljmp
cltd
pop
xorl
xchg
shrb
std
jmp
out
push
add
or
lock
rcll
into
lds
sbb
sub
ja
jns
pop
test
bound
js
mov
push
sub
pop
lock
out
mov
xor
inc
cmpsb
jnp
test
jnp
mov
jp
test
shrb
pop
sub
jge
fstl
jp
scas
roll
dec
cmp
push
xchg
push
pop
push
mov
popf
icebp
or
push
mov
xor
insl
push
jle
outsb
fistpll
jae
nop
mov
mov
mov
jnp
jo
dec
mov
xchg
aas
xchg
sub
jnp
jo
stos
cmpsb
mov
add
dec
arpl
stos
shrb
lds
xchg
add
fs
daa
ds
outsl
mov
gs
cmc
cwtl
dec
lahf
dec
mov
lret
negb
shll
sbb
sub
mov
push
push
fdivs
hlt
shlb
ja
inc
fldenv
jae
or
and
repnz
std
sbb
mov
mov
mov
stc
or
rolb
mov
jl
sbb
pop
insb
repz
ror
ja
dec
jle
push
sbb
outsb
jae
sbb
nop
clc
jg
jns
mov
lock
shll
inc
das
sbb
jno
stos
test
cs
cmpsl
addb
jge
mov
test
ret
orl
inc
mov
enter
and
add
add
adc
xchg
int
sti
rcrb
adc
sti
mov
xchg
lea
inc
or
enter
and
mov
or
loope
add
push
add
add
dec
stc
lret
loopne
out
push
jp
mov
addr16
sar
push
adc
loop
movsb
inc
fidivs
and
cli
aam
cmp
loopne
jo
iret
cltd
push
jo
mov
daa
in
cmpsb
jo
adc
push
scas
int
adc
mov
jb
xlat
jg
in
or
lods
dec
jbe
mov
cmp
or
movsb
call
push
dec
mov
cmp
imul
mov
popf
xadd
dec
rclb
out
dec
mov
jns
das
pop
cld
mov
clc
and
popa
inc
enter
pop
mov
dec
outsb
test
jno
sbb
mov
and
imul
cmpsb
add
fwait
aas
jb
lret
movsl
mov
dec
scas
fs
and
fisttpl
pop
repz
stos
add
push
jb
mov
dec
int3
push
mov
cmc
mov
popa
push
in
fidivrs
and
mov
and
insb
fidivrl
gs
popf
addr16
lods
nopl
xcrypt-ofb
cmpsl
jmp
arpl
lock
gs
test
add
adc
push
push
addr16
pop
xor
pop
fcomip
ficompl
cli
aas
sub
add
in
out
mov
popf
jne
sbb
lret
aas
repz
inc
sbb
stc
xchg
dec
xor
fs
fs
test
sbb
jns
sub
sub
and
arpl
sbb
mov
inc
bound
roll
dec
jg
jne
and
scas
jge
xchg
jno
std
mov
pop
cmp
leave
push
lret
icebp
or
aas
clc
jnp
cmp
je
cmpsl
lods
pusha
sbb
addl
shlb
movb
ds
fadds
sahf
cmpsb
inc
adc
dec
sub
xor
cltd
lods
mov
loope
fwait
js
sub
jns
in
xlat
push
or
arpl
dec
int3
xchg
add
jb
inc
ficoms
out
pop
in
std
out
daa
xchg
int
pusha
fs
jno
in
mov
inc
jbe
sub
jle
nop
jbe
call
dec
mov
stos
data16
or
daa
jmp
or
or
fs
std
jge
jns
fsubp
ret
mov
lock
shlb
or
cmpb
mov
es
sbb
push
mov
and
push
arpl
cld
jb
lea
push
es
frstor
or
ficompl
jns
jae
xchg
lcall
addr16
out
xchg
aas
sbb
rcrb
fisubl
xor
jle
test
mov
mov
pop
in
mov
jae
roll
insb
cwtl
push
loopne
push
xor
mov
ljmp
or
fwait
adc
ds
stos
adc
push
shlb
lret
shrl
jg
int3
fisubs
rcrl
add
outsl
lds
movsb
shlb
aad
inc
jmp
popa
mull
int3
cltd
icebp
pop
xlat
push
mov
roll
int3
jl
cmp
fstps
xlat
ficomps
push
cmp
mov
sar
repz
push
sbb
adc
inc
movsb
loop
fildl
adc
jae
sbb
roll
push
scas
add
lock
movsb
pop
adc
movsl
out
cmp
notb
mov
jmp
cmp
bound
pop
sub
lock
inc
or
in
pushl
adc
push
pop
cmp
and
fsubrl
inc
sub
arpl
or
imul
adc
push
cmpsb
jns
cltd
dec
in
and
and
mov
out
jno
mov
stos
je
jp
dec
xchg
push
mov
mov
arpl
sub
loop
xor
mov
inc
pop
pop
adcb
movsb
mov
xchg
and
es
cmp
cs
jg
mov
mov
adc
roll
sahf
arpl
dec
scas
add
sbb
orb
cwtl
push
sub
xor
fcoml
sub
imul
movsl
dec
or
pop
sbb
cli
inc
cmp
outsb
jae
xchg
outsb
insb
daa
cmp
jge
loope
add
hlt
sub
jne
es
aad
sub
movsb
mov
les
sub
mov
std
aaa
push
xor
push
or
shlb
ret
jmp
mov
pop
out
inc
nop
movsl
pop
mov
gs
icebp
mov
push
jne
ds
mov
xchg
xchg
jp
jp
jns
imul
dec
mov
push
xor
pushf
movsb
pushf
ja
stos
pop
mov
mov
xor
pop
cmp
sub
lahf
mov
lock
cmpsb
out
clc
shlb
pop
enter
pop
daa
loopne
dec
je
cmp
aad
movsl
add
mov
xor
arpl
mov
aas
sbb
inc
sahf
cmpsl
push
mov
cmp
and
lock
idivb
xchg
fwait
in
push
idiv
push
adc
dec
sbb
shll
dec
mov
and
adc
lods
std
jae
fistpl
sub
int3
lcall
nop
loopne
or
loope
rcll
cmp
icebp
les
inc
jg
jne
outsl
jmp
gs
and
je
xchg
pop
lret
inc
sub
imul
and
inc
shrb
cmp
imul
sub
repnz
sti
mov
movsl
cmp
loope
push
insl
enter
cmp
mov
ret
push
jnp
sub
jo
cltd
jmp
test
popf
add
mov
cld
gs
aad
sbb
arpl
inc
cltd
repz
jne
mov
mov
insb
insb
sub
mov
les
sub
jo
fistps
movsl
iret
mov
mov
pop
int3
cmc
or
inc
mov
inc
data16
sarb
xor
scas
lods
sahf
cs
ret
dec
mov
sub
adc
cmp
adc
adc
arpl
xor
push
in
out
ja
add
repz
add
roll
or
sbb
pop
push
lret
push
push
xorb
mov
clc
add
fdivl
mov
cs
mov
cmp
fld1
mov
inc
movsl
mov
push
mov
sbb
sub
sahf
punpckldq
inc
push
mulb
mov
xchg
ret
dec
add
mov
sahf
mov
ror
addb
cmp
cmpsb
adc
jbe
sub
clc
in
repz
cltd
mov
push
cli
sbb
push
mov
int3
xchg
lock
in
cmp
lret
sbb
lock
push
or
mov
roll
sub
xchg
jo
push
pop
and
mov
inc
fidivs
mov
jnp
push
cmpsb
xchg
cmc
movsb
cltd
and
arpl
sub
insb
xchg
cmp
or
adc
cmpsl
adc
sub
xchg
mov
lahf
stos
pop
aas
sbb
mov
xchg
insb
inc
mov
insl
sbb
mov
aad
scas
push
mov
xchg
inc
in
xchg
jge
fldt
xchg
test
jle
inc
mov
and
loop
aam
ja
out
jae
sahf
icebp
inc
sbb
stos
insb
cmp
pop
fcmovnu
mov
in
sub
dec
jae
aaa
xor
xchg
mov
xchg
mov
push
ret
or
sbb
out
lock
add
or
xchg
sub
addl
insb
xor
outsb
in
shr
and
sbb
out
xchg
add
xchg
push
out
sub
pop
xor
pusha
gs
ficoms
cmpl
cs
nop
mov
jge
pop
jge
imul
dec
cltd
push
daa
inc
xchg
adc
jnp
sub
jo
add
test
adc
sahf
push
inc
jo
bound
inc
jno
dec
or
xlat
cmp
xor
cmp
mov
out
jo
mov
pop
sbb
jecxz
add
push
testb
lahf
mov
bound
dec
sub
adcl
inc
xor
pop
jne
cmp
jo
or
in
scas
lods
jo
jge
jae
sbb
cmp
repnz
jo
enter
sbb
or
popf
out
and
ud2
push
movsb
call
enter
mov
mov
mov
mov
add
push
xchg
mov
and
cli
mov
cs
mov
jp
icebp
adc
clc
cmpsl
sbb
mov
daa
fadd
shrl
sbb
adc
shrb
iret
icebp
adc
lahf
es
divl
jo
pop
les
and
jae
cld
mov
mov
es
sub
push
repz
push
incl
in
sbb
xlat
dec
dec
nop
mov
aas
mov
sub
movl
testb
xchg
mov
adc
xor
ljmp
cmp
jo
rcrb
pusha
fwait
jb
ret
jo
mov
cmp
mov
xchg
fstl
fsts
jo
xchg
sub
mov
and
cmp
jo
test
scas
xchg
js
icebp
loop
and
js
aaa
fistpl
mov
mov
sbb
or
inc
test
push
mov
xchg
loope
jo
pop
in
jge
movsb
repnz
push
js
cmp
lret
mov
jno
pop
jp
sub
repnz
sub
xor
mov
mov
inc
sti
jo
ljmp
jo
push
mov
jo
jns
sub
mov
test
cltd
inc
call
push
add
nop
test
sti
imul
stos
pop
int3
mov
pop
fdivrs
mov
adc
movsb
mov
loope,pn
jg
jbe
adc
pop
popa
push
inc
js
enter
jo
jne
pop
pusha
adc
jo
adc
loope
stos
or
or
mov
jecxz
jo
add
sti
cmpsl
jb
mov
icebp
xorb
or
mov
push
outsl
insl
clc
test
xchg
pop
jbe
mov
setg
repz
xor
mov
insl
dec
arpl
jo
lea
adc
pop
test
jo
fwait
mov
adc
nop
ret
imul
sub
addr16
pop
jp
stos
push
out
popf
push
in
push
lea
cmpsb
jo
adc
sbb
int3
dec
adc
pop
cmpl
enter
lock
outsl
or
movsl
jo
pusha
aam
mov
mov
mov
inc
adc
cld
rorl
int
and
xchg
insl
mov
and
lea
movsb
movb
daa
nop
cmp
mov
or
and
pop
mov
pusha
jo
pop
push
aaa
cli
mov
rclb
jmp
push
sub
loope
jo
inc
pop
inc
inc
add
scas
push
pop
mov
lea
loop
pop
dec
ret
jo
ror
push
and
or
sbb
dec
jo
push
push
rcll
inc
dec
pop
cmp
shll
sub
jo
and
mov
cmp
test
pop
popf
imul
mov
adc
vcomiss
push
popa
stc
call
cmp
pop
ret
jns
mov
sbb
mov
and
jo
xchg
mov
lcall
bswap
cmp
je
enter
jmp
scas
xchg
sub
xchg
pop
jo
out
pop
int
cmp
jecxz
or
xchg
in
push
test
ds
push
pushf
ret
leave
shr
jge
mov
bound
adc
jo
push
mov
shll
xchg
push
adc
and
jo
adc
push
jns
push
sbb
outsl
adc
mov
cld
sti
xor
jo
popa
sbb
push
lret
inc
xor
pop
inc
xorb
jo
sub
and
cld
out
lret
or
mov
push
mov
outsb
add
lock
push
inc
pop
and
pop
sub
adc
in
jo
iret
out
pop
inc
inc
sub
adc
jo
push
es
jge
mov
xlat
push
stos
aas
aam
cmpl
and
and
jbe
cs
fsubs
jo
mov
xor
ljmp
rcl
add
dec
sbb
or
aas
je
sbbl
xor
xchg
rcll
inc
loopne
jo
push
mov
cmp
ja
and
add
or
push
ja
fidivl
cltd
pusha
xchg
xorb
insl
lahf
xor
adc
jo
mov
jg
lea
jne
rcr
inc
xchg
out
int
cmpb
je
or
push
out
sbb
clc
pop
pop
mov
jo
sbb
xchg
aam
nop
daa
jb
mov
mov
mov
sbb
pop
nop
rcl
pop
in
pop
leave
cmp
mov
jo
jmp
mov
lret
addr16
repnz
jbe
xor
mov
lods
sbb
and
or
leave
and
jg
rol
mov
cmp
lds
bound
dec
xor
scas
jp
insb
mov
jne
mov
jg
in
iret
xor
js
push
xor
call
sbb
dec
mov
sub
lahf
xchg
scas
cmp
int3
hlt
leave
cs
mov
add
adc
push
or
jo
adc
mov
fidivrl
shll
clc
inc
das
pop
xor
push
out
xor
mov
ficoml
inc
repz
mov
addr16
mov
inc
sub
iret
jo
mov
cmp
jo
sbb
xchg
jle
dec
clc
pandn
jns
test
jnp
jo
push
int3
arpl
sub
mov
add
pop
stc
jo
fmuls
push
cmpsl
rcrl
sub
cltd
movsl
js
inc
push
dec
fimull
mov
xchg
mov
push
push
inc
xchg
dec
jp
sub
gs
dec
int3
cld
adc
mov
sbb
divb
cli
loop
pop
js
pop
mov
lcall
int
jae
enter
cmp
mov
jbe
aaa
jo
clc
fisubrl
pop
lret
pop
shrl
stc
mov
or
test
bound
sub
lret
jbe
sub
insb
loope
jo
push
xchg
xchg
int3
je
pop
jo
imul
jo
dec
pusha
sub
dec
lds
xchg
les
jo
fists
aam
sbb
imul
int
in
into
xchg
ret
xchg
call
out
push
and
fldl
sbb
mov
and
jo
and
and
out
mov
and
xchg
cmp
xor
jmp
loop
test
xor
push
jo
or
and
dec
adc
cltd
out
testl
jl
out
ja
jo
clc
push
adc
sub
xor
jo
imul
push
cmc
shll
mov
jo
jne
mov
out
inc
cltd
jo
xchg
mov
outsl
jo
fucomi
pop
push
arpl
inc
mov
les
dec
jae
add
js
leave
mov
fpatan
adc
adc
int3
leave
sbb
pop
fldenv
adc
ljmp
insb
insb
int3
sbb
js
inc
lret
lahf
fwait
arpl
in
stos
lret
jae
dec
xchg
testb
lock
push
cwtl
xchg
mov
jg
enter
lret
clc
fistpll
mov
cmpsb
std
mov
divb
pusha
push
inc
mov
ds
xchg
xor
lcall
xlat
push
and
add
add
clc
push
xor
adc
cmc
adc
inc
inc
push
push
xor
sbb
jecxz
and
add
push
or
mov
mov
adc
das
jns
sti
sbb
ss
sub
push
lcall
mov
dec
mov
mov
sub
mov
cmc
sbb
lcall
mov
mov
arpl
pop
add
mov
out
mov
adc
mov
mov
push
cwtl
add
pushf
push
jb
lods
arpl
sub
leave
fdivrs
add
test
push
ds
loop
mov
and
not
cmpsl
rcr
test
outsl
cmp
mov
and
jmp
shlb
push
cmp
mov
mov
sar
cmp
mov
scas
inc
or
push
outsl
pusha
clc
jmp
inc
jnp
lret
cmpb
insb
dec
lods
adc
out
enter
gs
jp
jo
shrl
push
xchg
fisttpll
insb
dec
addb
js
lock
push
mov
mov
pop
clc
cld
test
inc
push
je
js
rcrl
sahf
ret
mov
or
inc
jo
mov
es
ss
xchg
pushf
test
fwait
pushl
scas
jo
int3
fwait
rcl
data16
jp
hlt
rorl
xchg
pusha
arpl
jo
mov
push
popa
jo
pop
inc
push
mov
inc
movsl
xchg
imulb
sub
jg
lret
xchg
dec
filds
fldt
mov
push
mov
in
and
clc
insb
ja
inc
cmp
sbb
cmpsl
mov
inc
jge
and
push
xchg
xor
adc
les
call
scas
inc
rcrb
push
hlt
lret
xchg
test
pusha
mov
data16
sub
dec
out
js
pop
pop
xor
jo
and
push
ret
xor
cmp
fstpl
cmp
jl
nop
jno
xchg
jge
stos
mov
fsubl
ljmp
sub
rcrl
aas
movsl
aam
stc
jo
sbb
arpl
mov
imul
mov
popf
mov
pop
jmp
adc
and
mov
xor
pop
inc
or
addr16
es
jl
cmpsb
adc
push
xchg
or
or
adc
mov
nop
and
dec
lods
mov
dec
out
into
adc
movsl
push
jo
adcb
outsl
jo
pushf
inc
jp
ss
jo
xor
jmp
xchg
jnp
je
std
adc
inc
mov
sti
into
pop
cmpsl
fwait
inc
nop
sbb
sub
xchg
jae
xchg
mov
sbb
jo
movsb
xchg
dec
pop
and
jo
mov
mov
sbb
int
stos
lock
jo
in
sbb
clc
mov
sub
je
test
shlb
js
mov
cmp
jle
pop
jmp
out
mov
pop
mov
stos
xorl
arpl
orb
sub
pop
out
add
fstps
adc
xchg
and
jno
fnstenv
and
dec
push
cmpsl
fistpll
jb
sbb
sti
arpl
dec
out
inc
jae
test
jmp
cmp
rorb
arpl
jmp
or
jl
sub
push
pushf
cmp
add
cltd
fcmovbe
cmp
xchg
and
jns
shlb
sub
sbbb
inc
nop
dec
ret
xchg
cmp
jl
and
jecxz
daa
sbb
push
mov
addr16
jb
mov
xchg
add
test
inc
cwtd
and
cmp
fldl
pop
ss
sti
imul
pop
int3
or
fists
movsl
cwtl
jmp
ja
cld
fsts
or
mov
dec
xchg
mov
xchg
cmpsl
adc
mov
mov
arpl
mov
sub
sbb
lock
xchg
jns
jne
movsb
adc
pop
inc
scas
cmp
repnz
push
filds
push
sub
mov
lahf
cmp
adc
test
xor
sbb
mov
ficoms
or
jecxz
push
out
dec
orl
in
cmpsl
cld
stc
out
xor
sti
movsl
mov
pushf
aam
arpl
ret
jmp
mov
push
pusha
cmp
jns
push
lcall
mov
imul
data16
mov
out
mov
jnp
jge
mov
jg
inc
sbb
and
sti
jb
dec
je
fsts
imulb
orb
fwait
pop
pushf
jo
push
pop
xchg
es
sarb
mov
out
or
popf
fidivl
lock
xchg
adc
inc
mov
nop
lcall
ljmp
aam
test
mov
pop
repnz
xchg
adc
sbb
cltd
or
out
ficoml
testb
jo
adc
ret
push
cmp
adcb
adc
int
sub
cld
xorl
in
imul
push
sar
outsb
jl,pt
lcall
pop
fdivs
addr16
sahf
test
push
lods
paddusw
adc
in
test
mov
push
fimuls
and
push
into
sbb
jl
ret
pusha
dec
in
xlat
hlt
test
stos
xor
in
mov
pop
aam
insb
repnz
leave
shlb
pop
inc
xor
pop
jo
mov
xchg
loop
sbb
int3
xchg
cmpsb
jnp
daa
xchg
popa
imul
fisubl
xlat
int
jo
push
call
insb
mov
sbb
jmp
add
hlt
inc
add
push
mov
mov
nop
xchg
sbb
pop
test
jl
mov
aad
xlat
pop
outsl
ljmp
mov
push
dec
fbld
dec
ja
cmc
pop
push
push
adc
cmp
add
push
jo
mov
nop
pop
jae
imul
push
fbld
into
pop
mov
stos
dec
jo
inc
fs
jnp
bound
push
xor
inc
push
sub
call
jg
dec
jno
cmp
xchg
xor
jb
and
fsts
jns
jo
into
jnp
call
jle
movsl
cmp
jo
jp
push
inc
add
scas
in
fists
jo
repz
xlat
push
or
add
or
jg
divb
cmp
seta
rorl
and
cli
jns
dec
cmp
out
jo
gs
cwtl
jo
mov
jb
jmp
decl
jo
push
xchg
loop
insl
or
jge
movl
lock
mov
movsb
xor
cmp
sub
jo
shrl
inc
lds
add
hlt
lahf
es
jno
cmpsl
jo
sub
mov
sti
adc
add
lcall
and
fmuls
ds
xchg
scas
nop
das
xchg
cmp
in
dec
mov
jo
push
lods
and
and
ja
jp
sar
jo
xor
mov
lea
mov
fisubs
mov
shl
fs
cmc
rcrl
arpl
outsl
std
in
fstpl
andb
int
in
cmp
addr16
jo
lret
aam
test
lret
sahf
pop
jl
cmp
mov
xor
adc
and
inc
stos
jo
repnz
cmp
adc
mov
data16
mov
in
shlb
cmpb
jo
div
int
add
cmp
push
jmp
inc
cli
jb
cltd
prefetch
outsl
test
xor
fs
shl
test
dec
xchg
jo
ds
dec
push
cmp
xorb
sub
jo
sarb
call
test
push
pop
pusha
mov
mov
add
inc
in
int
std
out
js
inc
lret
test
shlb
cmpsl
cmpsb
outsl
out
dec
test
orb
pop
fiadds
and
jne
adc
das
mov
push
leave
daa
jp
pop
dec
cmp
jo
rorl
xchg
and
cltd
scas
stos
jl
andb
pop
cmp
cmp
mov
push
jg
xchg
enter
inc
mov
or
mov
test
mov
mov
test
mov
jo
dec
xor
jo
add
rcll
mov
movsl
mov
movb
sub
call
ja
int
mov
inc
xchg
mov
das
pop
add
xor
jo
mov
cmp
cs
pop
dec
mov
sahf
pop
adc
arpl
out
jo
movsb
xor
ret
cmp
popf
addb
jo
mov
push
push
sbb
jae
push
stc
pop
jne
mov
jo
test
mov
lahf
pop
xchg
mov
rcrb
lea
jmp
adc
arpl
pop
add
pop
pop
sbb
shlb
or
rolb
sbb
ja
xor
fsts
setg
loope
mov
lock
sbb
sahf
mov
pop
mov
andps
mov
inc
mov
mov
bound
and
sarb
add
push
add
xlat
push
jo
cwtl
negl
cmpsb
mov
jo
sub
fistpl
aad
xchg
cmc
mov
or
mov
cltd
stc
mov
cld
in
out
dec
or
inc
dec
stos
shll
bound
fisubrl
js
pop
test
inc
jae,pt
jo
mov
add
push
dec
into
adc
push
mov
inc
pop
imul
mov
or
jbe
divb
or
jo
das
push
gs
mov
add
js
jmp
jge
mov
push
jp
ret
ror
mov
insb
mov
lahf
mov
lock
jp
js
cmp
imul
pop
sub
cld
cltd
nop
sbb
or
jo
cli
sub
jo
in
sahf
orb
imul
das
mov
jge
xor
jge
jo
les
imul
test
fisubrl
or
lock
fistpll
sub
add
in
insb
adc
push
inc
push
xchg
jno
push
and
iret
or
xor
jge
dec
pop
cs
movsl
gs
push
out
hlt
jnp
pxor
fcompp
pop
je
out
divb
push
lcall
sub
mov
cmpps
cmpsl
test
inc
jo
lods
xchg
movsl
jl
mov
sub
dec
jae
fcoms
inc
mov
mov
roll
popf
mov
insl
mov
aaa
push
mov
pop
lahf
push
mov
mov
aam
enter
std
xchg
in
push
jb
jnp
mov
mov
pusha
loopne
push
pop
dec
ret
js
es
cli
jge
in
xchg
jo
adc
push
sub
dec
cmp
fstl
mov
mov
fucom
jno
mov
jle
popf
mov
pop
js
ja
orl
cmp
inc
clc
sbb
xchg
cs
pushl
cmpsl
adc
xor
pop
cmp
test
cmp
sbb
pusha
ja
out
push
add
insb
stos
push
mul
outsl
mov
or
rcrb
adc
xchg
sub
and
mov
inc
and
push
gs
jo
dec
movb
aam
faddl
jnp
mov
jo
jle
in
insl
call
loopne
mov
sub
add
andb
jns
push
xor
stos
push
push
add
iret
inc
push
loop
sbb
jo
inc
pop
push
dec
xor
jnp
jb
inc
jo
or
sub
jo
xchg
mov
bound
cmp
jo
push
fidivl
jbe
test
sub
mov
mov
mov
xor
loop
jo
lahf
mov
jno
pop
cs
xor
dec
xchg
mov
inc
scas
in
mov
mov
add
or
adc
jne
and
notl
pop
insl
jo
test
inc
mov
fwait
jo
leave
cmovs
aas
stc
or
sbb
mov
nop
cmp
push
leave
push
jbe
pop
ja
pop
xchg
add
cmpsb
out
test
jo
fstpl
add
stos
jmp
pop
call
cwtl
push
adc
subb
pop
adc
push
pop
mov
lahf
dec
aad
jo
xchg
xor
sub
inc
add
sub
nop
lock
daa
push
mov
aaa
sbb
out
stos
sbb
enter
push
aam
stc
dec
jle
and
test
mov
out
arpl
lret
nopl
jae
lret
movsl
sub
jnp
fs
stos
mov
cld
fiadds
sbb
in
fs
push
xchg
jns
repnz
push
push
pop
sub
or
js
dec
xchg
and
sub
cwtl
push
sub
push
and
jecxz
jecxz
mov
fldcw
adc
push
rclb
mov
faddl
outsl
mov
cltd
inc
and
push
mov
jbe
lret
mov
int3
jno
mov
jl
sbbl
push
mov
test
loope
jae
loope
and
out
lock
imul
scas
push
inc
mov
les
add
jbe
or
outsl
sbb
insb
cld
jge
fwait
or
mov
stos
int3
cmp
test
mov
cld
xchg
jns
das
icebp
and
sub
fwait
je
adc
jl
mov
inc
lret
mov
cs
cmc
mov
pop
mov
add
pusha
xchg
mov
es
lods
or
dec
dec
push
dec
daa
xchg
add
outsb
test
iret
insl
mov
push
insb
fldcw
lahf
cmp
int
lock
sbb
rcl
lock
pop
mov
cmp
mov
in
dec
xor
and
aas
fcmove
ds
aaa
dec
add
jg
jmp
cli
lods
sbb
push
mov
adc
jns
mov
enter
aam
iret
sbb
push
and
ds
movsl
out
mov
imul
jo
mov
xor
dec
daa
add
lahf
add
aad
sbb
or
mov
je
lahf
popf
and
aas
pop
xchg
in
or
mov
testl
xor
rcrb
movsb
call
xchg
mov
xor
aas
scas
sub
push
nop
mov
jmp
lock
inc
and
jo
lahf
mov
cli
rcl
or
pop
loop
inc
jg
xchg
cmp
out
mov
jecxz
mov
dec
cli
cmp
xchg
cs
mov
repnz
inc
shr
adc
cwtl
add
jo
mov
into
add
xchg
cmpsb
mov
loopne
sub
rolb
sub
mov
adc
orb
xchg
arpl
jl
clc
fbstp
jne
fisttpll
loope
mov
jg
pushf
or
icebp
or
loope
push
fs
shll
out
lds
fnstcw
mov
pop
jae
cli
jl
cmp
push
movl
fiadds
mov
and
mov
shrb
mov
jle
jb
xor
jp
int
sbb
bound
dec
and
mov
shrl
mov
int3
add
jae
xchg
cltd
mov
adc
sub
ja
outsl
mov
cmpsl
adc
push
into
jnp
jbe
outsb
and
or
or
push
sub
in
fisttps
jge
std
push
and
push
mov
pop
jae
or
fwait
adc
mov
sub
adc
shlb
test
add
aam
cld
xchg
adc
ds
dec
or
dec
outsl
loopne
xlat
rol
in
data16
js
xor
jb
fbld
sub
sbb
and
test
dec
loopne
inc
mov
xlat
cmc
and
arpl
and
push
sub
lahf
dec
mov
xchg
ja
mov
fs
fnstenv
mov
push
push
push
xor
ss
xor
lock
or
push
je
mov
stos
mov
iret
ljmp
or
test
iret
jl
cmp
leave
and
das
xor
or
ret
notb
dec
push
mov
frstor
fmuls
mov
iret
sbb
sub
jo
ror
push
or
dec
shll
pop
enter
into
push
mov
pop
int3
jbe
ret
scas
push
push
mov
fsub
cmpsl
rcr
dec
jmp
pop
pop
movsb
dec
and
cmpsl
xchg
push
xchg
lock
stc
jno
dec
cltd
test
fimull
loope
icebp
add
xor
mov
xor
and
sbb
cwtl
inc
enter
fbld
jg
add
xchg
loop
cwtl
sbb
cwtl
adc
add
test
jae
ljmp
jbe
cmp
aaa
pusha
out
sub
push
outsb
sub
insl
test
adc
pop
cmpsb
cmpsl
nop
lahf
movsb
inc
fisttpll
repnz
clc
jg
test
sub
and
add
add
iret
test
xchg
int
xor
sahf
pop
cltd
jg
jae
in
mov
dec
mov
fisubrs
adc
lret
cs
jle
bound
xorl
pop
sti
add
xor
push
fwait
push
mov
sbb
add
jo
insb
out
movsl
cmp
outsb
stos
jno
aaa
or
push
push
and
popa
lcall
adc
ljmp
mov
or
fdivrl
sub
inc
mov
inc
cmp
add
mov
push
out
rolb
andb
lahf
call
gs
scas
testl
sub
out
push
sub
ret
fwait
mov
rcrb
andb
jno
lock
mov
xor
inc
vmulpd
cmp
icebp
jbe
notb
mov
test
push
cmp
sarb
push
mov
mov
movsl
fisttps
das
mov
and
scas
cmpsb
push
xchg
cmpsb
mov
mov
xchg
adc
nop
lret
arpl
rcr
mov
adc
ds
data16
xchg
add
clc
fdivs
dec
fisttpll
push
popa
xor
mov
push
data16
push
add
scas
adc
push
movsb
mov
push
or
jns
stos
cld
clc
or
inc
inc
shll
icebp
addb
adc
mov
roll
sbb
push
xchg
xor
dec
fwait
mov
clc
sbb
add
icebp
push
mov
loope
fidivs
xor
and
push
push
push
sub
repz
rcll
shr
int3
or
xor
call
dec
mov
hlt
stos
repz
jbe
jle
lea
mov
jecxz
inc
pop
pop
out
lods
xor
xchg
mov
int3
add
and
lods
scas
int
data16
mov
jg
rcl
out
arpl
adc
aas
xor
repnz
fs
or
jno
insl
or
cs
pop
xchg
adc
pushf
lds
and
add
jae
rcrl
lcall
cmp
push
fidivrs
xor
mov
jns
popa
test
adc
mov
rcrb
mov
loop
sbb
mov
pusha
sub
repnz
nop
pop
subb
xlat
or
jne
jl
pushl
xchg
inc
push
js
xchg
xchg
jo
arpl
xor
inc
lret
adcl
cld
loop
xchg
lcall
xchg
rorb
sub
js
jp
jns
mov
xchg
out
divb
or
xchg
pop
jg
jg
mov
cmpsb
sarl
or
insl
dec
ret
das
adc
outsl
fwait
subl
push
push
ret
push
push
gs
orl
and
push
mov
stos
mov
push
daa
test
adcb
rep
pushf
mov
stos
mov
fldt
jg
lock
sbb
ficompl
mov
push
je
sbb
adc
aas
add
ret
je
xlat
mov
mov
je
fidivl
mov
pop
inc
xchg
mov
data16
xor
mov
mov
inc
mov
icebp
mov
adc
insb
push
or
out
sbb
daa
push
out
jge
sbb
lock
out
dec
fstpt
pop
add
lret
clc
ja
dec
hlt
pushf
out
out
clc
jae
test
arpl
push
ret
mov
xorl
mulb
xor
jae
xchg
push
dec
adc
adc
pop
or
aad
and
cs
and
add
and
jp
dec
sbb
sbb
and
rorl
std
js
lock
dec
js
in
lea
mov
pop
lret
jecxz
lods
jmp
jae
daa
mov
int3
push
or
jmp
push
scas
inc
rcrb
aas
adc
repz
ljmp
adc
lock
aad
or
pop
jnp
call
imul
cmp
pop
imul
scas
lret
push
enter
mov
jo
lock
out
cmp
nop
inc
adc
pop
adc
sti
repnz
movsb
push
stos
sbb
and
sub
stos
loop
push
js
pop
rcrl
cmp
cmp
sub
xor
push
les
pushl
in
sbbb
shl
pop
jo
push
adc
or
dec
lret
mov
and
mov
mov
inc
mov
adc
loop
leave
pop
ret
jbe
push
sti
xor
xor
xor
push
push
mov
push
adc
and
lds
mov
aad
test
mov
mov
fnstenv
mov
bound
push
jecxz,pn
movsl
addb
cmp
popf
test
inc
xchg
iret
mov
sbb
imul
jo
mov
sub
sub
in
sub
ret
pop
int3
fs
mov
ret
xchg
push
mov
cmc
je
ja
jmp
adc
outsl
push
andl
add
js
jo
fwait
test
out
jle
cs
subb
cld
mov
sub
or
sar
fwait
jecxz
bound
testb
mov
xchg
aaa
push
dec
sbb
orb
cmp
roll
jo
pop
sub
inc
inc
insb
shlb
sub
or
pusha
push
xor
icebp
dec
ret
or
dec
outsl
jnp
and
push
jo
aad
sbb
dec
cmpsb
stos
jo
sbb
mov
pop
mov
lahf
sbb
enter
cmpsl
jg
mov
cmpb
rolb
and
jo
orb
jo
daa
mov
fucomp
ror
jo
addl
and
lds
pop
mov
xor
jo
sbb
lods
rcl
push
jo
pop
add
and
das
xor
lods
popf
enter
rorb
scas
jo
xchg
mov
imul
inc
in
sub
popa
punpckhwd
jo
inc
fldl
xlat
aad
cmp
outsl
stos
and
mov
aad
ud1
loopne
fdivr
lds
ss
mov
xchg
and
push
dec
xchg
mov
mov
iret
jo
push
mov
sbb
xor
ja
movsl
repz
leave
sar
jo
mov
jo
leave
pop
dec
fadds
push
jns
js
inc
outsl
add
cld
push
sub
inc
ss
jns
les
scas
and
lahf
or
fldcw
lea
mov
cmpb
xor
push
fisubs
dec
not
std
aas
negb
jo
leave
fistps
add
or
push
nop
data16
jnp
jne
add
js
dec
jo
incl
sbb
add
hlt
jo
stos
sahf
int3
mov
shll
jns
loope
jo
in
pop
adc
nop
sub
jl
fsubp
jl
or
jo
enter
std
xchg
xor
int
jbe
data16
test
cmp
mov
jo
mov
rclb
mov
in
insl
jl
jo
stc
lea
jo
ja
push
jle
repnz
jo
enter
add
or
nop
mov
push
add
or
push
stos
loop
in
mov
jmp
jo
mov
jp,pn
adc
jo
sub
cltd
movsl
push
jbe
aam
xor
cli
fistpll
xchg
lods
push
xor
jo
adc
fucomi
sti
xor
loopne
pusha
test
cmpsb
and
jo
iret
jno
mov
not
mov
xchg
jo
stos
movsb
lods
mov
jle
cs
hlt
repnz
jmp
in
sub
test
jecxz
mov
mov
pop
rolb
aaa
dec
mov
mov
fdivrs
sub
inc
lods
lret
je
shlb
xchg
fs
addr16
insb
and
test
test
cmpsb
outsb
and
jo
xchg
out
sbb
jo
or
int3
pop
lret
dec
sahf
gs
test
jno
mov
mov
pop
stos
push
xchg
cmp
adc
jo
fdivrp
lods
outsb
push
repz
xchg
cmp
mov
aas
ss
popa
cwtl
lds
adc
and
int
lds
mov
nop
insl
jle
and
xchg
jne
outsb
cmpsb
jo
rdmsr
cltd
xchg
or
lods
js
mov
xor
das
adc
and
jbe
mov
out
int
pop
or
int
jb
pop
jmp
rorl
scas
pop
jmp
pop
aas
arpl
jecxz
push
mov
int
andl
loope
pop
and
push
insb
push
stc
lretw
and
push
movsb
loope
mov
cmp
push
out
test
gs
mov
shlb
pop
dec
andb
dec
aad
orb
stos
push
mov
mov
jle
mov
or
jp
cmpsb
aas
in
jo
stc
mov
mov
je
or
dec
test
pop
xor
pop
out
dec
imul
adc
mov
stc
cmpsb
or
outsb
adc
mov
mov
inc
adc
jo
imul
dec
sub
ss
cmpsl
push
lea
inc
outsl
loope
dec
repz
lods
sub
sub
cmp
das
addb
bound
mov
in
pop
bnd
xchg
adc
ret
fwait
adcl
icebp
nop
jnp
pop
lcall
push
cli
bound
jecxz
jl
and
dec
divl
insl
or
mov
jo
adc
popa
sti
nop
mov
lret
imul
pop
sbb
xor
sub
xchg
jo
out
push
adc
push
cltd
mov
pop
insl
lret
xor
lock
jo
mov
data16
cmp
mov
jo
push
mov
mov
or
and
mov
cli
sbb
rorl
cmp
add
adc
aaa
popf
ret
push
cld
int3
subl
rcrb
nop
jecxz
jae
adc
shlb
xlat
pop
orl
xchg
jo
fwait
mov
pusha
jo
add
sub
cs
push
mov
push
jo
in
popa
mov
push
jmp
xchg
ss
push
insl
mov
add
xor
xor
jns
pop
mov
jl
push
sub
sub
fwait
arpl
mov
ret
inc
stos
jle
push
hlt
jbe
jp
rcrb
in
mov
cmp
pop
rcll
mov
fldt
cmc
add
addl
sbb
xchg
repz
aam
arpl
loopne
adc
icebp
punpckhwd
pop
ja
jbe
iret
xor
jae
lods
pop
jo
dec
stos
cs
out
divl
cld
rol
fs
out
in
jmp
sbb
pop
sti
imul
test
daa
in
adc
jmp
iret
pushf
sub
lcall
xchg
lea
lds
mov
push
jp
test
xor
jg
sub
insl
jo
and
out
mov
js
add
push
mov
add
ljmp
mov
jo
test
lsl
lds
imul
in
mov
shll
rorb
shrb
xchg
fcmovnu
das
shlb
sub
lret
inc
out
jo
lods
push
movsl
rorl
add
xchg
int
push
jns
push
notb
out
idiv
inc
jo
sbb
inc
pop
aaa
add
pushf
cmovo
fildll
hlt
es
mov
pop
gs
cmp
shlb
outsl
mov
jne
sub
aas
mov
jmp
repz
jo
lret
mov
push
insl
jno
pop
or
dec
push
or
add
pop
push
xor
jl
js
popaw
fisttpll
and
mov
jl
jae
movsl
fidivrl
scas
adc
mov
or
fwait
push
push
jns
stc
enter
pop
mov
popa
shl
pusha
inc
jo
dec
pop
xor
inc
repnz
xchg
imul
je
sub
icebp
ja
xchg
sub
push
xchg
push
out
mov
inc
cmp
mov
adcb
cmp
incb
popa
fdivrs
imul
mov
inc
lret
pop
pop
jbe
fbld
inc
pop
rcrb
out
fs
push
add
cmovge
sub
push
ret
dec
push
arpl
frstor
in
push
adc
and
adc
xchg
call
ja
mov
pushf
cmp
mov
pop
repz
add
xchg
out
lcall
loopne
inc
cmp
xor
add
sbb
rcrb
jno
fisubl
xchg
jmp
call
lea
out
in
out
ljmp
and
jns
push
sub
mov
add
rorb
daa
mov
jo
std
arpl
mov
fidivl
and
hlt
cmpl
es
pusha
jns
sub
popf
insl
adc
lret
test
mov
sub
inc
out
in
in
fldcw
iret
jae
int3
lret
adc
inc
xor
leave
sbb
jmp
ja
jne
ljmp
jae
les
out
fwait
sbb
push
das
add
xorl
in
pushf
inc
pop
ss
outsl
nop
adc
and
incb
jnp
push
mov
xchg
dec
js
cmpsb
fistps
lods
and
insl
cld
sahf
cmp
sub
push
lods
cmpsl
xchg
mov
lret
inc
or
fisubrs
add
sbb
ret
or
inc
sbb
imull
cs
dec
scas
xor
ja
addb
dec
dec
pop
adc
lret
aad
push
arpl
insb
leave
sbb
jno
push
jae
xchg
popf
lods
aad
scas
push
pop
dec
push
imul
pushf
pop
inc
sub
arpl
mov
test
aad
pop
add
loope
xchg
in
cmpsb
subb
xor
divl
mov
daa
out
pusha
arpl
mov
xor
mov
mov
cmp
out
jg
xor
or
adc
cmc
test
fistpl
xchg
sub
imul
pop
push
add
arpl
sub
mov
rolb
loopne
sbb
pop
fwait
imul
inc
jmp
rcl
mov
add
mov
data16
cmp
inc
sub
mov
inc
nop
and
ficoml
stos
sar
or
and
data16
mov
in
aam
jmp
dec
push
loopne
xchg
loope
dec
insl
push
add
cltd
pusha
addr16
xchg
and
fs
push
push
mov
jae
xor
in
imul
pop
call
scas
jns
add
push
sarl
fdivr
fldln2
fcmove
dec
push
dec
lahf
fisttpl
arpl
mov
jg
or
or
mov
push
enter
in
xchg
jp
push
xor
pop
and
scas
out
jg
adc
mov
fimull
push
cmp
inc
xchg
insb
loop
push
scas
push
mov
popf
sbb
call
es
in
outsb
push
clc
dec
or
les
gs
jge
lret
lea
enter
daa
mov
lods
repz
int3
pushf
add
mov
cld
add
xchg
xchg
adc
repz
mov
sbb
pop
push
leave
fbld
aad
mov
adc
insl
jae
movsb
lret
push
pop
and
mov
jmp
mov
xchg
outsl
mov
pop
fucom
dec
pusha
cmp
xor
or
inc
hlt
jo
inc
push
fsubp
fmuls
das
fdivr
sbb
jo
pusha
notb
pop
jns
sar
mov
push
sbbb
cmp
mov
rcrb
fsubs
outsb
leave
mov
or
in
push
xor
adc
imul
cwtl
or
lea
push
add
rcl
mov
xchg
je
fadds
imul
push
add
xor
ss
add
test
mov
mov
rorb
sbb
loop
inc
inc
inc
movsl
or
add
and
clc
inc
cmp
push
mov
sbb
or
xlat
call
lahf
xchg
mov
mov
jmp
jge
gs
jecxz
aad
shll
js
in
xchg
jae
push
movsb
xchg
repnz
mov
or
repnz
in
imul
loop
nop
xchg
add
in
js
jo
jmp
mov
lds
inc
icebp
icebp
add
js
xchg
pop
int3
jl
mov
xor
add
mov
cmp
rcr
rolb
jnp
mov
jns
mov
movsl
add
or
xor
xchg
mov
adc
into
in
push
add
aas
jo
mov
movb
fbstp
cltd
in
daa
jo
mov
ret
jo
or
jg
jo
dec
xchg
jo
test
mov
or
outsb
jo
outsl
or
push
xchg
mov
lds
mov
fstpt
fstl
bound
push
ss
xor
popf
jbe
mov
add
frstor
nop
mov
in
cmc
cmp
roll
mov
mov
cs
stos
push
enter
mov
pop
jecxz
ret
repnz
jo
xor
jo
mov
leave
dec
pop
mov
jo
in
xchg
sbb
and
or
cs
in
adc
loop
xchg
mov
fnstenv
inc
pushf
jo
test
sbb
jo
in
jecxz
dec
cld
xchg
fisubrs
rcrb
jne
dec
arpl
nop
inc
add
add
ret
cld
lcall
out
jo
mov
mov
cmp
jo
mov
xor
dec
sbbb
fcmovnb
add
mov
mov
test
xorl
inc
jnp
pop
test
jmp
nop
xchg
push
jo
dec
push
repnz
dec
aaa
jo
ret
subb
pop
or
fsubs
cli
in
setle
das
mov
out
or
jo
jmp
push
inc
jo
in
and
pop
leave
dec
gs
jo
out
cmp
inc
add
cltd
js
mov
lods
iret
xor
cmpsl
nop
inc
out
jns
pop
push
jno
push
jo
mov
lahf
popf
cld
flds
inc
mov
dec
ss
mov
mov
jo
push
je
aas
pop
mov
inc
xlat
mov
pop
int3
xchg
dec
xor
std
nop
add
sahf
jmp
xchg
jns
mov
mov
inc
enter
icebp
addr16
ja
fs
and
sbb
das
test
orl
int
mov
js
and
aas
push
jl
fdivr
jge
adc
arpl
lret
jnp
jo
jg
js
or
jo
xchg
xor
jb
pop
jo
jl
inc
xor
sbb
imul
adcl
pop
push
xlat
jo
test
add
pusha
or
mov
fsubrl
popf
pop
inc
fisttpll
pushf
push
xchg
jo
dec
imul
cmpb
je
shlb
mov
mov
add
repz
sub
sbb
adc
cwtl
or
loopne
cli
mov
lods
jo
sbb
inc
fs
in
pop
daa
das
xor
mov
cmpsl
inc
add
jo
push
pop
fwait
nop
mov
jno
paddw
pop
popf
inc
lret
je
jmp
mov
mov
add
sbb
fnsave
xor
hlt
ficoml
outsl
mov
or
jmp
int
mov
jo
pop
hlt
scas
movsl
sti
in
jo
push
sub
xchg
cmp
lcall
popa
notl
lods
dec
push
mov
sub
sub
popl
mov
mov
sbb
aaa
fcoml
sub
icebp
lcall
pop
addr16
dec
jp
sbb
or
mov
fimull
and
addr16
xor
or
or
data16
dec
pop
test
es
inc
addb
lahf
pop
in
popa
bound
push
test
test
jge
leave
jae
sub
mov
movd
and
inc
bound
mov
cmp
filds
dec
cltd
adc
daa
adc
inc
popa
fs
or
or
mov
push
pop
std
fadds
jecxz
jo
pop
rorb
jns
add
cmpsl
xor
mov
addr16
push
xchg
jge
adc
loope
test
push
jnp
sti
pop
push
outsl
mov
mov
mov
sbb
popf
std
mov
arpl
outsb
mov
stos
sub
dec
or
in
jl
sub
or
and
insb
fnstenv
in
call
movsl
pop
xor
push
mov
out
pop
sbb
cmpsl
sub
xchg
rorb
call
pusha
pop
es
cmp
bnd
sahf
repz
dec
mov
cmpsb
jns
adc
aad
test
in
notb
xchg
sbb
mov
cmp
jae
movsb
nop
mov
out
and
mov
jo
mov
int3
xor
std
push
hlt
scas
lahf
loope
sub
mov
inc
in
mov
ret
addr16
xchg
lds
pop
mov
mov
movsl
outsl
xchg
lods
fdivs
aad
ds
shl
imul
jne
push
jge
outsb
outsb
dec
int
pop
mov
subb
adc
sub
js
andb
nop
scas
stos
mov
pop
xchg
and
sub
xchg
stos
xchg
push
cwtl
popf
sbb
mov
arpl
push
jmp
mov
cli
outsl
pop
or
ja
jl
pop
outsb
ss
cwtl
subl
in
jp
inc
sbb
dec
pop
push
push
push
mov
das
int3
repz
stos
lea
xchg
cmp
lds
or
add
insl
ret
out
pop
push
fistps
jae
leave
push
xchg
outsl
testl
imul
clc
arpl
test
inc
cmp
jb
out
adc
mov
push
inc
sub
hlt
cmp
dec
mov
cmp
pop
pop
push
out
fisubrl
sahf
or
insb
scas
cmp
jmp
push
xlat
std
std
popf
out
or
add
mov
jle
inc
dec
mov
sub
lcall
lock
push
push
sbb
leave
add
stc
je
xlat
lds
push
xor
jno
or
or
pop
aad
js
lret
jle
lea
stos
outsl
dec
pop
ds
lods
test
pop
push
cld
ds
pop
sub
pushf
out
hlt
jg
std
inc
cli
imul
push
mov
pop
and
call
dec
jae
pop
call
andb
push
and
jg
adc
xor
mov
jmp
mov
or
pop
pusha
je
aas
xorl
pop
ret
adc
push
pusha
xor
jb
arpl
mov
arpl
pop
loopne
pop
jecxz
inc
les
cmp
fnsave
cmp
shlb
shrl
insb
cmp
adc
out
les
out
cmp
or
arpl
incb
push
sub
dec
jmp
or
mov
inc
add
and
lds
sub
sub
iret
sub
arpl
dec
sbb
cmpsb
gs
sbb
jno
push
mov
jns
pop
dec
cmpsl
and
roll
dec
mov
icebp
fadds
mov
repnz
in
pop
mov
mov
push
jmp
dec
sti
icebp
xchg
lock
mov
cltd
lahf
repz
shll
xor
ds
mov
mov
jg
fs
dec
decl
pushf
adc
push
andb
scas
push
sub
mov
insb
mov
das
sbb
push
aam
test
add
mov
add
ja
lods
pop
jecxz
mov
fs
mov
sbb
lods
inc
jle
outsb
fs
push
dec
push
xchg
stos
outsb
mov
cmp
cmp
out
push
insl
cmp
adc
inc
ljmp
mov
xchg
add
push
in
rcrl
xlat
inc
fs
js
in
sti
pop
clc
sub
xlat
jle
ja
jae
xchg
pop
negb
clc
or
sub
sub
or
push
ljmp
test
lods
lahf
inc
enter
mov
dec
xchg
out
sbb
bound
pop
call
pop
js
fbld
lods
cli
mov
clc
out
rolb
pop
push
cmpsb
bound
out
movsb
add
pushf
arpl
cmpsb
popa
pop
push
push
jg
ja
test
leave
iret
xor
imulb
flds
call
lea
ja
push
ja
hlt
js
mov
cmp
jg
mov
add
mov
xor
sub
jae
push
mov
dec
jne
mov
stc
mov
faddl
test
pop
and
in
pop
mov
jge
fidivl
add
mov
fisubl
ret
push
pop
cmpsb
pop
or
test
add
pop
movb
lock
push
pop
repnz
or
fs
lods
sbb
ret
aad
add
clc
jo
xchg
inc
out
lods
pop
hlt
and
sti
insb
sub
andb
dec
add
jl
jo
imul
sub
stos
jo
adc
jl
jo
cmp
inc
xchg
into
sub
xchg
data16
loope
add
mov
mov
xor
loope
in
pop
lahf
insl
rorl
adc
enter
outsl
and
pop
xchg
mov
fisubrl
or
ret
mov
subb
inc
insb
jecxz
idivb
pop
mov
sub
cmc
jns
stos
mov
nop
cmp
sahf
call
popf
das
scas
push
mov
and
xchg
dec
repnz
sub
cmpsb
pop
mov
aam
dec
fs
lods
movsb
fldcw
repz
or
nop
adc
shl
pop
push
jo
mov
dec
leave
loopne
js,pt
cmpsb
into
push
adc
das
inc
push
popa
ljmp
mov
xchg
pop
jo
sub
and
cmp
lock
mov
shll
stos
lods
cmp
nop
mov
lahf
mov
popa
cld
movsl
imul
ss
add
sub
sahf
scas
movsb
jo
aas
mov
jno
or
xchg
andb
lret
clc
jo
jg
stc
inc
jp
repz
dec
ret
data16
and
pop
jo
mov
fwait
aas
jb
test
cmp
imul
subb
adc
xorl
ljmp
or
dec
cmp
popa
add
xchg
jo
aas
mov
jle
dec
hlt
or
cmp
or
shr
cmpsb
jl
dec
and
lea
into
rorl
mov
pshufw
js
sti
cmp
mov
nop
mov
in
shrb
out
addr16
std
jo
jmp
lods
push
sbb
xorl
cwtl
aam
mov
jecxz
jnp
in
outsb
and
in
xor
test
cltd
xchg
test
mov
jo
dec
and
xor
dec
xor
add
jo
bound
idivl
jo
leave
sahf
sbbl
or
dec
psubb
je
jo
loopne
rol
sub
jo
in
sbb
ds
nop
mov
iret
jo
iret
mov
gs
xchg
xchg
push
lret
lret
sbb
pop
hlt
sub
xchg
negb
ss
mov
jge
cs
mov
sub
push
pop
jo
les
int3
jp
push
bound
dec
out
fistpl
jb
ss
jecxz
mov
nop
arpl
jg
in
jge
lahf
dec
lret
inc
out
mov
testb
adc
pop
or
xor
ljmp
jl
mov
jge
out
iret
push
sbb
mov
jae
inc
pushf
mul
jo
leave
into
sbb
or
rol
add
out
inc
cmp
inc
adc
jno
push
rcll
and
bound
leave
cmp
aad
dec
cmpsl
sahf
jnp
jo
mov
in
scas
hlt
jecxz
pop
idivb
add
adc
inc
jo
insl
mov
iret
or
lods
jo
pusha
lds
or
inc
push
mov
popf
lea
sub
jge
lods
lods
push
fucomi
adc
in
sbb
jo
push
mov
mov
xor
incl
fwait
and
sti
and
arpl
xchg
leave
or
jo
dec
repnz
shrb
fbld
sbb
fwait
lcall
pop
push
or
mov
movsl
xor
imul
stc
stos
leave
pop
cld
stos
xchg
inc
jo
test
pop
lods
jo
nop
and
push
mov
leave
push
mov
orb
imul
xchg
addr16
aam
std
xorl
push
pop
mov
ret
das
sti
lea
out
jge
call
shll
or
test
mov
pop
iret
jo
jmp
nop/reserved
inc
adcb
pop
jo
or
fstpt
outsb
bound
lahf
pop
stos
aas
jo
stc
cmp
mov
xor
jne
dec
shr
mov
cmpl
or
mov
jns
sahf
lret
or
dec
jo
ss
jl
fwait
sub
jo
mov
mov
rorl
or
imul
std
jo
mov
mov
jo
decl
imull
dec
pop
xchg
pushf
jo
xor
push
jnp
cmpsl
jmp
je,pt
andl
and
xchg
gs
xor
loope
sbb
push
adc
insl
mov
jno
nop
leave
push
arpl
dec
jp
loopne,pt
push
cmp
pop
dec
dec
jbe
cwtl
or
mov
fsubs
mov
ja
xchg
lock
cmpl
fnstsw
adc
sbb
arpl
int
sub
xchg
mov
xchg
sbb
bsr
mov
pop
or
or
add
or
push
pop
xor
jb
pop
jo
sbb
mov
insb
aam
or
push
dec
sub
jo
sub
xchg
adc
dec
std
xorl
call
push
pop
imul
lods
jno
insb
xlat
rcrl
lds
pop
mov
mov
jo
mov
jnp
jo
jg
aas
dec
jge
shlb
or
pop
mov
aam
insb
jo
xor
inc
xchg
loop
push
mov
cwtl
aaa
jne
aad
add
pop
popa
cs
push
out
fistpll
int3
mov
push
cmpsl
push
in
push
data16
push
jg
inc
xchg
arpl
xor
xor
xsha256
cmpsb
adc
into
xchg
pop
mov
push
iret
mov
mov
adc
imul
sbb
mov
mov
and
push
movsb
xlat
add
int
lret
pop
test
lods
gs
mov
mov
xlat
jo
fnstcw
aas
scas
frstor
cmp
sbb
movsl
out
xor
addr16
xor
mov
inc
pop
or
dec
es
sbb
jmp
ret
mov
pusha
push
mov
inc
sub
cmpsb
js
pop
jl
jo
or
push
add
pop
test
dec
jo
sahf
leave
adc
xor
jo
loope
fcmovnu
sbb
push
pop
mov
idiv
xlat
push
lret
rorl
push
mov
jo
out
xchg
push
mov
cmove
jns
lcall
dec
jl
mov
push
jo
mov
call
das
push
loopne
sbbl
add
jnp
mov
jno
jo
xchg
inc
jo
add
loop
jno
es
adc
sbb
in
sarb
jmp
adc
lret
sbb
nop
cld
inc
pushf
stc
fnstenv
xchg
add
stos
in
insb
test
lock
or
adc
in
mov
mov
enter
repz
ja
popa
test
cmp
push
pop
push
aad
jg
xor
jo
inc
mov
dec
dec
cmp
jo
cli
iret
cmp
jo
lds
push
jle
jo
adc
dec
cs
setnp
and
pop
jo
add
dec
pop
jo
adc
shll
movsb
xchg
movsl
gs
dec
jo
cmc
shl
repz
xchg
test
out
mov
jo
and
inc
mull
push
in
and
jp
jo
aas
sti
cmp
bound
jo
mov
sub
jo
inc
mov
xchg
dec
sbbl
mov
xchg
aaa
mov
stos
mov
js
mov
ja,pn
imul
out
jo
and
int3
sub
fsubrl
xchg
and
jle
jo
fisttps
jle
nop
add
repz
aad
push
rorb
out
mov
sbb
fstl
out
sahf
nop
js
shll
push
push
cmp
xchg
test
aas
jnp
lds
pop
adcb
call
cmpsb
jge
jo
fwait
pushl
add
adc
jo
mov
push
mov
xor
add
push
div
ds
ret
leave
and
inc
jo
mov
lret
mov
das
and
push
fimuls
dec
pusha
mov
lahf
and
js
dec
jno
mov
orb
cltd
aad
lret
jo
mov
adc
outsl
mov
vxorps
repnz
add
das
call
and
int3
xchg
or
sbb
cmp
xor
xchg
cmp
jns
test
dec
sarb
mov
push
mov
imul
aaa
ret
test
dec
out
jg
xchg
adc
and
int3
mov
push
add
outsl
arpl
mov
mov
jno
jb
mov
nop
out
add
lea
movl
add
mov
fisttpl
aam
test
mov
mov
sbb
in
iret
out
inc
cld
seto
mov
mov
stos
rcrb
sbb
pop
push
cli
arpl
fs
roll
das
mov
pop
arpl
cs
xor
out
pop
mov
flds
mov
fwait
sub
inc
jle
mov
rcr
push
xchg
frstor
out
filds
test
xor
push
sub
inc
jmp
pushf
inc
es
sub
ja
pop
pop
xchg
pop
test
xor
add
arpl
xor
mov
test
leave
in
or
shl
xchg
leave
push
dec
js
sub
jp
lock
and
jae
sbb
jl
dec
test
cmp
mov
cld
nop
arpl
jecxz
and
push
inc
scas
test
and
or
shlb
jg
xor
and
mov
scas
fidivl
xchg
mov
jg
xchg
dec
jmp
push
add
repnz
adc
ficoms
in
xlat
cmp
mov
sbbl
cmp
or
cmpsb
icebp
fwait
adc
arpl
flds
mov
sbb
lock
xchg
push
test
mov
aam
adc
push
rcll
insb
mov
or
gs
pop
or
inc
sbb
adc
mov
ret
inc
pop
or
pop
test
enter
mov
ret
cmp
es
je
std
icebp
push
das
jp
outsb
jno,pn
fabs
xor
mov
fs
add
push
stos
inc
call
scas
out
dec
or
xor
testl
imul
mov
pop
cmp
loop
fs
inc
jae
test
sub
imul
sub
pop
pop
outsl
and
push
jle
or
les
mov
iret
fisubl
or
je
xchg
adc
or
and
lahf
cmp
subl
jecxz
mov
inc
push
arpl
nop
call
pop
jns
sbb
pop
or
xorl
sahf
int
inc
lock
mov
rcr
sub
xchg
leave
mov
add
lock
mov
xchg
movsb
scas
and
shl
sahf
test
cld
inc
ret
add
and
lods
cmp
adc
movsb
and
insl
inc
inc
call
push
push
sub
and
cmpsb
shlb
fisttps
mov
je
xchg
testb
and
push
xchg
sub
or
jae
add
and
outsb
push
in
scas
jg
sbb
jbe
mov
es
jnp
pop
lock
mov
mov
pop
inc
pusha
xor
add
sub
frstor
cmc
hlt
fistl
cmp
call
pop
and
std
int3
xor
mov
call
or
push
add
cmc
xorl
cmpb
cwtl
jl
out
jae
pushf
jne
mov
jns
or
movsl
popf
repnz
or
mov
imul
dec
lods
jle
mov
add
sbb
xchg
jp
ret
std
arpl
jecxz
fs
lret
popf
aad
daa
cmp
in
daa
jnp
cmpsb
out
pop
test
pop
cmpsb
jae
or
repz
repnz
scas
mov
mov
sbb
into
ja
lock
pop
mov
xor
sub
jns
inc
in
jp
int
insl
int3
mov
dec
sbb
cmp
add
jno
push
movhps
fisubrs
hlt
mov
lods
ret
clc
mov
outsb
xor
int3
sub
rolb
mov
iret
mov
cli
sub
sbb
out
leave
ljmp
loop
xchg
test
adc
inc
jbe
dec
out
lahf
sbb
addr16
pop
int
xchg
push
pop
test
pop
jb
lahf
rclb
xor
push
enter
sub
cs
cmp
jle
fimull
cwtl
sub
rcl
popa
sub
or
test
bound
mov
mov
daa
jno
repnz
in
xchg
or
outsb
push
jecxz
pop
fs
in
sarl
sub
push
mov
mov
fs
jne
and
mov
xchg
sti
jne
mov
jmp
cmpsl
pop
cmp
pop
push
mov
sub
mov
push
ss
jle
out
dec
movsl
and
aaa
xor
loopne
jp
add
lods
insb
pop
popf
paddusb
jae,pn
outsl
punpckhbw
xor
outsb
sbb
xor
dec
ss
cmpsb
lods
lret
mov
add
push
inc
scas
mov
aas
xlat
jae
jmp
in
iret
lock
insb
rclb
call
ja,pn
out
daa
push
sbb
mov
les
test
lcall
xor
pop
leave
fsubrp
loope
arpl
fdivrs
push
lds
test
inc
jo
out
push
lock
leave
xor
mov
sbb
insb
add
mov
jae
fdivs
jae
jne
rcpps
mov
gs
add
jno
xor
std
in
add
and
push
jg
mov
jbe
fldt
pop
cmpb
ds
scas
mov
outsl
rcpps
mov
cmp
adc
addb
mov
xchg
out
jae
mov
rolb
sub
mov
cmp
xchg
cmpsl
push
data16
inc
jmp
jp
sbb
out
fldcw
aaa
pop
in
lods
pop
imul
dec
pop
imul
sbb
insl
cwtl
lock
psllq
push
mov
inc
dec
mov
push
cld
jnp
sbb
nop
sbb
push
mov
push
xlat
lods
push
sub
rolb
gs
or
mov
mov
loope
push
movq
imul
add
out
push
aam
dec
push
jmp
sti
rcr
add
in
inc
mov
gs
push
data16
rcl
jae
jno
mov
sti
sub
jo
out
shlb
js
out
mov
add
push
sbb
adc
add
cmp
mov
cmp
aad
dec
inc
arpl
in
cmp
dec
dec
mov
inc
inc
inc
and
arpl
sbb
test
xchg
dec
jb
xorb
subb
jmp
jp
fwait
sbb
hlt
lock
xchg
mov
jmp
pop
mov
adc
lea
call
lcall
fiaddl
loope
shrl
and
sbb
inc
push
adc
dec
divl
in
sar
cmp
ja
out
std
out
add
xchg
je
scas
sub
or
xchg
call
cmc
mov
push
xchg
loopne
xor
inc
jno
fdivrl
push
xchg
dec
lods
mov
scas
mov
lcall
ss
in
push
fldt
inc
movb
outsl
xchg
repnz
inc
insb
sbb
lock
adc
pop
sub
rcrl
cmpsb
je
and
lock
pop
daa
enter
mov
int
jmp
imul
dec
negb
idivb
push
mov
pop
and
inc
aam
in
lock
xlat
pop
fstpt
inc
movsl
sbb
xor
fbld
jae
cmpsl
inc
hlt
divl
ja
jns
sub
xchg
into
test
ss
sub
out
push
add
arpl
test
add
pop
mov
dec
f2xm1
cmpsl
fwait
aaa
loopne
aam
mov
lock
cmpsb
jnp
inc
xchg
push
add
lcall
mov
int3
pusha
inc
and
jns
xchg
dec
loop
subb
imul
cwtl
cs
sbb
xor
popa
xchg
icebp
cmpsb
jg
addr16
push
daa
push
push
out
mov
in
call
ficoml
scas
mov
pop
and
es
fs
pop
stos
xchg
aam
fsubrp
andb
jae
adc
add
cmp
or
sbb
add
mov
imul
jae
fs
adc
adc
mov
pop
fidivs
movsl
pushf
mov
cmp
inc
push
lds
insl
movsb
dec
daa
stos
fs
xchg
xchg
push
jo
sub
hlt
mov
add
push
fs
inc
lods
pop
cmc
xor
jo
gs
sub
lret
outsl
mov
xchg
in
jle
enter
cmp
jecxz
and
dec
out
mov
dec
inc
mov
sub
bound
out
add
inc
mov
arpl
xor
jecxz
imul
lret
push
xchg
sub
pop
dec
or
jmp
repz
mov
out
outsb
arpl
fmuls
push
pop
bound
aaa
push
lods
and
adc
mov
sub
in
push
cmc
cwtl
push
or
jle
dec
mov
mov
fcomip
ror
ret
dec
fidivrs
daa
add
repz
mov
inc
in
sbb
repnz
push
mov
stc
in
enter
adc
inc
and
xchg
mov
or
cmp
je
pop
fs
mov
stos
bound
movsb
push
push
mov
dec
jle
cs
iret
jo
cmp
xchg
adc
pop
sbb
fsubr
adc
inc
adc
cmp
std
arpl
and
xchg
femms
cwtl
icebp
cltd
lret
pop
sub
sub
fs
adc
or
insl
xchg
std
cmp
bound
arpl
sbb
mov
pop
out
pop
jne
mov
outsb
fisttpll
push
jg
mov
aaa
mov
sarb
or
mov
hlt
js
or
adcl
int3
in
adc
inc
js
jne
dec
arpl
rolb
mov
mov
cwtl
jmp
pusha
sbb
add
mov
fs
in
mov
popa
ret
shl
adcl
fsubrs
insl
cmpl
out
outsl
das
inc
outsb
adc
sub
int
out
repz
insb
fisttpll
into
arpl
fsubrl
jae
jne
pop
adc
ret
adc
jo
jge
out
sbb
je
push
adc
mov
movsb
jo
xchg
push
scas
or
into
push
add
fistps
mov
cltd
arpl
sub
mov
das
fstpt
cmpsl
loope
mov
je
cs
int
jle
jo
dec
inc
dec
dec
sbb
push
test
mov
rol
sarb
rol
loopne
bound
and
xchg
ja
ljmp
js
mov
lock
add
lret
in
ret
mov
xchg
mov
mov
sbb
push
rcl
int3
cmpsb
pop
and
xchg
pop
inc
adc
adc
pop
add
rorb
clc
jae
das
call
shlb
xor
jb
ljmp
add
dec
dec
fdivl
mov
jno,pt
outsl
sbb
sub
push
unpckhps
jg
es
mov
fs
pop
stos
pop
jl
and
xchg
inc
jp
sub
cwtl
and
mov
sbb
or
pop
lock
mov
jne
rcl
pop
pop
add
mov
cmp
jge
pop
shll
lea
mov
add
pop
movsb
lods
adc
sahf
popa
sub
or
orb
or
negb
pop
es
add
xor
fs
cmp
movsl
inc
mov
cmp
out
xchg
cmp
xchg
push
cld
dec
pushf
lods
push
jne
lret
shlb
mov
dec
insl
xlat
dec
cmp
adc
test
incl
adc
shr
or
mov
dec
dec
push
fsubl
mov
nop
lock
movsl
in
je
lock
lahf
lods
clc
push
outsl
outsl
jae
sbb
or
mov
sahf
cmp
scas
inc
pusha
shlb
mov
sbb
mov
ljmp
inc
xor
mov
int3
clc
es
roll
mov
jmp
xor
inc
cmp
sbb
sarl
dec
xor
jp
int
dec
xchg
cmp
scas
loope
cmc
pop
push
mov
mov
pop
cwtl
jp
addr16
mov
lds
jbe
pop
and
cmpsl
xchg
ljmp
ja
ret
out
push
push
test
push
inc
ljmp
inc
and
bound
mov
fs
bndldx
daa
js
mov
lret
xchg
dec
adc
addr16
xchg
mov
jae
lahf
sbb
jecxz
stos
mov
push
lahf
lahf
cmc
add
loopne
jmp
es
cmp
inc
mov
jns
add
es
pop
gs
test
adc
sbb
pcmpgtw
push
daa
enter
cld
add
int3
fnsave
in
xchg
inc
scas
jb
shrb
sbbl
dec
je
mov
jne
insb
mov
push
sub
filds
in
and
xor
fidivs
jne
data16
js
arpl
incb
adc
imul
push
jae
stc
push
mov
cmp
mov
movsl
cmp
mov
mov
sbb
in
jae
xchg
push
dec
enterw
fidivl
aas
sahf
ds
mov
or
mov
xchg
cmp
push
in
pop
fsubrs
push
movsl
pop
mov
inc
fst
out
push
mov
jle
cltd
mov
jecxz
mov
jno
out
jb
clc
lock
cmp
imul
push
int3
sbb
mov
push
das
jmp
std
jp
push
fmulp
push
xor
clc
hlt
outsl
lds
adc
xor
lcall
ret
inc
pushf
mov
lds
xor
data16
push
popl
pop
push
pushf
cld
push
mov
xor
add
mov
out
xor
in
cmpsb
push
sbb
ljmp
btr
lods
popa
mov
je
xor
inc
outsl
shrl
jb
xchg
aad
pop
mov
cmpsl
call
cmp
repnz
sbb
cwtl
in
pop
cmc
pushf
mov
sub
mov
cmc
and
mov
icebp
mov
xchg
or
jge
pusha
movsl
mov
mov
push
or
lret
adc
cs
mov
xchg
movsb
rcrb
xor
dec
sbb
aad
int3
mov
jl
loope
push
nop
mov
in
push
loopne
out
hlt
gs
sub
arpl
int
js
or
mov
pop
sub
mov
ljmp
mov
adc
arpl
pop
inc
outsb
or
inc
jp
fxtract
ss
or
dec
jnp
shlb
imul
sbb
xchg
adc
in
push
inc
repz
les
mov
sarb
dec
push
test
or
add
inc
pop
lret
lods
rorb
cltd
jg
sbb
lret
ret
pop
lea
lock
mov
vpunpckhwd
inc
cwtl
xor
test
es
adc
jae
push
inc
push
pop
mov
dec
dec
sahf
fmulp
ret
mov
test
xchg
and
jo
pop
int3
jbe
nop
xchg
mov
lock
daa
mov
je
cmp
mov
pop
push
add
loop
cmpsb
pop
daa
arpl
sbb
fisttps
aaa
mov
cwtl
insb
in
arpl
lods
jo
sbb
push
jo
xchg
pusha
dec
push
pop
in
nop
rcrl
xchg
test
js
not
push
pop
push
mov
setp
icebp
popa
shrl
ss
outsb
es
repz
add
test
jb
ret
in
repz
sbb
pop
xor
xor
mov
in
push
push
imul
cltd
insl
sub
out
js
sar
into
ljmp
insl
addb
or
push
jl
push
inc
or
and
jo
pop
inc
test
outsb
aam
dec
bswap
ds
imul
jo
pop
sbb
inc
xlat
jne
dec
sbb
mov
dec
jl
jmp
and
test
add
jmp
loope
pop
xchg
js
shl
jo
push
mov
push
push
xor
add
nop
mov
cmpsl
jmp
jo
sub
int
xlat
add
pop
push
mov
add
jp
mov
repnz
rcll
adc
lock
xchg
out
add
add
scas
sbb
hlt
fmulp
jecxz
dec
cmc
pop
push
icebp
inc
adc
out
divb
adc
mov
and
mov
outsb
popa
push
push
fs
xor
out
test
loop
loope
xchg
fcmove
adc
jo
jbe
popf
idiv
lock
inc
pusha
adc
jno
xor
cltd
imul
sbb
outsl
push
xchg
sahf
jo
jbe
jge
call
cmc
negl
add
hlt
adc
add
xor
pusha
enter
sub
cmpsl
jnp
test
inc
pop
sbb
cmp
cli
sbb
jno
dec
push
xchg
lock
xchg
pop
cs
daa
fucomi
addb
shl
dec
lods
test
dec
arpl
loopne
daa
jge
xchg
lods
fwait
push
inc
push
push
pop
push
sub
mov
jo
or
in
dec
negb
mov
jo
leave
adc
xor
ss
mov
jns
inc
inc
pop
or
sub
dec
sbb
jns
cmc
ret
movq
or
loopne
sbb
inc
xor
iret
jo
enter
aas
sbb
insb
das
lea
push
scas
jle
int
jo
sbb
jecxz
mov
out
movsl
ret
outsl
xchg
nop
cmp
shll
mov
pushf
mov
nop
adc
mov
mov
repnz
inc
xchg
scas
leave
push
inc
cs
sub
sub
cmp
jbe
add
iretw
or
mov
scas
push
stos
jo
push
popf
mov
jo
and
sbb
xchg
xchg
and
inc
imul
hlt
xlat
mov
mov
xor
jne
idiv
cmp
jae
xor
jo
insl
cmc
mulb
and
icebp
dec
jo
mov
nop
mov
push
repnz
jecxz
fistps
test
or
aam
ljmp
dec
jo
mov
pop
pop
addr16
pop
gs
mov
jo
or
mov
cmpsb
test
jecxz
jo
in
shrb
std
into
lods
arpl
push
imul
aad
cmp
push
inc
clc
jo
adc
lcall
or
push
mov
lock
jecxz
outsb
rcll
mov
pop
cmpsl
xor
cwtl
dec
xchg
sbb
mov
mov
jo
mov
adc
pushf
mov
mov
outsl
jno
and
scas
xor
adc
xchg
loop
inc
fadds
xchg
ficoml
jp
xchg
add
mov
mov
dec
out
pop
js
push
lock
dec
pop
mov
mov
push
sub
daa
cmp
out
fdivs
adc
test
dec
inc
jo
inc
push
mov
jo
xchg
ret
fwait
sarw
add
lcall
mov
and
cmp
mov
push
ja
mov
hlt
sbb
mov
inc
push
addr16
and
jmp
inc
mov
pusha
into
test
fsubrs
pop
pop
les
adc
sti
sbb
aad
mov
pop
jo
dec
insl
scas
lods
jmp
nop
add
sbb
mov
je
repz
sbb
das
cltd
xor
imul
add
inc
jb
lock
scas
movsl
outsl
mov
adc
mov
push
je
adcl
lods
sbb
aam
mov
call
xchg
sbbb
fs
pushf
lods
repz
dec
adc
xchg
sbb
loopne
xor
sbb
pop
push
push
shlb
sbb
test
arpl
pop
lods
ja
or
mov
xchg
mov
sti
xchg
push
fcomp
repnz
sub
out
push
scas
cmp
test
das
dec
lock
jl
pop
mov
ds
addb
loope
sub
and
inc
mov
aas
ljmp
test
push
or
jp
bound
shrl
faddl
or
popf
mov
adc
les
sbb
ret
dec
lahf
test
cli
cmpsb
xchg
push
orb
ja
fldcw
popl
fstpt
repz
pop
xchg
xor
inc
lds
lods
push
inc
sbb
outsl
mov
sti
xchg
sub
add
cmpsb
add
or
dec
movsl
repnz
inc
mov
cmp
test
add
jo
ret
adc
movsb
add
add
adc
imul
repnz
fbld
cmp
or
jle
push
mov
mov
jae
hlt
insl
add
lods
aas
lret
push
add
jo
iret
and
hlt
das
xchg
jae
addr16
xchg
aam
and
jl
fnstsw
jo
pop
adc
push
and
mov
sbb
pop
sbb
mov
mov
jne
aas
into
sti
imul
add
cs
data16
les
jle
pusha
test
mov
fs
lods
sbb
arpl
or
in
fs
ljmp
pop
pop
lods
nop
and
jo
ja
xor
int3
sbb
clc
inc
stc
jmp
cli
in
xchg
and
outsb
cmc
test
dec
shr
inc
mov
adc
sbb
leave
mov
cmp
xchg
dec
inc
jo
sub
mov
mov
bound
or
xor
orb
pop
jo
fldt
push
in
shl
jns
mov
aaa
jbe
push
scas
sbb
movsb
in
pop
push
out
jno
jae
jo
shll
repz
testb
mov
ljmp
lods
cmp
aas
pop
loop
add
popf
scas
xor
jnp
push
std
jo
leave
in
push
sbb
push
jo
and
mov
gs
jne
cmp
shrd
pop
dec
jo
mov
mov
mov
sbb
fisubrs
mov
jo
test
push
sbb
loopne
cltd
adc
jo
cmp
pop
lock
fldcw
cmc
jne
fmulp
xor
ds
xchg
mov
loope
xor
shrb
dec
jne
leave
adc
imul
jno
dec
cmp
or
stc
lds
in
scas
jmp
cmpsb
xchg
jo
flds
int
jo
cmp
cmp
mov
and
test
cmp
popa
popf
push
clc
dec
jae
mov
inc
loopne
outsb
jl
jo
xchg
sti
idivb
pushf
pop
mov
adc
push
jo
aas
add
in
adc
cmp
pop
xchg
lods
test
xchg
pop
inc
out
xor
or
shll
decl
xchg
test
dec
xchg
jo
cmp
ja
pandn
xchg
cmp
popa
jo
es
add
ljmp
jo
int3
mov
cmp
fs
inc
stos
or
pop
xor
jo
xchg
lcall
dec
push
jnp
mov
cmp
mov
stos
xchg
call
push
clc
dec
dec
lahf
mov
daa
mov
jo
out
sub
or
test
jg
dec
xor
jo
inc
out
fucom
inc
push
pop
add
lock
sbb
in
jo
lea
sti
mov
jecxz
int
loope
push
das
adc
out
or
jo
dec
aas
xor
movsb
std
jnp
adc
ljmp
sbb
push
sbb
or
jne
jb
cmp
sahf
mov
dec
call
xchg
fwait
sbb
jo
push
cltd
adc
mov
sbb
inc
push
jbe
mov
push
jo
lret
pop
pop
xor
fmul
nop
cmc
cmp
cmp
mov
jp
mov
add
adc
or
lret
es
fwait
inc
mov
sbb
add
jge
lret
rolb
push
loop
xchg
imul
outsb
fidivs
dec
sarl
mov
and
test
mov
add
jb
mov
push
lcall
arpl
sbb
push
sub
repnz
loope
pop
test
in
mov
ret
cmc
arpl
jmp
add
cmp
lock
mov
xchg
jo
pop
std
mov
cmpl
out
jg
aam
cmp
jg
out
push
xchg
fidivrl
push
arpl
mov
mov
sub
inc
dec
pop
pusha
inc
dec
jo
arpl
rorl
and
or
cli
es
and
lods
and
arpl
sbb
push
mov
mov
sbb
out
imul
cmp
nop
cli
pushf
mov
scas
sub
pusha
push
push
xchg
mov
or
bound
popf
aad
into
jo
jnp
stos
and
xchg
mov
sbb
insl
sub
ljmp
add
cltd
mulb
mov
pop
inc
out
jbe
outsl
hlt
js
or
fisubrl
int3
loope
test
push
js
andl
xchg
pop
jo
jno
shrb
xor
push
ds
push
dec
out
das
xchg
pop
cmp
mov
or
fwait
std
das
je
aam
cs
mov
push
scas
mov
inc
aad
sarb
mov
mov
and
jb
nop
outsb
and
test
sub
and
mov
test
test
or
jo
mov
jo,pn
add
xor
insl
push
dec
sub
sbb
fsubp
leave
jo
js
add
pop
push
fs
jo
xchg
add
repnz
out
jbe
push
add
xor
xchg
pop
mov
lds
pop
inc
pop
aam
js
xchg
or
jbe
int3
xchg
xchg
hlt
mov
dec
inc
stos
pop
mov
push
push
je
aaa
inc
popf
xor
cmp
jge
out
mov
push
shll
movsl
out
jo
cmp
pop
jo
gs
add
aam
or
jo
shl
xchg
andl
pop
leave
test
rorl
xor
outsb
or
sbb
jo
out
aaa
es
cmp
mov
repnz
enter
or
les
js
in
mov
xor
mov
test
jo
or
shrb
aam
in
xchg
xlat
jo
repnz
pop
lods
adc
scas
lds
cli
xor
fildl
adc
lcall
fistps
jl
les
push
mov
mov
push
test
cmpsl
fdivl
jle
in
push
lret
xchg
add
inc
inc
jo
stos
push
and
fildll
xor
push
lahf
sub
lea
xor
lret
and
xchg
dec
mov
cltd
xorb
mov
add
jno
cmp
mov
repz
std
jo
mov
mov
sbb
aaa
ja
xor
test
jo
incl
xor
push
mov
fs
inc
rcrb
repnz
sbb
hlt
nop
lret
push
les
cmp
jae
jo
push
push
push
jns
popf
fsts
adc
jmp
mov
inc
inc
icebp
jo
adc
mov
jo
jne
mov
jo
dec
dec
xchg
lods
mov
adc
int
push
push
pop
add
mov
js
cmc
repz
or
in
push
negb
adc
sbb
dec
pop
outsb
hlt
int
jo
stc
outsl
jae
out
cmpsb
jo
mov
ficomps
or
out
orb
stos
adc
inc
mov
out
sub
mov
lods
sbb
pop
jl
insl
cltd
jo
test
xchg
scas
imul
jo
sub
push
xor
add
movsb
add
cmp
rcrl
pop
arpl
and
push
sub
aam
or
nop
test
sahf
icebp
lret
jo
cmpsl
cmc
outsb
jg
daa
movsl
xor
sub
push
push
push
xor
pop
lret
icebp
scas
setnp
test
push
dec
add
sub
in
sub
lcall
adc
add
xchg
fldcw
jo
rol
cs
adcb
ret
pop
call
jle
lods
pop
mov
cmp
imul
pop
nop
pop
jno
push
pop
mov
or
mov
movsl
je
cmc
or
jo
test
pop
mov
loop
jo
rclb
jp
frstor
out
jo
lret
into
pop
and
cmp
pop
pop
jnp
int3
xlat
enter
outsl
imul
mov
int
stos
jle
in
scas
ret
cmpb
sub
push
arpl
mov
fistps
es
fs
pop
imul
fildl
push
ja
xchg
jge
in
cltd
mov
adcb
std
jns
and
jb
mov
mov
repnz
jo
call
cmc
lret
mov
jo
cli
test
cmpsl
xor
cmpsb
mov
xor
mov
stos
jns
push
jo
ret
sbb
rolb
inc
add
push
loope
movsl
add
scas
pop
xchg
adc
or
xchg
ret
sub
inc
sarb
push
add
loop
fs
lds
shlb
cmc
js
jo
push
dec
mov
push
mov
mov
int
icebp
cmp
xor
mov
mov
add
rcll
jbe
sbb
in
repnz
cld
lods
int
jo
cmpsb
add
stos
lock
popa
jbe
pop
dec
orb
lcall
lret
out
or
mov
lods
rorb
pop
jo
xchg
fldcw
in
das
jo
dec
lcall
mov
jmp
inc
dec
xor
ds
add
mov
and
data16
xor
xchg
pusha
insb
test
mov
rolb
xchg
sti
mov
fnstenv
in
pop
jo
out
out
dec
add
orl
sub
insb
add
mov
xchg
int3
sbb
jo
mov
jne
xchg
addr16
mov
jp
insl
adc
mov
jmp
int
mov
fwait
jns
push
cmp
mov
je
sub
mov
insl
out
jo
lret
test
add
cmp
xchg
cmp
push
dec
test
in
subb
and
mov
mov
popf
mov
fsts
or
int3
jo
cltd
mov
nop
inc
jge
hlt
popl
lcall
push
ljmp
inc
cmp
jo
loopne
jae
int
dec
mov
test
subb
push
cwtl
mov
leave
out
orb
dec
mov
loope
dec
adc
jg
jl
test
shrb
sbb
out
pop
sahf
out
sub
jo
sbb
adc
mov
js
xchg
aaa
dec
push
adc
dec
dec
in
xchg
adc
and
js
xor
je
inc
or
shll
jo
roll
das
xor
or
pop
add
imul
xchg
iret
adc
jo
call
lret
aaa
mov
cmp
and
or
pop
dec
sbb
outsl
adc
pushf
negl
shlb
enter
in
add
mov
and
jge
les
and
xchg
add
jo
rol
lds
xor
jo
pop
cmp
adc
xor
mov
js
add
outsb
push
fnstcw
insb
mov
cmp
ret
xor
mov
jo
dec
adc
xor
test
dec
xor
sub
out
divl
mov
jo
sahf
jp
pusha
fistpll
add
adcb
xchg
dec
test
xor
mulb
aaa
and
loope
ret
mov
int3
test
pop
or
push
in
shll
lock
dec
dec
and
decl
std
imul
sub
mov
dec
and
stos
add
fnsave
mov
adc
xchg
push
lahf
test
imul
adc
jae
push
in
data16
addb
push
pop
divb
inc
inc
add
add
jl
bswap
shlb
dec
out
sub
jo
int
popa
jb
cmp
xchg
or
mov
push
in
int
pushf
xchg
je
mov
dec
subb
mov
jo
pop
and
imul
iret
jbe
xor
jle
xchg
jo
flds
cmc
std
lds
push
pop
pop
add
icebp
add
leave
das
jo
xchg
sbb
xchg
sbb
mov
enter
mov
lret
lock
mov
fsub
inc
push
lret
ljmp
in
imul
std
inc
sbb
in
out
mov
repnz
ljmp
sbb
int3
pusha
sub
sbbb
lea
jbe
ret
bound
or
push
push
dec
aad
xor
ja
hlt
push
mov
fwait
sarb
cli
inc
mov
imul
mov
les
outsb
xchg
jo
test
push
jle
lret
jno
scas
repnz
arpl
mov
popf
jle
in
loopne
push
cmpb
adc
and
mov
and
mov
mov
jecxz
mov
fsts
cmp
pop
cmpsb
pop
ret
or
mov
mov
mov
fdivrl
dec
adc
call
es
lcall
das
cmp
jmp
push
aaa
xchg
gs
or
pop
loop
pop
or
jmp
cmp
jae
movsl
filds
adc
cmc
fcomps
inc
imull
and
shll
and
adcb
xchg
sbb
and
mov
sbb
and
mov
dec
sub
jbe
cmp
push
add
imul
and
dec
dec
fldcw
and
mov
mov
in
movsw
test
jnp
dec
in
aaa
lock
out
mov
inc
add
jo
pushf
or
mov
lods
push
mov
jmp
mull
fnsave
cli
push
add
pop
rcl
xlat
adc
imul
mov
inc
divl
int3
lcall
icebp
das
xorl
stos
jns
cmc
ds
jb
js
test
xchg
fdivs
in
mov
push
jecxz
push
shrl
adc
pop
xchg
mov
dec
ja
in
cmp
fstp
mov
jle
loopne
jge
xor
pop
mov
arpl
or
fisttpll
mov
fidivs
fsubrl
lock
fwait
call
mov
enter
mov
push
cltd
testb
rcr
inc
es
push
inc
andb
sbbb
xor
leave
dec
jae
pushf
push
out
fcomps
call
add
and
mov
aad
mov
hlt
sub
imul
and
pop
xor
push
mov
aaa
jae
mov
jmp
xchg
pop
test
and
pop
jae
xor
aam
lds
mov
fistpll
out
jmp
sub
adc
icebp
imul
jnp
subl
outsb
jg
push
sub
cmp
flds
repz
mov
and
lcall
arpl
aam
je
mov
add
cmpsl
mov
shrl
dec
mov
repz
lods
sub
leave
push
arpl
les
lock
into
sbb
add
iret
scas
jns
lahf
mov
ficompl
mov
jae
rolb
mov
mov
fmuls
push
sub
inc
add
add
in
aad
or
stos
push
and
data16
mov
adc
pop
xor
jp
mov
arpl
add
rclb
ja
sub
fsubp
sub
jns
js
out
data16
mov
push
xlat
lods
xchg
sbb
cmpsb
jle
inc
test
loopne
repnz
pop
fnstsw
pop
or
and
lret
add
mov
aad
adc
lock
idivb
out
pop
mov
or
push
out
icebp
push
inc
test
sbb
jo
adc
push
or
jge
bound
sbb
push
cmpsb
pop
bound
or
inc
sar
mov
mov
sub
or
out
decb
jmp
js
movsl
ds
shlb
js
int3
fcomi
inc
cmpsb
in
imul
ss
jae
cmc
ss
add
mov
das
jns
jbe
div
cld
sbb
cwtl
sbb
adc
push
jecxz
and
xor
scas
sub
test
jp
outsl
cmp
scas
push
fwait
cmpsb
cmpl
mov
jbe
lods
imul
shlb
sbb
mov
and
or
mov
pop
sub
pop
leave
shl
ljmp
mov
aaa
andl
add
negl
imul
pop
mov
cmp
scas
orb
dec
inc
movsb
adc
rclb
add
or
mov
rol
mov
mov
push
push
adc
jge
sbb
nop
push
cmp
fcomip
sarl
jmp
sbb
or
pop
pushf
pop
jo
pop
mov
lds
insb
das
fildl
jns
int3
fldenv
push
fdivl
es
xchg
sbb
lahf
std
sbb
gs
arpl
jae
jno
xchg
aad
call
jns
daa
pusha
add
fmuls
aas
mov
out
ucomiss
gs
sub
inc
jge
ficoml
mov
xchg
pop
stc
in
jae
imul
js
shlb
rcr
ljmp
lret
test
outsl
loop
push
xchg
ret
push
orb
ja
cmpsb
int
and
push
ds
dec
int3
dec
and
push
xchg
ljmp
xor
outsb
mov
movsl
jb
and
cmp
jo
cmp
sti
xorb
jb
imul
int
mov
push
jo
mov
mov
pop
nop
mov
push
in
out
jnp
or
sahf
sbb
jo
pop
inc
and
jg
jl
js
mov
mov
push
scas
jo
cmp
out
push
ret
cs
mov
xorb
mov
sbb
jns
or
jmp
prefetch
lcall
sbb
push
mov
jo
mov
shll
jo
imul
fwait
pusha
jo
or
addr16
sub
jo
sbb
and
outsb
int
mov
jo
or
lret
dec
jo
pop
das
out
sub
cld
or
pushf
push
mov
je
addr16
loopne
fidivl
adc
inc
jb
or
scas
or
mov
roll
push
ja
inc
loope
inc
mov
jl
cmp
xchg
lcall
pop
loop
out
sbb
and
sti
sbb
mov
mov
push
jo
push
out
icebp
fldcw
in
mov
pop
push
pusha
orb
pop
fimull
bound
add
push
clc
sub
jns
addb
pop
cmp
cmc
sub
push
pop
psllq
dec
ja
sub
leave
les
imull
test
sbb
add
aam
xor
inc
push
cmp
push
adc
ljmp
psrlw
sbb
call
out
jo
jg
jp
cmp
ffree
xlat
shll
bswap
dec
adc
sahf
push
jo
xor
sub
pop
sub
pop
sbb
dec
mov
sub
mov
cmpsb
enter
sbb
pop
push
jle
das
adc
test
adc
inc
add
add
pop
scas
sbb
shll
mov
add
cmp
pop
data16
daa
leave
jne
addr16
in
sbbb
lcall
or
insb
andb
mov
xchg
js
icebp
lods
testb
push
sub
jae
xchg
xorb
mov
xor
mov
push
daa
mov
sbb
sbb
call
aam
xchg
jae
leave
mov
loope
jo
int
je
push
xlat
ret
xor
fwait
lods
and
sbb
roll
adcl
add
xor
stc
adc
jae
sbb
push
jo
pop
dec
inc
jp
sub
imul
lods
fnsave
lcall
jo
xchg
mov
cmpsb
jo
xchg
gs
stc
les
inc
cs
cmpsl
mov
sbb
mov
andb
mov
stc
lds
out
mov
cli
push
fisubrs
or
insb
push
dec
dec
mov
push
pop
repnz
or
in
fs
jo
aaa
insb
shrl
addr16
aas
test
cli
in
mov
in
inc
push
mov
subb
mov
or
jmp
lods
jo
pop
rclb
mov
test
mov
cli
sbb
xchg
pop
outsl
fwait
sbb
andps
bound
les
dec
fadd
aad
js
std
divb
int
mov
sub
adcb
into
or
fiaddl
pop
out
cmc
lock
jl
pop
jo
les
movsl
jmp
fnstsw
insb
fsubrl
jo
sub
sbb
nop
cld
push
mov
je
bound
fildl
mov
push
mov
stos
pop
jae
jmp
dec
mov
sub
repnz
iret
cs
push
mov
inc
adc
cmp
xor
sub
add
mov
insl
dec
dec
or
divl
insl
sub
mov
jle
push
xor
jne
fidivl
adc
ljmp
lret
jo
fildll
testb
jbe
mov
arpl
popf
lahf
sbb
jb
jo
clc
das
mov
movsb
pop
fbstp
xor
aad
popa
ret
cmp
sub
push
xor
imul
or
std
jo
or
cmpsl
xchg
push
sbb
outsb
or
ret
rorb
in
jl
adc
jo
es
out
shll
repz
pop
mov
imulb
sbb
lea
adc
sub
push
or
jp
or
jo
ljmp
pushf
stos
lcall
push
dec
push
xchg
push
add
pop
insl
xlat
jp
xor
aam
xchg
cmp
mov
xadd
fildl
pop
shrl
jne
mov
shr
xlat
mov
rcll
cmc
jle
in
bound
jo
dec
add
sbb
push
inc
leave
fs
pop
inc
test
push
or
cwtl
ptwritel
dec
arpl
adc
jbe
jl
cmc
cmp
cmp
setg
mov
mov
cmpsl
cvtps2pd
xchg
dec
sti
testl
pop
or
rclb
movsb
cmp
repnz
adc
out
test
mov
lret
frstor
mov
jp
mov
jae
in
lfs
xor
js
test
loope
bnd
or
sub
mov
insl
jo
dec
jno
jnp
jae
jo
aaa
outsl
repnz
ret
scas
sub
call
add
data16
mov
lods
push
cwtl
dec
lcall
inc
jo
mov
xor
push
imul
mov
sbb
es
inc
dec
sbb
in
push
popf
add
and
cmp
divl
xchg
jo
inc
adc
jp
mov
fmuls
iret
jo
jecxz
xor
aaa
mov
cmp
jl
jg
jo
jbe
loope
hlt
jb
sub
push
sbb
js
push
mov
jo
enter
cld
leave
sti
mov
jbe
mov
and
inc
jo
outsl
push
popa
sub
test
jo
add
sub
xchg
mov
xor
jg
add
add
mov
mov
mov
push
xor
push
and
test
out
push
sbb
or
cmpsl
push
shrl
jo
sub
fistps
and
mov
or
pop
sbb
mov
mov
aam
stos
pop
add
pop
je
test
xor
je
push
pop
jae
fcmove
ljmp
push
push
lret
cwtl
mull
jnp
stc
mov
and
icebp
sub
aas
js
adc
adc
lret
xor
jbe
in
jae
out
jo
orb
pop
aam
and
sub
loopne
repz
lahf
jo
fstps
pop
jo
mov
imul
mov
repz
filds
cltd
int3
mov
cmpl
scas
inc
mov
bnd
jb
call
nop
fsubp
sbb
repz
mov
pop
lcall
jo
lods
jb
jnp
adc
imul
loop
into
imulb
push
xchg
out
insl
adc
adc
jo
cmpsb
das
inc
outsb
inc
fwait
jo
ret
int3
outsl
shlb
jo
pusha
adc
ds
pop
push
lods
aaa
adc
mov
ja
sub
pop
movsl
lret
add
and
push
shlb
pop
clc
bnd
in
mov
jo
mov
loopne
inc
int
insl
mov
dec
andnps
imul
add
push
pop
adc
mov
test
jb
mov
mov
dec
stc
cmp
cmp
out
je
pop
push
xorl
ja
fucom
inc
mov
nop
pop
mov
cld
add
pop
test
out
jecxz
into
or
pop
daa
mov
jo
adc
mov
and
sbbl
cmpsl
cmp
push
clc
fldenv
sbb
repz
jo
rolb
jo,pt
mov
aam
jo
repnz
repz
sbb
dec
fists
adc
sub
lods
jo
popf
jmp
push
xor
inc
insb
push
jno
frstor
scas
inc
adc
jge
xchg
vmread
jmp
sbb
rclb
sarl
mov
pause
mov
pop
jp
push
cmp
in
sbbb
xor
mov
js
in
rcr
les
inc
sarb
mov
push
stc
adc
insl
jae
loopne
inc
dec
or
push
sbb
stc
push
fidivs
fistpl
out
mov
jo
mov
sub
adc
lcall
mov
pop
jo
push
mov
push
not
int3
jo
mov
mov
push
movsb
pop
psubsb
mov
xchg
xor
sbb
mov
jo
mov
lods
nop
mov
sub
push
jne
jo
lahf
jno
sbb
mov
xor
cmpl
outsl
jne
repz
test
out
dec
mov
testb
dec
dec
dec
int3
cmpps
in
or
xchg
add
jo
es
stos
ja
cmp
jecxz
cmp
jo
outsb
pop
xor
loope
jo
adc
stos
add
push
hlt
das
mov
addr16
push
xor
ljmp
cmp
icebp
sub
sarl
cmpl
ss
dec
push
sbb
mov
out
subl
xorb
call
jo
pop
add
push
adc
lret
mov
rclb
loop
cmp
jg
das
frstor
add
ja
mov
xor
cmp
pop
mul
add
mov
xlat
mov
sub
xchg
andb
dec
fdivrp
call
xor
mov
sub
xchg
pusha
push
jb
rcl
push
dec
inc
jecxz
cmp
fsubl
hlt
mov
or
push
in
xor
inc
int
sub
cld
scas
cmp
mov
hlt
and
test
sbb
push
jo
jns
cmp
shlb
adc
adc
popa
mov
jo
int
cld
pop
push
adc
pop
push
dec
mov
cmp
inc
dec
pop
clc
push
jecxz
jne
in
imul
push
dec
repz
sbb
mov
mov
ret
testb
test
sub
imul
mov
push
push
sub
pushf
jge
and
mov
pop
stos
rcrb
xor
shlb
fimull
aad
mov
and
ret
sbb
jge
push
push
jl
xor
jmp
mov
les
jnp
mulb
sbb
jbe
mov
popa
loopne
add
jle
int
jo
xchg
or
mov
cmpsb
sbb
ds
cmp
aad
cli
xlat
cwtl
jo
sub
inc
xor
aas
pop
loope
inc
jbe
or
mov
sub
iret
mov
push
add
mov
xchg
nop/reserved
push
ljmp
jo
and
mov
mov
sub
call
push
loop
adc
sti
insb
mov
mov
push
outsb
das
fnstsw
in
jo
inc
mov
sti
mov
inc
lret
call
jo
popf
mov
pop
out
jnp
scas
sahf
xchg
jo
xchg
outsl
mov
cmp
xchg
jp
push
jo
cmp
pusha
mov
adc
out
in
fs
jae
adc
push
lcall
inc
iret
jo
pop
jge
mov
jo
lcall
sub
aam
jo
jno
scas
stos
out
push
push
push
inc
and
clc
mov
xchg
test
xchg
hlt
push
int3
movsb
mov
jne
mov
and
jo
fsts
jne
cld
jns
xchg
dec
insb
imul
pop
imul
loopne
xor
xor
test
mov
nop
xchg
fsubp
rcrl
jge
mov
icebp
sbb
mov
push
test
sbb
push
jo
jl
loopne
cmp
sub
inc
jo
dec
mov
mov
test
jmp
pop
cmpsl
push
leave
icebp
jne
adc
lods
rolb
dec
les
test
and
dec
fimuls
test
pop
and
adc
and
mov
sub
fucomip
jo
aad
fidivs
andb
stc
mov
gs
test
loope
insl
loopne
push
adc
imul
andl
pop
inc
fwait
jo
movsb
pusha
popa
push
mov
shlb
clc
jo
pop
push
jnp
js
inc
jo
jl
jmp
xorb
mov
loopne
lds
sub
xorb
mov
dec
pop
xlat
jne
ljmp
mov
xchg
sub
push
xor
mov
xor
xchg
dec
bound
adc
addr16
cwtl
fcoms
sbb
lea
cmp
je
insl
test
jo
or
cwtl
push
mov
xor
mov
jb
dec
inc
push
jo
out
xor
jo
inc
dec
aas
xor
mov
lods
shll
ljmp
jbe
arpl
int3
add
data16
mov
rorl
push
push
lret
mov
sarb
insb
jne
or
mov
cld
mov
data16
jae
mov
in
clc
imul
daa
jns
scas
je
add
jo
mov
popf
sbb
or
mov
push
xchg
lock
je
cs
in
cld
popa
xchg
add
pop
push
sbb
mov
jp
jo
lods
or
or
shrb
sarl
jmp
scas
dec
ret
ror
or
pop
add
or
punpcklbw
jl
movd
cmc
pushf
sbb
pop
push
out
jae
or
jle
cltd
push
nop
jle
sahf
test
scas
orl
jo
es
mov
loop
divl
xlat
mov
fcoml
jo
or
mov
mov
stc
jo
imul
sqrtps
mov
aad
sahf
mov
insb
jno
add
loopne
fdivrs
jo
mov
cmp
jo
jno
xchg
jmp
stc
xor
add
enter
mov
dec
ljmp
jo
and
adc
xchg
icebp
lods
ret
push
scas
mov
jo
jne
sbb
jo
into
mov
mov
sub
cs
and
add
mov
pop
inc
sub
sbb
mov
imul
and
arpl
and
cli
fnstenv
xchg
xchg
mov
mov
jecxz
push
test
mov
ja
and
sbb
inc
pop
rorl
daa
push
pushf
push
ja
addr16
fildl
lret
add
sbb
int3
xor
rolb
push
or
inc
int3
push
cmp
jns
and
es
out
imul
jge
push
push
adc
add
mov
rcl
insb
add
ds
adc
mov
mov
insl
mov
xor
jno
cmp
inc
jae
or
push
std
mov
ljmp
push
jle
xor
lds
lcall
mov
sbb
inc
jae
test
push
sar
rcll
call
sbb
dec
mov
jecxz
movsl
popa
push
and
hlt
sbb
jge
mov
push
out
gs
adc
push
imul
push
adcb
cmp
sub
insl
cmpsl
sbb
test
std
arpl
jle
push
lds
ja
arpl
jae
add
test
push
xor
and
dec
sbb
push
cwtl
test
lret
cmp
mov
xlat
fs
sbb
ss
mov
xchg
or
jle
fisttpl
push
and
movsb
jae
imul
aaa
mov
pop
imul
outsl
sub
jge
and
dec
lahf
pop
add
jne
imul
divl
popf
jns
bound
jae
leave
mov
frstor
lods
mov
sahf
mov
add
imul
pop
shlb
movsb
fldcw
and
push
iret
movsb
test
test
in
loop
scas
dec
in
sbb
xchg
insl
pop
outsl
jle
pop
xchg
loop
into
and
pop
imul
push
aam
mov
or
mov
ljmp
sub
fistl
aaa
movsb
repnz
rclb
adc
pop
test
cltd
push
push
aam
ja
out
sub
xchg
jl
int3
xchg
cmpl
or
mov
xchg
mov
or
cmp
mov
fwait
jle
jae
jecxz
call
adc
fs
or
jns
dec
insw
sbb
loopne
sbb
mov
add
jae
rorl
sbb
pop
lock
mov
lock
pop
inc
pop
clc
jnp
jae
xchg
xor
sub
out
push
fildll
cmc
stos
mov
repnz
out
stos
pop
cmpsb
jmp
push
xchg
xor
scas
push
dec
sub
push
pop
lds
adc
dec
daa
sbb
jge
and
sarb
adc
out
pop
ds
adc
paddusb
mov
adc
mov
dec
fildl
ljmp
dec
and
jo
insl
sbbb
xchg
and
push
pop
mov
daa
mov
insb
jle
cmp
lds
incl
arpl
or
std
dec
sbb
imul
xor
iret
outsl
cld
in
shlb
loope
push
jnp
jle
dec
stc
jl
nop
stos
xchg
sub
lret
sbb
dec
movsb
gs
xor
push
pop
inc
out
push
xchg
aaa
fisubrs
dec
mov
jg
xchg
jg
int
mov
ljmp
outsl
xor
aas
xlat
in
lahf
cmp
dec
lock
movsb
ds
adc
push
aas
lods
jae
lods
cmp
scas
aaa
mov
dec
shr
sub
jmp
jecxz
add
jae
mov
pop
mov
aad
mov
dec
push
ret
xchg
cmp
negb
push
addr16
movsb
cli
jge
xchg
mov
aam
pop
pusha
into
repz
fistl
push
scas
insl
mov
scas
jo
sub
lods
repnz
xchg
jo
insb
pop
push
test
lcall
add
and
into
pop
repnz
stos
xor
jo
xlat
sbb
adc
imul
mov
dec
loopne
sbb
jb
push
addr16
in
xchg
int
paddsb
sbb
gs
std
dec
sbb
fwait
pop
dec
sbb
daa
data16
pop
or
outsb
pushf
f2xm1
mov
js
pop
ljmp
cmp
bound
loope
loopne
es
in
cmp
filds
cs
notb
pop
adc
lock
inc
out
mov
sbb
mov
xor
mov
shrb
pop
adc
arpl
push
scas
dec
std
dec
inc
add
dec
mov
loope
xorl
add
div
mov
adc
inc
xor
mov
leave
mov
dec
xor
xorb
cltd
xor
addr16
call
arpl
mov
mov
inc
push
sub
mov
jne
cmp
mov
jl
cmp
pop
test
mov
int3
xorl
pop
pop
adc
in
jno
ja
push
in
pop
cmp
insl
jg
jae
lds
das
fisttpl
cli
jnp
outsb
push
xchg
add
ja
cmp
aad
lahf
pop
cmp
jo
mov
sub
mov
lock
or
fisttpll
xor
inc
and
mov
sbb
xor
stc
loope
rclb
into
imul
dec
cs
xchg
cmc
jb
pushf
bound
push
movsb
push
mov
cwtl
mov
out
adc
imul
loopne
pop
inc
xorl
fstps
stos
mov
xchg
hlt
into
xchg
mov
xor
into
push
pop
cmp
test
push
push
dec
insb
pushf
mov
jae
ficompl
push
in
imul
fs
cmpsb
xchg
lret
pushf
test
pop
fs
jecxz
int3
xor
or
mov
mov
cmovle
mov
popf
pop
xchg
sub
scas
bound
daa
pop
xor
jl
jbe
push
or
sub
pop
pop
dec
mov
int3
frstor
ja
imul
sahf
into
lahf
pop
jp
xchg
addr16
jae
loop
aaa
scas
fstl
push
mov
fstl
mov
jmp
jno
pop
rcll
dec
or
mov
pop
mov
sarl
inc
dec
fcom
add
clc
subb
mov
rcrl
pop
jae
jecxz
sub
push
rolb
adc
mov
inc
clc
insl
jge
jns
or
call
movsl
add
add
jge
ljmp
jo
arpl
sar
push
movsl
in
enter
rorl
outsb
in
jae
push
mov
jl
xor
in
shlb
or
scas
imul
jle
add
lock
mov
mov
cmpsl
into
mov
sbb
or
xor
xchg
or
pop
mov
pop
dec
gs
outsl
adc
inc
js
mov
xchg
andb
shlb
adc
int
sub
stos
fsts
dec
sbb
repnz
pop
dec
rcr
dec
imul
xor
fcmovnu
jmp
jns
sub
test
sbb
pop
loopne
std
push
test
lods
mov
mov
imul
das
arpl
xor
xchg
jmp
mov
cmp
add
ja
insl
jae
gs
mov
sub
xor
ja
arpl
or
test
sbb
push
ja
lds
push
jp
cs
lock
pop
cmpsb
out
mov
push
add
sbb
mov
jge
push
push
dec
addb
jbe
popf
sarb
jae
pusha
push
stos
add
inc
lahf
gs
mov
fsubs
sub
insl
pop
or
addr16
fsubrp
jmp
mov
cltd
xor
aam
lock
cld
mov
stos
or
cmpsb
adc
lock
sahf
fwait
aam
mov
nop
icebp
ja
mov
add
mov
pop
test
jae
push
movsb
inc
adc
not
cmpsl
test
jns
cmp
cltd
xor
cmpsb
popf
adc
xor
mov
and
in
xor
cmp
mov
ret
out
jae
popf
sub
int
imul
mov
jge
js
sub
es
push
fld
sbb
and
mov
jnp
js
out
jne
ljmp
jle
mov
fwait
and
fmuls
inc
mov
out
outsb
movsl
std
jnp
jl
inc
sub
mov
ljmp
jae
mov
and
mov
js
scas
mov
sbb
jle
sbb
addl
fnstenv
mov
pop
fwait
fs
fistpl
out
adc
out
fcoml
jl
dec
xchg
call
cld
push
and
test
arpl
jle
inc
popa
int
mov
lret
fs
sarb
mov
sbb
adc
adc
or
xlat
shlb
aaa
mov
mov
into
daa
outsb
clc
outsl
push
xchg
adc
push
jnp
and
lcall
rorb
scas
test
jne
pop
insb
jb
pusha
push
mov
cmp
add
addr16
mov
movsb
xor
test
jns
shlb
call
push
test
sti
sub
hlt
outsl
fldenv
loopne
insl
fnstenv
cmp
into
insl
cmpsb
jmp
add
adc
arpl
mov
scas
pop
mov
sbb
les
sbb
ja
jae
push
xchg
rorl
lods
aam
xchg
inc
mov
hlt
dec
roll
dec
push
inc
in
adc
pusha
dec
push
imul
push
xchg
sub
sbb
push
cs
sbb
out
imul
loopne
shl
das
int3
pop
insb
scas
out
lea
movb
movsl
sub
loope
shrl
push
icebp
dec
mov
lret
aaa
mov
mov
cwtl
outsb
ret
aaa
cwtl
imul
lock
inc
push
std
pushf
cmp
lods
pusha
outsl
jae
scas
pusha
and
cmp
addb
clc
fstl
push
arpl
test
mov
cmp
pop
push
clc
pusha
mov
jnp
imul
pop
push
push
int
rclb
pop
or
inc
ljmp
or
pushf
fbstp
sarl
bound
xor
sub
dec
imul
mov
lret
sbbb
repnz
mov
xchg
xchg
jnp
mov
or
inc
test
mov
mov
push
cs
adc
push
mov
inc
push
int
mull
out
inc
out
mov
jb
or
mov
jae
jno
test
sti
fsubs
rorb
mov
std
push
pop
adc
lods
jle
out
cmc
and
mov
jo
push
jle
mov
out
or
mov
xchg
loopne
jge
gs
jns
leave
pop
call
cmp
insl
pop
outsl
je
mov
aam
aas
lahf
popf
aas
xchg
sub
fnstenv
or
cmp
xor
in
divb
cwtl
push
push
aas
out
dec
sub
punpcklbw
jae
push
sbb
cmp
jmp
jns
lea
mov
xor
repz
lret
cmp
aad
loopne
mov
mov
mov
xchg
ret
add
mov
xchg
daa
mov
lds
mov
out
ret
das
mov
cmpl
mov
mov
arpl
sub
and
xchg
mov
iret
cmp
pop
and
out
fisttpll
mov
xor
std
outsl
adc
scas
jl
fisttpl
sub
repnz
add
sub
outsb
sbb
mov
push
or
jne
mov
cltd
mov
movsl
dec
nop
cmp
mov
fsts
shll
fwait
leave
and
and
push
mov
or
push
cmp
dec
jae
or
mov
lods
mov
push
add
jae
and
jo
repnz
movsl
mov
sbb
insb
shlb
sahf
clc
sbb
jge
sbb
aas
cmpsb
add
into
lock
push
push
pop
and
stos
scas
daa
call
sbb
xchg
in
out
adcb
lods
cmp
lret
cmc
adc
fnsave
out
push
lret
push
cmp
cs
push
stos
or
push
bound
ficomps
and
push
aaa
in
mov
dec
in
imul
ljmp
call
arpl
fwait
movsb
jecxz
jne
insb
std
test
push
jae
mov
popw
pop
arpl
das
test
dec
jmp
cmp
cld
jp
dec
stc
sahf
icebp
jae
and
je
int
sbb
aaa
fs
sbb
fidivrl
daa
das
push
sub
mov
push
es
es
mov
imul
add
push
bound
clc
add
in
xchg
mov
add
mov
push
fmulp
adc
add
jmp
test
inc
cmp
std
stos
stc
pop
pop
sbb
stc
rolb
jns
push
clc
outsb
test
mov
cmp
test
dec
mulb
ss
loopne
jae
xor
mov
cli
pop
bound
ror
jg
nop
add
cmc
xchg
jle
jle
adc
adc
scas
flds
mov
inc
mov
pop
dec
sub
cmpsl
and
inc
ret
pop
out
jg
out
xchg
bound
cmp
insb
push
out
cli
jo
in
lds
inc
push
nop
ret
adc
mov
lds
cwtl
and
jge
jmp
sbb
pop
lret
ss
jo
loope
rolb
jo
cli
in
mov
pop
mov
jns
xchg
mov
xchg
push
iret
daa
enter
insb
push
out
push
dec
shlb
testl
dec
pop
jecxz
gs
cli
xor
bound
xor
lret
jo
test
aam
pusha
repz
push
lcall
cwtl
pop
mov
aas
jo
outsl
cltd
imul
shrl
xchg
jmp
lods
js
dec
rolb
out
sub
out
add
rol
pminub
mov
mov
repz
testb
lahf
and
fsubrs
lods
xor
jo
dec
xchg
pop
mov
inc
cmc
int
sub
and
cmc
push
or
out
xchg
dec
mov
jge
movsl
and
aaa
mov
mov
jo
cmp
ja
shlb
push
mov
mov
pusha
cld
subb
inc
jmp
pop
scas
jo
js
je
push
pushf
mov
mov
or
sub
imul
mov
rolb
pop
test
fisttpll
sahf
cld
rolb
nop
jne
xlat
mov
addr16
out
je
es
xor
sub
mov
mov
cs
xor
idivl
inc
jmp
out
mov
push
mov
in
push
call
jo
xchg
mov
push
test
out
dec
js
mov
jg
imul
mov
loopne
sahf
lea
shl
jo
pop
pop
stos
in
adc
jo
ret
stc
repz
cmpsb
fdivl
lret
sbb
data16
push
loope
and
xchg
lods
dec
and
adc
or
push
jg
push
dec
cld
jle
adc
fwait
outsl
sub
xlat
jo
pop
int
and
ret
jo
mov
xor
jo
test
sysret
and
jecxz
sahf
sti
cmpsb
jg
and
mov
int
mov
lret
mull
add
mov
mov
add
sahf
fs
sub
stos
rorb
cmovno
push
jecxz
jp
add
cs
into
lcall
push
pop
icebp
fldenv
mov
nop
push
es
add
xor
nop
mov
pop
sarl
pcmpeqw
aam
fs
call
push
rcrb
jb
inc
jns
je
sub
and
jb
mov
outsl
push
jo
lock
loopne
in
cmp
fbstp
jbe
jl
rclb
movsb
imul
fidivl
out
and
jo
mov
sub
jo
sub
mov
inc
aas
mov
loopne
mov
data16
and
insl
dec
sbb
inc
or
in
dec
in
shlb
fwait
xor
sub
jo
jne
mov
sysexit
mov
sbb
repz
cmc
inc
jle
mov
jno
sub
jmp
jo
mov
nop
xchg
mulb
push
xchg
add
inc
lret
repnz
dec
sti
scas
orb
gs
inc
add
cmp
stos
push
mov
jo
adc
jg
push
fs
mov
adc
je
nop
lods
push
xchg
mov
aam
xchg
in
sbb
cwtl
pusha
stc
icebp
testb
in
add
leave
or
or
jnp
in
call
mov
jo
pop
popf
mov
xchg
inc
std
sub
insb
pop
fnstenv
push
cli
jno
movd
jo
push
mov
cmp
cmp
inc
and
push
in
dec
xor
mov
out
jo
pop
jns
outsl
cs
adc
pusha
ss
pcmpeqb
jmp
movsb
std
jbe
adc
and
mov
mov
jo
hlt
jnp
clc
pop
jle
jo
push
in
mov
inc
push
dec
movsb
es
enter
sub
adc
mul
jmp
jo
push
outsl
scas
xlat
xor
dec
cli
fildl
cmp
mulb
lods
add
or
or
jo
xchg
lods
cmp
fmull
mov
es
orb
sub
sub
stos
mov
mov
nop
fwait
inc
cli
xchg
cld
aas
ja
mov
loopne
fnstenv
pop
jo
and
add
js
mul
mov
sti
jo
xor
xor
jo
movsl
mov
ror
inc
xlat
jo
sub
popf
test
bound
pop
lret
loop
jbe
sbb
jo
test
test
aam
jmp
pop
inc
out
out
cmp
jo
sbbb
test
mov
sbb
inc
xchg
pop
jo
jmp
es
xchg
inc
popf
jo
jb
dec
out
pop
cli
jo
in
nop
repz
inc
movsl
mov
into
jne
inc
data16
push
insb
push
jo
jnp
jmp
inc
jno
aad
xchg
fadds
daa
and
es
or
rclb
repz
jo
push
imul
out
ret
in
push
loop
mov
mov
nop
push
test
pop
je
cmc
rorl
and
insb
inc
out
mov
or
aad
push
sbb
push
test
mov
mov
ret
add
pop
lret
sbb
cmpb
cmpsl
movsl
jo
out
dec
js
push
inc
mov
rcrb
cmp
jo
and
cld
xor
loope
dec
fadds
and
jo
ljmp
jo
jecxz
arpl
jne
xlat
cwtl
fadd
inc
mov
icebp
pop
pop
stos
and
cmp
fs
pop
ret
hlt
mov
hlt
fidivrl
xor
iret
gs
fdivrl
mov
cltd
aam
imul
or
fadds
hlt
fst
push
or
stc
cmp
jo
mov
popf
or
dec
pusha
iret
xchg
dec
mov
sub
inc
leave
xorb
push
cltd
int
leave
mov
or
scas
push
mov
jo
push
dec
sbb
jo
adc
adc
ret
lds
jns
fsubp
xchg
arpl
lods
fdivs
shll
xlat
push
mov
jne
sbb
jle
sbb
divb
jnp
jo
xor
jecxz
insl
ljmp
xor
xchg
lods
pop
roll
bound
test
js
stos
mov
push
adc
sbb
push
jo
leave
xorb
rorb
arpl
gs
mov
dec
mov
pop
into
sti
jo
cmpsb
or
xchg
ret
sbb
pop
mov
jo
xor
testl
or
inc
jns
in
out
clc
sbb
dec
sub
ds
xor
pop
sub
fmul
in
mov
jo
out
inc
dec
fisttps
mov
inc
aas
int3
pop
cs
xchg
jp
bound
push
add
sbb
pop
scas
jo
out
mov
push
out
xchg
dec
jle
ret
and
inc
test
jo
lret
fnstsw
ljmp
loope
inc
roll
repnz
fdivl
jb
jo
sti
insl
cmp
mov
fs
out
enter
xchg
fwait
push
pushf
jo
orb
je
iret
push
xchg
xor
mov
xorb
mov
jge
cmpsl
sub
js
xor
call
jmp
pop
shll
mov
fs
lahf
jl
push
xlat
jo
popf
mov
scas
loopne
rcll
xchg
divl
jb
xor
jne
pop
jge
jo
xchg
and
das
test
popa
ret
or
jo
mov
adc
sbb
nop
out
outsl
mov
jb
jo
cs
jns
add
jo
mov
push
sub
xchg
cmp
fidivrs
ds
sub
xor
xor
jb
outsb
or
addr16
mov
mov
mov
cmp
hlt
dec
adc
arpl
cmpsl
pop
mov
ds
mov
sub
mov
push
cli
mov
dec
lods
cltd
mov
divb
rolb
cmp
jae
push
xor
arpl
pop
xor
dec
cmpl
imul
mov
jo
push
fistpll
stos
push
inc
subb
pusha
cmp
inc
dec
das
mov
jmp
inc
sbb
and
cltd
or
bnd
mov
mov
sbb
push
dec
je
cmc
inc
jg
add
add
xchg
cwtl
push
outsl
xchg
mov
ljmp
push
adc
arpl
int
jae
repz
insb
mov
sub
mov
enter
mov
sbb
jmp
arpl
js
cmp
xchg
pop
lret
mov
push
jl
icebp
add
dec
in
jae
enter
push
insl
mov
mov
nop
jae
xlat
cmp
ror
mov
or
into
cmp
mov
pushf
imul
dec
mov
or
or
mov
sbb
dec
add
int3
xchg
fsts
and
pusha
mov
or
sub
mov
nop
lret
rcl
aaa
nop
jb
and
je
push
push
les
or
or
lock
mulb
cs
fadd
loopne
aad
fisttps
or
call
leave
cwtl
push
mov
es
rcr
jle
pop
jae
sbb
test
std
xchg
outsl
or
popl
mov
sbb
mov
adc
dec
scas
or
xor
xor
imul
lds
sbb
xchg
cmp
rclb
sub
cmp
mov
hlt
jae
xchg
insl
scas
jne
scas
jle
adc
add
cmp
xrelease
push
push
xchg
fdivs
mov
scas
es
clc
mov
fwait
stc
mov
and
dec
shll
jae
jb
sbb
scas
cmp
aam
aas
dec
cwtl
sub
xchg
xchg
jg
sub
and
jg
scas
out
mov
sti
push
fdivs
inc
sub
sarb
rcr
es
cld
jo
dec
arpl
jne
ss
push
lock
pop
aaa
add
mov
gs
jae
sub
rcr
push
mov
sahf
xor
in
lock
jae
arpl
jno
xlat
pop
out
push
shll
in
push
cmpsl
push
repnz
jnp
and
nop
stos
add
and
rcrl
adc
aam
movsl
mov
dec
mov
fisttpl
loope
jge
imul
movsl
dec
mov
dec
lds
xor
cmp
lock
movsb
inc
push
std
inc
xor
push
fldt
xchg
mov
cmpsb
mov
sbb
dec
mov
jl
je
lret
pop
or
mov
pop
push
in
repz
inc
add
stc
ret
lret
or
inc
out
sub
and
daa
mov
jns
cmp
or
mov
sti
lahf
loopne
clc
push
ss
repz
pop
push
pop
stos
jae
mov
push
or
cmp
lahf
les
hlt
jae
or
int3
xchg
cltd
jo
aaa
mov
sbb
push
inc
push
addr16
adc
insb
adc
xor
cmpsb
filds
push
mov
out
xabort
out
pop
mov
jmp
mov
test
xorb
mov
std
in
fistpll
ret
sub
jp
fsubl
mov
movsl
sub
stos
stc
xor
mov
xchg
inc
lret
fmulp
loop
push
pop
lret
out
jae
movsb
sbb
es
push
out
sub
in
cmpsl
mov
xchg
mov
sub
fwait
loope
gs
mov
scas
call
add
stos
mov
push
das
iret
mov
mov
sbb
int3
xchg
stos
push
test
pusha
pushl
sbb
shll
mov
fsub
sar
push
mov
inc
and
sbb
mov
sub
xor
loope
sbb
push
psubb
pop
or
dec
out
cs
es
lods
sub
xchg
push
daa
out
xor
xor
loope
mov
arpl
je
insb
mov
mov
jo
sub
movsb
adc
scas
ja
outsb
lock
les
orl
sub
stos
lock
int
or
mov
cmpsl
scas
hlt
aaa
xchg
mov
shlb
arpl
int3
adc
sbbl
lds
shrl
or
fisubs
mov
xor
push
mov
fs
sbb
cli
sarl
xor
clc
jo
fisttpl
fs
std
bound
cs
scas
sbb
mov
adc
ret
roll
es
jo
testb
xchg
xchg
insb
into
jnp
jo
adc
dec
fcmovb
cmp
js
sub
cld
daa
sysexit
or
xor
pop
push
pop
js
in
scas
push
jp
xchg
stc
or
dec
les
ljmp
data16
cwtl
in
fisubs
cmp
ljmp
mov
aas
add
inc
push
arpl
scas
insb
lahf
notl
clc
in
adc
xchg
adc
imul
dec
into
inc
or
fnstenv
pop
rcll
pop
movsl
int
add
and
leave
sub
pop
inc
fdivrl
mov
jp
push
inc
popf
aas
lahf
sahf
mov
arpl
repnz
xlat
push
out
sub
sbb
mov
lock
fstpt
lret
jecxz
and
adc
push
outsl
orb
jo
arpl
inc
test
jae
jbe
mov
jno
mov
inc
jae
js
mov
ret
clc
jp
mov
xchg
xchg
dec
mov
cs
pusha
loopne
adc
mov
adc
dec
xor
ja
sbb
xchg
js
inc
dec
xor
cmpsb
ret
or
xchg
xchg
sub
jp
test
push
or
adc
cmpsb
mov
js
cmc
pop
add
xor
shl
push
fstpl
lock
jnp
nop
ror
jp
pop
std
push
jle
cmc
and
das
bnd
jae
cmp
mov
pop
pop
loope
call
cmpsb
fwait
aad
pop
adc
rolb
imull
movsl
mov
push
mov
dec
mov
mov
mov
scas
cmp
stc
fsubrs
fcmovu
lahf
das
shl
imul
sbb
scas
push
clc
push
mov
sbb
cmp
jbe
and
fmuls
dec
mov
ffree
mov
push
outsb
lahf
mov
movsb
adc
cwtl
lea
hlt
push
lcall
xor
xor
gs
dec
push
je
jmp
aam
sbb
mov
dec
push
mov
aas
mov
dec
mov
push
xchg
or
jle
inc
jae
out
add
sub
fldl2e
adc
dec
addr16
adc
pop
push
test
fldcw
dec
sbbl
mov
ret
mov
inc
mov
or
sbb
out
in
mov
push
push
jle
inc
pop
test
lcall
adc
inc
push
andb
xchg
gs
in
push
mov
push
movsl
fstpl
bound
inc
pop
loopne
and
mov
cmp
push
in
fnstsw
gs
shlb
in
mov
sbb
arpl
mov
fwait
cmp
aaa
xor
int3
scas
loope
adc
jae
adc
xor
loopne
ds
pop
sti
dec
sub
sub
movsl
push
stos
sub
movsb
sbb
fidivs
or
adc
jnp
sub
push
mov
stos
push
inc
cli
add
popa
adc
jo
cltd
pop
clc
xchg
in
je
lds
push
leave
jmp
insl
test
gs
aad
mov
sbb
jnp
inc
add
push
lcall
negl
insl
mov
sub
addl
xorb
inc
inc
mov
shll
push
rorb
popa
jecxz
ljmp
jmp
jg
loopne
js
outsb
sbb
inc
sbb
jg
jo
adc
mov
sub
inc
test
sub
sbb
cwtl
test
pop
in
sbb
sar
jo
fists
xchg
out
repz
push
out
cwtl
into
ja
jo
scas
dec
and
cwtl
aas
add
aad
jge
sysret
subb
push
and
cmpsl
push
addr16
ljmp
repnz
shll
xchg
das
xchg
clc
sbb
nop
add
cmpsl
jp
mov
leave
in
shll
xor
adc
lcall
mov
lret
push
mov
mov
cmp
jo
gs
push
mov
seto
aaa
and
je
cmp
jo
push
push
adc
jo
daa
dec
sbb
outsb
je
push
scas
and
test
fnstenv
rclb
jo
adc
cmp
jno
cmp
jb
loop
fcos
mov
ret
sub
and
push
jo
scas
iret
out
pop
xchg
push
out
pop
and
mov
adc
push
nop
int
cmp
dec
or
jo
push
adc
and
lret
xchg
dec
xlat
sti
idivl
cmp
and
loop
jo
or
test
add
testb
daa
test
jp
sbb
ret
dec
sbb
jo
cmp
clc
int3
test
sub
movsb
sti
jo
pop
daa
sar
xor
ltr
fldcw
int3
push
jo
mov
addr16
sbb
loopne
xor
or
sarb
fwait
jge
mov
push
and
push
jecxz
nop
bound
jle
mov
jo
nop
xchg
popa
aad
sub
imul
scas
fstps
imul
mov
call
test
js
and
xorb
inc
push
mov
nop
jl
and
sub
fs
jo
aas
dec
cmp
lret
mov
jo,pt
xchg
leave
jo
adc
push
jecxz
lods
hlt
push
or
mov
js
pop
int
call
pop
mov
add
cmpb
fnstsw
xchg
sub
push
jo
lret
push
outsl
cmpsl
in
xchg
mov
jl
add
cwtl
pusha
or
sti
pusha
int3
jp
cmp
imul
or
in
mov
sbb
daa
jo
out
clc
mov
cli
dec
fs
mov
loop
pop
repnz
xchg
lcall
cltd
mov
dec
dec
jno
scas
pusha
add
jb
jae
daa
outsb
xorb
sbb
adc
imul
inc
nop
mov
push
cmpsb
push
dec
pop
andl
sub
leave
mov
mov
jg
inc
push
pop
and
cmc
push
mov
cld
xor
jo
and
nop
jo
cmc
sbb
push
ret
subb
shll
push
xor
test
pop
out
lret
push
jo
add
inc
ret
vmovntdq
push
dec
fmuls
rcll
push
pop
inc
jo
movsl
fsubrl
and
jo
jno
mov
cwtl
push
leave
out
push
jo
lret
xor
jge
stc
xor
jmp
pop
fs
mov
in
sub
nop
sahf
push
xor
test
pop
push
push
push
or
adc
mov
add
jo
popf
fildll
jp
pushl
xor
jae
mov
jp
mov
loopne
cmp
mov
repnz
add
pushf
aad
jb
mov
mov
int
push
jo
push
pop
jns
inc
jmp
jge
sbb
call
out
mov
pop
int
lea
inc
mov
js
mov
inc
adc
jo
fs
sub
jbe
rorl
hlt
jns
jo
pop
add
mov
fsubrs
inc
jo
dec
sbb
jo
adc
sub
jo
push
or
jbe
fcmovbe
pop
aam
push
gs
data16
xchg
bnd
lahf
add
push
jo
shrl
shlb
nop
xor
inc
lahf
jo
push
xor
notb
jo
push
loope
ss
fistps
jae
sbb
out
lock
repz
shll
mov
mov
pop
cs
add
aas
jo
pop
adc
push
jmp
adc
int
mov
mov
nop
popa
inc
sbb
xor
inc
lock
sub
out
pop
pop
cli
imul
cmpsl
xchg
repnz
jle
dec
scas
int
outsb
fildl
shr
and
in
sbb
arpl
and
lock
ja
cs
add
shl
daa
lds
pusha
inc
cli
mov
shl
idivb
jo
fcoms
stc
movsl
imul
lds
loopne
xchg
int3
ret
push
loop,pt
jo
cmp
mov
rcrl
jo
cmp
ficomps
leave
std
das
sbb
je
cmp
jo
adc
adc
cmp
in
call
inc
repz
sarl
or
add
fcoms
addr16
imul
inc
jo
inc
arpl
out
mov
jo
lods
test
xchg
sti
mov
jo
aam
add
xor
jnp
pop
adc
lahf
inc
xor
xor
xchg
nop
sub
fwait
imul
cmp
enter
popa
stos
in
iret
popf
cmc
shlb
push
leave
cltd
xchg
pusha
push
pop
repnz
stos
or
dec
cmovae
sbb
jns
rclb
andb
xchg
mov
inc
scas
push
into
add
icebp
cltd
cs
in
jo
mov
or
outsb
int3
fbstp
arpl
push
jmp
frstor
mov
push
jo
mov
jle
shl
xchg
jo
push
enter
xchg
in
pushf
sti
xor
xorb
pop
push
jo
xchg
adc
fwait
mov
jg
fs
popa
sti
sub
pop
jo
lahf
shll
add
cltd
pop
add
lock
sbb
cmp
pusha
push
ja
dec
sub
fs
cmp
jo
leave
pop
pop
stc
mov
adc
jg
xor
ret
push
push
lods
loop
add
adc
in
icebp
subl
sbb
stos
jl
pushf
shlb
sub
pusha
icebp
jo
mov
roll
mov
jl
or
jbe
jo
push
enter
xor
jp
sbb
pop
lret
cmp
dec
cmp
imul
dec
jo
pop
iret
pop
out
lods
enter
lds
out
push
leave
mov
add
lock
inc
dec
jo
push
adc
imul
add
gs
bound
and
push
dec
jge
rcrb
mov
or
jb
nop
jo
arpl
in
jnp
incb
sub
mov
rcl
inc
or
and
in
xor
push
xchg
lods
sbbl
jo
or
arpl
mov
shr
lods
and
notl
das
jo
cmc
jae
mov
aad
int
or
and
lret
cmp
inc
pusha
int3
push
bound
ss
jo
push
fisubrs
dec
nop
pop
mov
loope,pn
mov
jbe
or
cmpsl
jo
fs
inc
fadds
int
push
addr16
pop
leave
in
data16
dec
dec
jo
push
sbb
fnstcw
lods
jo
mov
aad
xchg
ljmp
pshufw
lret
xor
lar
xchg
ss
adc
subb
lcall
stos
add
sbb
push
inc
jo
pop
pop
sbb
lret
cmpsl
jb
mov
addr16
cmp
js
bound
incb
arpl
jle
nop
mov
jle
sbb
and
sub
iret
jge
hlt
jo
cmpsb
pop
inc
stc
repnz
push
fcompl
dec
jp
stos
push
subb
jo
inc
sbbb
icebp
mov
sbb
mov
out
sbb
aad
in
and
int
add
movsl
call
push
int
jns
mov
out
add
shlb
repz
daa
and
xchg
mov
mov
and
lock
data16
mov
or
push
or
mov
mov
fprem1
pop
xor
rclb
sub
jecxz
mov
add
in
fistpll
in
es
mov
add
fldenv
or
xchg
popa
or
cmp
inc
stos
std
jge
dec
in
out
icebp
push
addr16
or
fdiv
cld
xchg
daa
jmp
es
jecxz
or
jp
outsl
push
or
sub
mov
ljmp
fs
arpl
addr16
push
or
jg
push
rcrb
ret
add
xor
shlb
rcl
jbe
icebp
xor
lahf
scas
orb
mov
jae
dec
push
repnz
jae
call
js
pusha
jp
je
insl
push
inc
xor
pop
subb
aas
fbstp
aam
inc
hlt
or
lods
sub
arpl
mov
dec
pop
jae
mov
push
xor
sub
add
inc
leave
stos
hlt
sbb
dec
dec
sub
push
jae
mov
mov
mov
dec
mov
push
push
in
push
cmp
cmp
mov
cwtl
loop
push
icebp
roll
clc
jo
mov
dec
or
stos
es
xchg
je
inc
jbe
push
inc
stc
ljmp
cli
dec
ror
imul
jnp
jno
push
cwtl
xor
push
xor
add
push
scas
addr16
or
data16
fimull
enter
jg
xchg
addr16
sub
mov
mov
nop
jae
sti
push
jno
sub
addr16
and
mov
shrl
imul
aas
ss
cmp
cli
outsb
or
mov
data16
jae
sub
mov
fildll
add
leave
lds
mov
dec
ret
arpl
sub
or
stos
jl
shrl
push
enter
xorl
out
movsl
stc
lahf
mov
stos
mov
adc
mov
xor
leave
mov
ret
mov
and
insb
cmpsb
cltd
mov
shl
out
test
lods
mov
xor
mov
lock
jae
xlat
mov
mov
pop
rorb
js
pcmpgtb
out
inc
stos
sti
ret
pop
dec
jno
jge
inc
or
lds
or
loopne
insl
bound
cli
push
gs
jb
jns
rcr
icebp
push
loopne
push
mov
jle
mov
xchg
rol
lods
ror
cmc
loop
fldln2
xchg
cmp
sarb
sub
jl
jae
push
adc
mov
mov
jg
and
push
cltd
cmp
repnz
arpl
adc
jno
push
cmp
xchg
aam
mov
sub
sub
mov
mov
fs
xorb
scas
jae
xorb
lds
cmpl
scas
xor
pop
push
inc
test
fwait
std
fcmovnbe
push
test
adc
sbb
scas
call
sbb
hlt
sub
add
sub
imul
sahf
shll
fs
or
das
shlw
out
cmc
lea
xor
aas
test
sarb
into
jnp
jl
movsb
cmpsl
xor
jl
movl
in
loope
int3
rorb
bound
pop
cmpsl
push
das
iret
lds
cwtl
add
repz
js
arpl
and
movb
ja
add
je
jbe
sbb
mov
sbb
iret
out
pop
shr
jae
sbb
dec
imul
aam
xor
sbbl
xchg
dec
sub
icebp
addr16
xchg
cmpsl
fsubl
push
out
sbb
ljmp
daa
mov
push
add
inc
mov
test
sahf
inc
mov
fmull
cmpsl
cmpsb
mov
insl
or
jbe
push
jae
sub
gs
cli
jl
jle
fidivrl
jae
test
outsb
cwtl
mov
int3
std
adc
xor
popa
fsubrl
mov
mov
in
jle
dec
push
cmp
outsl
jno
push
mulb
cs
loopne
add
hlt
mov
inc
adc
packsswb
sti
add
outsl
pusha
inc
loope
jno
xchg
imul
sbbb
mov
dec
test
xchg
jo
xor
push
int3
fs
je
adc
dec
jno
outsl
sbb
xor
dec
pop
sub
loopne
icebp
add
test
rcrb
adc
ror
rolb
inc
mov
adc
outsb
pop
arpl
sub
lahf
orb
cmp
dec
add
xchg
scas
push
sub
jge
mov
lock
sbb
call
pop
fldl
dec
inc
stos
or
push
mov
and
dec
dec
or
xor
push
in
xchg
cmp
mov
push
es
adc
fidivs
add
xor
mov
sbb
adc
rcrl
mov
add
push
push
push
test
test
loop
mov
out
push
jge
cmp
fiaddl
jnp
outsb
out
push
jle
sbb
sti
xor
xchg
pop
cld
loope
jle
xchg
or
xor
movsb
cltd
xor
or
mov
adc
arpl
fmuls
mov
insl
mov
scas
push
or
push
imul
xchg
mov
sahf
lock
or
xchg
add
push
jg
jno
mov
xor
jmp
pop
das
adc
fiaddl
push
mov
rol
jp
xor
cltd
cli
sbb
lahf
les
push
xchg
lods
add
push
sub
lods
jae
xchg
loope
pop
push
sub
incl
jne
lahf
insb
and
adc
gs
pop
les
lds
movsl
inc
mov
enter
push
pop
outsl
mov
or
cmpsb
push
or
aaa
sbb
jmp
cmp
push
cmp
mov
insb
out
mov
push
testl
mov
into
stc
mov
imul
andl
stos
sti
mov
cmp
mov
ret
mov
imul
cmp
sub
pop
sbb
outsl
mov
pop
dec
push
scas
mov
shll
cwtl
dec
sub
jbe
mov
arpl
cmp
push
inc
or
pusha
adc
scas
pop
jmp
dec
fs
sbb
icebp
xchg
or
aad
pusha
cld
lods
lcall
jo
inc
pushf
ret
fst
jo
cmc
je
incb
inc
nop
loope
sbb
jmp
fdivs
cs
pop
sbb
ret
nop
and
cld
jo
adc
fsubr
fistps
jo
mov
cmp
add
scas
pop
es
xchg
mulb
and
das
ja
jbe
add
shll
jge
push
inc
add
pop
xor
nop
cmc
pop
xchg
shlb
fs
inc
adcl
shll
pop
loopne
xlat
arpl
xchg
aad
sbb
sub
push
daa
mov
lods
push
mov
xchg
clc
cmc
xchg
and
inc
scas
js
xlat
jo
jle
mov
jo
andb
add
inc
movl
push
rcrl
in
imul
stos
xor
scas
shl
jno
jo
andb
mov
jne,pn
aad
jl
xchg
pop
mov
ret
rcll
icebp
add
call
popa
notl
jmp
call
jo
repz
mov
fdivp
aaa
sti
push
icebp
sbb
pop
mov
insb
mov
sub
fldl
cs
pop
test
dec
js
loopne
jb
data16
dec
pop
push
ficompl
cmp
dec
adc
sti
pop
cmp
mov
push
out
or
mov
ret
and
sbb
pop
push
mov
cld
jo
test
js
lahf
nop
jo
dec
stc
adc
sub
xor
gs
pop
xchg
push
mov
cmp
jle
push
repz
mov
jno
push
jo,pt
ss
adc
hlt
jnp
fcmovnu
mov
rorl
or
lret
xor
loopne
out
sub
add
in
xor
imul
sbb
mov
fs
ljmp
notl
sahf
fbstp
loop
jmp
rol
push
cmpsb
add
idivb
xchg
mov
push
clc
cmp
push
mov
jp
jo
invd
add
push
jne
or
and
mov
mov
mov
dec
cmpsl
mov
notb
fists
jg
int
cs
ret
js
jle
mov
and
cmp
aaa
ror
mov
fldcw
rcrl
subb
bnd
mov
mov
call
mov
repnz
rcr
ss
jo
inc
add
mov
mov
addl
hlt
cltd
ja
jnp
push
insb
inc
jo
ljmp
nop
fucomip
mov
sub
cmp
leave
js
dec
sub
rolb
dec
or
iret
jnp
loope
mov
jl
fld
movsl
loop
jne
add
popf
shl
jle
leave
inc
mov
test
mov
jo
adc
sbb
jo
pop
dec
xor
xchg
lret
push
or
ss
aad
insl
jo
xchg
fs
jo
int3
iret
pop
sar
subb
inc
sarl
rorb
hlt
int
fmull
das
pop
adc
cmpsb
sub
pushf
adcb
cmp
xorb
jmp
stos
or
mov
jmp
mov
sbb
mov
imul
imul
push
jb
inc
mov
pop
or
mov
test
ja
mov
shlb
cld
pop
mov
xor
enter
jnp
lret
gs
inc
xchg
std
dec
addb
jo
and
test
xlat
cmpsl
push
jo
push
push
push
mov
sub
movsl
jo
mov
jns
in
daa
dec
add
lea
stos
pop
dec
mov
cmpsl
jo
out
iret
mov
jo
or
shl
cmp
pop
imul
popf
dec
jo
push
cld
push
push
lret
xchg
fwait
adc
stos
cmc
cs
fcos
cwtl
xor
leave
jne
pop
jo
jmp
stc
gs
out
pop
or
sub
inc
test
jno
jo
add
movsb
pop
bswap
leave
inc
ret
jo
cmp
ss
or
addr16
jg
inc
sub
pmulhuw
cmp
adc
scas
adc
add
mov
sub
cmp
lea
in
adc
pusha
cwtl
push
mov
bound
lret
lea
aas
push
jo
dec
push
xor
xchg
sub
test
mov
sbb
dec
cmp
push
xchg
pop
test
mov
enter
fistpl
rcl
push
addr16
or
gs
in
and
or
fldt
test
dec
mov
adc
jo
pop
inc
inc
push
pop
leave
pop
jo
in
inc
fld1
ds
jo
je
push
subl
push
jo
and
xchg
jbe
sub
fdivrl
popa
movsl
ret
sub
push
jo
pop
mov
add
push
jbe
testb
mov
jo
pushf
jle
or
pop
push
or
jo
pminub
mov
adc
mov
jae
adc
fisubl
sub
inc
xchg
jae
bound
jo
xor
and
jo
pop
into
adc
aas
fidivs
lods
cli
mov
push
and
adc
jo
pop
not
fsubl
outsb
push
inc
jo
sub
xlat
mov
je
add
jo
ss
inc
popf
inc
dec
jo
push
leave
sbb
or
pop
jo
xchg
and
jo
cld
add
cs
jae
add
jo
lret
andl
sti
out
jge
enter
into
push
test
bound
bswap
les
test
jo
cmp
jo
inc
pop
sbb
add
pop
imul
and
lock
jae
stc
adc
icebp
or
test
loope
jo
in
sub
jo
xchg
ret
dec
jo
jp
inc
lahf
add
repz
mov
sub
sub
pop
into
jmp
jmp
sbbb
iret
mov
mov
jmp
in
dec
out
bound
popa
pop
jae
out
inc
mov
pop
outsl
xor
fimuls
js
jbe
cmpsl
push
adc
fwait
loopne
pop
push
lcall
push
imul
jae
dec
jo
sbb
mov
jo
movsl
cltd
add
pop
jo
xor
and
test
pop
fistl
or
pop
push
fstps
enter
fcmovb
sahf
mov
divb
push
pop
shrl
popa
pushf
jl
in
mov
out
push
adc
cmc
sbb
data16
test
fwait
ds
inc
inc
sbb
enter
adc
push
adcb
pop
push
fldenv
xchg
mov
cmpsb
imul
mull
jl
mov
push
pop
aaa
cs
sub
dec
ljmp
lods
jo
cmc
daa
dec
out
test
jo
mov
fcmovnu
cmp
mov
push
push
loope
mov
mov
xchg
xor
or
sub
ret
fnstenv
jge
scas
adcb
shll
push
inc
je
cld
add
jo
int3
lds
aad
mov
mov
pushf
popf
je
enter
rcll
inc
or
jo,pn
popl
mov
data16
shrl
mov
jo
sar
mov
hlt
jnp
jo
add
cs
inc
adc
andl
lret
into
cmpsb
xor
pop
iret
jae
cmp
inc
push
xchg
outsb
mov
jo
addr16
into
popa
cmp
aam
andb
push
inc
mov
out
adc
sub
jle
mov
dec
adc
jb
xchg
int
mov
add
shll
jp
jo
mov
push
cs
int3
loop
or
loop
jno
lods
sub
daa
jge
jo
xchg
mov
dec
mov
sub
jl
rcll
cli
cmp
rclb
cmp
lea
mull
leave
insl
nop
or
hlt
fwait
outsb
xchg
cmp
mov
fistps
pop
jg
add
outsb
mov
push
mov
sbb
push
xchg
xor
data16
mov
int3
jge
ja
lahf
orb
iret
scas
lock
push
or
jae
stos
js
push
jbe
fst
pop
sub
push
loop
push
popa
fstpl
lahf
dec
insl
jo
std
arpl
out
xorb
cmp
mov
dec
insb
cmp
push
insb
or
mov
sub
cmp
inc
push
pop
gs
out
out
push
mov
mov
add
mov
int3
mov
movsl
lcall
push
movsl
mov
push
cmp
loope
sub
dec
out
bound
insb
mov
loop
dec
fs
xor
icebp
adc
loopne
cltd
cmpsl
ljmp
and
arpl
stos
int3
push
and
lret
push
xor
lahf
mov
or
fcomps
stos
xchg
fisubrl
std
dec
imul
jnp
cmp
rolb
xchg
jecxz
mov
lahf
arpl
into
xor
adc
loope
mov
dec
loopne
test
int
scas
cltd
fmul
jb
testb
mov
stc
bound
dec
dec
jbe
inc
fld
insl
sbb
mov
outsb
lahf
push
xor
sbb
insl
fbstp
in
lahf
icebp
fstps
scas
add
jecxz
add
outsl
cmpsl
jmp
in
mov
mov
push
mov
sub
mov
xchg
jae
data16
cltd
int3
test
push
int
mov
test
sbb
nop
push
pop
cwtl
cltd
mov
xorl
out
out
insb
fs
call
and
and
jns
fcoml
inc
cmp
pusha
and
jb
arpl
pop
js
ds
scas
add
fwait
ret
std
mov
into
rclb
dec
mov
icebp
sub
pop
call
add
jae
cli
xchg
inc
pop
xchg
xchg
adc
addr16
addr16
push
aam
stc
jle
mov
int3
cmpsb
sbb
xchg
es
ja
xchg
iret
cltd
push
jl
popa
push
out
mov
mov
pop
lods
inc
mov
push
lahf
mov
ss
ss
sbb
pop
mov
sbb
or
imul
lods
jmp
pop
inc
and
arpl
cmp
test
ja
popf
loopne
movsl
adc
cmp
das
std
xchg
mov
lret
mov
xchg
dec
outsl
cmp
fcmovb
jns
popa
jne
daa
cmp
loopne
add
test
hlt
repz
aad
and
arpl
sbb
rolb
nopl
mov
add
fstl
out
outsl
shl
xchg
shrl
insl
inc
scas
mov
inc
outsb
fstp
add
ret
and
or
jnp
xchg
mov
or
nop
arpl
mov
jmp
mov
cmp
fs
dec
xor
jno
jle
sub
xchg
jmp
jmp
fadds
adc
adc
outsb
leave
push
xchg
je
loope
es
jl
ret
push
jmp
push
adcb
xor
xor
adc
lods
push
cmp
std
test
stos
jns
jo
inc
pop
aam
mov
arpl
inc
or
mov
xor
cmp
pop
push
aas
adc
rclb
int3
addl
xor
dec
int3
mov
je
mov
insl
test
xor
or
in
addl
lds
push
out
xor
pusha
sub
lret
sub
shrb
jae
fildl
mov
or
sahf
iret
sbb
scas
mov
shlb
fsubrs
insb
ja
inc
cmovne
movsl
addr16
mov
sub
xor
arpl
shlb
dec
ficoms
xchg
out
pop
add
mov
out
movsl
or
cmc
gs
or
jb
ja
jmp
in
mov
push
int3
dec
fucomip
in
xorb
jp
cmpl
mov
add
sbb
imul
push
adc
in
arpl
sub
jg
jns
dec
lock
enter
sti
es
gs
pop
and
add
jnp
dec
pop
test
add
push
fisubs
xchg
sbb
xor
xor
jbe
push
out
insl
jle
rorl
fstpl
enter
mov
cmpsl
je
mov
cmp
lock
mov
jo
add
out
jecxz
test
sbb
mov
es
out
idivb
sbb
xor
mov
incl
push
adc
push
test
pop
imul
int
add
push
jae
mov
outsb
arpl
int
inc
or
aam
fsubl
dec
pop
leave
xor
jae
xchg
mov
inc
fsubl
int3
addr16
inc
in
xor
mov
aas
jg
xchg
mov
call
insb
push
arpl
imul
pop
leavew
scas
add
loopne
sub
aaa
ret
adc
aaa
scas
out
pop
pop
je
mov
es
pusha
leave
outsl
ljmp
mov
popf
mov
or
aam
and
nop
and
jae
bound
push
mov
out
pop
cltd
push
scas
push
add
in
scas
xchg
jae
inc
mov
and
std
add
arpl
lds
jnp
jno,pn
cli
fs
movsl
pop
js
jae
nopl
jge
jo
faddp
jb
jnp
out
push
inc
stc
push
mov
pop
xrstors
jo
and
test
outsl
xchg
hlt
push
jo
jne
inc
mov
shl
bound
js
and
int
mov
push
cmovns
push
lock
rorb
mov
cmp
cs
mov
aam
or
loop
push
jo
gs
je
add
dec
out
xorl
shrl
xchg
in
mov
div
fwait
icebp
daa
jl
cmp
sti
fdivrs
jle
push
dec
mov
xor
jecxz
jle
lods
outsb
lock
or
imul
jo
into
inc
lcall
scas
pop
push
movsb
int
dec
push
scas
test
pop
jb
test
sub
inc
push
loopne
in
push
roll
ja
dec
scas
ret
sub
outsl
lcall
xor
sti
not
add
divl
cld
add
mov
and
push
mov
xor
push
fs
xor
fs
jae
inc
clc
jno
les
and
cmpsb
xor
les
inc
xchg
mov
or
dec
sbb
data16
add
cmc
mov
notl
loope
xchg
xorl
jo
rcrl
xchg
pop
adc
mov
xchg
icebp
lock
push
scas
cmp
insb
cmp
out
inc
jo
push
orl
cmpsb
lods
push
push
insl
popa
popf
int
iret
fiaddl
push
sbb
adc
dec
push
test
fnstcw
outsb
sbb
jae
mov
nop
jge
mov
mov
jbe
mov
push
stc
sti
loopne
xor
fmulp
inc
shlb
xor
call
pop
dec
pop
stos
xchg
sub
aaa
push
je
jp
sbb
jecxz
scas
push
int3
pop
insb
adc
jle
fucomip
les
dec
sbb
add
and
xchg
mov
push
or
sbb
sbb
sbb
fnstenv
sbb
cmpsl
aad
jge
pop
fdivp
and
ret
movsl
addr16
dec
push
lods
pop
imul
jns
jnp
sbb
add
inc
cmp
out
sbb
mov
lret
mov
loop
jae
fidivs
iret
jmp
out
pop
loopne
aam
mov
mov
loop
mov
into
out
or
mov
out
mov
pop
data16
sbbl
lret
out
aam
lcall
mov
sti
movsb
jg
cld
js
cltd
push
outsb
loope
add
jp
shr
xchg
pop
andl
dec
pusha
sub
dec
cwtl
jmp
or
pop
adcb
cmp
cs
sub
dec
ljmp
push
dec
mov
xorl
adc
dec
xchg
in
fadds
iret
inc
adc
mov
cmp
push
sarl
or
xor
mov
xor
out
repnz
xchg
xor
jg
movsl
insb
push
push
sub
pushw
push
fs
jbe
imul
insl
popa
flds
sbb
popf
inc
loop
and
cwtl
repnz
cmpsb
cmp
xor
jo
or
roll
sub
push
and
test
push
or
jo
jecxz
std
sbb
pop
scas
mov
or
pop
push
or
leave
shl
mov
pusha
jg
daa
sub
test
movsl
clc
lock
push
mov
into
or
pop
xor
ret
mov
call
and
sbb
cli
or
cmp
xor
jbe
xchg
ljmp
push
jge
orb
dec
outsb
repz
mov
imul
data16
mov
clc
or
fdecstp
pop
push
fwait
push
fwait
add
test
lds
jae
cmpsl
cmp
add
clc
xor
pusha
fsubl
dec
cmp
int
pop
cs
inc
xor
js
push
jp,pn
inc
mov
add
mov
rcrb
in
or
lret
inc
inc
out
mov
fidivs
mov
push
in
popl
dec
sbb
daa
sti
push
out
lods
cmpl
mov
pop
or
sbb
icebp
cmp
sarl
and
in
mov
xor
lock
cmpsb
pusha
or
push
std
shlb
xor
jne
xchg
out
sbb
cltd
push
dec
mov
loop
enter
mov
jo
outsl
fs
into
jns
xchg
inc
sarl
lret
and
jb
cmp
icebp
ja
jae
pop
mov
jnp
mov
cmp
lods
pop
mov
rep
lahf
add
fbld
lcall
inc
jmp
push
and
pop
ret
arpl
out
insl
sub
lret
push
fcmovnu
repnz
addr16
jl
sti
das
scas
stc
dec
mov
push
in
jnp
insl
rcrb
icebp
jae
jg
lods
dec
xchg
fsubl
stos
repz
arpl
lcall
sbb
sbbl
lret
mov
dec
mov
int3
int3
inc
std
call
pushl
mov
lret
or
jle
arpl
sbbb
add
jns
mov
xchg
sub
or
std
fsubrl
notl
ret
cld
mov
aam
or
sbb
rclb
add
repnz
shll
xor
nop
stc
inc
das
sbb
mov
push
cmc
out
lahf
mov
mov
cmp
imul
aaa
lds
dec
adc
mov
es
pop
stos
into
jg
pop
rol
mov
bound
pushf
shr
sbb
xor
nop
scas
inc
and
sbb
cli
xor
lea
dec
and
adc
or
outsl
or
adc
push
test
iret
push
shll
es
lods
jl
adc
les
loopne
fs
mov
arpl
scas
push
and
ret
or
mov
dec
addr16
mov
or
push
mov
test
daa
pop
stc
testb
push
and
aad
jmp
out
rcrb
rol
mov
mov
lock
cmpsl
lret
je
jb
in
jne
lret
mov
test
dec
cltd
insl
pop
cmpl
jbe
xor
out
pop
cmp
jae
jmp
mov
test
fxam
lds
int3
mov
pusha
out
aas
outsb
fmuls
mov
cmp
paddw
clc
rcll
rcrl
lock
pop
pop
push
mov
jmp
add
and
push
gs
and
pop
dec
ljmp
add
testb
lds
push
mov
xchg
mov
or
xchg
cld
and
dec
andb
xchg
xchg
or
xor
push
cld
lods
or
push
les
ja
jmp
push
push
add
mov
pop
jns
fs
push
aas
mov
popf
icebp
inc
aaa
insl
fs
je
cmpsl
xor
ja
push
out
sbb
clc
jae
cmp
rcll
or
jecxz
outsb
push
popf
idivl
incb
jmp
and
popf
cs
mov
jge
sahf
js
outsb
xchg
arpl
mov
lea
cmp
jbe
das
mov
iret
cli
test
imul
shrl
push
mov
pop
insb
jae
adc
sub
push
cmc
push
imul
push
inc
adc
fidivl
test
bound
jb
insb
and
and
add
cmp
xor
mov
cmp
xchg
adc
aad
movsl
and
sbb
insb
jae
or
mov
out
push
sti
sbb
outsb
aam
xchg
pop
jmp
imul
jns
cltd
fidivs
sbb
pusha
ja
pop
int3
push
sarl
mov
xor
xor
sahf
stc
adc
cmpsl
cmc
hlt
inc
in
pop
cld
hlt
sbb
repz
mov
sbb
push
xchg
fcom
std
aad
xor
arpl
pushf
add
cmp
add
push
movsl
lahf
ficoms
mov
hlt
lcall
js
xchg
jb
pop
imul
sbb
pop
jge
mov
jge
movsl
shll
fmul
iret
mov
mov
dec
outsb
bts
cld
jbe
sub
lock
outsl
dec
loopne
mov
popf
mov
cmp
and
xor
dec
sub
repz
jecxz
mov
mov
push
call
stos
movsl
pandn
sbb
xchg
mov
lret
jp
lret
in
jno
call
add
ret
es
jns
inc
and
xchg
fs
faddl
jle
push
cmp
and
mov
push
mov
lock
jne
xor
arpl
jecxz
les
idivl
pop
cmpsl
and
rorb
push
mov
pop
push
and
jne
push
orl
inc
dec
sbb
jo
arpl
imul
adc
adc
outsb
mov
enter
movsb
sbb
scas
inc
mov
insb
negl
mov
pop
jp
mov
out
test
outsb
lea
push
lret
sbb
out
rcrb
adc
sub
out
sti
cmp
or
and
xchg
fnsave
stos
dec
fnsave
pop
jns
push
xchg
lock
or
jno
int3
cld
shr
rep
rolb
pop
add
push
fsubrl
imul
into
pop
in
pop
lret
and
test
mov
es
add
inc
mov
pop
rcrb
or
stos
js
mov
mov
data16
push
lret
insb
std
push
daa
cltd
xchg
xchg
mov
mov
mov
lods
aaa
pop
arpl
push
jmp
jne
leave
int
jo
int3
xor
pop
lock
rcll
popf
ds
aas
insl
outsb
insb
outsl
lds
xor
inc
insb
jmp
es
xorl
test
lret
or
jle
scas
mov
push
movsl
gs
xlat
xchg
cmp
sub
add
mov
rcr
sub
imul
hlt
bound
jl
push
iret
sahf
insb
cmp
outsl
jae
xor
mov
loope
jg
xchg
mov
mov
scas
and
mov
mov
mov
je
or
and
dec
scas
test
jecxz
out
inc
scas
insb
push
lcall
std
daa
fisubrl
aaa
es
jns
jb
inc
daa
out
cmp
adc
pop
or
jno
add
or
fsub
jae
sti
sub
divb
jo
push
cwtl
addr16
sarb
pop
add
cli
xor
push
icebp
fsubrl
add
js
pop
and
sub
jo
and
mov
mov
sbb
or
or
pop
mov
mov
icebp
inc
jae
cltd
mov
popf
mov
sbb
add
sub
jno
or
mov
out
jb
daa
repz
mov
dec
fwait
xchg
push
xchg
lcall
adc
lret
cmp
add
pop
jbe
sub
jmp
addr16
les
and
lahf
mov
push
cli
lds
out
fs
ljmp
jae
insb
bound
inc
dec
jo
mov
push
adc
enter
sub
hlt
cld
jp
leave
sti
jle
das
jge
lods
call
mov
cmpsl
sub
or
ficoms
jo
test
arpl
stos
test
xlat
stc
ljmp
mov
jno
jae
subb
nop
inc
pop
imul
adc
inc
nop
rolb
inc
inc
ss
xor
sbb
mov
jnp
ret
in
lea
dec
xor
xchg
scas
dec
aam
aad
jo
pop
mov
nop
and
cs
mov
jo
in
push
add
sti
adc
inc
outsb
ds
je
ror
into
in
les
sahf
inc
jo
dec
adc
lahf
push
push
jb
fildll
es
arpl
les
ja
jb
repz
mov
jne
dec
adc
xchg
popf
jb
and
lock
out
pusha
jo
mov
cld
pop
leave
aaa
scas
rcr
in
ja
cltd
mov
rcrl
xlat
sahf
or
shlb
jne
sub
nopl
inc
insb
repnz
mov
dec
shlb
add
gs
repnz
jo
pop
outsl
imul
into
cmp
das
es
or
fcoms
inc
jo
stos
xchg
inc
sbb
imul
push
xor
aam
xorb
notl
dec
rol
jge
sbb
mov
mov
or
xorl
sbb
jnp
jno
or
scas
pop
add
and
loop
das
fs
cmp
aam
repnz
sbb
cmc
aaa
jo
pop
insl
in
es
nop
call
leave
jge
insb
push
jo
subb
xor
dec
push
and
hlt
scas
push
mov
jo
push
jo
adc
int3
sbb
sbb
pushf
dec
jg
sub
fs
and
jb
in
shrl
loope
out
shrb
fcomps
leave
jo
adc
roll
add
push
sbb
adc
in
or
loope
jo
fwait
push
xor
cmc
cmpsb
loop
std
lret
cltd
sub
ret
xchg
shrb
or
loopne
stc
andb
popa
popf
sahf
jo
pop
in
jl
mov
mov
xchg
adc
xchg
gs
jo
cmp
pop
in
jmp
sub
mov
or
lock
nop
dec
jle
in
cmp
clc
fdivrl
or
adc
iret
nop
subl
mov
xor
movsl
pop
jo
push
inc
pop
cmp
jb
lret
leave
push
push
out
add
shlb
dec
je
mov
loopne
pop
xor
scas
xor
setl
sub
or
jle
and
jo
invlpg
adc
jo
dec
fistps
lea
jae
inc
xchg
shll
js
jo
sub
cltd
jns
dec
icebp
jo
sbb
out
and
jno
mov
in
sbb
sub
loopne
fadd
mov
jo
cld
inc
outsl
data16
mov
push
movsl
pushf
mov
fwait
pop
enter
data16
xor
js
int
rclb
out
lea
hlt
adc
push
loopne
and
mov
lcall
call
jbe
in
divb
loope
mov
and
gs
roll
adc
mov
icebp
into
loopne
cld
pop
mov
dec
and
shll
mov
shll
fsubl
ljmp
hlt
sbb
or
jl
jno
inc
pop
dec
mov
or
xor
cs
sub
imul
push
lcall
adc
jo
mov
cli
pop
hlt
lcall
or
push
pushf
lret
sbb
xchg
clc
in
test
std
inc
imul
xchg
insb
push
mov
sbb
testl
jmp
jo
inc
dec
push
inc
jae
in
jo
adc
xor
gs
jae
xchg
ret
xchg
gs
jo
testb
bnd
out
sub
dec
in
jo
xchg
push
jo
pushf
add
daa
cmp
dec
lahf
inc
mov
xchg
dec
jge
or
jae
mov
cmp
rclb
sbb
movsl
jge
fcmovnb
mov
jo
shl
xchg
mov
aaa
lock
lcall
pop
insb
mov
insb
pusha
jo
pop
xchg
or
sahf
cmpl
push
jae
adc
jb
push
enter
aam
mov
cltd
out
push
jo
sbb
jo
push
cmp
pop
movsl
or
pop
sub
hlt
testl
push
jns
neg
mov
xor
mov
mov
jo
add
jo
imul
in
hlt
sbb
xchg
bound
leave
and
add
jle
pop
dec
into
ret
adc
and
ds
in
xor
into
jo
int
pop
out
jo
or
loope
or
mov
sbb
je
dec
fcoml
jo
pushl
push
mov
mov
scas
addb
out
or
mov
lock
xor
fs
das
add
mov
push
adc
pushf
dec
cmp
movsb
js
jbe
movsl
inc
xlat
push
inc
call
mov
shl
xor
fmuls
jmp
push
cmp
adc
or
call
sbbl
inc
aas
ss
sub
add
mov
cli
lahf
icebp
call
mov
mov
jo
jg
repz
or
out
test
adc
jp
jo
jae
jmp
imul
jle
push
test
mov
push
loop
dec
push
sti
enter
inc
cmp
pusha
pop
xchg
add
clc
sub
jno
push
sbb
lahf
iret
cmc
ret
cmp
jo
pop
loopne
add
jp
jo
mov
jns
jo
xor
insl
icebp
dec
movsb
call
rolb
cmp
loope
jo
pop
cltd
cmc
xor
push
aas
push
dec
lret
inc
jo
std
jns
mov
jne
jb
ret
popf
xchg
rorb
and
pop
pop
dec
je
int3
add
fmul
inc
inc
add
mov
jo
xchg
repz
dec
mov
shrb
xor
loop
in
dec
xchg
iret
es
gs
mov
ficoms
or
lods
push
sahf
adc
outsl
push
jl
leave
stc
mov
add
and
mov
mov
out
push
jo
pop
ja
subb
jo
cmp
pop
idiv
ds
adcl
pop
je
push
jo
adc
xchg
mov
bound
scas
in
jp
test
cmp
push
shrb
xchg
sub
add
out
xor
pop
jmp
jmp
jbe
push
or
sbb
add
sbb
push
jo
cltd
lds
loop
ds
cmpl
data16
jbe
push
mov
mov
lahf
add
int
push
adc
jl
int
inc
push
sar
fidivrl
imul
nop
pop
sbb
fistpll
andl
stc
mov
hlt
loope
inc
pop
jo
rcll
mov
cltd
jae
rcl
ret
pushf
int3
bound
push
cmpsl
jo
movsl
adc
shrl
or
pop
call
add
or
inc
ja
pop
insb
cmp
and
pop
dec
outsl
cmp
loope
pop
hlt
popf
or
out
data16
fstpl
cmp
jno
sub
lods
mov
repz
int3
rcrl
cmp
cmp
fld
lret
ficoms
in
sub
push
and
jbe
push
std
dec
clc
jns
mov
cmp
jbe
pop
jno
jb
scas
fisttpll
gs
pmullw
or
scas
ret
je
lret
in
pop
push
andb
frstor
cmp
or
push
das
arpl
daa
lea
lahf
ja
popa
push
ret
aad
mov
sbb
loopne
mov
sti
out
repnz
xchg
lock
push
cmp
adc
inc
dec
jb
pop
insb
pop
add
jns
jl
les
pop
shl
sub
out
lahf
cmp
inc
push
inc
mov
and
jae
int3
or
sbbb
mov
jmp
add
add
cmpsl
loope
out
sub
push
cld
xor
rorb
cmpsb
data16
or
push
bound
or
cmp
fnstcw
fstl
mov
in
sahf
sbb
lds
inc
fstps
pop
repz
sbb
sbb
dec
mov
jecxz
mov
xchg
or
adc
cmp
sub
sbb
xchg
stos
push
xchg
out
setbe
push
mov
in
jmp
pusha
fmuls
notl
jmp
inc
mov
pop
movsl
pop
or
std
sub
repnz
push
cltd
lahf
insb
mov
out
dec
add
or
enter
xchg
ja
imul
jp
xchg
xor
bound
test
repz
les
mov
in
cmp
jmp
pop
inc
outsb
loope
cli
jnp
das
xchg
das
adc
sbb
jl
xchg
mov
sahf
cmpb
sbb
repz
sbb
std
scas
xchg
shr
daa
lds
mov
adc
adc
shll
sub
mov
sahf
xor
jae
fimuls
xchg
lahf
shrl
inc
jg
inc
pop
mov
jns,pn
and
xchg
push
ret
push
jl
push
frstor
push
enter
pop
stos
rorb
cmpsb
shll
shr
pop
add
rolb
sub
gs
inc
xchg
dec
repz
adc
loopne
xor
movsl
ret
mov
jg
pushf
cmc
mov
push
outsl
push
inc
pop
lods
stos
dec
cmpsl
mov
loope
mov
jno
sahf
push
lret
mov
in
mov
mov
lret
outsl
jg
stos
sbb
js
and
jg
js
inc
je
xor
and
rcll
aaa
xor
imul
or
inc
in
add
std
add
int3
cmc
mov
shll
lock
cmpsl
lret
jbe
cmp
or
aam
insb
push
aas
cld
icebp
ds
es
push
shll
fs
push
cmp
stos
or
xchg
insb
leave
inc
int3
lahf
in
pop
mov
in
scas
mov
popf
lods
mov
cli
loope
mov
push
jb
loop
push
sub
scas
ja
adc
out
mov
cmp
inc
jbe
push
mov
jle
arpl
pop
or
cmpsl
mov
movsb
inc
in
jmp
sbbb
jle
lock
cmp
fwait
inc
xor
lds
sub
pop
adc
insb
jo
cltd
push
dec
pop
push
cmp
jle
out
inc
sub
mov
into
insl
out
scas
jl
adc
ss
pop
and
push
loop
ds
mov
lahf
or
xchg
out
pop
out
push
aad
fwait
lea
mov
aam
loopne
xor
and
mov
jge
sub
repnz
jo
int3
enter
push
dec
loopne
dec
lea
mov
xchg
push
jae
jecxz
inc
cld
sarb
ljmp
push
mov
jno
push
je
xor
mov
pop
insb
xor
nop
arpl
je
dec
adc
xchg
inc
out
cmp
outsl
jl
dec
dec
aad
jge
out
ljmp
jmp
or
ret
pop
cmpsb
pusha
arpl
out
movsl
pop
pop
outsb
fs
xchg
lahf
dec
mov
mov
aam
mov
push
outsl
outsl
stc
jmp
dec
jb
push
xchg
sub
add
xchg
adc
int3
sbb
outsb
enter
repz
addr16
loopne
dec
push
sub
add
cmp
inc
fs
je
jo
pop
sub
push
or
out
mov
jo
rolb
jnp
jp
jo
or
lahf
es
jno
add
int
cmp
stos
sub
aaa
push
dec
mov
imul
sti
lea
xor
arpl
inc
ljmp
popa
xchg
nop
scas
cmpsb
sub
jbe
lahf
jo
push
sbb
xchg
jo
pop
movsb
sbb
lcall
imul
jge
inc
xor
jo
or
adc
jle
out
ret
push
adc
fcomps
lds
std
mov
sarb
cmc
loope
addr16
psubsb
imul
lret
or
lods
mov
aam
aad
push
test
scas
push
insl
lock
pop
aas
jle
jae
lds
inc
scas
out
xchg
in
loope
shrl
mov
jns
and
shll
popl
lods
adc
sbb
cld
movsb
jecxz
lds
outsb
jp
ret
popf
inc
pop
sbbb
or
cli
mov
pop
xor
sub
jle
pop
movsl
adcl
push
sbb
push
popa
ljmp
xor
cmpsl
scas
cmp
mov
sarb
adc
mov
push
test
xchg
loop
lahf
stc
in
popa
inc
adc
push
push
test
std
outsl
cmpsl
rcl
ret
out
out
push
xchg
dec
push
test
jle
imul
loop
push
cmp
test
jb
inc
jp
sbb
lret
hlt
add
mov
out
std
lods
pushf
ret
sub
pop
mov
push
jl
and
push
repz
xchg
mov
sub
lods
sahf
add
jb
sbb
mov
lahf
mov
xorl
mov
inc
lcall
adc
jbe
lret
xor
fisubl
sbb
xchg
and
pop
adc
pop
jns
jae
inc
push
jnp
fistps
sbb
pop
outsb
push
pop
insl
faddl
loop
cltd
loop
cli
add
sub
and
mov
out
roll
add
adc
jb
dec
dec
rorb
test
dec
mov
adcl
insb
out
xor
mov
xchg
or
xchg
aas
jae
je
dec
push
add
lock
add
pop
jmp
or
outsb
sbb
icebp
sbb
cmpsl
inc
int3
fwait
insl
add
push
sbb
aad
mov
adc
mov
clc
add
cmp
or
popa
loopne
or
add
in
cmp
and
push
xor
nop
pop
std
ds
mov
dec
dec
scas
or
or
std
loopne
fidivl
jb
push
test
xchg
xchg
and
push
sbb
rcrb
stc
imul
movsl
and
jae
ret
out
jge
xchg
jle
dec
lock
xchg
push
outsl
pop
inc
mov
loopne
jbe
stos
add
dec
arpl
aam
add
test
fildl
dec
lods
pop
mov
inc
jecxz
insb
mov
rcll
jmp
push
sub
std
sbb
adc
inc
cmpsb
xor
pusha
jge
sub
adc
icebp
les
jbe
cmp
inc
mov
repnz
ret
icebp
sub
lret
pop
data16
jg
mov
daa
push
dec
mov
arpl
push
add
aad
xor
and
rolb
test
ljmp
xor
mov
cwtl
xor
cmp
ljmp
es
es
jb
pop
xchg
dec
je
add
imul
mov
mov
pop
dec
jo
in
mov
cmpsl
jp
mov
push
fstpl
or
xor
es
push
ret
xor
mov
lret
aad
mov
jl
xchg
jle
cs
cmp
ljmp
inc
ud0
mov
and
dec
add
rep
mov
bound
xchg
imul
idivl
mov
enter
arpl
lahf
dec
cmpsb
repz
push
mov
daa
push
cmpsl
dec
mov
jae
inc
add
xchg
jmp
movsl
mov
sar
add
or
clc
hlt
js
fldcw
inc
inc
arpl
hlt
movsl
int
adc
divb
push
and
push
lock
loope
lcall
call
cwtl
sbb
dec
pop
loop
ljmp
jmp
mov
nop
pop
mov
mov
clc
dec
xchg
xor
dec
das
adc
rcrl
fsubs
adc
xchg
lds
pop
push
movsb
in
sbb
pop
mov
es
cmp
cld
bound
inc
stos
sti
xchg
dec
push
pop
nop
into
inc
jle
sub
lods
push
dec
imul
out
xchg
pmaddwd
clc
sbb
out
cli
idivb
or
and
push
xor
pusha
out
mov
mov
in
xchg
shr
mov
cltd
and
lea
sub
sbb
lods
dec
call
cmp
dec
insb
push
movsb
mov
pop
shlb
arpl
in
inc
xor
je
dec
sbb
es
jne
sub
pop
or
out
jp
xchg
adc
mov
jo
fucomip
repnz
movsl
out
outsl
pop
mov
cmpsb
push
mov
and
push
inc
rorl
cmpsb
aas
pop
jae
xor
xor
scas
frstor
cli
fstps
arpl
xorb
or
mov
jle
test
scas
adc
push
cmp
mov
mov
push
clc
push
into
adc
icebp
xchg
sub
lahf
sbb
test
fs
push
jle
cwtl
fiaddl
add
pop
fwait
mov
lods
mov
daa
frstor
cmp
push
std
cmp
nop
mov
mov
jp
dec
and
call
es
stos
test
jae
scas
inc
mov
push
ret
mov
fnstsw
rclb
adc
leave
jns
mov
adc
flds
cs
nop
fildl
data16
fwait
rcrl
sti
lock
mov
add
mov
jle
fistps
out
fisubrs
sbb
mov
nop
mov
and
fucomip
out
insb
icebp
mov
xor
inc
fildll
jae
into
jle
in
mov
sahf
add
jae
fdivrl
pop
js
or
pop
popa
mov
stos
stc
lods
push
je
xchg
xchg
cmpsl
xchg
rorb
inc
pop
jl
add
lock
cmp
push
call
bswap
xchg
fsubl
mov
jecxz
jns
add
jo
push
rorb
cld
js
outsl
std
mov
scas
mov
cwtl
test
arpl
scas
jmp
fwait
and
mov
rcll
add
outsl
mov
mov
loope
bound
add
out
sub
pop
inc
ss
icebp
inc
ja
lock
mov
or
setns
cmp
or
stos
insb
or
pop
jmp
fists
push
loop
dec
push
stc
jmp
insl
setae
out
adc
bound
or
or
mov
xchg
inc
inc
inc
mov
pop
rorl
dec
gs
push
repz
sub
dec
sub
xor
dec
int
inc
cmp
test
jae
mov
mov
jns
inc
lds
std
jp
inc
mov
shl
mov
mov
pop
out
add
ljmp
xchg
pop
lret
mov
aad
int
mov
jne
stos
push
imul
shlb
mov
lds
insb
push
call
movb
test
rolb
addr16
push
push
in
mov
test
jb
and
loop
push
call
jae
lea
xchg
xor
aam
jae
repz
fdivl
mov
cmpsb
notb
cmp
add
js
dec
xchg
lret
fld
push
dec
pusha
movsb
xor
repnz
lahf
sbb
jecxz
or
fwait
ja
push
and
rolb
pop
negl
scas
cmp
data16
xchg
in
arpl
into
scas
add
mov
mov
js
push
jmp
cmpsl
mov
inc
dec
cmp
sub
cmp
cs
or
flds
push
mov
fdivrs
sub
icebp
dec
in
das
push
cmp
std
xor
fcomp
insb
pop
in
stos
mov
cs
cmc
push
scas
cli
adc
sbb
gs
out
jno
inc
mov
or
daa
es
movsl
loopne
mov
sbb
pushf
lret
into
icebp
fsubrl
sub
inc
add
lds
sbb
push
lods
jns
outsl
xchg
sub
je
mov
mov
scas
sbb
mov
popf
movsl
mov
and
push
ret
jl
ljmp
pop
sbb
repnz
dec
aad
add
mov
std
sbb
push
dec
pop
sti
test
mov
inc
rorb
sub
push
cmp
xchg
jae
sbb
mov
push
mov
push
adc
bnd
rorl
adc
sub
mov
push
icebp
and
jo
jmp
scas
pop
or
inc
or
dec
mov
xchg
inc
fsubrl
jp
pop
jns
inc
bound
lods
imul
and
mov
cmc
xchg
adc
lret
faddl
cmpsl
xchg
pusha
mov
clc
das
push
cmc
dec
int3
inc
add
mov
cs
push
jae
mov
repnz
xchg
xor
sbb
je
mov
pop
insl
aad
or
jae
mov
jl
mov
mov
rcrb
xchg
xor
push
jp
in
xchg
inc
pop
ret
in
mov
out
shlb
pop
pop
hlt
loope
lret
aad
adc
fsubl
jp
sbb
fisttpl
imul
xchg
jmp
sub
pushf
aaa
or
and
enter
das
add
pusha
jbe
pop
or
shr
push
push
lret
mov
pop
shll
popf
add
xor
xlat
adc
test
adc
cmp
test
imull
jnp
shlb
add
pop
xor
fsubl
fistpll
sbb
les
movsb
gs
inc
push
int3
nop
sbb
xchg
jae
cmpsb
rcl
scas
outsl
popa
sub
aaa
into
xchg
fbld
js
jp
dec
pop
stc
xchg
sbb
test
vmovupd
pop
sbb
out
pop
std
inc
fisubrs
sub
push
int3
and
pusha
jo
aas
pop
movsb
inc
scas
and
mov
shlb
xchg
sbb
lahf
jecxz
movsl
jle
mov
lret
pop
mov
jl
fldcw
mov
ja
jg
jne
xor
jnp
inc
mov
clc
add
outsl
insl
xchg
xor
push
mov
lock
push
xor
or
jge
vpsrad
push
imul
add
jge
outsb
mov
int3
and
adc
mov
imul
test
or
push
scas
or
push
ret
sub
xchg
cmp
andb
and
jle
ja
cmp
mov
pop
lods
rorl
push
mov
jl
shrb
cmpsb
sub
cmpsl
stc
mov
std
test
xchg
mov
idiv
mov
push
stos
jecxz
pop
or
iret
push
xchg
dec
cmp
adc
and
jecxz
sub
loope
adc
cmpsl
jae
mov
fimull
loop
push
stos
icebp
cld
xchg
cld
fidivs
mov
mov
testb
pop
dec
ja
add
pop
sti
test
jae
and
and
les
sub
fwait
jg
xchg
mov
pusha
pop
arpl
or
or
fisubrl
lods
cmp
cmc
cmp
fcom
mov
mov
movsl
adc
jae
inc
lods
bound
push
xchg
push
aas
fstpt
dec
out
dec
dec
sbb
mov
test
inc
test
sbb
jbe
xor
adc
adc
dec
in
sbb
out
pop
sbb
jp
scas
dec
roll
xchg
push
push
xor
inc
std
out
mov
lock
lock
mov
fadds
mov
dec
push
fidivrs
mov
inc
inc
outsl
sbb
lret
rcl
aas
pop
jg
aaa
and
imul
pushf
pushf
cmp
add
nop
lret
jle
in
jge
adcl
outsl
data16
out
jns
or
ret
test
add
mov
push
push
xchg
in
xor
dec
fsubrs
mov
movsb
into
gs
ja
scas
pop
cmpsl
mov
outsl
pusha
fsts
mov
adc
arpl
jg
cmp
cmp
add
jmp
jmp
mov
mov
xchg
inc
mov
mov
int
and
jmp
popf
loopne
mov
push
arpl
out
cmp
pop
jno
cli
jne
dec
mov
inc
jecxz
shll
sub
cltd
fidivl
lods
subb
push
sub
xor
fwait
ss
shrl
cmp
outsl
push
mov
inc
stc
push
dec
mov
sub
pop
mov
mov
in
sbb
lea
ficoml
xor
test
out
and
movsl
arpl
mov
pushf
dec
hlt
inc
loopne
movsb
adc
push
xchg
cli
sub
mov
movsl
cmpsb
push
outsb
sub
lret
hlt
xor
repnz
xor
dec
scas
jbe
xchg
nop
cmp
xchg
ljmp
pusha
mov
inc
xchg
or
mov
arpl
pop
mov
arpl
pop
imulb
mov
nop
mov
sbb
jno
push
and
loopne
xchg
ja
imulb
addr16
das
cmp
sub
pop
sbb
int3
clc
std
xor
xchg
or
scas
sbb
data16
jge
insl
push
lret
int
ja
adcb
push
loopne
jae
adc
or
mov
dec
or
add
arpl
adc
fstp
jns
int3
push
stos
mov
sbb
lds
sbb
movsl
inc
shll
or
jbe
jmp
fisttpll
jae
rorl
loopne
std
out
jl
push
fwait
sarb
and
lret
jne
pop
sbb
add
xor
shrl
imul
mov
sbb
push
mov
add
cmp
and
sbb
push
shll
nop
mov
mov
shlb
push
mov
ret
aaa
stos
aaa
mov
sbbb
loopne
sbb
fldcw
sbb
cmpsl
xor
add
in
shlb
ja
out
mov
int
in
xlat
xorb
nop
clc
xchg
fwait
pop
ret
leave
push
cmp
out
arpl
mov
mov
push
or
mov
std
jo
sbb
cltd
es
dec
dec
ss
es
mov
xor
or
es
sbb
jge
and
int3
insb
mov
push
lret
push
pop
cld
nop
hlt
and
je
and
push
ret
or
mov
xor
je
insl
cmp
push
xor
mov
mov
jge
dec
lock
sahf
in
sbb
jo
test
flds
adc
mov
je
jo
int3
mov
les
pop
mov
nop
sbb
inc
sub
int3
or
sub
out
mov
in
fistpl
inc
adc
lods
mov
jge
nop
mov
insb
int3
cmp
mov
cwtl
loope
mov
sub
dec
mov
push
push
adc
add
cmovp
lods
loope
mov
rclb
aam
fcompl
fs
mov
adc
rorb
cmp
jle
add
mov
dec
mov
subb
adcb
xor
jnp
lds
ret
fbstp
js
mov
jo
loope
or
jno
push
jb
add
lcall
cmp
cmp
mov
push
lods
out
mov
adc
and
jo
add
add
jo
and
cmp
insb
out
nop
jg
shl
fwait
jp
pop
jnp
js
cs
rcll
divb
dec
mov
mov
aaa
cmpsl
ret
xchg
mov
cmp
jge
mov
cltd
push
adc
movsb
jle
jo
mov
xor
je
push
jae
xor
add
rcll
js
xor
insl
out
jo
imul
jg
or
icebp
das
push
inc
push
jo
and
mov
cmc
mov
rorb
inc
popf
jo
stos
sbb
idivb
gs
cmpl
push
in
jmp
lcall
popw
mov
outsb
ret
xor
in
lahf
jmp
es
mov
ds
jo
cmp
add
popa
out
jo
lock
loop
jo
fstpl
outsl
mov
push
pop
insl
test
xchg
jo
xchg
or
jo
mov
jo
stos
sbb
and
push
add
out
jo
push
je
sbb
pusha
mov
shll
jo
fisttpll
enter
jo
ret
scas
add
pop
jo
mov
faddl
imul
push
mov
cmpsl
push
and
xor
outsb
adc
test
jb
movb
ds
xchg
sti
call
repnz
jp
pushf
or
dec
inc
push
mov
mov
xchg
or
pop
arpl
adc
into
jp
xor
iret
testl
add
add
subb
jo
cltd
cmpsb
xchg
xor
sbb
jo
movsb
add
leave
imul
cwtl
insl
adc
jns
in
sbb
mov
pop
pop
xchg
inc
adc
push
mov
adc
sub
mov
in
test
lods
fldcw
add
jo
je
pop
sub
arpl
ret
mov
iret
mov
mov
jge
sti
sub
cmp
fbstp
lcall
fldz
xchg
scas
shll
pusha
fsubl
ss
jg
test
lcall
inc
cmp
jo
xchg
pop
and
or
mov
lretw
lea
mov
adc
push
jo
into
sub
pop
addr16
mov
add
daa
aaa
sub
pop
andb
addr16
push
sbbl
movsb
sub
sub
insb
cmp
mov
push
ret
test
pusha
mov
ret
das
ret
dec
sbbb
divl
movsb
and
jbe
loop
in
into
mov
ficompl
cmp
jp
repnz
mov
jo
dec
out
roll
or
or
cli
xor
adc
pop
add
fnsave
fnstenv
adc
dec
jecxz
std
and
es
jo
test
arpl
jo
add
in
mov
insb
and
out
or
maskmovq
daa
addr16
adcb
dec
adc
or
mov
mov
cmpsb
mov
fs
adc
sbb
pop
cmpsl
inc
icebp
sarb
push
sti
and
mov
lret
adc
xchg
mov
xor
add
xor
es
xchg
arpl
add
aam
push
mov
jo
insb
js
enter
xor
jo
pop
push
les
jae
dec
sbb
jecxz
sti
pop
call
adc
shll
mov
orl
imul
jo
js
aad
sub
push
push
push
push
mov
mov
push
or
testb
adc
arpl
fnstcw
push
xchg
inc
insb
out
pop
jnp
jo
roll
mov
jge
push
bswap
or
fcoms
cmpl
data16
jge
cwtl
lds
fs
pop
cmp
sub
insb
popa
andb
es
daa
int
sbb
mov
jnp
fistps
xchg
test
jge
mov
jo
jmp
xor
xor
lret
add
lahf
popa
test
fwait
jo
sub
clc
sub
gs
push
aaa
cli
stos
je
inc
adc
xor
into
add
pop
sbb
leave
ja
ds
cwtl
push
dec
mov
xor
into
dec
outsb
nop
fimull
sbb
push
cld
xor
je
hlt
ret
rcll
add
fs
jo
add
clc
lret
inc
jo
jno
enter
pop
jo
sub
push
pusha
jecxz
jo
push
sub
jo
push
sti
inc
add
mov
xor
in
mov
cmpsl
scas
push
int
lret
les
mov
jmp
mov
jo
loopne
mov
icebp
outsl
cs
xor
je
js
jle
mov
es
pop
negl
leave
mov
dec
push
add
test
sub
mov
je
ficompl
and
rorl
ret
jo
mov
cli
ret
scas
jmp
mov
push
js
js
dec
pusha
push
nop
dec
xorl
mov
sti
push
mov
push
stc
add
pushf
push
fsub
pop
sub
dec
xchg
jbe
pop
sub
or
scas
mov
shl
fs
ret
jns
jo
add
sbb
xor
nop
mov
in
pushf
jp
and
lea
fnsave
or
dec
inc
call
repnz
iret
jge
push
jmp
mov
out
cmp
sbb
lea
mov
jo
ficoms
test
cs
dec
inc
adc
jo
jg
jbe
mov
rcl
scas
pop
pop
out
adcb
cmp
scas
jmp
test
shl
in
out
mull
mov
cmp
mov
pushf
mov
pop
addb
and
push
xchg
sub
pop
push
ss
mov
idivb
inc
test
jno
pop
ljmp
jo
call
mov
mov
lods
or
clc
shr
psadbw
push
jo
xlat
shl
pop
jo
mov
dec
int3
jo
outsl
push
xor
adc
jo
and
mov
sub
ja
dec
mov
pushl
out
aas
fiadds
shr
jo
stos
nop
add
repnz
into
push
mov
ret
movsl
arpl
cmp
sbb
push
and
jo
out
jle
outsb
call
add
jo
and
push
jmp
out
dec
jo
mov
fistps
int
ret
jo
mov
mov
pop
cwtl
pusha
imul
dec
into
sbb
stos
mov
jno
lea
mov
ret
lret
xchg
cmp
stc
or
mov
insl
inc
out
add
add
jo
push
popa
fisubl
and
icebp
xchg
and
push
sbb
fldenv
push
adc
in
jle
push
clc
mov
arpl
or
push
in
inc
pop
cmp
jo
mov
inc
arpl
xor
or
sub
dec
mov
mov
aad
jo
pop
movsl
es
dec
add
dec
push
insl
mov
jns
mov
fstl
clc
mov
rorb
outsb
sbb
pop
push
out
mov
mov
out
jo
add
xchg
rolb
je
jno
movsl
adc
xor
test
roll
xor
dec
out
mov
jno
jo
inc
sti
xchg
push
push
mov
jle
adc
scas
das
push
repnz
movsl
jo
loope
pop
repz
punpckhbw
cmp
dec
push
enter
sub
xchg
xchg
jo
dec
mov
lret
mov
js
leave
out
cmp
rep
xchg
or
mov
dec
mov
push
push
ret
cmpsl
mov
jl
cli
orb
bnd
jb
mov
jg
xor
push
mov
sub
push
xchg
insb
mov
rolb
xchg
mov
and
pop
push
cmp
inc
sub
jne
jo
mov
cmpsl
ret
imul
sbb
mov
mov
or
hlt
pop
lcall
stos
sub
or
jo
aad
pop
clc
jb
xor
sbb
into
jmp
repnz
aaa
push
ret
scas
jb
mov
ss
add
adcb
nop
ficoml
adcl
scas
cmpsb
mov
fs
jno
pop
jo
cli
insb
cwtl
in
ljmp
jmp
jmp
andb
xchg
xchg
je
test
push
mov
loopne
jo
pop
sub
push
lret
nop
and
icebp
jno
add
jl
mov
jo
push
stos
icebp
daa
outsb
dec
test
sub
xor
insb
enter
popa
adc
inc
les
push
js
xor
inc
xor
ds
shlb
into
mov
jo
xor
lret
sub
daa
das
cmpsl
and
jl
mov
ja
iret
dec
jnp
insl
imul
pop
adc
add
in
shll
leave
cmpsl
cmp
or
in
inc
pop
cs
dec
pop
inc
js
cmp
mov
test
aam
cmp
inc
stos
jo
scas
cltd
out
jle
leave
xchg
addb
cmpsb
ficoml
sub
push
xor
cwtl
jge
into
fwait
je
cmp
sbb
push
std
add
and
adc
adc
jo
lods
xchg
inc
or
jnp
jo
sub
and
addr16
dec
lahf
dec
imul
sbb
lock
push
mov
cmp
ds
adc
cmp
mov
js
in
push
ret
jl
out
test
jo
std
xor
sub
cmpsl
icebp
mov
adc
jo
mov
dec
shrl
mov
imul
mov
sbb
pop
mov
add
sub
sbb
lret
hlt
ja
push
movsl
jo
js
jp
sbb
ja
test
jnp
jns
inc
jg
inc
icebp
adc
imul
ss
adc
mov
pop
jo
xchg
jp
or
clc
xor
in
pop
inc
lcall
sbb
xchg
push
lahf
jo
or
fdivl
into
nop
test
jg
divb
hlt
or
lahf
mov
pushf
push
sarl
adc
jp
jle
jo
stos
imul
aad
fcmovne
jbe
mov
dec
inc
pop
jecxz
mov
orl
or
sub
xchg
add
sbb
js
insb
pop
sub
jns
andb
sbb
sbbl
jo
test
jo
int3
pop
subb
call
mov
jl
mov
sub
jecxz
out
cmp
aam
ret
mov
lea
shlb
mov
or
jo
fldenv
dec
add
sbb
push
mov
or
and
hlt
aam
lock
pop
or
imull
jo
mov
dec
push
lock
stos
sub
imul
lret
dec
push
push
jo
cmp
jo
xchg
mov
xor
lods
dec
inc
mov
dec
pop
push
dec
jne
jbe
into
aaa
jo
rclb
subb
imul
rdpmc
gs
inc
outsw
adc
inc
jo
mov
jg
and
subb
cli
loope
fldenv
jl
inc
inc
lcall
xchg
jo
mov
pop
xchg
jmp
push
push
mov
addl
xlat
cld
jo
sbb
pushl
dec
cmp
cmp
js
push
push
int3
jo
fs
add
cwtl
js
xchg
in
or
pop
test
push
jo
stc
or
loopne
xlat
and
shlb
mov
lods
clc
push
into
mov
lcall
andl
cmp
cld
loopne
ret
in
cmpsb
xchg
jo
xlat
push
fmul
ljmp
sub
ja
mov
pop
or
jo
sbb
daa
in
repz
jo
pop
pop
jne
mov
andb
subb
cs
bnd
lcall
divl
adc
mov
sarb
shlb
es
fimuls
push
fisubl
pop
cmpsl
jo
mov
ljmp
xchg
aad
push
pushf
pop
movnti
aas
sbb
cld
notb
je
mov
inc
jo
stc
lock
sbb
icebp
es
lahf
adc
lret
imul
lcall
addr16
inc
mov
out
pop
sbb
jae
adc
lret
mov
jo
ret
push
xchg
mov
adc
clc
jo
add
aas
jb
cmp
lock
xchg
push
jo
fs
push
jo
pop
or
mov
cwtl
xor
jbe
jb
loopne
mov
aas
lret
mov
loope
not
jo
push
int3
xchg
add
popa
les
cmp
lea
jo
aam
xchg
clc
out
push
mov
cmpsb
insl
xchg
stos
iret
sub
test
repnz
jo
fwait
pop
xchg
xor
out
nop
out
sub
loopne
shr
call
and
cmc
xchg
iret
jo
mov
imul
repnz
cs
inc
lret
insl
sub
out
fdivl
out
mov
jo
rcrl
int
scas
aaa
cwtl
or
cs
imul
mov
arpl
cltd
mov
jo
int
ret
mov
xchg
lcall
cmp
mov
nop
sbb
orb
shll
mov
jno
test
pop
inc
sub
jo
push
adc
inc
lods
mov
jo
dec
dec
imul
movsl
add
fwait
mov
add
nop
cmpl
jae
xor
and
dec
add
ja
fildl
inc
xlat
sub
xor
movsl
and
jle
inc
rolb
jne
in
mov
or
jo
pop
and
jp
loope
jo
jno
xor
lahf
add
imul
jns
jl
pushf
mov
or
jo
daa
xchg
cltd
cmpsb
call
xor
xchg
add
ror
mov
add
push
xchg
wrmsr
gs
das
mov
add
dec
jo
in
jne
out
icebp
sub
repz
enter
ret
rol
or
aad
lods
imul
shlb
into
jno
rorb
leave
cmpsb
mov
mov
shrb
add
adc
jp
add
mov
ss
pmovmskb
inc
jbe
je
mov
jp
or
sub
lret
jae
aaa
imul
pushl
pop
lods
add
sub
xchg
nop
mov
fwait
jae
imul
outsb
jno
fidivs
or
pop
inc
xchg
mov
add
mov
jns
enter
ret
inc
dec
je
and
add
lds
popf
dec
xchg
push
rcrb
fnstenv
mov
subl
loop
js
int
push
jae
sbb
out
mov
shlb
mov
adcb
pop
jmp
insb
stc
and
enter
std
clc
sti
or
mov
pop
push
in
push
mov
push
sbb
mov
mov
xor
xchg
jbe
push
inc
dec
xchg
pusha
jno
ds
add
sbb
xchg
mov
push
fs
leave
je
add
fisubs
pop
and
gs
cwtl
cmp
cmc
cmp
gs
jae,pn
movsl
adc
sbb
fcoms
jp
lahf
cmp
lret
jg
jae
sbb
out
sub
lcall
and
xorl
sub
stos
cmp
fcomps
fldl
testb
xchg
xchg
sbb
rorb
inc
inc
jnp
xchg
dec
push
aad
sub
xchg
sub
shrb
pusha
maxps
jnp
push
imul
push
arpl
sbb
jg
adc
cmp
xor
jae
cwtl
addl
push
jae
sbb
inc
repz
and
movsl
out
mov
push
adc
pop
fisubrl
stc
out
lahf
sbb
inc
std
xlat
pusha
mov
rcrl
movsl
ret
xor
push
pop
jmp
xor
xchg
sahf
ret
icebp
xor
sahf
scas
push
xchg
cld
and
inc
insl
movsl
cmp
xchg
out
add
rcr
xor
add
and
daa
ja
sbb
nop
imul
jl
cmpsl
mov
in
mov
pusha
das
ljmp
imul
mov
mov
fs
rcr
lahf
push
push
inc
jno
inc
and
shrl
test
sbb
ret
fisubrl
mov
nop
sbb
int3
divb
sbbb
lcall
mov
mov
and
cli
push
arpl
cmpb
imul
cmpsb
data16
inc
nop
mov
dec
push
and
mov
push
xor
inc
movsb
in
mov
sbb
daa
mov
bswap
sbb
repnz
rol
testb
out
or
fisubrl
mov
ss
add
mov
shl
lahf
cld
add
aam
lahf
arpl
jb
inc
jecxz
mov
rolb
or
xor
shlb
stos
rcrl
call
insb
ljmp
ret
mov
lea
or
cmp
mov
pushl
mov
mov
insl
xchg
mov
xchg
insb
push
sbb
fs
xor
shrb
shll
fistps
mov
adc
add
mov
or
jge
cltd
int3
nop
das
fildl
pop
cmp
jmp
fsts
xor
pop
push
inc
int
jl
jae
movsb
hlt
jp
mov
icebp
xchg
gs
or
ljmp
test
movsl
out
jge
shlb
sub
inc
jge
push
mov
test
rcr
pop
inc
aas
jns
jp
jmp
pop
ljmp
fwait
scas
std
xor
rorb
mov
sub
dec
fisubl
inc
mov
call
or
popa
cmpsb
xor
insl
push
loopne
mov
dec
push
push
call
popf
clc
pop
adc
sub
cmc
orb
fsubs
add
sub
test
adc
jmp
mov
lds
dec
clc
cmp
push
inc
adc
inc
or
icebp
roll
sahf
inc
and
cmp
int3
adc
fnstsw
mov
dec
or
lret
cmpl
add
pop
fiadds
inc
nop
shrl
xchg
ljmp
xlat
in
adc
pop
bound
jl
mov
add
xor
lahf
into
pushf
jle
popf
sub
popa
cli
out
flds
jbe
add
insl
addb
and
xor
stos
fistps
lret
push
jne
mov
imul
in
enter
fldcw
mov
xor
test
cwtl
jle
ljmp
cld
mov
mov
push
arpl
nop
inc
call
pop
and
cmp
or
stos
aas
outsl
inc
and
loop
call
rorl
add
les
mov
push
xchg
arpl
movsb
sbb
push
std
dec
jae
xchg
fsubs
xor
sub
xchg
daa
aam
pop
cmpsb
les
outsl
cmp
xchg
stc
and
int3
gs
sbb
addr16
ss
xchg
or
hlt
daa
stos
lods
mov
adc
inc
call
mov
repnz
xchg
mov
lds
repz
xchg
sub
mov
fstps
test
jo
sahf
stos
mov
cmc
jo
lret
and
shlb
stos
cmp
jo
repnz
jg
adc
xchg
leave
inc
sub
mov
lcall
xor
aam
lret
pop
adc
mov
jo
inc
mov
pop
dec
mov
jg
cs
jne
sbb
mulb
push
xor
cmpsl
popa
push
imul
loopne
add
adc
mov
outsl
fs
mov
jns
cs
cmp
int
mov
and
cld
mov
xchg
jmp
test
rclb
cmp
sbb
into
nop
mov
popa
js
out
js
dec
loop
dec
adc
addr16
orl
sub
lahf
jae
shl
mov
call
aad
jo
pop
ljmp
sahf
dec
test
or
in
and
xor
pop
dec
jo
nop
or
aad
stos
and
jo
sub
mov
test
pop
inc
clc
mov
add
shlb
fimuls
sub
dec
sarl
jp
daa
ret
imul
mov
push
rorl
js
shlb
xchg
enter
les
mov
loop
push
leave
insb
jo
stos
cmp
jl
and
cmpb
rorl
pop
loope
sarb
inc
push
xchg
pop
cmp
mov
jo
fsts
arpl
xor
daa
inc
adc
pop
jo
cltd
jmp
and
sti
dec
jo
cmpl
add
jno
jo
fildl
push
test
aaa
mov
jb
popf
push
dec
sub
jo
mov
xor
nop
lds
in
nop
xchg
call
lret
adc
dec
push
inc
mov
mov
pop
jo
rcrb
cwtl
jmp
jo
sub
xchg
push
or
ss
out
jle
cld
pop
jmp
push
cmp
cmpsl
inc
sbb
adc
xor
adc
sub
jl
sarb
mov
or
xor
jmp
xchg
mov
pop
adcl
insb
inc
ret
mov
push
fldcw
cmp
lahf
out
std
ss
cmc
push
and
loopne
mov
and
imul
mov
imul
jne
jp
repz
cs
jns
sbb
js
test
sbb
and
std
jo
pusha
rep
cmp
xlat
jo
pop
or
call
imul
jge
int3
push
fprem
fbstp
popf
lcall
mov
dec
iret
andl
jo
adc
add
pop
pusha
jg
lock
test
dec
push
jnp
movsb
outsb
mov
ficomps
daa
xorb
and
test
dec
movzwl
pop
inc
mov
lds
and
xor
nop
mov
mov
adc
inc
lcall
lret
jp
aam
push
or
out
stos
dec
mov
xor
js
ret
out
mov
mov
dec
mov
adc
jo,pn
sbb
stos
adcl
mov
push
ja
xor
sbb
mov
add
add
xor
sub
jl
fistl
jo
mov
dec
cmp
push
shlb
aaa
sub
insb
inc
aad
shlb
pop
mov
test
lahf
mov
ja
adcb
sub
jmp
and
adc
push
pop
imul
mov
pop
jo
lods
and
dec
pusha
lcall
pushf
pushf
lea
or
xchg
outsl
sub
xlat
repnz
pop
jo
enter
cmp
cmp
test
jne
mov
push
jo
leave
fwait
and
inc
add
mov
mov
push
fs
mov
adc
xor
ret
inc
xchg
mov
dec
out
and
ret
xchg
cmpsb
cltd
mov
mov
cmc
insb
xor
jo
je
adc
push
out
mov
jae
into
push
jo
push
pop
mov
jo
negb
pop
leave
jne
adcb
aam
cmp
in
imulb
add
jb
jbe
addb
int3
popf
iret
ja
adc
jo
inc
dec
cwtl
scas
pop
jnp
nop
mov
jo
push
mov
jg
imul
pushl
push
ja
enter
add
sbb
mov
jmp
mov
xor
push
faddl
ss
psrld
jo
or
into
pop
add
in
insl
jo
fadds
jno
cs
jo
xor
fistpl
movl
mov
jo
leave
je
jo
or
out
popf
or
sub
jmp
adc
xchg
lods
cmp
mov
xchg
sub
clc
jo
js
rorl
and
xor
pop
pop
jo
aaa
mov
sub
mov
lods
jb
mov
sbb
fwait
insb
into
or
xchg
jae
push
mov
inc
cmpsb
pop
lods
shlb
repz
aam
scas
lret
inc
data16
dec
pop
iret
fmuls
std
jo
or
mov
aaa
sbb
push
aas
rcrb
js
mov
adc
nop
xchg
jo
loope
add
adc
stc
out
sti
or
dec
xor
and
in
dec
sbb
jo
add
inc
mov
push
push
add
pop
xor
push
jg
call
jp
mov
jo
jbe
jns
inc
iret
lcall
loope
cld
and
aad
out
pop
sbb
shlb
mov
cwtl
cmp
rsqrtps
xchg
jmp
lidtl
movsl
jo
test
ret
add
stos
rcr
inc
insb
jp
sbbb
pop
out
add
cs
rcrl
mov
dec
popa
jo
out
adc
pop
jo
mov
sub
orb
dec
sti
pop
subb
loop
dec
pop
sub
fldl
push
sub
popf
mov
lret
int
inc
in
lds
mov
xchg
xor
jo
mov
pushf
test
pop
stc
lea
or
dec
pop
rorl
add
sbbb
xchg
ss
xor
sbb
popl
gs
xchg
cmc
lahf
lock
nop
jo
and
out
cmp
lods
jo
or
enter
insl
xchg
jne
notb
sub
lcall
out
sub
or
push
fidivrl
gs
fdivrl
or
sub
insb
jo
mov
inc
dec
ret
fcoml
push
dec
mov
cmp
jbe
jno
and
jo
sub
xchg
ret
or
jo
cmp
lahf
test
mov
iret
enter
mov
fmulp
test
inc
sub
xor
mov
push
popf
push
or
shr
ret
push
popa
pcmpeqb
cmpsb
ret
jo
daa
add
sub
inc
int
outsl
mov
cmpsb
test
andl
jo
ds
sbb
sbb
dec
mov
jecxz
jo
insl
stc
rorl
or
xor
dec
adc
jo
jp
or
jmp
jo
xor
add
mov
jg
jo
repz
jno
jo
push
scas
push
cmp
mov
mov
lock
mov
or
das
nop
cld
ret
loopne
dec
jmp
jl
sarb
jp
in
jo
dec
push
mov
outsl
test
cmpsb
mov
push
push
jo
loope
mov
data16
in
add
jle
gs
pop
fs
xchg
iret
out
mov
jae
lcall
lret
cmp
into
jo
cld
dec
xchg
and
mov
fmuls
adc
or
outsl
rcrb
dec
es
jnp
mov
xchg
repz
push
faddp
mov
cmp
jl
and
or
cmp
icebp
fs
sub
lret
loop
cs
orl
sub
outsl
jo
loopne
pop
jge
decb
pop
add
movb
popa
repnz
fdivp
xchg
out
aad
subb
jo
jne
jae
das
adc
mov
and
mov
jp
adc
adc
jo
imul
fisubrl
cmp
loop
cltd
inc
and
lods
idivl
ret
mov
es
or
sub
inc
push
sbb
mov
pop
or
je
js
mov
jo
dec
and
inc
inc
lahf
jge
push
lds
or
sahf
inc
iret
mov
sbbb
das
jo
sub
sti
dec
push
in
test
mov
cli
mov
jne
sahf
divps
push
loope
dec
jne
out
fldln2
shlb
push
mov
bound
mov
jo
push
inc
imul
sbb
pop
dec
jo
cmpsl
lcall
insl
cltd
inc
sub
sahf
push
das
out
push
leave
xor
ret
sub
add
subb
pop
pop
clc
push
xchg
test
mov
in
outsl
test
jae
rolb
pop
andl
jecxz
push
jb
aaa
add
inc
xchg
sbb
ja
jo
lret
loop
jno
psrlq
push
cwtl
sub
fists
push
fnstcw
jp
neg
enter
aaa
icebp
int
mov
add
ds
ds
les
xchg
mov
fdivrp
jo
int3
pusha
xchg
xchg
popf
addb
lods
push
inc
xadd
mov
mov
jo
fcomps
std
xor
jge
imul
push
adc
inc
fstl
and
stc
xorl
hlt
jecxz
add
cs
dec
movb
cmpsl
fs
sbb
mov
add
sub
jo
dec
cwtl
cmp
fnstenv
xchg
mov
nop
jo
jp
xor
fisubrl
test
scas
mov
cmpsl
loope
jo
lahf
add
jbe
pop
sbb
rcrb
and
test
cs
ja
or
mov
imul
gs
or
xor
insl
mov
nop
sti
stos
xor
dec
pop
jne
xor
push
jo
jae
dec
daa
out
push
jo
aam
adc
push
xchg
mov
push
jnp
sub
mov
jo
movsb
jecxz
mov
icebp
ret
repnz
mov
sbb
or
jo
into
std
push
ds
popf
jo
repnz
sub
push
ja
fiaddl
push
inc
jo
inc
jne
xor
mov
mov
jo
jmp
jo
sbb
jl
mov
nop
sub
mov
test
push
sub
jo
loope
inc
sub
fcomps
inc
cs
jo
mov
sbb
repnz
mov
shll
arpl
xchg
jl
aaa
push
jo
and
popa
mov
iret
jo
adc
daa
jp
jmp
rol
mov
bound
jo
adc
sub
cmpsb
icebp
fcmovne
push
sub
jo
insl
cli
fidivrl
es
loope
jp
aas
jo
ret
jb
mov
pop
cs
pusha
stos
xorl
add
add
pop
push
rclb
shl
fistpll
or
jl,pn
sbb
rcrb
ret
je
jo
ljmp
sub
adc
pop
add
add
jo
gs
mov
fwait
jecxz
in
sbb
jns
iret
stos
int3
adc
dec
pusha
sbb
addb
repnz
cld
sbb
sbb
cmc
rorl
mov
inc
xor
xlat
nop
xchg
gs
xor
sbbb
push
fisubl
lret
push
fisubrs
dec
sbb
xchg
push
enter
call
stc
lahf
popf
jl
shll
push
cmp
movsb
sbbb
stos
pop
jo
dec
incb
mov
push
or
sub
add
xor
movb
xchg
cmpsl
push
jo
inc
loope
add
jl
jnp
je
pushl
popa
jo
cmp
shll
push
jp
adc
fs
call
fisubrl
add
jo
sbb
data16
pop
push
jns
pop
jnp
jo
or
in
push
popa
fxch
jo
stos
loope
adc
and
mov
fwait
push
aaa
dec
jg
lret
sbb
and
jo
mov
mov
sub
push
in
mov
fsts
mov
dec
dec
push
and
cmp
jge
jo
ret
fcmove
js
imul
idivb
mov
jmp
push
and
pop
in
xchg
sbbl
hlt
jb
clc
jae
push
cmpsb
sub
cmpsl
jo
sbb
nop
xorb
jo
xor
int
push
pop
test
repz
adc
movb
jne
xor
mov
or
test
pand
xor
jo
cli
test
nop
popaw
jnp
xor
leave
mov
jecxz
push
adcb
sub
movsl
mov
mov
imul
xor
mov
aad
jo
mov
mov
jo
xlat
or
xchg
cltd
jb
inc
fwait
or
add
lods
lahf
divl
jo
das
mov
or
push
fistl
sub
lock
pushf
enter
push
fwait
push
jb
movsb
outsb
out
mov
dec
lahf
repz
xchg
inc
mov
sbb
mov
adc
je
inc
in
jo
iret
or
xor
pop
xor
jp
add
push
mov
sbb
push
les
sbb
fs
jo
sbb
das
montmul
cmpsb
icebp
ss
jbe
dec
cwtl
stos
jmp
xor
insl
pop
fs
jnp
call
jne
dec
mov
lock
andb
mov
sub
xchg
cmc
fnsave
xchg
scas
ficompl
popa
push
ret
jns
int3
out
repnz
pushf
fwait
xchg
lcall
mov
mov
cmp
and
inc
popf
stos
or
dec
lds
mov
inc
jo
repz
popf
jo
cmp
aas
dec
jae
mov
add
sub
jmp
in
or
sbb
mov
stos
or
and
jae
inc
add
sbb
push
cmpb
cmpsl
push
push
jo
xlat
mov
inc
sbb
xchg
dec
inc
sub
xchg
ja
sbb
and
xor
icebp
nop
push
jb
push
jnp
js
and
femms
repnz
cld
jae
cmp
adc
dec
xor
cmc
jle
sbb
cwtl
lcall
xor
dec
push
and
ret
test
jo
outsb
je
out
scas
stos
jo
out
push
fsubs
outsl
test
mov
and
jo
rcrl
cld
dec
sbb
sub
in
xor
push
and
cmc
adc
jo
clc
in
mov
jo
inc
es
loop
lret
lcall
call
sbb
jne
xor
jo
fs
inc
fists
ret
int
mov
push
cwtl
fs
pop
xor
movswl
js
mov
pop
out
mov
jo
push
loope
lret
jp
test
cmp
push
xor
repnz
bound
cmp
fwait
add
or
push
in
mov
lea
and
sbb
imul
mov
fimuls
pop
outsl
jl
inc
jo
les
and
in
pop
mov
jo
xor
sub
mov
js
cmp
mov
xor
fnsave
push
stos
cmp
fdivrs
xchg
push
dec
pop
push
xchg
mov
push
cmp
imul
jae
imul
std
pop
jle
fstp
dec
sahf
test
shl
js
lods
into
ss
add
push
jo
mov
nop
sub
xchg
jo
insl
add
enter
ret
adcb
lcall
jo
lods
insl
cmpsb
andb
test
add
pusha
fildll
lds
mov
sbb
rolb
repz
sbb
pop
jae
movsb
fnstsw
outsl
fcomip
mov
mov
das
push
xchg
xchg
mov
sbb
pop
imul
xor
inc
fsubs
jmp
fistps
sub
lods
repz
jns
push
cmpsl
outsb
pusha
push
out
and
mov
push
mov
push
mov
sub
ds
xchg
fdivl
mov
mov
cltd
rclb
lcall
dec
xchg
js
cmp
cmp
push
ljmp
jno
clc
outsb
fs
mov
pop
sti
sub
loope
add
fstpl
jne
jp
inc
fbld
jae
and
mov
lret
jbe
mov
pop
in
loopne
inc
nop
sbb
and
cmpsb
sub
movsl
fs
inc
fisubl
fistpl
mull
icebp
sbb
mov
cmpsb
jg
xlat
cmpsl
xor
outsb
popf
rolb
pushf
fsubrs
addr16
and
mov
xor
or
adc
cmp
shll
out
js
push
or
test
sbb
sbb
push
das
jae
fwait
inc
jge
ds
arpl
hlt
sub
insb
push
sub
sti
sub
mov
enter
push
mov
fisubl
jl
bound
insl
fidivrl
stos
inc
dec
inc
fwait
out
ljmp
invd
mov
xorb
add
xchg
nop
arpl
and
jnp
add
add
adc
loop
imul
adc
arpl
mov
sbb
adc
ret
pop
clc
inc
xchg
pop
mov
jae
punpckhbw
test
adc
aam
lds
mov
add
inc
jge
add
pop
xor
mov
in
cmpsb
pop
out
arpl
call
pop
hlt
decl
mov
arpl
push
pop
sub
jns
xchg
lods
imul
in
rcl
jnp
sbb
andb
add
add
iret
jne
bound
dec
lahf
fistpl
aad
int
shl
ss
ficompl
jmp
mov
pushw
mov
test
pusha
inc
or
mov
jne
stos
jb
loopne
test
sbb
cmc
mov
repz
inc
cld
ds
pop
imul
in
xchg
mov
les
xchg
movsl
data16
retw
cmp
jns
mov
imul
pop
mov
sub
popa
cmpsl
shlb
test
adc
cmpsb
stos
pop
inc
rolb
je
fistpll
inc
js
vmovupd
std
fsubr
and
jp
xor
daa
mov
or
cmc
arpl
repnz
pop
sbb
outsl
sbb
mov
jae
pop
pop
loopne
pop
js
pusha
fnsave
loopne
dec
and
rolb
push
inc
mov
push
lret
cmp
data16
pop
mov
subl
icebp
arpl
sub
xor
pop
cmp
jae
bswap
cwtl
pop
insl
loop
test
stos
jns
repnz
adc
and
popf
cmp
mov
aad
and
rcr
cs
mov
test
push
shl
and
in
sbb
mov
loop
addr16
fcoms
inc
loopne
pop
pushf
or
cmc
pop
rcrb
pop
adc
pop
or
jno
call
or
sbb
cmp
lods
sti
xor
aas
adc
sti
or
inc
cltd
dec
pop
or
sbb
lahf
mov
popa
jo
lcall
iret
jae
into
jnp
cmp
jle
mov
outsb
in
push
pop
jmp
push
rorl
add
sbb
fwait
mov
into
push
adc
inc
pop
or
jae
orb
out
scas
and
in
pop
cwtl
and
pop
popa
sub
ffreep
mov
int3
enter
popf
jns
icebp
push
push
add
xor
push
push
sub
icebp
add
adc
bound
in
adc
mov
push
mov
push
dec
pop
add
int3
loopne
dec
out
adc
add
pop
mov
sub
lock
mov
jae
xchg
lret
push
or
lds
loop
lahf
jp
push
xor
and
mov
out
inc
out
lahf
jecxz
pop
push
or
mov
imul
mov
sbbb
xchg
fisubs
scas
rcrl
jno
mov
mov
lcall
iret
repnz
mull
sub
scas
ror
lcall
inc
arpl
ja
or
mov
mull
xor
inc
inc
ficompl
mov
in
mov
data16
je
das
pusha
mov
scas
sbb
jno
xchg
inc
fnsave
fadds
ljmp
push
sub
add
add
lahf
push
pop
push
mov
push
mov
test
push
mov
push
shrb
and
cmpsl
inc
sti
les
mov
mov
dec
pop
addb
repnz
jmp
ds
hlt
jb
xchg
dec
loope
sub
outsb
lods
cld
gs
jmp
cmc
pop
fnstenv
add
or
int3
decb
adc
adc
mov
push
cmp
lds
mov
out
mov
outsb
outsb
imul
inc
dec
lcall
insb
sub
mov
mov
arpl
push
inc
cmp
inc
or
inc
out
lahf
out
sbb
mov
cltd
test
pop
fbstp
xlat
out
fmull
mov
xor
in
lock
out
cmpsl
shl
jp
dec
and
and
shll
jnp
pop
push
mov
movsl
and
repnz
test
jecxz
mov
pop
lock
push
add
xor
fs
cmpsl
icebp
pop
or
inc
rorl
in
daa
adc
mov
clc
dec
and
dec
outsl
shrb
mov
insb
pop
dec
imul
pop
dec
test
mov
jae
pop
mov
popf
add
jns
mov
popa
push
cmp
sbb
loop
add
inc
adc
xchg
xchg
and
outsl
int
imul
mov
sbb
in
outsl
xor
jbe
mov
mov
xchg
push
xchg
fnsave
adc
outsl
push
leave
ja
sbb
push
sbb
fldenv
jl
sbb
lods
add
mov
and
imul
or
mov
dec
scas
cmp
shr
sbb
shrl
data16
insb
stc
es
arpl
scas
pop
out
xchg
call
div
cmpsl
cmp
jl
push
inc
dec
fisubs
xorl
or
inc
fnstenv
jno
cltd
sub
xchg
adc
popf
xor
and
fidivl
xor
dec
sahf
dec
xlat
push
xchg
xchg
ljmp
jp
in
jl
inc
mov
jb
cmpsb
jle
out
cmp
shrb
aad
fcoml
movsb
in
hlt
test
mov
cmp
ret
and
mov
xchg
inc
jle
icebp
jmp
jmp
lods
push
inc
xor
sub
pop
push
punpckhbw
inc
ret
out
out
pop
cltd
js
or
mov
and
or
and
in
xor
cltd
mov
outsl
cmc
and
mov
mov
popa
das
add
adc
add
lret
enter
mov
jl
sbb
push
stc
xor
push
ret
popa
leave
into
imul
daa
rorl
out
inc
add
insb
std
xchg
mov
sbb
mov
jnp
pop
fs
jae
inc
clc
gs
jae
push
insb
add
lds
push
iret
push
icebp
lods
add
jno
rol
mov
push
dec
cmpsl
dec
lea
or
push
jge
inc
bound
imul
into
es
lods
popf
jmp
popa
jae
dec
push
xchg
mov
shrb
out
scas
jge
das
clc
js
xchg
pop
ljmp
dec
shlb
dec
sbb
pop
jo
and
arpl
inc
pop
dec
mov
scas
sbb
jle
jmp
scas
inc
out
call
outsb
push
in
gs
sbb
imul
push
pop
dec
sbb
pop
fwait
int3
imul
mov
cli
movsb
int
xchg
dec
xchg
leave
out
icebp
call
iret
int
inc
lret
cmc
inc
rorb
push
mov
cmp
sar
cwtl
loopne
mov
jge
aas
sbb
fsubs
cmp
call
dec
mov
arpl
ret
jp
aaa
sbb
nop
es
jae
rep
popl
jae
xchg
lods
inc
inc
jbe
jno
inc
mov
push
js
mov
cld
add
mov
aaa
cs
fwait
dec
sti
test
fcoml
push
stos
xchg
dec
in
push
mov
xchg
mov
inc
lahf
push
mov
jae
es
nop
xchg
in
pop
orb
inc
push
or
dec
movsl
jb
sbb
xchg
cmpl
mov
add
fnstenv
sbb
sub
call
arpl
movsl
out
or
mov
sahf
out
adc
enter
hlt
sub
pop
lret
push
popf
cmp
mov
pop
add
dec
mov
mov
xchg
cmpsl
in
fcomps
out
mov
pop
dec
mov
jae
insb
pop
insb
sub
in
mov
push
xor
faddl
lock
adc
sub
jbe
lahf
stos
mov
xor
jmp
mov
and
push
push
push
mov
mov
sub
push
out
lods
mov
jb
cld
sbb
pop
mov
mov
adc
jo
fucomip
shl
jl
lods
out
pop
jnp
push
push
int3
push
or
adc
mov
mov
lcall
pushf
xchg
movhps
je
jae
cmp
movlps
ja
xor
testl
jnp
sbb
pop
jb
imul
sub
push
mov
or
es
scas
mov
xor
aaa
fucomip
push
dec
add
icebp
adc
push
mov
adc
mov
sbb
sbb
in
jle
loop
jnp
arpl
outsl
push
push
jo
ds
paddw
mov
mov
pop
sbb
js
jg
or
push
pop
or
mov
int3
shr
inc
in
adc
push
push
outsl
addr16
mov
xchg
inc
push
pop
or
dec
push
aad
xor
cmc
fmull
adc
and
adc
out
or
cmpsl
mov
push
pop
aad
test
mov
jae
push
movsb
xor
jge
jle
jmp
dec
aaa
lock
fsubl
mov
mov
pop
bound
mov
mov
dec
mov
movsl
imul
cwtl
lret
mov
cmpl
sub
and
mov
jle
fisubrs
dec
dec
movsb
dec
pop
hlt
int3
sub
shll
in
out
mov
mov
jnp
cli
out
mov
mov
test
xchg
mov
sbb
cmc
in
movsb
xor
ljmp
push
mov
cs
push
das
push
xlat
adc
dec
andb
pop
jo
ja
sbb
sbb
out
pusha
inc
adcb
int
or
aas
stc
outsl
jo
inc
xchg
bound
mov
sbb
pop
cmp
movsb
adc
out
mov
icebp
or
push
mov
cmp
frstor
inc
mov
dec
lahf
mov
xchg
adc
add
pop
jae
fisubrs
adc
fistps
pop
jmp
int3
jmp
jns
mov
ret
cmp
inc
mov
mov
cltd
mov
loop
lock
and
push
inc
dec
in
cmp
xlat
or
in
push
push
enter
stc
pushl
aam
icebp
mov
xor
or
sub
mov
jmp
loopne
lds
mov
enter
sub
inc
xchg
lret
mov
xor
out
jae
xchg
dec
mov
int3
push
mov
and
insb
add
mov
jle
scas
jae
cmpsl
xchg
or
add
cli
movsl
add
pusha
bound
dec
jnp
subb
popl
cmp
pop
jg
aaa
outsl
pop
cmp
ret
mov
test
popf
nop
inc
mov
cmp
push
cmp
cld
rorb
and
mov
insl
jno
sbb
sub
jns
pop
js
or
lock
push
inc
rclb
xor
aaa
in
in
adc
and
fistpll
push
into
loop
int3
fs
xchg
cmp
jmp
movsl
jnp
lds
cs
push
add
insl
cmp
repnz
stos
sub
lods
std
shrb
fucompp
insb
sub
adc
fidivrs
dec
mov
mov
cmpsl
jo
arpl
push
cmp
out
stc
push
xchg
xor
push
push
mov
adc
aam
sbb
call
mov
sbb
gs
cmp
enter
jns
fwait
imul
shll
jae
adc
xor
mov
stos
es
dec
popf
mov
or
push
shlb
sub
and
outsb
pop
mov
call
push
ja
std
cmpsb
jle
push
xchg
or
dec
loop
movsb
sbb
jbe
mov
leave
add
fsts
cwtl
jns
mov
pop
insb
rol
out
sbb
or
sbb
pusha
arpl
test
addb
test
pop
xor
fisttpll
xorl
sub
stos
cmp
ljmp
inc
adc
mov
pushf
jmp
xor
pop
cmpsl
or
add
cwtl
adc
dec
add
lcall
push
mov
pop
ret
or
dec
les
jo
aaa
int
mov
sub
dec
inc
insb
xchg
cltd
xor
inc
imul
out
mov
fcmovnu
lret
push
add
cmp
andb
test
test
push
jle,pt
xor
inc
push
out
mov
fisttpll
notb
pop
lret
xchg
daa
call
js
dec
mov
dec
lock
js
outsl
push
lahf
jo
movsl
fucomp
fs
adc
in
outsb
out
repnz
daa
enter
mov
sbb
enter
in
mov
sbb
iret
push
jp
divb
das
and
jb
dec
ret
jl
fwait
xchg
daa
jmp
sbb
jo
shl
pop
jo,pn
sbb
or
subl
enter
push
aad
sarl
cmp
loop
in
xor
out
pop
icebp
cmp
pop
push
rorl
mov
fcmovnu
in
fidivrl
dec
imul
cmp
or
inc
orb
int
jo
cmp
enter
sub
mov
jo
lods
into
jp
sbb
xor
dec
mov
fcompl
cmp
or
pop
push
jo
pop
je
cmp
jae
jo
inc
dec
pusha
mov
popf
rorl
jae
add
out
jo
loop
jecxz
jb
ljmp
or
push
fiadds
sub
popf
jnp
jo
sub
daa
movsb
push
mov
pop
mov
inc
sub
call
in
sbb
in
or
js
daa
cli
cwtl
test
jo
lock
sbb
je
jo
mov
mov
jo
xor
bnd
call
orb
jbe
and
push
jo,pn
mov
mov
jo
imul
xor
dec
in
or
fdivl
cmp
jo
mov
or
jo
xor
push
xchg
lods
inc
jo
std
fwait
mov
cmc
jno
jo
push
bound
dec
xor
mov
ljmp
mov
inc
xor
lods
nop
dec
mov
sahf
jo
ds
ja
rcrl
cli
test
mov
add
add
jmp
cmpsb
inc
jo
push
dec
push
fmul
fwait
rcll
imul
negl
jo
and
adc
sub
mov
rcrl
add
out
jo
movsb
call
lcall
stc
jo
ja
sub
mov
jecxz
loope
rol
gs
negl
or
push
dec
xor
loop
das
push
ja
bound
call
xchg
mov
ret
cs
mov
sbb
fisttps
ss
xor
push
sub
xchg
andl
repnz
mov
pushf
cmpsl
pop
jo
aad
insb
jle
mov
sbbb
pop
leave
jno
ret
xor
addr16
movsl
cltd
in
scas
jae
sbb
pop
int
jo
call
gs
jo
fs
fwait
imul
pop
cmc
pop
inc
testb
or
mov
add
ds
lcall
aad
jo
fcomi
paddb
outsl
lock
ljmp
test
jo
push
sub
pop
fdiv
mov
mov
out
insb
lds
xorb
lret
push
ja
jns
in
popa
imul
jle
je
dec
addr16
rol
int3
incl
mov
lret
sub
repz
push
lds
xchg
push
dec
add
cmp
jno
push
in
repnz
fdivs
or
enter
mov
repz
addr16
lods
ds
dec
cltd
scas
xor
jb
icebp
xchg
xor
or
divb
fmuls
test
xchg
mov
jecxz
or
and
scas
daa
push
ds
mov
pop
mov
jl
or
hlt
or
icebp
dec
mov
inc
sub
repnz
cmp
cmp
mov
lods
cld
fildll
aad
cmp
repnz
jo
aam
push
sti
add
add
movsb
dec
test
cmpl
ret
dec
gs
jo
or
fwait
mov
sbb
and
out
dec
xor
addr16
xchg
pushf
js
dec
mov
push
mov
lahf
sub
testl
enter
jo
outsl
add
or
push
push
inc
dec
xchg
decl
xor
xchg
rcrb
jmp
enter
ja
or
and
sbb
addr16
jbe
in
les
jl
rolb
mov
pushf
inc
jg
cmp
jo
jge
mov
dec
outsl
push
lea
in
adc
pop
fsubs
sbb
adc
scas
mov
jo
xor
push
sbb
bnd
into
fstpl
jo
mov
mov
jo
lea
mov
cmp
mov
sbb
inc
data16
push
xor
popa
jl
mov
stos
sub
jo
addr16
outsb
mov
xchg
jo
add
adc
aas
lods
mov
scas
mov
sub
jo
cltd
ret
adc
ss
lods
insl
sbb
das
adc
dec
fwait
add
call
xchg
lods
cld
orb
adc
dec
data16
jb
cwtl
jo
push
out
ss
aas
push
cmp
sti
les
ds
nop
pop
dec
inc
repz
jp
mov
nop
aad
ret
or
icebp
xor
call
cmp
mov
or
jo
stos
add
out
aas
leave
notl
sbb
mov
pusha
xchg
push
jecxz
add
testb
jo
fiadds
and
push
nop
jl
popf
shlb
lock
scas
cmp
mov
push
mov
lret
jo
add
sub
rcll
adcb
push
pop
lcall
jbe
xor
sbb
lahf
repnz
pop
jo
sbb
loop
adc
faddl
adc
imul
imul
movswl
dec
jecxz
push
ret
jmp
jno
push
punpckldq
ret
in
test
sbb
pop
pop
lret
clc
or
inc
add
leave
xchg
push
sub
shl
inc
repnz
scas
adc
pop
jo
sbb
and
xor
dec
adc
push
out
pusha
push
fiaddl
and
xchg
js
pop
jo
cmp
push
cmpsl
jo
mov
inc
and
loop
leave
jb
push
xor
push
jl
addr16
inc
addl
dec
adc
out
shrl
adc
and
sbb
ret
push
loope
jmp
js
sbb
sbb
dec
mov
std
mov
jb
mov
vmwrite
sbbb
fsubrp
outsl
and
push
mov
je
inc
jo
mov
loop
roll
data16
pop
dec
push
ret
nop
push
jg
negl
fsubl
es
cli
push
jp
hlt
jne
js
push
loop
mov
dec
ja
jo
mov
and
mov
jne
jo
xchg
pop
out
movsb
mov
int
pop
loope
cltd
sub
dec
enter
push
push
mov
inc
adc
rcll
cmpsb
push
ja
repz
pop
add
jl
jo
cmp
test
cmc
push
dec
jecxz
mov
jo
sbb
dec
jmp
in
scas
and
xchg
adc
mov
mov
jnp
sub
mov
cmp
mov
cltd
jmp
jo
adc
add
test
mov
jo
adc
jecxz
push
in
mov
mov
out
pop
js
outsb
mov
into
jmp
mov
fistpl
enter
pop
jo
outsb
loopne
xor
into
xor
sti
mov
cmpsl
xlat
div
addb
lods
push
and
pop
sub
sahf
shr
in
pop
bound
inc
adc
or
jmp
xor
cs
mov
push
testl
xchg
dec
push
fiaddl
bswap
jl
xchg
bound
lock
push
add
js
test
jo
cmp
pop
jne
sub
sbb
sbb
ret
push
cmpsl
in
push
sti
stc
and
fisttpll
movsl
xor
les
ljmp
pop
cmp
dec
insb
out
mov
jp
adc
mov
ljmp
push
push
sbb
sub
mov
int
and
in
cmp
aas
or
arpl
repnz
aas
push
push
mov
xor
xor
and
adc
xor
mov
fs
xor
mov
cli
inc
adc
outsb
sbb
out
xorb
cwtl
jle
sbb
iret
aas
imul
insb
dec
mov
pop
jge
shlb
fidivrs
lock
movsl
push
dec
push
int
mov
insb
sub
lahf
sub
xchg
sub
and
and
or
lret
mov
inc
call
outsl
xchg
and
add
gs
push
dec
lret
and
lcall
xchg
imul
pop
or
mov
cmp
arpl
push
adc
push
jns
loope
xchg
arpl
adc
out
jae
pop
je
sbb
call
inc
rol
adc
in
mov
into
fisubl
mov
xchg
ficomps
add
arpl
or
xor
and
movsb
daa
jp
mov
dec
aas
mov
loop
ljmp
jge
dec
clc
push
sub
out
push
xorb
mov
jl
xchg
mov
and
cmp
xor
xchg
sbb
inc
adc
push
and
shlb
jae
mov
scas
push
nop
arpl
loope
stos
shr
clc
std
xor
sbb
jge
mov
push
outsl
mov
insb
jnp
dec
stos
sbb
jbe
mov
fs
push
mov
and
cmp
arpl
sub
and
lret
daa
jns
stos
cmpsb
out
and
sti
lods
insb
xchg
pop
adc
dec
test
andl
inc
mov
test
pop
jae
sbb
repz
or
retw
pop
es
push
xor
outsb
movsl
cmpsb
xor
fs
jmp
pop
xor
movsb
inc
mov
push
add
ja
clc
mov
das
dec
out
ds
xor
imul
lds
xchg
inc
push
mov
shll
xor
lock
stc
xchg
mov
pop
mov
push
mov
movsl
adc
mov
arpl
es
push
fadds
out
jmp
mov
jmp
aad
fcomip
cmp
ret
sar
mov
jno
ficompl
push
lock
dec
ja
pop
or
mov
sub
push
or
mov
adc
flds
loopne
ret
data16
imul
js
push
fnstsw
jle
jo
jp
gs
flds
sub
xchg
mov
xlat
and
arpl
sahf
push
add
jo
push
mov
mov
popf
clc
mov
add
outsb
cmpsb
out
int3
stc
adc
mov
jecxz
xchg
push
sahf
dec
dec
or
inc
inc
dec
aas
ret
gs
inc
aad
jecxz
sub
mov
call
fstp
pushf
incl
mov
push
mov
jbe
sbbb
insl
inc
xorb
movsb
xor
jae
test
out
cmp
add
stos
pop
mov
out
push
into
push
lock
adc
mov
fisubs
jo
xor
mov
push
daa
rcrb
andb
ljmp
aad
and
push
xchg
push
fistps
mov
xchg
aaa
mov
aas
jne
bound
outsb
out
test
fbstp
sbbb
popf
enter
jl
cmpsb
jae
inc
xchg
aaa
arpl
sbb
sub
sbb
negl
punpcklbw
fnsave
inc
inc
or
xchg
test
mov
push
stos
jge
rolb
xor
pop
ret
adc
and
sti
or
clc
mov
out
cmpsb
mov
fs
aad
adc
sub
jecxz
xchg
frstor
jnp
into
addr16
sub
sbb
int
rorb
mov
clc
mov
int
mov
inc
inc
xor
pusha
int3
fs
adc
mov
sub
hlt
mov
cmpsb
outsl
cwtl
jmp
add
pusha
inc
xor
or
jmp
aam
add
mov
in
jmp
clc
push
inc
mov
pop
cmp
xchg
in
xchg
dec
or
adc
add
adc
stos
test
das
push
icebp
les
push
mov
adc
or
xor
cmpsl
adc
mov
push
push
jp
pop
scas
shlb
arpl
stos
imul
test
scas
mov
filds
mov
sahf
outsb
cmp
hlt
jae
in
xchg
pop
rcll
sbb
hlt
ret
test
and
js
mov
adc
ret
add
sbb
aad
pop
addr16
in
movsb
fisubl
and
dec
je
test
inc
pop
rcrl
pushf
mov
lods
mul
jno
out
jnp
push
xchg
std
movsl
mov
arpl
out
or
out
mov
ds
mov
xor
or
dec
jae
inc
pop
fs
mov
lds
mov
in
stc
add
or
sub
loope
fisubrl
adc
sbb
push
fdivrs
loope
and
pop
sub
xorl
cmp
cmpsl
lock
or
jg
adc
out
addb
jae
movl
mov
out
xchg
xchg
lock
inc
push
adc
push
test
mov
in
push
insb
loopne
insb
rclb
sbb
inc
jle
in
fbstp
pop
mov
std
mov
and
stos
pop
int
sbb
mov
mov
sub
mov
fiaddl
cld
or
xchg
pop
aas
loop
hlt
aas
xchg
in
frstor
mov
leave
mov
mov
mov
mov
adc
test
mov
fstl
pop
xchg
outsl
pop
push
mov
sub
in
add
push
mov
adc
insl
mov
sbb
pop
pop
rclb
xchg
mov
cmpsb
add
pop
test
cmp
ja
enter
jb
repz
push
dec
mov
call
or
loopne
mov
cld
jbe
mov
pop
mov
lock
aas
sub
push
push
mov
xlat
insb
and
inc
scas
pushf
repnz
or
pop
out
ret
daa
mov
push
sbb
pop
or
mov
add
cmp
jo
mul
test
js
mov
nop
popf
sub
sub
jmp
sti
cmovg
rolw
out
cwtl
repz
sub
sub
push
xchg
nop
cltd
inc
ds
mull
sub
jp
hlt
inc
jle
sub
lods
scas
mov
add
outsb
inc
insl
lock
mov
jbe
stc
test
lock
filds
cs
mov
int3
mov
aam
ja
pop
xchg
iret
jge
adc
xchg
call
xchg
mov
je
pusha
mov
pop
test
inc
dec
nop
xor
lea
sti
add
jb
test
popf
stos
adc
leave
imul
in
sbb
mov
mov
inc
popf
stc
push
fildl
cmp
shrl
pushf
lahf
call
cmpsl
gs
nop
outsb
lea
popf
jecxz
bound
clc
out
add
repnz
sbb
cmp
and
push
add
jno
lcall
add
fidivrl
jae
push
cmp
in
cmpsl
divps
or
ret
cli
loopne
push
push
adc
aas
adcl
xchg
inc
addb
hlt
fldenv
aas
iret
in
ret
jg
inc
arpl
cmc
stos
add
leave
mov
fisttpl
inc
movsl
incb
stos
shl
mov
cld
maxps
xor
sub
push
mov
or
lods
or
inc
xchg
pop
pop
fldz
bound
add
push
or
inc
cmp
fdivl
pop
ficoml
mov
add
jbe
imul
jmp
outsl
cmpsb
sub
jg
insb
add
insb
sub
mov
jns
mov
push
lods
jae,pn
sbb
xor
cmp
call
xchg
outsb
push
dec
pop
jbe
or
lods
inc
aam
jb
xor
loop
dec
cld
outsb
stos
push
shrb
loope
push
inc
push
jae
dec
in
jle
cmpsb
push
cmp
push
pop
xlat
sar
rorb
imul
xlat
sub
stos
sbb
jns
rcrl
and
stc
xor
loopne
dec
inc
jne
insb
inc
repz
or
or
push
pop
jbe
mov
xor
fldl
jb
pusha
lock
jae
adc
fcomps
lods
pop
cmp
jg
clc
mov
push
mov
jg
cmp
in
sbb
pop
cmp
and
xchg
add
pop
xlat
imul
push
movsb
leave
mov
bound
in
fstpt
jne
jo
imul
xchg
adc
pop
sahf
sub
push
push
fnstsw
mov
test
mov
sahf
sbb
imul
addr16
jle
in
cmp
or
sbbb
es
jnp
subb
xlat
and
leave
shlb
repnz
nop
mov
mov
push
mov
dec
sbb
push
sar
push
xchg
cmp
or
dec
cmp
adc
fwait
jmp
lock
mov
es
pushf
dec
addl
stos
push
adc
movsb
sbb
mov
jge
fs
cmp
push
inc
mov
scas
hlt
rcrb
nop
cltd
push
jne
or
mov
mov
out
clc
aas
or
fstps
leave
std
add
addr16
xchg
sbb
dec
test
in
mov
mov
ljmp
nop
push
push
aam
xchg
mov
jo
fs
inc
jo
rcrb
pop
jae
mov
insl
xchg
subb
dec
out
int3
jb
int
xchg
popa
nop
jo
test
adc
and
in
gs
xchg
mov
movb
jo
test
mov
fistps
setle
jo
sub
inc
js
push
cmc
jo
pop
jle
fnstsw
aam
or
sub
pushf
or
sbbb
scas
and
lods
repz
sub
out
shll
or
inc
pop
jne
pop
movsb
xchg
nop
jmp
ja
push
mov
xchg
jno
lods
jns
mov
data16
movlps
pusha
cmc
pshufw
mov
rcll
clc
test
mov
jo
push
rolb
dec
inc
jo
imulb
sub
push
sbb
jne
cli
mov
stos
jno
jne
mov
dec
jns
int
push
out
sbb
jb
push
fnstenv
sbb
or
jbe
ss
push
into
mov
jns
cmpsb
imul
sti
jo
xchg
sub
or
fimuls
aad
lds
xorb
xchg
into
clc
sub
cltd
pop
pusha
shrl
adc
xchg
ss
aam
das
je
dec
push
nop
loope
sub
xchg
rcr
mov
inc
cmc
mov
or
cltd
add
jge
sbbb
pop
push
jo
pop
adc
repnz
jo
lods
jge
adc
sti
push
dec
mov
push
xor
sahf
and
ss
or
and
cmpsb
mov
jl
push
loop
ljmp
adc
idivb
cmpsb
jne
popa
mov
dec
xchg
pop
pop
jbe
mov
scas
jo
xor
test
mov
test
jmp
add
jbe
out
cmp
jp
sahf
jo
xchg
dec
mov
lcall
inc
dec
std
jae
imul
cmpl
cli
push
xchg
scas
adc
fs
xchg
push
negl
mov
shld
jo
dec
xchg
adc
jo
shl
xor
mov
jo
add
add
or
lods
stos
pop
scas
in
stos
in
rclb
or
ja
dec
in
push
cmc
jo
inc
or
inc
mov
fldt
and
adc
inc
push
call
dec
stos
and
xchg
jnp
pop
insl
mov
mov
xor
xor
cmp
jecxz
fists
das
push
mov
int3
add
push
inc
sahf
cmp
mov
inc
loopne
cld
jb
or
sub
scas
sbb
jo
jl
jecxz
outsl
rol
fbstp
mov
sub
lock
jbe
call
jge
jnp
test
cmp
mov
jo
push
aad
dec
jbe
nop
das
mov
ljmp
jl
and
xchg
jmp
cmpsb
movsl
adc
jmp
mov
push
dec
push
shll
jb
in
out
movsl
clc
pop
dec
aas
out
sbb
repnz
jo
lock
repz
sub
xor
fmull
cmc
and
dec
mov
in
inc
aas
or
rcrl
mov
cs
mov
test
mov
rcrl
push
push
out
je
in
popf
mov
icebp
xchg
sbb
pop
adcb
xchg
jecxz
in
lods
paddusb
clc
cmp
pop
pushl
std
lret
icebp
or
jo
inc
lods
and
jo
sub
push
mov
aad
jo
adc
testb
push
aaa
push
stos
loopne
lea
jo
lods
movsb
mov
pop
pop
mov
loope
popa
jb
or
flds
mov
sub
add
call
rcll
dec
jb
dec
jo
cltd
and
mov
aaa
cli
jo
clc
or
std
adc
jge
jo
xchg
xchg
mov
push
outsb
jo
dec
test
pop
or
cs
idivl
jmp
jmp
dec
jg
push
jo
movsb
push
mov
sub
movsl
or
xchg
in
push
dec
ss
jmp
fmulp
test
pandn
xchg
rclb
inc
iret
jno
out
int
xor
mov
nop
int
outsb
jmp
mov
jp
scas
cmp
xor
sub
or
jo
and
sub
pusha
pop
jo
sbb
add
mov
jmp
daa
sti
ljmp
cmp
outsl
std
out
mov
cmp
pop
inc
ret
jo
adc
fsubrp
jnp
xchg
jbe
xchg
add
nop
cs
ja
fidivrs
or
push
stos
jg
enter
loope
cmp
mov
jns
jb
dec
popa
adc
push
cltd
into
pop
cmp
testb
cmp
adc
xor
iret
cs
shll
adc
lcall
mov
fistpll
scas
jo
test
lret
push
divb
pop
arpl
lods
xchg
push
hlt
iret
dec
sbb
mov
push
lahf
cs
testl
jae
shll
call
mov
lods
xchg
insb
pushf
push
xchg
int
add
pop
nop
push
xchg
je
loope
adc
xchg
lahf
jg
addr16
in
pop
sbb
pop
pop
mov
cld
shl
jo
fstps
jle
pop
mov
xchg
arpl
and
dec
cmc
jae
test
icebp
and
dec
pop
dec
iret
fistpll
ret
pop
loope
arpl
ret
sbb
jbe
push
push
or
lret
cli
jp
or
xor
jl
ljmp
es
out
xorb
dec
push
es
lds
jae
inc
xor
jg
push
pop
imul
dec
jae
inc
je
loopne
stc
out
sbb
mov
jecxz
scas
js
pop
ss
sub
adc
out
cmp
pusha
mulb
jae
mov
mov
mov
dec
add
or
inc
pop
dec
outsb
push
test
int3
and
jae
repnz
clc
aas
sbb
xlat
xor
jns
push
push
test
mov
cmp
iret
push
push
pushf
and
cltd
mov
fsubl
idivl
loope
xchg
xor
add
aad
add
out
dec
mov
aam
mov
enter
fdivl
call
cmpsb
and
cmp
xchg
cmp
sbb
pusha
cltd
shrb
push
sbb
cmp
mov
mov
inc
ret
mov
inc
aam
jnp
arpl
mov
rcrl
push
add
add
cmpsl
mov
daa
cmpsl
dec
push
lea
xlat
in
inc
loope
cmp
fimull
test
jbe
inc
add
mov
inc
std
jns
cmpsl
addr16
jne
pop
xor
stc
add
inc
in
inc
xchg
sub
push
in
incl
dec
sbb
insb
push
or
pop
mov
cmp
addr16
fidivs
aas
enter
cmpsl
aaa
lret
lcall
rep
lods
mov
imul
sti
push
int3
out
xchg
sarl
mov
inc
sub
or
xchg
jns
dec
mov
xlat
jnp
cltd
add
sbb
test
sbb
jo
hlt
in
xor
sub
jecxz
sbb
xchg
lds
lret
popa
mov
roll
inc
divl
and
mov
js
test
ror
push
pop
inc
pop
fdivrl
ret
and
mov
mov
add
sbb
inc
cmp
in
sbb
test
xchg
mov
jle
inc
shll
pop
gs
jno
cs
imul
cs
jo
mov
es
pop
xchg
jo
adc
jno
loope
divb
inc
mov
gs
cmp
jle
cwtl
lds
jg
repnz
ss
fs
cltd
cmp
cwtl
xchg
int
ret
rolb
fsubl
inc
outsb
out
xor
sub
jbe
jae
pop
sbb
sbb
cli
push
push
inc
je
int3
lret
ljmp
pop
fdivr
in
pop
aam
add
iret
mov
jge
notl
jl
out
mov
inc
sti
jp
in
push
imul
jo
roll
hlt
jno
js
ja
out
cmp
pop
jo
mov
int
mov
sbb
add
jns
mov
mov
ret
push
jle
jo
pushf
or
inc
in
inc
or
jo
fadds
lea
outsb
test
jnp
shll
das
data16
mov
dec
adc
pop
adcb
ds
lods
xchg
subb
aad
iret
adc
mov
addr16
jmp
mov
gs
push
sbb
sti
cltd
repz
pop
das
sbb
sub
jnp
jmp
jp
lods
ljmp
jb
jo
leave
jae
into
mov
inc
push
pop
and
jno
mov
xlat
popf
add
dec
xchg
punpcklwd
nop
fadds
jo
jecxz
xor
xchg
sub
xlat
push
or
jo
fisubrl
jo
mov
push
sub
and
fs
jb
pop
pop
es
je
jo
dec
dec
pop
clc
push
jnp
mov
test
shld
addr16
aam
test
and
inc
mov
pop
jo
mov
sub
and
out
mov
test
icebp
mov
jo
pusha
neg
gs
out
jo
add
jnp
cmp
loope
sbb
or
mov
mov
sub
and
gs
and
jo
rcl
mov
or
xor
nop
ret
cmp
in
jb
aad
sub
int
push
roll
or
rcll
push
xor
popf
into
or
lret
lahf
jo
cmc
out
mov
jae
jo
mov
ret
in
test
pop
lods
mov
arpl
mov
push
lcall
cli
scas
pop
jle
mov
mov
pop
add
sub
add
sub
jo
dec
add
push
jo
push
push
int
or
jo
and
jmp
jo
xor
adc
ja
ss
sub
inc
jbe
clc
mov
pop
jl
sbb
jg
push
mov
mov
lods
and
and
jo
test
clc
and
cli
hlt
std
ljmp
repz
cld
lds
mov
icebp
xor
or
fsubs
xchg
xchg
xor
jo
xchg
xchg
icebp
jmp
sub
xor
test
ret
je
jl
jge
lock
ret
xor
pop
sub
sbb
or
dec
pop
lahf
add
xor
xorb
movsl
jo
in
sub
dec
xor
xchg
pop
orb
test
jae
mov
imul
clc
xrelease
jo
mov
jo,pt
aaa
mov
push
mov
or
pop
add
test
sbb
sahf
dec
jne
fisubs
jge,pt
je
sarb
jo
add
sbb
lea
pop
jo
dec
mov
and
and
pushf
or
jo,pt
mov
mov
jno
add
test
stos
andb
pop
mov
pop
pop
dec
insb
cmc
jle
ret
mov
ja
ret
add
mov
push
sti
lret
clc
adc
jo
adc
ret
pop
jo
stos
dec
loope
cmp
push
jo
adc
loop
repz
jo
jns
sbb
mov
insb
jo
in
out
mov
inc
fimuls
mov
push
sub
mov
xor
pshufw
xchg
cld
int
or
cmpb
jl
subl
fsts
scas
sbb
fadds
stos
das
jo
push
pusha
xor
jo
mov
lock
insb
shlb
adc
loop
jo
cwtl
xor
cmpsb
lock
orb
frstor
jo
cmp
xor
jo
repz
pavgw
std
ja
inc
jo
fiadds
dec
test
cld
testb
jo
daa
in
test
mov
pop
mov
mov
pop
mov
fs
jo
sub
inc
ficompl
mov
add
bound
sarl
cs
pop
into
mov
jnp
ja
popa
stos
add
out
or
icebp
fstl
loop
arpl
jmp
jno
je
xor
xchg
shlb
cmp
cmp
jo
inc
or
lret
aad
sbb
push
ret
xchg
mov
addr16
inc
inc
mov
sbb
xlat
fwait
data16
outsl
mov
mov
cmp
mov
loop
sahf
stos
xor
adc
sbb
mov
jo
add
jo
in
lods
sub
sbb
pop
clc
xchg
jns
loope
push
xchg
xchg
jns
pop
xchg
push
popf
mov
cmp
inc
popa
insb
out
cmp
jecxz
cmp
jo
push
inc
mov
cmp
jo
pop
rorl
insb
stc
jo
xchg
aam
sbb
lods
movsb
mov
jae
jo
mov
aad
dec
mov
jo
ljmp
jo
outsb
pop
je
xchg
jo
xchg
in
mov
jle
rcr
inc
push
xchg
sub
repnz
stos
cld
pop
insb
or
in
movl
jo
fbstp
xchg
push
xchg
adc
jo
cmpsb
imul
jo
insl
xor
pushl
rcrl
ja
insb
in
sbb
add
mov
pop
add
lods
mov
jo
loop
pop
jecxz
gs
jo
in
prefetch
xor
cmp
sbb
orb
pshufw
into
fstl
mov
or
inc
cwtl
fisttps
xor
out
fs
test
loope
jo
cld
inc
rorl
das
xchg
xchg
loopne
out
push
xorl
das
ret
cmpsb
xchg
nop
pop
out
ret
cli
sub
jo
ljmp
push
push
sti
jnp
xor
sbb
pop
adc
jo
inc
int3
adc
les
sbbb
jns
push
mov
popf
fmull
xor
icebp
lahf
xchg
insb
mov
cwtl
test
sub
mov
pop
lock
popa
pop
sbbb
mov
jge
rorl
push
inc
iret
mov
jo
sub
call
jg
adc
sbb
inc
pop
jo
lea
jo
aaa
push
push
sub
bound
arpl
jo
popa
pop
push
js
jo
mov
sbb
jo
dec
sub
jg
shlb
pop
popf
inc
pop
jns
bound
shlb
xor
movsl
lahf
jne
repz
inc
ficompl
mov
sbb
or
mov
outsl
sbb
cmp
push
xor
pusha
test
inc
sub
mov
jns
adc
mov
sbb
js
cld
cmp
sbb
adc
or
adc
push
pop
jae
pop
psrad
push
cmpsl
das
cmpsb
mov
dec
cli
jnp
add
inc
mov
push
sbb
fstpt
subb
nop
mov
inc
push
xor
or
cli
sbb
shr
fstpt
jns
rolb
xchg
and
jb
cld
mov
dec
je
xchg
add
jns
stos
pop
add
push
scas
std
loopne
repz
mov
arpl
outsb
fisubs
insb
call
loop
cs
mov
or
mov
mov
adc
dec
fwait
roll
mov
faddl
adc
test
adc
or
mov
shll
add
das
dec
out
jae
mov
fs
add
std
jae
test
push
int3
ja
out
push
push
jbe
arpl
inc
jno
push
pusha
mov
dec
sub
or
ja
inc
fldcw
pop
pop
push
movsl
cmp
jmp
jmp
push
fsubs
jae
jmp
out
push
outsl
push
and
popf
xor
lret
inc
sbb
or
pop
bound
pop
subb
xor
fldenv
enter
dec
pusha
pop
insb
push
push
pop
sub
subl
xchg
and
arpl
loopne
or
addb
mov
mov
mov
xchg
mov
jno
test
out
push
and
insl
jb
je
and
les
sbb
imulb
cmp
inc
inc
or
scas
repnz
pop
ret
repnz
jle
insb
test
les
mov
dec
out
lock
loopne
jno
lock
mov
pop
mov
jnp
pop
jmp
mov
bound
push
add
cltd
bound
or
sahf
push
stc
shrb
cmpxchg
lea
xor
push
in
adc
sbb
aam
xor
lret
push
adc
mov
movsb
xchg
hlt
dec
or
mov
pop
mov
jge
and
dec
sbb
je
pop
add
and
xchg
lods
or
xor
add
sbb
mov
push
inc
pushl
inc
aad
out
and
jmp
pushl
xchg
lods
inc
lock
stos
pop
xchg
mov
pmullw
ja
clc
sbb
adc
rorl
js
push
mov
adc
shlb
out
out
jns
cltd
xchg
out
notl
subb
jns
outsb
mov
inc
jnp
xchg
dec
cs
mov
jnp
lahf
clc
shrb
faddp
pop
addr16
aam
sbb
dec
imul
cmpsb
push
push
mov
fneni(8087
jl
and
in
xor
or
jae
shlb
das
ljmp
xor
nop
arpl
icebp
xor
movsl
fnstcw
adc
xchg
aaa
lahf
pop
in
jecxz
push
std
movsl
dec
jbe
test
in
or
gs
stos
lock
push
xchg
testl
data16
jo
rcrl
mov
xchg
bound
clc
jo
rorl
pop
scas
adc
repnz
jp
adc
xlat
shll
aam
jo
es
and
in
outsb
xchg
jbe
in
pop
xchg
jo
mov
mov
ljmp
cmp
sub
fdivl
fcoms
xchg
notb
cwtl
pcmpgtw
ja
insb
xchg
loope
xor
sbb
push
arpl
inc
loop
pop
cld
pop
cmp
bound
imul
xchg
in
insb
sbb
les
inc
fwait
js
cmp
push
ret
rcrb
jmp
fidivrl
push
jle
inc
sub
imul
inc
push
aad
mov
push
fstp
pop
int3
mov
cmp
daa
loop
xor
jle
push
jg
pusha
cwtl
push
cmpsl
sbb
in
jge
outsb
lret
dec
xlat
inc
fldl
fdivr
and
push
cwtl
sub
fsubs
push
fdivp
loopne
xchg
stc
ret
sbb
fcompl
imul
mov
lret
fcmovb
and
xor
jae
fwait
jb
add
ss
bound
cmp
lahf
cmp
dec
mov
sub
mov
lods
push
or
mov
inc
iret
decb
xor
out
arpl
nop
jne
inc
std
push
jp
cmpb
gs
out
sub
cmpsl
mov
mov
adc
mov
jmp
lea
fldt
es
cmpl
add
loopne
pop
push
clc
or
inc
jp
jae
and
mov
lock
push
cmp
mov
sbb
mov
cmp
xor
or
mov
xchg
add
pusha
jg
dec
cld
cmp
lock
inc
xlat
test
push
push
imul
test
dec
inc
xor
add
gs
shl
jne
movsb
xor
xor
xchg
add
rorb
stos
loope
add
cmpsw
aam
outsb
jle
scas
cmp
push
mov
mov
arpl
sahf
jnp
ja
bound
mov
jae
arpl
xchg
or
dec
mov
js
shrb
jl
lods
push
in
imul
enter
mov
movsb
repnz
shll
push
mov
xchg
jae
jo
sahf
pop
jnp
xchg
or
idivb
out
jo
or
jecxz
push
mov
dec
and
xor
popa
jge
fs
out
jg
sarl
leave
add
sub
jns
pop
cli
arpl
lods
xorl
pop
fiaddl
mov
push
jo
push
cltd
jl
pop
ljmp
stos
jle
outsb
testl
sbb
test
adc
icebp
js
pop
subl
mov
xchg
xchg
mov
or
pop
inc
inc
mov
repz
pop
js
sbb
pop
dec
pop
dec
hlt
es
iret
psubd
add
push
or
jo
jno
xor
mov
dec
xor
jo
mov
jb
subb
fstpt
sbb
ja
sub
outsl
in
xchg
jecxz
xlat
sbb
mov
sub
je
mov
jp
loopne
jo
add
sub
insb
mov
jl
hlt
push
insl
in
jno
or
les
loop
jo
mov
xchg
jo
push
out
add
dec
pushf
mov
aaa
or
inc
out
pop
nop
xor
sbb
in
out
mov
nop
xor
ja
jge
repnz
jo
add
and
jo
fwait
push
notb
popa
popl
ljmp
inc
push
or
xor
enter
icebp
and
mov
andl
cmp
lret
cwtl
inc
add
adc
mov
mov
jns
out
lret
dec
sarl
shlb
pop
mov
xchg
in
lock
clc
ss
and
dec
shrl
arpl
sub
clc
testb
shlb
mov
adc
or
inc
jg
fidivl
sbb
repz
jbe
pop
icebp
jno
js
mul
int3
push
call
movb
sbb
jo
cmpsb
lahf
fneni(8087
inc
daa
aam
aad
mov
fcomps
fcoms
mov
push
test
pop
out
dec
ret
and
add
int
push
push
js
fsts
std
cs
mov
xorl
into
inc
inc
cmpsl
jmp
jmp
int3
enter
mov
push
lods
loopne
push
test
push
shl
shlb
sub
cs
jge
jnp
cld
lret
xor
lock
push
cltd
fldt
insl
jbe
xor
outsl
pop
pop
inc
and
sub
push
nop
das
lret
mov
adc
push
adc
and
sbb
xchg
gs
fs
sbb
xorl
lods
addr16
int
imul
cmpsb
xchg
and
jbe
push
inc
enter
inc
pop
pop
pop
push
mov
mul
ja
mov
mov
sbb
and
fs
stos
movsb
or
lds
push
rcl
in
push
es
jnp
mov
adc
dec
out
push
push
push
or
sub
dec
lods
sbb
insl
mov
std
arpl
gs
jle
jg
cld
cmpsb
jmp
aas
or
inc
pop
push
or
or
js
jae
sbb
and
leave
ss
xchg
push
movsl
mov
jl
xchg
push
enter
fimull
push
stc
cmp
nop
mov
xchg
pop
std
or
in
mov
repnz
call
fcmovne
in
fiadds
mov
xchg
push
mov
jg
cmp
fistpll
mov
in
xor
dec
adc
cli
data16
sbb
imul
push
push
sahf
movl
pop
inc
pusha
add
popa
fnop
jp
pop
scas
cmp
call
fdivrl
xor
jle
lret
jp
lods
push
add
jb
mov
test
push
push
movl
ljmp
pop
test
aaa
int3
lods
int3
or
fsts
insb
arpl
mov
or
xor
repnz
inc
pop
mov
mov
movsb
adc
or
test
out
mov
xchg
and
xchg
cmp
repnz
fucom
inc
inc
rorb
add
inc
outsb
push
into
mov
xor
mov
arpl
mov
lock
xchg
push
in
sub
cmpsl
inc
cmp
or
scas
inc
mov
push
sbb
mov
push
lcall
xchg
lock
push
push
sub
cmp
sub
jl
mov
repz
mov
push
sbb
cmp
cli
mov
dec
xchg
insl
fs
mov
out
mov
aas
fldcw
push
fs
arpl
inc
sbbb
arpl
icebp
xor
lock
mov
mov
subb
mov
xor
jns
movsl
mov
imul
xchg
fnstcw
mov
sbb
xchg
lods
and
xor
mov
dec
pop
xchg
inc
scas
insl
sar
sbb
mov
jae
push
mov
test
adc
lods
mov
gs
mov
int
nop
mov
sub
clc
dec
mov
pop
movsb
mov
pop
and
mov
sub
dec
adc
fistps
test
sub
fwait
and
insb
and
fbld
pop
test
test
sbb
stos
inc
lds
jns
mov
js
lret
fisttps
inc
jge
push
fs
outsb
mov
mov
xor
fists
xchg
lock
sti
pop
imul
mov
sbb
pop
xor
mov
fs
or
lret
xchg
movsl
lea
dec
pop
icebp
sahf
pop
cmp
lea
jecxz
addr16
test
in
xchg
and
sub
dec
add
rorl
add
cmpsb
lahf
lret
jno
fisubrs
pop
clc
add
js
adc
jle
jns
in
es
aam
xorl
xor
out
jns
jecxz
push
push
jnp
data16
xchg
pop
lds
mov
inc
out
mov
pop
mov
pop
mov
outsl
imul
jne
arpl
jbe
push
mov
mov
clc
fisubrs
mov
push
popf
mov
mov
xlat
mov
add
mov
out
lahf
sar
inc
dec
and
icebp
xor
fcomp
push
push
shrl
jo
enter
sbb
jmp
push
shlb
and
cwtl
imul
mov
fimuls
mov
jbe
or
inc
inc
dec
rorl
mov
jns
cmpsb
lds
divps
ret
sti
xor
xchg
dec
mov
call
add
mov
fldenv
lret
push
mov
imul
dec
adc
lock
sahf
push
je
cmpsl
push
out
hlt
mov
push
cli
add
stos
cmp
mov
jg
mov
lock
pop
mov
or
sar
push
stos
rolb
mov
das
test
adc
inc
out
insl
sbb
es
sub
pop
pop
inc
ret
sub
stos
or
fs
test
mov
loopne
repz
cmpsb
cmp
cwtl
in
js
pop
xor
std
jle
out
hlt
jle
insl
adc
pop
inc
xor
out
jmp
dec
jno
call
push
arpl
clc
rclb
and
mov
cld
sbb
sbb
jae
cmp
in
pop
push
pusha
and
shll
adc
pop
cmp
mov
cmp
outsl
dec
cltd
adc
fdivp
dec
dec
cmc
inc
lods
push
mov
insb
fisubl
sahf
in
mov
sub
addr16
testb
adc
mov
jg
adc
cmp
fstl
testb
mov
repz
jb
mov
ja
cwtl
pop
out
mov
flds
inc
push
jbe
pop
and
xchg
or
aad
dec
pop
dec
imul
cmpsl
inc
sbb
and
sub
icebp
pop
xchg
in
mov
iret
jae
cmp
ljmp
out
int3
push
mov
fisubs
sub
xchg
cmp
scas
mov
jecxz
mov
jo
pushf
push
pusha
shlb
pop
ja
imul
cmpsl
push
dec
jae
or
xor
mov
or
jb
cmp
xor
mov
xor
cmp
xorl
imul
or
clc
test
push
xchg
inc
inc
data16
shr
or
bound
cmp
arpl
push
jp
xor
add
cltd
test
movsl
enter
popf
stos
das
cld
mov
mov
iret
jae
dec
aad
push
mov
lret
jae
fs
data16
pop
sub
push
pop
jbe
inc
mov
push
add
in
test
fucom
sub
in
mov
push
dec
push
xchg
push
call
pop
scas
js
pusha
jg
sub
mov
pusha
dec
int3
push
shr
movb
fisubrl
dec
fldl
mov
mov
add
addr16
and
xchg
mov
jne
push
arpl
push
out
add
push
test
fs
sti
out
ficoml
cmpsl
gs
mov
aaa
mov
leave
cmp
fstpl
xor
out
ss
or
jae
push
iret
fs
cmc
and
adc
push
sub
jno
mov
and
inc
ror
mov
mov
idivb
out
test
ror
fidivs
inc
jl
pop
jp
push
and
jle
jae
insl
push
sti
arpl
das
std
add
sub
insb
xchg
mov
das
xchg
loope
cmp
push
insl
adc
and
loop
ret
xchg
sbb
hlt
inc
and
in
inc
mov
imul
data16
jl
jae
xchg
pusha
pop
movsl
sub
nop
repz
cmp
call
pop
cmp
and
inc
jbe
lods
mov
xchg
dec
jo
outsb
arpl
ljmp
fildl
in
push
pop
xchg
test
insb
xchg
xchg
pop
dec
fsubrl
xor
jp
repz
out
in
das
sub
daa
sbb
movsl
push
insl
xor
mov
fisubrl
add
icebp
out
and
mov
hlt
ss
cmp
inc
pop
mov
and
mov
push
cmp
or
jg
arpl
pop
pop
mov
es
and
and
jae
lds
lret
jnp
lock
cli
jl
lea
xorb
push
lock
pop
dec
daa
aaa
aad
cmpsl
cmc
pusha
and
xchg
add
jae
push
jl
dec
cltd
jo
push
movsl
lahf
cmpsb
mov
out
arpl
mov
jp
es
out
dec
lock
push
stc
fnstenv
add
lcall
push
cmp
xchg
lret
mov
ss
push
jae
movsw
ljmp
push
xchg
jmp
jne
rcll
inc
mov
adc
and
sbb
xchg
fiaddl
xchg
mov
add
sub
movsl
mov
inc
outsb
push
ljmp
sbb
jmp
testl
xchg
jns
fcoms
outsl
aas
inc
lahf
iret
xchg
cmp
push
xor
ljmp
arpl
dec
cld
cmpsb
int
imul
and
or
dec
icebp
inc
data16
dec
subb
and
in
aam
mov
and
aaa
inc
xor
adc
aas
repnz
jp
lods
pop
int
pushf
mov
popa
sti
sub
xorl
fistps
nop
pop
sar
xor
inc
jmpw
mov
lock
aam
insb
es
js
cwtl
jns
sti
inc
push
stos
fcomi
lock
lods
jno
pop
pop
push
push
mov
inc
push
stc
xchg
push
cmc
fdivp
cmp
das
mov
cmp
mov
mov
lahf
inc
cltd
cmpsl
out
mov
xchg
push
mov
mov
lret
jb
lret
test
frstor
dec
rolb
mov
mov
ja
mov
jmp
imul
or
add
mov
xor
movsl
mov
pop
cld
dec
cld
pop
mov
add
sub
or
push
push
into
xorl
mov
cli
pop
push
pop
sahf
ret
push
mov
jne
sbb
pop
call
arpl
in
adc
xchg
psubd
inc
data16
cmp
rolb
insb
notb
popf
repnz
dec
inc
lock
jae
mov
mov
jno
pop
add
icebp
lods
add
push
cmp
push
ljmp
ja
mov
insb
cmp
sub
inc
fisubl
jae
and
lods
mov
lret
cmpsl
int3
loop
lods
mov
push
dec
xor
inc
insl
popf
jo
mov
sbbb
cmp
out
movsb
fcomps
xchg
mov
jo
lea
fldenv
cli
dec
jns
jo
outsl
push
mov
jo
pop
divl
push
or
push
lcall
lods
andl
xlat
pop
nop
mov
xor
inc
mov
add
jo
outsl
fsubl
loope
sahf
jo
mov
shlb
pop
sti
lcall
cmp
test
adc
test
push
cld
cmpb
lods
bound
les
shlb
scas
dec
jle
jo
mov
nop
adc
mov
cmpsb
enter
push
jb
imul
and
xchg
mov
xchg
add
cmpl
cwtl
jo
sub
mov
shlb
add
test
cmp
push
loope
jo
in
movsb
out
mov
mov
mov
inc
pop
jmp
jo
popa
fucom
cmp
fidivs
mov
pop
cmpl
jle
adc
stos
in
and
aas
jae
cmp
adc
mov
arpl
xorb
rcr
popa
sub
jge
add
lds
cmp
in
push
insb
hlt
scas
ss
xlat
fisubrl
pop
jmp
mov
xor
shlb
daa
push
insb
or
popl
push
add
popa
jo
and
inc
and
pop
adc
mov
mov
dec
je
push
jbe
xor
push
aad
cld
testl
push
pop
ficoms
xor
inc
inc
mov
push
jo
loope
loop
insb
mov
push
scas
sub
mov
stos
nop
xor
mov
fidivrl
cmpsl
std
push
mov
mov
jae
in
and
mov
in
inc
js
rcrb
xchg
jo
mov
fstpl
leave
adc
dec
imul
shlb
daa
inc
std
or
rcll
pop
jo
cwtl
adc
or
sub
xchg
cmp
or
cmc
add
repz
out
cmp
cmp
jg
add
jecxz
mov
jge
adc
mov
pop
ret
xchg
popa
mov
insb
inc
and
add
jo
int3
cmp
add
xor
push
dec
movsb
jo
daa
cmovl
pop
xorl
movsl
sar
mov
push
push
sub
or
mov
jo
jbe
cmp
inc
jl
mov
out
mov
mov
and
popf
rclb
jo
sahf
xor
cs
cmp
jl
adc
sbbb
popa
xchg
inc
outsl
mov
daa
fwait
repz
jo
jl
test
xlat
mov
jo
push
cld
sub
and
lahf
out
adc
outsl
inc
and
jo
mov
mov
jge
mov
jo,pt
mov
push
stc
sarb
setp
pop
jl
inc
push
cld
loop
jo
repnz
mov
js
out
xlat
inc
jnp
in
jo
xchg
shll
icebp
scas
jo
xchg
push
mov
jo
pop
jne
negl
inc
rorb
addb
jo
aam
dec
mov
imul
xchg
or
pusha
jmp
jg
js
mov
jo
std
in
loope
and
fcomip
pusha
push
pop
jl
inc
daa
push
lods
call
sbb
ss
adc
clc
push
or
dec
jo
inc
mov
mov
lds
jno
cmp
sub
popa
pushf
bound
repz
adc
adc
int3
stos
jo
fwait
or
fsub
adc
push
or
pop
aad
nop
inc
repz
mov
out
pop
mov
dec
add
mov
jb
and
xchg
jo
mov
jo
jmp
notb
jne
dec
mov
std
shlb
or
popl
or
mov
ret
outsl
add
bound
shlb
adc
jbe
lret
ja
sti
movsl
xor
mov
ss
fstl
aam
shrl
ret
jb
push
fisttpl
clc
lret
jo
mov
adc
jo
sbb
xchg
gs
mov
sub
shll
adc
cmc
xor
pop
dec
or
subb
mov
sti
dec
loope
push
jmp
xor
and
das
aad
idivl
outsl
imul
movsb
push
bound
jo
mov
fbstp
repnz
movsl
jecxz
cwtl
jo
fnsetpm(287
subl
int
or
adc
js,pn
sbb
mov
jo
pcmpgtd
ss
jo
jmp
or
into
cs
gs
fildll
insl
out
arpl
jmp
mov
inc
ret
push
mov
sar
xchg
or
xor
jo
addr16
xor
xchg
inc
rol
xor
sub
sbb
notl
in
insl
sbbb
cwtl
shll
pop
icebp
enter
stc
jge
inc
adc
mov
sbb
jl
push
outsl
cmp
sahf
jge
xchg
cs
jmp
dec
jo
mov
or
daa
jecxz
or
hlt
mov
and
push
xchg
xor
push
or
sub
mov
mov
orl
es
fbstp
jo
or
inc
gs
jo
sub
dec
lods
nop
xorb
inc
or
push
xchg
pushf
dec
and
pop
jno
jo
sub
repnz
jae
or
add
je
and
jo
mov
fadd
in
ljmp
int3
icebp
lds
jle
or
out
jo
add
aas
std
in
in
and
das
jo
icebp
xchg
adc
out
fsubrl
out
jp
mov
ja
add
pop
add
mov
jbe
mov
xchg
xchg
cmp
call
or
cli
jo
les
sti
ret
adc
jnp
xchg
push
jo
pop
roll
icebp
js
je
sub
jmp
sbb
pop
adc
lods
push
cs
in
scas
jo
inc
repnz
leave
dec
outsb
jo
aad
mov
fnstenv
loope
int3
adc
test
push
movsl
mov
dec
sbb
ret
out
test
pop
ficompl
dec
rorb
jge
andb
icebp
lods
mov
int3
adc
and
rorb
ljmp
loop
mov
mov
mov
rcrb
scas
mov
inc
inc
cltd
nop
adc
jb
fbld
lds
push
jae
jle
mov
xor
cmp
jmp
arpl
test
lock
je
mull
xchg
mov
dec
jb
inc
andb
scas
xchg
adcb
data16
es
pop
sbb
ja
sbb
stos
pop
jo
adc
imul
xor
and
push
add
jge
stos
cmc
or
inc
mov
push
push
lcall
nop
gs
fs
sub
add
sub
lds
push
cmp
push
mov
out
mov
rep
es
fidivrs
adc
jo
rorl
sub
inc
xor
jo
xor
jo
and
push
jo
xchg
inc
loopne
iret
orl
add
dec
das
int3
jbe
rorb
scas
pop
mov
lahf
scas
cmpb
insb
lret
sub
sbbb
fbld
jbe
pushf
test
add
xlat
jo
lds
jo,pn
cmp
cmpsb
sbb
push
jo
fstl
cmp
add
mov
sub
pusha
aas
push
ds
icebp
and
pushf
jae
cmpsb
mov
out
cmp
in
insl
cmp
repz
out
loopne
dec
aas
fs
cmp
pop
clc
nop
cmp
test
xchg
xchg
xor
sbb
aad
add
push
fisubl
add
push
jl
xor
data16
dec
push
or
ss
arpl
mov
pop
mov
lret
out
cmp
pop
outsw
push
mov
subb
lods
ficomps
test
stos
push
jnp
jno
cmp
int3
adc
push
flds
dec
test
jno
or
jns
jne
imul
rorb
push
push
movsl
andb
xor
push
ss
jb
je
or
out
push
adc
gs
jns
fs
push
mov
lahf
subb
sub
mov
sub
sbb
fistps
jo
and
pusha
cld
mov
inc
lds
lahf
adc
icebp
daa
mov
rcrb
das
lahf
fcomi
sub
mov
mov
int
dec
and
loopne
insb
dec
jno
sub
push
in
or
cmp
push
pop
arpl
inc
cmpsb
scas
and
cltd
push
jle
fisttpl
jecxz
lods
lods
or
gs
cmp
inc
jns
inc
sbb
test
rcl
leave
out
push
adc
out
cmp
bound
inc
push
jnp
andb
sub
mov
loopne
push
rcrb
inc
xchg
jle
jae
add
arpl
int3
jo
sub
lock
mov
mov
pop
mov
push
mov
and
mov
sbb
arpl
sub
or
out
jno
push
imul
mov
pop
in
enter
mov
outsl
sub
cmc
test
pop
out
gs
fldl
nop
in
mov
pop
push
pop
fmull
dec
mov
jg
jno
xor
jo
cmp
and
mov
or
adc
ret
jg
out
aas
scas
mov
add
scas
mov
ljmp
clc
mov
aam
mov
scas
bound
jb
pop
test
pusha
or
addr16
mov
sarb
lahf
rcrl
aam
out
inc
outsb
adc
jo
pop
test
mov
inc
cmpsl
or
jnp
cs
and
push
pop
lea
sbb
xchg
jmp
je
pusha
rorb
jae
imul
subl
sbb
sbb
add
nop
mov
ret
sbb
movsl
mov
add
fcmovnb
jge
xlat
push
int3
dec
xchg
insl
loopne
jns
and
test
jae
mov
mov
push
inc
jae
push
cli
inc
jecxz
jmp
outsl
arpl
fcomps
data16
sbb
mov
cltd
adc
gs
or
inc
xchg
lahf
ljmp
lahf
mov
test
imul
stc
pop
mov
lds
adc
jae
popa
pusha
dec
mov
push
adc
dec
inc
push
pop
call
mov
and
sbb
xchg
in
jle
loopne
sbb
jo
mov
scas
aas
jmp
popf
sub
sahf
rclb
and
insb
sub
hlt
enter
sbb
mov
cmpsb
sub
and
dec
xlat
popf
cmc
adc
ds
push
adc
enter
ljmp
fldenv
inc
test
fldcw
inc
adc
and
popa
mov
mov
rcr
sbb
movsb
lret
out
jae
adc
arpl
jg
sub
in
jg
inc
int3
adc
inc
push
std
mov
mov
mov
jge
addl
jbe
mov
push
icebp
mov
roll
test
jne
sbb
aaa
popl
cmpsl
mov
insl
mov
insl
addr16
push
cli
in
xchg
int
call
cwtl
mov
fstpl
sbb
in
jmp
jmp
mov
scas
jmp
lods
es
push
adc
rorb
es
ss
xchg
imul
xchg
jno
fadd
out
jae
and
adc
dec
std
jns
or
xchg
arpl
lcall
dec
loop
imul
dec
dec
mov
paddusb
aaa
cmp
sarl
push
fiaddl
decb
aad
test
in
loope
mov
lock
push
jecxz
imul
sar
pop
int3
and
sti
push
mov
or
es
outsb
sahf
xor
outsl
rcll
cltd
mov
out
push
inc
fidivl
mov
jnp
sub
pop
xchg
lret
jl
sbb
arpl
lcall
insb
xabort
sbb
jae
movsl
jbe
pop
mov
cmp
xchg
xor
mov
xchg
inc
loope
jae
mov
xchg
cmp
push
nop
lock
or
jbe
stc
mov
clc
jecxz
mov
fwait
sbb
repnz
cs
popf
inc
pusha
xor
jp
out
jmp
jbe
into
xor
mov
sub
adc
fs
sub
pop
int
inc
std
rclb
adc
jbe
rcll
cli
fisubs
jge
iret
jns
cmp
aaa
mov
ret
mov
mov
inc
jo
mov
adc
sub
mov
arpl
adc
nop
dec
imul
xchg
outsb
mov
mov
mov
jmp
mov
bound
aaa
movq
sub
xor
pop
jo
out
sbb
cmp
cmp
icebp
fidivs
pop
data16
bound
movsb
xchg
inc
pushf
jae
addr16
outsl
fdivs
das
cmovo
adc
data16
push
mov
mov
inc
sub
js
jge
out
lock
jle
jo
sahf
push
or
adc
jo
cs
outsb
add
daa
mov
in
negl
mov
jo
jmp
js
mov
jo
fwait
stos
jbe
out
lret
mov
daa
nop
dec
dec
imull
mov
sarl
push
ljmp
add
jo
sbb
xchg
aaa
cltd
repnz
push
dec
dec
gs
inc
push
and
and
jb
repnz
bound
push
jle
jno
and
push
or
sbb
out
xor
jo
push
mov
or
xorb
mov
cld
dec
ret
int
nop
push
push
dec
push
jo
pop
ret
mov
pushf
jo
fiaddl
pop
orb
rcl
out
addr16
add
pop
inc
jo
jae
xchg
dec
dec
pop
cmpsb
push
sbb
or
jbe
cmpsl
push
icebp
int
jno
jo
aad
pop
test
cmpb
dec
jo
test
decl
pop
push
push
add
ret
inc
sub
addl
pop
mov
sub
flds
movsl
jo
or
dec
or
push
xchg
mov
jo
movsl
lods
push
rclb
jo
or
and
xor
nop
sbb
jne
jo
sahf
scas
rcr
inc
push
mov
inc
xchg
xchg
int3
das
sub
and
dec
adc
pshufw
xchg
jo
sub
scas
icebp
xor
mulb
jo
adc
addr16
add
pop
jo
inc
loope
mov
push
daa
jno
jbe
xchg
sarl
xor
in
mov
fnsave
and
push
lret
jns
fdivrs
nop
jb
xchg
mov
lahf
test
mov
jo
mov
jo
mov
ret
add
icebp
pop
cmpsl
pop
adc
push
jmp
inc
rolb
or
js
aam
in
jp
xor
aaa
mov
cmp
jg
and
fistpl
mov
subb
aad
ss
jae
jl
cli
out
ljmp
test
data16
push
cmp
rcr
push
mov
xor
inc
cmpsb
data16
stos
push
arpl
into
sbb
andb
cmp
outsl
lock
je
arpl
push
inc
sahf
jne
fwait
mov
or
or
xor
jmp
roll
dec
movsl
dec
js
pop
mov
fwait
adcl
data16
insb
pop
stos
push
sbb
fs
or
iret
adc
cwtl
xor
push
mov
fsubs
push
push
xchg
movsb
or
sar
shr
pop
xor
orb
pop
pushf
mov
outsb
jo
inc
aad
xorl
sub
orb
test
sahf
mov
push
pushf
push
mov
loop
stos
xor
lock
jg
arpl
sub
push
mov
rorl
cmc
popa
aas
test
or
mov
loope
test
mov
ret
in
lock
sbb
rorl
push
mov
testl
xor
jo
aad
pop
mov
jmp
add
in
xchg
and
cwtl
rcl
jns
stc
jno
clc
das
arpl
cld
mov
jo
or
xor
mov
xor
push
xlat
pop
repz
sub
test
mov
jo
out
jbe
mov
cmpsl
stos
pusha
pop
jle
daa
mov
out
loopne
sub
neg
idivb
fcompl
aad
ss
push
jbe
sbb
xorb
sarl
pop
pop
jb
jle
inc
jo
stos
imul
jo
outsb
inc
lcall
shrb
inc
dec
add
jecxz
andb
mov
lahf
jo
mov
das
xor
mov
mov
xchg
xchg
enter
pop
pop
jle
sbb
pop
orl
das
adc
ja
nop
mov
mov
mov
pop
add
and
or
jo
cs
xchg
mov
in
push
lock
xorl
cld
adc
mov
jo
loope
mov
sbb
pop
out
rep
sub
push
push
jae
ja
jo
sbb
stc
jo
rorb
xchg
insl
xchg
xchg
pop
scas
popl
in
test
lahf
out
jo
sbb
int
jecxz
or
cmp
and
push
and
adc
cs
lret
cmp
and
int
xchg
jno
pop
stos
ret
cmp
mov
push
out
sbb
int3
xor
nop
pop
xchg
loopne
ds
push
lcall
dec
push
mov
rcll
dec
jb
aas
mov
push
jns
scas
xor
mov
push
enter
inc
stc
cmp
ss
xor
pop
in
mov
cltd
cmp
lods
test
jo
mov
mov
jo
orb
xor
jo
xor
sbb
xchg
sub
inc
lahf
mov
jo
fstpl
mov
aaa
lds
sbb
pop
pop
jno
jne
das
or
inc
idivb
repnz
pop
lock
aaa
inc
xorl
sbb
cmp
xor
addr16
clc
mov
push
adc
mov
mov
ljmp
push
loop
mov
pop
mov
mov
mov
int
cmp
ss
cmp
scas
xor
or
lds
dec
lock
push
icebp
jo
shrb
jo
adc
cmp
imul
dec
push
jo
outsb
leave
stos
mov
sti
daa
jo
mov
or
mov
push
jmp
fidivrl
push
rcll
add
into
jae
stos
jo
in
in
adc
outsl
inc
shlb
js
mov
or
in
add
mov
xchg
stc
dec
cs
shll
inc
lods
adc
xorl
popf
jo
inc
repnz
or
pop
inc
jo
addr16
sbb
mov
push
shrb
xchg
jle
mov
icebp
lods
nop
jb
or
imul
jns
jmp
fcmovnb
dec
rorb
mov
add
xchg
jo
sub
decb
jo
xor
sbb
loopne
cs
dec
xlat
fbstp
call
inc
clts
testl
fs
push
xor
bswap
out
es
xor
cmp
jns
nop
loope
mov
fsubrl
dec
ljmp
jo
push
stos
notb
jo
xchg
shlb
and
sub
hlt
xchg
inc
xchg
jo
mov
pop
jo
fsts
jge
jl
lds
lret
fsubrl
ja
movsl
mov
cmp
dec
cmp
out
insl
nop
and
sbb
jo
popa
add
sub
inc
jo
sub
mov
nop
jnp
xor
sub
scas
call
jecxz
aad
xchg
je
aam
loopnew
jo
add
jo
push
mov
mov
pop
or
dec
adc
femms
in
lock
sbb
ficoml
sub
movsl
sbb
mov
ret
push
jo
cli
in
adc
std
inc
jmp
mov
sar
adcb
pusha
mov
movsl
pop
push
push
jo
and
insb
sub
cld
jo
jge
roll
mov
adc
popf
mov
gs
mov
mov
inc
arpl
mov
push
mov
pop
pop
xchg
repnz
and
neg
push
imul
jo
cld
and
jo
out
dec
dec
sub
imul
pop
inc
je
inc
pop
insl
mov
scas
pusha
xlat
jo
push
cs
push
cmp
adc
xchg
push
push
in
sbb
mov
inc
adc
call
ss
bound
mov
lods
scas
jo
test
movb
nop
jg
inc
in
cmp
inc
loope
add
jmp
jo
push
mov
sbb
adc
sub
xor
test
ja
adc
loope
add
jg
mov
lret
jl
shr
adc
and
inc
jo
xchg
cwtl
mov
clc
add
inc
in
push
dec
push
add
mov
jo
lcall
es
jo
inc
inc
insl
xchg
or
jne
sub
cmpl
jo
add
or
jp
add
fcmovnb
enter
cli
outsb
xchg
dec
xchg
mov
mov
jb
in
jne
xor
fidivrs
jb
outsl
jo
pushf
cmp
jmp
mov
pusha
out
popa
xchg
sub
sub
in
cmp
push
stos
sbb
inc
out
cmp
adc
push
ret
rorb
jmp
sar
out
imul
and
mov
cltd
shll
mov
scas
rclb
jo
xchg
cmc
test
dec
imul
scas
je
and
jo
xchg
push
dec
sbb
lahf
inc
jo
repz
jo
jle
fwait
sub
js
adc
mov
mov
loopne
xlat
aad
add
push
mov
test
je
mov
jo
hlt
cs
test
push
dec
scas
inc
jp
jo
mov
enter
inc
inc
xor
pop
outsb
or
push
ret
das
mov
jns
aam
jo
mov
adc
movb
pop
xorb
push
mov
or
icebp
and
mov
pop
xor
jb
scas
pop
in
js
std
fdivp
fidivrl
push
push
int3
mov
push
fdivs
or
push
ja
addr16
test
mov
xor
jnp
push
pop
mov
popf
push
pop
idivl
jo
pop
popa
ret
pop
push
fidivs
jo
fiadds
xor
js
jo
push
jle
pop
lods
out
jmp
mov
add
xchg
sub
outsb
mov
push
scas
gs
push
sub
testb
push
or
pop
repnz
xchg
push
xor
mov
inc
or
imulb
add
faddl
add
xor
add
es
jg
xor
jo
jne
jae
adc
outsl
adc
sbb
push
or
jl
mov
outsl
inc
js
into
leave
and
or
je
cmpb
jno
cmc
outsl
shrb
ret
stos
xor
push
cmp
stos
jge
pop
xchg
pusha
mov
push
stc
jae
mov
pusha
mov
fistl
in
cwtl
jae
ret
test
pop
jns
loop
jo
sub
mov
lret
pusha
fldln2
xor
inc
lds
popa
sbb
push
lods
lods
daa
pusha
or
push
ljmp
xor
int
jo
adc
std
imull
add
adc
xor
in
push
sbb
mov
mov
aaa
inc
sub
repnz
push
js
repz
divl
fadds
mov
xchg
jo
and
aaa
cmp
iret
js
mov
cs
push
jmp
lods
inc
mov
jno
or
mov
pop
push
mov
ds
iret
shrb
jmp
jle
cmp
jo
jae
jns
fnstcw
ret
jecxz
inc
jnp
jl
jo
jge
sub
pop
into
ror
in
test
test
and
mov
mov
js
fs
rep
jg
mov
iret
pop
push
jo
call
push
sti
jo
lea
xchg
jo
cmpsb
xor
stc
into
ja
hlt
push
jbe
dec
repnz
nop
loope
divb
stc
out
les
mov
jo
scas
mov
or
int3
pushf
cld
mov
cmc
leave
xor
push
inc
ret
mov
idivl
jo
fists
mov
sbb
jo
outsb
fs
cld
pop
jo
dec
dec
into
out
fadds
or
or
out
shrb
push
cmp
out
lock
dec
in
xlat
jo
xchg
andl
nop
aas
sub
dec
or
jne
cmp
sbb
mov
sbb
pop
testb
cmp
jbe
jo
xor
lds
adc
lret
xchg
push
cmpb
iret
insl
outsl
push
jns
jne
jo
push
loop
push
pushf
ljmp
out
iret
jbe
stc
jmp
in
sbbb
repz
pop
fwait
mov
popf
jbe
xor
fdiv
test
stos
mov
jo
js
mov
jo
mov
mov
std
or
mov
int3
mov
inc
inc
lds
jb
cmp
sbb
iret
out
outsl
mov
imul
pusha
and
xor
jo
jbe
mov
dec
iret
pop
jo
fbstp
push
jnp
shl
imul
cmc
jo
loopne
cld
push
mov
enter
or
jbe
repnz
jo
cltd
pop
sbb
mov
loope
lods
push
inc
cmp
push
sbb
jo
shll
jo
sub
call
xor
test
jo
mov
push
out
or
les
andps
mov
addr16
jo
pop
push
inc
jmp
jo
lods
or
cmp
test
mov
sbbb
idivb
jo
rcll
cmpsl
push
stos
int
js
mov
loope
fcomps
addb
cwtl
mov
jb
fs
jo
nop
and
std
or
mov
pusha
jo
lea
loop
shlb
sub
jo
pusha
fwait
cmpsb
mov
arpl
add
jo
and
lcall
fdivl
pop
jb
sbb
xchg
jne
mov
inc
inc
mov
imul
dec
push
shrb
xor
test
fs
xor
sbb
je
add
mov
mov
add
jl
loop
jno
leave
or
and
sbb
pushl
fsubr
cmp
or
sbb
inc
je
shrl
popw
les
in
xchg
sub
nop
mov
gs
xor
mov
mov
jo
and
mov
xor
sub
hlt
cmp
out
jo
or
cmc
scas
jo
gs
push
xchg
mov
dec
mov
or
ret
in
and
mov
cltd
je
jo
sbb
aad
mov
faddl
movsb
test
loopne
mov
add
xor
into
outsl
push
push
sbb
jo
push
sbb
inc
arpl
dec
aas
jae
lahf
inc
jb
imul
js
aad
push
repz
push
fisttpl
or
dec
dec
call
jne
mov
jo
cmp
push
jno
jo
cwtl
cmp
data16
gs
mov
aaa
sbb
fstps
push
das
push
adc
or
inc
stos
nop
fsubl
cmpb
jo
fimull
in
ss
cmp
rol
xchg
pop
testb
clc
mov
and
mov
cmp
jae
jo
sub
jb
push
mov
in
xor
cmp
sub
or
nop
sub
stos
les
stos
mov
imul
into
jp
dec
fnsave
mov
pop
pminub
lcall
mov
out
jne
cmc
mov
mov
cli
inc
jp
in
clc
fisubs
shrb
add
call
sbb
out
sub
mov
jo
in
loop
push
jo
push
mov
bound
jo
pop
dec
lahf
paddq
data16
addr16
fadd
xchg
inc
push
jo
adc
add
sti
aam
push
into
jno
xor
add
scas
je
rclb
insb
in
push
jo
rolb
aam
or
ret
mov
pop
xchg
cmp
jo
outsl
int
mov
or
xchg
jnp
lods
je
stos
je
cltd
test
mov
jb
ret
ljmp
xchg
je
imul
jo
pop
dec
jge
cmp
loope
adc
mov
push
insl
jl
test
std
dec
in
pop
stos
addl
repz
popw
shlb
in
lcall
xor
fstl
test
jno
pop
jo,pn
mov
inc
xchg
fcompl
ja
roll
pop
inc
mov
js
daa
sub
filds
in
jo
xchg
xor
cmpsb
or
fs
jo
xor
aaa
mov
std
lock
jmp
jo
jle
mov
jo
inc
sbb
sbb
jo
jl
adc
mov
mov
loop
int
dec
or
jo
add
testl
inc
mov
lea
mov
xchg
lcall
jle
je
stos
jo
lods
or
mov
pop
cmp
push
mov
lea
repz
cmp
sbb
jo
repnz
jmp
cltd
cwtl
and
mov
xchg
call
xor
push
cmovne
xor
ds
sub
cmpsl
ljmp
inc
push
clc
loope
in
fcmovnu
cli
jo
dec
aaa
das
ljmp
out
loope
out
or
push
aam
gs
mov
push
fsts
mov
cwtl
mov
gs
ds
insb
xchg
adc
sbb
jo
jnp
cs
pusha
lods
cli
shrl
jns
inc
lock
fs
pop
jo
mov
leave
mov
in
int3
inc
inc
push
jb
sbb
jg
mov
push
movsl
nop
adcl
and
jp
out
test
jae
add
adc
sbb
jecxz
inc
dec
jo
lret
leave
push
xor
xor
addb
jo
mov
fwait
push
outsl
aaa
pop
jo
aam
pushf
or
aad
add
cmp
pop
mov
jp
lock
sbb
pop
fs
jbe
jge
movsl
push
iret
arpl
jo
loope
cmp
fadd
fisubs
xor
mov
sahf
and
icebp
jo
or
xchg
xchg
in
iret
mov
xor
add
shrl
cmp
pusha
push
mov
jp
jo
std
loopne
cmpsl
sub
mov
inc
fwait
inc
repnz
push
rorb
sahf
lock
mov
sub
js
cwtl
cmpsb
fistps
and
mov
int3
ljmp
popf
push
movsl
add
dec
fwait
repz
jae
stc
cmp
mov
adc
movsb
mov
add
sub
push
lods
subb
mov
stos
repnz
push
loop
lret
fldenv
fwait
loopne
adc
xchg
fcom
loopne
mov
add
insl
fwait
call
addb
jns
std
add
bound
repz
shrl
lods
or
sub
pop
push
lock
jns
emms
ret
mov
xchg
bound
lods
mov
repnz
mov
inc
and
faddp
outsl
ljmp
test
loopne
push
aad
and
jmp
jl
jp
xor
xor
mov
shrl
fwait
pusha
pop
stos
mov
shlb
adc
lock
dec
cmp
jae
jge
or
mov
pop
arpl
mull
jmp
push
hlt
movsl
push
daa
sbb
daa
std
fnsave
movb
and
jns
in
in
jg
fmuls
pop
push
ret
call
arpl
mov
sub
sbb
adc
xchg
ja
scas
dec
aad
cmp
jb
push
push
or
stos
cltd
lret
popa
cmp
push
in
cs
out
jno
std
inc
into
jnp
int
fwait
or
fs
jo
adc
imul
adc
dec
pusha
jo
add
lods
sti
dec
cltd
jo
inc
dec
sarb
lret
mov
xor
cwtl
lea
jo
in
aaa
mov
jbe
mov
je
add
stc
loop
mov
push
dec
adc
addr16
dec
adc
hlt
cmp
lret
popf
inc
push
insb
rorb
hlt
push
cmpsb
gs
movsb
jmp
mov
dec
push
adc
push
mov
cmp
or
push
inc
pop
adc
sub
ret
aad
rclb
or
mulps
push
sub
stc
daa
adc
shrb
call
or
sub
add
out
jns
scas
push
mov
jle
add
fwait
aas
aad
pop
adc
cmp
inc
insb
xchg
in
cmpsl
inc
rclb
mov
lret
in
xor
mov
stos
es
jle
pop
test
clc
sbb
aad
sbb
adc
push
stc
data16
pusha
repz
xchg
les
jmp
dec
mulb
aaa
adc
test
in
pop
jns
imul
vhaddps
xor
fcmovu
in
ljmp
or
dec
inc
push
cmpb
data16
syscall
jae
xorl
jge
pop
imul
inc
fwait
pop
scas
subl
data16
mov
fst
and
call
mov
andl
negb
inc
lods
fsubrs
push
jmp
cmp
negb
std
push
ret
dec
lods
mov
and
mov
imul
pop
cmpsb
add
adc
jb
mov
sbb
dec
sbb
pop
jecxz
sub
mov
arpl
fldenv
jle
xchg
insb
jno
adc
daa
pop
or
cmp
cmc
iret
lahf
dec
mov
or
dec
inc
or
addr16
jo
aas
sbb
jmp
push
xorb
jo
or
test
jmp
bound
enter
je
je
outsl
jg
dec
and
adc
es
mov
mov
fsubrp
orb
sbb
mov
and
jo
scas
xor
icebp
pop
sbb
add
jg
sub
mov
pop
js
jp
sbb
mov
dec
int
jo
insl
adc
jp
pop
idivl
nop
scas
imul
mov
lret
fldl
aam
jns
jo
stos
and
lret
loopne
jo
cld
cmp
stos
pop
loop
icebp
gs
cmpb
pushf
push
mov
shlb
pop
test
js
popa
lock
jo
adc
je
iret
lds
invd
lahf
sub
and
xor
scas
jp
mov
pusha
mov
in
push
data16
push
sub
cmp
outsl
push
int
or
cli
or
testb
inc
dec
iret
arpl
ss
fisubs
adc
mov
lds
ret
or
rcll
mov
jl
orb
js
lock
adc
and
test
mov
xchg
jb
rcll
fnstsw
xchg
cmc
jnp
out
or
int
dec
ficompl
jo
lock
test
mov
adc
mov
pop
jmp
xor
loopne
leave
ret
lea
mov
daa
jno
movsb
inc
xorl
lock
bnd
pusha
xchg
pop
aas
lea
ljmp
jl
mov
inc
or
mov
lcall
add
icebp
jnp
push
icebp
mov
imul
je
xor
das
vmaxpd
push
int3
add
mov
add
les
adc
es
xchg
int3
adc
lret
hlt
cld
lods
mov
into
mov
ja
xor
jne
jo
xchg
addb
jo
push
mov
jo
loope
cmovae
cld
leave
adc
je
ret
andl
out
das
nop
jo
fisubs
lret
iret
dec
outsl
xchg
repz
jmp
xchg
jo
data16
fsubrl
sbb
roll
bound
repz
jo
pop
lock
das
sub
xorl
mov
flds
mov
ljmp
add
std
fdivrl
mov
fldenv
mov
fldt
sub
lds
rcll
cmp
inc
in
arpl
fsubs
push
xor
jo
pop
clc
cmpsb
push
mov
push
fwait
sbb
pop
jae
out
hlt
mov
ss
cmp
jo
mov
push
jle
addl
icebp
ss
nop
je
jo
shrb
leave
jns
flds
sbb
scas
jg
lretw
lret
mov
pop
dec
and
out
stos
int
mov
sbb
pop
sub
roll
sti
inc
leave
int3
js
cmc
in
movsl
mov
sbb
aad
stc
jmp
push
mov
test
xlat
icebp
xor
mov
jb
sub
dec
lahf
add
in
cli
fistpll
adc
lods
test
loop
cmp
mov
ds
test
inc
add
xor
pop
sub
test
jmp
lock
mov
or
test
or
xchg
daa
cs
inc
sbb
xor
mov
dec
mov
movsl
sub
insl
mov
adcl
movb
dec
arpl
xlat
dec
das
xor
out
jae
inc
stos
sbb
insl
jns
aad
push
adc
js
or
inc
xchg
stos
xor
inc
push
lods
dec
mov
sbb
adc
iret
xor
xorl
out
mov
lock
inc
pop
push
aas
mov
in
insb
insl
jae
lret
scas
pusha
adc
int
sbb
rorb
mov
jne
jno
arpl
mov
xchg
stos
cwtl
jge
and
outsl
arpl
push
js
pusha
rclb
insb
pushf
movb
mov
mov
loope
int
jno
jecxz
push
jl
xchg
fldt
xor
stos
cmp
arpl
cltd
lret
dec
xchg
and
je
scas
cli
pextrw
nop
mov
jae
mov
push
pusha
sti
add
test
sub
mov
jle
xchg
add
dec
int3
pusha
test
imul
adc
fnstenv
jno
mov
mov
xor
bound
clc
roll
test
lock
cmp
push
dec
in
loop
jno
popf
dec
int3
and
movsb
sub
repnz
fcoml
mov
gs
fwait
jle
ret
loop
adc
cmpl
fcoml
cs
xchg
xor
neg
mov
xor
stc
test
cmpsb
inc
push
lds
mov
into
mov
and
pop
dec
xor
ljmp
push
in
cltd
out
insb
jo
rcrb
mov
cs
xchg
sbb
adc
push
sub
test
xchg
jb
ret
inc
mov
cmp
ljmp
icebp
dec
aaa
in
repnz
pop
jo
push
push
inc
in
jb
jl
jmp
ja
jle
fs
in
movsb
test
les
pop
test
stos
rol
lock
mov
push
jns
les
mov
lahf
jno
jbe
insb
lods
adc
sbbb
dec
pop
in
mov
fistps
jo
mov
xchg
ud0
in
mov
push
xor
mov
fisubrs
add
sti
dec
insb
inc
scas
test
adcl
ret
jae
loop
dec
jo
jg
adc
push
ror
adc
pop
xchg
or
push
movsb
jo
enter
mov
push
nop
rorb
xchg
test
cwtl
dec
push
jno
adc
loope
iret
xchg
dec
push
loopne
mov
rolb
mov
ret
ret
stc
push
cmc
xchg
imul
gs
imul
aaa
jo
sbb
lret
shl
jnp
shlb
loope
sbb
ds
xchg
aam
mov
add
ret
cld
mov
xor
iret
adc
bound
jb
aas
movsl
push
push
lret
stos
or
cmp
xlat
push
std
xchg
xor
aam
pop
jbe
dec
inc
jo
inc
push
sahf
mov
inc
movsb
mov
xchg
jo
mov
jl
jo
out
push
pop
pop
cmpb
inc
sbb
sub
sub
cmp
mov
add
push
jno
dec
scas
pshufw
adc
test
mov
insl
out
jo,pt
outsb
adc
adc
jo
ficomps
jne
mov
nop
cwtl
pop
repnz
cmp
nopl
xchg
dec
sahf
daa
pop
fwait
jno
dec
pushf
movsb
push
mov
in
mov
and
inc
frstor
jo
movsb
jecxz
push
jbe
adc
cs
std
and
scas
xor
xchg
mov
pop
into
push
push
jo
daa
push
fsubs
std
out
loop
int3
mov
jo
sbb
jno
daa
and
pusha
xor
or
clc
je
lahf
mov
cmp
mov
push
ret
sub
mov
jge
ficomps
call
in
xchg
nop
pop
cmpsb
pop
je
andb
and
mov
rclb
jo
pusha
and
clc
jo
lods
adc
dec
les
fsts
pop
sbb
jnp
lcall
nop
pop
fcoml
push
int3
jle
bnd
out
add
and
mov
or
xchg
sbb
push
adc
and
inc
xlat
fucom
xor
sbb
add
cmp
jo
dec
fildll
and
and
xchg
jo
sub
loope
scas
mov
insb
je
dec
lcall
and
nop
fsubrs
jg
jns
jo
popa
add
jp
inc
xchg
cs
cmp
or
sbb
pand
xchg
fwait
xchg
out
and
leave
mov
int3
mov
sbb
jo
push
rclb
aam
push
sbb
cmp
sarb
adc
jp
or
leave
loopne
jo
lahf
cmpsb
sub
testl
and
stc
jo
xchg
or
and
int3
jo
iret
ja
rcl
mov
lret
jge
pop
jns
jmp
ja
scas
aaa
pop
inc
jo
repnz
je
jo
dec
xor
jns
pop
push
mov
jo
sar
mov
cmc
sbb
or
and
jge
cld
or
mov
cltd
pop
les
fldt
jae
adc
iret
mov
inc
or
dec
mov
adc
fisttpll
mov
mov
js
jae
cmp
fs
notb
iret
xchg
ret
push
adc
mov
aad
jo
daa
sub
mov
imul
loopne
shlb
xchg
jbe
xchg
das
sub
js
xor
loop
lods
fs
sub
imul
and
call
stc
icebp
in
inc
out
and
orl
aam
nop
xor
nop
out
push
jb
andb
leave
mov
lea
mov
pushf
in
jmp
outsl
cmp
push
adcb
xchg
pop
dec
jo
xchg
enter
fs
test
pop
sub
adc
jo
in
dec
addr16
repnz
stos
add
sub
fldl
popa
jp
mov
jb
scas
lret
nop
jle
out
pop
jnp
aam
nop
sub
cmpsl
lret
pop
xor
push
mov
add
sub
popf
push
cli
xchg
sub
in
jbe
rclb
jo
cmc
fldl
push
xchg
mov
lahf
mov
jle
jo
fstpt
xchg
nop
mov
rcl
jbe
insb
bound
jo
aam
mov
nop
sbb
and
pop
insb
xor
mov
sar
inc
adc
mov
cmp
rorb
xor
icebp
xchg
cmp
jo
test
jge
mov
jo
popf
ss
and
andl
cmpsl
cld
xchg
data16
rolb
addr16
xchg
xorb
sbb
stos
pop
lods
jo
adc
enter
mov
xchg
in
sub
pop
jo
out
mov
sbb
sub
and
test
push
out
dec
insb
hlt
aas
jbe
pause
mov
dec
jae
jl
nop
add
cmc
outsl
adc
enter
sub
divb
cli
jo
mov
xchg
out
fldenv
cmp
inc
jl
out
jo
lret
pop
int3
mov
movl
sbb
mov
sarb
int
jb
mov
and
into
jo
fnstenv
shll
fistl
ds
mov
pop
mulb
sub
cmp
mov
cltd
lods
or
and
mov
out
adc
loop
lcall
pop
push
xchg
inc
jno
aad
inc
fiadds
sbb
jle
stos
cmpsl
push
dec
mov
jl
shlb
fs
fsubrl
arpl
out
pushf
adc
mov
and
jo
stos
mov
jo
call
lret
and
jo
mov
out
jo
repz
mov
inc
das
xchg
jecxz
pop
jo
or
dec
mov
mov
mov
adc
ja
lret
push
dec
mov
ss
fcomps
test
aas
out
jo
xlat
bnd
push
lods
aam
mov
cmp
jo
outsl
fwait
loope
lahf
popf
inc
jo
push
dec
std
ret
xor
xchg
and
pop
push
push
icebp
test
daa
jg
incl
mov
std
jo
shrb
repz
insl
add
insb
dec
je
dec
mov
jp
xlat
push
jo
mov
mov
pop
jp
cmovae
bound
mov
dec
insb
nop
push
sub
lock
sahf
loop
mov
in
xor
jo
fbld
add
shl
mov
inc
jno
repnz
jo
cmp
stos
punpckhdq
jne
add
add
lret
mov
jo
sub
xor
or
cld
jo
or
cmpsl
jo
push
int3
movsl
mov
jno
loopne
mov
test
xchg
out
shlb
jae
or
lahf
dec
aam
xchg
fidivl
cmp
aas
and
in
push
imul
cwtl
push
jne
xchg
jo
in
dec
mov
je
jbe
repz
imul
adc
push
push
or
lret
lret
sub
fisubs
jae
sbbb
sub
mov
sti
jo
xchg
aam
pop
loop
dec
je
or
mov
andb
std
scas
jns
cld
jp
push
mov
mov
sti
add
repnz
sub
out
mov
mov
jae
mov
and
shlb
shll
insl
jns
dec
sti
arpl
xorb
sti
fwait
lock
and
repz
xchg
xlat
add
sbb
popa
lret
xor
nop
push
lret
lods
mov
mov
lock
jae
js
push
jmp
add
or
and
adc
fisubl
subl
jno
fidivs
ret
jle
push
xchg
lock
dec
mov
test
push
in
push
or
mov
adc
rcr
dec
add
js
cmp
lret
shl
dec
rcr
push
ds
adc
icebp
and
ret
cltd
test
cmp
in
hlt
pop
jnp
add
outsl
push
in
jp
addr16
call
xchg
mov
inc
jbe
push
dec
sbb
int3
mov
shrb
iret
es
popa
push
push
push
or
sub
jae
andl
into
addr16
scas
adc
adc
int3
push
leave
push
jg
pop
loop
addr16
cwtl
or
repnz
push
das
jb
sbb
push
mov
cs
xchg
jge
insb
arpl
movsb
or
jae
push
icebp
aaa
in
lock
test
push
mov
mov
insb
mov
or
shlb
add
adc
jecxz
ficoms
repz
adc
inc
xchg
fistpll
cmp
pop
push
mov
in
inc
lahf
jns
out
jae
movsb
xchg
jle
sbb
lret
dec
add
sbb
jecxz
sbb
and
orl
or
adc
dec
or
xlat
ret
adc
shll
push
add
int3
in
hlt
fwait
out
pop
xchg
jl
cmpsb
loopne
inc
adc
rcrl
fnstenv
inc
xchg
pop
dec
mov
sub
cmpl
inc
push
ss
jo
mov
nop
add
orb
lock
sbbl
mov
mov
sub
mov
cwtl
push
repz
mov
pop
mov
cmc
jle
mull
cld
xchg
pushf
push
mov
test
adc
lds
add
mov
das
mov
or
jo
xor
mov
push
pop
in
out
lcall
and
insb
nop
aaa
and
rorb
jo
addr16
fcoms
or
lods
inc
lret
jo
jmp
dec
sub
adc
fs
pop
arpl
test
push
es
pushf
or
pusha
jo
aad
sti
cmpsl
mov
add
add
in
mov
pop
jo
out
xchg
push
ja
mov
lods
push
jno
push
jo
sbb
insb
jo
push
fwait
or
sbbb
jo
imul
add
stc
mov
sub
rclb
loopne
push
push
add
fs
pop
ja
jbe
enter
pusha
add
aam
jae
push
mov
out
insb
sbb
push
cwtl
or
sub
jg
loope
lea
fwait
jo
popa
add
sub
jge
cmp
fdivrp
lea
insl
xchg
jo
sbb
cmp
or
jo
in
bnd
and
nop
jno
add
adc
jb
andl
jbe
dec
je
and
jl
push
mov
fistpll
mov
adc
mov
cmp
xchg
aad
add
adc
and
fwait
das
psubb
ret
imul
jmp
mov
jge
fdivr
bound
jo
sub
test
xchg
cwtl
xchg
mov
add
fwait
inc
sbb
test
sub
dec
push
push
fdivrl
fdivs
mov
insb
xchg
repnz
insb
mov
push
fadd
inc
hlt
xorl
jecxz
pop
push
mov
and
bnd
mov
clc
jo
push
lods
pushf
mov
push
lds
or
jo
lret
test
fs
and
cmp
repz
in
add
fisubrs
imull
or
sbb
repnz
scas
dec
bound
mov
ljmp
out
push
push
rdtsc
das
bound
pusha
adc
movsb
sub
mov
inc
pop
leave
pop
or
adc
dec
cmp
dec
pop
jo
push
pop
xchg
js
leave
push
jo
outsb
mov
inc
sub
sbb
mov
test
jmp
fsubl
orb
js
cmp
jo
and
adc
sub
sahf
jle
jb
out
push
int
test
icebp
shl
inc
enter
xchg
add
insl
sbb
jo
stc
dec
jae
push
xchg
cmovs
jns
inc
xor
xchg
xchg
jo
or
xchg
sbb
fstpt
popf
shlb
mov
xchg
mov
jne
mov
jmp
cmpsl
inc
push
loope
add
rolb
jo
out
fistpl
mov
jns
mov
cs
into
lods
or
inc
sbb
shrl
pop
cwtl
jecxz
sahf
pop
js
jo
mov
pop
mov
imul
data16
lock
jo
dec
jp
or
punpckldq
repnz
ret
xor
pop
mull
mov
push
ljmp
mov
push
stos
sub
jo
call
xchg
cld
lock
mov
and
orb
stos
jo
mov
jb
xchg
aaa
dec
jo
mov
xor
sub
lahf
sti
js
mov
arpl
aam
push
addr16
cltd
es
in
loop
cmp
mov
and
in
test
mov
hlt
or
lods
fwait
popa
dec
loopne
mov
push
out
shll
adc
inc
sub
jo
mov
mov
jo
frstor
dec
imul
mov
clc
dec
mov
sbb
jecxz
push
popf
xorb
xor
in
dec
loop
jecxz
xchg
mov
jle
fistpll
push
and
bound
jo
rol
fdivrl
mov
imul
sbb
daa
jo
jp
xor
rcrl
dec
jo
stc
xchg
cltd
lret
insb
jmp
lret
mov
and
pushf
scas
jo
adc
xor
mov
jle
xchg
pusha
fcomp
mov
repnz
jo
repz
andnps
mov
inc
cmp
aaa
std
or
into
cmp
movsb
mov
je
jo
xor
stc
push
or
push
nop
sub
push
sub
jle
mov
clc
jb
and
icebp
jo
dec
jne
sti
sbb
or
sahf
daa
jmp
jo
cmpsl
jl
ret
xchg
inc
mov
nop
ret
jp
dec
jo
test
mov
push
inc
stos
jo
insb
pop
aad
fisubrl
mov
lret
je
push
loop
jo
or
sbb
push
add
mov
xor
xor
jo
dec
mov
dec
aad
pop
in
or
mov
and
xchg
xchg
mov
out
sub
loope
jo
cmp
sahf
mov
data16
in
test
pop
jo
jge
push
and
cmp
scas
rolb
js
pop
mulb
sub
and
and
cld
int3
xchg
push
push
inc
outsl
push
not
daa
jo
incb
sbb
mov
mov
sbbb
jo
lods
imul
cmp
js
mov
jo
jg
pop
pop
pop
push
or
fsubl
subb
jle
jo
sub
mov
jo
mov
and
sahf
mov
xor
int
icebp
lret
push
jb
jo
fwait
cwtl
fcomps
pop
pop
rorl
adc
mov
mov
in
jo
hlt
cli
lods
stos
mov
jno
insb
fcoml
mov
lahf
jo
stos
push
pop
mov
pop
jo
fs
mov
jp
outsl
jo
cmpsl
cmp
sub
scas
cli
scas
sti
jle
jo
icebp
push
nop
inc
in
mov
push
dec
add
nop
mov
shlb
push
adc
cs
dec
xchg
in
jo
jp
lret
cs
push
push
sbb
sbb
jle
mov
and
jo
mov
dec
out
les
mov
scas
nopl
es
sub
pop
mov
dec
shlb
pusha
pop
xor
or
fwait
mov
repz
int
lock
inc
jecxz
nop
out
inc
cmp
fdivrs
out
jo
jle
cmp
cltd
and
inc
sub
nop
xor
fmull
sahf
cld
lock
je
lcall
dec
mov
xor
jo
cmp
mov
sbb
xor
repnz
jo
inc
add
jo
rcr
ficoms
gs
jmp
xchg
popf
adc
lods
jo
popa
mov
mov
jnp
xchg
orl
nop
pop
xchg
add
or
dec
mov
dec
sbb
data16
divl
fistpll
jo
adcb
daa
ss
lds
xor
xor
jg
in
xchg
rcrl
cmc
orb
mov
jb
jp
insb
aas
xchg
xchg
xchg
push
mov
or
out
lods
lret
imul
jo
adc
test
imul
jo
jbe
mov
pusha
shrb
pop
jecxz
stc
xchg
mul
icebp
nop
std
fildll
jl
adc
fsts
pop
and
add
data16
sbb
movsb
repz
jns
mov
ss
repz
fsubr
in
xlat
adcl
dec
jno
outsb
jae
cmpsw
jns
xor
xor
loop
fstps
out
inc
adc
inc
push
imul
pop
sbb
and
js
xchg
inc
call
jno,pt
sbb
gs
out
pop
mov
sub
out
sbb
lods
sub
std
arpl
leave
scas
cmp
inc
lahf
scas
cmpsl
xor
adc
sbb
sahf
arpl
mov
inc
xor
jno
sbb
insb
cmpsl
push
cmp
pop
arpl
mov
mov
into
outsl
sub
lret
out
xor
arpl
orb
daa
aad
jo
stos
xor
add
sbbb
push
mov
int
push
sub
mov
push
jl
xchg
mov
mov
adc
fcoml
mov
shr
xor
xor
or
dec
mov
cmpsl
adc
mov
frstor
fmuls
inc
fldt
jne
jns
stc
fbld
in
ret
xchg
jnp
js
in
jb
mov
out
sbb
or
int3
inc
mov
sahf
in
insb
and
xchg
xchg
addr16
test
cwtl
movsl
xor
pop
pop
dec
cltd
scas
mov
jno
or
fldl
jp
push
and
popa
adc
adc
shlb
iret
xor
adc
testb
rorb
add
xor
fwait
cs
pop
mov
jb
xorl
outsl
xchg
adc
das
fwait
push
dec
add
push
or
cmpsl
add
lret
in
mov
jecxz
and
imul
clc
je
ljmp
data16
lret
leave
sbb
mov
adc
ds
inc
daa
xchg
dec
scas
jne
sub
jp
push
or
les
orl
dec
sahf
cltd
mov
imul
sub
out
scas
xor
arpl
jg
clc
loop
or
xchg
mov
sub
mov
sub
mov
cltd
mov
outsl
sti
sbb
push
pushf
jo
arpl
xchg
push
mov
mov
sub
inc
push
int3
cmc
push
aas
jae
insb
lea
xchg
loopne
xor
push
je
imul
out
cwtl
mov
lods
xchg
notl
or
out
fldenv
hlt
aaa
push
pop
outsl
scas
mov
out
pop
ds
shlb
in
jge
outsl
cmpsb
sbb
push
push
jo
push
and
mov
jg
push
ja
dec
repnz
sub
int
pop
jae
mov
jg
jmp
std
push
and
out
add
mov
adc
adc
jl
aad
pop
dec
shrl
sbbl
adc
imulb
add
jnp
pop
ds
loop
jns
call
pop
bnd
loope
enter
insl
rcrb
add
push
xlat
fucomip
aam
bswap
push
add
flds
adc
mov
in
push
xor
arpl
push
or
jbe
in
or
jge
hlt
mov
dec
loop
mov
cmp
or
js
and
cmc
mov
jmp
les
lret
fucomip
jo
cmpsb
jg
adc
out
cmp
pop
fs
jle
mov
test
adc
lret
or
rol
adc
les
int
loopne
pop
xor
fs
xor
push
jns
dec
jle
cmpsl
imul
int3
bound
popf
push
xlat
fsubl
call
cvtps2pi
push
cmpsb
insb
inc
aad
xor
je
sbb
or
addr16
pusha
rcll
sub
divb
push
jge
mov
sbb
dec
outsb
and
adc
cltd
push
and
push
xchg
adcb
push
gs
lods
iret
bound
icebp
outsb
hlt
ljmp
arpl
aam
fcmovb
add
mov
add
sbb
jl
call
inc
cwtl
jmp
add
cmpb
test
and
fs
ds
or
push
push
adc
and
inc
sbb
and
dec
out
xchg
fs
push
lahf
mov
sahf
scas
lods
xchg
pop
lods
pop
mov
sbb
mov
outsb
mov
or
adc
pop
roll
in
or
inc
sub
insl
push
cmp
stos
and
push
or
fstl
inc
push
out
xor
test
mov
shrb
fistpll
inc
xor
and
jle
int
add
std
pop
push
jo
add
dec
or
add
mov
and
leave
jo
push
fwait
inc
fldl
dec
roll
jl
repnz
jo
jnp
inc
addb
jle
popf
mov
lods
push
insl
sub
push
aas
sbb
jo
dec
cwtl
add
add
out
jo
jge
out
cmpsb
inc
sbb
xchg
stos
or
mov
inc
jo
inc
inc
sbb
cmp
lahf
jo
or
out
mov
sahf
inc
pop
jge
inc
fs
call
mov
mov
sahf
add
jmp
lahf
mov
les
sub
scas
mov
jp
xor
pushf
bound
lea
hlt
jo
push
mov
cs
lret
mov
xchg
cmp
shll
push
push
mov
xor
mov
jo
add
push
mov
cmp
sti
push
dec
jnp
jo
dec
nop
enter
insl
jo
dec
push
add
pop
nopl
shll
out
adc
push
jbe
in
inc
and
xorb
test
lea
dec
pop
cmp
int
out
pop
xorb
ret
xchg
push
cmp
inc
add
sbb
lret
mov
push
pinsrw
lods
push
bound
fst
pusha
je
xorl
sub
aam
jno
lds
adc
push
jmp
jns
mov
stc
movsl
add
jmp
push
jo
das
in
mov
lret
popa
jo
jecxz
imul
pop
ljmp
out
and
or
jnp
push
jp
cmp
push
mov
int3
pop
jns
push
push
ljmp
test
push
pushf
mov
je
pop
jo
jecxz
in
mov
int
in
mov
jo
pop
inc
dec
daa
leave
push
rclb
push
hlt
xchg
cmp
adc
add
jo
cmc
sub
and
test
nop
lock
mov
scas
js
mov
paddusb
sub
dec
push
jo
nop
push
jbe
outsl
pusha
repz
jo
xchg
outsb
jle
xor
pop
dec
add
lret
ja
outsb
xchg
lods
sub
mov
xchg
outsl
ficoml
and
lcall
nop
cwtl
fisubs
push
dec
sbb
inc
cmpsb
jns
mov
mov
dec
adc
mov
aaa
cmpsl
mov
jae
cli
sbb
xor
fwait
inc
inc
imul
jg
pushf
fisubrs
stos
mov
out
cmp
pop
movsl
outsb
mov
shlb
mov
subb
pusha
xchg
mov
add
add
or
cbtw
jns
dec
data16
jge
pop
loop
jne
inc
mov
movsb
inc
xor
push
mov
jo
arpl
xchg
outsl
movsb
rorl
std
jp
jae
add
jnp
and
lods
mov
rclb
mov
lds
adc
jae
adc
int3
lahf
imul
mov
jge
mov
arpl
pop
and
orb
shll
sahf
pop
fistps
mov
cwtl
xchg
cltd
inc
sbb
jmp
inc
aas
aas
testb
jns
jo
and
jo
bound
test
jl
mov
fistl
jo
xchg
mov
rcll
mov
bswap
scas
lea
int3
loop
icebp
mov
sti
jle
jns
and
in
or
popa
adc
ljmp
nop
cmpsl
bound
xor
in
std
js
repnz
and
push
jo
cli
inc
cmp
out
mov
scas
dec
pop
mov
adc
xchg
ss
push
into
jnp
leave
mov
hlt
push
out
nop
orl
arpl
jnp
jo
cmp
out
popa
pop
inc
sub
ficompl
adc
jo
dec
scas
mov
jo
jle
push
jo
pusha
adc
sbbb
hlt
push
jo
lods
mov
jo
inc
or
es
add
or
push
xor
xorb
jo
sti
add
push
jne
aad
sahf
add
jo
insb
loope
add
push
data16
mov
fbstp
jg
xor
imul
dec
jns
mov
and
mov
arpl
and
ss
jo
mov
ljmp
sbbl
dec
jo
in
mov
inc
jo
adc
loop
in
cmp
sub
push
imul
adc
mov
lcall
or
sbb
ja
int
int
xchg
adcb
aam
cmc
push
test
mov
mov
add
lret
inc
jl
jg
jo
and
and
idivl
divb
add
adc
dec
pusha
jo
dec
push
cmp
dec
incb
jo
mov
sub
lods
push
or
xorps
jo
data16
adc
cmp
fsubrp
push
shr
mov
mov
or
pop
add
adc
or
jns
rcrl
cld
test
sub
push
neg
rcr
jo
ret
xchg
shl
mov
insl
jbe
or
cmp
jo
inc
dec
adc
cmc
fdivl
jecxz
and
cmpsb
loope
repz
out
cmp
pop
xor
pusha
mov
mov
jo
push
inc
fsubr
jae
orb
dec
inc
popa
fs
sarb
sti
sub
insl
lods
mov
xchg
js
xor
aas
inc
cmp
and
push
fnsave
scas
enter
mov
xchg
or
sti
je
mov
inc
pop
push
fisttpl
lock
xor
hlt
scas
jnp
mov
bound
sahf
mov
je
xchg
jnp
xor
jo
mov
xchg
cmpsb
push
dec
pop
leave
fimuls
inc
in
cmc
test
add
lods
mov
divb
push
xchg
gs
push
push
jo
mov
sub
add
xchg
jmp
adc
or
shlb
shll
cwtl
mov
jo
repnz
cmp
xchg
jo
sar
aaa
xor
mov
sbbl
add
scas
aad
int
adc
insb
clc
jo
and
mov
or
cltd
jecxz
xchg
lock
addr16
aas
and
push
cld
add
jo
popf
mov
fiadds
ret
dec
lods
push
mov
inc
push
popa
and
gs
js
int3
lods
rol
fildll
mov
into
fwait
push
js
fnstenv
xor
mov
cwtl
jo
aad
mov
bound
sub
dec
xorl
stos
lea
or
or
aad
out
lret
imul
jg
or
rorl
add
push
cmpsb
fildll
jbe,pt
movsl
insb
mov
int
mov
out
lds
and
jo
inc
adcl
lods
pushf
enter
or
in
jo
pusha
mov
pop
jo
sbb
es
sti
ljmp
aaa
ja
push
sub
jb
mov
push
stos
inc
jne
or
testl
cli
dec
inc
lds
or
xchg
push
js
int
ljmp
imul
xchg
jecxz
ss
mov
cmpsl
out
in
fcmovne
sbb
jmp
testb
hlt
mov
jo
jecxz
xlat
inc
icebp
pop
jp
jbe
lea
leave
jae
push
jo
hlt
xor
lret
addr16
pop
lods
jns
outsl
aaa
mov
xor
mov
pop
fnstsw
insb
lds
push
push
cld
je
mov
loope
cmpsb
pop
int3
jne
repz
les
dec
xchg
xorl
in
and
sbb
jl
stos
cmp
orb
pop
jns
sub
fs
mov
sbb
cmp
fisttps
enter
add
or
inc
rcll
dec
sub
add
jmp
arpl
leave
xchg
jbe
mov
gs
mov
in
jno
leave
sbb
inc
scas
jg
mov
int3
ljmp
cmp
pop
push
push
mov
sbb
sbb
enter
aas
cltd
pop
mov
out
popf
mov
add
dec
fwait
and
icebp
fbstp
inc
dec
mov
xchg
scas
jae
cltd
mov
pushf
adc
mov
dec
mov
test
inc
adc
xor
out
xchg
push
mov
xor
rol
and
xor
mov
out
push
push
jmp
cmp
sbb
rolb
jg
inc
sti
jno
popf
cmp
arpl
dec
sbb
add
fldenv
insb
push
aas
mov
in
jecxz
cli
xor
repnz
sub
icebp
xchg
and
xor
aas
xor
pop
fildl
fisttpll
int3
xchg
sbb
int3
int3
insl
ja
in
mov
std
jae
mov
lock
fwait
jb
xchg
popl
adc
pop
push
mov
ljmp
xor
sub
addr16
or
lods
bound
xor
dec
jnp
jecxz
xchg
loop
pusha
xchg
out
popa
je
mov
ds
ror
lahf
popf
mov
mov
cmc
inc
repnz
xchg
or
cmp
std
sbb
xchg
call
mov
iret
pop
or
xchg
lret
or
clc
out
cmp
cmc
out
or
or
stos
ret
jg
mov
popf
imul
or
mov
sub
scas
add
or
or
dec
xorb
ds
jge
push
idiv
aas
loope
int3
sub
arpl
mov
mov
mov
subl
into
and
dec
fxch
and
push
jl
and
and
mov
fisubrs
cld
pop
add
sbb
jo
popa
jmp
aaa
lcall
js
ja
mov
mov
mov
sbb
xchg
jo
sti
loopne
or
les
leave
dec
inc
roll
sub
lret
mov
out
mov
repz
js
mov
lds
loopne
in
rolb
jecxz
dec
js
dec
jmp
aad
jo
pop
add
add
test
jo
rcl
addr16
adc
jno
add
cltd
fcomi
jb
je
in
jne
adc
xchg
dec
push
pop
je
jecxz
push
jo
xlat
lock
js
shlb
std
aas
xor
shrl
jo,pt
mov
repz
push
jmp
jne
mov
cmp
xorl
lret
adc
jo
adc
xor
mov
pop
cmpsl
sub
inc
push
mov
jns
cmpsb
hlt
outsb
mov
dec
pop
rcl
nop
stc
pop
adc
sarb
cld
pop
imul
sub
add
mov
lock
int
dec
mov
out
mov
push
mov
lock
or
xchg
aaa
lret
push
push
mov
xchg
xchg
js
and
imul
popf
dec
ficoml
jbe
pop
xchg
xlat
cmp
je
repz
fucom
sbb
call
cmc
pop
or
fcompl
push
hlt
out
push
xchg
test
xor
arpl
stos
lret
hlt
or
loope
push
mov
imul
sbb
adc
jae
lods
add
es
stos
lret
pusha
call
and
xchg
int3
cmpb
cmpsl
cmp
mov
adc
jbe
jno
outsl
shlb
lcall
faddp
loopne
pop
mov
cld
lea
stc
or
loope
xlat
lret
in
mov
cmpsb
out
stos
push
and
ljmp
lcall
cwtl
clc
mov
pop
mov
lret
shll
cmp
jmp
lds
push
jno
in
push
shll
leave
sub
lret
jl
sbb
cvtps2pi
mov
pop
xor
jle
push
inc
movsb
mov
insb
adc
aad
xchg
mov
je
add
repz
sbb
data16
mov
fs
dec
cmpsl
testb
adc
mov
jae
int3
mov
ds
in
out
inc
mov
mov
inc
jae
repnz
fcomi
xor
outsl
dec
pop
jmp
dec
data16
in
repnz
data16
pop
cmp
lcall
jae
ss
adc
imul
imul
fwait
add
les
mov
aaa
call
aad
cmpsb
fwait
jmp
lods
mov
sbb
out
inc
fstpl
or
jo
fs
adc
testl
inc
cmp
jo
fs
jnp
fmuls
test
bswap
popa
jl
adc
cld
icebp
mov
sub
imul
imul
lock
outsb
push
mov
insl
stc
pushf
push
lret
jo
pop
jle
add
jo
mov
mov
ljmp
dec
es
movsb
loopne
data16
xor
stos
scas
push
push
stos
stos
imul
mov
dec
jmp
xor
js
push
int3
inc
sbb
lods
out
test
dec
cli
jo
insl
xchg
jnp
push
mov
test
fdivrl
les
and
jo
dec
iret
lea
cmp
mov
jne
jae
jg
jp
sub
push
adc
hlt
jnp
popf
mov
sbb
cmp
ret
cmc
pop
add
inc
push
mov
jecxz
sub
xchg
mov
lock
xchg
mov
nop
and
addr16
jg
adc
xor
add
push
jl
mov
iret
nop
pusha
mov
jns
mov
in
inc
jg
push
mov
mov
jmp
jo
cld
in
dec
pop
mov
jnp
cmp
jo
mov
dec
jo
cltd
outsl
out
inc
sbb
and
sub
lods
test
inc
pop
adc
xorb
enter
out
inc
jmp
sbb
mov
push
cmpsl
xor
jne
int3
push
or
fisttpl
jns
sbb
xchg
outsl
andb
jo
pop
xchg
icebp
xchg
aaa
pop
popf
jo
cmp
cmc
pop
enter
stos
aas
repnz
clc
xor
in
mov
jo
stos
insl
aaa
xor
dec
aam
lret
inc
jo
xchg
push
inc
je
hlt
pop
bound
jo
and
mov
insb
aas
into
test
loopne
or
ljmp
xor
jo
arpl
mov
ljmp
scas
xchg
jo
daa
cmp
fnstenv
add
sarb
movsl
lods
shrl
nop
fstp
repnz
jle
inc
pop
jo
lock
insl
jge
sbb
mov
pop
les
ret
sub
cs
mov
cmp
add
shl
adc
or
in
test
push
lea
sbb
inc
gs
out
xchg
int
push
inc
cmpb
mov
dec
jbe
fnstenv
push
mov
adc
add
jo
dec
sti
shr
mov
push
orb
sub
add
cmp
jo
in
dec
nop
mov
inc
jo
test
lret
clc
lcall
mov
rorl
mov
pop
test
jo
xchg
aam
ds
adc
mov
xchg
rorl
push
push
cwtl
movsl
cmp
repz
inc
xlat
leave
testl
xchg
push
lea
mov
mov
arpl
jo
xor
gs
inc
add
mov
cmpsb
pop
or
jo
adcl
sub
add
aad
jo
adc
shlb
sti
jp
cmp
and
mov
jbe
nop
jnp
push
aam
jbe
fcom
imul
adc
dec
ss
fs
lcall
subb
mov
push
jp
cmp
xor
add
and
movsl
es
dec
xor
push
cmp
xchg
jns
in
jno
ja
mov
mov
cli
pop
enter
lahf
out
outsb
sahf
jns
subb
cmpsl
push
mov
xchg
jle
out
or
dec
add
mov
adc
cld
jl
push
fwait
cmpsb
mov
mov
mov
push
push
jo
cmpsl
and
sti
es
aaa
cmp
sub
aam
andb
lcall
dec
dec
mov
pushf
fwait
imul
inc
insb
je
jge
call
cmc
pop
loopne
sbb
shlb
sub
repz
ss
mov
je
aad
or
and
rolb
inc
dec
dec
mov
imul
arpl
mov
sbb
mov
sbb
cmpsb
push
test
pop
or
arpl
loope
loopne
imul
xorl
dec
and
hlt
push
fmul
xchg
imul
mov
les
jmp
andb
rclb
adc
xor
int
inc
jo
add
jo
add
add
stos
lock
lds
outsl
shl
mov
rcl
and
pop
xor
pusha
sbb
clc
cs
sub
jo
inc
mov
repz
imul
call
addl
sub
lds
push
leave
pop
jo
mov
cs
mov
mov
repz
jo
cltd
imul
popf
cwtl
decl
push
test
mov
mov
lea
pop
pop
pop
cmc
js
cmp
arpl
jnp
inc
das
leave
sub
int3
cmp
add
arpl
push
lahf
and
fs
cs
add
pop
add
jo
data16
jmp
mov
jo
mov
mov
jle
mov
mov
lret
in
inc
jbe
push
sub
jno
test
adc
and
nop
sbb
inc
jns
sarb
bound
loope
popa
jl
shl
and
jo
sbb
daa
shll
lock
scas
movsb
enter
and
sub
cmc
jo
mov
push
addr16
int
jle
jge
xor
or
push
ljmp
xor
in
insb
inc
aas
leave
inc
xchg
sbb
and
enter
lds
push
test
nop
fcmovu
xchg
mov
mov
and
pop
sub
sbbb
sbb
pusha
dec
dec
aaa
cmc
mov
loop
leave
push
lea
inc
push
jae
test
jp
data16
push
adc
inc
mov
int
in
shrl
loop
jo
xor
scas
mov
push
pop
dec
xchg
stos
into
mov
shlb
mov
pop
jo
pusha
xchg
mov
or
jl
orb
xor
in
add
jbe
jne
std
jo
popf
and
subl
jno
ljmp
fsubrl
iret
lcall
xchg
or
inc
mov
dec
inc
imull
idiv
xchg
jo
pop
stos
add
xchg
jp
stc
fdivs
jecxz
cmpsb
mov
lret
jo
pop
jle
xor
movsb
xor
jno
loop
pop
cld
mov
rorl
dec
jo
sub
or
in
mov
enter
inc
mov
jbe
xor
aaa
sub
sbb
mov
jae
sbb
xchg
inc
imul
xchg
jo
mov
fs
in
adc
xor
jo
or
jo
xchg
pushf
mov
jo
push
mov
fildll
stc
repz
push
push
jo
fcmovnb
push
mov
add
sub
hlt
lcall
jo
fistpl
push
dec
pop
mov
cmp
cmpsb
shrb
sub
popa
adc
mov
jne
js
cmp
pcmpeqb
insl
jmp
add
clc
addb
sub
in
pushf
jo
add
loope
sub
inc
ret
push
push
mov
and
sub
clc
jo
pop
das
adc
nop
add
dec
je
pop
xchg
movsb
push
aad
daa
jl
lock
or
das
js
cmp
int3
jo
push
test
fldenv
ficoms
jo
mov
outsl
shll
inc
sub
sub
jbe
aam
pop
test
jne
shlb
add
je
xchg
mov
dec
mov
fs
cmpsl
push
mov
pop
xchg
je
pop
insb
push
mov
xchg
insb
add
hlt
push
lock
call
jno
js
mov
std
dec
xchg
sbb
or
xor
arpl
inc
and
test
sarb
jae
jno
cli
mov
fsubrs
out
or
inc
sub
and
inc
xor
shlb
add
call
sub
lahf
jmp
pop
dec
hlt
push
sbb
mov
inc
mov
fs
ljmp
pop
mov
xor
shlb
jl
xchg
lahf
or
lods
xchg
cltd
jecxz
jo
push
popa
cmp
push
sub
xchg
scas
cmp
in
jae
jnp
fldcw
outsl
push
or
dec
sub
jmp
push
mov
add
outsl
jmp
xchg
adc
test
xchg
or
jg
stos
test
lcall
out
out
cltd
push
xchg
cwtl
shlb
movsl
dec
std
push
pushf
xor
lret
adc
push
mov
mov
int
jl
mov
jge
sub
in
inc
incl
cmp
jecxz
lret
repz
dec
lret
pop
mov
jae
call
lock
push
push
int
sub
ja
xor
jns,pn
es
loop
ret
or
imul
mov
cmp
mov
cmp
xchg
add
enter
pop
inc
out
or
jns
mov
sub
enter
aad
mov
jbe
inc
test
stos
or
push
adc
inc
lods
push
add
pop
pop
pusha
adc
fsts
jecxz
out
andb
imull
cmp
inc
fwait
or
jae
data16
fstpt
icebp
out
into
lret
stc
or
pop
and
xchg
fmuls
les
in
xor
test
movsb
iret
pop
cli
and
lods
das
or
dec
cwtl
mov
or
mov
aad
call
insl
sub
insb
mov
xor
or
lods
lea
sbb
sub
xchg
mov
sarl
stos
mov
popa
jae
into
rol
push
out
std
cmp
pop
outsb
push
imul
jle
out
xchg
xor
and
out
imul
mov
and
cmp
shl
jg
push
sti
stos
fists
arpl
test
pop
cmpsl
daa
shl
inc
pop
fs
in
outsl
xchg
insl
dec
push
mov
mov
in
inc
mov
push
pop
mov
push
data16
into
les
mov
pop
add
gs
inc
mov
movsl
outsl
jbe
mov
dec
fcoml
les
jmp
mov
push
out
push
mov
fdivr
pop
cmp
jne
imul
push
test
cld
imul
negl
sarb
pop
int
push
fmull
jbe
push
arpl
and
sbb
lods
cmp
cmpsb
adc
dec
aas
jae
loopne
mov
dec
sti
inc
scas
jp
mov
and
clc
mov
pop
or
inc
jnp
mov
sti
sub
enter
pusha
jl
adc
lret
push
push
or
dec
jl
push
jb
cld
mov
sbb
push
mov
movsl
xchg
enter
mov
test
rcrl
sbb
or
imul
push
dec
jne
ljmp
inc
mov
sbb
sbb
ja
xchg
test
ljmp
pop
or
and
push
fbstp
ja
jl
out
stos
dec
push
sub
out
jns
movsb
stos
push
dec
outsl
mov
jle
out
mov
imulb
mov
adc
push
fcmove
push
inc
push
lret
or
pop
fwait
and
pop
push
pop
adc
lods
cld
in
cs
call
rcrl
rorl
fistl
int3
pop
insb
rolb
pop
loope
dec
loop
and
sahf
xor
push
ljmp
sbb
ss
jae
jne
test
or
mov
arpl
adc
jae
in
test
jg
push
out
push
mov
out
or
imul
xchg
mov
sbb
testb
sarb
mull
std
adc
test
dec
shrb
lcall
lods
inc
outsl
add
mov
jae
or
ss
imul
pop
adc
std
adc
in
inc
fsubl
mov
push
icebp
mov
stos
jmp
push
idiv
icebp
mov
arpl
ret
rorl
push
and
cli
inc
push
and
xchg
insb
jmp
add
test
cmc
add
fwait
cmpb
inc
sarb
lds
scas
pop
hlt
pop
in
xchg
dec
fdivrs
adc
add
enter
pusha
xchg
mov
mov
movsb
adc
and
jae
xor
je
and
orb
sbb
mov
mov
in
negb
push
in
xor
ret
test
mov
cmp
insl
stos
pop
sbbb
in
cmp
xor
mov
jo
cmp
push
dec
into
testl
stos
and
pop
ljmp
out
xchg
cld
inc
inc
jno
sub
das
pop
inc
mov
jno
out
mov
dec
pop
into
or
jge
jo
sbb
jns
jo
push
cmpsl
jl
rolb
cmp
out
mov
add
jnp
pop
add
and
divb
jbe
or
mov
jo
sub
sbb
out
jo
mov
jg
jo
pop
in
movsl
or
jo
push
mov
orb
daa
dec
jo
jne
cli
out
mov
mov
ret
jb
popa
cmp
insb
lret
loope
mov
leave
jo
cmp
popa
push
in
mov
or
je
out
sub
and
push
pop
cmp
inc
mov
cmp
bnd
outsl
lds
enter
adc
adc
sub
subb
and
xchg
cmp
sub
out
jo
int3
rorl
bound
test
and
movsl
push
jle
adc
jo
sub
shrl
and
jle
ss
js
jbe
or
ja
inc
jno
in
add
xchg
aad
dec
or
or
int
adc
rclb
dec
jae
and
sbb
push
dec
stos
rolb
outsb
enter
dec
insb
std
fsubs
in
in
jg
adc
sbb
push
sbb
sbb
sbb
jo
mov
pop
sbb
mov
push
adcb
icebp
mov
push
dec
arpl
push
xchg
dec
adc
lret
lods
mov
mov
sbb
jl
pop
and
xchg
push
push
stc
mov
int
xchg
and
pop
add
push
xchg
mov
and
movsl
mov
inc
lahf
adc
and
leave
cmp
xor
cmp
pop
in
jmp
jg
shr
cmp
pop
or
ljmp
jne
outsl
aad
pop
cmp
xchg
pop
cltd
dec
outsb
push
cwtl
jp
out
mov
pop
loopne
pop
and
lods
fidivrs
cmpsl
imul
add
xchg
test
rcr
mov
adc
xor
push
xchg
xbegin
arpl
pop
out
mov
aad
xor
pop
insl
rorb
and
negb
cmp
mov
or
shl
data16
inc
fcomps
sbb
js
gs
xchg
and
pushf
or
xor
insl
push
add
ds
fiadds
out
imul
dec
cmp
push
arpl
push
pop
xor
pop
fs
lahf
mov
adc
fdivl
fldt
pushf
lods
sub
pusha
mov
repz
add
test
add
xor
icebp
loope
ffreep
cli
xchg
or
cltd
jo
jg
jge
out
sbb
in
addb
jb
out
push
rcl
imul
jo
pop
add
insl
imul
in
push
xchg
outsl
dec
push
cld
adc
test
js
aaa
js
push
enter
repz
test
lcall
push
or
jno
pop
jo
dec
ror
outsl
jb
dec
sbb
das
in
mov
mov
lret
psubd
test
je
mov
js
icebp
jnp
xchg
sub
add
mov
add
es
lcall
mov
sbb
dec
cmp
pushf
xchg
jns
stos
cmp
jge
cmpsl
sbb
loop
dec
pop
or
outsb
call
pop
adc
mov
fwait
jo
das
mov
or
and
in
and
pop
gs
paddw
out
call
imul
imul
adc
in
cmp
push
call
outsb
mov
mov
imul
mov
sbb
cmp
imul
push
div
add
mov
outsl
jecxz
hlt
data16
push
sti
cmpsb
insb
or
insb
mov
jo
nop
mov
adc
mov
clc
mov
jnp
cmp
stc
fcom
les
jp
stos
vandnps
sub
imul
or
jo
sub
xor
sub
mov
jecxz
xor
adcl
mov
jo
xchg
ljmp
in
jbe
mull
out
pop
pop
sbb
sub
dec
add
jo
push
outsl
dec
ljmp
scas
and
arpl
cli
outsb
jecxz
fnsave
adc
iret
push
ja
outsb
lea
jbe
mov
ret
or
jns
nop
sbb
neg
jo
imul
cld
int3
cmpsl
pop
loop
jo
stc
mov
dec
jo
ret
jmp
aad
roll
imul
in
cmpsb
add
push
sti
cmc
xchg
sahf
loopne
mov
fcmovbe
jno
int3
jo
decl
lods
cmpsb
xor
jo
inc
adc
repz
jae
jo
stos
insb
lods
and
push
jns
adcl
inc
sub
dec
fs
add
and
shr
loopne
pop
aas
rorb
fs
movsb
dec
pop
inc
jl
mov
pop
push
jo
or
push
popa
dec
sub
dec
ds
sub
rclb
mov
mov
shrb
add
mov
mov
movsl
mov
sbb
js
inc
jnp
fmuls
repnz
hlt
jo
jne
int3
xchg
adc
lods
push
cmp
and
stc
cli
fsubs
jg
sbb
and
sbb
call
jno
jo
jbe
push
jo
in
mov
shl
cs
arpl
jo
rolb
pop
ds
add
addr16
in
js
xor
pop
fdivrl
jo
mov
push
sub
push
xor
push
shl
inc
pop
jo
ja
lds
sub
push
fucomp
mull
fwait
jo
cmpsl
sub
aam
ret
std
push
and
mov
cmp
int3
lock
push
mov
bound
imul
and
frstor
jmp
mov
mov
or
mov
sub
adc
push
pop
je
cld
dec
sbbb
pop
sahf
shl
rcll
sbb
jecxz
jmp
push
mov
push
mov
jnp
jo
repz
mov
or
push
idiv
pop
insb
and
inc
xor
loope,pt
mov
push
out
in
ljmp
push
inc
iret
and
xchg
sub
cld
mov
fsts
sbb
dec
jo
mov
adcl
gs
pop
inc
or
push
cmp
jl
lahf
sub
sbb
xor
push
xor
loopne
or
cmpb
add
pop
mov
lock
ret
xchg
jp
push
in
jo
mov
mov
jo
dec
arpl
mov
shlb
stos
jne
jo
adc
jg
pop
dec
ror
mov
push
lock
dec
out
rol
mov
inc
ljmp
aad
insb
repz
out
push
dec
jo
decl
push
pusha
push
mov
sub
sub
pop
cmpl
jl
out
cmp
sub
in
mov
mov
cmp
cs
and
or
ljmp
cmp
shlb
in
and
clc
mov
jo
inc
pusha
ljmp
xor
insl
mov
sbb
jge
jo
or
mov
mov
sbb
dec
pop
ja
jl
cmp
fs
sbbl
add
fstps
gs
pusha
jo
and
inc
add
orl
pop
rclb
push
jp
dec
lahf
cs
and
xor
xor
sbb
push
jb
mov
jbe
ds
xor
or
loope
aas
sub
adcl
outsl
sub
testb
add
add
call
loop
jo
test
xchg
mov
jo
jb
dec
andl
inc
nop
push
loopne
jns
mov
js
add
jo
outsl
xchg
xchg
in
ret
lock
aad
pusha
push
cltd
inc
jnp
divl
nop
push
inc
xchg
jge
mov
and
cmp
jo
jnp
jno
xor
jg
dec
popa
in
fs
pop
mov
imul
cmp
cld
test
arpl
jp
mov
xchg
pop
push
cmp
cmpsb
jo
dec
push
pop
mov
lret
shll
repz
inc
pop
inc
jne
sub
mov
dec
nop
je
xchg
int
jo
push
cltd
xchg
lahf
daa
pusha
jo
out
jb
icebp
jg
punpckhbw
pop
adc
in
cs
push
jl
jo
mov
mov
prefetchw
xchg
fnstcw
cmp
mov
push
lret
sbb
cltd
mov
sub
cmp
xlat
popa
jb
jo
mov
testb
xor
jl
and
jecxz
repnz
xorb
inc
and
push
xchg
pop
add
inc
inc
jo
ds
push
pop
inc
js
popa
icebp
add
hlt
and
imul
xchg
xor
push
mov
cmpsb
pop
testl
cli
dec
inc
push
lahf
mov
and
shl
xor
shrl
add
stc
push
adc
ret
xchg
mov
add
inc
mov
out
jo
push
ss
jb
jo
repz
popf
mov
pop
sbb
jmp
jge
sub
shll
push
xor
inc
adc
push
pop
clc
inc
mov
pop
lcall
inc
xor
sub
aas
scas
push
xchg
dec
jo
push
or
and
imul
ret
and
mov
inc
pop
jo
xlat
dec
ljmp
mov
std
sbb
jge
mov
push
inc
jbe
push
lods
out
or
jo
push
out
into
ss
shlb
jnp
es
loope
jo
lods
mov
push
mov
lret
cld
adc
mov
ja
jo
scas
inc
out
dec
sub
add
mov
and
jge
insl
dec
mov
incb
outsl
lods
mov
stc
push
push
enter
movsl
outsl
pusha
and
aaa
xchg
pop
mov
jo
enter
jo
or
lcall
loopne
clc
cwtl
ljmp
mov
sbb
or
mov
fnstcw
es
shr
insl
outsl
cmpsl
xchg
cmc
xchg
push
rcll
cmp
nop
scas
sbb
xor
outsb
pop
push
in
jae
gs
adc
mov
cs
cld
mov
loopne
lea
arpl
shrb
std
xchg
dec
scas
jge
mov
pop
lahf
mov
mov
push
sbb
jmp
add
mov
outsl
lea
mov
cmc
adc
dec
push
cmp
cmp
subb
notl
inc
mov
repz
inc
jge
arpl
or
rolb
adc
xchg
sub
aaa
mov
sub
push
sbbl
cmp
icebp
xor
push
pop
es
pusha
cmp
aaa
mov
aam
cmpsb
lds
mov
adc
dec
in
sub
lods
mov
aam
mov
mov
cli
mov
xchg
pop
fs
xor
in
in
aam
pop
dec
inc
fisubs
fisttpll
adc
mov
push
xchg
frstor
mov
int3
adc
js
dec
int
xor
leave
pop
fs
mov
jae
add
call
jae
xor
jns
mov
fucom
addr16
jle
xor
enter
scas
inc
mov
sbb
push
pop
clc
scas
jns
mov
inc
adc
dec
pop
aam
cli
pop
shrl
stos
ljmp
cmp
cs
test
xor
mov
and
adcb
stc
lahf
inc
je
dec
lcall
insb
stos
out
int3
cmp
movsl
dec
dec
out
gs
mov
add
outsl
test
and
arpl
frstor
stc
push
mov
inc
in
dec
negl
insl
in
std
cmp
leave
arpl
rorb
adc
sti
adc
insl
out
cmp
push
dec
dec
xchg
in
pshufw
sbb
mov
mov
ja
push
dec
dec
frstor
ret
or
stos
cld
cli
outsl
mov
fisttpll
lea
ja
call
or
lret
xchg
or
inc
pop
pop
imul
shlb
pop
aas
rolb
mov
lretw
xchg
add
ret
mov
cli
rcll
adc
sbb
lret
sahf
sbb
int3
mov
adc
push
nop
divl
in
gs
jge
testb
xor
ja
mov
mov
add
scas
arpl
rcrl
mov
rcrb
test
outsb
jge
mov
pop
push
mov
push
test
fbld
add
dec
and
sbb
icebp
cmp
in
push
and
jle
mov
pop
pusha
bswap
or
mov
ret
outsl
arpl
inc
cmpsb
jns
pop
cmpsl
mov
push
jmp
aas
mov
jg
mov
fldl
and
pushf
out
adc
pop
add
sub
or
and
arpl
andl
push
icebp
subb
fwait
rcrb
out
mov
mull
sbb
add
mov
aad
cmp
test
jle
mov
arpl
mov
add
into
int3
add
sahf
insb
fisubl
cmc
int
or
xlat
xchg
sub
in
test
outsl
lock
sahf
test
push
lods
iret
inc
or
dec
insl
jae
popa
jae
stos
test
out
ret
mov
fldcw
jg
push
leave
mov
or
std
sbb
outsb
and
push
clc
jns
push
insb
and
popa
cmp
mov
inc
pop
imull
rorb
lods
xor
sbb
imul
aad
and
stc
push
loop
into
imul
push
jg
outsb
sbb
push
mov
ret
push
sti
cmpsb
fnsave
jmp
loop
jnp
adc
fimull
jl
je
test
mov
imul
lods
or
and
std
pusha
cli
adc
cld
cmp
pop
in
add
ja
fwait
ja
fsubs
imul
jne
repz
xchg
sub
fdivrs
scas
and
cltd
out
inc
adc
adc
into
jo
iret
mov
inc
or
jmp
xor
add
movsl
and
jo
mov
xchg
add
call
pop
mov
cmp
mov
rolb
xchg
jmp
push
adc
ds
push
sbb
js
sbb
jo
test
xor
jae
inc
mov
adc
jnp
mov
bound
push
sbb
jo
gs
cli
dec
cwtl
insl
imul
jbe
jbe
lock
addb
mov
xchg
in
cli
lods
and
fs
int
jno
sbb
inc
jo
sub
push
cs
out
cs
inc
iret
fnstenv
jmp
mov
inc
ljmp
mov
imul
dec
icebp
sub
mov
xor
and
dec
mov
mov
mov
push
dec
xchg
repnz
nop
cmpsb
cli
pop
dec
sbb
mov
jge
jo
mov
jo
dec
adc
daa
jp
mov
je
sahf
je
xchg
mov
inc
imul
pop
push
jo
cmpsb
and
out
rcrl
test
xor
daa
lods
mov
pop
push
push
repnz
fs
mov
cmp
jno
mov
mov
lcall
jg
cmp
lock
insb
jl
cmp
faddl
shl
and
shrl
fistps
rol
jo
mov
mov
jo
dec
mov
inc
sbb
jo
or
insb
vpminub
add
imul
inc
je
dec
xor
jo
mov
sbb
inc
imull
popf
cmp
xchg
hlt
mov
jo
inc
cltd
xchg
sbb
scas
leave
jo
cmp
jo
xlat
lea
sub
ljmp
mov
jmp
and
das
cmp
js
sti
adc
xchg
mov
add
mov
push
or
out
push
dec
daa
mov
pop
in
lahf
ljmp
stos
jo
pop
and
mov
xchg
sbb
jo
gs
cli
call
nop
cltd
fisubl
stc
movsl
jne
dec
jo
jbe
lcall
pop
std
pop
cs
jne
cmp
lcall
mov
dec
cs
in
fistpll
cmpsl
sbb
mov
mov
cmpb
inc
call
packuswb
mov
jg
in
out
sub
stos
mov
test
push
jg
pop
xchg
mov
scas
cmc
in
jecxz
icebp
mov
push
mov
jmp
lret
jae
data16
cld
int3
pop
insb
mov
mov
fs
push
jle
div
jo
popf
rorb
dec
xor
repnz
clc
mov
jo
pop
xor
int
or
push
or
ret
adc
scas
insb
leave
xor
mov
adc
jo
cmpsb
in
inc
jg
sub
sub
sbb
aad
jo
adc
das
jo
rcr
cltd
xor
cmp
mov
out
jmp
jo
sub
sbb
jo
enter
pushf
pop
cmp
ret
imul
mov
xchg
movsb
clc
mov
pop
pop
dec
xchg
mov
xor
adc
imul
sbb
or
and
outsb
mov
rorb
xchg
push
jo
and
or
faddl
je
dec
inc
mov
jl
test
scas
testl
nop
into
push
cltd
mov
jo
shl
and
or
decb
stos
dec
rorl
push
in
inc
repnz
push
xchg
mov
sbb
sahf
pop
inc
jo
pushf
dec
xchg
mov
clc
adc
leave
adc
ret
insl
repz
rclb
inc
jmp
daa
xchg
les
xor
test
xchg
add
cmp
dec
jo
scas
cltd
cli
cmpsb
pop
or
sub
cmc
cmp
jl
cmp
cwtl
fst
xchg
dec
push
jmp
rorb
mov
pop
jb
imul
idivb
sub
jo
das
cmp
jno
jo
mov
jb
xor
cwtl
scas
fistl
gs
addr16
jo
xchg
aad
add
mov
mov
outsl
pusha
mov
gs
adc
pop
push
sub
popa
lds
jo
inc
cwtl
add
movsb
jno
pusha
mov
sub
mov
xchg
setb
lods
xor
jo
popf
xor
push
jo
xchg
xor
outsl
pusha
mov
sbb
lock
adc
cmpsb
push
movsb
out
outsl
mov
out
push
aas
shrd
movb
ror
jg
sahf
cli
sbb
lahf
add
push
pop
ds
inc
loop
xchg
push
push
out
jbe
lret
pop
lock
rcr
pop
adc
xor
stc
lea
dec
test
push
cli
jo
out
mov
jae
jno
fisubs
push
and
lds
dec
dec
arpl
dec
out
neg
jp
sub
lock
rcrb
mov
adc
cmpsl
xor
push
or
inc
pushf
mov
jp
push
inc
inc
pop
mov
and
outsb
cmp
hlt
xchg
xor
aaa
out
cmp
dec
jno
jo
mov
lahf
mov
in
or
pop
lods
jae
mov
xchg
out
jae
jno
or
xchg
mov
mov
arpl
push
sbb
jge
shlb
push
push
jge
fs
daa
push
mov
xchg
lahf
push
jle
pop
in
push
lcall
ret
or
xor
or
inc
jno
dec
pop
out
mov
pop
mov
xor
iret
xchg
loopne
stos
mov
dec
filds
cmp
test
cmp
js
jmp
xchg
sti
push
sahf
cltd
sahf
lahf
push
pop
push
jno
xchg
pop
insb
jae
fildll
lahf
jecxz
arpl
outsb
test
imul
mov
xor
add
push
dec
in
add
pop
xchg
sbbb
push
push
sbbb
scas
push
jl
mov
jo
arpl
inc
xchg
std
adc
das
jae
in
cmpsl
jle
xor
bound
mov
mov
ret
sti
mov
pusha
inc
mov
inc
add
push
push
mov
lock
push
out
push
mov
pop
mov
push
jbe
jae
jl
and
in
or
dec
out
mov
lret
cmpsl
insb
fisubrl
std
pop
outsb
jl
lea
cmc
lods
aaa
not
push
jp
sbb
cs
imul
cmpsb
pop
cmp
dec
dec
loopne
mov
pop
lods
in
cli
lods
jecxz
push
stos
filds
loop
inc
push
into
and
sbb
mov
lret
dec
cmpsb
cmc
fwait
sbbb
cmpsl
ljmp
xor
js
in
lods
mov
outsl
inc
xchg
inc
je
cmp
jle
push
inc
enter
adc
dec
push
fiadds
jg
sbb
jmp
icebp
out
dec
decl
mov
inc
jg
pop
ficoms
arpl
or
and
mov
int3
fcmovnu
or
mov
es
xchg
ja
pushf
aas
lods
scas
push
and
jno
lds
stos
or
mov
jmp
andb
subl
imulb
bound
pop
cmp
popa
push
jo
or
cmp
fwait
sti
aam
add
dec
enter
icebp
push
pop
outsb
inc
ljmp
mov
gs
xorl
mov
call
imul
mov
rorb
push
jmp
jno
mov
popf
stos
lahf
test
pusha
ret
lds
cltd
jbe
sti
subl
pop
repnz
sub
cwtl
inc
dec
xor
jle
test
fisubl
rorb
push
mov
pop
xchg
lret
push
cmpsb
gs
xlat
repz
jmp
mov
mov
dec
adc
in
fidivs
mov
mov
sub
pop
xor
xchg
xchg
call
out
shll
sub
loope
and
jo
call
enter
inc
ljmp
scas
add
push
dec
sub
hlt
in
jae
adc
dec
jo
incl
xchg
loope
push
std
imul
mov
xor
jl
sbb
movb
insb
inc
loope
pop
mov
dec
xor
out
push
xchg
popa
inc
dec
jo
sbb
dec
cltd
stos
and
inc
pusha
addb
test
jo
and
mov
out
inc
jo
sbb
pushf
mov
push
xor
jo
ja
jns
jge
filds
pop
xor
pop
leave
jl
data16
or
jbe
outsl
xor
push
cli
addr16
pop
js
lock
jo
pop
in
call
or
pop
push
jg
xchg
adc
lea
ljmp
pop
xorps
xor
xlat
jle
data16
jo
int3
aam
jle
inc
inc
jo
xchg
loope
adc
fs
clc
ret
jo
mov
push
add
mov
pusha
sub
xchg
dec
icebp
adc
movups
push
lahf
mov
mov
test
mov
mov
mov
jl
inc
scas
jo
inc
test
roll
leave
pop
mov
sbb
push
pusha
xchg
pusha
push
add
jo
mov
scas
in
ficompl
jo
xchg
fildll
cs
repz
jae
pop
jo
mov
fwait
dec
test
imul
mov
sub
mov
jo
jne
pop
push
jnp
or
push
lds
xor
jl
test
icebp
jo
loopne
mov
int
mov
pop
or
sbb
adc
jno
mov
rcrb
push
sub
out
fsubrs
sbb
jo
fstps
andb
imul
scas
xchg
mov
mov
mov
jno
or
pop
out
jg
in
dec
popf
scas
jmp
int
ss
sbb
rorb
jo
insb
imul
mov
gs
dec
iret
xchg
jp
mov
scas
or
insl
or
push
pop
ss
jle
xchg
jbe
scas
xor
sub
cmp
or
add
jo
cmpsl
dec
clc
icebp
repz
stos
add
push
pop
rorb
xchg
push
pop
dec
inc
fdivrl
jecxz
or
jge
jo
out
mov
fwait
jo
jae
repz
insb
fisubl
fisttpl
jo
xchg
stos
scas
movsb
mov
dec
jo
imul
xor
mov
push
inc
aam
pushl
sub
and
fldz
xchg
jo
pushf
or
jo
stos
cmp
shll
mov
adc
mov
aam
or
mov
in
jg
stos
adc
shl
xor
fdivs
into
popf
dec
pop
test
sub
aaa
fstp
jo
mov
int
push
jge,pt
mov
in
sub
or
es
fldt
mov
test
insb
aam
hlt
test
adc
mov
mov
shlb
sub
push
jo
imul
jp
jo
sub
push
rolb
mov
cli
cmp
nop
imul
sahf
jge
xor
xor
dec
fpatan
xchg
fisubs
inc
lahf
aam
out
and
insb
xchg
daa
in
lret
add
cwtl
sahf
stos
xor
dec
andb
add
jp
daa
punpcklwd
cmp
insl
sbb
push
mov
test
xor
test
scas
les
xchg
ja
jo
hlt
repnz
sub
inc
lea
sar
cmp
mov
and
loope
push
shl
insl
addr16
mov
xor
mov
pop
fdivrl
lahf
bound
popf
sub
jo
xlat
mov
jo
cli
lea
jb
das
fs
cmp
adcl
scas
mov
inc
adc
mov
pop
cltd
jo
lods
pop
sbb
ds
fldt
jo
mov
dec
xchg
xchg
jo
xchg
inc
das
lret
loop
leave
inc
aaa
jno
jo
push
push
rclb
lods
mov
arpl
push
fs
jo
aas
lret
aad
sub
ficompl
mov
mov
jo
mov
call
mov
stc
icebp
mov
movsb
jnp
xor
jo
cmpsb
jecxz
mov
fnstenv
xor
pusha
call
xchg
mov
pop
dec
jo
xor
jno
jnp
icebp
jo
mov
add
test
jo
les
repnz
push
dec
jbe
pushw
hlt
mov
pop
std
add
out
inc
jb
popf
jo
into
lcall
push
mov
pusha
or
cmp
cwtl
jns
xor
pop
jne
pop
sti
pop
fimull
mov
add
sbb
jb
and
mov
jo
xchg
mov
in
xchg
xor
mov
call
pop
lret
jg
jns
es
daa
xor
xor
sarb
dec
orb
mov
notl
jo
lock
xchg
mov
pop
cmp
idivl
xor
lods
sub
test
push
lret
daa
stos
cltd
cs
in
mov
js
mov
fsubs
cmp
into
pop
leave
push
in
mov
jl
cmpsb
aas
lods
push
inc
js
push
mov
cmpsb
pop
xchg
push
or
loopne
es
test
bound
add
aad
sbb
dec
loop
jbe
mov
cli
add
ret
mov
out
add
sbb
jne
jo
fiaddl
loopne
cmpsb
sub
mov
cltd
push
mov
sbb
mov
mov
xchg
std
fidivrs
rcrb
subb
dec
in
adc
mov
push
xchg
dec
push
add
test
mov
lcall
lods
add
scas
xchg
scas
push
dec
cwtl
aam
xchg
js
sahf
repz
sub
mov
jo
arpl
jecxz
into
push
jp
jno
adc
roll
jo
cmp
jo
dec
sbb
and
mov
imul
inc
xchg
dec
adc
inc
repz
jo
push
xorb
jp
repnz
scas
dec
lret
jmp
popf
dec
xor
mov
pop
stos
cmp
xorb
cwtl
jl
fcmovu
add
in
cmp
adc
call
cwtl
fwait
mov
jbe
lock
mov
xchg
jns
push
loope
xchg
jp
xchg
sub
sub
pop
or
outsb
or
jo
or
inc
in
sub
jo
inc
addl
stos
icebp
dec
jo
push
imul
jecxz
insl
pop
addr16
and
xor
adcb
lret
jl
inc
mov
add
and
pop
sub
stc
xchg
lahf
pop
lock
adc
xchg
mov
sub
jo
nop
ss
push
int
xlat
jo
mov
sub
cmpsb
std
xor
add
jno
in
mul
insb
cmp
push
mov
mov
sub
push
push
arpl
aam
or
outsl
icebp
sbb
sub
not
cld
fnstenv
std
out
rcr
cmp
jo
out
adc
pminub
out
add
jns
jo
aaa
or
xlat
push
int
sbb
cwtl
mov
pop
jmp
insb
cltd
psubw
lret
js
sbb
jp
testl
adc
cs
in
std
xorb
dec
test
add
or
add
xor
mov
lcall
or
out
seto
lahf
cmpsl
out
es
cmp
mov
div
in
stc
mov
xor
dec
sbb
jbe
adc
dec
and
and
or
xor
sets
add
jnp
pop
xchg
sbb
jne
inc
cmp
pop
xchg
mov
nop
movsl
mov
and
pop
push
nop
xchg
jno
adc
fdivl
add
sub
sub
aas
out
iret
mov
ss
arpl
jnp
in
jae
or
imul
pusha
sbb
mov
leave
out
xchg
inc
in
jb
mov
stos
jge
adcb
inc
fstps
sbb
insl
loop
add
roll
scas
adc
int
cmc
jae
popf
adc
mov
lret
jle
adc
cmp
cmp
stos
sbb
mov
push
cmp
jb
and
cmp
filds
arpl
daa
jnp
std
out
jae
int3
mov
push
lret
pusha
aaa
js
jno
leave
lret
ret
xchg
dec
jle
roll
xchg
cmp
push
mov
mov
push
dec
xlat
pop
clc
mov
pusha
and
les
inc
mov
popa
and
ret
cmp
mov
ja
test
daa
mov
push
in
lret
jp
repz
push
push
sbbb
data16
aaa
xchg
test
scas
cmpb
lret
adc
test
or
imul
cmp
add
jo
lahf
adcb
mov
dec
call
jmp
jns
ja
inc
pop
mov
sbb
inc
ljmp
std
xchg
mov
add
adc
mov
jae
dec
jno
mov
adc
cs
cmpsb
shr
push
mov
orb
push
int3
mov
adc
int3
xor
add
mov
or
dec
or
jle
push
mov
outsl
adc
scas
lock
inc
jl
pop
dec
scas
inc
add
pushf
inc
les
inc
loopne
shl
das
mov
ficoml
ds
lcall
movsl
out
inc
mov
cmp
inc
mov
adc
adc
push
jb
and
dec
outsl
js
jge
lock
scas
inc
mov
cmpsb
mov
mov
push
jge
sbb
cmp
call
pop
adc
test
movsl
or
cmpsl
jno
fisttps
mov
ljmp
cmp
mov
jge
cld
int
inc
dec
mov
mov
push
xor
xor
out
xor
in
push
lea
jg
mov
dec
mov
call
mov
pop
lahf
sbb
mov
add
push
xchg
mov
xlat
jae
dec
pop
jmp
push
das
popl
xchg
cmc
inc
aas
scas
sub
rcll
xlat
dec
mov
adc
cltd
and
jae
arpl
in
add
adc
dec
cmpl
out
mov
push
pop
movsb
fcomip
les
sub
push
clc
icebp
pop
push
jns
push
loop
pop
or
jge
or
cwtl
lret
rcrb
add
pop
push
adc
fistpl
xor
sub
sbb
adc
push
fisubrs
mov
jbe
gs
sbb
lods
inc
jg
nop
jo
stos
lret
dec
inc
imul
add
repz
in
js
push
ss
sti
andl
aas
loope
cwtl
or
inc
jo
adc
repz
mov
movl
fimull
je
xchg
rolb
arpl
dec
sbb
add
dec
adc
cmp
leave
dec
push
pop
mov
cmp
stos
mov
fadds
in
dec
mov
inc
and
cltd
es
je
dec
js
pop
jl
imul
jl
adc
adc
xor
mov
out
les
dec
cwtl
push
sbb
rep
sar
gs
jo
xorl
jl
xor
inc
andb
js
in
sbb
jl
or
sub
sub
pop
repnz
ret
lret
cli
inc
jo
fnop
sbb
jne
inc
out
je
jge
xor
jo
test
leave
sub
nop
into
sbb
pop
push
fists
and
push
add
xchg
adc
scas
jmp
sub
mov
sub
adc
jo
inc
cmp
xchg
xor
in
xorb
das
pushf
lock
adc
cmc
dec
xor
cmpsb
cli
das
sbb
pop
sub
sub
add
add
xor
add
outsb
rcll
lods
jp
xlat
mov
hlt
repz
cld
in
pusha
adc
dec
adc
mov
and
inc
or
jbe
push
inc
test
push
lret
fs
test
xor
jg
bound
pushf
mov
call
xchg
pop
hlt
and
xor
mov
nop
testl
dec
and
push
push
xchg
test
adc
inc
jae
loop
jo
and
or
cmp
or
lea
aam
jo
xchg
stos
testb
sub
arpl
js
xlat
cmpsl
push
cmp
inc
pop
jo
stc
jp
add
mov
repnz
cwtl
sub
dec
xor
mov
mov
inc
and
mov
test
cltd
and
jo
out
std
dec
les
fiadds
or
pop
aad
or
add
or
push
nop
cmpsb
pop
jns
insb
jle
jo
rcrb
and
pop
and
cmp
sub
or
xor
loop
jo
lret
xlat
mov
cmp
cmp
je
out
sahf
aam
push
fxch
je
jne
push
push
jo
imul
jo
xchg
xor
cli
xlat
mov
jp
mov
add
in
lea
ret
inc
jecxz
jne
jbe
or
add
jmp
mov
xlat
mov
ret
dec
icebp
jg
xchg
and
push
sahf
mov
xor
sbb
dec
push
cmp
mov
fs
cmc
int3
sbb
addr16
push
popf
cltd
and
faddl
sbbb
loopne
cltd
mov
sbb
pop
jo
iret
les
and
nop
add
jno
sbb
dec
jns
je
cld
push
movsl
sub
push
add
out
bnd
js
mov
rclb
cmp
cmp
cmp
lods
outsl
insl
push
inc
enter
push
orl
jns
mov
jo
rorl
clc
pshufw
lea
sub
jo
mov
xor
sbb
insb
mov
jo
mov
test
jo
cmp
int
push
push
imul
jbe
aam
mov
psrld
sbbb
jo
dec
jne
pop
arpl
out
lea
test
idivb
je
xor
fmuls
cmpl
jp
cmpl
scas
push
push
xor
dec
je
testb
cmp
push
cmp
fcmovne
subb
jmp
lock
sub
or
js
mov
push
or
jo
push
add
test
jo
jle
inc
jne
pusha
gs
ret
sbb
cmc
stc
popa
pop
int
cld
shrl
cmp
les
jo
sahf
nop
jo
sbb
pop
sbb
mov
shll
add
popa
sub
jo
pop
sub
sbb
leave
sete
mov
nop
xchg
dec
jo
dec
out
dec
fdiv
mov
mov
pop
jl
push
ret
and
in
out
fs
jo
or
mov
test
lds
adc
pushf
adcb
mov
inc
stc
xor
notl
test
test
out
imull
pop
movsb
icebp
adc
enter
rclb
xchg
push
loope
inc
mov
sahf
loopne
popa
xchg
xor
mov
jge
sbbb
adc
test
jo
insl
xor
mov
cmp
jo
lods
sub
in
cmp
xor
lods
jo
cwtl
pusha
push
stos
cli
out
hlt
pushf
mov
xchg
xchg
loopne
jo
popa
mov
jns
cli
add
mov
dec
xchg
jo
sbb
fistpl
or
pop
testl
pop
iret
jo
call
mov
pop
mov
mov
fidivl
add
ret
jo
pop
fisubs
clc
imul
cmp
mov
and
add
jo
push
psubsw
fcmovu
fs
lahf
pushf
out
cs
adc
arpl
mov
fs
pop
xor
jo
aam
jecxz
inc
sub
out
in
loope
jo
test
jo
insl
jne
mull
jo
jnp
bound
or
jo
out
push
and
jo
mov
mov
pop
in
mov
jecxz
das
shlb
dec
test
mov
lea
je
jno
jo
cli
fdivrp
mov
addl
mov
sub
jo
push
adc
outsb
shl
nop
sub
ja,pt
xchg
pusha
sub
pop
fs
mov
into
xlat
pop
sahf
sbb
push
jae
add
idiv
inc
gs
sub
stc
aam
mov
repz
ds
test
push
popa
xchg
leave
jp
cmp
cmpsl
test
psubd
fbstp
xchg
imul
jle
ret
aam
pusha
inc
add
fidivrl
addb
xchg
jo
pop
inc
sbb
pop
pop
jmp
jg
pusha
jne
pop
cld
rcrb
js
fs
sahf
aas
cmpsl
lods
bound
scas
xchg
or
or
cmp
imul
xor
mov
mov
imulb
fnstenv
sbb
lret
hlt
cs
in
sbb
loopne
cmc
sub
mov
dec
dec
bound
shrl
mov
shrd
clc
ljmp
jo
sbb
mov
addr16
xchg
ret
insl
out
xchg
loopne
push
outsl
jo
jne
jb
sub
call
ficoms
xchg
or
mov
jl
gs
dec
pop
bound
nop
clc
sub
jmp
xlat
aas
das
jo
push
lret
jno
sbb
pop
cmp
stos
adc
dec
jo
gs
mov
fs
insb
jo
or
movsb
mov
and
fwait
xor
push
icebp
add
fs
arpl
pushf
ret
jge
push
outsl
xlat
add
sbb
xor
jb
mov
sahf
stos
cmc
ja
jo
roll
mov
sub
in
cs
iret
jo
mov
dec
les
jne
push
popa
ret
mov
mov
jg
jmp
xorb
lods
lock
and
ljmp
jae
push
clc
jns
sbb
stos
notl
jo
adc
insl
push
sbb
jo
nop
sahf
mov
xor
pop
cwtl
mov
mov
ss
and
pop
idiv
test
mov
cmp
mov
jge
and
jbe
pop
push
xchg
insl
xor
js
sbb
in
adc
mov
gs
xchg
mov
insl
shll
incb
jno
jo
ja
mov
inc
sahf
xor
jo
mov
inc
outsl
mov
dec
sbb
pop
adc
or
add
or
mov
lahf
fistpll
lret
push
inc
mov
pop
inc
outsl
cmp
subb
jle
cmp
pusha
lahf
popf
aaa
clc
lea
add
invd
pusha
xor
sub
mov
icebp
in
js
jae
fwait
push
or
jmp
push
dec
inc
jle
push
enter
pop
in
icebp
testl
jns
test
jle
cmp
jl
jns
add
sub
sbb
mov
fstps
cld
call
or
fisttps
add
dec
cmp
cmp
pop
sub
xchg
jg
jle
jae
sub
and
add
push
movsl
mov
jmp
and
jmp
loope
loope
fs
push
mov
and
fsincos
push
lahf
adc
mov
into
shlb
sub
jae
nop
xor
push
je
add
xchg
jge
hlt
int3
or
negb
push
adc
lock
dec
pop
insl
stos
cmp
inc
fwait
pushl
mov
cltd
pop
mov
arpl
sub
int3
aam
add
pop
and
mov
xchg
and
ljmp
popf
in
in
fisubrs
adc
jecxz
fiadds
cmp
lock
pusha
mov
out
push
loope
and
add
cmp
jbe
fstpt
cmp
inc
scas
es
dec
cmp
pusha
arpl
icebp
pop
enter
lods
scas
loop
mov
push
pop
scas
out
out
and
shl
andb
push
pop
mov
lahf
dec
push
mov
arpl
mov
insl
fnsave
mov
sbb
ljmp
inc
fldcw
out
loope
addb
inc
mov
pop
xchg
pop
sbb
mov
mov
orl
subl
or
rorb
add
addr16
pop
in
cmp
push
and
add
addr16
xor
sbb
test
adc
inc
jle
inc
fistpll
rolb
fwait
outsb
mov
mov
jbe
mov
ret
movsb
cld
inc
pop
adc
addl
decl
dec
mov
jb
insb
scas
pop
das
arpl
out
aaa
cwtl
out
push
push
mov
out
xchg
into
push
das
insb
jae
mov
leave
push
sub
iret
loop
ljmp
sbb
movsl
test
ja
inc
sbb
stc
sarl
andl
outsb
sti
xor
dec
fwait
adc
mov
push
xor
clc
jb
pop
out
cmp
jae
aad
pop
sbb
fiadds
iret
cmpsb
arpl
test
flds
xchg
outsb
addr16
sub
cmpsb
stc
inc
pushf
dec
rorb
shll
sbb
sbb
adc
clc
mov
imul
mov
lock
xchg
mov
daa
mov
lahf
lahf
outsl
ret
add
in
lock
scas
in
inc
sbb
lahf
out
jae
bound
lods
outsb
push
int3
scas
fidivrs
in
and
add
inc
shrl
xchg
repz
mov
mov
pop
xor
insb
outsb
jl
pop
jmp
lcall
jae
test
cltd
in
add
jp
loopne
jb
test
sbb
xadd
add
xchg
pop
pop
xchg
in
mov
fdivp
jle
aas
push
and
dec
test
cmp
mov
lds
test
mov
xchg
sbb
rcr
loop,pt
adc
xlat
fldenv
mov
cmp
out
int
and
lock
and
call
nop
jne
jnp
outsl
sbb
int3
fs
outsl
ja
and
mov
xchg
pusha
popf
cmp
std
insb
mov
arpl
or
arpl
mov
xor
mov
int3
and
arpl
mov
jnp
out
or
or
fistpll
sub
clc
add
push
adc
loop
aaa
clc
mov
sarb
mov
xor
outsb
ja
cltd
xchg
or
test
ds
imul
pop
mov
mov
fldt
cltd
call
loop
les
jecxz
mov
sub
test
dec
outsb
repz
or
jns
jp
jecxz
orl
dec
jecxz
cltd
mov
enter
loopne
adc
cmc
mov
addl
rcr
imul
jae
inc
cmpsb
or
lods
in
lods
insl
adc
lock
testl
test
jo
cmp
mov
scas
jl
xor
movsb
sarb
mov
jmp
mov
fisubl
lock
xchg
aad
inc
mov
fnsave
adc
imul
movsl
popf
jge
pop
out
out
mov
std
shlb
push
fnstsw
cmp
xchg
xchg
aas
out
sbb
stos
jno
push
push
jge
notb
sti
shrb
jnp
outsb
push
xchg
pusha
testb
xor
jbe
bound
cltd
pop
jbe
imul
shll
cmp
pop
jge
std
or
lock
mov
dec
or
jbe
gs
inc
lahf
shll
add
pop
popa
jae
or
mov
fnsave
jo
rcrb
dec
loopne
leave
mov
add
imul
je
or
adc
scas
outsl
jnp
cmpb
jg
pop
scas
mov
call
iret
scas
mov
dec
sub
inc
mov
in
repz
mov
xor
inc
addl
jg
mov
mov
mov
outsl
sub
sbb
xor
push
xchg
mov
dec
cltd
les
mov
add
repz
xchg
adcl
sub
jae
cmp
mov
bound
sbb
out
js
test
addb
xchg
jnp
jmp
add
push
rcrb
out
jecxz
loop
inc
inc
dec
add
adc
sub
fnsave
out
and
clc
int
jge
jo
sbb
mov
jge
mov
or
pop
jnp
push
fisubrl
test
shlb
xor
pop
adc
cmpl
out
int3
fcmovnb
xor
xchg
nop
and
xchg
adc
or
sub
fnstsw
jmp
btsl
leave
je
push
jecxz
push
jbe
cmp
pop
push
clc
inc
mov
xchg
mov
sub
jp
fldenv
leave
push
xchg
jo
mov
mov
sub
sti
jo
xor
jge
jg
mov
push
xchg
jle
push
jecxz
loopne
jo
cs
sub
adc
ss
arpl
pmaddwd
jo
pop
sub
mov
xor
jo
cwtl
push
jns
hlt
pop
pusha
jo
mov
xchg
andl
push
in
and
jo
cs
push
xchg
jae
or
mov
andb
xor
cs
jge
cmpsl
movsl
stc
dec
mov
int
out
nop
push
mov
xor
shlb
jl
xchg
push
bound
lret
pop
jo
call
pushf
enter
mov
dec
loopne
repz
jo
dec
sub
pop
jae
lock
or
push
movsl
push
adc
fldt
out
pop
hlt
push
lret
loopne
inc
je
pop
inc
dec
sahf
cmc
ror
xchg
sbb
push
push
jo
add
into
jo
pusha
inc
ja
cwtl
inc
dec
jo
fnsave
pop
inc
inc
inc
lock
in
push
repnz
dec
jo
add
dec
test
gs
pop
adc
rcll
inc
push
std
inc
std
ret
lcall
and
repnz
adc
fwait
lds
lods
push
lea
xorb
push
pop
add
lret
mov
jp
mull
jo
lea
jbe
cs
mov
out
fdivs
lock
data16
push
mov
jo
mov
mov
add
sub
add
mov
jae
xor
sbb
mov
sbb
insl
pop
jge
jo
imul
jp
mov
xchg
inc
mov
cmp
out
pop
jb
call
movsb
and
addr16
cmpsl
pop
inc
jo
inc
lods
and
sub
leave
movsl
jo
or
mov
out
mov
int
sbb
jo
lock
movsl
out
xor
push
sbb
nop
jne
mov
push
inc
xor
jb,pn
adc
mov
loop
dec
data16
es
outsl
pop
push
xchg
mov
stos
sbb
ror
jmp
insb
mov
jo
sub
jl
xor
mov
mov
out
jo
bound
addl
sbb
and
cmpsl
ds
or
jae
outsb
cmp
pusha
jo
cmp
jno
xchg
sbb
inc
pop
negb
iret
xchg
les
add
aad
in
jo
seta
test
mov
jo
lahf
mov
xchg
mov
dec
xchg
adc
xor
aad
jo
in
arpl
int
xor
or
pusha
and
mov
dec
imul
lret
out
xor
pop
jbe
test
pushf
je
mov
stos
jo
xchg
inc
lods
mov
iret
ret
hlt
fists
cmc
mov
out
and
jae
call
xor
and
xchg
loope
in
add
mov
push
fdivs
mov
dec
cmp
pushf
pop
jns
sub
and
decb
sbb
push
xchg
pop
fwait
movsb
jo
sarb
mov
pop
mov
sbb
test
addb
cmp
sahf
mov
cmp
imul
insl
outsb
iret
mov
ds
add
push
mov
testb
mov
dec
cmp
pop
mov
ficompl
insb
shrl
xchg
adc
cmp
cli
jo
insl
cwtl
ss
jg
and
add
jne
dec
or
or
cmp
cmp
fnstenv
mov
sub
jo
dec
adc
mov
icebp
mov
pop
test
jp
ret
test
in
jnp
je
jo
mov
in
loope
inc
sub
mov
rsqrtps
push
jbe
cmc
dec
dec
nopl
out
mov
imul
mov
loopne
ret
mov
mov
jge
por
and
xchg
jle
add
lahf
jo
mov
insl
inc
adc
cmp
fs
push
mov
pusha
mov
cmp
sbb
pop
loope
jo
lods
andb
xchg
jo
pop
call
nop
in
int3
fiaddl
sub
fists
cmp
mov
es
jo
les
jnp
fnsave
push
dec
icebp
push
fdivrl
aaa
adc
or
repnz
push
sti
cwtl
in
jb
push
les
add
movsb
int3
cmp
mov
leave
daa
sarl
ds
mov
push
adc
jo
nop
fistpl
outsl
sar
sub
loope
addl
or
cmp
cld
ljmp
lcall
pop
sub
incl
inc
xlat
sahf
insb
fucomip
imul
push
test
test
mov
test
or
orb
push
loope
icebp
outsb
jnp
inc
mov
in
in
jno
les
or
loope
mov
scas
fbld
push
fcom
hlt
push
cld
scas
jo
push
enter
aam
in
mov
pop
jp
mov
leave
adc
jmp
inc
add
cli
ljmp
push
popf
pop
push
imul
sub
call
cltd
adc
loopne
mov
push
loop
cltd
addr16
dec
xor
sub
xchg
pop
mov
sub
stos
andb
sub
jmp
daa
fldcw
mov
inc
repz
jecxz
cwtl
fdivl
sbb
jo
data16
cs
aas
rcrl
xchg
jo
jge
stc
jns
jae
repnz
loopne
decl
push
gs
xor
pop
xchg
mov
outsb
arpl
sub
push
add
pop
shrl
addb
jo
mov
addr16
fsts
int
cld
push
pop
lock
pop
out
test
imul
test
mov
mov
subb
iret
fbstp
mov
ret
inc
inc
jo
sbb
xlat
fs
loope
pop
sahf
scas
sub
jmp
sarb
and
mov
mov
and
mov
dec
shrl
pushf
loope
push
sbb
test
insb
mov
jmp
inc
sub
jnp
pop
cmp
inc
adcb
push
cld
jo
mov
inc
lds
mov
and
push
mov
sbb
shrb
pop
xchg
aas
popf
push
idiv
movsl
rolb
inc
ret
adc
push
jo
pop
push
pop
repz
jo
sub
and
cmpsb
push
stos
loopne
fidivrs
fimull
xchg
push
repz
jno
icebp
jo
mov
adc
jns
pop
and
push
nop
sub
mov
sub
push
rorl
lret
push
insb
das
mov
push
dec
dec
lods
adc
cmpsb
in
jmp
push
jp
idivl
inc
pop
nop
jg
outsl
pusha
jle
ja
arpl
or
push
stc
fs
mov
jmp
dec
scas
aas
fnstenv
nop
cmp
or
and
cmp
stos
inc
insb
jae
push
xchg
mov
int
mov
add
mov
scas
jmp
xor
xor
or
cltd
jo
push
fstpl
mov
pop
adc
xor
div
dec
or
clc
cld
std
fs
xchg
arpl
scas
push
push
and
push
and
or
adc
pop
sub
xchg
or
arpl
call
pop
mov
lahf
sbb
bound
add
iret
sub
jl
ljmp
cmp
jg
rorl
hlt
insl
das
arpl
lds
int3
mov
imul
addr16
mov
cmp
jmp
inc
data16
insl
arpl
jae
arpl
jmp
dec
test
mov
or
sub
add
mov
mov
in
loop
inc
shr
aam
cli
and
mov
iret
cmp
jg
lcall
fbld
jmp
jle
hlt
fcoml
pop
xchg
pop
inc
jl
fnstenv
or
dec
mov
push
lret
stos
push
inc
repz
bound
jae
push
lahf
imul
push
imul
inc
push
in
bt
fistl
or
sahf
add
dec
pop
fiadds
and
fdivl
mov
mov
ror
mov
je
movsl
push
push
loop
repnz
pusha
xor
push
ffree
decb
into
ret
ficomps
and
popf
aam
push
cmp
pop
ret
scas
gs
and
push
adc
in
lahf
popa
je
or
es
lods
inc
mov
setg
jbe
sub
in
xor
push
call
ficoms
jnp
xchg
lock
sbb
std
cmp
cmp
push
push
xor
jmp
arpl
jae
or
flds
inc
jle
fisubl
and
insl
in
push
inc
push
mov
loop
and
aad
outsb
pop
xlat
or
daa
bound
aam
cmp
cmc
add
leave
inc
repz
xchg
mov
push
pop
sahf
int3
cmc
fwait
push
cmp
jg
sub
fisubs
mov
daa
push
pusha
push
js
pop
bound
imull
adc
xor
cwtl
push
cmpsl
jbe
addb
out
adc
int3
jo
and
lret
inc
addr16
stc
mov
fildll
arpl
bound
sarl
stc
ja
or
sbb
stos
inc
insl
mov
jge
sbb
or
jmp
imul
les
jb
inc
insl
in
ljmp
jle
push
push
and
cmpsl
xor
dec
fstl
out
push
xchg
daa
adc
jmp
and
xchg
imul
pop
pop
in
into
mov
adcb
pop
je
add
add
loope
into
push
test
jge
aas
add
je
mov
push
jno
test
mov
or
je
pop
mov
mov
push
sub
loop
ret
ds
movsl
pop
mov
daa
xchg
pop
pop
mov
and
es
sbb
pop
pop
pop
cmp
movsb
daa
jns
addb
mov
push
stos
and
sbb
mov
jg
out
pop
roll
mov
or
and
sub
cmp
sbb
xchg
xchg
sahf
xor
push
movsl
mov
movsl
mov
adc
arpl
nop
fs
xlat
adc
scas
cmp
push
xor
push
mov
dec
es
sahf
cmp
or
out
loope
dec
aas
out
mov
in
mov
dec
push
in
cmpsl
jle
pop
jo
push
sbb
std
jns
sbb
stos
pusha
jmp
pop
sub
jmp
inc
enter
inc
cmc
xchg
jl
stc
outsb
outsl
cmp
pop
out
xor
jae
sbb
xchg
shr
push
add
fstl
inc
addr16
jl
jae
mov
aaa
in
jnp
loopne
xor
movsb
fsubl
jbe
loopne
popa
andl
mov
mov
aam
insb
lock
sbb
jnp
shr
movsb
in
in
sub
fcmovb
mov
lahf
sbb
hlt
sub
icebp
in
cmp
out
ficoml
sar
in
xor
lods
jae
das
cmpsl
push
daa
jne
xchg
clc
and
mov
mov
xchg
sbb
push
leave
xchg
addr16
out
insb
xor
and
push
mov
aas
push
and
rolb
dec
mov
push
sub
sbb
out
not
xchg
and
jae
shrb
es
dec
repz
fmull
mov
xor
push
jne
fiadds
push
mov
es
mov
jbe
es
pusha
or
xchg
in
in
shl
xchg
loope
daa
mov
addr16
loopne
dec
repz
or
xor
cmp
test
mov
mov
jecxz
cmp
fisubrl
xor
fbstp
cmp
mov
inc
sti
dec
gs
pop
adc
sbb
mov
in
fadd
call
jmp
mov
jnp
inc
das
and
stos
or
fdivrl
sub
push
movsb
call
adc
fbstp
add
clc
imul
jecxz
in
sub
shl
push
outsl
aam
xchg
sub
push
scas
les
int
sti
out
cmp
nop
std
mov
pop
sarl
jb
repz
dec
sbb
cmpsb
pop
mov
cmpsl
or
jge
push
shl
cmpsb
pop
cld
xor
jae
xorl
setle
fwait
mov
cmpsl
push
pop
push
pop
adc
fisttps
cs
xlat
in
sbb
and
scas
jae
and
mov
pop
rcrb
in
fs
sub
sbb
jle
add
ja
arpl
sub
in
insb
push
and
enter
add
scas
cmc
aaa
jp
arpl
jecxz
test
xchg
lock
lcall
aaa
out
popa
fstp
out
mov
sub
dec
inc
cltd
cmpsb
imul
std
int3
mov
lock
pop
push
fs
fs
pop
call
jle
ja
outsb
lahf
sub
in
inc
jbe
sbb
xchg
test
outsb
jg
loop
cwtl
xchg
scas
ja
sub
mov
movsb
or
or
test
pop
insb
lock
dec
xor
shl
lcall
and
test
add
test
movlhps
jae
xlat
mov
inc
shlb
inc
imul
cmpsl
jg
fsubp
shl
dec
nopl
add
movsl
test
aas
or
jae
sbb
fstl
or
int
xchg
in
ret
inc
out
cmpl
add
lea
in
jbe
mov
jmp
adc
and
ja
insb
mov
inc
je
dec
enter
mov
paddsw
cmp
inc
sub
mov
movsl
out
xchg
xchg
xor
jae
rep
or
add
xchg
mov
shrl
dec
negb
mov
mov
push
push
fbstp
popa
or
mov
sbb
lods
xchg
mov
xor
mov
in
pop
cmp
or
inc
pop
jae
movsl
arpl
or
lcall
inc
dec
push
jle
mov
fwait
jo
inc
push
jns
sar
xchg
sbb
push
add
daa
sub
xchg
mov
ret
js
out
mov
sbb
movsb
and
std
addr16
out
shr
xlat
mov
or
roll
push
mov
inc
ljmp
test
inc
jge
xchg
cmp
pop
push
dec
fcmovbe
mov
adcb
jns
push
jl
push
scas
fisubs
mov
shrl
insb
test
gs
pop
scas
movl
imul
inc
adc
sbb
push
pop
jno
mov
dec
sarb
loope
push
cmp
pusha
arpl
or
int3
imul
int3
js
pusha
cwtl
push
ljmp
orl
mov
mov
mov
jo
lret
mov
test
jns
int3
push
cli
jg
fs
or
fucomip
gs
je
dec
dec
pop
xchg
orb
js
arpl
push
popa
and
lock
mov
and
gs
int
pusha
push
push
push
cmp
mov
outsb
js
mov
mov
adc
out
mov
pop
test
add
or
popf
push
sbb
pop
out
jae
or
iret
out
icebp
mov
and
fildll
adcb
pusha
loop
mov
rcl
fsts
arpl
pop
mov
insb
arpl
jae
xor
lret
cmpsb
fs
ret
inc
inc
push
cmp
and
cld
loopne
stos
xchg
in
lods
lock
mov
insb
adc
mov
mov
push
fadds
add
and
xor
mov
adcb
mov
mov
push
lahf
mov
lcall
imul
stc
xor
and
stos
sub
les
loope
push
or
inc
add
xor
fidivs
jle
in
lods
out
add
push
out
sbb
lret
enter
jnp
lret
mov
les
dec
test
test
add
hlt
push
mov
call
movsl
pop
lret
fs
add
xor
icebp
pop
lret
mov
in
lods
fildll
sahf
lods
adc
add
fs
pop
aaa
in
mov
dec
sbb
dec
push
stos
jae
mov
push
sbb
or
mov
out
cli
jne
inc
sbb
adc
adc
xchg
loop
aad
repz
cmpsb
fldl
arpl
push
ja
outsb
jno
mov
xchg
jmp
sub
test
dec
push
dec
into
cmp
lret
and
mov
cmpl
pushf
sub
jae
add
jae
std
out
cmp
bound
cmp
aam
rcr
xchg
in
imul
jg
jmp
adc
dec
adc
mov
test
sub
lret
fwait
cmpsl
je
negl
mov
test
sub
fmull
push
and
mov
hlt
or
arpl
inc
mov
pop
int
andb
push
xchg
or
pushf
paddw
adc
push
push
dec
pop
inc
sub
insb
out
fimull
cmpsl
push
adc
add
add
push
aad
mov
popf
in
sub
add
sbb
jp
push
fucomip
shlb
mov
arpl
fs
ret
cwtl
mov
movsl
mov
inc
mov
pusha
pop
jecxz
sahf
and
mov
push
mov
fbld
push
ret
jle
and
repnz
jb
inc
es
and
dec
jg
push
loope
mov
out
push
int3
jecxz
and
jge
outsl
insl
test
xlat
data16
push
mov
sar
and
jle
sbb
push
ljmp
jns
add
test
sar
fcomp
inc
mov
test
gs
adcl
jo
adc
aaa
jae
and
scas
cmpsl
fwait
ljmp
icebp
hlt
push
jle
fldl
adc
std
mov
enter
outsb
std
cld
sarb
mov
sbb
xor
jno
imul
mov
ret
push
jle
ss
rclb
rcrb
js
dec
lret
xor
jae
mov
test
out
push
sysexit
loop
je
iret
scas
jnp
or
lods
cltd
jo
push
push
sbb
mov
ret
sahf
clc
gs
jg
jae
mov
cmpsb
sbb
cltd
dec
cli
mov
push
fidivl
clc
sub
jle
xor
jge
imulb
push
add
aaa
jle
notl
sub
xchg
lods
ja
pop
sbb
fstl
lahf
cmp
cwtl
in
xor
lret
imul
mov
push
push
mov
xchg
sbb
gs
and
addr16
out
fs
add
pop
add
or
roll
jge
push
es
repz
push
xchg
js
or
pop
out
fnstcw
xchg
ljmp
mov
arpl
in
fnop
sub
ficoml
cs
out
out
out
dec
sub
xchg
dec
popl
repz
cmpsl
imul
jo
mov
out
jae
jge
sahf
add
stos
mov
mov
mov
cmp
data16
frstor
mov
ljmp
dec
imul
xchg
leave
sbb
out
cmpsb
popf
fnsave
cmp
movsb
outsl
xlat
test
push
jp
mov
repnz
iret
ss
dec
scas
dec
push
pop
jo
arpl
jp
xor
outsl
hlt
dec
xor
sbbb
addr16
or
mov
dec
stos
and
loop
adc
mov
out
cmp
insb
fidivrl
pop
stc
mov
dec
mov
lret
fcompl
out
mov
adc
xchg
dec
ret
add
stc
or
test
loope
inc
cmpb
mov
out
or
nop
arpl
or
sub
adc
jle
push
sbb
and
mov
bound
out
and
jmp
adc
shll
add
mov
bound
je
stos
and
xor
sub
lods
fs
add
sub
cmp
fs
imul
mov
jecxz
movsb
sbb
fstps
sbb
loop
pop
or
add
xchg
fdecstp
xchg
push
inc
jno
dec
pushf
dec
frstor
ss
icebp
sub
and
out
data16
jae
das
xor
loop
loope
jg
fwait
dec
push
lods
mov
cmp
lds
dec
and
lret
inc
insb
jae
inc
adc
xor
shll
push
int
jbe
dec
xor
aas
aas
lods
test
cmpsb
mov
push
bnd
lods
inc
dec
jae
mov
sbb
pop
dec
mov
push
push
mov
call
js
sti
sahf
cmp
sbb
mov
mov
mov
dec
cltd
jle
jae
xchg
pop
sub
in
push
out
loopne
inc
jge
add
inc
cmp
or
outsl
jle
xchg
gs
xchg
add
inc
pusha
pop
dec
mov
aas
mov
jge
nop
fstps
sub
add
pop
in
xlat
sub
sub
mov
jb
fs
mov
inc
mov
xchg
jge
sub
lods
stos
js
es
cwtl
sub
add
and
cmpsb
add
lret
push
je
or
sahf
cmp
jle
or
enter
out
xchg
aad
inc
loop
add
mov
mov
cmpsb
dec
enter
inc
sub
mov
test
mov
ja
adcl
xchg
push
push
jl
test
mov
aaa
hlt
ljmp
test
xchg
out
jle
or
fisubs
lcall
mov
and
push
cmp
push
mov
jo
lock
movsl
in
jae
push
sub
pusha
mov
loop
cmp
out
adc
cmp
and
jle
mov
fnsave
mov
xchg
push
inc
rclb
out
outsb
jge
test
inc
int
jb
jge
inc
push
xor
lds
xor
ret
cltd
mov
adc
dec
aas
das
add
inc
push
adc
aam
fidivrs
out
push
jb
mov
xor
sahf
cmp
mov
out
jo
sub
adc
mov
add
adc
xchg
sbb
and
lds
and
mov
sbb
lcall
mov
stos
arpl
test
test
mov
lods
push
xor
js
aam
push
xlat
pushf
scas
nop
out
dec
stos
dec
pop
hlt
and
pop
add
and
lds
cmp
add
push
sub
jbe
fisubrl
cmp
cmovae
add
dec
mov
add
pop
push
fistpl
imulb
jae
insl
dec
es
mov
push
mov
test
lds
inc
mov
add
pop
mov
jp
add
xor
and
leave
mov
enter
mov
dec
and
ret
mov
test
jns
dec
cs
arpl
xor
xchg
sbb
add
lea
int3
fcmovnbe
lahf
cld
adc
arpl
push
das
adc
das
out
andl
inc
mov
ret
mov
sub
fwait
mov
cmpsb
outsb
push
mov
inc
sarl
cmp
xchg
loopne
sti
pusha
int3
cmpsl
fcmovnbe
xor
add
insl
scas
xlat
push
in
xor
inc
and
fdivrs
mov
cmp
jbe
mov
inc
subl
pusha
dec
aaa
mov
iret
pop
loop
jns
fdivrs
lea
push
loop
sbb
sbb
pusha
adc
add
dec
push
je
cmpl
rcr
jo
outsb
xor
or
add
mov
lods
or
push
xor
mov
mov
push
cmpsb
aas
jmp
mov
xchg
adc
rorb
into
push
pushf
inc
jae
push
ljmp
in
bound
or
out
xchg
adc
fcom
cld
xor
test
fcmove
cmpsl
adc
xchg
cltd
movd
sbb
cltd
push
dec
fnsave
arpl
outsl
imul
pop
insl
inc
mov
sbb
mov
xor
fstpt
push
or
mov
fisubs
xchg
pop
test
stos
int3
adc
shrl
imul
rorb
inc
jp
orb
pop
jge
jns
rorl
daa
arpl
scas
loopne
sub
imul
xor
call
jmp
mov
test
and
movsl
loopne
pop
pop
loopne
mov
cltd
int3
pop
std
bound
mov
scas
icebp
stc
mov
out
mov
out
sub
jle
out
pop
fisubrs
enter
xchg
cs
or
in
inc
test
and
test
mov
fs
jae
mov
pusha
xchg
adc
lock
jmp
push
nop
adc
or
sbbl
mov
out
imul
data16
adc
xchg
or
mov
pushf
nop
roll
or
jp
mov
add
scas
jae
lods
fwait
pop
das
xor
pop
cmp
and
ljmp
movsb
jl
enter
inc
pop
dec
push
xchg
insb
js
cli
stos
inc
and
nop
lock
cmp
and
out
fsubp
lods
loopne
mov
sub
add
cmp
push
ret
adc
inc
sbb
pushf
call
ret
inc
jae
cmp
lds
out
xlat
xchg
cmp
je
test
lds
lahf
fisttpl
js
les
and
test
scas
lahf
jg
jnp
jbe
or
jne
mov
insl
rorb
in
adc
pop
dec
out
mov
movsb
jne
fbstp
dec
mov
cmp
adc
jo
sub
mov
jo
xor
xlat
jnp
xor
fmuls
push
repnz
sub
aas
mov
pop
pop
into
jl
xchg
cmpb
mov
lret
or
insl
js
es
sbb
das
adc
js
ret
ficomps
jno
jo
or
jbe
cmpsb
xor
xchg
fisubl
mov
imulb
nop
inc
inc
jle
add
jo
or
test
jo
mov
pop
lcall
push
xor
xchg
repnz
mov
pop
dec
jo
insb
ret
sub
fistl
decl
rcl
hlt
pop
sub
mov
ficoml
sub
test
push
cmp
mov
movsb
push
push
push
xchg
add
jo
add
in
nop
pop
or
jge
sahf
xor
fisubrl
not
jbe
fstl
sarb
dec
xor
cmp
add
cmpsb
bound
xor
cmp
fcoml
dec
xor
mov
int
cmc
add
xor
push
push
jno
cmp
mov
int
pop
andb
je
sbb
hlt
xor
add
cs
aas
jo
pusha
mov
inc
test
out
xacquire
pop
xor
fldenv
out
shlb
gs
add
jae
imul
fstps
cmc
pop
and
push
mov
jle
jle
pushf
in
repz
sbb
inc
outsl
ret
fs
xor
jnp
pop
cmp
test
mov
subb
sti
adc
push
ja
jge
js
jle
cmp
push
out
pop
jmp
pop
fldl
mov
das
push
in
sbb
in
popa
shr
mov
fists
arpl
hlt
mov
push
outsb
cmc
dec
push
inc
shrb
clc
rclb
es
xchg
popa
push
insl
enter
lret
cmp
mov
sbb
gs
jl
sub
test
subb
add
sbb
sub
enter
jp
sbb
inc
or
in
xlat
push
jae
push
jg
mov
addr16
aam
jge
mov
icebp
scas
inc
out
xchg
imul
push
cwtl
push
mov
or
fisubs
push
jnp
or
jecxz
das
inc
sub
xchg
adc
jmp
xor
std
add
xchg
dec
insb
pop
lods
push
test
cli
pusha
loopne
fsubr
jo
cmp
adc
arpl
jmp
test
out
dec
ffreep
clc
mov
dec
cltd
andb
lds
pop
mov
insl
xor
out
add
or
mov
int3
mov
hlt
push
bound
xor
loope
pusha
enter
pop
sbb
xchg
pop
ret
push
stos
pop
movsb
jbe
nop
std
arpl
ret
loop
popa
es
mov
loop
dec
mov
or
scas
push
xchg
aas
cmp
jle
popf
pop
out
jae
pusha
or
cltd
fs
lahf
mov
sub
lret
jp
cmpsl
arpl
nop
dec
cmp
outsb
xor
aaa
lahf
pushf
push
loop
jae
adc
std
movsb
jge
mov
loope
bound
cmp
mov
adc
inc
prefetch
jb
and
fnstcw
stc
or
arpl
add
mov
dec
arpl
push
xor
jno
or
js
add
shrb
enter
aad
or
push
jl
cmp
push
or
or
and
sbb
add
xor
and
daa
push
insb
movsb
gs
xorb
jge
sbb
bt
insb
inc
pop
xchg
push
aas
lret
lcall
xchg
sbbl
in
pusha
jnp
xor
xor
shll
xchg
out
jnp
das
mov
inc
fsubl
fdivrs
out
bound
imul
mov
jle
adc
cltd
pusha
fldl
adc
pop
fs
daa
or
roll
jae
mov
push
out
jmp
mov
push
in
jge
push
push
js
fildl
push
mov
push
adc
cmpsb
arpl
mov
jae
fcoms
dec
add
int
rclb
add
in
out
sbb
shl
arpl
ret
jp
jl
icebp
mov
pop
fldl
inc
xchg
sbb
out
hlt
mov
sbb
sub
out
mov
aas
jae
aas
cmp
mov
pop
leave
rcrb
dec
xor
arpl
dec
outsb
mov
xor
mov
les
push
lea
lahf
mov
jecxz
aas
insb
lock
mov
int3
pop
mov
int3
leave
movsl
adc
mov
pop
adc
loop
pop
mov
inc
dec
loopne
mov
jg
sub
xchg
incb
test
adc
clc
mov
test
pop
mov
jl
xlat
jnp
mov
fsubs
js
jb
loop
xor
push
mov
nop
icebp
lods
leave
test
inc
jne
jg
test
jns
lret
daa
pop
or
pushf
lds
and
push
test
lret
mov
outsb
out
int3
fs
mov
xchg
mov
loopne
aad
sbb
aas
lods
scas
adc
sti
lea
pusha
ss
mov
nop
inc
frstor
das
gs
pop
pop
daa
sub
pop
dec
sbb
pop
sbb
stos
xchg
add
ret
jl
or
xchg
and
fsubrl
bound
add
clc
test
fs
jae
inc
bound
insb
mov
int3
lret
pop
sahf
xchg
std
jae
jns
test
add
arpl
fcomip
loopne
push
je
iret
hlt
lret
out
insb
out
mov
sub
int3
out
scas
mov
push
imul
pop
ret
adc
arpl
cwtl
add
pop
push
fwait
ret
and
mov
fbld
dec
in
lahf
lods
inc
ja
push
pop
add
outsb
add
scas
pop
loope
jns
pop
not
sbb
icebp
and
xchg
movsl
jmp
js
push
ljmp
xchg
imul
jae
inc
and
outsl
fisubs
jnp
int3
push
push
clc
ret
fisubs
and
pop
orb
and
or
mov
cmpsl
inc
jp
xchg
aas
inc
es
sbb
xchg
sbb
imul
aas
shlb
or
jg
call
push
pop
pop
ds
cmp
sub
bswap
jle
js
fidivs
push
mov
xor
mov
in
nop
sbb
jbe
push
pop
rcl
out
and
ljmp
pop
xchg
pop
xor
mov
mov
fwait
adc
cmp
aaa
or
int3
js
mov
out
rcl
inc
mov
pop
jle
in
test
dec
loopne
add
divb
pop
inc
cmpsl
cli
mov
xorl
test
test
dec
clc
dec
push
dec
insb
cmpsb
stos
loop
je
sub
dec
adc
test
das
dec
jae
sub
addr16
rcr
int3
cmp
mov
push
out
xor
push
out
cwtl
add
faddl
outsl
repz
xor
push
aaa
mov
xchg
out
call
pop
jge
adc
enter
aam
jns
lret
dec
out
in
test
addr16
inc
and
icebp
int
fs
mov
pop
rolb
imul
enter
insl
mov
out
dec
mov
and
adc
subb
adcb
jmp
mov
les
xchg
mov
hlt
movsl
insl
mov
bound
pop
lods
jns
leave
adc
dec
frstor
adc
jg
dec
jae
out
mov
arpl
or
pop
mov
in
push
adc
dec
cmpsl
dec
xchg
loop
mov
rorl
testl
insl
add
xor
loopne
insl
das
std
mov
lret
lock
rcr
and
mov
xorl
aad
shrl
dec
test
outsb
idivl
dec
inc
xchg
insb
in
push
push
xor
es
inc
mov
mov
mull
and
cmpsb
adc
sub
adc
dec
rorl
or
mov
jne
fldt
dec
push
cmp
ret
mov
insb
mov
xchg
jnp
dec
or
nop
xor
sub
scas
fsub
popf
daa
mov
stos
out
push
gs
mov
push
mov
and
mov
lock
fst
pop
pop
cmpsb
push
mov
scas
sbb
inc
sbb
xchg
daa
fldenv
lret
sbb
inc
sbb
xor
mov
mov
je
loope
cmpsl
test
mov
mov
mov
addb
mov
pop
xor
pop
rclb
out
into
shrl
jae
pop
adc
clc
add
jmp
or
adc
js
arpl
mov
imul
pop
insl
subb
arpl
lcall
lahf
mov
roll
dec
sbb
inc
aas
mov
xchg
sysret
cmpb
pop
fs
push
scas
push
add
es
mov
mov
mov
cmc
adc
adc
sbb
pop
mov
and
add
pop
pop
cltd
jne
arpl
mov
or
or
or
ja
push
pop
out
sbb
pop
lret
packsswb
and
jae
in
stos
xor
pop
dec
or
mov
daa
add
mov
loop
pusha
or
cld
pop
fs
mov
mov
hlt
mov
mov
mov
pop
in
xor
sahf
or
jp
push
pop
es
enter
pop
xchg
mov
add
fwait
or
push
ljmp
mov
push
cli
cmp
pop
int
push
mov
mov
or
pop
mov
fs
sbb
sbb
scas
sub
jns
mov
and
jl
imul
sti
lea
insb
out
xor
cmp
out
sbb
pop
scas
decb
ret
mov
push
out
or
out
pop
shl
lret
adc
bound
aas
jno
push
or
and
push
pushf
rcll
loop
xchg
enter
mov
fisubl
push
mov
lods
adc
mov
add
xchg
or
into
lock
test
inc
xchg
out
test
push
stc
xchg
mov
in
frstor
push
je
xchg
int3
jle
fildl
mov
mov
ljmpw
scas
push
cwtl
insb
cmp
std
pop
xchg
stos
dec
push
mov
sub
movsb
jmp
aas
mov
push
pop
jno
leave
clc
or
dec
imul
loop
fs
push
dec
push
ret
bound
inc
xchg
fistpll
pop
rorb
stc
xor
std
ja
fs
loope
and
adc
je
mov
mov
add
dec
ret
dec
inc
imul
mov
int
mov
clc
mov
inc
out
and
das
lret
daa
call
xchg
insb
sbb
adc
xor
in
int3
outsl
sbbb
cmpl
add
sub
jbe
pop
push
daa
pushf
sbb
in
and
lds
out
lock
mov
push
sahf
sub
scas
jae,pn
mov
pop
add
dec
or
dec
mov
xchg
inc
arpl
cmpsl
mov
sahf
sbb
cltd
xchg
pop
scas
cmp
cmpsb
fs
int3
push
dec
add
js
test
outsb
xor
push
dec
mov
jb
fidivs
push
xor
sbb
fstl
jmp
pop
push
sbb
push
jl
inc
pop
stos
repnz
sub
arpl
ror
push
or
jge
es
repnz
scas
lea
cmp
hlt
ret
fnstsw
sahf
add
push
pop
mov
in
mov
sub
mov
sub
and
out
nop
in
jle
mov
jg
dec
and
push
std
cltd
jne
addr16
js
adcb
inc
out
movsl
test
jg
std
or
arpl
mov
pushf
mov
sarb
pop
in
mov
and
iret
lret
mov
xor
push
outsl
addr16
push
imul
mov
sti
or
xor
ja
add
mov
or
int3
or
in
mov
pop
cmp
push
shl
jo
test
jo
stc
or
frstor
jb
or
and
sub
xchg
js
sub
xchg
xor
pop
ret
and
shl
dec
das
mov
das
inc
rcl
repz
sbb
out
imul
cmpsb
mov
mov
ljmp
dec
add
jbe
adc
mov
jne
jb
fimuls
push
and
out
dec
ljmp
in
lret
inc
sub
push
push
jb
fimuls
sbb
and
call
jae
dec
test
push
loop
mov
cltd
in
int3
push
int
add
sbb
ja
mov
fcmovu
dec
fildl
adc
push
xor
cmp
imul
rcrb
movsb
insl
lret
shll
pop
out
adc
and
lods
cs
arpl
adc
push
andb
popa
xchg
arpl
sbb
test
or
addb
mov
sbb
decb
mov
sbb
push
and
push
movsb
sti
fstpt
imul
data16
aaa
add
test
idiv
push
dec
pop
dec
rcll
inc
push
rorl
std
popa
add
adc
mov
cmpsl
cmp
lods
lret
jle
arpl
lock
jge
in
mov
mov
inc
and
push
xor
pusha
sbb
jg
cmp
leave
into
xchg
jle
scas
das
push
pop
cmpsl
adc
arpl
mov
cwtl
jg
pusha
jns
jns
addr16
clc
cmpl
enter
mov
testb
mov
sbb
add
inc
je
cmp
loope
pop
fsubrl
or
push
dec
scas
mov
pop
or
lock
loop
adc
add
nop
pop
cmp
addb
cmp
in
mov
pop
adc
dec
jns
fmul
insb
fs
arpl
dec
ljmp
jmp
xor
jbe
adc
jae
push
jnp
data16
sbb
movsl
scas
push
cmp
data16
insb
sub
imul
sub
movsl
cmp
push
inc
jo
push
enter
cli
aam
add
xchg
jge
push
inc
subb
adc
push
in
xchg
je
dec
stos
cs
mov
aad
call
clc
iret
dec
and
ret
mov
mov
jo
or
push
lcall
hlt
jo
xor
jge
jo
push
sbb
iret
jo
fucomp
pusha
lret
jo
pop
jp
scas
push
cld
nop
jo
and
addl
xor
adc
outsl
add
xlat
add
sbb
popf
or
push
xchg
mov
dec
push
lret
xor
pop
in
sub
lahf
sbb
std
push
pop
push
rcrb
mov
hlt
scas
popa
fildl
dec
pop
push
or
loop
or
mov
mov
or
rorl
adc
mov
add
lds
cmc
adc
aam
insl
std
xor
loope
mov
jge
mov
rcr
mov
arpl
stc
xor
mov
jo
lea
divb
bound
js
dec
jmp
test
lret
mov
push
in
and
mov
push
loopne
lock
in
pop
divb
stos
sbb
insl
mov
add
or
test
jmp
xor
stc
mov
call
test
cmp
push
jl
out
adc
sbb
mov
mov
pop
xchg
out
es
mov
mov
push
xchg
push
notb
fcmovbe
arpl
idiv
sub
add
xlat
sub
jg
fwait
out
out
dec
cs
scas
loop
imul
ret
sbb
out
outsl
dec
pop
aam
add
cld
movb
popl
xor
in
or
xor
sbb
mov
shrl
cmp
jle
push
inc
xchg
jnp
jp
sbb
clc
adc
lcall
das
int3
aad
mov
mov
xchg
out
mov
xchg
xlat
pop
add
out
loop
mov
xchg
jns
test
rcll
ucomiss
inc
repnz
push
mov
cmpsl
inc
fildl
cmp
sarl
jbe
int3
aad
loopne
cmpsl
jle
arpl
mov
shrl
cmpsb
loop
fs
dec
ficoms
jnp
fldcw
adc
scas
and
jp
popf
sbb
imul
cmp
es
jmp
jb
push
fbstp
aad
cmpsb
or
push
sub
jecxz
add
mov
aad
pusha
sbb
mov
int
cmp
push
inc
movb
imul
and
sub
scas
out
jae
icebp
faddl
fbld
addr16
xor
mov
or
test
inc
pop
ja
cmp
fdivrl
cmp
divb
out
mov
cltd
jge
mov
xlat
out
aad
xchg
xor
gs
jns
cmpsb
inc
cltd
scas
push
cmpsb
sti
aas
sbb
jbe
arpl
dec
xor
xor
out
ret
sub
pop
xor
bound
in
lret
ljmp
sbbb
clc
cld
call
test
mov
lea
out
subb
jp
int3
fldl
jne
mov
push
cmpsb
ss
sub
jnp
fcmovnbe
shll
cmpsb
push
jl
mov
jns
outsb
arpl
out
aad
push
jne
lret
out
pop
xchg
mov
dec
dec
xor
insb
sahf
inc
or
cmp
lods
jnp
outsl
push
mov
arpl
int
xchg
aad
in
xchg
ljmp
ret
test
jno
data16
inc
dec
push
mov
push
call
xor
sbb
imul
lret
dec
sar
insb
lods
ds
cmp
and
dec
stos
adc
out
mov
outsb
cmp
cmp
adc
pop
pop
jg
leave
insl
ds
mov
sub
and
imul
addl
outsb
hlt
bound
push
mov
js
outsl
stos
mov
add
xor
or
push
mov
test
mov
dec
lock
push
pop
xor
shll
or
xchg
imul
xchg
sub
add
insb
andb
xor
aaa
xchg
int3
mov
push
sarb
test
lock
add
jno
push
lds
cmpsb
cmpsb
sbb
or
xchg
shlb
jo
xor
xorb
out
pop
xchg
outsb
lret
es
push
int3
xor
mov
lea
scas
shrb
lahf
xchg
pop
mov
sbb
xchg
aaa
push
iret
adcb
insb
pop
jae
sub
and
jne
int3
pop
arpl
roll
xchg
call
sbb
in
push
cmp
adc
inc
or
xor
fistpl
sub
dec
jno
int3
sub
push
stos
fldt
ja
cmp
std
push
iret
push
push
je
mov
rcrb
out
out
dec
adc
into
jne
xchg
fdecstp
push
or
xchg
mov
ret
jg
pop
lret
add
pop
sahf
fs
adc
scas
pop
jb
cs
bound
loope
out
jae
out
fs
pusha
imul
add
into
xchg
xlat
adc
add
ss
xor
xor
cmpb
fimull
xor
std
es
jl
jno
push
mov
mov
inc
lods
push
sub
out
add
icebp
pop
insl
mov
mov
imul
movsb
aam
out
scas
out
jmp
and
xor
add
in
or
mov
andb
enter
xchg
push
arpl
out
xchg
xchg
enter
nop
jp
mov
mov
and
movsl
mov
or
dec
xchg
cmpsb
rorb
jno
clc
mov
sub
arpl
mov
or
pop
jns
popa
in
stos
mov
shl
test
roll
lock
cmpsl
pop
cli
lret
push
xchg
lcall
mov
xchg
lock
dec
adc
ja
pop
push
xor
xchg
repz
pusha
fldt
jl
clc
dec
cld
lret
rcrb
cmpsb
repz
inc
lret
mov
scas
mov
inc
imul
sbb
and
cmp
cwtl
mov
jp
xchg
addr16
leave
in
sbb
mov
xchg
test
or
mov
push
mov
ja
rclw
fsubrs
pop
adc
jb
xchg
push
mov
jle
out
mov
fistpll
push
fnsave
add
mov
movsb
pop
xor
adc
jg
out
mov
popf
dec
aas
push
jnp
icebp
mov
sub
push
mov
cmp
push
inc
call
lret
jle
dec
inc
push
xlat
jne
inc
in
cltd
mov
xor
jo
or
jp
push
mov
sbb
xor
adc
push
jnp
xorb
lds
sbb
xlat
add
jo
sub
pushl
xchg
int
movsb
sti
sub
jbe
ret
jne
inc
out
inc
das
dec
stos
xchg
orl
adc
je
mov
daa
fsubrl
decl
jo
or
pop
mov
lcall
mov
js
dec
lods
jle
or
shlb
fmuls
into
loope
mov
repnz
jo
adc
aas
cmp
clc
mov
jo
sbb
mov
jle
fucomi
mov
jo
xchg
add
or
out
daa
iret
cltd
push
lcall
push
movsb
cmc
gs
int
and
cs
push
xor
xor
andb
or
cmc
arpl
jo
out
jns
lods
jle
jbe
daa
push
xlat
fcompl
push
jo
popf
push
add
cmp
sub
in
call
add
pop
push
adc
scas
and
push
mov
mov
jo
cli
jae
lds
jo
data16
shll
or
jg
dec
imulb
mov
test
jo
sbb
xchg
jle
push
out
mov
xchg
mov
mov
or
mov
lods
fidivs
out
sbb
test
pop
sbb
fcomp
hlt
adc
popa
mov
mov
sbb
mov
adc
cmpsl
daa
cli
sub
xor
push
add
enter
add
mov
push
out
sbb
push
rcll
mov
jge
pop
imul
data16
mov
lret
outsb
mov
cmc
jb
mov
jbe
jae
out
fsubl
or
pop
lock
inc
mov
notb
sbb
clc
int
and
mov
shlb
fs
xchg
xchg
aas
fisttps
jp
sbb
ds
xchg
mov
jo
aad
shlb
sarb
mov
adc
test
cmp
sbb
inc
subl
ljmp
or
mov
jne,pt
aaa
andl
inc
sub
mov
in
mov
mov
cmpsb
cwtl
xor
push
sub
cmp
mov
pop
aaa
dec
insl
loope
jns,pn
add
pop
mov
inc
testb
xor
out
jl
pop
push
adc
mov
mov
popf
push
jp
add
cmc
ja
imul
pshufw
arpl
xor
cmp
pop
cmp
mov
push
inc
lock
jl
push
inc
stos
xor
jp
cmp
push
mov
rcrl
sarb
dec
mov
jg
lock
pop
cs
icebp
scas
fwait
xlat
outsb
aam
or
pusha
std
push
pop
jno
call
mov
push
loopne
or
bound
xor
pop
sbb
insb
arpl
mov
call
xor
lcall
retw
add
mov
mov
fcmovu
daa
fs
mov
sub
push
sbb
outsb
pop
or
jmp
fmull
jb
sub
sbb
adc
inc
leave
std
jns
mov
jecxz
lds
or
imulb
push
inc
cli
jl
movsl
mov
pop
xor
pushl
mov
push
out
inc
sub
push
bound
jecxz
inc
cmp
jmp
mov
shl
jecxz
mov
pusha
dec
out
pop
jmp
imul
jns
xchg
push
sbb
jg
pop
scas
loop
jnp
rorl
in
mov
and
iret
ja
pop
mov
lods
cmp
out
push
aas
adc
cld
push
mov
jnp
pop
mov
test
dec
pop
in
dec
push
andb
popa
mov
adc
call
mov
and
ds
pop
push
sbb
jae
shrb
push
sub
pop
insl
rclb
loopne
fs
pop
cmpsl
push
mov
insb
into
mov
pop
sbb
dec
dec
pop
repnz
add
jae
cmp
xor
inc
cmp
push
cmpsl
and
sti
hlt
mov
sbb
dec
popf
sahf
jg
mov
inc
pop
shlb
cmpsl
lcall
int
stos
fidivrl
pop
or
sti
inc
loopne
xor
shr
mov
pop
daa
int3
mov
js
imul
rcrb
popf
out
or
mov
push
and
push
imul
out
push
sbb
mov
fstl
int3
outsb
xchg
movsl
sbb
fisubrs
insl
xchg
inc
cmc
or
stos
insl
mov
into
sub
xchg
es
add
add
inc
mov
inc
imul
lcall
pop
ljmp
push
push
and
arpl
xor
dec
dec
jae
aam
and
ds
jg
negl
ret
in
or
jb
call
mov
mov
xor
dec
sbb
adc
mov
mov
dec
xor
push
inc
lods
mov
fistpl
mov
shrb
adc
jmp
cmp
aaa
inc
inc
ja
ds
scas
xchg
dec
out
lock
sbb
pop
js
cmp
xor
fcoms
in
cmpsl
rclb
xor
jb
lcall
rcl
push
mov
push
mov
add
addr16
jle
add
aam
sub
lods
and
mov
mov
rclb
cltd
ds
lods
mov
pusha
sbb
sub
test
shl
jae
sti
push
data16
int3
mov
push
test
repnz
in
xchg
shrl
sti
aad
jne
mov
insl
pushf
idivb
add
jecxz
dec
stos
sbb
jo
jbe
rorb
adc
notl
xchg
inc
outsb
jge
cld
sbb
and
je
xchg
jp
movsl
lret
pop
out
dec
push
data16
xchg
lret
inc
inc
outsb
sbb
inc
sbb
pop
pop
insl
sbb
sub
adc
jp
xchg
ja
jns
rolb
stos
fs
subb
cltd
shlb
test
mov
scas
out
xchg
lock
bound
enter
adc
adc
lods
icebp
pop
rclb
adc
js
mov
dec
das
and
push
lcall
add
push
xchg
orl
lahf
fs
popf
sub
or
rolb
insb
push
sbb
dec
mov
jbe
gs
jns
popa
stc
clc
lea
sub
sbb
movsb
enter
xchg
push
dec
loop
mov
pop
xchg
inc
daa
out
mov
in
outsb
jle
fsub
fs
jmp
and
add
jo
addr16
divl
and
xlat
lret
aaa
mov
aas
inc
mov
or
inc
arpl
push
test
je
imul
sub
xor
mov
jnp
jg
div
hlt
adc
mov
pushf
das
push
pop
xor
or
xchg
inc
dec
test
cmpsb
cmp
icebp
fistpll
sub
push
pop
pop
inc
push
in
push
xchg
mov
out
stos
lret
add
sub
inc
push
loopne
jns
xor
mov
arpl
cmp
jmp
add
fs
pop
pop
fwait
insb
stos
mov
jo
xchg
fimull
cmc
cmc
jmp
cmp
call
xchg
movsb
jno
shlb
in
ss
fs
sbb
push
sahf
or
mov
and
lret
cwtl
push
insb
repz
fisubs
lds
dec
les
test
das
imulb
stos
arpl
push
ret
sbb
loope
mov
add
xchg
stos
test
lret
mov
dec
xlat
jbe
sub
rclb
mov
inc
mov
mov
adc
or
pop
outsb
bnd
inc
movsl
ja
push
adc
arpl
mov
scas
cltd
jg
mov
or
lock
mov
roll
sarb
in
mov
adc
lock
movsl
mov
push
sub
les
leave
shlb
in
push
jns
cltd
xchg
sub
into
in
outsb
mov
das
ret
dec
imul
stos
aam
call
push
mov
or
test
jmp
mov
jnp
jns
fsubrl
icebp
adc
sub
xchg
std
pusha
sub
push
int3
out
mov
sbb
arpl
outsl
push
adcb
std
mov
jge
push
xchg
mov
inc
test
ret
xlat
insl
push
mov
movsl
and
jno
aam
mov
popf
insb
xor
xchg
outsl
adc
mov
dec
push
outsb
jns
xchg
lret
jae
jb
fldenv
pop
aas
push
ret
lods
pop
out
loop
jbe
mov
sarb
fisubl
ljmp
adcb
inc
push
into
data16
mov
fwait
pusha
push
inc
mov
pusha
inc
lods
ret
int3
out
arpl
xchg
fs
mov
jle
pop
jno
xchg
xchg
cmp
push
inc
inc
push
jge
pop
jle
packsswb
test
sbb
gs
shrb
js
mov
dec
mov
mov
rolb
mov
adc
andb
outsb
jle
out
jae
fiaddl
push
xor
xorl
shll
mov
cmpsl
int3
dec
inc
adc
pop
in
scas
mov
push
imul
pop
adc
jae
lret
jns
mov
push
mov
fcoml
repz
fdivs
in
dec
adcl
dec
mov
mov
je
sub
jmp
stc
inc
movsb
inc
jae
mov
bound
push
stc
lahf
scas
xchg
push
scas
movsl
in
adc
clc
xor
jne
cld
mov
js
lock
mov
shlb
int3
cmp
outsl
push
sbb
int
insb
or
mov
in
xchg
push
xor
cmpsb
hlt
fidivrs
scas
orb
insb
jmp
mov
sarb
inc
or
pop
jb
icebp
mov
test
scas
or
push
mov
ret
and
pop
xor
jmp
arpl
rorl
mov
movsl
jle
arpl
cmpsl
test
sti
movl
push
xchg
shll
push
pop
mov
and
dec
ds
sahf
or
call
outsb
push
pusha
inc
xor
inc
int3
imul
mov
adc
outsl
xlat
out
sub
loope
fstl
sbb
sbbb
xor
dec
sub
jle
inc
imulb
jmp
subb
dec
sub
xor
movsb
mov
dec
mov
mov
lods
sbb
pop
enter
scas
adc
sbb
xor
pop
push
arpl
xchg
add
shlb
lods
mov
sbb
and
jo
lods
cmpsb
push
push
mov
leave
jns
addr16
icebp
jo
decl
in
add
jbe
call
mov
dec
cmp
pop
add
mov
pminsw
sub
insb
jbe
pop
cli
lock
mull
jo
in
pop
lods
pop
cmp
repnz
mov
int
jl
and
mov
gs
notl
adc
cmp
mov
iret
mov
gs
lds
cli
jo
cld
jb
ficoml
xchg
dec
ret
xor
gs
jo
mov
mov
dec
or
sahf
mov
xlat
mov
movsb
jo
push
ret
scas
xor
jp
jo
push
cmp
rorb
out
in
adc
mov
adc
push
pushf
mov
daa
dec
push
xchg
ja
fdivrl
in
or
insl
pop
cmp
cmpsl
jne
test
rcrb
add
jns
data16
mov
sahf
mov
and
jb
insb
pop
fwait
cmp
lret
icebp
mov
add
jns
jo
addr16
pop
repz
clc
arpl
jno
xchg
pusha
jne
in
sub
push
test
imul
inc
mov
mov
cmp
js
or
hlt
pop
jae
fcomps
sbb
xchg
jmp
mov
mov
sahf
in
shlb
pushf
fiaddl
fld1
inc
push
mov
cwtl
ret
enter
inc
gs
add
sub
adc
fistl
cld
clc
lock
push
cld
fs
inc
add
mov
cmp
dec
push
sbb
add
movsl
dec
push
out
dec
or
outsb
js
repnz
or
call
adc
sbb
mov
aaa
imulb
pop
sub
mov
popa
and
insl
pushw
loopne
insl
or
lods
add
jo
jmp
gs
in
nop
test
jo
xor
or
sub
mov
jo
push
sub
iret
imul
or
push
jne
fs
and
inc
jle
stos
fisubrl
idivb
stos
xchg
cmp
mov
lods
loop
jbe
insb
push
mov
dec
ljmp
fstps
push
gs
lods
movsb
or
out
pop
push
arpl
insl
imulb
addr16
out
gs
cmp
inc
push
mov
inc
out
andb
jo
testl
mov
fs
addr16
pop
into
iret
jo
xlat
xchg
ficoml
add
xchg
lods
cmp
mov
xchg
mov
addr16
filds
add
jge
and
movsb
sti
adc
pop
sub
jmp
and
insl
adc
xor
lea
fcoms
jo
mov
mov
adc
cltd
jno
imul
jl
out
loope
ret
mov
push
es
push
fnstsw
out
fs
insl
and
inc
add
push
jge
movsb
in
arpl
cmp
pop
cwtl
stos
js
rcr
shlb
jno
test
sarl
dec
jo
and
and
mov
orb
cmp
jb
sub
lahf
jnp
mov
aad
faddl
leave
and
in
pusha
pop
push
fstpt
mov
push
insb
and
int3
sbb
or
push
daa
inc
arpl
jns
push
mov
push
fxch
outsl
je
pop
lods
jge
jo
jmp
fimull
pop
fistl
addr16
xorb
shl
sub
push
cs
mov
je
negl
cmp
jb
addr16
and
sub
push
mov
inc
xchg
push
testb
adc
xor
mov
sysret
lock
andl
pop
mov
pop
cmp
and
out
outsb
pushf
add
xrelease
int3
or
push
jns
cmp
jo
in
cmp
cltd
aaa
inc
cmp
faddl
adc
ficoms
push
lds
push
xor
js
pshufw
addb
cmc
out
int
and
jo
test
xchg
mov
ficomps
popl
xor
xchg
out
out
inc
push
jo
popf
pop
push
xchg
push
movsb
push
sub
fsubr
xchg
pop
cld
sti
dec
jo
pop
inc
inc
inc
push
gs
jnp
mov
testb
pusha
push
xlat
sub
mov
cmpsb
packssdw
dec
imul
jae
mov
stos
push
aam
mov
int
leave
data16
addr16
inc
stc
ljmp
mov
xlat
jo
fldenv
jp
ret
divb
cmp
adc
xor
add
or
sbb
popa
pop
outsb
xchg
mov
xchg
push
push
dec
and
push
pop
xchg
jp
pop
xchg
jo
mov
outsl
lcall
std
fcmovbe
fists
fstpt
int3
mov
or
cmc
push
orps
xor
or
or
aas
repz
cwtl
ljmp
mov
data16
mov
arpl
out
jb
jbe
jo
shr
or
mov
data16
cs
cmpb
jbe
lret
outsl
fwait
jo
mov
mov
in
adc
or
add
jo
push
mov
inc
repz
cmp
xchg
lods
data16
jae
or
mov
push
enter
mov
pop
and
mov
shll
push
popa
pop
jo
pop
out
loope
fwait
dec
in
or
pop
out
ret
jnp
cmpsb
jo
call
xor
jo
xchg
std
hlt
sbb
adcl
icebp
cmpsb
jae
je
xchg
sti
daa
lods
cmpsl
jp
inc
out
inc
sbb
mov
sub
popa
dec
repz
inc
jo
inc
xor
aad
and
push
std
das
lret
xchg
pop
xchg
jo
xor
dec
sbb
cmp
enter
mov
add
insl
pop
mov
jp
adc
ret
sti
dec
mov
pop
int3
mov
and
xor
mov
mov
ret
mov
std
inc
enter
inc
mov
aas
cmp
fwait
jo
jp
fmulp
setl
mov
sbb
or
lds
lcall
add
cld
pop
mov
data16
push
jo
pop
jo
fwait
dec
mov
imul
push
pop
shrb
lahf
push
jp
pop
mov
ss
out
je
mov
mov
or
xlat
test
inc
jo
jnp
dec
dec
movsb
sbb
hlt
in
jo
mov
cmp
fnsave
notb
cs
dec
fs
jo
add
andb
jg
es
daa
add
test
test
cmp
xor
push
insb
sarl
shl
xchg
sahf
jo
pop
out
sub
jo
into
and
mov
fsubrl
enter
or
hlt
int3
cmpb
ret
lods
jo
ja
xchg
push
sub
cmc
arpl
xlat
aad
jo
mov
aaa
push
dec
pop
and
dec
push
std
xor
mov
sub
jne
cmp
jo
dec
or
sub
mov
dec
xchg
adc
mov
addr16
or
jns
jo
push
adc
inc
jbe
mov
bound
sbb
mov
js
push
sahf
xor
cmovl
mov
push
pusha
jo
lds
das
outsl
add
inc
or
les
and
mov
nop
jmp
push
mov
je
inc
dec
cmpsl
lea
xchg
jo
inc
or
nop
nop
and
data16
jo
shll
ret
out
or
jo
fwait
shl
mov
data16
inc
xchg
or
jo
cmp
add
mov
jmp
out
sbb
dec
push
push
imul
bound
jo
stc
adc
lea
movsbl
cmpsl
xor
unpcklps
in
adc
jae
or
shll
or
add
cmpsl
test
rcrb
in
fsubrl
inc
sbb
fs
lock
push
imul
xchg
jo
mov
shll
loope
sub
sbb
sti
movsbl
inc
mov
sbb
icebp
cld
push
imul
and
loopne
popa
or
pop
or
mov
je
xchg
mov
repnz
xor
sbb
adc
sub
cmp
xchg
jo
insl
push
push
popa
xor
pop
in
cwtl
jmp
scas
xrelease
jns
fadds
inc
mov
ljmp
ja
dec
mov
stos
imul
jo
lods
repnz
sub
mov
nop
and
fmul
lahf
pop
scas
mov
jl
cmc
sub
jae
jo
shll
xor
filds
and
jg
divl
outsl
pushl
and
in
cmpsl
jo
das
fs
outsl
lods
scas
jae
hlt
pusha
cld
sbb
fdivl
sbb
and
xchg
jo
pop
test
jge
jo
ret
icebp
add
jg
mov
push
aas
inc
cmp
test
add
pop
jo
push
mov
ja,pn
pop
sub
push
call
xchg
add
inc
pop
xor
cmp
and
xchg
xlat
into
in
jo
lods
push
bnd
clc
push
movsl
sbb
cwtl
hlt
adc
into
adc
fwait
ds
or
and
push
in
outsb
jo
xchg
loope
jl
dec
out
inc
ss
jo
mov
dec
call
mov
adc
sahf
bound
lret
jo
add
and
jecxz
pop
ja
xor
jae
push
and
cmc
push
leave
addb
fwait
sahf
ljmp
inc
xchg
rol
or
mov
jo
inc
dec
sbb
jo
lods
adcb
adc
jo
xchg
xor
mov
sub
lret
pop
adc
out
mov
cli
sub
dec
or
mov
icebp
movups
inc
in
lret
cmovs
lock
fcoms
push
rclb
jo
push
dec
out
into
xor
cs
dec
js
jno
lahf
xchg
icebp
push
fbstp
clc
daa
xor
jnp
jo
mov
add
or
ficoml
outsl
pusha
hlt
scas
xchg
iret
ret
xor
mov
jns
les
push
pop
fdivl
cmp
push
cmpsl
stc
clc
loopne
std
push
sbb
and
jmp
inc
insb
aad
aam
sahf
fsubs
loope
shll
mov
sub
les
mov
adc
xlat
inc
cmc
or
pop
xor
xsha256
cmpsb
aad
or
and
cmp
mov
faddl
test
fucomp
int3
hlt
insl
das
mov
add
lock
and
pop
cmp
mov
rcrb
xchg
test
pop
adc
mov
jg
shl
std
in
arpl
cmp
les
mov
jne
rorb
pop
fldl
cmpsl
dec
jno
sbb
inc
or
fldt
xchg
add
pop
popa
popf
pop
es
int3
push
sub
cs
inc
jmp
and
in
sbb
and
test
js
cmpsb
test
std
sar
sbb
push
pop
xchg
loope
xchg
dec
lds
fists
adc
xor
cltd
and
pop
jl
jge
loop
clc
jo
adc
pop
mov
mov
jp
inc
adc
les
test
mov
dec
insl
jb
push
sbb
jge
dec
and
jae
fsub
popf
jo
nop
int3
jg
mov
nop
push
ja
inc
sti
js
outsb
push
jns
shll
loop
jo
stc
outsl
or
dec
inc
xorb
popf
fiaddl
jo,pn
aaa
lods
adc
nop
dec
add
jns
mov
call
mov
mov
mov
push
clc
cmp
mov
cltd
mov
mov
push
int
loope
adc
fldenv
mov
repnz
and
xchg
aad
jno
out
or
xchg
lcall
ja
push
testl
cli
insl
push
add
inc
dec
adc
fwait
xchg
je
fimull
mov
dec
xchg
dec
jge
jo
les
lret
push
or
dec
loop
cltd
stos
and
adc
add
jo
movsb
mov
or
xor
jnp
dec
mov
testl
or
xchg
jo
mov
jo
cmp
push
cltd
pusha
sbb
jmp
jo
cmp
dec
pop
mov
ljmp
jg
std
jo
int3
jle
mov
and
movsb
adcb
jo
sub
dec
add
int3
sysexit
xchg
iret
mov
mov
xchg
out
outsb
xchg
aam
es
lock
subb
xor
rcrb
int3
int
mov
ds
mov
or
sti
mov
push
jo
call
push
in
adc
push
lidtl
sti
out
shrl
icebp
stos
mov
jo
mov
lds
cmpsl
ja
rorb
imul
sbb
add
xor
or
mov
fstps
les
mov
jo
shl
pop
lods
add
cmpsb
movsl
jbe
out
adc
push
call
shrb
clc
clc
stc
jno
call
imul
push
addr16
cs
cmc
push
mov
insb
loope
sub
xorb
test
aas
mov
add
aam
ret
js
js
rorb
add
lods
pop
push
push
fcmovb
dec
cmp
cwtl
clc
mov
out
pop
jbe
lcall
mov
fwait
pusha
jo,pt
mov
dec
pop
dec
sbb
push
pop
roll
outsb
add
mov
addl
js
cmpsl
push
mov
fcmovnu
fnstcw
xchg
ja
mov
lcall
jo
push
cld
fs
mov
inc
dec
js
inc
sub
scas
fldt
fisttps
and
gs
mov
in
mov
bnd
aas
mov
clc
loop
jo
test
cli
ret
jne
xlat
push
inc
adc
bound
jle
cmp
xchg
jecxz
jo
fmuls
or
dec
adc
adc
fwait
lret
xor
in
movsl
frstor
int3
movsb
sub
and
out
push
cmpsl
fisubrl
out
xor
insb
xor
shll
into
fmulp
mov
or
stc
jo
cwtl
cltd
frstor
out
clc
xlat
cli
pushf
or
mov
sbb
int
js
mov
aas
insl
inc
pop
outsl
jp
push
out
out
inc
ds
jp
jo
cmp
jecxz
dec
jo
shll
mov
inc
xor
cmpb
inc
fbstp
pusha
sbb
add
icebp
jo
adc
les
lods
shl
mov
push
sahf
add
jo
pop
shlb
sbb
mov
jno
xor
and
mov
add
pop
js
pcmpgtw
add
mov
lock
adc
jo
pushf
test
ja
call
gs
and
mov
xor
jo
sub
push
das
ss
outsl
jmp
mov
jo
ds
in
in
or
xlat
daa
cltd
add
dec
xchg
adc
dec
xchg
push
push
fistps
or
sahf
decl
inc
pop
out
push
jbe
test
mov
pop
outsb
or
mov
aam
lods
jo
or
sbb
xchg
addb
xorb
and
dec
or
mov
mov
cli
add
icebp
mov
jo
in
fimull
adc
bound
xor
xor
pop
fcomi
bound
aad
cwtl
cmpsb
test
jo
shll
mov
les
cmp
pop
xor
push
push
pop
scas
xchg
mov
int3
repz
nop
lock
cs
mov
sub
xchg
jbe
or
leavew
and
lea
add
mov
jmp
in
push
inc
js
or
pop
outsb
inc
push
and
nop
mov
sub
dec
and
jo
repnz
mov
shrb
jo
pop
dec
sbb
pop
and
sbb
mov
mov
psraw
mov
jo
cltd
in
jbe
push
push
jo
xchg
adc
push
and
cmpsb
jg
jae
xor
sbb
push
dec
jmp
je
paddb
jo
or
jecxz
fisubrl
cli
push
imul
dec
jp
loope
movaps
rclb
mov
dec
js
mov
dec
in
jg
rorl
mov
push
out
in
mov
cmpsb
lahf
inc
fnstenv
nop
mov
mov
sarb
cmpsl
fdivrl
adc
jo
adc
mov
mov
or
and
repz
fidivrs
dec
inc
cld
jo
or
ja
sub
loope
add
insb
aas
sbb
or
push
in
sbb
jo
cli
mov
cmp
jo
in
sub
cs
jnp,pt
jl
mov
adc
adc
or
push
push
int3
out
push
fdivrl
das
add
sub
ss
push
xor
xlat
add
lds
jo
jmp
xorl
fisubrs
push
adc
jo
lret
rcl
add
pusha
int3
dec
and
jbe
cs
loope
sbb
bound
sti
movsb
cmp
lock
incb
aas
mov
mov
xor
into
or
inc
out
mov
cmp
cltd
popa
fisttpl
jo
cwtl
aam
or
xchg
adc
mov
or
jo
dec
adc
pop
push
ret
in
jnp
mov
fcoms
jo
cmpsl
dec
cld
in
rcll
jo
jle
adc
in
mov
outsb
sbb
dec
push
jns
mov
or
ljmp
std
push
jmp
in
sbb
or
add
loope
jo
aad
cmp
sbb
insl
mov
out
pusha
dec
push
adc
jb
jns
jo
cmp
adc
popa
fcomip
jo
sbb
clc
maxps
and
xchg
jo
iret
incb
in
insl
pop
jo
outsb
inc
jbe
sbb
sub
lret
jo
jp
cmpsb
mov
mov
xorb
adc
push
shrl
jo
xchg
out
rcrl
in
pop
in
xor
jo
inc
iret
and
sbb
adc
loope
in
or
gs
add
xchg
pop
xor
mov
jo
out
push
jnp
out
push
jo
sbb
xchg
test
paddq
push
int
jle
lds
jo
cmp
xorl
test
orl
ds
sub
jp
pop
xchg
nop
loop
aaa
add
jo
int3
add
sub
push
mov
add
js
xor
mov
push
xchg
enter
lods
stos
or
jbe
orb
in
push
jo
fsubrl
movsb
add
out
sub
aas
pusha
push
dec
push
jmp
aaa
sbb
daa
jo
and
xor
or
or
jo
outsl
fstl
push
lds
mov
iret
jp
movsb
fldenv
fisubrl
icebp
into
and
pop
loop
dec
inc
inc
imul
xchg
and
mov
adcb
iret
jo
imul
mov
mov
orl
xchg
or
cld
rep
cwtl
cmp
ds
jo
mov
dec
jo,pn
sahf
xchg
loope
lret
enter
in
push
jae
cmp
lahf
test
cmpb
mov
cmpb
into
fstpt
movsb
push
cmp
adc
ss
pushl
xchg
roll
cli
mov
cmpsl
repnz
pop
jo
cmp
stos
jne
mov
mov
loope
loop
leave
out
dec
sub
out
push
jno
inc
sti
fwait
xchg
inc
aaa
adc
jb
in
arpl
or
inc
and
dec
repnz
mov
cs
add
jo
cmc
out
popf
push
addl
mov
jo
xlat
test
je
hlt
stc
mov
mov
dec
out
mov
or
push
lret
and
sbb
gs
dec
mov
lods
fs
mov
mov
push
add
sti
mov
int
nop
das
out
loopne
sahf
sbb
test
dec
jo
and
jle
pop
pop
ja
dec
sub
mov
push
cmp
xor
push
push
or
and
pop
jo
push
jp
testl
pop
data16
dec
movsl
xorb
mov
std
lret
push
leave
scas
into
hlt
outsl
add
test
jae
dec
std
fistpll
xor
jle
xor
out
cmp
sbb
cmp
pop
and
xchg
fs
jno
jo
push
mov
out
rcrl
aam
push
mov
iret
loop
in
pop
add
cli
arpl
add
scas
out
stos
push
fstpt
incl
outsb
cmpps
lss
fnstenv
mov
sbb
aas
dec
jo
pusha
call
stc
jo
jge
mov
jne
es
rcll
fsubr
frstor
jo
xor
xor
push
adc
repz
iret
jo
xchg
or
addb
or
loope
test
ret
or
pusha
push
adc
add
orb
jo
mov
ret
pop
dec
addl
jge
pop
sarb
js
mov
push
loopne
in
push
test
or
neg
jmp
and
in
sbb
lret
int
nop
jo
test
mov
inc
cli
sub
popa
dec
pop
outsl
pusha
lret
adc
in
xchg
sbb
xlat
jae
push
xor
push
repz
cmp
es
into
mov
xor
decb
adc
jae
or
rcrb
sub
outsb
orl
push
inc
into
push
dec
pop
leave
adc
shll
inc
cmp
out
in
inc
xor
push
jge
ror
xchg
and
mov
stos
mov
inc
pop
cmp
xchg
jae
stc
sbb
inc
adc
stc
xor
pusha
adc
fisttps
fnstenv
aaa
cs
push
cmp
std
xor
add
push
xchg
and
mov
jle
aaa
cmpsb
jmp
ret
mov
cmp
mov
jns
and
int3
push
fidivs
fidivs
add
cmpsb
mov
int3
xchg
js
pop
inc
mov
add
es
outsb
gs
dec
insb
sbb
pop
out
ficoml
jmpw
sub
scas
jb
cmpl
inc
mov
adc
fwait
jg
mov
bound
sub
lret
loope
lret
and
inc
rcll
cmp
push
fimull
xor
aas
and
aam
jl
std
or
mov
movsl
adcb
and
divl
leave
mov
cmpsl
inc
xchg
ja
push
imul
int3
lock
mov
movsl
add
fucom
inc
fwait
and
sbb
daa
sub
dec
insl
mov
xchg
add
xchg
clc
pop
pop
cmpsl
nop
jns
scas
and
pop
and
es
stc
roll
lock
mov
push
pop
icebp
cmp
fcomip
inc
outsl
ficoms
jo
cmp
xchg
lahf
mov
jne
int3
data16
fwait
int3
ror
in
arpl
jge
ret
lock
adc
lods
jne
mov
test
sbb
addr16
inc
jmp
mov
cmp
push
adc
jnp
jl
mov
sbb
arpl
gs
xor
xor
mov
adc
repnz
ds
fwait
dec
adc
test
xchg
pusha
outsl
fs
ja
sub
pop
xlat
push
jb
in
push
outsl
or
xlat
jno
pop
dec
xor
int3
shll
sbb
in
dec
push
mov
add
les
loopne
jle
jae
inc
lcall
mov
aam
enter
sbb
xor
imul
and
clc
dec
push
sbb
add
push
cmp
cmpsl
fcomps
repz
std
lds
push
fldl
in
jmp
mov
js
out
pop
addr16
clc
add
fimuls
sti
add
lea
sub
jae
icebp
in
cmp
scas
fistpll
pop
jmp
pop
dec
loopne
push
rclb
aas
mov
mov
xchg
out
dec
out
mov
aas
inc
jp
nop
dec
notb
push
jae
xor
mov
add
jae
mov
xor
cmp
je
jnp
out
pop
in
lret
in
adc
add
mov
std
xchg
stos
add
sbb
cli
pop
push
lahf
fcomps
jmp
insl
andl
lock
vpunpckldq
sarb
aaa
pop
sbb
pop
push
xchg
iret
aad
dec
insl
outsl
fsub
xchg
cli
sub
sbb
mov
push
test
or
mov
out
jns
icebp
std
addr16
mov
sbb
mov
shlb
mov
ds
out
mov
sbb
cld
shrl
adc
packsswb
aaa
inc
sahf
and
inc
fsubr
pop
xorl
jmp
add
je
stos
mov
pop
push
add
sbb
notb
and
mov
add
popf
fiaddl
cmp
fiadds
jb
fists
push
sti
cmp
arpl
sbb
xorl
sbb
and
or
jge
scas
pop
loop
jae
pop
repz
vhaddps
jg
push
cmp
fcoms
scas
sbb
std
push
dec
daa
fs
sub
sbb
and
pop
inc
testl
cmpb
sbb
aad
jno
in
inc
andl
lods
stc
divb
rol
dec
push
imull
push
test
ja
shll
mov
pushl
loope
arpl
daa
test
mov
rcll
in
xchg
jo
js
mov
cmp
push
jo
addb
scas
bnd
loope
add
dec
arpl
jo
mov
cld
sub
shll
inc
in
push
jge
xchg
imul
sahf
ja
pop
fdiv
xchg
outsl
mov
mov
adc
insb
or
adc
pop
sbb
in
data16
push
je
hlt
shll
mov
and
jbe
les
mov
jp
cmpsb
add
sbb
shll
leave
stos
sbb
fwait
aad
outsl
nop
adc
mov
ja
pop
jns
repnz
and
addr16
cmp
dec
outsb
mov
lcall
mov
push
pop
sub
lods
ret
jo
nop
pop
lock
jae
mov
cmpsl
and
and
nop
stc
int
or
sbb
rorb
das
inc
hlt
int
data16
cmp
or
into
mov
pop
cmp
cmc
jo
es
xchg
pop
adc
nop
arpl
cwtl
xor
push
movsb
jo
loop
loopne
jl
aaa
inc
inc
xchg
hlt
push
into
dec
jbe
shlb
xor
fidivl
jecxz
decb
jo
daa
sbb
sbb
jo
sahf
and
subb
push
sub
mov
hlt
cmp
jo
out
inc
mov
jno
out
in
mov
jo
or
aaa
cmpsl
mov
pushf
or
jo
lret
jle
jl
mov
sub
mov
in
ja
sbb
jo
mov
sub
out
aad
fstpt
lock
mov
addb
vpcmpeqd
mov
mov
jo
cmp
xchg
repnz
dec
hlt
jo
lods
mov
jo
test
dec
xor
stos
in
cmpb
push
xlat
jo
roll
lds
mov
cmp
cltd
test
adc
add
std
movsl
repnz
xchg
dec
nop
lahf
pusha
in
test
inc
pop
pop
cwtl
insb
add
cltd
fimuls
je
or
xchg
jmp
jo
sub
shrb
jo
push
push
stos
ficomps
lahf
mov
mov
sbb
push
insb
push
ds
add
enter
outsl
lea
adcb
mov
test
xor
loopne
mov
ret
mov
jo
iretw
sbb
add
jo
shl
popf
push
inc
pop
test
scas
xchg
and
xchg
push
lods
jae
fiaddl
push
xor
or
jo
sub
imul
inc
sub
push
gs
mov
out
add
cmp
ret
divl
xchg
sbb
dec
xchg
sbb
addb
pop
push
repz
in
cmp
jo
mov
cmpsl
sbb
push
jo
bound
es
jno
daa
repnz
shrb
jne
jo
pop
inc
fwait
jnp
notb
push
bnd
stos
mov
push
adc
aas
negb
mov
cmc
fs
jo
and
sub
ficoms
jo
xchg
add
cmpsb
inc
xor
adcb
data16
cld
lock
rcr
cmpsb
push
adc
add
and
jmp
jle
popf
add
jb
push
pusha
xadd
xchg
arpl
add
loop
aas
inc
clts
push
dec
mov
jmp
cmpsb
repnz
xchg
cmp
aad
xchg
push
out
xor
jo
repnz
sub
call
cmp
divb
mov
jo
mov
sbb
or
cs
scas
cmpsb
inc
mov
aam
jge
imul
dec
and
push
pop
push
mov
int
sarb
push
inc
jae
pop
push
in
xchg
lock
mov
lods
out
xchg
and
les
jle
rol
xchg
loopne
mov
fisttpl
add
movsb
mov
ss
mov
int
or
adc
js
movsl
jo
je
fwait
jl
popf
sbb
leave
dec
and
sbb
cmpxchg
jbe
sub
sub
add
add
test
lock
push
pushf
sbbb
and
sahf
rcrl
xchg
jo
rolb
mov
adc
scas
inc
fsubrl
nop
xchg
push
mov
cmp
jae
scas
mov
jo
decb
jno
les
ret
dec
test
pop
pushf
push
jo
icebp
sub
int3
fistl
sarl
dec
push
rol
inc
mov
adc
ljmp
jae
repz
adc
lret
nop
lock
jl
pop
jp
xchg
int
cmc
and
and
jmp
push
push
popf
jo
je
lods
add
arpl
pop
push
loopne
dec
pop
jo
push
hlt
cmc
or
stc
in
repz
lods
lock
pop
xchg
nop
push
mov
adc
jo
adc
lcall
inc
inc
and
xor
xor
add
loop
lds
insb
xor
shll
shll
inc
xchg
add
or
pop
cmp
xor
dec
jo
mov
mov
sub
lods
jb
inc
xor
jo
lret
outsl
incb
jae
dec
mov
sub
daa
test
cmp
outsl
dec
inc
sbb
shlb
inc
jo
fcmovu
mov
loop
and
pop
lahf
lcall
dec
dec
rorb
sub
mov
xor
jb
setle
jle
adc
inc
stos
jo
sub
xor
out
cmpsb
dec
lods
je
push
std
jo
cmp
movsl
mov
mov
loop
jo
xchg
movups
xchg
jo
stos
out
sub
sbbl
xor
jo
inc
lret
es
dec
jo
and
pop
jae
add
add
fiadds
icebp
or
int
or
and
in
jo,pt
push
push
aaa
pop
pop
mov
jae
call
loop
mov
repz
push
mov
xor
sub
jns
jo
push
fbstp
shrb
jns
psubsw
fidivs
pop
xor
gs
int
ja
push
jp
jo
out
sub
xchg
inc
mov
es
and
or
pusha
test
sub
add
js
jle
into
xchg
jl
out
insl
scas
daa
push
cmp
or
jb
mov
fwait
sbb
mulb
jo
outsl
cmp
aam
mov
int
or
add
fisubl
pop
jo
imul
jo
pop
stos
xchg
and
gs
jo
jno
jmp
shll
push
inc
mov
aaa
je
or
int
das
fisttpll
jns
mov
loop
mov
jp
xchg
add
or
xor
inc
jo
mov
test
xchg
xlat
test
jo
int3
dec
loope
cmc
pop
push
jo
nop
addl
leave
mov
sarl
xor
adc
mov
scas
mov
out
cmp
push
in
test
pop
sub
lret
cmpsl
adc
and
movsb
jae
mov
push
sub
pop
sbb
mov
jo
and
mov
jne
and
shlb
in
aaa
push
jl
scas
fcomi
outsb
jo
xor
pop
cmpsb
stos
sub
jo
mov
push
in
or
imul
pusha
pop
or
loop
clc
das
repz
in
cmp
xor
rorb
stos
loopne
xchg
test
mov
pop
fdivl
imul
push
fistps
out
add
mov
in
aas
jne
out
mov
nop
lods
push
adc
dec
push
mov
popf
js
push
cmp
shl
lcall
cmp
cltd
mov
jae
inc
pop
fs
xchg
pop
jge
jbe
out
scas
mov
or
sbbl
mov
sub
jb
addb
int
push
lret
jo
mov
nop
cli
ds
adc
fisubs
out
aas
push
jnp
icebp
mov
mov
or
or
nop
aam
jmp
and
and
data16
testb
nop
inc
inc
xor
data16
test
cli
ss
dec
pop
ds
jne
leave
push
jo
ret
movl
pop
comiss
sbb
clc
rcrb
fwait
jo
ret
push
dec
jo
arpl
cli
mov
push
lods
pextrw
xchg
das
jo
mov
jecxz
insl
jle
mov
insb
mov
pop
cmovle
outsl
fidivrs
iret
mov
push
or
dec
or
add
sbb
out
pop
cmpsl
hlt
lock
ljmp
push
fistpll
repnz
mov
xor
aaa
rorl
fnstcw
data16
fstp
lock
or
jns
sbb
jae
fcomp
inc
aaa
iret
outsl
fs
jne
pop
xchg
and
aad
repz
das
jne
insb
in
mov
add
roll
cmp
pusha
lahf
sbb
fs
sahf
push
mov
push
sub
mov
loope
hlt
jno
jns
jmp
std
push
xchg
xorb
pushf
test
jae
push
jae
lock
or
movsb
js
lock
in
out
sbb
push
call
lret
aas
mov
adc
jbe
shrb
int
add
fisubrl
test
mov
cmpsb
xor
cld
arpl
mov
jl
arpl
jae
dec
fadds
sbb
ljmp
push
mov
and
mov
dec
out
cmc
mov
popl
fsubs
adc
data16
iret
test
cmp
sub
cmc
add
push
mov
out
mov
mov
sub
insl
subb
xchg
es
xor
repnz
pop
cltd
pop
adc
shrb
mov
std
cltd
xlat
negl
sbb
clc
mov
jns
or
xor
in
dec
outsb
and
mov
jb
and
int
daa
sbb
aad
mov
jg
add
das
jo
arpl
cmp
sahf
sbb
push
test
add
mov
arpl
jae
shll
pop
in
dec
test
jl
jle
sahf
cwtl
in
push
jb
js
or
repnz
add
sbb
mov
imul
mov
pop
inc
jecxz
arpl
stc
lcall
scas
lock
dec
jae
hlt
adc
push
adc
sub
and
stos
fistl
dec
cli
mov
mov
addr16
fucom
add
cmp
push
xor
sub
aas
xor
test
add
mov
fsubl
sub
nop
mov
loopne
dec
notl
bound
cmpsl
ja
testl
out
lret
cld
add
pop
ret
data16
push
push
cltd
mov
xor
mov
jno
popa
sbb
cwtl
mov
fstl
cmpsl
ljmp
mov
arpl
sub
add
out
pop
outsb
cmp
icebp
dec
mov
and
loop
xor
dec
inc
cltd
fidivl
in
jge
lret
movsl
popa
imul
imul
std
xchg
jmp
sarl
arpl
add
jl
and
rcr
mov
mov
jns,pn
aam
mov
ror
ljmp
inc
mov
mov
sbb
and
rcrb
add
cwtl
jae
xchg
mov
pushf
pop
push
rorb
sub
mov
xor
push
arpl
int3
sti
mov
pop
shrb
jnp
loopne
inc
pusha
dec
mov
push
nop
fs
add
sar
push
loope
and
pop
xorb
shlb
xchg
jae
in
or
push
fimuls
pop
pop
and
push
and
js
arpl
popa
mov
or
pop
mov
cld
or
fcompl
add
imul
and
xor
cwtl
inc
mov
sub
inc
scas
scas
dec
inc
xchg
cmp
fwait
push
push
jl
das
or
lods
xchg
rcrl
ficoms
pushl
outsl
inc
mov
lock
std
rorb
int
push
sbb
shlb
adc
imul
out
mulb
enter
jo
fdivp
dec
mov
mov
push
and
sbb
pushf
jbe
push
jbe
sbb
sbb
pushf
lods
push
push
in
loopne
addr16
mov
push
jle
call
sub
jnp
jmp
sbb
popf
lret
mul
and
jae
adc
arpl
push
cmpsl
xlat
test
dec
in
inc
fmuls
arpl
cmp
jle
movl
mov
jns
jnp
cmp
jge
add
repz
xor
je
sti
xor
inc
adc
mov
in
push
inc
hlt
pushf
loope
pop
test
fisttpl
push
push
mov
clc
ret
jno
test
outsl
inc
daa
jnp
dec
adcb
jnp
aam
xor
push
repnz
jbe
jmp
test
pop
pop
ret
add
insb
push
lds
push
out
cmpsb
out
cmp
xchg
adc
xchg
arpl
dec
pop
fmul
adc
mov
dec
jg
sahf
lods
test
lods
xchg
jmp
push
int3
nop
push
outsb
addl
sbb
cmp
fstpl
mov
push
in
mov
cmpb
cs
lods
adc
pushf
or
xchg
pushf
cs
in
cmp
lret
nop
fdivrp
jns
cltd
addr16
and
insb
jg
jb
shlb
into
add
mov
pop
imul
aad
std
movb
jae
mov
pop
loop
mov
pop
inc
pop
xlat
lret
lods
es
jmp
scas
rclb
jle
out
push
push
lahf
sbb
mov
aad
mov
sbb
call
xchg
inc
adc
mov
arpl
push
ret
or
add
mov
movsb
lds
push
push
jb
arpl
xchg
push
fsubrs
jecxz
mov
cmp
in
add
mov
add
sbb
or
mov
xchg
inc
cld
jae
xor
sub
andb
sbb
enter
or
or
bnd
lds
lea
jle
mov
lret
lods
dec
inc
jae
and
addr16
xor
filds
stos
mov
enter
mov
jae
lahf
lcall
and
mov
jle
daa
push
inc
sbb
inc
or
in
andb
fbstp
out
dec
xor
daa
mov
arpl
cmp
mov
push
sub
pushf
add
lret
rclb
jp
fs
pusha
adc
out
sub
adc
push
popa
outsl
stc
push
bswap
xor
fbstp
fwait
addb
xchg
mov
icebp
lock
cmpl
xchg
mov
jp
mov
jo
sub
sbb
xchg
jbe
lret
fs
inc
inc
jae
punpckhbw
idiv
bound
outsb
addr16
or
adc
or
shlb
jo
out
or
lcall
sub
stos
repz
out
and
or
mov
iret
or
les
push
shll
push
mov
outsl
je
or
iret
divb
push
fbstp
bound
movsb
dec
out
adc
inc
xchg
mov
mov
test
or
jo
aaa
rorl
jo
in
je
insb
jno
cs
es
sbbb
ret
push
cmp
jae
out
filds
scas
mov
adc
lea
sub
inc
or
aam
bound
mov
outsl
subb
cmpsb
push
sub
pushf
and
sbb
push
push
mov
push
lret
mov
inc
seta
ja
dec
outsb
xor
mov
sbb
sub
push
cmp
adc
test
adc
sbb
rcrl
daa
cmp
dec
inc
sbb
pop
paddusb
fildll
adcb
mov
inc
mov
int
push
sbbl
sbb
jo
movsb
nop
out
inc
popa
fdivs
lods
adc
cmp
in
subl
jo
repz
leave
mov
jo
push
mov
mov
mov
push
nop
aas
push
repnz
insb
fimull
jo
sub
sub
dec
sbb
mov
mov
lods
push
nop
jne
mov
push
outsl
dec
mov
imul
cli
ljmp
jle
sbb
pop
sbb
xor
mov
jne
je
cmp
mov
sub
jl
and
stos
adc
cwtl
jo
lahf
xor
jo
xchg
cmp
aaa
pop
push
sbb
jo
leave
sbbb
fs
xorb
jnp
shrl
pushf
mov
loop
roll
ret
inc
mov
in
divb
loopne
inc
shrl
mov
jge
jmp
add
test
xchg
xor
lea
stos
jo
movsl
fs
adc
jo
pop
pop
dec
inc
jecxz
outsb
sub
in
mov
push
cs
mov
push
add
mov
ret
jo
lds
add
call
or
jl
or
mov
out
je
lcall
cmpsb
jae
xchg
jo
outsb
repnz
adc
jo
jno
jb
mov
xor
push
sbb
insb
jge
das
scas
sub
jae
push
cmp
nop
or
int
push
pushf
xchg
sub
lds
xorl
sahf
dec
pushl
mov
and
stc
sarl
add
mov
push
mov
popf
inc
jo
mov
andl
int
fisubrl
jnp
mov
pop
and
jo
push
dec
inc
fists
xchg
loop
popa
xchg
push
push
rcrl
mov
xor
inc
jb
cli
hlt
mov
add
sbbb
push
xlat
mov
jo
and
mov
lret
push
mov
pop
jb
mov
inc
testl
push
es
push
pop
dec
push
pusha
insb
or
jo
icebp
ss
sbb
xchg
jo
rcrl
adc
jno
inc
out
and
into
sub
rcrl
jp
or
roll
test
ljmp
test
je
shlb
test
dec
xchg
pop
push
mov
and
jo
sar
pop
out
sub
es
cmpsl
mov
jo
add
enter
loopne
sub
cli
jae
or
add
fstpt
out
jo
push
bound
andl
popa
jb
fidivl
rclb
sbb
mov
lcall
jle
inc
push
cmp
pop
adc
mov
inc
lods
dec
cmp
xlat
call
aas
sbb
imul
repz
mov
cmpsb
mov
push
xchg
shl
in
sbb
js
scas
xor
cmp
jo
pop
notl
adc
inc
sar
pop
fstps
seto
mov
enter
test
mov
jno
push
test
in
or
fldl
cld
xchg
jae
jo
pop
dec
shll
pmulhuw
divl
cmp
or
in
nop
push
or
adc
mov
push
ljmp
xchg
inc
imul
xor
cli
adc
jns
mov
push
icebp
push
setg
cmp
fidivs
mov
mov
jb
aam
cmpsb
sbb
push
arpl
mov
sbbb
movsb
leavew
ret
cmp
arpl
jo
bound
pusha
imul
sti
cld
fidivl
add
int
repnz
or
js
cmpb
push
xchg
push
hlt
addr16
jnp
jge
and
jo
dec
out
cmp
lahf
xor
or
rcrl
cmp
push
and
xchg
cltd
jne
lea
movlps
push
jo
insl
int
add
arpl
mov
push
icebp
out
imulb
jo
jge
mov
lods
adc
jmp
jo
shr
jbe
push
jo
add
pop
std
aam
push
xchg
addb
adc
loopne
fsubs
data16
pop
push
jo
mov
jae
push
xchg
dec
jo
sub
pop
or
loope
mov
push
pop
repnz
dec
ret
jg
iret
and
mov
repnz
mov
loopne
pop
push
cltd
aad
clc
cmc
test
push
jl
jp
pop
inc
push
negl
negl
dec
movsl
ret
or
cs
push
enter
jl
xlat
test
pshufw
inc
xor
rolb
mov
scas
add
inc
stc
lock
je
mov
sbb
dec
pop
ss
pop
daa
xchg
int
xchg
push
mov
cmpsl
push
pop
mov
sahf
es
sbb
inc
or
jge
jo
add
mov
mulps
jo
pusha
xchg
imul
or
subb
les
dec
push
je
mov
data16
xor
mov
jo
cmp
sub
lret
sbb
popf
ds
lret
mov
ret
lock
pop
cmp
pop
jo
ret
sti
and
test
mov
inc
sub
dec
push
stc
mov
xor
xor
ds
lea
repz
cmp
or
adc
jp
ret
lock
sub
mov
add
ja
adc
push
jns
dec
jo
push
xor
fcomp
rolb
sub
inc
cmpsb
jb
insb
push
pop
jo
scas
jns
dec
xchg
lods
jo
add
outsb
jle
imul
and
mov
icebp
hlt
in
push
push
out
cltd
pop
adc
outsl
xchg
repnz
lret
adc
mov
mov
mov
aad
out
out
fistpl
fincstp
inc
jo
add
arpl
cmp
push
pop
fnstenv
test
jo
dec
cmp
push
in
lcall
xchg
fcoml
nop
add
movsb
cltd
and
sub
jo
addr16
stos
fisttpll
push
ret
jmp
sub
hlt
xor
ret
mov
das
dec
insb
cmp
lcall
sbb
hlt
imul
movsb
int
push
cmc
adc
andl
loopne
jns
cmp
lods
adc
inc
pop
pop
sbb
mov
push
or
adcl
adc
jge
sub
jo
test
stos
jo
mov
dec
sub
push
scas
in
insl
sbb
and
jo
stos
push
pop
mov
orl
test
jle
cmp
mov
mov
mov
lods
xor
sbb
adc
jmp
mov
push
decb
push
icebp
push
sub
mov
mov
mov
push
inc
cld
dec
xchg
dec
push
insl
xchg
fidivl
fs
addl
mov
setg
lret
fimull
pop
jne
mov
enter
daa
adc
nop
inc
inc
sub
mov
das
out
out
je
cmp
fmull
jae
jecxz
xor
add
int3
cli
cwtl
lds
push
jae
out
add
pop
pusha
lret
lods
push
out
repnz
jae
mov
lock
cmp
cmp
out
mov
mov
jnp
mov
shlb
jno
lahf
outsb
xchg
pop
pop
jg
mov
loopne,pt
cmpsb
in
cli
fldcw
push
add
jae
xor
add
or
mov
mov
arpl
scas
out
inc
dec
mov
test
addl
fwait
push
xor
lock
inc
and
jno
jge
test
mov
push
jge
rol
pop
iret
notb
inc
js
mov
adcb
xor
jg
aaa
mov
xchg
jo
je
jmp
fs
fisttpll
xchg
cmp
inc
or
mov
je
jns
nop
jl
arpl
leave
mov
xchg
or
andl
xor
mov
lahf
out
out
xor
cmpl
jae
inc
sub
ljmp
cmpsl
or
or
adc
clc
jae
enter
loop
flds
mov
mov
mov
mov
push
sahf
fldenv
xor
loopne
cmp
insb
loop
loop
add
mov
out
les
and
pop
mov
pushl
clc
in
punpckhdq
imul
push
jb
movb
dec
sbb
mov
jp
pop
jecxz
fmuls
pop
adc
xchg
nop
jle
mov
data16
inc
push
pop
repnz
mov
push
mov
insl
pop
mov
xchg
add
mov
push
in
xor
mov
adc
mov
out
sub
mov
shrl
dec
adc
mov
cmpsl
out
inc
mov
or
outsl
or
std
push
mov
lods
loopne
inc
jnp
int3
in
push
and
mov
roll
outsl
or
imul
fldenv
ficoml
jo
popf
push
movsb
popa
fisubs
icebp
mov
std
cltd
mov
packsswb
insl
das
cmp
mov
pop
pushl
pop
xor
mov
sub
cmp
movb
scas
adc
sbb
cmpsl
mov
pop
ret
cmpsb
xor
gs
push
insb
jo
fnstsw
cmpsl
fnstsw
test
fstps
imul
fwait
jg
cmp
sub
push
xor
add
jno
lock
cmc
stos
pusha
pop
jmp
test
adc
jp
out
mov
scas
sbb
int3
test
stos
dec
pop
push
add
inc
cltd
icebp
addb
cli
add
arpl
jns
push
push
dec
fdivrl
xor
imul
xchg
jmp
jae
jno
rolb
xchg
and
mov
push
jae
and
repnz
mov
lock
decb
mov
push
push
xor
jl
daa
sahf
mov
jns
adc
mov
push
rdmsr
inc
sub
movb
ja
pushf
negb
insl
jae
mov
addb
shrl
fwait
sub
fcmovu
shrb
and
out
out
dec
or
xor
fs
sub
cmpsb
repz
fistpll
jbe
dec
push
pop
inc
xchg
mov
jns
push
cmp
sbb
flds
test
pop
aaa
pop
aas
shlb
mov
outsb
jg
jb
mov
aas
mov
repz
idivl
pusha
jo
mov
loop
pop
stos
or
outsl
inc
arpl
or
aas
jo
enter
push
pushf
jo
punpcklbw
pop
mov
push
out
jo
xchg
cmp
les
stos
add
das
adc
jo
cmc
sub
jo
mov
inc
sbb
xor
in
imul
stos
repz
mov
lds
jne
arpl
jo
roll
les
lcall
sub
jbe
jo
movsl
nop
pop
loopne
push
int3
xchg
lods
xor
add
jg
shll
xchg
repz
bnd
add
jno
fwait
or
pusha
ret
into
dec
enter
inc
test
imul
jo
and
stos
jne
scas
mov
lds
popf
pushf
push
xor
jb
stos
inc
push
jo
cmp
mov
andb
fdivrp
inc
pusha
jo
mov
adc
addr16
in
push
dec
cli
repnz
aam
xchg
cmpsl
roll
jo
sbb
call
jo
imul
mov
jo
bound
jo
push
andb
mov
adc
jo
push
cmp
jo
outsb
test
or
clc
add
fldt
test
ret
dec
xchg
xchg
pop
adc
mulb
jo
ljmp
adc
jo
hlt
pushf
sub
cs
call
sarb
mov
fistl
add
mov
addl
sahf
adc
xor
cmc
stc
sti
xorb
add
push
js
mov
sbb
cs
adc
sub
addl
ss
pop
lcall
jae
test
test
pcmpeqd
movsl
cmp
movsl
das
mov
jae
outsl
sbb
mov
out
pusha
jae,pt
inc
sub
dec
push
cli
jbe
pop
je
sbb
lcall
xchg
adc
loope
hlt
and
repnz
fs
push
dec
add
inc
imul
mov
jle
push
mov
in
cmp
push
arpl
test
fists
sbb
or
or
mov
pusha
loopne
xor
jo
dec
mov
cmpb
push
push
mov
psubsb
mov
pop
aas
jae
loope
fnsave
xor
loope
sub
dec
sbb
push
add
mov
fimuls
mov
push
mov
test
pop
cltd
push
je
ljmp
push
stos
mov
jmp
xlat
fsubl
out
push
addr16
jae
test
clc
call
or
push
add
mov
in
jns
sbb
xor
mov
mov
lods
scas
lret
cmp
inc
add
and
cmp
pop
pop
or
xor
cltd
dec
dec
pop
outsl
and
push
call
push
mov
std
mov
and
out
in
sbb
cs
cmp
sbb
les
pop
ret
jecxz
outsl
xor
mov
outsb
mov
pop
in
jmp
loopne
sarb
xor
sti
inc
leave
xchg
sub
mov
stos
test
ret
jae
sbb
lods
sub
add
jl
jbe
push
lea
push
enter
sbb
test
xor
inc
sub
imul
fisubl
std
mov
sub
jae
mov
push
xchg
out
push
enter
jg
out
fldenv
pop
data16
adc
add
push
movsb
cmp
jmp
pop
jge
mov
mov
and
rolb
inc
fs
and
sbb
push
inc
ss
cmp
add
aaa
adc
clc
jns
psubw
xchg
mov
repnz
test
inc
fs
pushf
or
sbb
xchg
fcmovnbe
xor
cwtl
int3
cmc
andb
sarl
xchg
out
adc
dec
sbb
lods
sub
or
cmp
xchg
sbb
lock
xor
mov
std
xor
push
dec
mov
adc
adc
data16
insl
mov
jae
int
mov
dec
fwait
dec
add
xor
pop
pop
and
mov
sbb
jle
fsts
sbb
xor
cmpsb
mov
mov
and
and
sbb
mov
mov
jo
and
pop
nop
bound
sbb
pusha
cmc
out
dec
pop
xorl
jle
iret
insl
add
pop
dec
imul
call
dec
inc
add
xor
mov
push
adc
xchg
icebp
jl
sub
or
cmpsl
lret
outsb
clc
inc
mov
cs
inc
xor
stc
sbb
clc
test
lock
outsb
psubb
xchg
inc
ljmp
sub
sbb
or
mov
mov
loop
stos
test
mov
scas
mov
inc
arpl
out
xor
movb
push
push
mov
jo
movsb
sub
push
adc
ja
lret
jle
or
sbb
bound
or
mov
cli
cltd
stos
cmpb
dec
push
pop
sub
movsb
movsl
inc
jne
loope
ds
pop
out
lret
dec
divb
in
pop
out
imul
add
shrl
sahf
jo
mov
and
mov
dec
xor
cmc
pop
fs
mov
mov
subb
push
fwait
adc
fidivrl
hlt
je
sub
mov
inc
outsb
jo
xor
sbb
xchg
add
xchg
mov
pop
push
jl
xor
lods
fsubrl
jo
jne
out
clc
xchg
mov
lret
sub
jmp
or
cmp
lret
fidivrs
in
sub
int
iret
dec
dec
xchg
mov
negb
pop
mov
add
mov
dec
inc
lret
jae
adc
movsb
jo
mov
jo
jecxz
lea
ds
or
mov
fs
jo
sbb
fwait
popf
add
adc
pop
mov
pop
mov
repz
dec
push
xor
xchg
and
shl
mov
add
jb
incb
or
mov
mov
fwait
out
xchg
push
icebp
icebp
bound
add
cmpsb
movsb
addl
jo
push
xor
mov
xchg
mov
jo
lds
jne
outsl
or
test
adc
inc
es
popf
jo
pop
mov
imul
mov
xlat
je
popf
jne
mov
xchg
fmull
xor
jle,pt
into
fmull
push
mov
cld
out
stc
test
mov
xor
fbld
jo
cmp
lods
stos
jo
mov
not
rcll
popa
jo
push
mov
xor
gs
push
cltd
arpl
mov
iret
dec
and
out
ja
in
sub
cmp
jo
sbb
fstl
jo
out
sub
int
dec
rol
sbb
cmc
xchg
and
xchg
aaa
mov
jo
mov
popa
cmp
sbb
test
inc
mov
pop
shrl
enter
aam
mov
jbe
int3
test
in
jl
push
mov
mov
xlat
jecxz
mov
xor
jo
mov
adc
out
push
mov
mov
aaa
cmp
jge,pn
sub
jo
in
or
inc
ja
mov
test
pushf
jl
xor
outsb
pop
mov
pop
jo
xor
icebp
jo
les
je
cli
cmpsb
mov
int
testl
sub
push
adc
ret
ljmp
mov
imul
mov
fs
rorl
mov
addr16
pop
icebp
mov
orb
in
int
loope
cmc
in
xchg
divl
int3
dec
lods
lcall
cmc
outsl
sti
jo
xchg
dec
cli
daa
cmp
and
pop
jo
mov
bndstx
lahf
sub
dec
xchg
jo
stc
push
pop
insb
jo
lea
cmp
pop
or
gs
push
call
mov
jo
aam
sub
jo
xchg
mov
int3
incl
jo
or
leave
mov
movsb
leave
mov
jo
out
add
jno
sbb
test
xchg
das
xor
sbb
loop
mov
nop
mov
mov
jo
pop
fidivl
aas
daa
hlt
es
dec
jae
sbb
xorl
adc
call
jnp
in
lds
lods
js
dec
jb
mov
mov
pop
or
sub
jo
iret
negl
sub
inc
push
out
lahf
pop
icebp
stc
jo
sub
ret
orb
jo
cmpsl
test
mov
ljmp
sub
lret
xor
lahf
ja
scas
jo
stos
repnz
clc
dec
jo
je
add
jo
ret
cmc
lea
jle
jo
hlt
xor
xlat
or
fldpi
mov
call
fcmove
testb
js
add
jmp
mov
les
cmp
aam
movsl
dec
xchg
das
jo
xchg
cmp
sub
cmp
dec
add
fs
fcmovnbe
or
jl
pusha
enter
cmpsl
je
push
out
push
std
data16
jg
loope,pn
addr16
pop
inc
cmp
and
fidivl
push
nop
xor
jb
adc
jne
xor
mov
jo
or
gs
popf
push
or
jnp
add
sbb
jb
xchg
je
test
jp
jo
scas
add
adc
loope
push
jle
test
enter
and
std
jb
jno
jo
fisubrl
adc
or
repz
cs
jo
lods
sti
inc
cmpsb
jo
int3
sub
pop
mov
jo
clc
xlat
gs
iret
movsb
push
icebp
sarl
push
insl
lods
push
xchg
insb
inc
ficomps
and
shl
mov
push
push
aam
test
jl
aaa
stc
jo
xor
jmp
xchg
push
add
movsl
insl
in
flds
push
adc
inc
cmp
xor
ret
test
into
in
push
add
iret
lds
out
inc
por
jo
insb
cmp
js
test
imul
fstl
pop
add
sbb
stos
test
adc
lock
sti
sqrtps
cmp
jo
pop
aad
or
addr16
rorl
int
ljmp
jb
xor
mov
je
or
jo
inc
cltd
pop
inc
iret
frstor
dec
adc
cld
push
nop
pop
cli
in
mov
in
inc
adc
adc
mov
movsb
lods
ss
sbb
adc
es
or
add
pop
stos
mov
inc
flds
adcb
jo
xor
pop
jp
movsb
add
in
adcb
cltd
xchg
lock
jb
and
push
js
jp
popa
stc
test
jo
or
jo
mov
jmp
leave
jg
jbe
jne
push
les
xchg
mov
divl
push
sbb
scas
jno
mov
dec
mov
push
push
cmp
inc
and
gs
mov
adc
xor
mov
push
outsb
iret
imul
cmp
xchg
jb
sub
in
insb
jecxz
andb
int3
xchg
pop
cltd
sub
stos
jae
lret
fs
jp
js
jp
jo
mov
cltd
jnp
xor
sub
scas
xor
addb
je
xor
jo
push
sbb
ljmp
rcll
jo
push
lcall
popf
sub
scas
inc
push
repz
aaa
clc
dec
ficomps
inc
pushf
imull
adc
push
cmp
push
nop
cltd
iret
dec
std
push
push
adc
push
xor
lds
fsubrl
mov
dec
and
iret
daa
jo
int3
cmp
adc
sbb
xor
cwtl
push
pusha
inc
imul
and
hlt
fbstp
sbb
repz
adcb
mov
mov
cmp
xor
dec
or
push
xlat
mov
jns
dec
test
pop
jo
roll
bound
jo
inc
gs
push
cmpsb
fistpll
sub
inc
jo
ficompl
cli
push
lcall
jp
lods
testl
nop
mov
test
ret
add
sub
roll
cmovge
mov
pop
nop
mov
bound
notb
dec
pop
cmpsb
outsb
adc
xor
and
mov
leave
mov
nop
lods
jno
adc
pop
adcb
mov
aam
ret
jg
jnp
xchg
loop
movsb
out
cmp
inc
rolb
xchg
cmpsl
jo
cmp
stos
or
bound
cmc
xor
adcb
ret
mov
push
ret
push
pop
cmp
fiadds
mov
cmp
mov
mov
bound
sub
mov
loope
jo
adc
push
adc
xor
lea
dec
icebp
fwait
jb
outsb
stos
sbb
adc
sarl
push
mov
fisubrl
or
bound
xchg
das
sbb
sub
arpl
adc
mov
mov
or
lock
je
xor
mov
rclb
cmp
aam
inc
int3
inc
hlt
popa
shrl
cmp
xor
out
push
lods
movsl
mov
rclb
mov
sbb
loop
test
out
push
adc
or
mov
fildl
insl
arpl
adc
xchg
repnz
cmpsl
outsb
cli
and
jl
lahf
cmc
push
repnz
pop
movsl
lock
lds
push
xchg
mov
sbb
pop
lahf
lods
popf
and
dec
push
jae
in
mov
and
mov
das
stos
aas
sub
mov
xor
jle
dec
insb
jle
movsl
dec
and
add
push
and
sub
push
lock
push
xchg
test
or
in
mov
pop
cmp
mov
mov
jbe
and
ret
lahf
sub
xlat
adc
addb
adc
subb
rorl
xorl
sbb
out
or
addr16
decb
ja
fcomip
xadd
arpl
sarb
xchg
add
jb
repz
cli
cmp
push
fwait
rcl
jb
add
mov
xchg
mov
repnz
push
inc
cwtl
out
and
pusha
es
fildl
stos
enter
pop
adc
push
dec
es
pop
arpl
mov
jnp
out
hlt
jae
jne
jae
fsub
pop
jbe
int3
mov
mov
testl
scas
aam
dec
cmp
jo
outsl
push
fbld
stos
inc
sahf
inc
roll
sbbl
test
push
xchg
add
mov
dec
push
jns
xchg
xor
sarb
cmp
push
jnp
jo
je
mov
jae
les
inc
pop
sbb
or
mov
insl
outsb
hlt
bound
push
test
loope
push
rcll
mov
in
es
stc
insb
test
adcb
xchg
into
adc
mov
xor
repnz
inc
jbe
aad
movsb
and
dec
jae
xchg
mov
in
popa
stc
insl
scas
push
scas
xor
dec
jg
std
mov
aad
xor
inc
jae
mov
push
stos
mov
js
scas
outsb
xor
pop
push
xchg
subb
test
push
ret
pop
add
cmp
mov
int3
mov
sbb
hlt
and
mov
cld
loop
add
or
hlt
jno
hlt
adc
sti
das
jns
fs
bnd
push
repnz
push
cld
mov
test
pop
sub
insl
inc
repz
sahf
xor
mov
adc
inc
dec
jge
mov
repnz
sub
cltd
dec
push
push
or
add
mov
cmp
pop
cld
mov
xchg
nop
jns
gs
cmpsl
xor
in
scas
rcll
mov
fucomip
fcoms
data16
scas
cltd
pusha
dec
dec
loopne
inc
cmc
loope
jmp
cmp
mov
push
jae
cmp
lods
push
sub
leave
fs
mov
aas
std
lret
lock
add
js
test
xchg
int
les
mov
push
jmp
cltd
mov
sti
sub
pop
lods
cld
add
mov
push
jae
dec
jl
mov
add
insl
cld
mov
repnz
push
push
out
int
pop
popf
cltd
outsl
or
mov
daa
test
add
xchg
push
xorb
into
daa
or
adc
cmp
lret
aad
jge
jb
fidivrs
push
jge
or
fcomip
push
notb
mov
scas
nop
shlb
call
jp
loopne
adc
ja
or
icebp
lcall
mov
mov
jle
cmpsb
xchg
pop
xchg
stos
fstl
push
mov
push
loopne
cmpl
addr16
jl
push
bound
imul
mov
mov
push
daa
out
mov
push
repz
xor
shlb
mov
cmp
xchg
mov
dec
test
iret
fwait
sahf
int
add
xchg
pop
inc
jbe
outsl
xor
and
cmc
bound
xchg
adcl
mov
pop
cltd
sub
jbe
test
push
insb
aas
test
xchg
sbb
or
cmp
mov
inc
stos
shll
js
lret
adc
push
pusha
xor
jb
rcrb
and
xor
lods
les
jl
arpl
jl
xchg
dec
and
mov
cmp
jg
sar
sahf
mov
arpl
jbe
sbb
mov
xorb
add
push
fcmovnu
popf
or
dec
outsl
les
push
xchg
call
arpl
push
jle
xor
lar
or
aad
fildll
sbb
jecxz
dec
pop
mov
xor
je
lods
movsl
loop
push
mov
arpl
pop
test
push
inc
leave
fisttpll
mov
sub
push
pusha
jbe
jae
sub
out
outsl
push
fucomip
rcll
lcall
or
push
mov
bound
adc
jae
mov
pop
jae,pn
test
aaa
int3
std
hlt
sub
mov
push
mov
lock
rcll
and
insb
and
insb
clc
js
lahf
subb
mov
lods
bound
dec
jo
arpl
leave
in
xchg
addr16
out
jns
sahf
push
pusha
shll
xlat
jae
shlb
inc
aaa
jno
repnz
bound
cli
adc
push
push
stos
rcl
and
sbb
dec
dec
aam
xor
pop
lea
gs
jns
mov
lock
pop
adc
xchg
mov
repnz
jg
push
sub
push
insl
call
xchg
mov
push
dec
cmp
arpl
add
dec
jae
cwtl
mov
mov
pop
and
inc
dec
callw
sbb
rcl
out
jbe
out
jns
sbb
xchg
add
cmp
movsl
add
sub
jmp
sub
and
ret
pop
or
test
jae
icebp
sbbb
fldt
mov
arpl
int3
fs
or
outsb
icebp
mov
int3
int3
mov
popa
adc
das
mov
pop
xchg
nop
fs
out
roll
mov
clc
data16
aas
push
int3
cmp
inc
push
gs
in
cmp
inc
push
jge
jo
inc
call
sub
pop
mov
loope
and
push
pushf
push
loopne
jo
dec
int3
jbe
mov
out
mov
ljmp
mov
inc
lahf
es
or
nop
and
mov
jo
add
cmp
sbb
addb
std
fildl
imul
add
jle
pop
sbb
adc
jbe
aaa
xchg
xchg
mov
in
cmp
lahf
jmp
ja
mov
sub
add
push
pop
fwait
js
in
call
inc
out
jns
push
in
sti
jle
add
sbb
cs
sbb
int3
sub
jo
xlat
addb
jb
pushf
pop
lods
cmc
dec
jb,pn
stc
ss
sub
mov
loope
jo
mov
mov
adc
push
fwait
lahf
lcall
xchg
jnp
inc
mov
popf
sbb
cld
dec
jmp
push
jbe
xchg
fmul
test
cmp
outsb
lret
out
gs
jo
pop
pop
bound
or
sbb
jne
xchg
nop
push
in
add
outsl
adc
fwait
mov
lds
or
inc
nop
mov
jecxz
sub
push
dec
movq
dec
call
sub
popa
scas
sbb
and
pop
xorb
push
movsl
daa
imul
lods
ljmp
jo
loopne
xchg
inc
sahf
or
sbbb
cwtl
jb
push
nop
sti
mov
jnp
pop
pop
jo
pusha
mov
xchg
sbb
outsb
jo
push
jbe
loope
aas
mov
insb
pop
ljmp
arpl
push
mov
pushf
mov
sar
cmp
jo
push
or
insl
mov
lock
sbb
stos
cmp
sti
jo
es
les
pushf
gs
ds
jo
sub
jmp
fcompl
stc
jo
daa
lds
push
call
add
xchg
push
aaa
js
lret
adc
jo
mov
pop
fidivl
mov
cmc
cmpsl
sbb
sbb
test
jg
in
inc
mov
sub
pop
sub
std
adc
test
jmp
jbe
es
push
lea
jg
in
nop
inc
push
add
mov
mov
lock
nop
insb
dec
and
scas
adc
js
dec
daa
ljmp
or
add
mov
scas
cmpb
push
xor
xorb
mov
movsl
push
mov
shll
mov
pop
xchg
jo
mov
jnp
nop
stos
add
mov
fmulp
leave
shll
cmpsl
cmc
push
xor
push
jle
call
imul
das
xchg
or
ret
xchg
sti
cmp
mov
mov
mov
xchg
outsl
xorb
orb
gs
cmp
jo
cmpsl
pop
sbb
pop
outsl
fwait
jo
xor
mov
js
imul
bound
cmpsb
fs
dec
adc
shl
in
xor
test
aam
mov
and
push
idivl
push
and
adc
je
repnz
aam
out
jno
lret
dec
cmpsb
ret
adc
jb
into
movsb
jo
test
jo
fistl
xor
int
int3
addr16
add
dec
jo
jl
andl
jmp
dec
jecxz
mov
pinsrw
mov
dec
in
jo
fnstsw
iret
and
push
mov
lods
lcall
mov
data16
aaa
nop
mov
jo
rol
outsb
adc
push
push
imull
movsl
sahf
pslld
notb
fsubl
inc
push
jo
pop
add
push
push
pusha
sbb
push
jo
fwait
pop
mov
push
scas
push
sti
sub
and
inc
xchg
mov
inc
jo
stos
notb
ret
add
fcompl
jo
or
and
push
jo
ja
lds
fdiv
or
dec
repz
push
jo
xlat
sub
mov
mov
inc
stos
push
sahf
lahf
or
push
bound
leave
sbb
sub
hlt
xlat
stos
jbe
pushf
sub
xchg
pop
pop
insb
insl
add
dec
popf
dec
jg
rorb
imul
add
movsl
in
jle
xlat
sti
inc
and
cs
ss
fistl
jo
jle
movsl
xor
mov
ret
mov
cwtl
icebp
aam
mov
movsl
add
jle
jo
cmp
stc
dec
push
pop
push
mov
jo
insl
and
jae
adc
push
inc
mov
nop
adc
test
bswap
pusha
cmp
jb
mov
cmpsb
jo
inc
inc
pop
popa
sahf
mov
sbb
xlat
fldenv
mov
dec
repnz
dec
loop
jo
mov
mov
jo
jmp
jbe
loop
jo
cwtl
test
adc
clc
lahf
sub
jns
xorb
push
jmp
push
movsb
add
ret
sub
sbb
adc
xchg
jo
mov
dec
lahf
jo
push
push
or
stos
repz
jo
popf
xor
jo
cmpsl
enter
shrb
jo
sbb
insl
stos
lds
stc
sub
ror
or
cmp
jle
pop
pushl
inc
cwtl
add
test
out
shll
cli
lret
out
insb
dec
or
std
shlb
jo
shr
sub
jae
das
jge
cmp
leave
pop
jo
loope
test
pop
xor
cmp
mov
repz
lds
loope
rorl
ja
fbld
jl
aas
cmp
or
mov
icebp
cmpb
push
aad
addr16
inc
js
nop
jmp
fsubl
test
jno
pop
in
nop
pop
int
or
and
andb
js
jo
cmp
cmp
mov
xor
jo
ret
dec
sbb
icebp
andl
int
fwait
push
scas
pop
test
rolb
xchg
out
inc
xchg
sub
aad
xchg
jbe
insb
pushf
sbb
cmp
add
out
je
mov
lods
mov
data16
jo
and
push
cs
scas
in
add
add
inc
outsb
jo
in
adc
xor
mov
ret
pop
mov
data16
test
je
jb
inc
enter
inc
cs
repz
sub
cmpsl
jo
das
pop
xlat
jmp
dec
mov
jbe
ja
scas
jb
push
imull
setb
cmp
xor
jo
add
sub
add
stos
add
push
jle
shrb
inc
push
insb
inc
cld
scas
pop
push
nop
shrl
jmp
fldt
js
inc
push
xor
mov
jo
dec
fwait
mov
jo
imul
xchg
mov
testb
sbb
in
loopne
outsb
fcompl
mov
std
cmp
mov
mov
sbb
or
inc
fs
mov
nop
int
pushf
subps
addb
nop
lret
jecxz
mov
jnp
dec
bndldx
out
dec
mov
jo
icebp
add
mov
jb
or
divl
ret
push
outsl
jo
sub
jne
jo
and
mov
scas
insb
jo
leave
xlat
lcall
jae
mov
jo
shrl
adc
jo
sbb
out
roll
xchg
out
mov
cmp
inc
rorl
sahf
pop
fbld
imul
jo
shlb
enter
pusha
lea
sbb
inc
fidivrl
add
sbb
jg
pop
fsubr
in
jo
mov
mov
imul
jo
xor
cld
out
push
stos
cltd
shl
adc
jo
and
aam
ljmp
lret
pop
cmpb
inc
jle
mov
repnz
dec
into
mov
frstor
in
cmp
sub
fidivl
aam
nop
mov
movlps
insl
bound
inc
mov
stos
movsb
nop
push
out
dec
xlat
jecxz
pop
outsb
gs
subb
mov
sub
mov
xor
jo
inc
incb
mov
cltd
add
mov
jmp
jge
in
sbb
insl
cmp
push
xchg
push
xlat
jmp
push
inc
jo
out
es
or
shll
mov
out
dec
fcoml
and
xlat
push
and
mov
cwtl
or
lock
in
jle
ljmp
mov
or
cmp
adc
sahf
jg,pn
inc
ss
outsl
dec
aaa
je
repnz
pop
daa
jo
iret
add
test
cmc
adc
jo
xchg
add
fisubrl
in
test
pusha
or
push
push
nop
lods
cmpb
daa
test
jmp
push
jp
sbb
cmpsb
sub
ss
gs
cmp
cmp
mov
js
jns
or
or
jno
dec
cs
js
sub
not
pop
pop
jb
push
lcall
jle
adc
ljmp
jbe
popl
ds
dec
std
xchg
and
negl
jno
jo
gs
test
jns
orb
sbbl
dec
subb
jle
pop
fs
inc
lret
ljmp
imul
inc
inc
inc
outsl
in
sti
or
add
call
add
insl
pop
mov
dec
pop
jae
mov
sub
jmp
jo
fcmovne
scas
test
and
jo
js
in
and
push
mov
jo
inc
push
sub
movsb
push
mov
fwait
notb
jo
jbe
inc
cmp
or
jo
xchg
push
loopne
mov
push
mov
sarb
lret
rcrl
in
xor
stos
clc
lods
inc
in
dec
inc
cmpsl
jo
jno
lahf
arpl
pop
pop
mov
jo
nop
mov
push
push
mov
movsb
test
inc
mov
in
repz
lock
seto
and
jl
call
pop
in
scas
jp
add
pop
push
push
jo
in
cmpsl
cmpsb
stos
mov
filds
push
addr16
mov
inc
add
insl
pop
mov
jo
adc
aaa
ds
xchg
pop
test
scas
pop
ljmp
sbb
popa
fistl
mov
push
stos
enter
adcl
lret
aas
test
inc
jo
jns
xchg
sub
lcall
pop
mov
repz
ja
xchg
ljmp
je
adc
sti
scas
sub
jo
mov
dec
mov
movq
fstps
fwait
in
or
mov
dec
push
mov
out
rcrl
addr16
mov
insl
jmp
push
mov
push
ror
inc
xor
dec
ljmp
mov
pop
mov
add
adc
aam
out
hlt
cmpsl
daa
js
mov
test
jo
subb
scas
int
ret
push
inc
xor
cli
inc
js
sub
pop
imul
fs
dec
push
fmuls
insb
sub
mov
xor
cmpl
ja
adcl
stos
int
insb
mov
mov
jo
idiv
jle
pop
jp
in
lock
lds
sub
xchg
fstps
push
test
xor
and
or
pop
inc
mov
jp
jns
jo
jmp
xchg
cmp
insb
sub
push
inc
dec
fstpt
xor
test
jo
or
sub
xor
bound
xor
repz
push
jo
jecxz
add
std
cmp
jg
test
lret
cmpsb
mov
fwait
js
xchg
mov
out
add
lret
fbstp
shlb
jo
pop
lods
mov
mov
insb
cltd
jo
mov
js
daa
sub
and
jo
and
add
fldt
mov
adc
xor
push
subb
pause
pop
pop
sbb
xchg
jo
cmp
pusha
lods
pop
pop
and
arpl
into
pushl
jo
fdivr
filds
pop
test
xchg
mov
dec
xchg
xor
dec
jge
push
shl
jg
mov
scas
faddp
fldl
nop
bndldx
push
mov
pop
mov
push
gs
int
movsb
jo
jge
inc
repz
icebp
mov
movsb
jnp
push
clc
aam
lea
jp
push
adc
adc
inc
repnz
push
push
jmp
mov
cmc
sub
dec
std
ret
subb
or
push
or
fisttps
mov
iret
pop
mov
push
mov
jl
jo
mov
icebp
mov
mov
outsl
lret
movsb
repnz
inc
jae
push
repz
mov
push
pop
xor
ss
push
lods
sub
push
out
mov
jo
fs
xchg
adc
jo
repz
inc
dec
xor
jg
cmpsb
push
xchg
shll
sbb
jp
int
jo
add
pop
dec
jo
fs
std
mov
cmpsl
push
dec
adc
and
sub
cmc
xchg
ret
ret
iret
aam
sub
ja
jns
lock
ja
stos
sbb
ret
jo
adc
rcll
jo
sahf
sbb
cmovo
xorl
jns
js
daa
sub
jle
fistpll
adc
mov
jo
int
sub
xchg
gs
dec
mov
jo
jmp
push
clc
les
or
inc
jo
mov
adc
mov
fs
arpl
js
cmpsb
and
mov
and
outsl
movsb
aam
int3
in
notb
jae
bound
dec
sub
adc
adc
stos
adc
jbe
sub
ret
lds
dec
pop
rcll
fdiv
cmp
jns
sub
lahf
cmp
mov
int
andl
and
adc
test
enter
fsubl
inc
in
and
fistpl
lock
jae
clc
mov
cld
aad
cmpsb
js
mov
leave
sbbb
sub
cmp
sbb
icebp
nop
pop
push
mov
sub
pusha
push
popf
jb
hlt
xor
jo
icebp
ret
incb
arpl
push
in
pusha
mov
lcall
mov
inc
jo
ds
imul
mov
jbe
gs
push
ljmp
outsb
test
in
sarl
insl
push
mov
xor
inc
cmp
mul
add
inc
jo
xor
test
jo
xchg
outsl
xorb
cmp
int3
iret
insl
xor
xchg
addr16
mov
dec
and
sub
dec
icebp
sbb
add
icebp
cs
add
ret
add
stc
loope
dec
mov
jp
lret
push
in
dec
aas
in
daa
jle
mov
fcoms
addr16
cmpsl
sub
cmc
arpl
negb
shll
adc
rcrb
adcl
out
xchg
lds
insb
test
sbbl
std
pop
sub
stc
sbb
inc
xor
ds
and
or
cmp
fstl
pop
incb
mov
fstpl
ds
xchg
push
jae
in
cmpsb
add
jb
aas
rorb
jo
push
cmp
push
ds
mov
xorl
lock
mov
add
jl
cmp
xchg
outsb
shrb
push
xchg
bound
dec
inc
jno
faddp
jo
and
nop
xlat
add
mov
and
loop
stc
jl
fistl
pop
jg
xchg
jmp
mov
cmpsb
adc
adc
xchg
xchg
or
cmpsb
loopne
mov
movsb
xor
xchg
in
cmc
mov
sbb
push
jl
rolb
push
cmc
lcall
mov
dec
push
test
add
jno
loope
or
cmc
loop
outsl
cmp
outsb
int3
movsb
xchg
adc
jl
jae
mov
scas
lahf
fnstenv
dec
mov
data16
js
insl
rcrl
fs
jl
int
mov
outsb
int
xchg
mov
out
ss
xchg
lea
mov
mov
dec
roll
jecxz
pop
fs
mov
cmp
or
test
es
ret
decb
out
mov
xor
inc
dec
jecxz
cmp
and
adc
fisubs
pop
dec
sub
mov
aas
loope
or
add
movsl
xor
loop
loopne
add
push
mov
imul
xchg
mov
filds
adc
push
xor
out
ja
out
test
stos
pop
push
push
cs
js
inc
adc
lret
andb
or
mov
jns
mov
std
and
ss
lock
sbb
sub
dec
xor
xor
dec
data16
out
push
scas
sub
sbb
mov
loop
out
mov
test
sbb
pop
jnp
push
fwait
pop
stos
sbb
out
add
mov
add
bound
jge
dec
insb
stos
jle
jnp
sub
ja
push
add
sbb
jae
xor
add
in
sbb
mov
arpl
adc
fdivs
repnz
mov
or
imul
out
and
movsl
outsb
adc
xor
popa
fistpll
lods
xchg
insl
js
out
pop
imul
fadd
jns
jae
les
and
pop
lret
leave
shr
scas
push
out
int3
cld
cmp
sub
ljmp
jg
mov
gs
movsl
pop
pop
mov
pop
in
mov
imul
pop
ja
call
mov
jg
cltd
in
int3
out
shr
arpl
cld
adc
jmp
jle
xchg
dec
sbb
mov
insb
pop
jae
mov
pop
jne
xor
repz
cmpsl
mov
lock
mov
nop
sub
mov
aam
cmp
sti
sub
rcrl
fwait
aam
xlat
mov
lods
movsb
mov
adc
pusha
mov
outsl
mov
sub
add
clc
xor
push
int3
cmp
and
std
stos
mov
enter
mov
xchg
pop
das
outsb
push
insb
imul
push
bound
mov
xor
lods
jbe
pop
and
jns
sahf
insb
xchg
pop
lds
in
out
and
out
and
rcrb
stos
fstps
data16
aaa
cltd
inc
mov
popa
jl
fucomip
aam
mov
jae
cltd
lds
fwait
pusha
jmp
cmp
push
jnp
and
or
sbb
cltd
dec
orl
in
dec
test
scas
and
or
cs
cwtl
das
add
xor
dec
jns
call
or
push
into
sbb
jl
mov
ss
lret
inc
xor
shlb
mov
lahf
or
xor
repnz
mov
mov
push
rorb
jecxz
int3
lods
and
and
xchg
push
bound
push
cmpsl
mov
mov
jmp
jle
out
adc
sbb
xor
sub
into
jbe
and
sub
jle
pop
jb
clc
and
ss
jae
rorl
xor
pop
test
repnz
shlb
adc
rclb
xor
aas
fisubrs
mov
sbb
lods
mov
bound
insl
sbb
roll
push
dec
out
test
add
or
mov
out
cltd
pop
push
andb
push
cs
lods
loopne
les
xchg
in
pop
cwtl
jb
daa
in
negb
imul
pop
mov
lret
or
jae
pop
and
fildll
fsts
mov
jp
lods
and
mov
pushf
cmp
cmp
orl
dec
orl
mov
xchg
mov
rcll
hlt
sti
and
push
lea
cwtl
fistps
fistl
ja
jae
les
data16
or
push
and
sbb
lods
jo
mov
addr16
inc
jge
push
jae
das
js
pop
xchg
or
xor
mov
sahf
xchg
push
aas
mov
or
aaa
mov
out
rcl
or
cs
test
arpl
sub
dec
test
popf
andb
sahf
fidivrl
or
insl
or
stos
pop
movsl
push
in
adc
sbb
in
pop
mov
dec
lds
arpl
icebp
add
ss
std
cmp
jns
arpl
mov
sahf
out
mov
jns
or
and
faddl
mov
pop
cs
and
sub
jmp
jp
int3
sub
test
mov
aas
sar
push
fsub
std
loopne
mov
jae
jge
lods
push
cmpsl
into
roll
nop
insb
vmread
clc
and
add
in
out
jnp
ja
push
hlt
sub
jp
pop
imul
push
sub
fldenv
add
sub
repnz
inc
cltd
sbb
out
fld
insl
fwait
test
mov
es
push
dec
js
sbb
cmp
cmp
and
call
cmp
into
mov
pop
xchg
loope
xchg
ret
or
push
insl
leave
push
mov
ja
and
inc
pop
pop
nop
mov
jo
add
pop
adc
xchg
adc
inc
pop
nop
mov
fs
jno,pn
xchg
mov
nop
sbb
pop
cld
add
push
ret
shlb
test
xchg
js
jg
cmpsb
jo
jb
push
out
mov
jo
jno
ret
in
xchg
add
cs
cmc
pop
fcompl
js
add
fidivs
inc
call
adc
aaa
int3
sbb
cmc
pop
jo
mov
xchg
mov
cmp
inc
lcall
inc
mov
mov
push
ret
jp
cmp
cmpsl
sbb
fs
std
jo
ja
andl
mov
push
jge
mov
push
roll
jo
cmpsl
xor
jo
cmp
pop
jo
andb
lock
lods
jo
mov
je
jo
jp
aaa
into
jge
xchg
jo
in
sub
sti
fwait
jo
fnsave
dec
jo
mov
in
jge
sub
mov
pusha
jmp
loop
cmpb
fldln2
pop
imull
fimuls
jg
cmp
jp
mov
sub
aam
ds
outsl
pop
ljmp
xor
shlb
iret
idivl
push
xorb
aaa
cmp
jg
outsb
push
adc
lods
test
xor
jecxz
mov
scas
jae
add
aaa
cli
addr16
and
jl
sub
test
jbe
mov
call
sbb
or
ja
fucomip
ret
lahf
insl
int3
xor
inc
jne
inc
jnp
cmp
adc
dec
dec
sbb
sub
decb
push
mov
mul
jmp
jmp
fidivl
push
mov
dec
scas
or
je
sub
dec
dec
ljmp
xchg
insb
aam
sti
shlb
ljmp
int3
lock
add
subl
pusha
pop
sti
jmp
loopne
pop
mov
push
dec
jns
aas
insb
dec
mov
add
fstpt
cwtl
or
push
arpl
call
lds
insl
push
jnp
xchg
test
and
or
push
das
pop
add
das
outsl
jnp
pusha
cmp
pop
sti
inc
jae
add
adc
enter
lahf
xor
inc
int
sub
popf
shrb
push
sbb
pop
xchg
add
les
insb
jo
xchg
inc
arpl
sahf
ret
data16
push
jle
pop
xor
aaa
add
add
lahf
daa
fidivrs
adc
arpl
cmp
scas
arpl
insb
bound
outsb
mov
pushf
add
mov
jno
out
jo
cmp
ret
jp
fs
add
std
or
test
add
in
or
push
xchg
jge
das
into
jae
mov
sub
std
cmp
pop
adc
jge
push
jnp
pop
pop
into
fsubrl
aad
lcall
cmp
inc
xor
clc
repnz
pusha
out
pop
push
rol
popa
xchg
popa
mov
push
fs
jg
in
jecxz
ret
js
arpl
jns
sbb
dec
push
push
sbb
xor
test
mov
jne
outsl
dec
push
lods
jle
shrl
xor
push
mov
push
int3
lods
shll
or
pop
mov
pushl
xchg
addl
fisubs
fimull
sub
pop
scas
pop
mov
cmp
lods
xchg
mov
mov
aad
jo
insb
call
jmp
inc
mov
sub
sbbb
mov
mov
test
xlat
push
sti
pop
loopne
push
adc
call
pop
pusha
js
or
lock
loope
aas
cmp
jbe
push
test
outsl
adc
mov
mov
push
dec
xchg
sub
lret
lahf
imul
je
sub
inc
pop
jecxz
jmp
sub
imul
and
arpl
out
push
test
jg
push
jae
lret
call
mov
mov
cmc
int3
in
xor
push
jecxz
loopne
pop
int3
outsb
jmp
jle
imul
insl
mov
movsl
xchg
xor
je
popf
icebp
xor
inc
pop
jmp
add
cmpsb
mov
xor
or
dec
out
cmp
fistps
pop
inc
fnstenv
clc
insb
imul
mov
jb
test
lea
imul
xor
aaa
call
mov
std
jg
adc
xchg
cltd
aaa
stos
sbbb
xchg
sbb
xchg
js
and
fisttpll
xor
adc
leave
push
jae
ljmp
shl
aaa
fucomi
or
jo
data16
dec
inc
push
cmc
stos
mov
sbb
ljmp
inc
jmp
push
in
push
mov
int
push
fisubs
pop
pop
mov
out
loopne
cmp
push
dec
enter
lea
add
iret
sbb
out
es
bound
xchg
leave
aas
lcall
scas
jle,pn
in
mov
mov
outsb
push
outsl
push
jo
in
adc
cmp
pop
ds
sbb
cltd
xor
jo
pop
adc
pop
xchg
xor
mov
or
testb
cs
xor
cmpsb
push
out
pop
andb
ds
dec
push
jp
in
push
sbb
in
notb
lds
jns
or
push
popf
sub
cli
cmpsl
pop
sbb
or
push
push
adc
popa
dec
sbb
push
rcl
push
sbb
mov
mov
nop
sbb
fmul
daa
jbe
push
out
jno
mov
lock
mov
mov
push
mov
pop
divl
inc
mov
pop
daa
int
hlt
xchg
jae
cmp
out
mov
insb
push
pop
in
ret
imul
mov
mov
in
fs
jb
jmp
cwtl
dec
mov
inc
xlat
repnz
leave
jmp
inc
das
rcrb
jo
aad
daa
sbb
lret
dec
outsb
xor
frstor
test
mov
mov
int3
outsb
inc
ret
and
cli
pop
push
cltd
bound
popa
repz
or
mov
aam
pop
mov
push
out
ret
lock
xor
mov
in
js
aas
add
andb
test
leave
xchg
mov
gs
pop
and
sub
movsb
stos
and
cltd
mov
inc
fs
iret
out
dec
add
inc
out
push
sahf
mov
fnstcw
mov
fdivl
xor
push
jle
gs
jo
sub
mov
cltd
push
lods
jnp
leave
push
jo
xchg
adc
jo
mov
popa
adc
fwait
adc
cltd
pop
mov
dec
or
jp
sub
sbb
sete
sbb
jnp
aaa
pop
test
je
jb
jge
jo
rol
mov
fstl
jo
pop
mov
jo
rcl
jne
xchg
daa
xchg
cwtl
jmp
fistpll
mov
in
lahf
mov
imul
cmp
call
or
xor
xor
gs
xchg
lods
ja
xor
fcomps
addr16
ret
add
xor
pop
mov
sbb
add
js
insl
xchg
jo
ja
mov
scas
xor
dec
jo
mov
sub
arpl
shrl
dec
ret
cli
jo
mov
xor
jo
stos
xor
into
outsb
jb
in
loope
roll
xchg
mov
pop
stos
aam
rcrb
scas
je
dec
push
sbb
jbe
sub
xchg
clc
jecxz
jo
add
pop
jo
inc
sub
repz
mov
inc
mov
fbstp
jbe
cmc
cmp
aaa
sub
js
jo
xchg
mov
leave
inc
adc
mov
lock
sub
lock
pop
data16
clc
arpl
jo
aad
xchg
cmpsl
lahf
cwtl
les
cld
push
mov
enter
mov
push
rcrb
add
and
jo
lods
dec
stos
mov
or
stos
idivb
mov
outsl
mov
lea
or
movsl
inc
lods
jge
outsb
test
xchg
jb
roll
xor
mov
data16
mov
nop
inc
daa
pop
aas
aaa
in
xchg
cmc
jnp
sbb
xor
adc
cmp
insb
jb
ljmp
sub
enter
insb
pop
std
jo
imul
jo
movsl
and
pop
xor
nop
sahf
xchg
in
mov
mov
jo
scas
jge
push
out
sub
dec
and
outsb
or
lret
inc
enter
in
repz
out
fs
xor
in
xorb
fstpt
push
push
das
jo
inc
sbb
cmp
insb
int
pop
mov
adc
popf
jo
jg
jns
dec
xchg
xchg
jo
inc
bound
inc
sub
mov
js
sub
jo
aam
push
mov
shlb
mov
fdivl
cli
inc
test
jo
les
in
pop
xchg
jbe
hlt
jge
jle
and
cmp
shrl
sbb
shlb
cmpsl
sbb
je
push
adc
subl
jne
pushf
js
dec
rcr
jmp
out
loop
subl
ret
roll
jae
and
loope
adc
addr16
ljmp
stos
mov
fs
push
inc
bound
adc
out
out
inc
test
adc
insl
sahf
xchg
lock
fldenv
outsb
fdivp
and
pop
sarb
mov
shrb
dec
cmp
mov
arpl
ja
jns,pn
add
or
repnz
dec
push
fld
lock
jb
fwait
repnz
sbbb
scas
pop
push
pop
dec
mov
pop
shl
jbe
cmpsb
mov
inc
cmp
sbb
sub
inc
scas
in
into
les
adc
sti
dec
adc
jne
inc
insb
movsb
into
bound
je
sbb
call
gs
int
xchg
pop
jns
jae
aam
push
add
inc
sbb
ja
outsl
push
dec
sbb
mov
hlt
test
mov
lcall
xorb
dec
shrb
fisubrs
xchg
repnz
jae
das
and
fadds
mov
push
mov
fbstp
cmpsl
das
xchg
xorl
xlat
outsl
adc
hlt
xchg
lret
loopne
jmp
mov
adc
arpl
loopne
pop
shll
push
fidivrl
clc
insl
cld
xchg
xchg
mov
ss
cmpsl
int3
jmp
imul
aam
jne
cmp
je
pop
or
imul
jl
inc
mov
cmp
icebp
fs
mov
call
sbb
movsl
mov
jb
pop
mov
dec
push
idivl
jae
xchg
fisubs
repnz
xchg
xchg
and
shl
cmpsb
push
cmp
aad
std
sub
push
push
inc
push
push
push
cmp
hlt
pusha
cld
loop
hlt
sub
mov
imul
adc
in
mov
out
jge
imul
cmp
mov
ss
rorb
es
mov
cld
out
int
xchg
sahf
add
mov
or
ja
mov
mov
arpl
jae
and
jp
and
jo
and
addr16
scas
aas
xchg
insb
jne
sar
push
push
sbb
and
inc
sahf
insl
cld
push
fsubp
subl
mov
mov
scas
arpl
in
lock
mov
xchg
je
cmpsb
pop
test
push
dec
sbb
popa
out
fcompl
fs
mov
insb
sub
dec
jae
imul
and
divb
xorb
jmp
rclb
jmp
dec
jecxz
and
lret
jge
dec
fnstsw
mov
lret
sbb
jecxz
pusha
mov
icebp
fcomp
or
push
jle
jmp
sbb
cmpsb
vcvttss2si
insb
sahf
pop
push
aam
dec
in
push
xor
mov
mov
inc
push
addr16
xchg
leave
out
jge
ret
mov
and
dec
inc
or
outsl
ror
mov
inc
or
cmc
pop
push
pop
mov
inc
jno
stos
sbb
jb
fisubrs
cs
mov
cli
cmpl
or
in
roll
lock
cli
push
pslld
pop
mul
aaa
xchg
pop
call
test
pop
push
in
inc
pop
out
push
fsub
sub
orb
loope
pop
xchg
fdivrl
roll
add
prefetchwt1
mov
xor
sub
mov
mov
idivb
shrl
or
fbld
cmp
call
das
into
daa
in
jnp
scas
out
orb
out
jp
sbb
testb
addb
push
jae
popf
scas
rcrl
in
lcall
push
jg
fisubrs
sti
cs
adc
push
fstpl
into
pop
inc
cmp
sbb
jmp
mov
pop
lds
mov
dec
ret
pop
adc
cmpsb
jae
mov
jnp
pop
in
push
or
mov
or
adc
cld
shl
jnp
aas
add
inc
or
jle
sbb
in
out
push
pop
mov
fbld
mov
out
bound
out
inc
insb
repnz
div
inc
jo
xchg
pop
loop
jns
push
dec
sub
fidivl
cs
xlat
out
mov
add
mov
stos
and
mov
dec
fidivs
cmp
aam
jno
jo
push
mov
aam
arpl
in
mov
jae
int
cmp
repnz
pop
fiaddl
push
inc
xor
jge
cmpsb
jns
sbb
data16
and
mov
iret
sbb
pop
mov
xchg
enter
loopne
fstps
mov
xchg
sti
dec
cmp
addr16
mov
test
aad
pop
stc
push
xchg
lret
aad
jg
and
xchg
push
push
jae
adc
scas
mov
xor
bnd
cld
pop
fsubp
jmp
stc
pusha
arpl
stos
fcomp
and
sbb
jno
sbb
cltd
insb
aam
hlt
lahf
and
xchg
inc
cltd
jae
loope
or
test
sti
insb
gs
fiadds
fildll
sahf
xor
sub
orl
repz
jmp
pop
jnp
add
sbb
fsub
inc
sbb
mov
or
fwait
mov
or
push
bound
in
popa
and
and
imul
xor
or
adc
gs
fwait
jo
pop
dec
jge
out
mov
dec
int
xchg
and
cmp
repz
mov
scas
shll
add
cmp
les
sti
aaa
mov
jo
aad
mov
test
lock
push
imul
rorl
inc
shlb
or
mov
fldl
fwait
mov
lret
iret
sbb
loope
jecxz
and
rcrb
mov
inc
jo
js
icebp
pop
and
arpl
addr16
cltd
add
jne
mov
or
cmp
and
jno
or
loopne
and
sub
fldenv
bswap
add
scas
dec
jmp
aam
pop
mov
and
jo
and
jo
push
imulb
jo
scas
mov
jo
xorb
dec
leave
mov
dec
fisttpl
mov
cmpsb
pushf
in
jle
lods
jne
incb
lea
mov
negl
leave
xorb
mov
inc
mov
shrb
das
jo
cmc
lea
jle
jo
mov
jns
push
sbb
add
jmp
and
pop
mov
jecxz
fsts
sbb
lret
pop
repnz
nop
sbb
jnp
in
push
outsb
out
push
cltd
mov
ja
cli
jo
test
stos
xor
mov
daa
fs
mov
xor
repnz
iret
bound
xchg
mov
ljmp
test
inc
loop
cwtl
jo
push
jns
and
xor
xchg
test
pop
sbb
adcl
jo
int3
pop
inc
adc
test
inc
lret
mov
divb
add
pop
aam
add
popw
xor
addb
cmp
jo
adc
repnz
gs
xor
adc
cs
cmp
xor
jne
lret
insl
dec
add
jl
out
mov
jbe
je
sbb
nopl
mov
mov
fcomps
or
jne
sbb
nop
imul
and
out
inc
add
jo
movsl
cmpl
adc
push
cmpsl
sbbb
add
jo
gs
iret
addr16
mov
jo
out
movsl
loope
add
cltd
or
push
inc
fisttps
jo
lds
scas
rolb
pop
sbb
cmp
sbb
js
sbb
add
movsb
and
shlb
shlb
mov
add
out
icebp
mov
adc
jno
loope
push
and
jo
mov
push
scas
adc
push
push
or
and
bnd
fisubrl
cmc
jo
jmp
mov
data16
mov
pusha
test
and
cmpsb
fmulp
jbe
xchg
mov
and
and
add
add
je
dec
in
out
xchg
dec
jo
xchg
jne
jl
ljmp
fwait
jo
dec
lea
mov
cmp
shrl
mov
or
sbb
inc
jo
aas
imul
shr
lret
testb
sbb
loop
jo
pop
xor
xchg
adc
sub
lock
push
les
call
idivb
std
adc
repz
jne
lea
or
mov
push
scas
push
lock
aam
jmp
push
rolb
jg
pusha
or
xchg
push
push
out
jae
fs
and
mov
mov
and
dec
daa
jne
jb
cmpsl
adc
sbb
jge
scas
push
insb
mov
test
cmp
std
mov
loope
pop
push
mov
mov
or
adc
arpl
mov
mov
push
fs
bound
fs
mov
push
or
cld
xor
xchg
sbb
and
push
mov
mov
lods
jmp
push
aad
sbb
popf
or
mov
xchg
dec
cmp
xor
jle
repnz
push
pop
pop
jge
pop
std
arpl
jb
cs
subb
mov
repnz
xor
out
cmpsb
mov
imul
stos
lods
repz
and
cmp
push
gs
pop
mov
sti
dec
mov
mov
lds
aas
jae
jb
mov
add
mov
in
or
jl
outsl
nop
sub
jge
inc
popf
enter
imul
sub
lahf
lods
dec
jae
dec
je
test
adc
mov
rol
bnd
rolb
out
js
adc
out
loop
push
es
and
push
scas
out
fistps
cltd
clc
cmp
in
call
xor
lret
sar
imul
rcrl
add
pop
mov
dec
cli
dec
sub
lahf
std
subl
adc
int3
insb
out
add
push
movsl
mov
ret
push
add
and
xor
mov
jns
mov
loope
add
pop
pusha
dec
xor
mov
push
fisttps
out
lock
aas
cmp
mov
push
imul
jnp
adc
adc
cli
out
outsb
or
push
or
mov
cmpsb
jle
inc
cmp
repz
loop
cltd
mov
push
jb
mov
fdivp
arpl
negl
in
xchg
xchg
lock
movsb
mov
or
pop
jge
mov
rolb
pop
cmp
push
test
rcrl
lcall
sub
repz
and
jo
sub
into
or
xchg
cmp
mov
inc
and
cld
out
in
js
arpl
jne
cmp
std
sbb
push
arpl
scas
fimuls
ja
push
jae
cmp
int3
ret
lods
lock
and
push
sti
cmp
mov
jl
cwtl
mov
cltd
xor
nop
xchg
mov
addb
xchg
cmp
push
xchg
arpl
imul
xor
jp
out
xchg
mov
rolb
mov
clc
or
fwait
pop
cli
fldl
xchg
cmp
fimuls
pop
mov
out
pop
arpl
shr
xchg
cmpsl
std
mov
mov
xchg
mov
mov
fprem
fmull
movsl
movsl
and
cmp
iret
sbb
xchg
pop
jmp
sbb
out
lods
dec
repz
push
xor
inc
nop
arpl
mov
fs
push
mov
mov
jo
add
pop
clc
lret
jae
and
sub
shrl
fwait
or
int3
in
bswap
push
repnz
out
movsb
push
lea
jo
cmp
in
xchg
js
cmp
jle
push
nop
sarl
pop
inc
adc
mov
cmp
fucomip
jmp
in
imul
out
aas
leave
jp
sbb
cwtl
ja
hlt
call
pop
addr16
pop
scas
jne
mov
cmp
inc
mov
sahf
lock
add
xchg
sub
xchg
test
ficoms
clc
xchg
pop
imul
jge
mov
push
test
call
push
pop
fs
gs
fdivl
test
fwait
test
push
ljmp
inc
fcomi
popf
fs
jns
test
cs
dec
sbb
adc
jns
imul
push
lods
pushf
jae
sarb
std
stos
lods
cmp
push
adc
sub
or
cld
pop
push
fnsave
andl
push
xchg
sub
jnp
sub
out
inc
out
fmull
lods
mov
sub
ja
add
inc
gs
outsb
dec
test
insl
mov
push
sbb
insb
sub
rclb
xchg
sub
shlb
xlat
add
mov
dec
sahf
stos
cmc
add
fidivrl
inc
inc
shlb
or
pop
sahf
xchg
and
xchg
cmc
adc
push
gs
mov
xchg
jle
mov
and
ret
mov
daa
icebp
and
fwait
in
jp
rcll
icebp
cmp
popf
inc
sahf
mov
pop
jae
and
scas
popf
in
clc
sbb
jle
mov
or
sub
cmovs
adc
pop
sbb
dec
or
pop
rcl
mov
lahf
std
dec
insb
fs
loopne
sarl
adc
movb
mov
xchg
addr16
imul
and
fucom
test
mov
hlt
ficoml
cmp
cwtl
scas
lds
cmpsl
leave
jb
or
aad
out
pop
std
push
scas
jmp
shlb
push
xor
jae
cmpsb
pop
mov
out
xor
pop
adcl
jne
sahf
out
mov
sub
jne
jp
mov
push
jge
inc
xor
dec
sti
icebp
push
aaa
jo
pop
pop
mov
mov
insl
hlt
jge
shlb
xor
jns
in
decb
test
pop
pop
in
xorb
push
js
jle
and
jo
std
push
stos
lock
inc
inc
push
loopne
ss
jo
or
jg
xchg
imul
mov
cwtl
dec
or
mov
nop
xlat
in
rclb
aas
scas
push
inc
dec
addb
jae
jo
cmp
iret
cld
pusha
and
out
mov
fwait
jo
cmpsb
fdivrl
int
jo
cld
jbe
fdivrs
add
pop
movnti
inc
sub
jg
imul
mov
iret
pushf
test
movb
xchg
cmpb
xor
leave
mov
mov
int
sbb
xchg
mov
jb
fcomip
out
mov
jo
test
seto
add
in
aam
jae
loopne
jo
inc
aaa
fsubp
sub
jo
xor
scas
icebp
loope
push
mov
pop
add
push
vpsadbw
fisubl
dec
jo
xchg
inc
popf
imull
int3
jo
jl
mov
lret
add
cs
xchg
push
frndint
xorl
cmp
xor
jo
out
pop
in
icebp
push
mov
sbb
dec
in
push
mov
sub
bound
push
sti
dec
imul
pop
jae
stos
fimuls
mov
sub
pop
mov
je
mov
rol
int
or
inc
sbb
ficompl
jge
sub
xor
xchg
popf
jb
leave
lock
mov
loope
out
sub
jo
sbb
xchg
jne
lods
mov
arpl
push
cmp
xor
ret
adc
jmp
dec
sub
filds
shrl
mov
cmp
sbb
sub
rclb
xchg
in
dec
xchg
fnsave
leave
popf
push
icebp
into
jo
and
pop
int3
sub
aam
cmp
sub
xlat
and
jmp
mov
mov
in
or
or
mov
dec
mov
jle
out
loope
repnz
jo
shlb
pop
outsl
push
scas
jo
mov
aad
jo
mov
mov
add
cs
jp
adc
jmp
xor
aas
add
jno
dec
inc
push
ret
rcr
push
push
fldt
push
push
jo
pop
rcll
std
and
inc
cwtl
cs
lods
fimull
js
xchg
gs
repz
inc
sub
adc
pop
dec
jb
paddsw
jne
mov
mov
xorl
aad
adc
inc
call
pop
jnp
lret
and
int
jo
aam
les
xchg
mov
and
mov
jne
fstps
jo
and
mov
mov
inc
adc
stos
div
popa
dec
and
jo
fs
push
lds
sti
jb
mov
jns
or
mov
xor
add
sub
arpl
fstpt
jae
or
jo
shll
sbbb
cmpsb
dec
je
sbb
outsb
in
faddp
cltd
push
cwtl
fdiv
and
lret
test
sbb
dec
sub
mov
add
fisubrl
sub
cs
push
js
rcll
push
jg
mov
icebp
insb
test
mov
aam
add
dec
inc
or
daa
repz
dec
jo
mov
jno
cmpsl
pushf
sub
xchg
cmc
xchg
dec
out
jnp
jle
jo
arpl
dec
imul
pop
insl
push
dec
test
cmpsb
test
addr16
test
push
push
cli
sti
or
sysenter
fs
fwait
xor
xor
hlt
mov
jbe
rcll
add
jmp
fdivrl
add
xchg
or
jo
cmp
pushf
jmp
mov
pop
ljmp
jnp
push
lret
jo
hlt
aas
cmp
dec
int
jo
icebp
cmp
xchg
xchg
aaa
fstl
cwtl
hlt
bound
iret
jo
push
test
mov
sbb
lods
ss
pop
or
sub
push
xchg
mov
sbb
outsl
jo
popf
mov
roll
aad
mov
out
pop
xor
xchg
push
and
push
cli
icebp
cmp
popf
cwtl
pusha
ja
jo
icebp
fcmove
push
bound
out
insb
fsubrl
rclb
jo
add
cmp
mov
popa
std
pshufw
jns
jo
cmc
dec
stc
or
outsl
nop
add
and
stos
fs
ljmp
mov
jo
sbb
data16
popa
push
sub
ret
cmp
lock
pusha
das
lcall
push
mov
dec
mov
pshufw
repnz
xchg
clc
xchg
imul
dec
push
ret
mov
mov
rclb
pop
jle
nop
aaa
test
add
repz
sub
inc
inc
sbb
fdivr
mov
mov
leave
subb
int3
dec
testl
jmp
js
cmpsb
sbb
js
ss
jb
dec
sub
lods
shrl
mov
popf
jo
test
loop
ror
or
pusha
adc
rorb
jo
jb
sub
xor
pop
jae
jo
fxch
jle
jne
adc
stc
push
cmp
in
ret
mov
cmpsb
jle
je
sbb
mov
xchg
xchg
xchg
or
push
mov
add
push
or
in
sbb
icebp
fmull
dec
scas
mov
sub
loopne
out
jo
orl
sub
and
in
jo
jnp
fisttpll
int
cwtl
mov
call
mov
pushf
pop
jns
xchg
sahf
push
and
stos
sub
cld
jae
sub
jecxz
sub
imul
nop
mov
jge
jns
jecxz
cmp
push
jno
scas
xchg
adc
jo
add
mov
scas
in
jo
mov
rclb
shrl
ja
scas
push
mov
subb
daa
cs
cmpsl
and
and
xchg
push
push
add
mov
mov
rcll
or
and
add
sub
dec
ja
pop
loop
push
loope
and
push
mov
ds
jo
cli
fcompl
sbb
jo
incb
inc
jbe
sub
dec
xchg
stc
xchg
pop
adc
adc
sti
insl
ss
cwtl
jo
into
int
jmp
fdivrs
gs
js
cmpsb
test
nop
cmp
jb
and
nop
jnp
dec
jl
popa
pop
insb
fcompl
push
jae
jo
sbb
jmp
in
leave
shlb
push
adc
sbb
jo
pop
mov
jns
cs
pushf
pusha
hlt
clc
fldenv
and
jecxz
pop
out
lock
pop
dec
pop
jo
add
into
mov
jns
jbe
je
jo
push
xchg
in
fcoms
loope
jo
pushf
aaa
stos
mul
jecxz
jle
jo
cmp
sbb
fs
xchg
divb
ljmp
icebp
add
mov
push
xchg
sub
stos
jg
popl
jo
mov
xlat
mov
in
mov
js
dec
jae
jo
dec
mov
dec
scas
mov
mov
popf
mov
inc
adc
jbe
jo
mov
cld
jo
adc
insl
xor
movsl
rolb
dec
sub
je
test
jmp
or
icebp
adc
jo
in
push
nop
xor
add
add
mov
inc
ds
jl
dec
sub
scas
lods
andl
out
pop
push
sub
iret
cwtl
jae
cmpsl
pushf
xor
push
vmread
push
jg
lret
push
jae
jno
xor
mov
nop
push
cmp
add
sbb
sbb
lock
sahf
push
lds
push
cmp
dec
js
mov
mov
enter
push
out
mov
sbb
rclb
inc
jae
nop
jmp
mov
sub
xor
jns
fsubl
push
sub
lret
movsb
push
inc
test
movsb
icebp
jno
rorb
ss
dec
repz
out
je
pop
loop
mov
lock
shll
insb
mov
and
add
dec
jae
imul
cmp
imul
clc
lods
and
sbb
sub
or
popa
arpl
in
xchg
or
push
adc
mov
cld
mov
clc
shrl
xchg
pop
into
and
push
decb
test
mov
loopne
push
add
cltd
call
int3
and
fmul
test
push
mov
add
mov
xchg
jae
jae
in
aad
push
lret
sbb
fwait
andl
loopne
shrb
ret
mov
jo
ja
pop
add
jle
jno
xchg
stc
mov
lock
movsl
add
dec
mov
jo
and
mov
dec
insl
push
out
or
sbb
push
in
xchg
and
shrd
xchg
jle
push
xchg
jl
cltd
push
push
jnp
mov
imul
std
sub
push
cmpsl
jae
or
loop
push
sbb
pop
inc
fcompl
shlb
fbld
push
ds
jecxz
sub
pop
push
js
in
clc
cmp
mov
cmp
fidivs
arpl
fs
sbb
out
sbb
inc
imul
leave
sbb
imul
adc
loopne
out
mov
in
inc
xor
adc
lods
leave
jae
or
in
rcrb
sbb
movsl
pop
or
scas
rcl
out
popf
and
das
or
xor
xor
fs
out
hlt
mov
icebp
sbb
testb
cmpsl
cmp
dec
dec
fimuls
cmp
es
push
jb
enter
jnp
and
sub
or
shlb
movsb
nop
mov
repz
arpl
test
sarl
jns
movsl
ljmp
jbe
or
dec
mov
mov
sbbb
cmp
sbb
xor
add
xchg
imul
loope
mov
cmpsl
sbb
jo
rorl
jo
aad
ss
int
and
lods
ds
je
push
insl
jb
push
js
sbb
or
and
dec
lock
imull
mov
xchg
jae
out
pop
push
mov
js
dec
xchg
mov
jo
inc
rolb
mov
nop
and
imul
jo
push
adc
jns
xor
jmp
pop
jae
lds
arpl
outsl
cmp
repz
mov
sub
hlt
pop
addr16
shrb
or
inc
outsb
jb
int
jae
aaa
pop
je
fsts
cmp
in
mov
out
push
pop
aaa
mov
outsb
in
cmp
clc
enter
or
jno
push
dec
cli
push
insl
cmp
out
inc
push
paddw
adc
cmpsl
stos
int3
ljmp
sub
xchg
jae
jmp
in
shl
shrl
hlt
loopne
pop
pop
dec
lock
mov
dec
hlt
push
aaa
add
popa
xchg
clc
aas
sub
xchg
jae
and
jp
std
sbb
sub
and
imul
movsb
call
mov
lahf
gs
insl
rclb
fst
jle
xor
jne
mov
xchg
lcall
and
imul
out
xchg
addr16
or
dec
cs
lock
pop
frstor
mov
xor
mov
sub
nop
xchg
cmp
xchg
cwtl
jo
pop
xlat
inc
dec
aad
or
das
pop
fsubl
fsub
ja
and
inc
test
insb
call
loop
mov
pop
loopne
jo
arpl
xchg
mov
bound
pop
dec
es
xor
mov
mov
cmp
inc
xor
add
iret
cmp
enter
jmp
jae
sub
mov
js
lret
lods
je
push
pusha
mov
stc
ret
popa
shl
push
insl
jno
dec
repz
sub
cmp
mov
rolb
jno
out
frstor
sarl
jmp
movsl
mov
xchg
jmp
jae
jmp
ret
cmp
sbb
outsb
mov
mov
fs
iret
push
idivb
stos
mov
cmp
push
adc
mov
hlt
ljmp
sti
sarb
mov
sub
cli
sub
mov
in
push
pusha
mov
int
filds
jno
jecxz
add
cmp
pop
mov
cmp
sub
ja
mov
cld
pop
cmp
cwtl
mov
rcr
xchg
add
xchg
lret
xchg
or
call
jl
test
pop
mov
stos
sub
ret
push
cld
loop
pop
inc
pop
and
cld
xorb
pop
push
test
adc
inc
pop
adc
scas
sbb
jle
divb
cwtl
lods
and
sbb
pop
fisubrs
pop
shrb
pop
adcl
repz
outsl
notb
ljmp
lods
dec
pushf
int3
dec
push
arpl
sub
es
call
ret
xor
cli
mov
inc
sub
nop
repnz
lock
imul
mov
push
arpl
sbbb
call
in
or
loope
aaa
mov
subl
in
mov
inc
xor
jl
lahf
mov
scas
out
dec
mov
bound
push
data16
xchg
mov
cli
xchg
jno
insb
inc
jo
dec
aam
ja
int
add
sbb
scas
adc
mov
sbb
push
jo
int
xor
push
addr16
xchg
add
js
xor
jae
imul
pop
add
xchg
aad
push
dec
push
cmp
outsb
jno
lds
xchg
repz
sub
jl
ret
jo
pop
pop
aaa
arpl
mov
xchg
jmp
push
jae
es
add
insb
dec
icebp
pop
pop
lret
mov
outsl
adc
push
hlt
lods
test
mov
or
mov
dec
fsts
xchg
mov
mov
enter
lock
int3
cmp
jae
pop
cwtl
sbb
add
sbb
repnz
xor
push
loop
mov
push
sbb
cmp
out
mov
int3
jae
add
mov
jbe
insl
or
enter
gs
cmp
js
out
lret
add
jno
fldenv
add
xchg
fsubrl
mov
hlt
push
fucomip
enter
ret
cmp
mov
arpl
xchg
xchg
mov
add
and
or
adc
cmpsb
pop
add
arpl
loope
pop
aas
outsb
mov
incb
inc
push
ret
mov
pop
push
aad
dec
insl
dec
jno
arpl
mov
rol
inc
movl
and
pop
loope
fwait
mov
xor
lods
es
sbb
sbb
lock
push
jg
and
or
add
cli
and
stos
push
js
mov
cmp
testb
and
xchg
ficompl
rcl
adc
out
mov
fadds
mov
scas
imul
xor
ja
and
gs
sub
xor
jae
movsl
call
mov
fs
jmp
sub
push
mov
sbb
out
xor
xor
in
fsubr
push
sti
decl
cmp
xor
mov
es
sbb
dec
data16
shl
arpl
mov
xchg
push
jge
jmp
outsb
push
dec
push
arpl
mov
stos
repz
cli
pop
mov
std
pop
cmp
inc
les
test
xlat
call
pop
ss
inc
rcr
fists
bound
push
aaa
fs
and
jbe
frndint
leave
test
xor
idivb
arpl
scas
bnd
jle
pushf
hlt
es
xor
cli
mov
cmp
jae
jns
fldcw
fs
jge
andl
hlt
sbb
adc
xchg
cmp
inc
movsb
mov
add
mov
add
sub
jno
sbb
jne
push
mov
mov
mov
xor
rol
in
cmp
cmp
jl
scas
gs
inc
jae
lock
fdivl
sbb
ret
mov
jo
inc
jbe
out
cmpsl
adc
xchg
push
dec
lea
shll
mov
pop
popf
scas
out
inc
insb
mov
xchg
shrl
push
fdivrl
fisttpll
xor
cmpsb
jo
out
xor
push
adc
xchg
hlt
adc
mov
push
hlt
jo
stos
sbb
dec
mov
and
xor
adc
sub
dec
addr16
scas
jo
push
hlt
int3
scas
or
jmp
testl
pop
pop
push
das
sbb
jb
in
dec
inc
inc
ror
push
sarl
popa
outsb
jo
insl
repnz
fisubl
icebp
sti
jo
inc
mov
xchg
sub
ret
jno
pop
inc
adc
bound
jo
jae
xchg
cmpl
mov
in
jno
mov
les
loopne
popf
in
test
pop
ret
insb
mov
fs
jo
std
ja
mov
out
cmpsl
pop
daa
movsb
int
test
pop
xchg
xchg
cs
mov
mov
lret
and
or
dec
inc
xchg
test
mov
jo
adc
in
jne
mov
ret
adc
out
jmp
jo
lret
shrb
cmp
jecxz
and
mov
roll
sub
sub
outsb
lret
jmp
daa
mov
cmp
in
mov
test
ret
outsl
lret
jo
xchg
cmpl
mov
iret
push
dec
mov
int
add
push
adc
loop
jo
cmp
xor
fnstcw
fwait
jo
popa
mov
imul
in
call
jo
mov
int
pop
push
jnp
pop
pop
lret
xor
mov
adc
jo
stos
pusha
cmp
inc
mov
cmp
or
int
cli
aas
mov
xor
jnp
jo
xchg
imul
push
xor
lret
sub
jo
push
mov
jg
sbb
mov
pop
and
test
jo
cmp
or
push
paddusb
icebp
outsb
int3
adc
ja
aad
pop
hlt
out
dec
loop
or
lods
adc
jl
inc
clc
jle
jo
std
lahf
in
pop
andl
js
inc
push
or
pop
adcb
adc
jo
faddl
mov
xchg
call
test
sub
jg
push
mov
push
nop
in
mov
and
jo
addl
inc
repz
cmp
or
outsb
push
into
dec
inc
fcoml
sbb
ret
cmpsb
xchg
or
mov
jo
jmp
sbb
jo
repnz
bound
push
gs
xchg
cwtl
xchg
fwait
mov
xorb
or
push
dec
ds
or
adcl
mull
jp
push
jo
jge
adc
nop
push
stc
cs
mov
loope
test
jae
push
and
xor
push
pop
lret
fs
loopne
dec
cwtl
ljmp
jmp
or
loopne
sub
adc
das
push
dec
inc
sub
pushf
nop
popf
mov
add
push
or
mov
cwtl
in
lds
fstp
arpl
movsl
mov
push
je
sbb
xor
add
ret
jo
pushf
div
imul
test
jmp
pop
or
orb
jns,pn
adc
jl
std
inc
or
shrl
and
mov
xchg
inc
push
jo
jl
mov
nop
scas
or
xchg
sarl
clc
mov
dec
in
popa
arpl
int
pop
push
ret
jge
stc
aas
push
sub
jl
mov
jo
mov
dec
xor
sahf
xchg
xchg
and
or
jecxz
sbb
mov
mov
adc
je
into
xchg
push
and
add
inc
repnz
jecxz
pop
dec
lret
dec
movsb
lea
push
stos
loope
jl
popf
add
ds
jp
cmc
or
cmp
add
lcall
inc
stos
mov
out
mov
test
jge
scas
jo
jp
dec
outsl
and
int
xor
cmc
stos
jo
cmp
adcb
das
je
cmp
jo
push
cmp
jl
sbb
jo
jne
sbb
mov
xchg
fidivrl
mov
add
push
xor
lahf
les
xlat
jo
call
mov
scas
popf
mov
sub
jo
icebp
inc
jmp
ret
sub
pop
shrl
mov
jo
pop
pop
xchg
or
out
xor
mov
je
and
push
jnp
cwtl
fidivs
sub
cmp
xor
push
jo
je
es
mov
jo
ret
pusha
imulb
sub
jecxz
repnz
out
add
jge
loopne
mov
stos
fildl
jmp
ret
adc
jmp
add
addr16
ficoml
js
mov
sbb
std
insb
jle
push
aas
jmp
jmp
ds
iret
or
pusha
ret
mov
cld
dec
pop
je
or
lds
jo
pop
lods
cmpsl
sub
mov
jns
push
mov
arpl
xchg
jo
pop
fsubr
repz
test
and
sub
cmpsl
jecxz
jnp
mov
jo
jb
adc
sahf
jle
push
xor
mull
sbb
pop
clc
cmp
adc
mov
fcoms
addr16
jo
or
adc
stos
test
std
test
popa
ja
fsubrl
add
mov
sbb
test
cld
dec
cmc
pushf
dec
pusha
and
stc
int
loop
fstps
dec
cmp
popa
dec
lcall
xchg
ret
pop
pop
jo
stc
mov
lahf
mov
jmp
divl
js
orb
sub
or
popf
cmp
add
nop
pop
adc
and
xorb
in
jae
movb
cmpsl
jo
outsb
scas
cmp
mov
sbb
and
sbb
popa
lcall
jnp,pn
test
stos
xor
icebp
leave
jo
loope
dec
negl
adc
std
add
adc
insl
test
jge
mov
and
inc
fcmovbe
mov
pop
mov
xchg
mov
sahf
push
leave
sub
pop
loopne
push
out
cmp
mov
or
sub
into
jo
dec
sub
cmp
nop
cs
push
imul
dec
jne
jo
push
addr16
rcl
in
out
pop
rcll
push
add
push
jmp
bound
ss
mov
pop
xor
mov
inc
ljmp
pushf
shll
push
or
ret
xchg
mov
xchg
test
lret
loop
fs
jbe
push
jo
xchg
jp
cmc
ja
in
jo
mov
rclb
cmp
xlat
xchg
mov
ret
addb
jo
adc
arpl
jbe
pop
sbb
and
fwait
jge
insb
outsb
jg
bnd
add
dec
jo
sbb
mov
ds
sahf
shrb
stc
mov
cmp
lret
mov
sahf
cld
jne
push
jo
and
std
cmpsb
or
int
sbb
js
inc
cmp
fdivr
push
dec
push
push
or
jno
pusha
cs
xor
mov
imul
fidivl
inc
in
dec
jno
loope
repz
js
adc
int
jo
pop
nop
inc
adc
xor
xlat
aaa
out
fiaddl
pop
out
push
jo
je
jp
mov
dec
push
sbb
movsl
cs
jo
lods
inc
shlb
and
lock
jo
addl
pcmpgtd
mov
adc
es
in
lock
cmp
inc
out
or
jo
rol
divb
adc
ret
xor
jo,pn
pusha
lcall
test
rorb
in
jg
jmp
lods
dec
ja
inc
imul
mov
xor
sub
push
cmp
adc
icebp
loop
mov
nop
pop
gs
fcompp
jo
pop
cld
push
ljmp
stc
int3
in
call
out
add
lea
mov
push
push
insl
push
jne
fsubr
xor
lock
inc
fwait
xor
repz
jo
push
popf
or
cmp
inc
pusha
xor
nop
xchg
outsb
mov
adc
je
aaa
push
lock
xor
xlat
and
das
jecxz
shr
xor
jle
shlb
add
fstpl
ja
dec
pop
jo
dec
insl
push
jo
push
mov
lods
mov
ss
jo
mov
mov
jne
and
aaa
xor
sbb
mov
sub
mov
dec
arpl
roll
mov
xor
js
fadds
sub
loopne
jo
aad
xor
in
xor
sub
push
aam
cli
lcall
jo
jecxz
scas
fsubrp
aas
movsb
cs
lret
fdivl
js
repnz
jo
test
add
popf
insl
add
pop
adc
inc
rcrl
mov
es
push
mov
or
std
push
mov
lock
cs
xchg
xchg
or
mov
test
insb
add
xchg
insb
sub
nop
sbb
cmc
jb
cld
lods
jo
or
fldcw
jo
nop
xchg
dec
stos
xchg
jmp
cwtl
push
fdivl
xlat
dec
ret
xor
jne
push
jb
jmp
cmc
or
or
lea
out
js
mov
jo
adc
lods
sub
mov
or
in
loopne
ss
mov
push
add
sahf
cmc
js
and
xchg
cmp
sarl
push
jo
fisubs
mov
insb
jo
xor
out
fs
test
adc
mov
mov
loopne
sbb
sbb
cld
inc
sbbb
cmp
imul
mov
jo
movsb
scas
lcall
fs
xchg
jne
mov
lds
or
fprem
cltd
push
sub
dec
cld
or
sbb
je
hlt
and
mov
fsubrs
lret
mov
jo
jg
lcall
sbb
and
jo
push
and
jo
in
pop
or
icebp
jo
jbe
inc
call
sub
adc
and
inc
sbb
pmuludq
push
inc
push
scas
jo
mov
movsb
mov
test
dec
xchg
arpl
lds
popa
pop
ret
dec
fidivs
xchg
jo
test
in
leave
scas
in
stos
jo
and
sub
push
jno
push
inc
leave
or
jo
dec
mov
mov
pop
in
mov
push
mov
repnz
stos
ret
orl
lahf
jo
lret
out
je
aaa
fmuls
inc
out
ljmp
xor
jge
push
cmp
cs
cwtl
mov
cmp
inc
popa
jo
inc
outsb
cmp
mov
lahf
repnz
or
mov
mov
push
adc
out
fisttpll
ss
xchg
jo
mov
incl
mov
iret
popa
js
inc
jo
or
call
jo
pop
xchg
mov
mov
xor
inc
adc
pop
jo
sbb
push
push
push
mov
cld
notl
sub
or
inc
mov
test
cmp
jnp
adc
dec
xchg
ret
jo
cmp
cmpsb
int
popa
lahf
je
adc
test
inc
jl
adc
stc
or
cld
fdiv
andl
aas
push
fld
divl
add
mov
xlat
or
cmp
mov
adc
outsl
pop
xchg
mov
jo
cmp
test
cmpsl
int
inc
imulb
jo
mov
and
les
mov
xor
xor
xchg
imul
lea
das
push
add
mov
push
xchg
and
and
dec
insl
mov
ret
adc
mov
fs
in
dec
fiadds
jae
xchg
sbb
jo
test
mov
mov
icebp
jl
in
push
sub
in
push
add
jo
sbb
insb
data16
mov
sti
dec
jno
nop
jo
mov
mov
inc
jnp
push
in
je,pn
jo
sbb
pop
int3
pusha
js
jo
icebp
imul
mov
sub
or
testl
push
and
test
in
fs
shll
mov
out
ret
enter
jo
mov
sbb
jg
inc
test
xchg
sub
and
in
xchg
and
rcr
push
popf
in
cmpsl
icebp
ds
jo
sub
cmp
test
and
mov
out
out
into
add
jb
out
insl
hlt
push
imul
xor
filds
mov
in
jo
daa
dec
repnz
jae
jl
cltd
push
movsl
in
inc
sbb
pop
push
mov
popf
adc
mov
loope
int3
mov
mov
lods
ret
imul
in
arpl
push
int3
addr16
es
jb
arpl
pop
out
fisubrs
data16
cmpsb
sti
stc
sahf
sti
int
dec
xchg
cmp
orl
repnz
movsb
or
dec
mov
push
repnz
sbb
sahf
jecxz
xchg
int3
jbe
mov
out
adc
adc
pushf
mov
mov
inc
sbb
arpl
repnz
mov
and
lahf
fisttpl
jns
inc
adc
pop
sar
sub
arpl
or
cmp
iret
arpl
orl
mov
xchg
insb
xchg
ror
jb
fsubrl
ja
mov
push
inc
dec
test
and
scas
std
mov
frstors
adcb
xor
jo
mov
imul
daa
sub
push
out
je
vpsubusw
adc
add
loope
mov
xchg
xor
shll
cmp
das
add
push
pop
imul
and
mov
imul
vpand
add
iret
movsl
jb
jae
notb
cmp
ret
and
std
cmp
pop
es
pop
enter
cmp
into
push
pop
aaa
ja
jo
outsb
stos
in
movsl
push
pop
cli
adc
iret
xor
fldcw
sub
fs
jae
or
push
rdmsr
sbb
push
add
push
push
mov
sbb
adc
mov
js
adc
or
cmc
inc
lock
xor
sbb
xchg
adc
mov
out
int3
sarb
cltd
clc
xchg
or
push
push
dec
cmp
ljmp
decb
mov
gs
movsb
mov
sarb
and
shll
repz
sub
cld
int3
out
das
rcl
inc
push
loopne
pop
push
add
mov
ss
jecxz
iret
sub
xchg
push
sbb
push
push
pop
xchg
lods
mov
dec
scas
outsl
jg
mov
movsl
mov
pop
add
push
jb
mov
push
add
and
sbb
pop
jae
sbb
popf
daa
or
ljmp
jno
add
jg
insl
push
xchg
fisubl
cmp
add
addr16
cmp
xor
pusha
ljmp
xchg
ljmp
std
jbe
mov
js
arpl
mov
bnd
add
sbb
iret
mov
cmpsl
cld
outsb
sahf
add
dec
lea
jbe
daa
popf
cld
or
jnp
xor
or
mov
fyl2x
rcrl
add
outsb
sbb
repz
scas
stc
sbb
in
js
dec
pop
enter
or
pop
xor
or
cli
mov
jge
imul
mov
idivl
shlb
leave
cmp
insb
lea
mov
push
test
and
mov
inc
hlt
jno
push
fsubrs
sub
push
or
xor
pop
arpl
xor
std
sbb
jnp
cmpsl
rcr
outsl
fnstsw
divb
mov
fldl
aad
inc
lahf
jae
push
sbbl
test
sbb
int3
nop
out
add
cmpsb
scas
movsl
shl
addb
sbb
imul
shl
mov
mov
scas
cs
xchg
pop
adc
mov
loop
cmc
sbb
decl
nop
ret
mov
cmp
insb
in
and
jb
jecxz
push
and
xor
aas
mov
mov
inc
adc
dec
popf
mov
movsl
test
and
sbb
mov
out
insl
mov
enter
push
add
xor
mov
push
sbb
bound
and
mov
aad
xchg
mov
arpl
sti
in
cmpl
std
xchg
fisubl
fs
push
aad
mov
mov
jg
int
jge
loopne
jle
inc
pop
or
out
pop
mov
pop
adc
add
push
outsb
jae
mov
pop
and
cmpsl
dec
dec
outsl
jae
sub
sub
jae
fldl
fists
sbb
xlat
pop
add
pop
mov
jno
cld
ja
dec
frstor
stos
rcrl
or
pop
movl
push
loop
or
subb
movsb
push
cs
ss
stos
andb
pop
sbb
jae
adc
sub
loopne
pop
sbb
mov
movsb
add
or
arpl
out
mov
and
mov
xchg
lcall
mov
fsubp
aas
imul
and
or
sub
push
insb
hlt
push
lret
cmpsb
sbb
sbb
jno
mov
in
lods
jno
mov
imul
shlb
fs
arpl
lret
or
in
xor
sbb
xchg
xchg
cmp
outsl
imul
in
scas
js
inc
cmpsb
add
jae
xor
lods
jmp
repnz
jecxz
iret
sarl
into
jbe
arpl
lret
push
mov
in
jmp
sub
xchg
push
jle
addb
push
inc
jle
out
ljmp
xor
mov
mov
jne
add
bnd
push
mov
outsb
mov
mov
jge
add
repnz
jno
adc
out
push
lret
flds
jle
sahf
pop
int3
outsl
test
jecxz
imul
repnz
insl
push
xchg
mov
insb
lret
sub
out
imul
pop
mov
push
xor
sub
popa
ljmp
into
lret
mov
call
push
jae,pt
push
icebp
ljmp
int3
xchg
dec
out
cmpb
jae
repnz
jg
sar
add
cmc
jle
cmpsb
jae
test
or
out
popa
adc
rcl
mov
xchg
fidivl
add
scas
sub
fisubrl
and
std
push
test
cs
shr
xor
mov
mov
pop
lds
movsl
mov
scas
xchg
in
cs
lret
inc
pop
cmc
jecxz
jl
jns
sub
xor
add
lds
cltd
push
cmpsb
lret
pop
jo
adc
pop
addr16
pop
dec
cld
adc
out
dec
jle
sbb
pusha
sub
arpl
int3
outsb
mov
hlt
and
xchg
xlat
sarl
test
scas
testl
adc
js
arpl
xchg
stc
adc
inc
fldcw
cmp
lock
push
push
adc
jae
push
pop
push
pop
in
sub
fisubl
hlt
iret
fadd
inc
mov
mov
mov
daa
add
adc
xor
jbe
fldcw
sbb
lcall
add
adc
sbb
fadds
mov
or
fs
xor
mov
rcll
int
add
adc
sbb
and
jle
int3
jae
roll
inc
arpl
xor
out
repz
aam
push
xchg
loope
inc
mov
or
dec
clc
test
outsb
aaa
scas
dec
mov
xchg
rorl
push
int3
xor
int
test
pop
pusha
and
cmp
and
mov
sahf
sbb
mov
call
flds
inc
loopne
jmp
push
roll
lcall
inc
sub
ror
sahf
ret
add
jmp
dec
adc
int
jp
gs
mov
cs
js
add
mov
stos
clc
test
and
or
sbb
mov
mov
adc
jmp
and
and
jg
or
add
jmp
rcrb
sbb
inc
push
push
xor
data16
push
test
jp
mov
je
ds
push
inc
lods
mov
imul
xchg
mov
andl
or
int
and
cmp
lds
push
add
xor
insb
mov
inc
les
adcb
xor
decb
or
insb
pavgb
aad
loop
pop
xor
and
adc
xor
cltd
jo
jno
cmpsb
mov
add
jo
or
sti
or
and
js
rorl
outsl
sbb
data16
jo
decb
pop
push
test
mov
sub
jo
out
inc
dec
sbb
dec
pop
push
or
dec
sahf
nop
mov
shrl
insb
jo
push
fldlg2
jecxz
imul
dec
mov
xchg
jp
repz
cmp
notb
popa
push
jl
xchg
jo
inc
jne
xchg
ret
cs
xchg
jnp
movsb
and
es
loope
aam
jo
sarl
jmp
jo
jecxz
insb
and
jmp
sbb
cltd
in
push
in
inc
cmp
fs
fs
outsl
movsl
int
rorb
jnp
jp
pop
jo
enter
out
mov
addr16
fsub
call
mov
adc
fsubs
add
jnp
xchg
inc
adc
jo
dec
js
pop
add
ss
pop
jae
and
ficoms
pop
ljmp
push
add
ja
ds
pop
or
mov
ret
pop
bndldx
ljmp
ja
and
in
shrl
mov
add
jo
bound
jo
add
loopne
xchg
mov
push
fadds
sbb
stos
fcmove
xchg
jp
rclb
cmpb
bound
out
jp
xchg
push
jo
pusha
add
sub
int
xor
out
xor
aas
sub
push
movb
mov
add
jo
into
mov
sub
jo
jno
negl
dec
loop
sarl
or
inc
sub
and
dec
test
push
hlt
cs
int3
lods
mov
js
pusha
clc
fcomps
adc
bound
dec
inc
inc
jo
inc
cmp
sbb
mov
out
cmc
shl
ljmp
jge
lea
pop
jecxz
pop
cmpsb
insl
lock
test
mov
aas
add
movsl
lods
sarb
adc
jno
outsb
mov
jo
add
jmp
jo
test
repz
mov
xorb
je
lock
pop
push
aaa
xchg
adcb
mov
fs
pmulhw
subb
incb
insb
ret
aas
sar
cmc
cmpsl
inc
xor
movsb
push
jbe
cltd
imul
test
cmp
adc
fucomip
bound
mov
aas
xchg
lea
jo
mov
sti
dec
cmc
loopne
adc
mov
mov
jo
outsb
push
loop
jnp
insl
mov
dec
in
cmp
leave
push
loope
in
push
cs
jns
sub
fmul
imul
push
popf
cmp
dec
sarb
lods
mov
mov
call
in
clc
jne
jo
daa
pusha
jg
cltd
mov
jns
jle
ds
jmp
lret
sbb
push
push
fdivs
push
daa
notb
push
pop
pushf
shrl
in
xchg
ret
sbb
push
push
mov
jno
jo
jl
push
jge
or
xchg
jbe
or
pop
cld
xchg
mov
add
xlat
outsl
xchg
pop
mov
cmpsb
sarb
jno
jnp
ljmp
add
jo
mov
fucom
daa
icebp
push
add
das
fs
adc
jp
push
mov
sbb
mov
sub
dec
xor
shlb
xor
repnz
pop
jns
add
subb
adc
sub
ljmp
mov
pop
push
fcmove
inc
je
jo
dec
mov
gs
push
dec
vpmacsdqh
cli
jo
mov
inc
add
pop
push
push
repnz
mov
insl
jle
cmpl
pusha
mov
mov
or
pop
push
jne
adc
fidivl
sarb
movsl
push
std
adc
push
lock
je
xor
jo
outsl
pop
repz
or
sahf
lods
push
or
sub
movl
mov
and
cltd
dec
xchg
test
jo
push
dec
xchg
sub
jo
lock
sub
bound
sub
daa
orl
push
js
cmc
pop
lret
jo
fistpll
sub
sbb
sti
fisubs
push
add
and
ret
rcll
jo
mov
mov
jo
cltd
int3
test
push
aad
jo
xchg
inc
gs
loop
sub
test
push
sub
divb
nop
jb
jne
int
jmp
insb
es
icebp
lcall
dec
ffreep
lret
push
stc
cltd
push
lea
sbb
jno
jo
inc
out
cmc
pusha
scas
daa
push
and
dec
mov
jns
pop
xchg
inc
xchg
inc
sub
dec
lcall
jge
jnp
xchg
nop
cmp
pop
jl
pusha
dec
jo
xor
clc
int3
bound
data16
ja
popa
divb
push
and
jo
bound
push
cmp
add
dec
mov
pop
int
pop
int3
fwait
movsb
jle
lret
arpl
jo
pop
xorb
cld
test
pop
jo
leave
jns
movsb
jo
call
mov
loop
fdivr
sbb
jo
cmpsl
aad
testl
cmp
and
mov
push
dec
jmp
jo
clc
pushf
sbb
into
gs
dec
int
je
sbb
lds
cmpsl
push
push
jo
adc
enter
mov
adc
mov
out
stos
jmp
cmp
jo
jp
dec
cmp
ret
xchg
adcb
sarb
mov
dec
sub
cld
jl
push
or
mov
push
test
cltd
in
cwtl
pop
pusha
push
lock
sbb
hlt
into
mov
shl
jo
arpl
cmpsl
test
push
jo
les
push
adc
pop
outsb
jo
mov
mov
push
pop
call
test
popa
jbe
les
xchg
sbb
fwait
scas
jo
imul
loop
jo
push
leave
in
cmp
push
inc
popf
jecxz
jns
jo
mov
jmp
jo
cmp
mov
or
jo
push
ficomps
add
jo
aad
das
mov
imulb
push
in
jo
jnp
pusha
call
lret
into
or
test
in
cmp
sub
and
xor
out
push
mov
cmp
or
cmpsl
mov
hlt
aam
dec
test
nop
inc
out
lods
and
push
jp
loop
push
adc
jmp
cmpsl
add
jecxz
popa
or
xchg
mov
sbb
mov
js
ret
jo
pop
and
cmp
std
push
mov
mov
out
nop
pop
adc
sbb
jo
push
inc
push
aad
add
popa
mov
push
dec
inc
adc
pusha
int3
bnd
xchg
sub
jo
add
pusha
cmovno
sub
scas
jns
dec
divb
pop
pop
out
imul
mov
or
push
out
mov
aas
movsb
adc
ja
mov
pop
hlt
pop
aaa
jae
fmull
pop
add
fwait
push
loopne
xchg
mov
daa
xchg
insb
cmp
sub
das
mov
out
lret
inc
adcl
jmp
push
mov
sub
insl
jbe
add
inc
xchg
rclb
shl
mov
and
clc
inc
ret
xchg
lea
insb
pop
ja
es
xchg
fwait
test
bnd
test
mov
int
lock
popa
das
and
pop
fs
addr16
sbb
jo
or
pusha
sbb
and
cmp
push
dec
sub
das
pop
push
addl
arpl
js
in
jo
pop
and
mov
add
xor
orl
jl
into
iret
cmp
orb
mov
lock
jo
pop
cmc
jno
sub
xchg
in
daa
xchg
sti
xchg
inc
subps
fistl
stos
data16
mov
scas
sahf
popl
pop
test
ljmp
dec
jmp
out
popa
push
idivl
jle
cmp
imul
mov
jbe
out
add
adc
stos
or
fcoml
jo
mov
inc
ret
leave
aaa
repz
cmpsb
stc
jp
dec
xor
notb
cmp
mov
dec
sbb
xchg
mov
mov
xor
sahf
test
fidivs
push
cmpsl
lods
cmp
ss
jo
jns
sub
mov
pop
add
jo
cmp
xchg
int
imul
test
lret
sub
in
mov
subl
jo
cwtl
xor
push
inc
fbstp
or
les
or
dec
and
fs
jb
xchg
imul
fwait
jecxz
jo
and
push
clc
leave
and
cmpb
dec
mov
rcrb
xchg
pop
in
jo
outsl
mov
icebp
in
fmull
int
int3
add
js
das
orl
push
sbb
xlat
flds
or
cltd
enter
jo
sti
push
jmp
sahf
sub
sbb
mov
push
jne
adc
jl
ss
fstp
mov
mov
jo
insb
lret
bound
out
lcall
inc
jo
sub
push
out
xchg
inc
outsb
sbb
xor
test
inc
cmc
out
fsubrs
mov
arpl
mov
cmpsl
sahf
inc
fsubrl
jle
jo
push
pop
xchg
adc
aam
mov
adc
mov
mov
jg
xchg
mov
inc
cmp
sahf
lds
dec
mov
sub
jne
repnz
inc
mov
mov
mov
push
dec
jno
leave
test
xchg
xchg
paddusw
pop
sbb
pop
jo
xchg
out
lahf
push
add
mov
or
cld
rcr
scas
fs
mov
jl
test
jb
add
lret
inc
int3
in
xchg
bound
pop
aaa
inc
aas
sub
fcmovnbe
pop
and
adc
inc
sbb
in
push
mov
cmpsl
in
lret
mov
scas
sbb
push
out
sub
push
xor
jo
xor
test
mov
pusha
cmpsl
xor
or
jo
push
adc
int3
sbb
jno
jo
pop
adc
jo
xor
into
out
imul
mov
push
jo
cmp
inc
jmp
pop
pusha
cmp
add
repz
jo
lock
int3
xchg
std
rol
aaa
jo
mov
jns
jl
lods
inc
test
mov
jo
lock
leave
jo
sbb
jns
mov
mov
push
dec
loopne
pop
xor
push
jg
fucomip
insb
push
sti
push
xor
icebp
dec
push
jp
stc
inc
push
lahf
fistpl
loope
shrb
mov
mov
jecxz
daa
dec
push
adc
daa
xchg
xchg
mov
cltd
scas
sti
cld
add
mov
jmp
arpl
cmp
push
inc
mov
shll
mov
xor
mov
dec
pusha
mov
cmp
push
movsl
shlb
js
in
arpl
jo
add
test
xchg
sbb
das
adc
jnp
sub
fnstsw
sysexit
and
mov
insl
jl
mov
addr16
or
pusha
loop
jp
mov
cmp
pop
jo
mov
data16
push
push
icebp
cmp
sbb
mov
leave
adc
mov
je
xchg
or
andb
nop
lds
add
mov
addr16
ss
xor
inc
pushf
aad
sub
and
jo
push
call
sbb
xor
pop
or
loope
sub
jbe
nop
sbb
pop
enter
lea
jae
mov
out
cmp
pandn
andl
hlt
jo
es
call
sub
rcll
push
addr16
jo
push
jne
pushf
cs
pusha
nop
insb
fwait
lock
in
sbb
mov
je
nop
fwait
iret
out
jmp
mov
gs
pop
jo
add
cmpsl
mov
inc
jo
add
pop
addr16
outsl
repnz
addr16
mov
idivl
pop
and
xchg
xchg
or
imul
jo
ffreep
and
rorb
cmp
pop
data16
jno
xchg
jecxz
dec
inc
mov
lret
shlb
stc
jl
add
add
sbbb
inc
jnp
cltd
sbb
stos
jge
or
mov
and
or
fs
in
xchg
push
mov
movsl
jo
jne
or
loopne
nop
paddw
jno
push
stos
jo
cmpb
sbb
jo
cmp
jle
mov
or
in
jns
cwtl
xor
lds
xor
sar
mov
mov
pop
loop
pop
test
xchg
sbb
fiaddl
movq
mov
inc
pushf
mov
xor
fistps
jno
inc
into
push
jmp
sub
sub
or
push
add
push
xor
fnsave
mov
cmpsb
shll
fildll
loopne
sub
in
pop
hlt
sub
mov
jae
flds
lods
add
gs
aaa
outsb
xchg
mov
push
push
pusha
sar
sbb
out
xchg
fnsave
cmpl
jp
and
add
fldl
ja
cmp
je
jmp
and
dec
out
sbb
dec
mov
cwtl
or
addr16
mov
xchg
xor
inc
das
test
aaa
data16
push
pop
rol
out
or
push
iret
insb
mov
repz
repnz
jae
sti
std
add
arpl
pop
inc
inc
fldcw
movl
and
das
arpl
mov
fistl
jo
lahf
pop
lret
mov
jmp
std
inc
out
ljmp
xchg
adc
rcrb
test
aam
loopne
xor
push
les
scas
out
xchg
rorl
sbb
dec
icebp
adc
popf
sbb
dec
filds
mov
mov
out
jns
jecxz
jg
lock
push
mov
arpl
pop
cmp
mov
and
mov
es
xor
mov
add
pop
int3
inc
mov
push
mov
addr16
dec
xchg
mov
adc
jmp
jp
inc
xchg
and
jg
push
int3
sbb
push
mov
cli
mov
les
arpl
cmp
das
xchg
lret
fs
adc
mov
mov
mov
and
arpl
aam
jne
lahf
xor
dec
decb
aad
mov
xchg
ljmp
jne
lahf
push
popa
inc
dec
lds
sbb
iret
mov
add
and
std
jecxz
gs
mov
sbb
bnd
ja
sti
cmp
and
sbb
mov
ror
je
sub
cmp
mov
sbb
mov
dec
arpl
mov
repnz
pop
and
out
cmpsb
push
sbb
pusha
aad
and
pop
fs
std
js
inc
jno
shlb
lcall
sub
mov
movsl
xchg
and
mov
and
cwtl
sub
cltd
dec
in
pop
aaa
inc
ffreep
aas
fwait
mov
and
sahf
cmp
data16
insb
jno
mov
lock
xor
lock
divb
decb
and
push
repz
repnz
fldl
mov
xchg
arpl
push
sub
pop
mov
and
lds
jnp
das
andb
repnz
mov
add
ret
inc
push
dec
dec
cmp
cli
std
and
adc
push
sbb
dec
jp
packsswb
shl
adc
jmp
int
pop
js
add
push
shlb
sub
lea
xchg
xchg
adc
lods
rclb
fldenv
pop
dec
lcall
ds
push
jno
call
jl
xchg
ljmp
fdivp
nop
mov
jecxz
cmpsb
add
loopne
pusha
lcall
mov
test
inc
mov
push
fnstcw
movb
push
sub
lods
dec
nop
outsb
push
ds
out
stc
sub
xor
fnstsw
mulb
push
pushf
inc
ja
push
jl
jns
nop
cmp
movsb
repz
mov
in
mov
adc
fcomip
loopne
je
arpl
das
ror
leave
fsubs
insl
in
wbinvd
clc
lahf
subb
stos
pop
jl
jae
sbb
imul
jecxz
mov
push
js
enter
xchg
lods
sti
lds
daa
lret
andb
pop
inc
push
push
insb
ss
push
xor
fxch
std
sub
enter
call
andl
push
xchg
or
inc
in
mov
jl
subb
pop
movsb
inc
jg
and
push
cmp
out
into
in
xlat
ljmp
adc
and
fptan
cmp
mov
cmp
jns
sbb
mov
xlat
add
repnz
jb
cmpsb
std
pop
sub
lret
ja
arpl
aad
jnp
mov
lods
inc
sbb
push
pop
and
add
xor
clc
gs
fmul
insb
push
subl
sbb
adc
shrl
js
or
scas
fistpll
fnsave
repz
push
arpl
wrmsr
fists
outsb
inc
mov
fstps
inc
push
lea
mov
ja
movsl
lock
stc
in
mov
xchg
sahf
icebp
stos
ror
mov
cmovbe
jmp
pop
push
push
or
or
push
cmp
jno
cmp
xchg
dec
xor
imul
call
push
mov
sbb
jp
loopne
inc
jns
or
sbb
or
cmc
in
lea
fcomps
outsl
jg
push
sbb
inc
add
pop
arpl
inc
pop
shlb
dec
pop
cmpsb
jp
xchg
test
xchg
xor
mov
jbe
in
mov
mov
jns
les
out
or
loopne
ss
or
mov
and
cmpsl
pushf
sbb
sbb
lods
out
subb
jae
push
jno
insl
dec
int
daa
mov
ljmp
addl
push
dec
out
and
out
jns
pop
neg
adc
in
insb
in
jnp
fcmovu
push
and
hlt
and
push
or
mov
inc
or
shlb
mov
jno
cmp
sbb
int
pop
jle
daa
aaa
bnd
in
push
arpl
cmp
sub
test
push
jae
mov
xchg
fcom
mov
scas
push
inc
cmp
mov
rcr
mov
pop
xchg
jbe
push
push
addr16
fistpll
cmc
or
out
sub
xor
stc
in
call
sub
imul
fs
imul
test
cmc
hlt
mov
sbb
je
xor
sbbb
pop
out
mov
jo
daa
movsl
push
jae
xor
pop
mov
gs
push
mov
inc
int
pop
bound
js
idivb
push
sbb
add
cmpsl
xchg
popf
jmp
mov
fnstenv
lods
inc
cmp
and
sbb
fs
xchg
arpl
pusha
inc
js
xchg
outsw
inc
bound
jns
out
cmp
pusha
or
xor
mov
mov
test
lds
int
dec
sti
push
jge
jo
sbb
mov
out
rcll
mov
add
test
loopne
mov
dec
push
xor
cld
mov
mov
mov
xchg
jo
dec
ljmp
test
mov
push
imul
cmp
and
inc
mov
or
mov
nop
ficoms
xchg
cmc
xor
jb
xchg
jo
and
inc
xchg
mov
dec
jmp
jp
or
sbb
in
outsl
addb
inc
fstps
inc
inc
in
rcl
std
xchg
insb
js
pop
jecxz
cmp
addr16
push
mov
in
mov
movsb
lea
test
push
shl
pop
and
xor
inc
dec
pusha
add
jo
gs
arpl
insb
aam
pop
pop
cld
stos
arpl
stc
pop
or
scas
pop
mov
push
cmp
jecxz
pop
or
orb
scas
cwtl
adc
out
push
lret
fadds
bound
leave
or
push
out
out
addr16
sbb
inc
fs
mov
stc
in
jae
shrb
mov
divl
mov
or
icebp
dec
std
int3
int3
inc
loop
pop
in
fistpll
xor
pop
fists
sub
cmp
sub
ret
call
stos
xor
xor
imul
cmp
pop
jo
inc
xchg
xor
mov
cmp
out
cmpsl
repz
mov
fnstcw
cmp
cwtl
xchg
jae
adc
adc
mov
shr
lcall
inc
mov
push
insb
fistpll
out
int3
jecxz
push
pop
sbb
or
jno
pusha
ret
in
ret
fisubrl
mov
out
dec
inc
sbb
out
xor
insb
mov
push
scas
jno
pushf
test
and
hlt
test
add
xchg
jl
in
jmp
pop
fimuls
out
movsl
push
sub
xchg
rclb
push
int3
jmp
push
jle
jae
cmp
sbb
or
and
dec
mov
enter
push
arpl
ljmp
sbb
andl
leave
xchg
jne
lahf
js
outsl
out
inc
arpl
jmp
cmp
sar
aam
push
fisttpl
jmp
insl
jp
mov
dec
mov
fstl
xorl
lock
jno
movsl
mov
rorb
adcb
jecxz
lock
jg
imulb
insl
pop
aaa
jge
sbb
push
shl
jae
jbe
in
fwait
test
imul
mov
adc
push
popa
or
jo
je
add
mov
xchg
nop
adc
xlat
jle
mov
xchg
cltd
dec
nop
sub
or
jb
popf
nop
push
iret
dec
scas
and
jo
mov
fmul
pusha
mov
imul
pushf
int3
lea
mov
cmp
ds
repnz
cmp
sbb
jo
in
cmp
test
xor
dec
repnz
data16
xor
rorl
xchg
in
les
and
cmp
jo
stos
adc
jo
and
gs
aad
fwait
jo
mov
or
pop
sbb
sti
pushf
mov
inc
bound
dec
cmp
orb
ret
loope
icebp
shlb
fsubl
and
jo
xor
mov
and
jae
lahf
jo
clc
xlat
dec
push
ja
mov
adc
mov
jo
push
hlt
cmp
pop
mov
and
push
adc
in
out
jo
inc
icebp
cli
jecxz
fists
pop
insb
pop
stos
mov
push
or
cmp
push
add
fmul
dec
and
cltd
insl
jecxz
jns
inc
insb
jo
and
ret
gs
lock
cs
sub
sbb
jb
stos
gs
jo
xchg
jnp
divl
mov
out
push
dec
or
pop
into
mov
cmpb
xchg
jns
test
jnp
sub
cmp
pop
jne
mov
fisubrs
es
jo
iret
mov
xchg
les
xchg
dec
mov
jo
cwtl
cmp
jo
stos
iret
xchg
inc
mov
cmpsb
hlt
fadds
cmpsl
js
xor
mov
jo
ds
bound
adc
fistpll
push
xchg
adc
jo
mov
scas
gs
sub
cltd
mov
aad
push
icebp
frstor
in
mov
or
mov
sbbb
mov
subl
adc
mov
jo
test
push
cmp
fwait
inc
inc
dec
bsr
sub
and
in
outsb
shlb
sbb
das
sbb
mov
out
lock
push
decb
adc
dec
shlb
push
adc
add
push
test
cmc
scas
jo
mov
mov
jae
jo
xchg
jge
or
inc
xor
lcall
xchg
mov
sbb
in
xchg
std
popa
and
sub
mov
jo
fnstsw
out
adc
ds
jne
mov
ret
divl
std
mov
out
sbb
mov
jle
rorl
adc
out
xchg
pop
push
sbb
jecxz
adc
fs
icebp
rcll
out
jnp
sti
lahf
jo
cmp
mov
jo
aas
cltd
or
jmp
inc
shlb
mov
lods
sub
dec
jo
mov
xchg
or
dec
push
fldenv
je
pop
popa
mov
add
adc
in
aam
jo
stc
xorl
sbb
bound
in
ljmp
jb
loopne
push
mov
pop
push
jo
mov
fdivr
jno
jae
adc
in
je
mov
jmp
das
push
mov
push
xchg
fucomip
insl
push
jo
inc
xor
fsub
mov
pop
mov
mov
pop
hlt
add
inc
sub
inc
fwait
jns
insb
sarl
sahf
mov
stc
xchg
jo
test
ja
bndldx
jge
rol
daa
dec
cld
icebp
push
add
fs
shl
xchg
aaa
dec
jae
mov
pushl
cmp
rol
outsb
clc
jo
fldenv
sub
add
in
js
push
pop
jo
push
out
cvtps2pd
mov
cs
xor
mov
mov
ret
jmp
push
pusha
jo
icebp
xor
rcll
call
shr
pop
jno
jb
popa
inc
in
shll
iret
sbb
sub
or
jp
test
xor
xorb
push
jo
test
shrl
setbe
sbb
aaa
pop
push
pusha
stos
xor
xchg
jo
out
xchg
xlat
mov
add
pop
adc
int
ret
sahf
int
jns
daa
inc
call
mov
test
fnsave
jo
jmp
lcall
jle,pt
out
cmpsb
mov
mov
push
or
jge
outsb
jl
insl
xchg
ljmp
fcoml
test
mov
cmpsb
inc
orb
test
jo
push
in
pusha
sub
jo
popf
mov
or
imul
push
adc
roll
jo
xchg
movsb
jg
push
or
mov
test
jo
incb
loop
adc
out
es
into
inc
pop
fistps
aad
jmp
insb
fwait
lcall
js
out
adc
cs
stc
push
jle
mov
test
leave
lds
jl
xor
mov
cltd
push
xchg
sarl
enter
jns
xchg
sub
hlt
jo
jmp
mull
push
addb
push
sub
add
and
xchg
loop
mov
icebp
lcall
sahf
shl
jg
scas
sub
fisubs
jbe
clc
fdivs
nop
ss
dec
ret
adc
xor
es
adc
stos
mov
sub
jo
jbe
sti
cld
std
ljmp
adc
adc
out
prefetcht0
mov
dec
jle
sub
pop
cmc
js
pop
push
push
loopne
mov
mov
jo
mov
or
jo
jle
lods
jp
xor
jo
lret
movsb
pushf
sahf
scas
xchg
mov
testl
enter
mov
dec
xor
xor
mov
push
mov
mov
das
mov
cmp
xchg
popf
popa
movsb
sbbl
test
sbbb
jo
call
sbb
xchg
test
cmp
gs
sbb
movsb
cmpsb
lods
mov
sub
repnz
xchg
shr
rorl
test
jo
mov
jae
jns
lea
addr16
jne
dec
adc
test
fwait
cmp
mov
jg
dec
or
rorl
dec
jbe
xor
jg,pn
addr16
outsl
ljmp
cmpsl
ret
fwait
fdivrl
jb
sbbb
ds
stos
sub
decb
adcl
pmulhuw
into
scas
icebp
inc
sar
int
sbb
lret
cmp
dec
loopne
pop
pop
or
jo
add
pusha
hlt
mov
jo
push
ja
je
jo
sti
fadds
cs
jae
fs
inc
xor
sub
addr16
push
xor
js
mov
mov
jno
fdivs
cs
lret
or
jo
jmp
loopne
dec
sbb
jo
dec
jns
lcall
lahf
jo
stos
ds
jb
sub
jge
repz
pop
fsts
jo
sub
lods
hlt
ret
push
mov
xchg
cli
fidivrl
mov
frstor
test
sub
jo
dec
jg
mov
je
push
pmullw
pushf
addb
inc
pop
xor
xor
sbb
and
jo
scas
arpl
jg
adc
jge
dec
nop
and
lea
xchg
imul
pop
jo
xchg
fcomi
test
jo
test
lret
mov
xchg
xchg
push
sub
aam
loop
add
lds
sbb
and
push
xor
dec
mov
cli
pop
jne
cltd
pop
int
dec
mov
leave
jno
jecxz
xchg
jle
push
jge
test
push
sbb
xor
cmp
push
jmp
divb
leave
mov
and
fiadds
jo
add
inc
cmpsl
ret
xor
out
pop
push
adc
repnz
icebp
imul
inc
inc
sbb
dec
jl
mov
jns
cli
lock
mov
xor
xchg
dec
insl
ds
outsb
dec
fucom
cmpsl
dec
lcall
and
push
jno
jle
cmpsl
cmpsl
xor
int3
jae
xor
dec
ljmp
sbb
mov
xor
repz
int3
fsts
pop
out
xchg
mov
jp
xchg
shl
lock
push
mov
arpl
imulb
sbb
mov
nop
ss
popf
arpl
mov
cltd
ja
test
adc
xchg
add
test
push
in
xor
scas
or
pop
sti
nop
fs
or
scas
daa
jae
jno
push
mov
push
sub
imul
nop
jns
push
loopnew
jmp
xor
inc
loopne
mov
push
jns
jl
jmp
add
jno
insl
in
lock
test
jmp
in
lods
mov
xchg
sti
arpl
jg
and
arpl
jbe
int3
scas
cmp
sub
adc
les
jae
jmp
test
inc
fwait
mov
add
push
cs
sub
test
fisubrl
lock
xor
fstpt
mov
jecxz
test
jae
sub
test
dec
cmpsl
adc
jne
fldln2
dec
mov
hlt
lahf
fldt
inc
mov
cmpsl
push
xchg
sbb
inc
scas
scas
call
aaa
mov
outsl
dec
pushf
jns
pop
lcall
dec
sarb
andb
enter
mov
pop
mov
cmp
push
adc
in
cmpsl
push
cltd
int3
cmpsb
and
cmpsb
jae
int
jg
in
imul
insl
mov
out
xlat
cmpsl
jle
add
mov
jae
outsb
arpl
cmp
mov
push
sbb
fstl
dec
mov
daa
xchg
cmpsb
jns
push
inc
xchg
cmp
gs
lret
adc
aas
adc
aaa
in
cwtl
lock
mov
mov
mov
xchg
push
push
cmp
mov
xchg
mov
repnz
data16
fs
in
cmpb
out
fisubl
inc
mov
jae
pop
mov
dec
lods
fsubl
or
jo
sbb
or
push
mov
xchg
and
jle
arpl
inc
add
push
mov
add
sbb
jne
and
or
in
inc
push
sarb
out
dec
xor
xorb
jecxz
pop
ljmp
sub
mov
push
out
hlt
mov
lret
xchg
sub
fmull
jp
and
mov
mov
movsl
aam
popf
dec
cmpsl
sub
inc
pop
sti
mov
in
mov
mov
jg
dec
inc
and
cmp
sbb
lods
sbb
mov
mov
push
mov
in
pop
and
dec
mov
sahf
mov
loop
stos
adc
pop
addr16
rcrl
jbe
shlb
lahf
push
test
sub
dec
or
pop
enter
scas
add
dec
pop
mov
pusha
loopne
adc
add
cmp
mov
fdivrs
xchg
mov
movsl
and
pushf
inc
int
add
dec
mov
or
addr16
push
jp
pushf
jmp
inc
push
mov
jecxz
mov
leave
pop
dec
insl
jecxz
test
fs
iret
jae
fbld
loopne
mov
in
jne
insb
add
cmc
pop
imul
loop
jmp
push
in
inc
cmp
xchg
dec
or
mov
xchg
mov
outsl
xchg
sbb
adc
jb
cmp
leave
jae
mov
sub
repz
mov
jnp
and
mov
xchg
clc
inc
js
mov
jo
mov
pop
jge
es
sbb
inc
push
dec
cmpb
arpl
das
nop
mulb
in
inc
scas
push
pop
mov
imul
xchg
pop
pusha
dec
add
iret
out
leave
cmp
div
cmc
mov
fwait
das
arpl
xchg
push
push
xchg
mov
adc
out
and
cmpsl
cli
aam
jae
xchg
call
sub
jae
js
arpl
mov
lcall
inc
in
or
nop
adc
pop
cwtl
test
in
in
lds
ss
push
jecxz
jge
jae
xor
and
pop
inc
mov
nop
xlat
out
push
adc
sbb
adc
js
sbb
jo
dec
mov
mov
lcall
ljmp
cmpsl
loopne
ljmp
cmc
lahf
xchg
and
cmp
outsb
mov
jmp
jo
icebp
push
mov
or
adc
adc
outsb
jb
repz
int3
pop
dec
xchg
outsl
jo
aad
dec
pop
nop
cli
loopne
iret
sub
out
jb
rcr
inc
push
jo
scas
dec
stos
sbb
test
pusha
push
xchg
loop
movsb
faddl
nop
cltd
and
jo
push
arpl
sahf
add
xchg
jo
cmp
mov
jo
mov
pusha
jo
sbb
mov
shlb
addl
loop
int
shr
js
mov
and
jo
cmp
mov
repnz
mov
add
mov
mov
leave
jecxz
loop
aad
pop
imul
js
arpl
fisubs
jb
lcall
movsl
push
imul
mov
call
or
sub
jo
pop
mov
push
jo
repnz
push
dec
xor
jo
mov
mov
or
jo
fsubl
pop
shl
jo
sub
ljmp
jo
shlb
es
mov
mov
mov
hlt
jo
fcoms
mov
jl
ljmp
nop
icebp
inc
movsl
dec
iret
pop
ja
aad
jo
cmp
jecxz
ret
and
jo
mov
push
hlt
jo
inc
daa
fwait
sbb
popa
push
jbe
push
jp
add
mov
xchg
xor
jo
cmp
insl
mov
in
xchg
push
mov
hlt
cltd
dec
jns
and
sub
cmp
popa
sti
aam
mov
lods
gs
xorl
loope
cmp
jo
aam
mov
jo
dec
outsb
mov
mov
movlps
into
test
subl
leave
out
xorb
push
mov
iret
pop
adc
inc
add
sbb
insb
loope
stos
in
push
jno
pop
rcll
mov
add
sti
cli
adc
leave
addr16
movsl
lcall
dec
lock
jge
push
xor
in
sub
pop
add
or
inc
pop
loope
aaa
sbb
fnstcw
add
bt
fidivrl
jo
push
push
pop
nop
fs
jo
fiaddl
int
xchg
movsb
cltd
leave
pusha
push
cwtl
add
paddb
scas
jnp
mov
call
mov
repnz
add
int
rolb
cmpsb
and
fsubl
int3
sub
mov
cmpsb
ret
jo
xchg
stc
stos
adc
idivb
mov
ret
jbe
jo
mov
sbb
shlb
shll
inc
imul
inc
gs
mov
aam
repz
fdivs
unpcklps
jmp
mov
rorb
jbe
insb
xor
out
add
nop
and
aaa
cmp
loop
subl
jb,pn
push
pusha
push
pop
or
testb
mov
cmp
or
hlt
imul
inc
xchg
rcrb
pusha
js
pop
jo,pn
sbb
daa
push
ds
mov
cmp
lar
jmp
sbb
xor
jnp
pop
shll
add
jne
mov
push
pop
pushf
scas
pop
sti
jns
mov
sub
ret
inc
ljmp
mov
pop
pusha
dec
nopl
out
movsb
into
popa
fidivs
and
js
jo
ret
jge
sbb
test
add
cli
or
xor
out
push
push
shr
bound
in
in
jo
dec
lcall
adc
scas
mov
sarl
sbb
xchg
mov
cmp
pop
btc
js
xor
push
inc
add
or
pop
jg
inc
jle
aad
cmc
dec
mov
xor
jns
addr16
jo
add
rorl
dec
mov
out
popa
xor
xchg
add
mov
dec
inc
ficomps
fadd
add
adc
jo
adcl
setbe
je
jle
jecxz
jo
push
pop
cmc
pop
pop
push
mov
hlt
jne
dec
mov
jo
add
sbb
fisttps
sbbb
push
jg
sub
or
imul
test
inc
and
jo
cmp
rcll
push
mov
add
jmp
jl
lock
loope
lock
dec
je
js
movsl
iret
inc
jo
jecxz
inc
jae
shlb
push
addr16
mov
and
push
and
sarb
shll
cmp
push
jg
mov
cmpsl
clc
push
jl
adc
mov
add
jns
aam
in
repz
test
cmovs
lock
mov
xor
add
lcall
push
shlb
stos
dec
andl
sub
lds
es
iret
jo
fdivl
and
inc
fidivs
lret
stos
call
imull
test
mov
xlat
jne
ljmp
loop
add
cmp
mov
inc
push
aaa
push
out
invd
sub
xchg
aad
es
jl
ss
xorb
rclb
pop
pop
inc
out
pop
push
cmp
push
std
mov
leave
ret
addb
insb
pushf
into
lea
aas
dec
insb
loopne
jg
push
push
jle
pop
sbb
lret
pop
jo
pop
jb
push
mov
cli
mov
out
cmp
inc
lds
sbb
mov
out
add
inc
out
add
cs
dec
js
scas
stc
gs
jo
lock
pushf
ds
xor
mov
sti
leave
dec
pop
lahf
xor
mov
icebp
add
jo
jl
data16
out
jo
xchg
and
or
adc
js
dec
xchg
cmovns
inc
addr16
jl
cmp
call
pop
jo
sysexit
mov
or
sbb
jo
shr
and
sub
add
and
pop
push
imul
pop
dec
xor
mov
jo
lret
or
mov
rolb
push
imul
pushf
adc
jb
fsubrs
adcb
cmc
dec
push
jb
mov
push
lcall
adc
and
push
mov
xchg
jo
cwtl
ficompl
pushf
sarl
jo
fsubl
xor
nop
mov
imul
mov
mov
negl
mov
mov
js
hlt
dec
jo
test
mov
pop
inc
sub
dec
insb
fs
jmp
dec
cwtl
xchg
push
insb
int
mov
xor
jo
sbb
loop
adc
lds
pop
mov
imul
into
in
es
inc
inc
pop
scas
jbe
loope
dec
pop
add
call
and
outsl
andb
dec
cmp
test
popa
xor
sahf
es
dec
mov
jo
loop
dec
std
data16
or
xacquire
mov
js
sbb
enter
sbb
fcom
sbb
jb
stc
sub
out
orb
jecxz
mov
repnz
arpl
mov
repz
hlt
orb
lock
and
movsb
scas
bound
xor
dec
mov
xchg
pop
mov
dec
sbb
dec
push
mov
mov
imulb
sbb
mov
adc
lret
iret
dec
in
loopne
add
jo
inc
cmp
sti
cmpsl
int3
insl
push
test
sub
insl
js
cmp
jo
adc
push
or
std
inc
imul
xor
fcmovbe
clc
xchg
aaa
or
test
dec
adc
jo
iret
outsb
out
cli
or
xor
push
pop
fdivp
inc
jo
xor
cmp
add
adc
cmpsb
mov
mov
test
mov
mov
add
ror
mov
insb
fistl
jmp
jo
pop
lea
insb
gs
jp
push
and
and
pusha
mov
pop
sbb
mov
mov
inc
sarb
ficoml
cs
lahf
jnp
js
pop
in
inc
jo
mov
pop
push
jo
pop
mov
xchg
rcll
xchg
jae
inc
push
jge,pn
pop
lahf
push
adc
dec
jo
frstor
adc
mov
or
jo
in
scas
fisttps
mov
fdivs
jbe
push
jo
shll
pop
dec
push
dec
andb
or
cmpb
jg
jecxz
dec
sub
and
andb
dec
hlt
mov
lcall
aam
call
mov
or
hlt
jo
cmp
aad
push
jo
adcb
mov
mov
ljmp
je
cmp
insb
jecxz
fwait
xor
xor
mov
in
out
inc
adc
add
je
cmp
cmpsl
loop
mov
gs
pinsrw
pop
inc
jo
movsl
mov
jo
fistl
int3
push
and
pop
sub
shlb
sub
in
leave
fcomp
sbb
and
les
jmp
mov
jl
daa
ljmp
mov
sub
sbb
arpl
iret
popa
sub
jecxz
lret
cs
sbbb
clc
jo
pop
mov
fmulp
dec
xor
das
cmc
xchg
test
out
mov
stos
xor
cmp
mov
jo
push
xlat
mov
or
aaa
je
movl
inc
fists
mov
jo
test
inc
vpsubq
jno
testl
dec
ss
pop
push
shlb
xchg
inc
jno
mov
pop
loope
iret
inc
mov
push
jo
xchg
stc
notb
jmp
xchg
lret
nop
das
pop
mov
and
push
test
cli
into
adcb
mov
clc
lock
xor
cmp
lods
cmc
out
sub
inc
adc
dec
icebp
mov
or
dec
rorb
cmp
sub
add
sbb
cmc
out
fwait
mov
adc
inc
xor
data16
adc
imul
lret
jo
fstps
adc
jo
push
icebp
stos
cmp
fdivs
inc
mov
push
test
daa
sub
xor
and
insb
jo
dec
jno
jo
jbe
mov
mov
call
xor
scas
cli
xlat
rcrb
lret
js
sbb
push
out
loope
call
pop
in
neg
adc
add
cmp
xor
mov
test
jb
cmp
scas
fstl
push
xchg
bound
mov
jo
sub
pop
jo
je
xor
cmp
and
std
lock
adc
nop
stos
adc
sahf
lcall
mov
lods
xor
lret
push
sbb
in
iret
out
add
and
jmp
leave
push
sti
imul
lret
push
inc
aaa
imul
jo
pop
jmp
insl
and
push
mov
jle
push
dec
in
xchg
mov
xor
frstor
and
add
pop
push
call
nop
push
jo
mov
lcall
out
mov
arpl
push
mov
dec
jg
jo
dec
pop
sub
fdivrp
add
lcall
xor
js
adc
push
js
adc
fcompl
rorl
lret
mov
mov
jp
adc
jb
dec
dec
idiv
test
rsqrtps
mov
pop
jo
jg
xor
lock
xor
hlt
lds
repz
rorl
fwait
jl
inc
insl
scas
jo
repnz
stc
push
xchg
mov
test
je
push
or
enter
outsb
and
pop
sub
out
dec
nop
mov
test
lret
jnp
add
mov
sahf
pop
cmp
push
outsl
sbb
dec
mov
fwait
pop
repz
fs
push
mov
inc
xchg
pushf
jo
add
insb
xchg
loope
mov
jo
add
aad
inc
pop
jo
jbe
cmp
cmp
es
dec
sub
dec
fsubl
lret
cmp
sub
test
or
xor
xor
lds
jp
inc
int
mov
xchg
inc
inc
add
rclb
cmpsl
and
mov
push
gs
ficoml
pop
inc
jmp
add
push
sbb
mov
cwtl
jno
int3
in
nop
mov
aad
push
out
inc
jo
and
pop
jo,pn
dec
push
rcll
jge
and
xchg
jp
in
shll
dec
inc
cwtl
cmp
subb
mov
jo
push
push
jbe
ss
stc
testb
push
sbbb
ret
adc
les
pop
xlat
sub
and
cmpsb
push
js
and
aaa
ljmp
imul
mov
add
scas
push
adc
rclb
sbb
jl
test
movsb
mov
dec
adc
out
mov
add
inc
out
sub
mov
push
punpckhbw
xor
lods
std
insl
pusha
ja
inc
mov
out
sarl
mov
jo
addb
or
insl
mov
mov
mov
xchg
fisttpll
xchg
inc
jo
popa
dec
in
ss
mov
sbb
nopl
loope
xor
jo
jns
sub
jle
stos
jo
mov
mov
loope
sub
jo
mov
sbb
cmc
jmp
lock
stos
mov
nop
repz
xchg
cmp
mov
sbb
fwait
sub
scas
mov
lret
sti
jo
cltd
std
mov
out
push
ja
fbstp
jo
xor
push
jo,pn
dec
testl
mov
addr16
adc
xchg
push
jo
sub
scas
jb
push
lock
jno
sub
addr16
int
aam
push
jo
and
rol
aad
fs
jl
push
and
jo
sahf
popa
mov
repnz
cld
jo
ss
call
test
dec
js
xor
jo
xor
push
fists
sub
mov
inc
repnz
call
in
inc
dec
jmp
add
fwait
jo
fstp
pop
popa
cmp
aad
jp
adcb
aaa
sbb
lods
nop
or
insl
shll
adc
and
pop
inc
insb
rcrl
xchg
xchg
inc
aaa
sub
add
repnz
hlt
pop
mov
pop
int
sub
je
js,pn
dec
clc
mov
sbb
push
jo
arpl
dec
and
dec
js
or
inc
mov
xchg
xchg
mov
push
mov
lods
pusha
rcrl
dec
add
adc
loop
push
jmp
repz
scas
stos
push
pop
dec
cmp
xor
icebp
fidivs
push
jmp
mov
jo
fdivr
jbe
testb
and
inc
jmp
inc
lods
jo
adc
mov
jo
dec
jnp
push
jb
push
sub
mov
push
outsb
jo
sub
push
lods
jns
jo
dec
xchg
addr16
jbe
loope
dec
popf
in
outsl
push
mov
add
xchg
xorl
adc
sti
cmpsl
into
push
mov
pop
jmp
icebp
lahf
fidivs
mov
fs
paddusw
pop
stos
in
jg
roll
sti
sbb
int
or
add
ljmp
xor
cltd
pop
jbe
cs
mov
mov
inc
ljmp
das
jo
mov
adc
push
mov
scas
pop
test
lock
je
cs
imul
and
lds
fs
test
sbb
mov
xchg
adcb
adc
in
pextrw
push
jo
adc
fstpt
clc
jo
pop
xchg
xchg
pushf
adc
cli
sub
add
std
jne
mov
ds
mov
push
jbe
mov
movsb
gs
jge
push
jno
and
jmp
hlt
jne
jle
xor
jnp
xchg
scas
sub
mov
pop
iret
cmp
cwtl
adc
mov
aam
jle
jbe
mov
repz
xor
ret
cmp
scas
cs
xor
jmp
loopne
aam
out
push
jle
and
xchg
aaa
movsb
sbb
in
insb
sarl
xchg
aas
stos
or
adc
icebp
lds
andb
aam
loopne,pn
push
cwtl
arpl
cmp
jns
vpshufd
inc
pop
dec
pop
sarb
ret
mov
sub
loop
nop
xchg
push
mov
pop
repnz
adc
jne
inc
jo
popa
imul
out
push
inc
lock
pop
ret
js
fsubrl
nop
aas
arpl
sbb
or
adc
movsb
jo
repz
push
add
popa
cmp
jns
jo
sub
mov
lods
data16
mov
and
add
push
jle
lahf
sbb
loop
jo
jmp
mov
ret
test
push
test
mov
jp
jo
pop
daa
aad
xor
jp
push
adc
inc
int3
aam
nop
sbb
jnp
and
sub
xor
pushf
cli
orb
push
sub
imulb
jb
stos
cs
mov
dec
insl
shll
or
mov
stos
leave
jo
scas
mov
jg
lods
add
pop
jo
les
xchg
cmp
sbb
sbb
adc
stos
mov
mov
movsl
or
jno
jg
ss
or
scas
xor
loopne
jo
mov
loop
jo
iret
faddl
out
mov
mov
divl
outsl
icebp
sub
add
jp
js
jo
push
shrb
mov
test
cmovb
or
xor
push
loope
and
inc
jge
out
shll
repnz
pop
push
or
pushf
add
pop
scas
hlt
push
jo
mov
adc
setno
mov
loop
sub
inc
mov
push
inc
test
adcb
push
xchg
dec
xchg
inc
dec
push
and
imul
dec
or
xchg
jo
add
or
ja
sbb
sub
lea
repz
scas
fdivl
pop
sub
fldcw
push
movsl
jge
jo
inc
jns
or
aad
jnp
adc
hlt
pop
imul
dec
pop
fidivl
js
mov
std
int
movsb
jne
add
shl
fcmovnb
pop
jl
sahf
lea
adc
and
jle
inc
mov
pusha
test
xchg
pusha
mov
jb
pop
jo
stos
lret
mov
jp
jo
add
mov
jmp
insb
les
add
jo
out
data16
int
nop
fcoml
mov
mov
xlat
out
mov
adc
push
mov
xor
call
push
cltd
push
ror
xchg
cmp
jmp
jo
aad
call
jo
push
inc
aam
pop
es
jo
les
or
mov
sub
outsb
ljmp
mov
rclb
ja
pinsrw
or
cwtl
jo
subps
xchg
cmp
mov
push
call
fidivl
cmp
in
push
addr16
jo
jecxz
cmc
fisttps
add
inc
inc
mov
dec
mov
mov
jo
cmp
sub
add
jo
rcrb
into
sub
adc
pop
sbb
jb
in
movsl
or
lods
and
jb
imul
jecxz
pop
sbb
xchg
xchg
adc
sbb
data16
dec
cmc
fisubrl
jp
jo
insl
fcompl
scas
xlat
jo
repz
mov
jo
sbb
outsb
jo
xor
sub
mov
push
mov
mov
add
loop
jo
mov
and
xchg
jecxz
movsb
ficoml
and
aaa
push
xchg
adc
out
fdivl
jb
dec
xor
mov
cs
jo
xchg
scas
sub
mov
jo
dec
cmp
mov
bt
addr16
insb
adc
mov
jo
cmp
xchg
jb
mov
outsb
scas
clc
mov
cmp
fs
xchg
jo
mov
ljmp
push
push
jnp
mov
xor
mov
jo
sub
sti
loop
pop
sub
cmpsb
hlt
movsl
gs
in
mov
sub
push
outsl
or
push
inc
mov
mov
sub
sub
sarb
jo
push
shr
and
jae
icebp
jp
repz
out
fwait
pop
dec
xchg
sub
jb
jo
cmpl
paddw
jl
dec
pop
jg
roll
ss
sbb
sub
jb
inc
testl
jo
inc
push
inc
xor
cmpsb
data16
dec
out
ficompl
sub
jg
sbb
jo
or
idivb
sub
and
push
hlt
in
and
push
push
pop
mov
fwait
outsb
out
add
jecxz
pusha
loope
inc
ja
pop
mov
jp
aam
mov
push
and
pop
mov
push
dec
jo
jno
pusha
xor
shll
push
push
jo
sbb
ret
xchg
sbb
lock
enter
iret
data16
xlat
or
js
xorb
jecxz
gs
jo
loop
jnp
repz
clc
mov
mov
sbb
insb
arpl
std
cltd
mov
jae
pop
cmc
bound
push
or
sbb
inc
loop
jo
hlt
daa
pop
xchg
lds
push
inc
or
repz
shrl
push
xor
push
mov
mov
cmp
mov
lret
fstps
xchg
icebp
and
dec
mov
insb
shlb
add
lods
cmc
fstpl
sarl
push
mov
and
out
lcall
jbe
mov
add
test
cmp
sbb
imul
mov
test
adc
mov
clc
jae
lock
out
loopne,pt
cmp
fwait
jae
mov
or
adc
sbb
aam
bound
jl
sub
out
push
mov
add
add
xchg
push
dec
jno
out
jnp
xor
sub
popf
in
lock
xor
es
inc
mov
addr16
orb
mov
ja
test
mov
lods
rcrl
sbb
pop
and
mov
cmp
dec
mov
push
mov
in
imul
out
test
dec
je
push
sub
insb
xchg
scas
mov
shl
jae
xchg
push
xor
cs
int3
mov
adc
inc
arpl
imul
sbb
xor
pop
cmp
lret
out
dec
movsl
sub
or
aam
dec
sub
out
dec
and
xor
dec
outsl
aas
mov
out
ja
pop
fildll
shrb
scas
out
jae
adc
mov
or
int3
mov
scas
push
pop
mov
jae
jb
lods
cmp
and
sahf
insl
push
bound
mov
xchg
scas
pusha
cmpsb
dec
popa
or
fs
push
in
repz
fstpt
xor
call
ljmp
rorb
push
arpl
or
divl
das
pop
fisttps
cli
pop
pop
jge
lahf
cmp
loop
iret
inc
stos
out
cmc
sub
leave
and
jo
add
out
pusha
xor
mov
test
scas
push
icebp
aam
mov
test
adc
dec
jae
mov
add
out
or
call
mov
sbb
icebp
sarb
ljmp
mov
push
lds
inc
adc
push
mov
lea
xor
stos
rcr
mov
inc
into
lret
cmp
cld
jmp
jns
in
fsubr
push
out
cmp
and
shrl
xchg
add
mov
push
sar
fistpll
scas
sub
lods
xor
fidivs
pop
mov
push
adc
fsubr
sbb
dec
cmp
inc
divps
jno
or
movsl
mov
add
jecxz
sbb
mov
sub
mov
gs
movsb
daa
add
push
add
mov
in
je
push
jle
imul
cwtl
sub
mov
dec
je
pushf
add
scas
pop
cmc
lret
icebp
dec
adc
aad
shll
les
push
push
lds
sbb
nop
mulb
jo
cmovb
add
daa
nop
sub
les
jle
pop
decb
lcall
fisttpl
pusha
out
or
sbbb
inc
insl
jp
sbb
xchg
pop
mov
push
outsb
xor
cmc
xchg
and
orb
and
xchg
inc
test
sub
add
mov
dec
mov
gs
jo
push
dec
pop
or
mov
jo
repnz
xorb
nop
nop
int
xor
xor
jecxz
push
pop
fcomps
sbb
cmpl
dec
pop
push
or
push
mov
lret
jne
arpl
ret
sub
mov
cmp
sbb
lods
jb
jo
roll
hlt
in
sbb
mov
lock
es
repz
subl
push
icebp
sub
inc
xchg
push
mov
jno
or
les
std
push
mov
adc
xchg
pop
push
popa
in
imul
rcr
pop
sub
icebp
jecxz
or
mov
test
les
mov
pop
in
stos
outsb
sub
das
repz
lock
push
mov
cmp
sarl
adc
dec
jo
jmp
cli
repnz
cs
daa
repz
pop
int
jne
push
jo
mov
mov
ss
sub
cmp
dec
into
shl
addr16
push
lea
das
xchg
aaa
pusha
xchg
jns
push
in
leave
and
xchg
xor
cmc
movsb
stc
push
sti
insl
dec
addr16
or
pop
inc
lret
jo
cmp
fsubrp
or
cmp
adc
pop
rorb
xchg
pop
lods
aaa
ret
jo
push
pop
add
les
leave
shll
adc
jo
xchg
cltd
add
pcmpeqd
sbb
jne
inc
push
mov
dec
cmp
add
lds
jo
sbb
mov
inc
cmp
jle
mov
dec
ljmp
jo
or
shlb
clc
sbb
jg
insl
mov
add
stc
shl
jo
mov
mov
jo
cmp
dec
or
les
gs
rolb
pop
jl
stc
jle
adc
pop
and
int
pop
sbb
addl
inc
jo
cld
ss
imul
pop
xlat
pcmpeqw
inc
and
jge
xchg
xor
add
xor
jo
lret
es
adc
pop
popa
out
mov
sbb
sbb
movsb
mov
into
fabs
jo
dec
add
xor
iret
mov
loopne
and
mov
adc
icebp
lods
pop
je
dec
jnp
mov
aad
stos
jbe,pt
divl
test
mov
adc
pop
jo
sbb
outsl
lods
mov
nop
jne
inc
cmp
mov
xor
jo
jp
mov
jo
movsl
lods
and
push
cli
iret
scas
hlt
mov
int
adc
jae
lahf
in
test
test
fisttpll
jo
ss
push
xchg
jo
cmp
cmc
xchg
jo
loopne
sub
filds
mov
icebp
mov
xchg
int
movsb
push
xor
cwtl
dec
or
fdivrs
shlb
pop
jle
out
mov
je
nop
test
std
jp
dec
andb
push
pop
rclb
sub
mov
cltd
stc
mov
jle
mov
shrb
movsl
js
daa
sbb
fucom
jg
rcll
and
scas
pop
sbb
push
and
dec
popa
dec
fnstsw
sbb
jl
pop
scas
repz
fistpll
test
das
mov
pop
add
out
rorb
cmp
in
addb
jo
shrl
jo
xor
or
pop
adc
subl
sub
push
jo
scas
mov
dec
nop
jecxz
int
or
xchg
sub
jo
std
into
adc
jo
inc
inc
popa
jne
daa
iret
jo
xchg
mov
mov
mov
cs
sub
js
mov
gs
cli
popa
cmp
adc
add
shrl
nop
jns
pop
or
inc
jp
and
pop
fisubl
add
jo
int3
jge
outsl
xor
and
push
mov
push
cli
repnz
xchg
lock
bound
sbb
jnp
jl
cmp
es
adc
cmp
mov
fcomip
sub
xor
jo
sbb
imul
call
cmp
push
cwtl
cmp
and
xor
shrl
shll
lahf
fcomps
rolb
cmp
push
dec
pop
fstl
pop
jo
leave
scas
cmpsb
aaa
arpl
fstpt
test
cmp
mov
adc
push
add
scas
je
and
scas
cmpsb
jo
rcll
cltd
imul
push
iret
daa
mov
rcr
in
sbb
sub
lock
daa
into
and
repnz
dec
imul
enter
daa
xor
and
jo
cmpb
dec
xchg
sbb
ja
mov
dec
adc
mov
cmp
nop
sub
sbb
in
push
mov
xor
idivl
jo
mov
pop
add
shll
shrb
push
xchg
mov
push
sbb
jb
test
out
add
jo
or
repz
hlt
jo
mov
or
jmp
cltd
incb
repnz
lock
roll
mov
jo
sbb
pop
push
mov
popf
fdiv
mov
insb
mov
add
xchg
sub
lock
test
jo
push
inc
mov
jo
cmp
aad
adc
mov
jo
jp
push
jns
shlb
loop
fs
popl
cs
xchg
jbe
out
pop
jo
pop
and
loopne
cmp
sub
imul
pop
and
daa
fdivs
icebp
pop
add
jo
cmpsb
or
mov
hlt
jecxz
stos
xchg
push
sbb
jae
insl
cli
inc
in
jo
dec
test
call
push
xchg
or
and
jo
xlat
movsb
lods
mov
dec
pop
imul
out
nop
sbbl
inc
leave
addb
mov
jl
out
cli
xor
ud2
mov
sbb
fnstenv
mov
ljmp
roll
jne
push
or
pop
xlat
push
in
pop
lock
jge
mov
addb
jo
fsubp
jns
pop
std
dec
jo
aad
or
jo
mov
cmp
decb
push
sub
sbb
jo
call
cmp
or
test
xchg
in
mov
pause
dec
mov
pushf
cmpl
add
jo
inc
inc
mov
rorb
xchg
push
lods
imul
lret
nop
xor
jo
push
jl
loope
or
jo
fdivrl
icebp
xchg
adc
pop
dec
push
mov
lret
xor
push
push
imul
xchg
dec
mov
nop
loope
and
sub
sbb
rcll
jo
inc
mov
and
jecxz
jo
neg
and
daa
pop
mov
inc
imul
dec
mov
inc
jo
test
lea
subb
lahf
push
push
add
or
daa
mov
fs
gs
sbb
or
dec
out
jne
jg
fcompl
mov
sbb
fstpl
push
add
scas
lods
or
jecxz
and
decl
mov
insl
mov
xchg
jb
adc
daa
push
bound
and
std
movsl
and
mov
inc
push
fmull
pop
cmpb
sub
xor
out
or
repnz
jp
jo
jle
sar
arpl
mov
iret
pop
loope
or
loop
int
dec
mov
test
repz
clc
xchg
arpl
add
into
jl
insb
pop
cbtw
test
cmp
nop
sub
jb
icebp
out
push
xor
add
xor
ljmp
lcall
jae
xchg
repnz
stos
fistpl
add
xor
jno
out
fnsave
stc
and
lahf
leave
jae
loope
dec
push
push
pop
inc
jmp
adc
push
pop
add
push
xchg
mov
or
repz
ffree
cs
pop
outsb
insb
xor
pop
adcb
icebp
lahf
jbe
fs
mov
cs
test
inc
cmpsl
in
pusha
sahf
ficomps
sbb
je
push
or
in
inc
mov
push
inc
fs
in
fistpll
xchg
adc
fcoml
xor
shlb
int
ss
push
movsl
repnz
xchg
cmp
shrl
pusha
push
mov
jno
add
jo
xchg
mov
adc
sbb
sbb
dec
stc
ds
add
in
adc
cmpb
aaa
out
mov
mov
std
mov
arpl
rcrl
sbb
out
jns
mov
inc
push
leave
sub
sbb
sub
cmp
add
dec
stc
shrb
test
js
aas
shll
lds
lock
push
ficoml
mov
and
dec
dec
jle
inc
int
add
mov
mov
mov
shll
rorl
mov
jo
cli
pop
aam
sbb
add
shll
jmp
jmp
arpl
and
jae
dec
or
je
fs
sbb
adc
jo
mov
mov
or
cmp
test
mov
sarl
das
mov
jg
insb
add
push
shlb
movsb
stos
add
jmp
sub
bound
jae
test
cmp
mul
jle
xchg
cmp
dec
popf
lds
sub
scas
incl
push
push
mov
push
sti
insl
jae
arpl
outsl
inc
cmp
fldl
int3
jno
insl
subb
mov
out
mov
mov
pop
add
cmpsl
dec
adc
call
arpl
icebp
and
loope
fwait
out
sbb
std
notb
jne
ds
xor
arpl
push
dec
repnz
adc
fdivrl
jo
push
cmpsb
push
scas
shufps
mull
pop
imul
cmpsb
and
sub
mov
jne
hlt
pop
sbb
cs
pop
lret
mov
pop
adc
push
fnstsw
xchg
addr16
xor
pop
xor
stc
in
dec
push
xor
mov
adcl
shl
pop
ljmp
xchg
cmpl
out
pusha
repz
cmpsb
movb
xlat
rcrb
jns
imul
cmp
ss
mov
sarb
imul
lods
int3
mov
add
call
dec
or
xchg
insb
sbb
lret
inc
jb
and
dec
cmp
xchg
jo
push
dec
loop
mov
jo
sti
loopne
xor
pop
and
fimuls
xchg
bound
adc
mov
dec
push
inc
jmp
sbb
xchg
in
clc
pusha
insb
fidivrl
fmuls
ja
js
dec
adc
xor
push
pushf
xchg
pop
rclb
or
adc
pop
mov
sbb
movb
sbb
aas
gs
mov
jae
sbb
jo
mov
jecxz
xor
or
shrl
stc
rol
jae
icebp
cltd
js
leave
shrl
fs
js
mov
cmpsb
push
js
sub
dec
mov
jle
jo
sub
inc
test
sbb
stc
mov
movsl
jo
or
jl
aam
insl
jo
in
dec
jns
xor
stos
jg
out
jo
jnp
sbb
dec
repz
arpl
xor
xor
dec
jbe
loope
jo
icebp
inc
mov
aam
cmc
xor
nop
push
imul
adc
addb
leave
outsb
xor
in
sub
dec
fwait
push
jl
jo
inc
sbb
das
jo
aam
ficompl
xlat
mov
mov
dec
jo
sub
inc
in
xor
cmp
lds
add
mov
jo
stc
lods
imul
insl
outsb
lret
das
cs
shrl
dec
pop
sbb
lds
adc
lahf
sbb
and
cltd
pop
jo
in
loopne
clc
dec
inc
jo
cmp
shlb
shll
imul
cld
in
jno
xor
mov
ficoml
cmp
stos
jo
std
xor
test
adc
xchg
lret
loope
xchg
insl
add
pop
jo
sbb
adc
push
stc
and
xor
jmp
insb
and
cltd
pop
and
jo
imul
dec
push
add
test
pusha
pop
nop
adcb
push
jae
arpl
shl
lods
xor
pusha
inc
mov
sub
sub
nop
adc
int3
push
jo
push
fwait
adc
jo
pushf
hlt
std
in
mov
sbb
push
xchg
dec
or
pop
outsl
jo
stos
adc
inc
xor
aad
fs
jo
inc
inc
xchg
outsb
pop
jo
dec
mov
jo
js
or
xchg
int
fidivrl
mov
pop
lret
repz
or
cmovl
jo
lahf
mov
dec
jo
mov
push
adc
sub
cmp
fcmovu
pop
stos
out
imul
jo
ja
pop
or
cmpl
scas
in
shll
jo
xor
sub
mov
dec
jnp
loopne
clc
das
add
mov
pop
jns
or
fsubl
jo
mov
jno
jo
shlb
pop
lret
cmc
jo
pushf
adc
jb
cmp
sub
pop
pop
xor
jle
int
nop
mov
arpl
sarb
xchg
icebp
outsl
jmp
insl
daa
xor
mov
add
es
jb
js
or
ss
jae
pop
mov
or
xlat
into
imul
dec
push
lods
or
lea
js
sub
in
fs
and
hlt
jo
push
mov
add
mov
dec
jo
popa
out
pop
push
sbb
daa
xchg
bound
cmova
push
imul
jmp
mov
xor
add
pushf
sub
mov
cmp
inc
jo
fimull
push
add
sbb
pusha
divb
push
xchg
cmc
mov
sbb
adc
aam
add
xor
pop
lods
data16
mov
jo
and
nop
inc
cwtl
inc
mov
inc
jne
cmpb
xor
inc
or
out
sbb
mov
setns
inc
sub
insb
dec
addr16
dec
sbb
imul
data16
xchg
cs
xchg
cltd
cwtl
stos
jl
ds
into
mov
push
inc
xchg
jo
ret
xchg
jo
fcmovnbe
testl
in
mov
jo
in
cmpsb
xor
xor
push
jnp
je
and
jg
nop
or
mov
and
fiadds
jo
xchg
inc
sub
jns
jae
pushf
rcll
sbb
imul
hlt
and
sub
push
fildll
fdiv
push
mov
lcall
mov
sbb
js
adc
call
nop
adc
pushf
jge
add
nop
jno
negb
mov
push
jp
nop
rcrl
cmp
cwtl
fisubs
jo
inc
insl
inc
xchg
inc
aad
dec
xor
imul
mov
add
into
jbe
jge,pn
data16
mov
leave
cwtl
dec
jae
adc
add
jle
mov
and
push
sub
jo
add
test
adc
xlat
sub
je
js
xchg
sbb
je
int3
andb
pop
or
inc
xchg
add
ja,pt
iret
loope
js
mov
inc
mov
out
in
jle
add
cmp
cli
std
or
xchg
jo
dec
test
xor
fmul
repz
jo
fadd
ljmp
mov
jne
jo
jae
sbb
mov
movsb
jo
jbe
cmp
xchg
orl
jge
pushf
jno
jecxz
pop
mov
es
stc
fs
and
pop
out
or
push
subb
cmp
test
and
inc
xor
dec
jmp
mov
cli
push
jns
inc
push
imul
inc
imul
fildl
lcall
pop
sahf
jo
adcb
cmp
repz
loop
out
je
jae
mov
outsl
or
bound
xchg
insb
sub
jo
pop
dec
pop
jg
imul
jae
sub
push
sub
jo
test
cli
stc
mov
sub
fidivl
jo
cld
cs
sbb
add
insl
jbe
jp
add
jae
lock
clc
dec
mov
insb
hlt
adc
icebp
sub
into
and
aaa
je
or
xor
sub
jo
ljmp
cpuid
adc
test
mov
test
popf
xchg
mov
push
mov
and
shlb
or
mov
fsubr
push
cmpsl
decb
or
dec
mov
pushf
sub
push
dec
sbb
jne
push
ja
mov
js
dec
test
mov
test
mov
cmp
inc
dec
pop
movsl
shl
jne
mov
test
cmpsl
jecxz
push
jo
aad
xor
in
cmpsb
clc
adc
shll
mov
push
lds
jno
push
lods
mov
or
cmpsl
mov
mov
xchg
cmc
ret
mov
sbb
pop
stc
lea
adc
xor
push
insb
lea
sub
sub
repz
int3
cli
inc
mov
xor
xchg
jo
pop
iret
mov
jge
cmc
cs
out
fs
rcll
inc
pushf
mov
pop
imul
jbe
mov
mov
mov
add
jo
xchg
add
lret
inc
jl
xor
rcl
add
or
mov
push
add
cmp
orb
push
insl
inc
lret
xchg
jl
adc
je
je
jo
jecxz
inc
fdivs
jo
enter
xlat
sbb
sub
rorb
jo
sub
and
xchg
insb
shll
insl
mov
sbb
lahf
mov
jg
jae
jo
xchg
notl
mov
mov
jnp
and
xchg
daa
imul
and
or
push
dec
adc
jb
loope
imul
push
fwait
pop
and
jo
mov
cmp
mov
cwtl
jge
in
mov
out
fdiv
dec
or
rorl
or
sahf
mov
je
sub
ss
push
xor
jo
push
or
or
stc
imul
add
push
arpl
adc
aam
inc
mov
decl
mov
xor
pop
jo
loopne
in
pop
xchg
aam
nop
mov
add
adc
push
jo
jns
stc
lret
dec
in
sub
bound
movsl
inc
pop
shrl
xlat
insb
jg
fwait
jo
loopne
cmp
mov
mov
sbb
jo
hlt
in
ss
sbb
or
mov
push
jo
es
jb
cmp
andl
dec
repnz
insb
pop
out
sbb
iret
push
into
jecxz
and
jp
push
call
outsl
subb
jo
or
jle
jmp
jge
jo
cwtl
les
loop
ja
fiaddl
mov
jo
movsl
scas
mov
or
mov
mov
iret
jmp
mov
adc
stos
lcall
loope
out
xchg
mov
jo
jg
arpl
jae
pop
and
xlat
xor
adc
jne
scas
sbb
les
frstor
shlb
rcrb
aaa
aad
pop
and
sbb
fs
jge
mov
sahf
push
aaa
shll
push
adc
repnz
jecxz
movsl
out
push
loopne
cmp
lret
ljmp
arpl
cwtl
movsl
and
leave
out
push
xor
inc
sub
lahf
aad
mov
push
and
dec
pop
adc
loopne
mov
popf
push
movsl
out
icebp
mov
xor
mov
outsl
xor
outsb
jo
pusha
xor
icebp
imul
ret
mov
aad
mov
shll
ret
bound
or
add
mov
or
repz
movsl
push
jg
stos
fldenv
jne
in
mov
scas
lea
movsl
test
or
xchg
ss
sar
add
sbb
gs
cmpsb
xor
adc
adc
xchg
jle
mov
mov
call
subl
arpl
icebp
int
lcall
mov
and
and
sbb
mov
push
xor
fldenv
imul
sub
adc
lods
icebp
aad
fucomi
outsl
push
adcl
cltd
mull
jle
push
dec
cltd
xchg
out
clc
mov
das
fiaddl
loopne
mov
sbb
clc
xchg
cltd
movsl
rorl
das
push
xchg
shl
outsb
loopne
std
lods
push
fs
jb
jae
xor
arpl
lds
enter
clc
dec
inc
mov
mov
add
imul
sahf
jmp
bnd
jnp
dec
imul
lea
out
fsubrs
lret
fbstp
lock
pop
repz
xor
jae
leave
or
xchg
pop
mov
imul
and
fimuls
cs
xchg
jne
lahf
cmp
pop
sub
fwait
sbb
test
push
js
mov
cmp
or
cmp
cmp
xor
push
scas
mov
jmp
mov
jge
jns
sbb
icebp
sub
xchg
jecxz
movsb
or
pop
jge
adc
jns
xchg
lock
sub
mov
jle
scas
rolb
xchg
and
sub
lahf
jno
mov
mov
call
pop
push
in
push
xchg
sub
int3
jle
mov
ficomps
ja
out
sbb
xor
les
cmp
xlat
add
push
xchg
sub
es
je
test
inc
lods
test
hlt
jp
push
lret
incl
subb
out
test
cmpl
cmp
mov
or
stos
out
push
or
in
aas
pop
sbb
mov
dec
xchg
jbe
call
in
xchg
fs
mov
out
aas
mov
dec
aaa
jecxz
pop
jp
ss
ljmp
mov
testb
cmp
shrb
add
sub
das
jo
pop
out
push
es
decb
lods
jp
jo
mov
test
dec
icebp
xor
aaa
or
push
jo
rcrb
outsl
xchg
cs
mov
mov
movsl
int
jp
lods
fisubl
fnstsw
jo
outsl
mov
iret
fs
add
out
xchg
or
dec
push
adcb
add
add
dec
push
jae
push
mov
mov
inc
mov
notb
nop
nop
fadd
pop
scas
popf
pop
jl
jns
nop
push
lret
lods
mov
jo
orl
jo
popf
dec
mov
jmp
out
mov
pop
push
imulb
enter
adc
icebp
clc
and
jb
fistpl
add
lock
stos
clc
jg
jae
jo
fs
sbb
dec
scas
xchg
orl
dec
hlt
jo
mov
test
insb
or
mov
xor
and
fbstp
jo
pop
sub
or
adc
xor
inc
lcall
jo
cltd
jecxz
jno
push
add
xor
mov
das
mov
adc
in
inc
mov
outsb
andl
xchg
js
inc
sti
enter
test
addr16
add
jb
xchg
or
pop
jmp
sbb
pushf
sbb
hlt
nop
add
addr16
shll
jae
adc
jno
mov
mov
jo
jne
lea
lret
nop
mov
js
mov
add
lret
jns
psubsw
mov
test
adc
popf
int3
out
push
daa
inc
and
popa
out
jns,pt
inc
jg
enter
divl
nop
mov
rcrl
mov
xor
test
jp
push
jo
xchg
sub
inc
jo
cwtl
xor
mov
and
add
je
repz
dec
jg
outsl
jo
negl
lahf
int
mov
icebp
cltd
leave
jo
cmpsb
out
sub
pop
js
cmp
test
icebp
fwait
pushf
inc
inc
push
arpl
or
bound
add
sahf
aad
mov
lods
jp
xchg
std
nop
push
adc
fistpl
push
shl
sbb
xchg
xchg
negl
sbb
stos
popa
sbb
out
push
jo
stc
and
mov
popf
xor
fmuls
aam
mov
push
jae
xchg
sarl
adc
dec
test
loope
jo
inc
imulb
movsl
shrl
call
and
sub
in
mov
subb
mov
pop
inc
jns
cwtl
std
jo
sub
daa
or
cmp
xor
out
jo
or
sub
or
movsb
jo
dec
enter
icebp
jo
jg
frstor
inc
add
ja
je
fnstenv
xchg
ret
test
jo
add
aas
out
mov
and
and
aam
loop
mov
xor
js
mov
mov
nop
dec
repz
test
pop
pop
pop
jo
loop
dec
mov
ljmp
fwait
push
mov
fdivs
xchg
inc
inc
int
ja
test
inc
xor
fiaddl
test
mov
fs
dec
jg
imul
jo
jns
or
shll
xor
pop
cltd
nop
js
jno
cs
inc
sub
mov
popa
sahf
dec
mov
jo
mov
xlat
repz
enter
pop
adc
push
adc
adc
ss
loope
jo
mov
or
es
mov
cld
aam
lret
movhps
pushf
je
push
nop
insb
xchg
add
xchg
jne
jns
jo
clc
out
gs
cmp
pop
insl
jo
sbb
push
sbb
or
mov
cmp
mov
or
mov
pop
into
jo
sbb
xchg
push
pop
iret
lret
mov
test
jo
ljmp
mov
das
adcb
stc
add
sbb
jmp
push
je
and
clc
mov
dec
into
push
mov
sub
imul
clc
xchg
leave
scas
adcb
jo
push
movsl
mov
cmp
pushl
popf
outsl
stc
aam
jo
clc
xchg
imul
inc
add
rorl
leave
cmpsb
jo
in
repz
mov
dec
xor
mov
pop
mov
pusha
arpl
in
jo
adc
sbb
jo
and
lret
sbbb
jo
adc
push
and
add
nop
push
test
adc
clc
pshufw
cmp
xchg
pop
or
ret
pop
push
jae
mov
and
mov
jo,pn
cmp
mov
sahf
fwait
call
push
sbb
sub
push
mov
jg
addr16
aad
insl
push
fiadds
rcrl
enter
lret
addb
push
dec
xorl
icebp
jle
loop
flds
xchg
fmul
xchg
push
jp
push
sub
pop
mov
lods
jge
addr16
jae
adc
push
les
sub
fbstp
nop
das
out
addb
sub
fsqrt
mov
mov
jge
pusha
mov
fnsave
xor
fiaddl
out
xor
js
mov
movsl
mov
dec
cli
ds
jo
in
push
jo
fnsave
pop
or
test
xor
loope
pop
inc
cs
xchg
int
pushf
xor
jo
dec
mov
or
adc
andb
push
je
popf
sub
mov
fbstp
or
dec
push
stos
sahf
adc
outsb
call
mov
push
subl
sub
or
hlt
ds
int
xchg
loopne
dec
cmp
nop
cld
pushl
push
ja
xor
cmp
sub
sbb
mov
jo
mov
sbb
sub
push
cmp
mov
jmp
rorl
mov
pop
push
push
dec
jge
hlt
cmc
pop
push
cmpsb
or
pop
and
mov
push
jo
or
fs
push
scas
mov
in
in
push
push
lock
test
dec
mov
mov
leave
out
and
mov
pop
xchg
mov
xchg
fwait
cli
test
nop
adc
jae
fimull
into
inc
lock
scas
cmp
dec
pop
or
jl
mov
cld
jb
push
push
mov
push
mov
jecxz
add
pusha
inc
jae
mov
aas
in
push
dec
in
mov
mov
push
mov
adc
aam
cltd
mov
jo
or
cmp
ret
mov
add
pop
das
adc
sub
jo
or
push
jo
cmp
ret
lret
test
jo
les
test
aas
loopne
popa
push
ljmp
jo
ret
pop
mov
int
mov
inc
imul
dec
cmp
push
add
fcmovb
jmp
enter
js
pop
jo
pop
sub
cmpsl
sub
cld
and
addl
adc
jnp
xor
push
addr16
adc
pusha
jb
out
add
shr
push
jp
hlt
xchg
sub
stos
sbb
pushf
jo
jae
xlat
jno
jo
fidivs
mov
stos
aam
nop
int
repz
aad
xchg
ss
add
mov
push
js
lods
gs
cmp
repz
cmp
iret
outsl
push
adc
roll
sti
jmp
jp
add
jae
inc
popa
das
out
pop
jo
jb
mov
shrb
sbb
xchg
mov
jge
sbb
subb
mov
ret
insl
push
nop
lahf
adc
jl
imul
shll
xchg
movsbl
jo
mov
fs
jo
stos
sti
inc
icebp
dec
jg
jo
scas
repnz
orb
pop
push
pop
add
mov
cmp
fwait
popa
repnz
aam
sub
fistl
mov
or
xchg
mov
pop
and
inc
adc
sbb
fs
cmpsb
ffree
dec
stos
fbstp
outsb
outsl
xchg
sar
je
push
cmp
add
mov
aas
jb
jp
fistpll
adc
lock
ljmp
sbb
sub
cmp
pop
fisubrl
frstor
sub
out
movsl
xchg
push
ja
inc
or
shrl
jae
dec
popf
jl
mov
shll
ret
cs
mov
push
mov
jo
cmpsb
les
push
mov
inc
mov
aad
jno
xor
mov
cld
dec
scas
stos
jecxz
cli
nop
fdivs
mov
popf
in
or
jo
fstl
dec
lods
les
pop
stos
xchg
mov
jo
dec
icebp
xchg
mov
mov
insl
imul
jae
in
jnp
dec
add
ss
xchg
fs
inc
jo
int
andl
test
rcrl
jo
xchg
mov
jp
loope
fists
jle
lods
test
lods
push
hlt
addl
je
negl
shll
jmp
push
addl
lods
call
push
jns
jo
lret
inc
and
mov
mov
int
jle
or
mov
inc
dec
xor
mov
pop
jo
jbe
mov
outsl
popl
sbb
mov
lea
lcall
sub
daa
int
imul
pop
cli
jl
cmp
mov
sub
ret
cmp
or
mov
xchg
jmp
cmp
xor
fadds
dec
jo
enter
andl
mov
jns
jl
jo
adc
loop
mov
cmp
cltd
sub
xchg
jmp
enter
lock
dec
adc
mov
adc
mov
scas
dec
jo
fs
in
movsl
dec
mov
jo
xor
mov
add
je
jo
xor
lock
cwtl
loop
push
xchg
dec
inc
cmp
ss
cmp
jo
popf
inc
dec
jb
ret
fstpl
std
inc
insb
xor
mov
mov
mov
pop
lods
ss
inc
js
outsb
push
psubusb
imulb
push
je
sbb
cvtdq2ps
dec
sub
adc
mov
cmpsl
cmp
sbb
xchg
fmul
bound
sbb
sub
fbstp
nop
push
adc
clc
adc
inc
sub
jo
and
mov
mov
ret
adc
xchg
sbb
in
sub
aas
jge
addr16
push
inc
xchg
daa
inc
adc
mov
add
and
adc
jo
lahf
add
shrb
jecxz
cmp
ljmp
dec
addr16
jo
fwait
into
daa
in
pop
pop
add
mov
sub
imul
loope
sbb
sbb
daa
jno
sbb
leave
jo
cmp
add
sti
rorl
and
push
mov
jp
adc
icebp
imul
dec
cltd
jo
lds
je
xchg
push
hlt
stos
jo
mov
std
push
lock
icebp
push
ds
rclb
adc
loop
stos
pop
jmp
dec
jo
std
repnz
test
icebp
push
sub
leave
cmp
jo
loop
xor
mov
pop
or
scas
jns,pn
repnz
rcrb
rolb
xor
inc
mov
push
xchg
jo
mov
ds
cmp
mov
cltd
or
cmpsb
test
pusha
mov
aad
fildll
je
push
dec
js
push
sbb
xor
insl
das
jb
idivl
ror
adc
mov
jo
lret
inc
jg
nop
jo
cmp
cmp
xor
jp
push
or
out
sub
lcall
ja
bnd
fisubrl
notl
mov
and
push
out
push
testb
cmc
push
adc
cld
rcrl
mov
lods
fnstenv
and
push
push
sbb
xorb
fs
push
xor
aaa
push
push
mov
mov
and
lcall
inc
xor
jno
dec
mov
pop
lock
inc
cmpsb
cmc
nop
sahf
aam
fstpl
repz
int
push
inc
dec
out
out
sbb
popa
shll
push
adc
das
cmp
pop
in
enter
ss
pop
sbb
pop
je
cmp
test
rorb
pop
jg
push
cmpsl
icebp
mov
mov
lds
repnz
mov
jge
rcrb
shll
je
or
roll
jo
clc
sub
mov
icebp
cmpb
sbb
jae
jo,pn
lods
mov
jecxz
cmp
paddusb
popa
aaa
jmp
aam
incb
aad
sub
xchg
jle
inc
lods
cs
movsb
fstps
enter
mov
nop
mov
insl
js
jbe
jl
lcall
je
mov
outsb
jmp
leave
push
hlt
or
punpckhdq
mov
mov
mov
mov
lods
push
inc
pshufw
test
xor
mov
cwtl
push
lahf
or
dec
push
in
lea
jo
arpl
imul
dec
ds
or
arpl
popf
push
lcall
nop
popa
mov
fdivrs
jnp
dec
lcall
sbb
scas
imul
pop
scas
inc
repz
popf
jo
mov
test
nop
jmp
jo
addr16
push
push
fucomi
test
jmp
adc
dec
adc
pop
jbe
or
push
xchg
shrb
ljmp
cwtl
sbb
hlt
pop
push
and
lock
jo
lret
in
and
fisubl
stc
jno
int
xor
aaa
shr
fwait
jo
xchg
mov
int
cmc
ljmp
or
or
popa
cltd
in
jo
xor
fbstp
fcoms
mov
jnp
sub
xchg
ljmp
xchg
movsl
insl
repnz
jo
jge
cs
adc
daa
pop
and
mov
cli
loope
push
loop
xor
mull
inc
imul
sub
ffree
xchg
push
pop
cs
add
cmc
in
xor
stc
jo
cmpsl
push
xchg
jo
je
fldlg2
in
sub
jmp
mov
fidivl
js
sti
sub
in
adc
lea
push
and
test
push
push
sbb
and
mov
jo
push
enter
mov
cmp
mov
xchg
shl
mov
loope
aas
mov
xchg
fiadds
andl
out
dec
jbe
mov
sbb
xorb
add
jno
bound
inc
and
inc
jo
aad
jns
xchg
push
xchg
jo
ret
cmpsl
jb
ret
iret
out
cmp
xor
sbb
or
cli
or
jl
pop
stos
mov
jo
int
test
or
inc
sub
dec
cmp
lret
mov
fs
mov
sub
inc
add
mov
mov
xor
cmpsl
lods
xor
mov
nop
inc
jo
pop
push
movsl
rol
test
jne
movsb
mov
inc
jno
fdivs
test
jo
sub
pop
pop
jae
mov
jo
aaa
cwtl
repnz
jo
pop
sbb
jo
nop
jp
xchg
leave
jo
ret
or
push
push
jo
out
and
cltd
cmpsb
mov
mov
adc
mov
stos
or
jo
mull
aas
in
mov
shlb
inc
sbb
and
stc
mov
shll
test
mov
xor
loopne
in
mov
shlb
adc
pop
xchg
add
les
mov
mov
cmpsl
imul
stos
int
add
in
push
xchg
cltd
jge
xchg
sub
sarb
out
cli
clc
fdivl
loope
jo
pusha
dec
arpl
push
mov
lds
xorb
int
push
xor
test
aas
test
mov
stc
bound
outsl
jne
insl
push
sub
divl
jl
cmp
es
lock
in
andb
mov
rorb
cmp
pop
pop
std
popf
das
in
mov
xlat
xor
push
sub
test
subb
sti
dec
mov
xorb
adc
notb
sub
mov
lods
push
sub
das
shr
xlat
fmuls
xchg
dec
out
lock
fs
cld
jle
nop
mov
mov
push
or
enter
mov
adc
lea
jnp
shlb
imul
lock
pop
mov
outsl
mov
mov
pop
add
cmc
cmp
ret
notl
outsl
orb
inc
mov
js
push
jg
pop
sarb
mov
cltd
std
pop
in
mov
or
clc
fdivp
inc
inc
cmp
rorb
aam
pushw
cwtl
add
fs
ds
iret
pop
jo
jnp
xlat
add
dec
pop
jo
hlt
scas
sbb
popf
push
sarb
pop
jo
icebp
and
mov
jbe
or
js
xor
int
cmp
jo
outsl
pusha
push
cwtl
aas
xor
fcom
flds
popf
xor
or
mov
cmp
jo
xor
dec
and
xchg
pop
test
sub
es
addr16
scas
sub
scas
inc
sub
inc
mov
cmp
nop
pop
jp
sahf
fstp
adc
xlat
adc
ret
int3
mov
sub
fdivl
jnp
sub
pop
movsb
repz
arpl
xorl
fbstp
add
loop
push
pop
in
and
jl
mov
xor
scas
cmp
xchg
jecxz
pop
push
jl
inc
push
jl
jo
lahf
xor
insb
add
jle
jo
push
repnz
push
hlt
xor
std
ljmp
mov
aas
jo
xor
push
pop
jo
mov
imul
shlb
pop
mov
mov
fisubl
inc
int
in
cmc
and
mov
in
mov
mov
and
nop
idiv
fsubl
adcb
out
jns
jo
jmp
push
pop
jo
jp
loop
loope
jo
inc
xchg
lret
add
decl
inc
ljmp
fcomip
push
pop
rolb
jo
cwtl
je
mov
push
inc
jae
xchg
jecxz
dec
lcall
aaa
cmp
jl
repz
test
cmp
sub
fwait
cmp
insb
fs
xchg
cwtl
fnstcw
std
mov
in
ret
into
jo
test
outsl
jl
stos
sub
xchg
sub
fs
leave
cli
adc
cwtl
mov
adc
pusha
lcall
or
jo
mov
pushf
or
dec
pop
nop
push
insb
std
in
jo
fiaddl
xchg
xchg
jo
movsb
popf
mov
repnz
enter
das
jle
jo
push
adc
xchg
outsl
jo
inc
jecxz
cmpsl
cmp
cwtl
xor
jo
ret
jge
pop
dec
jo
add
inc
decb
mov
xchg
dec
sub
push
adc
or
fstpl
lahf
sbb
ja
push
int
into
ds
pop
in
xchg
or
addl
jo
push
inc
test
leave
fs
add
ss
pop
push
orl
jo
sbb
xchg
jbe
rcll
iret
jo
sbb
out
inc
ret
sbb
fbstp
xchg
jl
js
ss
das
pushf
enter
xchg
cmc
jp
test
leave
push
inc
addb
ret
and
jo
stos
pusha
lods
adc
jo
loop
ss
push
or
icebp
and
push
into
jne
jb
mov
out
sarb
je
sub
mov
scas
imul
iret
sbb
sar
jp
xchg
lods
jg
inc
or
adc
int3
dec
jo
dec
fcomps
push
leave
cmc
loop
jo
lods
add
push
adc
push
stos
repnz
mov
mov
mov
outsl
pop
push
lea
arpl
push
lcall
in
jo
sub
xchg
pop
fstpl
dec
mov
jo
mov
movb
add
or
leave
addb
pop
fs
add
sbb
jo
jp
xor
jo
mov
jae
mov
dec
jno
pop
fistl
int3
gs
jo
pushf
sarb
push
inc
jo
adc
shll
sub
pop
loopne
cmp
mov
jo
bound
and
mov
dec
push
push
aam
mov
mov
xchg
mov
jb
dec
loope
lods
dec
cs
sub
jmp
mov
xor
loop
das
xor
shlb
fucomip
jp
cs
jl
pushf
pop
jmp
adc
cs
mov
jo
ljmp
jo
or
add
ja
insl
sub
ret
mov
jle
popa
rcrb
cmc
jecxz
jo
push
or
sub
shlb
sub
or
ror
pop
stc
pop
js
fsubs
jp
mov
push
nop
jo
lea
xor
jns
xor
adc
push
adc
ficomps
ds
push
jo
in
sbb
jo
arpl
hlt
and
pushl
and
outsb
inc
or
lock
out
xor
xor
mov
lahf
pop
sub
dec
xchg
mov
sar
dec
rorl
shl
loop
out
jg
loop
xchg
mov
shrb
and
outsb
nop
dec
lcall
loope
pop
mov
xor
out
inc
lea
ds
movsb
je
pushw
shlb
shl
flds
add
jl
fistpll
jo
xor
push
ficoms
cltd
pushf
add
repz
sub
cmpsb
sbb
popf
lock
mov
push
cmp
or
jae
cmp
push
sahf
js
jns
add
xchg
inc
pusha
out
jle
repnz
xor
gs
outsl
dec
insb
xor
mov
lahf
je
xchg
sub
sbb
fdivs
subb
mov
lret
imul
mov
testb
mov
idivl
stos
push
push
xor
int3
cmpsl
cmp
ror
xchg
jb
int
fld
push
faddp
mov
sub
push
jg
arpl
xchg
cmp
loopne
fsub
stc
mov
addr16
lds
mov
call
ljmp
xlat
pusha
test
pop
mov
sbb
mov
add
cmc
add
arpl
mov
jl
push
mov
add
jle
sbb
jmp
and
cs
jo
inc
stos
fs
sbb
jle
sbb
or
loopne
je
rorl
push
pop
sahf
and
xor
adc
push
test
jmp
roll
cmpsl
inc
aam
jne
push
bound
ss
pop
jae
lcall
mov
movsb
imul
inc
cs
outsb
aad
jge
icebp
leave
xchg
add
fsubrl
jge
or
js
into
neg
mov
clc
lcall
hlt
fnstenv
push
mov
hlt
jo
sbb
test
ret
pop
jo
mov
call
jo
in
xchg
std
xchg
lret
leave
data16
mov
jl
mov
xchg
push
enter
ret
xor
imul
inc
push
jo
xor
dec
popa
jo
ret
inc
sbb
outsl
jo
popf
insb
push
jb
jo
jge
mov
jo
stos
mov
frstor
fistpll
push
fisubl
jne
aaa
es
xorb
jo
ja
clc
inc
ljmp
fnstcw
adc
mov
test
jo
add
cld
xchg
inc
loopne
inc
insl
jo
dec
cmp
lods
stos
aam
jo
adc
fwait
push
mov
imull
or
jo
clc
test
mov
aad
hlt
sbb
dec
addr16
insb
sarb
ret
adc
cmp
adc
mov
xchg
cltd
jo
push
dec
pop
notl
shld
insl
dec
pop
sub
test
jnp
sbb
je
insl
sbb
cmp
xchg
popl
ret
bound
xorb
push
rcll
dec
out
mov
popl
xlat
jp
popf
push
push
movsb
sti
and
inc
insb
rcll
mov
stc
aas
sub
mov
mov
lret
inc
imul
dec
push
aaa
xchg
jo
fsubrl
outsl
fldenv
nop
mov
fdivrs
mov
pop
imul
int
cltd
push
or
push
sub
push
into
or
pushf
call
pop
imul
dec
std
jle
shlb
cli
jae
fcmovne
ds
jb
jbe
cs
lea
les
lock
add
mov
adc
adc
sub
in
enter
jo
xorb
jo
daa
sub
jo
cltd
or
jo
mov
ja
push
cmc
mov
dec
cli
dec
add
push
sbbb
sub
aaa
jge
mov
xchg
call
push
jae,pt
in
push
mov
xchg
and
add
or
rolb
jle
cmpsl
decb
add
bound
hlt
mov
pop
cmp
cmp
mov
fstl
bound
les
call
push
cmpsl
mov
dec
data16
gs
outsb
arpl
sahf
push
inc
mov
inc
jo
roll
int3
adc
pushf
sub
ja
sti
iret
xor
lods
pop
jo
mov
sub
daa
popa
std
mov
pushf
push
adc
lods
or
pop
out
add
mov
imul
push
imul
jge
movsb
or
pop
stos
dec
imulb
sarl
lock
popf
adcb
cmpsl
dec
fs
lds
sbb
cmp
ficoml
jo
mov
jo
pop
aad
lock
or
arpl
jne
divl
ljmp
xor
mov
pop
mov
stos
test
bound
sub
fsts
ss
adc
jo
cli
dec
sarb
es
mov
mov
jo
add
inc
test
jmp
fcompl
je
popf
sub
aaa
mov
fs
or
bound
add
fcmovbe
dec
xchg
pop
jo
mov
imul
stos
xchg
jo
jl
insb
cmp
push
and
push
cmpsb
push
sbb
add
push
jo
lds
sub
adc
adc
inc
and
or
nop
push
jo
fildll
aad
or
push
std
sbb
mov
addl
or
cmp
imul
dec
mov
hlt
xor
scas
sub
sbb
or
fildll
xchg
cmp
stos
cmpsb
sti
jo,pt
lret
inc
js
cltd
in
in
test
rorl
adc
repnz
mov
jo
xor
not
dec
sbb
xorl
mov
jns
push
push
jne
inc
and
add
rorb
fcom
fs
jo
andb
jo
inc
xchg
dec
sbb
jo
arpl
pusha
mov
std
ja
dec
jns
and
sbb
mov
and
xchg
movsb
jp
fwait
cmp
jo
aaa
xchg
dec
arpl
mov
xlat
rclb
push
je
icebp
pop
jo
orb
mov
pop
add
sbb
cld
and
mov
xor
enter
xchg
add
dec
add
mov
mov
pusha
jae
lods
rcrl
mov
in
ffree
lea
mov
adc
ja
int3
push
sub
pop
stc
rol
sarb
shll
mov
mov
imul
cmpsl
mov
adc
sbb
adc
jae
xchg
mov
and
adc
and
cmp
int3
mov
jg
inc
adc
mov
lds
jp
imul
sbb
fs
lahf
fstpt
jae
popa
jle
inc
aam
std
arpl
dec
cmp
mov
js
arpl
or
fistl
xor
mov
mov
mov
arpl
insb
mov
pop
mov
gs
fidivs
enter
dec
dec
insb
jae
and
mov
sbb
scas
les
imul
les
mov
cmpsl
aad
xor
out
fidivrl
lea
lcall
test
divb
push
fs
out
fcmove
call
rcrb
adc
add
sti
arpl
dec
mov
adc
test
adc
push
pop
dec
push
sbb
jae
xchg
or
movsb
pop
and
rorl
xchg
jecxz
mov
lock
sbb
cltd
jnp
sub
pop
sbb
movsb
push
rclb
cwtl
int3
mov
andb
daa
jmp
xchg
insb
andb
out
call
xor
dec
rep
ficoml
movsl
add
lret
and
mov
aam
stos
mov
loopne
lock
xchg
adc
jmp
jbe
pop
mov
nop
and
add
pop
imul
push
push
movsb
push
in
cmpsb
icebp
jle
dec
sub
sbb
mov
in
lea
gs
sub
xor
xchg
leave
addr16
and
xor
mov
cmp
and
out
jmp
loopne
push
add
xchg
add
cwtl
adcb
mov
push
aas
push
mov
or
scas
push
cmp
inc
jl
pop
jmp
aaa
shrb
cmp
pop
inc
imul
insb
lahf
sub
xor
rolb
lcall
xchg
test
add
inc
int
pop
cli
addb
out
push
xchg
and
push
js
mov
mov
jo
pop
stos
mov
xor
in
inc
sbb
pushw
gs
jo
lret
mov
nop
dec
out
add
cmp
daa
mov
mov
test
arpl
or
mov
lret
jo
lds
mov
pop
rcrb
and
test
mov
lds
push
int
cmovne
in
mov
pusha
jp
jg
lret
jl
shrl
iret
dec
sarb
lock
xor
xchg
std
scas
lods
jmp
jo
arpl
xor
xchg
iret
inc
push
adc
std
cmp
fldln2
sbb
imul
insl
xchg
sbb
lods
sub
out
or
dec
jo
cmovl
sarb
inc
outsb
adc
mov
mull
loop
xchg
jmp
call
loope
fiadds
enter
jno
and
loop
cmpb
sub
or
roll
cmp
test
int
mov
filds
mov
stos
push
push
inc
inc
cld
sbb
je
std
fisubs
adc
shlb
pusha
ja
xor
and
inc
jae
jae
cmpsb
int
arpl
adc
std
mov
mov
fs
popa
cld
push
sbb
subl
outsb
or
iret
lock
adc
pop
and
xchg
jb
mov
xchg
jae
sahf
mov
es
or
mov
push
xorb
pop
das
jmp
sbb
xchg
inc
scas
jl
arpl
shlb
adc
sbb
test
repnz
lods
rol
subb
add
sbb
out
cmp
adc
daa
mov
adc
mov
and
mov
mov
out
mov
dec
and
or
xchg
sbb
xor
gs
fldl
push
data16
lock
xor
std
dec
pusha
nop
xchg
sub
jns
jns
or
jecxz
xorb
mov
push
jl
pushf
xor
in
in
jno
inc
mov
fsubs
and
inc
or
ret
andb
xlat
out
cmpl
clc
scas
jns
inc
out
lcall
cmp
xor
jmp
sbb
adc
xchg
jo
dec
ss
cs
movsl
jl
jo
fildll
or
inc
dec
xchg
sub
xor
dec
ret
and
jp
insl
xchg
sub
ja
fcoms
dec
es
push
aad
cmpsb
call
fiaddl
pop
fbld
cmp
sub
jo
popa
adc
push
xlat
nop
mov
sbb
xchg
pusha
mov
dec
int
jl
jo
ret
pop
das
ds
es
pop
test
sub
imul
jo
jg
sub
ljmp
loope
jae
xchg
jo,pn
into
xor
loop
adc
adc
jae
add
pop
inc
test
js
sub
push
clc
icebp
xchg
ficompl
jno
jo
stos
popa
add
sahf
movd
xor
outsb
adc
cmpsb
mov
aas
adc
lcall
cmp
sub
iret
push
pop
mov
ds
fnstcw
inc
dec
jo
stos
mov
push
nop
push
daa
subb
mov
pop
stos
pop
clc
call
jb
jne
and
fidivl
push
enter
jo
sbb
xchg
pop
pop
jmp
jo
iret
xor
xchg
jge
in
mov
cld
or
jo
insl
stos
pop
loope
mov
dec
bound
loop
pop
pop
sub
or
fwait
ds
test
jo
mov
push
mov
shrl
fsubs
movsl
jo
sub
scas
or
aam
jo
cmpsl
fimuls
inc
lahf
jo
fcomp
or
scas
pop
jl
sbb
loope
int
mov
mov
dec
ds
scas
cli
shll
dec
ja
xor
inc
js
cmp
mov
mov
mov
outsl
les
or
outsb
insl
enter
push
jo
clc
in
in
cmp
cmp
jo
push
xor
cltd
fucomp
mov
outsb
adc
jo
das
dec
adc
jo
imul
dec
int
mov
es
lea
jo
addl
sbb
js
mov
mov
repz
push
lods
loop
mov
stos
lcall
push
int3
popa
cmpb
pop
adc
testb
roll
jo
fwait
addb
es
aaa
push
in
xor
inc
mov
lret
jns
ljmp
sub
dec
xor
jbe
mov
push
push
sub
jl
xor
aas
pop
mov
add
sbb
das
pusha
cmp
push
jo
out
testl
dec
push
clc
jmp
pop
nop
lahf
rcrb
js
pop
push
cwtl
adc
decl
fisubrs
stos
int
lds
xlat
inc
push
and
push
cmpsb
push
push
dec
push
roll
mov
mov
scas
cmp
lds
jae
subl
lods
cmpb
shr
int
cmc
add
mov
jp
mov
je
outsb
and
sub
out
xchg
shlb
notb
movb
pop
stc
jo
pop
lahf
cmp
lock
cmpl
fiadds
push
add
mov
push
jo
cmp
outsb
shlb
inc
xchg
insb
mov
push
mov
jbe
push
jo
jg
and
push
mov
fwait
in
and
xor
pop
sub
push
xchg
lods
scas
mov
push
movsb
or
ja
or
sbb
mov
mov
or
outsl
mov
xsaveopt
mov
cmp
xchg
jo
aaa
adc
jge
mov
jae
inc
fwait
hlt
iret
pop
loope
repnz
test
nop
cwtl
mov
jne
scas
enter
xchg
js
test
or
xor
mov
mov
inc
jo
jmp
inc
sar
and
dec
addr16
fs
xchg
jge
jo
sbb
stos
cmp
pop
imul
pop
fsubrs
sete
push
test
movsb
vmovupd
or
into
jo
jne
jecxz
aam
aaa
psrad
jmp
insw
sub
adc
dec
pop
push
cmpsb
mov
mov
push
xor
adc
sub
xchg
adc
sub
das
int3
ficoml
dec
mov
xor
int
dec
push
hlt
jo
aas
lods
js,pt
xlat
mov
jo
pusha
cltd
jne
jl
push
jo
mov
outsb
jnp
fldz
jo
fisubrs
in
fdivrs
jo
cmp
or
push
out
sub
lret
mov
cmc
xchg
jae
divl
mov
cmp
jp
sar
mov
inc
aaa
xor
std
aas
in
jo
cwtl
outsl
cmpsl
sbb
int
lds
mov
imul
repz
dec
enter
pop
mov
int
scas
aaa
nop
lret
out
xor
popa
mov
subl
xor
pop
dec
js
pop
inc
dec
jo
mov
add
in
ds
movlps
hlt
cmp
mov
jo
sbb
ret
mov
mov
sub
sti
or
jo
push
inc
out
mov
pop
rorb
pusha
mov
shll
jmp
xorl
cmp
pop
in
popf
push
stos
pop
test
js
test
fmull
dec
sbbl
jbe,pn
sahf
aaa
mov
jo
movsl
outsb
inc
cld
push
loope
jo
ljmp
jo
mov
cmpsl
and
and
push
inc
add
jo
push
aad
cmp
out
jo
jecxz
pop
loopne
adc
pop
int
sub
cs
xchg
subb
jmp
ds
jo
xor
jne
sti
or
shl
xor
clc
hlt
jne
int
enter
inc
xor
push
jo
cmpsl
nop
add
stc
sbb
inc
xor
loop
inc
call
jo
mov
andl
cmc
jbe
imul
std
adc
fucomip
iret
xchg
dec
jo
mov
mov
insb
sbb
jo
jge
aad
push
cmp
jge
jo
dec
pop
pop
and
adc
jge
daa
decb
fs
sbb
cmp
add
test
cltd
mov
sub
push
dec
lcall
jo
ror
xor
mov
rolb
loope
mov
icebp
xchg
ss
adc
mov
mov
rorl
cmp
fildl
subb
jo
sbb
ret
cmpsb
movl
fmull
jns
cmp
dec
aam
daa
mov
or
in
xor
xchg
sub
inc
sbb
je
push
xor
gs
jo
les
dec
xchg
scas
jo
sub
je
pop
push
fs
pop
xchg
lods
ficoms
mov
ljmp
push
pushf
push
lods
cvtpi2ps
fs
bound
push
mov
jb
jo
dec
mov
rclb
inc
or
jne
fdivs
mov
orb
inc
sub
into
int3
fwait
cwtl
jo
xchg
mov
or
popl
movsb
add
popa
inc
int
imul
and
imull
into
cs
jo
rorb
push
pop
push
dec
inc
inc
dec
adc
mov
popf
jno
test
das
call
pop
jp
adc
dec
hlt
inc
mov
pusha
rcrl
dec
repz
fsts
mov
cmc
push
dec
push
push
pop
pop
stos
jnp
mov
sub
mov
pop
leave
fcoms
nop
inc
sbb
mov
jne
adc
insl
and
int3
fbstp
sub
xchg
jl
adc
out
imul
jo
ja
faddl
jo
in
fcmovnbe
xchg
test
sbb
mov
cmp
and
fmull
out
stos
push
out
je
hlt
nop
fldcw
dec
push
add
and
xor
jg
push
lock
mov
hlt
cmp
addb
or
jmp
lret
ljmp
xor
jo
xchg
adc
stos
xor
imul
aas
pushf
and
roll
push
jb
inc
adcb
sbb
out
jo
xor
mov
dec
sti
je
popa
ds
nop
sbb
mov
into
js
jo
lcall
jo
fsubrl
nop
idiv
out
push
ss
in
inc
xor
pop
adc
lds
inc
sbb
sbb
mov
clc
jl
cmc
cmp
gs
push
sub
repnz
inc
push
dec
xchg
pop
jo
jae
hlt
xor
cmpsl
push
daa
testb
nop
push
adc
ret
jecxz
push
adc
out
xor
sub
cmp
sbb
xor
xor
mov
fstl
mov
lcall
sahf
adc
in
or
hlt
xor
adc
mov
mov
je
mov
jecxz
lods
test
leave
insl
adc
hlt
mov
std
mov
inc
mov
inc
and
add
mov
rcr
xor
repz
shlb
shll
nop
cmpsl
jnp
repz
dec
in
jae
daa
add
mov
jl
jle
out
fs
adc
je
mov
not
push
test
mov
xor
loopne
fs
pushf
push
repnz
iret
sbb
insl
sub
outsl
jl
mov
and
cmp
fxch
out
js
cmp
movsb
pop
xor
and
mov
int
rorb
movsb
sbb
or
shlb
or
jmp
arpl
cmp
mov
sbb
mov
lock
iret
insl
je
mov
pop
scas
aad
pop
mov
sarb
aas
adcb
xchg
pop
cmpsb
setg
dec
enter
mov
pop
movsl
inc
faddp
lods
cmp
mov
and
add
sbb
mov
jno
adc
mov
pusha
fldl
sbb
mov
jns
jge
jg
dec
shrb
xchg
ds
push
mov
cmc
push
mov
loopne
push
xchg
and
xchg
movsl
sub
xor
mov
ljmp
cltd
mov
andl
test
mov
cmpsl
add
jns
adc
adc
out
mov
push
cltd
ds
mov
nop
sbb
sub
mov
scas
fiadds
popf
aad
and
xchg
xor
lcall
jl
dec
shl
xor
xchg
movsb
je
push
jle
mov
cmp
int3
adc
jno
lahf
cwtd
sbb
add
mov
pop
xor
cwtl
push
mov
gs
xchg
mov
in
mov
jl
push
mov
outsb
push
movsb
inc
imul
lret
dec
rorb
jae
leave
sbb
cmp
test
or
mov
adc
mov
outsl
xchg
mov
xorb
mov
fldl
insl
pop
adc
push
and
shll
sbb
mov
and
hlt
nop
mov
mov
or
mov
and
or
repnz
js
shr
insb
mov
jo
mov
pop
aad
enter
mov
mov
lock
pop
outsb
jg
ljmp
xchg
mov
mov
push
js
xor
inc
aad
je
and
pusha
inc
ja
paddsb
je
mov
xchg
dec
sub
jp
mov
int
in
pop
adc
cmpsl
insb
dec
adc
mov
push
pusha
lock
iret
dec
and
jne
scas
adc
or
dec
cmpsl
adcb
cs
jo
ret
arpl
jo
jne
imul
mov
xor
mov
popf
mov
rcrl
push
fs
jo
and
inc
inc
enter
pop
xor
lahf
sbb
icebp
bound
xchg
in
sbb
or
mov
fstpt
pop
daa
jo
in
out
fldenv
or
call
out
sbb
shlb
xchg
ret
xchg
xchg
pop
dec
test
and
out
imul
outsb
adc
jg
push
xlat
stos
xor
addr16
mov
add
and
shll
mov
daa
out
test
ficompl
mov
add
inc
sub
xor
mov
stos
lea
and
push
cmpsb
xor
xor
mov
sbb
mov
lods
lret
daa
cltd
scas
push
sub
push
fisubs
cmp
ljmp
arpl
lock
in
cmpsb
fwait
jge
std
or
shlb
pop
aam
and
sarl
adc
xchg
lahf
ljmp
pop
inc
ret
jp
leave
cmp
aam
insb
mull
mov
sbb
lcall
loope
jo
dec
sbb
jg
xchg
lret
lods
les
xchg
lds
xchg
xlat
leave
arpl
xchg
xor
lods
add
rep
push
dec
cli
test
jo
cwtl
dec
inc
pop
push
lods
sbb
insl
jo
pop
iret
jb
dec
fisttpll
xor
mov
mov
jmp
jo
inc
test
jmp
adc
mov
push
sbb
add
push
std
push
or
popf
jl
cmp
sub
and
and
mov
ja
sub
push
fucomi
mov
jns
in
mov
jno
stc
arpl
inc
repz
mov
pop
inc
dec
rorb
fcomps
dec
mov
lahf
push
cmp
cld
jo
fidivl
loop,pn
sub
cmpsb
pop
enter
fwait
push
push
cwtl
mov
mov
jmp
pop
sub
xor
fdivl
inc
xlat
cmp
test
jbe
mov
mov
fists
mov
lods
pusha
lret
dec
outsb
popa
mov
out
leave
jo
int
mov
jo
lea
xchg
in
pop
orb
or
out
leave
movsl
sbb
jmp
pop
repnz
notl
outsl
adc
xor
int
fwait
pop
add
cwtl
cmp
out
mov
js
imul
mov
cmp
fsubp
arpl
sbb
out
scas
adc
dec
push
mov
push
popf
js
jge
or
clc
jmp
outsb
bound
cmpsl
pop
rorb
xchg
enter
xchg
jl
arpl
insb
xor
jg
add
push
arpl
lcall
fldcw
mov
in
jmp
jg
xchg
sti
xlat
fcomi
mov
pop
xlat
fistps
js
sbb
insl
pusha
and
mov
std
add
jle
xchg
push
and
adc
sahf
push
jns
movsb
enter
push
cmpsl
lea
fwait
pop
aaa
cmpsl
fs
arpl
fldl
es
jbe
push
adc
add
sti
dec
sahf
mov
inc
test
and
xchg
adc
mov
xchg
sarb
xchg
rclb
out
mov
push
out
lds
push
fs
test
mov
daa
sub
jae
movsb
sti
std
jne
scas
js
arpl
xor
sbb
or
das
in
ret
sbb
mov
sub
add
mov
jae
sarl
icebp
rcrl
jmp
stos
push
imul
movsl
xchg
clc
cmp
arpl
pop
test
orb
clc
jns
jno
push
xchg
cs
pop
mov
mov
fnstenv
lcall
arpl
xchg
iret
push
fidivl
mov
inc
xor
push
sub
mov
and
imul
pop
sbb
cmp
push
push
mov
test
push
inc
into
loop
repnz
sub
fistpll
sub
in
mov
sti
shll
inc
gs
std
sub
mov
xor
fidivs
fnsave
push
and
adc
sbb
inc
push
sti
push
das
mov
insw
shrl
mov
idivl
mov
nop
lods
repnz
pop
pop
push
cmpsb
mov
icebp
xor
push
push
cmp
insb
ret
push
call
fnsave
pop
and
mov
cmc
sbb
repnz
pop
pop
arpl
ret
mov
fwait
cltd
lds
cwtl
imul
push
lcall
jns
lret
pushf
xor
cld
mov
adc
ret
loope
inc
dec
dec
xchg
jecxz
and
push
mov
rcrb
fs
repnz
sub
jae
rcl
sahf
push
jp
fmuls
mov
jle
mov
in
sbb
or
repz
pop
fs
test
outsb
das
lock
in
dec
push
push
incb
pop
xor
sti
xor
xor
in
outsl
dec
insl
addr16
sub
sbb
or
sbb
sbb
sbb
sbb
sbb
fsub
mov
or
or
es
ds
push
out
pushw
jecxz
loop
popa
push
loope
adcb
push
jg
call
jle
cwtl
mov
in
in
negl
mov
dec
or
cs
es
js
dec
mov
jae
repz
jb
repnz
jno
icebp
cmovns
dec
jmp
out
movsb
or
bound
rorb
and
mov
sbb
sbb
sbb
sbb
sbb
sbb
jns
jmp
insb
cmp
mov
out
adcl
xchg
ss
xor
jno
in
leave
call
cmp
push
xchg
sub
mov
push
movsl
push
test
add
push
pop
push
cmp
xchg
shrb
pop
nop
insl
push
sahf
fcompl
jbe
dec
push
repz
sbb
fnstenv
icebp
adc
adc
stos
dec
stos
out
and
pop
sub
sbb
ja
push
or
or
cs
mov
push
cmpsb
push
in
loope
jg
jle
sbb
cmp
aaa
push
xor
inc
push
mov
sub
mov
mov
inc
lret
rcll
push
pop
push
add
push
jns
ja
mov
jne
je
xor
push
xchg
push
shll
sub
adc
sub
ror
lahf
cmp
sub
sbb
imul
lods
stos
or
pop
adc
push
shll
mov
jg
cld
repz
jb
repnz
sar
das
jge
push
inc
stos
inc
sahf
pop
pushf
fcompl
adc
mov
dec
ljmp
push
mov
jno
outsb
imul
add
in
dec
int3
push
add
push
std
push
cmp
test
and
mov
xchg
push
repnz
sub
in
mov
xchg
movsl
int
cmp
sub
sbb
or
pop
movaps
or
pop
mov
sbb
pop
notl
jbe
adc
adc
jle
jge
clc
push
push
push
repz
xor
mov
jge
pop
or
leave
pop
xchg
and
adcl
pop
adc
adc
or
dec
add
push
sbb
stos
jo
mov
sub
push
inc
cmovp
dec
pop
or
inc
mov
push
ficoms
push
shll
in
sbb
pop
int
cmp
bswap
sub
or
pop
filds
sbb
flds
mov
push
push
shrd
stos
xor
mov
mov
cwtl
rclb
xor
shlb
lret
loop
and
in
mov
mov
push
xchg
in
les
inc
push
adcl
cmp
cmpsb
and
loope
xor
jns
sbb
aaa
xor
adc
xchg
je
mov
sbb
and
testl
mov
cmp
bound
mov
outsl
pushf
lret
cli
ds
push
push
nop
sahf
sub
sti
pushf
cmp
hlt
xchg
xor
out
hlt
out
jae
repz
jb
repnz
icebp
out
in
in
jecxz
loop
loope
add
push
icebp
std
icebp
cld
icebp
sti
push
fyl2xp1
idiv
pop
div
cmc
icebp
hlt
mov
icebp
in
lock
cmp
sub
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
push
stc
push
clc
sbb
hlt
adc
adc
adc
push
lock
out
push
out
mov
outsl
in
push
jmp
ljmp
push
out
in
in
jecxz
loop
loope
add
push
ljmp
icebp
stc
icebp
clc
icebp
div
div
cmc
icebp
hlt
icebp
repz
repnz
nop
dec
test
sub
ljmp
or
or
jecxz
bound
loop
popa
or
or
or
or
testl
jne
cmc
or
or
outsb
mov
in
pop
insb
sbb
imul
fsubrs
or
imul
loop
popa
adc
adc
adc
adc
adc
ja
jbe
notb
jne
cmc
adc
adc
repz
out
mov
lcall
insl
push
adc
popa
adc
adc
adc
adc
std
adc
adc
je
hlt
adc
repz
repnz
icebp
push
add
cs
imul
addr16
sbb
sbb
sbb
sbb
sbb
sahf
jle
mov
push
std
push
jl
cld
push
jnp
sti
push
jp
js
je
jae
repz
jb
repnz
jno
icebp
cmc
mov
call
adc
out
gs
adc
adc
adc
adc
adc
adc
sti
adc
cli
adc
stc
sahf
sub
xchg
repnz
jno
icebp
adc
cmp
lcall
call
xchg
out
gs
in
fs
in
arpl
loope
std
in
jnp
sti
icebp
jp
cli
icebp
jns
jae
js
or
or
insb
icebp
push
pop
lock
out
add
out
fwait
pop
imul
repz
icebp
gs
in
fs
in
arpl
je
bound
sbb
mov
xchg
jns
stc
mov
data16
xor
xor
testb
repnz
in
mov
mov
push
push
inc
arpl
or
int3
popa
rdtsc
adcb
adc
call
jle
jl
js
ja
mov
icebp
div
jne
cmc
icebp
je
hlt
icebp
jae
icebp
pop
loop
in
or
jmp
push
ljmp
hlt
call
sub
push
jp
jbe
jne
cmc
push
je
hlt
push
jae
repz
jb
repnz
jno
outsb
mov
jmp
cmpsl
addr16
out
push
out
gs
jecxz
call
push
jge
std
push
jl
cld
push
jnp
sti
push
jp
cli
push
ja
jae
jb
repnz
jno
icebp
cmc
cs
outsb
push
insb
push
push
ss
out
gs
xor
or
sub
je
cld
sbb
pop
pop
or
or
bound
lock
outsb
leave
out
sub
in
or
or
loope
orb
or
decl
cld
jmp
std
mov
mov
cmpsl
jae
std
jb
repnz
jno
sub
sahf
ds
push
notb
push
adc
mov
ffree
int
cmp
mov
sbb
sti
push
pop
cwtl
test
pushf
bound
call
dec
je
push
pop
arpl
sbb
push
xor
lods
ljmp
fucomi
outsl
mov
jmp
pop
or
or
xlat
or
or
aad
push
or
or
shrl
js
rorb
dec
inc
sbb
sbb
pop
lret
test
data16
shlb
mov
jmp
pusha
sub
jl
jle
push
dec
mov
add
lret
mov
sub
cmp
lret
imul
in
jg
xor
jge
cmp
int3
xor
mov
fsubrl
call
fstpl
aad
mov
psubsw
shll
leave
mov
mov
or
xor
jge
adc
test
dec
xchg
jle
jp
jnp
addr16
fstpl
cmp
sub
and
popa
xor
int
int
cmp
mov
cld
in
cmp
leave
pushf
lcall
lods
in
or
push
and
push
pushf
dec
lahf
pop
jge
test
int3
cmpl
testl
sbb
and
sbb
or
stos
int3
test
cmp
pop
cmp
push
pop
push
push
dec
sub
stos
xor
into
or
mov
js
repnz
push
push
int
cmp
sub
sbb
pmaxub
or
lock
iret
push
inc
push
cmp
mov
jle
push
ljmp
rclb
popa
hlt
xor
lret
inc
push
push
mov
dec
sahf
mov
mov
or
mov
mov
repz
jb
repnz
dec
dec
stos
test
or
sub
rorb
or
in
mov
pushf
mov
push
cltd
push
js
aaa
push
xlat
push
xchg
push
xor
xor
adc
xchg
cwtl
push
test
sub
mov
jmp
lret
push
pop
or
hlt
pusha
jl
jle
cld
or
sbb
cmp
xchg
inc
in
ljmp
shrb
lock
movsl
push
jo
out
adc
leave
imul
fidivrs
pop
push
push
push
xchg
out
insb
adc
jb
mov
mov
je
pop
std
mov
mov
repz
push
stos
out
sahf
dec
pushf
sub
push
mull
jmp
fsubr
mov
cmp
in
and
push
mov
adc
mov
xchg
mov
xchg
pushf
inc
lcall
sbb
lcall
into
imul
sub
jmp
and
xor
stc
sub
or
push
or
push
and
cmp
push
sbb
jmp
addr16
cmp
mov
xchg
or
or
pop
fs
jl
jecxz
and
movsl
xor
mov
push
cli
push
jns
stc
xor
popa
jl
testb
or
or
sub
mov
mov
xor
jle
xor
xor
ljmp
lahf
aaa
pop
clc
jecxz
bound
push
loope
add
push
jle
jbe
or
out
inc
repnz
jne
hlt
or
jb
repnz
xor
insl
in
in
jno
icebp
push
imul
addr16
loop
popa
jne
xor
xor
cli
imul
xchg
lahf
hlt
pop
mov
push
imull
or
je
hlt
movaps
jno
xor
mov
das
popa
push
call
lret
in
pop
js
pop
mov
daa
adc
aam
push
mov
mov
cmpsb
or
cmp
xchg
jne
xchg
mov
jb
in
mov
iret
fisttpll
sub
and
dec
xor
dec
hlt
mov
or
sbb
cltd
or
je
aam
cld
mov
scas
call
repnz
insb
dec
ljmp
jp
inc
jno
dec
lret
lahf
stc
cmp
bswap
sub
int3
aad
stc
jb
mov
push
or
inc
testb
push
stos
push
leave
push
mov
push
xchg
push
and
inc
push
add
adcb
loopne
mov
sub
repnz
sub
jb
adc
sub
js
nop
imul
or
mov
sub
sbb
sbb
sbb
sbb
sbb
cmp
mov
popa
divl
pop
xor
xor
xor
lcall
xchg
dec
adc
daa
mov
and
mov
cwtl
and
mov
push
stos
jp
cli
push
jns
add
js
aas
or
sahf
repz
mov
outsb
inc
aas
int
sbb
mov
cmpl
hlt
divl
imul
out
push
jecxz
jmp
jnp
sub
jp
cli
mov
lock
test
bound
xor
out
jae
jge
jns
testl
arpl
cmp
jge
bound
repz
mov
jns
in
loope
jbe
add
hlt
je
popa
jb
idiv
push
bound
cmp
sub
imul
ret
jb
xor
in
push
dec
sub
lret
cmp
sub
sbb
or
sbb
jle
loopw
stos
xchg
movsb
scas
inc
jl
sbb
cmp
icebp
mov
mov
negb
ja
test
ljmp
fs
cmpsl
aas
dec
and
repz
fnstsw
sub
fs
xchg
mov
mov
fwait
int
cmp
lock
leave
enter
or
andl
cwtl
dec
mov
out
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
loopne
std
sub
in
das
subb
dec
repnz
xor
xor
or
pop
jns
adc
xchg
fimuls
ljmp
adc
xchg
jb
nop
dec
mov
test
mov
or
or
mov
js
cs
mov
or
xor
or
mov
or
pop
imul
or
in
or
mov
mov
or
jle
je
jl
fcomi
shl
add
dec
and
shl
loopne
xor
std
jb
popf
sbb
pop
mov
and
movsb
xchg
jbe
xchg
and
cmp
cwtl
mov
xor
mov
xchg
mov
popf
loop
and
sbb
mov
cld
push
pop
push
jg
push
xchg
push
adc
push
mov
adc
dec
sub
or
stos
push
jl
push
adc
push
xchg
push
adc
xchg
push
adc
xchg
push
adc
xchg
push
and
scas
outsb
dec
dec
imul
dec
je
mov
movsb
fdivr
out
sub
cmpsl
lods
lahf
insl
paddsw
or
pop
mov
cld
cmp
mov
sbb
mov
icebp
cmp
mov
je
mov
push
icebp
sub
ljmp
lret
int
out
data16
mov
icebp
in
arpl
jecxz
cli
jle
jle
push
cmp
or
cs
sub
rcrb
in
xchg
in
lahf
sub
cld
inc
sbb
sbb
jno
add
mov
push
divb
xor
je
mov
cmp
inc
dec
inc
test
shrl
loopne
pop
or
or
fimuls
pop
or
punpckhbw
adc
ficomps
repz
pop
adc
je
mov
inc
inc
sub
daa
popa
movsb
xor
xor
and
movsb
push
and
mov
popa
mov
xor
xor
xor
dec
cmp
in
cmpsb
cmpsl
subl
arpl
cmp
addr16
out
sti
or
jb
dec
xchg
hlt
adc
stc
xor
adc
xchg
push
rclb
and
pushf
push
lcall
or
jge
inc
mov
fstl
sbb
jmp
std
movsl
jl
out
xchg
sti
in
xor
stc
xor
testb
loopne
pop
push
stc
je
inc
or
shll
fists
dec
cmp
push
fstl
push
fcoml
push
fldt
or
or
jnp
hlt
jbe
jecxz
enter
adc
xor
jns
cmp
ljmp
hlt
jb
adc
mov
jbe
loop
and
and
push
stos
inc
pop
stos
inc
push
push
les
push
ret
push
inc
popa
imul
push
loopne
pop
lret
jne
shll
sub
aad
push
push
aam
push
push
rcll
popa
daa
xor
shr
push
or
fisttpll
iret
cmp
sub
sbb
or
sbb
mov
push
lods
jnp
push
add
cs
std
int
sub
loope
or
cmpsl
push
and
push
and
and
mov
cmp
push
hlt
jno
lret
loop
es
cmpb
imul
dec
xor
xor
xor
lret
xor
lret
out
cmp
push
mov
lret
pop
pop
jmp
call
js
leave
cmp
mov
sub
mov
jae
cld
jnp
push
mov
mov
jb
scas
dec
int3
hlt
lret
ficoms
cmpsl
stos
loopne
cs
push
push
push
rolb
push
pop
shll
mov
iret
popa
dec
mov
int
dec
sub
daa
mov
movsl
sub
xor
or
xor
and
test
fwait
rep
sbb
test
jne
leave
test
repnz
cld
push
cmp
lock
xor
or
ljmp
shrl
bswap
push
in
push
jb
xorl
push
mov
and
popa
lods
inc
add
decl
cmp
jae
sarl
test
add
hlt
or
pop
adc
pop
or
int3
cmp
pop
stos
push
hlt
cmp
fsts
cwtl
push
mov
call
icebp
cs
es
ds
push
in
jmp
push
push
jae
stos
push
hlt
out
in
in
loop
sub
fimuls
std
stos
dec
xor
push
jecxz
push
clc
in
mov
cmpsl
repz
out
int
scas
in
cwtl
stos
or
cmp
push
xor
rcll
mov
mov
stos
in
orb
loope
in
jno
jbe
movsl
inc
lods
call
out
mov
xchg
push
adc
push
dec
lods
in
insb
fs
std
mov
cltd
xchg
js
or
rcr
das
inc
icebp
int3
gs
sub
fs
icebp
mov
icebp
negl
cmpsb
mov
fdivl
lahf
push
stc
fsts
gs
jnp
mov
add
push
mov
push
es
ret
mov
xor
inc
es
ds
cld
data16
jne
jno
outsb
or
sahf
jmp
dec
hlt
bound
or
jae
test
jns
js
ja,pn
in
int3
jbe
ljmp
in
insl
imul
push
dec
hlt
mov
push
push
xor
mov
test
inc
jb
cltd
outsl
enter
repnz
lock
push
or
adc
push
ja
mov
cli
loop
call
jae
mov
test
icebp
cwtl
outsb
test
jmp
lcall
jecxz
inc
and
pop
icebp
xor
mov
or
out
jae
sub
jnp
addr16
data16
xor
in
jecxz
cli
in
std
mov
xchg
jp
cli
mov
push
test
arpl
or
jno
je
push
outsl
push
out
push
outsb
mov
in
jbe
movsl
ljmp
in
orb
bound
inc
xor
push
je
push
js
clc
push
ja
imul
icebp
divb
ljmp
insb
repz
jb
bnd
lock
jae
xchg
out
loop
cmpsb
inc
sti
push
mul
jmp
movsl
in
test
and
movsb
fisttpll
mov
adc
pop
adc
adc
push
mov
lahf
outsb
push
out
in
loope
lahf
imul
add
lods
scas
push
mov
jno
movsl
cli
in
adcb
hlt
jo
repnz
mov
bound
lock
jb
sub
enter
in
jae
popa
xchg
loope
mov
test
ja
jge
mov
xchg
cld
mov
loop
mov
mov
mov
mov
rolb
jb
push
enter
lods
jb
loop
or
loop
or
sbb
sbb
sbb
sbb
sbb
sahf
stc
jl
clc
fisttpll
jb
repnz
jno
das
mov
push
stos
outsb
push
out
push
insl
push
in
push
insb
mov
sub
loopne
and
das
push
fistpll
and
clc
bound
or
les
icebp
fisubs
ljmp
insl
mov
sub
sbb
sahf
ljmp
push
out
loop
bound
ds
mov
and
or
sbb
sbb
hlt
repz
fstpl
or
sbb
sahf
loop
in
and
cmp
cmp
or
sahf
jbe
addr16
cmc
icebp
je
hlt
icebp
jae
add
jb
and
out
lret
xor
jb
cmc
sti
jg
jnp
aas
inc
clc
loop
neg
add
not
and
pushf
jmp
push
enter
jmp
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
cli
gs
or
or
testl
je
pop
es
repz
cmp
mov
popa
mov
mov
jbe
xor
xor
in
scas
imul
sub
push
daa
orl
arpl
popa
andb
in
cmpsb
sub
imul
fs
imul
js
call
jbe
xor
in
subl
insb
push
in
dec
imul
push
ljmp
andb
out
or
jb
ficompl
imul
inc
fstps
sub
aam
jae
or
inc
clc
cs
call
mov
mov
aam
xchg
inc
test
mov
call
andb
std
mov
xchg
icebp
mov
and
enter
xor
hlt
jg
loop
mov
decl
cmp
insl
repz
fcmovu
sub
inc
testb
sti
insb
jp
or
inc
xor
orl
pushf
test
mov
lret
xor
mov
or
inc
mov
mov
dec
lods
popa
cld
cmp
mov
test
je
inc
repnz
imul
adc
jg
xor
push
mov
sub
push
inc
sbb
pop
sub
push
push
xchg
push
mov
mov
movsl
orb
in
xor
addr16
es
in
pxor
loopne
push
stc
push
hlt
push
mov
lock
sahf
or
sub
or
sbb
sahf
pop
jl
cwtl
icebp
jae
mov
jle
add
push
pop
loop
mov
dec
jmp
add
dec
stos
or
sbb
mov
sbb
call
cmpsl
in
mov
bound
mov
or
mov
sbb
or
mov
das
mov
xor
ja
adc
cmp
fcompl
cmpsb
out
sub
stos
or
xchg
jne
add
bound
push
pmaddwd
adc
push
mov
inc
gs
push
mov
adc
xor
mov
testl
pushf
mov
data16
js
mov
jge
mov
push
hlt
lock
mov
mov
sti
js
push
fstps
sub
and
xlat
pop
adc
mov
movsl
pop
mov
cs
mov
and
and
push
cs
lahf
pop
pop
outsl
fstl
andb
fimull
jmp
int3
add
imul
sub
gs
loop
sub
sub
jle
leave
mov
xlat
popa
inc
movsl
shlb
or
hlt
push
sbb
loop
loopne
jnp
cmp
inc
in
adcb
lods
leave
adc
xor
mov
popa
sahf
pop
js
and
hlt
jae
sti
pop
outsb
int3
out
xlat
popa
imul
push
and
mov
adc
jle
test
daa
mov
arpl
sub
sbb
jnp
sub
xchg
jno
mov
imul
mov
and
cmpsb
mov
clc
push
jb
jnp
in
pop
je
push
jae
repz
sbb
push
dec
stos
xor
flds
mov
add
xchg
lock
icebp
mov
mov
mov
imul
fcoms
mov
dec
jo,pt
movsl
aas
cmp
leave
in
jmp
xor
jb
push
push
push
aam
push
jno
sub
lcall
stos
je
js
int3
icebp
mov
ret
sarb
mov
xchg
nop
cmp
sahf
cmpsl
mov
nop
mov
cld
lahf
callw
ljmp
cmc
sbb
out
or
jle
mov
fdivr
mov
mov
in
mov
xchg
jb
jp
int3
mov
test
cmp
leave
xchg
lret
adc
adc
push
adc
and
sahf
pushf
push
mov
mov
hlt
mov
in
jb
out
call
jnp
enter
call
imul
add
out
std
insb
stc
movsl
rcrl
cld
out
cmc
xchg
sub
push
xor
mov
xor
or
sahf
scas
pushf
cs
lods
push
sub
push
sub
jbe
sub
test
jg
xchg
insl
and
sbb
jg
out
inc
lret
insl
pop
xor
in
aas
leave
pop
cmp
sub
jb
pop
mov
mov
pushl
repz
sbb
dec
xor
xchg
shlb
js
mov
inc
aam
lea
popa
inc
push
js
cmp
mov
jmp
das
ds
cs
sub
sub
push
lods
xchg
sub
xor
xor
xor
xor
adcl
jbe
adc
pop
lock
or
pusha
mov
push
mov
fs
and
stos
outsl
cmp
das
add
push
mov
sti
dec
movsl
push
arpl
mov
cmp
and
pop
movsl
push
fnstcw
mov
or
push
es
cmpsb
call
cmpsl
movsb
ja
push
cmp
lods
and
imul
test
daa
loope
xor
push
jnp
lods
outsl
sub
and
jbe
or
hlt
daa
fnop
outsl
cwtl
jnp
dec
dec
imul
aad
dec
and
mov
jno
xchg
mov
cwtl
xor
inc
jae
repz
dec
sub
dec
lods
or
stc
dec
fsubrl
ja
dec
mov
stos
lds
mov
mov
mov
pushf
fs
int3
jl
add
mov
pcmpeqd
enter
leave
subb
rcrb
mov
jl
sahf
icebp
sbb
adc
sbb
lcall
sbb
adc
dec
add
data16
stos
fisubrs
mov
out
cli
push
pusha
pop
mov
out
shrb
je
sti
fucom
cmp
inc
cmp
xor
and
jg
les
roll
out
push
or
mov
push
rclb
pop
push
leave
imul
fnstsw
push
pop
adc
rorl
test
cwtl
mov
ds
das
gs
movsl
add
mov
out
lock
dec
and
lahf
repz
sbb
push
jno
icebp
xchg
ficoms
push
or
repz
jb
repnz
mov
cmp
xchg
pop
cmp
push
push
loope
test
mov
scas
out
and
mov
push
sbbb
fcoms
push
mov
jg
push
aam
mov
sub
out
andb
push
dec
ret
cli
outsl
int
push
xor
lret
cs
movsb
push
xor
mov
insb
scas
leave
mov
sub
mov
negl
clc
mov
roll
addb
das
incl
mov
aad
aaa
pmulhuw
cmp
sub
mov
sub
sti
hlt
and
cmc
sbb
repnz
jnp
nop
push
lock
add
ljmp
out
out
pop
loop
lcall
dec
insl
cld
stos
ja
stc
cmp
or
int3
add
jb
icebp
icebp
lock
dec
out
mov
leave
jmp
ljmp
fs
int3
in
out
loop
movsb
or
or
loopne
std
jb
sti
loop
stc
xchg
push
call
repz
icebp
jno
or
pop
ljmp
mov
icebp
out
sub
mov
xor
or
sbb
outsl
mov
outsb
inc
bound
int3
cli
lock
mov
push
out
popa
imul
jp
pop
shlb
je
outsl
stc
movsb
sub
xchg
imul
call
es
push
scas
pop
xchg
stc
clc
out
lretw
es
sarb
sysenter
lock
outsl
mov
sub
stos
lahf
ljmp
gs
and
xor
pop
ja
hlt
cmp
cltd
xchg
sbb
mov
xor
into
mov
popa
addr16
mov
mov
cltd
xchg
sbb
push
aam
xlat
mov
out
gs
jb
xchg
arpl
bound
push
popa
popa
push
loope
cmp
popa
and
push
pop
xchg
push
fsubr
push
je
out
or
and
in
arpl
mov
sbb
mov
icebp
cmpsl
or
jmp
lret
mov
sar
into
sbb
jb
bnd
xchg
lahf
sti
lahf
in
clc
mov
jg
cmp
daa
sub
pop
jns
sub
jmp
mov
loop
pop
in
mov
or
jl
and
iret
sbb
call
mov
je
sti
loopne
lods
cld
fstpt
fisttpl
push
icebp
sub
sarb
stc
push
fs
sbb
stos
mov
xor
cmp
xchg
xchg
jne
call
sar
ficoms
push
aas
push
mov
loop
aas
fadd
cmc
and
mov
push
bound
mov
mov
jmp
movsb
inc
sbb
sub
or
pop
loop
xor
jle
or
adc
popf
push
fwait
push
pushf
loop
ss
int3
sub
lock
fstpl
xchg
fnsaves
pop
jge
bound
push
cs
mov
and
test
cmc
in
test
xchg
jb
mov
xchg
ja
pusha
mov
jecxz
lds
jbe
pop
adc
fldl
xchg
push
sub
push
and
or
loope
add
mov
inc
sub
ljmp
push
mov
push
xor
cmp
push
push
jmp
std
jle
mov
cmpsb
mov
loop
int
scas
pop
shrb
mov
scas
int3
popa
loope
cmp
stos
shlb
lds
test
shl
sub
imul
cmp
shr
mov
inc
sarb
xor
lret
loopne
add
movsb
insb
or
jl
stos
lea
dec
jp
sub
mov
add
jb
pop
inc
leave
mov
sub
js
loopne
in
jb
outsl
js
dec
jp
shlb
or
pop
or
repz
rclb
dec
push
in
mov
scas
cmp
call
inc
cmpsb
mov
push
rcrl
scas
cmp
gs
cwtl
xor
mov
adc
mov
lods
jae
xrelease
scas
jmp
cmp
pop
test
jb
xor
mov
mov
cmpl
jle
lods
out
fldt
fst
scas
inc
inc
ss
data16
mov
push
mov
int3
add
or
loopne
dec
pop
ret
or
enter
int3
adc
mov
jl
mov
imul
jmp
mov
mov
cmp
test
dec
mov
jp
loope
xchg
dec
popa
mov
repnz
ss
cmp
nop
and
sub
jge
xor
lods
icebp
lahf
out
aam
push
jno
sbb
sarb
aam
inc
and
popa
testl
shlb
jno
inc
sbb
cs
mov
in
mov
fistpl
out
cwtl
shlb
jno
lods
cmp
or
lret
ljmp
push
pop
int3
insb
aas
in
fnop
cmpsb
cmp
jg
hlt
xchg
flds
ds
test
test
mov
cmp
data16
push
jnp
adc
add
repz
cmp
mov
scas
gs
lds
mov
mov
add
xchg
mov
nop
sub
xor
icebp
jmp
sahf
je
mov
je
mov
cmp
stos
xchg
js
mov
hlt
es
xor
sti
aas
out
or
sbb
mov
xor
cmpsb
inc
sub
xor
movsl
stc
xor
or
push
leave
out
clc
std
sbb
sub
test
mov
out
out
jmp
jae
and
das
xor
cmp
lcall
shl
jbe
xchg
insl
sub
or
pop
movsb
out
xchg
xorb
rorl
dec
jecxz
mov
xor
add
repz
out
jmp
jae
mov
add
incb
sub
sarb
jae
int3
pop
jno
xor
stos
mov
jae
xchg
rcrb
fstp
mov
push
jns
push
xchg
sub
mov
test
inc
jns
cmpb
icebp
xor
and
ljmp
imul
and
call
movsb
jl
pop
sbb
call
cs
and
icebp
dec
jl
push
sbb
cld
cmp
dec
or
hlt
icebp
cmp
or
mov
mov
mov
adc
enter
and
push
daa
test
xor
pop
cmp
pop
xchg
popf
inc
aaa
sbb
sub
test
in
test
jg
ss
stc
push
jnp
push
dec
repnz
scas
push
stc
jbe
aas
lock
mov
mov
inc
jge
mov
es
sub
negb
or
xchg
mov
or
mov
inc
jnp
or
subb
push
xor
cld
icebp
icebp
lock
cmp
rol
mov
js
cmpsl
or
cmpsl
int
mov
nop
xor
pop
in
mov
out
mov
cmp
fidivrl
hlt
ficomps
psubw
add
cs
out
push
ret
sbb
cmp
xchg
stos
stos
notl
push
shrl
pop
mov
lea
int3
push
stos
in
or
mov
arpl
add
cmc
or
lret
scas
add
cli
lock
add
das
add
loopne
dec
jg
mulb
cmp
gs
xor
mull
push
fisttpll
xchg
or
scas
scas
inc
or
mov
inc
ljmp
jle
fwait
leave
inc
sbb
mov
push
mov
push
mov
add
mov
sub
sbb
or
rdpmc
mov
push
jb
adc
dec
out
movsb
jae
outsb
dec
pop
loope
pop
or
or
aaa
mov
cmpsl
push
inc
push
movsl
add
lods
xor
and
rolb
sbb
addr16
scas
push
jp
aad
push
push
sarl
pmuludq
jae
stc
mov
xchg
xchg
mov
pop
clc
add
js
fadds
jbe
cmpsl
xor
outsl
fstpl
lods
mov
sti
and
test
jmp
sub
aas
or
sbb
stc
hlt
pop
sbb
aam
mov
adc
cs
dec
xchg
lret
jns
or
lock
jns
or
mov
pop
jl
fwait
std
jb
fyl2xp1
call
xor
inc
xchg
arpl
test
in
and
sub
outsl
addr16
push
movsl
jbe
or
or
xor
icebp
aaa
icebp
xchg
fisttpll
aam
je
pop
incb
sub
dec
rorb
bound
xchg
and
loope
out
or
mov
icebp
xor
jbe
mov
or
sub
cmp
sbb
xor
xchg
sbb
testb
lret
mov
lods
sub
insl
mov
lret
push
and
jmp
clc
push
adc
sub
scas
fidivs
lock
into
or
fistps
scas
jecxz
jo
cmp
cmp
notl
aaa
pop
das
arpl
movsl
lods
mov
out
inc
xor
inc
xor
scas
xchg
lock
mov
jb
or
add
inc
icebp
daa
or
lret
adc
jg
xor
jl
cld
dec
aaa
sti
stos
shlb
popf
ss
jno
lock
clc
scas
int3
push
mov
inc
push
popa
repz
mov
clc
ss
cli
jne
stc
int3
js
sti
ja
mull
or
enter
stos
mov
imul
aas
fs
imul
repnz
incl
xor
jl
or
stc
enter
mov
insl
in
enter
mov
add
je
hlt
es
rcrl
mov
out
inc
mov
or
or
sbb
sbb
push
cmp
and
shl
and
es
xor
sub
jmp
jno
mov
sub
cmp
xor
mov
mov
imul
jmp
xchg
cld
scas
sub
inc
or
lret
in
xor
inc
jo
in
inc
sti
mov
clc
pop
jge
or
lcall
jg
sub
inc
in
stos
jmp
sub
icebp
push
mov
mov
jne
fcmovbe
and
mov
sub
gs
arpl
mov
stc
pushl
xchg
icebp
sbb
cld
jg
sbb
mov
and
add
dec
subb
popa
mov
dec
shr
add
mov
mov
js
daa
sub
sbb
dec
repz
insb
lret
lahf
psadbw
or
lock
ret
or
sub
mov
icebp
inc
push
das
sub
sub
lret
test
loop
dec
mov
mov
pusha
lahf
std
xchg
sub
out
in
jne
lock
jb
pop
das
push
mov
lea
jbe
xchg
pop
mov
jns
jb
jne
mov
imul
inc
sub
push
outsl
push
out
adcl
movsl
cld
sbbb
jne
test
ljmp
out
gs
fs
and
popa
bound
cmpsl
test
fldcw
cmp
dec
mov
loope
adc
jb
ljmp
mov
mov
xchg
push
nop
in
ficoml
mov
sub
stos
jmp
jae
jno
imul
xor
popa
and
ljmp
push
out
dec
jmp
repz
or
rorb
or
lahf
in
cmp
jp
sti
lods
clc
inc
dec
cmp
ds
psubw
pop
inc
in
je
mov
and
jns
mov
jmp
loope
lock
or
sti
fs
dec
pushl
inc
call
jmp
ds
daa
sbb
or
popf
inc
jae
push
xchg
or
mov
push
xor
xor
out
add
outsb
adc
lahf
jl
mov
jno
pop
mov
jmp
lret
xchg
popa
mov
cltd
mov
ja
fidivrl
mov
sub
xor
cmpsl
mov
cmp
mov
cmp
mov
mov
or
loop
adc
jle
movsl
jge
and
cld
jnp
pop
mov
insb
clc
jmp
jmp
fxrstor
cmpsb
jl
mov
inc
mov
sbb
int3
mov
mov
pop
mov
xorb
clc
jp
cld
or
xor
adc
mov
imul
adcl
sahf
push
sbb
dec
cmc
sbb
mov
add
pop
adc
pop
adc
push
adc
mov
repz
repnz
inc
jmp
mov
cmc
or
and
jp
stc
fidivrs
hlt
xor
je
xchg
jb
xchg
arpl
sti
dec
outsb
push
bound
loop
push
jle
jae
ss
push
call
mov
and
cmp
js
test
daa
jno
cmpsl
adc
loop
or
cmp
icebp
bsr
xchg
fisubrs
mov
and
jns
and
stos
dec
sub
xor
xor
push
push
xchg
sbb
js
lods
jmp
pop
jb
jbe
xor
in
mov
mov
and
sahf
clc
lds
or
loope
je
xor
cmp
insl
jne
popa
sub
pop
fdivr
jecxz
movsb
arpl
xor
mov
aaa
adc
adc
arpl
jnp
addr16
or
pop
sub
sbb
pop
fwait
adc
aam
jp
push
ficoml
push
sub
push
cmpsl
orl
jl
rcr
push
lods
mov
lods
lahf
push
or
icebp
sbb
dec
je
push
aaa
push
push
stos
cld
jmp
dec
jb
out
hlt
pop
and
pop
jno
or
in
dec
subl
push
cltd
add
jb
movsl
lods
movsb
loop
mov
cs
lret
inc
xchg
jns
jb
inc
movsb
mov
jmp
popf
xor
sub
push
shrb
xor
cmp
mov
pop
call
mov
nop
imul
mov
mov
stos
stc
sbb
push
ds
mov
and
imul
addb
jle
sbb
jecxz
push
int3
aad
sub
cmpsl
leave
daa
mov
scas
jge
ljmp
xchg
add
mov
sub
aaa
loop
cmpsl
jl
gs
pop
imul
add
push
lock
nop
mov
ds
cmp
fwait
dec
lret
nop
jle
sub
imul
adc
sub
stos
popf
add
xchg
in
stos
movsl
jno
dec
dec
test
mov
cltd
je
pop
sbb
cmp
out
xchg
fmull
je
insl
mov
and
mov
push
jnp
mov
mov
jbe
fs
shlb
mov
sbb
mov
pop
xorb
dec
out
push
xor
lret
add
xchg
repz
lret
mov
xor
jp
lods
sbb
sbb
loop
je
mov
sbb
aam
xchg
lods
incb
in
add
sub
pop
mov
sub
repz
mov
or
cmpxchg
call
sahf
lret
jp
lret
sbb
popa
test
xchg
mov
aas
jnp
or
int3
mov
jl
mov
xor
xor
jp
mov
orl
bound
xchg
xor
mov
cmpsl
sub
scas
push
jp
outsl
jae
push
push
dec
and
outsl
scas
out
sub
add
or
xchg
push
cli
push
jg
jp
pop
mov
lods
loop
cld
cmpsl
jnp
cmpb
lods
xor
adc
xchg
js
lock
dec
lods
sub
mov
shl
mov
gs
fwait
and
mov
or
out
sub
clc
mov
or
fsubrl
adc
inc
gs
shll
cmp
cmp
rolb
imul
jb
xchg
scas
fs
in
sbb
jp
fstps
mov
sti
mov
test
pop
loopne
repz
lret
das
jb
push
jmp
test
repz
adc
sub
pop
aaa
cld
addl
das
xchg
cmp
into
jne
push
popa
movsl
ret
sbb
mov
repnz
add
inc
icebp
pusha
stc
repz
cmp
fisubs
sub
dec
jp
dec
repnz
mov
jb
push
fists
loop
lock
or
push
xor
or
sbb
fsubrp
jb
shrb
js
hlt
mov
shrb
dec
loop
es
mov
pop
mov
or
mov
lods
mov
arpl
cmpsl
mov
insb
lret
stos
daa
data16
pop
hlt
int3
xor
mov
mov
fs
xchg
jnp
pop
js
cmp
mov
mov
or
adc
mov
mov
out
cmp
cmpsl
sbb
add
lahf
mov
mov
mov
int3
push
and
xor
push
call
add
add
shl
sub
fwait
dec
insl
cmp
js
xchg
js
add
orl
push
adc
js
iret
test
mov
mov
mov
ja
mov
sbb
jns
lret
dec
pop
std
dec
push
data16
mov
clc
arpl
jno
xor
sbb
sbb
sub
addb
xchg
repz
or
pop
aas
add
push
imul
cmpsl
xchg
cli
clc
stos
fdivp
jmp
adc
test
mov
xor
mov
loope
cld
icebp
cmp
mov
xor
mov
arpl
cmpsl
cld
stc
and
jmp
cmp
ljmp
add
ret
push
pop
ljmp
pop
jmp
add
xchg
popl
aam
mov
inc
mov
mov
sbb
sbb
or
ficoms
or
jno
pop
fiadds
ja
fcmovu
mov
aam
jb
out
mov
or
or
sahf
xlat
jl
sub
cmpsb
test
sbbl
sbb
out
xor
xchg
mov
jne
mov
inc
movsl
ret
push
jno
xchg
mov
bound
sub
jge
flds
mov
jp
dec
mov
xor
push
push
aam
scas
dec
mov
add
xor
cmc
stc
sub
or
sub
hlt
pop
jno
xor
aas
xor
mov
jo,pn
in
jbe
jmp
clc
add
call
mov
and
mov
test
cwtl
jbe
mov
push
jp
add
xchg
xor
insl
fisttpll
leave
cmp
sub
icebp
pusha
sbb
in
xchg
icebp
cs
mov
stc
jl
cmp
mov
ja
outsb
cmp
mov
stc
push
int3
add
std
mov
push
mov
xor
hlt
cmpsb
jae
cmp
lock
sub
jp
and
cli
in
scas
xor
repnz
push
mov
add
and
icebp
jg
testb
sbb
sbb
icebp
jnp
punpckldq
cli
mov
loope
xor
lock
stos
or
int3
mov
push
stos
mov
mov
insb
int3
inc
in
sbbl
xor
movsl
inc
and
std
cs
out
data16
je
mov
jl
icebp
sbb
cltd
mov
out
sub
mov
fs
inc
xor
mov
or
pop
cmpsl
into
push
mov
push
cmp
je
or
arpl
jl
repz
iret
or
into
dec
gs
xchg
add
push
mov
sbb
pop
push
pop
arpl
xchg
dec
mov
mov
sahf
mov
jno
int3
shll
mov
in
push
mov
jno
pop
or
mov
call
insb
mov
jg
xor
mov
jecxz
or
lds
mov
test
push
hlt
imul
insl
leave
lods
fsub
hlt
clc
ljmp
inc
popa
bound
dec
dec
pop
je
repnz
cli
jb
or
mov
ja
sti
sbb
jmp
jmp
test
data16
xchg
push
cmp
inc
jg
push
add
loop
xor
fisttpll
gs
jl
fdivs
mov
es
jb
leave
bound
imulb
sbb
jns
scas
xchg
mov
mov
mov
add
ljmp
mov
add
and
add
cmc
jb
mov
cmp
lock
push
mov
nop
jmp
pop
jle
insb
lods
jl
std
or
mov
mov
mov
mov
and
in
dec
jp
sub
in
iret
je
fidivl
repz
dec
mov
jbe
and
dec
insl
orb
imul
jnp
jns
mov
sub
call
icebp
mov
jmp
push
jle
push
mov
cmc
jbe
imul
es
outsb
imul
icebp
js
and
std
cmp
sub
sbb
mov
add
jb
mov
mov
mov
xchg
sti
ljmp
mov
mov
mov
xchg
icebp
cmp
xor
jne
sub
scas
xchg
js
cmp
or
cmpsb
sub
int3
add
mov
inc
outsl
sub
jmp
out
sbb
sbb
sbb
pop
jb
and
loope
adc
xor
or
sbb
mov
test
cmpsb
ret
es
jne
imul
mov
or
lret
enter
cmp
adc
insl
cmp
mov
out
or
lock
xor
daa
or
scas
int
cmp
int3
outsb
and
mov
stos
decl
push
out
stos
dec
addr16
arpl
jl
jbe
xor
in
xchg
inc
adcb
mov
mov
daa
or
loop
or
or
sbb
mov
cmp
test
call
cmpsb
push
xchg
push
hlt
test
jmp
neg
inc
jle
int3
dec
dec
loope
int3
dec
pop
jmp
out
icebp
sbb
cwtl
cmp
sbb
daa
xor
xchg
inc
idivb
sub
sbb
inc
mov
mull
pop
mov
xor
scas
in
int3
push
and
icebp
es
xor
mov
xor
mov
inc
icebp
mov
or
lret
scas
jno
popa
scas
xchg
and
stos
jno
xor
daa
in
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
mov
jbe
push
mov
cmc
sub
cmp
icebp
cmp
lock
cmp
jb
xor
xor
push
mov
pushfw
xor
pslld
imul
scas
call
sub
test
jb
push
sbb
pop
mov
adc
outsb
xor
insl
clc
es
push
je
int3
xor
cld
jne
addl
fdivrl
imul
cmp
lock
ljmp
inc
cmpsl
adc
or
mov
sub
jne,pt
and
xor
jle
out
scas
mov
jmp
xor
add
cmp
cmp
mov
gs
xor
xor
xor
sahf
mov
stc
or
or
or
mov
cs
scas
mov
sub
paddw
or
lret
test
aaa
xor
and
icebp
movsb
icebp
and
mov
or
cmp
rorb
push
ds
mov
sbb
sub
push
insb
mov
push
je
test
sbb
call
dec
dec
into
add
scas
xor
xchg
add
shlb
sbb
and
jmp
ds
mov
stc
mov
in
jne
push
push
sarl
jg
and
sahf
jl
push
repz
stos
sahf
cmp
jnp
cmp
ficompl
notb
jecxz
or
xchg
jmp
mov
or
mov
repz
sbb
xchg
lock
jecxz
xor
or
call
pushw
stc
xchg
cmc
les
outsb
push
gs
inc
data16
cmp
pop
mov
cmp
sub
mov
dec
test
mov
sub
negl
jne
testl
push
sub
cs
inc
pop
xor
jmp
and
loop
out
loope
xor
mov
imul
test
es
leave
xchg
sub
data16
xor
je
mov
bound
push
jp
push
cmpsb
in
in
sbb
push
inc
xor
mov
jne
lret
je
fscale
mov
rorb
mov
ss
bound
mov
cmpsb
xor
and
sub
or
or
in
adc
ret
fcomip
pop
icebp
pop
icebp
sti
sbb
je
inc
icebp
insb
fsubp
jg
xor
test
loope
xor
test
xchg
mov
cli
mov
sub
inc
outsb
add
loop
pushf
std
mov
sbb
mov
cmpsb
repnz
sahf
mov
mov
mov
push
jp
push
push
loop
scas
sbb
loop
enter
mov
sub
out
sub
xor
xchg
testb
and
push
xor
fadd
aaa
push
cmp
push
mov
rcll
mov
add
pop
stos
dec
clc
fwait
inc
imul
icebp
adc
or
mov
or
and
jbe
jb
fistps
inc
out
push
sbb
push
mov
push
or
and
leave
mov
push
inc
jecxz
or
push
clc
adc
adc
dec
fs
data16
test
adc
outsb
lock
lock
fsubrl
dec
ss
sub
cltd
xor
or
stos
dec
inc
xor
jmp
sbb
data16
sti
test
dec
xor
dec
mov
xlat
pop
or
sub
scas
jle
enter
ret
xchg
push
xchg
or
loop
push
sbb
pop
fidivrs
adc
scas
imul
adc
scas
loop
scas
mov
add
sub
xor
pop
sahf
lock
push
je
test
pop
sub
jle
jl
pop
pop
mov
push
cmp
stos
iret
stos
dec
in
dec
dec
je
mov
stc
lods
dec
mov
mov
mov
in
mov
pop
aaa
aad
jae
jp
fwait
in
jp
arpl
pop
mov
hlt
sbb
jae
xor
cmpb
lods
sbb
in
jle
sub
add
pcmpeqb
loopne
sti
insl
or
gs
pop
or
jge
mov
dec
movsl
push
push
movsb
jmp
and
dec
leave
stos
cwtl
jmp
movsl
js
scas
lahf
sbb
ljmp
mov
test
jbe
inc
call
dec
gs
movsb
mov
mov
inc
sahf
shll
dec
cmpsl
jge
ja
mov
or
mov
push
mov
sub
popa
inc
je
add
ja
dec
cmp
jmp
leave
and
jno,pt
scas
ret
mov
in
popa
ljmp
ja
shrl
int
pop
pop
dec
arpl
xorb
xchg
cs
inc
mov
inc
and
lret
jg
push
dec
xor
mov
mov
movsb
shrb
pop
in
cmp
in
xchg
jae
dec
leave
push
sub
pop
jmp
jge
scas
rcll
mov
jb
cmp
scas
fnstsw
aam
xor
je
je
jg
dec
add
jp
mov
fs
inc
push
push
imul
ds
sar
ret
xchg
push
and
add
scas
xchg
shl
data16
je
push
hlt
push
jae
cld
xor
lret
outsb
rclb
mov
jl
imull
imul
jnp
mov
pop
sub
pop
push
insb
jo
lret
push
push
cs
je
push
dec
sub
and
int3
outsl
add
dec
icebp
es
sbb
cs
insb
jnp
pop
out
je
dec
hlt
xchg
cmp
dec
loope
cli
push
xor
pushf
xor
sub
rorl
jl
mov
push
out
popa
dec
xor
xor
data16
pop
add
je
mov
aaa
std
sbb
shrb
jmp
sub
in
mov
jp
sbb
std
mov
lret
cmc
sbb
jge
lock
mov
push
aad
jp
xchg
clc
scas
mov
dec
ljmp
mov
sub
cs
sub
lds
or
adc
mov
jmp
pop
mov
pop
shr
sbb
pop
jno
lret
pop
shrb
xchg
or
or
dec
das
shlb
sub
outsl
sbb
cli
insl
sub
lds
sub
pop
pop
in
jb
push
cmp
mov
push
jno
cmpsl
and
sti
inc
push
loopne
ds
arpl
sbb
jae
mov
mov
xchg
mov
cmpsl
mov
add
popf
jmp
mov
mov
xor
in
movsl
icebp
jb
scas
fiadds
push
jmp
ja
xchg
out
xchg
icebp
mov
leave
dec
inc
mov
xchg
addr16
mov
sbb
mov
or
jb
sbb
sub
cli
fnop
jnp
divb
or
add
add
adc
cli
fwait
mov
mov
push
loop
shlb
mov
cmp
jne
adc
xchg
pop
stos
jne
fnstsw
sbb
test
cmp
call
lock
out
mov
in
data16
cmp
jae
std
ljmp
mov
in
jns
out
jnp
jmp
mov
test
cmp
sub
aam
mov
hlt
mov
pop
cmc
or
push
xchg
jmp
loop
imulb
jns
pop
jb
shl
cmpsl
mov
movsb
mov
in
adc
dec
sub
aas
mov
por
fmul
sar
test
or
repnz
push
jbe
dec
loopne
xor
dec
lods
jne,pt
test
push
in
sub
mov
add
shlb
movsl
in
mov
icebp
arpl
jge
pusha
jecxz
cmp
xchg
ja
mov
cmp
adc
and
movb
shr
lods
jp
mov
jb
mov
mov
mov
das
jp
fstps
xor
jae
xchg
add
xor
jecxz
ficompl
cmp
hlt
test
loopew
cmp
or
repz
out
cld
es
jb
jb
sub
sbb
push
and
xchg
mov
stos
xor
mov
push
jns
lahf
cli
add
sbb
mov
lock
out
loope
xor
jge
in
aad
aam
mov
pushf
or
inc
jmp
sahf
or
mov
xor
inc
arpl
lock
mov
xor
sti
push
mov
push
fcoml
pop
xchg
pop
pop
mov
and
mov
xor
dec
jecxz
adc
jg
gs
push
rcll
push
push
rclb
adc
dec
xor
adc
aam
jae
lods
xchg
es
jnp
pop
andb
cmp
lock
jns
dec
mov
push
inc
push
mov
shrb
sbb
cmp
sbb
jae
stos
in
cmp
scas
inc
cwtl
jle
mov
repnz
xor
xchg
mov
push
cmp
test
or
lock
and
sti
cmpsl
lret
data16
sarb
mov
dec
inc
push
testb
sbb
mov
dec
ja
mov
fstl
mov
out
in
mov
js
imul
lds
add
out
mov
dec
lock
in
sub
mov
test
push
sbb
out
scas
pop
je
push
cmp
mov
jae
cltd
test
or
shrl
ljmp
xchg
stos
xlat
hlt
push
cli
and
mov
mov
ds
test
aad
ss
and
push
push
push
xchg
push
dec
jmp
stos
inc
bound
std
stos
imul
cmp
adc
add
mov
mov
ror
lret
adcb
xor
cwtl
sahf
call
decl
jge
gs
lret
inc
push
popa
es
lock
push
mov
xchg
loope
imul
testb
cld
lods
js
ja
pusha
mov
outsb
dec
or
sbb
lods
scas
add
push
cmp
inc
hlt
or
shl
popa
loop,pn
or
sub
out
fcompl
popa
ljmp
jmp
std
pusha
aaa
mov
push
mov
jbe
imul
sarb
add
adc
and
jl
sub
or
mov
mov
mov
mov
mov
or
mov
sub
add
jae
or
jne
addr16
dec
mov
aaa
sub
mov
stos
lahf
jp
pop
mov
jmp
cwtl
xchg
push
ljmp
je
inc
jle
lock
dec
jae
repz
fxtract
bnd
xor
and
mov
cld
aam
stc
mov
xchg
push
add
ret
push
ret
cmp
inc
jae
cmc
push
in
push
mov
mov
sbb
cs
jmp
jmp
popa
int3
xchg
jmp
sbb
movsb
sbb
mov
mov
cmc
in
fwait
stos
lock
cmpl
mov
data16
xchg
mov
xchg
xor
xchg
pop
xor
out
jge
std
xor
xchg
push
cmpsb
in
jns
or
mov
int3
imul
enter
in
adc
xor
inc
in
cmp
mov
das
movsb
aam
dec
out
inc
sub
mov
inc
pop
std
popa
or
cmp
iret
lds
dec
push
inc
mov
jbe
in
jae
out
or
sahf
mov
jg
jns
ficomps
je
pop
and
jb
fdivp
pop
icebp
jns
pop
ds
mov
mov
sub
sub
loop
call
outsb
cmp
jb
xchg
sbb
ds
fwait
mov
sbb
xor
mov
je
lock
mov
xor
arpl
inc
mov
push
mov
gs
inc
xchg
dec
sbbb
addr16
dec
mov
cmp
ljmp
mov
push
daa
int3
xor
push
sub
daa
daa
gs
and
and
in
jl
and
mov
or
sbb
mov
mov
bnd
mov
pop
ss
push
cmp
je
aaa
je
ss
mov
xor
jb
xor
add
xor
scas
or
int3
mov
xor
dec
mov
push
mov
push
in
cmc
movsl
and
and
mov
pop
incl
pop
and
pop
sub
mov
mov
sahf
ror
or
daa
inc
sbb
pop
mov
sti
mov
xchg
xor
inc
add
out
ja
test
pushf
shlb
sbb
push
shl
mov
xor
adc
lods
cwtl
sti
cmpsb
mov
jle
testb
sub
mov
jp
xchg
repz
mov
pop
and
out
fxtract
je
push
flds
cmp
lods
jns
shl
movsl
fs
shl
xor
and
dec
insb
push
inc
clc
or
fldl
cmp
mov
push
outsl
ds
mov
notb
push
mov
mov
dec
stc
mov
inc
adc
adc
adc
jg
rorl
xor
je
push
or
add
loopne
pop
jne
xchg
insl
push
jp
sub
xchg
add
aam
jl
rorb
dec
dec
push
movsb
or
rorb
cmc
loope
or
mov
cmpsl
inc
jb
add
icebp
sahf
icebp
mov
mov
jmp
outsl
or
sbb
repnz
repz
mov
pusha
and
or
sbb
mov
cmc
push
jp
out
imul
pop
ja
mov
dec
sub
aaa
sub
cmp
sahf
mov
lods
and
shlb
mov
jae
imul
mov
pop
jl
push
icebp
push
fldcw
dec
add
jb
daa
repz
mov
and
jbe
xor
dec
mov
loope
sub
sbb
test
cmp
and
push
loope
int3
aaa
je
lods
leave
add
mov
pop
inc
cli
scas
jnp
das
lods
out
sahf
js
stc
dec
pop
fiadds
push
fildl
pop
push
fsts
pop
xchg
xchg
loope
mov
sub
out
int
stc
out
pusha
jae
jp
bound
pushw
in
sarb
push
adc
loope
inc
aaa
imul
xchg
and
dec
xchg
lods
inc
in
repz
sub
lret
mov
cmp
sahf
icebp
pop
lcall
sub
shlb
lret
lds
mov
xchg
icebp
stos
mov
mov
gs
pop
inc
cmp
mov
and
int3
mov
scas
arpl
mov
and
cmp
and
pop
stos
daa
sub
add
push
gs
dec
in
jns
test
stos
lock
ljmp
jge
mov
lock
pop
mulb
push
adcb
cwtl
jae
mov
cmpsl
jns
mov
dec
mov
or
dec
cmp
cmpl
je
sub
and
jp
dec
es
push
loop
or
xchg
pop
xor
fcomp
aad
rcrl
outsl
ljmp
cmp
mov
jnp
or
lock
repz
subl
jae
cmpsb
or
add
dec
sub
mov
hlt
lret
or
and
mov
stos
mov
scas
mov
push
gs
lods
mov
cli
int3
push
ljmp
sub
sbb
jbe
lods
xor
shl
outsl
fstpl
lods
or
test
inc
mov
out
mov
xchg
mov
lret
out
ud1
enter
leave
pop
dec
subb
or
sarb
dec
jg
imul
mov
scas
fwait
jae
lret
mov
xor
clc
dec
les
jg
and
push
fldcw
xchg
mov
dec
dec
push
inc
jge
outsl
sub
lock
es
mov
out
lock
movsl
mov
inc
jb
push
lret
dec
scas
gs
sub
loopne
sub
jnp
idivb
jle
and
shrb
inc
mov
push
int
mov
in
mov
or
daa
stos
mov
lods
shll
and
cs
xchg
pop
jno
int3
mov
repz
lock
push
inc
bound
nop
push
hlt
push
hlt
sarb
cmp
dec
mov
jb
inc
out
mov
sbb
jmp
js
push
jb
ja
mov
sub
aas
xchg
outsb
loop
cltd
sbb
lcall
out
push
mov
mov
push
xor
outsl
jbe
inc
xchg
fs
push
push
repz
xchg
xchg
rolb
div
push
into
stos
jp
les
movsb
push
mov
lock
loop
xor
je
mov
or
call
xor
stos
push
pop
push
sbb
cmp
std
mov
jmp
fisubrs
mov
mov
out
mov
lds
push
stos
dec
mov
jne
mov
and
pop
and
pop
jmp
fisttpll
jb
sub
aas
ret
mov
or
enter
jmp
or
push
jnp
push
pusha
jne
leave
xchg
fs
jb
sbb
fs
outsb
mov
add
mov
jmp
pop
jbe
cmpsl
test
hlt
cld
in
jmp
in
fcompl
psadbw
int3
mov
clc
std
add
mov
cmpsl
add
sbb
std
mov
push
jnp
or
jbe
outsb
and
pop
xor
xchg
orl
movsl
std
cwtl
cmc
adc
push
cmp
sub
sarb
mov
push
dec
insb
fsubrl
bound
fstl
es
mov
sub
adc
pop
ja
push
sub
dec
pop
das
lahf
push
pop
or
xchg
xchg
push
mov
loope
mov
jbe
ljmp
sub
jl
js
call
orl
push
jns
cmpsb
cmp
insl
scas
cmc
je
sub
test
call
clc
mov
jns
inc
jmp
add
mov
cmpsl
or
xor
jae
test
lods
gs
pop
icebp
scas
dec
popa
outsb
mov
pop
mov
movsl
sahf
std
repnz
outsl
icebp
jp
loopne
outsb
lret
pop
sub
or
xor
or
sahf
enter
jmp
in
mov
add
xor
fdivl
movsl
jb
push
arpl
in
dec
dec
je
insb
scas
inc
and
aas
cmp
leave
leave
mov
cmpsl
jl
mov
outsb
sub
push
sub
mov
jne
push
in
jns
imul
dec
daa
hlt
inc
fnsave
loop
push
int
and
push
mov
cs
jae
or
xchg
push
xor
in
mov
test
sub
and
in
leave
jbe,pn
and
or
mov
mov
cmp
mov
sub
push
pop
or
and
inc
push
cld
jo
scas
or
dec
test
out
test
push
cli
rorb
push
add
sub
imul
dec
jmp
dec
scas
test
cmp
cmp
icebp
sub
mov
push
pop
stos
fs
lods
mov
outsl
out
xor
fdivl
mov
out
cmp
mov
lret
aaa
push
add
push
mov
movsl
gs
or
xchg
rcll
imul
mov
jb
add
jg
out
sbb
lods
mov
loop
mov
sub
out
enter
lret
shlb
cli
xor
push
add
test
xor
and
jbe
out
shlb
and
or
popa
outsl
out
in
insb
test
ljmp
ja
push
mov
jne
es
lock
pushw
or
test
sahf
lcall
scas
xchg
loopne
shlb
jo
push
cmp
push
xchg
push
pop
jl
jg
sbb
mov
inc
sbb
rorl
or
jbe
pop
mov
orps
push
push
mov
sub
xchg
outsb
push
jno
dec
mov
mov
stos
loope
popa
clc
gs
call
mov
fs
imul
pop
jae
dec
sub
or
je
inc
out
orl
mov
shl
sbb
dec
jae
or
mov
cli
xor
mov
and
jns
push
xor
call
jns
cmp
bound
es
es
pop
in
stos
js
dec
mov
repz
add
mov
es
fdivs
and
pop
jbe
movsl
pop
shlb
es
xor
data16
push
mov
pop
test
loopne
sarl
stc
and
jl
jns
repz
scas
inc
and
mov
xchg
mov
mov
cmpsl
loopne
mov
xchg
faddl
out
mov
jb
push
icebp
xlat
icebp
push
icebp
sbb
in
aad
push
adc
adc
and
or
pop
movsl
adc
push
ds
pop
push
mov
stc
or
cmp
sbb
lods
insb
pop
leave
push
add
push
orb
adcb
icebp
data16
std
imull
lock
outsl
faddp
ljmp
sub
repnz
mov
or
jae
jo
mov
xor
xor
add
sarb
adc
in
jae
and
loope
cmc
in
fisubs
mov
test
xor
into
xor
lods
cmp
incb
bound
and
je
rcr
popa
push
mov
repz
mov
mov
outsl
jns
pop
lea
loop
or
std
dec
sti
xor
stos
pushf
arpl
int3
dec
loopne
in
out
data16
cwtl
test
dec
cmp
icebp
es
mov
or
fs
jb
cli
insl
pop
fsubp
mov
jnp
inc
and
cmp
pop
test
fimull
sub
sbb
jnp
sahf
and
jb
das
sbb
and
add
jmp
pop
aam
push
sti
cmp
pop
push
cmp
xor
es
and
push
es
xchg
adc
outsb
dec
js
push
jo
push
fxtract
daa
cmpsl
jmp
ljmp
mov
jb
xor
in
jle
imul
or
push
scas
in
lods
cli
test
lods
mov
mov
cmp
cli
in
sub
sbb
es
shll
jmp
js
mov
mov
repz
iret
lret
dec
dec
jbe
and
popa
pusha
es
je
jecxz
test
scas
sub
push
xor
jae
stc
ss
insb
outsl
outsb
out
adc
mov
pop
sub
jmp
or
out
pop
call
and
std
push
inc
jp
in
jle
jae
sub
xor
push
mov
loop
adc
cmp
add
add
mov
cmp
popa
test
inc
imul
sub
pop
push
jo
mov
or
lret
or
or
mov
dec
xor
inc
jno
or
push
mov
iret
ljmp
push
dec
push
int3
pop
dec
inc
js
add
cmpsl
leave
shlb
mov
jecxz
cmp
imul
jnp
imul
cmp
sti
xchg
jp
cli
aam
in
jle
movsl
dec
jp
idivb
pop
push
aaa
test
jbe
loop
and
and
outsb
cli
aas
int3
call
shrb
shr
jbe
pop
mov
jns
imul
or
popl
movsb
mov
out
mov
add
jno
sub
movsl
daa
push
jg
imul
cld
scas
call
push
cmp
pop
out
mov
lods
hlt
insl
dec
sub
push
xor
int3
jbe
cmp
inc
orl
outsb
sub
icebp
mov
adc
or
xor
sub
mov
hlt
cld
and
push
rolb
insb
inc
lahf
fs
cmpsb
cmc
outsl
add
add
fs
es
cmp
or
icebp
xor
mov
mov
test
mov
jb
xor
xor
in
jmp
mov
mov
mov
sti
sub
jg
jb
sbb
mov
movsb
mov
jno
add
jns
fists
cmpl
in
jo
inc
stos
je
bound
cmpsl
int3
sbbl
fdivrp
pop
xor
jmp
jns
dec
lock
les
stos
in
les
call
push
push
xor
cmpsl
pushf
jge
nop
test
stos
sub
sahf
es
and
mov
mov
sub
pushf
mov
lret
jmp
mov
dec
mov
jp
mov
loop
xchg
sbb
jns
js
mov
insl
xchg
fldenv
scas
or
and
test
and
or
bound
outsb
mov
or
jb
cmp
sbb
outsb
mov
fdivp
outsl
inc
icebp
out
or
jne
mov
fistl
adc
hlt
adc
dec
aaa
jb
jg
leave
je
sbb
lods
movsl
sbb
mov
jae
jno
lret
adc
mov
sub
lret
cmp
or
int3
mov
and
pop
and
or
in
data16
int3
mull
inc
mov
sub
cmp
mov
mov
inc
sub
jns
push
add
and
ret
xchg
loop
dec
and
lock
jbe
mov
push
jb
push
aad
sub
xor
roll
sub
test
jno
daa
scas
inc
mov
fucomip
push
pop
mov
jmp
sub
sub
cli
lock
sub
insl
or
xchg
or
sub
add
mov
scas
cmp
jl
mov
dec
stos
xor
jno
jb
bound
sub
jb
movsl
leave
jl
push
cmp
push
or
cld
ficompl
mov
lods
insb
mov
push
push
push
jecxz
int3
nop
push
mov
shlb
xchg
lds
and
cmc
popa
sub
jbe
xor
sub
jmp
clc
cli
dec
cltd
popa
and
push
cmpsl
push
push
aaa
hlt
push
mov
mov
testb
leave
dec
in
dec
jnp
lret
pop
inc
push
icebp
rcrl
fcomip
fdivp
insl
mov
push
push
push
testb
sub
inc
and
outsb
mov
sub
mov
inc
and
scas
dec
inc
aad
imul
xchg
dec
shr
addr16
outsb
and
clc
ds
push
mov
ljmp
shl
jbe
jle
add
cs
push
sar
cltd
add
xor
push
mov
mov
inc
int3
or
push
call
adc
gs
out
or
addr16
jecxz
mov
addr16
movsb
mov
jmp
or
sbb
cmp
adc
out
enter
push
sub
xchg
pop
jge
mov
xchg
jecxz
lahf
out
pop
loop
push
dec
push
dec
orl
inc
inc
xor
push
jecxz
or
cltd
and
mov
ror
or
hlt
in
cmpsb
mov
fwait
mov
rol
pop
in
or
pop
test
xor
aam
jmp
or
andb
cmp
add
jecxz
movsl
mov
cmp
add
mov
xchg
repnz
imul
imulb
mov
ficoms
pop
hlt
mov
test
push
movsl
mov
mov
cmpsl
pop
je
mov
pop
outsb
rcll
ja
das
fisubl
jmp
leave
mov
idivl
mov
jl
vphaddwq
pop
fs
push
jbe
in
jae
sbb
imul
adc
scas
jp
sti
cmp
cmc
or
sbb
out
std
es
jnp
and
sub
mov
ret
xchg
ja
sbb
xor
loop
xchg
insb
loope
std
inc
xchg
std
icebp
xchg
dec
and
mov
cmpsb
icebp
std
jno
or
sti
je
fxtract
inc
stc
mov
pop
mov
insb
and
scas
cwtl
aas
repz
mov
jbe
push
sbb
sub
jecxz,pn
mov
mov
das
pop
fs
es
je,pn
pusha
mov
push
jns
in
loopne
add
je
lods
lahf
dec
push
mov
out
test
lods
lea
mov
dec
ljmp
in
and
call
push
or
inc
mul
jbe
jno
sahf
nop
jp
lods
fldl
jne
xchg
mov
push
fs
xchg
movsb
scas
pop
push
cmp
lret
mov
xor
xchg
mov
cltd
sub
and
xor
xor
rcrb
xor
jecxz
mov
inc
jp
add
push
jecxz
cli
jmp
mov
add
sbb
insb
pop
fdivs
insb
mov
loop
and
flds
out
jae
ja
outsb
fisubs
es
jns
loope
sahf
fidivrs
jl
mov
jp
testb
test
in
inc
bound
jl
xor
cld
fwait
test
fwait
adc
stc
scas
jg
cmp
sbb
stc
sbbl
les
lods
hlt
bound
xor
push
icebp
push
dec
jb
loop
xchg
mov
dec
cmp
mov
jbe
xchg
jns
mov
scas
mov
pop
jo
push
mov
jmp
sbb
cmc
lods
int
or
or
xchg
cmp
outsl
outsl
cmc
jns
push
jb
mov
push
jb
dec
and
cwtl
movsl
cmp
aaa
mov
xor
and
xchg
xor
and
mov
lret
mov
mov
mov
jmp
pop
or
xchg
inc
data16
sub
mov
and
popa
leave
movsl
lds
xor
xchg
xchg
sbb
mov
sub
and
xchg
jb
inc
jb
pop
jae
push
mov
dec
out
jb
xchg
nop
and
enter
aaa
mov
dec
std
mov
push
mov
sbb
push
leave
sub
and
mov
cwtl
sti
jae
xchg
jb
sub
or
xchg
and
dec
sar
xchg
dec
mov
xor
jbe
mov
xchg
pop
ljmp
in
jne
aam
out
insb
mov
mov
push
out
add
add
mov
mov
cltd
loop
lea
pop
dec
daa
cld
jbe
xor
inc
mov
mov
loope
cmpsl
popf
sbb
out
and
mov
enter
lahf
mov
bound
pop
inc
cs
pop
push
mov
sbb
sub
enter
scas
or
mov
lret
in
and
cmp
mov
push
icebp
xchg
sbb
jae
mov
jmp
xchg
jmp
lret
arpl
xor
sahf
je
cli
icebp
xchg
mov
xor
and
stc
lret
push
loopne
bound
ja
popf
icebp
cmpsb
mov
jb
test
daa
cwtl
lds
mov
std
mov
push
icebp
insl
or
and
jb
fsts
loop
sbb
cmp
push
mov
hlt
or
inc
mov
mov
insb
and
add
xchg
adc
mov
dec
mov
call
mov
negb
mov
xor
insb
pop
jae
or
les
scas
sbb
lret
jl
sub
subb
push
and
filds
sub
scas
js
repz
sarb
je
push
arpl
or
negb
add
notb
mov
push
cmp
inc
gs
popa
add
movsb
jp
fbld
insl
mov
shrb
or
test
sub
jne
xchg
pop
jo
js
or
sub
jo
xchg
dec
enter
and
and
xchg
cli
mov
decb
pop
xchg
adc
mov
notl
lock
addl
push
jo
arpl
out
mov
and
xlat
push
adc
movsl
out
mov
mov
hlt
add
and
pop
push
rclb
outsb
jecxz
mov
push
sahf
jecxz
mov
mov
cmpsb
inc
xchg
xorl
adc
adc
hlt
cltd
sti
or
gs
aad
mov
and
xor
bound
cmp
mov
outsb
or
icebp
jge
xor
cmp
push
cli
loope
in
mov
mov
or
dec
repz
ss
mov
in
mov
or
push
cmpsl
jnp
dec
call
jle
mov
frstor
stc
in
testb
int3
out
mov
dec
std
test
sub
imul
bound
or
jae
shll
mov
or
fdivp
and
jae
dec
das
sub
cmpsb
pop
and
dec
into
pop
inc
push
mov
jl
lods
jbe
loop
and
flds
mov
cwtl
push
jbe
mov
sbb
push
inc
add
movsl
sbb
xor
mov
dec
mov
mov
dec
mov
loopne
movsb
sub
lods
jp
cmpsl
xlat
repz
daa
lret
inc
pop
jnp
add
push
mov
stos
or
sbb
jmp
iret
ss
jg
lock
mov
stos
inc
mov
jle
dec
pop
in
test
ja
lahf
in
dec
loope
es
or
xchg
sub
scas
xchg
cmpb
mov
scas
stc
pop
outsb
jp
imul
push
mov
push
fistl
pop
push
aaa
push
xor
adcb
testl
hlt
and
int3
inc
psubb
aam
fwait
dec
mov
sbb
hlt
fiaddl
aaa
push
xlat
push
adc
adc
push
repz
xor
jg
mov
xchg
and
pusha
push
mov
push
pop
orl
push
fsubs
or
xor
movsl
jno
std
dec
mov
and
dec
sahf
mov
mov
scas
out
and
les
sub
in
xchg
pop
dec
mov
lcall
ljmp
icebp
inc
ficoms
sub
mov
adc
xchg
ljmp
mov
pop
sbb
mov
scas
or
fmuls
xchg
sarb
mov
movsb
jecxz
inc
xor
jne
adc
sub
mov
stos
jmp
test
in
movsb
movsl
mov
scas
shll
adc
outsl
sub
and
xchg
es
popa
jge
cltd
sbb
arpl
jns
or
das
push
daa
mov
jno
leave
push
sub
call
dec
sbb
out
mov
out
mov
xchg
sub
shrb
test
push
cmpb
push
mov
mov
dec
xor
ficoml
in
repz
push
mov
mov
pop
jl
pop
sbb
icebp
xchg
lods
mov
add
loop
add
lds
aaa
fdivp
pop
jb
pop
sbb
inc
sub
int3
je
out
jbe
and
cwtl
movsl
mov
xor
push
das
jp,pn
pop
loope
mov
std
cmp
out
push
mov
in
icebp
scas
sbb
mov
aam
shl
sub
dec
sbb
mov
mov
cld
fwait
xchg
je
sub
and
mov
mov
aam
push
jge
push
es
push
fsubs
fldpi
jmp
in
mov
ljmp
or
idivb
repnz
mov
or
enter
leave
sub
or
xor
enter
or
inc
cli
mov
je
jbe
push
leave
adc
rorb
ja
idivb
mov
mov
dec
stc
cmpsb
pop
stos
testb
shrb
pop
sub
mov
mov
push
addr16
or
fdivp
and
shlb
ss
icebp
out
movsb
gs
cmp
add
sti
sahf
mov
jecxz
aam
fbld
cmp
mov
jbe
je
in
mov
cmp
mov
cmp
xchg
das
enter
stc
cmp
add
in
stc
sbb
jns
or
scas
and
int
mov
mov
push
mov
clc
xor
mov
mov
lods
or
mov
push
leave
mov
pusha
int3
popf
inc
hlt
sub
scas
sarb
xchg
mov
mov
imul
stos
call
cmp
jmp
fidivl
loop
test
repz
mov
movsl
fwait
jg
xor
cmp
and
jmp
popa
in
inc
pusha
lahf
dec
push
jmp
xor
inc
xchg
arpl
xchg
mov
xor
je
cli
out
les
enter
dec
jge
cmp
mov
ljmp
mov
punpckhwd
fcmovu
jnp
jmp
cmp
scas
jae
sarb
outsb
int3
lods
bound
shlb
pop
mov
xor
cmp
fimull
sub
in
icebp
hlt
test
sub
shl
outsb
scas
mov
ljmp
lods
lret
xor
cwtl
clc
cmp
push
xor
scas
dec
mov
lds
adc
loope
bound
jae
repz
movsb
fsts
push
adc
stos
scas
push
sbb
loope
iret
add
insb
pop
jp
dec
push
stos
and
inc
mov
cmp
cmp
mov
cwtl
cmpsl
sub
mov
es
xor
shl
cmp
addr16
addr16
jb,pn
adc
pop
ja
rorl
mov
mov
or
scas
orl
jb
and
or
loop
cmp
jmp
sub
xchg
push
lock
jnp
loope
inc
mov
jbe
or
mov
scas
insb
insb
insl
dec
add
cmp
adc
bound
lahf
mov
push
int
lock
callw
jbe
aad
inc
dec
sub
or
mov
xor
cmp
loope
mov
jle
stos
lock
addb
push
mov
outsl
insl
insl
fs
pusha
pop
mov
mov
lock
and
cmpsl
mov
mov
or
sub
dec
jno
cmpsb
mov
repz
jl
mov
arpl
push
outsl
or
icebp
das
cli
je
into
int
cmp
adc
mov
jno
in
xor
mov
in
cmpsl
jnp
pop
js
stc
sbb
arpl
int
sbb
notl
out
test
shll
mov
sub
mov
push
fistl
loopne,pn
dec
lea
sub
mov
sub
mov
push
mov
lcall
push
mov
mov
jmp
push
sub
xchg
xchg
jb
jmp
add
add
sahf
shlb
fstl
push
xchg
push
push
or
decb
sub
popa
sub
gs
mov
jl
hlt
icebp
dec
mov
and
in
or
leave
mov
jle
call
sbb
movsb
sbb
mov
push
and
enter
aam
jb
mov
pop
mov
idiv
in
imul
pop
jp
ret
icebp
lahf
icebp
sahf
icebp
pop
cmp
lods
push
jmp
pop
in
sub
daa
sti
out
mov
scas
or
or
or
scas
pop
test
xor
inc
and
or
or
sahf
jnp
jge
icebp
push
icebp
push
icebp
into
mov
inc
push
cmp
and
sub
push
cmp
jnp
cmpsl
mov
cmp
jns
mov
mov
mov
pop
std
in
cmp
sahf
xchg
je
rorb
test
gs
lods
or
jno
or
ja
mov
outsb
or
add
hlt
and
push
push
sub
sbb
sbb
sbb
hlt
sub
pop
add
je
push
sbb
out
lcall
inc
stos
nop
imul
mov
cmp
sti
scas
clc
inc
ljmp
nop
or
jno
test
sti
sbb
insb
orl
das
sbb
mov
sti
sarb
clc
sbbb
lock
movsb
xchg
orb
pop
hlt
fistpl
or
fldt
mov
stc
jnp
dec
hlt
add
cli
jae
jno
jns
outsl
add
and
hlt
inc
fildll
loopne
push
mov
and
leave
mov
gs
fwait
push
sbb
jge
es
mov
insb
and
out
out
push
scas
fiadds
pop
cmc
jge
sbb
or
bound
movsl
sub
mov
pop
cwtl
jmp
mov
push
xor
es
jo
xor
mov
jne
and
pop
jns
push
dec
jecxz
or
hlt
pop
icebp
jge
punpcklwd
inc
movsl
and
inc
out
sub
cs
push
mov
dec
das
lret
data16
cmpsl
fs
mov
mov
xchg
add
repz
adc
bound
xchg
stc
movsb
mov
jb
out
and
cmp
jmp
jmp
xor
and
sub
sbb
jle
addr16
movb
inc
xor
pop
popa
add
sbb
sbb
push
mov
push
xchg
ja
sbb
xor
jmp
je
js
push
and
mov
pop
adc
mov
mov
sahf
xor
sbb
out
jmp
in
xor
jg
cmp
pop
jne
xor
xchg
xchg
xchg
dec
rcrb
movsl
sub
sub
lock
mov
shrd
call
add
or
shlb
loop
loopne
pop
push
frstor
or
sbb
xor
xor
push
data16
and
and
je
bound
decb
pop
xchg
pop
imulb
sub
ficomps
movsl
dec
pop
or
pop
sti
sub
or
jnp
jp
jg
push
icebp
mov
pop
loope
enter
jmp
aaa
cmp
jecxz
scas
repz
rcll
gs
cmc
loop
aad
gs
cld
pop
pop
push
rcll
xor
js
es
push
and
jg
pop
sbb
insb
pop
jl
das
pushw
and
cwtl
movsb
sub
mov
sbb
cmpsb
push
inc
orl
fistpll
push
mov
hlt
lret
sbb
inc
and
pop
ljmp
in
popl
int
mov
fsubrs
in
jl
xchg
scas
scas
stos
mov
mov
jl
fwait
jae
pause
cmpsb
leave
mov
insl
test
es
aam
loope
mov
sar
pop
ss
scas
xor
pop
ljmp
or
cmp
xchg
and
inc
gs
lods
sbb
xchg
out
jbe
call
int3
dec
rcl
stos
add
mov
push
cmp
test
imul
scas
cs
fisubl
loop
xor
mov
popa
push
adc
jg
call
mov
dec
outsl
insl
inc
add
fs
or
and
xor
jbe
mov
mov
popf
or
scas
cmp
dec
mov
cmp
sub
mov
rol
enter
adc
or
out
or
push
loopne
int
dec
cmp
pop
dec
dec
lret
push
jbe
sub
std
adc
mov
jmp
push
sub
stos
mov
mov
jl
lock
add
shrb
sarb
stos
mov
mov
cltd
add
test
imul
dec
bound
xor
in
sub
mov
pop
jle
scas
or
jg
sbb
or
add
cmp
inc
sub
push
xchg
lahf
mov
out
das
pop
idivl
mov
in
cmpsl
mov
pop
inc
hlt
sub
mov
lahf
je
aad
hlt
cmp
scas
mov
fsubrs
jle
loopne
gs
pop
push
in
xchg
insl
addr16
push
fadds
hlt
bound
out
lea
pop
popf
shr
fstpt
sbb
push
or
test
movsl
or
movsb
xor
mov
leave
daa
jne
pop
aas
loopne
out
dec
jns
arpl
push
enter
jae
ficomps
lcall
cld
jl
jmp
jbe
loop
jp
fbstp
in
data16
cmpsl
sub
cmp
jge
cs
aad
daa
sub
jns
sub
rolb
mov
enter
aaa
inc
out
mov
ja
out
mov
dec
and
sub
sti
push
adc
jp
push
jb
pushf
cld
fidivrs
lock
sub
mov
cmpsl
mov
sbb
bound
mov
out
push
stos
dec
idivb
arpl
cmp
jmp
mov
out
xor
in
loope
xor
pop
repz
clc
cli
mov
xor
hlt
adc
sub
cmp
clc
std
jno
mov
cmp
lcall
sbb
jg
inc
stc
scas
push
jb
sub
sbb
movsb
stc
insl
int3
and
aas
pusha
aam
stc
stos
or
int3
pushf
push
outsl
mov
xor
xor
mov
xor
jmp
jmp
sbb
mov
mov
out
testb
ja
movsl
icebp
movsb
fnsave
mov
clc
in
loop
jb
jmp
int3
mov
jb
cmpsl
mov
sbb
cmp
jbe
push
js
test
lea
mov
arpl
mov
loop
mov
stos
push
arpl
aam
cmp
arpl
mov
xor
enter
and
xchg
and
mov
xchg
cmpsl
subl
mov
jns
jb
jne
rorb
or
test
icebp
cmp
cli
call
insb
cld
hlt
fiaddl
imul
sahf
pop
xchg
lods
in
in
mov
aam
mov
cmp
sahf
lock
mov
jbe
cmpsl
loop
loope
cmp
enter
mov
cmp
and
mov
lret
movsb
and
rcl
testl
es
or
xchg
aad
lods
movsl
in
in
out
mov
gs
movsl
lahf
lods
mov
in
or
pop
mov
ljmp
and
loopne
cmp
mov
mov
xchg
adc
sub
mov
inc
idivl
jbe
je
out
cmp
sub
test
xor
jmp
imul
sub
fcoml
cmpsl
js
adc
push
and
cwtl
cli
aas
mov
aad
jnp
add
js
mov
push
in
dec
nop
test
int3
mov
add
lods
dec
loop
push
push
mov
loop
in
paddusw
sub
jne
and
dec
je
out
mov
xchg
inc
cmp
sub
or
jg
negl
or
or
int3
dec
bound
mov
gs
xchg
mov
popf
test
push
xchg
adc
sti
loope
in
ficompl
dec
or
or
sbb
cmp
xchg
jb
or
loopne
mov
jno
mov
es
std
sarl
jle
push
mov
sbb
add
mov
add
repz
mov
jmp
push
icebp
addr16
les
stos
mov
xchg
daa
sti
stos
frstor
inc
mov
jne
cmpsl
mov
icebp
cmp
push
bound
push
mov
push
ss
inc
mov
and
mov
test
popa
and
icebp
pop
icebp
sbb
sbb
xlat
icebp
push
adc
lods
mov
and
and
in
sbb
lds
push
pop
push
push
push
cmp
scas
sbb
repnz
mov
cs
pop
and
push
adcl
cs
push
mov
fidivl
es
hlt
cmp
scas
insb
in
cmp
cmpsl
cmp
jbe
and
or
mov
cmp
pop
bound
adc
in
ss
mov
mov
mov
jb
add
jae
outsl
cwtl
cld
dec
mov
xor
mov
arpl
enter
movsl
jg
loope
inc
jge
sbb
sbb
jnp
ficomps
inc
stc
ret
inc
xlat
in
adc
xor
lods
mov
jb
sub
icebp
stos
mov
xor
mov
fistpl
sbb
push
and
sub
icebp
push
cmp
sub
cs
xchg
and
jl
movsl
icebp
and
xor
stc
cmp
inc
jae
push
loope
cmp
ds
test
add
stos
loope
mov
mov
xchg
xchg
in
xchg
cli
test
jp
je
jg
push
inc
loop
push
in
pop
pop
std
mov
enter
push
push
loop
test
push
ds
sti
jnp
dec
xlat
dec
les
int
jmp
mov
fadds
mov
mov
jb
jg
push
int
rclb
stos
push
sub
sub
ficompl
neg
fcompl
mov
imul
mov
dec
mov
push
push
mov
mov
pop
imul
int3
loopne
mov
mov
stc
mov
or
sbb
sahf
xchg
xchg
repnz
in
repz
cmp
test
cmp
insl
mov
inc
sub
adc
add
cmp
jnp
jg
push
cmpsb
dec
out
aas
bound
rcr
mov
aaa
add
jno
or
jbe
cmpsl
sahf
shr
add
add
outsb
enter
mov
loopne
je
sbb
mov
je
pop
xchg
aad
dec
lock
mov
bound
jnp
mov
jae
pop
mov
dec
mov
push
push
test
lret
movsl
ljmp
cmp
mov
scas
lret
sub
mov
icebp
sub
pop
lods
sahf
push
inc
test
xor
xchg
sub
push
pusha
mov
push
xchg
xchg
push
mov
lds
imul
movb
mov
sbb
fs
adc
sub
jl
pop
cmp
scas
push
shr
loop
mov
loopne
dec
fwait
mov
mov
mov
lods
cwtl
cld
pop
mov
outsb
out
hlt
jmp
xor
pop
movsl
add
or
fs
sub
imul
insb
fdivp
negl
mov
jae
cmp
das
inc
js
pop
lret
mov
lock
xchg
dec
js
dec
push
push
push
insb
ljmp
mov
loop
out
out
jb
push
addr16
xor
stos
push
mov
cmpsb
mov
sarl
or
mov
add
jae
sub
hlt
cmp
sahf
mov
lcall
jge
cmpsl
push
ret
popa
push
ds
mov
jmp
fdivp
insl
push
mov
sub
fsts
rolb
mulb
fs
sub
mov
out
or
mov
imul
adc
jg
ret
jnp
add
add
fwait
or
add
subb
cmp
data16
sub
stos
mov
fiadds
shll
rclb
vphsubbw
jecxz
arpl
call
xchg
scas
stos
and
cmp
lods
or
loopne
push
xchg
mov
test
or
enter
and
cld
mov
fs
pop
out
ja
dec
es
pop
insb
push
ljmp
enter
fiaddl
push
inc
sub
pop
inc
movsb
inc
lds
cmp
pop
div
push
ret
movsb
pusha
out
jle
loopne
inc
pop
das
dec
jae
fldenv
out
loope
dec
and
arpl
cmp
in
cmpsb
pusha
clc
mov
xchg
jmp
or
int3
xchg
add
dec
add
cltd
inc
xor
out
push
js
xor
jl
dec
int3
leave
int
loope
idivb
sub
xor
dec
out
in
mov
inc
cli
subb
sub
or
cmp
hlt
push
hlt
pop
dec
push
adc
gs
jmp
sahf
cmp
ljmp
cmpb
cvttps2pi
in
mov
pop
jnp
push
pop
or
cld
jns
or
lcall
mov
in
jge
cmp
dec
dec
sbb
mov
repnz
loopne
push
fs
outsl
sbb
dec
arpl
and
sub
or
lret
imul
cmpsl
jmp
sub
test
xor
rcrb
popa
jg
and
jae
push
sbb
push
jecxz
insb
or
in
mov
ljmp
rol
add
nop
sub
stos
sub
aaa
sub
jp
cmpsb
jmp
call
mov
xchg
cli
fldl
sbb
xchg
enter
imul
dec
popfw
push
pop
add
sbb
jns
dec
inc
dec
push
js
sub
jae
loope
add
icebp
aam
pop
stos
lock
idivb
mov
xchg
sarb
jb
cs
mov
cmp
bound
iret
fnsave
loop
and
popa
ret
jp
inc
or
jecxz
inc
icebp
cmp
shl
sub
sub
sub
aad
sub
cwtl
call
flds
push
jle
jp
popf
rcrb
fisttpll
or
fsubrl
dec
stos
imul
sbb
cmp
shlb
xor
mov
aad
push
xchg
aaa
sub
repz
xor
pop
sbb
jle
jae
sbb
movsl
or
sub
xchg
test
sbb
xor
loop
fstl
into
stos
mov
ret
aad
out
push
call
sub
out
sbb
test
jmp
mov
outsl
imul
popa
sbb
cmp
std
vphsubbw
popa
cmc
xchg
dec
movsb
leave
mov
push
test
jae
insl
hlt
xor
jge
loop
xorl
arpl
int3
dec
data16
sahf
mov
pushf
fcomps
pop
push
or
jb
in
es
iret
pop
jge
ret
push
fnstsw
je
dec
sbb
movsb
push
test
mov
xchg
push
cmp
mov
cmp
sub
cmp
or
dec
xor
addr16
cmc
fidivl
push
test
xchg
paddb
es
movsl
lret
or
inc
stos
sbb
dec
push
jge
out
dec
and
mov
add
inc
mov
in
mov
fwait
scas
aas
sbb
inc
push
int3
idivl
je
cmpsl
add
and
dec
lea
cli
movsl
cs
insb
cld
pop
aas
or
roll
jp
mov
adc
mov
xchg
mov
inc
xor
xor
push
js
data16
movsl
mov
xor
gs
test
mov
jno
or
arpl
dec
dec
in
push
jbe
test
pop
lret
add
pmaxsw
xchg
rcrl
cmpsl
ss
push
test
in
add
cmp
mov
cli
push
cmp
call
call
mov
mov
push
push
insl
mov
jl
add
sbb
repz
mov
xor
imul
dec
shlb
mov
loopne
jmp
mov
or
in
addr16
or
roll
in
je
inc
jb
test
adc
aad
outsb
pop
mov
mov
es
lock
jne
or
repz
mov
xchg
and
popa
fisubs
mov
sub
hlt
mov
je
cltd
mov
xor
je
stos
jae
jmp
or
sti
loop
rcl
in
jg
scas
in
icebp
lods
scas
and
mov
mov
repz
sub
xchg
scas
cwtl
jl
mov
or
jp
out
or
ds
jl
mov
mov
lret
jno
or
lea
push
sub
or
mov
sbbb
dec
and
mov
and
mov
stc
rcrb
jno
dec
or
jmp
dec
testl
xchg
push
mov
test
xor
sbb
or
push
pop
sub
xor
in
imul
mov
insb
jmp
dec
push
jns
cmp
mov
jnp
or
imul
call
mov
stos
inc
and
lock
dec
push
push
stc
loope
decb
or
mov
jbe
imul
sti
insl
lret
outsb
das
imul
jle
mov
mov
jmp
pushf
dec
daa
mov
jno
scas
lods
sub
and
or
cmpsb
jno
jl
insb
push
lock
adc
loop
movsl
or
call
add
sbb
inc
jbe
es
in
mov
mov
push
mov
xchg
mov
sub
rclb
and
inc
scas
scas
inc
push
les
add
in
out
fists
pop
icebp
jp
repnz
sbb
ss
xor
and
lods
mov
outsl
adc
pop
mov
hlt
popa
sbb
mov
icebp
pop
mov
fimull
icebp
cmpsl
lcall
cmpsb
loope
push
loope
push
mov
push
leave
addr16
and
sbb
sbb
sbb
out
or
cmp
mov
add
cld
icebp
jle
cmp
in
push
lock
leave
jae
int3
stos
push
lock
jno
test
sti
cmpsl
jns
std
lret
push
iret
outsb
jge
push
pop
shlb
mov
ret
dec
jmp
dec
lahf
lret
add
lods
jnp
or
sti
jae
repz
pop
jecxz
mov
in
int
sub
test
stos
xchg
int
rolb
test
or
push
int3
inc
movsb
mov
es
xorb
icebp
pop
icebp
lahf
cmp
mov
cwtl
sub
or
add
cmp
fimuls
jae
call
jbe
pop
and
cmpsl
call
fidivs
inc
cmpsb
scas
or
mov
aaa
pop
inc
jns
push
mov
add
dec
js
lods
xor
dec
lods
les
add
movsl
imul
or
pop
xor
or
cld
jg
fs
cmp
jae
popa
out
loop
add
repz
in
leave
inc
es
push
mov
xor
xlat
sbb
pusha
rcrb
jecxz
lds
and
sub
xorl
sbb
sbb
xor
jno
mov
lock
into
jbe
or
push
stos
lods
mov
adcb
xor
push
adc
add
lahf
movsb
mov
gs
xor
add
pop
das
or
mov
jecxz
inc
and
sub
push
cld
loope
jmp
popa
and
std
mov
movsb
push
out
add
add
in
fwait
xchg
sti
jnp
fiaddl
or
sbb
sbb
mov
fst
movsb
add
icebp
hlt
mov
lahf
insb
jnp
icebp
mov
jae
hlt
cmp
and
cmp
icebp
add
cmp
sub
mov
icebp
cmp
mov
push
je
jge
insb
out
lock
into
push
fldl
mov
add
ljmp
gs
sbb
inc
xchg
inc
data16
cmpsl
jl
mov
addr16
sti
shl
icebp
pushf
icebp
fdivr
mov
mov
mov
gs
ss
mov
xchg
imulb
jb
jle
jl
fsubs
xor
lds
xchg
popf
mov
add
testl
jno
sbb
mov
add
data16
sub
cs
or
sahf
jl
mov
cli
fwait
adc
xchg
in
cwtl
mov
dec
mov
push
mov
xor
xor
jno
pop
push
aam
and
enter
xor
addr16
jmp
inc
cmp
jb
jnp
jns
sbb
roll
idivb
aas
or
sbb
jp
mov
icebp
mov
xor
pop
stos
ljmp
or
insb
cs
mov
fnstenv
sbb
sti
sbb
mov
cmp
xchg
inc
jge
xor
shrb
mov
mov
cmp
dec
clc
mov
mov
mov
xor
hlt
cmpsb
ja
pop
std
rcll
mov
stos
cmp
sub
lock
push
and
xchg
jae
ljmp
mov
cltd
jl
xchg
icebp
xchg
sbb
xchg
jno
jne
hlt
hlt
add
mov
xor
or
push
loop
and
popa
mov
lock
clc
popf
jb
sbb
push
stos
sahf
add
mov
loope
or
in
dec
call
jg
jno
sbb
das
sbb
xchg
mov
pop
int
cmp
imul
and
and
in
scas
icebp
xor
pop
dec
test
sub
out
in
and
sbb
xor
repz
es
test
xchg
push
dec
ds
es
pop
sbb
push
clc
mov
mov
lret
out
xchg
jl
test
sub
movsb
push
bound
jp
xchg
dec
cmpsb
repnz
sbb
xor
adc
jbe
jl
cmpsl
mov
arpl
jl
or
jae
int3
jnp
push
sub
cmp
mov
ja
xor
dec
and
frstor
cmpsl
mov
bound
adc
stos
pop
mov
aad
jo
or
push
add
push
mov
mov
repz
cmp
or
sbb
jae
mov
push
je
int3
sbb
loop
movsl
sarb
imul
das
jmp
adc
arpl
or
adc
push
lret
sbb
jne
in
fidivs
dec
gs
loopew
call
push
jb
cmpsl
lret
mov
and
insb
inc
insl
lock
jle
or
ds
sbb
mov
clc
cmp
pusha
mov
leave
std
jle
cmp
cs
mov
sbb
mov
loope
push
inc
mov
mov
ljmp
leave
or
xor
and
gs
push
xor
stos
invd
mov
adc
je
pop
jae
sar
jnp
lock
dec
pop
cmp
cli
fdivl
repnz
mov
lods
push
sub
arpl
inc
jp
dec
mov
fsubrl
je
sub
pop
jg
addb
dec
mov
mov
movsl
in
insl
jge
hlt
cmp
insl
or
aaa
push
jb
fdivl
jp
xchg
fucom
orb
inc
and
cli
idivb
cmpl
mov
add
fmull
jg
jle
and
enter
push
pop
dec
loop
into
inc
ss
mov
decb
push
jmp
inc
lahf
pop
shlb
dec
lock
stc
jne
call
out
fs
xchg
out
mov
repz
mov
mov
daa
imul
dec
inc
test
loop
addr16
or
js
sarl
dec
es
mov
push
mov
xor
mov
cwtl
jae
mov
and
stc
mov
push
sarl
dec
mov
sbb
mov
test
icebp
jbe
rcl
cmp
dec
jp
lock
mov
lock
fnop
inc
jecxz
dec
mov
add
pop
pop
xchg
inc
sahf
ljmp
fnsave
mov
in
test
mov
or
loop
dec
fdivrs
lds
sbb
sbb
in
jno
xchg
rolb
incl
xor
sbb
movb
mov
arpl
jno
pop
jl
sub
push
cmpsl
imul
add
rorl
enter
pop
lds
push
das
stos
je
test
xor
mov
lock
cmp
jb
cs
inc
dec
pop
jl
and
popf
imul
iret
mov
out
scas
daa
add
shr
mov
je
test
fwait
adc
sbb
jg
mov
sub
xchg
and
es
sbb
add
jae
or
jnp
xorl
adc
xor
cmp
sbb
cmc
push
adc
aam
sti
mov
cwtl
int3
mov
dec
sub
push
sub
or
pop
popa
fstl
sub
dec
insb
pop
imul
mov
jmp
cwtl
lret
pop
add
hlt
test
mov
pop
jbe
psadbw
add
lcall
jmp
negl
repnz
push
and
and
jae
cmp
and
sbb
cmp
push
aad
xor
xchg
push
mov
imulb
sbb
mov
mov
jmp
idivb
push
push
cs
lods
aas
sbb
mov
into
or
filds
push
test
or
mov
add
mov
xor
push
gs
mov
fsts
mov
les
push
pop
push
xchg
push
add
scas
int3
cmp
imul
or
add
outsl
div
sahf
in
mov
in
mov
shl
pop
mov
dec
out
push
mov
lahf
mov
or
pop
nop
sub
or
and
test
enter
idivl
adc
cmp
cmp
push
mov
andl
test
xchg
sbb
mov
bound
mov
mov
mov
sub
dec
pop
mov
popa
std
lret
push
arpl
in
adc
mov
xor
scas
push
xor
mov
dec
or
inc
or
pop
pusha
ja
or
and
call
rcl
in
mov
ss
je
xchg
adc
inc
sarb
and
mov
ficoml
push
push
jmp
or
cld
mov
jae
fisubl
lret
push
std
aam
sub
data16
mov
repnz
sbb
mov
icebp
push
fldenv
push
or
push
dec
loop
fsubrp
imul
jge
rorl
shrb
jae
jnp
mov
jl
aaa
into
mov
cmp
call
push
leave
scas
sub
popa
pop
es
sub
popf
or
mov
in
sub
jb
cli
ljmp
inc
push
sbb
jno
pop
jbe
mov
mov
pop
jle
ljmp
leave
and
xor
in
test
sub
js
mov
xchg
pop
popa
or
inc
mov
mov
mov
inc
ja
mov
adc
loop
sbb
fidivl
cmpsl
jp
mov
leave
into
out
and
fidivl
je
movsl
or
push
mov
lahf
outsb
push
dec
in
and
out
add
mov
out
sub
fnstsw
or
or
sbb
sbb
sbb
sbb
jb
loop
inc
cltd
or
loope
sbb
jbe
and
jns
xchg
dec
daa
std
inc
jmp
lret
fnstsw
stos
imul
mov
lret
ljmp
or
scas
sar
scas
mov
inc
cmp
gs
dec
mov
mov
push
sbb
cmp
jle
cmpsl
mov
cli
mov
fdiv
imul
orl
lahf
push
daa
fwait
push
cltd
add
add
jno
movsl
pop
popa
dec
and
int
sub
in
pop
icebp
dec
dec
ljmp
jmp
cmp
push
sub
lds
loop
enter
int3
pop
pusha
xor
or
push
cmp
out
mov
push
ret
or
ss
cmp
push
lods
das
mov
ja
sub
cs
add
jmp
lahf
jmp
push
or
or
ror
out
inc
and
or
test
insb
mov
sub
imul
sub
push
sub
data16
mov
hlt
sub
jb
sub
movsl
and
sar
xor
mov
int3
jne
or
sub
sahf
mov
out
rclb
into
lret
mov
sub
dec
shlb
adc
dec
cmpsb
aaa
fdivs
mov
lret
fnsave
xchg
dec
cld
jmp
shrb
push
mov
sub
pusha
mov
stos
ja
mov
mov
add
icebp
sbb
loopne
xor
not
xchg
and
bound
scas
popf
and
or
sbb
cmp
sub
push
test
push
jno
aaa
mov
add
or
jno
mov
push
dec
out
shrb
faddl
mov
jl
lods
add
jns
int3
push
stos
cs
jns
bound
jmp
mov
movsl
mov
xor
stos
leave
lds
cwtl
popa
xchg
adc
negl
mov
es
mov
adc
movsl
mov
jg
xchg
jmp
stos
hlt
mov
and
rolb
shlb
jg
push
adc
cmpsl
jno
inc
sahf
xor
mov
test
or
pmaddwd
pop
icebp
xor
mov
scas
movsb
hlt
out
scas
sbb
and
push
mov
push
xor
lock
pop
sarb
int
sbb
jle
pop
push
xor
shrb
jp
mov
hlt
mov
popa
jae
mov
mov
jg
push
sbb
cmpsl
mov
sub
in
test
dec
es
lods
es
mov
mov
std
movsl
mov
clc
data16
pop
das
in
aas
lods
mov
in
movsl
arpl
push
sbb
pop
push
aaa
or
aam
adc
lods
add
sub
mov
ja
stos
and
data16
cmc
cs
dec
es
cmp
xchg
shll
jns
push
xor
jno
lahf
ljmp
adc
pop
loope
lret
jp
icebp
push
jmp
jno
xor
scas
xchg
cmp
pop
sahf
sahf
mov
push
inc
in
jb
ror
add
lods
in
mov
scas
movsb
xchg
ja
lahf
sbb
lods
and
shlb
add
jl
movsl
mov
inc
sbb
push
daa
pop
or
shl
and
push
mov
push
cmpsb
popa
ja
inc
or
sub
ss
mov
out
jae
test
cmpsl
shl
inc
jp
jg
mov
std
mov
sub
mov
mov
aad
cmp
cwtl
mov
cmp
rorb
lea
int3
divb
cld
test
mov
pop
jl
or
data16
push
adc
inc
outsl
mov
mov
push
test
mov
ret
xor
xor
cmp
dec
dec
push
inc
lock
jns
jmp
mov
arpl
insl
or
pop
cmp
lret
add
mov
sbb
repnz
in
loop
scas
stos
jno
jmp
dec
in
add
mov
out
leave
xchg
and
xchg
jge
xor
inc
mov
jb
sbb
mov
outsl
lock
fwait
lods
ja
push
mov
mov
mov
cmp
lret
insb
inc
mov
jmp
stc
test
dec
loopne
fs
gs
dec
push
in
lret
inc
call
mov
sbb
int3
in
lods
icebp
dec
int3
or
push
ja
jp
js
push
xor
popa
scas
mov
inc
sbb
int3
pushf
jb
xor
movsl
mov
call
cmpsl
cmp
mov
je
jle
fdivp
addr16
push
imul
xchg
sarb
jge
cmc
or
xchg
and
out
es
inc
push
int3
test
mov
repnz
loope
imul
imul
or
hlt
mov
xchg
ja
sub
xchg
cmp
outsb
loop
cmpsl
dec
cmp
jmp
mov
fcmovu
jbe
push
add
sbb
mov
lock
fnstsw
or
fiadds
mov
frstor
xor
test
ret
sbb
xor
hlt
jmp
icebp
fcmovu
popa
jno
push
inc
mov
popa
mov
xchg
idivb
jbe
repz
loopne
inc
fwait
dec
cld
lret
imul
ljmp
inc
sub
push
ret
push
inc
sub
and
scas
loopne
bound
aam
sbb
jbe
inc
loope
dec
out
test
mov
mulb
je
rcrl
hlt
rclb
mov
inc
popa
sub
jmp
in
sbb
loopne
test
aas
inc
jl
push
adc
pop
lods
jmp
xor
out
and
jecxz
cmpsl
mov
notl
stos
scas
hlt
sub
ljmp
pop
leave
lcall
jne
and
mov
cmp
les
push
aas
cwtl
mov
mov
xor
push
jl
iret
fchs
ljmp
or
sbb
sahf
pop
pop
and
divl
and
xchg
lods
es
outsl
push
adc
mov
mov
jb
cmpsl
int
ja
mov
aas
or
mov
push
jae
inc
cmc
mov
inc
in
push
push
jecxz
and
mov
ficoms
or
lahf
pop
cmp
jb
jnp
and
mov
jecxz
sub
leave
or
mov
or
xchg
push
add
in
fnstsw
sub
rcrl
popa
xrelease
shll
or
dec
inc
jp
dec
mov
or
f2xm1
mov
icebp
jecxz
or
leave
mov
in
dec
in
ljmp
das
cmp
int
sub
and
test
pusha
cmp
repnz
scas
fidivrl
test
fsubs
jge
cmc
ds
call
shll
sub
sub
lds
rcll
je
cmp
mov
mov
insb
jp
mov
push
jno
dec
inc
xor
mov
mov
movsl
aam
mov
in
adc
adc
jge
mov
cmc
sti
jmp
add
mov
in
dec
movsb
sbb
sahf
sub
inc
adc
mov
jns
cmp
push
es
mov
or
das
fs
lahf
dec
mov
xor
mov
mov
mov
xchg
jl
arpl
icebp
pop
sbb
shlb
and
pop
iret
sub
push
cli
mov
subb
jae
fsubs
in
int
int
cmp
sub
mov
mov
push
repnz
mov
popl
dec
jl
sub
lcall
test
or
das
lret
pop
repz
imul
in
mov
jmp
jl
out
addr16
xchg
test
cmp
cmp
or
fldl
and
xchg
cmpsb
stc
scas
mov
js
xchg
leave
loop
mov
subb
dec
push
dec
sbb
test
loop
mov
loop
scas
outsb
adc
out
loop
cmc
xor
sti
xor
or
mov
mov
inc
xchg
shll
out
push
fists
mov
loope
imull
sub
jnp
fwait
int
pop
pop
dec
call
add
add
mov
scas
jecxz
lahf
cmp
stos
add
xchg
cmp
push
imul
rcrb
push
sub
cmc
and
ss
adc
lahf
jb
and
clc
cld
loope
mov
mov
inc
sti
out
imul
ljmp
scas
in
idivb
cmp
add
push
hlt
pop
cli
hlt
stc
fwait
jne
cmc
fldl
or
rcl
sub
fnstcw
sbb
cmp
out
insb
inc
in
int3
loop
mov
fisubrs
int3
scas
stc
mov
cmc
test
and
dec
mov
std
jecxz
adc
fs
insb
out
rcr
test
popa
out
mov
int3
lock
cmc
lret
add
int3
cmp
stos
mov
adc
imull
movsl
das
xor
and
jno
ds
pop
in
lds
cmp
popa
rorl
lcall
int
cmp
cmpsb
add
jo
out
bound
push
sbb
jno
sbb
call
jl
mov
pop
icebp
jmp
movsb
cld
insb
subb
mov
push
roll
mov
lock
cmp
or
sbb
bound
pop
mov
mov
mov
push
enter
or
mov
inc
test
orl
sub
push
pop
aas
icebp
fs
cli
push
xor
mov
mov
shrb
mov
xchg
sub
sbb
jle
call
das
and
cwtl
bound
data16
push
insl
mov
or
pop
jecxz
jmp
into
dec
lret
ret
mov
or
imul
inc
mov
inc
icebp
xchg
and
dec
and
mov
loop
les
inc
fwait
push
mov
cmpsb
prefetch
call
lock
outsl
test
jmp
enter
imul
mulb
mov
jle
ljmp
lret
mov
sub
mov
data16
or
and
mov
add
pop
push
sub
inc
or
out
mov
dec
in
push
push
adcl
or
cmc
rorl
jmp
test
inc
movsl
cld
test
jno
mov
je
inc
sub
and
jo
in
mov
mov
js
mov
leave
fstpt
push
mov
lahf
divb
and
cmpsl
mov
dec
dec
repz
test
xlat
mov
sbb
sub
dec
sub
xchg
repz
xchg
lods
mov
insl
gs
int3
shl
test
sub
adc
cmp
sub
test
int3
mov
lret
mov
mov
jbe
in
push
lods
rcll
in
dec
mov
mov
dec
dec
push
cmp
out
jb
xchg
movsb
mov
mov
pmuludq
int3
add
loop
cmpsb
int3
jno
and
stc
add
shlb
cltd
dec
fistps
mov
std
out
mov
sub
in
popa
out
int3
add
es
push
push
mov
push
and
jns
lret
mov
out
addl
cmp
lret
pop
dec
and
js
cmovns
and
jnp
and
jnp
pusha
mov
loopne
xor
xlat
push
push
jge
push
cmp
lret
mov
loop
mov
mov
push
inc
orl
fisttps
pop
add
jae
test
pusha
fimuls
fiadds
dec
jb
sub
scas
pop
push
push
mov
stos
or
fistl
dec
jbe,pt
out
pop
sbb
mov
repz
fstps
repz
gs
pop
bound
pop
jae
int
dec
int3
std
mov
pop
cmpsb
or
mov
add
mov
not
mov
cmpl
pop
sahf
je
push
out
xor
popa
xor
lods
dec
das
popa
shrl
dec
stos
xor
lods
in
and
and
mov
inc
jbe
mov
test
mov
adc
mov
mov
es
jp
push
cmc
cmp
jecxz
repz
inc
mov
lret
leave
aad
sub
add
or
mov
fbstp
imul
test
clc
int
int
sahf
mov
mov
push
icebp
leave
sub
push
imul
or
pop
cmp
outsb
test
scas
in
lods
jmp
sarb
pusha
mov
out
insb
out
push
push
andl
or
inc
lret
icebp
xchg
push
js
mov
dec
xchg
ja
sbb
ret
dec
cltd
int3
xor
subl
or
xchg
lods
cli
in
loope
sub
mov
int
push
ljmp
mov
rorb
je
mov
sub
xorb
add
out
cmp
mov
mov
out
int3
fldenv
test
js
sub
idivb
adc
cmp
or
stos
gs
addr16
push
mov
add
pop
test
call
jb
lret
jp
or
aam
xchg
je
pop
cli
div
cmp
xchg
and
push
or
lods
jmp
loop
add
pop
cmp
push
ljmp
jbe
imul
mov
and
ror
xchg
or
pop
incl
call
and
es
aaa
aad
loop
scas
mov
jae
jne
stc
push
pop
leave
scas
aas
in
call
mov
imul
mov
lldt
xchg
loopne
imulb
fdivp
test
push
cmpsl
or
into
jle
mov
ljmp
adc
lea
mov
in
clc
mov
shrb
loopne
xchg
jl
test
pop
mov
mul
or
das
lods
fdivl
jl
dec
in
rcrb
imul
scas
sub
mov
int3
outsl
movd
enter
incl
mov
mov
jb
sbb
inc
pop
fisubrs
lds
stos
cwtl
sbbb
sub
jge
add
orl
cmp
les
loopne
out
inc
jmp
js
or
adc
xor
xor
fdivs
sbb
push
nop
jo
or
mov
push
xor
cs
dec
sti
enter
cmp
mov
div
sub
mov
mov
cmp
pop
lcall
jecxz
in
lahf
pusha
roll
out
sub
sub
out
inc
cmp
jmp
cmp
add
int3
sub
cmpsl
clc
repnz
or
aad
add
xchg
cmc
popa
mov
jae
jl
fdivr
inc
mov
or
out
xchg
cmpsb
mov
nop
or
insb
es
cmp
push
lds
idivl
std
mov
sahf
jl
mov
or
mov
cmpsl
cmpsb
mov
mov
lret
sub
and
jne
mov
stos
movsb
je
addr16
clc
mov
insb
in
add
push
jbe
inc
fidivs
and
scas
daa
icebp
out
push
or
push
stos
mov
jl
xor
push
imul
adc
and
adc
mov
js
cmp
cmp
xchg
test
push
das
fdivrl
jnp
push
cmp
outsb
imul
daa
cld
mov
out
addr16
cmc
mov
icebp
mov
jmp
in
adc
cmpsb
mov
pop
add
pusha
sub
sub
data16
xor
je
cmp
jno
imul
cmp
xchg
clc
arpl
stc
int3
testl
sbb
test
xor
mov
lcall
ljmp
cmpsb
mov
shrb
sub
add
adc
mov
mov
fdivrs
push
jg
in
cmp
mov
out
mov
and
loop
aad
in
fstpl
xor
outsl
push
sbb
mov
mov
out
loop
add
rorb
test
pusha
add
pop
mov
or
repnz
mov
or
adc
orb
insb
imul
jge
lock
sub
popa
cmp
shlb
cltd
mov
pop
mov
push
dec
leave
mov
jne
jge
sahf
out
int
lds
and
dec
aam
int
pop
xor
test
pop
bound
mov
mov
out
out
fs
jmp
loope
int3
xchg
int3
mov
and
add
js
sub
mov
in
je
and
add
repz
mov
sub
mov
xchg
lret
jmp
aaa
jp
cmpsl
frstor
or
jo
bound
outsl
shr
out
lea
sti
pop
cmc
mov
stc
test
fnstcw
cmp
cs
jb
push
es
jb
cmp
fcoms
pop
sub
int3
or
adc
fcmovu
jb
add
cwtl
cmp
and
jne
fimuls
add
lock
lods
in
or
repz
jbe
lds
or
jbe
es
stos
sbb
outsl
mov
cmp
sti
sub
dec
outsl
pop
jmp
int3
adc
and
adc
add
mov
fwait
mov
push
dec
cmp
lahf
hlt
jno
lock
xor
mov
inc
stos
mov
int
dec
test
imul
dec
test
movntq
sub
sub
insl
lret
and
fadd
insl
or
or
jae
xchg
inc
mulb
scas
add
mov
jb
mov
imul
fisubrs
push
xchg
dec
in
mov
jp
xor
mov
loopne
dec
je
fdivrs
imul
mov
test
mov
jno
fstpt
dec
jo
lret
jbe
push
sarb
jae
or
test
mov
je
mov
xchg
dec
icebp
add
aaa
dec
inc
jmp
cmp
jnp
in
push
sub
push
aam
imul
test
xor
int
sub
or
sub
inc
add
aas
fs
cmp
enter
insl
out
pop
scas
push
mov
sub
fidivs
imul
int3
mov
xor
inc
sti
out
and
mov
lock
cmpl
inc
mov
fisttpll
test
add
in
adc
inc
jne
mov
jne
sbb
jns
push
hlt
sahf
mov
int3
imul
pop
jbe
cmpsl
fidivrl
mov
ja
adc
mov
test
jge
fstl
jbe
ljmp
sarb
mov
jecxz
out
mov
dec
and
and
data16
add
mov
add
cmp
lret
pop
call
std
fldt
jne
add
jl
push
mov
jbe
icebp
repnz
or
dec
out
enter
mov
bound
mov
je
adc
out
test
aad
adc
mov
imul
cs
push
rclb
iret
jne
push
insl
dec
in
lea
and
cwtl
icebp
jp
dec
repnz
data16
int3
stc
mov
or
in
sbb
cli
or
cwtl
xor
mov
shrb
cs
pop
xchg
mov
pop
or
gs
hlt
push
or
outsb
pusha
pop
sbb
xor
xchg
rolb
add
and
mov
xchg
dec
out
add
jle
test
push
loop
sub
xor
dec
in
inc
mov
jb
std
hlt
es
movsb
jno
adc
jecxz
fsubp
xor
fldenv
jnp
out
mov
pop
add
dec
jl
push
cmp
mov
idiv
ret
xchg
gs
sub
stos
jns
push
jle
hlt
pop
cli
mov
add
xor
cmp
in
jne
and
pop
leave
in
jl
add
repz
stos
test
push
loop
scas
ret
jl
mov
jae
repz
std
cmp
repnz
sub
jae
xor
test
push
or
dec
inc
push
xor
xor
xor
mov
out
lret
pop
fwait
dec
in
pop
and
ds
ljmp
inc
ljmp
notrack
push
orb
mov
pop
jl
push
xor
repnz
sub
ja
sbb
jmp
lods
push
test
loopne
mov
sub
loopne
dec
dec
popa
lods
gs
jmp
lret
sub
xor
sub
lret
or
push
test
shll
dec
test
inc
sub
push
aas
add
lret
dec
inc
ljmp
adc
mov
jg
cmp
stos
movl
jmp
int3
pop
adc
flds
mov
mov
jae
sbb
mov
lret
sub
loope
clc
bound
nop
pcmpgtd
inc
mov
rorl
sbb
or
inc
out
mov
jb
jbe
jbe
and
aam
cmp
cmpsl
lret
mov
scas
mov
jae
xorb
roll
xor
nop
sub
inc
mov
jmp
cs
int
sbb
push
in
cwtl
rorl
and
into
sub
out
insb
repz
addr16
lods
pop
imul
pop
cmp
sub
sahf
inc
mov
not
pop
lret
aaa
jno
sub
imull
sarl
sahf
stc
jb
das
jns
mov
push
jge
data16
ret
fs
in
mov
adc
sub
lret
je
jmp
test
sahf
imul
jno
test
imull
popa
mov
inc
jp,pn
pop
negb
js
lcall
push
dec
mov
lods
mov
jl
add
or
adc
mov
push
push
nop
subl
imul
and
lret
mov
imul
enter
inc
fwait
add
rcrb
call
je
and
cli
in
je
decl
mov
std
mov
mov
lock
or
add
stc
je
stc
adc
sub
mov
call
test
jge
out
push
pop
and
outsb
mov
mov
jne
stos
cmpsl
mov
icebp
mov
loopne
or
xor
insl
jl
cld
addr16
or
cmp
imul
add
cmp
in
sub
mov
mov
push
dec
loopne
mov
rclb
insl
sub
jle
inc
or
imul
std
mov
mov
flds
cld
std
or
sti
or
testl
jns
mov
std
or
andps
xor
and
jno
dec
jne
sbb
shl
bound
lret
mov
mov
std
push
imul
or
repz
shll
pop
sub
outsb
jp
mov
push
push
push
mov
call
mov
mov
lret
insb
in
sub
aas
mov
cmpsl
scas
jl
add
ficomps
ljmp
test
daa
jp
sbb
jmp
mov
aad
mov
sub
call
lret
out
int
movntps
in
mov
in
scas
inc
repz
out
mov
fcomps
je
or
mov
or
sub
mov
inc
in
dec
andl
fwait
mov
add
jmp
cmc
and
cwtl
mov
jmp
mov
mov
push
cmp
push
repz
repnz
lock
ljmp
pop
or
sub
lock
pop
mov
vmwrite
int3
inc
jno
and
mov
sti
sti
add
stos
push
repz
mov
dec
cmp
sbb
and
or
cmp
jmp
jg
lret
icebp
xchg
or
into
jb
loop
movsl
stc
cmpsl
loope
out
sbb
aaa
dec
jp
mov
scas
in
into
mov
mov
shlb
dec
jae
lahf
dec
scas
mov
mov
rcrl
mov
shl
or
in
test
xor
insb
scas
sub
jle
jl
outsb
scas
stos
lock
and
sti
call
push
imul
mov
jbe
push
or
sbb
jecxz
jmp
add
push
rolb
dec
xor
sti
int3
out
adc
jae
cmc
mov
scas
jmp
js
push
test
lret
daa
inc
mov
push
sub
mov
mov
mov
dec
jl
lcall
int
int
pusha
out
jmp
loope
jbe
clc
jb
add
outsb
jnp
test
jecxz
inc
mov
jbe
add
js
xchg
mov
fisubs
or
add
lods
bound
mov
or
cmpsb
int3
ds
jl
sub
rep
mov
loope
in
and
mov
push
jne
movsl
sarb
pop
xor
cwtl
push
dec
fdivrs
cs
xlat
push
nop
cld
test
mov
andb
imul
popa
jg
inc
dec
push
push
cmp
mov
fwait
pop
mov
mov
icebp
daa
dec
push
jmp
mov
sub
push
movsw
or
in
clc
jae
push
repnz
bound
cs
pop
out
and
lock
in
jnp
sbb
push
dec
lret
dec
iret
mov
cmp
out
popa
addb
jb
enter
test
lret
lret
test
mov
imul
arpl
or
jno
out
subb
push
sti
imul
sub
pop
push
xchg
loope
jp
or
pop
pop
cld
mov
lret
andb
pop
sbb
jnp
and
mulb
mov
es
mov
and
mov
or
sahf
fwait
cld
sarb
cmp
prefetch
mov
jmp
mov
insb
outsb
cmpsb
push
pop
xor
push
mov
aad
cmp
jle
outsb
mov
movsb
adc
sub
or
dec
popa
xchg
sub
jl
mov
dec
jne
inc
js
jl
outsl
jmp
dec
sub
dec
and
jbe
gs
and
cmp
push
cmp
and
int
scas
mov
jp
hlt
cmp
shl
sub
ljmp
scas
mov
mov
mov
outsl
add
into
sbb
mov
xor
icebp
rclb
sub
push
jl
push
dec
cli
in
mov
scas
push
fdivrl
test
jno
test
scas
mov
in
or
sahf
jns
lock
xchg
out
sub
test
insb
or
jge
sti
jl
pop
ljmp
icebp
or
arpl
sbb
or
stos
mov
cmp
loopne
in
xor
mov
pop
push
cmp
adc
dec
jmp
sub
mov
jecxz
in
insb
in
sub
cli
jecxz
lea
dec
aas
test
sub
push
mov
movsb
ret
in
aaa
clc
fdivp
loope
call
arpl
test
cs
xchg
popa
jae
js
cmp
lret
sub
std
or
xchg
in
mov
ljmp
ljmp
call
sub
mov
inc
hlt
inc
jae
ficoms
sbbl
xchg
shr
loop
scas
xchg
je
cld
aam
stc
je
imul
bnd
push
inc
jmp
xor
stos
scas
dec
je
sub
lret
sahf
pop
sti
in
jmp
jb
jne
scas
sub
and
cmpsl
push
ja
test
punpckldq
dec
dec
shlb
jnp
jmp
loope
leave
ja
sahf
or
test
int3
aaa
call
sbb
mov
add
dec
push
in
pusha
xor
test
dec
and
dec
adc
ds
aas
call
fisttpll
jl
mov
sti
in
or
mov
shlb
dec
lds
sub
jbe
popa
push
cmpsl
in
mov
pusha
std
leave
sbb
dec
out
sub
sti
in
cmp
std
gs
or
fmulp
xchg
pop
out
cld
push
stos
popa
je
insb
jmp
jp
int
dec
data16
jmp
test
cltd
and
hlt
cmp
icebp
dec
xor
push
cmp
jp
cmp
sub
repz
in
lahf
sti
jnp
out
jge
in
add
pop
pop
fisttpl
cmc
pop
jp
scas
test
ds
roll
lods
xchg
cmpb
ljmp
daa
lret
cmpsb
and
inc
xor
add
dec
test
int3
test
stc
cld
int3
inc
je
jmp
mov
dec
mov
ja
push
lret
mov
in
sub
lret
lock
xor
dec
jno
add
jp
and
sti
insb
test
in
mov
cs
xchg
dec
arpl
push
test
cmpsb
xor
xor
lock
je
les
lds
cmp
popa
imul
xor
imul
addb
and
adc
in
addr16
ljmp
jnp
jmp
movsb
frstor
insb
jle
out
shll
cmp
jb
add
pop
lods
pop
adc
scas
push
mov
dec
cmpsl
int3
sub
hlt
scas
mov
add
loop
scas
mov
cmp
insb
jae
sub
dec
in
ret
jecxz
jl
out
pop
push
je
cmp
jno
xor
lahf
jno
mov
sbb
xor
jne
dec
mov
in
inc
sahf
pushf
jl
or
dec
aas
push
push
orl
movsw
jge
mov
ja
call
or
icebp
dec
loope
or
loope
jnp
mov
jb
hlt
fs
cmc
int3
rcrl
out
int3
call
fstl
mov
sbb
rcrb
arpl
mov
inc
fsubs
insb
stos
jl
repz
sbb
sub
punpcklwd
in
dec
jns
test
inc
test
jg
mov
leave
and
sub
jmp
aaa
lds
jbe
in
xor
mov
mov
sub
mov
push
push
outsl
jae
add
scas
je
xor
push
jmp
mov
repz
mov
clc
jl
cmpsl
stos
mov
call
mov
xchg
xor
shll
shrb
fxam
lods
mov
icebp
sub
stc
sub
call
insb
cltd
mov
or
div
sub
icebp
mov
adc
movsb
jb
movsl
jmp
mov
or
call
jmp
frstor
sub
lret
sti
in
stos
outsb
jle
int3
cmp
scas
xchg
test
jmp
stos
push
adc
dec
ljmp
cmp
inc
shlb
jae
mov
mov
jb
cmc
jae
sbb
jle
xchg
sahf
jo
lods
bound
orl
cmp
lret
je
sub
loop
mov
cmpsl
sub
push
and
jo
gs
sti
aas
lret
and
mov
sub
imul
testb
lretw
rol
inc
fisubrs
imul
pop
push
mov
mov
inc
test
clc
jmp
cmpsl
in
pop
cmp
mov
sub
in
cltd
mov
outsb
dec
mov
pop
cmp
in
loopne
pop
scas
or
scas
lret
mov
insb
or
pop
clc
insb
sti
inc
andb
and
cli
dec
test
mov
shlb
inc
jmp
mov
xchg
rep
push
lock
test
mov
or
mov
sub
lret
mov
jle
cmpsl
xor
fidivs
stos
cmpsl
jbe
test
movsb
push
out
int
or
fstpl
jmp
pop
imul
mov
loop
movsl
call
movsb
push
call
fwait
sub
inc
bound
fisttpll
xor
test
push
test
loopne
or
int3
sbb
xchg
int3
je
cmc
jecxz
mov
mov
adc
sub
cmp
rorl
rolb
js
xlat
push
mov
push
mov
stos
hlt
jmp
cwtl
out
jl
dec
pop
jle
gs
xor
les
xchg
adc
stos
sub
gs
and
or
repnz
cmp
or
cli
icebp
cld
dec
mov
pop
aad
mov
bound
cmpsl
lcall
clc
mov
jb
cmp
icebp
das
scas
outsb
mov
lods
aaa
enter
inc
sbb
in
incb
pop
or
jge
or
pop
push
xchg
fcomps
cmpsl
cmp
mov
jmp
je
push
cld
clc
int3
outsb
or
push
push
inc
cwtl
mov
les
or
jbe
pop
inc
sti
ret
xchg
loope
sub
iret
je
push
fiadds
sbb
call
mov
data16
cmc
xorb
sbb
adc
inc
sbb
jecxz
addr16
or
adc
loope,pn
push
push
mov
in
les
dec
add
mov
xor
test
xor
mov
dec
mov
ja
leave
mov
scas
cli
sarb
jp,pn
mov
or
xchg
mov
enter
jmp
std
out
scas
mov
loope
scas
and
cs
outsb
push
stc
stos
add
in
jno
fs
data16
jbe
jb
sub
clc
andl
and
in
es
adc
fdivrl
adc
xor
andb
adc
xchg
jle
mov
jge
aaa
mov
sbb
mov
stc
out
call
dec
dec
mov
addr16
xor
xor
sub
mov
lods
test
xor
in
jb
adcb
mulb
es
cltd
cmp
cmpb
aaa
push
dec
dec
jle
dec
lock
lods
sbb
in
int3
jle
inc
jne
sbb
enter
fsts
test
in
mov
or
jne
xchg
sbbl
jb
sbb
mov
stc
mov
xor
sub
or
fs
jnp
jp
jg
push
enter
inc
fs
xor
sub
push
insb
mov
add
fimuls
cmp
in
addr16
jbe
mov
scas
lret
jae
mov
outsb
inc
mov
stos
jns
add
jb
mov
inc
mov
scas
shrb
in
mov
sbb
stos
and
jmp
inc
stos
lahf
adc
test
mull
scas
movsl
lret
mov
sar
jmp
cltd
dec
test
jno
movsl
mov
and
int3
cli
inc
push
sub
mov
test
adc
mov
dec
loop
mov
je
fistps
dec
mov
jp
gs
or
mov
xchg
imul
dec
jge
stos
and
jp
mov
push
jbe
pusha
test
and
lods
in
cli
cmp
scas
stc
jl
xor
loope
cmp
pop
sti
pushl
sahf
jb
shll
mov
loopne
push
jno
dec
inc
test
pop
xor
dec
inc
ljmp
dec
sub
imull
sbb
mov
cmpb
or
mov
sti
mov
sub
test
imul
and
jp
xchg
repz
jb
stc
cmp
adc
ja
call
cmp
cmp
test
dec
push
or
std
js
cltd
xchg
shlb
outsb
lret
sbb
mov
sbb
push
jno
test
je
and
jns
lret
in
jmp
shll
imul
bound
lock
lret
and
popa
ss
shl
mov
mov
push
dec
sub
lea
dec
fisttpll
adc
cs
popf
add
or
lock
cmp
mov
push
shr
xor
lret
dec
div
mov
aad
addr16
mov
jno
inc
sbb
popa
mov
lret
cmp
callw
repz
lret
mov
out
subb
into
ljmp
or
cmp
jge
sbb
test
imul
addr16
sbb
lcall
imull
push
imul
sub
rcr
push
fnstsw
and
in
push
sbb
scas
jne
mov
jl
dec
mov
sub
mov
xor
popa
mov
loop,pt
scas
cmp
into
sbb
inc
call
add
pop
in
call
xchg
or
cmp
js
call
scas
or
je
cwtl
psubd
es
pop
hlt
push
mov
out
call
out
test
add
mov
arpl
movsl
in
sti
sbb
call
imul
test
sbb
jge
scas
ja
or
add
in
mov
inc
push
push
fwait
push
pop
push
fbld
dec
dec
int3
call
pop
call
bound
call
cmp
icebp
mov
imul
bound
ljmp
adcb
add
sti
scas
int
sub
jbe
push
cmpsb
pop
push
je
loope,pn
test
lret
cli
aam
mov
in
movsl
sub
push
dec
clc
outsl
test
dec
in
inc
test
ds
lret
mov
cmp
jno
stc
inc
lret
add
or
mov
popa
push
mov
sub
mov
xor
sahf
pop
mov
add
mov
pop
jecxz
xchg
dec
shlb
lock
inc
icebp
daa
pop
test
lcall
dec
jb
push
and
push
std
cld
in
inc
cmp
stos
jnp
and
sub
hlt
mov
popf
fstl
or
ret
jl
sub
rorl
and
dec
test
mov
mov
dec
jbe
jne
push
fbstp
arpl
pop
sbb
mov
pop
test
je
stc
sbb
jl
push
jae
cli
cmp
movsb
mov
jb
es
jae
lret
mov
pop
mov
clc
mov
jbe
fdivrl
stos
jnp
int3
lods
stc
hlt
sub
jmp
stos
mov
push
call
aas
xor
push
mov
mov
mov
dec
fbld
int3
mov
mov
test
and
and
scas
movsb
dec
in
add
aaa
aad
les
shr
loop
jp
sbb
jp
call
adc
popa
or
xor
movsb
cmpl
jle
jg
cltd
mov
lret
mov
xchg
cld
loope
jns
in
mov
notl
dec
bound
jno
loop
mov
sub
mov
icebp
jp
ljmp
mov
jl
mov
arpl
call
jae
sbb
cmp
push
scas
dec
and
imul
sahf
sub
movsl
dec
jae
int3
ret
inc
sarb
adc
and
test
fdivl
mov
outsb
inc
dec
call
inc
addr16
mov
in
lea
mov
sub
out
imul
cld
inc
mov
test
aas
jb
out
inc
scas
je
jg
nop
std
ss
sbb
jge
mov
stos
scas
js
jg
lock
and
mov
dec
dec
cmp
dec
jnp
xor
cmp
aas
xchg
jl
stos
test
std
hlt
sbb
sub
in
out
add
stos
mov
repz
mov
in
add
jp
movsl
or
frstor
stos
imul
js
or
out
sub
stc
outsb
pop
popa
ljmp
push
stos
or
mov
out
fucomip
cld
sub
inc
rcr
push
stos
int
fnstcw
sub
in
rorb
add
jnp
divl
cmp
mov
mov
xor
dec
jge
movsb
loopne
pushf
repz
dec
push
jo
mov
inc
imul
scas
cmp
and
mov
cmp
es
scas
int3
sbb
inc
out
scas
int
jns
adc
push
rcll
sarb
inc
cmp
gs
xchg
jmp
jge
pop
ljmp
fstps
mov
std
enter
cmp
and
clc
out
icebp
loope
cmpsb
mov
or
ficoms
cld
out
sbb
es
add
in
sbb
in
imul
mov
imul
shlb
sahf
repnz
mov
mov
repz
fsubp
lret
gs
pop
pop
cmpsl
xor
in
fldl
gs
aaa
jno
call
and
test
bound
inc
js
or
xor
loopne
add
jle
gs
cmp
mov
scas
add
in
and
lahf
and
insl
push
jno
mov
mov
shrb
xchg
hlt
fidivs
xchg
aas
sub
sbb
test
aad
aam
rcr
jmp
jae
sbb
mov
out
loope
push
jle
fiadds
push
out
adc
mov
std
dec
push
and
mov
test
call
or
jle
aaa
xor
jno
imul
nop
cwtl
into
dec
fxch
adc
popf
jmp
mov
js
pop
out
xor
stos
push
sub
xchg
push
sti
fstl
es
mov
sbb
xchg
pop
dec
clc
lods
fimuls
dec
arpl
insl
insl
mov
dec
dec
int3
dec
orl
test
or
xor
int
stos
test
pop
fiaddl
sbb
js
inc
or
xchg
push
call
in
std
int
out
popa
in
repnz
or
fadd
xor
es
xchg
mov
sbb
lock
jns
nop
cld
push
in
sbb
popa
fwait
pop
push
sbb
lods
cli
mov
decl
jmp
rcll
cmp
jae
adc
push
fdivrl
jg
dec
push
sbb
mov
lcall
inc
test
xchg
sbb
mov
adc
cld
add
scas
sub
lret
popa
hlt
mov
push
cmp
stos
push
call
push
lods
or
lock
mov
pop
adc
mov
rcrl
pop
xchg
adc
jae
dec
adc
mov
xlat
xor
xchg
push
mov
pop
and
lods
jne
sub
lods
test
movsb
xchg
jl
xchg
xor
fdivrs
inc
jge
cmp
mov
sbb
pop
ret
test
jo
aad
inc
loope
jb
ficoms
pop
adc
outsb
inc
rcr
add
test
test
mov
push
imul
orb
mov
push
call
push
es
push
xor
pushl
mov
cmc
shlb
mov
es
ja
loopne
mov
push
popa
and
sbb
mov
adc
sub
xor
dec
mov
arpl
cmp
dec
call
mov
jg
add
jns
lret
mov
fnstsw
jno
mov
mov
inc
gs
sub
out
jecxz
mov
xchg
adc
adc
icebp
call
into
push
lods
and
ret
push
data16
in
icebp
les
loopne
sub
jno
cmp
or
or
imul
ja,pn
inc
call
mov
rclb
push
mov
mov
and
pop
jno
int
std
cwtl
add
sbb
inc
xchg
mov
push
leave
loopne
loopne
fisttps
int
int
add
ds
add
cmp
ffree
cli
mov
jecxz
sbb
repnz
push
aad
inc
and
or
jge
scas
sti
mov
je
insb
fwait
add
dec
imul
push
mov
dec
rclb
mov
cmp
add
add
lahf
mov
xlat
mov
aad
jb
push
pusha
jp
push
adc
pop
in
call
insb
inc
aam
notl
ds
cmp
or
push
loope
sbb
mov
add
aas
ljmp
dec
push
or
sub
mov
pop
in
arpl
leave
adc
sub
xchg
or
dec
mov
mov
add
inc
xor
add
cmp
inc
movsl
test
lret
icebp
mov
dec
sub
inc
imulb
mov
mov
repz
or
popf
push
push
in
scas
mov
sbb
loope
mov
cltd
push
scas
pushf
invd
push
push
movsl
out
rcrb
leave
lods
fnstcw
inc
dec
scas
pusha
jle
popf
lods
cmp
cmpsb
sbb
ja
rep
out
push
lea
push
inc
sti
pop
xor
fmull
jmp
sbb
mov
iret
sub
sub
mov
mov
fucomp
idivb
push
data16
mov
xor
outsb
movsb
add
xor
adc
xchg
lea
inc
notl
or
jge
and
fsubrp
iret
mov
jmp
xor
call
xchg
movb
movb
lea
je
pushf
stc
pushf
sub
stc
movb
cmp
push
lea
ja
pusha
jmp
lods
dec
and
imull
jbe
push
xchg
xchg
ljmp
mov
enter
int
daa
pop
imul
xor
pop
daa
adc
in
cmp
add
sub
inc
xchg
jl
imul
pop
notl
mov
push
test
push
aam
xchg
in
fistl
mov
out
push
aam
pop
xor
rol
pop
aad
fsub
repnz
aam
or
add
dec
lea
insl
add
fmuls
ret
xchg
pop
mov
movsl
or
jecxz
xchg
jmp
repz
das
mov
aas
jp
fidivrs
adc
push
mov
rorb
push
rorl
mov
hlt
scas
leave
jno
pop
imul
mov
or
fildll
mov
xchg
and
pop
inc
mull
and
cltd
mov
daa
push
loopne
inc
test
icebp
clc
inc
or
cmc
add
imul
sub
cmp
sar
add
push
pusha
pop
xchg
lret
loop
inc
sbb
movsl
data16
flds
inc
test
push
xchg
popf
sbb
lea
jbe
mov
loope
hlt
out
addl
loope
aam
fistpl
jae
je
lahf
addl
lods
movsb
clc
dec
fnstcw
and
dec
scas
in
ffreep
nop
cmp
das
pop
cwtl
ret
fcomps
pusha
outsb
sbb
cwtl
lcall
jbe
vhsubps
inc
push
mov
sub
and
jbe
jbe
xchg
jg
xor
and
clc
mov
mov
jae
and
sub
cli
jmp
jg
xchg
sbb
adc
xchg
push
scas
jle
cmp
fisubs
push
xor
pushf
xor
pop
call
jne
jg
sti
rcl
test
mov
insb
rcrb
xor
and
mov
and
add
imul
arpl
push
cmp
ret
lock
adc
or
fbstp
inc
faddp
pop
or
jno
mov
fistpll
add
loopne
inc
loopne
inc
xchg
jecxz
sbb
mov
stos
cmp
xor
mov
dec
add
sub
ja
or
sbb
adc
pushf
push
call
xor
push
ljmp
pusha
ss
call
icebp
pop
jbe
adc
stos
inc
adc
fs
ss
out
jne
scas
sub
cmpsb
mov
dec
sub
adc
xchg
in
sbb
scas
jle
xchg
xor
fs
sahf
cmp
mov
pop
jae
jae
mov
nop
push
scas
mov
or
test
fwait
xor
insb
push
call
pop
lds
aaa
test
sub
decl
and
pusha
lcall
testl
repz
decb
sbb
repnz
ret
adc
mov
mov
and
add
leave
sub
test
stc
ljmp
pop
pop
push
sbb
mov
sbb
dec
sarl
mov
repnz
addl
imul
cli
es
cmpsl
shl
sub
les
mov
xor
mov
aas
mov
fsubrs
or
and
mov
daa
int3
neg
popa
adc
lahf
fmulp
pop
xor
lret
sahf
negb
mov
cli
fst
cltd
push
jno
dec
push
into
imul
cmp
popw
aam
ret
shr
fildl
jno
pop
cwtl
cmp
pop
ror
jmp
dec
pop
nop
xor
pop
lods
inc
sub
push
out
or
and
mov
fwait
push
xor
mull
in
dec
bound
loope
in
push
repz
andb
or
test
push
call
push
mov
jmp
push
pusha
call
push
call
testb
loopne
mov
das
shlb
mov
cmp
shlb
add
es
ret
stos
pop
xor
leave
mov
dec
mov
push
mov
adcb
mov
jns
inc
daa
cmpsl
mov
sub
fwait
mull
aaa
test
push
mov
inc
cmc
pop
mov
or
sbb
mov
lods
iret
sub
mul
and
jno
dec
jne
notl
cld
pop
sbb
out
or
sub
iret
adc
lea
pusha
call
push
call
push
bound
jg
push
call
add
insb
jne
or
popf
xlat
adc
pop
sti
or
shll
mov
imul
leave
cmpsl
pop
or
lahf
cmp
test
inc
push
fiadds
mov
adc
push
sarb
gs
xor
repz
orl
mov
adc
scas
out
sbb
pop
xchg
cli
push
pop
shrb
popfw
fsub
pop
insl
pop
rclb
mov
out
mov
inc
and
jg
or
mov
push
fistpll
rcll
negb
int3
subl
sub
adc
sub
mov
adc
add
cmp
jg
aam
fdivl
aas
cmpsb
enter
sbb
scas
adc
and
cmpsb
repz
cmpsl
lods
addr16
mov
sti
jmp
aas
push
pusha
and
jo
aas
movsl
dec
sbb
shrb
pushf
adc
ljmp
inc
add
push
add
bound
shl
test
xchg
shlb
in
pop
mov
jmp
cwtl
adc
dec
lea
lods
lcall
fists
add
push
sahf
xor
push
add
jecxz
mov
lahf
cmpsb
pop
int3
repnz
adc
jns
inc
xchg
call
push
or
push
movsl
in
dec
insb
dec
negl
add
int
mov
outsb
pop
ljmp
push
xchg
cltd
loope
negl
sbb
mov
movsb
jnp
push
cmp
dec
je
lea
insb
jne
mov
popf
mov
nop
push
in
aad
nop
lea
std
sbb
stos
sarb
jp
sub
imul
pop
int3
movsb
xchg
loop
mov
pusha
push
add
hlt
inc
jg
mov
or
jns
dec
nop
lds
lcall
lcall
xchg
lods
lcall
push
das
or
popf
dec
mov
call
or
adc
jbe
mov
push
fnstsw
dec
daa
mov
ret
adc
xchg
pop
imulb
cmp
pushf
shr
jb
dec
push
sbb
xchg
cmp
xor
orl
xchg
out
mov
or
and
into
mov
mov
subb
sbb
pushf
adcl
gs
sbb
popf
cmc
dec
gs
mov
negl
dec
xchg
inc
and
in
mov
add
cmp
int
jmp
dec
aaa
dec
sub
push
mov
mov
mov
insl
push
and
or
ret
mov
sbb
popf
cmp
jecxz
inc
mov
push
int
pop
lea
ret
push
call
add
push
call
push
xchg
outsb
aaa
not
lods
pushf
not
dec
dec
rcl
rol
cmc
not
neg
call
push
call
insl
in
pushf
cwtl
mov
mov
mov
movb
lea
jmp
push
call
outsb
lahf
movsl
mov
or
xchg
add
add
mov
add
clc
add
bt
pusha
cmp
pusha
pushf
jmp
push
call
repnz
call
or
mov
jg,pn
pusha
call
sbb
jg,pn
sti
call
pushf
data16
and
and
lcall
je
scas
f2xm1
dec
xor
mov
popa
jg
mov
imul
mov
cltd
and
mov
push
cmp
dec
pop
movsl
inc
sbb
fldt
popf
int
mov
pop
adc
sbbb
push
push
scas
mov
mov
leave
movsl
dec
test
adc
pop
scas
adc
repnz
rcll
mov
roll
mov
lahf
cli
and
jno
fidivrl
push
mov
jg
ret
call
scas
xchg
imul
xlat
xchg
or
clc
xor
and
push
call
inc
push
call
jno
iret
mov
sbb
or
popw
mov
mov
xor
jmp
cmpsb
lahf
jle
lret
mov
and
xchg
lods
xchg
xor
add
test
xchg
or
mov
and
xchg
pushf
push
mov
not
mov
lea
call
stc
call
push
call
das
shr
lahf
in
push
call
pop
and
imul
call
lods
fcmovnb
imul
and
mov
into
aaa
jae
in
cs
jno
cli
dec
xlat
dec
jns
out
scas
out
inc
subb
add
add
test
and
loop
movsb
les
push
ret
inc
das
call
ret
add
les
iret
pop
scas
in
out
mov
popf
lret
shlb
gs
sub
jnp
jecxz
loope
inc
ljmp
out
popf
jno
aas
loope
mov
sub
dec
ret
sbb
outsb
and
cmpsb
inc
test
addr16
sti
outsl
enterw
ucomiss
out
je
mov
dec
push
outsl
scas
insb
push
outsb
pop
andb
bound
jle
push
out
out
lock
ljmp
dec
mov
mov
ja
dec
mov
clc
outsb
lods
nop
dec
leavew
dec
push
sti
lods
loop
hlt
in
pushw
add
jp
imul
popa
inc
ret
pop
mov
insb
jo
sub
push
push
push
xor
sub
or
lret
js
imul
gs
loope
scas
jb
outsb
fs
je
dec
and
pop
and
jl
push
imul
imul
fs
pop
imul
outsb
jecxz
test
sti
out
in
mov
bound
mov
jle
shrl
mov
mov
cmc
dec
xchg
jg
in
je
jae
outsb
js
arpl
je
mov
jge
das
fs
nop
imul
clc
or
jae
pop
jo
imul
pop
cmp
test
adc
clc
fdivs
test
pop
sbb
inc
sub
sti
shll
out
jo
test
arpl
mov
jno
bound
je
adcb
add
cmpsl
pop
addl
cmpl
outsb
jo
mov
mov
lds
mov
pop
leave
push
mov
and
call
repz
hlt
pop
js
and
pushf
inc
mov
dec
scas
int
xlat
dec
loopne
jno
lcall
mov
jle
pop
les
and
add
enter
or
arpl
insb
xor
in
inc
popa
jecxz
int3
ret
loop
adc
fnstcw
jl
inc
xchg
adc
sub
aad
push
cmp
jecxz
sub
movsb
mov
xorb
in
pop
fs
and
and
out
out
data16
dec
mov
enter
inc
mov
add
andb
mov
inc
bound
mov
std
cmpb
dec
fsubr
xchg
push
out
mov
push
aas
sub
mov
inc
dec
outsl
push
sarb
je
lock
mov
jg
mov
js
and
and
mov
jl
push
outsl
cld
xchg
and
retw
repz
inc
loopne
and
and
call
nop
push
imul
cmp
pop
in
arpl
lock
addr16
mov
pop
push
das
std
loopne
jg
inc
add
leave
outsl
mov
ljmp
popf
push
arpl
mov
jp
push
ja
cmp
ss
popa
scas
jae
cmp
inc
pusha
pusha
bound
and
push
jo
or
pusha
mov
notl
fdivl
xchg
outsb
xchg
lcall
addl
mov
push
push
shlb
subb
arpl
jne
jb
xchg
int3
lcall
mov
or
popf
jp
xchg
jae
sub
mov
or
jo
jmp
loop
jge
jo
dec
push
pop
js
outsb
arpl
adc
roll
dec
mov
icebp
push
add
jo
dec
cmp
sbb
test
fldl
pushl
sbbl
jo
push
xor
repnz
and
in
mov
mov
das
dec
push
movsl
pop
jo
xlat
jne
adc
add
or
jecxz
movntq
mov
xchg
ljmp
loop
cmp
js
jne
adc
mov
adc
stos
or
xor
imul
push
jo
xchg
rcll
nop
jle
xor
jae
imull
imulb
dec
jo
std
push
sub
mov
or
jo
loopne
cmp
in
orps
icebp
popf
jl
mov
sahf
jge
cmpsl
lahf
jp
xchg
hlt
dec
jo
jmp
ss
test
in
pop
out
jo
repnz
cmp
and
jo
cmp
dec
imul
les
mov
mov
add
lcall
jae
insb
outsb
xchg
xlat
pop
jmp
push
cmp
in
push
pop
sbb
sub
pop
or
xor
addr16
sub
dec
rorl
push
aaa
outsl
fcmovnbe
mov
rcr
jecxz
jae
fiadds
jns
pushf
nop
adc
callw
cmp
dec
jo
mov
imul
fldenv
insb
mov
mov
gs
push
cs
mul
dec
psubw
sub
jmp
push
stc
cmc
je
fnstenv
mov
xchg
dec
pop
mov
push
cld
vmread
push
push
clc
addr16
jno
mov
jo
orb
cmp
clc
scas
add
shlb
sbb
cmp
jo
loope
pop
push
out
sbb
jle
xchg
xor
out
ja
pmullw
cmp
xor
das
js
jg
and
pop
jb
push
out
add
ja
or
ss
daa
push
mov
imul
jo
push
cltd
jno
pop
cmpsb
and
imul
out
cltd
sarb
jge
sub
leave
jb
cmpsl
call
xchg
cmp
stc
nop
mov
loop
mov
xor
dec
pusha
adc
inc
push
pop
jmp
stc
les
popf
clc
je
ja
mov
divb
adc
icebp
rclb
pop
dec
jns
push
sub
or
jmp
lret
hlt
mov
jo
xorb
inc
imul
repnz
push
clc
jo
pop
jns
cmp
sbb
sub
in
mov
jmp
cmp
sbb
cld
in
jo
loopne
add
leave
mov
pusha
add
das
pop
jp
ja
dec
push
mov
push
loop
addr16
and
adcl
popa
js
jae
push
jge
xchg
jno
out
adc
pop
jo
out
movsb
stc
popa
mov
jge
jo
pop
jle
insl
push
adc
xor
fsubs
cs
arpl
xor
jg
outsb
insb
jo
jmp
jne
scas
mov
inc
hlt
js
jae
cli
aaa
outsb
xchg
fidivs
xor
inc
hlt
dec
pop
mov
mov
divl
int
mov
jae
xorb
dec
sar
addr16
ja
jle
mov
xor
stos
aaa
pushf
adc
jle
sub
call
push
pop
inc
repnz
clc
add
icebp
fnstcw
int
xchg
pop
add
push
loope
adc
xor
dec
adcb
sub
mov
pushf
js
xchg
mov
enter
mov
mov
aas
push
ja
cmp
lock
popa
jle
jo
pusha
pop
repnz
loop
xor
sarb
adc
inc
push
scas
cmp
dec
cmpsl
dec
jmp
addb
jno
loope
pop
cmp
inc
jl
fnstcw
mov
jle
mov
pop
mov
inc
aaa
inc
mov
ljmp
mov
hlt
pop
mov
xor
jo
xorb
or
inc
stc
repnz
or
out
call
clc
aam
push
dec
subl
lods
jo
push
push
jne
jo
js
jno
divl
imul
js
xchg
stc
and
cmp
jge
test
xchg
xor
mov
fdivl
imull
push
and
jge
push
jle
pushf
sub
or
cmp
add
cmc
xor
jmp
sub
lods
loope
daa
cmp
mov
jns
std
imul
push
ret
or
mov
je
movsb
xchg
jo
dec
sub
jo
gs
in
jo
dec
add
jo
mov
inc
test
mov
hlt
fwait
out
mov
jp
or
out
nop
fsub
test
jle
icebp
inc
jo
xchg
fwait
jns
leave
cmpsb
fbstp
test
iret
ljmp
xor
dec
or
aad
mov
js
arpl
jae
push
insl
int3
adc
outsb
data16
adcb
ret
shlb
inc
insl
js
btsl
gs
adc
cmp
or
rcrb
pop
ljmp
test
cwtl
push
stc
mov
and
xchg
push
sti
pop
mov
xchg
jg
icebp
push
stos
or
or
movsb
adcb
jnp
jb
jo
xor
or
stos
lahf
cmc
xchg
cltd
jle
push
inc
cmp
int
mov
or
ret
cmp
addr16
int3
xchg
add
mov
out
dec
insl
push
jp
les
inc
jmp
sub
cli
pusha
lock
loopne
out
pop
mov
mov
imul
xacquire
shrl
jae
lret
pusha
push
shl
cmp
mov
test
mov
leave
pop
dec
xchg
mov
lcall
incb
cmpsb
aad
jae
ret
imul
in
mov
scas
repz
out
dec
push
pop
xor
lahf
mov
push
cmp
mov
or
data16
inc
or
ja
out
push
pop
inc
push
nop
push
xor
std
bound
pop
sub
imul
imul
jae
mov
xor
aas
jne
lcall
and
cs
ret
jbe
es
ret
inc
dec
cmp
pop
xorb
shrb
js
arpl
mov
or
pop
adc
idiv
inc
pop
lret
sbb
ret
out
add
lret
xor
test
shlb
adcb
dec
fsubs
mov
mov
movsl
inc
sub
and
aam
pop
pusha
and
leave
adc
arpl
mov
jae
ljmp
int3
dec
scas
pusha
mov
out
jg
repnz
push
aas
mov
jl
fsts
cmp
lahf
sub
fucomip
fiaddl
push
pop
push
psllq
in
mov
in
in
push
stos
das
or
mov
push
inc
sbbl
popf
imul
js
std
sti
push
pusha
out
xchg
je
das
ret
inc
outsw
aad
mov
jbe
out
mov
rorb
push
lods
jo
imul
pushf
clc
push
sub
gs
movsl
addb
ss
jbe
je
inc
jl
out
mov
mov
mov
lock
repnz
lret
add
cltd
sbbb
pusha
or
ret
or
std
pushf
sub
push
xor
clc
xor
icebp
call
add
jb
hlt
push
jne
aaa
jo
lock
sub
add
cmc
jg
lods
dec
push
pop
mov
subb
pop
mov
lock
xchg
push
xor
fs
xchg
pop
in
or
push
pop
dec
outsl
jg
xchg
subb
mov
sub
jmp
jne
mov
and
push
push
arpl
push
mov
stc
shlb
daa
jg
sti
lods
arpl
in
jae
out
fldcw
nop
xchg
inc
jno
in
cmp
imul
and
and
pop
enter
jne
sub
mov
push
mov
mov
cmp
xchg
lods
imul
inc
fistps
shlb
shlb
inc
xrelease
xor
mov
cmpsb
and
mov
aad
adc
fs
pop
mov
and
pop
test
push
pop
lock
jecxz
gs
stc
ja
pop
aaa
iret
std
pop
push
mov
push
movsb
xor
push
cmp
sub
add
push
add
xchg
outsl
push
ret
jo
arpl
mov
out
sub
mov
adc
sub
inc
xor
add
xor
cmp
je
arpl
cli
xor
pop
pop
mov
push
jae
call
popf
sti
mov
jle
mov
fsubrl
inc
lock
push
cwtl
cmp
fdiv
push
mov
xchg
loopne
and
nop
dec
rcl
jg
mov
push
fs
mov
pop
xor
fildl
xchg
ret
push
jg
out
arpl
scas
shl
or
int3
outsb
push
pop
sub
insb
jb
dec
jae
loopne
cmp
lret
lock
addb
arpl
dec
fistps
fs
dec
in
jae
fiadds
dec
add
inc
sub
stos
scas
sbb
pushf
mov
adc
ja
adc
push
cmc
cmpb
push
dec
pop
push
ljmp
and
mov
push
movsl
out
sub
ret
das
push
subb
mov
lods
loop
sub
data16
scas
repnz
pop
or
outsb
mov
rcrb
mov
inc
push
rcl
sbb
mov
pop
in
movl
and
mov
gs
insl
leave
xor
subb
lcall
push
icebp
mov
out
dec
pushw
dec
or
jge
add
fdivrp
push
lea
sub
adc
inc
mov
jle
mov
iret
divb
repz
push
jge
jae
xchg
pop
sub
neg
cmpl
pushf
mov
jo
jecxz
ficoms
pop
jbe
adcb
jo
pop
cmp
jmp
mov
sbb
jae
repnz
cmp
pcmpeqb
jo
cmc
xchg
xchg
fidivs
rorl
cmpb
shll
in
mov
cmp
imul
push
and
scas
jg
jg
push
andl
push
jne
add
mov
add
push
repz
dec
mov
xor
test
jae
inc
scas
sbb
sbb
fs
push
scas
and
fdivs
add
pop
mov
push
lock
add
test
sbb
mov
mov
xchg
push
aam
sbb
cmp
mov
push
adc
mov
ficoml
loopne
mov
push
pusha
push
cmp
cmp
jge
xchg
and
push
lahf
cmpsl
insl
push
fs
std
pop
test
add
push
movsb
in
punpckhbw
jb
mov
add
push
movb
rcl
adc
cmc
ret
pop
shlb
fs
inc
mov
lcall
add
add
ret
in
int3
notl
dec
aam
inc
arpl
stos
push
outsb
scas
insb
jo
push
dec
ja
xor
outsb
loopne
and
and
mov
pushl
call
push
fldt
jge
sub
xchg
insb
out
push
push
jns
das
push
shlb
ret
jmp
std
jmp
pop
ja
xchg
movsl
jle
mov
call
xchg
stos
std
lahf
fwait
or
sbb
pop
scas
lods
mov
mov
push
lahf
out
push
outsb
dec
cmp
bound
scas
inc
das
mov
shr
js
xor
fdivs
push
mov
push
repnz
push
out
inc
outsb
sub
mov
sbb
push
sub
out
or
jae
or
outsb
js
push
xor
in
mov
inc
xlat
mov
cli
lods
clc
int3
fdivrl
jbe
imul
out
pop
clc
movsb
dec
outsb
mov
push
mov
mov
adc
jne
enter
les
test
fs
lret
sub
loopne
shll
jne
push
test
insb
pop
cmp
mov
das
xchg
mov
jns
shl
movsl
jo
pop
pop
xlat
ss
sub
adc
in
inc
insb
push
ljmp
movsb
shlb
imul
cwtl
or
jbe
jp
pushf
icebp
mov
or
inc
hlt
xor
pop
ljmp
imul
jae
and
loope
pusha
jmp
push
in
dec
xchg
addb
out
in
pop
in
jno
scas
adc
mov
xor
lds
add
mov
sbb
mov
mov
inc
inc
add
or
repz
push
mov
lea
and
js
xchg
repz
test
ror
fidivl
and
aam
xchg
rcr
je,pt
test
jo
and
cmc
cltd
scas
leave
insb
jp
pop
jl
dec
push
pusha
mov
sub
popa
add
push
inc
out
rcl
call
aam
push
jno
and
loope
fstpt
aad
outsl
push
jnp
push
add
sbb
mov
inc
loope
jo
cmp
sub
mov
sub
adcb
dec
std
push
cmp
dec
push
loopne,pn
dec
das
and
jl
lret
inc
out
out
bound
fisttps
sbb
dec
aaa
mov
je
cwtl
push
mov
pop
ljmp
adc
cpuid
ljmp
mov
jno
insl
push
fs
xor
push
xchg
mov
jae
lods
cmpsb
stos
inc
test
adc
xchg
mov
mov
mov
jbe
sub
dec
jnp
ss
or
icebp
cmpb
stc
aad
movsl
subb
jne
add
lods
xchg
xor
insb
cmc
push
fistpll
pop
xchg
out
jle
jmp
rolb
push
pop
lods
jg
add
mov
arpl
movsl
mov
jae
adc
stos
gs
pop
push
adcb
jecxz
sub
xchg
insb
std
arpl
mov
ret
mov
jb
addr16
inc
cltd
scas
jae
jecxz
mov
lahf
sub
sub
push
adc
dec
cmp
pop
jg
jp
mov
movsb
add
lcall
mov
adc
mov
or
lret
dec
mov
add
dec
cld
movsl
lcall
mov
jg
je
xor
jge
dec
jmp
or
mov
sbb
pop
sub
jne
mov
push
cwtl
or
int3
jno
sub
or
pop
and
stos
call
mov
gs
dec
lret
dec
pop
jo
and
xchg
mov
cmpsb
jo
cmp
mov
jns
test
int3
repz
pop
orb
scas
cmpb
iret
addr16
push
jle
prefetcht2
test
insb
lahf
mov
jmp
sub
jo
dec
adc
cmp
inc
test
and
jmp
xchg
xor
cmc
xor
lock
mov
pop
pop
loope
pop
imul
notb
push
adc
or
mov
repz
ss
std
fldl
nop
mov
loope
pop
mov
xchg
xchg
adc
cmp
push
cmp
xchg
loope
sbbb
adcb
xchg
xor
xor
es
inc
inc
pop
gs
popf
mov
cmp
xchg
pop
shll
xchg
adc
push
aam
je
push
mov
xlat
std
sbb
sbb
shl
mov
scas
inc
push
jo
imul
jo
es
dec
insl
pop
lods
fnsave
cmpsb
and
sub
ja
push
and
das
js
pop
bound
ja
movsb
mov
orb
and
pop
xchg
aaa
enter
nop
in
jno
pop
sub
clc
rcrb
mov
mov
stos
pop
mov
sub
sub
sub
mov
cld
or
push
or
pop
mov
jo
jnp
and
int
jb
jo
imulb
mov
movsb
sub
es
jno
mov
dec
stc
jo
outsb
sbb
pushf
nop
in
dec
mov
pop
jns
push
jg
bnd
jl
inc
sub
nop
jle
mov
ret
cmp
sub
push
xchg
clc
xchg
xor
ret
int
out
pop
pushf
inc
mov
cmp
fstpt
fildll
ja
sbb
mov
test
stc
dec
mov
xor
sbb
or
insl
pop
jo
jns
imul
sbb
sub
leave
mov
js
push
pop
pop
inc
clc
jo
fmul
mov
xchg
xchg
addr16
push
inc
ss
push
div
out
nop
mov
ja
pop
dec
sub
out
fmulp
mov
mov
xchg
push
push
movsb
push
int
dec
pop
dec
cmp
int3
mov
mov
fdivrl
loopne
cld
jns
fmul
hlt
cld
xchg
test
jo
loop
ret
xchg
jo
lods
push
divb
and
dec
js
push
dec
aaa
pop
loop,pn
xor
out
push
mov
mov
push
js
testl
std
or
loop
sub
xorb
and
mov
xor
ss
and
js
xchg
in
push
pop
lret
shrb
dec
sbb
dec
pop
repz
mov
cmc
xchg
cmp
jb
add
mov
adc
xorl
mov
mov
or
xchg
hlt
jl
fldenv
cmp
push
pop
push
in
pushf
or
jge
jno
insl
je
push
pop
outsl
pop
sbb
je
pop
dec
psubw
ss
test
loope
ror
cltd
in
outsb
xor
push
subb
inc
das
pop
xchg
or
sahf
xchg
jo
mov
test
pop
subb
loop
push
cmp
mov
sahf
fnstcw
push
adc
jp
js
xor
insb
cwtl
xchg
jb
mov
movsl
adc
lods
les
pop
and
ss
xchg
cmc
lock
xchg
jle
scas
sbb
bound
jo
out
in
mov
sbb
call
sbb
or
or
popa
push
and
jo
or
in
or
adc
push
mov
fnstcw
jle
aad
pusha
nop
sbb
and
pop
or
loop
jno
jo
mov
outsl
or
jecxz
mov
stos
push
cmp
xchg
nop
inc
adcl
xchg
inc
mov
test
das
cmp
jns
mov
xor
out
dec
shlb
aas
loop
cs
sbb
inc
cmpsl
cmp
das
shrd
push
push
pop
ljmp
je
lahf
ss
pop
jb
pushf
xor
loopne,pn
sbb
jae
jo
test
pop
cmp
jb
fsubs
sahf
inc
js
fldcw
aas
outsl
js
dec
cmp
ja
loope
jo
ficompl
stc
push
inc
lret
out
outsl
pop
fidivs
xchg
fildl
push
test
push
incb
fdivs
or
cmp
in
sub
and
popa
repnz
and
aad
pop
and
dec
cmp
loop
das
mov
pop
mov
jnp
outsb
out
ljmp
stos
ret
addr16
mov
push
nop
fstpl
clc
mov
or
gs
imul
or
jle
clc
out
sub
les
dec
cmp
sbb
jo
sbb
jo
pop
xchg
and
in
push
jo
ret
sub
xor
push
fiadds
mov
xor
pop
out
int3
jo
push
adc
mov
mov
add
and
inc
out
pop
cs
sbb
and
xor
jb
je
push
into
es
js
pop
lods
rclb
dec
xchg
sbb
xchg
mov
jbe
lock
mov
sbb
stos
sahf
jo
jne
jb
fwait
or
jo
ficoms
test
add
sub
sbbb
push
nop
fidivs
imul
divl
jo
pop
mov
jae
mov
fwait
jo
popa
pop
in
imul
push
ds
push
sahf
sbb
push
ja
or
or
iret
out
js
mov
notl
or
inc
push
test
xorb
cwtl
lahf
and
mov
adc
push
xchg
jb
add
popa
push
inc
inc
xor
js
icebp
loope
rol
mov
nop
sbb
pusha
das
jmp
lock
loopne
mov
outsl
jg
pop
cs
mov
push
out
dec
fbstp
jbe
push
inc
xor
mul
mov
jo
test
push
push
inc
xor
adc
add
in
lds
movsb
xchg
push
inc
xor
and
addb
in
les
xorl
inc
xor
adc
rol
stos
mov
nop
jp
pop
sub
or
ljmp
mov
adc
push
jp
fnstsw
iret
sbb
add
push
hlt
jo
scas
fisubs
jo
cmp
mov
or
jo
dec
cmc
clc
mov
fidivl
xor
hlt
fsubrs
and
xchg
jbe
in
jo
fstps
mov
dec
leave
dec
fidivl
jnp
daa
insl
icebp
jo
inc
mov
mov
cmp
sub
sub
jb
push
jmp
xchg
push
stc
sub
or
das
and
mov
mov
jo
jnp
cld
cmp
int
mov
sbb
cmp
aam
cmp
cmc
loopne
xchg
inc
and
out
jo
aaa
mov
clc
out
fidivs
fldenv
lods
adcb
stc
aam
fs
mov
mov
mov
pop
inc
mov
push
jp
jp
push
in
jo
xlat
cmpsl
cltd
sar
jmp
nop
addr16
xchg
loop
movsl
push
and
jb
jo
jge
hlt
lahf
and
outsb
mov
push
std
loop
fdivl
nop
sbb
jecxz
push
cmp
sub
into
jo
call
pop
loope
jo
stos
mov
addr16
fisubl
jae
adc
xlat
push
push
xor
cmp
loop
repnz
jmp
push
nop
cmpsb
dec
jnp
add
pop
jno
xlat
aam
daa
push
jl
cmp
push
ljmp
in
fists
cmpsb
push
mov
jnp
sbb
int
pop
push
mov
jl
sub
data16
mov
cmp
stos
xor
je
cs
dec
aad
nop
ja
mov
push
cmp
andl
into
pop
mov
mov
js
pop
mov
cld
adc
aas
js
sbb
shlb
pcmpeqb
subb
std
jno
jo
cmp
push
adc
xchg
fcompl
hlt
jo
and
ljmp
jo
push
std
push
add
inc
jo
lahf
pusha
mov
dec
push
and
iret
shrd
pusha
add
fdivs
in
lock
sub
imul
int
jo
mov
jge
cmp
xor
xor
lods
push
cmpsb
je
adcl
dec
add
mov
aam
aaa
jno
in
mov
mov
push
loope
addr16
push
popf
adc
es
push
std
movl
mov
mul
popa
mov
stc
cmc
pop
mov
jmp
popf
xlat
test
outsl
icebp
mov
leave
aad
dec
mov
stc
xor
sbb
mov
addr16
add
outsl
pusha
mov
jo
fdivs
repnz
lock
sbb
jmp
push
enter
clc
jb
jo
sbb
rcrb
cmpb
repnz
mov
sub
ss
call
test
xchg
push
pop
xchg
das
sarl
jne
jo
mov
cmp
ljmp
ss
std
mov
jo
pusha
insl
pop
jno
dec
popa
jo
sub
push
sbb
out
jae
clc
insl
imulb
popa
xor
sub
cs
das
loope
pop
mov
icebp
roll
jno
mov
repnz
pop
mov
sti
jae
or
mov
jl
xlat
xchg
and
adc
mov
jle
mov
adc
push
mov
and
sbb
hlt
adc
jo
ss
sbb
imul
lahf
sub
or
stos
pop
imul
mov
jne
outsl
icebp
repnz
idivl
pop
jo
jae
mov
loope
pop
add
cmp
or
out
scas
in
push
dec
add
imul
out
dec
push
and
xchg
jb
arpl
mov
int
xchg
pop
lahf
cmp
push
subb
and
sbb
js
or
fsubrs
mov
sub
mov
jecxz
je
nop
pop
jg
mov
inc
jmp
jo
adc
scas
mov
jmp
cmpb
fs
in
jge
or
jo
scas
sub
dec
sbb
mov
imul
pop
jl
xchg
ja
adc
push
pushf
sbb
or
adc
jnp
nop
into
xchg
int
cwtl
sbb
add
mov
notb
pop
jo
and
in
jnp
stos
dec
mov
dec
js
push
push
mov
adcb
cs
nop
sub
xor
push
fisttps
aam
addb
int3
fldt
les
jo
testl
jo
outsl
jge
adc
in
jae
push
and
rorb
push
ficomps
data16
fnstsw
popa
insb
pop
daa
fdivrl
mov
je
or
xor
add
push
mov
jo
call
inc
repnz
je
ja
lahf
ss
gs
sub
add
adc
sub
mov
stc
mov
aaa
mov
mov
cmc
sbb
call
push
pop
add
lods
or
sbb
and
jnp
xchg
mov
cmp
mov
lock
inc
xchg
and
dec
cmpsb
nop
jne
and
jae
int3
jge
push
sti
je
sub
push
arpl
lret
fdivrl
loop
jnp
sbb
sbb
xor
mov
loope
jo
pop
xor
sti
mov
in
cmp
jns
mov
xor
outsl
mov
std
pop
setno
andb
arpl
fs
dec
xor
jmp
inc
std
or
xchg
jle
ret
jns
jo
das
fnsave
adc
jo
fwait
leave
pop
pop
sub
iret
sbb
test
mov
ficoml
test
and
nop
std
cmp
orb
imul
fistpl
in
mov
xlat
inc
clc
test
mul
mov
jo
sbb
dec
imul
loopne
aad
dec
add
bound
cli
jecxz
push
jo
and
jo
inc
mov
jno
sbb
shrl
push
add
xorb
jns
movsb
jo
sub
cpuid
shll
dec
cmp
scas
shrb
xchg
jl
sub
pop
xor
imul
je
jo
jae
jns
leave
scas
testl
js
nop
jb
jns
xchg
arpl
imul
insb
adc
jo
fstpl
xor
xor
xchg
xor
xlat
sub
pop
inc
pop
sbb
push
ss
adc
std
out
clc
jmp
xchg
decb
xchg
pop
jno
sahf
jo
mov
xor
dec
imul
lcall
jo
scas
cwtl
adc
arpl
shrb
pop
fistpll
jo
sbb
aam
lock
mov
pop
push
sub
mov
in
lcall
scas
inc
gs
adc
lock
xor
or
mov
jo
push
cmp
cmp
ret
jmp
pop
sbb
jo
mov
ss
inc
mov
or
cwtl
ja
mov
jo
mov
lret
out
cmp
jne
imul
or
jo
pop
sbb
out
int
pop
add
lods
cmp
ret
xor
mov
shlb
inc
jns
iret
dec
repz
sbb
cli
sbb
fisttpl
jo
xchg
pop
or
push
mov
add
int
mul
dec
jo
into
outsl
jg
jne
pop
push
jl
mov
push
movsl
clts
xchg
jb
int3
pop
pop
or
jo
mov
sub
popf
cld
adcb
push
aaa
jns
jo
dec
jg
leave
xchg
sub
cmp
inc
dec
cmp
or
dec
in
popa
push
repnz
jo
xor
add
jo
mov
divb
mov
iret
pop
xchg
enter
jge
jo
inc
push
push
clc
pop
or
jo
or
jge
cmp
add
sub
testl
mov
sbb
jbe
ret
jo
mov
mov
loop
les
mov
lods
repz
mov
popa
dec
je
aaa
addb
cwtl
xor
mov
lret
pop
or
int
jmp
mov
add
inc
xlat
lods
pop
adc
imul
fs
fistl
xchg
xchg
fs
fsubs
jo
jp
pop
xor
adc
jo
shr
xchg
es
popf
orl
xchg
outsl
popa
jne
lret
pop
sahf
enter
lcall
jo
or
nop
testb
mov
ja
pop
in
ss
add
ljmp
pushf
jo
push
shl
popa
insl
xor
pusha
xor
add
push
mov
jo
arpl
out
cmpsl
mov
xor
inc
jp
jo
inc
orl
or
jo
daa
fsubrl
xchg
jns
jae
pop
xchg
cs
mov
mov
test
mov
neg
jo
movsl
mov
cwtl
lock
stc
jl
repz
pop
sub
orb
inc
lds
jno
iret
xorl
je
je
test
test
loop
subb
mov
jns
out
out
fidivl
push
scas
jbe
or
lret
js
mov
loope
inc
je
jge
imul
insl
lods
arpl
data16
ljmp
sbbl
shrb
dec
ss
js
lods
pop
mov
lahf
nop
xchg
bound
pusha
jo
or
adc
popf
fisttps
pop
cmpsb
in
jnp
add
sbb
jge
pop
std
dec
xor
adcb
jae
icebp
jo
test
repnz
jns
push
ret
call
xchg
and
push
mov
mov
imul
ret
ja
jp
jo
push
clc
in
cmp
mov
adcb
jne
in
mov
lods
or
mov
out
add
pop
faddl
ffree
int
xor
rclb
fldt
pop
ss
lds
jo
lcall
stos
test
and
jno
adc
jmp
jno
jo
aas
add
mov
fidivs
clc
push
push
or
ljmp
mov
or
std
fimuls
stc
lcall
jo
inc
inc
jg
int
dec
mov
jle,pn
xor
push
xor
mov
mov
xchg
nop
aaa
cmc
je
pop
push
jne
popa
fld1
pop
outsl
bound
jo
pop
adc
fs
jo
push
stc
pop
and
cld
jnp
mov
mov
mov
jp
mov
jo
xor
daa
movlhps
stos
push
sbb
fisttpll
and
jo
mov
adc
xlat
xchg
das
mov
jo
orb
incl
jp
jge
jo
fadds
testl
insb
fisubrl
or
sub
imul
loop
mov
push
and
icebp
imul
aam
lds
pop
jo
xorl
push
jnp
xor
fldt
or
add
push
dec
shlb
mov
stos
inc
xchg
jge
insb
and
aad
dec
in
mov
ds
mov
repz
enter
scas
xchg
inc
mov
aam
mov
in
xor
js
xchg
jo
sarl
call
mov
enter
insb
pop
outsb
jo
movsb
xor
jo
std
jge
mov
adc
in
mov
lds
movsl
pop
mov
jo
sahf
call
repnz
insb
mov
jo
fidivrl
test
push
push
jne
xor
add
aas
mov
push
jo
mov
cmp
or
ja
jo
ret
xor
outsb
xlat
scas
jae
mov
cli
jo
mov
xchg
inc
fidivl
addb
leave
push
addl
push
or
jno
xlat
out
lods
sbb
bound
cmp
jnp
mov
and
es
sbb
mov
hlt
push
mov
lods
loop
inc
pop
std
mov
jno
sbb
aas
jns
add
test
xor
add
ljmp
stc
inc
out
add
or
xchg
jmp
repnz
les
jo
inc
dec
push
movzwl
shrb
lahf
jo
insl
sbb
cmp
nop
gs
pop
imul
and
pop
dec
lods
sub
or
fst
outsb
and
insb
jmp
lret
hlt
sbb
in
mov
dec
sbb
movsl
push
push
fucomi
rcrl
xor
leave
ret
fwait
jmp
insl
shlb
aaa
insb
inc
outsl
jo
dec
stos
sbb
fsub
leave
xchg
roll
bound
cmpsl
jo
stc
adc
jge
sbb
xchg
jae
scas
popa
or
clc
jo
in
xor
sub
insb
adc
or
mov
pop
testb
jne
jo
jp
jns
lret
push
popa
aam
pop
insb
int
insl
cmp
jle
inc
cmp
testl
sub
rol
cltd
sbb
jno
nop
orb
dec
das
jp
jmp
pushw
mov
aam
jge
and
cmp
push
push
inc
push
and
mov
mov
jge
lock
icebp
into
adc
pmulhw
cs
and
sub
adc
cmpb
jbe
add
inc
fnsave
neg
cmp
sub
jecxz
jmp
jno
fisubrs
adc
jle
xchg
mov
cli
js
or
in
dec
les
jo
into
in
xchg
adc
adcb
jo
cmp
in
jne
pop
jo
fmuls
push
rorl
mov
mov
scas
hlt
jo
push
lcall
sub
mov
lods
jo
hlt
aaa
push
inc
jae
roll
jo
push
dec
or
cmp
jo
and
ret
cmp
jg
scas
jae
jp
and
int3
lahf
pop
lret
fistpll
jo
cmpsl
cwtl
outsb
cltd
xor
lock
sub
xchg
jbe
aas
dec
pop
psubsb
es
jp
fildll
jo
fwait
repz
mov
add
fnstenv
jg
sti
dec
fs
push
ds
inc
mov
jo
sbb
push
mov
lock
dec
pop
inc
jo
adc
jo
movl
lcall
jmp
push
jo
xchg
test
ret
ffreep
lock
or
jl
xor
popf
xchg
adc
jb
addb
imul
mov
or
dec
pop
jo
dec
lods
shll
jo
jb
insb
pusha
fldl
sarb
jne
mov
inc
nop
mov
fdivl
jae
jo
or
shl
adc
mov
fnsave
sub
mov
daa
sbb
mov
dec
aad
add
aaa
leave
stos
or
xchg
inc
xorl
fidivrs
icebp
in
xor
jo
shlb
imul
mov
jns
sbb
ja
add
inc
nop
daa
inc
xorb
jno
mov
cmp
wbinvd
ljmp
jo
in
repz
mov
dec
orb
push
or
lea
repz
cmp
sub
std
push
jo
pop
jne
jecxz
push
mov
gs
jns
jo
lds
pop
addr16
inc
jo
jbe
jno
add
cmpsb
push
mov
xor
cmp
jl
jo
data16
sti
mov
push
outsb
sbb
nop
pop
jbe
jns
jnp
dec
jmp
jmp
imul
mov
pop
in
andl
mov
xchg
mov
sub
jo
push
xorb
outsb
xchg
inc
insb
mov
lret
in
clc
jbe
jo
out
cmp
jno,pn
or
push
push
imul
add
mov
in
stc
mov
lcall
mov
jb
and
add
inc
popa
movsb
add
add
hlt
adc
push
fidivl
xchg
inc
push
into
ret
lock
push
and
xlat
orb
jbe
pushf
int3
xchg
sub
js
in
sbb
xchg
jo
xchg
arpl
push
lods
jl
mov
jns
mov
pop
jns
mov
push
repnz
jmp
jo
xor
inc
mov
jge
jo
hlt
test
shl
andb
js
ja
push
cs
cld
cltd
leave
pop
sbbb
enter
sub
adc
loopne
test
pusha
testl
jp
push
xchg
cmpb
lahf
jo
jge
inc
dec
rcl
cmpsb
push
jmp
ja
cltd
mov
push
pop
mov
jb
jne
seto
inc
push
jmp
pop
shlb
popf
mov
cs
adc
ja
push
or
jo
push
jp
push
adc
jne
into
lahf
jo
rolb
jo
sbb
jno
shll
sub
loope
imul
or
sarl
jmp
imul
mov
sub
test
cmp
andl
xor
add
xor
fs
jns
ret
cmpsl
cmpb
mov
or
daa
push
pop
sar
mov
rol
or
push
xchg
mov
pop
subl
js
mov
sbb
cmp
lret
xor
mov
jmp
inc
push
shll
jns
push
aaa
je
xchg
jge
cwtl
mov
ljmp
shrb
cmpsb
test
sbb
je
push
add
pop
jo
imul
sahf
pop
and
jmp
pop
cmc
push
xor
jns
jo
mov
push
jecxz
mov
cmp
rorl
sbb
mov
dec
scas
loopne
cmp
fldt
jo
jle
imul
ret
fdiv
jge
in
mov
dec
jmp
jo
jne
inc
and
jo
inc
ret
jbe
shlb
leave
jp
popf
outsb
pop
loop
loopne
je
dec
js
push
jo
out
jno
out
faddp
jge
jo
mov
fs
cs
pusha
and
jl
push
imul
sbb
mov
cwtl
rorb
dec
sub
xchg
jo
mov
sbbb
pop
or
fstl
out
jo
jo,pn
xlat
mov
xchg
popa
push
jo
sbb
jg
jle
dec
fmul
nop
cmpsb
andb
jns
jbe
daa
arpl
ja
push
mov
jo
sub
out
movsb
cmp
jo
popa
into
or
std
mov
in
pop
mov
aaa
or
sbb
xchg
jo
add
hlt
mov
inc
push
mov
jns
cld
or
adcb
loope
ja
in
inc
mov
leave
mov
jo
mov
sbb
push
das
shl
jo
repnz
cwtl
inc
jo
out
jno
sbbb
sub
into
es
jo
fwait
jnp
mov
test
int3
je
adc
jns
jo
fisttps
cmp
or
ss
mov
test
lods
xchg
imul
aaa
or
push
jmp
rorl
fdivrs
inc
gs
sub
jo
inc
mov
or
jns
sub
stc
lahf
mov
clc
popf
adc
sub
jo
and
push
push
enter
push
out
mov
jle
popa
clc
ja
in
jo
sbb
movsl
jns
cld
jo
nop
adc
jmp
cwtl
aas
fnstenv
jl
ret
jno
xorl
or
and
ds
jo
xchg
sub
lock
or
cmpsl
mov
inc
jge
and
pop
xchg
xchg
sub
outsl
cld
and
jns
and
popa
std
insb
adc
cmp
jno
movsb
repz
mov
daa
xlat
or
push
aam
jo
repz
jns
jo
dec
leave
pusha
xlat
popl
sub
and
jecxz
sahf
dec
sbb
push
shlb
jns
or
push
push
js
xor
sbb
and
cs
in
jbe
push
cmp
xchg
push
xor
scas
sbb
jo
loopne
out
pop
mov
fistpl
inc
mov
or
push
pop
jno
xchg
repz
jo
mov
iret
sbbb
imul
cs
mov
mov
mov
lcall
rorb
jmp
sti
dec
jge
cmp
jo
mov
xchg
cmpsl
jo
fldenv
push
jo
mov
push
test
pop
clc
xchg
jp
inc
aam
jle
dec
xlat
ss
mov
push
outsl
push
mov
iret
call
lret
insb
lret
jmp
mov
je
pop
jno
jbe
jae
adc
shl
das
cmp
and
lock
xchg
scas
loopne
arpl
pop
rcrb
sbb
mov
xor
add
sbb
dec
push
cmp
test
jbe
dec
fmuls
fstl
test
pop
fisubl
outsl
push
jo
test
mov
and
xor
xchg
jo
jno
scas
leave
aam
xchg
cmp
es
jg
jecxz
jno
xchg
lds
or
data16
push
jae
push
xchg
sub
insb
mov
xlat
sbbl
test
das
outsl
push
lods
rep
mov
bound
cmp
lea
mov
repnz
call
ret
les
inc
shr
jno
ret
sub
loop
sbb
icebp
mov
xchg
lods
xor
sti
add
cwtl
pop
cmp
pop
dec
dec
inc
xchg
std
icebp
sbb
fisubs
mov
or
xchg
add
mov
xor
sti
inc
iret
mov
push
dec
aaa
push
movsb
pusha
lret
push
xor
stos
mov
inc
loop
inc
jecxz
cmp
mov
xchg
inc
outsb
add
js
std
fs
adc
lret
int
xchg
pop
mov
pop
mov
std
js
incl
push
jo
call
push
add
jb
jae
mov
sti
jb
aas
sahf
mov
jo
arpl
mov
push
gs
pushf
in
into
jo
sahf
arpl
mov
lock
jo
mov
push
dec
push
ljmp
testb
jo
stos
xchg
or
adc
into
push
mov
shlb
push
outsb
cmpsl
out
inc
ss
jecxz
das
fistpll
scas
sub
xchg
jo
mov
jge
jo
aad
repnz
mov
inc
xor
jo
hlt
pop
fnstsw
pushf
bound
addr16
pop
ja
pop
push
add
jo
xor
push
jo
adc
pop
jo
xor
or
dec
xor
xor
nop
outsl
xchg
or
cmpsb
add
lds
aas
loopne
out
xor
mov
aaa
imul
cltd
jo
jmp
movsb
add
dec
jb
gs
cmpsb
jne
sub
inc
nop
leave
out
push
insb
in
jge
mov
pop
sbb
lcall
mov
and
mov
insl
xor
jno
lcall
cld
jo
inc
xor
outsl
inc
popa
jo
push
test
push
xor
sbb
xchg
aad
ret
xchg
jo
gs
dec
das
mov
dec
nop
out
xor
outsl
mov
bound
jo
fcoml
stos
lahf
aaa
push
dec
icebp
out
inc
loop
sbb
aad
dec
lahf
outsb
notl
mov
stc
stc
mov
lock
arpl
std
jae
push
mov
aam
iret
les
repnz
add
xor
inc
xlat
mov
push
gs
add
sub
pop
mov
mov
test
jp
dec
xor
cs
in
xor
mov
out
cld
inc
cs
ret
int
mov
test
sub
jae
inc
es
push
dec
pusha
js
sti
mov
dec
jo
and
gs
aas
sbb
shll
inc
insb
xchg
sub
push
sbb
cmpsl
mov
jb
stos
or
in
inc
psubq
adc
outsb
push
jo
fwait
out
push
fcoms
dec
inc
and
jo
and
notb
rcrb
xor
mov
xor
in
push
lods
add
out
in
push
jo
sub
aas
sub
jo
mov
hlt
stc
punpckhwd
pop
adc
lcall
outsl
inc
jp
jnp
mov
xorb
aas
aam
inc
sub
test
pop
test
inc
jo
lcall
ss
xor
sti
cmp
jle
jo
js
jae
and
sbb
cwtl
jo
mov
stc
cmpsl
jo
lods
inc
inc
mov
mov
adc
xchg
push
xchg
shll
or
jle
or
shlb
test
jno
cmp
push
push
nop
push
clc
ljmp
shll
nop
jae
mov
test
js
or
imul
std
mov
ror
jo
imul
push
jae
ss
pop
mov
gs
cmc
sti
jns
lods
addl
mov
enter
shll
or
and
fs
in
cmpsb
pushl
test
jne
and
pop
pop
inc
jecxz
sub
je
jo
dec
sbb
push
js
push
xor
mov
sbb
or
pop
ficoms
pop
push
inc
jne
test
sbb
jbe
fnstcw
pop
fwait
int3
mov
inc
jo
dec
lea
rclb
stc
inc
xor
notl
and
jo
clc
arpl
cltd
inc
movsl
jo
test
ret
fistpll
popa
subb
jecxz
sub
dec
rorb
enter
add
insl
popa
jo
xor
call
jo
mov
sbb
and
nop
adc
or
pop
mov
jo
xor
jno
cltd
ret
pop
or
sbb
jo
sbb
imull
jb
sbbb
test
inc
jl
out
mov
xor
sub
pop
ret
jo
pop
sbb
into
add
push
in
pop
mov
jo
loope
jnp
jo
roll
repz
fistl
sub
ja
pop
fsubrl
xor
scas
shll
mov
aas
fs
push
mov
clc
arpl
loope
testb
fisttpl
mov
xchg
testl
sub
mov
test
inc
add
mov
ret
and
test
inc
jge
stos
insb
int
xor
or
or
jo
es
cmpsl
jle
ds
push
test
lods
je
ss
adc
shrl
push
jecxz
and
sbb
popf
mov
xorl
ss
ret
xchg
nop
pop
rep
sbb
cmp
mov
test
jo
cltd
xorl
mov
jo
jno
lods
test
cmp
jne
je
push
stc
dec
outsb
fldt
jo
mov
es
jne
in
test
insl
sbb
lahf
push
hlt
jnp
in
mov
inc
inc
je
sbb
mov
jo
jnp
les
fs
nop
ja
lds
mov
xor
or
inc
leave
scas
xchg
mov
nop
cwtl
ret
mov
inc
xchg
mov
jo
or
ds
aad
daa
mov
outsb
sub
cmp
jecxz
push
js
shrb
cmp
jo
clc
cmp
jo
pop
mov
divl
sub
insl
pop
cmp
loopne
dec
fiaddl
shld
lock
push
push
in
mov
push
mov
in
sbb
push
in
jo
aad
pop
sbb
sub
mov
jae
jno
jo
test
in
shll
jo
pop
or
jo
daa
mov
xor
cmp
loope
outsb
ret
clc
mov
jecxz
push
loop
dec
jo
lock
gs
push
cs
pmulhw
sub
jo
sbb
and
fimuls
mov
nop
into
jg
mov
inc
cmp
addl
test
xor
mov
sahf
jg
jo
push
xor
push
clc
popa
stos
inc
mov
es
xchg
mov
cmc
jo
inc
push
adc
enter
imul
or
into
sbb
imul
and
icebp
lret
push
push
aaa
push
lods
sbb
addr16
jmp
xor
fcompl
ret
cmpsl
fldcw
jmp
push
add
dec
sbb
ja
les
sub
jno
add
sub
cmp
push
lea
xchg
sub
cmpl
push
jmp
popa
cmc
testl
int3
sub
cmp
daa
repnz
xor
sub
lods
mov
sbb
or
cmp
andb
outsb
scas
mov
bound
mov
xchg
inc
stc
icebp
mov
das
fld
xor
test
je
and
pop
jg
adc
bnd
jne
mov
xchg
jo
pop
enter
or
mov
jnp
cmp
jo
cmc
int
jge
subb
stos
add
sti
mov
sub
inc
lods
cmp
inc
adc
push
in
mov
dec
push
cmp
jo
push
rcrb
mov
push
cs
jb
push
pop
shl
popf
pop
jo
or
jo
sbb
dec
sub
lods
flds
imul
inc
in
insb
andb
ret
jo
leave
hlt
or
gs
jo
sbb
cltd
sub
insl
sbb
dec
jo
cmc
cli
inc
mov
add
push
adc
push
cmp
mov
rcl
ret
es
xor
repz
jo
jae
fwait
sub
dec
cmc
pop
test
imull
mov
push
jns
lar
js
andb
mov
jo
fdivs
ret
btc
fbstp
mov
jl
outsl
mov
lret
notb
cmc
or
sbb
cmpsl
shll
fsubrs
cmp
repz
dec
mov
mov
jo
xchg
push
sub
jb
jo
fcmovnu
dec
cld
fwait
jo
dec
push
out
pusha
mov
jno
loope
pop
inc
nop
out
ja
cwtl
cli
xor
mov
xlat
sub
jl
stc
lret
add
or
jmp
push
sahf
dec
ret
or
cltd
xor
cmpsl
or
cmp
loope
mov
jmp
pop
xchg
cld
jbe
clc
repz
lods
stos
mov
push
ja
jnp
inc
mov
jo
and
inc
into
sbb
push
pop
lods
jb
xchg
add
add
xorb
repz
push
pop
ss
std
sub
mov
adc
mov
mov
out
cmpsb
inc
pop
pop
dec
push
nop
addr16
mov
or
sub
mov
jp
mov
dec
repz
mov
fucom
jo
popf
std
adc
sti
mov
into
test
movsb
xchg
sbb
addr16
ret
mov
dec
std
jb
in
inc
mov
in
clc
jnp
into
sub
test
stc
ja
or
jnp
notb
push
aaa
dec
jo
xor
ret
fsts
and
cmpsl
sbbb
pop
out
push
cmp
inc
sub
mov
cld
jl
xorl
mov
adc
xchg
icebp
and
test
aas
jno
stos
mov
lock
push
mov
outsl
hlt
addr16
jo
das
and
jb
sub
mov
sub
mov
jo
lock
and
shl
cmc
add
push
aad
push
and
test
jle
push
pop
xchg
js
pop
mov
leave
sbb
mov
bound
jo
adc
lock
pushf
shrl
outsb
sbb
jl
jo
in
es
xchg
pop
repz
xchg
inc
jb
jo
rol
shlb
adc
stos
pop
and
cmpsl
in
in
adc
mov
xchg
sbb
jo
xor
cltd
jae
mov
mov
xlat
cmpsl
dec
jo
into
cmp
insl
jns
cli
scas
mov
shlb
jne
push
test
cld
movsb
cmp
or
outsl
xchg
lcall
enter
push
mov
jnp
push
inc
push
cld
xor
dec
dec
wrmsr
sarb
push
arpl
add
inc
pop
adc
push
lahf
jbe
call
arpl
push
dec
and
js
idivl
cmp
shl
outsb
mov
cmpb
jp
mov
sub
inc
imul
jo
sub
cltd
and
shrl
mov
cmp
lods
xor
loope
jl
add
mov
subb
inc
stos
aaa
jne
mov
sub
inc
stc
dec
sub
js
push
scas
mov
jo
and
sub
jo
ret
test
push
add
jae
mov
jo
push
mov
js
icebp
jmp
cmp
lock
jo
sbb
lret
out
arpl
mov
adc
cmp
mov
cmp
jmp
dec
test
add
aaa
xor
sub
dec
or
jo
test
add
mov
nop
mov
and
movsb
jno
rorl
sysenter
dec
sub
push
xor
idiv
data16
stos
int3
sub
inc
push
movsl
stc
rol
adc
loope
mull
dec
inc
mov
xlat
push
push
aaa
addr16
stc
or
push
push
jo
in
test
fistl
imul
stc
mov
fwait
repnz
sti
mov
mov
cmc
lock
hlt
int
mov
std
mov
cmpsl
push
jbe
repz
sbb
jle
push
add
mov
ret
mov
inc
jl
push
jg
rol
cmp
nop
dec
dec
out
jecxz
insb
pusha
in
mov
aaa
icebp
clc
sub
cmp
cmpsl
lds
xor
popf
stc
push
les
jo
xchg
xor
cld
adc
pop
jb
popa
mov
cmp
jnp
dec
adc
rolb
jo
outsw
inc
lock
out
add
dec
sbb
jo
mov
test
jo
pop
ret
jbe
mov
jmp
xchg
aam
es
test
jo
arpl
xor
jo
pop
cmp
lods
sti
clc
jo
cmp
sbb
aaa
repz
pushl
sbbb
add
xor
dec
not
sub
mov
jo
mov
sbb
aaa
div
andl
jmp
jo
dec
jne
les
or
jle
int3
in
aad
roll
inc
gs
sarb
cmp
repz
push
mov
and
ss
cmp
insb
repz
jmp
stc
filds
stos
movsb
mov
pop
jno
jo
dec
jno
xor
push
stc
mov
jo,pn
jmp
adc
jo
cwtl
sub
popa
lret
jmp
cmpsl
jl
inc
fsubrs
and
mov
sbb
jns
jo
xor
or
xor
mov
and
pop
pop
inc
push
ds
stc
or
aad
push
fs
jo
scas
pop
filds
fincstp
jo
rcrl
mov
movaps
into
jle
leave
scas
jae
dec
mov
pop
imul
addr16
insl
adc
jge
fnstenv
fstpt
sti
mov
dec
push
push
push
lock
stos
scas
notl
jo
arpl
sub
popf
scas
push
jo
pop
mov
push
or
clc
loope
xor
ss
mov
sysenter
or
flds
cmpl
divl
test
outsb
popa
gs
jo
jae
inc
sbb
mov
mov
pop
sub
jno
inc
cld
cmp
lds
mov
stc
gs
ljmp
aad
ret
pop
jo
xor
out
js
push
jo
push
lods
sarb
test
js
inc
cmovge
mov
fs
nop
xor
push
sbb
sbb
lods
sub
mov
ret
xlat
sbb
flds
jo
sub
pop
cltd
xchg
mov
stc
lret
xor
sbb
jns
insb
rorl
ret
xor
pop
stc
and
xor
cmp
orl
lods
adc
testl
inc
mov
pop
icebp
sub
cmp
outsl
mov
mov
mov
sbb
xor
loope
push
dec
mov
jae
testb
cmp
gs
jle
sarl
sub
mov
std
jno
mov
jns
jo
popa
push
xor
push
pop
or
add
sbb
je
inc
cmc
push
outsl
jnp
pop
popf
loop
jne
and
or
mov
das
push
jmp
addb
packsswb
sub
add
mov
dec
mov
mov
xchg
daa
cmc
adcb
aaa
popa
jle
jp
jo
jge
push
in
insl
ret
mov
js
gs
popf
out
adc
je
jl
fadds
pop
jo
dec
mov
iret
jo
pop
imul
jo
jns
push
push
cltd
sbb
scas
ja
xor
jl
adc
mov
jo
mov
jmp
fidivs
ja
jno
stc
mov
iret
push
inc
xor
sbb
xchg
andb
jo
mov
cmc
in
ljmp
nop
dec
clc
push
jo
in
inc
cmc
pop
cmp
mov
imul
ljmp
ret
inc
clc
pushf
lret
in
enter
sbb
div
fwait
jo
jbe
popa
jo
stc
incb
jmp
ds
repz
and
jo
mov
mov
jae
lret
jle
test
daa
adc
sar
push
clc
leave
inc
jnp
jle
ljmp
fs
xor
cmpsb
in
xor
pop
mov
ds
jo
push
imul
xor
pop
or
mov
jo
jne
stos
cmp
jnp
fstps
sub
xor
out
decb
mov
out
je
fsubrs
jecxz
adc
xchg
aad
jo
call
aaa
jge
inc
cli
inc
jo
sub
sub
jo
mov
push
inc
nop
dec
sbb
mov
in
inc
mov
in
imul
xorb
movsl
jo
enter
xchg
imul
dec
jo
xor
jns
or
fstpt
rep
and
jo
in
pop
push
hlt
push
cmpsl
fucomp
icebp
push
xor
pop
popa
subb
mov
es
xor
mov
push
fs
inc
push
out
insb
push
mov
stc
sub
adc
repnz
repz
push
cmp
push
cld
shl
xor
repnz
fistl
or
cmp
je
lods
imul
jl
cmp
jo
sahf
mov
lock
inc
repz
vpsrad
jmp
dec
stc
call
shlb
jb
jo
xchg
pop
out
fldt
ffree
pop
addr16
cmpb
movsb
pusha
pop
adc
cmp
xchg
adc
sub
adc
or
test
push
jo
fdivp
xor
je
in
xor
or
stc
adcb
int
icebp
movsl
jo
ja
or
jmp
jecxz
nop
jge
jo
mov
sahf
fistpll
addr16
mov
addl
or
negl
mov
jo
stos
cwtl
cli
sub
mov
jo
cld
push
pop
jne
mov
cmp
arpl
test
jo
push
jbe
rorl
jo
push
push
cwtl
pop
pop
repz
int
adc
cmp
jo
pushf
xor
cmpb
nop
jecxz
pop
or
adc
daa
or
sub
lcall
fdivs
adc
sbb
sub
sbb
jge
jo
cli
dec
insb
dec
xor
rolb
mov
push
out
jnp
lock
clc
je
loopne
mov
jmp
push
xchg
test
ljmp
popf
pop
push
cmp
icebp
fnsave
in
loop
adc
and
dec
push
pop
lcall
insb
xor
enter
or
lcall
jl
sarb
ds
in
pop
push
or
into
and
rcrl
stos
int3
jmp
cmp
sub
inc
popf
xorb
lods
sub
jb
sub
aas
divl
loope
aam
sbb
cmc
stc
pop
push
sub
insb
imul
push
push
movsb
sub
jo
push
out
imul
std
pushf
jo
repz
movsb
push
xor
mov
pop
clc
mov
fnstcw
adc
dec
push
mov
icebp
or
in
movsb
fstpt
jae
jo
or
cli
jo
insb
sarl
data16
inc
jo
and
jno
lea
inc
nop
lods
es
sti
xchg
dec
and
leave
mov
mov
jns
cwtl
into
mov
cmp
shll
insl
jo
jl
xchg
scas
pop
sbb
or
repz
orb
loop
cltd
jo
cmp
mov
jo
push
bound
inc
xchg
jmp
jge
mov
mov
in
push
sbb
jb
lahf
clc
adc
ret
mov
push
sbbl
push
mov
insb
xor
mov
inc
jo
test
dec
ja
mov
stos
nop
pop
pop
mov
cmpsb
jne
jns
jo
lret
dec
iret
or
fs
jo
dec
je
leave
dec
adc
push
stc
outsl
sbb
adcb
adc
jo
jnp
and
into
jg
jo
cld
mov
inc
sub
xchg
icebp
xchg
fsubrs
fiaddl
addr16
shrl
mov
push
lea
in
pop
sub
js
test
sub
nop
ret
leave
dec
sbb
jnp
adc
fs
gs
lcall
mov
cwtl
fs
sbb
stc
lret
daa
sub
movsl
mov
and
subb
dec
fcmovnbe
cld
js
lcall
jno
adc
imul
lods
int3
or
jae
jo
sub
lret
sub
stc
mov
push
into
aaa
leave
fdivr
cmp
ss
sbb
leave
or
daa
rcrl
mov
mov
jecxz
sbb
push
cmp
dec
sti
outsb
call
mov
out
push
jae
ss
inc
adcb
inc
sbb
jp
push
jb
lods
mov
fpatan
fisubl
repnz
push
sbb
stc
pop
pusha
ss
and
mov
out
pop
dec
cs
push
pop
sub
imul
sub
mov
push
pop
inc
imul
pop
mov
jo
fldl
rolb
sub
subb
push
jo
dec
int3
cmp
mov
jo
xlat
sti
cmp
idiv
nop
hlt
stc
sbb
sub
xchg
jnp
js
cmp
sbb
xchg
push
xor
sub
loope
jo
lahf
pop
dec
add
adc
xor
dec
pop
call
leave
jp
cmpb
mov
cli
dec
add
lret
rorb
stos
jo
mov
sarb
sbb
insl
jle
popf
stc
rcll
sbb
mov
clc
movsl
mov
sti
out
out
js
rcrl
ss
push
push
mov
mov
pusha
mov
pop
daa
adc
jo
jg
fldt
jl
rcrb
push
shll
fs
ret
mov
mov
sbb
jo
mov
xchg
aas
dec
das
add
pcmpgtd
mov
addr16
in
xchg
cmp
dec
test
mov
mov
ja
jge
repz
push
loop
sbb
inc
daa
inc
into
inc
rcll
pop
int3
cmp
cmp
subl
aaa
jo
fdivs
nop
add
jge
jecxz
mov
divl
ss
mov
lea
add
js
cld
sub
inc
loope
xchg
cmp
xchg
ss
xlat
push
gs
mov
cmp
cmc
push
jo
jl
js
shll
jb
pop
cmc
mov
int
imul
jo
sti
mov
repz
cwtl
mov
pop
in
mov
cld
jo
in
or
inc
jns
jo
repz
xchg
inc
push
jo
sahf
add
push
xor
lods
mov
in
add
jle
fidivl
inc
int3
pushf
mov
shlb
sbb
xorb
mov
jo
fldt
or
jmp
std
stos
cmp
dec
lods
push
add
sbb
mov
inc
clc
scas
add
std
popf
jo
jp
jle
mov
mov
ss
sub
jl
inc
cmp
cwtl
icebp
and
mov
cmp
inc
fildll
icebp
mov
jmp
popa
iret
jo
fcomi
test
mov
sub
xchg
sti
in
fsubrs
mov
adc
fmull
repz
mov
push
push
in
dec
jmp
jp
mov
jo
scas
pop
pop
dec
mov
jo
aaa
jno
jle
mov
nop
inc
clc
and
ja
subb
jo
cmp
or
ljmp
pop
clc
inc
mov
mov
adc
leave
rcll
jo
xchg
xor
stc
and
and
shrl
addps
jecxz
divb
push
test
popa
jle
jo
push
jmp
pop
js
xchg
les
inc
mov
xor
int
aam
ss
sub
movsb
dec
dec
or
jno
push
pop
ljmp
cs
pop
mov
push
sub
pop
nop
jo
ja
jl
mov
pop
data16
sahf
jl
lods
out
dec
push
test
pop
js
sysexit
fs
pop
mov
aad
dec
shll
and
xlat
sub
mov
xorb
push
sub
sbb
cmp
lret
jo
lea
addr16
test
cmp
fdivrl
insb
and
mov
cmp
dec
jo
aaa
addr16
xor
jo
in
xchg
jmp
jp
jo
mov
daa
loope
es
inc
std
push
xor
aaa
jo
jb
xor
lret
enter
pop
jno
scas
fs
pop
lret
cmc
sub
ds
fnstenv
jge
and
in
out
outsb
jo
pop
adc
lock
sarb
into
popl
lret
je
add
jo
jge
and
aaa
in
cmc
lds
sbb
std
mov
adc
repz
int3
repnz
jo
je
lods
scas
aam
push
jo
pop
int
xchg
jle
dec
nop
leave
out
cmpsl
sti
mov
fisubs
sub
lcall
dec
jg
icebp
clc
dec
pop
int3
jecxz
jo
mov
or
addr16
mov
nop
sarl
inc
and
cmp
stc
negl
fidivrl
lods
xor
insl
inc
sub
jge
enter
jg
sub
jo
std
lods
mov
mov
fsubr
sub
subl
gs
or
fstpl
jo
mov
pop
outsb
rolb
push
inc
dec
push
stos
nop
jo
add
dec
cmp
xchg
lods
push
repz
adc
cmpsl
nop
leave
in
push
push
jno
mov
loop
gs
lea
fstpl
repz
jo
leave
mov
lock
and
jne
sub
stc
sbb
pusha
push
sub
mov
in
mov
inc
jmp
jo
stos
ja
aaa
push
jo
js
shl
inc
mov
sbb
ret
bound
pushf
stc
and
pop
mov
jns
mov
inc
mov
dec
push
pushf
popf
fwait
push
int
fsts
sbb
imul
xor
cld
sbb
jno
fidivl
sub
aas
sub
adc
jo
push
aam
inc
sbb
mov
or
jo
pushf
adc
call
adcb
pop
inc
and
inc
pop
dec
lock
pop
xchg
jb
jo
xor
cs
jo
push
or
iret
xchg
and
sbb
sarl
jmp
roll
and
shll
jnp
pop
in
out
mov
jno
jo
jp
mov
sbb
ds
shrb
stc
std
inc
int
sub
int
lods
pop
js
xchg
jne
test
cs
and
cmp
mov
inc
aaa
je
notb
movsb
dec
dec
add
sbb
pop
jo
hlt
jae
push
pop
jge
or
jo
sbb
push
jle
jno
jo
int3
loope
ret
push
mov
inc
cwtl
mov
gs
jge
sqrtps
dec
icebp
cmpsl
jl
lret
pop
sbb
fnstsw
pop
addr16
add
or
jo
dec
mov
orb
cmpsl
sbb
cwtl
mov
fcomi
pushf
lods
inc
jecxz
inc
sub
push
jmp
pop
jnp
add
pop
sarb
ljmp
test
nop
mov
aaa
out
gs
movsb
mov
pop
cmc
and
jo
ss
fisttps
inc
insb
jo
jg
decl
pop
jp
jo
lods
mov
sub
mov
in
pop
inc
fstpt
jne
cltd
add
sbb
nop
push
ret
push
scas
adc
push
sbbb
pop
mov
jo
fistps
push
jae
inc
jo
lret
cmp
jmp
jns
sbb
xchg
rcll
cwtl
jle
and
inc
stos
push
jo
out
dec
or
adc
int
ljmp
dec
cmp
into
ret
inc
jb
or
pop
fisubrl
fcmovnb
push
call
sahf
fwait
add
cmp
gs
decb
aaa
shll
enter
inc
leave
jo
cld
into
and
dec
lock
cmp
outsl
push
xor
dec
or
xchg
jb
jo
lret
sub
xchg
dec
jo
hlt
xchg
jne
bound
adc
jo
pop
repz
pop
dec
lds
cld
jo
push
push
out
mov
iret
ja
cmpb
add
outsb
je
ljmp
xchg
cmc
pushl
push
bound
fldcw
repz
mov
push
test
aas
dec
mov
into
jo
xor
fmul
inc
adcb
loope
fwait
hlt
xchg
insb
mov
fnsave
mov
test
jo
cld
fldcw
jo
cmp
jo,pn
xor
pop
push
pop
lret
adcb
push
icebp
xor
rcrb
jo
cs
cmp
jo
xchg
movsl
cmp
inc
insb
es
dec
mov
insl
gs
push
idivl
mov
int
incl
xchg
mov
and
xor
xchg
pop
mov
sub
icebp
divb
mov
or
jo
popa
jle
aam
mov
jo
mov
int3
push
loop
loope
scas
pop
stos
inc
pushf
xlat
pop
pause
push
cmp
fs
jg
cli
xchg
jo
jecxz
pop
in
cmp
mov
jo
xor
sti
or
jo
out
call
lret
jge
in
inc
inc
adc
aam
lds
inc
jne
mov
inc
stc
sbb
mov
rclb
sbbb
jl
fisubl
inc
fistpll
ja
int3
jo
jp
rcrl
xchg
addr16
inc
jo
pushf
jnp
lods
stos
ljmp
std
js
nop
fwait
jo
aaa
idiv
pop
test
and
jo
sbb
imul
lret
in
stos
xchg
btc
inc
cmp
jo
pop
xchg
dec
xor
into
inc
mov
push
roll
lods
lahf
sbb
lea
cmp
sbb
nop
std
mov
mov
insl
jge
nop
sbb
inc
cmp
adc
jno
dec
and
xchg
nop
pop
mov
jae
stc
or
shll
cmpsl
pusha
in
aam
divl
pop
or
sub
es
sbb
pop
movsl
popa
jmp
cli
mov
insl
xor
and
mov
in
jo
outsb
sarl
push
mov
sub
insb
cltd
jns
or
mov
cmpb
xor
sbb
sbb
or
xor
sub
es
int3
cmc
pusha
shll
pop
sub
lods
or
xorb
addr16
lea
mov
push
imul
and
js
push
xor
fcomps
adc
mov
and
outsl
cmp
shll
testl
int
xor
mov
das
inc
inc
pop
mov
mov
fwait
xor
sbb
pop
adc
outsb
adc
jae
xor
and
sub
test
test
or
fdiv
jo
sbb
push
inc
adc
lds
cmp
jmp
pusha
mov
dec
or
daa
add
arpl
je
outsl
pop
pop
int
mov
jo
mov
jmp
xorb
loope
js
jns
jle
add
clc
repz
mov
out
mov
ror
xlat
jo
push
ret
jp
add
jo
push
xchg
jae
lret
push
aas
jo
dec
inc
xchg
outsl
push
test
lds
je
btr
cmp
stc
mov
add
ds
jmp
ja
pop
inc
push
adc
das
adc
and
stos
pop
xchg
js
js
stc
jp
jo
inc
cld
dec
je
dec
fbstp
push
sarl
xlat
dec
adc
ljmp
sarb
sarl
aas
jg
mov
sbb
loope
pop
mov
imul
repz
push
mov
and
and
push
adc
pop
clc
xchg
pop
in
loop
sub
cmp
pop
or
int
inc
or
adc
jae
xchg
jns
ss
adc
inc
popf
in
jne
dec
jo
pushf
movsb
bnd
imull
sub
imul
int
xchg
inc
js
aaa
sub
loope
cmpsb
imul
dec
in
shll
mov
mov
stos
fs
jo
mov
ljmp
inc
add
arpl
adc
jo
jge
scas
cs
or
push
dec
dec
or
fldcw
push
shlb
into
sahf
addr16
inc
push
push
movsl
mov
mov
popa
rcrb
icebp
shlb
movsl
cmp
sbb
mov
or
fistps
push
imul
leave
dec
lods
and
rclb
je
aaa
sub
cmc
negl
cmp
push
addr16
push
les
loop
hlt
inc
mov
push
icebp
js
push
adc
mov
jle,pn
test
or
psllw
lock
jno
push
dec
sub
pusha
sub
jne
adc
push
ja
xor
shrb
sbb
pop
pop
jo
jge
shrb
push
enter
pop
xchg
hlt
arpl
inc
jo
test
and
inc
sahf
adc
mov
lock
dec
insl
xor
mov
in
sub
sub
add
std
fwait
and
imul
es
das
ss
mov
cmp
cwtl
jno
sbb
jl
jecxz
jo
push
stos
daa
inc
dec
jo
push
rolb
cli
push
testl
js
jmp
push
lods
shlb
cwtl
adc
mov
in
pop
jo
sub
shl
cwtl
pop
mov
lret
inc
add
mov
js
mov
ret
jo
mov
push
sub
cmc
jo
rorl
icebp
pop
cltd
clc
fwait
jo
insl
into
cmp
jp
push
pop
dec
movsb
int3
repz
cmp
jnp,pn
sub
or
shl
jbe
dec
jo
jns
jb
cmpsl
inc
xorl
es
jo
push
stc
ja
movsb
jecxz
push
mov
dec
jp
xchg
neg
jo
sbb
and
into
sub
sbb
mov
scas
sub
fldenv
fnstsw
es
loope
sti
shll
rcrl
xor
xor
bound
sti
mov
pop
shrb
movsb
mov
jo
push
jb
fdivl
add
sub
mov
nop
xor
jo
jns
xor
lods
imul
ret
mov
mov
push
je
repz
sahf
test
jg
or
cmpsl
aaa
xorb
jnp
popa
add
loop
loope
ja
outsl
push
jg
ljmp
mov
dec
rclb
loope
test
inc
or
push
fsub
sub
mov
divb
cwtl
cmp
ds
in
lods
push
and
ret
inc
adc
shll
std
and
jo
rorb
dec
in
jo
dec
adc
fucomip
jo
push
test
xor
lock
mov
pusha
push
icebp
shlb
rcrl
aaa
popa
jo
sbb
xchg
stc
scas
jecxz
int
or
push
xor
jle
jae
shlb
jnp
ret
xlat
rorl
out
idivl
sbb
jae
jno
hlt
into
stc
cmpb
mov
ljmp
and
frstor
cmp
jae
push
movsb
mov
jo
jecxz
add
lock
stc
les
mov
sbb
push
add
fcompl
fnstenv
inc
les
jge
icebp
frstor
pop
cli
cmc
je
push
pop
jo
jecxz
in
andb
or
pop
xor
jp
mov
jo
inc
jge
and
shr
cmp
mov
dec
jo
outsb
movsl
or
int3
mov
out
sub
je
jo
divl
mov
test
je
or
aaa
mov
icebp
cmp
cmc
xchg
jae
jo
std
stos
dec
push
out
or
shlb
mov
imulb
xor
cmc
repnz
je
scas
mov
inc
ja
pusha
jge
mov
lcall
xlat
sbb
out
push
jo
inc
inc
cmp
pop
ds
push
inc
mov
xchg
daa
cmpsb
outsb
ss
add
mov
dec
sti
scas
adc
adc
in
lods
js
insl
popa
push
push
inc
nop
int3
loope
sti
push
mov
aam
jo
outsl
sub
cmc
xchg
rorl
daa
gs
mov
cmp
dec
jo
daa
pop
jno
jae
js
inc
outsb
dec
mov
jns
dec
cld
xchg
ljmp
mov
mov
jge
repz
fsubrs
or
mov
ja
jo
call
inc
adc
cmpsl
jo
dec
not
js
cltd
loope
or
add
leave
out
imul
leave
mov
jo
das
push
pop
pop
xlat
jle
jo
fsubr
ret
xor
jo
popa
ficompl
mov
jo
mov
pop
ret
cmp
mov
xchg
out
lods
fcoml
pushf
sub
adc
inc
sub
jl
cs
vmread
js
mov
jae
lods
push
xchg
mov
sti
divl
insb
mov
jmp
fdivl
das
minps
movsl
jae
unpckhps
mov
jb
mov
jo
stc
cli
outsb
mov
pop
push
clc
shl
pop
out
jne
cmp
mov
mov
lahf
scas
pusha
xor
cld
pop
xchg
push
mov
divl
jo
add
sub
je
cwtl
jo
pop
lods
jne
mov
jo
xchg
in
xchg
or
mov
out
xadd
jge
jo
mov
popa
mov
xor
shrb
int3
push
sub
outsb
push
repnz
jo
orl
or
cmp
icebp
jno
inc
add
js
lret
stc
sbb
inc
or
sbb
mov
sti
push
mov
jo
test
xor
nop
jo
bound
out
rorl
inc
push
loopne
loope
addb
nop
hlt
push
adc
insb
sub
out
jo
and
out
andl
cmpsb
mov
mov
dec
outsl
je
into
mov
or
add
jo
or
pop
out
push
mov
xlat
jo
clc
repnz
xchg
jo
cli
inc
test
jo
adc
or
loop
lcall
push
inc
xchg
addr16
repz
or
cltd
inc
lock
jo
sbb
js
adc
or
js
rcll
ret
shrb
loopne
jo
or
cmp
sub
adc
add
repnz
jo
pop
pop
add
sub
divl
adc
fisubl
mov
push
neg
ja
xor
shll
inc
in
rcrl
pushf
push
push
jno
jo,pn
or
shrl
xor
je
rclb
cmp
fbstp
inc
repz
and
pop
sbb
nop
push
divb
scas
dec
add
jo
movsb
rolb
cmp
mov
test
pop
out
fs
sbb
mov
sar
loope
aam
jmp
es
inc
add
mov
scas
in
mov
mov
inc
daa
xor
sbb
jo
pop
leave
and
neg
jnp
js
mov
jp
sbb
daa
stc
push
mov
outsb
cmc
jno
dec
fs
movsl
jb
cmp
or
pop
jecxz
repnz
hlt
leave
in
enter
mov
jo
aaa
sub
mov
cwtl
into
insb
add
arpl
jo
in
adc
pushf
dec
imul
push
jnp
les
sbb
or
inc
in
or
aad
inc
sub
dec
sti
fwait
push
sub
xchg
popa
out
lods
fdivl
push
negl
jo
jl
dec
xchg
push
jo
jns
repnz
leave
imul
ja
cmp
std
in
cmc
jns
insl
aaa
adc
mov
push
xlat
or
cmp
jo
fsts
xchg
shll
into
cli
push
jmp
test
push
inc
push
jge
jne
imull
adc
adc
jo
jmp
cmpsb
pop
in
push
orb
pop
js
outsb
push
hlt
lods
sub
jl
jl
or
jo
jge
mov
dec
subb
ret
ja
xor
mov
imull
lods
lods
daa
rol
jne
scas
inc
js
testb
xor
stc
mov
pop
in
jge
shrb
icebp
mov
popa
mov
lret
jo
mov
dec
shlb
popa
pop
pop
jae
test
jmp
cmp
fs
push
imul
jb
sub
xorl
and
push
pop
leave
sub
std
or
xlat
rep
xor
and
cmp
lock
mov
mov
jo
cs
sti
popa
mull
push
and
or
repz
ljmp
push
fs
mov
js
std
jo
out
add
pop
ss
stc
mov
aaa
jnp
scas
imul
cmpsb
call
mov
and
push
jle
or
and
jae
jl
mov
leave
xor
rclb
jbe
testl
push
cwtl
lods
sbb
into
jge
or
sarb
pusha
jo
mov
mov
je
add
cmp
xor
subb
aaa
ret
add
mov
fs
andb
sarl
loop
cmp
and
jbe
or
push
or
jmp
les
jge
push
pop
leave
add
push
mov
int
mov
cmp
or
stos
jo
int3
or
mov
jo
fidivrs
lods
mov
jo
mov
sbb
mov
es
js
sub
jge
js
addr16
jmp
test
and
sarl
xchg
mov
push
and
push
scas
lret
hlt
or
test
xchg
inc
push
jo
loope
dec
sub
aad
dec
jle
das
pusha
jo
and
imul
adc
mov
js
xchg
pop
bnd
push
out
inc
cmp
jo
imul
andl
aas
aaa
jne
jo
testl
jno
sbb
pop
cltd
fldcw
insb
repz
mov
lahf
in
popa
es
mov
loop
jo
pop
leave
pushf
mov
insb
inc
or
sbb
push
dec
test
popa
test
loope
adc
in
and
push
inc
hlt
mov
push
aaa
shlb
insb
push
cwtl
in
lret
jb
pop
pushf
and
dec
inc
xchg
push
int
cmp
out
mov
nop
jns
xchg
mov
hlt
xor
lcall
in
int3
int
jo
inc
dec
rcrl
repnz
gs
mov
dec
adc
or
jno
inc
mov
jle
lods
xchg
cs
and
cmpsl
mov
jo
lret
dec
fldt
mov
rorl
or
nop
jae
push
inc
sahf
je
pop
lahf
ret
shll
out
int3
les
pop
psraw
inc
bswap
xchg
push
cmp
fadds
xchg
lods
sahf
pop
push
rcll
js
aas
orb
jo
repz
vpshufhw
mov
insb
xchg
cmp
jo
ret
addr16
jl
dec
xchg
jo
outsb
jne
add
cmp
pusha
ljmp
out
lcall
mov
push
and
ret
shll
ficompl
jo
jae
sbb
scas
and
push
jle
out
xor
cmpsl
icebp
addb
cmpsb
frstor
mov
sub
je
icebp
xor
sbb
out
jb
imul
push
lea
xor
mov
push
jp
adc
jge
ljmp
cli
arpl
jo
push
xchg
rclb
pop
mov
rorl
push
jge
jo
jecxz
pop
scas
pop
sbb
bound
mov
fdivrl
rorl
ds
cltd
mov
fstpt
push
jo
insl
xchg
inc
jecxz
cld
popf
in
ret
cmp
xor
addb
insb
aaa
scas
ja
push
leave
cmp
cmp
repnz
mov
or
jo
fsubp
or
mov
pop
adc
mov
test
push
xor
in
push
xor
nop
rcrb
or
fiaddl
jecxz
lock
js
cmc
xorb
imulb
nop
xor
loope
mov
cmp
shrl
push
sub
or
aad
popa
movsl
or
or
mov
mov
jmp
lods
arpl
or
cs
nop
adc
sbb
mov
jo
shlb
je
out
jecxz
push
xor
push
test
and
test
jmp
fstpt
subb
cli
clc
das
inc
addr16
icebp
stos
jo
xor
mov
imul
popf
addr16
mov
push
or
push
hlt
loop
int
xor
mov
inc
push
pop
adc
nop
cmp
mov
push
jmp
pop
mov
push
inc
ss
sub
pusha
mov
subb
sub
pop
std
aas
js
call
in
in
mov
sbb
nop
mov
cmc
mov
push
push
ja
adc
js
dec
mov
cmpsb
mov
jo
jge
lret
das
mov
enter
adc
and
sub
sbb
outsl
sbb
nop
inc
imulb
aad
imul
pusha
lss
mov
in
insl
mov
xchg
inc
inc
jbe
cli
scas
mul
mov
or
ret
sar
ss
jns
mov
cli
and
loope
fs
lods
jo
xchg
mov
cmp
dec
sarl
rcrb
xchg
xor
insl
call
dec
xor
imul
and
ja
mov
jo
mov
fdivs
push
call
insl
nop
mov
lods
or
jle
cmp
int
jno
in
jo
lahf
les
leave
dec
in
cmpb
inc
clc
jl
cltd
jl
pop
sahf
jp
orb
mov
ljmp
fucomip
mov
push
mov
subb
xor
ds
and
ja
je
push
add
or
icebp
inc
xchg
shrl
test
sub
xchg
aad
mov
jge
loope
icebp
repz
push
sub
cmc
mov
dec
leave
jo
cli
push
es
pop
outsb
jo
xchg
ret
jle
out
scas
dec
mov
dec
test
and
insl
scas
xchg
stc
sahf
dec
adc
popa
mov
dec
jo
xor
sub
sbb
into
lods
mov
jl
and
push
out
aas
jo
ret
mov
ss
das
jbe
sbb
xor
jo
sbb
sbb
cmp
es
mov
jbe
push
outsl
xchg
shll
icebp
jo
cltd
lahf
fldz
movsb
jne
jo
adc
jmp
jo
pop
dec
inc
push
rolb
ret
lock
outsl
ret
cmp
mov
jo
mov
jo
in
insb
push
jo
outsl
test
pop
jo
icebp
add
pop
out
jo
inc
not
adc
into
push
mov
xlat
repz
pop
outsl
and
xor
cmp
sahf
repz
adc
call
dec
outsb
out
mov
loop
fsub
dec
sub
ucomiss
insb
es
jle
xor
mov
hlt
packsswb
sub
jg
lods
repnz
jo
scas
push
shll
sbb
shrl
jo
adc
dec
pop
insl
jno
jo
and
inc
jl
pop
jge
push
int3
div
js
cmp
addb
imul
cmp
cmp
pshufw
imul
cwtl
jbe
pop
pusha
cmp
fadds
dec
push
mov
repnz
dec
imul
outsb
cmovno
fwait
add
loope
test
mov
jb
jge
fwait
cld
rcrl
mov
loope
fsts
popa
mov
pop
push
add
pop
cmp
jge
int
out
cld
jo
cltd
out
imul
pop
jo
lahf
int
xor
adc
popa
cmp
pextrw
pop
dec
xchg
loopne
aas
or
ss
jbe
jg
pop
jo
dec
sbbl
arpl
jle
sarl
push
sub
imul
gs
js
ljmp
jecxz
nop
ss
sbb
jo
loop
test
add
jle
xchg
fldl
sbb
jno
mov
jmp
jo
xor
pop
mov
push
in
or
xchg
jl
les
push
sbb
lods
fs
xor
arpl
scas
xlat
jle
ret
insl
xor
jo
add
xchg
inc
xor
and
aas
xchg
add
mov
inc
rcrl
repz
jmp
jo
add
call
jo
adc
idivl
or
and
dec
lods
jbe
repz
inc
pop
mov
xor
jle
std
mov
mov
roll
aaa
jo
ljmp
jo
es
jecxz
fs
add
inc
jno
dec
jo
mov
sbb
mov
jo
cmp
js
inc
xchg
jo
loopne
push
mov
and
dec
and
mov
jmp
or
mull
mov
andb
nop
dec
push
inc
xor
les
jo
xor
xor
pop
dec
out
push
movsb
je
mov
cwtl
je
cs
sub
je
scas
sbb
movsb
and
mov
dec
daa
je
fsubrl
mov
xorb
jo
scas
fbld
jo
in
sahf
or
mov
test
push
mov
iret
cmpsb
jp
cmp
push
int
mov
inc
dec
imul
pop
jge
js
loope
imul
test
adc
sbb
jg
out
jo
in
aaa
dec
cmc
push
push
cmp
jl
mov
push
jmp
xchg
sbb
jo
lret
xor
loop
dec
lods
or
inc
adc
test
leave
test
push
in
js
mov
fwait
push
push
psllq
dec
cwtl
in
push
jo
pop
inc
dec
dec
pop
leave
gs
dec
cmpsl
fsubrl
fnclex
jle
push
mov
sub
gs
jno
hlt
lea
dec
push
int
mov
adc
and
mov
jo,pn
jno
inc
call
ret
sarb
addr16
xlat
and
popa
or
mov
fnsave
and
mulb
sbb
js
dec
push
jo
in
mov
sub
jmp
ss
pop
stc
movsb
jo
pop
das
cmp
stos
jo
ljmp
inc
mov
jo
fisubrl
cmp
int
xchg
adc
imul
push
push
adc
es
aam
xorl
xchg
mov
inc
fidivl
mov
lds
adc
mov
jbe
jnp
and
aas
outsb
xchg
insb
rol
int
clc
xor
pop
cs
stc
sbb
jl
in
out
pushf
push
mov
ss
dec
jnp
adc
jge
sub
mov
test
cmp
sarb
inc
sub
fwait
sub
into
inc
cs
push
daa
icebp
lods
mov
mov
sbb
jo
inc
es
mov
aaa
int
xor
call
cmp
out
jo
clc
and
es
dec
jg
mov
test
fs
imulb
sub
dec
insb
push
sbb
adc
mov
push
cltd
jbe
pop
loope
jo
mov
push
push
push
sti
adc
cmp
dec
arpl
jbe
jo
aaa
insb
cltd
adc
dec
jo
mov
mov
cmpsl
fadds
icebp
jo
dec
cld
fldcw
leave
mov
out
repnz
inc
jnp
cmp
stc
sub
sub
jb
dec
jo
dec
mov
lcall
in
and
jo
cmc
lock
jo
push
aaa
bnd
mov
stc
push
cs
cltd
ffreep
push
pop
pop
pop
outsl
data16
push
aaa
adc
add
hlt
sar
push
fabs
lods
pop
in
adc
push
jg
fisttpll
sub
nop
push
cld
outsb
jmp
push
cmp
jo
daa
sub
push
aas
xor
mov
sbb
push
mov
addr16
sti
xor
cmp
stc
shrb
loope
mov
je
jo
ja
xor
and
daa
push
clc
cmp
ret
adc
mov
pushf
loope
jle
fwait
inc
push
into
imull
dec
sbb
jno
push
stos
jo
mov
out
jo
adc
xor
xor
dec
jo
lea
jmp
xor
jle
std
mov
xor
sbb
jo
sub
rcr
out
jo
je
add
mov
or
jo
das
xchg
out
shrb
shll
lret
sub
dec
lock
pop
jns
test
jno
or
jo
insl
inc
std
ljmp
xchg
adc
mov
jo
push
cli
push
insl
jl,pn
repz
je
test
in
and
jg
pusha
mov
push
mov
js
mov
pop
cmp
xor
mov
sbb
inc
cmc
push
inc
jo
cmp
pushf
dec
mov
push
sbb
jl
rcrl
push
addr16
loope
mov
xchg
mov
decl
mov
xchg
pop
add
insb
pop
xchg
jne
shrl
cmp
cmpb
imul
mov
in
out
lods
jo
stos
mov
xor
inc
inc
jl
pop
inc
mov
out
cli
cmp
in
push
lea
ljmp
pop
push
jae
jo
mov
cmp
nop
ljmp
push
nop
inc
xor
jae
jo
aad
loope
dec
sbb
xchg
jno
lret
imul
aam
lahf
jns
out
cltd
cmp
outsb
jo
push
ret
mov
sub
ret
js
int3
push
jno
jo
pusha
pushf
add
jo
and
push
pop
or
dec
jo
cltd
xchg
jge
inc
sub
test
mov
sub
pop
or
mov
aam
and
jge
push
push
dec
int
test
repz
jo
and
mov
lahf
dec
ret
jo
pop
imul
jecxz
push
rorl
mov
rorb
out
pushf
mov
cmp
xchg
mov
gs
jo
mov
fidivs
and
or
das
popa
xchg
call
sti
jae
cs
into
shrd
xchg
push
xor
cwtl
lds
pushf
push
repnz
scas
mov
add
adc
xchg
cmpsb
mov
data16
pop
adc
mov
push
fs
adc
cmpb
test
or
push
sbb
add
and
cmc
xchg
test
mov
sbb
fidivrs
fstpt
cmpsl
push
out
std
in
fldt
jnp
clc
test
mov
push
testb
and
jo
push
call
dec
arpl
loopne
scas
dec
sarb
or
je
dec
dec
jo
retw
test
and
aad
sahf
fdivrs
inc
jo
push
in
dec
aaa
dec
add
enter
lock
add
jo
inc
inc
aaa
xor
jno
jo
push
repz
js
ss
mov
nop
ljmp
arpl
pop
out
mov
jo
or
jmp
push
push
test
js
es
incb
jno
insl
inc
jge
xchg
fsubr
mov
jo
adc
bound
les
pop
sbb
cmp
push
sub
pop
insb
or
jo
and
mov
scas
std
push
int3
jo
out
push
cwtl
cltd
fidivs
fadds
leave
cs
add
fistpl
jne
inc
jo
out
pop
in
jbe
mov
cmp
test
dec
mov
fld
mov
mov
js
sub
xor
hlt
nop
jns
mov
push
test
push
mov
push
jns
adc
lcall
test
fs
mov
push
mov
push
movsl
rcrl
and
or
or
mov
jo
shrb
addr16
lea
arpl
aaa
shl
fnstsw
insb
lods
mov
fwait
sbb
inc
jo
je
add
push
cmp
into
test
test
xlat
ret
out
mov
jmp
mov
call
mov
popa
or
jne
push
bound
ret
jo
dec
adc
jo
mov
ja
jo
fmul
pushf
cmpsl
sub
mov
rolb
fldenv
js
shlb
jne
or
inc
jo
pop
xor
and
repz
add
enter
mov
pop
pop
jo
loope
jp
lahf
lret
arpl
ljmp
pop
xorb
inc
mov
adc
orb
or
ds
sahf
repz
in
adc
add
jne
fnstenv
mov
cmp
test
jo
orb
fisubrs
jo
fnstenv
xor
dec
imul
movsb
mov
int
jae
insl
imul
dec
in
scas
mov
push
xchg
in
sbb
repz
inc
or
frstor
push
imul
dec
repnz
popf
jo
mov
lret
mov
jle
inc
in
bnd
dec
loope
das
scas
adc
jnp
and
movsl
mov
mov
addr16
mov
jp
cmp
jo
mov
push
addr16
ret
hlt
sti
dec
or
out
sub
jp
pop
push
jl
sub
jae
xchg
rol
pop
inc
jns
jae
jo
outsl
pushf
inc
rcr
mull
mov
jo
pop
movsl
cmp
ljmp
jns
push
inc
cmp
loope
pop
xchg
push
and
insb
sahf
jo
cli
mov
scas
jo
mov
sbb
jle
pop
dec
mov
leave
mov
add
sub
dec
repz
mov
cmp
mov
in
inc
lds
xorb
pop
cmp
popa
int
int
repz
sti
jl
jle
in
aaa
inc
jmp
jg
sub
and
sub
xor
arpl
adc
jae
dec
sub
add
sbb
mov
hlt
and
or
pop
ficompl
pop
out
xchg
pop
pushf
mov
sub
repz
push
cmp
ja
push
sub
in
adc
gs
dec
adc
fildll
out
in
js
rol
adc
ja
imul
cmp
js
fiaddl
ret
dec
jo
push
sti
jle
insb
dec
fildll
mov
aad
ss
jg
cmp
push
dec
daa
push
js
nop
xchg
cmpsb
stc
push
std
addr16
fldt
jo
mov
jecxz
jo
inc
adc
adc
ljmp
insb
fnsave
sbb
jo
loop
sub
mov
fldt
lock
in
daa
enter
push
xchg
js
lods
cmp
je
xlat
pop
mov
inc
loop
fsubrp
push
mov
cmp
jge
aaa
lods
xor
xor
loop
mov
psadbw
jge
je
repz
jo
shll
fnstsw
mov
rclb
dec
jae
xor
xor
jo
jne
popa
push
fdivs
movsl
push
jae
dec
loope
jo
mov
cmc
jo
jge
inc
jnp
mov
nop
negl
std
in
aad
jo
and
out
fmuls
mov
insb
push
push
or
jo
je
mov
and
jecxz
repnz
stos
pop
jo
jmp
loopne
and
jo
in
inc
sti
aas
sbb
add
in
mov
daa
lret
sub
jo
ljmp
jo
sbb
jl
roll
dec
jp
and
insl
in
cli
in
mov
mov
inc
sub
jae
mov
sub
mov
dec
mov
andb
es
cmc
fcmove
addl
gs
out
push
jmp
and
repz
xor
cmp
hlt
iret
cs
xchg
push
push
insb
imul
jns
ret
jnp
add
repz
jmp
jo
xor
das
cmc
jo
enter
add
std
push
mov
int3
push
push
mov
cmp
sbb
xchg
xchg
pop
ret
xchg
insb
pop
out
popf
add
adc
test
jl
sti
andnps
lods
in
icebp
into
push
loopne
imul
push
and
cld
rorb
pusha
clc
jo
cmpsb
fs
jo
jnp
fisubl
stc
xor
mov
cmp
mov
mov
jge
outsb
test
cmp
mov
mov
sbb
jb
mov
shll
pop
mov
fldenv
loope
cmp
stos
inc
sti
repz
les
xorb
in
aaa
je
daa
cs
xchg
sub
je
call
or
cltd
jge
leave
js
addb
repnz
jo
sub
sbb
pop
jge
jo
outsl
xchg
repz
push
push
jo
jb
aam
dec
mov
lret
cmp
xor
data16
mov
jge
test
sahf
fs
cld
jo
cmp
sub
mov
inc
pop
mov
test
mov
push
mov
jne
jp
pop
or
push
cmp
inc
jo
pop
jae
jmp
out
je
jo
sbb
sbb
sti
out
jo
sub
movl
es
or
pop
jo
addl
lea
dec
sub
aam
mov
sbb
mov
rcrl
mov
aam
xor
sbbb
pop
mov
xor
int
fsubl
and
pop
sti
dec
jle
push
push
hlt
aad
test
sbb
test
divl
sbb
jg
fld
jo
xor
sti
inc
jle
loope
or
xlat
jno
xor
sbb
scas
jecxz
out
add
nop
sub
add
test
and
scas
cmpsl
inc
es
jo
sub
xor
jmp
jecxz
mov
in
sbb
dec
scas
in
and
push
jo
sbb
dec
push
mov
pop
fidivs
hlt
jo
stc
xor
lds
outsl
jo
stos
dec
je
mov
clc
out
movsb
sub
jl
jo
sbb
ret
pop
sbb
or
out
add
insb
out
ss
in
rolb
jle
and
outsb
ljmp
arpl
xor
fstpl
and
sub
bound
popa
mov
mov
in
inc
rol
adcb
xchg
pop
repz
push
mov
and
rolb
cli
sub
mov
mov
jo
pop
xor
mov
bound
pop
cmpb
outsb
or
movsb
je
jo
mov
cmc
int3
jo
mov
daa
test
jecxz
stos
or
add
jb
jo
push
lret
cmp
push
ret
push
stc
js
mov
and
sub
sub
jo
cmp
and
xchg
stos
jo
loope
adc
xor
dec
in
jge
jno
cmp
fdivp
inc
jo
mov
outsl
mov
pop
mov
mov
test
xchg
hlt
lcall
push
dec
aaa
and
scas
cld
int3
sbb
jne,pt
push
and
cltd
adc
cmp
xor
mov
pop
xor
lods
sub
ret
fs
mov
add
push
popa
out
stos
aaa
xchg
jo
or
int3
addr16
in
jo
jno
jge
lds
or
jmp
addr16
mov
idivl
jle
adc
fbstp
inc
jo
sub
ret
lds
pop
sbb
dec
add
mov
sub
sub
shrb
ss
cmp
mov
mov
and
rorl
ja
adc
mov
xchg
dec
int
xorl
gs
or
stc
lods
xor
dec
repz
les
bound
xchg
ja
jnp
std
push
repz
and
jbe
adc
sub
cmc
dec
jo
loopne
push
mov
test
pand
mov
push
fs
push
in
push
addr16
out
cmp
dec
jo
mov
std
sbb
dec
ljmp
jbe
inc
into
lods
push
paddb
sbb
pushf
test
jecxz
ds
nop
xchg
sub
xor
push
jae
jmp
cmp
jo
add
xchg
es
jo
ret
fsubs
je
jo
ret
insl
aaa
push
ljmp
push
iret
js
adc
movnti
loope
out
in
ja
movsl
ror
jo
push
hlt
jae
mov
add
orl
push
xor
aaa
jp
cmpsb
pushf
iret
lret
test
cmp
lock
jne
adcb
dec
jo
into
jl
pop
repz
aaa
insb
cmp
pop
js
jne
and
sub
xor
mov
sbb
jo
mov
mov
push
jo
shll
pop
cld
jae
insb
xor
add
or
clc
sbb
jo
aad
xor
jmp
sbb
jo
iret
enter
jo
fcoml
cmp
ret
es
push
cmpb
stos
cvtss2si
sbbl
ficoms
enter
xor
das
ss
insb
aaa
psrld
and
mov
jnp
jb
shll
ret
push
sub
push
inc
into
mov
jo
repnz
dec
adc
sub
je
mov
mov
jne
xchg
jnp
enter
adcb
mov
jbe
jo
test
dec
sub
ret
pusha
out
xor
aaa
sub
mov
cli
and
in
pop
mov
inc
pusha
cld
sbb
mov
push
int
sub
mov
daa
jo
sub
sub
mov
inc
xor
scas
jo
addr16
jbe
push
jg
pop
mov
nop
fbstp
jo
popa
repz
xorl
test
adc
stos
jo
push
lea
sti
mov
xchg
or
add
outsb
out
push
push
stos
in
sub
ret
fsubl
lret
push
leave
js
ljmp
cmp
out
movsb
aad
jg
jo
fldt
fdiv
and
or
into
push
push
xchg
fs
js
mov
dec
rcrl
lods
andl
jo
out
xor
jo
pop
mov
icebp
mov
js
bound
jns
ljmp
jo
in
push
mov
jo
repz
and
js
daa
adc
repz
dec
pop
lcallw
xchg
push
aaa
js
je
test
sub
mov
mov
jae
arpl
mov
xchg
mov
out
inc
jl
and
daa
mov
sub
addr16
push
mov
mov
push
cmp
std
push
inc
and
dec
loop
jp
dec
repnz
jmp
cld
fsubrs
push
jnp
insb
mov
jmp
push
jb
outsb
test
inc
mov
jo
push
call
aas
mov
nop
leave
js
dec
icebp
pop
cmp
and
bound
cmp
push
in
scas
stc
inc
xchg
lods
outsl
addr16
js
icebp
jo
xchg
je
mov
fwait
and
imul
xchg
xchg
mov
xorl
out
pop
je
nop
inc
mov
lods
sub
int3
out
sbb
cmp
jo
popf
dec
sbb
ss
cs
mov
sbb
clc
sbb
xorb
call
test
stos
cli
daa
push
scas
jo
push
cmpsb
clc
sarl
jo
mov
sub
xor
jo
imull
int
fmul
sub
jo
lcall
icebp
fldcw
mulps
in
xor
loope
jo
jl
fdivl
jle
sub
pop
sub
fcomip
orb
jmp
je
xlat
shll
jge
pop
jno
inc
mov
shll
fwait
jo
cmp
add
mov
or
pop
lret
je
mov
inc
in
or
js
fs
das
cs
xor
and
push
xchg
xchg
aas
aad
adc
fs
push
decb
mov
fldenv
jge
pop
pop
inc
xchg
push
ret
call
mov
cltd
lods
divl
shrd
pop
fs
cmp
mov
xchg
icebp
mov
jecxz
adc
inc
jo
rcll
jns
adc
push
cli
pop
mov
sbb
in
lret
paddusb
sub
sub
sarl
jo
mov
xchg
repnz
lcall
pop
pop
fsubrl
or
jle
mov
shrb
loopne
adc
imul
adc
inc
jo
pop
mov
in
xorl
rcll
xchg
imul
mov
jl
adc
sub
xchg
cwtl
pushl
cmpl
pop
sbb
sub
jae
sub
jo
add
fisubrl
inc
lods
clc
pop
adc
mov
fs
mov
flds
jmp
mov
xlat
push
pop
jo
adc
mov
mov
jo
lea
cld
cmovs
pop
addr16
fnstenv
push
push
cmp
lret
dec
es
jo
pop
ds
je
out
jo
lds
mov
cmp
jp
push
jecxz
leave
jle
fcomps
adc
es
xchg
shll
cli
call
pusha
pop
push
add
into
popa
xchg
adc
push
stos
jge
push
push
outsl
icebp
aad
jo
mov
fwait
sbb
imul
leave
repnz
xchg
fs
fstpt
inc
inc
mov
popf
xchg
or
adcb
lret
mov
sub
xchg
or
enter
pop
popf
fldcw
je
popa
mov
jno
xor
inc
jo
lret
push
repz
mov
imul
push
divl
test
and
jo
dec
adc
sarl
jo
iret
in
enter
push
jno
xor
adc
ret
clc
data16
jle
aam
int3
mov
jp
jo
out
sub
jo
gs
xchg
sti
and
ja
imul
xchg
xor
jo
sbb
in
inc
ret
int3
push
push
mov
xor
loop
rorl
mov
jnp
xor
xchg
cltd
jo
jg
cs
pop
jo
fists
sbb
ja
push
scas
cld
shl
sub
jo
hlt
fadd
fs
xor
mov
ja
repz
jo
stos
movsl
sub
mov
cmpsl
ljmp
sbb
cmp
inc
cmp
lret
push
sbb
scas
pop
jl
jmp
aam
xchg
push
dec
jo
sbb
jmp
ret
push
movsb
data16
sbb
fwait
jle
and
or
popf
nop
andb
pop
adc
xchg
jb
push
or
add
push
inc
imul
push
ljmp
sub
adc
sub
inc
add
imul
mov
lret
loopne
mov
xchg
fnstsw
jge
out
jo
cwtl
jp
dec
push
or
scas
dec
inc
sahf
testb
ja
cli
mov
cmovns
scas
push
jl
shlb
push
xor
lret
jle
cs
dec
ret
es
and
sbb
xor
repz
or
flds
dec
outsl
push
jo
add
jnp
sbbb
mov
out
sti
push
push
hlt
sbb
pop
xor
iret
sub
jae
inc
sub
scas
js
xadd
bound
lods
mov
outsl
jle
sbb
jg
test
iret
int
loop
xorb
ljmp
icebp
cmp
pop
jo
sti
mov
cmpsl
pop
jae
mov
scas
sbb
sub
aam
and
lret
jo
test
stos
mov
pop
jo
xchg
sub
jl
out
insb
js
ljmp
pushf
test
jo
ja
add
sub
mov
inc
push
je
dec
mov
dec
out
in
cmpsl
sbbb
mov
fdivl
pop
mov
add
loop
js
repz
scas
mov
add
xchg
cld
out
xchg
ss
adc
or
push
rorb
push
mov
cmp
lcall
and
icebp
jo
insl
jns
imul
add
aas
push
inc
jo
jl
add
mov
movsl
insl
mov
pop
cmp
icebp
sub
into
jp
push
ja
jo
jb
enter
jno
pop
js
inc
sub
dec
bound
call
cmc
not
push
aaa
jmp
lea
sub
fildl
inc
xchg
or
jb
or
inc
jmp
imul
dec
arpl
xlat
jno
push
shr
test
xchg
xchg
lock
outsb
clc
dec
stc
out
pop
out
nop
jmp
stos
xor
xor
and
sti
jmp
lret
std
ss
cmpsb
jmp
sbb
scas
sub
mov
add
sub
xor
je
adc
sub
cld
jmp
xchg
js
lods
shrl
iret
dec
jo
xlat
xor
mov
xor
stos
subb
test
pop
int
jno
shll
push
adc
test
jmp
mov
cmp
ja
or
sub
sub
into
stc
mov
psraw
jo
insl
sbb
dec
jo
ss
sub
push
nop
into
fidivrl
sub
jp
mov
adc
mov
pushl
add
or
jo
sbb
into
sub
inc
mov
jnp
enter
arpl
adc
or
pop
outsb
sbb
sarb
decl
pushf
cli
out
mov
jo
bound
aaa
aas
jne
clc
icebp
arpl
cmp
jg
pop
sub
fnstenv
out
sub
scas
jo
rcl
ds
add
outsb
jae
imul
cwtl
xchg
or
sarl
das
cmc
pusha
insb
or
sub
loope
pop
mov
fdivrp
jle
imul
mov
in
push
xchg
das
pop
pop
xor
jg
js
mov
xchg
and
pop
movsb
sub
push
clc
fs
cmpsl
xlat
aad
mov
inc
mov
xchg
jne
pop
xchg
mov
push
aaa
jg
jo
inc
or
loope
mov
jo
out
xchg
xchg
jns
pop
jo
fwait
ds
mov
xorl
inc
or
imul
test
loop
arpl
das
xor
jne
push
pop
or
sbb
ss
mov
subb
and
fsts
pop
arpl
pop
loope
or
out
jge
icebp
jo
lcall
jo
mov
cs
pop
sub
les
cmp
pushl
xchg
adc
lret
test
inc
loope
fld1
jb
cmp
clc
pushf
inc
shlb
das
nop
or
xor
lods
cmp
hlt
sub
dec
mov
jo
aad
add
pop
lods
mov
jmp
scas
cld
mov
out
push
jo
push
rep
xchg
dec
jo
jecxz
cmc
cmp
fwait
lock
push
lret
insl
cld
aam
iret
sub
sub
test
dec
jae
jb
jo
or
jne
jo
jno
sbb
sbb
mov
arpl
sbb
repz
jo
mov
bound
movsb
jb
mov
fimuls
mov
in
push
mov
fs
rcrb
in
test
mov
xor
inc
inc
or
mov
dec
add
out
jo
je
mov
insl
cmpsb
subl
fxch
cmpsl
jmp
mov
push
jo
dec
mov
jnp
push
int3
scas
xor
jge
int
pop
xor
jle
mov
out
roll
nop
or
es
fwait
sahf
cmpb
mov
push
jg
xor
jo
pop
mov
insl
imul
add
test
dec
shlb
push
jns
arpl
mov
imul
cmc
repnz
in
adc
in
add
jb
pop
pop
or
scas
adc
repz
jo
test
sub
jo
bound
or
mov
push
inc
repz
lock
testl
std
add
js
cltd
mov
sbbb
test
pop
nop
fistpl
mov
in
cli
adcb
cmpb
jae
insl
and
mov
jb
bound
push
xchg
mov
rclb
jns
xchg
push
dec
lods
ja
dec
js
testl
fcmovb
ret
aaa
mov
lea
lock
jo
push
sbb
shlb
push
pop
and
push
nop
push
push
inc
pop
es
push
adc
mov
stos
test
pop
jo
cmp
iret
cmc
mov
inc
test
and
jg
cmp
packsswb
and
dec
js
inc
add
jo
inc
aaa
dec
fldenv
int3
or
pop
jo
stos
je
inc
and
mov
push
jnp
push
xorb
aam
repnz
testb
outsl
mov
fsubp
xor
je
mov
inc
scas
fcoml
fcompp
jl
or
push
push
repnz
sub
mov
push
sbb
inc
add
adc
mov
cmp
adc
jae
and
leave
jo
push
fmuls
out
gs
push
pop
sbb
inc
xor
inc
test
or
jns
add
jns
and
lea
dec
mov
and
adc
xchg
scas
or
and
xchg
fildl
lds
and
nop
dec
fstpt
cmpsb
test
outsb
mov
rcpps
int
cmovle
or
imul
call
xor
dec
outsl
pusha
cs
cld
icebp
cmp
and
xor
jg
outsl
aaa
sub
int
shll
clc
inc
shrb
shll
in
rcrl
out
and
insb
sbb
movb
dec
push
sti
adc
push
push
shlb
pop
push
and
sbb
inc
jmp
jg
lahf
jmp
lcall
das
pop
jp
cmp
jo
fistps
push
or
mov
push
jbe
fs
inc
test
sbb
lcall
and
test
into
jo
sarl
mov
pop
mov
xchg
hlt
dec
lods
pop
in
inc
mov
cmp
mov
jo
adc
in
pop
es
leave
cmp
xor
xchg
ss
push
xchg
jo
sbb
lret
gs
insb
jmp
push
fdivl
fisttps
push
add
test
mov
mov
inc
and
insb
rcll
jo
ret
xor
loopne
adc
imul
stc
rcrl
lcall
dec
mov
or
push
stos
xor
mov
sti
xchg
fdivrs
sub
je
test
in
jns
outsl
lds
je
jo
in
rcll
jo
loopne
mov
sub
cmc
push
enter
lds
mov
jo
mov
lea
in
xor
dec
jns
lds
pop
jge
sub
nop
xchg
and
adc
pop
js
pop
out
movsb
sub
aam
xchg
jo
pop
push
clc
or
adc
xor
popf
xor
les
notl
sbb
push
out
or
mov
pop
xor
lret
add
outsl
dec
or
inc
cmp
int3
repz
mov
insb
dec
and
add
push
jo
or
adc
or
aaa
push
das
xchg
jo
aam
xchg
sub
add
fcomi
or
fcoms
jne
mov
sub
inc
data16
std
mov
outsb
adc
fsubl
addr16
jnp
mov
push
imul
mov
and
sti
pop
loope
xor
cmpsb
lock
and
cwtl
lods
in
push
xchg
pop
dec
cwtl
std
shlb
shl
jmp
mov
icebp
dec
mov
jbe
lods
test
xchg
xor
push
cmpsb
rorb
mov
or
jbe
cmovs
insb
fildl
dec
js
mov
jno
je
pop
jge
outsl
jns
into
jae
pop
add
sub
mov
sbb
jae
fnstenv
mov
and
aam
dec
in
fldcw
clc
enter
fldl
or
xor
pop
arpl
jecxz
test
bound
push
xchg
push
and
pop
pop
cld
jno
fwait
pusha
or
dec
mov
sbb
pushf
mov
jnp
fwait
je
cwtl
and
js
push
jecxz
adc
jle
call
adc
ret
mov
je
and
jno
xchg
mov
pop
and
sbb
jae
dec
cmp
in
pusha
xorl
lods
add
loopne
mov
out
jb
fcoml
movsb
out
mov
dec
jo
mov
push
adc
loope
dec
sbb
xchg
mov
jo
pop
sub
adc
es
and
mov
js
nop
jo
enter
in
and
ljmp
xor
sub
test
jle
scas
gs
pop
or
lods
test
add
sbb
cmp
jo
scas
jnp
xor
loope
inc
ds
cli
cmc
jo
rclb
lods
int
and
inc
jae
jo
dec
inc
fdivs
push
fs
inc
adc
nop
and
test
in
jo
xlat
popa
loopne
ret
out
fisubs
and
insl
push
jo
mov
stc
test
je
notl
out
aaa
in
imul
dec
fdivrl
icebp
shrb
jo
inc
sti
push
cmpsl
sbb
ja
xlat
jns
lret
mov
push
aaa
jo
loopne
aas
jmp
mov
pop
xor
enter
cmpsb
lods
inc
jo
mov
fldcw
insb
pop
cmpl
movsl
add
jle
jo
xchg
lret
in
lret
jo
js
lret
dec
xor
les
push
out
inc
or
sti
push
nop
sbb
int3
imul
popf
mov
inc
lcall
lret
dec
jnp
xor
out
inc
rolb
jo
add
test
jo
mov
sub
or
and
sbb
adc
shrl
out
jns
adcl
add
clc
fnsave
cmp
dec
mov
pop
insl
rorl
out
ja
test
psllq
lret
jo
das
add
pop
add
fnstenv
pmaxsw
mov
shrl
notb
jo
lahf
adc
mov
cmpsb
mov
jb
push
xor
jo
lea
push
adc
xchg
and
jl
mov
movsb
adc
cmp
jbe
mov
xor
xchg
loopne
push
push
lods
push
adc
lods
cmp
push
mov
ljmp
or
outsl
or
inc
arpl
mov
mov
and
mov
push
mov
cmp
cmp
and
push
pusha
nop
lcall
cwtl
jae
loopne
lods
dec
mov
mov
mov
iret
inc
repz
xchg
in
ret
nop
repnz
mov
insl
jo
push
hlt
mov
test
mov
mov
xor
clc
cwtl
jno
imul
in
fldl
sbb
aas
adc
jmp
xor
jae
stos
out
aaa
dec
std
outsb
mov
stos
adc
shrl
js
jg
push
negb
js,pt
pop
jns
into
and
mov
in
pusha
push
xor
sbb
lods
jg
in
xchg
mov
loope
and
roll
loopne
adc
pusha
and
aas
addb
inc
sub
in
mov
dec
pop
test
jecxz
int
test
test
cltd
repz
test
cmpsb
repnz
adc
inc
mov
mov
fs
xchg
jo
movsb
shll
imul
int
test
mov
push
mull
insl
int
xchg
xchg
loope
push
jo
xchg
inc
cmpsb
push
mov
jo
mov
xchg
dec
jo
in
dec
mov
mov
mov
icebp
jo
jecxz
aaa
shrl
jo
push
mov
jo
and
inc
jl
shr
add
movsb
add
fidivs
stos
mov
cli
cmpsl
mov
cmp
pop
aas
jne
leave
jmp
addr16
leave
jo
std
push
cmpsl
subl
push
and
cmp
imul
into
rorb
das
xchg
push
jp
push
sbb
lock
mov
in
dec
lods
mov
jns
pop
lods
xor
nop
inc
pusha
scas
scas
lods
in
stos
addr16
cmpsb
lods
movsb
call
scas
mov
pop
mov
mov
mov
and
hlt
add
push
or
dec
pop
lods
pop
call
scas
push
in
push
add
test
dec
scas
inc
in
inc
addr16
pop
pusha
lods
pop
call
scas
push
in
push
addr16
sbb
je
or
inc
cmc
imull
sbb
leave
push
xor
shrb
lret
popa
or
dec
imul
jns
mul
ljmp
pop
imul
pop
jp
jge
test
mov
and
jmp
sbb
adc
adc
jl
jnp
test
add
out
add
adc
sub
lret
adc
pop
sbb
push
ljmp
loope
push
sbb
mov
jle
ljmp
ljmp
mov
sub
lret
xchg
icebp
lods
mov
inc
mov
nop
pop
lock
rolb
pop
addps
dec
pop
scas
pop
pop
out
pop
iret
pop
cs
push
pop
outsb
pop
dec
pop
scas
pop
mov
pop
into
pop
sub
pop
dec
pop
lods
pop
lea
pop
int
sub
or
insb
pop
dec
pop
lods
pop
mov
pop
int3
pop
sub
pop
imul
stos
pop
mov
pop
lret
pop
sub
mov
cmp
mov
popl
xchg
inc
dec
call
scas
rep
outsl
and
lods
addr16
pop
xchg
cld
scas
fldlg2
aad
xchg
jg
add
mov
sbb
addr16
rep
das
lods
in
call
addr16
pop
fildll
jno
aas
sti
outsl
call
scas
test
xor
pop
lcall
iret
movsb
pusha
mov
arpl
lods
mov
js
and
mov
pop
fsubl
add
insl
mov
xor
dec
xchg
sarl
in
test
inc
add
lretw
inc
ret
aas
mov
push
and
fsub
sbb
pop
adc
orb
cs
les
xchg
daa
and
bound
inc
test
loop
movsl
imul
inc
jb
data16
ret
imul
xchg
lods
mov
pop
mov
ja
sub
in
pop
lds
jecxz
mov
xor
dec
xchg
jg
lods
lods
push
movsb
mov
fistpl
sub
or
mov
test
push
jecxz
fldenv
mov
xchg
or
cltd
cmpsb
lods
or
dec
ja
roll
out
bound
mov
push
and
jecxz
mov
ret
cmp
cld
movl
mov
sub
mov
loopne
inc
sub
pusha
insl
popa
stos
in
dec
into
dec
cld
scas
mov
mov
pop
test
dec
jle
repz
repz
lods
fistl
roll
or
xchg
repnz
hlt
pop
jge
int
test
dec
inc
lds
or
ret
dec
mov
cmpsb
les
push
cmc
test
sbb
stos
lea
cltd
and
add
into
lret
pop
dec
pop
xchg
cmpsl
mov
sbb
lods
sahf
pop
in
push
bound
iret
inc
inc
data16
outsb
test
lahf
sbb
sub
outsb
mov
movsb
hlt
jp
test
or
sbb
test
test
push
imul
hlt
push
mull
add
loope
out
shrb
mov
xchg
dec
cwtl
sub
adc
dec
je
add
push
xchg
dec
pop
xor
or
es
cmpsl
lods
adc
sub
outsb
hlt
xor
push
jno
test
outsb
cli
cmpsb
sub
js
push
test
outsl
and
push
adc
je
dec
les
std
inc
jne
and
dec
aad
and
repnz
dec
icebp
inc
outsl
cld
and
push
dec
dec
mov
fs
jecxz
dec
mov
sbb
dec
jno
sub
lods
clc
dec
out
lock
push
mov
movsb
dec
sub
insb
fadd
insb
inc
ret
adcb
clc
dec
sbb
dec
les
pop
out
inc
dec
lret
sbb
movsb
push
push
aad
les
fimuls
cmpsl
jl
jg
jp
cld
jne
and
imul
loop
mov
pop
pop
jl
dec
stos
pusha
insl
mov
stos
in
aas
cli
pusha
out
cwtl
mov
in
inc
pop
int3
sub
int
ret
loope
iret
incb
js
jo
and
dec
or
mov
jo
setbe
ss
pushf
cli
push
mov
pop
insb
push
cvtps2pi
ret
popf
iret
push
or
jo
sub
lret
jo
add
xchg
pop
into
daa
pop
jo
cvttps2pi
mov
mov
mov
repnz
pop
or
sahf
lret
xchg
sti
dec
jo
sbb
or
jp
sub
or
jmp
mov
pop
scas
mov
dec
pop
call
fisubrl
push
scas
pusha
mov
lret
std
mov
mov
outsb
mov
mov
shlb
jecxz
in
and
fistpll
out
dec
push
std
inc
lock
adc
jl
xchg
cld
and
int
dec
adc
push
sub
call
pop
jmp
nop
xchg
cmpsb
es
jo
je
rcll
inc
jp
outsb
pop
outsl
push
stos
and
pop
sbb
push
lcall
rorl
dec
jno
je
mov
mov
cmp
push
icebp
xor
sub
cltd
insb
mov
xor
mov
outsb
inc
insb
ret
push
push
jl
xchg
jo
cmp
rcrb
stos
add
sub
sti
jo
test
pop
push
mov
gs
scas
jo
fldl
dec
arpl
adc
aam
or
or
cmp
gs
inc
cmp
je
cmpsb
jo
xor
stos
js
dec
test
pushf
icebp
leave
jae
inc
insl
or
inc
lods
arpl
mov
mov
dec
add
out
sub
sub
push
pop
and
arpl
mov
xor
push
sbb
pop
push
mov
jae
inc
incb
bound
xchg
shrb
subl
push
loopne
xchg
adc
jp
fbstp
fcomps
xor
and
clc
das
cmp
mov
and
adc
bound
mov
cli
in
or
arpl
mov
aas
push
jo
mov
mov
cmpb
mov
mov
js
movq
push
arpl
pop
out
lret
rclb
cltd
fstl
xchg
add
inc
test
scas
push
movsl
iret
loop
sbb
add
jo
sub
sbb
mov
xchg
xor
mov
jne
mov
jecxz
xor
loop
inc
rolb
xchg
cmp
jo
fcoms
cli
sub
int
or
inc
xchg
xchg
shll
out
mov
cmp
xchg
repz
and
jae
dec
loop
pop
mov
push
ljmp
jb
lods
cmp
fnsave
sbb
inc
cltd
test
mov
in
shrb
sbb
dec
out
or
out
int
inc
cmpsw
adc
pop
fwait
pop
mov
dec
sub
pop
xchg
out
push
out
gs
sub
aam
pusha
sbb
mov
call
lock
jle
fs
insl
mov
ret
imul
fs
inc
test
inc
jbe
add
dec
push
dec
aaa
call
out
sub
and
loopne
lods
jg
test
scas
add
stos
xchg
data16
lock
jae
and
mov
enter
mov
pop
out
pop
hlt
inc
fistpl
std
push
scas
xlat
addr16
repnz
jo
jae
push
scas
add
shlb
mov
stos
xor
jo
mov
mov
enter
jo
xchg
ljmp
sub
loop
cmp
dec
test
test
pop
add
and
push
mov
repz
mov
insb
pop
arpl
pop
or
cld
push
xor
sub
les
add
xchg
jne
adc
nop
loopne
pop
ja
das
pop
imul
add
out
imul
clc
pop
dec
fmuls
lock
shlb
xchg
movsb
ret
aam
lret
or
adc
roll
sahf
jno
push
mov
mov
xorl
push
mov
scas
mov
cwtl
lcall
stc
sbb
cmp
cli
push
cmpb
add
push
jb
subl
repz
push
jo
adc
ret
stc
push
push
sub
push
jb
div
cmp
pop
in
dec
sub
inc
call
ljmp
out
mov
xchg
add
repz
jg
sub
sti
push
insb
jo
and
jl
mov
push
js
repz
xor
insl
or
neg
nop
mov
mov
test
mov
mov
mov
mov
cmp
ja
sub
loope
lock
jae
lods
fdivrp
arpl
adc
test
sbb
js
jo
in
arpl
dec
sub
push
fcoms
inc
jo
jmp
push
aaa
call
adc
push
lahf
and
mov
mov
cmpsb
testl
inc
dec
cmp
andb
imul
stos
lea
jno
and
sar
dec
adc
shlb
jnp
sbb
adc
dec
jo
inc
unpckhps
js
pop
jge
xchg
jae
pop
mov
cmpsl
xor
pushl
push
rolb
das
mov
push
insl
pop
inc
ss
insl
arpl
cmpsb
leavew
subl
inc
mov
out
mov
add
shrl
jo
insl
dec
lods
xchg
imul
pop
mov
sbb
inc
jmp
das
xor
shll
jns
push
leave
gs
jbe
sbb
addr16
testl
pop
clc
jo
inc
shrl
mov
and
sub
pop
pop
sub
insb
out
pushf
scas
sbb
mov
or
push
jmp
mov
loop
sbb
cmpsb
xlat
xor
sbb
jb
nop
movsl
adc
fsubr
inc
lcall
in
xorb
push
sbb
jge
shlb
ss
mov
stc
cs
pop
shrb
push
xor
test
mov
pop
cld
lcall
out
aas
sub
jo
int
mov
jo
push
or
cli
or
pop
xlat
cld
movsl
jge
ret
push
push
out
xchg
loope
mov
push
cmp
sbb
sbb
in
or
sbb
cmp
push
or
rcl
fstpt
mov
push
cltd
jo
dec
outsb
or
popf
sub
std
cmp
push
rdpmc
mov
cmpb
pop
sbb
pop
mov
out
mov
fwait
xlat
mov
out
jmp
pop
mov
jo
dec
mov
pop
stos
das
push
jo
pop
stc
sub
jge
inc
push
negb
fisubrl
aas
lahf
mov
test
in
add
out
push
mov
insb
mov
aas
aam
icebp
fwait
and
xchg
push
mov
ja
jo
cmp
icebp
pop
dec
cmp
jae,pn
into
mov
cmpb
ret
fs
pushf
repz
mov
adc
and
jo
imul
mov
lahf
in
jo
pcmpgtd
jae
xchg
jo
mov
loope
xchg
repnz
arpl
testb
cli
pop
imul
and
popfw
adcb
daa
inc
andb
fdivrl
movsl
mov
push
rorl
pop
mov
js
sbb
jo
xchg
jne
lods
cmpl
adc
pusha
jb
add
sub
outsl
xor
dec
js
mov
mov
mov
cmp
pop
adc
arpl
pushf
rcrb
out
js
sbb
int3
push
xchg
enter
mov
jmp
mov
cmpsb
ss
leave
mov
orb
dec
and
fdivrs
add
adc
addb
jo
dec
sub
push
and
push
je
pop
mov
inc
sahf
pop
jo
push
or
das
notl
xchg
clc
mov
in
or
loope
push
je
int3
call
inc
pushl
fs
out
shr
jae,pn
mov
hlt
in
js
in
notb
mov
lret
popw
and
jo
ficompl
adc
iret
outsb
inc
sub
loope
cld
ja
lock
test
outsb
push
and
icebp
push
jno
xlat
fiadds
out
fwait
pusha
jle
fidivrl
mov
je
pop
jnp
jo
xchg
mov
adc
fcompl
push
and
inc
int3
sub
mov
cmp
rcrl
push
pop
test
cmp
push
mov
addr16
or
mov
add
jp
inc
mov
and
cmc
xchg
mull
pop
jo
fidivrs
jo
sbb
idivl
jo
test
into
sub
scas
sub
in
cwtl
xor
mov
arpl
mov
lds
cli
repz
lock
pop
inc
sub
cmpsb
lahf
inc
ljmp
xlat
mov
push
cmp
jo
out
out
sti
push
daa
fdivs
jp
jo
jecxz
clc
sub
sbb
or
pop
jns
xchg
pop
out
push
mov
fs
jecxz
cld
in
pop
xchg
ud1
cmp
orb
dec
bound
xorb
lock
divl
xor
arpl
in
cmp
inc
and
mov
xlat
pop
push
push
loope
lahf
std
pushf
xor
js
test
pop
jo
mov
outsl
sahf
or
jne
loop
in
mov
std
push
mov
nop
mov
aas
ljmp
jno
lods
xor
lret
mov
js
punpcklwd
arpl
testl
out
pop
sub
outsb
addr16
xor
repnz
insl
je
mov
jle
jg
aam
imul
scas
push
push
test
jo
scas
clc
popa
jnp
dec
or
mov
rorl
pop
mov
addr16
fnsave
fidivrs
pop
or
icebp
push
jno
xchg
xor
loopne
fadds
jo
jmp
movsb
inc
loop
xchg
sbb
inc
jo
gs
fcompl
and
lods
test
push
out
sub
mov
add
jle
inc
ret
loope
pusha
push
js
jnp
js
sahf
jo
dec
mov
aam
jns
sub
xchg
jo
xor
stc
sbb
xchg
jo
or
or
pushf
pop
and
mov
jo
dec
stos
test
mov
cmp
lods
dec
pop
arpl
pop
out
fwait
push
pop
cmp
int3
cmpsl
push
fnsave
adc
repz
add
lock
and
jbe
pop
ss
imul
hlt
enter
mov
jl
repz
inc
lret
push
popa
mov
jp
mov
jno
jo
clc
dec
cmp
loope
jmp
stos
shr
xchg
in
push
scas
pop
cld
fucom
mov
jo
ret
ficomps
jo
stos
or
lahf
push
push
scas
mov
insb
pushf
pop
jo
insb
fistps
jo
lods
add
mov
ja
cmp
or
pop
jne
jo
jl
cli
pop
add
stc
mov
pop
pop
add
lds
cmc
xor
push
and
repnz
dec
jo
mov
mov
pop
mov
mov
push
into
test
out
aas
adc
movsl
orb
cs
shrb
ret
fistpll
cmc
xor
xor
sbb
lcall
push
pusha
jp
stos
iret
ud2
mov
sub
jnp
shl
fs
fdivs
mov
jo
adc
leave
and
xor
adc
sbb
movsb
outsl
cwtl
cmp
sahf
subb
add
ljmp
mov
adc
enter
in
cmp
inc
push
push
fwait
mov
in
sub
mov
lods
add
cmp
jae
mov
sarl
jp
icebp
mov
xor
add
and
jg
inc
jo
insl
lock
scas
push
imul
mov
sbb
pop
jns
rorb
cmp
sub
ds
cmp
adc
hlt
cvtps2pd
add
insl
xlat
push
std
dec
dec
push
pushf
xchg
imul
and
rolb
mov
insb
pop
mov
xor
in
or
jae
jmp
add
cmp
xor
hlt
out
fdivrs
ret
push
mov
imul
insl
ss
jns
in
push
push
mov
pop
cmp
daa
mov
ss
inc
push
jo
scas
or
cwtl
jo
das
dec
into
dec
dec
fidivl
cmpl
adc
mov
pop
mov
adc
push
lret
fs
pop
ja
mov
lcall
mov
stos
out
push
fidivrs
popf
mov
sub
cld
xchg
sub
bound
sub
fmuls
cmp
scas
pop
adc
jo
or
imul
sub
inc
add
jo
and
cmp
mov
stos
movsb
test
and
mov
leave
xchg
dec
mov
das
js
pusha
cmp
cmc
pop
divb
cmp
ss
add
int
sub
jne
jno
jo
negl
xchg
iret
dec
lods
dec
jnp
and
mov
in
dec
data16
mov
jae
and
push
jo
mov
adc
in
adc
enter
xor
outsb
or
cmp
mov
cmp
add
icebp
pause
mov
bound
xor
cmpsl
popf
jo
jnp
pop
cmp
or
into
adc
aam
jo
les
mov
daa
clc
sbb
fildl
sub
hlt
sub
xor
jl
mov
push
nop
mov
inc
popa
jae
lds
sub
mov
push
data16
xchg
mov
hlt
push
das
xchg
imul
add
push
dec
jo
sub
xchg
loop
jo
push
out
mov
inc
es
mov
pop
in
dec
test
js
dec
jo
mov
push
negb
inc
jo
in
cwtl
inc
xchg
jg
jo
mov
loope
dec
in
pop
jp
jo
mov
out
xchg
or
bound
lahf
lret
or
xchg
jecxz
inc
lock
mov
popf
nop
mov
xor
xchg
shrb
dec
fistps
jo
sarb
and
jo
es
xchg
sbb
pop
scas
leave
cmp
mov
test
ljmp
icebp
sub
aad
xchg
adc
lahf
fcompl
inc
jae
xor
jl
push
imul
fnstenv
xchg
push
in
out
cmp
sbb
jge
cltd
cmp
push
mov
out
stos
dec
add
popa
push
sub
fistpll
lret
fmul
xlat
mov
ja
hlt
jbe
push
test
mov
mov
push
pop
repnz
xchg
xor
nop
pop
inc
jae
adc
lcall
fwait
clc
shll
paddusb
aas
mov
mov
jne
cltd
jb
jo
add
addr16
movsl
push
clc
sbb
dec
jno
push
adc
mov
pop
jo
xchg
mov
mov
add
xchg
jle
js
movsl
pop
mov
push
out
inc
fsubrs
push
add
scas
or
sti
shll
popf
mov
movsb
jo
sahf
je
push
dec
and
mov
xchg
adc
pop
test
or
fnstenv
cltd
and
nop
shll
push
mov
jo
pushf
cmp
jb
test
gs
imul
mov
and
cltd
icebp
mov
push
std
jle
dec
mov
jecxz
inc
mov
imul
popa
sbb
nop
mov
jno
aaa
imul
xlat
push
out
jo
push
dec
aaa
jp
dec
push
or
aas
jb
out
cmp
aaa
push
scas
push
imul
fisubrs
jb
adcb
dec
push
push
mov
and
xchg
xchg
test
push
push
test
imul
xchg
jb
mov
gs
mov
ds
inc
aaa
nop
push
add
hlt
lods
pop
jge
push
pop
jno
jo
fidivrl
popf
jne
imul
jl
jno
scas
sub
push
cli
adc
mov
fnsave
push
out
shlb
test
sbbb
fs
sti
shlb
xorps
push
sbb
insb
jae
and
xchg
pop
scas
jb
ss
sar
mov
fnstenv
mov
mov
jo
push
cltd
sub
jo
or
push
stos
jo
mov
gs
cmp
getsec
and
js
pop
shll
lahf
jno
sbb
repz
cwtl
push
icebp
mov
cmp
jae
cmpsl
xorl
sarb
mov
and
fmuls
scas
icebp
mov
jl
ds
imul
jns
ljmp
test
arpl
rcr
outsl
sub
jecxz
jo
outsb
loope
mov
sbb
ljmp
xorl
sbb
xorb
dec
jnp
lea
jmp
in
mov
jo
push
outsl
and
nop
and
loope
or
jecxz
jg
imul
xor
inc
repnz
insl
pop
xor
jg
mov
out
cmp
jo
pop
jl
repz
imul
cmpb
sbb
xchg
loope
pop
xor
sbbl
jecxz
xchg
pop
sti
fwait
push
push
add
icebp
jg
jo
dec
das
rep
mov
mov
mov
jns
or
adc
ja
scas
insl
mov
jecxz
cmp
mov
out
jo
push
inc
rcrl
repz
call
jge
xchg
dec
jo
sti
test
ja
add
daa
stos
jge
mov
std
sub
out
scas
sbb
inc
xchg
adc
pop
jbe
gs
test
cmp
and
add
adc
jg
and
xchg
sub
or
jo
data16
repz
sarb
lahf
js
sbb
jo
lea
jns
cwtl
jecxz
push
fsubs
popf
sbb
mov
mov
jo
icebp
push
cmp
xchg
cmc
aas
or
data16
fdivs
lea
sti
sub
aaa
iret
sbb
ja
movl
daa
mov
jno
outsl
jo
mov
cmp
inc
mov
imul
shll
jge
lock
out
jne
jo
or
push
dec
add
test
ss
gs
out
add
daa
inc
sbb
and
repz
add
test
mov
jns
sarb
flds
and
jo
stc
aad
xchg
pusha
pop
sti
jnp
mov
ss
imul
inc
push
mov
testl
add
jno
jge,pn
repnz
mov
mov
fildll
int3
movups
mov
inc
ljmp
sub
xor
outsb
jo
popf
pop
movsb
int
std
mov
pop
cs
dec
loope
mov
mov
jecxz
call
jo
add
lcall
jo
pushf
xor
jnp
loopne
and
scas
cmp
jo
push
or
arpl
cmp
dec
jmp
jbe
xchg
jo
rclb
pop
jo
fs
in
cmp
leave
mov
jl
jo
jbe
scas
shrl
mov
jo
pop
push
movsl
cwtl
out
repz
sub
jo
cmp
stos
js
xor
mov
mov
mov
cmp
jbe
cltd
std
push
pusha
outsb
sub
jb
icebp
aaa
mov
mov
add
jo
cli
push
sub
push
stc
sbb
push
mov
fnstenv
shlb
jnp
xchg
mov
outsl
data16
sbbb
add
popl
adc
push
push
in
add
ljmp
les
jne
dec
and
or
outsb
inc
gs
push
mov
div
gs
pop
scas
out
fsubrl
mov
or
sbb
hlt
lock
imul
in
jo
insl
fucompp
mov
dec
adc
cmc
or
clc
jg
scas
stos
lods
stc
jo
jmp
daa
aas
jo
ss
iret
push
in
push
scas
pop
ja
cmp
mov
mov
faddl
sub
movsl
jo
scas
dec
stc
xor
pop
pop
inc
sub
andb
icebp
in
in
mov
push
insb
out
dec
or
bsf
insb
in
icebp
pop
fs
push
sub
ret
out
mov
movsb
or
dec
scas
and
fisttpl
shrl
mov
mov
sub
dec
pop
test
mov
jl
xchg
xor
repnz
mov
mov
mov
adc
dec
shrl
in
push
sub
call
shlb
and
jmp
mov
lods
jo
std
call
je
aas
sub
push
loop
movsb
jo
movsl
daa
clc
jecxz
add
lahf
dec
sbb
stc
xchg
pusha
jp
push
cmp
push
pop
xorl
test
arpl
jl
jmp
adc
int
pop
int
cmpsb
dec
js
mov
jo
mov
cli
shll
or
xor
push
je
rcrb
js
mov
icebp
jo
ja
mov
outsb
sbb
std
mov
stc
adc
and
in
dec
xor
jl
add
stos
mov
clc
enter
insb
inc
es
adc
sub
jo
fs
jge
jo
mov
ja
imul
jo
hlt
jne
lock
rclb
jge
xor
jns
jo
xlat
cwtl
jne
sbb
rorl
sbb
pusha
cmp
je
inc
nop
sub
ljmp
repz
int3
jmp
xor
lds
mov
nop
mov
jo
add
stc
mov
jle
pmuludq
cmp
enter
fidivs
add
cmp
vpunpcklwd
push
jno
mov
or
lock
cmp
fwait
sub
jle
adc
or
xchg
push
jo
movl
add
pop
push
pop
jo
sub
xchg
lret
test
rcr
test
mov
jo
out
xchg
jge
mov
lret
shrb
sub
pop
ja
fisubrl
add
repz
repz
es
mov
adc
mov
out
and
aad
rcl
pop
lret
mov
jp
xchg
dec
addb
ja
sub
push
pop
scas
sbb
push
adc
mov
add
ja
lret
mov
pop
jl
inc
js
inc
push
pop
fs
sbb
jb
mov
push
inc
ja
jo
and
or
mov
jmp
jmp
das
sti
push
stos
cld
cmpsl
std
mov
xor
cwtl
jo
frstor
jecxz
cmp
rol
pop
imul
jo
push
mov
sub
jo
jnp
cmc
push
shr
jo
scas
cli
int
mov
push
xchg
lcall
testl
jnp
lock
aaa
push
cmp
jno
push
dec
and
mov
ret
loope
sahf
push
mov
mov
or
jge
es
movsl
test
sbb
ss
jp
ljmp
aad
sti
aas
sub
mov
insb
fwait
or
cmp
jb
data16
js
or
cmp
sarb
shlb
aas
jo
mov
lods
aaa
notb
jo
repz
int
cli
xchg
pop
add
subl
push
xor
pop
pop
stc
movsbl
dec
scas
mov
pop
jp
push
dec
jo
jp
push
and
stc
ja
clc
pop
push
add
test
decb
negl
insl
pop
push
loop
ja
aaa
dec
addr16
stc
dec
out
jg
sbb
jge
mov
push
xor
xor
js
jnp
mov
in
es
mov
mov
stc
data16
sub
mov
je
push
cld
movsb
push
insl
xchg
jg
push
dec
jo
testb
mov
mov
ljmp
jnp
repz
testl
jo
xchg
in
js
incb
jo
mov
ljmp
mov
xchg
cs
dec
push
push
mov
sub
dec
cmc
xorb
inc
push
js
push
cmp
push
hlt
dec
mov
idiv
insl
sub
call
mov
jg
std
mov
jge
push
idivl
loope
nop
or
jge
mov
lock
maskmovq
mull
pop
lods
adc
pop
cmp
cmc
push
mov
sbb
push
fidivs
stc
jno
std
ljmp
stos
xor
pop
sti
insb
jl
mov
nop
clc
in
scas
or
jno
jp
nop
repz
je
pop
pop
cs
mov
loop
push
icebp
std
or
xor
jb
rcrb
cmp
or
jns
in
push
js
mov
pop
cmp
push
movsb
in
mov
stos
ss
arpl
push
int
cmp
in
adc
inc
nop
mov
inc
out
out
shl
xchg
xor
lret
mov
cmpsb
jl
ja
push
jg
push
int
jle
mulb
shrb
icebp
lock
cs
je
jbe
jg
or
and
movsb
xchg
xchg
pop
ss
stos
insl
repz
cwtl
loop
jo
decb
cmp
mov
mov
loope
or
and
sti
inc
out
dec
cmp
pusha
push
sbb
fs
mov
pop
ret
mov
popa
and
pop
jp
mov
mov
sub
mov
push
cltd
in
xor
mov
mov
inc
fnstsw
xchg
dec
repz
divl
jl
call
sbb
sub
aaa
sti
loope
inc
pushf
jo
neg
mov
mov
in
add
jmp
das
movsb
nop
sub
and
mov
mov
or
cltd
shll
imul
jecxz
repnz
mov
sub
jne
sub
loop
or
mov
hlt
mov
dec
test
or
jo
jae,pt
sbb
jnp
jo
cli
and
popa
dec
jo
adc
push
push
rcll
push
scas
pushl
lahf
mov
gs
mov
jno
inc
ss
sub
jo
aam
sub
lea
icebp
lds
ljmp
sbbb
inc
ljmp
mov
imul
loope
test
xor
outsl
ja
jo
mov
aam
jo
fabs
cwtl
rcrl
dec
jo
push
repz
fidivl
stos
jno
and
pusha
push
jo
adc
movsl
cmp
outsl
mov
imul
cmc
sbb
das
push
adc
cld
sbb
je
push
mov
mov
outsl
add
jo
cli
repnz
fidivrs
shll
push
testl
or
sub
int
inc
jb
test
movlhps
stc
scas
mov
sub
hlt
xor
es
push
xor
and
out
mov
inc
sahf
push
minps
call
sbbb
sub
jo
les
call
fucomip
jo
sub
mov
cmc
inc
xchg
test
test
jo
out
movsb
popa
in
icebp
xorb
jmp
out
sbb
inc
and
jl
xor
imul
push
bnd
sbb
insl
aam
dec
mov
or
jo
sub
and
iret
scas
lea
cmc
je
fldcw
loop
sub
cmp
jle
cli
mov
into
sub
pop
cmp
imul
mov
mov
sub
push
mov
clc
jno
xchg
jo
cmp
hlt
sbb
sarb
jne
or
jns
jo
inc
dec
repz
aaa
data16
adc
or
ja
insl
dec
jbe
mov
push
je
push
sub
pusha
ljmp
jo
lods
sbbb
dec
mov
jno
push
push
jo
loope
stos
mov
jg
sub
inc
mov
cmpb
mov
mov
pushl
mov
leave
mov
adc
jo
cmp
lds
jo
and
sti
aad
jo
or
jo
rcrl
mov
ja
ljmp
cmp
mov
jns
sti
jo
fimull
bound
push
xlat
xchg
das
pop
jo
test
ficomps
xchg
jnp
shll
mov
dec
aam
jno
mov
and
xchg
pop
jo
sti
push
lods
bound
jo
je
out
arpl
loop
push
jno
push
dec
nop
ljmp
mov
sbb
stos
jnp
or
pop
shl
repnz
push
jo
mov
jl
repnz
sbb
cmp
cltd
ljmp
cmp
inc
cld
push
cli
mov
jo
enter
mov
imul
xchg
test
jl
xchg
sub
daa
xorl
ja
cmc
or
mov
imul
inc
arpl
mov
jo
pop
test
jecxz
cmp
mov
arpl
sub
xchg
jb
scas
enter
cmpl
call
aaa
push
cmp
icebp
clc
jo
add
lods
shrl
pop
pop
jno
je
dec
dec
popa
aad
aaa
out
ss
jo
lret
rorl
hlt
jns
insb
in
aam
push
jae
mov
enter
mov
pop
js
mov
cli
jnp
cmp
es
inc
popa
int
cmpsb
lret
jo
ret
sti
movsl
jae
jo
ljmp
lods
out
repnz
jmp
inc
mov
pop
es
andl
mov
pop
dec
jecxz
and
loope
jmp
jp
enter
dec
jmp
faddl
and
shlb
bound
outsl
mov
fwait
shlb
jo
inc
dec
jno
pop
aaa
mov
stos
loop
or
sbb
outsb
popf
loope
lcall
pop
inc
js
cmp
xor
jno
cltd
or
imul
jnp
push
call
movsl
push
jo
pop
loope
cmp
iret
insb
mov
jmp
dec
pop
aaa
hlt
loop
addr16
popa
int
jnp
loope
data16
sahf
imul
jecxz
jge
mov
popa
push
push
push
pop
xchg
js
xor
iret
inc
outsl
fnsave
test
inc
gs
sti
icebp
adc
iret
mov
scas
dec
pushf
repz
icebp
outsl
jo
jmp
pop
clc
bound
cmp
stos
sbb
mov
cltd
popf
sub
mov
in
lret
sub
iret
push
mov
jo
jb
and
sub
cmp
mov
fcomip
cmc
imul
js
pop
cmp
xchg
rcrl
stos
out
jmp
movl
rorl
das
jmp
neg
push
jo
cwtl
jl
cmp
or
xor
jl
jecxz
jo
push
clc
jns
shlb
in
sbb
fsub
or
mov
ja
outsw
shrl
pop
popf
sbb
cmc
xchg
jbe
jo
xor
xlat
mov
xor
mov
adc
sbb
es
jne
push
dec
add
pop
and
jl
repz
cs
rorl
lea
add
fiadds
mov
lcall
insl
jo
and
shlb
mov
push
push
mov
mov
jp
jo
sub
jns
in
sbb
cld
mov
mov
jo
sbbb
and
sub
jl
and
or
inc
inc
lock
xchg
pusha
jl
bound
in
jle
jo
push
out
inc
dec
das
insl
jo
sti
into
jae
mov
inc
add
or
adc
push
orb
jo
and
lcall
jo
or
and
push
mov
jb
fcomi
or
push
aad
into
adc
fwait
jo
jecxz
or
daa
hlt
in
mov
out
sub
bound
xorb
xor
mov
leave
mov
test
jo
inc
cmp
popa
mov
push
mov
jo
sbb
pop
xchg
sarb
mov
xchg
pshufw
cld
call
sub
and
xchg
imul
jo
sbb
js
jo
or
jbe
lea
scas
cli
adc
ficompl
inc
mov
sub
push
jo
stos
lods
stos
jne
push
inc
ss
sub
dec
xchg
in
and
nop
popa
imul
repz
dec
vpmadcsswd
jg
addr16
jo
ja
push
and
cmp
mov
loope
dec
data16
test
mov
jo
sti
mov
hlt
out
std
jo
sbb
dec
jmp
nop
clc
jbe
mov
push
push
movsb
ljmp
xor
test
pop
fs
push
jmp
or
sbb
movsb
jo
mov
sub
sti
test
mov
pop
out
leave
mov
sbb
nop
dec
add
fisubs
xor
leave
scas
cmpsb
jo
sub
pop
sbb
or
rorb
mov
inc
outsb
jo
fcomps
mov
popf
jnp
sti
shlb
mov
lahf
jne
je
cmp
sbb
jo
sub
jle
sub
jb
cmp
js
jnp
xchg
jecxz
jo
lds
mov
jo
stos
xor
jge
movsl
adc
or
ss
rcr
sbbb
push
sbb
or
sti
or
shll
ss
in
sarb
ds
xchg
jmp
adc
xor
imul
pop
cmp
cltd
divl
sub
push
popa
insb
aaa
sbb
mov
and
and
repz
imul
mov
std
mov
mov
sbbl
outsl
mov
stos
or
nop
xorl
jo
jmp
out
jo
mov
lret
sub
pop
mov
in
cltd
add
lods
and
repnz
push
rorb
push
cwtl
sub
mov
adc
fnsave
and
icebp
popf
jo
sti
loope
dec
iret
or
jo
sub
push
push
dec
mov
outsl
andb
int3
dec
in
jo
pop
es
jnp
lds
push
inc
push
dec
in
leave
jb
jo
inc
sub
fs
gs
mov
sbb
mov
jo
leave
dec
aad
or
xchg
in
loop
scas
jp
jo
and
pop
or
sub
in
mov
jnp
lock
adc
jo
mov
jmp
cltd
cmp
jns
test
sti
mov
pop
clc
mov
dec
aad
sarl
nop
aas
andb
movsb
jae
jae
or
mov
or
jg
jo
and
add
jo
ljmp
jo
hlt
cmp
jnp
shr
pop
leave
movsl
stos
jo
outsl
add
sti
je
xor
punpcklbw
mov
inc
movsb
mov
adc
stc
daa
jo
jns
sarb
mov
push
push
imul
mov
cmpsl
in
addr16
pop
mov
ja
pushf
sbb
jnp
cs
adc
js
add
pop
jo
imul
insl
jo
cmp
push
jb
or
ja
nop
sub
sti
cmp
or
jge
jo
jge
sub
jo
shll
mov
jo
cmp
sbb
push
mov
jo
xchg
pop
dec
stc
xor
cmp
cmp
addr16
xor
sub
cli
sub
adc
jmp
pop
mov
not
mov
xchg
jo
and
inc
mov
jne
cmp
sub
mov
or
sbb
inc
aas
lock
arpl
imul
mov
test
jnp
jle
and
pop
adc
jae
imul
jo
cmp
jmp
vpperm
or
push
jo
mov
sub
fwait
jle
mov
jo
ret
jno
cmc
add
jnp
je
jle
scas
jecxz
leave
in
jg
icebp
push
hlt
jno
jo
out
outsl
mov
jle
jo
mov
mov
outsb
mov
push
imul
mov
orl
pusha
mov
jmp
scas
clc
in
jo
addr16
mov
jo
popa
push
pop
mov
mov
in
push
cwtl
lcall
imul
jne
adc
xchg
pop
lret
rcrl
jae
push
push
neg
mov
fidivrs
jne
out
jo
pop
xchg
icebp
sbb
out
or
pop
lret
jmp
pop
stos
js
fcompl
repz
insb
call
insl
or
pop
lahf
cmc
mov
stos
and
icebp
mov
icebp
addr16
adc
nop
add
inc
cmpsl
jo
leave
dec
mov
jo
stos
je
lock
sub
jns
sti
ja
in
pop
repnz
js
lea
pop
jnp
inc
jae
pop
je
sbb
jo
mov
sti
push
shr
mov
cmp
mov
mov
or
cmp
hlt
rorb
cli
sbb
and
inc
lock
jmp
in
sbb
ljmp
mov
shlb
jo
pop
mov
sub
jg
jo
maskmovq
notl
cmp
in
movd
jbe
leave
mov
xor
mov
jo
push
cmp
inc
fidivl
nop
sbb
jmp
scas
jnp
jo
lds
fdivs
push
mov
jnp
addr16
stos
fs
cmp
push
ds
sub
jle
fidivl
enter
or
jo
xlat
cmpsl
sub
pop
sbb
mov
orb
sub
cmpsb
sub
js
push
fsubrl
xchg
dec
lahf
or
and
ja
cli
nop
repnz
mov
mov
jo
lea
cli
jo
ja
pause
into
scas
push
cmp
push
push
dec
cwtl
mov
fdivl
sti
fxam
loope
int3
into
jo
mov
out
mov
jo
and
inc
cwtl
jo
stos
test
pop
push
pop
fcoml
nop
aam
push
scas
outsb
aaa
mov
js
jo
mov
push
xchg
or
pop
js
xchg
loop
mov
jo
mov
cmpsl
dec
out
mov
aaa
js
inc
pop
cmc
push
jo
cmp
push
push
imul
sbb
adc
jo
in
les
jle
jo
js
outsb
ficomps
cmp
jno
ljmp
jns
pop
xchg
mov
push
clc
stos
xor
iret
inc
push
insb
xchg
paddb
or
out
jae
mov
js
scas
out
jo
push
sub
rcl
xchg
data16
jne
sub
not
loope
lcall
sub
jns
cmp
cwtl
inc
loop
imul
fucom
and
mov
cwtl
sub
jno
push
arpl
in
fisttpl
jne
sbb
mov
and
xchg
jo
repz
adc
mov
xor
nop
dec
cltd
in
inc
cwtl
jo
add
cmp
movsb
jo
testl
cmpsb
lods
xchg
js
gs
jmp
jno
mov
jo
imul
ljmp
adc
push
stc
fdivrs
sbb
jns
mov
jne
mov
mov
xor
jmp
and
mov
jo
jne
pop
jns
pop
jle
sbb
jle
mov
mov
test
xor
jo
or
pushf
dec
jo
ss
fwait
pop
inc
jns
cmp
lcall
sbb
add
punpckhwd
cwtl
lock
push
add
xor
and
sbb
jo
sub
repnz
nop
lds
lea
ret
test
std
jl
mov
xor
push
jmp
sub
jae
std
js
fists
lahf
mov
sub
loopne
divb
orb
and
cld
jns
sub
fcoml
in
aam
jl
adc
sub
out
push
xchg
enter
pop
outsb
xor
sbb
ja
pop
cmp
or
jmp
gs
dec
adc
mov
je
imul
push
push
inc
sub
pop
bound
jo
jae
inc
sti
cmp
jo
pop
sbb
addr16
jl
jns
xchg
inc
and
lock
jge
outsl
xor
sub
add
jo
hlt
mov
jmp
icebp
stos
imul
xchg
ss
fistpl
adc
cmp
jns
repnz
jo
add
sarl
add
mov
int
or
sbb
repz
or
jge
aam
sbb
jmp
cs
popa
out
jo
adc
cmc
mov
mov
repz
xor
sahf
pusha
je
sarb
loope
pop
icebp
adc
sbb
sub
lahf
sub
mov
mov
mov
jne
push
jo
and
or
daa
dec
pusha
movsb
je
jne
add
sbb
test
pop
dec
js
das
pop
adc
mov
and
fldl
dec
jb
outsl
sti
divl
packsswb
push
pop
mov
loop
in
fdivs
push
std
cmpsl
imul
pop
add
xorl
adc
lret
fwait
pushf
push
mov
testb
js
mov
push
push
mov
cmp
mov
das
fdivrs
pop
jns
or
rcl
in
std
sub
sbb
jo
lods
mov
mov
aas
out
push
sti
jno
inc
popf
xor
fstps
out
stc
sarw
lret
imul
faddp
pop
sub
or
xchg
mov
shrb
xor
jle
cmp
fs
cmc
lea
jo
mov
add
mov
mov
sarb
pushf
insl
std
js
mov
insb
je
jo
repz
es
je
pop
jo
inc
dec
rclb
arpl
dec
push
sbb
jo
pusha
popa
cmovg
sub
out
push
aad
push
fs
outsl
jge
xchg
in
xorb
mov
jns
ljmp
jno
mov
inc
cmc
cmpsb
adc
mov
inc
scas
fisttps
vmwrite
loop
push
pop
ret
insb
xchg
xchg
in
adc
dec
sti
push
movsb
les
mov
jo
lahf
out
xlat
push
xor
push
jo
mov
jnp
lock
fidivl
mov
pop
jnp
ficoml
js
fdivl
scas
add
mov
jno
jo
adc
push
arpl
jp
ret
imul
iret
sbb
stc
jp
cs
sbb
popf
fsubr
jo
pop
push
mov
stc
shll
mov
mov
setb
sub
xorb
dec
adc
mov
aaa
mov
ficoms
xchg
sbb
jo
jne
jbe
cld
xchg
and
jo
lret
jg
adc
jns
jo
arpl
xor
or
sti
push
notl
popa
stos
ficoms
mov
addr16
mov
jle
outsb
fisttpl
dec
popf
mov
jmp
dec
dec
mov
mov
fdivl
adc
mov
mov
ds
inc
mov
jo
scas
lret
and
outsb
ja
xchg
mov
jbe
jns
xor
outsl
loop
insb
loope
jne
mov
mov
jno
pop
dec
jo
cmp
mov
xor
mov
cmp
arpl
push
sub
or
jo
insl
addr16
outsl
dec
test
adcl
dec
ljmp
stc
leave
push
addr16
les
inc
xor
scas
rcl
jo
fwait
push
sbb
mov
xor
repnz
xor
or
or
fildl
mov
jo
or
shrb
nop
js
push
push
xchg
and
inc
mov
xchg
dec
add
or
ja
xchg
fidivrl
scas
faddp
lock
pop
mov
insb
or
jae
test
jo
pop
aaa
dec
fs
daa
mov
pop
mov
lods
imul
mov
fnstenv
test
push
jp
xor
out
push
push
in
inc
imul
dec
loop
jb
aaa
jns
push
mov
xor
sub
jge
ficomps
stc
movsl
addr16
bound
pop
cmpl
ja
mov
jo
pushf
mov
je
in
jl
aad
cmc
xchg
push
daa
jns
jo
push
sbb
pop
movsb
dec
je
int
xchg
pop
mov
ja
add
pop
inc
and
inc
adc
loope
adc
push
xchg
ja
addr16
pop
jle
xlat
or
jns
and
out
jne
pshufw
stc
sarl
ljmp
jb
jo
out
pop
ret
fs
mov
bound
test
fnstcw
mov
pop
add
fdivs
ss
or
inc
jl
add
jo
loop
ljmp
cmc
cmpsl
lock
test
jo
aas
dec
xor
mov
sub
insb
mov
cs
mov
jns
xchg
loope
scas
jae
sub
or
test
push
sbb
jo
dec
pop
mov
xor
xor
insl
aas
jo
jns
mov
push
mov
jne
push
adc
push
cli
dec
out
lret
jb
and
movsb
xchg
faddl
jb
push
clc
mov
sahf
pop
xor
sbb
ret
popa
xor
sti
imul
loope
push
inc
std
je
gs
cltd
nop
xchg
sbbl
jg
leave
rorl
ds
xchg
stc
jmp
nop
test
and
paddusw
add
in
jae
mov
sbb
or
repz
ret
cmpsb
jno
test
or
or
push
xor
int
cld
ret
shrb
push
dec
fiaddl
lock
popa
shlb
clc
in
or
pusha
push
cli
mov
inc
jle
mov
dec
test
jns
sbb
jle
jo
xlat
inc
out
xchg
shlb
xor
jo
mov
xor
test
mov
add
mov
jo
add
jge
xor
xchg
ja
cmp
jecxz
js
jno
dec
enter
repnz
in
and
jns
adc
jo
cld
jge
inc
or
daa
clc
loopne
add
xor
aaa
movq
das
rolb
sbb
out
icebp
and
lods
imul
push
out
pushl
mov
frstor
aaa
test
mov
inc
jo
mov
or
jg
or
jo
mov
jecxz
iret
data16
jo
mov
jns
push
int3
call
and
dec
bnd
imul
fstl
mov
push
mov
jbe
jl
or
insb
or
in
xchg
push
in
mov
setae
sar
out
pop
push
aam
cmpsb
push
arpl
jo
imul
mov
lock
sahf
mov
xchg
xchg
loopne
jo
dec
daa
out
shlb
outsb
jns
or
pusha
xchg
add
ss
in
aaa
mov
loopne
push
jl
mov
adc
sub
adc
stos
push
adc
call
mov
mov
je
mov
jo
or
or
lods
insl
int
cmc
or
addb
mov
mov
inc
imul
or
inc
testb
lret
arpl
cmp
addr16
xchg
lock
cmp
stc
jo
stos
divl
cli
pop
jo
imul
test
sbb
or
xchg
pop
js
or
adcb
cmp
jae
frstor
cmc
mov
lcall
shll
mov
ficoml
cmpl
jo
cld
jno
mov
or
iret
and
xor
adc
sub
lock
call
jmp
pop
imul
pop
push
aas
rcr
mov
push
xlat
mov
mov
js
in
sub
movsb
fsubrs
xor
mov
movb
mov
sbbb
push
and
shl
xchg
aas
nop
sahf
jnp
adc
sbbb
jo
pop
cmp
popa
jo
mov
pop
mov
sbb
jo
aad
mov
pshufw
or
popa
push
pop
push
lret
pop
movsl
xabort
pusha
cld
jo
movl
out
sbb
and
nop
pusha
mov
fsubr
bnd
jae
pop
je
jo
cltd
cmp
push
pmulhuw
xor
mov
inc
xchg
loope
pop
fs
cmp
pop
xor
nop
jo
dec
lds
jno
sub
mov
cmp
add
jo
jmp
jno
mov
push
es
decb
mov
xor
jo
and
int
imul
sub
jns
wbinvd
imul
push
push
jo
dec
call
rep
pop
jo
push
testl
jno
cmp
sbb
pop
xor
push
js
cmp
call
sbb
jp
out
add
dec
jo
out
scas
push
adc
push
push
das
jno
sub
push
mov
ret
mov
jo
hlt
das
xor
jo
push
inc
mov
push
mov
xorb
fwait
pop
jo
mov
data16
fbld
xchg
pop
arpl
jae
pop
jne
ljmp
in
lea
test
jge
subb
stc
lods
clc
xor
sbb
imul
sub
jl
roll
rcll
scas
ja
cmp
pop
or
mov
lods
repnz
xchg
mov
lea
xorb
jle
call
cmpsb
bnd
xorb
lods
xor
inc
pop
jo
ret
call
jo
out
mov
sub
pop
jo
insb
fcoml
jo
jae
inc
jbe
imul
xor
out
sub
hlt
ror
jmp
xor
sbb
push
in
mov
cmpb
movsb
xorl
scas
in
mov
sub
jo,pt
sbb
in
stc
xor
imul
clc
out
jl
sub
lock
pop
cmpsl
push
or
sub
nop
jo
mov
arpl
fs
test
mov
movsl
inc
jl
cmp
push
sbb
mov
sahf
sub
add
xor
stc
sbb
adc
push
cmc
movsb
lods
cltd
pshufw
out
jge
gs
jnp
inc
scas
test
jo
sbb
cmp
cltd
mov
jb
mov
loope
dec
insb
dec
mov
jo
mov
jne
push
mov
mov
std
jo
lret
sub
xchg
jo
ljmp
pop
jo
push
jge
and
idivb
and
loope
fld
jno
lods
addb
cmp
mov
xchg
inc
push
or
nop
icebp
sub
inc
movsb
mov
jo
test
pop
add
in
and
stc
mov
sub
arpl
xor
jo
cltd
in
jo
jns
test
pop
mov
mov
outsl
push
ljmp
jo
push
dec
dec
enter
js
cs
loopne
fistl
cmp
scas
popf
scas
jmp
aaa
out
inc
adc
ja
sub
mov
aam
xchg
xchg
add
inc
jns
shll
packuswb
mov
adc
in
enter
ret
insb
pushf
lods
jo
out
pop
sub
dec
inc
xchg
push
mov
sub
mov
or
lock
jo
repnz
lcall
lahf
push
ficoml
popf
mov
pop
xchg
add
and
xorb
rol
or
decb
pusha
pop
or
hlt
inc
mov
jae
ljmp
sarl
jns
mov
ja
je
inc
jo
sbb
popa
sbb
jmp
ret
andl
jo
pop
mov
jo
or
mov
jo
or
rcrl
push
sbb
adc
xchg
jge
jo
cmpsb
push
ljmp
or
jo
cmc
xchg
add
push
jno
jo
out
cmp
lods
push
subb
jo
and
pop
stos
jns
mov
mov
je
outsl
icebp
nop
cltd
insb
std
jge
sti
jge
jb
jo
sub
pusha
jns
idivl
icebp
data16
mov
push
test
jae
fcoms
sbb
jge
mov
mov
popf
sahf
mov
in
fwait
rcll
daa
jo
hlt
jmp
out
mov
clc
enter
push
je
scas
jo
pop
mov
push
jo
pop
pushf
addb
dec
or
push
std
sbb
repnz
je
cmp
jo
adc
sbbb
push
xchg
adc
add
xchg
in
xchg
pop
inc
mov
testl
jns
rep
xchg
das
movsl
add
mov
jo
pop
fsubs
dec
push
insl
js
inc
mov
retw
leave
arpl
xor
mov
cltd
outsb
sti
loop
sub
jns
cmc
in
mov
fisttpll
xor
nop
mov
gs
in
jge
movsl
imul
push
mov
pop
dec
mov
jns
inc
adc
stc
imul
shld
stos
mov
in
jmp
jbe,pt
les
leave
pop
push
cmp
pushf
outsl
outsb
dec
aam
sti
jo
fistl
iret
repz
sbb
jns
cmp
mov
push
sti
add
xor
push
fstl
lods
jo
mov
pop
push
sbb
mov
daa
out
and
std
jo
pusha
ss
int3
lds
jns
mov
andb
push
and
jmp
or
lods
pusha
data16
jmp
das
stc
sbb
mov
mov
and
jns
push
inc
adc
cmp
push
jbe
mov
xor
in
jl
dec
lcall
mov
xor
mov
insl
mov
cmpsb
inc
jo
lret
gs
or
aaa
jo
ja
jae
pop
lea
jg
mov
pop
jo
out
xor
scas
ja
addr16
fstl
add
sti
rcl
adc
popa
xchg
xor
pop
ret
and
outsl
in
and
adc
orb
jnp
mov
jmp
lahf
jns
cmp
xlat
push
jae
mov
in
iret
push
jmp
out
jns
pop
push
push
add
jae
pop
mov
rclb
popa
inc
test
js
push
mov
roll
fidivl
jo
sub
push
jo
jns
xor
enter
mov
add
push
lock
sbb
pop
cld
cmpsb
lods
nop
mov
pop
cmp
repz
fs
mov
pop
jbe
and
mov
ljmp
repnz
lds
popa
xchg
lods
jb
orl
movsb
nop
or
and
jo
jns
repz
mov
adcb
inc
mul
xlat
push
cld
jp
and
leave
sahf
dec
lods
mov
les
jo
daa
outsl
sbb
mov
sub
jo,pt
das
xor
inc
sub
mov
lods
jp
js
dec
leave
xchg
sub
outsl
inc
jo
jecxz
dec
xchg
mov
jl
fdivs
in
repz
xor
shr
frstor
lcall
imul
add
test
mov
push
cmc
jns
sbb
jo
shll
fcompl
insl
and
in
xchg
out
jo
push
inc
adc
adcb
aaa
sbb
pop
inc
ja
sbb
xor
stos
jo
mov
testl
loop
push
js
push
nop
stos
fsubl
xchg
sahf
aaa
dec
loop
cli
fisttpll
inc
or
shll
jb
dec
jae
jo
mov
std
jnp
jb
push
rorb
and
add
push
push
lret
sub
mov
lods
mov
and
je
imul
dec
dec
addb
shlb
lcall
inc
scas
lods
cltd
push
lret
jo
cmp
mov
int3
sub
jo
loop
xor
lret
jbe
ja
mov
or
loope
loop
imul
xchg
mov
add
or
mov
shr
inc
or
neg
adcb
jo
sub
add
cmp
lahf
mov
jb
shlb
adc
xchg
jo
mov
hlt
mov
outsl
push
mov
cld
pop
pop
jns
test
and
jnp
pop
push
inc
out
stc
or
jo
mov
divl
in
ds
test
scas
cwtl
jge
into
add
jo
fsubrs
mov
mov
xor
jno
je
cli
mov
into
adc
xor
psrad
shrl
test
jo
aam
jnp
xchg
test
jo
add
stc
jo
cmp
push
jo
pop
ljmp
aad
mov
in
xchg
jns
js
mov
jo
jle
inc
adc
jo
inc
lret
jns
inc
and
test
je
cmc
jo
mov
scas
xor
jnp
pop
mov
and
add
es
cmpsl
pxor
movsl
cmp
jo
xor
sar
jmp
lcall
jo
inc
movsl
aad
jo
mov
dec
adc
sub
sub
cs
aad
lods
jns
mov
mov
cwtl
cmpxchg
enter
loop
push
mov
imul
pop
inc
les
mov
fs
cs
or
movsbl
lfs
pop
in
inc
out
push
andb
fsubp
jo
push
sar
imul
iret
int3
scas
jne
lock
and
sbbb
xchg
jo
mov
push
jo
pop
mov
pushf
push
ret
jnp
ret
pushl
das
mov
stos
fdivrl
jo
and
mov
dec
leave
icebp
inc
pop
orb
fs
xorl
aas
test
sub
dec
scas
divl
add
inc
jo
jns
pop
shlb
repz
inc
mov
pop
aad
add
ret
push
arpl
jo
in
sub
pushf
test
jo
test
push
mov
cmp
pushf
dec
sub
lock
cmc
jge
jns
jo
sub
pcmpgtd
fs
out
mov
dec
push
imul
arpl
jo
and
xor
adc
or
jo
inc
jns
fadds
push
shl
loopne
lret
push
mov
jnp
jmp
xchg
pop
call
ret
xor
lds
das
xor
pop
dec
mov
ljmp
sbb
mov
jne
jo
inc
sub
xorb
push
cwtl
insl
aaa
mov
stos
mov
in
div
lods
xorb
jo
pop
test
inc
jo
mov
xchg
bound
leave
les
jne
or
add
and
cs
in
xchg
insb
jnp
test
push
jns
jmp
jmp
loop
arpl
lods
jo
out
sbb
jns
inc
rclb
lcall
pop
es
mov
fwait
cmp
test
mov
imul
adcl
ja
ret
movsl
imul
lea
aaa
pop
cmpsb
sub
in
jo
stc
into
xor
insl
push
out
in
push
js
mov
call
sahf
mov
and
jb
js
mov
jo
jns
jp
push
xchg
addr16
pop
sub
jo
cmp
jns
add
or
jp
dec
xorl
sub
jo
lahf
mov
jecxz
nop
movsb
mov
jb
cli
push
jo
ljmp
es
or
xchg
nop
les
cltd
fs
js
arpl
leave
outsl
dec
cmpsb
mov
xor
outsb
jecxz
jo
inc
push
insl
sub
dec
jo
cltd
test
push
jns
loop
mov
push
mov
clc
ret
xchg
dec
fists
nop
outsl
rorb
jns
jb
mov
jo
or
xorl
mov
mov
enter
sub
xorl
subb
jge
xor
nop
aad
xor
call
jo
ss
iret
fnstenv
cmpsb
in
mov
cmp
jo
jp
scas
jg
mulb
iret
jo
mov
sbb
das
les
sub
push
jo
scas
cmp
stos
sar
jo
sub
cmp
cmpsb
pusha
push
je
lea
jns
fldenv
jo
push
push
enter
out
js
test
in
jo
and
outsb
mov
fcompl
mov
push
add
xchg
mov
pop
push
gs
push
push
or
or
jae
push
jo
add
add
adc
mov
cmp
test
mov
int
insb
mov
cmp
lret
hlt
push
jae
repz
adc
nop
jno
icebp
icebp
push
icebp
push
icebp
icebp
jne
adc
je
in
xor
andb
sbb
nop
pop
test
or
pop
sub
dec
inc
push
imul
pop
inc
push
lock
xor
push
xor
push
jmp
repz
ud0
test
fs
out
jg
faddp
push
into
and
test
js
decb
pushf
dec
nop
xor
data16
mov
popf
stos
je
nop
movsl
sub
ljmp
addb
and
sti
nop
dec
test
mov
clc
jo
stc
sahf
out
jle
fidivs
into
push
mov
outsb
nop
xlat
pushf
aam
mov
push
shlb
mov
jo
dec
ss
sub
aas
inc
lahf
inc
test
push
dec
cmp
add
pusha
rcrb
inc
jo
jne
sbb
jo
stos
shrl
sub
xor
pop
call
bnd
pop
ljmp
mov
push
repnz
and
popa
xor
xchg
loope
xor
clc
jo
inc
outsb
inc
fcoml
pop
cmpb
pop
cs
xor
testl
cmp
jmp
jb
das
jb
jae,pt
adc
mov
and
mov
or
sub
test
push
notl
xchg
int
cmp
sub
sbb
or
sbb
or
sbb
sbb
sbb
adcb
mov
repz
nop
sub
ljmp
cmpb
mov
jecxz
lcall
push
ficoms
into
xlat
mov
sub
int3
push
xchg
sti
or
adc
icebp
cmc
or
pop
or
ss
lahf
dec
lock
inc
sub
xchg
push
adc
adc
lea
clc
or
or
inc
dec
push
push
add
add
push
jmp
and
out
push
add
jno
jecxz
push
sbb
push
mov
xchg
fisttpl
inc
push
orl
arpl
insl
jo
in
cmpsl
int3
sbb
pop
jo
es
scas
mov
jge
iret
ljmp
adc
sub
mov
outsl
cld
lods
adcb
lea
addr16
fistps
cld
int
adc
pop
or
add
xor
jo
dec
pop
es
sahf
inc
fidivs
pop
cmp
faddl
pshufw
mov
ljmp
fs
jl
pop
cmpsl
mov
cwtl
adc
in
sub
mov
push
sub
jo
icebp
test
adc
dec
mov
std
mov
jg
mov
inc
ftst
cmp
cmp
fidivs
inc
inc
into
shll
dec
jo
jge
lods
dec
xor
repz
stos
cs
sub
ljmp
out
popf
mov
mov
loopne
and
pusha
rcll
jge
push
test
jno
mov
lahf
lds
mov
mov
mov
mov
adc
bnd
sub
aad
mov
and
pop
jne
jo
dec
pushf
push
das
or
or
aas
cmp
mov
sbb
pushf
insb
int3
nop
lret
test
mov
inc
cwtl
xchg
jbe
lds
jo
ja
or
imul
jo
jl
xor
rep
stos
test
sub
push
ljmp
jbe
mov
int
or
repnz
inc
test
stc
lods
jnp
pop
dec
in
mov
fadds
inc
pop
inc
and
scas
dec
outsl
push
mov
sbb
push
jbe
xor
cmp
pop
je
pop
adc
std
add
fs
scas
lea
enter
jge
cmp
std
cs
outsl
js
push
mov
cld
jo
or
repz
dec
stos
cmp
xor
adc
outsl
jmp
cwtl
dec
or
nop
jp
push
pop
adc
jae
jo
pusha
adc
mov
push
das
punpcklwd
or
inc
loopne
add
out
sbb
arpl
js
in
addr16
add
inc
dec
jle
lret
cli
mov
lcall
and
call
jb
sub
jo
into
or
enter
push
sbb
int
cld
sahf
fwait
pushf
repnz
jg
loopne
push
in
pop
cmovo
sub
push
sub
sub
rorl
jo
pop
stos
jbe
cmp
repz
push
push
ljmp
sarb
cwtl
popf
xor
jg
mov
cwtl
xchg
nop
or
pop
push
roll
in
mov
loope
mov
sub
xorb
jecxz
aad
nop
in
push
mov
mov
int
arpl
jp
cli
and
in
fs
pop
jae
jb
mov
jns
btc
into
add
jne
cwtl
jo
pushf
loope
sub
xor
rep
mov
push
mov
xchg
mov
mov
cmpsl
les
lahf
cli
or
lods
cmp
nop
iret
in
int
push
jl
jbe
dec
test
jecxz
in
arpl
jp
jo
ljmp
scas
pop
mov
jo
push
push
das
push
xor
and
je
stos
xchg
jp
inc
or
into
fwait
pushf
insl
nop
xor
fcom
pop
ds
fildll
mov
mov
fisubrs
cwtl
nopl
pop
mov
popf
jo
ss
negl
in
jo
pop
inc
int
mov
jo
or
lea
mov
push
adc
push
mov
cld
or
cmc
jo
ss
cmp
stc
test
js
fdivl
adc
cli
add
mov
push
or
jo
pop
sbb
int
cld
push
nop
rolb
add
in
jle
sbb
jecxz
push
dec
dec
push
lods
xor
mov
mov
repz
jo
push
sti
xor
mov
mov
xor
lds
mov
decb
mov
mov
mov
jno
ja
call
push
mov
std
pop
cs
cld
mov
cmp
shlb
fptan
jecxz
jno
inc
hlt
icebp
jae
rdtsc
pop
das
test
ficoms
mov
push
dec
xor
jno
das
sub
fnsave
push
in
sbb
push
sub
jo
gs
fs
aaa
or
mov
sub
outsl
hlt
ss
cmp
sahf
jge
cmp
std
cwtl
mov
lods
cld
cmpsl
mov
sti
mov
jb,pn
xor
and
popa
mov
push
das
push
lock
scas
jno
lds
call
out
push
repz
jmp
inc
inc
jo
jne
jae
dec
mov
jo
inc
mov
icebp
inc
out
jo
cmc
dec
repz
imul
mull
std
arpl
es
int3
je
add
jo
adc
std
lock
sti
jb
pop
sub
js
clc
insl
jo
das
in
cmp
jge
cmp
jnp
ja
mov
lock
testb
test
mov
jo
or
xor
mov
mov
incb
outsl
mov
xor
cwtl
pop
inc
jp
xor
rclb
rcrl
adc
dec
xor
mov
xor
mov
mov
test
pushf
aaa
aas
cmp
jge
cmp
lea
push
cld
je
out
jnp
lahf
adc
and
popa
repnz
jno
mov
gs
mov
outsl
stos
cs
test
jne
xor
or
imul
cli
xor
fimuls
insl
rorl
cmp
jp
push
clc
push
hlt
push
xlat
jo
adc
je
imull
sbb
mov
inc
cwtl
test
pushf
mov
dec
mov
dec
insb
or
push
loope
fisttpl
sub
adc
jns
cmp
jo
out
pop
lds
dec
fnstsw
fnstenv
out
cmpl
imul
mov
fisttpl
in
in
addb
add
or
pop
xor
mov
xchg
loope
and
dec
aaa
add
mov
push
adc
push
jmp
jno
push
mov
sbb
dec
idivl
movsl
push
push
sub
jo
mov
jmpw
js
dec
cmpsl
add
loopne
ss
int3
mov
adc
orl
cmc
int
or
sarb
mov
pop
mov
push
and
shlb
and
pop
push
add
mov
insb
pop
aaa
cltd
outsb
dec
push
bound
int3
fisubrs
jae
dec
mov
mov
xchg
jnp
xchg
je
jo
pop
cld
sbb
push
and
cli
xchg
repnz
out
push
flds
lcall
mov
ja
lret
dec
mov
mov
js
nop
xor
xchg
fimuls
jns
or
pop
jae
jo
adcb
push
rorb
loopne
aam
and
cli
jbe
jno
push
das
fs
es
xchg
into
enter
std
int3
add
rorl
imul
icebp
jmp
xchg
shrb
int3
inc
sub
pop
mov
lahf
in
fdivrs
and
shr
addr16
dec
dec
negl
jl
push
hlt
sbb
mov
cltd
leave
sub
cli
dec
jnp
mov
cmp
jecxz
jb
cmpsb
mov
jmp
movsl
dec
jl
aam
notb
out
lea
inc
call
nop
movsb
pop
pop
xlat
inc
jmp
jo
xchg
test
fsubs
adc
xchg
fs
cli
insl
das
in
sti
pushf
push
xorb
mov
inc
push
movsb
lock
xlat
dec
shlb
cmpsl
mov
pusha
arpl
push
imul
arpl
fwait
jno
pusha
shl
jb
aam
divl
adc
int3
pop
add
xor
jo
cwtl
cmc
aad
punpckldq
pop
movsb
dec
stos
or
push
ret
ljmp
andb
fstpt
or
mov
pop
mov
jo
sbb
or
sub
add
cmp
mov
pop
mov
mov
adc
fdivl
cwtl
or
and
sbb
push
mov
inc
or
xchg
inc
jo
jge
cmp
mov
shll
jle
pushf
pop
shlb
xchg
rorl
shl
sbb
jp
mov
and
popa
cmp
jns
inc
sarb
push
xlat
inc
mov
rorl
pop
roll
ret
push
cmp
jnp
jo
in
xor
and
xchg
cld
mov
int
or
jecxz
test
lock
outsl
movsl
push
jno
jo
jne
fs
test
nop
and
lahf
rorb
jo
sahf
xchg
inc
jae
fs
jo
jmp
roll
cli
jo
hlt
rep
xchg
out
jo
jnp
je
jecxz
push
jge
sbbb
ja
pop
repz
jo
dec
xchg
adc
cli
imul
jo
adc
shlb
cmp
push
cmp
push
inc
mov
lock
sub
std
jle
xor
loope
pusha
xchg
jo
jnp
push
dec
test
push
cwtl
in
shrl
jne
movsb
mov
or
pop
loope
icebp
mov
scas
nopl
jo
movsb
inc
popf
shl
das
sub
cli
xor
or
setge
fs
test
sub
cli
decb
jnp
js
jno
mov
scas
repz
inc
adc
outsl
push
and
mov
push
jecxz
imul
ss
ja
xor
sbb
jecxz
push
inc
jo
sub
push
mov
dec
insl
sti
cmp
outsb
and
push
pop
jl
loope
insl
add
scas
jo
sbb
shl
and
jnp
xchg
js
ret
or
dec
scas
jl
ja
mov
clc
repz
jae
sub
jne
add
mov
dec
sub
jns
push
cmp
pop
xchg
loope
cmp
ljmp
rcll
xchg
into
jo
pop
sbb
sbb
jle
sbb
jae,pn
sti
bound
icebp
js
jnp
test
xchg
jo
xchg
outsb
ljmp
jo
scas
pop
aas
cmpsl
std
jecxz
jo
jnp
and
cwtl
jo
ljmp
jo
inc
popa
xor
inc
sbb
jne
je
nop
pop
fstl
ljmp
movsb
mov
xchg
addr16
dec
inc
jo
sbb
xchg
cmp
jo,pt
mov
mov
and
mov
push
sbb
xchg
jmp
xlat
sahf
cmpsl
lods
sub
pop
adc
or
or
xchg
jnp
mov
jo
fs
sbb
arpl
imul
repz
mov
into
sar
adc
sbb
repz
or
sti
adc
pop
popf
jo
xchg
shrl
nop
dec
cmp
scas
jle
push
mov
outsl
lret
test
push
or
push
jnp
jle
lock
in
add
jp
mov
or
arpl
pop
mov
in
gs
add
jbe
imul
pop
out
mov
shr
and
dec
je
std
or
sub
or
sbb
jno
jb
jo
shl
scas
inc
mov
scas
jo
fdivrl
sub
sbbb
inc
pop
jo
jge
test
scas
mov
mov
jnp
jo
jb
and
jmp
std
adc
js
cmp
cs
xor
loopne
mov
and
mov
adc
loope
cmp
jo
in
pop
dec
ljmp
std
push
jle
fs
sub
fisubs
xor
inc
je
jp
jo
cld
dec
test
jo
out
jnp
in
js
pminub
idiv
jo
xchg
jo
sub
or
nop
xor
cmc
sarb
sub
ret
enter
and
insb
mov
xor
or
cwtl
jo
jne
lods
sbb
imul
fimuls
dec
fnsave
and
mov
lea
dec
jo
jecxz
mov
stc
jo
dec
imul
jo
gs
rcrb
cmp
sub
cmp
adc
push
inc
and
add
pop
ret
pop
push
nop
mov
lea
faddp
out
pusha
flds
movsl
repz
jo
mov
clc
imul
jns
xchg
cmpsb
popf
jno
out
sbb
jo
jb
or
sbb
into
outsb
int3
cmp
xor
stos
dec
push
add
pop
js
insb
adc
jo
xor
jo
push
jne
ss
lea
sti
push
and
std
mov
pop
icebp
jo
test
mov
imul
orl
mov
aam
roll
cld
jo
fsts
subl
lahf
jecxz
icebp
das
jo
popf
dec
and
test
les
decb
xor
inc
mov
jo
push
cli
jno
push
std
sahf
push
adc
push
xlat
cld
adc
je
jmp
sbb
sbb
adc
mov
in
outsb
adc
jecxz
mov
ret
jo
mov
cmp
dec
notl
test
adc
cltd
addr16
mov
jae
js
inc
lds
sub
mov
jo
gs
int
pop
stc
jo
pop
repz
add
rcrl
mov
mov
adc
lods
xor
popa
mov
lret
in
add
iret
imul
mov
jp
jnp
jo
dec
push
aas
mov
adc
andnps
imul
sbb
cwtl
and
jo
jecxz
mov
int
dec
out
sbb
cmpb
test
jo
stc
xor
cs
imull
mov
jo
insb
push
inc
mov
jecxz
push
dec
pop
repz
aam
aaa
inc
xor
and
dec
cli
rcll
xor
jae
mov
in
daa
xchg
jo
loopne
or
ja
ljmp
xchg
push
add
sbb
dec
mov
out
sti
xor
mov
push
rcr
pop
js
cltd
ja
cmp
sbb
mov
pop
je
out
pop
mov
and
pop
dec
jo
rcr
repnz
mov
call
std
insb
notl
aas
inc
sti
jg
ret
cmp
sbb
dec
push
std
imul
rcrl
lahf
jo
xor
movsw
mov
lret
jns
pop
jl
repz
sub
add
aaa
das
xor
stc
jo
scas
call
jnp
sbb
dec
cmp
loope
dec
xchg
repnz
jo
aad
mov
jo
jne
sti
add
or
mov
enter
pop
adcb
jge
jne
in
jno
ja
clc
arpl
cmp
add
out
jne
cmp
push
cltd
pop
jg
je
enter
mov
shlb
xor
sti
cmpsl
sbb
xchg
dec
rep
push
mov
xchg
push
mov
mov
sub
test
test
test
fisubrl
xor
fsubrs
cmp
adc
lcall
jns
jp
xlat
pop
fidivl
mov
push
sbb
inc
and
xorb
push
enter
inc
call
and
sbb
roll
mov
jecxz
xorb
insb
mov
je
xor
lcall
mov
and
jno
lea
andb
das
int3
cmpsl
loopne
pop
test
xchg
data16
and
or
mov
jo
loopne,pn
in
jae
test
data16
popa
les
jo
lds
and
mov
in
mov
pop
jo
cltd
xlat
sub
mov
dec
inc
adc
jp
ds
mov
dec
out
inc
pop
mov
call
push
ss
outsl
jns
sarl
add
dec
jno
mov
lds
mulb
adc
jno
push
shlb
inc
lahf
fnsave
lcall
pushf
push
mov
outsl
cmp
xchg
aaa
scas
test
add
pop
dec
jl
jae
sarl
xchg
imul
mov
inc
add
sahf
inc
jp
cmpsb
add
inc
out
arpl
iret
pop
repz
jle
rolb
jae
insb
nop
lahf
pop
and
arpl
icebp
dec
or
adc
jle
add
fistpll
loop
cli
leave
lock
je
jecxz
lret
loop
jns
push
xorb
fs
jl
jae
fs
sub
out
push
push
adc
sub
dec
pop
outsb
fs
arpl
imul
mov
xlat
pop
dec
cltd
std
shl
in
data16
cltd
cmc
push
and
cmp
lret
fdivr
xchg
ret
mov
mov
jl
pop
imul
add
rorb
lahf
and
push
std
pusha
xor
pop
in
fwait
add
sti
shl
pusha
lock
mov
mov
fcomps
aaa
outsl
fistpll
scas
adc
nop
pop
movsb
std
jbe
mov
xor
lahf
jg
fsubrs
push
hlt
shlb
das
lahf
out
in
out
add
jle
push
mov
jo
xor
lret
mov
shl
xlat
pop
out
shrb
and
push
pop
cmp
jmp
fs
or
loop
in
pop
scas
cltd
bnd
dec
int
push
repz
cli
push
xlat
xchg
sub
mov
fucomip
js
das
cmp
in
push
in
movsl
into
xchg
pusha
mov
pop
lds
jae
push
fistps
and
fimuls
jbe
push
cmp
pop
loop
xor
push
iret
orb
int
or
out
pop
scas
insl
push
jo
mov
cmpb
jns
scas
jnp
out
ljmp
xor
mov
mov
jne
aaa
pop
cltd
jbe
ja
cs
je
xchg
inc
ret
lea
lock
push
shlb
lock
stos
push
pop
lcall
call
dec
xor
xor
dec
push
pop
aad
cltd
cmpsl
int
cmpsl
not
js
std
or
in
lcall
mov
cmp
enter
xchg
fs
jnp
add
jo
pushf
aad
shll
adc
jge
jae
pop
enter
je
and
xor
mov
sub
inc
pusha
lock
jnp
int
out
shll
mov
std
jl
cmc
data16
lock
jg
cld
jg
ret
push
xor
sarb
jmp
jne
jo
mov
out
fsubs
jle
push
mov
jg
mov
fldl
in
jno
lock
mov
push
mov
jp
daa
jge
in
and
mov
cmc
fsts
cmpsb
sti
mov
fucomip
fdivrl
sets
pop
aam
sahf
aaa
movsl
inc
mov
mov
repnz
mov
push
sub
cmpsb
movsb
jge
fs
inc
mull
sub
sub
xorb
repz
loop
hlt
iret
add
test
iret
cmp
ljmp
pop
sbb
xor
mov
shrl
cmc
lds
insb
pop
lea
inc
addr16
clc
adc
scas
dec
push
jae
lods
lock
mov
inc
dec
push
or
xor
push
fs
das
add
clc
xchg
lret
push
ss
mov
dec
xchg
sbb
pop
mov
call
out
aaa
sub
push
das
fcoms
scas
jmp
ja
repnz
imul
push
es
arpl
into
jmp
fs
or
in
xor
pop
jnp
xchg
cmpsb
arpl
test
outsl
jge
mov
push
out
push
lahf
jno
and
mov
sub
and
mov
mov
insl
pop
std
pop
out
cltd
inc
mov
arpl
mov
sbb
push
mov
jecxz
out
pop
or
scas
in
sbb
add
and
out
mov
xchg
imul
cmp
in
mov
orps
dec
icebp
jno
sbb
int
imul
add
xor
das
pop
xchg
lods
pop
mov
mov
jle
pop
pop
dec
out
lea
ret
cmp
sub
iret
inc
icebp
xor
loope
mull
jns
jg
jmp
push
cld
sti
mov
data16
dec
dec
adc
or
cmp
leave
dec
or
add
xor
mov
mov
xchg
pop
ret
lods
mov
xchg
scas
inc
jae
aas
repnz
dec
lahf
inc
lock
pop
gs
jne
aad
mov
stos
mov
in
loopnew
std
or
pop
push
daa
dec
sti
pop
sti
scas
cmovbe
ljmp
clc
inc
jne
addr16
and
xor
outsl
mov
push
or
bnd
xor
mov
xchg
pop
data16
std
ds
lock
sub
xchg
cmp
jp
pop
jge,pn
clc
adc
movsl
insb
lcall
ja
jle
out
or
stc
mov
mov
leave
jl
daa
or
hlt
sbbb
and
xor
sbb
ror
aaa
mov
sub
inc
fidivrl
subb
cs
pop
std
pop
xor
fs
cld
jae
jl
adc
cmc
jo
fistps
gs
mov
inc
fadd
imull
pushf
pop
shlb
xchg
adc
insl
out
outsb
into
jns
aad
cmpsb
repnz
ljmp
jae
lods
add
push
fcoms
scas
mov
rolb
out
bound
cmpxchg
sub
test
mov
test
mov
insl
jae
xor
push
add
das
mov
xorb
push
sub
dec
shlb
push
adc
mov
dec
test
xor
aam
aaa
es
cltd
mov
mov
adc
rcrb
fs
lahf
ret
sbb
sub
scas
mov
jg
aad
or
push
dec
in
dec
ljmp
mov
adc
out
dec
inc
sahf
add
sub
or
xchg
push
fwait
mov
cmp
mov
xlat
fcmovnu
or
mov
inc
xchg
in
pusha
jno
and
icebp
push
xor
out
sti
lahf
lret
sub
inc
pusha
inc
shl
sbb
push
fistpll
std
mov
out
jne
fs
cmp
jge
into
scas
pop
mov
andb
stos
xchg
jmp
loop
fsubl
out
arpl
mov
fwait
rcll
xchg
std
lcall
dec
cmp
mov
std
scas
dec
xchg
das
add
mov
push
push
out
sahf
mov
cs
aaa
rcrb
repz
pusha
xchg
sbb
cwtl
imul
subl
pop
scas
jg
xchg
jge
add
pop
dec
push
arpl
cld
cmp
fisttps
in
jb
inc
push
pop
or
cltd
in
xor
scas
lock
dec
bound
rorl
jno
mov
int3
ret
dec
das
mov
add
in
sti
push
jl
inc
lods
push
leave
in
cld
sahf
xchg
cmpb
addr16
into
mov
insl
imul
xor
pop
lea
rorl
addr16
push
xlat
xchg
imul
mov
jb
sub
mov
adc
ja
cmpb
std
push
ljmp
lret
lcall
cmp
jnp
insb
push
out
mov
in
jp
jge
stos
ja
mov
les
cmpl
dec
mov
cld
out
ret
add
dec
sbb
testb
clc
nop
mov
sub
or
repz
mov
adc
andb
fiaddl
lock
stos
pop
xor
outsl
sbb
add
outsb
push
dec
loope
js
mov
incl
hlt
mov
lret
pop
jmp
xchg
mov
add
adcb
push
jle
sub
push
ret
loope
mov
ljmp
in
dec
inc
mov
stos
jno
stos
imul
fucomp
stos
int3
push
es
testl
push
cltd
fs
in
inc
dec
and
add
popf
fcoms
mov
xor
inc
dec
lea
and
out
mov
lods
push
adc
out
outsl
je
jmp
jmp
lock
mov
sti
mov
cmp
movsb
mov
sarb
fadds
scas
out
in
inc
out
add
jg
jne
dec
xchg
mov
sub
test
lock
insb
sahf
fcoml
jmp
xor
jbe
lcall
push
jmp
add
imul
push
pop
adc
xchg
stos
xor
sbb
fs
mov
mov
jae
pop
call
mov
mov
push
fcomi
outsb
stos
movsl
and
sti
sub
call
push
jb
jl
lea
aaa
push
lods
cs
int3
imul
jae
lcall
mov
test
push
aam
imul
sti
xor
das
jae
pop
outsl
daa
loope
lret
adc
xchg
sahf
jge
jnp
xor
cwtl
mov
sub
inc
incl
jbe
scas
lret
jl
nop
packsswb
mov
outsb
xchg
scas
outsb
push
popf
push
loopne
aad
cmp
pop
mov
and
inc
mov
xchg
jo
pop
add
add
fs
ret
pushf
test
repnz
xor
add
push
jge
adc
shlb
sub
imul
push
pop
jno
arpl
les
add
push
scas
in
faddl
mov
sub
pop
jle
nop
jecxz
cmp
jmp
enter
data16
insl
lea
push
mov
pusha
jne
outsl
fmuls
lahf
cli
imull
push
in
xchg
sbbb
cmp
ljmp
popf
cmp
jmp
cmp
xlat
fistps
jge
loope
repz
fcomp
addr16
mov
cmp
out
in
mov
pusha
mov
scas
sub
mov
dec
fdiv
add
mov
jnp
repz
pushf
push
popl
aam
jmp
dec
je
cmpsl
movl
push
shll
jp
jle
jge
repz
insl
push
jno
xor
cmp
ja
outsb
aam
pusha
jge
out
loopne
outsl
aas
dec
mov
adc
out
les
mov
pop
lret
jg
sbb
outsl
fdiv
sub
inc
dec
pop
mov
pop
xchg
mov
or
lcall
push
jge
imul
xchg
sbb
mov
mov
lock
ret
sub
inc
imul
out
lods
cmp
out
inc
mov
mov
xor
jmp
inc
ss
add
cmpsl
xchg
jmp
imul
adc
and
scas
dec
mov
leave
fstpl
ss
xchg
sub
adc
imul
mov
in
jnp
sbb
std
cmp
sahf
jnp
push
cmpsb
pop
or
dec
dec
pop
cs
outsb
push
cmovno
subl
arpl
push
dec
insb
and
les
cmp
sub
lods
mov
nop
mov
cmpsb
aaa
pushf
jne
pop
xor
iret
sbb
add
fdivrs
xor
cmp
jno
rorb
cmp
jge
xchg
mov
mov
gs
iret
in
xchg
adc
lahf
ret
clc
ret
cmpsb
pop
pop
sub
clc
dec
lfs
nop
jae
or
out
mull
push
mov
sub
repnz
sub
dec
lret
mov
nop
arpl
xchg
inc
lret
jae
cmpsb
cmp
js
fs
out
push
gs
fmul
sbb
enter
xchg
adc
pusha
icebp
push
push
pop
dec
adc
pop
dec
pop
leave
mov
fs
daa
jmp
sub
test
leave
icebp
xlat
or
mov
mov
inc
xchg
cli
sti
mov
xchg
inc
fcmovu
outsb
pop
into
mov
pop
out
gs
popf
inc
mov
mov
adc
xorb
mov
out
xor
std
mov
sub
test
jae
ret
das
into
lods
scas
lock
cltd
adc
xor
loope
fcoml
lret
in
pop
movsb
iret
punpckhwd
mov
push
add
dec
mov
push
push
lret
cmp
inc
lret
pop
mov
mov
adc
ret
adc
push
shlb
mov
mov
push
sbb
adc
pop
mov
scas
enter
pop
push
fstpl
and
bound
ljmp
mov
std
xchg
add
push
data16
cltd
inc
out
push
or
testb
out
lock
dec
scas
and
mov
push
pushf
push
scas
dec
xor
xlat
imul
inc
cs
adcb
inc
push
cmpsb
sub
mov
pop
int3
jle
jne
inc
arpl
fdivrl
popl
call
out
dec
mov
or
jno
adc
loop
aas
loopne
outsb
adc
into
fdivs
cmp
test
sarl
cld
std
fistps
pop
push
mov
pop
add
inc
out
sarb
movsb
push
je
clc
or
aad
adc
int3
jmp
fyl2xp1
mov
jmp
dec
mov
mov
int
jle
pop
arpl
popl
add
dec
mov
pop
data16
adc
xor
shll
push
lds
aas
cmp
in
mov
dec
rorl
scas
imull
test
xor
cmovge
jge
sub
push
sbb
rorb
jo
mov
mov
sbb
add
insl
popf
iret
push
imul
mov
into
lahf
fldl
dec
cld
in
inc
pop
call
cmp
cs
mov
cmp
testl
xchg
xor
xor
mov
iret
push
call
pop
rcl
xlat
mov
ja
add
add
push
enter
fdivrl
mov
rol
dec
arpl
push
mov
mov
mov
jb
or
insb
insl
das
mov
and
call
std
ficompl
lods
or
xorl
outsb
push
jg
repz
nop
add
pop
dec
int
xlat
push
outsb
lock
in
fs
cmp
inc
pop
outsl
mov
pop
scas
in
and
mov
shr
lock
data16
jmp
adc
pop
into
gs
ljmp
xchg
js
arpl
xchg
in
dec
push
into
stos
imul
cmc
enter
lods
mov
fwait
lahf
mov
imul
push
pop
rcl
int3
xchg
xchg
in
xchg
xchg
push
mov
inc
jae
jl
xchg
out
cmc
pop
push
sbb
mov
std
push
add
xorb
insb
pop
jno
lea
jp
dec
aas
faddl
xorb
ds
mov
gs
movmskps
rcr
jge
lret
lahf
insb
inc
das
in
add
mov
aaa
pop
je
lahf
xor
xchg
inc
rcrb
rcr
out
push
aad
push
sub
pop
xlat
test
mov
mov
sahf
repnz
int
sub
std
lods
mov
std
push
or
xor
push
sbb
add
mov
xorb
lds
pop
sub
push
into
jmp
sub
xor
jae
std
aas
aaa
pusha
xor
scas
xchg
mov
push
sbb
cmpsb
pop
cmpsb
push
sbb
dec
arpl
add
lods
push
pop
mov
mov
je
and
push
testb
cmp
loopne
jno
jmp
jne
out
ljmp
pop
push
or
rcrl
sub
js
out
pop
andl
fcoms
out
and
sarl
clc
scas
push
testb
push
subb
inc
outsb
mov
jo
dec
arpl
mov
shrb
dec
das
adc
cmpb
inc
enter
cmp
cs
add
das
cli
xchg
out
dec
add
test
out
sub
nop
mov
push
inc
sarb
cmp
sti
inc
mov
jge
andl
cmp
xorb
mov
dec
xchg
pop
adc
jno
xchg
das
xor
jne
js
nop
ret
dec
popf
xor
adc
mov
jne
in
popf
add
jb
lahf
dec
shll
mov
push
stos
cwtl
push
dec
rcll
addr16
test
mov
inc
mov
je
cwtl
cmp
inc
sub
dec
cmp
push
cmpsb
jbe
mov
insl
daa
js
rclb
add
cmp
fistpll
and
dec
and
imul
pop
inc
add
outsb
mov
notl
and
or
push
roll
rcl
sub
jle,pn
jae
dec
xchg
dec
sbb
jg
incb
cmp
mov
pop
push
push
loopne
das
or
mov
mov
loope,pn
daa
data16
std
fsubr
or
mov
clc
push
push
mov
xor
jne
in
lcall
push
ljmp
nop
and
stos
je
push
xor
xchg
fcoms
pop
mov
cmpsb
xchg
push
das
lret
dec
mov
push
mov
scas
insb
insb
repnz
insl
dec
push
test
mov
out
imul
or
icebp
jno
dec
int
out
insb
add
insb
xchg
icebp
and
dec
inc
arpl
jl
insb
xchg
sub
push
mov
outsb
testl
ljmp
imul
aas
into
inc
call
gs
daa
popa
push
mov
iret
into
insb
mov
jle
daa
imull
pop
jg
js
std
shrb
pmulhuw
pop
int
outsb
shrb
lods
dec
jecxz
jno
jg,pn
fcomps
sub
imul
out
adc
jle
fisttps
dec
ljmp
repnz
insb
testl
jmp
in
jbe
ljmp
jne
repz
shlb
daa
imul
jns
adc
jge
ja
outsl
pop
int
std
dec
addr16
ljmp
jb
jg
mov
pop
bnd
nop
xlat
arpl
out
sub
dec
jno
mov
or
inc
jl
arpl
insb
and
push
out
mov
hlt
jno
icebp
push
push
popa
in
add
movsb
xor
jo
jno
mov
insl
jg
jnp
ja
mov
push
imul
out
ljmp
lock
je
pop
jns
out
lahf
test
outsl
addr16
xchg
inc
or
push
in
imul
mov
and
iret
ja
mov
outsl
aas
into
fdivrs
mov
sub
mov
packssdw
add
mov
bound
sub
arpl
mov
push
outsl
arpl
es
scas
movsb
or
jne
loope
fsts
add
add
std
mov
cld
call
loop
jno
push
jo
push
fisttps
mov
ja
inc
nop
je
jae
stc
sbb
xlat
pusha
arpl
movsl
dec
imul
loope
or
mov
loopne
dec
xchg
mov
or
dec
cmp
sti
lods
rclb
hlt
push
div
cltd
mov
aas
jbe
int
xorb
scas
subb
fs
jmp
out
mov
jae
mov
outsb
cmpsb
mov
push
pop
sbb
scas
xorl
outsl
mov
add
pop
pop
in
mov
dec
fdivs
xor
push
lret
movsl
xchg
lock
xchg
lock
sbb
mov
cli
push
dec
aaa
sbb
pop
sub
push
cld
push
hlt
fwait
dec
loope
incb
scas
adc
push
rcl
push
sar
xor
xchg
or
or
sbb
inc
pop
mov
movsl
aam
in
cmp
pop
push
sbb
aad
fsub
out
sbb
loop
or
mov
mov
movb
loopne
xchg
fnstenv
sahf
adc
xorb
sub
xchg
push
stos
inc
loope
mov
mov
cltd
imul
jno
jae
cmpsb
std
pop
push
test
jg
stos
repz
pop
fs
inc
or
push
pop
sahf
je
out
arpl
lods
jmp
dec
stos
insl
pop
sar
xor
adc
mov
out
es
daa
jmp
xor
fcomps
es
cmpb
into
add
lods
movsb
es
pop
cmp
jge
pop
add
lock
xor
jb
cwtl
sbbb
mov
imul
fdivp
je
sahf
cmp
and
jmp
jb
popa
jnp
mov
or
stos
into
jae
loope
mov
cmc
pop
mov
addr16
push
repnz
mov
test
xchg
adc
mov
pop
pop
mov
hlt
inc
fldlg2
scas
test
jns
mov
loope
subl
nop
pop
in
rorb
loopne
in
lock
hlt
pushf
les
jo
fdivrp
test
jne
pop
push
pusha
mov
fcoms
and
add
leave
into
dec
add
or
fwait
rclb
insl
jae
xor
push
mov
es
ljmp
std
mov
stos
stc
and
adc
pop
mov
cmpsl
cmp
stc
shlb
push
aad
inc
mov
jo
arpl
mov
xorl
cli
les
sahf
pop
in
mov
or
js
das
imul
jbe
push
push
mov
scas
mov
je
inc
mov
out
mov
pop
jb
xor
pop
rcl
jno
js
jae
xchg
flds
mov
nop
cmc
js
punpckhdq
mov
or
mov
jmp
js
bswap
shll
popf
mov
test
dec
and
jae
gs
push
out
ljmp
in
mov
mov
subl
cmpsb
sub
mov
xchg
rclb
arpl
js
and
insb
xchg
lds
mov
mov
aas
jl
test
pusha
push
adc
sub
fistps
sub
mov
pop
cltd
outsb
cmp
imul
out
sub
scas
push
nop
rolb
and
ljmp
lea
jno
jae
sahf
jae
and
popf
aaa
pop
arpl
add
xchg
mov
add
dec
jno
sbb
out
xor
js
js
repz
sti
pop
push
adc
push
mov
lods
lods
add
jle
jae
xchg
mov
sub
cmpsb
mov
loop
in
dec
out
inc
shlb
sti
or
pusha
cmc
sub
xchg
inc
sub
xchg
cmp
les
jg
jns
std
cmpb
sti
or
das
outsb
test
xchg
cli
pushf
ds
repnz
fstpt
scas
pop
mov
hlt
or
mov
jecxz
inc
mov
daa
jp
in
push
mov
gs
sub
fimuls
sub
mov
mov
mov
in
push
mov
adc
cmpsb
pusha
pushf
push
jo
arpl
jle
out
adc
scas
shl
sbb
push
loopne
stos
xor
jl
fcomps
mov
push
mov
sub
jnp
sub
mov
fwait
pop
repz
fxch
add
addb
mov
jae
and
pop
dec
mov
imul
rcr
out
fimuls
arpl
stos
rclb
push
std
movsb
sbb
push
sbb
loopne
cmp
xlat
jno
or
mov
lods
enter
dec
and
xchg
xor
jmp
pop
subb
xor
mov
mov
sbb
adc
sub
mov
cmpsb
aam
sub
loope
pop
lock
mov
mov
js
jae
popa
mov
mov
jo
frstor
pop
add
or
call
mov
insb
jae
xchg
jbe
push
mov
out
sub
js
mov
mov
mov
jp
idiv
outsl
addr16
and
gs
xor
into
jno
and
mov
xchg
lods
jecxz
xchg
cmpsl
data16
mov
push
insb
mov
fmulp
adc
xchg
xchg
push
xor
rclb
sub
outsl
mov
jmp
adc
imul
lock
xor
pop
push
xor
adc
fstl
push
shlb
and
test
pop
inc
inc
dec
pop
or
push
sar
ljmp
jb
rorb
lods
test
adc
push
mov
sbb
sbb
cltd
addb
out
clc
out
push
fnstsw
mov
adcb
and
mov
mov
in
jb
jae
jl
push
push
lahf
sbb
and
ret
in
out
std
dec
jl
dec
test
pop
in
add
out
mov
jb
jo
pop
repz
push
fistps
lret
or
mov
xchg
xchg
jo
shrl
mov
pop
push
stc
fisttpll
aaa
inc
xor
mov
pop
push
fiadds
or
lcall
jmp
add
es
aad
inc
out
jae
mov
arpl
push
push
je
dec
ret
sbb
lds
jmp
mov
cltd
out
jp
ja
mov
int3
repz
jbe
scas
xor
jo
mov
xchg
jb
pop
and
lahf
xor
in
arpl
movsl
es
jecxz
loop
test
mov
test
std
mov
das
aas
jg
in
pushf
mov
jg
out
jmp
bound
push
dec
cmpsl
pop
xor
out
sahf
outsl
aad
lahf
lods
pop
xor
add
stos
jmp
fcomps
push
rcrl
sbb
and
mov
in
push
pop
js
insb
insl
jae
pop
ficoml
push
nop
push
lret
ret
xchg
enter
sub
js
arpl
cmpsb
outsl
int3
lock
jl
inc
mov
lods
scas
push
dec
call
jae
xchg
sti
inc
xchg
push
inc
nop
inc
jp
movsb
adc
lcall
jnp
adc
scas
mov
sbb
mov
cmc
push
dec
movsb
mov
jno
out
jae
or
lds
sub
push
test
inc
outsb
xchg
jae
int3
add
shr
test
sub
xchg
lock
lods
testl
or
ja
mov
int3
sti
cmpsb
out
cmp
pop
jne
mov
adc
mov
push
nop
out
xor
cld
mov
sbb
push
xchg
jmp
ret
cmc
daa
ret
addr16
xor
lock
lock
jmp
mov
movsb
lea
int
push
ret
scas
outsb
out
ucomiss
push
out
jmp
push
fs
movsb
nop
imul
pop
sub
lock
lretw
je
pusha
insl
outsb
fldt
hlt
dec
dec
dec
jmp
es
std
or
outsb
rcrl
dec
add
inc
or
push
mov
ja
fwait
sub
pop
or
dec
dec
push
push
je
test
fucomp
lds
xor
and
testl
mov
dec
dec
lret
rorl
mulb
xor
push
insb
mov
popa
ss
in
push
adc
inc
movsl
jle
nop
mov
int3
push
stos
insl
push
dec
in
cs
jno
cli
dec
xlat
dec
jns
out
scas
out
inc
xorb
mov
ret
int
or
push
ret
inc
push
das
call
add
les
inc
iret
dec
scas
in
call
fnstcw
shlb
lock
sbb
push
outsl
popa
jg
add
xor
fcompl
in
lock
insl
add
dec
pop
shlb
push
enter
outsl
shr
and
xchg
mov
dec
dec
nop
jle
dec
outsl
sub
cwtl
fs
outsb
pop
js
push
mov
mov
jp
imul
mov
insb
dec
outsl
outsl
pmaddwd
jns
in
in
in
repnz
jl
imul
out
dec
and
insb
clc
dec
stc
cmp
pushf
test
ljmp
test
pop
dec
in
xchg
push
pop
sub
mov
sub
push
lret
or
jb
jno
sub
gs
mov
insb
push
jno
pushf
popa
lods
inc
dec
lods
jg
jb
ja
jecxz
out
imul
cmp
outsb
jbe
in
popa
stos
test
cmovg
jle
imul
data16
sarb
push
ja
bound
fs
or
stos
xchg
fs
stc
shll
insl
push
int3
sub
dec
cli
push
sub
loop
push
inc
cmp
inc
sbb
jl
pushl
jo
sbb
arpl
insl
or
rclb
iret
or
mov
outsb
adc
pop
test
cmp
xchg
mov
and
pusha
lret
sahf
addl
outsb
xor
and
lds
repz
les
pop
nop
push
test
jle
ss
push
pushf
push
arpl
or
jno
jb
out
mov
leave
sbb
insl
xor
jmp
lahf
stos
lock
push
icebp
push
push
test
sar
push
mov
adc
mov
out
sar
mov
int
xchg
jg
push
je
in
into
add
sub
adc
push
jg
mov
bnd
push
int3
and
test
stos
loope
out
mov
ret
clc
ljmp
and
popf
stos
fidivl
push
sub
imul
jo
mov
and
int
dec
enter
cs
push
mov
imul
fs
xlat
sahf
sub
in
pop
sub
push
in
push
or
ss
sbb
sbb
test
int3
imul
hlt
push
icebp
add
nop
stos
push
icebp
call
roll
mov
mov
scas
rorb
push
mov
jo
add
push
movsl
pop
sbb
push
jo
popa
inc
js
fs
sti
inc
lods
out
aas
cwtl
jmp
push
cs
add
sahf
jbe
jnp
sbb
and
mov
jo
dec
aad
sub
jne
ficoms
nop
scas
mov
pop
into
je
data16
add
in
fsubrp
xchg
aaa
in
xchg
psllw
inc
inc
lock
jo
out
sub
lods
xchg
lahf
rclb
jle
pop
cmp
mov
insl
stos
mov
adc
shl
mov
in
jo
arpl
sbb
sahf
jp
nop
xchg
jae
add
nop
inc
les
inc
jnp
and
jp,pn
ret
outsl
fs
cmp
in
mov
pop
imul
lret
gs
jo
in
xor
xor
jo
push
dec
test
cmc
setge
je
clc
jo
imul
push
dec
mov
loope
jo
das
mov
push
loop
in
leave
push
xchg
bound
cmpb
adc
jo
leave
outsb
nop
test
cmp
int
test
mov
jge
push
popf
imul
or
mov
test
stc
orb
xlat
sbbl
adc
stc
scas
cmp
mov
sub
pop
int
or
xchg
ljmp
pop
add
fdivp
jo
dec
out
mov
sbb
adc
xor
inc
xchg
in
arpl
push
aad
lcall
lock
js
jne
movsl
jo
jno
or
push
insb
sahf
in
scas
imul
mov
mov
push
add
mov
xchg
or
mov
lods
jo
adc
out
int
outsb
pop
dec
xor
jl
jns
fwait
jne
jl
mov
or
sarb
push
xor
icebp
addr16
sub
jo
mov
mov
push
push
enter
push
rcll
insb
pop
dec
sub
gs
pop
push
out
movsb
mov
xlat
insb
pop
push
adc
dec
fadd
mov
sub
adc
scas
jno
jo
inc
push
xchg
pop
inc
push
cltd
jo
out
mov
rcr
xor
push
jo
xchg
pop
in
add
cmpb
ror
jo
icebp
decb
frstor
nop
xor
jnp
ret
lods
data16
and
popf
jmp
sub
xor
movl
pop
scas
mov
jg
add
xor
out
pop
push
fistpll
xorb
stos
lock
int
pop
inc
call
subb
push
int
push
pop
mov
int3
mov
mov
jae
cmp
sbb
mov
sahf
lock
dec
add
divl
or
je
mov
daa
push
push
sub
arpl
push
jg
and
push
es
outsb
pop
subb
ss
and
ja
ljmp
fidivrs
cltd
jg
imul
add
jae
push
sub
cmp
bound
or
pop
cmpsl
sub
sti
lods
add
jo
scas
or
stc
negl
push
ljmp
clc
fsubrl
pop
or
inc
jecxz
add
aad
add
adc
adc
lea
ret
jbe
push
and
in
aam
add
cmc
in
jp
mov
jo
jns
push
jge
cli
subb
lcall
call
or
mov
mov
xorb
lods
bswap
cmc
pop
add
inc
jnp
test
adc
sbb
es
rolb
divb
adc
inc
fisubrs
sbb
data16
mov
add
pop
jecxz
jae
or
jo
sahf
and
imul
nop
je
mov
mov
testb
sbb
call
xlat
push
addb
adc
pop
ret
mov
aaa
loopne
in
jl
aam
adc
je
incb
lea
xchg
push
rolb
cmp
push
int3
filds
nop
sbb
cmp
outsb
jmp
fistpll
cmp
nop
mov
and
and
iret
mov
or
dec
jbe
hlt
stc
add
xchg
dec
leave
push
jmp
in
push
bound
addr16
lcall
fs
insb
cltd
imul
dec
mov
jne
pop
clc
push
jb
repz
sub
cmp
cmp
push
std
add
jl
test
xchg
shl
add
push
push
xor
inc
push
dec
sub
ret
jp
bound
sub
lea
mov
insb
insb
add
xchg
inc
fdivs
pusha
fistps
sahf
outsb
pop
and
in
mov
sbb
jmp
stos
inc
leave
pop
adc
jo
in
jbe
aam
cmc
das
push
jo
push
test
idivl
mov
mov
push
jne
fcomp
dec
mov
inc
mov
push
lret
jo
lods
cwtl
rorl
lods
out
push
fsubl
pop
push
jae
mov
push
repnz
xchg
lret
mov
sbb
add
add
test
add
loope
adc
sbb
outsl
addb
xchg
add
or
icebp
cmpsl
inc
lea
std
push
ja
sti
xchg
scas
sbb
jmp
dec
adcb
sbb
ljmp
pusha
sbb
sarb
push
push
insb
xchg
mov
sti
xchg
mov
leave
cmpsl
sbb
xchg
stos
xor
andb
push
pusha
jo
jmp
nop
shll
jns
jp
sub
dec
jo
aad
adcl
jne
push
outsl
push
dec
mov
repz
mov
jo
fnsave
adc
fdivrs
nop
shll
xor
push
clc
jo
imul
sub
or
fnstsw
and
sbb
xchg
push
sbbb
call
scas
loop
jge
xchg
jo
ja
fs
dec
or
jg
scas
js
leave
jo
push
and
mov
or
fwait
adc
cmp
popf
rep
push
mov
lods
pop
pop
jge
inc
adc
pop
sub
data16
push
jno
mov
add
mov
or
jp
cmpsl
pop
xchg
jo
insl
dec
pop
jp
loopne
pop
scas
jo
mov
push
insb
xor
and
ja
rorb
xor
aaa
pop
inc
add
subb
xchg
mov
cld
fcomip
pop
adc
jb
call
je
imul
push
and
pop
insl
jae
fwait
divl
in
addb
inc
outsb
xchg
sbb
aam
ja
jo
fs
dec
jo
adc
mov
inc
lock
imul
addb
jge
adc
inc
pop
sub
jmp
pop
cld
push
adc
cmp
test
push
in
mov
pop
push
mov
aas
sbb
sub
divl
pop
add
das
or
mov
call
jp
lcall
lock
fldcw
shlb
shl
add
xor
add
inc
scas
loop
jo
add
lea
add
orb
jo
das
std
cmp
jecxz
cli
jp
addr16
push
repz
shrl
rcr
cmpb
outsb
aam
push
pop
ret
mov
add
mov
mov
rclb
pop
lcall
sbb
daa
gs
mov
mov
leave
loop
psubd
jns
dec
leave
mov
jo
stos
andl
aaa
or
pop
jl
pop
movsl
sti
and
pushf
idivb
and
add
js
pop
rol
cmp
fwait
cs
jp
adcb
arpl
push
mov
addr16
push
dec
js
xchg
jo
cli
add
imul
popf
ss
rcr
dec
and
arpl
cmp
pop
jae
scas
dec
and
jge
pop
sbb
cld
mov
mov
sub
std
sub
outsb
imul
jo
cmp
pop
push
in
or
sbb
lret
ds
mov
repnz
nop
ljmp
arpl
mov
dec
dec
dec
adc
xor
jl
mov
sbb
or
jne
inc
xchg
jo,pn
cmp
xor
push
fidivl
inc
insb
pop
jl
inc
cs
cmp
movsb
push
cli
test
push
jg
scas
popa
lcall
pop
mov
imul
js
nop
push
mov
xchg
in
in
repz
dec
ljmp
shrl
int
in
or
sub
sub
sahf
xor
in
js
aad
scas
mov
cmp
lds
je
xor
insl
popl
lret
or
xchg
xchg
cmpps
and
push
out
insb
pop
fwait
sub
lret
cs
in
or
inc
jns
inc
mov
sbb
fistl
fisubl
pop
test
movsl
bound
mov
jo
add
ret
popf
mov
test
pop
pop
scas
jb,pn
jo
nop
pop
xchg
push
mov
inc
stos
sub
or
jo
test
in
sahf
jo
cs
push
mov
adc
mov
or
add
inc
adc
or
adc
sub
inc
xor
das
xchg
aas
fcompl
cli
imul
mov
xor
pop
jo
dec
cmp
sub
bound
jg
or
scas
nop
push
dec
daa
rol
idivl
mov
sub
or
xor
popa
sbb
movsl
fdivl
mov
mov
bnd
push
decl
gs
mov
lea
pop
adc
ljmp
inc
loopne
inc
or
xor
push
pop
lahf
sub
cmc
xor
mov
cmp
popa
insb
push
ss
fxch
jo
aas
loop
cmp
imul
jb
dec
ds
xchg
mov
cs
xchg
dec
fwait
push
mov
mov
in
mov
or
int3
and
call
lahf
stos
add
pushf
movsl
push
xchg
jo
pop
dec
mov
jo
cmpl
push
fcmove
inc
and
rol
stc
clc
fldcw
jmp
enter
xchg
sbb
and
loop
fs
dec
pusha
aaa
mov
out
and
adc
ret
and
in
pop
dec
sbb
outsb
mov
add
int3
mov
jo
ljmp
sub
test
repz
scas
js
insl
push
and
sbb
cmp
int
cmp
xor
cmp
andb
dec
add
mov
je
or
negb
in
jnp
aam
pop
mov
mov
mov
test
stc
dec
xchg
test
in
gs
jnp
jmp
or
idivb
mov
sbb
sub
mov
hlt
mov
inc
sti
aas
jbe
outsb
pushf
out
adc
push
xchg
leave
xor
in
lea
enter
aaa
insb
mov
pop
shlb
sub
mov
push
mov
daa
adc
mov
push
lahf
popl
enter
fldl
cmp
dec
push
jae
iret
stos
mov
push
pop
adc
gs
aam
setg
mov
jl
cltd
rolb
rolb
or
lret
mov
mov
cwtl
jne
iret
jno
push
mov
outsl
sbb
loopne
push
es
mov
mov
std
add
push
icebp
cli
adc
in
add
js
mov
push
dec
lods
js
xor
mov
add
adcb
cmc
sbb
testb
mov
ljmp
cmp
stos
or
jae
test
mov
pop
jns
nop
xchg
addr16
inc
push
sarb
scas
sbb
jnp
ficomps
sub
ljmp
cmp
push
jnp
xchg
aad
mov
pushf
andb
pop
add
outsb
andb
sub
mov
jo
cmp
sahf
ss
loopne
movhps
hlt
add
arpl
inc
lds
cmpsb
rcrl
xor
jmp
push
mov
mov
out
call
into
outsl
fstl
mov
lret
mov
push
in
dec
xchg
lret
sbb
mov
icebp
adc
cld
adc
jns
jno
ret
push
sub
stos
jo
mov
dec
subb
out
icebp
iret
loop
mov
sub
outsl
inc
mov
cmp
sub
jo
popf
push
sahf
jmp
jns
jo
cmp
adc
stos
out
dec
dec
xor
or
jle
scas
cld
mov
or
xchg
dec
bound
mov
repnz
in
add
dec
dec
xchg
jl
outsl
ja
pop
je
jae
in
pop
aad
mov
xchg
xchg
scas
cmp
movsb
dec
or
sbb
insl
mov
aaa
jo
mov
insl
ret
xor
icebp
add
incb
daa
gs
xlat
out
cwtl
lods
cs
cld
aad
shrb
test
negb
jge
jle
dec
fwait
add
decl
clc
push
xchg
jo
dec
aas
cmp
mov
icebp
pop
or
mov
mov
shl
in
or
jo
pop
es
xlat
mov
repnz
nop
out
cwtl
popa
dec
ret
push
xchg
jge
in
sbb
mov
mov
or
jno
jo
pop
rcll
cmp
push
pop
cltd
hlt
pop
mov
mov
scas
stc
sbb
call
jae
inc
int
adc
aam
in
mov
mov
lret
sub
pop
movsl
into
cmp
sub
xchg
cmc
ds
addb
in
adc
jae
jo
or
dec
pop
push
cmpsl
mov
into
cmpsb
mov
sbb
and
dec
imul
int3
xchg
mov
fwait
jno
push
xor
and
xor
xchg
push
out
sbb
lret
bound
add
scas
shlb
cli
push
clc
ja
iret
jp
insb
xchg
xor
out
push
pop
jo
cmpsb
shlb
xchg
lds
xor
pop
mov
lods
dec
outsb
imul
jge
push
shlb
jbe
bound
or
aas
cmp
add
push
dec
add
xor
sti
xchg
fcoms
cmp
pop
call
dec
in
ja
gs
pop
cmpsb
lret
enter
add
lods
push
cmp
les
movsl
sub
jo
js
repnz
dec
sahf
cmpl
fcomps
pop
ret
xor
shrl
fucompp
dec
int3
subb
push
xor
loopne
push
shl
sub
add
dec
shlb
call
xchg
outsl
cmp
mov
mov
iret
adc
push
cmpsb
jge
fstl
pop
dec
out
jl
sub
mov
daa
rclb
insl
mov
dec
jb
jo
out
inc
mov
xchg
mov
jo
inc
cmp
and
push
das
jo
push
push
or
cli
out
inc
and
ss
lcall
gs
inc
es
dec
jo
loop
movsl
dec
in
add
loopne
jge
pop
bnd
dec
fmulp
ljmp
jmp
int3
cmp
in
hlt
jae
jo
lds
push
bound
cs
into
pop
dec
insb
inc
mov
aam
jo
jecxz
jae
add
mov
ds
mov
adc
pop
xchg
cld
and
jb
push
mov
sahf
lock
imul
fwait
push
stos
jne
pop
sbb
sub
imul
repz
mov
lds
int
mov
loopne
in
mov
imul
lret
jo
lcall
jo
sub
sahf
pushf
std
sub
add
inc
fnsave
fimuls
push
pop
es
jno
das
out
jae
mov
or
and
loopne
xor
or
mov
inc
std
ficoml
push
mov
sahf
out
sub
mov
lock
pop
sbb
mov
mov
pop
mov
xchg
xor
and
nop
sbb
push
out
jbe
out
adc
adc
mov
ret
out
bnd
cmp
aas
adc
mov
in
dec
mov
enter
xor
scas
out
pop
push
sub
jae
adc
jb
rolb
clc
jmp
sub
push
sbb
arpl
push
nop
and
icebp
jae
lock
dec
ljmp
dec
mov
mov
pmuludq
jl
mov
lods
jo
in
int
cmp
outsb
movsb
pmaxsw
aas
cmp
enter
sub
fimuls
jne
mov
push
js
out
push
mov
outsl
pop
jo
or
jbe
nop
pop
enter
int3
jmp
mov
inc
xor
jo
loop
inc
cltd
adc
jo
mov
icebp
outsb
jo
cwtl
aas
fisubs
fwait
in
and
stos
hlt
or
dec
fnstsw
sahf
ficomps
popa
fsubs
mov
into
cmp
stos
sbb
mov
jp
stc
inc
dec
rep
jo
aaa
lahf
sub
and
lea
outsb
pop
dec
and
leave
aaa
scas
repnz
cs
pop
push
call
cwtl
xor
adc
push
xchg
xor
sub
stc
jg
or
jbe
jae
xor
cmp
std
jbe
mull
shrl
mov
cwtl
mov
xor
repnz
cmc
test
das
scas
pop
jge
addr16
nop
divb
mov
imul
fs
jle
divb
cmp
xchg
icebp
nop
dec
cmpb
shrl
cmp
and
mov
nop
push
xchg
leave
push
push
xor
rorb
pop
test
in
xchg
shll
aam
rcll
adc
or
shl
jge
call
sarl
lea
mov
jo
adcb
sbb
in
fcoms
push
js
movsb
scas
mov
mov
jo
jns
add
jmp
test
mov
push
pushf
push
int3
or
scas
push
shlb
sti
xchg
adc
pusha
test
jbe
push
jo
aas
add
add
cmpsl
arpl
mov
pop
mov
shrl
push
fdivrl
scas
scas
sub
out
push
cmp
inc
push
or
ds
popa
nop
shr
outsl
inc
xor
lahf
dec
insb
das
loop
pop
nop
dec
push
jle
xchg
jl
gs
jo
inc
insl
int3
add
xchg
sbb
cltd
push
maskmovq
idivl
ds
cmp
shll
xchg
xchg
add
std
push
xorps
nop
adc
pop
dec
ss
or
add
xchg
or
insb
mov
fs
int
sbb
scas
jae
xchg
cmovnp
dec
lods
dec
hlt
mov
sbb
push
insl
and
scas
mov
hlt
test
pop
xor
mov
shlb
shrl
mov
adc
pop
fiadds
jo
dec
mov
pop
or
popl
push
lahf
out
jo
imul
mov
mov
cld
mov
xchg
dec
add
rdmsr
js
mov
ljmp
adc
je
push
mov
jo
add
repnz
fwait
cmc
jo
xor
add
les
dec
mov
das
clc
push
mov
or
fisttpll
push
jae
daa
fisubl
pop
data16
jo
mov
je
hlt
pop
jns
add
jo
push
mov
add
cli
das
out
popf
sbb
mov
jo
ss
mov
jo
cmp
pop
or
mov
es
js
add
sbb
in
mov
in
aam
fsubrl
and
cmp
inc
cmp
jge
shll
jnp
mov
loope
cmp
inc
rcrl
pop
inc
push
jne
jmp
xchg
cld
hlt
adc
jo
aam
push
xchg
cmp
std
jo
movsl
or
xor
out
mov
shlb
ret
or
push
adcl
loop
popl
adc
lret
mov
pop
jo
xchg
xchg
jns
mov
jo
mov
dec
js
dec
lock
popf
data16
sbb
xor
push
iret
or
lods
add
lea
sbb
cmpsl
dec
insl
mov
and
dec
repz
sahf
cmpb
jle
in
mov
lahf
mov
sbb
pushf
mov
inc
aam
shlb
das
andb
mov
xor
jbe
mov
lahf
leave
add
iret
stos
push
mov
lahf
outsl
data16
pop
pop
pop
cli
jno
inc
mov
xchg
cwtl
insl
xchg
cltd
in
push
mov
jmp
adc
bound
andl
and
sub
jo
mov
dec
mov
pmulhw
cld
cmc
js
jo
int3
or
xchg
xor
mov
insb
mov
jo
push
xor
nop
jae
adc
ljmp
bound
sarl
roll
addl
push
adc
icebp
mov
pop
lret
jmp
xchg
je
mov
dec
add
daa
or
sti
into
cmp
dec
pop
je
mov
push
xchg
dec
push
mov
pushf
imul
stc
insl
ds
add
jno
mov
insl
dec
or
dec
lret
cmp
movsb
adcb
push
sub
clc
mov
xlat
shll
outsb
test
cmp
mov
push
jo
fwait
inc
jg
mov
in
addr16
add
sbb
push
xchg
out
jle
xor
or
fildll
hlt
mov
in
scas
xchg
aam
pop
std
test
test
mov
daa
je
mov
adc
push
xchg
jo
testb
ss
push
das
mov
lock
data16
mov
js
jp
inc
jg
jae
cld
push
jno
movsl
fsubrl
fiaddl
xchg
mov
or
inc
jo
loop
mull
inc
nop
arpl
cmp
xchg
cs
pop
jl
mov
sub
dec
cs
xchg
jo
in
shrb
nop
mulb
mov
test
cmp
jge
mov
jo
dec
pop
lret
adc
mov
inc
mov
outsl
mov
sub
imul
sbb
mov
cwtl
fsubr
mov
jo
jmp
mov
gs
mov
mov
pop
jo
and
xorb
filds
stos
jo
mov
add
mov
call
pop
push
jne
push
nop
and
push
imulb
jbe
or
push
pop
sub
mov
fwait
jg
mov
out
lods
push
sbb
into
adcb
stc
push
subb
mov
loop
repnz
outsl
jg
stc
jo
xchg
push
dec
or
and
mov
sbbb
add
nop
sub
jno
and
lods
aam
mov
or
repz
std
and
leave
xchg
mov
std
dec
jae
popa
jno
sbb
lcall
xchg
mov
nop
mov
mov
outsb
lds
mov
jo
pop
and
mov
cmpsl
push
or
shl
mov
jo
mov
fidivs
lods
insl
fistl
fldl
movsl
xchg
mov
dec
sub
enter
jb
int
pop
xchg
push
inc
pop
call
outsl
loopne
iret
lock
outsb
sbb
dec
xchg
jnp
rolb
testl
imul
mov
mov
sbbb
jecxz
jo
ljmp
or
out
andb
push
enter
mov
or
fisubrl
cmp
pop
ret
test
enter
mov
mov
out
jb
or
std
sbb
push
mov
repnz
int3
add
or
gs
jl
bound
add
xchg
ret
jbe
lds
jo
xchg
inc
inc
xchg
dec
adc
xchg
shl
or
mov
push
jo
fisubs
in
jl
shrl
subb
lcall
mov
push
push
test
xchg
lcall
and
lock
xor
mov
mov
and
push
repnz
addr16
and
in
adc
cmp
jo
or
test
xchg
adc
jmp
and
jo
mov
xchg
iret
jo
or
loope
out
leave
popf
es
mov
loop
jo
mov
cli
push
test
mov
stos
std
lahf
test
xor
pop
cmp
cwtl
popl
xchg
push
adcb
pusha
hlt
jo
dec
mov
adc
cld
mov
cmpsl
test
call
push
aaa
jo
mov
inc
sbb
mov
mov
or
popa
mov
sub
sub
lcall
sbb
xor
adc
insl
out
xchg
inc
jns
mov
lock
scas
int
push
out
push
push
vminps
movsb
or
jo
xchg
loop
sub
inc
jo
test
sbb
pop
insl
loope
cmp
mov
push
mov
aam
xchg
jo
add
jbe
and
adcb
stos
and
jo
mov
add
in
or
dec
push
xchg
lea
leave
dec
pushf
jo
sahf
add
addb
fldl
int3
mov
je
and
shll
mov
dec
scas
in
sbb
fcompl
xchg
lret
sub
push
sbb
mov
mov
or
push
in
jo
nop
add
ja
and
movsb
cmp
pop
mov
cld
clc
push
imul
lock
stc
jg
add
pop
fdiv
sbb
jae
mov
jle
int
repnz
out
push
inc
mov
cmp
cmpsl
jbe
jne
aad
xchg
jo
jnp
sub
xchg
cmp
mov
sub
push
jge
jo
dec
dec
insl
fdivp
mov
jmp
lret
sbb
jo
mov
aad
mov
and
pop
leave
and
jne
insl
dec
jo
push
pop
add
out
movsl
cs
mov
insl
jo
xchg
std
xor
mov
push
mov
je
jnp
jo
or
dec
loop
dec
cld
movsb
jo
push
lods
sbb
push
inc
in
xchg
lcall
sbb
mov
mov
jo
mov
add
repnz
add
cmp
lret
sbb
fsts
lahf
pop
outsb
sbb
ss
into
mov
lods
pop
nop
stos
js
daa
cltd
faddl
fs
lock
je
hlt
pop
jo
pop
stc
add
adc
jo
mov
cmpsb
in
mov
xchg
adc
lahf
push
hlt
mov
insb
push
cmp
ss
jo
cwtl
cmp
lret
dec
movsb
sub
push
pusha
pop
mov
xor
cmp
fsub
sub
sub
mov
ret
jo
movsl
xchg
inc
jns
icebp
nop
fs
mov
jo
inc
sahf
xor
mov
adc
repnz
dec
push
imul
add
cmp
repz
inc
dec
mov
mov
ja
push
and
add
jo
mov
pop
xor
dec
adc
or
mov
inc
xor
lea
scas
mov
adcb
ret
mov
in
jo
les
test
push
xchg
test
inc
xchg
ja
cwtl
or
std
pop
dec
inc
jecxz
sahf
add
stc
push
fstpl
stc
jo
loopne
insb
or
jmp
je
push
repnz
mov
or
jl
jo
sti
push
pop
lret
movsl
rcll
inc
aam
hlt
jb
dec
jno
push
push
sahf
jae
cmp
pushf
in
out
xor
jmp
push
js
jl
mov
insb
dec
xor
mov
cs
adc
jo
movsb
pop
ret
call
jb
jo
xor
mov
sub
popf
cmp
je
outsb
adc
mov
test
jne
sub
sub
sahf
sub
into
mov
lea
cmp
data16
lock
pop
into
push
and
ljmp
xor
lock
loopne
outsl
or
cmp
jo
leave
jg
pusha
and
jo
int3
outsb
mov
stos
and
pop
inc
jp
insb
xchg
ja
xlat
stc
enter
cmp
jnp
loop
or
jo
ret
push
lret
fcoml
add
push
daa
pop
shlb
pop
jns
test
sub
push
icebp
hlt
sbb
pop
fists
stos
mov
icebp
adc
jmp
pop
imul
iret
sbb
setl
push
data16
xor
mov
add
bound
pusha
and
dec
cmp
lock
sub
fs
fwait
jae
mov
mov
xorl
mov
pop
and
adc
iret
loope
push
mov
sub
shll
xor
lods
rclb
mov
adc
repz
xchg
jge
insl
test
mov
in
rcrb
mov
and
pop
nop
jmp
stos
imulb
clc
jae
icebp
divl
lea
mov
frstor
jo
push
push
test
xor
add
mov
insb
ja
or
adc
jbe
lods
test
add
xlat
pop
inc
and
pop
das
dec
cmp
shlb
push
xor
adc
cmc
xorb
push
pop
inc
insb
repnz
pop
bound
addr16
jmp
push
adc
outsl
fs
fidivl
dec
daa
in
fmull
mulb
push
cwtl
ds
pop
pop
jle
nop
fdivs
jnp
test
mov
movsb
xor
insb
int
faddp
add
subl
jbe
cld
gs
mov
ret
movb
out
jne
mov
sarl
in
jp
insb
xchg
mov
xchg
dec
into
inc
lret
outsb
push
xchg
js
push
cmp
jno
push
andb
stc
xchg
xlat
sti
pusha
test
push
bound
incb
ret
mov
pusha
cmp
jge
or
push
mov
push
pop
jo
clc
xchg
sahf
jecxz
mov
movsl
xor
test
and
xchg
rcll
je
lds
lret
jo
add
xchg
cmp
movl
add
jo
lret
mov
arpl
movsl
fimuls
xlat
push
daa
adc
jne
adc
cs
cmp
adc
jo
inc
test
sub
inc
jnp
jo
jecxz
and
jo
inc
inc
es
and
addr16
or
stc
jne
push
add
mov
dec
xor
and
hlt
or
push
iret
sbb
mov
sbb
pop
addr16
stos
inc
call
fwait
gs
pushf
push
or
imul
lret
sbb
rolb
addr16
jo
jae
fwait
cmc
cmp
cmpsl
add
into
repz
sbb
jle
jne
in
and
jo
push
mov
inc
jo
cmp
or
out
nop
push
mov
mov
and
js
push
push
push
ss
xor
fiadds
pop
jo
xchg
das
js
dec
das
test
or
mov
push
mov
jae
xchg
xor
int3
add
mov
shl
mov
arpl
jb
mov
jg
xor
jae
cwtl
movsb
les
mov
add
jo
mov
aaa
pop
and
ds
xor
jl
push
popa
scas
fidivrs
ret
movsl
xchg
fwait
data16
sub
push
push
stos
or
pop
addr16
lods
outsb
out
je
fldcw
repnz
sbb
add
mov
shl
or
sbb
xor
movsb
dec
syscall
out
jae
xlat
push
xchg
pop
adc
mov
jmp
sbb
mov
je
cwtl
loope
mov
mov
jae
jno
push
mov
push
hlt
add
mov
ja
enter
add
sub
push
insl
movsb
dec
xor
jo
test
mov
jns
repz
and
add
jae
xor
dec
cmp
ficomps
loope
addb
sub
dec
mov
sbb
cmp
imul
fnstenv
jne
repz
jns
xor
xchg
mov
ljmp
or
pop
je
repnz
push
jo
push
test
add
and
arpl
and
daa
jns
push
jo
push
pop
cwtl
cmp
add
ret
mov
mov
push
pslld
int
cmp
fidivs
cltd
pop
js
inc
adc
jmp
cmpb
add
inc
mov
lret
popf
mov
push
roll
pusha
push
mov
pusha
dec
xor
jge
xor
push
adc
subl
xor
dec
ja
int3
ret
sub
ljmp
nop
hlt
pusha
jo
sbb
jo
pop
jnp
shrl
cmp
in
push
xchg
hlt
jecxz
pop
cmc
insl
mov
int
pop
lret
push
int3
sub
jo
in
mov
jo
popa
or
mov
fnsave
insl
mov
sbb
dec
jl
sub
mov
and
mov
add
cmc
repz
mov
imul
daa
add
mov
jo
fidivl
sub
xchg
stos
cmpsl
mov
mov
loope
xor
push
inc
pop
push
or
pop
inc
xor
xchg
dec
push
mov
outsb
jmp
fldcw
sysenter
mov
aad
ret
mov
outsl
push
rcr
popa
roll
cmpsb
cwtl
jo
mov
push
daa
or
stos
call
jo
loopne
dec
xchg
adcb
inc
push
insb
inc
jo
add
imul
sti
or
xor
jo
test
sbb
mov
mov
add
cmp
dec
push
addr16
jo
mov
pop
mov
outsl
inc
lock
lds
aaa
mov
add
mov
jle
sub
pminub
lret
add
popf
jo
push
add
imul
or
mov
je
jo
lret
push
out
dec
fimull
dec
xchg
sbb
xchg
mov
push
or
cmp
jl
jecxz
xor
sub
sarb
test
and
push
iret
and
push
int3
sbb
fs
out
loop
push
enter
inc
cmc
scas
xchg
in
insl
jecxz
sbb
xor
xchg
lret
sub
aam
sub
add
dec
mov
and
je
ja
divl
pop
mov
push
push
repnz
jo
pop
sub
fcomps
jo
mov
dec
xchg
inc
jns
je
bound
ja
addb
xor
popf
push
ficoms
into
mov
cs
cmp
push
dec
hlt
push
enter
test
and
jl
mov
mov
js
stos
jb
insl
mov
loope
bound
iret
push
movsb
xchg
jo
pop
mov
xchg
mov
jae
fisubl
gs
jo
mov
push
jo
bound
xchg
push
ja
xchg
addr16
movsb
jo
jmp
or
pop
dec
in
std
sbb
aad
outsl
fists
pop
stc
jmp
js
pusha
or
mov
movsb
mov
enter
cli
popf
std
icebp
pop
sbb
dec
mov
jbe
out
int
js
sbb
or
mov
hlt
sbb
mov
scas
mov
outsb
loopne
push
aas
push
imul
push
add
inc
xchg
out
jae
sarb
pop
jne
xchg
lcall
xchg
pop
stos
jnp
leave
pusha
dec
movsl
dec
stos
divl
pop
inc
mov
sub
add
xchg
incl
test
cmp
cwtl
in
int3
cmp
shll
push
xor
clc
lds
xchg
fisubrs
aas
insb
push
xchg
jge
fnstcw
xchg
les
stos
pop
add
xor
cld
out
jl
inc
push
incb
lahf
aad
out
arpl
das
and
push
xchg
icebp
push
lds
cmp
or
jecxz
adc
mov
shlb
add
jo
shll
push
adc
ret
daa
sbb
pop
or
jo
inc
fsubr
out
jb
cmc
in
les
jo
outsb
jle
lea
jo
mov
ds
cs
push
jl
mov
ret
dec
pop
je
mov
push
enter
sahf
mov
push
mov
fs
repnz
push
jo
pop
jnp
ret
out
jo
repz
inc
lds
adcb
push
fnstenv
insb
out
mov
in
addl
push
mov
and
dec
xor
xchg
imul
mov
push
jecxz
imul
cltd
nop
call
pop
push
scas
shll
loope
andb
cltd
into
xorb
jo
mov
test
nop
aad
push
bound
mov
ja
cmp
out
loopne
jo
insb
fadds
std
jp
int
pusha
jb
pop
mov
jo
sbb
rcrl
and
fdivs
shll
jo
jecxz
repnz
add
jo
imulb
shll
mov
pop
ss
out
or
inc
dec
test
jo
xor
xchg
xchg
or
mov
js
sbb
jo
imul
popf
scas
daa
cmp
ds
orl
call
loopne
jnp
and
leave
imul
cs
sbb
pop
decb
mov
scas
cmp
insb
fsubr
or
dec
pushf
fsts
je
rcll
push
or
jo
ds
sub
mov
int
xlat
hlt
sahf
sub
imul
xchg
pop
icebp
xchg
dec
mov
daa
jb
mov
in
xchg
insb
sub
cli
xchg
fsubs
clc
inc
sarb
pop
jns
jo
dec
xchg
insb
fistpl
push
jl
out
dec
cmpsb
adc
ss
cs
jnp
fbstp
repnz
shll
stos
inc
leave
nop
pop
mov
mov
adc
sub
mov
lea
movb
adc
test
jo
push
push
rcll
jno
into
push
fsub
jl
adc
cmp
or
add
mov
lds
es
inc
jmp
and
jo
sbbl
cmp
adc
adc
mov
js
mov
jne,pn
sub
stos
jae
clc
loopne
mov
add
sbb
sub
sbb
fs
push
fucom
out
je
je
pop
jo
ficompl
adc
sub
xchg
mov
jg
bound
push
jo
mov
dec
jg
scas
xchg
sbb
inc
adc
push
sbb
jge
xorl
pop
xor
ret
invd
cs
fistps
dec
push
pop
pop
push
dec
inc
mov
cmp
shrb
imul
sbb
incb
lahf
loope
xor
in
data16
into
int3
and
mov
jg
outsl
jge
mov
pop
add
push
adc
ljmp
push
inc
cs
or
push
mov
mov
push
xchg
js
mov
leave
mov
push
stos
orb
push
mov
pop
into
xchg
data16
cmp
jecxz
add
popf
ja
leave
push
and
sub
sub
mov
jo
jae
sti
and
out
out
roll
and
mov
pop
ljmp
inc
sbb
repz
popf
jmp
loope
pushl
or
or
push
loopne
ret
outsb
xor
sbb
push
sahf
xor
mov
insb
das
inc
jo
sub
jb
ja
push
shl
jo
cld
and
pop
mov
push
in
ret
jo
mov
lock
jo
or
xchg
ret
pushl
xchg
jo
shll
adc
push
jo
test
out
mov
jns
mov
fs
cs
test
lret
sbb
jmp
aam
cs
mov
mov
cmc
or
jnp
sub
outsb
mov
jl
dec
inc
pop
or
mov
inc
ds
xchg
and
ja
out
rcrl
data16
xor
inc
jmp
pushf
in
cmp
aas
jne
stos
jno
ret
jae
ljmp
push
jp
dec
in
jl
std
sub
xchg
jo
lods
cmp
and
lcall
sti
add
mov
decb
or
jo
das
loop
dec
mov
jmp
mov
ss
cmc
push
cld
jo
rcll
aas
sub
pusha
xor
jo
andb
bound
lods
dec
daa
out
jle
push
in
and
adc
imul
jle
fimull
insl
cmp
es
in
add
cmpsl
es
cld
pop
push
pusha
adc
push
jl
das
xchg
lock
fdivp
nop
test
and
jno
lcall
mov
icebp
push
xor
mov
gs
xor
jae
fs
jge
cmpl
inc
std
mov
in
fwait
jg
mov
cmp
aam
movsb
scas
jo
scas
popa
xchg
cmpsb
lcall
outsb
sbb
es
pop
xor
test
lret
pop
je
dec
jbe
nop
int
xchg
push
sbb
fisubs
ret
rcr
push
jmp
cmp
loopne
outsl
aad
cli
jae
mov
xlat
push
orl
lret
or
cltd
test
jo
mov
mov
movsb
push
pop
orl
or
jno
cmp
inc
loop
movsl
scas
scas
add
inc
pop
in
jo
cmp
movsb
imul
in
dec
leave
flds
jmp
xchg
adc
or
sbb
stc
out
fidivrl
fisubrs
jo
xchg
subb
cmp
inc
jo
mov
imul
fbstp
pushf
popa
cmpsb
inc
fnstsw
jo
sbb
and
test
sub
pop
add
call
mov
jno
xor
mov
scas
jae
sub
sbbb
pop
fldcw
cmpsl
mov
aaa
jl
cmp
jo
xchg
dec
mov
push
loopne
int
mov
fidivrl
fs
sub
shlb
jo
out
dec
imul
mov
inc
mov
loope
das
inc
nop
scas
dec
hlt
sub
jo
pop
and
sbb
jge
add
pop
xor
dec
sbb
jo
adc
or
xor
int
cli
stc
push
sti
jo
pop
mov
dec
pop
out
dec
sbb
call
sub
mov
fwait
lret
inc
cs
add
inc
cs
mov
test
pop
je
xor
out
int
or
test
or
pop
push
cltd
mov
gs
outsb
jae
shlb
scas
loop,pt
stos
dec
and
fbstp
dec
jmp
xor
jle
xchg
mov
pop
dec
sbb
jo
jb
xor
daa
lock
xchg
insl
mov
es
push
or
and
inc
jno
push
jo
rcrl
cmp
sub
sti
jge
test
popa
mov
mov
mov
imul
popf
jo
shl
add
mov
je
mov
ss
nop
xchg
mov
aam
insl
jae
dec
dec
jo
ds
push
test
cmp
das
dec
nop
jne
jo
dec
idivb
jo
cli
fstpl
push
ret
xor
mov
popa
fidivs
mov
shll
icebp
sub
rolb
pop
mov
jo
int
jbe
jo
clc
jp
mov
outsb
jo
mov
std
jo
cli
mov
js
fdivrl
jne
and
jo
xor
inc
mov
and
or
dec
mov
loop
je
aaa
out
or
cmp
rcr
mov
inc
jo
loop
push
inc
xor
jnp,pt
fadds
cs
jo
cmc
cmp
adc
push
jb
or
test
mov
in
nop
arpl
jge
xor
inc
cwtl
jl
data16
mov
addr16
nop
cmpsl
in
arpl
lea
add
pop
je
and
sub
push
jmp
paddusw
leave
cmp
jo
inc
adc
cld
cmpb
cltd
sahf
jo
adc
mov
push
in
gs
jo
or
sub
jb
call
out
pop
xorb
push
std
imul
rcrl
jno
jno
inc
es
ret
push
test
nop
outsl
inc
insl
rcrl
jne
loope
jp
jo
inc
stc
push
adc
out
in
jo
mov
push
mov
xor
jo
cmc
bound
xchg
lds
mov
ret
add
jo
je
ljmp
loopne
scas
frstor
pop
xchg
push
aad
out
jo
pop
dec
add
xor
ficompl
movsl
sub
in
push
inc
jmp
and
jle
lahf
rolb
jo
fistpl
sbb
aam
sbb
sbb
leave
jmp
add
popa
icebp
arpl
xchg
test
mov
inc
jo
test
mov
xor
lretw
int
jo
insb
sub
or
enter
aaa
sbb
call
jo
mov
inc
inc
imul
fs
and
mov
fdiv
jmp
jp
leave
mov
sub
mov
aaa
jo
adc
mov
or
dec
aad
add
int
in
and
leave
push
jmp
mov
test
bound
js
mov
popf
adc
push
mov
xchg
nop
xchg
push
mov
pop
cmpsl
jnp
pusha
mov
push
bound
push
jo
in
xchg
aad
sbb
mov
xor
popa
gs
mulb
xchg
mov
jl
mov
jo
cmp
lahf
cwtl
xor
mov
addr16
in
pop
out
push
push
mov
jo
sets
ret
lcall
shrl
adc
jo
inc
ljmp
xor
jo
jmp
and
sub
fmul
mov
inc
and
inc
xor
jmp
les
bnd
nop
test
outsl
jecxz
gs
out
push
scas
mov
aam
push
arpl
into
mov
push
jo
pop
prefetcht1
out
jmp
out
fwait
jmp
and
pop
iret
jo
loop
rcll
enter
jmp
nop
out
ret
ss
lcall
jne
roll
and
popf
ss
push
pusha
mov
mov
bound
mov
out
hlt
xor
push
pusha
jo
sub
call
dec
sub
xchg
addr16
imull
imul
test
ja
inc
arpl
movsb
mov
jns
ret
popf
je
out
sub
jnp
sub
data16
shlb
ss
mov
lods
adc
cmp
cli
nop
into
mov
push
add
jns
lcall
inc
push
push
ret
ret
adc
loop
jbe
jae
ret
test
insb
notb
insl
mov
and
xor
push
jo,pn
dec
orb
inc
jo
inc
xor
jo
es
cmc
sub
add
cmp
call
add
jo
add
push
repnz
loope
cmp
xchg
insb
xor
push
ret
mov
sub
fs
jo
or
aad
dec
lds
cmc
pop
ja
mov
fnstenv
fists
movl
jp
iret
nop
fdivr
fwait
cmc
lds
jo
pop
mov
add
imul
jp
int
pop
mov
into
mov
pop
xlat
jb
stos
jp
sahf
push
jo
fnstenv
inc
jo
adc
xorb
and
fwait
and
ss
push
xchg
pop
out
jo
jmp
jge
nop
add
cmc
xlat
stc
mov
les
jle
sub
jns
in
inc
pop
jo
add
sbb
in
jo
mov
mov
jo
adcl
repz
pop
lcall
pop
jo
dec
jne
inc
jo
in
mov
mov
jmp
aad
ljmp
mov
jo
bound
out
xchg
pop
in
mov
scas
test
mov
loope
jne
movd
gs
enter
pop
test
jno
ja
fs
stos
xchg
add
lcall
nop
jo
lahf
test
jo
add
push
lcall
sbb
stos
mov
add
push
pop
jo
shll
mov
mov
jo
ja
rcll
dec
jo
lods
fmulp
mov
push
cmpsl
jb
int
mov
sub
jo
inc
ds
jecxz
adc
xorw
cmc
shl
dec
daa
mov
cld
hlt
cwtl
push
push
dec
jno
sbb
pop
int3
mov
inc
ret
and
loope
daa
icebp
lock
mov
mov
cwtl
mov
jl
cwtl
mov
inc
subl
ret
jo
xor
pop
mov
insl
push
ret
es
fs
lea
inc
mov
aam
inc
js
adcl
mov
sarb
push
sbb
inc
push
mov
mov
jecxz
jo
cld
mov
lahf
es
je
inc
mov
fcomip
jo
xor
in
and
icebp
movsl
bound
xchg
pop
adc
dec
in
and
xor
sub
jg
jo
les
rcll
sub
and
cmp
std
leave
scas
inc
sbb
push
xchg
add
sahf
mov
jecxz
jo
outsl
test
xchg
idiv
mov
push
push
in
fmuls
inc
inc
stos
nop
adc
cmp
out
nop
add
jo
mov
mov
xchg
xchg
or
orl
jmp
shrl
mov
movsb
jne
dec
repnz
jo
adc
push
push
nop
call
jae
test
push
movsb
repnz
sub
mov
sahf
icebp
sbb
orb
jo
jmp
neg
xor
cmp
jb
popf
dec
mov
bound
xchg
inc
jo
xchg
movsl
push
sub
call
loope
scas
cs
lea
loop
pop
jo
aad
fs
cmp
dec
and
mov
loope
push
test
or
pop
jo
mov
fadds
aaa
cmp
shrl
sbb
mov
mov
sbb
lock
cmpsl
xorb
mov
add
into
inc
jo
mov
scas
cmp
pop
shll
xchg
push
add
inc
jo
inc
dec
in
jne
mov
add
add
in
jo
cltd
out
bound
jge
xor
jo
test
adc
negb
jl
ret
gs
js
orl
out
inc
or
xchg
jne
movsb
in
add
fucompp
leave
inc
fs
xor
pcmpgtd
sbb
mov
xchg
out
push
jmp
mov
and
stos
int3
mull
inc
adc
add
in
repz
dec
cmp
lds
ret
mov
sbb
mov
outsl
jo
sbb
inc
xchg
repnz
sub
push
push
addb
lret
hlt
sub
jmp
pusha
push
imul
repz
and
divl
insl
loopne
xchg
cmpsl
xchg
xlat
sub
out
xchg
mov
out
jo
fdivrs
or
xchg
or
scas
ret
pop
cmp
hlt
add
cwtl
inc
and
pushf
jo
in
fistl
popf
add
jo
ss
cmp
scas
cwtl
xchg
push
dec
ret
sub
int
es
push
in
test
sahf
shll
ret
loope
jo
pushf
addr16
push
fcmove
fs
aad
xlat
andl
xor
jo
xchg
das
es
inc
or
push
movsb
mov
jo
fwait
lock
add
xor
jo
mov
push
jo
lret
enter
xchg
dec
jo
dec
push
outsl
cmc
jg
bound
movsl
in
in
sub
fs
pop
leave
in
mov
dec
jo
ret
es
inc
jmp
shl
push
sahf
pop
xchg
mov
fisubrs
xchg
or
repz
nop
cwtl
inc
cmpsl
movsb
ret
ret
std
mov
jmp
xor
jo
imul
les
std
aas
fs
or
mov
push
mov
mov
adc
jb
ss
fidivrs
jo
fcoms
jl
xor
in
push
cld
enter
sub
mov
adcl
xor
mov
dec
addl
cltd
jo
and
or
mov
aad
fistpll
add
push
mov
jo
lds
je
mov
sahf
lods
jae
jo
sub
scas
pop
inc
mov
adc
jo
sub
loope
nop
dec
push
test
and
leave
dec
enter
test
ret
dec
in
inc
xor
adc
test
xchg
mov
hlt
inc
out
in
gs
cmc
push
into
rcl
out
xchg
dec
push
jo
inc
in
icebp
andb
adc
jne
xchg
test
je
jmp
gs
mov
mov
test
mov
add
push
andb
push
xchg
leave
arpl
xor
inc
test
stos
loop
cs
xor
in
cmp
inc
xchg
shll
jb
add
rcl
dec
mov
ret
pop
or
inc
je
xchg
jno
test
xchg
pop
in
enter
mov
test
dec
add
gs
jl
imul
jae
movsl
sub
daa
inc
jo
call
or
in
push
push
pop
jmp
add
jo
jno
inc
mov
sub
aad
lret
rorl
rcrb
movsb
call
xlat
or
cwtl
push
mov
in
pushf
pop
les
call
dec
ret
cwtl
loop
addb
mov
hlt
aam
push
pop
inc
add
dec
orb
mov
ljmp
xchg
push
jecxz
push
scas
jl
subl
xchg
clc
dec
lds
and
push
jns
hlt
jo
inc
test
movq
test
and
xor
aam
mov
les
sub
xor
in
add
movsb
test
xor
push
mov
or
ret
enter
movsb
andl
out
jo
pop
call
adc
outsl
ret
shll
dec
xchg
xchg
test
adc
inc
in
bound
jno
nop
out
divb
pop
into
andb
sub
push
movsl
push
pushf
mov
mull
push
sbb
jecxz
lcall
push
sub
jmp
adc
ret
pop
mov
xchg
cmp
jo
data16
inc
loopne
jo
stc
or
xchg
mov
fnstenv
lret
shll
or
les
je
push
dec
gs
adc
inc
fdivl
sbb
xchg
lahf
das
and
dec
test
mov
xchg
icebp
clc
loope
js
add
xchg
jecxz
bound
dec
jmp
ficoml
loope
insb
es
scas
ljmp
pusha
into
or
addr16
mov
sbb
jo
out
jmp
or
test
shlb
sub
pop
mov
jge
dec
or
jo
lahf
inc
loope
pop
sbb
nop
ret
pop
adc
dec
mov
mov
xlat
in
aad
and
jo
lret
pop
out
js
jo
in
in
push
sar
jo
fmull
cmp
lock
addr16
push
js
call
repnz
fs
mov
jle
adc
hlt
lret
stc
jo
shlb
cmp
mov
cmp
cmp
pop
in
fs
and
and
mov
pop
jo
mov
xchg
jbe
jp
jo
dec
lods
neg
imul
jo
fimuls
dec
add
push
aad
mov
imul
bound
repz
cld
subl
lret
pop
adc
bound
jbe
insb
lret
lahf
jb
cmpsl
dec
in
jo
mov
aad
jne
in
inc
push
dec
iret
js
out
sub
sbb
or
fwait
sub
xor
xor
push
add
mulb
push
roll
jo
cmc
inc
jle
jp
lds
xchg
mov
outsb
and
xchg
mov
adc
subb
aam
hlt
ret
and
push
xlat
sbbl
aas
in
jo
loope
lcall
add
sub
ret
jo
loop
pop
sub
mov
aad
adc
ret
vunpcklps
xor
jmp
cmp
sub
and
mov
bound
out
repnz
jo
loope
into
pop
ror
icebp
fsubp
cmpb
inc
pusha
daa
out
xor
shl
xchg
or
in
out
insl
das
lods
mov
stos
idiv
mov
inc
bound
adc
pop
sbb
inc
adc
jo
xchg
push
jbe
xor
jne
jo
add
mov
lret
jo
cli
adc
andl
mov
je
jo
int
ret
out
fstpl
shlb
repz
js
inc
cmp
out
xor
arpl
sarb
cmc
jo
fldl
bnd
clc
jb
mov
aad
sbb
pextrw
or
add
es
push
push
inc
movsl
push
jno
inc
adc
push
jo
out
add
cmp
pop
pop
mov
or
add
jo
push
fwait
mov
aaa
lret
push
shrb
jo
clc
data16
and
pop
push
adc
into
in
and
fidivs
cltd
in
mov
fildl
int
rorb
subl
shll
inc
ja
jo
fcmovu
aad
pusha
sbb
xor
jo
movsl
pushw
jb
imul
adcb
mov
push
cmp
popa
mov
mov
pop
sbb
js
push
lgs
push
test
es
cmpsl
movsl
outsl
jp
jl
mov
lret
jg
push
or
fiaddl
cld
dec
adc
pushf
scas
jo
shld
jecxz
mov
lret
sar
jo
and
in
and
jo
lahf
xchg
dec
cmp
cltd
test
inc
xchg
loope
lock
xchg
cmp
mov
in
movsl
mov
or
addb
cmpsb
xorl
dec
enter
fidivs
lea
cmp
pushf
sbb
test
push
sbb
jo
adc
mov
clc
push
gs
ret
mov
cs
sarb
adc
mov
inc
dec
cltd
inc
out
call
lahf
jle
jno
xor
addb
test
add
push
sub
jle
int3
bound
xchg
mov
int
test
js
inc
ret
jmp
add
mov
repz
and
lock
jmp
xchg
push
sub
js
jmp
jo
sub
add
or
push
repnz
in
lcall
jbe
fnstenv
ret
pusha
add
bound
icebp
shrb
shr
stc
dec
mov
jo
jp
bound
mov
sti
push
mov
leave
je
pop
add
or
xchg
inc
js
nop
inc
push
fcmove
bound
imul
inc
push
stos
fs
in
insb
and
jo
xchg
push
add
clc
mov
inc
data16
shr
jo
push
shll
jo
outsb
lock
cs
ja
bswap
add
fs
push
lods
jo
dec
leave
xchg
fnstenv
movsl
dec
outsl
xor
xchg
push
jb
ffree
xchg
xchg
xor
pusha
fsts
xlat
jo
lock
xchg
mov
adc
call
cmp
jecxz
jnp
mov
and
xor
sub
pushl
imul
jbe
addb
dec
aad
sbb
and
mov
mov
ds
mov
inc
rclb
ja
adc
xor
imul
pop
popf
scas
out
clc
mov
cmp
jbe
xor
es
nop
fiadds
push
and
mov
inc
xchg
repnz
add
bound
es
or
cli
jo
movsb
or
jno
dec
punpckhwd
cmc
fs
insb
mov
jl
repnz
mov
jle
jo
sbb
xchg
push
xchg
xchg
jb
in
jno
shrl
xchg
push
imulb
in
rolb
dec
int
ret
shrb
mov
dec
leave
mov
mov
test
dec
and
mov
jo
ret
xchg
dec
adc
jo
xlat
add
rorb
or
rclb
add
fdivs
xchg
in
mov
push
jl
jo
lea
cltd
jp
aam
push
cmc
aad
pop
mov
xor
xlat
mov
push
es
jae
sbb
and
jo
nop
mov
int3
movsl
negl
xchg
sub
in
test
lahf
push
xchg
jbe
jo
xlat
jne
and
nop
adc
jl
pop
test
inc
sub
push
std
inc
lret
mov
mov
pusha
inc
sbb
dec
gs
call
pushf
jo
ja
shlb
sti
leave
hlt
mov
or
sbbb
aad
add
pusha
pushf
sub
pop
rcrb
icebp
inc
aam
repnz
jo
in
ja,pt
out
repz
rcll
pop
jmp
cmc
idivl
xor
jo
inc
out
cmp
add
roll
cmp
ret
xor
ljmp
and
testl
loope
adc
jo
mov
fnstenv
js
test
jo
lds
jb
aas
and
jns
popf
and
into
in
jl
xchg
cmc
mov
cmp
test
lods
xorl
mov
dec
arpl
mov
mov
std
js
jmp
fdivs
jo
lds
test
xchg
loope
jo
sub
lret
xchg
inc
pushf
jo
lahf
or
jo
mov
les
push
fdivr
mov
fiaddl
jge
jo
sbb
inc
loope
cmp
dec
test
andb
in
jl
fimuls
mov
jns
imulb
xchg
iret
jo
dec
into
push
sahf
mov
aam
pop
inc
loopne
imul
leave
std
ret
pop
data16
xor
ljmp
cmpsb
aad
test
add
mov
xchg
cs
cmc
popf
mov
orb
push
jo
leave
sbb
mov
pusha
dec
mov
popa
jle
ljmp
push
test
in
xchg
xchg
je
mov
push
xorl
jo
ficoml
call
paddd
jmp
repnz
or
xchg
jo
sub
lods
ret
dec
cmp
lcall
xlat
jo
out
js
cmpsl
push
push
out
dec
xor
push
jo
cmpl
rorb
lcall
mov
ret
fimull
in
jl
xor
mov
addl
push
fldl
xchg
mov
data16
inc
push
je
int
int3
mov
lds
jl
loope
mov
mov
rcll
mov
cmpsb
lods
jne
jbe
shll
fcmovnbe
mov
sub
push
cmp
mov
jo
test
test
cmc
out
lods
sub
push
cs
cmpsb
adc
aad
adc
insb
popa
jg
sub
movsl
ficoml
mov
jo
xchg
lods
ds
jmp
popa
outsl
cmp
jo
sbb
lods
jo
popl
xchg
jo
insl
dec
shll
leave
mov
js
lds
push
dec
xor
scas
mov
add
jo
cld
cmc
mov
das
fs
sarl
js
sbb
cmpsb
int
and
and
or
jmp
jo
jno
mov
push
in
movsl
jo
enter
jne
push
lock
and
and
mov
repz
std
inc
inc
jo
mov
adc
or
icebp
mov
sahf
insl
inc
pop
xchg
jo
mov
ror
mov
ret
xchg
jg
pop
je
jb
scas
stos
cmp
adc
js
xor
int
sub
inc
std
adc
mov
adc
inc
sub
roll
daa
mov
in
divl
aas
pop
sub
dec
andb
sub
xchg
rcrl
int3
sarb
sub
jo
adc
xchg
inc
inc
mov
lods
cmp
push
lods
imul
sbb
and
cmpb
aad
push
cmpsb
lret
les
jp
jbe
cmc
push
add
xor
outsb
outsl
cmp
push
dec
js
in
aas
jo
cmpsb
inc
loopne
arpl
jg
sbb
jo
lahf
jnp
test
mov
mov
test
mov
insb
leave
jo
jge
iret
add
in
jo
cld
hlt
loope
xchg
mov
bound
mov
jo
inc
fimull
mov
jns
int
mov
mul
mov
add
xor
in
adc
mov
fldl
or
test
pusha
pop
sub
test
nop
adc
jg
cli
dec
rorb
fldl
sbb
push
sti
js
push
mov
pop
aam
jo
divb
data16
dec
mov
ds
insb
jno
shll
outsl
xor
pop
les
lret
jo
sarl
add
xor
inc
xorb
mov
xlat
sub
into
jo
enter
pop
lcall
js
ror
test
test
xchg
dec
or
out
jns,pt
mov
and
sbb
les
loopne
xchg
cmp
cmp
divb
adc
dec
inc
mov
pop
xchg
rcl
movsb
jge
imul
std
mov
jle,pn
insl
outsl
pop
jo
and
mov
mov
bound
jb
nop
out
jo
je
inc
pushf
dec
sbb
lahf
push
cmp
out
aaa
push
nop
mov
data16
mov
sub
je
push
shll
clc
or
std
fisubl
cmp
ret
push
jo
add
jae
xchg
mov
js
sbb
sub
push
pushf
jo
cmpsb
jl
sbb
cmp
data16
push
mov
push
insb
add
inc
aas
jo
xor
adc
inc
xorb
adc
add
jmp
mov
xor
dec
scas
jg
push
andl
lret
mov
fs
mov
xor
jmp
clc
outsl
movsb
cmp
mov
scas
mov
mov
jo
scas
int
mov
push
cmp
iret
mov
sarb
movntq
dec
adc
xor
inc
movsl
imul
iret
std
test
pop
jmp
ds
scas
push
mov
mov
sub
ret
fimull
lahf
push
and
loop
mov
mov
pop
add
jo
adc
and
bound
fwait
scas
paddsb
addl
sti
rclb
adc
into
js
xor
dec
movsl
inc
shr
or
add
pop
jo
aam
leave
add
std
pusha
push
js
insb
adc
cmp
push
mul
cli
adc
push
and
sbb
gs
fwait
jo
pusha
sbb
inc
stc
mov
cld
pop
rol
movsb
mov
adc
mov
mov
movsb
mov
mov
lds
jmp
sar
jo
fxch
adc
dec
movsl
outsl
cli
lret
mov
ds
inc
shrl
jo
cmp
xchg
jo
nop
lds
pmulhuw
roll
cmp
call
data16
insb
shr
or
in
insb
dec
jo
cltd
out
or
data16
leave
push
jmp
xor
dec
jo
fdivl
mov
or
push
stos
enter
hlt
jnp
jo
sbb
js
test
ret
les
push
icebp
jb
rol
push
jo
fidivl
push
jnp
cmp
xor
adcb
inc
dec
popa
adc
cmp
mov
add
and
jo
push
or
paddsb
jne
jecxz
outsl
orl
pop
ret
sub
je
sbb
push
cwtl
ja
testl
add
mov
dec
std
jo
enter
sbb
mov
lret
or
cmp
inc
mov
mov
jmp
cwtl
pop
dec
gs
bound
loop
les
stos
fdivrl
scas
insb
lock
insb
add
sub
jae
jo
mov
jmp
dec
push
inc
mov
cmpl
inc
sub
cmc
pop
addr16
jo
sbb
mov
and
cmpsl
jbe
xlat
lods
aam
stc
leave
and
push
or
add
lods
lds
jbe
fmuls
pop
mov
inc
aas
subl
push
in
cmp
in
movsb
shll
sub
xchg
jo
inc
and
lahf
sbb
pop
jo
mov
pop
inc
jne
pop
pextrw
push
sbb
adc
mov
aam
cmpsb
sbb
jo
cmp
pop
pop
addr16
jo
movsb
sarl
scas
or
ret
fsub
mov
mov
ja
bnd
bswap
int
and
jle
pop
sbb
ds
mov
push
test
add
pop
rorl
inc
mov
xchg
jo
xor
cld
clc
inc
jo
mov
iret
lds
rorb
mov
jle
xor
push
mov
cmp
jb
out
pand
movsl
ja
adc
aad
aas
in
fs
cmp
jg
xor
popa
add
addb
push
jo
fwait
sti
dec
loope
std
xor
call
jmp
push
ret
enter
subb
mov
jae
orb
inc
push
push
lcall
test
stos
jo
xor
sub
mov
mov
notb
jo
scas
adc
sbb
orb
es
dec
or
push
lret
movsl
addr16
jno
scas
dec
nop
inc
sbb
mov
ja
adc
pop
cmp
jo
adc
subb
mov
sub
sub
push
inc
cmp
insb
jecxz
pushw
sub
sbb
js
xchg
pop
setle
push
call
int3
scas
cmp
repz
fxch
pop
sub
leave
or
sbb
fcoms
ret
imul
mov
out
jo
fpatan
add
les
adc
or
xchg
push
and
jo
add
add
sub
jge
jo
lret
and
cltd
push
xor
dec
jo
popa
das
jnp
in
int
xchg
inc
ret
inc
aam
nop
scas
lods
inc
aad
leave
jns
rol
jo
jns
shlb
cmp
jnp
mov
nop
mov
bound
xchg
jo
cmp
mov
sub
pop
jo
jne
out
xchg
mov
shr
popa
inc
aas
jo
cmp
adc
insb
inc
cmpsl
xlat
jno
sub
xor
cmp
add
shr
scas
scas
out
jo
pop
add
jns
jo
mov
push
ret
int
cs
lods
icebp
sbb
pop
out
fbstp
sub
fimull
push
jo
test
xchg
in
push
jo
dec
rorl
xchg
cwtl
jo
lods
test
mov
inc
rcll
add
testb
mov
test
addb
xorl
mov
push
in
stc
jo
icebp
lods
cmpsb
inc
test
jbe
pop
push
sbb
ljmp
lcall
xchg
jle
push
mov
xchg
test
int3
addr16
cmp
pop
test
stos
shlb
push
push
movsb
leave
push
adc
jo
outsl
mov
in
ret
sub
js
mov
mov
xchg
ja
push
sub
cmp
outsl
testb
jmp
dec
out
and
jp
jo
jge
les
mov
leave
jo
aad
jle
inc
loope
jmp
xor
jo
mov
out
std
in
daa
jo
gs
js
and
ret
jo
xor
shll
aas
sbb
les
pop
mov
xchg
cltd
clc
and
jo
mov
mov
jo
lods
rol
cmp
test
push
mov
pop
loop
or
gs
and
inc
fdivs
cmp
mov
jns
adc
mov
jle
repnz
push
fnstcw
sti
insb
push
cmp
xchg
rcll
cmp
mov
lret
xchg
cmpsl
lret
jo
movsl
sbb
lds
data16
add
test
bound
inc
sbb
out
out
sub
mov
repnz
hlt
jo
fldenv
in
cmc
jo
leave
dec
sub
sbb
add
andb
mov
sbb
mov
cmp
loopne
movsb
test
push
stc
bound
fs
jo
xchg
or
lock
cmp
dec
inc
int
je
pop
add
cmp
pop
mov
add
mov
jmp
int
jo
test
nop
shld
jo
dec
insb
pop
notb
mov
xorb
pop
lods
xchg
test
jne
push
scas
inc
push
into
push
ja
pop
cwtl
mov
xor
mov
sub
jmp
in
shl
fidivrl
fisttps
xchg
je
nop
jno
pop
mov
mov
sub
das
adc
insb
data16
jo
fs
imul
ds
cmp
nop
jg
xchg
mov
popf
xlat
push
inc
dec
je
ja
mov
negb
push
addr16
push
shll
lret
push
jo
bound
fwait
stos
push
js
ljmp
sti
dec
xchg
adcb
sub
jo
frstor
sbb
xchg
out
cmpb
cmpb
push
jmp
or
repz
jo
or
push
nop
and
scas
jo
push
ror
adc
cmpsl
lar
sbb
pop
movsw
inc
mov
mov
test
orl
xchg
faddl
ffreep
pop
dec
jno
sub
xor
jo
rorl
fistl
imul
mov
inc
mov
data16
aaa
sub
and
in
repnz
adc
sbbb
cmpsl
jo
test
movsb
sub
mov
or
std
sub
adc
and
dec
mov
call
pop
int
jmp
roll
jo
xlat
add
jae
add
in
dec
jo
dec
shld
shll
mov
clc
je
pinsrw
inc
jle
es
push
dec
inc
sti
xor
mov
sub
movb
aad
call
inc
lahf
pop
jmp
and
pop
sbb
jle
jbe
leave
jecxz
jo
xchg
push
sbb
push
mov
dec
mov
jae
fs
mov
inc
pop
jo
pop
push
mov
lahf
jb
jo
xor
out
mov
mov
je
add
leave
push
cmp
ja
out
xor
mov
sub
adcb
jp
and
mov
push
movsb
mov
jmp
andb
or
dec
adc
cmp
sub
cld
sarb
cmp
data16
mov
xchg
ret
cmp
adc
sub
push
outsl
jle
clc
in
jo
xor
sbb
jo
shll
loope
scas
pop
mov
push
loopne
sub
popf
xchg
or
fs
mov
jo
and
mov
jo
lret
fwait
pop
sub
inc
and
fdivl
lds
add
outsb
pop
jo
hlt
or
outsl
lahf
out
jae
inc
out
cmc
lds
lcall
pmullw
in
lret
aas
pop
out
push
mov
bound
imul
shll
jmp
aaa
or
mov
mov
in
push
sbb
mov
scas
inc
push
aaa
std
mov
aam
in
inc
jo
dec
fidivs
jns
nop
cmp
xor
in
leave
jp
adc
filds
cmp
add
bound
jmp
mov
fwait
orb
mov
dec
leave
fildl
scas
mov
push
add
jo
ret
das
imul
mov
ljmp
add
divl
sub
cld
jo
cmpsb
inc
int3
clc
lods
add
jae
xor
pop
or
fwait
push
data16
xchg
jo
pop
add
jo
push
loopne
sti
xor
or
push
xchg
ret
nop
mov
cs
and
mov
ja
mov
jo
dec
fwait
into
addr16
or
cmpsl
push
repz
adc
roll
xorl
jo
lds
pushl
jmp
push
xchg
push
xchg
mov
lock
xchg
movsb
loop
aaa
cmp
lds
jecxz
mov
dec
push
pusha
xchg
mov
jo
loope
push
push
addr16
xchg
fs
scas
dec
jo
flds
xor
test
repz
scas
fnstenv
xchg
dec
aaa
shlb
push
push
aas
imul
dec
icebp
push
sbb
or
lcall
xor
jo
dec
dec
push
mov
ret
or
cmp
xchg
mov
out
push
dec
or
push
int3
push
andb
in
mov
inc
repz
mov
js
js
frstor
ret
or
aas
aad
addr16
psubusw
fidivrs
testb
jl
in
push
pusha
sbb
inc
fidivs
repz
inc
scas
insl
inc
lds
mov
cmp
lock
nop
push
iret
shlb
inc
jne
outsb
pop
bswap
sahf
scas
cmp
jle
jl
xorl
ljmp
sahf
cmc
lock
push
inc
jo
sbb
mov
sub
orl
je
shrb
lret
mov
rol
mov
and
loopne
inc
inc
push
lds
repnz
iret
in
push
xchg
subl
fnsave
imul
push
jmp
clc
call
out
ret
jo
mov
xchg
mov
push
nop
mov
push
hlt
or
jns
ja
mov
sub
cltd
push
pop
aam
pushf
push
rorl
and
inc
pop
push
xor
mov
cmc
cmp
imul
push
xor
fistpl
call
pushl
sahf
addr16
fadds
add
jbe
xchg
bound
inc
outsb
and
or
inc
daa
jo
dec
adc
sbb
xchg
lahf
push
inc
mov
icebp
int
outsl
out
and
jo
nop
fld
mov
rcll
mov
std
xorl
xchg
hlt
lret
ret
jae
jo
out
enter
lods
mov
or
loopne,pt
push
mov
jo
mov
pop
inc
mov
mov
iret
sbb
fcom
push
mov
jge
out
jmp
adc
rcll
subb
adc
jo
xor
sub
inc
int
fisubl
ljmp
fbld
in
xchg
bound
or
jnp
faddp
into
jo
ja
xchg
test
sub
sub
sti
xor
out
xor
jmp
mov
in
mov
xchg
jo
sub
lods
jo
popf
enter
xor
jo
in
pop
ror
and
aas
pop
cmp
jmp
loop
sub
in
xchg
sub
lahf
shll
xchg
mov
aaa
jo
cmp
loopne
lret
adc
jo
fs
outsl
pusha
dec
xchg
mov
shl
sbb
sub
les
sbb
fcomps
sbb
and
jmp
lahf
pusha
jb
jo
scas
cmp
mulb
cs
push
daa
inc
in
ficomps
andb
gs
xchg
jl
xchg
ret
aad
jo
and
call
dec
and
adc
ljmp
clc
in
lods
or
subl
fs
cltd
shll
je
lds
out
jb
scas
push
xlat
jae
push
mov
inc
loopne
or
and
daa
jb
jp
enter
fdivr
out
inc
mov
jo
shrb
dec
adc
movsl
pop
jo
sub
inc
mov
rcrl
lret
ret
dec
xorb
bound
sbb
lods
fists
ret
inc
adc
mov
push
mov
jge
hlt
mov
lock
call
rolb
add
cmp
jge
shrl
mov
add
fisubrl
pop
out
jno
lcall
push
or
mov
pop
xor
lcall
inc
add
add
in
xchg
dec
mov
movsb
insb
or
and
inc
xor
sub
pop
push
lods
pop
jo
outsb
leave
repnz
jp
cmp
mov
roll
jo
push
mov
das
jmp
xchg
repz
loop
add
cmp
loope
mov
nop
dec
cmpsl
les
xorl
iret
push
shl
mov
int
pop
pop
push
xchg
je
push
xor
outsl
mov
scas
stos
push
sbb
js
or
sarb
add
rcrl
and
std
sub
ds
jle
dec
adcl
fcomi
setae
int3
adc
jp
jge
inc
push
sub
lods
jb
les
mov
jne
mov
shll
in
or
cmp
pop
loop
push
jo
mov
cmpsl
popf
pop
jo
sub
lahf
aaa
dec
sbbl
xchg
jb
push
popa
lds
movsb
adc
fmuls
push
iret
mov
mov
dec
dec
rorb
inc
push
pushf
andb
jo
dec
popa
add
push
pop
hlt
pop
cmc
sbb
jmp
rorb
add
and
add
movsl
add
jecxz
data16
mov
lea
dec
mov
jo
hlt
gs
jo
leave
jbe
push
pop
push
cmp
jo
jns
or
add
add
push
ror
icebp
mov
ds
mov
add
je
cmp
insl
fwait
dec
pop
push
je
movsb
test
jo
daa
enter
imul
mov
jle
mov
test
fld
mov
or
pusha
dec
mov
cwtl
jbe
scas
pop
les
jo
in
inc
pop
mov
or
fldenv
pop
in
lds
mov
sub
fidivs
jbe
bound
push
jmp
dec
cmc
jnp
scas
sub
nop
in
repz
inc
jo
cltd
gs
jns
jo
mov
movsb
sbb
mov
les
cmc
rcll
cs
movsb
or
and
mov
ret
sub
out
push
outsl
xchg
subb
cld
sbbb
bound
sub
sar
shrb
fwait
xor
or
scas
addr16
lret
mov
hlt
add
icebp
imul
adc
or
jp
jbe
test
loope
mov
jge
mov
jo
jnp
js
pop
adc
mov
jo
fiadds
cltd
jo
pop
xor
fbstp
mov
addb
sub
cmp
inc
fimull
jno
js
mov
pop
sub
cmc
jo,pn
push
cmp
mov
in
jbe
xchg
jo
insb
jp
js
inc
movsb
jo
int
adc
mov
cmp
xor
or
hlt
mov
nop
imulb
add
xchg
out
xchg
push
jne
xor
jo
rcl
sub
aaa
jecxz
repz
mov
fxtract
xlat
jo
or
dec
cs
jb
jl
or
lds
pop
leave
mov
xchg
out
push
add
jo
pop
jl
aaa
xor
sub
jo
push
lret
mov
push
cwtl
dec
mov
inc
jl
stos
push
lds
repz
cmp
hlt
es
test
and
cmpsb
loope
idivl
inc
jo
jne
jb
jo
xor
cmp
xchg
lock
js
aaa
dec
push
push
cltd
add
aam
jne
out
mov
pop
mov
cli
jmp
js
in
mov
pop
or
faddl
jbe
fldt
cwtl
andl
pop
cltd
fiaddl
xchg
push
push
mov
jecxz,pn
stos
ret
and
jno
sub
cs
leave
adc
mov
bound
xchg
inc
jo
rolb
lds
sbb
lret
test
inc
xchg
push
in
pop
es
cltd
mov
in
and
fstpl
cmp
dec
push
sub
sub
repnz
xchg
addr16
sti
jo
mov
mov
in
inc
nop
push
sub
arpl
mov
add
jne
ja
shl
xchg
cmova
cmp
je
call
sub
jns
jbe
addl
mov
lea
ss
push
in
dec
addr16
sarl
and
jo
es
xchg
dec
mov
test
or
fnsave
scas
push
push
lcall
fwait
int
rcr
out
jo
ret
xchg
loope
fbstp
arpl
lds
or
jo
addr16
fsubrp
xor
add
adc
aam
aaa
mov
or
cmp
outsb
adc
dec
lock
or
inc
jo
and
leave
pop
cs
sbb
or
jo
iret
cs
lcall
sub
and
sbb
filds
hlt
mov
and
lret
or
loope
pop
jae
jb
mov
ret
lea
sub
push
inc
jo
mov
sbb
add
xor
and
push
push
mov
inc
xor
inc
mov
cmp
cmp
cmc
mov
in
pop
xor
aad
jo
nop
out
mov
lock
jge
xor
sub
pop
xorb
popf
jl
xchg
inc
pop
testb
mov
mov
rcrb
dec
ss
xorb
ds
add
fidivs
push
std
roll
aad
outsl
adc
cld
syscall
xchg
xor
or
mov
mov
pop
xor
sbb
movsl
ljmp
test
repnz
leave
add
stc
ret
xor
cmp
test
mov
and
adc
xchg
push
adc
xchg
loope,pn
jo
inc
push
pop
fistpl
cwtl
out
arpl
rolb
js
adc
ja
jb
push
adc
sbb
lahf
mov
aam
je
test
pop
ffreep
jo
jb
jecxz
iret
pop
jo
xor
lret
and
lcall
popa
pop
lock
out
mov
mov
push
mov
sub
inc
shlb
and
jo
les
mov
jo
pop
inc
imul
mov
fnsave
lds
xchg
js
fucomi
and
mov
cltd
call
hlt
ljmp
fs
mov
rcr
mov
repnz
adc
mov
insb
mov
xchg
jo
sbb
mov
xchg
ret
je
leave
push
lcall
pushf
sbb
xchg
mov
inc
sub
mov
mov
shr
lock
outsb
mov
add
mov
test
test
push
and
rclb
adc
roll
mov
in
jo
inc
mov
jo,pt
stc
out
bound
mov
mov
dec
jo
sbb
movsl
pop
sub
cltd
pcmpeqw
mov
push
jo
shlb
in
or
jo
andl
cmp
in
mov
jo
inc
das
lods
popa
int3
mov
adc
mov
xchg
push
stc
jl
cwtl
in
ss
jo
cmp
sti
js
jl
cmp
xchg
stos
jo
mov
out
mov
fldl
mov
orb
into
cmp
dec
inc
stc
push
das
fsubr
arpl
lret
ret
and
mov
jo
frstor
imul
lea
xchg
add
cmp
je
test
cmc
xorb
mov
sub
int
xor
and
pop
push
enter
bound
cmp
movb
data16
aad
out
popw
stos
jbe
inc
xor
fsubrl
inc
fbstp
pop
cmpsb
mov
aad
jne
mov
fsubs
repz
in
cmc
and
pop
add
and
or
mov
ljmp
mov
shr
push
bound
inc
mov
std
cmp
ds
jecxz
aad
push
cmp
inc
mov
xchg
lods
in
insb
jl
popf
and
jo
imul
ret
lock
mov
shll
in
adc
cwtl
fidivrl
jmp
cmp
or
sub
gs
rep
sub
enter
xchg
and
xlat
jo
shrl
popl
ljmp
out
mov
inc
push
adc
shlb
loope
jo
mov
ret
dec
and
shl
ss
xor
jo
xchg
cmpsb
stos
pop
mov
subb
loope
dec
sub
pop
roll
or
dec
inc
inc
mov
cli
pshufw
fdivp
mov
popa
jo
pop
addr16
vmwrite
sbb
jle
inc
cmpsl
rorl
inc
xchg
mov
nop
inc
daa
sub
or
into
jo
icebp
andl
mov
inc
aas
inc
jo
xchg
dec
sub
in
js
adc
jne
add
cmp
imul
sbb
dec
rclb
cmp
jo
test
push
mov
jo
std
dec
lds
adc
jmp
pushf
aad
and
push
popf
scas
and
push
inc
std
out
inc
jne
pop
stos
or
clc
push
das
popf
dec
inc
fistl
fmulp
mov
dec
xchg
cmp
add
lock
lods
sub
leave
es
or
sub
ds
pop
xchg
mov
dec
and
xchg
inc
int
sbb
je
pop
jo
leave
mov
std
push
sub
imul
jo
daa
push
out
leave
jno
jo
push
xchg
mulb
sub
data16
nop
inc
out
popa
shrl
fistpll
call
pop
les
sbbb
loop
mov
add
mov
bound
mov
leave
in
std
cmp
incl
dec
jle
psubusw
jo
arpl
stos
inc
pop
std
lds
xchg
je
repnz
inc
dec
leave
cmp
or
pop
pop
test
push
jo
sbb
std
jmp
or
fisttpl
lds
and
xor
jecxz
mov
subl
sub
lock
out
cltd
int3
popa
inc
jle
loop
xchg
push
test
adc
rcrl
nop
mov
adc
dec
cwtl
inc
sahf
nop
jp
sti
loopne
lcall
sub
cmp
jle
cmp
sbb
and
lods
push
push
inc
mov
jo
sub
push
std
data16
out
int
jmp
push
pop
mov
inc
cmpsl
jo
std
in
mov
sbb
test
inc
out
icebp
cmp
sub
cld
and
inc
cli
into
push
jo
lds
pop
scas
xchg
cmpb
add
sub
adc
subb
lock
pop
add
ret
jp
rclb
nop
pop
mov
imul
out
jle
jo
pop
test
insl
push
stos
loope
inc
andps
pop
out
push
cmc
cmp
daa
sti
push
pop
in
insb
fidivrl
sarb
call
sub
mov
dec
push
jo
out
aad
or
and
adc
jo
in
inc
leave
mov
out
incb
enter
jbe
dec
rorb
outsl
shll
lea
jo
jge
insl
xlat
bound
js
ret
adc
and
test
inc
mov
push
jo
imul
ret
and
negl
test
fwait
test
mov
or
hlt
jb
leave
push
shlb
dec
mov
push
insl
sbb
clc
mov
inc
cmp
stc
and
xor
mov
fnstcw
sarl
push
clc
mov
xchg
insl
imul
add
xchg
or
jge
mov
inc
sub
add
mov
push
xchg
mov
sbb
cmp
xor
insl
mov
movsl
ds
pusha
sbb
adc
scas
adc
out
nop
iret
sub
xchg
and
movsb
lods
adc
popf
mov
mov
cmpsl
nop
addb
jg
jo
les
int3
mov
xchg
cmc
adc
add
fsubr
fcmovb
push
push
or
pusha
in
in
notb
jo
push
es
mov
jbe
sub
add
int3
lcall
pusha
movb
jmp
lahf
pop
dec
inc
mov
jns
jo
add
adc
and
and
shll
inc
out
loope
arpl
cmpsl
inc
mov
pop
jecxz
jo
push
adc
add
pop
xchg
les
sbb
sbb
mov
lods
mov
jo
lock
dec
cld
jo
les
xor
int
enter
lods
fstpl
push
mov
push
movsb
rcll
js
or
and
add
jbe
bound
push
movsb
mov
fnstcw
jns
js
out
or
mov
xchg
rclb
inc
pushf
mov
dec
push
xor
cwtl
jnp
adc
sbb
cmp
push
ret
in
cmp
pusha
push
insl
sub
push
and
mov
inc
inc
sub
cwtl
cmp
addb
jo
dec
std
daa
dec
test
push
imul
dec
stc
fildl
in
add
push
add
popa
jo
ret
mov
adc
jo
sbb
je
jo
popf
add
mov
data16
ret
subb
lock
or
cmp
cmp
mov
insb
shl
lret
xor
int
dec
jo
out
sub
mov
das
push
sub
push
xor
xchg
popa
jo
test
or
jo
gs
dec
hlt
xorl
push
sbb
push
sbb
aad
mov
inc
fwait
and
repz
jo
scas
xor
mov
int
cmp
jae
lds
aam
fldl2t
icebp
sub
adc
sub
rcr
ret
add
dec
rol
out
les
repz
ficoml
cmpsb
js
jb
add
dec
sti
fisubrs
xchg
cmp
mov
in
scas
daa
jo
cs
dec
mov
stos
add
add
push
in
addb
add
mov
int3
lds
hlt
jmp
cmp
sbbb
jge
jo
mov
xchg
jo
xor
mov
loop
push
cmp
jo
pop
add
adc
addb
jo
fld
sub
nop
mov
mov
je
test
or
cmp
adc
gs
jo
push
jmp
out
push
push
jge
sbb
lods
nop
inc
add
sbb
sub
mov
out
mov
stos
jl
sub
mov
mov
data16
jo
fmuls
add
jno
aam
mov
sub
std
jg
jo
icebp
shll
sub
adc
adc
push
in
test
leave
sub
ss
push
pop
mov
js
fnstsw
ljmp
pop
out
test
mov
test
cmp
fnstsw
inc
shll
add
fidivl
dec
shrb
jae
cltd
jne
out
cld
jp
movsb
jo
push
sub
cmpsb
data16
jo
dec
jecxz
push
bound
sub
jne
or
roll
jp
pop
jo
flds
add
push
popa
pop
lds
ret
into
xor
push
addb
aad
je
sbb
mov
sub
jmp
out
cmpsl
pushw
add
cmc
and
ss
jo
ret
mov
in
jo
mov
fildll
in
jo
lock
js
sti
test
or
ret
lods
into
out
insb
jo
add
push
int
rclb
push
xor
push
cmp
sub
push
fisubs
and
hlt
mov
cmpsl
ljmp
sbb
pop
dec
sub
shl
int3
sbb
mov
fdivl
push
jns
and
inc
jo
rol
or
xor
sub
mov
cmp
lea
leave
out
bound
idiv
mov
mov
ret
in
movl
js
sub
in
xchg
sub
pusha
xchg
push
arpl
jb
insb
xlat
ss
push
pop
pop
gs
jo
xor
cwtl
xor
int3
jb
inc
cmpl
pop
mov
jo
daa
jl
loope
pop
pop
jo
les
sbb
je
pop
pushf
int
xor
pop
insb
fisubs
push
add
pushf
pop
je
movsb
dec
mov
scas
and
pop
int3
jno
stc
fdivrl
cmpsb
xchg
inc
cmp
and
jns
dec
gs
out
pop
and
xchg
push
xchg
out
loopne
rcll
mov
mov
and
gs
jo
movsl
sbb
xor
pop
mov
loope
xor
fdiv
insb
jbe
mov
or
cmp
sub
lahf
int
repnz
inc
xor
sbbb
imul
aam
jo
ljmp
jns
inc
scas
jo
and
add
test
pop
mov
dec
lds
push
pop
stc
std
mov
out
dec
jo
je
cmpsl
mov
pop
pop
jo
mov
arpl
sub
mov
and
mov
push
leave
mov
fiadds
push
arpl
xchg
sarl
or
pop
xor
mov
push
int3
lea
mov
cvtps2pd
aam
mov
mov
add
xor
jo
je
sbb
jbe
arpl
in
xor
and
imul
mov
ja
iret
insb
lret
mov
pusha
and
inc
push
cmpsb
jmp
push
sbb
mov
add
repz
xchg
fidivs
movsl
dec
jo
icebp
dec
hlt
sub
push
jne
shlb
jge
jo
fisttpl
in
jno
inc
jo
sub
or
mov
lret
jo
leave
xchg
psllq
scas
ret
icebp
out
je
js
outsb
add
fidivl
imul
lods
insb
mov
insb
testb
ss
fdivp
cld
cmp
mov
or
and
nop
jo
inc
xchg
mov
jmp
stos
pop
jo
in
js
out
mov
std
cmpsl
pusha
es
inc
loope
push
push
cmp
rclb
adc
jl
jno
orl
or
sbb
jg
sbb
test
mov
nop
lods
scas
jmp
testl
sub
jge
pop
push
mov
popf
push
or
add
in
je
lea
lret
lds
stos
pop
mov
outsl
fwait
add
jecxz
cmp
arpl
lcall
jo
or
sbb
sbb
or
jae
mov
jbe,pt
xor
lds
xchg
outsl
pushf
ss
pop
jo
mov
int
lds
in
jg
push
div
fsubrs
mov
jo
pop
cltd
push
lds
mov
cmpsl
out
rcl
ds
xorl
lods
push
xorb
mov
add
loop
lds
movsb
js
shlb
jo
std
inc
mov
cld
jmp
mov
fbld
jo
jmp
ret
and
jo
adc
sub
dec
addr16
cmpsb
jo
cs
addr16
pop
jle
jo
pop
mov
jo
lds
notb
sub
jo
pop
shr
push
pop
loop
inc
std
adc
or
jmp
shlb
jg
jge
jo
rcrb
std
scas
push
ret
xor
xor
test
mov
int
in
jo
psubq
les
mov
aas
repz
shrb
cs
cwtl
orb
sub
sub
mov
mov
imul
int
jo
cmpsb
xor
jo
cmpsl
jns
push
mov
mov
push
es
sbb
bound
arpl
imul
mov
cs
sub
pop
jo
test
outsb
mov
sub
loope
push
fwait
fs
mov
xchg
fdivl
punpckhbw
aas
lcall
js
movsb
jmp
add
sub
pushf
lcall
in
mov
sub
lret
in
aas
add
jo
int3
mov
gs
mov
jecxz
jl
inc
jo
ret
insb
imul
loope
push
mov
inc
jp
mov
lds
arpl
mov
arpl
test
out
jl
rolb
loope
loopne
sbb
jo
push
jno
lds
rorl
scas
dec
jbe
or
je
xor
into
ret
add
and
push
cmp
push
dec
add
push
mov
mov
insb
movsl
dec
aad
jo
loope
mov
je
rorl
jns
jo
rcrb
jnp
int
aam
cmp
sti
sub
in
or
in
fnsave
jo
sbb
mov
subl
enter
xchg
jo
aad
mov
lods
mov
jns
jo
movsl
fcompl
dec
xor
mov
and
stc
sub
jo
pusha
cltd
xchg
lock
sbb
mov
and
dec
lds
push
cmp
xchg
cmp
lret
rclb
stos
sub
sbb
inc
sub
insl
jo
mov
stc
imul
jmp
mov
jo
inc
pop
daa
and
add
fimull
mov
jmp
mov
cmpl
lock
lods
jo
aad
xor
xor
adc
xor
lret
mov
or
pop
mov
cmpb
sti
xor
sbb
ja
adc
xor
lods
test
jo
mov
stc
leave
filds
fisubs
jo
push
cmc
pmulhuw
xor
and
mov
sahf
jo
push
mov
cmpsl
lock
inc
cmpsb
scas
jmp
dec
loope
lret
divps
mov
gs
aaa
xor
sahf
jne
and
psrad
push
jbe
bound
f2xm1
and
bswap
jp
int
sub
and
js
test
jno
sub
dec
and
and
push
jle
jbe
je
jg
lret
adc
in
fdivrs
cmp
in
inc
jo
rorw
clc
les
jo
loop
ss
fstpl
cmp
xor
loopne
mov
push
dec
ret
or
push
jo
inc
mov
mov
lods
nop
shll
inc
jl
je
cli
loopne
cmc
add
push
lds
or
sub
inc
xchg
mov
sbb
jmp
adc
mov
pop
cmp
xchg
inc
ljmp
jo
fimuls
shr
inc
mov
les
adc
jmp
cmpsl
js
or
sahf
jo
rorl
call
movsl
sbb
lds
push
fstpt
sbb
mov
mov
sub
lock
xchg
xor
jae
push
ret
sub
nop
mov
add
cmpsb
adc
xchg
mov
out
movsb
jo
fwait
dec
sub
or
pusha
cwtl
loope
push
pop
dec
xchg
call
sub
adc
mov
xlat
jo
pop
in
loop
pop
xor
jmp
jo
jno
popf
sub
ret
mov
in
or
xchg
or
arpl
push
ljmp
outsl
lds
push
pushf
addb
stos
jo
jb
addl
or
std
jo
inc
ret
daa
xchg
jo
ja
pop
cmp
call
icebp
lds
mov
out
pop
cwtl
adc
jo
inc
and
movsb
jo
mov
xchg
xchg
jmp
jl
sbb
sub
out
xorb
lods
mov
sarl
ret
jo
mov
mov
lahf
scas
stos
jmp
push
fidivs
aaa
mov
popa
mov
out
jmp
out
or
jge
js
sti
mov
add
push
aad
lock
push
xor
push
into
push
fbstp
push
pop
and
loope
or
mov
lds
jo
test
xchg
cmp
mov
rorl
push
adc
sbb
ret
pushf
lds
jno
scas
xchg
dec
jmp
in
ret
sbbb
jle
mov
or
andl
cwtl
jae
jle
jo
push
popf
test
xor
out
mov
jo
inc
jb
fwait
dec
test
aas
loope
popl
in
push
jo
cmp
pop
lcall
je
cli
cmp
ds
push
outsb
stos
add
cmp
inc
in
mov
mov
fnsave
jnp
or
mov
push
add
cmc
jmp
and
dec
hlt
cmp
push
andb
loop
test
cvtdq2ps
jo
xor
and
test
leave
jecxz
mov
mov
xor
or
sbb
stos
cmpsb
add
aam
jbe
lret
mov
sub
loopne
add
jo
ljmp
inc
jle
leave
sub
xor
insb
les
jo
push
test
or
jo
push
or
loope
jg
jo
xchg
lea
push
jb
out
inc
mov
mov
jle
sub
scas
push
mov
cmc
cmpsb
inc
xchg
mov
jmp
jecxz
dec
out
dec
stos
andb
repz
jmp
or
mov
pop
xchg
loop
int3
sbb
dec
dec
xchg
and
pusha
pushf
hlt
push
test
mov
rorl
mov
aaa
test
test
call
pop
scas
xrelease
xchg
xchg
mov
stc
push
jo
mov
leave
mov
sub
nop
dec
mov
arpl
jae
cli
daa
jns
jo
cwtl
jbe
mov
push
inc
jo
xor
mov
adc
scas
sbb
jne
jo
out
pop
repnz
jo
and
jg
cli
inc
pusha
xor
mov
loope
cmc
cmp
mov
fdiv
mov
mov
lcall
push
or
repz
hlt
sub
fidivs
imul
sti
imul
sahf
push
push
xchg
adc
cmp
push
mov
pop
pop
je
shlb
sub
cmp
lea
add
cs
mul
sbb
inc
adc
mov
mov
jb
test
fildll
fadd
insl
add
lock
or
sbb
ror
imul
push
jo
sbb
int
sarb
jo
push
cmp
iret
jo
mov
arpl
sub
inc
sub
xchg
in
mov
push
out
test
mov
lahf
jo
std
or
ss
and
hlt
test
andb
fdivrs
pop
jo
cmpl
pop
scas
xor
sub
jmp
push
or
filds
inc
sbb
jo
mov
lock
xchg
bound
inc
imul
push
outsb
cmpsl
push
jne
pushf
lahf
insb
les
int3
addr16
mov
in
cmp
push
ljmp
xor
cmp
mov
in
sbb
add
jo
test
ret
sbb
das
jne
je
jo
sub
mov
in
hlt
subb
sar
jle
movsb
out
pop
and
sbb
ret
pop
jo
loope
cld
xor
push
xchg
push
mov
jo
test
inc
fiadds
jmp
jo
lea
out
sarl
fwait
jo
mov
hlt
push
imul
dec
insb
repnz
fsts
ror
lcall
lahf
cmpsb
add
std
jo
fcmovnb
sbb
cwtl
inc
mov
mov
jo
rcll
lock
xor
jo
fildll
sub
cmp
pop
jne
jno
adc
cmp
pop
scas
fwait
je
sbb
jo
fs
pop
xchg
jb
jo
out
int3
sbb
jo
jmp
sub
mov
mov
push
add
ds
lret
jo
cmp
stos
mov
rorb
aad
jo
sub
cld
es
xchg
jge
in
xor
enter
aam
mov
das
adc
or
sbb
aas
jo
push
sub
and
push
rclb
sub
ret
mull
ss
into
addr16
dec
add
or
js
insb
pop
out
ds
insl
xchg
js
sti
fidivs
ret
or
sbb
inc
lea
sbbl
jo
rcrl
ret
dec
mov
push
adcl
fdivl
push
lahf
jl
std
pop
daa
inc
pop
jo
and
ret
xorl
lds
xchg
mov
aad
daa
and
jo
pop
mov
mov
mov
pop
jne
std
in
jo
hlt
xor
mov
jb
rorl
inc
xchg
dec
lahf
xchg
xor
mov
lock
movsb
sbb
mov
mov
in
movsl
mov
xorb
cltd
lahf
push
xor
mov
ret
cmp
cs
fcoml
ret
push
lds
pop
adc
leave
sub
mov
cmp
cmpsb
mov
jo
lds
push
inc
jo
hlt
stos
ret
jo
mov
fldl2e
xchg
and
adc
push
jo
shll
adc
mov
je
daa
jp
movq
out
jb
mov
scas
xor
movsb
pop
je
out
push
or
sub
jae
out
jo
in
mov
jno
xorl
pop
inc
sbb
mov
jo
lds
fucomp
push
cmp
jmp
or
aas
int3
pop
dec
inc
std
jo
inc
push
in
and
imul
shll
push
nop
dec
xor
addl
sub
and
xchg
prefetch
test
pop
jo
mov
cmp
and
fisttpll
int
ret
test
imul
push
mov
inc
mov
adc
test
jo
xor
cltd
scas
push
nop
ss
jmp
push
xor
jno
das
std
sub
mov
les
pop
or
leave
pop
rclb
mov
xchg
inc
dec
push
fnop
jbe
adc
cltd
js
xchg
sahf
jnp
fwait
aam
mov
shr
in
rorb
or
or
orb
cmpsl
sub
movsb
xor
sbb
mov
xor
hlt
jbe,pn
rcl
inc
inc
imul
lahf
shlb
dec
push
cmp
fldl
pop
mov
jo
iret
jp
and
int
pusha
mov
jle
inc
in
dec
jge
jo
cmp
loopne
mov
jbe
add
pusha
add
add
jge
hlt
leave
ljmp
sbbl
jo
xor
in
xor
pop
or
ud1
loope
mov
mov
jo
xchg
int
dec
mov
int3
outsl
cmp
in
orb
stos
lea
js
or
jo
pop
mov
sbb
std
iret
dec
js
inc
mov
ss
icebp
mov
push
dec
imul
jns
jo
sarb
subb
cs
aam
movsb
mov
inc
add
out
aaa
nop
repz
sub
mov
repnz
jo
mov
insb
jns
adc
inc
out
lds
cmp
xor
leave
mov
and
out
jo
in
adc
mov
lds
sbb
fsts
pushf
or
fwait
ret
aam
lods
or
test
inc
hlt
jo
xchg
std
push
add
pushf
push
add
int3
push
jae
sbb
lret
cmpsb
dec
xchg
loop
insb
out
lahf
xor
mov
add
insb
test
and
jecxz
pusha
sahf
jo
jmp
rcll
dec
jo
pop
xor
push
mov
sbb
mov
pop
mov
jo
movsb
dec
push
xor
test
xor
lea
jno
jo
arpl
js
cmp
js
xchg
je
jo
leave
mov
fwait
dec
ret
outsl
jo
xchg
lds
sbb
dec
enter
mov
jo
mov
addr16
dec
leave
jo
ljmp
je
cmc
xor
add
adc
mov
flds
js
lods
clc
jo
inc
mov
jp
shl
cmp
mov
jle
sbb
jo
popf
fmull
ret
iret
mov
test
aaa
cli
push
push
popf
clc
out
insb
pop
ss
mov
push
push
sahf
ror
sbb
rcl
sub
loop
add
jl
pop
loopne
pop
xorb
scas
mov
clc
and
jns
adc
xor
gs
jle
in
aas
jo
mov
out
jo
rol
sub
jo
inc
mov
push
scas
popa
jo
in
inc
int
xor
inc
mov
outsl
lds
add
in
jl
das
lret
je
mov
push
sub
cltd
inc
jle
mov
fdiv
int3
jae
xor
jns
dec
or
pop
jo
jne
scas
test
push
aad
adc
push
push
jo
sti
rol
inc
adc
dec
insb
dec
pushf
hlt
pop
cld
comiss
stos
adc
jp
lcall
shlb
aad
adc
scas
jmp
ret
test
jns
aas
loop
jo
pop
mov
popf
push
sbb
dec
push
int3
xchg
xor
cmp
fnstenv
scas
mov
push
sub
lahf
ret
inc
jo
xor
aad
shl
in
mov
sub
xor
and
scas
fwait
or
or
test
dec
jo
push
mov
xchg
push
jo
loop,pn
movsb
jp
shll
icebp
cmp
sub
pushf
out
xor
mov
and
push
jmp
icebp
xchg
cmp
bound
dec
xor
outsb
aam
movsl
pusha
jle
loope
adc
adc
std
cli
subl
and
and
inc
nop
divb
mov
adc
mov
hlt
test
xor
mov
push
ret
jo
sbb
fists
or
cmovo
fwait
xor
jb
pop
stos
cmp
sbb
dec
xchg
pop
pushf
add
jo
int
imul
pop
jo
andb
jo
addr16
mov
in
add
sbbb
push
lds
out
cmpsb
jno
addr16
hlt
inc
stc
push
xchg
jb
fistpll
pop
xor
call
scas
addb
test
int
mov
sub
mov
push
mov
add
fld
jo
xlat
adc
lds
or
jo
shll
jo
inc
ficoms
adc
lds
mov
and
je
push
or
andb
cmc
sahf
and
fldl
sub
ret
jo
fbstp
push
adc
aas
inc
fcmovne
stos
hlt
push
mov
push
pop
gs
sbb
lcall
push
adc
mov
cmp
in
jle
or
lods
mov
push
cwtl
inc
data16
and
xchg
fnstsw
xchg
jo
xor
adc
mov
mov
add
jmp
cmc
xchg
int3
std
xor
or
jo
call
ror
inc
idivl
mov
mov
jo,pt
jmp
sbb
sbbl
popf
jo
and
pop
and
jo
inc
mov
pushf
push
jo
jp
or
imul
andb
sbbb
lds
inc
xchg
mov
shll
and
sti
dec
pop
sub
stos
jle
in
and
push
imul
push
jo
orb
insb
aad
outsb
test
or
jle
sbb
ret
daa
jo
lds
stc
and
and
adc
orb
push
in
mov
adc
js
movsb
out
sub
lret
and
jmp
push
jo
dec
pop
jl
cmp
mov
stc
pop
add
aaa
push
push
pop
sti
inc
insb
jo
fldt
cmpsb
jp
daa
mov
jo
dec
lcall
aam
cmc
jecxz
ret
jo
movsb
lds
arpl
mov
dec
lret
mov
jo
pop
mov
sbb
je
sahf
jo
insb
xcrypt-ofb
cmpsl
stos
jo
test
xchg
shll
dec
nop
sbb
add
mov
adc
test
sti
sub
cmpb
lret
insb
rcrl
push
scas
int
jg
loop
jo
mov
ret
jo
and
cmp
ret
xor
dec
xor
bound
rol
add
cmc
clc
js
dec
aas
push
push
outsb
inc
jge
or
repz
and
mov
insb
add
stos
pop
jo
jno
lock
rcrl
leave
push
lret
mov
cmpsl
sub
jae
js
sahf
enter
int
jo
pop
mov
jecxz
aas
insb
shll
shl
pop
jo
test
ret
repz
sbb
insb
pop
andb
dec
ljmp
out
cmp
imulb
adc
fisubrl
jo
xchg
outsl
xor
roll
jo
pushf
inc
sub
jge
jo
xchg
add
popa
mov
aaa
out
aam
and
nop
stc
testl
shll
lahf
shrb
lcall
in
adc
fs
jo
cld
inc
push
flds
clc
add
sub
and
mov
lcall
jo
lds
cmp
cld
push
ljmp
jl
jg
push
jmp
inc
clc
shlb
sub
push
add
jb
or
mov
mov
pop
sti
ret
xchg
jmp
push
hlt
jo
outsb
mov
or
xchg
xchg
jo
sbb
mov
inc
jne
jb
lret
mov
jo
faddp
in
or
xor
jo
les
and
sub
leave
jo
ss
pop
int
jge
jo
xchg
aas
sahf
in
xchg
lods
cld
fs
dec
xchg
jo
movsb
ret
push
jne
mov
mov
xchg
jo
lods
subb
leave
ret
push
dec
inc
test
pop
mov
or
int3
jo
nop
int
mov
repz
xor
and
leave
mov
jo
mov
dec
lahf
aam
jo
jp
stos
add
rcll
int3
out
jo
orb
mov
cmp
das
loope
xchg
jne
xor
fpatan
mov
jg
lds
xor
cltd
or
test
pop
les
mov
out
ror
jmp
arpl
dec
cwtl
sub
sahf
mov
push
scas
lcall
mov
aad
imul
sub
adc
mov
pop
in
inc
push
jl
lea
xchg
or
bound
jo
mov
mov
pop
scas
lods
push
jne
cwtl
rol
mov
mov
repnz
mov
sahf
bound
mov
adcb
jb
mov
or
jmp
pop
shlb
testl
flds
test
std
fs
cs
jo
sti
bound
je
sbb
mov
push
lea
and
outsb
and
pop
int
movsb
nop
adc
bound
lock
js
mov
movsb
mov
js
leave
test
out
int
ficoml
icebp
inc
jo
repz
lds
and
jo
lahf
dec
es
mov
sub
std
fs
push
out
inc
jo
xchg
mov
repz
xor
jl
hlt
arpl
and
mov
add
es
mov
rcrb
js
sub
outsl
jo
push
gs
fdivrl
lahf
mov
imul
lret
loope
mov
push
sub
imul
pop
jo
std
test
inc
test
aam
sub
sbb
pop
and
icebp
inc
leave
adc
test
cmc
das
ret
and
adc
js
push
sub
cmp
push
in
sub
cmpb
dec
adc
loop
inc
cltd
jo
or
out
data16
mov
inc
pusha
inc
mov
out
push
sahf
xchg
cmpsb
push
jno
push
cmpsl
insb
mov
in
ja
sub
add
pop
lcall
addb
lods
aad
shlb
xchg
and
sub
es
push
aad
jmp
inc
nop
mov
push
push
insl
jo
cmp
lock
dec
leave
cld
cli
sub
adc
pop
xchg
lahf
jecxz
push
sbb
adcl
sub
pop
adc
aad
stos
imul
xlat
sub
test
dec
push
jno
jo
adc
add
jo
sbb
and
push
adc
jg
loopne
fs
adcb
push
xchg
mov
cmpsb
nop
jle
mov
xor
mov
cwtl
pop
jle
inc
daa
jb
xchg
lods
insb
jg
sahf
sub
sbb
fmuls
push
jle
sub
sub
test
push
lock
inc
mov
push
jae
jle
cmp
mov
je
jo
addr16
repnz
mov
jo
in
dec
je
in
lods
jo
ja
loopne
aad
inc
dec
push
jno
jns
push
ret
push
adc
xor
hlt
icebp
fsts
jle
ja
inc
pop
dec
cs
mov
cli
insl
das
fstpt
js
jnp
into
mov
aaa
mov
jmp
rorb
jb
jmp
mov
add
popf
jo
fcmovbe
and
clc
jo
add
jbe
jo
pop
loop
lret
push
sbbl
jp
mov
loopne
push
addr16
fidivl
mov
mov
iret
lds
push
lret
cmp
cmp
jo
fmuls
mov
mov
subb
dec
jo
mov
inc
add
mov
dec
nop
cmpl
jg
scas
or
jo
xchg
lea
out
push
popl
test
and
push
xor
add
psadbw
jo
add
cmp
pusha
shl
and
fs
jo
cmp
push
aad
icebp
cmpl
fidivrl
jo
or
jbe
fsts
sub
loopne
add
push
lods
fistpll
jno
jl
push
mov
and
lahf
pop
push
xchg
std
xor
push
mov
jb
xor
shl
or
mov
push
lret
and
divl
stos
aam
mov
or
or
lds
adc
data16
clc
mov
jmp
js
into
cmp
inc
stc
jo
ret
xor
test
push
and
sti
mov
popa
jo
and
or
ja
loopne
and
mov
das
mov
mov
add
jp
ret
mov
insl
jne
stc
xchg
icebp
lea
mov
scas
ja
xor
jo
mov
and
xchg
jp
jo
not
sbb
cmpb
ljmp
add
push
mov
dec
sbb
in
push
mov
mov
js
mov
std
rorl
mov
pushf
mov
lret
test
and
sbb
pop
sbb
sub
faddl
adc
repz
shlb
sub
cmp
data16
xchg
daa
loope
jo
pop
je
popf
sbb
mov
outsl
mov
jecxz
and
inc
push
stos
int
shrl
jns
cmp
inc
addr16
imul
nop
test
jo
aam
sbb
jb
push
ja
ret
xchg
xchg
addr16
fs
adc
adc
jo
aas
mov
or
rcrl
scas
jo
rolb
out
add
in
insb
test
int3
push
fadds
inc
jo
in
sub
adc
insb
adc
mov
clc
and
xor
dec
jno
std
jo
hlt
inc
out
jl
repz
and
push
fsubs
mov
test
jo
xchg
jecxz
lret
mov
loop,pt
or
push
jo
jb
in
jmp
test
cwtl
lds
add
xorl
pusha
xchg
jo
jmp
les
fldcw
sub
fidivl
or
nop
jo
ja
outsb
lcall
dec
ret
inc
mov
inc
rcrl
and
test
sub
and
cmp
or
repnz
mov
loop
mov
push
cmpsb
ret
leave
repnz
jo
fwait
popf
mov
ret
dec
mov
loope
sub
or
xor
test
or
roll
or
mov
les
mov
cld
test
and
push
movsl
das
jo
sbb
mov
adc
mov
repnz
out
or
cmp
jle
ret
es
gs
push
xchg
sti
repz
out
push
xchg
push
roll
call
sbb
bound
sub
jo
sub
jne
ret
sbb
scas
or
das
push
insb
test
gs
sub
cmpsl
jo
frstor
mov
sub
sbb
in
data16
push
shll
bound
xor
mov
jo
sub
add
and
out
or
cmpb
inc
int3
mov
push
jmp
filds
cli
push
jge
push
movsb
mov
out
xchg
jo
cmp
push
cmp
in
imul
shl
mov
and
subb
mov
mov
cmp
pop
test
adc
push
dec
test
jg
js
pop
arpl
mov
movsb
dec
fbld
and
pop
pop
insl
jb
data16
add
push
xchg
xchg
ret
add
les
ret
aad
icebp
js
xor
pop
fcmovnb
nopl
imul
mov
mov
popa
shll
scas
mov
cmp
jmp
mov
idivb
ljmp
xor
in
and
jo
lds
clc
add
nop
rolb
lahf
les
sbb
sarb
inc
fildll
imul
mov
sti
cmp
data16
or
push
and
inc
nop
sti
mov
xor
shll
mov
mov
cli
js
push
in
mov
push
and
movsb
jmp
data16
arpl
inc
fsubrs
jo
or
ret
fidivl
cmp
jl
ror
fsubl
push
adc
int
nop
pop
and
jl
addl
rclb
adc
cli
dec
mov
repnz
cmc
ds
adc
jo
adc
leave
inc
popf
jp
jo
mov
cwtl
iret
push
mov
aas
subl
inc
es
jb
rcrl
imul
or
mov
xor
stc
js
push
xchg
push
xchg
dec
cltd
xchg
loopne
or
lea
jns
cmc
xchg
push
stos
jl
aas
dec
pop
and
push
movsl
jp
push
les
push
insb
out
nop
jbe
insl
andl
xchg
enter
mov
or
popa
jge
sbb
bound
and
outsl
mov
xchg
push
stos
or
mov
hlt
test
jae
mov
cmpsl
clts
outsl
movsb
xlat
ret
ja
ss
imul
call
js
xlat
mov
in
jecxz
in
jo
and
dec
xchg
add
jno
stc
cmc
insl
mov
xlat
fbstp
push
cmpsb
popa
xor
mov
cmp
icebp
dec
jo
mov
adc
ret
adc
movsb
inc
ds
jo
jne
test
ret
imul
mov
imul
jo
das
sub
jo
into
xor
dec
lcall
push
cmp
mov
cmp
fs
push
sahf
jo
leave
cmp
mov
loop
adc
cmp
and
out
mov
xchg
push
xchg
test
lret
pop
and
vmulps
sub
push
pop
insb
iret
mov
mov
push
jns
cmp
sbb
jg
and
andb
xchg
push
or
cmp
sub
xor
sti
and
hlt
sbb
jo
add
jno
sbb
jo
ret
mov
add
fnstcw
in
lea
push
ja
fdivrl
addb
cld
jo
jmp
sub
popa
dec
xchg
inc
inc
push
roll
add
in
dec
xor
lahf
lds
ljmp
andl
test
pop
adc
insb
push
mov
xor
bound
jo
incl
inc
loopne
mov
ret
andl
push
jmp
mov
loope
ds
ljmp
setnp
xorl
insb
push
ja
ret
push
pop
and
push
rorl
inc
cli
xchg
sub
jo
sbb
orl
xchg
push
stos
sarb
dec
or
pop
ud2
xchg
inc
pop
pushl
rcr
jo
cmp
xor
jo
icebp
fadds
shl
jo
sub
shll
das
add
aad
jne
inc
test
xchg
jb
or
dec
add
xlat
sbb
xchg
xor
jns
hlt
in
fs
adc
push
test
jg
loopne
xchg
sub
push
fnsave
jge
and
inc
xchg
sbb
and
rorl
stos
inc
fnsave
aad
and
pushf
int
rcrb
pop
xchg
mov
or
dec
mov
paddb
lret
shrb
jle
pop
out
and
jmp
js
pushf
jo
mov
mov
jo
pop
sub
jge
enter
dec
inc
loopne
jne
mov
mov
dec
push
sahf
cld
jo
jge
pop
adc
and
in
push
scas
inc
stos
mov
int
sub
mov
lcall
shrl
int3
push
sub
fnsave
not
xor
jo
xchg
xchg
jo
lds
xorb
sub
sahf
ficoms
test
lds
je
sub
add
js
jno
mov
jb
xchg
mov
repnz
sbb
and
jo
int
mov
nop
ret
xchg
push
or
inc
mov
lock
cmp
je
jo
xor
inc
inc
sbb
lahf
imul
int
add
push
leave
jo
pop
cmp
jb
cltd
ret
in
xchg
jo
pand
leave
lahf
jle
push
adc
jo
fwait
mov
scas
inc
sub
jp
data16
and
mov
imul
sub
aas
leave
stos
ret
jnp
jge
jo
ret
sbb
sub
repnz
ret
mov
xchg
jae
leave
ficoml
fdivrs
mov
jl
and
xchg
jno
push
mov
add
jnp
cs
or
int
mov
jb
adc
inc
fisubs
icebp
jo
mov
ret
sbb
pop
scas
push
dec
push
cmp
inc
push
and
test
hlt
jecxz
shlb
js
mov
popf
dec
fs
aas
jo
enter
sub
inc
ret
xorb
cmc
push
sbb
pop
mov
lcall
jno
mov
xchg
push
push
hlt
xlat
nop
jbe
cmp
cwtl
dec
ja
enter
outsl
inc
pop
int
pop
dec
dec
mov
add
fs
sti
jo
and
shll
inc
xor
shll
cli
xor
dec
call
outsb
out
leave
fwait
jb
jo
fs
rcrb
xor
repnz
push
cmp
cmc
inc
xchg
insb
jl
push
fsubs
xchg
hlt
jbe
nop
push
imul
push
jo
sbb
pusha
pop
out
shrb
test
xor
or
lret
push
inc
jp
repnz
inc
fdivp
pop
inc
mov
shlb
jnp
fwait
pop
inc
sahf
jo
push
mov
aad
sub
push
xor
inc
sbb
lret
icebp
push
add
jp
cmp
sbb
mov
jnp
ret
xor
add
leave
clc
inc
nop
aas
mov
test
out
jo
insl
aam
pop
shll
adc
inc
test
jae
add
leave
xchg
and
icebp
jo
loop
arpl
inc
sub
bound
lds
mov
outsb
fiadds
jo
mov
xor
sub
mov
ror
lock
outsb
mov
jo
push
cmc
push
jp
insl
mov
dec
mov
mov
xor
add
lock
movsl
hlt
inc
jns
xor
mov
add
call
jmp
mov
xor
push
insl
test
out
and
rorl
aad
outsl
adc
jo
sub
lds
stos
jnp
out
pop
push
sbb
adcb
pop
cmp
lea
arpl
push
aad
dec
jo
mov
shlb
adc
shlb
jge
push
mov
mov
in
xchg
imul
jo
inc
lcall
mov
imul
sub
jo
sbb
sbb
push
loop
jo
add
mov
lock
adc
je
daa
sbb
cmc
enter
cltd
inc
xorb
pop
mov
jo
inc
addr16
inc
dec
jo
fadd
cmp
in
bound
nop
jno
test
lods
jb
jb
data16
ds
pop
add
jge
stc
pop
jne
insb
cmp
mov
or
enter
lock
mov
xchg
gs
lds
inc
stos
enter
sub
inc
jmp
gs
rcl
cmp
jo
push
mov
jo
pop
mov
xor
ja
and
cmp
sarl
jbe
inc
jo
lret
loope
cld
xchg
ret
sub
in
mov
mov
or
call
push
rclb
cmpb
or
lods
insb
imul
not
or
xor
shrb
shll
pop
int
adc
inc
out
sarb
js
push
insb
xchg
mov
outsl
jo
xlat
sbb
and
cs
ljmp
adc
stc
lcall
mov
jo
push
pusha
fistpl
and
aas
jo
mov
inc
lds
mov
sub
into
adc
or
daa
push
jmp
icebp
ja
dec
push
popf
cmp
ret
add
stos
push
daa
out
std
inc
mov
pushf
nop
inc
call
jne
ljmp
out
mov
aam
aad
mov
sub
adc
call
out
push
adc
xchg
adc
lods
lods
cmp
jo
cmc
leave
sub
xor
cmpsb
loope
call
jo
loopne
mov
dec
stc
or
rolb
jo
test
xchg
push
jo
enter
sub
iret
jo
push
pop
mov
jo
test
jo
mov
dec
mov
jb
les
cmc
test
das
sbbb
aas
mov
xor
ds
add
je
xchg
in
ja
popl
push
xor
fwait
push
xorb
aaa
pop
jge
call
ret
add
lds
or
leave
pop
inc
lea
sub
pop
sub
rcll
xor
xor
push
iret
cmp
ljmp
push
ss
adc
push
fs
leave
int3
or
lret
aas
mov
jo
movsl
int
jmp
out
mov
add
mov
lods
push
mov
jle
lcall
cmc
nop
xor
loopne
xchg
js
xor
inc
fldcw
fs
shrl
scas
push
mov
pop
cmpsl
hlt
and
dec
adc
ret
bound
mov
adc
sub
shr
aaa
push
dec
inc
jbe
lods
bound
push
hlt
lahf
jo
mov
loop
xor
xorb
das
pop
xchg
hlt
mov
mov
mov
mov
out
cmpsb
leave
jo
cmp
or
inc
mov
xor
jo
in
inc
loope
and
scas
mov
cs
xor
jo
lret
arpl
insl
mov
sahf
lahf
jo
xlat
xchg
dec
pop
xchg
sub
push
cwtl
enter
pusha
pop
sahf
cmpsb
bound
lock
jo
fldcw
mov
fbstp
push
inc
sub
push
or
sub
cmp
mov
scas
or
idivl
inc
fs
mov
cli
push
movsb
jo
adc
iret
cwtl
and
jo
fisubrl
lds
pop
lods
sub
mov
fbstp
jo
xor
test
and
lds
iret
lahf
xor
dec
mov
inc
jo
dec
sbb
and
jo
pushf
sbb
adc
mov
jo
dec
mov
inc
push
jp
pop
jg
xchg
mov
sbbb
ret
push
int
jb
subb
ret
sbb
lret
pop
sub
mov
leave
or
lods
mov
jo
ret
cmp
leave
and
sub
scas
mov
mov
mov
loopne
fs
inc
jae
cs
or
js
mov
dec
lcall
popa
push
jge
je
daa
push
cmpsb
int
jecxz
aaa
push
stc
push
cltd
andb
hlt
push
pop
imul
rcr
mov
xlat
arpl
in
push
ret
inc
mov
int3
pop
jb
insl
push
push
in
pop
leave
dec
sub
mov
repnz
ljmp
sub
inc
inc
ret
outsb
xlat
mov
clc
es
dec
jns
pop
mov
jl
jo
xlat
push
js
mov
add
inc
adc
into
movsl
fwait
nop
pop
mov
mov
jns
jo
cmp
insl
xchg
mov
jno
mov
shlb
jo
rcrb
es
jo
ja
sbb
lret
or
mov
call
jecxz
mov
ja
mov
lods
sub
push
popf
lock
dec
xor
pop
aam
mov
mov
lret
pop
fcoms
xchg
cmc
ja
lods
in
das
xchg
mov
sahf
mov
leave
lret
cmp
sti
ret
imul
jns
push
jno
push
int
and
mov
out
add
lret
fsubl
int
pop
sub
popf
in
les
or
add
test
ret
xchg
hlt
cwtl
pop
mov
jo
insl
xchg
and
cs
sbbb
lds
ret
mov
mov
lret
and
add
jns
jl
lods
cmpsl
dec
jmp
push
cmp
lahf
jbe
mov
push
and
rol
dec
jo
push
xchg
push
pop
ret
repz
shrl
subb
out
inc
lcall
jo
stc
pusha
jmp
jo
or
sahf
fidivs
shll
rcrl
add
test
or
jo
push
mov
cmp
dec
jmp
rorb
xchg
repnz
ljmp
inc
push
jo
sbb
xor
mov
push
jae
call
sarb
jo
std
adc
push
inc
jo
mov
fdivl
es
rorl
xchg
leave
vmovq
xor
jo
shrl
mov
scas
subb
out
loopne
mov
xor
pop
jo
daa
adc
mov
and
std
mov
add
inc
or
ret
lds
sub
data16
jo
shll
mov
pop
cwtl
out
adcb
push
jo
lret
mov
xchg
inc
inc
call
adc
push
cwtl
jo
ret
addr16
add
and
pop
pop
fs
xorb
fwait
ljmp
leave
add
adc
adc
rorb
lock
pop
and
pop
cmp
stc
out
xchg
dec
pop
and
cs
push
lods
add
daa
into
scas
hlt
popl
jo
pop
leave
or
and
fidivl
std
mov
jmp
or
sbb
test
xchg
out
aaa
daa
xlat
xchg
imul
fstps
data16
xchg
jo
cmc
repnz
lds
sbb
add
jo
push
jmp
lea
shl
cs
lret
ss
inc
fs
sbb
xchg
div
mov
pop
stos
ret
dec
sarl
jo
mov
dec
and
mov
xor
xchg
cmp
jo
lcall
data16
jns
cmp
inc
ret
nop
or
xor
mov
addr16
jo
xchg
sbb
ja
push
jo
pop
nop
lds
cld
xor
mov
loop
mov
push
cmp
or
leave
iret
inc
repz
es
and
lret
out
das
fwait
pop
pop
je
js
jo
cmc
sbb
jo
add
mov
adc
inc
inc
xchg
out
sbb
mov
dec
cmp
bound
push
shrb
repz
or
shr
add
fs
jae
outsb
int
cmpb
loop
pop
stc
aam
in
mov
lods
into
daa
push
cld
sub
mov
sbb
inc
shl
lret
mov
gs
or
movsb
mov
psrlw
aaa
test
int3
add
cmp
jns
in
add
inc
sbb
mov
loopne
jbe
dec
aad
outsl
mov
adc
mov
jmp
sahf
inc
in
mov
sub
push
ja
lret
xchg
pop
nop
subl
loopne
ja
decb
dec
mov
dec
sbb
push
cs
pop
insb
sub
mov
fisubrl
xchg
outsb
push
bound
stos
adc
scas
sub
push
jo
pop
push
lds
jo
push
mov
jo
push
ret
in
mov
jmp
push
dec
inc
loope
out
push
scas
fwait
and
icebp
sahf
shlb
test
adc
sub
sub
cs
mov
dec
iret
dec
and
xor
mov
leave
add
stos
fwait
gs
sub
bnd
mov
loope
fistpll
ret
dec
jo
xchg
test
sbb
leave
jo
out
fnsave
pusha
ss
sub
jecxz
or
jnp
jo
int3
adc
add
loop
jp
push
dec
mov
add
jns
push
jo
add
inc
mov
bnd
dec
cmp
sbb
jnp
leave
dec
cmp
test
jbe
lods
push
shr
xor
setle
mov
lret
jbe
stos
divb
xchg
sti
int
iret
adc
dec
test
jmp
push
dec
xchg
inc
jo
mov
scas
imul
mov
jle
or
jo
roll
jp
ja
jo
inc
pushf
mov
pavgb
mov
jle
sbb
mov
jo
lock
scas
jo
pusha
aaa
aam
sbb
test
popa
lds
mov
and
mov
das
jp
iret
push
popw
mov
in
hlt
sub
loope
add
inc
fwait
push
mov
jno
or
pop
push
xchg
mov
sahf
hlt
push
xchg
nop
mov
jbe
test
xchg
cmp
jo
push
and
push
outsl
or
loope
idiv
jo
les
adc
daa
testb
std
or
xlat
and
ds
int
in
enter
add
xor
add
jmp
movsl
xchg
out
subb
mov
sbb
jo
sub
sti
xor
mov
cmp
ss
jo
fnstenv
std
or
xor
jo
fdivrs
push
fiadds
inc
xchg
cs
jp
lock
or
adc
jo
xor
faddl
jo
movsl
jg
push
xchg
and
rcrl
orb
adc
lret
mov
or
jo
adc
ds
push
sti
scas
jo
ret
dec
cmpsl
adc
jo
shrl
jo
xchg
or
ret
dec
xor
cmp
jecxz
push
imul
jo
jnp
cmp
aaa
adc
pop
jo
sbb
cmp
jo
dec
lds
dec
lahf
mov
aad
jmp
jns
pop
ret
stos
cmp
or
scas
roll
mov
outsl
jo
test
aaa
xor
add
sub
cmp
push
adc
and
rol
fbstp
loop
push
xorb
push
lock
in
sbb
nopl
xor
sbb
jb
out
shr
mov
sbb
aaa
xchg
call
int
int3
jo
or
test
cmp
cmp
sti
mov
sbb
ficompl
mov
ljmp
mov
jo
jl
mov
and
or
or
or
xchg
es
sbbb
fdivl
stos
into
movhps
pop
subl
jecxz
push
mov
fldl
add
mov
andb
test
push
std
jo
outsb
loop
inc
aaa
in
inc
jo
inc
lds
lock
sub
mov
cmp
jo
loop
sbb
mov
cli
pop
xchg
dec
inc
push
jo
pop
cmp
inc
push
js
jo
pop
jns
jle
xchg
inc
jo
cmp
add
fs
loop
xchg
sbb
mov
push
xchg
cmp
jecxz
loopne
shlb
stc
mov
mov
movsl
jns
and
jo
inc
imul
xchg
and
dec
jne
cmpsb
stc
lds
pmaxub
dec
repnz
outsb
sbb
cli
add
mov
ret
jno
pushf
repnz
shll
lret
jmp
mov
push
jo
rol
pusha
sbb
jo
lds
sub
repz
mov
xor
push
add
xchg
add
add
cmc
repnz
jo
cmpsl
iret
frstor
movzbl
ret
or
sub
dec
sub
jo
jb
fstps
mov
cld
mov
divps
loop
inc
jge
jo
xor
push
nop
or
shlb
jne
ljmp
rorl
push
pop
jo
cmc
mov
push
jo
andb
je
int
and
pop
jo
out
enter
ret
test
jns
and
jo
xor
push
movsb
leave
inc
jb
stos
adc
ds
cmpl
sarb
mov
push
in
arpl
sbb
shl
jecxz
jo
outsl
mov
jns
vpaddusw
enter
jne
ja
push
add
loope
scas
popa
xor
shll
fists
inc
jno
lcall
aam
fs
and
leave
jno
rcrb
les
and
cli
mov
out
jo
dec
xchg
cwtl
mov
inc
jle
shlb
xor
sub
jo
negl
cld
rol
pop
mov
mov
bound
outsl
ja
xchg
mov
push
pop
mov
fstl
adcb
jg
ja
inc
push
push
and
dec
push
sarb
pop
iret
cmpsb
addr16
jp
in
xor
jo
ffreep
jmp
push
cmp
movsb
push
jo
push
mov
cmovnp
insb
fistpll
jb
push
jo
or
xlat
mov
ljmp
out
dec
and
ljmp
sub
push
xor
ret
data16
std
imul
sti
les
inc
test
jnp
push
vmovdqa
out
jo
push
mov
shl
sbb
cmp
adc
ret
mov
and
cmp
sbb
and
jno
nop
push
sub
inc
lahf
out
js
xchg
outsl
packssdw
int3
add
daa
dec
jo
pop
shll
jmp
lock
loop
inc
int
dec
mov
mov
jo
xchg
mov
mov
les
inc
push
aam
insb
dec
sbb
testl
or
aas
cmp
sub
lret
pushf
push
cmp
add
into
notl
sub
jo
adc
iret
xor
adc
inc
pop
xor
sbb
sbb
push
in
push
ror
loop
mov
popa
nop
adc
or
cs
rcll
and
lds
repnz
imul
push
xchg
in
insl
loope
mov
leave
lock
in
inc
ret
adc
or
lcall
imul
add
in
jo
loope
sub
sbb
mov
xchg
mov
xchg
jmp
mov
sbb
cmp
retw
add
lret
jo
push
fsub
inc
cltd
movsl
data16
cmp
scas
pop
sbb
jo
mov
cmc
out
ja
incb
aaa
jb
inc
jo
inc
in
or
and
fnstcw
xchg
in
mov
cmp
jo
aad
lret
and
cmpsl
pop
pop
test
dec
mov
mov
or
enter
mov
aaa
push
adc
in
ret
push
mov
daa
add
shll
jmp
lret
or
push
out
popf
jo
sbb
jo
andb
lret
divl
inc
imul
out
jo
jmp
in
aad
icebp
jo
bound
jg
sub
jo
mov
in
std
push
push
mov
aam
rcll
jne
xchg
enter
xor
ja
imul
movnti
jmp
jo
sub
in
sbb
inc
jo
sub
das
pop
jo
mov
cmc
cmp
sbb
jo
push
pop
cmpsl
mov
scas
mov
lock
push
cmpb
add
fidivs
out
insb
imul
mov
cmp
ret
lret
cmpsl
xchg
xchg
mov
mov
adc
pusha
jo
lds
scas
adc
sbb
jo
push
imul
push
popf
add
pop
leave
out
jbe
push
push
mov
es
hlt
add
cwtl
in
rcll
imul
mov
sub
inc
cld
xchg
push
inc
add
insb
stos
cwtl
push
jo
push
int
push
mov
xorb
xlat
inc
lds
mov
xor
mov
lds
and
je
pop
mov
icebp
inc
pop
jbe
add
dec
mov
pop
adc
int
je
jp
lds
push
repz
movsb
and
fs
push
xor
shlb
and
rcl
inc
cmp
cmp
lea
scas
mov
out
fdivrs
push
test
fs
cvtps2pi
xor
push
lret
nop
lea
sbb
fnstsw
xor
jo
push
pop
into
cmp
js
sbb
adc
xorl
jo
mov
sub
rorb
sbb
xchg
mov
cmp
mov
in
sbb
push
mov
imull
pushl
vunpcklps
cmc
cmp
dec
xchg
mov
scas
aad
scas
jnp
sbbl
test
jo
in
das
mov
lods
and
add
push
lahf
stc
mov
xor
in
jo
rclb
mov
jae
out
shll
sbb
push
jbe
inc
adc
jp
dec
jg
cmovb
adc
pop
or
sub
je
and
in
jg
mov
jecxz
sbb
push
jo
aas
outsb
in
push
mov
pusha
addb
jb
sub
adcb
scas
jo
xchg
mov
int3
mov
adc
ret
aas
lret
sbb
sub
repz
jo
and
cmp
loop
xor
jp
jo
and
mov
hlt
out
int
jmp
and
dec
xor
jae
or
flds
std
movsb
adcb
rol
es
mov
push
lret
mov
xor
shl
bound
test
add
jae
jns
cmpl
mov
iret
mov
sbb
sub
movsl
int3
outsl
repz
arpl
ds
mov
leave
int
push
bound
inc
xlat
or
jo
in
pop
popa
dec
push
add
aad
and
cmp
or
ror
loope
cmp
in
int3
dec
inc
mov
movsl
pop
xlat
jo,pt
push
cld
lea
xchg
jo
in
fcomp
xor
psubw
mov
test
sbb
rcrl
jo
ret
xor
fldcw
mov
nop
pop
gs
jo
aas
shr
jne
out
into
push
push
fisttps
out
test
dec
hlt
inc
mov
nop
xchg
leave
icebp
bound
jl
mov
mov
mov
jmp
cltd
fs
insb
into
mov
icebp
les
adc
insb
cmpsb
push
jecxz
and
push
or
xor
lods
fbstp
mov
mov
nop
out
test
jl
hlt
shr
or
orb
inc
jl
mov
adc
xchg
mov
jo
sub
jl
sbb
push
adcb
fs
push
outsb
push
jo
jno
mov
mov
lea
lds
rcrl
mov
aad
stc
or
mov
scas
jmp
loope
bswap
pop
gs
inc
jl
pop
bound
jo
jecxz
cmp
xchg
lahf
adc
xlat
imul
dec
and
xorb
jo
and
push
push
push
jbe
mov
in
or
push
orb
jge
daa
add
aas
shll
pop
xorl
mov
out
hlt
push
jnp
in
jo
outsb
add
aas
xchg
test
jo
bound
jnp
cs
jne
push
data16
dec
xchg
mov
dec
xchg
pusha
jo
std
mov
lock
mov
sbbb
jp
sti
inc
out
cmp
jo
fstpl
clc
mov
jo
enter
outsl
dec
push
lea
loop
mov
nop
imul
xor
adc
std
push
ss
sahf
inc
fstps
incl
cwtl
jg
push
stos
fistpl
jl
jecxz
out
xorb
rcll
sub
inc
push
iret
jecxz
jmp
popf
jo
ret
or
sbb
or
or
adc
jo
mov
dec
divb
lds
cmp
dec
jo
andb
in
mov
out
jo
mov
jo
cli
jb
lock
jo
pusha
dec
int3
cld
push
sbb
jno
push
jo
leave
fnstcw
add
lea
xchg
cmp
jo
ret
mov
mov
jo
daa
sti
insb
pop
dec
add
inc
or
inc
sub
mov
popf
cmp
jge
stos
pop
jae
into
add
inc
xorl
imul
scas
orb
push
loop
inc
mov
lahf
push
mov
jo
xor
scas
push
insb
mov
adc
pop
inc
vpshufhw
push
shl
sbb
add
sub
je
js
rcrl
adc
nop
cmp
push
call
jmp
clc
sahf
mov
xor
lds
incb
mov
jo
dec
sub
xchg
jo
pop
lds
adc
dec
outsl
psubusw
jns
adc
mov
repnz
inc
call
jnp
test
fs
add
imul
shll
push
adc
xor
push
mov
jle
test
cltd
pop
lock
sbb
outsb
cmc
test
jo
ja
sbb
aaa
add
das
cmc
jo
or
icebp
mov
jo
xor
jo,pn
cmp
mov
jo
inc
push
mov
int
repnz
lret
sub
and
nop
in
xchg
push
pop
ficomps
jl
mov
js
ljmp
jecxz
pop
cmpb
cmc
jo
insb
cmp
xchg
jo
mov
add
movsb
arpl
icebp
mov
push
das
fisttpl
dec
pop
call
xor
push
stc
inc
std
aas
pop
xchg
jo
lret
pop
or
jo
inc
cmp
jo
std
cmp
mov
jo
adc
sbb
mov
lods
cmp
je
sub
shlb
call
mov
push
aaa
das
mov
sbb
mov
sbb
sti
lea
or
adc
jl
inc
sub
stc
sub
mov
jo
cmp
addl
push
leave
shlb
jo
mov
loop
jl
and
lock
xchg
dec
jns
and
fstpl
jb
jle
enter
mov
pushf
leave
js
push
dec
rcll
cmp
jg
hlt
lea
sahf
lcall
cmc
push
sub
stos
out
push
dec
aaa
jmp
sbb
inc
in
push
mov
adc
adcb
add
or
ret
fiadds
pop
lds
idivb
mov
or
dec
xchg
jo
dec
jae
iret
fildll
jmp
inc
cmp
les
adc
inc
xor
pop
bnd
mov
daa
push
jo
or
divl
inc
shrb
int3
mov
jo
fadd
push
jo
and
leave
repnz
jo
dec
sub
push
mov
mov
hlt
cmp
nop
mov
nop
ja
out
jo
xor
movsl
cs
or
mov
subb
ljmp
fwait
cmp
jo
mov
movsl
add
sub
add
jo
popa
adc
lds
das
mov
adcb
sub
jne
sarb
sbb
imul
mov
les
roll
into
or
jns
xchg
mov
push
int
fucomip
addr16
std
and
or
pusha
arpl
cmc
jne
pop
nop
cmp
movd
jo
xor
mov
push
test
xor
sbb
loop
ja
xchg
insl
jb
sti
ret
push
xchg
sub
addr16
mov
fadds
add
jmp
add
ja
sub
and
int
outsl
jne
push
leave
icebp
cmp
je
jo
in
push
lds
push
xor
rcrb
gs
rcrl
in
xchg
push
insb
mov
leave
bound
pushf
sbb
icebp
jo
leave
arpl
sbb
xor
inc
loop
pop
mov
and
fbld
cmp
mov
sbb
movsb
in
icebp
nop
jne
jo
xor
ret
jge
movsb
jo
lods
imul
pop
xchg
inc
pop
mov
or
loopne
pop
popa
inc
sbb
das
push
les
inc
jo
xchg
mov
inc
jo
mov
jge
nop
add
jbe
mov
js
imul
mov
gs
jp
in
js
cmc
incb
mov
cmp
nop
sbb
and
cmpb
mov
sub
int
cmp
cmp
ret
or
int3
or
lds
push
mov
andb
int
adc
adc
ja
cmp
inc
ljmp
mov
xchg
jo
mov
les
fldenv
jo
add
sbb
or
mov
mov
sub
adc
sahf
shll
mov
cwtl
test
dec
mov
aad
jo
into
mov
and
in
inc
pop
push
push
shr
lods
xor
jbe
jb
xor
adcb
and
pop
popf
and
push
jne
lds
clc
xchg
mov
out
out
mov
inc
leave
dec
jo
inc
dec
ljmp
std
cmpsb
addr16
mov
or
push
sbb
test
xor
out
jp
push
jo
loopne
lret
adc
fdivs
inc
xchg
pusha
xor
outsl
or
gs
push
or
aad
jl
jbe
ret
sbb
sub
lcall
cmc
dec
xor
ds
sbb
arpl
subb
push
shll
mov
out
pop
pushl
jl
dec
lds
or
add
mov
adc
insl
add
js
shll
xchg
inc
es
adc
adc
sbb
inc
add
cmpsb
sub
cs
push
mov
icebp
jae
inc
sbb
test
outsb
or
lds
xlat
nop
mov
cmp
shrb
or
cs
cltd
pop
jo
xor
neg
lret
addr16
into
jo
inc
pop
mov
les
mov
and
push
mov
cmc
sbb
cmpsl
jbe
jle
leave
and
lret
pusha
jo
loopw
pop
jb
jp
sub
stc
int
lods
mov
push
sub
mov
adc
xor
std
adcb
inc
ret
pusha
or
xor
jo
mov
out
frstor
lock
push
call
in
jo,pt
mov
cmp
mov
sub
jmp
mov
jne
add
aad
xchg
into
icebp
mov
inc
cwtl
push
incb
sub
jo
sti
xor
es
in
mov
jo
or
jo
ret
and
mov
jo
lds
fisubs
push
sub
push
call
xchg
arpl
jae
jl
jle
add
ret
lds
xor
notb
int
dec
pop
std
push
je
add
jo
cmp
mov
aad
mov
lds
and
or
in
nop
push
mov
rolb
imul
cld
arpl
jo
lcall
hlt
shr
cmp
pop
repz
rcll
dec
xchg
loope
push
dec
adc
mov
sahf
push
ds
jp
aas
loope
ret
xchg
movl
inc
stc
xor
jo,pt
daa
shll
or
jno
jo
adc
loopne
mov
jne
into
out
sbb
ret
fists
enter
jo
sbb
lock
jo
mov
add
jo
add
lds
xor
int
and
shll
test
insb
xor
xor
add
bound
sbb
push
or
and
cmp
dec
iret
fs
sub
stos
mov
bndldx
inc
pop
jl
jo
aad
or
lret
nop
pop
insl
inc
inc
xchg
mov
push
aad
pop
movsl
cmpsl
addr16
push
gs
pop
jo
dec
lret
dec
inc
or
sbb
aad
jb
shl
jo
inc
mov
idivl
xor
push
bound
xchg
ret
dec
ret
in
faddl
xorl
lock
push
and
jo
mov
inc
inc
mov
in
popf
pusha
and
push
xorl
into
push
push
inc
mov
repnz
sbb
mov
int3
sub
sub
cli
adc
jo
cmp
pop
jecxz
inc
bound
xchg
test
repz
jo
leave
pop
dec
imul
shr
std
fstpl
mov
nop
lods
or
xor
jns
pop
dec
cvtpi2ps
rcrl
jg
in
xchg
aas
mov
mov
inc
sahf
jo
push
popf
aad
insl
ss
leave
sub
cmpb
dec
std
inc
xorb
or
pop
jo
je
jae
adc
and
adc
es
xchg
cli
lret
sahf
movsb
sub
inc
aad
inc
mov
jo
stos
jbe
jnp
mov
adc
xchg
cmp
pop
mov
mov
mov
xchg
dec
jo
jae
add
xchg
push
mov
jo
and
int3
ret
jmp
shlb
cltd
nop
out
loope
lds
jns
push
cli
sarb
shll
int3
lods
xchg
push
movsl
arpl
jo
test
jg
test
sbb
jb
pop
sti
scas
mov
daa
lcall
outsl
jo
mov
fcmovnb
xor
jo
or
pandn
cmp
lds
pop
cmc
push
lret
cmpsl
inc
mov
jo
or
and
jmp
or
out
mov
mov
fcmovnbe
jo
jae
les
pmulhw
es
imul
mov
jo
loope
dec
and
outsl
test
xchg
sub
sbb
movsl
mov
xlat
lds
cmp
dec
shlb
cmp
or
andb
jo
and
and
jo
push
gs
arpl
push
mov
push
stc
sub
les
xor
aaa
loop
jo
ror
aas
cmpsw
ret
push
pop
insb
nop
popf
ret
outsb
ds
test
roll
int
pushf
imul
jo
sbb
sub
and
jo
mov
jns
pop
lock
ret
adcb
jle
adc
int
mov
js
mov
inc
mov
xor
dec
jo
fbstp
mov
subb
pop
fwait
je
call
cli
push
adc
or
cltd
or
loopne
or
bnd
jo
ljmp
jge
push
arpl
sbb
xchg
in
sub
loop
xor
insb
dec
push
insb
mov
mov
iret
cmp
fidivl
popf
jmp
leave
hlt
int
movsl
jg
out
inc
sub
subb
ret
aaa
fidivrs
rolb
shll
pop
or
xor
jae
and
insb
dec
dec
arpl
jo
aam
jmp
out
inc
jo
mov
or
mov
ret
rorl
pusha
addr16
add
pop
jo
fildll
mov
inc
scas
js
xchg
loope
push
jb
push
mov
xor
jno
lea
es
add
jle
sbb
adc
sub
sub
jae
inc
icebp
jo
push
xchg
and
jb
push
stos
xchg
leavew
jl
sbb
mov
outsb
rcl
clc
ret
mov
jo
add
inc
add
sbb
dec
out
inc
cmp
jo
and
cs
fsub
leave
aas
rolb
jns
mov
jo
in
or
jo
or
inc
sbb
in
idivb
mov
cld
dec
cmp
aaa
add
scas
adc
mov
xorb
jnp
nop
push
addr16
xor
push
in
mov
mov
lock
into
jne
jo
mov
mov
add
sbb
sarl
jecxz
inc
data16
fisubrl
sub
js
fwait
push
mov
mov
mov
jbe
lds
push
and
shll
dec
jmp
shll
aam
or
xchg
lahf
jecxz
jo
lea
mov
orb
iret
inc
mov
xor
hlt
lock
jnp
sbb
jae
je
sbb
rcrl
movl
xor
add
mov
push
dec
jbe
inc
call
cwtl
imul
ret
ss
push
loope
cmpsl
xlat
jo
int
sub
jo
lds
dec
cmp
das
lret
jmp
pop
cltd
pop
lock
scas
int
jecxz
mul
lods
xchg
in
jo
or
ljmp
cmc
push
sub
outsb
nop
cmp
mov
push
lahf
xor
jp
inc
jo
rorb
aam
xchg
in
inc
sbb
pop
jbe
jecxz
lds
aaa
inc
pushf
pop
jne
mov
mov
mov
jo
leave
cltd
stc
jg
mov
jo
add
mov
mov
orb
sub
pop
gs
mov
test
nop
lods
jb
lods
hlt
mov
inc
jo
pop
xchg
arpl
repnz
add
xchg
leave
loope
fnstcw
loop
jge
js
jo
pop
pop
sub
and
popa
xor
add
push
jo
dec
mov
sbb
jmp
cwtl
loope
xor
enter
sbb
mov
js
pop
movsl
inc
ret
ds
out
mov
popl
jecxz
sbbb
mov
sub
jl
push
aaa
in
sub
iret
cld
jo
aas
xchg
outsl
ljmp
or
scas
fildll
pop
enter
sbb
inc
jo
popl
mov
jo
mov
and
sub
cmp
adc
sbb
dec
xchg
jl
cmp
mov
jo
aaa
push
movsb
cld
pop
leave
sub
inc
xchg
ds
sub
jo
mov
in
xchg
out
inc
imul
pop
aad
icebp
mov
push
jo
sbb
aam
insb
pop
arpl
inc
sub
jmp
xchg
push
call
add
daa
mov
inc
nop
fstps
jne
sbb
jo
sti
icebp
xorb
scas
lds
pop
outsl
mov
shlb
jo
ret
jnp
mov
jo
pop
fwait
lods
sbb
jo
lds
iret
jecxz
jmp
je
aaa
or
mov
pop
lea
or
inc
mov
test
movl
lret
push
sub
vmread
inc
repz
testb
or
mov
scas
jo
sub
lret
sahf
jo
in
inc
inc
adc
lds
imul
cwtl
in
dec
call
scas
sahf
insl
jno
je
cmc
sbb
push
mov
hlt
fistl
mov
jecxz
movsb
push
gs
shlb
and
mov
add
jo
aaa
cmp
loop
test
subl
cmc
ret
jo
scas
leave
dec
xchg
arpl
mov
or
xlat
inc
fdiv
lret
testb
jns
aam
add
push
mov
mov
push
or
push
jp,pn
jl
lret
ss
ret
aad
mov
sub
jo
adc
out
daa
push
jo
mov
mov
mov
mov
lods
jo
dec
sub
int
popf
imul
sub
test
pop
xchg
add
sarl
inc
fisubs
dec
jae
nop
decb
aad
pop
xorb
pop
loopne
push
sub
cmc
adc
neg
bt
push
and
jp
pop
aaa
movsb
stos
lret
imul
add
lds
mov
repz
xchg
and
shll
addr16
ljmp
movsb
or
jle
ja
adc
es
xor
xor
mov
jnp
shlb
lds
or
jp
mov
xor
and
mov
push
cmp
cmp
adc
push
sub
pop
sub
push
push
inc
fsts
pusha
push
mov
or
ret
fstpt
push
call
and
shlb
shll
lcall
push
pop
mov
mov
subb
gs
jo
jle
daa
icebp
fs
mov
jo
test
jb
mov
jo
mov
add
or
xor
pop
cmp
insl
dec
jo
lret
and
int
mov
mov
hlt
inc
loope
jo
jge
stc
fmul
push
les
scas
loope
mov
or
push
outsl
jo
sbb
xor
fbld
jne
imul
sahf
repnz
or
adcb
sbb
jo
ds
ljmp
rcrb
jo
xlat
push
les
mov
mov
jo
mov
jo
xor
push
daa
mov
mov
lds
aam
andb
mov
bound
jae
dec
mov
adc
xchg
adcb
call
pop
jo
icebp
leave
push
and
hlt
inc
enter
jo
aad
mov
jo
xor
jb
cli
inc
jo
dec
icebp
push
jle
rcrb
xchg
push
inc
repz
and
cmpsb
nop
mov
cs
push
lock
jb
out
push
andl
insb
fidivrl
push
insb
in
out
movsl
xchg
jo
loope
and
sub
insw
das
mov
sti
sub
fs
jbe
jnp
psubd
ret
jp
imul
mov
lock
fildll
push
mov
rcr
jno
sbb
pmaxsw
lds
dec
movsl
in
mov
push
xchg
movsb
repnz
pandn
jge
dec
add
mov
add
jo
or
orl
xor
adc
nop
enter
cld
mov
bound
mov
push
push
mov
jp
push
repnz
ljmp
cmp
in
push
movsl
aam
bound
push
jbe
test
add
push
mov
jnp
jo
and
sbb
adc
std
inc
sub
xchg
movsb
jo
mov
loopne
cmpsb
xor
xor
cmp
out
sbb
adc
mov
push
push
bswap
mov
outsl
jo
adc
loope
sub
lods
push
mov
nop
xchg
jne
cmpsl
nop
test
pop
aas
sarl
add
scas
inc
mov
jo
popa
and
cs
xor
je
dec
mov
jo
addr16
leave
lods
dec
pop
jns
xchg
add
mov
fs
push
jo
sub
adc
imul
pop
jo
pop
mov
inc
xorl
dec
jl
jo
out
stos
lahf
inc
mov
sub
in
call
mov
xchg
dec
vfrczpd
jo
xor
ret
sub
pop
mov
fs
xor
dec
jo
push
shlb
jo
lock
jmp
lea
jo
cmp
outsb
xchg
pop
sub
mov
jo
movsb
mov
ret
pop
and
mov
divb
mov
jmp
es
popa
subb
mov
rcrb
aad
xor
mov
aam
out
cli
leave
test
jg
addr16
outsl
jo
stos
flds
adc
sahf
inc
add
mov
repnz
pushf
adc
mov
add
or
outsl
jo
sarl
mov
cmpsl
inc
and
mov
jo
push
cs
cmp
lods
push
les
orb
xchg
insb
cs
inc
movsb
inc
sub
push
mov
insl
jp
into
add
xor
mov
addb
pop
movb
iret
sub
mov
arpl
fstpt
out
push
xorl
xlat
shll
jno
jo
add
jecxz
sub
xor
mov
jmp
mov
insb
sbb
mov
fnstsw
jae
sub
jo
lods
push
fcmovne
add
sbb
xchg
arpl
jo
dec
cmpsb
xchg
pop
icebp
outsl
mov
mov
push
sub
repnz
cmpsb
push
sub
iret
repz
jmp
mov
jo
faddp
rcl
xchg
notl
push
mulb
sbb
bound
int3
inc
movsb
and
dec
lods
shr
push
cmp
adc
mov
mov
jo
or
aad
jo
xlat
pop
int
ss
gs
loope
ret
jo
pop
nop
data16
sub
jmp
mov
jo
xlat
fistps
fs
sbb
jo
sbb
les
and
mov
mov
jo
test
jae
loope
and
lret
nop
test
xchg
and
ficoml
addr16
enter
ja
roll
popf
out
mov
jo
add
es
mov
fwait
jo
push
jb
call
or
mov
xor
pop
cs
stos
xchg
js
movsb
sub
cmp
mov
jo
pop
nop
arpl
add
inc
add
jo
dec
out
xchg
ret
mov
pop
jo
inc
data16
js
icebp
jo
cmpl
xchg
out
jo
bound
ja
cmp
data16
jo
ret
std
mov
jo
fdivrp
js
jge
cltd
jo
lds
mov
aas
push
setbe
mov
test
push
or
cltd
mov
xor
or
lea
sub
pcmpeqw
shll
xor
xorb
cli
shll
ret
cmp
addr16
jo
push
lea
gs
mov
xor
bound
and
jge
jae
rol
sahf
fwait
dec
imul
sti
je
mov
inc
adc
xor
int3
jl
fiadds
add
mov
int
lea
mov
push
sbb
add
jbe
sub
imul
sahf
jo
jae
mov
xchg
daa
or
xor
mov
out
xchg
js
push
inc
std
vpcmov
rclb
sbb
push
loopne
out
jo
xchg
or
jo
outsb
xor
lods
mov
test
pop
pop
sub
js
repz
in
dec
aaa
bound
adc
xor
jo
arpl
cmpsb
jo
inc
pop
sub
mov
outsl
jo
add
cwtl
jo
ret
mov
in
je
pushf
hlt
dec
jo
pop
xchg
out
test
aaa
mov
xchg
xorl
mov
cmp
int
loopne
cmp
pushf
or
insl
inc
or
push
lock
gs
outsl
adc
xchg
jo
movsl
into
test
ret
mov
outsl
add
int
repnz
jl
fnstcw
sbb
in
mov
fstpl
add
adc
or
jmp
int
jp
jbe
and
mov
jo
pop
or
std
sub
jo
inc
addr16
cltd
xchg
xor
cmp
jo
mov
scas
leave
jae
adcb
push
inc
in
icebp
push
jno
inc
jo
fstps
ss
ret
jo
insl
outsl
into
int
das
mov
arpl
das
int3
jmp
jo
daa
sub
out
fdivr
gs
jo
test
sbbl
sti
cmp
jo
xor
clc
xchg
je
and
mov
loope
sbb
fnsave
popa
shrl
and
in
xor
push
imul
rcll
add
mov
pop
jg
shl
loop
dec
xchg
add
and
push
jo
or
icebp
lahf
inc
shlb
sahf
jo
dec
jns
cmp
lods
inc
push
jo
movsl
ss
sub
mov
aas
push
xchg
pop
js
and
add
leave
jo
aas
jb
stos
movsl
js
jo
ret
xchg
mov
fistpl
or
push
popf
jmp
js
scas
adc
adc
lea
imul
insl
mov
mov
and
xchg
lea
popa
dec
cmp
jnp
xor
mov
dec
hlt
lock
xor
jo
add
idivl
shll
movsl
fistl
jo
out
xor
in
dec
cmp
push
out
jo
cltd
cli
rol
insl
adc
jo
loope
lcall
adc
push
sub
push
sub
push
data16
icebp
xor
cld
je
xchg
hlt
adc
jo
scas
fidivl
mov
xchg
mov
rcll
stc
addr16
hlt
adc
push
xlat
nop
mov
inc
jbe
lea
popf
cmp
cmc
ja
shlb
imul
jo
cmp
cmp
leave
jo
cmp
mov
subl
lds
xor
sub
cmp
orb
mov
cmp
and
mov
imul
mov
js
xlat
jbe
pop
ljmp
or
outsl
jae
lods
mov
xchg
ror
in
jle
mov
push
push
fdivl
sub
mov
call
cmc
outsb
jo
or
jae,pn
inc
out
jp
lds
bound
inc
insb
imul
jo
nop
inc
mov
lret
mov
arpl
loope
jo
fucomi
stc
cltd
shlb
popa
jbe
add
inc
nop
xor
movsb
jg
jo
sub
pcmpgtb
xchg
es
xor
out
scas
jo
rorl
xchg
xchg
mov
cmp
mov
aad
inc
xchg
outsb
cmp
push
dec
les
cmc
lds
out
mov
adc
mov
cltd
insl
mov
inc
movb
jo
in
mov
cvtps2pd
mov
out
ret
fistpll
jo
or
out
orl
and
lds
stos
adc
jo
inc
jns
sub
fs
andl
add
pop
jle
sarl
xorb
in
mov
es
dec
jmp
out
push
movsb
out
jo
jno
not
xlat
out
out
jp
lock
jne
sbb
xor
test
mov
popf
sub
inc
jno
loope
add
test
jle
adc
xchg
mov
add
dec
out
inc
xchg
inc
mov
int3
sub
jo
dec
push
sbb
or
not
sbb
sub
lret
imul
or
fwait
sbb
scas
je
push
sub
mov
lock
lock
cmp
push
mov
mov
jge
cld
mov
jb
push
in
cwtl
jo
adc
pop
shll
rcrb
fmuls
test
jo
sbb
rcll
and
xorl
pop
mov
jo
popf
mov
push
out
cmp
xchg
jo
leave
lds
bound
sub
xor
push
mov
jo
xchg
shrl
inc
sbb
mov
cmp
test
insl
mov
sub
inc
mov
mov
out
jo
push
mov
inc
ret
mov
push
or
loopne
subb
arpl
mov
leave
push
in
fdivrs
xor
js
in
dec
push
mov
inc
repnz
jo
lcall
rcrb
pop
xor
fwait
jo
and
call
inc
push
std
inc
mov
add
mov
jo
inc
fwait
cmp
add
xor
jo
cmp
mov
adc
jo
jle
ds
push
cmpb
mov
dec
mov
stos
fs
mov
push
adc
bound
rorl
out
leave
push
mov
ret
cmpsb
pmaxub
addb
jne
jno
push
cmc
sbb
ret
mov
pushf
lds
xchg
insb
mov
jo
shll
push
in
popf
aaa
jb
dec
loopne
push
ret
push
sarb
inc
dec
in
das
sub
out
in
sbb
jae
mov
arpl
inc
cwtl
dec
loop
lds
ljmp
hlt
leave
popf
nop
or
and
lret
jg
cmpsb
ds
aad
fdiv
jle
dec
and
push
mov
movsb
fldenv
rolb
fisubl
sub
jno
or
adc
stc
fs
cld
arpl
repnz
push
xlat
mov
dec
out
out
push
das
jb
out
adc
rclb
jge
dec
jo
dec
pop
icebp
gs
add
jo
es
and
in
inc
call
jo
pusha
cmpsl
push
xlat
mov
rorl
sub
jne
cmp
divl
int
lret
dec
imul
lahf
pop
xor
loope
dec
subl
fs
inc
push
aam
push
and
mov
movsl
bound
mull
aad
out
fisttpll
mov
jo
pop
pushf
enter
dec
jo
ficoms
ret
mov
mov
loop
ret
xor
adc
pop
in
xchg
aas
push
sub
xchg
or
sub
sarb
xchg
nop
ret
jl
push
hlt
jns,pn
popa
icebp
jo
lds
pusha
fwait
lock
inc
mov
mov
jbe
cli
into
cmp
lahf
push
mov
aaa
insb
enter
int
xchg
lods
insb
je
jns,pt
mov
orb
iret
mov
inc
psrld
fwait
lods
mov
insb
rclb
iret
or
popa
push
sub
xor
addb
pusha
cmp
lret
push
pop
loope
mov
inc
leave
sahf
push
or
sysret
cmc
or
mov
add
push
jo
dec
jl
inc
dec
in
xchg
push
in
call
pop
fs
push
jo
cmpb
ret
outsb
out
jo
rorb
jo
fdivp
in
dec
fdivrs
cmp
sbb
int3
ja
jg
jo
in
pop
xchg
jbe
mov
cli
sbb
repnz
movsb
ret
inc
xor
movsb
fwait
add
push
jg
cmp
fadds
dec
mov
add
jo
xchg
in
pusha
mov
subl
lods
or
loopne
insb
mov
stos
dec
jo
daa
in
out
int3
sahf
inc
mov
mov
jnp
shll
cmp
popl
xchg
xor
push
inc
push
filds
jo
imulb
jp
xchg
cmp
xchg
fldcw
jg
push
lods
inc
and
roll
xor
xchg
rolb
cmpsl
ds
adcb
int
mov
insb
jo
xchg
add
ret
pop
jecxz
jge
rorb
js
ljmp
mov
sbb
or
add
and
shlb
push
or
sub
jo
mov
fsubr
xor
sahf
data16
mov
mov
fdivs
imul
sbb
mov
repnz
scas
jo
je
outsl
inc
sub
mov
cld
mov
inc
popa
sub
std
lods
jo
stos
test
mov
jo
mov
popa
loope
mov
cmc
push
jb
jmp
sbb
aas
xor
mov
in
jo
cmp
xor
sub
sub
mov
enter
xchg
add
movd
dec
cmpl
push
aas
jo
fidivrl
mov
mov
jo
lock
ficompl
xor
push
pop
push
jnp,pn
dec
xchg
jle
clc
sahf
mov
push
sbb
xchg
push
jb
ret
orb
fiaddl
pop
ret
pop
jge
jo
inc
mov
add
or
int
mov
inc
cwtl
ret
lds
hlt
sbb
leave
sub
cmp
cli
jo
inc
cs
jne
sub
add
push
sbb
or
add
jo
cld
push
inc
cli
insl
ret
and
mov
lret
or
jo
mov
shll
in
inc
mov
stc
or
push
inc
cwtl
dec
sub
mov
push
mov
aad
test
pop
mov
outsb
cmp
jo
push
ss
jl
test
sub
mov
mov
mov
push
insb
cvtps2pd
in
rorl
push
loop
lret
out
or
mov
sarl
push
loop
xchg
lods
sub
push
setnp
in
cmpsl
imul
rcrl
pop
in
mov
mov
pop
dec
cmp
xorl
pop
xchg
fnstcw
ret
push
pop
fimuls
cmp
nop
aad
outsl
mov
repz
pop
out
push
idivb
or
pop
das
out
es
leave
add
cmp
mov
sti
les
xlat
cmp
push
mov
add
xor
jo
inc
jge
mov
adc
mov
add
stos
jg
push
sahf
inc
shl
mov
je
shll
ret
mov
nop
mov
adc
jl
or
inc
mov
inc
mov
jns
jo
cmp
out
inc
fnstenv
and
and
push
fbstp
jo
mov
rol
jo
std
push
cmp
add
je
ja
js
mov
mov
mov
push
mov
adc
inc
shr
rcll
or
xchg
or
sbb
push
scas
je
call
inc
test
out
imul
fs
stos
push
cmp
cmp
and
call
outsl
lds
jo
push
adc
rol
mov
add
call
push
lock
pushf
xchg
push
and
lds
or
push
sbb
inc
adc
addb
cmpsb
ss
mov
fsubr
hlt
sbb
add
jns
mov
addb
push
insb
pop
dec
jo
pusha
sahf
testl
fbld
cmpsb
jle
sub
sbb
jo
mov
call
xor
jb
les
mov
mov
sub
inc
inc
inc
icebp
sbb
xchg
jo
pop
and
mov
aad
push
movsl
mov
in
hlt
aas
sub
in
imul
adc
gs
dec
test
shlb
stc
fsub
es
mov
test
ret
mov
jo
mov
dec
roll
push
aaa
jo
push
inc
xchg
jge
popf
movsl
lock
cltd
inc
or
shrl
hlt
lret
mov
ret
sub
mov
cmp
push
imul
scas
out
shrb
jae
fwait
imul
nop
xchg
adc
pusha
jo
dec
cmc
push
bound
sbb
popf
or
jo
adc
sub
jmp
dec
shll
stos
inc
fidivl
pop
cmc
pushf
mov
ret
sub
dec
lods
lds
fsts
and
mov
mov
jo
mov
andb
xchg
flds
or
or
out
mov
adc
cwtl
roll
jmp
jg
push
adc
ds
cmp
sbb
fwait
push
stos
out
mov
cmp
mov
js
xor
adc
lds
add
sbb
nop
dec
leave
and
adcb
xor
mov
scas
push
test
mov
js
loop
das
rcrb
or
add
pushl
inc
sbb
and
iret
xchg
stos
lods
mov
nop
jo
rcl
inc
imul
in
aad
movsl
push
outsb
xlat
xor
push
mov
imul
ret
bound
sbb
fcmovu
jo
mov
imul
addr16
sti
ret
jo
int
cmp
js
xchg
pop
insb
mov
jo
std
mov
adc
mov
push
iret
add
je
in
jo
or
loop
movsl
inc
pop
in
push
and
shrb
pop
push
jae
call
push
mov
jo
or
cmp
mov
adc
mov
push
jo
and
divb
movsl
loop
or
xor
jns
xlat
xor
shl
jp
add
js
inc
mov
jo
das
mov
xchg
jo
mov
leave
mov
jae
sbb
sbb
mov
dec
cmp
dec
out
nop
loop
lock
cltd
sbbb
imul
arpl
jmp
sub
add
lret
stos
sbb
clc
sub
lock
rcrb
fs
jns
sub
jg
cmp
jne
jo
adc
jle
mov
jo
mov
ja
push
mov
xchg
cmc
hlt
jle
jo
stos
das
jae
jmp
jno
out
jbe
fnstsw
aam
inc
hlt
sub
jo
mov
and
jg
xorl
jecxz
xor
imul
jns
ret
int3
dec
stc
mov
jo
push
add
mov
dec
cld
jo
dec
lds
pusha
nop
sbb
adc
pop
jne
cmp
push
ljmp
lahf
les
mov
lds
dec
test
mov
jo
mov
fisubrs
mov
jo
scas
call
hlt
jo
inc
sbb
ret
jo
lds
add
lahf
jmp
sbb
out
inc
xchg
jo
icebp
cmpsb
pop
mov
push
xchg
jo
addr16
pusha
xor
xchg
jecxz
repnz
popf
pop
push
or
jmp
jmp
icebp
fwait
loop
add
sbbb
sti
push
faddl
inc
mov
pop
mov
out
fsubs
movsb
push
jo
enter
or
push
popf
rorl
scas
adc
fwait
int
push
xor
movsb
out
hlt
lret
jns
jo
add
push
mov
ret
xchg
dec
jge
dec
mov
or
push
mov
inc
adcb
lahf
aad
jnp
jns
in
inc
jo
int
jmp
cli
js
jmp
or
jo
dec
xchg
and
pop
dec
sub
pminub
sub
shlb
std
adc
cmc
cmp
outsl
ret
aam
fs
in
dec
cmp
mov
pop
lahf
inc
push
pop
push
jnp
in
pop
jb
loop
stos
push
mov
inc
enter
jo
je
lret
push
loope
mov
fmuls
test
sbb
mov
daa
mov
jo
cmp
mov
jp
and
mov
adc
or
cmovno
sbb
rol
fstps
push
sub
mov
and
jo
xchg
dec
mov
xchg
adc
stos
jo
ficomps
cld
shrl
mov
dec
jne
fnstenv
xchg
cmp
push
lds
or
and
xor
xchg
jmp
push
out
inc
adc
andb
aas
scas
push
sub
imul
das
pusha
inc
mov
xor
jo
and
cmp
jmp
push
imul
mov
lahf
divb
jl
mov
jmp
in
ja
js
jo
mov
ret
movsl
int
cwtl
jo
ret
and
inc
xor
jo
adc
mov
stc
pop
scas
xchg
dec
repz
jo
das
mov
mov
call
pop
mov
loop
cmp
ja
rclb
jb
js
adc
xchg
imul
cs
loope
push
adc
sub
mov
into
and
addr16
fdivrp
fidivrl
test
test
jo
jae
add
loop
in
xlat
loopne
lods
xorb
lds
popf
or
mov
pop
push
xor
int
mov
imul
pop
xor
jo
push
fmul
push
and
inc
mov
sub
cs
mov
jo
mov
xlat
pushf
ror
jo
bound
cmp
vhsubpd
je
mov
jo
inc
mov
pop
jecxz
cs
and
mov
movsb
push
or
inc
shrb
push
repnz
imul
je
stc
sub
jmp
jo
neg
in
shlb
andb
fbstp
lods
test
xchg
jno
bsr
rdmsr
pop
sbb
xor
sub
jo
leave
lahf
sarb
mov
mov
and
mov
fildll
cmp
xor
nop
or
lahf
fadds
divl
pop
ret
clc
inc
data16
add
inc
push
cwtl
outsb
lods
xchg
insb
cli
aaa
les
cmp
push
cwtl
mov
outsb
jo
cmp
std
pop
cmp
jo
inc
imul
jo
in
sbb
dec
mov
leave
adc
les
and
clc
mov
mov
push
in
mov
ja
and
mov
fnsave
into
ret
sub
xchg
js
cmp
push
inc
mov
dec
cmp
sbb
fs
out
pop
rcrl
push
cmc
cmpsl
ret
mov
insl
enter
or
add
nop
iret
repz
xorl
rorl
in
jo
cmpb
mov
lds
ja
dec
mov
jl
adcl
cmpsb
sti
push
jo
dec
test
inc
sbb
jo
jecxz
inc
mov
mov
push
pop
sub
pshufw
addr16
jo
insl
mov
jecxz
jp
jo
pop
iret
jbe
jmp
lock
leave
lcall
ret
js
or
and
dec
scas
inc
push
mov
addr16
jo
mov
sbb
in
cmp
scas
pop
or
jo
xchg
popf
mov
cmp
repnz
pop
xchg
pop
js
dec
pop
fidivl
andb
jg
loop
pop
jo
jmp
call
aaa
mov
aam
ljmp
lds
xor
add
int3
jne
scas
jecxz
push
scas
cli
jo
pop
dec
jmp
sub
js
mov
imul
daa
push
and
stc
adc
leave
mov
insb
dec
fwait
insl
lahf
cs
dec
int
adc
pop
clc
sbb
insb
dec
sub
push
add
orb
sub
jo
rclb
xchg
out
cmp
jo
mov
and
jo
fiadds
ja
sub
cwtl
push
inc
jo
lret
popf
push
cmp
inc
pushf
negl
orb
cwtl
and
jb
fmul
cs
fildl
outsb
lea
mov
sub
iret
sbb
or
mov
adc
sbb
and
loop
mov
mov
in
pop
jmp
leave
aam
jo
cmp
sub
and
ret
mov
xchg
mov
add
mov
inc
push
mov
outsb
add
xchg
ja
js
cltd
outsl
mov
insb
js
ret
cmp
mov
lds
pusha
lods
dec
jge
js
in
sbb
add
jo
mov
pop
sub
imul
jo
lds
movsb
das
adc
xor
frstor
loopne
sti
pop
js
lret
pop
stc
xor
jmp
jbe
inc
leave
jg
jo
cwtl
sbb
incl
ds
jo
mov
fcmove
insb
les
jne
inc
mov
xchg
inc
in
jg
mov
test
lods
movsl
jno
inc
jb
ds
fs
jns
jo
ljmp
out
test
and
jne
mov
cli
fs
call
out
xor
xor
and
icebp
xor
lahf
jo
mov
js
or
lcall
cltd
aam
jne
std
inc
in
cmc
sub
call
vpandn
jge
jo
addr16
push
sub
testl
fdivrs
subb
sbbb
out
mov
and
dec
pop
and
mov
sbb
dec
xor
std
sbbb
popf
gs
jo
push
ss
lahf
imul
test
inc
xchg
mov
sbb
and
jo
popa
xor
adc
rorl
or
and
ret
pop
icebp
push
loope
fs
rclb
sbb
lock
pop
bound
mov
mov
xor
fcmovb
icebp
mov
shll
mov
repz
mov
cwtl
jo
test
scas
sub
and
sub
addb
fs
xor
adc
shll
jp
sub
movsb
xorl
mov
push
xorb
push
rorb
in
sbb
push
rcll
int3
jo
aaa
xchg
xchg
mov
dec
or
mov
lods
push
jno
pop
mov
fldcw
insb
push
pop
fsub
cmpsb
jnp
insb
mov
jo
fcmovb
cmp
scas
sti
sub
push
jo
add
orb
imul
shlb
gs
xchg
jo
jge
mov
cmc
sbb
jp
jo
xchg
inc
cmp
jo
cld
shll
lods
fnsave
aas
ret
imul
push
jo
ds
std
jo
sub
inc
les
mov
shl
jnp
scas
lods
jp
jo
arpl
sub
nop
std
jo
xchg
js
ret
movsl
mov
lods
xchg
fbstp
ja
mov
jo
repnz
or
xor
ds
sbb
push
rol
das
sub
subb
xor
cwtl
inc
mov
xchg
jge
jo
stos
lret
xor
in
bswap
cmpsb
shl
push
adc
adc
addr16
push
lds
mov
addr16
jo
cld
in
cmp
xchg
jo
jge
repnz
cmp
adc
dec
push
fcoml
jg
lahf
push
push
nop
xchg
pop
push
adc
pusha
jge
push
push
fwait
add
dec
jo
lret
fcomp
shlb
pop
push
ret
ret
js
pop
push
test
jo
stos
popa
xor
aas
mov
outsl
cmp
loop
fidivs
movsb
sbb
test
mov
push
jae
jo
pop
bound
nop
hlt
test
in
dec
mov
or
cmp
and
xchg
int
fiadds
mov
insl
inc
jo
int3
push
sub
cli
stc
lock
and
pop
mov
cs
shl
xchg
fs
mov
push
jo
ret
fdivr
xor
decl
pusha
xchg
jo
adc
subb
pop
sub
jo
clc
xor
movsl
fwait
mov
imul
idivb
inc
rdtsc
jl
lds
mov
iret
pop
jbe
bound
sbb
pop
sbb
dec
jae
jo
orb
push
aam
and
and
and
jo
les
jnp
ret
jo
sbb
out
mov
add
leave
pop
jo
mov
mov
jo
vpunpcklwd
push
pop
cmpb
mov
fs
mov
jle
insb
sbb
imul
dec
lock
or
and
andl
test
xchg
jns
int3
mov
xchg
leave
push
mov
and
insb
jle
cmpsb
dec
je
mov
xchg
mov
aad
jp
mov
cmp
das
call
jmp
jno
iret
push
fs
push
xor
hlt
jp
rcll
jns
ss
test
inc
dec
cmpb
pcmpeqd
das
es
outsb
jo
or
sti
enter
inc
das
dec
xchg
stos
shll
out
xorb
lcall
rcrb
push
dec
imul
repz
cmp
jmp
jg
aas
inc
push
iret
add
imul
adc
push
stos
push
cmp
jge
popa
adc
outsl
arpl
sbb
aas
jo
cmpsl
lds
adc
jo
dec
and
popf
jo
dec
xchg
repnz
pop
xchg
hlt
sti
movsb
jo
shll
sbb
jmp
pop
mov
bound
add
nop
push
rorl
rcll
cmc
and
xor
jmp
cmpsl
aaa
or
outsl
dec
xchg
or
aas
pop
loope
mull
sub
cmp
push
int3
mov
aad
andb
push
push
jae
jg
inc
cmpl
lock
inc
movsl
dec
lahf
js
mov
sti
push
xchg
int3
insb
sub
push
and
fimull
jo
shl
gs
out
jmp
cmp
xor
jge
bound
jns
sub
push
leave
jo
adc
fdivl
jo
lock
fmulp
lret
pop
lcall
push
or
jae
fadds
push
fbstp
cmpsb
cmp
cwtl
ja
jmp
sahf
pop
repnz
sub
inc
jecxz
int3
adc
test
pop
xor
test
cmp
fnsave
fdivrs
cs
ja
push
clc
setns
shrb
push
push
jnp
jo
inc
pop
fwait
push
mov
push
out
js
jns
push
icebp
xlat
insl
jo
leave
fwait
push
xor
push
hlt
and
int
add
pop
andb
lret
jo
pop
loope
in
sbb
sub
lods
dec
lds
subb
xchg
dec
addb
cmp
leave
icebp
xchg
je
xlat
jg
mov
cmp
into
sysret
and
daa
pusha
jle
lcall
and
push
fs
add
es
cmp
add
mov
jg
outsl
cmp
dec
cmp
jo
add
iret
xchg
leave
test
or
ror
mov
xor
jo
shlb
js
cmp
mov
insl
testl
mov
mov
push
jge
mov
dec
or
sbb
adc
push
shrb
mov
jg
mov
ret
add
idivl
popf
mov
or
or
mov
clc
dec
mov
jo
lcall
push
xchg
in
je
push
shl
add
nop
mov
mov
mov
daa
movsl
jmp
bnd
gs
or
push
pop
call
xor
je
adc
lods
adc
shll
lea
push
jo
add
sbb
shll
jne
cs
mov
jl
leave
ret
jo
push
lret
bsr
addb
jl
jo
loopne
or
jle
insl
adc
gs
les
adc
sub
cmc
jo
leave
xchg
iret
sbb
xor
enter
lds
roll
jns
fisubrs
and
leave
in
mov
fwait
clc
js
xor
outsl
push
roll
xchg
popa
dec
mov
cltd
in
in
lea
adc
in
mov
jne
and
dec
inc
jae
imul
xchg
int
leave
sub
mov
inc
loopne
lds
out
xor
enter
push
xchg
mov
cmpsb
popa
enter
sbb
test
add
cmp
mov
jo
cwtl
popf
adc
mov
xchg
push
jo
movsb
lret
cmp
mov
mov
sub
lds
push
jo
arpl
or
fnstenv
lahf
int3
shlb
adc
sub
outsl
imul
mov
jge
fbld
dec
pop
outsl
test
jae
inc
cwtl
or
jo
sbb
or
fbld
stc
sbb
add
xchg
push
ret
pop
add
xor
lret
lods
nop
pushf
sub
ja
adc
jo
ret
mov
jns
jae
pop
call
inc
les
inc
adc
dec
adc
jo
arpl
fstpt
mov
push
xor
sub
inc
sbb
inc
jno
cwtl
jo
int3
outsl
add
cs
push
das
mov
mov
push
sub
sbb
push
jo
lret
xchg
sti
mov
xchg
push
dec
xor
andb
mov
scas
or
jo
xchg
cmpsl
into
pop
jo
xchg
hlt
std
inc
xor
aaa
mov
pop
xor
aad
or
leave
push
fnstcw
mov
frstor
push
mov
lret
push
sbb
jo
leave
iret
xlat
clc
aaa
push
sti
and
xor
xor
push
cli
in
int3
jo
test
das
cmpl
push
cs
xor
xor
push
cmp
dec
jo
sub
lds
jne
out
sbb
jo
in
xor
lock
jo
xor
fildll
jo
ljmp
jo
cld
mov
test
jnp
and
in
aaa
jecxz
fsts
and
inc
cltd
out
loope
xchg
data16
jp
jbe
shrb
psubusb
call
mov
jmp
mov
xorl
mov
je
jo
int3
push
xchg
push
sbb
jo
pop
xchg
insb
outsl
rorb
orl
loope
mov
dec
jp
sub
std
jg
into
test
ret
test
jnp
aad
jo
rorb
jg
xlat
jo
inc
lea
jo
call
jb
jo
insl
fscale
cmp
adcb
add
rorb
sub
sbb
cmp
orl
pop
fnstenv
mov
adc
jo
int3
mov
push
into
jmp
dec
clc
rcrl
mov
fmulp
jo
inc
xchg
pushf
fistps
xor
jo
mov
aad
push
adc
cmpsb
repnz
jo
test
inc
push
stos
enter
lar
ljmp
repz
pop
push
aad
and
jo
cli
addr16
add
jp
data16
mov
shrb
jo
xchg
cmp
xchg
bound
js
jmp
or
jae
sub
pop
jbe
mov
mov
mov
sub
sub
cmpsl
jo
cmp
pop
lcall
jo
mov
jo
add
iret
pop
mov
jo
test
cmc
sti
pusha
mov
jo
flds
xchg
jo
mov
or
jno
ljmp
mov
adc
aas
repz
mov
int
jo
mov
mul
arpl
insb
jo
and
mov
out
out
jo
dec
sub
push
shl
jge
inc
movsl
push
mov
addb
in
xchg
mov
add
lds
push
xchg
push
int
and
insb
mov
out
scas
bound
mov
cmc
in
loopne
pop
jmp
ret
xchg
clc
fcmovnbe
add
popf
xor
lret
push
fdivrs
sarb
jo
or
into
std
xchg
xor
scas
outsl
sub
jo
xor
call
dec
xchg
out
inc
cltd
addr16
inc
jmp
jb
sub
fld
pushf
inc
shrb
push
subb
ss
sahf
push
cltd
aad
stc
lahf
inc
test
js
pop
sarb
dec
fisubrs
nop
xchg
shlb
faddl
push
rol
inc
cmp
icebp
jo
inc
insl
jmp
cmpsl
lds
mov
mov
je
mov
stos
jecxz
push
jmp
cmpsl
inc
popl
bound
lds
iret
cmpsb
xchg
outsl
inc
ret
cmp
jo
rorb
push
leave
adc
cs
test
jo
ficoms
add
nop
sti
push
fistpl
and
cltd
sub
jo
in
xor
leave
sti
jo
ds
es
int
lds
js
ja
dec
sub
cmp
je
mov
jge
jo
cltd
sti
or
lcall
lds
pusha
mov
inc
in
leave
cmpsb
jge
lods
push
cmp
lds
sbb
jo
insb
shrl
ret
mov
loop
lds
les
push
in
xchg
ret
xchg
out
std
lods
je
lods
ja
and
mov
sub
lock
lds
add
xchg
aad
nop
sar
jo
out
lea
jo
orl
cmp
mov
enter
or
cmpsb
je
push
jle
js
jo
imul
ret
in
int
loopne
jo,pn
jecxz
icebp
lahf
xchg
jo
and
jo
and
adc
repz
cltd
xchg
data16
jo
ret
add
add
jo
test
push
xchg
pop
mov
sbbl
testl
js
xchg
add
add
pushf
dec
jns
jo
loope
lock
or
jo
add
ja
push
xchg
and
or
andl
push
inc
or
jle
xchg
daa
mov
shll
sub
jo
jb
das
cwtl
jo
lods
js
shll
jo
mov
adc
jo
jecxz
jb
repnz
jo
sbb
cmp
addr16
nop
adc
mov
sub
push
sub
sub
push
aaa
int
jmp
sbb
orl
pop
lcall
sbb
xchg
pop
sub
sub
cmp
je
rolb
imul
jl
sbb
insl
inc
iret
push
lret
mov
inc
ds
cmp
shll
ret
mov
add
lds
fstps
clc
jo
xchg
add
xchg
and
mov
jecxz
jo
clc
fs
inc
in
jo
xchg
std
push
cmp
mov
jo
repz
in
loop
int
mov
sarb
jmp
push
adc
dec
sti
mov
repnz
cs
xlat
rolb
imull
xchg
test
jo
sbb
int
fadds
inc
xchg
xchg
mov
loope
ss
adc
ret
push
sbb
mov
mov
js
push
rcll
push
fwait
jo
cld
adc
cmpsb
lcall
adc
imul
sbb
mov
frstor
sbb
or
mov
pop
cs
dec
cmp
push
push
jo
and
fistpl
je
mov
pop
push
and
jmp
adc
lret
adc
dec
pop
mov
xorb
mov
out
jo
push
fsubl
not
mov
sbbl
sub
andl
xlat
jo
rol
sub
psllw
and
mov
nop
xchg
lret
lods
push
or
adc
push
fwait
xor
ret
mov
mov
andl
cmpsl
and
add
fs
mov
push
sub
sbbl
inc
jo
dec
enter
jmp
addr16
mov
hlt
out
jns
cmpb
imul
sbb
add
mov
repz
ljmp
jl
xchg
cs
leave
shl
fildl
jo
aad
insl
inc
inc
adc
jo
and
or
cwtl
dec
jo
outsl
popf
repz
out
pop
fidivs
movsb
ljmp
ret
sbb
lret
cmp
cs
jo
outsl
dec
fnsave
xor
lock
ss
js
or
std
jo
fcos
and
push
inc
jo
in
mov
lds
shrd
and
bound
je
mov
lret
mov
adcl
adcb
or
shll
xchg
in
rcrb
out
push
sub
jb
scas
jo
inc
and
pushf
jo
mov
into
mov
xchg
shrl
xchg
inc
inc
jl
mov
sahf
mov
loope
cmp
or
push
iret
stos
pop
aas
jecxz
jo
xor
sarl
sub
test
mov
shll
mov
push
ret
jnp
push
or
ss
jo
add
sbbl
std
adcb
xchg
inc
jo
pushf
jecxz
mov
sbb
mov
vpshufd
and
jo
scas
fisttps
ds
nop
mov
fdivrl
and
in
inc
sbbl
or
adc
cmp
ss
shr
inc
lea
out
aas
loope
xor
fisubrs
in
shrl
fs
jo
out
arpl
les
xor
push
ja
std
movl
jo
mov
and
pusha
lods
sbb
push
jno
in
jno
aam
push
push
xchg
into
stc
cmp
jb
xchg
test
mov
test
jo
ret
iret
sbb
push
fisubl
nop
jl
enter
ja
in
ds
sahf
inc
xor
xchg
mov
adc
in
jo
mov
mov
mov
jo
xor
pop
ret
jo
sbb
int
pop
pushf
or
mov
scas
ds
jl
ss
dec
jb
je
incl
outsb
mov
jo
dec
out
hlt
cmp
mov
insl
add
sub
stos
add
int
fcompl
jbe
scas
mov
jo
iret
push
xchg
imul
or
movsl
icebp
mov
adc
jae
sub
in
aad
repz
cld
cltd
ret
sbb
xor
push
int
test
jmp
dec
jo
mov
and
inc
xor
imul
jno
gs
or
mov
mov
add
shlb
in
ja
xchg
stc
jo
lcall
shl
mov
addr16
jo
ror
push
xchg
psraw
subb
fwait
shrb
and
jmp
lret
push
enter
cmp
je
out
nop
cmc
pop
pushf
add
ret
cmp
adc
repnz
imul
push
pop
pop
mov
xor
leave
fldl2e
add
jl
xchg
add
js
sbb
cli
lds
aam
sub
push
leave
add
js
data16
mov
jo
and
push
punpcklbw
add
cs
mov
jecxz
fbstp
ss
pop
xchg
inc
sub
cmpb
inc
das
jo
mov
daa
std
and
pop
mov
push
lret
lds
js
pmulhw
mov
jp
jo
xor
int3
inc
imul
je
inc
out
gs
sub
mov
leave
test
xor
jnp
inc
push
pop
cmp
xchg
in
or
insl
dec
lea
sbb
cmpsb
enter
ret
jp
lds
imul
mov
mov
je
int3
inc
je
insl
or
cmp
xchg
pushl
jle
loop
pop
nop
xchg
fs
test
mov
xorb
shl
jo
pop
push
inc
xchg
icebp
mov
sbb
or
cli
or
jo
in
fwait
push
loopne
lret
jo
leave
sub
xor
lea
inc
loope
push
cs
lahf
sti
xor
int
enter
repnz
jo
rclb
sbb
sbb
cmova
mov
cmp
dec
loopne
ljmp
inc
daa
jo
jmp
push
bound
pop
shlb
loop
in
xchg
push
daa
sub
push
push
scas
or
add
pop
js
shrl
jo
inc
imul
xorl
mov
in
aam
push
and
stos
insb
mov
cmp
scas
jo
into
adc
xor
js
ret
mov
lds
mov
data16
and
jo
loop
xor
xor
jo
sbb
nop
mov
inc
daa
jo
in
dec
outsl
xor
or
shll
mov
xchg
pop
xchg
arpl
sahf
test
jo
out
repz
std
lret
lock
push
sti
push
mov
mov
sub
int
in
jle
jo
lea
nop
inc
inc
and
or
jo
push
pop
xchg
cmpl
aaa
adc
lds
mov
lret
push
inc
in
jo
inc
insb
das
hlt
popf
pop
ss
mov
bound
fsubrl
jo
mov
mov
imul
pop
pmaxub
in
loop
outsb
jo
fstl
loopne
mov
int3
scas
jl
sbb
push
jle
sub
xchg
inc
in
push
jo
add
pop
push
xchg
scas
push
hlt
mov
int3
out
cmp
mov
mov
sbb
jo
std
dec
and
jge
jo
add
cwtl
push
sub
mov
aad
push
cmp
lea
add
adc
divb
push
and
push
jmp
enter
out
xor
rorb
mov
inc
roll
sbb
andb
arpl
xchg
inc
out
mov
sub
dec
and
outsb
cwtl
mov
sbb
icebp
lods
add
sub
movsb
jo
xor
loopne
or
ret
xor
repnz
repz
jno
shlb
cmp
data16
lods
test
or
popf
and
jle
jo
pop
insb
mov
sub
loop
lea
icebp
pop
rclb
or
loope
pop
clc
jo
sbb
xor
mov
and
in
push
mov
pop
mov
loopne
sub
inc
sbb
js
sti
jns
mov
ret
insl
insl
in
shl
sub
enter
or
inc
adc
and
gs
jnp
lahf
cmpb
jo
sub
stos
out
hlt
pop
push
jo
jmp
iret
adc
dec
xchg
mov
push
mov
cmc
pop
mov
enter
sub
pop
repnz
dec
out
jle
jo
mov
mov
jo
jbe
push
mov
inc
cmp
jmp
mov
or
mov
pop
gs
add
jo
pop
and
enter
sbb
orl
fldl
mov
bound
push
mov
int
hlt
and
out
jbe
cmpb
adc
sub
inc
stos
mov
cmpsb
lock
inc
sbbb
call
push
es
dec
movsl
sarb
call
in
or
sub
ss
icebp
jbe
cmp
test
adc
test
test
push
mov
push
leave
pop
or
loopne
mov
add
fcmovu
js
push
icebp
xchg
shlb
arpl
and
inc
pop
mov
divl
push
rcll
jp
std
mov
pop
lret
push
or
in
and
jo
ret
pop
pop
mov
jo
pop
inc
mov
or
or
xor
push
fdiv
sub
sub
mov
jae
ret
add
cmp
lds
jo
lock
sbb
leave
ret
shll
fdivl
ret
out
add
aam
bound
cwtl
or
and
jo
leave
je
stos
orb
xor
setae
mov
stc
sahf
arpl
imul
or
mov
jns
les
pusha
mov
and
cmpb
jo
ret
dec
cmp
dec
sub
jo
test
and
arpl
jo
test
push
mov
inc
das
cld
in
fstps
or
ds
sbb
cvttps2pi
movsl
aam
mov
nop
mov
jl
jae
xchg
cld
push
xadd
mov
and
jo
xor
jns
insl
pop
popa
jo
insb
mov
add
dec
push
loope
xchg
lock
inc
mov
stos
scas
xor
jmp
rcrl
js
sub
jo
ret
leave
xchg
paddq
std
push
push
xlat
scas
pop
rorb
cmpsl
les
push
jmp
or
inc
call
aaa
sti
sub
or
aad
nop
loope
adc
jo
or
mov
jo
das
fisttpl
cli
add
sub
sarb
jo
popa
sbb
sbb
or
push
subb
repz
sbb
movsb
je
mov
jo
adc
xor
push
add
idivl
addl
jo
outsl
ret
filds
and
mov
dec
mov
mov
jo
adcl
sbb
jo
or
inc
ret
jo
inc
or
lds
mov
faddl
push
bound
xorl
inc
and
adc
pop
inc
aad
daa
push
mov
jg
arpl
jmp
bound
xchg
push
lock
notl
mov
add
mov
pop
and
inc
js
fnsave
imul
iret
lcall
in
sbb
and
in
data16
jo
int
ret
out
out
mov
jo
rorl
push
fidivs
repz
inc
or
cmp
push
rol
imul
js
in
outsl
and
fcomps
xchg
push
mov
std
ss
leave
xchg
add
push
data16
jo
imul
jo
je
push
pop
jle
jp
add
leave
inc
cltd
daa
push
jo
mov
jge
movb
mov
outsl
cld
fidivrs
jb
gs
and
mov
jo
jne
aaa
xor
mov
ret
adcb
nop
and
sbb
iret
jo
mov
xchg
jo
rolb
cmp
insb
fists
or
inc
xor
mov
mov
xor
out
aad
test
pop
mov
push
jae
cmpsl
cwtl
rclb
xchg
and
xchg
jnp
shlb
rcr
lret
ljmp
jl,pt
or
lds
gs
mov
cmp
int
leave
inc
xlat
jl
jo
jbe
in
cmp
push
imul
cmp
inc
loope
sub
push
scas
mov
std
popf
in
daa
push
xchg
mov
cmp
add
pop
xchg
lea
shll
fisttpl
jo
xchg
loop
adcl
push
jo
sub
mov
jo
cwtl
std
cmp
push
sbb
pandn
mov
lea
mov
imul
sbb
xlat
jp
lret
dec
movzbl
sub
push
adc
aad
jo
cmp
jo
sbb
cmp
sbb
xor
xorb
dec
mov
movsb
fisubrs
sahf
lret
fsubl
lds
fiaddl
pop
ja
mov
lahf
icebp
lea
in
int
jo
lcall
insb
and
jne
inc
js
in
and
ss
jae
rcrb
xor
nop
jo
jnp
ljmp
push
mov
cltd
fdivp
repnz
jo
jl
mov
jmpw
push
push
sarl
ret
sbb
dec
gs
mov
subb
push
decl
push
pop
insl
mov
fidivl
cs
sti
push
rcrl
outsb
jo
or
sbb
lock
push
js
sti
and
jo
lea
jecxz
cmp
nop
test
mov
push
dec
pushf
stc
mov
jo
test
lahf
jp
mov
jo
loope
insl
ret
push
and
cmp
das
or
jo
cmp
icebp
scas
sub
pop
icebp
test
loop
xor
inc
push
xchg
stos
je
lods
fsts
jl
pop
jo
sub
adc
and
jo
enter
pop
nop
inc
lahf
shll
in
jns
lcall
jg
mov
jne
lar
dec
daa
fisubs
jmp
mov
je
sarl
mov
subl
pop
adcb
lods
je
cmp
cmc
sub
mov
and
fs
pop
cmp
enter
repz
jnp
cmp
sar
cmp
jns
or
sti
push
mov
mov
js
in
enter
repz
lds
adc
into
jo
push
push
rcll
jo
xor
lahf
leave
fsubrs
mov
jns
mov
vmovshdup
sbb
inc
nop
pushl
mov
icebp
jo
inc
mov
add
jo
dec
jl
and
sub
xor
orb
out
dec
out
ret
adcb
or
pop
xchg
jb
dec
in
and
enter
fsubl
lods
roll
ret
test
mov
jo
sbb
popa
adc
xor
jo
andb
jo
das
mov
decl
mov
iret
mov
out
nop
sub
or
mov
sbb
lds
or
bound
jnp
out
adc
adc
push
movsb
jb
push
mov
clc
pusha
jb
lahf
enter
testl
jmp
js
fstl
sbb
jne
jo
sub
pop
push
loope
add
int
imul
xlat
xchg
jo
sub
mov
push
lds
push
cmc
cmp
movsb
jns
mov
jo
je
ret
in
fildl
cltd
mov
cwtl
jmp
or
mov
jo
cmp
loope
and
fnstsw
nop
fwait
add
add
jo
les
adc
xchg
push
sub
jle
xor
bound
pop
in
inc
cmc
sub
frstor
push
add
stos
push
jecxz
ret
adc
js
outsl
xor
push
xor
push
fcoms
mov
dec
jo
inc
xlat
and
mov
jo
loopne
lret
aas
lods
aad
jo
inc
xor
repnz
data16
xor
mov
jg
add
pop
pushf
pop
lahf
out
sub
popa
add
jb
imul
pop
cmc
push
cmp
repnz
sbb
shll
sbb
fnstenv
add
inc
jns
cmp
addr16
sbb
cmp
andb
xchg
push
jb
pop
js
frstor
sahf
ret
std
adc
int
fstpt
pusha
loop
nop
push
or
jb
cmp
jo
inc
je
int
adc
mov
test
out
pusha
stos
arpl
mov
lahf
inc
and
loopne
nop
popf
shl
into
cmp
or
add
mov
mov
jo
mov
scas
imul
je
popf
cltd
dec
ret
rcrb
stc
xchg
icebp
sbb
jns
jmp
mov
adc
leave
xor
pop
ret
insb
cli
addr16
pop
mov
lcall
psrad
push
mov
adcb
mov
imul
inc
xchg
insb
pop
add
jne
jmp
lret
pop
pause
lds
jp
mov
lock
xor
pop
lea
jns
and
mov
repnz
popa
push
pop
jbe
sub
jo
push
movsb
cmp
mov
imul
fsts
out
jbe
cmc
shl
mov
jo
rorl
sbb
fs
push
add
mov
mov
mov
xor
jbe
xchg
jb
lods
jo
jno
dec
sarb
test
insl
std
loop
jo
xchg
insb
scas
test
jns
pop
dec
subb
movsl
jo
xor
sub
sub
loopne
sub
mov
sbb
test
in
mov
fstl
std
sub
out
jo
shrl
fs
cmpsl
mov
add
fs
xlat
jo
push
cs
movsb
lret
and
int
pop
out
sbb
or
jb
mov
loop
dec
jo
inc
addr16
int
pop
jo
adc
sbb
adc
push
xchg
movsl
mov
in
add
mov
ljmp
jl
add
adc
or
les
sub
cmp
add
cs
mov
mov
or
push
pop
jo
ss
jp
adc
push
adc
push
ret
fstp
jo
lock
add
pop
or
pop
push
mov
pshufw
repz
add
es
stos
gs
out
test
shrl
leave
mov
jp
ror
jb
jo
add
dec
fstl
mov
roll
dec
jb
test
pop
xchg
in
push
js
xor
jle
jl
test
out
jo
inc
es
lds
pop
mov
into
and
popa
mov
aam
add
sub
and
leave
fs
mov
mul
and
inc
cmp
test
inc
repz
out
xor
pusha
nop
lods
call
jge
rcrl
iret
or
neg
xor
and
and
sarl
das
lock
push
inc
js
repnz
pushl
imul
and
outsl
mov
lret
sbb
rol
xor
nopl
push
outsl
jle
lock
enter
leave
subl
push
or
lahf
xchg
pop
leave
cli
sub
mov
add
cwtl
lds
jo
mov
lahf
pop
pop
cmp
jo
xchg
ret
mov
mov
decb
jmp
cmp
insb
inc
test
lods
mov
aad
lds
vunpcklps
shll
jo
mov
subb
cmpsb
jo
or
jge
sbb
lds
and
out
add
lea
sti
inc
or
mov
jo
arpl
fdivrl
jo
mov
lea
ret
mov
pop
loopne
or
mov
jbe
mov
pop
jne
inc
jo
ret
aad
jnp
in
sbb
mov
add
out
cmp
pop
sar
je
sar
or
popa
sti
mov
pushl
out
shrb
es
mov
pop
jo
jmp
rolb
pop
add
inc
scas
jns
sbb
int3
sbb
jo
inc
aad
mov
ret
fdivrl
adc
call
popa
fidivrs
lds
stc
movd
adc
xchg
push
imul
cld
cmp
dec
jb
mov
bound
subl
je
ljmp
dec
leave
sbbb
icebp
push
es
mov
loopne
gs
jo
and
add
xor
push
std
int3
add
ret
push
test
movsb
pop
push
push
jne
and
cmc
push
ja
inc
mov
mov
or
decl
call
sub
jle
push
sub
lret
in
outsl
xchg
loop
clc
sub
mov
jo
xchg
jnp
aad
ud2
fcmovb
mov
mov
jno
jo
push
jmp
xlat
mov
mov
adc
ror
jecxz
test
inc
stc
sbb
into
cmc
adc
jo
fwait
xchg
cmp
mov
pshufw
jns
jo
daa
rorl
add
loop
and
in
add
jo
lds
and
mov
cmp
xor
fdivrs
ljmp
sbb
jl
clc
cld
jo
test
leave
sub
ret
movl
jo
imul
sbb
fadds
mov
mov
push
push
jo
mov
or
jo
leave
jge
cmp
cmp
shlb
roll
xchg
stos
jmp
shrb
call
lret
mov
dec
and
jo
pop
stos
fwait
push
push
mov
ret
les
test
rcrb
push
or
sub
leave
sti
sub
push
sub
push
pop
mull
fs
lcall
jo
xchg
sbb
cmp
fucompp
pop
leave
sahf
shrl
or
cmp
push
mov
jo
leave
call
data16
jp
sub
into
vpshufhw
and
jle
jo
jp
pop
dec
shll
int
jo
mov
add
adc
mov
mov
add
test
subb
test
setbe
adc
jp
sahf
pop
out
pop
cmp
int
and
push
enter
jo
fsts
jo
sbbb
jmp
xor
aad
rcrb
xchg
in
jle
dec
js
shll
and
bound
lds
stc
orl
push
jle
es
jp
push
sbb
jmp
or
add
loop
pop
jo
mov
xchg
xor
and
lods
dec
add
je
js
mov
cmp
jo
mov
imul
add
mov
xchg
shlb
jae
cwtl
js
cmpsb
imul
mov
mov
lahf
jl
lds
sbb
sub
adc
pop
pop
jnp
decb
push
out
adc
fnstsw
cmp
push
jb
push
shlb
xorb
rcll
add
mov
xchg
cmpsl
pop
pop
outsl
jo
xchg
mov
fwait
jns
jo
imul
cmpsb
xor
test
jns
adc
outsb
adc
dec
stos
lret
push
inc
xor
push
mov
mov
add
push
insb
xchg
xorl
push
jmp
jo
ret
bound
in
inc
mov
ja
icebp
call
lcall
jo
add
pushl
adc
push
xchg
jmp
in
andb
jo
arpl
mov
lds
ljmp
push
xor
mov
jmp
push
jge
jbe
push
jo
inc
les
jo
icebp
loope
mov
dec
push
pop
shll
mov
and
ljmp
add
lret
add
lock
loop
mov
jecxz
xchg
xor
leave
mov
sbb
xor
into
jge
pop
insl
std
jo
stc
fldt
in
mov
bswap
fidivl
mov
in
add
sub
jle
test
xchg
jo
test
lret
pop
aas
push
or
mov
std
cld
sbbb
mov
add
les
loope
ja
lcall
rcll
into
leave
mov
jge
sub
xchg
push
xorb
ret
fnsave
push
in
pop
xor
out
das
pop
and
cs
jo
in
bnd
fyl2x
mov
inc
pop
sbb
cld
xor
jo
ja
int
mov
test
lock
pop
xchg
xchg
jle
mov
mov
jo
cmpsl
roll
es
inc
mov
jo
mov
and
sub
sub
addb
xchg
out
add
and
movsb
sbb
jo
dec
scas
lahf
lds
adc
arpl
jbe
push
pop
jo
xor
or
push
sbb
imul
sbb
mov
jo
xor
mov
mov
je
cmp
pop
jo
xor
ret
mov
cmpsl
mov
pop
lds
mov
sbb
mov
dec
xchg
sbb
mov
jg
jo
in
rclb
mov
jnp
adc
jo
loope
inc
rorb
mov
aas
dec
jo
aad
inc
ret
rcll
dec
adc
jle
je
in
sub
movsb
rclb
jo
leave
mov
mov
dec
shlb
dec
repnz
sbb
mov
psrlq
loopne
push
insb
fimuls
adc
sub
push
enter
jmp
lcall
push
cmc
sbb
jp
add
mov
fprem
roll
jo
sub
push
mov
repnz
jo
repz
and
push
mov
pop
mov
test
rolb
clc
jo
add
icebp
pop
movsb
jp
in
cmp
popa
push
sti
imul
idivb
and
jno
jge
inc
jo
cmp
add
lret
mov
inc
pusha
mov
pop
insl
push
push
js
outsl
popf
mov
cmpsl
adc
call
in
pop
aaa
int
sbb
leave
shlb
scas
loop
adc
jo
loope
inc
inc
fcmovnu
nop
icebp
cltd
xlat
pop
mov
jno
dec
mov
sbb
xchg
and
mov
cwtl
jo
pop
orl
adc
adc
imul
cli
push
push
std
mov
mov
or
cmpsb
jno
add
adc
popf
xchg
test
push
in
aas
lock
inc
test
jb
jo
mov
sub
jl
cmp
mov
sbb
std
insb
pop
out
lea
jo
hlt
dec
iret
in
jo
pop
repnz
sub
out
xor
mov
add
or
mov
cmc
cmp
jo
xchg
or
adc
shll
dec
mov
jo
mov
insl
sbb
inc
jge
mov
test
fwait
mov
fsub
hlt
and
mov
test
ret
stc
cmc
nop
pop
jns
push
xor
ja
lea
lock
jge
insl
aam
test
lahf
shrb
push
push
ret
orb
daa
dec
jbe
pop
xor
lds
mov
mov
test
jo
ret
fnsave
popl
and
mov
outsb
push
movsb
sub
add
jo
fbstp
mov
daa
jo
jmp
ds
loope
jo
fsubs
lcall
loopne
add
orb
daa
mov
icebp
ret
mov
pop
das
push
lock
push
jle
or
gs
out
pavgb
dec
iret
push
push
sub
adc
fistpl
add
enter
cmp
cwtl
nop
popf
mov
jno
sbb
jo
xchg
imul
int
mov
push
lds
add
dec
aas
pop
mov
jo
shr
jmp
or
gs
mov
xor
mov
dec
loope
mov
mov
push
fisttps
jo
repnz
inc
or
int
push
sbb
jecxz
push
jle
lret
out
stos
jo
out
movsl
sbb
adc
icebp
mov
jns
ret
ds
push
mov
mov
xlat
rorb
sub
stos
js
shl
inc
jo
add
jecxz
cmpb
mov
int
push
idiv
or
daa
enter
ret
sub
inc
mov
push
mov
jo
outsl
int
jp
push
cmp
push
lret
aam
mov
lea
psubusb
loop
mov
lods
popa
fisttps
cmp
mov
adc
cmp
mov
lock
inc
jns
add
out
ret
pcmpeqb
cmp
push
lods
insb
sar
sub
or
pop
jmp
and
leave
fstps
push
adc
jp
jge
pop
leave
jo,pt
test
inc
xor
pop
jne
sub
push
popa
jo
outsl
repz
jo
xchg
pop
out
lds
jge
mov
sub
add
add
fidivs
jo
frstor
fwait
cmp
inc
cmpsb
nop
jns
inc
imul
and
push
sbb
fisttpl
mov
imulb
addr16
test
adc
es
jo
outsb
ret
insb
pusha
lds
rcr
imul
lret
arpl
fxch
hlt
test
jo
xchg
xchg
push
mov
mov
sbb
outsl
nop
adc
mov
iret
adc
into
cmp
in
jo
ljmp
in
mov
sarb
xor
js
sbb
jp
mov
jo
pusha
fstpt
mov
icebp
scas
cmp
in
xchg
inc
or
int
sbb
outsl
xchg
or
ret
aaa
ljmp
loope
adc
dec
add
mov
ret
dec
ret
xor
jge
mov
sbb
adc
push
lods
mov
push
mov
xor
adc
cmc
loop
aas
push
jo
xchg
add
imul
in
arpl
nop
or
cmpsb
vpsubb
jno
jo
sbb
push
mov
js
mov
sbb
test
lock
and
jo
dec
int
and
aad
jo
movb
jo
cmp
pop
insl
add
jo
mov
fisttps
push
jb
add
sub
shl
xchg
jo
push
lods
pop
mov
shrl
into
jo
adc
arpl
bt
adcl
xchg
xchg
inc
jno
or
jo
leave
into
ret
lret
mov
inc
push
jbe
jo
fwait
js
dec
nop
xchg
dec
scas
and
or
jmp
mov
mov
adcb
jno
xchg
arpl
testb
add
in
jle
aas
icebp
mov
ret
and
push
insl
xlat
lds
scas
mov
mov
data16
push
out
mov
in
add
sti
mov
pop
and
lret
cmp
in
insb
inc
imul
lock
mov
sti
xchg
jo
inc
test
or
shlb
pop
cwtl
and
and
fistpl
lods
xorb
push
mov
jns
jo
test
cmpsb
push
gs
es
sahf
jo
daa
lds
scas
lea
jo
repz
add
sti
jo
js
in
mov
inc
jo
stos
dec
mov
cs
ret
mov
lock
je
add
jo
lahf
in
xor
shll
in
fidivl
mov
fs
rclb
mov
push
cmp
push
testl
adc
jo
leave
inc
mov
or
add
sbb
cmc
loopne
push
add
pushf
cmp
dec
scas
std
jo
pinsrw
jl
mov
xor
bound
stos
jge
out
iret
imul
push
popl
mov
idivl
jo
push
sbb
hlt
int
jo
mov
jp
ja
jo
in
aas
jae
inc
push
gs
push
jo
and
jo
adc
lds
lock
adc
cmp
or
and
je
into
mov
sub
daa
jbe
mov
sarl
jo
xor
add
stos
imul
jnp
nop
pop
cwtl
out
in
ja
popf
orb
pop
subb
bound
jo
xchg
dec
out
sub
xor
lret
mov
xcrypt-ecb
mov
xorb
insb
pushf
mov
pop
sub
jbe
mov
dec
lcall
pop
scas
inc
sub
jle
out
push
aaa
inc
movsl
into
sbb
imul
push
adc
outsl
mov
je
add
jo
inc
arpl
ss
add
clc
lods
adcb
xchg
dec
sbb
mov
or
inc
jp
adc
shrb
bound
mov
lret
adc
test
movsb
mov
push
iret
jo
outsl
imul
sbb
pop
xor
or
dec
mov
xor
das
jb
pop
jo
inc
pop
aas
stos
inc
xlat
xchg
jo
lcall
jo
jecxz
jae
out
fiaddl
inc
jg
repnz
and
inc
test
cli
mov
jo
lcall
jns
push
pushl
mov
xor
lahf
gs
or
xor
inc
mov
mov
mov
hlt
xchg
or
xor
dec
and
int3
pop
pop
mov
jp
push
xchg
mov
pop
pop
rcr
sub
sub
xchg
aad
popa
insl
flds
ret
mov
and
aad
sub
xor
clc
sub
jo
sarb
xor
push
repnz
or
xor
int
rorl
push
jecxz
bound
jo
mov
pop
std
jo
xor
sub
xchg
mov
sbbl
mov
sub
or
jb
mov
or
pop
xchg
mov
mov
xor
ja
jmp
nop
jo
popf
int3
xor
add
cmp
xchg
adc
inc
add
lret
or
xchg
subb
icebp
xchg
mov
stos
outsl
cmovg
jo
jbe
sub
pop
mov
cmp
ret
shrl
xchg
xlat
js
jg
ret
scas
je
lods
std
ss
pusha
mov
bndldx
dec
mov
or
pop
sbb
cmp
ret
inc
lock
xor
push
jo
pop
xchg
outsl
std
add
mov
inc
jbe
inc
mov
lcall
xlat
sbb
push
cltd
xor
insb
jnp
jo
imul
mov
add
js
iret
ret
loopne
sub
mov
fidivl
loope
inc
clc
jo
inc
pop
mov
in
jecxz
jne
scas
jle
lret
jo
push
sub
call
pop
jo
ret
push
jo
clc
leave
lock
jp
jecxz
cmpsb
iret
sub
push
xchg
in
rcl
jo
roll
cmp
andl
js
mov
dec
or
cmp
and
pop
addb
and
mov
dec
jge
push
xchg
adcl
mov
sbb
repz
xor
or
std
cmc
incb
fistpll
mov
pushf
jo
mov
jp
jo
roll
testb
aam
leave
dec
mov
outsl
jns
aas
loope
clc
rclb
inc
in
fcmovnb
in
mov
jb
and
imul
dec
sub
jl
lock
scas
leave
mov
ret
mov
imul
mul
fisttpl
enter
addr16
jo
sbb
add
and
jno
xlat
sbb
aad
push
xchg
ror
dec
mov
das
push
inc
and
push
fsts
outsl
insb
arpl
jo
std
sub
in
loop
jo
lds
pop
sub
enter
das
sub
xchg
in
mov
andb
xchg
push
hlt
cltd
cmp
xchg
sti
and
aas
test
push
stos
jp
sub
jo
repnz
mov
jo
sub
jns
jo
mov
sub
jo
scas
and
jo
jmp
adc
stos
jo
mov
cmp
aaa
add
lret
gs
dec
xchg
andl
xlat
pop
lds
es
or
loope
jo
push
ja
popa
mov
xchg
jno
imul
mov
mov
jo
test
out
add
js
adc
mov
mov
xchg
pop
push
in
stc
jle,pn
lods
push
jo
test
mov
je
jle
dec
dec
clc
lods
xchg
aas
ljmp
xor
dec
nop
sbb
jno
testl
jl
gs
mov
clc
jno
jge
jo
jns
and
negb
ret
lds
sub
and
outsb
divl
jmp
cmp
xchg
mov
shll
outsb
mov
shr
inc
nop
sbb
js
int
in
mov
cmp
sarl
jnp
mov
out
jo
cmp
jbe
gs
cld
or
or
scas
mov
pop
inc
mov
addr16
test
mov
push
mov
shrb
call
add
popf
dec
xchg
hlt
in
repz
shlb
scas
jl
cmp
loop
aam
aad
out
dec
mov
je
add
jo
mov
in
pop
or
into
xchg
int
cs
jo
inc
addr16
lds
mov
adc
push
insl
mov
jecxz
adc
js
jo
test
sbb
mov
adc
mov
cltd
cli
xorb
push
or
je
jo
and
pop
ret
stos
jo
mov
mov
arpl
jo
stc
sub
addr16
xor
pop
mov
mov
cmp
fucomi
push
fisttpll
mov
fists
clc
ret
cmpb
call
cs
pop
pop
in
jo
imul
sbb
dec
lods
ja
test
jo
xchg
sarb
xor
jbe
jo
mov
adc
push
jb
jo
pop
lahf
in
inc
test
shll
popl
mov
sbb
cmp
jo
repnz
rcll
pop
fwait
cmpl
mov
out
in
or
jae
cwtl
sub
bound
adcl
add
xchg
inc
je
es
adc
test
dec
cmp
jo
adc
loope
jo
adc
cmpl
mov
sbb
shl
jo
adc
dec
outsb
pop
fs
and
sbb
jb
ret
push
push
mov
mov
pop
rcrl
jno
enter
aad
nop
xchg
mov
jo
sub
mov
and
or
pop
inc
xchg
mov
cwtd
cmc
leave
mov
xor
jb
aad
popf
jo
sub
pop
add
jo
push
in
rolb
jo
inc
arpl
sti
hlt
negl
jl
fs
add
pop
sbb
data16
ds
jo
xor
and
jo
xor
xchg
mov
dec
or
sbb
bound
mov
rcrb
aad
cwtl
inc
sahf
out
adc
andb
rcrl
int
adc
js
sub
pop
shlb
xor
fcompl
shll
push
js
sub
push
mov
shlb
ja
jo
lahf
add
jo
cmp
dec
jo
and
add
in
xor
fidivl
test
push
jnp
xorb
es
mov
jo
xor
andl
adc
loopne
movsw
jo
mov
shl
paddusb
bound
bound
jno
inc
nop
fists
push
fnstcw
push
push
scas
aad
dec
pushl
in
out
daa
mov
or
mov
nop
mov
out
out
lret
stos
mov
xchg
jo
aam
add
rorl
or
adcb
mov
jl
jbe
fs
js
jle
sub
ljmp
jo
sbbl
mov
jo
sbb
loope
or
mov
inc
jle
or
mov
xchg
jmp
xchg
push
lret
inc
xchg
jo
sbb
add
fcmovb
xorl
inc
pop
fldt
pusha
data16
xor
arpl
cmp
jo
shrl
hlt
and
lea
jo
mov
daa
mov
and
fs
cmp
idivb
and
jp
xor
nop
jno
or
mov
add
sub
repnz
jmp
add
jo
in
leave
push
lcall
addb
test
pusha
jb
in
imul
rclb
mov
pop
sbb
jl
dec
mov
and
push
jbe
xchg
sbb
dec
inc
ret
jp
movsl
mov
inc
lahf
mov
adc
add
pop
mov
imul
push
add
lahf
and
add
out
out
inc
jo
push
push
xchg
lock
jo
pop
push
adc
mov
jo
ret
or
mov
lds
cmc
inc
loop
fiadds
jle
mov
jle
mov
push
data16
popa
inc
jo
adc
icebp
lcall
insb
stos
inc
mov
jo
jbe
inc
ret
jle
jae
loope
push
lea
add
push
fisubrs
cli
repz
push
mov
mov
nop
sbb
mov
fsubl
ret
ja
xchg
inc
sbbb
adc
jo
inc
lea
dec
xchg
insb
jo
dec
lret
push
jo
xor
jg
xor
push
ret
mov
jo
iret
sub
add
loopne
test
xchg
imul
push
adcb
scas
bound
cmp
jo
inc
inc
cmpsl
sbb
push
lock
rcrl
inc
jo
test
movsb
jmp
psraw
jo
enter
xchg
lcall
movsb
in
xchg
jo
pop
add
xor
lock
lret
cltd
cmp
xchg
xchg
push
push
mov
out
jbe
xor
push
js
adc
pop
scas
aas
ret
jo
lods
dec
dec
add
mov
int
mov
pop
mov
call
es
scas
xchg
lods
adc
dec
psubd
jb
cmp
xchg
aam
jo
cmpsb
inc
mov
nop
ret
lock
mulb
movsb
ss
jo
mov
imul
pop
push
push
clc
jo
jge
popf
loope
xchg
mov
mov
jo
jbe
dec
hlt
pcmpgtd
jo
mulb
aaa
xor
jmp
inc
rorl
frstor
sti
stos
je
push
dec
adc
mov
xchg
add
dec
pusha
jo
xchg
lds
test
mov
jo
shr
adc
les
xchg
xchg
inc
sti
bound
jl
inc
jmp
in
lods
int3
xor
inc
mov
push
mov
and
jle
sbb
mov
push
jne
pop
insb
imull
push
popl
push
fnstenv
and
cmpb
mov
push
adc
ret
xor
xchg
jne
mov
int3
cmp
jo
pop
push
or
mov
xor
int3
add
mov
push
ljmp
xor
xor
jo
cmpsb
les
imul
sub
into
andb
hlt
dec
inc
or
test
dec
cmp
sbb
dec
pop
push
cld
dec
rclb
sbb
insb
or
or
fldcw
out
xchg
push
inc
jo
repnz
rcll
push
sti
cwtl
ret
jo
sub
leave
nop
imul
jo
out
sbbb
push
les
jl
lods
ret
lcallw
aam
sub
incl
jecxz
pop
jg
jo
leave
std
in
daa
roll
out
pop
add
jo
mov
rcll
aad
scas
lcall
jo
cltd
sub
pop
jle
mov
int3
imul
je
lcall
imul
push
test
xor
xchg
jmp
sbb
lock
popa
rolb
jo
xor
rcrl
jge
jo
xchg
data16
mov
jl
adc
aaa
jnp
push
mov
sub
pop
mov
adc
pop
hlt
clc
sub
and
sub
jo
cmp
ret
xchg
jo
pop
mov
pusha
sub
sbb
hlt
fbstp
mov
jns
and
js
inc
dec
in
push
sub
mov
fs
lahf
push
push
jecxz
mov
das
pusha
jbe
loopne
fdivrl
sub
js
fs
or
jo
imul
setno
rorb
shll
ljmp
lock
sub
js
add
lods
fstpt
ret
cmp
shll
mov
jo
into
sub
jo
push
arpl
jo
add
add
mov
xor
xor
cmp
in
hlt
push
insb
mov
ss
mov
cwtl
js
sbb
jo
xchg
sub
inc
jmp
push
mov
nop
sbb
xchg
lds
sti
mov
in
rcll
jo
clc
push
fwait
bound
or
push
pop
sbb
jp
shlb
fwait
subb
test
lock
mov
js
pop
xchg
popf
jo
sbb
call
int
mov
notl
fdivrs
sub
jo
lock
mov
iret
jp
jo
movsb
ret
mov
sbb
hlt
sbbb
aad
jo
mov
out
mov
sbb
aaa
sub
mov
fwait
dec
jo
leave
mov
mov
jo
aad
mov
cmpsl
shrl
ret
aas
push
jmp
mov
xor
lahf
mov
dec
aaa
pusha
mov
loop
mov
mov
repnz
repz
andl
push
lds
mov
stc
push
ja
filds
int
mov
insb
or
pusha
xorl
loop
int
popa
push
aaa
or
mov
je
pop
ficoms
jge
daa
cmp
jb
add
xchg
or
jo
add
leave
sbb
mov
jno
scas
lahf
in
cs
add
imul
sub
es
and
mov
lds
sbb
rclb
or
push
jmp
jo
loope
aam
inc
out
sahf
mov
fs
std
or
jae
js
mov
xchg
and
dec
stos
js
shlb
adc
loopne
adc
sub
ds
pushf
outsb
ljmp
mov
inc
addr16
or
dec
jo
pusha
add
add
sbb
and
fisttpl
adc
cmp
sbb
lock
ss
push
push
loope
imulb
aas
cmp
jae
sbb
xchg
insb
adc
cmpsb
orb
push
enter
inc
jo
sahf
mov
sub
and
icebp
loope
push
cmpsb
xchg
inc
jo
adc
aam
sub
xor
sbb
push
sub
in
subb
mov
lods
ret
stos
packssdw
sub
push
mov
hlt
sub
mov
ret
rcll
xchg
clc
fistps
vcvtss2si
inc
xchg
jo
popf
mov
scas
push
pop
jae
fs
insb
xorb
dec
lcall
pop
sub
int3
or
jo
pop
lds
fsubrp
add
das
push
test
mov
sbb
imul
mov
xchg
sbb
dec
ljmp
add
nop
jecxz
fsubs
jbe
gs
jo
mov
lds
mov
sbb
data16
or
fwait
cmp
jo
adc
fdivr
test
in
dec
xchg
data16
scas
jp
inc
jo
test
andb
and
lahf
js
jb
pop
shlb
ret
jo
dec
movsl
sbb
jp
xor
pop
test
add
aaa
jo
cmp
cmp
data16
jo
cld
add
push
ss
pushf
arpl
inc
ljmp
pusha
jo
je
cmpsb
push
pop
push
mov
xchg
mov
bound
jo
push
out
dec
fucomi
and
xchg
jno
loopne
dec
cmp
jo
inc
jne
ja
inc
cmp
dec
push
pushf
cltd
rcr
idiv
mov
or
arpl
in
lea
js
jb
sti
jo
jbe
jge
movsl
mov
ret
ret
rclb
xchg
push
lea
cmpsb
fs
outsl
punpckhbw
rorl
xchg
jne
and
push
iret
repz
dec
mov
bound
nop
jecxz
hlt
setg
jle
sub
mov
cmpl
or
repz
mov
jmp
xor
repz
lahf
jg
fs
add
decl
jle
ds
pusha
push
lea
jo
dec
cmpsb
ja
int
out
jg
xchg
int3
xchg
shlb
and
inc
outsb
popa
arpl
test
loope
sbb
adc
ss
cwtl
dec
int3
adc
mov
cltd
inc
or
mov
sbb
pop
jo
hlt
pop
jb
inc
adc
jo
dec
iret
arpl
mov
jo
imul
hlt
push
lods
or
mov
clc
and
cmpsb
add
ja
lods
jns
jo
in
sub
cmp
and
push
inc
mov
test
and
sbb
sbbb
aad
push
jo
adc
lock
shrb
pop
bound
scas
lcall
mov
sahf
cmp
cmp
mov
mov
test
xchg
mov
jo
sub
imul
cmp
jo
sahf
mov
fisubl
sbb
jb
je
insl
cld
jo
pop
inc
aas
fndisi(8087
inc
xchg
jo
mov
mov
and
nop
out
sub
or
inc
jle
cwtl
jnp
mov
pop
sub
add
jae
imul
clc
insb
and
ret
dec
iret
jo
std
mov
lea
mov
shrb
push
xchg
divl
in
jmp
jnp
mov
scas
inc
and
les
cmpsl
jo
aaa
aas
dec
push
mov
addl
mov
iret
jo
cltd
sub
shlb
clc
xor
stc
adcb
js
mov
in
pop
jo
dec
pushf
iret
cwtl
inc
sti
jo
jge
sub
mov
cli
rcrb
jo
cwtl
pop
sub
pop
flds
rorb
jbe
lret
jmp
sub
dec
popf
pop
pop
jo
sub
dec
push
push
mov
jo
jbe
lds
adcl
or
sub
sbb
mov
inc
jns
jmp
sub
jo
out
or
jno
pop
movsb
cmpb
jmp
sbb
xor
int
dec
cmovns
and
sub
mov
mov
sahf
inc
xor
test
dec
and
outsl
lahf
ljmp
jmp
sahf
fmull
sbb
fnstsw
jo
shrl
sbb
int
mov
pop
xorl
inc
vmovupd
xor
fisubs
fnstenv
je
repnz
pop
xchg
or
cmc
push
xchg
rclb
shll
cmp
jo
aaa
mov
test
mov
mov
pop
data16
andb
jo
test
adc
ljmp
push
push
pop
jns
sar
cmpsl
jbe
cwtl
sbbl
bound
js
test
jo
inc
fwait
cwtl
pop
xchg
jns
gs
jo
jecxz
testl
lods
test
fldlg2
jns
fistps
sti
jo
and
call
mov
popa
int
bound
jno
jo
mov
mov
sub
mov
nop
std
pop
jo
lock
lret
add
inc
adc
pop
je
jmp
jo
popa
stc
shrl
add
add
ret
adc
sub
inc
xchg
ja
fs
jo
xchg
push
and
jo
outsb
movsl
jge
xchg
sahf
inc
addl
xchg
push
mov
jmp
rep
xchg
jmp
jo
or
scas
lret
ret
jo
into
gs
lds
mov
push
lock
and
pop
lods
addr16
jo
rcl
or
jp
push
ret
aaa
fcomps
in
jo
mov
jo
pusha
mov
push
inc
sbb
jo
pushf
test
push
fcmovu
pusha
arpl
int3
js
add
cwtl
pop
add
mov
jo
leave
lea
rclb
jo
mov
jmp
mov
cmp
jne
xor
sbb
outsb
add
and
rorb
adc
adc
push
jnp
mov
jo
test
dec
jge
lock
shll
jo
cmp
popf
icebp
jo
fcoms
pop
mov
mov
pop
xchg
jo
rcrb
dec
ret
bound
mov
jo
pop
scas
pop
mov
ss
inc
sub
mov
and
jp
jnp
and
cmpb
in
and
cli
or
cmpl
and
daa
lock
add
xchg
mov
popl
lds
jle
jmp
push
xchg
mov
imul
jo
jmp
in
sub
jp
jae
sub
mov
sbb
shl
push
test
push
sub
movsb
jmp
sbb
jo
xchg
mul
add
mov
stc
sub
test
arpl
mov
jo
stos
loop
outsl
rorl
sub
mov
and
mov
pusha
and
rolb
nop
inc
mov
lahf
stos
jo
cmp
loop
jbe
lds
jnp
dec
fwait
or
pop
aad
add
scas
jp
mov
add
jge
jo
popa
repnz
jb
jnp
jo
xor
loopne
sbb
mov
aaa
inc
sarl
mov
xchg
in
fs
push
push
inc
lea
test
loope
ljmp
les
xchg
test
testb
rcrl
in
push
jnp
jl
bound
mov
mov
dec
mov
add
shrb
inc
out
jecxz
insb
repnz
lds
xor
jo
rorl
jnp
jo
push
ret
mov
jmp
lds
roll
bound
xor
fnstenv
jo
mov
mov
orb
icebp
dec
fstps
bound
pop
mov
push
add
shr
jo
inc
ret
sti
xchg
shl
vmovntps
icebp
aad
jo
adc
adc
mov
lea
mov
jo
xchg
lds
nop
icebp
cli
out
int
std
imul
icebp
push
mov
leave
fdivrl
sbb
cmp
iret
lds
xchg
and
mov
add
adc
lods
push
sti
push
in
hlt
jae
jo
or
shrl
sub
jo
mov
out
lds
mov
bound
shll
in
iret
out
push
push
xchg
je
test
pop
jns
adc
sub
lahf
and
shll
sbb
in
jae
dec
or
lock
mov
ror
ret
scas
mov
lock
jmp
push
push
cmp
dec
addl
jo
or
add
addr16
or
mov
xor
sub
inc
mov
mov
dec
nop
jmp
jae
jle
lock
andb
inc
mov
xlat
pop
or
mov
mov
lods
jmp
sbb
jp
xchg
pop
sahf
push
inc
xchg
in
insb
cmpb
ja
lods
inc
fwait
and
fnstenv
pminub
clc
xchg
push
xchg
xor
push
stos
push
mov
adc
js
daa
cmc
adc
inc
addl
js
out
in
lret
sbb
scas
fildll
xor
sub
jmp
jb
push
ret
out
cmp
and
pop
push
mov
lahf
inc
ret
pop
pop
mov
mov
mov
mov
jo
loope
dec
in
aad
rclb
jmp
inc
addr16
clc
pop
mov
xchg
sbb
shl
mov
leave
mov
sahf
jle
ljmp
sbb
out
ss
sbbl
push
lods
mov
sbbb
int3
adc
out
popa
xchg
shlb
leave
cmp
xchg
jo
fadd
jmp
mov
mov
shlb
adc
movsb
lahf
int
inc
bsr
jo
insl
pop
ds
jge
arpl
mov
jl
cld
and
mov
push
lds
rolb
jmp
bnd
shl
ret
jbe,pt
andb
push
xor
inc
push
das
out
xchg
ja
push
jecxz
mov
pushf
dec
inc
jle
or
push
jo
fisubl
mov
dec
scas
pop
gs
jae
xor
mov
les
hlt
adc
sarl
adc
jecxz
mov
js
jb
cwtl
jo
mov
and
push
cmp
aam
or
dec
arpl
jle
push
mov
rolb
push
hlt
xchg
sbb
or
movsl
psubb
sub
inc
jo
cltd
dec
dec
mov
sub
sub
dec
cmp
pop
jb
xchg
loope
jo
mov
mov
leave
dec
jo
les
mov
addb
and
lods
ds
cli
xchg
leave
dec
xor
adc
mov
mov
jmp
push
stos
in
cmp
jns
dec
push
jno
leave
in
add
mov
ret
cs
bnd
push
je
pop
mov
jp
xchg
cld
sub
xchg
icebp
movsl
int
fsubl
mov
lret
mov
cmp
jae,pn
loopne
adc
xchg
jo
adc
in
sbb
das
add
in
push
jo
xchg
dec
dec
sub
mov
sar
cmp
imul
cmp
leave
push
jo
cltd
pop
popf
inc
mov
adc
shrl
lds
mov
cmp
mov
jo
lock
icebp
das
cld
sub
xchg
pop
pop
jo
test
push
dec
pop
add
jo
test
add
inc
xor
mov
subl
push
lods
cmpsl
jecxz
sbb
negb
cmpsb
addr16
mov
imul
ret
and
push
jo
sub
aas
push
das
fs
test
jo
loope
xchg
imul
pop
jp
push
daa
xor
pushf
and
pop
cmp
lock
jo
add
push
sub
xor
adc
mov
lds
in
sub
dec
mov
orl
push
push
xor
leave
mov
jo
test
sti
sub
jo
push
jb
inc
inc
scas
mov
loope
xor
push
mov
add
jmp
pop
jo
mov
mov
rolb
ds
lock
cmpsb
jl
mov
sbb
int3
sbb
jle
ja
inc
push
sub
add
cwtl
cmp
aas
inc
je
add
shlb
jmp
pop
lahf
jge
dec
mov
stc
std
xor
adc
es
jmp
jns
jge
push
shrl
out
aas
jle
mov
into
inc
rorb
mov
daa
lds
lret
mov
bswap
sbb
dec
jmp
out
jo
inc
xchg
repnz
push
mov
fs
xor
rcll
gs
add
adc
adc
enter
rorl
psllq
inc
je
mov
cmc
sub
shlb
test
pop
nop
mov
mov
fs
cmp
or
jmp
les
jo
cld
enter
sub
gs
mov
jo
stos
aad
pop
in
push
xchg
jo
test
or
shll
jo
aas
cli
xchg
inc
adcl
lret
je
ror
or
mov
jno
bound
adc
aas
stc
insb
fnstsw
dec
mov
mov
dec
add
add
ret
xor
mov
pop
xlat
dec
icebp
xorb
cmp
inc
inc
and
xor
lcall
push
divl
cmp
pop
inc
fdivs
lock
adc
mov
sar
aas
add
lcall
push
out
testl
int3
jo
jb
mov
xchg
mov
sahf
ror
ret
push
ljmp
fcmovnbe
lds
shlb
mov
inc
fldcw
shll
sti
ds
les
jo
dec
int
insb
mov
inc
in
fidivrs
xor
push
inc
jg
lds
and
jo
push
and
imul
jnp
in
xchg
dec
pushf
jo
cmp
push
movsl
je
ret
jo
cwtl
repz
rcrl
jg
test
icebp
xor
pop
jle
mov
xchg
dec
xorl
push
jmp
push
xor
jmp
add
dec
rclb
cmp
push
fdivl
loop
lahf
test
fbstp
push
jno
test
sarb
or
int3
inc
mov
jo
fs
push
or
jg
jo
leave
and
sbb
bound
test
lock
jg
add
shr
dec
jnp
aam
int
cli
sub
push
add
ret
pop
mov
push
fsubrl
pop
inc
insb
adc
jle
pop
loope
jo
cld
mov
add
int
jo
bound
inc
inc
pushf
jo
aam
or
nop
push
xor
jo
push
xchg
xchg
repz
sbbl
push
imul
cmp
outsb
popf
not
jo
push
cmpsl
and
jo,pt
incb
inc
sub
addr16
movsb
roll
push
jne
lds
and
xchg
add
jbe
stos
test
nop
dec
jo
test
les
cmp
inc
dec
nop
mov
mov
mov
arpl
mov
mov
cmp
add
dec
fidivrl
scas
pop
lret
aas
vaddsd
hlt
lahf
daa
mov
or
adc
cmp
insb
inc
sub
in
aad
pushl
jo
icebp
inc
mov
int
adc
push
fdivp
fs
ds
jae
lods
push
aad
cmp
dec
cltd
mov
xor
test
push
inc
jecxz
jmp
cmc
icebp
es
clc
test
ja
push
insb
jo
jge
lods
add
mov
jo
cmpsb
inc
mov
nop
mov
or
inc
jne
shlb
push
je
mov
jne
lods
dec
add
clc
pop
subb
test
dec
sbb
jo
xor
arpl
stos
sub
sub
push
call
outsb
jbe
imul
gs
lds
fbstp
ss
and
jno
jbe
test
leave
imul
andb
xchg
jo
lods
fisubs
shlb
bnd
or
mov
rcll
repz
cmc
iret
mov
inc
out
fidivs
xor
fs
outsl
sub
xchg
in
or
rcll
adc
enter
add
ja
lret
or
nop
pop
adc
aad
repz
fisttps
mov
or
jo
mov
lds
nop
fdivr
leave
test
jo
push
add
iret
xchg
mov
inc
scas
je
nop
std
sbb
lahf
pop
push
ja
aam
jo
js
movsl
scas
aad
jl
xchg
test
test
fildl
icebp
inc
cwtl
inc
lea
cltd
out
ror
test
nop
fldl
rcll
jecxz
mov
pop
jbe
data16
jo
gs
mov
lea
data16
imul
jo
dec
sub
sbb
lahf
lods
ja
rclb
push
xchg
jo
ficomps
jno
xor
or
ljmp
inc
mov
sti
sub
and
or
jp
push
xor
jo
add
mov
in
inc
xchg
xchg
mov
add
or
push
je
push
sahf
push
insb
test
sub
xor
push
and
pop
shll
hlt
pop
jmp
fs
mov
pop
xor
rcll
out
jo
ret
aaa
jmp
dec
lcall
popa
js
call
jo
adc
outsb
mov
mov
mov
sbb
jp
jb
inc
stos
leave
nop
xchg
mov
je
sbb
addr16
dec
sub
mov
bound
pop
xchg
lcall
shll
out
dec
cld
lds
rclb
cmp
push
fstl
addr16
jo
sub
pop
divl
and
sbb
das
std
sbb
sub
push
and
pop
mov
icebp
hlt
ss
jo
fwait
mov
daa
hlt
aad
jmp
mov
cmp
push
mov
jp
sbb
mov
push
shlb
les
movsb
out
mov
jo
or
jb
xor
xlat
rcl
call
mov
mov
mov
in
adcl
push
jne
mov
xor
js
gs
push
jo
iret
sarb
sbb
cmc
mov
loope
add
addr16
std
popf
js
scas
incl
push
jo
mov
mov
jp
push
lock
cld
lcall
sbb
popa
mov
inc
fbld
pop
dec
pushf
push
jo
xchg
repz
adc
jmp
int
dec
cmp
jo
xchg
lds
sbb
leave
sbb
push
test
add
sar
and
pushf
sub
iret
jno
mov
sub
fwait
jo,pn
lea
and
dec
xor
cmp
scas
mov
push
xchg
cmpsb
sbb
filds
aad
jo
data16
ret
jo
movsb
cmpl
in
js
mov
arpl
push
jo
add
sbb
push
mov
sub
adc
inc
paddsw
cmp
std
imul
push
jmp
dec
mov
dec
ljmp
pop
divl
sbb
movl
ror
icebp
xchg
aaa
push
scas
add
sti
xor
shufps
jle
cmpsb
inc
movsb
xor
loope
daa
mov
in
inc
cmc
popf
nop
inc
add
xor
hlt
int
jnp
js
icebp
or
cmpsb
adc
into
xor
jle
movsl
jle
jo
lds
push
fidivl
out
aaa
in
loopne
add
and
jns
scas
mov
xor
ja
fsubl
addb
adc
dec
pop
mov
inc
jo
sbb
ljmp
mov
jo
mov
outsb
int
mov
test
ret
sub
or
mov
fnstenv
push
add
lds
fstl
inc
loope
out
xorb
ret
cmpb
pop
push
insl
movsl
es
insb
mov
mov
dec
hlt
outsl
sub
jo
stos
dec
xor
cmc
jb
jo
inc
push
lahf
inc
lar
jo
sahf
outsl
cmpsl
inc
nop
ss
jmp
mov
push
and
mov
ret
loope
xor
jmp
sub
jno
push
sbb
push
orb
add
out
cmp
jmp
cmp
enter
lds
pop
lahf
ret
mov
addb
xchg
pop
dec
jo
xchg
mov
out
mov
lods
dec
add
add
add
adc
pop
jne
adcb
into
pop
mov
fstpt
xor
popa
jge
mov
cmpsb
mov
insl
dec
aaa
sbb
rorb
sub
mov
mov
fimull
mov
push
popa
jo
pushw
adc
and
jo
sti
arpl
add
loope
bound
inc
test
lds
repnz
inc
jo
add
movsb
fsts
std
jo
enter
cltd
xchg
mov
frstor
and
mov
or
lds
mov
mov
bound
in
insb
adc
fldl
leave
jle
jo
jl
inc
mov
adc
jno
push
fldt
ret
nop
test
sbb
lock
in
jo
and
or
jne
mov
rcrb
icebp
xor
jo
roll
rol
clc
or
fnstenv
dec
jmp
ss
lcall
xor
xchg
mov
popf
jno
outsb
jle
dec
xor
int
xlat
xchg
dec
imul
push
sbb
xor
ret
mov
movsb
push
clc
popf
idivb
das
mov
jo
xor
xor
hlt
out
add
pusha
cmp
push
inc
xor
stos
mov
repz
fsincos
xchg
sub
popa
jge
pop
xchg
push
push
stc
xor
insb
push
jo
jae
fstps
inc
enter
out
jo
test
xchg
jo
or
sub
popf
jmp
jbe
lahf
out
jo
xchg
or
out
mul
jp
jo
cli
sub
jnp
shll
insb
cmpsl
les
outsb
jo,pn
mov
lea
add
std
push
adc
nop
arpl
aad
jl
cmp
add
fimull
aam
gs
dec
inc
insl
je
out
jno
cmpsb
jle
ds
sbb
or
lds
fs
xcrypt-ofb
cmpsl
push
sub
fmulp
sub
jg
jo
scas
and
das
inc
mov
sub
sub
lahf
add
nop
mov
or
loop
aad
sarl
loope
xchg
mov
jle
sub
adcb
fs
push
ljmp
inc
ja
scas
inc
jo
and
imul
lcall
mov
cmp
dec
jo
lret
jp
pop
fwait
jo
lds
xchg
inc
xchg
jae
sub
mov
jnp
clc
xchg
push
adc
int
mov
push
daa
or
jo
cwtl
lock
testl
adc
add
cmp
pop
loopne
mov
cmp
addr16
iret
inc
or
fmull
rcr
std
test
cmp
hlt
lds
repz
lea
std
jo
in
cmp
jo
dec
test
add
and
adcb
ds
test
adc
cmp
jo
xor
push
adc
icebp
pop
sub
icebp
insl
jo
in
mov
and
mov
mov
jl
dec
repnz
inc
mov
bound
js
push
jo
xor
push
jns
jae
push
icebp
mov
dec
fld1
push
jne
lods
jmp
cs
and
pop
push
out
mov
mov
rcrb
jg
shl
sbb
outsb
mov
orl
jo
mov
mov
jo
mov
dec
lahf
lock
dec
data16
xchg
js
or
movsb
jo
cmp
mov
jo
std
cmpsl
push
ret
cli
jo
push
jecxz
jo
addr16
or
adc
mov
cmp
popf
adc
in
push
jo
pushf
je
in
fmull
pavgb
iret
pop
jge
roll
xorb
push
xorl
and
jp
fs
jns
jo
call
lods
lds
inc
mov
cmp
push
push
jecxz
push
push
or
sbb
mov
ret
sbb
push
inc
or
jo
imull
leave
fadd
push
lods
test
mov
mov
pop
ret
in
push
xorl
fs
arpl
jne
jb
inc
jo
leave
imul
sarb
adc
mov
pop
stos
add
test
movsb
push
aas
sbb
jle
mov
loope
or
mov
jo
cmp
rcrl
popa
jo
add
lock
orl
jo
hlt
dec
push
icebp
push
jo
leave
jecxz
sub
inc
ret
test
mov
aas
out
mov
adc
jns
test
adc
pop
int3
xchg
jo,pt
icebp
dec
cwtl
data16
adc
jo
pop
loopne
pushf
lds
dec
mov
jo
mov
sub
clc
add
push
mov
dec
hlt
sub
xchg
mov
repnz
sahf
sub
pop
inc
hlt
cmpsl
mov
xor
lret
jo
dec
or
jge
push
push
sub
in
popf
addb
jo
sub
jno
jo
jp
or
fwait
loop
dec
icebp
add
lds
insl
jo
test
notb
xor
jo
popa
pop
cmpsb
mov
jo
pop
popf
cld
inc
or
jo
sbb
or
jo
or
loop
or
test
imulb
push
mov
movsl
aaa
adc
je
rcrl
add
mov
mov
rclb
sbb
fsts
or
and
movsb
push
arpl
push
rclb
add
sti
sbb
jle
adc
jle
mov
xor
hlt
inc
sbb
jae
es
mov
jne
sub
jle
arpl
dec
ficoml
add
add
sbb
neg
mov
pop
jle
jne
bound
imul
shll
add
imul
mov
xor
leave
data16
jno
mov
push
jb
jl
ss
lock
cmp
jo
divl
or
dec
jno
xor
aad
mov
jo
adc
inc
sub
cli
pop
cwtl
push
icebp
in
aam
lods
jo
movsb
gs
shr
xor
out
dec
imul
dec
out
xorl
xchg
fwait
aas
jo
inc
fldt
xchg
lahf
push
fadds
or
pop
ljmp
shrl
std
jo
mov
pop
mov
mov
cwtl
pop
adc
pop
and
insb
leave
adc
push
out
fwait
jg
in
jo
fistps
xor
jo
mov
shr
jo
rolb
jl
lock
inc
xor
push
ja
shrd
jb
jne
mov
loope
xchg
ret
enter
push
mov
mov
jo
or
icebp
jo
addr16
lds
pop
cmpb
mov
ds
data16
sarl
das
adc
push
sbb
mov
or
sub
sbbl
shlb
fldl
je
rcl
sahf
jo
mov
cmp
pop
leave
dec
sbb
dec
push
rcr
jp
adc
pop
dec
sub
sbb
push
sub
into
cmpsb
push
inc
in
in
sbb
inc
jo
int
out
dec
test
enter
lds
sub
mov
xchg
dec
jne
jbe
and
iret
scas
mov
sbb
cld
jo
sbb
imul
pop
mov
xchg
pop
js
jnp
inc
jo
in
dec
mov
paddw
adcl
and
jae
jo
lea
fnstcw
loope
fsubs
sbb
pop
mov
jne
fldl
imul
test
jno
popa
add
mov
cli
push
sub
fadd
mov
sbb
in
xchg
rorb
shll
popa
xchg
mov
inc
scas
sub
jmp
jo
ret
mov
push
push
jle
mov
pop
fsubl
sub
mov
push
and
jb,pt
push
movsb
mov
add
add
hlt
push
leave
lock
jp
cmpsl
jne
cmp
push
xchg
push
jge
mov
insb
xor
dec
xchg
mov
xchg
int3
jo
inc
sub
push
das
shll
bound
cmp
rolb
out
negb
jo
jb
mov
bound
push
sub
jo
mov
roll
ret
adc
dec
xchg
cmp
mov
xor
sub
pop
cmpsb
jo
jno
aaa
fsubrl
push
pusha
jns
mov
test
js
bswap
shl
cmp
xor
cmpsb
nop
lret
push
cmc
hlt
js
imul
jbe
mov
push
jp
xor
or
iret
and
pop
push
pop
insb
bound
mov
xchg
jmp
jle
shlb
sbb
out
fs
loope
fwait
add
xchg
cmp
xor
dec
push
jmp
xor
cmpsb
sub
pop
fs
or
rolb
and
gs
and
and
mov
stos
or
mov
sub
lahf
jmp
repz
mov
mov
cmp
jo
push
and
das
lcall
cli
push
aad
mov
add
stos
dec
je
shll
sub
pushw
jo
and
cs
and
jo
ret
outsl
lcall
mov
out
mov
jl
inc
xor
lret
test
jae
jo
sbb
in
inc
jo
jae
cmp
add
mov
test
pop
jo
adc
out
xchg
cmp
mov
xchg
inc
std
cmp
jo
call
cwtl
ret
jo
in
push
jo
stc
cmp
test
mov
xor
push
push
test
lock
add
dec
sbb
mull
inc
fs
ja
imul
push
int3
cmp
in
xchg
and
push
stc
in
stos
push
lret
lds
lea
aam
or
jo
and
mov
fldl
xor
or
jo
add
mov
jmp
dec
daa
jo
stc
imul
push
xchg
add
xlat
jo
mov
sahf
ret
and
jo
popf
jbe
daa
cld
xor
xor
jecxz
pop
cmp
mov
or
out
lods
jo
mov
movsl
inc
inc
jo
push
in
mov
mov
mov
inc
dec
test
je
cwtl
mov
mov
bound
scas
lock
leave
in
inc
js
pop
inc
sbb
enter
pop
jo
xlat
repz
int
or
jno
mov
inc
sub
cli
psubusw
aad
mov
and
call
ficoml
xchg
dec
ja
repnz
stc
mov
les
clc
fwait
jo
mov
test
mov
mov
in
stc
scas
aaa
jo
push
mov
or
je
xchg
dec
cs
and
insl
shll
pop
movsl
mov
dec
xlat
jo
jno
cld
jg
jo
leave
mov
ds
flds
subl
movsb
jo
in
popf
incl
lcall
orb
sbbb
jo
or
sarl
addr16
mov
push
xorl
and
jo
vunpcklpd
lods
adc
mov
je
dec
scas
sbb
adc
push
insb
cli
rcll
int
adc
loope
pusha
sbb
jo
pushf
inc
popf
xor
shl
xor
mov
xor
pushf
rcrl
inc
repnz
movsb
mov
xorl
scas
jg
dec
xchg
popa
jle
jo
push
movsl
pushl
lahf
add
push
aad
jns
mov
imul
jbe
dec
std
lods
aad
leave
dec
inc
jo
int3
mov
jno
stos
pop
jo
ljmp
test
int
cmpb
jo
popl
mov
loopne
jo
push
pop
push
jecxz
mov
lods
mov
sub
lahf
push
mov
rol
aas
in
xor
imulb
xchg
lea
leave
xor
dec
inc
hlt
mov
jo
aam
fsubrs
das
lds
pop
xchg
push
popa
addl
jo
xchg
in
mov
sbb
aam
jp
or
inc
mov
jo
mov
sbb
xor
jo
pop
and
sbb
sub
add
outsl
in
or
cmp
int
xchg
pcmpgtd
jge
aad
fs
jnp
inc
int
push
add
jo
fsubrp
test
cmp
cmp
or
subb
aas
and
push
push
sbb
scas
mov
out
add
cmp
ds
xor
hlt
jno
jo
imul
in
int
sub
sti
lds
jae
and
scas
fwait
movsb
sub
xor
dec
shlb
sbb
sar
inc
inc
bound
push
jl
and
add
pop
dec
orl
test
aas
push
addr16
mov
ljmp
jbe
cwtl
dec
xchg
idivb
add
xchg
bound
lods
out
add
mov
add
jo
int
and
or
sub
pop
enter
sub
cmp
aaa
movsb
sbb
mov
cmpsb
ljmp
jnp
jo
cltd
mov
xchg
test
jp
jo
in
cli
stc
pop
rcrl
jo
sbb
mov
jo
das
loopne
pop
lahf
iret
or
leave
mov
lods
sarb
or
adc
jo
movsl
outsb
mov
les
into
js
fwait
jmp
or
test
jo
xchg
adc
mov
jo
loope,pt
add
xchg
inc
or
lods
dec
push
fists
jmp
test
in
inc
inc
cmp
xchg
inc
pop
add
sbb
jo
mov
inc
out
xor
jns
or
cmc
add
sub
out
push
cmpsl
adc
mov
jmp
into
jns
jl
fsubr
loope
cmpb
inc
dec
jo
movsl
cltd
inc
mov
std
pop
inc
mov
mov
rol
outsl
mov
out
mov
push
in
movsl
cmp
pshufw
ja
ret
shlb
je
nop
aad
ds
pop
jo
ret
push
roll
jo
sti
xchg
push
pop
pcmpgtb
jae
add
es
test
xor
jo
lock
lds
jne
jo
mov
mov
dec
xchg
jo
inc
push
lods
imul
jo
shll
cli
clc
xchg
ret
rorb
pop
push
jns
fcoms
out
hlt
cld
xor
lret
nop
pop
sub
cmp
pop
adc
push
rclb
inc
sub
fidivs
nop
mov
jg
repz
mov
shlb
mov
jae
lods
imul
pminsw
int
les
shrb
add
lds
hlt
cmp
adc
dec
cmp
imul
jo
cmovp
lds
sar
aaa
mov
cmpb
pop
xor
jmp
jne
leavew
mov
nop
nop
dec
mov
xchg
mov
test
push
movsb
inc
push
xchg
xor
add
pmuludq
mov
mov
push
jp
nop
idivl
jbe
enter
sub
push
fiadds
test
or
mov
add
add
dec
xor
ficoml
jle
jp
leave
fs
sarb
add
aad
insb
pop
pushf
xorl
popa
jns
xchg
jp
jo
push
mov
jo
and
in
jp
jo
inc
cmp
addr16
jo
mov
cli
push
sub
or
mov
sbb
cmp
jge
movsb
jo
or
xchg
push
jp
in
push
vmovlps
shufps
or
jg
push
shl
insb
outsl
mov
nop
push
bsr
insl
jbe
aam
sub
in
jp
mov
sub
stos
jge
jb
add
adc
sbb
sub
jo
enter
lock
or
adc
out
inc
jo
cmp
and
adcl
ljmp
sbbb
das
leave
jl
insb
xchg
mov
sti
mov
push
add
pop
ret
inc
arpl
jnp
pop
cmp
scas
push
mov
and
in
mov
test
stos
into
ss
jns
cmp
push
and
rcrl
pop
xchg
loope
jb
jo
and
and
inc
js
lcall
xorb
mov
dec
xchg
mov
fdivrl
jns
ret
jo
jl
lahf
or
jg
leave
out
xchg
jo
pusha
pop
sbb
test
cmp
fisttpl
inc
and
adc
sbb
mov
jmp
shrl
xchg
in
cld
cmp
nop
aaa
stos
ja
fwait
cmp
out
mov
popa
add
rep
xor
insl
xchg
ja
cmp
test
int
cs
pushf
adc
jo
jne
out
mov
inc
lods
fidivs
popf
jo
fistps
shrb
ret
nop
setbe
mov
and
daa
arpl
add
popf
fmuls
lret
sbb
popa
or
pop
jl
or
nop
xlat
ret
pop
test
divb
fwait
sub
xchg
push
or
jecxz
inc
pop
popl
jo
mov
loope
nop
in
gs
lret
ja
or
push
aad
inc
sub
dec
jo
lret
xor
stc
leave
mov
andb
cmp
dec
shlb
jo
xor
jo
fstl
fdivrl
mov
sbb
and
stos
push
insb
push
lods
jge
out
ret
ds
shlb
aad
mov
sbbb
jp
popa
push
sub
xchg
divb
or
adc
call
push
rol
lret
push
push
nop
inc
idivl
pusha
mov
jo
cli
nop
pop
outsl
leave
and
jo
fbstp
mov
xor
or
mov
mov
es
bnd
dec
sub
add
je
inc
rcll
out
and
xchg
adc
dec
push
or
add
cmpsb
add
jo
xchg
rclb
inc
add
jnp
leave
cmp
xor
sbb
dec
jno
and
dec
lcall
stos
pushl
inc
inc
lods
mov
jo
outsl
stos
or
int
jp
sub
cld
pop
cltd
jo
mov
ret
jae
jmp
jg
mov
xor
jo
outsb
mov
mov
mov
mov
push
cmc
std
enter
dec
mov
arpl
sbb
fldl
int3
or
push
push
lea
sbb
roll
in
scas
add
fld
jmp
xchg
loop
jae
inc
sahf
adcb
adc
jo
xor
jl
fidivl
in
mov
mov
jo
push
shll
loope
jo
test
sbb
xor
mov
cmp
rcll
or
jmp
cli
jge
jae
nop
dec
xchg
mov
mov
xchg
fdivl
adc
mov
push
inc
cmp
cmpsl
jo
into
xor
leave
mov
ja
add
test
jo
insb
mov
jns
test
xcrypt-ctr
cmpsl
fists
jl
loop
add
movsb
sub
sbb
xchg
jo
shrl
ror
pop
sbb
mov
idivb
inc
jl
imul
inc
jo
inc
pcmpeqd
jl
ret
cmp
inc
loop
subb
repnz
jb
scas
dec
pushf
andb
lcall
mov
pop
sub
fldl
jo
aam
inc
aad
aas
mov
inc
inc
test
test
leave
movsl
nop
hlt
bound
mov
sarl
pop
xchg
insl
inc
pop
cltd
mov
push
or
push
in
add
add
push
mov
data16
cld
mov
pop
test
lahf
sbb
pop
bound
inc
push
clc
lods
sub
push
imul
jo
xchg
jg
rolb
jo
dec
roll
call
jbe
cmp
negl
xchg
jo
orb
jo
and
jo
rorl
mov
jo
and
or
shll
sbb
and
inc
in
je
std
xchg
fcmovnb
nop
stos
mov
jns
sub
mov
je
or
mov
push
js
mov
insb
lock
jg
jo
fstpl
mov
dec
fwait
gs
jo
xchg
sbb
lret
ret
js
add
pop
rcrl
xlat
lret
or
or
mov
es
and
xor
sub
adc
xor
int
ret
sub
movsl
aad
leave
adc
frstor
movsb
lds
popf
mov
out
clc
sbb
incb
je
in
sub
test
fsubrl
in
jo
negl
mov
jb
int3
ret
divb
insb
bound
sub
jmp
dec
mov
lret
orb
test
jo
sub
jb
jo
gs
cmpsb
add
xor
into
jmp
xchg
xor
adc
rol
sub
and
adc
push
aad
stos
sbb
add
cld
cmc
aam
jo
aas
sbb
test
fmulp
js
mov
jo
fistpl
jns
jo
jae
pop
push
mov
adc
pushf
xor
loopne
ret
test
jecxz
loope
fsubrs
jge
sbb
adc
je
sbbb
jo
cmp
insb
loope
jae
jo
jle
ret
pop
roll
jno
mov
shr
mov
loope
adc
sub
icebp
mov
bound
jo
pusha
pop
mov
fs
lret
jo
cmpsl
shrl
cmc
pop
add
mov
mov
and
es
jo
cmp
int
jo
das
stos
dec
cmp
dec
sbb
leave
mov
dec
cs
or
inc
jl
pop
jo
sahf
out
sti
shll
jo
sub
adcl
mov
cs
push
xchg
inc
fisubrs
imul
and
std
pusha
loope
lahf
or
sub
clc
adc
jge
cmp
fs
sub
jo
cltd
pop
ror
je
jo
jmp
ret
loop
mov
jno
jo
pushf
sbb
mov
add
int
dec
adc
add
mov
jo
mov
xor
and
inc
icebp
shlb
subb
sarb
lret
ret
xchg
out
inc
inc
lds
xor
lea
pop
pusha
mov
leave
lret
mov
xor
jo
fs
enter
clc
lods
repz
cmp
mov
sub
push
pushf
and
jo
xor
leave
cwtl
test
adc
push
je
sub
jo
pop
push
leave
clc
mov
jo
fdivrp
sub
inc
dec
dec
pop
test
cmc
jne
xor
in
adc
sub
add
jo,pn
rcr
iret
and
cmpb
lds
bound
rorb
ficoml
mov
mov
inc
sub
cmp
jo
fldt
cmp
nop
cli
adc
roll
lahf
dec
jo
add
repnz
mov
ljmp
pop
push
jmp
packuswb
das
popl
daa
pop
sub
stos
push
inc
push
mov
gs
push
push
ret
xchg
xor
lds
push
jno
pop
jo
xchg
dec
icebp
lods
sbb
lea
mov
data16
fistpll
inc
push
adc
and
ret
sbb
adc
lea
hlt
push
lock
js
push
mov
scas
imull
mov
xchg
in
inc
divb
and
jo
sub
mov
js
test
hlt
cli
std
mov
data16
mov
nop
xor
movsb
cmp
jb
ret
outsl
jo
sar
adc
jge
push
js
popa
fs
ss
and
mov
cli
testl
xchg
orl
push
xchg
jle
adc
mov
aas
pusha
adc
jbe
lods
cmp
sbb
pop
and
mov
ds
jo
mov
sub
in
xor
pop
pusha
sbb
add
jg
adc
mov
inc
in
jo
xchg
add
jo
leave
outsl
lock
jl
aas
adc
mov
add
mov
insl
jb
pop
hlt
cmpsb
mov
lcall
add
pop
enter
iret
push
lcall
xor
jne
add
js
mov
pop
jae
jo
mov
call
nop
jbe
push
xor
in
xor
test
jns
hlt
xor
jle
jo
int3
jp
cmc
cmp
push
jo
lret
lods
in
test
data16
and
adc
je
jo
push
testb
int
fldenv
jo
fs
pushf
out
data16
punpckhbw
popa
jecxz
adc
imul
add
lea
imul
ljmp
push
sub
imul
fs
in
pop
lahf
jo
jp
add
sahf
ljmp
mov
jns,pn
loop
loope
rcrl
jo
fld
lcall
inc
fsave
add
sbb
pop
cmc
inc
jno
mov
jle
sub
bound
pop
sub
push
cs
sub
mov
repnz
or
nop
sbb
fistps
or
test
jo
sarb
jp
fcmovb
sub
pushf
pop
out
mov
pop
jo
loopne
inc
cmpsl
pop
popf
divl
adc
daa
fdivl
in
icebp
pop
out
jp
inc
ret
nop
adc
cmp
lahf
pop
or
jl
xchg
push
sbb
add
or
pop
push
push
stos
lds
nop
pop
xchg
dec
mov
lahf
ja
mov
add
dec
mov
or
and
push
mov
mov
scas
imul
mov
ja
lcall
pop
shl
js
das
jo
shlb
pop
jo
mov
repnz
les
lds
add
inc
jnp
jns
push
ret
jge
data16
hlt
shrl
mov
ja
sahf
sub
gs
pop
mov
jmp
dec
ret
fidivrl
jo
inc
stos
jge
jo
add
mov
inc
loop
orb
jo
xchg
or
pop
sub
cli
adcb
sti
mov
sahf
and
add
repz
push
or
adc
fs
ret
in
sbb
xchg
shlb
in
mov
jo
adc
das
push
jo
and
ret
fnsave
jl
out
mov
push
xor
mov
loop
mov
jae
sti
cmc
nop
cli
xchg
jnp
in
ja
dec
ds
imul
fcoml
jmp
and
out
packsswb
add
nop
pop
xchg
fnstcw
pop
nop
jne
adc
xchg
dec
mov
and
adc
jbe
mov
or
xor
push
cwtl
cmp
mov
in
push
gs
es
imul
movb
inc
push
inc
jae
fwait
nop
cmp
xchg
adc
jnp
and
paddw
cmp
insl
jle
pop
sub
or
test
add
sbb
add
jo
scas
imul
push
imul
shll
and
mov
jo
inc
and
inc
lds
nop
test
jns
loope
add
aad
arpl
mov
hlt
jo
sub
sbb
scas
xchg
xor
jnp
lds
nop
push
lcall
pop
dec
scas
aas
addr16
inc
jo
cmp
sbb
inc
push
fcomps
jo
mov
faddl
mov
mov
subl
adc
jo
mov
dec
xchg
clc
and
pop
inc
adc
jp
cmp
mov
les
dec
mov
outsl
cs
das
clc
jo
fadds
push
jo
lds
out
data16
pop
jo
testl
jo
lret
rolb
int
push
ret
push
icebp
push
jl
cmc
inc
nop
pop
jo
lds
rol
xor
jo
xor
dec
mov
xchg
ret
xor
xor
xchg
pop
andl
inc
fs
jo
dec
inc
inc
dec
mov
bound
push
push
mov
bswap
movsb
incl
pop
gs
cmpsl
jo
push
cmp
jle
jo
test
xor
dec
in
jo
pushf
popa
movsl
pusha
in
aad
jo
inc
nop
popf
outsb
notb
jl
out
inc
pusha
adc
cmc
jb
jo
mov
and
imul
divb
add
aam
jo
sub
rclb
sub
push
popf
sub
imul
sub
jo
mov
push
push
out
repz
cmp
fidivl
push
adc
mov
dec
lods
push
scas
xchg
fs
aas
jo
in
ljmp
jo
dec
inc
jne
jb
daa
jo
add
es
push
cmpxchg
fdivrs
les
add
pop
dec
ret
add
jmp
dec
ret
imul
jo
es
mov
dec
jns
add
in
xchg
jge
jo
fnstcw
or
dec
cwtl
xlat
insl
add
and
outsl
test
inc
jo
loop
fstl
adc
ljmp
push
loopne
push
loope
pushf
add
jp
arpl
xchg
or
and
mov
jge
jo
into
dec
movsb
les
jbe
dec
ud0
jo
sti
cld
lds
push
sahf
push
rcrl
lods
addb
mov
in
sahf
jl
and
jbe
loope
jecxz
cmp
push
cmc
nop
sub
sub
es
inc
mov
sub
or
int3
adc
cmp
jo
out
test
and
sbbb
push
sub
test
jb
inc
xchg
cmpsl
push
fistps
push
mov
jno
jge
jo
inc
mov
lds
sahf
lret
mov
imul
pusha
jl
and
scas
pop
pop
push
int
inc
xchg
push
pop
mov
push
in
xor
pop
negl
or
in
push
lea
aaa
inc
popa
push
shrb
jl
imul
jo
lds
idivl
fs
push
clc
mov
jo
mov
iret
data16
jae
fcompl
push
mov
repnz
mov
xchg
je
dec
nop
gs
add
pop
cwtl
ret
cmpsb
cmp
jo
daa
mov
mov
jo
lods
mov
jg
loope
loop
shlb
sarb
inc
pop
jmp
notl
jo
fs
jmp
or
jo
icebp
inc
roll
fbstp
shr
pop
aad
and
ret
ljmp
lds
lock
jb
repz
out
pop
mov
subb
push
mov
iret
fsincos
loopne
jbe
bound
gs
cmpsb
rcrl
cs
loope
stos
inc
lods
dec
and
jo
xchg
jl
push
and
jns
iret
sbb
or
xchg
into
jo
movsb
hlt
jmp
jo
push
sbbl
pop
out
and
sbbb
jo
in
mov
andl
jo
mov
xor
les
mov
jo
sbb
ljmp
je
cmp
or
push
push
mov
inc
jo
cmp
fs
loope
push
aaa
jno
mov
shll
mov
adc
push
cld
loope
stos
mov
jmp
add
sub
jb
jo
les
mov
bound
cltd
clc
leave
hlt
test
addr16
inc
frstor
mov
aas
out
paddq
idivb
jo
add
push
mov
pop
lret
mov
testl
into
jno
adc
in
inc
call
add
leave
mov
or
jg
xor
jo
test
outsb
or
test
mov
mov
jo
mov
xor
jo
bound
shll
ss
jo
xchg
leave
push
push
jl
dec
jo
test
cmp
inc
sub
xor
push
push
pop
fs
jo
dec
xchg
divb
add
push
sbb
mov
lods
cmpsl
jo
inc
aaa
mov
xchg
push
lret
dec
and
hlt
and
jo
mul
sti
mov
mov
jp
xor
iret
sub
es
dec
loop
push
movsl
icebp
mov
add
and
and
pop
hlt
jb
lock
adc
test
xor
mov
inc
shlb
loope
pop
push
xor
ja
mov
cmp
mov
push
or
mov
jo
xor
ret
sbb
cmpb
dec
xchg
push
adc
push
pop
inc
aas
in
leave
or
sub
into
adc
sub
and
sbb
ret
adc
jo
push
jmp
push
inc
les
testb
sub
fnstenv
ret
in
loop
jne
push
xchg
cmpsb
jmp
bound
mov
popf
pop
inc
cmpsb
out
inc
addr16
cmpsl
les
mov
add
adcl
inc
jo
test
popa
mov
adc
inc
sub
push
xor
jo
push
xor
xchg
shrl
js
in
pop
pop
ljmp
into
push
nop
add
enter
jns
jne
shr
xchg
loope
adcb
cmpsb
aam
and
fs
jo
sub
int
aad
jo
icebp
ret
sbb
jbe
jo
or
out
mov
cmc
in
xchg
mov
js
cs
mov
fildll
cli
jnp
jo
jb
dec
leave
xor
out
ret
cmp
nop
or
inc
jp
adc
lds
jmp
xchg
sbb
or
pop
dec
adc
sbb
in
loop
mov
sub
or
and
xchg
insl
sub
aas
ret
push
pop
jo
add
mov
dec
mov
push
add
cs
push
mov
sub
int3
jo
jne
add
cmp
andb
icebp
jo
insb
or
inc
jp
push
adc
fs
and
mov
and
shl
out
repz
test
sbb
mov
jo
jl
aad
add
test
cmp
fbld
xlat
push
sub
stos
sbb
and
out
sbb
and
sahf
sub
sbb
jo
mov
mov
jo
addl
mov
xor
pop
lea
dec
decl
out
xchg
adc
icebp
filds
nop
xchg
jecxz
cmp
pop
xchg
push
int
jge
jo
mov
jl
xor
push
adc
and
bound
cwtl
shrd
jno
push
cmp
lea
xchg
mov
or
shlb
loopne
ffreep
mov
jo
adc
add
xor
ret
mov
in
xor
int3
sub
mov
cmpsb
jo
xchg
bound
addl
add
ret
testb
mov
pop
mov
or
lds
xchg
xor
jo
mov
push
lret
jmp
out
ret
jns
addr16
mov
and
xchg
jo
repnz
incb
shr
inc
es
pushf
xor
cmpl
loope
icebp
jo
push
jmp
inc
push
inc
iret
int3
jo
dec
stos
addb
jnp
lods
ja
push
jne
sbb
cmpb
test
jp
add
push
dec
mov
pop
or
jae
xchg
pusha
test
jo
push
cs
mov
cli
xchg
cmpsb
mov
mov
daa
jmp
imul
dec
nop
sbb
jno
popa
mov
jb
push
lock
jle
pop
push
fs
cmpl
jl
out
loope
dec
test
pop
jnp
ret
or
inc
jle
inc
xchg
push
loope
stc
push
pop
push
inc
subb
mov
nop
push
std
or
push
mov
cmpsb
xchg
dec
cld
hlt
divb
ret
lds
mov
jnp
jo
sub
cmpsb
imul
faddl
fcoms
mov
and
leave
jo
subl
and
in
push
int
sbb
repz
sub
fcomip
and
out
jo
mov
mov
leave
nop
pop
jecxz
mov
push
inc
mov
out
mov
adc
xchg
push
ljmp
push
lock
int3
rol
pop
dec
mov
jo
push
dec
sub
fildl
jo
sub
inc
fisttps
xor
jo
push
leave
cmc
mov
mov
out
hlt
lcall
jo
test
and
lods
test
xor
les
jb
sbb
subb
push
xlat
adc
cmp
mov
pop
cmpsb
sub
popf
sbb
sti
es
jae
loope
call
or
adc
push
cli
cmpsl
sub
add
dec
push
and
dec
lea
clc
or
adc
imul
and
jb
sbb
jno
jo
inc
in
lods
jne
adc
jmp
ret
faddl
jb
jle
push
clc
xchg
and
xchg
jno
mov
ja
push
icebp
in
shl
jb
ljmp
or
es
jno
add
cmp
mov
pusha
call
push
xchg
lahf
lods
neg
jo
loopne
dec
incl
jo
addl
jo
mov
cmpsb
push
test
stos
arpl
jo
push
cmpl
imul
scas
jne
mov
or
adc
mov
sbb
dec
addr16
xor
mov
fiaddl
inc
xchg
sub
imul
sub
test
stos
pop
sbb
lahf
push
jp
push
cli
jo
push
xor
add
xchg
sub
repz
shl
pop
push
jo
inc
mov
push
lds
jno
lea
js
mov
imull
popf
pop
xor
jne
es
les
sub
cmp
fs
push
out
xchg
out
hlt
or
nop
js
and
cmp
push
mov
mov
sar
jle
lods
icebp
xor
aaa
jo
aas
pushf
inc
das
bnd
mov
pop
jo
inc
mov
das
sub
cmp
dec
xor
loop
fnsave
push
jge
or
cmp
jmp
sti
mov
scas
sub
xchg
std
mov
xchg
push
pop
leave
test
fidivs
or
imul
insb
cmp
aad
shrl
jo
and
mov
xchg
je
xlat
ret
hlt
and
sub
je
push
shll
pop
out
in
fnstcw
cmc
or
mov
inc
cs
sub
loop
jnp
lcall
cmpb
mov
sub
cmp
in
lds
loopne
out
adc
mov
lods
xor
lcall
adc
adc
adc
ret
daa
lds
jno
fiadds
lods
jo
lea
test
xchg
jp
jo
adc
js
jl
xchg
push
jo
push
jecxz
outsl
leave
fdivrl
mov
xchg
lret
jo
sbb
stos
sub
inc
jo
fsubr
jbe
rcll
icebp
jae
dec
and
ret
stos
cs
adc
lds
jecxz
jo
scas
jne
sbb
xlat
mov
or
push
dec
mov
xor
mov
out
imul
les
loope
xorl
jo
sbb
fld
inc
in
lock
orb
adc
inc
jne
mov
jo
imul
pushf
mov
gs
sbb
lods
cld
cmpsb
imulb
push
out
jo
es
and
xchg
ret
jae
and
imul
cwtl
adc
mov
inc
or
test
lret
sahf
jne
mov
cwtl
data16
popa
sbb
std
sbb
sub
lret
stc
addb
sub
jo
int
movsl
inc
fwait
pop
cltd
mov
jo
stos
and
lds
aaa
xchg
cmp
lea
push
out
jo
fidivl
mov
rorl
aad
nop
inc
xor
out
out
xchg
das
jb
jns
shll
jo
dec
rcrl
test
add
sbbl
push
jo
xchg
add
cmc
lahf
cmp
in
cmp
es
sub
jo
mov
pushf
jbe
dec
mov
data16
popf
mov
mov
ret
les
icebp
addl
push
xor
mov
xor
or
sbb
les
loope
mov
and
fidivs
insb
in
iret
js
mov
jo
pop
int
mov
sbb
inc
push
xorl
ds
jmp
call
push
lahf
int
bound
cmpsl
out
jg
push
enter
xlat
aam
es
cmp
push
jbe
cmpsb
jo
daa
data16
mov
xchg
and
jl
or
leave
dec
das
jo
insb
jae
mov
int
inc
outsl
scas
ret
add
ret
pop
mov
iret
or
lret
mov
mul
add
push
fisttps
andl
les
leave
cmp
push
xchg
cld
add
das
test
cltd
mov
sarl
inc
mov
push
roll
sbb
jo
push
jb
mov
fdivs
pop
mov
fisubl
shll
mov
mov
xchg
lea
jle
adc
jecxz
sbb
js
in
insb
jo
lds
lcall
jo
pop
mov
cs
and
popf
int
push
leave
lods
mov
xchg
jg
jb
outsb
icebp
imul
aas
lret
mov
push
leave
and
rcrl
sti
sbb
add
pop
int3
sub
int
jo
decb
leave
jo
and
adc
xchg
loope
push
jbe
mov
ja
fs
test
inc
push
lds
dec
push
sahf
jo
mov
std
mov
mov
aas
mov
imul
jecxz
and
pop
adc
lahf
stc
das
xchg
lret
mov
mov
fwait
ds
xchg
jno
shlb
or
mov
mov
in
mov
inc
jo
les
iret
and
lea
and
test
and
or
fwait
cmp
mov
xor
jo
mov
fdivs
xchg
out
add
lret
jp
jns
pop
mov
inc
lahf
cvtps2pd
sbb
inc
jae
icebp
cmpsl
fdivrs
dec
sub
or
repz
mov
xor
push
daa
add
push
push
movsl
jo
insl
xchg
in
test
mov
pop
push
sub
fs
push
icebp
jo
movsl
fistl
andl
or
roll
dec
inc
into
sbb
subl
xchg
stc
scas
and
cmp
pushf
or
enter
jo
in
jbe
pop
das
push
stos
ret
mov
adc
arpl
pop
mov
xchg
jo
mov
negb
subl
adc
mov
jo
inc
fs
divl
stos
jo
push
ret
lcall
push
adc
int
dec
push
lea
cmp
rol
outsb
psadbw
lahf
inc
jb
aad
popa
jo
inc
adc
push
push
mov
jo
xor
enter
jp
jo
pop
out
push
bound
and
lds
and
out
or
and
aaa
mov
push
mov
rcrb
fildl
call
and
mov
or
jo
xchg
jg
jl
insb
mov
les
sub
shl
pop
push
pop
jbe
xchg
pop
notb
dec
inc
and
in
pop
test
ss
jl
stos
xor
pop
push
sbb
cmp
std
mov
lahf
xor
loopne
es
jo
lret
adc
jo
popa
mov
jo
jecxz
in
pop
dec
xchg
sbb
mov
shll
jo
xor
pop
adc
sarl
cld
cltd
push
sub
rcll
es
aad
sbbb
leave
xor
mov
sub
aad
stc
inc
mov
aam
jnp
repz
movsl
les
cmp
xchg
popf
nop
jecxz
shll
push
shll
or
rol
cmpsl
in
cltd
addb
cmp
cmpl
xchg
mov
jns
add
mov
jmp
ret
push
jo
fwait
movsb
pop
mov
dec
jo
mov
outsb
leave
jo
inc
mov
adc
and
mov
icebp
push
aad
jge
outsb
jbe
xchg
jo
lds
in
pop
mov
dec
jp
shlb
sbb
in
inc
stc
xchg
jbe
adc
insb
inc
rol
iret
daa
mov
das
xchg
lret
push
inc
test
jle
xor
nop
mov
int3
test
fidivrl
mov
sarl
xlat
sbb
jbe
ja
push
movsb
mov
outsb
std
les
inc
xor
lahf
jo
cmp
or
aad
loope
xchg
fidivrs
jo
fs
mov
lret
adc
push
addb
xor
lds
cmp
xlat
in
insb
sbb
sub
sub
outsb
testb
lahf
pop
jo
rcl
inc
fcomps
jl
aad
nop
rorb
jmp
ja
shrl
sub
popa
in
in
push
mov
xchg
sbbb
jo,pn
roll
test
jae
jo
xor
push
push
xor
jo
jg
cltd
pop
in
jb
jo
xor
das
add
jbe
adc
imul
xchg
pusha
inc
orb
lods
stos
pop
scas
jmp
and
jne
sub
add
scas
pop
xchg
jo
shll
mov
pop
pop
mov
mov
fs
lea
jb
das
loop
sbb
aad
xor
rcrl
iret
fcoml
sbb
lock
in
push
cld
xlat
jmp
and
jo
cmp
ret
jo
cltd
call
adc
into
fnstenv
pop
adc
fyl2x
scas
test
jnp
sbb
sub
mov
cmpsl
sub
lock
sbbb
cmp
hlt
mov
daa
aam
rcll
xor
shlb
ret
jmp
inc
push
xchg
rcrl
dec
and
and
sbb
aam
cmp
leave
mov
xlat
iret
mov
bound
mov
xor
lcall
test
mov
shll
repz
fistl
mov
hlt
and
cmp
cmp
arpl
fwait
jle
out
aas
add
das
sti
stos
imul
arpl
aad
inc
jo
pop
fsts
jo
push
pop
rcrb
aam
sbb
jge
fisttpl
push
jo
test
xor
cmpb
ret
adc
inc
lods
pop
test
mov
lds
sahf
push
push
mov
popa
ret
push
jo
pop
and
fnsave
sti
jg
fdivp
int
push
sahf
hlt
xor
mov
push
ror
xor
add
xchg
jns
jo
sahf
mov
pop
jo
dec
lcall
inc
and
leave
push
jne
repnz
add
pop
push
jo
addr16
mov
jo
pushf
arpl
jmp
or
jo
jecxz
fisubrl
gs
aam
popa
inc
int
js
fmuls
loop
cmp
push
dec
push
fistpll
jo
ror
das
fcoms
mov
mov
shrb
into
pop
lret
push
sbb
aad
cmc
and
jo
iret
dec
jecxz
ja
add
sbb
jo
mov
cwtl
sbb
cmpsl
test
xorl
stos
and
adc
adc
arpl
xor
and
or
mov
daa
jo
rcll
jle
dec
jo
xchg
jp
fdivrp
movsl
jo
jecxz
repnz
stos
jo
insl
lods
add
jg
in
sub
movsl
inc
les
daa
lds
xchg
and
push
add
cmpsl
cld
insb
add
mov
mov
xorb
fldenv
push
jo
mov
jp
mov
movsl
jne
xor
jo
lods
into
mov
jo
push
test
stos
jg
jo
lds
std
sbb
mov
jo
push
sarl
jbe
jo
orl
shl
jo
nop
in
and
push
sub
rorb
cmpsl
add
mov
sub
orb
sbb
jmp
and
or
push
jo
int
jle
ljmp
out
fdivp
inc
lds
dec
push
insl
or
mov
xorb
cmpl
jge
cmpsb
jnp
jae
leave
cmp
std
jo,pn
add
or
jo
ret
repz
mov
test
adc
xchg
xor
call
mov
jo
jmp
ret
mov
pop
jo
dec
cmpsb
xchg
repnz
inc
fdivl
or
inc
sti
push
cld
pop
jae
jl
mov
pop
pop
jb
jl
xchg
mov
push
xchg
lds
push
in
je
jno
jo
imul
xor
cwtl
lret
adc
add
jno
mov
popl
fildll
jbe
ds
out
divb
in
xor
push
inc
add
loope
mov
lahf
leave
loop
cmp
cmp
jo
or
idiv
es
bnd
jo
jns
pushf
mov
aad
push
inc
and
inc
lret
ret
pop
jo
ror
call
out
ret
idivb
adc
push
enter
mov
dec
mov
stc
outsl
and
push
mov
xchg
inc
test
decb
cmp
pop
push
addl
sarw
mov
mov
std
packuswb
outsb
jo
popl
add
jb
int
inc
lds
js
repnz
addr16
leave
pop
inc
jb
and
jo
jmp
sub
test
arpl
jo
shrl
xchg
inc
xorl
lds
pop
add
fnstenv
ljmp
inc
repz
sub
jl
insl
scas
mov
cmp
push
jbe
push
xor
push
add
add
jo
sub
insl
movsl
pushl
cmp
sbb
and
mov
mov
xchg
loopne
incb
or
cmp
pop
out
xchg
arpl
cli
jl
bound
test
jg
sahf
jbe
out
jo
fnstcw
fiadds
hlt
dec
popa
push
stos
mov
adc
shrb
mov
shrl
mov
or
hlt
into
sub
push
inc
xorl
shll
rcrb
sub
mul
repz
sbbb
test
mov
fwait
pop
addl
lods
pusha
adc
sbb
sub
mov
js
in
inc
rolb
jo
cmp
jmp
mov
mov
push
and
cmc
lds
dec
add
lock
insb
fdivrs
rorl
stc
or
gs
nop
aas
jmp
push
mov
enter
fsubrl
vmovmskps
jmp
xchg
pop
divb
iret
xchg
cmp
jge
push
popf
inc
jp
ss
or
jo
xchg
std
mov
insl
mov
arpl
sub
push
lret
jae
jo
push
inc
popf
das
rolb
jg
fwait
mov
mov
fldenv
iret
outsb
jmp
mov
xlat
dec
inc
dec
int
repnz
les
jo
dec
mov
lds
mov
push
sub
xor
icebp
aad
jp
sub
insb
ja
aam
jo
add
cmp
cmp
pop
cld
in
jo
cwtl
rcrb
enter
pop
cmp
leave
jo
cmpsl
movsb
les
popa
xor
add
js
pop
lods
adcl
or
xchg
subb
sub
nop
ret
xchg
fs
pusha
in
je
cmp
xchg
adc
pop
mov
pop
dec
jne
cmp
rcrl
loope
addr16
bound
lods
jo
out
std
pop
insb
shlb
sub
repz
jo
push
jae
mov
popl
mov
rcrb
jo
out
sbb
mov
xchg
lods
jge
sbb
jmp
xor
movsl
push
inc
push
insb
lods
jo
pop
and
xchg
jo
iret
xlat
fistl
adc
data16
jecxz,pt
out
shl
dec
mov
add
scas
loopne
jo
int
mov
push
pop
inc
jno
pop
jno
mov
jl
jle
jbe
xchg
jo
ss
jl
push
int
jo
mov
dec
inc
cld
xchg
aaa
xor
mov
mov
imul
push
cmp
loope
jae
and
xchg
cli
imul
mov
andb
lods
xchg
mov
mov
outsl
scas
roll
inc
lret
jae
jo
sub
mov
pop
jmp
mov
jo
dec
mov
inc
mov
jo
lret
or
lds
xor
call
jo
aad
add
out
cmp
jg
add
jo
es
lds
outsb
fstpt
leave
outsb
pop
fs
ret
jo
pop
push
enter
lret
repz
sarl
lea
leave
cmpsl
mov
negl
jo
call
int3
xor
aad
shl
jns
ss
insl
fcom
jno
jae
jo
xchg
mov
aad
mov
add
jo
cld
gs
adc
and
or
stos
das
hlt
push
push
sub
rcll
rcll
sahf
push
ss
test
xchg
loopne
cmc
jo
xchg
inc
mov
push
xchg
stos
fs
ret
sub
sti
sbb
inc
cmpsb
or
mov
inc
jo
dec
mov
xorb
or
out
jo
dec
das
or
pop
jb
push
popf
fwait
push
mov
cmp
sub
mov
ss
or
ljmp
int
test
dec
push
ss
mov
jo
sub
pop
adc
pop
ret
lret
add
dec
out
xorl
xlat
nop
inc
jno
into
sbb
jae
int
maskmovq
mull
rcrb
test
add
cmp
or
rcll
lea
bound
mov
mov
push
movsl
je
js
fs
addr16
iret
inc
or
test
ja
jle
aam
inc
jo
jae
fisubrs
or
les
pusha
xorl
outsb
rorb
jo
popa
mov
cmp
ret
inc
mov
icebp
inc
add
mov
push
int
adc
rcll
inc
xchg
iret
lods
shrl
and
jo
aaa
sbb
comiss
and
fwait
jbe
aad
in
xlat
sub
ret
mov
out
in
cltd
ret
push
pop
xchg
jo
and
and
addb
loop
push
nop
pop
pop
cmp
test
adcb
addr16
mov
aad
fwait
add
ljmp
ret
push
jo
lock
push
gs
add
jp
sbb
cmc
sub
ja
shrd
je
adc
leavew
jne
je
clc
in
pop
pinsrw
cltd
dec
imul
test
fcmovbe
ljmp
data16
sub
mov
hlt
jo
ret
mov
mov
shlb
pop
lahf
mov
or
jo
lcall
jo
test
add
xor
xchg
jge
and
jo
ret
cmp
fdivl
lds
rcrb
jle
ja
push
aad
lock
mov
pop
ret
sub
push
jo
loop
dec
mov
movsl
push
sub
fidivrl
cld
xorb
inc
lods
jo
mov
loope
jo
cli
or
cmp
in
fcmove
xor
shrl
push
loop
push
push
cmp
js
cld
sbb
sub
lock
xor
push
ss
movsb
bound
mov
int
aaa
and
fbstp
sub
jo
rorl
sti
mov
jo
push
lret
ret
xchg
jo
dec
das
cmp
loop
imul
outsb
pusha
jmp
lods
int3
push
les
mov
dec
imul
or
testb
lds
push
jle
pop
shl
cmc
fwait
repnz
loop
nop
gs
testl
mov
push
ret
jno
lods
dec
push
xchg
jge
les
sbb
or
or
insl
add
sub
stc
jl
out
fldenv
dec
leave
pop
xor
pop
into
jo
jns
cmp
mov
jb
mov
dec
cmpsb
fdivs
mov
mov
pop
pop
flds
js
push
xor
sub
mov
out
ds
icebp
cmp
xchg
jns
aam
jo
lods
outsb
dec
es
mov
and
xchg
push
add
push
xchg
mov
jo
pop
mov
mov
push
pushf
xchg
cs
pop
mov
jo
sub
int
jo
notb
xchg
push
std
loop
pop
jns
cmp
pop
nop
jo
inc
fsubl
xor
out
xor
in
xor
pusha
add
jae
roll
fdiv
push
and
ror
push
cmpsb
addr16
repnz
movsl
out
movsb
cmp
mov
jl
xchg
jns
hlt
in
cmpsb
xor
pop
pushf
adc
pop
rol
dec
mov
repnz
adc
movd
adc
xor
sub
push
mov
pop
pop
mov
sbb
cmp
daa
rcrb
fdivl
xchg
sub
push
adcb
mov
out
ljmp
and
cli
cmp
lret
movq
pop
mov
jle
aam
or
sub
jo
sbb
inc
mov
jb
push
xchg
jo
push
insl
add
inc
adc
adc
dec
jmp
jo
sub
inc
test
into
mov
add
lea
fsts
jp
sahf
pushl
push
bound
sub
mov
xor
xor
rol
pop
in
les
push
loope
cld
sub
inc
jo
popf
adc
popa
or
loop
jo
dec
cwtl
in
jns
addr16
sub
inc
inc
jo
mov
hlt
movsb
into
jo
mov
icebp
xor
sti
pop
ret
fmull
xchg
jo
lds
xlat
xor
gs
sbb
or
int3
jo
jne
shr
push
int
sub
inc
fidivs
rorl
sbb
shr
stos
and
scas
aaa
pop
dec
mov
and
inc
nop
inc
mov
or
jmp
daa
jo
cmp
fidivl
leave
sub
sub
test
ljmp
jge
jo
adc
test
rolb
rorl
js
ret
add
int
shlb
and
sub
jle
xrstors
add
pop
stos
sub
icebp
xor
jo
ret
int
fimull
adc
je
or
imul
mov
aam
ss
fcoml
fdivrs
mov
pminub
pop
jge
dec
shl
scas
push
jo
mov
arpl
push
fistpll
orb
sahf
mov
jge
ljmp
or
mov
cmp
data16
cmpsb
jo
xor
addr16
rolb
test
push
lea
jbe
sub
pop
fwait
sti
daa
popa
les
mov
jne
dec
insb
xchg
jo
outsl
or
pop
xor
mov
jp
int
add
out
cs
loope
pop
mov
les
loope
add
sbb
outsl
mov
push
rcrl
jmp
dec
shll
hlt
repnz
jo
inc
lods
mov
xor
pshufw
mov
arpl
aas
in
rorl
cmp
jo
xchg
js
sbb
mov
dec
mov
or
jo
cld
sbb
xlat
inc
jmp
push
shll
rclb
xchg
sarl
mov
pushl
mov
adc
ss
xchg
mov
sub
scas
xor
les
or
cmc
adc
push
decb
mov
jl
sarb
jo
out
lcall
fwait
lds
adc
es
jb
movsl
test
xor
xorb
popa
out
adc
loop,pn
nop
int
sub
push
repnz
jo
jno
sub
jo
rorl
mov
dec
jo
push
inc
cmpsl
out
xor
jns
imul
sub
push
dec
and
vpsllq
add
jo
test
jae
aam
in
js
out
ret
stos
add
xor
into
or
out
mov
jg
or
jnp
xorl
add
and
lods
leave
nop
cs
ja
aaa
mov
pusha
sub
fs
pop
fsubrl
xor
jns
mov
into
inc
shlb
lds
cs
pop
jo
pushf
cmp
mov
out
mov
or
rol
xor
mov
jmp
push
xor
adc
push
jg
mov
shrb
aam
test
push
stc
out
cmpsl
jo
add
mov
xor
or
scas
sbb
dec
cmp
sub
repz
sub
shlb
push
movsb
inc
jmp
cmp
mov
or
out
data16
into
xorl
popa
mov
jo
push
mov
ret
jo
mov
outsl
push
int
movsb
arpl
sbbl
inc
add
lds
out
jg
jge
mov
inc
adc
or
clc
push
rol
mov
mov
xor
xlat
ret
or
jo
sbb
jo
cwtl
jnp
js
jl
jo
xchg
je
xchg
inc
jo
ja
loopne
sahf
fincstp
enter
jbe
stc
cli
jmp
xchg
xchg
sahf
dec
data16
sbb
rorl
mov
cli
sub
xor
jo
loope
daa
std
out
jo
inc
sbb
rcll
insl
cmp
loop
mov
subb
inc
je
jae
nop
dec
mov
sub
mov
push
jo
jnp
cmpb
cld
jo
pop
jle
mov
inc
fbstp
push
adc
adc
sbb
movsl
cs
xor
jo
in
sarl
jo
mov
dec
notb
shlb
inc
pop
and
xchg
inc
je
cmp
add
jo
sbb
js
mov
push
jnp
lds
gs
aas
loop
push
inc
test
jne
inc
movsl
jl
hlt
push
sub
in
push
inc
xchg
jmp
xlat
nop
push
loop
jo
push
mov
inc
shr
and
mov
adc
sar
dec
enter
jo
ss
int3
sub
adc
cli
push
sbb
mov
jo
fldz
es
mov
bts
jo
fisubs
lds
add
in
jmp
test
and
popf
sarb
xchg
jo
shl
rcrl
mov
ret
inc
stos
jo
imul
andb
fbstp
push
insb
add
rcll
fbstp
out
dec
test
xorb
arpl
cmp
adc
lcall
int3
cmp
or
xor
icebp
loopne
popl
fnstcw
and
sub
sub
push
jne
push
adc
negl
add
in
cmp
paddw
lock
pop
mov
cmpsl
sbbl
ja
inc
lock
int3
sbbl
xor
and
jle
in
mov
xchg
lock
fistpl
addb
ja
mov
adc
sub
dec
mov
pop
imul
mulb
jo
xchg
lock
lea
iret
mov
ljmp
das
add
jo
bound
mov
mov
loop
add
jo
lahf
daa
jmp
aad
adc
cmp
outsb
xor
adc
cs
lea
shll
jo
lret
xor
xchg
or
sub
inc
pop
test
adc
divl
inc
repz
adc
mov
mulb
shll
mov
sub
das
dec
repz
mov
adc
push
jo
leave
xchg
dec
mov
jmp
jno
jo
sub
xchg
jo
shl
add
xor
jnp
push
dec
orl
xor
pop
pusha
jo
test
fiaddl
enter
gs
mov
pop
mov
les
cmp
inc
pushf
dec
xchg
add
xorb
leave
dec
ss
fsts
pop
fwait
add
mov
iret
sub
out
addl
jecxz
fmuls
movsb
pushl
dec
jne
into
sub
in
rclb
add
add
adcb
jo
pop
sub
in
or
fsubrs
movsl
add
das
popf
out
jo
leave
sub
sbb
cld
insl
les
jo
lds
xchg
xchg
and
stos
jns
imul
pop
lds
nop
cmp
jbe
stc
stos
je
shlb
pop
jo
rcll
xlat
scas
movsl
lret
jbe
fidivs
out
adc
hlt
std
repnz
push
sub
adc
in
xchg
mov
imul
push
test
pushf
testl
mov
xchg
push
xchg
jo
enter
add
imul
cld
mov
xchg
nop
sbb
lock
add
lret
arpl
jo
popa
rclb
in
cmc
sub
inc
sub
inc
into
jo
daa
adc
xor
jbe
fnstenv
xorl
cmp
jne
sub
jge
in
mov
into
mov
fs
js
ljmp
negl
xchg
jo
or
out
xor
aas
jo
scas
bnd
add
sahf
orl
sub
xor
dec
sbb
inc
inc
jo
js
ss
mov
push
jg
lret
and
hlt
dec
adcl
ljmp
dec
sub
jo
mov
lock
pop
mov
std
push
add
cmc
icebp
sbb
mov
push
inc
jmp
addr16
inc
pop
ja
cwtl
dec
ja
fwait
xor
shr
xchg
jo
mov
inc
xchg
jo
mov
lock
pushf
insl
mov
cmp
movl
xchg
outsl
jo
icebp
mov
mov
inc
in
and
jo
shl
iret
or
repz
push
nop
jbe
out
jb
stc
push
pop
lahf
arpl
cmpsb
fldcw
hlt
ret
pop
inc
cmp
cli
sub
fadds
popf
divb
je
in
jb
ss
movsb
jne
nop
cs
leave
std
jp
mov
in
sub
js
hlt
and
nop
loopne
pusha
pop
xor
xchg
push
aam
scas
jo
fidivs
mulb
mov
clc
mov
add
add
aam
jmp
data16
adc
mov
fiaddl
adc
xorb
fadd
mov
add
cmp
clc
xchg
jmp
push
adc
flds
mov
jo
mov
mov
imul
inc
loop
jo
jl
stos
out
icebp
push
adcb
sbb
xor
test
push
xchg
jo
push
cmpsb
inc
dec
add
mov
stos
pushf
mov
nop
jmp
outsl
mov
sub
adcl
fimuls
iret
insb
push
sahf
jmp
xorb
inc
jo
cmpsb
cli
add
shll
js
imul
je
mov
jo
dec
fisubrl
xchg
pop
or
les
jle
pop
aaa
lahf
jp
mov
ds
mov
push
or
lods
out
js
inc
jnp
cmpsb
inc
jmp
loop
stos
sub
mov
loopne
push
jo
pop
outsb
sub
mov
or
jg
xchg
cld
sub
imul
inc
push
movsl
jo
cmpsl
jno
lahf
insl
popa
imul
and
insb
adc
insb
daa
sub
inc
cmp
sbb
stos
xor
out
pushf
jo
rorl
xor
adc
out
inc
imul
repnz
jp
xor
sub
push
and
mov
icebp
int
subb
ret
out
sub
bswap
popa
adc
cmp
cltd
sub
or
inc
jo
daa
xlat
adc
push
push
gs
dec
addr16
in
jmp
cli
jo
mov
fldcw
push
ret
mov
scas
leave
push
inc
push
aam
mov
sub
mov
jo
or
sub
xor
out
xchg
in
lret
jmp
fiadds
cmpsl
mov
jae
inc
or
xor
jo
add
jge
push
lock
inc
icebp
fcompl
adcb
xchg
push
leave
sbb
xchg
or
or
xor
loope
sbb
adc
mov
pushf
cmp
dec
xor
jo
or
inc
fildl
jo
repz
outsb
inc
pop
jbe
pop
sbb
pushf
xor
add
out
jecxz
and
cmp
in
sarl
lock
scas
andl
mov
sub
adc
dec
dec
into
push
jo
or
or
cmp
xor
mov
jle
jo
inc
std
out
mov
test
push
stos
test
inc
arpl
sbb
movq
jmp
xchg
jp
stos
scas
inc
dec
js
add
rcl
cmp
mov
xchg
sbbb
xor
push
lret
stos
insl
jp
mov
rcl
imul
shll
or
in
inc
std
dec
jo
out
orb
push
xor
jmp
jl
inc
mov
and
popf
lods
inc
nop
stc
icebp
xchg
push
mov
jo
and
sbb
push
jo
pop
and
sbb
add
imul
pop
mov
xchg
jo
mov
lds
jbe
or
ret
loope
popf
jecxz
lret
ror
sbb
jl
pop
mov
dec
leave
mov
cmp
jo
inc
mull
pop
or
lock
lcall
lcall
je
jl
and
or
je
mov
or
jo
inc
arpl
rcr
sub
jb
dec
out
aad
jecxz
xchg
push
lahf
jg
jo
ret
jge
mov
sub
cli
push
mov
scas
stos
jg
and
jmp
mov
cwtl
push
jne
xchg
je
push
jl
xorl
outsl
out
mov
mov
inc
mov
push
ret
mov
jo
mov
std
xlat
jo
pop
xchg
xchg
jle
lods
jns
sub
inc
sbb
xor
nop
or
sbb
scas
cmp
push
shrl
aad
popw
cmp
jp
or
push
outsl
lods
roll
seto
bound
sub
push
mov
call
and
lret
push
jo
jp
mov
push
adc
std
bound
mov
mov
arpl
test
mov
add
push
xchg
inc
push
imul
pop
cld
inc
sbb
dec
inc
lock
sbb
and
lret
mov
repz
cmp
push
dec
lcall
or
jo
adc
das
or
iret
add
jo
scas
bound
shrb
mov
add
jo,pn
scas
sahf
jmp
jno
out
mov
cmc
shrl
cwtl
xorl
idivl
jnp
cmp
jg
lods
inc
dec
sahf
add
add
in
and
shll
mov
add
jo
scas
int
es
xchg
fwait
cmpsl
jo
xchg
int3
test
cld
icebp
mov
jbe
ret
jo
add
mov
leave
daa
xchg
adc
lret
pop
lds
test
xchg
out
xchg
movsb
cmp
fnsave
es
mov
nop
lret
ds
std
cmp
xor
sbb
gs
inc
dec
inc
stos
jo
aad
push
sti
fidivrs
push
dec
sbb
daa
pop
xchg
nop
dec
pop
mov
mov
fisttpl
mov
insb
or
dec
ffree
insb
cli
int
sub
push
lds
xorb
hlt
jp
jo
pop
shrb
aad
push
test
xchg
mov
jo
sub
imulb
mov
xchg
sarl
loope
pop
push
jo
lds
scas
mov
push
xor
daa
sub
jns
hlt
pop
mov
push
cld
cs
lcall
ja
out
icebp
push
lea
sbb
rorb
or
outsl
sahf
shlb
dec
shrb
mov
jmp
sub
mov
shlb
mov
or
xor
mov
mov
jmp
jo
sbb
aas
int
adc
mov
dec
inc
inc
cmp
cmpb
cld
push
add
mov
xchg
xor
jae
push
jne
inc
jo
sub
leave
cs
in
jo
push
pop
sub
nop
add
aas
out
addl
lahf
leave
cmp
andb
add
pushl
rorl
scas
in
fdivl
push
repnz
xchg
enter
xchg
jno
xor
fnstcw
adc
mov
fwait
push
push
std
add
ja
xchg
sub
xchg
loope
clc
fdiv
iret
into
lret
mov
push
fcoms
inc
aam
aad
jb
jo
out
mov
adc
mov
mov
nop
enter
dec
mov
and
jo
push
repz
xor
pop
mov
mov
mov
stos
cmpsl
jb
ds
pop
and
jl
out
dec
out
cmpsl
jbe
adc
call
and
dec
dec
gs
push
lret
shrb
cmc
es
jae
dec
inc
jo
pop
enter
sub
lret
xor
jo
lds
dec
add
jo
or
leave
es
mov
push
push
addr16
xchg
dec
hlt
addl
mov
gs
jo
fsub
jb
mov
mov
add
pop
xchg
out
adc
sbb
dec
rcrl
lcall
sbb
jne
push
bswap
rclb
add
push
prefetcht2
ss
sub
loop
and
sbb
sbb
adc
add
dec
pop
cmp
pop
repz
hlt
js
aad
aaa
rdtsc
repnz
sarb
sbbl
test
leave
dec
and
into
sbb
sbb
shll
xorb
cmp
mov
les
popa
mov
inc
sbb
movb
xchg
ja
cli
adc
rolb
mov
dec
mov
or
push
jecxz
cmp
je
jmp
jbe
jo
ret
in
sub
into
sarl
ds
jo
mov
dec
xor
lds
cmp
dec
loope
fisubl
ljmp
jo
sub
arpl
sub
inc
test
xor
js
lds
mov
shll
mov
push
test
jo
mov
leave
mov
jo
mov
dec
cmp
xchg
jo
mov
inc
sub
popf
cmp
add
add
dec
mov
out
xor
sub
dec
dec
flds
jne
repnz
or
psrlq
test
andb
mov
dec
mov
outsl
rcl
fwait
imul
jae
lds
xor
push
data16
mov
push
int3
sbb
adc
bound
jo
adc
pcmpeqw
xlat
jo
adc
ret
jo
inc
test
xor
lds
jmp
jns
xchg
xchg
jl
sbb
sub
test
push
add
jo
xor
jo,pn
cmpsb
ret
in
lds
es
aam
test
movsb
xchg
imul
movsl
mov
jmp
mov
xchg
mov
addr16
movsb
xlat
icebp
mov
cld
f2xm1
lock
mov
jge
mov
xchg
lcall
sub
xor
scas
bound
js
scas
roll
sub
cmp
sub
mov
xor
jo
and
sub
clc
jo
sbb
cli
sbb
addb
push
repnz
es
cmc
data16
mov
stc
mov
xlat
call
adc
orl
jno
lret
adc
sbb
cmp
xchg
mov
push
xchg
jo
add
scas
or
in
dec
je
jo
dec
dec
cmp
pop
jo
mov
pop
ret
adcl
pushf
cmp
pop
pop
xchg
add
sub
loope
into
shrl
push
push
in
stc
inc
cltd
int3
mov
jae
and
fidivs
movsl
sub
leave
push
mov
mov
dec
ljmp
adc
jo
out
popf
adc
mov
movsl
int3
pop
jne
add
push
jo
push
push
ret
movsb
js
pop
inc
adcb
outsb
lds
or
push
inc
enter
xchg
arpl
xchg
pop
pop
xor
adc
cmpb
mov
loopne
and
sbb
cmpb
out
jno
hlt
mov
cmp
jo
test
sbb
add
sub
je
bound
shl
mov
sbb
and
xor
mov
mov
insl
ret
imul
push
mov
jl
adc
sbb
jo
addb
jo
inc
lock
fildl
sub
jo
idivl
call
or
jmp
adc
adc
and
and
in
xor
out
adc
arpl
push
popa
jge
mov
jecxz
add
and
jmp
ljmp
or
push
sub
or
mov
cmp
xchg
test
push
jo
movsb
mov
inc
jo
mov
add
mov
or
repnz
daa
pop
push
movsb
int
pushf
mov
ret
jo
dec
xchg
jecxz
and
or
enter
inc
sbb
out
and
test
fcomps
test
pop
or
mov
adc
add
jp
pop
pusha
xchg
push
cmpl
insb
fstp
out
arpl
push
inc
mov
mov
fmulp
xlat
flds
cmpsb
push
xorl
push
inc
jo
ffreep
push
arpl
pushf
pop
sub
mov
or
out
out
rcr
xor
into
ljmp
cli
sub
imull
out
jecxz
cmp
rcl
shlb
push
jo
pop
mov
aas
jo
add
and
sub
add
dec
loop
jp
outsl
cmp
pushf
sbb
jo
push
call
std
mov
hlt
daa
repz
push
sub
stc
sbb
sub
inc
shll
jo
add
in
jo
into
pop
shrb
jne
pcmpgtd
and
cmpb
mov
pop
popf
das
mov
dec
jo
arpl
data16
mov
je
jnp
insb
inc
jecxz
dec
lock
out
outsb
xchg
js
loope
bound
jae
lahf
xor
mov
out
roll
adcb
loopne
sub
pop
outsl
sbb
jns
out
cmp
imul
icebp
test
icebp
fwait
jb
jo
out
scas
push
adc
cld
xchg
jo
das
add
int
lea
roll
jo
arpl
add
or
jo
cmp
xlat
xor
push
lock
inc
dec
negb
adc
dec
jo
inc
popw
add
push
and
ret
int
xchg
jo
cltd
pusha
rolb
rcl
fsubrs
in
lcall
xchg
imul
dec
jge
fildl
test
mov
jo
xchg
and
mov
repnz
jle
push
mov
or
jo
ficoms
cmp
std
divl
push
xchg
jle
push
adc
das
and
cwtl
test
add
or
jnp
loop
daa
sbb
stos
or
clc
inc
jo
xor
es
test
out
shlb
in
jo
mov
fdivl
shlb
jo
adc
sbb
add
shrb
adc
and
fs
lods
mov
jo
iret
lock
insl
pop
mov
addr16
or
inc
push
rol
push
and
inc
mov
lods
xchg
sbb
leave
stos
inc
add
lock
mov
or
nop
jge
adcl
jne
int
sub
scas
nop
xor
adcb
xorl
xchg
adc
into
cmc
add
inc
int3
jo
fcompl
xchg
test
inc
push
jo
outsb
cmpsb
hlt
jbe
adc
outsl
and
mov
sub
or
jmp
mov
inc
mov
cmp
jo
sahf
mov
test
jo
adc
or
ja
cmp
js
and
xor
push
inc
mov
adc
mov
jo
in
cmp
xchg
lahf
aad
push
sbb
dec
push
dec
inc
sub
leave
jo
repnz
jp
xchg
jo
test
jo
out
jg
aaa
into
adc
pop
loope
lcall
out
nop
lcall
mov
or
negl
aad
xor
or
inc
push
cmp
jo
lds
imul
in
and
sub
pusha
jo
sarb
sbb
xor
call
enter
inc
pop
pusha
pop
push
sub
arpl
js
mov
daa
fldenv
pop
cltd
or
in
mov
mov
xor
outsb
shrd
xchg
stos
pop
jo
push
fisubrs
je
xchg
and
mov
pushw
ljmp
mov
pop
lds
or
cmpb
inc
cltd
bound
ffree
sbb
inc
dec
mov
cmp
leave
push
pop
push
sub
insb
test
mov
shlb
testl
fcmovne
mov
fistpll
pop
sub
jo
add
aam
lcall
movsl
push
xchg
jns
jo
pusha
rolb
sarb
subb
divb
fisubl
sub
jo
leave
mov
sbb
jo
repnz
mov
xor
shrl
sub
inc
sub
in
adc
lock
pop
cmp
adc
jo
jmp
sti
jo
aaa
stos
sub
subl
call
inc
fldenv
add
in
negl
scas
push
movsl
int3
jo
adc
outsb
or
dec
dec
addb
mov
pop
push
loope
inc
lret
sbb
lds
ljmp
aas
addb
jae
and
xorl
inc
push
lret
movsb
push
mov
in
jo
lcall
jo
lods
pop
insb
sbb
icebp
push
jo
mov
ss
or
bound
cwtl
je
jb
popf
inc
jo
icebp
rcll
jo
jg
stos
lds
lcall
jo
mov
aad
lods
inc
shll
bound
dec
jo
arpl
repz
fdivl
ret
scas
je
leave
enter
fstl
fidivs
jle
jb
sub
lds
mov
sub
ljmp
push
xor
arpl
pop
or
lds
push
jecxz
nop
jmp
mov
and
sbb
ret
xor
js
bound
mov
inc
subb
xlat
cmp
call
js
sub
dec
mov
mov
stos
fcomps
inc
dec
xchg
xchg
shrb
jl
add
jmp
jmp
ret
push
pop
xchg
mov
jo
mov
xor
push
out
ljmp
imul
mov
fs
roll
mov
test
inc
mov
jnp
mov
xor
jo
pop
sbb
lds
jbe
push
or
fdiv
mov
aad
inc
jo
push
into
jg
mov
cmp
pushf
add
movsl
and
ret
jo
adc
push
and
fwait
inc
les
push
mov
loope
repz
scas
cmp
pushf
int
dec
or
or
jo
adcl
xchg
in
outsl
jo
addr16
gs
cli
lds
mov
testb
in
leave
mov
jnp
lea
push
jl
xchg
sub
pop
cmpsl
mov
popf
or
jns
xchg
jmp
mov
xor
jge
jo
outsb
mov
xorb
mov
mov
ret
jbe
and
pop
fwait
outsl
add
jo
inc
mov
adc
addr16
cmc
pop
loope
pop
jo
add
mov
jp
js
or
lods
rcll
shll
test
ja
ss
jbe
ret
jb
cmp
cmp
jo
sub
fwait
shll
jae
fucomip
mov
insl
mov
mov
jo
shll
push
mov
mov
fs
outsl
mov
sbb
push
inc
xchg
mov
ds
jg
jmp
cmpsb
jecxz
hlt
insb
scas
xchg
rcr
outsb
fidivrl
rcr
lret
cmp
adc
scas
add
xchg
leave
or
xchg
xchg
add
jns
jo
cli
das
shr
adc
jo
rcr
lds
out
inc
cmpsb
adcb
outsl
pop
lcall
in
aas
cmp
pop
aad
mov
nop
push
lds
cmp
das
jo
inc
mov
dec
jo
sub
jne
dec
jo
mov
shlb
and
ret
popa
call
xorb
sbb
arpl
roll
inc
xchg
in
les
sbb
aaa
movntq
out
in
sbb
xchg
jo
fwait
cmp
imul
cmp
lds
jo
leave
xor
xor
gs
fdivl
dec
or
into
inc
mov
mov
sahf
out
and
cmp
mov
inc
inc
fidivl
test
xchg
cwtl
subb
iret
jo
aas
add
mov
ret
imul
inc
jecxz
mov
jo
fsubrl
mov
add
xchg
mov
aaa
out
daa
jo
js
cmp
or
dec
lds
ficompl
pop
mov
pushf
pop
jo
shrb
add
test
mov
jl
inc
xchg
add
js
jo
stc
push
mov
jecxz
aas
or
call
addr16
pmuludq
js
mov
cmp
mov
jae
jg
test
cld
cmp
and
ret
sbb
push
das
push
scas
jo
lds
cmp
mov
mov
xorb
inc
adcl
mov
insb
or
jo
fidivrl
subl
and
push
pushf
loop
jno
jo
aam
stos
ret
cli
jo
imul
sub
jl
ret
pop
out
icebp
addb
mov
jo
aad
mov
sub
leave
jo
mov
jle
inc
add
loope
sub
or
dec
xlat
xchg
mov
ja
dec
cmp
jo
fs
or
divb
mov
out
sbb
stos
jo
fisttpll
inc
sti
cli
pop
pop
mov
push
cwtl
add
ror
hlt
test
jo
jecxz
subb
jmp
dec
add
stos
rolb
push
jo
mov
adc
scas
lods
cmp
pop
ja
js
add
adc
sbb
or
add
aam
add
loop
inc
jo
clc
into
jmp
jae
jo
mov
rol
xor
push
sub
inc
insb
dec
xor
xchg
test
out
leave
jo
xor
dec
mov
inc
lock
jnp
pop
mov
xchg
leave
pusha
cld
or
or
insb
pextrw
mov
nop
dec
lcall
mov
mov
pop
xchg
sub
adc
jp
js
mov
cmpl
data16
sbbl
ret
aas
repz
push
push
inc
mov
in
sbb
pop
or
nop
subl
ja
lahf
hlt
lock
jno
jo
and
inc
outsl
mov
push
popf
jb
cmp
xor
mov
mov
push
incb
lds
test
insl
mov
imul
imul
or
rclb
cmc
add
insb
and
jo
inc
add
push
jo
xchg
cmc
int3
xchg
hlt
out
fnstcw
fwait
add
adc
adc
ret
xchg
std
mov
xchg
out
fwait
or
jo
pusha
sahf
jb
jmp
je
lea
testb
cs
jae
ss
push
in
or
jo
stos
int3
rcll
cmp
push
fcomi
xchg
imul
notb
jnp
enter
jo
dec
aad
lahf
inc
xor
jo,pt
addr16
mov
adc
jo
mov
jmp
mov
mov
fwait
repnz
xor
aad
jbe
in
dec
and
shll
arpl
frstor
cmp
gs
jo
or
add
adc
adc
aaa
fcompl
loop,pn
xor
pop
int3
add
or
xor
mov
leave
jo
out
or
shl
icebp
xchg
sbb
pop
jo
sbb
cpuid
jp
jo
xchg
pop
lock
sarb
into
call
divl
adc
cmpsb
xchg
dec
dec
push
jnp
xorb
scas
mov
jo
mov
pop
sub
jo
test
and
out
jo
testl
jo
or
pop
rol
push
push
fwait
in
pop
into
cmp
outsb
je
ret
mov
out
add
fnstcw
into
add
dec
test
jo
data16
pop
jo
sub
add
push
test
mov
aaa
pop
xor
lahf
inc
popa
outsb
je
sbb
add
cmc
jp
mov
rorl
jo
cld
mov
sbb
sbb
in
add
testl
mov
mov
pushf
outsl
push
addr16
jo
aad
xchg
add
mov
std
lret
cmpsl
lods
cmc
push
sbb
adc
ret
pop
cs
sub
leave
and
xor
jmp
jo
lds
cmp
add
jno
das
in
jo
adc
popa
push
ficoms
movsl
flds
gs
push
enter
lods
jnp
jno
sub
test
test
fnstsw
jo
je
rcll
cs
jo
jnp
std
xor
jo
lret
pop
popa
aad
jg
jo
rorl
fbld
bound
jo
inc
movsl
clc
sbb
push
jmp
imul
jne
inc
fs
std
and
jl
push
jo
inc
repz
pop
jno
pusha
out
in
mov
jb
mov
cvtps2pd
jno
fld
push
xchg
dec
inc
mov
das
scas
jmp
adc
leave
adc
cs
xor
std
addb
mov
lds
pusha
pushf
push
scas
mov
inc
jo
mov
and
nop
fidivl
jle
mov
adc
pop
setl
cmp
jle
sub
jl
xor
sub
pop
jmp
call
mov
les
sub
lods
jo
xchg
in
cmp
movsb
lret
add
sub
or
fimull
hlt
jmp
push
aas
shrl
push
jo
icebp
popa
xchg
hlt
addr16
mov
inc
pop
jne
leave
xor
jle
jo
xchg
and
push
sbb
add
mov
inc
mov
nop
lods
addr16
xchg
xchg
aam
or
loope
push
adc
fistpll
jo
adc
jo
ficoml
sub
bound
enter
leave
dec
and
subb
xchg
sub
add
add
js
leave
mov
dec
cld
lcall
pop
addr16
sti
xor
mov
mov
movsl
cmc
cwtl
fwait
sub
faddl
leave
push
outsb
dec
mov
or
insb
ficoml
loope
insl
shrl
test
ret
jo
cld
xchg
inc
inc
dec
pop
movsb
push
inc
std
stc
or
enter
push
cs
cmp
mov
data16
mov
inc
push
pop
mov
dec
mov
jo
in
ret
test
dec
es
adc
mov
sbb
rclb
loop
test
push
dec
or
or
mov
push
arpl
int
mov
adc
jo
push
imul
xlat
jp
js
push
mov
sti
fldz
in
push
mov
or
push
pop
iret
and
jp
ja
push
js
decb
out
mov
in
pop
mov
mov
xchg
rcrl
xchg
add
sbbb
negb
loop
test
jo
jecxz
cmp
fchs
cli
in
cmp
ja
int
dec
mov
jne
repnz
push
stc
mov
daa
movsb
push
addr16
shl
xor
jo
xchg
and
shlb
cmp
lods
dec
lock
cltd
rorl
loop
dec
and
aad
aam
inc
sbb
cwtl
in
scas
mov
pop
xchg
inc
stos
nop
into
jne
sbb
mov
xchg
cmpsl
cmp
pusha
mov
sbb
jo
pop
mov
sub
test
or
cs
dec
fmull
push
sub
outsb
fwait
xorb
es
aaa
lea
sarl
mov
jl
nop
andb
cmp
xchg
punpcklbw
mov
cmc
insl
jmp
add
lds
mov
jge
add
xorb
adc
jo
fldenv
push
jmp
cmpsb
sti
inc
xor
and
pushf
fdivs
out
cwtl
into
sbb
and
mov
push
addr16
xchg
sub
cmp
inc
mov
xchg
sbb
cmp
shlb
nop
cmp
jl
and
pop
inc
jne
repnz
nop
jo
aas
cmpsb
imul
mov
jo
pop
lds
out
jp
jo
mov
imul
hlt
lds
movsl
call
cmp
jo
inc
push
inc
scas
outsl
mov
pushf
dec
leave
adc
test
xchg
loopne
push
outsb
pshufw
mov
cmpsb
jl
xor
ljmp
and
testb
js
shll
and
mov
or
fs
jae
push
add
inc
pop
pop
cwtl
inc
rorl
sub
fsubl
pushl
pop
std
inc
stc
cmc
fnstcw
imul
jne
fnsave
jo
push
out
mov
outsl
stos
xchg
js
in
pop
nop
shl
das
inc
xchg
jo
jl
sub
clc
andl
ss
test
cmp
stos
dec
out
pop
lret
jo
stos
adc
sbb
cli
xor
fidivrl
bound
jbe
pop
pop
and
xor
add
xchg
fildl
movsb
mov
test
dec
adc
jns
int
les
xchg
ror
jge
jo
loope
psubusb
jo
aaa
lahf
jae
adc
mov
scas
or
sbb
sub
iret
mov
inc
inc
pop
mov
lahf
lret
je
mov
inc
pop
xchg
outsb
mov
sbb
jb
push
arpl
jo
mov
fistps
cmp
mov
lods
imul
dec
lahf
jecxz
and
outsl
mov
outsb
jmp
fs
ds
mov
aas
out
fnsetpm(287
sub
or
mov
in
xor
std
jo
iret
push
in
test
push
cmp
les
shlb
mov
mov
mov
mov
jo
push
jg
fbstp
or
outsb
push
pop
test
std
jge
cmc
mov
lret
add
mov
jo
mov
dec
mov
sub
and
pop
test
mov
mov
ret
push
fdivl
int
shrb
imulb
adc
mov
mov
inc
out
jo
pop
repnz
xlat
repz
jo
xor
sahf
sub
out
adc
mov
jo
dec
push
xchg
jmp
shl
das
cmp
stos
adc
push
cwtl
lock
ret
into
fs
inc
push
xchg
jmp
hlt
xchg
push
out
lods
push
aas
call
xchg
sarb
out
xor
shll
lret
outsb
mov
cmp
outsl
into
jp
sbb
inc
mov
push
cmp
dec
xor
push
push
inc
outsb
je
or
add
inc
sbb
gs
stos
test
push
pop
sub
or
dec
mov
jmp
data16
pop
xor
xchg
shll
shlb
sbb
push
movsb
addb
sbb
jmp
jo
iret
xor
aas
sbb
pop
or
inc
sahf
mov
sarb
ljmp
or
std
push
inc
repz
xchg
ret
mov
roll
xor
pop
scas
xorl
jnp
jecxz
fldenv
nop
idivb
lods
arpl
jne
lea
repnz
test
lock
jo
aad
pop
sbb
icebp
bound
mov
lahf
dec
xchg
std
jbe
jge
inc
jbe
mov
in
mov
fldcw
je
xchg
mov
or
sbb
mov
xor
inc
lds
in
jo
push
dec
pushf
nop
fisttps
movq
inc
cmpl
enter
ret
imul
inc
popa
mov
or
jo
xchg
jbe
xchg
inc
pusha
fnsave
in
sbb
jo
cld
add
or
jo
or
fs
pop
dec
sarl
incl
mov
idivl
lret
sub
and
push
sub
sub
data16
int
cmp
leave
sub
std
jo
inc
push
lds
cltd
add
iret
int
jp
jo
mov
sbb
push
nop
fbld
outsl
leave
push
jbe
insl
mov
pop
xlat
scas
and
lds
in
ret
jbe
pop
mov
movsl
jno
pop
xchg
push
andl
cmp
dec
push
mov
insb
mov
aas
lret
adc
jge
in
cmp
iret
repz
cli
and
daa
mov
mov
mov
mov
out
cltd
push
adc
jns
adc
fs
loop
or
dec
fidivl
mov
test
out
jo
bound
imul
or
not
ret
outsl
xchg
sub
sahf
std
jo
lds
mulb
addb
out
jo
add
pop
adc
and
or
xchg
mov
jo
clc
push
inc
add
scas
xor
ret
sub
fidivl
out
call
sub
lock
xor
push
outsl
scas
and
mov
cmp
xchg
pop
out
jl
ss
enter
adc
inc
mov
das
pusha
cmp
mov
rol
stos
aas
bound
sti
addr16
cld
xchg
rcll
fcmove
jbe
pusha
arpl
push
inc
mov
jo
add
mov
cmp
jo
addr16
dec
or
jo
in
adc
out
ja
or
nop
add
adc
jnp
arpl
mov
and
je
std
xorb
movsb
ret
out
fisubl
push
mov
jo
mov
or
bound
push
es
sbb
lods
shll
push
jg
inc
xchg
lods
dec
movsb
push
or
mov
jo
lcall
int
lds
push
fidivrl
rcrl
mov
pop
rorb
aad
rcll
cmp
sub
push
lds
cs
adcb
xchg
fisttpll
lret
shlb
fiaddl
xor
mov
jo
mov
xor
jmp
push
jo
xlat
inc
into
push
iret
adc
and
sbb
pop
in
insl
sbb
ds
nop
divb
bound
push
out
mov
addb
dec
mov
sub
dec
hlt
cmp
ror
jnp
cs
les
cmp
mov
pop
leave
inc
jo
dec
out
jnp
pop
xor
lea
jno
pop
sub
imul
out
lds
jo
cltd
pushf
icebp
adc
jmp
push
jbe
pop
mov
xchg
jbe
push
xor
xor
out
mov
int3
jo
sub
das
push
dec
daa
repz
jo
sti
push
shr
iret
jo
jecxz
fisttpl
mov
fbld
mov
xchg
outsb
rorb
roll
andb
repz
pop
ret
mov
nop
mov
xlat
jae
inc
jns
mov
pushf
jo
inc
in
sbb
jl
jge
test
pcmpeqb
cmp
lcall
cmpsl
mov
mov
iret
add
loop
les
add
fs
jo
bound
xor
jp
data16
inc
xor
fldcw
notb
lea
loope
or
arpl
jno
movsl
pop
rorl
sub
ret
mov
cld
bound
adc
sbb
test
jle
cmpsl
ss
imul
jle
push
cmc
bound
in
rcll
out
mov
jne
nop
hlt
shrl
push
les
jo
ds
fisttpll
mov
cmpsl
push
push
cmc
loop
sub
movsl
imul
cwtl
adc
dec
jg
cli
xchg
cmp
pop
dec
cmp
mov
fcoms
add
xchg
rcll
push
cmpsl
push
fwait
jp
xorb
cmpsb
dec
int
sbb
icebp
or
mov
divl
sbb
and
push
rolb
and
push
sub
lods
call
fstpt
inc
push
into
jo
add
adc
mov
shll
fsub
arpl
sbb
sar
and
lds
into
add
pshufw
movsb
outsl
fdivp
iret
les
cmc
sbbb
scas
lahf
mull
jle
andl
jbe
jecxz
jo
rorl
inc
jns
add
js
cmp
mov
inc
xor
sarb
jo
and
inc
cli
shufps
sbb
mov
inc
jo
repz
mov
sbb
lds
shll
add
push
mov
lds
push
leave
inc
sub
repnz
bound
dec
es
jp
push
pushf
sub
jo
aam
push
inc
pop
lods
jo
in
fwait
jbe
mov
sub
fisubs
lret
jb
jle
jo
mov
jns
jo
loop
push
or
and
sahf
jo
cmp
pop
add
nop
sbb
lcall
adc
icebp
adc
dec
outsb
ret
addb
cmp
repnz
inc
mov
test
cmc
cmp
ret
lods
or
adc
mov
adc
lods
jbe
fcmovne
jo
jge
aaa
ficoms
sbb
fs
ds
dec
ss
jge
and
sub
push
call
es
adcb
inc
jge
jo
add
xchg
pop
xor
orb
punpcklwd
jo
js
push
add
xor
push
psubusw
xor
ret
jbe
out
loopne
mov
cwtl
jl
pop
mov
fwait
cld
push
mov
es
std
cmpl
in
ds
jo
push
lds
xchg
negl
sub
and
and
push
insb
mov
lcall
sbb
fisttps
mov
int3
adc
adc
jo
dec
shl
mov
test
sbb
jmp
sub
out
dec
jo
mov
nop
pop
jns
repnz
mov
cmpsb
dec
jo
shll
inc
stos
ret
in
test
aaa
or
orb
mov
pop
adc
pop
sub
cmp
int
test
iret
cmpsb
push
je
ja
jo
dec
cltd
adc
leave
xorl
dec
repnz
stos
cmp
push
push
xchg
jo
call
mov
test
adc
test
nop
sbb
xchg
fsubl
push
push
in
mov
pushf
hlt
js
or
stos
mov
cmp
rolb
js
jle
call
cmc
and
push
sahf
xor
std
aam
xchg
jp
je
orb
mov
cmp
pop
mov
sub
xchg
or
lds
mov
ret
mov
sti
cmp
iret
pushf
rcrl
imul
decb
dec
in
xchg
mov
jo
mov
dec
cmc
paddsw
loop
roll
push
pop
insb
jp
jo
sbb
mov
add
cmpb
icebp
jge
jmp
mov
sub
loopne
jne
ret
jecxz
ret
xor
sub
pop
in
lock
inc
mov
jne
xchg
nop
sbb
or
sub
sub
push
push
jb
push
das
sub
jo
lahf
cwtl
push
loope
insb
jo
iret
leave
fcmovnu
imul
jnp
xchg
shlb
pop
gs
dec
fwait
outsb
test
push
jo
aas
xor
addr16
insb
jo
pop
xchg
test
ret
jnp
mov
aas
bound
hlt
adc
mov
xchg
icebp
lret
push
inc
popl
imul
lret
mov
andl
nop
cli
jo
enter
imul
mov
jo
repz
push
or
ret
jo,pt
aaa
xchg
cmpsl
dec
jo
ret
xor
sbb
jne
add
cmp
cmp
adc
jo
xchg
sbbl
out
aaa
jo
jbe
or
fidivrl
inc
xor
mov
mov
add
xchg
sbb
fadds
lods
jo
add
inc
jo
mov
adc
jo
sub
iret
mov
inc
das
in
loope
popf
nop
push
pop
fcomp
mov
dec
jo
daa
jle
sub
outsl
nop
mov
loope
imul
jmp
jo
xchg
add
test
jo
scas
xchg
into
mov
jo
add
or
jmp
xor
ret
push
lds
cmp
pushf
xchg
dec
fnstenv
jbe
shlb
add
sub
xchg
paddq
rcrb
pop
test
ljmp
sub
push
leave
push
mov
fs
mov
sbb
push
adc
add
stos
insl
sbb
ret
inc
adc
sub
lock
arpl
mov
sub
inc
add
leave
push
fwait
orb
mov
xchg
bnd
leave
lods
jle
cmp
jo
inc
scas
xchg
lds
xchg
mov
mov
ljmp
cmp
lds
movsl
mov
xchg
js
popf
into
adc
lods
je
out
stos
cmc
nop
inc
jo
not
cmp
shlb
add
dec
jp
mov
cld
mov
test
addr16
xchg
add
mov
std
test
cmp
mov
pop
ficoml
cwtl
jo
add
and
xchg
push
sbb
sub
cmp
out
inc
bound
xor
in
xlat
push
xor
fldz
inc
mov
rol
fidivs
inc
inc
mov
leave
push
cmp
out
out
ja
hlt
cwtl
add
aam
fs
stc
lock
xor
adcb
jnp
jo
sbb
jno
jle
push
in
ficoms
jge
out
inc
xchg
loop
or
push
repz
or
jo
leave
or
push
push
adc
in
lods
add
jbe
das
shr
cmp
andb
mov
jo
push
xor
mov
jle
jo
gs
mov
jo
or
jne
inc
decl
jmp
lahf
fdivs
cmp
push
pop
xchg
and
into
sahf
inc
mov
cmpsl
imul
cli
inc
mov
bound
popa
xchg
lods
jg
mov
jo
pop
gs
jo
int
scas
insb
inc
sbb
jo
xlat
ret
in
fadds
stc
mov
mov
jo
xor
push
icebp
xor
adc
jo
addr16
dec
jb
cmp
jp
jo
lods
rclb
out
gs
dec
ret
fisttps
jae
int3
cmp
js
scas
and
sarl
iret
adc
les
in
xor
ret
jo
fsubrp
push
insb
out
scas
jo
fnstsw
test
jg
jo
int
xor
add
fldenv
scas
cmp
jl
pop
mov
push
pop
arpl
movsl
ja
imul
nop
jecxz
inc
xlat
pop
popa
nop
jmp
sbb
aam
lock
mov
adc
cmpb
popf
pop
icebp
sub
clc
cltd
int
push
sti
pop
xor
adc
sar
inc
add
jo
and
xor
jo
shrb
pop
nop
pop
jmp
scas
icebp
xor
and
xchg
or
inc
shll
inc
mov
arpl
inc
aas
pop
xchg
cli
data16
dec
popa
jo
lds
aaa
push
mov
ret
lret
cld
lret
and
cs
pushf
hlt
and
jo
and
xor
or
jo
lds
addr16
lods
mov
mov
jle
fwait
cwtl
pop
mov
xchg
cmc
sub
cmpb
push
mov
push
and
jno
insb
andb
inc
jnp
vpshufd
scas
arpl
mov
insl
dec
push
sbb
shr
mov
inc
movsb
test
jo
push
xchg
sbb
popf
leave
cmp
jmp
xor
dec
mov
or
jmp
cmp
cli
dec
testl
add
push
pop
imul
dec
lods
arpl
rorl
push
loopne
leave
ret
bound
jbe
fs
push
stos
sbb
fwait
cmc
fisubs
jns
nop
scas
xchg
es
popa
or
hlt
inc
arpl
xor
jl
std
out
xchg
movsb
jo
and
push
arpl
push
aam
push
xor
pop
lock
pop
sub
add
push
icebp
sbb
pusha
pushf
call
outsb
adc
loope
mov
jb
jo
pop
leave
pop
int
dec
mov
aad
jo
and
sti
jo
repz
rol
pushf
xchg
frstor
movsl
cmp
or
xchg
repz
je
loop
push
daa
push
push
push
and
jbe
rorl
lret
pop
insb
cmc
inc
leave
jae
push
mov
int3
xchg
jo
mov
add
jo
insb
arpl
nop
push
test
std
inc
sahf
dec
add
lret
jo
les
movsb
push
in
int
sub
mov
push
or
pop
mov
ja
loope
jo
jb
add
rcll
jecxz
pop
fs
out
lea
push
add
mov
call
jo
insl
test
pop
pop
popa
scas
jo
into
fs
das
jg
shll
jge
pop
add
mov
mov
jo
xchg
jnp
int3
lds
push
push
sbb
ss
sbb
cltd
int
leave
pcmpgtb
dec
xor
mov
sub
cld
insb
cmp
lock
jmp
fldl
mov
inc
xor
cmpsl
mov
flds
std
cmp
lods
xor
js
pop
sbb
andl
mov
dec
jmp
mov
mov
cmp
fldl
mov
mov
popf
adc
xlat
cmp
pop
ret
mov
and
fs
dec
jl
std
movsb
and
or
pop
cmp
mov
je
sar
jo
cld
int
xchg
fnstsw
cwtl
jo
out
test
pop
jo
lds
sub
in
enter
adcb
jo
inc
mov
aad
fwait
enter
mov
mov
out
jb
psubb
repnz
sbb
out
jo
aad
cltd
jecxz
fst
jo
jb
cli
rolb
jo
enter
pop
movsb
test
nop
bound
insb
mov
scas
jnp
or
lahf
jne
mov
mov
push
xor
push
fucomp
out
fptan
fdivrs
inc
push
mov
aas
shrb
ja
in
sbb
repnz
sub
sub
imulb
loope
data16
xchg
pop
lds
push
rcll
sbb
jne
dec
fs
jnp
in
ror
popa
jo
jbe
xchg
fldenv
dec
rcl
add
out
rcr
in
jo
cwtl
adc
addr16
ds
adc
test
jo
sbb
fs
jo
xchg
jle
pop
pusha
push
adc
mov
call
mov
scas
mov
lods
lock
jo
xlat
js
push
std
fsts
test
lds
addb
stos
je
ds
cmpsl
sub
push
push
loop
push
insb
dec
mov
shrb
in
ret
push
xchg
out
xor
sarl
and
add
inc
jo
ss
or
jecxz
xchg
mov
jns
bound
add
adc
push
push
or
in
out
jb
fstl
lods
repnz
loop
in
jl
stc
mov
dec
pop
stos
enter
dec
jo
inc
fxch
std
pop
stos
jg
mov
mov
rcrl
mov
cld
incb
mov
ret
repz
rcl
enter
mov
xchg
js
mov
pop
cltd
inc
mov
fidivl
mov
jo
loope
inc
popa
dec
ret
push
ds
and
and
iret
jl
jecxz
orl
in
pop
imul
jg
cmp
xor
fisttpl
jo
lods
popa
leave
mov
mov
out
or
sub
cmpsl
insb
movsb
aad
pop
adc
loope
in
jo
subl
push
add
jle
shl
popf
cmpsl
nop
dec
jbe
stc
inc
xor
pcmpgtw
pop
mull
mov
sahf
dec
xchg
leave
jbe
sbb
dec
imul
add
mul
jo
xchg
test
enter
push
jnp
jo
jno
inc
mov
mov
inc
mov
ja
mov
pop
dec
push
xchg
mov
push
adc
pushf
xchg
out
and
push
in
add
scas
js
jp
loop
loop
jo
mov
jo
push
mov
ret
pop
sub
out
jo
adc
mov
lock
jo
push
mov
aad
orl
push
xor
cli
or
bound
fmulp
jmp
into
test
cmp
jo
dec
fabs
and
js
mov
jecxz
fisttpl
jp
call
mov
push
mov
cmpsb
rorl
jo
push
add
lea
ljmp
jo
jecxz
lahf
cmpsl
ret
scas
push
nop
cli
pop
sub
cmp
shll
test
jo
mov
adc
sbb
dec
pop
aam
and
fidivs
imul
xor
test
jo
jnp
xchg
lods
je
jo
arpl
inc
lret
fiaddl
sbbb
sbb
jbe
repnz
adc
adc
sbb
cmovp
insl
lds
icebp
jae
int
or
loopne
pop
xchg
mov
push
les
cli
mov
jmp
jo
add
pop
xlat
and
pop
and
popa
stos
mov
cmpsl
push
mov
test
inc
xchg
xor
mov
scas
adc
not
and
mov
dec
fisubl
mov
mov
jne
cmpsb
in
das
lds
cmp
js
inc
add
mov
jle
dec
and
xor
pop
adc
imul
jo
xlat
fildll
mov
mov
ds
xor
dec
andl
dec
repz
arpl
xchg
push
ret
je
mov
pop
lret
popf
pop
pop
push
das
sbb
or
subb
push
adcb
montmul
cmpsb
push
out
sbb
jb
mov
ja
cld
je
nop
aaa
gs
cs
cwtl
ja
into
cli
jle
jmp
or
out
push
andl
notl
jae
rorb
in
xor
sub
fisttps
int
push
out
es
shrl
mov
inc
jo
sub
adc
xorps
vpmadcsswd
jge
xchg
mov
push
addl
inc
and
imul
xor
push
sbb
pop
mov
repz
add
jo
sub
xchg
pop
jo
fsubr
sarl
repnz
mov
pop
cmpb
or
stos
jge
jmp
cmc
sbb
jo
adc
and
sbb
lds
add
lods
adc
imul
cmpsl
push
inc
mov
jge
jo
adc
xor
xlat
mov
mov
add
mov
xchg
mov
jae
lds
fists
jbe
jo
push
das
sbb
rcrl
push
add
aas
in
jo
insb
lret
adc
jo
xor
pop
std
push
rol
fs
orb
push
cmpsl
jns
adc
repz
jo
xor
add
in
jle
mov
xchg
insb
mov
mov
pop
lcall
dec
jl
inc
popa
mov
out
push
std
cmp
call
xor
ret
repz
fcomps
movsb
ror
jmp
jo
xchg
mov
jge
pop
lods
lock
pop
xor
movsb
jo
aam
dec
fwait
std
cmpsl
inc
jo
adc
jo
sbb
popf
pop
lea
jnp
lret
int
addr16
aad
ljmp
mov
pop
push
test
bound
fprem
sub
mov
dec
jne
repz
loop
fistpll
cmpsl
int
mov
xor
push
nop
ja
dec
in
sbb
push
ljmp
jp
adc
sub
xor
rclb
inc
and
es
xor
and
xor
add
add
add
pushf
jo
push
std
movsb
iret
mov
daa
push
or
mov
loop
jo
cs
call
mov
out
cli
cltd
and
int
insb
sbb
xchg
push
xor
leave
add
xor
push
popf
inc
es
and
lret
jl
sub
xorb
sbb
jo
test
arpl
es
and
bound
test
mov
pop
lret
sub
cmpsb
ja
shll
sub
xor
lret
icebp
or
std
lods
fst
mov
js
es
jo
data16
add
sub
mov
hlt
or
jo
jns
adcl
dec
ds
lds
call
pop
mov
ss
stos
fldl
jo
mov
sub
mov
or
jp
shl
ret
das
mov
lds
xchg
mov
or
aam
jo,pn
fstps
ret
jo
push
addb
jle
jp
jo
dec
pcmpeqw
call
mov
lods
and
jne
movsl
cs
push
sahf
mov
shlb
dec
jmp
dec
cmp
adc
mov
jo
roll
adcl
lock
das
sub
repnz
sub
daa
xchg
jo
pushl
subl
or
test
jp
les
mov
imul
dec
cmp
lods
mov
sbb
fdivrp
push
sub
adc
jo
daa
jae
fdivrl
jge
push
or
xchg
push
mov
dec
cmp
out
sub
inc
push
ret
idivb
hlt
adc
jo
mov
std
push
outsl
popf
push
js
dec
mov
out
jo
jns
mov
add
paddw
cmpsl
dec
pop
jp
enter
cmp
test
icebp
jl
mov
jo
daa
in
ss
shlb
loope
sbb
mov
inc
add
sar
aad
enter
sahf
jg
nop
lds
or
dec
mov
push
aam
js
gs
xor
pop
fnstenv
lock
dec
pop
cmp
lods
lcall
push
pushf
sub
imul
sarl
sub
or
xchg
adc
testl
inc
cmp
in
sub
hlt
js
cmpl
jbe
inc
pop
xorb
push
mov
nop
and
jae
push
fnstenv
push
mov
mov
jle
inc
notb
roll
pushf
and
jbe
jo
push
hlt
mov
js
iret
loop
cs
add
mov
push
ret
movsb
sbb
mov
punpckhbw
out
mov
sub
mov
mov
jo
xchg
insl
adc
cmp
ljmpw
int3
dec
pushf
hlt
xchg
je
repnz
pop
push
xor
loop
ss
mov
dec
mov
out
mov
aam
jecxz
shrl
mov
jmp
add
nop
icebp
jo
xor
leave
mov
jo
out
jge
rcr
scas
push
iret
icebp
cmp
xchg
sti
dec
loope
jo
sbb
mov
jo
pop
ret
in
and
lock
in
fwait
inc
push
add
aad
xchg
pop
es
imul
rcr
imul
cmp
test
dec
in
jo
adc
out
sub
mov
mov
pop
mov
push
pushl
je
push
or
loop
cltd
and
lds
xor
pop
mov
or
repnz
xchg
push
fwait
clc
pusha
mov
js
inc
xor
leave
xchg
xchg
push
imul
out
adc
jo
push
arpl
push
lods
jo
jl
test
ds
repz
movsb
cmp
mov
jnp
cmp
xchg
add
jecxz
nop
mov
mov
sub
adc
mov
fcmovnb
or
jo
sub
push
inc
sbb
fisubl
jl
rolb
repnz
jmp
push
xor
es
xlat
sub
iret
push
jle
jo
mov
mov
scas
push
mov
push
push
xor
cmp
or
hlt
push
add
cli
xor
insl
leave
or
xchg
adc
xorb
mov
sub
pop
loopne
adc
sti
ljmp
xor
pop
sahf
pop
sub
sub
xchg
fidivs
inc
sub
or
push
test
stos
dec
mov
mov
repnz
cli
inc
dec
xchg
jo
inc
arpl
mov
add
movsl
xchg
add
jp
push
cmp
ret
out
test
inc
dec
xchg
js
jae
mov
shrb
add
sub
or
jg
fidivs
loop
loopne
sahf
push
mov
mov
sbb
cmp
loop
jo
inc
pushf
aam
lds
nop
enter
out
dec
ja
rcl
movq
and
jle
pushf
add
push
fiadds
iret
cmp
mov
mov
pop
or
lock
jo
imul
enter
cmp
ret
add
cmc
test
mov
pop
mov
in
lods
stc
jo
jb
mov
jmp
shll
sbb
aad
call
cmp
aad
mov
ret
out
jne
in
push
popa
cld
out
sbb
in
js
mov
xor
add
outsb
in
push
mov
imul
sub
sti
aaa
jge
jo
add
fisttpll
mull
jb
mov
mov
sbb
dec
into
push
and
std
push
or
xor
outsb
mov
push
jo
lret
jp
sar
nop
ret
popf
daa
cltd
cmp
js
stc
int
test
stos
or
shlb
pusha
test
enter
loopne
icebp
mov
cmpsb
jo
and
pop
hlt
add
push
mov
fimuls
inc
jo
xchg
jecxz
add
push
test
int
sbb
imull
cmpsb
jl
push
jecxz
shrb
ret
push
popf
dec
xchg
stos
fistpll
dec
bound
dec
adc
inc
lods
mov
mov
xchg
mov
test
push
outsl
ss
mov
mov
xor
dec
pop
imul
paddb
pusha
aaa
jl
loope
and
mov
jo
iret
ss
rcrb
push
xchg
negb
gs
push
or
pusha
ja
lea
insl
comiss
stos
add
add
out
xor
mov
mov
jecxz
jo
xchg
xor
inc
mov
push
adc
and
stc
jae
loope
jno
adc
call
jle
movsb
inc
pushf
cmp
dec
jp
adc
xor
push
out
sbb
dec
shrl
ret
jo
lds
lods
in
mov
mov
and
mov
xchg
aad
jl
jge
jo
lret
aaa
mov
btsl
sti
and
jo
xchg
mov
clc
adc
iret
add
sbb
jp
orl
push
aaa
js
push
sub
jge
dec
jo
jnp
scas
adc
cwtl
sub
sbb
push
jecxz
jo
mov
daa
mov
cmp
xor
cli
fistpll
mov
and
sbb
nop
add
mov
les
ret
das
dec
jno
hlt
in
imul
pop
in
in
sbb
popw
or
les
inc
lds
xorl
jne
nop
repnz
test
jl
bound
jo
or
insb
pop
js
jo
mov
movsb
aaa
inc
arpl
dec
cltd
push
std
pop
jbe
lahf
ja
sarl
xor
sub
or
mov
add
cwtl
test
xchg
xchg
bound
inc
dec
jp
sahf
jo
ss
cld
push
xchg
mov
outsb
jo
mov
pusha
pushf
imul
imul
daa
add
or
jb
mov
pushf
adc
sbb
add
fs
lds
jo
icebp
cmp
scas
or
jo
hlt
popf
pop
xor
sub
test
stos
push
shl
inc
into
jge
popa
jo
cmc
sub
lds
cmp
and
jo
iret
and
mov
sbb
push
jcxz
pop
jge
xchg
dec
and
sub
push
cmp
xorb
stos
hlt
or
jo
mov
adc
dec
gs
cmp
xor
leave
jb
add
cmpsl
dec
add
orb
data16
aad
push
jmp
mov
or
sub
adc
and
aad
cmpsb
push
mov
jmp
js
push
repz
gs
insb
loop
divl
sbb
inc
or
push
cmp
xchg
iret
or
jo
xchg
pop
lds
sbb
rorb
out
pop
sub
lods
jmp
fdivs
outsl
ret
mov
sti
push
arpl
lret
stc
sbb
cmp
pop
shr
push
pop
pop
cltd
jmp
jb
sarl
inc
sbb
sbb
pusha
jo
xor
popf
les
ficoms
mov
add
xor
roll
jo
loopne
and
pop
add
jp
xor
mov
jl
stos
sarb
jmp
ficompl
inc
lahf
jo
mov
int
punpcklwd
in
sbb
aad
insl
bound
or
scas
cmp
pop
rcl
jo
ds
sub
dec
popa
mov
mov
pop
ret
into
xor
push
imul
mov
sarl
mov
lods
inc
jo
inc
pop
xor
shlb
jo
jbe
shl
rorb
jo
notrack
lret
ja
cmovle
jmp
in
adc
leave
cmpsl
xchg
inc
faddl
fs
cs
or
scas
inc
pop
dec
jo
pop
cs
inc
push
jo
jge
push
jo
data16
jo
mov
pop
sbb
xor
idiv
rcl
cmp
jo
push
add
inc
arpl
data16
loop
add
aaa
xorl
shr
pop
jle
push
and
int3
icebp
cmc
push
nop
aam
sub
jle
out
nop
loope
dec
test
mov
mov
and
jo
xor
popf
mov
in
mov
je
inc
dec
leave
insb
jo
jp
pop
add
inc
mov
pop
lock
and
jo
adc
xor
jo
leavew
push
popa
into
cmc
sbb
ret
sbb
jle
inc
jo
mov
push
jo
fs
leave
add
getsec
pop
fucomip
jl
addb
sbb
imul
push
push
push
add
aas
movsl
jmp
xor
lcall
inc
test
lds
jo
insb
daa
test
test
jo
sbb
jne
jo
incb
mov
jno
inc
pusha
jae
jge
addr16
and
lcall
jbe
fwait
in
mov
push
jo
cmpsl
add
sub
cmp
lods
jle
arpl
jo
adc
rcrb
int
pop
and
push
aad
add
ret
jge
jp
emms
jecxz
aad
js
leave
scas
mov
outsb
add
mov
push
and
idiv
mov
mov
repz
int
mov
les
js
mov
mov
insb
add
mov
inc
add
dec
lds
cmp
adc
xchg
pop
bound
and
add
enter
in
ret
dec
xlat
push
lock
jl
loope
mov
hlt
sub
xchg
lds
je
or
shlb
imul
cmp
push
scas
cmp
popf
jmp
jo
lret
fcmovu
in
insl
cs
lcall
lcall
subb
std
scas
or
cli
sub
icebp
fucomp
xor
jg
rcrb
ret
jo
out
rolb
lret
or
insl
pop
movsl
or
xchg
cmp
mov
mov
inc
add
push
adc
or
fidivrs
xchg
jo
xor
mov
or
sbb
mov
add
jo
cmpsl
repnz
mov
sbbb
pop
lock
adc
popf
subb
cmp
jo
mov
sti
cmp
jo
orl
jno
cmpsl
jo
sahf
pop
add
nop
xchg
xor
dec
ja
sbb
mov
fdivs
add
int
cmpb
lods
jo
leave
test
cmp
mov
inc
icebp
in
mov
add
scas
lret
jg,pn
fs
lret
sub
js
jns
jo
cld
cmpb
test
in
insl
fwait
cld
jo
or
push
inc
jo
and
mov
jo
rolb
jo
sub
xor
enter
add
push
jmp
and
adcb
rorl
mov
insb
or
jo
push
cwtl
lret
mov
mov
icebp
jo
dec
inc
test
popf
aaa
jmp
jns
ret
out
mov
and
js
mov
cmp
dec
mov
jne
out
jo
fs
mov
mov
xchg
add
je
xorl
mov
fs
xchg
jo
js
or
push
daa
jo
jne
lret
xlat
push
jmp
add
mov
cmp
xchg
outsb
sbb
mov
fidivl
pop
or
fildl
sub
xchg
mov
push
cmpsb
popa
lret
test
dec
inc
subb
mov
xchg
jo
fwait
and
bnd
sti
into
mov
jo
rorl
jo
clc
daa
pop
lds
or
in
stos
js
adc
mov
outsb
jmp
push
mov
mov
dec
and
int
jo
push
bnd
inc
daa
aas
out
pop
cs
in
shlb
loopne
loope
jo
scas
out
addb
addr16
jo
inc
inc
xchg
mov
loop
adc
fldcw
or
sub
mov
fwait
leave
bound
out
out
aad
add
ds
jo
cmp
rorl
fmull
ret
jp
cltd
lock
jge
jo
lods
jne
add
nop
mov
popa
cmp
pop
mov
cld
push
inc
sub
js
push
ss
rcll
fwait
ret
aas
lahf
dec
stos
in
or
cmp
je
jmp
outsl
repnz
cmpsl
and
repz
mov
js,pt
adc
sub
mov
push
cmp
data16
fdivl
add
ljmp
aad
cltd
call
mov
shl
dec
out
cmp
rolb
scas
lds
xchg
pop
xchg
cmp
add
inc
jbe
push
xor
sub
pop
mov
jno
ret
xor
sub
mov
cwtl
je
fildll
loopne
pop
mov
inc
jno
xchg
jo
in
jmp
push
xor
jo
ret
dec
aad
fimull
adc
lock
loopne
or
push
cmpxchg
sbb
int
shll
dec
mov
test
jo
lret
mov
sub
cmp
mov
sahf
sar
sub
shll
loopne
jmp
adc
imul
pop
je
aad
push
paddusw
insb
sbb
jo
aam
out
dec
and
lods
imul
sbb
mov
or
mov
ret
fs
adc
mov
and
sbb
loope
lds
lods
shrb
inc
in
inc
rcrb
out
and
inc
mov
add
xchg
jo
syscall
jl
inc
pop
inc
lods
jo
sub
call
mov
jo
ret
jle
ror
jo
mov
test
mov
stos
or
in
scas
and
aas
and
jp
jo
mov
pop
inc
gs
push
adc
add
movsl
mov
lret
les
je
jno
jle
push
xchg
jns
jp
repnz
jo
push
gs
push
arpl
dec
jo
jmp
ret
mov
jo
jecxz
out
sahf
and
std
neg
adc
je
xchg
gs
jmp
test
and
adc
jo
cli
mov
and
lret
scas
and
dec
jo
sub
orb
stos
add
jo
div
inc
cli
and
js
xchg
dec
arpl
jmp
stos
push
mov
add
ja
sbb
pop
push
mov
lret
test
mov
ret
push
incl
dec
in
call
xchg
daa
movsl
das
jo
and
push
sarl
scas
stos
ja
in
pushf
stos
jo
rcrb
je
cmpsl
sahf
push
jo
leave
dec
pop
xor
xor
ror
sub
jne
adc
rcrl
mov
xchg
xor
mov
jp
ss
xchg
mov
jo
insl
shrl
popf
leave
scas
push
push
or
outsb
jecxz
popa
inc
adc
or
int
out
js
pop
xchg
enter
inc
ljmp
data16
bswap
dec
pop
repz
jns
movsb
shlb
cmp
sub
and
fisubrl
sub
out
addr16
jo
imulb
dec
insb
stos
jge
jo
and
sbb
or
adc
sahf
repz
jle
jmp
cmc
xchg
mov
mov
sbb
movsl
inc
and
out
sar
in
cmp
or
jo
addr16
loopne
push
mov
into
sub
jo
cmp
inc
test
cmc
or
jo
and
add
jo
dec
sbb
loopne
jecxz
call
add
jae
dec
xorb
int3
cmp
inc
cwtl
jo
or
and
leave
push
loop
fildll
cs
inc
out
subb
sub
adc
ja
fnstcw
sub
mov
lds
lret
dec
cmp
add
adc
or
js
popa
xor
jecxz
cmp
test
sub
ljmp
fwait
cli
pop
jo
cs
pop
jmp
jle
adc
pop
inc
jo
xchg
loope
int
mov
jo
sti
mov
aad
pop
lds
out
push
lret
adc
loopne
lock
dec
pop
nop
sbbl
push
arpl
mov
lds
mov
mov
xchg
jns
loope
xchg
out
jle
pusha
xor
and
push
test
js
mov
mov
cmc
je
fmuls
push
insl
sarl
les
into
cmpsl
andl
push
test
dec
dec
xchg
scas
jnp
push
sahf
or
jo
ret
lds
imul
or
mov
in
or
cmp
pop
sbb
adc
push
adc
fldl
bound
pop
test
sbbb
jmp
mov
xor
sub
aaa
cmpb
call
mov
sahf
out
cwtl
mov
je
repnz
xor
jo
sbb
pop
jo
lea
pop
jns
push
outsl
jo
xor
jl
bound
in
sahf
loop
scas
cmpsb
xchg
jnp
cmp
push
fwait
into
jo
fcomip
inc
push
gs
jo
ss
rclb
mov
cmp
mov
mov
nop
mov
push
jne
or
fldenv
or
pusha
aam
xchg
ret
jae
sbb
inc
inc
mov
mov
push
jns
imul
repnz
jo
shlb
mov
movsl
push
jb
sbb
lea
jno
in
push
mov
test
push
fs
jg
dec
mov
dec
jb
dec
insb
adc
jo
mov
idivb
scas
out
inc
jo
mov
in
clc
aad
pop
mov
sub
aas
cmp
arpl
jne
jl
lcall
sbb
cmpsb
aaa
mov
loopne
jge
jo
add
add
push
daa
sbb
jp
push
or
xor
and
rclb
xor
and
jp
nop
jmp
lret
mov
jo
inc
jmp
push
lods
fimull
mov
xorl
push
or
cmp
lods
imul
aam
scas
jo
push
xor
xchg
xor
push
ret
rolb
jo
fcmovb
outsb
or
mov
adc
jp
mov
js
jo
cmp
mov
xorb
frstor
mov
sbb
leave
and
adc
not
ds
insb
mov
mov
xor
sub
jne
dec
mov
inc
fbstp
out
xchg
sarb
xchg
pop
mov
xorb
add
xor
clc
mov
and
dec
loope
lds
push
movsl
pop
mov
jo
push
mov
adc
shrl
pop
test
or
pop
and
cmc
pop
movsl
mov
cmp
mov
cld
xor
adc
out
out
add
out
xor
mov
cmpsb
or
fdivp
jmp
and
jb
insl
shrb
in
jno
js
push
xchg
cmp
jo
mov
lret
jo
mov
jl
mov
mov
sbb
and
popf
sub
mov
sub
inc
fdivr
stos
sub
scas
adcb
dec
mov
mov
bound
repz
call
push
inc
js
insl
inc
xor
adc
xor
sbb
adcb
pop
jl
or
nop
icebp
aam
mov
aas
fdivl
dec
fwait
dec
cwtl
int
js
jns
call
test
push
and
jo
pop
loop
jg
out
mov
nop
adc
jnp
push
cmpb
int3
sub
insb
jbe
inc
popf
shl
jno
pop
add
js
cmp
xchg
push
dec
daa
lock
insb
popa
cmpsb
movsb
sub
mov
pusha
mov
cmp
push
sub
push
jb
std
in
xor
fdivrl
or
jo
jge
stc
xlat
push
aas
leave
int3
outsl
mov
jbe
jo
jno
dec
mov
cs
daa
out
notl
mov
jo
loop
popa
cmp
jle
push
push
mov
lret
xor
xchg
push
xchg
cmpsl
jge
and
inc
inc
cwtl
xlat
xor
sub
mov
insl
loope
jo
ss
sub
pushl
lds
push
or
mov
movsb
repz
test
push
add
or
jo
mov
aas
out
jne
jo
jl
int
mov
jo
xchg
add
test
jo
adc
inc
xchg
jo
sti
mov
mov
out
js
call
lret
shlb
push
xchg
icebp
adc
insb
adc
jb
rcrb
dec
ds
jo
push
out
in
dec
inc
popa
mov
aas
in
jecxz
jne
cs
dec
in
and
pop
jo
enter
xchg
mov
test
push
dec
xlat
jge
xor
push
int3
add
and
or
mov
jo
in
sub
dec
mov
jl
mov
xchg
push
cltd
xor
push
mov
sub
mov
sbb
shll
cs
jecxz
std
inc
cmpsb
jo
repnz
xorb
jo
cmp
filds
jo
jp
imul
lea
ret
push
mov
data16
jo
lods
dec
sbb
or
jnp
push
orl
bound
cli
or
ss
jo
push
mov
inc
pop
mov
pop
xchg
push
xchg
xchg
nop
jo
lds
or
lock
sbb
or
cmp
add
fmull
or
mov
cmpsl
nop
ja
out
push
and
jae
xor
fcomi
fnsave
sub
push
sbb
sbb
xchg
subb
jmp
or
inc
sbb
jo
movsb
cmp
sub
jae
cmc
mov
jo
scas
ret
and
push
sub
xor
loope
rcrl
int
lahf
mov
stos
mov
inc
or
imul
lods
adcl
jo
pop
mov
test
pshufw
push
mov
mov
int
rorl
lock
xor
das
sub
pop
xchg
jo
ret
cltd
push
xchg
mov
jo
jne
sarb
jbe
into
nop
cmp
out
push
call
xor
push
mov
jge
pop
cmp
js
stc
jo
inc
ja
mov
sbb
dec
push
es
daa
jo
sti
and
pop
in
jo
rorl
jo
mov
inc
jae
lock
js
dec
dec
orl
jo
and
sub
pop
cmp
ficoms
and
gs
jge
js
ljmp
imul
clc
sbb
xor
jecxz,pn
cmp
enter
mov
fisubrl
cltd
add
movsl
sahf
adc
sub
testb
fidivrs
mov
jecxz
and
jo
fcom
inc
icebp
xor
and
mov
shll
mov
mull
je
ljmp
xor
movsb
es
clc
mov
divl
std
adc
pushf
sub
xor
sarl
inc
gs
leave
jo
mov
jo
lock
cltd
jge
mov
enter
test
cmpsl
dec
jo
inc
stos
sahf
cmp
orl
jo
xor
push
jo
popa
movsl
mov
xchg
jo
mov
mov
dec
popl
sub
mov
fadd
leave
aam
sub
cmpsb
push
outsl
scas
idivb
and
dec
pop
jp
jo
jge
sub
xor
cmpsl
pop
data16
loope
psllw
incl
pop
or
scas
rorl
inc
mov
ret
das
mov
mov
movsl
sarl
xor
out
int3
jo
xchg
jp
loopne
aad
push
in
fdivl
jo
mov
push
orl
je
imul
mov
test
xor
add
pshufw
inc
pop
je
jo
cmp
add
jmp
push
ret
jecxz
imul
clc
scas
sbbb
or
cwtl
fstl
jb
ja
jle
out
fdivr
sbb
mov
sbb
das
es
jo
clc
outsb
and
pusha
scas
xchg
jo
mov
ja
xchg
icebp
ucomiss
imul
rorl
jmp
xchg
pop
mov
in
scas
mov
jo
addb
cmp
and
mov
jo
mov
and
jo
repz
pop
fucomi
or
mov
sarb
cmp
pop
mov
mov
mov
ret
jo
mov
sub
sbb
inc
jnp
ja
divb
lods
es
in
jo
jns
pop
out
push
xor
inc
std
jo
fbld
and
cwtl
aas
pop
insb
repz
jo
add
cmp
xor
ds
mov
fnstcw
jo
mov
dec
leave
movl
pop
bound
mov
out
mov
loope
lods
nop
jmp
cmpsw
sub
lahf
cld
or
aad
cli
sub
push
rorb
jo
pop
ret
test
xchg
or
addb
push
xchg
faddl
dec
shll
jb
mov
bound
jns
push
lcall
mulb
and
mov
in
hlt
lock
pusha
fs
cmp
mov
push
adc
cs
sbb
js
xchg
jo
scas
test
jmp
xchg
sub
sbb
mov
aad
rorl
inc
pop
xchg
mov
mov
and
add
lahf
rclb
fstps
xor
frstor
jge
out
cmpl
sub
mov
subb
int
aad
push
mov
into
push
add
ja
inc
xor
mov
lds
jle
pop
jl
insb
pusha
jo
mov
inc
jns
mov
cmpsb
lds
divb
andl
iret
add
cmp
jns
dec
in
jbe
mov
nop
xchg
je
test
outsb
push
jo
test
mov
jo
cs
xchg
jo
sub
int
std
add
pushf
in
inc
sbb
hlt
push
fs
xor
pop
push
mov
cmp
adc
add
mov
jb
fidivl
sti
dec
mov
outsl
jle
jo
lds
int3
jo
loope
ret
cmp
add
jo
in
or
jo
adc
xor
jo
jmp
repz
jle
insb
int
outsb
movsb
inc
mov
adc
push
xchg
cmp
push
mov
das
inc
repnz
lea
ljmp
cli
and
aas
xchg
dec
or
leave
jo
imul
inc
push
cmp
jge
jo
pop
outsl
loop
les
repnz
jb
jo
lea
mov
push
push
nop
xchg
or
roll
xchg
movsb
jbe
test
cmp
leave
and
jge,pn
mov
stos
adc
hlt
loope
andb
repz
int
jmp
stc
in
pop
in
lcall
inc
xchg
jg
mov
movsl
into
ret
loop
rcpps
add
jb
mov
jo
popf
lds
out
hlt
mov
int3
mov
pop
pop
je
and
adc
cmpsl
js
xchg
xor
repz
hlt
mov
mov
je
outsl
shrl
add
inc
imul
pop
cmp
shrl
mov
ds
pop
xchg
or
jo
dec
orb
lds
jbe
inc
fdivl
push
sbbb
and
jns
addr16
jo
cld
lret
mov
adc
push
sbbl
mov
shll
out
daa
incl
jo
lret
push
and
push
and
jmp
pop
adc
std
mov
les
adcl
jnp
pushf
jg
jmp
test
cmpsl
lret
leave
mov
push
mov
inc
pushf
push
pop
push
mov
mov
jo
aam
out
cmp
mov
int3
mov
sub
jo
pop
mov
mov
mov
or
push
adc
pop
js
jo
aas
add
inc
nop
aad
sub
daa
test
pop
push
push
gs
jo
rcll
adc
jo
cmp
fdivrs
aaa
inc
cmp
jp
lock
xchg
adc
mov
xchg
bound
push
loope
pop
insl
mov
data16
push
mov
sub
pop
in
jno
push
test
pminsw
mov
cld
insb
leave
adc
bound
mov
and
sahf
jo
rcl
mov
std
cmpsl
scas
inc
sar
mov
pop
sti
fwait
jmp
shll
loope
movsl
lahf
push
jo
je
push
jo
mov
fldenv
mov
jno
xchg
adc
or
int
shll
mov
add
adc
and
sbb
xor
push
ss
inc
cmpsb
sarl
lock
lock
add
mov
mov
pop
ljmp
jno
nop
sub
popa
xchg
sbb
test
cld
btr
jo
fisttps
aaa
out
push
push
add
sub
jecxz
jo
mov
jl
jo
movsl
insb
imul
xchg
js
xchg
or
push
xchg
shll
jmp
scas
jbe
lahf
les
lds
push
jl
imul
adc
jb
jo
jecxz
movsb
sbb
push
push
mov
add
xchg
jg
jae
xor
jns
push
inc
xchg
int3
mov
sbbb
sbb
and
jo
adc
stos
scas
adcb
xor
mov
out
push
cmpl
xor
sbb
dec
sub
or
push
subb
mov
pop
push
outsl
sbb
jo
xor
lcall
sti
mov
iret
or
fldl
jns
aam
jo
cmp
int
ret
mov
sbb
add
jne
jo
call
push
mov
lcall
rcrl
mov
lcall
jo
in
cmp
call
push
jmp
js
inc
and
jo
call
bound
cmp
je
andb
cmp
outsb
pop
jo
lock
xchg
push
push
push
inc
and
inc
jp
fdivl
sub
pop
ja
data16
sbb
xor
push
jne
adcl
repz
arpl
xchg
rcl
movsl
push
std
in
jle
out
jo
int
ds
mov
call
cmp
and
or
jge
das
loop
imul
jge
push
dec
adc
inc
out
movsl
pushfw
xorl
rol
push
add
ror
or
dec
or
stos
jl
cmp
arpl
fs
mov
add
out
fmull
adc
xor
inc
pop
jo
icebp
xor
mov
cmp
mov
or
stos
std
je
jo
jbe
cmp
inc
mov
jo
and
arpl
imul
inc
adc
push
ret
adc
inc
popf
lods
push
stos
mov
mov
xchg
nop
jb
shrl
jo
jmp
xchg
xor
add
cld
jo
xchg
out
lds
shlb
aas
shl
outsl
jo
cs
and
pandn
jo
push
test
pop
sbb
jo
fiaddl
sub
mov
mov
hlt
xchg
add
jo
cmp
mov
inc
js
jo
into
dec
xorb
dec
in
fisttpll
mov
sti
push
in
adc
out
rcrl
and
push
inc
into
jo
ja
pop
sub
jb
jo
inc
sbb
cmp
outsl
int3
filds
loope
jo
mov
mov
jge
shlb
lods
sarl
add
cs
lahf
push
jo
pop
leave
ljmp
mov
divl
jns
jno
repz
movsl
rol
fsubrs
popf
jo
mov
dec
inc
int3
pushf
lock
mov
mov
mov
subb
or
mov
fcmovnbe
sarl
jo
xchg
add
and
jp
sarb
jo
inc
lcall
jo
movsb
int
pop
clc
fs
cmp
repnz
adc
mov
nop
js
jle
xor
or
imul
push
inc
push
dec
out
loope
nop
std
mov
outsl
or
jo
imul
jo
dec
out
rcrl
bound
cwtl
test
inc
mov
scas
insb
adc
or
cs
jo
mov
dec
mov
jb
out
add
sbb
inc
je
fisubl
pop
push
lret
insb
jo
rcl
std
xchg
imul
xchg
inc
ss
mov
adc
lret
inc
jo
add
cmp
jns
inc
sbb
testb
pop
inc
cmp
jne
jns
add
lock
push
in
enter
xchg
push
pushf
mov
gs
jecxz
mov
sbb
negl
mov
push
int
push
jo
fistpl
lds
pop
push
pop
push
jecxz
in
jp
inc
xor
xor
mov
mov
cmp
shrl
dec
mov
test
jo
cmp
xchg
subl
iret
int
ret
jo
sbb
mov
scas
lret
test
andl
lds
add
testl
loop
sarl
jo
ret
dec
xor
xchg
cs
jo
mov
rclb
mov
cmc
adc
mov
lods
jb
or
punpckhbw
or
add
or
jae
leave
push
lods
pop
loope
repnz
add
shr
dec
cmp
ja
inc
jo
cld
push
mov
int
xor
push
cli
xorb
rcrl
movsb
dec
roll
cmpb
out
adc
cmpsb
cmpsl
cld
insb
sub
add
xchg
jo
aas
sbb
sub
push
dec
jae
enter
dec
pop
divl
addb
xor
nop
pop
mov
mov
inc
sete
lock
fdivl
test
mov
scas
and
js
sbb
mov
or
cmp
xor
mov
sbb
mov
fsubs
inc
sub
push
scas
loope
jo
pop
cld
xchg
dec
gs
cmc
xor
jecxz
cmp
cs
jg
xchg
sub
push
add
lods
jo
iret
and
mov
loope
jo
cmp
inc
inc
cmpsl
mov
jge
jo
rclb
mov
jo
and
in
int
pop
insl
test
scas
jbe
add
jge
fs
fsubp
divb
daa
clc
in
fld
jo
ss
cmp
jmp
jo
scas
fdivrs
sub
and
shlb
cmp
sub
push
cmp
lahf
lret
push
addl
sahf
jo
mov
enter
mov
adc
add
cmc
cmp
lds
in
and
pop
push
jmp
sbb
dec
dec
adcb
jo
ljmp
jo
pop
mov
xchg
jo
rol
ret
lods
repz
push
sub
daa
insb
xchg
dec
inc
js
and
lock
xor
push
stos
js
push
mov
xchg
rcr
sub
data16
xchg
fnstenv
ret
sub
or
jo
dec
and
pop
call
xor
adcb
mov
jo
mov
inc
inc
in
lds
sbb
or
hlt
sbb
out
in
push
inc
rorl
xor
sub
ja
js
add
adc
test
push
cmpb
leave
jno
test
mov
loope
repnz
enter
pop
aam
and
jo
and
cmp
jo
sub
jae
jle
jo
nop
icebp
int
int3
cmp
or
jo
mov
push
mov
std
test
fstl
lods
pop
test
and
cmpsb
andps
shlb
jb
jo
sub
lds
movsb
lock
mov
jmp
aaa
out
jo
or
aas
shll
sti
in
add
pop
xorb
xor
sub
xchg
leave
ljmp
out
test
pop
stc
pop
int
loopne
push
cmp
mov
mov
push
mov
mov
jno
aad
mov
roll
out
cmc
pop
jo
ljmp
jo
inc
out
cmpsl
push
jl
int
roll
xchg
and
mov
push
jo
dec
mov
or
xchg
jmp
jnp
dec
loope
lods
sbb
cmpsb
lea
push
sbb
xchg
sar
rcr
lahf
push
js
aam
fidivrs
cmp
xchg
jo
sub
pusha
js
int3
and
shll
push
in
mov
std
nop
fwait
xchg
cmpsl
cli
pop
aad
mov
fildll
in
inc
sbb
pop
leave
jg
push
stos
jo
adc
pop
push
push
mov
out
insb
dec
mov
stos
loopne
mov
out
sub
sbb
lock
mov
push
jo
cltd
daa
je
movsb
std
aad
jge
faddl
jg
pusha
lds
shlb
cmp
add
jnp
jo
leave
iret
clc
inc
in
xor
jo
push
sub
stc
and
and
loope
js
out
inc
jo
xor
scas
repnz
jae
mov
and
sub
into
xor
jo
adc
lods
insl
test
jb
or
jp
jmp
mov
out
bound
mov
lret
jo
out
mov
andb
insl
adc
pusha
or
iret
mov
add
sti
movsb
pop
fs
sbb
and
jo
push
orb
orps
jne
xlat
data16
sub
int3
insb
fst
aaa
ror
jo
or
in
cmp
lds
aam
xchg
hlt
jnp
nop
cmp
pop
outsb
xchg
repz
arpl
cmpsb
jno
mov
imul
add
pop
pop
jo
loope
mov
jo
pop
out
xchg
insl
add
jo
call
mov
jb
hlt
push
jl
adc
pf2iw
sub
stos
arpl
jo
xorl
and
jmp
xchg
jo
mov
and
fwait
loope
jo
aaa
aam
xchg
divb
sti
int3
ret
shl
test
sub
mov
cmp
negl
xor
adc
ljmp
loope
fstl
cld
push
adc
scas
daa
std
data16
push
xor
leave
mov
xor
mov
fcomps
or
or
jmp
cmp
jo
push
movsb
sub
jb
and
jo
ret
fldt
lock
orb
pop
lahf
inc
es
sub
jecxz
sbb
lret
sub
sbb
stos
jo
andb
jo
mov
pop
adc
or
jbe
jo
fisttpl
jnp
cwtl
out
shll
pop
movsl
popa
xchg
inc
add
lods
jg
xorl
clc
inc
aad
insb
jo
or
movsb
xchg
mov
inc
add
sbb
in
push
jo
push
xchg
mov
or
adc
test
sbbb
mov
jo
lods
inc
and
push
stos
jp
icebp
mov
ret
push
jo
cmpsl
and
fxch
test
gs
jo
imul
dec
add
pop
lds
test
bound
xor
adc
pop
dec
inc
jbe
pop
mov
clc
jnp
dec
xchg
fs
jo
test
dec
inc
mov
lret
mov
lock
inc
jo
pop
sbb
jne
aad
push
call
xor
test
inc
jns
xor
std
stos
jo
ss
lcall
imul
arpl
int3
jecxz
insl
sbb
leave
jo
idiv
cmp
adc
stc
jo
push
mov
in
inc
add
fs
leave
sub
js
das
push
out
sar
sbb
xor
cmovbe
hlt
jo
stos
mov
insl
mov
shlb
cwtl
cmpl
cmpsb
or
add
mov
mov
lea
outsl
jo
nop
pop
and
shll
dec
add
xor
sbb
fstps
pop
dec
mov
pop
jo
add
bound
ja
adc
or
test
xorl
xchg
cmc
data16
lock
inc
repz
in
test
xor
jo
jmp
cmp
les
dec
mov
nop
push
inc
loopne
lds
sub
ret
cs
enter
out
jnp
insl
jo
into
add
push
inc
and
mov
adc
arpl
lret
jl
std
jmp
jo
aad
jnp
pop
pusha
jo
lret
test
xchg
jecxz
jo
or
adc
jo
inc
mov
imul
loope
out
jo
adc
es
inc
popf
bound
negb
enter
jo
fnsave
and
data16
pop
mov
lock
inc
shlb
jno
adc
sub
adc
bound
jo
add
lods
push
mov
std
jo
cmp
mov
adc
rcrl
xor
hlt
push
jo
sti
addr16
mov
mov
mov
mov
divl
inc
jo
mov
testb
into
or
push
push
jae
imul
jl
int
femms
aas
push
xor
push
in
test
xchg
dec
jae
adc
icebp
lods
adc
mov
push
adc
enter
les
mov
out
ja
lcall
jge
push
mov
dec
adc
xor
cwtl
jo
pop
ret
sub
fdivs
es
jo
outsb
clc
aam
test
jg
aad
addb
sbb
jo
test
inc
pop
fisubl
jo
mov
jmp
push
inc
jbe
mov
lock
loope
jb
sbbb
ret
lds
enter
sbb
xchg
int3
mov
nop
psubw
shlb
add
cmpsl
call
cmp
jae
cmp
dec
out
push
gs
jo
hlt
nop
xchg
jecxz
inc
sub
dec
cmpsl
js
and
enter
jo
clc
out
inc
loope
dec
jl
jo
dec
ret
or
mov
mov
push
jo
adc
scas
push
insl
jo
jmp
sub
sarb
jo
add
cmc
jb
mov
je
loop
jo
sub
sbb
or
xor
in
lcall
inc
nop
and
notl
and
leave
pavgb
mov
repnz
ret
rcrl
jl
push
hlt
mov
xor
imul
jle
mov
clc
inc
xor
lods
cmp
cmp
mov
rcrl
leave
mov
fisttpll
cs
or
out
ret
pop
iret
sahf
in
or
sub
jl
push
lds
push
jo
pushl
jb
test
jo
loopne
push
xlat
add
and
ret
lret
fwait
cmpb
daa
sub
xchg
or
adcl
leave
lret
jo
outsl
pop
mov
hlt
gs
std
out
sub
mov
cmc
js
ret
mov
out
or
cmp
mov
mov
jne
sub
mov
push
inc
xor
in
lds
lahf
clc
and
mov
pop
into
ljmp
and
in
cmp
lds
bound
fists
jo
das
pusha
mov
leave
jno
dec
add
subl
out
fistpll
scas
xchg
inc
orl
insb
shl
adc
pcmpgtb
aad
rcrb
inc
jp
inc
jo
inc
xor
or
jo
push
and
inc
jo
arpl
rorl
inc
fsubrp
jb
stos
push
repz
nop
mov
shrb
jo
push
leave
popa
rclb
sbb
jo
sahf
pop
test
lret
mov
mov
leave
jo
addr16
xor
push
mov
push
outsl
imul
lea
xchg
lods
jo
cwtl
dec
cmp
jo
and
push
inc
mov
inc
jecxz
shlb
add
mov
cmp
fwait
jl
imul
lods
pop
adc
jo
in
ds
pushf
sbb
out
fistps
jg
adcb
mov
cmpsb
add
cmp
insb
pop
inc
pop
mov
push
xchg
clc
fnstenv
shlb
mov
sbb
cmpsl
pop
jle
and
sub
icebp
das
jle
insb
stos
lret
push
push
cmpb
cmp
jnp
xchg
sti
jo
ret
mov
movsl
push
std
adc
test
inc
mov
stos
scas
xor
pusha
mov
inc
rclb
inc
xchg
test
add
lock
jns
rolb
icebp
cmp
add
test
cmp
inc
jb
or
lock
xchg
in
js
lret
lds
rolb
mov
and
gs
mov
lahf
sub
pop
sbb
mov
lods
xor
cmc
add
add
xlat
lea
ja
and
les
test
inc
cmpl
mov
lods
jg
xchg
cmp
addl
popf
imul
addr16
sbb
jg
mov
xchg
in
fcomps
aas
push
out
xor
shll
mov
and
sbb
xlat
fs
xchg
movb
jns
inc
out
jo
push
movsb
ret
jns
xor
or
repz
push
popa
std
cmp
xor
add
mov
mov
out
fcomps
and
and
scas
cmpsb
icebp
sbb
jo
lret
pop
dec
inc
test
add
pop
cmc
ja
xchg
push
jae
jle
lea
fwait
jo
dec
cld
add
sbb
push
mov
inc
pop
sub
ljmp
sarl
or
test
jo
in
push
jo
mov
jne
pop
gs
jb
sub
push
insb
cmp
mov
cmpl
mulb
seta
orb
ret
add
xchg
js
mov
inc
ds
adc
daa
fwait
cmpsl
icebp
jle
pop
cwtl
fisttpl
jo
pop
mov
xchg
dec
aad
bound
ret
pushf
inc
stos
jb
dec
jo
je
mov
or
jo
inc
cs
les
lock
mov
push
jo
into
fistpll
mov
and
mov
popf
adc
shll
lds
cs
std
js
out
js
push
cli
xor
cmp
insl
mov
mov
push
dec
aas
mov
push
sbb
jo
xchg
rol
rolb
dec
les
insb
jo
adc
lods
jo
mov
inc
add
sahf
fists
add
pop
mov
or
movsb
jne
nop
sti
cmp
ret
cmp
lds
mov
jno
shl
inc
lea
das
or
aaa
push
fadds
fists
mov
inc
pop
cmp
cwtl
mov
xchg
mov
ret
fimuls
xchg
push
jo
lds
push
jbe
lods
out
das
jo
mov
dec
das
cli
shlb
sbb
pop
jo
inc
jmp
jo,pt
shlb
jmp
jbe
xor
imulb
mov
push
jp
fnstenv
cli
xchg
fisubrs
push
pushf
jo
adc
movsl
dec
jbe
jmp
xlat
inc
imul
xorb
cmp
je
loopne
stos
add
scas
pop
adc
ret
mov
lods
xchg
leave
lock
addr16
sbb
arpl
jo
fadd
dec
and
xchg
loope
dec
popl
adc
mov
or
test
gs
fnstenv
iret
cmpsl
imul
xorl
gs
scas
sub
and
mov
cmp
xor
sbb
pop
in
sub
mov
sbbb
sbb
jo
jmp
jp
nop
std
jne
leave
add
ret
mov
inc
sub
icebp
or
adc
mov
scas
jo
push
sarl
hlt
imul
fdivrs
push
cld
jns
push
xor
loope
xorb
push
iret
lcall
mov
sarl
add
xchg
jl
test
jecxz
lahf
mov
ret
stos
js
xchg
pop
es
pop
outsb
leave
push
subb
fisubs
nop
ljmp
sbb
or
mov
loop
dec
jo
icebp
mov
bound
sub
or
push
lahf
mov
dec
cmpsl
movsb
push
lock
stc
insb
sbb
or
push
mov
inc
jo
clc
sub
out
dec
pushf
inc
std
mov
sti
jo
mov
hlt
xchg
aad
dec
cmp
js
mov
sbb
jo
lcall
mov
inc
ret
les
mov
adc
inc
pushf
shll
cmp
repnz
push
data16
ret
jl
cmp
push
fsubrp
fs
loop
jbe
test
ret
push
xchg
push
lahf
push
cltd
jo
bound
sub
adc
in
js
rcrl
xor
add
add
mov
xchg
cmpl
dec
jo
clc
mov
mov
stc
daa
mov
mov
adc
and
jo
mov
cwtl
mov
rcl
fiadds
leave
cltd
int
inc
push
or
out
adc
mov
jl
jp
out
xor
add
sbb
jo
fisubrs
and
fsubs
std
cmp
dec
cmpb
sub
mov
sub
adc
bound
xorl
sbb
fdivl
xchg
pop
fs
enter
lds
nop
jecxz
es
ja
xor
mov
inc
lock
mov
mov
aaa
or
mov
jo
sbb
adc
leave
ror
push
mov
mov
sub
sbb
cmp
stos
loopne
shrb
lods
inc
icebp
or
jne
cli
leave
aas
das
push
pop
mov
push
testl
xchg
into
push
adc
inc
mov
or
sub
sub
sub
xor
clc
and
push
mov
ss
jmp
pop
stos
push
mov
xchg
xor
aas
fmull
ret
jne
pushf
lods
mov
jae
jo
jb
ret
mov
jo
popf
push
lds
aaa
pminsw
jne
jle
mov
jo
lods
jae
std
hlt
test
bound
push
jne
jo
push
lds
xor
sub
jl
xchg
xchg
pop
cmp
mov
jo
inc
out
push
fisttps
cmp
xor
je
mov
add
cmpsb
jo
leave
dec
notl
pop
pop
lock
jo
pop
ret
jge
mov
push
xor
sbb
fmul
push
pushf
jl
jmp
jo
test
imul
out
adc
mov
push
rcrl
pop
out
out
jo
jge
loopne
cmc
mov
dec
frstor
and
jnp
lret
lcall
mov
data16
dec
aad
push
jo
or
outsb
mov
push
pop
jae
push
jp
mov
jo
pop
adc
xor
jl
pusha
mov
inc
adc
jo
lock
xchg
ljmp
push
adc
subl
adcb
push
enter
jo
add
xchg
mov
push
cltd
movsb
in
mov
ret
bound
mov
adc
imul
mov
mov
add
shr
in
ja
sub
mov
scas
loopne
nop
mov
iret
jb
dec
jno
lds
insl
fcoml
data16
mov
sti
js
pop
mov
xor
sub
popfw
jb
lahf
jo
hlt
sub
mov
inc
jo,pt
sti
cmp
cwtl
xlat
and
cltd
ret
js
mov
lds
mov
pop
addr16
xor
inc
test
pop
mov
clc
lret
call
into
pop
jo
rcrl
pushf
cs
imul
test
es
data16
mov
cmp
jo
and
add
lds
subb
dec
fistps
push
pop
hlt
lret
sub
mov
jo
sbb
and
jo
fcmovb
test
add
popf
xchg
mov
je
shrb
jge
xor
lods
inc
or
enter
adc
mov
fs
jne
xchg
jae
pop
mov
cwtl
fcoms
shll
xchg
dec
fldenv
imul
hlt
and
xor
dec
les
in
hlt
xor
jo
jns
pop
cld
enter
push
pop
xlat
mov
jmp
xor
test
xor
rorb
mov
repnz
jb
repz
imul
sahf
xor
scas
fidivrs
sti
add
cld
shrl
and
shll
mov
aad
subb
xor
ret
add
adc
mov
dec
sbb
jecxz
jo
es
cli
sti
xor
xchg
imul
and
imul
cwtl
dec
insb
repz
aam
xor
popf
jns
mov
sub
loop
or
xchg
or
es
sub
mov
jo
pop
mov
rolb
outsb
psubsw
lods
jo
fs
sbb
push
subl
nop
bound
enter
insb
xchg
fcompl
popa
into
divl
xchg
mov
mov
lds
sub
loope
pop
repnz
icebp
pop
cs
xor
jo
mov
int
sub
jae
jo
shlb
cmp
js
lret
sahf
les
stc
inc
fidivs
push
jo
ret
std
iret
adc
fld
adc
xor
cld
add
or
lods
jmp
xchg
ret
lahf
fidivl
ret
sub
cwtl
cmp
mov
leave
nop
aas
dec
shrb
orb
and
jo
or
cmp
xor
xor
mov
push
cmp
jo
andl
rcr
loopne
out
mov
ja
inc
jno
mov
mov
pop
inc
lds
loop
jo
mov
imulb
sub
in
mov
ret
xor
ret
rorb
test
add
xchg
jo
pop
das
xchg
mov
jo
sub
jo
lahf
dec
bound
xor
gs
aas
fs
inc
stos
and
inc
out
stc
xchg
movsl
xor
sti
jge
sub
cmpsl
add
jo
or
pushf
movsb
push
data16
out
mov
mov
jo
inc
fs
push
inc
jo
out
pop
out
sarb
pop
nop
movsl
cmp
js
jnp
or
jecxz
fists
mov
jmp
adc
nop
add
ret
testl
xchg
push
dec
test
insl
mov
roll
adc
xlat
adcl
test
push
cmpsl
and
push
hlt
sbb
jo
cmp
orl
mov
cmpsl
jo
mov
sti
mov
insl
insb
scas
mov
cmc
jo
and
inc
jo
outsl
push
or
inc
or
clc
jo
cmpsl
andl
xor
stos
repz
data16
dec
flds
ret
push
sub
push
aas
cmp
pop
call
nop
ljmp
lret
bndldx
dec
xchg
sbb
hlt
out
jmp
loopne
xor
mov
jo
add
push
push
lds
xorl
in
mov
jo
popf
pop
lds
inc
test
nop
jle
lret
lods
jne
jns
jle
jo
adc
sub
outsl
sbb
or
fs
aas
jo
ret
push
push
mov
cwtl
inc
inc
mov
inc
or
push
lods
adcb
shrb
jae
andb
pcmpgtd
push
cmovno
or
in
addb
xor
scas
mov
repnz
push
cltd
pop
dec
mov
cmp
add
xor
cmpl
hlt
fmuls
jo
cmp
push
sub
rol
sbbb
adc
add
pushl
add
cmp
sbb
jo
arpl
sub
push
or
jge
jle
jl
aad
mov
scas
int
jo
pop
orl
cmp
pop
insl
jo
loopne
adc
and
jo
lds
mov
jmp
lea
xchg
shlb
pop
mov
adc
add
fnsave
rcrl
dec
cltd
xchg
pop
jo
sbb
mov
ret
sub
pop
sub
imul
fisttpl
movsl
js
daa
jle
fcoms
aad
insb
jb
std
fwait
in
jno
int3
jo
incl
shlb
sub
adc
jo
sahf
ret
out
sar
jo
cmp
mov
cmp
jo
loope
push
ret
inc
das
insl
lret
add
leave
jb
xor
jo
dec
mov
pushf
jo
xor
rol
movsl
xorl
rcll
inc
adc
bound
mov
and
scas
outsb
data16
shlb
pushl
sub
les
adc
mov
xchg
sarl
cwtl
jo
aaa
pop
and
arpl
pop
adc
jne
loop
roll
ret
mov
lods
mov
inc
inc
mov
jo
add
das
ret
sub
ljmp
push
iret
sub
fisttps
ja
and
outsl
sub
push
js
and
dec
pop
test
xchg
mov
out
sbb
dec
fs
leave
dec
xchg
or
add
jo
add
push
xchg
bt
pop
xchg
mov
cmp
sub
jae,pt
and
mov
movsb
aam
cmp
leave
mov
jo
cs
xchg
or
add
vpshuflw
xor
popa
adc
jo
jbe
mov
push
xor
lds
dec
jmp
mov
jo
subb
jo
in
movsb
sbb
jge
arpl
add
push
mov
jo
insl
and
rcrl
mov
jo
aad
lahf
inc
aam
and
mov
mov
push
mov
mov
jbe
add
icebp
push
jo
xor
push
jo
xchg
mov
jne
jp
mov
sub
nop
or
or
xchg
js
sbb
enter
stos
add
dec
jb
aad
fsubl
in
inc
and
stos
cmovno
mov
or
and
dec
aaa
fs
dec
mov
sahf
add
aam
fwait
aad
lds
jns
test
imul
int3
pusha
ja
stos
cmp
les
ljmp
int
jl
add
mov
std
jecxz
xchg
inc
fs
sahf
cmp
movsl
push
mov
sbb
sub
pop
jo
in
clc
cs
jo
xchg
idivl
xchg
ss
in
fisubrl
dec
and
lea
mov
push
paddw
loop
js
bound
jecxz
enter
shl
jo
outsl
rclb
xchg
cmp
inc
jo
pop
xor
jl
jbe
nop
ror
inc
inc
popa
jp
xor
mov
add
dec
jl
xchg
pop
leave
sub
adc
mov
mov
shlb
inc
jbe
cltd
movsb
or
pushf
sbb
loopne
mov
fnstenv
inc
repz
sub
and
out
test
enter
inc
aad
sub
out
pop
cli
fimuls
xchg
add
jle
aas
xor
lret
mov
pop
jo
mov
xor
mov
cmpl
inc
insb
jl
xchg
nop
cli
idivl
fs
ja
sti
sub
add
sub
mov
aas
js
lods
adc
jo
orb
sti
push
jo
mov
inc
pop
inc
jg
jo
cli
rclb
enter
mov
scas
add
call
jle
nop
cmp
push
ftst
fistpll
pusha
ss
mov
sub
insl
loop
aas
stc
push
jbe
in
loope
mov
cld
iret
pushf
adc
sbb
icebp
mov
or
mov
dec
add
push
mov
sub
xchg
inc
cmp
jo
addr16
bound
xlat
xor
dec
push
out
add
jo
inc
shrb
push
or
in
imul
bound
push
leave
icebp
jo
ss
push
or
mov
rol
cmp
xchg
mov
rcrb
mov
adc
ret
movsb
cmpsb
jge
xor
arpl
adc
and
dec
cmc
sub
in
pop
push
sub
mov
movsb
jo
push
dec
cmpsl
sar
sbb
jo
bound
and
aas
jnp
scas
int3
lds
xorl
or
sti
imul
or
stos
cltd
js
hlt
mul
jo
cmpsb
xchg
jne
xchg
jle
jo
int
cmc
test
cmpsl
add
sub
std
mov
push
sbb
lea
popf
mov
xor
hlt
test
setae
dec
ret
les
loopne
fcoml
mov
pushf
jo
int
cmpsl
cmp
imul
xor
sbb
adc
aas
fnstenv
or
rcrb
jo
aaa
add
jmp
cmp
scas
js
sub
jo
mov
gs
loope
jo
and
cmp
and
sbb
or
xchg
xlat
cmpsb
mov
jo
cmp
fsubrp
pop
repz
jo
pop
out
movsl
inc
in
jae
pop
movntps
jp
outsb
pop
cmp
shll
ds
xchg
mov
orb
scas
mov
xor
icebp
xchg
and
rcrl
mov
inc
sbb
aaa
jo
cmp
arpl
in
or
sub
popa
inc
test
lea
xor
push
push
xchg
lock
fidivs
pop
les
jo
ror
mov
jmp
or
inc
add
jmp
or
adc
scas
push
push
add
add
push
lock
leave
mov
repnz
hlt
movsl
jo
rcll
push
pop
inc
mov
addl
push
or
ret
and
push
ret
imulb
push
jo
xor
fstps
inc
aad
jb
shrb
push
mov
push
sbb
xchg
aaa
adc
and
leave
es
je
loope
jo
mov
push
cmpb
jo
aam
mov
xchg
out
push
push
lds
pop
mov
nop
sub
push
mov
stc
jb
mov
jle
mov
and
roll
leave
or
aas
bnd
lds
adc
add
loopne
scas
push
mov
es
bound
aad
jbe
mov
ret
lret
push
fdivs
jo
stc
inc
jno
mov
je
xlat
inc
imul
jo
and
xchg
sti
pop
cmp
xadd
hlt
shl
movsb
das
xchg
icebp
jo
xchg
mov
inc
xchg
xor
jo
mov
fbstp
hlt
icebp
jo
ja
js
loop
insb
jo
mov
pop
pop
lret
sub
fisubrs
rolb
dec
jo
sti
mov
dec
jo
mov
xor
jp
jge
add
jnp
jo
mov
loope
jb
movsb
push
aad
in
test
test
xor
and
cmp
les
lea
lds
lods
enter
sbb
jae
js
jo
fildl
xchg
mov
pop
jo
mov
xor
jo
int3
add
jo
and
or
jo
push
dec
pop
cs
mov
mov
mov
leave
xchg
and
push
cmp
outsl
mov
aad
shll
sub
ret
mov
sahf
gs
iret
lret
inc
cmp
shrb
sub
hlt
pop
lea
adcb
dec
xorl
divb
xor
push
sbb
push
and
aad
in
enter
lahf
imul
cmp
sub
mov
jae
movaps
push
bound
jns
dec
out
mulb
scas
jmp
adc
cmp
lods
insb
add
outsl
cmp
inc
shlb
jg
shll
leave
movsl
ficomps
mov
inc
cmp
out
aam
sub
xchg
das
popa
scas
push
leave
addr16
arpl
fistl
lock
jne
jo
mulb
jmp
test
leave
jo
arpl
imul
jb
push
jo
and
in
mov
mov
xchg
mov
jne
jp
push
jo,pt
das
push
mov
mov
outsb
adcb
je
aaa
lcall
adc
and
or
fstpt
imul
push
dec
stos
lahf
je
jbe
testl
icebp
mov
shl
fnstcw
fisubrs
or
pushf
or
cmp
xor
enter
jmp
aas
push
mov
das
jo
cmpsl
jl
clc
sti
pop
push
jno
out
or
fdivl
jp
mov
or
and
xlat
jns
jo
cmp
pop
ret
idivl
add
cli
jo
stos
add
movsl
ret
jge
icebp
xchg
push
and
sahf
iret
stos
ja
push
dec
xadd
add
adc
xor
scas
xchg
mov
jo
hlt
popf
data16
or
adc
add
je
inc
mov
mov
fsubl
xlat
mov
cld
fs
inc
mov
and
sahf
push
jl
loop
mov
je
ja
jo
jmp
xor
popf
adc
ret
mov
or
jbe
fisttpl
movd
lods
jge
push
cld
xchg
dec
test
jb
mov
push
push
mov
cmpb
push
mov
pop
dec
cmpl
imul
ja
mov
aad
notb
jo
cmp
xchg
into
scas
push
lds
lret
xor
dec
mov
push
gs
add
jo
pop
push
mov
jo
cli
daa
jns
mov
jecxz
loope
data16
int3
pop
sarb
loop
or
sub
fidivrl
jo
inc
dec
xorb
fmulp
inc
shll
mov
mov
addr16
nop
leave
xor
add
arpl
int3
sbb
jp
jmp
jmp
int3
add
test
and
jae
jo
xchg
push
test
xchg
inc
sbb
push
leave
mov
jo
add
and
dec
out
stc
jo
sub
lods
lea
and
lahf
xchg
aam
scas
and
mov
and
xor
rcrb
in
cs
push
jo
cli
sbb
pop
jo
nop
inc
and
xlat
cmc
shll
pop
int
ret
insl
mov
jo
lock
sbb
jo
mov
dec
xorl
enter
pop
add
xorb
icebp
imul
adc
mov
inc
arpl
or
add
cmp
in
and
push
lcall
insl
pop
sbb
cmpb
call
in
xor
or
jo
test
mov
cmp
mov
jo
push
outsb
ret
cmp
pop
je
lds
mov
inc
cmp
and
dec
test
push
jb
or
jl
daa
aas
lret
les
pop
inc
test
or
jo
and
call
stos
mov
loope
ret
or
sbb
int
dec
cs
xor
aaa
mov
ret
out
frstpm(287
and
mov
or
lcall
les
imul
cmpsl
ja
xorb
jo
mov
ljmp
cmp
shrd
sub
jle
in
loope
mov
movsl
in
sti
lds
mov
jo
inc
sub
out
pop
sub
push
or
in
mov
cld
test
andnps
mov
push
mov
je
add
in
sbb
and
sub
pop
cmp
or
int
fnstenv
jo
pop
xchg
pop
sbbl
push
jmp
sub
and
and
cmpsb
movl
mov
in
ret
shrl
test
cmp
mov
sbb
lret
jo
push
mov
push
shll
bound
nop
cmp
jo
dec
add
push
roll
jo
adc
jp
add
jo
lds
xor
xlat
jmp
fsubs
xor
adc
out
jg
jl
test
xor
cltd
pusha
jo
xor
sub
or
in
xchg
inc
inc
iret
jo
xchg
mov
mov
jo
cmovnp
xlat
repnz
push
arpl
leave
cmpsl
sbb
fisttpl
shll
nop
cmova
roll
pop
jns
lds
cmc
insb
int
adcb
inc
sub
sbb
nop
jo
mov
test
jo
jne
cmp
adcl
cli
xor
jne
dec
xchg
and
aas
adc
jns
jo
mov
imul
adc
data16
sub
jo
leave
das
jae
test
jp
lahf
bound
jo
daa
jl
je
cwtl
jbe
mov
inc
mov
jle
ficompl
lock
mov
fmull
add
cmp
xchg
mov
popa
aaa
mov
jo
xchg
mov
xchg
jns
jo
pop
repnz
pusha
or
adc
add
pop
sbb
cwtl
aas
push
adc
nop
bound
adc
inc
jmp
test
jo
mov
mov
jo
test
stos
mov
ret
sbb
nop
cmp
jno
dec
ret
jo
fs
jge
pop
fidivl
in
cwtl
loop
fisttps
jb
mov
inc
in
jo
addl
data16
cltd
stos
push
sar
bound
rep
jo
lahf
aad
test
dec
jo
arpl
cmp
dec
jo
mov
das
leave
bound
inc
loope
shlb
mov
les
xchg
dec
ja
jnp
mov
scas
xchg
xor
lret
cltd
insl
repnz
push
push
out
xchg
push
rorb
call
imul
or
sahf
add
aas
xchg
movsb
cli
add
jo
aad
out
mov
and
inc
jae
inc
mov
xor
mov
popa
cs
inc
test
ja
call
lret
lcall
bound
mov
bound
push
sub
popf
fs
in
jnp
and
push
fsts
and
scas
jb
cmp
adc
push
xchg
mov
addr16
orb
ja
fistpll
mov
inc
into
bound
jnp
push
bound
repz
cmp
and
data16
lret
cmp
outsb
push
mov
jne
jo
ret
mov
lds
xor
or
and
leave
mov
sbb
ds
insl
cmpb
scas
js
xorb
stos
and
jb
std
jo
mov
dec
sub
inc
adc
shlb
repnz
pop
cmpsb
int
push
je
ja
sbb
shll
mov
cmpsb
clc
divb
shrl
jo
mov
ja
hlt
test
add
jno
mov
jecxz
jo
daa
cli
sub
gs
jo
in
sarl
and
leave
imul
jo
ss
rol
xlat
movsl
std
or
add
jp
jns
or
enter
mov
inc
jo
scas
iret
fiadds
mov
ja
andl
lahf
bnd
lock
adc
js
aaa
rol
jo
dec
jae
aam
mov
jo
int
add
xchg
push
hlt
sub
cs
xorb
inc
dec
jo
push
repnz
jl
xor
mov
pusha
cld
jo
push
adc
xchg
xor
sub
jo
popa
out
lahf
jge
popf
mov
push
cld
fnstcw
pop
in
mov
stc
shll
or
pop
shll
insl
das
nop
push
rcl
or
jnp
sub
lret
push
lret
jo
ds
repz
int
ret
mulb
lds
inc
xchg
inc
fsts
sub
fs
sbb
data16
pop
cs
pop
inc
jo
leave
fdivrl
add
ret
jo
int
adc
cmp
les
mov
lds
or
jo
cmpsb
dec
xor
push
or
jo
enter
cmpb
cmp
mov
addr16
dec
mov
cltd
clc
ret
fiaddl
xchg
xchg
dec
nop
scas
inc
movsl
push
jae,pt
loope
mov
inc
jo
pop
rol
pop
ljmp
sub
jo
std
data16
jo
cmp
iret
inc
dec
pop
cmpsb
jo
cwtl
sub
enter
int
pop
ljmp
mov
dec
ret
sbb
jl
or
jo
jns
mov
mov
jo
xor
cmc
das
inc
xchg
loopne
sar
test
jo
movsl
mov
and
xchg
inc
push
dec
push
adc
inc
jo
jecxz
mov
dec
imul
fs
shlb
stos
xchg
into
xchg
dec
jl
sahf
scas
aaa
lret
push
jle
mov
inc
pop
add
jp
jo
sub
int
inc
lods
mov
loop
pop
cmpsl
inc
mov
jo
sub
inc
imulb
mov
ret
sbb
inc
lds
lahf
pop
ret
daa
shll
fisttpl
popa
sbb
pop
push
and
rolb
std
sub
jo
stos
dec
sub
shll
int
jl
lea
jecxz
push
stc
jb
lock
fstpl
jo
int3
adc
mov
and
jo
out
or
ficomps
jmp
fxch
scas
and
nop
ljmp
aam
or
xor
add
test
jb
push
lret
push
xor
xor
add
jo
popf
push
iret
push
mov
hlt
sub
jo
xchg
out
into
cli
sub
jmp
push
xlat
jg
inc
sbb
sbb
test
invlpg
lds
out
add
bound
inc
rcrl
add
leave
jbe
jo
cwtl
shl
inc
int
jo
sub
mov
push
dec
xor
dec
insb
push
enter
addl
mov
jo
data16
gs
jo
sub
inc
nop
int
push
cwtl
mov
subb
das
ljmp
cmp
and
jo
fdivrl
push
xchg
rcrb
adc
loop
push
stos
jbe
xor
sbb
mov
mov
mov
cltd
cmp
bound
inc
add
jo
iret
or
icebp
imul
xor
ret
subb
adc
pop
roll
sahf
jo
mov
jecxz
jo
lds
cwtl
push
cmc
ss
mov
jo
std
sub
mov
frstor
push
lds
sbb
rclb
inc
inc
mov
scas
ret
add
subl
push
jno
jo
sub
dec
aad
ja
fidivs
ss
and
jmp
andl
cs
icebp
imul
xchg
js
out
add
mov
add
lds
bound
lret
cmc
call
sbb
mov
mov
jecxz
xor
mov
xor
out
mov
jb
add
push
sbb
mov
test
ljmp
jle
iret
cmp
jo
enter
pop
jae
push
arpl
jmp
jge
jbe,pn
add
jecxz
push
shlb
daa
jge
mul
bnd
mov
sbb
popf
or
mov
pop
cmpl
sub
dec
scas
or
pop
movb
pop
jo
out
jnp
sub
mov
add
cmp
push
or
adcb
mov
outsl
shll
adc
mov
and
aam
xchg
pop
cld
and
test
sub
js
outsl
iret
mov
sub
cmp
mov
fbstp
popa
cmp
jo
movsb
xor
loopne
leavew
push
fiadds
pusha
dec
shlb
mov
lahf
js
mov
addl
rorb
andb
mov
mov
xchg
js
dec
sub
ds
or
sub
jo
enter
fs
jge
jo
dec
push
xor
idivl
pop
mov
mov
ret
data16
push
cmpsl
and
rorl
fwait
je
jo
mov
push
pop
push
adc
ret
jge
sti
and
loopne
js
cmp
jo
scas
outsb
jecxz
mov
dec
mov
jnp
bound
push
mov
and
rcll
push
les
mov
jo
dec
in
in
aam
inc
jo
testb
pop
data16
fisubs
pop
xor
test
jo
add
and
mov
loop
pushf
mov
jo
addr16
mov
push
inc
sbb
and
inc
lea
push
into
xor
jp
mov
jo
xor
or
vpshuflw
jo
mov
arpl
and
pop
js
jno
out
push
out
jo
mov
nop
gs
test
jo
mov
xor
jo
mov
jmp
int
jo
mov
lods
sbb
bound
sub
in
jo
cmp
lds
aas
out
mov
pop
xor
pop
jo
fdivrp
fs
xchg
stos
mov
jo
adc
jmp
jo
adc
fimull
aas
scas
jge
jmp
je
mov
push
fs
test
and
lds
jmp
inc
cmp
and
mov
jecxz
insb
jge
mov
or
jo
push
jge
and
mov
push
push
ja
hlt
jo
adc
fmul
mov
and
or
jle
jae
xchg
push
dec
mov
jo
lds
xorb
fnstenv
pop
xor
imul
sti
mov
inc
or
lds
addr16
adc
jae
mov
ss
pop
cltd
inc
mov
outsl
xchg
dec
xchg
in
mov
out
jns
icebp
lock
jg
scas
xorb
daa
push
fst
jns
jbe
pop
jmp
cmp
pop
cmp
and
xchg
in
mov
push
xlat
iret
scas
arpl
imull
ret
hlt
add
jo
add
jo
sbb
fwait
mov
fnop
push
cmpsl
push
ret
fs
sub
insb
inc
jge
js
insl
mov
jo
jmp
std
xorb
dec
mov
jo
fcmovbe
sti
and
pshufw
pop
xor
jo
cmp
lret
iret
add
inc
jo
int3
cli
mov
jo
movsb
xchg
shrl
bnd
push
stc
fs
dec
rorb
cmpb
arpl
jl
inc
fnstenv
xor
lds
push
loop
jle
cmc
leave
mov
les
cmp
mov
inc
outsb
fldenv
jo
and
push
dec
sbb
sbb
aas
add
jno
insb
inc
jo
sbb
xor
push
adc
mov
rol
arpl
pop
cwtl
xorl
xchg
pop
xchg
jae
push
dec
pushf
inc
lahf
insb
hlt
pop
pop
enter
sar
sbb
ljmp
stos
push
lcall
sbb
bound
jecxz,pt
and
test
dec
jb
into
jne
or
lods
repz
rcll
std
xor
and
test
stc
shll
mov
fnstenv
stos
pop
scas
cltd
add
jo
ret
lret
push
pop
jo
and
mov
stc
mov
mov
js
dec
insl
mov
mov
cmc
cmp
es
ss
push
sti
and
mov
push
int3
adc
movsb
insb
pop
push
xor
jo
nop
subl
cmp
andl
cmp
call
cmp
fisubs
dec
shrb
push
out
ret
gs
push
jo
add
lret
jno
into
and
or
shrb
sub
mov
pop
jns
rsqrtps
rol
adc
or
fwait
subb
jo
jns
mov
nop
imul
push
sbbb
popa
jo
pop
and
mov
aad
in
iret
mov
jge
shl
push
jo
test
fdivr
jl
jge
jo
jmp
ror
cs
nop
jo
inc
aad
fnstenv
in
or
loop
not
ret
stc
bound
mov
push
icebp
mov
push
push
lds
xor
cmp
repz
mov
pop
mov
mov
dec
leave
shll
push
iret
sub
repz
rcl
inc
push
jo
jne
dec
pop
push
hlt
fidivl
imul
mov
lods
loop
lea
cwtl
fs
pop
leave
je
test
mov
jle
clc
mov
das
sub
mov
push
xchg
daa
jo
int3
shll
jo
inc
sbb
push
push
pop
sub
jp
leave
push
inc
addb
xchg
cmp
xchg
ret
pusha
mov
and
and
dec
jle,pt
push
add
aad
jno
leave
idivb
lods
jp
sbb
pop
repz
cmp
shll
fbstp
loope
shl
inc
out
cmp
add
cmp
aad
fdivl
loop
outsb
cld
adc
mov
fisubs
jo
fnstcw
inc
and
push
dec
addr16
mov
pop
aad
shlb
dec
push
jo
lret
lds
add
mov
popa
shrl
movsl
mov
adc
loopne
jo
mov
sub
fs
xor
cmp
inc
mov
int
or
add
mov
fsubl
out
test
push
pop
pop
push
pop
or
mov
xorb
or
pusha
test
dec
jg
stos
jno
fs
jns
cmp
jecxz
out
jo
jp
mov
test
addr16
pusha
out
ja
js
gs
imul
ds
outsl
adc
dec
mov
inc
adc
aaa
push
fidivrl
in
daa
out
hlt
int3
sbb
fisttpl
les
scas
inc
ljmp
push
loope
or
in
inc
mov
cmp
jo
mov
cpuid
or
and
pop
xor
insb
cld
out
pushf
pop
fstps
stc
lahf
imulb
jp
js
shl
ret
jg
nop
dec
addr16
push
loope
ret
sbb
pop
inc
mov
popf
in
jmp
jo
mov
lds
pop
test
insl
xchg
cs
mov
fnsave
cmp
aaa
in
push
sbbb
sub
lods
push
scas
push
leave
jo
stc
bound
mov
jg
insb
jo
into
movsl
addl
cmpsl
jo
sahf
xchg
mov
mulb
jo
stc
mov
sub
icebp
sbb
mov
mov
test
cli
bswap
mov
add
pop
jae
mov
push
negb
in
push
lock
sub
mov
insb
test
xchg
or
jo
jno
leave
fwait
shrl
jo
dec
push
xchg
sub
lret
es
xor
jo
test
popf
sub
mov
jle
jae
add
ficoml
inc
fdivs
das
mov
pushf
jle
push
jo
push
lcall
insl
add
imul
xor
jo
push
xor
jo
stc
mov
cmp
out
jo
pop
add
in
std
jo
inc
movsl
add
icebp
lahf
rorb
mov
lret
jo
ret
push
stc
add
ss
sbbb
jo
nop
stos
gs
mov
and
jo
inc
movsl
adc
sub
sbb
js
data16
jge
and
mov
xchg
cli
push
lods
jle
sub
and
cmp
inc
mov
push
cmp
outsl
movsb
push
sbb
or
sbb
cmpsb
xor
add
sub
mov
in
jg
and
or
int
rorl
gs
test
push
sub
add
dec
and
rorb
out
sbb
fidivs
mov
das
push
rorb
mov
mov
sub
ret
imul
insl
pop
test
in
sbb
ret
imull
xchg
inc
push
and
scas
jle
divb
movsw
popf
clc
and
out
in
scas
stc
popl
xor
or
jo
setle
cmp
arpl
sbb
pextrw
sbbb
hlt
adcl
or
rorb
cld
je
loopne
jle
lods
ljmp
insb
in
jnp
mov
jo
xchg
sar
pop
addl
ret
sub
add
jmp
rcrb
jo
gs
test
mov
push
xchg
out
cli
sti
das
lret
push
cld
sarb
nop
push
mov
push
jns
call
cmpl
adc
inc
hlt
divl
jo
pop
lods
fbld
xchg
inc
shl
jo
std
sub
imul
leave
jo
inc
xchg
repnz
cld
jmp
cmp
hlt
add
inc
jmp
lds
add
jg
and
cmp
adc
mov
js
pop
popl
in
nop
or
cmp
mov
or
ret
lds
dec
dec
ror
iret
scas
mov
jo
pop
ja
cmp
add
jo
leave
cmp
popa
and
sti
nop
jns
leave
add
jo
inc
pop
in
dec
mov
jo
ljmp
fwait
xor
jle
fisttps
jo
arpl
mov
xchg
cmp
pop
jle
push
cwtl
aad
xchg
xlat
jecxz
cmpsb
xchg
pop
rorb
iret
jo
lds
xchg
jo
aam
filds
out
imul
das
pop
lock
fcomps
jle
leave
sbb
jo
negb
cltd
push
and
jo
xor
sar
mov
pop
jo
fnstcw
mov
fadd
sbb
cmp
mov
inc
dec
loope
sbb
cs
imul
movsl
adc
jo
test
pusha
ret
mov
imul
inc
stos
into
cvtdq2ps
and
adc
jb
push
push
bound
xor
enter
inc
cmc
or
fwait
ss
std
mov
cwtl
jo
push
shll
nop
jb
pop
jo
mov
sub
scas
lahf
jno
jo
mov
xor
xchg
std
loop
stos
fcmovnb
jo
icebp
mov
push
nop
push
mov
lahf
ja
xchg
ret
adc
mov
out
jo
jp
pop
mov
adc
cmp
in
inc
stos
xor
cmpsb
mov
jo
dec
mov
mov
jge
mov
dec
ja
movsl
enter
push
xor
rcr
in
mov
mov
lds
das
icebp
les
and
push
jmp
dec
out
jo
and
jo
lea
xlat
shl
xor
jo
fdiv
xchg
mov
jg
inc
sub
dec
test
jo
test
mov
bound
cmp
inc
push
jmp
mov
les
and
out
mov
arpl
push
cmc
lock
mov
mov
xchg
cmp
xor
jmp
lock
push
subl
sbb
popa
inc
dec
pop
jo
lea
inc
sub
dec
mov
aam
jbe
loopne
les
insb
sub
jb
xor
sti
add
xor
and
cmpsb
rol
jo
fdivl
out
and
jo
jno
lods
jmp
aaa
mov
lock
jo
mov
orb
shrb
xchg
out
dec
dec
or
repz
clc
out
mov
jo
jae
dec
fucomip
das
mov
test
mov
testb
aad
aam
jp
inc
jae
in
sbbb
jge
or
xorb
ljmp
enter
cmpsl
shl
fwait
mov
leave
pop
sub
jo
adc
repnz
popa
xorb
fstl
sub
and
xchg
mov
fidivrl
test
adc
jo
jl
inc
mov
test
lds
outsl
mov
aad
jg
and
inc
jo
push
or
mov
aas
lock
xchg
dec
or
sahf
fnstenv
iret
ret
jns
push
and
jo
push
test
in
push
jo
rol
pop
gs
jo
imul
aas
inc
mov
scas
mov
xchg
pop
jne
add
jo
ljmp
mov
jo
push
cmp
jo
ss
ja
cmp
jo
test
sbb
cmp
or
lods
aam
jo
mov
mov
jl
pop
sub
xchg
add
js
pop
and
pop
adcb
subb
outsl
nop
lcall
js
je
jmp
nop
add
shr
xorb
sub
jo
test
mov
jo
imul
lret
sub
out
out
mov
dec
inc
fiaddl
mov
cmp
sub
sub
int
nop
cmpsb
ds
push
mov
jo
inc
add
mov
xchg
ret
mov
icebp
xor
and
mov
aaa
lret
jl
mov
push
pop
adc
fbstp
and
sub
inc
add
fs
out
ljmp
icebp
and
lods
clc
pop
scas
pop
push
xchg
fnsave
bound
sbb
stos
jo
pop
mov
movsb
inc
jnp
icebp
lds
and
test
inc
cmpsb
repnz
int
data16
push
mov
inc
mov
aas
dec
jae
movsb
xchg
xchg
out
xor
aaa
in
mov
push
arpl
jo,pt
or
lcall
xchg
add
adc
rcrl
jge
jo
cmp
movsb
daa
jo
mov
in
clc
inc
lret
jo
inc
pop
enter
inc
jo
aad
lods
inc
dec
adc
cld
fldt
jle
mov
pop
inc
mov
stc
xchg
lods
jo
gs
cmp
push
jo
xchg
sti
pop
xchg
mov
inc
jo
inc
leave
inc
lahf
int3
je
inc
inc
xchg
jo
bt
sub
jo
adc
xchg
xchg
jo
add
pop
out
mov
jae
lds
mov
jno
cmp
shrb
jo
bound
and
shrb
rcrl
or
jnp
mov
lock
jb
dec
mov
insl
or
nop
inc
jo
pop
test
data16
cmc
mov
mov
push
jo
je,pt
imul
test
pop
loop
jo
jmp
into
xor
lret
packsswb
lds
add
rclb
jnp
jo
icebp
or
inc
pop
shlb
sub
rcll
add
or
inc
pop
ret
aad
inc
leave
inc
popl
movl
sub
rclb
xchg
dec
js
push
shr
adc
pop
dec
shrb
mov
pop
jb
jo
fcomip
xchg
rolb
xchg
jo
sarl
mov
ds
adc
push
xor
sar
dec
sub
xchg
and
sbb
rolb
jo
mov
cwtl
xchg
jo
push
pop
and
loopne
and
les
jbe
jo
cltd
or
test
dec
in
frstor
ret
loopne
push
mov
mov
shl
rclb
hlt
adc
add
arpl
mov
bound
mov
adc
xor
xchg
and
aaa
gs
jns
or
cmpsb
or
ds
pcmpgtb
push
dec
jnp
rol
call
jo
push
lds
jecxz
jo
es
mov
xor
icebp
into
int
adc
fcomps
push
xorb
shlb
loope
jo
xchg
mov
test
lds
cs
rcll
insb
adc
xor
add
das
fwait
mov
int
js
ret
mov
pop
mov
add
mov
adc
inc
sbb
scas
push
adc
mov
jo
jns
xor
bound
ds
sub
pop
mov
std
mov
test
xchg
loop
push
xchg
lds
inc
frstor
push
fmul
jbe
push
and
xchg
jo
ret
jg
mov
jo
test
or
sub
in
and
inc
addr16
mov
lea
popa
jo
and
mov
jmp
leave
mov
aas
out
inc
inc
sbb
mov
xor
cmp
lret
push
jo
mov
dec
adc
rcll
stos
inc
jg
pop
jnp
lds
pop
fidivs
jmp
pusha
test
add
push
pop
int
jbe
jo
push
test
jae
mov
fs
or
xor
bound
lods
not
rclb
xchg
xchg
jno
loope
jo
mov
sub
xchg
mov
lock
mov
js
decw
mov
in
fwait
lds
fcoms
gs
add
data16
outsb
call
ret
lahf
xor
cmc
shrb
xorl
addb
fldl
dec
mov
push
sahf
and
push
aam
into
jp
push
enter
inc
mov
in
int
sub
mov
mov
mov
sbb
pushf
gs
aaa
cmp
adcl
movl
pop
jmp
je
jo
gs
fdivrs
out
jp
jmp
xchg
subb
sbb
shll
jl
fidivrs
mov
fld
test
jo
pop
push
jecxz
sbbl
dec
jo
mov
inc
orl
push
outsl
adcl
xlat
ret
mov
js
mov
jnp
inc
push
sub
mov
test
xor
mov
incb
mov
inc
push
and
inc
insb
xchg
int
xor
mov
sbb
dec
shlb
iret
loopne
js
std
xor
jo
dec
mov
jo
cli
cmp
jle
std
xchg
int3
add
jl
outsb
jo
stos
imul
out
mov
call
inc
jo
dec
jle
inc
ficoml
fnsave
push
lea
fdivs
pop
mov
divl
ja
sbbb
das
mov
dec
jb
mov
push
fdivrl
push
inc
ret
and
ret
inc
mov
mov
adc
jo
ja
imul
and
jns
jb
mov
push
les
adc
gs
pop
scas
push
mov
sub
mov
adc
hlt
and
inc
or
notl
jp
sbb
stc
mov
push
les
lds
scas
gs
mov
jle
mov
dec
cmp
andb
mov
jmp
cmp
mov
clc
push
mov
sbbb
sub
push
loope
jne
and
xchg
jmp
inc
pop
jo
stos
lds
dec
les
or
mov
testl
icebp
lods
popf
divps
jns
jle
jnp
jo,pt
pop
mov
pop
pop
lods
sub
insb
rorl
cmpsl
lret
ret
sub
dec
jle
sub
jmp
xchg
jnp
jae
nop
xor
jecxz
or
out
pshufw
dec
mov
push
jb
insb
mov
inc
push
push
sbb
pushfw
insb
pop
and
push
jecxz
push
inc
outsl
xadd
sub
aaa
sub
mulps
hlt
push
add
jo
push
rcrl
jo
and
adc
mov
jo
xlat
pop
mov
mov
mov
jle
gs
imul
icebp
or
shl
loope
insl
and
mov
into
mov
cmp
sub
mov
jo
mov
xchg
sahf
jo
cmp
icebp
lahf
jp
jo
test
inc
nop
push
and
mulb
mov
imul
ret
lock
pop
xor
pushf
or
std
or
add
push
packuswb
loopne
jbe
mov
lret
cmp
inc
js
jecxz
jl
popa
dec
push
jle
dec
lcall
sub
pop
xchg
in
inc
sbb
mov
sahf
dec
cmpb
cmp
nop
xchg
outsl
inc
cmpsb
lret
idivl
shlb
lds
shll
insb
test
decb
cmpps
adc
jo
test
pop
adc
mov
xchg
int3
mov
in
cmp
out
daa
or
jno
jo
je
cmp
lods
test
fs
enter
push
outsb
push
outsl
adc
mov
movsb
aas
and
stos
insb
test
shll
mov
cmc
lods
dec
sbb
jo
push
mov
and
pop
pop
jo
ljmp
jo
xor
mov
jo
adc
cmp
mov
add
test
test
hlt
mov
sub
push
jo
and
mov
jae
mov
in
mov
inc
jo
lods
fsubrl
out
dec
pop
add
decl
iret
jbe
push
jns
or
mov
popa
std
jo
inc
jbe
cmp
loope
mov
out
out
sbb
rol
and
pop
mov
orl
out
jo
ds
arpl
lods
outsl
bound
lret
shr
xor
xchg
sbbb
les
mov
jo
stos
bound
ret
subb
int
jo
insl
dec
hlt
movsl
or
divl
push
and
lock
add
push
loope
scas
jecxz
call
mov
sub
test
cwtl
jo
add
clc
push
xor
xor
psllq
push
out
xor
cld
or
xor
sarb
inc
or
sbb
ret
divl
xor
and
push
imul
movsb
pusha
jo,pt
pop
test
and
fwait
nop
pushf
pop
mov
pop
push
add
push
fcmovnbe
loop
sti
inc
mov
mull
push
test
std
jno
outsl
sub
sbb
mov
lock
mov
out
sbbb
mov
xchg
cmp
xor
cld
dec
jo
aad
sbb
sbb
test
jle
gs
lret
xchg
movsb
add
inc
pop
push
sbb
stc
mov
sbb
xor
pop
jle
loopne
jne
leave
jo
aaa
lods
jbe
clc
lea
jo
jle
test
lods
and
push
loop
push
cwtl
imul
jg
aam
inc
adc
cmp
ja
lcall
add
in
jo
fucomip
add
imul
jo
inc
sarb
ss
test
ret
cltd
lds
in
xor
mov
addb
pop
mov
stc
mov
and
xchg
dec
push
fists
fcmovb
add
sub
dec
xlat
push
aam
jg
loope
rcll
mov
leave
bound
nop
movsl
rclb
jmp
and
stos
inc
xor
pop
pop
pop
rcl
test
push
cmp
xorl
cmp
inc
push
jo
ljmp
movaps
cmp
jbe
int
pop
jge
addr16
ret
jo
jb
or
lcall
mov
in
push
xlat
jo
mov
stos
jmp
adc
push
negb
fsts
jo
mov
mov
xor
inc
mov
or
adc
dec
loop
push
jo,pn
jmp
dec
nop
xorl
pop
int
jo
outsl
lods
push
jo
inc
test
out
or
test
clc
lret
outsb
data16
hlt
out
or
scas
shl
push
int
stos
sahf
mov
aad
mov
jo
cmp
ficoml
jo
ret
pop
repz
incb
jp
add
test
andb
adc
jo
cmp
and
mov
add
mov
adc
mov
or
jge
sub
lods
jg
adc
jp
dec
dec
rol
xor
in
imul
cmp
jle
mov
mov
adc
fdivl
mov
in
movsl
xchg
sub
sub
cmp
dec
mov
push
lea
fmul
fs
push
inc
pop
mov
jp
pushf
xchg
inc
insl
std
sub
in
jl
jle
aam
inc
jo
loop
pushl
sub
ret
inc
sub
sub
js
das
sub
outsl
ja
inc
ret
loopne
push
pop
jb
fisubs
stos
inc
repnz
insb
je
out
nop
nop
data16
daa
lret
inc
cmpsb
lock
dec
mov
push
cli
mov
sub
inc
andb
sbb
or
fs
mov
mov
push
rcl
xchg
xor
add
pop
jo
jmp
ret
movsl
subb
in
fisttpl
jo
xchg
jmp
sub
cmp
jo
fdivl
scas
dec
loopne
inc
nop
xchg
bound
add
adc
sub
cmp
sub
or
jo
insl
push
leave
mov
rcrl
mov
pop
xchg
setno
cli
sbb
adc
xchg
cld
subb
sub
mov
sub
mov
sub
push
fnstcw
jo
xchg
pop
popf
ret
lret
jo
add
icebp
cmp
andb
into
and
mov
dec
aas
jno
mov
jo
cwtl
ret
pop
push
in
jo
lds
and
popa
js
dec
hlt
xchg
add
les
mov
call
fdivrp
jo
add
hlt
aam
xor
pushf
jae
jb
rolb
aaa
jo
adcl
jo
xor
push
outsl
lds
mov
push
imul
fidivl
movups
dec
jnp
mov
jo
and
rcll
jno
adc
jo
and
or
adc
sbbb
bound
jo
shrl
add
jo
loope
push
aas
inc
push
dec
mov
mov
filds
lds
popf
dec
xor
sbb
int
adc
les
sarl
leave
fldcw
jne
sub
icebp
dec
jb
insb
xchg
adc
ret
adc
mov
ret
pop
popf
dec
icebp
add
aad
xchg
pop
add
jmp
pop
dec
je
inc
jo
cmp
ret
flds
cmp
or
mov
push
sub
jmp
lea
pop
jo
lods
push
mov
jo
call
out
data16
dec
sub
mov
sub
cmp
cmpsl
movsb
mov
inc
cmp
and
lds
cmp
aaa
mov
outsb
in
push
ret
adcl
pop
je
cmpsb
stc
lret
cmc
das
ret
leave
lcall
sbb
push
dec
sub
sbb
jno
ret
add
jo
dec
ds
stc
pushf
jmp
adc
fs
xchg
mov
les
jl
xor
lds
nop
out
mov
adc
cs
cmp
movsb
iret
stos
mov
push
idivb
inc
mov
inc
loope
call
or
arpl
jns
jg
loopne
inc
jae
jbe
lds
test
jmp
push
sub
mov
hlt
dec
bound
add
inc
xchg
pop
sbb
cmp
andb
outsl
mov
or
test
lods
btrl
fnsave
scas
push
test
pop
aas
les
bound
aad
lcall
lea
jbe
jp
jo
jb
jae
fwait
cmp
mov
int3
and
sub
inc
and
add
lret
mov
sub
cmp
cmpb
pmaddwd
out
out
outsl
jo
fs
fisttpll
adc
jo
addl
icebp
sbb
sub
and
int
push
inc
mov
push
and
imull
lds
sti
sub
jo
add
leave
cmc
cs
sbb
push
jo
loop
xchg
lds
test
jl
mov
sub
jne
jmp
dec
sub
rol
dec
aam
imul
jo
shll
push
clc
repnz
mov
adc
les
leave
hlt
ds
aas
pop
dec
test
insl
test
xchg
jo
mov
mov
addr16
xor
adc
jo
sub
lock
mov
push
int3
xchg
bnd
jmp
jo
mov
sub
fxch
es
lret
cmp
push
pop
mov
mov
mov
mov
js
std
iret
pusha
jo
call
xlat
inc
mov
and
add
bound
pop
jo
xchg
jecxz
pop
jmp
mov
push
repz
ss
and
jo
mov
jbe
dec
sbb
inc
fiaddl
xor
add
pop
mov
push
lcall
testb
sub
scas
inc
push
out
jo
call
repnz
jo
inc
ret
sub
leave
and
movsb
in
xor
filds
rcrb
xsavec
jge
jp
adc
test
jle
roll
jo
and
movsb
adc
adc
mov
xchg
adc
pop
int
sub
addr16
add
jno
pusha
jg
rolb
aam
iret
cmp
loopne
pushf
sbb
scas
jne
jo
jmp
mov
jl
das
mov
jle
bound
std
and
out
popf
and
cli
or
movswl
ret
scas
cmpsb
jle
daa
shlb
test
std
xchg
int3
mov
push
in
lds
jns
in
inc
in
hlt
xchg
nop
inc
jecxz
stos
jge
ja
imul
push
or
dec
rcrl
sub
xor
jo
sar
jns
inc
adc
inc
aam
iret
mov
ret
imul
pop
jo
cmp
push
jo
xchg
xchg
sub
nop
jg
leave
in
jne
es
cmovo
xor
add
aad
push
outsb
out
aas
push
or
insb
push
mov
fildl
jb
add
dec
test
scas
lahf
dec
mov
mov
nop
leave
xor
or
jp
mov
nop
imul
shll
ds
add
aad
fbstp
jne
push
leave
mov
data16
lock
fscale
insb
dec
xchg
ret
mov
mov
lds
jo
lods
jnp
stc
loopne
xor
adc
xchg
hlt
cmpsb
push
jae
vhaddpd
lods
int3
mov
dec
mov
int
jo
inc
xor
cmp
push
in
xlat
jo
popa
xchg
std
sbb
fcmovbe
call
inc
leave
cmp
sub
push
daa
xchg
ljmp
sti
lea
mov
push
into
icebp
inc
arpl
cltd
andl
fistl
jo
lret
in
inc
or
cmp
mov
and
sbb
mov
sbb
fdivl
sbb
ret
lea
sbb
add
shr
push
cmpsl
je
scas
jle
push
stc
loope
pop
insb
push
jmp
shlb
sub
sbb
push
and
out
xor
pop
dec
repz
hlt
xchg
push
das
inc
mov
mov
adc
sub
pop
sarb
dec
mov
ret
popa
mull
inc
jge
mov
jo
dec
mov
push
jo
lds
push
insl
jp
push
inc
mov
imul
call
inc
pushf
je
adc
in
push
cmp
mov
insb
in
aam
sub
es
sub
mov
cmpsb
in
in
or
jne
jo
aad
or
out
cmpsb
cmp
or
jo
nop
sub
jo
ss
push
jbe
sahf
mov
mov
mov
cmp
dec
jo
bound
sub
xor
stos
jns
out
jge
push
xchg
mov
scas
hlt
repnz
push
dec
out
icebp
loope
adc
push
mov
enter
int
mov
and
inc
and
jo
test
xchg
out
mov
sarl
test
cwtl
add
leave
xor
bswap
sub
sub
std
fistps
shlb
sarl
or
sub
mov
pop
icebp
pushf
fnstcw
push
jg
sub
sub
push
adc
lods
mov
int
addr16
popf
xchg
push
jbe
lods
xor
cmpsb
int3
cmp
adc
pop
loopne
lds
mov
es
insl
push
cmovnp
jb
pop
xchg
jo
inc
in
sbb
lds
sub
fwait
ret
inc
cmpb
imul
out
mov
movb
pop
jo
in
cld
lds
mov
pushf
adcb
fldcw
mov
dec
mov
scas
and
pop
js
jo
mov
es
jnp
paddb
dec
jbe
mov
xorb
xor
insb
mov
push
andl
popf
pop
jo
mov
lods
dec
dec
mov
mov
xor
xchg
sub
popl
lret
clc
sub
stos
inc
push
popf
sbb
xor
jo
sbb
xlat
aam
mov
rorl
hlt
jo
and
aaa
data16
and
fmuls
andl
push
int
inc
arpl
ret
icebp
nop
push
in
test
jo
xlat
push
scas
pop
leave
jo
or
bound
repnz
sets
mov
imull
inc
jmp
lcall
jo
test
jns
jo
dec
je
or
adc
jo
dec
mov
sub
mov
rcrb
mov
jle
add
divb
rcr
aam
scas
add
lret
lds
fidivrs
mov
loopne
or
xchg
add
or
js
lods
les
bound
mov
loope
cmpb
vpshuflw
test
jne
fbstp
dec
lods
dec
lahf
inc
jmp
fwait
cmpl
or
adc
sarb
ss
pop
icebp
popa
add
sub
jo
popf
bound
jo
mov
leave
cld
jo
mov
dec
jo
fstl
bound
outsl
mov
les
mov
push
mov
jo
sub
add
fnstenv
jo
orb
mov
jo
mov
sub
push
aad
and
int
imul
xor
mov
or
movsl
inc
add
sarb
jo
lahf
leave
push
pushf
in
and
jecxz
loop
addb
aas
add
sti
nop
lret
rcl
test
ds
xchg
sahf
inc
push
inc
mov
cmp
loope
in
push
insb
insl
ret
jo
and
mov
subl
jle
shlb
add
aad
pop
fidivl
xchg
sub
shll
inc
std
pop
push
dec
xchg
cmpsl
test
aam
cmc
cmp
lods
cs
sub
pop
xchg
mov
mov
add
movsl
jg
sbb
sub
sar
jo
inc
mov
jo
cmp
pop
clc
adc
mov
sub
into
in
mov
divl
lea
aaa
cld
icebp
xor
rolb
maskmovq
idivl
add
jl
outsl
pop
es
push
pop
sbb
xchg
cltd
jecxz
into
pop
xor
shll
movsl
inc
mov
lret
sbb
xchg
ret
mov
dec
fwait
push
pop
jbe
or
lahf
xchg
icebp
jo
es
xor
in
jo
inc
lds
push
xor
jp
mov
xor
xorb
out
std
or
xor
add
roll
adc
sbbl
data16
lahf
aad
sub
adc
icebp
inc
cli
jo
int
out
mov
fsts
sbb
cmp
and
jo
out
fxch
les
ret
push
scas
dec
mov
inc
xor
mov
dec
mov
inc
mov
push
adc
adc
jo
xchg
out
lret
sbb
or
mov
push
push
js
adc
push
icebp
push
push
int3
jns
dec
pushf
mov
jo
xor
or
dec
fdivs
cli
popa
sub
sbb
shll
movsl
adcb
mov
jl
lds
push
inc
xor
dec
loopne
ficoms
insb
ss
jo
lock
xchg
outsl
inc
inc
jo
mov
in
sahf
ror
xor
fidivs
and
gs
je
dec
loop
mov
jae
mov
add
shlb
mov
rcl
lock
js
insl
fldln2
and
repnz
inc
mov
ljmp
fdivrl
dec
jo
mov
out
shl
jne
xor
and
into
pushf
adc
inc
inc
add
dec
mov
pushf
rorb
dec
mov
cld
jo
jmp
jo
sub
int
or
push
sbb
inc
jo
lds
xchg
addb
mov
jp
pop
push
js
out
sub
filds
mov
push
outsl
jo
into
out
dec
jbe
cld
mov
insl
fbld
jo
ret
leave
fdivrl
out
cmpsl
int3
repz
jl
dec
xchg
mov
lods
jo
aaa
pop
into
gs
int
lcall
out
add
std
fdivrp
cmp
and
outsb
lret
movsl
push
mov
out
dec
xchg
jle
sbb
xchg
jb
add
mov
mov
orb
jne
ljmp
inc
int
bound
ds
lcall
lret
cmp
scas
xabort
testb
xor
les
mov
sub
and
add
xchg
xchg
fbstp
xor
xorb
lods
jp
jo
adc
mov
jo
xor
lret
pop
lret
jo
cli
imul
in
mov
inc
mov
mov
cmp
out
mov
je
jno
jo
das
aas
jl
mov
js
cltd
fildl
inc
leave
adc
jo
loop
jl
insl
lds
mov
lret
xor
jo
lods
rcl
decl
fldenv
nop
inc
cwtl
int
jne
pop
and
sub
and
dec
inc
jo
jge
stc
and
jecxz
push
jo
pop
popf
imul
sbb
mov
mov
push
cltd
jne
sub
add
scas
mov
jb
pusha
mov
and
data16
add
jo
fiaddl
in
pop
repz
cltd
outsl
dec
mov
push
jo
int
or
or
shlb
nop
add
dec
mov
or
sti
lds
push
fidivl
xchg
mov
in
adcb
push
cmp
or
clc
hlt
pop
adc
cmp
jo
lock
pop
popa
sbb
jo
lods
fldl
jo
insb
push
fnstcw
adc
jbe
pop
aas
addr16
push
pop
nop
push
and
xorl
mov
loope
notl
shrb
add
outsb
jo
lds
mov
stos
xchg
xor
sub
pop
xchg
fcomi
lock
imul
mov
shl
cmp
out
xchg
movsl
inc
js
es
add
shlb
jo
add
lret
mov
lds
jo
pop
fdiv
pop
xorl
pop
and
or
icebp
inc
nop
sbb
int3
rcrl
jo
push
xchg
sbb
and
cmp
aam
dec
xor
aas
jo
clc
in
push
sbb
dec
leave
and
adc
repnz
jno
jo
lahf
shrb
cmpsb
sub
jo
dec
mov
jnp
lock
xor
imul
mov
pop
mov
mov
lds
pop
dec
fwait
jo
out
add
hlt
fadd
jo
mov
add
fwait
jo
lahf
loope
inc
dec
scas
loopne
or
mov
jo
pop
fld
xchg
add
sti
loope
nop
cmpsl
iret
fcompl
mov
push
mov
mov
jo
or
arpl
push
jo
lds
add
addl
je
bsr
sub
push
mov
aad
mov
scas
jl
lret
lock
fstl
cli
xchg
push
jge
test
pop
adc
dec
clc
rolb
push
cmp
mov
bsr
pop
out
sbbb
int
movsb
jno
adc
jb
loope
ja
jp
jo
call
mov
adc
xchg
dec
andb
cmp
pushf
and
adc
jp
mov
loop
loopne
push
cmpsl
add
lods
pop
add
inc
ljmp
adc
jo
adc
jl
pop
mov
jae
inc
xchg
sahf
add
adc
popf
mov
pop
ret
stc
sub
int
mov
hlt
test
inc
jns
push
std
outsl
xchg
sub
adc
nop
xor
pushf
shrl
imul
inc
adc
imul
jo
jno
and
scas
ret
sbb
test
ret
stos
jo
mov
add
in
xor
jo
fwait
push
sub
je
jns
push
cmpsb
inc
int
insl
xchg
xor
jge
rolb
xchg
inc
das
int3
cmpsl
push
or
movsb
insb
mov
nop
cmp
fiadds
int3
jo
sbb
cs
inc
inc
shr
loope
push
inc
out
js
aas
test
jo
popa
xchg
ficoms
stc
add
jo
lret
pop
jg
mov
in
sbb
sarl
or
inc
dec
push
pop
sub
mov
imul
jge,pt
shll
lods
xchg
jnp
jo
sbbl
jo
add
mov
lods
shll
into
xor
dec
mov
jo
adc
push
ds
andb
rcrl
inc
and
push
xchg
outsl
cld
lret
dec
je
push
mov
add
das
dec
fnstenv
xor
jo
ret
daa
test
pop
jae
sub
and
js
cmc
inc
orb
inc
mov
jmp
mov
packsswb
adc
loopne
mov
pop
push
mov
jle
mov
add
jne
inc
push
gs
dec
ret
mov
popf
scas
jo
mov
movb
imulb
jo
pushf
pop
fdivs
xor
mov
icebp
movsl
jo
sbb
push
jmp
in
add
js
sub
cs
inc
lds
test
adc
ret
push
jo
loop
aad
push
jnp
jo
jmp
je
adc
and
stc
dec
push
fmuls
hlt
jnp
nop
and
mov
ja
ret
insb
inc
and
cwtl
jo
or
jecxz
cmc
xor
jle
push
aam
in
insl
test
nop
xchg
push
call
rep
jb
push
sbb
clc
fnstenv
jo
push
jp
inc
mov
pop
sahf
xchg
imul
xchg
jo
and
jno
cmova
movsb
or
or
inc
int
mov
adc
cmpl
push
js
xchg
fidivl
enter
dec
in
jno
or
push
mov
shll
leave
push
mov
mov
pop
je
adcl
js
andb
in
pop
adc
mov
fadds
jbe
mov
aad
fdivl
ret
push
imul
daa
pushf
jo
mov
mov
adc
je
aam
btc
xchg
out
jo
ret
inc
mov
add
adc
in
push
ds
jo
dec
xor
cmp
xor
cmc
jecxz
inc
insb
fmuls
mov
repz
data16
outsl
lods
mov
ret
jb
push
lret
sbb
push
andb
cli
jo
jmp
roll
jnp
aas
jmp
xlat
fstps
jo
mov
pop
mov
inc
xor
mov
test
push
leave
and
mov
or
jo
add
ss
jo
lds
mov
jp
into
jo
mov
insl
xor
jnp
xor
leave
jg
imul
out
xor
jo
pop
mul
iret
fidivl
repz
and
repnz
jnp
jae
cmp
sbb
enter
pop
and
or
jo
pushf
dec
pop
out
pop
pop
xchg
jo
sbb
sub
sub
and
loope
bound
shll
std
loop
ret
lea
xor
pop
lods
inc
je
or
inc
mov
adcl
push
je
out
jo
out
jp
inc
add
cld
sbbl
mov
gs
mov
lahf
mov
cmp
shlb
stos
cmp
jp
push
outsl
iret
mov
aas
jo
pop
sbb
hlt
dec
out
jo
inc
fs
jns
push
frstor
inc
rclb
jne
mov
daa
add
sub
je
inc
out
bound
inc
mov
out
push
leave
jo
jnp
inc
jae
ret
jo
cli
pushf
std
data16
iret
push
xchg
jnp
shrb
in
int
into
mov
shlb
jp
addr16
mov
cwtl
pop
inc
stos
xchg
xchg
ja
incl
xchg
inc
in
data16
mov
pop
rcr
sahf
fildll
js
jbe
xor
loop
imul
stos
imul
jb
jo
imul
loope
xor
les
rcrb
lds
nop
imul
arpl
shll
cmp
loope
and
jo
pushf
ret
lds
cvtpi2ps
sub
adc
jg
imul
jo
mov
repz
mov
out
adc
xchg
pop
push
lock
fsubr
inc
roll
dec
popf
inc
jo
leave
inc
xchg
jp
js
jo
cs
mov
xor
pextrw
adc
sti
xorb
fnstenv
jo
jns
hlt
sub
es
imul
or
cs
in
jl
in
das
aad
aas
ss
xchg
fisubrl
int
nop
mov
and
fsubrp
jo
outsl
imul
test
cmpsl
mov
aas
jmp
or
mov
jae
sub
sbb
rorl
fs
jo
movl
jo
sub
ret
arpl
sub
addb
mov
idivl
jbe
xchg
jo
pop
push
push
lods
bound
push
in
sub
das
clc
daa
add
ja
lods
mov
inc
and
cmp
int3
sub
and
sarb
stos
push
enter
shll
or
test
iret
and
jo
icebp
movsb
rclb
xchg
mov
aaa
xor
lds
jo
imul
daa
das
rcll
loop
cmp
add
movd
popf
mov
cmp
or
jge
lds
jo
inc
call
push
sub
mov
sbb
bnd
frstor
shr
dec
and
icebp
cmp
push
pop
and
cmpsb
hlt
cmp
push
inc
jo
faddl
test
pop
xor
push
les
lret
jo
adc
cmp
pop
add
mov
xchg
jae
dec
popf
push
popa
or
sub
je
inc
int3
sbb
std
pop
mov
cmp
stos
ja
andl
test
dec
xor
push
xor
push
and
popa
sbb
mov
frstor
pusha
push
and
xchg
pop
scas
xchg
insl
nop
roll
pop
cmp
out
xchg
push
movsl
push
mov
add
cmp
loop
sub
and
xor
cmc
bnd
std
mov
sbbb
adc
add
inc
jo
mov
jge
jo
in
cmc
jo
jl
gs
ror
dec
jo
and
ss
fidivs
inc
sub
dec
or
das
inc
leave
mov
sysret
inc
shrb
jbe
outsb
jo
lods
shll
nop
in
sbb
jmp
das
and
ja
jo
lea
jo
mov
add
jo
mov
in
rclb
push
je
dec
jb
shll
add
sub
xchg
mov
adc
lods
nop
test
shll
nopl
jp
jp
inc
js
mov
cmp
mov
mov
fidivs
mov
sbb
jo
mov
dec
ret
xchg
sarb
pop
mov
mov
je
je
push
loopne
call
jb
and
push
in
sbb
sbb
add
push
jg
inc
and
xor
mov
roll
jo
loopne
in
sbb
ljmp
pop
sbb
push
adc
mov
je
adc
sub
fisubl
jecxz
js
pop
cmp
rorb
scas
add
ds
sbb
jo
hlt
pop
sub
add
popa
mov
jo
leave
subb
mov
xchg
stos
jo
out
insl
add
jo
in
inc
and
cmp
hlt
test
push
test
jo
flds
movsl
pop
faddl
in
and
aad
jge
add
adc
jns
in
movb
xor
pop
in
xor
in
pop
and
xor
add
sbb
jmp
adc
lds
call
mov
ret
in
mov
and
lcall
loope
adc
xor
fsubp
rcrl
call
sbbl
mov
lahf
push
pusha
test
push
repz
xorb
cltd
lods
jg
mov
jb
xchg
or
cmpsb
inc
sub
push
jo
jb
push
cmp
daa
scas
jae
mov
sbb
lret
push
push
lcall
inc
add
add
push
adc
pop
jo
mov
xchg
mov
enter
inc
fimuls
mov
jo
inc
mov
mov
fists
dec
xchg
mov
repnz
iret
imul
jo
dec
inc
scas
mov
in
jo
mov
repnz
push
cmp
rcll
hlt
bound
fbstp
mov
jmp
sbb
inc
sub
in
pop
inc
xchg
pop
cmp
jo
adcl
add
ds
pop
js
push
inc
push
dec
sbb
repnz
repz
add
ja
xchg
outsb
lds
jb
sub
imul
jo
ret
push
adc
test
js
xor
mov
jecxz
test
bound
aaa
in
test
outsb
jmp
mov
push
inc
addl
xchg
rcll
inc
test
jo
mov
dec
sahf
out
xchg
jo
nop
inc
mov
xor
jo
sarb
inc
adc
mov
jo
shrl
leave
adc
pop
dec
xchg
daa
movq
test
push
adc
int
lea
test
jne
xor
popf
pop
mov
push
jbe
loope
imul
test
mov
aaa
lds
int
test
jo
lock
addb
dec
insb
jo
jmp
imul
add
xchg
lods
leave
std
dec
stos
jo
daa
and
rolb
inc
js
lcall
cld
lahf
movsb
nop
mov
push
jns
xchg
push
adc
lret
hlt
cmpsl
sti
das
out
inc
or
test
or
fidivrl
mov
jo
shll
jo
cmp
lds
fstl
test
fwait
jge
push
lock
push
xor
adc
arpl
jp
aas
jo
cwtl
push
mov
jo
aam
sti
sub
add
fisttpl
les
push
mov
cmp
mov
es
fldl
mov
xchg
nop
pushf
loope
lea
data16
lcall
fidivl
cmp
das
andl
jo
aad
mov
jo
pusha
cwtl
inc
mov
es
mov
lcall
lds
jo
rcl
incb
sub
pop
out
mov
rorb
jo
mov
js
outsb
data16
imul
pop
enter
jo
and
adc
xchg
icebp
jo
bound
push
jo
jl
popf
dec
mov
out
push
inc
xorl
or
jae
nop
or
mul
in
mov
shl
ds
lret
push
xchg
pop
xchg
jo
mov
pop
fbstp
mov
vpshuflw
jae
add
flds
ret
jo
insb
xor
dec
xor
add
push
or
xchg
inc
jo
rcll
dec
loop
or
je
popa
orb
outsb
imul
lret
sub
je
icebp
pop
mov
mov
mov
mov
sub
mov
jo
jg
add
leave
xchg
out
test
pusha
loope
and
gs
jo
sub
jmp
pushf
enter
ret
int
inc
sub
je
xor
shrl
fwait
aaa
jb
hlt
add
sbb
and
mov
xor
arpl
adc
xchg
jo
add
pop
nop
les
adc
ja
pop
mov
insb
cmp
test
adc
xor
or
lea
add
dec
lret
addr16
xor
cmp
insb
clc
aaa
jge
pop
sub
pusha
mov
xor
ja
xchg
dec
adc
fbstp
pop
jno
jl
xor
aaa
mov
stos
icebp
std
or
xor
fldenv
mov
ds
jo
mov
cmp
xor
push
lds
and
gs
jo
ret
cmp
pop
lds
shrb
mov
jo
fisubrl
andl
push
mov
push
pop
jno
std
or
stc
hlt
mov
test
es
ljmp
pop
cld
enter
lret
jo
lds
nop
or
jmp
pop
mov
dec
xchg
fdivl
inc
ljmp
imul
cmp
shlb
shlb
lea
repz
adc
js
or
jo
mov
jno
mov
cmp
pop
xor
shlb
ficompl
mov
cmp
jg
jo
shrl
insb
cld
and
ret
xchg
pop
out
lahf
mov
mov
inc
push
jle
ja
jo
scas
inc
ljmp
ss
xor
loopne
jb
popa
cmpsb
add
les
bswap
xchg
aad
sub
jmp
add
jge
push
out
and
sbbl
je
ficompl
pop
mov
adc
inc
ret
jmp
stc
subb
fwait
jg
push
test
xor
insb
test
jo
mov
ja
mov
jbe
jb
and
adc
nop
pop
int
fidivs
fstps
cmpsb
jo
jbe,pn
add
jo
jns
mov
mov
cmpsl
fwait
loope
cmp
enter
jae
dec
mov
sub
subb
inc
popf
loopne
sbb
push
and
bound
mov
es
std
mov
les
xchg
pushl
leave
mov
inc
jo
enter
repnz
aaa
int3
sbb
bswap
add
jl
jle
ss
aaa
push
pop
lods
xchg
dec
insb
lcall
adcb
jge
lret
mov
or
pop
jo
cmp
pop
push
pushf
mov
in
push
ljmp
outsl
sbb
ret
shl
in
enter
mov
cld
jo
sbb
mov
jl
shl
cmp
in
inc
fldenv
fcomps
xor
and
popa
ss
push
mov
jnp
cltd
pop
lahf
inc
lea
sbbl
cmp
jo
fs
pop
int
jo
ret
sbb
frstor
dec
adc
jo
jecxz
add
mov
nop
out
inc
inc
sbb
push
divl
pop
into
sub
es
mov
xchg
out
dec
shrb
test
xchg
jmp
loopne
not
jmp
dec
jo
add
add
lret
xchg
mov
data16
jle
pushf
cmpl
jo
fcomip
sbb
cwtl
movsb
jo
jne
jae
aaa
and
mov
adc
std
js
hlt
jo
fidivl
repnz
frstor
clc
cs
adc
inc
or
mov
xchg
lahf
or
gs
xor
addr16
int
sbb
lcall
repnz
xchg
lret
iret
scas
inc
fisttpll
loopne
jl,pt
repz
cmp
mov
in
cs
loopne
inc
mov
aas
jb
sbb
jo
xchg
mov
jmp
mov
dec
sub
sahf
jns
out
inc
scas
cmp
in
loope
jo
xor
xchg
mov
mov
loop
repz
dec
iret
push
sbbb
sub
int
cmpsl
sti
icebp
jo,pn
shlb
xchg
jo
mov
cmpsb
addb
inc
push
mov
xor
ja
cs
and
xor
loop
cmp
icebp
out
jns
pop
lock
or
lds
test
mov
jo
add
out
inc
rol
push
inc
sahf
pop
icebp
aam
add
xlat
ficoms
rol
jp
and
mov
pop
xchg
gs
jo
fs
or
idivl
jo
movsl
shlb
jo
or
cwtl
jo
jmp
xor
sub
xchg
mov
scas
xchg
out
call
andb
loopnew
xor
arpl
xchg
jo
inc
test
movsl
or
cmc
jo
jns
test
clc
negb
bnd
leave
mov
push
inc
jo
pop
int
xorl
mov
mov
or
lret
cmp
cmp
dec
nop
dec
jne
loopne
cmp
mov
jo
scas
popf
daa
lods
lcall
lds
jb
or
lock
stos
inc
jo
sub
jo
test
mov
leave
xor
pop
shlb
and
push
jo
lds
push
test
daa
leave
and
aad
push
in
imul
js
andb
jo
repz
cmp
jnp,pt
imul
arpl
xor
in
pusha
leave
xchg
mov
inc
fisubs
jo
dec
inc
lds
orb
mov
std
roll
jo
mov
mull
jo
lahf
leave
addl
add
ret
inc
jmp
insb
shrl
push
xor
jo
int
inc
lea
ret
jo
fiaddl
sarl
jnp
jle
xor
subb
xchg
les
subl
sbbb
cmpsl
pop
push
sub
add
stos
mov
sbb
lock
sahf
mov
dec
lods
insl
ds
mov
jo
sarl
xor
xor
fidivl
push
imul
inc
das
jle
jo
fsubs
hlt
adc
lret
jo
jno
add
or
jo
repz
mov
or
lock
stc
insb
aas
in
sbb
mov
push
or
sahf
aam
hlt
outsb
and
popa
fimuls
adc
iret
jo
mov
dec
lds
inc
add
test
outsl
push
cs
shl
js
jo
dec
andb
mov
adc
lds
adc
ljmp
mov
loope
jmp
sbb
xchg
jl
sub
push
jo
arpl
and
mov
les
push
je
push
outsl
popl
sbb
lock
outsb
jl
xchg
shl
sar
les
jo
in
adc
lods
mov
push
repz
sub
hlt
cmc
or
rcr
or
xor
cmp
push
lahf
sub
sahf
addr16
jo
xchg
inc
aaa
mov
jo
mov
mov
xor
jo
daa
adc
icebp
jo
push
arpl
lcall
add
sbb
cmp
jo
mov
fs
sub
pop
imul
icebp
jo
daa
out
mov
subl
push
lea
lock
or
cmpsl
je
xchg
add
leave
mov
xlat
adc
and
cwtl
dec
jo
clc
js
inc
and
repz
bound
orb
push
ss
dec
jo
ret
cmp
dec
mov
and
xchg
add
jo
ljmp
sub
je
jecxz
fsubrs
loopne
das
out
mov
jge
repnz
jo
bound
lds
nop
incl
inc
out
ja
or
popl
int3
add
xor
not
scas
jnp
lahf
rol
insb
jb
adcl
jo
mov
mov
pop
mov
jo
sbb
xor
in
test
inc
clc
lock
jo
lds
rclb
pop
xchg
lods
mov
push
push
jmp
mov
jo
lahf
vcvtps2dq
xor
add
popf
loop
int3
mov
and
sbb
mov
add
movsb
mulb
jo
leave
adc
sbb
popa
add
fstpt
jo
xchg
in
inc
outsb
push
pop
popa
cli
mov
jo
fstps
adc
ret
icebp
lods
dec
sbb
rolb
xchg
ljmp
jno
lea
mul
movsl
js
bound
sti
setp
sar
jle
in
mov
jo
arpl
mov
imul
mov
jae
push
xor
xchg
xor
rolb
dec
push
aam
pop
or
push
mov
sub
and
cmp
sbb
shl
xchg
push
mov
rolb
outsl
push
jo
dec
sub
inc
xor
push
mov
jns
jo
cmp
lods
popa
mov
push
addl
fstpt
jo
xchg
or
jo
rcll
outsb
xadd
add
leave
push
std
mov
out
negb
nop
lds
push
hlt
aas
aad
ss
jbe
outsl
jle,pn
jo
idivl
test
jo
es
in
adc
stos
jo
sub
mov
push
jb
cs
add
push
imul
shrb
push
jo
enter
or
shlb
sbb
cmp
scas
cmp
sarl
jo
andb
xchg
inc
xchg
sub
push
cmp
adc
jmp
mov
call
push
mov
push
lds
js
mov
loopne
rol
push
push
test
out
adc
jno
out
jb
xor
mov
jo
cld
push
scas
mov
and
outsl
je
bound
jo
loopne
ret
sub
jl
rorl
movsb
sbb
sub
xchg
and
int
jo
add
add
insl
fwait
pusha
pop
ss
dec
sbb
popf
je
arpl
jmp
movsb
push
jno
fstpl
adc
stos
push
pop
push
out
push
xchg
stos
xor
push
js
ret
scas
jo
imul
shll
jmp
sbb
dec
stos
xchg
or
jo
or
mov
jnp
cwtl
adc
jo
sbb
lea
cmp
sub
xor
mov
cmpsb
mov
mov
loopne
inc
lea
fwait
xchg
movsb
nop
pop
adc
cmp
ret
jo
sub
mov
jo
inc
movsl
cmc
adc
icebp
imul
push
cs
cmpsl
rclb
mov
jl
pop
mov
jo
mov
imul
mov
inc
xchg
stos
popa
mov
dec
jp
clc
jo
fs
test
ljmp
and
popa
mov
cld
in
leave
mov
mov
pop
pop
ret
jo
out
pop
lds
lret
lock
xor
lods
or
outsb
sti
mov
test
nop
subb
ret
jae
xchg
imul
adc
orb
jo
pop
jbe
push
add
sub
xor
cltd
fldcw
std
jo
imul
mov
enter
les
push
aad
popf
jo
out
jae
lds
int3
jno
add
or
stc
cmp
jo
shlb
sub
and
push
jo
das
xor
add
xchg
mov
jge
jo
bound
in
jo
loope
test
jo
mov
mov
jnp
jle
mov
jo
adc
ret
xorb
lds
sbb
stc
adc
inc
sub
push
push
rcll
and
hlt
adc
ja
mov
dec
xorb
std
sub
or
shl
cmp
or
scas
xchg
int
mov
repz
clc
js
test
inc
in
js
fmull
jle
xchg
jo
add
push
aad
pushw
jae
xchg
andl
mov
shll
std
inc
jns
push
sbb
gs
jo
das
push
out
push
jmp
jae
dec
jns
sahf
lds
add
fimuls
mov
adc
xor
icebp
sub
fs
lahf
dec
or
pop
lock
adc
jo
push
sbb
jo
mov
loop
pop
jo
pushf
pop
cltd
out
push
push
or
cli
loopne
xlat
insb
cwtl
push
idivb
cmpsl
jne
push
or
loopne
cmp
sahf
sub
pop
and
movnti
inc
sti
push
bound
insl
jo
int
outsl
test
pop
sarb
inc
fdivl
sbb
cmp
jo
sbb
xchg
jg
in
ret
cmp
push
cmpb
push
jo
cmp
bound
out
lret
insb
mov
aaa
jle
js
inc
inc
pop
sub
popf
movsb
orb
dec
sub
in
add
bound
mov
in
les
pop
dec
nop
aad
or
sarl
subl
scas
outsb
jo
adc
cli
into
lcall
sbbl
jo
ret
shrl
cmc
sub
stc
push
call
ficompl
jo
sbb
jle
push
mov
jae
out
aas
dec
hlt
and
jo
fidivs
pop
mov
clc
jo
pop
pandn
inc
pusha
jmp
jo
aam
inc
repz
jae
sub
andl
out
js
fwait
repz
sbb
push
or
jo
popf
cmp
pop
lds
nop
inc
xchg
fwait
mov
inc
gs
das
or
mov
mov
roll
push
ja
outsl
mov
jns
clc
mov
xor
stos
dec
leave
je
jecxz
push
out
inc
dec
insb
subl
sub
jp
ret
scas
xchg
loop
lock
push
and
push
ss
jo
outsl
inc
fistpll
jbe
lods
repz
mulb
sbbb
jo
sbb
dec
xchg
jo
xor
idivb
or
test
test
xchg
push
lahf
jge
mov
sbb
jo
ret
adc
icebp
rcl
movsl
jbe
fiadds
and
pop
repnz
push
cld
in
fnstenv
idivb
jo
in
cmp
int3
and
icebp
xor
jns
out
mov
cli
push
and
jo
fldenv
dec
icebp
imul
push
xorl
jo
fucomip
repz
xor
xchg
inc
lahf
jo
lea
xchg
inc
aas
in
jo
daa
mov
push
push
shll
dec
dec
nop
testb
xchg
jbe
ret
popl
rclb
orb
push
test
jo
cs
test
aad
mov
mov
push
jge
scas
adc
test
jl
mov
out
sub
mov
enter
cltd
pop
std
bound
sbb
sbb
ds
cmp
push
jo
mov
sbb
in
mov
jge
sub
inc
cmp
sub
push
pop
andb
pop
mov
inc
lahf
mov
jo
and
lea
or
sbb
movsl
int
loope
lahf
sahf
cmp
fsubrp
insl
sbb
lea
jmp
pop
sub
dec
popf
cwtl
add
shll
or
jns
mov
sti
js
dec
fs
loope
xorl
xchg
es
push
xor
fisttpl
adcl
outsb
cmp
mov
jo
stc
inc
iret
add
test
lds
int
pcmpgtd
jo
loope
repz
enter
je
fisubrl
jo
rorl
lahf
jo
fwait
ret
movsb
mov
out
lds
es
in
push
xor
addr16
jo
insb
sbb
cli
push
out
jo
stos
mov
ret
dec
push
cmp
mov
jbe
inc
cmp
and
leave
jo
stos
xchg
ficompl
aam
bound
jo
cmp
divl
and
mov
jl
imul
adc
fisubl
insb
jle
lock
xorb
mov
sub
mov
jae
jo
lret
loopne
mov
ret
xchg
movsl
push
pop
mov
lea
js
push
mov
jo
jmp
or
jo
pushf
sbb
dec
orb
push
aam
push
mov
test
fldcw
pop
and
roll
sbb
bound
push
jmp
rolb
rol
test
sbb
pop
jmp
seto
daa
dec
inc
sub
test
out
out
xorl
sbbb
out
scas
dec
leave
cwtl
loope
js
adc
int
and
jo
mov
mov
push
roll
and
sub
loopne
lahf
ret
jo
popa
jae
xchg
rcl
jo
pop
xor
jo
lea
jo
icebp
mov
and
or
adc
jp
jo
xorl
repz
aad
push
arpl
shll
call
adc
sbb
inc
lds
lock
jmp
sahf
dec
movl
xchg
inc
jmp
jns
sbb
push
xor
xor
adc
sahf
jo
or
ljmp
jo
dec
push
pop
jo
jecxz
lds
mov
mov
xor
jo
sahf
rorl
shr
mov
sbbl
fxch
movsb
adc
dec
dec
aad
jo
pushf
inc
ret
cmc
mov
pop
mov
mov
rorl
ret
jno
jmp
and
inc
fdivrp
aam
jns
push
jb
lret
movsl
shll
inc
push
and
or
out
push
sbb
lret
daa
xchg
cmp
adcl
sbb
mov
mov
xchg
jo
leave
push
add
mov
jbe
popf
aam
mov
mov
not
test
testb
push
add
cmp
mov
jo
out
sub
fs
ja
popl
xchg
add
inc
push
rclb
mov
shld
jp
jp
sub
aad
dec
xchg
mov
and
jae
jne
inc
repnz
shl
xorb
xor
fxch
xor
movsl
mov
ret
mov
inc
fsubrp
adc
test
bound
cmpsl
nop
test
fwait
outsl
faddl
add
lcall
cmpsb
jo
xchg
addb
fcmovb
adc
pusha
ret
rolb
jo
loop
lcall
add
jo
sahf
shlb
xchg
icebp
fcomps
vpavgb
test
shr
mov
jo
subl
pop
mov
push
fwait
jo
and
fsts
ret
andb
xchg
clc
ss
adc
rorl
fisubs
and
movsb
jg
mov
scas
bound
and
push
mov
jne
aas
mov
shrl
fcomi
addb
sub
movsb
pusha
jno
adc
xchg
inc
cmc
notl
dec
pop
ja
and
add
orb
xchg
push
pop
aad
cld
jmp
insb
jo
jp
lret
sarb
fdivrp
xchg
cs
in
aam
js
adc
mov
out
ss
adc
sub
mov
leave
addr16
pop
repnz
loope
jo
jge
les
and
xor
aaa
jo
hlt
leave
mov
out
out
pop
and
jl
jo
jge
movsb
push
mov
mov
aam
mov
or
cmp
jo
gs
lds
fwait
jo
popa
stos
andb
cmp
mov
jo
mov
or
jae
jo
rcr
sarl
inc
jo
aad
mov
jo
xchg
leave
mov
out
mov
jnp
ret
mov
adc
pop
lods
js
and
es
adc
and
xlat
jo
jno
or
xor
pop
push
test
adc
jg
addr16
xchg
add
jo
pop
loop
test
xchg
inc
sub
sub
mov
shr
cmp
push
jo
jmp
inc
mov
cli
sahf
jnp
jge
rorl
mov
xchg
lods
fld
test
jo
ret
leave
dec
xchg
ja
cmp
in
out
push
and
push
cmp
jo
out
inc
push
mov
test
jo
jne
lcall
mov
lds
stos
call
mov
ficoml
jo
pop
mov
popa
xchg
jo
sub
ljmp
inc
mov
and
mov
leave
aad
jo
add
pop
jle
insb
lock
incl
les
xchg
pop
jge
bound
insb
rorl
mov
iret
scas
xor
or
loope
lds
cld
xchg
push
in
push
xchg
jo
popa
add
xchg
shll
push
mov
jno
pop
rolb
shrl
push
jo
bound
lahf
jae
stos
rol
jo
cmp
mov
jo
lds
lods
jmp
xchg
jle
test
jo
mov
xlat
out
push
pop
mov
jo
xchg
ret
xchg
inc
andb
test
fs
mov
cmp
xor
jb
loopne
or
jg
dec
pop
xorl
xchg
push
testl
inc
push
jg
jo
add
adc
push
mov
std
or
cmp
rcll
mov
pop
jl
addr16
nop
ret
jo
jp
jnp
lds
scas
inc
mov
unpcklps
fucomip
pop
jle
scas
sub
test
xchg
cmp
cmp
jns
cwtl
jo
dec
mov
push
mov
jecxz
in
xchg
xor
cwtl
sbb
sub
and
aad
xor
dec
inc
mov
pop
jo
divl
mov
mov
mov
jmp
pop
push
popf
inc
inc
loope
inc
cld
xchg
xlat
lods
sub
test
bound
out
xor
jo
push
fcmovu
dec
rorl
jge
jo
ret
mov
lahf
xchg
push
mov
sub
sbb
and
test
jecxz
adc
and
in
mov
rol
mov
jp
popf
push
mov
xor
and
ss
stc
cmp
ret
fnstenv
sub
out
shl
pop
adc
push
rclb
clc
and
js
sarl
push
jo
or
mov
xor
adc
sarb
add
les
loopne
jge
nop
lds
push
dec
mov
mov
push
push
adc
je
shrb
call
lret
xor
cmc
xchg
sarl
push
and
fcomip
jb
popf
addl
xchg
in
sbb
cmp
xchg
jo
push
popf
test
jo
call
shrl
iret
push
loope
js
cwtl
sub
shll
add
stos
cmpsb
adc
sub
enter
jo
aas
sbb
sbb
fnstsw
in
mov
add
flds
outsb
pusha
clc
mov
sti
into
jo
dec
aad
cmpsb
fucomi
and
dec
stos
cltd
jo
sbb
dec
stos
popaw
pushf
jg
jne
jns
inc
jno
int
lock
or
daa
add
push
pop
or
in
leave
mov
jo
add
mov
jo
sbb
or
mov
inc
push
int
hlt
cmp
push
in
mov
out
scas
imul
xchg
push
pop
inc
push
lret
fldenv
jno
jo,pt
int
mov
int
popa
ret
and
in
pushw
stos
mov
sbb
sarl
icebp
pop
cmc
jo
adc
xchg
xor
dec
fnstsw
dec
add
cs
xlat
js
xor
dec
inc
push
sbb
sbb
into
add
packsswb
xor
adc
sbb
fildll
loope
push
jo
jmp
sub
push
cmp
lret
mov
inc
enter
xchg
iret
leave
inc
repz
inc
xchg
dec
scas
jle
scas
std
mov
jo
jecxz
and
cmp
orb
outsl
jo
add
clc
sub
ret
shlb
jle
jo
addb
cld
dec
xor
and
pop
int3
mov
leave
pshufw
call
or
adc
push
and
js
movsl
or
cmp
fs
popf
ret
and
push
jo
leave
push
test
adc
jo
pop
lds
xor
inc
dec
jbe
pop
adc
divb
fs
cmpsl
aad
push
int
or
or
lds
mov
xchg
jge
loop
jne
inc
mov
dec
push
mov
push
or
adc
push
inc
nop
mov
mov
adc
pop
xor
push
mov
xor
xorl
cmp
loope
lods
adc
gs
dec
int
jo
mov
sub
add
jo
bound
or
pop
lds
jp
ds
je
movsl
insb
jo
mov
inc
mov
add
jo
popf
inc
sarb
add
bnd
pushf
push
mov
xor
shlb
sarl
and
jo
inc
ffree
out
dec
in
gs
std
push
push
lds
and
orb
xor
xchg
daa
jle
xsaveopt
xchg
mov
jo
xchg
test
fiaddl
adc
in
mov
out
dec
loop
sbb
add
dec
jle
daa
shll
leave
mov
in
fisubs
cmp
cmpl
rolb
jo
daa
xor
pop
xor
fldt
jo
subl
mov
adc
sbb
clc
or
adc
test
je
movsl
imul
cmpl
mov
ffreep
lret
fstl
iret
jo
aas
shr
xor
dec
andb
out
das
mov
or
js
cmp
and
jo
cmp
mulb
test
jb
mov
les
cmp
push
inc
add
aas
add
sub
xorl
mov
jo
adc
loopne
sarl
jo
mov
fwait
out
lahf
dec
jo
imul
pop
inc
stc
push
push
or
jmp
fistl
nop
fdivs
jo
ret
fdivp
push
jo
pop
lds
add
cmp
roll
mov
jo
and
dec
imul
sbbb
mov
ret
push
push
or
hlt
aad
je
jo
mov
arpl
xchg
lahf
jo
jmp
ret
inc
loopne
aad
scas
inc
mov
or
push
and
jecxz
dec
adc
fstl
adc
jg
les
jo
aaa
sti
jl
jmp
int
insl
push
je
jo
xchg
loope
lahf
push
mov
jo
xchg
xchg
movsb
jg
jo
inc
mov
jo
loop
rol
push
popl
incl
or
or
pop
jb
js
nop
lods
ret
test
pop
mov
sub
repnz
sub
ret
test
or
femms
sbb
leave
xor
jo
loope
xor
mov
arpl
shll
mov
xchg
xchg
jo
lahf
lds
push
or
dec
insl
mov
andb
sti
icebp
or
push
in
incl
outsb
jo
dec
xor
cmp
pusha
and
jbe
inc
mov
negl
jo
stc
lcall
rolb
xlat
out
mov
xchg
adc
lods
jo
mov
mov
jo
jg
adc
jne
lods
sub
pop
sbb
sbb
jns
mov
jo
hlt
pop
movsl
inc
dec
add
mov
jg
jns
sbb
add
cmp
das
ret
adc
lcall
jns
imul
pop
mov
addr16
push
mov
into
push
pop
mov
insl
repnz
repz
jo
test
mov
fsubs
lds
unpckhps
inc
push
inc
pop
cmc
xor
data16
jo
cwtl
dec
jp
mov
pop
lds
test
jo
outsb
aaa
ror
mov
push
adc
cli
gs
iret
mov
add
enter
gs
dec
cmp
mov
and
sbbb
nop
movsl
aad
inc
pushf
jo
add
push
ficoml
jo
cmc
mov
inc
test
jo
pop
daa
out
shll
dec
xchg
loopne
test
lds
outsb
nop
stos
and
jb
fidivs
pop
xlat
jo
cmp
pushf
arpl
stos
insb
jo
mul
mov
jo
mov
out
shrb
jb
in
cmp
mov
inc
stc
lret
mov
cmp
insb
outsb
sub
jo
in
daa
mov
or
aad
int
jne
inc
fdivrl
adc
sbbb
mov
xchg
lods
shll
jae
aad
mov
cwtl
shlb
cmc
inc
dec
xchg
bound
jecxz
cmp
pop
xchg
cs
or
push
inc
jo
andl
cmp
mov
gs
add
mov
mov
sbbb
push
inc
mov
movsl
push
jno
jo
addr16
out
out
push
jo
mov
into
jp
mov
das
iret
scas
jg
fs
bnd
movsb
mov
add
stos
or
mov
imul
ljmp
dec
mov
cmp
inc
insl
or
out
inc
cmpsl
arpl
dec
je
cmp
sarl
jo
lods
jp
mov
jmp
lret
mov
cwtl
test
std
jo
pop
repz
loop
mov
nop
and
lock
pop
data16
inc
mov
xor
maskmovq
mov
ret
inc
sti
inc
scas
cwtl
push
dec
mov
dec
pop
pop
test
adc
jo
mov
dec
scas
out
push
mov
mov
je
jg
bound
mov
ret
aad
push
lahf
and
shll
adc
xchg
shll
pop
arpl
cmp
sub
imul
and
and
subb
adc
popf
iret
add
mov
lret
stos
xchg
or
jo
sbb
jge
ficoml
mov
jo
sub
fwait
sbb
leave
sbb
pusha
cltd
push
push
jo
jge
sarl
std
je
ja
jae
dec
imul
dec
in
mov
or
shr
push
lock
mov
xorb
addr16
stos
mov
fsubrs
inc
mov
data16
inc
jae
inc
mov
jo
or
gs
pop
cs
es
cmc
pushf
push
movsb
rcll
jle
jnp
inc
bswap
test
adc
jg
cmp
mov
sub
cmp
mov
fidivl
cmpsl
jge
adc
out
push
jo
aas
je
mov
rorl
cmpsl
sub
jmp
ljmp
out
call
sbb
adc
mov
cmpsb
mov
cmc
subl
popf
scas
imul
adc
in
js
ret
nop
dec
xorl
outsb
jne
cs
jo
dec
gs
scas
sar
jo
jle
inc
mov
add
lds
fwait
mov
jo
ss
inc
and
mov
lds
or
js
pop
add
addr16
sub
lcall
xorb
sbb
push
jmp
push
orl
or
loope
das
lret
pop
cmpxchg
xchg
fistpll
test
or
mov
sarl
or
xchg
push
pop
or
shr
shr
mov
lds
xchg
nop
jmp
ss
cmpsb
inc
mov
in
pop
sbb
xchg
leave
mov
dec
inc
xchg
pop
cmpsb
fs
addl
add
fs
xor
scas
mov
xchg
jne
add
xor
jle
fimuls
clc
bound
pop
nop
push
jo
cltd
add
ss
jns
lds
jno
jo
xsave
jo
ljmp
mov
xor
jo
jg
inc
jp
jmp
push
mov
out
bnd
mov
jnp
jo
push
xchg
jo
iret
push
pop
cmp
divb
mov
stc
xor
or
mov
outsl
les
mov
sub
stos
leave
jle
fildll
push
push
repz
insb
sbb
es
dec
sub
add
call
jmp
sbb
jg
sbb
mov
cmp
jno
std
mov
mov
inc
cltd
jns
fwait
fs
imul
jo
imulb
dec
scas
hlt
inc
pop
jo
and
cli
outsl
into
out
std
jo
stos
cmpl
jmp
jo
cmp
pop
js
push
xor
shrb
sub
dec
jo
push
fdiv
fnstenv
or
mov
push
pushf
mov
loope
xor
jae
das
scas
inc
adc
and
jo
push
andl
not
inc
xchg
jo
xlat
cs
mov
stos
loope
fnsave
int
shrl
sub
mov
xor
jns
jo
mov
gs
pop
ds
lcall
inc
pop
adc
xlat
xrelease
xchg
leave
mov
jle
ja
es
push
inc
pop
aaa
leave
cmp
push
insb
xorb
cli
js
push
dec
jmp
scas
mov
jo
gs
in
cmp
adc
stc
ret
loopne
jp
jo
fs
dec
popa
mov
pusha
sub
stos
or
pop
and
push
or
bound
js
lea
and
mov
imul
push
jo
cmp
push
mov
les
je
mov
fwait
push
cmp
insb
fistpll
or
insl
adc
mov
cmc
jo
jno
sahf
dec
jecxz
jo
in
pop
les
js
cmp
fmuls
hlt
sub
push
jo
jg
sub
arpl
mov
packuswb
jo
fwait
and
lock
dec
or
inc
cmp
rcl
adc
inc
gs
lea
imul
cmp
xchg
push
mov
es
mov
jo
push
leave
mov
xchg
lock
adc
ror
stos
sbb
inc
pop
les
lds
scas
xchg
mov
jb
pop
jo
push
adc
sbb
sbb
jmp
jo
fnstsw
jo
fs
push
outsl
jmp
aaa
and
divb
rol
in
repnz
popf
cmpsl
sti
scas
jle
mov
or
push
sub
inc
popf
push
cltd
jl
fwait
sub
inc
mov
jp
jmp
es
test
into
jge
jo
in
cs
mov
xchg
js
das
shll
sub
push
pop
sub
int
jo
mov
jecxz
pop
in
subl
and
add
shlb
jo
ljmp
jo
int
cmpsl
or
les
mov
leave
sbb
rcrb
dec
stc
mov
pop
jo
or
mov
jo
pop
scas
mov
jo
sbb
cmpsl
jg
add
in
pop
aas
mov
fnstenv
cld
sbb
adc
ret
std
sbb
adc
ret
pop
bound
jo
imul
sbb
roll
jecxz
je
xchg
int
xor
mov
cmpb
iret
add
dec
jo
pop
inc
sub
inc
xchg
loope
adc
fsubs
rorl
add
je
pop
gs
bound
pop
lods
rclb
in
ud0
xor
bound
sahf
aad
test
mov
jb
repz
fwait
sarl
in
scas
jns
std
jo
fisubs
ffreep
movsb
pop
add
fsubl
jo
fldcw
jp
jp
jo
dec
enter
mov
ret
fldl
push
aad
cs
or
orb
jo
mov
inc
xor
bswap
jge
jmp
js
test
pshufw
and
and
sub
leave
and
cmp
push
or
aas
dec
and
sbb
jo
in
and
push
popf
outsb
jo
je
cmpsb
mov
dec
test
push
std
xchg
lock
clc
repz
or
fcomip
push
jo
mov
jo
scas
ds
ret
es
scas
pop
stos
jb
jo
sub
sub
insl
or
leave
in
sub
popa
dec
nop
shl
stos
pop
mov
pop
xchg
jo
cwtl
fstl
ss
orb
jp
in
orb
lods
subb
cmp
ret
and
xor
push
xchg
xor
mov
icebp
fsubr
push
sbb
push
int3
orb
adc
sbb
jl
mov
jo
jno
mov
add
xchg
subb
bsr
data16
mov
stos
jp
jo
and
jle
mov
lret
setno
hlt
jo
scas
push
jo
gs
aas
sub
test
sbb
adc
xchg
push
out
adc
pop
into
inc
mov
mov
insl
repz
stos
mov
jae
cmp
jge
and
jo
les
imul
jne
jmp
push
movsb
cmp
pop
test
or
addr16
jo
filds
movsl
sub
jo
icebp
and
push
add
pop
loope
sarb
xchg
rclb
cmp
inc
jo
ret
cs
popa
in
xor
mov
jle
jno
je
xchg
mov
lock
fiadds
mov
mov
pop
mov
mov
icebp
movsb
js
arpl
lret
jmp
imul
and
cli
leave
mov
test
repnz
fcmovnb
sub
out
and
dec
jns
lcall
jae
jmp
jo
xchg
lret
enter
das
push
push
and
aad
loope
cmp
int
dec
xorl
xlat
sub
add
jae
cli
xor
sub
and
fs
icebp
aad
adcl
jo
push
jno
bnd
movsl
cmp
or
mov
cltd
push
mov
push
push
stos
pushf
pop
out
lcall
or
or
xorl
push
sub
inc
enter
xchg
cmpsl
or
shll
push
xorl
in
lds
aas
push
cld
push
stc
mov
push
jb
sbb
gs
aad
lea
jmp
rcpps
pop
add
inc
cld
mov
divl
jne
add
jno
movsl
sub
stos
jo
jae
js
rorl
xlat
jmp
fsubs
adc
inc
scas
js
dec
jo
ret
sub
testl
xor
js
rcrl
jo
test
jmp
jo
fcoml
push
sub
jo
int3
aad
std
cmp
mov
clc
jo
pop
inc
xchg
inc
es
leave
mov
sub
jo
xchg
pushl
mov
add
mov
lods
mov
aad
nop
xor
fdivl
in
shrb
xchg
add
mov
adc
adc
std
subl
pop
rorl
jp
mov
push
jle
pop
sub
nop
lret
js
cmp
mov
mulb
xor
loop
jo
adc
xlat
mov
insb
mov
jo
inc
cli
jmp
cs
cmp
cwtl
shll
cmovne
lds
push
das
dec
jnp
sbb
mov
in
das
shll
jp
jo
pop
mov
lahf
jg
inc
mov
shl
xchg
jo
into
pop
push
inc
fs
jno
jo
lcall
jo
mov
xor
jo,pn
out
mov
int
rcrl
and
in
lds
out
icebp
jo
add
inc
push
adc
and
cmp
dec
hlt
lds
and
and
xchg
ja
dec
lret
bound
cmp
adc
dec
push
adc
cmpsl
dec
cmp
jne
test
shl
sbb
bound
or
rclb
je
fwait
cmp
scas
cltd
cli
sti
out
jle
in
xchg
mov
push
rorl
sub
inc
ret
loop
cmp
adc
js
jo
dec
xorps
sub
out
stos
jns
dec
fs
dec
jo
in
fimuls
fisttpll
stos
jl
and
mov
jecxz
test
pop
movsb
push
push
jnp
rorl
or
jg
enter
jb
mov
jo
mov
shr
xchg
les
outsb
insb
fs
mov
xlat
push
loop
movsl
dec
jl
fiadds
in
inc
jns
mov
lds
outsl
mov
fisubrl
dec
sti
shr
arpl
pop
push
sub
loop
dec
pop
cmpb
mov
insb
fs
push
mov
jge
jge
out
jo
cs
and
push
mov
loope
popa
cmpsl
jo
push
push
xlat
cmp
inc
js
jecxz
lods
popf
lret
xor
push
pop
sti
mov
fdivrl
shlb
fwait
push
out
jl
in
cmp
lods
fcomip
cmp
and
and
mov
bound
jo
leave
imul
pop
fwait
jo
shll
jo
push
into
jge
push
leave
push
inc
ds
jo
int3
xor
xlat
jo
add
adc
testb
loop
xor
iret
or
mov
aaa
cmp
dec
cmp
inc
insl
shr
lock
adcb
mov
jo
popf
jbe
inc
leave
movsl
xchg
jo
and
inc
cmp
adc
mov
shr
sbb
push
js
mov
cmp
adc
jmp
aad
push
dec
sub
mov
and
loopne
jp
jo
jno
inc
imul
popa
fiadds
add
mov
in
cli
mov
mov
or
mov
cmpsb
mov
imul
mov
mov
sub
inc
jmp
lds
aas
cmp
sbb
inc
mov
xchg
cs
call
dec
je
js
roll
mov
push
jb
jae
push
lret
roll
jo
incl
push
leave
pop
jp
jo
loop
fisubs
and
mov
cs
js
mov
jo
pop
cld
xor
lds
jb
pmaxsw
or
jbe
cmp
je
jmp
jbe
repz
pop
bound
mov
xchg
orb
xor
jg
cmp
lods
jo
shll
mov
cli
ja
and
ljmp
divl
jp
dec
roll
adc
jo
mov
xchg
out
cmpb
aam
out
fsts
mov
inc
in
jmp
sub
or
in
xorl
xor
adc
std
mov
jo
inc
or
lds
jnp
dec
push
icebp
xchg
ja
std
lret
jo
sub
aaa
jge
sub
int
loope
je
jne
cmpsl
jo
jmp
shll
xlat
daa
jo
and
jmp
repnz
jo
ret
je
pop
sub
leave
jo
push
mov
andb
sub
adc
jo
in
cmp
jns
test
in
xchg
mov
jnp
inc
aad
fs
jae
pop
pop
add
mov
js,pn
fidivs
js
mov
jle
stos
mov
rcll
push
in
jo
lods
jns
loopne
hlt
jo
std
jmp
cmp
jg
push
mov
fldt
jns
jae
jo
push
les
and
and
dec
scas
lock
nop
sbb
ja
mov
lock
or
pop
js
nop
in
push
xor
push
mov
sbb
fildl
jo
cltd
ss
lock
cmp
sub
lret
jo
data16
enter
mov
cmp
shr
xorb
mov
in
addr16
imul
cmp
push
loope
jle
jo
xchg
push
mov
jo
pop
mov
jnp
stos
jo
lds
dec
jo
int
sbb
lock
jo
dec
xor
aas
jno
cwtl
nop
xor
loope
mov
idivb
cmpl
sar
xor
mov
jbe
std
or
in
adc
ret
jge
psubq
aaa
xor
xchg
jo
push
arpl
lds
jo
sbb
jns
add
push
push
cmp
imul
bound
jb
movsl
push
aas
into
lea
sub
nop
fnstcw
ja
jp
jo
fwait
dec
hlt
mov
mov
pop
jno
js
leave
sub
add
rorb
mov
inc
xchg
sbb
jo
fdivrs
add
jo
xchg
je
mov
addr16
jo
adc
push
sub
fisttps
sbb
pop
mov
xchg
leave
mov
jne
les
and
lret
nop
cltd
mov
xorb
hlt
xchg
mov
push
test
add
mov
sub
call
hlt
sub
sub
stos
jns
pop
fsts
mov
jo
loop
mov
push
and
cmp
or
iret
and
and
mov
jge
loopne
mov
jo
mov
cli
leave
lds
cmp
fidivrl
adc
adc
add
jb
cld
sub
sahf
push
gs
and
daa
enter
pop
mov
mov
cmpsl
bound
xlat
mov
cwtl
popf
out
jo
or
dec
das
cs
xorb
pop
sbb
xchg
ret
mov
jo
fiadds
jne
call
jo
scas
push
int3
inc
sbb
jb
mov
jo
fildll
ror
jo
adc
aaa
sbb
push
sub
sbb
push
and
ss
or
mov
syscall
mov
sub
sbb
or
out
jge
pop
push
jp
ret
xor
push
mov
mov
jne
inc
jmp
ret
push
xorl
leave
or
sub
out
andb
dec
jp
hlt
mov
jo
add
loop
stos
jo
dec
mov
sar
xchg
frstor
mov
loope
inc
je
dec
bound
push
movsb
push
test
inc
stos
jo
data16
es
or
fstpl
cmc
jle
daa
jp
mov
jo
jl
dec
ljmp
gs
jo
and
mov
sbb
jo
enter
stc
jo
jl
mov
insb
push
pop
add
jo
scas
push
mov
hlt
bound
movhps
jge
xor
gs
stos
nop
jo
sub
test
in
inc
test
add
mov
inc
fildll
push
dec
test
mov
cmpsb
movsb
inc
or
test
jo
aad
pop
fdiv
mov
cmp
sub
jg
push
fldl
dec
pop
movsb
in
jo
add
popf
femms
mov
insl
into
outsb
jae
xchg
lea
jo
daa
push
pop
movsb
or
jo
xor
mov
and
sbbl
mov
pop
jo
inc
inc
nop
sarl
std
in
movb
enter
xchg
add
inc
inc
popf
cli
jmp
cmc
or
push
jp
jo
ds
loope
sub
jo
ret
divb
xchg
cmp
cmpb
pop
stos
jo
add
xor
adc
dec
es
cwtl
orb
xor
outsb
xor
cmp
jo
in
and
jp
push
in
xlat
xor
repnz
movsl
xor
mov
ds
jo
adc
cmpsl
jns
jo
cmc
pusha
sub
jmp
push
out
sub
or
add
je
dec
xchg
stos
jg
cs
mov
lret
dec
jo
shlb
jo
int
in
pop
es
adc
lock
or
stc
int3
jp
add
out
push
or
jb
imul
and
cmp
cwtl
loop
mov
rcll
jo
xlat
loope
icebp
jo
sbb
test
rclb
jl
mov
xor
mov
ret
pop
xorb
shll
aad
jo
loop
addl
dec
and
andb
or
mov
inc
hlt
push
push
lock
lods
adc
pand
mov
xor
sbb
xor
imul
clc
stos
jo
pop
and
dec
cmp
jo
adc
jmp
inc
icebp
scas
daa
inc
xchg
jo
test
into
jo
loopne
sbb
daa
popf
xor
outsb
lds
pcmpeqw
pop
test
add
stos
add
jo
arpl
lds
dec
mov
les
jo
xchg
dec
cmpsb
iret
add
adc
aad
pop
dec
mov
ret
dec
into
sub
jo
int3
add
and
adcb
or
mov
push
insb
iret
push
sbb
jmp
cmp
test
push
cld
out
jl
mov
cmp
xchg
incl
ds
dec
loop
movsl
fs
mov
fdivr
add
adc
rorl
xor
insb
leave
mov
scas
jo
push
xor
rcll
lds
cwtl
push
ret
jnp
fnsave
jo
mov
and
or
jo
loope
mov
jo
or
xchg
pop
in
ret
sub
movsl
mov
jo
and
xchg
xchg
icebp
inc
jo
lea
push
mov
aaa
ret
shld
cmpsb
cmp
inc
xor
mov
jns
xor
adc
jmp
roll
pop
cmp
jo
sahf
dec
insl
xor
int3
je
cs
push
movsl
ffreep
xchg
jecxz
cmpb
loop
addr16
push
lds
aaa
ret
pop
pop
loop
xor
push
inc
or
jo
pop
push
fchs
jo
xor
into
aad
push
jo
inc
xchg
dec
movsb
lds
jo
jno
xchg
sbb
cmp
inc
and
bound
ret
mov
adc
xorb
shrl
lock
insb
add
lock
mov
mov
ljmp
mov
int
jg
sub
inc
scas
sahf
ss
pextrw
pop
pop
repnz
push
push
cmc
shrl
ret
negl
jo
lret
cmp
shll
in
mov
inc
jo
inc
test
adc
loop
or
sbb
push
xor
cmp
hlt
in
cmp
jge
jo
xchg
mov
loop
cmp
mov
mov
mov
loopne
xchg
jo
test
mov
mov
shrl
pop
lds
mov
xchg
pusha
jo
jmp
and
push
scas
lds
mov
movsb
fcompl
jo
iret
cmp
jo
fcomps
fidivl
pusha
mov
leave
outsl
rcrl
ret
mov
std
ret
xchg
mov
jno
push
cli
and
mov
mov
xchg
dec
repz
or
mov
push
inc
sarb
movsb
jne
mov
add
jp
dec
cvtpi2ps
popa
mov
in
lods
insb
addb
xchg
nop
subl
js
bnd
sub
jo
push
leave
xchg
mov
pop
out
or
in
push
adc
mov
and
lock
cmp
cmp
clc
inc
subb
scas
mov
xchg
sub
inc
sbb
mov
dec
js
shlb
ds
ss
movsb
sbb
test
jo
fidivs
sbb
lea
and
push
std
cs
or
int
bound
jo
rclb
ud1
cwtl
pop
jle
pop
xorl
and
std
sbb
inc
inc
jo
xchg
dec
jge
lds
aas
jo
rcll
das
insb
cmp
or
out
sbb
fwait
cmp
ret
push
jge
jo
rcrl
or
imul
jo,pn
imul
leave
aam
dec
jo
cmp
aaa
and
lock
xchg
subb
sbb
clc
inc
xchg
cmp
cs
mov
mov
jo
mov
jo
dec
mov
adc
icebp
mov
mov
loopne
adc
scas
ss
int
js
nop
mov
xor
lds
rolb
sub
hlt
insb
push
pop
stos
enter
mov
jae
jo
outsb
sbb
aaa
out
sahf
inc
in
jo
outsl
mov
shr
push
adc
aad
dec
lcall
outsb
stc
sbb
dec
idivb
jmp
jno
scas
and
sub
repnz
jo
enter
adc
mov
jo
and
in
adc
and
cmc
xorb
jns
pop
aas
jle
jo
or
adc
jo
test
xor
mov
push
ds
sbb
daa
jo
mov
dec
fnstenv
sbb
mov
addr16
and
mov
jo
add
xchg
add
in
out
push
andb
mov
xchg
bound
scas
sub
in
push
int
gs
frstor
jbe
jo
push
pop
insb
pushf
lods
rcl
dec
dec
xor
test
adc
fs
xor
jo
dec
sub
jbe
inc
subb
shlb
cltd
test
mov
push
or
scas
popa
movsb
inc
jo
lahf
dec
test
mov
jo
dec
cs
enter
add
xchg
fbstp
xchg
and
ds
sub
jne
ret
sbb
repz
test
jg
gs
mov
repnz
add
mov
or
xchg
sub
sbb
clts
fwait
clc
push
les
mov
mov
add
iret
aas
pop
sub
stos
push
jo
cmp
dec
ret
sarl
pop
push
jo
inc
test
ja
fadds
sbb
or
test
imul
jo
loope
loop
test
sbb
push
cmpsb
push
popa
scas
mov
paddsw
jns
mov
cld
jo
rorl
mov
jo
ret
jg
fsts
mov
jp
cmp
aam
xor
clc
int
jo
add
hlt
in
shrb
imul
and
cmpsb
mov
xchg
sbbb
add
jmp
ret
pop
jo
ss
push
lds
jo
adc
aas
leave
jo
xor
or
sub
inc
lcall
jnp
xor
les
insb
jo
pop
lds
mov
in
cmp
xor
dec
inc
jg
jmp
out
test
push
dec
sub
or
jne
sub
lds
xchg
je
fldenv
inc
cmp
mov
cvtps2pd
shll
sarb
adc
jo
cmpsl
jge
dec
fs
xchg
nop
add
cmp
push
jo
adc
push
les
lds
inc
popf
ss
mov
mov
mov
cltd
add
xor
mov
jo
loopne
xchg
insl
les
sahf
mov
mov
pop
cli
sbb
sbb
ret
cmp
sub
mov
mov
sbb
js
jl
or
xorl
fldl
push
js
out
or
mov
mov
insb
cmp
cmp
pushf
sub
scas
mov
addr16
lods
sub
push
mov
cmp
int3
pop
cmp
ja
mov
dec
and
jo
arpl
imul
mov
mov
repz
scas
outsl
mov
inc
push
sahf
sti
sub
insb
jmp
sub
and
sub
loope
jo
test
adc
lea
enter
pop
cs
or
xchg
pop
pop
push
jo
add
cmpsl
rcll
in
mov
xchg
in
rcll
mov
jo
add
ret
mov
jno
aad
popa
sub
fsts
or
mull
xor
test
insl
mov
daa
nop
dec
outsb
pop
adc
jne
dec
and
cmp
dec
adcb
mov
enter
stos
jo
add
pop
lds
mov
ds
pop
fbstp
jp
pop
roll
mov
push
out
sub
lods
sub
cmc
xchg
jo
insl
cs
mov
in
pop
and
fnstcw
xchg
jns
push
xchg
dec
sti
add
inc
jo
stc
push
imul
int
prefetch
cmp
arpl
mov
mov
mov
adc
mov
shlb
fbstp
push
push
es
insl
lock
popf
mov
insb
mov
jmp
mov
xor
fbld
pusha
mov
push
sub
enter
push
ss
ret
pop
sbb
negb
in
jns
rorl
inc
mov
xchg
test
mov
mov
aas
or
inc
sbb
nop
and
pop
and
push
fldenv
out
add
into
jo
adc
jecxz
addr16
jbe
jbe
pop
or
or
mov
xchg
testb
orl
adc
nop
in
adc
rorl
aam
stos
pop
jo
cmp
fst
adc
ret
cltd
jo
dec
cltd
mov
mov
push
ficoms
xor
je
inc
mov
push
cmp
jo
or
sbb
inc
xor
inc
pop
int3
cmp
js
dec
std
int
fs
push
addr16
push
and
jo
push
adc
aaa
mov
int
jp
xchg
mov
push
ficoml
andb
jo
jge
ret
jg
cmp
addr16
arpl
push
lods
jle
shlb
js
adc
push
jo
pop
into
and
jo
test
bound
fs
repnz
into
mov
out
push
mov
mov
fs
xchg
cmpsb
jns
mov
mov
dec
mov
add
xchg
inc
mov
mov
xor
insb
fs
pop
cmc
sti
xor
popf
jl
xchg
jo
ret
push
mov
inc
adc
jmp
xchg
je
jo
inc
loope
std
rolb
cmc
stc
icebp
aad
xor
leave
mov
jo
and
lahf
enter
pop
in
xchg
hlt
sub
jo
iret
outsb
mov
in
adc
mulb
lcall
movsb
xor
fldenv
mov
popa
mov
mov
js
fsubp
lock
inc
xorb
stos
jae
sahf
push
pushf
dec
mov
ret
lcall
sub
pop
idivl
std
aam
or
fisubrl
dec
jo
in
ss
icebp
jo
rcrl
bound
data16
add
ja
psraw
bnd
dec
shr
or
or
mov
lds
push
and
dec
stc
hlt
leave
mov
outsl
scas
sti
shll
jo
les
and
or
inc
insl
adc
push
addr16
mov
sbb
add
jo
popf
xchg
movsl
ret
stos
mov
mov
cmpsl
add
stos
jo
push
aaa
xor
or
xchg
clc
addb
jo
dec
jne
les
movsb
jo
pop
and
shlb
lds
dec
aaa
pop
rcrl
mov
in
je
xchg
sub
leave
test
push
mov
or
jo
call
adcl
std
jl
or
lea
xchg
arpl
inc
sub
push
dec
cld
insb
leave
xchg
jo
pop
test
and
add
dec
mov
addl
xor
push
imul
jle
lds
jecxz
mov
test
je
cmp
lcall
and
lock
or
pop
rorl
jo
jns
sbb
pop
jo
inc
pop
lret
nop
mov
movsl
jbe
mov
je
insb
fmul
push
jbe
xchg
push
fwait
in
sub
les
jo
cmp
inc
sbb
jmp
fistl
shlb
std
outsl
mov
out
mov
push
push
loope
jg
lds
jo
dec
sbb
mov
out
jo
cmc
and
and
bnd
insb
lds
mov
negl
cli
ja
insb
xchg
cltd
push
into
daa
jo
stc
addb
loopne
jb
add
and
cmc
pop
mov
sub
inc
xorl
popa
les
in
pop
xchg
ljmp
faddl
sahf
dec
andb
lea
sub
sbb
jo
ret
xor
jo
ss
cmp
pop
dec
sub
clc
pop
ret
loopne
popf
add
jg
jo
sbb
daa
cmp
out
and
xor
orl
ss
sarl
jecxz
jo
shlb
inc
fld
pop
jo
imul
sub
xchg
jle
adc
jo
mov
int
jns
jo
adc
xchg
into
jo
pop
mov
aad
inc
icebp
jo
mov
cmp
shll
dec
jns
sub
dec
pop
jo
lock
xor
shl
cmpsl
push
jo
mull
push
iret
nop
std
scas
fcompl
lock
xchg
mov
sarl
add
xor
cld
scas
xor
jbe
shlb
ret
and
xchg
fildl
push
jl
lock
inc
test
mov
jecxz
push
test
xor
mov
push
ret
or
outsl
mov
jo
lds
repnz
jo
iret
mov
pushf
std
pop
jo
cmp
sbb
push
jo
loop
sub
jo
or
dec
lods
ret
out
cmpl
fs
and
jp
inc
fildll
or
inc
mov
xor
in
leave
mov
lds
add
popf
mov
jo
pop
adc
jo
outsl
in
icebp
inc
nop
pop
xor
cmp
push
mov
xor
in
test
pushl
loope
insb
sub
les
lods
xchg
and
and
pop
push
xchg
popa
push
cwtl
fs
roll
enter
dec
addr16
mov
jno
and
mov
inc
pushf
pop
dec
dec
lea
jo
leave
jle
cmpsl
mov
lods
jo
cmp
outsb
add
mov
lods
clc
xchg
cmp
lds
addr16
mov
andl
jo
stos
icebp
pusha
sub
inc
shll
cli
sar
inc
aad
gs
lock
add
repz
xchg
loope
sub
and
js
mov
jo
imul
pop
and
cmc
adc
mov
lds
or
shlb
jno
push
add
outsb
mov
pop
pop
jge
jne
ret
repnz
paddb
add
xorb
or
arpl
mov
pop
sub
sub
js
lock
in
lcall
pop
sub
dec
pop
pop
xchg
or
push
inc
in
jmp
negb
adcb
pop
out
mov
sbb
cmp
loope
jo
xchg
addb
pop
jo
jns
sub
xchg
cltd
cmp
jne
insb
movsl
push
incb
loopne
iret
test
push
cltd
sbb
xor
adc
cmp
xor
cmp
scas
stos
adc
dec
mov
push
repnz
hlt
sti
fs
add
cmp
or
mov
sub
aad
stos
sub
jo
movl
imul
stc
push
sahf
inc
push
fmull
mov
hlt
mov
pop
pop
or
jbe
dec
push
xor
jo
xor
mov
jo
enter
jo
stos
insl
jg
add
push
xor
mov
jo
xor
std
jp
jo
dec
mov
mov
inc
sbb
in
cltd
inc
cmc
jns
push
imul
jo
dec
pop
lods
pop
push
popa
xor
jmp
mov
jo
xchg
jmp
stos
jo
das
ds
int
mov
popl
jo
pop
push
std
xchg
sbb
jl
add
ret
or
inc
xor
sbb
add
shr
out
in
js
jo
adc
mov
cli
jb
xor
or
adc
ja
sub
sub
jo
add
das
jnp
leave
jo
sarl
inc
jo
mov
sarb
cmpb
icebp
mov
pushf
loop
jnp
xor
jo
add
sbb
cltd
inc
jle
push
jnp
in
mov
mov
jo
sarl
jns
and
jno
subb
dec
andb
lods
fstpt
lds
dec
mov
insl
mov
push
mov
fwait
hlt
in
nop
jne
into
jns
clc
adc
jo
jnp
test
dec
xlat
lea
je
lock
mov
lahf
loope
lods
fiaddl
sbb
data16
imul
cmp
xchg
push
or
out
push
push
dec
repz
int3
inc
jbe
dec
jle
mov
loope
jne
push
inc
dec
cmp
sbb
sub
inc
jg
lcall
push
js
ret
xchg
sbb
bound
pop
jo
jnp
cmp
and
imul
jo
sbb
xchg
shll
mov
sub
inc
adc
mov
add
inc
cwtl
out
cmp
into
sub
inc
punpckhbw
fisubl
pop
jmp
jbe
cli
dec
call
mov
inc
mov
adc
jo
hlt
dec
mov
jo
inc
xchg
je
and
loop
mov
inc
sub
cs
rclb
xor
mov
ljmp
mov
repnz
or
sbbb
arpl
movsb
jle
mov
xor
mov
push
sbbl
fs
jg
pop
push
jo
ja
std
xchg
repnz
das
out
dec
and
js
push
xor
movl
leave
jo
hlt
clc
push
add
jns
jo
mov
adc
mov
ljmp
int
xchg
push
addb
lds
in
sbb
and
sbb
shll
add
jle
stc
and
mov
jo
fiadds
mov
mov
rcrl
and
add
ret
lret
add
lds
push
aam
jb
clc
jo
sub
test
cmp
jle
push
xchg
inc
adc
add
jge
icebp
cmpb
idivb
loope
loop
scas
dec
jo
int3
sbb
data16
mov
mov
mov
mov
pop
dec
pop
inc
jo
jnp
jl
arpl
fbstp
sbbb
cmp
int
stc
sub
jmp
jo
test
out
jo
iret
clc
sti
out
mov
popf
popa
add
stc
setp
lock
xchg
ret
or
push
dec
inc
insb
jl
jge
subb
push
insb
fcom
and
cltd
and
and
sub
mov
fwait
pushf
in
loopne
adc
loopne
mov
enter
push
leave
inc
icebp
ret
es
xchg
pop
add
pop
lds
jno
shlb
jbe
ror
sar
push
orb
ret
jne
sub
movsl
ret
xlat
push
in
mov
or
js
mov
push
pop
ljmp
sbb
arpl
and
shlb
xor
jo
int
aam
mov
cmp
lds
pop
sbb
jge
cmp
aad
js
mov
sahf
dec
dec
jo
inc
inc
xchg
jl
xor
lock
andb
sub
dec
ja
std
xor
adcb
jo
adc
mov
pop
in
push
jo
push
cmp
jo
lahf
dec
pushf
sub
popa
sub
jo
cmp
movsl
jnp
push
pushf
lret
lret
and
mov
jne
sbb
push
lahf
aam
sbb
xchg
faddl
inc
jo
std
jmp
dec
jo
aas
push
mov
jo
lret
in
and
and
ffree
bound
imul
sub
inc
pushl
leave
rclb
insb
mov
push
jo
cmp
iretw
jo
std
movsb
mov
jo
inc
pushf
out
ret
cmp
mov
lea
addr16
xor
mov
dec
jecxz
aas
push
or
sub
lea
lsl
jle
dec
jbe
ret
dec
stos
vmwrite
sti
inc
and
js
jle
in
xor
pop
lds
inc
out
ret
adc
push
pop
jo
rcl
or
icebp
shrb
lahf
jg
inc
fisttpl
jo
add
pop
or
jo
push
add
or
imul
pop
jo
adc
aas
pop
inc
stc
fnop
adc
lea
jo
and
mov
stos
mov
notl
mov
aas
fisubrs
insb
ret
jg
xchg
jo
pop
sbb
pop
scas
jae
xchg
cltd
jo
xor
push
pop
push
std
enter
jo
lods
rorb
das
inc
sub
inc
mov
aad
push
sub
shlb
insb
or
leave
jne
pop
icebp
arpl
push
mov
xor
je
pop
imul
js
nop
sar
xchg
push
sbb
ja
pop
mov
lods
int
push
stos
jb
loope
inc
jo
mov
out
movzwl
roll
sub
fildl
and
fisubl
cmp
ss
test
add
jo
fsts
xor
andb
push
test
mov
popf
mov
out
xor
fs
dec
mov
pop
fwait
jo
add
enter
shll
test
aas
mov
out
mov
inc
jo
jl
sbb
sub
std
pop
jo
or
xchg
call
jg
orl
lods
xchg
dec
daa
sub
cmp
repz
jecxz
les
jg
mov
jo
jmp
lds
out
push
cli
jo
int3
leave
and
jae
mov
push
add
aad
pusha
fyl2x
test
jo
lahf
mov
dec
sar
outsb
inc
in
mov
push
xor
loopne
inc
xchg
sbbb
adc
fdivs
add
mov
js
jo
mov
and
outsl
fnstcw
xchg
cmp
and
sbb
xor
shl
mov
movsl
jo
sbb
fldl
cmp
or
sbb
mov
sbb
jo
mov
sub
sub
imul
fidivrl
lods
push
or
in
jo
mov
jge
jo
dec
das
xchg
int
xchg
lsl
test
jb
sub
cmp
clc
lds
and
adc
sub
shll
mov
cmc
and
jmp
sub
test
push
daa
xchg
jo
cmp
loope
repnz
adc
hlt
mov
std
jle
sub
movsb
nop
aas
in
cmp
cmpsb
jmp
pop
cmc
sub
aad
push
xchg
test
sub
loopne
add
adc
xlat
add
xchg
and
out
mov
enter
daa
je
xor
or
iret
call
mov
out
jmp
insl
cmp
jo
push
pop
cmp
jo
lea
lods
jo
inc
jmp
sbb
xor
outsl
mov
or
jo
jg
jbe
addr16
les
stos
jo
xor
xchg
lret
push
loop
xchg
lret
jo
jno
dec
jnp
mov
lds
sub
sbbl
fsts
dec
pusha
fs
inc
dec
jo
sub
mov
jo
out
push
mov
mov
sub
pop
stos
in
jo
shr
test
xor
lret
mov
jmp
adc
xchg
jl
movsl
cwtl
jo
fistpl
jns
jo
xor
xchg
cmp
scas
or
popa
insb
mov
push
mov
jo
sbb
std
shlb
jo
inc
xchg
in
call
add
mov
popf
loope
adc
jnp
stc
inc
outsl
addr16
cmp
jo
inc
lds
sbb
push
pop
mulb
push
xchg
in
cmc
add
rorb
or
jle
xor
inc
int
popa
adc
jo
push
inc
mov
jo
and
xor
and
sub
inc
pop
push
fisttps
cs
addr16
jl
shll
push
shlb
ss
inc
divl
mov
ret
mov
sbbl
mov
jo
and
test
push
sbb
jo
int3
sbb
inc
or
lds
and
fldenv
push
seto
pop
sbb
pop
xchg
aas
jo
xor
cmpsl
push
jl
jp
mov
adc
mov
jo
jge
mov
push
jle
rol
popf
loopne
gs
dec
push
imul
xor
popa
dec
xor
xchg
aad
filds
mov
jmp
lds
imul
sub
rol
push
sbb
jmp
mov
jo
icebp
sub
xor
in
sbb
imul
std
mov
shlb
jl
addr16
push
leave
orb
xor
in
in
clc
jo
fs
mov
jo
adc
test
ret
cli
outsl
hlt
or
popa
pusha
push
ret
pop
and
in
lods
or
xchg
jns
pop
daa
jb
into
xchg
in
xchg
push
lahf
scas
xor
inc
push
jo
or
jo
rorl
jo
adc
arpl
in
mov
scas
xchg
lea
ss
xor
add
int
out
mov
push
lds
subb
add
test
sbb
add
and
mov
vmulps
push
mov
pop
nop
into
mov
sub
xor
in
and
xor
fistpll
dec
mov
bound
in
jo
aad
dec
addr16
popf
jo
push
mov
out
and
mov
or
mov
jmp
xchg
imul
inc
inc
in
inc
mov
mov
jo
inc
xor
push
fwait
sub
aaa
cmp
sub
dec
mov
inc
jo
cwtl
pop
vcvtss2si
lcall
jg
fwait
loope
jo
icebp
add
mov
imul
mov
xlat
inc
stos
jle
or
mov
xchg
push
sbb
cs
les
xchg
ss
aas
fs
xor
mov
mov
leave
push
fwait
das
repnz
in
inc
lods
js
sub
arpl
cwtl
dec
sub
pushf
rorb
push
orl
jne
aam
jo
adc
enter
mov
mov
jle
sub
ret
jo
inc
dec
mov
test
and
in
adcb
push
ja
sarb
loopne
int
xchg
jo
aad
or
mov
mov
sbb
mov
mov
jo
int3
sbb
lds
movsl
or
mov
ja
push
and
fisttpll
add
sbbb
push
jo
xchg
push
in
xlat
adc
jo
jmp
movsl
mov
jno
and
jo
ret
jne
mov
bound
xchg
mov
cmc
mov
nop
fcompl
jo
repz
andb
popa
jo
imul
mov
dec
jge
push
movsb
mov
testb
int
mov
sub
xchg
pop
jo
inc
subl
call
inc
push
mov
push
push
jo
fs
stc
jo
ret
pop
push
jo
in
mov
lret
jo
jle
imul
clc
das
push
push
or
sub
pop
pop
xrelease
xor
out
pop
js
jb
add
mov
jo
mov
dec
and
jo
leave
in
shrb
xchg
cld
push
les
vmwrite
iret
sub
jbe
nop
aad
xor
aaa
push
ja
loopne
jo
and
shrb
test
jo
cmp
adc
cli
jle
jo
sub
movsl
clc
jo
incb
hlt
insl
add
jecxz
loop
jmp
lods
jns
xor
jo
xor
shl
adc
jo
cmp
mov
and
ret
aad
loop
xlat
jo
cld
cwtl
jb
lea
jle
jo
gs
inc
dec
pushf
mov
rcrb
push
jg
jo
xor
lds
stos
lods
aas
jo
cs
push
repnz
fisttpl
jge
xor
sbb
jo
push
lret
xchg
and
push
jo
fwait
mov
push
in
rol
add
cmp
jmp
in
jo
xchg
xor
hlt
addl
out
jo
cli
pop
or
xor
roll
pop
rcrb
addb
subl
mov
imul
lret
jle
jo
dec
xchg
pop
mov
in
dec
int3
push
mov
jo
jne
into
cmp
mov
jg
push
mov
sub
jo
inc
mov
sbb
cmc
inc
sbb
sti
mov
sub
sub
cld
jo
arpl
inc
pop
loope
push
mov
pop
divb
lds
and
js
sbb
std
pop
shlb
pop
inc
and
hlt
mov
bound
or
fs
pop
scas
jge
out
inc
mov
imul
dec
xor
adc
data16
aam
movsb
jb
jmp
add
jo
lret
push
lea
push
add
nop
jo
xchg
push
dec
pop
popf
mov
dec
jo
mov
push
mov
push
add
mov
jmp
int
je
mov
fcoms
test
jno
sub
repz
jmp
mov
js
sub
dec
jo
inc
mov
pop
mov
test
pop
inc
add
notb
sbb
data16
outsl
mov
fs
pop
cmp
test
rolb
mov
xor
les
xchg
jo
sbb
inc
stc
jecxz
xorl
and
ret
out
mov
xchg
and
shrb
into
and
mov
jmp
mov
mov
jbe
xchg
jbe
icebp
jge,pn
sub
and
fisttpl
out
out
xlat
jno
dec
adc
lds
in
aaa
loope
inc
sbb
rcrl
jo
add
xchg
jo
or
and
vunpckhps
xchg
popa
ja
jns
jo
test
push
aad
dec
jo
inc
jmp
es
fucomip
sbb
lds
jne
cwtl
ja
cmp
jo
mov
jae
jo
xchg
mov
lret
xchg
sbb
cmp
pop
mov
jo
xchg
push
jge
int
icebp
in
sub
ds
ret
xchg
das
cmp
push
cmc
fdivrs
sahf
jne
jo
lods
xlat
xor
xor
jo
inc
mov
bound
cltd
test
or
lahf
ret
push
in
sub
sbb
js
dec
pop
inc
mov
xor
movsl
stos
jnp
mov
je
jae
push
xchg
insb
mov
gs
fnsave
or
pop
xor
cli
cmc
je
pop
rcrb
dec
and
push
and
insb
mov
cmpl
ss
arpl
xchg
inc
sub
push
xchg
cmp
outsb
mov
dec
shll
push
int3
mov
pop
dec
jo
fcmovne
in
stos
push
jo
jge
mov
vmovups
or
sti
ret
push
bound
fs
sbb
clc
sub
push
fldt
not
je
imul
aad
cmpsl
mov
inc
cmc
js
add
shufps
into
jle
sbb
mov
bound
cltd
insl
inc
and
mov
adcl
sub
xchg
clc
bound
icebp
jle
adcl
push
shr
cmp
icebp
jo
cmp
adc
nop
icebp
inc
popf
ljmp
std
jp
test
ret
lea
jl
pop
shll
movsb
nop
das
cmp
xchg
movnti
pop
jo
add
or
inc
push
jo
mov
ss
sub
out
mov
cwtl
xchg
jl
jmp
hlt
cs
jo
repz
mov
jo
ljmp
mov
gs
jle
shll
mov
lds
jl
mov
aaa
mov
out
nop
fisubl
jb
out
push
pop
mov
and
outsl
jbe
mov
or
jno
jo
call
or
shlb
jbe
mov
ret
imul
jo
lds
fnstsw
aaa
push
out
jo,pn
sbbb
insl
jp
jo
out
fnstcw
mov
push
popf
xchg
lret
inc
jo
enter
and
rcll
jae
mov
jo
aad
or
mov
imul
rclb
and
dec
incl
out
jle
inc
pusha
dec
jo
scas
ret
aam
int3
or
andb
pop
arpl
sub
popa
jo
test
out
and
mov
into
shr
jo
stos
jbe
pop
and
jo
jle
mov
nop
roll
pop
lds
int
out
jno
push
xchg
addr16
pop
jo
gs
fiaddl
inc
outsl
mov
mov
fs
out
fcomps
mov
pop
ja
mov
aaa
loop
je
cwtl
dec
jle
mov
lahf
shlb
int
sarb
shll
lret
add
jo
mov
imul
clc
adc
pop
sub
jns
mov
bnd
stos
in
pop
cmpsb
jo
xor
cwtl
stc
push
cmp
shll
and
in
fscale
or
and
jo
fisttps
in
dec
nop
test
jb
mov
jo
mov
popa
arpl
movsb
pop
jo
dec
dec
mov
fs
jo
bound
stos
jmp
ret
mov
jne
fistpll
jo
bound
lea
mov
mov
push
scas
mov
jecxz
add
aaa
icebp
push
cmc
inc
xchg
xchg
jo
cmp
mov
cmp
sbb
jo
loop
stos
fs
lahf
mov
mov
mov
into
ficoml
cmp
or
gs
xor
test
sbb
cmp
out
movsl
bound
jo
add
inc
sbb
out
push
ja
inc
dec
frstor
xor
pop
sub
inc
data16
xchg
in
jo
pop
loopne
test
push
jo
xor
bound
or
xor
lods
dec
sti
lcall
push
xchg
cmp
ljmp
in
sub
push
loop
gs
test
inc
and
pop
jmp
bound
outsb
jo
in
insl
loope
lret
jo
push
jbe
popf
adc
ret
nop
push
mov
push
sbb
cmpsb
sub
ret
mov
cmp
dec
sub
mov
xchg
mov
jo
xlat
push
push
ret
dec
jo
mov
pop
out
add
adc
jb
inc
mov
add
xchg
loope
jecxz
std
in
mov
add
outsb
xchg
pop
ret
test
mov
lds
or
lret
jns
test
in
test
js
rol
cs
stos
inc
js
mov
add
int3
xchg
pop
leave
sbb
sbbb
fs
and
mov
xchg
stos
jno
movsl
js
add
mov
pop
cmpl
leave
jo
ljmp
mov
lds
push
xchg
xlat
jecxz
sub
inc
xor
adc
jne
mov
stos
and
lea
test
dec
out
push
and
sbb
pop
pop
add
or
pop
jg
adcl
pop
loope
inc
jno
dec
jmp
orb
imulb
call
fistps
mov
and
int3
lock
sti
fsubs
icebp
imul
pusha
jns
mov
scas
loop
popa
adc
movsl
ret
mov
dec
rcll
cs
and
daa
jecxz
push
sbb
ss
jle
gs
lea
leave
cmp
adc
js
adc
sbb
flds
pusha
mov
inc
add
jecxz
mov
les
inc
outsl
lds
xlat
and
jp
jo
cmp
lcall
sub
test
cmp
jo
ds
xor
jo
fadd
push
test
push
sahf
push
dec
and
loope
mov
addb
mov
mov
mov
psubsw
jecxz
nop
aas
stos
xchg
outsl
lret
outsb
xchg
mov
sarl
or
sbbb
mov
add
push
in
jnp
bound
ljmp
dec
leave
shrb
shrb
sbb
insb
push
jmp
sub
mov
lea
pop
mov
adc
mov
data16
pop
push
subl
insl
test
pop
scas
fists
jo
cli
sub
out
xchg
rcrb
add
add
sarl
addr16
mov
aam
sahf
push
push
fiaddl
enter
xchg
les
push
in
jp
jge
jo
int
clc
in
cs
push
cld
jo
inc
scas
mov
sbb
stc
add
sub
testl
out
movsl
sbb
lret
cmpsb
xorl
push
push
sbb
add
jecxz
cmp
in
loope
roll
xor
out
out
fildl
fisubrs
or
into
xor
xchg
je
mov
fidivrs
inc
push
inc
mov
addl
hlt
xchg
das
or
sti
rcrl
inc
lahf
jo
mov
out
std
sub
jno
jmp
cmp
xchg
sbb
sub
inc
out
xor
aam
jo
adc
loopne
outsl
std
shl
lretw
push
cltd
inc
dec
gs
adc
arpl
adc
sub
pop
xchg
or
or
data16
test
fistpl
aad
pusha
movsl
lock
shll
mov
clc
push
push
mov
push
xchg
cmpsl
jle
jge
nopl
dec
sub
out
jo
ret
xchg
subb
shll
mov
ja
jo
add
push
sbb
aam
jo
mov
cmp
sub
incb
adc
adc
repnz
push
mov
jg
scas
jmp
jno
push
nop
jo
pop
and
loope
jmp
jo
xchg
add
mov
add
stos
dec
adc
daa
inc
nop
push
add
jge
push
jne
or
mov
fcmovb
aam
jl
adc
xor
mov
pop
je
jo
sbbl
push
ret
sbb
xchg
insl
jo
adc
cmpsb
ja
mov
pop
jo
mov
in
push
les
leave
or
subb
pop
jge
jo
and
adc
pavgb
movsb
adc
push
and
inc
cmp
xor
outsl
jge
adc
enter
out
sahf
sarl
or
mov
jo
insl
lea
jo
xchg
gs
jo
pop
pushf
std
xor
add
iret
mov
lcall
or
xchg
cmpxchg
add
mov
or
add
out
jo
sub
mov
push
jb,pn
sbb
sub
sub
mov
push
add
outsl
adc
mov
inc
pop
jo
adc
push
jns
jo
xchg
leave
mov
jl
add
fwait
jo
pop
adc
push
out
mov
insl
leave
repz
xor
movsb
inc
std
sub
jg
jnp
pop
pop
scas
ret
mov
sahf
dec
or
mov
mov
push
sub
loope
jo
test
push
mov
cmp
lcall
nop
push
xchg
out
xorb
mov
stos
jo
inc
bnd
flds
jo
push
cld
mov
pop
jo
mov
fisttpll
and
hlt
ret
jge
mov
cmp
aaa
test
lret
jae
push
leave
sbb
jo
jno
aam
mov
add
nop
xchg
adc
jge
lahf
dec
cwtl
adc
ret
shrb
mov
jo
and
hlt
out
or
cltd
mov
mov
popf
das
in
ret
push
jo
ret
insb
jns
sub
enter
mov
stos
jo
imul
mov
push
loopne
cmc
ficompl
fs
fwait
stos
ret
xor
jmp
sub
sbb
jmp
or
jo
ror
fsub
iret
add
imul
xorb
xchg
das
ret
inc
movsl
cs
lds
xchg
pop
sbb
add
and
jge
out
dec
push
jo
lds
into
or
rcrb
pop
test
jo
dec
out
jne
dec
dec
xor
jo
pop
sahf
mov
add
mov
xchg
jo
xchg
sbb
pusha
cmpl
inc
loop
push
jmp
and
out
inc
cmp
sub
sbbb
popa
scas
loope
or
mov
mov
in
lea
mov
dec
test
jmp
clc
push
cmp
jl
mov
adc
add
cmpb
inc
mov
jnp
jo
enter
xchg
adc
and
add
mov
jo
push
jg
loop
push
sbb
and
adc
inc
das
jo
test
pop
ds
loop
je
gs
insb
xchg
inc
stos
dec
fisubrs
sub
push
int3
stc
jmp
fcomps
arpl
fidivrl
sbb
adcl
fists
jnp
mov
je
jmp
lret
cmp
sub
mov
leave
inc
mov
repnz
mov
mov
jge
inc
mov
sub
jo
or
push
int
shr
or
clc
jo
ja
shrl
ret
sub
mov
push
push
push
imul
ss
daa
lock
jne
mov
jo
cli
fstl
sub
iret
fiaddl
in
pop
jo
popf
jno
and
lds
shlb
or
js
test
bound
lret
pop
pop
jbe
mov
mov
es
pusha
lds
ljmp
cmc
push
or
jo
sbb
js
cmp
aad
cmp
jae
inc
das
pop
adc
sbb
add
lret
fstpt
out
or
and
out
shl
mov
inc
cmpsl
cmp
int
adc
es
std
sbb
cli
jo
push
inc
pop
sub
add
outsb
aam
pop
shr
shlb
inc
insl
aad
mov
jb
push
fmull
scas
inc
insb
bound
jo
lock
inc
cmpsb
or
cmp
pop
ret
jb
mov
jo
aas
add
mov
cmp
outsb
js
test
jb
jo
mov
stos
add
mov
in
add
lret
stc
mov
jo
fnsave
shlb
dec
ret
inc
add
test
leave
daa
call
mov
jo
adc
out
cmp
in
mov
loop
in
xchg
xor
scas
das
xor
sbb
jo
hlt
and
xchg
push
roll
sahf
jge
mov
subb
mov
rcl
pop
stos
jne
jecxz
push
sbb
inc
xor
push
xor
jmp
xchg
push
aaa
add
mov
add
xchg
or
cli
sub
jo
fsts
in
aam
mov
inc
ss
inc
mov
or
cmp
mov
push
dec
push
jecxz
dec
mov
leave
or
xlat
mov
mov
and
dec
xor
push
jp
lock
mov
scas
test
aad
mull
cmp
cwtl
std
loopne
leave
adcb
dec
and
call
push
mov
dec
mov
add
inc
jmp
insb
jo
adc
addl
xor
cld
or
test
aaa
insl
push
dec
lea
jne
subl
xor
jo
push
mov
cld
loopne
push
push
aad
xchg
shrb
gs
mov
rorl
jo
cmp
xchg
test
fnstsw
outsl
jo
push
shlb
sarl
fbstp
mov
add
xchg
int3
icebp
scas
jo
pusha
not
jae
movb
ljmp
sub
add
push
sbb
rcl
add
xor
cmp
fiadds
cli
add
or
in
psrad
mov
and
xchg
mov
fwait
shll
cltd
cmpsl
xchg
add
pop
xor
in
nop
jp
imulb
or
jo
cwtl
xchg
lahf
sahf
inc
pop
loopne
xor
and
jmp
inc
mov
xchg
sti
imul
jo
loope
mov
push
ret
test
mov
je
nop
or
push
dec
mov
jo
and
stos
xor
jo
mov
lds
pop
sti
sbb
lahf
push
xchg
or
push
jmp
lds
sbb
and
icebp
fidivrs
bound
je
push
jo
jl
pop
mov
lock
add
shrl
inc
popa
and
setnp
xor
mov
add
sbb
push
jo
arpl
orb
mov
idivl
jo
inc
sbb
mov
push
jo
std
push
xor
xchg
cmc
divl
mov
lret
sub
cmp
inc
sbb
rcr
or
jb
imul
gs
dec
sbb
inc
mov
in
pushf
lods
jb
or
loope
jno
jo
sbb
mov
inc
sub
movl
mov
add
lds
push
movl
jo
insw
add
shll
int
stos
icebp
pusha
xchg
addb
clc
sub
stos
jo
les
add
pop
mov
mov
js
fcoms
gs
mov
dec
je
notb
popa
adc
inc
add
inc
jo
shlb
loope
dec
jge
jo
gs
dec
ja
sub
adc
adc
xor
pusha
loopne
inc
divl
int
iret
cs
jo
cli
push
roll
jo
enter
lahf
cmpsl
and
sbbb
leave
xlat
mov
rorb
ss
pop
ret
fs
adc
jne
inc
inc
cmp
shll
insb
inc
and
mov
mov
in
add
pop
ret
clc
jo
fstpl
daa
prefetcht2
aaa
mov
dec
jo
mov
insl
out
bound
jo
rorl
add
sub
andl
icebp
daa
sub
stos
test
bound
jp
push
inc
in
mov
xchg
push
in
jmp
sub
jo
jecxz
jns
mov
jae
sbb
leave
cmp
xchg
dec
push
jns
jo
and
test
inc
dec
or
test
es
cmovge
jp
lds
mov
inc
out
push
in
pushf
mov
into
das
std
jo
mov
and
jle
mul
je
in
ret
sbb
cltd
sub
inc
and
jo
adc
les
les
scas
jo
lods
push
cmp
xchg
test
adc
ret
pop
mov
mov
cmp
jne
or
mov
aas
cmpb
test
pop
push
jno
mov
push
enter
jo
sbb
pop
inc
out
jo
cwtl
iret
mov
push
in
mov
jo
lds
test
jo
pop
push
cs
sub
xor
test
add
jae
pop
sbb
and
je
pop
std
scas
or
push
lahf
mov
dec
pushf
rol
pop
nop
xchg
xlat
sub
mov
ja
das
fwait
pminsw
xor
in
jl
mov
mov
aad
leave
es
js
paddb
sub
rolb
icebp
inc
jo
rorl
dec
and
popf
jmp
adcl
jo
sub
dec
jo
movsl
dec
std
aas
xchg
jecxz
ret
mov
in
pop
mov
jo
or
rcr
fucom
jl
or
pop
int3
lds
jmp
shlb
fnstenv
xchg
jo
out
fcmovnbe
or
fbstp
icebp
add
push
pop
imul
bound
push
jo
pop
ret
cmp
out
inc
imul
cmp
xchg
jo
das
xorl
jg
mov
sub
sbbb
ds
dec
or
xchg
lcall
icebp
stos
rorl
in
sub
lcall
cmovns
mov
dec
mov
bound
jb
jnp
jbe
mov
pop
bound
fisttpll
and
or
dec
jo
ljmp
jo
cwtl
lock
test
les
mov
adc
jmp
dec
push
js
lahf
bnd
cmp
dec
jo,pt
cmpsb
divl
xor
jo
rcll
jle
push
xor
in
jge
lret
mov
jo
cmp
and
stos
jo
pop
sbb
lock
in
rcl
mov
push
mov
jle
and
cld
push
mov
repz
int3
arpl
addr16
xchg
xchg
bound
push
loope
adc
outsb
add
lock
and
cmp
ja
add
fsubs
cmp
adc
jns
fdivr
mov
push
mov
inc
push
pop
adcl
mov
mov
jo
cli
mov
jno
jmp
mov
stos
jo
movsb
xchg
jo
ljmp
das
fistps
and
adc
jo
imulb
fldt
mov
nop
dec
mov
movswl
mov
jo
outsb
adc
lret
pop
add
jo
xchg
loope
enter
xor
icebp
xchg
repnz
aad
cmpsl
pop
lock
fldenv
out
andb
testb
and
dec
inc
pop
jo
cmp
shll
mov
mov
ljmp
movsb
inc
dec
mov
jae
enter
jo
xchg
adc
lods
nop
jg
mov
imul
loop
and
ljmp
xor
cmpsb
sub
mov
in
leave
sbb
in
push
js
add
jo
mov
shrl
lahf
sub
xor
ret
mov
shr
sbb
pop
jo
lcall
jo
pop
ja
xor
push
sub
std
cmp
dec
in
push
jp
add
subb
lds
add
adc
mov
repnz
mov
push
les
pop
cmp
shrb
jge
inc
mov
ja
in
ja
cmpsb
lods
loope
pushf
jle
mov
test
nop
mov
mov
out
pop
scas
loope
sarb
fs
mov
mov
loope
push
jmp
sbb
mov
mov
rcrb
jbe
pushl
scas
mov
sub
jo
leave
add
and
mov
adc
xor
shlb
pop
jl
mov
xor
int
out
push
jo
or
inc
push
sarb
jg
jno
cwtl
and
inc
jns
dec
jp
arpl
cld
or
sub
pop
lret
inc
jo
loope
test
jo
ret
or
mov
xor
push
sub
push
lea
jae
cmp
std
lods
outsl
das
dec
xorb
pop
bswap
or
js
jle
xchg
in
pusha
push
xchg
loopne
mov
fwait
cmp
jge
jo
mov
or
roll
push
les
jmp
pop
fs
cs
inc
xchg
rorl
pop
sarb
iret
and
adcb
ljmp
cmp
pop
fdivs
lret
xor
shll
mov
sub
std
ret
push
sbb
pusha
enter
xchg
shll
outsb
hlt
repnz
add
xor
and
ret
push
jo
daa
inc
leave
test
mov
xorb
stos
jo
cmp
push
or
jl
push
mov
rolb
xlat
test
leave
cmp
xchg
dec
int
sbb
out
ret
jnp
pop
jo
lcall
or
or
pop
xor
lds
sbb
sub
jge
clc
popl
xorb
or
fimuls
call
jo
leave
add
nop
jo
je
daa
loope
and
sub
stc
jle
xor
mov
inc
jo
aaa
pop
lcall
and
lods
jo
cmp
nop
sbbb
sub
in
and
jle
or
xor
insb
ljmp
inc
sarb
iret
mov
je
fs
popa
lods
mov
fsubl
jo
sub
mov
jb
xchg
mov
lods
mov
popa
test
push
add
mov
call
jg
mov
push
and
insl
mov
jo
sub
sbb
into
xchg
leave
mov
xor
add
repz
lcall
icebp
ret
aaa
lock
js
mov
mov
xchg
std
or
mov
es
add
push
or
add
cmc
and
mov
into
scas
adc
jg
sti
js
xchg
jb
pop
movsl
mov
jnp
adc
shrb
cmp
pop
sti
jmp
adc
imul
dec
shll
inc
jecxz
mov
jne
xlat
stos
out
loope
pop
ret
xchg
jo
push
out
lds
lcall
fwait
jo
outsb
jo
enter
dec
add
xchg
bound
xchg
dec
push
aad
insb
sbb
push
lcall
adc
cmp
jo
xchg
sbb
int3
in
inc
adc
jp
ror
cs
out
loopne
inc
repnz
mov
fs
pop
jne
test
pop
push
adc
insb
imul
or
push
loop
jecxz
insb
rcl
shlb
mov
or
dec
or
cmp
add
add
jbe
inc
or
outsl
paddq
xorb
mov
sbb
cmp
pop
add
jo
mul
dec
jb
fwait
inc
jo
aas
out
adc
shll
xchg
and
xor
push
mov
xor
sbb
xchg
dec
mov
inc
ja
push
dec
push
mov
mov
mov
pop
mov
push
lea
scas
adc
fiadds
gs
mov
sub
jo
arpl
lret
fmul
xchg
mov
sahf
rolb
mov
jg
in
push
or
push
add
jp
pop
popa
loopne
jl
xlat
inc
jo
dec
mov
mov
decb
cld
ret
je
jbe
andl
cmp
adc
push
jp
jo
xor
mov
mov
mov
rcll
sbb
jae
ret
sahf
rcrl
xchg
jb
aas
vsqrtss
inc
sub
movsl
aas
jo
int
xchg
sbb
out
jo
mov
mov
pop
movsb
data16
mov
rolb
pop
jmp
and
xchg
mov
lds
int3
xor
mov
cltd
fsubrs
insb
cld
jo
aaa
inc
jb
sbb
inc
push
adc
fstpl
je
jo
mov
bound
pop
push
push
js
lock
adc
nop
mov
je
inc
fdivrs
xor
or
ret
mov
inc
addr16
dec
outsb
pusha
mov
pushf
sbbb
scas
pop
inc
out
aad
pop
xor
rorl
mov
loop
push
push
adc
adc
bound
sub
push
jo
jmp
jmp
daa
xor
jp
jo
dec
pop
in
mov
or
ss
cmpsb
insb
aas
jne
shll
sub
outsl
and
jo
leave
cmp
mov
sub
loope
mov
jo
enter
shrl
sub
dec
xor
bound
movsl
mov
mov
out
pushf
push
xchg
cltd
out
imul
andb
in
fnsave
jo
or
in
xchg
mov
xchg
in
push
jg
jo
jmp
pushl
mov
test
cwtl
pop
or
sub
pop
aaa
adc
jo
es
push
loope
negb
mov
mov
pusha
lcall
cld
push
mov
dec
sub
shrb
inc
nop
out
out
bound
xchg
and
add
and
sub
es
enter
adc
andb
imul
pavgw
xor
jle
pop
je
jo
mov
call
mov
lock
inc
stos
fbstp
push
cltd
subb
fdivs
sar
cmp
dec
in
clc
jo
mov
mov
dec
jecxz
sbbb
lds
jbe
mov
mov
push
std
dec
mov
push
cld
pop
hlt
xchg
cmp
ja
inc
in
leave
push
jo
sbb
inc
loop
insl
add
or
push
outsl
mov
dec
je
sbb
add
add
movsl
mov
aas
pop
imul
jo
jns
jb
daa
and
popa
cmp
cmp
or
enter
xchg
xor
jle
iret
sbb
jmp
mov
pop
jo
js
les
jmp
xor
cld
jp
jo
call
jl
jo
mov
filds
lds
push
cmpsl
jbe
pop
inc
aad
cmp
sub
fstpl
nop
daa
push
std
sub
xchg
jo
sti
iret
sub
push
test
inc
xor
shll
mov
sbb
or
adc
inc
xchg
xchg
pop
test
mov
mov
jo
mov
jo
aaa
xor
ficoml
in
inc
fnsave
bound
fs
idivl
int
mov
sbb
add
outsb
loope
push
data16
push
aas
xchg
test
mov
and
jecxz
pop
or
push
jo
cmp
mov
icebp
push
sbb
mov
adc
xchg
mov
fbstp
fnstsw
leave
in
inc
addr16
push
xor
in
push
mov
ret
jo
push
lcall
jp
rcr
jo
lock
add
jo
and
cmpb
jno
sbb
ret
cld
nop
ja
sti
icebp
ja
sahf
or
movsb
xor
jb
aam
inc
sub
leave
jns
jo
inc
and
push
jo
sub
les
stc
aad
es
jo
dec
add
adc
cmc
fs
lret
daa
cmp
iret
jo
mov
push
inc
clc
sbb
in
mov
jmp
mov
sub
jo
cmp
paddb
push
lret
fisubl
in
jo
dec
loop
dec
int
fisttpll
mov
push
inc
and
cmc
jne
jo
rcr
ret
mov
addl
jo
loop
sahf
test
ds
jb
cli
inc
aas
jns
call
cmp
push
pop
and
sbb
arpl
jo
pop
ret
cs
test
jo
roll
jo
mov
mov
dec
cmp
stos
adc
xchg
bound
fs
fldenv
cmc
mov
jo
push
loopne
pushf
lret
jo
es
jb
push
ja
jo
or
xlat
mov
rcl
test
inc
xorl
bound
push
sub
jo
or
out
jmp
pop
jecxz
mov
jo
xchg
fisubl
jo
rcrb
movsl
outsl
bnd
adc
std
sub
adc
in
daa
xchg
dec
leave
cmp
xchg
std
jo
cmp
mov
xor
jg
xor
xor
pop
pop
inc
xchg
jo
dec
ret
xchg
insl
push
scas
jg
pop
paddw
orb
and
jmp
jge
in
leave
jle
jo
push
je
sub
mov
mov
jo
dec
cs
movl
mov
rcll
dec
inc
jo
daa
call
adc
mov
in
in
and
jne
jle
sbb
push
clc
aam
jo
push
mov
and
pop
lds
mov
jns,pn
pop
sbb
xorl
andb
jo
ret
jne
jl
jmp
push
addr16
push
jns
lahf
stos
jp
jne
sub
scas
push
clc
jle,pt
pop
jns
push
add
xchg
mov
or
mov
jmp
subb
iret
sahf
inc
mov
ret
das
pop
jo
mov
sbb
inc
dec
bound
sub
stos
jo
mov
outsb
mov
add
jo
aam
or
mov
test
mov
movsl
lcall
inc
add
fs
fs
enter
add
stc
cmpl
jb
int
jo
out
iret
mov
das
lods
dec
ds
push
inc
rclb
push
and
enter
in
dec
jecxz
pop
fnstenv
jge
loope
clc
popa
xlat
jo
adc
dec
je
cmp
ja
insb
xchg
call
push
inc
jecxz,pn
xchg
outsb
icebp
repz
icebp
or
xor
in
adc
push
js
ret
clc
xor
jo
sbb
mov
jge
in
and
orb
stos
rorb
add
loop
push
fiadds
shrb
mov
dec
pop
jl
sub
jl
jno
sbbl
js
xchg
xor
mov
add
jo
adc
pop
lea
sub
pop
fld
cld
xor
lock
jne
stos
or
inc
push
fisttpl
rclb
add
sub
fstl
aad
push
je
call
fidivrl
jo
shll
in
ficoms
mov
sahf
jo
pushf
jge
jae
inc
popa
mov
int3
mov
lahf
dec
shll
data16
lds
inc
test
aad
je
xlat
sub
sub
hlt
add
lods
xchg
jp
rolb
sub
xor
les
mov
ja
or
and
shlb
stc
xor
jae
gs
mov
je
sub
push
test
ret
dec
popa
pop
test
push
jecxz
cli
xchg
push
mov
push
pop
into
push
and
sub
or
and
pop
xchg
push
jne
stos
mov
cmc
test
orl
or
and
jo
cmpsl
pop
int
icebp
rclb
pop
push
out
inc
jo
jae
outsb
and
cwtl
lcall
cltd
psrlw
aad
sahf
les
das
add
inc
sbb
jo
stc
sarb
cltd
add
mov
insl
jo
ret
sub
push
pop
in
cltd
fisubrl
in
pop
jmp
shll
push
sarb
adc
jl
aad
sub
into
jo
inc
in
cmpsl
nop
xchg
loopne
xor
fldcw
and
std
mov
pop
movsb
sti
pop
or
rcrb
push
out
add
stos
jmp
movsl
clc
loop
lret
add
push
aas
jb
xor
mov
push
cmpl
jo
jecxz
xchg
inc
test
or
mov
inc
movsb
jo
or
fscale
pushf
jno
lock
lcall
test
cli
shr
mov
insb
inc
in
cmp
cmpb
repnz
push
adc
xchg
xor
push
decl
lcall
cmpb
push
xor
cmpsl
jo
shl
adc
jo
push
cmc
mov
jo
sahf
out
inc
movsb
pop
push
sbb
lahf
sub
in
push
stc
and
inc
xlat
nop
lret
ret
fadds
js
sub
orl
or
add
lea
mov
xchg
in
icebp
loope
mov
mov
xor
lds
fadds
mov
inc
stos
ret
add
mov
subb
and
inc
scas
sub
ljmp
jo
add
jo
jb
ljmp
outsl
pop
or
jo
dec
sub
ret
sbb
xor
lds
inc
aad
cmp
jp
iret
sub
dec
mov
cli
pop
push
vandps
mov
movaps
lret
mov
and
adc
jo
sub
mov
or
sub
jbe
push
mov
jo
or
movsb
inc
test
daa
data16
push
mov
mov
jo
sub
cmp
test
mov
cmp
insb
fisubl
hlt
or
int
inc
ja
js
loope
aas
movmskps
sbb
xor
sahf
mov
push
movsl
stos
add
in
push
push
js
add
jns
jo
sbb
fcomps
pop
mov
mov
pushl
mov
adc
lds
xor
ss
lahf
andb
and
loopne
mov
fildl
jo
scas
mov
rclb
jl
std
jo
inc
mov
jo
mov
xor
int
lret
sub
mov
push
pop
loopne
jne
cmc
nop
icebp
jo
xor
or
hlt
stc
jo
int
inc
divl
loope
fs
andb
cmp
adc
out
mov
insb
jo
add
push
lahf
xor
jo
push
repnz
sbb
shll
fcoms
outsl
mov
jno
jo
pop
lods
pop
cmp
xorb
inc
add
popf
js
mov
mov
loopne
in
and
pop
loop
mov
ret
jo
stos
shll
push
repnz
jo
fcomps
aad
fnstenv
jmp
cs
or
and
cli
adc
cltd
jmp
jl
push
nopl
mov
nop
sarb
ja
and
movsb
sbb
mov
jo
inc
xchg
push
push
inc
jo
push
xor
adc
jo
add
pop
mov
pop
jo
mov
out
loop
imul
jo
andb
sub
xchg
jbe
push
inc
inc
xchg
and
loop
jo
daa
push
or
mov
gs
ret
dec
and
jo
ljmp
jo
stc
sub
lret
mov
aam
adc
inc
pop
push
push
ljmp
out
push
rolb
fcmovnbe
jo
push
inc
test
cmp
pop
in
inc
sbb
jo
jl
icebp
adc
jl
pop
mov
rcrb
mov
pop
and
rcll
mov
jecxz
test
not
mov
push
add
leave
lods
ret
mov
in
clc
jo
jno
shll
fbstp
jo
pop
inc
pushf
lds
mov
or
xor
clc
out
cmpsl
call
mov
mov
jmp
loope
jo
lods
sbb
fs
mov
push
fimuls
xlat
cmpb
cmp
pop
in
movq
inc
loope
push
cs
fstpt
js
das
call
aam
js
sub
mov
addb
add
lahf
xor
sarl
mov
sub
push
sub
push
inc
jo
mov
ljmp
mov
inc
xchg
jo
push
test
shll
jnp
push
inc
lock
cld
mov
add
jo
stos
push
lea
fiadds
roll
jno
push
mov
loope
rcrl
cld
inc
add
mov
aaa
mov
jo
rcll
push
sub
jo
in
add
outsl
ja
sub
mov
jo
fmuls
out
nop
dec
std
lcall
mov
add
jns
jo
popa
gs
mov
das
or
test
cmpl
and
sbb
sbb
rorb
mov
jo
push
mov
push
pop
fidivs
jo
xchg
std
push
lock
jne
jns
push
mov
adc
hlt
mov
cs
jo
mov
xchg
popa
xorb
test
jl
outsl
insl
xchg
dec
jo
aaa
mov
push
jo
sub
subl
sbb
sub
js
push
inc
in
sbb
out
aaa
inc
scas
cmpsb
sub
es
push
add
jo
and
int
cmpsl
or
jo
lret
mov
icebp
push
jo
xor
out
jg
jo
xor
adc
jo
imul
data16
add
adc
jo
fwait
orb
loope
push
add
adc
js
mov
pop
fwait
dec
mov
frstor
jo
sbb
or
mov
shlb
adcl
ret
jnp
insl
sub
lds
pop
in
insb
and
mov
jp
mov
dec
push
mov
and
push
cli
movsl
adc
and
sub
xor
or
lock
push
lret
fidivs
sbb
cmp
pop
cmp
out
jo
mov
insb
cs
jecxz
aad
int3
pop
jbe
jp
jo
jle
out
jo
push
shlb
mov
leave
fwait
imul
inc
push
sahf
jmp
aam
jo
int
fs
sub
dec
push
popa
stos
xor
jo
or
addb
aad
jo
sbb
fs
ret
femms
outsl
jb
mov
sub
mov
shlb
imul
mov
mov
mov
repnz
dec
stc
mov
test
cmp
ds
sbb
ret
jp
jo
jle
scas
xchg
xor
and
fs
data16
jo
mov
dec
fs
imul
xor
add
bound
adc
sub
mov
in
jne
push
pop
push
je
or
int
xlat
lock
mov
cmp
or
enter
dec
stos
dec
push
imull
mov
dec
jo
es
pop
ret
stos
loop
jo
push
icebp
adc
adc
into
dec
xor
imul
pop
ljmp
dec
mov
jnp
js
test
imul
jo
test
add
gs
lock
fsubrs
sti
xchg
push
les
push
pop
dec
mov
subb
sub
out
xor
rep
push
mov
mov
jg
ss
inc
mov
lock
mov
ret
js
in
lds
mov
push
pop
rol
and
jle
clc
jo
or
int
lret
rcrb
xorb
xor
dec
cld
mov
out
in
sub
jle
push
inc
sub
pop
jp
jmp
xlat
adc
in
cmp
jo
rol
dec
xchg
je
jo
imul
cmp
xchg
mov
sub
mov
fmuls
xor
sub
shll
jo
pushf
xor
jo
int
xchg
jns
les
scas
iret
std
or
mov
mov
jo
in
jecxz
xchg
inc
insl
mov
jo
adc
dec
mov
push
leave
jno
imul
pusha
les
xchg
mov
sbb
hlt
rol
mov
popf
das
stc
sbb
bswap
dec
stos
mov
inc
pop
int3
les
lcall
add
nop
mov
inc
mov
mov
cmp
jp
loope
fimull
pop
mov
data16
mov
shrl
shld
loope
add
test
adc
jecxz
cmp
fcmovbe
ljmp
rolb
andb
lcall
lret
das
dec
sbb
mov
bnd
out
clc
mov
rcll
dec
std
cmp
mov
add
lcall
std
add
sub
iret
out
stos
jbe
jmp
mov
outsl
div
in
inc
jge
ss
rcrb
popa
xchg
push
fs
push
mov
sbb
stc
mov
js
movsb
scas
sub
pop
mov
pop
shrb
push
inc
cltd
mov
or
jnp
push
popf
test
in
cmp
mov
xchg
fsubrs
push
fsubp
jo
sti
push
xor
push
lods
dec
mov
push
movsb
pop
icebp
rolb
int
ret
mov
sbb
inc
jo
mov
cmp
scas
cmpsb
insl
inc
je
push
or
sbb
inc
mov
dec
mov
pop
mov
lcall
adc
js
shrl
jo
dec
data16
fisubrl
adc
jno
rcrl
add
insl
shlb
jo
and
xchg
mov
inc
repz
jns
jo
shrl
nop
mov
fists
and
jo
xor
scas
jne
mov
cld
sbb
jns
adc
test
mov
mov
xchg
roll
push
mov
scas
ret
jo
out
add
cmpxchg
roll
push
ljmp
sub
je
lret
leave
imul
or
js
jbe
dec
in
nop
pop
mov
movsb
rolb
pop
jno
fisttps
dec
mov
mov
cld
jo
mov
fsubs
enter
inc
cmp
leave
or
jo
sub
hlt
inc
mov
jo
lret
ret
push
xor
test
lock
jae
sub
js
xchg
out
push
mov
pop
test
ljmp
xchg
in
push
pop
jo
aad
mov
jle
in
inc
xchg
das
jo
xchg
cmp
popl
int3
sub
mov
movsb
out
js
jns
imul
mov
push
cld
jmp
xchg
adc
js
nop
or
ja
stos
dec
jo
jne
dec
cwtl
jb
or
mov
mov
mov
mov
mov
inc
or
xor
nop
and
es
cli
ja
call
inc
sbb
add
aad
jo
ja
push
rcrb
sbbl
cmpsl
jo
leave
test
inc
jo
mov
adc
jo
andb
push
sub
dec
lahf
lods
dec
mov
jo
mov
rcl
movsb
xchg
xchg
jne
adc
dec
bound
dec
cmc
push
pusha
jge
jl
xor
mov
sub
loopne
mov
xorl
mov
lahf
icebp
mov
dec
and
in
iret
addb
int
jo
bnd
sahf
inc
cmp
sbb
shll
movb
and
lret
scas
das
dec
adc
jo
pushf
in
mov
out
mov
shlb
jmp
leave
push
sbb
bound
jle
gs
vzeroupper
jg
cwtl
pusha
sub
andl
pop
inc
fidivs
lahf
add
lds
data16
movsl
inc
popf
fldl
mov
pop
sarl
sub
pop
sub
aad
fs
jle
dec
inc
mov
xchg
mov
sub
adc
lret
insb
or
insl
xor
gs
ficoms
data16
jo
lea
sbb
mov
orb
jle
imul
mul
mull
out
dec
xchg
rol
gs
jnp
paddd
aad
int
jo
push
fistpl
ret
int3
sub
jo
addr16
jno
cwtl
sub
out
inc
pop
movsb
jmp
and
out
scas
cld
daa
adc
mov
xor
jo
popf
pop
cmp
or
pop
das
inc
js
out
dec
cltd
jo
cmp
popf
fcoml
jae
in
mov
int
orb
add
insb
insb
sub
or
dec
stc
jle
add
dec
pop
imul
cmp
movsl
push
rclb
fs
mov
subb
jns
xor
mov
push
push
insb
pop
mov
lds
out
mov
mov
push
jne
xor
push
pop
ror
or
dec
js
and
pop
psllq
mov
mov
jb
and
push
js
sbb
pop
xchg
lock
mov
mov
xor
pop
jo
out
out
mov
inc
adc
movsb
dec
cmp
mov
aaa
cwtl
je
cltd
mov
or
inc
sub
jp
push
aam
lret
push
mov
inc
jo
jle
dec
cs
mov
sub
add
int3
jo
jmp
xor
sbb
imul
test
test
jo
les
lods
loopne
stos
jmp
shlb
mov
jo
das
popa
loop
and
std
jo
mull
aaa
cli
test
inc
iret
fistpll
jo
in
push
and
outsb
xor
jo
dec
in
shll
stos
fidivs
add
push
and
dec
mov
fbld
and
push
mov
sub
push
or
js
adc
sub
pop
iret
jmp
dec
cwtl
push
and
push
mov
sahf
push
insb
test
jo
pop
xor
inc
jo
mov
xor
ret
and
xchg
popf
sti
push
push
mov
adcl
test
fs
jo
imul
jo
das
dec
cld
sahf
jo
in
xchg
shll
push
inc
mov
aam
jo
aaa
stos
xchg
or
in
ljmp
mov
inc
push
sbb
repz
jo
and
pshufw
and
leave
pop
js
sub
jb
decb
sbbl
and
jmp
inc
jo
movsb
jge
mov
sub
je
mov
addr16
test
xor
cmc
fnsave
and
aas
test
imul
push
dec
repnz
mov
inc
js
push
hlt
mov
jge
mov
pop
mov
sub
jo
das
ret
cmp
lds
sahf
dec
xchg
leave
out
or
mov
push
pop
lds
insb
cmp
push
call
xor
push
xchg
and
push
jge
push
insb
pushf
cmp
ret
hlt
fisubrs
fwait
mov
mov
push
aas
mov
test
jo,pn
adc
xlat
nop
icebp
clc
negb
ret
js
sbb
jo
rcll
mov
jo
jns
hlt
mov
push
xchg
jo
adc
sbb
pop
mov
push
sti
jb
mov
jo
insb
and
pop
cmp
in
sub
adc
push
mov
jo
dec
hlt
jns
jo
nop
stc
cmp
das
pop
jne
and
xchg
bound
shll
and
mov
nop
dec
jge
cmp
or
jo
lcall
in
fstp
xor
ret
pusha
adc
es
cmpsb
shufps
je
jle
ljmp
lret
jne
inc
or
and
imul
push
dec
jno
sahf
imul
jo
jp
bound
cmp
sub
in
std
cmp
jo
lds
add
hlt
mov
sti
push
ret
aaa
std
pop
jo
mov
leave
jns
jo
inc
add
sub
xor
adc
xor
inc
inc
shrl
jo
call
lret
lds
pop
jmp
out
sbb
jle
mov
movsl
loop
add
shrb
jo
sbb
jmp
fcom
pop
stos
mov
sub
push
pop
js
jp
pop
in
data16
lock
adc
dec
mov
scas
push
rclb
bound
mov
out
jo
std
sub
push
push
jp
adc
fiadds
jo
add
cli
xchg
pop
shll
int
mov
sbb
jmp
jo
mov
jp
jo
mov
movl
and
cmp
dec
xchg
or
cmp
orl
sbb
lock
push
and
jo
dec
mul
xchg
dec
mov
lock
orb
iret
push
rcrl
icebp
outsl
jb
dec
sbb
jo
mov
mov
cs
adc
push
or
mov
rcl
jecxz
jno
arpl
mov
lds
int3
fs
hlt
or
and
mov
and
mov
jl
sub
hlt
addl
pop
jmp
fcompl
int
pop
cmp
sub
xchg
in
mov
and
push
out
mulps
cltd
ficoms
jo
pop
xchg
arpl
ljmp
pop
and
and
ret
inc
mov
fdivrs
jge
or
mull
int
push
test
jp
loope
mov
out
lods
xor
repnz
mov
jo
leave
sahf
add
test
cli
and
shl
mov
xchg
push
jb
pop
push
pop
out
stc
mov
orb
inc
xchg
scas
adc
mov
push
push
int
pop
push
in
sub
adc
sub
paddq
mov
enter
aad
push
fdivs
push
xchg
test
inc
adc
pop
jne
outsl
jg
jmp
cmc
pop
ret
jo
pop
xchg
fld
sbb
scas
jo
ret
jl
icebp
in
cs
and
mov
mov
mov
push
mov
jp
mov
pop
negb
rcl
xlat
xchg
cmpb
out
push
push
cltd
inc
aaa
fs
and
std
xor
jns
jo
xbegin
movsb
push
sub
int
aas
repz
frstor
inc
lahf
push
ret
repnz
rcr
mov
mov
inc
inc
insl
ja
movsl
mov
add
aad
loop
xchg
xchg
jo
jnp
repz
xchg
jo
and
popf
fs
xor
out
sub
ljmp
mov
vandps
mov
ds
push
inc
lret
arpl
shlb
jo
sub
cmp
fidivs
jo
rolb
mov
mov
push
stos
inc
aas
pop
jns
hlt
leave
and
andl
xor
mov
stc
jnp
sarb
jo
pop
mov
mov
enter
dec
lret
test
jo
xlat
mov
aam
add
mov
sarb
add
jl
mov
push
xor
cs
sti
dec
jo
adc
rclb
in
fmuls
js
vandps
mov
cmp
and
jo
adc
cli
mov
cmp
adcb
ds
cmpsb
xchg
movl
nop
subl
vcmpsd
jmp
xchg
stos
lret
adc
dec
mov
mov
inc
test
cmp
rcll
test
mov
jo
cmp
jecxz
and
movsl
jo
and
lds
nop
hlt
fldcw
dec
xchg
mov
jo
mov
std
adc
sbb
adcb
push
movsb
jl
andl
sbb
sub
cmp
push
int
test
push
mov
sahf
js
lret
in
push
xlat
pop
fs
int3
push
or
mov
mov
sarl
sbb
outsl
jns
addr16
and
add
mov
cwtl
lods
icebp
aaa
jle
xchg
out
in
nop
in
xchg
xchg
hlt
jns
mov
sbbb
pop
push
addr16
jo
in
outsl
xor
and
and
adc
jo
mov
sbb
inc
jl
xchg
out
aas
test
flds
xor
rclb
out
mov
or
add
subl
mov
jo
out
ja
dec
arpl
jo
cli
jle
out
sub
or
xlat
insl
test
inc
test
lea
inc
adc
ss
das
jo
push
or
movsl
dec
cld
cmp
adc
pusha
loope
jp
outsl
push
cmc
xor
jbe
out
xor
xchg
fcompl
mov
into
ja
pop
mov
orb
inc
js
shrl
jno
pcmpgtw
stos
xchg
aam
mov
and
sbb
out
sub
fistpll
lret
inc
sbb
lea
push
jo
cmc
mull
or
jo
sbb
nop
out
mov
aam
xor
in
push
jo
inc
and
loope
cmove
or
into
aam
sub
int
jae
lret
jo
mov
sbb
out
push
push
dec
inc
sbb
sub
fildll
mov
mov
das
inc
jo
mov
dec
clc
cmc
loope
or
cmp
out
scas
bound
mov
jp
fnstcw
jo
test
jmp
jo
bound
push
out
cmc
jo
mov
sub
shrb
jo
lock
loop
fdivrs
in
scas
aas
add
mov
pop
popa
mov
pushf
icebp
pop
fidivl
add
inc
pop
lods
jnp
call
dec
inc
jmp
popa
jo
fstl
lds
shll
je
pusha
mov
xchg
cmpsb
out
jo
and
mov
lea
jbe
inc
daa
fidivl
pop
int
inc
cmpsl
inc
loopne
dec
jmp
jo
enter
lock
dec
fwait
nop
mov
pop
or
rcll
lret
push
xchg
mov
hlt
jae
push
jo
fmulp
clc
pop
stc
inc
sub
cmp
xchg
ljmp
fistpl
ja
inc
nop
xchg
sub
mov
cmp
xor
subb
xchg
jo
ja
sar
push
test
in
dec
out
test
adc
mov
mov
push
jo
dec
xchg
push
nop
ja
lds
js
push
movsb
mov
jo
rcrb
call
cs
vmovsd
jo
repnz
shlb
pop
pushf
cltd
dec
add
xor
xor
jns
jo
sbb
icebp
pop
or
fisttpl
pop
push
inc
lret
jo
xchg
fs
nop
js
and
pop
add
xchg
dec
aam
push
jo
inc
sarb
lret
add
push
jo
pop
mov
mov
mov
or
out
les
jo
xchg
mov
jb
jmp
leave
sub
fwait
dec
pop
mov
fmulp
dec
icebp
pop
jo
add
sti
mov
pusha
jo
mov
mov
in
enter
inc
jo
daa
arpl
pop
setg
hlt
xchg
adc
pshufw
out
dec
in
xlat
loope
jo
sbb
sbb
sahf
pop
sub
mov
arpl
nop
in
xor
aaa
sbb
lds
push
xchg
add
xor
inc
pop
loop
subl
pusha
jb
fisttpl
pop
andb
dec
sub
adc
or
mov
jo
push
dec
sbbb
jo
out
jne
or
pop
les
inc
je
push
ljmp
js
fstpt
sub
or
repz
adc
mov
int
bound
inc
mov
cltd
jle
jo
add
or
int
push
jmp
cwtl
mov
lds
cld
jae
movsl
adc
jo
shll
pop
sahf
add
mov
push
cmp
cmp
sbb
cmpl
fdivl
insl
stos
and
mov
lea
jge
jo
test
push
jno
outsl
in
leave
add
addb
stc
inc
arpl
movsb
and
xor
aaa
shlb
mov
sub
mov
xchg
push
mov
push
adc
and
xor
push
hlt
sub
das
mov
or
sub
pushf
aaa
hlt
adc
xchg
cmp
aad
or
loop
imulb
repz
jo
mov
ret
ss
cmc
jo
mov
out
or
test
jbe
cmp
rorl
pop
roll
push
jo
xor
leave
nop
xor
sub
jmp
jo
xchg
mov
jo
arpl
push
cmp
sub
add
xchg
aaa
pop
lds
sub
mov
jo
enter
dec
gs
orb
mov
nop
jnp
push
fs
cmp
dec
and
adc
xorb
adc
test
nop
add
pop
insb
into
push
movsl
jo
cmpsl
or
add
imul
jo
mov
into
ret
mov
lds
testb
push
repz
mov
aaa
push
je
pusha
stos
insb
into
push
out
scas
jo
add
and
jo
fldcw
add
std
jo
out
aad
je
sahf
jo
jbe
pop
negb
cmpsb
adc
add
test
dec
lcall
in
mov
in
xor
and
sti
cmpsl
jo
fadds
inc
dec
jo
js
lret
pushf
pop
mov
push
or
stc
in
in
jb
pop
jo
rolb
test
xchg
lea
or
out
xchg
jo
and
imul
mov
out
jp
test
adc
cmc
and
enter
push
aad
push
push
aas
lahf
jbe
ret
fidivrl
insb
and
xchg
push
jo
pop
lcall
jnp
leave
mov
or
jno
jo
js
and
rolb
in
jnp
iret
xor
jmp
xlat
pop
scas
das
push
outsl
imul
sbb
in
sbb
add
test
xor
inc
das
xchg
pavgb
push
lock
leave
jnp
push
divl
loope
and
shrl
aad
js
jmp
les
fidivs
dec
shll
xor
sarb
xchg
test
jo
dec
fldl
nop
movsb
xor
aad
lock
cmp
sahf
xlat
jo
mov
mov
dec
fldcw
psubb
enter
iret
inc
lds
jmp
push
xor
insb
xchg
pop
jo
fidivs
and
push
mov
jo
jns
mov
xor
int
mov
mov
ljmp
imul
mov
mov
jo
mov
xchg
dec
xor
sbbb
fldl
shrb
insb
inc
je
lds
test
imul
push
hlt
mov
dec
and
ja
or
adc
cwtl
push
pop
dec
jo
int3
push
insl
ret
aad
daa
loop
jo
das
jmp
dec
jo
outsl
test
jo
fldenv
jo
ljmp
sub
dec
gs
shlb
mov
add
add
loope
sbb
aaa
into
mov
insb
aam
mov
icebp
mov
das
add
push
xchg
ret
outsl
insl
push
mov
sbb
jne
sbbb
rolb
dec
jo
cltd
outsl
test
aad
push
jo
and
inc
cmpsb
jnp
std
dec
insb
xchg
jp
pushf
add
mov
jge
push
jne
xor
fwait
add
jno
add
test
lds
imul
mov
mov
cmp
popa
adc
pop
and
imul
je
sub
inc
xchg
mov
and
mov
adc
ficoml
iret
leave
mov
xor
push
sub
inc
repnz
jo
push
fmull
pop
mov
push
loope
jo
ret
and
adc
xchg
push
outsb
push
hlt
mov
push
pop
loope
lea
nop
adc
mov
or
xor
rcrb
jo
cmpl
jge
jo
cmpsl
repnz
leave
and
jo
dec
sbbl
cmp
mov
jo
test
outsl
jbe
clc
push
cmp
jb
aam
xorb
cmp
jae
jo
add
lcall
mov
ja
outsb
repz
outsl
mov
pop
lahf
pop
xorb
rclb
dec
or
gs
sbbb
pop
mov
jne
orl
outsl
stos
cmp
jnp
out
lods
and
inc
test
jecxz
jo
ror
stos
push
jne
mov
cwtl
pop
bound
mov
lahf
push
pop
lock
dec
xchg
out
cs
cmp
xchg
mov
push
mov
pusha
pop
xchg
test
std
orl
pushf
insl
adc
in
jg
nop
int3
fs
jnp
nop
ja
mov
pop
mov
fwait
dec
in
out
mov
adc
jo
inc
lds
push
pop
mov
repz
push
movsl
subb
dec
push
mov
inc
loopne
jmp
push
lcall
scas
push
mov
or
dec
jo
stos
add
jns
pop
sarl
lods
jb
xchg
jmp
mov
mov
adc
arpl
jo
and
push
mov
outsb
jl
pusha
lods
dec
jge
pop
out
xor
adc
jo
inc
out
faddl
iret
sub
push
in
jmp
sbb
fcoms
mov
mov
int
mov
dec
mov
cmp
inc
pop
lock
orb
inc
int
popf
popa
or
jo
inc
in
mov
pop
jmp
mov
pop
mov
sbb
sub
xor
sbb
add
xor
xchg
jb
ret
mov
xlat
js
in
jo,pt
int3
push
xchg
add
mov
lds
bound
xchg
push
shll
sub
mov
leave
aaa
rolb
add
mov
pop
sbbb
in
int
mov
out
pop
push
jo
mov
ja
jge
inc
rcr
and
xor
pushf
stos
ret
inc
icebp
out
gs
push
lahf
inc
push
iret
mov
lods
outsl
jg
push
fnop
aad
movsl
xor
es
sub
adc
sub
push
rorl
ja
cmp
dec
sbb
xor
jo
fs
shlb
adc
ss
icebp
jns
jo
sub
dec
leave
sbb
adcb
mov
push
push
add
fmuls
add
mov
jns
rcl
lret
jo
daa
hlt
lahf
add
in
aam
sarl
cli
push
jecxz
jne
push
or
lds
call
jo
sub
push
nop
xchg
ja
and
adc
lret
aaa
out
dec
repz
fwait
jo
icebp
cmp
lea
outsb
jo
and
sti
aas
loop
and
xlat
aaa
jg
test
cmp
and
dec
lret
inc
xchg
aaa
jo
jne
ret
inc
loope
icebp
jp
jo
xor
jae
pop
jecxz
dec
lods
mov
xor
stos
jo
adc
stos
push
push
or
xchg
es
jle
push
mov
mov
ds
data16
pop
hlt
jp
xchg
mov
push
jbe
dec
repnz
fnsave
push
mov
and
add
icebp
out
aam
fsubrl
orl
mov
ret
push
and
jne
sbb
fidivrl
test
scas
dec
js
inc
push
pop
dec
sub
aad
imul
jo
cmp
in
mov
jnp
leave
mov
ret
jp
movb
mov
shll
and
push
xchg
aas
rcrl
ds
nop
pop
mov
shlb
mov
jb
dec
mov
jl
ret
dec
xchg
je
leave
cmp
inc
adc
insl
adc
push
add
jo
lods
hlt
ds
sbb
inc
xlat
arpl
xor
shrb
iret
jnp
popa
mov
adc
pop
push
stos
mov
std
mov
movsl
jo
jl
pop
mov
jo
test
dec
stos
lret
push
jo
stc
leave
mov
sub
je
jge
repnz
jo
or
and
loope
out
dec
inc
leave
rorb
xchg
jl
aam
cld
sbb
in
add
xor
sub
cli
sbb
and
sub
and
cltd
rcrl
jo
les
jo
dec
mov
jo
jmp
js
mov
push
ss
mov
ret
cmp
rcll
arpl
movsl
fdivl
aam
mov
dec
call
daa
clc
xor
out
jge
test
mov
aas
jo
jmp
jo
mov
stc
add
mov
pop
adc
lds
mov
mov
in
mov
pop
inc
pop
jo
xor
icebp
mov
leave
lret
push
push
cmpsb
sub
es
cmp
movsb
pop
out
xor
xchg
fnstcw
jae
sub
aad
mov
pusha
sahf
testb
xchg
enter
subb
das
jns
dec
out
adc
jle
imul
or
push
clc
mov
cmp
pop
push
dec
js
or
lahf
pop
lret
push
rcrb
cmpsl
and
cli
cmc
popa
sub
pop
in
pop
sub
or
push
xor
inc
addl
push
inc
repnz
push
not
pop
jl
xchg
jmp
xor
cld
lahf
jo
ret
das
dec
pop
xorps
push
shll
gs
jge
stos
add
mov
imul
pop
jo
rolb
fsub
and
jl
fisubrs
jo
mov
add
fcmovnu
jle
jo
ljmp
jo
cmp
dec
out
push
push
jo
rcrl
imul
lods
and
mov
mov
or
jp
sub
sbbb
loopne
jo
mov
adc
jbe
push
lds
pop
or
sub
enter
jmp
ljmp
pop
in
rorl
push
je
insb
mov
jno
lds
nop
sbb
lret
ja
jb
addr16
push
mov
loop
scas
cmpsb
sti
sbb
or
imul
mov
push
icebp
imul
test
les
cld
icebp
adc
add
mov
js
and
sub
cld
std
jo
push
or
rorb
inc
shrl
in
addr16
insb
paddw
ret
mov
jge
cs
in
mov
stc
sbb
push
stos
js
aad
rolb
xorb
addb
lea
lods
int3
sbb
stos
push
push
pop
fsubr
add
cmp
sarl
sbb
ret
xchg
jo
aaa
jnp
cmp
inc
addr16
pop
fmull
pop
jo
xor
adcb
mov
jle
jo
ja
cs
inc
and
push
mov
es
push
add
fcmovnbe
jmp
dec
dec
and
ret
pop
insb
mov
in
leave
movsl
mov
hlt
rcr
and
sbb
add
cld
das
cmp
cmp
jo
cmpsb
aaa
mov
jo
repnz
inc
test
std
sti
xlat
testb
jo
mov
in
sahf
inc
ret
fcmovb
sbb
cmp
aaa
mov
jo
popf
lock
or
test
mov
xchg
ret
xorl
jae
adc
sbb
mov
mov
push
push
movsb
mov
fdivrs
jb
jbe
inc
push
std
loope
loop
inc
enter
or
sub
lret
movsl
xchg
pop
les
jns
stos
adc
jo
enter
xor
in
in
lock
mov
dec
xchg
cmp
mov
jo
adc
outsb
insb
and
aad
and
or
ss
cwtl
cltd
dec
inc
sub
adcb
aaa
mov
ds
pop
cli
jno
xchg
cltd
inc
out
xor
mov
sbb
call
outsb
jb
xor
dec
jo
bound
xor
inc
jo
mov
test
in
mov
test
into
push
pop
je
xchg
inc
les
in
xchg
add
jo
cli
xor
mov
mov
mov
imulb
jle
mov
fisttps
add
jle
pop
test
sbb
mov
shll
jnp
jo
call
shll
pop
sub
imul
movsb
push
leave
or
jo
add
pop
push
xor
xchg
push
popf
in
pop
jo
lock
mov
popf
sub
outsl
sbbb
mov
sub
movsb
ret
enter
jnp
inc
sar
lds
xchg
jb
and
push
adcl
dec
pop
es
test
dec
jo
mov
cmp
pusha
vmovd
jae
movsl
inc
lea
inc
jo
cmpsb
leave
rol
xchg
out
sub
cmpsl
ss
jo
fwait
inc
sti
xchg
movsb
lds
jnp
push
inc
icebp
shll
cmp
insl
mov
scas
dec
mov
jo
xchg
dec
imul
xorb
aas
sub
repz
cmpsb
and
sbb
pop
rclb
js
jbe
mov
stos
stc
in
ffree
loopne
jo
popf
mov
cmp
push
and
sbb
mov
rcll
ret
cs
int
push
pop
add
xchg
inc
movsl
sub
dec
mov
push
jmp
insb
stos
test
and
js
fsin
int3
movhps
aad
mov
out
xchg
xchg
xchg
daa
je
push
fnstenv
bnd
fwait
xchg
xor
jecxz
mov
fldcw
inc
jmp
mov
push
add
xor
xchg
daa
jge
jo
stos
cmp
mov
push
jo
mov
lea
out
push
inc
cmp
leave
jo
push
lock
mov
xorl
inc
ret
jo
repnz
jo
mov
fimuls
gs
dec
jo
pop
xchg
and
leave
fildl
jo
aam
jb
mov
pop
ficompl
fs
mov
cltd
push
sbb
inc
and
in
dec
jo
leave
lret
sbb
jo
dec
loopne
test
or
jbe
popa
push
out
mov
in
jnp
sbbb
cmp
leave
icebp
adc
inc
jp
jo
dec
cmp
shl
push
nop
xor
pop
jno
and
bound
mov
mov
push
xchg
push
leave
jo
mov
in
jo
cmp
movsl
std
jle
loop
add
lret
jmp
fwait
mov
test
add
jo
push
mov
iret
lock
jo
roll
and
or
jo
adc
dec
lahf
fnstcw
push
mov
pop
mov
stc
adc
outsl
or
or
jp
jmp
push
or
nop
mov
push
ret
add
or
js
or
outsb
cmp
shll
lahf
fidivl
mov
imul
int3
cmp
fs
dec
push
or
jmp
repz
bound
shrl
jo
cmp
sub
rolb
jecxz
push
dec
fdivr
xor
andl
iret
mov
xor
loope
sub
in
jo
aaa
decl
shll
jle
pusha
push
and
sti
jg
imul
mov
dec
scas
push
push
rol
dec
insb
inc
in
xchg
adc
pop
gs
rcrb
dec
lds
je
jnp
push
inc
mov
lods
or
ret
rcrb
mov
stos
scas
jb
inc
out
inc
xchg
std
iret
out
or
nop
sub
xchg
je
aam
jo
inc
xor
imul
loope
int3
aas
popa
divl
inc
dec
cmp
cmp
pop
enter
jo
inc
push
fmul
adc
push
cmp
rolb
mov
jmp
arpl
jp
stos
out
xchg
jns
ja
jb
push
sarb
push
jo
mov
mov
mov
xor
shrl
hlt
or
xchg
push
adcb
clc
sub
xchg
out
xor
nop
jmp
ror
cwtl
push
jbe
dec
jo
fidivrs
std
addb
dec
sub
mov
push
stc
dec
jmp
cmp
pop
lock
sbb
xchg
cmp
or
test
jo
mov
mov
jo
mov
mov
scas
js
adc
repnz
out
xor
pop
adcb
shll
jno
popf
push
out
out
jecxz
push
cmp
out
inc
popa
jge
push
stc
push
adc
loope
sbb
fs
sub
mov
inc
insb
loopne
jo
sarb
jo
and
or
jge
cmp
xor
or
adc
mov
nop
ljmp
jmp
dec
jo
rcrl
cld
nop
xchg
and
inc
mov
xchg
xchg
cmp
not
add
mov
lea
bound
xchg
cltd
inc
fidivl
mov
pop
pop
lods
or
hlt
mov
fidivl
mov
sahf
mov
pop
in
mov
jo
jns
scas
cltd
out
sub
in
add
ljmp
mov
jo
movsb
in
lret
movsl
cmova
xor
test
add
test
jo
loope
lret
push
add
int3
cmp
add
jp
gs
inc
mov
xorb
scas
cmp
dec
and
stc
rep
or
dec
jno
sub
scas
jne
sub
dec
loope
or
push
add
leave
je
jb
pop
jl
stos
jecxz
push
add
pop
inc
mul
xor
xor
negb
bound
movsl
loop
aad
mov
cwtl
jo
xchg
mov
xor
icebp
ljmp
pop
pop
adc
adc
rcrl
ret
add
lds
inc
mov
adcl
or
mov
push
jo
lock
xor
lds
out
emms
inc
pop
dec
pushf
orb
add
xorb
adc
pop
fdivl
xchg
out
shll
in
dec
inc
cmp
repnz
int
cwtl
sub
fs
xor
lods
insl
sahf
push
jnp
inc
mov
les
loopne
inc
jle
jo
xor
shll
xchg
jo
lea
mov
adc
mov
adc
xchg
insb
ja
cmp
push
outsb
popa
fsin
insb
es
mov
hlt
int
mov
dec
das
clc
ss
mov
cmpl
xchg
mov
inc
adc
outsl
loop
lret
add
lds
scas
cli
xlat
mov
push
leave
and
sub
mov
xlat
xchg
jo
jno
dec
aas
xor
sub
sub
mov
pop
lds
aaa
scas
ja
sub
fcomip
mov
js
in
and
jo
shrb
jno
push
fstpt
inc
je
lcall
add
xor
jo
push
hlt
or
out
imul
loopne
fldenv
jo
sub
lret
mov
and
mov
mov
roll
test
xchg
push
imul
pusha
in
mov
test
jae
mov
pop
mov
addb
adc
outsl
in
jo
sub
inc
js
push
call
and
fadds
sbb
nop
lret
outsl
sub
ja
jne
mov
push
mov
jo
cmpsb
ret
mov
cmp
jbe
lcall
xor
pop
and
addb
jo
jg
lods
inc
and
or
mov
sbb
pop
and
hlt
add
cmpsb
mov
push
inc
in
aam
jbe
cmp
scas
jns
jo
in
stc
loopne
fadds
mov
popa
stos
lahf
pop
je
jae
jo
cmp
mov
inc
ret
adcb
clc
sahf
jo
xchg
jae
jmp
and
lods
sub
jns
loope
mov
xor
roll
cs
shr
sbb
orb
jo
cld
aas
xor
loopne
iret
jbe
int
loope
dec
mov
ret
cli
cmp
cmp
or
jo
xchg
lds
dec
sti
adc
ret
lret
lods
inc
sub
push
sbb
mov
icebp
xacquire
test
out
jo
pushf
add
push
fwait
jecxz
pop
movsb
in
andb
stc
movsl
lds
pushf
in
push
stos
ror
mov
cmp
jg
leave
fidivl
cld
out
popf
xchg
stos
xor
or
inc
clc
ljmp
bound
and
xor
cmpb
or
ret
jo
and
add
xchg
inc
sub
xor
mov
mov
lcall
cmp
sub
push
push
fwait
daa
or
into
mov
jp
add
leave
push
repz
int
jo
imull
ss
and
pushf
jo
push
jp
push
and
and
jg
dec
pop
bnd
push
loope
push
mov
adc
bound
jo
stos
scas
jnp
andl
std
repz
repnz
push
nop
jo
lea
push
jo
in
int
aam
cmp
movl
out
xchg
jmp
jo
mov
outsl
jo,pn
std
stos
push
les
movsl
sub
xchg
int3
jo
adc
lahf
mov
jp
cmp
cmp
ret
sahf
lds
out
sub
cwtl
filds
mov
jne
mov
jo
subb
leave
jl
imul
loop
into
push
pop
int
ss
xorb
xchg
mov
push
imul
jo
jp
mov
xor
cmovne
arpl
push
pop
jo
int
pusha
add
dec
mov
push
je
mov
xor
inc
fidivs
cmp
adc
jne
push
jbe
ret
dec
xlat
fwait
jo
xchg
enter
call
xor
jmp
out
xchg
std
addr16
and
pop
mov
add
add
push
fisttpll
pop
ss
xor
std
subl
arpl
pop
lret
inc
mov
push
lcall
cmp
fs
mov
jo
fcmovnb
int
dec
sbb
jo
xor
add
enter
lds
cltd
jo
and
inc
adc
std
add
jnp
mov
mov
add
inc
lds
gs
jo
sub
mov
ffree
aad
cmp
test
int
jo
cmp
ret
shlb
jmp
add
out
push
sub
push
in
bound
ror
add
hlt
pop
sub
int
adc
rorl
cmc
dec
jo
dec
adc
xchg
xor
push
jb
js
cmp
sub
push
aad
mov
jo
int
xor
xor
cli
fnsave
testb
popa
dec
shl
mov
fnsave
and
stos
inc
mov
insb
xchg
lock
loop
cmp
imul
roll
pusha
cli
jmp
fwait
cwtd
mov
sbb
inc
lds
jo
ss
in
xchg
bound
sub
jb
mov
shlb
jo
mov
stc
jp
les
dec
or
ss
shlb
xchg
shlb
scas
push
sub
lret
and
cmp
jo
mov
insl
es
in
jne
jb
mov
cmp
sarl
jo
ljmp
movsb
jo
inc
shll
dec
inc
push
jo
jmp
ret
xor
cwtl
adc
or
mov
cmc
dec
and
mov
push
jo
adc
scas
es
cld
out
add
mov
mov
clc
aas
hlt
cmp
call
jne
mov
mov
jo
xorb
or
xchg
xor
jle
jo
stos
je
lods
jo
xlat
dec
fstpt
movsb
or
jo
mov
dec
cmp
fldl
addl
fbld
pextrw
mov
loope
cli
jecxz
mov
les
divb
mov
mov
lret
jo
inc
sub
mov
adc
mov
dec
or
dec
cmc
pop
std
jo
push
rcr
push
icebp
cwtl
jo
jne
ljmp
sbb
cltd
cld
mov
jo
movsl
ret
fmuls
in
hlt
jo
fnstsw
jl
jno
nopl
out
push
mov
enter
jge
pop
jo
and
xor
mov
addl
in
in
jo
push
xchg
cld
xor
mov
add
mov
lcall
cwtl
sub
jle
lret
add
scas
or
out
fisubl
mov
stc
enter
push
cmp
adc
jl
sub
pmullw
mov
inc
xchg
mov
adc
sub
and
push
out
or
lock
and
dec
xor
xchg
subb
dec
int3
loop
js
xchg
pop
jo
test
popf
push
sub
xorb
pop
ss
aas
mov
sti
lahf
xchg
ret
or
xchg
jo
sbb
lcall
inc
mov
adc
call
lahf
add
stos
jns
jl
fidivs
and
push
xchg
dec
in
jo,pn
sbb
aas
inc
lods
pop
push
sub
std
nop
lock
sbb
subb
mov
push
mov
es
inc
movhps
mov
lods
jle
mov
push
jo
adc
adc
add
sbb
in
inc
adc
jo
add
test
int
jne
adc
xor
jo
xchg
jmp
cmp
clc
pop
into
repnz
int
cmp
xchg
inc
leave
jo
sbb
and
adc
sub
in
cmp
ret
dec
movsb
mov
and
stos
jge
fs
subb
loopnew
pop
push
popa
dec
mov
adc
sarl
cmp
xchg
and
test
mov
jle
xchg
ret
mov
xchg
movsb
xchg
jo
jns
or
inc
jge
fldt
mov
jo
mov
mov
and
sti
lret
out
mov
push
and
jno
stos
mov
push
xor
cmp
int
sub
movb
xorb
rorl
mov
rcl
icebp
mov
mov
fbstp
in
bound
ret
gs
inc
push
mov
data16
jl
std
hlt
jo
pop
ljmp
loop
jo
pusha
arpl
pop
xor
inc
push
lea
int
ss
mov
mov
and
push
in
pop
aaa
lahf
in
jo
sbbl
scas
inc
jo
jnp
dec
mov
pop
int3
or
cltd
jo
loope
aad
ret
sti
push
popa
pushf
mov
ret
dec
movsb
je
xchg
jnp
sbb
dec
fnsave
call
mov
cmp
jge
jo
out
into
loope
and
sbb
movsb
ret
jp
cmovae
hlt
iret
mov
test
imul
outsl
insb
jns
popa
aaa
leave
popf
pop
outsb
cld
xor
nop
adc
jmp
test
lahf
jo
testb
out
xor
jo
push
stos
rcrl
jecxz
ret
inc
jne
jae
xor
leave
iret
mov
bound
shrl
or
xchg
ja
jo
loope
mov
std
test
in
jo
lds
xchg
jae
jmp
pusha
cs
pop
clc
daa
inc
ret
push
mov
call
sub
jo
push
mov
andl
jo
leave
ret
out
mov
mov
addr16
clc
cld
jmp
xlat
sub
sub
jne
xchg
out
cli
hlt
dec
je
sarb
xchg
mov
sbb
jle
sub
dec
push
sub
mov
fnstenv
cmp
ja
xchg
jp
outsl
in
rorb
mov
call
pop
jo
mov
fxch
jo
cltd
add
jo
sbb
les
or
daa
sarl
sub
jl
adc
popf
inc
mov
add
out
xchg
fs
xor
jo
in
mov
scas
push
adc
lcall
rclb
sub
and
cmc
sti
inc
scas
insl
push
sahf
mov
and
jno
mov
jl
cld
shll
jo
fwait
loop
jp
sub
repz
jae
mov
jo
xchg
dec
cmp
lret
in
jo
pop
mov
mov
into
movl
sbb
faddp
adc
mov
mov
mov
cli
pop
movsl
push
xor
js
aaa
xchg
jmp
filds
aas
xor
pextrw
je
jb
in
jbe
sub
jmp
lds
jo
imul
push
dec
jl
ljmp
std
pushf
cmpsb
jge
insb
ficoms
jo
arpl
sub
shrb
and
mov
lcall
jae
push
xchg
push
leave
push
jo
mov
adc
jo
jle
loop
lret
jbe
repnz
or
push
xor
jo
push
mov
call
dec
pop
dec
pushf
adc
cmp
push
sub
sbb
out
fcoml
jo
add
cmc
push
inc
xchg
push
sub
xlat
repz
lcall
ret
mov
mov
cmp
stc
bound
out
bswap
fnstenv
cltd
jo
or
jo,pn
and
cmp
xor
mulb
daa
sub
and
repnz
push
fs
jl
xchg
jne
je
mov
mov
pop
jo
shll
nop
jo
shl
mov
push
adc
fstl
cs
push
jns
jo
lds
sbb
int3
adc
rcll
add
jge
xchg
mov
lret
inc
inc
sub
jp
jo
push
xchg
and
loope
ds
addr16
inc
pop
push
sub
fcmovnb
adc
shl
dec
mov
jo
add
je
jg
add
leave
lods
js
mov
ficomps
fstpl
mov
rol
add
or
add
aaa
bound
cmp
repnz
jg
push
pop
lea
adc
daa
repz
fcomps
popf
adc
lock
int
mov
push
sahf
out
cmp
movsl
lret
pop
jo
cwtl
dec
and
rcl
leave
popa
lea
pop
push
jo
push
inc
int
add
roll
dec
pop
jo
sub
mov
test
jle
sbb
rol
outsl
mov
inc
jo
mov
repz
jo
test
cmpsl
jo
jb
xor
xchg
jo
es
lds
sqrtps
jle
orb
pop
push
cs
sbb
imul
cmp
and
loop
fs
repnz
jmp
adcb
cld
jo
mov
fwait
jle
jo
push
or
ret
addb
sub
les
sub
mov
icebp
pop
jle
lds
cmp
bound
mov
xlat
pop
out
test
inc
inc
push
cwtl
fdiv
fbld
test
cld
add
jl
add
fldenv
jo
cmpsb
fdivrs
add
sbb
mov
jo
cltd
jb
add
js
lock
push
fnstcw
outsb
arpl
adc
mov
repnz
and
mov
push
stos
jae
pop
testw
fisubrl
jle
int
and
jo
call
jo
sub
aad
std
xchg
inc
loope
jo
int
stos
sub
jo
adc
inc
jo
sbb
fld
rcrb
jo
addr16
arpl
movsb
ljmp
gs
pop
lods
fldl
je
cmp
sub
jp
cmp
dec
cmp
dec
push
mov
icebp
cli
sbb
int
out
fsubrl
xchg
jb
cmp
xchg
cld
clc
das
fildll
fwait
mov
andb
lds
mov
and
sub
in
jo
and
jbe
jo
lahf
repz
jnp
push
ja
cmp
jo
ret
push
dec
or
xchg
pop
xor
imul
push
or
cld
pop
mov
cmp
jmp
xchg
pop
stos
js
jae
shrb
leave
decb
add
int
sub
xor
loope
xchg
mov
jo
xor
call
mov
inc
dec
int
xchg
gs
jne
jp
push
in
les
sbb
shll
xchg
jo
adc
insl
mov
push
in
ja
sar
jmp
mov
aas
inc
xchg
push
in
fnsave
addl
idivb
dec
mov
jp
das
rcrl
adc
push
movsl
jo
int3
das
adc
fdivs
lock
out
jnp
and
aad
xor
cwtl
in
jo
fisttpll
mov
je
enter
loop
repz
lock
movsl
repnz
les
push
push
xchg
jo
mov
repz
pusha
cmp
and
push
scas
push
jo
sarl
jo
mov
bound
icebp
cmp
clc
notb
rolb
ret
xchg
jg
iret
fs
jo
fstpl
xor
add
add
mov
ljmp
mov
mov
jo
enter
rclb
imulb
add
and
adc
xor
and
pop
dec
imull
arpl
jo
mov
jo
out
mov
stc
lahf
mov
mov
push
cmpsb
inc
scas
push
inc
out
and
xchg
shll
cmp
or
inc
mov
pop
jo
popa
inc
mov
inc
cmp
pextrw
jl
push
add
mov
jo
lock
mov
in
daa
jecxz
shll
nop
imulb
fnstenv
jo
cmp
jmp
ljmp
rcr
insl
push
and
mov
jae
jo
repz
dec
scas
imul
mov
mov
jo
mul
xchg
mov
into
hlt
add
push
nop
nop
dec
mov
push
loope
int
xor
mov
jb
xor
cmp
adc
xorb
jmp
jo
cmp
jg
lods
add
jo
dec
fcmovnu
ret
jns
inc
leave
daa
out
aaa
push
sti
jno
push
mov
mov
push
sbb
js
dec
push
or
or
jo
imul
inc
out
int
adc
out
mov
mov
je
add
xor
das
mov
iret
xchg
rorb
aad
pusha
arpl
add
dec
cmpb
jo
lret
sbb
out
dec
ds
in
jo
into
pop
repz
jmp
insl
test
pushf
insb
add
jo
mov
rorl
jno
pusha
add
enter
xor
jo
push
dec
add
jo
jg
adcl
in
jo
or
jns
leave
push
test
adc
dec
and
ret
jge
out
sbbl
inc
dec
pop
shll
mov
or
jo
pop
pushf
hlt
ret
jg
test
lea
mov
clc
cltd
outsb
movsb
int
push
jo
shll
cmp
sbb
and
jp
ss
fisubrs
pop
lret
shlb
ja
xchg
jl
xchg
fnsave
sub
mov
sarl
js
daa
mov
inc
cmp
xchg
mov
push
xor
lds
fwait
pop
fwait
jo
insb
xchg
mov
jbe
dec
bound
divb
test
or
xchg
cmp
jmp
pusha
lds
add
adc
xor
subb
addr16
in
jl
leave
aam
jo
xor
sub
xchg
xor
jne
pop
mov
mov
mov
fnsave
xchg
push
andb
loopne
sahf
jo
in
sarb
divl
xchg
inc
mov
gs
jo
cltd
pop
pop
cld
push
repz
mov
xor
jo
xchg
jne
dec
or
add
movb
and
das
dec
adcl
xchg
sbbl
cmc
imul
dec
pop
push
cmp
ss
lret
pop
insb
dec
inc
das
in
sub
mov
mov
jo
and
notl
jo
ficoms
inc
lds
ret
mov
cmc
and
mov
nop
dec
or
push
jmp
jbe
lds
pop
js
sbb
imul
scas
negb
xchg
sbb
adc
cs
pushf
jns
mov
stos
xor
movsl
cmpsb
push
ss
ja
mov
mov
mov
es
je
cwtl
inc
jo
mov
xchg
out
jno
push
nop
cmp
xchg
fs
addb
shlb
imul
cwtl
pop
jnp
sub
punpckldq
jo
popa
mov
in
jo
cmp
loope
pop
bound
fcompl
push
cmp
add
aam
out
sub
push
xchg
push
sub
jb
jo
rcrl
xchg
dec
sub
mov
imul
jo
add
sub
out
xchg
jo
leave
xchg
divb
mov
jecxz
jns
xchg
and
ret
enter
sbb
mov
in
repz
nop
push
mov
mov
lret
cmp
cmpsl
or
popa
mov
cld
xor
adc
jo
xchg
das
add
sar
sub
mov
add
jmp
push
jbe
xchg
mov
jo
lret
add
jns
clc
push
sarl
out
adc
mov
jo
int
cmp
mov
and
inc
es
jmp
jo
subl
ffreep
cmc
push
mov
cs
and
sbb
or
push
sarl
dec
outsl
xor
jo
adc
insb
adc
int
sar
rorb
xorb
testl
pop
jle
fnsave
jo
mov
les
push
xchg
js
mov
lds
or
gs
or
dec
push
lea
test
mov
nop
lods
mov
mov
mov
mov
fldl
fldt
jo
add
inc
cmp
add
push
sbb
movsb
xor
cmpsl
out
mov
and
jo
insl
cwtl
scas
loope
leave
add
mov
add
mov
adc
js
sbb
and
sbb
test
inc
ret
push
xchg
jo
sti
cld
pop
push
and
xchg
or
arpl
fnstsw
mov
negl
push
rclb
adc
ret
sahf
jo
movsb
jno
cmp
ja
jo
aam
bound
pop
lcall
mov
jo
cmp
sarl
fsubr
es
subb
jb
add
jo
cmp
and
outsl
xchg
nop
addr16
shll
stc
and
adc
adc
push
jo
cli
ss
jmp
les
cmpsb
xor
xor
ds
out
adc
lock
cmp
outsb
fsubrs
jle
jo
jl
call
stos
orb
jae
xchg
jne
call
jbe
push
mov
cmp
js
jo
lret
and
test
xor
mov
ret
mov
mov
jl
sub
jp
sbb
mov
pop
jo
stc
loop,pn
orl
jo
cmp
or
call
xchg
push
mov
decb
jo
jb
jmp
jo
mov
cld
nop
loop
xchg
in
mov
daa
push
mov
lret
cmc
test
fnstenv
xchg
jae
js
inc
mov
jo
rorl
inc
cld
ret
or
cmp
in
or
sub
sub
out
jo
sbb
jecxz
push
orb
jb
test
mov
sub
push
ds
mov
push
adc
xor
mov
in
xlat
arpl
xchg
test
aam
loope
movb
push
push
es
push
inc
push
std
jno
mov
xchg
cmpsl
add
jo
sahf
dec
mov
jae
in
insb
data16
gs
jno
aas
jle
jo
lds
or
jo
mov
mov
data16
hlt
daa
aad
ljmp
sti
and
ret
jo
add
lods
adc
push
or
pop
push
and
jl
aaa
adc
sub
inc
push
xor
lret
nop
cltd
jbe
arpl
test
lcall
inc
and
push
jo
fcmove
and
andl
push
sub
inc
addr16
mov
add
in
adc
inc
iret
in
fcoml
fs
orl
xchg
push
jbe
jo
insl
popa
leave
nop
adc
pop
into
int3
lods
cmpsl
js
ss
mov
cmp
stos
sub
or
inc
sti
jo
movsb
jecxz
and
sub
sub
mov
mov
insl
popl
out
push
jo
data16
sarl
jo
mov
insb
xchg
jo
cltd
inc
mov
push
xor
jbe
sarl
jo
clc
sbb
push
cmp
repnz
pop
cmp
or
bound
inc
jo
or
mov
push
in
cmp
lds
js
xor
jp
jo
push
pop
out
jnp
jecxz
sub
cltd
xor
pop
outsl
jo
shrb
jo
movsb
sub
imul
xor
lds
pop
mov
jae
dec
je
mov
pop
stos
stos
ja
fildll
insb
pop
xchg
jmp
push
lods
cs
mov
out
int3
stc
push
ljmp
in
roll
add
xorl
nop
xchg
in
pop
dec
nop
ja
mov
andl
or
push
pop
xor
jle
fs
vmread
inc
add
sbb
cmp
dec
cmp
mov
in
push
pop
and
dec
fs
lret
es
ficoml
test
leave
mov
rdpmc
mov
outsl
xchg
les
out
jo
pop
xor
or
push
sarb
jo
push
sarl
shl
mov
push
clc
sahf
iret
je
leave
sbb
add
sub
jmp
loop
dec
jae
mov
xchg
cmc
mov
nop
dec
mov
cmp
out
sub
cmc
jp
nop
xorl
and
cmp
cmp
rolb
dec
push
jo
call
jmp
mov
arpl
std
inc
lea
mov
aad
mov
push
sahf
push
sub
shll
imulb
push
xor
mov
fwait
pop
xchg
sti
push
sub
daa
cmc
push
je
sub
sub
test
push
and
ljmp
pop
mov
adc
pop
scas
add
xchg
jo
enter
gs
xor
aas
vxorpd
rcrb
cmp
mov
call
jle
inc
sub
subl
fidivl
push
bnd
inc
and
jge
data16
lds
notb
mov
push
ja
sti
fdivp
xchg
jb
pushf
xchg
push
or
inc
mov
aam
sub
mov
test
std
sbb
sub
pop
jae
lret
mov
jo
and
mov
jo
jecxz
mov
lds
pop
imul
push
add
push
and
repnz
pop
mov
mov
push
jb
sub
cld
inc
lds
arpl
mov
mov
sarl
js
jl
nop
cltd
jle
imul
dec
popf
mov
jl
cmp
rorb
mov
aam
outsl
jo
mov
enter
leave
into
xor
lret
cmc
fiaddl
int3
xor
inc
es
fcoms
and
imul
scas
and
in
mov
push
adc
mov
hlt
je
nop
push
enter
int3
ja
inc
fdiv
into
movsl
cmp
add
pop
ljmp
rolb
push
jo
cmp
cmpsl
aad
and
add
je
daa
sub
lds
cmc
adc
lods
aam
movsl
insb
dec
cmp
fcoms
mov
ja
and
dec
lcall
jl
aam
roll
xorl
sbb
les
jo
popf
xchg
hlt
fisttpll
cmpsl
sbbb
xlat
xchg
mov
jo
icebp
gs
pushf
lret
or
pop
les
jg
push
sbb
sub
addr16
sub
and
rorl
jp
mov
out
int3
mov
mov
adcb
push
sahf
dec
inc
sti
jo
imul
push
jle
dec
ss
ds
push
rorl
sub
inc
lahf
push
sbb
cs
jo
fbld
cmpsl
jne
leave
push
sbb
out
push
xor
mov
lcall
in
jo
inc
xchg
call
jo
sub
hlt
jo
lret
pop
add
lea
insl
sbb
mov
scas
jo
cs
test
test
js
in
fstpt
jo
leave
mov
fnstenv
ficoml
pop
popa
ret
mov
jbe
aam
data16
jnp
jo
fisubrl
sbb
test
jno
jo
bound
stos
aam
jmp
jo
push
inc
jle
icebp
xchg
inc
nop
push
aaa
mov
ret
out
jg
mov
mov
shrb
js
adc
jl
jb
push
mov
mov
scas
js
and
jo
mov
test
rolb
inc
jo
incb
std
jo
pop
inc
mov
cmp
scas
pop
sbbl
into
jo
xchg
leave
loop
scas
push
arpl
test
incb
sbb
push
jle
jp
rclb
test
push
andl
pop
rcll
pop
jo,pn
or
cmp
jo
lahf
xor
jb
xchg
stos
jo
lret
fimuls
add
jl
jnp
les
push
fisttpll
subps
cmp
shrl
push
push
and
aad
insb
sbb
lcall
jb
sarb
pop
cs
dec
cmp
sub
push
jo
arpl
sbb
fisubrs
fisubs
dec
or
jns
in
mov
es
scas
mov
int
xor
sub
popf
bound
mov
adc
jo
dec
xor
loope
imul
jo
inc
xchg
dec
inc
out
push
and
psllq
and
push
mov
inc
adc
adc
repz
sahf
jns
xchg
scas
push
out
mov
jno
add
insb
pop
in
xchg
nop
or
ror
sub
push
fadds
sub
jo
fidivs
inc
or
shll
jne
and
mov
hlt
jo
data16
in
rorl
jo
repz
and
faddl
dec
jo
inc
fnstcw
mov
mov
jae
mov
insl
pop
pop
mov
xor
mov
daa
dec
xor
or
mov
lock
push
jbe
les
cmp
cli
pusha
xor
insb
ret
clc
pop
cmp
insl
sub
lcall
dec
sbb
jmp
jo
inc
dec
imul
ret
lea
jp
stos
jo
lcall
mov
jo
rclb
and
xadd
cmpsl
js
xchg
scas
rcll
stos
or
js
adcb
iret
repz
dec
idivl
mov
inc
mov
xchg
je
pusha
cmpsl
dec
mov
in
jo
jnp
mov
inc
xchg
cmp
mov
in
enter
jo
daa
dec
lret
inc
notl
leave
cmc
js
add
adcb
fs
cld
sub
ja
xchg
jo
sbb
sbb
mov
dec
add
and
lahf
pop
jo
stos
sbb
cmp
push
notl
and
jo
mov
loop
or
add
pushl
mov
stc
ss
stos
loope
int3
lahf
inc
aaa
jo
popf
xor
pusha
scas
push
and
xor
fwait
or
xchg
xor
std
jo
adc
mov
shl
jmp
ret
inc
mov
mov
in
fidivrs
icebp
xchg
mov
mov
jo
fnstsw
fdivs
ret
add
inc
cmp
jb
lds
cmpsb
mov
hlt
notl
jo
dec
pop
int3
sbb
adc
in
jo
xor
orl
imul
xchg
inc
push
bound
sub
rcrl
push
aad
jo
ret
and
push
mov
ds
cmpsl
js
mov
jl
or
jo
push
popa
cltd
insl
mov
je
xchg
leave
scas
adc
push
out
out
arpl
jmp
js
inc
sub
bound
push
xchg
mov
loop
mov
test
mov
cli
enter
jo
xchg
add
xor
call
lds
xchg
lods
js
jge
sub
jp
jbe
or
adc
enter
loop
xchg
push
push
lds
push
nop
gs
bound
mov
jno
add
repz
insl
or
mov
mov
call
jo
out
icebp
push
cmp
je
and
mov
shr
jo
adc
sub
fs
mov
sbb
pop
jb
mov
leave
ror
sub
push
scas
lea
xchg
adc
or
jl
out
ret
dec
data16
inc
stos
adc
push
ret
xlat
mov
mov
lahf
mov
dec
sahf
sbb
or
jle
ret
and
jo
loope
jecxz
addr16
mov
inc
xchg
jo
out
add
xchg
xor
jo
jae
negl
mov
jo
loope
jno
pop
cmp
psllw
xchg
push
or
adc
cwtl
mov
push
cltd
mov
add
inc
push
addr16
jno
stos
es
pop
jo
leave
xchg
dec
mov
or
rclb
das
mov
je
mov
into
lcall
or
seto
cmc
stos
jo
jmp
mov
and
jle
sub
mov
pushf
adc
movsb
ds
and
fildll
aad
and
jo
ret
push
cmpsl
mov
mov
int3
leave
push
jle
pop
lods
push
nop
and
mov
xor
in
pop
sub
jo
or
divb
jo
mov
outsb
mov
push
adc
inc
shlb
fwait
punpckhdq
mov
cmc
pop
pop
mov
leave
rcrb
imul
jmp
cmp
and
inc
inc
jo
aaa
aam
mov
stos
adc
pop
mov
mov
dec
xchg
xchg
icebp
xor
mov
jo
aam
fisttps
inc
mov
stos
or
jns
inc
test
les
jle
jo
sarl
adc
in
lds
clc
adc
hlt
sub
and
adc
cmp
jo
sbb
popa
fwait
push
jo
andl
bswap
and
add
fdivs
sub
lret
ds
jp
rorb
push
xchg
dec
jo
js
inc
cmpsl
jbe
movsl
in
dec
popf
and
cmpb
mov
adc
push
mov
ret
jle
cmp
add
xor
inc
inc
adc
or
out
jo
mov
add
movsb
jmp
mov
or
cmp
mov
jo
dec
ret
dec
hlt
mov
nop
mov
daa
cmc
jns
add
pavgw
dec
or
jle
imul
inc
popa
mov
adc
ret
ficoml
lds
stc
adc
mov
sub
cmc
test
je
push
xchg
and
rcrl
jo
stc
popf
cs
aad
jo
test
xchg
adc
jo
pop
or
adc
nop
cwtl
cmp
int3
xchg
inc
jo
cmp
std
pop
enter
les
fucomp
mov
adc
je
rolb
mov
bound
jo
mov
int
jg
cmc
jo
xorb
sub
fstpl
dec
or
xchg
inc
pop
andl
out
pop
mov
jo,pt
adc
repnz
push
xchg
cs
js
je
dec
inc
adcb
jle
lds
jp
jmp
data16
test
ret
xchg
outsl
lea
mov
movsl
jno
rcr
mov
cs
adc
mov
in
dec
test
shrl
and
pop
outsl
rcl
cmp
jo
movsl
sahf
outsb
pop
loop
mov
dec
jb
xchg
popa
and
xchg
in
xor
add
adc
cmp
cld
fists
fcoms
ret
jo
mov
mov
jle
dec
shrb
clc
push
dec
cmc
cld
rcll
test
not
jo
dec
xor
test
fidivs
pop
addb
cmpsb
std
pop
imul
leave
imul
stc
mov
add
jo
imul
mov
jo
cld
or
aas
jo
in
mov
gs
nop
xor
jns
xchg
mov
cli
cmp
int3
fwait
dec
xchg
insb
test
jnp
push
jo
mov
mov
jp
jo
xor
imul
inc
cwtl
ret
and
mov
insl
add
jo
jo,pn
jp
sti
mov
repnz
ret
adc
arpl
cs
jmp
jno
push
push
mov
or
repz
sub
test
push
jnp
and
aaa
shll
jo
mov
and
lock
ror
js
xchg
imul
and
cltd
mov
jbe
repnz
jo
imul
sub
sub
lods
or
mov
int3
jecxz
ja
in
push
jo
ss
pop
jo
xchg
xchg
cwtl
jecxz
ds
jo
or
pop
lds
push
scas
movsl
push
aaa
jo
fnstsw
or
rorb
jl
in
adc
sub
jmp
lods
add
pop
fs
mov
jo
sub
mov
in
loope
jo
and
mov
outsb
popf
jo
mov
ret
in
in
cld
out
fildll
ret
and
and
lds
push
rdtsc
ljmp
in
nop
xchg
sti
filds
or
pxor
jo
add
mov
cld
xor
pop
bound
lcall
sarb
jo
lock
jnp
jo
shll
xchg
iret
add
mov
les
leave
jo
lea
add
movsb
inc
int
orb
push
les
pop
cmpsl
adc
jo
sarb
inc
xadd
fistps
pop
jo
dec
fwait
aad
or
mov
pop
ret
inc
insb
fdiv
je
mov
adc
cmp
jmp
jb
sahf
push
xchg
sub
jae
je
dec
and
jo
push
jmp
mov
jo
xchg
dec
push
inc
cmp
lds
out
xchg
xchg
pop
fwait
cmpl
imul
xor
jb
call
jno
pop
push
cltd
loope
push
jo
aam
dec
cmp
xor
pop
int
cmpsb
or
ljmp
aaa
pop
jo
add
cmp
jo
sbb
mov
push
jae
xorps
aaa
les
jo
jnp
add
negb
pop
imul
and
inc
in
ret
leave
sbb
dec
or
and
add
icebp
add
cli
jns
mov
push
insb
mov
jo
mov
shll
dec
loopne
das
insl
and
xorl
movsb
stc
insb
mov
jno
lret
jnp
sub
dec
and
add
jns
jo
jbe
and
xchg
fnsave
add
mov
push
nopl
subl
and
cmp
fmuls
jnp
fistpll
jcxz
adc
and
fs
xchg
xlat
dec
jp
inc
subl
jo
cwtl
inc
ret
adc
fdivr
mov
daa
push
rorl
jo,pn
cmp
push
jo
rol
add
call
xlat
sar
lahf
push
xor
jo
lds
ja
je
jp
mov
mov
pop
mov
js
rcll
xor
flds
sbb
jo
ret
dec
xor
push
leave
enter
scas
lret
lock
xchg
xor
adc
mov
lahf
pop
lret
dec
sub
or
stos
ja
lods
rcrl
ret
fldenv
jmp
push
cmp
lods
fiadds
pop
mov
insb
repz
call
jo
xchg
in
jle
jo
lret
xchg
or
xchg
dec
cli
nop
mov
xor
lret
adc
or
addb
or
adc
test
sub
adc
dec
jp
mov
push
xchg
mov
mov
cmp
mov
and
jo
aas
adc
mov
jo
in
cltd
fsubl
insl
dec
icebp
cs
mov
dec
mov
fbstp
mov
jmp
or
pop
jo
dec
lcall
jb
jg
mov
dec
lahf
jo
xor
popf
inc
push
mov
or
lds
push
push
dec
sub
xor
push
jle
pop
test
les
daa
ffree
jnp
mov
xchg
rcll
jp
push
incl
addb
aas
sti
sub
rorl
loope
inc
aad
add
jge
jo
xchg
jge
leave
jl
loop
mov
clc
sub
add
xor
out
push
push
out
adc
int3
push
push
testb
dec
jge
mov
sub
pusha
pop
clc
daa
hlt
jb
jo
lahf
jp
aad
rcrl
sub
test
and
mov
int
popa
jae
sbb
jo
cmp
inc
test
ret
mov
es
scas
push
flds
and
loop
in
xchg
xor
out
rclb
hlt
xor
jo
inc
jns
xor
outsl
fldenv
jo
shll
mov
inc
xchg
sar
push
leave
xchg
xor
jo
cld
outsl
and
nop
daa
clc
jo
push
jge
hlt
shl
ret
popa
je
inc
int3
mov
pusha
xor
mov
std
lret
sbb
in
icebp
lret
xor
movsb
ret
in
arpl
cmp
xchg
addb
pop
jo
ret
add
nop
sub
push
std
add
shll
xor
test
jmp
jo
into
inc
clc
sub
sbbl
push
stos
ret
push
jo
lds
out
in
push
dec
sub
pop
std
jo
leave
and
cwtl
push
out
xor
test
adc
push
cltd
mov
sbb
mov
movl
dec
jo
inc
mov
lods
loope
xor
cmp
fistps
jo
movsb
jge
cmc
mov
jo
insb
shrl
xlat
xchg
ret
jo
cli
hlt
faddp
in
movsl
xchg
ud1
jle
and
push
push
sahf
ja
test
ss
cmp
jg
mov
ret
sub
fwait
rcl
nop
mov
add
fs
movlhps
pop
imul
bnd
and
ljmp
mov
rorl
mov
leave
in
push
fldcw
xorl
jo
mov
fsts
jo
add
jmp
jecxz
inc
mov
leave
dec
js
mov
inc
subb
cmp
push
inc
sbb
pop
and
sub
stos
dec
xchg
inc
xor
aam
fwait
out
fmull
pop
jo
out
imul
add
mov
jecxz
popa
ficoms
sub
out
jo
aas
in
mov
jo
fwait
rol
popa
mov
dec
jo
lds
imul
ffreep
jp
mov
jo
cld
icebp
jns
push
jno
push
hlt
sub
loope
ret
mov
sbb
xchg
fwait
sti
in
test
cmp
mov
sub
sub
js
adc
ljmp
xchg
iret
or
lret
mov
mov
loop
incl
nop
pop
xchg
add
ja
out
dec
adc
push
sbbb
jne
jbe
test
xor
inc
lret
sti
je
jle
add
push
push
enter
ret
stos
jno
push
sub
test
cmc
and
bound
xchg
xchg
pop
jg
jo
bound
sahf
ficomps
jle
or
repnz
hlt
ret
insl
mov
je
movsb
mov
add
stos
xchg
inc
jo
xchg
and
dec
push
jmp
xor
rclb
les
das
out
imul
faddl
stc
shlb
sub
test
or
cmc
arpl
mov
dec
mov
bound
imulb
sbb
xchg
jo
sbb
ret
and
push
xchg
sub
je
lock
jo
pop
pop
in
cltd
or
dec
stos
test
scas
les
jae
cld
rcr
jo
mov
and
lahf
jns
mov
jmp
inc
push
jo
outsl
pop
inc
neg
sub
jo
or
mov
jo
and
lods
xor
adc
push
mov
sbb
ret
nop
mov
mov
js
lret
cmpsl
pop
xchg
jbe
push
lods
xor
lret
xlat
xchg
std
daa
sub
sub
rclb
mov
out
std
pop
and
jne
jo
push
leave
cmc
sahf
lret
push
sbb
test
inc
repnz
leave
push
adc
mulb
int3
pop
je
std
lds
cmp
nop
pop
push
sub
jo
xchg
mov
cmpsl
rol
test
push
mov
insl
outsl
cmc
sub
scas
divl
mov
jo
xchg
or
ret
jg
inc
mov
dec
mov
btr
mov
xchg
pop
sbb
dec
test
mov
xchg
ss
jns
mov
lock
xor
cmpsb
icebp
jo
ja
cmp
rcll
clc
push
adcl
sub
add
push
jbe
jle
cmp
je
addb
sbb
jne
sub
in
push
push
pop
mov
movb
loopne
jo
leave
or
jmp
ret
mov
mov
sti
mov
jo
adc
pushf
push
pop
sar
cwtl
loope
les
dec
jo
lds
in
or
fildl
out
int3
scas
jo
sub
mov
jmp
or
dec
or
lock
in
xor
cmc
pop
push
fdivs
fcomi
jo
adc
mov
push
mov
xorb
push
cmp
or
jo
sbb
sbb
push
jo
ret
notb
test
mov
mov
pop
icebp
xor
push
cmp
shll
jo
inc
add
sub
lds
xor
xlat
and
dec
test
sub
sub
jo
out
xor
gs
jo
mov
sub
push
shlb
rcrl
rcrl
push
jo
fnsave
in
mov
jo
ljmp
jo
fwait
scas
call
dec
xchg
pop
jo
insl
rclb
loope
jo
lods
dec
xorb
xchg
sub
jge
mov
je
mov
orb
mov
icebp
jo
rorl
lods
inc
add
mov
jo
inc
mov
lods
or
bound
insb
les
jo
push
bswap
cwtl
dec
lods
jge
xchg
lock
xorb
jb
icebp
dec
xor
jo
xlat
popf
mov
jo
mov
lock
lds
test
addr16
out
mov
rcrl
jp
or
out
mov
scas
xchg
mov
sbbb
mov
xlat
jmp
leave
push
popa
inc
jo
nop
xor
nop
addl
add
ja
push
lea
adc
jl
mov
pushf
push
fnstenv
sbb
pop
sub
cmp
inc
xchg
push
mov
jne
sub
bound
aaa
xchg
mov
ds
loopne
inc
pushf
rorb
and
cmp
jo
ret
xor
mov
je
jo
sub
pop
sbbb
jo
repnz
mov
cs
mov
xor
nop
jmp
jne
or
push
jo
outsb
pop
xchg
lret
shlb
pop
add
in
mov
and
cwtl
mov
scas
jo
pop
inc
mov
adc
int
cmc
pushf
pop
je
sub
jo
roll
into
test
cld
fnstcw
filds
pushf
jnp
fucom
in
je
test
inc
fs
movsb
cmp
pop
adc
mov
insl
into
sub
imulb
push
mov
or
cli
and
sub
dec
cld
adc
and
cmp
jo
movsb
js
test
lds
sub
sub
sti
aam
adc
pop
ret
mov
scas
js
xor
mov
hlt
movsb
or
gs
pusha
cmp
push
es
jo
imul
mov
popl
jmp
sub
push
mov
movsb
jnp
pop
jg
ret
push
sub
cs
push
cmp
push
jo
insl
and
clc
jo
push
cmp
pop
xchg
jnp
jo
cltd
jne
fchs
cmc
dec
shlb
into
sbb
push
pop
insb
and
sub
fcompl
shr
push
stos
clc
jo
adc
sbb
daa
sahf
dec
or
mov
and
rol
lock
mov
into
jnp
add
push
xchg
jae
cmpsb
mov
lods
std
sub
jmp
or
jo
mov
xchg
jge
mov
push
adc
inc
push
in
sub
enter
jo
repz
xor
adc
insl
les
push
testl
jo
pop
mov
xchg
sub
ja
push
or
push
adc
fadds
pushl
xchg
dec
lods
int
cmpsl
divb
inc
loope
lret
mov
mov
ret
pop
inc
or
jo
lret
xor
mov
inc
cmp
fdivrp
push
cmpsl
jns
int3
insb
bound
cmpl
jg
or
mov
insb
jo
data16
jae
pop
jo
sbb
addr16
jo
sub
xor
subb
stc
push
push
xor
jo
sub
leave
lds
inc
scas
loop
jp
out
imul
xor
push
fbstp
xchg
pop
mov
nop
xlat
xor
ja
cli
dec
jo
sub
popa
xchg
jge
jo
inc
ljmp
push
les
pusha
xchg
jp
addr16
or
xor
loop
mov
jbe
psllq
dec
sub
lods
and
or
pop
leave
sti
popa
adc
jo
repnz
lahf
jo
mov
fbld
ret
pop
dec
sub
imul
mov
jle
jo
xchg
loopne
mov
sub
mov
dec
mov
insb
lmsw
sbb
jno
bswap
xchg
xor
cs
add
jo
add
lea
xor
mov
jo
lret
ficompl
std
cmp
imul
jo
add
and
lahf
sahf
push
shrl
in
mov
gs
push
nop
lods
inc
mov
mov
lret
repz
add
ret
adc
mov
sbb
je
ret
inc
mov
fnstenv
inc
mov
int3
popf
lods
and
jo
pop
ror
and
jo
loopne
lds
inc
adcb
rolb
inc
sub
sbb
jo
mov
jo
mov
sub
mov
cmp
dec
mov
mov
sbb
pushf
js
add
icebp
or
inc
mov
int3
shrb
js
push
lock
lcall
jo
das
mov
cmp
cmp
mov
or
sbb
push
adc
rorl
insb
scas
jo
xor
jno
push
inc
nop
jecxz
jo
mov
in
push
stc
jo
fldl
jo
xchg
repz
cli
mov
xor
sub
sarl
out
dec
xor
adcb
divb
gs
dec
jo
call
sti
xchg
nop
sarl
mov
cmp
xor
arpl
outsb
push
push
mov
lcall
lods
gs
daa
ja
cld
clc
jo
and
inc
shll
xchg
outsl
inc
lret
pop
jo
cmp
sbb
popf
shll
push
cltd
flds
ret
int3
jo
and
lods
ja
movsl
inc
aas
jnp
test
jl
adc
jo
xchg
push
and
mov
add
cvtps2pi
mov
inc
mov
jp
pmullw
push
lock
stc
bound
mov
jbe
mov
scas
icebp
sub
push
fisubl
imul
cmc
mov
ret
sbb
push
bound
idivl
out
loope
jbe
sub
mov
push
xorl
js
xchg
jne
ds
jo
or
loope
jo
cli
mov
push
xchg
dec
jo
hlt
lds
insb
and
push
addr16
mov
out
ret
pop
jo
div
loop
push
add
mov
cmpsl
movsl
fs
mov
xlat
lahf
push
insb
fld
daa
int3
inc
cmovns
aam
inc
and
aad
sbb
out
pop
sbb
test
push
clc
stc
fcoms
stos
js
data16
sbb
xchg
add
ljmp
ljmp
jg
xor
xchg
addr16
push
sub
loopne
insb
mov
adc
inc
dec
xor
mov
add
mov
cmpsb
xchg
jl
mov
mov
rorl
mov
add
sbb
sti
test
ret
lds
jo
pop
jecxz
ja
jb
xor
test
jmp
into
jo
mov
in
or
cmpb
cmp
mov
xor
out
mov
push
xor
dec
jb
stos
push
or
jo
je
in
popa
dec
fs
jo
test
mov
leave
jo
mov
ss
ret
jo
jns
pextrw
mov
cld
sbb
jo
jmp
ret
enter
jo
popa
push
iret
rcll
jp
and
daa
add
inc
test
repnz
push
mov
mov
dec
jmp
leave
cmpsb
jo
or
xchg
lret
ror
or
push
sub
add
divl
sbb
jo
out
shlb
cli
fbstp
xchg
ror
xchg
jne
sbb
push
mov
adc
ret
jo
popa
xchg
cmp
cwtl
cmp
subb
xor
rclb
jo
scas
push
mov
jo
lea
inc
nop
mov
pop
aad
mov
lock
or
add
mov
out
xchg
int
push
clc
pop
mov
xchg
les
into
or
cwtd
jo
mov
mov
jo
js
mov
push
and
pop
jo
mov
lret
cmp
jo
call
jo
xchg
adc
add
jmp
cmpxchg8b
cmp
aad
nop
out
sbb
jae
fnstenv
mov
push
ret
das
jge
jo
js
dec
imul
rcrb
leave
mov
loopne
xchg
dec
dec
movsb
test
jo
add
mov
xchg
mov
push
mov
outsl
test
mov
inc
dec
lea
or
mov
mov
sub
jb
xor
push
lret
add
inc
mov
jo
lahf
and
les
or
sbb
sub
flds
sub
dec
cltd
lds
movsb
pop
jp
jmp
leave
adc
and
jo
std
out
es
mov
out
testb
jb
adc
mov
xchg
jo
fwait
shll
dec
mov
sbb
mov
not
mov
fdivrl
les
movsb
jecxz
jno
popf
xchg
sub
cmp
xor
iret
jp
nop
icebp
pop
outsl
int
mov
stos
enter
lahf
jo
mov
dec
jo
mov
decl
jo
addr16
in
fnstenv
ficompl
dec
ret
push
or
xchg
inc
int3
in
fdivl
or
jo
sub
insl
mov
rorl
mov
xor
out
cmp
jp
lds
sti
sub
imul
jo
loop
jl
inc
jae
jo
push
mov
mov
inc
mov
jno
aaa
lds
push
xchg
shl
je
jle
cwtl
jae
jg
idivl
ret
adc
jo
xor
out
mov
mov
je
mov
push
xor
pop
or
addr16
in
jo
or
adc
add
cmpb
pop
cmpsl
inc
ud1
sub
jp
or
sbb
call
mov
movsb
inc
mov
mov
pop
popf
jo
lds
push
fisttpll
scas
adc
sbb
sar
js
ds
fsubrs
xor
push
and
aas
pushf
sbb
pop
in
aam
jbe
stos
ss
xlat
fwait
xchg
and
inc
push
or
and
rclb
nop
xor
pop
mov
imul
outsl
xchg
in
fstps
cmp
jns
sub
sub
pop
add
sbb
lea
adc
jg
mov
push
fwait
adc
xchg
mov
sarl
add
repnz
leave
jo
dec
sbb
mov
pushf
inc
stos
lods
ret
int
jo
lds
nop
dec
into
mov
sbb
test
js
test
adc
jne
int
xlat
sub
mov
lods
jo
enter
cmpl
push
mov
sub
nop
test
xchg
xorl
mov
sub
push
add
jno
icebp
sub
mov
test
js
mov
push
dec
cli
cmp
mov
popf
jno
mov
mov
lret
adc
adc
leave
aas
int3
mov
xor
lock
dec
cmp
addb
mov
std
pop
mov
bnd
jo
mov
cmpsl
add
ret
in
scas
jo
inc
bound
sarl
xor
cmp
xchg
test
rorb
ret
repz
inc
or
lret
jo
or
mov
jecxz
xor
jbe
sbb
lds
jo
aam
mov
jp
ret
jo
je
imul
jns
pop
jae
inc
ljmp
ret
cmp
xchg
pop
or
cmp
inc
inc
lods
jb
scas
push
fcoml
push
js
mov
jmp
mov
sbb
jne
lock
jge
sub
scas
jmp
xor
scas
filds
mov
dec
arpl
iret
cld
add
dec
js,pn
lods
loop
jo
cli
js
jne
dec
sbb
daa
jo
push
mov
xor
pop
cmp
jo
testl
inc
pop
orb
addr16
es
xor
fisubrl
fsubr
push
adc
jo
sbb
loope
repnz
leave
cpuid
je
mov
fsubl
pop
jo
mov
xchg
inc
es
imul
add
bound
jno
mov
mov
mov
rolb
ret
mov
loope
insb
jbe
mov
sub
es
rcrl
fidivs
sbb
xor
rcrl
jo
cmp
mov
jo
jecxz
aad
mov
jo
inc
addr16
loope
sbb
lock
mov
dec
ja
jne
int
ret
cwtl
insl
jge
add
mov
mov
dec
mov
mov
into
rol
jo
outsb
mov
xor
mov
fst
shrl
nop
fcom
test
imul
scas
mov
jo
cmp
std
loopne
daa
mov
imul
iret
jo
bound
lods
lsl
dec
data16
jo
lock
sbb
je
test
shll
push
out
ds
popf
ret
paddw
sub
js
xor
cmp
pop
jo
sub
leave
jo
ret
xorb
inc
ds
cmp
xchg
sbb
in
push
push
sbb
jmp
cltd
cmp
mov
das
jo
cwtl
xlat
outsb
cmpl
sahf
xchg
les
jo
psraw
inc
scas
in
sub
out
jo
fldenv
cmp
mov
mov
mov
lahf
out
inc
fs
jo
movsl
push
jo
sub
ljmp
setbe
push
mov
aas
pop
or
push
jo
cmp
sbbl
push
nop
rcll
repnz
xchg
nop
dec
loop
mov
shlb
aam
iret
push
mov
jp
jo
test
xor
leave
sbb
ret
in
cltd
leave
dec
fadds
sti
ret
mov
jo
or
push
gs
cmc
inc
xor
out
mov
mov
mov
xchg
dec
push
pop
movsb
movsl
aaa
andb
or
jo
negb
int
push
jo
loopne
sub
enter
ret
and
mov
mov
inc
jb
push
or
and
fs
mov
lahf
xchg
in
stos
inc
pop
imulb
and
sarl
lret
nop
mov
dec
fwait
mov
loopne
cmp
std
inc
xor
cs
pop
les
pop
dec
in
xchg
loop,pn
insb
fistpl
cwtl
ret
or
subb
jg
test
mov
nop
gs
xchg
inc
ja
jle
jo
iret
push
xchg
loope
dec
jo
aad
push
test
inc
jmp
push
pop
cs
cmpl
inc
mov
jp,pt
jo
adc
repz
add
shrb
fmuls
jp
popf
pop
cs
sbb
orb
mov
ret
sbb
adc
inc
mov
mov
popf
and
int
push
and
dec
movsl
push
jne
test
xchg
jo
sarl
mov
pop
cs
cmp
add
xchg
jo
xchg
jne
push
jg
sbb
rcrl
lret
ds
jo
pop
mov
push
push
mov
aas
repz
sub
jo
xchg
imul
jo
mov
lods
inc
in
mov
adc
mov
out
push
scas
ja
ret
push
pminub
or
jle
pop
mov
insl
mov
mov
pop
pop
data16
stos
ror
jo
adc
push
mov
jge
clc
and
vdivsd
xchg
push
into
repnz
insb
jb
mov
frndint
cmp
or
dec
daa
lret
jo
scas
iret
mov
imul
scas
mov
fwait
orb
je
fisubl
push
xor
in
xor
pop
shr
shll
jno
js
mov
jp
mov
stos
xchg
mov
jo
pop
xchg
push
mov
jne
in
add
popa
dec
enter
aad
loope
jo
push
ljmp
mov
pop
cld
sub
jle
inc
sahf
ja
pushf
jo
and
add
cmc
lret
fincstp
outsl
les
dec
jo
lds
in
filds
test
into
xor
jo
cli
sub
pop
sub
loope
bnd
inc
cmpsl
dec
jo
int
mov
mov
ja
jns
jo
iret
in
mov
push
nop
in
mov
shlb
push
ss
js
ret
es
cmp
dec
xchg
sub
jecxz
ljmp
adc
xlat
cmpsb
test
imul
jge
cmc
or
fistpl
pop
adc
xlat
jne
mov
pushf
push
cli
push
out
fsts
std
pop
sub
or
sbb
jae
daa
jo
ljmp
jo
or
lds
fld
cltd
out
addr16
adc
aas
out
jg
cmp
imull
inc
lds
push
jge
in
subl
ret
jb
mov
repz
cwtl
in
test
cmpl
je
ficoms
mov
and
cmp
jo
sbb
mov
loopne
cmp
sahf
dec
or
mov
pop
push
jo
cmp
psubsb
jae
push
jbe
inc
sbb
shll
lds
mov
sub
jo
rorl
paddusw
mov
push
popf
jo
out
mov
cmp
sarl
jo
pandn
nop/reserved
mov
mov
xor
xorb
leave
bound
inc
or
mov
ret
and
pop
or
pop
sub
jge
push
or
jae
out
or
jo
or
push
in
xchg
jo
mov
add
stc
dec
jo
and
push
js
jo
sub
hlt
jo
mov
test
pop
div
lods
mov
lret
xor
nop
cmp
out
adc
sahf
je
mov
mov
jo
jle
cmc
mov
lahf
push
push
jo
pop
fidivrl
repnz
aad
sbb
add
jp
ja
rorb
out
mov
es
ret
mov
mov
repnz
jo
sub
dec
lds
fsubrl
jo
loope
xchg
inc
push
jo
pop
jg
shl
popa
test
and
push
xchg
jmp
addr16
arpl
mov
xchg
jo
aas
enter
jle
jo
mov
jo
cmpsb
xchg
dec
in
ret
outsb
jo
mov
scas
inc
jo
fisttpl
push
rcrl
inc
arpl
int
add
mov
in
fcom
and
mov
jo
adc
mov
jo
add
les
out
int3
push
inc
mov
cwtl
dec
cmc
rcrb
fcomip
aad
data16
les
jo
fsubrl
cmp
jo
stc
inc
mov
gs
jo
lods
orl
or
jo
mov
sub
ss
fisubrl
cmp
gs
es
mov
insb
jae
jle
ficomps
sub
movsb
cmp
in
jo
cmp
dec
popf
dec
sub
shlb
adc
jo
int
pushl
push
jnp
inc
ret
mov
outsb
shlb
cmpb
add
nop
sbb
fs
adc
outsl
sahf
int3
jo
movsb
mov
jmp
jae
jae,pn
or
js
in
cld
popf
push
imul
out
arpl
iret
jae
push
scas
into
movsl
clc
jo
and
mov
sub
pushl
pop
scas
mov
imul
xor
hlt
add
fs
ret
jb
mov
pop
cltd
inc
jo
cmp
jp
ret
sub
push
pop
bound
ss
sbb
mov
and
push
loopne
lret
push
bound
int3
jo
push
mov
cmpsb
jo
inc
push
pop
test
cmp
pop
lds
shlb
jmp
jo
cmc
lea
add
nop
mov
testl
jmp
push
add
sbb
bound
mov
icebp
pop
jo
cmp
add
dec
lcall
xchg
pusha
cmpb
iret
sbb
add
rorl
pop
xor
cwtl
dec
idivb
dec
xchg
lock
pusha
frstor
add
loopne
js
push
jo
mov
push
aas
add
lcall
sub
cmpl
pop
pop
jo
cmp
inc
adc
dec
add
loop
js
mov
leave
pop
popa
rclb
cmp
cmp
enter
aam
pusha
je
aad
dec
mov
subb
mov
xor
cmpsl
push
mov
sidtl
cwtl
inc
bound
pop
sahf
mov
jp
mov
inc
flds
lock
mov
mov
jle
jo
mov
in
sbb
jo
sbb
into
mov
int
jo
aas
fimull
sub
dec
xor
jo
in
in
inc
sub
mov
mov
aad
out
gs
add
shlb
bound
push
js
jmp
jl
rorb
jmp
inc
jp
pshufw
add
jmp
popf
push
jo
or
add
int3
mov
jo
and
lea
sub
movsb
fisubl
sub
jns
or
enter
cmp
sub
mov
fsubrs
mov
xor
js
pusha
dec
stos
jl
add
dec
push
divb
inc
cmpb
pop
jne
mov
jnp
jl
shrb
sub
imul
xchg
jo
mov
dec
xor
hlt
leave
inc
mov
nop
lahf
mov
mov
js
xchg
inc
mov
lock
jnp
mov
mov
push
add
cwtl
push
jle
loop
dec
or
add
sbb
adc
mov
xchg
mov
jns
testb
mov
fmuls
fcmovne
jo
jbe
repnz
cltd
or
icebp
addl
jns
xchg
mov
mov
inc
shlb
ret
fidivrl
je
in
jo
mov
mov
enter
ja
lods
mov
gs
jmp
pop
jo
leave
es
and
shll
ret
lds
xor
or
adc
xchg
cmp
or
push
push
aad
cmp
out
jae
adc
lret
movsl
jmp
rcll
dec
mov
jo
scas
popa
jnp
mov
dec
push
popf
cld
add
aas
test
scas
pop
adcl
and
inc
jle
jo
mov
pop
scas
jo
repnz
xor
addr16
push
jmp
mov
test
fisubrs
dec
andb
or
loopne
mov
sbb
hlt
sub
adc
xchg
xor
lret
lds
dec
jo
lods
sbb
sub
movsb
jo
lds
jecxz
sub
mull
std
mov
push
mov
andb
sbb
mull
push
lret
jo
sbb
push
sbb
jmp
ret
js
in
or
jo
lods
push
mov
aas
pushw
xor
xchg
push
test
mov
sub
pushl
les
xchg
shrl
jb
dec
xchg
jo
daa
pushf
leave
jge
adc
in
push
inc
add
bound
addb
arpl
inc
pop
sbb
stos
sub
sarl
loopne
jo
out
repnz
adc
rcrl
scas
push
es
sbb
rcrl
mov
mov
add
add
sub
lea
stc
and
psubusb
mov
jbe
rcl
mov
sbb
popf
bound
add
mov
add
jo
xchg
movsb
imull
gs
je
mov
sub
leave
or
shlb
xchg
jo
pop
iret
jb
rcrl
mov
fnsave
push
ret
in
jnp
rol
das
jmp
les
scas
rcl
jo
sub
inc
aad
jge
jbe
jge
inc
jo
fwait
adc
repz
fldenv
jo
loop
sbb
inc
icebp
ret
jo
xchg
cltd
lds
scas
imul
mov
push
pop
dec
adcl
jmp
xchg
movsl
insb
mov
jo
sarb
cmp
add
xor
out
sub
sub
jmp
jnp
fbstp
outsb
and
mov
adcb
and
xchg
jo
push
loop
fnstenv
mov
jo
and
jge
stos
shrb
scas
xchg
inc
cmp
rcrl
inc
mov
repnz
xor
je
pop
loopne
jo
mov
incl
mov
popf
mov
push
out
mov
add
push
fs
rclb
sbb
mov
jg
je
lock
or
jp
arpl
bound
enter
hlt
sbb
push
int
rorl
jnp
test
ret
mov
iret
arpl
xor
or
stc
lds
mov
push
sub
imul
add
jo
stos
sub
jo
gs
hlt
cs
push
aam
out
cmovge
scas
add
test
push
xchg
int3
sub
inc
insl
jge
jo
stc
int
into
jle
dec
nop
out
xor
push
adc
push
jo
subb
sub
xor
jo
scas
and
subl
ljmp
cmp
mov
or
leave
adc
test
adc
lds
jno
cmpsb
xor
jo
mov
mov
pop
int
cmp
xchg
mov
cmpsb
std
nop
lds
movsb
mov
pusha
data16
push
mov
out
fimuls
xor
inc
sub
orb
add
shlb
xor
sub
lea
data16
ljmp
push
pop
lret
cmpb
icebp
shl
mov
jo
dec
xchg
inc
stos
sub
adc
fisubl
ret
pop
adc
lret
je
in
popa
mov
aas
dec
out
push
icebp
outsl
push
jo
mov
lds
xor
adc
adc
push
xor
lock
and
xchg
mov
inc
mov
push
sub
and
push
push
and
cli
out
push
mov
shrl
adc
sub
push
out
or
jae
mov
inc
jo
inc
mov
pop
jo
mov
and
ret
mov
sub
push
mov
jo
push
jbe
or
cmpsl
js
shrb
fcmovbe
jo
leave
mov
rcrb
sbb
or
shlb
inc
pop
nop
inc
pmullw
xor
lods
jecxz
or
pop
rcrb
jns
in
pop
add
aaa
add
cmp
sbb
cmp
add
inc
es
jmp
and
jne
add
pop
mov
movsl
jo
xchg
mov
mov
lock
adc
mov
shlb
push
mov
inc
loope
ret
inc
inc
loopne
notl
pop
or
test
lods
xchg
lcall
std
cli
mov
xor
lcall
in
aas
movsb
jge
jo
xorl
jmp
mov
jo
push
fwait
jg
or
rorb
scas
js
mov
sbb
daa
test
jo
fbstp
sahf
sbb
jo
dec
sub
pop
idivb
repz
mov
pop
push
jo
cld
sub
xorl
int3
push
je
jg
mov
push
test
arpl
jo
jle
jb
bound
pop
mov
inc
je
leave
xchg
mov
and
jo
add
sub
xchg
adc
add
mov
lds
das
out
shrb
popa
int3
std
shll
pusha
pop
les
xchg
js
jo
icebp
leave
stos
jp
xchg
or
sbb
aaa
xorl
lods
in
leave
scas
mov
mov
test
popa
movsb
cmp
mov
add
nop
insb
out
loope
adcb
jo
ret
push
jo
leave
aas
lahf
push
shrl
jo
ret
inc
ljmp
lds
fisttpl
adcb
sub
leave
sbb
add
sbb
push
pop
jo
bound
inc
mov
lds
sbb
not
and
dec
fidivrs
mov
add
push
xor
pop
sbb
loop
lods
sub
fcmove
jo
test
mov
jo
cmp
dec
in
sub
adc
add
aaa
pop
out
test
les
bound
and
cmp
jno
and
adc
inc
add
imull
jnp
jo
jb
fcmovbe
ficomps
ret
inc
mov
xorb
incl
sub
pop
dec
cli
push
imul
ret
jp
xchg
ffreep
push
aam
in
inc
fisubrs
aas
jo
mov
ss
inc
in
sbb
push
addr16
jo
pop
in
add
add
mov
sub
xor
jo
pop
mov
jo
sti
movsb
mov
jo
fucomi
adc
jo
fsubr
xchg
rcl
jo
ffreep
and
daa
lds
faddl
cmp
iret
xlat
jno
inc
or
aad
aas
js
cmp
ja
loopne
sub
shl
int
xor
jo
mov
pop
add
idiv
adc
lret
or
xor
sub
js
icebp
sbb
aad
mov
and
es
jo
test
cmc
and
dec
push
inc
lds
jo
mov
and
bound
cmpl
cld
popf
jne
outsb
jo
enter
pop
adc
xor
jo
outsl
rclb
or
fadd
out
push
xor
int3
pop
mov
fldcw
popa
fcomps
mov
xor
addr16
repnz
mov
sub
add
incb
push
ljmp
test
jo
outsl
aaa
and
ret
out
jo
lea
gs
jo
bound
in
shlb
jae
lods
and
sub
subb
and
inc
repz
jo
ret
pop
and
or
ja
add
lret
or
sbb
jo
movsb
into
fmul
inc
mov
or
adc
fidivrl
sub
pushf
pusha
mov
sub
jecxz
mov
mov
mov
test
popl
mov
fs
jp
and
push
sub
jbe
add
cltd
out
dec
jo
ret
je
ja
jo
xorl
jo
and
cmpsl
aad
mov
jo
in
outsl
ret
test
mov
inc
lahf
add
loop
push
or
jb
jne
dec
shl
jbe
dec
sub
js
lds
mov
push
xchg
inc
add
outsb
add
test
ss
xorb
push
xor
leave
stos
cwtl
xor
mov
inc
xchg
ljmp
ret
xchg
lods
jo
rorl
xchg
push
mov
or
sti
mov
into
mov
push
and
mov
inc
iret
jo
movsb
insl
xchg
mov
pop
xchg
xchg
xor
mov
sbb
shll
lahf
nop
and
cmpsl
jae
pop
leave
dec
mov
jo
lret
adc
mov
adc
add
sbbb
pop
jo
inc
push
inc
fxam
sub
lret
mov
test
jno
stc
lds
sub
aad
out
jo
arpl
sub
shll
dec
jo
loopne
subl
jae
mov
decl
jo
ret
stos
arpl
sbb
add
movsb
cmc
cmp
in
jo
fbstp
xlat
loope
ret
leave
data16
dec
add
mov
loope
push
xchg
fsubs
fnstsw
jbe
repz
out
jb
jp
aaa
leave
sbb
jo
add
inc
jo
subl
inc
iret
adc
in
in
sub
xlat
cmp
jge
in
jmp
adc
push
mov
and
mov
push
sti
mov
xchg
stc
mov
push
xchg
push
js
pop
fsubl
sbb
lods
ret
mov
jge
push
cmp
jns
cltd
jl
fwait
jnp
jo
or
inc
sbb
lret
sub
dec
push
ret
fmuls
int
faddl
shlb
inc
mov
and
xor
bswap
push
push
pop
and
in
stos
xor
add
call
inc
cmp
or
xorl
jp
mov
icebp
or
jge
xor
mov
fld
jmp
xorl
shll
sbb
mov
hlt
sub
jo
std
mov
xchg
jo
dec
push
mov
adc
push
out
shrl
fs
cmp
mov
mov
jo
xor
inc
test
inc
lods
jo
inc
adc
shrb
aam
sbb
call
fwait
push
bound
in
xchg
stos
inc
xor
or
hlt
and
jo
les
push
clc
lock
enter
js
or
out
push
sarb
mov
cmp
test
addr16
aad
mov
aam
stos
fnstsw
or
out
mov
cmpsb
sbb
fildl
mov
push
cmp
add
daa
aad
insb
sub
xchg
repz
adc
fsubrl
jo
mov
add
jo
rcrl
jno
sbbb
mov
jo
ljmp
in
mov
cmp
aam
push
nop
jmp
insb
push
fwait
cld
and
out
rcll
jg
scas
sub
fs
adc
cwtl
sti
mov
xor
jge
aad
repnz
sub
xchg
rcrl
adc
lods
les
or
jo
lods
cltd
push
add
jo
rol
pop
mov
push
movsb
mov
orb
dec
xor
dec
andb
xchg
push
in
cmp
icebp
xchg
mov
jl
lcall
sbb
lret
add
mov
sti
jle
push
pop
jge
insb
sbb
jo
repnz
sub
hlt
ret
cmpsl
push
shlb
fs
sarl
ret
les
cmp
ret
push
dec
loop
iret
movsb
add
sti
or
mov
jo
mov
es
sbb
les
pop
add
dec
loope
jle
jns
jo
mov
clc
jo
outsl
xchg
ret
pop
mov
mov
cmp
pop
adcb
ret
or
jmp
movsb
xlat
cmp
lods
or
clc
adc
je
jo
pop
lds
sub
loop
push
push
sub
sub
push
imul
clc
lds
cmp
jp
xchg
jo
push
mov
cmp
test
mov
stos
ljmp
add
push
addl
cmp
sti
pop
lret
fxch
xchg
in
lahf
addb
jbe
aas
ret
js
inc
imul
pop
fucomp
jo
dec
out
leave
xor
push
nop
add
roll
in
dec
and
cmp
or
rcll
jmp
inc
jo
add
sti
xor
lds
add
or
ret
in
scas
jo
mov
jmp
cmc
mov
idivl
lds
nop
dec
xor
mov
mov
sub
enter
hlt
sub
jo
dec
leave
xchg
stc
movsb
push
mov
jp
lds
push
mov
fnsave
jo
pop
ror
mov
jo
test
mov
jo
inc
inc
pop
lock
out
out
jo
stos
inc
pushf
popa
fwait
push
jo
rcll
arpl
jo
inc
mov
repz
pusha
mov
aas
adc
mov
push
push
jbe
cmpsl
sub
rorb
inc
jg
jo
das
xor
mov
lds
movsl
dec
cmpsb
push
jo
push
sarl
rolb
cmp
jns
inc
push
jp
imull
insb
cmp
aad
rclb
js
ret
pop
lods
push
gs
jl
shlb
mov
jp
or
pushf
jo
mov
jbe
adc
lock
jecxz
xor
out
jle
or
fnstenv
shlb
jnp
nop
imul
and
cmc
std
lret
mov
jo
aam
outsl
loope
mov
adc
jo
and
out
push
inc
sahf
adc
dec
icebp
inc
bound
adc
cmc
pop
and
and
or
jo
mov
add
lds
dec
data16
cmp
jo
jae
movsl
enter
jo
shrl
dec
std
int
jo
xchg
pop
sub
es
out
or
cmp
and
mov
sub
in
mov
add
hlt
fbstp
dec
pop
jecxz
jo
jp
insb
jne
out
out
fmull
mov
jb
loope
sub
add
sbb
add
sbb
jo
pop
ret
inc
adc
jo
std
sbb
pop
push
jmp
cmp
mov
fnstcw
ret
jo
xchg
das
lock
clc
imul
imul
daa
add
mov
jo
movb
mov
js
or
pop
jo
adc
insb
icebp
jo
arpl
ret
adc
jo
fadds
push
pop
and
test
shr
or
jo
jg
imul
cli
jo
or
fldenv
das
jb
cmc
mov
or
out
ss
xchg
and
popf
lock
into
jb,pn
jns
je
sub
adcb
fisttps
dec
cltd
push
jl
push
in
dec
ja
push
and
sub
cmp
fsub
pop
std
dec
and
dec
add
cmp
adc
add
push
ljmp
arpl
inc
xor
mov
pushf
or
adc
fldcw
jo
inc
out
mov
imul
xchg
inc
aaa
out
cmc
sbb
dec
jo
push
sbb
dec
mov
mov
imul
mov
clc
xorl
shlb
inc
arpl
mov
mov
xor
jo
jnp
sbb
loope
jo
sub
xchg
xorl
mov
cmpb
aam
xchg
push
js
scas
insb
fs
out
mov
jo
call
pop
pushf
cmovg
jae
or
dec
test
mov
cmpb
into
sub
push
daa
or
shll
xor
int3
addr16
test
cwtl
push
outsl
jle
hlt
inc
mov
call
inc
ja
cmpsb
sbb
pop
mov
sti
nop
sub
cmp
or
xlat
jb
pop
test
pop
mov
pop
leave
jo
lock
xor
iret
mov
add
and
leave
rolb
sahf
inc
pop
lods
shrl
and
dec
sbb
add
aas
lds
xchg
lea
ficomps
jo
cmpsl
and
add
mov
push
cmpsb
arpl
lds
aam
imul
xor
lock
lret
loop
cmp
lds
jge
pop
sbb
popa
sub
gs
jp
lahf
pop
push
lds
call
jo
loop
sbb
divb
adc
push
stc
and
jo
popa
inc
adc
mov
pusha
mov
cs
out
xor
js
pop
popf
jmp
jb
in
inc
dec
xorb
cmpsl
mov
sarl
loopne
cmp
icebp
mov
lret
or
inc
pop
js
push
rclb
movl
sub
add
push
mov
sbb
in
jl
cs
jge
jo
push
imul
inc
decb
jmp
test
add
js
ljmp
jo
xor
lods
int3
dec
lahf
je
hlt
and
lds
inc
das
mov
aad
or
lods
mov
incl
fs
ret
jo
pop
jne
in
mov
das
jl
fwait
xor
lods
lahf
adc
push
btc
and
std
outsb
mov
in
rcl
jo
cmp
or
xchg
ret
andb
fmull
aas
ret
in
popf
addl
lds
push
jo
enter
inc
jge
shlb
js
pop
mov
ret
add
iret
jnp
and
sub
scas
aad
test
punpckhwd
int
inc
jo,pt
adc
fs
mov
jo,pt
jno
mov
popa
gs
fistl
jo
adc
in
cwtl
jbe
push
call
mov
addr16
cmp
and
lea
push
and
push
jo
aaa
repnz
jbe
cli
inc
ss
jg
push
mov
mov
xchg
pop
xor
fwait
ret
mov
jge
jo
and
pmaddwd
mov
aad
jo
ret
add
pshufw
call
jmp
mov
sub
iret
jo
fld
ss
cltd
lahf
test
lea
into
cmp
aaa
mov
jne
cmpb
sbbb
mov
dec
pop
jnp
sahf
sub
mov
push
int
shll
dec
in
jp
jno
mov
push
and
push
outsb
adc
je
cwtl
jo
fldl
push
jne
cmp
push
push
ret
push
jmp
call
lods
bound
aad
andl
sub
and
dec
iret
or
inc
insb
jo
leave
sub
or
popa
int
aaa
jl
ds
jo
loop
adcb
sub
je
stc
xor
mov
adcb
jo
add
arpl
xor
add
jae
mov
imul
aad
les
mov
cmp
aas
and
pop
jmp
nop
mov
mov
adc
push
fs
nop
add
cmpsl
popa
and
mov
jo
xchg
test
sbb
jmp
bound
sahf
lods
jns
pop
push
or
and
jo
and
or
popa
out
xchg
ss
jo
mov
leave
or
out
push
inc
addb
stos
push
dec
sbb
sbb
scas
xor
mov
std
sbbb
out
in
lret
jne
xchg
int
repz
sub
mov
pop
mov
cwtl
ret
hlt
push
sub
mov
aad
jo
cmp
cli
ret
mov
jo
mov
or
nop
fwait
push
jle
clc
aad
mov
mov
pop
push
xor
jo
mov
dec
jl
sbb
mov
jo
fdivs
ss
lds
scas
xchg
jne
mov
add
add
rolb
jl
idivb
sub
hlt
mov
arpl
cmpl
and
adc
push
xchg
dec
outsl
xchg
push
and
in
mov
bound
mov
push
test
cli
push
sahf
les
out
sbb
stc
add
ja
pop
cwtl
jo
test
mov
jo
inc
pop
outsl
sub
ret
push
rcll
mov
cmp
icebp
dec
cmp
sbb
rorl
sub
pop
aam
call
arpl
jo
out
fisubrl
ret
mov
leave
mov
jo
mov
mov
movsb
jb
jo
rcrl
sub
les
shlb
leave
pop
jo
pop
cmp
loope
sub
jp
mov
mov
repz
mov
inc
dec
jo
sbb
cmp
xchg
sub
lret
iret
std
jo
mov
push
lds
nop
jle
mov
js
aaa
in
sub
je
sub
cmpsl
jle
xor
repnz
mov
enter
cli
ds
fnstsw
or
xchg
sub
inc
nop
or
icebp
jo
push
mov
xchg
test
pushf
int3
sub
imul
dec
cmc
roll
les
inc
pop
jle
push
lds
out
cmpsb
push
add
ret
mov
inc
lea
jne
inc
cmovnp
xor
adcb
jo
and
and
roll
jo
inc
mov
cmp
mov
in
test
or
mov
lods
sub
mov
mov
and
test
add
in
pop
mov
lock
das
xor
sbb
xchg
push
pusha
mov
jo
ret
mov
push
in
inc
int
dec
pop
mov
and
es
push
popf
leave
fnstenv
ja
xor
cmpsb
xchg
and
mov
insb
mov
jle
popa
arpl
xor
dec
lds
xchg
cmp
jo
movsb
mov
or
push
add
daa
lods
ficomps
popa
sub
sbb
shll
stos
xor
es
jo
jne
mov
mov
mov
jo
add
int
cmp
ret
fiadds
fs
jo
sub
sub
lret
pop
dec
ds
arpl
bound
xlat
jo
pop
mov
mov
popa
jecxz
aas
loope
cmc
lcall
sbb
ja
and
jo
sub
sub
and
adc
out
jo
fdivrl
popa
lcall
sahf
push
flds
mov
push
fadd
dec
sub
lods
dec
mov
out
add
xorl
push
bnd
imul
rcrb
in
mov
orb
sbb
int3
jp
adcl
aad
insb
pop
cltd
jo
ret
sbb
fs
dec
xchg
jo
inc
test
pop
or
mov
in
sub
mov
jo
mov
push
push
dec
jge
adc
xlat
or
sahf
pop
leave
mov
es
rol
repnz
lret
inc
mov
pause
sbb
mov
pop
mov
xorb
enter
cli
inc
ret
fstpt
mov
jo
mov
aad
test
cmpsl
pop
ret
mov
mov
mov
push
mov
pop
jo
mov
in
jle
jmp
ret
jbe
faddl
jo
call
icebp
push
inc
mov
scas
into
sti
das
js
inc
dec
jo
pop
leave
faddl
dec
jo
pop
int3
fistl
ret
data16
das
sub
or
dec
sarl
push
xor
movsb
push
cmp
div
test
or
cs
or
sub
jo
gs
or
stos
aam
push
nop
push
mov
jne
sbb
frstor
subb
repz
cmpsb
cmp
jmp
je
jo
pop
mov
pop
jo
xor
repnz
test
mov
gs
mov
dec
scas
jns
add
lret
jne
jb
lock
pop
add
andb
sbb
hlt
adc
dec
xchg
and
fistps
je
insl
into
mov
mov
inc
lods
ljmp
and
mov
imul
roll
aam
or
and
jne
out
sub
sbb
js
out
or
push
jo
cmp
inc
loop
fistps
pop
pop
popa
and
cld
push
fldenv
dec
out
adc
sbb
cmp
filds
add
push
jb
jno
hlt
incl
push
insl
sbb
mov
adcb
xor
inc
add
je
add
mov
sub
dec
xor
xor
xchg
xorb
or
repz
test
vpshufhw
mov
jo
sbb
inc
xorb
mov
shrl
into
jae
or
iret
mov
out
adc
cmp
sbb
hlt
aad
lock
js
mov
fisttpl
inc
sbb
mov
sbb
out
loopne
fdivrs
in
add
jmp
lret
sub
push
out
push
decb
xor
pusha
sub
push
into
adc
cmp
test
push
out
cmc
or
add
insl
mov
mov
out
je
lcall
jmp
fwait
xlat
outsl
xchg
xchg
pop
arpl
popf
ljmp
pop
pushf
les
jo
stos
inc
dec
arpl
leave
jo
dec
lods
push
push
movsb
cwtl
mov
jle
loopne
fucomip
and
add
dec
call
push
jo
imul
pusha
fildl
jo
xchg
call
jp
push
cmp
movsl
dec
nop
cmp
xor
paddw
scas
sbb
test
push
lea
jo
adc
dec
mov
roll
dec
jle
dec
inc
lds
je
jns
mov
lea
push
aam
ret
mov
jp
jo
adcl
sqrtps
dec
and
bound
in
dec
cmp
lods
xchg
xor
mov
ret
mov
out
xor
jge
jp
pusha
cmc
push
sub
decl
enter
pop
mov
out
xchg
andb
je
stos
xchg
insb
movsl
mov
hlt
aaa
js
in
push
loope
pop
jo
mov
inc
out
sub
push
test
push
xor
std
sbb
sbb
pop
add
lds
lea
fisttpll
xchg
xchg
push
imul
lcall
movsb
iret
jo
mov
mov
dec
jo
inc
nop
insb
sub
into
pop
jo
incl
inc
in
sbb
loope
jge
pop
lea
inc
mov
push
push
out
insb
test
stc
xor
mov
jns
sbb
pop
gs
and
pushf
pop
lock
loop
adc
or
xor
pop
xchg
xchg
mov
repnz
or
lods
int3
sbb
insb
test
test
lods
or
pop
cltd
or
push
test
inc
testl
cmp
add
push
imul
jo
push
sub
jbe
inc
jo
roll
fnstcw
cs
dec
inc
mov
jl
aaa
repz
lret
sahf
inc
inc
adc
shl
dec
jo
shll
out
and
or
fmuls
hlt
pop
mov
pop
adc
leave
dec
jo
and
adcb
orl
lcall
push
std
outsb
jns
xchg
in
push
mov
fwait
xchg
jbe
loop
cmp
scas
jo
popf
jecxz
jne
int
jo
ds
cmc
dec
adc
jo
popf
repnz
xor
push
add
inc
add
push
jmp
ja
aam
je
or
repz
adcb
mov
shll
fadd
lock
jecxz
sbb
xchg
pop
xchg
mov
push
les
aas
fwait
test
data16
std
lar
mov
sbb
movsb
jo
jmp
xchg
jns
pop
cmp
stos
ja
jo
push
nop
cmp
shll
jo
scas
xchg
rol
call
leave
mov
fadds
push
jne
jo
pop
or
icebp
sub
cld
xchg
push
jmp
popa
shll
sbb
dec
push
inc
andb
lahf
push
cmp
out
arpl
jo
push
dec
loope
dec
mov
jo
adc
mov
jo
js
xor
add
fnstenv
sarb
jo
lds
cmp
scas
jo
loopne
mov
andl
rcll
push
imul
pop
cmp
arpl
nop
xor
cmp
dec
orb
push
ds
mov
adc
je
push
mov
or
jp
orb
jno
cmp
add
jo
outsl
test
pop
jae
or
sbb
pop
data16
mov
les
xchg
imul
aad
test
movsb
sub
getsec
ret
xchg
push
mov
in
scas
and
in
scas
fidivrs
jo
and
pop
shlb
cmpsb
insl
insb
add
andb
imul
mov
cmp
sbb
call
loope
jp
inc
out
fiadds
scas
or
and
stc
insl
mov
insl
sub
movsb
jns
jo
ds
sub
push
fdivrs
ljmp
fwait
xorl
lods
pop
mov
mov
push
dec
insb
sbb
mov
xchg
mov
add
fmull
cmpb
xchg
pusha
pmulhw
inc
mov
or
xlat
stos
xchg
push
loop
pop
loopne,pn
jo
cmc
xchg
lds
xorl
add
jo
int
stc
pop
cmp
cwtl
xchg
sbb
ret
dec
sbb
push
gs
mov
mov
jo
jbe
std
lods
xor
testb
lea
sub
jo
adc
movsb
subb
leave
lds
imul
jo
mov
sub
mov
pop
xchg
outsl
push
fnstcw
jo
in
pop
mov
leave
jb
xchg
jle
add
inc
push
fs
ljmp
lahf
sub
mov
ret
push
jo
mov
mov
lds
aaa
fwait
leave
or
adc
data16
scas
loop
xchg
mov
jl
ja
mov
mov
inc
mov
and
dec
mov
pushf
arpl
shrl
mov
xor
sbb
subl
mov
xorb
xor
out
mov
rol
xor
mov
shll
loope
repnz
ret
jo
fistpll
fdiv
lds
jo
test
and
sub
add
cmpsb
push
loop
cmp
pop
push
mov
mov
push
cmp
sub
sbb
push
test
arpl
std
sarb
inc
mov
xchg
add
xorb
dec
jmp
leave
sbb
subb
sub
les
cmc
fisubl
stos
out
push
je
lods
xor
mov
std
or
mov
hlt
mov
lds
sub
jge
adcb
sbb
lock
int3
push
insb
inc
cs
jl
xchg
or
and
idivl
ret
les
cmp
jmp
sub
dec
subl
and
sub
adc
jp
test
cmp
push
leave
mov
bound
jo
sbb
stos
mov
inc
nop
mov
sub
cli
cmc
sbb
hlt
jle
leave
decb
daa
arpl
or
js
xor
jmp
jle
notl
add
hlt
xchg
outsb
nop
pop
int3
popa
or
imul
adc
mov
jb
movaps
movsl
into
jle
mov
xchg
xor
dec
xchg
imul
jno
arpl
mov
jo
loope
mov
and
mov
cmp
leave
aas
scas
xchg
popa
and
addl
inc
cmp
lods
imul
jp
jo
jae
enter
shl
mov
js
movsl
push
aaa
int
sahf
jb
dec
testl
push
add
jno
cs
or
jne
inc
sub
xchg
push
xchg
pop
ret
scas
xchg
pop
pop
jo
test
fcmovnu
insl
jo
loop
adc
xchg
jo
int3
int
mov
fnstenv
push
xchg
fucom
bnd
inc
lds
push
jge
jo
xor
push
jo
cs
dec
push
cmp
jle
push
insb
int3
test
outsb
in
sbb
jl
pop
jbe
xchg
xor
sub
ret
mov
out
inc
jo
xchg
rorb
aad
outsl
jbe
clc
push
add
mov
and
in
mov
mov
out
loope
or
sahf
out
aad
push
sub
jo
and
icebp
push
mov
sub
xor
xlat
dec
test
insl
aad
push
mov
insb
rolb
fdiv
cmp
fdiv
dec
repnz
pop
jo
fs
lds
bound
outsb
xchg
jo
shlb
add
mov
arpl
adc
sub
inc
shll
cmp
lock
push
je
mov
jo
adc
mov
push
and
mov
call
or
sub
shll
arpl
xor
jecxz
jo
ja
test
aam
inc
shll
pop
mov
out
leave
inc
mov
sbb
jo
xlat
loop
fadd
in
lods
jo
lcall
jo
notb
imul
or
push
int3
sbb
lret
adc
adc
and
test
jo
aam
sbb
pushl
sub
mov
mov
clc
or
pushf
nop
js
hlt
cld
subb
mov
dec
mov
sub
push
add
jo
cmp
mov
mov
ret
sahf
push
jae
fs
and
cmpsb
push
mov
pop
mov
mov
rcrl
jo
fbld
loop
ret
or
dec
jo
leave
mov
aas
pop
arpl
jo
jnp
add
xor
andb
jo
mov
cmp
dec
lahf
leave
fdivrl
push
mov
and
add
jo
dec
mov
inc
jo
into
std
repz
jo
fisttps
out
shr
mov
mulb
xor
jge
mov
and
roll
mov
mov
jle
or
sbb
lds
jo
cltd
mov
mov
add
jno
cmpsb
lcall
adc
loop
jmp
lods
packsswb
popa
cmpsb
jle
sbb
cmp
adc
dec
std
cmpsb
jmp
cmp
and
xlat
xor
icebp
jo
push
sahf
out
out
test
sub
hlt
push
cld
jo
arpl
aad
lahf
xchg
jge
shld
inc
roll
sbb
iret
shrl
test
mov
inc
jo
add
cwtl
sub
lahf
sub
cld
xchg
movsb
ljmp
mov
xchg
das
data16
sti
add
xor
adc
aaa
std
addr16
jo
ret
inc
cwtl
rorb
jle
sbb
mov
and
movsb
out
jmp
nop
mov
mov
cmpb
loop
jg
hlt
scas
jo
fs
out
data16
jo
movsl
div
aas
mov
out
nop
mov
pmullw
data16
add
xchg
adc
cmc
test
icebp
jne
loope
aas
insb
jo
das
jb
aam
mov
lret
data16
xchg
cmp
xor
movsl
pop
dec
jo
add
mov
push
fwait
inc
mov
je
mov
cltd
jo
popf
and
inc
cmp
adc
sub
xchg
inc
mov
and
outsl
cltd
fistps
adc
cmp
loop
xor
popa
movb
leave
jns
pushf
jo
aas
int
or
jbe
scas
jb
or
enter
sbbb
mov
inc
cmp
sub
outsb
nop
cmpw
addr16
mov
jo
aad
cmp
jo
mov
enter
mov
lahf
pushf
addr16
mov
jae
ss
je
inc
cs
mov
fs
movsl
lods
adc
and
in
clc
mov
push
je
js
xor
pop
sbb
jne
xchg
xorb
mov
in
shr
js
push
fstps
bnd
add
aas
lret
jo
nop
inc
mov
fiadds
pop
xchg
js
test
into
shlb
jecxz
mov
add
xor
mov
add
xor
int
pop
cmpsl
js
mov
bound
push
xor
cmc
push
xor
ja
lret
popa
pmuludq
inc
out
jle
sbb
lahf
fnstcw
cmpsb
ret
sbb
test
nop
and
pop
fwait
mov
ja
je
jo
xchg
mov
leave
jo
inc
push
mov
adc
jo
arpl
mov
jo
fdivrl
vsqrtss
cmp
jmp
lods
jg
sbb
ja
push
gs
xor
jle
call
mov
add
jne
ljmp
ret
jle
mov
mov
notb
dec
repz
add
imul
ss
scas
jo
push
je
aad
xchg
inc
jo
icebp
ret
sub
fisttpl
out
mov
mov
dec
sub
call
mov
xlat
shr
cwtl
out
movsl
jl
lcall
into
jo
popf
cmp
inc
das
out
jo
adc
int
mulb
sbb
je
push
dec
insb
mov
ljmp
dec
scas
les
jo
sbbl
insl
mov
in
jb
js
xchg
and
fwait
lea
or
pop
shlb
add
sub
in
xor
ret
js
adc
das
sub
in
adc
mov
jg
clc
loop
enter
mov
xor
adcb
inc
xchg
push
test
daa
jmp
sub
mov
idiv
mov
sub
adc
test
ret
jo
inc
mov
aaa
mov
fnstenv
inc
sub
iret
jmp
adc
mov
mov
cs
pop
jo
sahf
and
lahf
pop
fimuls
cmp
adc
mov
xor
aad
ljmp
les
mov
mov
jo
ret
jne
cmp
sub
or
jo
sub
jo
sub
sub
and
sub
cmpb
out
jmp
mov
shll
mov
cld
and
js
insb
mov
imul
or
or
int
in
dec
xlat
les
jle
and
push
hlt
jns
xor
arpl
hlt
es
mov
lds
shr
cmp
adc
inc
ds
add
sti
xchg
lret
je
sbb
sarl
test
and
adc
add
sti
setnp
xlat
cmpl
and
insl
shll
iret
scas
add
and
je
cli
fnsave
jo
or
jbe
cmpsl
lret
jmp
jle
xor
jnp
xor
dec
lret
outsl
mov
mov
daa
push
jl
xor
push
jo
call
les
int3
subb
cmpsb
scas
rorb
jb
push
test
je
imul
mov
das
inc
inc
arpl
xchg
hlt
jo
sub
jo
xchg
dec
fimull
xor
sbb
retw
rorl
ficomps
fidivrl
jo
inc
xchg
rcrl
jne
mov
cmp
enter
test
ficompl
je
dec
cld
jo
inc
shll
jbe
leave
add
repz
mov
nop
inc
std
loopne
mov
mov
fwait
mov
push
out
mov
mov
jo
int
jne
and
inc
sub
enter
out
lds
jo
ret
stc
adc
jl
frstor
mov
inc
shlb
mov
push
ucomiss
xchg
sbb
or
and
jo
pop
xor
pop
adc
jo
out
pop
mov
sbb
add
jo
xor
add
pop
mov
hlt
lds
mov
pushf
dec
dec
bound
jmp
repnz
sub
pop
jo
sbb
ja
lds
daa
fildll
jo
sbb
inc
imul
mov
cmp
xlat
adc
jnp
jne
adc
mov
dec
out
fs
sub
rcrb
or
inc
mov
pop
xor
aam
xchg
mov
test
pop
das
inc
jo
cmp
push
fdivs
add
push
cltd
lds
jo
jmp
inc
test
adc
dec
icebp
jnp
nop
jns
mov
lods
int
mov
cli
les
xor
pavgb
dec
sbbb
pop
xchg
in
dec
cltd
addr16
jo
pop
insb
xlat
push
cmp
jo
int
mov
jge
jo
fcmovb
inc
mov
push
out
mov
add
add
jno
xlat
mov
push
test
or
xchg
ds
push
xchg
dec
lahf
data16
xchg
outsl
mov
sub
lods
jo
inc
dec
pushf
adcb
jns
lret
jae
push
shrl
ja
add
aad
sbb
aas
std
cmpsb
xorb
aam
insb
and
jo
cmpsl
arpl
scas
ffreep
inc
jo
subb
mov
movsb
push
xchg
push
jge
or
or
daa
ljmp
jo
rorl
cs
lds
js
adc
or
xchg
push
lahf
repnz
sti
test
or
out
arpl
or
enter
adc
push
call
je
jb
mov
and
jo
aaa
jg
xchg
lock
push
jae
iret
cmpl
push
pusha
push
add
jo
jp
pop
daa
add
jle
push
inc
sbb
jb
jmp
out
sub
in
cmc
xor
push
movl
mov
ja
mov
xchg
xorl
pop
and
or
clc
push
xchg
scas
iret
or
cmp
push
push
inc
jb
push
mov
inc
hlt
shrl
mov
jo
test
aaa
sub
test
mov
xchg
sub
loopne
rolb
xchg
je
add
subb
jo
int
cmp
mov
rol
aad
push
imul
dec
and
cmp
mov
sti
mov
andl
mov
int
js
mov
pop
mov
mov
push
std
popf
add
sbb
push
dec
jg
mov
scas
or
lcall
stos
outsb
in
hlt
and
nop
cmpsl
push
push
mov
cmp
test
fsubrp
jge
dec
xor
inc
repnz
aam
xchg
lock
out
jo
jmp
addr16
jno
inc
mov
push
xor
xchg
in
fcmovbe
fs
mov
shrl
push
push
lods
jne
push
jns
loope
mov
sbb
ljmp
dec
aad
mov
mov
and
repnz
sub
or
push
rclb
jno
jo
frstor
inc
xchg
pop
cmpsb
jns
jbe
cmp
fwait
nop
jle
pop
fbstp
dec
divb
dec
mov
dec
xor
add
inc
xor
cmp
lcall
or
icebp
and
jo
inc
and
insb
icebp
mov
cmpsb
das
js
out
mov
lods
push
imul
hlt
andb
pop
fldl
es
roll
lcall
les
ljmp
jo
hlt
aas
add
jo
inc
or
into
sbb
jo
sarl
fildll
mov
mov
ljmp
jb
shll
xor
icebp
sub
inc
fabs
pop
lahf
add
jo
mov
cmp
shrl
ds
movsl
out
ret
inc
cmp
in
pop
dec
lods
mov
dec
hlt
adc
jo
call
in
jo
shll
jle
inc
mov
loop
xchg
sbb
xor
arpl
dec
lds
fisttpll
enter
inc
sub
and
adc
ss
jo
mov
cmp
scas
xor
and
clc
call
insl
ficoml
fldl2t
repz
cmp
pop
xchg
jo
jns
fisttpll
fwait
shll
sti
push
add
inc
jo
aam
clc
and
xor
jo
jle
xorl
and
aaa
in
cli
xchg
or
les
jbe
and
jo
xlat
xor
jo
push
nop
pop
xchg
lds
add
hlt
mov
imul
add
jo
std
pusha
lods
push
jne
in
jp
in
mov
jns
xorb
out
jo
int
dec
xchg
popf
adc
sub
into
jo
sbb
bound
jo
repz
in
jns
dec
dec
jo
data16
push
cvtps2pi
insl
addb
pop
lods
mov
or
data16
test
cmc
jo
in
cmp
popf
out
sub
mov
sub
xchg
out
fcmovnbe
xorl
inc
aas
cmp
xor
mov
int
lea
cmpl
dec
ss
sbb
std
push
or
jmp
mov
adc
jno
fxam
lahf
fcoml
rol
cmc
testb
sub
sub
xor
jb
mov
xchg
jnp
nop
xor
out
gs
subb
jo
movsl
mov
enter
jo
popfw
into
cwtl
dec
shrb
inc
lret
mov
leave
popf
push
andb
fisubrs
and
cmpsl
jno
xlat
lea
shl
inc
js
sub
fs
push
adc
loopne
xchg
divb
add
mov
inc
xchg
insl
push
adc
shrl
cmp
ds
loopne
sti
jg
lahf
les
fnsave
repz
add
xorb
mov
cmp
in
bound
daa
jmp
js
or
sub
cmpsl
test
lcall
jo
cmc
int3
add
loope
out
jo
dec
loop
and
mov
movsb
mov
jb
jo
iret
ja
dec
add
leave
jo
mov
pop
bnd
test
mov
std
stos
add
push
mov
or
pushf
mov
sub
scas
test
xor
repz
stos
push
or
or
mov
or
fcmovb
in
jecxz
cs
and
push
addb
inc
and
iret
repnz
incb
xlat
fmulp
in
jo
mov
jbe
test
nop
push
sahf
xor
dec
jo
inc
mov
cmp
mov
das
rolb
js
js
inc
jo
or
daa
mov
push
loope
xor
xchg
roll
sbb
xchg
out
lahf
mov
nop
sub
cmp
ficoml
xchg
jp
jo
std
xchg
dec
jne
jg
jo
push
mov
push
push
adc
sti
aam
addl
stos
jo
lods
lcall
pushf
jo
scas
loopne
xchg
divb
push
lret
and
pop
mov
dec
call
mov
cmp
loop
cmc
xlat
jo
dec
addb
pop
dec
and
ret
pop
scas
ss
jo
popf
push
jns
cvttps2pi
jp
and
jmp
push
jo
mov
test
bound
rcl
mov
xchg
adc
lcall
mov
out
ljmp
sub
scas
arpl
xchg
and
cmp
loopne
jmp
aam
push
cmp
jle
or
aad
std
mov
test
adc
jno
mov
out
jmp
or
mov
mov
push
icebp
inc
jo
std
ret
rcrl
scas
in
je
in
cmp
or
dec
mov
popa
inc
shlb
rcrb
ja
cmp
jo
cmpsl
loopne
mov
aad
jo
sti
rorb
cmp
jo
sub
add
inc
xchg
jo
sub
fnstenv
test
mov
jo
loope
fdiv
sahf
xchg
jne
push
adc
jno
jb
jg
roll
fnstenv
in
pusha
out
xchg
jo
sahf
mov
mov
daa
jp
jo
stos
xchg
lcall
cmp
lds
sbb
icebp
insl
or
divl
fstpt
jo
lcall
push
sti
je
addr16
subb
enter
fcompp
sti
loopne
jae
inc
sbb
push
jecxz
inc
xchg
sub
in
push
lret
mov
insb
and
movsb
xchg
and
inc
jge
ds
jmp
pop
inc
mov
mov
push
mov
xchg
ljmp
add
adcl
fdivr
jo
shlb
dec
jge
xchg
dec
shrl
lock
les
xor
mov
jo
push
lods
scas
pop
sbb
jo
das
stc
out
pop
and
mov
mov
and
fs
cmpsb
je
popl
aas
pop
jo
popa
loop
add
sbb
lds
fimull
das
push
scas
in
ret
and
lret
popf
testl
pop
lock
xchg
out
inc
add
fsubrp
and
bound
inc
jno
jb
jo
or
cmp
out
in
movsb
lret
jl
add
xchg
sbb
fdivrl
mov
js
mov
ss
sti
dec
jmp
mov
jo
filds
test
sbb
mov
cmp
jo
xor
lock
jo
cwtl
or
jle
add
jo
rcrb
or
int
lods
jo
push
add
mov
mov
sub
jo
repnz
cltd
sub
push
push
cmc
xor
mov
jo
cmp
or
mov
jo
push
int3
les
jo
cmp
lds
dec
xchg
push
inc
and
sub
imul
and
adc
jo
gs
mov
loopne
ret
ret
fistpll
inc
std
push
push
lods
insb
or
mov
jg
add
int
fimull
mov
divb
fstpt
adc
daa
jmp
pop
jle
enter
movsb
fidivrl
lcall
pop
xor
push
pop
nop
jg
std
push
sub
push
add
jo
mov
lea
jo
lods
push
xchg
sarl
ja
ret
or
adc
movsl
and
nop
adc
sahf
add
jb
test
xor
jo
xlat
popa
push
cmp
mov
jo
daa
cwtl
mov
jo
cmpsb
pop
pop
sbb
les
shll
mov
fidivs
add
inc
jo
or
dec
shll
popf
jns
xor
lods
dec
lds
xchg
jo
stos
pop
inc
repnz
xor
testl
jo
shl
cmp
push
js
mov
movsb
fdivs
mov
scas
pop
jno
jo
enter
out
jo
xlat
xor
xor
in
out
jg
inc
mov
rorl
lea
les
mov
mov
iret
sbb
inc
lds
int
test
dec
fmull
jb
mov
push
pushf
psrlw
insl
nop
ret
xor
xchg
jp
sbb
jo
scas
pushw
in
adc
stc
jo
icebp
xor
jno
xchg
ret
jo
add
adc
test
jo
mov
test
xor
mov
push
in
sub
push
dec
jge
mov
insb
jg
jbe,pn
xor
je
lcall
test
and
movhps
mov
push
js
arpl
jo
add
inc
xorb
pusha
fs
or
sub
int
inc
jo
push
adc
fs
inc
testb
jo
cmp
sbb
adc
mov
test
popf
insl
jg
push
icebp
add
xchg
lahf
in
adc
sub
icebp
lret
pop
jo
mov
add
out
testl
inc
mov
movsl
insl
push
or
jo
arpl
cmp
push
xchg
mov
rorl
sub
je
orb
push
xchg
sahf
std
inc
out
test
or
in
pushf
lea
das
dec
push
cmpsl
xorb
push
adc
inc
lock
pop
jge
call
lods
jo
movsb
sahf
inc
fwait
cmpsl
into
mov
gs
and
incb
loop
sysenter
adcb
jle
imul
jo
sahf
icebp
adc
lret
jae
jo
daa
cli
fbld
sbbb
ret
or
push
ja
std
jo
int3
pop
daa
nop
leave
mov
scas
ret
jo
inc
pop
es
bound
pop
pop
pop
hlt
mov
jo
leave
in
sbb
mov
fdivrs
cmp
mov
popa
cmp
dec
lock
int
add
jo
jnp,pt
outsl
sbb
aaa
faddl
jecxz
or
leave
inc
jle
lcall
mov
imul
enter
jo
or
fucomi
call
lods
jo
cs
test
aam
sub
cmp
hlt
or
mov
and
test
pop
jo
sti
and
shll
jmp
shlb
lds
xor
jns
jo
lea
ja
data16
push
mov
and
movnti
ss
dec
cmpsl
adc
add
cmp
test
hlt
sbb
jo
nop
mov
mov
sbb
add
push
jo
js
mov
jnp
icebp
push
ds
shl
xor
lds
rcrl
faddl
cmp
add
out
shrb
inc
scas
dec
xchg
dec
jo
push
add
jo
cltd
popa
into
xor
jae
rcll
data16
inc
jbe
stos
or
addb
test
inc
or
mov
lods
sbbl
aaa
and
pushf
jbe
andb
jb
aaa
negl
push
xchg
mov
pushf
movd
push
dec
jo
pop
xchg
rcll
mov
push
test
fwait
push
push
push
dec
insl
test
mov
hlt
fnsave
dec
rclb
push
jns
sbb
sub
mov
and
pusha
push
dec
in
dec
hlt
paddd
mov
jl
push
test
jo
ss
in
adc
test
jo
lds
shll
insl
mov
pop
fildl
dec
lahf
xorb
cmp
pop
jnp
loope
je
inc
xor
xor
fcmovnb
mov
cmpsb
shrb
xchg
dec
sub
push
sub
add
push
and
push
shrb
jo
mov
add
xor
movsb
mov
adc
dec
cmpsl
mov
xor
sbb
addr16
pop
sub
sbbl
xchg
lds
out
push
jle
push
jp
ds
clc
xor
hlt
or
lock
xchg
pop
fdiv
adcb
inc
aad
dec
sub
orb
push
cmp
xchg
push
add
mov
imul
and
not
roll
je
cmp
dec
filds
add
shrb
add
sub
cli
ds
lcall
push
in
and
add
sbbb
fs
cmp
inc
sub
sub
dec
mov
push
mov
or
int
sahf
inc
jge
jo
adc
out
bound
pop
adc
daa
and
les
push
or
or
add
mov
insb
js
jmp
pop
mov
lret
mov
ret
es
inc
jne
pop
jmp
cwtl
mov
xchg
push
jne
inc
add
shll
in
push
mov
and
sahf
lock
iret
jae
dec
push
stos
in
sub
mov
nop
loopne
jle
subb
leave
jo
push
mov
mov
mov
addb
mov
push
iret
or
pop
lret
enter
cmp
shll
imul
xor
out
stos
jp
jle
push
adc
mov
xchg
cmp
hlt
adc
jg
xchg
loope
push
ja
push
mov
pop
mov
ret
jp
pushf
arpl
bound
or
je
rorl
sub
nop
jne
dec
cltd
insl
add
pcmpgtd
rcll
xchg
fists
and
jge
ret
hlt
maxps
inc
jbe
test
push
daa
nop
xor
pop
jne
push
lcall
xor
gs
mov
cwtl
bound
test
pop
rorl
mov
nop
and
xchg
ja
shl
jo
mov
ret
daa
pavgb
cmp
out
cmc
sub
jg
fdivrp
mov
inc
jo
sub
lds
push
add
lods
jle
iret
jge
cmpsl
jo
stos
nop
mov
mov
aam
loop
lds
repnz
jo
adc
push
rcrl
fnstenv
loop
scas
movl
lock
and
xchg
daa
divb
insb
mov
push
rol
mov
sbb
pop
push
xchg
mov
xchg
lods
mov
adc
add
loop
cmp
push
seta
cmp
leave
test
jo
inc
xor
jge
adc
jo
ror
cmpsb
nop
lods
out
jo
xchg
shll
or
mov
mov
jo
imul
shll
add
lret
adc
push
fs
jmp
int
lods
pop
jo
fnstcw
mov
addb
sub
jb
sbbb
data16
sbb
xchg
mov
mov
int
dec
sbb
js
sub
jb
jle
stos
push
jmp
sarl
mov
movsl
add
imulb
ret
pusha
mov
jo
icebp
add
sbb
and
jo
sti
aad
mov
ret
mov
lds
push
push
push
shl
mov
ret
or
repnz
xor
jmp
mov
push
fstl
adc
les
js
shll
sti
arpl
aas
test
jno
outsl
jo
xor
dec
sti
and
jo
je
cmp
jb
pushf
rcrl
push
add
pop
mov
fmulp
jmp
jo
insb
mov
pop
jo
lds
pop
cwtl
jp
jl
jge
jo
dec
lcall
mov
cmpb
std
in
jge
push
call
mov
xchg
bound
pop
pop
divb
mov
or
jnp
push
jo
loopne,pn
xor
xor
inc
jns
popf
hlt
cs
adc
scas
mov
jo
cmp
jmp
stc
or
xor
lds
inc
xchg
pop
jecxz
mov
lock
jb
or
fistpll
jo
fsubp
dec
loopne
inc
push
xor
leave
push
adc
jo
sbb
sbb
sbb
stos
leave
popa
out
sub
pushf
mov
inc
bound
jecxz
pop
xchg
mov
cmpsl
scas
adcb
out
flds
xchg
jo
mov
xor
sub
push
sarb
test
imul
ret
test
xor
pushf
jo
lahf
icebp
xor
addl
movsb
jb
sub
pusha
nop
xchg
or
frstor
jle
loop
cmp
iret
jp
pop
ret
jo
xchg
mov
rcrb
push
test
sbb
xchg
cmc
xorb
test
add
adcl
pop
inc
stos
jo
cs
dec
scas
lds
xor
outsl
shlb
stc
adc
mov
out
inc
pop
in
jmp
cmc
cmpb
push
dec
xchg
and
jo
popa
int
mov
ret
adc
jae
mov
jo
pop
and
scas
icebp
shrb
push
mov
adc
aaa
movsl
lahf
adcb
pop
xor
jae
push
stc
xchg
bound
jp
push
xchg
sarb
push
sbb
mov
push
shr
movsl
cmp
push
rolb
jge
jo
es
mov
xchg
push
jp
jo
mov
pop
cld
cmp
mov
sub
imul
add
es
jmp
push
mov
js
out
mov
insb
xor
fcmovnbe
popa
push
push
dec
push
sahf
mov
icebp
fdivl
js
ret
adc
inc
fidivs
dec
loope
stos
cs
dec
mov
mov
sbb
xchg
jo
arpl
stos
pop
jo
hlt
cs
ret
push
mov
lods
add
mov
aas
and
shll
pop
roll
dec
sbb
mov
out
lea
and
jg
shrl
gs
inc
mov
fidivl
fidivrs
aaa
out
jl
jo
rorl
xor
test
leave
sahf
xor
enter
hlt
cwtl
inc
jp
je
jo
loop
cmp
mov
inc
inc
cmpsl
lock
adc
pushf
fisttpl
jo
loopne
mov
or
push
dec
fwait
addr16
dec
aaa
insb
sub
adc
cmp
cmp
sbb
sbb
and
mov
outsl
lahf
test
das
mov
in
push
rcrb
add
add
cwtl
jg
xchg
pop
jns
fstl
test
mov
ret
adc
jo
je
pushf
aaa
sub
mov
fisttpll
ljmp
sub
mov
dec
push
xchg
cltd
sbb
inc
cmp
pop
sub
adc
mov
jo
mov
aas
jo
ds
popf
sti
mov
imul
add
mov
lahf
mov
xchg
js
scas
call
movsb
ja
cmp
loopne
dec
jo
add
lds
mov
icebp
cld
xor
jp
push
mov
mov
stc
jo
gs
adc
ret
dec
popl
sub
jle
or
sub
pop
mov
js
js
iret
and
jo
sbb
daa
push
xlat
insl
push
sbb
fcmovb
mov
jne
pop
ds
addr16
les
popa
sti
nop
nop
in
mov
xor
jne
dec
mov
out
push
jle
ss
lods
jo
mul
sub
lahf
cmpsb
jg
xchg
mov
and
pushf
lds
cmp
sti
int
mov
std
mov
mov
enter
xor
addr16
gs
push
in
jg
shrb
push
add
lret
hlt
out
jo
fstp
dec
inc
add
sub
ret
std
pop
cmp
lds
jo
outsb
xchg
push
xchg
mov
dec
mov
lock
push
sbb
je
scas
jbe
and
movsb
push
jns
mov
inc
cmp
jo
sti
out
or
bound
cltd
scas
fldl
push
sub
insl
inc
aam
adc
aaa
mov
cli
daa
repz
jne
jo
cmp
fnstcw
popl
mov
sub
into
shrb
push
and
lahf
sbb
xor
or
and
aad
int3
subb
or
jns
orb
jmp
adc
stos
adc
fadd
inc
loope
jo
sbb
ret
pop
add
jo
vshufps
call
sbb
push
xchg
push
mov
clc
jmp
jo
popa
pushf
jns
cmpsb
imul
loopne
nop
test
js
add
cltd
inc
mov
xchg
jbe
cmc
or
dec
out
jmp
xchg
lock
andl
scas
outsl
inc
es
pop
ja
jno
wbinvd
xor
sbb
cmp
in
adc
mov
cli
enter
jne
jg
push
lds
sub
adc
stos
je
and
xlat
sub
insl
hlt
scas
ret
jo
pushf
dec
xor
cmp
pusha
mov
dec
test
add
jmp
pop
mov
fadd
inc
push
push
std
add
sub
lds
pop
mov
arpl
mov
js
fs
sarl
cs
cmp
ja
and
lea
jo
lds
pop
sub
jns
and
in
insl
and
jo
je
roll
dec
xor
mov
push
jne
leave
and
push
test
pusha
in
fs
cmp
xchg
pop
test
nop
cmc
sub
or
xcrypt-cfb
cmpsl
and
mov
sub
mov
push
push
in
mov
push
int
sbb
out
test
jo
sub
adc
dec
push
in
lods
push
lcall
test
xlat
mov
and
repnz
xor
jo
outsb
lcall
mov
das
out
adc
jo
ret
jbe
and
and
int3
cmp
mov
lods
vmread
mov
loopne
jae
jo
inc
rclb
lds
lods
nop
lock
mov
ja
scas
inc
paddd
xchg
mov
insb
adc
add
bound
mov
mov
push
cli
cmpsb
shlb
jbe
sbb
sub
out
push
nop
xchg
jo
sarl
jnp
push
push
jo
cmp
sbb
push
les
lds
ret
jmp
or
mov
gs
sbb
pop
out
fildl
jns
jo
adc
or
xor
lea
cmp
xor
scas
cli
mov
and
cmp
push
jle
fsubrl
xchg
inc
repz
mov
mov
out
cmpsb
nop
loopne
mov
cmp
jo
xorb
xchg
inc
mov
insb
adc
rol
and
jo
jmp
je
jo
dec
repnz
outsl
test
scas
sysexit
stos
lds
test
ficoms
clc
pop
add
mov
enter
mov
sub
xorl
loop
xorb
push
idivl
popf
push
jo
push
and
jo
outsb
int
shll
decb
inc
imul
jmp
lods
jns
and
mov
jo
repz
add
jmp
test
and
mov
jo
nop
gs
std
mov
jo
les
sbb
inc
jo
mov
sub
std
add
ljmp
leave
insb
js
les
test
fldpi
dec
xor
icebp
ret
jno
lds
mov
roll
addl
mov
gs
movsb
loopne
dec
or
daa
repnz
or
or
ja
add
add
push
js
jae
xlat
push
mov
or
xor
dec
jbe
jp
or
int
push
mov
add
arpl
nop
icebp
int
or
cmp
sub
xor
mov
icebp
js
pusha
xchg
push
push
mov
sbb
insb
call
btr
ljmp
xor
jo
xor
jo
roll
popa
movsb
loope
jo
outsl
mov
lds
arpl
xor
inc
hlt
or
movsb
jae
jo
fwait
jecxz
xchg
or
cld
xor
jo
int
out
mov
inc
cmp
xchg
mov
sbbl
xor
or
mov
lea
dec
jnp
add
jns
jo
insl
add
pop
shll
mov
cs
js
or
xlat
mov
test
push
insl
loopne
xchg
jo
mov
in
push
or
and
mov
mov
fs
cmp
pop
dec
ja
jecxz
btr
push
dec
mov
icebp
jae
pop
mov
fstps
fldt
xor
push
jl
or
out
mov
add
cltd
aaa
ret
inc
fsubp
pop
insl
test
sbb
pop
cmp
cwtl
fbstp
sarb
push
lock
sbbb
adc
mov
jp
jo
aam
ret
jle
sahf
jecxz
push
rcrb
mov
fdivrs
fstpl
notl
adcb
adc
sub
lock
jo
pop
out
dec
fimull
loop
mov
imull
pop
ret
lock
call
lahf
jne
fwait
adc
mov
aam
sbb
xchg
fildll
adc
dec
pop
and
fidivl
mov
bound
ret
das
loop
jo
push
scas
dec
mov
jmp
jp
les
mov
jle
or
repz
call
jl
and
or
adc
fwait
clc
insb
push
pusha
jo
lods
mov
dec
jo
dec
inc
icebp
das
inc
sub
or
mov
jecxz
call
add
out
push
bound
jo
adc
jb
addr16
xchg
and
jb
xchg
push
jecxz
sbb
ret
sbb
mov
sub
hlt
add
pop
push
daa
cli
xor
cwtl
xchg
add
push
repnz
cmp
hlt
fs
dec
jo
stos
rcr
jno
inc
xor
mov
pop
push
mov
or
jmp
inc
les
xchg
xor
push
jo
add
pop
jo
jb
lds
or
jo
mov
add
repnz
fld
cli
imul
jo
mov
std
push
push
ret
aad
jl
scas
mov
push
jo
pop
test
in
in
leave
dec
jno
pop
ss
lret
popa
jo
pavgw
fstpt
mov
dec
push
sarl
add
ret
leave
mov
test
gs
adc
pusha
and
sti
add
sbb
push
xorb
es
nop
fnsave
gs
jne
testl
loopne
vmread
test
rol
ljmp
lahf
jo
mov
lock
push
andb
jl
jno
in
int
xor
jge
and
jo
mov
ret
mov
jae
add
mov
out
mov
mov
leave
jl
sbb
sbb
sub
lea
jno
shlb
jl
jle
sub
push
roll
pop
clc
scas
pop
jo
insl
adc
add
inc
sbb
ret
fsubrs
lret
jns
rol
pop
aam
sub
jo
sahf
cmp
stos
jb
scas
ret
cmp
add
clc
push
hlt
ret
jmp
insl
mov
jo
shll
jo
fidivrs
mov
int
mov
jo
lods
cmp
add
xchg
jle
fstl
orb
push
std
loopne
test
ret
cld
cmpsl
shl
int3
cli
rcrb
js
xchg
pop
adc
pop
mov
mov
xorl
shlb
push
ret
inc
cli
fmul
push
mov
outsb
popf
fisubs
js
std
jo
cmpsb
mov
dec
nop
iret
ror
imul
sti
xor
lds
sub
fcmovne
cmpsb
pop
mov
jo
fldl
shll
jo
call
xorl
or
mov
into
jo
jge
mov
adc
xchg
pop
jo
or
jo
mov
in
jnp
mov
push
out
or
and
mov
dec
mov
cltd
sbb
jp
js
cli
push
pushl
popf
call
jo,pn
push
mov
jo
mov
aaa
das
push
fnstenv
shll
xorl
jae
sub
xchg
jo
xchg
mov
jo
andb
jo
pextrw
mov
mov
push
cli
or
jbe
xchg
pop
xorb
mov
pop
dec
pop
mov
push
jmp
pusha
call
imul
nop
mov
inc
pop
shl
cmc
in
pop
jo
mov
cmp
or
mov
orb
popa
sub
aad
jo
lahf
mov
or
lock
add
ss
outsb
repnz
clc
mov
sub
xchg
add
xchg
scas
jp
std
adc
aad
int
jo
push
mov
mov
xchg
or
scas
jg
incb
iret
dec
loop
dec
or
adc
add
test
jno
jo
push
fistpll
and
mov
imul
lods
shl
jnp
xchg
std
mov
mov
in
push
cmpsb
lcall
es
xor
jo
jp
lahf
out
jo
xchg
push
and
outsl
in
jmp
jnp
jle
lret
pop
mov
sbb
pop
lret
jo
cmc
or
jmp
pushf
ret
jp
js
out
and
leave
and
add
fidivs
pop
or
and
fldenv
xorb
in
outsb
jns
loope
jo
imul
das
outsl
iret
push
lock
into
push
loop
je
ret
push
mov
inc
mov
push
mov
sub
hlt
push
pop
nop
test
or
repnz
and
rclb
scas
jo
neg
push
loopne
sbb
out
stos
mov
adc
nop
mov
es
addr16
mov
inc
sbb
hlt
push
cmp
stc
jmp
pop
xor
add
rorl
andl
inc
test
aad
fdivl
sbb
rorl
clc
aas
and
or
and
cli
inc
rclb
fs
fiaddl
loope
jo
adc
fldpi
inc
bound
comiss
insl
shl
pop
cs
jl
lret
jp
sbb
xor
jo
aas
cmc
pop
in
mov
mov
mov
js
rorb
icebp
cmp
and
jo
push
loope
in
fdivrs
ret
testl
andl
jo
lds
jo
sub
jo
mov
inc
sub
loope
aas
dec
test
scas
aad
push
faddl
lods
data16
push
popf
jge
mov
or
fs
decl
out
ret
push
in
fistpl
jo
mov
gs
test
inc
adc
test
aas
les
paddsw
insl
xchg
movl
lea
jo
xor
and
jo
dec
sbb
lret
fs
int3
sub
loope
jo
das
inc
imul
sahf
hlt
jp
push
push
jl,pn
pop
mov
dec
fwait
shlb
cmp
mov
mov
and
mov
dec
inc
jo
cli
or
mov
mov
sub
and
jo
mov
cmpsb
hlt
jmp
repnz
jo
xchg
shl
mov
mov
enter
jbe
addb
xor
jo
rcrb
shlb
enter
dec
cmp
lock
mov
sbb
or
jp
push
jne
jo
mulb
scas
lock
out
push
subb
push
sub
xor
push
inc
in
mov
mov
rorb
pop
fs
cmp
push
pop
out
lods
cmp
movsl
jo
dec
pop
je
xor
xchg
jmp
inc
adc
mov
insl
sar
ret
js
dec
mov
jae
xchg
lock
dec
push
lds
jmp
repz
xchg
mov
jns
ja
mov
std
jo
pop
mov
jne
push
jo
lock
shll
sbb
loop
jo
mov
inc
jecxz
cmp
in
shlb
js
movsl
pop
fisubrl
insb
sub
push
adc
mov
jo
add
adc
iret
jo
jmp
sbb
adc
pusha
pushf
sub
jo
sbb
aaa
jecxz
push
psrad
adc
in
jnp
inc
or
sub
mov
call
out
pop
jo
aam
in
cmp
fmul
cmp
loope
jge
jb
xor
sbb
int3
sbbb
xchg
fcompl
mov
fdivs
jo
ffree
lods
imul
jmp
loop
pop
adc
pop
cwtl
cmp
mov
das
jo
stos
mov
push
or
adc
push
sbb
push
sldt
and
sahf
aaa
aam
adc
jo
outsl
mov
out
xor
push
adc
xchg
push
int
jo
cwtl
pop
addr16
inc
dec
and
or
cmp
mov
sub
cmp
shlb
cmp
aad
mov
xor
scas
fisttps
js
fs
jae
test
adc
mov
jmp
push
mov
das
and
push
xchg
cmp
xor
cmp
mov
push
mov
jo
sti
xor
xchg
jnp
pushf
or
pop
ret
pusha
cmp
imul
mov
or
call
mov
jmp
shrl
cwtl
pushf
jo
rcll
jle
mov
jo
mov
cmc
cmpl
bound
jmp
outsb
mov
inc
addr16
or
repnz
daa
lea
loop
sbb
adc
jo
lds
shlb
pop
addb
jns
xchg
and
pop
xchg
push
mov
mov
mov
or
pusha
cmc
adc
je
push
daa
adc
mov
ret
xchg
cltd
mov
pop
lea
orl
pop
int
adc
std
add
adc
sbb
test
jo
les
imul
mov
pop
jo
lds
jecxz
out
bound
pop
jo
cmpsl
insb
mov
xor
insl
xchg
lret
or
int
dec
mov
jle
and
fcmovbe
rcll
cwtl
mov
add
nop
pop
mov
ja
inc
xorb
gs
jmp
shll
ret
pop
adc
jo
ss
scas
xor
xchg
and
jo
inc
insb
sbb
cmp
jo
mov
inc
bound
push
and
dec
xchg
jo
jg
jno
xchg
jae
frstor
jo
test
sti
lds
outsb
mov
icebp
orl
shll
jbe
pop
es
bound
mov
mov
sub
ss
jnp
cld
sbbb
adc
jo
clc
or
stos
loop
sub
xchg
adc
add
jo
and
insb
push
and
push
dec
shll
rolb
mov
sbb
sbb
sbb
jo
sti
mov
xchg
sbb
aaa
pop
test
xor
cmp
rcll
or
jo
imul
div
scas
or
ret
mov
sbb
nop
mov
inc
ja
or
js
cwtl
and
jne
push
out
lds
arpl
movsb
jmp
xchg
ror
data16
jo
sarb
push
jo
pop
or
fmull
push
pop
jo
cld
xchg
xchg
lret
ja
lock
inc
outsb
xchg
js
out
jo
xlat
or
shlb
ror
sbb
mov
gs
sub
aad
outsl
jecxz
sti
ret
jo
or
pop
cltd
and
add
push
repz
in
int
dec
cmp
sti
and
jae
mov
fcompp
addb
rclb
pop
jo
push
push
mov
orl
mov
fs
inc
and
fsub
lock
push
sbb
int
push
adcl
sub
imul
jo
movsl
jle
movsb
inc
fmulp
jo
dec
xchg
jo
and
stos
xchg
loope
add
int
test
inc
jo
out
pop
mov
push
xchg
lods
jb
mov
jo
xchg
add
mov
subl
lds
add
in
and
decl
mov
int3
and
jo
in
push
stos
jne
das
add
inc
mov
cmp
leave
mov
nop
shlb
jp
lods
inc
jo
and
jo
dec
jns
inc
mov
xor
aaa
and
pop
mov
sbb
push
mov
or
inc
lock
imul
cmpsl
in
dec
or
jl
or
std
jo
and
cld
mov
jo
push
sbb
loop
mov
rcr
jmp
jbe
jo
filds
lret
ficoms
mov
rol
dec
repnz
dec
jo
jae
and
sbb
cmpsb
test
leave
fsubrl
mov
jo
lea
les
mull
sbb
push
mov
mov
push
jne
nop
pop
into
dec
stos
add
push
jg
js
insb
jo
mov
loope
xchg
xor
icebp
in
sub
push
shll
je
sbb
in
lds
sub
xchg
lret
shlb
pop
cmp
or
mov
jp
jmp
or
xor
jno
jo
insl
ret
outsb
rcrl
mov
jne
pop
cmp
mov
xor
dec
std
jo
jnp
int3
inc
into
mov
sbb
add
subb
shrb
bound
adc
test
std
mov
adc
jge
xchg
xchg
pop
jo
shl
imul
adc
dec
add
fstpt
incl
lds
nop
jbe
ja
fstps
int3
adc
add
mov
andb
dec
mov
or
push
jo
daa
push
xchg
mov
mov
jo
nop
enter
popf
int3
es
pop
jo
push
in
mov
js
loopne
js
inc
mov
mov
fidivs
cmpsb
pop
lds
pop
xchg
mov
mov
pushf
mov
pop
iret
xor
fisubl
fnstenv
ret
sub
test
sbb
lahf
data16
pop
jo
lock
adc
cli
jnp
cmp
dec
cmp
fcmovnbe
dec
insl
fnstenv
mov
jo
inc
jmp
daa
sub
xor
test
mov
xor
mov
jb
jo
testl
push
aaa
adc
cmp
jo
mov
xor
leave
mov
daa
add
std
sub
mov
inc
cltd
mov
les
xchg
sbb
int
test
hlt
inc
add
mov
shll
in
dec
jo
sbb
sti
and
cmpsl
jns
dec
mov
xor
jmp
add
std
mov
fsubl
jo
lahf
lds
lcall
subb
test
pop
cli
out
jl
xor
add
jo
cmp
aad
fs
bound
les
or
mov
js
fistl
pop
inc
je
mov
dec
leave
adc
cmp
stos
add
fwait
ja
mov
inc
mov
dec
push
repnz
test
call
ja
rolb
mov
and
push
andb
jg
stc
adc
in
inc
loope
dec
jo
sub
les
pshufw
sub
lds
add
lret
hlt
jge
jo
jno
add
adc
les
mov
jo
cmc
fldenv
jne
lods
out
lret
cvtps2pi
or
or
push
mov
arpl
push
push
shr
into
test
jo
pop
inc
sbb
mov
mov
mov
loope
jo
add
fidivs
insb
pop
xorl
jg
mov
and
popf
dec
les
in
inc
pop
inc
add
jo
jns
mov
xchg
jo
loope
out
out
outsb
jo
dec
ret
leave
or
fnstenv
mov
push
push
push
and
mov
aad
adc
jnp
and
pushl
xchg
ljmp
leave
mov
mov
jnp
imul
jo
cmp
sbb
sub
push
aad
jo
push
mov
mov
jo,pn
and
or
xchg
push
inc
cld
jl
fs
push
out
cmp
mov
fildll
nop
hlt
roll
inc
xchg
ja
js
dec
test
or
icebp
cmp
fidivs
xchg
mov
jo
sub
jmp
cmp
jo
js
int
lcall
pop
add
adc
add
loop
ja
ret
test
mov
pop
mov
pop
jl
xor
jmp
jo
iret
add
push
push
clc
jo
xchg
adc
out
ffree
into
rcrb
js
jbe
xchg
shrl
mov
inc
cwtl
repz
insb
ret
push
in
and
out
sbbl
jmp
mov
mov
inc
adc
in
jne
add
aam
shll
xor
jp
mov
or
sbbb
add
sahf
pop
hlt
in
pop
push
lods
jo
jnp
mov
jns
lock
stc
test
sub
mov
pop
xlat
test
add
jo
mov
inc
xor
ja
push
mov
xor
jo
pop
push
sub
adc
xchg
add
jo
cmp
sub
cmp
mov
in
jg
bound
and
data16
xor
ds
push
xchg
sub
jp
pop
sbb
adc
jo
cmp
jecxz
fcmovnu
and
or
pop
jo
inc
add
aas
dec
jo
push
cwtl
and
idivl
addb
iret
or
adc
or
scas
push
sahf
jnp
jo
add
push
cmp
jp
dec
leave
jl
mov
xor
sbb
in
jo
sti
inc
jp
rorl
aas
mov
jo
inc
xchg
movsl
push
incl
sarb
lcall
pop
lret
test
inc
pop
jg
ret
and
xorb
xor
jo
push
inc
xor
push
pop
mov
shrl
inc
call
lds
psubd
mov
mov
mov
mov
lahf
mov
mov
out
in
daa
mov
jo
mov
mov
cmpsl
xchg
int
jg
nop
cmp
inc
roll
mov
inc
push
daa
lahf
in
shll
sub
inc
ja
jo
jbe
fbstp
xchg
lods
xchg
inc
push
popf
inc
jle
flds
jge
jno
jg
les
loope
in
nop
or
stc
addb
jb
cmp
xor
hlt
shll
arpl
mov
dec
lds
xchg
jmp
xor
in
ds
int
jo
push
popa
scas
xchg
shlb
adc
xchg
and
pop
mov
mov
shl
pop
jo
push
pushf
or
mov
push
xchg
push
iret
sbb
shll
scas
jo
mov
es
je
arpl
les
push
mov
andb
pop
lds
js
stos
daa
int
sahf
addr16
ja
mov
fwait
push
add
pop
int3
jo
jb
addl
es
lea
xchg
jo
ret
sbbl
cmp
pop
add
lds
mov
dec
lock
bound
or
jg
mov
shll
ss
pop
xchg
sbb
mov
jo
xchg
jge
shll
jnp
fwait
inc
and
dec
adcl
jbe
mov
jo
dec
call
data16
dec
mov
shl
xor
inc
mov
and
test
and
data16
sub
lods
icebp
stos
adc
inc
add
pop
repnz
loope
jne
cs
roll
and
or
jo
cmc
sbb
adc
add
jo
adc
lds
xor
fs
pushf
int
jns
test
add
clc
and
adc
push
jo
rcr
mov
add
jo
jne
sub
in
fcomp
add
xorl
jo
sbbl
or
mov
adc
cmp
push
jbe
je
pop
pop
mov
incl
mov
mov
mov
cmp
add
sub
out
leave
push
in
pop
mov
jo
mov
jmp
mov
jo
jl
dec
hlt
cmp
jo
pusha
sbb
jge
nop
rol
loop
sub
ret
in
sarb
mov
inc
jo
pop
mov
rcl
enter
xchg
push
mov
cmp
mov
hlt
cmp
nop
ret
push
mov
ja
lock
nopl
push
cmp
push
imul
sub
fists
push
out
jo
and
cld
out
rol
subl
std
test
ret
jo
push
clc
pop
cmc
mov
dec
jo
fimuls
sub
jo
add
ds
fwait
cmc
test
jmp
js
scas
mov
lods
xor
xchg
or
pop
stc
inc
push
jo
js
loopne
push
mov
call
enter
cmc
mov
nop
lods
pusha
xchg
jg
gs
mov
xor
cmp
mov
pop
and
mov
jo
shr
or
jo
mov
shrb
mov
adc
push
ds
mov
mov
stos
int
jo
out
push
les
jo
jp
mov
nop
in
add
fiadds
ljmp
or
sub
jo
mov
lock
out
rolb
jo
arpl
and
mov
js
or
shll
pop
lcall
mov
mov
xchg
js
outsl
mov
push
sub
xor
push
loope
outsb
push
mov
jbe
lds
sbb
pop
or
and
mov
jo
ljmp
jns
shll
dec
mov
jge
fldl
inc
pop
fxam
adc
push
vpunpckldq
int3
arpl
cwtl
xor
fs
insl
sub
es
dec
cmp
loopne
jo
pop
xor
dec
stc
push
shll
arpl
movb
inc
adc
out
push
mov
jo
jns
ret
xchg
in
jo
add
testl
arpl
scas
sub
sbb
mov
adc
pop
sti
or
lret
in
xchg
dec
fcoms
popa
mov
js
dec
cmp
jo
orb
sub
shrb
enter
push
xor
xorb
shlb
shll
out
cmp
add
iret
push
inc
mov
push
fnsave
dec
ja
movsb
jge
xchg
nop
dec
xchg
repnz
push
inc
jo
mov
dec
aas
les
nop
xor
adc
outsl
dec
cld
ljmp
daa
addr16
and
cwtl
jo
ss
lea
fmul
jo
outsb
pop
xor
aas
cmp
cltd
or
pop
sbb
jp
jmp
jo
leave
imul
mov
jo
or
cmpl
scas
mov
icebp
mov
jo
or
lret
mov
jo
lahf
in
xchg
pop
lods
dec
rcr
add
mov
mov
insb
mov
nop
aas
and
inc
mov
ja
sub
pmaddwd
repnz
jle
call
nop
push
jle
repz
push
mov
bound
cs
and
movsl
aam
xor
cmp
push
fldenv
xor
jo
inc
xchg
push
les
loope
idivb
lret
sahf
jo
ds
mov
jo
adc
cmp
xor
ror
test
aam
sbb
lods
or
jp
inc
lock
xor
adc
jae
xor
xor
fs
adc
jo
adc
lock
xchg
jo
lds
sahf
dec
pusha
jecxz
jo
pop
leave
push
subl
add
add
sbb
bound
insb
xchg
lea
pop
jmp
inc
cs
dec
sahf
lcall
das
out
imul
je
incl
inc
xor
xchg
lea
cmp
mov
sbb
adcb
ja
arpl
lods
push
sbb
xor
pop
popf
stc
pop
std
fdivp
movl
aad
mov
jo
call
aas
iret
pop
pop
mov
addr16
add
fldl
jo
test
mov
inc
sarl
jo
int3
leave
pop
fisttps
mov
xor
inc
jp
lods
bound
pop
cs
in
add
jo
shl
fnsave
imul
lds
push
enter
cmpsl
lock
idivb
mov
cmp
rorl
or
mov
inc
ret
add
nop
xor
ja
xor
push
lcall
repz
jmp
ds
jo
push
mov
lock
jo
loopne
jp
sbb
cmpsb
ja
roll
stos
movsl
jnp
lock
mov
adc
push
add
jo
jmp
jge
addps
xor
fs
dec
popw
push
adc
cld
je
mov
test
mov
shrb
jb
lcall
jecxz
dec
loopne
imul
adc
cmpsb
mov
hlt
add
push
jo
xor
les
int
sarb
mov
xor
das
xchg
std
push
dec
pop
dec
ret
mov
fstps
mov
sbb
jo
movq
add
push
loop
and
dec
mov
neg
lock
jo
sub
rol
call
out
jb
jo
pop
lock
sti
leave
mov
adc
and
jle
push
add
popf
bound
jo
and
pop
loope
out
jnp
stc
inc
mov
xor
sahf
cmp
or
sarl
iret
sbb
je
inc
xor
mov
into
clc
inc
inc
xchg
cmpsb
jl
jo
sbb
shrb
loop
jo
aam
imul
jne
enter
xor
leave
and
jl
pop
es
mov
jecxz
jl
das
lret
adc
jo
popf
shrl
cmp
push
pop
cli
push
popa
or
gs
pop
js
or
inc
sbb
or
lds
aam
push
fs
jmp
inc
jb
cmc
add
rcr
jo
iret
push
lfs
jne
inc
in
pop
fnstenv
repnz
push
jle
jo
add
lret
inc
sub
int
and
mov
xlat
dec
daa
or
jp
xchg
or
js
jmp
push
sahf
jae
je
das
iret
cmpsb
icebp
adcb
loopne
inc
xlat
mov
pushf
lds
ret
aad
call
int
popa
cwtl
mov
loopne
and
fisttpll
inc
xchg
jo
movsl
push
in
les
jns
scas
pop
jb
lds
mov
xchg
jle
pushf
xor
or
iret
jo
aad
outsb
cmpsl
mov
jmp
out
test
out
cmp
inc
imul
roll
and
push
jo
jbe
sub
lock
les
sbb
mov
pshufw
jecxz
xor
inc
das
jo
in
lds
mov
cli
jo
pop
std
mov
js
sbb
or
aas
out
jbe
mov
jae
xchg
pop
adc
jo
jg
dec
xchg
int
adc
pop
lcall
fimull
push
jae
push
jo
popf
popa
std
insb
decb
xor
cmp
pop
sbb
stos
push
jno
xorl
mov
push
mov
les
ret
jo
daa
stos
push
push
rolb
sub
xchg
adc
cltd
jbe
dec
popf
sub
xor
adc
test
insb
jo
inc
cmp
push
mov
jle
arpl
sbb
das
movsb
loope
ss
nop
popl
dec
lahf
jne
push
inc
adc
out
and
xchg
push
xchg
dec
pop
pop
push
jg
bound
jge
jbe
loope
dec
inc
jae
push
jo
mov
xor
ret
jo
jnp
push
add
cmp
mov
aaa
pop
fmul
fbstp
aam
mov
inc
or
jo
mov
cmp
stos
add
sahf
fidivl
mov
mov
nop
lods
and
iret
cmp
sbb
bound
mov
cmp
ds
inc
pop
out
jo
pop
sbb
jmp
cwtl
xchg
jo
sarl
ret
icebp
inc
in
jo
inc
movsl
data16
pop
pushf
jo
mov
leave
lds
in
adc
out
jo
xor
mov
xchg
xchg
inc
nop
and
cld
repz
mov
or
scas
or
test
ret
push
dec
xchg
addr16
bound
je
push
lds
lods
mov
mov
pop
pop
ret
jo
dec
cwtl
jge
pushf
push
xchg
aas
stc
cmp
aad
or
and
roll
int
jo
push
loopne
int3
mov
cmpl
or
dec
sbb
aas
sbb
add
les
push
filds
cmp
icebp
shll
add
cli
ljmp
pop
hlt
sub
pop
and
mov
test
sbb
jo
adc
mov
push
adc
leave
lret
jmp
into
mov
xchg
dec
test
and
in
xchg
out
push
mov
je
lcall
in
nop
rcr
aam
cli
jae
lds
xchg
in
mov
mov
push
inc
nop
clc
das
cltd
xchg
ja
cmp
mov
pop
loope
lock
jecxz
or
jo
adc
adc
and
jle
aad
rorb
mov
adc
add
fcoms
jo
repnz
push
enter
xchg
cmpsl
jg
sub
clc
inc
mov
jecxz
cmpsl
imul
fidivl
call
adc
dec
push
fs
xor
es
push
in
jo
jecxz
cld
pop
or
push
jo
add
lds
jmp
stos
lret
xchg
gs
push
jb,pt
leave
shll
out
ljmp
pause
mov
mov
fistl
jno
lods
adc
add
xorl
xchg
mov
in
pop
inc
inc
dec
jo
fbld
out
xchg
add
xor
xchg
xor
jne
loope
push
pop
fiaddl
jo
rol
adc
lds
push
dec
mov
push
cmc
jmpw
leave
in
std
bswap
sti
or
fs
es
sbb
int
sub
jo
sub
mov
xor
mov
adc
and
and
les
loop
mov
mov
repnz
pop
nop
das
cmc
leave
jo
lods
pop
mov
es
xorb
and
mov
mov
lds
nop
push
mov
sub
ja
pop
push
pusha
push
mov
je
fwait
movsb
das
lock
inc
lahf
sub
in
push
dec
std
adc
cs
sub
pop
cmp
and
push
cmc
popa
sub
fdivr
push
lret
xchg
jmp
add
repz
das
jo
outsl
add
push
fdivl
and
ja
call
jle
cmovnp
das
jge
mov
lock
xor
jo
sti
lret
cmp
jae
mov
mov
ret
jo
ret
add
jmp
mov
add
in
xchg
jo
in
aam
pop
cmpsl
inc
jle
jp
push
sar
xor
push
jo
je
cs
cwtl
push
scas
adcb
sbb
cmp
dec
mov
and
stos
test
imul
pushf
jb
jo
adc
lea
shl
mov
jle
mov
popf
jo
cmp
in
pop
in
jo
shr
mov
jo
sbb
xor
nop
ds
scas
out
adc
add
mov
in
mov
leave
xor
pop
pop
aas
loope
jo
into
adcl
jl
and
leave
ljmp
jo
cltd
sbb
jg
icebp
mov
jp
mov
scas
push
lcall
adc
mov
mov
into
mov
nop
mov
xchg
shll
jno
fldenv
push
cld
pusha
aad
outsb
pushf
bound
push
aaa
pop
lods
cmp
push
sahf
clc
adc
fists
pop
jo
mov
cs
sbb
jle
push
mov
jle
jo
es
das
lock
pop
lds
add
cwtl
sub
push
ret
xor
mov
test
jo
aam
jle
out
or
cmpsb
xchg
xchg
mulb
aad
mov
mov
xchg
sarl
cmp
inc
rolb
test
push
scas
fisubs
inc
je
dec
dec
fbstp
mov
shll
out
aas
sarl
cli
mov
add
int
mov
cmp
nop
outsb
ret
dec
and
je
push
mov
mov
push
xorl
xchg
sub
jo
out
stc
and
or
sbb
fbstp
fs
nop
mov
test
fldenv
insl
imul
icebp
nop
jns
in
in
jo
add
add
jo
xlat
icebp
mov
sub
cmp
jo
in
dec
push
cmpsb
into
repnz
jmp
ret
ja
jo
and
test
mov
js
shll
mov
mov
inc
fst
add
into
jo
dec
add
xchg
test
jo
push
pop
mov
xchg
rorb
repnz
ret
push
pop
mov
or
jo
rorl
mov
aas
mov
add
imul
pushf
pusha
testb
cld
jo
inc
mov
orb
sub
outsb
push
test
repz
push
jo
cmc
ds
adc
or
mov
or
pop
jo
std
imul
adc
add
pop
fiadds
movsb
es
jb
mov
sub
push
and
jmp
push
push
sbb
test
fistl
and
subl
nop
ret
int
dec
xchg
iret
jo
rolb
pop
lods
fbld
sbb
js
or
cvtdq2ps
pop
mov
ss
mov
jo
lcall
mov
mov
xchg
test
out
insl
push
or
es
mov
jo
pop
xchg
out
dec
adcl
movsl
addr16
nop
subb
stos
push
ja
sub
jo
cltd
adc
or
sub
jo
adc
dec
cmc
in
imul
sarb
mov
leave
call
add
test
jo
xorb
push
ret
xchg
push
xlat
fistpll
pop
xchg
add
push
cmp
adc
mov
or
push
jo
adc
ret
rorl
movsl
mov
lods
mov
mov
xor
push
inc
mov
popf
mov
rcr
imul
out
mov
scas
rcrl
daa
aas
enter
push
jns
jo
cmp
mov
mov
rcrb
mov
roll
scas
mov
add
push
pusha
xor
or
in
cmc
mov
pop
clc
or
add
sbb
pop
es
dec
cmpb
jo
push
xor
icebp
jmp
ret
prefetch
mov
rol
leave
faddp
daa
jo
into
pop
cmp
pop
mov
paddd
ret
data16
roll
mov
sti
arpl
bound
pop
xchg
shlb
mov
inc
xchg
js
iret
jo
jno
leave
add
jne
xor
push
and
cltd
cli
lods
enter
sbb
cwtl
addb
jo
sub
out
mov
jo
cltd
xor
mov
shll
int3
icebp
aam
repnz
shlb
dec
stos
inc
js
add
nop
or
into
and
insl
sub
jo
sbb
mull
scas
out
movsb
add
aas
leave
shll
mov
add
std
fstps
and
push
jo
insb
pusha
mov
jo
aam
xchg
test
or
pop
stc
fxrstor
lea
mov
jo
push
fwait
ljmp
xchg
adc
aam
int
adc
xor
jo
cmc
les
addr16
add
jns
inc
push
fs
mov
xchg
inc
lret
je
aam
sub
and
dec
xor
ja
cmpsl
mov
shrb
jno
xchg
lret
xchg
mov
add
in
std
es
inc
sarl
fnstcw
adc
inc
ret
and
lret
push
imulb
jo
leave
sub
mov
sbbb
fs
iret
das
sub
and
test
jo
out
push
cmc
sahf
es
dec
nop
sub
in
jno
les
idiv
xchg
jo
mov
lea
inc
inc
push
lods
dec
dec
mov
aad
bound
in
push
mov
cmp
pop
nop
hlt
or
cmp
leave
sub
jmp
das
sbb
cmpsb
ss
adc
psubq
jo
and
jecxz
fildll
sub
dec
popa
cmpsb
nop
je
jb
fldenv
lcall
adc
jp
aaa
cld
xor
cli
into
jo
adc
sub
pop
mov
add
sub
scas
push
xorb
inc
xlat
mov
rolb
mov
fbstp
leave
imul
in
jo
cmc
mov
add
data16
sub
lds
push
mov
icebp
insb
mov
adc
add
pop
xor
sbb
ret
adc
lret
repnz
pop
push
and
insb
lcall
jo
mov
imul
xchg
push
sbb
xchg
bound
push
jne
and
popfw
pop
cmpsl
jl
jo
js
lret
lea
sbb
cmpsb
mov
popf
addb
mov
and
mov
pop
int
jp
jo
cld
sub
sub
xchg
sub
ljmp
enter
jo
imul
dec
fidivrs
jo
sbb
repz
in
lret
aad
loope
jo
test
cmc
jbe
int
and
xor
jns
xchg
sub
rorb
outsb
cwtl
orb
adc
in
sbb
out
jo
or
js
xor
xor
inc
insb
push
js
lock
push
pop
sbb
jecxz
gs
jno
push
jo
movsb
push
lds
pop
or
out
push
jae
jecxz
jp
dec
shrb
sbbb
pop
lret
jo
and
int3
ret
js
scas
jne
lea
push
rolb
femms
jg
shrb
or
jmp
es
push
das
pop
setno
and
js
sub
out
jo
mov
pop
adc
jge
ret
xchg
jo
xor
add
mov
ret
jle
jmp
jae
dec
enter
push
or
cwtl
xchg
push
push
movsl
test
loope
fists
sub
push
gs
in
add
xlat
push
and
adc
ja
pop
loopne
inc
sbb
inc
filds
cmpsb
mov
lcall
loop
mov
loope
jo
cli
mov
adcw
fsubl
mov
push
lahf
dec
add
jo
lds
sahf
jmp
fmuls
cmpsb
ja
lods
inc
shlb
jae
mov
fimuls
sbb
test
pop
jp
aas
das
jo
dec
mov
rcll
xchg
mov
jo
cld
fstpt
jo
or
fnstsw
dec
mov
cltd
jae
xor
jo
dec
xchg
rcrl
ret
xchg
or
das
jo
xor
insb
mov
mov
jl
sbb
fldcw
es
push
jne
fdivl
mov
add
jo
lds
mov
add
js
push
cmp
xor
cmp
push
xor
push
insb
inc
mov
ss
pop
mov
jecxz
hlt
push
pop
in
add
mov
subb
std
mov
dec
xor
jo
outsl
xchg
cld
cmp
jg
arpl
cmp
jl
dec
int
jb
cmp
push
inc
push
shr
jl
jo
or
stc
push
and
mov
rol
loopne
shlb
adc
lahf
cmp
cmp
mov
fwait
popa
sbb
mov
adc
mov
lret
mov
push
jle
add
testl
xor
xor
mov
iret
sarl
jecxz
push
jo
std
adc
pop
jo
dec
lcall
dec
imul
jbe
adc
push
fisttpll
xchg
mov
ja
pop
and
mov
addb
sub
push
mov
bound
cmc
repnz
dec
cli
pop
jo
mov
sub
gs
xorb
cmp
jge
push
lods
and
push
insb
nop
xor
inc
inc
xchg
mov
dec
mov
jb
fsubrp
jo
fsubrs
loope
in
jo
dec
pushf
inc
aas
inc
jb
jo
and
sahf
and
and
mov
xlat
xchg
mov
mov
cmp
push
fnstenv
xchg
pop
xchg
cs
mov
pavgb
ret
dec
mov
mov
pop
jle
push
popf
jno
xor
mov
pop
and
sub
sbbb
ja
not
jge
jno
fiaddl
dec
jmp
push
testb
jmp
ljmp
cmp
pushf
dec
xor
jl
movsb
dec
jecxz
out
mov
pop
add
je
push
loope
cmp
sti
xlat
jo
jb
and
ret
sub
push
test
adc
sub
pop
jns
ficoml
cmp
sbb
mov
jo
mov
jo
lcall
nop
push
bound
push
mov
jae
dec
push
lds
and
outsl
lock
push
inc
mov
ds
aas
push
mov
test
push
push
jo
inc
leave
in
push
jo
xchg
and
rorl
std
mov
imul
push
cmp
outsb
sub
ljmp
fldt
test
inc
lds
inc
stc
pop
mov
cmc
nop
out
lret
or
clc
punpcklwd
pusha
sub
aas
jo
add
loope
mov
in
sub
mov
mov
dec
and
addr16
lods
jp
dec
xor
xchg
movb
mov
sub
int
xorb
shrb
lcall
mov
inc
icebp
in
inc
rcl
mov
sub
xor
mov
xchg
add
jle
push
sub
rolb
ret
mov
xor
addl
aam
inc
xchg
ror
shlb
ret
adc
sub
jmp
push
jo
mull
mov
in
add
cmp
arpl
mov
movsb
in
andb
test
stos
jno
pusha
clc
lock
cld
mov
adc
or
inc
jne
cmp
pop
pand
imul
out
outsb
test
popa
jo
sarl
jnp
test
dec
jg
mov
push
adc
jmp
hlt
pop
xor
inc
mull
insb
mov
aas
loopne
fidivl
rol
popa
xchg
jne
jo
outsb
dec
fnstcw
fstpt
sub
sti
and
pop
mull
in
jo
mov
and
mov
add
addr16
jo
rcl
es
int
mov
cmp
xchg
gs
inc
xor
sbbb
or
aad
mov
out
call
lcall
faddl
das
sub
ljmp
inc
fnstsw
xor
xchg
cmp
lcall
popa
sahf
and
jae
int3
adc
leave
adc
jb
sub
cli
orb
call
push
jge
mov
jp
jle
xchg
sar
jo
test
lret
je
or
jl
cmp
cmp
mov
orb
or
nop
aaa
fwait
ret
and
loope
jns
pushf
sbb
add
mov
iret
out
sbb
mov
repz
mov
jo
lea
int
sub
les
lcall
xor
push
icebp
stc
jo
adc
loop
push
cmp
jo
cmp
or
and
and
ret
pusha
lcall
nop
mov
jo
out
fs
testb
mov
insb
popf
mov
inc
dec
movsb
xchg
idivl
jo
pop
cwtl
adc
roll
push
aas
out
movsb
inc
inc
frstor
jo
add
cmc
push
xchg
rcl
inc
and
mov
dec
jo
cmpsb
inc
sbb
stos
jp
jo
sbb
int3
or
mov
dec
jae
jo
sub
cmovle
nop
lret
hlt
ss
and
pcmpeqw
lret
jo
ljmp
xlat
shll
ret
cmpsl
lds
and
in
into
sub
mov
lock
jge
push
jbe
sahf
push
mov
aaa
dec
add
sub
pop
stc
jmp
leave
stos
adc
je
jo
inc
add
in
adc
mov
je
jle
mov
mov
inc
insb
xor
push
xor
jge
fisubl
repnz
shrl
or
mov
or
xchg
inc
jnp
lods
jb
inc
loope
mov
or
xlat
aas
shl
es
mov
or
outsl
inc
or
loopne
lods
xor
shlb
test
fld
pop
jo
ds
push
push
addr16
lds
je
mov
jo
push
dec
rcll
fldl
decl
ret
roll
pop
loope
inc
add
aad
lds
repnz
push
xor
dec
mov
dec
and
jl
sbb
sbb
nop
fsts
cmp
aad
repz
call
enter
popa
icebp
jge
mov
cli
sub
testl
mov
xchg
bt
mov
sbb
fldl
jo
repz
add
mov
pop
or
cmc
jo
push
jl
leave
inc
fs
in
inc
cmp
push
aas
adcl
data16
shlb
jo
fdivs
jp
push
cli
fisttps
nop
ss
sbb
mov
mov
popa
les
sti
shll
mov
test
xchg
jo
mov
and
cmc
scas
icebp
jo
mov
ror
jo
inc
test
andb
jo
mov
lock
jno
mov
cmp
jecxz
cmp
in
clc
inc
leave
jo
jle
popa
sub
add
cmp
jnp
or
cmp
push
in
pushf
bound
js
jmp
icebp
mov
js
jle
orb
dec
lret
mov
loop
pop
xor
ja
fnstcw
cmp
and
pop
jne
es
mov
scas
andl
and
jb
cld
jo
int3
add
jb
adc
out
mov
pop
loopne
bound
jo
cmc
jae
leave
add
or
arpl
push
adc
cld
ret
cwtl
inc
imul
icebp
popf
inc
negb
xor
ret
enter
stos
jo
jno
cmp
sub
iret
jo
cmp
inc
jo
xchg
sbb
dec
aad
jo
or
into
mov
ret
rorl
or
adcb
jno
jns
mov
xchg
cmp
cwtl
out
ja
mov
push
arpl
mov
in
js
mov
push
ss
inc
jns
cmp
push
cmc
inc
hlt
cmpl
shll
jo
jns
jae
lret
jo
xor
and
insb
push
push
fdiv
mov
mov
push
shl
jo
pop
ffreep
inc
xchg
imul
outsb
cmp
jmp
pop
cmc
cs
xor
inc
jle
sarl
ss
add
lret
pop
pop
ret
pop
ljmp
mov
scas
jmp
mov
jo
cmp
ljmp
call
in
mov
sti
pop
jo
pmulhuw
insb
push
jo
stc
inc
mov
xor
push
inc
lods
jo
lods
fwait
and
iret
bound
dec
int
adc
shll
jo
call
dec
jo,pn
jmp
sti
fdivl
fucomp
pusha
ret
adc
fbstp
gs
jle
xor
sti
push
and
loopne
add
mov
push
mov
ret
jo
xchg
imul
imul
or
aaa
fsub
dec
add
adc
xorb
mov
and
xor
hlt
rorb
mov
and
cmp
sub
and
lret
divl
mov
ljmp
in
or
das
pop
jnp
sbb
call
add
cltd
psubq
jns
mov
loope
in
js
lret
adc
jecxz
jo
imul
xchg
sub
into
addb
pop
xlat
inc
cld
shll
push
add
sbbb
cmp
idiv
jbe
jno
in
jo
jb
call
sub
xlat
pop
andl
jo
ret
mov
push
jo
in
fbstp
pop
push
xchg
sub
push
popa
jo
int
xlat
fs
jo
icebp
inc
jge
sahf
mov
cs
adc
les
ja
mov
ss
jno
lret
in
jo
dec
or
nop
jecxz
popa
aad
pop
jb
dec
popf
mov
jo
xorl
mov
movsl
mov
repnz
sub
cmp
hlt
sbb
stc
dec
iret
ja
fdivrs
movb
push
cmp
gs
mov
nop
inc
cmp
or
mov
js
xchg
outsb
and
es
cld
and
mov
stos
push
mov
pusha
mov
aad
lods
enter
xor
mov
jbe
ret
fildl
lock
fs
iret
icebp
test
mov
sbb
leave
push
hlt
addb
jmp
popa
adc
sub
outsl
nop
in
jle
and
or
out
cmp
sahf
jo
inc
cli
les
insl
push
imul
jo
sub
testl
sbb
pop
sbb
movups
mov
jg
jo
loope
mov
gs
or
jo
lds
mov
adc
and
xchg
jae
mov
xchg
outsl
adc
in
test
mov
or
jo
and
cli
std
sub
loope
andb
inc
lods
push
mov
or
hlt
push
mov
loope
cltd
leave
sbb
xor
xorb
and
divl
icebp
push
hlt
leave
mov
lock
adc
lods
test
imul
sbb
ficomps
loope
push
mov
lds
or
jo
mov
test
cld
insb
test
out
sub
cmp
push
je
call
lds
pushf
sbb
imul
pop
test
push
sti
mov
xchg
int
or
out
pop
sahf
jo
notl
gs
inc
and
jo
push
lcall
test
aas
repnz
pushf
jae
or
dec
popf
mov
loope
push
in
or
jo
push
pop
lcall
leave
jge
pusha
xchg
lret
push
inc
pop
lret
push
mov
sub
stos
pop
xchg
xorb
sbb
mov
cmp
test
mov
jo
jnp
adc
ror
or
dec
filds
xchg
lock
jge
or
in
jg
hlt
sub
mov
add
je
es
cwtl
dec
jmp
sbb
push
cmp
xchg
adc
je
sbb
rcll
add
leave
in
mov
repnz
dec
adc
data16
in
jo
xchg
out
iret
shrl
lds
sarb
outsl
add
dec
jo
mov
out
les
and
xor
push
push
cmp
xor
test
inc
cli
fnstenvs
loope
sahf
jo
ja
mov
jo
dec
adc
adc
and
jb
mov
or
mov
jmp
fst
add
jo
pop
mov
dec
cs
ret
movsb
js
xor
addr16
and
mov
jo
sbb
scas
cmp
inc
ret
xchg
push
push
out
test
bound
or
mov
inc
ja
mov
sbb
jge
cs
int3
push
into
and
daa
int
jo
test
ds
in
xor
mov
sub
push
push
mov
xchg
hlt
pop
sub
in
imul
inc
xlat
lret
jo
mov
push
andl
nop
push
popf
in
sub
xchg
js
enter
iret
and
jp
jo
jnp
adc
outsb
jp
jo
je
ret
fs
scas
out
lahf
push
jo
sahf
mov
or
jo
sbb
dec
mov
in
sbb
mov
jne
aaa
jo
mov
xor
or
cmp
mov
and
ret
cmp
lds
in
out
jp
xchg
rcll
js
add
cmp
outsl
inc
pop
adc
push
test
iret
sbb
imul
cmp
test
cmpsb
and
xorb
aaa
jle
mov
sbb
xchg
mov
mov
pop
push
xor
aam
or
mov
push
jo
daa
out
lds
call
xor
xor
push
mov
popa
sbb
outsb
fdivrl
lock
xor
cmp
push
fstpt
xor
jo
inc
pop
pop
xor
arpl
movsb
sub
fidivs
nop
je
cmpsl
lret
andb
cmp
sub
cmp
mov
addb
out
out
lds
lock
or
insb
mov
lcallw
push
sub
shrl
cmp
inc
js
lds
xor
imul
pop
loope
sti
mov
pop
push
jmp
jo
stc
cmp
add
movsl
mov
leave
daa
cmc
call
inc
sub
push
jno
cmp
and
mov
das
insb
pop
ret
push
sbb
insb
cmp
dec
loope
jno
lcall
sti
inc
arpl
xlat
call
cmp
xor
int3
inc
cmc
adc
in
lahf
test
mov
shlb
jp
out
mov
jo
mov
sub
fs
repnz
mov
inc
jo
mov
mov
imul
fdivl
adc
lret
inc
insb
rorl
mov
dec
int3
jecxz
lahf
dec
xorb
insb
push
dec
adc
mov
pop
adc
lcall
ss
push
sbbl
sahf
aad
add
push
xchg
mov
leave
push
jg
jae
out
gs
jo
cltd
dec
in
jecxz
xchg
insb
inc
movsb
mov
dec
jo
xchg
dec
sub
int3
mov
dec
dec
mov
insb
xchg
jge
jo
dec
stos
lret
and
mov
jo
push
rcll
sbb
mov
pop
imul
xchg
enter
push
testb
jne
sbb
mov
imul
jo
inc
bound
loope
cwtl
mov
shlb
jle
repnz
or
ret
jo
call
les
stos
js
rorl
jmp
dec
sbb
jge
mov
sbb
jb,pt
leave
les
mov
jl
paddusb
cld
jno
push
jecxz,pt
rcrb
mov
adc
adc
lea
pop
jo
push
push
cmp
out
jo
scas
jmp
inc
jo
adc
mov
jg
lds
push
jo
or
in
insb
popa
mov
adc
hlt
dec
cmc
mov
and
adc
sarb
lret
aaa
test
lock
je
and
sub
mov
or
pop
fildll
jae
ret
jo
xlat
fstpt
cmp
ret
jo
or
movsl
leave
jo
repz
xor
sub
mov
mov
je,pn
imul
push
cmc
mov
inc
imul
dec
xor
xor
jo
push
and
push
shll
jo
and
icebp
pop
xor
data16
rorl
inc
mov
jo
test
popf
cmpb
icebp
mov
sub
lds
jl
lods
add
lret
sub
and
xor
icebp
stos
sub
shr
stc
js
movsl
push
mov
jmp
adc
shlb
nop
popf
rcr
or
mov
adc
loope
scas
outsb
jo
add
lahf
mov
nop
add
jg
and
call
jne
mov
loop
add
mov
je
fiadds
pushf
jl
lds
or
jo
adc
mov
popa
daa
sbb
int
mov
outsb
bound
cli
lahf
andb
or
lods
hlt
dec
push
jo
and
push
and
ror
jo
fimuls
fisttpll
and
mov
xchg
das
mov
shlb
test
sub
jle
cld
and
mov
mull
aaa
pop
jo
push
pop
adc
leave
clc
fwait
jo
xchg
loope
xchg
sub
inc
fnstsw
loop
fbstp
add
dec
mov
addr16
jo
push
lds
xchg
fxch
leave
push
cwtl
and
mov
ss
nop
cmc
std
sbb
test
pop
jo
pop
icebp
shlb
out
pusha
ret
mov
leave
jo
mov
outsb
sub
add
pop
sub
jl
xchg
ja
jo
imul
push
jo
frstor
imul
inc
add
jo
pop
xor
xchg
sub
das
aam
jo
mov
mov
ret
pop
mov
pop
xor
dec
cld
or
jo
add
icebp
jecxz
xor
jo
mov
jo
push
mov
mov
xchg
cmp
fwait
icebp
sub
add
movsb
xchg
mov
js
nop
jmp
addr16
in
jo
cmp
imul
pop
cmp
in
xchg
lds
xchg
sahf
add
mov
mov
subb
ror
test
fidivl
ret
push
iret
jo
adc
bound
popf
imul
xchg
push
ret
push
das
sbb
and
jne
insl
jo
fmul
into
test
jo
push
inc
pop
lock
sub
push
imul
rorb
mov
xor
or
vscatterpf1dpd
dec
data16
cwtl
jle
push
test
jo
into
inc
lds
push
push
mov
imul
insb
add
lock
jge
jmp
loopne
subb
mov
repnz
mov
pop
jbe
mov
loope
call
hlt
pop
jo
stos
and
lds
rorb
mov
jle
shll
sarl
adc
inc
mov
sub
in
push
andl
add
movsl
inc
lods
jo
adc
decl
sub
out
repz
ja
bound
imul
cmp
jo
push
cmp
jl
jmp
lcall
mov
std
lods
mov
js
inc
xchg
imul
sub
push
pop
push
lret
mov
outsb
pop
fs
push
and
ja
aaa
push
subl
inc
push
cmp
aam
out
jp
push
xchg
js
or
sub
xchg
rcrb
lds
sbb
and
cmp
inc
or
sbb
mov
jae
jo
pushf
outsl
mov
sbb
idivl
xchg
stos
xchg
add
mov
cmpl
mov
stc
pusha
hlt
jae
jo
gs
nop
pop
xor
xorl
iret
pop
sub
scas
ficomps
add
js
push
mov
js
cmp
xorl
xchg
inc
ret
jo
push
movsl
lods
hlt
and
push
lds
imul
jo
push
scas
xor
mov
addb
push
daa
mov
mov
call
sub
add
enter
fisubrl
jo
inc
sub
inc
jo
in
mov
sub
ljmp
mov
push
dec
mov
add
mov
mov
xchg
jo
fistpll
in
popf
sub
xor
scas
mov
and
loope
repnz
lds
push
xchg
vmptrld
push
push
mov
shll
mov
js
cmc
push
ss
mov
into
scas
jo
test
xchg
jo
fnstsw
sub
ja
fisubs
nop
enter
ret
in
xchg
test
adc
into
mov
pop
adc
mov
pop
sbb
xchg
out
cmp
cs
sub
pop
mov
fwait
push
mov
and
mov
jo
add
mov
mov
imul
xchg
push
shlb
lds
insl
sub
mov
push
je
cmp
das
jo
gs
ret
dec
jb
jle
fwait
nop
push
out
mov
fbld
pushl
shll
in
aad
cmp
dec
faddl
jo
jb
adc
fstps
aas
jp
gs
jo
leave
sbb
sahf
pop
cltd
lret
jo
push
or
std
mov
and
xchg
hlt
outsb
xor
out
lock
rcrl
add
ss
lock
pop
mov
enter
scas
sti
push
or
mov
mov
ret
jo
jno
aas
ret
stos
fnstcw
imulb
xor
jb
fmul
inc
popf
pop
cltd
sub
shrb
sarl
out
cmp
xor
lds
movsl
push
out
jle
stc
sub
adc
dec
sti
lods
add
icebp
cmp
jo
gs
pop
push
std
jge
sbb
add
in
push
xchg
mov
shll
lret
sbb
out
jo
mov
xchg
xor
push
inc
ljmp
shrb
sbb
nop
lret
mov
dec
sbb
xor
fidivs
int3
jge
movsb
ljmp
or
lods
or
pop
or
loope
sub
xor
mov
sti
xchg
mov
scas
lcall
std
sub
mov
loopne
xor
and
jo
es
fistpl
jnp
loope
daa
aaa
inc
dec
jg
insb
mov
and
inc
shrb
dec
lcall
adc
sbb
out
fwait
lds
shlb
sub
fldenv
les
shll
mov
add
and
ljmp
daa
and
push
mov
hlt
xor
inc
dec
cmp
rorl
inc
mov
lds
orl
mov
arpl
add
lds
in
addr16
ljmp
ljmp
pop
dec
fwait
imul
fisubrs
or
mov
ret
push
mov
jo
and
andb
imul
pop
divl
push
inc
icebp
stos
es
data16
xorl
je
xchg
jmp
rcll
clc
subl
mov
popf
mov
fiadds
out
insb
in
adc
sub
lock
lods
add
jo
ror
sub
jns
mov
cli
adc
loope
call
jo
ja
fdivr
rorl
in
add
push
jae
lds
cwtl
push
shrb
jo
iret
jp
and
sbb
inc
je
mov
cs
fs
je
leave
add
xchg
nop
or
jne
dec
scas
jo
out
sub
jo
or
in
icebp
xor
fnstcw
jo
xchg
cmpsl
push
aaa
add
cmp
les
jge
inc
jo
pop
inc
fs
xor
push
xor
orl
adc
xchg
stc
fadds
roll
fidivl
add
imulb
roll
sti
sbb
mov
inc
arpl
lds
movsl
xor
pop
mov
push
gs
add
mov
lods
pop
sarl
jg
bound
mov
adc
xor
lods
ret
repnz
hlt
jnp
mov
push
inc
jae
pop
in
push
call
mov
fs
jo
jae
das
scas
lea
mov
sub
or
add
mov
addr16
fs
stc
xchg
sbb
enter
fildll
js
push
decb
xchg
out
int
pusha
jno
sbb
or
int3
add
js
in
ljmp
adc
test
sub
rclb
xchg
je
inc
mov
psubusb
pop
mov
ficompl
pop
jo
mov
xor
lds
jo
testb
out
push
fcmovnu
or
aad
je
decl
ljmp
orl
pop
and
jo
pop
xor
daa
jo
andb
mov
mov
hlt
sbb
dec
cmpsl
movsb
loope
sub
jo
ret
mov
mov
push
and
ret
mov
movsb
jae
lds
loopne
xchg
jecxz
inc
pushf
xorb
cmp
mov
dec
mov
jl
sbbb
out
push
jo
cmp
mov
jo
int3
mov
and
lds
add
pop
icebp
mov
jecxz
cmp
in
inc
andb
aaa
test
fimull
es
leave
pop
insb
test
jbe
xchg
lcall
jg
cmpsb
push
push
jno
roll
rclb
idiv
out
popa
and
andb
xorl
into
inc
jo
pop
dec
icebp
and
je
shll
stos
jo
jmp
fldenv
jo
into
cmp
jg
xor
in
mov
nop
outsb
mov
ss
inc
jns
jne
jo
pushw
ret
xchg
mov
fimuls
mov
ret
jo
dec
leave
scas
les
mov
jo
or
mov
xchg
je
push
jo
ret
stc
inc
sub
xor
icebp
adc
pop
push
pushf
dec
jno
add
add
jl
cli
sahf
push
ss
in
sub
sub
cmp
lods
repnz
cmpl
and
xor
cld
jo
ficoms
in
bound
subl
in
and
or
shlb
es
sbb
cltd
xor
je
in
jle
test
sbb
xchg
mov
push
cmp
dec
fnsave
cltd
mov
inc
das
sub
push
pop
aas
lock
stc
sar
sub
adc
movq
cmpsb
cmp
add
mov
mov
nop
mov
xchg
ja
mov
insl
cmp
pshufw
ss
ljmp
jo
jne
loopne
cmp
gs
inc
inc
inc
jo
sbb
push
and
xchg
jp
ficoms
cs
add
and
lahf
xor
and
jbe
ret
mov
jo
rolb
or
push
lods
test
imul
dec
jo
or
push
int
gs
stc
outsl
popf
inc
shlb
fs
aaa
xchg
leave
repz
jno
jo
push
sbb
lds
clc
int
fistl
js
mov
jmp
shll
mov
std
aaa
icebp
and
in
decl
rcrl
sub
sbb
jo
stos
mov
bound
clc
nop
cltd
inc
dec
lret
popa
push
pop
lods
aaa
testb
mov
rcll
pop
mov
xor
jo
in
ja
adc
ret
mov
rcr
mov
sbb
push
sbb
push
loope
push
movsl
imul
popa
sti
push
dec
imull
in
hlt
js
mov
cmc
shll
or
js
popf
inc
stmxcsr
mov
push
jle
xchg
cmp
cltd
xor
mov
inc
popf
sar
jo
sti
cmp
lds
mov
xor
add
pop
jmp
mov
clc
inc
inc
jno
divl
fcom
xor
stos
lret
sbb
test
xor
nop
push
jo
ss
rorb
fnstcw
mov
insl
int
push
push
xchg
add
mov
bound
sbb
test
std
scas
jo
add
lds
mov
in
nop
cld
dec
daa
add
lods
jo
cmpsl
dec
test
xchg
dec
jo
ret
dec
push
insl
shrb
into
adc
jo
flds
arpl
and
sarl
xchg
push
jb
mov
stos
aas
je
ret
jo
out
fnstsw
dec
out
mov
and
jp
jmp
jg
or
fs
or
hlt
test
gs
sbb
mov
jmp
push
jecxz
sbb
pop
out
repnz
mov
lea
data16
mov
mov
pop
mov
out
add
insb
adc
sarl
shlb
jg
bound
rolb
call
movsl
push
fdivr
bound
mul
push
sub
mov
push
lret
ret
and
js
jnp
jo
jb
rcrb
pusha
mov
lahf
fisubrs
lds
sub
divb
stos
sarl
mov
adc
push
jle
jo
test
pop
jmp
ret
mov
cli
pop
fwait
daa
dec
loope
pop
add
jae
adc
mov
jmp
mov
adc
roll
jo
in
cmp
xchg
sub
jp
seta
add
sbb
jo
fs
lret
lahf
jge
movsb
add
xor
cmp
jo
leave
inc
adc
mov
jo
ljmp
lahf
xor
movsb
pop
in
mov
push
and
jo
push
and
xchg
jb
inc
inc
mov
lds
mov
xchg
sarb
pop
cmp
addb
out
sub
repnz
aad
xlat
or
push
loope
or
mov
testl
out
add
pop
popa
movsb
insb
ret
inc
cltd
js
out
xchg
int
sub
divl
insb
mov
or
cmp
mov
mov
jmp
dec
ss
enter
fidivl
push
roll
jge
mov
repnz
in
scas
pop
push
addr16
xor
sbb
shlb
and
roll
in
leave
dec
fs
das
cmc
sbb
pop
jo
mov
pop
gs
in
mov
popa
mov
fadds
jg
test
icebp
pusha
test
and
hlt
repz
ss
pop
jo
adc
dec
sub
sbb
jo
aam
adc
lret
dec
pop
and
lret
mov
ds
pop
cmpl
jbe
dec
je
pop
mov
adc
xor
jo
xor
or
mov
push
cmpsb
jb
je
push
mov
es
cmp
jo
fildl
pop
cmp
adc
leave
push
incl
inc
sub
push
lahf
movsb
lret
lds
xor
dec
jle
jo
int3
or
hlt
add
and
jo
pop
shlb
les
adc
jns
adc
mov
sbb
test
dec
jo
pop
cmp
nop
jo
clc
add
int
aaa
sbb
and
addr16
jo
xchg
jb
enter
mov
jg
adc
jmp
jae
cmp
sbb
dec
icebp
push
inc
sbb
js
insb
fists
mov
ja
push
jl
aas
je
movsl
mov
test
inc
aaa
push
nop
mov
cmpsb
mov
push
jo
xor
shrb
sahf
fs
xchg
cmp
push
add
rol
xchg
inc
repnz
out
jo
pop
mov
jmp
faddp
jo
lret
push
inc
lds
call
pop
jo
cmp
bound
add
mov
stc
sub
shll
jb
rcrb
rclb
in
add
jo
sub
mov
fidivs
addr16
jl
leave
mov
xchg
popa
mov
lds
stc
add
jo
shl
call
jo
push
push
mov
in
xorl
dec
sub
jb
jo
lret
std
lret
cltd
int
push
mov
insl
sub
inc
cmp
mov
lcall
jo
or
mov
popl
je
je
mov
daa
dec
out
andb
xchg
mov
push
push
cmp
outsl
xchg
add
mov
sub
xchg
adc
add
daa
test
icebp
push
and
push
aas
std
sub
loope
or
jno
inc
fsubr
sbb
and
js
pop
or
call
shufps
ss
cmp
sub
mov
mov
mov
fnstenv
push
je
push
cmp
mov
sti
add
mov
and
popa
jo
es
jecxz
push
gs
sub
and
jo
into
push
ret
int
xor
xor
pop
jg
outsb
es
dec
push
xor
loopne
push
cmp
enter
js
inc
test
nop
jo
xor
in
inc
mov
push
cmpsl
lods
adc
and
push
jo
mov
inc
addr16
sbb
or
icebp
jl
stc
push
lret
ret
jne
lock
outsl
popa
mov
arpl
leave
pop
mov
jge
push
cmp
mov
jo
and
or
cltd
dec
jo
jle
std
shlb
les
movsb
arpl
in
int3
jo
test
or
repnz
jo
adcl
jo
push
rorl
test
loope
push
adc
mov
rorl
inc
loop
in
xor
ret
lods
aaa
push
jo
xchg
and
cmp
inc
add
push
push
ret
je
and
shrb
std
inc
xchg
xchg
mov
insl
pushf
movsb
imul
in
pop
mov
mov
add
into
lea
mov
pop
inc
add
fstpt
arpl
mov
clc
jo
fidivl
subl
icebp
push
loope
cmc
aaa
popl
lahf
imul
fistl
push
enter
jo
shr
add
lds
push
sbb
jge
sarb
adc
lea
adc
sbb
jo
and
mov
lea
popa
xchg
les
mov
sarl
ret
jae
or
jle
jo
xchg
adc
insl
mov
xchg
loopne
push
je
orl
pop
lahf
and
jb
ret
adc
xchg
inc
xor
push
sahf
push
add
xor
jne
jo
ss
adc
shll
ret
inc
sub
jo
fidivl
or
int
bound
inc
sbb
dec
mov
outsl
sbb
addr16
arpl
jmp
inc
or
out
pop
aas
jo
mov
xchg
enter
cmp
mov
leave
ret
and
add
movsl
scas
or
or
jo
in
cmp
call
dec
test
mov
out
outsb
sbb
jo
insl
gs
shrl
push
jo
cmc
and
out
push
out
pop
les
iret
jo
mov
adc
mov
inc
sbb
jp
jo
fcoms
inc
jb
shrl
mov
aaa
rorb
bswap
jbe
sbb
push
push
xor
je
aam
mov
gs
imul
jo
std
dec
lcall
adc
add
test
jae
call
fnstcw
inc
push
hlt
sbb
lahf
sub
jo
inc
dec
ret
das
cwtl
jo
jecxz
idivl
roll
loope
jl
add
pop
je
jo
add
jecxz
psubsb
std
fidivrl
sar
aaa
jo
jns
mov
stos
jo
mov
xor
sbb
test
incb
das
negb
and
iret
mov
jo
dec
lcall
leave
jo
dec
mov
inc
mov
mov
int3
pop
xor
lea
fsubrl
movb
pop
xchg
xor
in
jne
scas
lds
push
fimull
hlt
inc
inc
bound
cmp
lahf
mov
add
fcoms
inc
les
mov
jo
and
or
xchg
inc
add
punpckldq
jo
int
ds
and
data16
adcb
mov
les
fldt
xchg
jo
fstl
outsb
jo
orl
arpl
add
and
lret
push
xchg
sub
in
movsl
xchg
jp
imul
inc
jg
or
cmp
leave
jo
rclb
xlat
lock
mov
cmpps
aam
je
add
jo
rcrl
jo
xchg
jne
sub
cmp
pop
insl
ds
cmpsb
lods
dec
ss
insb
lcall
mov
dec
add
hlt
out
in
mov
inc
xchg
jo
xchg
inc
sti
and
pop
xor
and
inc
imul
mov
mov
repz
sbbb
jbe
fdivs
hlt
sub
mov
mov
mov
mov
inc
nop
shrl
imul
cs
sahf
push
dec
jle
mov
cmp
insb
in
cmp
sahf
pop
sub
xchg
decl
mov
lahf
cmc
stos
test
paddsb
add
subb
fiadds
xchg
repz
and
aas
cmp
out
dec
into
shll
jo
sahf
jl
adc
add
inc
add
jo
mov
cmpsb
sub
hlt
cmp
int
js
lret
mov
or
mov
roll
scas
and
mov
es
adc
mov
in
fistl
mov
in
cltd
dec
cmp
jo
dec
leave
cmpsl
idivl
xchg
add
sbb
jne
fsubrl
push
mov
inc
mov
pop
aas
hlt
inc
in
jo
sti
ja
nop
popa
lods
enter
insl
mov
fcomp
mov
jo
orl
jo
lea
gs
adc
xchg
scas
sub
xorl
xor
iret
add
mov
sarb
imul
xor
bound
std
and
cmp
inc
clc
push
pushf
js
iret
cmpsb
jns
jo
push
pop
popf
push
push
xor
jo
inc
mov
jo
outsl
ret
xor
icebp
push
cmc
inc
jmp
test
ss
cwtl
jo
aas
ret
or
fildl
out
scas
adc
dec
insb
jb
jo
lret
mov
xchg
add
jo
jge
mov
scas
lods
push
inc
cmp
mov
pop
inc
adc
mov
es
jle
data16
pop
or
mov
outsb
mov
sub
jle
cmpsl
xorb
sbb
cmp
repz
jo
out
notb
jo
test
jno
repnz
jo
dec
in
dec
jg
xchg
je
jo
jmp
jo
std
mov
mov
jge
cmpb
or
push
jge
jo
stc
leave
fcmovb
jae
pop
repz
and
or
adc
mov
adcl
xchg
mov
fninit
cmpb
inc
into
pop
js
jo
add
or
cld
cmp
xchg
and
imul
fdivrs
movsl
ret
dec
in
inc
mov
cmp
dec
das
ret
or
or
pusha
lock
xchg
dec
push
xlat
pop
push
jns
testl
sti
mov
push
iret
fistps
int3
popa
out
icebp
push
inc
or
mov
bound
lahf
pop
mov
fidivl
mov
push
in
andps
js
inc
stos
shll
dec
test
jl
lds
mov
xchg
dec
jo
adc
add
xchg
and
mov
mov
push
adc
nop
pop
sbbb
arpl
jo
loop
jg
lcall
ja
add
imul
outsl
jo
pop
js
xlat
inc
adc
jo
inc
mov
sbb
mov
push
push
or
lea
or
rcll
pop
add
mov
mov
std
idivb
mov
inc
flds
mov
jns
gs
dec
fs
movsl
ret
inc
insb
jl
lret
lcall
mov
or
add
lahf
call
dec
fsubl
aam
insb
inc
xchg
out
pop
iret
dec
xchg
rcl
jo
sub
nop
insl
andb
adc
outsl
or
in
sub
std
inc
adc
iret
js
inc
and
insl
cmp
ret
push
add
int3
sub
mov
int
test
pushf
mov
push
xlat
pop
xchg
mov
imul
add
mov
ja
jo
fldt
cmp
jo
out
cmp
xor
lods
ret
jmp
imul
outsb
rcrl
pop
push
stc
mov
les
and
iret
pop
in
lds
std
outsb
test
lea
sub
imul
lcall
xchg
mov
cld
or
xlat
out
leave
nop
mov
lock
mov
in
jo
jmp
add
xor
add
adc
jbe
sbb
adc
push
push
popa
cmp
xor
and
jo
inc
push
dec
rep
out
push
push
ffree
cmp
aas
sbb
mov
jb
sarb
adc
shrl
sub
icebp
out
int
mov
mov
push
inc
mov
adc
out
xchg
xor
clc
jo
and
insb
rcrl
jo
aas
rcll
iret
addr16
jo
les
cmp
popf
sub
mov
push
lods
roll
lret
shll
jbe
out
std
jo
push
cmpl
pop
dec
mov
inc
jecxz
jo
outsl
out
xor
adc
inc
in
push
jo
lret
mov
jl
leave
dec
xchg
push
sbb
imul
xchg
repz
xor
or
jne
loope
jl
or
xchg
shlb
jecxz
cwtl
pop
ljmp
js
lds
push
mov
mov
jmp
jo
imull
pop
roll
aam
pop
fildl
jns
fnsave
rorl
jno
xor
movsb
mov
jo
push
xchg
xchg
cmpsl
push
jo
pop
and
ret
into
xchg
fisubs
js
jo
movsl
push
andb
dec
fldcw
shll
dec
jo
inc
mov
xor
cmp
pop
push
push
jp
jb
rol
or
dec
test
inc
test
mov
mov
lea
jo
or
push
fistpl
cmp
loopne
fbld
test
adc
xchg
jnp
jb
mov
cwtl
jns
mov
jo
jae
ja
inc
shll
inc
sarb
sbb
jne
in
adc
sbb
int
sub
sbb
push
mov
mov
insb
andl
push
cmp
pop
mov
push
dec
sarb
mov
jo
data16
jecxz
int
rcl
or
int3
outsl
mov
xor
mov
push
adc
out
inc
pop
lock
adc
testl
es
jle
ss
nop
enter
dec
cmp
ror
jo
sbb
sbb
jg
sub
out
ret
sub
loope
inc
pop
jne
inc
movsl
xchg
jno
mov
mov
nop
mov
add
inc
ffreep
jnp
jbe
xorb
scas
out
lods
jne
bound
leave
jge
rcr
stos
jo
cmc
in
mov
jo
push
jl
repnz
or
ret
adc
jo
adc
and
out
dec
inc
jb
adc
fwait
mov
aad
loop
mov
aas
shrl
or
inc
ss
in
std
je
mov
les
add
or
lds
mov
push
out
jge
jo
aam
mov
leave
cld
imul
or
inc
lock
in
xchg
jo
lods
js
je
sub
mov
daa
int
jo
and
cmp
loopne
or
dec
fdivs
rcrl
sahf
movsl
sbbb
cs
out
pop
mov
jnp
jl
sbb
jo
fdivl
push
mov
das
std
jae
jnp
andl
mov
and
cmp
pop
jo
test
cltd
mov
sub
movsb
das
jo
mov
inc
lds
mov
test
jecxz
cs
nop
popa
aam
mov
dec
dec
or
jnp
jo
xor
dec
cs
loopne
lret
push
sbbb
inc
jo
sub
aad
ja
inc
btc
bts
scas
adc
sar
add
rclb
btl
shll
fcmovnbe
mov
sahf
lds
fisubl
jo
dec
cmp
xlat
or
and
xchg
jg
lock
ret
sti
js
sbb
jmp
in
pushf
pop
sbb
adc
mov
jle
aaa
sbb
push
jmp
adc
icebp
lcall
sbbb
mov
sub
repz
xchg
imul
mov
js
lret
push
mov
inc
or
mov
jo
jb
nop
mov
repz
arpl
jmp
add
xor
dec
sub
and
adc
aam
cmp
jo
push
jns
xor
jo
dec
sbb
jo
icebp
mov
aaa
mov
pop
mov
dec
push
cltd
jo
or
add
loope
and
test
jb
nop
aas
insb
or
sub
sbb
push
mov
jns
sti
out
stc
xchg
cmp
sub
jbe
into
dec
ret
mov
push
add
pop
push
stos
notl
repz
mov
es
icebp
adc
je
pop
sti
lock
ja
cltd
cli
addb
lcall
lock
cmp
cwtl
push
bound
out
mov
jo
xor
lds
es
mov
push
mov
xchg
jo
add
lds
mov
mov
je
push
es
adc
emms
scas
pop
jno
jo
mov
into
sbb
ret
pop
test
cmp
mov
push
jo
dec
jecxz
xchg
lds
mov
xorb
or
jp
and
pop
push
std
sub
xchg
mov
clc
sub
sbb
jo
repnz
inc
pop
sub
pushf
adc
sbb
stos
gs
inc
jo
test
xchg
lret
rcr
mov
iret
xor
cmp
cltd
jo
dec
xchg
sub
fiaddl
sbb
inc
aas
std
mov
sar
pop
ret
mov
jo
xchg
jb
insl
adc
jo
cmp
pop
lds
cmp
test
adc
sbb
inc
lret
and
shl
mov
inc
adc
pop
insl
stos
or
sub
movsb
jo
ret
out
pop
mov
mov
dec
jle
inc
test
jo
mov
cmp
leave
enter
pop
add
jo
popa
lret
push
cmc
jo
movsb
loope
lahf
ret
jo
adc
test
std
bound
movsl
cmp
loope
push
xchg
xor
in
xchg
fcomi
jbe
jo
cwtl
scas
cmp
sub
jo
jl
adc
jo
or
jmp
cmp
push
roll
jo
cmc
mov
or
mov
imul
leave
fs
aad
jg
or
out
insb
mov
ljmp
incl
and
jo
mov
fsubl
cmpb
mov
inc
shll
mov
xchg
loope
sub
jbe
dec
push
jo
inc
ds
movsl
lds
mov
dec
aaa
out
stos
mov
sub
xchg
mov
mov
jne
popf
bnd
mov
mov
mov
pop
xchg
xor
xor
jo
aad
jmp
jo
inc
in
inc
loope
xor
dec
mov
imul
adc
push
outsl
jo
add
cltd
mov
cmpsb
mov
data16
call
aad
sub
jo
cmp
addb
lds
cmp
cld
popf
jmp
outsb
imul
dec
sbb
popa
out
pop
jo
xchg
mov
jo
inc
lahf
xor
add
mov
jo
pushl
scas
outsb
adc
pop
mov
arpl
sbb
jo
movsb
in
popf
push
popa
cmp
dec
mov
jp
lods
and
or
mov
sub
jo
fprem1
daa
movsb
or
dec
jbe
jo
xor
shl
push
in
jo
test
mov
ja
jo
dec
leave
add
fdivr
nop
nop
sub
adc
in
sbb
jo
shll
sub
jne
addl
pop
cmp
push
adc
mov
and
sub
push
adc
inc
add
pop
mov
and
add
call
dec
js
jmp
imul
dec
fstl
out
jne
pop
scas
add
lret
shr
popa
shll
shl
or
or
loopne
out
addr16
leave
push
loope
xchg
xlat
jo
xor
repnz
cmc
and
jo
adc
ja
sti
cltd
jb
mov
mov
sbb
dec
ss
dec
xor
shrl
push
adc
sbb
sub
cli
aas
push
inc
lret
jo
addl
jmp
rorl
mov
jns
jo
or
push
jo
lret
loope
fcos
out
fisttps
scas
sub
inc
push
jo
sub
push
mulps
stos
dec
push
out
or
mov
inc
dec
lock
dec
jl
das
jo
inc
addb
mov
xchg
divb
lds
sub
xor
push
push
out
test
movsb
push
mov
out
xor
test
popf
nop
ja
gs
into
cmp
daa
adc
dec
addl
fdivl
xchg
call
cmpsb
inc
lods
xorb
push
push
add
lea
jp
mov
push
sub
rolb
or
pop
aaa
sbbl
pop
lahf
xchg
icebp
jo
cmp
jge
jo
in
fxtract
lcall
lds
aas
cmp
jo
mov
sbb
jo
jecxz
jbe
out
rol
mov
xchg
inc
je
into
mov
insb
sub
mov
fs
nop
loop
push
mov
jnp
in
inc
jo
repz
dec
insb
and
cld
clc
test
jmp
pop
jo
xor
sub
jo
leave
push
mov
xor
sbb
sub
jle
mov
fcomi
rcl
add
mov
ret
sub
pop
cli
xchg
pusha
andb
sbb
add
mov
xorb
jg
loopne
aad
leave
scas
xchg
daa
cld
popw
shrb
das
les
jp
jo
je
lds
inc
in
out
dec
int
movsl
sub
sub
jo
mov
in
aad
and
jge
mov
cmc
hlt
loope
jo
fldcw
mov
mov
jo
and
sub
push
setge
jle
icebp
adc
sub
mov
or
out
pop
jo
xchg
inc
mov
cs
jo
sarb
add
out
mov
push
pusha
mov
int
sbb
sub
out
mov
push
push
outsb
ljmp
push
jo
lret
jno
mov
mov
push
mov
and
or
cs
js
mov
das
shlb
aaa
cmp
mov
xor
jo
pop
addr16
and
loope
sub
std
insb
cwtl
pop
add
ret
out
shlb
loopne
jl
pop
jp
nop
cmp
sub
lock
cwtl
aam
pushf
leave
xor
andb
fnstsw
insl
mov
daa
sub
jo
xor
mov
mov
xlat
push
aas
lods
out
and
ret
cld
jo
pusha
shrl
sbb
jo
xor
nop
mov
ljmp
push
arpl
ret
xchg
or
imul
cmp
mov
int3
push
and
fadds
movsl
jns
mov
add
insb
jo
xchg
pop
add
xor
push
jns,pn
inc
test
ss
or
in
fsubl
sbb
ds
jo
shrb
aam
decl
mov
inc
and
shr
pushf
pop
push
xchg
xor
mov
sub
xor
fs
sbb
jo
ret
in
sbb
xor
int
jo
jnp
sti
mov
leave
outsb
pushf
or
push
add
jnp
jo
mov
add
jo
std
test
mov
jo
jbe
xlat
and
mov
int3
dec
sub
jo
call
mov
cmpsb
push
sbb
push
adc
hlt
pushf
les
inc
mov
xorl
enter
add
lock
and
mov
cld
sub
push
js
or
pop
xchg
sahf
jb
jge
adc
int
or
jle
insb
rcr
jo
jge
push
cmp
mov
adc
xchg
fs
add
and
cmp
shrl
sahf
xchg
pop
test
jo
rorl
orl
adc
fnsave
mov
jo
rcl
into
mov
aas
xorl
jo
repz
rcl
nop
gs
cmpsl
stos
addr16
js
add
xchg
cs
lds
fnstenv
pop
scas
shll
jo
add
ficoms
xchg
nop
push
xor
sub
dec
jo
fsubrl
std
cmp
pop
test
xchg
mov
addb
push
xor
jne
jo
jnp
out
das
int
outsl
jo
adc
std
and
push
jo
movsl
jb
mov
jbe
outsb
sub
xchg
scas
jno
sub
inc
mov
leave
je
cmp
ret
cmp
dec
sub
push
mov
dec
mov
pop
hlt
xchg
into
jo
sarl
sbb
and
or
ja
movsb
test
cmp
adc
push
cwtl
ret
aam
idivl
sub
ljmp
mov
xchg
movd
mov
dec
or
sti
in
orb
sarl
fidivrl
jo
jle
aad
leave
sub
sti
addr16
and
sbb
mov
lahf
mov
jge
fldcw
jo
xchg
or
lods
es
addr16
inc
add
in
xchg
inc
ja
pop
xor
lahf
cmp
sahf
mov
adc
repnz
lds
icebp
jns
ja
lcall
jo
lret
in
push
mov
jnp
insb
leave
adc
sti
es
lock
lods
cmp
sbb
pop
mov
push
pop
xorl
xorb
cmpsb
jo
or
imul
jmp
mov
adc
enter
hlt
sbb
ja
test
sub
sbb
mov
push
and
and
mov
mov
gs
dec
adc
ds
outsl
sarb
or
pop
jo
sbb
fstl
or
adc
je
hlt
ret
inc
push
push
std
add
mov
push
pop
jo
popf
idivb
add
fistl
lds
sbb
pop
mov
cmc
inc
mov
js
xchg
mov
out
jo
ret
push
jl
push
and
mov
in
ja
mov
xor
sbb
xor
sub
mov
xchg
aas
or
jmp
leave
mov
inc
sbb
cmp
int
mov
lret
mov
jo
movsl
push
pop
ljmp
std
lods
jno
push
pop
push
out
js
xlat
scas
push
mov
aad
insb
push
xor
nop
jecxz
or
in
xor
rcrb
js
pop
icebp
jno
jle
push
xor
jo
dec
adc
add
mov
mov
push
ret
das
mov
jo,pt
fisubrl
push
mov
jo
or
fstps
sbb
mov
cli
ljmp
daa
cmc
cmpb
mov
add
xchg
jo
shll
jge
lret
in
sahf
xchg
stos
jo
dec
xchg
xchg
inc
sbb
ret
jns
pushf
jg
lds
cld
inc
and
mov
ret
dec
in
jo
out
sbb
sub
movsb
jo
inc
ss
sub
test
cmc
inc
add
dec
scas
mov
pop
clc
or
lock
jo
mov
pop
jecxz
aaa
pushf
jo
jae
enter
in
sub
jo
xchg
ss
lcall
mov
sbb
jo
fiadds
out
lods
gs
pop
fucomi
ja
sbb
lock
addb
fldenv
lret
out
inc
jb
dec
or
icebp
mov
mov
cli
xchg
push
mov
dec
cmp
cmp
or
mov
jns
lea
mov
lods
jo
jmp
add
fists
sub
pusha
adc
cmpsb
mov
jno
call
fisttpl
inc
cvttps2pi
push
xchg
add
lds
jo
pop
add
mov
sbb
shrb
nop
push
lods
es
xchg
adc
sti
not
rcll
push
ret
mov
or
outsb
mov
popa
mov
insl
js
fdivrs
xor
and
rol
rolb
aaa
jo
pop
mov
fcos
leave
ss
adc
adc
cmpb
xchg
js
shll
push
dec
lret
int3
cmc
fdivl
cld
lds
sti
out
push
mov
cmc
push
dec
dec
jo
repz
inc
in
mov
fxch
cmp
adc
pop
call
out
fsubrl
lods
mov
xchg
adc
xchg
jo
pop
xchg
xor
mov
pop
sub
and
ss
fs
and
js
call
in
rcrl
push
jnp
cmc
ljmp
lds
cmpsb
or
clc
cmpb
xor
xor
test
bound
mov
int3
lock
cmpsl
frstor
loope
sbb
scas
cwtl
je
js
xchg
leave
mov
enter
and
mov
push
out
push
sbb
push
or
cmp
lods
dec
stos
push
je
fwait
mov
test
addb
std
gs
mov
call
jo
push
ret
and
lds
div
leave
xor
dec
push
jp
hlt
bound
push
iret
mov
jo
inc
and
fnstcw
sbb
jnp
jg
jae
mov
sub
and
gs
in
xchg
imul
stc
repz
scas
add
cmpsb
cwtl
in
dec
jmp
cltd
pop
mov
outsl
hlt
xchg
iret
jo
frstor
jle
xchg
in
dec
test
sub
mov
sub
pushf
mov
fnsave
roll
and
jo
mov
ret
mov
fs
lds
les
or
iret
rolb
mov
add
ds
mov
xor
and
mov
push
mov
mov
mov
mov
pushf
jle
jne
mov
push
jmp
mov
cmp
push
je
ret
cmp
jo
cmpsl
shll
sahf
clc
repnz
jo
ss
out
cli
lds
push
push
in
subl
add
sahf
mov
pop
int
imul
enter
je
jo
pop
pop
jle
leave
pop
fdivl
js
add
mov
pop
xor
add
daa
lock
lret
imul
jecxz
push
inc
mov
mov
or
lret
lret
jo
add
insl
test
mov
jo
cmp
mov
sbb
stos
movsl
fs
rorl
push
xchg
cmc
mov
mov
pop
push
ss
push
xor
jo
dec
xchg
fldt
or
jo
sbb
jo
hlt
aad
xchg
push
arpl
push
add
fisubrs
xor
test
add
cmpb
fstpl
das
or
jo
sub
jnp
mov
jo
push
mov
jns
pxor
repnz
jbe
sahf
divl
jge
jo
sub
add
enter
inc
sub
test
and
mov
sub
or
imul
js
fstl
notb
popf
rcrb
int3
insb
sbb
enter
int3
aaa
das
jo
push
aam
addr16
jo
pop
lock
jp
pop
add
dec
lahf
dec
popf
in
mov
test
cld
inc
lret
je
out
pushl
jo
call
scas
outsb
lods
inc
mov
xor
cmpsb
insl
inc
out
ret
sbb
or
mov
pop
adc
test
popa
nop
std
outsb
addr16
sbb
pop
jae
movsb
jb
movsl
loopne
dec
sub
push
lcall
mov
dec
ret
pop
testl
fs
mov
adc
popa
jo
mov
xor
mov
sbb
lcall
fs
jo
fwait
xchg
pop
add
rcll
inc
enter
mov
ss
stos
lds
in
cmc
xchg
pop
jno
icebp
jmp
ret
testl
jns,pn
ja
dec
jbe
pop
xor
sub
pusha
sub
push
enter
jo
aad
hlt
jns
and
jo
sarl
push
lahf
dec
adc
in
xlat
jo
mov
mov
push
rcrb
jge
arpl
faddp
jo
cmpsb
sub
cmpsl
xor
lea
pop
adc
int
cli
push
bswap
rol
lods
je
std
dec
jo
flds
inc
mov
cld
lcall
mov
mov
mov
je
xchg
push
sete
mov
cmpb
test
jno
jno
jo
ret
adc
mov
mov
jmp
pop
loope
and
jo
xorl
jo
scas
imul
mov
mov
pop
mov
pop
subl
gs
hlt
ret
xchg
fiadds
or
ds
scas
and
sbb
movsl
or
jo
sbb
popa
mov
add
or
bound
jae
imul
pop
shll
cmp
lret
mov
push
and
xchg
hlt
movsb
jo
es
das
fistps
adc
push
repnz
cmpsb
jns
fldl
jne
sub
std
pop
push
jo
shl
mov
jo
push
and
cmpsb
leave
add
mov
lods
shll
mov
dec
sub
jno
lea
xor
mov
test
mov
push
out
punpckldq
data16
jle
sarl
and
xchg
inc
xor
call
mov
ret
cs
mov
push
pusha
dec
or
mov
and
daa
xchg
mov
cmp
jns
pop
xchg
nop
cvtps2pd
data16
dec
push
sahf
aaa
lea
mov
jg
inc
add
lret
addr16
mov
pop
pop
rolb
cld
push
bound
ret
lock
push
sub
dec
sub
xchg
xorb
mov
stos
inc
cld
scas
jo
mov
loopw
adc
cmp
into
mov
sub
xchg
int
insl
pop
imul
adc
leave
mov
aaa
clc
dec
scas
sbb
out
mov
push
sbb
sub
hlt
mov
jo
insb
lods
fisttpll
int
gs
jo
inc
pop
ja
pause
xor
in
push
sbb
mov
cld
orb
in
sarb
mov
dec
mov
scas
mov
push
jo
int3
cs
imul
cli
mov
sahf
into
es
je
orl
enter
mov
inc
sbb
dec
aas
roll
ljmp
fildl
outsl
ja
movsb
js
cmp
hlt
xor
out
paddusb
or
pop
xor
inc
xchg
in
insl
mov
fldenv
or
or
nop
adc
sub
ja
push
mov
outsb
xor
cmp
jecxz
jo
dec
rol
cmp
inc
pop
leave
daa
movsb
push
iret
addr16
sub
lret
cltd
int
push
xchg
push
mov
jo
mov
push
mov
sbbl
or
jo
pop
or
adc
push
jmp
popa
cli
sub
pop
jo
loope
dec
sti
push
ret
push
push
roll
xchg
push
sarb
cmp
jo
xor
fucom
xchg
out
lret
push
xchg
mov
mov
mov
jmp
xor
jo
rorb
fneni(8087
jge
lret
mov
cmovbe
or
je
inc
std
jo
add
fildll
jo
and
xchg
shlb
xor
push
xchg
cmp
mov
test
sbb
add
std
mov
inc
jmp
and
jbe
mov
das
add
shrl
jo
popf
cmp
loope
mov
in
xor
mov
rclb
xchg
or
pop
stos
cmp
cmp
cmp
jo
push
jle
sbb
cmp
outsl
or
xor
jo
bound
stc
pop
mov
mov
add
in
lcall
dec
loope,pn
mov
jno
stos
andb
jbe
test
mov
mov
push
call
jo
jl
jae
xlat
cmpsb
jo
imul
movsl
jns
ror
cwtl
pusha
insb
push
jo
test
mov
push
int
xor
out
mov
cmp
repnz
xchg
dec
push
or
mov
and
icebp
push
icebp
inc
jo
mov
iret
xor
jmp
clc
es
insl
test
pusha
enter
shll
in
mov
jb
mov
test
jo
pop
dec
sbb
add
sub
ja
pop
fs
lds
jecxz
dec
in
xor
push
lods
or
ret
jl
insb
clc
test
jo
mov
and
sub
aas
cmp
jo
es
lods
sbb
mov
mov
jle
ret
jns
mov
sbb
outsb
daa
gs
mov
push
inc
pop
cmp
cmpsb
jae
hlt
into
pop
mov
ret
ficoml
dec
test
jo
sbb
pop
orb
out
push
fs
mov
pop
or
mov
push
or
cmp
out
jo
mov
cmpsb
pop
jo
pop
ja
scas
push
xorl
hlt
push
inc
push
lock
loopne
jo
lods
or
in
enter
cmp
dec
sahf
jno
aaa
and
sub
cmp
push
xchg
aas
inc
gs
imul
inc
xor
out
xor
ljmp
jo
decl
pop
lea
jo
out
les
inc
jo
insb
fsubrp
subb
fdivl
mov
nop
xor
inc
jl
out
jo
xor
lods
addr16
jo
cld
mov
or
xor
je
mov
sbb
loopne
movsl
fistl
idivb
xchg
push
jle
jo
push
clc
sub
sub
repnz
xchg
jo
shll
into
xchg
outsb
mov
pop
inc
xor
ret
pusha
ret
bound
nop
mov
in
cwtl
pop
ja
fists
mov
inc
mov
jle
jp
push
jo
xor
cltd
rcrl
jns
mov
xchg
pop
int
clc
sarl
ret
arpl
rep
mov
out
push
dec
cli
xor
pushf
sub
bswap
add
leave
outsb
push
shlb
ss
lds
lock
add
orb
jbe
jo
inc
and
mov
xbegin
call
or
jo
add
jo
cmp
fdiv
push
cwtl
lret
pop
js
jbe
pusha
shlb
pop
lcall
xor
xorb
pop
adc
ret
mov
pop
cmp
jmp
mov
or
xlat
lea
push
imul
cmp
jge
lds
int
lret
sub
jo
or
dec
push
jo
pop
mov
sub
push
scas
data16
cmpb
outsl
in
adc
stc
or
push
sahf
loop
mov
scas
andb
jo
leave
sub
sub
adc
lods
mov
jnp,pt
jno
shll
mov
sarl
lds
das
js
mov
sub
cmp
and
rorb
repz
jo
pop
xor
push
fisttpl
mul
add
testb
xor
jo
icebp
iret
and
mov
push
inc
repnz
js
bound
push
mov
aad
leave
stos
rorl
inc
jo
cs
mov
in
push
leave
mov
stos
push
subl
movsb
and
fistps
dec
ret
out
ja
mov
jo
mov
jbe
imul
scas
adc
sub
cmpsb
sub
movsl
subb
bound
rcrl
aas
lds
add
push
stos
arpl
push
fnstcw
pusha
adc
pop
inc
jo
lds
daa
dec
xchg
push
hlt
cmc
orb
mov
jmp
cmpsb
sub
scas
lds
xchg
ljmp
sbb
push
add
dec
ret
jo
repnz
jo
mov
pop
push
jo
ret
ds
push
mov
dec
push
and
popf
add
imull
mov
mov
xchg
or
mov
leave
mov
addb
repnz
jo
pop
jg
dec
loop
dec
jo
lds
bound
popa
push
jo
pop
rcll
jb
pusha
and
ficoms
nop
inc
fsubs
jle
push
test
mov
or
lea
enter
mov
add
or
les
jp
insl
inc
jo
stos
je
jmp
out
push
rol
hlt
daa
sbbb
lods
jo
mov
les
gs
add
dec
mov
ret
mov
jecxz
jo
add
xor
sti
inc
rcr
arpl
and
adcb
jmp
hlt
pop
push
cmp
shll
cmpsl
fsts
leave
mov
std
sub
and
inc
push
sbb
movsl
testb
sbb
jo
fdivl
aam
xlat
and
jo
lds
dec
jo
call
add
push
imul
sub
je
in
push
cld
test
jo
cmpsl
jle
jg
sub
jo
mov
inc
aaa
cmp
ret
jo
gs
das
cmp
lds
cmp
mov
inc
pop
jo
add
inc
jo
jns
fildl
pop
adc
ret
in
std
jo
dec
iret
mov
popf
mov
pushf
mov
xlat
aad
pop
mov
jecxz
cmp
cmp
inc
insb
fimuls
add
jo
nop
pop
mov
cs
jbe
push
jge
les
push
sub
jmp
lock
jo
popa
int
aad
vpshuflw
xchg
mov
jp
xor
cmc
add
jmp
dec
addr16
cmc
js
push
data16
or
mov
sti
xor
sub
in
or
shrb
scas
push
fisttps
js
fwait
out
in
sbb
fldenv
in
xlat
jo
or
in
cmp
add
fdivrl
lock
inc
sbbb
xchg
push
leave
jl
jo
adc
add
leave
jo
jb
or
inc
add
jo
pop
inc
mov
cs
les
aas
jbe
jns
ficoml
loope
sbb
and
into
int
ret
aas
out
jp
jo
pop
out
jbe
inc
fnstcw
dec
iret
push
lcall
inc
lods
sbb
fs
movsl
pushf
bound
xchg
add
rcr
add
sub
mov
jo
movsb
ss
mov
shrl
shrl
add
sbbb
jo
mov
add
pusha
mov
jo
mov
lds
loope
mov
nop
xor
inc
mov
push
test
pop
negl
add
inc
mov
mov
cwtl
nop
test
stos
fisubrs
pop
and
mov
add
outsb
jmp
pop
jl
inc
jge
int
rcr
outsl
fwait
push
js
add
addr16
jnp
jo
cmp
add
or
and
jne
jo
call
lods
enter
xchg
dec
out
lock
sub
jo
loopne
inc
and
mov
or
or
sub
mov
cmp
jo
test
jp,pn
jo
dec
adc
xor
dec
add
cmc
mov
add
jl
push
sbb
mov
sub
cltd
je
xor
adc
ja
bound
add
inc
jo
xchg
aam
scas
scas
shll
pop
jo
loop
mov
sti
ret
adc
jo
xchg
or
push
pop
push
xchg
xor
js
add
adc
sbb
and
and
add
loope
adcl
or
clc
fnsave
popa
leave
add
and
lds
inc
lret
call
xorb
jecxz
cmc
fdivs
jo
ret
pop
ss
add
jo
and
out
jo
sub
mov
jo
lods
into
mov
bswap
ret
jmp
je
loope
psubw
popf
repz
and
mov
insb
inc
xor
stos
or
aas
inc
les
aad
movsb
imul
jno
cld
std
data16
jmp
jo
test
jb
mov
aaa
std
pop
loopne
or
test
sbb
nop
mov
sarl
xor
jo
cmp
jecxz
fs
lret
push
mov
ret
inc
xorb
add
xlat
jecxz
pop
scas
loopne
aad
cmp
ss
dec
adc
lcall
arpl
push
std
movsl
jb
jo
xor
xchg
push
jecxz
popa
in
pusha
mov
stos
in
pshufw
pop
cli
sbb
xchg
iret
adc
inc
ret
jmp
push
int
xor
pop
bound
cwtl
jo
loopne
push
mov
f2xm1
add
pop
test
jo
addl
xchg
jbe
jo
sbb
cmpsb
lret
cmp
and
stc
jmp
mov
mov
sbb
movsl
mov
insl
push
std
ret
sub
xor
aad
cli
jo
insb
ret
cwtl
jno
lock
mov
subb
imul
lds
jo
sbb
test
in
ss
inc
in
jp
or
pop
pop
adc
shll
movsl
push
xchg
loopne
inc
push
jmp
ljmp
xchg
jns
jo
pushf
loopne
sub
int
adc
inc
jo
or
mov
jo
ja
insl
test
xor
mov
jo
enter
call
jo
push
rclb
sbb
pop
imul
je
xchg
jo
xor
loope
in
in
mov
sub
jo
divb
rorb
jo
push
pop
in
inc
lds
xchg
mov
ret
mov
mov
mov
pop
mov
or
cmp
popf
cmc
dec
jne
xchg
inc
std
jo
push
fsts
xchg
cmpsb
ret
inc
fcoml
aad
lods
dec
sub
fisubs
jo
loop
leave
out
int
add
js
cmp
stos
jo
daa
roll
insl
xchg
or
and
xor
cmp
cli
sbb
das
adc
lds
nop
pusha
ficoml
dec
in
push
cmp
jo
jge
jmp
leave
xor
xor
ds
ss
push
rcrl
lds
jo
or
sub
cltd
inc
xorb
loope
inc
jmp
ds
outsl
ja
dec
mov
mov
sbb
push
fcmovnu
inc
hlt
xor
movsl
lahf
stos
sub
jo
ss
cmp
int3
bound
xchg
mov
mov
xchg
ljmp
repnz
inc
adc
aaa
mov
jmp
and
stos
xchg
outsl
jo
cli
fstl
inc
mov
jo
and
lds
jge
icebp
subb
mov
pop
add
jo
xchg
out
dec
mov
jae
add
or
xchg
jo
cli
pop
movsl
mov
push
and
mov
mov
mov
stc
mov
push
nop
add
push
and
iret
adc
orb
add
xlat
sbb
les
push
push
jo
push
jae
dec
cwtl
jbe
pop
jo
inc
dec
or
pop
jo
xor
leave
fcoms
adc
jo
ret
cmp
jae
xlat
sub
jno
push
inc
frstor
mov
sahf
ficomps
pop
jo
add
icebp
ss
sbb
fstpl
jo
add
pushw
mov
or
in
cmp
sbb
ljmp
shl
push
mov
jmp
subl
mov
mov
jle
ja
adc
jne
push
shlb
dec
ds
push
loope
mov
xchg
xchg
jae
push
jo
lcall
mov
xlat
push
mov
push
leave
stc
mov
ret
andl
adc
cmpsl
pavgb
cmp
iret
mov
jo
inc
lea
std
xchg
jo
jmp
ret
push
jo
es
mov
cwtl
cmp
fcoms
adc
jo
out
mov
aas
jo
inc
or
mov
icebp
notrack
psrlw
xorl
xor
xchg
popa
xor
lret
adc
pop
jo
shl
addr16
or
push
scas
dec
in
enter
ror
and
dec
imulb
iret
or
mov
movsl
pop
insb
sbb
cwtl
push
adcb
cli
mov
adc
cmpsb
js
dec
ss
and
jo
xchg
push
outsl
popf
cld
mov
shrb
push
sbb
es
jo
sbb
mov
push
pop
fldln2
push
jo
sub
daa
xchg
and
repz
dec
movsb
cmpb
scas
adc
aad
cmc
movsb
xchg
mov
frstor
add
mov
xchg
je
mov
mov
or
inc
jo
cmp
lds
xchg
jnp
mov
int3
loope
add
les
sbb
jo
mov
shrb
ret
push
mov
bound
cmpsb
add
mov
and
jo
aad
out
inc
les
push
jecxz
adc
notl
jo
pop
rcl
xor
mov
jge
and
mov
sbb
aad
jo
fst
leave
inc
jno
jo
cld
fnstcw
adc
inc
orb
or
insl
das
adc
jno
sub
sub
loop
sbb
sbb
and
adc
jno,pn
jo
sub
sbb
fcos
mov
add
lds
movl
pop
jo
push
ss
jae
jo
leave
sub
shlb
jo
inc
scas
jmp
sub
push
repnz
push
cltd
push
jo
ss
out
icebp
or
mov
lds
sub
or
and
in
test
inc
or
mov
xchg
xchg
xor
sub
cli
lock
fbstp
sbb
addr16
push
sub
mov
fidivl
leave
jl
mov
add
arpl
or
jns
mov
and
push
jo
movsb
shll
sub
add
popf
mov
and
repnz
lods
insl
xorb
pop
ljmp
push
fnsave
pop
insb
or
rclb
sahf
dec
imul
mov
dec
push
movl
jle
mov
femms
out
stos
mov
cmpsl
test
bswap
xchg
shll
insb
daa
sub
adc
and
xchg
inc
push
aas
xlat
or
jo
je
xchg
fisttps
xor
popf
push
subb
mov
pop
test
pusha
imulb
insb
aam
jo
cli
add
mov
jg
int
pop
push
mov
notb
loop
push
lea
sub
outsb
ret
mov
mov
std
adc
adc
mov
xchg
jo
cwtl
out
imul
leave
pop
arpl
and
inc
sub
psraw
aas
test
xor
lock
pushf
das
jl
repnz
fdivl
sahf
idivl
nop
lret
push
gs
popa
insb
xchg
rcrb
inc
pop
and
xchg
leave
pop
iret
lmsw
add
jle
push
out
test
jae
mov
sbb
out
movsb
arpl
icebp
jmp
push
xor
imul
fs
lret
jl
jp
jb
in
insl
adc
in
ret
jbe
faddl
lss
int
jbe
je
jo
rcrb
loop
push
jp
jo
pop
cltd
lods
mov
jmp
jo
lahf
imul
subl
xor
push
jmp
xchg
das
fs
nop
and
pop
jae
ja
xor
orb
pop
and
jo
jns
ret
adc
push
enter
in
xchg
pusha
push
pusha
dec
je
mov
loopne
jo
jge
xor
sbb
js
xor
dec
jmp
call
jecxz
jo
xchg
data16
push
repz
lret
cmc
rorb
jo
aaa
clc
sbb
lods
shll
cmp
inc
xchg
jb
jo
lock
cmp
inc
xchg
sub
stos
jo
fwait
pop
cmp
mov
sub
and
roll
shlb
mov
inc
jo
rcr
add
das
jp
sbb
movsb
xor
lods
jmp
outsb
sub
dec
pushf
cmc
leave
push
jo
lret
cmp
loop
sbb
push
cs
jg
push
ficoml
paddsb
jns
inc
push
xchg
stos
rorb
xchg
shll
negb
std
cmp
mov
je
jecxz
outsl
push
cli
mov
dec
insb
jecxz
nop
mov
inc
ja
sub
pminsw
pop
sbb
jle
and
xlat
mov
rcl
scas
cli
jo
js
push
pushf
jo
mov
cld
or
dec
nop
push
sbb
call
sub
mov
je
push
cmp
sbb
jo
xchg
mov
xor
mov
lea
inc
ret
push
je
sbb
add
mov
ja
mov
xchg
pop
jecxz
push
js
scas
dec
dec
popl
xor
cltd
jo
popa
mov
jo
xlat
in
xchg
pop
xor
out
out
xchg
test
mov
push
test
in
in
xor
adc
sar
arpl
inc
popf
leave
adc
jp
les
into
lds
ret
adc
out
pop
and
push
mov
mov
hlt
inc
xorl
inc
cmp
shll
adc
insb
xorb
and
test
jns
jo
add
vpshuflw
inc
lea
xchg
jo
pushf
call
jo
imul
mov
cmp
sub
sub
or
mov
dec
mov
fs
fdivs
dec
aas
and
mov
ret
bound
push
lods
nop
lret
pop
push
or
sub
roll
mov
push
test
xor
outsl
pop
loopne
push
js
fldl
cmc
das
pop
pop
stos
rclb
and
inc
call
jo
adc
adc
xor
jo
inc
std
cmp
jmp
out
sbb
sub
je
push
push
stos
orl
cltd
xor
lret
jo
push
xchg
mov
mov
out
insl
sbb
scas
imul
inc
xor
mov
je
in
in
pop
scas
xor
cltd
pop
scas
jo
mov
jo
xchg
in
lea
xchg
lods
ljmp
leave
jo
sub
push
ret
test
jno
cmp
test
or
test
bound
aad
jo
ja
lods
cmp
sub
movsb
inc
adc
push
sbb
jae
pop
sbb
push
in
lock
or
xor
mov
gs
mov
leave
stos
hlt
sub
andb
jo
aam
sbb
jo
inc
xchg
push
icebp
and
popa
rorb
lret
out
mov
movsl
lea
add
jno
sub
fnstsw
push
jo
nopl
push
add
outsl
ds
gs
jmp
fstpt
mov
ljmp
adc
xchg
dec
fcoml
lds
xor
add
in
pop
cmp
sti
jg
push
jo
stc
pop
outsb
mov
xlat
adc
inc
shrl
ret
add
aad
scas
out
arpl
and
nop
xor
ja
sub
psubd
pop
adc
mov
or
insb
int3
int
jne
jo
sbb
and
sub
jo
in
test
cmp
jo
aaa
aas
cli
arpl
addr16
jo
shrl
std
mov
lret
jo
mov
or
jo
dec
test
insl
addr16
jo
cli
call
or
hlt
movsb
leave
in
cmpsl
nop
dec
mov
jne
imul
pop
jp
ja
xchg
add
shrb
mov
or
data16
fildll
pop
jo
adc
sbb
repnz
js
xchg
adc
mov
mov
push
loopne
or
je
xor
mov
mov
aas
jo
jp
scas
xchg
fbstp
xchg
pop
jg
xlat
rol
mov
lock
in
jo
shl
push
adc
jnp
push
fldenv
xor
mov
xchg
js
mov
je
push
repnz
enter
xlat
sbb
mov
hlt
shll
lret
xchg
jnp
cmp
pop
sti
dec
inc
mov
jmp
xchg
icebp
jo
daa
sahf
ss
dec
xor
movhps
dec
jo
jle
xor
lods
jl
into
xorb
adc
jne
scas
in
hlt
add
in
cli
jo
push
adc
sub
jo
lods
out
aaa
in
xor
lds
addr16
sub
add
adcb
das
pop
sub
jo
shl
ret
or
rolb
jbe
lcall
push
pop
sarb
nop
test
sub
repnz
pop
mov
insb
icebp
test
hlt
pop
ret
stos
insb
push
jge
xor
pushf
js
cmp
nop
pop
mov
loopne
push
pushl
mov
cmp
jo
cmpsb
test
mov
fsts
jo
and
jg
and
scas
pop
xchg
add
inc
mov
xchg
adcb
push
add
aaa
call
pop
jo
jge
not
add
clc
daa
adcb
mov
mov
aad
xlat
in
jo
push
mov
aad
jp
and
add
mov
pop
lea
arpl
mov
cmp
dec
mov
js
inc
jae
adc
jo
data16
rclb
cltd
stos
and
out
cmp
icebp
das
and
push
or
mov
jo
test
inc
mov
fidivs
sbb
push
and
movsb
ret
jo
cmp
data16
jmp
add
cmp
js
adc
jo
adc
movl
aad
xlat
lds
in
out
bound
pop
xchg
nopl
jns
push
popf
andb
sti
pop
cli
jo
push
mov
clc
sbb
xchg
jo
movsb
dec
rcrl
ljmp
jo
out
addl
sahf
aad
mov
leave
jo
rorl
mov
jo
fwait
jbe
movsl
ds
or
sbb
lds
andb
jo
test
roll
jo
enter
lds
or
mov
inc
aad
jo
jne
jge
ss
rcrl
lcall
iret
push
es
jne
cwtl
mov
popf
rorb
jb
pop
push
jo
lcall
jo
les
sahf
loopne
ret
jo
daa
xchg
data16
push
pop
add
icebp
jnp
notl
pop
aad
sbb
push
outsl
jo
lcall
sub
in
aas
jo
mov
out
jne
iret
xchg
jo
ffree
add
mov
mov
ljmp
stc
push
mov
loope
sub
jo
adc
ss
out
dec
adc
test
popf
mov
pusha
data16
shl
mov
shr
dec
jbe
jo
leave
mov
push
cmp
in
adc
out
jmp
gs
or
jbe
jb
jo
add
sub
xor
dec
cld
mov
shr
bound
mov
dec
dec
jle
push
aas
dec
rcrw
push
inc
jo
inc
sbb
nop
leave
or
hlt
mov
jns
fisttps
addps
mov
xchg
fimull
mov
mov
lods
and
lea
les
push
xor
je
rcl
cs
or
jo
out
jo
movsl
hlt
or
fdivs
js
aaa
cli
popa
add
jo
and
pop
and
inc
push
je
arpl
out
jo
xchg
aas
shll
mov
stos
ret
shll
xchg
aam
cmc
push
adc
insl
jo
cmp
test
pop
or
pop
bound
mov
push
xor
dec
add
imul
add
jo
xor
pop
jo
fnstenv
ss
mov
clc
nop
lock
pushf
lods
dec
gs
fwait
lds
mov
nop
shrb
mov
jno
cmpsb
stos
nop
mov
idivb
out
and
mov
aam
bound
jl
shrb
cmp
fs
xor
jo
aas
jecxz
pop
pop
push
gs
xchg
loope
or
scas
mov
sbb
pusha
rol
sbbb
jo
mov
xchg
adc
fs
dec
cltd
add
jo
test
shll
int
cs
sbb
fs
and
insb
data16
in
das
fwait
in
ds
stc
inc
jo
ret
sbb
fiadds
fs
iret
lods
pop
das
or
or
lds
jo
push
test
mov
and
jb
jo
xor
or
add
xchg
out
or
jecxz
outsl
je
cmc
mov
leave
mov
lretw
lsl
and
incb
out
jb
add
rcrb
rcrl
sbb
cld
subb
jo
inc
add
lods
jae
sarl
jo
test
je
dec
aad
dec
repnz
ror
ret
mov
in
inc
jo
push
pop
jmp
jo
push
xor
popa
or
xchg
lea
lcall
test
jo
sahf
data16
je
jo
pop
iret
cmp
push
out
insl
jo
and
testl
and
and
inc
out
ds
adc
leave
jo
xlat
pop
push
sub
lds
sub
or
push
mov
leave
mov
mov
push
pop
rolb
rcrl
jne
sub
mov
mov
jl
mov
cmpb
shll
out
push
mov
in
push
faddl
jg
add
cmp
jo
ss
mov
mov
jns
andb
roll
inc
insb
cwtl
mov
push
movsl
jge
jo
mulb
lret
icebp
jo
das
inc
test
mov
sub
sbb
out
inc
inc
fidivl
pop
popf
divb
add
loop
mov
push
mov
xor
call
jo
inc
jp
in
insb
dec
out
js
test
push
pop
ret
mov
fbstp
jecxz
inc
jo
inc
aas
out
jl
jo
or
fldcw
fstpl
test
jns
push
pop
jo
pop
ficoms
jo
adc
daa
push
cmp
jnp
mov
inc
sarl
jge
mov
inc
xchg
and
push
push
std
mov
pusha
ror
sub
decl
jns
and
test
addb
nop
jo
std
andb
les
jo
andl
lea
rcrb
dec
hlt
sub
mov
mov
les
mov
cmp
movsl
jo
dec
or
push
dec
in
bound
jo
cmp
imul
mov
xchg
jecxz
jo
mov
mov
push
aad
or
into
xor
push
sbb
cmp
push
mov
jo
inc
xchg
push
and
int
addb
xlat
xchg
dec
out
mov
cmc
jo
push
leave
movsl
popa
mov
xchg
add
cmp
outsl
dec
fs
out
cmp
ds
nop
aad
fldcw
push
jae
xchg
leave
jo
scas
test
mov
aam
jo
mov
xchg
pop
jo
arpl
push
das
movsb
mov
call
icebp
jns
or
cmc
dec
jo
jmp
or
sub
push
faddp
push
inc
insb
jo
jb
out
pop
adc
pop
lahf
push
jmp
jo
mov
mov
and
aas
jo
sub
mov
push
data16
sbb
and
cmpb
loope
push
inc
ret
lahf
and
jo
loopne
adc
lds
sub
inc
leave
pop
out
adc
sub
add
inc
xchg
flds
punpckhdq
xchg
movsl
in
jo
jb
and
rcrl
push
popl
mov
fildll
cmp
pop
vmovntps
xchg
scas
cmpsb
inc
scas
cmp
pop
je
loopne
divb
into
add
lcall
xchg
add
daa
lock
mov
ljmp
push
mov
jp
ljmp
dec
push
pushf
jbe
in
push
ja
fsubrs
imul
idivl
mov
xor
jo
out
stos
push
mov
dec
inc
nop
jge
addb
ja
fs
inc
xchg
cmp
enter
aas
adc
js
insb
fwait
rcll
insl
mov
les
pop
or
fwait
cmp
xchg
sbb
xor
jns
fadd
jo
adc
push
das
fstpt
in
jo
lcall
cmpsl
sbb
call
outsl
sub
jo
pop
out
add
sbb
popf
xorl
jp
lods
jo
sub
mov
mov
arpl
jp
aas
ja
mov
pcmpeqw
popf
adc
pop
insb
cmp
or
inc
push
pushf
sub
lahf
xchg
gs
jb
data16
jo
cltd
mov
ret
jo
clc
pop
inc
test
lds
push
cld
mov
mov
sub
jo
mov
pop
add
add
orb
and
sub
js
mov
js
xor
sbb
and
movsl
fnstsw
jo
sti
dec
mov
movsl
lea
lret
mov
jmp
enter
sub
adc
rcr
jo
test
ret
icebp
jo
mov
loop
aaa
and
js
inc
stc
or
and
shll
pop
loop
inc
and
aas
sub
jo
inc
lds
jmp
or
gs
pop
ja
stos
jo
cmp
mov
jo
ljmp
shrb
adc
shl
xchg
sub
shrl
popf
inc
xor
cmp
mov
jle
fidivs
clc
std
and
push
int
call
jns
mov
xchg
inc
mov
pop
repnz
pop
cmpsb
push
icebp
je
ss
push
inc
mov
ret
loop
shlb
out
repnz
clc
pop
sbbb
and
ret
xchg
frstor
je
inc
ficoms
cmp
js
mov
mov
add
out
adc
lahf
cmp
aam
ja
out
jo
xchg
xchg
mov
pushl
xor
sub
jo
aaa
sbb
out
cli
fiadds
mov
bound
movsb
jo
xor
pop
addr16
jo
jp
rolb
cld
push
mov
mov
loop
addl
das
add
insb
jo
cmp
popa
inc
inc
push
jo
pop
and
adc
xor
sarl
xchg
jbe
jmp
fstl
cmpsl
sbbl
jne
and
in
cmp
adc
fwait
add
push
dec
jo
cmp
adc
dec
enter
mov
jl
icebp
mov
pusha
out
cmpsl
jb
mov
lock
jp
push
xchg
and
sbb
push
in
xor
push
mov
inc
inc
testb
cmp
add
out
mov
dec
pop
jo
and
imul
inc
jo
mov
sub
inc
mov
mov
mov
data16
jo
push
fistps
les
pop
mov
push
push
mov
hlt
flds
push
mov
xor
jmp
push
mov
sub
cwtl
or
pop
jbe
adc
lahf
movsb
les
fildl
lock
jl
or
add
add
inc
bound
lahf
decl
jo
lds
mov
adc
int
jo
je
mov
jo
stc
rcrb
pop
int3
sbb
xor
cmpb
mov
ja
aam
pop
inc
shll
nop
and
jne
shll
fadd
and
stc
sub
aam
ljmp
stos
cmp
or
psubsw
push
fimull
repnz
or
mov
loop
lds
xor
out
xor
jo
ret
mov
in
mov
cmp
lds
pop
jmp
jecxz
sub
test
jo
mov
push
or
lods
jo
push
xchg
and
mov
xor
lahf
sbb
pop
faddl
jo
popa
adc
aad
cmpsb
test
aaa
imul
into
js
cmp
cmc
jo
inc
mov
fstpt
jo
xor
int
daa
inc
dec
add
inc
sub
and
loope
pusha
lret
mov
roll
jo
fmuls
xorb
fst
xchg
or
nop
jae
or
jg
or
sub
out
push
jns
xchg
jo
movsl
js
test
mov
cmpsl
mov
adc
sbb
and
inc
ljmp
mov
jo
psllq
inc
xchg
dec
mov
jo
insb
stos
scas
ret
std
jo
idivl
sbb
jo
jno
in
int3
repz
stos
cmp
jo
lcall
sub
lret
into
inc
cmpsl
jo
push
iret
or
xorb
sarl
inc
call
popa
xor
jo
pop
xor
cmp
jle
mov
clc
pusha
push
lcall
fs
loop
pop
cmp
pop
loope
frstor
mov
lret
jne
pop
jo
mov
cmpsb
fadds
int3
jo
das
sub
sub
andl
dec
xchg
inc
hlt
jo
je
icebp
insb
mov
addr16
xchg
mov
imull
jg
mov
iret
add
inc
nop
jmp
push
cli
adc
test
sbb
pop
daa
testb
inc
dec
cs
xchg
in
sub
fiaddl
cmp
imul
and
lahf
inc
rcll
lods
arpl
mov
inc
xor
repz
aaa
stc
cmc
inc
jo
jge
and
data16
jo
mov
and
iret
movsl
fcoml
or
jbe
icebp
xorl
std
aaa
mov
leave
les
adc
dec
mov
nop
shlb
and
pop
aaa
sub
jle
fstpl
out
jo
pop
mov
pop
sub
scas
jl
adc
mov
xlat
cli
daa
es
inc
andl
mov
ret
jo
push
scas
mov
inc
hlt
inc
sub
sub
nop
jg
nop
and
lea
jl
mov
adcb
andb
add
jl
in
negl
shrl
hlt
das
in
loope
std
imul
jo
inc
ja
jnp
xor
psubw
sub
cmc
jle
sbb
push
aam
push
add
lods
jbe
mov
inc
jo
xlat
shlb
jnp
stos
dec
lock
mov
add
orl
inc
nop
dec
and
mov
xchg
jb
call
hlt
shl
adc
lea
std
cld
loopne
xchg
movnti
inc
mov
push
jo
mov
inc
pop
jo
iret
sbb
shll
jo
mov
ret
aaa
loop
sbbb
fidivrl
rcrl
push
out
shll
insb
mov
and
scas
mull
lods
flds
jmp
mov
sbbl
clc
sbb
ljmp
jns
xchg
jnp
aaa
fs
mov
cld
adc
cmp
bound
inc
or
mov
fiadds
subb
sub
lcall
sub
int3
or
je
roll
mov
nop
xchg
ljmp
jle
pop
mov
int3
xchg
aas
mov
jnp
xor
push
out
sub
sub
xchg
hlt
or
das
ds
lea
jg
mov
xor
lds
cs
add
adc
jo
adc
jo
adc
ret
pop
push
pop
xchg
jo
imul
pop
lds
jo
cmp
or
ds
mov
jp
inc
xor
jo
jnp
adc
daa
or
je
mov
adc
loope
cld
cmp
js
rorb
jo
cmp
das
cmpl
mov
shrb
mov
lea
js
xchg
mov
outsb
iret
jo
std
inc
mov
jns
mov
or
jnp
xchg
jle
jo
pop
mov
dec
imul
mov
xor
push
lods
push
mov
xorb
xchg
cmp
cld
out
jo
jns
jl
mov
test
pop
fldenv
xchg
or
repnz
sbb
mov
jno
jo
in
aas
dec
pop
cmpb
xor
jo
push
jmp
jo
xor
ds
cmp
jo
cmc
bound
jo
xchg
sub
scas
jo
sarl
jo
and
test
jb
jo
orb
mov
sbb
sbb
mov
push
movsl
mov
and
shll
lock
shlb
aam
loopne
lret
and
mov
arpl
push
test
jo
xor
push
sahf
mov
jo
or
xlat
out
mov
nop
stos
clc
inc
adc
aas
les
cld
pop
mov
or
sbb
pop
jo
ret
mov
lret
push
test
test
repnz
mov
out
jo
sahf
inc
popf
inc
std
call
adc
mov
jecxz
push
adc
in
pusha
xor
jo
mov
push
or
pop
cli
push
xchg
stos
bound
push
add
xchg
sub
popa
jo
test
cltd
cli
ret
jo
ffree
push
test
xchg
push
adc
push
jge
jo
cltd
jle
and
push
addb
xor
mov
pop
or
insb
xchg
jo
push
adc
movsb
test
mov
roll
insl
cmpsl
loope
jo
push
inc
or
das
ja
inc
xor
ljmp
adc
xor
cmc
push
ret
js
pop
or
movsl
and
icebp
add
fisubrl
sbb
mov
lcall
ljmp
sbb
shrb
inc
jo
xor
jo
pop
fnstsw
fisttpl
roll
sub
adc
pop
jge
aaa
cmc
int
inc
fs
mov
aad
insb
int3
pop
inc
lahf
lods
jo
out
mov
jo
cmpsl
xchg
sbb
cmp
cltd
jbe
cmp
cmp
ja
aam
int
cwtl
add
bound
inc
push
jo
enter
ret
sub
jo
sbb
daa
call
lds
clc
and
imul
or
jo
cmpb
jo
lods
mov
insl
jo
fbstp
test
and
aaa
cmp
andb
jae
shlb
in
inc
cltd
enter
in
jo
and
push
jle
push
sub
add
mov
or
cwtl
mov
icebp
loope
gs
mov
jl
ffreep
lds
adc
fsub
iret
test
xchg
cmpsb
dec
jnp
xchg
out
lock
adc
add
imul
addr16
and
push
jno
loope
loopne
or
jo
mov
or
hlt
jmp
ret
addr16
or
xchg
mov
push
mov
cmp
jo
sti
imul
loopne
jmp
mov
inc
sub
jo
xor
xchg
imul
lret
dec
mov
mov
mov
mov
jo
xor
cmp
jo
cmp
enter
jo
jmp
xor
xor
jo
push
rcrl
pop
jo,pt
ss
sbb
mov
test
loopne
pop
nop
repz
jo
fdivr
mov
pop
repnz
jne
imul
xchg
dec
ds
pop
inc
jno
bound
adc
out
mov
jmp
imul
das
lock
in
loopne
addb
insl
imul
jne
push
xor
mov
xchg
dec
out
sub
push
cld
xchg
jo
mov
lds
jns
outsb
dec
and
jo
shrb
out
lret
lods
or
movsb
xchg
loopne
mov
in
inc
mov
aad
popa
jo
cltd
inc
push
xor
inc
cmpl
shr
cmp
andb
xchg
jnp
jmp
jbe
push
add
in
lret
jo
push
insb
rclb
jo
sub
leave
clc
jl
in
pop
jnp
mov
mov
out
add
xor
cmp
lods
fistps
jo
mov
pusha
mov
mov
or
sbb
data16
sbb
aaa
add
jae
cld
and
xor
jmp
leave
mov
lret
ja
add
inc
lret
inc
dec
xchg
xchg
in
xchg
pop
js
add
es
push
lods
add
out
fisubs
push
pop
mov
sub
dec
jno
or
dec
fs
ret
je
push
outsb
jle
in
jae
int3
orl
sbb
sbb
aad
cwtl
xchg
jo
or
pop
sbb
mov
xor
xchg
cmpsl
jge
jo
out
sub
shll
popf
in
lcall
ja
adcb
fldenv
jmp
jo
std
inc
imul
mov
lds
adc
sbb
sub
jle
mov
iret
jl
xchg
inc
bound
in
sbb
cmp
mov
lock
cmc
shrb
mov
sub
push
repz
mov
jo
outsb
mov
icebp
insl
in
dec
hlt
and
call
mov
cmp
in
jo,pt
data16
push
xor
jo
out
cmp
lahf
mov
jo
ss
ja
dec
mov
jno
shll
xchg
aaa
jnp
addr16
push
leave
sub
mov
jo
push
rorb
sub
imul
stos
push
jne
add
jne
and
outsb
cwtl
or
and
inc
aaa
sub
inc
adc
into
adc
ret
mov
subl
fdivs
push
add
or
jo
push
lahf
sbb
and
add
vpshufd
jbe
scas
mov
jo
and
out
jo
loop
jno
cwtl
ret
inc
jo
mov
andb
mov
add
fmul
jge
jo
xor
testb
leave
adc
ffreep
and
adc
pop
cmp
cmc
xorb
jns
fdivrl
jne
ljmp
in
pushf
jo
sbb
adc
test
jo
ss
jbe
cmp
gs
jns
inc
jns
dec
adc
mov
std
out
rclb
or
xor
push
mov
sbb
sub
in
sbb
sub
test
cmp
ret
enter
mov
jo
sbb
dec
and
jo
jnp
lret
cmp
jo
pop
sub
popf
pusha
push
ss
jo
dec
pop
jp
or
or
ficoml
arpl
and
addr16
ret
test
jo
push
cltd
inc
push
lds
mov
je
mov
int
jo
mov
push
aad
outsb
push
fidivrl
add
icebp
ret
jbe
mov
push
xor
testb
nop
lea
mov
mov
push
lret
jo
lods
pop
into
jo
mov
mov
out
vaddsubpd
fstpl
lods
cwtl
loope
arpl
pop
xchg
test
mov
jns
jo
xchg
call
data16
push
jb
ret
sub
int3
repnz
push
outsl
icebp
popa
dec
bound
pushf
jo
push
xchg
and
sub
lods
and
clc
lds
jo
mov
shr
xor
popl
loope
jmp
or
loop
jo
mov
cmpsb
push
xor
jecxz
sbbb
divb
movsb
adc
xor
add
mov
fimull
sub
and
sbb
jo
pop
mov
stos
imul
ror
lds
jo
test
mov
jo
sub
int
cmpsl
movl
insb
push
addr16
loope
and
stc
movsl
and
wbinvd
jo
sahf
ds
outsl
mov
insb
andb
jo
lock
imul
out
push
std
rdtsc
xor
das
fs
dec
xorb
jmp
mov
sub
mov
notl
lods
rcl
mov
xorl
clc
adc
mov
das
pop
and
and
jecxz
or
jns
pusha
cmp
iret
cmp
pop
pop
test
sbb
push
push
scas
push
nop
sahf
jp
ds
fidivs
leave
and
addb
test
lret
jo
sahf
cmp
je
call
xchg
inc
or
xor
jo
pop
lcall
mov
gs
add
push
popf
dec
in
sarl
cmp
aaa
shl
sbbb
lahf
js
les
xor
jmp
ljmp
adc
jge
jo
sahf
pop
push
adc
mov
xor
into
popa
xlat
fimull
jo
cmpsl
sbbb
xchg
or
mov
jg
dec
gs
inc
xor
mov
lea
leave
jle
and
ljmp
or
dec
pop
push
sbb
jno
psrad
mov
jle
cvtdq2ps
adc
ljmp
lds
and
dec
pushf
xor
push
push
xor
fcomip
and
rcrl
sbb
jns
xchg
xchg
jo
inc
sub
xchg
dec
lds
jge
ret
test
sbb
mov
ss
aaa
ret
jo
xor
scas
les
inc
jo
iret
movsl
icebp
push
or
leave
cmpb
inc
jo
cmp
jo
pop
dec
out
add
or
mov
cmp
and
dec
inc
xor
popf
insb
dec
fs
shll
dec
inc
jmp
jmp
stos
xor
fs
shr
xchg
loop
add
push
sbb
or
call
enter
hlt
js
out
popf
xor
stos
sbb
out
fwait
js
mov
divl
mov
and
sub
xor
xor
jo
pop
stos
popa
lahf
inc
cwtl
xchg
jo
push
jns
stos
jmp
sbb
push
bound
jle
mov
jo
adc
test
lcall
cs
xchg
mov
mov
jo
adc
dec
sbb
sub
movsb
ds
jo
int
cli
mov
out
pushw
ret
out
xor
or
sbbb
decl
jo
loope
into
and
hlt
in
sbb
fsts
pusha
fidivrs
jne
test
push
arpl
fwait
jo
push
pushf
jnp
adc
sbb
cmp
jo
ds
jae
jne
push
jno
jle
jo
xor
cwtl
in
in
leave
iret
jo
sub
xor
or
rol
xor
std
sub
inc
mov
clc
adc
xchg
leave
cmp
flds
lock
mov
nop
sub
mov
sub
jae
xchg
sbb
or
stos
mov
ja
xchg
inc
xacquire
push
pop
mov
cmp
jo
int3
cwtl
stos
movb
inc
jo
cmp
inc
fbstp
lds
sbb
dec
outsb
cmpb
rcrl
jo
rcrb
imul
mov
jo
aas
cltd
adc
add
orl
jo
jb
dec
lods
adc
movsb
mov
sti
lcall
lock
js
ss
jo
inc
cmp
mov
jns
mov
mov
sbb
mov
pop
adcb
ret
xor
fsubrp
test
loopne
test
push
sub
jbe
jo
cmpsb
xor
jo
sbb
std
cmp
fdivl
fidivrs
test
js
mov
in
in
into
adc
lds
std
lret
pcmpgtd
les
mov
rorl
mov
leave
pop
ja
dec
mov
cmp
xor
test
js
mov
add
jo
add
jo
pop
cmp
jo
push
lret
adc
jo
mov
xor
movsl
lds
call
add
jo
jno
stos
cli
mov
xchg
outsb
sub
push
movsl
add
jo
in
xor
mov
jo
ret
imull
sbb
popa
mov
jbe
dec
sub
and
loopne
jo
cs
lds
jl
cmp
ror
addr16
pop
mov
jns
mov
jo
adc
push
cmpl
jo
and
sbb
fsubrs
adc
pop
cmpsb
and
sbb
dec
xorb
faddp
add
pop
sub
cmp
out
push
psubsw
xchg
xor
jle
adc
xor
scas
push
dec
cmc
lods
imul
or
mov
aad
subb
xor
mul
insb
clc
loope
shll
xor
inc
cmp
mov
xor
pop
andl
fcomps
inc
subb
test
jo
test
fs
cs
dec
inc
fistpl
addr16
xor
insb
mov
jmp
jg
mov
xor
scas
inc
sub
out
test
mov
mov
mov
jo
xorb
jns
push
fildl
pop
cmpl
aam
mov
sub
jp
jmp
mov
pop
mov
inc
jo
adc
fdivl
repz
outsl
jg
pop
mov
dec
les
xor
sub
ret
mov
push
imull
lds
imul
xor
clc
ja
outsb
add
push
xor
nop
ret
pop
fdivs
mov
mov
jo
mov
push
addr16
scas
sahf
add
ds
sbb
fucomip
std
shll
mov
aaa
mov
jno
and
and
jbe
mov
imul
lds
lcall
sbbb
add
out
jns
jo
movb
jo
ss
push
jb
nop
jmp
inc
mov
lds
jns
jo
xor
rorb
ja
adcb
gs
out
xchg
fstps
ret
push
sbb
jl
jnp
sahf
jo
xchg
jecxz
or
jo
lret
push
dec
cld
ret
inc
sub
inc
jo
inc
push
out
loop
xor
jo
lds
popa
jo
es
std
push
les
mov
jne
add
daa
nop
push
push
out
jns
pop
sti
movaps
out
mov
shrl
jo
mov
sahf
cmc
jo
sub
jns
jmp
dec
fwait
jnp
pop
fsubl
inc
jo
loopne
and
jo
xor
push
aas
dec
cmp
mov
jo
and
insl
pop
and
aas
js
inc
jnp
jo
adc
movsb
mov
std
add
scas
lds
pop
mov
sub
jo
xchg
lret
ret
or
inc
leave
push
adc
fwait
jae
jmp
lock
mov
jecxz
push
add
iret
inc
or
push
sbb
fbld
fldcw
js
cmc
jle
mov
push
int
push
icebp
cmp
dec
lret
cmp
cs
mov
aad
mov
sbb
adc
test
and
repnz
sahf
sub
adc
int3
out
jo
mov
inc
or
mov
sub
sbb
jmp
shl
mov
pop
dec
aas
adc
mov
js
sbb
adc
repz
mov
dec
pop
mov
xchg
cmpsb
jo
mov
mov
jno
pusha
pop
push
add
fmuls
inc
jb
push
xor
insl
adc
movsl
sbb
xchg
daa
das
jo
inc
inc
xchg
cwtl
and
mov
fidivs
je
int
pop
mov
rolb
dec
jbe
clc
sbb
pop
ja
test
in
and
cmp
sbb
push
fidivl
push
negb
adc
sub
mov
dec
mov
int3
mov
js
sahf
jg
test
daa
pop
jno
and
jo
mov
cs
imull
ret
xchg
jge
cmc
and
jb
mov
mov
jnp
xchg
std
jo
bound
mov
andl
dec
jo
mov
adc
ljmp
pushf
push
and
adc
flds
fisubl
js
sub
mov
imul
jmp
jo
daa
in
int3
addr16
mov
push
fisubl
sub
and
mov
jne
jl
push
js
test
adc
jns
aad
cmp
sub
add
push
iret
cmpsb
jnp
jo
icebp
pop
mov
ret
insb
nop
inc
cmp
push
lds
push
mov
and
sbb
bnd
jo
aam
push
sti
mov
sub
inc
loop
xor
jo
jb
shll
or
adc
fidivs
icebp
or
jo
pushf
aad
sub
jo
scas
inc
push
pop
loop
stos
jge
push
jns
test
mov
gs
dec
mov
jge
jo
rolb
inc
iret
dec
sub
jo
cmc
leave
into
adcb
jb
dec
add
mov
inc
jo
cmpsb
lds
sub
repz
add
xor
inc
addb
es
push
js
inc
or
add
push
loop
dec
mov
shl
and
adc
pop
rorl
cmp
and
stc
lea
sbb
punpckhwd
sahf
xor
push
mov
adc
popa
psubusw
je
jbe
nop
lock
add
sbb
mov
test
dec
jge,pt
std
ja
jns
jo
mov
iret
add
dec
cmovno
divl
inc
mov
pop
jo
xchg
imul
jo
sti
xor
insb
jo
stos
shr
cmpsb
jge
jo
sub
push
test
xor
lods
jnp
sub
daa
jo
xchg
jp
inc
adc
jle
loop
push
je
add
xor
aaa
out
lds
je
jo
jb
icebp
ret
and
mov
cwtl
inc
mov
push
mov
fwait
jo
xor
jo
mov
push
push
icebp
and
in
jo
pop
dec
das
ficoml
xor
xor
nop
shl
xchg
cmpsl
jo
or
aaa
lock
jae
inc
cmp
idivl
sub
mov
mov
in
pop
xor
rorb
cmpsb
add
rorl
fwait
xor
jp
jo
jns
push
jnp
cmp
iret
mov
and
icebp
add
jo
in
jge
in
rorb
push
cltd
dec
cmpsl
ja
jo
lahf
add
roll
ret
fisttpl
leave
shll
fstps
jmp
out
mov
push
out
cmp
jo
das
imulb
xor
pop
dec
jo
jmp
hlt
scas
jl
aas
nop
inc
test
jnp
jns
ret
jne
dec
lahf
xor
negl
sti
jo
aam
jp
dec
gs
cmc
adc
dec
jo
sbb
lret
cmpsl
xchg
bswap
test
sub
in
jo
sub
mov
nop
pop
mov
push
insl
push
roll
enter
cmc
arpl
xor
jmp
sahf
dec
sti
and
xorb
test
shll
adc
or
rcll
fdivrs
jl
ret
aas
test
notb
into
dec
ja
imul
jb
jo
cwtl
pop
nop
xchg
inc
sub
or
addr16
jecxz
cmpsl
jns
mov
loop
cmc
in
dec
rcll
cmp
adc
adc
jo
sbb
jno
xchg
inc
and
insl
push
adc
cmp
cmc
mov
mov
int3
jle
cltd
cli
or
jp
lods
sbb
lock
outsb
scas
gs
cmpsb
dec
push
add
in
xor
cs
push
rolb
jne
bound
add
or
test
add
jle
jne
das
icebp
and
pop
out
sub
add
xchg
divl
rcrl
mov
lods
add
aam
in
jo
inc
inc
in
std
ljmp
ret
ss
wrmsr
xchg
pop
mov
push
pushl
push
mov
xchg
jns
xor
shll
pop
lock
in
jp
mov
jo
push
inc
mov
in
and
hlt
adc
adc
pop
jo
xchg
push
in
jle
movsl
jo
xor
popa
movsb
je
cmp
cli
cwtl
icebp
les
sbb
dec
adc
pusha
xchg
push
mov
or
push
lret
and
mov
xchg
sub
jo
pop
sub
mov
push
jge
or
jae
jmp
pop
jg
in
pop
add
and
jo
pop
and
shrl
lret
fcmovb
mov
shl
mov
xchg
cli
push
or
add
mov
outsb
jno
jb
orl
add
push
sub
ret
mov
jo
shll
jo
iret
xchg
mov
jo
add
jne
add
jo
mov
pop
jnp
lea
lock
cs
repz
ds
es
cmc
gs
out
mov
mov
and
jae
mov
add
stc
rorb
js
mov
jo
leave
lcall
pop
mov
add
jmp
cltd
push
sbb
xchg
cld
lock
shll
rcrl
leave
call
std
or
jo
dec
mov
mov
stos
push
fwait
add
adc
ret
add
xchg
leave
flds
imull
mov
rol
cmovge
sub
push
cltd
pop
sbb
fs
pop
cmp
jo
repz
aam
mov
aad
scas
leave
lock
jo
adc
aaa
shll
in
sbb
jo
rclb
adc
mov
mov
add
cmp
loope
out
das
stc
mov
push
fcompl
pop
fidivl
pop
jns
mov
mov
xlat
lcall
fsts
iret
pop
jns
jo
push
jecxz
cmc
or
pop
push
push
test
push
jo
js
scas
cmc
and
loope
stos
std
cmp
xor
popa
dec
gs
jns
mov
cwtl
imul
notb
and
mov
xchg
loop
sbb
andb
data16
jo
cmp
aad
iret
lret
int
inc
orl
mov
insl
ret
data16
inc
and
cmp
adc
mov
jo
inc
hlt
subb
add
or
test
fidivs
jo
test
loopne
or
je
inc
pop
hlt
mov
out
dec
add
push
push
cmpsb
aas
push
push
jo
cli
mov
xor
push
nop
dec
pop
ret
fsubrl
jl
sti
jo
aam
and
cmc
xchg
push
push
in
add
push
xchg
jo
ret
xor
shll
push
pusha
dec
or
sub
jbe
mov
jle
sbb
jp
hlt
sbb
pop
pop
adc
mov
inc
aaa
lret
mov
iret
insl
in
sbb
ss
loop
fs
inc
popa
push
adc
sti
push
repnz
push
out
dec
push
les
int
inc
sbb
mov
out
mov
pop
in
leave
push
or
popa
jg
loope
insb
int
bound
xor
mov
roll
fsubs
xchg
fnsave
pop
sub
popf
popa
jo
stos
lea
andb
loop
shl
mov
data16
test
ret
mov
push
mov
add
mov
push
jo
dec
stos
xorb
sbb
push
js
dec
inc
and
sbb
xchg
xor
mov
jbe
jmp
mov
loop
scas
push
rol
jae
stos
add
xor
push
push
xchg
movb
jo
push
jns
mov
popa
stc
aad
or
adc
scas
xor
inc
or
and
test
nop
daa
mov
jb
out
rsm
push
cmp
and
popa
in
and
xchg
jge
push
sub
aam
adc
out
mov
add
jnp
or
jo
push
xor
lock
mov
cmpl
jmp
repz
push
je
lcall
mov
and
mov
add
lret
repz
push
int
in
js
popa
sub
add
xchg
call
jo
push
push
jo
int3
mov
imul
and
insl
jo
add
dec
inc
adc
lds
imul
shll
fisubs
jo
outsl
rol
jg
aas
jecxz
ds
std
testb
gs
pop
lds
popf
cmpsl
adc
cmp
sub
rcl
pop
jo
sub
scas
jg
or
jo
cltd
cmp
loope
mov
jle
jo
mov
jle
shr
fnstenv
adc
std
jo
jecxz
test
mov
sbb
lcall
jo
push
loope
aaa
shr
jo
imul
mov
jno
xor
mov
outsb
pop
xchg
mov
dec
je
test
lret
insl
mov
push
js
sub
push
outsl
ret
jo
jg
in
inc
and
clc
xor
cs
repnz
sbb
sti
sub
daa
inc
push
popf
test
int3
xchg
mov
adc
addr16
or
sbb
mov
sub
jbe
jbe
xchg
call
jmp
mov
dec
popa
fistpl
push
push
mov
cs
xchg
subl
sbb
mov
xor
iret
push
test
clc
lds
or
movsl
add
insl
sahf
or
imul
adc
and
not
push
sub
mov
mov
hlt
bound
loopne
dec
in
outsl
repnz
mov
vmptrld
pop
sub
or
lret
mov
mov
pusha
icebp
jo
pusha
nop
mov
into
std
jo
and
movsb
mov
xchg
sub
rcll
das
sub
insb
jecxz
shlb
leave
cmc
jge
jo
pop
and
mov
sub
lret
and
adcl
xor
movsb
loope
in
sub
outsl
xor
lock
push
mov
and
lahf
in
hlt
or
rcrb
pop
mov
xchg
leave
test
sahf
ret
mov
dec
sti
jo
insb
inc
push
or
rorb
lds
jb
dec
ja
out
dec
mov
jbe
aad
mov
loop
cmpsb
std
jne
jnp
push
inc
pop
xchg
hlt
mov
mov
jb
dec
enter
jle
mull
nop
pop
cmp
cmp
add
jno
mov
jns
mov
es
pop
mov
dec
mov
fnstenv
push
adc
jmp
insb
dec
addr16
jmp
add
sub
xor
dec
cmp
sbb
pop
inc
jo
inc
sub
sub
mov
sbb
icebp
push
lea
jo
jnp
dec
adc
adcl
and
adc
mov
xor
adc
stos
bound
mov
mov
shlb
jge
cld
pop
or
sub
js
std
repnz
inc
dec
imul
mov
fwait
add
and
shll
xchg
sbb
shll
ja
dec
ret
xchg
jmp
cmp
jo
xor
jo
daa
cltd
sbb
ljmp
xchg
mov
and
jo
andb
fwait
cwtl
add
leave
lds
sbbb
sbb
mov
addr16
xchg
jo
xor
jo
push
mov
les
stos
int
and
mov
cwtl
xor
sbb
fists
and
in
cmp
lock
das
test
sbb
frstor
jb
mov
lea
mov
or
mov
inc
jo
ret
adc
xchg
jbe
xorl
leave
jp
jo
in
xchg
imul
adc
adc
sub
jp
jo
cli
inc
add
repnz
push
mov
ljmp
movsl
push
pop
dec
pandn
pop
inc
push
jno
fwait
loop
jo
cld
ljmp
scas
mov
cmc
lock
cwtl
das
adc
mov
out
aas
add
bound
shld
loopne
inc
je
push
sahf
fs
in
cmpsb
shrl
xor
bnd
and
lds
insl
mov
movsb
jo
cwtl
jge
sbb
hlt
lahf
sub
jo
pop
ss
mov
jb
jmp
mov
seta
xor
out
or
cli
cmp
je
push
test
repnz
jg
add
das
test
and
cmp
ret
nop
call
inc
std
rclb
jno
sub
sbb
mov
cmp
inc
mov
xchg
inc
scas
push
inc
js
vpshufhw
push
popa
or
mov
xchg
push
out
outsb
or
mov
call
jo
fldenv
jo
mov
into
les
int
adc
or
xor
jns
sti
fstpl
push
icebp
cmp
sbb
iret
jp
and
popa
into
pop
mov
or
mov
iret
movb
fisubs
dec
add
data16
mov
movsb
mov
mov
sub
aad
xlat
add
shl
push
and
hlt
shll
jecxz
sub
fcompl
movsb
jg
xor
in
add
gs
arpl
mov
and
cld
jb
outsb
jo
jns
and
jo
mov
sub
sub
or
xor
ret
jmp
cs
and
pop
jl
rcll
and
scas
pushf
lds
mov
jo
mov
pop
out
push
sub
test
xchg
nop
add
xchg
nop
shl
hlt
idivl
jne
mov
in
sub
xchg
inc
dec
pop
fs
dec
xor
inc
cwtl
sahf
jo
enter
test
xchg
jo
imul
loope,pn
bound
push
pusha
and
arpl
pop
call
bound
lea
outsb
xor
sub
push
push
xchg
repz
out
inc
stos
inc
es
sub
test
rcll
je
jo
pop
shufps
aas
out
jo
shlb
pop
sets
mov
jo
f2xm1
repnz
jns
pushf
mov
jb
or
jo
sub
leave
inc
aas
cmp
jo
cmp
jge
pop
arpl
nop
out
lods
insb
and
xchg
adc
aaa
lds
outsb
jo
or
sub
mov
fs
adc
pusha
test
das
jo
addr16
jmp
push
mov
cmp
sub
stc
sub
pop
pushw
in
xchg
push
jmp
das
pop
mov
mov
aad
xor
nop
sbb
adc
sti
mov
jo
push
lds
mov
int3
push
pop
sub
jo
leave
cwtl
shrb
cltd
repz
cmp
mov
jo
inc
in
pop
mov
ret
sub
pop
mov
iret
mov
mov
js
rorb
push
jecxz
cmp
jns
mov
xor
jo
lds
ret
es
jns
fidivrs
test
shrb
pop
mov
imul
sub
inc
icebp
cmpsl
pushf
mov
shll
jo
out
test
test
cmp
add
arpl
nop
push
jl
and
repz
dec
in
shll
out
and
cltd
inc
ja
adc
mov
lea
jo
repnz
push
jo
pop
xor
jo
rcll
dec
sbb
mov
sarb
js
aas
cmp
adcl
add
push
add
adc
cmp
push
mov
dec
jo
mov
sahf
shll
aaa
lods
inc
iret
or
rol
xchg
scas
push
scas
js
inc
imul
xchg
shll
xchg
xor
mov
jl
push
scas
in
adc
out
aas
pusha
add
inc
cs
daa
dec
js
sub
addr16
dec
jo
push
add
mov
jo
adc
outsl
add
jo
pop
and
mov
mov
adc
loope
adc
leave
popf
push
cmp
loop
pop
in
mov
or
sub
jb
push
ss
gs
dec
push
sub
sub
out
aaa
clc
jns
or
xor
dec
js
push
cltd
leave
pop
andb
add
out
pop
push
jo
add
inc
inc
aaa
lds
loop
fs
sub
cmpsl
es
sub
sbb
pop
mov
jo
xchg
xchg
dec
aam
jge
popa
lods
sub
ljmp
sub
inc
pop
ret
xor
sbb
mov
mov
inc
xlat
in
aad
das
ret
push
jnp
js
mov
loope
jo
mov
push
clc
jo
jne
mov
jo
jle
insb
scas
jo
nop
aam
push
pop
xor
sarb
shl
xchg
or
mov
adc
std
push
loope
inc
fldt
imul
imul
and
ss
loope
sub
stos
mov
cmpsb
add
add
sti
insb
mov
jg
and
mov
mov
xor
jo
aas
outsb
les
mov
in
push
jo
or
repz
push
mov
push
int
aas
sub
cld
sub
jo
les
sbb
adcl
jo
ja
push
inc
mov
push
icebp
pop
pop
dec
jle
jo
loope
or
les
push
std
jmp
daa
addl
into
rorl
test
jo
xorl
and
mov
mov
jno
fs
ret
in
pushf
add
cmc
js
push
int
push
xorb
aad
out
in
jo
leave
pop
xchg
inc
decl
push
xorl
pop
fs
cmp
jo
rorl
push
jo
movsb
mov
jo
int
fstps
jne
ret
subb
dec
push
mov
icebp
jo
dec
stos
adc
pop
shll
xlat
lds
out
pop
jo
xor
ljmp
push
sbb
mov
adc
int
mov
nop
enter
sarb
adc
xor
fbstp
xor
dec
and
movsl
or
imulb
adc
jp
mov
mov
cs
bound
sti
cwtl
in
inc
jmp
in
hlt
xchg
pop
push
or
pop
xchg
dec
mov
dec
mov
jge
stos
std
fsubl
lods
out
je
in
sub
popa
mov
movsb
xor
outsb
and
mov
push
rcrb
inc
test
xchg
inc
xchg
lcall
imul
push
inc
jmp
sub
push
jnp
mov
loopne
in
and
push
cmp
imul
or
mov
jo
and
mov
nop
in
lds
add
add
outsb
arpl
push
shll
lods
push
jns
popa
imul
inc
aad
mov
mov
jo
sbb
sub
aas
push
mov
adc
out
jo
sti
leave
or
jo
pop
repz
add
idivl
js
or
sbb
jle
and
leave
flds
xchg
xor
fisttps
into
jo
jae
mov
push
stos
faddl
jle
fadd
jne
dec
loope
cs
sbb
loopne
jo
faddp
jns
push
sub
jbe
ds
pop
jo
xchg
dec
push
or
sub
fbstp
test
push
aad
jo
sub
stos
inc
mov
lds
pop
call
insl
jo
add
inc
xchg
jo
in
not
lock
jo
xchg
arpl
mov
mov
xchg
add
adc
push
wrmsr
jecxz
inc
fnstsw
xchg
add
cmp
jo
ret
daa
dec
mov
mov
in
gs
add
shrb
mov
fidivl
xorb
in
pop
pop
shlb
dec
shll
sub
hlt
insl
cltd
mov
lds
movsl
dec
push
jnp
test
xorb
mov
leave
sub
jo
xchg
insl
popa
and
sti
ret
xchg
divl
pop
jo
mov
scas
sbb
and
es
dec
inc
jo
add
pop
lock
loopne
adcb
jnp
jmp
xchg
jl
push
in
mov
cmp
les
push
shrb
sub
jno
jo
mov
jg
inc
push
mov
lds
jns
loop
roll
fidivs
xor
mov
js
push
call
in
insb
fldcw
rol
push
pop
push
std
out
out
jo
fsubrs
ret
repnz
scas
inc
lds
nop
add
xor
stos
and
jo
dec
jno
pop
and
inc
jo
add
mov
mov
jo
fldcw
mov
ret
rolb
sub
fcmovbe
xchg
adc
stos
xor
jo
in
sarb
xor
aad
bound
movsl
lret
dec
mov
xor
stos
pop
sbb
dec
scas
cmpsl
daa
cld
or
pop
pushf
fwait
xor
call
jns
jo
cld
sbb
js
dec
lcall
sub
jp
jae
add
shr
adc
ret
mov
repz
sti
sahf
and
cmp
jge
aam
pop
iret
xlat
jo
dec
sub
jp
xchg
decl
les
shlb
cmp
mov
add
scas
mov
dec
fidivrl
push
es
sub
sarl
fldt
jo
int
dec
test
pushf
jno
jne
mov
in
jo
and
sub
xchg
fistl
ljmp
mov
arpl
jo
push
movsl
dec
shrb
lds
inc
jo
stos
icebp
dec
xchg
jnp
mov
filds
popf
mov
andl
mov
pusha
mov
mov
lds
mov
popa
out
jo
leave
sti
sub
xor
fisttpll
inc
js
mov
jo
loope
cmp
push
ret
fwait
test
js
sub
pusha
aam
loope
xor
hlt
jno
jo
fwait
scas
jecxz
mov
push
mov
jo
shll
pop
ret
jo
fwait
add
jo
jle
xchg
test
dec
jo
add
jne
loopne
icebp
outsl
push
xchg
call
pop
test
and
enter
dec
in
dec
jne
shrb
adc
mov
and
adc
fildll
jmp
roll
imul
or
fyl2x
adc
decl
lds
mov
xchg
stc
push
add
jl
dec
fbstp
movhlps
mov
loop
pop
not
mov
jo
fwait
divl
nop
jmp
icebp
mov
sbb
scas
imul
insb
enter
je
movsl
aad
out
push
adc
jo
push
push
lds
mov
adc
movsb
jo
arpl
shlb
stc
pusha
fnstcw
les
insl
jnp
outsl
js
test
dec
inc
inc
xor
scas
push
mov
cmpsb
sub
lret
cmp
and
data16
lock
ss
ds
or
inc
sub
pop
aaa
imulb
rclb
bsr
inc
jb
fs
sahf
add
or
mov
pop
cmpsb
jo
daa
push
lock
jae
or
mov
fcomps
hlt
jno
jae
std
xor
into
sub
pop
jg
outsb
mov
jmp
cmp
xchg
int
in
push
in
mov
jb
imulb
push
imul
jo
cmpsb
pop
xor
mov
lds
inc
pusha
adc
jle
test
outsb
jo
ja
xchg
sub
and
push
out
mov
mov
push
jo
sahf
adc
std
insl
push
jo
jne
lds
sbbl
cmp
push
mov
sbb
xchg
int
inc
pop
aam
inc
sbb
leave
and
xor
cmc
cmp
mov
bound
jo
bound
icebp
in
aaa
outsb
jo
inc
inc
pop
clc
adc
jo
cmpsb
repz
inc
or
push
jo
adc
inc
fadd
sbb
inc
pop
test
sub
mov
push
sahf
jo
xchg
jle
dec
mov
repnz
push
cmp
data16
loope
out
das
fsubr
sbbb
out
shlb
std
loope
jo
ret
in
sar
ss
cmp
lods
push
jo
adc
xchg
jo
leave
mov
popf
jo
inc
fs
cmp
out
sbb
ljmp
jo
cmp
jg
xchg
cmp
bound
test
sbb
cwtl
push
mov
popf
cmc
daa
sbb
pop
fldl
out
out
orb
xorl
test
sbb
mov
cmp
jo
adcb
in
stos
xchg
push
cmp
ret
sub
jne
out
mov
cld
jo
shl
adc
in
xchg
bound
addr16
pop
and
je
jo
imul
cmc
data16
jo
popf
lds
cld
pop
out
xlat
jp
pushl
cmp
repnz
push
filds
mov
in
lcall
jl
mov
xchg
add
mov
xchg
into
out
dec
jo
js
imul
add
cli
je
lds
and
dec
ljmp
cs
leave
inc
xchg
lea
pop
in
je
push
cmc
jb
jo
or
add
jo
sub
xor
arpl
push
sahf
pop
and
sub
push
and
mov
sbb
jp
dec
jo
fildll
jecxz
into
enter
jbe
shll
jo
mov
addl
jo
sbb
lods
movsb
push
sub
push
xchg
into
scas
cmp
jo
insb
out
xor
cmp
sbb
nop
leave
mov
push
bound
test
inc
shl
push
mov
aaa
cmp
out
ja
mov
dec
push
leave
movsb
jmp
idivl
jo
push
andb
xchg
aad
jl
jo
xor
dec
and
test
jo
stos
mov
add
add
cwtl
push
push
daa
push
popa
pop
or
jo
enter
arpl
jo
xchg
loope
ret
pop
jo
stos
test
inc
sbb
sub
lret
or
les
mov
into
loopne
jo
cmp
xchg
jns
lods
fs
arpl
xor
popa
mov
iret
and
movsl
inc
cmp
loop
jo
jb
mov
ror
mov
jo
pop
cmp
jo
mov
or
xchg
fbld
nop
mov
or
jo
bound
jle
jp
jo
inc
push
xchg
shrb
inc
daa
int
inc
out
mov
jae
ret
pop
jo
xor
add
mov
rcrl
pop
int
js
cmpb
xor
data16
mov
sub
mov
jo
sarb
test
cs
jmp
filds
xchg
jns
test
es
jle
ss
jo
dec
mov
and
jo
repnz
cmpsl
jo
int3
xor
fs
jo
pop
adc
cs
movsl
push
in
xor
xor
jo
mov
enter
push
jo
outsb
pop
and
lcall
outsl
add
ja
mov
jnp
jbe
inc
ljmp
push
movsl
inc
jo
stc
mov
fidivs
xchg
fmul
ljmp
mov
dec
and
xchg
jo
loope
sub
loop
push
loope
push
mov
xchg
dec
cmpsl
adc
xchg
pop
mov
push
fstps
xchg
jo
ss
imul
rclb
movsb
jo
jmp
shll
loopne
mov
test
push
int
mov
das
lcall
imul
mov
sbb
js
pushl
enter
jnp
xchg
jo
lds
leave
nop
das
jns
sub
jns
ljmp
repnz
pop
jmp
or
sub
dec
movsb
je
test
addb
sub
inc
mov
mov
push
loop
arpl
jecxz
in
hlt
add
nop
data16
mov
cwtl
and
mov
pop
jge
jle
movsl
inc
cmp
clc
cmc
lret
mov
aas
psubsb
jbe
pop
bound
leave
aam
jo
das
sbb
loope
xor
pop
addr16
lret
add
in
lock
push
outsl
mov
jnp
sub
jmp
cmpsl
jo
ljmp
jo
xchg
loope
in
inc
jo
mov
mov
dec
mov
pusha
pop
jo
cmp
mov
mov
loope
outsb
movsl
adc
adcl
pushf
jns
mov
imul
inc
sti
mov
add
xchg
enter
jo
inc
imul
jo
add
inc
mov
dec
xor
mov
sbb
and
dec
lds
outsl
mov
sbb
inc
xchg
outsb
leave
cmp
je
pop
daa
push
inc
and
jecxz
shlb
jo,pn
adc
ret
jo
inc
or
sub
fldcw
sub
jo
out
std
in
or
test
xchg
addr16
jo
jbe
ret
cmp
movsb
mov
jo
ljmp
xchg
subl
xorb
push
popf
push
push
push
lds
mov
test
xorb
lock
je
lods
mov
xchg
lcall
xchg
pop
cmpsb
cmovs
hlt
in
push
das
jo
add
pop
fucomp
shll
nop
sub
dec
cmp
lret
addl
pushf
push
nop
stos
jge
add
inc
jl
movl
fwait
sbb
ljmp
push
sub
jo
std
rcll
je
hlt
jo
rorb
pop
mov
cmpsb
loopne
cmp
leave
adc
cmp
in
jo
mov
xor
jo
mov
repnz
xchg
leave
jo
fildl
xchg
outsb
or
and
sub
clc
orl
or
mov
jo
push
out
add
sbb
jge
test
jo
test
pusha
icebp
jno
sbb
jg
xor
dec
lret
ds
movups
cld
ret
cmp
add
jecxz
sbb
add
or
ds
cmp
fld
cmp
gs
inc
lcall
mov
add
movsb
inc
shrb
xorl
mov
ret
xchg
add
sbbb
in
dec
js
or
pusha
push
cmp
push
dec
dec
jmp
test
mov
inc
inc
out
fsubrl
subl
jb
inc
in
jo
mov
fistl
jo
adc
bound
dec
mov
je,pn
mov
cmp
lea
dec
jno
push
stos
pop
jo
add
cld
scas
loopne
iret
jo
dec
loop
in
ss
mov
ds
mov
fs
pop
jo
pop
mov
dec
jo
mov
mov
pmovmskb
cmpsl
into
xor
aam
sub
or
call
pop
push
js
sub
pop
loopne
lods
jo
insl
sub
lret
dec
popa
cmpsb
rcll
push
test
das
jo
loopne
adc
pop
fadd
gs
xor
shlb
divb
dec
fcompl
or
test
mov
sbb
fstpt
fs
addb
jb
or
add
int
sbb
pop
lahf
out
inc
mov
insb
push
in
jo
int3
and
test
sub
adc
clc
or
pop
mov
mov
push
cli
cltd
jo
das
lods
bound
lds
or
sub
push
jo
pop
mov
xorl
lds
jo
leave
xor
fistpl
lock
shlb
jo
lds
shr
sbb
fs
push
cmpsb
dec
jp
jo
sbb
or
lahf
popa
lods
jo
mov
lock
cmp
imul
popf
mov
andl
adc
dec
jo
jbe
addl
sbb
inc
sbb
fisttps
xchg
rol
insb
test
imul
or
lds
jo
dec
mov
xor
icebp
bound
jo
pop
mov
mov
inc
inc
das
adc
xor
jo
inc
sbb
xor
or
fdivrs
push
fs
imul
js
shrb
lods
adc
push
cs
jo
or
leave
jo
jmp
mov
callw
mov
push
pushf
jo
push
insb
adc
jo
leave
shlb
out
push
mov
jo
xchg
jae
int3
cmp
mov
add
movsb
fwait
jno
mov
jo
add
vpshufhw
ret
cmp
xchg
mov
lret
mov
mov
pop
jp
popl
les
mov
jo
popf
xor
inc
dec
out
jl
dec
xchg
cmp
loop
pop
leave
pop
and
lock
je
jo
ret
rcr
xor
mov
push
xchg
scas
imul
adcl
or
cmp
mov
mov
xor
aad
adc
lret
jnp
imul
cmp
int3
adc
insb
xchg
test
jo
es
lds
lea
push
push
insl
outsl
dec
insb
add
shlb
call
mov
sub
je
xchg
dec
jo
insl
stos
xor
pop
or
cmp
popa
or
leave
add
xor
pop
add
ljmp
rorl
jo
js
or
jo
sub
leave
rcrl
bound
inc
jo
fcomi
adc
add
xorb
leave
jmp
jle
push
or
jg
mov
jno
out
sbbl
xchg
test
je
inc
int3
jo
icebp
mov
shll
xchg
ret
mov
cltd
cmpsl
out
test
out
addr16
push
or
popf
cmp
sub
test
jo
fnsave
sti
jo
push
and
push
bound
jo
push
std
pop
mov
cs
das
fwait
dec
aad
dec
cmc
jo
jb
sbb
cmp
mov
inc
jo
jge
ja
mov
js
cs
push
or
test
xrelease
push
and
push
mov
jbe
test
nop
and
push
and
pop
inc
js
aad
push
jae
adc
in
in
xchg
je
into
add
scas
arpl
jo
and
push
ror
bound
pop
xor
pusha
push
dec
les
int
repnz
adcb
dec
sbb
sbb
fdivrp
hlt
insl
lds
jo
mov
lahf
les
pop
and
cmp
outsl
jo
loope
push
lcall
fisubrs
out
adc
ret
ss
pop
test
pop
mov
mov
push
imul
popf
addb
das
jo
cld
icebp
push
sub
jo
mov
in
sub
test
sbb
xchg
pusha
push
adc
and
sbb
mov
jecxz
rcrb
mov
and
sub
fdivrs
sub
jl
jno
jo
add
adc
or
sti
push
push
ret
and
mov
jo
sbb
fcmovbe
add
lock
push
cmc
nop
or
push
pop
cld
ja
repz
subl
fs
jp
jbe
or
jae
push
mov
xor
rep
push
xchg
jo
sub
aas
aam
loopne
inc
jnp
and
ja
leave
sub
roll
inc
xor
sub
add
iret
clc
xor
push
mov
push
ret
popl
inc
xor
rcr
leave
jno
sbb
jo
scas
dec
fistps
xchg
jo
add
icebp
add
dec
cmp
jo
std
xor
jne
ss
pop
je
lahf
je
mov
lcall
or
and
sub
ja
cmpsl
bnd
dec
nop
mov
js
std
ss
ret
sbb
jcxz
notb
push
xchg
jo
pop
inc
test
mov
cmp
adc
das
aad
cmpb
ret
or
jo
xorb
dec
jge
lret
lods
in
addr16
jae
aad
scas
jo
mov
fsubrp
pop
or
jo
cmpsl
push
inc
out
xchg
jle
popa
cmpsb
sub
and
pushf
rorb
jnp
lods
leave
sahf
inc
clc
sbb
mov
dec
jo
in
fwait
xor
inc
add
loope
inc
mov
imul
outsb
pop
sub
sbb
aam
adc
sbb
lds
push
sub
or
js
mov
add
cmp
sub
jg
pop
outsb
andb
mov
bound
cmpsl
insb
adc
or
sub
ret
data16
outsl
out
push
arpl
jnp
sbb
fsubl
ja
jl
pop
fadds
add
leave
jmp
dec
sub
js
jne
addb
jo
dec
xchg
sahf
mov
sbb
clc
xchg
xorb
rcr
mov
cli
sarb
inc
ret
push
mov
bound
lods
pop
outsl
nop
dec
sub
jo
lock
jbe
lds
jo
dec
movsl
and
jg
pusha
or
jne
int3
jo
xchg
in
sahf
mov
mov
loop
in
jo
and
ret
leave
ret
add
jle
and
mov
pop
mov
xor
xchg
xor
jecxz
stos
xor
inc
mov
pop
inc
ss
pop
je
cmp
jecxz
jo
out
out
cmp
test
adc
add
bound
or
sbb
jb
mov
xor
mov
cli
push
icebp
add
sub
jo
subl
sbb
mov
insb
popa
icebp
jo
push
mov
out
or
ret
je
or
jo
dec
mov
pop
jo
dec
popf
ret
scas
test
dec
lahf
mov
sub
sub
xchg
mov
mov
xchg
hlt
dec
mov
int3
iret
dec
repz
sub
mov
cmpsl
call
imul
xchg
xor
test
jnp
out
jo
push
loope
cmp
inc
popa
push
loop
or
les
cmc
sbb
sbb
popf
jo
push
ljmp
iret
pop
hlt
leave
push
mov
mov
pop
push
lahf
push
xor
inc
inc
dec
xchg
lret
jo
sbb
inc
insb
nop
lcall
mov
jo
frstor
out
ja
inc
jo
lahf
sub
cmc
bound
addr16
jo
sub
sbb
gs
stc
mov
jo
sti
aad
jnp
imul
push
sub
cli
adc
rcrb
xlat
mov
icebp
jo
dec
pop
pop
ret
popf
jmp
out
js
fs
std
jo
in
cli
les
fcmovnb
hlt
out
xor
insb
das
pop
mov
test
xor
sbb
or
sti
pop
xor
jmp
out
mov
sub
xchg
fildl
push
cmpsl
bound
lds
jo
and
icebp
pop
cli
repnz
rorl
cmc
data16
shlb
pop
sub
jnp
jl
mov
movsl
push
xchg
mov
js
sub
arpl
cmp
pop
imul
xor
jo
shll
sbb
ficompl
rcrb
ret
stos
rcll
ds
lds
shlb
xchg
aaa
js
test
pop
xchg
push
lock
mov
mov
cmp
dec
push
sub
addr16
fdivs
pop
daa
imul
aas
subb
sub
push
inc
dec
das
push
cmc
cmp
jns
divb
push
shll
nop
pusha
push
insl
andl
mov
fnsave
push
fwait
cmp
shll
jo
cltd
cli
jmp
in
aas
std
in
jo
jge
sub
into
jo
data16
xor
adc
gs
push
jo
imul
jns
add
jo
mov
push
leave
push
jmp
or
out
fwait
andl
inc
jbe
mov
mov
jge
rcll
mov
mov
fwait
std
xchg
jo
xorl
ffreep
out
test
sub
std
cld
push
hlt
dec
dec
repz
and
push
or
lret
cltd
mov
xor
dec
cmp
jl
popf
imul
pushf
push
inc
mov
mov
insb
call
arpl
ja
mov
nopl
fbld
pop
jo
fiadds
dec
fwait
lds
jo
gs
adc
enter
jbe
shlb
std
mov
dec
adc
mov
nop
cmc
leave
pop
fnstsw
ret
ja
mov
iret
push
loope
lret
sbb
push
mov
jg
insb
movsb
dec
dec
fcmovnu
mov
mov
and
jbe
jo
add
test
enter
fisubrs
jmp
rol
scas
xchg
cmpb
gs
outsl
in
in
sub
bound
stos
out
sub
fstpt
out
nop
jo
jnp
dec
mov
xchg
fmul
iret
xchg
cli
push
aaa
nop
fidivrs
jg
inc
mov
fadd
sbbb
bnd
shll
dec
jo
fnstcw
out
sub
fs
jo,pn
lret
xlat
jmp
cmp
jbe
add
jo
xchg
jecxz
xor
fldl
push
or
jno
sub
adc
xor
jo
push
jp
ja
shl
jo
in
jmp
dec
leave
sbb
inc
js
les
rcrb
lret
dec
jle
popf
mov
subb
pop
fbstp
lds
mov
lods
dec
or
stos
subl
orb
jno
sub
xlat
jg
lock
jl
mov
fs
cwtl
test
fdivs
outsb
mov
shrl
inc
ret
aam
jo
push
addr16
enter
fsts
jne
jae
testl
pushf
mov
cmp
mov
popf
jecxz
cmp
iret
jae
out
aaa
push
nop
sbb
xor
gs
and
inc
std
mov
repnz
lahf
pop
mov
push
cmp
movsl
xchg
jo
dec
push
test
aas
jo
xchg
int
aad
mov
jo
inc
sbb
lds
cmp
lods
ja
push
push
movsl
jb
cltd
pusha
mov
jo
shll
fidivrs
fdivs
inc
popf
push
mov
push
xchg
pop
out
ja
iret
mov
call
sub
fdivr
loope
mov
das
sub
inc
ds
jo
outsl
shll
pop
xchg
jo
lret
fsubrl
pop
sbb
push
jne
js
jecxz
lcall
pushf
dec
in
jo
insb
fisttpl
jbe
or
movsb
lea
out
inc
fisubrs
xchg
idiv
out
mov
mov
fucom
jne
sbb
fcompl
js
bound
sbb
jo
shlb
loop
out
xor
lods
add
js
mov
jo
sub
nop
mov
into
leave
xor
or
or
xor
fdivs
std
ss
nop
rorl
shlb
lds
sbb
xchg
inc
sbb
mov
push
movsl
mov
aas
jo
lds
loope
cmp
pop
addr16
jmp
and
jns
jo
fisttps
push
pop
ret
stos
sub
out
jo
punpckhdq
mov
or
xchg
sbbb
jno
neg
lock
push
in
addr16
cs
sub
jmp
push
adc
xchg
filds
jle
xchg
leave
dec
imul
or
insb
arpl
seta
shl
je
jne
jp
add
stos
ds
jno
sbb
int3
cmp
pushf
shll
inc
pushl
dec
mov
or
xorb
add
sub
rclb
and
push
repz
movsb
fsubrl
jo
adc
lock
js
sub
push
out
jo
leave
and
pop
je
insb
leave
mov
pusha
ficoms
enter
jne
adc
lods
jne
ret
adc
lds
loop
divl
fnstcw
inc
popa
push
bound
dec
sbb
sahf
fs
jo
scas
test
imul
dec
mov
add
lods
xlat
push
js
out
inc
dec
inc
test
jge
mov
mov
adc
setae
es
sub
shl
cmp
addb
leave
jne
or
cwtl
notb
and
int
outsl
inc
fmull
inc
stc
mov
lea
sbb
loopne
andb
mov
jo
xlat
and
jo
jg
jmp
inc
call
or
cld
lea
jo
sti
adc
xorl
mov
les
imul
xor
fs
lcall
divl
movsl
call
push
addl
pop
fadds
cmp
orb
sbb
mov
data16
sub
lds
out
sub
test
inc
jo
fiaddl
xor
divl
jo
rcr
push
jo
lcall
jo
or
sub
push
mov
jns
in
sti
add
adc
es
push
jg
pop
jo
inc
xorl
adc
push
jo
sbb
mov
inc
jo
lock
dec
mov
cmp
xchg
jo
leave
jo
pop
mov
dec
rcll
cmp
dec
mov
dec
and
fwait
push
lret
or
jle
leave
ja
orb
and
shlb
jbe
jno
fs
jo
cmp
mov
sub
mov
pop
sub
or
sub
dec
int3
cmp
xchg
scas
insl
mov
xorb
push
test
push
or
pushf
fisubs
jo
iret
dec
jge
xor
mov
sbb
mov
add
sbb
out
movsb
ja
inc
mov
xorl
push
nop
add
inc
cwtl
pop
das
ja
mov
mov
mov
push
xor
fidivs
sub
ret
sub
xor
movsl
jg
adc
cs
out
and
push
mov
idiv
xor
sub
or
js
sub
and
mov
push
and
inc
stc
pop
or
les
jl
inc
push
jbe
and
shlb
dec
sbb
jmp
cmp
and
popa
sbb
mov
dec
push
ret
in
adc
cmpsb
pusha
jo
fdivp
nop
inc
xchg
xorb
jo
adc
mov
dec
dec
jne
inc
adcb
mov
andb
icebp
inc
xor
jns
repnz
int
push
lock
les
add
cmp
aaa
dec
stos
mov
pusha
mov
adc
movsb
adc
dec
cwtl
sti
or
out
mov
push
psubsw
cli
pop
lret
hlt
jg
jo
mov
movsl
push
mov
dec
cwtl
les
rorl
inc
push
mov
jnp
lcall
mov
push
imul
push
push
or
fmuls
mov
fisttpll
gs
xchg
jo
aad
pusha
outsb
push
ret
or
negb
jo
into
popf
adc
icebp
stos
pop
add
jb
cli
shl
xor
cmp
and
daa
sbb
stos
mov
popa
jge
mov
jl
nop
inc
test
les
cmc
es
cld
shlb
bts
inc
push
inc
bound
or
jo
and
inc
inc
fsubrl
xchg
jo
xorl
or
arpl
js
test
mov
je
aad
inc
push
sub
mov
and
sbbl
pushf
jnp
jbe
fsts
push
jp
jp
push
lods
pop
out
adc
loop
mov
xchg
rcl
outsb
sub
and
fnsave
jle
sbb
arpl
shll
sub
mov
mov
xchg
out
mov
nop
sahf
subb
lret
pop
jo
add
jmp
mov
pop
pusha
adc
bound
stos
jo
mov
loop
jo
int3
ljmp
xchg
iret
fldenv
adc
shl
sub
leave
jnp
inc
jo
pusha
mov
lahf
jbe
stos
dec
popf
jae
sbb
int
mov
jo
bound
imul
jno
cmp
insb
adc
jb
imul
xchg
mov
mov
arpl
mov
mov
aad
mov
push
and
push
int
jo
popf
or
cmp
jge
mov
lds
mov
in
fwait
lock
divl
mov
adc
subb
das
nop
pop
xchg
mov
ficoms
jne
jmp
sub
mov
push
sub
add
mov
lock
inc
ucomiss
mov
jecxz
int3
mov
jo
or
arpl
add
pop
cli
push
leave
insl
sbb
xchg
and
insb
add
mov
ret
cmp
lds
dec
repz
push
pusha
sbb
push
pop
adcl
sbb
jl
push
pop
js
or
jo
js
push
lret
xor
leave
jo
pop
cmp
fisttpl
lds
loope
adc
mov
ret
cli
setg
lds
jne
xchg
sub
cmp
add
aas
push
lds
subb
pusha
and
jge
mov
outsl
dec
mov
fbld
jle
ljmp
out
xorb
std
rol
int3
ret
iret
aad
dec
les
push
movsl
cmp
push
fcoms
sub
adc
jl
aad
nop
roll
repnz
or
cli
outsb
cmp
dec
adc
ljmp
shlb
in
pushf
jo
ja
jl
xlat
adc
aad
imul
das
cmpl
repnz
inc
mov
xchg
hlt
adcb
dec
mov
jo
mov
loopne
std
jbe
jo
push
ret
adc
push
and
dec
inc
aaa
divl
ja
lds
jno
call
mov
fucomi
scas
lods
push
or
cmp
les
mov
push
or
push
and
scas
das
popa
adc
test
in
jo
mov
push
and
mov
std
jmp
stos
fwait
mov
push
jo
ss
hlt
lret
sbb
jo
pop
bound
xlat
stc
mov
sub
je
jo
dec
jmp
pushf
dec
xor
mov
push
shl
jo
outsb
sahf
add
jo
jne
bound
sbb
inc
jle
jo
mov
lods
nop
mov
mov
lcall
inc
mov
mov
popl
jge
mov
aas
jno
xchg
adc
adc
xor
pop
stos
loope
sbb
jle
jle
jo
mov
sbb
jmp
xor
lods
mov
je
movaps
shrl
cmpsl
nop
mov
loope
jb
jb
sbb
jo
adc
mov
inc
push
shlb
int3
sarl
jp
mov
mov
jg
and
aaa
int
inc
sti
jo
cmpsb
adc
xlat
jo
leave
jne
mov
add
outsb
cltd
test
adc
daa
push
pop
mov
xchg
mov
push
dec
jle
bswap
pop
adc
mov
or
aam
cmp
mov
adc
jle
fisttps
jo
mov
inc
fldcw
mov
inc
fiadds
mov
icebp
sub
fdivrs
pop
push
mov
leave
push
inc
in
mov
mov
push
imul
cmpl
xchg
jae
jo
xor
adc
xor
pop
imul
shll
lcall
push
idivb
dec
push
stc
das
dec
xchg
add
das
jo
ret
shlb
jo
cmp
jmp
xor
and
nop
mov
cltd
loop
inc
orb
jne
jge
icebp
push
cmovg
jo
adc
cld
cmp
inc
and
negl
jae
lds
nop
out
in
or
xor
js
push
add
loop
inc
xchg
sarb
lahf
insl
sub
ds
ljmp
and
inc
adc
lds
cs
and
movsl
in
xor
movsb
push
sti
mov
ds
add
and
jo
inc
mov
mov
mov
and
mov
or
jle
mov
inc
sbb
jae
pop
aam
lods
jns
jae
xchg
mov
mov
push
lea
xor
nop
jnp
popa
xchg
aad
jns
jl
das
shlb
push
inc
call
hlt
divl
pop
in
jo
xchg
lock
stos
outsb
dec
xorl
mov
cmpsl
roll
ret
jo
clc
or
sub
mov
lret
push
mov
icebp
xor
jo
lds
pop
jns
shll
popf
fldl
xchg
jo
push
fstps
jo
jb
sub
mov
fisubl
cld
mov
inc
notb
and
mov
inc
daa
call
lds
scas
sahf
and
jo
and
mov
jle
pop
jo
jl
xor
jne
push
jo
sub
ret
or
insl
lea
leave
bswap
outsb
xor
jl
lret
jo
cmpsb
cmp
jo
xchg
add
jo
jns
repz
repnz
dec
jo
out
leave
cmp
sub
mov
fldt
lret
adc
out
mov
enter
bound
push
mov
xchg
add
jae
int3
out
cmp
in
add
add
gs
and
je
fucom
jo
sbb
popf
xchg
jo
and
mov
and
push
dec
adc
stc
daa
js
shrb
push
dec
lahf
jns
fsubrs
scas
mov
arpl
jo
cmpsb
addb
push
ds
mov
jo
xor
sahf
add
insb
jne
rcl
mov
cmpsl
inc
xlat
jo
sub
mov
rcrb
cli
jo
out
mov
dec
insl
loop
mov
mov
ffree
push
test
shrl
jnp
xor
cs
jno
outsl
arpl
in
sub
and
cmp
mov
repnz
cmp
enter
inc
test
pop
loop
inc
ret
jo
cmpsl
int
mov
rorl
jnp
jo
xchg
imul
pop
hlt
push
jo
cmp
sub
sub
xchg
rcl
cli
sub
dec
add
lcall
mov
shlb
jg
adc
hlt
out
sub
and
dec
jns
jo
cmp
movd
inc
cmp
jo
xchg
sub
lds
movsb
pop
sub
int3
adc
jae
sub
jo
cmpsl
sbb
mov
jo
jmp
dec
mov
insb
shll
xchg
sarb
jo
cltd
lret
or
pop
add
and
negb
xchg
cs
jo
and
adc
jno
xchg
nop
insb
mov
mov
inc
les
imul
sahf
add
jo
or
cmp
sbb
jo
xchg
dec
iret
xor
cmp
lds
setbe
xor
aam
es
jo
inc
xchg
dec
jo
cs
loope
push
pushf
inc
jle
jo
pop
es
add
lcall
jge
lds
jno
loope
lea
jo
ror
add
scas
inc
dec
jo
dec
mov
cltd
sub
inc
add
cld
xchg
dec
cmc
loope
jmp
ds
dec
cli
push
into
sub
lock
lea
xorb
pop
jo
cmp
jno
or
bound
cld
aaa
mov
sbb
or
std
adc
cmp
ret
adc
lds
jns
and
mov
jp
imul
addb
or
jo
adc
mov
jle
jo
rcrl
jo
and
push
leave
jecxz
jo
xchg
and
popf
jp
shrb
inc
ret
xchg
add
and
or
push
push
jo
add
aad
jo
xchg
jmp
add
stos
inc
mov
fnsave
sbbb
sub
mov
inc
mov
fstpl
fs
xor
nop
sbb
ja
scas
fimull
jo
mov
clc
pushf
ficoms
imul
repnz
push
mov
adc
lds
inc
jo
push
lods
loope
sahf
lods
jo
fldt
ret
aaa
les
xchg
jo
test
push
mov
mov
aam
xlat
pop
mov
mov
out
jecxz
pop
pop
mov
loope
jo
sbb
ds
cmp
mov
add
fcompl
sbb
xor
imul
nopl
js
int3
fldenv
lock
cmc
int
push
ja
popf
setbe
jo
mov
mov
jo
adc
into
xor
adc
add
inc
or
jecxz
je
in
cmovge
xlat
jo
mov
push
outsb
sub
lods
pop
mov
mov
push
ror
aas
in
insb
or
jp
jo
mov
fbld
mov
jo
std
xchg
ret
adc
iret
mov
inc
cmpb
nop
sub
xchg
push
add
inc
xor
mov
sti
xchg
xor
shll
jge
jo
push
mov
sti
mov
jo
insl
mov
inc
into
gs
loopne
add
lret
adc
loope
adc
sbb
divb
or
aad
jb
in
sub
fisubs
lds
xor
adc
mov
push
xchg
std
push
fs
adc
js
data16
add
dec
lds
sbbl
add
sub
addb
sbb
lock
jo
xchg
push
into
jns
ret
xor
cmc
xchg
or
lds
setg
das
and
roll
imul
dec
fwait
push
jo
js
and
and
jle
loopne
cltd
iret
jo
or
lds
cmp
sbb
hlt
jmp
js
push
cmpl
adc
sub
mov
lock
rep
xor
push
in
int
xchg
push
mov
fiaddl
mov
and
cmp
jb
fdiv
jno
mov
jo
test
in
inc
xor
push
mov
lock
lock
inc
inc
cmp
jo
add
out
jo
cmp
shll
mov
cmp
jo
fstpl
int
jno
jo
pop
add
sub
mov
mov
ja
ja
push
sahf
shrb
repz
cmp
out
fcmovbe
sub
andb
push
lock
sbb
adc
jmp
imul
jnp
inc
push
aad
adc
cmp
jo
testl
jo
sahf
and
dec
adc
ja
jno
shll
inc
in
mov
jo
pop
lcall
in
cli
or
into
xor
mov
jo
add
lea
sub
jo
enter
adcb
push
cmp
repnz
mov
add
mov
ja
jo
push
lds
aam
cs
test
sbb
mov
shll
cmpsb
in
ss
insl
and
xor
jo
rcrb
fsubl
in
and
cmp
sub
imul
xor
mov
loope
insb
stos
sar
sub
jo
push
stos
subl
add
leave
mov
mov
bound
jmp
mov
stos
insl
cmp
clc
jo
mov
mov
out
jo
ja
je
mov
loopne
mov
push
mov
sbb
nop
lea
pop
adc
lahf
insl
repnz
pop
push
inc
out
ret
jbe
cli
push
mov
add
push
dec
add
push
andb
repz
jmp
hlt
jne
js
xorl
mov
in
bound
dec
mov
mov
out
xor
ret
or
loopne
jge
mov
xchg
jo
mov
out
add
pusha
xchg
mov
push
aaa
jo
rorb
pop
test
imull
and
cs
dec
inc
iret
insb
call
mov
and
stc
popf
jo
addr16
sub
mulb
stos
shrl
jo
inc
andb
shrb
xchg
mulb
lcall
push
int
out
insb
add
imul
jae
jecxz
negb
jo
cmp
dec
arpl
jo
shll
aad
test
das
fistps
ret
cmpsb
repnz
sub
sbb
add
sti
pop
ss
mov
xchg
sub
inc
stos
popa
jo
mul
sbb
shl
push
push
push
faddl
jo
push
mov
jbe
sbb
loop
mov
jecxz
jp
push
push
into
iret
ss
stos
leave
shl
or
jb
sub
rcrl
mov
jo
cmpsl
icebp
or
xchg
pusha
jo
fsqrt
push
sti
and
jo
jne
sub
loope
iret
push
add
test
and
jo
outsl
mov
psubusw
mov
sub
jo
js
inc
or
adc
mov
jo
lds
push
outsb
jo
mov
inc
fdivl
insb
xor
rcll
test
nop
loope
cmp
leave
shll
adc
fs
outsb
mov
add
sbb
ds
sarb
cmp
insb
lock
inc
mov
jle
jo
mov
in
adc
mov
push
test
pop
popf
add
loop,pn
call
jmp
mov
movsb
outsb
jo
scas
add
push
or
dec
fiadds
cltd
fcomip
and
nop
int3
andb
mov
jo
cmpsl
fwait
js
and
lcall
xchg
sbb
and
adc
loope
rcr
add
lds
mov
push
shrl
std
lds
dec
cmpsl
jo
xor
and
jge
sbbb
jo
in
add
sub
cli
aad
mov
pop
adc
arpl
test
cmp
ja
adc
dec
int
sbb
sub
aaa
push
push
fsts
repz
iret
lcall
bound
notl
sbb
loope
jo
or
ret
sbb
xlat
pushf
dec
sub
jo
test
es
bound
aam
movsl
xchg
sub
outsb
test
in
inc
leave
push
inc
imul
jo
inc
mov
or
lret
sbb
sbb
jmp
stos
lahf
imul
rorl
subb
jo
add
sahf
add
ret
out
push
push
imul
pop
xchg
xor
jb
decl
cmp
cmpsb
adc
mov
jmp
push
cli
xchg
aas
push
std
lret
jo
fidivrs
sahf
out
cmc
mov
cmp
int
sub
js
test
jo
push
leave
and
in
pop
rcrb
popa
adc
js
pop
fwait
das
in
lods
sarb
das
out
xor
nop
mov
jmp
aas
sbb
jo
out
lahf
subb
outsb
ret
or
filds
push
ficoms
dec
push
mov
sbb
notl
hlt
cmpsl
stos
push
sub
dec
das
xchg
jo
loopne
fdivl
dec
jo
inc
inc
push
loope
in
jo
andl
leave
mov
jl
push
jo
les
cmp
jge
cs
inc
jo
dec
jle
ds
dec
jo
mov
adc
jo
je
addr16
dec
out
shrb
jb
push
lds
dec
mov
cmp
and
sbb
jo
push
mov
push
mov
or
dec
jmp
jo
stc
loopne
out
jo
int
and
push
imul
mov
popf
sarl
dec
sub
cmp
xor
fdivl
jo
roll
jno
inc
jae
jo
leave
subb
les
jo
adc
into
and
icebp
mov
xchg
lret
pop
adc
dec
adc
jl
pop
insl
inc
push
jb
dec
xchg
push
lods
jo
sbb
arpl
mov
cli
mov
pop
shufps
addl
mov
dec
mov
mov
add
popf
dec
mov
dec
cmpb
sahf
out
leave
mov
jle
sbb
dec
data16
add
mov
jbe
jle
sbb
pop
or
jns
gs
sub
in
push
pop
mov
pushf
add
adc
push
jp
movsb
inc
pop
stc
and
jo
mov
cwtl
shll
movsl
add
xor
mov
push
inc
push
xlat
lds
dec
je
dec
xor
int3
jo
daa
sbb
mov
pop
mov
xor
sbb
push
push
push
lea
push
inc
repz
test
push
mov
jge
pushf
dec
sbb
ret
mov
aas
jo
vpaddb
insl
shr
dec
xorb
clc
add
mov
or
jo
sub
psraw
or
mov
xchg
xchg
repz
call
sbb
andl
push
dec
mov
fwait
fs
xchg
cvtps2pd
or
jo
jp
shrl
pushf
int3
or
jo
fistpl
movb
or
aas
ret
fidivs
outsb
jo
and
inc
mov
mov
sub
loope
bound
clc
jne
mov
jo
sub
pop
adc
test
and
rcll
jo
sub
inc
popf
adc
loope
jo
jno
xchg
xor
popa
inc
sub
mov
js
arpl
mov
pop
leave
lea
dec
mov
daa
lds
jo
shll
lea
lcall
cli
adc
pop
lret
push
movsl
fcmovne
xchg
jo
dec
pop
aam
and
daa
jo
inc
fnstsw
jmp
jmp
ret
cmp
bound
jo
lds
int3
push
jmp
inc
jo
jne
dec
jns
rcl
out
and
jmp
dec
push
jno
pop
test
je
mov
pushf
shlb
mov
call
js
cmp
jl
push
jle
xchg
and
push
inc
stc
rorb
jb
test
mov
js
and
shrb
lds
not
dec
xor
sub
jo
ret
clc
das
push
xchg
or
pop
enter
sahf
dec
fstps
imul
mov
fwait
loop
cmpsl
xchg
fs
mov
stos
mov
mov
out
pop
mov
push
xchg
jne
cmpl
push
aad
push
and
and
pop
xchg
inc
repz
push
pop
icebp
popa
ret
adc
cmp
or
arpl
movsb
faddl
adc
mov
dec
fstps
sub
stc
es
jbe
leave
addr16
lcall
jo
fisubrs
sub
std
jmp
inc
push
jo
sub
adc
fcmovne
lret
int
xchg
leave
mov
mov
cmp
je
js
jb
push
loope
push
test
mov
bound
cmp
aam
js
test
setne
test
lods
fists
dec
or
in
xchg
jb
cmpsl
dec
sub
push
in
jo
sbb
leave
outsb
and
ret
mov
mov
test
or
dec
scas
es
jmp
jo
mov
mov
push
inc
mov
xor
incl
call
pop
stos
mov
mov
jb
pop
xor
stc
je
gs
sub
jo
adc
loopne
lock
jo
hlt
push
mov
jo
insl
movsb
dec
inc
sbb
mov
sub
pop
cmp
fnstenv
jnp
mov
pop
push
in
icebp
jmp
mov
lods
sbb
mov
push
dec
ljmp
mov
dec
xchg
lea
pop
jo
push
pop
in
push
out
jmp
jo
xchg
push
aad
in
fisubrs
or
stos
jo
xorl
rol
imul
loope
insl
movsl
fs
js
jo
test
sbb
dec
adc
push
or
inc
cmpl
jb
lock
js
xchg
in
cmp
movsl
jp
push
nop
xchg
pushf
pop
lahf
mov
jo
movb
sub
test
jo
mov
jmp
mov
jge
sub
lds
fs
aas
push
shll
mov
add
lock
vmwrite
mov
pop
mov
pop
jo
or
into
xor
jo
mov
and
jo
ret
push
mov
inc
fisubs
add
dec
scas
fs
in
in
popf
ljmp
cld
pushf
push
xchg
jmp
loope
icebp
and
push
std
int
frstor
data16
xor
xchg
cmc
mov
jecxz
jo
iret
inc
pop
xchg
sbb
nop
cmovae
ret
jb
mov
nop
jbe
mov
inc
cld
jle
test
rdtsc
into
mov
xor
jo
je
sbb
jnp
and
cwtl
loopne
daa
add
hlt
shlb
mov
jo
push
xchg
loop
mov
jo
pusha
enter
popf
or
push
mov
pushf
inc
mov
jp
stos
push
mov
mov
pop
in
mov
cmp
xchg
les
lock
mov
unpcklps
sbb
adc
loope
orl
aam
nop
xor
xor
sub
inc
popa
cmp
mov
push
and
mov
push
xchg
lahf
out
dec
jo
or
and
dec
aad
push
das
pop
lsl
insb
jae
dec
pusha
in
and
lods
pushf
sbb
xor
sub
mov
jl
or
shll
push
call
loopne
fdivl
out
jmp
ret
jo
outsl
int
addr16
mov
sub
mov
mov
imul
insl
push
es
js
add
xor
mov
xchg
dec
lcall
ret
lds
shrb
aas
xchg
inc
pushf
mov
adcl
call
ret
mov
adc
jo
jnp
cltd
dec
cmp
jae
mov
test
repz
sti
aad
push
xchg
sub
cli
fisttps
inc
arpl
or
mov
xchg
cmp
push
inc
mov
addl
sbb
inc
incl
frstor
pop
inc
jo
int3
cltd
mov
or
push
cmpsb
in
out
add
mov
jb
push
dec
jmp
or
jo
inc
cwtl
cmp
push
cmp
movsl
xchg
stc
scas
xchg
test
jo
xor
out
dec
dec
cmpb
cmpb
mov
test
push
insb
dec
inc
mov
xor
mov
int
inc
test
std
xchg
push
addb
dec
xor
jmp
imul
mov
jo
jecxz
xchg
dec
mov
imul
lret
adc
shrb
js
aad
xchg
jo
popf
inc
sub
xchg
push
sti
jo
les
pop
scas
loope
shlb
inc
jle
fbstp
jp
push
xor
cvtpi2ps
sbb
inc
sahf
popf
imulb
mov
and
push
das
fidivl
nop
dec
mov
sub
push
les
jo
jbe
pop
icebp
leave
fdivl
bound
mov
jo
popa
lds
jo
mov
shll
pop
sahf
or
jo
rorl
add
popa
sbb
jmp
fistps
data16
rclb
adcb
pusha
xor
sub
loop
xlat
mov
pop
call
mov
loope
xor
or
jmp
imul
loop
cmpsb
cmp
jo
icebp
lahf
sub
mov
mull
push
je
out
std
mov
outsb
stos
jmp
cmpb
push
mov
outsl
pushf
jo
mov
insb
lea
jo
lds
inc
sub
jo
pop
adc
loop
dec
pop
ja
sahf
pop
nop
and
lds
sti
mov
and
jae
mov
jo
push
inc
and
push
aad
dec
xor
hlt
lock
aam
nop
scas
mov
insb
popa
ja
inc
aaa
jo
mov
daa
in
pop
stos
out
push
xchg
aad
jo
sbb
inc
ficoms
movsb
mov
pushf
jo
fsubl
in
aaa
push
mov
jo
scas
lret
sbb
dec
sub
jo
pop
jae
popf
aad
fs
inc
mov
sarl
pusha
mov
jo
mov
sub
jo
icebp
clc
fstpl
sti
iret
xor
shlb
mov
fidivl
insb
xchg
in
lods
inc
jne
mov
fs
loop
lcall
out
loopne
nop
and
and
int
adc
jg
and
mov
aam
pop
jo
cmp
sbb
rclb
jo
aad
inc
dec
mov
das
addl
lds
push
mov
fstl
adc
je
movsb
pushw
pmaxub
jo
xchg
inc
mov
les
mov
and
inc
jo
je
jmp
jo
inc
jno
inc
mov
mov
call
jo
or
ret
xchg
cmovg
addl
push
nop
popa
imul
pop
mov
shll
and
clc
cmp
mov
pop
lret
aad
into
cmpsl
jo
adc
rol
leave
cmp
inc
iret
and
pop
jo
ja
adc
inc
movsl
adc
mov
xchg
lret
ds
push
jo
pop
test
add
jae
stos
push
movaps
ret
jle
or
xlat
add
xor
into
and
xchg
pop
gs
xchg
jo
sahf
ret
clc
leave
and
mov
pop
sarb
gs
arpl
ss
iret
bound
jge
pusha
adc
ret
jo
sbb
sub
loope
fs
nop
adc
test
loop
jo
sbb
inc
stos
and
les
jbe
scas
into
movsl
cmp
add
xor
cld
and
cmp
sub
and
pop
ret
lods
mov
repz
mov
mov
mov
xor
stos
push
enter
adc
jp
inc
pop
es
inc
sub
shrb
pop
vpshuflw
in
shlb
jo
sub
ljmp
loop
push
mov
xlat
add
lret
pop
clc
jns
and
cmpl
inc
xor
add
mov
dec
sarb
add
jp
jo
neg
jp
jl
pusha
or
cwtl
mov
shll
ljmp
js
scas
cmp
jo
imul
movsl
mov
je
pop
inc
and
jo
leave
push
lret
mov
xchg
mov
mov
jo
bound
pop
test
jns
jo
or
insl
cmp
jo
int
stos
scas
imul
jo
and
adc
test
xor
out
das
inc
push
in
mov
mov
and
jo
pop
leave
sub
std
dec
ds
xor
jb
lds
mov
pop
shll
daa
test
cli
dec
xchg
xchg
mov
leave
out
pushf
in
adc
sub
lock
enter
jnp
push
dec
test
or
push
add
push
push
xchg
push
lcall
mov
mov
lods
sbb
or
sbb
push
je
cmpxchg
in
ds
shrl
shl
jge
xor
jo
jp
adc
add
push
repnz
add
push
lods
dec
lods
lds
aas
pushw
add
jo
icebp
addr16
movsl
pushf
jmp
and
pop
je
nop
dec
outsb
leave
xchg
test
ja
mov
loop
sub
lds
lods
pop
push
cmp
jp
mov
jo
jne
fbstp
fsubs
jo
mov
jb
shll
inc
jo
xor
and
inc
inc
std
out
push
sbb
push
inc
mov
jo
add
out
jo
xor
aam
jo
sub
es
dec
jo
rol
mov
sbb
jle
jo
insb
xchg
pop
mov
sub
sub
loop
es
jo
add
adc
jo
icebp
enter
inc
cmp
ljmp
sub
push
movsb
jecxz
js
arpl
push
sbb
push
pop
cmp
mov
test
xchg
xor
sub
cli
enter
dec
and
shrb
out
ds
jo
leave
xchg
lret
or
in
movsb
jg
int
pop
pop
pop
popa
xor
mov
mov
jo
iret
and
aas
vmovmskps
cmc
inc
gs
add
int3
leave
jo
inc
inc
fs
rcll
adc
lret
jl
addr16
or
test
xchg
data16
jge
mov
std
mov
pop
insl
push
inc
inc
js
arpl
jo
xor
loopne
sub
scas
addr16
inc
jo
stc
std
xor
jge
les
pop
inc
push
jbe
bound
jo
cs
loop
mul
jo
out
ljmp
outsl
test
scas
jg
jp
jo
insb
pop
cmp
fwait
pop
repz
jo
xchg
movsb
sub
outsl
cli
cltd
xor
scas
sub
repnz
in
push
nop
jl
popf
inc
push
sbb
add
dec
mov
ficoml
fidivs
sub
ret
andl
jo
lea
ljmp
shll
mov
iret
faddl
popa
mov
daa
add
jo
andl
in
ds
push
jg
pop
jle
adc
sbb
add
sub
pop
aam
bound
nopl
xor
js
dec
add
and
inc
inc
das
in
leave
mov
loope
or
hlt
cmp
into
fwait
xchg
je
and
in
lds
or
push
adc
mov
mov
jecxz
rorl
pop
or
sbbl
or
leave
sbb
outsl
jo
pop
cs
xchg
mov
pop
adc
ljmp
pop
popw
adc
lds
mov
cmp
pcmpgtb
xchg
inc
jo
mov
std
and
aaa
out
ret
xlat
imul
xchg
xchg
and
das
dec
aad
je
add
sub
inc
bound
iret
cmp
mov
insb
std
or
or
mov
dec
sub
or
je
cltd
outsb
jo
stc
push
push
arpl
jo
sbb
sub
lods
cmp
cmc
or
or
sbb
jno
or
in
add
jns
int
add
xchg
mov
test
in
sub
push
xchg
leave
inc
jo
test
pop
data16
arpl
lods
sbbl
xor
jo
sti
xchg
ret
and
jo
les
xcrypt-cbc
cmpsl
push
and
push
cmc
imul
lods
fidivl
ret
cltd
push
mov
jnp
jmp
push
out
adc
shlb
dec
cli
lds
cmp
lock
jle
ja
sub
mov
jo
xor
cmpsb
jg
insb
jo
jb
inc
int
jo
lcall
jo
dec
loopne
stos
sbb
leave
inc
testl
adcb
add
stos
jo
lret
xor
aad
xchg
pop
hlt
dec
jo
insb
inc
setle
add
push
sbb
outsl
arpl
sbb
jo
fcompl
pop
pop
mov
cmp
shll
xor
xor
xchg
test
mov
sbb
jo
loopne
jns
xor
xlat
inc
cld
xchg
jns
cli
pop
movups
jbe
jle
out
sbb
jo
in
add
xor
enter
icebp
jns
nop
xlat
and
add
inc
jp
inc
shll
repz
test
lds
ss
adc
pusha
mov
and
mov
popf
xchg
insb
inc
imul
or
xchg
mov
inc
inc
push
jmp
addl
out
push
and
loopne
xchg
or
and
jno
mov
je
xor
ret
jo
lea
inc
aam
insb
jo
fadd
xor
sbb
jo
lds
push
xor
orb
add
into
test
mov
popa
aad
mov
jo
jl
iret
inc
inc
movsb
mov
cmp
jo
sub
inc
pop
mov
jo
shlb
clc
sbb
jmp
mov
cmp
push
dec
repnz
mov
xchg
fmulp
jge
cmp
pop
jno
adc
loope
jo
cs
into
inc
mov
xorl
mov
shll
iret
in
aad
loop
jo
out
jno
xchg
in
in
inc
push
js
fisubrs
mov
adc
stc
movsl
push
push
ds
and
fs
leave
les
adc
inc
iret
inc
stos
mov
add
sti
add
jge
jo
dec
scas
push
jmp
test
jo
jmp
xor
mov
push
jge
jo
cmp
and
sub
dec
ret
push
outsl
pop
xor
jge
dec
sbb
xor
jo
cld
hlt
push
ret
dec
mov
jmp
xchg
pop
scas
push
stos
mov
js
iret
clc
mov
jo
and
pushf
jne
mov
xchg
inc
jo
lds
insl
jo
push
movb
lods
add
inc
xlat
insb
aad
jns
pop
mov
daa
and
push
std
mov
jo
cwtl
cmp
popf
roll
pop
add
push
jo
adc
cltd
lds
shrl
xchg
jo
pop
sbb
jmp
mov
mov
push
mov
jne
dec
outsb
fdivrs
nop
xchg
sahf
leave
fistpl
in
jge
es
jo
fs
lds
sahf
mov
dec
or
jmp
adc
mov
inc
mov
jmp
popa
shll
or
and
jmp
test
hlt
mov
lahf
mov
icebp
arpl
mov
decb
je
int3
inc
sub
adc
mov
mov
js
mov
jo
test
ret
xchg
ror
mov
insl
stc
ss
mov
pop
push
int3
test
add
jo
and
lds
dec
mov
pop
aaa
cld
mov
push
out
or
repz
cmp
gs
and
sub
add
push
leave
jns
jo
inc
test
mov
and
xor
push
push
shl
push
mov
dec
sub
repnz
jbe
cmp
jo
sbb
adc
sarb
js
jo
inc
loope
dec
leave
push
push
lcall
sub
xchg
js
jns
add
in
imul
cltd
push
mov
push
jno
jns
jo
lods
jmp
sbb
mov
outsl
dec
xchg
jo
xor
leave
jo
lods
into
adc
inc
jmp
jp
jo
pop
sbb
pushf
inc
inc
outsb
jo
jecxz
mov
jo
dec
xor
and
adcl
je
mov
mov
icebp
es
mov
push
dec
stos
pop
xchg
cwtl
les
dec
data16
mov
jl
sbb
dec
pop
subl
sub
jge
push
stc
pusha
inc
test
mov
lock
pop
sarb
mov
mov
outsl
mov
jbe
xchg
sti
push
push
and
sub
bound
sub
icebp
mov
ret
xor
add
jo
mov
scas
pop
xchg
in
cmp
imul
ljmp
push
mov
jo
out
cmp
xor
popa
enter
lock
out
xor
adc
or
pop
inc
lret
dec
xor
mov
iret
jno
fstl
js
push
jo
jnp
mov
jo
ret
jle
pop
or
inc
rcrb
sbb
andb
gs
inc
jg
xchg
jo
xor
std
or
fistpl
ret
or
rorl
cmpb
scas
daa
fists
dec
push
add
dec
jg
stc
pop
and
mov
fs
dec
jo
das
dec
add
movsl
cmp
dec
in
mov
js
shr
and
orb
cmp
inc
pop
lret
out
fwait
push
pop
xor
bound
and
push
mov
pop
lret
inc
fwait
xchg
test
jmp
pop
adc
jmp
js
push
jo
cmp
stos
ret
push
shrl
dec
lods
push
sbb
mov
jo
jmp
add
jo
test
cmpsb
push
fdivs
lock
cmp
shr
inc
mov
inc
pop
sbbb
sub
and
cmp
lcall
push
imul
jo
push
jo
fxtract
rcll
jns
lret
add
mov
sbb
inc
or
jge
inc
addb
std
nop
mov
and
ds
mov
add
jmp
sbb
jecxz
int3
movsl
data16
and
cmc
pop
pusha
sti
xor
jo
aam
jne
sub
mov
addb
pop
movntq
repz
jo
pusha
test
xchg
push
fsts
scas
sti
mov
and
arpl
pop
push
push
cld
push
jmp
or
cwtl
cmc
jo
iret
js
push
roll
loop
jg
fs
push
jae
mov
pop
adc
and
cwtl
inc
jae
cwtl
xchg
cmovae
push
xchg
and
ja
sbb
push
pop
pop
loope
insb
sub
orb
sbb
or
push
xlat
mov
inc
std
dec
xor
sbb
jae
sbb
mov
inc
xchg
xchg
dec
lods
ljmp
dec
nop
pushf
iret
mov
jo
repz
xchg
jo
fdivrs
shll
dec
push
inc
mov
mov
inc
insb
int
push
mov
idivb
insb
cltd
inc
movsl
inc
jo,pn
pop
and
test
std
mov
jo,pt
push
lds
movsl
push
jl
inc
jo
and
popf
pop
out
je
cmpl
xchg
je
mov
repnz
push
je
jo
dec
mov
inc
out
jo
add
sub
xchg
sarb
jle
push
aad
aas
adc
fiadds
push
jo
sbb
loop
ret
sarb
jmp
lahf
pop
mov
jne
fwait
jo
cli
xlat
pop
mov
clc
out
decb
movsb
sbb
call
cmp
push
in
mov
ret
or
in
cmc
sbb
cltd
push
imul
jno
mov
jo
popa
and
pushf
lea
push
jo
rcll
jae
push
and
ljmp
jno
je
nop
pop
ss
sbb
rclb
xor
inc
sub
es
daa
cmp
cld
in
lock
adcb
sbb
lds
cmpsb
pop
cmp
sub
outsb
cs
mov
jo
xchg
add
or
mov
jns
sub
outsb
insb
mov
mov
jp
loop
push
nop
mov
mov
divb
push
and
rorl
jge
xorb
or
jo
fcoms
movb
cmp
jmp
les
mov
enter
sub
test
fmull
cltd
sub
das
jo
aas
push
stos
mov
aad
jns
pop
inc
add
sarl
outsb
push
mov
jp
aad
add
sbb
sub
and
jo
incl
int3
push
xor
mov
cmpl
sbbb
pusha
mov
mov
mov
mov
dec
mov
cmp
shll
icebp
jmp
out
mov
nop
dec
cli
lret
addr16
xchg
push
mov
je
cmc
gs
dec
in
pop
test
pop
pop
adc
xor
jle
cmp
stos
addr16
sahf
divl
jge
jg
fadd
scas
jnp
mov
jle
jo
xchg
jne
imul
lea
cmp
add
fcoms
vpshufhw
nop
push
mov
jo
and
sub
or
ret
dec
jo
sub
sub
es
bound
mov
mov
inc
wrmsr
jp
cs
xor
xlat
sbbb
int
mov
xor
pop
adc
idivb
lret
sahf
push
ret
pop
leave
and
pop
add
nop
movsl
js
fcmove
and
in
inc
lcall
test
add
mov
in
movsl
std
aaa
sti
push
push
mov
and
push
and
test
inc
mov
or
icebp
mov
jo
std
pmaxub
les
sbb
stos
roll
xorb
and
enter
jo
cltd
mov
cwtl
in
and
lds
data16
push
adc
movsl
adc
sub
mov
sub
movl
add
push
pushf
mov
loop
xchg
pushl
js
inc
icebp
jo
rorb
test
sub
xchg
sbbb
dec
inc
xlat
jo
pop
sub
pop
jmp
out
adc
add
jo
mov
stos
leave
jo
or
popl
lds
fdivrs
pop
addl
add
aam
jae
es
les
lds
mov
xchg
dec
in
ret
add
push
fiaddl
into
or
add
in
loopne
jo
imul
mov
adc
shll
psubsb
mov
add
or
mov
mov
and
mov
or
and
jmp
cmp
push
hlt
mov
jo
loop
ret
roll
jl
std
sbb
int
test
dec
cmp
mov
lock
and
outsl
jle
loop
sbb
adc
xor
jo
lahf
mov
leave
int
scas
divl
jbe
and
repz
jo
fidivrl
psrad
cld
repz
jo
outsl
popf
ret
pop
jo
aas
jmp
fbstp
mov
push
pop
jo
out
mov
mov
sub
aas
xchg
rorl
inc
and
push
mov
pop
dec
adcb
stos
or
xor
or
and
mov
push
mov
mov
mov
shlb
addr16
hlt
push
mov
insl
out
lcall
cmp
lods
das
lock
test
push
sub
sahf
mov
jnp
mov
mov
pshufw
repnz
jo
dec
mov
popf
or
push
push
aas
dec
sbb
fwait
inc
js
hlt
jo
or
leave
xlat
data16
rcl
sti
pop
mov
testl
push
lods
ret
mov
cmpsb
mov
xor
loopne
pop
jo
dec
push
iretw
stc
pop
and
test
push
mov
rep
scas
mov
cld
inc
xlat
dec
frstor
adc
nop
pop
adc
jo
and
inc
stos
jecxz
or
push
push
push
out
cs
xchg
hlt
into
inc
rcrb
js
lret
inc
mov
jo
outsb
push
xchg
sub
sarl
add
in
jmp
inc
adc
mov
pushf
push
lds
push
mov
adc
call
or
ss
icebp
or
xorb
sar
insb
pop
dec
and
inc
jo
lahf
jae
sbb
pusha
sub
mov
dec
mov
nop
bound
pop
or
xor
int
inc
jns
jb
push
push
jae
jo
lahf
mov
jo,pn
xor
call
jo
loop
push
out
dec
movsb
or
add
mulb
pop
cld
outsl
fstl
ror
push
lret
insb
sub
in
xor
loopne
xor
das
es
inc
lahf
lods
push
sti
jo
sbbb
and
rcrl
adc
sub
push
enter
fs
xchg
pop
jle
loopne
mov
lds
xchg
loop
xchg
pop
sti
loope
cmp
in
subb
outsb
out
jo
testl
fmul
lods
adcb
nop
das
std
je
jle
sub
imul
daa
fisubs
int
roll
and
lea
roll
fdivs
lds
fistps
lods
xchg
shll
clc
push
fnstenv
sub
cmp
loope
mov
or
loop
jo
xor
inc
pushw
arpl
jo
movsl
push
movsb
inc
cmp
or
shlb
popf
pop
inc
dec
jae
or
jo
inc
jge
pusha
push
icebp
fnstenv
or
sub
test
sbb
xor
ret
sahf
mov
jno
stos
sbb
enter
add
dec
push
ds
push
jo
leave
scas
inc
push
ss
inc
imul
dec
adc
in
sub
mov
in
push
push
add
jo
cmp
push
inc
jmp
sbb
int3
pop
jge
xorl
inc
dec
mov
test
dec
sub
and
jl
jo
adc
fidivs
ret
and
mov
and
and
add
loop
add
fimull
lea
fnstsw
sbb
je
xor
jo
xor
dec
add
sbb
jo
scas
into
popf
or
lds
hlt
das
in
mov
add
inc
mov
jo
out
or
xchg
xchg
hlt
imul
xor
mov
jbe
dec
in
jle
dec
repnz
mov
inc
insb
mov
in
lret
mov
test
fldt
fidivrl
std
push
sub
xchg
jo
and
rcrl
shlb
jo
mov
xlat
out
popa
ret
repz
clc
lds
imul
aad
mov
incb
jo
test
lret
test
ret
lahf
mov
sub
dec
cmp
in
outsb
into
jo
loope
cmp
inc
icebp
jne
jb
hlt
popf
pop
jo
mov
dec
inc
push
fbld
js
outsl
fwait
pop
lds
rcll
jo
int
rcrb
jg
leave
int3
inc
jo
fcompp
mov
ret
dec
pop
movsl
cld
lds
dec
pushf
js
loopne
sub
jge
and
and
cmp
les
sub
std
jo
pushf
jmp
jo
jmp
mov
bound
dec
cmp
scas
stos
inc
lcall
js
lock
jae
jo
mov
pop
cmpsl
shr
sbb
inc
sub
and
popa
jo
mov
or
xor
jecxz
shlb
lock
hlt
adc
adc
ret
cs
jmp
jo
mov
movsb
lahf
scas
sub
cmpsl
ret
xor
lds
in
jo
mov
mov
xor
mov
inc
iret
jo
addr16
push
jo
mov
push
jo
jne
mov
nop
daa
fstpt
sub
loope
pop
sub
xchg
adc
inc
bound
jmp
insl
sub
aaa
loop
xorl
sub
pop
pop
out
test
dec
sub
leave
xor
jo
imul
jno
mov
sahf
jle
int3
jecxz
pop
mov
and
push
scas
push
adc
and
int
andb
subl
ss
mov
femms
adc
add
jp
dec
mov
lock
scas
repnz
into
pusha
cli
jmp
insb
xchg
mov
ret
cmpsl
dec
mov
push
lds
push
adc
jo
shlb
ss
adc
push
mov
jl
inc
cmp
mov
adc
or
inc
pop
mov
dec
xor
lcall
jo
mov
or
cltd
gs
movsl
jo
nop
inc
mov
pop
dec
repz
jg
loopne
add
pusha
cmpl
sub
jp
rorb
inc
xchg
cmc
mov
mov
and
movsb
sbb
andb
gs
inc
jo
adc
mov
fs
cs
mov
mov
and
ret
cmp
daa
jo
or
bound
push
sarl
xor
mov
pop
mov
and
lea
icebp
std
int
mul
addb
aad
sbb
jo
fbld
in
mov
movb
mov
jo
inc
jne
imull
sbb
pop
xor
sbb
jg
dec
jo
push
adc
movsl
mov
add
daa
ljmp
cmp
sub
das
and
sub
jbe
lock
or
jbe
push
ficoml
into
gs
lea
xorb
test
ds
xchg
loope
mov
or
dec
xor
lds
cltd
mov
orl
xacquire
jo
xlat
imul
jo
sbb
mov
jo
mov
mov
jo
sbb
lcall
loop
xlat
imul
or
cld
gs
leave
jo
in
stos
jne
mov
jo
hlt
out
xchg
int3
aas
scas
mov
mov
fs
data16
es
mov
or
jecxz
pop
js
loop
jp
cmpsl
bound
pop
jne
xlat
jo
rcrl
inc
fs
jb
sub
lock
jl
or
jle
les
subb
push
jle
test
cmpsb
jo
and
xor
mov
or
jg
jo
ret
xlat
enter
bound
divl
push
mov
jo
sbb
xchg
nop
std
or
test
push
and
cmpsb
and
jo
mov
scas
arpl
hlt
mov
sbb
jecxz
out
test
inc
pop
aam
cli
push
int3
lds
xchg
lahf
jo
push
sbb
or
cld
test
xchg
jns
movsb
and
push
jo
aad
ficoml
mov
out
dec
mov
or
push
jecxz
testb
nop
ljmp
jbe
sub
jmp
add
in
jge
call
jo
and
sbb
push
std
add
add
and
lds
in
xchg
or
pop
mov
mov
and
mov
subb
add
inc
mov
dec
popa
pop
fsubs
push
mov
push
int3
hlt
sbb
cmc
jge
jb
dec
jo
std
mov
jo
sub
jae
and
push
call
and
scas
pop
push
adc
sbb
mov
adc
adc
xchg
mov
sub
scas
jo
int
jae
lock
scas
inc
out
push
push
xchg
xor
bswap
cmp
dec
jo
mov
or
jo
and
add
sub
xchg
js
call
imul
jge
ljmp
add
xchg
dec
fisubrl
or
test
dec
sbb
jge
in
lcall
pcmpgtb
add
pop
jo
aaa
jbe
aad
xor
subb
cmp
mov
sub
mov
in
and
dec
mov
xchg
data16
in
and
out
rorl
imul
or
lea
insb
fs
jo
fidivs
jg
xlat
into
jo
push
dec
inc
mov
sub
mov
cmp
xchg
jno
nop
or
js
jg
shufps
pop
sub
in
dec
dec
push
out
and
insb
pop
xor
and
cmp
daa
repnz
jmp
pusha
and
gs
jo
sti
es
fisubrl
test
or
xchg
jb
stos
jb
push
nop
push
add
pop
dec
mov
daa
dec
push
sub
sub
pop
das
loop
pop
sub
xchg
cmpsl
inc
sbb
push
or
cmp
jmp
rclb
in
xchg
push
mov
dec
jnp
push
mov
dec
mov
das
leave
in
imul
push
add
mov
lahf
andb
mov
jbe
clc
subl
or
add
jp
cmpsb
jb
push
push
sbb
div
in
jo
mov
shll
pop
insl
mov
dec
cmp
inc
sbb
lds
lock
mov
divb
add
addr16
xchg
adc
pop
jmp
aas
or
insb
leave
push
jo
mov
xchg
stos
in
push
jo
jae
loopne
sub
jo
test
mov
repz
cmp
vrcpss
jo
std
pop
jle
sar
push
push
jno
add
call
push
lret
pop
cmp
cmpsb
es
jns
jl
jg
dec
sti
xor
or
nop
scas
jo
push
jmp
sub
inc
jmp
or
aaa
pop
dec
out
push
xor
jo
xchg
test
jae
call
rcrb
ds
dec
bound
push
sbb
int3
sub
push
or
push
in
in
jo
push
jmp
sahf
bswap
jge
into
xor
stc
lds
jo
test
stos
andb
nop
into
movsb
ffree
mov
ss
nop
test
inc
jo
sub
cmp
rorl
mov
inc
jmp
xor
fnstsw
jl
mov
popa
daa
sbb
insl
jo
fistl
js
inc
sbbb
inc
mov
inc
push
xchg
out
push
js
mov
or
jo
dec
xor
mov
inc
mov
and
add
adc
jae
sbb
sbb
xchg
lds
imul
sahf
mov
and
dec
subl
addb
in
icebp
xor
jnp
inc
sub
fidivs
mov
jo
and
mov
ret
adc
and
jecxz
pop
es
or
fiaddl
mov
mov
or
dec
lahf
jo
inc
mov
dec
jo
mov
repz
jo
mov
mov
xchg
jge
ss
jo
xor
jb
jmp
stc
xchg
push
push
adc
add
adc
or
movsl
jo
mov
lods
push
or
jle
jo
iret
xlat
mov
jo
das
aaa
sti
rol
gs
nop
repz
pop
leave
jo
insl
sub
lods
fldl
inc
leave
je
xorb
movlpd
pushf
cmp
sahf
cmp
sbb
movsl
pop
jo
sbb
xchg
ret
mov
gs
jne
ja
dec
aas
pop
inc
adcl
add
mov
arpl
jo
xchg
icebp
jge
or
int
aam
xor
les
jo
loop
sbbl
orl
inc
outsb
mov
mov
cmp
stc
sub
mov
dec
leave
das
lock
mov
sahf
int
cltd
cmp
cmp
out
cmp
aam
and
push
icebp
xor
adc
lock
lcall
jo
adc
mov
add
sub
adc
in
push
xchg
aaa
xchg
mov
add
push
cmp
jmp
xchg
jo
sbb
jmp
mov
jo
stos
lret
shrb
jo
arpl
paddw
rcrb
sahf
and
fwait
jo
xor
xchg
lcall
mov
xchg
jo
mull
push
jo
or
ret
bnd
jo
in
push
outsl
imul
rorl
jo
and
push
or
cld
cmp
or
mov
lds
outsl
movsb
int
jmp
jns
jo
mov
test
sub
and
mov
lds
mov
push
pop
add
jl
xchg
push
lock
out
add
mov
or
or
int
lock
xor
adc
stc
dec
cli
jo
cmp
xor
jl
ss
sarb
jo
push
movsb
cmp
leave
push
xchg
rcr
xorl
dec
mov
addb
sarb
testb
sahf
in
fidivrs
push
popf
lock
or
jo
mov
xchg
bound
loope
mov
int3
or
and
and
mov
loopne
iret
push
out
mov
cli
xor
adc
lea
jo
add
mov
add
loope
cmc
pop
fnstsw
sahf
push
pusha
popf
jecxz
ja
inc
cli
jo
mov
fcmovnb
sub
inc
push
mov
je
push
outsl
jo
dec
cltd
and
or
adc
jo
sarl
jo
or
cld
bound
mov
and
sbb
dec
jo
cli
aad
outsb
pop
es
jo
ljmp
jo
mov
pop
pushf
mov
jo
frstor
mov
xor
jg
js
int
xor
rcll
jp
or
inc
fistps
push
jne
loopne
xchg
shl
xor
jo
jg
cmp
aad
scas
pop
cwtl
cmpsb
jo
ret
gs
or
shl
arpl
jge
jo
stos
fistl
lds
cmp
sti
fidivl
ds
std
pcmpgtd
psubb
loopne
mov
jg
insb
dec
sbb
sub
jle
mov
push
push
inc
jle
setge
shlb
dec
jo
icebp
fildll
dec
add
jo
pop
imul
xchg
mov
push
fisttpl
nop
dec
rcl
mov
fisubs
jo
mov
icebp
hlt
push
cmp
push
cmpsb
mov
adcl
icebp
mov
inc
in
call
jb
cmp
mov
test
xchg
inc
jo
js
or
ret
add
adc
dec
mov
scas
scas
push
push
jns
jp
insb
sbb
roll
jo
dec
hlt
fldcw
jo
add
cmpb
sbb
rorl
lret
push
testl
clc
nop
add
jo
mov
pop
rcr
les
xor
cmp
mov
pop
push
es
pop
mov
cltd
cwtl
mov
js
in
sub
lret
lds
scas
stc
adc
pusha
push
mov
shr
push
rorb
cmp
loope
xchg
or
ja
je
jo
and
addr16
push
outsl
mov
js
jo
and
cmpsb
jae
sub
gs
fmuls
sub
inc
push
and
int
repnz
push
mov
inc
pop
loopne
aad
jo
sbb
xchg
jo
add
std
jo
out
pop
loopne
fiaddl
shlb
mov
leave
adc
add
jb
add
mov
pop
add
in
jo
idivl
mov
data16
cmpsl
std
sbb
call
into
repnz
int
mov
repnz
sub
mov
jmp
das
ja
jno
sub
mov
fxam
add
hlt
jno
push
sub
aas
or
lcall
jo
addr16
ljmp
js
xor
adc
data16
mov
pop
push
xor
sbb
mov
shll
xor
leave
sub
xchg
jl
sbb
js
add
sbb
je
repnz
inc
aas
add
or
movsl
jo
into
mov
lret
les
jo
kaddb
imul
sti
mov
mov
lea
pop
jo
adc
gs
jae
lret
in
fldenv
loop
adcb
ret
jo
imul
jo
ss
xchg
push
in
jo
adc
lds
jmp
mov
pop
ret
incb
cwtl
bound
jb
and
inc
hlt
sub
xor
jg
aam
jl
mov
and
daa
and
xchg
ffreep
popf
mov
xchg
add
in
push
outsl
gs
jo
adc
loope
lock
je
inc
out
jo
push
stos
push
pop
das
mov
lea
jge
xor
jo
cmp
jnp
sub
dec
push
shrl
or
jae
arpl
fisttps
jge
mov
into
add
push
inc
cwtl
int3
add
sub
repz
mov
sbbb
adc
je
icebp
int
or
arpl
sub
jo
or
push
jle
jo
push
shrb
insl
movsl
aam
cwtl
jo
clc
loope
hlt
adc
jo
shll
pop
roll
add
arpl
or
bound
mov
jnp
sub
insb
sbb
xchg
imul
aas
loop
jo
sar
add
or
xor
mov
jo
xchg
push
inc
dec
in
jo,pn
jg
out
lds
addr16
jo
sbb
mov
push
repnz
sbb
out
inc
jns
jo
lds
das
leave
rorl
and
push
leave
in
xchg
dec
inc
inc
orb
push
xor
jo
fs
mov
fiadds
lds
or
mov
or
or
mov
pop
lock
mov
mov
mov
adc
or
pop
ret
sbb
dec
andb
dec
jl
pop
cmp
inc
mov
ss
dec
and
mov
fistpll
in
jle
jo
xchg
aam
add
adc
aaa
mov
stc
jo
inc
nop
xor
jo
shlb
and
dec
mov
test
les
sbb
xlat
js
ja
inc
sbb
in
enter
sbbb
jle
or
insb
lar
enter
lret
xor
sub
xor
repnz
mov
lock
push
jg
cmc
sbb
lods
ret
sub
mov
and
jo
lds
lods
add
jo
add
pop
inc
pushf
insl
je
mov
jmp
xor
xor
jne
push
or
xchg
pop
jo
aam
mov
add
lahf
sub
insb
push
sbb
fimull
fnsave
push
sets
xor
cmc
dec
outsb
mov
aad
fs
jo
test
mov
jo
pop
adc
sahf
ret
test
inc
sub
jmp
cltd
ss
add
sbb
arpl
outsb
loop
into
sub
xor
rep
sbbb
jmp
and
and
xchg
mov
lds
xchg
lcall
add
arpl
xchg
cmp
fnstenv
std
rorl
ficoms
loopne
mov
jo
or
push
sarb
hlt
adc
jo
mov
lret
shll
nop
inc
bound
xchg
xlat
jg
inc
jmp
jb
mov
adc
pop
xchg
rol
xchg
scas
jo
rorl
add
xorb
mov
ds
fnstsw
leave
jo
call
xchg
xchg
mov
into
jmp
jo
cmp
lahf
inc
in
push
cmp
mov
mov
ja
ret
lsl
and
and
int
push
add
js
setp
add
xchg
jo
das
cmc
xchg
sbb
outsb
mov
nop
cld
icebp
and
jae
jbe
jno
mov
or
lods
jb
xchg
add
in
out
and
xor
or
leave
push
out
xor
cmp
cmp
fidivs
leave
mov
pop
test
jo
ret
shlb
bound
mov
ret
mov
cltd
jo
insl
mov
gs
popl
inc
jo
rclb
icebp
jo
push
xor
aam
fsubrp
cs
sub
dec
xlat
bound
clc
jo
sub
insb
jl
sub
push
jbe
aaa
fldenv
jo
adc
shll
bound
cmp
lea
add
lcall
mov
mov
mov
jo
ja
cmovo
cmp
das
add
jo
jl
push
sub
jecxz
xor
mov
sub
shll
inc
js
inc
or
jo
aad
outsb
loope
jp
pop
inc
cltd
push
fucomip
test
repnz
ljmp
mov
sysenter
jns
push
sub
xor
mov
sbbb
jge
pop
cmp
jo
icebp
popa
sub
xchg
add
jo
imul
jae
push
repnz
cltd
loope
jo
loopne
movsl
outsb
pop
jge
jo
sub
push
popa
test
push
lods
inc
cmp
cmp
in
repnz
ficoml
jbe
jo
sbb
xor
and
in
lret
jo
test
push
int
jo
inc
clc
sub
out
jo
jae
sbb
scas
fwait
loope
pusha
and
nop
dec
lds
les
cmp
add
xchg
push
and
lret
jb
lcall
add
jo
xor
xchg
push
hlt
ljmp
fdivrs
xchg
lds
jecxz
push
int3
push
add
out
dec
xor
jo
ret
inc
sub
jg
xlat
out
iret
sahf
arpl
adc
jo
lret
in
popa
and
movsb
orl
stos
jp
das
cvttps2pi
add
filds
xor
xor
js
pop
xchg
mov
adc
lcall
fs
add
inc
cmp
js
push
clc
jo
int
ljmp
insl
inc
push
pop
nopl
bound
dec
xchg
inc
inc
pop
jne
repz
jo
and
ret
jo
pop
mov
outsl
les
jo
repz
xor
push
pushf
mov
bound
jg
mov
int
cmp
jo
xchg
inc
out
push
movsb
mov
cmp
dec
dec
jo
std
xchg
cmc
jl
cli
push
jo
push
rcl
sbb
leave
adc
pushl
dec
loopne
jl
xor
jo
push
aas
push
ret
and
pop
jo
sub
ss
dec
inc
cmp
xor
test
cmp
cmovne
xor
jle
out
aas
outsb
push
movsl
mov
das
insb
cmp
mov
sub
adc
push
xchg
jl
ret
xor
inc
xchg
or
cmp
lea
mov
enter
ljmp
fwait
movsb
dec
cmc
mulb
fdivrl
jo
aam
ret
sbb
add
lret
mov
jo
pop
fldcw
jo
xchg
fimuls
lock
cli
push
lret
adc
pop
jl
add
aas
loope
jo
mov
jle
xchg
push
dec
mov
es
mov
test
jle
lods
jae
jo
jp
or
in
movsl
ss
xchg
dec
mov
lods
imul
and
cli
cmp
out
dec
mov
ret
test
lds
sbb
daa
sub
push
in
popa
jo
aad
das
mov
xor
xor
add
jp
pop
jo
dec
aam
xchg
popa
lahf
jo
or
fs
inc
pop
and
leave
sti
in
imul
or
jp
bound
gs
jo
fdivl
jecxz
push
cmp
add
push
pop
xchg
mul
addr16
jo
mov
sub
shlb
and
into
cmp
cmp
xorl
inc
cltd
jo
mov
pop
jno
jge
sub
es
jo
cmc
adc
fnstcw
cmp
lds
aam
mov
es
jo
leave
xchg
addr16
adcb
and
andb
jno
lds
js
fsts
push
push
jne
add
push
lods
popf
subb
pop
mov
jmp
iret
pop
mov
jl
push
jle
leave
sbb
fwait
in
ja
arpl
push
sbb
aas
jmp
push
inc
xchg
lds
in
jg
sub
fcoms
loope
inc
lret
jo
mov
lds
je
add
cwtl
push
xchg
int
pop
fisubrl
outsl
push
xor
nop
ds
daa
xor
fmuls
dec
in
jo
in
std
jno
nop
addl
jbe
fmull
sub
pop
sarl
sbb
mov
out
jecxz
sbb
pushf
data16
cmp
jne
jo
xor
iret
push
dec
cmc
jo
into
popa
dec
movsl
test
ret
sub
int
ljmp
fbld
popa
icebp
jmp
pusha
push
xor
sbb
push
sti
jo
pop
xchg
fidivrs
cmp
jo
add
dec
jo
out
sahf
mov
sbb
push
int
js
jl
cmc
testl
inc
outsb
xchg
cli
aam
jo
imulb
jmp
lret
jo
ds
and
rcll
xchg
mov
fisttps
int
push
jne
jp
lds
out
xor
int3
loop
or
sti
fnstcw
inc
stc
sub
jo
sbb
test
jo
std
add
mov
push
pusha
jo
movl
push
and
jo
int
imul
pop
cmp
sub
adc
sub
push
addl
and
test
lcall
inc
in
xor
popf
popa
adc
adc
jmp
dec
lods
xor
sbb
leave
jmp
dec
sahf
jge
enter
movsb
inc
mov
sub
les
fldt
xor
mov
je
mov
jae
xchg
mov
adc
lock
jo
xchg
xor
push
mov
xlat
push
jno
shll
mov
cmpsl
fsubp
enter
mov
repz
iret
cmp
test
lea
scas
jmp
inc
pop
jo
inc
pop
roll
or
cmpsl
ffreep
loope
movsb
push
ss
cs
inc
adc
add
mov
sahf
jo
out
data16
int
loope
fs
je
call
out
int3
nop
dec
jl
jb
lret
mov
je
insb
addr16
push
into
ret
fs
imul
jbe
repz
out
adc
ja
fidivs
insb
test
jo
pop
jnp
push
xchg
dec
aas
shrl
enter
cmc
jo
pusha
adc
stc
sbb
push
jo
mov
leave
jo
xchg
in
cmc
test
adc
jo
pop
sarl
or
faddl
lods
std
cli
les
push
ret
out
lcall
or
cmp
nop
leave
jo
dec
notl
and
inc
jo
mov
roll
xor
ret
mov
cwtl
mov
push
or
je
lahf
inc
jo
xchg
adc
lods
and
jo
sbb
or
lds
nop
mov
les
ret
addr16
jo
push
jle
sub
loope
push
mov
inc
push
popa
add
sub
cmp
or
sti
gs
and
or
cmpsb
dec
lea
xor
pop
push
int
es
and
cmc
sub
lock
xor
mov
ret
push
jo
push
in
leave
cs
inc
push
and
pusha
cmp
lds
adc
mov
and
cmc
mov
jge
mov
sbb
jp
sbb
aad
mov
jo
out
sahf
loopne
or
je
adc
pop
cmp
lret
mov
and
pop
cmpl
lea
es
sub
push
insb
cmp
jo
jg
les
lock
in
xor
in
sbb
shrb
subb
ficoms
insb
xor
imul
pop
jo
lahf
pop
cltd
pop
movsl
push
int3
mov
jo
xor
or
lods
std
jo
daa
mov
xchg
fnstcw
in
dec
jo
or
jne
pusha
mov
int
insl
mov
mov
sub
xchg
jmp
jae
mov
scas
mov
jo
sarb
movsl
aad
adc
dec
lds
lcall
sbb
jbe
xchg
icebp
jg
sti
adc
sbb
dec
rolb
mov
pop
mov
mov
mov
push
ret
fdivs
enter
test
pop
data16
stc
loop
mov
fsubr
fwait
cmp
push
gs
sub
int3
jo
sub
and
fisttps
xchg
sbb
pop
jo
pop
lds
inc
or
cs
rclb
outsb
rcll
add
pusha
xchg
sbb
xlat
arpl
xchg
mov
jmp
inc
jo
mov
daa
sub
movsl
aam
push
xor
or
mov
mov
aaa
xor
jg,pn
fst
cmpsb
pusha
mov
leave
subb
jo
dec
or
aaa
jle
cmp
xchg
fs
push
pop
pop
cld
push
das
gs
sub
lds
outsl
in
jo
inc
lods
sbb
jo
int
in
and
add
dec
dec
mov
add
aad
or
popa
push
jle
inc
mov
fs
fst
lock
or
mov
push
add
scas
movb
mov
pop
adc
mov
loope
jecxz
cmp
push
das
mov
lret
int
add
fs
add
in
mov
mov
js
pusha
adcl
mov
xchg
jmp
fwait
and
and
or
cmp
jle
adc
xor
les
lods
push
or
jo
push
and
leave
add
xlat
or
mov
mov
pop
rcrb
push
lret
scas
movsl
inc
fs
sahf
hlt
popf
daa
jmp
adcl
addr16
sub
insb
mov
pop
or
mov
fwait
lds
mov
cmp
jo
adc
inc
repnz
test
in
hlt
mov
out
sub
xor
js
scas
inc
out
mov
in
push
testl
ljmp
repz
in
jl
inc
jecxz
cmpsl
mov
jp
add
testb
dec
pop
ljmp
hlt
push
mov
jo
cmp
cmpsl
or
fsubrl
jo
sbb
rorb
out
cmp
in
into
push
jp
adc
jno
cmpsl
adc
or
add
lods
jo
jb
adc
ret
inc
xchg
push
lcall
pop
jmp
jp
filds
dec
sub
mov
ja
outsb
jo
jno
loopne
out
out
jo
rorb
in
mov
rolb
js
ja
stos
mov
inc
dec
mov
xor
mov
nop
leave
xchg
mov
int3
jo
xchg
repnz
jo
fiadds
cmp
popa
jo
scas
mov
popl
jo
and
repnz
arpl
jo
addr16
fiaddl
inc
sbb
xchg
test
shll
pop
mov
lds
jae
popf
sbb
jmp
out
ret
js
jmp
jbe
and
cld
scas
sub
jo
inc
or
test
sub
mov
push
pusha
insl
jo
into
or
mov
mov
fbstp
nop
and
loop
out
cmp
add
in
jo
rcrb
enter
lea
ret
fnstenv
addr16
daa
dec
lds
pop
test
jo
test
jo
lods
mov
mov
jl
scas
pop
leave
jns
push
jae
movsb
dec
stos
cmp
xchg
push
mov
jo
cmp
mov
jp
jb
push
mov
test
ret
mov
mov
lds
and
stos
fisubrl
rclb
xchg
jo
dec
xchg
test
mov
aad
daa
jg
inc
bound
jo
jecxz
sbbb
jns
mov
cli
inc
jbe
iret
fucomi
cmpsb
addr16
test
ljmp
push
ljmp
leave
mov
and
push
sti
insb
lds
ret
jno
arpl
adc
shll
ficompl
mov
jle
pop
loopne
and
fidivl
inc
lods
jnp
inc
push
xchg
insl
push
popf
mov
mov
cmp
adc
in
dec
loope
rorb
inc
xor
mov
jo
cmc
cmp
outsl
test
sbb
jle
mov
jo
xorb
jo
mov
rolb
in
mov
clc
jo
shll
insb
jo
inc
mov
movsl
outsb
pop
ja
xor
mov
shr
out
pop
fildll
xor
jo
icebp
lret
mull
xchg
in
stc
inc
ud0
loop
inc
jle
mov
cld
inc
or
xor
adc
aad
das
xchg
mov
daa
push
in
inc
mov
cmc
jo,pt
mov
arpl
ja
push
leave
scas
popa
lea
mov
xor
mov
incb
mov
jo
repz
and
jae
jo
mov
dec
push
in
sub
adc
jmp
jge
imull
cmpsb
and
jo
icebp
repz
movsb
test
xor
jne
ret
test
jb
aaa
std
fbstp
lea
and
push
addr16
bound
sti
jne
je
jo
ficoms
cwtl
and
pushf
adc
ret
loop
data16
lds
xchg
pop
shrl
and
add
inc
insl
nop
mov
ja
enter
shll
cmp
aas
fisubs
add
jo
sti
lds
jmp
cs
jo
leave
push
inc
scas
push
xorl
lret
inc
js
jo
lds
das
sub
or
pop
sahf
repnz
ds
xorl
out
ret
or
cld
fxch
sub
iret
sub
xchg
xor
push
jo
jecxz
cmp
scas
and
jo
ret
xor
dec
mov
std
bound
test
imull
repnz
jo
retw
cmp
xchg
leave
addr16
orl
cltd
lds
and
jo
mov
or
or
loope
jns
lods
mov
imul
cmpsl
les
sub
int
mov
mov
lds
xor
dec
xchg
mov
lods
jo
dec
fnstcw
inc
cwtl
xorb
pushf
inc
dec
int
in
jo
pop
out
push
pop
mov
imul
add
imul
push
add
dec
or
dec
rolb
cmp
mov
mov
jns
push
xor
pop
leave
mov
cmpsb
adcb
sub
fadds
adc
push
xchg
fiaddl
xchg
test
or
add
out
cmp
sub
leave
lock
pop
jo
arpl
lds
jno
sbb
in
jo
lods
rcl
pop
mulb
fiadds
xchg
lret
and
inc
dec
nop
push
inc
jmp
dec
inc
jo
pop
mov
leave
and
mov
sbb
inc
jo
add
loop
lret
stos
or
repz
jo
add
popf
mov
jnp
pop
jns
in
std
aaa
mov
jo
xchg
cmpsb
ljmp
pop
push
mov
fbld
mov
xor
xchg
add
lods
ret
mov
out
pop
sub
outsb
jo
lcall
cmpsl
leave
mov
test
mov
sbb
push
sbb
aam
popf
push
cmc
stos
sbb
cld
das
iret
xchg
mov
ret
sub
jnp
adc
mov
sub
rolb
sub
mov
nop
pop
cmp
dec
and
ja
jle
jmp
and
repnz
sbb
lcall
subb
cmp
dec
arpl
mov
pop
inc
xchg
into
lds
push
repz
push
mov
lret
ja
bound
cmp
sbbl
cmp
stos
insl
aad
sub
pop
lret
pop
mov
jo
repz
add
rcrb
push
or
dec
or
loopne
int3
mov
mov
addl
pop
jno
pushf
jo
clc
mov
imul
cmpsl
js
cwtl
add
aas
mov
loop
push
les
mov
add
adc
sub
lds
cmp
imul
xlat
jo
or
bnd
pop
jge
cmp
std
push
repz
leave
jo
in
dec
mov
in
jo
adc
sbb
ja
jo
dec
and
add
fistpll
addr16
add
aaa
mov
arpl
inc
nop
mov
push
jg
mov
mov
jecxz
sbb
jo
pop
xor
addr16
lret
push
test
and
lds
jmp
lret
in
into
insb
imul
int
js
adcb
divl
push
aas
vsubsd
cs
stc
es
in
pushf
mov
push
scas
and
jo
out
ficoml
xchg
in
xchg
jo
lods
inc
test
outsl
movsb
inc
ret
and
incb
mov
cmp
push
lahf
xlat
fs
dec
subb
imul
pop
mov
mov
cmp
ljmp
or
and
jae
mov
mov
or
xor
orb
mov
pusha
push
and
je
xchg
hlt
inc
loope
pop
xchg
jp
fcmovnb
ja
fimuls
xchg
inc
pop
sub
and
lock
push
jmp
movsb
ja
jno
dec
rolb
repz
int3
lods
jp
data16
jo
xchg
hlt
inc
leave
in
jo
scas
adc
pop
inc
aam
gs
pop
loopne
dec
xchg
mov
test
sub
jl
aad
sub
es
shrl
push
inc
daa
fmuls
repnz
out
jle
out
gs
and
dec
xor
mov
inc
loop
mov
adc
push
jo
mov
outsl
jmp
insl
mov
imul
int3
jb
and
xor
fwait
mov
out
jp
jo
jecxz
pop
jmp
xchg
shll
or
sub
adcl
pop
int
jo
pop
xchg
into
sbb
addb
mov
out
nop
testl
jle
lds
xchg
and
jo
iret
lretw
inc
jo
adc
js
int3
sbb
vpsubw
add
addb
fldcw
xchg
leave
js
mov
hlt
testb
mov
jo
sahf
jns
jmp
and
jnp
jo
xor
setnp
idivb
and
loopne
push
dec
in
cmpsl
stc
jo
fwait
or
xchg
mov
js
ret
jge
in
pop
popl
sti
jnp
push
shll
hlt
jecxz
nop
stos
scas
fbld
adc
cli
loope
rolb
and
sub
jo
mov
loop
mov
jbe
pop
sub
ret
stos
ret
bound
lcall
jmp
inc
lret
jo
or
jo
xchg
rcrb
sti
cmp
int3
mov
dec
jo
cld
add
jo
or
inc
inc
jae
call
test
jp
inc
jo
mov
sbb
js
xchg
add
mov
nop
pop
or
pushf
subb
mov
adc
mov
cmp
jo
inc
adc
pop
push
loope
jge
lock
mov
addb
and
xor
push
jae
push
fwait
cmp
es
hlt
pop
and
fstps
push
ljmp
out
cmpsl
push
mov
xor
push
sub
fld1
cld
shll
mov
mov
lds
add
mov
mov
packssdw
jo
dec
inc
jecxz
inc
loop
jo
aam
add
inc
sub
dec
and
mov
add
jo
fdiv
into
xor
jo
or
cltd
scas
cmc
adc
xor
xor
cmp
std
adc
mov
ret
repz
ss
cmc
adc
sbb
loop
int
adcb
js
scas
cmpsl
xchg
jo
add
jo
les
lods
sti
push
xchg
test
or
lock
sub
out
ss
cs
mov
push
sub
fnstsw
jo
ljmp
jo
sub
loop
jnp
add
cltd
lds
enter
jo
mov
mov
ret
leave
sub
shrl
pcmpeqw
int
xchg
xchg
xor
lret
test
cmp
inc
mov
adc
lods
add
outsl
or
les
sysexit
hlt
lahf
es
scas
rolb
fwait
sbb
sbb
push
jne
inc
add
or
jl
mov
push
and
ja
pushf
xor
addps
mov
mov
push
mov
sti
cmpl
inc
mov
jo
in
xchg
push
incb
int3
jnp
insl
scas
adc
mov
push
jo
cmp
dec
loopne
rcrl
inc
jo
pushw
dec
sub
jo
pop
mov
loope
ret
mov
inc
inc
fldt
jb
push
dec
pushf
ret
add
pextrw
jo
lcall
sub
push
sbb
ja
mov
andb
jo
sbb
insl
test
aad
bnd
or
adc
xchg
adc
popf
mov
mov
dec
enter
cld
push
sub
test
sub
cltd
push
sbb
jl
fs
ret
cmc
ja
hlt
push
cmp
push
lret
fiadds
aam
mov
mov
and
jo
ret
mov
jmp
ret
jbe
mov
jo
lds
test
jo
fldt
rcrl
jo
and
shll
mov
jmp
inc
insl
fwait
jo
fstp
divl
pusha
test
pop
pop
lds
jo
adc
dec
in
sbb
imul
std
sub
xchg
xor
daa
jae
jge
adc
and
push
cmp
scas
hlt
jb
rolb
sbb
adc
sbbb
jb
nop
jo
daa
fisttpl
fbld
aam
xorl
jg
rorl
jo
dec
or
jo,pt
jno
loop
cmpl
test
adc
pop
pushf
push
mov
out
jb
sbb
or
cmp
sub
xchg
cmp
xor
inc
nop
mulb
das
jo
or
aad
std
xchg
pop
jo
ffreep
dec
and
cs
pusha
and
jo
fs
repz
sbb
and
clc
fs
leave
xlat
push
jo
inc
mov
mov
adc
rcr
inc
jmp
mov
sub
and
loop
mov
xorb
mov
mov
ret
sub
inc
lds
sbb
adc
jno
push
popa
ss
insb
pop
sub
push
je
insb
xor
pop
fisttps
popf
test
xchg
jne
jo
xchg
mov
mov
mov
or
and
pop
test
mov
jno
cmc
cmpsb
ret
mov
cld
into
or
pop
jo
test
and
jmp
push
cmp
jp
jbe
dec
mov
jle
les
int3
fnstsw
outsl
cmpsb
add
push
jecxz
mov
mov
data16
mov
sub
js
push
mov
sub
and
xchg
jns
sub
test
ja
xor
jle
jo
jecxz
shll
int
jo
jno
ret
lret
outsb
aaa
jge
arpl
lds
in
push
adc
test
scas
xchg
sub
jmp
jp
loopne
pop
sub
xchg
push
in
add
jo
ljmp
icebp
xor
cmp
adc
in
pushl
int
or
ret
mov
mov
les
jo
icebp
sbb
cmpsb
jo
or
lea
inc
dec
add
jmp
cmpb
mov
pusha
jo
fiaddl
xchg
les
sub
xchg
mov
jp
loope
jo
xor
dec
adc
jo
shlb
sub
jecxz
jo
and
sbb
fisttps
shll
mov
cmp
rcll
lcall
loop
inc
adc
mov
out
inc
das
popf
jo
in
js
jo
mov
leave
cmp
dec
jo
loope
cltd
cmpb
mov
xor
xchg
add
stc
mov
jo
dec
movl
test
in
out
shlb
fsubrl
cmp
jne
jecxz
push
cs
sub
nop
lods
stc
jo
rcrl
push
fstp
xchg
js
inc
fistpll
call
adcl
jo
rcll
cmp
add
push
push
je
lock
pop
jo
lcall
push
jmp
xor
js
in
stos
cmp
in
jmp
sahf
lds
int3
test
shll
mov
vcvtsd2si
mov
test
stc
rol
jo
fs
mov
jo
push
lds
push
push
fsubrs
jo
iret
cs
cltd
insb
jl
mov
dec
aaa
fsubl
stc
jo
stos
inc
or
lods
inc
jo
sub
sbb
jge
or
push
cmp
js
mov
out
sbb
sbb
jo
loope
jmp
cmp
pop
jo
loop
outsl
insl
lods
cmpsb
dec
jo
xchg
mov
fs
notl
and
mov
inc
mov
jae
jo
jb
leave
and
and
mov
cwtl
dec
jo
ret
sub
nop
push
sbb
and
add
sub
and
jbe
inc
mov
cmpsb
imul
popf
jo
push
scas
mov
jo
cli
xor
adc
lea
xorb
out
jecxz
ljmp
mov
push
xchg
dec
jno
dec
mov
pop
js
dec
jmp
bnd
push
arpl
popf
pop
sbb
add
ficompl
adcb
push
aas
cld
add
and
pushf
in
cmp
in
jle
aaa
fldt
ja
jo
daa
mov
xor
xor
int3
fisubs
jo
inc
nop
lds
jne
scas
push
mov
push
mov
scas
jle
dec
and
mov
nop
xchg
cwtl
negb
xor
mov
jnp
push
mov
jo
insl
ljmp
push
popa
adc
inc
sarb
and
icebp
and
xor
je
mov
jbe
and
test
sti
pop
jo
and
jno
jo
repz
lret
out
pop
icebp
popa
sub
orb
mov
aas
or
mov
das
fst
sahf
push
fs
std
and
out
jo
pop
mov
and
jo
fldl
jge
repz
jo
adc
sbb
add
lds
clc
jo
sahf
mov
das
hlt
adc
sbb
lds
cli
push
push
popa
or
add
lods
jno
shr
fimuls
inc
add
pop
loope
jo
mov
jo
mov
add
adc
adc
xorl
dec
push
pshufw
sbb
jo
lcall
jo
mov
sbb
addr16
jo
or
xlat
sub
jns
adc
mov
xor
ja
jo
jle
jmp
mov
push
xchg
push
inc
insb
xlat
jo
jbe
push
cli
mov
xor
aad
jb
push
and
jo
ficoms
inc
cli
xor
lods
xchg
jne
mov
sarl
pusha
jg
addr16
iret
add
neg
mov
jo
stos
sbb
ret
cmpsb
ljmp
xlat
adc
jo
lds
in
push
pusha
es
pushl
psllq
int3
sbb
push
sti
inc
jne
jo
add
xor
push
pushf
inc
loop
hlt
cs
or
push
mov
inc
sti
add
xor
xor
pop
lcall
and
dec
cmpsb
xorb
divl
test
jo
cwtl
insl
ret
test
nop
jge
outsb
sub
and
sbb
pusha
cs
mov
push
lea
dec
and
outsb
jg
add
fwait
imul
pop
jmp
subb
movsl
push
push
add
fdivs
and
out
jge
jo
mov
pop
movsb
push
std
cmp
sub
fs
rorb
mov
cli
aaa
cmpsl
repnz
jl
push
pop
adc
jl
imul
insl
adc
jo
icebp
xor
lahf
inc
lock
adc
push
sub
xchg
push
jns
jmp
addr16
xchg
push
inc
fnstenv
or
out
inc
cmpsl
mov
jo
lahf
cs
pop
test
addl
xorb
cmp
jo
jecxz
int3
shll
sub
jae
add
xchg
je
push
idivb
push
hlt
sub
push
xchg
dec
fs
inc
dec
sbb
mov
cmp
and
outsb
fidivl
mov
mov
mov
push
scas
push
call
hlt
sbb
jle
rorl
mov
mov
enter
pushf
or
mov
bnd
loopne
adcl
cmpb
testb
mov
test
lahf
dec
add
mov
or
cmp
pop
or
aas
inc
push
sbb
xor
daa
jo
and
dec
fistps
jno
or
insl
iret
xchg
shrd
sbb
push
adc
test
jl
xor
add
int3
int
sbb
clc
ficoms
inc
mov
je,pt
push
loop
js
jmp
lahf
dec
xchg
test
lds
xor
add
loope
loopne
xchg
jo
les
fisubrl
jle
mov
fmull
ja
in
ret
lock
push
pushf
shl
ljmp
mov
es
ljmp
push
jo
cltd
adc
jo
clc
mov
inc
stos
adc
hlt
movsl
addb
popa
movsb
shlb
in
out
xor
cmp
add
ss
popf
sub
mov
ret
pop
jo
fiaddl
test
xchg
mov
fadd
pop
mov
add
ja
adc
in
jp
mov
jo
add
jl
jmp
nop
inc
icebp
sub
les
ljmp
aas
push
aad
push
add
jne
sub
imul
mov
test
aam
pop
xchg
push
daa
int
pop
stos
js
pop
jl
lock
mov
mov
iret
mov
imul
mov
jo
mov
fiaddl
dec
dec
ret
dec
jo
jle
cwtl
dec
push
xchg
call
or
mov
cld
rorb
fiaddl
clc
mov
xchg
jo
sbb
out
jo
loopne
roll
ss
sub
mov
cmp
xor
jo
and
lock
nop
imul
outsl
jbe
or
push
cmpb
rclb
in
aad
mov
jo
xchg
dec
enter
xor
jo
push
inc
sub
popf
ret
jo
fiaddl
les
test
mov
jo
movhps
ljmp
push
jo
lds
ret
es
jo
leave
loopne
in
mov
and
fs
divl
fsubrl
jbe
ljmp
push
push
sub
dec
shlw
pop
jecxz
ret
cvttps2pi
sahf
pop
add
loop
jo
pop
outsb
int
sub
jo
cmpw
jo
jl
loop
dec
mov
shll
inc
cmovo
mov
sub
iret
jo
pop
aaa
outsb
xor
adc
xchg
inc
loop
lds
jmp
add
fstps
call
in
jle
xor
push
jnp
xlat
and
lods
js
add
jl
jp
stos
and
jo
xlat
sbb
inc
lods
or
or
sub
aam
inc
lds
adc
and
test
inc
cld
jo
pop
mov
jp
push
mov
inc
nop
xchg
hlt
push
dec
mov
xor
jg
jl
xchg
pop
int
in
xor
dec
cmp
and
vpsubsw
inc
add
add
mov
pushl
int
fsts
jns
loopne
std
test
pop
mov
xor
inc
pop
jo
push
loop
push
cli
push
sbb
insb
fisubrl
xorl
lret
add
out
fbstp
mov
in
aas
and
pop
sub
cmp
sub
hlt
adc
imul
xor
push
sub
shr
xchg
jae
lahf
subb
mov
icebp
cmp
ja
movsb
mov
nop
xchg
pusha
std
jp
sbb
and
movsl
xor
push
pop
mov
jo
cmp
pop
jle
sub
push
jo
out
cld
jbe
js
rcll
xlat
mov
shlb
cld
jo
xor
pop
mov
add
jnp
insl
test
dec
inc
ret
sub
xor
jae
ret
mov
inc
xchg
jmp
lret
or
dec
adc
xchg
insl
mov
jo
js
adc
jge
jo
dec
rol
stos
mov
js
cld
jmp
jbe
icebp
jo
ss
call
or
fisubs
cs
inc
inc
mov
jo
mov
pop
mov
in
scas
jge
rol
movsl
mov
mov
outsl
xchg
imul
aas
in
jns
adc
aam
jo
adc
inc
bound
xor
out
aaa
mov
out
dec
jno
jo
xorb
jns
pop
adc
les
inc
bound
jo
sbb
dec
in
dec
cmp
mov
ja
andb
push
mov
int
or
adc
and
jo
sbb
sub
jne
test
mov
loop
cld
jo
jg
test
ret
adc
pushf
jo
outsl
andl
inc
add
jne
sbb
mov
jo
loopne
jmp
or
mov
ret
mov
movsl
cs
mov
fidivl
pushf
lock
dec
adc
fisubs
shr
mov
addr16
lcall
or
inc
add
ljmp
pop
jmp
push
xchg
cmp
dec
out
lock
mov
pop
or
ja
faddl
fnsave
std
mov
shlb
mov
fs
or
out
jle
js
fdivl
in
jle
xchg
lods
out
addr16
mov
sub
loop
dec
loopne
in
xor
mov
or
jae
gs
xchg
das
fwait
jo
lea
shll
and
push
mov
mov
scas
jge
js
and
push
jo
loope
repnz
nop
cmp
int
jle
jo
mov
ret
xchg
jecxz
bound
xor
lds
jp
loopne
push
push
shrl
enter
add
jae
jo
repz
inc
test
icebp
insl
cmp
sti
push
int
ja
add
jl
call
dec
mov
dec
and
rcll
mov
jo
stos
cli
cmp
jae
lea
or
xor
gs
nop
notb
and
movsl
sub
jle
ljmp
xor
fdivl
unpcklps
push
sahf
bound
add
push
mov
sub
push
out
dec
adcl
mov
int3
inc
shll
outsl
jecxz
out
jmp
mov
fistl
cld
push
cmc
js
add
je
or
sbb
gs
xchg
mov
insl
mov
mov
cltd
jge
in
jb
jbe
mov
nop
xchg
sbb
ror
push
adc
idiv
or
in
movsl
cmpsb
clc
push
dec
mov
movsb
and
dec
xchg
mov
dec
jo
jge
lahf
sar
add
pop
sbb
int
mov
lea
pop
jo
pop
lcall
push
mov
insl
mov
inc
hlt
push
push
lock
andl
xchg
dec
std
push
mov
icebp
push
in
jo
mov
adc
mov
pop
cmp
loop
jmp
insb
test
jo
shr
xor
pop
in
dec
mov
repnz
aam
pop
fdivs
xor
jmp
mov
jo
or
jo
call
xlat
or
ret
ss
dec
adc
shlb
jns
jo
pop
fwait
jbe
xlat
mov
jo
sahf
sbb
ret
data16
inc
add
sbb
xchg
arpl
mov
jo
inc
out
sub
jns
or
sub
mull
cmp
lock
jo
mov
ret
xor
pop
and
fstl
cmpsb
mov
imul
nop
cmpb
aas
div
imul
jo
dec
mov
add
sbb
xchg
repnz
xchg
cmp
cs
jl
out
inc
lock
inc
data16
mov
push
jo
test
xchg
testl
inc
push
popa
out
sub
pop
lret
repnz
push
stos
xchg
xchg
es
xchg
and
push
jo
ficomps
ret
jle
sbb
mov
bound
jo
mov
adc
pushf
imul
inc
push
fnstenv
loopne
nop
lods
jge
movsl
aad
jo
pop
fs
sub
adc
cmp
xchg
hlt
sub
nop
adc
mov
subl
jno
mov
sub
push
xchg
mov
jo
sbb
ret
jle
cmp
test
enter
inc
repz
divl
into
fildl
in
ret
inc
rcrl
push
mov
jge
cltd
bound
xchg
xlat
lcall
xchg
jo
imul
jo
dec
mov
jo
jecxz
lds
mov
stos
dec
mov
lahf
aaa
lret
jo
shrl
movsl
add
add
adcb
leave
and
cmp
rolb
xchg
xor
in
cld
sub
jo
shr
cmp
loop,pn
jge
data16
je
fnstsw
pusha
aaa
fidivrl
cld
push
jo
imul
pop
and
out
les
jl
jns
jo
test
fs
loopne
jo
das
add
cmc
in
out
or
xor
mov
aas
roll
loope
xor
mov
lock
mov
xchg
add
jo
jns
adc
aam
dec
add
in
xlat
jo
ret
lret
fs
push
pop
aas
inc
push
rcll
stc
ret
xor
repnz
push
shrb
mov
sahf
jo
imul
jo
push
inc
les
popf
movsb
jo
push
loope
js
lds
lods
js
out
int
in
inc
add
push
xor
ja
push
sbb
cmc
inc
js
js
lahf
imul
and
inc
pushl
arpl
or
ret
gs
lea
int
movsl
fcoml
jo
mov
into
lods
jo
and
lds
fld
insb
shrl
sti
cmc
fimull
dec
outsl
or
in
and
mov
mov
jmp
pop
fwait
jle
notl
jo
leave
mov
xchg
sbb
popf
jmp
icebp
bound
push
repnz
mov
jp
andb
fmuls
push
or
daa
ffree
push
xchg
jo
out
cmp
ret
movsb
jp
nop
fldt
pop
mov
cli
xchg
inc
jo
jl
imul
push
stos
int
addl
inc
push
jp
lds
repnz
mov
push
stos
mov
lock
in
sti
mov
ljmp
sub
push
jo
mov
inc
maskmovq
mov
mov
adcb
jne
pop
jns
mov
pop
xor
push
mov
sub
lock
out
adc
ret
adc
stos
cmp
call
inc
enter
es
fdivl
jmp
lock
push
ret
imul
aaa
jo
data16
insl
xor
mov
or
cmp
js
xchg
adc
into
or
rorb
add
xor
repz
addb
leave
jb
jo
jne
jns
loop
mov
je
xchg
ret
mov
push
lock
adc
iret
xor
jl
push
xlat
loop
aaa
lcall
adcb
lds
bound
sbb
mov
outsl
sbb
inc
das
cmp
fs
mov
sub
push
sbb
shr
fstp
cmp
pop
jo
adc
call
pop
ja
loop
mov
test
xor
shlb
jo
xchg
ja
iret
dec
repz
mov
or
jo
lds
or
fwait
and
nop
and
jne
xor
jae
pop
daa
jge
jle
xor
sbb
adc
mov
jo
ret
mov
lds
rorl
pusha
insl
xor
rorl
mov
mov
iret
xor
mov
addr16
out
jo
imul
sahf
out
xlat
mov
sarl
mov
std
xorl
dec
insl
sub
add
repz
adc
push
out
shrb
jns
jo
data16
push
sahf
mov
inc
pusha
ret
or
jo
jb
lds
mov
sarl
roll
aad
push
or
inc
mov
mov
or
jle
loope
cmp
aam
push
mov
pop
jo
sti
xorl
js
dec
cmp
call
or
xchg
fistps
inc
mov
pushf
cwtl
jo
lret
mov
jl
add
jo
xchg
or
pop
jo
popa
mov
in
cltd
adc
stc
xor
inc
xchg
pop
pop
add
push
icebp
outsl
jo
jecxz
das
xor
push
daa
push
and
inc
bound
ret
call
cmc
add
clc
jo
orb
dec
cmc
push
push
mov
mov
loop
std
orb
inc
xchg
inc
xor
lds
std
rcll
icebp
cltd
mov
notb
ja
pop
shll
pop
add
cmpsl
jo
inc
fcoml
rcl
cli
fwait
data16
adc
jo
pop
add
lcall
aam
push
out
xchg
push
sub
test
and
pushf
repnz
in
cmp
jo
mov
aaa
ret
jne
nop
lds
xchg
sbb
adc
xchg
add
test
mov
push
xor
fs
xchg
mov
sub
loop
push
xor
xorb
fcompl
divl
jo
cmpsl
and
mov
adc
and
je
mov
xchg
ja
nop
aad
hlt
leave
jmp
jge
xorb
push
dec
jle
fmull
scas
dec
imul
cltd
sub
push
movsl
push
jo
pop
shrl
lods
fmull
jo
jecxz
jbe
sub
loope
rclb
jb
lds
jge
adc
nop
inc
popa
push
mov
ret
adc
jo
outsb
test
push
jo
inc
gs
insb
adc
sbbb
pop
jle
dec
sub
inc
js,pn
and
and
cltd
clc
pop
cmp
loop
int
push
pop
js
js
xchg
jo
rcrl
sahf
stos
lock
mov
xchg
es
imul
add
lock
int3
movnti
ljmp
jo
xchg
js
outsl
roll
sbb
adc
pop
cltd
xor
jb
mov
mov
mov
mov
loopne
or
test
loope
jo
cmp
mov
jo
sti
fidivrs
jo
mov
sarl
clc
cmpsb
lret
jo
jl
sub
shll
mov
out
xor
push
insl
mov
xchg
loop
add
mov
add
ret
mov
adc
aas
xchg
ret
xchg
push
sub
mov
or
push
pop
mov
cwtl
and
xchg
js
jnp
jo
out
pop
cmp
nop
leave
xor
aad
bound
xor
mov
dec
push
jle
orl
mov
add
cmpsb
inc
and
jnp
jo
clc
lds
lock
jo
sbb
push
push
inc
test
and
out
jo
sub
push
ret
and
nop
mov
jne
cmp
jns
jo
jecxz
jg
push
sbb
jbe
inc
push
push
scas
and
add
fwait
int3
mov
stos
jnp
stos
fildl
xor
je
and
mov
cmp
cmp
in
jo
adc
push
pop
pop
sti
jo
insb
cltd
jmp
int
cs
shlb
push
fdivrs
pop
in
xorl
push
pop
jo
add
mov
inc
mov
mov
sub
push
bound
data16
hlt
or
imul
cmp
jecxz
call
mov
cmc
adc
cmp
jo
push
ret
lods
loopne
jo
cld
lds
push
lock
popf
ds
mov
repnz
cmpsb
sub
dec
adc
jae
out
nop
aam
adc
sub
mov
ror
gs
xchg
cmpsl
add
lods
xor
leave
stc
or
jo
push
inc
jb
jge
stos
push
lret
pop
sbbb
hlt
scas
out
fsubs
std
sub
ja
sbb
jo
popa
adc
leave
and
mov
or
iret
int
jo
mov
inc
dec
jo
mov
add
jo
pop
fisttpl
jo
mov
inc
mov
shlb
dec
jo
bound
iret
sub
ret
cmpsl
add
mov
loopne
jo
xor
xchg
lods
cmpsb
jo
sbb
cmc
inc
mov
int
push
lcall
fs
sub
rorl
dec
in
push
add
or
rolb
mov
hlt
andb
and
jns
push
out
xchg
push
dec
ja
jo
push
ljmp
adc
fwait
dec
jo
xchg
mov
xchg
pop
aad
add
jmp
shlb
xor
shll
les
mov
lcall
or
aad
adc
clc
push
ret
mov
and
cmc
add
push
add
or
mov
jo
add
add
add
fistpll
cmp
jg
ret
mov
out
xor
sub
jae
subl
pop
lock
out
ficompl
push
movsl
leave
xchg
dec
xchg
subb
mov
add
jae
in
jo
ret
sub
js
push
mov
imul
or
testb
xor
loope
push
jo
inc
test
push
in
mov
push
lds
mov
jo
or
sbb
xchg
stc
sub
sbb
sbb
mov
fwait
sub
arpl
imul
shl
sub
jae
dec
xchg
add
add
fcomps
mov
repnz
in
dec
sub
icebp
lods
popa
xchg
daa
jo
fisttpll
in
jo
push
gs
push
and
lea
fildl
out
jle
mov
sub
xchg
mov
sub
dec
mov
int
jo
add
ds
movsb
arpl
shlb
xor
aad
jo
mov
jns
out
int
sub
outsb
es
mov
push
inc
out
bound
jle
jo
addr16
lcall
into
nop
push
addb
test
mov
jmp
jo
roll
lds
aam
aas
lret
lock
jno
and
inc
xor
js
das
xor
push
fs
jg
push
jo
jnp
imul
mov
mov
mov
add
std
jo
popa
xlat
inc
leave
jecxz
je
mov
jo
lds
push
inc
getsec
sub
jb
xor
outsl
inc
fnstenv
dec
inc
xchg
das
xchg
lret
jg
shl
push
lods
js
jecxz
jo
call
es
jo
cmp
xor
push
xor
orps
xor
xchg
adcb
shll
out
nop
mov
and
pop
jno
adc
dec
sbb
loope
call
in
aad
and
repz
pop
inc
jo
cld
mov
lods
shrb
adcb
or
mulb
cmp
ret
adc
pop
in
sub
cmp
xor
xchg
push
loope
mov
lock
jo
push
ret
mov
xchg
jo
shl
dec
das
movsb
xor
push
mov
sbb
popa
cwtl
xchg
orb
mov
insb
adc
loope
push
jo
js
sub
lea
mov
pop
insl
ds
mov
add
and
jo
jbe
inc
lock
repz
movsl
arpl
push
shll
pop
ja
pextrw
mov
leave
add
jne
loope
js
pop
in
ja
jo
cmpsb
pop
dec
test
lods
push
or
jns
mov
lds
hlt
shrb
inc
lret
jo
or
insb
or
in
push
mov
or
test
jne
fisubrs
xchg
outsb
xorl
fstl
jo
ret
ds
fisubrl
and
test
adc
in
pminsw
je
clc
jle
add
sbb
lret
jns
sarb
leave
aam
sub
mov
and
jle
pop
jp
repz
int
repnz
out
ret
push
add
adcb
jp
jo
es
dec
mov
sbb
dec
mov
adc
rcl
lds
push
fldenv
jo
data16
fdivl
jb
sbbb
cmp
jo
jns
lock
xor
jo
pop
and
inc
sahf
jae
popa
inc
les
mov
ret
sub
adc
js
push
mov
xchg
andb
or
mov
xor
pop
jo
cmp
mov
scas
mov
in
int3
loope
fbstp
jo
popf
inc
inc
movsb
inc
in
jo
roll
movsl
xchg
mov
push
mov
inc
xchg
inc
sub
sti
leave
lcall
mov
jo
test
cmp
push
jo
leave
xchg
lret
jbe
loopne
add
insl
stos
lds
imul
inc
xchg
jle
adc
cmpsb
jo
dec
xor
and
movsb
fnstsw
pshufw
pop
mov
pop
out
dec
jo
test
inc
jne
test
shll
jo
pusha
mov
mov
ret
adcl
push
cltd
push
out
mov
cmp
mov
sub
call
jo
cs
mov
stos
orb
mov
sbb
out
clc
das
sub
int
pop
mov
jo
xchg
jmp
inc
jo
mov
outsl
repz
sbb
mov
jo
stc
js
cld
adc
scas
cmpsl
push
pop
xchg
push
pusha
jge
sbb
in
icebp
pop
jbe
or
add
jo
outsl
push
jne
int
fdivrl
sub
jb
mov
dec
jo
mov
sub
sub
jo
loope
cmpsl
push
pop
inc
jo
andl
jo
aas
loop
jo
sahf
add
jl
mov
push
dec
mulb
mov
mov
shll
jg
inc
popa
inc
pop
sub
mov
pmullw
and
rcll
fisttps
jo
lret
ret
aad
nop
jb
jp
mov
lret
xor
or
jo
jp
mov
lock
sub
aas
in
xchg
addr16
arpl
sub
rolb
lock
orb
jo
sub
adc
push
mov
sbb
jo
xlat
out
dec
mov
jo
std
jno
cmp
addb
mov
popf
in
int
jb
fwait
push
cs
dec
or
and
nop
or
adc
push
ja
incb
mov
roll
scas
inc
cmp
push
jo
adc
cmp
fisubrs
nop
xchg
in
push
js
sbb
jo
dec
mov
movaps
push
loopne
pop
jo
or
aas
shr
jg
pop
xchg
push
mov
pop
xor
ror
pop
jo
xor
add
loope
cmc
das
orb
sub
add
test
ret
popa
sbbb
jecxz
or
and
pop
fidivs
jl
ret
push
pop
fs
int
bts
clc
and
jbe
arpl
sbb
cmc
lock
sbb
jo
aaa
push
mov
jle
jo
jecxz
jg
mov
insb
repnz
inc
outsb
sbb
push
cwtl
adc
lea
hlt
xor
xchg
fcomi
mov
stos
jnp
and
xor
jmp
fnstcw
lds
push
cmp
sub
ds
nop
cmpl
sbb
ja
ljmp
orb
addb
bound
jo
and
adc
sub
jo
push
add
jo
fiaddl
add
aaa
faddl
fsubp
sub
inc
sbb
jo
inc
mov
jo
cli
push
les
test
xchg
jo
popa
sbb
orb
jo
xor
and
mov
cmp
push
adc
inc
push
add
jo
xlat
jmp
pop
or
scas
scas
subb
mov
in
mov
cs
daa
dec
xchg
fisubl
jl
jle
rclb
test
mov
leave
popf
data16
mov
cmp
mov
jo
xor
out
or
int
loope
sub
jb
push
or
hlt
mov
xchg
dec
jo
lds
nop
jmp
dec
imul
dec
mov
fimuls
dec
js
xchg
out
into
mov
std
bound
xchg
pop
ja
shll
lret
cmp
jle
mov
xor
leave
adc
pusha
push
lret
mov
fs
daa
xor
mov
inc
jo
push
or
scas
inc
js
leave
mov
les
cmp
add
jo
xor
dec
jo
imul
dec
mov
lds
or
je
popf
jo
push
push
enter
or
fs
lods
inc
jge
jo
daa
cmc
shll
push
int
in
imul
les
and
inc
adc
loop
jo
aas
inc
xchg
loope
lods
ret
mov
jb
sub
leave
xor
inc
aas
adc
jo
mov
jno
int3
nop
sahf
add
push
clc
adc
jo
inc
nop
pop
mov
and
sbb
dec
insb
imul
jbe
ljmp
in
fisubrl
ret
imul
hlt
xchg
outsl
fnsave
ret
clc
fs
int
pop
push
jo
inc
push
push
jo
std
int3
ss
pushf
push
and
loope
into
jbe
or
lret
out
lods
sub
xor
lock
or
jne
or
repnz
aaa
shrb
sbbl
js
stos
lcall
xor
xor
cmp
and
xchg
push
mov
inc
scas
pop
push
cmp
push
jo
mov
inc
mov
adc
add
testl
jnp
cmp
out
iret
rcll
push
jo
jbe
movsl
mov
andl
lods
inc
pop
pop
jo
loope
pop
jb
pop
push
push
push
lea
and
push
ret
stc
repz
popa
push
mov
loopne
fwait
push
testl
popf
fsubs
je
push
sti
add
inc
push
js
jmp
fistps
repnz
sbb
fadds
aas
scas
stc
inc
mov
jo
inc
in
sub
mov
les
jo
lods
jg
jecxz
xorl
adc
sub
call
ja
enter
xchg
inc
push
clc
pushf
jno
or
inc
xor
jo
jl
out
pop
shll
std
mov
bound
add
and
sub
daa
out
jo
inc
or
xorl
mov
lahf
pop
mov
std
mov
cmp
xor
bswap
aad
xor
adc
mov
les
mov
jo
sub
jo
outsb
cmpsb
shll
pop
or
hlt
out
xorl
test
pusha
jb
or
js
jo
rorl
mov
pop
outsb
bound
je
push
pusha
ret
push
enter
cmp
jo
push
add
sbb
rcrb
mov
fsubs
jo
int
pop
out
mov
xchg
jo
mulb
adc
pop
into
jo
movsl
push
jnp
sbb
mov
push
push
fdivrl
int
hlt
hlt
or
lock
lods
cwtl
movsl
mov
dec
or
jae
sarl
inc
lahf
mov
loope
sbb
aas
inc
jo
into
cmpsl
push
jo
and
inc
jo
jmp
cltd
out
lds
jo
or
mov
je
jo
pop
lret
cmc
or
pop
xor
test
jo
out
and
mov
cli
shll
or
sub
or
jo
loop
and
sub
adc
jl
sti
or
cmovae
mov
jo
pop
xchg
push
jo
sbbb
sbb
or
lods
ret
push
and
test
cmp
ud2
btc
jl
pop
jo
add
insl
pop
mov
dec
jo
inc
out
push
jo
and
shll
nop
jo
sti
and
jbe
je
jo
mov
inc
and
sarl
mov
adc
fisttps
sarl
adcb
into
push
mov
out
rolb
jo
jp
dec
arpl
sbb
push
popf
sub
or
add
in
dec
std
insb
inc
jo
dec
aam
adc
aad
iret
mov
mov
jle
adc
ret
sahf
enter
outsb
nop
jo
sbb
sub
mov
push
xchg
test
out
jb
lds
mov
jmp
or
rorl
push
ds
cmc
loop
pop
nop
je
sbb
mov
pextrw
and
sub
insb
mov
sub
push
dec
push
repnz
jmp
lahf
add
imul
jp
xlat
sbb
push
push
xchg
fbstp
arpl
inc
and
insb
xchg
inc
popf
jg
or
js
imul
shlb
scas
and
pshufw
outsl
insl
cmp
roll
mov
sub
lock
cmp
jo
lods
push
mov
leave
jo
int
mov
jo
sub
test
lds
sub
jo
andl
jne
outsl
mov
int3
xchg
loop
sbb
dec
push
data16
lods
insb
scas
jg
cmp
jo
inc
pop
in
into
sbb
js
insl
pop
cli
mov
testl
pcmpgtb
iret
lcall
xor
js
or
jo
add
xor
leave
lcall
ds
pop
fdivl
aaa
jo
pushf
sbb
outsb
xchg
sbb
cmp
mov
inc
ret
pop
xchg
cli
cmc
lock
pop
sbb
jo
aaa
add
movsb
mov
pop
je
fnstenv
cmp
mov
lds
ss
jb
xchg
jo
mov
fisttpll
jo
xchg
pop
ret
push
into
mov
push
insb
out
cltd
add
jo
xcrypt-ctr
cmpsl
fwait
int
nop
outsb
dec
leave
sbb
xchg
pop
jbe
in
push
jo
mov
stos
xor
and
leave
movsl
mov
push
jno
jo
lock
push
lds
dec
add
adc
dec
leave
stos
push
mov
xchg
sbb
lds
out
xor
addr16
sub
sub
jge
jb
mov
sysret
add
loopne
ljmp
test
add
mov
mov
pop
sti
ljmp
xchg
insb
arpl
imul
ja
jle
clc
les
and
adc
add
cmpsb
dec
loop
sub
mov
imul
sbb
jo
cmpsl
andl
in
cmp
pusha
nop
fwait
jae
je
js
jb
mov
in
shlb
xor
xor
mov
sub
jo
or
dec
inc
mov
ret
xor
dec
fdivs
xor
mov
mov
sub
loop
test
mov
dec
sub
inc
xlat
andb
fcomi
add
cmp
jbe
out
and
jo
hlt
jmp
add
sahf
mov
and
std
jo
por
xor
push
adc
push
js
and
dec
movsl
gs
and
test
push
cwtl
ds
mov
int3
rorb
rolb
jp
jo
mov
ficomps
or
imul
out
adc
sub
or
pop
jns
and
fs
icebp
mov
lahf
decb
pop
xchg
jmp
pop
call
sub
inc
cmpb
jb
cmpsb
jmp
jmp
lahf
jo
cmpsl
and
jns
je
out
add
cmp
shll
cmpsb
das
jge
jle
insb
jo
mov
push
mov
ret
ficompl
je
jo
fnstsw
jo
insb
mov
adc
cmp
lds
xchg
or
fs
jo
imul
jg
hlt
mull
push
lcall
ss
cmp
xchg
dec
stc
pop
xor
ja
xorb
jg
mov
jne
inc
scas
or
xchg
jns
push
out
fsubs
dec
js
out
xchg
in
call
dec
sti
jo
and
cmp
jo
inc
jg
lds
jno
sub
sbb
mov
stos
fwait
and
loope
adc
enter
xor
sub
cmp
mov
leave
push
daa
inc
mov
lcall
fs
lds
xchg
and
shrl
jecxz
popf
mov
jp
push
out
xchg
cltd
jle
mov
mov
cmp
pop
and
mov
je
sub
outsl
xchg
push
add
jo
dec
leave
dec
or
xor
jo
iret
xor
jp
xchg
scas
aad
hlt
push
jo
in
mov
ret
and
jae
push
jo
sbb
mov
sub
int
es
outsb
dec
sbb
enter
dec
fstpt
jo
push
and
sti
jo
dec
sar
or
sub
or
dec
dec
insl
nop
rorl
mov
mov
push
sar
aam
mov
jp
push
jo
lock
jb
cwtl
aad
jo
sub
mov
inc
mov
mov
in
cmpsb
mov
push
inc
sti
js
les
mov
out
add
mov
leave
xchg
das
push
outsl
jp
adc
jo
mov
lods
clc
mov
jo
xchg
or
les
mov
and
jg
jne
pop
jns
mov
xor
ret
in
fldcw
sub
push
ret
rcll
inc
jo
add
push
loop
add
and
cmp
and
jo
pop
lds
fsts
js
push
mov
das
insl
in
jo
mov
lret
push
addb
sub
enter
jl
fnsave
mov
push
test
testb
dec
sahf
popf
xor
xchg
push
xlat
cmpb
loop
mov
insl
inc
sbbb
xor
lret
push
jo
xchg
in
fwait
push
loopne
adc
rorb
jo
lds
in
sub
and
push
ja
jmp
sub
dec
mov
popf
lret
fstps
xor
idivl
movsb
pop
pop
andb
cs
mov
test
push
add
leave
bound
addr16
jne
mov
imul
jb
cmp
jmp
lock
jo
cld
cmp
shll
xchg
inc
pop
les
stos
jl
divb
mov
xlat
mov
aam
mov
lret
cmp
xchg
cld
adc
out
jo
mov
dec
xor
loope
pop
mov
mov
rcr
lds
mov
sbbb
data16
adc
rcr
xchg
gs
jge
enter
lods
inc
xchg
inc
push
inc
inc
imul
xor
add
add
jmp
psllw
loopne
push
cmp
sub
sub
dec
jo
lcall
aad
sub
pop
inc
aam
mov
jo
xchg
ret
mov
fidivs
mov
sbb
mov
call
shlb
sbb
push
push
mov
mov
xchg
jmp
pop
xor
aaa
cmp
mov
flds
jo
in
cs
mov
mov
sub
add
mov
stos
jo
aam
mov
xor
or
enter
jo
loopne
rorl
ret
cltd
iret
xchg
and
add
sub
cmp
cmpsl
jg
xor
aad
jo
and
push
xchg
mov
cmp
push
mov
popa
inc
js
push
out
flds
ss
notb
jo
aad
pushl
ljmp
leave
mov
mov
rorb
mov
pop
xchg
scas
aaa
int3
icebp
jo
daa
rol
sub
push
ret
adc
cli
fwait
xor
repnz
push
dec
push
xor
shll
out
mov
je
es
add
dec
int
outsl
subb
lds
mov
jle
jle
push
lahf
push
jo
lret
loope
cwtl
imul
sahf
inc
inc
jo
jge
lds
or
cmp
insb
aaa
add
jae
mov
xchg
cmp
es
jo
pop
push
nop
or
fildl
into
and
sbb
iret
cmp
pop
jl
mov
mov
sarb
or
loopne
ljmp
data16
loopne
loope
js
daa
mov
jp
cmc
mul
jmp
rclb
cmp
mov
xchg
cmp
cmovge
scas
jo
arpl
or
sub
xchg
push
pop
push
jae
push
jle
inc
jp
pop
cs
mov
inc
and
in
cmp
mov
out
popf
test
jo
mov
ss
fs
ret
mov
and
jo
inc
inc
test
js
mov
bound
lods
xor
fs
mov
and
sub
js
inc
dec
jo
xchg
movsb
sbb
jge
push
rol
imul
stc
std
clc
pusha
push
pop
inc
jo
stos
or
adc
dec
push
push
dec
jae
loop
in
insb
popf
sbb
jl
repnz
test
and
in
cs
push
or
and
dec
push
jnp
cmp
shll
sbb
outsb
aaa
xchg
xor
mov
cli
push
incl
add
lds
hlt
fs
je
cmpsl
inc
orl
jo
inc
cli
pop
mov
jo
sub
mov
jo
jle
movsl
ja
mov
jo
shrb
daa
or
loope
sub
std
out
jo
jp
jmp
mov
sbb
cmp
inc
jo
xchg
push
push
je
xor
mov
lods
bound
js
sahf
shll
pop
add
leave
out
sbb
xchg
loop
push
dec
xor
sbb
jl
insl
stos
imul
cmp
mov
pop
jo
hlt
mov
jp
popa
outsb
sbb
test
push
jo
or
fbstp
fistl
adc
mov
lcall
aas
pop
jecxz
push
insb
jo
fbld
addr16
movsb
outsl
insl
aam
pop
lds
out
ljmp
push
xorl
sti
and
mov
dec
jnp
lods
ja
mov
sub
outsl
rcll
jo
test
les
ret
adc
shlb
or
mov
les
xor
loop
add
out
imul
pop
mov
hlt
mov
nop
cmp
lret
sub
push
sub
jo
cmp
jns
jo
aaa
lret
stc
loop
rcrl
andb
jo
out
insb
and
adc
mov
mov
xchg
inc
sub
pop
leave
mov
lcall
cmpsb
inc
and
int
add
push
int3
cmpsl
stos
movsl
mov
aad
jle
jo
dec
mov
shrl
insl
mov
insb
push
in
or
jo
jns
int3
pop
adc
jo
add
lds
lfence
outsb
inc
sub
jo
mov
sbb
enter
fwait
cmp
inc
nop
xor
add
shll
clc
rolb
push
sbb
cli
inc
nop
push
xor
std
leave
aaa
push
jo
jno
sarl
in
push
xor
adc
mov
dec
jo
inc
movsb
pop
popf
lods
shlb
add
push
mov
dec
xchg
push
jle
xchg
pop
push
stos
test
insb
stc
psubusw
or
sub
loop
xchg
je
test
bound
dec
dec
or
jo
add
and
js
cmp
xchg
testl
mov
or
xchg
bound
xor
jb
int
mov
cmc
jecxz
call
popa
push
pop
or
testl
mov
jo
test
icebp
shrl
mov
push
push
jmp
not
dec
jo
jb
xchg
mov
out
jo
pop
fcoml
fdivl
adc
mov
cwtl
inc
dec
jmp
xor
jb
mov
orb
mov
mov
pop
mov
pop
mov
pop
push
shlb
lods
mov
adc
fistpl
push
and
iret
xor
and
aad
loop
dec
jb
je
mov
cmpsl
lock
iret
shrb
js
pop
xor
jo
dec
add
jne
pop
rorl
mov
push
mov
add
jo
lds
jmp
mov
cli
jl
mov
add
movsl
jae
lret
mov
mov
jo
inc
roll
jo
outsl
mov
sahf
leave
dec
ja
gs
jo
dec
jle
mov
rcrl
adc
ja
pop
std
int
mov
pop
ljmp
and
sbb
xor
imull
and
sub
xor
pop
inc
inc
jne
nop
ret
std
sbb
xchg
pushl
out
push
and
mov
mov
jg
fs
push
mov
and
out
pop
orl
jae
cld
stos
es
insl
mov
jecxz
jbe
icebp
aas
jo
cmpsl
inc
fisubrs
push
rcrl
sub
xor
pop
adc
stc
adc
icebp
ds
ss
sub
je
xor
inc
scas
push
fistl
ficompl
jo
inc
and
dec
loope
call
mov
fdivl
jo
sbb
movsl
jo
popf
sub
push
shlb
and
inc
sbb
inc
or
push
call
and
or
in
jns
sbb
mov
mov
rorb
xchg
inc
mov
jmp
sbb
lds
xchg
dec
cmpsb
push
mov
xchg
jno
jo
pop
sub
das
cltd
out
mov
sbb
sub
or
bnd
loop
nop
sti
adc
es
inc
ja
cmp
rolb
das
mov
orb
inc
pop
js
mov
jmp
cbtw
inc
xor
out
inc
jo
and
mov
jg
scas
hlt
test
add
testb
fbstp
pop
xchg
inc
xchg
popf
jo
fstpt
or
jmp
mov
mov
test
jge
popf
push
jmp
pusha
es
mov
jo
push
push
xchg
xchg
and
ljmp
cmc
ja
mov
shrb
mov
jle
mov
mov
push
out
pop
movsb
clc
and
jb
leave
cltd
pop
add
push
inc
ffree
adc
test
addr16
btc
lods
das
fldt
jp
jo
orb
cmp
cmpsb
mov
xchg
cli
dec
jne
jae
lahf
sub
imul
inc
mov
jo
fistps
mov
xchg
dec
add
popa
xchg
es
std
jo
imul
sti
enter
lds
jnp
jno
jo
je
es
inc
push
mov
mov
jl
icebp
aaa
jge
in
leave
pop
lods
cwtl
aam
jmp
sub
adc
dec
xor
jo
mov
shrl
push
cmp
inc
pop
mov
dec
mov
mov
mov
and
jg
or
popa
rolb
sub
mov
jo
xchg
into
or
int3
mov
xor
aam
ss
rcll
movsb
xor
rorb
mov
mov
int3
mov
add
imul
xor
jg
jo
in
adc
or
jo
xor
popa
fiaddl
push
mov
push
sbbl
jo
xchg
test
lods
data16
xor
pop
and
cmp
jo
popf
sbb
nop
jo
dec
sub
xlat
xchg
cmpl
dec
cmc
es
sbb
mov
inc
jg
js
stos
push
lods
outsl
jae
jo
lds
mov
push
or
test
sub
cmp
jo
rcl
xor
or
stc
jl
addr16
sbb
pop
or
stos
cmc
popa
shrl
js
out
xor
dec
loop
stos
sub
xor
jo
dec
pusha
and
push
mov
fs
and
jmp
push
mov
sub
adc
lret
in
cmc
push
shlb
xchg
fcoms
sbb
loop
inc
das
xorl
cmp
push
sub
js
orb
shl
jno
or
loopne
jo
inc
xor
leave
mov
or
jo
mov
imul
imul
jno
mov
xchg
pop
push
and
or
and
inc
outsb
mov
sbb
cmp
mov
push
fldl
sub
add
out
jo
inc
push
lea
aam
push
data16
ss
in
mov
jo
std
sub
mov
test
hlt
and
movsb
sub
push
jo
adc
jmp
mov
xor
sub
sub
jb
adc
aas
test
cmc
repz
jo
pop
sbb
outsb
xchg
push
add
sbbb
shr
jecxz
jo
bound
repnz
jmp
sub
nop
sti
mov
ja
popw
jo
loop
ret
cli
pushf
les
jo
xor
inc
divl
jae
bound
out
mov
rcrb
xchg
xor
aad
inc
int3
jo
outsl
fimuls
test
loop
jo
inc
test
sbb
rcr
sti
add
jo
sub
ds
fstl
data16
jo
mov
and
add
leave
js
inc
ret
xchg
clc
sbb
and
pop
and
rolb
push
gs
jns
fists
dec
pop
push
sbb
xchg
ret
mov
cmp
lds
mov
or
jo
jl
sbb
mov
shl
ss
jo
in
dec
cli
jmp
push
jo
or
adc
ret
cmp
jns
jo
clc
dec
enter
int
adc
imul
jo
jbe
lods
jns
jge
loope
mov
ror
fmuls
test
je
addl
xor
mov
cmpsb
mov
cmp
cmc
or
adc
jo
dec
push
addr16
adc
cld
jb
xorb
mov
fadds
sbb
daa
jo
dec
test
pop
cmpl
push
jo
xor
clc
jae
daa
sub
rcl
addb
popa
in
lcall
insb
out
in
fdivrs
push
ret
movsb
int
or
loop
jo
lea
dec
xorl
shrb
pop
cmp
cltd
jo
loopne
fwait
push
aad
pop
push
sub
xor
lds
jl
and
shrb
pop
icebp
insb
jo
push
arpl
jns
jo
cs
adc
sub
sbb
mov
adcb
movsl
mov
mov
jo
adc
jle
in
jo
push
addl
icebp
out
loopne
bound
lods
hlt
stos
cmp
sbb
leave
jne
std
xor
push
and
push
cmp
test
mov
sub
int3
stc
push
mov
addb
mov
xchg
cmp
hlt
add
cwtl
xor
sub
jo
ret
daa
add
jecxz
xchg
xor
xor
outsb
rorl
mov
sbb
push
and
cli
push
mov
in
test
dec
add
gs
enter
pop
inc
push
jge
inc
pop
jp
jo
cmpsb
stos
dec
push
std
pusha
xchg
xchg
shlb
xor
inc
mov
inc
push
mov
mov
or
jbe
pop
mov
xchg
test
mov
icebp
test
aad
jo
mov
jo
repnz
and
jnp
push
cmpsl
shlb
adcb
add
imull
addr16
mov
je
lea
popa
aas
jo
int3
aad
aam
add
adc
imul
push
fildl
mov
mov
leave
push
in
je
pushf
pop
jo
and
sarl
notb
and
sahf
fs
mov
inc
mov
lods
dec
add
jp
jo
sub
ret
sbb
shrb
jge
push
stc
mov
out
imul
push
jge
push
pop
dec
cmp
fcoms
int
ss
divl
adc
mov
insl
inc
jo
cmp
aad
dec
xorb
ret
jne
xor
dec
shld
push
les
enter
pusha
pop
test
leave
dec
jbe
pop
fistl
dec
dec
jae
sub
insl
js
adc
mov
lds
outsl
sbb
sub
push
jae
mov
push
jb
mov
fcomi
xor
cld
jle
jb
jo
add
sbb
inc
insl
ja
jg
inc
jo
out
xor
and
jo
fwait
ret
dec
sbb
push
push
jo
insl
pop
lds
add
sub
pop
cmp
lahf
fs
jecxz
in
les
insb
scas
push
jo
push
sub
lock
data16
cmp
test
icebp
push
xor
arpl
mov
hlt
ds
sub
lahf
cmpl
out
cmpl
ffree
sub
subb
mov
into
dec
cmp
fstpt
jo
inc
int
sbb
inc
jo
and
lds
fs
loop
shll
xchg
mov
popa
sahf
pop
and
fs
ds
push
out
dec
cmpsb
jo
adc
out
mov
les
ss
pushf
jb
push
lds
push
push
cmp
shll
push
hlt
je
sbb
sub
dec
addb
jo
and
or
shrl
xorb
out
popl
mov
movsl
cmp
and
outsb
or
jle
push
sbb
lods
xchg
lds
xor
mov
call
mov
and
aas
xchg
psraw
sub
mov
data16
push
pop
stos
ja
jo
mov
cs
ret
or
inc
test
leave
hlt
fdivp
inc
sub
push
mov
xchg
jae
lods
inc
lahf
jnp
mov
stos
and
jge
inc
ds
lcall
jne
nop
mov
jo
int3
lret
data16
or
sahf
bound
sti
ja
lods
jge
push
nop
and
in
push
cmp
mov
cltd
push
cld
lock
push
lret
mov
inc
mov
jle,pn
cmp
jo
rcll
xchg
inc
jg
mov
push
ds
jo
add
lds
mov
mov
popa
or
lock
aaa
ds
jmp
jp
sahf
mov
stos
nop
jbe
sbb
lods
jbe
cmp
sbb
arpl
scas
adcb
sbb
jo
jne
add
hlt
inc
jo
jns
mov
jo
leave
and
addr16
enter
bound
adc
jo
push
test
inc
les
xchg
xor
and
jo
mov
imul
mov
lret
imul
das
shlb
xor
jo
lret
mov
lcall
inc
inc
push
jo
pop
aaa
sbb
push
ret
nop
or
dec
imul
lcall
cwtl
inc
cmp
lock
in
out
loop
jo
das
lds
aas
inc
ss
jbe
loop
lret
mov
pop
insl
enter
iret
push
push
addl
jne
xor
dec
loopne
cmp
dec
jo
addr16
inc
mov
call
es
pop
subb
fnstenv
xor
pop
jo
scas
dec
xor
inc
call
push
rolb
jo
mov
cmp
decb
lock
mov
or
push
filds
aas
cmpsb
cmp
push
add
and
jmp
lds
mov
jo
push
pop
jg
subb
push
push
xchg
jmp
jo
les
mov
leave
dec
fcompl
push
xor
loop
jo
stc
rorl
adcl
and
xchg
xchg
dec
jo
int3
lea
call
add
je
jmp
lods
daa
jno
mov
xchg
jge
push
xchg
sti
pop
ret
subb
lea
push
popa
inc
sbb
sub
add
daa
inc
cli
lock
test
sub
pop
jo
add
mov
test
sub
mov
jle
popa
lds
xor
jo
mov
je
jo
sbb
dec
icebp
out
jbe
cmpsl
sub
jo
push
ss
stos
pop
sub
push
and
out
mov
psubsw
rolb
pop
lret
addr16
int
out
xchg
inc
leave
push
enter
dec
jmp
std
jns
push
xor
pop
int3
sub
push
mov
mov
sahf
jp,pn
icebp
mov
fidivs
cmp
vpackuswb
sub
lods
mov
jecxz
jo
insb
movsl
dec
icebp
adc
pushf
sub
addb
jo
sbb
fsubrs
stos
xchg
scas
jo
bound
test
lock
in
add
rcl
push
mov
std
cmc
leave
movsl
add
out
ret
cmp
jo
add
mov
xchg
mov
ret
jo
cmp
ja
vandnps
sbb
data16
int3
jmp
push
or
test
and
jns
xchg
jb
pop
push
mov
mov
hlt
dec
shll
xchg
ljmp
jne
xor
mov
xor
jo
ret
daa
out
push
sub
xor
xchg
int3
insb
adc
movsl
leave
aad
push
push
popa
loopne
sbb
add
pop
mov
mov
jnp
mov
inc
ds
and
loopne
adc
sub
pop
les
mov
cmp
lds
xor
sbb
scas
leave
jo
lods
cmp
mov
out
inc
jo
adc
outsl
pop
bound
pushf
jo
and
divl
std
nop
cwtl
inc
jne
ret
jnp
js
fwait
sarl
mov
sahf
add
jo
leave
aas
lds
or
aaa
jo
mov
ds
mov
pop
pop
jl
xchg
mov
or
rol
and
jb
divl
out
pop
inc
mov
sub
int3
mov
and
dec
fidivrs
mov
jb
and
lahf
adc
or
jo
mov
push
leave
add
test
add
and
jo
fisttpl
pushf
adc
jo
aad
loope
mov
orl
sub
jmp
sub
sub
aaa
dec
std
mov
xor
mov
inc
push
push
in
add
add
dec
inc
fpatan
icebp
lret
or
and
dec
mov
lds
je
jo
sub
hlt
aad
cmpsl
jo
or
mov
je
bound
mov
cwtl
xor
ret
dec
fldpi
pop
inc
int3
jo
fsubrs
test
adcb
jno
cmc
or
inc
mov
pop
xor
shll
jae
mov
movntq
out
les
sub
cwtl
jo
test
mov
mov
and
lds
sti
rdtsc
push
cmc
in
jle
insb
sub
and
adc
mov
scas
pop
data16
xchg
xor
cmp
sub
lahf
jo
sbb
loopne
testl
je
push
push
jo
sbbb
xor
lds
dec
mov
and
mov
add
js
mov
mov
cmp
jo
cmpsl
aaa
or
or
out
jo
cmp
je
leave
sbb
addb
insb
inc
outsb
or
rcr
and
push
adc
sub
xchg
dec
sub
mov
add
cwtl
subb
jo
pusha
movsb
inc
mov
xor
dec
lds
fmull
cmpsl
mov
int3
ss
mov
cmp
pop
aam
jmp
cmc
add
mov
jo
fildl
inc
ret
jo
int3
cmpsl
xchg
pop
hlt
adc
loope
fdivp
jnp
jae
jo
jl
cld
or
fcomps
dec
hlt
cmp
jo
lea
add
out
movsb
dec
sbb
jbe
out
add
je
pop
jl
and
cld
fs
ja
ret
pop
dec
jmp
ret
shrb
lret
cmp
pusha
rcr
pop
retw
sbb
sub
jno
out
jo
outsl
sbb
or
xchg
or
cmp
jle
mov
call
xorl
mov
shl
mov
xor
js
jns
pop
mov
inc
jo
or
bswap
flds
mov
dec
inc
sbb
push
jb
jo
jne
and
mov
cmp
dec
xchg
dec
cmp
mov
nop
sub
sti
jo
mov
push
jo
leave
inc
mov
dec
xor
test
lret
jae
addr16
test
jo
out
scas
ret
gs
jo
cmp
imul
clc
push
gs
dec
test
orl
pop
jb
xor
andl
jno
inc
shll
pop
xchg
jecxz
xor
aam
push
outsl
xchg
xchg
in
sub
lock
lret
aad
loope
push
mov
mov
and
or
shr
cs
adc
sbb
aad
sub
popf
std
push
xor
rcrl
jne
pop
push
jo
jns
lcall
enter
pusha
lret
arpl
adc
adc
fdivs
outsl
add
gs
mov
fwait
pop
scas
push
and
cmpsl
adc
aaa
mov
xlat
xchg
fcompl
inc
add
gs
idivl
jo
or
iret
jl
sub
jmp
mov
leave
push
mov
push
sbb
adc
jo
add
adc
cmp
jge
nop
pop
subb
xor
cs
sub
mov
lds
ss
xchg
sbb
cmc
push
test
dec
jo
jae
std
add
pop
mov
and
jmp
jno
jo
mov
push
push
bound
cmc
and
pshufw
mov
jo
add
mov
int
sbb
lret
shll
addr16
jle
lds
fisubs
add
shll
mov
loop
jo
xor
lds
outsb
mov
into
ret
jle
cmp
push
sub
outsl
sbb
cli
xor
push
or
mov
fstpt
addl
adc
or
push
repnz
dec
mov
push
push
jge
dec
sub
cmp
xor
mov
imul
dec
cmp
addr16
jo
push
pop
mov
push
adc
jo
sub
sbb
jp
xor
or
jl
scas
cmp
jge
jno
pop
jo
addr16
xchg
jo
mov
bound
aas
arpl
jo
lods
out
ret
das
jo
push
or
shr
orb
fwait
mov
push
insb
mov
add
mov
lds
or
sub
lock
mov
jne
cmpsb
push
inc
sarb
fldcw
or
out
imul
dec
shrl
dec
jo
inc
pop
cmpb
lods
mov
ret
and
dec
loope
xchg
sbb
icebp
sub
mov
mov
out
fs
pop
test
jo
xlat
ret
mov
push
shrl
mov
out
and
jo
sub
bound
test
jb
xchg
push
fs
shll
adc
int
test
pop
jge
push
jo
or
inc
sbb
and
sti
loope
pop
subb
lret
fldenv
fdivs
push
iret
mov
mov
mov
mov
mov
sub
jl
lret
test
rorl
sub
add
lods
orb
jo
cmp
cmc
mov
std
adc
fdivs
mov
jns
neg
jo
ja
sub
xor
lods
aad
stos
fdivrl
stos
je
addr16
mov
aas
sbb
bound
jo
outsb
stos
or
and
pop
lock
in
jo
sbb
push
in
dec
jo
pop
out
mov
xchg
jo
pusha
mov
ret
dec
push
leave
sbbb
rcr
add
mov
ds
cli
cltd
mov
cmp
pop
sub
mov
pop
jo
mov
sbb
inc
add
add
and
push
out
ljmp
inc
ret
push
rorb
or
inc
mov
jo
pop
adc
gs
rcll
leave
add
add
into
pop
out
jo
cmp
mov
jo
xor
ret
stos
lods
loopne
add
sarl
adc
icebp
aaa
jo
cwtl
ficoms
fs
or
push
idivl
ljmp
jo
stos
testb
pop
loope
jo
les
aad
in
jecxz
shll
jmp
out
std
inc
imul
jo
adc
ret
push
xchg
jo
aaa
js
addl
push
leave
jbe
les
xchg
cltd
jnp
sahf
sub
nop
fmul
xor
sub
rorb
aam
cli
jo
in
sbb
roll
ret
and
sub
vcvttsd2si
mov
or
inc
xchg
insb
jo
lret
add
inc
lds
mov
js
into
test
nopl
andb
call
in
mov
setb
inc
inc
and
insb
dec
in
push
clc
mov
jo
mov
jle
inc
xlat
jo
aaa
mov
enter
jo
dec
daa
loopne
sub
stos
jo
lret
xlat
inc
mov
outsl
jmp
cmpsb
push
mov
in
in
cmp
pop
jo
loopne
fadds
outsl
mov
sub
push
outsb
mov
jo
sbb
rcl
mov
adc
xorl
jae
lcall
loope
and
push
ret
push
xchg
jo
lds
and
clc
jo
sub
inc
adc
fidivrs
dec
pop
and
cmpb
das
mov
mov
mov
mov
hlt
fwait
jo
adcb
xchg
cmpsb
inc
jo
lods
cwtl
and
jo
adc
cmp
pop
push
cmp
out
mov
inc
xchg
leave
jl
jo
push
mov
std
stos
pop
movsb
mov
jg
clc
xchg
lret
out
jo
sbb
stos
and
shll
jo
pop
outsl
mov
add
jle
jo
lret
orb
movsb
push
sub
and
loopne
inc
jp
jo
cltd
ret
rcll
or
inc
jo
inc
imul
in
push
jo
out
fldl
shll
jl
push
and
mov
test
scas
aas
jo
mov
mov
add
or
lds
pop
in
sub
mov
cmpsb
push
mov
sbbl
xchg
sbb
cmp
or
fmuls
mov
mov
ret
shlb
cmc
rcrl
fbstp
inc
add
or
push
inc
jo
or
lds
pop
xchg
in
pushf
pop
pop
inc
ss
int
push
ljmp
test
push
mov
xchg
negb
scas
hlt
movsb
imul
adc
bnd
loope
pop
das
dec
int
xor
add
jp
adc
mov
pop
push
dec
js
vmovmskps
sub
jne
mov
cmp
jo,pn
fsts
insl
nop
lret
inc
scas
push
jo
adc
insb
mov
cmp
and
jl
aaa
lahf
mov
sub
mov
lcall
mov
push
jo
lods
cmp
xor
push
xorb
jbe
aam
inc
movsl
mov
ret
jne
jno
pop
loope
jo
mov
inc
pushl
adc
mov
nop
push
add
movsb
or
repz
jb
fistps
fisttps
cmc
daa
mov
pop
ret
in
repz
hlt
cmp
cmp
xor
dec
stos
xchg
cld
aam
inc
push
dec
xchg
pop
xchg
lds
xchg
sbb
shll
mov
push
jo
xor
dec
test
sahf
jns
push
mov
jae
sbb
or
mov
cmp
sbb
xor
sub
jo
cwtl
movsb
xchg
shll
lock
inc
insb
jo
fwait
addl
lds
dec
jge
dec
push
rorb
bound
jbe
sbb
push
lds
jns
fisttps
xchg
jecxz
insb
adc
dec
jo
mov
es
sub
ret
lret
test
popf
mov
jl
pop
xchg
fabs
jo
pusha
mov
inc
stos
leave
jno
dec
mov
scas
lock
adc
lock
andb
pop
push
jo
daa
jg
in
mov
sbb
xor
cli
std
sub
push
into
addb
ja
xchg
dec
stos
jo
sub
enter
jae
dec
outsl
jo
out
rolb
int3
lds
inc
int
push
sbb
xchg
xchg
and
push
ret
loopne
adc
add
xchg
ljmp
loop
inc
in
push
mov
fsubs
jo
mov
push
jg
inc
jo
dec
repz
mov
push
and
or
outsb
mov
loop
adc
jp
lret
cs
push
shll
sub
in
mov
add
xor
push
inc
in
cwtl
mov
jo
insb
daa
jnp
test
out
je
icebp
gs
lds
movsb
inc
sbb
mov
leave
fistl
pop
das
jmp
repnz
arpl
xchg
mov
push
pop
mov
mov
sub
mov
jle
jo
push
out
jae
xor
xorb
jo
or
push
push
cmp
cld
sahf
repz
repnz
loope
adc
sub
inc
daa
int
add
pop
movl
push
mov
ja
mov
and
std
pop
rolb
or
cmp
jmp
jo
pop
shrl
outsb
pop
xchg
push
jmp
and
js
hlt
popa
xchg
push
add
nop
sbb
imul
roll
js
out
jo
adc
int
cmp
jo
ret
inc
out
inc
in
xchg
sub
dec
jle
jle
pushf
jno
mov
sbb
aaa
jo
call
and
mov
pop
sub
push
or
int3
xor
sub
lock
xchg
inc
popf
jo
mov
fwait
jle
ret
sbb
in
ljmp
jo
jbe
sbb
cmpsb
jo
add
loope
jl
in
mov
je
add
inc
cmc
push
js
mov
fcom
fsts
cli
mov
cmovne
insb
jo
xor
gs
inc
roll
lcall
mov
ss
leave
mov
jmp
xor
lret
mov
adc
in
clc
les
push
xchg
or
mov
nop
add
jne
fsqrt
jo
push
in
cmp
arpl
out
jle
mov
dec
subl
sbb
and
jo
push
mov
stos
pop
mov
jne
repnz
ror
imul
xchg
pop
push
jo
test
and
sti
sub
xchg
aas
je
jo
mov
fisttpl
into
jo
test
cmpsl
dec
xchg
je
lret
push
mov
cmp
fisubrl
adc
in
imull
jo
pusha
movsl
jnp
loop
lret
out
icebp
lcall
out
mov
dec
mov
icebp
out
xor
jno
and
icebp
pusha
mov
xchg
js
inc
jo
xor
scas
js
sub
pop
je
mov
mov
jmp
subb
sub
xchg
add
jo
jecxz
jnp
scas
cmp
mov
push
popa
sub
pop
popf
cmp
dec
cmc
sub
rolb
push
jo
and
fld
or
xchg
adc
push
cmp
icebp
push
in
loop
jle
mov
cmc
lret
mov
hlt
dec
and
mov
sub
std
xchg
loop
xorb
jge
inc
lds
dec
push
nop
mov
outsb
ja
imul
cli
jle
sbb
popl
out
aas
jo
outsl
ret
jo
mov
rolb
fimuls
aaa
movsb
push
dec
adcb
jnp
xor
js
fidivl
icebp
rcl
and
push
mov
lods
jb
hlt
es
jmp
lea
mov
cmpsl
out
cli
jl
inc
cmp
sbb
dec
jo
or
push
sub
xchg
mov
inc
mov
adc
lds
out
jo
pop
add
lcall
add
test
jno
mov
xchg
inc
nop
dec
popa
dec
jbe
insb
jbe
movb
adc
shr
aas
jmp
sbb
mov
nop
adc
aad
lock
jae
pop
shlb
push
cmp
jo
pop
jns
mov
inc
mov
mov
xor
out
daa
andb
ret
cmpsb
xlat
jo
imul
cs
imul
jne
scas
jo
lret
or
lds
sub
fs
test
adc
fnsave
mov
lcall
mov
das
pop
jb
cwtl
push
xchg
mov
mov
mov
xlat
dec
pop
xorb
arpl
xchg
inc
dec
bound
jo
aas
jne
popf
ss
mov
fisttps
dec
lcall
aas
adc
pop
test
jo
and
jno
out
arpl
push
pop
pop
mov
lcall
pop
shlb
pop
xchg
insb
adc
or
outsb
cs
xchg
shrb
xor
inc
data16
scas
xchg
push
mov
ss
subb
dec
fsub
push
fisttpl
push
aas
jo
int3
shl
pushf
sub
lock
sahf
dec
inc
mov
orl
dec
jo
out
mov
std
jb
push
mov
lret
in
filds
pop
cs
insl
add
cmp
pop
insl
mov
push
popa
dec
test
hlt
ret
adcb
pop
mov
mov
cmc
mov
por
sub
pop
push
push
je
add
jo
jb
push
pop
aad
jo
addb
mov
scas
jns
sub
xor
jbe
push
emms
enter
stos
jnp
dec
cmp
xorb
sub
adc
int3
push
hlt
lea
push
fisubs
inc
je
gs
or
add
rcrb
mov
adc
popf
fimull
fwait
jo
divb
dec
xor
jno
lods
js
out
aaa
sub
fmuls
js
mov
push
and
es
pop
jo
mov
aas
outsb
xchg
bound
jp
test
mov
inc
cmpsb
jle
mov
in
sarl
je
pop
ret
scas
mov
mov
jnp
sub
lds
xor
aad
jb
je
jo
inc
sub
repz
sbb
stos
jo
fwait
cmc
test
mov
jo
es
mov
push
sub
nop
mov
cmpsb
push
jle
lahf
lret
mov
flds
jo
push
mov
jge
scas
push
jo
mov
shr
inc
popa
jo
xchg
cli
adc
dec
cmp
jo
dec
ret
sub
sahf
and
push
mov
insl
mov
and
int
jo
lds
adc
in
jo
movsb
bound
jl
mov
pop
mov
add
jbe
adc
shl
aaa
jmp
ret
ret
adcb
nop
pop
fbld
jecxz
js
icebp
mov
xchg
hlt
negb
int3
insb
or
andb
mov
xchg
jo
jb
in
in
lret
add
jmp
cld
jns
cmp
mov
mov
je
out
jo
jnp
xor
jp
jo
xorb
cmp
int
int3
popf
dec
cs
es
push
mov
xchg
jo
sbb
and
lods
sti
inc
or
idivb
push
push
cmp
xchg
out
enter
adc
or
rcrb
pcmpgtw
push
xchg
jle,pt
aaa
popa
cmpsb
jo
enter
idivl
push
hlt
popl
imul
or
dec
jo
xchg
sub
out
jo
dec
in
mov
push
jo
js
pop
or
std
and
mov
ret
push
jmp
mulb
jo
bound
add
cld
pop
ljmp
jle
xorb
shr
mov
mov
test
fs
popl
out
and
jo
xorl
pop
filds
sbb
and
mov
xchg
repz
add
sub
notb
xor
sbb
xchg
sub
cmp
data16
std
int
push
popf
or
aaa
dec
and
mov
lods
jp
leave
jo
jns
push
sub
scas
xchg
push
pop
jnp
test
add
jle
push
mov
fsts
cmp
xor
add
rcll
inc
push
lret
mov
lock
push
xchg
xchg
repnz
ffreep
push
cmp
jo
mov
nop
sbb
push
outsl
mov
insl
jo
push
cltd
enter
ret
shr
lock
js
rorb
subb
popf
sub
or
dec
lahf
cmc
int3
mov
lods
xor
loop
fadds
inc
test
scas
cmc
cmp
mov
mov
push
xchg
mov
shrl
push
sub
andb
jo
cmp
lds
addb
xor
imul
in
sbb
and
jo
fsubs
add
sbb
xor
pop
les
sub
stos
jo
leave
push
es
bound
push
add
jno
jo
jg
mov
jo
xchg
ret
std
adc
in
jo
aaa
icebp
cmpsl
dec
push
sub
jo
push
mov
adc
enter
push
xchg
negl
gs
inc
sbb
leave
out
mov
jmp
out
cmp
cwtl
subb
out
js
mov
fcoml
jbe
into
jo
mov
mov
pusha
jmp
jge
jo
xor
mov
jo
jno
xchg
push
pop
fsubs
addr16
push
out
add
or
cmc
ja
jo
inc
sbb
pop
loope
jo
dec
inc
je
insb
add
jo
xchg
les
mov
add
cmp
push
and
inc
push
icebp
popf
adc
lret
sub
sub
mov
dec
xor
addr16
idivl
jo
pop
mov
lea
jo
in
mov
xchg
mov
jb
das
xor
js
sub
jge
jo
int3
mov
in
cmpsl
icebp
jns
jo
mov
imul
aas
jp
jo
cmp
daa
jbe
mov
jo
out
inc
and
sub
lea
adc
push
mov
addr16
inc
outsb
jo
jg
xor
popf
ljmp
push
call
je
scas
movsb
dec
jg
test
aad
jo
inc
sbb
ret
repnz
jo
lds
addr16
sub
ss
cmp
push
bound
jo
mov
neg
jo
xchg
mov
dec
jl
aam
les
cmp
push
mov
xor
jl
pop
mov
xchg
jbe
shll
pusha
mov
int
ud1
xchg
cmpsl
jo
test
jge
jo
xor
lret
sub
loope
sbb
lods
clc
mov
fs
jo
xlat
jg
pop
call
fsubl
stc
add
sub
subl
inc
test
dec
mov
xchg
sar
mov
mov
andb
jo,pt
rcl
xor
fcmovne
jo
adc
mov
jo
js
jl
dec
mov
mov
jmp
cmc
sub
icebp
es
in
fs
mov
jns
data16
push
rorb
stos
fxch
push
mov
dec
test
jo
les
jo
sahf
leave
jns
roll
jb
ss
test
inc
cs
xor
jl
mov
adc
popf
jnp
pop
jle
in
jo
jb
ds
mov
aad
mov
sub
or
push
sbb
aad
data16
jae
jo
leave
inc
pop
and
jg
mov
dec
pushf
in
push
nop
mov
jge
shll
lret
repnz
mov
jo
sbb
clc
sub
adcl
push
repz
push
fdivl
xor
sub
lods
push
pop
test
cli
insb
cmp
jo
cmc
push
mov
sbb
jo
lds
rol
sbb
inc
in
into
fwait
lock
and
mov
stos
and
sbb
shl
push
call
mov
or
neg
sub
mov
or
push
xchg
xorb
cli
shlb
shrl
jl
mov
mov
lds
push
cmp
cmc
daa
mov
sub
adc
sub
mov
mov
pusha
sub
jne
add
sti
and
bound
scas
mov
jo
shll
imul
cmp
dec
in
paddq
push
xor
jle
roll
insl
pop
jecxz
cld
loopne
jo
mov
and
in
gs
lret
push
and
push
jo
cmp
arpl
imul
jo
push
cmp
mov
cmc
inc
arpl
mov
fdivs
insb
daa
movb
and
movsl
inc
cmp
out
leave
jg
jp
das
arpl
mov
inc
push
adc
js
mov
push
push
push
pop
bound
or
pusha
js
int
jo
dec
adc
xchg
and
jo
sub
mov
cmp
mov
and
pusha
ret
mov
lcall
inc
ja
repz
push
jmp
popa
cmp
bound
mov
leave
jecxz
hlt
add
jo
jp
mov
dec
or
jno
es
dec
mov
sbb
and
sbb
sbb
jmp
adc
and
pop
jo
mov
addr16
leave
and
sbb
dec
cmp
repnz
dec
pop
dec
out
jp
lock
inc
xchg
cltd
sbb
jmp
in
mov
jo
arpl
pop
jo
jns
mov
jo
add
mov
cli
adc
call
or
rcll
mov
jo
test
pop
add
pop
jo
cld
mov
xchg
mov
bound
leave
test
mov
push
rcrb
or
or
xor
jo
sarb
or
add
mov
sbb
jg
pusha
pop
push
subl
jge
jo
adc
adc
jge
jl
inc
popa
jo
sbb
xchg
das
add
icebp
in
adcb
lret
ret
je
or
dec
fdivl
push
stos
inc
xchg
jo
icebp
or
push
shlb
sub
test
cmp
repz
and
outsl
mov
pop
or
je
arpl
out
rcll
clc
jo
adc
mov
int3
addr16
jo
pop
iret
push
inc
movsl
jo
mov
in
cltd
loopne
jo
sahf
jnp
pop
pop
xchg
movsb
mov
imul
adc
jo
add
jle
jg
jecxz
jmp
sahf
jl
jmp
lahf
lds
adc
loopne
mov
push
dec
xchg
ja
ljmp
insl
out
sbb
sahf
jo
mov
ljmp
scas
or
inc
cmp
sbb
in
cs
jecxz
jmp
cld
leave
fwait
jo
in
or
shlb
fld
scas
push
adc
jo
iret
sub
add
jno
jo
xlat
or
cmp
stos
jo
std
or
mov
aad
pop
daa
lret
xchg
dec
push
adc
mull
adc
jo
ret
aaa
mov
pop
lock
cmp
fidivl
xorb
jb
jbe
clc
mov
mov
and
mov
shll
sbb
mov
jno
cmp
xor
jo
jle
gs
mov
shrb
pop
ret
add
insb
xchg
out
push
jp
jns
lock
push
hlt
jo
adc
sub
push
mov
in
out
and
mov
repz
pop
mov
repz
cmp
mov
pcmpgtd
adc
enter
add
push
jl
push
push
sub
icebp
sub
sbb
test
sbb
das
push
ss
nop
mov
cmpsl
faddp
bound
leave
add
jb
popa
jmp
mov
jo
cmp
ret
cmc
mov
dec
scas
pop
adc
pop
imul
sub
ret
xchg
je
sub
rorb
cmp
cmp
mov
sub
ljmp
roll
sub
adc
cltd
jo
cmp
pop
xchg
mov
mov
adc
in
pop
sub
jo
sbb
push
jo
lds
test
xchg
fwait
cmp
dec
jmp
scas
imul
lock
repnz
cmp
xor
mov
inc
push
mov
in
cmpb
cld
jno
jo
int
jecxz
dec
add
cmp
push
add
ret
lds
shll
jns
cmpb
sti
cmp
xor
xorb
mov
or
in
lods
or
jbe
aam
outsl
push
jo
incb
mov
shlb
push
jo
mov
mov
and
nop
hlt
in
test
stc
btr
stos
aas
leave
or
jo
rcll
inc
aaa
cld
push
lret
jmp
stos
mov
push
jo
mov
sbb
popa
daa
jo
pushl
mov
lods
mov
cld
xchg
xchg
les
push
adcb
aad
pop
xchg
int3
jbe
in
cmpsl
jo
into
xor
je,pn
jo
jns
stos
enter
jo
lahf
or
lds
adc
xchg
cltd
aad
iret
icebp
sbb
or
and
cmp
xchg
jg
mov
leave
jbe
cmpxchg
cmpsl
xlat
push
xchg
mov
cmp
popa
mov
mov
jne
out
cwtl
lds
cmp
scas
loopne
movsl
js
mov
sub
mov
aas
ja
je
inc
sbb
rclb
jo
outsl
dec
test
jge
mov
rcrl
leave
in
loop
fistl
lds
push
repz
jo
dec
adc
add
sub
sbb
pop
pop
or
sub
jo
fst
jp
ret
jmp
popa
leave
or
jne
bnd
mov
mov
add
popa
lock
and
cmpsl
jge
inc
sahf
xchg
test
dec
and
inc
loope
stos
loop
les
mov
jle
add
imul
pop
mov
js
xchg
out
arpl
outsl
jmp
jge
pop
pop
push
into
and
push
jo
push
lret
mov
das
les
mov
jo
inc
mov
clc
mov
ret
sbb
jae
shrl
dec
mov
xor
sub
orb
mov
ds
iret
mov
mov
addb
jo
cmp
pop
lods
rcrl
jl
mov
push
pop
mov
cld
xchg
xorb
pop
and
add
jo
test
dec
xor
jo
fstpl
insl
push
jle
fs
push
xorb
adc
dec
dec
test
jo
mov
int
jo
out
popa
sbb
push
mov
les
fbstp
xor
sbb
mov
das
jo
popa
addr16
lret
mov
xlat
sub
ret
jo
xchg
icebp
pop
push
xor
leave
jo
xchg
lods
jae
push
rcr
jo
lds
rcl
bound
iret
jae
xor
and
ret
fcmovbe
nop
mov
mov
push
into
inc
in
and
pop
jo
mov
cltd
jae
xor
fdivrl
fnstcw
ja
sub
dec
aam
std
mov
ret
xchg
sti
xchg
lret
je
jo
fcoml
jo
sub
sti
xchg
jge
rol
mov
subb
fsubrl
adc
sti
mov
and
and
int
cmc
push
jo
sub
ret
ret
stos
jo
lds
rcrb
popa
xchg
popf
jae
inc
movsl
xor
xchg
test
ds
int
mov
mov
xor
sti
xchg
movsl
int3
jo
int
add
or
test
and
mov
xor
pop
xchg
lret
mov
sub
js
insl
xorb
mov
ficompl
pop
test
sarb
nop
loop
in
xor
push
lock
xchg
pop
sub
jo
fildl
pop
inc
insb
jo
lcall
test
scas
jo
mov
mov
cwtl
ret
roll
push
add
lea
mov
nop
nop
fsubs
inc
xor
jo
xchg
test
sub
push
test
arpl
jmp
sbb
std
das
repz
push
dec
jge
mov
arpl
das
dec
movsl
cwtl
ljmp
sbb
pop
xor
ret
jp
push
sti
sub
loope
enter
inc
pop
int3
clc
or
outsl
lock
cli
push
aad
sub
bound
loope
lea
xchg
outsl
les
dec
add
mov
sets
adc
sub
add
adc
repnz
add
sub
test
test
outsb
out
js
cmc
out
std
imul
ret
mov
jnp
mov
arpl
jo
js
leave
icebp
nop
lahf
mov
xchg
ret
outsl
insb
mov
lcall
pop
jo
nop
pop
mov
push
push
lock
adcb
ja
repz
notl
or
dec
fwait
orl
pop
and
jo
insb
lds
add
jo
popf
sub
leave
jp
subb
leave
add
out
lods
ficoml
insl
push
xor
mov
hlt
sub
in
gs
push
outsl
push
mov
sbb
mov
fsub
cmp
cmp
inc
mov
adc
lods
je
push
cwtl
mov
jo
cmp
icebp
add
test
dec
jge
cmpsb
dec
jo
or
mov
je
jo
push
sbb
xor
or
mov
and
shll
cmpsl
cmp
addr16
jmp
and
int
xchg
jo
lret
andb
test
popf
ja
roll
jno
repnz
cmp
jo
push
sbb
push
inc
jo
xchg
pop
sbb
xchg
mov
adc
mov
or
sub
fstps
jbe
lods
shlb
add
fs
xlat
jp
push
push
outsl
dec
cltd
or
and
cmp
jo
mov
add
xchg
pop
push
fwait
inc
ret
in
in
jo
test
stos
gs
in
add
notb
fldz
inc
ljmp
lods
pop
leave
cmp
cmc
inc
test
xchg
inc
cwtl
jo
lds
jae
out
or
lcall
sub
hlt
xor
stc
cli
jo
jle
iret
movsl
jp
std
jo
cmp
aam
or
cmp
fidivs
enter
mov
add
lea
mov
in
divl
xchg
ljmp
fnstenv
data16
inc
ja
jo
inc
ret
jne
cwtl
cmp
jo
push
inc
cmp
je,pt
mov
jo
divl
pop
mov
mov
gs
jo
adc
bound
inc
xchg
or
insl
sbb
aas
xor
std
stos
pop
push
adcl
jo
xchg
lds
fs
stos
push
pop
inc
cli
push
jl
les
pshufw
push
xor
repz
xor
xorl
shll
negb
jo
xchg
vmovmskps
adc
js
gs
call
pop
mov
push
daa
push
adc
xorl
mov
xchg
pop
ficoms
xor
enter
inc
mov
pop
and
xchg
js
xor
add
jb
xchg
jo
xchg
lds
or
inc
frstor
jo
aas
add
adc
xor
pop
push
clc
sbb
sub
sub
inc
xor
adc
scas
cmpsl
sub
xchg
jg
nop
mov
lea
jnp
insl
add
aaa
add
cmp
or
icebp
insb
jns
jo
ret
lea
cmp
cmp
fs
add
pusha
jo
jp
dec
lods
dec
js
inc
test
push
testl
mov
bound
cli
lds
jo
mov
jne
jo
ret
mov
mov
leave
pshufw
dec
fs
mov
jo
icebp
fmull
pop
adc
jo
xor
cmovge
inc
lahf
jo
and
shll
jo
xchg
pop
lds
scas
gs
mov
les
cltd
in
pop
movsb
punpcklbw
jns
mov
push
in
subb
pop
cmpl
push
jno
call
mov
into
js
insl
xchg
jo
xchg
ja
push
incl
or
test
mov
lahf
ficoms
out
dec
jo
lds
or
push
shll
mov
jo
mov
add
aas
xchg
lock
stc
mov
sahf
jo
clc
subl
int
leave
push
xor
aam
shll
clc
lods
push
scas
repz
mov
add
jo
xchg
fs
daa
dec
shll
jmp
int
les
ror
inc
sub
pop
sub
jne
je
mov
inc
jo
cmpsl
pop
mov
jo
popa
mov
and
jno
jg
sbb
pop
add
aaa
or
pop
ret
sub
ljmp
xor
pop
cltd
lret
jb
jp
push
scas
sbb
mov
nop
iret
jno
scas
cmp
xchg
pop
lods
jo
arpl
pop
stos
shrl
out
nop
cmpsl
lcall
or
push
bound
ds
cs
ret
aam
fbstp
push
inc
push
leave
loope
mov
addb
nop
add
adc
cmp
jne
lds
cmpsb
jl
cwtl
hlt
dec
ja
push
or
in
pop
sub
mov
push
rclb
imul
movsb
pop
jo
push
rcll
push
nop
sub
push
pushl
mov
lret
xor
add
jp
dec
mov
sub
sub
push
lcall
fs
mov
adc
inc
mov
jo
mov
sarb
push
lret
push
lahf
fbld
mov
push
mov
push
out
sub
shll
mov
cmp
pop
inc
dec
adc
aad
or
pop
mov
dec
xchg
inc
int
std
loope
push
movsl
jo
sti
lea
aad
and
xor
ffreep
jo
adc
mov
jo
rolb
mov
jo
and
lds
loope
cmp
rorl
enter
pop
mov
jne
iret
fdiv
and
lret
cltd
jo
lods
inc
xchg
push
xlat
push
fsubrs
push
sub
mov
jnp
sbb
adc
xor
dec
add
js
mov
imul
sbb
stos
pop
sti
mov
sar
inc
jo
or
jmp
gs
jo
loop
push
test
clc
jo
jne
add
mov
lds
add
mov
mov
addw
push
jo
adc
addr16
jge
jne
jo
pop
pminsw
jb
in
add
adc
bound
inc
sahf
orl
rcr
dec
es
push
push
jle
cs
push
pushf
les
jl
mov
add
outsl
sub
jo
cmp
dec
ret
push
lods
arpl
lds
jns
fildll
adc
sarl
pop
pop
pop
jo
mov
insb
and
mov
stos
pop
xor
std
or
jl
mov
nop
cld
dec
scas
pextrw
cmp
rorl
aam
pop
aad
shrl
pop
add
and
pop
cmc
dec
js
addr16
rolb
js
jo
sbb
pop
ret
jo
imulb
lds
lods
adcb
mov
jle
sub
sub
std
sbb
int
mov
and
xor
icebp
jo
bound
ret
sbb
jo
imul
mov
movl
and
xor
xor
xchg
loopne
mov
movsl
and
jmp
sub
adc
or
out
aas
push
adc
jo
scas
test
mov
xor
mov
mov
mov
pop
mov
jo
aam
mov
jbe
outsl
jo
inc
lods
dec
mov
inc
xchg
jp
inc
sbb
lods
jge
add
push
sub
adc
mov
jo
shll
or
repz
jns
movsb
js
push
xchg
ret
iret
insl
cmp
pop
shrl
cmp
divl
cmpsl
adc
test
sbb
jmp
mov
stc
jo
pop
sar
sbb
pop
sbb
jno
inc
sbb
mov
xchg
jno
rolb
popf
xor
add
movsb
mov
insl
aas
adc
lea
jo
cmc
or
ds
jbe
jge
out
out
pop
jo
or
jo
ret
in
imul
jo
push
dec
add
sbb
xor
je
jns
aam
pop
jecxz
std
jae
sub
push
leave
fsub
mov
adcb
push
ud1
in
sarl
jle
in
addr16
jne
gs
out
xchg
fwait
jmp
sbb
xor
std
js
sub
push
pop
lock
js
iret
or
sbb
and
cmpsl
xor
seto
mov
xor
jbe
xorl
push
push
lock
js
lahf
fimull
sarl
dec
mov
mov
inc
inc
push
in
push
loope
or
xor
mov
fldenv
std
pop
xor
push
je
mov
addb
mov
lahf
pop
inc
aam
insb
add
and
shl
popa
push
jo
fcoms
lds
dec
outsb
repz
push
mov
imul
leave
enter
lea
xchg
lcall
stos
popa
xchg
jo
mov
adc
dec
mov
jo
xchg
inc
rcrl
add
jo
icebp
push
xchg
into
or
fxch
movsb
cmpsl
js
ret
adc
xchg
jns
dec
cmp
jo
inc
popf
clc
int3
and
push
jo
leave
cli
test
test
sub
sti
cmp
jmp
jmp
jo
and
adc
gs
jo
insl
mov
outsl
mov
or
cmp
pop
aaa
inc
shrl
ja
jo
pusha
dec
test
push
pushf
jo
popf
mov
into
cmpsb
dec
or
add
dec
or
xchg
mov
mov
outsl
mov
push
xor
jo
mov
pushl
jo
rorl
fiaddl
xchg
add
lods
push
rclb
decb
xchg
mov
int
lea
int3
addr16
sub
inc
lds
loop
ret
adc
lods
jo
stos
xchg
test
int
mov
lods
sbb
aad
adc
push
dec
jl
bound
in
les
int3
xlat
sub
push
xchg
pusha
lahf
lret
jb
jo
cmpsl
fcomi
fs
int
xchg
aad
ljmp
add
in
adc
loope
test
sbb
jne
jo
mov
repz
hlt
mov
jo
add
pop
ret
rclb
loope
adc
adc
mov
arpl
sbb
lret
sbb
mov
mov
push
pop
jo
pop
inc
and
in
push
lds
lret
movsb
iret
cmc
mov
enter
icebp
fidivl
xor
int
add
sahf
jo
push
mov
jle
jo
pop
fcoml
and
jge
inc
bound
mov
ret
lea
fiadds
vunpcklps
sub
push
imul
cwtl
jno
add
js
mov
pop
jbe
jo
jmp
add
fimuls
icebp
lret
mov
ss
sub
das
mov
jo
int
inc
and
push
mov
fldcw
jo
bound
pop
xor
sbb
nop
fiadds
jno
dec
xorl
mov
ret
dec
adc
mov
mov
push
inc
subb
nop
push
pop
sub
jge
lds
xchg
adc
mov
mov
call
addb
inc
xor
inc
cld
adc
data16
cli
and
push
pushf
ss
nop
std
cmp
or
xchg
inc
or
test
ds
enter
test
inc
jno
leave
popa
mov
dec
jae
jo
lds
inc
cmpsb
pop
jae
sub
add
sub
ljmp
gs
mov
ret
ret
and
xlat
idivb
mov
sub
sub
and
loopne
insb
aam
xchg
inc
jo
inc
cmp
push
push
in
add
pop
jle
sbb
je
ja
push
jo
and
inc
test
mov
ret
mov
pop
sub
loope
jo
cmp
mov
pop
je
push
jecxz
jo
or
jge
inc
jo
ljmp
jo
ret
aam
out
daa
inc
divl
in
mov
cs
and
je
test
inc
push
jo
mov
loop
nop
ret
ljmp
jo
insl
pop
inc
cmpsl
xlat
jecxz
jo
fs
aas
adc
ret
jb
pop
push
and
stos
fs
xchg
cltd
inc
inc
test
jo
or
pop
movsb
mov
aad
xor
adc
out
push
jo
nop
push
cmpsb
popa
mov
daa
enter
or
mov
adc
mov
ljmp
sbb
jo
lds
or
xchg
sbb
fstps
call
xchg
jo
push
xor
push
mov
out
int
fwait
js
sbb
lret
cltd
add
jo
jae
jno
cmp
scas
dec
push
incl
nop
jo
insl
lds
int
cmp
out
dec
xor
mov
sub
jecxz
mov
pop
and
sbb
jo
int
je
add
jo
sub
es
xchg
out
aas
mov
sahf
and
mov
jecxz
sub
mov
bound
nop
xor
mov
aam
jo
clc
mov
sahf
aaa
loop
push
shrb
inc
mov
adc
mov
out
out
sbb
cs
nop
add
sbb
rorl
in
jo
mov
inc
mov
cli
xchg
test
lret
and
jl
push
fadds
js
sub
jo
test
push
push
dec
push
test
xor
ljmp
jle
adc
orl
sbb
add
sub
mov
loop
je
leave
sub
clc
into
push
mov
inc
jo
aad
pop
rorl
cmpsb
sbb
add
lock
shlb
inc
cmp
scas
jo
out
imul
sub
jo
cmp
inc
test
inc
out
mov
stc
out
fstpl
adc
js
repz
pushf
js
aad
in
out
fcmovbe
mov
dec
inc
stos
mov
xor
les
push
pop
mov
mov
xor
mov
js
andl
ret
sbb
sub
adc
mov
ret
lock
jo
xor
inc
scas
sbb
adc
xor
jo
iret
movsb
or
aam
movsl
bnd
jp
sbb
xorl
mov
les
loop
jo
pop
imul
lea
enter
cs
pop
inc
push
popa
out
loope
inc
xchg
jb
push
jl
aas
dec
jnp
fimull
xorl
repnz
jae
and
mov
jo
mov
inc
in
jo
adc
popf
jno
sub
pop
mov
mov
dec
stos
adc
dec
pop
ret
popa
mov
shll
inc
adc
sbb
aad
fisubs
jp
aas
jo
dec
out
daa
ret
stos
jo
and
lods
out
into
jae
ret
adc
pop
jo
xchg
leave
cmpsl
jo
jns
std
lret
sti
mov
push
sbb
aas
imul
jo
lea
mov
aad
bound
dec
inc
mov
and
mov
lahf
jo
xor
pop
data16
ret
xor
sahf
out
lock
es
sarl
cld
scas
nop
andb
out
outsl
and
jno
inc
cltd
cmp
pop
push
mov
push
das
push
xchg
sbb
or
insb
mov
push
inc
mov
test
out
loop
andb
sti
cmp
subb
popa
in
std
je
jecxz
test
push
xchg
insb
cwtl
ror
stos
jo
fwait
ret
ss
jo
mov
sbbl
dec
stos
mov
aad
lock
jge
and
xchg
mov
cmpb
xchg
cmp
enter
paddw
or
je
fisubs
xchg
cmp
das
sub
jo
xlat
pop
in
or
jb
push
add
dec
aam
ret
subb
stc
jno
and
inc
fldenv
movsb
sbb
icebp
scas
pop
adc
loope
jo
stc
or
daa
jo
add
popa
ret
or
cmc
jp
jo
and
adc
lret
jo
sahf
mov
loope
aad
nop
push
test
mov
adc
cs
outsl
xchg
pop
jle
fdivs
loope
rcll
jo
or
cmp
adc
jo
ss
push
cs
jo
fbstp
xchg
xchg
jo
pop
lods
lret
pop
mov
xchg
mov
lds
test
ss
pop
xlat
cmpb
fdivs
aad
add
sti
jnp
cltd
jmp
push
and
lock
xlat
mov
dec
sub
jmp
testb
and
jne
xorb
int
imul
sti
or
cltd
and
pushf
daa
fcmovnb
and
mov
jo
pop
inc
leave
rcrl
xor
xor
adc
jo
cmp
or
and
pop
xor
iret
test
jp
imul
fiaddl
sbb
push
mov
sbbb
sub
xchg
punpckhdq
sbb
loop
or
bound
mov
jo
xor
ja
cmpsb
shll
xchg
pop
je
or
mov
cmp
push
out
mov
repz
xchg
mov
mov
das
shlb
mov
test
fs
js
stc
jo
out
sbb
adcb
gs
repz
ret
xchg
loopne
jmp
jo
push
in
sub
xlat
inc
or
mov
imul
nop
mov
inc
das
bound
jl
xor
lds
data16
sahf
movsl
dec
scas
ss
in
leave
out
push
loope
sarb
rcrb
mov
into
jo
inc
pop
fstp
data16
xchg
push
sub
adcb
dec
in
js
pop
leave
fs
sbb
outsb
jl
dec
popa
inc
mov
divl
cmp
sbb
mov
lea
push
xor
mov
ficoms
jo
je
movsb
cmc
mov
mov
inc
push
clc
dec
add
mov
stos
and
jo
xor
cli
push
sbb
shlw
sahf
shll
lds
mov
xor
mov
outsb
cmp
ja
xchg
in
lods
sub
arpl
insb
sbb
dec
cwtl
sbb
add
pop
mov
lods
jbe
loope
push
pop
cmp
inc
inc
das
fstl
fs
ret
mov
dec
loop
or
test
stc
adc
bound
addr16
fdivl
sbb
jbe
cmp
jo
ret
psubq
xchg
jo
mov
scas
les
or
adc
inc
repz
inc
faddl
andb
popa
jo
sub
mov
push
es
test
test
xorb
xorl
int
rcrb
push
jle
mov
xchg
sahf
jo
mov
jecxz
dec
sub
lcall
and
mov
mov
jno
pop
mov
movsb
jo
leave
jns
mov
das
xor
and
pop
into
push
std
enter
ds
sbb
push
xchg
fwait
pusha
mov
std
or
int
inc
divl
push
or
push
shlb
jo
call
mov
shl
adc
jle
jo
add
bound
pop
loope
frstor
out
jmp
aam
xchg
les
pushf
dec
push
cmpb
jo
pop
mov
shll
cli
ds
jo
xchg
push
test
addr16
push
outsl
cmp
mov
loop
movsl
dec
daa
adc
xchg
inc
lret
jl
hlt
and
add
jo
sahf
push
mov
gs
jo
mov
daa
jo
lds
aaa
aam
loop
xchg
iret
adcb
dec
gs
je
dec
push
aam
mov
out
cmp
pushl
out
lea
insb
mov
cmpsl
leave
xchg
ret
adc
jo
push
or
fsubrl
inc
push
lods
pop
sub
insb
in
das
mov
pop
aaa
or
push
inc
or
div
pop
mov
loop
jne
aas
leave
jmp
dec
adc
std
jo
lds
stos
pop
inc
jmp
xor
adc
scas
ss
inc
cmp
loopne
fdivrl
jmp
pop
hlt
xchg
xchg
or
xor
rcll
cmc
and
lds
lcall
out
dec
jo
add
inc
add
jge
lods
add
popa
pop
mov
jo
jno
in
inc
cmp
jo
pop
mov
jo
inc
or
xor
test
lahf
leave
cld
pop
sub
vlddqu
out
mov
xchg
jo
sti
sbb
test
pop
cld
leave
insl
jo
inc
mov
push
btr
cmpsl
aam
jl
js
mov
jno
arpl
or
ret
mov
or
sti
pusha
lods
xlat
jo
fsts
sub
mov
jo
cmp
jecxz
out
les
pop
sbb
jo
lods
xchg
in
loop
and
sub
imul
loop
adc
mov
jne
jmp
or
jns
jo
rcrb
jns
shll
jo
dec
jmp
ret
cwtl
jo
ficoml
lret
nop
jg
vmovlps
sub
lea
dec
bound
mov
xchg
jo
sarl
xchg
jo
out
sub
ljmp
lds
jmp
out
mov
jo
imul
jo
popa
daa
lea
out
sub
sub
ret
sbb
or
cmpsl
lcall
pushf
mov
leave
jg
incb
lds
sbb
popa
mov
out
pop
jge
jo
xor
xchg
int
std
popf
in
dec
orb
cltd
jo
icebp
sbb
adc
sbb
pop
sub
xor
addl
or
stos
out
push
adc
xor
sub
js
repnz
jo
or
std
jno
outsl
jo
loopne
jp
adc
aad
addb
xchg
jg
ret
aaa
adc
sarl
jo
mov
cltd
bnd
mov
ret
dec
inc
sub
jo
sbb
insb
mov
pop
jno
push
shlb
jo
fcmovne
icebp
aad
addr16
cmc
jo
mov
pop
arpl
loope
imul
jo
add
mov
sub
or
pop
jo
inc
lods
dec
xor
jo
mov
or
jo
cmp
jo
icebp
les
jo
std
scas
push
movl
repnz
push
shll
hlt
push
xor
sbb
loopne
test
jle
cmp
mov
insl
sar
andb
cltd
xor
aaa
jo
shlb
into
push
lds
and
mov
mov
xor
mov
out
inc
jns
adc
xchg
sbb
xor
repz
mov
lock
ss
mov
bound
fwait
js
add
jo
lds
shrb
icebp
test
add
jo
lahf
add
div
lock
insl
insb
lods
scas
sub
es
jo,pt
fmull
xor
test
jo
movsb
adcl
jo
sub
cmp
jo
mov
ret
sub
push
jl
test
lock
push
pop
inc
fwait
int
js
dec
fsts
call
jge
cwtl
lds
jo
cltd
inc
mov
jo
cmp
and
movsl
sbb
jo
jb
adc
repz
jo
jbe
inc
mov
in
adc
mov
aad
or
dec
test
dec
in
inc
or
sub
mov
arpl
add
push
add
addr16
pushf
out
dec
or
loope
dec
mov
jo
xlat
aas
ds
ret
xor
in
add
mov
fbstp
outsl
out
adc
scas
push
and
jle
out
cmp
mov
es
nop
sbb
inc
imull
jb
dec
xor
inc
cli
jecxz
fs
std
call
jno
mov
mov
add
pop
mov
push
imul
movl
xchg
sti
out
pop
cmp
jo
int
into
pop
std
xor
push
cmpl
femms
lds
pop
mov
mov
gs
aad
stos
cs
sub
bound
aas
call
fnsave
pop
subb
rcll
and
xor
push
cmpsb
xor
ss
iret
lock
dec
outsl
mov
mov
cltd
jo
test
subl
sub
sbb
aad
leave
sbb
cmp
add
iret
sub
xorl
jo
and
lods
into
jo
xor
lret
or
mov
sbb
popa
xchg
dec
add
xchg
in
repz
and
outsb
jl
fs
jbe
outsl
mov
jo
and
add
addl
pusha
and
lds
ret
inc
test
xor
jae
lock
adc
in
orl
add
mov
adc
test
jo
and
adc
jmp
ret
repz
fnsave
imul
sub
adc
jo
or
or
dec
mov
idivb
les
sub
pop
out
shll
sub
and
dec
xchg
jo
adc
popa
in
push
jb
movsb
movsl
add
je
jne
cmp
ds
fcoml
out
mov
mov
sub
in
or
fs
xchg
lock
inc
sbb
cltd
or
mov
fidivl
xor
cmp
test
cmp
push
or
cmpb
xchg
arpl
push
jo
fwait
cs
inc
push
stos
std
push
sbb
adc
adc
ss
jo
inc
das
sbb
and
dec
cmp
pop
dec
push
mov
or
push
cmp
fcompl
lret
mov
ja
push
sbb
dec
xchg
cmp
pop
cmp
test
and
jl
jmp
mov
bswap
fs
sub
pop
adc
aas
sti
dec
push
into
jae
jo
subb
push
mov
repnz
sbb
and
icebp
iret
insl
pop
jo
inc
and
xchg
cmpsb
adc
mov
xor
fidivs
int3
ds
cmp
rorb
lock
cmc
xchg
addr16
nop
loop
packsswb
jnp
sub
mov
bound
movsb
sub
add
insb
inc
pop
andb
out
jo
xor
mov
cmc
sahf
imul
ret
hlt
push
jle
sub
xor
in
inc
push
jno
loopne
andl
jle
push
push
aas
mov
mov
mov
adc
pop
leave
xchg
call
dec
stos
mov
add
mov
int3
adc
les
or
shlb
roll
xorb
or
movsb
lods
xor
xorb
ficomps
add
jne
push
mov
outsl
sub
mov
xor
inc
int
lahf
and
and
jo
dec
fwait
mov
cwtl
sar
add
das
mov
sar
mov
jo
push
push
jnp
sub
orl
sbb
mov
imul
faddp
adc
jo
lds
rcll
jo
mov
jge
jo
movsb
insl
mov
jo
lds
mov
pop
out
jns
xor
jo
cwtl
jle
sbb
nop
lret
sub
insb
jae
jo
dec
fwait
clc
loope
push
mov
xchg
loopne
pop
rorl
lahf
jge
ja
cmp
jo
dec
xchg
mov
inc
jo
jne
mov
jo
add
xchg
mov
mov
cmc
jo
jns
cmp
sbb
mov
jg
js
or
sub
mov
test
cmpsl
sub
mov
dec
mov
mov
mov
in
sti
movlhps
daa
loope
jle
and
repz
ret
jo
jge
loop
gs
in
es
jo
adc
sarl
enter
lahf
cs
sarl
dec
out
sbb
add
pushf
pop
out
test
jne
out
sub
cmpb
jg
fidivrs
jo
mov
add
mov
sahf
add
aad
mov
fcoml
das
jo
pop
scas
std
lods
mov
dec
mov
jo
test
inc
lock
mov
pusha
jo
xchg
aad
addl
inc
arpl
lds
shlb
ficoms
ljmp
lret
or
pushl
addr16
in
mov
dec
jo
cmc
sub
sub
sbb
inc
add
ffreep
mov
roll
inc
popl
stos
jb
push
push
xor
and
sbb
mov
jmp
vpshuflw
pushf
cmp
cld
sub
cmp
jo
dec
insb
das
jae
jno
or
add
cwtl
push
pushf
jmp
lds
jo
loop
fabs
jmp
in
jo
ret
fstpt
push
icebp
jo
rcrl
add
rolb
sarl
mov
jo
xchg
ror
ja
movsb
stc
jo
dec
push
inc
and
push
or
loop
jo
and
bound
sub
fistpll
addr16
inc
leave
lds
popa
test
cltd
push
pop
shrb
lock
push
jle
fstl
out
jl
push
popf
jo
cmc
dec
xchg
js
add
xchg
mov
or
leave
out
adc
jp
mov
mov
add
push
outsb
rcrl
subl
daa
mov
dec
pushf
and
jae
dec
jmp
xor
jle
mov
mov
sbb
xor
fcmovnb
andb
mov
dec
inc
in
sbb
ret
push
mov
int
mov
jo
cli
dec
add
inc
hlt
add
jns
jo
leave
pop
jmp
inc
nop
in
popl
roll
jbe
mov
jae
and
ret
lret
add
adc
adc
mov
mov
ret
add
xor
sub
test
push
push
popf
popa
push
push
mov
mov
das
inc
in
add
jle
jns
mov
cld
pop
push
repz
mov
mov
push
pop
mov
push
pop
repnz
or
pop
add
imul
jo
fucomp
popa
arpl
pop
dec
ret
xor
leave
adc
jo
cli
push
lods
mov
inc
pushf
jo
aaa
movsb
int
jl
mov
iret
and
mov
xor
cmp
movsl
addr16
mov
jp
jo
pop
jge
lret
into
jo
push
mov
pop
lds
inc
jo
mov
mov
subl
repz
lret
pop
or
jb
mov
add
xchg
lock
es
divps
movsb
loope
insb
or
mov
push
mov
sub
xchg
dec
scas
data16
mov
and
mov
jo
jg
mov
out
es
outsl
ret
std
loope
sarb
testl
and
hlt
add
push
add
cmp
inc
jo
push
popf
dec
push
aas
add
jb
in
rcrb
cmpsb
adc
jo
ds
movsb
sbb
sub
dec
xchg
in
rcr
lds
pop
or
cmp
ret
mov
incb
jo
lcall
jo
scas
and
mov
nop
adc
shr
sub
jo
mov
xor
jne
jnp
leave
jo
pop
and
sub
push
jo
addr16
jo
add
inc
lds
and
xor
jle
jl
dec
jo
out
shll
sarl
inc
xor
and
jo
int
push
mov
inc
sub
scas
iret
rolb
mov
fidivrl
mull
cmp
jo
int
sbb
in
push
push
andl
imul
movsl
xor
push
loopne
dec
pop
jo
adc
outsb
int3
dec
lds
pop
sbbl
cltd
sarb
stos
push
jo
jne
sub
pop
sub
and
js
inc
es
sbb
mov
rcrb
jae
jo
loop
adcl
loopne
bnd
mov
and
insb
sbb
jmp
add
sub
xor
loope
int3
ret
pushf
xchg
inc
cld
sub
cmp
icebp
mov
sbb
jl
or
push
dec
sahf
mov
jnp
fisubs
jmp
movups
jle
fidivrl
nop
or
bnd
jns
mov
dec
sub
test
je
stc
aam
jbe
andb
jno
mov
cmp
fwait
dec
stos
mov
mov
jo
xchg
sbb
sub
jo
test
sub
and
jo
leave
mov
xor
jo
loop
and
lret
out
xchg
jo
cld
rcrl
lds
jmp
jo
sbb
cmp
test
data16
dec
jo
fwait
mov
sub
cmp
inc
sub
mov
clc
js
cmpsl
push
mov
inc
aaa
incl
mov
test
leave
outsl
repz
adc
cmp
push
mov
add
je
cs
push
adc
pop
cmp
push
lods
mov
mov
repnz
xchg
cld
dec
inc
xor
or
adc
je
sub
jmp
int
mov
cmp
out
adc
jl
out
daa
jo
cli
sbb
sub
mov
sbb
test
and
sbb
mov
les
inc
popf
or
mov
idivb
cmp
test
stos
jmp
jo
inc
jg
in
jo
negb
stos
jge
data16
ja
outsb
ret
xlat
jp
xor
jo
jle
sbb
hlt
int
jo
ljmp
insl
cmpl
push
jne
or
lock
punpckldq
nop
aam
lret
adc
loopne
dec
mov
int3
sub
sbb
loope
cmp
adc
mov
pop
xor
push
add
xor
inc
cmp
insb
fisubrl
fldenv
jae
sti
ret
inc
in
pop
sbb
inc
jo
adc
inc
push
pop
das
in
fimull
and
lods
jo
sub
inc
mov
mov
inc
and
imul
jo
fs
sbb
fisttpl
leave
sbb
inc
mov
cs
je
daa
loope
out
aas
in
inc
leave
pop
cmp
jg
iret
inc
add
jns
jo
in
jl
mov
jmp
lea
mov
pop
sub
bnd
push
jg
sarl
test
insb
lds
dec
fwait
in
add
push
mov
pushf
pop
push
mov
or
jmp
popa
shr
push
ret
xchg
imul
rcrl
inc
lock
mov
add
xchg
jo
mov
pop
nop
inc
aas
shr
sub
into
push
mov
dec
fimuls
adc
in
sub
insl
or
add
js
mov
enter
jecxz
popa
jo
pop
je
js
cmp
jmp
je
sahf
loopne
jecxz
cmp
fnstenv
jo
ficomps
pop
nop
shlb
mov
dec
movsl
jo
jle
add
push
int
and
inc
loope
fidivrl
lds
psrad
mov
inc
fwait
jo
or
adc
jo
xchg
or
sbb
les
arpl
mov
push
pushf
lds
add
addr16
cmp
aam
insb
loope
mulb
test
out
mov
push
cmp
mov
inc
and
mov
jo
cltd
xor
daa
xor
movl
add
push
mov
jae
rorb
jo
mov
jno
xchg
leave
push
in
mov
jno
mov
mov
ret
jo
mov
sbb
jo
and
std
sub
xor
int
out
bound
loopne
ljmp
test
inc
mov
jo
sub
xchg
fildll
inc
adc
xchg
lock
and
add
ds
pop
sbbl
and
nop
push
lret
adc
adc
jp
stc
jo
arpl
xor
ret
and
movsb
jo
es
ret
fnclex
add
mov
punpckhbw
punpckldq
mov
pop
sub
push
dec
cmp
cmp
push
pop
jge
cli
mov
jbe
jno
jl
jo
push
mov
and
lea
hlt
sub
icebp
sub
ret
fisubs
andb
int
inc
shlb
adc
sub
ret
ja
lock
out
movl
jecxz
aas
sbb
mov
pop
mov
push
bound
scas
mov
aam
scas
push
xchg
adc
jb
and
mov
icebp
jo
add
adc
out
jo
rcrl
stos
aad
jo
cmp
ret
jo
scas
xchg
maskmovq
imull
int
sbb
popf
jecxz
inc
movsl
mov
add
push
push
and
fsubrs
dec
mov
insl
or
lock
daa
cmpsl
dec
js
xor
push
inc
xchg
pop
mov
out
xor
push
and
js
jns
hlt
jno
jmp
xor
inc
inc
xor
inc
push
hlt
fs
xchg
jo
dec
mov
imul
jle
popf
dec
das
add
adc
adc
mov
jecxz
stos
xor
in
push
mov
jp
adcb
ja
pop
jo
scas
push
imul
insb
roll
push
int
push
mov
jg
ret
test
adc
fs
jge
inc
iret
lods
adc
icebp
ja
aam
jo
and
cs
lcall
pop
ds
shll
lea
pop
and
jo
inc
xor
gs
mov
data16
mov
scas
add
in
je
adc
sbb
sbb
ret
jno
pop
shr
push
xchg
pusha
jo
mov
mov
mov
pusha
les
inc
cmp
cmpsb
fs
lock
lret
mov
test
cwtl
mov
stos
jle
dec
mov
das
andl
add
jo
es
aad
loopne
mov
push
mov
xchg
lods
in
push
bound
cmpl
fisttpl
mov
push
jo
jnp
inc
xchg
call
rolb
movsb
shl
pop
mov
pop
and
leave
jo
xchg
roll
xor
sbb
shl
add
sub
push
jmp
mov
push
enter
vcvtss2sd
int
andb
aaa
dec
fdivs
push
sbb
out
cli
and
out
jo
mov
loope
mov
leave
xlat
or
pop
jl
rcll
cmp
cmpsb
les
vpmadcswd
je
aam
jg
aas
add
sub
inc
jo
and
mov
jo
xchg
xlat
push
mov
mul
and
dec
pusha
dec
dec
lods
jo
push
xchg
fidivrl
loopne
lock
icebp
int3
jo
pop
repz
pop
and
sub
cmp
mov
aas
ljmp
pop
loop,pn
imul
xor
jo
lock
jne
and
jno
je
sbbb
dec
xor
sbb
jo
incb
scas
adc
jae
jecxz
arpl
js
fs
xchg
sbb
dec
sub
jo
je
aam
sub
jo
dec
add
inc
pop
lds
jne
mulb
mov
jo
xor
das
insb
sbb
xchg
mov
jo
or
or
cmp
lods
pop
scas
or
xchg
jmp
jns
or
mov
pop
push
sbb
ffreep
test
popa
imulb
jl
pushf
cmp
and
ret
inc
in
sbb
div
pop
lds
fldcw
push
mov
jo
xlat
mov
or
ja
jo
insb
pusha
xchg
and
jo
rol
orb
cli
jo
pop
decl
push
shll
leave
test
add
sub
jo
je
int
data16
jo
mov
add
sub
jo
addb
fs
vorpd
xchg
or
sbbb
leave
sbb
rorb
mov
test
jmp
push
leave
fildl
icebp
fstl
ret
repz
jo
or
pop
sub
jno
dec
pop
ret
jl
lret
jo
ss
movsl
jnp
mov
shll
mov
inc
out
pop
repz
jo
cs
sub
mov
sbb
nop
das
push
stos
cmpsl
dec
jb
lds
js
cmp
or
ljmp
pop
jmp
and
stc
insb
in
or
fisttps
jo
jb
push
fadds
cmpl
inc
wrmsr
lock
es
cwtl
call
popf
dec
push
mov
cmp
jo
sub
sub
clc
jmp
xor
mov
std
push
push
fisubrl
jge
sub
mov
repnz
jb
xlat
dec
jmp
add
jmp
push
push
loop
in
mov
push
cltd
jo
jp
rcl
adcb
mov
enter
mov
adcb
jne
gs
push
jmp
pop
fiadds
sbb
fnstcw
rorl
mov
out
aad
xchg
mov
xorb
ret
aaa
push
cmp
mov
lock
mov
hlt
ss
rcll
popa
insb
or
mov
push
jo
jg
roll
mov
adc
out
jo
or
movsb
shll
lods
push
inc
insl
mov
fs
jp
or
and
fs
shlb
push
xlat
mov
push
cli
ds
test
mov
inc
or
movsl
xor
leave
ja
std
push
inc
iret
jo
inc
mov
insl
out
or
cltd
jmp
and
out
mov
test
repz
out
jnp
add
lods
aam
rcl
jle
ss
outsl
xor
xchg
out
and
adc
adcb
jl
sub
push
jb
dec
sbb
shll
xor
mov
out
inc
out
mov
adc
xor
es
inc
rcll
hlt
xchg
js
add
xor
roll
cmc
mov
xor
scas
xchg
lock
xor
shll
cmp
ss
sub
mov
ret
jmp
test
and
sbb
pop
jle
stos
or
mov
fidivl
cli
sub
aam
push
jno
push
sbb
xchg
ffreep
popa
cmpsl
jno
scas
int
fstpt
das
mov
jo
or
push
rcr
pop
xor
adc
addb
pop
push
popa
push
popf
xchg
mov
test
jg
jo
gs
sbb
sbb
les
and
addl
nop
mov
pop
push
jo
pusha
adc
lret
stos
addb
nop
arpl
in
and
mov
pop
imul
mov
cli
jo
les
shl
sub
jo
arpl
add
jno,pn
shrl
aam
xlat
push
jo
sub
hlt
jb
xor
push
stos
popa
filds
test
ret
shll
mov
mov
push
mov
push
stos
mov
sti
outsl
or
shll
pop
adc
loop
cli
mov
jo
lds
add
sbb
ja
imull
jo
push
inc
daa
shl
jo
xor
cmpsb
insl
add
icebp
nop
jge
frstor
loope
jb
lock
jo
test
xor
mov
sarl
xor
sub
xor
sbb
int
pop
pop
jo
movsl
fisttpl
leave
jno
dec
stos
dec
sub
sub
mov
jo
lds
imul
jl
movsb
mov
addr16
hlt
and
rolb
popf
sub
lock
jo
add
adc
js
jo
ret
sbbb
cli
mov
and
repz
push
loopne
push
shll
and
inc
jo
xor
popa
jo
shll
cli
pop
xor
jb
jo
push
subb
stos
jnp
jle
sbb
mov
and
sub
xchg
subb
pusha
xchg
adc
pop
mov
movzwl
popa
and
jo
xchg
shll
sbb
mov
push
xor
and
or
push
mov
imul
fcoml
dec
cmc
sub
xor
jle
adc
inc
push
movsl
adc
mov
pushf
pop
movsb
add
and
jo
jl
mov
mov
lock
loopne
adc
cmp
dec
mov
mov
loopne
andb
push
jo
fstl
jo
jp
les
out
jo
pop
xchg
or
and
sbb
scas
adc
mov
sbb
add
test
jo
inc
inc
and
fisubs
nop
pop
iret
cwtl
pop
sub
jo
xor
les
nop
cmp
jge
repz
jns
xchg
pop
jnp
jle
add
movsb
or
sbb
xchg
sub
jo
fst
and
jo
shll
mov
js
sti
adc
cmpsb
jmp
pop
stc
mov
cli
and
std
fstpl
add
jo
aam
xchg
push
fsubrp
inc
cs
loop
shll
pop
subb
dec
lds
jecxz
add
mov
push
sub
sahf
call
mov
lret
out
inc
das
add
lahf
jo
stos
fmull
jecxz
sub
pop
jg
into
jo
pop
insb
mov
jo
mov
les
jo
xchg
jbe
fisttpll
sub
nop
push
loopne
lcall
push
mov
sub
mov
jo
add
mov
mov
lock
cmp
pop
outsl
shlb
push
sub
jle
mov
add
cs
mov
js
pop
sbb
or
add
push
and
mov
pop
sub
xor
shll
test
ret
je
xor
mov
inc
and
fs
mov
jo
jmp
clc
stos
inc
insl
dec
push
mov
mov
mov
sub
mov
jnp
shrl
sbb
push
xchg
mov
mov
jo
sbb
ss
jge
fs
popf
imul
gs
cs
add
popa
mov
jo
cmpb
push
int3
test
shll
out
rorb
aam
jp
mov
js
jns
lret
cmp
sub
mov
out
jge
sbb
mov
and
out
adc
jo
add
cmp
pop
int
jo,pt
aad
dec
mov
fbstp
fwait
test
xchg
adc
jge
jl
dec
adc
popf
sub
out
lahf
movsb
mov
inc
sub
subb
std
ljmp
cld
test
sub
in
push
pop
dec
add
mov
jo
pop
pop
adc
fucompp
jo
sbb
lock
aas
adc
fnstsw
stc
jo
dec
mov
mov
mov
push
iret
sti
inc
inc
mov
aas
push
jo
das
mov
int
lret
repz
jo
pusha
xchg
jno
push
ret
and
mov
shll
aas
push
sub
sbb
mov
mov
mov
test
adc
add
push
jbe
flds
xchg
shrl
or
jo
mov
inc
bound
int3
cmp
bound
xchg
push
lods
or
mov
sbb
lds
mov
fsubl
movsw
push
inc
xchg
cmp
imul
jle
insb
jo
mov
jns
push
ja
sub
les
insb
das
lds
mov
sbb
cmp
cmpl
iret
out
pop
add
repnz
ja
dec
rcrb
shll
fisttps
lock
push
jbe
jo
mov
push
cmp
and
ret
cmp
cltd
push
xor
div
or
scas
sbbb
jo
mov
inc
lcall
enter
jo
or
and
loope
cmpsl
jo
repnz
lahf
aad
jo
loopne
xor
iret
scas
int
stc
mov
xchg
push
mov
cltd
cmp
out
popl
int3
sbb
mov
or
or
sbb
jo
arpl
jge
cltd
leave
cmp
add
mov
cmp
bound
jo
aas
notl
shrl
mov
sti
les
cmpsb
inc
xchg
mov
mov
add
dec
jo
push
or
xor
ljmp
jo
dec
mov
jecxz
aaa
xor
into
mul
stos
in
xor
sbb
test
in
add
and
shlb
mov
nop
jge
jo
icebp
in
add
xor
mov
mov
fs
sub
push
ljmp
xchg
shrl
stc
int
loope
pop
hlt
fwait
mov
jp
cld
js
mull
jmp
mov
sahf
ret
stos
gs
xorl
inc
sub
mov
cmp
adc
fdivl
xor
jmp
addr16
mov
adc
lret
or
popa
jo,pt
rcrl
mov
stc
lret
shll
mov
pop
or
sub
lods
sarl
mov
les
inc
xchg
dec
push
sub
push
int3
popa
mov
jo
cld
jns
mov
test
fcmovb
dec
xchg
fnstcw
add
dec
rcr
bound
lods
adc
lret
xchg
ret
jg
lcall
insb
cmp
mov
mov
push
jo
ret
xchg
pop
xchg
jb
lds
xchg
inc
mov
mov
push
aad
and
int
and
sahf
mov
mov
fs
jae
jo
leave
loop
inc
mov
xor
lds
movsb
or
jp
insl
jb
shlb
push
leave
mull
in
imul
xchg
sbb
jo
roll
inc
in
ret
jo
dec
xchg
xchg
leave
pushf
out
pop
jo
outsl
mov
popf
jns
push
call
jbe
lock
xchg
jp
int
pop
cmpb
mov
sahf
jb
outsl
icebp
jbe
std
jo
xor
test
add
bswap
pop
push
adc
pop
add
std
mov
gs
mov
adc
cmp
outsl
sbb
jo
stc
shrl
ss
test
mov
popf
xor
cmp
mov
and
sub
jo
cmpsl
hlt
and
push
cmp
ffree
pop
dec
fstps
add
jne
push
lock
jo
cmpsl
jg
jnp
fisttpll
jo
fldcw
popf
push
ret
into
hlt
jo
adc
add
jno
push
jp
sbb
push
or
pushf
ret
sub
leave
inc
jo
mov
addb
sar
and
pop
xlat
test
cwtl
orb
mov
jle
jle
dec
mov
or
nop
cmp
xor
jnp
je
mov
dec
jge
and
mov
dec
or
sub
xor
mov
adc
push
bound
lods
outsl
fisttpl
jo
and
out
enter
mov
sbb
ret
cmpsl
negl
jg
sti
jo
sub
mov
repnz
xor
mov
jb
mov
push
lcall
sbb
mov
pusha
sub
push
fcoml
mov
xor
inc
adcb
std
push
or
mov
mov
mov
ret
negb
stos
popa
jo
xchg
lds
sub
popf
cs
xor
jo
push
leave
scas
pop
or
sbb
and
hlt
scas
lahf
and
cmp
pushf
leave
sbb
add
inc
pmulhuw
je
ljmp
ror
cmp
fistpll
dec
sub
lock
cld
test
pop
hlt
popa
inc
lds
addr16
fistpll
mov
test
lea
outsl
pop
mov
lods
jo
add
arpl
jo
jbe
jb
loop
xorb
popa
xor
sub
inc
mov
push
and
inc
stc
nop
test
jo
adc
mov
or
jo
sbb
stos
inc
pop
std
jo
add
push
in
rcrl
ret
jbe
aas
data16
jb
out
dec
or
sbb
xchg
jo
test
gs
xchg
pop
or
push
or
dec
int3
sbb
enter
lcall
ljmp
outsl
icebp
ss
xor
xor
nop
mov
xchg
divb
mov
jo
addr16
std
adc
fidivrs
adc
stc
dec
stos
jp
jle
sub
out
and
dec
and
jo
and
mov
aam
mov
add
call
nop
sub
ret
and
pop
xchg
jb
das
int3
scas
cmp
movsb
je
mov
pminsw
jecxz
jp
loop
dec
mov
push
jo
jnp
xlat
sbb
push
sbb
cmp
jge
push
xor
xchg
ja
lahf
out
ret
scas
je
mov
jns
jo
insb
std
incl
rolb
test
mov
or
ljmp
jnp
pusha
jo
orb
mov
stos
sub
push
dec
test
ret
js
nop
dec
movl
xor
sub
popf
mov
das
adc
imul
and
dec
add
jecxz
fimuls
pop
leave
mov
addr16
sub
push
xor
xchg
fistl
cmpsb
pop
jne
rol
adc
mov
int3
push
mov
push
ret
aas
adc
jb
push
pop
aad
cli
movsb
xchg
xor
jb
in
js
xadd
idivl
mov
je
mov
daa
inc
xor
pop
fwait
leave
dec
jo
xchg
inc
cmp
xchg
sub
fisttpll
shlb
adc
arpl
mov
xor
test
leave
ficompl
jge
jo
mov
pop
mov
xchg
ret
jl
icebp
xor
fcmovne
out
mov
cld
shll
jecxz
jbe
adc
push
jne
bound
jmp
aam
jo
cmp
imulb
adcb
bound
mov
aam
jge
insb
iret
into
jo
cmp
popa
jmp
int
or
mov
mov
xchg
stos
jb
inc
int
aaa
and
mov
loope
cmp
das
jecxz
push
sti
push
push
pop
sub
in
dec
pop
jo
flds
pop
push
sub
loop
fbstp
pushf
jl
ja
stc
jge
pop
lahf
xor
outsl
movsb
cltd
call
cmp
mov
jo
push
test
in
jbe
push
loop
jl
insb
push
lret
sbb
mov
bnd
push
mov
addb
subl
sbb
jge
dec
popa
xchg
popl
jo
and
xchg
jo
lods
and
ror
jb
pop
push
xorb
icebp
out
lds
and
cmp
int3
mov
jb
addb
jo
loope
movsb
insl
mov
pop
or
jg
lods
pop
dec
pop
jo
hlt
outsb
addl
xchg
addr16
nop
adc
sub
lcall
jle
add
scas
subl
test
push
cwtl
insl
mov
inc
addr16
or
jmp
mov
aam
jl
mov
dec
pop
add
mov
popa
jne
push
test
mov
sub
and
jne
dec
fbstp
pop
lret
movsl
xchg
add
mov
popf
int
inc
xchg
jo
das
out
imul
mov
push
jp
nop
and
push
sbb
mov
cmp
and
outsl
inc
push
stc
jo
inc
loopne
ffree
xchg
mov
push
push
fmuls
pop
jmp
mul
and
xor
cs
pop
pop
jl
pop
int3
dec
mov
jp
scas
inc
cmp
mov
pop
mov
jo
add
pop
push
rep
sub
cmp
xchg
jo
jno
mov
imul
xchg
or
andb
popa
mov
or
fmuls
jecxz
jo
outsl
notl
std
jnp
push
js
js
and
push
punpckldq
aam
dec
mov
dec
les
stos
mov
inc
jbe
lret
nop
lds
adc
cltd
shrl
je
mov
dec
mov
fsubrs
loope
imul
lock
in
cmc
rorl
xorb
lds
xor
rcll
arpl
jle
push
rolb
jo
xchg
add
add
aas
lahf
sub
out
xchg
gs
jo
imulb
mov
fidivrl
ljmp
jle
ja
pop
push
popf
sti
mov
add
pop
push
sub
rorl
dec
popa
and
std
sbb
das
fistpll
shlb
and
add
sub
add
jns
cs
pop
inc
adc
cmp
add
arpl
cld
adc
lock
push
jmp
jg
mov
std
jo
jnp
push
sbb
jo
aas
push
add
ds
jp
repz
pop
dec
xor
les
and
sbbb
into
push
ljmp
mov
ror
fdivrl
rolb
rorb
lea
ret
pop
decb
adc
test
mov
sub
mov
jge
insb
inc
aas
push
leave
jo
stos
out
dec
cmp
add
xor
adc
jnp
test
and
rcrl
cld
pop
jo
mov
add
jo
int3
pop
and
and
push
mov
imulb
xchg
cmpb
cmp
ljmp
popa
and
ror
jmp
divl
cmp
or
mov
ret
fbld
mov
or
lds
inc
cwtl
cmovp
add
jbe
jno
jo,pt
xchg
cmp
push
jo
mov
fstl
mov
sub
jo
clc
test
pop
stos
js
scas
sub
cmp
sbb
pushw
fcomps
jo
jbe
adc
jo
jge,pn
bnd
jo
fwait
dec
jle
jbe
mov
test
pop
inc
pusha
mov
stos
sub
push
jp
pop
jo
clc
sub
data16
push
int
add
mov
ret
fwait
pop
popf
je
jle
sbbl
jo
int
outsl
dec
jo
daa
lret
in
aad
movsbl
pop
push
add
sub
mov
inc
xlat
xor
test
sub
lahf
jmp
xchg
mov
add
cmp
lds
clc
mov
cmpsl
repz
push
mov
jae
push
gs
dec
int3
jo
insw
nop
push
push
outsl
test
mov
enter
arpl
mov
and
ss
das
mov
mov
cmp
jnp
outsb
orb
aad
iret
jo
les
repz
and
jo
sbb
test
push
lcall
xchg
je
xorl
jne
mov
ret
clc
push
add
in
fadds
xchg
mov
call
pusha
mov
xchg
mov
mov
xor
adc
mov
or
jp
pop
std
pop
inc
jbe
pushf
push
xchg
call
jno
mov
jo
pusha
push
repz
int
jmp
imul
add
shlb
sub
sbb
int3
test
cmp
ja
lods
sub
test
jo
shlb
popf
popl
inc
sub
adc
setbe
mov
je
xorb
aas
pop
lcall
fimuls
addb
xchg
sahf
ret
lahf
fsubs
popa
fnsave
push
loopne
cmc
test
cs
in
inc
aaa
test
jge
cli
fs
add
xor
nop
sub
ja
add
jo
outsb
lahf
push
xchg
push
mov
rol
jmp
sbb
pop
mov
fisubrs
mov
cs
stos
jo
insl
test
arpl
pop
or
out
jo
fwait
cmp
pop
fs
sbb
jmp
je
add
xor
aaa
and
xor
mov
inc
cli
push
xchg
cmp
loope
bswap
in
xchg
popf
jle
test
xchg
jbe
sub
pop
lods
mov
jo
mov
lds
jo
xchg
push
jecxz
mov
movsl
pop
xchg
es
fwait
mov
or
sahf
mov
sub
jo
imul
repz
ror
jo
pop
in
dec
add
cmp
jmp
mov
jo
jle
les
call
rcll
inc
mov
in
cmp
jo
xor
je
fdiv
fwait
sub
xor
pop
mov
adc
mov
jo
mov
pop
inc
jbe
ret
je
jo
int
fldt
and
out
and
lea
mov
int
sbb
inc
js
jo
ret
icebp
sub
subb
inc
lods
cmc
in
jo
xchg
js
xchg
lret
int
mov
in
fucompp
pushf
push
jo
dec
mov
hlt
inc
test
jb
push
inc
and
imul
mov
jo
push
xchg
mov
jo
push
jmp
add
repnz
js
add
xchg
xlat
out
or
jo
repz
popf
ret
jo
lds
addr16
push
mov
icebp
std
fs
imul
addr16
and
lods
cmp
out
ret
mov
cmp
jo
mov
lea
jo
int
push
sar
and
sub
es
inc
pop
pop
sti
insb
jo
lods
and
les
pop
push
cltd
jge
jbe
cmpsl
fsubp
jo
push
inc
in
int3
jb
and
mov
ret
mov
sbb
ja
add
add
mov
xchg
jnp
or
ret
sbb
js
hlt
aad
jo
bound
push
jo
push
mov
inc
js
mov
xchg
cli
xor
nop
mov
ja
or
xchg
subb
out
or
jbe
add
cmp
cs
lahf
lds
scas
pop
sti
mov
repnz
or
and
lock
aas
push
dec
iret
xor
sbbb
arpl
mov
aas
inc
cmp
and
xor
jl
push
inc
leave
loope
addb
stos
fldl
insb
pop
jbe
rol
jo
mov
shll
jo
mov
sbb
xorl
lahf
dec
imul
jo
fadds
ljmp
add
leave
sbb
notb
add
imul
adc
sub
adc
cs
sbb
scas
rorl
in
push
ret
push
mov
ficoms
inc
pop
sub
enter
mov
fists
mov
pop
rcr
mov
adc
sbb
jecxz
and
jl
addl
insb
mov
fwait
jo
pop
test
repnz
imul
addr16
insl
push
loopne
jno
and
push
je
je
cmpxchg
out
adc
das
inc
mov
fidivrl
mov
pusha
xor
out
mov
jns
test
mov
hlt
hlt
lret
xchg
add
inc
aam
pcmpgtb
in
imul
jle
xor
and
insb
gs
je
fsubrl
jbe
jns
insl
in
add
fnstenv
xor
add
jo
je
dec
aad
jo
push
adc
sub
adcl
stc
fnstenv
movsb
jo
mov
jp
xchg
cmp
shrb
idivl
shlb
push
inc
xorl
or
jbe
leave
inc
sbb
cmc
mov
push
lea
je
add
movsl
or
cld
xor
mov
cmp
loop
push
xchg
sahf
imul
jp
mov
ds
or
jmp
popa
sti
or
repnz
inc
xchg
jo
pop
xchg
fwait
dec
test
push
sub
shll
test
adc
jo
stc
inc
mov
loop
ljmp
add
ret
das
fs
or
ljmp
gs
inc
jo
jns
mov
lds
mov
jb
jge
push
aad
sbbb
fsubrl
pop
out
test
mov
inc
aad
push
aas
ret
xchg
xchg
pop
sbb
sub
cmp
inc
icebp
and
cmp
push
nop
fldcw
jnp
jo
rolb
or
sbb
in
fwait
cmp
stos
jb
movsl
dec
loope
lret
add
xor
shlb
fcomip
int
mov
ss
mov
arpl
inc
out
subl
sub
fmull
xor
inc
lea
out
insb
js
cld
cmc
sbb
pop
dec
gs
adc
ret
addl
sbb
mov
adc
sahf
jmp
inc
jo
inc
js
call
xchg
mov
pop
cmp
push
xchg
ret
bound
xor
addr16
int
in
test
cli
inc
scas
imul
pusha
jo
out
movb
sub
ret
mov
jle
sbb
lds
out
jns
mov
cs
shl
push
pop
xor
dec
xchg
dec
xor
or
push
xchg
sub
ljmp
jo
xlat
inc
pop
stos
add
add
xor
jno
mov
shll
xchg
inc
in
jg
cmpsl
int
fcmovb
push
aas
in
inc
inc
jo
xor
mov
adc
fxtract
or
jo
sub
mov
jo
xor
add
lds
bound
mov
addr16
fistpll
out
cmp
mov
repnz
bound
mov
int3
jns
mov
add
add
mov
pop
push
sti
add
inc
lods
cmp
decb
testb
lock
andb
addr16
pop
ja
push
push
movsl
jno
xlat
cmpb
pop
mov
fimull
inc
xchg
leave
dec
das
xchg
inc
inc
mov
nop
cltd
notl
and
mov
rdtsc
cmc
subl
or
daa
lock
adc
xorb
fidivrs
test
mov
jne
jo
adc
lea
popa
dec
int3
inc
mov
add
popf
jns
in
jl
jno
sub
ret
mov
pop
lds
ja
daa
or
jp
jo
mul
mov
mov
shll
lods
imul
push
adc
iret
cmpsb
jo
rcrl
ret
shlb
loope
add
mov
int
aad
mulb
adc
pop
daa
stos
push
sbb
mov
dec
outsb
mov
ret
jbe
out
pop
outsl
std
leave
cmp
shrb
sbb
stc
vaddsubpd
pcmpeqd
jns
or
loop
and
cld
add
sub
ret
jmp
out
out
rcll
sub
lret
repnz
jo
insl
lds
imul
push
jae
jo
mov
ljmp
int3
sub
je
cmpsl
cmp
pop
cmp
mov
jle
jo
shll
loop
push
inc
dec
fisttpl
outsb
and
mov
decl
inc
iret
ss
das
lock
jo
mov
in
mov
adc
jge
sbb
into
jo
sbb
daa
push
idivl
jo
inc
inc
popa
jmp
insb
das
xor
es
sbb
ret
jmp
leave
jo
xor
mov
jo
movsl
js
outsb
scas
pushf
pop
jo
and
in
jo
sub
cltd
jo
adc
fldl
ret
shll
add
mov
enter
jo
movl
sbb
push
shlb
shr
jo
fwait
xlat
inc
lret
jo
adc
or
mov
pushf
dec
inc
jp
jo
std
jle
mov
or
sbb
xchg
cmp
pop
push
inc
add
leave
or
jo
mov
testl
out
ja
in
shlb
jo
xchg
sub
sub
imul
push
pop
xor
pop
push
pusha
icebp
dec
push
sub
inc
js
ret
push
push
add
jo
fistps
addl
add
fdivl
jbe
ja
rorb
popf
hlt
adc
xchg
add
aad
jo
dec
lods
and
lea
out
push
jo
icebp
mov
leave
mov
loopne
and
xor
faddp
push
jo
pusha
into
leave
xlat
jnp
mov
outsb
xchg
jg
mov
popa
movsb
pop
push
push
and
pop
sbb
mov
jo
loope
jecxz
fstp
fnstenv
sbb
sbb
jmp
jo
pop
sub
jo
ss
je
dec
mov
jo
fistpll
aam
loopne
inc
dec
push
sti
xchg
jo
and
inc
sahf
sub
add
or
loopne
jo
and
roll
sti
adc
jmp
inc
lods
jo
scas
pushf
or
fbstp
mov
rcr
jl
cmp
test
in
jns
ja
sarb
or
sbb
mov
jae
lea
push
add
outsl
inc
aad
xor
sub
jo
push
mov
ret
ja
mov
xor
push
js
gs
clc
and
xchg
out
pop
push
insl
sbb
test
xor
cmp
mov
lret
rorb
inc
ds
fdivl
or
icebp
jae
xchg
inc
data16
iret
jo
or
in
jne
int
pop
imul
inc
sbb
jo
ss
mov
leave
xor
mov
aam
adc
or
adc
insb
sbb
out
orl
or
sub
aad
pop
nopl
push
cmp
or
add
push
sbb
mov
sub
xor
adc
pusha
movsb
jle
js
adc
adc
mov
jno
cld
aad
jo
jle
ret
and
cmc
jo
push
push
or
cmpsl
adc
in
jg
or
pop
jo
pop
mov
adc
jp
push
das
xchg
and
ja
test
cld
fstp
stos
push
cmp
sbb
jo
jle
or
sub
bnd
pop
ret
aas
dec
fnstsw
mov
adcb
pushf
push
repnz
cltd
cli
push
jo
leave
int
daa
xor
pop
mov
mov
xor
icebp
hlt
xlat
adc
push
fnstenv
sub
aas
mov
sahf
fs
js
lahf
dec
jbe
ja
mov
jo
in
or
fcoml
dec
rcr
shll
jo
scas
mov
pop
mov
adc
cmpb
in
xchg
jo
push
in
test
mov
fst
cmp
adc
jns
jle
inc
push
xor
dec
call
ret
mov
pop
inc
sub
insb
cmc
das
fwait
je
rorb
jo
and
es
addb
mulb
pop
cmp
xor
aaa
fs
pop
mov
inc
xor
jo
subb
mov
fcoms
jo
bound
jns
mov
pop
jecxz
loopne
sbb
fdivs
movsb
and
test
push
orb
jo
ret
cld
in
test
and
cs
mov
mov
jo
leave
out
xchg
test
sbb
fists
rcrl
mov
ftst
or
movsb
ret
jecxz
sbb
jo
adc
lods
stos
mov
mov
cmpsl
mov
icebp
xchg
out
data16
jge
jb
out
mov
sbb
adcb
divl
add
sub
inc
data16
stc
je
nop
jno
dec
imul
push
nop
punpckldq
push
cs
out
clc
roll
xchg
int
cmpsl
and
test
xor
les
outsb
lds
push
jo
dec
lcall
in
test
dec
loope
push
cmp
test
dec
loopne
leave
or
jno
fs
jge
fs
xchg
mov
cwtl
dec
pop
adc
arpl
jo
push
lds
test
and
xchg
and
push
push
mov
xlat
je
in
dec
cmp
icebp
les
xorl
xor
jb
push
jo
sbb
or
test
por
cmp
jle
pop
xchg
xchg
jo
outsl
sarl
jo
mov
test
rcrb
cmpsl
and
testl
jo
and
pop
test
sub
xchg
sbb
loopne
add
jb
leave
pop
enter
nop
clc
xchg
push
pop
lock
aaa
sar
jl
pop
stos
popf
insb
lods
pop
fadds
cmp
or
int
cmpsl
inc
push
or
adc
mov
andb
repnz
mov
dec
movsb
fadds
nop
mov
mov
into
or
je
imul
xchg
inc
lea
push
sub
ljmp
mov
sbbb
inc
fmulp
xor
nop
repnz
ja
mov
sbb
add
lock
lods
andb
rol
scas
out
es
pop
jo
arpl
jns
jo
ds
jb
xor
jo
leave
cmc
mov
sub
push
out
push
fildl
sarb
xchg
jo
pop
adc
sarl
lahf
stos
pop
insb
add
and
and
scas
int
pop
and
jns
jo
out
lea
cmp
jno
jo
loope
push
pushf
cwtl
inc
icebp
jo
in
sbb
in
lds
pusha
loopne
arpl
cmp
jo
lcall
nop
mov
nop
jno
mov
test
push
mov
or
in
mov
sbb
daa
aas
dec
cwtl
jle
mov
jo
pop
fnstenv
xchg
addr16
mov
fidivs
lea
and
shll
cmp
jo
bound
or
lds
mov
lret
ret
jo
dec
dec
lahf
adc
mov
outsb
inc
push
jo
iret
adc
sbb
mov
lret
ljmp
mov
daa
fimull
push
or
ret
mov
jo
xchg
or
xchg
inc
lahf
sbb
leave
push
mov
icebp
push
cmp
push
ja
cmp
inc
pop
jb
jo
ret
dec
mov
shll
and
daa
mov
sbb
fs
jo
jmp
loopne
jo
fldenv
imul
imul
push
ds
sbb
inc
or
mov
jl
inc
pop
cmpb
int
repz
xor
inc
pop
adc
xor
enter
je
clc
mov
inc
bound
into
imul
adc
outsl
adc
inc
mov
adc
sahf
repz
and
pop
jo
aaa
decl
in
lahf
jo
daa
jnp
shll
ret
sahf
in
jb
loopne
gs
sbb
or
mov
js
inc
int
lret
fistpll
xchg
push
push
jo
das
scas
arpl
xchg
jo
shll
jo
or
test
jmp
jo
pop
insb
mov
push
and
inc
das
mov
push
mov
lock
sti
int3
jo
mov
shll
or
popa
pop
sbb
les
mov
sbb
pop
daa
int3
sbb
mov
jo
movups
icebp
loop
dec
rorl
inc
jo
add
add
stc
mov
push
lfs
insl
push
pop
das
jo
ljmp
jo
xchg
lcall
scas
cmp
jo
lds
out
push
into
loope
add
ss
xchg
sub
adc
inc
sub
pop
xchg
andb
cld
jo
mov
popf
mov
enter
aas
add
xchg
xor
js
scas
push
xchg
rcrl
sub
xor
mov
cmp
xlat
cmpb
mov
cmpsb
in
xchg
mov
mov
push
ss
and
in
hlt
xchg
nop
jle
cmpsb
rcrb
ja
jmp
jo
enter
rcl
jo
mov
add
std
fs
and
cwtl
xor
jp
leave
push
imul
sub
xor
int
mov
popw
les
fs
jl
and
lea
jge
jecxz
in
jo
inc
jp
pop
dec
leave
fidivs
dec
je
addr16
mov
mov
adcb
adc
push
ljmp
sbb
add
cld
std
push
into
mov
xchg
pop
loope
jo
outsb
lock
in
xlat
fwait
jo
jne
jl
mov
in
inc
leave
dec
idivl
xcrypt-ctr
cmpsl
fists
jo,pt
xchg
lock
fstl
mov
cmc
call
sub
add
ds
and
sub
pop
js
sub
cmp
sub
xchg
cli
jo
mov
add
mov
ret
adc
jae
sub
jmp
add
pshufw
cmp
lret
jo
in
ret
insb
adc
rcll
mov
in
rcl
inc
push
add
mov
xchg
push
or
jge
in
in
pop
mull
in
test
jg
clc
xor
stos
adc
aad
ss
cltd
jo
fsubs
fisttps
push
jg
lahf
std
aam
ret
inc
inc
ret
in
lds
cli
nop
add
lods
jb
xor
das
negb
fnstcw
out
mov
lret
pop
jle
xor
inc
cmp
movsb
shlb
loopne
repz
xchg
and
jo
cmp
xchg
es
push
mov
sub
xchg
push
imul
jl
call
and
ds
fstp
aaa
out
and
imul
push
rol
xchg
xor
aas
push
and
dec
mov
in
jo
outsb
shll
mov
jl
mov
mov
notb
inc
pushf
xorb
imul
scas
rorb
mov
mov
in
in
jmp
add
adc
dec
das
cs
movq
fabs
xchg
or
xor
popf
outsl
in
in
shlb
rcrl
iret
int
jo
cmp
mov
call
dec
out
mov
mov
mov
jo
cmp
loope
rorl
stc
adc
xor
and
xchg
mov
jmp
mov
jecxz
adcb
cli
adc
sub
fcmovnu
pop
fbld
ljmp
lret
ss
inc
adc
cmpsl
addr16
out
cmp
fisubs
cmpsb
push
inc
push
test
cmp
lahf
push
push
shll
xorl
lods
loope
mov
in
aam
stos
fildll
sub
sbb
gs
adc
xchg
fidivrl
sub
pop
loop
fsubs
dec
sbb
pop
cmpsb
adcb
outsb
jo
adc
adcl
pxor
stos
rolb
insl
mov
cld
lcall
jo
repnz
adc
mov
push
mov
sarb
lods
ret
in
into
dec
pushf
repz
insl
jmp
mov
xlat
jo
outsb
rol
mov
push
jo
orl
jo
pop
fwait
movsl
jb
add
jbe
movsb
jo
xor
enter
fucomip
aaa
pushf
pop
mov
inc
xchg
insl
rcr
jnp
jo
movsl
aam
jb
pop
std
jo
imul
decb
adc
adc
xor
lret
daa
pushw
and
push
test
stos
or
adc
jo
dec
xorl
jo
lret
pop
in
jnp
lock
xlat
and
jo
mov
in
pop
sub
push
pop
push
and
cmpsl
mov
pushf
lret
sub
shlb
std
loopne
mov
or
jo
or
mov
add
icebp
aad
lcall
ret
out
inc
dec
jo
mov
and
add
outsl
xchg
and
jmp
jo
lcall
jo
shll
cmp
test
cld
mov
mov
inc
outsb
or
sub
ljmp
inc
jg
jo
and
insl
jo
cmp
cmp
mov
jo
dec
jmp
enter
or
jo
xchg
dec
test
inc
jo
mov
lods
bswap
comiss
jle
sbb
test
std
test
jo
xor
sbb
ret
sub
push
push
jg
push
and
inc
arpl
inc
push
xor
add
fists
jns
mov
inc
push
mov
add
addr16
nop
stc
and
ja
movsl
pop
mov
daa
xor
or
jo
mov
dec
stos
jo
push
mov
ss
xchg
push
or
xor
jo
in
add
sbb
and
mov
enter
lds
jo
hlt
and
fscale
push
aam
aaa
rol
test
sbb
iret
and
pmaxsw
mov
cmp
xchg
mov
scas
scas
inc
scas
jo
xor
je
or
lds
mov
pop
loope
dec
scas
jo
inc
ja
in
aad
jecxz
sti
mov
iret
mov
sbb
mov
mov
push
xchg
rcrb
jo
aad
or
pop
mov
inc
movsl
mov
mov
ret
add
sbb
mov
adc
jo
sub
sub
cmp
add
jo
stos
inc
loope
add
std
adc
jge
push
int3
ret
outsb
push
je
inc
sub
jmp
cmc
jo
movsb
sbb
pop
das
mov
jg
xor
add
fimull
push
jo,pt
test
and
lds
sub
cmpb
mov
aam
jge
clc
in
jo
rol
aas
inc
mov
dec
inc
inc
lahf
or
test
dec
popf
inc
icebp
out
enter
jo
add
sbbb
inc
inc
jo
jnp
stc
push
sub
pop
fwait
xchg
popf
nop
sub
pop
adc
jmp
inc
bound
xor
jne
mov
mov
dec
mov
mov
adc
jb
ja
loope
unpckhps
jno
push
jle
inc
into
out
sub
nop
pop
ja
ljmp
pop
lock
repz
sub
jl
aas
fwait
push
jae
jo
xchg
sar
adc
pop
fisubrs
adc
lahf
shll
mov
ja
add
mov
xchg
popa
loope
xor
jo
push
inc
mov
xchg
sub
jo
notb
inc
sbb
jmp
mov
mov
push
pop
push
cmp
dec
fisubrl
hlt
mov
or
out
jo
adc
push
lea
das
push
cmp
pop
pop
imul
fstpl
aad
test
jl
subb
enter
xorb
mov
enter
insb
add
aam
imul
subl
rcrb
cltd
jo
and
cltd
xor
jnp
addl
add
push
aam
or
jle
je
adc
jno
or
gs
ja
add
jo
mov
jne
orl
mov
dec
jo
inc
jno
push
ljmp
aas
fwait
xor
subl
inc
pop
jmp
jo
and
leave
jo
pop
movsl
cmp
jo
lcall
or
inc
lret
mov
cmp
cmp
pop
jmp
pop
mov
daa
xor
std
scas
dec
adc
sti
sub
loope
jo
imul
out
cmp
ret
and
adc
and
mov
jp
push
mov
cmp
fs
mov
lds
dec
out
imul
js
nop
cmpsl
mov
ds
bnd
inc
push
and
cmpl
ret
dec
lds
mov
les
push
mov
add
testl
bound
shlb
leave
inc
xchg
lock
repnz
subl
aaa
add
cmpsb
lret
call
mov
mov
jo
dec
mov
mov
ret
js
into
out
jo
ss
cs
inc
jg
pop
mov
lds
xchg
cmp
pop
lock
call
jne
jo
movsl
rcrl
inc
shr
pop
jg
outsl
xorb
loope
addr16
jl
xor
test
inc
aas
scas
jo
sbb
add
cmp
jo
lds
pop
das
pop
mov
int
mov
inc
jo
sub
push
mov
pop
jo
xchg
nop
frstor
jmp
add
adcb
cld
sub
jo
mov
int
ds
nop
push
xor
mov
cmp
mov
iret
int3
scas
addb
arpl
nop
out
or
cmpsl
push
dec
xor
fdivl
stc
fs
mov
or
lods
loopne
cmp
jnp
lock
adc
icebp
mov
lahf
iret
test
aad
cmpsl
jo
addr16
popa
mov
add
lds
jns
lcall
ja
fbstp
fcoms
enter
xor
mov
insb
push
push
xchg
or
testb
in
xor
cmp
int
repz
mov
add
push
in
fnstenv
mov
in
ret
jo
movsl
cmp
in
xchg
jo
popf
out
mov
xchg
sub
shrl
jo
sarw
idivb
jle
jo
sub
dec
test
and
and
jge
dec
sahf
les
jo
out
loope
mov
shll
add
aad
push
sti
jo
iret
inc
inc
mov
je
sbb
shll
popf
sahf
jo
cmc
aad
fsubl
cwtl
adc
js
push
jo
outsb
xchg
icebp
inc
xlat
dec
adc
std
lret
adc
push
movsb
inc
jge
jo
rcrl
jl
mov
sub
and
adc
and
aad
adc
ret
mov
mov
sub
adc
pop
jmp
and
push
pop
jae
sub
fwait
jo
repz
jo
mov
dec
cmp
pop
fs
fldenv
jnp
scas
xchg
lds
mov
mov
sar
push
sbb
shll
jb
leave
insb
mov
jns
add
dec
lds
pusha
insb
js
push
icebp
nop
jo
jae
lcall
adc
sub
jmp
xor
mov
jae
sbb
or
hlt
popf
xlat
xchg
sub
mov
pop
pop
in
dec
scas
cmp
pop
les
jo
push
mov
and
jo
or
mov
xor
jo
ret
sar
mov
jmp
xlat
addb
push
push
push
rcr
pop
in
jg
xchg
lock
mov
jo
and
pop
xor
lods
jb
jo
call
xchg
loopne
mov
faddl
jo
push
pusha
clc
test
sub
sub
js
and
and
incl
mov
lahf
arpl
jo
mov
mov
lret
insb
cmpsb
test
orl
jbe
dec
shll
sbb
outsb
cld
xor
push
int3
jb
icebp
repnz
and
mov
fs
inc
bound
mov
push
int3
jo
cld
cltd
cmp
xchg
push
sub
ja
scas
mov
xchg
inc
xchg
jo
pop
pop
popf
leave
jl
lods
jo
sub
push
xchg
dec
mov
loope
cmp
xor
jo
aas
orl
fstl
and
jo
inc
jb
arpl
fbstp
hlt
lea
cmp
jp
sbb
push
xlat
push
add
psrlw
mov
std
mov
stos
lret
jmp
ret
int
jmp
sub
push
adc
cld
mov
je
testb
adc
rclb
dec
mov
and
jb
popf
and
cltd
aam
addb
jl
jo
ss
fbstp
push
mov
rcrb
adc
lds
dec
push
mov
xchg
mov
daa
bound
pop
push
adc
dec
jo
js
sbb
ret
or
inc
in
dec
push
adc
andl
fbstp
mov
xchg
rclb
add
push
repz
xor
fimull
sub
jo
sbb
dec
jge
jo
test
adc
jo
xchg
arpl
shll
cmp
fimuls
lock
pop
adc
mov
int
xorl
hlt
add
cs
push
lds
xlat
pop
test
mov
jo
ss
shlb
add
push
jo
iret
push
jge
sub
das
jo
pusha
ret
cmpsb
or
movsb
xchg
adcb
xlat
loopne
sub
jb
movsl
jo
movb
test
mov
fsubrl
push
or
jmp
fcoms
jo
sbb
data16
sbb
pop
jo
rcrl
ret
rcrl
mov
pop
jo
sti
mov
imul
inc
pop
lods
negl
sahf
icebp
lret
bound
bound
das
rcrl
pop
sub
push
clc
mov
fs
and
roll
xlat
fwait
nop
test
cmp
lds
and
bound
std
clc
sub
sub
repz
je
sub
testl
lret
shll
mov
ret
xor
in
shlb
push
frstor
test
in
jno
lods
clc
ret
js
jle
loope
dec
push
mov
rorl
cmpsl
jo
setle
or
pop
divl
call
int
jo
push
mov
mov
int3
jo
pop
insb
cwtl
jnp
jmp
jo
and
cmp
fidivs
or
or
jo
negb
in
or
leave
mov
aaa
sbb
xor
mov
adc
scas
adc
add
mov
xor
icebp
adc
test
or
hlt
arpl
jo
sub
xor
adc
cli
cmp
xchg
sub
aad
pop
and
ret
mov
stos
sub
subl
mov
jg
ss
jo
int
jecxz
ror
aam
es
fisubs
sbb
nop
rcrb
xchg
or
jno
sbb
jo
adc
jo
icebp
enter
sbb
push
sbb
test
xor
leave
or
mov
jle
inc
test
sub
push
popf
or
mov
jo
jb
leave
jo
and
push
sbb
xor
cmp
jo
jmp
addr16
jo
dec
mov
mov
push
push
andb
push
push
repnz
jo
add
cmpl
or
shrl
js
push
add
and
pop
xor
sub
xchg
jo
or
cli
sub
stc
cmp
fldcw
cmpb
scas
data16
mov
test
mov
in
jo
xchg
leave
add
popl
push
mov
jmp
mov
arpl
inc
lock
mov
cmp
or
dec
imul
jo
add
or
idivl
jo
xor
xlat
jge
push
jge
jo
incl
xchg
mov
xorl
fs
lahf
out
lret
adc
jle
cld
iret
jo
bound
cmp
incb
pop
inc
inc
push
lea
or
subl
mov
inc
loope
and
insl
mov
or
jo
pop
xlat
outsl
inc
mov
jae
xor
jo
sahf
adc
or
mov
mov
xor
fisttpl
push
jnp
pop
notl
shrb
pusha
mov
xor
int
lock
xor
and
out
ret
lret
lods
push
inc
fdivrl
sbb
lds
loop
daa
lahf
jo
cmp
outsb
nop
cwtl
dec
push
popa
pop
add
jno
shrl
inc
cld
jo
inc
xchg
call
jo
jne
xchg
xlat
sbb
jns
jl
and
xor
push
mov
out
aam
test
mov
jo
xchg
mov
sti
sub
cmp
xchg
pop
add
lds
jbe
sub
mov
lcall
pop
lds
cltd
ud2
pop
ja
js
mov
dec
mov
cld
push
jg
mov
std
loopne,pn
pop
ret
add
lds
mov
loop
mov
pushf
dec
push
adc
roll
fxch
fsubs
dec
ficoml
sbb
add
les
push
xor
push
lds
mov
push
inc
and
mov
hlt
xlat
or
stos
sub
jo
testl
mov
ret
insb
in
lock
out
xorb
xlat
repz
roll
das
inc
mov
subl
mov
inc
jo
cmp
pop
rorb
stc
jo
and
jg
and
addl
ss
inc
cmp
imul
vpaddb
aas
sbb
push
jo
xchg
cmp
nop
push
add
pop
insl
leave
adc
cmp
jae
mov
data16
mov
jge
fisubl
inc
aas
out
add
cmp
lahf
mulb
dec
xor
jns
jo
int3
pop
les
shrl
and
push
push
push
cwtl
loop
js
ret
lods
rol
or
push
xchg
scas
push
out
js
inc
cmp
jno
jb
xor
mov
nop
jns
jmp
arpl
daa
clc
sub
adc
jo
scas
je
lahf
hlt
add
mov
sub
and
out
push
ljmp
jo
repz
push
popa
scas
mov
inc
int
jo
movsl
or
mov
ret
adc
jp
lds
adc
jo
lcall
jo
mov
or
push
pop
xchg
lds
movsl
xor
adc
add
scas
loop
ret
jo
idivl
das
out
sbb
dec
xor
mov
and
add
push
cmp
imull
ret
xorb
mov
sbb
loop
int
and
jo
or
mov
xor
es
addr16
lret
jns
inc
cmp
jo
cmpb
lods
bound
loop
int
add
adc
les
jns,pn
call
xor
arpl
mov
or
mov
sbb
test
xor
ljmp
push
dec
xchg
add
mov
cmc
push
rcr
loop
idiv
sub
push
and
outsb
enter
xor
testb
or
pusha
inc
in
inc
loope
and
push
jo
js
popf
dec
jp
lods
jo
mov
add
imul
mov
and
ret
testb
pop
enter
jae
pop
test
stos
insl
gs
push
in
insb
mov
mov
adc
lock
lea
in
pop
push
cmp
jmp
xor
cmp
fmull
jo
pop
inc
mov
add
dec
cmp
xchg
xchg
mov
and
imul
jo
cmp
das
nop
xchg
inc
and
jno
imul
gs
in
and
sbb
dec
push
jb
cmp
and
hlt
jp
jo
inc
imull
sub
leave
and
fcoms
rorb
icebp
sbb
repnz
inc
push
jbe
pop
jge
push
push
jns
imul
xchg
repz
js
jg
into
lock
push
cmp
aam
test
jo
rorl
loope
ret
sub
xor
or
push
fdivs
aaa
shr
cwtl
frstor
jo
adc
mov
ds
jo
push
lds
mov
fsts
iret
sub
inc
jno
mov
dec
decl
jo
ror
std
ds
xor
xchg
addl
push
pop
pusha
mov
vmread
sarb
cmpsl
push
out
jo
je
divb
ret
mov
movsb
jo
hlt
jns
mov
lock
mov
scas
jp
mov
sub
test
cmp
fs
sbb
aad
mov
das
and
test
cmp
out
add
jno
pop
negb
popf
add
aaa
divps
pop
xchg
jle
dec
sub
inc
lods
insb
loope
cmpsb
sub
push
dec
popf
in
xchg
shlb
repnz
push
jo
sarl
fbstp
out
and
leave
fnsave
or
jo
loopne
inc
mov
push
and
pop
jo
jp
mov
out
cmpsb
jge
xor
sete
mov
and
mov
test
push
push
mov
add
scas
jmp
jo
adc
mov
xor
insl
mov
xchg
mov
pop
jmp
xchg
dec
daa
jl
in
mov
pop
cmp
subb
or
xor
xor
hlt
sub
jg
subb
mov
aaa
aad
roll
rolb
mov
mov
cmc
lds
sub
pop
jo
sahf
fs
ret
cld
in
aaa
in
jo
or
cmc
xor
nop
mov
push
loopne
mov
mov
xorps
fisttpl
pop
test
jp
or
aaa
and
jb
jo
out
movsb
imul
rcrl
les
mov
shl
adc
jo
pop
insb
std
sbb
mov
sbb
pop
testl
lds
push
fwait
inc
lahf
add
jnp
jo
aad
sahf
push
mov
nop
jne
inc
sbbb
jge
jo
xchg
in
cmp
and
js
popa
xchg
dec
xchg
std
jmp
in
mov
rclb
movsb
ja
sbb
xchg
inc
mov
lods
jo
jge
scas
je
ret
outsb
inc
xchg
jo
push
cmp
leave
dec
test
dec
inc
adc
push
inc
or
xchg
jo
lret
loopne
pushf
jo
push
nop
inc
xor
fists
leave
sub
imul
mov
jno
dec
dec
xor
xchg
psubusb
or
nop
mov
aas
clc
aam
ja
addr16
push
test
frstor
adc
push
lock
jo
xor
loop
test
xchg
bound
ficoml
in
mov
out
insl
mov
inc
jo
lret
cmp
dec
jo
jns
data16
inc
pavgb
mov
mov
inc
mov
mov
movsl
push
push
push
leave
xor
inc
pop
lret
jo
jbe
jno
rep
rorb
aam
and
cmp
out
les
or
pop
orb
int
xor
sarl
jo
xchg
cli
xchg
in
inc
ret
shlb
imul
xlat
fistpll
sbb
cmc
movsb
jne
push
and
xorl
dec
add
cmp
loope
cmp
nop
inc
dec
sub
std
inc
test
sub
jo
jg
hlt
xchg
xchg
scas
sub
jl
out
add
pop
adc
adc
movsl
mov
pusha
pop
addr16
mov
nop
and
push
or
xor
mov
xchg
cmpsl
fcmove
popf
inc
jo
and
pop
adc
add
ror
dec
push
mov
int3
mov
jo
lret
popa
and
fidivs
cs
cld
mov
jl
in
mov
jo
popf
mov
xchg
jo
ljmp
sub
lea
cmp
add
xor
mov
jo
sub
pop
nop
lea
jne
inc
adc
mov
repz
lods
out
scas
bound
jmp
fs
insb
mov
lods
test
sbb
icebp
mov
sti
in
inc
push
lcall
xchg
and
pop
fs
test
inc
cmp
movswl
add
sbb
vpshuflw
xchg
dec
jmp
cmpsl
ret
jbe
fildll
sbb
xor
cld
pop
mov
std
xchg
push
stos
sub
aad
sbb
repz
jo
aad
cmp
dec
lret
stc
lea
mov
pushf
enter
inc
pop
push
aam
push
mov
sub
jb
jo
scas
leave
jnp
push
push
adc
insb
inc
xor
loop
pop
fwait
and
hlt
daa
hlt
mov
mov
fs
stos
imul
int
add
test
or
aam
inc
inc
lods
das
lock
out
mov
add
loopne
dec
push
xor
lea
cltd
stos
push
or
add
jmp
push
das
push
jo
aad
adc
jle
push
pop
packsswb
sub
hlt
sbb
jo
hlt
jge
push
mov
bnd
pop
inc
xor
jo
mov
add
imul
add
pop
rorb
arpl
bound
sarl
mov
fiaddl
loope
movsl
sub
inc
xlat
cmp
dec
rorb
xchg
adcb
cmp
imul
adc
pop
div
push
push
adc
lret
add
lds
pop
mov
sub
sub
sti
jo
fdivrs
and
sbb
aad
dec
mov
shll
inc
jmp
push
jno
movsb
ffree
push
fwait
jo
pop
push
push
std
ret
jo
mov
push
lds
sbb
mov
xchg
mov
repz
pushf
mov
negb
jo
repnz
jno
lret
shll
les
lds
cs
jo
jg
and
inc
nop
jo
mov
lds
jo
dec
dec
mov
fisubl
inc
sahf
jo
and
hlt
arpl
aad
mov
adc
and
sub
push
pushl
or
nop
jmp
lods
jb
add
or
and
insl
sub
iret
lretw
in
mov
adc
inc
xor
cwtl
mov
and
and
jo
add
lahf
push
cmp
mov
inc
fnsave
enter
ljmp
ret
lods
and
jo
cmp
icebp
xor
or
xor
jg
inc
loope
dec
and
stos
lret
call
js
jle
scas
or
lret
xor
jo
shll
or
test
xchg
stos
aaa
push
ret
nop
repnz
inc
movsl
je
and
pop
int
clc
push
and
loope
js
js
add
inc
cmc
in
and
mov
das
pop
je
daa
subb
sub
jo
xor
mov
f2xm1
sahf
jae
test
addr16
mov
cmpsb
inc
rorb
jmp
ret
jnp
push
xor
and
push
adc
enter
aaa
sub
inc
orb
in
push
jo
add
jae
jo
push
inc
into
jno
pop
xor
inc
les
je
push
jo
rcrl
sub
adc
aas
adc
push
jo
lret
rcll
mov
push
and
leave
or
sub
divb
jo
add
add
mov
or
scas
mov
loope
jo
cld
subl
jo
cmp
std
lret
fisttpl
mov
dec
jo
push
fidivrl
dec
xchg
inc
jo
insl
inc
aam
lock
shld
sahf
sub
jle
push
mov
sti
insl
dec
jge
dec
or
icebp
xor
test
mov
cmp
hlt
jo
jl
lds
or
fdivrs
jo
pop
ret
and
sub
pop
inc
jo
mov
mov
jo
popf
stos
dec
cld
adc
sti
jo
lods
mov
or
dec
jo
shrl
cmp
jb
dec
lds
test
add
inc
fdivs
ret
xchg
scas
mov
pop
out
jo
dec
or
sub
sbb
subb
mov
mov
and
jmp
stos
enter
dec
pop
fwait
mov
cwtl
xor
jo
rcll
mov
and
lds
push
push
mov
aad
outsb
xchg
push
mov
mov
pmuludq
popf
inc
jo
mov
xor
hlt
fistl
jo
pop
iret
adc
jo
pop
or
push
push
jo
sbb
decl
adc
xchg
aad
iret
jo
or
jbe
test
adc
add
push
int
nop
fcmovnbe
or
mov
maskmovq
imull
out
in
jle
sub
std
or
sahf
loope
mov
pop
test
out
int3
sarb
in
call
push
push
jo
pop
ret
ja
mov
sub
movb
rorb
mov
scas
inc
lcall
int
mov
aad
push
xchg
ja
jo
xlat
fs
cmc
xor
pusha
mov
adc
ret
jo
pop
pop
pop
jb
cmp
jo
jle
ret
and
test
and
rcl
or
movsb
mov
xchg
pop
into
jo
mov
insb
ret
cld
and
loope
repz
insl
stos
adc
into
test
mov
or
leave
sub
xchg
cmpsl
js
arpl
gs
les
andb
mov
push
out
add
insb
arpl
jo
sarl
bound
lret
mov
mov
and
int
fidivs
sbb
jecxz
enter
mov
jo
mov
and
cmp
jl
mov
push
fnstcw
dec
cmp
push
xchg
pop
push
pop
and
mov
push
xchg
mov
dec
mov
push
jb
add
in
mov
xchg
addr16
xor
cmp
mov
fistpll
jo
pop
adc
rorl
loop
dec
adc
lock
movsb
sahf
xorb
pushf
out
shll
cli
jo
push
xchg
das
jbe
imul
cld
mov
push
sub
mov
mov
jb
xor
and
inc
js
xor
scas
pmulhw
roll
mov
mov
mov
mov
adc
fs
outsl
mov
fbld
stc
int
fadds
or
xlat
in
and
testb
push
test
outsb
mov
daa
stc
jo
lret
ret
lcall
jo
mov
inc
push
jo
mov
bound
repnz
in
out
lds
sub
dec
leave
inc
nop
orl
rol
bound
gs
imul
pshufw
mov
jns
push
scas
les
xor
push
or
dec
popf
xor
cmp
jo
ret
cmp
pusha
mov
outsl
fistl
inc
jo
and
enter
addl
sbb
inc
fwait
jle
jg
jnp
and
sbb
inc
sbb
inc
xchg
push
sub
jo
xor
ljmp
xor
pop
jo
and
sbb
icebp
in
pop
jecxz
cmc
push
js
xchg
gs
mov
lea
or
ss
jg
cmc
mov
jo
pop
adc
mov
insl
mov
mov
test
mov
mov
xorb
outsl
cld
mov
leave
cmp
sbb
movsb
shlb
or
mov
mov
insl
cli
popa
jo
fdivl
int
jnp
jo
cwtl
into
ljmp
inc
ret
fdivrs
xor
cmp
sub
jg
popa
xor
cwtl
jo
int
inc
push
gs
jo
adc
stos
pop
jo
jns
add
call
jmp
lret
xor
inc
insl
mov
out
mov
daa
cmp
iret
ljmp
insb
mov
jo
stos
dec
add
jnp
jo
sarl
andb
andb
in
bound
sbb
sub
or
cmpsb
jp
mov
cli
mov
sub
pop
jg
in
mov
nop
imul
stc
xor
outsl
mov
mov
addb
and
jo
test
rolb
mov
jo
pop
push
sbb
aas
loop
add
out
xor
inc
outsb
sub
lds
xchg
es
addl
out
mov
jo
cmp
and
adc
push
repz
int3
mov
ljmp
call
jmp
sbb
ljmp
cmc
sbb
or
push
jo
gs
sbb
mov
or
aaa
add
sarl
pop
jo
jle
and
ds
mov
ja
jmp
cltd
add
lods
lds
dec
jo
notb
scas
sbb
fbstp
popa
mov
dec
jo
lds
inc
sub
arpl
jmp
out
out
mov
sbb
adc
js
push
pushl
mov
mov
lods
dec
out
fadds
je
dec
loope
in
fwait
mov
dec
adc
je
adc
mov
pop
imul
gs
push
pop
xor
cmpsb
inc
mov
scas
lods
and
dec
out
adc
jp
mov
jmp
xlat
std
mov
inc
xor
sbb
jg
push
xchg
cld
adc
imull
push
xor
mov
push
sti
jo
xor
pushl
test
data16
loope
scas
xchg
out
push
or
push
shll
jbe
dec
cmp
mov
imul
mov
in
leave
sub
sub
inc
cwtl
mov
mov
pop
ret
jo
leave
xchg
insl
vmovss
in
xor
jo
shlb
test
xchg
rolb
scas
adc
cmp
inc
and
es
std
insl
sbb
in
jo
jae
lret
inc
jo
cmp
mov
adc
repz
and
stos
loope
jge
push
push
xchg
mov
and
bound
pop
les
notb
rorl
jne
adc
or
jne
jns
jecxz
add
in
test
lret
sub
sarl
xchg
dec
jo
jp
nopl
mov
jo
lods
fistpl
mov
ret
fmull
jae
in
mov
cs
sbb
jo
out
cmpsl
add
aam
lds
fildll
mov
insb
xchg
inc
ss
cwtl
push
ret
ja
or
sbb
and
fdivp
std
jg
enter
imul
in
mov
xchg
jo
popf
fsts
repnz
inc
xchg
cmp
leave
and
lods
cmp
push
jo
in
inc
xchg
lock
ss
loope
and
cmp
jo
push
lock
popf
nop
jo
jl
jmp
push
push
and
aam
push
cmp
out
inc
fwait
push
iret
insb
lret
pop
jo
adc
mov
jo
rcl
push
shl
in
dec
and
nop
dec
ja
mov
stos
fistl
aad
push
je
test
fisubl
pop
fsts
repnz
mov
sub
scas
pminsw
stc
xchg
pushf
jge
jo
stos
or
in
fisubrl
fnstenv
movsb
scas
pop
mov
mov
subl
fs
out
mov
imul
jo
popa
stos
fs
std
test
add
xchg
or
sarl
imul
pushf
loop
aad
shlb
push
andl
jo
pop
xchg
sbb
sub
jb
xor
pop
cmp
cmpsl
xor
adc
mov
std
rcll
aaa
adc
sahf
gs
lds
lret
test
jge
mov
jl
and
or
sarl
fadd
les
adc
hlt
fldenv
jo
and
jb
jp
lds
inc
bound
insb
roll
jb
das
dec
xchg
mov
movsl
jo
lea
icebp
je
jo
fldenv
or
and
or
jne
adc
xor
mov
sarl
into
lds
cmc
jae
jo
sub
test
imul
jp
push
mov
push
mov
sub
add
insl
aam
adc
das
mov
scas
shl
outsb
jo
fcmovne
jle
cmp
mov
rcll
ret
jmp
test
aam
or
mov
movsl
mov
xchg
pop
and
cwtl
jne
or
repz
fidivl
push
inc
pop
add
cmp
xlat
adc
das
nop
push
jmp
je
cld
icebp
jo
pop
inc
mov
jo
in
dec
mov
push
repz
jnp
push
fdivs
lods
insl
leave
push
jo
jae
gs
mov
inc
jo
jmp
std
xlat
imul
sbb
jecxz
push
push
mov
clc
mov
mov
daa
jo
mov
leave
pop
shll
inc
incl
and
mov
adc
mov
scas
test
xorl
or
and
dec
xchg
shrb
and
adc
lds
jbe
mov
mov
cs
mov
aas
push
inc
mov
loope
sub
add
xlat
mov
out
push
js
inc
jge
push
xchg
cmp
bound
nop
hlt
pop
shlb
mov
divl
ret
in
sub
adc
mov
jmp
fs
in
sbb
fs
nop
jo
inc
aaa
aas
icebp
popf
xchg
gs
rcll
shll
add
lret
mov
adcb
cld
movsb
pop
jo
inc
xor
enter
jo
cmc
pop
je
rol
jo
push
iret
stos
ss
insl
jo
xlat
xor
or
shufps
jle
cmc
adc
push
daa
mov
sub
notl
bound
dec
dec
loope
sbb
inc
mov
xor
adc
pushl
and
cmp
mov
ret
inc
pop
cmp
jo
and
fnstenv
and
jno
stos
leave
aas
jo
jnp
lahf
dec
insl
add
lds
scas
fwait
xlat
xchg
jo
ficomps
mov
mov
js
jno
pop
jo
cmc
rclb
jo
loopne
and
cli
xor
jo
cmp
mov
les
fdivs
int
test
iret
jo
xor
pop
shlb
or
ljmp
shll
faddl
mov
cmp
dec
add
ss
lock
stos
repz
jo
xorl
xor
icebp
push
cmp
stos
inc
lea
jmp
int
xor
js
inc
adc
adcl
jge
test
lds
mov
jo
pop
inc
inc
scas
and
xor
adc
leave
loope
pop
lret
push
cmpsb
or
je
mov
jbe
insl
mov
pop
push
ret
jae
in
dec
mov
idivl
push
sar
jo
xor
and
jmp
xchg
mov
add
push
lods
insl
and
andb
cltd
adc
jnp
test
aas
into
loope
pop
shll
add
popf
iret
dec
xchg
jl
jnp
add
call
insb
xchg
xchg
jo
mov
mov
icebp
dec
and
sahf
jo
test
sbb
jo
out
loope
xlat
lcall
outsb
or
in
and
pop
mov
int
push
add
dec
sub
mov
adc
iret
add
push
sub
ja
in
adc
push
or
outsb
jo
mov
push
enter
jmp
into
mov
push
dec
mov
add
fs
decl
push
inc
cli
loope
in
call
aam
add
les
mov
fs
xchg
sub
addb
test
push
test
push
cmp
pusha
sub
or
arpl
and
sbb
leave
xchg
adc
nop
movd
xchg
jge
jl
sub
aad
dec
aam
jp
nop
xorb
movb
jge
jo
sbb
vpcmpeqb
xchg
mov
sbb
mov
jo
mov
dec
pop
jmp
lds
jo
shll
push
xchg
jae
lcall
jo
data16
dec
jbe
inc
or
rcl
repz
hlt
aas
nop
ret
loope
push
jge
jb
and
jo
lock
add
ret
jns
mov
leave
inc
nop
nop
jnp
mov
inc
incl
dec
enter
jo
mov
sbbl
jmp
shrl
js
lds
aam
mov
xor
inc
loope
cs
xchg
iret
loopne
jmp
test
push
cmc
jo
jns
arpl
mov
and
push
jo
cli
ljmp
shrb
xor
xchg
jge
inc
fs
movq
mov
divl
scas
adcl
jne
mov
push
ljmp
movsb
loope
xlat
sbb
shl
mov
arpl
sbb
pop
xorb
inc
repz
cmpl
fmul
test
push
out
aaa
stc
cmp
cwtl
inc
inc
stos
jo
lcall
cs
into
sarb
jle
sub
xchg
pop
pop
scas
xor
and
stos
imul
sbb
leave
adc
mov
xor
jp
nop
loop
add
nop
test
pop
ja
add
jle
xor
sbb
sbb
push
sub
in
movmskps
sub
and
xchg
jo
push
add
in
xlat
loope
xor
and
xor
bnd
cltd
std
push
dec
lcall
cmpsb
shrl
scas
fs
mov
lods
cwtl
sbb
dec
xchg
or
out
mov
lret
mov
outsl
les
add
lds
repz
pop
leave
jo
ds
in
arpl
cmp
or
jno
or
and
sbb
addr16
outsl
cltd
add
in
jo
test
dec
fisubs
adc
fldenv
lcall
jo
add
in
xchg
sti
outsl
js
adc
pop
dec
jo
jl
sub
loopne
dec
insl
out
adc
xchg
mov
int3
xchg
mov
jb
jo
ret
sahf
test
clc
out
imul
lret
lds
mov
jo
clc
ss
push
jo
xchg
adc
insl
icebp
rolb
cwtl
std
bound
leave
mov
sub
fcoms
jecxz
mov
cli
insb
dec
cld
std
dec
jge
inc
jbe
fisubrl
movsl
fxch
dec
jae
repnz
jo
movsb
gs
les
sahf
push
mov
das
ret
mov
push
jl
scas
xchg
js
mov
out
imul
dec
daa
mov
gs
jo
outsb
fwait
add
leave
jecxz
xorb
xlat
xor
out
push
pop
mov
fxch
dec
xor
mov
aaa
nop
popf
lahf
hlt
pop
jns
xchg
push
jo
mov
popa
mov
ret
cmpsb
loop
test
jo
inc
subb
mov
iret
jo
pop
scas
mov
jo
cmpb
cli
mov
mov
aam
and
shrb
in
fdecstp
fwait
jo
js,pn
ret
pop
movsl
data16
leave
cmp
ljmp
xchg
dec
ret
or
cmc
imul
out
arpl
ret
into
xchg
push
fnstcw
test
push
lds
cmp
lods
inc
aad
bound
pop
mov
mov
bound
js
mov
jo
lods
or
js
aaa
les
or
inc
jl
xchg
push
jo
xchg
dec
sbb
cmpsb
leave
jne
dec
xor
jge
adc
lds
jo
push
movsb
outsb
mov
daa
push
sbbb
je
cmp
jo
add
push
jo
jle
and
jo
mov
sub
jo
in
imul
test
or
fmulp
inc
fnstenv
fnstsw
jb
or
lds
push
mov
pop
int
push
fs
and
xor
xchg
and
int3
xor
sub
add
pushf
add
mov
xchg
in
xchg
dec
insl
sbb
jo
push
push
stc
lret
jo
je
ret
add
xor
push
fidivs
ds
and
mov
addr16
jl
movsb
xor
lret
fs
jnp
add
jo
cmp
cmp
jo
in
gs
scas
push
push
jo
push
mov
push
jbe,pn
push
dec
jg
add
mov
in
jo
aaa
lods
inc
inc
push
rorl
jns
arpl
cs
fwait
test
adc
sar
jo
sub
dec
rcll
jo
lea
mov
out
iret
jo
mov
jns
push
jbe
in
jo
add
test
inc
dec
leave
jo
sbb
mov
repz
vmovdqu
js
shll
add
cmp
fldpi
nop
test
adc
push
je
sub
jo
mov
divb
add
or
lds
or
shl
ja
sub
and
arpl
add
mov
into
add
mov
pmaxub
fidivl
test
jo
cwtl
mov
push
call
push
mov
jo
sub
xchg
mov
icebp
ljmp
jo
enter
aad
aam
std
sbb
xor
ret
jo
aaa
sbb
mov
xor
out
cli
pop
pop
mov
dec
push
jb
dec
pop
and
in
popl
fldl
jo
xor
ror
movsb
inc
and
jbe
xchg
test
data16
jo
dec
dec
add
bound
out
jo
rol
xchg
xor
jle
jo
iret
ret
lret
notl
mov
mov
sbb
in
or
loop
pushw
mov
jo
std
out
mov
loope
mov
inc
mull
js
ret
mov
arpl
jo
popf
les
mov
pop
sbb
cwtl
rolb
mov
shlb
popa
movsl
sarl
sub
jo
mov
dec
sbb
iret
sub
lcall
test
fdivl
sub
clc
inc
sbb
jle
jo
cli
xor
jns
add
scas
push
scas
repz
pop
xchg
lock
or
mov
repnz
sub
lds
into
popa
push
lods
sub
insb
std
mov
add
in
xchg
dec
jo
xorb
inc
mov
test
cmp
cmp
sub
xchg
out
xchg
jo
lods
pop
andb
mov
add
pop
mov
inc
hlt
jo
pusha
lcall
aas
mov
mov
add
dec
das
jecxz
xor
ds
push
mov
imul
ret
xor
xchg
mov
hlt
lahf
inc
fld
jbe
nop
insb
jmp
das
cmp
and
out
lret
ret
pop
je
jo
jae
dec
pop
inc
jge
mov
jo
fmul
test
sub
cmpsb
jo
clc
xchg
cmp
lock
lea
fwait
shl
jo
sahf
insb
lds
loopne
out
jo
fbstp
not
ret
hlt
xor
jo
insl
xchg
cmp
ja
sbbb
jo
add
shll
repz
loope
cmp
xor
mov
in
adc
out
and
pop
xchg
popf
jo
fstl
rcrl
pop
xlat
inc
jmp
addl
adc
leave
xchg
or
dec
add
jl
subl
ljmp
inc
add
mov
ret
and
inc
xor
mov
xchg
push
in
fwait
repnz
aas
push
mulb
jo
ror
in
cmp
cmp
rcll
add
mov
out
xor
inc
fwait
nop
jnp
push
ret
insl
rolb
testb
clc
jb
fs
std
sub
or
inc
cmp
popf
jmp
nop
popa
cwtl
or
mov
cmc
xor
loop
adc
shll
push
out
xor
and
jo
xchg
shll
incb
xor
xlat
lds
lock
hlt
sub
shlb
lcall
cltd
lock
jl
call
js
jo
pop
mov
fidivrs
jo
rcrl
cli
cmpsl
sbb
lcall
roll
loop
fisubrs
lods
inc
fcoml
les
lea
ret
sub
jo
je
jmp
jo
fldcw
pop
je
jo
jl
les
adc
insl
aad
mov
fidivs
jo
loop
addb
push
xchg
pop
mov
aam
or
fnstenv
in
and
inc
cmp
mov
jo
leave
xor
pop
fists
jo
mov
inc
aas
jo
popf
test
pop
imul
adc
push
jae
jle
out
iret
xor
into
cmpsl
js
inc
sub
push
mov
add
jmp
out
xchg
inc
push
jo
ss
mov
enter
add
jo
lcall
gs
fsts
mov
mov
pop
mov
daa
push
aaa
cmpsb
jno
into
in
cmp
or
std
sub
or
leave
pop
cmc
int
js
jae
push
inc
dec
cwtl
adc
enter
dec
js
mov
jo
mov
xor
jo
jle
cmp
sbb
adc
and
xor
lds
fisubrs
insl
hlt
les
xchg
fists
inc
jne
cwtl
inc
or
subb
and
or
mov
cmpsb
sbb
daa
bound
loop
aam
rorb
xchg
data16
xlat
leave
mov
adc
inc
sbb
mov
dec
jo
lock
pop
fdiv
out
cmp
popf
add
cs
sub
xchg
mov
test
pshufw
push
out
jne
insb
jo
xor
sarb
mov
or
leave
or
xchg
jo
and
inc
jb
cmp
jl
aad
mov
mov
jle
cmpb
sbb
jne
mov
push
xor
pop
add
push
imul
cltd
je
xchg
dec
hlt
mov
mov
int3
lahf
fcmovnbe
jmp
push
test
subb
or
adc
shlb
push
mov
leave
jo
mov
rcr
mov
hlt
lds
imul
divl
cwtl
pop
iret
sub
jo
sbb
cmp
mov
jo
jmp
ror
sti
pop
jo
add
les
in
mov
jae
xor
cmp
mov
leave
sub
cmp
test
ret
push
jl
xchg
jae
xor
ja
cli
inc
push
xor
jp
icebp
lock
int
pop
fldl
jecxz
add
lds
insl
aam
xor
int3
add
inc
or
int
shll
mov
mov
mov
xchg
xor
in
mov
enter
out
test
push
leave
cmp
bound
jl
scas
xchg
inc
or
gs
jae
loop
jo
xchg
sahf
jo
lds
bnd
mov
lret
cmp
sbb
shrl
stc
jo
daa
ret
sbb
inc
jo
rcrb
lret
dec
mov
jmp
xor
push
mov
sub
dec
jo
dec
into
xchg
outsl
mov
sbb
rcl
cmp
mov
xchg
aas
shll
and
add
mov
leave
jo
add
xor
xor
icebp
aad
cmp
cmc
mov
push
sub
mov
aaa
js
adc
ret
addr16
jp
sub
shll
pushf
mov
jle
mov
cmp
outsb
pusha
clc
adc
mov
jo
cmp
mov
inc
xchg
dec
jo
inc
test
xchg
mov
dec
movsl
lret
cmc
cmpsl
hlt
push
lar
fldt
fsubrl
nop
rcrl
mov
in
loope
pop
push
adc
lahf
lret
shl
push
repnz
pop
push
insl
or
shrl
or
add
sub
push
mov
jmp
jnp
mov
orb
out
dec
mov
pshufw
insl
or
shlb
stos
pop
jae
sbb
adc
cmp
add
inc
xor
push
lock
pop
dec
bound
jbe
push
dec
pop
inc
cmp
cwtl
js
and
pop
jo
fidivrs
dec
sub
mov
sahf
push
fisttpl
mov
add
xchg
dec
or
subb
inc
insl
repz
out
test
fimuls
cmp
mov
jne
cmp
repnz
popf
and
sahf
cld
sysexit
push
xchg
cmp
xchg
cs
js
mov
testb
js
jo
inc
inc
cli
xchg
pop
xchg
lock
mov
mov
pop
ret
xor
or
inc
jge
mov
xorb
sub
mov
jo
inc
test
or
dec
sub
add
jo
mov
test
inc
push
imul
sub
sub
xchg
lea
push
fs
or
push
dec
push
shr
testl
hlt
fidivrs
dec
pusha
mov
sub
lds
adc
ss
jo
nop
pushf
testb
sarl
ffree
jnp
pop
sbb
jp
in
inc
add
push
popa
or
lods
pusha
inc
pop
jo
lds
scas
sbb
cmp
xor
push
jo
adc
filds
push
jo
es
enter
or
out
push
xchg
add
std
cld
mov
pop
push
aaa
and
inc
cmp
pop
xchg
shll
pop
scas
mov
jo
outsl
mov
xchg
imul
push
xlat
jo
in
cltd
lahf
mov
adc
push
sub
push
leave
cmp
push
outsl
push
test
sbb
sbb
jo
sbb
shll
jp
daa
xchg
inc
push
push
dec
outsb
inc
xchg
dec
out
leave
rorb
mov
add
stos
xor
movsl
lods
dec
outsl
jl
mov
jo
dec
fdivl
sub
lahf
inc
nop
test
dec
add
out
mov
and
cltd
ja
sbb
cmpsb
aad
mov
js
insb
mov
adc
sub
fidivs
inc
and
sbb
xchg
hlt
nop
or
jbe
rclb
loope
add
movsb
jo
ds
push
add
insb
pop
push
insl
add
xchg
push
mov
cmp
xlat
mov
mov
jmp
negb
fwait
add
movzwl
jl
test
xor
mov
xor
scas
iret
add
push
mov
int
gs
add
leave
sub
adcb
lods
jmp
add
mov
fildl
pop
add
jne
add
ljmp
sub
enter
jo
sbb
sub
inc
int3
push
cmp
cbtw
pop
outsb
mov
pop
mov
cmp
and
hlt
int
xchg
enter
add
gs
sahf
cmp
jo
mov
imul
jns
mov
imul
jbe
std
das
mov
sbb
inc
icebp
xor
adc
and
jo
sbb
jmp
dec
popa
fucomi
jb
inc
lods
jo
dec
ss
aaa
mov
push
lods
mov
out
or
jecxz
push
rcr
ja
and
and
dec
ljmp
jo
int3
outsl
xchg
fcmovb
popf
jo
rcr
lds
mov
push
and
pop
in
nop
mov
ret
or
jo
jp
leave
and
jo
cli
filds
and
sub
addr16
mov
xchg
outsb
jo
mov
pop
out
jo
xor
les
mov
jo
lahf
xor
movsl
mov
lds
shrl
psllw
sbb
adc
jg
xchg
leave
pop
sub
mov
in
jo
andb
jo
cmpsb
mov
lds
dec
gs
jb
push
addr16
insl
xchg
mov
mov
ds
mov
sbb
sarb
fcomi
out
mov
lods
addr16
jmp
sub
jo
lahf
jne
fstps
scas
lods
jbe
add
add
mov
xchg
jecxz
mov
mov
je
or
mov
mov
dec
mov
and
repnz
jo
sbb
mov
icebp
sub
xchg
testb
int3
out
push
push
pushf
add
insb
negb
sub
pop
lret
push
stc
jo
sarb
push
in
stos
lcall
sub
jle
jo
mov
xor
mov
push
adc
sti
dec
push
pop
imul
push
sub
adc
cmp
ss
ds
fdivs
xchg
in
xor
ja
aam
jl
bound
jbe
push
push
cld
jo
stos
movb
jle
sub
in
xchg
loop
push
add
jo
pop
lret
and
push
ds
adc
fs
cmp
shrb
push
or
dec
dec
adcb
sbb
mov
je
out
pop
xor
hlt
jo
sbb
sub
cmp
jo
leave
adc
mov
outsb
jo
ret
mov
cltd
sarb
std
ljmp
cwtl
sbbb
jo
cmp
mov
mov
push
jo
fstps
std
jo
push
shl
sbbl
jo
mov
sub
jo
jge
cmc
fwait
push
jns
xchg
add
test
lods
mov
jp
jo
les
xchg
jg
sbb
jns
jo
shlb
mov
arpl
jmp
sbb
stos
call
xor
jo
test
jne
jo
jnp
aam
stc
xchg
mov
inc
jecxz
cmc
test
icebp
std
inc
repz
outsl
or
popa
loop
lds
jo
dec
shr
add
mov
jo
xchg
mov
dec
mov
jo
pop
inc
nop
ret
push
inc
mov
hlt
fwait
sbb
repnz
cmc
pop
mov
pusha
sbb
or
pop
push
lea
bound
jp
push
test
leave
roll
adc
jo
mov
repz
adc
jo
mov
inc
inc
lds
cmpsl
fpatan
stos
jmp
dec
push
pop
loopne
in
sub
in
es
push
jo
loope
mov
jo
add
fyl2xp1
jl
jo
or
push
adc
out
jo
lods
cmp
idiv
std
xor
lea
fs
rolb
lock
sub
out
push
addr16
ss
push
int3
sbb
xor
leave
ljmp
push
xchg
push
cli
jo
ds
enter
cmpsl
xor
insb
hlt
into
nop
pushf
jmp
jno
jne
lds
shlb
loop
mov
ret
dec
xor
inc
aas
lds
pop
jo
test
std
jl
xlat
imul
mov
add
mov
sarw
sbb
repnz
outsb
shrl
jo
push
xchg
loope
jo
push
gs
leave
lret
jo
xor
nop
mov
or
push
lds
les
mov
jg
in
shl
xor
aaa
wbinvd
inc
or
jo
std
shlb
jo
push
pushf
jle
jp
push
xchg
mov
jb
jmp
jp
fstl
jns
int
mov
bound
jmp
orl
sub
pop
leavew
pop
les
mov
or
mov
pop
jo
aad
fstp
rorb
lea
push
lcall
push
aaa
scas
jl
aas
repz
inc
jo
mov
mov
push
push
aad
ficompl
adc
jo
xor
shr
scas
jo
fxch
int
jne
dec
push
inc
cmc
sub
dec
and
xchg
jecxz
mov
pop
jo
pop
orb
dec
jo
inc
lods
jle
imul
lea
test
test
je
mov
ret
dec
mov
clc
jo
cli
aam
daa
ret
push
aas
jo
pop
sbb
shll
jbe
sbb
xchg
ret
jg
jae
gs
mov
inc
xchg
addl
lahf
addr16
int
ss
mov
decl
leave
fcoml
repz
add
pusha
fnstcw
pop
ds
in
cmp
xchg
jge
adc
cmp
iret
add
mov
inc
mov
jns
jo
jnp
in
sarl
jo
sbb
pop
outsb
mov
jo
push
popa
inc
ds
gs
cmp
pop
out
sub
jg
loopne
leave
or
mov
push
es
enter
clc
inc
nop
loope
out
rolb
jo
fsubrl
jo
push
nop
sub
lret
jo
xchg
xchg
ret
sbbl
inc
jo
int
outsl
lcall
fwait
popa
or
pop
cltd
sbb
push
jmp
mov
mov
pop
jo
adc
pop
cmp
cs
jo
aam
das
or
adc
in
in
mov
xor
ja
sub
cmpsl
jno
xchg
xchg
dec
lea
xor
repz
out
push
orl
stos
jb
sub
push
and
adc
insl
je
mov
fbstp
shll
jo
pop
jmp
in
jne
ret
mov
lds
sub
push
dec
jbe
add
mov
movsl
jns
stc
add
jo
mov
cmp
dec
inc
mov
jns
jo
xor
clc
lret
es
mov
xchg
leave
sbb
jo
fdivs
jo
test
fs
mov
pop
mov
jb
and
icebp
lahf
mov
jo
push
xor
mov
pop
sbb
js
lahf
aam
or
int
fs
or
jno
addb
jo
or
and
inc
bound
lea
and
fs
or
add
mov
sbb
int
int3
je
fisubs
inc
jb
lcall
loopne
in
inc
jo
into
cmp
fsub
xlat
sub
mov
lea
sub
pop
outsl
add
mov
mov
push
js
leave
jbe
inc
xchg
push
jo
int
rcrl
xchg
ret
adc
js
stos
sbb
jecxz
adc
pusha
jo
jno
lret
leave
mov
sub
cli
mov
bound
lds
cmp
in
xor
stos
roll
mov
lcall
jo
pop
bound
out
jo
ljmp
jo
icebp
ja
or
xlat
in
adc
mov
pop
push
outsb
mov
push
sub
jmp
cmpsl
or
adc
jo
push
leave
cmpsb
push
mov
movsb
popa
sahf
ss
push
adc
lds
inc
popa
push
jo
pop
popf
sbb
cltd
add
push
xor
cs
ljmp
cmp
ja
lods
inc
emms
xor
mov
jle
fsubrl
cld
push
mov
and
test
inc
bts
loopne
jns
sbb
xor
jae
sbb
jge
sahf
xchg
fs
and
popl
repnz
out
jo
cmp
adc
fs
xchg
pop
inc
pavgw
shll
mov
gs
lods
icebp
pop
and
jo
clc
data16
into
decl
sub
fdivrs
or
adcb
jo
mov
push
pop
aaa
popl
packsswb
lds
js
adc
sub
mov
and
imul
mov
orb
adc
insl
jo
insl
leave
mov
or
js
outsb
pop
gs
repnz
enter
add
sbb
icebp
leave
lock
arpl
inc
mov
sbb
stc
push
sub
inc
inc
or
les
mov
gs
fstp
mov
in
scas
test
jo
in
test
cmp
xchg
mov
sub
lds
dec
lcall
add
xchg
ds
mov
clc
push
cmp
pop
ljmp
sbb
dec
push
fsts
andb
shll
fs
cmp
into
sbb
aam
jo
loop,pn
push
test
jo
push
addl
das
out
ret
mov
lods
sti
push
cli
lcall
shll
out
jo
xchg
js
adc
pop
mov
ror
sub
andb
cli
jo
mov
mov
bound
nop
into
dec
pop
jge
add
sbb
aam
fcomi
shrl
sbb
jo
pop
xor
mov
push
cmp
pop
les
inc
nop
ret
rolb
jmp
cmp
lea
iret
cs
inc
and
popf
outsb
lods
nop
aam
data16
adc
or
and
xor
pop
gs
push
push
jo
inc
imul
jo
mov
mov
data16
inc
push
out
movsb
jo
leave
xor
or
adc
or
je
stc
mov
sbb
ret
lds
data16
fld
or
xchg
mov
sub
rcrl
cmc
mov
faddl
jno
gs
mov
jo
lcall
jns
push
lods
inc
popa
and
mov
lret
push
das
cmp
js
data16
mov
jo
fs
push
sub
mov
adcb
shll
pushf
in
loopne
jo
rcl
rcrl
pop
or
popf
frstor
into
or
lds
fchs
rcrl
jge,pn
jo
pop
push
outsl
inc
adc
jge
mov
lahf
cmp
mov
js
push
pop
jo
cwtl
adc
mov
xor
jp
lds
mov
je
in
dec
sbb
push
gs
xor
xchg
jo
cmovae
mov
rol
imull
loop
test
xor
lds
popa
mov
jo
sbb
inc
xchg
jo
and
ljmp
jmp
in
int
ret
pop
daa
jo
mov
and
or
or
scas
mov
ret
or
sbb
mov
add
inc
jo
sbb
aas
adc
cmp
movl
out
loopne
out
or
std
cmp
fs
shlb
pushf
jae
xor
inc
jo
flds
add
jo
mov
imul
jl
out
jno
out
jo
and
nop
test
les
out
test
mov
dec
mov
fcomi
adc
cmpsl
push
bound
out
cmp
fildl
out
out
ret
dec
xor
sub
arpl
enter
sbb
ljmp
imul
data16
jo
rol
mov
sbb
jo
insl
inc
mov
add
test
in
add
cmp
sahf
test
in
add
sbb
jo
jb
pop
lret
inc
jle
jo
lds
rcrb
add
push
leave
fdivrs
jns
jle
xchg
cmp
cs
scas
pop
test
aad
push
jo
xchg
pop
mov
jo
cltd
xor
hlt
mov
fcoml
and
js
loopne
xchg
pusha
addb
jo
pushf
outsb
inc
and
inc
mov
pop
and
jo
outsl
pop
jmp
or
cmp
add
jo
cmp
loope
out
mov
lret
repz
leave
arpl
hlt
jge
mov
or
in
fsts
pop
or
push
adc
and
fwait
data16
and
gs
pop
sbb
rcll
imul
xor
jo
cwtl
ret
jl
das
inc
stc
mov
dec
popf
incb
stos
mov
ss
test
mov
jne
adc
testl
sub
mov
arpl
and
sbb
sub
adc
rorl
int
pop
aaa
cmp
sbb
ret
lods
jo
dec
rorl
mov
cmp
aaa
push
sbb
ret
mov
pop
jo
mov
or
push
pop
addl
rclb
cld
or
xchg
push
push
pop
test
jo
scas
ljmp
push
pushf
inc
mov
jo
movsl
gs
flds
insb
inc
mov
push
pop
lret
fdivrl
jo
testl
ss
jl
rcl
hlt
movntq
xorb
sub
jg
movsb
push
lds
mov
fwait
jo
aas
js
adc
mov
jo
lds
pop
jmp
lods
movsl
sbb
iret
ja
add
call
lock
test
ljmp
orb
mov
fbstp
pop
nop
pop
or
dec
adcl
into
out
jo
ret
dec
fdivl
sahf
jo
sub
ret
mov
int
pop
int3
movsl
pop
and
jo
stc
or
call
pop
bound
jo
cmp
int
dec
clc
in
pop
ljmp
inc
push
adc
xorb
jbe
dec
xor
vpslld
push
jo,pt
mov
fcmovnb
jo
mov
xchg
in
cmovp
andl
lock
outsl
lds
cmp
rorl
pop
test
mov
outsb
lds
dec
mov
jo
aas
dec
das
sub
mov
mov
mov
mov
pop
xchg
cltd
dec
gs
cmp
dec
es
push
aam
stos
int
jo
ljmp
rclb
std
sbb
xor
mov
mov
test
push
bound
call
jno
or
add
pop
pop
lds
enter
movsb
packsswb
je
jl
jl
movsl
jo
add
and
mov
sbbb
lret
scas
pop
into
js
in
or
xorb
push
push
jmp
outsb
add
dec
mov
out
sar
notl
cmp
jo
jnp
push
mov
pop
jo
lds
pushf
fs
fidivl
out
xorb
inc
dec
loope
sub
jo
ret
sub
jl
push
sub
dec
push
andb
ret
jo
outsl
inc
adc
jo,pt
sti
movsb
mov
jo
ja
rcrb
cwtl
jecxz
das
repnz
mov
pop
jo
leave
cs
xchg
les
push
ja
dec
sarl
rolb
cmp
clc
or
add
rorl
push
out
pop
subb
jae
jo
sub
ret
push
rcrb
push
inc
fldcw
je
mov
pop
jo
mov
and
jo
cwtl
add
jo
or
push
jp
or
jo
lock
mov
bound
scas
xchg
aam
and
or
jo
pop
pop
lea
cmp
enter
sub
sbb
subb
imul
fsts
inc
orl
or
adc
cmp
jno
outsl
mov
jo
mov
jnp
cs
xor
je
inc
test
or
push
adc
xor
lahf
mov
mov
jo
pop
cmp
sbb
mov
clc
inc
mov
movsb
jle
data16
fwait
add
fstpt
test
xchg
inc
cmp
insb
repz
jmp
pushf
stc
popf
jmp
shlb
ljmp
fnsave
int3
pop
mov
jb
mov
jae
dec
imul
out
add
shlb
jnp
lock
sbb
aad
mov
ret
cmpsb
pop
jo
fldl
jo
iret
cmp
jecxz
mov
lds
xchg
pmaxub
scas
jo
fmull
mov
cltd
enter
sbb
xor
aam
push
lea
nop
shlb
xchg
jns
xchg
cli
lock
js
lods
fiadds
mov
or
jae
nop
cmp
jno
pop
mov
mov
dec
jl
std
fadds
test
loope
dec
jo
icebp
mov
adcl
xchg
jle
iret
sbb
jle
jo
mov
pop
cli
lahf
push
xchg
mov
push
xor
fldl
or
xchg
int3
icebp
in
push
xchg
push
sub
inc
aaa
jo
data16
enter
repnz
xor
rcrl
fs
push
push
je
mov
jo
sub
imul
insb
les
std
xor
in
mov
f2xm1
sahf
enter
jnp
jo
xchg
decb
xchg
push
jo
frstor
std
jp
jo
test
popf
fisubrs
mov
es
in
jl
mov
cmp
stc
push
push
xlat
iret
repnz
jg
xor
jbe
add
mov
outsl
jo
jecxz
mov
sbb
ret
pop
es
arpl
lds
jo
int3
mov
leave
jo
cltd
dec
out
xchg
bound
lcall
popa
jp
cltd
jo
dec
das
ljmp
push
jo
popf
aad
pop
test
push
adc
push
rolb
mov
add
cmp
inc
fcomip
jmp
jnp
jge
sbbb
ret
mov
sbb
cwtl
push
push
psubsb
aad
hlt
fimull
ja
xchg
cmpsb
push
jb
jo
mov
stc
sub
jecxz
lds
pushf
sub
subb
rcrl
inc
call
jmp
xor
out
add
out
hlt
dec
inc
nop
leave
movntps
ja
dec
push
push
dec
mov
cld
cmp
pop
pop
je
and
dec
leave
in
shll
push
es
add
or
hlt
jo
sub
mov
jle
jo
xor
lds
cmpsl
mov
xor
jo
mull
into
jo
ss
xchg
add
cwtl
jo
and
mov
or
and
inc
test
sarb
aas
push
es
mov
ss
lods
jo
div
das
and
fs
and
and
vpcmpeqd
xor
in
stos
sub
jo
movsl
loop
fstp
lock
addb
inc
insl
or
push
mov
and
mov
jo
lea
push
cltd
inc
movsb
leave
jg
jo
cmpsl
dec
testw
mov
xor
jmp
xor
daa
ret
jle
jo
adc
jns
pop
jle
fld
int
outsl
sbb
xchg
shl
arpl
leave
das
mov
dec
jnp
jo
les
inc
sbb
push
jno
bnd
jg
push
lds
or
xor
mov
jo
add
sub
mov
clc
repz
push
pmuludq
cmp
xchg
jl
xchg
aas
push
orb
mov
mov
jo
jns,pn
scas
fwait
and
jo
shll
mov
cmp
and
popf
sarl
mov
arpl
jo
into
cli
mov
xor
lea
push
pushf
int3
out
dec
jo
int
sbbb
ret
inc
jo
or
jg
mov
test
jo
cwtl
pop
test
das
out
pop
jo
jge
shl
lea
xor
pop
push
lcall
das
add
mov
and
lret
or
push
jge
sarl
lcall
push
inc
jmp
cli
leave
xorl
lods
jo
sahf
scas
add
and
or
xor
jp
scas
sbb
mov
push
mov
push
aaa
adc
xlat
add
cmp
xchg
dec
adc
test
xchg
dec
xchg
xor
sbbb
fwait
jb
or
js
cs
stc
ds
push
scas
imul
hlt
sbb
nop
inc
push
ja
bound
rclb
push
mov
xor
aam
iret
jo
mov
sbb
jo
mov
repz
es
test
adc
loope
in
xchg
cmp
mov
inc
enter
and
xchg
lods
xchg
sub
cmp
popa
sub
aas
or
dec
jge
push
je
xchg
dec
cmpsl
fnstcw
sub
mov
imull
subb
repz
cmpsb
push
push
mov
cmp
sbb
cld
push
and
jp
xlat
pushf
inc
sub
les
test
fcompl
pusha
cmp
xor
xorb
jl
mov
jo
daa
sub
xchg
dec
pop
loop
sahf
fs
xchg
jo
insl
fcmovb
mov
adc
jo
mov
xor
mov
cmp
js
or
lods
in
mov
cmp
push
pop
js
fadds
in
inc
jo
lock
pop
popa
dec
jo
jl
inc
jb
or
push
les
shll
push
xchg
leave
dec
movsb
int
nop
jp
adc
and
jecxz
add
mov
decl
mov
daa
dec
cmp
mov
jo
jae
jecxz
std
xchg
mov
je
mov
sbb
jmp
loope
sbb
mov
jo
test
jecxz
xchg
inc
sbb
jo
dec
stos
pop
add
adc
outsl
mov
aas
cmpb
dec
cmp
inc
call
mov
sahf
mov
stos
jle
popf
or
push
push
leave
inc
jo
dec
and
or
xor
xor
into
sub
push
inc
aad
ret
pop
fs
or
mov
jg
jo
ror
fldcw
ficompl
sub
sbbb
ljmp
scas
dec
mov
ret
or
cmp
ret
mov
jl
les
mov
or
sub
mov
js
rcrb
push
scas
inc
sub
jle
and
jecxz
jo
lods
xor
fisubrl
fbstp
and
ret
lock
push
aas
aad
dec
xor
hlt
add
jo
jns
lret
mov
test
ret
popl
xchg
inc
jo
sti
push
shll
inc
xor
xchg
les
and
sbbb
rorb
pop
mov
lret
or
jo
insl
sbb
cmp
xchg
dec
jo
aad
pop
outsl
push
pushf
cmc
push
fnsave
push
out
lret
add
sti
test
xor
xor
pop
jne
and
or
cmpsl
lds
inc
mov
or
int
pop
jo
sub
addl
shrl
lds
push
xor
sub
push
mov
jo
leave
jo
or
pcmpgtb
xchg
leave
xchg
cmp
jl
push
ss
mov
pop
cwtl
hlt
loope
jo
push
xchg
popa
fists
inc
pushw
jo
add
xchg
cmp
cmpsb
xchg
or
push
jo
mov
jns
push
imul
nop
sbb
lahf
ja
scas
je
test
out
mov
rorb
loopne
push
icebp
push
jae
inc
nop
fs
mulb
aad
jo
test
stos
dec
popf
xchg
mov
dec
test
mov
stc
jo
stos
mov
xchg
into
mov
jo
jb
adc
adc
add
jo
jae
push
es
jns
leave
loopne
insb
inc
mov
inc
cltd
mov
jo
xor
or
lds
shll
jb
push
sbb
roll
push
xor
cmp
hlt
push
xor
nop
mov
sbb
xchg
outsb
add
xchg
lahf
mov
or
out
jo
pusha
fs
orl
jmp
cwtl
aam
jo
jl
ljmp
pop
mov
fs
jne
in
call
mov
lea
inc
adc
sub
fildl
cwtl
dec
cmpsb
stos
pop
jns
push
fiadds
push
lahf
outsl
imul
jmp
mov
sub
push
xor
pop
xchg
daa
jo
outsl
jae
popfw
loop
jo
int
cmp
stos
ret
fdivrp
lds
jo
insb
cmp
add
std
jo
pop
int3
pop
inc
xchg
pushf
mov
cwtl
push
out
test
pop
into
jae
inc
cmp
shl
mov
es
cmpsb
push
sub
cmc
inc
jmp
es
jo
inc
ljmp
push
je
and
mov
fiaddl
pop
cmp
jo
mov
bnd
adc
int
lock
fwait
out
ror
jbe
mov
aaa
sub
push
fldl
push
shlb
adc
push
lcall
push
jo
dec
add
roll
jo
scas
sub
hlt
lock
es
in
fwait
js
push
daa
xchg
pop
scas
mov
mov
xchg
add
cli
mov
inc
cld
sti
cltd
rcrl
imul
jmp
leave
sub
jo
stc
fdivrl
mov
inc
sbb
sub
sub
mov
push
jae
mov
divb
jo
ret
mov
call
int
mov
dec
out
xchg
dec
js
add
jo
xchg
and
lock
or
js
dec
inc
mov
jge
push
xchg
cmp
rorl
sub
jbe
mov
adc
shlb
popa
out
pcmpgtb
in
jle
push
cmp
dec
lahf
movsl
jbe
pushf
mov
cmp
xchg
arpl
rcll
outsb
dec
pop
addb
stc
insb
pextrw
adc
cmpsl
popa
pop
lods
sahf
inc
push
sub
mov
psllw
mov
cld
scas
jb
mov
hlt
icebp
mov
stos
loop
aad
mov
insl
pop
push
rcll
xor
dec
jle
sbb
sbb
mov
xchg
into
cld
arpl
loope
jo
push
sub
cli
es
mov
js
iret
bound
fisttpl
js
in
int3
lahf
jl
pushf
aas
push
cld
lds
inc
cmp
mov
cmpsb
pushf
dec
popf
mulb
shlb
into
sbb
stos
ss
out
pop
jle
xchg
sti
leave
sbb
cmp
mov
bound
cmp
icebp
nop
xor
inc
mov
or
fidivl
in
aas
mov
push
lock
mov
ret
dec
stos
jo
sub
or
or
sub
fwait
out
andb
dec
dec
sarl
jo
sub
pop
or
xlat
pextrw
cmp
aam
jo
ja
movsl
scas
push
or
sbb
subb
icebp
dec
lods
jmp
push
popa
rclb
es
rcr
cmp
ret
dec
jle
dec
mov
incb
ss
pushl
rorl
inc
jbe
xchg
sub
jo
sbb
mov
push
repnz
jecxz
inc
data16
mov
jge
cs
jo
das
sbb
add
cmp
add
push
data16
jo
and
ficoml
cmc
jmp
lret
bound
jo,pn
inc
jl
iret
xor
jo
imul
cwtl
pop
mov
cmpl
lds
pop
jo
xchg
sub
icebp
mov
ret
inc
mov
test
push
imul
fldl
jo
mov
leave
mov
sub
sub
loope
or
leave
dec
cmp
xor
add
pop
or
cmpb
add
or
mov
jno
cmpb
adc
jle
push
std
loopne
cmpsl
or
loop
push
mov
push
out
decl
pop
outsl
cmp
pop
mov
cmp
add
dec
fbstp
jp
mov
jo
bound
insl
popf
test
mov
neg
cmp
cwtl
lret
mov
cmp
jb
rorl
cltd
inc
add
into
and
jo
ror
testb
in
add
out
jo
mov
pop
mov
movsb
rol
push
filds
xorl
push
and
xor
inc
sub
add
xor
jo
adc
rcrl
jo
call
bnd
lcall
jnp
inc
jo
push
cltd
mov
mov
cwtl
dec
jb
sbb
je
lock
xor
cmp
jo
sahf
fnstcw
sub
mov
popa
cwtl
push
insb
mov
int3
pop
mov
imull
nop
mov
ret
inc
pushf
jo
cmp
adc
pop
test
loop
icebp
sbb
and
andl
and
fisttpll
imul
mov
push
sub
fs
and
dec
loopne
xorl
cmpl
cmp
push
popa
scas
jo
xlat
popf
in
ret
rcll
jnp
add
sbb
cmp
push
fnstsw
jbe
repnz
test
nop
add
mov
ja
jge
in
sti
js
das
cmpl
jmp
ds
movsb
jo
repz
int
push
jg
data16
push
jnp
jo
add
xor
insb
inc
mov
sbb
out
jmp
jo
aam
and
dec
jge
jo
ret
fisubl
xchg
loopne
shll
rorl
fiaddl
mov
adc
gs
jb
sbb
push
lea
add
jno
dec
jecxz
sub
dec
jg
loope
jle
jnp
out
push
mov
enter
adc
jo
std
scas
pushf
dec
aad
fdivs
xchg
or
loop
adc
mov
and
dec
jo
push
les
push
jo
leave
sbb
loope
mov
rorb
jo
lahf
xchg
int
fisttpl
cmpb
or
data16
bound
push
jo
lods
push
pop
rorb
adc
sbb
fists
inc
and
jo
inc
mov
popf
jge
mov
mov
pop
jo
lea
push
out
or
sbb
sub
xor
push
shr
jle
push
dec
mov
push
push
or
stc
sbb
fisubrl
lahf
leave
popf
jo
pop
jae
mov
int
jnp
cmpl
inc
xor
jo
lds
adc
data16
jp
popf
push
adcl
lea
mov
jo
ss
push
or
mov
cmp
outsb
out
loope
adc
xor
or
ss
fimuls
push
add
mov
je
jo
xor
or
jecxz
mov
mov
pop
dec
inc
jno
mov
mov
adcb
daa
stos
lock
insb
movb
jmp
call
cmc
or
ds
add
jp
fbstp
shlb
or
xor
aas
lahf
in
mov
add
aaa
jo
push
test
inc
xchg
ds
insl
lret
pushl
jle
sub
or
sahf
in
nop
lock
xor
leave
or
rclb
ret
adc
sub
iret
jo
sbb
mov
jo
inc
rcr
pop
xchg
leave
jo
mov
test
scas
jo
mov
fwait
or
or
dec
fdivp
scas
jo,pn
imul
jo
mov
lcall
stos
out
mov
inc
fs
in
mov
mov
jo
icebp
cld
pushf
ss
xchg
fldcw
fiadds
pop
cmc
push
dec
xor
jo
dec
std
into
movl
lods
and
cmp
loope
jo
mov
xlat
xchg
sbb
aaa
mov
leave
mov
enter
mov
fnsave
xor
bound
add
loope
lret
cmp
jo
mov
cwtl
popf
clc
inc
pop
jo
aad
mov
sti
fldenv
jo
push
push
vmovshdup
jo
lret
mov
mov
jl
jmp
adc
fadd
mov
shlb
punpckhdq
inc
rorb
dec
mov
inc
pop
lods
popa
mov
data16
dec
lahf
ds
pop
xor
xor
lds
push
nop
ret
push
or
mov
push
lock
imul
push
insb
mov
jo
gs
and
outsl
jo
fucomp
std
mov
add
jo
lret
xor
pop
xchg
inc
pop
lea
mov
scas
popa
fstps
jbe
cmp
jo
adc
std
aaa
roll
enter
or
pop
jae
sub
setne
cmp
jo
ljmp
andl
push
mov
addr16
xchg
andl
sbb
sti
mov
jmp
sub
cld
or
js
icebp
cmp
jo
jmp
mov
jo
iret
sarb
xlat
xorb
shll
mov
or
xchg
aad
push
and
pop
outsl
xchg
push
cltd
in
or
insl
lcall
cmpsb
pminsw
dec
push
pop
inc
cs
lods
inc
jns
movsl
add
je
push
popa
js
loopne
sbb
inc
fstpl
movsl
cmp
mov
xchg
xor
adc
aad
mov
xor
and
adcl
sub
or
push
leave
mov
sub
aad
push
fdivl
mov
into
sahf
inc
popa
mov
rcll
arpl
add
les
subb
mov
popa
inc
inc
add
jp
iret
push
movsb
or
aaa
idivb
hlt
fnsave
xor
mov
or
pop
or
xchg
push
repnz
xor
inc
lahf
mov
push
sub
mov
decl
nop
daa
cmp
push
js
ja
dec
adc
push
mov
nop
pop
jle
fidivl
push
adcl
push
add
cmp
ret
or
xchg
cs
push
std
add
jb
or
sub
sub
jo
aaa
out
int
dec
xorl
test
jo
jno
pop
add
push
sub
xchg
sbb
arpl
push
fistpll
xor
lret
gs
dec
ret
sub
std
inc
push
cmp
jo
push
pop
cwtl
stos
xor
push
lds
repz
add
mov
xchg
cmc
mov
scas
lcall
stos
lds
arpl
push
jbe
inc
xchg
aam
sbb
inc
add
out
loop
xchg
movsb
cmp
push
or
sub
nop
les
ret
divl
mov
jo
xor
add
shlb
mov
into
aaa
movsb
jg
mov
inc
jbe
cmpsb
push
imul
icebp
insb
nop
dec
std
enter
das
jl
stos
insb
inc
gs
jo
scas
sarl
mov
fs
cmp
jo
gs
sbb
ret
pop
sub
jl
in
mov
test
clc
hlt
push
or
imul
leave
fs
aad
fdivs
bound
loope
inc
or
xchg
sub
add
jo
lock
popa
add
jo
mov
sbb
jo
cwtl
mov
push
mov
jge
scas
jo
ljmp
and
shll
int
imul
push
sub
shrl
roll
lahf
push
jmp
jecxz
xor
fbld
inc
divb
repz
sub
adc
int
cmc
push
pop
jl
mov
into
test
xor
lods
adc
andb
pop
notb
int
imul
jno
xchg
lock
sub
mov
adc
test
sbb
das
jo
sub
hlt
sub
out
scas
push
xor
cmp
test
stos
xor
cmp
lods
das
cmp
test
cmpsb
xlat
adc
jl
sbb
sarb
popa
mov
cmpsb
insb
je
sbb
and
inc
mov
lods
enter
jle
jne
sbb
out
movsl
int
pop
std
inc
jo
insl
test
jo
adc
lock
add
loopne
clc
adc
out
pop
cmp
pop
imulb
jp
push
ret
std
fisubs
das
nop
out
adc
xchg
mov
sub
jo
rorb
call
pop
xorb
jg
ja
pop
add
aas
lea
iret
enter
in
ljmp
test
rcr
push
imul
jo
cmp
dec
lds
das
bound
hlt
push
testb
je
pop
xchg
or
sahf
mov
das
cmc
lock
xor
js
and
fnsave
jmp
and
fwait
inc
ret
jo
loopne
sub
xor
ret
cmpsl
pop
jmp
cmp
push
jo
jp
mov
xor
shrl
int3
jae
rolb
jge
pop
js
inc
dec
loopne
out
and
daa
leave
clc
std
jo
subb
add
les
ss
jo
fst
jp
roll
insb
mov
xchg
sub
int3
loope
or
or
push
mov
and
jo
cmp
into
outsl
or
adc
jo
and
lea
sub
sub
stos
push
add
lds
insb
pop
push
jno
popa
jns
jo
cmp
cmp
pop
xor
xchg
in
jmp
push
cmp
mov
mov
cmp
add
and
lock
inc
xchg
dec
xlat
jo
mov
fisttps
add
stos
xor
push
ret
push
sarb
xlat
push
sar
outsl
subl
pop
xor
ret
dec
cmp
push
bound
ds
jo
jbe
hlt
push
xchg
jo
in
fsubl
push
lret
roll
cs
cmp
js
jmp
jmp
repz
mov
xchg
outsl
test
pop
lea
jns
fsubrs
jmp
cmp
xor
lods
pop
inc
fcmovnb
sub
jo
clc
or
adcb
daa
dec
cmp
mov
cmc
test
js
imul
push
or
imul
jo
adc
loope
sti
sbb
inc
into
push
mov
insb
pop
fists
pop
dec
sub
in
hlt
jne
mov
jno
xlat
mov
shll
aas
sbb
leave
jne
jo
cmpsl
imul
test
mov
insl
mov
push
adc
xorl
mov
mov
jo
in
addb
lds
psubq
jle
scas
jo
rorb
xchg
insb
mov
sbb
inc
push
mov
sbb
jg
sub
cmovb
adc
nop
movsb
test
dec
pusha
mov
js
xchg
push
inc
xor
faddl
movsb
dec
push
leave
loope
lea
xorl
lds
xor
cmp
jmp
cld
add
push
jle
xchg
xchg
rcl
aad
bound
addb
xchg
rcrb
js
mov
or
mov
push
sbb
mov
rcrb
js
and
test
adcb
test
outsl
and
leave
jo
and
pop
adc
add
mov
sahf
inc
ret
jo
js
jb
movsb
les
lds
jecxz
pop
cmp
inc
lret
push
sti
inc
divl
ljmp
jl
cli
arpl
push
xchg
cmp
psrad
pusha
mov
push
jo
mov
aaa
int
ret
jo
inc
cmp
push
mov
ret
mov
fwait
inc
jnp
mov
or
push
add
call
push
mov
push
sarl
jo
das
ret
inc
daa
lds
cmp
xor
pop
adc
xor
jp
shr
sbb
loop
js
mov
xor
jo
or
push
pop
sbb
shrb
cmovl
leave
jo
fcompl
mov
jno
enter
mulb
iret
push
sub
cs
push
push
mov
js
add
sub
pushf
leave
inc
xor
jo
cmp
std
shrb
iret
jge
test
pusha
xchg
aas
mov
out
jo
mov
mov
cmpsb
jns
arpl
push
inc
jb
sub
jo
fs
dec
jo
out
xchg
sbb
int
jo
sub
es
mov
xchg
mov
aas
addr16
rcrb
jo
sbb
ljmp
xor
pushf
and
inc
and
dec
cmp
jo
xor
fprem1
js
pop
jo
cmp
jmp
adc
mov
mov
dec
jo
lret
sbb
lock
jo
or
cmp
jo
inc
lret
xchg
shrl
mov
cmpsl
jb
arpl
jo
jnp
popa
stos
dec
addb
jne
push
pop
daa
mov
jo
ret
std
sub
loope
dec
out
filds
sub
push
push
orb
aas
bound
outsl
adc
repz
mov
xchg
push
jmp
push
or
cmp
mov
ret
mov
sbb
leave
adc
repnz
push
jge
ja
mov
push
jo
jg
sbb
cld
mov
inc
out
lds
lods
jge
into
testl
out
dec
andl
leave
test
jo
fildl
lds
data16
and
and
loope
jmp
inc
mov
negl
push
lahf
mov
hlt
insb
test
jo
mov
test
ja
lods
jle
ficomps
push
jge
push
inc
dec
mov
push
popa
push
jns
push
fs
sub
pop
andb
sub
int3
mov
jle
ror
jo
addr16
mov
sub
hlt
or
jo
jecxz
sub
mov
add
jo
jno
test
scas
dec
aam
jo
xor
push
jmp
xchg
inc
fimuls
and
sbb
add
push
push
push
in
push
fimuls
push
stos
or
divb
lock
mov
out
mov
add
mov
push
jo
mov
pop
leave
iret
insl
cmp
jbe
ret
repnz
gs
add
rcll
js
mov
mov
jge
sbb
mov
xor
mull
mov
xor
imul
outsb
xchg
mov
stc
mov
ds
or
sub
jo
cmp
jmp
pop
jle
jge
popf
adc
outsl
popa
loopne
mov
cmc
insl
push
vpaddw
jo
sub
insb
inc
jo
loopne
inc
out
dec
lds
adc
lea
sbb
in
dec
adc
repz
xorl
aam
sbb
jo
and
loop
jp
shlb
jo
inc
cmp
jl
xchg
inc
cmp
dec
mov
leave
ljmp
jo
jae
loope
js
ret
jb
or
pop
push
out
mov
xor
mov
lock
pop
jo
ss
adc
jns
push
sarb
andl
jo
aad
cmc
daa
mov
cmpl
adc
mov
inc
sti
mov
or
shll
sbb
pop
imul
mov
ret
vmwrite
fs
andb
pushf
jo
lea
xor
jo
cwtl
fbld
cmp
mov
jns
jo
icebp
mov
ret
or
aaa
fiaddl
add
push
jne
imul
enter
sub
fists
outsb
test
dec
jae
or
dec
jo
iret
ss
jle
xadd
mov
sahf
adc
nop
adc
repnz
pop
jne
jg
blcfill
jo
adc
mov
jo
xchg
mov
push
mov
fldl
inc
ss
cld
mov
js
popa
mov
xor
shll
add
xchg
jbe
jne
xor
cmp
outsb
jmp
jb
inc
subl
xchg
jle
je
dec
stos
xchg
xchg
mov
mov
fidivrs
inc
or
shrb
les
dec
xchg
nop
dec
xor
scas
inc
push
ja
jae
das
out
dec
out
jecxz,pt
je
push
or
sbb
inc
idiv
jo
int3
insl
and
stos
cs
add
lahf
push
pop
adc
aam
arpl
cmpsb
popf
jge
fildl
outsl
xorb
mov
negb
push
fwait
jp
or
push
inc
mov
xor
mov
iret
add
sub
cmp
jno
xchg
ret
xor
sahf
jnp
ss
cmpsb
jo
and
int
sbb
push
sub
jo
mov
repnz
mov
mov
mov
aad
ljmp
jo
in
cmp
jo
cwtl
sub
push
mov
bound
shlb
nop
sahf
dec
add
mov
xor
adc
cs
jo
in
pmaxub
insl
jo
and
sti
ret
or
and
stos
mov
xchg
les
pop
gs
daa
int
scas
movsb
pop
jp
cltd
icebp
inc
rclb
in
decl
repz
sahf
ret
cmpsb
sbb
les
js
lcall
lds
jp
jge
mov
jo
sahf
inc
dec
pop
push
sub
jo
mov
sbb
mov
lods
and
cmc
shll
test
leave
and
rclb
dec
inc
daa
ds
push
pop
jo
fwait
jb
xchg
xor
cmpsl
insb
je
roll
jo
adc
ds
mov
sub
pop
mov
cmp
out
cmp
in
test
js
mov
push
aaa
nopl
insb
daa
mov
aam
pop
push
xor
xor
ret
push
stos
adc
bound
notl
sub
adc
cmp
jo
das
xchg
cmp
xchg
dec
insl
mov
cmpsl
stos
inc
in
arpl
xchg
jo
scas
je
loop
leave
push
jo
or
mov
movsb
xchg
mov
test
sbb
imul
repnz
jo
in
mov
jns
jo
add
and
jnp
leave
mov
xchg
popa
scas
mov
cmp
xchg
sub
push
mov
lods
mov
jne
cs
mov
mov
add
push
jo
outsl
mov
mov
out
jo
sub
fldenv
xchg
sub
mov
js
pop
push
sbb
adc
or
push
in
push
xchg
jmp
jne
les
pusha
mov
xchg
lcall
lret
cltd
mov
push
rorl
mulb
js
mov
frstor
push
cmpxchg
xor
add
pop
xor
xlat
cmp
call
hlt
xchg
cwtl
call
xor
mov
cmp
pop
sti
mov
jge
out
loope
movsb
ret
pop
cs
aaa
dec
sub
xchg
xchg
or
lret
mov
jne
fists
mov
or
insb
cmp
repnz
mov
add
push
mov
jp
shll
jmp
test
mov
jl
outsl
int
or
lea
sbb
or
or
lret
or
mov
and
fisubrs
push
iret
adc
mov
jo
cmp
or
loope
jo
loopne
aad
xchg
cmp
dec
jo
inc
addr16
cmp
nop
int
adc
fwait
push
mov
lret
jo
lods
sbb
fs
in
lahf
push
cmpb
adc
jo
and
jo
sarl
aad
add
dec
jo
insl
shll
cmpsl
jo
sbb
pop
mov
ret
xorl
data16
enter
xchg
jge
jo
scas
mov
dec
jo
mov
push
inc
jo
pushf
int
mov
imul
push
jo
xor
or
inc
sbb
xchg
pop
mov
xchg
adc
dec
push
loop
mov
nop
mov
jo
insl
push
leave
imull
stos
mov
js
adc
fs
or
jo
xor
mov
out
mov
adc
inc
xchg
cmp
jo
test
push
or
xor
jo
cmpsl
adc
rcrl
test
cmp
ret
inc
in
sub
push
dec
push
jo
test
jle
pop
arpl
paddd
xor
lods
jl
into
adc
sub
jl
subb
sahf
stos
jo
sbb
mov
jo
dec
ficoms
jo
out
int
or
loope
jl
insl
pop
test
add
bound
inc
outsb
es
aaa
mov
sub
fmuls
ss
or
add
aas
jo
mov
cmc
add
mov
jo
push
adc
std
test
cs
push
sub
xchg
cmp
xor
or
mov
mov
push
rcr
mov
test
pop
jo
sbb
push
jns
mov
les
sub
popa
add
pop
jo
mov
flds
leave
sub
push
push
push
mov
inc
jnp
shll
leave
add
aaa
inc
cmp
sub
push
roll
inc
jo
mulb
jo
sbb
int
in
push
shlb
icebp
add
idivl
or
pushf
data16
arpl
sub
inc
test
push
movsl
bound
push
push
lds
push
andb
fistpll
icebp
jo
repz
imul
cs
mov
add
mov
dec
mov
sahf
bound
fs
push
sub
call
or
decb
aam
mov
or
shld
les
cmc
jle
addr16
push
fstps
xor
stc
xlat
sub
mov
test
push
sub
cwtl
stos
cmp
xorl
xor
jo
rcrb
pop
and
leave
cmp
add
push
cmpb
ror
jo
les
jb
popf
xchg
mov
popa
jo
xchg
pop
mov
movsl
mov
bound
ljmp
jo
jle
nop
stc
add
xchg
jo
adc
pop
or
xor
xchg
adcb
dec
daa
jmp
mov
aad
and
int
sbb
sbb
xorl
cs
add
mov
fdivl
xor
out
jo
fldl
adc
in
jo
jp
inc
pop
mov
jo
pusha
mov
cmp
sbb
sub
pop
and
push
lds
xor
shrl
mov
pop
nop
sbb
cmp
bound
and
and
sub
fidivl
out
jns
adcl
jo
jne
sahf
push
inc
or
cwtl
int
sub
rcrb
pop
inc
mov
mov
xor
push
jge
and
pop
jle
out
addr16
adc
js
mov
pusha
ret
pushf
lds
mov
lret
cli
push
movb
insb
jecxz
cld
sub
mov
and
mov
push
mov
sub
xorb
daa
mov
cmp
jo
icebp
lods
pusha
mov
mov
jmp
add
je
and
xchg
std
fdiv
push
insl
inc
push
xor
cli
sub
push
fwait
mov
sbbb
mov
dec
inc
pop
fs
cmp
sub
jp
jo
mov
add
adc
mov
inc
push
jne
jb
testl
std
cmp
pop
inc
rorb
int
insb
jo
or
dec
pop
mov
cmp
mov
add
out
inc
mov
mov
test
imul
mov
mov
jo
push
ja
push
cmp
adc
sti
jo
int
in
leave
shll
xor
inc
fwait
mov
lahf
fs
or
movsb
out
fnstenv
or
adc
rorl
and
das
jo
or
add
in
inc
push
push
nop
push
in
jb
js
xchg
mov
movsb
sub
cwtl
adc
ret
subl
in
sub
or
or
pop
cmp
int
ja
mov
adc
ret
enter
xchg
sbb
dec
and
lret
mov
std
hlt
jo
fnstsw
or
lds
iret
sahf
in
add
ret
mov
test
adc
and
call
mov
pop
test
sub
mov
arpl
sub
mov
in
pop
ja
and
xchg
jo
push
fidivl
inc
lcall
or
adc
test
inc
mov
vpshufhw
mov
mov
pushf
shrb
mov
pusha
cmp
arpl
jo
xor
fwait
inc
nop
adc
loope
cmp
add
movsl
jo
mov
pop
push
cltd
ret
scas
out
add
movsb
xchg
arpl
std
jo
clc
jp
ret
rcr
fbstp
jo
test
divb
sub
jo
push
mov
add
push
test
fnstsw
sub
bound
fwait
lock
lds
jo
lret
mov
inc
jo
and
stos
inc
in
xchg
adc
cmp
mov
shrl
jge
jo
add
movb
jg
test
cli
pop
mov
lret
jo
imul
inc
jo
imul
inc
int
jge
add
sub
adc
pop
sub
sbb
jo
pop
and
mov
neg
push
adc
push
aaa
stos
popa
dec
data16
lret
shll
loope
pop
mov
ret
push
lds
test
neg
jo
notl
xlat
iret
lock
jo
mov
jge
jo
mov
shrb
daa
cs
add
mov
push
push
pop
jle
jb
popl
scas
xchg
lds
pop
out
inc
push
xchg
cmp
and
sbb
jo
xor
leave
pusha
popf
inc
or
fidivs
mov
lods
sbb
fistps
sub
imul
mov
sub
adc
mov
ret
dec
out
jno
lock
xchg
sahf
push
jle
or
mov
popa
icebp
cmp
jo
inc
adc
pop
mov
jo
add
push
or
leave
push
out
ds
and
inc
xchg
ficoms
jo
jecxz
aam
lock
inc
or
mov
jo
loope
mov
jmp
aam
add
mov
stc
pop
xchg
sub
clc
incl
scas
mov
and
leave
push
cltd
enter
xor
daa
adc
dec
mov
sahf
je
adc
sbb
fcmovb
pop
nopl
xchg
scas
push
cs
mov
push
jo
xor
iret
sbbb
inc
mov
jle
jo
xchg
test
sub
cli
push
xchg
jge
bswap
rcrl
inc
inc
pushf
nop
sbb
pop
decl
std
inc
clc
jo
mov
ret
xchg
insl
push
and
push
lods
jo
dec
in
push
xlat
bnd
sarl
or
std
data16
int
call
cmp
loop
stos
mov
xorb
sub
std
lcall
imul
jo
adc
popf
and
out
lods
imull
inc
in
jo
loope
lret
xchg
jo
inc
push
fidivs
lcall
cs
pop
test
mov
mov
inc
ljmp
shr
or
pavgw
fs
fstl
mov
and
ret
imul
dec
adc
mov
sub
xchg
push
in
jo
cmpl
xchg
std
cs
jo
push
es
fcmovb
imul
xchg
ja
jne
xor
gs
mov
in
mov
jo
cmp
aaa
popa
stos
mov
and
sbb
mulb
aam
mov
pmuludq
lock
jge
arpl
push
mov
popa
mov
fs
push
pop
dec
inc
inc
out
push
bound
or
mov
xchg
loopew
xlat
inc
aas
inc
xor
lods
jle
adc
pop
mov
adc
test
rcrb
cmpb
sub
outsb
xorb
sub
scas
cli
and
iret
mov
enter
in
xor
mov
jns
mov
out
js
sbb
jae
xor
out
lds
lock
fadds
sub
mov
or
test
imul
test
push
imul
mov
mov
adc
push
lock
jne
mov
mov
adc
xlat
jmp
nop
mov
jo
mov
inc
adc
arpl
push
out
das
icebp
sarb
adc
xchg
push
cld
in
stos
xor
mov
sub
jo
sub
bound
ret
fdivrp
add
jo
fldcw
jmp
insb
aam
stos
push
adc
pop
lahf
dec
lods
lret
leave
jo
xor
mov
adcb
movsb
jo
lahf
ret
les
xchg
push
mov
jns
jo
mov
adc
shll
jo
or
sub
xchg
jl
icebp
cmc
mov
push
aad
ljmp
movsb
repnz
xor
push
push
push
mov
hlt
mov
imul
int3
enter
jo
ret
fs
jns
jle
mov
and
cmp
and
push
cmp
jo
leave
test
lahf
add
sbb
lods
aam
jo
and
rep
push
jae
cmp
lds
repnz
sub
sbb
push
imul
dec
mov
jne
jge
lods
jo
xchg
pop
cmpsb
add
sub
lds
movsb
fs
mov
in
movsl
popa
popf
scas
or
repnz
in
xchg
push
pop
fldcw
mov
out
lcall
dec
mov
lea
hlt
scas
push
nop
stos
mov
ja
movsl
jo
mov
sbb
daa
mov
shr
xor
inc
pop
jecxz
cmpsl
test
scas
movb
adc
mov
inc
std
mov
jo
out
and
scas
jo
cmpl
ja
push
xchg
add
aas
jo
inc
call
repz
xchg
rolb
pop
dec
mov
test
xchg
cld
jo
movl
popf
jno
pushl
je
lds
aad
fimull
leave
std
js
jb
adc
and
jle
mov
add
cmpsb
dec
lods
in
inc
inc
sub
sub
push
jo
push
sub
and
xor
xor
fwait
mov
inc
int3
leave
push
movsl
rcrl
negl
js
icebp
bswap
js
dec
mov
jnp
dec
mov
cmp
pop
sbbb
lods
mov
ret
pop
flds
jo
xlat
loope
aas
fistpll
cmp
shll
dec
insb
sbb
mull
adcb
mov
jns
data16
mov
lds
fld
lret
arpl
ret
icebp
push
aaa
jo
xorb
es
jp
xchg
push
arpl
pop
hlt
cwtl
or
fsubs
jo
lock
jge
mov
pop
mov
fbstp
xchg
in
lds
lods
into
push
xchg
cs
insb
pop
es
cmp
je
pop
pop
stc
rcll
repnz
scas
aaa
inc
push
push
adcb
out
inc
in
sbb
add
adc
sbb
sahf
jo
enter
fcmovnbe
jo
lods
faddl
inc
and
mov
rorl
out
cmp
mov
leave
imul
ja
mov
rcll
fldcw
jb
fisttps
inc
dec
push
and
lods
je
aas
jo
ret
ds
xchg
orb
jle
fimuls
push
sbb
stc
hlt
push
mov
lods
push
pop
cmp
orb
or
sub
push
icebp
jo
gs
push
ret
int
jo
dec
jns
xor
mov
jo
scas
fnsave
jo
bound
call
fwait
aas
subb
add
jo
push
repnz
sub
jo
inc
xor
inc
cmpxchg
jno
jbe
in
call
fsubrl
jo
pop
inc
fildl
jo
or
int
mov
loope
mov
xchg
js
test
jo
jne
mov
jo
movsl
fstps
sbb
jp
test
sti
sub
sbb
pop
push
fstl
xor
xlat
cwtl
adc
xor
sbb
fadds
jp
loope
fscale
and
inc
rcrb
push
cli
lret
fisubrs
mov
cmp
and
lock
dec
popf
sub
imul
les
mov
cltd
sar
sbb
hlt
and
xchg
jo
lock
call
lcall
loop
jl
xchg
dec
and
sbb
pop
aam
pop
add
or
fdivrl
jge
jo
mov
sub
inc
stc
cwtl
shrl
push
adc
inc
leave
out
jo
vpunpckldq
ret
jo
imul
shll
notl
leave
das
cmp
cmp
les
lock
loop
out
frstor
into
cmpsl
in
push
and
push
test
inc
xorl
adc
aas
sub
lea
jo
leave
test
call
push
inc
push
lock
mov
rolb
and
popf
in
test
jb
lods
jo
fbstp
jo
sarb
mov
lds
movsb
icebp
inc
push
jo
add
fwait
add
mov
jo
mov
cmp
or
sub
inc
jo
divl
call
shlb
in
or
sbb
add
push
dec
inc
js
std
or
mov
insl
pushw
cmp
mov
sbb
inc
ja
or
paddusb
stos
call
jno
scas
adc
insb
push
bnd
mov
sub
pop
in
mov
xlat
mov
mov
jo
sub
ret
jae
shll
movsb
js
cli
mov
xorl
xchg
je
das
sbb
or
pop
lds
mov
dec
cli
cmpl
or
sbb
lds
nop
out
mov
lea
jo
fcompl
leave
jo
inc
jp
fwait
addb
xor
je
jo
push
icebp
or
mov
sub
push
xchg
and
push
xchg
leave
or
mov
sbb
xor
jge
jo
lds
insl
xchg
call
xchg
cwtl
sbbl
push
leave
jb
jo
test
hlt
jo
int
insb
mov
daa
push
rcrb
inc
in
and
push
adc
xor
repnz
sub
jo
loope
inc
pop
call
sub
jo
fcmovnu
mov
xchg
jns
push
inc
or
in
lods
sub
hlt
aas
push
jo
xor
pop
dec
ret
add
or
js
cld
jb
add
sahf
mov
adc
jo
sti
dec
adc
std
sub
inc
xchg
xor
data16
nop
jnp
sbb
fildl
cmc
jns
jo
push
mov
adc
sub
movsl
jo
fisttpll
ss
lds
jae
lahf
ret
mov
cmpsb
jo
or
sbb
out
std
xchg
popa
ret
cmp
sbb
in
xchg
inc
mov
mov
into
mov
jo
xor
mov
cmp
outsb
mov
bound
push
mov
shrl
sbb
popa
bound
xorl
push
or
mov
mov
jo
xchg
pusha
in
mov
ret
jo
hlt
and
leave
out
xor
push
sub
je
cmp
adc
nop
cmp
mov
insb
out
jmp
js
cmp
push
cltd
or
in
sub
push
cmp
mov
mov
repz
pop
bound
lahf
arpl
fildl
xchg
scas
mov
ljmp
jmp
jo
mov
xchg
int3
jo
lea
sbb
jae
adc
aad
jne
xchg
leave
push
sbb
pop
sbb
nop
jo
sub
jge
mov
push
int
sub
ljmp
call
and
and
or
cld
push
jae
inc
mov
insl
hlt
xchg
data16
and
and
pushl
inc
jge
aad
xchg
lds
pop
fbstp
push
ds
jl
add
icebp
sub
jo
jnp
sub
add
jo
fsubs
jp
dec
js
jo
mov
add
mov
ret
or
fcoms
xchg
or
cs
aam
fisubrl
cld
jmp
inc
cmp
jo
cmc
inc
cwtl
xchg
leave
jo
and
push
jo,pn
jne
or
aad
fisttps
lods
xchg
call
lcall
movsl
inc
cmpsl
xlat
mov
movsb
and
fnstsw
xchg
mov
jle
pusha
xor
push
jns
jo
in
jp
mull
jo
push
jbe
sahf
ret
push
in
faddl
loop
cld
jo
or
in
jo
pop
rcrl
xchg
daa
jle
stos
outsb
sub
mov
jo
mov
rorb
dec
adc
jl
mov
or
jmp
cmp
inc
cwtl
dec
pushf
inc
xorb
test
mov
jo
xor
adc
imul
hlt
sub
std
out
fistpll
in
lgs
notb
insb
jl
jo
mov
inc
movsl
mov
jo
mov
jecxz
xor
scas
inc
insb
mov
and
lods
sub
or
push
icebp
jns
cmp
aaa
lock
xorl
js
jge
test
push
shrl
push
outsb
dec
push
shl
jo
int3
je
hlt
popf
das
test
inc
mov
fs
push
jno
je
mov
push
movsl
and
hlt
sbb
hlt
out
dec
aaa
scas
add
jo
cltd
adc
rcrl
jo
sbb
sahf
inc
aaa
jmp
cmpb
lds
or
shrb
sub
xchg
rcrb
insl
jge
cs
or
lds
inc
nop
andl
add
mov
ret
repnz
mov
ss
cmp
dec
pushf
bound
mov
stos
push
mov
sub
repz
leave
jo
fdivl
add
jo
fmuls
pop
adc
jo
cmp
push
iret
or
xchg
fs
and
xchg
mov
gs
add
lret
int
push
nop
aad
addb
inc
pushf
loope
and
pop
adc
dec
daa
icebp
jmp
inc
insl
mov
and
dec
mov
test
pushf
or
sbb
mov
xor
negb
call
shlb
shll
mov
sbb
cmp
repnz
sub
jo
dec
lcall
pop
jb
adcb
stc
icebp
sub
push
jecxz
fbld
xor
int
adc
loopne
icebp
push
sbb
loope
jo
lret
mov
mov
les
gs
push
aas
jo
sahf
dec
int
sub
add
lds
push
add
lret
inc
leave
repz
into
cmp
ud2
jmp
push
jbe
out
and
lea
add
cwtl
inc
dec
cmpl
xchg
mov
stc
sbb
sub
pop
jo
in
inc
ja
mov
imul
push
nop
xorb
mov
fmulp
jo
inc
xchg
mov
imul
sahf
bound
jo
loop
cmp
xor
in
icebp
add
outsl
push
jo
dec
adc
jecxz
mov
data16
cmp
xor
f2xm1
fcomip
push
repz
fwait
mov
push
iret
cmp
mov
inc
es
lods
popa
jne
lcall
xchg
mov
jo
rorb
sbb
jo
mov
add
mov
lds
daa
push
fs
stc
std
es
push
cmp
push
jo
and
or
rorb
and
mov
dec
out
popf
popa
imul
nop
repnz
int
cmc
fiaddl
push
sub
lcall
filds
mov
ret
div
lds
bound
push
ss
repz
xlat
adcb
jo
movsl
and
mov
jmp
cld
xchg
mov
popa
jo
mov
cmp
je
xchg
cmpsl
jmp
fcoms
aas
mov
lret
mov
inc
cmp
pop
xor
rol
jo
xor
fisttpll
data16
fistps
bound
lahf
push
and
icebp
or
ja
jae
test
cltd
push
mov
xchg
dec
adc
lahf
inc
push
xlat
out
lcall
push
pop
inc
pop
aas
leave
mov
aaa
mov
js
out
or
lds
sahf
mov
fwait
dec
inc
and
je
sub
in
mov
sub
arpl
push
test
jns
out
xor
cmp
ficoml
jo
ss
pushf
negl
lcall
stos
pop
lea
pusha
rcrl
and
jo
cmpsl
ret
xor
jle
jo
mov
movsl
cmp
imul
test
cmp
pop
jo
fistpl
mov
ret
insb
mov
mov
jmp
addr16
ret
in
jl
mull
push
lods
sahf
dec
xlat
jo
ja
lds
fimuls
inc
jo
subb
xor
xchg
punpcklwd
push
or
pop
cmp
repnz
dec
in
mov
sbb
mov
sub
cmpsb
insb
addr16
mov
popa
nop
scas
sub
sub
cmp
mov
mov
popa
enter
stos
jo
jle
loopne
xchg
in
aas
jo
ss
std
lea
jecxz
xchg
xor
jo
dec
rcr
jo
adc
test
inc
fs
sarb
out
jg
jo
mov
test
fwait
cmc
adcl
je
xor
jo
jle
les
sti
inc
adc
jb
push
xchg
and
leave
nop
popf
cmp
pop
lea
fdivrl
shll
cltd
subl
xchg
adc
xor
test
mov
add
mov
stos
ret
outsl
scas
and
add
push
sbb
or
dec
ds
dec
push
sahf
cld
jge
mov
repz
in
jb
out
xor
cli
xchg
insb
push
mov
pop
bound
push
push
add
and
fucomi
inc
and
lods
shll
push
jo
addl
faddp
lds
mov
jmp
mov
jg
push
add
xchg
mov
jo
sub
jmp
xchg
jae
push
in
add
fs
jbe
mov
xchg
scas
mov
jo
or
mov
addb
jl
in
out
out
jo
jno
shlb
rcl
add
outsb
mov
jo
push
dec
add
xchg
cmc
inc
jo
add
lds
test
stos
enter
cmp
mulb
cltd
mov
jo
fsubl
js
xor
cmp
sbb
pop
inc
sub
addr16
shrb
test
xorb
jae
cmpsb
lcall
jns
lock
cmp
test
js
and
jo
cmpl
sub
cli
jmp
cmp
shl
jo
push
stos
push
leave
and
aad
push
mov
add
shrl
movsb
pop
mov
and
push
ret
xor
roll
ret
mov
pop
ret
gs
mov
sbb
sub
lods
jo
into
add
shrl
pop
pop
test
jns
fs
shrl
shll
sbb
cmc
dec
out
jo
in
cltd
and
pop
mov
push
divl
bound
lds
dec
dec
cmp
dec
jo
mov
filds
sbb
outsb
jo
sub
dec
dec
xchg
shrl
xchg
adc
lret
or
jle
js
adc
add
pushf
addb
ljmp
mov
sbb
lock
insb
or
sbbb
lods
sub
scas
adc
leave
jo
pop
test
imul
jo
test
add
jo
lds
jp
out
jmp
jns
cmc
inc
sahf
inc
or
mov
pop
push
jno
xor
xchg
shl
jp
sarb
or
js
add
push
movzwl
cmpsb
aad
jle
call
stos
push
and
add
jo
inc
cmp
popf
repnz
cs
cmp
cmp
movl
xchg
dec
jo
pushl
popf
sbb
shl
movsl
jnp
mull
xor
sbb
add
rclb
mov
inc
in
shrb
in
sub
daa
jo
sbb
sbbl
cld
cltd
inc
xchg
js
cmpl
mov
jo
mov
xchg
leave
nop
nop
add
xchg
jle
jb
ret
jbe
aaa
fcoms
sub
add
aam
std
xchg
call
mov
pop
jno
in
repnz
ret
int
jnp
and
push
push
inc
jne
xor
and
popl
loopne
jo
repnz
daa
inc
push
mov
dec
popf
cld
and
int
pushf
call
jb
inc
je
add
sub
arpl
jae
loopne
xor
inc
dec
fimuls
adc
scas
xchg
xor
and
int
mov
mov
jmp
cltd
push
mov
lods
inc
push
jg
aam
je
adc
cmp
push
dec
sbb
pop
cmpb
cmp
cs
bound
pop
xlat
nop
aas
les
movsl
aam
adc
paddsw
insb
loop
jmp
repz
out
jo
jae
pop
mov
imul
mov
and
jo
faddp
mov
cwtl
jo
insb
jns
addr16
sarl
jo
inc
loop
push
xor
fisubl
mov
push
and
pushl
mov
repz
adc
jns
push
xor
int
insb
add
loop
cli
jo
sbb
roll
or
add
sub
shll
iret
xchg
sbb
ret
jo
subl
xchg
jo
loope
dec
inc
jns
psrld
das
repnz
imul
bound
cld
nop
adc
xchg
fstl
es
fbstp
stc
std
sbb
inc
jo
sub
mov
jnp
push
mov
rcrl
lcall
movsl
jge
push
out
pop
and
xor
sub
subb
mov
sbb
das
rcr
jo
xchg
jecxz
loope
adc
iret
sbb
jmp
jo
xchg
lret
mov
not
cld
sbb
out
xchg
cmpb
outsb
sub
in
add
dec
movsb
or
in
std
fwait
jns
mov
fidivrl
adc
fcoml
push
and
push
in
test
sub
jo
std
mov
fnstsw
or
data16
js
push
jbe
mov
add
xor
dec
jo
fcoml
push
into
jo
push
xchg
cmp
int
iret
ror
inc
xor
add
or
loop
mov
dec
mov
shr
lret
push
jo
repnz
mov
mov
mov
loope
test
and
rol
push
jo
loopne
pop
cld
mov
jo
push
loope
addr16
lret
mov
dec
jo
into
lret
ret
sub
shl
cmpb
cmpb
stos
rolb
jo
out
xor
mul
insb
jo
enter
inc
jo
mov
xchg
inc
add
or
jo,pt
enter
jecxz
cmp
mov
jmp
data16
jge
jo
dec
xchg
les
sti
lcall
mov
jo
pop
movsb
mov
mov
mov
sbb
inc
or
fdivrs
orb
jo
sbb
testb
xorl
pop
inc
fdivs
pushf
insb
arpl
and
repz
inc
dec
jo
inc
jns
xor
xor
jnp
ds
test
sbb
imul
push
gs
xor
adc
out
hlt
xor
imul
mov
int
mov
xorl
xchg
jmp
cmp
nop
or
mov
adc
and
shl
sub
push
mov
add
aad
pop
andb
jg
mov
pop
and
sbb
lahf
fisubrl
push
aas
sub
cmp
sub
xchg
js
jnp
leave
sbb
aam
ret
push
jp,pn
jne
insl
nop
shll
xchg
push
and
test
mov
lea
inc
pop
jo
mov
std
bound
popa
js
leave
getsec
sbb
les
jns
ds
bound
mov
stos
fnstcw
ret
jmp
aam
mov
sbb
adc
gs
jle
mov
shrb
or
jo
push
and
jo
leave
cmp
fs
ret
and
push
xadd
mov
cmpsl
sbb
bound
rcrl
cld
mulb
lea
add
out
cmp
and
repz
jo
ds
loope
fildl
cmp
movsb
inc
mov
mov
shrb
bound
psadbw
dec
add
add
jbe
cld
arpl
mov
jo
dec
aas
cwtl
push
push
inc
mov
push
inc
xlat
mov
adc
xor
fs
cmp
cvtpi2ps
mov
mov
js
js
icebp
popf
pop
jo
inc
fidivs
jo
scas
bound
inc
inc
mov
cli
push
js
or
out
jo
outsl
out
in
mov
jo
mov
dec
pushl
nop
shlb
in
and
add
stos
push
jo
add
bnd
repz
pop
sarl
mov
sub
sub
lea
xor
cmp
js
jmp
pop
or
testb
fnstenv
scas
mov
lahf
cs
mov
jo
cmp
dec
cmp
pop
andl
imul
push
das
xor
mov
jl
jno
xchg
jo
mov
mulb
cmp
daa
and
jo
jae
ficompl
add
add
hlt
and
fwait
jo
mov
fldcw
jb
js
or
push
xchg
push
mov
inc
xchg
mov
out
clc
push
jge
xchg
push
jo,pn
xchg
dec
push
mov
insl
pop
xchg
add
lret
cmc
pushf
sub
mov
jmp
aas
dec
inc
sarl
dec
mov
push
sub
in
inc
inc
jbe
lds
daa
mov
lret
dec
lret
scas
imul
fstl
jo
lahf
test
or
mov
sahf
jo
pop
mov
push
lods
adc
jle
push
sub
jo
out
cmp
jp
rcll
fs
inc
pop
add
mov
mov
mov
aas
xchg
mov
stos
jmp
jo
cwtl
jecxz
pushf
scas
outsb
and
or
insb
std
and
cmp
mov
sub
jo
mov
mov
out
mov
cld
mov
decl
adc
jg
movsb
jle
iret
push
mov
xchg
dec
and
insb
mov
mov
pminub
or
and
mov
test
mov
lcall
mov
inc
loop
lea
nop
fists
ret
jae
not
lds
xor
xchg
mov
xor
orb
sbb
jae
or
movsb
cmp
sbb
hlt
pop
cmpsb
jo,pt
repnz
shufps
mov
inc
aad
add
xchg
cmp
jo
int3
mov
divl
ret
xor
jo
add
mov
xchg
push
push
cmp
jns
daa
cmp
xorl
stos
add
or
fbstp
push
fmulp
or
out
rolb
hlt
jo
lds
std
int
xchg
mov
sbb
xor
cmp
adc
adc
inc
pop
loope
in
popf
jo
lahf
leave
pusha
js
gs
sub
dec
jo
pop
insb
sbb
adc
and
mov
inc
dec
mov
outsb
mov
jo
rcll
push
sbb
pop
push
out
nopl
inc
sbb
dec
xlat
xor
icebp
insl
push
mov
push
mov
mov
cmp
jle
xchg
cmp
push
mov
inc
sbb
outsl
cmp
fwait
ds
jae
inc
cmp
in
xchg
jg
mul
push
insl
inc
add
shll
xor
sbb
gs
popf
mov
sbb
add
cmp
aaa
pop
ja
and
das
fwait
mov
jo
leave
push
cltd
sub
jo
sahf
inc
loopne
mov
xchg
push
jb
clc
push
fs
xor
or
pmulhuw
test
mov
jo
les
sbb
lock
cmp
mov
pop
xchg
mov
adc
leave
cld
outsl
mov
push
xchg
mov
or
jle
push
push
jo
jecxz
das
into
mov
xchg
mov
pop
shrb
inc
mov
push
pop
xchg
and
sti
ljmp
fidivl
xor
mov
loope
push
jo
jl
inc
addr16
push
inc
leave
js
pusha
mov
shl
inc
jo,pt
popa
jge
loop
adc
lds
or
lcall
adc
add
jo
std
subl
pop
inc
mov
sbb
test
lea
mov
mov
in
add
sbb
loop
pushf
mov
dec
test
pop
test
jne
pop
fs
push
cld
jo
add
lret
test
dec
and
and
mov
mov
shll
mov
rcll
andb
lret
cmp
xorl
mov
or
les
jg
aam
test
jno
and
push
pushf
adc
subl
test
insb
insl
mov
ret
leave
cwtl
push
and
sbb
ret
aam
xchg
imul
es
add
jo
mov
push
sub
push
jo
mov
push
mov
mov
mov
ud2
and
sub
mov
repz
fiadds
jo
je
sub
bound
mov
scas
xchg
pop
inc
jo
les
out
push
dec
rorl
adc
inc
lcall
addr16
imul
jo
lods
popa
fwait
repnz
push
arpl
cmp
xlat
sub
jbe
push
mov
push
mov
lcall
jnp
mov
jmp
stos
jbe
cmp
lods
out
push
jo
divb
inc
or
mov
jo
xchg
xor
push
inc
mov
jo
aam
mov
inc
xchg
jo
hlt
add
or
mov
inc
jp
repnz
inc
aaa
jo
hlt
sarl
dec
xchg
pushf
cmc
push
cli
in
cmp
jl
inc
lea
mov
pop
pop
jo
fisubs
xchg
adc
scas
and
std
add
and
mov
sbb
xor
pop
loope
aam
mov
jo
mov
xor
push
scas
mov
out
push
bound
loopne
stc
das
aas
sti
in
sub
lret
hlt
cmp
in
jo
loope
sub
nop
test
fdivrl
sbb
mov
inc
mov
fxch
test
cmovl
mov
lret
cmp
arpl
cmc
jo
mov
addr16
mov
push
adc
insb
sub
cs
ret
cmpsl
push
adc
jmp
jns
js
jo
lret
inc
cld
xor
imul
jo
imulb
dec
scas
std
jo
push
popf
jg
lds
jo
push
mov
movsb
jb
in
cmp
inc
inc
and
mov
jo
outsb
jp
subb
xchg
iret
mov
cmc
fsubrs
add
lock
xchg
pop
jp
adc
fbld
mov
insb
loope
imull
jle
les
ret
scas
fstps
sbb
out
push
and
xor
xchg
adc
add
mov
pop
lea
notl
dec
ljmp
cs
or
pop
sub
jp
je
lea
mov
and
rcr
repnz
jo
add
ss
sub
les
bound
push
inc
mov
cmp
cmc
in
jo
js
imul
and
sub
movsb
seto
ds
push
lea
sub
bound
inc
mov
fwait
inc
jo
inc
rcrl
bswap
ret
push
repnz
je
subb
int
jo
lods
or
xor
xor
inc
push
jge
test
incl
xlat
scas
lahf
subl
xchg
sub
daa
repnz
adc
jp
add
pop
roll
jo
insb
adc
lds
cmp
cli
jmp
inc
mov
jne
std
ret
stos
mov
mov
jae
in
setne
insl
mov
lds
in
addr16
pop
test
orb
push
aad
jo
dec
mov
inc
int
aam
js
mov
jo
popf
fstps
jo
inc
push
push
mov
xor
sub
mov
jo
mov
add
jo
cmp
imul
mov
rcrb
in
inc
sub
daa
jo
sub
ret
push
stos
loope
je
jo
addb
jo
dec
cmp
and
xor
jo
dec
xchg
add
jo
imul
out
bound
xchg
repz
les
lret
cmovo
inc
out
in
jo
sub
imul
lods
js
mov
pop
jo
outsl
sahf
cmp
dec
adc
jo
mov
in
sbb
movsl
lret
fwait
nopl
xor
and
ret
dec
adc
jo
test
sbb
jo
aaa
cli
cmp
mov
jo
or
sbb
xlat
jo
mov
lea
cmp
xchg
ror
inc
cmp
push
push
call
push
fcoms
ds
cli
test
xchg
cmc
pop
rcll
jno
mov
add
dec
ret
mov
jo
mov
int3
dec
ja
shll
or
xorl
xchg
pushf
sti
inc
jecxz
addr16
in
or
lcall
cmpsb
add
nop
sbb
bound
cmp
sub
std
sbb
push
out
imul
mov
pusha
sar
sub
jo
push
cmpsb
ret
orb
int
inc
mov
aas
sbb
data16
loopne
ljmp
add
repz
xlat
jo
sub
pop
mov
popa
xchg
scas
sbbb
jo
mov
jb
rolb
insl
mov
mov
sub
dec
jbe
popf
jno
push
jns
rorl
jo
fidivl
out
sysexit
jno
icebp
xor
adcb
xchg
loop
push
xchg
cmp
xchg
jg
mov
jno
jo
jmp
aaa
pop
push
mov
test
out
xor
pushf
pop
jo
xorl
jae
rorb
fildll
shl
mov
lods
popa
or
jl
stos
inc
cmp
xor
cmp
mov
mov
adc
shl
adc
mov
inc
jno
lahf
mov
push
lods
push
dec
push
gs
inc
jo
and
sub
scas
shll
xchg
data16
cwtl
shll
push
movsb
arpl
pop
xlat
inc
filds
dec
test
in
cmp
jle
icebp
mov
xor
or
jb
or
jecxz
cwtl
cs
fmull
gs
loop
cmp
jo
dec
mov
out
jl
or
in
cmpb
add
inc
inc
test
xchg
jne
je
xlat
lcall
or
jo
pop
cs
mov
shlb
add
jo
and
sbb
and
scas
fldl
nop
in
ret
inc
insl
roll
jl
pushf
sahf
repnz
push
loope
mov
sbb
jo
jne
and
pop
mov
dec
test
stc
loope
inc
mov
or
adc
adcb
or
sub
not
sahf
icebp
jo
add
xchg
cmp
jb
rep
jo
mov
mov
loope
xchg
sarl
fnstsw
add
cmpsb
pop
and
mov
ret
jo
sub
xor
cmc
movsl
outsb
jo
aad
in
popf
cmp
arpl
sub
mov
mov
out
sbb
jmp
inc
lcall
sub
cwtl
fdiv
sbb
js
std
inc
mov
mov
lds
shrb
sbb
iret
popf
jo
push
loope
push
out
ret
jo
fbld
adc
scas
and
add
inc
stc
fs
lods
cwtl
ja
repz
das
lret
loope
scas
xorb
iret
cs
popf
sub
ficompl
add
clc
sbb
push
jo
push
pop
mov
jo
mov
shrl
xchg
loop
or
jo
sbb
repnz
fists
aad
push
jmp
xchg
jnp
fimuls
inc
in
jo
xlat
mov
cli
jo
sub
int
mov
mov
pushf
mov
jbe
jo
push
xchg
fisubrl
cmp
mov
push
pop
mov
add
sti
scas
leave
pusha
jo
je
iret
mov
xchg
std
jo
int
dec
hlt
or
aas
ret
test
icebp
push
xchg
js
adc
outsb
jo
leave
xchg
push
int
xchg
mov
lahf
jbe
jge
jo
movsl
and
shrl
shll
pop
lcall
push
jo
and
pop
fldcw
sbb
jo
shll
shrb
mov
mov
mov
fwait
arpl
dec
lds
mov
frstor
scas
and
mov
jo
dec
mov
sub
iret
add
vpsubd
pop
push
nop
and
xchg
cmp
xor
or
movl
rcll
pop
ret
scas
lds
cmp
mov
jo
jle
dec
cmp
shll
fs
es
push
bound
outsb
mov
sub
xor
dec
push
inc
lcall
jo
inc
stos
dec
sti
rol
push
inc
and
dec
sbb
pop
jmp
add
jo
loope
hlt
and
ret
lret
jg
cmpsb
leave
or
mov
andb
sbb
pop
add
xchg
aaa
cld
enter
push
pop
push
rcrl
ret
push
add
adc
fdivs
jno
cwtl
icebp
mov
sbb
leave
lahf
pusha
inc
push
dec
jnp
js
scas
push
imul
icebp
add
sub
adc
mov
in
jmp
cmc
push
xchg
dec
mov
fnstcw
jnp
ret
jmp
aas
fimull
jno,pt
mov
xchg
dec
in
nop
mov
movsb
pop
icebp
ja
rorb
dec
in
test
jae
js
mov
pop
xor
push
lods
xor
rol
or
scas
mov
mov
mov
fstl
aaa
clc
pop
je
xchg
jo
fidivs
push
jo
int
or
imul
and
cmpsb
jo
xlat
jbe
inc
stos
mov
mov
and
dec
scas
jo
popf
aaa
inc
and
out
enter
sub
stos
ffree
lea
ret
mov
daa
in
js
jge
lock
lcall
lds
push
inc
adc
push
jg
xchg
js
pshufw
mov
aad
xor
rcrl
negb
loope
les
push
mov
nop
adc
jo
clc
push
add
mov
sbb
lds
fwait
jmp
imul
inc
xor
xchg
adc
jo
xchg
mov
mov
adc
ljmp
ret
mov
cs
hlt
sub
inc
push
mov
gs
ljmp
scas
jo
mov
arpl
popa
and
ret
mov
lds
jo
fistl
xchg
jo
daa
push
cmc
or
adc
scas
dec
fwait
repnz
jo
sub
enter
jo
dec
stc
dec
add
lahf
jo
daa
adc
scas
jge
jo
test
mov
jo
loop
cld
lds
sub
jnp
test
in
ds
ret
jne
sbb
add
xchg
pop
cmc
int3
lds
pop
lahf
cmp
sub
mov
push
adc
mov
mov
jo
inc
push
sub
mov
sbb
mov
leave
int
bound
inc
pop
mov
jo
cmpsb
push
mov
scas
xor
cwtl
movsb
imull
nop
adc
and
je
fwait
add
inc
sub
or
push
ljmp
int
lret
xor
xchg
sbb
jo
and
insl
adcb
mov
jne
outsb
mov
mov
sub
push
push
mov
hlt
jb
jae,pn
push
jo
jp
fnstsw
or
jo
or
sbb
popa
mulb
sti
jae
addr16
popf
jo
push
xchg
dec
and
xor
mov
jo
xchg
xor
lds
pop
adc
inc
icebp
sti
jo
push
imul
es
lods
lds
mov
add
ds
xor
das
xor
sub
push
scas
sub
repz
fcmovbe
sahf
jp
adc
lock
pop
in
dec
icebp
int
or
btc
pop
ficompl
jle
xchg
cmp
sub
out
add
fistpl
ret
imul
jo
arpl
push
ss
jge
ss
push
pusha
sub
stos
loopne
js
ljmp
dec
les
jo
roll
xor
adc
clc
jo
xor
mov
sub
sub
mov
in
adc
add
jae
mov
bswap
xor
xor
jle
dec
push
push
push
ds
xlat
insb
xchg
mov
scas
inc
adc
cmpb
and
imul
cmp
or
jo
or
jmp
out
js
rolb
nop
mov
ja
sub
ja
scas
aaa
nop
lret
mov
pop
xor
repnz
cmp
and
sbbb
jns
sub
or
and
fmul
jo
pop
shll
imul
aas
jo
cmp
fstps
inc
shll
out
adc
jbe
jo
ret
shll
push
jo
sbb
jb
mov
aam
daa
fs
insb
ret
cli
adc
pop
push
dec
test
std
lea
sub
jb
push
rclb
jo
mov
pop
stos
lock
inc
mov
data16
xchg
jmp
into
push
test
cld
insl
jo
mov
sbb
or
shrb
sub
jp
and
xchg
dec
xchg
sbb
addr16
mov
es
or
xor
jo
ljmp
jo
sbb
paddd
jmp
lcall
cli
mov
ss
je
lds
cmpsb
mov
or
jbe
sbb
in
pushf
sbb
outsb
leave
jb
arpl
scas
jns
cmc
andl
mov
imul
adc
bound
pop
mov
scas
xorl
out
push
sbb
add
add
jge
dec
xchg
ret
push
pop
mov
das
out
ss
add
cmp
scas
adcb
adc
cmc
sub
pop
jo
xor
and
xor
mov
fildl
leave
aas
mov
cmp
jo
insb
add
pop
or
loope
sub
jp
push
lds
in
cmp
out
rcrb
xchg
sub
inc
mov
mov
decl
movsb
popa
push
fscale
mov
cmp
dec
les
jo
sbb
aad
dec
loop
mov
xorb
sbb
lds
aas
in
bound
push
call
jg
push
mov
ret
notl
jo
add
fiaddl
xor
out
jo
aad
mov
loope
add
orb
icebp
jge
jo
adc
xorl
pushl
out
adc
jo
lods
sub
dec
xchg
and
lds
sub
mov
or
push
sbb
dec
bound
jo
xor
adc
fs
add
in
xchg
pop
mov
clc
call
out
outsb
rcll
and
cmc
add
xor
fldl
fbstp
mov
vcmppd
dec
popf
mov
xor
xchg
jns
test
imul
sti
pop
icebp
xor
dec
lods
mov
js
mov
into
jle
jo
out
or
shll
inc
jo
imull
or
jp
cmp
xor
ret
mov
sub
lods
ss
fdivrl
std
and
orb
fidivs
out
jg
jmp
inc
cs
sbb
jmp
or
jo
mov
sub
andb
pop
jb
mov
xor
jo
push
mov
test
imul
fdivp
cmpsl
shl
loope
iret
or
nop
pop
or
add
pop
mov
fsubrp
xchg
xorb
add
adc
negl
and
add
xchg
ss
add
mov
pop
jo
mov
cmp
push
sbb
add
stc
inc
mov
rorb
xor
test
push
leave
and
sbb
nop
mov
or
jno
scas
dec
push
sbb
or
push
rcrl
xor
and
cmp
test
push
cmp
stc
jge
jo
les
xor
add
leave
lcall
mov
jo
add
daa
or
test
pop
out
int
add
mov
cwtl
inc
inc
nop
jecxz
jbe
jo
jp
movb
out
addb
sbb
loope
sbb
lds
inc
mov
xchg
data16
nop
pop
jo
inc
mov
frstor
jo
and
hlt
loop
popf
mov
nop
jb
dec
adcl
xchg
dec
sbb
jg
roll
arpl
scas
jo
mov
outsb
add
cmp
daa
sub
repz
push
jmp
subl
imul
imul
add
lds
testb
aaa
inc
or
out
xchg
jo
lock
fwait
jo
dec
mov
push
hlt
insb
xor
and
repz
lret
push
push
cmp
mov
sbb
sbbl
pop
inc
js
jbe
jo
xchg
xchg
lods
clc
xchg
mov
gs
jo
sahf
xor
jo
inc
ret
outsl
xchg
or
ja
mov
jp
jle
xchg
and
dec
test
add
subl
les
mov
inc
jo
xor
inc
push
push
stos
popa
dec
mov
pop
popf
jo
mov
mov
cmp
sub
lcall
lods
nop
out
jb
leave
je
ja
loop
pop
push
loope
js
fucomp
adc
daa
sub
xor
push
add
sarl
rorb
nop
imul
xchg
jo
mov
jmp
mov
xchg
mov
lea
mov
and
jmp
lods
push
and
add
push
mov
mull
jg
pop
and
jo
movsb
add
mov
inc
add
or
jns
mov
mov
jo
lds
ljmp
jb
outsb
nop
mov
push
push
or
pop
xorl
ljmp
ret
cmpsb
into
pop
sbb
cs
push
mov
shll
inc
fstpt
jo
mov
testb
daa
pop
jb
popa
jo
adc
mov
fcomp
mov
jo
int
mov
xlat
mov
push
mov
and
inc
fwait
loope
jo
outsl
mov
les
xchg
jo
sti
test
jg
inc
or
pusha
push
int
repz
popf
test
fdivl
pushf
mov
jo
ss
jo
cmpsl
jecxz
lock
subb
push
rcrb
sbb
mov
lea
ds
fnstsw
int
and
cltd
jo
pop
jle
xor
dec
jl
mov
adc
fisttpl
pop
inc
popa
or
jo
in
sar
push
push
icebp
push
jo
test
mov
lds
and
iret
mov
out
sub
push
mov
out
add
sub
sub
in
movsl
ret
sti
jecxz,pt
jo
xchg
and
add
add
imul
ret
jo
ja
push
jae
mov
xchg
dec
loope
cmp
mov
repz
scas
adc
cmp
fdivrp
jno
addr16
stos
mov
ds
call
jo
mov
popf
int3
xor
or
repz
dec
in
jo
pop
push
ss
icebp
test
jo
ffree
lret
xchg
or
bound
xor
jo
ret
and
push
leave
push
cli
jo
push
mov
aas
mov
in
jo
std
ret
mov
loopne
loope
data16
inc
cs
aas
out
mov
daa
push
push
jo
and
add
mov
or
jae
jo
cmp
xchg
push
xchg
jo
xor
cmpsl
mov
lea
mov
lods
pushf
inc
sbb
or
outsl
pop
icebp
es
jo
mov
sub
sti
ds
jo
sbb
mov
jne
std
and
hlt
js
mov
leave
mov
popf
sub
push
into
js
mov
push
sub
mov
inc
lea
xchg
stos
sarl
inc
xchg
jmp
jo
or
and
sub
cli
dec
jo
leave
sbb
test
dec
jo
in
out
cli
or
shrl
sarl
js
adcl
jo
xor
imul
push
mov
mov
fs
outsl
jo
ret
dec
adc
push
shl
pushf
leave
mov
lahf
xchg
in
jo
mov
pop
addr16
inc
movsb
jo
xchg
insb
shlb
popf
sub
arpl
cmpsl
mov
loopne
and
mov
xlat
scas
popl
jo
pop
mov
movsb
je
mov
jo
jle
in
mov
mov
jo
je
jns
ret
sub
mov
fwait
pop
mov
jo
int
outsl
daa
std
jo
pop
mov
and
test
wrmsr
cli
pop
cmpsl
sub
aam
imul
push
jne
mov
lods
xor
ret
inc
xor
dec
pop
pop
mov
mov
pop
fldcw
push
outsl
mov
sbb
dec
jo
out
cwtl
dec
movsb
or
sbb
mov
jo
mov
cmp
cs
xor
xorb
in
jo
enter
mov
lock
cmp
dec
inc
aaa
mov
jo
push
pop
pop
push
jge
push
jb
add
outsb
pop
jo
xchg
in
je
scas
subb
addr16
pusha
push
cmc
in
push
and
in
xchg
inc
je
loope
jo
sbb
fwait
add
cmp
jp
xor
xor
lds
cld
mov
mov
push
dec
int
jo
enter
mov
nop
test
mov
call
sub
push
int
mov
js
jns
xor
and
stos
jo
xor
lock
push
jo
cwtl
adc
ljmp
pop
push
shrl
testb
inc
add
adc
mov
out
cli
mov
jno
add
pusha
loope
mov
movsb
lea
ret
mov
jb
jmp
int
xchg
cmp
jo
test
inc
xchg
lea
inc
pop
andb
adc
out
push
add
xchg
xor
lea
inc
or
mov
nop
pop
loope
add
je
int
aad
sbb
fnsave
inc
sarb
fwait
scas
mov
jo
call
leave
push
addb
dec
add
jg
pop
mov
cmp
arpl
and
sti
adc
mov
into
push
les
iret
mov
push
jo
inc
lds
add
out
lea
inc
xor
push
test
inc
dec
je
mov
or
dec
pop
or
enter
jo
imul
adc
push
jo
or
inc
out
inc
movsb
les
push
pop
adc
bswap
push
lea
jo,pn
sbb
mov
jnp
bound
inc
jmp
std
add
sbb
pop
lds
xlat
ja
leave
mov
leave
bound
aam
arpl
jo
xor
das
jo
pop
leave
mov
sub
sub
or
jo
sub
push
movsl
jl
inc
pop
rorb
shl
fdivl
jo
insl
loope
inc
mov
sub
icebp
jb,pt
nop
cmp
cmp
movsb
pop
xor
in
and
lds
mov
out
repnz
in
cmp
sub
cmpsb
sbb
fxch
pop
push
jmp
sub
repz
mov
gs
mov
mov
sub
jl
adc
mov
push
popa
mov
jo
add
lods
jp
stc
jo,pn
ret
and
mov
jmp
bound
or
mov
inc
add
hlt
xor
lds
call
mov
mov
lret
jo
jecxz
inc
xchg
ret
inc
shrl
jo
stc
pop
and
enter
lret
jne
ss
xchg
push
sbbb
jo
std
push
mov
jle
jo
lcall
or
pop
mov
jbe
leave
or
jg
mov
insl
lods
roll
cmp
add
xorb
aaa
js
shrl
jno
adc
add
inc
push
in
cmc
test
sbbl
jo
xchg
hlt
mov
pop
mov
fbstp
add
loop
fdivl
test
aam
jo
sarb
fidivrl
xchg
jo
addr16
std
jo
jg
lock
ret
push
cmpsl
je
jo
inc
lds
sub
push
insb
push
orb
addr16
pushf
sub
js
fwait
in
mov
or
scas
cmp
mov
jo
sub
sub
mov
jmp
inc
push
int
test
add
ret
movb
je
jae
jo
lods
dec
jge
aam
shll
mov
dec
je
add
and
jo
cmpsw
sar
xor
jo
jl
jnp
rclb
fistpl
rorb
jbe
jg
lcall
jne
mov
add
xchg
sbb
rorl
pop
test
imul
xchg
je
ljmp
push
cmp
sbb
or
out
jo
adc
jp
xor
dec
jge
push
pop
jo
jnp
in
shl
mov
sub
jo
sti
adc
sub
xor
inc
xchg
and
rorb
fnstcw
jge
pop
hlt
push
sbb
outsb
jo
sub
xchg
js
aad
push
xchg
jns
sti
jo
jbe
icebp
sub
popf
inc
adcb
nop
pop
add
sbb
je
jo
int
inc
pop
test
insb
orl
mov
xor
lret
mov
add
aas
sbb
push
dec
aad
mov
pop
je
and
cmc
mov
in
into
xor
jo
ret
inc
test
and
jnp
cmc
data16
lea
test
fwait
ret
ja
cmpb
out
int
jo
and
nop
aad
pop
push
fidivrs
daa
jnp
int3
repz
sbb
and
jp
pop
loop
jo
sti
shlb
mov
insl
jecxz
pop
cmp
xor
incl
adc
iret
repz
xor
inc
orb
ret
sub
test
sub
jge
aam
jo
jmp
push
nop
jo
mov
test
mov
in
fs
jb
cmp
xor
jo
sub
push
lds
mov
hlt
out
jae
paddusb
loop
out
jle
push
aaa
out
push
cld
sbb
pop
popf
xorb
and
cli
in
sub
mov
popa
mov
jae
jp
inc
test
pushl
push
loope
repnz
outsb
and
adc
arpl
jo
jmp
pop
sub
lock
popf
js
inc
adc
sti
fldcw
fsubs
std
in
into
lds
push
jne
and
iret
das
sbb
adc
outsb
lods
mov
aas
or
outsl
std
in
inc
jo
xor
lret
dec
jo
mov
rol
and
pusha
push
mov
jo
ror
cmp
iret
mov
push
jo
mov
inc
stos
cmpsb
jo
test
lods
ret
fwait
jo
xchg
jae
ss
mov
popf
and
jo
sbb
cltd
out
inc
and
fistpll
sbb
pop
sub
in
jo
and
push
loop
shll
push
push
add
fisubrl
nop
jo
cs
imul
and
mov
dec
jo
scas
jnp
mov
loop
dec
pop
dec
fidivl
mov
sbb
push
mov
xchg
inc
jmp
xchg
jo
adcl
mov
jo
sub
in
mov
xlat
or
std
add
imul
push
or
xor
daa
and
push
orb
adc
adc
in
cmc
jp
jo
clc
push
jmp
jmp
cli
xchg
sub
loope
push
jo
ret
inc
mov
pop
jns
scas
lods
into
xor
pop
xchg
imul
jo
or
stc
adc
jne
add
jo
imul
jmp
lock
les
shrl
cmp
and
in
ss
cld
xor
xor
sub
jnp
js
andb
fs
xor
xchg
fdivrl
dec
sbb
cwtl
stos
loope
ret
orb
inc
jecxz
jne
bound
sti
out
es
mov
ret
xor
jns
jo
or
jl
or
fsubrl
jo
cld
xchg
xor
pop
adc
aam
ror
cmc
pop
jle
mov
ljmp
xchg
mov
sbb
pushf
jno
fsubr
add
mov
cltd
in
jo
xor
adc
add
jns
sub
jo
pop
xor
loope
pusha
ret
jmp
insb
je
push
pop
repnz
imul
shl
or
jns
ja
jle
verr
out
js
nop
jmp
pop
filds
sti
jne
add
xchg
cwtl
gs
cmc
divl
fidivrs
stos
adc
sub
push
aas
jo
jmp
sahf
inc
push
mov
in
icebp
cmpl
xor
sbb
adc
jo
push
jne
jg
mov
jo
cld
xchg
sti
ss
push
lret
mov
shlb
push
test
jo
imul
imul
test
outsl
jo
aam
sbb
sbb
jns
jo
push
sbb
shll
cmp
arpl
je
dec
ret
sub
mov
les
and
rcll
inc
ss
and
inc
jo
push
gs
cltd
pop
enter
mov
or
jbe
xchg
pop
cmp
mov
inc
repz
cmpsl
jo
add
test
push
rcrb
mov
dec
out
outsl
xchg
jo
inc
lods
ljmp
fnstenv
lcall
jo
scas
mov
and
sti
xchg
mov
sub
jo
out
sub
xchg
jo
xchg
cmc
and
adc
cmpsl
push
outsb
xor
jl
mov
clc
add
mov
or
jp
fstpl
pop
addr16
out
shlb
stos
fnsave
fcompl
inc
lds
adc
jns,pn
or
xchg
pop
and
mov
mov
sbb
inc
divb
rcll
int3
jecxz
jo
and
pop
xor
insb
push
dec
js
jnp
adc
jo
add
fistps
inc
sbb
jge
mov
nop
orl
jle
aad
cwtl
sub
int
sub
inc
sub
or
sub
push
xchg
push
enter
lahf
insb
cld
mov
mov
js
inc
mov
fs
fmull
lret
and
loop
jo
clc
cmp
pop
or
push
xor
mov
outsb
pushf
sub
lret
jo
pop
jl
push
inc
mov
repnz
popf
xor
jae
inc
jo
xor
lock
pop
fwait
xchg
divb
lods
pushf
fsubs
xchg
nop
icebp
outsb
xchg
fiadds
jle
inc
mov
jp
stc
add
cmp
shll
and
nop
inc
mov
push
lahf
jge
mov
insl
mov
mov
je
iret
jo
sbb
mov
jo
push
fadd
or
lahf
idivb
jo,pt
popa
cltd
mov
push
cli
sbb
sahf
lock
cs
inc
mov
cli
dec
xchg
push
jo
inc
add
mov
inc
test
imull
push
imul
jb
push
mov
sub
and
adc
test
insb
sbb
dec
pushf
jg
enter
bound
mov
sub
clc
sbb
fidivrs
mov
mov
mov
xchg
sub
mov
mov
aas
jp
sbb
jo
inc
xchg
fmull
sti
jo
out
cmp
sarb
jo
jmp
or
fwait
inc
rcll
lods
aam
xor
adc
dec
jo
adc
les
sbb
jb
mov
jno
jo
jae
xlat
pushf
icebp
inc
adc
aad
shr
or
dec
jo
mov
pop
jmp
fdivl
mov
jo
mov
in
insl
jo
push
loope
loop
mov
or
lss
daa
and
jae
push
mov
repnz
fsubr
pushf
test
mov
xchg
adc
aaa
pop
outsb
test
sub
mov
fimull
or
mov
mov
es
outsb
jmp
cmpb
xor
imul
add
fnstsw
mov
sbb
mulb
daa
jo
sub
jl
js
ret
aad
jo
popf
fldcw
outsb
dec
nop
jo
adcb
cs
dec
les
lds
or
lock
add
mov
jo
adc
aaa
xor
pop
sarl
adc
pop
mov
xchg
sub
es
mov
jl
stos
mov
mov
pop
jmp
xchg
and
lock
cmp
ss
jo
cli
xor
cs
sahf
jo
sub
push
dec
jg
ret
jo
mov
xchg
out
sub
insb
mov
cwtl
pop
fs
xlat
dec
mov
add
adc
mov
sbb
jg
scas
shll
inc
ret
xor
jge
add
in
or
ljmp
mov
and
dec
daa
mov
mov
hlt
pop
sti
jo
add
cmp
leave
hlt
jo
push
and
popf
push
push
movsl
cmpsb
sti
push
push
push
fisubl
xchg
jo
xor
pusha
push
jbe
shrb
jo
push
inc
mov
paddsw
imul
rcll
jns
lock
test
cmp
jo
cmp
roll
jo
adc
std
jo
mov
sar
gs
fdivs
out
cmp
and
jnp
fwait
inc
mov
leave
stos
js
ficoml
pop
mov
add
in
lea
sbb
scas
aad
ret
repz
adc
pop
test
hlt
sub
js
hlt
add
or
inc
leave
dec
out
mov
fisttps
sub
insb
jp
jo
scas
fldl
jo
out
mov
ror
push
lock
loop
in
addb
mov
lds
out
pop
pop
repnz
int
xchg
jo
inc
mov
les
mov
jb
ficoms
icebp
daa
ret
cltd
jl
imulb
out
add
cwtl
mov
jno
jo
rcll
fsubs
mov
inc
pop
jo
vmovups
cmpsb
xchg
aaa
jmp
jo
mov
inc
repnz
mov
aam
mov
xchg
sub
insb
pop
hlt
adc
test
int3
or
out
das
shrl
dec
mov
jo
add
rol
nop
cltd
cmpsl
jle
cwtl
ja
sbb
stos
mov
xchg
jp
movsl
jo
pop
dec
xchg
cwtl
shrl
js
mov
fs
cmp
cs
cmpsb
jo
cmp
ret
nop
insl
mov
outsb
sarb
movsb
push
inc
jns
jo
push
or
clc
shll
dec
mov
mov
inc
loopne
insb
lret
and
push
add
aad
scas
ss
mov
cmp
je
and
hlt
and
sbb
inc
mov
push
stos
inc
jl
jae
jle
roll
scas
jne
cmp
jo
or
dec
xor
rcl
and
andb
jo
out
aas
push
lret
lcall
mov
fdivs
loope
jno
mov
inc
and
jne
scas
jns
nop
jnp
subb
fs
add
jo
shlb
push
sub
xchg
loope
aam
jo
outsl
xchg
pop
les
mov
add
and
cs
leave
mov
and
js
xlat
cmp
aad
in
mov
fmulp
and
sub
push
loopne
sub
cmp
lods
js
inc
jmp
lahf
pop
jo
sbb
xlat
data16
fbstp
jns
xorl
xchg
dec
mov
leave
pop
dec
push
xchg
jg
mov
mov
dec
sub
cmp
push
adcb
enter
jne
js
pop
inc
pusha
aaa
push
jg
out
mov
cs
push
frstor
push
scas
cmp
sbb
jne
mov
jb
jge
add
push
mov
push
jo
rcrl
jns
orb
mov
jo
ret
cld
mov
fld
adc
adc
fs
add
or
test
out
shl
pop
jg
js
test
or
je
jmp
cmpb
sbb
shl
lret
pop
bnd
push
inc
ret
lret
loop
adcl
shrb
sbb
movd
movb
les
cli
push
xchg
stos
xchg
xchg
xor
mov
inc
mov
mov
jo
push
xor
add
out
call
xchg
adc
cmp
aaa
scas
pop
bound
xchg
insb
jo
pop
data16
pop
lock
jo
call
je
loope
jo
shll
loope
mov
repnz
or
fbstp
int
faddl
clc
push
xchg
cmp
hlt
mov
iret
push
pop
rcl
int3
mov
inc
jmp
in
sub
mov
lods
insl
mov
add
push
jo
fucomip
icebp
mov
xchg
rolb
xchg
jo
stos
push
pop
adc
cli
adc
in
sub
mov
cmp
xorb
jo
stos
loope
inc
jne
int3
rclb
mov
xor
enter
ja
movsl
jmp
xchg
push
xor
into
scas
popa
sahf
pushf
nop
jg
xchg
movsb
jge
rol
mov
sub
cmp
mov
orb
xor
adc
or
les
and
xchg
mov
rcr
push
call
loopne
jo
xor
jg
leave
xlat
jo
aaa
pop
add
cwtl
pop
jmp
fcomps
push
xor
sub
hlt
out
sbb
andl
mov
in
nop
cmp
push
imul
lods
cmpb
mov
mov
push
addl
push
xor
cmpsb
test
aad
add
xor
popa
out
fcoml
xor
mov
jo
add
adc
leave
loop
pop
imulb
sbb
cmp
enter
mov
sbb
mov
jo
rcrl
push
pop
sbb
int
js
sub
filds
or
into
nop
scas
jle
mov
jp
cmp
lds
in
mov
xor
test
fs
lock
in
sbb
fwait
js
aas
lret
xchg
int3
out
cmp
jo
test
lods
shl
add
out
repnz
nop
xchg
jge
jo
daa
clc
push
jns
icebp
adc
ret
lock
sahf
movsb
jp
js
inc
in
mov
jge
or
loop
push
int
lahf
je
pop
imul
ret
jbe
xchg
imul
sub
jo
mov
pop
cmp
pop
pop
jns
mov
jns
xor
cltd
addb
les
nop
nop
sti
mov
in
jo
vmwrite
out
dec
push
jo
xchg
push
cwtl
mov
lret
in
lds
stos
ror
insl
jo
xlat
or
adc
movsb
or
lds
jae
adc
pop
les
adc
xor
adc
sbb
xor
stos
je
icebp
call
bound
mov
out
add
arpl
or
hlt
or
mov
ds
xchg
addr16
subl
and
testl
xchg
imul
xor
mov
sbbl
mov
lds
mov
xchg
mov
gs
jns
push
icebp
scas
push
shl
andb
push
enter
shll
push
pop
push
call
inc
push
repnz
movsl
push
jo
mov
daa
leave
cs
jo
sub
shll
ret
jp
shrb
jbe
popf
add
lret
int
out
xorb
lock
mov
mov
push
push
shlb
getsec
outsl
sbb
pop
call
js
push
xor
dec
clc
scas
xor
ss
pushf
pop
aaa
div
jo
adc
inc
addr16
andb
xor
pop
add
lds
shl
imulb
insb
push
sub
push
xchg
les
jo
fsubl
jmp
jo
fwait
pextrw
cmp
sbb
or
mov
lcall
push
mov
adc
jo
mulb
adc
pop
jo
pop
test
and
pop
mov
ret
cmp
push
or
stos
mov
pop
cmpsl
outsb
xor
cld
int
mov
js
lea
push
mov
cmpsw
xor
loop
cmp
jo
idivb
mov
push
repnz
lods
jo
leave
adc
test
les
push
bound
xchg
mov
sahf
jo
sub
or
das
out
jo
mov
cs
push
pop
lds
nop
mulb
repz
jo
out
mov
lods
emms
add
sub
adc
xchg
or
add
and
jo
inc
leave
push
ljmp
adc
into
lds
cmp
repz
jo
mov
xchg
js
divl
mov
das
cmp
jmp
sbbb
repz
bnd
adc
fldt
insb
lods
inc
mov
xchg
ja
and
in
ret
xchg
sahf
sbb
lahf
sub
mov
jle
scas
aad
daa
test
hlt
imul
test
mov
shll
movsb
shlb
aas
in
or
fiadds
aaa
notl
aas
cs
cmp
pop
in
sub
int3
popf
push
push
cmpsl
push
fcmovb
and
adc
pop
lahf
jp
push
xchg
je
jo
pop
lds
mov
xor
mov
or
and
jo
gs
inc
xchg
xchg
imul
xorl
pop
mov
xor
imul
lds
mov
xchg
cs
sub
ja
lcall
mov
add
test
inc
xchg
cmovs
or
add
sarl
das
add
sbb
jo
xchg
sbb
cmp
lret
xchg
pop
cltd
add
mov
jo
loope
mov
nop
jge
shl
pop
inc
xor
and
jo
pop
inc
xchg
jg
cli
insb
fnstenv
cmp
test
fimuls
jo
roll
jmp
add
xor
push
sbbl
sbb
cmp
push
popl
cltd
push
scas
xlat
mov
or
pusha
jo
adc
pop
dec
inc
jl
rcrl
neg
sub
jo
jmp
dec
shlb
ret
cltd
jo
lds
mov
dec
sbb
scas
and
jo
jns
and
sub
rorb
cmp
xor
xor
jmp
xchg
adc
and
mov
clc
mov
jo
or
or
mov
in
aad
or
jo
and
leave
push
outsl
push
mov
add
out
and
fs
and
pop
mov
and
sub
aad
jo
or
or
adc
xchg
out
sti
xchg
inc
lahf
dec
rcll
and
mov
lds
pop
jle
add
das
dec
push
fldl
inc
jo
popf
xor
inc
jge
inc
stos
fcmovb
sbb
xor
mov
jo
cmp
test
sahf
in
cmpsl
xchg
and
scas
outsb
stos
push
fs
aad
in
mov
jo
mov
leave
scas
inc
jo
inc
lds
bound
jnp
sub
mov
jo
loop
add
cltd
jl
push
cmp
dec
jo
xchg
std
jb
jnp
les
cmc
out
inc
jmp
js
xor
inc
fnstenv
sahf
jp
sbb
cwtl
imul
or
mov
js
push
jg
xor
jo
repnz
add
stos
pop
clc
inc
pop
sub
repz
or
mov
jg
mov
les
jne
movsb
or
repnz
out
in
or
ja
out
scas
xor
lock
and
cs
mov
push
shll
sub
push
cli
lods
xchg
cwtl
jp
adc
call
mov
adc
movsb
cmpl
xchg
shrl
adc
and
insb
sbb
loope
jo
xchg
sbb
push
sub
cmp
jae
call
out
xchg
nop
add
pop
xchg
dec
jo
fadd
iret
sarl
jge
mov
fcmovne
pusha
lea
out
sub
jo
xchg
movsb
stc
insb
leave
aam
push
subb
sub
dec
insb
or
push
mov
jne
inc
subl
gs
and
lock
out
mov
sub
mov
adc
mov
mov
xor
xor
stc
out
xor
push
xchg
or
xchg
mov
ret
int
out
jmp
jo
repnz
pusha
rorl
popa
fcoml
jns
test
push
mov
sbb
aaa
pop
je
jp
mov
jo
inc
fbstp
and
jo
lcall
or
push
loop
xor
lods
icebp
mov
outsb
mov
sub
scas
bound
lcall
jo
xor
inc
jo
std
scas
sbb
pinsrw
stos
jo
or
mov
sub
push
cmp
inc
lcall
jo
pop
mov
dec
mov
clc
insb
sbb
push
jo
rorb
pop
cmpsb
std
mov
jo
ja
sahf
incl
push
scas
dec
mov
popa
sbb
xadd
arpl
jo
cmp
scas
mov
loope
xor
lds
test
inc
in
sub
out
rorb
cmpb
xor
sub
push
lahf
jo
movsl
cmc
mov
pop
rorl
push
jo
lods
ret
loop
jo
xor
dec
bound
dec
push
loop
sti
shlb
xor
sub
das
add
and
js
sub
or
jle
and
xchg
xchg
jo
push
movsb
mov
loope
or
mov
mov
push
mulb
dec
jbe
sub
adc
ret
sub
rolb
enter
jo
inc
push
icebp
cmp
dec
mov
mov
ficoml
sbb
pop
leave
shll
cmpsl
fadds
mov
in
jo
inc
sub
pushf
leave
js
rcr
ret
clc
cltd
mov
cmp
adc
and
push
fsts
fistl
pop
es
in
je
and
int
cmp
les
orb
cs
push
push
dec
scas
orb
out
jne
in
and
or
mov
or
push
mov
xchg
xlat
inc
ret
call
sqrtps
es
jle
faddp
jmp
sahf
hlt
xchg
loop
aad
nop
jns
jbe
mov
sbb
mov
ljmp
jp
insb
imul
push
mov
fdivs
addl
push
sbb
push
and
leave
pop
inc
jge
out
int3
or
jo
dec
mov
sub
icebp
loopne
cmc
push
cmp
pop
dec
pop
xchg
addr16
cmp
test
lds
adc
xchg
ja
mov
insl
aaa
xor
mov
out
jo
es
std
jnp
mov
mov
and
mov
sbb
push
mov
adc
outsb
xor
xor
inc
aad
aas
jbe
cmp
cmp
push
sub
push
repz
fdivrl
mov
orl
pop
or
add
cmpb
shl
jl
test
xor
or
adc
lods
jge
int3
jo
mov
icebp
daa
mov
push
adc
xchg
ret
mov
xor
shlb
mov
sub
jo
mov
mov
aam
jae
enter
fcompl
jnp
jns
js
jmp
xchg
leave
cmp
out
fisubl
xor
jo
jns
mov
sub
jb
jge
arpl
adc
repz
cltd
push
popa
dec
pop
xchg
mov
mov
sub
sub
or
ds
leave
xchg
fildll
jo
xor
jb
mov
sbb
cltd
jo
push
iret
jne
test
js
cmpl
jb
mov
jo
imul
movsb
jo
loope
or
inc
xor
out
shrl
cmp
adc
fidivl
lds
push
xchg
test
or
cmc
push
jmp
pushf
jle
xorb
inc
popa
ret
dec
cmc
inc
add
nop
push
addr16
jmp
xchg
jo
mov
dec
ret
in
loop
jo
lds
lods
call
dec
popf
xchg
loope
inc
nop
out
or
test
mov
jo
mov
xchg
shll
imull
rolb
ret
cmp
jo
int
cmpsb
mov
push
movsb
push
test
data16
bound
jo
sbb
movsl
imul
js
xor
mov
lret
inc
cmp
pop
push
inc
or
ljmp
test
jno
fs
push
int
in
adc
popf
repz
bnd
jo
pop
outsl
cli
data16
mov
jo
or
les
push
test
mov
sub
inc
popf
jl
lcall
ret
test
push
jo
cmpsl
je
dec
inc
and
jo
mov
push
xor
andl
jo
xchg
inc
cmp
loope
mov
push
push
negb
aam
lret
repz
hlt
push
pop
xchg
mov
mov
cltd
jae
jo
lahf
scas
cmc
into
je
pop
lock
mov
out
cmc
test
cmp
jae
push
stos
push
pusha
nop
jecxz
mov
outsb
sub
push
push
mov
cmc
test
repz
adc
xor
or
xchg
inc
mov
pop
pop
dec
jo
lds
push
in
pop
loopne
mov
xchg
xchg
je
dec
out
addr16
loopne
jg
fimuls
adc
cld
cmp
leave
jmp
push
andl
insb
movmskpd
inc
mov
hlt
in
xchg
roll
jns
or
push
std
push
movsb
les
jo
mov
jo
test
aam
jmp
popf
adc
dec
push
push
dec
jo
xchg
dec
pop
jb
shl
and
sbb
dec
arpl
fdivl
mov
adc
jl
mov
test
and
dec
pop
pop
add
ret
int3
jbe
std
push
jmp
and
ret
pop
dec
shlb
jo
int
xor
adcb
push
mov
pop
hlt
aam
leave
jo
mov
add
aaa
bound
jecxz
add
ss
inc
sbb
cmovl
stos
jmp
mov
shrb
jo
vsubsd
into
push
adc
jno
nop
cmc
leave
pop
sbb
mov
bound
pop
mov
std
aaa
pop
pop
in
stc
mov
jo
roll
or
adc
add
jns
aas
jo
lahf
fs
add
mov
jo
lds
cwtl
mov
pop
pop
mov
fidivs
insl
idivl
push
stc
xor
or
outsl
fs
jo
lea
mov
xor
push
popf
xor
push
hlt
jbe
jo
xor
adc
cwtl
jo
lods
adc
push
ja
mov
pushf
std
cmp
lds
mov
or
sub
scas
push
xchg
inc
movsl
repz
pop
mov
push
jo
popa
pop
and
movsb
sub
je
xchg
mov
pop
js
mov
mov
sahf
push
jle
push
jo
xchg
sub
inc
int
test
mov
jo
dec
push
jns
lods
bound
orl
adc
clc
xor
add
test
out
sbb
fstp
inc
mov
dec
testb
jecxz
pop
push
sar
cmpb
inc
and
xchg
xchg
inc
adc
jo
movsb
or
jmp
pushf
popa
mov
in
ret
aad
pop
clc
orb
mov
and
jo
out
xlat
cmpsl
pop
adc
test
mov
je
movsb
jne
adc
fidivs
scas
mov
daa
sar
popl
out
inc
pop
js
fwait
adc
sub
mov
mov
repz
jo
subb
lret
add
xor
cmp
fdivr
js
dec
imul
je
push
gs
ret
mov
imul
int
jo
dec
adc
xor
jo
scas
add
test
and
jo
cli
mov
xchg
inc
jge
movsl
scas
aas
int
jae
inc
jo
dec
aaa
inc
add
or
sbb
out
cmp
std
nop
bound
adc
jbe
in
cmpb
mov
scas
mov
jp
jle
sbbb
idivl
sbb
cmp
jo
lahf
pop
int
or
inc
les
cmp
imul
pop
xchg
jnp
push
xor
popf
hlt
jg
jo
adc
push
jge
sbb
jo
pop
mov
leave
jo
xor
xorb
pop
and
lds
jo
or
pop
or
orb
pop
cld
xchg
jo
mov
movsb
mov
movsl
jo
popf
roll
stc
push
or
in
icebp
aaa
sahf
aad
inc
jo
ret
adc
mov
or
js
or
push
push
jle
les
into
jo
movsl
arpl
jmp
pop
aas
mov
jo
cmpl
daa
add
call
mov
pop
subb
jnp
mov
aad
lret
add
lds
inc
xchg
adcb
pop
stos
jle
inc
xchg
jo
dec
push
or
out
add
fwait
repnz
and
cli
or
loope
stos
sbb
lcall
inc
fwait
lock
aam
das
cmp
leave
lret
scas
orb
xchg
pusha
and
jo
scas
or
aam
repz
out
nop
mov
pop
loop
icebp
loope
push
ror
mov
sub
xchg
bound
jo
imul
jo
aam
add
out
negb
pusha
ret
cwtl
test
sbb
pop
insb
les
pop
xor
ret
ret
mov
out
jo
inc
jge
jl
ljmp
jo
mov
jo
add
leave
and
js
jo
push
imul
std
cwtl
inc
ret
out
pop
lahf
jo
cld
leave
test
jo
xor
add
mov
loope
rorb
jne
xchg
xchg
xorb
shld
ret
std
test
jo
sub
xlat
add
icebp
daa
jo
xor
add
pusha
push
mov
push
jno
inc
nop
dec
cli
add
pop
pop
xchg
ficompl
jo
clc
inc
lea
cmp
in
pop
cmp
push
mov
cmc
test
mov
push
icebp
shr
jno
imul
int3
in
data16
jmp
cli
rcll
jo
test
std
jo
shrb
fldt
repz
imul
pop
jo
fs
stos
jo
mov
lcall
pop
pushf
inc
xchg
push
test
data16
bound
mov
in
or
pop
stos
push
push
into
cmc
lds
sti
push
fldenv
jle
mov
shld
in
shlb
dec
jmp
jns
jo
dec
lea
outsb
sub
loop
mov
les
out
test
rorb
jo
mov
repnz
jo
scas
inc
pop
loop
mov
lds
adc
std
jo
outsb
dec
and
jo
dec
lds
jo
jle
int
push
mov
inc
adc
shll
jb
sub
xor
sbb
push
ja
clc
cmp
add
jo
pushf
sub
inc
push
mov
jo
inc
dec
lds
bound
nop
mov
dec
out
push
gs
mov
cltd
shll
push
cmpsb
add
jg
jbe
pop
popa
push
cmp
pop
ljmp
jo
sbb
icebp
sbb
sub
and
add
mov
sub
in
xor
data16
rol
jb
nop
jo
xlat
lea
cld
xor
mov
ret
mov
jo
dec
or
mov
out
fmuls
push
inc
lahf
call
lods
lds
xor
push
data16
cli
jne
pop
shr
ljmp
xchg
inc
pop
nop
loop
lds
xor
xchg
out
rclb
dec
aam
loope
pop
rcr
add
sub
sbbb
dec
xchg
jb
movsb
mov
in
push
outsl
js
nop
mov
mov
jo
ror
cmpsb
lret
aad
push
jo
cmc
loope
inc
lods
mov
ret
add
test
mov
adc
sub
shlb
sub
xchg
repnz
imul
dec
sub
mov
jno
in
sub
fdivl
sbb
cmp
mov
push
push
mov
imul
cmp
mov
repnz
jo
iret
dec
ds
pop
jo
lods
xor
and
push
fcoms
ret
cmp
in
adc
sbb
iret
jo
repnz
pop
jge
icebp
mov
mov
xchg
sahf
jmp
push
mov
mov
dec
push
jne
in
or
pushf
jns
rclb
repz
jo
push
shll
or
jo
imul
jo
mov
cli
loop
mov
jo
repz
or
dec
mov
mov
cs
iret
mov
adc
fidivl
add
jo
push
inc
addr16
sbbb
xor
dec
jle
push
mov
ss
jae
hlt
mov
dec
jb
or
sub
mov
ret
lcall
sbb
adc
lahf
dec
repz
fidivs
pop
jo
xor
in
pop
shr
inc
sub
cwtl
outsb
ret
lea
mov
rcl
in
dec
hlt
fs
inc
mov
sub
sub
sub
push
add
daa
jo
push
dec
test
jne
jo
jb
mov
outsb
adc
push
or
push
and
jb
jae
pop
pop
xchg
shll
cli
les
sub
jge
push
enter
add
pop
pop
jo
cmp
mov
add
into
or
jl
and
inc
jo
rolb
add
jne
cmp
sarl
add
pop
sbb
ds
test
insb
in
jo
ret
xchg
inc
adc
lods
xor
jb
jo
add
data16
sbb
push
lds
sbb
mov
leave
jp
xorb
out
ds
clc
popf
int3
aaa
push
push
push
jo
adcl
jo
inc
xor
int
std
jo
and
aam
mov
add
and
cmp
stos
jo
sbb
push
and
int
mov
mov
es
pop
jo
mov
repz
sub
push
fsubrs
and
cmp
movl
bound
mov
cmp
shrl
cmpsb
aam
cmp
aad
push
ja
pop
sub
push
test
push
incb
jo
adc
xchg
jo
leave
in
dec
les
daa
shll
push
xchg
dec
add
fsts
sbb
mov
push
sti
ds
scas
lds
sub
mov
dec
rcrl
push
cmpsl
sbb
lods
adc
rcl
xor
jns
jo
rorb
jmp
push
repnz
icebp
sub
and
scas
jp
jo
and
xchg
je
jo
and
mov
jo
mov
ljmp
rcll
add
nop
pop
dec
mov
xor
gs
or
cmpsb
jo
stos
jb
pusha
shll
adc
sub
mov
mov
ret
add
jo
mov
inc
divps
sbb
hlt
into
mov
out
sub
lods
adcb
lahf
push
push
push
jno
mov
mov
pop
in
out
dec
adc
dec
mov
jne
mov
pop
add
test
hlt
or
cwtl
pushf
inc
or
push
cmp
xor
mov
xchg
out
xchg
sbb
fldcw
ret
test
ja
cld
loope
xor
jo
inc
adc
jo
dec
push
lods
fldl
jo
dec
sub
xchg
pop
sbbb
mov
mov
cmp
sti
inc
and
cwtl
and
xlat
mov
repz
test
inc
icebp
shr
test
inc
add
std
lock
push
add
subb
mov
inc
xchg
push
or
add
cmp
cmpsl
push
add
test
sbb
mov
pop
cli
cmpsl
push
pop
in
xchg
test
jo
jle
jmp
push
cmp
inc
or
insb
jl,pt
jae
jmp
inc
mov
push
jo
je
lret
dec
mov
shll
pop
nop
pop
lds
int3
or
dec
add
mov
es
add
and
push
pop
push
iret
pushf
push
mov
and
push
ja
fwait
mov
mov
and
xor
and
nop
mov
loop
xchg
fnstsw
pop
add
je
out
rcrb
dec
ret
ret
mov
aas
inc
push
inc
test
and
addr16
dec
nop
mov
imul
push
jo
mov
dec
sti
jo
jnp
mov
inc
aam
xor
es
leave
arpl
xor
jo
and
jmp
lods
lahf
dec
jge
je
jb
jo
xchg
cmp
iret
stos
cli
xchg
cmpb
cwtl
and
lock
add
out
inc
xor
inc
sbb
jp
adcl
mov
gs
jo
inc
pop
or
cmp
bound
push
xchg
jnp,pn
jo
loope
jp
or
jo
mov
sahf
push
jge,pn
push
shlb
sub
es
nop
out
sbb
inc
cmc
push
jo
fimuls
jo
repnz
jns
xchg
or
test
push
jo
loop
cli
add
lahf
xchg
jne
jbe
or
sub
jo
mov
imul
pop
mov
adc
push
aaa
mov
movsb
push
jp
inc
mov
jle
jo
jne
sub
rcrb
xchg
cmp
icebp
xchg
je
fistps
xlat
adc
aad
lds
mov
cltd
leave
jo
popa
popf
jbe
cli
add
loopne
lds
add
inc
inc
jo
dec
mov
push
icebp
and
ret
arpl
inc
lea
xor
nop
mov
add
jne
outsb
mov
loopne
mov
cmc
pop
xchg
jo
mov
pop
sub
int3
out
test
aas
data16
xchg
test
pop
jo
ss
cmp
mov
jo,pn
jmp
mov
hlt
mov
jo
fnstcw
bound
dec
lds
mov
in
rcll
push
jnp
dec
ret
push
xor
lods
out
and
jae
shlb
in
arpl
mov
mov
lods
adc
sbbb
add
js
fcmove
push
lds
das
icebp
pushf
push
dec
hlt
dec
push
jo
adc
xor
cmp
leave
fisttps
jo
mov
in
jo
cmp
lds
je
jo
inc
mov
xlat
jo
bound
inc
push
movl
cmp
insl
mov
call
and
and
sub
adc
fidivl
ret
adc
shr
dec
push
shrb
xor
sub
sub
stos
out
mov
and
jge
adc
jb
rol
sbb
orb
push
mov
jo
ljmp
mov
jle
dec
mov
jo
mull
sar
iret
jo
mov
leave
shll
clc
xchg
add
addr16
nop
xchg
add
jo
popf
adcb
int3
je
add
cltd
pop
jge
in
inc
sub
dec
mov
into
push
imul
filds
mov
loope
pop
jo
xor
popa
sub
daa
les
in
or
add
jnp
jo
adc
hlt
adc
leave
test
dec
mov
inc
in
push
data16
shll
xchg
mov
cmpsb
bound
lds
pop
mov
sbb
mulb
into
jo
or
jle
push
not
sub
xor
pshufw
out
mov
shll
add
sub
mov
jo
jg
pop
xor
hlt
lds
std
xchg
outsl
cld
xchg
pop
call
int
push
push
out
hlt
xchg
xchg
jo
stos
jns
gs
in
mov
xchg
jne
cltd
xorb
dec
sub
lahf
inc
add
repz
mov
push
ret
mov
mov
mov
scas
outsl
xchg
aam
mov
inc
push
out
push
mov
jle
outsb
jo
cmp
xchg
leave
mov
sub
ljmp
rcrb
loope
bnd
in
dec
nop
lea
cld
adc
jle
out
inc
xchg
push
sti
jnp
roll
hlt
inc
or
jne
fnstcw
ss
scas
jo
xor
in
cltd
pop
lret
push
inc
ret
jle
test
jo
pop
shl
js
leave
jo
rorl
adc
shlb
push
jl
mov
or
adc
in
mov
add
or
mov
lds
cmpsl
jne
divb
cmpsb
jmp
iret
push
incl
jne
and
cmp
inc
movsl
jo
xor
mov
call
loope
mov
arpl
es
dec
imul
jnp
popa
repnz
and
jo
push
mov
jo
rorl
in
jb
jo
stos
cmp
std
arpl
inc
mov
and
je
mov
mov
fistpl
jnp
adc
enter
pop
jg
lret
push
shll
jo
in
fbstp
push
mov
sub
je
add
cmp
insl
add
and
jo
push
jl
jo
push
xchg
and
in
lds
clc
aad
cld
pop
std
repnz
sub
das
mov
inc
jp
stc
scas
in
outsl
addr16
add
push
mov
icebp
fst
mov
and
loope
mov
popf
cmovs
lock
mov
in
ret
mov
jo
test
jmp
sbb
mov
jo
inc
shrl
lock
add
inc
cmpsl
nop
lds
nop
iret
jmp
inc
imul
cmp
dec
aad
jp
xchg
addb
xchg
mov
mov
icebp
pop
adc
push
aam
mov
daa
push
jne
sti
jo
out
stc
mov
cli
push
jo
push
fbld
jb
std
jo
push
mov
jo
outsl
mov
cmpsb
jo
add
lcall
jnp
fstps
jo
aas
into
cmc
push
pop
repz
bound
mov
movsb
adc
dec
movsl
jae
sub
lock
inc
sahf
mov
or
mov
lds
daa
jecxz
mov
push
xor
xor
loop
xor
dec
orb
push
and
ja
and
adc
gs
out
mov
imul
insb
adc
push
rorb
xor
add
mov
add
jb
bound
jo
out
out
xor
mov
lret
ljmp
lds
or
push
push
loope
call
int
sub
mov
cmp
ret
jne
or
data16
ds
insl
push
mov
sbb
and
mov
jo
out
cmp
call
rcll
leave
lahf
pusha
sub
andl
jl
loope
cmpsl
or
jae
add
les
ret
int3
sbb
xor
xlat
xchg
pop
jle
scas
sbb
jo
shl
fiadds
jecxz
jmp
leave
mov
jo
xor
sub
and
adc
cld
sub
push
jge
jo
in
mov
cmp
mov
and
jo
test
dec
sub
lds
push
sub
mov
mov
mov
push
mov
inc
repz
nop
or
fwait
mov
fiadds
data16
lds
fldl
syscall
into
and
jle
filds
jo
popa
shl
push
mov
nop
aad
les
pop
enter
popa
xchg
sarb
sbbb
cmp
pop
insb
inc
jle
in
lock
mov
sub
fsubl
cs
or
dec
mov
xchg
push
frstor
fs
xor
pop
mov
outsl
inc
mov
adc
cmpsb
xorb
aaa
jne
inc
scas
inc
jo
cmp
repz
shrl
in
push
lret
push
lods
jo
pop
int
dec
scas
inc
sub
les
pop
rcrb
mov
je
dec
xchg
jo
imul
jbe
mov
mov
push
in
shlb
sbb
ljmp
mov
and
mov
push
sar
jecxz
mov
ljmp
sbb
pop
mov
add
std
lahf
mov
cmpsl
cmp
addr16
push
dec
or
add
pop
lea
dec
mov
inc
jno
fmull
clc
adc
push
add
inc
sub
dec
test
insb
mov
cmpsl
into
push
xor
jecxz
stos
add
jo
lahf
push
movsl
ds
icebp
nop
out
sub
movsb
mov
fsubrs
mov
mov
push
js
dec
push
jne
dec
cmp
lods
inc
jo
sahf
jae
pop
push
mov
je
es
shrl
test
sbbb
sbb
repnz
pop
fisttpl
add
jg
or
mov
jmp
jo
rcrl
jae
insl
jnp
mov
jo
pop
push
and
out
icebp
push
lds
or
decl
pop
xchg
jle
imul
insb
bound
pop
pop
test
pop
cltd
in
nop
inc
mov
jae
test
fdivrl
stos
jo
pop
sbb
jl
je
cmp
movsb
je
jns
test
jo
sarb
aas
push
loope
jl
fdivl
add
cmc
shlb
sbb
or
mov
gs
pop
add
push
inc
shlb
adc
mov
lahf
mov
jne
jl
mov
push
pop
cmp
icebp
jo
jmp
jbe
rcpps
cmp
sub
subb
dec
ret
les
and
add
fucom
xor
leave
in
cmpb
insl
add
data16
sub
inc
dec
and
arpl
ret
scas
aas
lds
shrl
int3
div
sub
sub
sub
jecxz
adc
arpl
xor
shrb
lods
sub
or
js
nop
mov
insl
data16
mov
push
loope
xchg
dec
jo
les
sub
xchg
iret
jp
sbb
jo
lock
jo
fmul
pop
leave
outsb
aaa
mov
push
popa
push
jle
dec
and
push
push
dec
xchg
xchg
jb
repz
fnstcw
js
mov
sbb
mov
sbb
xor
push
sar
sub
jo
sbb
xlat
ljmp
rorl
jo
jb
hlt
test
test
mov
and
jo
std
pop
mov
pusha
push
xchg
jo
leave
pop
inc
mov
repz
jo
cmp
and
inc
lods
pusha
jo
bound
push
inc
jbe
subl
out
int
sbb
neg
push
xchg
ret
mov
es
adc
arpl
inc
dec
or
ds
test
mov
mov
rolb
outsl
imul
sahf
add
mov
adc
in
sbb
push
add
es
add
jle
rol
jo
sbb
mov
js
ret
adc
add
mov
fisubrl
into
leave
jecxz
jmp
jbe
mov
ret
jno
jo
daa
add
clc
aaa
cli
adc
sbb
mov
jo
cmpsb
or
mov
clc
std
in
inc
shlb
sub
ss
jo
cltd
sub
jo
xor
xchg
mov
mov
jp
xor
je
aam
sub
scas
mov
sti
sub
jo
mov
push
jb
std
pop
jmp
ret
jecxz
or
jge
lds
lcall
out
aad
repnz
int3
movsb
lret
and
jo
sub
das
shl
adc
and
push
mov
mov
jne
testl
adc
test
jo
cmp
jo
fscale
sub
fidivl
orl
xor
xchg
iret
inc
jo
aas
adc
jo
lret
dec
int
push
mov
enter
push
dec
push
aam
shr
inc
rcrl
jno
pop
cmp
repnz
jp
mov
lds
fwait
cmpsl
fsubs
and
dec
add
add
sbb
sub
in
mov
jmp
mov
shl
rcrl
jo
push
add
rcr
mov
add
out
jo
fwait
ret
lret
mov
dec
mov
xor
mov
jo
and
rcr
dec
mov
ret
sbb
mov
xchg
in
inc
mov
dec
sbb
insl
cmc
aas
stos
js
pushf
je
jo
popf
cmpsl
outsb
jge
mov
cmp
push
lods
and
movsl
xor
push
mov
data16
jmp
jo
pushf
adc
inc
or
xor
and
dec
lahf
dec
xchg
je
adcl
mov
cmp
ret
nop
jae
xchg
js
out
push
in
sub
out
jl
add
roll
inc
mov
lcall
cmp
mov
sbb
push
scas
adc
outsl
insb
mov
and
push
jmp
imul
lcall
mov
fildll
fdivl
jb
out
xor
cmp
mov
cmp
push
xchg
pop
and
xchg
mov
jne
jo
int
ficompl
fldcw
add
scas
push
jl
or
rcrb
xor
sub
inc
test
shrl
cmpsb
insl
mov
xlat
jle
int3
pop
jno
jo
mov
call
and
aas
js
test
lea
int
pop
mov
fs
das
inc
ss
mov
and
lret
mov
push
cmpsl
les
je
inc
lcall
ja
rcll
push
mov
or
push
dec
jo
push
es
sub
insb
stc
jo
cmc
popa
inc
loop
dec
xlat
mov
sub
fdivl
dec
leave
shrl
adc
cs
push
push
jno
add
lds
adc
jo
idivl
out
push
cmp
call
mov
fldenv
inc
mov
bound
inc
lods
jo
mov
mov
xor
lcall
lods
jo
repnz
mov
jge
jo
test
fldenv
sti
dec
mov
dec
repnz
xchg
or
imul
and
je
mov
push
fistps
dec
jp
sbb
jo
enter
out
lds
fcmovb
adc
mov
xor
sbb
add
add
leave
sbb
pop
dec
divb
out
data16
addr16
inc
in
push
ja
push
mov
push
xchg
pop
xchg
mov
scas
cmovo
loop
jle
aad
out
rol
push
and
adc
inc
pop
push
add
shll
test
mov
mov
mov
xchg
jg
out
jo
and
cld
jo
jle
mov
sbbb
add
pop
data16
sar
adc
incb
jo
jno
js
push
push
addr16
jo
push
test
jo
ret
jns
shll
adc
dec
jo
adcl
push
rclb
mov
pop
aaa
cmp
push
cmp
sbb
jmp
mov
adc
or
inc
cmpsl
mov
add
icebp
in
jo
lods
push
pop
jo
lds
mov
jns
sbb
cmpsb
jo
jno
jl
stos
popa
mov
pop
pop
push
bound
jmp
or
jp
dec
popa
mov
sub
or
lods
pop
outsl
testb
xorb
repnz
std
fwait
inc
cmpl
ja
add
xor
ljmp
pushf
push
enter
ret
mulb
jo
aas
leave
in
and
das
xor
bound
test
mov
jb
aaa
lock
cmp
scas
jo
int3
clc
outsl
fyl2x
and
push
fisttps
insb
int
jle
push
out
xor
test
mov
repz
imul
and
dec
sub
dec
cmp
jo
jmp
push
roll
hlt
push
lock
jbe
push
adc
cmp
clc
and
adc
cld
and
push
je
lock
stc
sti
fwait
jo
jbe
mov
adc
jo
and
shll
mov
xor
and
lds
shll
xchg
jb
mov
ret
xlat
push
cmovge
repz
push
addr16
fnsave
call
xor
mov
fs
int3
ja
inc
mov
popa
xchg
push
xor
mov
je
je
cs
movb
pop
add
push
repz
out
pop
xor
dec
mov
jo
test
fs
lea
mov
push
mov
push
adc
notb
jo
pop
dec
add
sti
adc
jo
nop
lahf
xlat
test
add
mov
lods
pop
ret
inc
pop
les
add
mov
js
in
sbb
cmovne
mov
hlt
das
repnz
test
push
out
jnp
adc
nop
mov
lods
testl
jo
insb
push
addr16
sti
mov
jge
push
cmp
push
ljmp
jmp
push
xor
adc
adc
hlt
push
jo
mov
pop
jl
std
outsl
jge
jl
jne
jmp
nop
xchg
jo
or
loopne
sahf
jo
gs
call
rorl
mov
mov
cmp
pop
jo
addb
je
mov
jo
lock
xor
and
insb
cmpsl
jno
outsb
add
pusha
shll
xchg
mov
jo
mov
xchg
test
mov
hlt
dec
add
xor
lahf
jo
xor
shll
test
xchg
mov
jo
xor
inc
fdivl
out
pop
int
push
or
adc
add
pop
jns
jo
les
jnp
mov
xlat
lret
data16
pop
stos
fs
and
jl
jb
fiadds
sbb
int
jp
jo
cmp
stos
mov
push
lods
sbb
push
das
lock
movsb
jb
and
jo
cmp
inc
cmp
cld
jo
jecxz
out
lcall
sub
loopne
loope
bound
xchg
inc
cmpsb
xchg
imul
mov
push
aas
jo
roll
icebp
or
out
cltd
mov
jo
dec
and
pop
jno
sub
add
push
add
cli
fcoml
mov
mov
or
into
int
push
sbb
scas
push
jo
ds
lret
and
mov
nop
in
pop
jp
sbb
insb
shlb
cmp
jo
inc
movsb
fs
int
jo
shll
add
xchg
test
inc
jo
roll
mov
cld
loop
call
and
mull
or
jo
sti
rcl
rclb
lock
and
cmp
insb
sub
push
ja
push
adc
aaa
jno
icebp
add
insl
and
cmpsb
aad
out
mov
int3
jo
stos
cwtl
and
mov
in
retw
inc
xorb
pop
add
bound
cmp
arpl
sub
repz
inc
mov
loope
mov
in
add
popa
popf
fs
xor
dec
aas
jo
test
nop
adc
xor
jne
cmovg
fsubrl
jp
jo
mov
mov
jge
dec
stos
flds
xchg
cmp
fiaddl
mov
jne
jmp
mov
rolb
sub
cs
scas
push
and
adc
push
inc
push
roll
into
add
push
push
inc
jo
int3
sbb
stos
dec
adc
movsb
fistpll
add
lods
xchg
jle
push
jo
aad
pushf
push
lcall
lret
jo
fld
pop
fists
shrl
and
pop
jo
mov
inc
push
decl
pop
sub
add
notb
lahf
cmp
out
sbb
pop
xchg
imul
inc
pop
je
andl
ljmp
jo
push
dec
sbb
leave
inc
jo
stos
pop
xchg
mov
sub
sub
push
xchg
rorb
out
or
js
repz
out
pop
pcmpgtb
jo
mov
and
cmp
xchg
push
xor
aad
cwtl
aas
cld
adcb
pop
addb
scas
fdivrp
jo
pop
and
or
repnz
sahf
pushf
test
push
sub
sbb
inc
cmp
test
mov
std
sbbl
ret
and
in
sub
xor
jmp
jecxz
es
sarl
jo
inc
jns
mov
in
mov
cmp
iret
orb
pop
sbb
sub
dec
jo
and
push
cli
int3
dec
jo
loop
xchg
pop
lds
xor
lret
stos
gs
stc
leave
xchg
jo
push
test
jmp
lds
push
ja
dec
add
mov
int3
cmp
push
jns
sbb
loop
jo
pop
xchg
jle
jnp
movsl
or
bnd
lods
pusha
daa
jo
movb
sbb
rclb
jo
test
cmp
fcmovnb
xor
jmp
cmp
push
inc
leave
xchg
into
insb
insb
movsl
arpl
cmp
aad
mov
push
test
clc
outsb
xchg
mov
fs
cmp
addb
aad
inc
mov
cli
outsl
jmp
mov
js
sahf
out
push
sub
push
cmp
pop
cltd
inc
or
js
jg
imul
lds
sub
xchg
or
fisttpl
adc
cmp
in
aaa
sbbb
xor
inc
xorl
popa
cmp
jo
aas
or
les
mov
jo
arpl
loopne
mov
mov
push
cld
sbb
faddp
jmp
mov
fdivrp
out
repz
adc
inc
or
scas
test
mov
lds
dec
mov
cmpsl
sbb
dec
jo
cmpsb
jns
insb
mov
sbb
jg
pop
pop
fs
pop
add
lods
popa
insb
sahf
jbe
mov
ret
jmp
or
xor
jo
shrb
repz
push
ss
stos
xchg
cmp
cmp
sahf
push
cltd
dec
inc
mov
adc
xor
jmp
insl
sbb
push
in
and
outsb
dec
xchg
movsl
jle
inc
jnp
movsb
sbb
add
and
cmp
mov
push
xor
aaa
fs
movsb
lret
addl
sub
ss
popa
add
pop
fbstp
jo
movsl
mov
jo
aaa
and
data16
imul
or
sti
jo
pop
push
sbb
and
dec
jo
jp
inc
cs
push
loop
fldcw
mov
jo
bound
inc
inc
inc
add
jae
dec
mov
mov
mov
mov
xchg
in
or
shrl
cmp
ret
or
cwtl
dec
mov
inc
in
js
cmpsb
roll
dec
popf
jbe
mov
xlat
sbb
cltd
sub
aam
jmp
xor
jo
sbbl
mov
xchg
inc
jo
nop
cwtl
icebp
gs
add
mov
arpl
aas
jo
popa
cs
imul
roll
fidivl
jmp
in
mov
call
ret
jo
and
ror
pop
lret
int3
inc
cld
cmp
jo
mov
addl
aas
pop
push
nop
loop
adc
push
mov
sub
mov
xor
jecxz
jo
data16
cmpb
push
jo
adc
adc
xor
loop
cmp
insb
std
pop
jo
push
ret
sahf
jp
push
rol
imul
je
fxch
xor
adc
std
cmp
repnz
sub
mov
inc
jo
and
js
jo
mov
add
daa
jmp
sbb
enter
pop
addr16
mov
mov
outsb
mov
lret
cmp
push
in
mov
mov
xchg
add
lods
jmp
sub
add
sub
std
mov
test
add
pop
mov
js
push
or
push
subb
add
out
iret
add
movsb
jo
mov
xor
xchg
cmp
jo
push
popa
pop
pop
test
jo
mov
ret
jle
or
stc
jb
xchg
ret
je
out
push
out
in
mov
mov
mov
js
repz
adc
sbb
jo
std
fdivrs
mov
in
xlat
js
mov
dec
inc
pop
cmp
outsl
aaa
mov
mov
push
pop
fs
pop
jo
push
vpshufd
and
in
je
add
pop
pop
cmp
and
stos
mov
into
dec
shll
jo
push
fwait
lahf
aad
repnz
dec
fisubs
cmp
int3
xor
sbb
xchg
shll
jo,pt
mov
push
mov
jo
lds
insl
fdivl
shl
push
divl
sbb
xchg
in
int
jnp
mov
and
insl
or
jmp
jo
mov
dec
movsl
movb
stos
pop
int3
push
rcrl
inc
mov
hlt
jo
test
and
adc
jge
jne
mov
into
aad
enter
addps
aas
les
or
shll
fbld
das
outsb
popa
enter
push
xor
cmc
pop
jb
popf
pop
xor
stc
mov
push
jo
fsubl
lds
nop
inc
call
mov
push
push
jge
leave
jno
std
hlt
inc
rcll
icebp
insb
ja
cmp
add
out
add
fidivs
add
or
pop
fnsave
or
fs
wbinvd
jo
inc
lea
ret
imul
add
fmuls
push
mov
inc
push
je
movsl
jo
pop
mull
in
jo
in
sub
int
xlat
inc
cmc
jo
arpl
xor
cs
mov
and
adc
jo
mov
or
jo
jmp
faddp
jo
jg
xchg
ja
adc
or
dec
stos
jo
jp
jl
in
push
push
pop
jecxz
mov
add
sbb
loopne
daa
mov
or
sbb
mov
sub
jge
pop
lds
nop
adc
jno
lret
jo
mov
stos
inc
frstor
jb
or
mov
lds
dec
xchg
stos
mov
leave
sbb
pop
std
inc
sub
arpl
and
subb
jo
xchg
js
scas
iret
int
xor
pop
xor
ds
lret
jo
push
ret
test
es
imul
repz
lods
adc
ret
subb
jne
hlt
or
lea
jo
jl
and
jo,pn
push
dec
lods
imul
mov
jae
mov
icebp
int
popa
pop
pop
ret
lock
mov
js
aam
leave
jo
into
cmp
xchg
inc
sbb
sub
inc
mov
in
dec
adc
fistpl
nop
xor
dec
test
xor
lret
jo
cmp
fnsave
mov
outsl
in
out
cmp
push
daa
mov
js
adc
cmpb
xchg
enter
jo
test
sbb
je
jo
vmovaps
xorl
out
ljmp
jo
mov
adc
das
or
push
adc
and
pop
lret
jb
shrb
jae
add
leave
jo
dec
push
and
sub
jo
push
mov
mulb
cwtl
outsl
jo
or
ss
mov
insl
inc
push
xor
shlb
jo
push
and
mov
sub
js
clc
push
jo
or
lds
int3
lock
es
jno
nop
adc
scas
push
adc
out
mov
jne
rcrb
pop
push
jge
pop
test
add
mov
pop
mov
dec
jns
jo
std
scas
mov
cmp
mov
rolb
pop
sub
jb
dec
jp
out
bound
push
xchg
bound
jbe
add
out
clc
leave
pop
addl
subb
adc
pop
out
lret
jle
inc
sub
and
shll
inc
ret
mov
mov
outsl
fsubr
cmp
and
inc
mov
add
pop
cs
arpl
fnstenv
jo
in
inc
scas
dec
das
in
mov
push
addr16
pop
adc
mov
hlt
enter
dec
fsubs
dec
out
sub
fiaddl
ret
cmc
icebp
movsb
jo
pop
rcrl
xchg
pop
push
inc
sbb
jmp
out
scas
sahf
roll
imul
mov
jp
faddl
and
ret
and
das
push
dec
or
push
dec
ljmp
ret
push
hlt
push
sbb
jle
jo
mov
add
cmpsl
adcl
cmc
mov
ss
jo
lods
and
mov
out
and
movsb
lahf
push
and
shlb
popf
mov
cmp
mov
dec
fsubrl
pop
jmp
outsl
jmp
fwait
mov
mov
push
mov
dec
cmp
stos
add
leave
lds
ret
sti
dec
test
fiaddl
jnp
mov
movsl
adc
divb
lds
jo
cmp
shll
cmp
jo
adc
jo
cld
sub
stos
leave
mov
jo
mov
or
cwtl
lds
mov
sbb
cs
jo
movsb
iret
ja
inc
pusha
leave
jo
xor
shll
ret
js
clc
sarl
sbb
fwait
in
push
jo
jle
mov
jecxz
adc
xchg
mov
sbb
lods
or
jo
mov
cmc
popa
pop
mov
jo
jp
xchg
inc
ret
hlt
and
jl
adc
sub
cmp
in
sbb
sarl
xchg
xchg
fcomip
jo
mov
xor
mov
xor
idivl
nop
cmp
out
ja
sbb
jo
mov
call
aaa
mov
or
jo
adc
mov
sub
lock
mov
shll
xchg
mov
cmp
pop
dec
jo
jp
push
adc
jo
xcrypt-cbc
cmpsl
xchg
jecxz
mov
jo
jns
xor
xchg
ret
xor
mov
pop
cmp
inc
fs
sahf
jo
mov
adc
dec
xor
das
xor
xor
inc
divl
or
ret
dec
repz
jo
cmc
fidivl
movsl
jp
inc
mov
adc
inc
aam
aad
dec
mov
nop
cmp
jo
jb
sahf
sbb
push
cld
xorb
jb
jae
push
sbb
xchg
ret
xlat
cltd
jb
jp
jmp
aas
out
stos
cmp
out
jo
mov
and
xor
jns
jo
ja
add
mov
xchg
imul
cmp
sbb
push
xchg
iret
xorb
mov
and
add
xor
sti
push
mov
in
insb
popa
divb
mov
pop
xorb
adc
cmp
push
add
jns
dec
cltd
jo
push
and
cs
movl
adc
pop
lds
cmc
sub
add
in
mov
push
jb
dec
xchg
ds
or
push
bound
jmp
pop
ret
cmpsl
pop
arpl
jo
lds
adc
add
nop
movsl
mov
mov
ret
scas
pop
mov
jo
sahf
jae
dec
mov
imul
es
jo
sub
or
aad
in
mov
insl
rcrb
jo
inc
mov
imul
lods
int
mov
cwtl
inc
jnp
mov
jge
ret
test
pop
addr16
fs
sbb
push
or
cmp
mov
jo
lds
xchg
jl
jle
nop
mov
ja
jns
jo
imull
icebp
test
jo
inc
fildll
or
jo
out
lds
sub
pop
push
dec
cmp
xor
mov
sbb
mov
adc
js
mov
cmpsl
shll
cmp
test
adc
push
add
xchg
inc
fs
fidivl
insl
cmp
jo
mov
xor
les
inc
je
jg,pn
pop
jge
lret
in
imul
cmp
ja
scas
pop
or
dec
cmp
mov
push
aas
repz
mov
inc
jle
mov
inc
dec
push
mov
inc
shlb
test
ljmp
xchg
in
and
add
xor
mov
sbb
fucomp
inc
daa
push
dec
xor
inc
add
jno
push
push
lahf
out
push
nop
push
xor
or
add
or
int3
xor
jo
sub
xlat
jl
int
mov
ficoms
test
pop
repnz
fdivrs
mov
ret
mov
cmp
sbb
in
jo
and
popa
mov
xchg
or
ret
pop
jae
fs
fsubrp
and
jo
cmpsb
push
popa
jo
mov
ret
jl
rolb
leave
subb
jno
jmp
and
jo
andl
or
andb
sub
jo
ret
fcomi
inc
scas
mov
sub
jno
pushl
jo
push
xorl
push
mov
pusha
and
or
xor
and
loopne
ret
jle
sub
js
fnstsw
xor
mov
aas
lret
mov
mov
sbb
push
sar
cmpsb
or
int3
cmp
gs
jo
xchg
xor
ret
inc
xor
xlat
jns
loop
push
loope
adc
mov
inc
and
jo
sbb
pusha
cmpsl
add
add
lcall
popa
mov
jl
mov
jle
loope
into
cwtl
call
mov
fwait
xor
shll
push
into
jecxz
in
cmpl
add
jl
repz
jo
iret
and
mov
addr16
sbb
sub
mov
push
icebp
sub
cli
cmp
jo
lret
ret
mov
orb
cmp
pushf
xor
jae
sbb
xor
jo
lds
addr16
fcmovnb
sub
jo
adc
push
test
cld
das
xor
jo
gs
orb
movsl
push
xor
test
fs
mov
xchg
repnz
jo
js
jecxz
nop
jo
and
xchg
jno
popa
sub
cli
in
aad
je
mov
xor
push
xlat
andl
jge
jo
dec
lea
pop
pop
mov
inc
fdivs
jo
bound
mov
jo
sub
mov
sbb
mov
xor
stos
out
adc
cmpb
xor
sbb
xchg
push
pop
pop
mov
cmp
inc
mov
push
dec
mov
push
repz
and
adc
pop
jo
lods
xor
int3
mov
repnz
sub
pop
add
mov
mov
sub
bound
inc
sbb
jmp
adcb
insl
mov
cmc
mov
inc
jo
or
xor
jg
lods
jo
dec
sub
push
repz
cs
jge
cmpsw
xor
jo
sbb
and
xchg
jo
mov
jo
int
add
jo
inc
cmpsb
adc
xchg
clc
xorl
add
and
push
mov
push
mov
jo
loop
imul
sbb
lea
fldcw
xor
dec
cmp
lock
popa
jo
pop
sbb
cli
xor
loope
je
jo
xchg
jno
sbb
jp
dec
and
xchg
faddp
test
ljmp
xchg
aad
test
add
mov
jo
pop
mov
daa
jo
pusha
ffree
clc
mov
and
loopne
mov
aad
lock
add
push
mov
ret
mov
mov
cwtl
jno
sub
loope
push
out
inc
jo
call
xchg
jae
jo
cmp
mov
pushf
cmpsb
push
rclb
jne
sub
out
repz
bound
jbe
jo
mov
add
icebp
adc
ret
mov
jo
fists
andl
in
jno
jns
pushl
ja
jl
sub
push
add
mov
xor
mov
mov
mov
xor
aad
ds
insb
adc
jns
sub
insl
jle
int
fcom
pushaw
jo
std
leave
mov
enter
dec
xchg
loop
arpl
and
jo
movsb
pusha
xor
out
inc
jo
ret
push
pop
out
daa
or
pop
jo
bound
scas
fstps
dec
inc
movsl
roll
subb
shl
es
popf
fidivl
orl
ret
out
dec
jo
inc
cs
dec
mov
mov
es
scas
push
jo
xchg
sahf
sti
fimull
sarl
fs
std
push
xor
leave
push
xchg
jo
ja
adc
jo
or
sahf
xor
jo
cmc
adc
mov
shlb
fwait
js
mov
lahf
aad
adc
or
popa
jmp
leave
rol
mov
out
jl
jo
xchg
jmp
xor
xlat
shll
adc
cld
mov
jo
sub
add
dec
loopne
jo
pop
les
xchg
js
inc
mov
jo
pushf
mov
mov
das
call
je
int3
mov
jo
mov
pop
mov
es
pop
scas
and
xchg
jo
cmp
add
or
repnz
cmp
push
sti
std
dec
ret
mov
jno
jbe
jo
inc
pushf
rcl
mov
shlb
push
xchg
pop
into
cmpb
xor
mov
sub
pop
push
xchg
mov
mov
mov
addr16
nop
pop
lds
rep
mov
mov
ljmp
xlat
jo
in
test
into
cld
jmp
mov
push
cwtl
insl
lock
jge
or
js
sub
xchg
cmc
sahf
ss
in
sub
aas
xor
sub
jo
xor
sbb
jo
mov
cmpb
std
xor
or
call
imul
cli
jo
cmpl
lret
movsw
jo
add
mov
repnz
jb
jo
jno
cmp
xor
repz
fucomip
add
and
orb
inc
jne
sbbl
into
imul
bound
fildl
lods
movsb
xchg
adcb
sbb
or
fisubl
dec
adc
lock
mov
js
sbb
rol
jo
out
daa
pop
iret
test
dec
in
cmp
movsb
out
out
jbe
fucom
fs
lds
jo,pt
scas
push
mov
jo
icebp
and
xor
pop
in
leave
push
pushf
mov
das
jae
jbe
push
sub
pop
lcall
adc
test
std
mov
cltd
cli
scas
xchg
fnsave
or
cmp
out
jne
jo
cmp
sub
mov
idivl
popf
sub
or
mov
dec
mov
mov
lods
inc
jno
into
js
and
stc
bound
ja
jo
cmp
sub
lret
loopne
xchg
xchg
jo
mov
xor
stos
scas
cmp
jbe
js
mov
xchg
shl
fwait
sbb
lret
ret
adc
pop
iret
jo
addr16
cmp
dec
jo
push
cmp
es
push
in
imul
fsubrp
sub
repnz
scas
ret
loop
xchg
mov
cmpsb
mov
cli
mov
arpl
push
jo
jmp
rclb
mov
pop
scas
or
push
movsb
pop
pop
scas
js
into
jo
inc
xchg
inc
test
leave
scas
jp
add
fcomps
lds
sahf
js
and
push
scas
jl
stos
insb
jns
mov
loope
in
sub
call
adc
dec
arpl
xor
mov
js
addl
bound
icebp
jae
cs
ret
mov
inc
rcr
in
in
dec
add
jo
lcall
sub
js
push
jo
xor
ss
xlat
call
nop
testl
push
cmp
dec
cli
and
insb
mov
cmc
mov
push
rcr
push
xchg
jo
cmp
out
jecxz
jo
cmpsb
ret
jns
sub
push
test
add
pop
or
xor
jo
ss
mov
popf
loope
pop
inc
mov
mov
and
dec
xor
mov
xchg
mov
aas
add
lds
adc
mov
pop
lea
or
mov
push
test
add
fs
adc
leave
ret
jo
in
sub
iret
and
cmp
out
jo
clc
dec
mov
mov
xchg
test
call
pop
jecxz
xorl
jo
bound
add
adc
inc
shrl
mov
je
in
scas
adc
cmc
jo
cmpsb
je
mov
leave
inc
cltd
shrd
xor
jo
lds
jo
pop
mov
repz
dec
inc
aam
test
insl
add
repnz
leave
cltd
jmp
test
popf
sti
jo
lds
lahf
xor
jnp
dec
cli
hlt
jmp
bswap
cmpsl
jmp
rcr
or
mov
les
jo
inc
pop
aam
js
mov
cmp
ja
in
push
xchg
enter
xor
bound
pop
push
xchg
leave
sbb
jbe
fwait
cmpsl
nop
sub
ja
mov
sub
push
jo
js
lcall
xchg
sbb
lahf
mov
loope
data16
rolb
js
inc
mov
or
fisubrl
fdiv
jno
mov
xor
jp
or
cmp
mov
lds
fists
test
push
cmp
por
das
dec
outsl
mov
jo
xchg
popa
mov
enter
in
push
xchg
movsl
jg
insb
sub
stc
or
mov
arpl
mov
aad
jle
int
mov
inc
mov
jo
dec
cmp
jo
jae
es
cli
push
lcall
fsubl
xchg
jmp
mov
arpl
push
add
mov
daa
aam
imul
and
jo
mov
sub
jo
in
cmp
mov
xchg
jmp
push
ret
aaa
adc
jo
mov
aam
push
sub
test
jb
inc
sub
shlb
test
adcb
int3
pop
jo
cmpb
pop
sub
xchg
sbb
shrb
jo
adcb
outsl
jo
mov
ficoms
xor
ds
jmp
inc
bound
sbb
or
es
push
xchg
cmpsb
cmp
xchg
push
sub
add
cmovae
mov
adc
mov
mov
pop
mov
jo
mov
jle
or
mov
hlt
in
dec
xchg
jo
cmp
push
cs
imul
inc
pop
mov
xchg
add
jno
ud2
mov
mov
jo
fs
cmpsl
pusha
test
into
gs
loopne
out
jl
sti
pop
orb
jo
fdivp
push
ja
les
out
out
loope
cmp
or
jo
ficompl
mov
aad
insl
xor
inc
jo
xchg
inc
loope
xor
lds
adc
cld
xchg
out
sub
jb
lahf
sti
push
arpl
sub
orl
out
xor
repnz
or
stos
sub
fbstp
in
push
jo
add
pop
sbb
and
out
cmpsl
jge
sub
push
mov
mov
xorb
cmp
xchg
inc
sti
les
movsl
mov
loopne
inc
push
js
cmp
jo
popf
mov
test
mov
out
sub
push
imul
cmp
xor
push
and
sbb
imul
test
jns
jo
int3
shll
cwtl
inc
sub
les
out
pusha
test
popf
jo
dec
jl
push
inc
jo
pop
or
cmc
andnps
lock
nop
dec
mov
pop
mov
adc
dec
push
sbb
leave
xchg
lods
jo
push
mov
jo
pop
stos
gs
lds
nop
scas
pop
xchg
pop
jne
ja
shrb
push
iret
cwtl
test
mov
shll
lock
repz
mov
add
or
jo
mov
sbb
jo
inc
sbb
lret
fisubrs
ret
sbbl
mov
dec
push
jne
subb
or
adcl
push
rcrl
gs
jo
inc
mov
xlat
dec
push
std
cmovge
loopne
jle
xchg
xchg
jo
repz
jecxz
sub
sub
inc
cmp
or
out
dec
mov
sub
mov
xchg
test
or
mov
int
lcall
cmpsl
orl
push
adc
sub
jp
mov
aaa
leave
mov
and
shlb
push
psubw
imul
jl
ret
xchg
aas
jmp
test
dec
jb
js
add
push
jo
mov
add
mov
pop
movsl
xchg
push
test
and
jecxz
in
xchg
xor
fisttpl
popa
test
packssdw
push
js
xchg
int3
jo
mov
or
jo
jge
movsl
test
ljmp
and
xorb
flds
or
jo
mov
sbb
insb
fwait
pop
mov
aam
out
lea
test
push
mov
adc
out
sbb
mov
ds
mov
and
sbb
pushf
pop
xor
push
jp
std
or
mov
insl
loop
adc
sub
les
das
jecxz
ss
jo
or
cmp
sub
push
jmp
xchg
dec
out
rcrl
mov
repnz
inc
jge
mov
lds
mov
fldl
inc
ret
addr16
imul
inc
inc
adc
gs
andb
ret
jo
inc
stos
jbe
fmull
imul
sub
push
jo
mov
push
xchg
lds
wrmsr
mov
inc
jo
and
nop
pop
jae
cmp
jo
and
pop
loope
in
mov
stos
push
mov
jne
and
mov
mov
lret
mov
sbb
std
mov
jo
mov
jo
jb
sub
sbb
xor
int
ss
jo
stc
xchg
sti
or
lcall
pop
jae
aaa
data16
lds
loope
fdivrl
inc
mov
bound
adc
jecxz
mov
mov
jg
xchg
out
jne
jl
ds
jo
lcall
jo
mov
ret
inc
loop
jge
test
and
push
addr16
jle
jo
lcall
in
xchg
mov
jno
sub
jo
in
push
rcll
dec
jo
leave
sbb
test
divl
jmp
adc
cmpsb
push
jge
pop
inc
add
js
repz
lcall
push
aam
cmp
jmp
in
popa
clc
xchg
jo
je
pop
or
jo
out
pop
xchg
mov
lret
lock
test
jo
and
in
test
push
ja
repz
sbb
or
sub
shll
scas
pushf
adc
and
icebp
addr16
cmpsb
dec
ds
jo
lock
adc
dec
push
sub
outsb
sbbb
lret
pushl
pop
das
rcl
loope
std
mov
jo
movhps
add
pop
xor
mov
rcl
insb
sbb
jg
cmp
jo
xor
leave
in
cs
jo
xor
inc
cmc
cltd
jo
sbb
dec
xor
mov
lret
jp
jo
sbb
std
scas
add
pop
or
push
mov
out
aaa
pop
jo
mov
repnz
dec
flds
test
push
lea
inc
pop
push
loope
jo
inc
addl
inc
stos
jo
std
js
stc
inc
inc
xchg
shlb
jbe
sahf
mov
fildll
pop
jo
rol
adc
les
add
adc
push
mov
movsb
jne
clc
mov
rcr
jo
pop
pop
mov
inc
fnstenv
or
dec
ss
loopne
pop
fildl
mov
test
sti
jo
je
jp
aad
cmp
adc
mov
jae
and
das
orb
iret
movsb
jnp
jmp
or
jecxz
and
nop
jns
mov
mov
ds
inc
cli
jo
pop
mov
inc
shlb
jge
jo
mov
int
repz
sub
mov
daa
fwait
add
add
jo
and
and
mov
jle
jo
mov
test
data16
jo
shl
fstps
roll
xchg
sub
lds
adc
lret
adc
aaa
jo
sub
xor
aas
out
jns
js
es
dec
icebp
fsubl
lock
js
scas
add
das
dec
dec
xchg
add
in
ljmp
outsb
icebp
jecxz
shl
leave
insb
and
in
pop
jle
or
stos
jmp
ja
and
out
loop
push
sub
imul
rorl
xlat
test
stos
push
jge
push
jo
cmp
loopne
inc
pop
inc
jo
in
in
int3
mov
xor
fisubl
mov
icebp
sub
jo
fildll
test
aad
push
and
jo
jb
lea
sub
jmp
pusha
inc
xchg
cwtl
je
mov
shll
mov
ret
push
cli
sub
jno
cmp
ja
jo
dec
xchg
imull
insb
and
adc
cmp
gs
in
sub
add
inc
and
sbb
arpl
sbb
roll
push
jo
in
leave
scas
or
fnstenv
and
mov
jo
jbe
jg
xor
push
mov
jo
mov
fildl
inc
out
xchg
push
daa
mov
jo
cmp
and
inc
cmp
sahf
shll
aam
bound
nop
or
ja
pop
ljmp
mov
aaa
shll
or
dec
jmp
in
xbegin
ret
fldcw
or
jo
adc
mov
jo
mov
movsb
xchg
jne
or
into
pop
addb
icebp
push
sarl
jge
jo
mull
mov
nop
or
popf
mov
insl
fstpt
mov
das
sub
gs
test
fildl
cmp
lret
pop
sub
aad
imul
mov
insl
in
fs
aas
sub
add
adc
cld
and
xchg
std
sub
aad
cmp
and
jo
jb
or
int
cmp
push
mov
push
iret
push
jo
lret
loopne
out
or
jo
stos
mov
lea
and
lds
lcall
cmpb
xchg
andb
in
iret
dec
jo
sbb
mov
add
outsl
cmpsb
pop
mov
jnp
adc
jo
popa
dec
xor
jo
add
push
jo
mov
xorb
xchg
rorb
pop
movsw
or
and
repz
xchg
bound
or
push
xor
rorl
flds
fidivrs
inc
negl
xlat
sbb
jo
and
sub
mov
pop
push
and
jo
int
in
insl
loopne
jo
stc
add
jne
or
and
dec
inc
add
lock
add
lods
in
xchg
lcall
ljmp
stos
movsb
jo
loop
popf
hlt
pop
push
ret
dec
mov
cmp
int3
add
dec
mov
std
push
and
rorb
lret
adc
movsl
xchg
mov
cltd
leave
mov
jecxz
ds
in
mov
lcall
imul
inc
mov
adc
test
cltd
xor
and
cs
jecxz
xchg
jo
mov
jbe
push
xor
xor
jo
mov
cmp
mov
pop
repz
vpshuflw
movsb
xor
cs
jp
and
bound
cmc
and
xor
jo
int3
mov
inc
jo
mov
jb
nop
imul
test
sub
add
jle
sti
cmp
test
lcall
cmp
sbb
mov
jo
ds
fsts
mov
adc
lret
dec
mull
jp
loope
mov
ss
lahf
rcrl
iret
pop
mov
sub
divl
dec
in
xor
cmp
xchg
push
add
stos
insb
fucomip
adc
jae
cmc
add
bound
mov
jle
pop
adc
xchg
jp
jmp
lea
push
call
in
ret
andb
mov
test
jo
add
fdivrl
in
scas
leave
mov
jmp
push
bnd
out
pop
popa
fnstcw
jl
mov
add
jo
mov
cld
les
jo,pt
loopne
imul
add
loop
aam
push
pushf
int3
jp
push
shl
jo
dec
jmp
ret
fidivl
lds
push
aaa
push
dec
stos
insb
jl
arpl
hlt
jo
xor
fnsave
js
inc
and
ss
stc
ret
sbb
jo
dec
out
stos
push
xchg
lock
jo
dec
aas
push
ror
or
jp
sti
jne
out
seto
movsb
imul
push
jo
sbb
rclb
sbb
in
pop
jne
out
in
sub
add
rorb
insb
jo
jnp
repz
pop
mov
fs
sub
mulb
int
jecxz
pop
int3
in
insl
xor
jo
push
popl
fnstenv
mov
out
and
sbb
sahf
ret
jbe
push
inc
jns
jle
in
push
aas
xchg
jo
stc
jl
mov
add
je
mov
dec
push
dec
push
fs
rclb
call
jp
movsl
sub
jnp
or
xor
dec
fdiv
lds
shrb
shrb
push
cs
js
sbb
js
cmp
xchg
orb
ret
rcll
vmovdqa
xrelease
insb
jo
cwtl
xor
inc
push
mov
cmp
sbbb
shll
shufps
bound
jbe
repnz
ja
rolb
or
popf
nop
dec
jnp
mov
cltd
push
js
dec
out
xorb
mov
movsb
push
scas
push
shll
ljmp
out
mov
push
xor
push
in
aas
test
adc
aaa
cli
inc
jo
sub
pusha
gs
jo
add
xor
jae
loop
das
cmc
xchg
sbbl
sbb
vfrczss
add
push
gs
in
mov
xchg
mov
sbb
add
dec
shl
xchg
std
jo
adc
xchg
inc
and
les
jae
sub
jo
add
jo
mov
repz
xchg
cmc
jo
mov
addr16
jo
and
cs
mov
scas
lea
mov
xchg
bt
leave
mov
aam
jo
cli
aas
lds
inc
decb
adcb
or
or
pop
data16
and
pop
test
dec
cmpl
aam
cmc
and
jl
mov
dec
and
std
imul
and
stos
mov
movq
add
aaa
jp
addr16
shr
pop
xchg
push
or
insb
and
jo
mov
sbb
fnstenv
je
jo
pop
sub
xchg
jle
jo
add
test
je
shlb
inc
cmp
std
push
mov
nop
into
jecxz
pop
jo
lahf
pusha
in
pushf
mov
les
jo
test
mov
cmpsb
jo
inc
jle
fs
movsb
shrb
stos
jo
popf
cs
sub
jo
aas
mov
xor
inc
jo
pop
xor
inc
rdtsc
test
inc
xorl
xchg
outsb
rorb
imul
push
jo
imul
scas
fcomip
jb
test
jbe
fnstsw
dec
sbb
xor
cmp
dec
bound
fmull
lock
pop
mov
in
mov
push
out
xchg
sub
arpl
in
sbb
leave
nop
jmp
daa
pop
frstor
adc
je
jo
or
inc
cmc
jns
jo
subb
mov
shll
dec
mov
das
inc
cwtl
and
mov
cmpsb
pop
and
mov
sbb
sbb
sbb
rorl
paddd
mov
ret
repnz
xor
cmpb
lret
inc
adc
pop
sub
fdivp
movsb
xor
in
inc
mov
jg
icebp
dec
push
xchg
in
jb
enter
jl
cs
lcall
cmpsl
data16
in
fsubrs
push
jmp
mov
adc
pop
inc
mov
lcall
dec
jecxz
adc
jo
rcpps
mov
cld
popf
push
addb
cli
sub
sbb
adc
lret
jo
xor
or
data16
jo
add
out
sbb
repz
jo
icebp
cmp
lds
pusha
jo
test
sub
dec
orl
je
push
jb
jl
mov
inc
insb
movsb
icebp
push
adc
je
int
testb
cmp
cli
sbb
xchg
cmp
test
orb
adc
shrl
inc
stos
dec
lahf
jo
mov
or
cs
fs
daa
rcl
adc
insl
lret
jo
lcall
jo
leave
mov
jo
loop
pop
lds
sbb
push
ja
push
call
dec
ljmp
js
mov
lahf
sub
xchg
mov
jbe
pushf
js
push
mov
jo
movsl
cmpsl
jae
int3
mov
xchg
jnp
jo
pusha
mov
dec
es
push
cs
dec
dec
les
faddl
push
ret
int3
inc
mov
jl
push
push
jo
xchg
sti
cwtl
std
test
sbb
and
jge
out
popa
jo
adc
lds
fisttpl
jo
or
jo
sub
rcll
gs
jo
lds
mov
cltd
shll
add
jne
addr16
ss
popf
arpl
mov
mov
add
iret
jp
inc
ret
outsl
test
jo
cmp
lds
gs
pop
sub
leave
push
cmp
sub
ds
test
add
icebp
rolb
mov
ret
mov
jo
sub
fwait
add
movsb
xchg
les
vpshld
sub
jge
scas
xor
movsb
cmp
adc
cld
push
sub
inc
hlt
cmp
or
xchg
or
jo
pop
test
lds
out
jo
inc
in
sub
idivb
push
aad
xchg
lcall
stc
or
in
lea
adc
fld
or
jb
xchg
out
mov
pop
jo
xchg
fsubl
push
jo
cmp
insb
arpl
sbbb
pop
mov
jo
lds
adc
shlb
pop
insl
je
adc
add
push
imul
loope
mov
cmova
and
sub
push
jo
outsl
xor
repz
jp
jo
mov
adc
and
aaa
sub
xchg
sub
jge
adc
cmp
mov
cld
inc
sub
pop
jg
mov
lret
lock
fcmovbe
or
mov
cmpb
jo
int
pushf
fistl
imul
push
push
pop
popa
hlt
fsubrs
icebp
mov
add
pop
mov
loope
fnstenv
adc
lds
mov
sub
jmp
stos
ret
and
sbb
lds
cs
repz
outsl
dec
jle
jo
and
in
into
cli
xor
mov
test
inc
inc
icebp
xchg
inc
ljmp
push
loope
or
aam
das
test
jo
movsl
xchg
pop
fdivl
shll
ja
roll
sbb
mov
or
mov
lea
push
test
mov
aaa
lods
jo
cltd
ret
xchg
out
jo
in
dec
add
pop
mov
jo
jbe
pusha
adc
xchg
leave
jo
lcall
jo
test
hlt
push
or
in
jo
cmp
push
pop
stc
jo
aam
bswap
je
leave
jo
lods
dec
or
scas
add
jl
jo
movsb
data16
fidivrl
mov
fcomps
pop
xor
das
inc
push
fldenv
bnd
in
sub
adc
lds
mov
push
ss
je
mov
daa
aam
sbbl
and
add
jecxz
push
jo
std
out
fcomps
ret
cmp
fstpt
lds
fbstp
xchg
aas
xor
jo
pop
or
fs
jo
inc
scas
push
mov
jmp
sbb
or
out
xchg
cmp
cmpsb
jo
aad
sub
jo
jno
mov
subl
mov
lds
mov
or
mov
ljmp
xor
popa
leave
sahf
dec
pop
mov
sbb
dec
mov
fs
mov
js
jnp
dec
pop
jo
cmp
int
shrl
mov
and
hlt
fwait
xor
roll
xor
jb
cmpsl
mov
xor
push
mov
mov
sbb
push
mov
mov
js
adc
dec
push
imul
lods
or
repz
ja
xchg
lock
pop
xor
inc
pop
jp
push
aad
mov
or
jo
dec
xor
push
sub
mov
in
or
sbb
xor
mov
andb
add
push
sub
push
cltd
adc
aad
dec
gs
jo
mov
mov
jo
inc
xchg
inc
push
stos
and
jo
adc
int3
inc
push
mov
push
push
std
out
bound
push
js
sub
mov
adc
jmp
adc
jo
in
xchg
and
jo
test
lds
sbb
fcomps
jo
cs
push
andl
test
cwtl
shll
sbb
push
mov
push
add
mov
mov
sub
mov
adc
cmpsl
push
lret
loop
jo
rcll
std
push
roll
xchg
ret
insb
jnp
jbe
xchg
jo
cmp
sahf
nop
shl
sbb
call
mov
sub
fidivrs
pop
push
jae
hlt
jo
popf
mov
loop
cmp
pusha
jo
rcrl
repz
rclb
sbb
jo
pusha
ret
xor
jb
mov
ljmp
jo
xor
mov
mov
stc
movd
ret
add
ficoml
add
jo
cmp
xchg
out
mov
jle
int
push
xor
leave
daa
lret
sub
cmp
push
sub
lds
mov
xor
dec
lock
fs
mov
test
loop
ss
xor
jo
es
add
cmp
sub
jo
push
js
test
push
jo
pushf
popf
lea
mov
iret
fcomps
clc
shrl
mov
inc
add
pop
iret
sbb
in
push
jo
pushf
fldl
mov
mov
add
sbb
mov
mov
fidivrs
loopne
adc
and
repz
test
jle
pushl
inc
sub
stc
jge
xorb
jne
icebp
push
or
jo
fs
lea
fnstcw
jo
test
push
add
pop
int
in
jno
mov
mov
jns
sbb
loop
push
jo
mov
imul
mov
sti
xchg
loope
fistpll
jo
cmp
dec
pop
movsl
into
jb
hlt
lds
inc
in
in
xlat
jmp
xor
lods
cltd
into
js
bound
push
inc
and
push
or
cmp
and
jo
int
xchg
into
ret
jo
js
mov
jo
xor
loope
stc
lods
pop
rol
or
loopne
js
nop
pop
aas
cmovae
mov
je
sub
loope
jnp
mov
lock
das
leave
jle
cs
mov
push
je
lret
or
sub
sub
jo
cwtl
loopne
scas
ret
jo
and
imul
pop
ds
sahf
cli
adcb
mov
sub
daa
les
xor
inc
and
jl
stos
aam
das
fistps
ds
mov
lock
js
or
iret
lcall
daa
pop
and
xchg
mov
loop
mov
push
je
inc
addr16
sub
and
mov
pop
inc
lods
jmp
cmpsb
lret
lock
mov
enter
data16
orl
jo
aad
test
je
insl
adc
int
jp
nop
hlt
out
jl
pushf
jbe
popf
push
mov
push
push
xchg
pop
jo
dec
ljmp
sti
mov
cmp
mov
jo
pop
jle
data16
je
popl
mov
divl
rcll
inc
jno
loopne,pn
add
fsincos
mov
and
cld
lods
data16
pop
mov
sbb
jmp
xor
and
or
sub
add
insl
vzeroall
xchg
jo
mov
push
jo
testl
orb
mov
sbb
jae
or
sbb
repnz
fwait
cmpl
cltd
mov
add
es
jns
pop
xorb
xor
fld
cmpsb
inc
jo
rol
xchg
loopne
lods
jo
mov
sbb
cld
jne
imul
sti
pop
nop
in
hlt
shrb
fldcw
mov
adc
xchg
cmc
daa
in
jo
and
shlb
cld
mov
sahf
vpaddusb
mov
jne
lret
and
jne
xchg
add
mov
rclb
mov
loope
jo
lods
and
xchg
popa
fistps
jno
cs
pushf
mov
js
push
jle
jo
xchg
cmp
sti
in
sub
push
cmpsb
mov
lds
dec
jle
aaa
pop
out
hlt
jmp
out
push
fs
cvtps2pd
cld
inc
daa
jo
lock
addb
fldenv
dec
into
jo
push
add
xor
lds
jo
out
test
roll
jg
test
das
push
mov
sub
adc
notb
push
dec
or
mov
mov
jo
xchg
mov
cmp
inc
jns
jo
mov
dec
cmp
aaa
inc
leave
add
adc
sub
jns
jo
sub
jo
addr16
push
cmp
iret
in
inc
adc
jo
push
repnz
pop
inc
sub
jo
inc
in
mov
or
dec
mov
icebp
pop
jo
movsl
mov
or
jo
and
sub
jo
fs
dec
test
push
pop
xorb
xor
push
rorl
fstl
out
fsubs
loope
jecxz
ret
orb
pop
push
out
add
xor
out
and
or
adc
test
icebp
xor
rclb
leave
adcb
jno
xlat
push
jo
scas
faddl
mov
lock
jmp
ja
and
scas
mov
xor
mov
jb
push
mov
jo
push
sahf
imul
shll
js
adc
xor
shll
sub
loope
push
gs
jo
cmp
fiaddl
mov
movsb
or
jmp
lret
sti
js
jge
adcb
sbb
bound
mov
pop
or
mov
cmp
dec
les
in
adc
popf
mov
stc
jo
add
mov
mov
xlat
xchg
das
in
fs
jle
sahf
in
ds
push
jl
stos
jo
sbb
ss
aad
add
outsl
je
pushf
jne
cmpb
jo
shl
mov
imul
jo
orb
pop
mov
je
cltd
test
jmp
pop
jge
inc
dec
sarl
mov
std
and
insb
je
out
adc
out
repnz
pop
aam
inc
ja
push
xchg
jo
inc
cltd
adc
sarl
jo
test
push
aam
lds
push
pop
mov
and
cs
js
adc
into
add
jo
cmp
lea
out
sub
pop
js
adc
xchg
inc
pusha
jo
test
jno
ss
jo
jmp
inc
mov
mov
and
lret
mov
dec
jo
stos
push
je
sub
add
pop
loope
lds
pop
repnz
xor
repz
xchg
orb
lret
jns
mov
sub
test
push
and
add
std
out
fldl
inc
dec
mov
xchg
adcb
cltd
xchg
ja
sbbl
arpl
repz
sub
jmp
jg
pop
push
pop
out
andl
mov
mov
lea
pop
xorb
jo
in
call
or
dec
or
in
cwtl
jne
int3
jo
je
rorb
add
nop
and
dec
leave
enter
rorl
fldenv
xlat
push
nop
add
das
pop
dec
xchg
xchg
fldl
inc
stc
cli
jo
in
enter
dec
cmpsb
bound
xchg
sbb
lods
sub
xor
mov
wbinvd
cmpb
push
jo
sub
cmp
jns
mov
mov
pop
add
sbb
jae
cmpsb
dec
cwtl
jo
push
arpl
jo
mov
repz
sub
popl
int3
mov
jo
imul
outsl
xor
mov
nop
fldenv
jle
movsb
inc
jo
mov
in
mov
loope
jle
insl
ret
lock
hlt
pop
sarb
js
lods
outsb
adc
imull
repnz
test
hlt
push
fwait
mov
call
leave
jg
ljmp
mov
mov
test
sub
orb
out
enter
mov
dec
pop
cmp
in
sub
xchg
adc
xor
std
int
inc
mov
and
jo
aad
mov
paddq
jl
leave
outsb
xchg
or
sbb
addl
lock
test
andl
sarl
inc
push
fnop
xor
adcb
mov
mov
jo
ret
xor
jo
cld
cmp
push
inc
js
cwtl
xor
es
pop
push
mov
dec
pop
mov
pop
hlt
hlt
or
mov
icebp
stos
jo
cmpsb
dec
mov
push
test
arpl
lret
vmwrite
sbb
jle
and
and
dec
mov
pop
js
out
adc
xchg
roll
cmp
arpl
jo
adc
inc
ret
insb
das
jle
pop
jmp
clc
adc
push
arpl
dec
mov
jo
dec
dec
retw
shrb
sbb
jns
jo
lds
bound
or
dec
sbb
cmp
jo
adc
adc
pop
jo
and
xor
sub
push
in
jne
jo
mov
jae
ret
adc
shl
sbb
jmp
or
dec
outsb
cltd
push
test
mov
mov
xchg
popf
repz
nop
jnp
sahf
mov
cmp
push
sub
xor
mov
jle
and
int
inc
mov
enter
cmp
jb
fs
inc
mov
fildll
lea
push
jo
in
jmp
add
cmc
inc
xchg
push
pop
shl
ja
fxtract
int
jo
fcoms
xchg
popl
adc
jo
fwait
popf
cmp
jo
xchg
ds
outsb
arpl
or
in
jo
imul
xchg
mov
mov
femms
pop
jae
jmp
adc
xor
jno
adc
jle
sub
fs
das
fidivl
pop
stos
mov
hlt
shlb
sbbb
aas
or
mov
std
jo
push
gs
mov
mov
dec
xchg
mov
in
fcoms
ret
out
jno
mov
jbe
shl
test
jo
mov
jge
jo
test
push
data16
ficoms
int
jo
fs
sbb
lret
jo
aam
add
icebp
shlb
dec
fsubrs
jecxz
hlt
jns
jo
jae
dec
fisubrs
ja
fidivs
or
push
jge
jo
jb
jmp
xor
scas
xor
cmp
test
sbb
ds
jle
jl
jnp
rcrb
sub
lds
out
aam
push
or
jge
jo
mov
and
jo
cmpsb
dec
sub
dec
push
jo
inc
mov
neg
mov
popa
xor
shl
gs
cmpsl
les
je
testb
xlat
fdivrp
push
outsb
or
int3
xchg
inc
aas
and
adc
pop
sub
test
lds
fs
add
mov
jo
sbb
pop
jo
mov
int
sub
inc
jo
shll
mov
jo
enter
je
ret
mov
lds
mov
fistps
cmpl
push
add
add
mov
sub
out
cltd
sti
mov
cltd
add
mov
movsl
cmpl
adc
jo
pop
fisubrl
nop
icebp
sahf
dec
cmpsl
fnstcw
mov
fdivl
insl
adc
xor
aam
stos
jo
jnp
mov
iret
stos
sub
xchg
test
shll
dec
lods
push
sub
dec
pop
jns
popl
lds
jb
jo
cmp
fcoms
cmpsb
scas
lret
aas
adc
cmpb
shll
pop
enter
arpl
jo
call
and
jo
xor
jg
lds
nop
ljmp
jo
orb
jns
jno
mov
vmptrld
xchg
js
in
mov
sbb
jo
and
leave
mov
stc
sub
out
jo
add
jecxz
cmpl
sub
jo
hlt
mov
lcall
jbe
pslld
push
insb
and
icebp
aam
out
mov
nop
fidivl
popf
les
cmp
push
popa
int
icebp
stos
outsb
shl
lcall
mov
loop
mov
push
bound
jno
mov
push
push
push
clc
mov
les
ret
aas
sti
jo
jl
xchg
jnp
out
jns
je
jo
std
in
mov
lock
testl
inc
test
add
xor
xor
aas
push
mov
mov
cwtl
ja
xlat
sub
out
add
icebp
js
mov
fmuls
sbb
cmc
jo
pop
push
mov
out
xlat
ret
or
mov
inc
jne
xor
fnstenv
xor
std
cltd
push
add
cmp
loope
ret
es
xor
adc
addr16
ja
cmpsb
dec
cmovp
dec
cmp
xchg
rcrb
push
push
inc
movsb
jo
dec
xchg
rorl
movsl
pop
iret
cmp
xchg
fnsave
sub
sub
into
mov
add
or
sti
mov
js
mov
sbb
and
push
and
out
push
ja
jae
pop
inc
bound
iret
add
cmp
arpl
fwait
loop
or
lods
lods
sub
enter
mov
in
mov
xorl
fistpll
hlt
cmp
dec
xor
in
jge
jo
mov
xchg
sub
push
inc
dec
jo
lahf
int
adc
nop
cmpsb
and
popa
scas
jbe
push
dec
push
lcall
and
jo
add
and
push
jg
jbe
sub
loop
mov
movsl
sarb
or
ja
jg
dec
insb
mov
loopne
xor
mov
cs
jg
sub
jo
ret
xor
mov
sbb
and
cmp
mov
xlat
popa
mov
test
ret
stos
adc
or
jo
and
add
js
repz
push
je
add
jmp
mov
sub
scas
ret
fs
inc
je
or
jo
xchg
mov
mov
bound
push
psadbw
jo
sbb
mov
push
jo
sbb
xor
pop
mov
hlt
jb
enter
or
arpl
daa
add
sahf
jo
leave
add
push
xor
ss
add
adc
cmpsl
pop
shlb
imul
jns
mov
scas
sub
in
test
movsb
jo
rcrl
jo
jle
and
jo
lahf
imul
adc
outsb
cmpl
inc
add
rcrl
sbb
jo
mov
lods
jmp
mov
jo
and
repz
test
push
add
popf
popa
adc
cmp
fdivl
jmp
pop
loop
xchg
xor
sar
in
cs
stc
mov
js
inc
fwait
jo
mov
sbb
jo
dec
mov
fldl
jo
subps
push
push
icebp
rolb
add
jo
loop
mov
push
hlt
in
jecxz
adc
jbe
cmp
pushf
aad
jp
xor
sub
push
jo
jg
xchg
mov
jo,pt
imulb
ret
mov
mov
jo
orb
jo
adc
jmp
xor
fs
inc
mov
addl
push
jo
shll
stos
sbbb
push
jnp
pushf
inc
mov
jo
je
xchg
in
lds
pusha
divl
jo
inc
xchg
fisubrl
xchg
xlat
mov
stos
mov
scas
inc
and
fs
popa
loope
cmp
sub
lds
jns
test
mulb
pop
jb
stos
pushf
movsl
lss
ds
out
mov
sub
js
push
int
jg
jge
jo
lret
mov
jecxz
jo
or
add
jne
ja
mov
jnp
inc
outsl
push
push
pop
xor
mov
andb
nop
add
jne
sbb
jp
mov
fucom
push
xchg
or
lret
jo
jns
sbb
xchg
jo
loopne
jle
pop
sbb
shlb
dec
lcall
and
outsb
jo
xlat
rol
add
dec
jo
and
and
jo
mov
pusha
das
movnti
jle
add
mov
lock
add
mov
inc
scas
push
jge
jbe
addr16
cmp
movsl
jnp
mov
bound
jo
test
andl
in
notl
ljmp
mov
out
jmp
aad
xchg
jb
adc
xchg
sbb
pop
in
shl
js
sbb
and
add
sub
xor
jle
push
sub
sbb
push
inc
aas
jmp
jns
jecxz
lret
mov
push
push
and
dec
mov
and
push
test
jo
rcrw
jecxz
in
mov
and
aaa
dec
lds
mov
jno
pop
jne
jle
jae
inc
push
pop
shrl
mov
test
mov
testb
fprem1
and
nop
stos
dec
pop
cmp
shlb
or
adc
dec
add
add
int
jb
or
inc
fcmovnbe
ret
repz
les
pop
div
cmpsb
mov
push
mov
jl
jge
jo
mov
lock
jo
xor
jns
jl
push
jo
sub
loope
cmp
push
aam
pop
in
mov
ret
adc
mov
mov
stos
orl
push
xchg
lods
xchg
bound
roll
test
push
jo
push
cmp
inc
sub
ret
das
shll
into
cmpsl
pop
push
and
imul
and
enter
lds
dec
fimuls
adc
aas
xchg
shll
movsl
idivl
mov
out
jge
mov
cmp
mov
popf
je
addl
cltd
dec
jo
mov
test
in
xchg
dec
xchg
lds
mov
cmpl
cmpsb
push
out
rcll
mov
notl
ret
pop
sub
push
js
imul
cmpsb
or
loopne
push
popa
loop
sbb
pushf
xchg
orb
cmp
aam
jo
jecxz
xchg
add
loop
mov
cmp
inc
jo
imul
out
pshufw
mov
les
inc
aas
jo
mov
xchg
mov
das
sub
test
push
jnp
test
pop
testb
shll
mov
cmc
adc
mov
jo
mov
std
and
push
leave
stos
xchg
sbb
js
les
mov
bound
fld
jo
ja
ret
or
je
addr16
jo
cli
xchg
add
icebp
insl
push
ss
je
mov
cs
rolb
pop
and
jl
sbb
jo
xor
pop
jo
popa
xor
fildll
and
test
cmpsl
lds
jo
fs
sub
loope
jo
jmp
movsl
sbb
push
mov
rcrb
leave
xor
cmp
inc
ret
add
popa
out
imul
adc
decb
mov
jo
inc
insb
pop
jnp
jmp
jge
jle
cmpsl
popa
xchg
mov
mov
push
stos
ror
iret
jo
notb
mov
jo
cmp
mov
ret
push
inc
sub
adc
inc
mov
push
sub
cmpsb
jns
movsl
mov
jnp
pop
ret
cmp
das
ds
xor
out
xchg
in
push
hlt
jg
push
insb
adcb
inc
mov
jbe
xor
jo
js
xchg
dec
jmp
adc
pop
inc
sbb
adc
jo
idivb
pop
sbb
adc
dec
inc
mov
or
xor
sarl
mov
fistpll
push
ret
and
nop
mov
rorl
jo
jecxz
daa
or
test
cmp
ret
jo
sbb
sub
insl
inc
cmpb
addb
and
add
clc
adc
fdivl
gs
call
std
fwait
mov
jb
test
add
aaa
addl
lret
sub
ret
jbe
mov
or
adc
push
add
cmp
adc
hlt
fst
nop
stos
je
inc
mov
sub
rolb
cwtl
add
cmp
lea
push
rcll
test
add
dec
jmp
xchg
mov
jecxz
xlat
mov
sub
mov
pusha
dec
lods
fildl
push
xchg
dec
rol
mov
hlt
shll
mov
mov
loopne
jp
jmp
jo
cmp
inc
mov
jo
sbb
lds
inc
clc
scas
daa
ret
mov
mov
dec
sub
xchg
jo
inc
push
and
data16
repz
cmp
hlt
adc
cmp
ficompl
orb
inc
aad
cmp
shl
jo
mov
sub
add
push
push
aas
sub
mov
std
dec
movsb
jo
loope
jmp
add
dec
mov
cmp
cmp
cmp
and
push
movsb
or
scas
lock
push
lds
pop
js
call
nop
jmp
into
mov
xor
stos
dec
jo
in
out
idivb
cmp
lods
cmpb
adc
daa
out
fs
dec
jp
xor
jne
push
int
imul
outsb
aas
inc
sub
leave
jp
das
popf
add
out
rolb
andb
stos
cmp
push
jmp
cld
adc
jo
leave
push
xlat
adc
gs
jo
pop
dec
sub
add
int
inc
ss
adc
pusha
mov
outsb
push
ret
push
and
jl
lock
push
push
mov
mov
out
ficompl
adc
cmp
xor
dec
jo
aad
inc
and
test
cwtl
mov
ja
jne
adc
popf
pusha
sub
loope
push
xchg
push
pop
inc
xor
sub
mov
jo
mov
int3
dec
lods
push
dec
inc
sub
jp
or
pop
xor
out
jo
ljmp
sub
testb
xorl
xorb
clc
push
js
arpl
sbb
add
jo
cmp
scas
imul
mov
aaa
or
out
add
testb
push
pop
sub
jo
ret
stos
jge
inc
jmp
jo
push
mov
jg
les
sbb
push
xor
inc
out
and
add
fs
mov
cltd
insl
nop
pop
or
jne
push
in
push
xchg
outsb
cmp
mov
leave
jo
jns
pop
mov
or
mov
enter
testb
mov
and
lds
sub
std
and
sar
add
scas
inc
mov
mov
cmp
xchg
pop
mov
sahf
and
bound
pop
js
in
mov
loope
and
cmp
lea
xchg
push
fildll
imul
cltd
sub
ljmp
xchg
scas
mov
mov
cmp
jo
icebp
mov
and
ret
jo
push
pop
nop
dec
sbb
and
loop
jo
sub
or
sub
ret
cmp
jo
add
jmp
push
out
dec
jo
sbb
in
jo
addb
inc
cmc
xor
scas
cmp
mov
jno
loop
xor
leave
data16
shll
ds
adc
xchg
push
popa
nop
lahf
push
and
sub
leave
mov
aad
loope
cmp
pop
rorl
or
out
jo
popa
xlat
cs
mov
and
fsubp
cmpsb
fimull
pop
xlat
and
fs
negl
mov
push
ljmp
test
imul
popa
repnz
pop
scas
add
or
jo
mov
xor
jo
and
adc
incb
jnp
pop
jo
arpl
sar
jo
popa
pop
ret
bound
cs
lods
ds
rcrb
ljmp
jecxz
mov
insb
xlat
je
inc
incl
sub
movl
sub
and
flds
lret
ljmp
jo
daa
sbbb
out
inc
add
or
out
aad
xchg
gs
fucom
sub
push
sub
mov
imul
fs
sti
push
jo
bound
cmp
into
xor
mov
mov
pop
or
xchg
sub
xchg
add
jo
cmp
loope
imul
jecxz
inc
jo
cltd
mov
push
jo
adcl
mov
das
jo
or
xor
jo
jb
andb
push
jae
and
iret
loope
jno
lcall
ss
pxor
dec
shll
mov
jl
push
mov
in
adc
jo
outsl
xchg
pop
mov
mov
mov
stos
shrl
push
fisttps
loop
dec
push
test
pop
jmp
cmp
shrl
jo
les
push
jo
jg
pushf
cs
mov
js
adc
add
mov
cmp
in
loopne
es
loope
and
jge
jo
and
iret
jo
mov
sarl
jl
or
aas
pop
sub
adc
inc
jo
mov
mov
jo
imul
mov
lret
sbb
push
add
rclb
jo
lahf
xchg
xor
jp
loope
orl
pop
inc
psrlw
sub
xchg
jo
jecxz
movsl
fmul
mov
je
cmpb
jecxz
loop
add
imul
pusha
push
imul
ret
inc
lds
jo
fstl
fwait
pop
fnstcw
subb
push
and
das
clc
or
fdivl
and
jno
int3
sbb
jo
out
dec
divb
sub
push
in
ret
mov
jb
push
inc
pop
sub
pop
mov
mov
call
sub
jge
adc
jo
jle
inc
sbb
mov
add
mov
pop
fsub
push
out
push
ja
mov
jle
or
les
insb
scas
or
data16
sarb
inc
in
push
lds
xorl
push
add
lret
add
cmpb
sbb
leave
jo
aaa
in
nop
mov
aad
dec
pop
and
leave
sub
jae
pusha
xchg
ud1
lods
push
push
mov
add
dec
cmp
movsb
dec
push
fucomp
movsl
jbe
mov
mov
sub
lds
js
scas
int3
xor
mov
or
std
inc
and
imulb
jns
mov
hlt
test
nop
je
sub
out
lret
ja
and
jo
mov
lret
loop
pop
outsl
into
shlb
rcl
jo
out
pop
pmulhuw
vmovhps
jmp
fidivrs
roll
fnstcw
aad
pop
pop
sub
out
nop
inc
jo
ret
jbe
test
movups
xchg
outsb
jo
int
or
jbe
pop
mov
daa
aaa
push
lods
or
cli
sub
jp
jo
stos
enter
hlt
add
fldt
fstps
shrb
in
fmuls
sub
rorl
push
scas
add
jb
imul
jo
jp
dec
push
mov
leave
mov
jne
aad
dec
ret
pop
orb
mov
push
jo
outsl
movsl
sbb
jno
stos
nop
shl
pop
mov
lds
dec
out
fdivrs
fimull
push
pop
cltd
push
clc
vfnmadd231pd
repz
shll
test
andb
jge
xchg
fadd
jo
jbe
shll
pop
jp
in
rol
ljmp
jo
loopne
xchg
cld
and
mov
adc
xor
mov
pop
lds
ds
out
les
cmp
pop
cmp
rorl
pop
xor
xlat
or
xor
ror
hlt
pop
push
jo
cmpsl
aas
or
rcll
icebp
adc
dec
dec
in
mov
push
pushf
xor
bound
shlb
orb
scas
jo
lods
push
cs
fmul
aaa
jo
cmp
nop
mov
das
push
xchg
imul
movsb
into
fwait
sbb
in
mov
xor
flds
popa
ljmp
pop
jo
stc
push
or
sbb
cld
adc
ret
hlt
dec
push
jo
lea
mov
int3
or
aad
imul
jmp
ja
inc
jns
jle
nop
cs
es
sub
dec
adc
cmp
lock
pushl
mov
cmp
and
leave
pop
sbb
pop
jo
vcvttss2si
mov
mov
repz
sbb
push
paddusw
add
push
mov
cld
jb
sti
pushf
repz
shl
mov
jge
add
test
inc
or
lods
les
shll
andb
cmc
sbb
or
loope
fsubrl
add
jne
mov
xchg
mov
das
aad
pmaxsw
add
push
jo
ljmp
movsl
push
jb
dec
mov
nop
ret
cld
mov
jo
mov
jo
leave
addr16
inc
push
lret
scas
inc
sbb
push
mov
lock
sbb
sahf
popa
jo
and
jne
push
mov
mov
pop
cmc
outsb
loope
js
psllq
das
push
inc
xchg
adc
movsl
lcall
adc
mov
rol
cmp
test
mov
js
xchg
mov
inc
iret
leave
andl
mov
aas
stc
sbb
js
icebp
adc
imul
dec
xor
dec
push
pusha
mov
out
sub
or
je
push
in
cmp
cmp
push
jne
adc
push
ret
sar
aaa
jmp
mov
mov
lds
sbb
fbstp
mov
out
mov
mov
je
sub
xchg
lods
adcb
fcomi
jo
mov
int
loope
nop
jmpw
je
jo
push
roll
aas
je
push
les
in
and
mov
fistpll
in
xor
jg
fwait
andb
stos
mov
cmp
dec
imul
mov
out
sub
out
jmp
loope
dec
push
imul
add
ljmp
imul
stos
loope
push
pushf
ss
jo
aad
mov
jo
aaa
adc
sahf
in
jo
std
lahf
stos
mov
in
clc
cld
jg
push
jo
pushf
jle
jno
hlt
ret
dec
into
cmp
mov
pop
mov
mov
add
das
xchg
ds
int3
mov
mov
nop
ficoms
push
inc
pusha
je
loope
mov
mov
jge
fdivs
scas
jo
inc
ret
ds
jo
xchg
mov
push
cmp
lods
and
shrl
cmc
add
sar
xor
mov
shrb
test
xchg
jo
mov
popa
jl
xchg
shlb
ds
jecxz
jbe
xor
lock
xchg
scas
pop
cli
lds
jae
mov
daa
jo
mov
shr
xor
fsubrs
rol
mov
stc
cmp
popa
jl
lahf
or
jo
lcall
popa
dec
jmp
mov
addr16
sub
jo
mov
aad
test
leave
jo
in
movsl
stos
mov
or
lds
into
sub
bound
xchg
push
push
stos
xor
lea
sbb
xchg
xor
jmp
dec
shlb
add
sbb
cmpb
cmp
dec
sub
jo
xor
inc
lea
and
push
js
dec
inc
in
fs
aaa
jo
out
cmp
xor
jmp
movl
add
dec
aam
push
sub
ret
out
mov
cmp
dec
mov
sub
mov
adc
xchg
mov
pusha
icebp
mov
fnstenv
cwtl
inc
cmp
sub
jle
adc
cmc
lret
lods
mov
les
push
test
cwtl
add
lret
out
ret
sbb
je
dec
mov
jne
leave
add
jecxz
push
sbb
adc
mov
mov
fsts
or
push
or
jb
xchg
jo
push
int
std
xchg
dec
dec
jo
pop
cltd
dec
lds
fistl
in
outsl
sbb
pop
adc
inc
and
dec
jo
ljmp
ficompl
jge
nop
inc
xchg
cmp
mov
add
dec
jp
mov
push
std
push
sbbl
dec
push
jo
mov
sarl
and
xchg
push
paddusb
pop
or
fidivrl
push
and
jl
push
jo
jnp
js
aad
enter
jmp
mov
mov
xor
jg
push
mov
call
ja
pop
addl
push
pushl
xor
mov
int
mov
aaa
sahf
pmaxsw
cmp
jp
test
xor
jno
call
in
push
repz
pop
insb
cli
arpl
loopne
sub
cwtl
and
lahf
fistps
stc
sti
jae
sub
mov
cmc
sub
in
jo
xchg
push
nop
xchg
jl
lahf
jo
jb
mov
shlb
xor
into
xor
jo
fidivrs
imul
adc
inc
jo
mov
clc
leave
jo
enter
xchg
sub
sub
fcoms
aad
mov
lds
loope
aaa
push
cmp
cmp
pop
or
jno
sub
xchg
in
bound
dec
or
scas
jecxz
subl
xor
test
sbb
push
mov
and
mov
mov
ret
sti
prefetch
mov
rclb
mov
in
scas
addr16
pshufw
rcr
jno
insl
dec
add
cmpb
jo
dec
sub
shll
leave
mov
jne
inc
push
sbb
test
out
add
and
imulb
cwtl
stos
pop
jo
mov
addr16
add
sub
and
cmc
pop
std
test
mov
in
push
jae
jnp
adc
jo
inc
aad
sti
ja
lret
mov
and
cld
test
aad
push
mov
xlat
xchg
xorb
lds
adc
ror
pop
test
sbb
push
negl
jo
leave
and
insl
add
pop
mov
jo
xor
or
dec
cmpsb
xor
add
popa
pop
dec
inc
stc
cmp
xor
cmp
jns
jo
mov
mov
jle
or
or
lds
push
inc
addr16
push
test
int
and
scas
push
iret
imul
enter
call
adc
inc
pop
les
jo
fisubl
cltd
fmull
jo
in
out
jne
lds
sti
mov
inc
hlt
subl
loope,pt
jo
fldenv
push
mov
and
adc
dec
jns
xchg
movsb
lock
xlat
and
testb
out
and
jo
or
push
xchg
lea
or
and
pop
dec
cltd
xor
inc
ds
mul
nop
jle
and
lcall
fwait
jmp
mov
repnz
mov
pop
sbb
testl
rolb
xchg
jae
jo
roll
or
fists
jb
nop
adc
jo
jne
fwait
mov
sbb
ret
mov
adc
aas
imul
and
je
jmp
jne
pop
and
ds
shlb
mov
mov
ret
inc
jp
push
push
lcall
jno
jo
xchg
fiadds
popf
aad
or
inc
popa
bound
jo
mov
ss
fs
push
enter
mov
jo
jl
insl
push
pop
imul
out
or
push
adc
and
loope
iret
fs
nop
push
movl
xchg
push
mov
jb
repz
jle
jns
stos
icebp
mov
ret
jno
or
gs
mov
mov
lret
jo
cmc
int3
inc
xor
mov
push
mov
mov
shl
mov
loopne
sub
mov
fimuls
sub
mov
cs
pop
fistpl
jo
movsb
jecxz
adc
xchg
clc
repnz
mov
es
not
out
dec
nop
push
jo
lcall
jo
add
scas
cmp
adc
imul
pushf
add
or
xor
lds
push
jp
enter
bnd
pop
dec
jmp
les
jo
sarl
inc
sub
sub
sbb
repnz
push
js
mov
jo
repnz
push
nop
and
icebp
je
jg
bound
ret
lods
jge
fldl
fsubl
jbe
mov
jbe
or
fildl
ret
pop
mov
aam
xchg
or
jg
xor
rcrb
lret
daa
dec
mov
cmp
mov
jo
add
inc
xchg
orb
daa
subb
xchg
sub
xlat
mov
roll
scas
testl
popa
jns
pop
dec
jo
pop
mov
pushf
jo
cmp
pop
pop
jo
or
pop
test
mov
or
mov
jo
shrl
push
stos
xchg
std
jo
scas
pop
xor
pop
or
aad
loop
and
jno
pusha
testb
rclb
pop
xchg
inc
mov
fbstp
push
jg
mov
dec
in
gs
testl
jo
dec
xor
vpsllq
jno
ja
out
jo
popf
loop
outsl
loope
bnd
mov
and
lods
or
cmovns
mov
jle
sbb
repnz
iret
jnp
jo
sub
jge
cld
lds
push
nop
cmp
dec
lods
jo
lret
mov
divb
jo
dec
lock
insl
adc
mov
mov
mov
in
sub
xor
ret
out
pop
dec
mov
sub
call
hlt
adc
andb
xchg
jo
xchg
jae
test
scas
dec
jb
sbb
jo
mov
sbb
jo
out
test
push
mov
cmp
fs
xlat
jo
sbb
leave
mov
aam
imul
fimull
fs
sahf
push
or
in
sub
movsl
mov
hlt
or
push
dec
mov
jo
push
jno
pop
add
mov
lds
sub
les
inc
push
bound
push
mov
mov
nop
mov
aad
notb
cmp
jp
add
int
es
in
jo
les
push
lcall
mov
jg
jge
jo
inc
leave
ja
sbb
ret
aam
sbb
jo
sub
adc
pop
mov
iret
shr
xchg
shll
popa
sti
adc
lret
loope
or
pop
jo
xchg
nop
testb
cmpsl
jo
lods
lds
nop
push
pop
je
call
lods
aam
xor
std
mov
cld
subl
in
stos
add
xlat
insb
divb
xor
jo
into
and
loope
movd
push
jo
mov
jns
popa
mov
repnz
in
and
loope
or
jnp
pop
popl
popf
jle
fisubrl
mov
and
and
pop
jo
xchg
pop
add
data16
push
mov
loopne
jo
mov
gs
sbb
fbld
jo
loope
and
ret
sahf
inc
jo
clc
add
mov
dec
cmp
into
mov
fwait
insb
fistps
inc
adc
xchg
dec
push
bound
jo
dec
stos
addr16
jo
leave
dec
scas
and
push
popa
adc
vpmaxsw
nop
enter
push
fs
das
jl
fisttps
adc
push
shll
stc
cmc
cmp
pop
psubd
loope
enter
aas
bound
daa
jecxz
push
xchg
dec
jo
int3
jle
cld
jno
mov
cmpb
xorps
and
imul
scas
dec
mov
dec
cmp
push
cmp
push
test
aad
cmp
push
xchg
ds
insb
sub
mov
or
jne
fstl
imul
push
add
andb
push
mov
nop
stc
mov
out
das
ret
leave
lcall
je
out
jnp
fmuls
sub
roll
aaa
sbb
xchg
es
jo
insb
ficomps
into
cmpsl
xor
fnstenv
addr16
cmp
popa
fimull
or
pop
inc
cli
rcrl
ret
push
sahf
pusha
xor
fsubrl
rclb
iret
into
jo
je
push
mov
shrl
push
test
sub
push
cmp
mov
stc
adcl
dec
mov
mov
shrb
jbe
pushf
pop
xor
inc
test
jp
jo
popa
lret
mov
xchg
data16
jo
jno
jb
sbb
jo
sub
inc
out
std
jo
push
ret
flds
mov
pop
xchg
push
test
aam
jbe
fcompl
sub
add
jo
pop
pop
std
fidivl
fs
dec
or
icebp
push
add
jae
shl
inc
movsl
arpl
and
jg
push
push
cwtl
ja
dec
xorl
jns
aaa
syscall
mov
sub
inc
popl
push
arpl
jo
stos
inc
int
inc
xchg
pop
jo
dec
ret
ja
mov
ret
adcb
jo
mov
xchg
stc
in
mov
into
and
dec
xchg
je
stos
pop
jo
add
imul
sub
jo
mov
arpl
jp
jo
pop
leave
into
pop
fiaddl
pop
jnp
and
xchg
ja
push
cltd
lds
rorl
out
fs
push
rdtsc
cmp
mov
mov
lods
xchg
mov
in
push
or
and
js
ret
icebp
outsb
pop
xchg
xor
out
mov
jle
stc
mov
mov
divl
ljmp
xchg
popa
jo
xchg
push
mov
jo
aad
out
scas
jnp
rcll
test
jmp
jo
jae
subb
loop
int
test
cmp
xchg
cs
pop
sbb
xor
adc
in
aad
lds
mov
mov
jo
lods
fldl
pop
aad
mov
ret
pusha
sub
mov
inc
sbb
cmp
shlb
rolb
jo
in
jns
mov
outsb
aaa
lds
clc
lods
and
mov
icebp
jmp
outsl
or
cmpsb
mov
inc
shll
jo
jbe
adc
mov
das
push
sbb
icebp
jnp
jo
add
fs
xlat
jo
add
lods
or
cmp
test
cli
inc
das
insb
jo
push
mov
push
sub
push
lret
aaa
cmpsb
insb
nop
mov
mov
mov
fucomi
jae
subb
hlt
pop
nop
jo
andb
adcl
push
addr16
xchg
jae
cmpb
movsl
ja
les
lret
sarb
and
xchg
fiadds
scas
sub
cmp
mov
fnstsw
sub
sub
mov
fistpl
and
cmp
je
adc
imul
lahf
sbb
jle
push
mov
sub
sbbb
add
lock
add
or
adc
mov
stc
sub
sahf
lock
and
jo
test
sub
add
push
pushf
push
push
xchg
jg
cmpsb
mov
pop
jno
dec
rclb
scas
dec
popl
mov
mov
js
jo
adc
arpl
fcmovne
es
push
jo
repnz
inc
das
shlb
test
push
push
push
fidivrs
addl
out
push
jle
mov
and
adc
scas
jo
or
loope
int
mov
jo
xchg
andb
rorl
push
hlt
adc
jo
pop
mov
xchg
std
nop
pop
leave
and
xorb
mov
aad
pushf
inc
iret
inc
repnz
push
mov
push
movsl
ds
fs
jl
leave
jo
or
fildl
popf
or
orl
push
adc
sub
lret
jo
or
inc
aad
push
pop
push
push
hlt
subb
pcmpgtb
jo
cmc
mov
lods
push
int
and
mov
dec
scas
mov
mov
fnstenv
aad
jne
and
push
insl
lret
push
jo
adc
sub
iret
cmp
push
jmp
or
aam
js
mov
xchg
push
subb
inc
in
or
jo
dec
jl
dec
jo
mov
test
mov
js
xchg
xchg
dec
or
xor
outsl
jecxz
or
leave
sbb
sarb
pop
mov
jecxz
pop
repnz
mov
jo
sub
mov
mov
les
push
sub
sbb
jo
mov
dec
add
mov
jo
dec
lds
mov
mov
popa
jmp
and
leave
xchg
push
mov
cmp
xchg
arpl
xor
sub
inc
loop
jge
out
mov
mov
lahf
mov
or
js
out
mov
pop
movsb
fs
cvtps2pd
test
pop
sti
in
xor
mov
mov
jns
jo
ret
cwtl
orl
jo
cmp
loopne
jnp
add
xor
clc
push
jo
inc
mov
int
fwait
or
nop
ljmp
cs
sahf
ffree
jo
fidivrs
push
lds
xlat
sub
mov
push
cvtdq2ps
repz
rcrl
jo
cld
sbb
add
mov
jo
or
push
loopne
or
mov
jb
lret
fwait
jns
lds
lret
mov
fnsave
add
jecxz
jo
add
repz
bound
mov
movsl
data16
inc
shll
das
mov
jo
sub
and
jo
sbb
xchg
push
cmp
jl
push
leave
insl
ret
xchg
jo
mov
push
and
mov
outsb
or
jo
xchg
lock
or
ss
pop
xchg
sbbb
jg
insb
jns
inc
mov
sub
push
mov
jl
inc
xchg
jo
pop
sarl
pop
shll
repz
jo
repnz
or
cmpxchg
push
movsl
int3
jle
cmc
adc
jmp
call
cmp
dec
push
insb
push
aas
ret
jmp
lret
out
lock
sub
leave
arpl
jo
fnstsw
test
ja
jo
mov
adc
mov
repz
hlt
push
insb
add
icebp
bound
inc
lock
push
cmpl
ret
stos
maxps
xchg
jle
call
jno
fldt
jecxz
push
jo
nop
shll
cli
cmc
push
jo
mov
scas
sbb
add
jnp
mov
icebp
jo
adc
sub
jo
in
adc
pop
ret
xchg
dec
jo
lds
lods
mov
push
sub
jo
add
add
and
nop
shll
sub
push
mov
cmpsb
fistps
rolb
rcrb
cmp
jo
and
outsl
mov
pop
mov
xchg
subl
add
movups
jp
orb
divb
in
test
sub
dec
fldcw
cmp
xor
and
iret
jo
les
js
fcoms
test
stc
in
rorb
adc
jo
iret
xchg
in
jmp
ja
mov
fildl
jle
cmpsl
je
mov
mov
and
lahf
cli
push
xchg
jle
pushf
dec
aas
test
jo
add
or
cmpsb
xlat
pop
setl
cmp
ret
mov
mov
sub
mov
mov
pop
andb
das
add
ss
pop
imul
mov
ljmp
push
cmp
popf
mov
les
inc
fwait
jp
cld
lds
xchg
push
push
int
push
pop
sbb
add
push
cmpsl
mov
jo
mov
mov
cli
imul
sbb
mov
rcll
xor
push
mov
mov
pop
gs
scas
push
popa
adc
jp
loopne
pop
push
jo
mov
xor
rol
jo
je
inc
lods
pusha
in
xor
jo
fbld
ljmp
lds
shrl
stc
jl
jo
jp
xor
push
jae
adc
stos
cmp
pusha
lods
inc
adc
jo
add
outsl
ret
mov
inc
jo
leave
fiaddl
jo
insl
ss
vunpcklps
dec
dec
mov
inc
xchg
bound
je
xor
jo
arpl
rcl
fnstenv
mov
in
into
es
dec
lds
dec
jmp
jmp
hlt
fistl
or
shl
js
xchg
in
mov
cld
and
xchg
add
fyl2x
mov
add
cmp
test
pop
ret
fs
jg
nop
pop
mov
ja
add
rolb
or
testb
jo
xchg
sarb
inc
mov
js
fists
iret
andb
cmpsl
repnz
sarl
out
stc
xor
inc
out
movsb
push
jo
fdivrs
or
addb
adc
push
lcall
insb
mov
rcr
sub
and
push
pop
xchg
push
mov
lock
push
lret
fldl
jle
iret
inc
jge
je
pop
cmpsl
in
shrl
retw
and
xchg
lcall
lds
test
mov
pop
and
movsl
mov
xchg
pop
repnz
push
jo
dec
in
push
xchg
jbe
xchg
mov
es
sub
jo
movsl
hlt
add
xchg
pop
cwtl
rorb
loopne
xlat
andb
push
sub
xor
lds
and
and
aad
testb
dec
lds
push
jmp
and
inc
jecxz,pt
dec
fwait
inc
scas
xor
pop
ficoml
mov
add
rolb
js
or
inc
jo
loop
xchg
popa
dec
add
es
je
sbb
dec
ja
mov
jo
push
sub
pop
cmp
rolb
bound
mov
adc
cmp
push
mov
ss
push
fdivs
ja
jmp
shlb
sub
xchg
xchg
inc
nop
outsl
cmp
jne
jns
jo
movsl
jne
loope
xchg
jo
jmp
ljmp
mov
push
pop
mov
imul
dec
cmp
sub
inc
leave
int
js
cmp
adc
testb
sub
or
aad
jno
add
sbb
out
adc
sub
sub
out
int3
popa
jo
cld
lcall
lcall
adc
pop
je
cmp
leave
and
push
out
lcall
movsb
jo
scas
dec
push
and
mov
fiadds
outsl
push
dec
call
sub
push
jmp
into
add
or
loop
jo
lock
mov
mov
sbb
xorb
nop
sbb
ds
test
popl
cli
fninit
cmp
xorl
lcall
jge
inc
data16
jo
jge,pt
mov
bound
adc
jb,pn
rdmsr
int
sahf
gs
pop
and
pop
call
fdivrs
sarb
movd
stos
jle
mov
dec
or
fdivrl
insl
mov
subl
jnp
inc
dec
adcb
inc
sti
push
cmpsb
pop
mov
mov
repnz
jne
jo
add
inc
jp
cmpl
jmp
gs
inc
or
add
mov
mov
jo
pop
bound
ret
xchg
sub
cli
and
xlat
test
jo
xchg
pusha
mov
jo
xchg
leave
and
daa
jo
mov
dec
mov
shll
cmp
ss
push
clc
jo
xor
aas
push
fldenv
or
jo
int
cmp
iret
push
inc
mov
add
jne
imul
fdivs
or
rcrb
leave
cmp
js
push
dec
bound
mov
jae
shll
pop
stos
shll
in
test
lock
addr16
js
out
fmuls
jo
pop
mov
and
jo
iret
pushl
push
add
xchg
jo
stos
dec
mov
mov
mov
inc
pop
int
add
js
jl
ret
or
cs
outsl
mov
lcall
push
aaa
mov
nop
mov
jp
and
in
fbld
and
cmpsl
xchg
je
out
invd
hlt
mov
mov
jo
loop
xor
xchg
ret
xchg
into
adc
inc
data16
fdivl
loop
mov
aas
jo
cmpsb
jbe,pt
addb
jo
lds
push
mov
mov
movsb
sbb
jo
push
mov
lods
add
cmp
push
loop
inc
std
lds
icebp
xchg
push
mov
sbb
adc
aas
insb
xchg
mov
in
push
xor
into
mov
push
jl
test
sahf
jge
inc
inc
test
jo
mov
push
ret
jo
or
hlt
movsl
jo
je
ljmp
inc
cmpsb
test
leave
jbe
mov
in
lcall
jle
scas
fcoms
lods
into
push
dec
das
out
push
mov
shlb
inc
sub
cmp
jo
es
mov
jo
notb
mov
mov
in
adc
jo
mov
push
xchg
add
sbb
bound
push
flds
jns
or
cmp
jge
or
sub
mov
pop
sahf
and
jo
cmp
nop
in
in
sbbb
jmp
mov
sbb
jo
rorb
jo
xor
stos
jbe
test
sbbl
mov
jno
jo
sbb
pop
pushf
sub
call
sub
jo
add
sub
and
ljmp
jo
aad
push
inc
add
data16
out
mov
pusha
inc
dec
adc
loope
cwtl
bnd
scas
jge
lock
adc
xchg
bound
adc
data16
sub
mov
inc
insb
ss
adc
xchg
cmp
jo
and
icebp
stc
jo
pop
enter
pop
xorl
sub
mov
js
inc
jo
push
or
jo
jno
nop
mov
xchg
mov
rcll
jmp
cmp
dec
push
mov
arpl
rclb
jo
dec
pop
int
mul
fs
or
add
lods
jo
xchg
mov
jp
dec
int
dec
fistpll
cs
push
lds
andl
jne
fbstp
and
into
jne
add
mov
test
scas
push
lds
loopne
aaa
loop
inc
xor
jb
sbbb
leave
xchg
call
push
jo
jge
inc
jae
pop
and
xor
adc
repnz
jl
add
xchg
in
push
in
movd
xor
mov
cmpl
jo
cli
int
cmp
test
pop
and
sbb
cmpsb
lcall
clc
arpl
mov
jle
aaa
aas
dec
push
jns
imul
ret
xor
jo
std
insl
test
cmpsl
pop
jo
xlat
shrl
jle
jo
xchg
cmpsb
xor
int3
nop
cmp
ja
adc
jo
insb
pushl
jo
jmp
movl
push
or
mov
shl
nop
pop
xchg
xor
push
xchg
push
jo
dec
out
scas
sub
nop
push
push
jle
jo
xchg
cmp
popf
scas
jne
lds
fbstp
aaa
lea
rcll
enter
std
push
dec
aam
jo
adc
cmpsb
iret
mov
mov
out
and
pop
jo
push
sub
adc
shll
cmp
inc
jb
jo
std
leave
adc
mov
pop
push
call
push
stos
in
aas
das
dec
hlt
xchg
lea
pop
les
ja
fistps
js
out
dec
jo
int3
fwait
add
cmp
aad
adc
hlt
test
jo
in
ret
jmp
lods
jo
out
paddd
iret
repz
cmpsl
adc
pop
push
jo
xor
push
jns
mov
data16
sar
insb
adc
iret
sub
testb
repnz
and
in
push
in
je
arpl
jle
cs
pop
cmp
push
lods
ja
mov
rcrl
lds
iret
out
push
cmp
mov
leave
jo
push
sbbl
inc
outsl
or
or
imul
paddq
jmp
adc
lds
stos
sub
jns
in
jmp
adc
cli
shll
insb
mov
pminsw
je
pushf
add
je
push
lahf
sub
xchg
scas
pop
arpl
test
repz
pop
fs
int
jo
nop
mov
in
xor
or
movsb
and
leave
imul
lret
arpl
repnz
lds
dec
lcall
xchg
bound
sub
lds
push
mov
mov
adc
iret
fcmovb
pop
popa
jo
test
cs
push
insb
in
sbb
xchg
sub
add
push
movsb
outsl
jo
hlt
and
dec
jo
ds
inc
ret
lds
popf
jno
mov
jae
mov
xchg
or
js
into
fucomi
pop
mov
cmp
movsl
adc
jo
cmpsl
fnstcw
dec
mov
jo
jb
inc
cld
pop
jo
leave
cwtl
mov
add
xor
insl
iret
andb
pop
aad
push
sbb
outsb
push
mov
cmpsb
js
inc
ret
or
cmc
mov
or
lock
negl
jmp
mov
pushf
mov
push
jle
popa
mov
in
fs
stos
test
adc
movsb
push
sarl
jns
fsubs
xchg
push
sarl
dec
or
sbb
jno
jo
and
ret
jo
mov
leave
shll
ret
notb
iret
jo
mov
mov
jns
push
add
leave
pmaxsw
int
add
ret
pop
dec
xchg
jo
lds
xor
push
sbb
subb
sbb
or
imul
mov
dec
jo
push
scas
xchg
outsl
dec
mov
mov
loope
sbb
add
push
lds
movsb
inc
in
xchg
mov
cwtl
xor
adc
xor
mov
push
mov
jmp
mov
jo
inc
lahf
idivb
inc
sti
jnp
mov
loope
cli
cmp
into
jnp
jl
jmp
outsb
jo
fdivs
out
icebp
sub
loope
mov
cmp
xor
stos
xor
mov
shll
push
adc
mov
add
push
mov
jo
mul
std
pop
push
sub
jo
sub
pop
xchg
inc
mov
adc
stos
dec
xor
imul
repnz
jo
sub
in
in
cwtl
jo
call
cmp
xor
xchg
mov
stos
int
xchg
mov
xor
leave
jno
mov
push
loope,pt
mov
fs
movsb
out
inc
dec
in
aam
ja
or
es
mov
dec
dec
fcompl
movsb
dec
addb
imul
xchg
rcrb
mov
xor
sbbb
add
and
cmp
in
fwait
sahf
xor
and
mov
leave
js
mov
jo
mov
and
icebp
shl
xor
or
inc
popf
mov
jl
das
leave
pop
add
pusha
mov
cmc
pop
cmpsb
in
inc
das
sbb
and
adc
aas
in
imul
cli
push
mov
push
and
cwtl
imul
push
ja
lcall
and
ret
arpl
mov
jo
test
pop
and
jbe
xchg
mov
fs
inc
jo
sub
xchg
jo
arpl
aad
add
inc
push
repnz
or
pop
xchg
js
or
out
jge
push
pop
mov
pop
sbb
jg
jo
fisttps
sbb
test
jne
in
aas
pop
push
int
ljmp
adc
adcl
adc
cmpsb
rcrb
sbb
out
pop
rorb
pop
movsb
or
push
nop
test
add
call
xor
inc
or
loope
jo
adc
inc
lock
sbb
jo
mov
fsubrs
xor
pusha
jo
in
push
mov
lret
adc
arpl
jle
out
jb
or
lds
adc
test
out
nop
hlt
loope
inc
jle
jb
pop
orb
pop
add
ret
jo
aaa
and
cmp
mov
jo
addb
int
add
jl
cwtl
xchg
mov
pop
cmp
jo
sahf
dec
jbe
std
mov
ret
cmp
fidivl
dec
xor
sahf
lds
pop
mov
aam
or
leave
jo
out
and
jo
sbb
outsl
popa
dec
add
mov
jo
hlt
mov
cmp
mov
rcrb
ss
loope
clc
inc
xor
insl
push
fs
rcr
xorb
push
sub
ret
negl
xor
fucomip
push
inc
push
lahf
push
adc
div
add
jo
xchg
shrb
rorl
cmp
push
test
lcall
cmp
aam
mov
loop
inc
xchg
call
push
add
jecxz
test
sarl
jo
popf
pop
inc
fidivrs
jo
sti
pusha
test
mov
jo
jp
lods
cmpsl
xchg
adc
sbb
mov
ret
int
and
push
adc
jmp
jmp
mov
bound
scas
je
adc
mov
leave
pop
movsb
pop
jns
arpl
out
pop
mov
sbb
sti
cs
push
arpl
lods
push
dec
push
js
mov
dec
vpshufd
test
in
push
push
repnz
adc
mov
fdivs
jo
pop
orb
push
dec
mov
jle
das
cmc
daa
pop
mov
pushf
test
iret
jge
fisttpl
push
gs
mov
mov
lea
out
pop
and
movsb
pop
shll
scas
inc
jge
dec
jo
jb
lret
push
jo
jle
mov
jo
test
loope
sub
jo
fs
div
or
dec
pop
pop
sbbb
gs
out
shlb
sub
fwait
out
jo
cmp
and
push
mov
cmp
push
dec
int
or
enter
sti
out
mov
push
adc
add
cs
jne
out
push
jmp
adc
cmp
jge
movsl
clc
pop
jge
jo
xchg
cmpsb
insl
sub
popf
lock
cmp
js
xor
add
orl
faddp
fs
or
mov
dec
lahf
dec
mov
dec
cmc
pop
les
sub
std
cmp
mov
jo
stos
ret
adc
int3
push
addr16
jo
lods
jnp
inc
cli
sbb
cltd
sbb
xchg
iret
jo
lock
and
mov
shl
loopne
arpl
scas
pop
test
dec
popa
aad
and
ret
cmp
pop
jecxz
sbb
mov
leave
sbb
push
mov
pop
in
js
lea
cld
jo
mov
in
or
pop
cmp
mov
and
icebp
cmc
sarb
jecxz
jo
fxtract
or
subb
dec
jo
lcall
jo
ljmp
jo
incl
stos
movsl
lds
cmpl
loop
jo
sub
adc
dec
ja
jo
imul
js
mov
outsl
jne
leave
jo
push
fisubrs
std
or
loop
rorb
or
sub
adc
jo
sarl
sub
jge
jns
dec
iret
inc
int
push
into
scas
jo
std
mov
pushf
jo
aam
adc
sub
inc
pavgw
jbe
jp
mov
xchg
xor
call
outsb
aad
inc
sub
mov
xchg
jo
xor
jbe
push
pusha
dec
cmp
int3
jnp
mov
mov
jo
les
lcall
and
call
xor
imul
jo
lds
je
cld
fs
dec
das
cmpsl
sub
cmovbe
sbb
out
jo
ret
rcrl
inc
cmpl
pop
insl
or
add
lods
mov
push
lret
es
fs
hlt
cmp
add
push
mov
inc
insb
cmp
cmc
arpl
rcrb
jecxz
jmp
imul
icebp
adc
xor
cmpsl
dec
or
and
scas
inc
lds
xor
arpl
and
loope
mov
mov
iret
jo
push
and
lds
mov
sbb
inc
push
inc
jle
sub
lret
add
aam
jo
pop
jecxz
pop
idivl
ret
test
imul
mov
push
test
jo
outsl
cld
pop
cmp
ret
imul
ret
cmpl
or
scas
jo
insb
or
addr16
jo
addr16
int
xor
ret
mov
pop
xchg
enter
out
add
jp
jo
inc
movsl
jle
daa
and
jge
adc
jo
shll
jo
xor
rorl
inc
sti
cmp
lds
push
andb
ja
fnstcw
jo
repnz
and
mov
subl
mov
lcall
adc
dec
push
lock
cmp
inc
or
jo
icebp
lahf
pusha
pushf
jmp
push
inc
pop
cmpsb
jo
dec
lds
sub
jne
push
aad
imul
push
dec
ret
aam
jo
test
icebp
test
xor
js
xor
jp
xchg
inc
dec
fwait
pop
in
lret
jo
cmc
lea
sar
dec
push
in
jo
xorb
jo
testl
addb
jbe
cmp
jo
mov
xor
adc
cwtl
inc
jo
addr16
repz
sbb
jo
jle
adc
jo
testl
popf
out
rolb
cmp
sub
fsubl
adc
scas
int
testl
mov
push
ja
pop
mov
out
xor
xor
jo
je
mov
jo
xchg
add
sbb
adc
push
std
add
bound
pushf
or
test
jo
jl
mov
les
in
xchg
mov
sub
and
push
fiadds
mov
jmp
pop
xor
daa
jecxz
inc
sti
jo
ljmp
jo
rcrl
sbb
lods
push
jo
mov
xor
jo
aad
fucomip
test
int3
sub
add
or
daa
cmpsl
ret
js
lock
inc
sbb
sbbl
xchg
and
jo
inc
xor
jo
mov
jae
dec
push
in
push
lds
adc
or
scas
lea
loopne
mov
out
inc
xor
std
lret
data16
jecxz
leave
lods
lea
loope
mov
mov
jo
inc
adc
aam
jmp
in
jge
add
loop
sahf
jo
mov
push
or
out
jmp
jo
enter
arpl
repz
mov
jo
sbb
das
std
jo
popf
imul
jo
adc
mov
pop
sub
inc
push
imulb
imul
adc
xchg
jo
push
lds
jo
jmp
jae
xorb
dec
mov
loope
pop
pusha
cli
cmp
aaa
jo
inc
jge
xlat
jecxz
mov
not
pop
jo
fldl
mov
daa
sarl
jnp
cmp
repnz
jns
jo
add
pop
fdivs
inc
xchg
mov
inc
push
cmp
int
outsb
popf
push
mov
inc
sub
subb
ret
jo
mov
push
xchg
fs
xor
aad
jns
push
loopne
ret
mov
imul
sub
je
jnp
pop
pushf
fidivl
nop
in
xchg
sbb
ja
int3
sbb
push
dec
sub
out
push
repnz
js
or
sbb
das
pusha
jo
push
mov
add
jmp
fnstcw
inc
push
jb
nop
mov
sbb
jle
shrl
push
and
call
pop
mov
dec
xor
lea
roll
jmp
ret
fs
in
ret
inc
sub
enter
daa
push
scas
xor
jo
call
test
nop
fs
add
loop
sub
enter
mov
jle
ret
ret
lods
cwtl
stos
or
sub
out
jo
int
or
in
shll
test
out
or
xchg
imul
fldcw
loop
jo
movsl
and
ret
sbb
or
in
cmpsb
imul
pop
push
inc
je
cmpl
rcll
push
dec
add
jo
jp
rcrl
aad
jo
lds
dec
outsb
or
mov
pop
fcoms
adc
ja
cli
pop
vmread
das
repnz
push
jno
cmp
or
enter
sbb
addl
sbb
ret
adcb
fidivs
in
xchg
mov
push
ds
inc
mov
hlt
dec
sar
test
cwtl
js
not
jo
and
fnstenv
jo
and
sub
repnz
ljmp
imul
andl
xorb
or
jo
jecxz
lea
cmpb
jmp
dec
adc
xchg
ljmp
in
jo
cwtl
data16
stos
cmpsl
jle
jo
lcall
sub
pop
adc
fsubs
leave
push
mov
adc
lahf
lea
dec
jo
inc
pop
pushf
lds
jg
mov
popa
fldl
push
ret
inc
out
push
leave
push
rol
add
jne
xlat
sldt
outsb
mov
ljmp
sbb
fdivs
iret
add
std
popa
pop
jle
adc
rol
jo
and
scas
jns
enter
jo
sub
inc
add
push
roll
pop
lahf
dec
push
and
bound
inc
jne
jb
mov
xchg
mov
pop
xor
cmp
sbb
mov
xor
sbb
cmp
sbb
mov
push
mov
mov
fnstenv
push
psllq
sti
int
jle
repnz
cmpps
cmp
lock
jo
fidivs
pop
jo
sbb
mul
or
xchg
lret
push
jne
xlat
push
std
lea
insb
and
jecxz
das
jo
test
test
jo
scas
leave
jno
xchg
popa
jo
inc
out
jnp
ja
jo
ret
shlb
cmpsb
das
jo
sbb
es
mov
adc
sar
punpckhdq
mov
pop
arpl
test
adc
fldl
cmp
lcall
imulb
std
leave
int
push
stos
mov
jo
mov
clc
cs
inc
sbb
shr
sbb
shrb
js
roll
psllq
jne
push
jle
mov
out
fbstp
pop
xchg
mov
cmp
xor
or
adc
cmp
jo
outsb
mov
jo
add
lcall
clc
adc
js
sarb
jo
fprem1
pop
pminsw
ret
repnz
jo
pop
mov
mov
je
xchg
out
ds
sub
orl
jo
push
rorl
inc
push
pushf
push
push
pop
clc
add
icebp
lods
lret
adc
into
movsl
or
rcrl
cmc
xchg
inc
push
and
jge
insl
jg
xor
pop
loope
cmp
xchg
imul
je
sub
xor
or
sbb
and
data16
cmp
test
or
or
psrld
sub
test
aad
fstps
dec
lret
sbb
ror
subb
roll
pop
and
ret
lds
lock
dec
jo
lcall
jo
push
dec
cmp
addr16
mov
cmp
inc
xorl
fucomi
nop
dec
in
xchg
xchg
mov
push
stc
jo
cltd
std
lods
pop
xchg
out
mov
imul
pop
out
shl
les
lock
out
lahf
jo
jae
jg
mov
xchg
lds
xchg
jo
pop
mov
cmp
xor
call
jo
test
mov
ret
jbe
inc
imul
gs
int3
pop
jo
daa
jb
jmp
cmpsl
jg
stc
sbb
xor
mov
mov
dec
jae
movsl
mov
and
aaa
add
adc
filds
imulb
add
call
out
pop
mov
or
jo
xchg
inc
sbb
fdivrl
jo
xchg
idivl
stos
jp
sub
inc
subl
int
in
leave
aaa
lcall
test
xor
jp
jo
mov
mov
mov
jo
xchg
jns
dec
test
jne
sbb
mov
outsl
mov
int3
ret
sbb
push
stos
xchg
sahf
jno
mov
dec
out
jecxz
cwtl
lret
jo
fcmovne
mov
sub
push
xchg
or
nop
je
sub
in
nop
shlb
jp
out
jo
fwait
aaa
xlat
in
outsl
add
cmovl
and
jbe
icebp
add
jo
mov
push
fdivs
cmp
daa
lcall
leave
shlb
jo
dec
ficomps
movsl
loop
fst
sub
js
dec
loopne
jo
leave
dec
test
inc
cmp
jbe
addb
decb
xchg
sub
or
clc
push
sbb
xchg
add
daa
and
sti
pop
jo
cmp
divl
cmp
sub
jo,pt
mov
or
cmpl
mov
xor
sbb
aad
jmp
stos
dec
push
hlt
mov
jo
mov
mov
jo
jnp
xor
add
sahf
lds
mov
jecxz
lcall
lock
jo
mov
gs
in
sbb
jbe
movsl
lea
cmp
rorb
add
push
jo
and
mov
jo
inc
pop
stc
test
lods
mov
sub
adc
jmp
ljmp
adcb
mov
push
cwtl
lds
lret
jne
mov
adcb
lret
stos
jnp
or
push
adc
stc
push
insb
mov
mov
sub
repnz
je
aam
pushf
out
dec
sub
outsb
pop
cmp
in
jns
cltd
clc
nop
cmp
insl
idivl
pop
mov
daa
shlb
add
popf
lds
mov
and
adc
adc
rorl
fmuls
test
add
sub
xchg
lea
das
add
jle
jo
outsb
lock
xchg
inc
pusha
test
mov
pop
insb
xlat
jo
outsl
push
lds
cmpsl
fdivl
shlb
inc
mov
les
int
cmpsb
sub
loope
fistps
outsb
mov
mov
loopne
enter
jo
sarb
mov
sbb
in
and
jae
push
add
rcr
xchg
pop
cmp
pusha
cltd
jmp
sbbl
dec
mov
cmp
jmp
dec
sahf
mov
stos
add
pusha
mov
lds
cmppd
into
jo
sbb
cs
lods
jns
andl
imul
movsl
mov
and
ror
adc
xor
pop
pop
stc
and
pop
imulb
xchg
cmc
push
icebp
add
lds
cmp
and
pop
xor
lret
test
xlat
hlt
mov
int
insl
jbe
and
jo
sbb
leavew
push
adc
add
mov
loope
mov
mov
cmp
notb
push
repz
jp
bound
test
out
ja
push
ror
es
out
inc
negl
xorb
push
fisubs
lahf
inc
push
cmp
push
jmp
gs
out
xchg
push
mov
jae
jp
dec
enter
inc
jo
and
lock
pop
lea
mov
jg
repnz
stos
push
lea
push
xchg
mov
pop
aad
adc
inc
movsb
daa
pop
mov
xorl
scas
orb
fs
mov
ret
adc
out
add
inc
leave
in
dec
incl
lds
push
repnz
or
cmpsl
adc
dec
jo
ficoms
jne
inc
dec
and
sbb
cld
mov
push
andb
repz
sahf
ja
and
cld
mov
push
or
jo
cmpsb
ret
les
pop
push
push
fs
or
mov
movsb
and
or
movsl
push
jo
xchg
fs
shll
mov
and
jo
mov
sbb
xchg
and
sbb
mov
rcrl
mov
flds
mov
jmp
andb
clc
mov
pop
pushf
or
mov
jo
adc
sti
jecxz
in
xor
cmpb
and
mov
push
repnz
loopne
insl
mov
xchg
jo
add
pop
sub
xor
dec
dec
outsb
or
cmp
cld
rcl
fimuls
out
out
jo
and
push
int
fldcw
scas
xor
test
add
push
shlb
outsl
pop
dec
push
imul
leave
inc
aas
xor
packuswb
decb
jbe
xchg
ljmp
ss
call
inc
lds
add
push
lret
nop
inc
jmp
mov
call
jo
hlt
xchg
push
jne
shll
dec
ret
sub
rcr
or
cltd
dec
pop
fs
je
push
cmpsl
lret
cmpsb
lcall
dec
in
aas
mov
inc
mov
gs
push
xlat
cli
push
aas
cmp
jo
int
hlt
rorl
sahf
jo
add
jmp
insb
shlb
repnz
and
cmp
adcb
mov
jo
sub
sub
jo
xor
loopne
cmpsl
and
js
rcl
movsbl
insl
mov
and
adc
stos
jl
mov
bndstx
rcll
pop
and
mov
shlb
pop
dec
push
leave
cmpb
xchg
ret
les
sbb
cmp
jp
mov
mov
je
lock
gs
adcb
mov
sbb
jp
insb
mov
or
scas
inc
cmp
out
jo
das
xchg
xor
mov
ret
repz
fld
cmp
jmp
ja
rcrb
lret
mov
jo
fsubl
sub
cltd
mov
pop
jecxz
lcall
or
jg
cld
pop
lahf
arpl
fists
leave
outsb
popa
xorb
xor
mov
repz
lret
lds
jne
jb
jo
iret
sub
cmp
jo
lock
push
in
roll
jo
shll
jp
lds
mov
push
ret
fs
push
and
add
push
jo
aas
repz
jno
pusha
cmp
rorl
adc
mov
mov
xchg
std
shll
data16
and
jmp
mov
adc
push
ss
lods
fisubrs
mov
ljmp
mov
test
shlb
jo
ret
mov
fisubl
sbbl
shrl
les
dec
mov
jo
sbb
jne
icebp
idivb
mov
mov
aad
sbb
pop
outsb
mov
dec
jo
cmp
xchg
inc
jne
inc
jo
fxch
sub
je
divb
push
pop
mov
jo
loopne
stos
sarl
sbb
subl
jo
mov
cwtl
inc
jo
mov
add
lock
cmp
sub
scas
jle
jbe
enter
push
rolb
push
xchg
scas
jecxz
push
inc
adc
into
cmp
sub
pop
subl
mov
jmp
cmc
mov
int
mov
aam
add
scas
sub
sahf
dec
les
divl
pusha
jmp
shrb
fsubrl
andb
popa
outsl
aad
push
dec
sti
roll
sbb
inc
test
add
push
les
aad
decb
adcb
leave
jno
mov
int3
fisttpl
dec
cmp
mov
pop
hlt
pusha
add
and
sahf
lock
cmpsl
sti
pop
scas
mov
mov
mov
xchg
fs
push
popa
iret
jo
fistl
leave
idivb
cmp
dec
dec
xlat
fs
adc
sub
xrelease
jo
lret
out
aad
jo
xor
cmp
ljmp
mov
and
pop
jo
sub
cwtl
mov
es
push
sub
mov
sub
int
or
ret
inc
adcb
jo
sub
mov
jo
xchg
je
jmp
mov
add
loopne
push
aaa
ret
jmp
sbb
and
jle
jmp
cmpb
jmp
lahf
fs
jo
les
ret
mov
jo,pn
das
loope
mov
and
pusha
sub
or
push
sbb
xchg
insl
sbbb
mov
js
aam
sub
pop
bound
cmp
loop
sub
outsl
jne
inc
dec
pop
je
cmp
or
test
and
xor
dec
lea
push
or
mov
loope
nop
out
fisubs
or
xchg
xor
or
inc
mov
jmp
sub
jmp
mov
daa
add
add
mov
mov
pop
shl
mov
loopne
int
xor
xchg
cs
pop
sbb
mov
inc
xchg
mov
lcall
fnstsw
sub
add
sub
cmp
scas
loope
push
data16
xor
rcrl
add
int
shlb
or
insl
inc
cltd
push
inc
hlt
test
add
pop
aaa
push
xchg
enter
ljmp
pop
out
stos
stos
clc
push
test
mulb
jo
push
cld
inc
stos
jecxz
add
push
push
push
les
jecxz
jo
pop
cmp
mov
data16
push
push
sbb
push
lahf
mov
call
sahf
lods
mov
push
in
aad
jmp
jle
push
adc
stos
movsb
bound
or
les
dec
test
jle
push
sub
cmp
lds
mov
push
mov
es
stos
lea
gs
xor
jo
lds
js
jge
mov
cmc
test
int
scas
jo
lods
les
cmp
sub
aaa
mov
in
stos
inc
push
and
mov
mov
jo
lods
jl
and
or
imul
push
test
nop
jg
outsb
hlt
xor
jo
lcall
jo
jbe
mov
or
fnstcw
idivb
mov
and
ret
inc
xchg
adc
addr16
jo
in
adc
xor
sub
das
int3
sub
pop
jle
jg
nop
cmp
fidivs
testb
sbb
cmp
mov
dec
scas
loopne
xchg
inc
sarb
sub
fnsave
pop
mov
loop
or
lds
adcl
sbb
std
dec
clc
push
mov
jo
movsb
jae
cmpsl
jecxz
jo
enter
dec
sbb
leave
and
cltd
dec
and
xchg
sti
lods
imul
lock
push
dec
js
dec
xchg
lea
aaa
cmpsb
ficomps
jmp
and
push
adc
fcompl
lret
loope
jbe
shl
xor
xlat
sbb
or
sub
cmp
std
fbld
cmp
or
push
lock
push
js
mov
ss
push
jle
jo
xor
les
mov
pushf
and
iret
test
pop
repz
or
mov
icebp
mov
fs
xor
aas
lock
jle
rcl
or
cmc
int
sbbb
and
xchg
es
jo
mov
jae
or
ret
movsb
sbb
jo
lds
dec
gs
in
jno
mov
mov
notb
lods
sbb
movsl
cmpsb
jo
addr16
xchg
jmp
pop
cmp
lds
std
xchg
mov
sub
cwtl
and
fdivr
push
lds
ficoms
fstl
imull
and
dec
jo
cmp
leave
lock
push
or
or
jbe
sub
push
push
std
seto
imul
sub
jae
fcomip
nop
push
repz
std
scas
jbe
push
add
loop,pn
jo
frstor
xor
jo
rorl
and
pop
into
push
mov
inc
lret
pushl
adc
cmp
mov
movl
fs
arpl
jo
das
mov
lods
jo
rorb
xchg
cltd
jmp
inc
jg
jge
push
mov
js
push
lahf
ja
mov
jge
push
sub
jmp
jo
fisubl
mov
jbe
jo
test
ret
lods
cmp
jo
sub
mov
jg
nop
sahf
ret
mov
pop
das
icebp
data16
jo
ds
leave
es
push
jo
rorl
xchg
push
out
in
jo
mov
divb
jo
sbb
adc
inc
int
or
jo
repz
fs
out
jo
xchg
lock
mov
mov
nop
int
jae
aaa
jge
jo
inc
dec
xor
jl
xchg
push
ret
dec
mov
mov
or
push
lds
sbb
imul
popf
iret
and
dec
and
les
mov
adc
jo
push
pop
pop
in
ret
xlat
push
pop
push
sbb
insb
or
cmp
popa
int
dec
bound
dec
push
push
and
inc
in
jg
test
jl
mov
sbb
jo
inc
push
and
push
out
je
cmpsb
add
xlat
push
popf
call
roll
mov
sub
dec
aaa
jo
cmp
pop
jmp
jo
push
cmc
jecxz
fisttpl
jo
lds
in
clc
and
jmp
fsts
xor
jo
leave
mov
mov
hlt
inc
lds
lahf
lock
subb
mov
add
jne
adc
jmp
push
mov
mov
mov
orl
icebp
sub
mov
adc
or
js
adc
lds
jo
sub
clc
xchg
add
sub
and
ret
mov
int3
mov
dec
ret
jo
rorb
adc
xor
int
insb
fimull
addr16
rcll
aas
push
mov
xor
fsubl
mov
leave
test
aam
mov
jl
mov
push
add
loopne
nop
into
and
and
jne
lret
xor
mov
cmp
jle
push
push
test
ret
int3
adc
fs
mov
nop
stc
push
pop
lods
jo
mov
mov
add
leave
mov
lret
nop
and
fs
div
jp
vpshufd
dec
jno
stc
xor
subl
mov
inc
mov
pop
cmp
dec
jmp
xor
ret
or
jo
mov
lods
stos
mov
jbe
mov
pop
test
and
es
fcmovnbe
jo
or
cli
arpl
out
and
jo
dec
inc
xlat
imul
sbb
mov
in
sahf
and
adc
jo
add
arpl
test
leave
cld
inc
xchg
insb
push
jmp
mov
aas
je
inc
stos
scas
insl
jb
xchg
dec
shrl
xor
nop
mov
inc
lahf
mov
addl
in
data16
adc
sbbb
adc
cmp
lock
fsubl
out
cmovl
scas
mov
les
mov
cld
and
lock
orb
testb
jle
je
cmp
dec
insb
imul
movsl
fs
popf
scas
cmp
ret
arpl
sahf
add
xor
lds
call
pop
and
xor
jo
inc
aas
push
xor
shrl
lock
jecxz
scas
xor
mov
xor
jo
je
mov
das
jo
insl
jnp
xchg
das
imul
lea
jo
fidivrs
add
lds
jno
sub
push
jns
mov
dec
xchg
ret
sub
jo
mov
scas
sub
cmp
jo
cld
rcrl
pop
push
das
xor
cmp
rcr
add
dec
xchg
sarl
pop
push
insb
popf
mov
insb
inc
mov
imulb
leave
or
cmp
outsl
xor
jo
sub
cmp
dec
mov
aad
cli
xchg
push
shll
adc
sbbl
jo
lods
movsl
adc
inc
mov
add
stos
mov
add
jnp
jbe
cltd
wrmsr
je
jle
hlt
cmp
pop
xchg
aaa
mov
aam
lods
lcall
xor
nop
repnz
jg
dec
push
cmpsb
jle
add
or
jo
jge
ss
xchg
add
or
cmp
test
addr16
js
add
lock
pop
test
xchg
add
xchg
xchg
mov
and
int
xchg
orb
sbb
jbe
pop
jo
sti
inc
hlt
lea
add
pop
adc
inc
shlb
icebp
xchg
xchg
pop
mov
xor
loope
pop
stos
jne
sub
xor
adc
jo
mov
lea
or
vmulsd
and
jge
inc
sub
loop
cmp
dec
sub
inc
dec
mov
jp
cmp
jo
arpl
movsb
pop
aaa
clc
pop
jo
hlt
lds
rorb
xor
fwait
jge
mov
fsubs
push
push
jo
xor
bound
loope
int3
jns
ret
jo
arpl
push
loope
jo
sbb
scas
shll
int
inc
mov
mov
mov
cmc
mov
push
lods
jo
jge
scas
fcoml
in
xor
insb
mov
jo
fcmovnbe
int
jns
lods
mov
mov
add
push
into
and
inc
sub
jo
add
das
cmc
aad
jb
xchg
insl
pop
popf
jp
orl
lcall
inc
lds
rolb
cmpsl
into
leave
add
mov
and
xchg
pop
shll
insb
test
sti
and
lods
add
fisttpl
loop
mov
inc
push
inc
cmc
sub
jo
mov
lahf
std
f2xm1
jo
mov
mov
jo
dec
decl
add
push
jae
repz
stc
mov
into
dec
mov
hlt
inc
out
jne
outsb
shrb
adc
jne
lods
jge
ja
stc
bound
rcl
scas
ret
push
jp
mov
sub
push
and
adc
nop
lcall
ljmp
lret
btc
mov
and
shll
js
xchg
push
outsb
push
dec
mov
inc
push
add
scas
jmp
jbe
leave
mov
cmpb
stos
inc
rcl
jo
daa
jb
mov
sbb
cmpb
subl
push
jb
mov
out
in
jo
ljmp
mov
and
pushf
jo
jmp
aad
fcoml
lea
cmp
inc
fs
clc
adc
jo
pop
mov
arpl
orl
stos
cmp
jecxz
push
lds
ljmp
js
dec
andb
test
inc
sub
jp
adc
xor
fisubrs
or
js
push
sti
mov
popa
jo
dec
les
sub
add
fists
dec
scas
jo
rcrl
jno
add
bound
test
cmp
or
nop
jo
lock
or
ret
inc
subb
jo
bt
jne
in
jo
stc
mov
xchg
push
inc
dec
jmp
sub
sub
or
stos
shrb
xchg
push
out
int
fisubs
ds
jo
jne
rorl
or
adc
jo
add
xchg
lods
ljmp
fcmovu
cli
movsb
xor
xchg
pusha
push
and
ret
or
out
nop
dec
gs
dec
cmpsb
ja
insl
es
stos
xchg
jecxz
popf
xlat
add
xor
sbb
or
sub
jo
mov
cmp
stos
or
in
addr16
mov
mov
ja
shlb
dec
mov
inc
adc
jge
sub
push
adcb
cmp
xorb
push
add
in
fdivrl
test
xor
fwait
and
icebp
test
cmp
imul
js
or
bswap
jnp
repnz
sbb
lret
test
jl
pop
jnp
jo
pop
or
ret
jo
pop
int
iret
push
fiaddl
rcl
mov
lds
nop
dec
mov
ja
int3
fs
ljmp
jmp
insb
inc
les
data16
mov
repnz
leave
xchg
adc
push
int
mov
push
clc
cmp
ds
pop
jle
lds
jno
testl
loop
in
push
and
aad
push
ret
sub
rclb
lds
sub
xchg
fs
inc
sbb
xor
sub
mov
or
lds
daa
test
mov
jo
jmp
std
leave
jo
shlb
in
dec
cltd
jns
push
paddsw
sub
stc
xchg
and
sarl
inc
jo
mov
arpl
outsb
dec
aad
mov
out
and
sub
xor
loop
sub
cmp
out
xor
loopne
inc
repz
add
or
sub
je
add
cld
push
xchg
push
jo
sub
mov
xor
xor
jo
cmp
pop
mov
xchg
jo
mov
dec
dec
mov
sub
in
sahf
jo
ja
roll
adc
and
sub
adc
sbb
mov
stos
mov
cmpsl
jmp
lcall
pop
shll
mov
cmp
mov
inc
mov
clc
jo
mov
daa
dec
lahf
pop
jns
jmp
jge
cs
insb
sub
pop
adc
dec
std
xor
push
fwait
jo
fs
jnp
lods
mov
jo
fldz
sahf
mov
jo
pop
ret
mov
cmpsb
jo
or
lds
fisubl
xchg
das
mov
mov
int
jo
adc
rol
jo
sub
bound
shl
push
fdivrs
je
push
jo
xor
bnd
push
pop
loope
xchg
insb
js
imul
sub
adc
jns
adc
mov
inc
scas
mov
adc
shlb
jo
or
test
jo
mov
mov
add
mov
aas
enter
push
cld
add
xchg
xchg
push
xor
movsb
xlat
orb
cmp
and
mov
ret
xchg
jo
bound
int
enter
pop
fs
pop
xchg
stos
add
mov
pusha
sbb
mul
test
in
jo
es
aas
leave
lock
jnp
xchg
fs
mov
sbb
sbb
sbb
cmpl
and
test
push
xor
ljmp
or
rorl
dec
ja
fldenv
jo
and
cmp
jo
dec
scas
or
add
inc
loope
jp
dec
icebp
jo
jmp
movsb
dec
addr16
xchg
xchg
mov
test
in
shll
lock
rclb
jecxz
push
pusha
mov
adc
adc
jo
ja
add
mov
push
cmpsb
jg
cmc
addb
pop
or
mov
int
cmp
sbb
jo
imul
or
fidivl
jo
rol
push
imull
sti
mov
cmp
jmp
dec
lock
cmpsb
popf
mov
mov
push
hlt
mov
jo
fcmovnbe
mov
nop
addr16
mov
bound
ret
push
xchg
inc
add
mov
and
sbb
jo
dec
or
jne
jmp
mov
rorb
clc
sarb
jo
xchg
or
loope
sbb
nop
ret
mov
jno
inc
jns
xor
push
lods
js
leave
js
out
pop
add
insl
mov
jmp
stc
movsb
and
in
rcll
dec
jo
inc
or
clc
in
sub
sysexit
jno
jle
fdivrl
shlb
rcrl
push
outsb
adc
gs
int
fs
ja
nop
les
pop
push
inc
dec
xor
adc
daa
sbb
jo
ljmp
jo
aas
ret
xchg
insl
mov
int
roll
sbb
fwait
add
jo
xor
inc
add
adc
adc
test
pushl
cs
cmp
cmp
jo
lea
lcall
xchg
stc
cmp
repz
push
enter
scas
shr
pushf
mov
orb
xor
xlat
push
daa
mov
bound
dec
and
xor
xchg
nop
push
cmc
call
sti
in
cvtpi2ps
inc
fistl
jle
popf
fsubs
push
leave
or
nop
inc
cltd
sub
xor
mov
push
testb
shlb
mov
mov
mov
sub
xchg
mov
mov
fsubrs
daa
ror
cmpsb
lock
test
inc
test
sbbl
mov
std
mov
hlt
jmp
xchg
jo
lds
mov
aaa
pop
leave
ret
cltd
jg
cli
cmpsb
xor
mov
xlat
rol
dec
mov
xorl
fldenv
cld
xchg
data16
jo
cmp
fdivrs
pop
sub
pop
mov
sub
xchg
jo
inc
hlt
jmp
jg
mov
cmp
icebp
xchg
jo
pop
fisttpll
sbb
xor
sbb
xor
out
orb
mov
xchg
rolb
inc
dec
jo
jge
lods
ss
lods
mov
xadd
pop
push
jnp
push
call
insl
mov
jmp
mov
dec
fs
push
sub
xor
rorl
test
call
add
jo
dec
jno
cmp
fists
pop
sbb
pop
pop
sub
ret
sub
cmp
js
pop
pop
pop
sub
out
sarb
fwait
stos
orb
or
add
loope
cmp
jo
les
loopne
cmc
cmp
nop
in
adc
and
xor
fstpt
or
out
add
jo
sbb
outsl
sub
ret
lret
xor
inc
xor
jo
leave
test
aas
lds
dec
nop
sub
mov
mov
pop
xchg
mov
mov
jo
mov
std
lds
mov
jne
js
aaa
push
and
mov
jo
lds
rorb
mov
inc
and
jno
jb
sbb
outsl
push
add
bound
in
popf
xchg
ja
mov
jo
or
add
jl
jo
aas
cmpsb
rcl
in
cltd
jo
ret
cmp
mov
sub
push
lahf
dec
leave
inc
inc
fildl
aad
xor
lods
jns
push
lret
jo
dec
ret
mov
sbb
lsl
call
jmp
inc
mov
int3
push
mov
sbb
fmul
hlt
push
cmp
mov
fistps
inc
aam
push
andb
jns
mov
dec
jo
adc
rcll
nop
jle
incl
cmp
sti
loop
mov
xor
mov
mov
cltd
rorb
bound
mov
loopne
js
or
jo
aad
push
and
push
ret
jle
add
mov
mov
push
ret
mov
fnstenv
add
push
add
pop
xor
mov
ds
jle
inc
push
shr
int
jmp
sahf
sub
push
inc
push
jo
xor
stos
dec
repz
or
or
test
cld
dec
mov
mov
jno
add
aad
lods
and
ret
add
stc
ficoms
popl
inc
leave
cmc
adc
test
mov
pop
xor
jo
roll
pushf
jo
shlb
fs
xor
push
clc
clc
mov
push
jo
test
sub
ljmp
mov
fwait
pop
and
jl
sbb
pop
inc
xchg
repnz
shlb
jmp
sarl
xchg
in
addr16
mov
sub
lock
int
mov
in
loopne
inc
and
cmpl
leave
repnz
stos
jo
shrl
scas
roll
rcrb
adc
pop
jo
das
int3
sbb
fisubrs
shrb
dec
jo
fisttpl
jo
xor
ret
insl
nop
jo
mov
or
jo
outsl
inc
test
lea
in
and
cmp
jo
xchg
mov
inc
out
int3
lds
mov
mov
jnp
xlat
or
ja
in
jo
xor
mov
sub
push
or
cmc
xor
pop
push
mov
fstps
push
scas
sahf
fildl
icebp
mov
lea
enter
aas
jmp
mov
aad
out
imull
les
stos
lahf
dec
icebp
jo
mov
jle
xor
and
mov
cmp
das
roll
pop
cmp
jle
out
ds
push
xchg
dec
shll
cmp
xchg
xor
jmp
leave
jbe
cli
loopne
cmp
lret
mov
sub
insl
cmpb
sbb
imulb
loop
xchg
jo
sbb
mov
jo
cmp
adc
fsubl
dec
xor
sub
dec
mov
sahf
xchg
jo
aas
pushf
test
jne
inc
in
or
and
cmp
sti
jp
jo
adc
scas
fs
hlt
lahf
lret
jo
ret
sub
push
pop
xlat
fidivs
outsb
rolb
hlt
aas
cmc
jo
pop
sub
repz
mov
adc
scas
gs
adc
cmp
ljmp
rol
sbb
and
pushf
imul
rcll
lds
dec
add
lods
decb
pop
lret
out
mov
pop
sub
sub
dec
add
stos
fs
hlt
ja
sub
ss
cmp
mov
cmpl
pop
push
lock
xchg
fidivrl
call
movsl
xor
pushf
cltd
es
popa
pop
insb
bound
dec
out
loope
mov
scas
jo
pop
and
mov
lock
out
pop
or
pop
jo
mov
rcll
sbb
data16
jo
out
xchg
add
cmc
das
inc
mov
xlat
add
push
addr16
mov
clc
in
hlt
fisttpl
jbe
push
jp
mov
call
jp
in
push
cli
push
pusha
mov
or
jo
ret
jnp
lods
inc
movsb
lahf
jo
loope
inc
mov
sub
push
inc
pop
mov
adcl
hlt
lahf
inc
jo
outsl
push
aas
stos
ficompl
jge
jo
mov
adc
and
in
jecxz
and
push
cmp
push
cmp
lds
dec
sarb
pushf
dec
cmc
cld
rcll
call
in
cmc
jb
movhps
adcb
or
test
push
mov
aad
xorl
mov
push
jo
mov
pop
inc
mov
xor
xorl
mov
ffree
jo
out
aas
sub
push
jo
rcrb
fildll
outsb
jo
in
int
and
adc
jno
inc
fidivl
andb
pop
nop
cld
and
add
fldenv
sub
mulb
cltd
push
pop
dec
int3
jnp
js
pop
mov
bound
jbe
xor
out
pop
xor
sbb
xchg
push
jo
fsubl
xor
shll
inc
popf
mov
addb
cmp
sub
xor
lds
mov
iret
xchg
stos
loop
shl
mov
outsl
mov
shrb
adc
out
mov
jle
push
out
dec
imul
das
stc
xchg
cmp
loope
int
notl
into
xor
aad
push
cmp
xchg
jo
mov
mov
jo
xchg
mov
rorl
ljmp
push
les
sahf
jo
and
subl
jo
mov
in
or
inc
jb
dec
and
sbb
xorl
mov
or
aaa
xor
xchg
mov
mov
lock
cli
nop
mov
outsb
jns
push
loop
xor
movsb
popa
mov
out
xchg
rcrb
lret
aaa
cs
in
cmp
or
mov
mov
shlb
lds
loopne
sub
jp
push
shll
adc
std
ljmp
enter
movsl
xorb
or
pcmpgtb
adc
or
jo
fadds
pop
clc
jo
xor
es
push
rcll
leave
sbb
push
lock
aas
leave
test
jo
mov
arpl
inc
ljmp
ret
adc
inc
mov
push
aaa
aas
and
cmp
hlt
lock
nop
js
adc
push
xor
jo
mov
and
mov
lea
inc
js
push
test
out
mov
pushl
stc
in
loop
pop
and
movups
mov
fst
fbstp
je
mov
std
push
lock
jl
nop
mov
add
mov
daa
scas
and
mov
in
pop
adc
jo
imul
scas
jo
gs
add
pop
adc
jae
lret
xor
xorb
adc
sub
mov
rcrb
arpl
les
pop
add
lcall
mov
daa
hlt
dec
xor
addr16
add
jo
addl
mov
repz
or
cmpsl
roll
mov
and
jo
std
outsl
stos
dec
push
ret
jbe
add
test
jo
adc
stc
shll
cmpsl
out
jp
shl
jo
lods
xor
fucom
or
ljmp
jg
rol
lods
xchg
popa
pop
test
leave
es
mov
mov
push
jno
xchg
push
sbbb
push
inc
jo
ljmp
jo
cmp
mov
lds
lret
adc
mov
xchg
nop
add
push
push
gs
cmp
inc
add
or
push
enter
ja
rolb
push
sbb
jl
mov
mov
rcll
jno
jo
out
fcoms
mov
sub
sub
xor
nop
es
jne
pop
dec
ja
popw
scas
in
sub
jp
jns
jno
jbe
jo
push
jmp
ret
add
je
call
mov
leave
jno
jo
xchg
outsl
test
adc
lds
jbe
push
cmpsl
sub
jo
jmp
jo
cmpsb
leave
ret
or
jge
jo
jnp
js
jmp
mov
rcl
out
test
jo
inc
pop
xchg
jno
push
mov
insb
add
inc
pop
cwtl
aad
out
mov
roll
mov
jo
out
inc
out
mov
push
add
ret
inc
into
or
loopne
push
je
shl
lods
mov
push
cs
call
inc
ja
fiaddl
jo
pop
jle
test
jmp
loop
push
scas
sbb
push
and
jecxz
cmc
pushf
lahf
add
push
mov
inc
dec
xchg
jb
pop
xchg
leave
mov
mov
cld
enter
out
mov
leave
push
cmp
add
mov
dec
sub
rcrl
js
es
mov
jmp
iret
xor
fwait
push
movsb
out
cmp
pop
push
mov
repnz
jns
sbb
icebp
hlt
stos
ss
xchg
jo
mov
inc
into
xchg
inc
mov
or
ret
pushf
pusha
std
add
iret
inc
push
loopne
jns
jo
xchg
movsl
pop
ret
call
dec
test
dec
lcall
in
xchg
leave
push
adc
mov
divl
inc
nop
fcoms
and
shll
sbb
int
imul
dec
cmp
jmp
icebp
pop
xlat
cmp
in
xor
jo
xchg
push
sub
gs
das
adc
cmp
icebp
sti
insl
jo
out
lahf
add
lods
lds
pop
cltd
mov
mov
outsl
rcll
jb
scas
aaa
fucomi
jo
and
daa
jo
or
sub
mov
dec
and
ds
lods
mov
scas
pop
sub
mov
int
jnp
js
rorl
aas
dec
jo
inc
lods
stc
les
adc
cmp
out
icebp
push
out
cmp
js
adc
mov
aaa
insb
loopne
leave
lret
stos
jo
loop
adcl
les
roll
jo
push
sbb
jno
sbb
or
shrb
imull
pop
shrb
bound
mov
jo
insl
inc
push
pop
mov
cmp
and
out
push
pusha
imul
xchg
int
add
sbb
in
leave
xor
js
fiaddl
or
lds
test
fwait
lods
sub
gs
mov
cmp
cmp
clc
aam
ja
sub
mov
and
pop
dec
shll
mov
out
int3
mov
popa
fnstenv
fimull
pop
mov
push
xchg
orl
cmpb
xor
movsb
sarb
sbb
je
mov
cmp
std
or
stc
mov
xor
jo
movl
pop
setbe
xor
bound
add
jo
sbb
dec
pop
loope
sbb
inc
inc
test
out
and
push
lcall
push
push
adc
pop
lods
jno
lods
push
pop
add
sub
cs
cmp
xor
or
and
dec
popf
lahf
adc
mov
mov
pop
fxtract
shl
and
lods
outsb
push
jge
cmpsl
test
mov
or
cmp
iret
or
cli
inc
cmp
lds
mov
mov
sub
inc
jl
adc
sysexit
xchg
push
push
mov
std
insb
je
pop
jle
pop
mov
jo
mov
cli
cmpsb
jo
or
inc
orl
popa
loope
cmp
enter
lcall
and
and
movsl
adc
lods
cmp
mov
adc
mov
jg
je
lea
lods
pop
jno
add
sub
add
sbb
inc
lahf
jo
xor
push
inc
sti
enter
cmp
fucomi
mov
or
aad
aas
cwtl
sbb
loopne
cmp
mov
lea
loope
or
arpl
jno
sub
jo
xchg
iret
jmp
jo
cli
push
pop
mov
popl
repnz
xchg
jo
adc
jnp
cmp
jo
mov
ss
loop
inc
movsl
mov
je
out
adcl
inc
out
in
inc
sarb
daa
sbb
adc
mov
shlb
mov
dec
jo,pn
mov
adc
fistps
xchg
lods
flds
jo
out
loope
xor
jo
lds
std
xor
mov
mov
aas
or
inc
jo
cwtl
dec
mov
mov
bound
lds
fs
pavgb
lock
and
xor
pop
xchg
nop
add
mov
ret
jo
outsl
sarb
push
sti
inc
jo
xor
idivl
jo
leave
push
push
mov
inc
cmp
in
adc
les
sub
push
xchg
pop
dec
sbb
push
loope
andl
inc
mov
mov
gs
stos
outsl
pushw
and
ret
jo
fwait
hlt
insb
push
mov
leave
clc
cmp
mov
and
jne
jo
pop
cli
push
pop
shll
adc
jge
inc
pop
loopne
popf
rcrl
xchg
pop
nop
push
jo
in
ret
mov
sbb
add
ja
cmp
jmp
jne
jo
inc
mov
je
dec
jle
sbb
jo
push
mov
jns
shll
pop
xchg
jo
mov
adc
or
nop
pushf
fisttps
jp
cmp
jmp
dec
call
outsb
dec
mov
jo
pop
lahf
mov
sub
jno
push
ss
jecxz
popf
push
push
fsts
stos
fiadds
inc
out
data16
jo
rorl
cmp
xchg
fsubrl
scas
sub
jo
xchg
lds
mov
popa
dec
inc
repz
imul
push
lds
mov
flds
in
inc
jo
jnp
push
lods
jo
pop
lea
cmp
ret
mov
ss
cmp
imul
pushf
inc
jo
inc
lret
dec
repnz
inc
sbb
adc
ret
or
lds
sub
add
adc
das
imul
movsb
inc
leave
pop
adc
psubq
shll
sbb
nop
sub
addb
adc
jg
lret
sub
xorb
sahf
push
xchg
loop
into
pushf
popa
mov
outsb
lds
sub
fisubrl
jo
and
add
jg
push
push
test
in
jb
dec
cld
xlat
inc
cmp
lods
xchg
mov
or
loop
mov
jo
inc
cmc
ljmp
dec
push
sbb
or
cld
out
add
inc
dec
jecxz
pop
jo
shrl
push
mov
xor
lret
push
inc
jg
hlt
add
repnz
in
mov
mov
fimuls
sbb
sbb
clc
push
mov
out
es
jo
xchg
dec
sbb
ret
inc
imul
repz
fs
jmp
loop
pop
cmpsl
in
jl
mov
jo
scas
lea
in
xchg
clc
sahf
inc
or
stos
push
ud0
ret
movsb
mov
jle
pop
jo
pop
mov
test
fbstp
pop
xorb
lcall
push
push
mov
inc
mov
lahf
lcall
addl
std
jns
jo
add
sub
and
adc
xchg
dec
cmp
out
scas
cli
dec
mov
sub
cmp
xchg
and
jns
jo
sub
jns
jo
lds
mov
adc
sbbb
mov
dec
jo
stos
sbb
pop
dec
sbb
out
sub
enter
jle
push
jae
or
ljmp
shl
pop
mov
jo
inc
jne
add
enter
in
or
or
push
repz
popa
or
cmp
mov
and
push
in
push
fstl
es
xchg
js
or
fs
mov
xchg
mov
aad
jge
insb
push
cs
xor
jle
sbb
fimuls
aad
and
bound
mov
push
dec
or
jo
and
scas
fidivs
add
and
lahf
loopne
adc
gs
push
les
lds
or
hlt
pop
adc
jo
arpl
jmp
mov
int
cmp
push
in
into
out
scas
mov
in
add
cwtl
cmp
mov
mov
notb
rcll
mov
outsb
mov
sbb
cmpsl
or
pop
xor
inc
jo
imul
subl
add
shll
jo
sbb
iret
inc
xor
adc
xlat
aas
pop
ss
jo
add
mov
scas
aaa
in
lock
xchg
fisttpll
imul
cli
sbb
add
and
loope
orl
jae
lfs
scas
cmpsl
std
jle
in
mov
mov
mov
fs
and
jo
imul
add
jo
ss
adc
push
or
cmpb
mov
lret
shll
push
dec
int
mov
retw
sbb
or
fsts
sbb
dec
jo
jns
mov
mov
push
scas
mov
loop
js
adc
jo
mov
xchg
out
movsl
jo
or
pusha
mov
jo
in
sbb
adc
jmp
mov
mov
aaa
add
out
loop
cmpl
stc
insb
mov
data16
mov
decb
or
pop
jp
mov
test
test
jp
shlb
adc
and
sub
mov
mov
aas
shll
jo
jecxz
sahf
iret
shlb
test
adc
subb
call
fs
jo
mov
int
mov
sub
es
mov
jl
leave
and
push
jecxz
sbb
comiss
rcrl
jo
shlb
lret
jo
mov
rolb
ja
cs
and
sub
sbb
jbe
fs
mov
lods
push
leave
jo
mov
add
and
incb
shr
adc
jo
add
jo
cs
sub
xor
jae
mov
mov
push
clts
addr16
or
shrb
scas
leave
jl
mul
sub
sbb
cmp
sub
jo
out
hlt
aas
stc
mov
sub
xor
bnd
test
subl
mov
pop
dec
jmp
sbb
gs
out
sub
or
hlt
test
and
add
add
jle
iret
push
jecxz
addl
mov
call
mov
mov
jns
jle
mov
adc
les
jo
std
or
push
icebp
jo
test
fcom
pop
sbb
push
movsl
flds
int
xor
sti
push
jo
dec
sbb
jbe
call
movsl
loopne
ret
es
jo
mov
mov
cmp
lods
mov
jo
mov
sbb
repnz
hlt
std
aam
sahf
call
leave
and
out
jg
sbb
cld
repnz
jo
xor
push
lret
xchg
dec
jo
push
push
sub
xchg
lock
adcb
enter
fwait
js
pushf
imul
jbe
pop
jmp
inc
push
test
add
mov
adc
enter
push
push
fbstp
push
lea
jmp
hlt
sub
into
subl
pop
pop
jo
mov
adc
mov
and
addr16
cwtl
dec
inc
mov
jo
cs
xor
in
sbb
nopl
insb
jo
sub
shl
jmp
mov
lret
cmp
loope
xor
scas
jo
mov
scas
pop
shl
movsl
cltd
in
push
or
in
in
add
addb
rcrl
pop
mov
sbb
jp
imul
xor
jnp
test
push
jbe
ds
sub
mov
pop
mov
push
mov
data16
mov
jae
push
add
or
and
xor
fnstenv
pop
bound
xchg
sbb
inc
idivl
sub
xor
push
add
outsl
dec
push
mov
sbb
push
mov
xor
jo
out
cmc
mov
and
push
push
sbb
pop
ret
popa
andb
jo
inc
xorl
movsl
mov
xchg
mov
popa
sub
jno
mov
mov
push
adc
jo
mov
add
punpckhwd
int
sbb
mov
sbb
xor
push
leave
jle
cld
add
push
gs
nop
inc
movsb
je
pop
xchg
cltd
jecxz
fwait
loopne
shll
imul
enter
sarl
sbb
loope
mov
pop
push
cwtl
push
outsb
push
out
sub
xchg
mov
xlat
cli
ljmp
in
add
jo
fildll
xchg
mov
sbb
scas
inc
ljmp
mov
mov
and
jo
xor
cmovle
popf
fs
jmp
xor
add
in
lds
push
jo
fs
mov
bswap
jmp
jle
faddp
jmp
icebp
push
sbb
or
dec
mov
shll
mov
cmpsl
jle
ret
in
fwait
push
jo
sub
push
or
das
sub
mov
jne
shrd
mov
mov
js
mov
jo
inc
xchg
flds
out
xorb
mov
xor
or
cltd
inc
mov
and
out
cmp
jbe
mov
push
sahf
inc
cmp
loopne
addr16
fbstp
mov
das
sub
push
in
dec
dec
or
mov
pop
shll
adcb
mov
add
hlt
mov
in
mov
bound
cmp
addr16
test
enter
cmpsl
jp
sub
pop
es
loop
mov
jo
das
jle
add
xchg
loope
cwtl
js
into
dec
xor
jecxz
add
push
stos
and
idivb
stc
xor
jo
push
mov
sub
push
push
jle
int
sahf
mull
hlt
ret
ljmp
icebp
loope
xchg
pop
mov
xchg
lock
mov
das
push
insb
rcr
cltd
add
cmp
jne
ret
movsb
mov
outsb
pop
lds
push
xchg
add
sbb
mov
push
js
je
xchg
mov
pop
into
scas
sub
add
lret
ja
fs
sahf
testl
push
cmp
push
int
jo
stos
pop
mov
jo
lds
jl
sub
jo
in
nop
std
test
lock
stos
in
jo
divb
or
shl
rorb
test
jno
fs
nop
mov
adc
xor
cmp
or
xor
in
in
mov
push
stos
leave
nop
jo
inc
xor
jo
cwtl
dec
jmp
jo
test
xor
sbb
negb
jo
in
mov
sub
data16
lock
push
int
test
icebp
jp
repnz
push
clc
xor
xchg
jb
movsb
xchg
in
pop
scas
in
jno
mov
push
add
jo
int
xchg
mov
xor
pop
sar
mov
sahf
jo
sbb
int3
ss
ret
daa
mov
es
jns
out
add
dec
and
popf
loope
inc
les
lret
call
addr16
jo
sub
jns
jp
rclb
mov
fcom
sub
ja
out
stc
and
hlt
daa
sbb
cli
lret
nop
mov
mov
inc
jo
push
sarb
add
fistpl
dec
mov
inc
mov
pop
jbe
js
pop
arpl
les
xchg
or
repnz
pushf
lock
mov
popa
mov
adcb
xor
add
jne
xchg
hlt
cld
icebp
inc
in
in
adc
jmp
lcall
roll
mov
repz
pop
into
daa
inc
loope
fisubs
jo
push
out
clc
inc
mov
loopne
bnd
add
movsb
icebp
jne
jl
jo
aam
mov
in
ret
test
dec
sbb
popa
mov
mov
xchg
std
repz
adc
dec
or
nop
outsl
addb
sbb
mov
leave
jbe
xchg
jo
rorl
out
cltd
xorb
movsl
xchg
and
pushf
inc
in
cs
arpl
lds
or
cmp
shr
in
lret
jo
rorl
lcall
sbb
setle
add
stos
mov
pop
add
inc
nop
xchg
jp
jae
xor
and
ucomiss
int3
jle
das
in
dec
shrl
cmp
into
sub
nop
aas
sub
bswap
outsb
repz
sub
int3
xor
push
ljmp
jecxz
pushf
jmp
rcr
inc
sarl
adc
xor
lds
mov
sbb
scas
lcall
and
testb
fbstp
sub
fwait
jg
pop
lods
push
cmpsl
arpl
mov
shrb
nop
xchg
fs
cs
nop
or
ja
inc
mov
fwait
and
pop
adcb
jnp
cs
jne
and
adc
mov
test
add
jno
sbb
dec
xchg
push
stc
orb
mov
adc
xor
push
in
or
push
jmp
loope
pop
inc
bound
jo
mov
aas
stos
jo
xchg
loope
add
sbbl
jo
leave
pop
popa
pop
imul
rorl
test
mov
lds
jo
test
jle
cs
jns
repz
mov
push
fwait
xor
rclb
emms
add
pop
ficompl
jbe
push
std
lock
test
loope
popf
jb
ljmp
xchg
or
test
fs
or
sbb
and
mov
insb
outsb
jle
jo
adc
push
sub
mov
movsl
int
mov
jo
mov
ret
jne
jo
movsb
mov
xchg
leave
mov
mov
sbb
adcl
inc
dec
pop
clc
ss
and
divl
dec
sahf
pop
mov
inc
or
add
mov
jo
xor
cmp
jns
dec
adc
es
pop
or
fildll
jo
popa
fnstcw
ret
lret
jne
bound
mov
rcl
ja
push
xchg
js
dec
mov
push
cli
inc
push
out
je
int3
xlat
je
ret
fs
aam
aas
inc
jo
mov
rol
dec
push
xor
adc
pmulhuw
jo
mov
and
mov
icebp
jo
xchg
adc
shrb
cmpb
pop
xchg
sub
int3
push
push
sbb
and
mov
add
mov
and
les
aaa
jo
cmc
pop
mov
mov
loope
faddp
test
jg
cmp
or
arpl
or
and
xorl
sbb
sub
mov
xor
mov
nop
add
andb
rolb
pop
movsb
test
addb
xorl
repnz
mov
lds
ja
jns
pop
jp
add
fwait
add
shl
and
sub
ss
mov
jo
faddl
shrl
jno
and
dec
xchg
lahf
js
int
jo
stos
mov
ja
cmp
adc
test
mov
jp
sarl
inc
mov
xchg
in
ret
cmp
xchg
jo
fnstcw
dec
subl
mov
out
lretw
shlb
inc
lods
mov
adc
push
cmp
js
subb
test
jb
pop
pop
mov
push
adcb
jo
pop
ja
push
sbb
jns
verw
rolb
sub
sub
xor
push
outsl
and
push
jmp
les
scas
dec
lds
in
inc
or
cmp
inc
insl
dec
pushf
fsubl
pmaddwd
sahf
lds
loop
cmp
lock
adc
jnp
push
jmp
jae
jg
scas
pop
inc
rep
push
pop
and
lahf
xlat
icebp
testl
sti
push
test
jo
das
fiaddl
mov
bound
leave
add
jo
scas
iret
ret
jbe
adc
xchg
sub
dec
lock
mov
pop
mov
shlb
cltd
jo
leave
cmp
push
in
gs
jo
insl
mov
jns
adcb
mov
jge
repnz
jmp
xchg
cs
rcrl
jnp
mov
pop
or
jo
cld
push
and
leave
xor
jo
mov
aad
xor
jo
clc
sbb
in
jo
and
aad
inc
mov
jo
ret
mov
pop
mov
dec
push
mov
cwtl
inc
stc
inc
js
mov
out
out
insb
xor
jo
ret
add
jo
xor
pushf
lock
addb
out
int
push
addr16
cli
xor
sub
push
xchg
mov
hlt
jo
dec
jno
push
nop
mov
in
jne
pushf
cli
jo
xor
cmp
pop
lock
jo
push
aad
in
lds
sar
lret
outsl
xor
sbb
sbb
mov
inc
outsl
mov
jne
stos
dec
daa
ficoml
mul
pop
enter
mov
mov
mov
adc
hlt
mov
push
mov
mov
ret
dec
test
cmp
push
sbb
add
hlt
dec
pop
jo
pop
std
sbb
jo
xor
jl
je
or
enter
or
insb
pop
adc
in
push
mov
sub
cli
fwait
jo
bswap
sbb
daa
push
xor
xchg
ret
adc
jo
aas
lods
lds
add
fstpt
xor
mov
jge
add
mov
ljmp
jo
dec
movsb
dec
popf
push
push
jno
in
cmp
mov
push
scas
leave
pop
sub
fsubrs
jb
in
js
mov
adc
negb
fbstp
or
mov
jo
add
sub
mov
sub
jg
dec
popf
mov
ja
jo,pn
mov
mov
sbb
ja
pop
push
mov
pop
mov
ret
sub
shl
subl
or
jo
add
pop
sarl
jo
mov
out
iret
cmc
adc
leave
jb
dec
jo
fisttps
in
mov
jns
dec
xor
les
nop
or
mov
push
push
ja
call
mov
jo
ss
les
fnstenv
rclb
jle
mov
sub
outsb
ja
xchg
fs
fsubrl
ljmp
jns
or
insl
andb
imul
int3
mov
adc
int
mov
push
cmp
mov
lret
pop
ljmp
popa
xchg
sbb
stos
lock
sti
gs
rclb
shrl
js
pop
aad
jo
shll
nop
popl
test
aam
jo
lock
int
fwait
les
jo
jmp
add
push
rcrb
aaa
daa
mov
mul
xchg
outsb
xor
cltd
jo
shrl
outsl
inc
mov
js
xchg
mov
nop
lods
call
jg
or
inc
popf
xor
push
les
jle
popa
cmp
sub
test
add
js
jo
leave
cmc
sub
push
fwait
leave
or
cmpb
cltd
inc
pop
jno
jo
mov
jns
jo
push
cmp
xor
nop
paddw
pop
arpl
clc
vpshuflw
cmp
dec
aad
lret
jne
dec
mov
cld
jo
sub
xchg
in
sti
clc
popa
jo
pusha
js
mov
jo
insl
sub
in
xor
pop
jle
jo
push
dec
jecxz
pop
aad
mov
inc
pop
and
and
jo
cmp
arpl
jo
roll
inc
mov
adc
lahf
jo
popa
add
push
and
adc
jo
dec
fstpt
dec
jo
fadd
xchg
in
xchg
mov
dec
out
lods
jg
push
jmp
hlt
pop
mov
jo
mov
rorl
push
push
add
push
add
adc
or
lock
shl
inc
sub
test
int
cmp
mov
add
addr16
enter
imul
js
cmpsb
lgs
mov
jo
mov
and
ss
jmp
jno
jo
inc
jns
or
scas
cmp
sbb
jo
inc
mov
sbb
int3
push
mov
inc
push
jo
leave
mov
rorb
fisubrs
and
inc
jl
hlt
aad
js
lahf
je
nop
inc
subl
and
jp
pop
xchg
pop
or
shlb
jo
jns
jmp
push
mov
xchg
leave
jo
out
xor
xchg
inc
add
cltd
aaa
in
loope
pop
mov
lcall
leave
jo
or
shl
sahf
insb
pop
push
mov
push
mov
and
cmpsl
push
jge
add
and
xchg
je
pusha
sbb
rolb
or
pop
jo
sbb
mov
mov
adc
lods
sbb
xchg
push
andb
sbb
sub
or
imull
lahf
jmp
jo
push
fs
dec
jmp
jb
sub
std
dec
aad
leave
insl
cmp
inc
adc
shrl
xorl
fs
jecxz
sbb
xchg
dec
xor
lods
rcr
mov
hlt
and
jne
sbbb
push
push
jp
dec
insb
mov
lock
mov
movsb
jnp
push
cwtl
jg
jmp
dec
add
in
insl
leave
inc
mov
pop
jo
test
jb
incl
jne
dec
lock
jle
inc
jo
add
insb
pop
jg
pop
push
add
jo
fsts
sub
mov
jbe
nop
and
out
jmp
mov
jo
mull
rcrl
dec
ljmp
jns
aam
cmpsb
sarl
xchg
mov
cmp
sub
imul
mov
inc
cmpsl
rclb
bnd
and
jge
mov
push
jo
pop
dec
pusha
test
jmp
xchg
inc
ret
add
sub
subb
movntps
jbe
xlat
xor
or
lahf
fs
jge
inc
mov
ds
sub
inc
in
sub
cmp
bound
in
hlt
cmp
sbb
xchg
adc
xchg
nop
gs
sbb
and
ret
and
adc
dec
rcll
add
hlt
xor
popf
lahf
mov
mov
push
jo
in
clc
jno
ret
jo
jns
loopne
int
lods
jo
and
mov
push
aas
pop
dec
mov
push
push
gs
cmpsb
inc
pop
hlt
pop
outsb
jo
dec
mov
mov
push
out
out
or
jns
jo
inc
ljmp
loope
arpl
sti
jo
hlt
pop
shl
ja
jo
add
adc
sbb
imul
imul
insl
push
jo
inc
scas
lds
add
xorl
shl
fidivrs
jae
mov
xor
fs
push
scas
stc
mov
pop
adc
lock
cmc
jmp
mov
leave
inc
test
ljmp
mov
mov
sarl
imul
out
test
in
mov
push
push
jns
push
cltd
insb
inc
pop
dec
ss
or
pusha
clc
test
imul
push
and
jo
jp
mov
or
jb
fiaddl
pextrw
data16
pop
lret
cmpb
int
in
xchg
out
sarl
imul
jnp
pop
mov
mov
lcall
add
cmp
jmp
jo
mov
ret
rclb
push
popa
out
mov
inc
subl
cmc
stos
xchg
cltd
sub
add
js
mov
sbb
int
lcall
ret
hlt
sbb
imul
ja
dec
add
stc
cmp
push
pushf
test
jo
jle
rcrl
or
data16
xchg
jo
shll
nop
pop
enter
aad
jmp
cmp
mov
out
jo
pusha
mov
adc
rcll
rorb
ret
mov
sub
push
loope
jo
inc
cli
aam
dec
ror
push
xchg
pushl
inc
ja
xorb
lods
notb
inc
jo
pop
rcll
push
xorl
jl
faddl
jne
jle
rcrb
add
xorb
or
bnd
jbe
sbb
inc
out
insb
jo
shrb
pop
add
insl
data16
in
inc
cltd
push
fisttpl
jmp
jle
in
mov
imul
jo
aad
stos
jae
sarb
jo
repz
mov
fs
shl
mov
repnz
jge
data16
vpshufd
inc
popa
fld
call
add
inc
dec
rorb
les
inc
sub
cmpsl
sub
dec
test
sub
shr
dec
pop
sub
cli
mov
roll
pusha
sbb
jmp
fwait
test
mov
loope
mov
jo
sarb
arpl
adc
cmpb
daa
pshufw
fisubs
out
xchg
jo
loope
cmp
xor
sti
and
dec
xchg
scas
sub
jo
aas
out
ret
add
popf
jg
add
jl
or
dec
or
lds
jo
mov
iret
out
add
insb
filds
mov
push
mov
outsb
add
xchg
test
in
xchg
mov
nop
paddsw
sub
jp
or
jge
mov
in
sbb
jl
xchg
mov
adc
inc
push
jo
sbb
xchg
xor
cld
push
daa
and
push
cmp
gs
jo
push
jnp
jbe
shlb
sub
and
leave
loopne
push
out
daa
testb
pop
es
mov
cmpb
ret
dec
mov
popa
sbb
imul
jo
sub
ret
cli
add
stc
adc
test
inc
jo
lret
add
jo
and
mov
in
std
gs
jo
leave
push
push
stc
orb
into
inc
cmp
push
jo
popa
xchg
push
cwtl
loope
jle
pop
mov
and
push
pop
lds
adc
ret
cmp
fisubrl
sbb
jo
pop
sub
pop
cmp
and
mov
jo
jbe
pop
rorl
push
shll
push
mov
gs
lds
mov
pop
and
loope
out
lds
enter
ret
push
jae
jl
pop
mov
ljmp
lret
add
jbe
addr16
add
jle
cli
mov
sub
push
mov
push
sbb
push
inc
in
jo
setge
jo
push
and
mov
mov
sahf
lock
cwtl
xchg
js
mov
jo
fstpt
or
jp
shrl
pop
push
loop
je
popf
inc
or
add
js
out
fists
aad
aas
popa
add
repnz
cmpsb
lock
mov
insl
js
dec
xchg
std
bound
sub
out
sbb
je
cmp
repnz
jo
test
gs
mov
ret
sub
in
rorl
xor
jns
xor
jo
out
in
ret
push
push
sub
jo
aas
leave
mov
jge
rorl
mov
js
enter
cli
vpaddusw
jo
cmpsl
and
jmp
mov
popa
ljmp
mov
jg
pop
mov
flds
mov
inc
xlat
leave
dec
ret
andb
pop
movsb
jo
out
and
outsb
xlat
in
add
ret
les
mov
adc
xchg
jmp
xchg
xorb
push
xor
pushf
jns
mov
adc
dec
in
ret
orb
push
jo
rcll
in
xor
clc
adcb
nop
in
jmp
or
jns
adcl
pop
mov
rorl
js
stos
loope
andb
mov
loope
mov
insl
pop
popf
mov
fwait
push
outsl
mov
sbb
jo
jbe
pop
xchg
out
sub
xor
roll
xor
popf
scas
lds
push
js
out
jb
fcoml
shlb
sub
in
push
pop
mov
outsl
pop
sub
fidivs
xor
bound
jo
sbbl
jo
jp
and
push
leave
xchg
cmp
inc
hlt
inc
ret
loope
adc
xor
sbb
mov
shl
jo
mov
inc
xchg
std
in
testl
mov
mov
js
mov
sub
ja
js
fistpll
rol
imul
xor
xor
add
sub
icebp
jo
mov
jno
popa
mov
xchg
inc
and
mov
cli
sahf
cmp
jo
inc
cmp
mov
jo
mov
lea
divb
pop
into
addr16
dec
xor
add
mov
pop
hlt
test
pop
add
inc
jne
rorl
outsb
test
xchg
nop
sub
jo
push
cmpsl
pop
jo
shll
and
inc
ret
data16
into
ss
push
push
sub
repnz
les
adc
push
sbb
sub
pop
test
sub
repz
sti
push
sub
sbb
js
in
sbb
orb
sub
cwtl
mov
jl
js
les
jo
adc
push
icebp
enter
mov
cmpsb
daa
pop
mov
js
adc
vpunpcklwd
jo
leave
or
or
add
jbe,pt
arpl
clc
lds
lea
push
cmpb
push
mov
jp
and
jo
call
fistpll
jo
enter
pusha
fnstenv
jns
push
fsubs
or
outsl
cld
push
sub
imul
imul
push
lea
outsl
jp
bound
ja
cmpb
andw
jo
and
pusha
int
rclb
add
inc
sub
xor
xchg
jmp
mov
shl
push
js
outsl
fldt
pop
inc
call
sbb
imul
xor
add
mov
jae
pop
jo
cmp
jo
push
gs
lds
int
mov
cmpb
cs
lods
xchg
cmpsw
inc
mov
jb
push
arpl
and
jo
mov
mov
dec
lds
mov
jo
mov
mov
jo
jae
out
adc
mov
jo
call
out
push
jo
jge
adc
hlt
ja
jo
rcl
sbbb
jne
jo
fwait
push
in
or
xor
cmc
jo
and
adcb
daa
ret
or
pop
jo
shlb
in
mov
movb
movsb
jg
cmpsl
icebp
jo
adc
aas
ret
sub
mov
in
or
xchg
pop
jmp
ret
fildll
sti
dec
dec
push
mov
mov
ds
jo
mov
jo
mov
and
in
pop
push
xchg
pop
push
sbb
push
push
int
shll
mov
hlt
sub
jo
insl
aad
sbb
movsl
dec
test
fucom
jo
or
iret
push
jo
stos
jnp
jo
mov
xor
ret
and
sti
sbb
or
pop
jo
jle
mov
cmp
clc
sbb
pop
ficoms
add
mov
xchg
or
jo
mov
pop
clc
sub
jo
cmp
ss
mov
mov
in
loop
jb
aad
jo
leave
sahf
push
fsubl
cmp
iret
lret
rcl
notb
div
je
out
sbb
shl
add
jo
vscalefps
push
push
mov
jo
rcrl
mov
bound
push
and
jo
cmp
icebp
and
xchg
inc
jns
test
mov
pop
jo
sarl
xor
or
xchg
data16
mov
mov
jbe
mov
fs
nop
xor
sub
aam
jo
xchg
fistps
fsts
xchg
loope
hlt
shrl
cmp
sahf
jo
or
xor
shl
in
fdivr
mov
andl
mov
xor
pop
xor
sbb
mov
loop
jo
imul
push
out
add
adc
rorb
int
js
xorb
mov
mov
rolb
out
and
rorb
jo
sub
cmp
inc
xor
jo
and
add
nop
lds
mov
in
and
pusha
repnz
pop
xor
je
rcrl
jmp
pop
mov
jb
ret
jo
and
rcll
in
sbbl
loopne
pop
xchg
js
lods
inc
or
lret
scas
ljmp
cld
popf
inc
fwait
clc
push
insl
subb
roll
xchg
jo
jmp
mov
cld
and
mov
gs
xor
jo
xchg
loop
cmp
dec
fwait
mov
push
jmp
jo
addr16
xchg
mov
fistpll
movsl
mov
inc
flds
adc
lcall
loopne
jnp
testl
jno
cld
les
and
mov
jo
ret
repz
adc
jo
loope
mov
addr16
out
pop
mov
shrb
jns
jo
fbstp
scas
lods
pop
jo
add
loop
jno,pn
jo
pop
aam
iret
mov
mov
inc
jo
xchg
repnz
out
je
leave
shlb
icebp
inc
xor
mov
jecxz
daa
mov
push
mov
cmp
stos
js
outsb
sti
scas
xchg
cld
add
jmp
inc
jo
mov
mov
nop
push
add
or
fidivs
test
xor
pop
push
xchg
lods
stc
jns
jo
std
dec
cmp
jb
jo
aad
mov
jo
ret
fidivrs
fisubs
jo
pop
call
push
jb
jo
cmp
add
sahf
xchg
mov
mov
fs
aaa
push
and
adc
jg
insb
les
mov
insb
std
popa
stos
shlb
lds
and
jnp
aad
sti
adc
and
mov
or
jecxz
mov
les
inc
mov
jns
push
pop
aaa
lods
jnp
out
fcomi
ljmp
cs
sub
ja
out
mov
rclb
bound
call
lock
add
pop
jbe
adc
js
decb
outsl
pop
test
cmp
mov
adc
subb
and
xor
mov
jo
jle
xchg
add
mov
cmp
push
nop
js
or
nop
daa
out
aad
jmp
add
scas
dec
pusha
mov
xor
nop
or
cmpsl
sarb
ja
mov
jo
xlat
movsb
cmp
popf
enter
nop
mov
sahf
jns
xor
and
push
cwtl
pop
aas
jo
pop
je
addr16
cmc
aam
jg
stc
xchg
rorl
jo
xor
sbb
lret
je
jo
inc
cs
mov
add
xor
jo
jb
roll
sub
jge
jo
lds
std
out
push
cmp
cs
aam
jo
inc
inc
cwtl
lcall
test
xchg
in
aad
jo
pop
xor
pop
inc
mov
ret
adc
js,pn
adc
adc
jo
aas
adc
mov
loope
add
fcoml
in
push
or
outsl
sar
lods
or
sub
lock
dec
xor
jns
bswap
adc
and
lea
psllq
xlat
add
xchg
jo
jne
iret
fnstcw
call
inc
sub
push
das
nop
repz
ja
jmp
movq
or
vmovq
pusha
fbstp
jae
pop
jno
mov
jo
push
iret
bound
push
lea
cmp
jecxz
enter
jo
sub
jnp
bound
push
lds
fwait
dec
fbstp
push
jbe
or
les
pop
insb
mov
add
mov
lods
lds
or
inc
ds
mov
mov
and
mov
fbld
push
rcrb
add
jae
adc
mov
scas
in
xchg
test
dec
lds
rol
mov
add
insl
add
movd
jo
movsb
aad
cld
lods
jp
jo
scas
test
les
xor
daa
jo
ret
pushf
mov
jo
dec
out
jg
or
adc
mov
xchg
ret
cwtl
out
lret
pop
outsb
jns
call
pop
jle
jo
idivl
shrl
mov
call
test
push
lock
jo
dec
xor
push
mov
inc
mov
jo
bound
lahf
add
jecxz
in
cvtpi2ps
loop
push
and
jge
test
popa
jo
cmp
xchg
dec
jo
test
es
imul
push
mov
jo
dec
push
sbb
imul
mov
adc
fs
pushf
push
cmp
pop
mov
in
or
mov
es
jle
xor
imul
jo
ss
movsb
fnstsw
jo
mov
dec
sub
add
jo
push
stos
lret
jno
sar
inc
aad
lods
adc
push
test
or
push
negl
hlt
or
jo
insb
mov
cli
sbb
adc
add
in
sub
push
clc
xor
shlb
out
push
inc
jp
popa
cwtl
dec
sbb
faddp
jo
pop
cmp
xlat
mov
sub
loopne
pop
cmc
or
mov
fcompl
gs
pop
mov
add
in
or
xor
fwait
cmc
imul
or
jle
pop
mov
mov
ret
xchg
imul
dec
lds
data16
pop
test
inc
mov
sub
pop
lds
push
xor
mov
xchg
lods
jo
scas
jns
inc
or
xchg
jne
mov
cwtl
dec
cld
stos
jo
popa
dec
push
add
and
mov
jo
rcll
fs
or
jl
xchg
outsb
mov
mov
insb
add
aad
ficompl
sub
pop
fsts
shll
mov
sbb
jo
js
shrb
adc
iret
adc
or
push
rcrb
push
pop
xchg
jp
inc
and
int
pop
pop
out
cwtl
movsl
lea
fdivs
xor
inc
mov
popa
xchg
inc
test
jo
int
pop
pushf
jle
outsl
jo
lret
cmc
fucom
ja
shrb
dec
lds
ficoms
fildll
jo
les
dec
jp
leave
jo
in
mov
jmp
mov
js
loope
pop
sub
fsts
mov
dec
std
mov
clc
shr
mov
arpl
out
pop
jo
lahf
data16
mov
push
repz
and
shrb
leave
movsl
xchg
dec
jge
sub
push
jne
xlat
push
iret
scas
popa
je
jo
sbb
test
fidivl
xor
shll
push
push
insb
movsl
fs
ret
out
cli
jo
xchg
int3
dec
outsb
leave
call
push
pusha
jmp
imul
adc
adc
pavgw
mov
push
ficoms
pop
lret
out
jo
xor
or
adc
pop
das
xchg
fildl
bnd
daa
lcall
testb
xor
jl
cmp
andb
movsl
sti
mov
outsl
hlt
sub
daa
cmp
cmpsl
cmp
andb
lcall
sbb
mov
mov
loopne
ja
pop
sub
test
push
les
pusha
lahf
xchg
mov
fs
adc
inc
jo
fnstcw
scas
aaa
adc
jo
mov
lock
xchg
mov
sub
jge
psubsb
jo
leave
cld
sub
add
adc
jo
add
lret
loopne
stos
jmp
in
out
dec
lea
add
clc
hlt
addr16
adc
dec
icebp
push
and
int3
rcrl
jl
and
jo
rcll
inc
mov
xor
je
shrb
cs
rol
mov
sub
pop
setge
test
mov
cmp
add
shr
and
nop
int
pop
or
pop
aad
inc
bound
lds
repz
mov
mov
ss
add
adc
cmc
sub
xchg
pop
push
test
push
test
lcall
pushf
jp
jmp
push
repz
or
mov
shrl
and
scas
inc
jo
jb
cmc
xchg
and
jo
aad
push
cs
into
sbb
loop
and
jb
pop
jo
pop
mov
lds
andb
in
lret
jo
and
sbb
out
aam
outsl
leave
push
inc
sub
insb
sahf
insb
popf
test
adc
jne
adc
pop
add
out
and
inc
dec
cli
insb
clc
mov
fdivs
dec
mov
es
fidivs
roll
sub
mov
sahf
ret
sbb
lcall
mov
cmp
leave
and
jno
outsl
ret
fldl
popa
pop
int
pop
addw
xor
push
jno
test
lahf
pop
inc
insb
adc
lock
adcl
fwait
orb
add
das
jo
and
in
stos
shll
ret
mov
into
andb
sahf
jge
cs
aad
jo
cmpsb
ret
pop
popa
mov
mov
adc
dec
leave
loope
mov
jle
ret
cmpsl
mov
movsb
jo
cld
lea
jo
pop
cmp
jno
adc
mov
sub
iret
xchg
jmp
sub
in
fwait
push
pop
lret
and
jo
jp
ja
daa
push
xor
add
jmp
fildl
movsl
cmp
or
cmp
repz
cmpb
mov
jg
sub
mov
add
mov
push
push
mov
jmp
iret
aam
ret
rolb
fs
mov
shlb
lods
loop
push
outsb
ret
push
jo
cmpsl
scas
fsts
cli
leave
and
outsl
lea
sahf
or
push
loopne
pop
mov
adc
fisttps
rol
jo
rcll
roll
jb
push
and
jmp
cltd
mov
jns
jo
call
pop
jnp
mov
inc
mov
lods
inc
xchg
sub
push
push
sahf
push
loope
rcr
divl
xchg
jo
hlt
sbb
sub
stos
add
gs
mov
mov
xor
xchg
test
mov
jbe
jns
push
js
lds
jo
pop
pop
scas
pop
cmp
int
mov
shlb
xchg
or
ret
sarb
mov
test
pop
cs
jb
leave
cmp
in
mov
adcb
movsb
jo
les
fstpt
ret
xor
push
mov
jo
dec
shll
jno
mov
push
jo
adc
addr16
sti
dec
les
pop
xchg
vcvttps2dq
adc
int
jo
outsl
rolb
inc
or
jo
fucomip
sbb
mov
adcb
pushf
aaa
lock
mov
mov
ss
lds
mov
jb
pop
sub
jg
repz
dec
adcl
ds
push
mov
pop
or
daa
xor
mov
enter
jo
movsb
pop
sub
xor
or
ljmp
jne
push
jbe
adc
pop
dec
jo
pop
lret
mov
in
or
or
mov
bound
je
jo
cmpsb
sub
rcll
test
insl
jo
loope
jno
cmp
call
out
jo
mov
mov
cld
add
bound
repz
jo
adc
mov
mov
int
cmpsl
jo
addr16
pushl
jnp
cmp
mov
jo
xor
xchg
jo
inc
adc
leave
not
jo
sbb
int
lahf
sub
leave
jo
push
lret
and
sbb
cld
insl
adc
xor
jo
pop
xor
push
or
pop
pop
and
notl
sub
stos
jge
push
jno
pop
mov
jo
xchg
push
imul
shr
and
mov
mov
push
jo
cmpb
push
outsl
jo
in
out
arpl
mov
scas
inc
push
les
jo
pop
xor
add
orb
in
and
fsincos
add
test
push
jmp
push
insl
jo
incl
xchg
shll
and
sbb
sub
jo
push
test
lds
xchg
or
ds
ja
jl
inc
repnz
xchg
jb
lds
mov
addl
mov
fnstenv
mov
insb
les
sbb
sarl
sub
lret
fstpt
rcrb
popa
mov
push
repnz
mov
scas
cmpl
mov
cmp
and
add
jo
push
out
daa
jge
cmp
rcrb
xorb
int
jo
lcall
jo
pop
inc
mov
jo
scas
jbe
pop
and
mov
inc
into
cmc
incl
jne
mov
xchg
scas
jns
jg
pop
leave
enter
dec
jecxz
mov
sub
lds
push
scas
xlat
mov
lcall
hlt
cmp
inc
mov
inc
jo
xchg
mov
cmp
psubusb
test
mov
mov
call
jp
insb
pop
arpl
sub
jp
push
je
fs
mov
je
bound
cli
pushf
mov
daa
lds
hlt
fwait
pop
jo
push
aaa
les
mov
jo
sbb
cmc
sbb
repnz
and
insb
sbb
fstl
jo
insl
mov
jmp
ss
jo
cli
or
adc
jo
leave
adc
jo
mov
je
mov
pshufw
pushf
inc
popa
jbe
sarb
adcb
or
ret
js
push
or
movsl
jno
mov
sbb
fwait
xchg
adc
call
sub
loope
lret
ret
pop
jo
mov
inc
inc
addr16
aam
int
adc
popf
call
push
jo
sbb
fisubl
push
push
outsb
das
xor
jnp
aam
push
movsb
fdivrs
push
adc
mov
loopne
jb
fildl
shll
and
and
xchg
int
mov
push
stc
jae
push
cs
or
icebp
int3
jo
ja
ret
inc
mov
mov
test
dec
mov
mov
ficomps
shll
mov
insl
jno
data16
pop
adc
aaa
push
sub
push
sbb
clc
leave
sbb
fwait
push
dec
inc
and
data16
xchg
xor
xchg
push
lods
je
sub
fdivl
stos
jne
push
call
mov
lahf
xor
out
ret
fisttpll
decl
daa
iret
and
sti
pop
jo
mov
shlb
pop
les
jo
sbb
mov
ds
sbb
data16
cmp
mov
cwtl
test
fdivs
sub
sbb
into
adc
das
jo
pop
dec
fsubl
mov
sub
mov
xchg
inc
enter
inc
jo
xorb
sbb
shrb
daa
xlat
mov
xchg
inc
inc
pop
ret
outsb
dec
mov
lcall
mov
push
lds
mov
jae
dec
jo
sub
sub
lret
out
mov
leave
mov
xchg
cs
jo
daa
mov
dec
jo
decb
mov
and
out
cmp
jae
inc
jo
int3
je
sub
sarb
rorl
aaa
popa
jo
rcll
hlt
mov
mov
lds
je
sub
stos
xor
cmpb
sbb
jo
push
out
inc
test
inc
mov
dec
mov
cli
push
push
fistpll
push
ljmp
pavgb
xor
jne
sbb
xchg
jmp
mov
push
push
jg
inc
mov
push
add
es
dec
pop
js
push
stc
fucompp
jnp
andb
sbb
push
jo
and
jo
mov
sbb
mov
pop
jmp
cltd
mov
scas
std
xchg
push
jo
pop
movsl
jle
sbb
xlat
repz
or
mov
ljmp
lahf
cwtl
and
fwait
bound
lds
sti
out
push
addr16
in
lds
pop
push
xor
jns
lret
in
sub
xchg
jo
aaa
pop
cmp
push
testl
mov
xor
icebp
push
dec
cmp
push
fdivl
push
mov
lret
mov
jo
mov
mov
loope
push
popf
xchg
les
cwtl
aam
js
jne
push
mov
mov
insl
inc
int
ficoml
nop
push
imul
leave
sbb
ljmp
movsl
mov
sub
adc
ret
testl
xor
pop
cld
push
sbb
adc
pushf
push
xor
movsb
test
in
sub
sbb
xor
fistpl
jbe
lds
mov
jnp
fisttpl
nop
push
inc
mov
lahf
inc
jo
mov
inc
push
dec
jp
ret
push
hlt
or
jp
cmp
cmp
xor
jns
out
or
mov
dec
mov
jb
aad
push
dec
xor
jne
sub
idivl
xorb
std
sub
xor
test
jo
sbb
roll
push
mov
add
clc
daa
int
jo
ret
xchg
jp
sub
push
jge
jo
lret
es
cwtl
mov
sub
mov
js
lea
pop
push
addb
xor
jbe
iret
jne
pushf
data16
cmc
lea
cmp
cld
loopne
into
lods
test
jo
cmc
js
cmp
jns
sub
cmpsb
pushf
nop
bound
test
lock
jecxz
jne
addb
pop
mov
insb
xchg
ret
aas
lds
bound
mov
gs
mov
jp
xchg
das
mov
push
mov
sub
mov
ret
stos
ret
mov
jo
ljmp
in
jp
sub
lds
sahf
inc
in
jo
inc
or
scas
mov
dec
jo
je
add
push
pushf
nop
mov
ja
inc
scas
mov
jo
pop
lds
jmp
clc
psllq
mov
shr
inc
sbb
call
sarl
add
rclb
inc
inc
sub
cld
jmp
push
cmpsl
pushf
negl
bnd
rorb
or
and
js
inc
push
pusha
mov
jo
fnstcw
inc
push
mov
inc
push
jo
cmpsl
xor
jo
xlat
out
and
inc
sahf
es
jmp
jo
lods
por
or
sub
data16
fmull
add
mov
stc
sahf
dec
leave
movsl
in
mov
das
lock
out
add
stc
xchg
cs
movsb
in
push
or
xor
pushf
ret
loope
xchg
das
jo
xchg
rcl
shll
in
jo
cld
add
jo
les
pop
jo
fstpl
and
mov
pop
jo
fdivrl
sbb
jg
pusha
or
add
pop
flds
shlb
jl
leave
jo
pop
lret
xor
jno
xchg
jo
pop
lds
test
and
jo
lea
cli
xor
int3
adc
sbb
jae
inc
nop
xor
aam
jbe
jno
inc
lea
dec
push
fists
arpl
xchg
sbb
stc
inc
jo
cmp
ret
jo
pop
fs
xchg
inc
adc
mov
mov
push
sub
repnz
stc
sub
test
outsl
sahf
jo
and
jo,pt
paddsw
push
jae
jo
pusha
adc
jo
bound
repnz
or
adc
sbb
mov
pop
jo
push
push
movsb
and
xor
stos
mov
or
mov
popa
dec
fwait
xlat
scas
sbb
sti
push
mov
divb
mov
les
scas
lds
mov
mov
jo
and
pop
push
dec
sub
jo
adc
sub
jne
call
test
aas
pop
cmp
adc
jo
cmpsb
leave
or
scas
jo
add
adc
data16
adc
and
call
cld
push
fmuls
aaa
fnstcw
lds
in
loop
sub
push
scas
mov
jo
xchg
pusha
inc
lret
sbb
cmp
lds
sbb
nop
rcrl
clc
xlat
pop
js
or
std
lock
push
sub
scas
add
xchg
int
aaa
xchg
inc
sub
aam
jo
mov
jns
in
test
cli
in
sub
jo
mov
movq
cmpb
inc
and
adc
push
in
pop
xor
mov
sub
inc
mov
mov
loope
xor
mov
rcrb
aad
fiadds
adc
clc
test
or
movsl
xchg
and
lds
dec
and
shll
ds
mov
push
jno,pn
push
scas
mov
dec
jb
push
jo
fisttpl
roll
icebp
xchg
addr16
and
leave
ds
mov
mov
imul
data16
je
jo
xchg
xor
inc
aam
in
int3
xor
jo
push
cwtl
push
out
icebp
jo
lahf
and
sbb
outsb
jmp
jns
roll
int
sub
sub
out
lock
lock
pop
ret
and
nop
shll
push
std
div
data16
sub
xor
xchg
xchg
push
mov
shl
cmp
insl
leave
daa
xorb
sbb
fbld
jo
addr16
mov
and
insb
sub
dec
mov
out
les
add
ficompl
fs
jge
divl
adc
pop
fnstenv
std
jo
icebp
inc
fs
fisttpl
stos
jo
lods
rcrl
jb
or
jo
in
push
clc
cltd
push
jmp
xchg
and
push
scas
ret
inc
lcall
jns
add
rolb
jo
and
in
out
cmp
jo
xor
ds
movsb
ja
fsubs
inc
push
jo
mov
in
dec
sub
shll
adcl
jo
push
clc
and
jmp
adc
in
adc
mov
jo
imul
xor
cmp
ja
imul
ret
shr
inc
scas
jns
je
sbb
cli
mov
ret
shll
push
mov
je
loop
cltd
stos
jl
jmp
cmpsb
iret
and
sub
sub
mov
lea
add
add
std
or
ret
pop
je
in
lock
jo
inc
jp
and
aas
push
jo
sbb
and
mov
out
push
push
dec
or
mov
add
in
js
or
addr16
sbb
or
and
int
test
ss
shl
xchg
xorb
jmp
subl
je
xor
sbb
cmpsb
loopne
rol
pop
inc
jne
cli
scas
jb
sbb
push
push
xchg
popl
sub
push
sub
test
mov
mov
dec
jecxz
fs
iret
xor
inc
and
mov
orb
test
data16
clc
into
lods
xor
ja
hlt
xor
pop
jbe
imulb
push
xchg
js
insl
mov
push
mov
les
add
loope
jge
jo
inc
rcrb
add
mov
aaa
push
mov
popf
cmp
push
hlt
or
je
push
sbb
push
jge
inc
and
mov
or
jo
cmpsl
bound
push
xor
rol
push
mov
dec
or
test
aad
jno
ret
jo
outsb
lds
cmp
test
leave
sub
mov
jo
lret
cmp
push
xchg
lods
cmp
leave
loop
cmp
push
shlb
xor
or
ja
jne
jo
and
mov
xor
adc
inc
aam
xchg
sbb
sub
mov
cli
pop
or
fucom
mov
or
mov
dec
fs
adc
lea
roll
pop
ds
pop
stc
mov
lret
dec
les
or
xchg
rol
lahf
jo
pop
shll
jo
pop
loope
pop
cmc
std
sub
imul
je
pop
ret
sbbb
insb
sbb
pop
lods
repz
jl
jo
or
mov
sbb
jo
push
test
data16
pop
outsl
sarb
sub
in
xchg
ss
xchg
test
sub
jo
adc
push
cld
jo
arpl
gs
loope
jo
mov
outsl
inc
jle
imul
and
cmp
pop
shrb
pop
clc
dec
mov
xorb
jae
jecxz
push
xor
lret
cli
loope
push
int
lea
or
std
push
adc
punpckhdq
leave
xchg
fs
stc
sti
push
and
and
mov
sbb
cs
push
out
js
ret
divb
sti
push
push
inc
mov
xlat
popf
movsb
add
jle
jo
icebp
sub
leave
jo
ja
out
cmp
push
jo
enter
hlt
xorl
iret
xchg
sub
pop
lret
dec
jo
mov
cmp
xor
jo
add
repz
std
test
or
pop
je
mov
push
test
jl
xor
jge
popa
inc
pop
jo
pop
iret
cmc
pop
mov
push
dec
loopne
sarb
mov
jo
lret
aas
pop
sti
ret
pop
cltd
jo
add
jmp
adc
pusha
dec
mov
scas
jo
jmp
inc
lods
dec
xor
mov
mull
int
call
lds
cmpsl
add
or
leave
enter
fwait
je
cmc
dec
dec
lds
and
cmp
fs
sbb
roll
adc
lds
arpl
xor
pop
mov
jo
pop
lahf
loope
cmp
sbbb
movsb
xchg
push
aam
jo
push
scas
rcrl
sbb
out
in
fnstenv
xchg
or
add
jo
nop
dec
push
js
mov
int
fs
or
clc
sbb
stc
std
cli
xchg
add
xchg
xchg
cmp
xlat
adc
pop
movsw
lock
fs
dec
push
mov
jl
mov
test
xor
pushf
rorb
adc
bound
xor
leave
mov
pop
jo
add
inc
bnd
adc
cmpsl
xchg
int
fisubl
inc
jo
jbe
jo
shrb
jo
lock
fwait
add
jle
sub
rolb
lods
jo
sub
push
sbb
inc
popf
dec
insl
jb
lds
mov
lcall
mov
dec
outsb
xchg
int
lds
pop
pop
insl
jl
inc
or
jo
add
movsl
push
or
jo
xlat
adc
gs
aad
add
ret
push
jno
pop
mov
jns
stc
ss
outsb
lret
mov
insl
hlt
insb
or
pop
outsl
jp
ret
test
jae
xchg
pop
enter
jo
xlat
pop
or
sub
loop
and
add
push
adc
sbb
sti
shlb
jp
xorb
test
leave
scas
push
cmp
push
in
jb
sbb
pop
jmp
and
dec
and
movsb
jo
pop
mov
inc
out
xorl
in
insl
js
mov
jo
mov
lods
imul
movsl
add
iret
cmp
pop
xchg
jae
test
mov
sbb
fwait
pusha
in
mov
push
mov
pop
cmp
dec
hlt
cmc
test
data16
xor
xchg
jg
sti
in
lock
xor
xchg
ret
js
push
push
mov
imul
mov
and
mov
popl
es
rorl
jo
cld
xchg
inc
pop
daa
sub
mov
mov
push
repnz
nop
rcrb
addr16
ja
inc
jmp
aaa
mov
sub
jo
stos
and
in
dec
push
cmpsl
sub
dec
mov
and
pop
jnp
jmp
ja
xchg
sub
push
pusha
adc
jo
dec
leave
and
insl
inc
cmp
or
aam
bnd
ret
mov
ret
repz
movsb
push
pushf
andl
ret
inc
sbb
add
imul
lahf
ret
or
add
loope
sub
sbb
cli
jo
outsl
adc
nop
clc
repnz
push
icebp
js
xor
btr
pop
mov
pop
xor
jo
ds
andb
shlw
cmp
addl
sub
in
jo
add
adc
jo
mov
insl
add
jne
mov
push
and
sarl
sub
pop
sbb
jo
cmpsb
pop
push
ret
jo
xor
lret
jge
mov
jo
add
fldenv
push
mov
jno,pn
sbb
in
jge
imul
xchg
push
in
bound
jo
aad
pop
ret
mov
enter
dec
neg
xchg
and
das
xchg
bound
or
and
cwtl
shrl
fistpl
call
ret
insl
test
or
std
jbe,pt
sub
jo
iret
in
stc
daa
add
orl
add
vpaddd
mov
js
mov
std
aaa
jmp
mov
rcrl
lret
mov
inc
mov
iret
sub
clc
sub
rorl
cmp
pop
int
int3
add
into
jo
jecxz
push
mov
sahf
jo
ret
push
sti
insl
adc
int
jo
aaa
lds
iret
ljmp
and
fucomp
gs
mov
jecxz
cmp
cmpl
shrl
sbb
jo
inc
cmp
rcr
xorb
xchg
jo
mov
popa
ret
jo
scas
outsb
mov
pop
cmp
mov
int
ljmp
inc
negb
pop
dec
mov
imul
add
jno
and
rcr
lret
insb
dec
and
fwait
push
lds
jp
xchg
and
mov
jmp
mov
insl
push
dec
scas
jo
cmp
mov
jp
jo
in
js
xor
shll
and
daa
sti
pop
add
jo
pusha
insb
xchg
out
sub
mov
xlat
push
xorb
fs
xor
mov
movsb
mov
push
inc
cmp
pop
mov
push
insb
xchg
cmp
add
lds
test
and
sub
jmp
sbb
in
aas
shrb
mov
out
jo
dec
mov
fidivl
inc
mov
push
sbb
and
loopne
mov
addb
jge
xchg
push
add
ja
mov
lock
xlat
cmp
jle
jbe
xor
je
sub
rclb
js
data16
xchg
pop
jge,pt
xchg
movl
sbbl
xchg
xchg
cmp
lret
lds
inc
jmp
call
or
rorb
jo
inc
leave
je
jmp
push
addr16
pop
daa
aas
jo
cwtl
xor
pop
push
in
sub
jge
mov
jo
pop
lds
jmp
sbb
xchg
pop
js
jo
loope
jg
scas
rorl
test
inc
arpl
in
aas
cltd
mov
push
scas
adc
dec
push
xor
movsl
fs
jno
jo
shll
aad
orl
out
pop
stos
jo
gs
leave
xchg
dec
sub
fnsave
sub
rcll
sbb
and
lds
mov
repnz
unpcklps
lcall
adc
test
jl
or
lsl
inc
and
insb
push
psrad
sbb
int3
repz
mov
in
jo
sbb
nop
jns
jge
in
jle
push
loop
add
and
jo
inc
inc
adcb
leave
pop
addb
stc
jp,pn
jo
mov
lods
adc
les
jl
cmpsl
mov
mov
js
call
xchg
movsl
jae
fs
loope
jo
testb
sbb
rol
sti
pop
lahf
notb
es
das
adc
shrb
aas
adc
push
dec
pushf
bound
push
out
fldenv
mov
dec
sub
into
hlt
out
mov
xchg
xchg
xsavec
jg
push
xchg
leave
jo
cwtl
daa
js
add
out
inc
sbb
in
xor
jo,pn
fdivrp
adc
sub
pop
mov
cmp
mov
jo
sbb
mov
jo
hlt
out
inc
lds
dec
mov
push
scas
mov
repz
stos
mov
clc
push
pop
push
inc
arpl
addr16
ljmp
jl
xchg
in
adcb
cmp
adc
mov
xorb
inc
add
stos
jns
test
mov
je
dec
mov
int
aaa
leave
jno
jle
mov
jo
sbb
sub
popf
jo
mov
sub
mov
in
add
xlat
sub
jo
pop
imul
enter
cwtl
inc
adc
sub
xchg
pushf
push
test
dec
lret
push
imul
popf
sbb
movsl
push
lock
jmp
jle
pop
mov
mov
enter
ljmp
xchg
push
push
fwait
jo
out
bound
jecxz
jo
adc
jb
inc
loope
sub
subl
pop
jo
add
bound
aad
push
jmp
ja
xchg
pop
mov
xor
lret
jo
cmp
pop
jo
cmpb
jo
xor
ret
enter
xchg
cli
sub
loopne
rcll
sub
movsb
push
jmp
mov
jb
jp
add
addr16
arpl
inc
mov
leave
lea
out
or
mov
push
jo
lds
pushf
cltd
stc
inc
int3
jo
sub
loope
cmp
sub
push
popf
xor
inc
jo
xor
sub
ss
push
xorb
imul
cmp
mov
cmpb
jl
js
xlat
push
nop
scas
negb
push
jno
dec
jg
adc
and
jl
dec
es
jmp
push
push
sbb
cli
cs
repz
lock
sbb
lds
bound
cli
jo
pop
and
xchg
jo
and
add
cld
lds
adc
cltd
call
lods
leave
sbb
mov
xchg
arpl
icebp
xchg
cs
adc
adc
outsb
out
adc
mov
lahf
ret
jns
push
sub
cmp
das
fadds
call
nop
out
pop
xchg
fwait
nop
inc
subl
jno
push
lret
xlat
insb
into
mov
daa
xchg
push
xor
jo
sbb
mov
jo
ljmp
nop
xchg
mov
jne
lds
in
jbe
out
cmp
jp
aaa
lods
popa
int
sub
and
ret
jb
fiaddl
fld
mov
dec
out
int3
hlt
clc
sbb
aas
xchg
not
lods
inc
or
jo
push
scas
std
out
lcall
rolb
sbb
jo
cmp
pop
or
clc
jo
add
jle
imul
pop
mov
jne
push
test
and
out
jl
sbb
movsb
test
ret
adcb
jne
pop
mov
xchg
pop
inc
mov
sbb
out
push
jo
jno
inc
aad
inc
xchg
jo
push
sub
jo
daa
or
or
loopne
jbe
mov
inc
push
cmpb
jecxz
bound
push
jl
outsb
dec
insb
mov
jo
lret
das
stc
testl
add
mov
jo
inc
cltd
or
aad
mov
ret
aaa
xchg
loop
cmp
xor
int
cmp
and
sbb
and
mov
scas
jo
jmp
jo
cmpsb
in
les
lds
sbb
jo
scas
nop
push
and
mov
lock
fldenv
test
push
decb
test
rorl
mov
rolb
push
lcall
xchg
test
push
bound
inc
add
push
sti
test
add
icebp
inc
bound
cmp
mov
cwtl
mov
aad
bound
jo
insb
mov
orb
jo
pop
ljmp
scas
xchg
dec
adc
cmc
and
loope
in
and
cmp
das
js
aam
jo
mov
lret
xchg
cmp
sbb
ret
add
and
lds
cmc
jo
mov
jns
xor
outsl
js
jg
idivb
xor
cmp
outsb
stos
sbb
inc
lahf
push
xchg
xchg
addr16
jo
mov
jae
call
xor
lods
in
xor
push
pop
std
or
popf
jo
xor
jb
cmp
inc
pushf
es
and
and
and
je
stos
sarl
mov
push
je
test
jo
sub
mov
cmp
out
push
fsubr
adc
xchg
jp
ret
pop
nop
shr
repnz
sbb
ret
mov
mov
fwait
addr16
js
push
push
vpmullw
out
andl
xchg
fldenv
ret
jmp
loop
xchg
sbb
jle
jo
mov
jmp
stos
arpl
push
jb
sub
test
js
adc
xor
jo
cmp
and
cs
pop
xchg
jo
lods
adc
out
or
dec
aad
mov
popf
xor
js
lods
js
sarl
add
fldenv
jo
sub
dec
mov
inc
js
jae
xorb
mov
jo
lds
nop
inc
scas
jnp
sub
cltd
xlat
jo
cmp
add
jo
rcll
bound
dec
xor
pop
pushf
xchg
xchg
and
jo
fcmovu
inc
mov
mov
jo
shll
ja
daa
adc
cmpl
mov
and
jge
fdivs
and
inc
test
rcrb
sub
jo
pushf
call
loope
mov
loopne
js
push
jo
push
pushf
dec
jo
orb
jo
push
or
xchg
sti
ja
mov
leave
push
xor
hlt
sbb
push
sub
jae
and
mov
dec
mov
outsb
jecxz
add
push
ss
inc
fistpll
mov
push
and
adc
sbb
rorb
jo
sub
popf
test
jnp
or
aaa
lret
divl
ds
imul
insb
push
push
shrl
jae
sbb
jo
pop
pushf
jbe
int3
je
imul
mov
cld
sarb
mov
or
jo
dec
in
loop
pop
pop
iret
lock
aam
cmp
sub
out
push
add
adc
xor
dec
nop
out
sbb
ja
mov
cmovg
loope
jle
pop
arpl
fdivp
dec
rolb
pop
add
jo
and
cmp
js
je
add
push
aam
mulb
jo
movsb
jne
sbb
outsl
jo
insl
or
cld
ret
xchg
insb
je
jo
pop
aaa
ret
std
jo
or
jl
cmp
xchg
cmp
outsb
push
jo
ljmp
leave
ja
xor
scas
jns
int
shrl
or
mov
xor
mov
mov
loop
jo
cmc
lds
fimull
add
inc
xor
jo
or
pusha
mov
and
not
addr16
jo
loope
and
mov
in
out
jo
nop
test
shll
icebp
daa
jo
dec
xchg
mulb
jo
jae
push
adc
mov
mov
sub
outsb
bound
aad
mov
inc
cli
mov
test
movsl
push
sub
cmp
jo
sbb
out
adcb
lea
andb
lock
jo
stos
test
sub
sbb
je
in
pop
mov
ss
rcll
sub
das
pop
in
bound
mov
scas
subb
inc
push
dec
mov
movsl
adc
test
lahf
fdivl
lea
dec
mov
mov
fs
or
loop
fdivl
stos
xor
jo
xchg
je
arpl
jle
jo
jmp
leave
xor
adc
sub
xchg
ds
iret
lret
jo
vpmaddwd
divl
push
push
je
jb
arpl
iret
lahf
aad
push
dec
jo
ret
mov
into
sub
jo
sub
sti
push
aas
pop
jns
jo
push
adc
icebp
mov
fisttpll
sbb
jo
mov
in
dec
inc
mov
fwait
mov
jo
push
sarb
in
push
icebp
rcll
push
pushf
cmp
jno
ret
push
fidivrl
mov
push
fnstenv
sub
mov
push
sahf
pop
dec
ret
sub
or
fcoms
aaa
push
das
fldl2t
sahf
add
sub
jo
mov
jmp
jo
ret
int
dec
leave
jo
xchg
sti
enter
clc
jo
lds
cmpsb
int3
xchg
into
aad
xlat
xchg
std
leave
sub
scas
jo
cmpsb
mov
mov
xor
aaa
add
jns
repnz
pop
rcll
cmpsl
dec
fs
scas
loopne
cmc
and
fildl
pushf
push
insl
dec
jb
push
xorb
data16
shll
addr16
push
add
jns
sbb
xchg
ja
jle
sub
pop
adc
sub
push
or
jo
jp
repnz
pusha
dec
sbb
xchg
fisubs
cmpl
xorl
mov
bound
jl
jo
push
pop
pop
sbb
mov
cmpsb
push
cwtl
inc
shll
dec
das
inc
xchg
jae
adc
sbb
jno
xor
call
jbe
cld
aaa
mov
mov
jmp
orl
lea
rcl
jae
jo
sub
jge
mov
xchg
pop
sbb
ja
lret
push
rclb
adc
add
outsb
cmp
ss
aad
hlt
add
leave
jo
pop
xchg
pop
movsb
inc
cltd
sbb
sub
or
rol
or
lock
jg
sub
adc
dec
adc
add
lahf
popf
pop
sub
push
cmp
dec
jb
push
jg
jo
mov
and
lret
arpl
fwait
cmp
test
mov
and
mov
out
lret
jle
es
enter
orb
push
addr16
add
jp
and
es
adc
aam
std
int3
cs
in
mov
xchg
jo
cld
cmpsl
repnz
enter
std
aam
and
gs
push
push
outsb
adc
xchg
insb
pop
cmc
jo
mov
lock
jo
aam
lods
xchg
popa
jbe
jo
pop
lds
jo
fmull
rcr
dec
push
nop
inc
inc
sub
xchg
jne,pt
jb
jo
lcall
push
xor
xchg
mov
xor
addb
push
fcmovnb
or
xlat
ja
shrb
or
sub
cmp
test
xor
dec
push
sbbb
or
inc
xchg
js
mov
jne
mov
repz
jo
ja
jbe
pop
ret
mov
and
mov
mov
pusha
sub
xor
lods
lds
push
jae
push
cmpsb
mov
dec
add
xchg
jmp
icebp
in
js
push
ja
inc
jo
cld
mov
cs
outsb
cmp
je
jle
xor
jo
inc
mov
jo
jp
mov
push
leave
jmp
sub
ljmp
inc
cmp
jo
orb
inc
sub
push
mov
adc
loop
daa
loope
and
sbb
add
sarl
lahf
dec
loop
fsubr
push
test
imul
aas
inc
rol
mov
xchg
out
js
stc
mov
xchg
sbb
ret
cli
imul
jo
sub
stc
sbb
xchg
repz
mov
xlat
lcall
xchg
and
fs
sbb
pmulhw
sbb
jns
pusha
push
add
rclb
nop
mov
jle
jo
mov
popf
nop
xor
push
mov
cs
sbb
cltd
lock
popf
dec
fwait
jo
jmp
test
jo
and
inc
lret
nop
sbb
push
mov
mov
out
inc
test
xchg
jo
sub
in
stc
inc
and
je
dec
cmp
mov
sbb
mov
cmp
ja
mov
in
mov
jbe
test
jo
mov
push
nop
dec
std
push
xchg
cmp
cmpsl
jo
mov
aaa
jo
rcl
jb
pop
inc
jo
push
mov
bound
jo
repz
movsl
mov
dec
js
or
push
iret
fbstp
push
lret
fsubrl
loope
xorb
add
ljmp
jo
pop
mov
add
cld
sub
add
jo
cli
int3
subl
inc
je
scas
push
and
mov
push
sbb
or
jo
jns
mov
sarb
ret
fdiv
add
shll
loop
xor
ss
flds
adc
push
jo
pop
jno
jmp
lret
lret
jo
scas
pop
lds
pop
push
jo
stos
jge
roll
add
push
iret
mov
hlt
out
sbbl
add
inc
and
mov
mov
int
jae
js
mov
mov
lret
notl
and
lds
stos
ja
or
shll
sub
add
cmp
jo
fnstsw
and
or
pop
push
jecxz
push
ljmp
lcall
stc
leave
jnp
jno
jne
cmpsb
cmovne
nop
add
gs
xchg
jns
push
jo
xor
lcall
xor
sub
mov
jg
loope
cmpsb
sub
scas
addr16
or
xor
sbb
cmpb
mov
loope
sbb
lea
pop
fs
jo
adc
imul
pop
test
aad
nop
ret
xor
sbb
aaa
push
jp
int
fwait
pop
lahf
hlt
cld
sub
jo
iret
mov
ret
jo
fsubp
mov
or
shlb
dec
add
jae
sub
adc
lcall
ret
adc
mov
xchg
mov
inc
pop
and
add
lods
mov
pop
insb
or
lcall
sarl
inc
xchg
jo
pop
add
jnp
loope
and
ret
daa
out
lds
jecxz
int
jle
outsl
dec
fisttps
pop
push
ret
fs
popf
mov
jo
cld
mov
icebp
jo
enter
fnsave
mov
jno
mov
pop
mov
bound
jle
pusha
js
out
adc
dec
in
sbbb
shlb
imul
push
stc
clc
lret
in
shlb
jo
aam
cmc
leave
jmp
cmp
pop
push
pop
andb
mov
sti
xchg
test
movsl
sub
call
inc
cmp
xchg
jo
push
ja
insl
mov
ffreep
in
fldcw
dec
sub
out
push
mov
jb
mov
cli
sub
sub
push
jle
ds
jnp
mov
shll
fdivrl
cld
xor
mov
adc
jbe
das
ret
or
jnp
out
sbbb
and
ret
leave
dec
lcall
xchg
mov
ret
lods
stos
or
lds
jne
and
pop
dec
pop
std
cmpsl
das
stc
inc
imul
mov
outsb
or
je
mov
loop
add
cltd
jo
sub
leave
push
push
jo
jle
enter
xor
mov
insb
xchg
adcb
jo
add
mov
ss
push
dec
jmp
mov
lods
sbb
mov
dec
sub
cmp
jo
adcb
repz
jo
cltd
loope
sahf
incl
mov
and
jmp
xor
scas
popa
rolb
mov
sub
adc
popf
jo
push
cwtl
or
mov
loop
jo
lds
adc
push
dec
jbe
adc
insb
jbe
mov
add
fxch
jo
cmp
lods
cld
jmp
xchg
lock
jp
xlat
pop
je
cwtl
mov
data16
pop
xchg
jne
pop
jo
adc
pop
jo
ret
sub
push
subl
jp
lock
mov
jl
nop
addr16
fstps
jge
fs
hlt
push
jns
jo
lea
push
xchg
jge
cmp
and
and
sub
jo
scas
ja
push
mov
jbe
insb
mov
xor
repnz
push
cld
shlb
leave
sub
sbb
pop
and
cmc
push
inc
fs
das
dec
jo
hlt
mov
xor
dec
testl
jns
xor
shll
mov
dec
aad
cmpsl
loope
je
add
rcr
push
test
xchg
nop
fwait
cmp
push
jb
jne
jmp
jo
pop
mov
addr16
out
pop
mov
sbb
and
fadds
jmp
sub
jo
out
or
inc
push
andb
fisubs
jl
mov
xsha1
cmpsb
lret
mov
inc
rolb
sbb
cmc
mov
jl
xchg
push
jo
mov
in
inc
cmp
push
ret
imul
pop
fs
fcoml
stc
jae
out
mov
pusha
leave
jecxz
push
cmpsl
jns
fsubs
dec
fistl
ja
outsb
xchg
jo
js
sarb
loope
sahf
jo
pop
ret
mov
fidivl
jo
cmp
xchg
jmp
push
mov
xor
stos
jo
mov
fldl
mulb
push
rcrl
bound
push
shr
fwait
jmp
out
orl
pop
leave
repnz
and
adcl
ret
scas
sub
jl
stos
nop
add
ja
repnz
jmp
lods
and
pop
xor
cmp
inc
jo
ss
aaa
in
xchg
push
jo
sarb
leave
imul
jbe
je
sbb
and
rorb
xor
push
xchg
int
movsb
repz
lret
pop
adc
je
mov
std
mov
mov
dec
pushf
jbe
dec
jo
pop
sahf
adc
xchg
gs
adc
daa
mov
jnp
xchg
int
jb
jo
mov
icebp
push
mov
sbb
sbb
sub
mov
inc
into
sbb
cmc
mov
stos
and
rolb
fmull
cmc
sahf
push
scas
push
jno
xorb
ss
cld
je
jo
jnp
sub
xchg
cmc
in
pop
clc
jo
push
mov
jecxz
cmp
pop
in
sti
jp
mov
stos
mov
jo
sbb
int3
lahf
xor
jo
stos
inc
bound
aad
mov
xor
js
add
jo,pn
inc
xchg
inc
adc
in
ret
push
lods
jno
mov
mov
or
push
mov
testb
add
arpl
jecxz
loope
inc
aaa
jo
outsb
daa
test
jge
jo
sbb
mov
int3
sbb
cmp
push
sbb
hlt
lret
shrl
adc
sbbb
or
cmp
mov
clc
movsl
sub
sub
or
jo
mov
ret
imul
jo
dec
pop
sarb
jbe
mov
nop
lods
add
xchg
xor
ret
jl
jo
dec
mov
or
nop
cld
xor
pop
mov
cmpb
int
jle
les
jbe
fcoms
push
lods
outsl
dec
and
sub
lcall
in
imul
adc
xor
lds
negb
shlb
sub
data16
push
nop
aaa
scas
out
lret
ja
jns
lock
or
ds
je
xor
pop
out
ret
push
js
sub
mov
jo
mov
mov
gs
jo
adc
mov
mov
xor
xchg
xchg
insb
movsb
mov
rcll
popa
test
push
jp
rcrl
bound
addr16
mov
xlat
mov
in
sbb
sub
jo
lods
adc
jb
aad
lds
iret
dec
rclb
inc
repnz
call
int3
push
sahf
inc
nop
test
loop
inc
sbb
pop
enter
push
fsubrs
cmp
movsl
mov
inc
add
dec
add
dec
leave
out
xchg
std
cltd
sub
stos
orb
sub
mov
cwtl
arpl
dec
rcll
test
xchg
mov
aam
push
add
jo
mov
loop
jo
lds
mov
push
mov
out
mov
jo
xchg
lods
nop
out
repnz
mov
mov
sub
push
stos
pop
in
lahf
jo
pop
jnp
aaa
mov
pushf
jb
int
int3
sub
ret
push
xchg
mov
dec
pusha
ja
or
out
cld
das
xchg
jmp
sbb
xor
jo
mov
dec
lahf
jo
ret
imul
imul
insl
roll
push
scas
mov
xchg
in
js
lret
or
scas
arpl
outsl
xchg
mov
sub
in
push
fs
dec
cmp
add
inc
cli
jo
jge
mov
leave
sbb
sti
pop
push
pop
shl
mov
mov
inc
fimuls
cs
arpl
jnp
bound
js
scas
dec
movsl
inc
pop
mov
pop
xchg
jo
in
push
sbb
xor
jns
jo
mov
aam
jo
sahf
sbb
mov
mov
push
je
insl
mov
imul
xchg
daa
out
jle
jp
and
sub
xor
add
inc
addr16
jo
push
lock
xchg
and
inc
mov
lahf
add
adc
mov
xor
ret
imul
shr
jge
mov
push
scas
mov
jle
enter
mul
add
xor
sub
push
sub
inc
mov
in
mov
stc
push
adc
out
ds
xorb
aad
cli
mov
jb
adcb
xchg
movsl
pop
rolb
push
fistpl
mov
je
push
xlat
nop
sub
jo
xchg
inc
out
xchg
push
repnz
outsl
xor
jl
fidivl
pop
mov
out
cmp
and
lock
inc
adc
xor
sub
je,pt
test
jmp
lods
xchg
push
icebp
scas
jno
mov
aad
rolb
out
mov
jo
aaa
movsl
lret
adc
lds
mov
scas
ss
jo
imul
sbb
mov
jo
aaa
adc
cmp
lds
sub
jo
cmp
adc
push
ss
nop
cmp
adcl
jae
xor
es
repz
dec
add
sbb
jo
cmpsl
pop
cmp
lock
jo
lds
ja
sub
cmpsl
movsl
repnz
jns
and
inc
mov
add
push
or
outsb
sub
jmp
mulb
test
xchg
std
iret
jo
inc
in
cmc
aaa
rcll
daa
push
sub
cmp
mov
dec
lock
enter
mov
mov
shrl
add
sbb
xchg
pop
cmpsl
inc
mov
mov
popf
leave
jl
push
call
fistps
inc
je
out
xor
add
push
jo
in
push
dec
cmp
inc
jo
pop
jbe
loope
mov
addr16
insl
add
jo
mov
scas
jl
ret
cmp
sar
push
mov
cmp
inc
aad
mov
jo
mov
and
jo
jb
and
adc
dec
scas
andl
sbb
ret
addr16
pusha
inc
jmp
mov
repnz
sbb
cmp
dec
xor
je
jp
push
addb
test
hlt
ret
push
xchg
and
mov
lea
mov
gs
jnp
cmpb
jl
and
jo
lods
xor
repz
lds
inc
dec
mov
test
inc
fcompl
cmpb
fimull
testl
imul
push
jl
pop
lods
jge
or
dec
xchg
repz
push
int
sub
je
add
shll
sub
push
jecxz
scas
loopne
xor
fidivs
and
add
lds
push
mov
pop
ret
jo
lahf
jge
mov
jb
pop
jo
cmp
cmp
and
jo
ja
cmc
sbb
ror
mov
and
ret
outsb
ficoml
mov
jo
ss
xor
xchg
or
pushf
nop
inc
fisttpll
imul
jo
or
jbe
bswap
sub
leave
mov
popa
in
filds
or
jmp
push
dec
pop
mov
adcb
pop
jo
add
scas
xchg
fldl
push
lcall
push
dec
ret
pop
jge
mov
lds
jo
sub
shl
clc
sub
inc
mov
pop
sub
xchg
jl
dec
jae
add
pop
movsw
ret
mov
adc
loope
int
cmp
les
rclb
pushf
ret
jp
clc
add
test
push
and
shlb
imull
xchg
das
cltd
add
into
jo
mov
sbb
mov
mov
lret
fildll
cld
adc
in
subb
jmp
cmpsb
sti
pop
jp
jo
fbld
lds
test
mov
loop
insl
push
pop
dec
jmp
iret
sbb
movsb
js
inc
adc
push
loop
push
xchg
outsl
jo
pop
mov
cmp
xor
jno
popf
rcll
loopne
jmp
scas
jo
fs
jns
sarl
or
hlt
data16
lahf
leave
data16
clc
xorl
pop
jo
test
jg
out
shrl
aad
data16
jecxz
lock
sbb
pushl
sub
out
jns
xchg
jo
repz
push
lds
cli
iret
leave
pushw
or
dec
mov
imul
mov
and
jne
mov
popf
sub
dec
test
cmc
xchg
jle
cmp
mov
inc
dec
imul
jo
ret
and
dec
addl
lds
pop
dec
daa
lock
jo
xor
roll
push
pop
dec
sub
fs
cmp
sbb
jo
shll
cmpsl
sbb
fdivl
imul
fldl
pop
xor
inc
or
es
xor
jo
ret
dec
leave
sbb
cmp
rcrb
push
mov
jle
xlat
jnp
jne
scas
lock
sub
push
sub
push
fiadds
rcrl
es
jo
push
xor
hlt
mov
push
jo
cs
xchg
rcr
pop
maxps
lods
adc
lock
or
mov
pushfw
mov
xchg
sarb
xor
inc
aad
or
fcmove
xchg
xchg
fstpl
lods
pusha
jo
add
shl
bound
mov
nop
inc
and
cmc
inc
cli
cltd
sub
push
and
lahf
add
leave
or
jo
pop
ljmp
inc
insb
ja
test
xchg
fadd
jo
rcrb
adc
dec
or
cwtl
jo
lods
out
sbb
int
pop
jo
psrlq
or
lret
gs
in
jle
inc
mov
pop
std
shll
sub
xor
jo
frstor
pop
lock
jl
dec
and
out
clc
add
xor
rorl
adcb
fs
test
or
sbb
xlat
xor
jp
mov
addr16
lock
pushf
scas
xor
sbb
arpl
xchg
js
out
aam
leave
nop
cmp
or
pop
lret
enter
push
outsl
xchg
int
pop
pop
inc
in
xor
sbb
or
push
dec
cmp
loope
add
adc
roll
cs
ret
mov
lret
add
leave
add
mov
mov
es
mov
jp
scas
inc
jo
ret
popa
mov
test
lds
cli
push
inc
jno
jp
xchg
ja
sar
inc
fnsave
or
in
std
lock
sbbb
in
shrb
xorl
enter
out
icebp
xor
and
in
xor
aad
or
popa
sbb
loope
jo
push
mov
out
pop
push
mov
jmp
add
fbstp
jno
jo
shlb
loope
mov
sub
inc
mov
sub
pop
scas
dec
pop
fld
bound
out
mov
leave
insl
xchg
fs
data16
rol
jno
sbb
inc
shlb
btc
adc
xor
addr16
mov
shrl
jge
mov
and
imul
test
aad
xchg
pop
xchg
xorl
xor
jo
cmp
imulb
fs
stos
jl
dec
push
xlat
jl
jno
or
push
add
outsb
add
nop
jle
jo
pop
imul
xchg
in
pop
jo
fadds
or
repz
jb
dec
hlt
adc
jge
mov
std
and
je
nop
psubusb
inc
out
jle
cmp
mov
mov
sub
insb
mov
sarb
add
in
mov
push
out
push
cmp
cwtl
xlat
and
lock
cmp
scas
push
xor
pusha
jo
in
pop
shll
xchg
sbb
adc
push
mov
jp
bound
xchg
sub
lds
loope
bswap
repnz
pop
popf
jo
mov
std
dec
jo
ret
stos
mov
jo
pushf
outsb
add
ret
cmp
notb
imul
dec
pushf
scas
inc
movsl
add
repz
xchg
inc
ja
cmp
pavgw
movsl
push
lret
mov
push
mov
fsubs
pop
mov
dec
jne
sbb
jno
test
sub
inc
cmpsb
jmp
dec
jo
icebp
sub
mov
ret
jo
push
add
movsb
out
sbb
mov
cmc
js
stos
shl
push
into
jo
pop
jne
in
cs
jp
xor
ss
mov
rolb
mov
xor
pop
test
clc
imul
push
jnp
jo
fcomps
xor
push
rorl
cmp
sub
sbb
inc
es
push
mov
cli
nop
push
push
push
cmp
in
add
pop
gs
lret
jo
std
popf
xor
sub
icebp
mov
das
sub
cs
and
sahf
shl
xor
mov
or
addb
inc
cs
gs
adc
fs
or
sub
lds
dec
es
out
shll
xchg
pusha
mov
mov
mov
push
mov
jmp
mov
cltd
cld
pop
xchg
pop
jl
push
add
pop
test
xchg
sub
nop
mov
jo
addr16
into
cli
mov
pusha
jo
iret
aas
ret
mov
mov
in
jo
fidivs
sub
nop
lds
cld
xchg
push
jge
xor
pop
xor
lcall
rolb
into
or
dec
loope
or
and
push
jmp
mov
and
es
jo
ds
mov
push
pop
mov
xchg
fsubp
hlt
xor
mov
add
jns
mov
dec
push
lcall
movsl
xchg
int
inc
cli
and
fists
ret
xchg
in
push
and
rcrb
push
adc
jno
adc
add
loope
shll
dec
pop
mov
fdivl
lods
out
dec
nop
pop
cmp
jge
push
xorb
cltd
js
leave
hlt
dec
inc
sbb
and
test
xor
push
insb
inc
sub
out
iret
jo
mov
shll
sbb
jo
test
jo
and
xorl
cmp
jo
sbb
sbb
imul
xor
sahf
jb
std
shlb
js
pusha
jge
addr16
push
jo
in
xchg
pop
shll
add
pushf
aas
jae
sbb
inc
insb
es
loope
repz
mov
fwait
jg
aam
movsl
jb
push
jmp
sbbl
mov
ss
nop
std
sub
jmp
lock
inc
test
dec
inc
or
jo
or
xchg
hlt
pop
mov
in
cmp
push
sbbb
mov
pop
inc
pop
mov
data16
jo
mov
lret
testl
aam
movsb
pop
cmp
add
movsw
xor
stos
gs
rcr
icebp
jo
xchg
insl
fildl
xlat
jle
push
cmp
out
hlt
lret
es
sbb
push
cli
orl
xchg
push
into
jo
ret
adc
mov
test
inc
std
xor
loope
out
jge
push
loopne
daa
and
rorl
cli
push
and
and
cmp
jo
adc
ficompl
jo
push
cli
movsb
sub
pop
xchg
jo
mov
push
xchg
jo
cmp
jne
cmpsl
and
ror
data16
xor
xchg
xor
jo
xchg
loope
imul
jo
xor
jle
orl
jo
ret
jmp
popa
mov
xchg
adc
mov
mov
add
jo
pusha
adc
or
inc
movsb
and
insb
inc
out
jae
jo
sarl
jo
ljmp
jo
xchg
movsl
and
pushf
mov
push
int3
lods
pop
inc
adc
mov
pop
push
icebp
int
scas
nop
push
add
jo
mov
aaa
rol
jp
jo
cwtl
fstl
jo
ds
xorl
jne
cmp
push
fidivs
fsubs
mov
sbb
sbb
nop
jg
cmc
scas
rcll
jo
aad
xor
jo
sbb
les
fnstsw
mull
rolb
movsl
jo
fcmovbe
cli
jne
xchg
bound
loopne
fnstcw
or
int3
mov
loop
cltd
or
dec
sub
pop
adc
jo
popa
rcll
inc
jg
ret
outsb
xchg
pop
lds
adcl
mov
xchg
push
outsb
lds
push
mov
sbb
push
dec
pushf
test
mov
jno
sbb
jg
or
xor
push
daa
mov
gs
cmp
jo
bswap
mov
xor
test
xlat
andb
mov
cs
mov
mov
dec
add
pushf
push
loop
push
sbb
jo
aas
cmp
lds
jns
mov
or
ss
test
xchg
sbb
pop
cs
sub
outsl
std
jo
out
psubsw
or
ret
jo
movsl
xchg
ja
dec
push
shll
arpl
cld
jo
push
adc
sbb
inc
jo
sub
xor
cli
cmp
xor
push
mov
jnp
shrb
loop
cs
jb
inc
sbb
adcb
shrb
and
and
push
pextrw
sbb
shl
sbb
or
pushl
cmc
push
lret
jge
push
add
push
push
and
rorb
push
inc
stc
dec
test
jp
test
pop
mov
das
mov
jo
outsl
icebp
inc
add
fcmove
jo
or
ret
lahf
xor
fdiv
enter
xlat
cltd
push
imul
leave
daa
jmp
cmp
jle
cltd
cmp
jo
leave
shrb
jo
push
lds
sbb
imul
mov
jae
jo
xchg
jecxz
arpl
dec
sub
lds
lock
jne
xor
jle
bound
vpshufhw
rcrb
push
inc
call
js
jb
push
rcll
mov
cmc
lea
push
jo
mov
out
scas
mov
inc
jns
jo
cmpl
mov
leave
jo
fwait
add
mov
aaa
pop
push
lds
leave
iret
xor
or
aas
mov
pop
pop
hlt
add
bound
bound
ficoms
subl
and
pop
mov
mov
enter
imul
repz
popa
push
sub
cli
fisubrs
shlb
jle
in
xchg
xorb
dec
or
or
pop
jo
rcrl
xchg
cld
and
ret
insb
popa
int
icebp
out
xor
mov
cmc
cmp
jmp
jp
jo
xchg
jg
stos
and
sahf
mov
lret
xlat
and
fs
data16
idiv
addr16
nop
ss
push
push
pop
sub
repz
jle
scas
ret
shlb
jo
or
mov
into
xorb
fwait
mov
sarb
out
cmpsl
cmp
fisttpl
or
mov
ret
mov
lea
sarl
aaa
jo
push
test
stos
xor
mov
adc
jo
scas
enter
mov
jo
dec
cmp
pushf
mov
mov
lock
in
roll
and
jp
push
sub
jo
sbb
jne
jo
cmpxchg
push
jnp
jo
lcall
jo
pop
es
xchg
mov
push
scas
inc
pop
ret
enter
adcl
add
push
int
test
pop
cld
es
mov
roll
mov
into
add
mov
push
lret
mov
insb
rcll
mov
mov
lcall
movsb
xor
mov
hlt
fidivrs
nop
scas
jns
ret
ja
cltd
das
jo
and
push
jo
ret
jae
movsb
test
push
loope
int3
adc
add
pop
push
rclb
fwait
jo
sbb
and
int
adc
sbb
andl
fwait
inc
mov
je
jno
cmpsl
sub
aam
jo
jb
movsb
fucomp
clc
je
lods
pop
cltd
out
jns
addr16
shll
jo
mov
rcrb
in
xchg
jp
cs
inc
mov
dec
and
andb
jo
rorl
sub
adc
ret
mov
clc
jo
cwtl
push
hlt
or
jo
jp
bound
cmp
out
push
repz
jo
loop
inc
push
call
adc
pop
ret
ds
jo
mov
cmp
inc
fs
mov
jnp
fs
stos
jo
jmp
out
xor
jecxz
sub
adc
aaa
lds
cltd
out
mov
cmc
push
jno
sahf
jo
cli
pop
std
sbb
sbb
pop
xor
icebp
cltd
jo
aas
add
imul
jo
int
adc
mov
lock
inc
cmp
inc
dec
mov
push
jo
and
daa
pop
leave
mov
in
test
mov
jo
out
repz
add
add
adc
cmp
cmp
cmpsb
jb
rcr
cmc
fs
push
lods
add
lds
jo
sbb
scas
push
cmpsl
leave
xchg
and
clc
sub
popf
cmp
loope
jo
stos
ret
subl
mov
mulb
pop
jo
inc
mov
cmpsb
ficoms
jo
and
mov
stos
jnp
dec
sti
fs
hlt
ja
add
xor
jo
clc
aaa
and
sbb
cmp
mov
dec
jo
or
imul
mov
add
push
sbb
mov
jo
pop
or
pop
leave
pop
jle
jo
fwait
push
cmp
aas
add
adc
cmpsl
pop
lahf
leave
fidivs
mov
daa
jo
vfnmaddps
jo
add
or
insl
scas
outsl
cmp
mov
xchg
jle
jo
test
adc
lret
in
jo
jecxz
scas
xchg
mov
sub
lods
imul
montmul
cmpsb
inc
lea
or
mov
push
lret
outsl
push
jge
fcoms
fidivl
adc
jo
xchg
xor
leave
or
jo
pop
xchg
fmuls
or
sub
jo
jge
inc
xor
mov
mov
mov
shlb
fs
lods
jo
cld
or
jb
or
inc
fxch
mov
mov
jbe
int3
ret
xor
testl
in
loope
jo
jg
mov
nop
cmp
adc
lods
sub
int
js
jle
add
shll
jo
je
inc
sub
cltd
lock
lret
pop
mov
push
fnstenv
ffreep
mov
and
add
pop
shll
sub
jg
movnti
jno
cld
hlt
aas
dec
mov
add
lret
test
jo
test
lcall
and
rcll
dec
adc
and
jo
in
jp
arpl
hlt
jo
mov
add
mov
jle
lods
jle
test
sahf
add
jmp
push
adc
addb
dec
in
test
push
mov
repz
sbbb
ret
or
and
adc
popf
jbe
or
inc
inc
jo
pop
xchg
add
rdmsr
out
shl
push
punpcklbw
cmp
in
jno
jmp
mov
aad
sub
pop
lods
push
xchg
pusha
jmp
cld
xchg
push
clc
adc
bound
and
and
mov
cmp
push
scas
js
mov
fidivrs
psubsw
dec
adc
jno
je
out
cmp
pop
insb
lcall
sub
dec
std
les
push
aad
nop
mov
cmp
test
jg
faddp
jo
mov
and
xchg
or
int
es
sbb
arpl
and
ret
lahf
xor
cmpl
addb
andl
nop
sti
mov
jmp
add
aad
cmp
stos
mov
shlb
jmp
in
jo
popa
sbb
fwait
jo
mov
neg
jo
mov
adc
ret
shl
and
lea
ja
inc
sahf
jo
sub
hlt
mov
into
loopne
dec
lea
mov
push
jnp
out
jno
mov
in
jo
stc
dec
push
fdivs
fstps
jo
adc
push
or
mov
jmp
fnstenv
sub
jge
jo
jns
inc
orl
in
jmp
and
mov
adc
negl
adc
jo
sub
shr
sub
jo
add
loopne
mov
movsl
push
lds
mov
sub
jg
mov
aam
fs
push
xchg
loop
mov
xorb
mov
inc
dec
je
and
nop
cmpsb
dec
sbb
pop
scas
jbe
cltd
inc
shrb
jp
fwait
mov
push
out
sub
js
sub
inc
cwtl
mov
enter
mov
jo
push
lret
stc
sbb
sub
jo
jb
mov
lea
in
test
cmp
ss
sbb
sbb
ja
and
push
pop
mov
sbb
leave
jb
aad
push
mov
in
inc
fsubp
ud2
sub
dec
mov
lea
jle
bound
lret
xor
loop
xor
xor
sub
incb
data16
jo
addr16
andb
jo
nop
lds
mov
pop
out
mov
and
mov
or
add
aam
mov
scas
fs
cmpsl
into
pop
sub
push
cwtl
jb
frstor
pop
dec
sbb
ret
loope
jbe
add
in
push
or
nop
dec
ret
jle
jo
and
daa
orl
cmp
sub
jo
push
mov
out
lock
add
std
adc
sbb
scas
sbbl
lock
fcoms
fidivrs
adc
xchg
mov
jno
push
sbb
push
mov
stc
xor
daa
dec
sbbb
jo
pop
sbb
sub
bound
cmp
xchg
add
loop
test
int
adc
push
ljmp
mov
scas
hlt
das
repnz
js
and
mov
sub
xor
xor
xor
xor
hlt
and
nop
push
std
and
jbe
mov
mov
sbb
test
inc
xchg
and
or
es
hlt
popa
out
test
jo
add
lock
bnd
js
add
xlat
or
pop
leave
addb
pop
dec
gs
jo
mov
push
divl
push
add
cmp
push
and
pop
push
push
push
bound
mov
mov
out
jo
cmpsb
movl
jo
test
sahf
cmp
push
addl
pop
rcl
fsubrs
inc
subb
lcall
push
test
jmp
adc
jnp
fwait
jo
lds
jg
loopne
andb
lret
jo
mov
cmc
or
adc
fs
inc
mov
mov
dec
xchg
xor
push
inc
cli
xor
test
repz
xchg
sbb
enter
popf
sbb
test
orl
pop
ja
jae
out
push
inc
pop
xchg
cmpsb
bound
xor
out
jle
dec
sahf
rcrl
pop
push
xchg
xor
push
inc
stc
jge
bound
ss
pop
jo
insl
or
dec
xor
ljmp
xor
test
sbb
popa
add
dec
add
test
outsl
shll
imul
ret
jo
notl
sarb
sub
inc
or
lret
in
fildll
or
cmpsl
je
repnz
push
sahf
jge
inc
insb
and
test
enter
cmp
adc
loopne
xchg
sub
jle
leave
fiaddl
jo
ret
ja
jmp
pusha
addr16
jo
push
cmp
add
shrl
in
and
loop
or
and
vmwrite
enter
in
lret
jmp
cmp
popa
xor
adc
outsb
sub
and
sbb
add
inc
cltd
subb
aaa
push
stos
jo
loope
out
cmpl
dec
clc
lds
pop
jo
imul
shrb
jecxz
fdivl
jns
pop
out
shll
xchg
xchg
imul
push
test
js
cmpsb
jnp
jle
jo
mov
int
and
cli
push
dec
xor
jb
sub
out
ret
add
xor
iret
and
jo
ror
adcl
cmpb
mov
out
jo
cmc
shll
dec
in
push
jo
inc
int
jae
leave
in
dec
adc
push
sti
shl
fidivl
mov
add
or
sarl
jbe
or
mov
adc
lds
shlb
lcall
dec
movsb
jp
sbb
cli
frstor
xchg
adc
mov
add
repnz
jo
cs
adc
sbb
pop
jo
fwait
out
not
adc
stos
data16
lret
inc
xchg
jo
cmp
cmp
xor
ret
mov
pop
jne
inc
mov
add
cs
mov
jo
sub
lock
jne
shll
aad
lds
nop
enter
call
rorb
mov
jle
aaa
nop
xchg
jo
pop
mov
fnstcw
adcb
jle
jo
dec
pop
xchg
ficoms
rcrl
mov
fcmovb
mov
dec
loop
mov
es
mov
icebp
mov
out
mov
mov
cwtl
movb
inc
iret
jo
hlt
stos
arpl
ljmp
aas
in
jne
test
mov
ds
mov
std
jb
in
pop
pop
mov
sub
filds
int
and
push
cli
rol
jae
out
inc
aaa
leave
and
push
sarb
sub
pop
push
nop
push
jnp
movl
jo
aas
repnz
mov
aad
jo
les
lea
mov
das
lds
mov
ret
pop
mov
jp,pn
pop
packuswb
lods
inc
mov
jo
data16
adc
mov
int3
mov
xor
sbb
push
sbb
das
sbb
sub
insb
jns
xchg
arpl
sub
dec
pop
push
fstpt
mov
into
sub
pop
inc
jo
pop
dec
jg
jo
mov
movsl
xorb
je
xchg
xchg
ror
add
adcb
xor
inc
push
jb
js
ret
scas
adc
leave
push
push
jo
push
jae
inc
cmpsb
jo
jns
inc
lds
mov
mov
bound
push
shlb
sbb
and
mov
mov
js
mov
xor
or
mov
and
dec
or
adc
inc
orl
lahf
inc
sub
mov
mov
addr16
ret
sahf
mov
dec
cli
add
push
loop
inc
adc
mov
nop
push
jp
sub
cmp
push
push
std
clc
dec
mov
cmp
mov
push
adc
xor
faddp
xchg
pushf
call
std
movl
mov
nop
int
aad
cs
inc
bound
push
ss
inc
mov
push
sti
or
dec
mov
aas
test
jle
jo
sahf
ss
xor
adc
mov
mov
inc
push
ljmp
dec
wbinvd
sbb
or
popf
sbbb
cmp
adc
insb
and
lret
lock
fwait
or
adc
in
mov
imul
xchg
in
aam
xorb
pop
sub
pavgb
test
cltd
mov
mov
pop
fdiv
gs
cs
aas
pop
xchg
push
mov
jb
sub
mov
sub
jle
test
shll
jg
scas
imul
pop
xchg
ds
cmc
xchg
cmpsl
and
inc
adc
ret
mov
pop
xchg
or
loope
fsub
inc
fnstsw
in
push
loop
vrcpss
hlt
cld
mov
pmaddwd
and
jge
aas
and
rcrl
inc
mov
pop
adcb
pop
xor
mov
lret
push
enter
cmp
jo
push
mov
xchg
fnsave
push
fdivrl
ja
and
pop
repnz
movsl
jo
push
test
mov
mov
sub
push
sbb
add
fidivl
imul
sub
jnp
pop
jbe
add
jo
push
or
add
jge
jo
add
lds
xchg
push
or
push
aaa
lods
out
mov
les
fwait
inc
push
xchg
dec
or
ret
jo
mov
xor
test
addl
call
fisttpll
sub
imul
scas
pop
lahf
jae
jp
jo
push
cmpl
mov
fcomps
test
mov
xchg
jmp
jo
stos
into
andl
sub
aaa
jo
popa
push
std
repnz
inc
mov
cmp
mov
sahf
shrb
incb
imul
movsl
mov
cmp
sbb
and
fiaddl
xor
mov
movsb
jl
add
rorb
loop
sarb
sbb
add
jo
pusha
leave
inc
add
cli
mov
cld
fcompl
xchg
dec
pop
jl
stos
insb
idiv
scas
push
jbe
fwait
add
xor
mov
pop
in
fnstsw
subb
or
inc
lcall
arpl
sub
stc
das
adc
or
insb
sarb
rorl
pop
out
sub
adc
nop
int
int3
inc
test
in
xchg
stc
inc
pushf
sub
bound
mov
loope
ja
mov
punpckhdq
clc
andl
arpl
daa
xchg
sbb
movl
push
ret
loopne
sub
xor
dec
mov
call
les
mov
pop
popa
ja
and
add
or
jo
out
stc
jns
sar
jo
scas
dec
les
mov
xchg
jb
int
icebp
jo
in
ret
pop
out
push
movsb
rcll
out
jnp
jg
jo
nop
je
xchg
lods
inc
popf
jo
dec
add
cmp
vmovmskps
fadds
dec
xor
pop
test
nop
mov
mov
mov
jo
pusha
dec
data16
ror
nop
sub
repz
push
ja
insl
push
jo
in
cmp
xor
mov
aaa
add
repz
jo
lret
mov
bound
mov
jmp
das
dec
nop
sbb
or
xchg
mov
sti
xor
xor
ret
sub
or
jb
jo
fwait
std
sub
push
int3
imul
mov
dec
lea
sbb
jo
dec
sbb
outsb
int
sub
jo
xchg
into
sub
mov
repnz
arpl
in
in
pop
sub
or
sub
jo
dec
popa
mov
mov
pop
mov
dec
push
cmp
loopne
cmp
test
daa
je
mov
mov
je
jg
jo
add
jl
pop
js
cmpsl
jo
cmp
sarl
int
insb
xor
jo
popa
lods
cmpb
mov
dec
movsb
sub
hlt
cmp
cmp
pop
cli
cltd
and
jle
or
fistps
jge
jp
inc
adc
dec
push
scas
mov
jmp
sub
nop
pusha
mov
xor
adc
sub
xchg
mov
mov
jo
test
adc
test
mov
sahf
addr16
out
addl
mov
ret
mov
cltd
add
jo
adc
push
jg
stos
in
aas
sub
jo
fistl
scas
push
subl
inc
jo
daa
lds
pusha
lock
lret
jl
scas
ja
mov
push
add
in
repz
fidivl
ret
loope
test
nop
and
add
mov
pop
mov
pop
flds
push
ret
imul
xor
les
jo
pop
mov
int
dec
test
inc
shll
clc
and
shrl
pop
jo
pop
test
sbbl
gs
jle
xor
fisubl
dec
pop
ss
adc
insl
pop
inc
or
and
xchg
mov
xlat
xchg
inc
cli
jo
lods
pop
cmp
push
pushl
ljmp
fldcw
dec
psrad
test
icebp
push
insb
mov
sub
scas
lds
cmp
pusha
cvtpi2ps
push
ljmp
ja
test
xchg
mov
popl
push
sarb
jo
ret
cs
adc
int3
sahf
push
lds
inc
inc
scas
cmp
cmc
mov
pop
push
test
ret
ljmp
add
add
leave
js
imul
sub
pop
add
inc
xchg
xlat
jmp
adc
stos
push
enter
ljmp
in
inc
cwtl
aam
jbe
jo
and
roll
jo
aaa
and
and
fnstcw
pop
xchg
dec
in
sub
xchg
ljmp
dec
jo
add
lret
ret
xor
jbe
lds
nop
test
aas
ja
or
scas
mov
push
das
cli
sbb
enter
lods
test
sbb
lahf
mov
cltd
push
insb
inc
cld
ljmp
aas
out
adc
mov
mov
subb
and
or
psrlq
insb
out
adc
lods
imul
push
mov
repnz
add
inc
mov
setb
les
adc
jo
xchg
negl
int
push
jo
pop
ret
dec
rolb
aam
jo
mov
cltd
push
add
xor
addb
test
inc
xchg
jo
mov
mov
sbb
ret
gs
push
sub
mov
clc
mov
jo
mov
inc
push
jo
sbb
popf
sti
jo
pop
bound
or
mov
and
into
sub
mov
ds
fwait
push
jo
mov
popw
lret
xchg
jo
icebp
lock
xchg
addb
mov
lds
nop
out
mov
jnp
mov
pop
test
cmpsb
xor
and
in
rcrl
std
gs
inc
mov
shll
xlat
popa
cmp
mov
ret
pop
mov
or
xor
xchg
popa
sub
add
loopw
fs
jo
shll
jo
push
mov
push
cs
push
pusha
je
pop
inc
addr16
jo
ret
dec
rorl
fwait
loop
fisubrs
out
mov
loope
bswap
leave
lcall
inc
lea
push
aaa
sarl
push
mov
mov
pusha
icebp
testl
lcall
jbe
loope
test
mov
in
jo
or
xchg
std
xchg
jo
cmp
lds
jo
daa
out
shrl
loope
jo
adc
mov
leave
pop
int
repnz
test
mov
arpl
leave
jne
inc
sahf
pop
shl
push
jo
xor
std
adc
jo
ret
fwait
mov
jge
lahf
jmp
shlb
ds
inc
sub
push
ret
test
cwtl
sub
sbb
es
push
outsl
in
nop
in
out
cmp
in
inc
jl
lds
dec
stos
xchg
xchg
cs
hlt
mov
jecxz
shrl
jno
dec
adc
and
repz
out
mov
outsb
jns
fldenvs
dec
lock
xor
sbb
cmp
cmpsl
out
jb
sub
sub
lock
pop
shll
addr16
jo
stos
sbb
in
push
adcb
add
push
push
mov
xchg
xor
lds
mov
sub
jo
mov
out
jo
andl
push
xor
in
jne
bound
jo
insl
mov
outsb
jp
mov
inc
jl
jae
mov
aaa
dec
adc
aam
into
sbb
cmp
in
das
add
inc
or
jo
subl
or
mov
pop
mov
push
or
mov
jo
push
dec
loope
or
mov
aaa
pop
jo
mov
jmp
jns
outsb
xor
loopne
imul
in
test
adc
xchg
xor
adc
mov
mov
inc
and
jb
enter
xor
mov
mov
por
ret
outsb
push
jle
or
aam
insb
into
pop
lods
cmpsb
nop
sub
ss
jl
bound
cmpsl
jno
movsb
push
ljmp
xchg
adc
subl
out
aaa
mov
nop
pop
add
inc
inc
ja
inc
pop
lock
jo
lods
push
xor
inc
mov
in
scas
jo
jl
jns
mov
xchg
iret
sub
pop
rcrl
inc
jo
dec
inc
and
and
jo
sub
stos
mov
cmp
sub
adc
cld
xor
mov
imul
jbe
cli
popf
in
call
or
mov
pop
mov
ss
test
das
je
sub
push
push
mov
out
data16
cld
shll
das
mov
and
inc
pusha
pop
xchg
rcrl
lea
pusha
rcll
push
jecxz
mov
push
notb
mov
push
iret
int
xchg
jl
cs
jo
dec
addl
push
mov
lret
inc
jno
adcl
pop
cmp
cmc
sub
repnz
add
jecxz
mov
push
notl
push
lret
adc
pushf
add
or
xchg
shll
push
fisubs
add
dec
stos
push
sahf
lahf
lods
ja
adc
jb
and
out
adcb
addr16
scas
xchg
add
jle
arpl
hlt
push
xor
sub
jo
insl
test
shrl
push
jge
jo
es
cmpsb
push
jp
out
cs
jb
adc
fs
add
sahf
xchg
fidivl
xchg
cld
cmp
popa
subl
pop
std
sub
inc
mov
xor
sbb
add
cmpsb
jo
sbb
lea
xchg
fdivs
roll
rolb
out
jo
or
in
ljmp
adc
and
lahf
stos
pop
dec
loop
inc
push
inc
jo
mov
inc
out
pop
xorb
std
int3
jge
pop
les
add
xor
fcoms
hlt
in
add
ret
fdivl
dec
int
jo
sub
cs
lea
mov
pop
out
jo
pop
fsubrp
adc
or
push
pushf
sarb
out
xchg
jo
adc
or
xchg
psrad
jae
icebp
dec
xor
inc
inc
jo
ds
sub
shl
cld
jo
icebp
rclb
inc
aam
aad
push
ret
cwtl
scas
inc
and
dec
test
dec
ds
mov
pop
addl
push
adc
nop
jo
pushf
push
repz
push
mov
orb
add
push
sub
adc
sub
inc
inc
or
lods
gs
add
sti
in
sbb
test
jo
xchg
dec
fs
scas
shll
adc
lea
dec
jo
je
sahf
inc
xchg
push
test
js
sbb
leave
xchg
jo
lea
outsb
or
sbb
test
cmp
mov
inc
rcrl
orl
out
xchg
bound
loope
and
xchg
andb
mov
push
in
cmp
loopne
add
push
dec
jmp
aas
inc
push
adc
sbb
call
xchg
loop
jo
xchg
movsl
pushf
lock
xor
test
pop
iret
sbbb
push
sbb
push
rclb
ret
sti
lock
jbe
outsb
sub
push
sbb
les
fs
mov
sub
inc
dec
lcall
dec
sub
leave
movb
push
jle
or
sbb
fmuls
pop
out
xor
jmp
rorb
add
xor
add
fnstenv
pop
mov
cmp
loope
out
mov
xor
je
jg
std
lock
dec
dec
pusha
dec
js
pushf
inc
mov
movsb
sbb
mov
sarb
mov
jmp
insb
mov
jo
xor
sub
jo
das
int
shrl
std
mov
lret
daa
sbb
es
rorb
mov
jo
or
sbb
loop
push
mov
jo
aad
loope
jge
jo
les
in
dec
cli
shll
and
jo
cmp
inc
mov
xor
ja
fnstcw
pusha
movsb
inc
jmp
out
ss
lds
sbb
or
test
xchg
fldenv
mov
pop
jo
add
scas
xlat
jne
inc
jo
push
inc
in
and
xor
icebp
gs
inc
icebp
pop
jo
aad
hlt
adc
xchg
pusha
jo
xor
nop
jle
jns
jge
push
lds
and
out
test
pop
lret
xchg
jo
hlt
dec
test
test
xor
xchg
bound
outsl
push
xor
xchg
sub
mov
ja
inc
in
sub
push
jo
pop
mov
int
mov
sbb
mov
insb
mov
jo
test
stos
mov
stos
jge
and
nop
pop
lock
fnsave
jo
pop
jns
dec
lds
jo
mov
mov
jg
clc
sub
pop
jp
jo
pop
cmp
jmp
rcr
push
sti
mov
push
leave
mov
and
js
dec
adc
jmp
hlt
imul
mulb
inc
xor
outsl
mov
nop
mov
xchg
ret
sbb
sub
cmpsb
xorl
xor
mov
fnsave
outsb
clc
test
repnz
dec
cmpsb
imul
jo
jle
inc
push
xchg
lds
cmc
adc
mov
repz
cltd
data16
or
xor
subb
push
adc
insb
jo
test
lock
and
adc
test
mov
imul
push
out
call
dec
jo
sub
fisubl
push
pop
jo
push
pop
lds
lret
inc
xchg
adc
sbb
daa
sbb
cmp
jo
and
ds
cli
test
jo
js
rcll
les
int3
je
out
mov
xchg
mov
lods
fstpl
xchg
xor
pop
pop
leave
jo
in
fwait
xor
cmpsl
add
add
sub
jno
xchg
aas
mov
push
mov
bound
enter
cltd
rorl
addr16
push
adc
loope
pop
add
mov
lock
enter
jo
aas
or
test
and
shlb
js
fnstcw
and
xor
aaa
bound
mov
push
sub
cld
in
jo
dec
lods
clc
fldcw
add
fisubl
jb
add
icebp
enter
jo
popf
hlt
adc
int
scas
jo
sar
sbb
fisttps
add
xor
popf
fucom
pinsrw
dec
icebp
sbb
mov
inc
or
pop
jo
cmp
push
cmp
add
loop
fsubrp
aaa
shr
jns
push
mov
inc
jbe
jo
dec
cmp
movsb
fst
pop
sub
mov
inc
scas
mov
icebp
sbb
adc
or
jge
cmp
xchg
jo
andb
jp
rorl
lret
scas
js
xlat
ret
repz
pop
xor
lds
mov
movsl
push
dec
movsb
subb
sub
xor
imul
enter
jo
mov
jg
push
addr16
rolb
shll
in
or
outsl
insl
inc
xorb
jp
movsb
or
flds
sbb
bswap
rep
aam
jo
mov
test
jo
add
cld
leave
cmp
sub
jo
les
lret
add
movsb
lds
push
repz
cmp
sub
pop
and
jge
bound
adc
nop
es
sarl
jp
sub
pop
aas
shr
pop
pop
jmp
hlt
mov
clc
not
jo
test
mov
leave
mov
aad
or
push
js
add
ja
aam
movsb
daa
or
aad
fs
rcll
mov
lahf
jmp
lret
cwtl
sub
les
lock
adc
jo
adc
push
insl
pop
cs
mov
xlat
cmp
jno
xchg
sbbb
psrlw
xor
jbe
ret
and
not
rcrl
push
hlt
ds
js
lds
fs
inc
and
dec
cmp
lret
add
nop
and
ja
fiaddl
xchg
add
lret
xor
cltd
dec
or
sub
test
push
sahf
xchg
jo
sub
add
xor
or
mov
inc
stc
xchg
ud2
jo
add
mov
jns
jo
shlb
jmp
ror
pop
pshufw
popa
push
jo
stos
sahf
in
jle
push
jo
das
shr
mov
call
sub
nop
and
ja
dec
push
iret
xor
and
cmp
jns
inc
and
fwait
add
mov
stos
imul
jo
iret
sbb
imul
push
sti
jo
push
push
lret
jp
jo
cmp
ret
out
ret
mov
add
xchg
ljmp
jo
lds
fs
scas
push
popf
xor
hlt
jo,pt
mov
std
jb
jo
sub
sbb
add
rolb
jno
icebp
sbb
jb
or
and
jo
sub
push
stos
inc
popf
les
jo
sub
mov
jo
movsl
xchg
inc
fisubs
or
sbb
and
jo
les
add
test
in
roll
xchg
in
fstpl
fs
push
stos
sub
jo
popf
mov
lret
mov
sub
pusha
xchg
das
cs
testb
dec
sub
lret
sub
cmp
call
cmp
sbb
sbb
xchg
adc
std
je
jo
fldl
xchg
call
mov
sbb
div
cmp
icebp
pop
loopne
mov
outsb
sbb
xor
mov
insb
mov
mov
jo
scas
xlat
out
std
pop
pop
jo
push
cld
loope
pusha
insb
jo
inc
sbb
or
out
scas
xor
and
push
sarb
jo
mov
ror
in
jo
mov
aad
jo
leave
mov
enter
pop
jle
sub
xor
aad
stc
mov
push
outsl
jo
mov
fld
jo
pop
ss
xchg
jmp
lahf
or
ret
add
cwtl
out
es
or
divl
sub
mov
jo
leave
and
lret
adc
test
mov
rcr
or
fmull
cltd
and
stos
punpckhdq
out
push
inc
xchg
xor
icebp
xchg
jo
inc
repnz
push
pop
xor
js
in
jo
call
xor
popa
stc
jo
leave
mov
mov
or
rcll
jno
ja
push
push
add
adc
lock
loop
xor
jo
sbb
push
pop
and
jo
mov
pop
mov
setl
mov
or
sbb
cmp
jo
aas
enter
je
jo
jmp
add
mov
pop
pop
mov
repz
push
lds
xchg
adc
jo
xchg
xchg
push
lods
std
xor
dec
insl
ret
adc
add
and
jmp
sub
rorl
dec
sahf
std
adc
xorl
sub
push
cmpsl
cwtl
jo
ret
adc
pop
ret
mov
fisttps
mov
mov
fcoml
jmp
mov
jae
stc
std
fs
mov
push
push
sub
insl
mov
stc
int
jo
test
jp
jo
shll
fnsave
mov
dec
sbb
sbb
pop
or
je
leave
cmc
push
pop
adc
push
adc
repz
cmp
test
add
cmpsl
push
mov
lret
gs
push
fcmovnb
in
lea
pop
pop
mov
sub
rcll
mov
mov
mov
mov
mov
ret
inc
or
cwtl
or
andl
out
out
test
jo
mov
mov
pusha
loopne
jge
jo
fcoml
mov
jo
lock
jmp
mov
sub
sbb
mov
jmp
mov
push
dec
adcl
cmc
jo
nop
fwait
dec
gs
leave
jmp
jnp
fistps
fidivrs
push
push
jo
rorl
push
jo
or
push
inc
aad
leave
js
push
jno
popf
jo
pushf
mov
xchg
mov
outsb
mov
es
pop
ss
cmp
push
add
mov
push
addr16
xor
cmpb
sub
ret
mov
pop
jno
loope
scas
jo
pop
into
ret
es
hlt
dec
in
push
or
cmc
pushf
cli
push
shll
sbb
aas
cmpps
out
mov
push
stos
sbb
fs
mov
and
ja
seto
js
cli
pop
jo
fldln2
push
mov
push
xorl
pop
sbb
stos
and
mov
push
mov
jg
rorl
xchg
jo
lahf
adc
ds
mov
mov
lods
jle
cwtl
jo
rcrl
jo
jecxz
mov
xchg
lds
cs
mov
push
repz
pop
jo
and
je
subb
mov
mov
jg
dec
sub
add
outsb
je
push
ljmp
insb
jb
jo
lret
inc
sarb
jo
arpl
insb
sbb
pop
lds
inc
jo
sahf
pushf
jge
testb
jo
mov
aad
jg
loope
mov
arpl
lret
mov
test
mov
inc
in
pop
add
dec
icebp
jmp
sbb
xor
int
and
cli
rcr
and
int
pmullw
ja
cmp
push
sub
lds
rorl
cltd
jo
xor
and
dec
and
fnsave
xchg
push
xchg
std
jne
jo
sub
add
in
shll
rcrb
dec
sbbb
add
psadbw
push
inc
xchg
pop
roll
sub
and
popf
lds
lcall
clc
insb
xor
nop
loopne
arpl
sbb
jne
sub
xchg
push
xorb
mov
push
imul
repnz
leave
jo
mov
pop
das
loope
jb
or
lds
jo
dec
jmp
xchg
add
fs
adc
cmp
jg
incb
jo
jne
icebp
push
pop
mov
sub
fs
nop
rcrl
ja
out
push
jo
mov
pop
aas
or
pop
shlb
cmp
test
orl
ficomps
jno
and
mov
sub
sbb
push
repz
loope,pt
shlb
pop
daa
xchg
shrb
xchg
out
gs
imul
or
stos
mov
mov
xchg
inc
shlb
lret
mov
nop
xchg
push
mov
js
push
lods
int3
aaa
pop
int3
jo
mov
clc
in
cmp
inc
lods
mov
addr16
ljmp
pop
lahf
iret
std
scas
sbb
repz
jo
cmp
mov
sbbb
ds
fs
push
scas
stos
mov
das
push
mov
hlt
pop
mov
jmp
sub
cmp
xchg
sbb
dec
inc
cli
lods
mov
add
into
insl
adc
add
jo
shl
idivb
and
jnp
fdivs
mov
push
leave
and
roll
add
jo
mov
fcomi
jo
mov
jo
loopne
pop
inc
movsl
mov
sub
in
push
js
out
fsubrl
adc
gs
push
notb
aam
dec
daa
filds
jg
jae
scas
inc
pop
cwtl
add
hlt
popf
mov
fsubrs
mov
or
bound
nop
push
mov
ja
dec
nop
inc
arpl
mov
sub
push
pop
fs
rcrl
xchg
cli
mov
addr16
sbb
jns
push
jo
shrl
mov
inc
int
jl
jo
xchg
push
ret
dec
jb
lods
lock
outsb
xor
mov
lret
add
jo
jne
xor
mov
clc
lds
mov
sbb
xor
and
dec
pushf
cmc
xor
hlt
jo
popa
sahf
lret
add
movsb
nop
pop
push
test
xchg
lcall
jns
in
jo
ds
sarl
shll
push
scas
dec
jp
out
jo
add
fs
mulb
adc
ret
inc
hlt
int3
andl
jo
test
push
stos
xchg
outsl
in
push
mov
sub
fbstp
push
rcrl
sub
cli
xchg
sbb
js
shll
add
cmc
jo
inc
xor
push
sub
out
stos
add
mov
mov
adc
mov
icebp
test
or
dec
jo
ret
scas
cmc
jbe
or
ret
add
scas
dec
cmpsb
fwait
jo
repz
es
dec
jns
cmp
and
jo
pop
xchg
es
jo
mov
mov
jno
jle
loope
jmp
clc
addb
jo
test
cmc
in
out
sub
cli
push
je
pop
xor
add
mov
jnp
inc
data16
and
js
jecxz
dec
hlt
dec
loop
sub
dec
dec
and
add
rcrl
lds
jo
int
mov
adc
jo
cmc
and
pop
ljmp
xchg
insb
or
loopne
dec
lods
pop
fs
out
bound
sub
jmp
push
rcr
jge
mov
mov
push
call
fsts
jo
push
adc
in
addr16
and
mov
inc
jle
and
scas
pop
mov
fdivl
loope
lret
xchg
adc
stos
push
cs
andb
cmpsl
repz
imul
adc
jle
jo
xor
movsb
jns
repz
iret
pushf
test
push
int3
les
pop
sbb
jo,pt
xchg
test
xrstor
sbb
xchg
mov
pushf
jbe
cwtd
xor
jo
lea
roll
lods
jl
gs
jo
test
cmp
das
jg
push
xor
jo
sub
imul
icebp
dec
in
jo
lcall
nop
push
pusha
movsl
jle
loop
and
std
cmpl
xor
jo
leave
sub
add
fnsave
xor
dec
sti
imul
nop
pop
loope
insl
inc
cmpl
jp
jo
nop
push
iret
pop
sub
xchg
push
adc
sbb
mov
out
xor
fsts
lret
sbb
lret
repz
jl
test
shl
movl
loope
push
cmc
fs
push
pop
xor
push
inc
mov
and
sub
insb
adc
insb
sbb
xor
pmovmskb
or
mov
mov
jge
rclb
subl
out
lock
pop
jmp
jno
xor
mov
leave
jo
fmull
fwait
mov
sbb
jne
and
shll
rol
add
cld
iret
cmp
cli
xlat
mov
jae
pop
lock
mov
fisubl
cwtl
adc
ret
jge
jo
fcoms
mov
push
pop
bound
loope
jo
fistpl
adc
jb
mov
jp
mov
pop
daa
int
bound
ja
cmp
loopne
jb
mov
push
inc
cwtl
jmp
sahf
enter
mov
std
sub
fs
cmp
aas
push
push
out
adc
mov
lods
jo
test
unpcklps
mov
dec
subb
cmpsb
xchg
mov
nop
add
jb
pop
das
ud2
fstpt
xchg
jle
test
stos
cmpps
mov
push
mov
addr16
pop
aas
push
bound
mov
jo
mov
bound
test
push
das
jp
jo
loop
inc
mov
leave
jo
cmpsl
sbb
jb
mov
inc
push
mov
xchg
push
jg
fs
cs
jo
lods
push
or
out
jo
adc
leave
inc
xchg
jo,pn
das
divl
or
cmpb
sbb
jns
sub
loop
and
insb
cmpb
xlat
nop
push
mov
jns
leave
stos
cs
sti
add
fsin
and
mov
or
out
mov
jp
stos
and
xor
repz
idivb
mov
push
ficompl
cmp
dec
sahf
aad
out
lret
mov
int
sbb
sbb
inc
pop
pop
imul
loopne
or
sub
or
sbb
push
xchg
clc
pxor
aaa
int
rclb
js
out
jl
notb
push
stc
pop
add
shll
bound
sub
dec
xchg
and
and
ret
enter
aad
fbld
es
pshufw
jae
lahf
hlt
sbbb
mov
jo
sarl
inc
test
bnd
movsl
jl
push
jo
push
cmp
mov
gs
adc
adc
mov
in
scas
mov
test
mov
jo
cmpw
mov
aam
dec
add
int
lcall
inc
cli
pop
inc
sub
xchg
ret
hlt
sbb
and
mov
fs
icebp
adc
xchg
ret
jo
loop
mov
es
mov
fnstsw
xor
lods
lcall
jg
mov
mulb
in
nop
pusha
movsb
icebp
outsl
mov
cmc
jo
loope
lret
jge
jo
out
fcmove
mov
sbb
hlt
jg
stos
stc
sbb
scas
pop
jecxz
push
push
mov
push
jge
lcall
dec
and
mul
mov
add
sub
xchg
jo
sub
movsb
nop
xor
inc
fs
loope
data16
cs
jo
push
clc
or
and
push
push
fucom
shl
jle
nop
negl
imul
mov
out
push
movsl
enter
jno
scas
inc
jecxz
push
pusha
out
bound
push
mov
sbb
inc
adc
add
or
lahf
rcr
and
jo
andl
repz
jo
mov
pop
pusha
test
fstl
push
add
jo
pop
into
or
adc
cmc
gs
js
add
and
ja
fidivrs
sbb
rol
ret
jmp
psrld
in
push
insl
rcr
bound
lcall
stos
push
test
pop
mov
gs
mov
or
cld
je
push
or
jge
mov
jle
bound
mov
jns
lods
pushf
shrb
test
mov
xchg
in
or
add
aaa
mov
sub
jo
jmp
sub
test
test
in
das
push
icebp
jbe
fwait
sub
loop
cmp
aam
and
mov
mov
inc
scas
mov
roll
jo
je
out
lds
ret
testl
std
orl
lret
sbb
mov
stc
cmp
mov
outsl
cmpsb
jo
xchg
or
mov
cmp
popf
hlt
outsb
jo
repnz
inc
data16
cmp
push
lock
insb
cld
cmp
xchg
pop
sub
inc
jo
imul
jo
fcmovnb
jno
inc
popf
dec
jo
in
xchg
das
iret
push
stc
rcrb
bound
lret
push
nop
cwtl
jne
push
jne
xchg
jo
rol
call
jo
shrb
lret
sbb
sbb
icebp
movsl
es
xchg
int
popa
fs
pop
inc
jb
push
jo
aas
and
ss
shll
fdivs
pop
lock
js
mov
cmpsl
aaa
jo
push
shlb
xchg
cs
mov
mov
push
addr16
dec
sti
jo
xchg
jnp
pop
xor
jo
pusha
lea
lds
fidivl
sub
scas
call
jo
cmp
xchg
pop
jmp
mov
jno
stos
and
pop
je
sbb
test
mov
push
or
les
aad
into
shr
and
jnp
das
mov
popf
push
add
mov
fidivl
ss
inc
out
jne
fstps
insb
cli
mov
push
mov
fdivrp
in
sub
shl
adc
repz
add
adc
jo
or
mov
fsubrl
icebp
leave
popf
push
das
in
out
inc
in
sub
push
popa
mov
mov
inc
xchg
pop
cmp
std
sbb
ret
imul
int
lahf
or
adcb
rorl
fidivl
sbb
pushf
push
jg
mov
loop
inc
mov
and
fdivs
pop
in
insb
add
fs
cmp
leave
pop
jo
int
out
in
insb
add
push
scas
add
shrl
jo
jmp
xchg
jge
or
and
pop
inc
in
call
add
pop
daa
adc
mov
push
inc
lahf
cmp
rorl
mov
fs
dec
lea
or
int
pop
xchg
and
bound
sub
js
inc
jb
add
inc
and
mov
inc
mov
jo
loope
mov
ret
lahf
jo
push
xchg
call
push
add
push
gs
push
aad
or
jo
insl
pop
ret
lea
mov
jo
or
sub
jecxz
decb
aad
mov
lods
test
jbe
adc
push
jo
xchg
jecxz
lret
mov
jmp
leave
cli
adc
nop
sbb
rcll
call
sub
stos
sub
mov
sub
lock
jo
into
inc
rcll
cmp
mov
or
fildll
std
jo
mov
loopne
inc
add
pop
stos
jle
and
popa
mov
je
xor
loop
jle
jo
out
icebp
popf
xor
adc
jb
je
mov
punpckhdq
sbbb
les
pop
xchg
int
lahf
push
subb
ret
jl
enter
pop
mov
stos
push
pop
mov
insb
push
sahf
push
jno
sub
scas
mov
fildl
into
jne
push
data16
int
or
and
fcoms
rcr
jo
int3
leave
ja
adc
orl
aam
nop
fdivrs
aam
or
pop
cmp
jno
xor
dec
fwait
scas
inc
dec
jo
adc
popf
push
mov
jnp
add
inc
jg
cltd
xchg
shlb
aad
xchg
in
pop
xchg
jo
pop
jecxz
push
jmp
in
fnstcw
in
cmp
pop
bnd
add
mov
jp
out
ret
mov
pop
lds
pop
scas
mov
mov
fs
cs
insl
fistl
sub
and
pop
jnp
out
je
add
cmp
jno
frstor
push
in
xchg
insl
insb
inc
imul
dec
xchg
loope
mov
sub
test
leave
mov
fidivrl
jecxz
clc
in
hlt
xor
mov
loope
jo
inc
jno
add
sbb
lds
outsb
cmp
roll
stos
or
mov
ljmp
imul
call
inc
pop
cmp
arpl
xor
sbb
mov
adc
or
inc
lods
shlb
fstp
inc
popa
jae
xchg
jo
cltd
lds
andb
movsl
icebp
imul
inc
js
cli
sub
and
dec
xor
int
jmp
js
loope
jmp
je
cmp
jo
out
xor
xchg
icebp
jae
test
jne
jns
jmp
inc
ret
fisubrs
adc
shlb
jo
iret
xor
stc
jo
das
sbb
add
adc
arpl
add
popf
daa
jo
xchg
or
xor
gs
jo
sub
mov
or
test
add
sub
loop
add
sub
jo
aad
inc
dec
ret
mov
je
in
xlat
pushf
scas
inc
adc
mov
cwtl
sbb
mov
bound
mov
fsubrl
lea
dec
imul
aad
add
out
mov
fcmovu
testl
ret
dec
push
filds
je
mov
leave
mov
sbbb
lds
add
shrl
rorb
int
pop
mov
fstpl
jo
and
pop
js
add
push
call
shll
jae
cli
inc
bound
sub
push
or
mov
fidivrs
sahf
jo
push
testl
mov
inc
sub
js
sub
nop
mov
ss
aam
ja
sbb
rcrb
cmp
jo
cmpsb
add
nop
jns
or
adc
ror
jo
int3
inc
or
movsb
sub
pushf
mov
clc
aaa
rcll
fbstp
push
sbb
je
mov
xor
sbb
testb
xor
push
ds
jge
ljmp
push
jo
lods
xchg
jecxz
sub
jo
jnp
popa
into
cmc
inc
cmp
ss
lds
cltd
jbe
push
jo
sbb
inc
pushf
jo
sahf
ret
pusha
cmp
jo
or
cmpsl
sub
mov
shr
mov
subl
dec
call
dec
lcall
stos
cmp
insb
shl
cmpb
jp
test
rorb
addr16
push
jo
push
jle
jne
fldt
jo
sub
leave
xor
or
xor
adc
decl
rclb
pushf
push
jbe
mov
jo
lea
lds
nop
fwait
iret
into
lret
mov
mov
arpl
fs
xor
ret
push
xor
inc
and
jle
jo
adc
or
sub
lret
mov
iret
dec
push
push
fs
das
shlb
push
in
mov
sub
cs
adc
mul
stos
icebp
loope
push
xchg
jb
ret
lock
repnz
jge
jo
add
xlat
mov
xor
push
mov
jmp
mov
sub
mov
jo
ja
xor
jo
and
aad
push
cmp
and
aas
sbb
std
fdivrs
add
in
xor
loopne
add
jo
leave
ds
jge
sbb
mov
nop
lods
ljmp
fwait
sarb
int
and
xchg
ret
ss
out
sbb
lds
lret
bnd
int
inc
push
xor
jo
nop
push
dec
mov
shll
pushl
sbb
xor
and
imul
es
lock
dec
pop
jmp
arpl
repnz
adc
inc
repz
xchg
push
mov
fbstp
xor
stos
imul
mov
loope
mov
dec
cmp
cs
push
sbb
jle
mov
clc
push
push
cmp
aas
insb
push
xchg
inc
adc
jo
and
int
mov
cli
sbb
push
adc
jle
mov
out
mov
xchg
jo
idivb
nop
lret
int3
cmp
adc
or
add
mov
pop
jo
lock
das
jmp
movsb
out
cs
lock
sbb
mov
xchg
movsb
add
pop
repnz
jo
xlat
arpl
push
sub
icebp
iret
sbb
inc
bound
mov
mov
sbb
mov
movsl
shrb
jo
ds
int
ucomiss
mov
dec
mov
fisubrl
inc
stc
jo
sarb
repnz
mov
call
jo
aad
and
les
sbb
add
jo
sub
iret
dec
xchg
mov
aas
shlb
push
pop
adc
lret
hlt
dec
jo
pcmpgtb
jo
sub
jg
outsl
xchg
pop
insl
mov
repnz
xor
or
jg
cmpb
xor
or
jbe
lock
dec
push
es
pusha
mov
jno
push
in
sub
push
push
outsb
mov
push
fistpll
test
test
leave
popa
adc
in
imul
mov
sub
jo
jp
loope
popf
or
xor
inc
sbb
sar
int3
jo
add
test
out
xchg
dec
mov
xchg
lret
push
push
lods
ds
mov
hlt
das
jnp
imul
pop
jo
repnz
ret
push
roll
out
push
loop
outsb
mov
jne
or
js
lds
out
scas
jmp
cmp
xor
mov
icebp
inc
add
jge
lock
or
les
jo
jno
jl
push
ror
arpl
ss
mov
push
mov
int3
push
jo
xchg
into
adc
call
add
sbb
out
mov
or
xchg
js
mov
sub
push
jo
mov
xorl
jno
mov
mov
xchg
jo
lds
pop
jmp
test
sub
mov
cmp
mov
dec
xchg
mov
xor
and
sbb
push
xor
dec
mov
pop
lea
xor
mov
add
lret
lds
sub
cmp
into
in
sub
jo
cvtps2pi
cmp
cmc
jo
add
rcrl
xchg
and
cwtl
loop
leave
call
xchg
ret
cltd
jae
jmp
add
jg
inc
push
jno
xchg
pop
push
aaa
mov
out
daa
inc
jo
xchg
cmpsl
shl
sbb
test
push
pop
js
stos
dec
dec
mov
notl
jp
es
sbb
hlt
lret
add
addb
mov
fiaddl
dec
inc
loop
fwait
xor
leave
jo
adc
repnz
daa
ja
push
push
and
mov
pop
jb
sub
jo
xlat
leave
sub
dec
add
pop
shr
add
out
aad
pushf
test
andb
push
mov
push
add
leave
mov
popa
in
push
bnd
loop
hlt
roll
and
push
clc
inc
ljmp
movsb
sbb
jo
inc
bound
fistpll
mov
int
cmp
push
ret
push
lret
adc
pop
mov
jo
and
cmpsl
and
sbb
mov
popf
lret
and
pop
push
xor
out
les
mov
jo
andl
adc
hlt
sbb
mov
bound
sarl
push
cmp
jo
pop
sti
fdivr
xor
bound
inc
push
jo
loop
mov
enter
jle
insb
lds
pop
xchg
les
movsl
xchg
xchg
jb
cmc
pop
or
ja
stos
add
ja
shll
pusha
mov
dec
mov
sbbb
push
xchg
nop
jo
bound
loopne
cmp
push
subb
jo
es
sbb
jno
loope
ret
or
add
nop
icebp
je
ret
jo
push
sbb
ret
xchg
popa
inc
jo
add
lea
fbstp
enter
addb
push
aad
std
sub
cmp
cmc
sub
adc
mov
sahf
add
fwait
in
add
jge
cmpsb
arpl
imul
or
jo
mov
xchg
jge
pushf
fiadds
shlb
xor
sbb
scas
xchg
popf
add
hlt
loope
jo
fdivrl
test
sub
push
jo
push
pusha
jns
jae
shll
add
sbb
nop
mov
xor
cmp
imul
nop
xlat
or
jmp
and
inc
loope
sub
cmp
js
mov
fs
rclb
pusha
cmp
rcrl
adc
loop
je
xchg
shlb
inc
jmp
pop
jo
push
push
lds
adc
int
jo
icebp
dec
movnti
xor
jo
pop
imul
push
and
jno
jo
add
leave
stos
sub
and
stos
mov
pop
jo
loop
xchg
pop
mov
das
xchg
push
andb
clc
addb
sarb
nop
sub
push
js
xor
dec
cwtl
jecxz
mov
fistpll
xor
ret
imul
pop
bound
jo
push
xor
aas
sub
pushl
fwait
addr16
cld
outsl
inc
icebp
jo
lds
loop
pop
into
ljmp
jecxz
shl
push
fisubs
das
insb
incl
nop
shlb
test
adc
jo
cld
push
ret
cs
jo
dec
lock
pop
push
nop
lea
push
jmp
mov
loope
pop
adcb
scas
aad
or
cs
dec
data16
insb
sub
jo
shlb
jo
aaa
mov
pop
jo
mov
cmp
clc
push
pusha
ret
dec
push
gs
lds
jo
pop
inc
pop
jb
fbstp
std
ja
gs
mov
nop
jne
jp
add
jo
test
outsb
shlb
in
js
add
popf
dec
shll
mov
lods
dec
jo
movsl
pop
add
jns
pshufw
test
add
xor
out
fidivs
popa
mov
insb
mov
inc
jmp
in
or
cwtl
push
or
movsb
xchg
imul
mov
mov
in
and
xlat
pop
jp
out
lret
loope
fs
jo
mov
sti
and
les
rsqrtps
cmp
xor
sub
subb
jl
lret
fs
fadd
rcrb
mov
aaa
lea
push
mov
jecxz
hlt
sbb
dec
pmaxsw
or
addr16
sti
mov
mov
and
push
pushf
jo
jb
mov
std
pop
pop
push
push
mov
les
nop
cmp
adc
ja
push
shlb
jecxz
cmpsl
and
stc
or
into
ret
aam
xchg
outsl
jo
test
xchg
inc
cmp
xor
adc
push
repnz
rolb
es
shlb
in
or
jo
loop
cmpsb
daa
pushf
int
rolb
push
adc
jo
ret
mov
repnz
jmp
jo
in
out
push
mov
add
mov
dec
jo
aas
lret
inc
enter
sub
add
jo
push
jmp
mov
clc
add
jo
sbb
shl
jb
ror
cli
pop
mov
cs
mov
push
xchg
sbb
push
cmpsb
movsb
jl
mov
stos
sub
out
jle
in
push
enter
cmp
add
mov
jo
call
popa
shll
and
push
sub
fmuls
sbb
bound
sub
push
pop
int
loope
fs
or
jnp
lods
mov
mov
xor
mov
or
cmp
shrl
dec
jo
mov
pop
lds
in
or
xchg
cmp
lcall
or
pop
xor
dec
fwait
dec
xchg
hlt
rorl
xchg
add
cmp
hlt
lret
mov
enter
jnp
nop
test
pop
jb
xchg
jns
inc
mov
leave
sbb
push
pop
bound
int
testl
mov
pop
add
mov
xor
mov
ret
jnp
inc
jp
mov
cmpsl
test
subb
sbb
adc
ret
pop
jle
loope
mov
stos
inc
mov
insl
into
pop
repz
nop
outsb
popf
fsubrl
push
shrl
js
push
dec
xor
jno
js
mov
outsl
push
cmpsb
ja
jg
sub
stos
mov
mov
inc
int
jo
and
push
sbb
scas
js
xor
popf
hlt
or
lods
jo
sahf
xchg
in
push
xchg
stos
inc
jo
testb
jnp
jo
arpl
add
ss
leave
jae
aas
and
test
imul
jg
pop
xchg
sub
mov
movsb
push
xchg
xchg
inc
out
jo
mov
adc
jp
roll
ret
sbb
push
jo
dec
rolb
adc
mov
jo
push
and
sahf
push
lcall
js
dec
jo
pop
sub
call
lds
xor
jo
icebp
xor
push
sub
popa
inc
sti
mov
ret
inc
loop
sbb
sbb
into
hlt
lret
orl
jo
mov
mov
add
nop
ljmp
push
xor
fs
xchg
shlb
fnstenv
sub
xchg
or
and
shlb
push
mov
cmpsb
jbe
test
cmp
aas
loope
bound
jo
ret
cltd
outsl
lods
lds
inc
sub
jle
push
nop
sbb
add
int
bound
cli
jo
into
in
inc
fistl
dec
and
adc
bound
xchg
push
add
cwtl
push
scas
les
adcb
jg
arpl
add
divl
dec
xchg
cld
xor
inc
jo
scas
jle
imul
mov
sar
lahf
jl
iret
cmp
jo
enter
sbbb
mov
shlb
sbbl
outsb
scas
mov
jo
push
cmp
jo
jne
std
add
add
or
and
add
lds
mov
mov
outsl
mov
movsb
jle
and
push
push
xchg
pop
out
insb
scas
adc
rclb
addr16
adc
pop
lret
cld
and
sbb
std
jo
cmpsb
popf
cwtl
inc
xchg
inc
das
out
mov
cltd
xchg
pop
test
mov
mov
sbb
fisttpll
lcall
xor
ja
inc
out
jo
adc
fdivs
sub
test
daa
nop
adc
add
out
gs
shrl
mov
push
jns
cmp
lds
add
loopne
xorb
rcll
add
xlat
inc
fdivrs
aas
mov
jne
jle
lret
push
mov
fdivrl
insb
push
lock
mov
outsb
js
xchg
pop
jmp
gs
cmp
mov
sarb
push
ret
lods
cld
pop
jo
imul
outsl
gs
jle
push
mov
repnz
and
nop
adc
daa
je
in
std
das
push
dec
aam
xor
jo
cmp
incb
xchg
ja
sub
shl
inc
mov
mov
and
adc
data16
insl
nop
pop
jo
std
mov
jo
cmp
cmp
add
add
or
or
in
stc
icebp
push
mov
jo
jb
pop
push
stos
inc
jo
shr
lds
call
pusha
mov
jo
push
mov
xchg
adc
inc
addr16
jo
leave
jmp
add
aaa
push
rolb
aas
insb
cmp
jo
std
lret
repz
shll
scas
loopne
mov
mov
add
das
lret
test
repz
fnstenv
enter
pop
imul
mov
aaa
loop
fidivrs
ljmp
push
outsb
test
push
mov
out
pop
bound
or
pop
push
jo
ljmp
push
sbb
sbb
lock
cmp
je
xor
repnz
push
in
mov
leave
jo
sbb
mov
jo
jbe
push
sub
das
movl
pop
jo
mov
int3
hlt
punpckldq
mov
xor
icebp
jo
data16
xor
jo
aad
push
push
adc
or
ljmp
testl
out
jp
test
dec
fs
leave
jo
fcoml
jns
mov
inc
mov
add
xchg
sub
pop
jo
cwtl
sub
xor
jo
jge
mov
jbe
je
jo
outsb
test
inc
xor
jo
push
add
sub
jo
nopl
add
int3
daa
xor
jo
ret
nop
cli
cmpsb
xchg
mov
mov
dec
negb
mov
lods
in
fstpt
jo
jbe
or
cmpsb
scas
jo
sub
ret
or
dec
jo
mov
out
stc
lds
scas
mov
das
jo
out
mov
pop
lds
push
mov
shr
and
pop
mov
test
fistpll
mov
pop
rol
xchg
jo
pusha
cltd
popa
pop
xchg
ret
adc
push
dec
cmpsb
dec
pushf
mov
push
aaa
fs
or
nop
dec
push
sti
xor
ja
fnstsw
sbb
jo
jnp
ror
jmp
pop
or
adc
adc
sub
test
jge
jle
subl
fbstp
out
int3
inc
mov
aas
cmpsl
sbb
fs
sub
jo
adc
call
and
stos
aad
inc
nop
ljmp
imul
jo
and
fstpl
sbb
int
push
fs
ss
lods
movsb
test
popa
clc
jo
jae
sahf
stos
addr16
aad
xor
inc
js
lds
and
adc
out
jo
stos
push
inc
jns
push
cmp
mov
cli
arpl
jo
nop
inc
add
fsubs
push
loop
aad
jo
ror
sub
xchg
mov
xchg
sbb
pop
mov
sub
push
dec
je
inc
mov
xchg
idivl
imul
sub
jno
jo
sahf
fnsave
mull
ret
and
jo
mov
sub
jo
lods
stos
imul
jnp
nop
push
js
jle
cltd
lret
jl
cmp
add
jo
orb
lahf
ret
nop
pop
loope
mov
push
inc
jo
push
or
imul
mov
int3
adc
nop
ja
in
cmp
and
repz
jmp
jae
mov
mov
xchg
dec
stos
jno
pop
popf
jo
mov
loope
jge
mov
xchg
pusha
inc
and
insb
mov
jo
je
mov
in
enter
xor
paddsb
jo
loopne
out
mov
ret
xlat
out
icebp
lods
shrb
loop
fisttpl
mov
mov
inc
jns
stc
ret
out
orb
pop
clc
jo
fs
xorl
in
push
inc
inc
loope
xchg
jo
daa
lds
push
stc
sub
icebp
or
enter
nop
add
imull
jo
mov
push
into
jge
nop
outsb
cmpps
jg
pop
xchg
mov
idiv
int3
adc
and
nop
pop
mov
lods
and
jo
xlat
inc
mov
into
jo
jnp
xor
cmp
jge
jbe
aam
clc
ja
mov
loopne
dec
jle
imul
cmc
leave
dec
out
out
int3
or
adc
nop
repz
mov
cmpb
mov
xchg
add
ret
cmc
js
xor
je
into
rcrb
xor
dec
jecxz
inc
sub
xchg
outsb
cmp
imulb
call
inc
les
addl
daa
jp
out
xor
test
mov
addr16
fists
xchg
testb
adc
icebp
push
ds
leave
andb
std
lret
fwait
and
std
jo
mov
mov
push
test
dec
inc
cmpsl
adc
icebp
inc
std
jo
in
add
lock
adc
jns
ret
test
out
out
leave
scas
add
les
and
jbe
push
sbbl
jb
outsl
nop
xor
xorl
imul
lds
add
call
jb
outsb
sti
ret
in
or
mov
xchg
mov
sbb
mov
cli
hlt
sub
mov
scas
mov
lds
lock
cli
adc
inc
push
scas
sub
push
sub
add
jo
inc
push
ss
fnsave
std
out
stos
lea
nop
add
jnp
popf
dec
cs
lea
jae
add
mov
fnsave
popf
shll
push
push
shll
out
add
sub
mov
mov
out
xchg
jb
lea
je
cld
lods
jo
xor
leave
inc
in
mov
cmp
add
jne
bound
dec
xchg
dec
emms
and
mov
push
xlat
int
mov
aam
pusha
mov
fs
sbb
cmp
push
xor
add
mov
sub
imul
push
inc
sahf
push
popf
xchg
sub
jo
dec
std
shlb
jb
jo
sbb
or
cmp
arpl
jge
push
adc
jbe
cmp
shlb
jo
xor
push
add
jo
stc
loopne
daa
cmp
push
int
fsubp
or
sbb
shll
jo
dec
leave
sahf
fimuls
xchg
lds
movsb
lret
mov
iret
or
imul
adc
insb
sbb
mov
add
cld
int
pop
mov
mov
jo
mov
cmpl
or
push
xchg
sahf
jo
xchg
roll
mov
jo
pusha
lds
inc
ja
into
sub
and
jo
adc
insl
leave
movsb
pop
mov
jo
shll
adc
jo
gs
in
jo
xchg
cwtl
out
push
and
bound
jno
fdivp
js
test
mulb
and
leave
in
sub
inc
test
add
cmpsb
dec
xchg
pop
scas
push
mov
push
jnp
mov
idivb
cmpsl
push
jo
sbb
aam
repz
push
fbld
add
insl
add
push
mov
popf
sti
cmpsb
sbb
lods
imul
dec
jo
loope
popa
or
inc
jb
dec
mov
jo
jge
mov
adc
adc
shlb
iret
outsl
scas
add
mov
je
faddl
rol
into
icebp
sub
jnp
fiadds
mov
lds
xorb
idivl
push
sub
jo,pn
test
inc
sahf
sbb
pop
mov
jo
inc
nop
cli
adc
cmp
aas
mov
sarb
or
cltd
pusha
and
lcall
mov
push
scas
addr16
and
cmp
mov
jo
cmp
daa
fs
push
push
outsl
pop
xchg
fwait
mov
sti
test
lods
jb
and
sub
fsts
ret
and
sub
aas
rcll
out
add
pop
jo
pop
sub
cmp
inc
lds
push
scas
xchg
roll
add
xor
inc
sub
leave
jb
jo
push
nop
and
or
stc
and
mov
mov
cmp
stc
adc
hlt
aad
fnstenv
je
jo
ret
inc
into
leave
add
mov
les
ret
insl
adc
cmp
pop
jmp
enter
jo
push
ret
fldt
mov
cmp
cmc
push
in
loopne
push
jle
jg
jge
jae
mov
orl
cmp
mov
ret
js
and
push
fwait
imul
js
test
add
std
jo
icebp
das
imul
push
aad
mov
and
psrad
stos
sub
adc
rorl
mov
mov
or
sub
sub
xlat
push
jo
add
xchg
dec
and
shl
jmp
imul
push
and
cmp
pop
push
loope
roll
out
cmp
in
lea
inc
outsb
jle
jge
jo
jae
gs
cmp
mov
andl
lret
inc
dec
or
push
daa
call
sbb
sbb
loop
inc
jo
sar
lds
jo
push
shrb
int
nop
cmp
ret
jl
push
pop
push
shl
or
into
adc
inc
add
mov
out
icebp
popf
inc
jb
stos
in
cmp
mov
jl
sahf
ret
jo
push
clc
add
sarb
rcrl
add
xchg
cmpsl
cmp
jbe
xchg
pop
das
mov
jle
jo
mov
lds
mov
pop
inc
xor
ret
jo
lods
mov
xor
sbb
mov
out
insb
dec
addl
ds
jge
xorb
les
lret
jp
rol
mov
out
jo
popa
scas
sahf
push
in
cmp
adc
jo
dec
loopne
shrl
xchg
jo
lds
movb
push
jo
adc
mov
std
fisubrs
inc
scas
mov
data16
int
pop
orl
dec
in
inc
ja
dec
es
cmp
jo
popa
push
mov
add
lds
fcmovne
jo
movsb
sbb
jo
loop
sub
cmp
js
fwait
mov
in
and
repnz
sbb
mov
mov
xorb
lcall
add
jle
inc
mov
jo
lds
les
jae
mov
lods
xor
jecxz
shll
ret
push
aaa
jne
cs
xchg
mov
mov
mov
addb
jle
lea
push
ret
xchg
jo
das
push
rcll
lods
js
xchg
inc
xor
fidivl
les
std
mov
adc
jg
push
pop
add
add
cltd
hlt
jp
add
jo
and
int
push
cmp
fstpt
out
shl
lds
dec
jo
test
mov
insl
jo
fwait
push
sbb
sbb
sbb
fs
lahf
movsb
jo
filds
add
aad
dec
pop
add
js
sahf
add
mov
cmpb
pop
jo
imul
mov
adc
js
jo
and
lds
sub
mov
and
jo
ljmp
jo
rcrb
cwtl
jo
test
cli
cmp
jl
clc
sbb
push
and
paddw
iret
adc
outsb
cmp
add
jo
sti
mov
and
jo
movsl
or
daa
stos
loope
mov
icebp
movsb
ja
pop
je
xlat
mov
in
aas
test
sahf
mov
flds
inc
outsb
out
mov
sbb
mov
into
jo
das
cld
icebp
mov
ret
in
dec
jg
dec
jo
adc
daa
test
inc
cmp
fscale
sahf
call
cli
movsb
inc
jbe
orb
sub
xchg
gs
jb
cmc
push
pop
pop
lcall
or
xor
xchg
push
jo
fcmovnb
jmp
jo
je
addr16
orb
int
inc
int3
cltd
xor
mov
cmpsl
mov
subl
mov
cmp
cld
jo
push
iret
data16
add
pop
jo
mov
fcomi
jo
mov
je
mov
insb
mov
call
iret
cmp
xor
enter
aas
cwtl
mov
cmp
test
repnz
ret
daa
dec
test
nop
inc
push
sub
cmova
adc
push
or
test
call
clc
jbe
jo
mov
das
inc
xchg
dec
cmc
mov
sbb
or
loop
ror
sti
sub
nop
inc
mov
jo
out
sub
les
aaa
mov
ffree
lea
jne
outsl
jo
add
push
push
int3
jo
loop
inc
mov
mov
js
pop
loopne
jno
push
les
push
push
btc
mov
and
and
cs
in
jo
jbe
fildl
jo
aaa
lret
inc
and
push
jg
insb
push
scas
iret
xor
daa
popa
cmp
fcomps
mov
xchg
jo
jge
in
shr
out
mov
arpl
int3
jo
pop
adc
push
insl
dec
mov
jb
xchg
jo
xor
vdivss
mov
xchg
sbbb
and
fucom
jmp
jo
test
ljmp
adcb
or
aad
mov
adcl
iret
xor
xorb
nop
or
jb
sbb
int
push
leave
adc
sub
mov
test
push
push
push
sub
sub
repnz
cltd
int
push
jo
push
and
sahf
inc
and
lds
cmpsl
nop
rorl
push
scas
in
xlat
dec
fnstenv
cmp
jle
lods
fadd
jg
repz
mov
gs
out
dec
jo
popa
mov
mov
xor
push
push
sub
hlt
aas
mov
ja
adc
lds
mov
pop
aad
add
aaa
inc
sbb
inc
call
insb
pop
ucomiss
insb
mov
cld
jle
jo
stos
mov
bound
loope
mov
punpckhwd
xor
js
sub
enter
repnz
or
je
jo
adcb
jo
jecxz
xchg
inc
mov
or
orl
pop
gs
adc
popa
xor
mov
mov
jae
cmp
xor
in
lcall
jecxz
insl
std
inc
fcomip
sbb
jo
pop
sbb
leave
adc
mov
or
xchg
xor
xor
mov
inc
sub
jg
cwtl
mov
xor
mov
fnstsw
jo
jbe
mov
int
jle
jecxz
repz
subb
pop
imul
repz
pop
jno
jecxz
mov
stos
cs
mov
insb
data16
iret
shrb
xor
or
aas
popa
push
jno
dec
es
adc
mov
xor
movb
push
fnop
imul
sub
sbb
movsl
aaa
jo
jno
fs
aad
and
sti
sbb
xor
adc
jp
stc
jo
inc
add
repz
out
data16
jge
pop
lock
hlt
sbb
mov
or
stc
sahf
push
fs
es
jo
dec
lods
out
xor
xchg
pop
jecxz
jo
pop
and
cmp
fidivs
jo
sbb
in
gs
lods
fwait
pop
bound
sahf
nop
test
dec
loope
ja
jl
mov
mov
jle
cmp
ja
loop
andb
jo
mov
cld
add
adc
jo
inc
xchg
rol
jle
push
cli
rolb
mov
mov
cmp
in
xor
les
repz
movsl
sub
jmp
std
sub
pop
pop
jo
or
adc
cmp
jmp
int
insb
mov
mov
icebp
mov
add
mov
inc
push
dec
in
push
jo
pop
cld
sub
adc
jo
cmp
in
xor
inc
popa
imul
fincstp
ja
adc
hlt
push
insl
jnp
fistl
jo
scas
jl
js
sbb
push
movsb
gs
lea
sub
inc
cmc
lret
cmp
push
and
loope
lods
mov
fsubrs
ret
sti
mov
mov
add
and
lret
roll
outsb
sub
inc
mov
outsb
cmc
and
scas
xchg
mov
push
inc
lock
pmulhuw
rcr
sbbb
dec
blcs
or
leave
xor
lds
iret
jmp
jnp
shlb
or
lret
add
pop
sbb
jo
or
jns
fldl
rolb
dec
xorb
push
dec
jo
leave
fldcw
je
call
dec
add
test
popa
lds
sub
cwtl
lea
adc
imul
jle
add
dec
sub
lods
inc
ja
pop
jmp
hlt
mov
leave
or
or
cmpsb
stos
imul
cld
or
pop
jo
cmpsl
dec
push
ret
jo
inc
jb
jle
ffreep
nop
and
hlt
or
add
fiaddl
out
bound
jo
rclb
sub
pop
aaa
jo
mov
into
mov
icebp
jo
add
vpmaxub
mov
shrl
and
sub
sub
cmp
mov
xor
jnp
pushf
stos
jo
push
lret
cmp
push
into
and
or
loop
ja
push
or
or
inc
cmp
imul
jnp
jo
inc
xchg
push
push
call
arpl
mov
psllw
adcb
xchg
xor
jo
fisttpll
sub
lcall
mov
lds
xchg
jo
add
inc
jo
inc
int3
adc
pop
mov
dec
dec
ss
je
mov
mov
cltd
es
aam
shlb
xorb
sub
sub
ret
mov
add
add
push
test
add
int
lret
and
pop
and
outsb
cmc
pushf
les
fldcw
addb
lret
sbbl
aas
mov
sar
shlb
push
lcall
ret
and
add
mov
cmpsb
sbb
sbb
push
filds
adc
and
jo
mov
mov
ret
adc
int
xchg
addb
movsb
bound
out
testb
aaa
cmp
lea
jo
adc
popa
ret
sub
push
jo
mov
dec
jb
xor
jo
and
and
jo
leave
insb
aad
clc
add
sub
adc
test
pushf
push
mov
jg
vandnps
es
mov
shlb
jl
xor
jo
and
add
js
imul
pushf
mov
jns
imul
ds
fdivl
scas
leave
fcoml
push
jo
iret
daa
adc
push
jp
bound
in
hlt
cmp
popa
sbb
cmp
std
push
roll
xchg
xchg
sbbb
mov
movsb
push
jne
push
clc
jo
add
std
adc
loopne
sub
rcll
push
sub
test
mov
mov
je
imul
ret
sub
xor
xchg
jo
out
cli
aaa
mov
jg
adcb
push
popf
shll
stos
pop
add
inc
or
daa
dec
in
push
mov
push
dec
dec
stos
cwtl
jne
mov
fs
ja
mov
dec
outsl
aas
jle
movsb
ja
jo
and
mov
jmp
sbb
sbb
lds
push
into
sbb
mov
push
testb
fcomps
sbb
roll
adc
or
popa
shlb
cmp
mov
dec
push
lret
pop
outsl
push
flds
mov
mov
movsb
add
dec
push
adc
xchg
std
es
and
enter
sbb
into
fnsave
and
shrl
sbb
pushf
in
xchg
fdivl
cld
pop
xor
bound
lds
imul
adc
ljmp
callw
lds
jo
mov
sbb
sub
dec
iret
inc
cmp
cmc
xorb
xchg
stc
mov
mov
mov
sub
arpl
cmp
fwait
jl
pushf
push
mov
scas
add
pop
fwait
xlat
imul
outsl
shll
mov
add
cs
push
push
mov
mov
sbb
or
mov
popa
jmp
push
negb
push
add
dec
xorb
fwait
push
lfs
sbb
pushf
xor
mov
jno
bound
and
adc
adc
mov
push
push
bound
sbb
jo
xchg
outsl
sub
int
sbb
xor
push
xchg
mov
or
stos
sbb
or
bnd
nop
xor
mov
and
dec
cmp
js
nop
jecxz
das
in
cmpb
mov
cmpb
cli
add
xchg
jnp
jo
or
lret
push
iret
jo
and
test
shl
mov
xorb
adc
loop
pop
push
aaa
lcall
inc
push
bound
jge
pop
sahf
jmp
psllq
fnstcw
sti
sub
outsl
or
push
jnp
xchg
shrl
nop
cmc
lahf
add
ret
pop
fisubs
dec
fs
fcoml
jo
or
mov
into
jo
sbb
jl
shll
in
push
lcall
loop
stos
jae
and
adc
ret
outsb
sub
test
jo
sti
sub
xor
cmp
jno
int
push
or
sub
inc
sbb
leave
mov
cmpsl
arpl
xor
sub
ficomps
xchg
mov
mov
aas
jo
data16
dec
mov
jo
dec
mov
dec
push
xorl
ss
jo
add
adc
dec
data16
into
jg
fistpl
es
dec
and
int
leave
jo
or
push
jmp
xorb
int
sbb
mov
pop
jo
pop
dec
ficoms
cmp
scas
repnz
pop
lcall
addr16
push
mov
int3
in
pop
clc
imul
adc
cs
cld
mov
or
fimull
lods
dec
xor
dec
cmpb
mul
sub
xchg
clc
imul
mov
adc
dec
fs
pop
push
add
jno
push
int3
or
jmp
stos
jo
adc
jg
mov
jbe
sbb
and
sub
jnp
jo
and
fwait
jb
jo
mov
mov
pshufw
in
fsubs
jge
cmc
adc
movsb
stc
cmpsb
push
mov
xor
jl
push
repz
jo
sub
fwait
push
mov
cmp
xor
je
sbb
mov
adc
or
cli
imul
and
sbb
mov
fldcw
addb
jmp
icebp
xor
shr
ret
jne
dec
jl
lds
je
jo
push
fistpll
loope
mov
stos
mov
inc
loop
out
lahf
inc
xchg
ja
mov
bound
push
ret
adc
sub
dec
gs
jo
mov
mov
jo
xlat
lods
pop
pusha
fnstenv
xchg
push
jle
lea
mov
pop
in
stos
aam
dec
or
sub
out
jo
test
pop
and
out
lahf
push
jnp
ret
iret
mov
xor
jb
test
mov
divl
xchg
mov
mov
or
ret
cltd
pop
jo
fcoms
inc
xor
xlat
lahf
jo
rorb
lret
jecxz
cmpsb
pushf
sahf
lds
xchg
jnp
mov
inc
push
sbb
push
jo
in
into
pop
mov
leave
pop
sub
push
jno
jo
push
add
jae
movsb
dec
or
adc
mov
jo
cmc
test
cmp
add
aad
xchg
push
roll
ret
add
jo
ror
je
aas
mov
xor
popl
jo
pop
and
pop
ret
lds
cmpxchg
fs
shrl
dec
xchg
cmpsb
inc
xor
out
or
jo
jns
lods
lcall
dec
std
sub
jo
jg
mov
ss
data16
jo
into
shr
xor
loop
popl
add
fimuls
fdivl
ljmp
nop
std
cmp
out
cmp
pop
pop
jg
fildll
jp
or
inc
aas
aad
js
bound
cmp
and
test
fadds
jno
dec
data16
pop
adc
jo
lock
js
xchg
cmc
repnz
cwtl
pop
and
mov
mov
jo
lea
lcall
jne
and
push
fadds
loop
cmp
xor
out
jo
inc
mov
shll
scas
jo
aad
push
bound
pop
in
aam
or
push
rorb
jbe
sbb
push
xor
mov
pop
mov
adc
push
test
pop
xchg
dec
lea
jmp
sub
out
into
dec
out
jo,pt
sub
pop
cmpsl
rolb
adcb
stos
bswap
or
sub
imul
adc
mov
in
mov
jo
popl
push
mov
rclb
jo
scas
dec
mov
jo
cltd
flds
enter
jnp
jmp
cmpsb
aas
rorl
jo
sub
add
les
jne
jl
dec
jecxz
jo
xor
std
aad
shlb
inc
ja
dec
xchg
dec
sbb
and
mov
jp
push
lahf
mov
xchg
mov
iret
jo
pusha
dec
inc
mov
dec
xor
mov
cmp
mov
jae
jl
sub
les
cmpsb
inc
arpl
mov
sbb
setb
or
mov
push
inc
ficoms
scas
insb
cmp
or
loopne
dec
jo
pop
test
add
popf
mov
imul
imul
adc
mov
mov
das
inc
sbb
lods
popf
dec
adc
xorb
clc
dec
xor
mov
insb
aas
add
sti
sbb
jo
sbbb
inc
lds
xchg
add
rolb
loope
mov
das
shll
in
or
push
in
int3
rolb
pop
repnz
sub
addl
push
cli
inc
xchg
mov
mov
std
cmp
push
push
jecxz
or
mov
fldl
mov
fisttps
jo
and
lret
sarb
xor
nop
mov
in
mov
jbe
and
enter
xor
pop
dec
loop
push
mov
fs
stos
sub
stc
pop
push
xchg
cwtl
jo
insl
rcrl
movmskps
xor
and
mov
addr16
push
jb
and
adc
sti
push
mov
jbe
and
popa
pop
xor
mov
and
sub
jae
addb
jo
xchg
jge
mov
sbb
jo
or
or
icebp
aas
shlb
js
fs
fwait
mov
jb
test
sub
popa
gs
pop
nop
push
and
xchg
subb
sub
inc
ret
sti
mov
loope
out
cmp
mov
add
inc
scas
push
lds
fcmovbe
sti
pop
mov
xchg
pusha
fwait
imul
shl
nop
pop
dec
andl
inc
jbe
sub
xchg
push
mov
sub
mov
rorb
jo
mov
idivl
loopne
loop
push
adc
inc
popf
shlb
jo
into
xchg
mov
pop
enter
jo
lds
divb
inc
in
sar
lock
incl
jmp
ja
bound
pusha
xchg
push
inc
stos
add
xor
mov
clc
aaa
popa
das
mov
cmp
in
sub
sbb
stc
sbb
fwait
cmp
cwtl
jp
jo
sub
movb
sbb
dec
xor
push
mov
add
jo
push
and
cmc
jo
sub
mov
jp
mov
inc
xor
mov
sahf
cmp
sub
mov
aas
gs
cmpsl
pop
and
jo
les
or
xchg
out
pop
test
test
loop
and
mov
add
add
jnp
ja
inc
aas
fnstcw
not
xor
in
sub
cmp
cmp
jp
and
js
stos
or
in
call
pop
mov
ljmp
mov
jp
sub
test
push
int3
nop
cltd
mov
jb
shrl
mov
aad
cmp
cmp
dec
andb
jns
mov
push
lret
pop
xor
pshufw
test
rorb
jns
mov
push
dec
mov
lcall
xchg
mov
jo
pop
ljmp
inc
lock
cld
push
push
orl
cmpsb
imul
cmp
jo
pop
popf
inc
sub
sbb
je
adc
add
mov
push
jo
test
mov
dec
xchg
testb
int
hlt
sti
push
ret
push
lods
lahf
inc
popa
out
adc
notl
and
or
outsl
loope
xchg
mov
or
mov
out
dec
cmpsb
ljmp
into
xchg
shll
pushf
push
and
out
cli
push
push
jmp
jl
mov
clc
mov
pop
std
lret
leave
jo
sbb
cmp
push
jno
test
push
lcall
sahf
arpl
dec
cltd
jns
sbb
push
lds
jle
jo
mov
std
pop
jo
rolb
jecxz
or
insb
jo
xchg
add
inc
outsb
jo
dec
and
insl
add
testl
mov
pushf
push
sub
call
test
mov
xor
jo
and
adc
xor
rolb
sbb
in
sub
out
mov
lea
and
vmovmskps
sub
mov
lods
sbb
movsb
xor
ret
sub
jmp
or
inc
or
jo
icebp
push
imul
std
cmp
sbb
jo
aaa
dec
push
lods
xchg
jo
mov
arpl
cmc
shll
inc
jo
not
inc
andb
int
jne
xchg
in
mov
ret
pop
jo
out
adc
fisttpll
jo
je
jp
jmp
shll
add
arpl
test
jo
scas
loope
mov
rolb
xor
rcrl
lods
jo
flds
int
mov
mov
xorb
das
imul
mov
mov
mov
jo
aaa
fcoml
pop
jae
cmp
repnz
sbb
ja
jo
xor
mov
sub
mov
jo
xor
nop
or
inc
popf
fadd
scas
jle
int
test
in
test
out
aas
jo
sbb
push
lods
bound
xchg
pop
test
mov
inc
mov
jge
je
int
dec
xor
pop
cmp
mov
lds
test
mov
sub
mov
inc
push
push
sub
dec
xchg
jo
xchg
iret
sbb
aas
fnstenv
test
ret
jo
jno
imul
mov
mov
inc
mov
adc
push
mov
lock
xchg
cmp
fisttpll
insl
cmp
jo
pop
cmp
or
pop
iret
cwtl
jge
mov
pop
cmpb
bound
test
mov
sub
xor
mov
jae,pn
into
push
hlt
bound
jecxz
inc
fisubl
lds
cmp
std
push
lret
outsb
retw
mov
jo
out
dec
iret
repz
imul
push
popf
rcrl
js,pn
inc
and
mov
jo
dec
cs
iret
and
jo
shrl
xchg
push
mov
pusha
pop
cmp
ret
test
add
jl
sbb
fldenv
nop
mov
ja,pn
addb
fsts
xor
push
xor
jo
fisubl
loope
mov
aad
inc
inc
jbe
jo
sbb
cmp
xchg
out
repz
rolb
xchg
jo
inc
push
mov
jo
jge
push
pop
fisubs
sub
cmp
sar
loopne
jbe
jo
push
les
clc
mov
xor
popf
dec
fiaddl
jo
mov
lea
decb
sub
jo
sahf
loope
push
rcrl
push
ret
inc
cltd
mov
push
inc
xlat
iret
scas
push
cmp
mov
jnp
outsb
testb
rclb
mov
loop
sbb
mov
je
jo
xor
imul
dec
rcrb
rol
jo
rcll
fs
mov
daa
mov
mov
int
divb
xchg
test
jg
mov
push
push
sub
cs
xor
pop
je
pushf
cli
lret
lock
add
and
loopne
lea
insb
adc
test
xor
leave
roll
movsb
jo
ret
xchg
lds
in
imul
jo
and
test
jae
sbb
int
adc
pop
insb
icebp
stos
jo
sbb
and
repnz
dec
lcall
dec
imul
inc
push
dec
js
subps
adcb
ror
idiv
inc
adc
aam
pminsw
lcall
icebp
cmp
mov
push
sbb
cmp
xor
gs
test
imul
icebp
sahf
xor
cmpl
jo
ret
lds
cld
cmp
mov
push
jns
in
repnz
mov
push
fwait
push
mov
fdivl
and
mov
cs
pop
fs
cmp
dec
loope
stc
and
ja
andl
jecxz
cmpsb
loope
jo
jbe
out
in
mov
add
jo
repz
cmpl
cmp
aaa
insl
push
inc
icebp
dec
loop
jo
fstpt
cmc
dec
and
es
cmp
xchg
ret
pusha
testl
push
stos
mov
mov
lahf
je
add
xor
pop
jge
adc
jo
xor
fadd
lods
pop
sbbw
jo
push
leave
cmp
or
popa
xor
lds
push
je
jnp
icebp
sub
jmp
js
mov
emms
popf
negl
in
jns
pop
ljmp
rcl
or
jecxz
mov
divb
fisttpll
and
adc
int
out
je
mov
imul
test
mov
xchg
jp
pop
ret
out
cmc
or
imul
adcb
lret
daa
ret
inc
pop
dec
xor
clc
mov
and
jo
and
xchg
fsubrl
dec
sbb
pop
ds
jp
pop
xor
push
jo
pop
xor
nop
shrl
jo
std
sub
sbbl
in
mov
cmp
jo
aaa
imul
jo
mov
fldcw
jo
inc
mov
pop
imul
shl
sbb
js
bsr
iret
and
shlb
scas
add
xchg
idivl
pop
test
xlat
and
divb
push
and
mov
outsb
jo
mov
cld
sbb
cltd
ret
and
movsb
nop
or
mov
mov
inc
cmc
push
jmp
dec
add
xlat
adc
jae
divl
fwait
leave
in
push
addr16
es
std
xchg
sbb
pushfw
inc
sub
call
jns
dec
jl
or
ljmp
in
jo
test
adc
or
fldcw
push
lret
push
fidivs
mov
into
mov
add
push
rcll
cmc
xchg
ret
push
jge
push
xchg
jo
lds
or
mov
loop
add
jo
std
adc
xor
jo
daa
dec
cmc
leave
es
cmp
pop
adc
sub
adc
enter
fsubrl
cld
and
mov
dec
scas
jae
je
push
iret
sbb
dec
or
adc
dec
repz
shrb
jge
sub
fst
jo
loopne
push
std
inc
out
call
jo
testl
jo
mov
pop
in
jecxz,pt
push
lcall
call
out
jp
fucomp
mov
jae
shll
in
jecxz
call
pushf
sarl
xchg
ret
inc
or
push
push
pop
jo
cmp
jmp
xor
test
sbb
ljmp
ss
imul
fstpl
mov
mov
pop
push
es
sub
rcrl
jo
mov
or
rol
rcrb
iret
lods
jp
push
aas
clc
pop
and
mov
sub
bnd
mov
push
mov
push
fdivrl
mov
xchg
push
push
mov
scas
pop
cmpsl
inc
jl
es
sbb
or
call
jo
addl
xor
loop
inc
icebp
jo
adc
ret
and
out
inc
int
idiv
jo
jge
xor
add
arpl
jle
sahf
xor
push
call
nop
dec
cmovns
jo
mov
std
adc
sub
xchg
pop
bound
jo
jl
cld
sti
adc
jo
loope
nop
lds
outsb
pop
je
adc
mov
sub
lods
jmp
and
out
lret
in
xorb
out
cmp
pshufw
or
ret
subl
std
insl
mov
cs
jmp
es
mov
rclb
cmp
fidivs
gs
loope
lds
in
jo
sub
adc
out
orb
orb
or
cmp
jo
cmpps
ffreep
dec
jo
lds
push
mov
and
add
mov
or
mov
cmp
sub
into
add
mov
call
data16
fsubrl
ds
jge
xchg
stos
jo
aam
inc
sti
roll
push
notb
or
push
mov
addb
push
loope
dec
push
std
inc
push
xlat
push
dec
cmpsl
lds
add
lahf
xchg
int
lret
dec
cmp
jo
mov
jo
lcall
jo
and
sub
cmp
loope
bound
jo
mov
shrl
stos
repnz
movb
shlb
in
jo
clc
fidivl
test
daa
jo
mov
ret
leave
stos
jo
xor
mov
xchg
push
push
std
add
jne
pop
sti
push
pop
pop
jo
add
cltd
in
or
dec
push
cli
push
jbe
in
or
dec
jo
xor
or
cmp
jo
shl
fisttpll
out
ret
int
xor
jo
xor
mov
out
popa
loop
and
loope
sete
stos
bound
repnz
dec
aas
cmp
insl
jmp
popf
insb
scas
jbe
mov
mov
jo
dec
enter
sub
test
loop
mov
jo
leave
adc
xor
add
inc
addr16
stos
sbb
rcrb
or
addb
push
jo
inc
js
std
ret
mov
icebp
pushf
mov
pop
nop
mov
mov
ds
call
jo
xchg
sbb
mov
mov
cmp
fidivrl
fldl
aam
xchg
inc
or
scas
xchg
popa
sbbl
aam
shll
clc
testb
jge
jo
xchg
fdivs
mov
repnz
in
lahf
xchg
sarl
jo
push
push
fisubrl
xchg
push
xor
pop
dec
jecxz
leave
jne
sbb
jmp
push
mov
add
out
mov
rcr
cwtl
push
jno
mov
ljmp
andb
icebp
jb
pop
mov
jle
mov
ja
clc
jmp
xchg
ret
adc
push
mov
jge
and
sbb
stos
gs
jo
rorl
jo
xchg
lods
xor
jo
lahf
jle
dec
ss
cmpsb
push
push
xchg
es
jb
jb
sub
jo
lahf
dec
xchg
ret
xlat
jp
jo
nop
dec
pop
aad
xchg
leave
jo
xor
stc
sub
ret
pop
icebp
lds
inc
xchg
cli
aaa
hlt
movsl
shll
or
adc
push
movl
lds
add
out
sti
lods
add
jo
sbb
mov
leave
push
sub
ret
and
or
mov
jb
lds
outsb
mov
sub
lahf
push
lods
arpl
ss
addr16
stc
push
out
cmp
imul
push
movsb
enter
aad
hlt
mov
nop
cmp
jb
stc
jnp
fwait
sti
inc
xchg
in
cmp
sbbl
mov
lret
jns
mov
mov
out
add
xor
push
add
fsubrl
ficoms
jo
sbbb
mov
mov
mov
mov
push
lods
dec
arpl
jle
nop
sbb
pop
ja
gs
jo
sti
sbb
mov
and
inc
jo
push
out
mov
jo
mov
xor
jmp
cltd
cmp
pop
out
call
idivl
mul
jo
vpavgb
cwtl
pushf
jo
aas
mov
rorl
clc
leave
mov
ret
ja
mov
dec
jae
stos
int3
ret
pop
les
test
cmp
loope
enter
inc
mulb
mov
divl
nop
push
mov
jo
cmp
pop
scas
leave
enter
into
cld
test
lret
pop
jo
jmp
push
ljmp
mov
jbe
xor
jo
adc
jns
or
lock
ljmp
inc
add
lcall
lds
xchg
fdivrl
int
jo
shll
pop
lock
or
inc
andb
jo
dec
in
in
add
jo
xor
jo
arpl
ret
int
xor
out
add
xor
jo
sti
adc
mov
or
test
mov
out
sahf
jo
cmp
dec
mov
and
jns
push
mov
hlt
sub
fs
outsb
sub
fadds
mov
push
jle
sub
inc
lods
aas
push
push
nop
pusha
dec
les
movswl
shll
repz
ret
inc
je
insl
push
or
adc
cmp
icebp
es
mov
lods
je
pop
lahf
lcall
push
jb
pushf
addr16
push
pop
ret
sbbb
gs
mov
inc
lea
loop
mov
jl
cmpsb
jo
jl
mov
or
ljmp
jmp
jle
jo
aam
dec
jle
add
mov
movsb
jae
mov
jle
jo
shrb
add
shll
jns
push
shlb
jne
push
pushf
adc
push
jo
add
mov
jo
fmull
sub
push
jo
push
les
jno
or
jl
mov
lcall
dec
cwtl
jo
jge
leave
sbb
test
adc
fld
cmp
sub
jo
popf
hlt
js
sbb
sub
mov
lea
add
mov
jo
ret
loope
int
jo
cmc
xor
jge
push
in
sub
lds
test
dec
and
push
ja
addr16
add
movsb
xchg
lock
sbb
mov
push
bnd
sarl
xchg
in
dec
lds
sub
jb
lret
push
ljmp
sub
scas
jo
push
ja
jle
ljmp
push
jge
hlt
xor
jp
das
inc
jle
test
mov
aam
scas
jo
repnz
pop
lds
mov
jp
fsubs
and
fnstsw
inc
jo
push
sbb
push
in
addr16
fnstcw
jo
xor
cld
movsb
outsb
rcr
test
xor
mov
or
addb
jecxz
jo
mov
pusha
jo
flds
jo
popf
ret
inc
int
imul
push
out
push
das
mov
inc
addl
add
dec
aad
jae
jo
mov
pop
push
insb
inc
leave
jo
lds
mov
bound
leave
adc
mul
jo
pop
outsl
xor
mov
jo
std
test
inc
out
xor
fsubs
aaa
repz
sbb
mov
lds
daa
push
sbb
je
jp
jb
fidivs
loop
fwait
lock
fcoms
fimull
out
inc
leave
jle
std
rorb
sbb
loope
jmp
call
leave
jo
and
mov
jns
daa
test
lds
jo
mov
out
jle
add
jo
or
and
dec
mov
lds
cli
jmp
sbb
andl
mov
or
adc
dec
xor
xor
into
mov
mov
js
scas
or
jecxz
mov
ret
sub
test
scas
push
jl
in
lock
sbbb
add
aas
jb
mov
cld
inc
add
lods
cmp
pop
mov
inc
mov
dec
xor
pop
push
cli
mov
mov
xor
mov
mov
ret
inc
out
mov
and
roll
sbb
bound
jnp
dec
push
mov
cltd
mov
int
mov
xorl
xor
jo
out
and
cld
adc
cmp
enter
add
inc
xchg
dec
fnstenv
fcmovbe
out
ret
mov
jo
mov
xchg
adc
push
roll
add
fldenv
popa
jo
xchg
mov
jo
adc
das
pop
loope
lea
rolb
mov
and
rorl
mov
sub
jmp
repz
pusha
mov
xor
jnp
push
jo
push
jecxz
jne
xchg
imul
popa
inc
aam
rorl
call
icebp
ret
mov
xor
pop
jbe
test
rcr
cli
pop
mov
xchg
adc
enter
lods
mov
mov
mov
xchg
imul
push
enter
mov
int
pop
mov
push
mov
sbb
test
divl
dec
movsl
imulb
rcrl
jo
pop
cmp
jo
pop
sbb
inc
pushf
mov
or
es
movl
daa
insb
mov
mov
mov
jo
push
cmp
mov
push
adc
into
sub
stos
addl
ret
hlt
xor
mov
icebp
clc
sbb
adc
in
lea
sbb
jo
pop
pop
jmp
fstpl
stos
bound
jp
das
add
mov
shld
ds
inc
jo
subl
leave
aad
in
repnz
addb
sbb
mov
loope
add
lds
or
jo
stos
roll
lahf
nop
inc
pop
mov
jno
push
push
mov
dec
test
jns
jo
sbb
lock
xorl
pop
packuswb
shl
adc
sbb
sub
jo
and
cmp
inc
cli
jo
jmp
add
sti
je
jp
jo
lds
xchg
adcb
dec
jno
jo
mov
rorl
add
push
incb
pop
bnd
std
jp
movsb
cmpsl
sub
ficoms
popa
inc
sub
daa
jns
test
mov
sbb
xor
sub
ljmp
stos
add
rcrl
data16
xor
loope
jo
mov
push
xchg
sub
pushf
lds
test
mov
movsb
jo
inc
fs
leave
repnz
aas
lret
adc
xor
jo
cli
sub
repz
inc
push
cmp
jo
test
mov
cmpsl
orl
jecxz
scas
mov
or
enter
jo
xor
testb
cmp
mov
hlt
mov
repnz
arpl
bound
push
int
cmpl
mov
or
push
mov
mov
jo
shrl
mov
mov
les
sbbl
and
jo
enter
jo
je
leave
std
andb
lret
cmc
shll
ds
ja
fdivl
inc
adc
int3
sbb
xchg
outsl
jo
fistl
sbb
adc
jle
xor
movntq
out
jo
mov
xchg
mov
push
xchg
ret
push
dec
mov
sub
jmp
data16
gs
jg
fldt
testb
cld
loopne
mov
mov
cmp
jnp
jl
mov
pop
mov
xchg
loop
ret
sbb
jo
icebp
lds
jb
sti
sub
sub
push
mov
jo
mov
divl
jo
inc
add
scas
xor
sbb
mov
inc
sub
cmpl
sbb
fdiv
add
jmp
mov
adc
lds
int
mov
xor
imul
push
fs
jo
or
jo
cmc
xor
add
or
xchg
jne
imull
push
dec
mov
leave
shl
inc
sbbl
inc
inc
bound
jo
jno
add
fwait
sub
mov
ret
inc
movsl
cmp
outsl
mov
jo
add
pushf
push
lds
adc
fidivs
fistpl
ret
jo
or
inc
jmp
cmp
mov
in
jo
dec
inc
lds
cmpsb
jge
mov
addb
xor
mov
imul
adc
mov
push
je
sub
movsb
leave
ja
popa
test
push
insl
sbb
jo
or
add
lds
sub
loop
push
jns
add
dec
shrl
xchg
mov
arpl
bnd
or
push
insb
mov
fidivs
fmuls
push
sti
shll
sbb
dec
movsl
xorb
lds
mov
jg
out
push
data16
fnstenv
in
and
jo
add
kmovb
jb
xchg
adc
and
dec
mov
jle
jg
pop
jo
mov
push
int
sahf
push
sub
sbb
mov
push
outsl
mov
cli
insb
mov
jo
in
mov
or
mov
xor
shrb
lods
aad
sar
jo
outsl
notl
mov
stc
xor
scas
sti
add
push
cltd
rolb
jge
jo
jg,pn
or
dec
sub
stc
jns
add
aam
fsubl
lret
cwtl
push
and
inc
cli
fldt
loopne
fcmovb
sbb
xor
divb
fdivrl
test
mov
incl
pusha
push
jo
xlat
sub
jbe
sub
arpl
int
fwait
andb
nop
shr
andl
push
push
incb
mov
jo
mov
ret
push
jo
jnp
xchg
dec
pop
inc
out
jmp
pop
leave
or
jo
and
jmp
sar
sub
inc
adc
add
cmpsl
add
test
inc
mov
adc
xchg
lds
xor
movsb
push
cmp
xchg
fwait
pop
in
ss
hlt
ret
jae
lds
jecxz
inc
and
xchg
lock
js
dec
mov
and
in
jo
gs
imul
pop
xchg
and
cmp
lods
out
jo,pn
inc
inc
es
movsl
xorl
jns
test
cs
ffree
insb
fs
push
lds
adc
shlb
ljmp
js
adc
cmp
data16
dec
inc
insb
dec
test
jge
test
cmp
cmp
pop
mov
rdtsc
inc
int
popa
sarl
lret
loopne
inc
movsl
jo
xor
bound
in
xchg
jl
cmp
insl
sbb
dec
scas
pushf
jle
jo
loope
fldenv
int3
out
mov
pop
jo
cwtl
inc
xor
xlat
js
imul
iret
scas
sahf
pop
lds
xchg
cmp
lret
dec
jge
cmp
jo
jns
mov
in
push
and
push
gs
push
cltd
inc
mov
push
repz
cmp
movsb
cmp
push
ljmp
or
and
push
add
mov
jle
mov
gs
lock
cmp
push
das
nop
jo
stc
ss
repnz
dec
fildll
ret
pop
xchg
sti
jo
daa
pop
xchg
cld
addr16
push
jmp
pop
popa
mov
jo
xchg
dec
js
into
std
in
adc
outsb
or
dec
jno
in
subb
pop
mov
jae
sub
and
mov
fwait
repz
sbb
cltd
mov
sub
pop
test
jg
push
mov
and
cmp
cld
cltd
pop
sub
out
cmp
xlat
push
stc
sub
popl
mov
rorl
jo
jnp
addr16
pop
int
push
inc
arpl
sub
sub
sub
xchg
pop
or
or
mov
insl
mov
ror
cmpb
sbb
mov
popl
out
xorb
mov
loope
movl
xor
fs
mov
mov
or
mov
mov
xchg
fiaddl
sbb
hlt
inc
test
out
xchg
lds
repnz
outsb
sbbb
xor
and
dec
into
test
nop
out
and
hlt
ljmp
add
ret
jno
push
outsl
jnp
mov
xorl
lret
std
push
sub
mov
and
lock
in
xor
stos
inc
lgs
lretw
add
push
ds
dec
xor
jns
imul
rcll
lods
leave
mov
scas
fistl
sbb
add
or
das
int
xor
icebp
push
outsl
xchg
inc
inc
cmc
cmp
push
mov
cmpsb
lea
fdiv
jle
jo
enter
sub
cmp
jo
ds
adc
inc
repnz
add
pushf
pop
daa
sbb
jo
jmp
xchg
inc
aaa
or
jo
rcrl
shlb
xorb
ljmp
mov
jo
stos
outsb
ret
je
jo
xchg
popa
adc
xor
mov
and
adc
popa
jl
jo
daa
call
fnstenv
aad
mov
xchg
test
loope
sbb
xor
dec
add
scas
push
xorb
je
cmp
les
movsl
mov
in
mov
cmc
push
adc
mov
clc
pop
and
add
push
mov
test
enter
dec
inc
inc
daa
sub
dec
mov
jo
mov
pop
xchg
inc
lcall
fwait
ret
and
jo
iret
mov
dec
mov
jo
sbb
sub
sub
daa
and
rorl
and
dec
pop
repz
idiv
and
rolb
inc
cmp
imul
jo
pop
cmp
movsb
or
or
push
ret
les
pop
sub
in
aas
jne
xchg
divb
or
jge
cs
jb
sub
adc
push
xchg
rcrl
insb
fmul
push
sarl
jge
mov
mov
add
stos
insl
imul
loop
test
adc
pop
jns
xor
mov
repnz
lods
nop
popf
add
test
dec
ja
sahf
push
jo
jecxz
dec
and
mov
jb
jo
inc
and
fidivs
xor
push
jo
xor
sub
jo
es
dec
emms
stc
sbb
mov
mov
es
imul
enter
aas
inc
jo
jns
in
adc
adc
mov
jo
outsl
cli
sti
pushf
xor
jo
jge
jae
scas
jmp
jo
dec
nop
dec
and
ret
pushl
outsb
test
gs
jbe
mov
lods
xchg
jo
cmp
mov
jo
repnz
test
loope
jno
lret
movsl
dec
cli
push
add
push
jo
mov
jmp
xor
cltd
repz
pop
pop
jo
std
sbb
mov
or
push
fldl
iret
and
sub
mov
mov
in
int3
in
jo
pop
fcomp
cli
jnp
shll
sarl
outsl
test
mov
jb
js
sub
lahf
jo
xlat
ret
inc
pop
dec
jo
mov
add
lds
loop
inc
sub
scas
or
pop
mov
jo
adc
or
sahf
mov
cmp
jo
xchg
bndstx
loope
adc
jb
mov
sbb
jo
test
add
fs
xchg
mov
addb
pop
inc
jo
lds
xchg
das
into
cmp
mov
ljmp
incl
jo
leave
test
ret
cmp
ret
or
xchg
test
pushw
shll
jb
call
xor
mov
sarb
mov
lret
jns
pop
jb
mov
sub
mov
fistpll
jo
pop
push
mov
cwtl
add
push
sub
test
push
jbe
adcl
lods
cs
loope
xor
inc
iret
inc
push
sahf
sub
out
jo
mov
sub
sar
fildll
shlb
in
cmpsb
enter
mov
mov
add
jbe
shll
dec
mov
icebp
adc
mov
fistl
mov
ja
popf
in
push
gs
jo
mov
int
mov
cmc
pop
aad
push
jo
mov
das
dec
jmp
jo
ret
loop
or
inc
dec
sub
cmp
aam
and
cld
pusha
iret
pop
xor
cwtl
insb
out
stos
add
adc
and
adc
mov
jg
fisubl
lds
mov
inc
movsb
jmp
ret
jo
sbb
loope
lods
push
jo
cltd
jb
lods
bound
mov
mov
mov
lret
adc
jnp
add
sbb
push
jno
in
push
push
pusha
lea
fs
dec
push
rclb
xlat
cld
fneni(8087
stos
pop
fldt
sub
std
xor
lahf
sub
cmpsl
sahf
cli
stos
fwait
aam
inc
fbstp
jne
pusha
loope
loopne
or
dec
dec
mov
mov
orb
pop
mov
repnz
lea
sbb
bound
jns
jo
mov
jo
mov
ds
into
aaa
lahf
add
les
js
movsl
inc
jle,pn
mov
lret
imul
out
ja
xchg
lock
add
pop
cld
sub
push
push
push
jne
jo
sti
aad
negb
and
pusha
mov
and
push
jge
imul
cmp
jo
sbbl
cmpb
mov
iret
adc
jo
inc
fisttpll
inc
bnd
daa
lock
lcall
jno
mov
push
sets
fwait
daa
jne
push
sub
jo
sub
mov
mov
bound
add
lret
stos
inc
dec
gs
insb
pop
sbb
jo
mov
sub
insl
jnp
ja
lret
inc
jo
out
mov
push
out
enter
xor
aam
xorb
jae
mov
pop
xchg
jo
and
ljmp
xor
push
imul
ss
mov
jmp
jo
mov
fwait
sub
popf
pop
mov
or
jo
shrb
fidivl
add
movsl
jo
pushf
ret
mov
jp
jo
and
pop
cli
outsb
mov
xor
sub
fimuls
pushf
sarb
pop
in
cs
and
lea
cli
push
pop
rol
in
inc
lret
pop
push
jo
jbe
cs
in
movsl
jo
mov
adc
fimuls
ret
pop
jnp
js
inc
jo
int
loop
ja
call
jg
xor
xor
sub
hlt
xchg
daa
lock
jne
js
in
leave
jo
adc
xchg
add
jo
sarl
mov
jmp
js
add
rolb
js
lds
arpl
lahf
jo
aad
or
add
and
leave
inc
sti
ja
push
and
ret
sub
pop
cmp
shlb
push
imul
mov
sbb
cmc
das
mov
clc
dec
notl
into
cltd
mov
xor
push
insb
jo
cmp
sbb
leave
jo
fildl
shll
cld
jmp
jo
movsb
lds
mov
jo
clc
sbb
jo
int
in
stc
inc
inc
jo
inc
sbb
mov
inc
or
movlps
inc
adc
fnstenv
dec
call
and
inc
cmp
out
xor
push
adc
imul
sub
loopne
or
inc
push
filds
jbe
jno
out
sub
jo
mov
inc
or
cli
jo
adc
xchg
dec
cmp
dec
mov
lret
dec
mov
data16
xor
adc
sub
out
jb
mov
mov
mov
test
mov
xor
mov
mov
jo
test
inc
std
mov
adc
mov
and
jo
mov
push
cmpb
add
lds
jg
inc
lods
jo
xchg
xor
shrl
add
jo
xchg
mov
sbb
xchg
rcrb
notb
inc
shl
push
subl
pop
push
rcll
je
pushf
addb
add
cmp
jae
rcr
or
dec
popf
pop
add
jo
mov
mov
push
xor
cmpl
push
mov
adc
pop
cmp
mov
repz
mov
ret
sbb
popa
and
sub
jo
or
jo
push
stos
icebp
jge
mov
lods
push
sub
stos
adc
mov
jo
add
xchg
mov
add
xchg
jo
hlt
dec
mov
aaa
loope
push
rcrl
inc
jbe
in
lds
xor
sbbb
pop
jo
aaa
xor
jmp
leave
int3
lods
fidivs
jo
push
mov
lds
lods
jo
negl
xlat
jno
jo
xor
loope
bound
aad
inc
push
sub
fsts
sub
leave
aam
mov
push
fidivrl
test
pop
in
push
stos
xor
je
cld
xor
rcll
fs
mov
shrb
loop
xchg
daa
jo
ds
dec
pop
inc
inc
das
adc
add
in
xor
shl
push
out
dec
mov
testb
inc
sub
xor
jo
daa
push
repz
jo
cmp
mov
or
ss
dec
inc
pop
mov
les
gs
dec
jo
dec
idivb
loope
cmp
jne
push
mov
jo
jp
push
jle
mov
fdivl
inc
js
scas
inc
xor
xor
mov
dec
dec
mov
xchg
in
mov
sub
sbb
rcll
jo
fucomp
xchg
push
into
sub
lds
jmp
mov
xchg
std
mov
in
sub
mov
cmp
add
decl
cmp
repz
sub
das
mov
loope
push
push
daa
jb
adc
mov
movsl
rclb
arpl
movsb
adc
add
es
dec
inc
sahf
decl
lahf
insb
push
adc
cmp
lret
rcrl
jp
jle
ror
add
jg
inc
push
sub
jmp
or
daa
mov
out
ja
scas
pop
xchg
jo
in
enter
adc
ss
adc
push
xchg
inc
cwtl
loope
dec
and
in
nop
push
dec
mov
lahf
aaa
ja
popf
xor
or
jo
lock
mov
pop
jae
dec
in
vpshuflw
jno
sub
aad
mov
sub
and
cwtl
pushf
cmpb
mov
mov
sarl
xor
nop
sahf
sbb
or
jo
or
sbb
jo
xor
les
xchg
dec
inc
xchg
push
test
cmp
js
orl
cwtl
shrl
inc
add
pusha
xorl
fistl
clc
cs
scas
loope
jb
pop
jo
push
mov
xchg
inc
xchg
nop
mov
pop
ja
push
and
repnz
cmp
pusha
popf
ja
insb
popa
mov
addl
out
sahf
std
idivb
aaa
mov
jbe
jp
fnsave
jl
fldcw
nop
mov
ja
sbb
je
bound
inc
lds
iret
notb
rcrb
and
in
into
fcomps
ja
mov
jo
lcall
sub
mov
ret
ds
decl
sahf
cmc
mov
and
jb
sub
jo
fisttpl
iret
cmp
loope
push
out
sub
jns
inc
icebp
out
scas
int
stos
add
lcall
jp
ret
adc
push
jo
and
shll
jo
add
iret
xor
jo
adc
jle
nop
in
mov
add
cwtl
repz
push
add
mov
inc
data16
adc
test
fbstp
stos
retw
sbb
outsb
add
xorl
movswl
inc
test
cmpsl
push
js
push
sbb
dec
jg
out
std
notl
scas
insb
sbb
push
sub
pop
jo
lds
movsl
push
mov
mov
jb
mov
jo
mov
gs
jo
dec
test
test
divb
sbb
jl
push
pushf
jo
add
push
xlat
xchg
jo
mov
mov
mov
in
mov
jo,pn
test
call
dec
inc
jp
dec
into
mov
jg
icebp
cmp
mov
lea
and
lds
mov
dec
loope
rclb
aad
insb
add
leave
cmc
mov
push
sub
sahf
sub
dec
test
int
or
jo
inc
and
leave
iret
das
jo
pushf
push
dec
mov
cmp
out
mov
jp
test
popa
imul
sub
or
or
and
pop
cmp
out
scas
out
stc
jo
inc
dec
testl
jmp
sbb
cmp
insb
mov
int
mull
test
sub
or
pop
cmp
std
jp
insb
cmp
ja
arpl
sub
adc
sbb
mov
inc
jle
jo
pop
cmp
jo
test
push
or
add
jo
xor
subb
add
jo
push
push
sbb
mov
das
mov
bound
std
sub
jp
xchg
push
push
mov
or
push
es
lock
faddl
out
iret
sub
jo
daa
mov
mov
jp
jo
popa
pop
fiadds
imulb
add
adc
and
dec
mov
or
push
mov
inc
jle
cmp
mov
jp
push
sbb
loope
inc
sub
jo
cmpsl
divb
add
shll
nop
cmp
in
xchg
sub
pop
out
leave
push
add
shll
psubsw
xchg
ret
add
pop
xchg
jo
insb
add
divb
and
pop
cmp
cmp
cs
xor
rcll
xchg
pop
cmp
stos
xor
pop
sub
push
mov
jo
mov
jp
jo
ficoml
sub
sti
leave
orl
pop
pop
jb
jmp
cmp
jb
mov
jo
or
pop
xchg
mov
adc
stos
ret
mov
shrl
cs
cmc
shrb
bound
xchg
xor
hlt
push
fcmovbe
jle
add
movsl
lods
jo
mov
shlb
ret
movsb
bound
jo
rcll
leave
outsl
jo
push
ret
xor
hlt
lds
pop
test
das
jo
ret
adc
les
out
loop
loope
jo
sub
mov
jo
mov
dec
xchg
in
clc
jo
mov
pop
dec
mov
mov
dec
mov
mov
sbb
adc
insb
add
mov
jmp
inc
repz
jo
popa
mov
lret
jmp
lods
int3
jo
mov
enter
mov
fbstp
mov
vpshufd
ja
cmp
xor
stos
shlb
shl
jp
cmp
scas
fs
dec
nop
jmp
shrl
imul
xor
jns
adc
inc
cmp
sbb
add
movsb
in
mov
ljmp
xchg
jo
push
ret
xor
mov
lcall
cmp
enter
lock
xchg
js
lods
or
jo
xchg
insl
lret
pop
rorl
stc
lock
cmp
js
jne
call
daa
jbe
clc
xchg
push
jl
hlt
or
xor
pop
and
push
or
sbb
in
mov
add
or
dec
xor
pop
daa
lea
push
sub
dec
sbb
out
je
jns
imul
cli
jo
adc
repnz
hlt
jg
push
ret
push
and
imul
out
out
inc
jg
les
cmp
mov
mov
or
jb
dec
aas
in
jle
or
or
adc
call
lds
jo
mov
lods
xor
xlat
loop
mov
mov
xor
push
cld
jnp
js
lds
imul
inc
jmp
shll
jge
and
push
sub
push
icebp
pop
adc
jo
add
lcall
jge
ror
jne
popa
pusha
repnz
inc
out
jo
shlb
in
data16
jo
and
inc
inc
and
xchg
or
adcl
lods
fbld
add
bound
and
jo
sub
test
addb
adc
cmpsb
rcrl
sti
inc
popa
dec
inc
mov
ljmp
pop
jo
and
cmc
and
jo
popf
pop
mov
es
jo
arpl
jns
pushf
push
mov
jo
loopne
fistps
mov
push
jecxz
sub
cmp
sbb
out
jl
insb
xlat
adc
push
unpcklps
sub
jp
push
add
adcb
jnp
lock
inc
lahf
jae
dec
jmp
dec
enter
jo
mov
sbb
jle
mov
testb
sub
jo
pop
xchg
test
ret
jo
sbb
out
jo
lahf
shrb
mov
xor
adc
fsubrs
mov
mov
inc
mov
loope
xchg
jo
cltd
arpl
jo
fistpll
xchg
push
mov
loope
adc
sub
leave
xor
dec
mov
je
jo
aam
lds
sbb
xor
inc
mov
iret
jb
mov
daa
push
dec
js
pop
xchg
lods
jo
test
jecxz
inc
jle
jo
adc
lds
lcall
jo
dec
insb
fisubrs
lds
arpl
in
fstpt
into
add
retw
sar
movntq
js
xchg
cmp
jo
scas
cmp
xorb
push
add
fcmovb
cmc
push
push
jle
mov
sti
hlt
lea
sbb
and
pop
je
call
mov
shl
lods
aas
cmp
addr16
xchg
vmread
adc
jo
movsb
or
xchg
add
mov
mov
mov
jo
test
jecxz
popf
js
int3
into
xor
aad
sbb
lds
je
popf
loope
jo
loop
ret
fdivr
or
jmp
pop
sahf
push
xlat
mov
pop
inc
cltd
add
icebp
jo
ss
jg
add
adc
mov
lock
lcall
mov
jo
out
insl
and
roll
cmpsb
mov
sub
adc
mov
mov
mov
repz
jb
or
negl
push
inc
mov
mov
ret
adc
mov
mov
jo
xor
imul
or
loop
xchg
and
pop
js
mov
push
in
push
jo
loop
ljmp
fs
mov
or
xchg
int3
jo
pop
sub
add
jo
sbb
ret
iret
scas
insl
cmp
or
arpl
dec
sbb
sub
pop
push
jp
or
jo
and
pop
xchg
sub
int
shlb
shlb
lods
jp
jb
ja
sbbl
jbe
inc
inc
xchg
and
lods
cltd
comiss
ret
fcompl
addr16
push
jge
inc
inc
sub
jo
lds
cmp
sbb
jae
lea
jo
cwtl
stc
xchg
es
sti
push
jno
jo
std
sbb
ret
aas
cs
movsb
mov
fs
ljmp
xchg
jns
sbb
gs
sub
inc
jno
pop
imul
pop
vmwrite
jmp
mov
push
add
mov
mov
sbb
pop
jo
sti
leave
and
or
mov
mov
adc
and
pushf
hlt
orb
add
popa
jno
push
roll
lret
push
in
jo
adc
stos
ret
or
mov
mov
jo
dec
lcall
jo,pt
jno
ds
fnsave
jle
leave
test
lahf
mov
and
outsl
rcl
nop
push
lods
lret
pop
xchg
push
and
cmc
inc
xchg
data16
adc
lds
adc
cmp
add
pop
mov
cs
push
sub
inc
inc
mov
pop
jo
mov
add
add
stc
subl
gs
mov
push
cmp
sahf
es
or
inc
rclb
iret
jne
js
or
xchg
jo
lahf
fsts
sub
les
cmc
pop
movl
adc
mov
mov
cli
mov
in
je
outsb
shll
fs
jo
push
dec
sahf
and
cmp
push
mov
xor
cmc
jo
sub
and
cmp
pop
test
push
jmp
int
cmpsb
sti
jl
fists
lret
out
lea
inc
push
jg
jle
out
dec
jo
push
jmp
mov
add
cmc
test
daa
pushf
cmp
lds
or
fsubl
sub
cs
mov
jle
xchg
xchg
sub
adcb
fwait
jo
dec
popf
adc
xchg
shlb
faddl
jnp
mov
ret
repz
mov
insl
jo
inc
adc
rolb
xor
add
jo
sarl
iret
and
mov
ficoml
xor
jo
inc
les
adcb
jmp
test
push
imul
jo
pop
or
es
push
cltd
test
repz
rorl
and
and
leave
shrb
jo
pop
icebp
cmp
jo
and
jge
lea
test
fnsave
std
xor
dec
rclb
jno
jo
movsl
cli
lret
or
inc
and
aas
movsb
insl
pmaddwd
mov
push
int
ret
jnp
jg
in
popa
cmpsb
xor
dec
in
roll
push
add
mov
sbb
mov
mov
in
lds
lods
or
jge
sub
or
add
mov
sbb
inc
mov
jo
sub
cmp
fistl
dec
test
xor
movl
add
sbb
rolb
jo
int3
repnz
jo
ret
or
loope
cmp
jns
pushf
jl
data16
jo
pop
push
xor
outsb
ret
jo
mov
xor
xor
rcrb
jo
xchg
jo
fcomps
jb
movsb
outsb
das
loop
xor
je
orl
jne
add
push
jo
mov
xor
sub
ds
bswap
add
jle
cltd
adc
in
and
add
ljmp
cmc
jo
or
jmp
add
pop
mov
fdivl
dec
rorl
sbb
cmp
push
or
arpl
pop
sub
in
andb
lea
out
icebp
lahf
jl
cmp
jo
adc
xor
adc
and
int3
int
addb
out
sbb
xchg
push
repnz
call
jg
add
jo
pusha
or
nop
mov
lahf
jo
out
xor
xlat
inc
push
shr
stc
and
lods
and
push
inc
sbb
lret
repnz
or
jbe
jmp
pop
cs
sub
mov
insb
push
dec
lea
dec
sbb
stos
adcb
pop
pop
xor
fs
sub
or
cmc
nop
mov
xor
imul
les
add
xor
xchg
fistps
sbb
and
inc
jb
push
xchg
mov
mov
or
pop
pop
xchg
xor
mov
jp
addr16
imul
lds
dec
mov
inc
mov
pop
pop
test
sub
je
iret
je
xchg
push
xchg
adc
dec
sbb
mov
push
mov
aad
iret
fs
mov
fbld
push
das
in
je
stos
jo
adc
fnstenv
popl
cmp
pop
icebp
sti
add
add
jo
inc
in
popf
push
int3
push
mov
jo
push
in
paddusw
shll
dec
jo
adc
add
mov
divl
ret
rcll
mov
jo
cmp
mov
mov
push
arpl
cltd
hlt
dec
cwtl
jo
pop
sarb
mov
mov
lret
dec
adc
jo
mov
mov
insb
and
xor
stos
shr
rorl
sbbb
js
adc
add
repz
fistl
ljmp
jmp
push
aas
inc
jle
pop
push
scas
xchg
sbb
jmp
shrl
stos
inc
sub
out
bndstx
cmp
dec
shl
icebp
jge
aad
mov
lds
call
in
addr16
test
lods
roll
inc
jecxz
jo
lea
ret
push
repz
jo
lds
out
sub
addr16
and
sub
cmpsb
sbb
ret
outsb
jns
lods
jo
int3
inc
lea
leave
jbe
xchg
mov
jo
mov
jg
jo
adcl
out
popf
shlb
xchg
dec
stos
orb
mov
sbbb
jp
xchg
int
and
loopne
insb
inc
imul
push
insb
or
mov
cmc
inc
xor
incb
cmpsl
jo
xchg
fldt
jle
fadds
pop
pop
xorb
mov
outsl
and
or
les
fistpll
stc
jbe
in
jge
setp
jno
insl
adc
push
mov
imul
xchg
or
mov
or
fsubrp
push
lds
or
aam
jns
mov
stc
sbb
outsb
mov
jo
pop
cmp
or
xlat
cmpsl
js
jp
mov
cmpsb
dec
xor
sqrtps
jecxz
fcomps
add
inc
mov
cs
lret
les
sar
jo
nop
jg
adc
mov
cmp
push
cmp
pop
jns
je
int3
pop
push
jmp
pop
mov
enter
jl
jg
pop
bound
adc
test
inc
dec
jnp
ss
ret
and
addr16
push
push
jbe
jo
xchg
adc
and
pop
xchg
andl
icebp
lds
scas
sbb
outsl
push
shl
dec
pop
mov
mov
push
js
push
sub
jo
sbb
addr16
std
and
jbe
push
or
cmp
out
xchg
je
sub
fidivs
es
add
mov
repnz
pushf
cmc
xor
testb
insb
fidivs
or
test
push
jg
push
and
shll
and
xorb
jle
or
jo
bound
ror
call
fildll
iret
stos
cs
les
popf
cmpsl
sbb
fistl
lcall
pop
inc
ret
ja
jo
aaa
movsb
lds
sbb
mov
jo
and
xor
xor
cld
dec
jo
mov
js
cmp
mov
sub
dec
popf
jo
dec
xor
jo
test
arpl
jo
cmp
loopne
sub
jo
insb
mov
das
adc
jb
or
jo
pop
aaa
lds
insl
jo
push
push
pop
sub
mov
sub
mov
cmpsl
pop
mov
int3
les
cmpsb
outsl
push
shrb
fwait
bnd
icebp
sahf
repz
in
iret
xchg
xor
bound
scas
jmp
jo
adc
loope
std
outsb
add
jmp
jo
int
decl
inc
cs
dec
sbb
into
popf
xor
jo
ret
lock
xchg
push
cmc
gs
jo
jp
adc
xor
mov
ss
push
pop
mov
jo
cltd
xor
insl
adc
jno
jp
or
inc
in
fildl
rol
jns
inc
fwait
sbbb
inc
jo
loope
cmpsl
leave
out
in
setp
xchg
mov
mov
cmpsb
pop
mov
fnstenv
adc
mov
xchg
test
jp
je
mov
int3
loopne
js
jl
in
jo
movsl
push
pop
pop
shll
jp
ret
jo
movsb
push
enter
fsub
jo
pop
sub
loope
lods
xor
jae
inc
shll
sbb
lds
fcmovu
mov
pop
in
ret
xor
inc
xchg
stos
sarb
jae
pop
daa
dec
imulb
inc
jo
outsl
mov
adc
jge
mov
push
xchg
inc
sub
or
pop
add
jo
xchg
fdivr
mov
rcr
xor
inc
push
push
xchg
in
mov
icebp
iret
inc
sbb
pop
mov
jge
outsb
jae
int
jo
orl
jo
push
dec
mov
ret
in
pop
leave
ja
test
mov
mov
test
jne
push
jb
mov
js
std
sbb
fbstp
adc
push
mov
iret
mov
shl
mov
xlat
cmp
lock
add
jo
clc
push
lods
push
rclb
xor
outsb
iret
jo
xchg
jecxz
jmp
push
push
sbb
lahf
test
sub
jo
jmp
in
and
fidivrs
nop
mov
sbb
fnsetpm(287
js
cmp
sarb
jle
mov
out
pop
sahf
in
aam
mov
gs
mov
into
dec
mov
movsl
shl
jo
je
pop
out
sti
das
sub
sbb
jo
and
cmpsb
push
loopne
cmc
lock
pop
sub
sub
insl
in
mov
push
push
xor
jo
mov
push
rolb
jo
cmpsl
inc
lea
jo
jne
lret
and
loop
jo
xor
and
jo
test
jecxz
bound
je
sbb
jmp
sti
pusha
js
repz
xor
int
push
jecxz
shr
mov
add
pop
mov
sub
ds
dec
xor
addb
push
jo
mov
sub
sub
jo
and
adc
rol
inc
test
sbb
sub
sbb
inc
and
js
fcomps
popa
fwait
jo
xchg
lods
cmp
outsb
cmp
lock
es
push
loop
sub
xlat
jb
bound
popa
js
sti
push
mov
mov
sbb
mov
jmp
ljmp
xchg
adc
int
xchg
ja
add
fidivs
leave
adc
nop
xlat
call
fwait
ret
int
jo
and
dec
mov
imul
push
into
push
inc
jbe
cmpsl
jo
flds
jo
xchg
mov
sub
sarb
and
mov
or
mov
out
jo
pop
leave
inc
sbb
ja
or
add
ret
mov
jno
fadd
jo
mov
cmc
hlt
sub
scas
pop
fs
sbb
jo
dec
xor
mov
lods
adc
push
imul
sahf
roll
cld
inc
loop
fbld
aam
mov
rcrl
push
movsl
mov
dec
gs
data16
cmp
xchg
cmp
test
fs
push
in
xor
mov
insb
rol
daa
xchg
js
sub
dec
and
stc
and
or
shll
pop
in
inc
or
std
subb
push
jo
pop
fstpl
mov
jo
icebp
xchg
out
push
xor
jo
call
mov
in
xchg
or
mov
xchg
js
mov
dec
fisubrl
push
push
jnp
aad
jmp
push
imul
scas
lret
out
xchg
mov
push
jo
in
cmpsl
stos
cmp
jae
xchg
jmp
mov
adc
les
mov
sbb
inc
loope
enter
jo
addr16
mov
loop
jmp
insb
pop
shlb
pop
js
mov
adc
cs
std
pop
scas
outsb
movzbl
push
jo
jmp
fidivs
lea
jo
imul
and
mov
lds
shl
outsb
nop
jmp
icebp
dec
imul
loop
sub
jnp
and
add
jno
mov
or
fwait
xchg
xor
xor
mov
mov
inc
loope
andb
jne
ja
rorb
sbb
sbb
push
insl
pop
ret
into
out
xchg
mov
divl
addl
fildl
and
insl
fcom
aas
gs
cmp
mov
xchg
adc
in
shll
imul
inc
push
and
mov
rolb
shlb
adc
scas
jo
jge
push
xor
test
mov
pop
enter
or
add
mov
or
mov
jl
lods
js
dec
xor
pop
popf
add
dec
repnz
bound
lock
dec
jo
aaa
cmp
rcll
gs
and
fldl
jo
cld
sub
sti
in
mov
push
test
lds
je
scas
inc
mov
mov
scas
mov
stos
jo
push
mov
jne
test
dec
lods
enter
jo
mov
xchg
mov
bound
jnp
mov
mov
flds
push
stc
cmpb
xchg
and
jo
lods
hlt
or
std
mov
scas
sbb
movsb
loop
in
push
sub
pop
push
fs
and
pop
movsb
xorb
or
and
push
loope
push
jo
js
ss
sbb
or
jge
sub
adc
add
jo
push
lea
mov
push
push
jp
and
jno
or
xchg
ss
xchg
and
jo
lds
mov
jge
out
icebp
sbb
fidivl
pop
xor
test
push
les
sbb
mov
xchg
cltd
jo
adc
leave
in
push
dec
iret
je
and
mov
jo
or
scas
inc
mov
insl
shlb
jo
aaa
cld
leave
pop
mov
jo
push
hlt
lock
loop
mov
dec
cmp
pop
das
jmp
data16
daa
jle
dec
ss
rcl
icebp
adc
jo
imul
nop
push
push
push
sarl
pop
subb
test
dec
scas
jo
or
daa
adc
insl
jo
mov
sbb
xchg
add
repnz
movsl
sub
rolb
outsb
mov
pop
cmp
push
inc
xchg
psubb
push
dec
cmp
sbb
in
cltd
xor
jl
sbb
lds
jb
lods
cmp
leave
jns
in
pop
imul
sbb
jo
shrl
aas
out
fsub
jo
mov
aad
jo
add
cwtl
jg
adc
leave
add
in
push
movsl
and
xchg
jo
or
jge
int
into
repnz
inc
jp
je
ss
push
dec
clc
jo
in
push
sar
cmp
aam
add
add
out
data16
pop
jo
dec
cld
cmp
out
inc
xchg
das
roll
jmp
test
sub
jo
iret
jmp
mov
pop
jo
es
fs
mov
xchg
mov
rorb
repz
icebp
jo
and
scas
jo
xchg
shll
push
xchg
fildl
mov
and
js
or
sbb
mov
ss
mov
jo
dec
fs
add
loopne
and
test
out
xchg
add
aam
sub
js
addl
js
rcrb
leave
adcb
xor
lahf
ret
cmc
cld
sub
jecxz
lea
sti
lds
cwtl
sbb
xchg
push
add
movsb
test
cltd
ret
inc
sub
mov
ret
lods
imul
loope
and
add
inc
mov
fisttpll
cmp
sbb
xor
pop
cmp
pushf
add
lahf
and
jmp
js
mov
mov
jo
scas
in
cmp
test
jnp
inc
cmp
jecxz
jo
fdivl
mov
int
je
dec
push
addl
inc
je
jo
ja
loope
xor
cmpsl
repnz
jo
mov
ret
xor
add
xlat
jo
faddp
int3
cld
daa
jp
js
mov
sub
adc
push
cwtl
mov
int3
fs
ljmp
into
xor
clc
outsl
sbbl
lods
dec
cltd
insb
std
ja
pop
xor
cld
gs
mov
cmp
mov
stos
jo
lods
aas
in
inc
nop
inc
pop
jo
sub
rcrl
shlb
xchg
add
and
icebp
xchg
pusha
mov
sub
or
push
cs
loope
add
jo
and
leave
test
imul
repnz
push
xor
inc
lods
in
jl
addr16
sub
stos
xor
mov
fistps
mov
out
sti
shll
xchg
mov
cmp
sub
jo
and
gs
stos
in
cmp
sahf
int3
jo
mov
or
jo
adc
pop
push
scas
in
sub
cltd
jnp
test
push
adc
or
add
mov
push
pop
pop
les
jo
sbb
adc
scas
inc
cmp
mov
push
sub
adc
push
lret
mov
push
mov
out
xor
subl
scas
stos
dec
xor
or
aaa
repz
leave
sub
pop
xchg
jo
das
divb
jo
shl
push
xchg
addl
lds
aaa
lahf
jg
shll
cmp
xchg
jge
jo
shll
adc
aad
jo
sahf
icebp
mov
xchg
jo
gs
push
ss
lods
std
orb
lds
inc
jp
jge
jo
pop
mov
xchg
sbb
lret
test
lcall
add
cmp
cmp
mov
sbb
aam
and
js
mov
lcall
movsl
ret
add
outsl
loope
xchg
and
orb
xor
aaa
add
rclb
push
jns
sahf
dec
lret
cli
add
test
je
jno
jo
sub
adc
mov
mov
jae
inc
adc
repnz
nop
pop
jmp
jno
push
rorb
jo
xor
cmpsb
jnp
ss
xchg
lock
jb
mov
add
and
mov
cvtps2pd
sub
xor
add
hlt
sub
lret
adc
test
std
test
sbb
dec
adc
mov
jl
call
push
lret
insb
sbbl
sub
mov
jmp
sub
andl
mov
stc
jecxz
mov
stos
mov
xchg
fs
pop
das
and
jo
push
xchg
mov
mov
mov
cmpsl
mov
mov
ret
sti
leave
xchg
dec
test
cwtl
cmp
movups
sub
jle
xor
orl
test
iret
call
inc
xchg
cli
shr
pop
xor
pop
mov
ret
into
xor
adc
jmp
xor
dec
orl
and
jl
add
nop
lcall
test
ds
pop
jo
pop
les
push
inc
test
push
cwtl
dec
jo
rcrb
fucomip
jo
les
cli
jo
je
and
ret
imul
mov
jmp
xchg
mov
inc
push
dec
push
xchg
push
push
lahf
icebp
rcrl
iret
jge
repnz
inc
jo
je
xor
jo
push
lods
shll
xor
jo
mov
or
jo
add
xlat
mov
jle
push
test
arpl
xor
leave
idiv
xor
jo
fs
fimuls
and
nop
repz
loopne
mov
jbe
dec
rcl
cmp
xchg
outsl
lods
jl
out
mov
push
fs
inc
xor
bnd
popf
shrw
fdivrp
mov
push
cmp
inc
loope
out
mov
leave
and
scas
lods
jo
into
push
mov
adc
in
jo
jnp
ret
or
sbb
add
lcall
push
divl
sbb
shll
lds
pop
es
psraw
dec
and
jo
inc
inc
out
ret
movsl
lea
xchg
shll
lret
ret
pop
stc
inc
popa
aam
mov
bound
dec
data16
xchg
push
jo
push
mov
mov
aad
das
out
jo
cmp
sub
ret
repz
mov
fs
pop
push
popf
hlt
jl
adcb
and
je
jb
mov
cmovp
mov
mov
xlat
jo
push
addb
inc
or
adc
xchg
jae
push
sub
xchg
mulb
andl
sbb
mov
xchg
lock
xor
xchg
add
loop
jo
std
subb
mov
adc
jo,pt
pop
std
das
push
fwait
dec
sub
dec
jmp
cmc
dec
mov
push
xchg
push
ds
insb
mov
lahf
jo
aam
negl
jo
daa
and
bnd
adc
and
icebp
push
jo
in
mov
test
mov
pop
in
xor
inc
test
jne
jo
jno
or
popf
cld
xchg
rol
xor
shll
pop
jo
lret
inc
lcall
add
in
cmp
jg
mov
ljmp
jo
movsl
push
mov
data16
pushf
push
dec
jno
sbb
pshufw
xor
xchg
fistl
subb
pop
jo
fnstcw
lods
cmc
sub
jo
or
mov
inc
sbb
and
pop
and
jp
outsb
in
sub
fistps
popf
add
and
sbb
and
rol
inc
pop
add
push
add
adc
insl
mov
pop
data16
adc
xchg
jo
loop
push
dec
dec
lds
lcall
js
adc
daa
jo
cmp
sub
iret
xor
jo
dec
mov
jo
mov
loopne
mov
jo
cmp
aaa
push
sbb
ror
xor
lcall
dec
dec
jne
jmp
adc
loopne
dec
jo
adc
xchg
inc
popf
mov
xchg
ds
sbb
negb
sub
push
fdivp
rolb
jns
jmp
push
jae
mov
int
sbb
sbb
mov
jl
arpl
or
jle
mov
gs
loop
adc
fsubs
adc
out
xor
pop
cwtd
sahf
gs
jmp
enter
cmp
les
inc
mov
in
leave
pushf
repz
dec
jo
xchg
adc
nop
push
or
loope
push
jo
jae
icebp
or
mov
pop
stc
and
stos
pop
adc
push
add
mov
popf
pop
sahf
xchg
test
jle
je
testb
stos
pop
lahf
je
cli
fbstp
add
cld
jo
and
xor
adc
lahf
out
out
inc
jo
xor
mov
push
lods
push
dec
dec
jns
sahf
xchg
mov
in
fsubl
ret
inc
mov
out
xor
mov
std
push
mov
jmp
jo
les
shr
out
mov
fidivrs
add
jmp
das
xchg
jo
out
and
sub
mov
add
xor
cmp
jge
out
jp
addr16
jo
xchg
push
ret
in
xor
aas
sti
mov
mov
jb
adc
icebp
bound
movswl
push
cmp
repnz
out
sub
test
aad
mov
jno
push
loopne
ja
js
mov
cmp
lock
bound
test
ret
inc
shlb
nop
dec
lcall
ja
jo
xchg
aaa
pop
lods
pop
or
jo
push
add
xchg
lds
shlb
xchg
pushf
pop
jo
movsl
jb
push
js
pop
push
pop
push
lret
shll
pop
jo
xchg
int
out
dec
or
add
sub
mov
jne
xchg
jo
gs
inc
xchg
mov
lds
stos
push
push
jbe
inc
jo
add
lds
cmp
and
mov
sbb
push
dec
int3
out
leave
push
xor
jge
or
js
mov
dec
jo
adc
out
lods
mov
stos
jo
aad
inc
xchg
mov
shll
ljmp
cmp
xor
jo
fsts
inc
mov
jo
fdivrl
mov
pop
iret
mov
jo
dec
cltd
cmpsl
inc
es
jo
adc
outsl
daa
mov
negl
pop
jl
inc
dec
push
sar
jo
mov
pop
add
xor
and
push
lds
inc
cmpsl
jecxz
dec
sarb
xchg
sub
xchg
mov
mov
insb
fnstenv
lret
lcall
mov
inc
push
cmp
iret
add
sub
inc
fcomi
call
pop
and
subb
mov
mov
in
push
cli
xor
dec
pop
in
pop
jo
outsb
mov
or
inc
inc
add
jo
ja
clc
dec
xchg
out
pushf
jo
push
inc
mov
push
pop
cmp
add
rcll
stos
sbb
cmp
xchg
dec
jno
cli
jmp
sub
ror
mov
les
imul
cmp
mov
or
adcb
out
push
imul
add
add
pop
push
mov
jb
hlt
cmp
fwait
dec
and
loope
jo
std
sbb
mov
and
pushf
jo
add
and
fsubl
pop
xchg
int
test
mov
sub
sbb
in
jg
add
add
mov
mov
sub
pop
pop
sub
rorb
push
cmp
pop
push
lods
push
jo
pop
stos
jle
mov
dec
lahf
add
push
xor
mov
test
jo
lds
daa
repz
testl
sti
stos
push
adc
leave
xlat
nop
mov
sub
ja
in
pop
pop
fisttps
bound
push
popa
scas
mov
nop
sub
lock
cmp
fwait
push
outsl
add
xor
xchg
mov
mov
jne
jo
loope
ret
jo
inc
cwtl
pop
sub
vpshufd
jne
or
and
not
mov
pop
lret
cmpsb
mov
mov
jo
jae
pop
xchg
ljmp
rcrl
mov
mov
inc
fs
cli
jo
and
or
inc
mov
dec
ret
mov
and
xchg
daa
stos
jo
dec
cmp
filds
mov
jge
lock
rcr
inc
jo
push
sub
mov
sub
les
cmpsl
jo
arpl
dec
sub
cmpl
or
mov
and
std
out
mov
dec
in
mov
jo
in
sbb
or
jp
cmp
push
cmp
add
or
sarl
jo
inc
mov
cmp
xchg
jmp
in
mov
lds
cld
cmc
jo
mov
ljmp
add
pop
jo
cmp
fidivl
test
sub
out
xchg
scas
call
jmp
lds
jo
mov
cmp
xor
popf
inc
test
insb
rolb
add
jo
scas
lret
jae
lret
gs
fidivrl
push
jg
jo
lds
mov
data16
mov
push
push
out
sbb
fadd
hlt
inc
lods
sar
jp
mov
pop
fs
sub
jo
mov
jmp
or
jo
in
push
mov
push
stos
inc
fs
jo
outsb
xor
aaa
jecxz
mov
push
cld
test
dec
cmp
pop
pop
cmc
and
stos
add
xchg
push
in
add
insb
imul
mov
push
shrb
jo
jae
cli
dec
ret
adc
sbb
jo
fs
dec
stos
jo
dec
mov
jo
sub
xorl
xor
or
mov
jnp
push
lock
jo
addr16
iret
cmpsb
pop
sub
dec
pusha
push
ja
jmp
dec
mov
sbb
jo
loope
pop
or
jo
push
js
shll
andb
ret
loop
stc
jo
leave
dec
cmpsb
jb
call
dec
jo
test
jl
jge
pop
mov
sbb
jo
mov
jo
cmp
loop
dec
jo
repnz
loope
or
imul
in
xchg
jo
jmp
jo
and
in
je
or
testb
inc
inc
jo
pop
jle
test
adc
jo
xlat
and
add
lahf
imul
sub
int
mov
jp
in
sub
adcb
mov
or
inc
adc
sub
push
jnp
push
fs
hlt
or
jle
jo
push
enter
mov
sub
in
pop
jo
or
and
std
addr16
xor
nop
jns
sub
jo
lcall
sub
insb
xorb
xchg
imul
fmulp
xchg
dec
add
fbstp
out
stos
bound
push
jle
jo
pop
cmc
xor
jmp
popa
fadds
mov
adc
sub
sbb
dec
mov
mov
cwtl
vldmxcsr
dec
out
mov
jo
sbb
in
leave
push
loop
aas
jae
jo
lds
pushf
shlb
add
xor
mov
mov
test
imul
sysret
add
xor
jmp
mov
cmpsb
sub
mov
call
push
nop
jo
pop
dec
test
jae
jb
add
andb
lea
pop
scas
pushf
inc
inc
repz
and
icebp
add
mov
je
test
inc
gs
mov
ret
sarl
fs
jne
add
or
jo
or
mov
fstpl
in
push
jo
cmc
inc
jg
mov
sbb
xor
inc
inc
push
jo
cmp
and
mov
in
ljmp
jle
jne
jo
dec
ss
dec
stos
xlat
push
adc
mov
lret
out
or
std
push
and
and
popf
jo
push
scas
lds
jb
dec
pusha
push
pop
dec
loope
push
cltd
lea
cwtl
repnz
jo
movsl
mov
in
xchg
aas
mov
incl
jo
jbe
push
mov
lods
adc
pop
out
jo
xchg
iret
and
jo
add
ja
mov
xor
movsl
mov
mov
push
jo
cld
mov
out
iret
sub
fldenv
sarb
sub
push
test
jno
cmc
ss
push
out
jo
aas
addr16
bound
sub
iret
pop
mov
out
shll
test
mov
and
leave
add
xor
mov
xchg
cs
mov
in
sub
pop
cmp
push
lea
test
cmp
lret
mov
cmpsb
xchg
jo
lahf
pop
xor
dec
and
sbb
aad
pushf
ret
dec
cmp
push
rcrl
mov
pop
lea
in
jnp
jo
sub
popa
and
xor
test
rclb
dec
nop
test
fwait
pop
fsub
bound
les
sbb
cmc
push
or
inc
fwait
lods
imul
dec
leave
jo
jnp
out
shll
cmc
scas
mov
push
mov
cs
repz
mov
in
dec
cwtl
mov
movsb
push
ds
jns
inc
enter
inc
lret
jg
arpl
outsl
jle
jo
xchg
ret
xor
mov
ds
cld
mov
addb
sub
in
rol
dec
adc
mov
adc
xor
jo
sbb
jmp
inc
ret
xchg
adc
jo
fldl2t
jns
cmp
push
les
jecxz
in
mov
xchg
ja
or
call
leave
mov
sub
mov
clc
mov
sbbb
std
jo
popa
lods
jg
dec
popf
dec
jo
add
lcall
fnstcw
jle
jo
mov
pop
cmc
divl
shlb
jo
in
aam
cs
xchg
sar
pop
mov
or
jo
fidivl
push
int
xchg
mov
push
mov
mov
jo
lods
jae
xchg
cmp
push
sub
pandn
inc
jo
shl
ja
cmc
hlt
push
jo
jne
or
and
sar
mov
les
sub
jne
and
jnp
popf
pop
sub
repnz
inc
icebp
hlt
cmpl
xchg
add
mov
insb
fimull
jns
or
dec
fnstenv
push
mov
jb
push
into
jo
aas
push
jae
in
fsts
fs
mov
lods
dec
xchg
daa
jle
jo
popf
mov
mov
adc
push
leave
shll
inc
pmaxsw
in
stc
jo
outsl
dec
scas
push
push
xor
loope
jo
push
in
movb
jo
or
jo
mov
enter
dec
ficompl
jo
bound
loope
mov
push
sub
andb
cmpsb
scas
iret
cmp
and
jo
push
test
fildl
fwait
gs
fmull
pop
shl
jo
sub
fdivs
jp
mov
cmp
and
xor
mov
xchg
jo
int
insl
xchg
cs
mov
not
mov
aad
adc
js
loope
aam
jo
dec
pop
mov
xchg
fwait
jno
mov
dec
rdmsr
cmc
aas
jnp
jle
scas
ret
ja
mov
xchg
jne
les
fimull
mov
dec
xchg
or
mov
repz
arpl
push
in
bound
jne
call
js
jo
jge
dec
ds
test
mov
jb
notl
cmc
jo
sub
jecxz
mov
mov
push
jl
lds
lods
jo
mov
mov
cmp
cli
sti
mov
or
adc
mov
xor
loop
lds
inc
stos
jne
jne
mov
sbbb
xorl
cs
mov
jp
sub
cltd
mov
xor
jbe
sbb
stc
jp
pop
mov
and
jne
xchg
or
lea
cmp
call
lahf
jp
fxch
sahf
jnp
jmp
ret
jmp
add
ja
lods
jo
repz
std
fwait
into
hlt
cmp
nop
or
sbb
leave
divb
enter
into
mov
pushl
add
ds
adcb
int
ret
loop
lds
mov
adc
mov
push
mov
sahf
sbb
iret
jo
gs
les
popf
into
push
call
or
in
loop,pn
stc
mov
in
cs
dec
mov
das
jle
popa
sbb
ss
mov
es
insl
pushf
cmc
xlat
and
scas
in
ret
jo
movsl
js
lds
dec
inc
pusha
add
into
stos
cmpsl
imul
sub
jg
mov
jns
xor
insl
shlb
jle
adc
gs
push
and
jo
adc
les
sahf
add
sub
hlt
test
leave
mov
sbb
repnz
cmp
mov
popa
xor
xchg
dec
fidivrs
pop
xor
lods
or
insb
mov
outsb
incl
add
push
pop
imul
jo
pop
pusha
rorl
out
dec
push
xchg
mov
push
lret
dec
mov
nop
roll
sub
jg
jo
repz
sbb
sub
loope
dec
push
cltd
push
xorb
movsl
leave
or
xchg
out
repz
add
mov
gs
sub
mov
inc
xchg
das
repz
xor
pushl
inc
testl
jo
iret
lcall
xchg
loop
jo
xchg
ret
int3
fwait
or
arpl
push
push
jo
orb
pop
xchg
push
mov
pop
dec
push
scas
sbb
or
sub
orb
hlt
push
in
out
test
xchg
jo
aaa
int3
mov
push
mov
and
adc
jo
dec
and
clc
and
and
jo
push
inc
stos
mov
gs
in
cmpxchg
jg
dec
aas
addb
xor
push
cmc
cmp
jecxz
and
loope
test
imul
pop
cmp
add
mov
pop
bound
aaa
call
dec
pop
in
mov
inc
xor
mov
ret
lahf
stos
sbb
adc
push
lds
je
mov
dec
in
dec
das
add
push
daa
outsl
jecxz
pop
mov
xor
add
je
sbb
lea
jo
xor
fmuls
dec
sbb
cmp
cmpsb
cmp
arpl
leave
fisttpll
sbb
push
in
scas
out
add
xor
jo
fldenv
pop
jl
lahf
dec
jo
mov
jne
or
mov
js
add
xor
push
mov
shlb
inc
push
inc
sub
mov
push
cli
loop
push
jo
rcrb
enter
mov
mov
das
xchg
cmc
push
mov
movsldup
dec
aam
jo
dec
int
jo
aaa
test
lret
jo
fldt
clc
hlt
stos
cmp
out
jo
xlat
rorb
mov
jo
sub
pop
sub
push
pop
cmp
jae
mov
pop
jl
jp
scas
pop
das
or
or
out
fwait
js
popf
jo
xor
jo
enter
daa
test
jo
xlat
cmpb
lods
mov
sbb
popf
push
outsb
push
imulb
xchg
movsb
flds
test
sub
push
push
push
or
mov
xchg
pushw
jbe
aas
je
jecxz
mov
pop
and
mov
xlat
sbb
shll
mov
jo
push
sub
add
jo
xor
pop
jo
lds
shr
inc
mov
stc
cld
dec
pop
inc
jo
mov
inc
jbe
xor
subb
lret
shll
test
daa
jmp
xor
loopne
out
in
jo
jmp
das
sbbb
inc
jo
jmp
push
or
cmp
js
xchg
adc
inc
mov
push
out
sub
fistps
mov
or
aaa
jp
leave
shll
dec
hlt
mov
or
mov
stos
inc
xchg
dec
push
jo
push
lds
jnp
out
aam
repz
hlt
hlt
ds
dec
cmp
cmp
pop
out
bts
xchg
ret
jle
cmp
lret
inc
cmp
aas
push
insl
jo
mov
jle
jo
add
and
inc
inc
cmp
inc
sub
push
xor
idivl
jge
cmovs
pop
aam
popf
cmp
lock
test
aad
or
ret
sub
arpl
jge
inc
push
in
sbb
gs
xchg
push
mov
mov
dec
popf
adc
ljmp
or
test
add
mov
test
jno
data16
lret
imul
push
jp
sub
div
jo
adc
and
mov
xlat
or
test
push
xchg
jge
and
stc
jo
mov
inc
adc
mov
mov
fbld
insl
ret
jo
pmulhw
mov
cwtl
dec
scas
lds
movsb
sti
cltd
adc
sbb
mov
arpl
int
test
jo
mov
imul
pextrw
sbb
icebp
and
xchg
sub
int
mov
out
xor
jo
inc
gs
inc
pop
inc
loopne
mov
pop
xchg
push
inc
jl
sbbl
imul
arpl
push
dec
jbe
add
shrl
lcall
and
inc
js
stos
or
cmp
jo
es
adc
aaa
notb
les
mov
push
mov
into
out
push
xchg
jecxz
addr16
adc
adc
adc
mov
lea
push
test
sbb
sbb
int
sahf
hlt
jbe
and
ss
mov
stos
jae
int
sub
jb
mov
jle
nop
dec
or
or
ja
test
lods
pop
shll
das
push
aas
repz
add
dec
shlb
dec
sub
mov
mov
cmpb
cmp
ret
ss
add
repz
push
loope
cmp
mov
daa
test
jo
outsb
xchg
imul
push
fcoms
leave
repnz
jo
mov
sub
jae
jo
and
scas
outsl
dec
sti
sub
cmpb
pop
lods
mov
jo
cmc
nop
and
adc
dec
adc
push
call
jo
cmp
fisubrs
xchg
jo
shll
pop
adc
lret
rcrb
mov
add
adc
ss
sub
ljmp
xchg
enter
jo
ret
pop
xor
jecxz
xchg
mov
aas
jo
lds
xor
mov
inc
mov
jecxz
arpl
jo
fsubl
jo
cmpsl
xor
fidivrs
cmp
leave
push
js
cld
fldcw
inc
dec
out
xor
jl
dec
mov
mov
mov
xchg
jmp
jnp
inc
subb
add
rorl
lock
mov
setno
sub
jl
rorl
xor
add
push
mov
pop
mov
or
sarb
das
sahf
js
js
addr16
jg
in
dec
je
push
push
sbb
jecxz
cmp
push
and
mov
adc
aaa
jo
addr16
cmp
xor
shl
hlt
data16
jo
jo
stos
orl
ret
jp
push
xor
cli
jo
xor
push
fdivl
mov
pop
sbb
ret
test
leave
loopne
jge
pop
push
dec
mov
sbb
add
mov
mov
sti
and
push
stos
lock
mov
inc
jmp
daa
fnsave
mov
jbe
test
test
addb
mov
jo
or
lds
mov
stc
jo
call
in
lret
xchg
xorb
hlt
mov
leave
jg
in
dec
outsl
jno
call
add
xchg
lahf
jg
jo
jmp
xor
mov
pop
mov
je
test
jo
adc
in
sub
je
jo
mov
mov
cmp
mov
cmpl
sub
dec
dec
sbb
jns
sub
jo
or
es
jecxz
cmp
xchg
and
mov
jo
insl
adc
pop
mov
mov
mov
jo
xor
fstl
jmp
jle
outsb
stos
lds
push
sbbl
mov
push
or
jo
lea
lds
mov
pop
mov
rorb
jg
cwtl
js
cmp
fnstenv
inc
dec
jnp
inc
push
rorl
xor
xchg
cli
jbe
lods
dec
pop
xor
lock
dec
add
jo
dec
xchg
xor
in
daa
int
cmp
out
cmp
adc
fimuls
jecxz
sbb
jns
mov
or
stc
add
xchg
jo
mov
movsl
add
mov
dec
inc
cmp
push
push
nop
cmp
shl
stc
jo
pusha
mov
pop
adc
cwtl
jmp
and
nop
bndstx
or
movsb
adc
push
jo
lods
mov
add
pusha
lds
lret
repz
dec
xchg
data16
ss
loopne
in
insl
mov
push
push
cmpsl
xchg
dec
lret
mov
mov
popf
mov
leave
clc
dec
insb
push
loope
rcrb
js
nop
rolb
xchg
inc
std
call
jae
enter
jo
hlt
push
cld
into
lods
addl
js
int
mov
xchg
test
dec
mov
jl
jns
adc
addr16
sti
jo
push
std
add
jo
in
lret
sbb
subl
fadd
bound
xor
repz
or
jo
pop
mov
push
mov
lcall
jo
sti
pop
dec
mov
cmpsl
pushl
cmpb
pop
and
movsl
inc
jbe
je
push
push
jns
clc
jne
jge
sub
nop
jnp
sbb
negb
int
loope
jo
jmp
cmp
dec
cs
mov
pop
jo
inc
lret
scas
add
test
out
push
and
jmp
mov
jo
pop
ss
fmuls
push
int
rorl
loopne
push
dec
shll
jb
shrb
lock
iret
cmpsb
dec
xchg
cmp
sbb
sub
idiv
loopne
arpl
xchg
mov
push
mov
lock
pop
sbb
adc
jge
cmp
cmc
jnp
inc
mov
inc
sub
ja
sbb
repnz
jo
jle
rcrl
add
mov
mov
push
push
and
mov
and
sbb
shll
daa
into
pop
jg
add
push
cmp
xor
inc
xchg
mov
icebp
insl
into
lea
sbbl
cmp
leave
scas
cmova
add
or
je
xchg
sub
jb
xor
prefetcht1
addr16
fldt
mov
cmp
jae
push
scas
andb
shll
mov
out
out
leave
mov
sahf
jo
ret
int3
hlt
add
ja
jo
sbb
vmovhps
lock
cli
xor
inc
push
jae
inc
mov
sbb
jmp
shl
jo
into
repnz
jo
loopne
aaa
ret
in
out
lds
adc
fadds
int
dec
stos
loopne
mov
les
pushf
push
lds
and
or
outsl
sub
mov
cmp
xchg
jno
nop
aam
jno
lods
outsl
js
add
lss
cli
loope
jle
cltd
inc
sub
push
xlat
xor
mov
pop
sub
inc
push
adc
cmp
aad
jge
inc
add
pop
mov
adc
stos
jo
fstpt
push
testl
xor
mov
loop
mov
cmp
mov
inc
xchg
and
insl
test
xchg
loopne
jno
test
clc
push
out
cmp
pop
sbb
jo
aaa
jmp
jo
and
lds
arpl
inc
jo
pop
fisttpll
fdivl
jnp
int
addb
push
out
aas
movsb
daa
xorb
outsl
ja
int
jmp
or
enter
xor
inc
nop
jmp
int
adc
js
aas
mov
scas
test
jo
jnp
jge
fdivs
ror
push
push
mov
leave
dec
stc
dec
add
xorl
push
jmp
hlt
into
insb
add
mov
sub
fdivrp
push
xchg
mov
mov
mov
das
jae
ror
test
inc
xor
jb
or
mov
out
and
xchg
jo
das
int
dec
outsb
test
xor
jo
roll
ret
lods
in
das
cmp
stos
dec
mov
lahf
inc
addb
xor
jo
or
pop
jp
jo
push
pop
inc
adc
add
jo
fnsave
out
add
sub
fldcw
outsl
lods
jo
cmpsl
cmp
pop
cli
sub
movsb
cmpsl
arpl
insb
pop
leave
mov
mov
stos
out
inc
inc
js
jne
imul
sbbl
push
xchg
jo
jb
xor
leave
test
jo
data16
movl
push
push
jg
addb
mov
mov
sub
sub
outsb
pop
jo
mov
sbb
dec
mov
mov
inc
and
mov
mov
xchg
pop
mov
mov
jo
rcr
cs
inc
jo
push
dec
leave
and
adc
rcrb
ret
jo
sbb
popa
cmpsl
or
pusha
movsb
iret
mov
push
push
mov
xor
inc
rcll
push
jno
neg
ljmp
dec
out
sbb
in
lock
movsb
cli
aad
mov
jmp
shrl
icebp
jb
adc
stc
lds
cmpsb
jnp
xlat
pop
pop
inc
loope
push
je
jo
rol
jne
pop
xchg
xor
pop
push
jecxz
loop
andb
das
scas
push
push
xchg
ret
out
xlat
jb
insb
test
jo
sbb
sub
push
adc
xchg
inc
lret
mov
and
xor
mov
hlt
das
jl
sbb
mov
mov
push
daa
lahf
jmp
jne
jo
shr
mov
mov
mov
dec
insl
fdivrl
jo
pop
lret
cmp
sub
jo
int
add
mov
popf
pop
jo
je
daa
lret
xchg
call
pop
xchg
out
jo
jmp
ret
sub
pop
mov
sub
int
lret
int3
xor
adc
rcll
iret
dec
cmp
ds
jo
inc
test
or
ss
lahf
out
leave
sub
mov
mov
adc
push
sbb
add
cmpsl
jo
loope
call
shl
sub
bound
outsb
movsl
xchg
xchg
mov
jo
aad
into
pavgw
in
xor
lds
sub
jnp
push
pop
outsb
cmpsl
jmp
inc
cwtl
xchg
dec
jmp
insl
hlt
sbb
jo
out
mov
cmp
mov
in
adcb
cmc
dec
jo
aaa
shl
xchg
jo
and
imul
dec
lock
xchg
jecxz
mov
push
iret
xor
fs
and
jb
test
gs
jecxz
ds
mov
mov
jmp
lret
cld
aaa
add
leave
jo
in
jb
sub
mov
or
mov
lahf
xor
adc
xchg
add
push
shll
dec
mov
mov
iret
pop
push
in
outsl
and
hlt
push
push
pop
mov
push
jo
mov
pop
add
mull
subb
cmpps
or
adc
int
mov
repz
shrl
negb
jo
jl
jno
mov
or
pop
xor
cwtl
lahf
jo
lds
xchg
cmp
ja
fs
lods
or
dec
test
ja
mov
mov
mov
jo
stc
fdivrs
sub
stos
mov
fcompl
je
fisubrl
inc
repz
or
xlat
imul
mov
int3
icebp
xchg
mov
dec
xchg
pop
xor
pop
cmc
shlb
sbb
cmp
ret
shufps
pop
mov
out
jo
fcomi
dec
out
leave
lret
ret
jno
pop
movsl
rclb
pop
movsb
loope
jmp
xchg
lds
js
shlb
push
xchg
cmp
mov
insb
pop
mov
mov
push
fistpl
in
pusha
adc
add
mov
js
inc
mov
sti
cmp
outsl
jo
mov
jbe
iret
sub
mov
ret
test
or
leave
and
jo
push
cmp
sub
je
lods
mov
push
jo
sbb
into
add
push
mov
aaa
cs
mov
xor
jo
ret
jbe
jge
jo
in
ss
shll
or
add
lea
xchg
lds
dec
test
jo
popa
xchg
cmp
jo
sbb
jp
and
sub
scas
sti
repnz
sub
adc
xchg
int3
cmp
or
and
test
int
lock
xor
cwtl
jae
subb
adc
addb
jbe
ret
push
mov
jnp
jo
cwtl
mov
xchg
inc
les
xchg
jo
test
in
out
popa
scas
or
dec
gs
js
in
jecxz
and
enter
imul
mov
xor
add
or
adc
push
mov
xchg
ret
arpl
mov
push
int
xchg
lcall
push
test
add
and
into
repnz
fstpl
jmp
sbb
inc
lret
jle
mov
sub
fcompl
cli
and
mov
xor
adc
or
xlat
push
xchg
outsb
mov
pop
mov
test
fs
hlt
adc
inc
xchg
jo
mov
jle
jle
jo
jl
sbb
arpl
out
and
leave
xor
mov
aam
dec
jmp
jae
xorb
and
popa
push
xchg
xchg
xchg
leave
daa
bound
mov
add
jo
push
aas
ljmp
sarb
or
sbb
inc
xchg
and
inc
decb
xchg
push
sub
insb
addl
add
xor
jo
lods
in
or
inc
ret
mov
add
mov
cwtl
cmc
ja
jp
sysenter
pop
popa
stc
jl
inc
cmp
sbbl
test
jo
push
shl
mov
test
popa
hlt
xor
mov
lds
or
mov
xchg
int
adc
push
ret
sbb
loope
sub
xor
jo
repz
hlt
daa
frstor
lds
mov
scas
pop
xor
jo
pop
push
xchg
add
xorl
fstl
jae
mov
xor
repz
jo
push
fistpll
outsb
push
ret
adc
lret
xorl
lock
inc
lds
lods
pop
dec
mov
or
jle
mov
sbb
pop
push
sahf
bound
insb
aad
sti
mov
push
jmp
shll
sub
jl
hlt
fsub
mov
or
loop
push
jo
push
sub
cmpl
pop
lcall
jo
mov
xchg
lret
or
mov
jne
loop
add
dec
push
cltd
bound
rcr
fiadds
add
hlt
shll
adcb
inc
xchg
pop
jo
into
std
dec
popf
and
dec
and
jo
ds
ja
mov
jl
les
out
adc
inc
xchg
sub
negl
sub
test
push
aam
aad
sub
js
fidivl
sub
jle
ss
xchg
add
dec
popf
les
loope
sbb
rcr
add
pop
fstp
add
and
mov
mov
and
mov
dec
or
fs
dec
adc
out
gs
inc
leave
jo
or
shrb
dec
nop
mov
outsl
sbb
sbb
mov
push
add
xor
data16
pop
jo
idivb
pusha
rol
or
and
dec
fnsave
scas
push
and
sub
inc
insl
ret
xchg
cmp
xor
cmpl
gs
jl
xor
imul
jo
movsl
int3
adc
mov
jo
ror
lods
test
add
mov
pop
ja
loop
stc
jo
inc
sarb
in
jae
mov
cmp
jo
lret
leave
stos
push
andl
cltd
jae,pt
push
clc
push
sub
std
aam
aad
loop
jae
mov
push
ret
jle
jo
ljmp
jo
ret
jl
in
jo
popf
push
lock
pop
cmpsb
xorb
adc
icebp
jmp
jecxz
cmp
mov
mov
cmpsb
and
je
sbb
movsl
ret
or
gs
repz
imul
push
aad
mov
add
roll
jo
addr16
cmp
dec
push
jo
stos
jp
out
pop
jmp
out
sub
jno
inc
xor
mov
push
inc
addr16
jo
jmp
je
sub
insb
push
arpl
mov
fdivs
orb
loopne
sub
jo
push
mov
cld
or
fs
jo
inc
cmp
sub
or
js
or
stos
mov
jo
mov
shlb
cltd
jp
popl
jbe
ret
and
fwait
dec
add
movsb
inc
pop
lds
jo
cmp
cwtl
int
test
imul
inc
mov
or
popa
adc
in
imul
push
dec
mov
into
lcall
shll
push
xorb
jl
inc
and
jo
sbb
lds
add
lock
cmp
sub
push
adc
shlb
dec
jo
jecxz
cmp
xchg
ret
dec
jo
pop
int
adc
hlt
das
cmp
sahf
ret
ret
xchg
cmc
sbb
ljmp
in
add
lds
dec
rolb
pop
xchg
loop
bound
add
cmp
std
gs
push
lret
jg
jl
add
dec
xchg
insb
mov
inc
fs
jp
into
cmpsl
ja
fs
test
push
jg
xlat
xchg
sub
jne
push
push
daa
pusha
mov
in
xchg
ret
push
test
cmp
ja
pop
push
insl
mov
mov
movsb
call
test
mov
jo
or
aas
jo
imul
cli
mov
jmp
mov
push
inc
sub
cmp
je
jmp
fisttpl
insb
adc
cmpsb
add
and
inc
xchg
mov
int3
scas
fisttps
hlt
out
cmpsl
dec
hlt
inc
push
or
jae
add
push
fs
mov
dec
int3
push
push
jo
mov
jmp
sub
outsb
mov
or
jle
push
stos
mov
push
cmp
jnp
data16
outsl
sarl
add
or
inc
xor
add
popa
jmp
cmp
leave
xchg
cmp
push
push
stos
jno
loope
inc
xor
jmp
daa
add
mov
or
lea
pop
ret
sbb
push
jmp
add
push
xchg
push
les
and
pop
mov
ja
sbb
test
xorb
inc
les
lret
mov
shll
xlat
add
imul
leave
dec
out
jns
insl
or
out
push
cmc
jo
into
sbb
inc
aam
mov
push
leave
mov
jp
jo
xchg
pop
sub
repz
push
popf
repnz
push
or
lds
mov
xor
or
les
rclb
and
jo
fs
hlt
lea
sbb
and
shrl
jo
test
filds
push
ret
cmp
jo
lds
push
repz
push
sbb
sub
jo
push
movsb
sub
push
add
stos
jbe
loope
repnz
roll
push
xchg
cmp
pop
fcomip
jne
leave
xor
lea
sti
jb
push
jae
outsb
cmp
and
mov
inc
aam
jle
pop
and
call
jle
mov
inc
nop
or
js
cmp
mov
insb
mov
das
xchg
mov
gs
jo
cmp
nop
mov
lock
or
jb
xchg
outsl
lea
pop
jnp
outsl
ja
jo
movsl
add
sub
in
adcl
sbb
sbb
les
fcmove
adc
jo
or
cld
jo
xchg
pop
jge
fstp
push
scas
xor
lcall
jle
out
push
add
arpl
pop
sbb
sub
lods
inc
pop
adc
xor
leave
jns
push
fs
inc
inc
inc
pop
jo
fimull
sti
shl
xchg
lds
jo
cmp
jge
mov
int3
add
bound
insb
mov
sub
mov
ret
xorl
cmp
and
push
fwait
mov
inc
or
adc
jge
pop
cmp
cmc
push
push
jl
lcall
gs
xor
push
jne
inc
imul
push
out
adc
jle
jo
cmp
jo
pop
pop
loope
mov
dec
cmp
rcl
xor
testl
jo
int
es
aam
insl
inc
push
jo
xchg
out
enter
jo
imul
jae
fistl
add
lcall
jo
mov
mov
jo
xor
pop
jo
pop
mov
cmp
mov
push
icebp
adc
pushf
dec
hlt
add
aad
fldenv
lds
aam
jmp
std
jo
rcll
mov
inc
dec
jo
je
ret
push
cltd
jo
aas
popf
push
mov
lahf
inc
jo
jmp
in
ret
dec
jo
subl
xchg
pop
leave
jo
movsb
fidivrl
add
fs
das
mov
dec
mov
mov
jo
out
or
cmpsl
mov
push
dec
fsts
mov
jo
mov
nop
inc
mov
dec
pop
xor
add
cmpsl
push
jbe
clc
adc
leave
insb
mov
push
pop
fstps
hlt
out
ds
or
jno
lods
jge
scas
addr16
cmp
data16
lea
jo
loope
xchg
mov
xchg
xor
lds
lahf
fbstp
call
aad
stc
sub
cmc
loop
or
lds
pop
jmp
imulb
jo
xor
mov
push
rcll
dec
push
fildl
data16
jo
ret
fdivrs
divb
sub
mov
sar
jo
fbstp
hlt
sub
inc
out
mov
lods
jo
outsb
mov
jle
mov
mov
aas
jo
ja
mov
jo
ror
iret
mov
enter
arpl
cmp
pop
fwait
pmulhuw
int
push
insb
xlat
jmp
fwait
jo
pop
scas
ret
mov
jo
cmp
mov
or
push
mov
jmp
pop
enter
lds
jle
and
xorb
dec
mov
cmpb
movsl
jns
jmp
mov
fmuls
jp
out
jb
jo
cmp
adc
fnstenv
shrb
jae
les
insb
addb
sbb
jmp
jo
mov
mov
imul
inc
xchg
shrd
cmpsb
mov
cmp
insl
sbb
int
sbb
int
mov
int
xor
adc
adc
adc
cmp
xor
xor
dec
test
dec
xchg
jo
jecxz
mov
in
xor
jo
inc
mov
popl
hlt
push
jo
aaa
inc
cmp
push
push
xor
pushf
insb
cmp
loopne
mov
ror
sub
xor
sub
test
xchg
pusha
imul
push
in
lcall
scas
flds
aas
ret
imul
mov
cmpl
jae
lds
dec
push
je
sub
insb
hlt
xchg
bound
push
mov
andb
sahf
jge
jo
out
dec
scas
cmp
inc
addb
scas
inc
adc
pop
cmovge
xchg
add
pusha
jo
xor
sub
sahf
cmp
jmp
in
and
xor
sbb
xchg
data16
nop
repnz
push
negl
push
loopne
je
xorl
mov
add
ret
es
jo
fcomi
aas
xlat
in
cmpl
test
mov
test
jo
mov
andb
dec
xchg
mov
enter
ret
xor
jge
jo
or
xchg
jo
out
xchg
leave
scas
int
jo
repz
push
push
and
xchg
dec
cmpsb
lcall
fsubl
cmp
adc
pushl
xchg
mov
jp
adc
or
sub
sbb
xor
ss
jb
push
fs
jmp
mov
je
sub
add
xchg
jle
sub
js
cwtl
leave
mov
lsl
xor
jo
repnz
lods
jo
sub
into
pop
add
roll
cmp
das
push
cmpl
push
lock
sub
popa
stc
arpl
int
or
outsl
xor
gs
adc
ret
cmc
cmp
fs
cs
jo
sbb
add
or
jno
nop
fcmovnb
stos
repz
mov
iret
mov
movsl
stos
pop
leave
out
rol
jo
cmpsb
ret
adcl
jo
inc
shll
cmp
inc
jo
call
xor
adc
nop
std
lret
adc
ret
nop
xchg
jecxz
jo
cmp
xor
cld
pop
jo
decl
call
jo
das
shll
fildll
punpckldq
pop
je
sbb
movsl
inc
sti
inc
xchg
inc
push
shll
shlb
cmp
push
jge
in
js
cmp
adc
pop
das
mov
sub
adc
cld
test
cltd
divl
fwait
sti
pop
xchg
and
outsb
shll
push
push
mov
xor
jo
jl
adc
lods
repz
jo
int3
fadd
push
or
jo
jle
rcr
cmp
adc
es
mov
sti
clc
leave
aas
xor
shll
dec
xor
lds
jo
movsl
xchg
popa
testl
ret
out
xchg
shlb
js
jg
out
icebp
add
cmp
jle
xchg
out
cli
jo
lods
cltd
leavew
pop
jo
cmp
and
mov
mov
adc
lahf
jo
lds
sub
orb
jp
fs
test
popaw
jo
fsubrl
imull
jns
jo
jl
mov
loope
jnp
pop
jo
pop
mov
push
pop
xlat
lds
add
xchg
insb
add
subl
gs
mov
and
sbb
addr16
movsb
insb
int
xor
fisttps
xchg
jbe
std
xor
adc
push
mov
lahf
jo
enter
mov
dec
mov
jo
sarl
lods
push
fwait
jmpw
adcb
popa
sub
loop
and
test
movsl
dec
subb
fbstp
adc
shlb
hlt
in
mov
adc
or
aaa
fs
movsl
push
ret
jmp
aad
test
xchg
pop
iret
or
adc
js
insb
movsl
lods
push
int3
sbb
sub
mov
ret
lcall
jne
push
je
out
shrb
icebp
sub
lahf
push
fistpl
jo
fcmove
mov
mov
not
jo
enter
jmp
outsl
nop
pushf
ljmp
es
sahf
call
std
leave
fwait
and
cmpsb
pop
loopne
dec
or
sbb
jo
gs
fidivl
xlat
mov
fldenv
jo
mov
test
xchg
lds
rcrl
push
addr16
mov
lea
jo
sub
xchg
lods
sbb
mov
jae
jl
es
cmp
pop
jbe
shrl
pop
push
fwait
add
jp
lods
or
aaa
cld
xor
pop
mov
jmp
ss
jo
addr16
jmp
frstor
or
or
mov
sub
cmpsl
or
shll
cltd
cli
into
jge
jo
mov
jbe
jo
icebp
rcl
xchg
ret
adc
xchg
test
jb
push
jo
sub
sub
and
mov
jbe
jo
imul
lds
push
xor
cmp
dec
int
mov
or
mov
inc
push
sbb
xchg
dec
mov
jo
dec
bound
jl
sti
adc
cli
arpl
jmp
xchg
inc
push
mov
js
call
popa
mov
jne
shll
pusha
mov
rolb
inc
mov
push
adc
test
aas
clc
mov
shll
nop
pop
adc
push
ret
jecxz
jo
xor
testl
ja
fsts
jmp
movsl
inc
add
jl
mov
mov
pop
lret
add
out
push
fwait
das
aad
jo
adc
mov
ljmp
xorl
cmpsl
adc
inc
sbb
push
cmc
jp
aaa
ror
cmp
push
cmpsb
dec
ds
rcrl
movsl
cmpb
jo
mov
gs
adc
or
imul
sbb
loop
jo
jmp
dec
hlt
or
je
jns
gs
and
std
in
jo
push
in
mov
inc
es
jge
cmpb
push
leave
adc
cmpb
pop
xchg
imul
psrld
mov
jmp
sub
mov
popf
push
xchg
sahf
test
lcall
lret
jp
xchg
sbb
in
repz
sahf
std
inc
fcmove
push
scas
into
ss
rorb
movsl
and
fidivrs
dec
xorb
adc
scas
push
adcl
jo
sub
stc
xchg
jo
les
jge
inc
lret
daa
adc
mov
mov
imul
mov
test
ror
ds
nop
not
pop
inc
fidivs
jo
sti
jg
adc
lea
push
js
inc
pushf
inc
das
shll
dec
push
test
lods
mov
stos
dec
mov
lds
mov
xchg
cs
sub
push
mov
cmpsb
sub
loopew
lcall
leave
pop
clc
fstpl
roll
dec
mov
in
fdivrs
jg,pt
xor
mov
repz
adc
sub
orb
lds
sub
mov
sarl
pop
fnstsw
shll
push
mov
dec
push
xchg
xorl
ss
push
sub
fwait
jae
nop
push
xchg
sub
jae
lret
jo
mov
inc
es
mov
jle
leave
sub
xor
mov
out
cmp
leave
movsb
shrd
jae
sbb
loope
xchg
or
jo
inc
int3
out
mov
push
jo
ret
ret
push
dec
in
mov
aad
push
jo
xor
inc
mov
sbb
push
adc
jo
mov
ret
sub
sarl
add
jge
jmp
xor
jo
ds
or
xor
ja
jmp
fimuls
scas
pop
enter
jo
and
jo
rcll
or
arpl
gs
dec
fmull
shrl
sbb
lds
push
jg
mov
cmc
lahf
loope
inc
mov
and
push
jg
jmp
sarb
jo
sarl
jo
aad
jne
vpshufhw
pushf
pusha
outsb
lods
orl
push
mov
out
dec
xchg
nop
pop
push
push
sub
ljmp
xor
xorl
nop
in
adc
mov
pop
jno
and
les
jmp
lea
add
ret
movsb
jo
loope
fwait
mov
nop
pop
sti
shrl
jae
pushf
cmp
mov
inc
add
int
stos
jo
cmpb
xchg
insl
mov
imul
cmp
sub
mov
js
cmc
aaa
clc
inc
bound
or
push
movsb
or
jo
out
and
stc
in
jo
add
leave
imull
dec
xchg
in
jo
mov
push
mov
xchg
mov
dec
mov
push
rcrb
jo
pop
mov
repz
loop
pusha
xchg
jo
jno
xlat
ds
cmp
arpl
out
fstpl
mov
lock
xchg
mov
je
inc
sub
sub
sbb
adcb
xor
bound
les
nop
loope
xchg
cld
orl
adc
sahf
sub
rclb
hlt
ret
data16
cmpsl
inc
cs
and
sbb
sbb
sub
lret
and
sub
jo
inc
hlt
mov
lds
out
mov
daa
jo
jne
je
and
push
xor
sbb
cmpsb
into
out
mov
mov
test
lds
jbe
nop
pushf
out
nop
push
xorl
xor
outsl
xorb
lds
lock
hlt
cmc
in
fs
jno
adc
dec
or
push
test
sti
repz
roll
jns
jl
leave
cmp
or
sti
jl
repz
or
jmp
mov
inc
mov
pusha
dec
adc
pop
hlt
adc
mov
sbb
xlat
insb
sub
lods
adc
loope
aas
lahf
out
js
ss
leave
icebp
add
das
xchg
or
mov
enter
jle
out
dec
arpl
ret
xchg
mov
mov
xchg
nopl
xor
jo
pop
lds
nop
shl
xor
mov
fadds
test
shrb
and
jo
ret
sbb
lock
xorb
dec
sub
cmp
es
push
jmp
add
leave
mov
jo
jno
add
dec
dec
clc
sub
jb
sbb
andl
stos
jo
push
in
inc
lods
jo
sbb
sbbl
std
jo
data16
pop
xchg
push
jo
dec
lds
cmc
jp
jge
aaa
or
pop
pop
push
xor
jg
xchg
dec
jo
mov
loopne
jo
cmp
mov
shll
cltd
inc
pop
lds
xchg
jle
mov
dec
mov
xorl
jno
addr16
pop
cld
lock
lret
addb
out
das
mov
repz
sub
test
insb
mov
scas
jo
xchg
push
mov
inc
xchg
das
icebp
sbb
ret
jo
gs
lds
add
scas
add
jb
shl
test
int
ficomps
jno
data16
pop
in
jo
movsb
insl
pop
dec
add
lea
shl
push
pop
leave
jns
and
test
adc
xchg
push
jo
sahf
dec
ret
jo
or
aas
in
div
dec
adc
jo
inc
and
pop
push
adcl
or
dec
push
xor
les
in
mov
lcall
shll
clc
or
hlt
imul
jne
andb
fistpll
js
inc
popa
jle
lret
push
rolb
aas
cmpsl
mov
lods
dec
pusha
sub
pop
add
push
pop
or
out
jo
or
push
xchg
cmp
fnstenv
subl
pushf
and
push
push
loope
pop
fnstcw
jbe
femms
clc
in
sbb
push
and
hlt
imul
jo
scas
sbb
xor
jo
jns
ret
xor
mov
rorl
push
hlt
sub
jo
out
bound
sub
je
cmp
cmp
gs
xchg
push
testl
cmp
inc
aad
mov
ret
push
mov
push
dec
jmp
adc
imul
cmp
jb
sbb
int
adc
lea
lret
or
lcall
sbb
outsb
cmp
push
ret
and
dec
push
stos
mov
cs
aaa
push
mov
mov
xor
jo
mov
test
fldenv
test
mov
lahf
inc
dec
aad
cmpsl
scas
mov
push
jo
or
sub
enter
xlat
shll
inc
sub
sbb
push
jo
movsb
jp
xor
int
or
dec
add
nop
les
outsb
bound
lds
lods
adc
jo
sbb
mov
clc
mov
pusha
mov
cmp
out
cmc
aas
and
int
push
add
mov
cmp
add
rcrl
cmp
ret
aas
ficompl
adc
push
bound
lods
jo
sub
push
jo
ret
in
cmp
shrl
pop
je
jge
jo
pop
mov
ja
arpl
testb
dec
or
add
andb
add
movsl
mov
fwait
xchg
push
xor
fistpll
cmc
push
push
popf
icebp
sbb
es
call
xor
inc
ds
jo
imul
mov
jo
jg
orb
jo
xor
push
mov
jp
jo
dec
sbb
stos
shl
mov
int3
xrelease
sub
lret
xchg
call
mov
add
dec
pop
xor
arpl
or
jns
push
dec
cmp
push
bound
nop
xchg
pop
mov
lcall
stc
std
push
jo
leave
add
enter
inc
jmp
nop
xchg
pop
sub
scas
add
inc
jne
fcompl
mov
or
subl
mov
clc
jnp
int3
add
jo
mov
dec
scas
jo
push
shl
jo
out
dec
push
std
mov
inc
push
push
jne
jo
hlt
xor
and
jo
enter
repnz
add
or
jmp
cmp
fs
stos
jo
leave
bound
and
jnp
pusha
add
sub
xor
push
cmp
das
cmc
lret
sarb
xor
push
sbb
es
or
mov
lret
jo
cmpsb
sbb
shrd
or
decl
mov
cmp
add
jmp
sti
push
xor
mov
add
inc
addr16
lds
cmp
push
addb
arpl
into
inc
sub
add
leave
mov
outsb
mov
inc
bound
or
sub
call
jmp
inc
xchg
push
test
adcb
jo
mov
ret
iret
mov
jmp
mov
add
lds
mov
or
sarb
int
xchg
cld
mov
push
aad
mov
fbld
jmp
fmulp
or
scas
or
nop
or
mov
test
xchg
jb
sahf
xor
into
js
leave
cwtl
cli
fidivs
imul
mov
sub
sub
popa
mov
cmc
pop
adc
sti
lret
sbb
and
out
inc
jo
add
out
sub
rol
add
shll
aas
out
mov
sub
mov
sbb
xor
mov
daa
lock
arpl
aam
aad
in
jle
pop
mov
bound
lds
fwait
and
roll
ja
lock
push
lds
cld
icebp
pop
mov
pusha
xlat
imul
das
enter
jb
jo
inc
cmp
xor
add
negb
hlt
ljmp
cli
fsts
add
push
scas
inc
ss
jo
sub
add
out
shlb
lret
dec
arpl
enter
add
scas
xor
imul
xchg
js
or
in
ret
jo
ret
sub
jo
movdqu
pop
into
add
stc
sub
mov
adc
cmpsl
data16
outsb
push
scas
jmp
fidivs
dec
jns
lahf
int3
jo
sub
xchg
mov
push
cmpsb
into
aaa
lds
scas
das
xchg
leave
arpl
sbb
ret
cmp
lahf
xchg
jo
leave
sub
subb
iret
sbb
jecxz
loopne
xor
lea
or
out
xchg
dec
insb
inc
mov
nop
into
sub
pop
add
rorb
ror
scas
jle
push
pushf
jl
movsl
fcomps
mov
arpl
fidivrs
push
inc
dec
pushf
xchg
sub
cmp
shlb
adc
mov
jo
mov
je
jo
ds
pop
add
divb
inc
sbb
jns
nop
inc
test
jle
jbe
jb
mov
stos
add
jo
push
leave
jecxz
aad
and
loop
cmc
test
sti
fs
lods
jns
xchg
push
sub
repz
cmp
jo
scas
fnstcw
and
pop
cmpsb
in
imul
cld
sub
cltd
inc
push
in
js
repnz
subb
sbb
adc
push
mov
push
sub
dec
fsubs
jb
jo
cwtl
call
jbe
or
mov
jp
jo
and
stc
xchg
jmp
jno
cwtl
fs
push
in
out
cmp
inc
or
dec
fsts
cld
mov
lea
fidivs
into
xchg
jae
cld
mov
subb
ret
pop
imul
arpl
xor
mov
rclb
in
cmc
stc
jo
sbb
inc
xor
leave
jo
fcomps
lret
mov
xchg
loop
jbe
xchg
cmpb
into
ret
pop
jo
jae
inc
dec
adcl
jo
lds
outsl
add
nop
jo
out
fnstcw
insl
xlat
xchg
mov
std
mov
ret
mov
shlb
lcall
lds
push
xchg
stos
push
dec
cmpsl
or
hlt
mov
jo
and
mov
inc
rcrb
lds
xor
sbb
mov
jo
fs
std
pop
lcall
movsb
cmp
lds
mov
divb
adc
jo
movsl
push
push
loope
inc
lea
clc
punpckhdq
xchg
std
xor
rcl
mov
or
xor
fdivl
jp
dec
subl
add
jo
mov
es
das
ret
jo
cwtl
and
nop
cmpb
fsubrs
dec
ret
out
mov
jle
pop
inc
jo
int
push
rcr
cli
sbb
mov
ret
push
jns
push
and
lahf
je
xchg
xor
pop
mov
roll
pop
jo
pop
cmp
loopne
jo
adc
int3
ret
dec
inc
jo
xchg
lds
pop
sbb
cmp
jp
ja
or
int
scas
sbb
jo
in
dec
loope
dec
mov
out
loopne
push
ficomps
aam
icebp
xchg
scas
and
push
and
mov
rorl
mov
pop
lret
sbb
jo
roll
mov
jo
xor
pop
sahf
call
push
addr16
jp
cmp
push
in
jne
stc
insb
mov
out
push
cmc
sub
cs
push
in
xor
ss
push
dec
gs
jo
xchg
and
insl
jo
lds
mov
jmp
ja
icebp
inc
mov
add
repnz
into
cmpsl
aam
es
fistl
sbb
jmp
mov
mov
ret
sbb
jo
lea
push
jge
leave
or
or
xchg
xor
inc
pop
adc
jae
clc
lret
fdivrl
testl
push
cmp
lods
push
pop
das
push
mov
xor
adc
data16
jecxz
js
add
lock
fstpl
add
push
mov
loop
sbb
je
sub
shlb
lds
test
pshufw
stc
push
vmovq
push
out
jg
dec
xor
repz
fistpll
push
insb
lea
nop
or
jb
jae
pushf
pusha
mov
sbb
pop
dec
xchg
and
cmpb
adc
sub
incb
negl
les
fs
mov
jo
es
loop
sub
adc
stos
shrl
shrb
insb
ljmp
jo
jmp
cmp
je
add
mov
jo
ret
mov
mov
inc
inc
addb
movsl
jecxz
lret
jl
lcall
dec
je
cs
clc
sub
addl
xchg
or
stc
ds
cmp
fistl
das
dec
ja
cli
sub
cmp
and
xchg
push
mov
rorb
cmp
nop
push
test
cwtl
fsubrs
jmp
sub
jo
xchg
or
jmp
add
decl
sbb
sub
jb
js
addb
jnp
jo
ss
inc
add
nop
jo
hlt
add
cmp
push
jo
push
stc
in
loopne
or
jle
cmp
je
js
cs
mov
xor
pop
push
adc
std
xchg
lock
add
int
into
lods
jo
push
and
leave
pushl
xchg
push
bound
mov
jo
rorl
lds
out
aam
bnd
jl
sub
loopne
mov
jns
popf
les
orl
in
call
aas
sub
lahf
lret
and
out
jl
xor
lds
fsubs
jo
adc
test
int
fwait
in
test
xor
xor
popa
inc
imul
xlat
mov
cmpsl
dec
jo
out
xchg
aas
jo
or
rorl
add
jo
les
jo
imul
push
inc
aaa
sti
jo
movsl
adc
cmp
lods
in
lea
fld
jno
fldenv
mov
xchg
jecxz
dec
cmpb
add
sbb
rorb
insl
jo
mov
xor
xor
popl
ret
test
push
jne
and
pop
or
aas
rcl
add
das
cmc
jo
cli
xchg
repnz
or
pop
jne
or
jo
and
lds
xor
dec
mov
ja
mov
jmp
in
adc
movaps
sbb
adc
pop
aaa
sbb
dec
xlat
js
cmp
aam
push
shlb
sub
xorb
ret
nop
data16
jmp
add
pop
mov
cmp
test
in
das
sub
jo
inc
ljmp
andb
into
or
std
cmpb
addr16
in
rolb
and
jo
lds
je
mov
std
in
push
into
jo
shl
popf
bound
cwtl
jb
mov
xchg
ss
and
ret
push
push
sbb
push
insl
add
mov
je
aad
sub
inc
xor
shll
inc
adc
cmp
out
mov
push
gs
addr16
aas
out
add
xor
or
fwait
bound
leave
mov
mov
push
mov
lock
jo
or
out
aas
dec
clts
cmc
push
scas
fildll
cltd
lds
push
add
jo
jle
jae
pop
adc
jne
aad
push
negl
ja
pop
filds
push
inc
call
cwtl
mov
xchg
loopne
xlat
in
xchg
data16
adc
xchg
push
adc
adc
pop
jecxz
cld
hlt
pop
cmpsl
and
les
int
lods
clc
adc
xor
pop
push
enter
nop
sub
xchg
ds
add
jb
and
adc
in
mov
sbb
push
mov
shll
cmpsb
lds
scas
test
pop
loope
inc
mov
ljmp
xor
shll
nop
jae
inc
loop
scas
pushf
mov
add
es
sub
sti
jo
cbtw
xchg
dec
test
dec
daa
ja
lds
pop
popa
sbb
fadds
sbb
lock
pop
mov
mov
js
sbb
icebp
testb
jo
sbb
ret
push
and
cmpsl
xor
in
arpl
mov
pop
dec
les
jo
mov
push
jo
push
add
jo
psubd
imul
lcall
movsl
mov
mov
pusha
jg
add
push
pop
sbb
lret
hlt
or
or
aas
leave
push
jo
mov
add
add
insl
inc
lea
sub
mov
mov
cmpb
cmp
leave
or
lret
xchg
fwait
jo
dec
es
fnstsw
inc
test
jo
push
aas
jg
int3
movq
das
fwait
into
jp
lcall
lret
mov
add
pop
adc
jne
lret
fistpl
mov
sbb
divb
jmp
xlat
mov
xor
das
hlt
lds
xchg
pop
push
aaa
pop
bound
sub
jo
sbb
xchg
pusha
out
and
push
ds
cmp
xchg
iret
mov
aad
push
adcb
or
lret
mov
xor
jge
inc
popa
mov
pop
jns
inc
movsb
shl
les
into
or
xchg
push
pop
bnd
mov
xchg
dec
mov
nop
add
pop
jbe
push
test
mov
and
arpl
jo
in
cmp
add
sub
cmpl
cmp
adc
ror
loope
je
inc
add
imul
insl
jo
cmp
sub
shll
icebp
ss
rorb
xor
enter
sti
and
js
movsl
push
push
inc
push
jmp
lahf
sbb
sub
movsb
xlat
jg
cmp
xor
out
xor
jnp
mov
cmp
cli
pop
jo
fnsave
jmp
jo
sub
push
enter
jo
mov
pop
movsl
jo
push
inc
std
or
sub
jo
jne
lds
je
scas
mov
or
mov
pop
mov
sub
sar
xchg
and
or
push
sti
js
scas
lcall
sub
jo
push
enter
sub
jo
pop
mov
or
jo
repnz
lds
add
hlt
and
mov
cmp
push
out
loope
loop
push
in
inc
dec
xor
andl
aas
add
aam
jle
sub
add
cmp
out
roll
bound
sbb
rol
adc
and
mov
jnp
jo
inc
jbe
add
jge
in
xor
aad
cmc
and
inc
fnstenv
sahf
cmpsl
fsubrs
call
inc
lods
cli
jo
test
test
adcb
or
rorl
fimull
add
push
out
jb
or
jo
xor
xor
jo
or
subl
fwait
xor
push
add
scas
and
adc
in
mov
jo
sarb
test
jo
fucomip
or
loopne
pusha
aaa
push
cli
jo
ds
jmp
push
xchg
pusha
push
ds
mov
jo
fisttpl
sbb
imul
and
test
mov
aas
je
adc
xor
rcll
mov
xchg
pop
xchg
lret
xchg
bound
std
mov
idiv
push
out
push
jo
int
and
repz
pop
jo
sub
ret
and
cmp
add
xor
sub
pushw
nop
hlt
push
push
add
inc
xor
push
cld
push
pushf
jae
adc
sbb
sub
repz
pop
sbb
je
sub
xor
clc
cmp
in
leave
fnstenv
cld
mov
dec
jne
loope
add
pushl
mov
xchg
loop
or
and
inc
loope
cltd
loopne
pusha
js
sbb
xor
std
pop
clc
fistpl
or
addb
and
pcmpgtw
addr16
jne
loop
leave
mov
sub
sub
mov
dec
or
jo
or
inc
ud1
jno
or
fsubrp
dec
pop
fnstsw
cmp
sub
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
subb
fisttpll
xchg
and
popa
in
hlt
push
mov
sub
xor
jo
add
mov
jl
adc
and
jo
sub
repz
xor
dec
cld
ljmp
inc
dec
inc
pcmpgtb
pop
mov
dec
loop
stos
hlt
push
jo
xchg
pop
leave
jb
in
imul
xor
cmp
sub
std
adc
inc
into
jo
xor
lods
dec
pop
pop
sbb
ret
mov
dec
mov
ja
daa
push
lret
xchg
xor
xor
pop
jb
ja
sub
cmp
pusha
into
sub
cmp
push
jo
cld
cmp
incb
push
loope
mov
or
fnstcw
jo
mov
adc
dec
pop
sysret
into
push
scas
mov
test
adcl
jno
mov
push
loopne
jo
pop
fbstp
fisubrs
push
ret
add
xchg
mov
add
mov
insl
sbbb
loopne
lods
push
mov
push
sbb
repnz
dec
cmpb
push
ljmp
cs
and
jo
cmpsb
dec
inc
gs
push
in
test
insb
mov
sbb
cmp
call
sbb
mov
mov
repnz
xchg
or
xchg
pop
add
push
jo
cmpsl
inc
data16
mov
or
bound
xor
mov
xor
ss
mov
int
adc
inc
push
fmuls
push
shrl
jecxz
loopne
pusha
in
dec
fistps
jae
pop
pop
mov
push
inc
xor
xchg
leave
cmpsb
mov
adc
sub
mov
dec
xor
pop
mov
das
cmp
cltd
add
shrb
int3
xor
xchg
jo
push
sub
mov
dec
sbb
adc
jge
xor
or
js
gs
arpl
jo
and
add
pop
xor
mov
jge
cs
and
bound
sbb
jne
fs
add
jmp
sub
xor
clc
xchg
push
pushf
sub
fbstp
subl
jo
inc
inc
pop
loopne
inc
and
testb
adc
subb
push
adc
inc
pop
sbb
adc
loop
and
sub
bound
sbb
jo
mov
gs
pop
insl
in
je
add
adc
cmp
mov
push
std
and
cld
mov
push
jo
fs
add
xchg
bnd
adc
and
xor
aad
in
jo
test
lods
mov
dec
push
fs
cmpsb
cmpsb
int
jo
cmpb
jo
lahf
imul
inc
mov
movsl
out
mov
inc
cmpsb
push
jle
jne
add
cmp
rcll
push
inc
xorl
push
leave
push
mov
gs
cmp
in
push
mov
xor
push
xchg
xchg
and
repnz
jo
imul
push
mov
jo
outsb
shlb
add
into
movsb
mov
dec
rorb
mov
int
mov
les
jecxz
push
lods
sbb
xor
jo
mov
inc
pop
jo
loopne
pusha
out
scas
pop
emms
fidivrs
pop
xchg
hlt
sbb
out
pop
xor
out
add
add
adc
mov
les
add
cwtl
xor
cld
cmpsb
sti
push
xor
xor
test
jl
adc
shufps
mov
or
adc
sbb
jo
test
cmp
int
jne
sub
les
fmul
in
cmp
lret
jo
and
sbb
orl
data16
enter
push
xchg
jbe
push
cld
ss
inc
in
sbb
sub
sub
pop
jo
ds
pop
push
ja
getsec
jb
jge
jp
inc
mov
icebp
push
pusha
arpl
loopne
data16
inc
rorl
jo
lea
adc
mov
mov
mov
loop
and
loope
jo
mov
xchg
push
dec
xchg
frstpm(287
lcall
pop
cmpsl
jo
icebp
add
sbb
cmc
movlps
fistpll
fnsave
ret
lret
or
cmpsb
in
mov
and
push
xor
ret
sub
jnp
jle
insb
add
adc
ljmp
and
xor
retw
push
in
int
cmp
sub
sbb
or
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
dec
loop
repnz
xorb
mov
les
mov
add
repz
jo
mov
aad
in
cmc
push
mov
movsl
jne
mov
iret
mov
test
xor
xor
nop
hlt
out
xchg
movsb
sahf
mov
inc
lcall
add
adc
and
add
mov
xchg
xor
pusha
push
or
cmp
push
add
push
and
ret
mov
push
jne
xchg
mov
push
and
cmp
mov
xor
mov
bound
mov
push
lret
dec
add
mov
cmc
sbb
aam
hlt
loopne
xchg
pusha
movsb
addb
xor
jo
jae
add
add
jo
adc
in
push
push
inc
lcall
clc
push
rcrl
jb
icebp
iret
inc
nop
imul
arpl
movsb
in
xor
int
aad
inc
loopne
pusha
hlt
jo
test
fidivs
jo
push
xor
in
ror
es
xchg
dec
pop
sti
push
or
adc
xor
pop
pop
gs
adc
adc
je
add
adc
jecxz
hlt
mov
mov
inc
lock
jnp
add
sbb
and
movsb
xchg
xor
imul
fistpll
jle
movaps
sti
jbe
jb
lock
and
lret
shll
aad
in
cmc
pusha
test
setne
ret
insb
xor
jge
in
hlt
xor
mov
inc
gs
ja
xor
gs
xor
mov
rclb
dec
push
xchg
scas
std
and
cmp
or
push
rorb
push
lret
mov
sub
gs
push
add
adc
movl
xchg
mov
push
jo
bound
sub
or
jo
lock
test
ret
jo
loopne
out
pop
fmuls
push
or
pop
stc
xchg
or
rorb
push
or
mov
jo
je
test
add
mov
movsb
inc
inc
cmc
out
les
shll
push
pop
loop
rcl
xchg
inc
jb
add
xchg
cmc
push
cmpb
sarb
or
push
movsl
jo
adc
add
dec
xchg
jmp
les
lea
flds
lods
jbe
add
outsl
mov
mov
mov
cmc
dec
cmp
imul
cli
cmpsb
iret
jb
in
test
jo
stos
add
push
sbb
addb
sub
dec
xor
test
in
add
mov
mov
mul
mov
ljmp
push
push
test
lods
xor
pushf
les
xchg
shll
jge
js
in
xchg
imul
or
and
and
psubusw
xlat
mov
jo
shlb
pop
ljmp
push
or
outsb
enter
loop
jo
mov
and
cs
ffreep
adc
and
add
psubusb
adc
sbb
and
mov
mov
inc
mov
sub
pusha
xchg
hlt
das
or
jo
mov
cmp
jmp
je
jne
xchg
adc
fldt
iret
mov
orb
mov
add
push
mov
or
addb
popf
fst
hlt
cmp
cmp
movsl
push
mov
shll
loope
lods
mov
mov
add
rorb
mov
push
mov
movsb
gs
fs
push
hlt
sub
cmp
cmp
shll
xchg
push
int
test
mov
aas
lods
mov
sbb
cmpsl
xor
jo
dec
lret
rclb
lea
dec
sub
mov
arpl
jmp
arpl
jno
push
out
es
pop
ret
in
jp
es
bnd
jo
rcll
out
or
aaa
xchg
or
lret
shlb
mov
jmp
jo
in
add
shll
or
shl
inc
and
jo
xchg
bound
daa
mov
das
lea
andl
int3
xchg
inc
repz
test
xorb
dec
add
add
jo
call
cwtl
fs
movsl
lcall
add
xlat
nop
mov
push
jge
addr16
dec
insb
sub
xor
xchg
jle
mov
jle
pop
in
stos
push
jecxz
add
push
cwtl
adc
fsts
ret
dec
mov
jge
push
xorl
mov
lea
in
mov
imul
jmp
insb
jge
in
in
xchg
int
jo
sbb
add
add
mov
mov
cli
dec
leave
jne
jo
test
ljmp
leave
sbb
xlat
jg
push
jmp
les
or
shll
xor
add
sub
and
nop
jno
jae
bound
push
push
in
jp
insl
pop
xor
out
rclb
jg
cwtl
loope
outsb
xor
jo
jno
neg
arpl
nop
dec
mov
pusha
push
shll
jo
mov
subb
inc
pop
loope
shrl
jo
addr16
jae
clts
sub
xchg
cmp
int3
xchg
sbb
loopne
jmp
push
icebp
xor
test
jo
jge
mov
data16
loope
loope
xchg
je
insl
or
mov
out
mov
lods
jb
ret
cs
aas
subb
sbb
fidivrl
push
outsl
dec
jo
hlt
mov
shl
insb
imul
shll
in
sub
mov
cltd
xchg
jo
rclb
enter
push
xor
aad
out
sbb
jo
pop
test
testl
mov
cmpb
pop
mov
mov
push
out
pusha
loope
stc
nop
repnz
adc
cltd
jo
sbb
push
adc
push
popa
nop
and
mov
mov
and
mov
mov
ret
jo
in
lds
cmp
fdivrs
add
aas
xchg
inc
stc
add
pusha
gs
mov
push
cmp
push
int
mov
xchg
jmp
mov
jecxz
sti
add
jo
jae
dec
add
cmpsl
test
pop
mov
push
sbb
insb
js
notl
xchg
cmp
int
scas
sahf
std
test
fnstenv
mov
jns
jo
lret
popa
enter
out
ss
jl
mov
xchg
insb
adc
int
mov
jo
fistpl
xor
adc
xor
dec
movsl
mov
stc
pop
adc
mov
jno
pop
jl
shll
inc
stc
addb
mov
orb
aaa
out
mov
lods
dec
mov
mov
xchg
push
mov
in
lcall
xlat
or
jo
faddl
dec
cwtl
shr
das
jo
mov
in
std
jo
or
cwtl
loop
outsl
mov
mov
iret
cmp
jl
ljmp
mov
in
fs
push
mov
imul
stc
jae
into
jge
mov
adc
lret
cmp
mov
xchg
pusha
mov
inc
ret
insb
negb
mov
fnsave
mov
pop
jno
fldt
jmp
inc
jo
mov
int
jo
aas
rolb
xchg
sbb
scas
jo
pop
inc
add
dec
fadds
mov
hlt
test
ja
xor
jo
mov
dec
int3
pop
sub
rcrl
lret
or
mov
dec
xchg
stos
jp
sub
scas
call
imul
and
xchg
or
pop
sub
xchg
jp
in
xor
out
cmp
aaa
jge
dec
out
addr16
out
in
xor
push
or
inc
nop
jae
nop
dec
arpl
pop
or
pusha
out
cmp
loopne
fwait
out
sete
cli
je
test
mov
es
sbb
mov
adc
ja
inc
dec
jno
lods
cmp
js
jo
inc
fstps
das
subb
mov
xchg
inc
jecxz
enter
imul
fwait
mov
jge
dec
adc
inc
and
lods
aaa
repz
faddl
cmp
fimull
jo
mov
lret
mov
mov
mov
add
gs
cmpsb
jo
mov
and
scas
dec
pop
xchg
xor
push
nop
adc
inc
out
frstor
push
dec
rclb
arpl
mov
adc
pop
outsb
lret
je
xor
stc
jb
ret
push
cmp
int
cmc
jle
ss
mull
push
aaa
cltd
ss
pop
jbe
or
imul
push
dec
xchg
sahf
in
stc
popa
lea
xor
xchg
lock
mov
sbb
js
aas
lret
jo
pop
push
ds
and
and
sbb
xorb
into
adcl
sub
pop
js
xchg
xor
js
xor
bt
enter
add
adc
out
jo
divb
inc
gs
cmpsb
nop
popf
push
mov
mov
int
clc
xchg
cmc
dec
arpl
addr16
jge
sbb
jo
push
and
fsubrl
jno
popf
jae
jo
lea
popf
mov
js
je
fstpt
cmpb
jo
stos
lahf
add
inc
mov
jo
adc
mov
xchg
bnd
add
clc
xor
out
pop
fiaddl
jge
mov
push
jle
push
or
push
seto
sbb
and
notb
mov
mov
or
dec
mov
hlt
imul
push
dec
sub
mov
jbe
push
push
sar
jbe
inc
jo
and
xor
sbb
push
jmp
mov
jo
mov
xchg
cmp
xlat
jge
repnz
leave
xchg
jo
stc
lcall
mov
mov
pop
sbb
sbb
je
repz
add
sub
arpl
pushf
les
frstor
mov
jo
push
push
mov
jo
cld
cmp
int
sbb
ret
int3
jbe
pushl
sub
jmp
fcoms
and
cmp
or
pop
mov
nop
adc
pusha
and
cs
push
sahf
addb
or
xchg
inc
outsb
sbb
sbb
nop
addr16
mov
adc
insl
not
loope
icebp
sbb
es
mov
pop
fsubl
mov
nop
sbbl
test
sub
xorb
pop
in
push
mov
add
sbb
fdivrs
jo
push
jns
addl
or
int3
mov
repnz
fwait
pop
and
adc
sub
inc
aad
push
adc
mov
or
mov
repz
add
cmpsb
push
aam
and
inc
pushf
push
stc
cs
xchg
cmp
cmpsl
dec
push
sbb
push
jno
or
adc
sbb
jne
adc
xchg
adc
jecxz
movsb
shll
clc
imul
add
int
jbe
or
and
test
pop
out
jnp
hlt
std
sub
sub
inc
mov
das
push
lock
xor
mov
filds
mov
dec
adc
jl
test
lds
and
mov
jo
xchg
and
jo
pop
ja
pusha
out
fnstcw
mov
push
repnz
jno
xor
test
push
fadds
and
mov
xor
jp
ss
jo
fisubrl
xor
mov
mov
add
and
adc
push
xor
dec
lahf
push
fs
sub
push
std
push
sti
repz
push
fnstenv
jae
xchg
out
movsb
push
loopne
push
in
jmp
iret
jae
sub
mov
or
pop
jb
xor
fs
jle
cwtl
sarb
int3
arpl
insl
dec
ficomps
mov
jae
sub
and
fidivl
pop
pop
fldcw
or
ffree
stos
repnz
mov
mov
je
add
adc
nop
repnz
popl
push
pusha
into
dec
adc
ljmp
ds
mov
pusha
mov
sub
ret
or
popf
leave
jo
lds
mov
sub
pop
mov
xor
sbb
int3
sbb
push
jno
mov
mov
push
cmc
pop
sub
sub
jo
lods
jecxz
sbb
ret
cmp
jnp
imul
cwtl
jl
mov
sub
xor
jmp
mov
fmuls
subb
mov
mov
scas
add
aam
jno
mov
fs
loop
in
out
xchg
xor
ljmp
pop
js
xchg
xchg
enter
dec
insb
adc
sbbb
dec
clc
or
pop
xchg
cmpsl
stc
pop
je
push
leave
xchg
out
pushl
mov
dec
sub
jo
fidivrl
repz
mov
mov
or
mov
push
push
jg
and
xorl
in
jmp
fidivs
clc
xchg
scas
js
mov
cmp
ja
cmp
sbb
mov
pop
das
in
adc
jo
inc
sbb
dec
mov
scas
xorb
sub
mov
push
or
pop
js
push
fsts
xchg
repz
jge
jo
bound
imul
jae
hlt
arpl
test
pop
add
dec
push
std
mov
or
pop
icebp
mov
mov
pop
sahf
mov
fnstsw
jo
mov
dec
pop
cltd
nop
xchg
jbe
and
mov
out
and
jo
int3
call
adc
in
and
or
or
sti
fnstenv
pop
jo
dec
fcomps
xor
adc
xchg
hlt
xchg
jo
insl
scas
add
cltd
push
mov
push
insb
and
dec
add
or
jmp
jl
jo
data16
xchg
jbe
jo
jp
mov
cmp
sbb
in
ljmp
js
std
pushf
into
push
into
addr16
jns
insl
jnp
loope
adc
fs
arpl
add
test
imul
cmp
xor
out
xchg
inc
aad
mov
sub
jb
je
ret
mov
stc
icebp
scas
jmp
addb
aad
mov
pop
push
sbb
or
sub
cmp
xchg
jle
mov
pop
jo
sub
cmp
xchg
xchg
data16
test
pop
jge
scas
fstpt
ret
out
cmp
jo
lock
inc
out
adcb
fsubrs
in
inc
and
inc
iret
cltd
test
xor
push
jo
dec
cmpb
jg
xchg
jo
sahf
pop
cwtl
leave
cmpsl
mov
jo
pop
outsb
fs
rcr
jge
jo
pop
lcall
stos
call
adc
sti
pop
arpl
lret
jo
mov
fldt
icebp
cld
movsl
jl
or
sbb
push
jo
imul
andl
jns
test
hlt
dec
xlat
imul
popa
notl
and
push
push
out
mov
xchg
mov
inc
jo
daa
clc
cli
iret
dec
testb
lret
push
jo
xor
leave
ljmp
in
cld
xchg
ljmp
test
inc
xor
arpl
bound
ret
jno
loope
add
roll
jb
addb
ret
in
and
cmpsl
inc
inc
adc
adc
xchg
adcl
test
imull
movsb
xor
add
jmp
add
mov
mov
jo
adc
sbb
jo
jns
sbb
imul
xor
test
sub
jne
jo
call
ret
lods
cs
xor
dec
inc
std
xchg
mov
inc
push
out
or
mov
rclb
je
rcl
mov
iret
push
or
mov
int
sbb
jge
lock
xor
enter
icebp
ffree
adc
dec
dec
pop
adcb
mov
jmp
scas
or
jp
mov
cmp
jo
fildll
fwait
push
in
add
push
jae
or
mov
xchg
jo
popa
fnstcw
jnp
add
mov
icebp
pop
mov
js
mov
pop
lret
loopne
push
sub
mov
dec
pop
mov
test
nop
xor
bound
mov
push
aam
pop
dec
cli
push
out
add
pusha
xor
in
fld
fisubrl
bnd
lcall
push
fs
jp
sub
add
mov
outsb
sarb
jg
lea
pushf
cmp
jmp
sub
fdivl
repz
outsb
fcmovnbe
je
fcomps
aam
inc
xchg
js
push
in
ja
rep
insl
clc
xchg
push
jae
mov
js
mov
jno
xchg
sbb
jno
push
sti
mov
loope
lock
mov
xchg
mov
sbb
jp
ds
mov
outsb
icebp
lahf
adc
outsl
test
out
outsl
out
ret
cmp
jle
cmp
ljmp
shrb
mov
push
dec
scas
fs
aas
insb
lcall
andb
jl
movsl
shlb
adc
cmp
aad
movsl
insb
js
push
mov
shl
cmp
js
out
push
leave
adc
loop
nop
inc
in
sbbl
fisttpll
das
jo
inc
cmpsl
sti
xor
cmovl
les
mov
stc
es
daa
int
dec
outsl
fdivrp
jge
jo
jmp
sbb
sub
repz
cwtl
push
out
fs
mov
cmp
push
pop
das
mov
mov
in
nop
popa
lcall
cmp
push
jns
and
lods
dec
les
mov
and
dec
inc
stos
jo
cmc
sub
int3
jo
push
cmpsl
mov
fmull
lds
bound
xchg
int3
xor
push
pop
addr16
nop
ljmp
std
xor
filds
in
jle
push
popa
mov
mov
imul
xor
sti
std
testl
ret
scas
sub
hlt
pop
mov
outsb
aam
and
and
aam
jns
je
jp
ffreep
stos
adc
mov
add
push
notl
decb
xchg
popa
pop
mov
lods
jo
lahf
les
push
jo,pt
test
sbb
xchg
ror
jo
lds
add
jbe
mov
dec
js
or
test
rorl
gs
movsb
in
lret
xchg
pop
jns
cvtdq2ps
xchg
stc
bound
fs
inc
jecxz
or
xor
popf
push
in
dec
xorl
lods
out
xor
dec
xorb
arpl
out
adc
stc
xorb
or
sahf
inc
pop
fidivs
sub
jmp
push
lds
or
jo
stos
test
addr16
clc
or
out
fiaddl
add
jp
adc
out
in
xor
mov
jns
out
sbb
sbb
mov
and
cmc
adc
stos
fsubl
rcl
data16
jns
bswap
ds
push
cwtl
shlb
or
jo
pop
xor
arpl
mov
fucomip
aad
repnz
sub
lahf
es
push
push
fnstenv
mov
adcl
jbe
adc
pusha
xor
lahf
sub
nop
shl
insb
xchg
je
sub
xchg
mov
mov
jno
mov
out
jg
sub
pop
arpl
mov
push
in
and
cwtl
scas
fs
scas
add
mov
mov
mov
xchg
jle
sub
push
repz
dec
pop
sub
push
jo
mov
rcr
and
and
sub
inc
iret
jo
dec
stos
das
repz
push
adc
dec
out
scas
mov
ds
sbb
dec
nop
and
clc
lods
xor
push
lcall
imul
add
sti
dec
roll
test
clc
popa
jbe
orb
popf
jo
cltd
push
inc
jno
repnz
jo
test
ss
icebp
xlat
shlb
les
mov
pop
jo
mov
jns
stos
mov
pusha
or
push
fnstcw
jo
sub
cltd
lret
dec
ss
sub
push
jae
icebp
inc
jo
pop
leave
push
sahf
aad
cs
pop
sbb
xchg
adc
sub
xchg
and
lret
mov
add
push
inc
mov
push
daa
cmp
in
xchg
jbe
add
aad
mov
xchg
fdivrl
jns
jo
xchg
jb
frndint
lds
sarl
xchg
ja
std
test
jns
cli
ljmp
fists
insb
xchg
sar
xchg
shlb
into
les
add
cs
nop
xchg
jl
fs
int
outsb
jo
cmp
mov
or
jmp
in
lret
call
imul
mov
aas
jo
in
mov
orl
dec
cld
xchg
aad
jmp
or
cmc
popf
out
std
adc
jo
add
and
movsb
jo
jecxz
gs
jp
jle
jo
push
call
sbb
jle
sbb
hlt
cmp
filds
lods
add
bound
cmpsl
imul
adc
sbb
adcb
push
cs
call
push
outsb
psrad
mov
movsl
jo
add
jo
adc
loope
iret
nop
add
mov
jo
pop
and
jl
aas
push
jo
xchg
jge
popa
sub
shl
jo
ja
or
adc
mov
addr16
and
into
mov
jns
data16
mov
cmpsl
adc
ds
and
cmp
stos
sahf
cmp
dec
mov
fs
lods
scas
dec
jae
jno
or
clc
xor
jl
cmp
test
cs
in
mov
mov
rcrb
jmp
jbe
loop
add
push
or
cwtl
jo
mov
in
cld
sub
xchg
fs
xor
cltd
cmp
out
and
ret
daa
add
in
or
popa
icebp
data16
mov
jnp
out
insl
jp
mov
jge
inc
fs
aas
inc
in
repnz
sbb
xor
aam
stos
cmp
push
fcompl
cli
dec
shr
std
mov
out
push
ljmp
xchg
xor
pinsrw
shlb
jbe
push
sub
or
imul
clc
lock
fdiv
xor
xchg
ja
fs
ficoms
loope
rolb
out
push
push
push
js
popf
lret
jg
in
outsl
mov
add
outsl
add
shlb
push
push
sahf
sbb
mov
aam
loope
call
xor
push
adc
xchg
nop
fstl
fwait
xor
push
sarb
aam
addr16
sarl
adc
jo
leave
sbb
pushf
pop
pushl
sbbb
kmovb
mov
cmp
loope
dec
int
ret
shl
test
jbe
gs
pextrw
fs
out
push
aad
jo
mov
mov
cmp
jne
mov
aam
mov
cmc
bound
sbbb
in
dec
outsb
pushf
jle
jb
rcll
leave
mov
sbb
jo
call
loope
jo
fs
inc
sarl
adc
push
add
xchg
imulb
nop
ss
mov
jp
mov
jl
testl
xchg
ret
stc
aaa
bound
fcmove
divl
addb
andb
mov
push
push
rol
mov
aad
repnz
bound
inc
mov
rcr
test
gs
add
add
jp
jo
xlat
inc
cwtl
mov
loop
in
leave
sub
mov
iret
int
push
add
sar
inc
pop
jp
push
ss
fidivrs
add
jns
data16
js
mov
jo
std
leave
lret
stc
mov
and
push
es
inc
jo
and
ds
xchg
push
jecxz
xlat
pop
nop
incl
fs
nop
aad
movsl
lretw
jo
in
push
ret
imul
repz
cmc
int
jo
inc
lcall
xchg
jo
test
shl
mov
sub
mov
jne
cs
inc
ja
and
jns
fiaddl
scas
test
jo
pushf
data16
stos
fidivs
and
pop
repz
jns
add
jb
sbb
mov
iret
fnstenv
mov
mov
mov
mov
jo
lea
ds
mov
sub
leave
push
loope
bound
repz
dec
shll
adc
sarl
or
sbb
cmp
jo
lret
loope
xchg
jbe
leave
fdivs
or
out
out
mov
in
cmc
js
test
jo
test
nop
jo
xor
lret
clc
jns
nop
cmpsb
mov
adc
jmp
xor
push
sub
push
mov
sub
jo
in
jecxz
outsb
or
dec
inc
imul
sub
jecxz
sbb
and
out
int
push
dec
lret
dec
scas
nop
mov
push
rorb
fucomp
cs
int
push
fdivrs
lahf
in
pushf
push
ja
clc
aad
inc
xor
ret
pop
sub
xchg
pop
cmc
out
jo
ret
loope
insl
ret
push
leave
fs
pop
je
je
sub
cmp
sub
andb
subb
subl
adc
jo
into
xlat
fisubs
mov
mov
int
pop
push
in
push
mov
leave
jo
movsb
cmp
and
or
push
mov
fs
shll
stos
popf
jecxz
adcl
in
lret
cltd
inc
adc
cwtl
pop
jo
jae
lar
pop
xchg
popf
push
insl
and
addr16
les
adc
call
data16
jo
xor
loop
fadds
jp
cmc
ret
int
jo
ret
adc
push
stc
push
mov
loop
push
test
or
lahf
push
pop
push
hlt
pop
mov
inc
xchg
fstpl
insb
test
mov
iret
in
cmpb
out
movsb
xor
loopne
bound
dec
icebp
xchg
js
shl
mov
add
dec
sub
or
xchg
jle
subb
dec
and
and
adc
or
div
sarb
subb
aad
dec
pushf
gs
out
inc
add
pop
sub
push
out
xchg
jmp
inc
sarl
vfrczss
sub
kmovb
lret
mov
das
iret
test
mov
mov
xchg
ucomiss
inc
cmp
jne
leave
loope
pop
in
jo
and
dec
mov
inc
int3
dec
and
push
fs
arpl
jo
outsb
xlat
adc
or
jo
cmp
movsl
push
ss
xor
jl
xor
mov
xor
gs
mov
ljmp
jo
mov
stc
cltd
cmove
jmp
fstpt
fdivl
mov
test
stos
xchg
fbld
movsb
dec
arpl
cmpsl
push
pop
jo
ljmp
jo
call
clc
xchg
ss
push
rcrl
pop
jne
testb
shll
mov
scas
out
mov
jmp
bound
push
enter
fstpl
lods
les
jo
adc
xor
push
sahf
fnstcw
jo
test
and
hlt
mov
mov
jo
jp
inc
push
fs
popf
jo
pop
mov
xchg
ljmp
out
sahf
fs
pop
jg
jle
jo
push
mov
jo
movsb
dec
xchg
xchg
mov
incb
cmp
sbbb
sub
cld
jo
inc
rcl
xor
pcmpeqw
outsb
xchg
mov
jo
mov
cmp
out
add
jg
ja
je
adc
sbbb
loope
and
jo
test
jmp
outsl
pop
mov
jo
pop
stos
and
sbb
pop
jo
inc
jmp
push
xchg
cmp
or
movsb
jp
data16
push
insb
stos
mov
fisttps
test
pop
je
out
jo
ficoms
fnsave
mov
cmp
clc
jo
push
and
call
xor
jp
jp
clc
jo
aam
ret
push
bound
jns
imul
je
mov
jo
neg
inc
clc
pop
in
mov
insl
sti
in
jo
cmpsb
or
loop
jo
mov
fs
inc
popa
jmp
bound
push
mov
and
mov
out
icebp
xchg
mov
leave
sbb
lds
jo
orb
mov
lret
jo
jne
in
xchg
mov
fstl
cmp
sub
pop
or
xchg
jo
psllw
push
xlat
loopne
out
dec
divl
push
in
mov
push
andl
stc
mov
jecxz
push
rolb
cli
fwait
jo
ret
xchg
inc
push
mov
cld
xchg
xchg
lock
sbb
jo
inc
and
test
cmp
cli
daa
jno
mov
mov
xchg
mov
adc
aaa
mov
xchg
loopne
into
movsb
add
ret
aam
js
push
mov
test
cmp
jo
es
push
andb
dec
inc
mov
lods
jo
push
pop
mov
imul
jo
pop
push
dec
dec
cld
leave
subps
inc
lret
push
jo
js
inc
les
test
enter
jne
ret
mov
leave
loop
cli
js
fcoms
movsb
ja
jne
jb
insb
sbb
add
bound
mov
pop
xchg
jge
sub
and
pop
push
flds
sbb
dec
mov
loopne
mov
movl
test
movsl
adc
or
jo
mov
add
add
loop
adc
mov
jo
dec
mov
and
mov
dec
or
mov
cmp
jo
fsubl
add
mov
lcall
inc
sbb
shll
adc
jo
mov
ret
into
push
mov
fwait
jecxz
adcb
dec
in
xor
sub
push
xlat
push
inc
push
inc
jl
ret
cmpsb
repz
jo
mov
cwtl
addr16
shrb
and
hlt
xchg
aad
ja
pop
jo
shrb
cmp
add
int
push
insb
or
xor
movsl
sub
movsb
push
in
add
test
prefetch
or
jb
fucom
mov
pop
imul
jbe
push
jo
sarl
xchg
imull
repz
out
push
mov
inc
pop
adc
cmp
adc
mov
jo
jnp
mov
jo
loope
mov
jo
or
xchg
unpcklps
pop
push
add
jo
outsb
int3
popf
cmc
dec
mov
ss
sub
into
sbb
sub
fbstp
mov
fsubs
dec
subl
push
mov
mov
jo
loop
sbb
leave
jae
jl
loope
jo
mov
pop
mov
insl
ja
mov
mov
or
jne
popf
push
call
clc
nop
leave
das
sbb
mov
arpl
or
inc
in
repz
dec
jae
mov
pop
push
mov
and
pushf
jne
test
aad
int
dec
js
into
fnstenv
fwait
comiss
rorl
mov
aad
mov
in
jle
jae
or
inc
mov
push
sti
addl
and
inc
push
ja
daa
jo
imul
mov
nop
sbb
cmp
sahf
nop
div
inc
mov
mov
push
and
fldt
mov
inc
out
dec
es
jo
pop
je
lret
lods
aad
js
xlat
sbb
xchg
nop
cltd
and
stc
add
pop
inc
jg
add
cwtl
sarb
mov
mov
insw
jo
or
loopne
jo
icebp
clc
ja
aaa
leave
mov
xchg
mov
or
lret
ljmp
loop
jo
adc
add
xor
icebp
fsubrs
mov
xor
je
xchg
cs
push
ds
cmp
je
jo
sub
mov
sub
cmpsb
jo
xchg
les
jo
jbe
inc
add
dec
daa
mov
push
test
sub
scas
jge
mov
outsl
pop
test
mov
hlt
push
and
in
adc
leave
jl
mov
push
lds
pushf
hlt
xor
inc
push
out
push
mov
movsb
dec
cmp
adc
xor
data16
push
mov
or
xor
idivl
aaa
push
or
and
jo
add
sub
aad
mov
jo
cmp
ret
xor
out
sub
pop
orl
push
in
pusha
jle
ret
jno
popa
test
ja
sets
mov
cmp
sub
js
testb
jne
nop
js
sub
es
sub
mov
in
outsl
ret
sub
xchg
int
jno
jo
int3
push
movsb
imul
jo
jae
into
dec
mov
push
scas
cmp
push
dec
push
arpl
pushf
dec
testb
or
test
scas
mov
out
push
stos
sub
cmp
sbb
repnz
mov
push
jo
push
xchg
idivb
pop
xchg
rolb
sbb
mov
or
jo,pt
cli
sub
andl
loope
jne
divl
cs
push
mov
push
fwait
jo
add
cs
arpl
mov
int3
aas
loop
jo
decl
sbb
xchg
clc
icebp
push
negl
sub
gs
into
js
jo
cmp
push
adc
sarb
push
jae
cmp
repz
test
fsubrs
push
repz
jae
mov
inc
pop
pop
das
shl
roll
inc
out
pop
iret
jo
or
fcomi
test
cmc
inc
sarb
shlb
pop
pop
scas
pusha
mov
mov
mov
in
jo
mov
add
cmp
cli
push
dec
jo
outsb
xchg
jns
aaa
xchg
mov
mov
lods
jbe
test
and
xchg
pop
adc
repnz
jb
popa
cwtl
push
fs
xchg
aad
add
loope
fsubrl
jae
mov
push
xchg
push
sahf
mull
inc
jmp
popf
inc
xchg
sbb
inc
jbe
xchg
add
nop
push
push
cmp
iret
lahf
loop
or
fmul
push
inc
push
cmp
xchg
push
sbb
dec
ret
pop
xor
push
shrl
jbe
jo
dec
aad
test
test
push
and
orl
popa
ds
mov
loope
dec
rorl
or
xor
mov
and
lods
push
loop
shl
shll
mov
push
pop
loope
lcall
cmc
fwait
xchg
in
dec
and
mov
push
jo
int
inc
and
jo
lods
jno
mov
sbb
and
dec
xchg
pop
xor
fidivl
xchg
inc
incb
or
mov
fnstcw
sub
or
outsl
jmp
ja
shlb
cmp
xcrypt-cfb
cmpsl
cmpsb
divb
psubusw
push
xlat
cmp
jns
cmc
hlt
cmp
mov
jge
jo
pop
inc
inc
mov
inc
sbb
lods
jo
jp
lock
xchg
mov
mov
lcall
adc
fwait
imul
adc
fcomi
pslld
cmpl
popa
pusha
dec
push
roll
das
jns
mov
dec
xchg
mov
out
add
cs
pop
cmp
sub
scas
sub
cmc
lret
jo
je
jle
dec
inc
sub
add
mov
cmp
decl
push
xchg
push
sarl
cmp
mov
jo,pt
in
mov
or
dec
mov
fldt
sbb
ror
xor
test
outsl
xor
jo
loope
cwtl
stos
cmc
scas
les
pop
fimuls
insl
cmp
imul
out
xor
jge
sub
outsl
xlat
sbb
cmpsl
enter
insb
loop
or
push
xchg
lods
negb
jb
xchg
out
and
dec
sub
imul
flds
movsb
sub
sbb
and
jo
cmpsl
das
mov
jo
mov
push
xor
sahf
sub
mov
jo
mov
mov
inc
fs
hlt
je
sarl
jo
xor
nop
dec
cld
test
rol
pop
pop
pop
xchg
lea
and
dec
dec
adc
mov
jo
mov
test
dec
shrb
jl
jo
dec
xor
mov
lea
mov
sub
sahf
icebp
dec
int
jle
push
out
es
xchg
repnz
sub
adc
pop
in
add
push
inc
outsl
es
ret
inc
dec
je
sub
lahf
test
lds
or
mov
imul
push
jns
xchg
sub
cmpsl
cltd
jb
in
adc
sub
and
jbe
jg
loopne
loop
inc
das
and
fmuls
frstor
push
lock
mov
jmp
mov
adc
jae
adc
jno
add
aas
lods
sbbb
pushf
mov
rol
in
push
xchg
loopne
jnp
cmp
adc
jl
fs
push
dec
xchg
insl
xchg
jg
loopne
mov
pop
push
mov
rcrl
arpl
mov
andb
and
shlb
fists
sbb
loopne
in
fsts
lock
sbb
std
dec
lds
lret
lock
int
popf
mov
scas
xor
insl
push
jo
push
push
xlat
filds
lds
lock
lods
sahf
mov
mov
andb
xlat
bnd
add
sub
or
lret
add
orb
push
movsl
stc
cmp
das
jo
sbb
jo
jecxz
push
lahf
push
std
xor
mov
inc
xchg
lret
adc
sbb
jnp
jge
aad
call
mov
test
imul
jmp
push
jo
cbtw
push
mov
sub
mov
pop
mov
les
sub
sarb
or
jle
xor
mov
pop
out
leave
adc
cvtps2pd
jecxz
das
stos
lds
cmpl
pop
mov
fwait
lock
adc
loopne
sub
rcrb
js
adc
mov
js
pop
or
push
aam
sbb
mov
shll
jo
push
inc
out
das
mov
mov
jo
sub
lds
jecxz
cmpsl
out
pop
mov
lcall
outsl
sbb
int
push
or
test
xor
jb
ret
jmp
jo
xchg
rcrl
jo
xlat
je
mov
inc
movsl
jo
sti
dec
in
xor
das
or
xchg
mov
xor
jo
dec
dec
push
inc
divb
adcb
sbb
jl
and
icebp
in
mov
push
sti
arpl
leave
test
decb
pop
and
imul
cwtl
sub
adcb
jo
pop
and
stos
add
add
xchg
fnstenv
js
push
leave
jne
rol
jmp
or
test
push
push
mov
pop
js
inc
js
jo
push
outsb
cmpsb
jge
loopne
mov
fdivrs
and
push
test
icebp
mov
jo
hlt
adc
jo
xor
std
fdivl
and
shl
or
adc
xlat
ficomps
in
insb
into
enter
leave
xor
push
adc
ljmp
xchg
hlt
xor
jo
mov
call
add
clc
js
pop
lea
int
mov
xor
push
je
add
jo
jnp
out
stc
in
cmp
or
es
xorl
outsl
mov
jge
mov
cmpsl
pop
jo
jbe
push
sub
lods
jo
add
xchg
inc
jge
in
test
js
and
fs
inc
mov
push
sbb
test
mov
jmp
out
push
mov
jo
inc
dec
lds
enter
test
mov
jo
into
dec
pop
inc
cli
js
jo
push
insb
dec
mov
and
push
sbb
movd
jo
lahf
sbb
pop
scas
inc
mov
jo
dec
shr
repz
gs
push
popl
dec
pop
pusha
sub
or
jae
sub
stos
pop
mov
gs
int
xor
incb
push
addb
js
in
xchg
push
or
test
push
mov
jp
imul
dec
pop
xchg
jo
push
fcoms
fisttpll
clc
dec
jo
push
xor
or
adc
mov
add
cld
daa
lods
popa
jo
inc
pop
or
jo
xor
xchg
inc
add
lods
pop
sbb
in
test
mov
inc
adc
push
pop
cs
dec
or
jl
jno
iret
push
lret
sbb
jae
add
sub
outsl
dec
and
imul
sbb
sbb
or
dec
nop
aam
inc
xchg
ljmp
add
pushf
pop
out
push
popa
inc
or
lret
mov
mov
sub
js
add
add
inc
dec
jo
cmp
jne
and
in
lret
jb
xchg
aad
add
or
adc
js
ret
pop
frstor
in
pop
jo
sbbl
arpl
jbe
daa
shl
insl
push
pop
in
fmull
inc
jo
ss
mov
push
cltd
out
dec
mov
cs
lea
jo
push
enter
push
aaa
cs
dec
sbb
pushf
jo
repnz
jne
divl
mov
arpl
imul
adc
pop
add
and
sub
sub
int
clc
or
arpl
jnp
push
push
jo
jno
out
in
hlt
jbe
loop
test
int
xor
jo
mov
sbb
inc
repz
fdivrs
test
or
call
or
push
jo
nop
push
adc
jne
dec
cmp
js
jl
das
push
stos
je
sar
dec
leave
ret
or
aad
ffree
jge
nop
jmp
std
ja
test
cltd
popf
jle
movsl
test
mov
mov
in
and
imul
popa
mov
push
sbb
sbb
sub
jmp
int3
rcl
fcomp
inc
das
xor
pmuludq
cld
add
or
sbb
lods
mov
mov
mov
nop
push
pop
call
je
les
shll
sub
xor
cmp
xor
push
push
out
dec
cmc
add
cwtl
sub
pop
cmovno
dec
in
pop
jo
insl
push
jge
sub
orb
scas
mov
inc
inc
pop
repz
inc
pushf
push
xchg
andl
push
es
in
inc
jo
ds
data16
adc
imul
clc
jmp
xor
ret
xchg
mov
push
aaa
jmp
mov
sti
ja
inc
push
adc
insl
stos
test
test
push
push
sub
xor
xchg
xchg
jle
sahf
jns
lea
push
cld
cs
push
test
jg
popw
mov
in
and
es
dec
out
push
lahf
aad
or
and
inc
int3
mov
add
jle
loopne
sbb
dec
adc
jo
or
fwait
or
movsb
sbb
bound
dec
jge
popa
push
enter
and
push
adc
nop
in
js
lcall
push
filds
mov
and
cwtl
adc
popf
jo
imul
jecxz
cld
add
and
mov
cs
repz
xlat
call
sbb
push
mov
jno
ret
adc
fdivl
rcrb
clc
xlat
or
shll
pop
scas
aam
loopne
push
jb
dec
stos
adcb
mov
pop
out
jo
and
pop
test
jns
jno
insl
jno
jp
push
sub
cmp
adcb
or
loop
xor
jmp
cmp
jecxz
iret
dec
aad
icebp
ljmp
int
pusha
hlt
es
arpl
pop
xor
orl
repnz
shll
dec
jmp
jmp
dec
mov
lret
frstor
unpckhps
cltd
jne
lods
xor
xchg
stc
lods
movsl
mov
cmc
cmpsl
push
push
mov
add
ja
fstpt
cmp
mov
inc
sti
movsb
cli
paddusw
and
push
push
xchg
in
and
push
sub
enter
jmp
mov
pop
jb
sub
cmp
or
addb
ret
lea
push
in
xchg
arpl
xchg
mov
xchg
repz
jecxz
rol
shll
and
adc
add
je
fs
push
inc
inc
mov
incl
inc
test
and
movsl
mov
inc
adc
push
jnp
inc
push
ret
icebp
inc
in
les
out
xchg
jp
push
daa
push
fs
dec
mov
hlt
or
out
adc
xor
inc
ljmp
mov
mov
repnz
push
out
cmpsb
jmp
hlt
addr16
pusha
loopne
mov
les
adc
cmpsb
or
jne
call
enter
xor
inc
shlb
jo
test
insb
sbb
inc
sbb
jo
sbb
push
into
inc
int3
scas
jo
aad
cwtl
nop
fmuls
leave
bound
int
andl
mov
jb
rcl
rorb
lock
mov
xchg
lret
sub
addb
mov
rclb
imul
in
rorb
scas
ss
xlat
sub
adc
xor
and
jo
sar
mov
hlt
xchg
add
cs
mov
leave
cwtl
mov
fcmovnu
jecxz
jle
out
repz
sti
ljmp
jmp
xchg
fwait
lahf
mov
scas
mov
mov
dec
push
dec
push
push
pop
pop
arpl
imul
ja
jg
pop
ja
movlps
pop
sbb
and
jle
das
xor
push
cmp
ret
lret
fisubrl
loop
push
cli
jmp
mov
inc
cmpsb
jo
scas
mov
mov
dec
push
dec
push
push
pop
pop
bound
push
nop
jb
jp
add
ja
push
adc
sbb
and
int
jo,pn
cmp
xchg
cmpsl
cwtl
lock
xchg
lds
ja
push
push
subb
mov
js
jbe
lret
jo
int
mov
clc
sbb
inc
jmp
movsl
popa
mov
or
in
cltd
arpl
int
add
cld
sbbb
icebp
nop
jl
jo
cltd
iret
enter
and
xor
cwtl
je
jecxz
test
enter
adc
jp
mov
xor
hlt
push
orb
lret
movsb
jo
inc
in
aam
test
les
test
cwtl
push
addr16
dec
cmp
or
mov
push
inc
sub
jmp
sbb
push
enter
mov
js
xor
add
fdivrs
sbb
call
jbe
xchg
sti
mov
cltd
imul
sbb
rcr
testb
lods
hlt
scas
push
jo
jnp
mov
xchg
cwtl
leave
jp
jo
js
pop
ret
test
jp
ffree
push
pop
dec
jno
fs
test
in
jo
mov
repnz
or
ret
push
lds
ret
hlt
loopne
ja
xor
xor
les
iret
nop
lret
sahf
cmpsb
mov
js
int
jmp
or
popf
jo
sbb
pop
les
es
add
nop
test
jecxz
enter
clc
jo
jbe
leave
inc
std
jo
jne
lods
movb
ljmp
leave
fs
jns
or
enter
push
lds
jge
not
das
dec
sahf
add
add
adc
ret
and
or
jns
addb
test
push
ret
push
out
adc
fs
push
lock
mov
inc
lahf
sub
lret
mov
sarl
jp
jo
aad
cmp
adc
fwait
jns
jo
push
add
mov
popa
leave
and
gs
rorb
jmp
jo
imul
inc
fnstsw
inc
xor
out
ret
dec
xor
in
in
in
vmovdqa
cwtl
jbe
divl
incl
mov
jb
leave
push
dec
mov
add
jo
lret
jb
pop
mov
push
dec
lret
jl
lea
adc
jo
mov
lds
add
and
rol
ret
out
pop
jo
ret
dec
add
shll
mov
cwtl
fbstp
aas
push
adc
repz
ret
or
xor
and
and
jno
aad
inc
aas
jo
leave
test
rcrb
call
inc
jo
in
jecxz
sbb
or
out
jae
ret
rorl
jo
fmulp
push
mov
dec
test
ljmp
jo
ror
gs
mov
jo
xor
insl
jo
xchg
mov
into
adcb
xchg
jo
ret
les
rcll
fndisi(8087
movsl
or
sahf
jne
xor
pop
add
js
push
or
out
aad
inc
fs
push
jne
int
jmp
not
dec
jo
popa
cld
add
mov
adc
inc
sub
adcl
lods
push
inc
insb
hlt
mov
imul
loopne
push
daa
adc
sub
pusha
cmp
flds
dec
jo
push
in
hlt
xchg
mov
jo
xor
xorl
cmc
dec
sbb
aaa
or
andb
cmp
test
push
je
lods
inc
xchg
xor
ljmp
jge
mov
mov
popa
dec
mov
add
ljmp
cli
jo
xchg
bound
enter
jmp
jg
xor
mov
pop
arpl
gs
test
xchg
ret
fs
and
fcomip
mulb
rolb
lods
sub
inc
cltd
enter
leave
in
cwtl
dec
mov
mov
jo
gs
and
lock
fnstsw
clc
jmp
sahf
test
ljmp
data16
mov
jo
mov
adc
dec
inc
clc
jo,pt
loope
fwait
out
jo
mov
mov
shlb
inc
dec
in
aam
and
cmc
pop
aad
in
xchg
cmp
push
jo
mov
mov
in
jecxz
dec
je
dec
cmp
out
jp
repz
in
xchg
je
fdivrs
push
or
test
mov
or
dec
sub
loop
out
or
jg
in
jp
jo
xor
jmp
out
lea
std
dec
je
xchg
fstl
sub
jmp
xchg
add
sub
out
mov
shrl
adc
jb
mov
jmp
cmp
cmp
push
inc
loopne
test
arpl
push
mov
enter
pop
push
pop
cltd
cmp
addr16
sarb
dec
xchg
ficompl
push
pop
rolb
inc
xor
andb
scas
sbb
jp
es
mov
ret
add
jo
xor
mov
loop
test
into
lds
sub
mov
jo
mov
scas
xor
jo
jl
out
pop
ret
mov
lds
push
pushf
lods
lea
add
leave
xchg
loop
jo
insl
movsb
lds
imul
cmpsb
shrl
or
sub
testb
ret
lahf
loope
jl
jl
and
fs
mov
fsubrs
fs
add
xchg
scas
inc
rcll
gs
mov
jbe
out
jle
mov
jmp
vaddss
mov
outsl
orb
stc
jl
testb
xlat
enter
call
aad
mov
or
jo
push
jno
out
jo
rorl
enter
fbstp
lds
jo
add
int3
dec
cmpsl
icebp
push
pop
test
xchg
leave
sub
pop
loope
jg
test
int3
pop
push
outsb
xchg
ret
in
mov
push
xor
sahf
sarl
mov
cwtl
iret
pusha
ret
fidivs
fstpl
mov
lret
inc
xor
leave
nop
cli
mov
mov
push
andb
nop
sub
jle
sub
push
loop
and
insb
inc
loopne
xor
adc
adc
jo
add
ret
inc
orb
or
out
int
cli
mov
fimull
les
cmp
cmpsl
and
leave
cwtl
jg
dec
shrb
stos
cmp
mov
sub
cmp
ror
dec
ja
sub
js
aas
mov
cmc
faddp
movsb
xchg
jo
subb
lds
call
mov
pop
jo
mov
ljmp
popf
push
mov
ret
cld
or
out
sbb
push
mov
mov
in
dec
ss
dec
pusha
mov
jo
xor
addr16
sub
mov
xor
jae
push
ret
movl
lcall
testb
loop
pop
inc
js
in
or
jo
loopne
rcrl
mov
cmp
sub
pushf
dec
jo
or
bound
jo
test
aam
adc
mov
push
frstpm(287
scas
iret
pop
jo
loope
or
add
jo
repnz
mov
ljmp
movsl
xorb
or
lock
addb
out
xchg
jo
inc
hlt
pop
inc
fs
dec
leave
cmpb
je
es
shr
or
lahf
cmpsl
push
inc
lock
hlt
loope
js
test
mov
andb
jo
inc
sub
add
jo
movsl
mov
jp
xchg
fadds
and
into
call
xchg
fs
lds
fwait
femms
dec
add
xchg
aad
jo
addr16
jl
mov
test
xor
mov
js
ror
ficoml
loop
inc
cmp
ljmp
xlat
leave
push
jo
xchg
mov
jo
pusha
xor
int3
jo
push
lds
pop
jne
imul
or
jmp
sar
cmp
push
cmpsl
lfs
sbb
pop
iret
mov
mov
cmp
jno
jle
xchg
inc
xchg
jp
jo
sbb
imul
push
xchg
fdivrl
adc
movsb
andb
lea
xlat
hlt
int
test
push
jnp
mov
das
add
stc
jle
popa
std
mov
or
jle
negb
sub
mov
outsb
xchg
push
push
mov
dec
and
jo
into
lods
add
out
sbb
leave
loope
loop
or
aas
adc
fiadds
addl
push
jo
outsb
jne
lods
mov
aad
jo
loop
mov
into
jo
mov
inc
push
sbb
jo
aaa
popa
lret
jo
les
lds
mov
add
ja
lret
arpl
into
shll
ja
jne
jae
je
lock
push
mov
jl
sub
movsb
push
mov
mov
andl
mov
scas
inc
push
ret
sbb
jns
adc
add
dec
sti
xlat
jle
fnstenv
fwait
repz
addl
repnz
jo
mov
add
jo
sti
pop
or
and
xor
push
xlat
test
mov
cltd
jp
jo
pop
pop
mov
je
and
jo
lds
test
or
mov
loop
std
jo
ficoml
inc
and
subl
jo
daa
popl
or
jo
sbb
mov
jo
xor
das
jmp
sub
out
int
xor
ret
jle
js
cvtps2pi
divb
xchg
sti
lods
rclb
loope
pop
mov
sarl
adcb
xor
scas
push
divl
jo
jae
push
push
jo
pop
jne
aad
ret
add
stos
leave
mov
dec
std
inc
stos
mov
inc
fs
jo
dec
xor
repz
lret
inc
roll
jo
or
mov
mov
imul
in
fwait
imul
rorl
adc
dec
add
jge
jnp
or
lds
stc
test
sbb
jno
push
mov
adcb
icebp
shlb
pop
and
clc
es
mov
dec
std
push
fdivs
inc
js
nop
jg
popf
cwtl
icebp
mov
jno
rorb
arpl
mov
ja
push
in
and
cwtl
jns
inc
mov
push
sub
jno
ljmp
adc
xchg
xchg
dec
and
aam
mov
add
loop
and
xchg
stos
sbb
mov
push
xor
and
mov
jmp
mov
dec
shrb
lea
jge
jo
pop
ficompl
push
push
fs
js
xchg
dec
jo
stos
mov
push
mov
mov
jae
sub
jl
mov
push
add
daa
jo
ja
inc
repnz
push
ljmp
dec
cld
scas
dec
mov
or
gs
mov
sbb
ss
dec
dec
mov
movsl
jbe
negl
add
lds
and
mov
ja
cmc
sub
jbe
jo
sahf
shll
mov
pop
out
xchg
sahf
scas
je
mov
mov
push
cmp
das
ja
push
nop
dec
and
jb
xor
and
rcll
scas
or
imul
mov
mov
sbb
xchg
stos
lcall
in
add
daa
insb
sub
push
mov
jl
sbbl
jle
mov
push
or
cmp
iret
inc
and
ret
pop
imul
mov
ja
iret
sub
jo
lret
pusha
mov
dec
jo
enter
aad
cltd
hlt
pmulhw
mov
ds
push
jecxz
inc
or
lahf
leave
gs
xor
mov
mov
cmpsl
jb
jp
pop
fucom
outsb
mov
cmp
jno
insb
push
std
xchg
aaa
stc
jo
xchg
xchg
mov
add
mov
or
nop
movsb
std
jne
stos
jl
push
cmpsb
jb
lret
inc
mov
out
fnstsw
lds
push
or
xchg
pop
jmp
fs
push
sbbl
mov
popf
jge
lea
test
sti
stos
daa
mov
jo
cmpsb
subb
test
nop/reserved
push
lds
outsb
mov
push
movsl
jo
or
fisubrs
scas
xchg
mov
ss
dec
pop
jo
sbb
pushf
sub
add
cli
dec
bound
ja
mov
mov
sti
adc
sub
pop
aam
outsb
stos
clc
mov
push
out
xor
stos
mov
fxsave
sbb
sbbb
jo
sbb
je
xchg
lds
adc
cltd
add
shlb
nop
cli
xor
xor
jo
and
push
icebp
loop
mov
and
fisubrs
jecxz
xchg
jge
inc
push
jo
sub
imul
xor
jo
rcrb
insb
notb
fucomip
jmp
mov
rol
mov
leave
cmp
jg
jmp
adc
jo
sbb
xor
pop
and
xor
jae
in
push
in
rolb
dec
pusha
mov
clc
icebp
orb
pop
mov
shll
leave
jb
mov
addb
pop
jae
xlat
js
mov
icebp
shll
imul
mov
push
xchg
cmp
rcrb
jmp
cmp
imul
icebp
adc
xorb
insb
test
mov
and
mov
sbb
pop
xor
mov
xlat
inc
inc
int3
jo
shr
cli
push
popa
jo
and
mov
call
jo
jns
inc
pop
dec
inc
pop
nop
cmp
popf
imul
push
cmpsl
mov
jge
icebp
jo
fstps
add
in
fdivrl
cmp
clc
pop
hlt
rorl
mov
int
sub
mov
je
cmp
js
subb
dec
jo
add
pusha
push
out
jl
push
loopne
fisttpl
js
stc
cwtl
push
enter
xchg
mov
js
outsl
outsb
std
add
ret
push
in
jmp
out
mov
xorl
pusha
push
dec
mov
inc
inc
mov
cltd
icebp
mov
jg
inc
dec
dec
jmp
inc
dec
icebp
std
mov
imul
lods
ret
lcall
fmul
xor
cmpsb
addr16
iret
jo
push
cmp
ja
leave
enter
and
sbb
lret
inc
jno
jo
js
adc
repz
divl
or
xor
adc
mov
divb
ljmp
jo
xchg
dec
fnstsw
mov
mov
cli
arpl
sub
mov
and
clc
fcmovnb
js
cltd
out
pop
add
ja
lods
jge
xor
stos
mov
dec
mov
mov
lods
int
in
lret
sub
insb
cmp
add
jnp
push
xor
or
cld
subl
jb
jle
imul
push
shlb
mov
push
ljmp
dec
mov
inc
jnp
xor
pop
mov
scas
xor
fdivrl
push
and
outsb
and
insl
pop
pushf
bound
mov
clc
stos
js
push
fimuls
push
loope
mov
jg,pn
shlb
movsb
push
js
pop
mov
ds
in
jo
add
push
jp
push
inc
and
sub
hlt
outsb
orb
cmp
xor
stos
sub
cmc
ljmp
mov
cmpsl
leave
jo
xorl
jo
pop
movsb
divb
mov
and
sti
pusha
mov
divl
leave
sub
jo
mov
mov
jecxz
les
mov
push
jns
jo
loop
scas
dec
sub
into
repz
lea
add
jmp
sbb
in
push
push
subb
lahf
inc
push
shrb
or
push
shlb
inc
mov
jnp
jae
movsl
int
and
jmp
js
lret
fidivl
fsubrs
push
pop
xchg
mov
jle
call
jp
lock
xorb
outsb
aam
dec
jle
outsl
xor
aas
cmc
mov
sar
aad
mov
jnp
dec
outsb
in
push
lock
imul
push
test
mov
pop
out
int
aam
fucomip
sarl
fsubrs
js
vmwrite
fidivrl
sbb
cld
push
mov
jo
push
jmp
lds
aad
ds
sahf
push
or
fldl
data16
xor
fistps
std
jo
push
lret
roll
dec
outsb
stos
lahf
adc
jo
fildl
adc
xor
inc
jo
aam
mov
ss
scas
ret
cwtl
inc
inc
rep
fcoml
push
dec
sub
mov
adc
mov
push
cwtl
imul
hlt
xor
push
popl
fwait
jg
and
adc
mov
add
mov
jno
in
cld
push
in
scas
hlt
sbb
data16
pop
cmp
mov
mov
nop
adc
stc
out
outsl
push
inc
push
jae
jo
out
pop
cmp
fs
rorl
jno,pn
mov
lret
sqrtps
cs
pop
jnp
arpl
xor
xchg
jo
sub
dec
xchg
fisttpl
push
les
jne
sbb
sub
inc
add
in
popf
insb
jo
jl
lods
sub
out
jne
loopw
outsb
jb
jo
daa
or
outsl
dec
mov
or
fwait
pop
push
xor
out
xlat
cli
mov
roll
cld
or
mov
sbb
subl
xor
mov
push
mov
popa
out
xchg
insl
xor
hlt
add
fcomi
and
cs
sub
nop
mov
dec
aaa
std
push
xor
xchg
dec
jbe
cld
fs
push
cmp
outsl
jb
je
jmp
dec
or
push
mov
push
sub
gs
test
movsl
sbb
and
fstpt
lock
pop
subl
or
int
jo
inc
mov
dec
cmpsb
insb
out
hlt
adc
push
sub
dec
test
sub
inc
shlb
push
and
sbb
insl
pop
jmp
lahf
lods
xchg
pop
xor
or
in
sub
xchg
sbb
inc
imull
or
and
sub
or
iret
clc
dec
jo
xor
pop
mov
lret
dec
dec
lock
outsl
ss
je
js
xor
aam
xchg
sub
ljmp
stos
dec
pop
jo
add
cmpsb
fdivrl
add
out
jns
push
jo
inc
fdivs
cmp
jb
or
call
push
cmp
adc
or
pusha
jmp
inc
xlat
sbb
mov
add
loopne
mov
imul
int
lods
outsb
lcall
shl
fld
sub
shrl
mov
push
repz
out
mov
push
and
testb
inc
jbe
js
inc
out
sbb
add
sbb
xchg
inc
dec
enter
xor
ret
xchg
shl
hlt
jo,pn
xchg
test
lret
sub
sbb
std
and
pop
icebp
or
mov
imul
mov
fidivs
les
inc
test
cltd
scas
pop
movsl
aaa
sbb
lret
push
jle
and
je
push
jo
scas
xchg
pop
sbb
pop
push
push
sub
sub
jp
jo
adc
sub
mov
jo
mov
jno
pop
rol
jo
add
ss
ljmp
test
jbe
es
jo
mov
dec
pushf
in
inc
push
adcb
imul
jne
stos
daa
icebp
int3
xor
cmp
add
jo
cmpsb
fisubrs
jo
xor
sub
imull
inc
dec
push
js
add
imul
addr16
outsb
mov
and
pop
xor
sbb
jo
jge
rolb
jo
and
pop
pushf
sub
std
test
imul
pop
test
mov
mov
mov
mov
jle
psrld
jl
jl
xor
jnp
jns
jl
mov
mov
fwait
sbb
jo
sub
mov
jo
dec
aaa
mov
leave
gs
cmp
je
aad
sti
int3
push
mov
cli
push
add
cmp
add
inc
push
pop
shlb
xor
jo
inc
movsl
mov
jo
arpl
out
scas
imul
pop
mov
pop
movsb
fisubl
mov
lret
rorb
popa
shll
faddl
jo
push
mov
scas
xor
mov
sbb
stos
or
in
arpl
mov
jo
mov
inc
pusha
aaa
mov
nop
subl
xchg
std
mov
dec
pop
jl
lods
or
mov
lea
nop
xor
sahf
pop
std
repnz
call
mov
movsl
and
jmp
popf
in
push
rolb
sarl
cwtl
push
jb
pop
or
cs
jp
jo
xor
ficoms
push
je
mov
xchg
mov
xor
xorl
add
sbb
add
jo
into
mov
jmp
mov
or
mov
or
pop
and
rolb
pop
cmp
jo
and
in
mov
pop
or
mov
xorl
or
mov
adc
sbb
mov
and
inc
enter
jp,pn
jne
push
andl
jnp
pop
not
or
xchg
inc
sbb
mov
repz
fs
cli
or
gs
mov
jo
adc
xor
jo
xchg
bound
adc
es
pop
cmp
std
push
xorb
xor
sahf
lret
adc
dec
outsl
or
push
pop
jl
or
dec
nop
push
stos
js
icebp
jo
mov
mov
fldl
pop
jae
and
xchg
in
sbb
lds
aad
dec
jbe
jo
sarb
mov
shr
es
mov
mov
mov
jae
pop
sub
mov
cli
cmp
outsl
je
orb
loop
in
cmp
leave
cmp
add
mov
addb
fbstp
add
sub
jae
dec
jo
pop
xchg
pop
add
nop
lock
or
jns
ss
jmp
sahf
pop
loope
push
mov
jns
jmp
int
pop
jb
sub
imul
cli
pusha
lret
or
bound
outsl
and
xchg
nop
lds
jo
or
xchg
jg
js
or
add
cmpb
cmp
nop
dec
xchg
jns
je
sbb
negb
jo
repz
cmc
std
fdivl
pop
mov
scas
lods
mov
lea
or
xchg
popf
cld
sub
stc
arpl
test
in
push
je
pop
stc
outsb
and
in
push
inc
mov
sti
les
add
repnz
add
jo
daa
jp
adc
leave
xor
xor
inc
push
mov
dec
jo
push
mov
jge
fsubrl
add
xor
sbb
jo
dec
jae
hlt
aad
cmpsb
push
inc
cwtl
jnp
adc
fldcw
mov
pushl
mov
out
loope
or
int
test
xor
jl
push
nop
sbb
arpl
push
fs
jo
fwait
add
mov
sbb
pop
lret
jecxz
xor
cmp
test
dec
mov
mov
jae
lret
dec
insl
lods
mov
sbb
jnp
inc
jbe
mov
mov
out
push
mov
push
cmp
inc
push
divb
mov
jae
repnz
xchg
mov
or
rcrl
loop
mov
ja
mov
daa
push
pushl
jecxz
fbld
fisubl
nop
imul
jo
out
lret
dec
dec
daa
lock
fs
mov
jo
pop
cmp
mov
aad
push
mov
int
popf
push
sub
frstor
xor
pop
xor
sahf
scas
pop
mov
imul
imul
cmp
jge
and
mov
jae
outsl
scas
dec
and
sti
stos
test
sbb
or
or
adc
ljmp
dec
jo
push
xchg
or
shl
cmp
bound
or
pushf
xchg
push
inc
sti
dec
gs
ljmp
xchg
cmp
and
mov
fdivl
push
mov
ret
mov
ret
jno
nop
jne
shlb
stos
ret
or
cmp
sub
hlt
push
jo
push
mov
sar
rsm
scas
test
lret
mov
lds
xor
insl
mov
push
clc
ljmp
lock
add
punpckhwd
aaa
sti
popf
jle
outsb
mov
dec
ret
lds
movsl
dec
push
sub
pop
jg
lock
pop
lret
rorb
test
orb
in
andl
imul
mov
jo
mov
push
jo
xchg
cld
pop
fidivs
xchg
add
outsl
cmc
jo
es
push
stos
push
adc
jo
ss
mov
out
xor
inc
js
lds
push
cld
in
or
std
stos
xchg
jbe
sbb
imul
clc
js
jo
adc
daa
or
add
add
mov
push
push
mov
out
pop
gs
divb
je
pop
jno
sub
paddusw
pop
mov
jns
mov
jmp
js
outsl
aad
stos
mov
movsb
jnp
mov
rolb
sub
adcb
xchg
in
in
loopne
rorl
shrb
sarl
jbe
setg
jo
test
push
addb
lods
adc
sti
lods
leave
pushf
sbb
cmpsb
lret
xchg
daa
adc
push
stos
sbb
jo
testl
daa
mov
arpl
pushf
inc
jo
orl
or
ja
sub
in
sbb
iret
mov
int3
lret
jmp
mov
pop
xorb
mov
jo
mov
push
mov
bound
push
iret
sub
subb
mov
test
mov
push
cmp
dec
scas
mov
into
jo,pt
ja
jae
xchg
cmp
outsb
test
pop
sub
hlt
cmpsb
pop
or
lods
les
in
dec
lds
xor
jl
pop
idivb
push
xchg
cmp
cmp
nop
aaa
sub
mov
jmp
call
pop
and
repnz
inc
test
xor
add
pop
pop
cmp
add
push
enter
mov
dec
push
pop
fs
push
jge
jo
jle
std
hlt
out
and
jo
in
and
mov
or
test
fnstsw
push
lods
push
push
out
int
punpckldq
popf
xor
jo
xchg
push
arpl
sbb
jo
push
cld
xchg
cmp
jo
out
or
dec
stos
loopne
push
andb
and
cmc
cli
inc
jo
cltd
mov
addr16
loope
out
mov
push
jo
test
push
jo
mov
sub
jb
push
fcomps
dec
aam
xor
call
push
jmp
loop
jp
in
jg
loop
fldenv
daa
into
adcb
fs
pop
rorb
repnz
lock
xor
insl
jo
inc
clc
xchg
push
xor
std
push
call
jno
pop
dec
xchg
fs
fnstenv
shrb
push
jno
fs
push
xchg
xor
xor
jge
mov
mov
adc
cld
jns
and
or
call
push
hlt
pop
scas
arpl
sbb
std
ja
stos
mov
xlat
leave
outsl
inc
adc
add
vaddps
insb
mov
outsl
cmpb
dec
mov
inc
popa
das
jo
xchg
lahf
mov
jo
clc
cli
xlat
mov
push
fs
xchg
lahf
xchg
shlb
and
cs
push
pop
js
sti
shll
cmp
testl
aas
lret
cs
icebp
outsl
jbe
pop
lods
fildl
shll
rolb
stc
cmp
jo
cmc
pop
and
lods
dec
push
push
mov
cwtl
push
cmp
hlt
sbb
and
js
jo
aaa
ss
nop
cli
inc
lahf
mov
pop
sbb
mov
dec
mov
jo
push
into
adc
ds
out
inc
push
add
nop
dec
fs
jecxz
push
lods
xor
into
sbb
sub
or
push
iret
or
subb
in
jo
test
out
adc
xorb
inc
and
negb
mov
pop
jecxz
dec
repz
shlb
adc
ja
push
cmp
xchg
jbe
movsl
add
add
lods
lds
and
or
jl
add
jbe
cmpsb
mov
or
xchg
pop
mov
rorb
pop
out
jne
jbe
xor
inc
rorb
or
stos
mov
out
cmc
jbe
and
mov
es
push
outsl
jg
sbb
lea
stos
outsb
mov
fs
movsl
cmp
or
fstpt
dec
mov
xchg
je
jae
arpl
arpl
lahf
out
lods
and
test
mov
dec
mov
pop
repz
jb
and
dec
nopl
jnp
lock
jo
pop
push
insb
je
sahf
hlt
fidivrs
ficompl
addr16
test
gs
cmpsl
sub
rcrb
loope,pt
bound
lods
and
int3
or
pop
fnstcw
jo
jge
lea
mov
sub
dec
insb
test
jl
jno
jo
std
add
dec
test
push
out
arpl
sbb
cmp
mov
loopne
ret
jo
cli
ror
pop
lret
push
stos
adc
ss
push
pop
int
xchg
pop
lods
sarl
int3
std
push
ret
fdiv
mov
cmp
xlat
jmp
and
cs
leave
dec
dec
in
lods
or
iret
addb
xchg
stos
or
cmpb
cli
jo
imul
jo
xlat
mov
or
hlt
xchg
lret
lahf
addl
sbb
mov
cmp
std
push
mov
jo
aad
repz
sub
subl
push
bound
mov
out
mov
dec
aas
sbb
lock
and
inc
mov
adc
inc
xchg
ljmp
enter
std
scas
push
je
adc
or
mov
mov
cmp
push
repnz
frstor
dec
daa
sbb
jae
pop
push
adc
push
sub
inc
push
xor
cmpb
adc
pop
sub
notl
cmp
push
xorl
xchg
jo
xchg
lcall
shll
pop
mov
scas
mov
jo
js
bound
mov
mov
add
cwtl
sahf
movsb
sbb
nop
or
dec
inc
js
inc
loope
pop
ret
lock
sti
scas
into
cli
mov
jo
fstpt
xor
and
or
inc
inc
sub
psrlq
nop
bound
in
mov
mov
and
jo
popa
push
pop
out
and
push
push
sbb
out
das
iret
add
movsb
and
imul
mov
out
jae
mov
nop
fs
mov
jo
lds
int
or
mov
sub
mov
rorb
shll
popa
add
mov
js
push
and
nop
jb
loop
lahf
lret
sbb
xor
ret
push
mov
lods
imul
in
scas
or
dec
xchg
in
jg
jp
rcll
cmpl
sub
invd
cli
mov
mov
mov
subb
cs
push
ljmp
rcrb
pop
mov
xor
push
test
push
sbb
int
mov
dec
fnstsw
jmp
add
out
jg
push
sub
fsts
jo
pop
outsb
and
lret
scas
sbb
jo
insl
sbb
rorb
inc
dec
out
cltd
imul
mov
add
jae
xchg
jo
cmpsb
lds
mov
push
sbb
jo
mov
push
jo
push
inc
enter
and
jl
in
push
cltd
inc
mov
rclb
stc
add
xorl
jmp
jo
adc
inc
adc
test
insb
and
mov
fdivs
rcl
pop
adc
inc
test
cwtl
out
iret
lock
xchg
fimull
scas
rcrl
cltd
mov
lock
outsl
jns
mov
fisubrl
lret
shl
cmpb
dec
and
push
insb
addb
mov
adc
cld
inc
scas
or
cmp
subb
ljmp
sub
inc
movb
cmp
cltd
data16
mov
mov
divb
mov
aam
pop
imul
mov
add
adc
clc
or
orl
jo
in
stos
pushf
and
lods
std
insb
adc
aas
xor
mov
subb
imul
jns
or
jo
fwait
retw
mov
in
xor
dec
mov
les
mov
dec
cltd
cs
dec
xor
jp
js
scas
sbbb
sti
cli
rsqrtps
pop
sbbl
dec
cmpl
dec
and
sub
inc
dec
lcall
jae
mov
and
outsb
or
ds
pop
cmpsl
fcmovu
push
or
sti
jne
add
push
sub
pop
push
jb
sbb
divl
addr16
adc
xchg
jo
push
push
mov
sbb
pop
adcb
xchg
jo
nop
dec
scas
fs
lahf
xchg
and
mov
mov
mov
jo
out
pop
dec
cmp
test
push
pushf
jl
inc
loopne
lahf
shll
mov
sahf
add
xlat
adc
push
inc
adc
mov
adc
jbe
mov
insb
push
push
fidivrs
in
pop
jb
lahf
cwtl
sbb
xchg
jmp
push
fidivrl
insb
repz
aad
dec
fcmovnbe
popf
fdivl
mov
outsl
sti
je
jmp
push
lock
pusha
xlat
and
push
iret
jmp
mov
cmp
jmp
add
int3
mov
sub
icebp
pop
insb
add
jb
aas
stos
push
loop
repnz
subl
nop
cmp
das
mov
jbe
repnz
leave
pop
jo
push
jae
and
js
scas
or
sbb
mov
aad
je
sbb
xor
dec
dec
faddp
mov
repz
or
push
push
in
clc
push
or
inc
adc
das
dec
mov
into
scas
loop
les
xchg
adc
out
call
push
jo
mov
incl
enter
adcl
in
fistpll
cs
lahf
repnz
push
cmpb
orl
or
or
ljmp
in
add
push
xchg
dec
cltd
in
adc
add
pop
inc
icebp
movsl
cmp
rcl
nop
jbe
dec
mov
jne
add
adc
pop
inc
inc
mov
insl
je
sarb
pushf
adc
pop
mov
jno
je
imul
push
sub
repnz
sbb
jnp
dec
jns
insb
out
xchg
wbinvd
xor
add
cld
fs
sbb
xchg
addb
mov
xchg
push
imul
add
xchg
mov
rcll
repz
sub
adc
push
stos
imul
mov
cmp
jle
bswap
xchg
xor
insb
dec
push
add
aaa
subl
mov
dec
clc
jb
addb
aaa
jo
call
pop
pop
scas
push
xchg
mov
mov
int3
push
inc
jo
jno
push
dec
in
adc
jb
test
aaa
shll
int3
popf
mov
mov
out
dec
pop
or
lods
push
nop
pop
xor
ss
jb
mov
fistl
push
sbbl
sbb
loope,pn
repnz
xorb
loop
popa
out
les
mov
push
add
sub
cli
mov
jl
cmpsb
aad
xor
sbb
jo
shrl
jmp
rcr
mov
mov
icebp
dec
mov
stc
or
pushf
fistl
out
jmp
inc
insb
push
dec
push
adc
fwait
gs
jo
mov
sti
rclb
push
mov
sub
xor
add
fwait
and
into
jecxz
add
adcl
and
push
and
cwtl
pop
lahf
out
cmp
cmp
out
cmp
push
jl
out
arpl
mov
ret
push
cmp
jg
lahf
insb
cltd
in
cmp
test
lods
adc
hlt
jb
movsb
insb
cmpsl
xchg
lds
push
add
pop
call
or
cmpb
lret
cli
clc
xorb
push
inc
mov
out
xor
mov
dec
leave
sub
jo
mov
bound
xor
pushf
sub
jl
sub
ret
adc
in
jo
jne
jbe
outsb
dec
sbb
jo
mov
jnp
dec
int3
sahf
xorb
nop
push
cmpsb
mov
test
mov
jo,pn
and
jge
mov
sub
icebp
mov
adc
cmp
jmp
insl
adc
push
dec
fnstenv
jg
pop
pop
push
xor
push
mov
jl
mov
dec
xchg
cpuid
loop
jmp
jb
in
lock
insl
pop
cmp
icebp
mov
jo
daa
xchg
shlb
popa
inc
push
fsubp
andl
mov
push
jo
es
inc
shlb
jo
jle
daa
scas
mov
dec
stos
push
aam
rol
and
cld
dec
fs
mov
repz
fwait
stc
dec
push
lods
shr
ret
js
inc
adc
cmp
into
ss
xchg
jo
xor
adc
xchg
xlat
jo
andl
mov
les
push
xor
enter
jns
cs
popa
and
emms
xchg
fists
je
das
mov
icebp
jo
sti
xchg
xor
popa
xor
xchg
aam
in
xchg
imul
pop
jb
lock
hlt
cmpsb
inc
xchg
and
jo
mov
and
inc
arpl
adc
jae
fwait
sbb
hlt
add
fisubs
xchg
lods
xor
fists
adc
loop
bound
jo
mov
scas
cmp
or
mov
aas
in
nopl
mov
inc
mov
leave
mov
push
adc
repz
inc
mov
jb
es
pop
mov
pop
mov
lock
sbb
pop
testl
xor
lods
rclb
scas
hlt
sub
mov
jle
sbb
cmp
xchg
pop
or
jp
into
push
and
loope
xchg
sti
cld
int3
sbb
mov
mov
lock
push
jae
xor
cmpsb
mov
popf
dec
insb
fcmovnb
adcb
nop
repnz
popa
lock
call
xor
jo
hlt
mov
fcoms
cmp
adc
jo
les
hlt
mov
cmp
or
xlat
ja
lock
cmp
sub
and
imul
outsb
ss
pop
out
jae
cmp
ja
jne
or
sub
bound
dec
aad
adc
data16
cli
push
dec
jo
sbb
es
jo
rcrb
dec
and
test
hlt
mov
inc
out
stos
cld
ja
andb
mov
lcall
movsl
mov
jo
sahf
cmp
pop
cmp
adc
jo
andl
add
jmp
xchg
or
push
xchg
ss
jae
js
mov
mov
jno
sti
mov
insb
lcall
fs
scas
lahf
jmp
loopne
inc
mov
mov
sahf
or
mov
fidivrl
xchg
jo
pop
nop
jmp
push
push
add
rcl
adc
addr16
and
std
out
dec
out
test
imul
xchg
add
subb
lds
jo
popa
shl
iret
cli
jmp
in
das
xchg
hlt
add
ret
lea
mov
xchg
mov
inc
and
cmpsl
jo
xchg
xchg
jb
sti
xor
test
lahf
add
bound
pop
lods
ja
enter
xchg
ret
in
push
lods
jge
jo
cmp
xchg
or
ljmp
cmc
popf
jge
js
mov
and
outsl
xchg
shrl
outsb
imul
pusha
mov
jo
test
loope
cmp
or
pushf
mov
inc
loop
int
xor
cmp
xor
aas
mov
pop
push
fwait
dec
mov
sub
popa
add
scas
lcall
sub
in
bound
sub
push
push
scas
jo
sub
bound
das
dec
outsb
or
lcall
mov
add
ret
fcmove
jo
jmp
les
xchg
jbe
imul
sbb
jne
sub
mov
cli
sub
xchg
jmp
or
mov
pop
inc
jl
ffree
icebp
push
cmpsb
sbbl
call
xor
push
lock
xor
push
cld
xor
inc
push
scas
xchg
and
int
sub
sbb
jle
add
jp
scas
pop
xchg
test
mov
ss
push
xchg
imul
jmp
or
arpl
andb
push
in
xlat
sbb
jno
mov
push
pop
push
sub
mov
cwtl
jbe
xor
rorl
inc
jno
ret
into
sbb
lods
sbbb
fisttpll
out
inc
jne
js
dec
sarl
xor
mov
mov
cld
mov
or
mov
mov
push
mov
lahf
nop
adc
out
jl
mov
push
lret
xchg
inc
aas
cltd
jb
lea
sbb
arpl
push
loope
insb
sub
cs
push
cmp
sbb
test
jne
push
mov
insb
pop
xchg
fnstcw
mov
je
sub
lds
jae
pop
mov
shll
mov
jl
stos
jae
sbb
mov
or
lret
jne
xor
sub
ret
dec
test
sahf
jo
insl
mov
sbb
pop
xchg
mov
jo
clc
or
stc
in
ja
inc
dec
enter
jns
jo
sbb
push
stos
lock
in
sbb
fdivr
adcb
jo
or
jbe
cmpb
xchg
and
pop
mov
test
jo
es
inc
pusha
aam
sub
jge
jo
movsb
push
push
ds
push
rcll
ret
cwtl
mov
add
jge
fisubs
mov
dec
push
outsb
lods
pop
mov
call
out
fs
and
imul
ja
jno
lret
std
mov
jp
fstpt
fsubrl
in
orb
hlt
inc
mov
nop
mov
fisttps
jecxz
cs
xchg
ret
adcb
shl
sub
mov
imul
push
pop
xor
orb
shrl
orb
push
in
dec
flds
mov
and
roll
insl
rcll
and
fs
xlat
xchg
add
sti
dec
mov
cmp
repz
mov
scas
xor
jo
out
mov
icebp
jg
arpl
stc
adc
add
cld
test
dec
mov
jo
cwtl
pop
mov
stc
fwait
outsl
or
jg
loopne
cmp
pop
mov
jb
sub
lods
mov
dec
hlt
xchg
sub
cmp
shl
es
aaa
and
jmp
aas
adc
cmp
je
jne
mov
adcb
inc
out
pop
mov
scas
sbb
dec
sub
push
lods
testb
mov
mov
pop
add
sub
add
push
movsb
js
jns
push
arpl
icebp
mov
std
jne
xchg
das
inc
lods
push
cltd
mov
cmp
pop
xorb
pusha
mov
cwtl
js
data16
bswap
mov
adc
dec
jle
out
lods
test
pop
push
or
xchg
andb
sub
icebp
nop
mov
jl
jb
andb
nop
and
jne
aad
shlb
adcb
sbbb
mov
adc
push
adc
in
pop
jb
pusha
xlat
sub
lock
decb
push
cmp
sub
dec
or
sub
adc
push
negl
dec
pop
aad
andb
add
sti
lea
and
insb
cmp
mov
subb
or
cmp
jo
pusha
loop
dec
stc
mov
dec
jp
pop
rcr
push
out
test
jae
lea
sub
ret
adc
repz
mov
or
push
enter
jae
pop
cmpsl
iret
lds
xchg
ficomps
std
bound
fmul
mov
in
data16
jecxz
push
out
pop
jo
or
gs
loope
das
sub
push
xchg
jo
not
arpl
pop
add
lds
outsb
out
push
xor
push
ret
mov
jo
loope
fcmovnu
and
shlb
pusha
out
fdiv
cmc
cmp
jo
mov
imul
enter
rorl
shl
push
in
mov
js
leave
xor
sub
cmp
js
inc
jecxz
lcall
sbb
jae
adc
xor
pop
cmp
test
push
add
xor
jmp
jo
aam
shlb
mov
lds
jo
jbe
cmp
gs
int3
jo
add
inc
notl
push
scas
sbb
bound
shll
fs
setae
push
loope
paddsb
push
ljmp
mov
fidivrl
jb
jge
jo
pushl
fs
gs
push
sub
mov
or
adc
ret
int
sbb
push
adc
sub
pop
push
and
push
mov
jbe
ret
aad
and
jle
jo
insl
data16
adc
xor
jo
test
xchg
fnstenv
sbb
addb
sarl
ret
repnz
mov
out
enter
sub
test
cmp
dec
inc
lret
jo
mov
movsl
jecxz
xchg
test
xchg
mov
jl
mov
mov
inc
jg
cli
in
js
xor
xor
jo
imul
bound
xor
jo
pop
out
push
mov
shlb
outsl
cmpsl
xor
sbb
jae
jo
inc
xor
or
push
sbb
add
imul
xor
mov
jl
fmull
push
jg
dec
push
pop
aad
insb
cli
pop
fldcw
or
rcrb
es
leave
jb
and
fwait
lds
pop
notl
andb
imul
aad
mov
mov
fisubrl
fistps
push
stc
cltd
leave
xchg
jne
stos
repz
sub
shrl
mov
xchg
int
sbbl
in
aam
ss
int3
bound
cld
lret
lock
dec
pop
in
mov
mov
push
add
pop
cmp
mov
outsl
and
jb
push
dec
lods
jo
daa
in
inc
aas
mov
jo
fstp
lea
jmp
in
dec
loope
loope
aaa
jo
fcomps
xchg
jo
sbbl
loope
mov
sbb
int
fsubrp
jbe
fs
jo
roll
shl
mov
inc
ss
and
loop
into
subb
jo
add
sub
pop
mov
lret
xor
data16
clc
aas
push
fisubrl
mov
insb
cmc
int3
int
sbb
jmp
push
ds
sbb
jmp
test
notl
in
mov
push
cmp
add
fs
mov
jo
bound
and
mov
movsl
shl
pop
repz
call
lret
scas
lods
mov
xchg
orl
xlat
das
test
push
inc
fwait
in
ret
loope
push
pusha
out
push
ficompl
aad
test
dec
mov
jp
ds
pop
leave
jmp
xchg
test
rol
ret
outsb
jne
cltd
adc
mov
loopne
jo
test
push
nop
adc
jns
adc
les
jo
test
jl
ss
jl
adc
xor
out
mov
mov
pop
test
jo
repnz
and
lea
test
imull
setno
pop
jo
inc
fiadds
jbe
pop
shrl
mov
xchg
enter
or
mov
test
pop
xor
jo
insl
clc
adc
sbb
jo
repnz
stc
sub
jo
test
mov
sub
rcl
lea
jecxz
or
jo
mov
and
push
call
loope
cmc
mov
xlat
dec
sub
mov
ret
stos
xchg
stc
mov
sub
jae
jo
sub
repnz
lret
pushf
mov
mov
sbb
shlb
or
mov
out
jb
cmp
movsl
fstl
pusha
test
cmc
clc
popf
jo
nop
int
xor
and
out
inc
in
jne
shlb
ds
lret
out
or
push
mov
inc
ss
jmp
jbe
adcl
push
into
inc
sub
in
in
nop
sbb
inc
jnp
out
jno
push
idivb
arpl
jbe
xor
xchg
in
jle,pt
out
ljmp
jo
jmp
jo
push
push
mov
les
aad
cltd
adc
cmpsl
lods
ret
cmpsb
xorb
clc
pushf
repz
out
sub
int
mov
pop
adc
popf
dec
ja
pop
jo
mov
sub
andl
cltd
xchg
in
jge
mov
mov
push
lea
dec
jno
nop
jo
clc
call
cltd
jo
sar
gs
push
jo
dec
inc
movsb
push
js
mov
xchg
mov
mov
nop
mov
fidivl
bound
xchg
inc
pop
jge
jo
mov
lods
divb
lcall
out
jo
mov
pushf
dec
movl
shlb
and
ds
add
cld
mov
jno
sbbl
add
shrb
fistps
in
aaa
mov
adc
addr16
push
nop
add
jbe
fldpi
jo
or
loop
out
mov
mov
aas
fcoml
jle
jb
loope
jo
leave
cmpsb
icebp
loop
bound
test
jle
insb
jo,pt
iret
mov
dec
xor
gs
enter
jno
cmp
push
xor
mov
push
dec
sbb
test
and
in
test
jae
lock
xchg
cmpl
mov
jb
inc
add
xbegin
xor
lods
add
cltd
mov
ret
iret
mov
inc
mov
shlb
mov
jmp
mov
dec
shlb
push
and
ret
into
mov
jae
test
nop
jp
mov
aam
jno
into
push
cwtl
cltd
fxch
mov
dec
xor
xor
lret
fnstcw
iret
adc
mov
mov
enter
xor
jl
notb
bound
or
mov
jo
sbb
or
enter
out
fwait
int3
popa
lret
and
pand
test
iret
imul
or
mov
mov
adc
mov
in
add
push
popf
cmpsb
mov
jbe
xchg
scas
test
jo
adc
bound
in
in
jne
rorl
xchg
insb
pop
cmp
mov
jl
sbb
fistps
add
add
dec
adc
jo
ds
inc
in
xor
inc
aaa
jo
mov
test
and
rolb
jo
xlat
sub
push
push
jns
push
jle
push
cld
insb
sub
dec
jo
out
cmc
xor
xor
insb
mov
js
cmp
push
fsub
xor
inc
sbb
sub
jb
jne
je
lret
aam
in
int
test
sub
js
xchg
outsb
mov
jo
ffree
mov
sub
loop
jae
int
jo
sarl
mov
in
jo
dec
aas
shl
jle
jo
gs
mov
jle
jae
dec
xor
gs
push
cltd
push
packuswb
xlat
bound
jo
sub
fstl
inc
jo
test
pushf
mov
push
add
inc
fwait
sub
jne
or
ja
add
push
jl
lahf
enter
push
in
ret
mov
loop
arpl
movsl
cli
add
sahf
notl
or
stc
bound
jecxz
imul
shll
and
mov
lea
jge
push
mov
in
js,pn
cmp
xabort
dec
popf
es
cli
aad
jo
jmp
adc
out
push
std
fmul
cmpb
lret
ficomps
imul
aaa
or
push
clc
jmp
inc
dec
rclb
push
xchg
jo
add
fldenv
push
lds
pushf
push
sahf
inc
out
fidivs
cmpsl
les
inc
pop
add
orb
inc
jae
xorl
cld
mov
sub
in
mov
cli
pop
in
shrl
test
jo,pn
xchg
add
sarb
jo
pop
mov
pusha
jo
movsl
leave
decl
xor
xchg
pop
push
pop
xlat
ss
and
addb
add
imul
jo
test
inc
push
push
sub
clc
ror
inc
je
jmp
jo
adcl
jo
cmp
add
mov
fimull
sbb
or
daa
jo
or
adc
jo
pop
aad
mov
inc
shll
ja
into
gs
sahf
aad
out
bound
in
cs
push
pop
push
cmpsl
test
lahf
js
push
in
jo
jl
frstor
int3
test
jo
js
in
push
jne
lods
push
iret
add
jne,pn
adc
mov
jo
push
jmp
repnz
repz
fs
not
andb
enter
jnp
jbe
sub
sub
into
out
and
lret
jo
jno
mov
es
mov
mov
imul
js
cld
out
or
lret
clc
ljmp
cs
imul
push
inc
in
jmp
dec
push
bound
jo
and
cwtl
fs
pop
ret
jbe
cli
jns
jo
xlat
outsb
aam
loope
ret
jo
push
mov
sub
xchg
jo
mov
pop
jb
in
fidivs
bound
int3
jo
push
fadds
shll
inc
inc
jo
push
mov
cmp
sub
add
or
sbb
adc
pop
or
roll
push
outsl
pop
arpl
gs
jmp
cmp
xor
std
lea
jo
scas
xor
jo
fnstcw
fs
testl
dec
inc
jbe
cld
pop
jo
iret
mov
and
pop
dec
out
inc
jo
shrl
fiaddl
xchg
out
shlb
xchg
pushf
inc
xchg
inc
or
jmp
mov
xor
mov
cltd
in
bound
jo
outsb
rol
out
inc
jecxz
jo
test
sbb
call
jne
iret
push
xchg
cld
nop
les
pushf
add
out
push
mov
in
inc
adc
inc
shrl
or
jo
lods
subl
jo
jbe
stos
sbb
ja
jo
roll
aad
mov
jo
dec
shl
adc
mov
adc
int
mov
mov
jge
jmp
inc
dec
andl
jbe
imul
mov
loope
inc
enter
adc
sahf
jo
xchg
lods
stos
out
dec
sbbb
aas
mov
jns
add
xchg
fbld
bound
sbb
mov
inc
roll
add
out
mov
in
add
clc
int
js
adc
mov
pop
dec
add
inc
pop
mov
cmc
mov
jne
cs
rolb
hlt
test
das
cld
inc
jg
push
sti
jo
mov
popf
out
lds
or
in
aad
jo
xor
loope
or
dec
add
sidtl
push
fucomp
int
bound
das
aad
aaa
nop
jp
outsl
mov
mov
cmovne
and
cmp
mov
jns
loopne
sbb
jecxz
pop
mov
and
or
sahf
popf
movb
stos
scas
xor
fs
jo
xor
scas
lds
cmpsb
mov
and
call
aam
jo
test
dec
jo
pop
ds
call
pusha
test
insb
jo
inc
in
mov
iret
movsl
lret
sub
push
vcvtpd2dqx
rol
in
adc
inc
fdivl
sbb
jecxz
or
push
adc
nop
cmpsb
pusha
addr16
sarl
cmp
jo
stc
les
lds
into
add
imul
push
out
push
jo
test
mov
mov
leave
in
test
pushf
inc
sub
in
mov
push
cmp
ljmp
aad
hlt
and
loope
sub
cmc
outsb
jl
adc
xlat
ret
loope
jno
jo
add
sbb
push
repz
ret
je
sbb
jae
jo
out
cli
bound
fs
adc
mov
pushf
divl
adc
les
mov
push
fadds
dec
add
pop
popf
cli
xchg
xchg
pop
jbe
mov
mov
test
jp
cmpb
shlb
push
cmp
iret
mov
pop
sub
daa
xchg
sub
push
ret
sbb
mov
adc
xchg
sub
loope
test
dec
int
push
adc
or
jo
rcrb
cmp
rcll
adc
push
mov
jmp
data16
fdivl
lods
into
out
fdivp
mov
or
mov
xchg
push
push
cmp
lock
inc
jo
jmp
nop
out
mov
ja
rcrb
lret
ret
cltd
jmp
iret
push
jo
adc
loopne
shl
xchg
or
icebp
lds
dec
test
aas
cmp
push
repnz
out
jo
andl
push
dec
jecxz
jo
neg
or
or
sbbl
jne
mov
pusha
adc
test
mov
test
sub
in
and
orb
mov
test
push
cltd
lea
rclb
mov
sbb
jo
mov
jecxz
enter
lret
lcall
jo
leave
sbbb
insl
aam
insb
adc
mov
jo
mov
xchg
sarl
test
mov
adc
cmc
sbb
inc
and
inc
scas
call
jo
bound
adc
jmp
and
in
icebp
addr16
test
out
push
dec
fcompl
aad
or
in
xor
into
cs
je
aam
or
inc
push
cmp
mov
aad
push
add
dec
in
xchg
cltd
mov
dec
inc
mov
push
fucom
cmp
movsl
bnd
pop
js
nop
aas
in
xchg
lock
push
iret
popa
pop
jae
xchg
xor
insb
or
push
or
push
mov
popf
shrl
push
jns
js
pop
in
shrl
daa
push
jb
test
push
jmp
mov
flds
jae
jge
jo
out
ds
sbb
movsl
jmp
divl
cmp
push
jmp
xchg
enter
jo
cmpsl
notb
mov
jb
sbb
fs
push
aad
mov
addr16
jo
test
adc
sbb
add
sub
jmp
jo
push
mov
mov
pop
cmp
js
jl
or
iret
cld
cmpb
movsl
jo
lret
data16
sub
rcl
mov
jge
jo
les
pop
out
test
icebp
push
mov
xchg
es
mov
int3
out
push
in
cmc
int
nop
cltd
inc
jo
mov
add
jno
jo
inc
cmp
push
jge
jo
or
loop
in
nop
jo
push
mov
test
out
xchg
pop
cli
inc
dec
jo
rol
push
pop
iret
jecxz
imul
jle
int
out
test
adc
lea
nop
frstor
adc
or
cmp
enter
dec
push
ret
jae
test
in
xchg
outsb
mov
fs
pop
push
gs
push
jo
iret
scas
mov
lds
push
mov
test
mov
pop
subl
jo
add
fiadds
movsl
jmp
test
mov
dec
jo
leave
xchg
jo
in
int3
push
test
inc
or
cmp
loop
sar
jo
mov
xchg
shlb
adcl
repnz
ret
add
xchg
adc
lods
push
and
stos
cmc
inc
sarb
mov
inc
sub
ss
mov
and
sub
inc
ret
jg
sub
xchg
out
xlat
jo
pusha
pop
aam
icebp
mov
jo
bound
fcmove
cmp
jo
dec
les
jo
fucomp
imul
int
jo
mov
dec
add
call
mov
int3
movsb
das
jo
xchg
dec
test
push
pusha
mov
int
and
pop
fiadds
bound
inc
rcll
in
lret
add
xchg
jmp
lods
rclb
daa
or
fdiv
test
mov
jo
fidivl
loopne
mov
movsb
int
mov
aam
aad
movsl
inc
ds
and
push
adc
pop
jo
pop
push
rcrl
rolb
jo
xchg
lret
and
jmp
jmp
bound
xor
sub
mov
push
mov
and
lods
xchg
loop
xchg
xchg
rorb
and
jmp
imul
dec
sbb
sub
xor
jo
rcr
or
out
ret
mulb
push
lock
xor
pop
js
xor
mov
nop
mov
iret
ss
add
or
lods
push
push
in
and
xlat
sahf
leave
jg
sahf
int
push
out
fisubs
push
mov
jle
mov
pop
xor
popa
ficoml
cmp
lds
cs
je
popf
mov
fwait
dec
xchg
out
lret
data16
jo
fmulp
mov
imul
xchg
addr16
dec
mov
aad
xor
icebp
loop
jb
jo
fincstp
cmp
jo
jge
lds
mov
fwait
fs
and
or
pop
mov
in
push
pop
stc
jo
insl
movsb
cs
nop
push
mov
jl
add
movsl
das
jo
mov
xor
pavgb
and
in
bound
xor
repz
adc
jo
jmp
mov
aad
jmp
jbe
mov
mov
jo
int3
sti
ret
cld
inc
loope
jo
lahf
xchg
jo
adc
sbb
sbb
sbb
xor
mov
repz
ds
xchg
clc
cmp
js
jbe
xor
lds
std
xor
aad
hlt
sub
test
addb
cwtl
bound
sub
xor
jo
mov
or
imul
fwait
pop
xor
jne
jo
movsl
iret
cmc
rclb
movsl
pop
js
rol
outsb
jns
test
mov
or
push
adc
adc
adc
fprem1
jo
test
dec
push
pop
repnz
ja
leave
jbe
shrb
inc
push
push
icebp
push
scas
jl
in
jecxz
inc
add
mov
test
cmp
mov
push
push
jo
gs
insl
cmc
xchg
shlb
jo
adc
sbb
jo
add
inc
les
leave
jo
push
jnp
add
push
int
adc
mov
mov
cmp
insb
rorl
ja
into
mov
jmp
jo
pop
push
out
mov
mov
jl
sti
mov
orb
add
in
je
test
inc
inc
imul
sub
enter
sahf
add
cli
aaa
push
lahf
loope
out
dec
jmp
les
fistl
mov
rcrl
sbb
jbe
lock
pop
dec
aad
xchg
aaa
jae
jo
int3
pop
enter
jo
popf
or
mov
jno
cmpsb
cld
dec
fstpl
xchg
ljmp
or
push
lahf
xchg
stos
je
testb
outsb
push
icebp
adc
and
cmc
aaa
insb
mov
mov
jle
push
outsb
xchg
loope
mov
std
jb
out
enter
or
addr16
mov
mov
mov
leave
int3
repnz
inc
jl
gs
jo
cmp
add
push
mov
out
push
aam
push
dec
jo
ficoml
xor
rolb
mov
scas
out
stc
or
inc
lahf
jp
mov
psubusw
gs
jo
icebp
cmc
cltd
dec
xchg
fcmovnu
jmp
out
jo
mov
pop
adc
xchg
xchg
rorw
mov
and
cmpl
aas
dec
add
ret
pop
or
sub
sub
ss
pop
js
mov
in
imul
add
int
arpl
leave
popf
inc
nop
cmpsl
shl
movsl
mov
loope
jo
dec
jne
inc
faddl
in
xchg
aad
out
cmpb
dec
cmc
mov
stos
aad
jns
nop
jns
data16
je
pushf
mov
mov
js
push
aad
sub
jo
stc
mov
push
sub
adc
les
clc
add
jo
test
test
inc
adc
push
sbb
mov
jo
xlat
dec
stos
dec
jnp
pop
push
outsl
in
mov
mov
jo
push
sbb
in
mov
es
adc
and
and
int
rorl
jno
mov
pop
cmc
lcall
int
fstpl
in
mov
inc
inc
test
lods
rorl
iret
test
dec
in
jae
bound
push
repz
mov
cltd
dec
lcall
xor
adc
lret
xorl
loop
in
out
cmp
call
aad
movsb
lret
insl
xor
int
xchg
les
adc
movl
lock
fsubr
jo
jmp
fwait
jo,pt
je
xorl
pop
push
push
lret
sub
mov
rol
adc
jo
iret
sar
pop
jo
cmc
cld
cltd
test
jb
jo
inc
mov
add
orl
test
push
pop
xchg
sarl
mov
dec
jecxz
inc
adc
inc
std
ret
cltd
jno
pop
roll
lret
dec
jo
mov
outsl
mov
sub
pop
and
es
mov
push
cmp
xchg
jnp
push
push
insl
fnstsw
lock
lret
fsubr
js,pt
fisttpl
outsb
cmc
dec
dec
xor
jo
add
jae
repz
out
jnp
and
fsub
les
in
iret
insl
and
jo
enter
repz
or
in
cwtl
mov
sbb
imul
xchg
push
fnstsw
pushf
orl
lret
dec
inc
jo
push
shrb
jo
add
popa
cld
ret
adc
rorl
nop
push
mov
jnp
movsl
insb
jo
pop
jp
loope
sarl
enter
adc
in
das
jb
mov
push
sub
pop
adc
push
pop
jo
ss
ljmp
pop
and
add
cmp
mov
clc
loope
jo
loop
fcoml
shll
mov
jne
dec
std
ljmp
fdivl
jecxz
sub
in
jo
mov
xchg
mov
push
xchg
test
cmp
or
push
lods
mov
pop
sub
loope
cmp
fbstp
lods
push
xchg
es
dec
jle
push
jo
jg
xchg
and
cmp
sub
mov
gs
mov
je
xchg
jo
ret
cmc
iret
and
jo
dec
push
int
push
sub
mov
pop
dec
jmp
aas
ss
jecxz
ret
push
xchg
into
cmc
pop
ficoml
andb
mov
push
cwtl
mov
call
test
data16
insb
jmp
xor
jecxz
out
mov
data16
popf
jo
mov
movsb
add
sbb
jmp
or
aaa
mov
movsb
jo
aam
shlb
fucom
dec
movsl
pop
loop
jne
push
mov
push
adcb
dec
cmpsb
gs
movsb
dec
mov
and
dec
inc
sbb
roll
jo
rolb
pop
or
jns
js
dec
xor
addr16
adc
push
xor
adc
popf
das
lcall
and
jg
pop
xchg
imul
rolb
je
jno
mov
add
push
sarb
lods
or
fwait
pop
mov
inc
stos
imul
jo
aam
add
adc
pop
imul
lock
mov
mov
sub
test
adcl
xor
xchg
in
mov
out
dec
inc
icebp
push
xlat
jo
test
inc
sub
gs
cs
sbb
xchg
inc
mov
jo
fisttpl
mov
xor
loop
adcl
out
jo
sarb
popa
xchg
test
jge
sbb
jg
adc
add
in
mov
icebp
pop
push
xlat
test
aad
cmp
in
repz
jns
and
mov
push
shll
arpl
imul
insb
popf
xchg
fs
dec
inc
cs
int
je
cmp
neg
jo
mov
iret
push
pop
sub
push
pop
std
dec
insb
addb
mov
jmp
cmp
aad
ret
orl
jo
mul
lret
cmc
outsb
jo
fcmovb
mov
jmp
inc
out
dec
and
bswap
cmc
jp
push
rcrl
and
ret
out
stc
or
jno
sbb
rorl
pop
sub
jo
popa
xchg
mov
or
cwtl
or
icebp
and
pop
out
xor
sbbb
inc
int
outsb
mov
daa
cli
imul
jo
cmc
pop
jl
iret
flds
pop
jo
rcrb
push
xor
bound
mov
sub
or
fsubrl
cmp
sub
fucomp
in
jo
pop
pop
inc
nop
aad
cmp
js
test
cs
adc
pushf
jo
cmp
jle
jo
mov
mov
mov
fisttpll
push
mov
ret
and
iret
pop
xlat
mov
rcl
add
dec
mov
jo
inc
dec
jecxz
aad
lock
inc
loope
jo
cmc
lret
ljmp
leave
mov
xchg
ds
jo
outsb
fcmovb
xor
adc
int3
insl
sbb
movsb
add
js
in
aaa
jp
ret
push
xor
rep
or
xchg
bound
je
movsb
sub
stc
into
jo
push
push
shl
push
xchg
jae
fisubrs
out
js
ja
dec
adc
jo
and
jo
inc
adc
mov
push
jmp
push
jnp
dec
imul
pushf
mov
ret
mov
inc
scas
push
pusha
cltd
repz
jo
les
pop
popa
xchg
lret
jo
outsb
mov
icebp
mov
or
lock
out
jo
cmp
insl
cmp
mull
add
xorl
ja
shlb
mov
fs
jo
push
inc
lds
or
or
fistps
scas
fidivl
inc
sub
ret
jmp
nop
nop
ret
loope
mov
adc
jo
push
insb
mov
sbb
scas
les
mov
roll
lea
sub
sub
pop
jo
fldcw
mov
jecxz
xor
mov
jne
sub
ja
out
push
enter
or
dec
sub
inc
lret
fadd
cmp
popa
or
fidivrl
shll
test
lea
divps
lret
leave
push
bound
and
mov
insb
or
push
and
outsl
clc
scas
aad
or
xlat
mov
push
jo
test
in
mov
jo
insl
bound
pop
lret
icebp
dec
jo
outsb
push
cmp
loopne
ljmp
stos
mov
adc
leave
jo
adc
add
iret
push
lret
out
xchg
scas
inc
mov
test
sub
mov
enter
inc
outsb
xor
mov
in
stc
push
jecxz
int3
out
inc
mov
jo
fsubl
jns
xor
in
xchg
cmp
or
and
mov
rcll
adc
js
ret
sbb
inc
psubusw
jmp
xchg
sbb
and
jo
sbb
mov
jl
repz
aad
cmp
cld
jo
dec
test
in
dec
icebp
popa
jo
or
inc
dec
rcrb
out
cs
enter
adc
jnp
xchg
push
sbb
leave
imul
jo
ret
and
sub
stc
fdivrs
test
cmp
insw
adcb
int
or
push
repnz
xchg
xor
jo
lock
or
in
mov
push
jo
push
lcall
xorb
push
insb
int3
push
push
sbb
imul
pushf
and
xor
push
shl
or
std
mov
sbb
jp
mov
push
leave
out
jge
mov
in
gs
cmpsb
nop
jecxz
lea
mov
jo
jns
inc
in
and
sbb
sub
pop
add
and
sbb
ds
sub
sbb
push
cmp
std
cmp
pcmpgtd
or
outsb
nop
lret
jo
pop
mov
dec
pop
loope
aad
sbb
popl
add
pusha
and
sarl
mov
jo
xchg
cmp
pop
jo
jb
stc
fistpll
pop
jo
fmul
mov
cwtl
and
push
and
into
leave
insb
int
nop
sbb
sahf
fcomps
and
jle
cmp
jmp
cli
jo
fbld
pop
jo
stc
pop
shr
sbb
mov
inc
adcl
std
rcl
xlat
lea
rorl
ss
rcll
push
xchg
les
adc
xor
add
repnz
and
stos
jo
fisttpl
sub
xorl
pop
aam
jl
or
int
inc
jle
movsl
mov
xchg
out
jmp
test
inc
jo
movsb
xor
repz
sbb
jo
ret
xchg
push
sub
xchg
pop
jno
jo
filds
shl
cmp
jo
les
jo
or
push
ret
sarb
dec
cmc
inc
sti
sbb
in
aam
and
popf
insl
sbb
pop
sbb
bound
and
fnstenv
xor
cmp
addr16
mov
and
push
push
cli
dec
dec
xchg
fdivs
and
lea
add
in
in
dec
cld
jno
xorl
jno
mov
aam
push
adcl
mov
std
jo
or
test
shrl
in
addr16
xlat
jmp
add
mov
mov
xchg
push
jo
dec
data16
fbld
push
into
bound
ds
mov
repz
jns
xchg
push
daa
mov
xchg
add
arpl
in
fists
cmc
stc
cmp
hlt
pop
xchg
jbe,pn
aas
out
add
aam
mov
sub
inc
outsb
cmp
test
jo
jecxz
push
and
sbb
notb
sbb
xor
sub
cmp
mov
insl
shlb
filds
push
mov
mov
cmp
and
jnp
data16
push
push
jne
or
xor
nop
sub
cmp
mov
bnd
stos
loope
out
or
repz
lret
sbb
in
sbb
inc
push
lock
mov
nop
mov
ret
jl
jge
jo
jnp
ja
inc
jns
leave
aam
push
cwtl
push
or
frndint
jo
out
and
sub
in
push
insl
and
mov
push
ffree
xchg
pusha
sbb
out
mov
mov
push
sub
mov
int3
sarl
xor
int
out
adc
cmc
cmp
jle
out
test
jo
fdivl
or
outsb
mov
out
in
inc
dec
popl
mov
lret
jge
notl
mov
jge
sub
jmp
pop
daa
insb
adc
push
outsb
icebp
push
fcoml
incb
lahf
call
pop
lds
and
jo
hlt
inc
shll
stc
daa
jecxz
inc
jns
dec
lea
cmpb
psrld
xchg
sbb
loop
in
out
nop
inc
add
adc
pop
enter
cld
push
push
push
and
push
dec
cmc
into
in
movsl
enter
out
test
jno
repz
cli
inc
fbstp
push
sbb
mov
mov
pusha
lock
les
inc
lret
fiaddl
jo
and
movsl
sbb
fxam
push
test
loop
xchg
gs
pop
int
mov
xorb
cmp
xchg
dec
gs
nop
pusha
in
inc
ret
jae
adc
or
roll
xchg
xlat
out
data16
enter
xor
adc
int
hlt
jno
shl
ret
adc
js
xor
xchg
jo
xchg
fbld
ret
sete
test
loop
es
jo
pop
imul
insl
outsb
lea
sub
pop
sbb
clc
inc
out
xchg
mov
jmp
dec
call
mov
leave
mov
and
test
jne
mov
insl
push
and
shrl
adc
xchg
call
loop
dec
push
movsl
lret
cmpb
cmc
xchg
jo
in
inc
rcrb
inc
test
fistpl
jo
xor
jmp
jae
jo
ds
mov
or
hlt
mov
test
and
pop
and
push
jo
mov
les
jo
mov
jnp
and
jo
sbbl
outsb
push
jge
pushf
or
inc
out
inc
cmpsb
adc
jo
jne
sahf
jg
stos
nop
xchg
lahf
data16
dec
jg
rorl
push
rcrl
mov
cmp
push
outsl
cmp
jo
pop
outsb
icebp
xlat
pop
shlb
mov
mov
subb
shrb
fwait
mov
nop
or
jmp
sub
test
shrb
adc
or
jo
movsl
rcll
fcmovnbe
mov
outsb
or
sbb
shll
dec
cmpsb
lret
std
test
fst
add
push
adc
bound
mov
dec
add
mov
outsb
ret
das
cmp
push
xchg
rcl
or
movsb
leave
icebp
and
mov
sbb
jmp
push
push
roll
leave
sub
xchg
mov
roll
out
jo
addr16
push
les
enter
sbb
mov
xchg
loope
test
int
outsb
loope
add
jo
jno
into
dec
xchg
cmp
vhaddps
inc
in
sbb
and
jp
dec
popa
invd
push
sbb
pop
pop
xor
aam
les
sub
icebp
setl
and
jo
jne
and
in
or
nopl
sbb
push
mov
jle
jo
rclb
in
mov
jo
ja
mov
outsb
das
jo
dec
leave
mov
sub
sbb
sbb
leave
pop
jge
mov
dec
lea
roll
pop
enter
jno
mov
push
sub
pushf
adc
jo
inc
mov
ds
adcl
insb
xchg
mov
fdivs
iret
dec
int
xchg
out
pop
imul
sahf
jo
pop
out
aaa
adc
jo
ljmp
xor
jo
pop
jecxz
test
jo
inc
je
sahf
arpl
sub
xor
lods
jo
into
es
jo
mov
test
jo
je
pop
nop
and
and
mov
inc
and
xor
js
sub
iret
jo
jmp
outsb
shl
mov
pop
cmp
cli
jo
es
dec
dec
bound
or
jne
push
mov
inc
inc
cmp
sbb
inc
in
iret
sub
mov
les
test
ds
jo
jl
push
dec
loope
fdivl
cmp
mov
inc
dec
dec
mov
adc
dec
push
icebp
mov
lea
or
int
mov
jo
scas
pop
xchg
fstl
shrl
insl
inc
rolb
adc
jo
mov
xchg
pop
lea
fidivrl
gs
jo
lahf
mov
out
and
sub
xor
out
cmp
insb
mov
adc
popa
jo
stc
push
mov
jo
push
lret
and
xor
jo
ja
sub
outsb
or
mov
push
loope
jnp
jb
add
mov
bound
and
inc
sti
jo
inc
rcrb
xchg
jo
in
or
andl
pop
xchg
std
jo
icebp
jnp
popl
add
mov
arpl
xor
cmpsl
in
into
jg
jo
negl
rol
scas
dec
cmpsb
iret
jo
push
xchg
mov
negb
in
or
cmp
jo
adc
mov
jo
jne
test
add
jo
sbb
sbb
fstpl
dec
addl
jo
lock
bsf
movsb
lcall
je
jo
xchg
shl
outsb
jecxz
jo
stc
test
sub
ret
pop
jo
aas
sub
mov
enter
les
xchg
std
jo
jno
mov
inc
xor
test
push
lret
jo
repz
aam
add
std
call
xor
mov
adc
nop
negl
inc
rclb
pushf
pusha
repz
jo
xor
mov
rol
in
iret
negb
jo
bound
cpuid
jp
int3
inc
dec
xor
ret
clc
and
icebp
outsb
div
int
sti
cmp
mov
jne
cltd
jmp
inc
test
in
inc
and
sarb
test
jo
add
pop
mov
lea
cmp
notl
out
xchg
jb
mov
jo
in
dec
add
pop
sbb
mov
xor
leave
outsl
or
jno
ds
pop
jo
aad
add
dec
mov
shrb
and
iret
pop
jle
stos
jo
je
lret
dec
adc
mov
cmp
out
mov
cmpsl
dec
adc
add
rcl
sub
push
xchg
int
or
div
inc
push
movsl
jo
pop
jnp
repz
or
aad
icebp
sub
dec
cld
inc
cmc
mov
or
cli
pushf
dec
jo
cmp
movsb
push
into
inc
loope
rol
inc
sbb
add
cmc
jo
jbe
pop
fcomps
scas
mov
jo
stc
es
xor
push
sbb
jmp
cltd
jecxz
loope
cs
test
test
lock
mov
das
movsl
jo
imul
in
scas
loop
push
shll
jo
jmp
fucom
jo
add
ds
mov
push
adc
js
push
data16
dec
sbb
js
inc
dec
movb
addl
mov
jae
insl
jo
in
sub
les
push
jecxz
test
cmp
rolb
fidivrs
jo
arpl
mov
lea
jnp
jge
pop
test
icebp
lods
add
sbb
xchg
xchg
cli
cwtl
sbb
repz
cltd
cmpsl
cld
jo
loop
cmp
in
data16
jne
xchg
aam
in
insl
mov
sbb
icebp
js
xchg
lods
push
mov
les
out
jo
jns
sbb
in
mov
nop
leave
mov
add
dec
or
test
push
mov
or
mov
jo
clc
and
movnti
in
pop
adc
lret
add
xor
je
jo
jl
push
insb
aad
lock
std
sbb
mov
fcmovu
adc
ds
cli
jp
outsb
scas
iret
js
shrl
cwtl
pop
fyl2xp1
push
out
push
ret
cmp
pop
bound
nop
pop
insl
or
hlt
scas
dec
mov
cs
xor
push
lahf
into
push
add
fsubs
lods
in
insb
in
cmpb
jo
iret
out
arpl
jo
sub
jne
mov
adc
push
inc
inc
loop
jo
mov
lahf
movb
jo
sub
pop
xor
rolb
inc
data16
loopne
jo
lods
iret
push
test
sarb
mov
test
faddp
push
add
fs
mov
jo
call
mov
lock
jmp
fisttpll
sub
xchg
jl
je
lahf
push
and
add
xor
jmp
pop
loop
push
push
shll
cld
ret
je
jmp
dec
pop
xchg
push
push
mov
pop
js
dec
xorl
movsl
cmp
mov
in
jo
mov
push
ret
sbb
xor
lds
call
xor
inc
xchg
ret
sti
cwtl
sarb
sbb
xor
or
xchg
shll
ljmp
es
and
mov
sbb
fnstsw
test
out
push
rorb
push
fwait
push
lods
dec
push
and
and
pop
lret
mov
mov
inc
pop
add
out
jmp
fs
mov
cli
leave
jp
gs
lahf
jo
push
mov
lock
ds
iret
bound
jo
or
adc
lret
pop
test
pusha
cmc
retw
xchg
jo
pop
mov
xor
mov
int3
rcll
jo,pt
les
adc
test
push
cwtl
inc
pop
int3
out
add
fs
stos
push
jge
les
inc
push
fwait
pop
xor
or
stos
xchg
lcall
test
fbstp
and
addr16
js
in
and
popa
jl
loop
repnz
sub
aam
jo
mov
call
cmp
ss
xchg
jne
sub
mov
daa
inc
test
xchg
jl
xor
shrd
cmp
fs
fstl
jne
cld
fistl
js
addr16
scas
cli
ja
je
jo
shll
xor
data16
gs
jo
cmpsb
sub
and
inc
inc
mov
jo
mov
mov
jmp
cmp
fcmovne
jle
sub
push
mov
nop
loope
in
mov
loop
sbb
insl
fxch
movsl
jo
inc
rcll
fwait
xchg
and
cs
or
pop
rcr
rcll
jl
inc
jo
shrl
mov
inc
pushf
mov
cli
in
inc
push
push
fisubrs
stc
pop
sbb
mov
jns
xor
jae
cmpsb
jo
mov
fstp
xor
push
pop
jb
jo
sbb
iret
into
xchg
push
mov
or
aas
std
adc
push
or
mov
inc
cwtl
inc
push
lret
popf
imul
or
mov
or
bound
out
out
mov
push
decl
jmp
sub
pop
sti
es
mov
push
in
mov
decb
inc
pop
push
add
xchg
push
fdiv
jp
inc
xor
clc
neg
incb
sbb
rcrb
sub
std
or
pushf
mov
sbb
and
hlt
movsb
orl
push
cli
jge
insb
inc
rol
adc
popf
jl
xchg
add
inc
in
jno
or
ljmp
test
popf
push
bound
adc
out
hlt
in
lds
mov
dec
cld
pop
out
cmp
data16
push
inc
jl
xor
sbb
mov
jecxz
inc
jmp
adc
push
dec
icebp
outsb
jne
xor
jecxz
aaa
dec
jge
jg
in
pop
jo
icebp
scas
lock
pop
push
sbb
sub
or
pop
js
js
loope
ret
jo
neg
dec
mov
rorb
push
clc
mov
movsb
cmp
cmpsb
mov
sub
jo
jle
xor
dec
xor
ljmp
stc
and
push
shrl
xor
cmp
fisubs
fyl2x
out
in
lret
push
mov
jle
jae
lcall
adc
inc
cmp
mov
aaa
mov
leave
jns
je
mov
in
test
aaa
andb
addr16
sbb
pop
mov
xorl
push
adc
cwtl
insb
icebp
bound
inc
aaa
jg
mov
push
sbb
daa
js
jo
push
inc
shll
dec
xor
fs
fisubrs
int
aaa
inc
sbb
cmp
jns
jo
mov
fistl
push
mov
insb
ret
insl
push
aaa
rcrl
sti
fs
jo
pop
mov
jo
jno
std
int3
loope
int
test
jo
mov
clc
scas
xchg
jo
les
xor
lods
fcoms
rcl
fisubrl
daa
push
xorb
out
jo
loop
dec
insl
clc
mov
mov
push
push
imul
orb
mov
pop
in
jo,pt
adc
adcl
test
inc
outsl
jo
jmp
mov
cmp
fcmovb
icebp
dec
mov
adc
iret
ss
mov
jo
push
jb
sub
mov
jge
or
gs
in
jo
aam
add
push
cltd
mov
xchg
adc
popf
fs
js
adc
repnz
push
in
adc
popa
xor
movsl
push
dec
mov
jns
js
pop
jbe
test
stc
je
int3
sbb
fstps
test
xor
mov
ret
testl
mov
pop
and
movhlps
lret
xchg
mov
nop
and
gs
push
out
pinsrw
test
inc
sar
dec
in
xor
loope
roll
ret
push
jo
arpl
fstl
cltd
popf
cli
scas
dec
jo
enter
shrb
jno
add
int
or
lahf
stc
pop
gs
push
mov
jns
outsb
fdivl
enter
rorb
sub
sbb
xchg
adc
nop
lods
jo
inc
dec
test
in
jo
xor
pop
lret
jo
ret
fistps
movsb
in
add
cltd
cld
jecxz,pn
adc
fs
push
popl
adc
roll
xchg
ret
and
leave
cmp
pop
repz
std
notl
add
fdivs
pop
lds
mov
call
mov
jae
imul
leave
fisttpll
fsubs
mov
add
les
repnz
add
push
cmp
mov
add
jo
xor
fwait
add
cs
fs
xchg
bound
sti
nop
fisttpll
mov
mov
nop
jns
xchg
addb
jo
cmc
cmp
int
xchg
jo
in
sbb
addr16
and
xchg
adc
out
add
repnz
arpl
shll
ret
stos
orb
jo
mov
cmp
aaa
adc
push
cmpsl
je
aad
pop
jb
repnz
jo
cmpsb
cmp
imul
gs
test
fisttpll
js
sub
insb
jo
sub
lods
lcall
xor
xchg
test
add
cmpl
and
movsl
icebp
inc
jmp
out
mov
hlt
loop
loope
pop
enter
cmc
or
adc
add
sbb
jo
jg
xor
or
jl
test
mov
pop
mov
subb
and
stos
jo
ret
pop
addr16
mov
sub
xchg
call
jo
jno
test
ror
lock
sbb
cmpb
popl
inc
jne
ljmp
aad
jmp
dec
out
xor
je
inc
dec
popf
push
popa
cmpsl
addr16
les
cmp
out
mov
shll
pop
stos
mov
cmc
fs
jo
test
dec
rcrb
push
xor
push
rclb
jne
mov
popf
stc
adc
cmp
test
lods
fistps
jo
cmc
rcrl
in
pusha
push
gs
fimull
push
add
sub
mov
jge
dec
mov
arpl
mov
and
inc
fs
les
or
imul
mov
icebp
xor
add
push
lret
int3
int
push
jmp
jo
bound
stos
push
mov
xchg
dec
imul
fldenv
jo
test
out
mov
jo
add
push
gs
lods
mov
adc
xor
orl
xchg
sbb
cwtl
mov
push
jne
jnp
cmp
addb
dec
popf
push
inc
mov
ljmp
xor
jno
or
jae
sbbb
fsubp
iret
cmp
pop
jo
sub
mov
mov
and
sub
sbb
xor
in
in
dec
outsl
mov
fxch
call
sbb
add
adc
mov
js
pop
or
push
push
jo
repz
xchg
pop
popa
push
jge
fsubr
repnz
mov
js
sub
ljmp
sub
mov
out
jo
jge
enter
bound
and
push
mov
xor
jo
test
or
or
cmp
jbe
nop
jb
iret
mov
dec
mov
dec
xchg
fwait
push
fstpl
xchg
repnz
punpckhwd
ljmp
cmp
mov
out
clc
mov
mov
fs
mov
sbb
mov
add
adcb
dec
mov
xchg
and
stc
push
pop
dec
call
jne
mov
leave
in
adc
mov
in
ja
xor
lea
push
jo
enter
ret
in
and
xchg
out
filds
rcr
inc
popf
lcall
jge
movsl
mov
push
or
je
test
jmp
jb
and
jo
ja
lret
bound
xchg
jo
inc
cwtl
sub
xor
mov
cmpb
fs
add
sub
fnstsw
mov
and
clc
xchg
mov
sbb
push
repz
ret
int3
adc
test
nop
lods
add
lahf
push
sub
rcl
hlt
jle
mov
vmwrite
cmpsl
iret
scas
nop
rorb
bnd
ret
or
movsb
test
in
addr16
ret
jmp
jo
popa
neg
ljmp
inc
sub
fwait
cmc
sbb
pushf
popf
dec
jo
test
add
xor
sub
movntps
adc
jo
icebp
mov
shl
xorb
sti
out
jo
aad
orl
test
push
enter
fdivr
data16
les
hlt
fisttpll
sahf
sbb
loop
mov
jo
adc
adc
mov
lret
jmp
popa
iret
jo
xor
rcrb
clc
push
sbb
fnstenv
sbb
sarl
jg
xor
jno
mov
jb
jmp
aad
out
pushf
enter
xor
xchg
add
mov
sahf
nop
and
mov
ljmp
test
ret
gs
ss
or
jo
ret
mov
push
jns
push
jbe
jmp
jo
add
std
dec
iret
nop
cmp
sub
cs
pop
loopne
jle
sbb
leave
adc
push
dec
inc
adcb
je
mov
bound
sub
add
mov
ret
in
jns
enter
bound
jo
cmc
cld
in
nop
adc
xorl
test
decl
aaa
nop
cmp
add
jne
mov
jo
jge
jnp
pop
sarb
js
in
cmc
and
jo
test
int
sub
mov
jo
inc
movsl
jecxz
in
rclb
mov
fisubrs
xchg
inc
jecxz
enter
rorb
pushf
jo
rcr
repnz
mov
sbb
movl
and
sarl
gs
jmp
ret
enter
jmp
push
and
fidivl
xlat
test
adc
divl
out
loope
loop
fnsave
popf
ret
test
xchg
mov
mov
sbb
xchg
je
iret
shr
sub
mov
adc
sbb
jmp
mov
enter
movsl
bound
mov
scas
nop
cmpsb
or
clc
mov
pop
and
and
sub
mov
and
or
pop
hlt
ja
addl
fnstsw
fxch
xchg
outsb
mov
pop
dec
push
cltd
mov
mul
dec
mov
pop
in
shr
shl
and
jmp
neg
push
inc
mov
out
imul
roll
inc
iret
cs
std
dec
das
xchg
lret
loope
subb
addb
jecxz
je
fisubl
or
out
testl
divb
mov
xor
mov
mov
xor
les
xor
sub
pushf
divb
dec
mov
stc
in
jo
jbe
sub
cmpsl
xor
jo
es
in
lods
cmp
inc
ret
push
nop
repnz
push
pop
jecxz
gs
inc
jo
in
out
fs
jge
subb
xchg
pop
aam
xor
loop
jo
sti
inc
movsb
or
jp
loope
jo
sbb
fdivl
int
push
bound
pop
jo
dec
shr
je
std
inc
in
jo
pop
xchg
dec
pushf
hlt
inc
pop
int
loop
mov
jns
or
push
fucomp
fmul
stos
aad
clc
popf
xchg
hlt
in
inc
pop
pop
nop
sub
mov
jl
sbb
jo
int
lret
das
jne
ficoms
in
roll
inc
lret
jge
cs
mov
idivl
je
or
xchg
in
movsb
aas
jbe
fidivs
in
and
mov
mov
push
stc
and
fdivs
orl
mov
push
fldenv
jae
inc
in
jb
inc
jge
pop
testl
xor
mov
pop
and
popa
or
inc
dec
gs
cld
nop
sarb
xchg
jo
pop
fs
scas
cmp
int
loope
add
add
bound
pop
cs
pushf
mov
mov
sub
insl
add
pop
and
cmc
bound
push
pop
jno
imul
not
mov
in
xchg
mov
int
mov
jns
sub
and
loope
push
xchg
jo
jp
dec
inc
negl
jo
jmp
pop
out
fmul
jo
add
cmpb
pop
data16
pavgb
xchg
int
push
jmp
insb
adc
pop
fidivl
outsb
insl
jmp
xchg
push
insb
cmp
inc
roll
ret
xchg
xor
aam
mov
loopne
and
jo
loope
mov
jo
xchg
inc
aas
lods
inc
xchg
dec
xor
mov
out
fiadds
jge
mov
lods
cld
xor
je
out
jo
mov
test
add
out
sub
jo
or
mov
jge
mov
loopne
push
stos
mov
es
je
sbb
sbb
daa
cmp
xor
call
or
cmp
and
je
es
push
jo
cld
stos
fidivrl
in
jmp
leave
sub
inc
cmp
xchg
imul
push
xorl
repz
dec
jo
jp
aad
lock
fs
rorl
into
nop
push
out
je
jge
fcompl
rolb
jo
fadds
arpl
leave
jge
jl
xlat
mov
lods
xor
daa
xchg
int
pop
cwtl
push
iret
push
repnz
addr16
lret
mov
pop
jo
xor
inc
sbb
cmc
cltd
sti
lret
bound
aam
cmp
test
insb
xchg
movsl
mov
mov
jo
sahf
inc
mov
mov
dec
jl
adcl
mov
dec
dec
xchg
ret
rorb
outsl
inc
xor
mov
lods
xchg
add
loope
and
cmp
in
xor
cmp
outsb
bound
cmp
push
cmp
movsl
mov
out
xor
int3
or
and
sbb
ds
push
and
inc
pop
xchg
lea
jecxz
pop
loop
jo
xchg
sbb
adc
xchg
add
into
js
dec
inc
xchg
inc
xor
in
mov
push
popa
sti
jl
mov
push
icebp
jo
outsb
aad
lds
es
push
cmp
cmpb
cld
lea
and
or
fmull
inc
test
lret
out
pushf
or
push
sbb
insb
js
add
cmp
loope
dec
fdiv
mov
adcb
addl
mov
jnp
xor
mov
loope
inc
sbb
mov
xchg
mov
jo
leave
adc
inc
adc
jo
mov
loope
jo
fcoml
repz
adc
xchg
xchg
push
call
orb
push
test
rclb
jo
and
push
jns
jo
out
dec
pushf
scas
aam
cmc
lock
inc
sub
lea
fisubrl
test
xor
lock
repz
adc
bound
mov
lret
jmp
or
xor
imul
pop
push
sbb
adc
mov
ret
inc
and
repz
data16
mov
in
imul
pop
jo
mov
js
push
and
cmc
and
dec
sub
pop
mov
mov
jle
sbb
shufps
nop
add
mov
mov
xchg
out
sbb
xchg
jo
pop
mov
jo
pop
xor
dec
lahf
fnstenv
test
push
jo
inc
test
jo
test
arpl
inc
jne
pushf
mov
mov
movl
lods
jb
xchg
lahf
fdivrs
sti
inc
add
arpl
leave
fcoml
orl
bound
fs
repnz
aam
push
cmpsb
into
jp
sub
dec
imul
les
fucom
add
in
nop
adc
sbb
push
int
nop
lods
out
in
fnsave
shlb
lahf
arpl
fs
push
in
push
or
cmc
and
stos
pop
out
or
xor
fdivs
cmp
dec
adc
jecxz
jo
rolb
sbb
testb
xor
subl
fisttps
outsl
je
popf
sbb
xor
sbb
jns
into
jo
mov
popf
push
scas
push
dec
imul
fadds
fs
cwtl
xchg
or
fsts
push
xor
push
add
pop
cs
aad
push
adcb
es
jns
mov
lret
mov
cmc
in
add
ss
lock
nop
inc
mov
jle
data16
dec
inc
and
or
cmp
jmp
push
xchg
inc
mov
bound
or
cmp
in
test
arpl
pop
mov
rorb
inc
in
data16
cwtl
addb
fistps
dec
mov
cmp
gs
js
aad
lock
xchg
rcrb
lret
sub
mov
jp
inc
push
loop
or
xchg
std
notl
movsb
push
bound
imul
orb
jo
push
cmc
int
pop
lea
jo
fimuls
and
sti
jne
pop
adc
pop
xlat
xchg
adcl
sbb
xchg
ss
loope
jmp
lea
nop
and
out
aam
push
jno
lcall
mov
bound
xor
ja
adc
or
jo
not
sub
inc
jge
inc
lea
js
out
push
push
push
in
mov
mov
arpl
push
xorl
std
cmc
fdivrl
rorb
jo
loope
jne
sbb
or
dec
nop
push
lret
fistl
push
ja
fs
insb
mov
xchg
aam
dec
jno
push
pusha
push
dec
stos
pop
adc
jo
jmp
shll
push
jp
push
jle
or
inc
je
jae
icebp
xor
cwtl
shrl
loope
andl
lock
adc
bswap
jo
xchg
arpl
mov
xchg
cmpsl
nop
loope
jmp
adc
aam
mov
hlt
mov
jge
xchg
sub
ja
cmc
dec
in
aad
call
add
shrl
adc
xchg
xorl
and
nop
xrelease
jmp
js
push
push
and
inc
mov
bound
bound
cwtl
mov
push
or
inc
int
xchg
pop
cmp
add
jne
test
cmc
fstl
xor
sub
sub
mov
push
mov
arpl
out
jo
inc
aad
popf
repnz
out
and
inc
cmpsl
daa
jo
movsl
stc
jecxz
outsb
add
push
pushl
mov
dec
jo
aad
enter
pop
jo
gs
adc
stos
in
jmp
sbb
out
movsl
sbb
daa
add
aas
cvtps2pd
cwtl
mov
int
shll
iret
dec
imul
frstor
repz
out
push
jge
push
mov
mov
mov
push
jo
lcall
mov
cmpsb
enter
fs
jno,pt
push
fs
movsl
mov
aad
icebp
outsl
mov
mov
jbe
loop
adc
cmp
in
ret
rcll
push
xor
js
movsl
jo
test
jmp
das
or
mov
data16
aam
dec
imul
out
lea
and
jno
jo
mov
jmp
inc
jnp
test
pop
xorb
andl
adc
jmp
dec
lods
push
push
outsl
xchg
imul
dec
adc
xor
cli
and
push
sbb
jmp
jno
adc
jo
aam
bound
arpl
je
in
out
fsubrs
insb
push
xor
lds
fs
xorb
test
mov
loop
test
ret
fs
xor
and
xor
adc
pop
test
mov
add
je
insl
sbb
push
add
dec
cmp
mov
pop
int3
xchg
xor
jl
fscale
push
repnz
je
sub
mov
jb
test
xor
or
hlt
movsl
xchg
out
dec
jne
and
inc
fldcw
pop
jnp
icebp
js
jo
addr16
jecxz
inc
aas
jo
imul
mov
mov
je
ds
jl
mov
into
fstpl
fmuls
push
fstps
or
inc
dec
adcb
mov
jmp
push
loopne
inc
sub
or
inc
cmpsb
sub
cmp
jl
sub
adc
jo
jb
fwait
repz
sbb
jnp
jecxz
jo
sub
xchg
push
mov
mov
mov
gs
dec
aam
mov
or
je
cmp
jo
jecxz
and
nop
cmp
mov
jp
jmp
jecxz
in
mov
test
inc
movsl
bound
xor
jns
js
adc
and
jmp
hlt
int
scas
push
mov
jo
inc
cmp
hlt
filds
jo
loop
test
dec
sub
hlt
mov
jo
mov
icebp
xchg
jo
xchg
ds
mov
xlat
in
int3
in
mov
jo
mov
clc
add
dec
jo
enter
push
out
divl
push
inc
imul
insb
test
mov
pop
movsb
data16
jo
jmp
bound
sub
jo
dec
mov
push
jo
cmp
ret
sbb
jo
mov
dec
stc
push
cs
bound
push
xchg
sarb
out
jo
dec
mov
sub
mov
mov
push
enter
dec
mov
push
jo
jmp
sbb
cs
inc
fldenv
test
out
jnp
sub
loop
inc
icebp
shll
cmc
jno
in
push
out
jo
mov
loop
push
std
add
xchg
je
test
ljmp
pop
push
outsl
rdmsr
in
jo
dec
push
into
rcr
jo
and
daa
sbb
jo
scas
add
sbb
cmpb
mov
int
das
xchg
inc
dec
pop
jae
dec
inc
popf
cs
jmp
je
loope
rcll
jo
insl
mov
mov
sbbl
push
and
insb
les
dec
add
in
jo,pt
test
popa
cwtl
fsubl
sbb
aad
repnz
loop
int3
sbb
push
movsl
iret
and
jo
cmp
xchg
adc
rcl
xchg
sub
js
sti
add
loop
clc
leave
in
push
sbb
in
inc
mov
add
imul
clc
push
or
jo
and
jle
inc
push
jo
iret
shll
and
xorb
pop
pushf
push
or
test
ss
pusha
adc
xor
pop
sbb
add
cmc
push
push
hlt
xlat
das
jmp
jecxz
sbb
mov
imul
xchg
or
jnp
js
inc
pop
cmc
add
jo
mov
adc
jo
mull
rcl
adc
adc
pop
or
xchg
aam
insb
in
mov
xchg
je
fs
cltd
mov
in
mov
xorl
jo
test
je
lods
jl
rorb
in
sub
cltd
sub
iret
mov
lds
fdivs
int3
icebp
nop
inc
test
js
dec
out
inc
xor
cs
xchg
inc
arpl
mov
in
stos
inc
dec
push
push
imul
xchg
dec
cmp
xor
jo
cli
mov
inc
push
fnsave
xchg
flds
dec
jbe
inc
jo
lods
jecxz
push
pop
shlb
mov
sub
arpl
add
adc
dec
dec
fdivrl
jbe
jae
sti
shlb
add
or
aas
mov
push
dec
mov
aad
or
or
ret
stc
aam
in
shlb
movlps
in
and
xchg
ret
mov
lock
int
sub
and
repnz
jo
lea
push
fildll
mov
add
jmp
jo
mov
dec
lds
jp
out
in
mov
inc
mov
jo
xor
jo
pushf
fwait
aam
push
out
nop
sub
int
fs
cwtl
dec
jo
mov
adc
imul
jo
fldenv
rcrb
dec
cltd
xchg
js
pop
gs
jae
scas
xchg
pusha
popa
fidivrs
shl
aam
jo
inc
mov
icebp
jo
shrl
add
ds
add
push
sbb
fs
orb
jo
movsl
es
sarb
lds
adc
and
cmp
loopne
pop
rcl
push
test
mov
lods
sub
int
je
jo
out
fstl
pop
cmpsl
inc
jo
iret
ret
mov
or
mov
aas
popa
hlt
sub
les
insb
mov
mov
idivb
je
dec
and
lods
mov
lea
jo
arpl
cwtl
jo
shr
stos
fs
fistl
jo
push
outsb
dec
jg
test
loopne
insl
adc
popf
lcall
shl
mov
jo
adc
mov
out
call
movsl
mov
jmp
and
les
mov
mov
or
fdivp
pop
jb
adc
clc
xor
testb
arpl
xchg
and
shll
jae
mov
inc
out
mov
xor
out
mov
pushw
add
sub
cmc
inc
push
neg
hlt
jo,pt
adc
popf
dec
push
add
nop
pushf
push
jb
sbb
pop
sub
add
out
rol
inc
bound
mov
test
mov
hlt
jb
fidivs
jmp
xchg
cmp
mov
lcall
movsl
lods
aad
xor
sbb
sbb
inc
loope
jno
in
sub
cmp
add
pop
inc
jecxz
js
push
out
pop
mov
movsl
fstp
cs
dec
push
in
test
in
mov
leave
insb
inc
adc
jo
or
adc
xlat
jo
mov
cltd
or
lcall
mov
mov
xchg
insb
xchg
je
mov
push
into
mov
adc
sub
add
push
add
xchg
pop
push
fmuls
cmc
and
imul
clc
mov
jo
sub
or
out
nop
cmp
pop
cmp
in
jmp
bound
pop
adc
jo
insb
pop
cmp
push
jo
outsb
lods
dec
mov
int3
mov
xchg
or
pushf
in
imul
jmp
dec
addl
dec
shl
outsb
fnsave
sbb
scas
jl
jo
push
xor
mov
mov
stos
nop
and
xorb
lcall
mov
fldl
dec
mov
fmuls
pop
popf
bound
shll
mov
dec
mov
xor
adc
js
test
jno
hlt
js
push
adc
xchg
mov
dec
test
addl
fidivrl
cmp
or
push
mov
push
xor
fsubp
rcll
pushf
jo
and
ljmp
andl
jo
dec
push
mov
fs
jo
outsb
pop
mov
inc
test
bound
popf
addb
int
jo
mov
xor
jnp
jno
jb
das
movsb
iret
into
pop
push
jo
dec
lock
fisubrs
lahf
add
shl
sub
addr16
fiaddl
jo
pushf
dec
lods
dec
test
out
sub
aam
cmp
insl
aad
and
sub
int
pop
jae
jo
mov
scas
add
adcb
jmp
jge
mov
pop
shll
popf
sarb
jl
jne
inc
adc
add
pusha
sbb
adcl
push
mul
cmpsb
aas
les
sbb
dec
js
data16
add
fucomip
mov
mov
arpl
add
jo
cmpsl
imul
loope
jo
gs
loope
decb
xor
out
mov
int3
xchg
sub
mov
push
jo
push
les
jo
dec
xchg
jno
aaa
and
cmp
negb
arpl
jg
cli
mov
add
out
jb
mov
mov
je
push
inc
push
nop
mov
popa
sbb
sarl
jne
je
sub
inc
mov
nop
dec
cmp
jo
arpl
mov
dec
xchg
xchg
add
mov
out
push
push
sbb
jp
jo
dec
adc
or
dec
dec
jo
or
and
jo
xor
inc
mov
inc
mov
pop
xor
or
test
xor
nop
int3
bound
and
addr16
inc
add
xchg
fs
push
jecxz
jae
and
mov
inc
loop
ds
jo
iret
leave
jne
std
fnsave
adc
sbb
inc
lret
out
cmc
lods
pshufw
iret
xor
arpl
mov
sbbl
call
rorb
inc
shl
jbe
leave
jbe
out
test
push
sarl
mov
add
jo
pop
scas
iret
pop
cmpsb
das
add
movsl
jo
icebp
jmp
sbbb
jo
cwtl
rorl
jo
dec
xchg
addb
icebp
jo
or
pop
nop
data16
mov
sarb
cmp
je
stos
into
jo
push
or
psrlw
mov
pop
xchg
xchg
rcll
data16
push
scas
dec
push
mov
sbb
clc
push
xchg
fcom
mov
or
push
xor
loope
test
sbb
das
jno
adc
scas
dec
cltd
in
cmc
nop
push
stos
sti
mov
ljmp
mov
arpl
pshufw
push
jo
sbb
jmp
int
nop
xchg
jmp
inc
or
popa
insb
jo
cmp
or
xor
xor
xor
push
cmc
or
jle
adc
rcl
subl
negl
jne
les
test
inc
popf
add
and
jge
push
push
mov
cwtl
int
adc
jo
adc
lret
shll
in
mov
imul
push
stc
lret
fsubrl
push
adc
imul
js
push
mov
lar
jo
pop
pop
js
shl
jno
orb
repnz
movsl
push
bound
test
shlb
pushf
ds
and
sub
jg
je
cmc
movsb
outsb
jo
out
scas
and
adc
cmp
mov
mov
jmp
insb
int
loopne
jo
mov
ret
outsb
mov
adc
movsl
xor
xchg
add
pop
setne
aad
popf
jb
mov
or
lods
inc
jecxz
xlat
and
pusha
jo
adc
inc
fistl
jp
movsb
push
xor
xlat
out
xor
add
jns
je
inc
lods
stos
or
dec
jno
adc
sar
js
out
jo
test
lods
mov
push
popf
jo
rorl
nop
lcall
push
in
push
ss
je
sub
out
mov
lock
mov
addr16
jo
call
push
in
aad
je
jp
popa
dec
jo
test
mov
jae
jo
cmp
xchg
nop
jo
std
mov
test
pop
mov
xchg
ja
inc
nop
clc
repnz
loope
rorb
bound
sbb
arpl
cltd
xchg
out
mov
mov
push
inc
movsb
jbe
mov
jns
jo
jge
push
cld
fmulp
push
xchg
add
mov
dec
cmp
inc
std
test
xor
icebp
jo
mov
cmp
jp
nop
push
sbb
or
repnz
test
jns
jnp
adc
shlb
cmp
xchg
or
clc
xor
adc
mov
dec
loop
mov
jo
sub
adc
xchg
not
jo
lahf
mov
adc
adc
lea
xor
bnd
pop
mov
nop
idivl
add
ja
cmp
inc
clc
adc
jo
dec
mov
xchg
bound
icebp
lods
sbb
jo
adcl
test
mov
test
jo
pop
push
inc
jo
ficompl
mov
gs
ret
mov
flds
leave
mov
nop
bound
pop
jns
gs
sahf
int3
mov
add
xchg
aam
test
sub
imul
addr16
loopne
push
cmp
imul
in
jo
mov
sti
addr16
cmpsl
jo
push
and
ficompl
mov
scas
add
int3
hlt
je
fstl
cmp
into
add
jo
aas
test
jb
mov
dec
inc
mov
popa
movsb
xchg
daa
pop
sgdtl
push
sbb
jge
jo
std
bound
in
dec
push
mov
scas
inc
dec
rorl
pushf
mov
jmp
or
out
and
clc
cmc
mov
xor
bound
gs
leave
jo
add
mov
int
and
sbbb
sub
nop
add
int
out
stc
nop
push
xor
jnp
js
sub
and
add
daa
jb
mov
xor
stos
push
pop
pop
jmp
xchg
mov
in
les
mov
ret
cs
jns
inc
in
bound
js
sbb
repz
jmp
incl
clc
pop
or
sbb
hlt
in
insl
pop
outsb
adc
and
stc
cltd
push
cmovns
test
in
mov
js
rorl
ss
loopne
imul
push
icebp
aaa
ret
out
add
jo
cmc
cld
sbb
shll
iret
add
lods
pop
popa
cmp
mov
dec
ret
cli
dec
jb
test
jo
inc
mov
in
clc
xchg
and
in
fst
fmuls
inc
stc
xorb
mov
mov
and
jo
std
dec
test
ret
sub
xor
cs
xchg
rcl
push
arpl
or
mov
jo
ja
cmp
jo
cmp
ret
adc
dec
dec
jne
mov
pop
out
fdivrl
dec
clc
call
xor
cmc
test
push
mov
fwait
int3
shll
jb
imul
mov
jo
shlb
add
xor
movsl
jae
call
jge
sub
xlat
jo
dec
test
pop
lock
adc
push
pop
jo
rorl
add
aad
mov
popa
mov
sub
in
mov
test
ds
xor
into
jns
push
je
int
data16
popa
inc
jo
bound
lock
xor
fldenv
xchg
daa
lret
loop
nop
dec
push
jl
xor
icebp
aad
sbb
cs
cmp
xchg
addr16
in
push
test
or
push
bound
lock
sub
pop
mul
xor
ss
cmp
cltd
bound
subl
xor
aad
ss
mov
rorl
loopne
sub
jl
jo
push
jecxz
push
xchg
push
adc
adcb
jnp
repnz
bound
clc
es
cmp
lock
push
jns
cli
test
in
aas
iret
sar
jo
push
ret
icebp
rcl
cmp
cmp
jb
adc
lcall
enter
sbb
inc
movsb
pop
in
push
sub
lret
jno
lock
sub
dec
adc
jo
pop
sahf
mov
into
out
jo
inc
sbb
jo
xchg
popf
inc
fs
inc
jo,pt
or
push
cmpsb
orl
jo
dec
xor
push
jo
mov
sub
daa
jns
dec
sub
movsl
fcompp
repz
jo
jmp
in
orl
pop
popa
mov
mov
jns
aam
or
test
arpl
adc
js
clc
jno
jo
mov
add
jo
dec
dec
adc
arpl
fnstenv
bound
scas
dec
and
mov
jns
push
aas
pop
push
and
hlt
jne
test
outsl
movsl
push
cmpsb
jge
jo
pop
add
and
jo
in
inc
addl
jle
cmpb
jo
add
mov
sub
cmc
jo
movl
dec
iret
fildll
addb
or
movsl
push
mov
inc
popa
jne
pop
setg
jg
mov
test
inc
inc
insl
frstor
cmp
and
cmc
push
jmp
sbb
ja
mov
movsl
and
int
cmovle
sti
jmp
fstps
std
xorb
mov
jmp
mov
mov
cmp
sub
js
adc
jo
xlat
imul
repz
movsl
sbb
mov
sbb
cmp
das
js
in
fsubrs
and
and
inc
sti
movsb
ret
jo
jmp
sub
leave
in
in
pop
stc
int3
scas
jecxz
fs
push
shll
jo
movsl
bound
sub
mov
stos
or
je
adc
aas
xor
jno
jo
cmp
and
out
jo
push
inc
in
aad
mov
or
cmp
cmp
push
out
mov
subb
xlat
jmp
out
lcall
pop
cmp
cmpb
jno
sub
std
push
mov
inc
push
push
pop
push
cs
inc
mov
mov
push
or
dec
adc
inc
add
data16
xchg
sbb
sub
cmc
cmp
jnp
jo
dec
loope
jmp
adc
dec
outsb
jo
je
ret
mov
xchg
and
movsb
dec
jo
iret
sub
and
out
cld
bound
inc
int3
jo
sub
and
out
and
mov
movsl
movzbl
xlat
outsb
test
mov
call
push
not
jo
mov
fsubs
and
add
mov
mov
shll
fs
xlat
int3
sahf
bound
adc
xchg
jo
movsb
insb
ficompl
pop
sub
mov
rol
js
out
loopne
push
xor
mov
jne
fnstenv
dec
mov
sbb
push
xor
in
cmpsl
insb
sar
jo,pt
scas
out
lret
inc
movsb
jo
xchg
fwait
icebp
sbb
and
jo
or
adc
sub
push
and
enter
mov
dec
mov
outsl
pop
xor
pushf
xchg
in
es
inc
pop
aas
loope
imul
cmp
enter
mov
shll
inc
pop
jmp
xor
adc
aaa
out
xor
jo
mov
xchg
into
sbb
jo
mov
popf
cld
testb
xchg
xor
dec
push
jb
jl
aam
jo
mov
fimuls
mov
jo
adc
jecxz
outsb
test
xchg
nop
lcall
sbbl
and
dec
jmp
push
jo
insb
cld
mov
jo
jno
add
jo
ss
rcrl
xor
add
subb
xchg
xor
sub
rolb
xchg
jnp
mov
pop
cmp
lahf
jle
adcl
and
dec
stos
stc
pop
inc
jo
inc
icebp
jbe
jo
jnp
xchg
into
stc
jo
xchg
out
rorl
cs
andl
nop
push
ljmp
xchg
jae
sub
jmp
and
dec
xchg
aad
push
aas
mov
ret
jbe
mov
fldenv
push
sbb
jo
push
lods
int
jp
fisttpll
data16
jo
xor
aam
insl
out
add
jo
pop
in
cmp
jmp
and
mov
cld
jae
add
cltd
dec
lahf
sarl
out
inc
jo
mov
fcmovb
jo
ljmp
mov
icebp
loop
inc
add
mov
test
adc
ret
jo
push
scas
hlt
mov
and
mov
xor
inc
iret
mov
sbb
fs
adc
or
lahf
cmovno
stc
outsb
insb
push
adc
out
in
cli
outsl
pop
jo
cmpsl
sub
cmc
vmwrite
mov
xchg
mov
les
xor
jo
adc
xor
fistl
jo
cmp
test
cmp
out
int
mull
sbb
pushf
loope
push
inc
jl
adc
test
clc
push
jo
hlt
pop
adc
and
sbb
ror
ja
in
leave
js
push
daa
add
loope
loop
mov
bnd
cwtl
or
sub
cmpb
xor
xchg
adc
jns
jo
in
or
shll
mov
inc
in
jo
lods
inc
add
push
inc
adc
adc
hlt
shll
sub
cmp
in
dec
loop
adc
sbb
jo
lea
shrl
push
repz
rcrl
push
jae
enter
jmp
pop
adc
xchg
shll
xor
in
out
pop
addl
lds
jo
xor
or
enter
in
dec
js
mov
std
stos
xor
out
cmp
sub
out
ret
pop
jo
mov
mov
add
popf
mov
mov
enter
xor
dec
mov
adcl
fcoml
lods
pop
int3
jo
in
or
das
aam
mov
leave
lret
stc
out
leave
or
xchg
shll
and
mov
test
repnz
ret
ss
and
mov
mov
dec
add
adc
lret
sbb
sub
js
movsl
xor
add
mov
xlat
rcr
adc
repz
out
call
sarl
rcl
inc
je
jp
or
out
and
outsb
jmp
push
divl
jo
sub
jge
aaa
push
pop
jo
hlt
pop
stos
enter
adc
xor
mov
fs
aam
mov
mov
push
pop
fxch
lahf
aas
jo
dec
cwtl
aam
sub
andl
jns
clc
ss
aad
sar
dec
in
jb
lock
enter
rorl
addb
in
andb
les
add
cmc
mov
adc
subb
sbb
lods
and
push
in
jo
or
sbb
mov
dec
inc
inc
jecxz
insl
cld
or
loop
add
leave
push
jno
mov
mov
jo
imul
sub
mov
ss
xor
jns
push
lock
in
jmp
loopne
aam
jo
jecxz
cmp
movsl
pop
subb
push
sub
mov
lods
mov
fidivl
test
dec
push
sbb
jo
add
jnp
iret
and
adc
sub
push
pop
in
jl
loopne
call
out
pop
cmp
adc
cli
jo
enter
jge
pop
nop
shlb
fsubrs
jno
mov
es
andl
jo
lret
pushf
lahf
xchg
inc
dec
inc
int3
mov
adc
test
jo
aad
adc
jo
lret
adc
jg
js
jns
push
dec
out
inc
pop
aad
jno
push
jo
stos
into
inc
dec
lea
fdivr
mov
xor
aas
movsl
scas
and
fnstenv
gs
mov
jo
test
bound
loop
jo
pop
cltd
stos
arpl
lock
stos
js
into
data16
pushf
add
call
mov
lea
or
mov
imul
stos
ss
and
pop
push
nop
mov
mov
imul
and
or
jns
bt
hlt
scas
add
mov
mov
xor
jae
cmp
test
mov
movsl
sbb
sbb
jo
xchg
mov
inc
add
jp
outsb
popa
jne
int
in
loope
mov
jo
je
stc
and
mov
jmp
ret
pop
mov
xor
mov
jmp
sti
out
push
xchg
lcall
sub
enter
das
sub
stc
aaa
shlb
jo
inc
fdiv
sbb
mov
jo
mov
jg
lock
popf
call
jae
psrld
push
cmp
jmp
pop
or
jo
cmp
loopne
outsb
shll
jo
test
pop
or
sub
push
out
xor
mov
mov
add
push
cmp
mov
or
sbb
ds
stc
xchg
jo
pop
mov
addr16
ss
pushf
out
mov
out
ljmp
pop
int3
fstl
jo
xchg
testl
push
push
inc
adc
int3
inc
clc
lea
dec
jbe
or
dec
lahf
and
jmp
and
lods
in
push
inc
xor
mov
mov
std
sub
add
jbe
mov
aad
movsl
jo
hlt
cld
fmul
popa
adc
jo
test
cltd
repnz
icebp
dec
sbbb
scas
and
jb
jo
cli
imul
test
mov
test
jo
fcomip
mov
lock
stc
add
lcall
jo
dec
icebp
pop
mov
jo
push
mov
out
xlat
jo
insl
mov
icebp
dec
add
loope
popf
xchg
nop
cmp
and
push
pop
mulb
in
addb
fildl
shll
lods
aad
pop
xor
pop
andb
lahf
jo
xchg
hlt
fimull
cmpl
repnz
jbe
lcall
jo
mov
mov
jno
or
dec
loopne
sub
je
push
lea
loop
repnz
enter
popa
cmpsb
push
icebp
aam
scas
push
fcmovnbe
lgs
or
repnz
sub
add
inc
sarl
inc
lods
ret
les
pusha
cltd
sub
inc
test
mov
into
sbb
pop
cmp
adc
out
add
nop
cmc
stos
push
and
sub
jo
xor
xlat
pushf
adc
notb
cmp
dec
push
icebp
inc
and
mov
jo
inc
push
adc
ja
jo
jp
stc
inc
mov
jns
outsb
mov
sbb
adc
cld
jo
or
fldl2e
fdivs
sub
jne
sub
mov
cmpsb
pop
jb
or
int3
out
inc
jb
cmc
inc
jno
int
or
mov
pop
adc
icebp
jmp
test
cs
mov
test
add
icebp
jo
sub
push
inc
fwait
rorl
xor
mov
push
sub
in
push
test
sub
inc
xchg
push
dec
iret
and
mov
int
sbb
add
jns
jbe
iret
dec
mov
xchg
dec
cmp
insb
test
adc
fldlg2
jo
fucomp
inc
int3
divl
jo
insb
mov
les
ds
cmp
pop
pop
fadd
sbb
or
push
unpckhps
xchg
jp
sahf
adc
push
mov
mov
push
jo
gs
pop
movsb
ret
jo
cli
inc
fdivrl
xchg
push
lahf
or
hlt
adc
or
jo
add
jae
mov
cwtl
subb
gs
jno
paddq
leave
xor
jo
fidivrl
out
and
cmp
mov
adc
out
xchg
sub
loopne
xchg
outsl
out
loop
testl
iret
outsb
cmp
insb
dec
jo
xorl
loop
push
outsl
jo
adc
rolb
jmp
jno
in
xor
in
pop
jp
data16
mov
mov
jo
imul
ds
xchg
pushf
mov
inc
inc
in
jb
jmp
insb
mov
lahf
or
loopne
orb
xor
das
mov
jo
clc
add
xchg
jp
icebp
jo
mov
sub
sub
in
push
aam
shll
fwait
dec
xor
pop
jo
push
pop
cli
xchg
stc
lea
xorb
out
jae
sub
sti
push
jno
lcall
jo
pop
or
jmp
mov
push
mov
or
subb
pop
mov
inc
mov
lahf
mov
xor
sub
jecxz
aam
dec
out
sbb
psrlw
je
jg
mov
cld
lea
push
jnp
lds
out
in
add
jbe
dec
shll
dec
jo
enter
sub
or
scas
hlt
in
les
xor
mov
jo
popf
mov
sbb
ljmp
inc
movsb
arpl
lock
fdivl
jo
pop
inc
cmp
jmp
jo
jae
cmp
pop
sub
insl
xchg
push
shll
push
jo
pop
icebp
das
test
in
jo
daa
xor
xchg
jg
push
int
sub
mov
ret
push
cmpsb
mov
out
sbb
add
mov
sbb
jle
int3
test
mov
mov
mov
jo
sbb
cwtl
jo
inc
aas
int3
or
mov
sbbl
dec
or
pushf
aam
paddq
sub
arpl
repz
mov
dec
flds
adc
dec
stos
out
sub
mulb
dec
sub
xor
orl
test
jo
cmc
adc
les
jo
inc
int
aad
jmp
pushf
insl
ja
adc
push
mov
lret
mov
jmp
xchg
push
imul
xor
hlt
in
jo
jno
xor
sbb
and
syscall
jge
and
icebp
jo
fistpll
cld
lock
imul
js
or
es
fstl
outsb
mov
and
jmp
inc
add
or
popf
test
jo
lds
bound
int
or
mov
in
out
push
jp
outsb
jnp
icebp
enter
repz
stc
nop
push
dec
dec
fwait
pop
lea
push
int
arpl
xor
jno
xor
vmwrite
daa
iret
shl
sti
pop
jo
add
cmp
jo
add
gs
jo
outsb
in
push
shlb
xchg
fcompl
mov
jo
cmp
loop
jo
arpl
lods
jae
xchg
xor
sub
orl
adc
and
std
xor
insl
into
sub
sarl
xchg
add
jmp
mov
mov
mov
jo
lcall
repz
minps
mov
adc
test
cmc
icebp
xlat
push
mov
outsb
das
mov
bound
jl
mov
push
icebp
mov
mov
pop
stos
jo
jae
adc
xor
fbld
rolb
fnsave
adc
clc
mov
test
les
loope
jo
inc
into
repz
es
or
daa
insb
jo
sub
jge
aaa
lahf
jo
popf
xchg
adc
movsb
cmpsl
push
sbbl
push
adc
xorl
ror
inc
ret
fbstp
sbb
ret
in
mov
cmp
push
add
sbb
insb
imul
mov
std
and
xor
jp,pt
push
cmp
inc
or
jne
add
jo
test
or
popf
dec
push
incb
jo
clc
icebp
mov
divb
enter
jns
imul
adc
xchg
shl
aaa
or
ss
and
mov
das
xchg
cld
aad
cmp
sub
inc
push
lret
movsl
je
loope
fnstenv
imul
jb
add
les
repz
out
iret
in
jp
jo
mov
jae
or
in
test
inc
ret
mov
xchg
sbb
in
mov
rorb
mov
ror
jo
xchg
repnz
shll
jo
push
adc
jo
mov
or
cmpl
push
cmpsl
and
daa
sub
nop
jae
pop
jns
mov
jo
fisttpll
jl
xor
jo
int
out
lret
enter
push
add
sahf
mov
lods
out
jo
test
xorb
int
sub
popf
add
jne
jo
aas
push
imul
adc
cld
test
jns
bound
pop
nop
out
or
push
jge
mov
inc
xchg
loop
scas
sbb
or
shl
jmp
adc
call
jo
sbb
test
shl
sub
lea
sub
fdivrl
jo
mov
inc
mov
jnp
arpl
lret
sahf
jo
mov
xor
jge
mov
xchg
ret
lret
iret
jo
into
in
out
daa
and
pop
mov
shr
jo
xchg
jecxz
dec
jg
sahf
sub
inc
mov
lret
nop
cmpsb
mov
jecxz
fnstsw
mov
andl
int
js
inc
andl
aad
das
pop
enter
jl
mov
or
xor
ficoms
int
xchg
ds
mov
ret
push
sbb
movsl
mov
and
test
rcrl
icebp
push
mov
bt
ljmp
in
adc
andl
lds
dec
push
dec
adc
imul
mov
push
cwtl
mov
mov
cmpsb
mov
data16
inc
cld
stos
addb
add
sbb
movsl
scas
dec
and
ja
jo
mov
aaa
add
mov
in
lcall
push
stos
adcl
mov
in
sub
xor
fdivr
mov
lea
in
jge
stos
test
lcall
mov
mov
mov
cmpsb
std
dec
fimull
inc
test
cmpb
cli
push
mov
inc
push
pop
pop
shl
pop
jo
scas
frstor
rolb
xor
mov
je
jo
pop
sbb
mov
and
ljmp
push
int
aad
jo
adc
and
andb
jo
leave
adc
test
in
out
cmp
icebp
adc
repz
jo
test
xchg
push
rclb
int
mov
test
sbb
imul
icebp
bound
jo
jmp
lea
lock
pop
mov
aam
hlt
sub
mov
movsb
mov
setl
mov
jbe
bound
and
sub
push
int3
push
loop
jo
xchg
xor
jo
adcb
in
jo
mov
aam
lcall
cmpsb
jle
cs
jo
pop
mov
in
adc
fiaddl
aad
push
push
inc
mov
ja
jge
adc
xorl
and
push
mov
popa
loope
in
stc
jp
inc
jecxz
lock
ror
in
repz
fsts
rorl
jo
pop
dec
and
ret
xor
jo
into
inc
hlt
cmp
jo
loope
inc
les
scas
xchg
mov
fnsave
xchg
cmp
ret
icebp
fidivs
test
stc
mov
mov
xorl
pop
xchg
sub
fwait
sbb
shlb
fldcw
xorb
test
add
lret
xor
sbb
push
test
popf
push
mov
xor
add
clc
jb
jl
shll
xor
jp
out
push
aas
in
jo
adc
repnz
jo
scas
iret
out
push
jmp
push
gs
dec
push
push
dec
lahf
xchg
fmuls
and
push
jge
ss
pop
sbb
loop
lahf
pop
jo
cmp
xchg
out
out
xor
fld
shrl
xchg
sub
sub
sbb
add
aas
jmp
nop
jne
mov
mov
pop
sub
orb
mov
or
pop
cmp
add
in
xchg
push
int3
adc
pop
add
repz
or
lea
leave
push
push
outsb
int3
add
push
test
xchg
jb
xchg
insb
sbb
add
jo
jne
out
xchg
sub
push
and
out
in
jo
gs
int
data16
jg
ljmp
int3
or
jecxz
aam
rolb
stos
and
jl
xchg
mov
cli
push
xor
clc
mov
sub
xchg
mov
push
sarl
fildl
dec
jge
cmpb
xchg
cltd
les
cwtl
arpl
xchg
iret
lret
jo
jae
movsl
sbb
push
cmp
and
movsb
jo
lahf
or
jo
push
adc
sarl
test
imul
les
arpl
jae
add
add
mov
loopne
icebp
test
jo
movsl
cs
mov
inc
mov
cwtl
add
bsf
mov
stos
daa
jbe
jp
sub
sub
mov
lcall
bound
sbb
sub
mov
andb
dec
das
and
xorl
add
fisttpl
in
icebp
mov
pop
jo
push
negl
gs
xchg
mov
dec
sub
dec
mov
or
jbe
jne
out
clc
mov
scas
or
dec
push
fsub
xchg
je
push
jo
faddl
ljmp
movb
push
and
mov
mov
jmp
les
pop
adc
jo
test
jge
das
loop
jo
inc
lret
in
push
dec
sbb
jo
clc
cli
or
mov
push
pop
nop
mov
push
dec
imul
sarb
xor
out
push
jo
mov
or
jle
push
addb
lret
push
int
ret
or
xor
adc
aaa
pop
hlt
jae
push
cmp
in
cwtl
and
xchg
pop
je
and
add
rcrl
aam
pusha
and
movsb
jmp
push
cmpsl
mov
les
out
js
dec
jno
leave
mov
mov
int
aam
js
dec
icebp
stos
out
mov
sub
repnz
sbbl
push
mov
out
or
outsb
jg
in
xchg
jmp
xor
jo
clc
arpl
xor
jo
hlt
gs
test
cmp
popf
es
int3
loopne
adc
or
mov
mov
pop
add
shll
mov
cmp
fnstsw
pop
test
adc
or
add
mov
adc
loope
and
out
mov
inc
dec
js
add
int3
shl
leave
jns
sbb
jo
fdivp
and
data16
jo
xor
cmp
rcll
lret
jae
jo
mov
cmp
mov
fs
cmp
xor
bound
and
xchg
ret
cmpsb
lock
jb
out
jo
imul
jo
loop
cmp
adc
jo
js
inc
pop
sub
push
cmp
movsb
sbb
addr16
int
imull
jo
std
sti
pop
cmpsl
xor
leave
jo
push
jecxz
shr
cmpb
xchg
inc
jo
mov
cmc
stc
icebp
jo
les
jo
in
bnd
lock
mov
push
aam
int
aad
push
imul
xchg
fisubl
mov
jl
add
adc
enter
notl
sbb
nop
andb
sarl
clc
repnz
imul
invd
stc
mov
movsl
rcrl
jo
jb
mov
jo
xlat
cli
pop
push
xor
in
push
sbb
and
jne
hlt
mov
mov
sbb
std
cmc
adc
sub
aam
jo
inc
jmp
cmp
sahf
and
mov
test
in
cmp
subl
iret
ss
mov
jo
leave
mov
push
jge
jo
je
xor
add
and
les
sbb
int3
inc
jecxz
enter
bound
gs
mov
imul
pop
jbe
into
test
in
sbb
mov
aad
mov
inc
mov
push
leave
filds
sti
mov
in
or
mov
push
iret
je
ljmp
adc
mov
jne
push
jo
xchg
add
stc
mov
nop
std
adc
jle
push
pop
clc
lods
fs
aam
fidivl
mov
mov
leave
outsb
jo
mov
mov
clc
jne
push
xchg
popa
pop
sbbb
or
jo
push
notb
pop
hlt
in
ds
rcll
jo
mov
jns
jo
out
ljmp
mov
out
xor
faddl
les
add
hlt
test
jo
aam
mov
dec
or
mov
stc
jge
into
std
movhlps
mov
aas
push
xchg
jo
scas
cmpsb
mov
je
jo
jmp
and
xor
in
inc
add
movl
test
and
push
pop
add
jo
lahf
aas
dec
push
in
push
fidivs
inc
je
int
nop
xchg
sub
add
icebp
dec
xchg
outsb
in
sti
jo
and
in
cmp
mov
pop
in
rolb
test
sub
ret
push
lret
nop
dec
sub
stos
cwtl
dec
push
loope
xlat
pop
psubsw
add
imul
out
out
push
jb
adc
bound
mov
aas
jmp
arpl
nop
cmp
test
aam
cmp
les
xchg
lret
xor
fstpl
fistpl
in
mov
xchg
cmp
jnp
mov
aam
bound
in
sbb
ret
fistpll
pop
cli
in
xchg
aad
cld
pop
cmp
pop
addl
sub
push
pusha
mov
loop
xchg
inc
pusha
scas
insl
addl
repnz
jo
test
negb
popf
lock
test
and
daa
push
in
das
xchg
lea
bound
pop
xor
gs
push
rorb
jecxz
out
sahf
in
jo
or
push
mov
cs
data16
outsl
xchg
or
nop
lret
sahf
test
adc
fists
jecxz
sub
sub
xor
xlat
ficoms
mov
xor
adc
push
fimull
orl
int
xchg
push
jmp
sahf
nop
lcall
adc
push
lret
push
mov
adcb
mov
jo
shll
ss
jle
test
out
add
mov
xor
xchg
cld
ret
orb
mov
inc
fsubr
lods
enter
jo
add
jo
mov
xchg
mov
add
sbb
stos
push
mov
cli
out
jb
push
jo
pop
jnp
lods
stos
outsb
jmp
push
in
mov
xchg
or
xor
inc
sub
cmp
mov
xor
out
adc
jp
lods
out
push
std
scas
rcrb
enter
out
cmp
adc
mov
push
movsb
push
push
out
les
fs
fs
aad
repz
sarl
push
or
in
sbb
gs
jo
mov
or
xlat
lcall
dec
push
and
jb
aaa
xchg
mov
push
testl
es
aad
hlt
out
shrb
jp,pt
jo
aam
jbe
loope
test
push
jmp
jecxz
mov
jo
xchg
out
inc
ss
sub
ret
xor
jp
dec
jge
jo
add
xchg
jg
mov
adc
push
push
inc
dec
xlat
sti
out
sbb
sbb
cli
pop
insl
pushf
mov
shll
and
aam
sahf
fwait
mov
xlat
out
jo
rorb
andb
push
push
bound
in
fwait
sbb
sahf
in
inc
movsl
les
cmp
lret
mov
icebp
ret
mov
fsts
sbb
mov
inc
dec
andl
dec
mov
or
add
xchg
js
dec
scas
cmp
mov
mov
jo
clc
xor
xchg
push
jmp
push
sbb
fwait
jo
add
inc
jecxz
int3
ret
ret
inc
jl
adc
nop
push
fs
mov
arpl
loop
push
or
adc
push
mov
push
xlat
mov
and
repz
dec
outsb
or
ret
adc
jne
dec
jne
out
adc
pushf
push
jp
std
insl
push
push
lods
gs
sub
xor
mov
sbb
jnp
stos
jo
sub
and
pop
test
mov
fsubrl
popf
addr16
data16
cmp
inc
jb
inc
jo
movsb
mov
push
jo
mov
mov
dec
xchg
jbe
mov
call
xor
sbb
aad
add
jno
push
pop
xchg
mov
jo
jmp
mov
jo
or
aam
sub
out
movsl
test
jo
mull
lcall
pushf
lods
sti
jle
jo
dec
out
lret
lea
pop
nop
cs
imulb
fidivs
pushf
push
pop
jo
sbb
mov
ret
or
ficoms
nop
add
jl
repz
jb
sbb
mov
mov
in
gs
inc
fnsave
and
cmc
jnp
js
mov
popf
outsb
push
xchg
inc
sub
mov
dec
jo
int
sahf
cld
adc
aas
and
xchg
fs
imull
jne
fs
insb
add
add
mov
jae
jo
stc
pop
adc
bound
lret
mov
sbb
push
xor
test
jbe
outsl
jge
mov
rclb
repnz
out
jo
aaa
arpl
sub
mov
out
adc
jg
shrb
cmpsb
xchg
iret
std
mov
insb
mov
xchg
int3
add
flds
das
inc
cwtl
sub
xchg
pop
sub
adc
sub
mov
jns
and
jns
push
call
std
stc
mov
jl
fnstcw
mov
mov
push
fstpt
mov
shll
repnz
sub
repz
jl
rolb
add
scas
insb
lea
mov
jo
decl
add
fbld
add
and
leave
es
jb
call
subl
rcll
icebp
bound
imul
mov
jae
jbe
add
jo
arpl
repz
inc
jnp
out
push
lods
loopne
mov
mov
insb
push
push
pushf
jo
sbb
es
ret
dec
fwait
nop
les
pop
arpl
mov
inc
pop
and
xor
push
add
lea
mov
andb
iret
data16
cmpsb
hlt
jmp
mov
sub
and
loop
mov
imul
test
fisttpll
xor
bound
xor
addr16
xor
rclb
outsl
push
pop
push
jb
inc
cs
scas
ss
shrb
fwait
push
mov
jle
lcall
pop
xchg
inc
push
xchg
dec
paddusb
imul
xor
orb
int
push
and
data16
jo
pop
jne
enter
jo
xchg
cmpb
sub
mov
mov
jns
cld
jnp
imul
repz
jne
jo
in
mov
pusha
jno
nop
js
or
jno
mov
jb
sub
pop
xorl
in
push
addr16
or
fidivrs
jl
rcrl
lahf
push
mov
mov
jo
push
fidivrl
mov
push
mov
push
dec
lods
enter
jo
mov
or
jb
or
mov
andb
aad
jmp
or
lods
xrelease
jo
jge
std
into
test
dec
jo
stc
call
sti
rsqrtps
fs
out
add
daa
sbb
imul
aam
nop
cmpsl
dec
fucomip
mov
cmp
push
push
cli
xchg
mov
mov
jp
jmp
stos
inc
leave
hlt
mov
xor
mov
jo
sbb
adc
jo
and
inc
out
popa
xchg
cmp
lds
jb
sub
js
mov
jo
dec
es
in
inc
xchg
jo
mov
or
cmp
sarb
inc
mov
or
add
push
or
push
mov
pusha
sbb
pop
insl
pop
jp
fnstsw
outsl
adcl
pop
orb
repz
push
jnp
xchg
mov
jmp
dec
adc
push
sub
clc
or
dec
mov
and
hlt
sub
or
push
test
insb
andl
jbe
scas
jo
test
pop
ss
cmp
lods
arpl
or
jo
lds
sti
sbb
pop
jo
adc
js
fimuls
mov
aas
subb
cmp
cmp
lea
jo
bound
insl
xchg
xchg
cs
sub
fstps
or
jg
nop
popa
mov
gs
dec
repnz
mov
out
ficompl
nop
xchg
jle
sub
scas
push
pop
enter
inc
out
mov
or
or
mov
out
loope
adc
add
mov
dec
mov
in
and
sbb
pop
sub
sbb
or
js
mov
xor
data16
fisttpl
push
out
insl
imul
push
sub
jo
bound
out
xlat
dec
xor
stc
and
jno
jbe
lds
and
in
jo
cld
aad
mov
test
fisubl
lds
push
push
outsl
in
mov
jo
pop
cmp
jns
lret
loopne
mov
sbbb
jmp
popf
fwait
jo
add
jno
addr16
mov
in
mov
in
xchg
mov
mov
jo
push
adc
push
arpl
xor
or
pcmpgtd
out
or
mov
xchg
jo
je
or
imul
rclb
dec
push
jo
sbb
hlt
aad
dec
and
enter
cmp
imul
or
cmp
cmp
ficompl
jl
jno
jo
scas
ret
scas
test
std
lds
imul
fsts
xor
inc
push
pop
sub
push
mov
test
mov
scas
and
icebp
push
fimuls
cld
jo
mov
std
xchg
mov
addr16
jne
inc
sub
insl
mov
adc
repz
push
test
xchg
adc
lods
mov
inc
lock
out
jb
cmp
jp
fndisi(8087
test
pusha
pop
inc
sbb
mov
sqrtps
data16
jle
dec
stos
repz
mov
add
jge
je
or
data16
sbb
jo
test
add
andb
fucomip
inc
movsb
push
andb
push
cltd
negl
push
or
insb
cmpl
or
jo
sbb
addr16
cltd
clc
or
jb
test
add
cmp
adcb
mov
or
dec
in
das
in
mov
arpl
js
sbb
cmpb
xchg
jge
mov
nop
pop
jp
daa
nop
fdiv
test
fidivrl
push
lea
in
adc
inc
mov
jo
nop
test
lcall
jp
mov
mov
cmp
outsb
jns
lahf
mov
sub
pop
pop
adc
jae
icebp
push
adc
sub
lds
dec
xchg
sub
push
stos
mov
cmpsl
shr
nop
pop
inc
jno
lret
mov
mov
in
aam
jae
rcrl
movsb
fnstcw
mov
les
mov
std
idivb
loop
jo
fdivr
inc
xchg
sbb
mov
mov
jne
push
aas
lds
jg
sub
and
es
movsb
scas
pop
das
mov
jb
in
adc
mov
gs
pop
movsb
cmp
loope
pop
cli
js
cmpb
out
jle
lret
push
pop
push
cmp
dec
test
jno
cmc
lcall
les
aaa
push
lock
jae
es
xchg
mov
inc
out
dec
sub
es
or
mov
imul
lock
or
and
jno
sbb
mov
arpl
movsb
inc
jmp
jbe
int
jo
movsl
or
sub
mov
addr16
push
jo
sub
add
outsb
movsb
cmp
leave
jp
dec
sbb
fnstsw
outsl
orb
jo
mov
cmpl
addr16
ret
jp
jo
dec
lret
or
jo
and
jnp
out
or
outsb
cmp
mov
pop
dec
daa
and
mov
outsl
stc
xchg
int
js
dec
sub
xchg
cmpsb
xor
push
or
and
outsl
lahf
sub
lcall
imul
pop
jae
adc
xchg
lcall
nop
push
sub
ret
bound
add
js
in
pushf
or
out
sbb
xchg
jo
repz
and
add
mov
jo
pop
mov
dec
jo
xchg
xchg
cld
dec
jle
jo
xchg
pop
fldt
mov
cmp
das
lahf
sub
pcmpgtd
fs
cld
xorb
jo
cmp
cmc
jle
sub
mov
sbb
dec
aam
mov
push
push
lods
fdivrl
inc
pusha
mov
loope
xchg
pop
cwtl
xor
loope
jo
jbe
enter
in
inc
std
inc
pop
inc
shlb
add
call
pop
mov
pop
rep
data16
lock
rcrb
out
jp
fildll
es
mov
mov
out
mov
ret
pop
xchg
lss
mov
shl
jo
leave
stos
insb
cltd
inc
in
shll
ret
and
sbb
fsubl
mov
pushf
ja
sbb
jg
xchg
jmp
and
and
push
insl
push
int3
in
dec
fwait
pop
ja
int
scas
jb
jns
cltd
xlat
notl
jo
adc
cmpsb
inc
sub
jo
addl
hlt
data16
adc
and
int
cli
push
jo
jp
rolb
pusha
push
jo
sbb
pop
ret
in
gs
jns
adcb
nop
lods
add
mov
sar
sub
mov
jbe
pop
outsl
imul
push
insb
mov
pop
push
push
xor
pop
sbb
pop
rcrl
jl
fs
jo
rcll
ret
movsb
cs
mov
mov
into
inc
pop
bound
jmp
jo
out
jecxz
xchg
adc
dec
cmovb
jle
and
push
mov
xchg
rcl
fnstsw
mov
aaa
and
sub
cmc
in
in
adc
loope
xchg
nop
addr16
dec
xchg
push
jle
inc
cmc
rdmsr
aad
mov
sbb
orl
std
add
xchg
jl
inc
lock
push
lret
sbb
and
dec
cmpsb
jae
xchg
pop
out
jle
das
push
sub
mov
insb
xchg
lret
xchg
inc
fs
dec
aaa
xor
scas
enter
and
sbb
stos
ss
lahf
mov
adcb
fsubl
xor
std
dec
xor
push
pop
out
push
mov
outsl
outsb
std
jno
cs
pop
mov
jp
aad
aas
pop
xchg
jmp
jo
mov
cmp
cmp
fs
sbb
adc
sub
js
dec
into
sbb
inc
inc
and
dec
sbb
push
pushf
imul
lock
mov
fs
out
or
mov
in
add
pop
adc
add
js
es
decb
push
fidivs
sub
jo
dec
das
push
scas
sti
out
jmp
stos
mov
pop
jo
fdivr
sub
pushf
jo
push
pop
ret
mov
int
aas
jg
fsubs
push
cld
cs
dec
mov
ds
call
push
push
adcb
dec
imul
mov
imul
inc
inc
lcall
and
dec
sub
pop
cmpsb
add
jle
dec
jae
push
fsubrp
inc
xorb
dec
mov
or
and
or
and
pop
adcb
mov
mov
or
xorb
jo
dec
adc
arpl
pop
lock
adc
ja
gs
xchg
adc
pop
jmp
int3
js
ret
adc
cmpsb
dec
out
jae
xchg
rorl
mov
sbb
dec
sarl
mov
in
xchg
insb
inc
rcll
repz
jne
cmp
icebp
push
aas
cmp
inc
adc
jae
cmc
and
mov
es
sahf
mov
jne
bound
out
outsl
mov
out
lock
scas
ja
outsl
pop
push
insl
cs
jno
in
cmpl
gs
out
cmc
js
mov
jle
xchg
xchg
sub
dec
dec
xor
add
cmpsl
mov
cli
inc
out
jb
mov
js
jo
and
into
and
popf
push
lret
fs
dec
push
jno
xorl
icebp
in
xor
int3
cmpsb
jo
dec
mov
push
aas
aaa
out
sbb
jno
mov
invd
mov
call
rorl
jo,pt
ss
data16
fwait
xchg
jo
sub
jg
inc
dec
mov
jo
test
loope
mov
dec
lcall
sub
dec
aam
mov
sub
pop
xchg
addb
scas
je
hlt
and
adc
adc
mov
repz
out
loopne
cmp
adc
jge
jo
jecxz
dec
sub
xor
mov
mov
mov
jb
jo
ffree
pop
bound
outsb
jo
push
loopne
lahf
sahf
sub
push
and
push
scas
xchg
push
rcl
jl
or
pop
in
shlb
lret
jo
mov
test
push
mov
cltd
lds
jno
nop
jo
and
push
jns
jo
pop
divb
inc
out
pop
prefetch
push
cmp
and
push
dec
mov
daa
fs
pop
pop
aas
rol
cmpsb
mov
adc
jl
fs
insb
push
pop
jo
and
cmpsb
mov
xchg
shrb
aad
in
loope
add
test
cwtl
jl
and
or
fs
jo
adc
add
or
xor
mov
push
jecxz
push
mov
xor
nop
cmp
dec
adc
xor
mov
adc
sbb
in
xor
jo
iret
jle
sbb
arpl
mov
jg
mov
push
and
inc
push
jo
icebp
and
aaa
lret
lods
sub
and
inc
jo
or
dec
sbb
out
mov
push
mov
jb
inc
nop
xor
and
xchg
pop
aam
ret
or
test
mov
lds
jecxz
mov
cwtl
movsl
jmp
in
add
fidivs
test
mov
hlt
push
rorl
sub
cmp
in
scas
add
and
jo
mov
and
jo
mov
punpckhwd
nop
movsl
leave
pop
je
sbb
out
sub
ljmp
cmpsb
mov
jo
sub
lea
sub
packsswb
nopl
sbb
sub
xlat
or
and
jae
jo
pop
je
int3
jbe
jo
stos
cmp
clc
lods
jo
cltd
push
loop
shrl
insl
xchg
mov
mov
add
fsubrs
sub
dec
testb
jo
jnp
insb
repz
nop
jo
pushf
scas
out
outsl
fbld
leave
mov
inc
xor
mov
fwait
jo
adc
fdiv
mov
adcb
cwtl
shl
dec
dec
mov
adc
addl
jo
xchg
pop
mov
jo
out
dec
cmp
mov
jnp
lret
outsl
push
nop
xor
mov
and
andl
add
mov
repnz
orl
mov
mov
loopne
mov
push
xchg
jno
enter
adc
jo
repnz
jmp
mov
xlat
jo
mov
pop
icebp
cmpsl
out
stos
int
cli
ret
loope
pop
std
mov
sbb
cmpsb
cwtl
je
inc
xchg
or
push
int3
call
jo
jbe
stos
mov
and
hlt
sbb
xchg
dec
pop
jle
aaa
pop
xchg
sar
pop
das
lret
jo
add
movsb
or
sarl
add
fs
cmpb
movsb
mov
dec
jo
repz
push
lods
into
ljmp
mov
mov
cmpb
jge
rorl
add
cwtl
rorb
xchg
pusha
ss
xor
add
popa
jo
fnstsw
adc
ss
pop
cli
out
inc
je
scas
cmp
cmovs
outsb
adc
psrld
loop
dec
test
or
arpl
jo
push
add
push
pop
addr16
dec
cmp
sbb
jo
ret
call
mov
sar
jo
insb
into
push
mov
jnp
push
imul
fwait
sub
sub
mov
sbb
mov
jge
pop
xchg
int3
loope
lock
mov
leave
das
sbb
out
jns
add
mov
cwtl
jmp
mov
inc
xor
stos
cmp
das
mov
cld
push
sub
sbb
scas
jmp
mov
push
jns
jp
jbe
stos
jo
or
scas
int
sub
sub
push
pop
outsl
and
jne
out
popa
push
shll
rdtsc
sbbb
push
cwtl
pop
dec
aaa
jo
mov
jno
xchg
push
testb
js
mov
cmp
jo
rorl
add
jo
sub
adc
jo
or
std
in
pop
int
push
mov
jns
pop
aad
sbb
push
and
je
jmp
sub
add
sub
push
push
nop
dec
dec
lock
jecxz
call
xchg
sbb
mov
xor
imulb
jo
jae
mov
jle
inc
mov
das
cmp
mov
xchg
and
adc
js
fstps
mov
cs
aad
jno
dec
jo
std
test
out
jo
adc
sbb
xchg
xor
jle
mov
loopne
sbb
xor
fidivs
repnz
aad
fbld
ljmp
ret
cmpsb
add
jb
sub
mov
and
adc
nop
cli
cmpsl
cltd
out
fnsave
rorl
inc
sub
and
push
adc
push
cmc
xchg
jbe
jo
mov
shll
int3
scas
movsb
mov
and
jo
inc
daa
mov
leave
cltd
xor
fnstenv
ss
rorb
std
adcb
iret
stos
inc
int
cmp
js
xchg
mov
sarl
jo
lock
xlat
jle
repnz
jo
ja
fisubrs
xchg
scas
lahf
sbb
mov
pop
adc
push
jo
push
shl
dec
xchg
lods
jo
insl
cmpsb
fdivrs
fld
outsb
push
scas
jo
pop
xchg
stc
push
pop
inc
jo
jbe
out
seto
jb
jno
lds
mov
sbb
shlb
pshufw
aas
sahf
mov
pop
das
aad
into
cmp
jo
add
mov
ret
jo
and
mov
adc
or
icebp
mov
fs
mov
jo
lods
mov
pop
jo
hlt
mov
aad
mov
mov
and
or
popa
push
sub
jbe
adc
je
jo
xor
lea
loopne
push
push
cltd
mov
je
leave
negl
or
or
js
inc
sti
int
jo
xchg
mov
loope
rorb
mov
and
cmp
loope
loope
jo
stc
subw
jo
mov
test
jo
mov
mov
jns
mov
int3
cld
mov
add
out
xchg
jo
enter
lods
cmpsb
mov
inc
xchg
pusha
jge
in
icebp
test
ficompl
das
mov
fdivrl
lcall
nop
aaa
add
jo
jmp
inc
add
xchg
in
addr16
jmp
test
movsl
loop
pop
jo
jbe
mov
mov
sbb
lcall
stos
jo
loop
sub
sbb
adc
jb
xchg
inc
outsb
into
stos
repnz
push
jo
cmp
sbb
jo
arpl
test
cltd
cmp
nop
mov
pop
test
adc
repnz
lock
test
fbstp
aam
mov
and
jo
dec
aas
mov
mov
dec
adc
fnsave
in
add
and
push
jmp
fmuls
jnp
data16
jp
popf
jmp
wbinvd
sub
or
cwtl
jo
cmp
ret
push
test
movsl
sbb
fcomps
add
addl
xchg
fwait
gs
mov
jo
xor
das
push
out
insb
fbstp
xchg
push
jne
jge
mov
mov
cmp
adcl
jo
xchg
dec
fcmovbe
movsb
and
jo
rcr
jp
lcall
lret
xchg
pop
mov
js
pusha
mov
jo
repz
fdiv
clc
gs
stc
incl
data16
sub
test
xchg
into
jo
xor
imul
pop
in
mov
lret
xchg
cs
xchg
stos
mov
xor
cmp
dec
mov
push
lock
mov
sbb
pop
je,pn
packuswb
xchg
mov
aas
call
adc
push
pop
jo
lds
xchg
inc
sub
push
shlb
pop
sbb
mov
mov
jo
pusha
stos
mov
jo
mov
movsl
sub
inc
jo
dec
loopne
add
pusha
jo
imul
cltd
push
adc
jo
sub
out
add
add
push
push
nop
jmp
lea
bound
mov
jo
or
inc
int3
or
and
loope
popa
jecxz
dec
dec
rorl
dec
sbb
mov
xchg
jo
mov
bound
arpl
dec
jmp
xor
mov
fnsave
mov
jnp
xor
jg
movb
pushl
inc
loopne
xchg
jbe
jo
data16
or
addr16
or
shlb
jle
push
lea
mov
imul
sub
fs
sbb
and
pop
sbb
sahf
aam
sbbb
or
test
mov
jge
mov
mov
into
jo
loopne
pop
xor
push
mov
push
negl
jo
sbb
jno
loop
fisubrs
loopne
pusha
add
adc
dec
ficompl
test
push
stos
cs
cmp
out
inc
xor
sub
je
or
test
pop
cmp
imul
xchg
or
sub
push
or
outsl
mov
in
cmp
adc
iret
cmpsl
or
imul
icebp
xchg
mov
ds
ss
cli
xchg
mov
jo
adc
jae
das
jo
std
imul
push
pop
scas
jo
loopne
test
dec
insb
shlb
lea
ret
push
mov
lods
pcmpgtd
adc
push
int3
loope
push
shlb
xor
jns
test
dec
xchg
int
xor
cld
sub
pop
mov
push
jo
push
mov
mov
hlt
add
pop
jg
and
shlb
loop
mov
lods
sti
cmp
int3
iret
mov
jnp
lods
add
xchg
fldl
out
popl
cmp
ret
notl
xchg
ja
js
jmp
mov
js
bound
fidivl
mov
pushf
fs
sti
push
jo
and
ss
mov
mov
loop
jo
mov
dec
xlat
push
test
push
paddd
push
dec
jge
pop
jnp
xchg
sbb
inc
jo
rcrl
sysret
fs
jo
mov
xor
cs
sub
xor
inc
push
mov
outsl
aas
dec
inc
movsb
inc
and
adc
clc
pop
xor
jle
jo
or
and
jo
ret
inc
sub
ss
test
mov
scas
in
add
adc
mov
test
xchg
inc
jbe
push
mov
insb
push
movsl
mov
mov
jo
mov
lcall
loope
sbb
notb
dec
mov
call
cmp
push
jns
lret
fcompl
or
clc
popa
lahf
mov
inc
mov
std
lret
call
jo
lock
mov
jle
jg
in
outsb
jo
fadd
push
fsubs
sub
les
jnp
jo
sub
lea
pmulhw
scas
stos
jle
ljmp
adc
loope
movntq
sbb
pushw
fnsave
jmp
add
stc
bound
add
mov
js
and
inc
add
js
mov
pop
fsubrs
pop
aam
das
mov
jae
push
and
pop
add
push
fs
cmp
add
repnz
arpl
cwtl
shrb
mov
dec
or
fs
mov
lret
out
push
shrb
xor
clc
and
getsec
int
jmp
push
mov
dec
leave
jge
jno
outsl
shlb
pop
lods
movsb
scas
sbb
lock
mov
push
rcrb
loopne
fidivs
push
test
es
and
jmp
pushf
aas
add
jns
lock
push
cwtl
mov
xchg
lahf
test
mov
push
push
sbb
sbb
cmp
shll
arpl
and
je
mov
jo
cmp
jae
les
jmp
inc
pop
and
outsb
nop
adc
jo
adc
jae
push
inc
sub
jo
test
jmp
push
and
pushf
dec
dec
push
shlb
and
sbb
cld
mov
pop
and
inc
add
push
ret
leave
mov
js
aas
aam
in
hlt
ret
add
jo
shrb
subb
jae
xchg
in
jo
pop
ret
in
lret
test
fidivl
icebp
cmc
xchg
fwait
or
in
sti
push
mov
sub
push
xor
jp
dec
in
shll
push
push
fmul
js
loope
hlt
cmp
es
repz
ret
in
nop
adc
mov
test
sbb
out
lea
cmp
xchg
jecxz
or
movsl
or
test
dec
hlt
aam
jo
out
mov
int
jo
repnz
xchg
push
aam
dec
jecxz
into
hlt
mov
push
shl
sub
adc
sub
push
xor
inc
lea
adc
mov
in
hlt
mov
aad
movsl
cmp
stc
xchg
je
push
push
cmc
mov
or
cmpsl
mov
loope
imul
xchg
xchg
movsl
loopne
dec
rcrl
enter
push
test
movsl
nop
hlt
in
pop
inc
jne
xor
imul
jo
or
jae
pop
add
imul
jo
iret
push
rorl
in
jo
test
or
push
cmpsl
jo
pop
mov
jnp
nop
cli
jo
push
sahf
mov
mov
ja
aad
jne
mov
outsl
lds
jo
shlb
adc
addb
and
cs
push
jo
movsb
xchg
jo
sahf
inc
mov
pop
ret
shl
cmp
arpl
fists
pop
cmp
daa
dec
stc
jo
sbb
fdivrl
dec
dec
push
push
push
pop
lds
mov
jl
add
or
js
shll
inc
dec
lds
jmp
stos
mov
bound
jo
dec
aad
push
stos
sub
cmp
jne
sub
xor
js
roll
sub
mov
mov
mov
fld
cmp
adcb
sub
dec
stos
call
scas
add
jo
add
push
sbb
decb
cld
lods
push
push
xor
cmpsb
mov
addl
insb
fsincos
jmp
ret
insb
inc
or
mov
or
adcb
lods
mov
test
jmp
and
adc
push
add
xchg
sub
mov
jne
and
inc
adc
jb
push
in
pop
inc
mov
push
bound
aas
push
roll
push
jae
inc
dec
xchg
rcl
xor
ret
pop
stos
adc
aad
jne
mov
jo
mov
jg
push
mov
adc
xor
cmp
sbb
mov
aad
out
or
cli
mov
rol
gs
mov
xchg
gs
jo
push
cmc
sarb
lods
mov
lock
push
pop
aas
xchg
xor
adc
test
xor
mov
adc
mov
popa
jmp
sbb
repnz
icebp
nop
inc
arpl
inc
xchg
jmp
movb
add
in
gs
int
xlat
fldl
dec
sub
sbb
jo
les
mov
xor
mov
rcl
je
ljmp
lds
push
xor
lock
int
mov
js
sub
in
push
mov
xlat
mov
into
loope
out
dec
adc
mov
xor
test
out
jo
adc
cli
sbb
cmp
add
arpl
ja
mov
push
pop
push
shll
sti
add
jo
sahf
lds
jo
jg
and
leave
aas
inc
jo
jbe
push
lret
daa
jno
jo
xchg
rcrl
ds
sub
sbb
repz
retw
out
insb
sub
xlat
inc
cwtl
jo
sub
push
add
xor
leave
and
mov
outsb
cmp
imul
inc
pop
sbb
repnz
pop
aam
test
jo
imul
inc
dec
shlb
add
mov
les
sub
fadd
mov
repnz
shrl
addb
fcmovnb
sbb
in
push
movsb
int3
push
pop
lods
jbe
nop
bound
jp
shll
mov
inc
inc
push
repz
out
lods
je
pop
mov
pusha
jo
xchg
and
inc
scas
aas
dec
loop
fbstp
jl
out
lahf
in
inc
jmp
push
sbb
adc
ret
cmc
and
jo
in
xchg
sahf
dec
add
cmp
push
xor
loope
iret
push
ret
into
jo
jne
test
jo
xchg
inc
and
mov
shl
mov
jae
pop
jp
les
sbb
push
vmsave
outsb
and
jp
xor
sub
push
xchg
xchg
aas
cmp
lret
cli
dec
rorl
outsl
push
lds
mov
clc
jo
cmp
xchg
xchg
pop
out
adc
aam
cmp
cmp
mov
fdivs
mov
rcll
jo
dec
xor
xor
dec
cmp
lds
pop
nop
xor
sbb
sarb
popa
divl
cmp
aam
in
push
data16
roll
xor
ret
inc
js
xor
subb
cmp
repnz
xchg
jo
iret
std
ds
cmp
sub
pop
shlb
ret
dec
out
xchg
lret
loopne
and
ss
jo
lds
pop
nop
bound
fistpl
jae
rcr
imul
ja
cmpsl
sbb
scas
jge
adc
dec
mov
xchg
subl
ret
push
lret
leave
add
pop
or
pop
mov
icebp
mov
lret
pop
call
sbb
cli
jo
ljmp
mov
push
mov
lods
mov
test
dec
push
movsl
cld
lock
jg
fstl
mov
iret
push
aad
pop
mov
mov
inc
add
leave
sahf
xchg
ret
jnp
cli
mov
mov
popf
fstpl
adc
fs
push
int3
vmovhps
lock
pop
push
push
daa
jns
sbb
repnz
int
dec
mov
jl
bound
test
repnz
sti
and
or
and
sub
mov
and
xchg
fwait
jmp
mov
stos
mov
push
or
mov
lret
jl
sbb
sub
adc
sti
test
jge
gs
scas
xchg
nop
jae
push
je
jne
jo
cmpsl
in
loop
lds
or
outsb
jae
imul
in
ja
cs
xor
mov
push
mov
daa
pop
aam
out
lret
adc
sbb
pop
add
push
into
cmp
and
aas
cltd
push
cmp
sub
pop
loope
cwtl
outsl
aam
jb
dec
xchg
test
jecxz
pop
subb
push
cmc
lock
add
pop
jp
push
icebp
dec
hlt
push
cmp
add
mov
loope
loop
daa
rcr
sti
mov
adc
xor
push
pop
xor
pop
inc
cmp
shrb
aaa
stc
xor
push
ss
jne
imul
push
imul
dec
push
jmp
insl
and
popa
inc
push
add
imul
jo
push
sbb
in
add
cld
jb
jo
xlat
aas
adc
fsubrl
lea
aam
in
imul
fcmovne
jo
stc
loopne
pop
arpl
xor
push
jl
inc
dec
lret
mov
movsl
push
test
repz
push
sub
sti
cld
out
out
push
adc
adc
push
lahf
mov
adc
mov
pop
jmp
in
leave
and
mov
outsb
sub
push
in
inc
dec
js
or
mov
pop
jg
add
dec
insb
fdivs
bound
add
push
mov
push
lods
or
loope
dec
stc
jo
scas
movsb
lods
es
sbb
jo
and
or
in
push
xchg
mov
call
push
das
je
ljmp
fstps
hlt
mov
cmp
call
cwtl
cmpsb
scas
xchg
fnsave
daa
mov
xor
add
int3
into
fmull
test
jo
xor
es
cs
cltd
nop
adcl
dec
insl
mov
dec
xor
cmpsb
sub
fwait
outsl
out
cmp
jmp
push
ljmp
and
data16
scas
jne
mov
insb
mov
data16
xor
mov
xor
mov
int
mov
cmp
sbb
jle
ret
or
mov
jae
and
cmpsb
sbb
jno
push
mov
add
xchg
jo
xchg
shr
adc
hlt
jle
repnz
xchg
ljmp
or
pop
leave
xorb
and
ret
pop
jo
das
incb
out
inc
push
mov
std
mov
cmp
pop
cmp
andnps
das
push
ja,pt
lea
push
rorb
push
cs
sub
mov
stc
sub
lcall
fnstcw
int
out
imul
dec
add
jne
and
cwtl
jne
jle
or
jb
push
cltd
cmp
jle
adc
movlps
out
jbe
dec
mov
bound
lds
notl
lock
push
push
or
dec
adc
lock
dec
and
dec
repz
mov
call
lret
cmpsb
lea
xchg
jmp
mov
push
jmp
jo
pop
mov
nop
imul
lods
fcomps
faddl
ret
and
hlt
adc
lds
jp
sbb
dec
xor
xchg
jo
orb
jo
sbb
pop
push
inc
imul
or
mov
mov
sbbb
clc
sub
and
stos
nop
cwtl
jmp
jno
outsb
movsb
jo
mov
push
mov
ljmp
pop
out
hlt
add
in
into
loop
arpl
dec
inc
or
push
dec
mov
iret
pop
fistpll
outsl
jb
aam
fs
push
sub
push
aas
xchg
outsl
insl
and
push
xor
out
jp,pt
mov
lds
mov
fmull
and
js
pop
jmp
out
movsb
dec
shl
mov
and
xlat
push
push
cld
xor
std
inc
mov
lahf
jmp
xchg
and
xor
push
clc
mov
sbb
inc
or
das
and
mov
nop
pop
std
out
push
pushf
mov
imul
scas
addb
nop
pop
mov
je
mov
out
inc
jo
add
decl
lock
lret
insl
jae
pushf
or
rcl
fstpt
jo
lods
roll
jo
pop
sbb
mov
test
mov
les
jo
xor
repnz
jno
dec
or
js
or
jo
cmp
insb
xchg
jo
sti
adcb
mov
je
pusha
sbbb
and
inc
adc
popf
jg
fnsave
adc
xchg
cs
shr
push
pop
sbb
and
lahf
xchg
xchg
dec
movsl
jo
lods
fldt
push
mov
add
arpl
cld
dec
and
jmp
xchg
xor
lock
loope
outsb
jae
push
std
adc
jno
push
out
pop
cwtl
push
fwait
ljmp
shlb
sub
and
xlat
sbb
pop
and
stos
fcompl
push
sub
cmpsb
mov
pop
jb
xchg
sub
mov
inc
lock
lcall
cmpsb
or
xchg
inc
shrl
outsb
jmp
sub
aas
pop
xchg
mov
adc
xchg
loopne
mov
js
and
filds
lock
sbb
mov
mov
dec
mov
mov
fldl
cmp
ljmp
insl
inc
sub
xor
mulb
insl
and
pusha
xor
mov
xor
inc
or
std
jnp
mov
fwait
dec
mov
call
xor
pushl
jne
dec
xchg
js
jae
jecxz
adc
repz
insl
push
xchg
sarb
and
pop
jle
jnp
leave
pop
cmp
dec
push
stos
mov
push
aas
push
pop
jo
pop
mov
cs
das
dec
fnclex
call
and
sbb
in
mov
jo
push
sbb
lret
mov
pop
jg
imul
movups
les
insb
in
cmc
push
mov
mov
mov
lahf
scas
cld
popf
mov
jns
mov
shll
ds
inc
jo
mov
push
xchg
lcall
push
pop
mull
cli
in
mov
fldt
mov
dec
popa
lods
lea
out
jo
leave
daa
push
addl
in
les
add
bound
fistps
inc
pop
fdiv
jmp
movsl
sub
dec
jae
jb
jo
pop
rcll
cmp
jo
lods
dec
out
je
fidivl
mov
js
hlt
cmp
shr
aaa
dec
dec
add
jo
push
mov
in
lcall
jmp
jo
dec
xchg
sub
lea
jo
cld
add
mov
aas
jae
stos
hlt
mov
xor
sub
push
cmp
addl
adc
rcr
outsb
loope
push
ljmp
loopne
adc
and
in
jae
dec
test
dec
cli
xor
jbe
outsb
in
lret
ljmp
sbb
and
or
dec
scas
movsl
das
std
outsl
das
outsl
mov
or
in
outsb
sbb
jle
sub
mov
data16
popa
dec
je
dec
jne
ds
mov
dec
add
sub
das
adc
mov
hlt
push
or
outsl
push
pusha
shrb
in
jg
cmpsl
adc
jo
sub
inc
orb
inc
jle
fcomi
dec
jo
sub
int3
jo
adc
xor
add
or
pushw
cmpb
jo
sbb
loope
add
or
test
rcr
aaa
stos
pmuludq
jo
sub
fbstp
xor
out
mov
ret
jle
pop
xorb
or
repnz
fdivrp
push
mov
push
test
mov
mov
lret
fs
push
mov
and
imul
pusha
add
xor
sarl
sub
jl
and
test
xchg
mov
mov
xor
out
sarl
mov
mov
xchg
ja
cmp
push
lods
clc
subb
in
dec
dec
iret
jo
jl
cmpb
popf
jp
pop
adc
test
xor
xchg
scas
xchg
xor
adc
jo
vcvtps2dq
insl
xor
push
sub
xchg
xor
jno
xchg
push
jge
sahf
jo
sub
jle
xchg
adc
and
sarb
popa
add
cmp
into
lods
stc
out
mov
mov
repz
addr16
int
add
arpl
jecxz
sahf
and
ss
xchg
adcl
repz
psrlq
xchg
jae
test
xchg
push
adc
jo
sbb
jp
or
icebp
pop
and
hlt
jmp
push
cld
xchg
imul
loop
dec
jae
js
mov
push
shlb
jmp
ja
jo
leave
and
outsl
popa
nop
inc
xchg
test
jns
insl
push
jo
cmc
in
ss
xchg
push
je
ljmp
imul
ja
out
mov
pop
jbe
push
add
and
dec
imul
lds
dec
fisubs
in
or
adc
aaa
ror
fprem1
jnp
mov
mov
jge
xor
dec
je
push
std
in
sbb
imul
push
jae
or
into
in
into
mov
push
mov
mov
das
mov
loopne
addb
jo
mov
jno
jo
sbb
mov
jo
and
cmp
jo
sbbb
pushf
sub
pop
jo
inc
int3
lock
mov
outsb
dec
int3
mov
push
mov
adc
push
das
cltd
loopne
mov
mov
and
mov
in
js
jl
imul
or
sub
pop
adc
ret
mov
jae
mov
jmp
imul
jp
pop
or
lods
flds
call
out
out
lods
aad
lcall
jp
sub
test
inc
jg
mov
js
pop
jo
xchg
imul
jnp
add
jo
ljmp
sub
mov
sub
mov
pop
mov
stos
push
pop
cmp
std
pop
jo
mov
repz
inc
fcmovnb
jo
pop
sti
negb
gs
jo
movsl
pop
hlt
inc
in
cmp
push
fidivrl
mov
adc
sub
inc
roll
iret
repnz
jo
dec
cmc
sub
and
sbb
cmp
int
jle
push
movsb
xchg
jo
adc
das
dec
jp
jo
ficompl
out
push
lods
pushl
cmp
and
test
inc
mov
div
out
xor
or
add
jae
push
dec
scas
pop
mov
jo
les
push
push
mov
add
pop
add
fisttpll
sbb
xchg
cmc
pop
out
jmp
or
addl
cld
notb
mov
cwtl
add
mov
stc
dec
imul
pushl
push
pop
test
mov
in
je
lea
sub
jmp
jo
adc
bound
push
mov
divb
cmp
int
cmp
dec
mov
in
adc
outsb
add
dec
lea
or
icebp
mul
shlb
or
nop
pop
dec
jo
xlat
inc
in
xchg
int3
mov
push
adc
fwait
or
xchg
sub
xor
sbb
inc
bound
subb
in
iret
dec
jo
pusha
ljmp
mov
aad
leave
push
sti
stos
fs
rcrb
or
fcom
and
sub
mov
push
clc
call
lret
xor
mov
inc
push
nop
int3
push
cmp
lea
cwtl
push
das
inc
shll
cmpsb
or
scas
in
dec
enter
or
push
mov
arpl
ss
cltd
cmpsb
fcomip
dec
in
jmp
xchg
cmp
or
push
imulb
int
loope
jmp
pop
out
sub
dec
in
jne
jmp
out
mov
das
push
scas
push
sub
fdiv
fs
ret
dec
jnp
out
pop
jmp
imul
out
dec
subb
add
push
xchg
lock
push
cmc
stc
cmpsl
lods
pop
aad
sub
jg
clc
out
sub
push
fs
mov
call
push
push
mov
pop
jo
mov
idivb
nop
xor
shlb
mov
mov
ljmp
mov
jbe
arpl
add
mov
jae
dec
jge
call
mov
stos
sub
adc
pop
stos
imul
jge
dec
xchg
outsl
arpl
pop
outsb
xor
int3
push
mov
shrb
inc
mov
mov
mov
push
mov
push
sahf
jl
lock
shlb
cmp
fstl
das
push
xor
idiv
sub
cmp
adc
sahf
push
iret
jbe
pop
insb
cmpsb
cmp
data16
pop
jmp
rorl
pop
daa
pop
jecxz
movsb
jae
int
js
lock
sbb
push
pop
mov
sbb
sti
js
pushf
repz
xor
aad
dec
add
and
insl
push
push
ficoml
jge
andb
and
jae
pop
cli
shlb
jmp
jle
jle
mov
dec
cmp
sbb
or
call
stos
out
bound
sbb
shl
movsl
dec
inc
sub
dec
sub
mov
sub
pop
pushf
sbb
das
cmpsb
es
and
adc
aad
sahf
push
cltd
shr
cmp
addl
and
aad
lret
orb
cmp
xor
push
pop
xor
clc
in
sub
imulb
movsl
sti
rol
scas
fldt
nop
test
push
std
int
inc
iret
fcomip
pop
ss
inc
iret
push
pusha
jo
fucomip
movl
xchg
stos
jno
xor
daa
addr16
outsb
push
out
dec
jae
lea
test
adc
xchg
push
movsb
imul
outsb
daa
xchg
xchg
fists
add
pop
pop
scas
rcll
js
inc
fistpll
out
mov
in
add
shrb
jmp
sub
fldcw
push
nop
jle
and
sub
fdivrs
push
jp
cmp
jae
or
pop
sub
xor
cmp
and
addr16
jle
fbld
mov
arpl
lods
mov
fnstcw
mov
std
xchg
xor
sub
daa
push
or
dec
dec
mov
lods
cmp
push
mov
lock
mov
sahf
push
out
testl
std
test
sub
and
push
shr
mov
push
push
cld
push
setle
fisttpl
pop
xchg
pop
jae
jne
inc
dec
xchg
out
ljmp
inc
cwtl
jge
and
mov
or
inc
mov
lock
push
mov
xorb
out
dec
roll
iret
mov
movsl
mov
test
jae
outsl
inc
shlb
sub
in
outsb
arpl
cmp
mov
mov
lods
push
push
lds
or
dec
das
dec
jl
out
scas
and
in
push
insb
dec
jnp
pushf
push
add
in
insl
xor
jmp
out
jle
in
ror
jg
test
xor
andl
xor
es
add
arpl
dec
xor
push
mov
inc
sbb
gs
ret
aam
icebp
and
mov
fdivrs
addr16
jnp
adc
cmpsl
pop
xchg
fdivrp
pop
outsl
pop
int
std
mov
fs
or
sarl
rcrb
in
dec
jno
mov
repnz
xor
xchg
je
ret
fmull
sub
mov
outsl
addr16
jb
dec
ljmp
jae
sub
cmp
addr16
and
push
jae
adc
shll
into
lods
enter
and
fnstcw
mov
adcb
push
sbb
pslld
pop
sahf
das
bound
push
pop
push
inc
cmpsb
shl
test
imul
pop
mov
push
fmulp
push
in
test
in
pop
xor
jmp
inc
dec
outsb
stos
push
loopne
imul
xor
shr
sub
outsb
cld
in
jle
stos
in
and
sbb
mov
lock
in
cmpsl
and
dec
hlt
dec
icebp
push
in
mov
outsl
loope
hlt
dec
jp
sbb
sarb
and
insl
dec
and
pusha
mov
jg
ds
push
xlat
sar
in
and
jle
sub
cld
imul
test
add
jg
xor
iret
jl
xchg
loope
xlat
jg
ljmp
inc
lahf
ret
lock
lock
testb
jle
daa
andb
je
cld
sti
hlt
andb
outsl
jbe
push
push
inc
cmpsl
cmp
loopne
ljmp
mov
sub
push
outsl
jmp
cmc
add
shlb
push
jbe
jle
out
es
pop
outsb
jle
daa
cld
addr16
addr16
test
addr16
mov
jl
out
jno
clc
inc
and
jbe
testl
data16
add
in
addr16
dec
testb
push
imul
jbe
gs
dec
jo
outsb
sub
outsb
ja
mov
jp
insb
add
loop
jbe
repnz
jae
loop
jae
mov
insl
push
add
pop
jo
sarb
test
outsl
shl
jae
lods
cmp
push
hlt
push
ljmp
mov
jmp
scas
adc
out
jmp
clc
fwait
aam
cmp
sbb
psubusw
mov
imul
or
fs
fcomip
movnti
jne
push
and
inc
in
xchg
std
and
jno
pop
jecxz
push
dec
inc
push
sub
mov
mov
adc
and
xlat
cmpsb
jae
inc
negl
cltd
ja
mov
xchg
push
mov
in
jae
or
dec
shrl
inc
aam
push
jno,pt
out
icebp
inc
xchg
js
movswl
mov
push
mov
je
inc
push
shrb
out
push
ss
test
testl
xchg
xchg
mov
pop
mov
mov
jne
mulb
mov
jle
push
insl
stos
mov
xor
xchg
ljmp
inc
outsl
xchg
push
lock
push
hlt
xchg
jns
sbb
inc
outsl
scas
sub
bound
lock
dec
daa
fs
movb
jmp
cmpsb
sub
sub
stos
fwait
out
jp
fists
je
jg
arpl
movsb
jg
cmpsb
push
dec
push
mov
adc
shl
shrb
pop
push
stos
pop
loopne
into
imul
scas
shr
jae
jnp
sub
push
sbb
pop
cmp
push
loop
push
outsb
lock
das
and
std
popa
xchg
out
inc
imul
lret
mov
mov
imul
fldt
sbb
sbb
ljmp
inc
dec
ja
data16
xlat
mov
sahf
sbb
xlat
cmp
inc
pushf
inc
adc
aas
jg
xchg
shlb
add
xorb
mov
rorb
cmp
sub
fdiv
adc
lods
cmp
inc
pusha
icebp
pop
sbb
repnz
mov
dec
mov
push
rcrb
jae
pop
clc
inc
punpckhdq
lds
mov
inc
push
dec
and
pusha
shrb
mov
insl
xchg
enter
test
ja
ss
xchg
mov
gs
in
jle
push
adc
push
outsb
add
jae
mov
jnp
jge
es
xchg
pop
rorb
and
shr
repnz
out
jnp
gs
call
fsts
xor
aam
repnz
es
push
dec
lock
outsb
push
dec
push
sub
jb
jb
in
xor
mov
fldcw
jae
into
mov
ljmp
push
xor
scas
mov
jae
mov
rcl
arpl
insl
mov
ljmp
mov
insl
mov
js
mov
in
add
push
orb
push
lcall
adc
push
js
jl
aaa
push
loop
repnz
push
jbe
rolb
cs
mov
push
jmp
shrb
arpl
or
idivl
js
out
xor
stos
mov
inc
jle
mov
pop
inc
mov
test
jbe
push
xorb
or
imul
or
fidivs
cld
repz
add
movsl
data16
dec
fstpt
loopne
jbe
scas
insl
js
imul
push
or
jg
mov
fs
lock
mov
jb
std
push
xor
enter
outsb
lods
lret
loope
push
inc
cld
push
xchg
loop
fucomip
and
dec
cs
loope
xorb
cmovs
pop
ficoms
lcall
dec
mov
jle
cli
sub
arpl
ja
add
stos
push
jmp
add
jmp
insl
outsb
jae
scas
sub
jb
fistpll
dec
addr16
lcall
cmpsb
scas
out
sub
push
mov
mov
pop
arpl
lret
jmp
fadds
jae
or
mov
ja
lcall
iret
cmp
inc
insb
adc
mov
mov
outsl
pusha
sub
jmp
enter
and
jecxz
stos
lods
stc
ljmp
ret
jns
adc
jbe
pop
fbld
movsl
popa
rolb
jne
sarb
sub
push
add
sbb
iret
lock
ffreep
lret
push
cmp
or
jmp
adc
imul
cltd
pusha
push
adc
test
js
inc
xchg
lret
mov
sbb
sbb
and
rorl
shlb
xchg
jg
incl
push
ljmp
fadds
jle
lahf
leave
sub
mov
divb
jo
js
shrb
jbe
mov
inc
in
mov
dec
inc
push
mov
rorb
pop
cmpsl
jae
mov
fldt
arpl
nop
inc
iret
sti
cmp
add
mov
mov
dec
outsb
je
sub
call
push
xor
lds
imul
cmp
jae
movsb
push
nop
dec
aaa
pusha
aam
push
clc
mov
bound
outsl
imul
jo
dec
or
icebp
cmp
push
push
push
and
cmc
adc
imul
push
sar
mov
scas
push
adc
insb
inc
mov
cld
in
sub
jg
out
pop
cmp
jae
lods
mov
scas
lret
popf
pop
jmp
and
jle
into
psrlw
mov
xchg
xchg
data16
xor
push
and
push
pop
repz
xor
in
lcall
movsl
jae
aaa
dec
and
lahf
or
sbb
adc
pusha
mov
test
mov
repnz
pop
frstor
arpl
outsb
cmp
shll
mov
adc
das
mov
cmp
xchg
sbb
adc
dec
hlt
hlt
mov
cmpsb
xchg
dec
sbb
add
cmp
mov
push
lret
test
jo
add
mov
aam
icebp
add
cmp
shr
rclb
mov
sti
jno
int3
popf
ljmp
fsubrs
push
push
leave
lcall
outsl
js
xor
xchg
test
dec
in
lcall
lock
mov
pushf
out
mov
loop
imul
xor
lock
pop
scas
cmp
push
dec
call
icebp
aam
idiv
fs
xchg
lods
jmp
mov
ror
fs
jmp
ret
sub
es
sub
jp
out
push
jmp
jb
out
std
sbb
gs
test
iret
dec
rorl
add
dec
fstps
or
call
repz
outsl
in
data16
sbb
lea
jbe
insl
push
pop
mov
jb
std
add
cwtl
xchg
je
inc
push
ficompl
repnz
hlt
sti
adc
test
mov
jns
adc
sub
lods
test
cld
pusha
rcrb
test
aam
outsb
and
call
mov
pop
sub
xor
jnp
jae
xchg
cld
push
dec
icebp
rorl
int3
imul
xor
pop
sarb
or
aaa
xor
cld
push
or
idivl
into
fs
shrl
and
fimuls
es
addr16
dec
and
bound
xor
jp
push
js
adc
mov
jmp
popa
nopl
push
shlb
popa
loope
cmc
add
inc
fs
arpl
xor
jnp
push
xchg
data16
add
push
das
inc
in
jo
fistpll
mov
jmp
movsb
in
fldpi
push
jno
ret
adc
js
pop
add
arpl
fistpll
cmp
xchg
sub
imul
mov
or
cmc
test
test
ljmp
jg
outsl
dec
add
pop
mov
sarl
jae
dec
icebp
jmp
ret
repz
ljmp
jecxz
inc
cwtl
dec
iret
daa
mov
fildl
jne
push
xchg
lods
add
out
test
cmpsb
mov
in
mov
lret
cmp
cmp
and
fdivp
aad
sti
fstpl
dec
fcomps
add
inc
mov
das
sbb
mov
mov
lea
leave
stc
aaa
jmp
data16
outsl
push
xchg
repz
push
sub
lods
in
push
sub
out
aad
push
aad
int3
std
insl
les
pandn
cmc
and
xchg
xchg
jae
inc
mov
pop
in
in
test
fs
and
fbstp
inc
fwait
cmp
fidivrs
scas
mov
add
addr16
xchg
pop
sub
imul
int
inc
lahf
test
xchg
pop
push
dec
xor
jl
arpl
or
gs
out
loopne
mov
sahf
mov
hlt
fnsave
pop
orb
adc
pop
test
shll
test
loopne,pn
clc
cld
mov
mov
mov
sub
xor
xchg
cmpsb
cmpsb
jno
clc
ljmp
sbb
iret
xchg
aam
leave
push
xor
daa
int3
mov
in
inc
add
repnz
jno
pop
fs
bsf
shll
adc
clc
jbe
xor
dec
dec
mov
out
stc
into
out
mov
or
lret
cmc
dec
ret
xchg
fadds
pusha
outsl
fmull
sub
inc
fs
cwtl
mov
lret
mov
push
stos
outsb
push
jmp
dec
jno
std
sbb
lret
mov
mov
xorb
jnp
pop
add
push
pop
fldt
gs
push
aam
add
sti
push
movsb
popf
dec
and
dec
jb
cmpb
xchg
imul
push
movsb
mov
and
xlat
fisttpll
insb
push
imul
xchg
sub
push
aas
pop
jae
xchg
sbb
jl
repnz
int3
push
loop
mov
out
pop
dec
roll
adc
mov
mov
adc
jbe
imul
jge
xchg
dec
cmp
inc
aaa
enter
cwtl
adc
xchg
aam
sub
cmp
mov
sbb
fldcw
test
aad
or
iret
push
cmp
aaa
dec
mov
call
pop
cmpsb
jle
sbb
jns
roll
mov
cmp
pushf
inc
clc
sub
loop
add
lock
push
aaa
ljmp
mov
lods
imul
adc
mov
add
cmp
mov
push
ficomps
iret
push
xlat
test
sbb
pop
lock
movsl
movsl
mov
std
out
fildl
add
mov
adc
inc
mov
pop
xchg
cmc
js
and
pushw
in
movsl
sub
stc
fildll
in
push
or
lds
mov
mov
pop
rorb
push
and
fbstp
push
movsl
jno
int
inc
sub
push
mov
and
sahf
fstpl
outsl
rorb
addb
push
loopne
lock
fstpt
fdiv
outsl
mov
sbb
dec
sub
test
xor
clc
or
inc
sub
std
jae
nop
icebp
pop
mov
jns
test
icebp
jae
mov
mov
xor
lahf
pop
jnp
outsl
rol
imul
xchg
out
ja
popa
and
outsb
sti
repnz
fisttps
in
jg
xchg
and
int3
jmp
jb
call
loop
iret
jl
out
lret
ljmp
outsb
dec
pop
sub
jmp
das
int
cmp
mov
clc
movsb
rolb
jnp
or
lret
jae
ja
cmp
push
jb
ss
sub
mov
jo
xor
imul
xchg
dec
ljmp
mov
out
cltd
insb
aaa
out
or
clc
mov
je
push
and
cmp
push
pop
xor
jbe
push
pop
popa
mov
push
insl
filds
push
adc
andb
pushf
std
jno
jnp
shl
pop
js
sbbb
iret
adc
fdivs
ss
ja
mov
cs
sbb
stos
lock
push
aas
jno
jge
and
ljmp
sub
arpl
cli
and
mov
bound
or
mov
xor
sti
pop
mov
cmp
cs
ja
pop
mov
xchg
insb
lcall
inc
rcrb
test
push
lahf
fadds
std
mov
scas
cmpsb
jp
stc
xor
sbb
fldenv
cwtl
jg
jo
adc
insb
in
fdivr
mov
in
push
xor
add
push
pop
shlb
xor
push
adc
jl
jmp
fdivs
mov
das
mov
neg
pop
cmp
mov
sbb
les
adc
out
pop
inc
data16
mov
out
mov
fstpt
mov
int3
mov
xlat
cmpsl
int3
loope
mov
mov
imul
cmpsb
scas
push
shl
jnp
jnp
imul
mov
das
imul
arpl
rclb
sbb
insl
jno
jae
add
out
das
lahf
leave
outsl
inc
test
jge
call
lahf
out
loopne
rcrl
sti
cld
pushf
jbe
push
fnstsw
enter
mov
and
movsl
js
movsb
add
cli
cs
add
push
lahf
std
in
and
int3
adc
bound
xchg
insl
ss
mov
push
pop
movsb
rcll
push
xor
orb
jae
xchg
insb
xlat
in
mov
fistpll
dec
push
out
pop
test
cmpsb
and
idiv
insb
test
mov
pop
pop
cmpsb
jmp
ret
fwait
roll
dec
js
mov
or
out
mov
sub
fs
test
outsl
arpl
inc
sub
loop
mov
int3
inc
in
mov
pop
or
pop
fs
aam
iret
mov
push
mov
push
shll
cs
mov
pusha
pop
push
xor
jbe
fnsave
lea
hlt
inc
jne
cld
popa
cmpsl
out
xor
jb
jno
pusha
pop
dec
nop
std
jo
xchg
stc
shlb
mulb
rol
mov
sub
push
xchg
mov
rorb
push
mov
xlat
dec
cmp
adc
push
lods
jno
insb
xchg
and
insb
out
enter
mov
sti
xchg
addr16
lock
xor
mov
idivb
push
cli
das
mov
int3
dec
out
lods
clc
lret
sub
xor
adc
repnz
repnz
mov
push
das
ror
ja
aaa
arpl
mov
rcll
rorb
xchg
icebp
repnz
dec
aaa
fs
scas
dec
xor
sbb
in
ljmp
fnstsw
dec
mov
aas
xor
and
mov
inc
mov
cld
stos
mov
add
add
lods
mov
outsl
mov
cmpsb
pandn
outsl
mov
lock
repnz
cmc
cmpsl
les
xchg
add
jle
out
jmp
and
test
fucomp
fs
or
lds
in
movsb
or
add
loope
cmp
ljmp
inc
outsb
mov
or
fisubs
test
dec
cmpsl
xlat
cld
mov
xor
js
push
rclb
daa
movsb
movsl
data16
or
xor
add
inc
cmp
ja
xchg
neg
push
leave
ljmp
sub
stc
adc
mov
hlt
mov
sbb
cmpsl
pcmpgtw
pusha
cmpb
jecxz
pop
mov
pop
mov
lock
lret
rcl
repz
sub
push
add
cmpsb
xchg
clc
xchg
push
mov
add
lds
xor
lock
call
pusha
push
je
xor
pop
dec
out
je
or
adcl
sub
xor
cmp
fcomp
pop
push
shll
test
insl
in
dec
aas
jno
and
sbb
aam
insl
shll
push
mov
mov
and
pushf
dec
mov
jne
inc
leave
lock
push
xchg
ja
dec
rcrl
pusha
arpl
xchg
loope
lock
lock
jg
push
jl
push
dec
shlb
imul
mov
pop
ret
mov
std
or
add
icebp
arpl
rorl
rorl
jbe
ljmp
data16
push
out
hlt
sub
mov
mov
push
or
lret
jb
hlt
shrl
mov
pop
xchg
out
sub
and
mov
xor
rcrl
xchg
out
inc
jne
push
push
outsb
arpl
fwait
mov
pop
sbb
mov
dec
out
movsl
test
in
jbe
movsb
cmp
xor
das
std
aas
jbe
cmp
scas
push
idivl
loop
clc
pop
xchg
mov
push
inc
mov
adc
pop
lock
jp
aaa
data16
fcmovnbe
add
in
jne
into
ds
pop
xor
out
out
push
sub
adc
sub
xor
dec
lahf
fdivrl
repz
in
test
or
dec
jmp
push
arpl
cld
and
lret
sub
popf
adc
add
xchg
xchg
sub
mov
stos
pop
push
jb
jo
aad
aad
mov
arpl
jae
xor
js
push
push
addb
jnp
and
pop
dec
shll
adc
cmp
scas
dec
aam
popf
outsl
mov
in
call
lods
loopne
mov
mov
inc
ss
jae
fdivl
pusha
fistpll
push
outsl
shll
rcrb
mov
imul
push
pusha
mov
js
insb
jno
and
jl
mov
shlb
dec
fnstcw
add
in
push
lahf
scas
xchg
int
out
push
mov
mov
pusha
sarl
popf
loop
xchg
dec
pop
lock
mov
jno
mov
je
inc
fldt
ja
sti
addl
test
mov
mov
push
xchg
shlb
in
xor
fimull
mov
jae
fs
arpl
test
mov
xchg
or
xchg
inc
adc
es
push
push
mov
sti
fs
push
xor
pop
jae
xchg
call
add
enter
ret
cli
or
jbe
sar
aam
mov
rorb
pop
dec
jge
mov
ret
sub
test
imul
lea
xchg
into
or
clc
insw
sbb
add
out
inc
je
jo
aam
jno
adc
das
mov
mov
inc
push
mov
dec
dec
ja
scas
iret
stos
mov
sbb
inc
pop
test
xchg
loop
idivb
mov
pop
enter
imul
arpl
ret
test
fstl
fdivl
adcl
mov
xchg
fcoms
adc
pop
or
xor
push
fistpll
stos
out
mov
xchg
sub
pop
cltd
jle
sub
mov
out
jae
mov
or
outsl
cmp
hlt
sbb
lock
push
imul
repz
lret
andnps
sbb
arpl
mov
and
jb
lods
push
xchg
inc
cmc
lds
sbb
fimuls
mov
sbb
shlb
loop
inc
shll
cmp
pop
mov
xor
adc
int3
add
and
or
inc
enter
dec
sahf
ljmp
jbe
fistps
fmull
movsl
cltd
lds
push
pop
aas
push
pcmpeqw
insb
adc
jp
add
shl
lcall
loop
lock
inc
mov
in
std
fdiv
xor
add
vcvtps2pd
jae
sbb
jl
lods
mov
xchg
mov
xor
daa
fs
cmc
push
cmp
cmp
pop
out
js
test
lahf
cld
dec
mov
dec
xchg
cwtl
mov
scas
je
andb
mov
ss
je
mov
aas
and
loopne
push
test
int3
jae
dec
sti
je
adcb
adc
cld
mov
mov
cmpsl
and
or
pusha
cmp
xchg
mov
outsb
inc
mov
push
test
ret
cld
loopne
fdivrl
icebp
ja
pop
scas
mov
inc
std
lret
pop
add
and
dec
orb
jmp
mov
mov
repnz
xor
stos
andl
jp
sub
andl
mov
mov
mov
ret
jne
sbb
xor
xchg
push
push
outsl
push
cwtl
add
sar
cmp
or
push
fistpll
pop
push
dec
inc
push
popf
add
and
lock
push
jno
shrb
jae
push
jae
mov
rcrb
iret
jg
outsl
jle
test
stos
test
call
sti
mov
ds
pop
cltd
out
shll
out
sti
jg
ja
test
lock
js
mov
call
enter
jle
out
push
inc
or
pusha
add
adc
cmp
pop
rcl
sub
in
out
in
adc
out
insl
pop
das
adc
xchg
fs
jl
pop
lds
gs
push
js
arpl
loope
stos
nop
ret
loop
push
mov
cmp
insb
lcall
push
xchg
call
xlat
jo
push
ljmp
cwtl
cwtl
in
fcoml
ljmp
fstpt
rcrl
push
test
leave
ret
inc
pop
inc
mov
xor
or
lods
sarl
das
mov
addr16
mov
cmp
fldenv
ss
int3
sbb
je
sub
inc
idiv
daa
in
imul
xchg
jmp
pop
xor
mov
jae
sbb
xor
lret
aas
in
fadd
mov
push
imul
jno
insb
notl
cld
dec
testb
cmp
pop
jmp
pop
xor
jae
xchg
mov
pop
mov
lret
pop
xlat
pusha
inc
fsubs
sub
jae
hlt
push
jmp
ja
xchg
mov
outsb
jae
push
fiadds
int3
data16
sahf
mov
mov
inc
mov
jae
mov
xchg
hlt
pushf
insb
push
outsb
jae
xchg
leave
sarb
dec
and
fimuls
test
xor
inc
outsb
push
insl
adc
test
push
icebp
mov
xor
adc
push
loope
or
lods
or
hlt
std
cltd
push
mov
cli
jmp
add
mov
and
xor
jb
lahf
mov
mov
scas
cld
mov
icebp
jnp
mov
outsl
dec
pop
sub
inc
sbb
call
xchg
push
stc
ret
mov
jae
aam
out
dec
icebp
and
inc
pop
jp
adc
jns
cmp
add
jae
cmp
push
pop
push
inc
mov
push
movsb
imul
xor
dec
mov
xor
cmp
scas
fwait
mov
outsl
shll
jo
cmp
xor
push
sahf
pop
fbld
in
or
jae
mov
pshufw
jge
fs
dec
mov
test
adc
mov
cwtl
outsl
add
into
pop
push
adc
pop
fdivl
fdivl
pop
fcmovb
mov
int3
inc
out
fs
arpl
std
sbb
xchg
jp
push
imul
out
sbb
push
test
jno
dec
out
push
cmpsb
call
shrl
fstl
dec
rcr
in
fcoms
pop
xchg
loop
jnp
shrl
shlb
xor
aaa
cmp
in
xchg
mov
or
pop
ja
andb
add
push
cmp
push
fstl
cld
jno
ret
add
js
aas
into
sub
mov
and
test
les
dec
mov
inc
notl
xor
or
inc
shlb
mov
cli
add
adc
andb
out
sbb
inc
addr16
dec
and
mull
inc
ds
scas
jmp
rcrb
test
add
cwtl
sbb
mov
pusha
pop
movsb
mov
mov
xchg
js
jb
lds
mov
lock
movsb
xchg
push
das
loope
test
xor
lock
xor
sbb
inc
mov
test
imulb
jb
outsb
lock
jbe
pop
dec
inc
push
shll
outsl
push
cmpsl
push
inc
adc
jle
insl
outsb
push
pop
ljmp
lock
jl
out
pop
adc
imul
ljmp
sbb
sbb
addr16
outsb
imul
or
cmpb
test
out
in
ret
jg
imul
mov
hlt
in
js
outsb
sbb
out
or
sub
cltd
data16
call
leave
test
inc
bound
in
imul
dec
mov
dec
jmp
out
push
pushf
add
xchg
ljmp
testb
test
lcall
push
in
jp
sbb
and
push
add
or
imul
mov
clc
or
hlt
icebp
mul
jle
in
jg
push
in
dec
rcr
movups
leave
mov
ja
lret
loop
in
jno
icebp
jns
push
cmp
cmovg
in
int3
inc
addr16
dec
enter
test
shrl
inc
mov
sub
out
lock
imul
push
pop
inc
jp
dec
xor
add
popf
mov
xor
lock
icebp
push
adc
add
divb
or
je
js
clc
in
icebp
dec
push
or
dec
jns
inc
fisubl
mov
push
test
hlt
mov
ljmp
push
punpckhbw
add
outsl
arpl
shlb
push
mov
es
stos
ljmp
mov
insb
xor
scas
adc
push
lock
je
push
jb
push
jno
push
icebp
or
inc
or
arpl
push
test
imul
mov
push
jp
int
psrlw
and
aad
sti
rcr
in
dec
stc
or
mov
and
xor
call
outsb
bound
in
dec
bound
arpl
inc
ljmp
in
dec
push
popf
outsb
dec
pop
jae
push
addr16
or
out
or
xor
push
pop
or
or
cs
push
arpl
dec
shrb
outsl
frstor
outsb
fldcw
leave
je
pusha
incl
or
insb
test
push
imul
xchg
shrl
out
xor
or
add
rclb
lock
inc
in
outsl
imul
outsb
scas
cs
ljmp
jecxz
lock
mov
jns,pt
push
mov
push
insl
push
filds
ja
sub
mov
test
mov
outsb
jle
adc
or
outsl
dec
add
push
push
mov
psllw
sti
jmp
mov
mov
jb
sbb
xor
sahf
cmpsb
insl
mov
popf
adc
out
imul
das
jmp
mov
push
dec
pusha
out
pop
dec
inc
andb
lods
subb
jmp
xor
push
cltd
addr16
xchg
pop
cwtl
pop
nop
mov
outsb
mov
outsl
insb
in
jmp
out
orb
sbbb
aaa
imul
push
cmp
push
scas
scas
dec
lock
arpl
in
pop
adc
in
cmovge
outsb
outsb
dec
ss
in
mov
arpl
mov
push
cwtl
dec
dec
jg
or
dec
insb
dec
mov
xchg
dec
dec
out
insl
insl
imul
add
xlat
lods
pop
push
out
lock
push
pop
mov
iret
mov
jmp
jno
imul
mov
or
arpl
out
xlat
xchg
add
mov
out
enter
jnp
pushf
addr16
addr16
dec
dec
push
ss
dec
mov
dec
push
or
dec
dec
dec
adc
push
out
cmpsl
jbe
mov
loope
pop
ljmp
test
bound
ljmp
out
test
in
out
sub
stos
sub
cmpsb
or
imul
mov
test
imul
inc
out
mov
pop
cmp
mov
call
lods
test
push
pop
mov
pushf
and
cmpsl
xchg
subb
dec
fsubp
mov
xchg
push
insb
mov
sbb
dec
aas
dec
and
mov
out
adc
xchg
fidivs
adc
pushf
stos
inc
imul
rorb
pop
nop
add
mov
jno
inc
cmp
push
jbe
mov
cmp
and
packssdw
jne
jns
out
outsb
enter
cmc
jmp
or
or
jg
sub
stos
pop
or
cs
push
inc
call
mov
test
sahf
arpl
lods
sahf
shl
jge
scas
mov
xchg
imul
xchg
jl
and
dec
or
test
jae
loopne
and
adc
lahf
fisttpl
data16
in
and
pop
imul
popa
mov
aam
mov
mov
add
test
mov
or
out
cmpsl
aas
and
cmpsl
call
cmp
dec
out
cmp
jg
out
push
xor
xchg
xchg
std
jmp
stos
cmpsb
xchg
in
push
mov
add
jg
adc
rorb
mov
dec
decl
stos
cld
test
out
mov
pop
imul
test
out
insb
pushf
push
dec
mov
in
adc
out
mov
mov
clc
and
mov
out
daa
xchg
jecxz
stos
in
mov
imul
push
imul
ss
in
mov
scas
stos
in
mov
or
mov
ja
repz
push
mov
subb
jmp
cmpsl
cmp
inc
or
scas
out
dec
mov
imul
push
push
push
in
jg
mov
or
pop
movsb
adc
into
scas
cmp
ja
pop
imul
clc
sahf
cmpsb
push
jle
pop
dec
sahf
inc
dec
cmp
stos
dec
aaa
jmp
pop
scas
lahf
pusha
out
jns
rorb
lret
add
adc
lret
andl
dec
insl
or
sahf
pop
imul
cmpsb
mov
push
fwait
out
roll
out
jbe
out
mov
or
jns
push
xor
imul
mov
mov
mov
mov
in
outsl
jg
les
int
mov
dec
negl
packuswb
jg
jmp
cmp
adc
xchg
outsb
cli
imul
out
cmp
shll
pop
in
jmp
loopne
xchg
loopne
cmpsb
jbe
xchg
xchg
xor
mov
jns
mov
jbe
fidivrl
push
sub
push
lahf
outsb
mov
pop
imul
fisubs
cmp
dec
in
enter
scas
lods
repz
stos
sti
insb
cltd
sub
dec
cld
or
inc
and
lods
mov
in
out
in
cmp
mov
mov
in
nop
imul
ret
pop
repz
push
or
aaa
rcr
decb
lret
jle,pt
lret
sub
dec
stc
add
push
shlb
out
psrlq
loop
mov
out
jge
push
mov
lods
jg
push
inc
push
mov
mov
adc
outsb
lret
jbe
in
mov
testb
push
push
ja
push
outsl
or
inc
stos
dec
movq
xor
je
cmpb
jae
rdmsr
outsb
jb
inc
nop
dec
mov
outsb
jg
nop
jae
ret
or
xor
jae
xchg
pop
jge
outsb
stos
jns
dec
and
bound
das
scas
jle
outsb
add
shll
mov
lock
das
seto
aas
fisttpll
mov
insb
or
dec
iret
or
out
or
dec
push
insb
movsl
jmp
addb
ret
and
outsb
shlb
arpl
mov
aas
decl
or
adc
dec
dec
mov
dec
and
call
test
push
dec
or
ljmp
es
fisttpll
fldenv
repz
loopne
dec
aaa
mov
xchg
and
add
jg
shll
add
imul
push
shrd
testb
xchg
mov
mov
and
cmpsb
or
push
outsl
push
push
ds
outsl
jne
jno
dec
push
int3
imulb
out
insb
fs
mov
jno
sbb
outsb
sbb
outsb
jns
jle
dec
jno
and
andb
adc
cld
bound
bound
mov
mov
sarb
jbe
outsl
mov
mov
ret
popa
dec
popa
aas
add
sub
mov
pop
mov
or
aaa
mov
sub
outsl
mov
adc
mov
xchg
xor
xlat
sub
mov
dec
pop
dec
gs
in
lcall
or
loopne
add
push
lods
and
test
mov
push
stos
pop
add
inc
addr16
dec
mov
mov
dec
test
imul
popf
dec
sbb
xchg
push
or
xchg
into
les
popf
jbe
stos
cmpsl
mov
pop
jns
or
aas
inc
dec
jge
add
rclb
xchg
or
mov
fidivrs
sub
aas
outsb
jg
pop
pop
jno
xor
shll
push
mov
push
outsl
out
jno
mov
push
scas
jl
js
or
inc
jbe
gs
mov
dec
dec
jne
imul
gs
jae
fsubrl
scas
or
gs
adc
cli
das
insb
dec
sub
lds
cmpsb
shrb
outsb
ljmp
incb
pop
inc
pop
inc
jno
je
or
fidivrs
jp
fisubs
push
push
pop
sti
jno
jno
xlat
jp
lods
jmp
shll
mov
push
aaa
dec
sub
mov
stos
push
dec
les
insb
repz
xchg
add
dec
dec
pop
test
pop
jno
mov
inc
ret
outsl
mov
popa
imul
add
repnz
mov
daa
loop
jbe
pop
fucomp
jg
jg
hlt
arpl
jno
push
ret
pusha
sub
dec
xchg
iret
pushf
mov
lods
push
xchg
ret
ret
insb
sub
lret
ret
dec
out
ret
and
inc
daa
adcl
andl
testb
xchg
mov
cs
jne
sub
iret
fists
xor
add
and
pop
push
push
mov
jae
enter
je
fs
outsl
pop
lock
imul
lock
jg
shll
out
and
pushf
pop
out
cld
in
shl
jbe
ror
dec
ds
adc
int3
jae
pusha
int
int
int
pop
pusha
sarw
lock
iret
cmp
outsl
xchg
mov
dec
cmp
adc
testl
jae
pushf
iret
movsb
negb
negb
outsl
xchg
mov
push
jo
lods
out
loopne
shl
xchg
enter
cmp
push
testb
xchg
lock
jg
add
cltd
push
adc
outsl
mov
outsb
mov
aas
adc
jl
lods
insb
adc
mov
xchg
mov
dec
ja
scas
das
sub
push
jns
cmc
out
ja
stos
out
nop
sahf
outsl
test
outsl
les
nop
dec
outsl
lock
imul
movsl
xchg
hlt
jl
jp
jge
call
adc
xor
pushl
je
je
ss
inc
and
in
mov
lods
fdivs
push
jmp
add
mov
push
test
stos
iret
enter
filds
fldl
dec
insb
in
ret
dec
int3
and
dec
les
ljmp
stos
ljmp
jecxz
scas
push
push
pop
nop
movntps
es
bound
xor
jbe
and
add
dec
addr16
scas
bound
movsb
repnz
cmpsb
lret
int
int
iret
add
sub
out
jmp
xlat
shrb
jle
mov
pop
inc
faddp
subb
popf
pop
in
mov
mov
bound
jl
mov
outsb
mov
call
ja,pn
xchg
imul
int
adc
movsb
pop
mov
addr16
fs
inc
pop
mov
xor
lods
in
jmp
lock
sub
out
movb
cmpsl
push
es
pop
arpl
mull
cmp
and
mov
enter
xchg
out
ret
loop
inc
sub
arpl
mov
ljmp
sub
loopne
in
sub
loope
out
mov
cmp
inc
mov
lock
cmp
movsb
push
inc
dec
mov
insb
iret
jmp
or
fildll
loop
les
sub
dec
cmp
insb
sub
call
lods
pop
in
arpl
push
jbe
andb
std
mov
sub
test
mov
jl
popa
scas
push
mov
mov
sub
es
aaa
int
enter
dec
test
cli
loopw
mov
mov
test
add
int
jmp
iret
cld
in
mov
in
repnz
movsb
mov
add
gs
fwait
ss
gs
push
les
in
mov
cmp
cmpsl
les
mov
inc
and
je
mov
and
imul
and
in
int
ljmp
in
subb
movsb
scas
in
out
insl
in
jbe
sub
fs
movsb
push
icebp
lahf
xor
mov
and
aad
scas
ret
pop
lds
dec
cmp
es
jmp
std
ljmp
cli
cld
shlb
or
mov
imul
pop
dec
inc
outsb
push
in
and
pop
addr16
rcr
xchg
mov
add
push
out
cmpsb
pop
scas
out
xchg
shlb
movsb
jne
scas
sub
in
push
loopne
subl
dec
pop
lock
dec
movl
mov
jecxz
daa
pop
in
les
jnp
das
lods
lea
jne
movsl
enter
inc
test
and
imul
test
in
and
arpl
cmpsb
lods
test
lahf
jo
daa
push
mov
jle
mov
mov
cmpb
pushl
out
sub
mov
pop
cmpsb
cmp
les
push
inc
outsb
out
mov
divl
arpl
cli
dec
mov
data16
and
push
sahf
jge
bound
mov
out
les
dec
enter
mov
insb
std
jb
add
xchg
jbe
pop
ds
jbe
push
scas
js
cld
scas
arpl
sub
dec
push
mov
inc
cmp
insl
int3
lcall
in
in
jmp
bound
sbb
lods
sub
mov
in
cmp
add
inc
test
out
and
cmpsl
cmp
xchg
mov
ret
js
cs
stos
insl
mov
push
xchg
inc
ljmp
lret
and
cmp
gs
jae
dec
out
idivl
sti
ds
dec
ja
or
dec
add
incb
lcall
jecxz
ficompl
jmp
cs
and
addr16
aaa
mov
scas
stos
les
sti
add
jne
outsb
insb
cli
popa
jns
sbb
or
decb
cli
imul
pop
call
scas
insb
daa
ljmp
jnp
test
xor
test
in
cs
mov
or
addr16
cmpsl
lds
mov
lahf
push
push
xor
lods
ucomiss
sub
jge
cmpb
inc
out
shrb
lret
arpl
vprotd
out
xor
movsb
imul
addl
pop
jecxz
inc
sub
outsl
daa
inc
lret
in
sub
js
lock
cmp
xchg
dec
call
call
les
cmpsl
mov
lret
test
mov
test
add
fldt
jne
push
clc
lods
xchg
jecxz
fisubrs
mov
jecxz
insb
push
mov
mov
les
mov
out
aam
inc
aam
sbb
call
test
ljmp
out
es
cld
and
loop
call
inc
lods
scas
adcb
jmp
mov
jnp
pop
test
mov
stos
je
pop
cmp
mov
insl
push
pop
jecxz
mov
into
inc
imul
lock
and
stos
mov
inc
sub
in
nop
shlb
stos
ret
stos
lods
out
popf
mov
push
mov
call
jp
cmp
mov
inc
lods
mov
aaa
scas
std
test
and
inc
sub
pop
call
jge
insl
mov
cmp
stos
test
sub
repz
std
mov
mov
and
testb
mov
mov
fdivrl
or
xor
sbb
jecxz
insl
lret
pop
sti
xchg
xor
lods
and
xor
jbe
cmp
and
arpl
enter
out
push
insl
and
and
into
popa
cld
inc
jle
sub
ds
lods
int3
mov
inc
lea
pushl
pop
or
mov
test
inc
xchg
sub
push
inc
test
or
out
arpl
in
push
je
cmp
ljmp
iret
mov
repz
int3
fdivrp
ja
inc
scas
or
in
xor
or
push
imul
mov
mov
mov
sub
xrstor
popa
call
sahf
cmp
scas
push
mov
cmp
pop
add
mov
push
pushf
jns
insb
clc
outsl
ficomps
inc
jg,pn
scas
ret
push
orb
js
pop
sub
pop
es
les
ret
mov
mov
cltd
jo
push
stc
cmp
mov
mov
scas
les
cli
inc
daa
shlb
dec
jecxz
lret
out
mov
and
data16
je
je
fsubrl
sub
popa
or
jp
jne
bound
stos
vpcmov
pop
jl
shr
mov
sbb
and
arpl
bound
mov
mov
cmp
or
std
push
add
fiadds
cmpsb
push
mov
je
inc
fdivs
xchg
std
imull
stos
dec
imul
push
inc
or
out
cmpsb
or
and
dec
ftst
jnp
sbb
hlt
in
insb
mov
std
lret
mov
repz
mov
pushf
inc
cmpsb
in
xor
sahf
dec
scas
lret
ljmp
mov
fcmovne
movsb
out
lea
inc
pop
hlt
mov
cmp
ss
inc
loop
ja
daa
xor
sub
in
inc
push
in
dec
jp
repnz
mov
inc
movsb
cld
arpl
int
std
mov
sbb
lods
stos
mov
sub
enter
or
jns
in
jbe
jae
scas
out
addr16
les
or
mov
mov
icebp
push
dec
cmp
les
xor
stc
pop
inc
ret
out
enter
cmpsb
sub
pop
lock
mov
inc
movsb
adc
popa
cmp
ss
inc
and
push
xor
in
pop
and
decl
in
lods
stos
mov
ror
hlt
jns
popf
mov
sti
push
add
fs
lods
shlb
int3
push
jnp
mov
xchg
popf
clc
push
inc
stc
les
jl
sti
mov
movsb
and
mov
jno
pop
imul
les
movsb
pop
out
addr16
dec
mov
fcoml
mov
cmp
movsl
into
stos
mov
jmp
out
inc
ja
out
std
popa
or
push
jnp
in
fdivrl
mov
jecxz
sub
dec
shr
cmp
jb
mov
jnp
add
mov
ljmp
out
stos
push
ds
dec
or
sub
out
inc
sub
xchg
loope
sub
pop
or
cli
into
fsubrl
movsl
out
xchg
repz
insb
and
lock
fmul
sti
jb
fisubrl
daa
repz
sub
call
xchg
sub
movsb
and
imul
pop
dec
ror
leave
test
lods
mov
jmp
jmp
mov
in
push
mov
xor
pop
insl
das
fsubr
mov
inc
pop
sub
push
mov
mov
int3
movsb
idivl
mov
cmp
mov
inc
lock
outsb
in
sbb
sahf
xchg
jmp
inc
xor
xchg
test
cmpsb
ret
in
push
mov
rorb
dec
lods
scas
add
fldcw
mov
jecxz
in
mov
pop
outsb
inc
or
adc
rol
stos
jbe
int3
loop
and
sub
fsubrl
inc
jo
push
stos
jo
enter
outsb
xchg
mov
mov
test
dec
lods
arpl
repz
mov
jl
jns
xchg
cmp
ljmp
stos
mov
mov
mov
aam
jae
or
dec
jmp
in
sub
lahf
int3
xlat
arpl
leave
jge
ret
lahf
les
mov
dec
rorb
idivb
push
jecxz
mov
icebp
pop
xchg
sub
lret
mov
stc
in
repnz
mov
clc
aaa
mov
cmpsb
inc
add
pushf
push
push
outsl
sub
in
jp
jo
in
xchg
cmp
push
out
movsb
in
xor
push
jne
aas
jg
outsb
add
arpl
in
daa
jl
inc
scas
loope
pop
imul
ds
call
dec
out
and
inc
outsl
out
mov
movsb
daa
insb
test
arpl
scas
arpl
insb
std
add
pop
repz
outsb
dec
dec
add
sahf
les
add
das
lock
pushl
jae
imul
rcrb
stos
testl
fisubrs
mov
jecxz
ja
xor
mov
loop
movd
icebp
xchg
jns
out
cmpsb
sub
hlt
pushf
in
enter
sub
pop
inc
mov
cmpsb
cld
ja
outsb
pop
jp
sub
sub
icebp
in
lods
insl
filds
out
in
icebp
into
jecxz
cmpsl
jge
inc
imul
out
leave
cmc
mov
int3
inc
sub
mov
mov
add
les
jno
std
sbb
decl
and
jecxz
xorb
popa
int
sahf
stc
bound
ret
xchg
sbb
icebp
mov
inc
lods
cs
jmp
enter
jmp
iret
scas
and
mov
sub
imul
dec
mov
nop
and
push
or
popa
popf
mov
dec
mov
sbb
in
mov
lock
mov
jno
cmp
inc
pop
jne
addr16
test
and
jmp
arpl
sbb
out
and
les
enter
out
repnz
bound
add
xor
push
sub
ljmp
sub
int3
cmpl
mov
loop
fs
and
dec
in
or
out
test
xchg
leave
rolb
out
jmp
push
and
popf
and
loope
sub
and
ljmp
push
insl
es
ret
sbb
cld
xchg
popa
jle
mov
push
add
cmp
add
mov
or
daa
add
mov
inc
inc
and
and
push
insl
push
ret
test
pop
dec
inc
mov
loopne
clc
sub
fldz
inc
es
in
and
repnz
loop
fisubrs
icebp
cs
and
inc
mov
lret
iret
add
lods
lret
insb
imulb
loop
repz
sti
in
jecxz
jmp
in
stos
hlt
push
stos
imul
dec
js
movsl
xlat
lret
enter
xor
out
dec
or
imul
and
push
mov
stos
mov
insl
xchg
cmpsb
out
cmp
add
push
mov
or
divl
xor
mov
sbb
test
pop
stos
cmpsb
inc
and
dec
or
xchg
jns
cli
movsb
call
inc
out
jnp
or
stos
movsl
es
mull
cmp
and
dec
sub
stos
andb
int3
gs
arpl
stos
ljmp
call
add
outsl
mov
dec
xor
mov
or
xchg
mov
addr16
jmp
je
call
sub
test
cmpsl
cmpsl
mov
push
jo
leave
push
imul
or
push
icebp
or
ficoms
outsb
int
mov
pop
cmpsl
mov
out
and
pop
xchg
jmp
scas
pusha
jg
and
push
mov
out
inc
and
mov
dec
das
loop
jecxz
enter
sub
inc
sarl
dec
out
inc
pop
in
mov
aaa
mov
mov
or
and
mov
and
leave
shrl
sub
les
out
mov
mov
and
or
inc
xor
cld
xchg
push
test
sub
push
movsb
push
sarl
jecxz
xchg
inc
adc
dec
add
daa
adc
ret
pusha
pop
sub
mov
sub
and
pushf
add
add
sub
in
sub
push
sub
xor
pop
mov
xchg
cmovae
mov
imul
les
jmp
shrb
loopne
and
pop
ret
inc
rclb
ret
add
daa
in
mov
out
ret
lods
int
and
mov
fsubrl
cwtl
into
out
enter
subl
jl
sbb
flds
mov
dec
dec
dec
in
inc
call
dec
fnstcw
sahf
mov
lods
mov
les
and
mov
arpl
mov
and
pop
mov
add
lods
imul
aad
daa
push
xchg
popa
sbb
shrb
jecxz
fcmovbe
sbb
arpl
in
lods
outsb
aas
out
leave
mov
out
mov
pusha
lods
bound
jecxz
iret
dec
mov
dec
out
pop
dec
enter
outsl
call
cli
bound
pop
dec
popa
cmp
and
dec
pop
add
push
bsr
lahf
or
inc
insb
mov
imul
xchg
lret
dec
add
pushf
sbb
test
inc
inc
dec
cwtl
lea
sbb
in
or
out
add
mov
pop
mov
dec
lods
mov
cmp
pop
enter
dec
movsb
iret
sub
sahf
mov
jle
std
or
push
or
inc
cmp
adc
iret
dec
cli
in
enter
cmp
std
mov
in
dec
rolb
and
in
push
pop
mov
inc
jp
cmpsl
fidivrs
je
inc
mov
mov
dec
dec
js
data16
push
jecxz
push
mov
out
psrad
push
bound
popf
das
or
inc
mov
sarl
mov
add
shll
insb
xchg
cvttps2pi
addb
dec
scas
loop
shrb
inc
push
sub
loop
int
xchg
arpl
outsb
inc
ror
in
fdivr
cmp
cwtl
jecxz
jle
dec
test
shlb
movsl
sbb
sub
cmc
jo
cs
test
mov
addr16
cmpsb
xchg
out
scas
int
mov
shl
inc
out
stos
dec
add
into
mov
dec
cs
es
lock
add
test
adc
roll
lods
pop
or
ljmp
clc
sub
push
bound
jle
loope
adc
hlt
or
mov
popa
negb
dec
call
jmp
out
out
ljmp
outsl
dec
mov
iret
inc
gs
outsb
mov
shlb
fs
in
cmp
mov
lock
test
shr
shrb
das
or
leave
nop
or
icebp
fsubrs
ljmp
loop
xor
xchg
inc
lea
cmpsl
push
xchg
or
jnp
dec
das
push
out
pusha
mov
ret
or
mov
popf
ret
outsl
dec
jge
in
add
mov
push
movsb
mov
das
pop
cmpsb
arpl
dec
stos
mov
xchg
das
xchg
inc
mov
jmp
pop
mov
jo
sbb
xorb
push
cmpsb
popa
sbb
les
rol
nop
rorb
mov
xchg
or
call
std
pop
out
dec
mov
or
sbb
jl
out
mov
add
push
dec
cmp
mov
xchg
push
out
mov
js
mov
cmpb
loop
xor
mov
jno
adc
dec
lds
andb
hlt
repz
xor
out
or
inc
xchg
addr16
std
or
scas
push
scas
test
clc
nop
shl
hlt
sub
arpl
jbe
push
jg
dec
add
inc
nop
imul
add
mov
stos
addr16
aaa
adc
movsb
shll
mov
or
rclb
lock
inc
popl
scas
and
leave
xchg
fcomp
mov
hlt
lock
imul
or
fucom
push
and
xchg
adc
pop
out
in
outsl
jg
add
lahf
sub
punpckhdq
add
in
bswap
jmp
js
inc
jmp
cwtl
add
outsb
ret
mov
popa
xchg
stos
test
fs
cld
lahf
inc
add
dec
ljmp
mov
inc
push
ret
push
shlb
mov
std
inc
pop
jmp
int
nop
lds
dec
std
call
jae
xchg
adc
pop
repz
and
insb
lea
inc
imul
add
jge
pop
and
push
dec
out
ret
mov
push
dec
data16
cld
xor
gs
or
lret
bound
sub
es
test
mov
ljmp
filds
push
les
mov
mov
dec
shl
outsb
rolb
repnz
mov
mov
pushf
mov
in
out
outsb
ds
pop
dec
fiadds
inc
stc
data16
dec
ds
fwait
cli
sub
dec
ljmp
dec
or
sub
dec
sub
fildl
sub
data16
hlt
testb
pushf
and
imul
push
and
xchg
xor
inc
outsl
loope
and
sub
xchg
in
dec
push
js
sti
das
loopne
enter
ficomps
mov
lods
mov
popa
lcall
mov
lcall
push
adc
lods
mov
arpl
fildll
out
das
outsb
jae
pusha
pop
pop
inc
lret
fisttpl
mov
lahf
stos
add
dec
ret
and
fcompl
out
fisttpl
pop
in
pop
push
clc
scas
mov
mov
jo
inc
outsb
movsb
sbb
jmp
test
in
cmp
xor
repnz
add
cmpl
or
ljmp
arpl
pop
inc
mov
imul
pop
addl
xchg
in
jmp
jbe,pn
mov
das
push
fwait
sbb
jle
stc
lock
rorb
dec
das
inc
fsts
push
push
lea
jne
add
bsr
pusha
mov
stc
cmp
add
cmp
cmp
movzwl
add
bsr
stc
sar
btc
mov
bt
pusha
movb
jmp
push
call
aad
imul
gs
xor
cs
insb
add
xchg
fnsave
filds
lea
or
daa
sbb
jno
test
addr16
iret
es
rcll
jo
cwtl
int
pop
nop
movsb
sbb
pop
inc
shll
sbb
jl
jno
imul
xchg
or
leave
xor
call
and
push
adc
rcll
jo
xchg
jmp
ret
or
or
in
inc
push
lret
aam
lcall
xchg
nop
lcall
jge
push
jmp
sub
jmp
push
call
xor
stos
or
jg
jge
arpl
cmp
inc
aad
incl
mov
add
or
mov
sub
jae
sbb
pop
movsl
sbb
popf
pop
loop
loopne
test
sbb
or
pop
lods
je
pushf
cmc
dec
and
outsl
sbb
adc
adc
cmp
jg
or
jl
pop
add
mov
arpl
mov
push
dec
rcrb
fimull
push
ljmp
aad
aas
cmp
push
push
stos
mov
inc
lcall
mov
jne
imul
mov
pop
push
aam
adc
iret
jmp
imulb
xor
or
add
and
push
outsb
push
rclb
add
lods
test
dec
shll
test
pop
in
daa
sub
ret
or
pop
insl
fmuls
or
pop
repz
add
and
pop
addr16
sub
ret
addr16
negb
ds
ret
and
pop
mov
push
out
cltd
subb
stos
cmp
imul
les
or
push
ljmp
or
lock
cli
or
jg
imul
faddl
js
xor
rcrl
scas
rcrl
pop
sub
xchg
inc
or
lcall
iret
jl
out
push
out
sbb
cmp
out
or
add
mov
or
adc
or
cmp
test
jg
cmpsl
in
xchg
xchg
push
or
pop
xor
lods
outsl
mov
andb
lods
and
push
enter
xchg
sbb
sbb
ss
push
xchg
cmpsb
mov
loopne
or
xor
jb
cmp
jbe
loop
xor
and
pop
mov
inc
sbb
mov
out
in
aam
mov
inc
imul
inc
and
test
pop
xchg
adc
js
jl
sahf
or
rolb
or
movl
enter
daa
shrb
sbb
js
add
mov
movsl
test
insl
lds
add
leave
sbb
pop
push
add
ret
in
loopne
lahf
xor
push
jb
pop
adc
test
xchg
scas
and
xchg
jecxz
add
and
dec
fwait
dec
loopne
cmp
cmp
xor
scas
mov
pop
xor
into
sub
lcall
mov
xor
add
cmp
cwtl
mov
mov
jge
or
ss
and
adc
test
adc
shll
inc
or
mov
pop
jmp
add
push
in
push
call
jg
out
ds
adc
jle
popf
dec
fwait
add
xchg
ficompl
mov
mov
sub
xor
dec
rol
dec
inc
cmp
rcrb
pop
or
xor
rcll
jb
insb
dec
fistpl
pop
xor
data16
xor
dec
mov
mov
push
mov
mov
nop
imul
pop
dec
inc
lret
fnstenv
outsb
add
jb
mov
xchg
inc
imul
or
adc
or
jp
outsb
push
call
loop
xchg
push
call
lret
fwait
mov
ja
jno
push
pop
ficompl
mov
cvtps2pi
out
fsubrs
mov
inc
push
sahf
push
adc
inc
popa
xchg
fs
pushf
fsubrp
xor
stc
test
adc
xchg
lods
cmp
pushf
cmp
test
pop
cwtl
dec
xor
dec
mov
xorl
jl
dec
out
fisubl
mov
sbb
push
cwtl
sbbb
out
xlat
and
or
sbb
mov
int3
nop
or
iret
ret
xor
call
push
call
add
shrb
in
mov
sub
fwait
addr16
and
inc
lret
push
or
sbb
test
mov
popa
adc
enter
popa
sbbb
stc
push
imul
mov
sbb
aaa
enter
lcall
into
lahf
mov
jb
push
sub
enter
mov
or
icebp
push
push
jb
stos
rol
sub
mov
dec
cld
sbb
jmp
iret
stc
cmpsl
add
call
mov
jg
test
imul
add
push
jns
inc
jb
gs
je
imul
cmp
call
andb
pusha
adc
call
pusha
mov
pusha
sub
call
jbe
jg,pn
sbb
add
lret
or
xor
ljmp
add
pushf
jae
or
fstps
sbb
add
shrb
stc
loope
fstps
add
inc
out
inc
jle
add
dec
fsubr
add
and
jl
loope
movaps
test
inc
out
out
inc
pop
inc
xchg
call
xchg
mov
shlb
test
or
outsb
aaa
jge
cs
out
adc
inc
jns
add
movsb
inc
sub
pop
cmpsb
pusha
mov
out
push
adc
adc
call
push
fistps
dec
rcll
dec
push
xchg
mov
mov
std
pushf
mov
and
and
icebp
repz
mov
mov
idivb
fsts
xlat
es
lods
nop
xor
int3
inc
bound
xchg
das
ljmp
pop
cli
cmpsb
xchg
inc
stc
push
sbb
or
std
mov
in
xchg
and
pop
imul
or
pop
lock
push
call
mov
aad
sub
and
push
pushl
pusha
pushl
ret
push
call
push
adc
mov
ljmp
jg
jno
sbb
add
mov
add
idivl
jae
ret
sbb
into
in
push
adc
xchg
mov
movsb
outsl
lods
insb
in
mov
leave
cmp
xor
jecxz
out
xor
in
mov
or
daa
add
jg
add
pushf
cmp
cmpsl
or
leave
fwait
push
outsl
subb
lds
es
cli
fisttpll
movsl
scas
sbb
jecxz
daa
inc
dec
mov
dec
fisttpll
or
add
inc
test
cmpsl
cmp
xchg
decb
jb
or
pop
test
lret
sub
xorl
mov
jg,pn
shr
mov
add
js
cmc
mov
rclb
fidivrl
sub
ret
or
xchg
mov
jnp
add
jae
sbb
add
in
push
xlat
hlt
rol
mov
xor
fnstsw
mov
lahf
leave
lahf
test
mov
mov
movsl
jae
out
mov
inc
push
inc
shlb
hlt
movsl
pop
dec
jo
movhps
stc
cmpsl
push
xchg
cmp
cmpsb
sub
mov
jns
sub
or
les
insb
dec
or
test
jbe
cs
pop
jns
and
or
fimuls
xchg
mov
imul
xchg
lock
test
repz
lret
cmpsl
mov
out
shlb
fisubrs
pop
sbb
enter
push
push
idivl
out
movb
mov
lods
call
xor
test
cltd
inc
mov
lret
out
inc
aad
jmp
dec
in
jo
movsl
jmp
cmpsb
and
scas
scas
stos
add
inc
jg
inc
test
rorb
ret
or
or
mov
leave
mov
jmp
adcl
roll
bound
dec
popa
pushf
sub
push
cltd
aam
dec
mov
xor
dec
xor
pop
ret
cmp
push
int
mov
inc
dec
addb
int3
repnz
lock
in
push
adc
xor
pusha
sbb
nop
scas
cs
into
sub
xor
or
push
bound
dec
push
arpl
in
or
in
adc
xor
test
repz
xchg
mov
repnz
orl
pop
movsl
cld
fstpt
in
sbb
xor
pop
xchg
scas
in
cmc
repz
fucomip
dec
add
lods
in
and
or
pushf
movsl
adc
adc
fistpll
fucomp
stc
or
or
add
int
push
loop
dec
je
data16
loop
xchg
lock
mov
or
sbb
jl
inc
jge
cmp
xor
test
jecxz
aam
dec
jae
mov
pop
or
sub
mov
pop
dec
out
cmp
lods
fadds
and
mov
aaa
dec
out
push
pop
leave
pop
and
in
bound
adc
mov
fcoms
lret
jns
ret
xlat
pop
cltd
call
lock
mov
aas
add
mov
xchg
adc
mov
fwait
lods
ret
push
js
daa
insl
add
insl
jge
xchg
gs
adc
inc
jmp
cmp
and
pop
lret
jp
shrd
inc
cvttps2pi
das
cmp
pop
testb
lcall
jb
mov
cmp
sbb
jno
loopne
scas
xor
imul
adc
cwtl
bound
sbb
out
movsb
stos
enter
xor
xor
push
inc
adc
sub
cmp
jle
push
mov
movsb
outsl
and
add
sbb
or
mov
sbb
and
and
orl
push
movsb
int
in
ds
pop
rcrb
add
leave
orl
gs
in
add
mov
inc
rorb
mov
mov
les
dec
int3
js
push
cld
scas
xor
icebp
xchg
and
mov
orb
sbb
ss
and
pusha
or
inc
or
add
and
pushf
cmpsb
negl
mov
cmp
and
sbb
mov
stc
insb
ja
aas
rcrl
add
lahf
push
loope
cwtl
mov
lds
pop
mov
repz
dec
inc
inc
cmp
adc
stos
jmp
xor
mov
pop
jb
fisttps
adc
xlat
inc
ja
fistl
pop
test
aas
or
or
sub
mov
les
pop
repnz
cld
pop
repnz
ja
aas
adc
sbb
je
ds
iret
jp
jno
lahf
xchg
sahf
test
add
loope
icebp
hlt
or
sbb
fmull
dec
imul
je
in
push
dec
outsb
pop
jne
dec
mov
xorl
add
jmp
adc
and
adc
jecxz
inc
or
xchg
mov
lea
test
cmc
mov
mov
dec
adc
lea
out
cmc
mov
mov
stos
insl
test
mov
add
outsl
xchg
leave
testb
ja
lahf
fstps
xor
or
sub
imulb
pusha
out
sub
movsl
insb
add
jo
add
inc
es
aas
pop
std
mov
jae
enter
pusha
mov
mov
out
gs
xor
or
aam
mov
jae
jecxz
lret
in
out
gs
pusha
cmp
dec
clc
xchg
cli
mov
das
into
aam
hlt
push
scas
mov
andl
mov
scas
in
lods
imul
xchg
sbb
test
outsb
faddl
mov
push
lds
and
roll
sub
cmpsl
jb
push
pop
or
lcall
mov
lahf
fidivs
jl
inc
addl
xchg
iret
in
in
or
and
aad
jb
pop
dec
push
insb
add
in
clc
push
aad
xchg
enter
push
mov
inc
or
push
fmuls
push
xor
stc
ret
xchg
dec
cmp
dec
sbb
dec
cmp
out
negb
push
jbe
dec
jle
mov
mov
je
add
cmpsl
out
or
sub
cld
adc
mov
pusha
lea
jae
pusha
call
pushf
pusha
lea
je
stc
bt
jmp
push
call
shlb
push
call
fcompl
movsbl
lea
jmp
push
call
sahf
ljmp
and
jmp
ljmp
adc
dec
pusha
pusha
bt
cmp
not
push
xor
jmp
push
call
out
scas
mov
inc
push
call
in
sub
jbe
les
lret
or
cmpsl
mov
cmpsl
bound
fnsave
in
inc
mov
lret
push
cmpsl
fbstp
lret
dec
sti
lret
out
mov
jbe
sub
cmp
popf
rcrb
sub
mov
aaa
dec
push
call
push
xchg
jge
xor
sub
loope
jb
push
mov
cmc
push
mov
cmpps
lock
mov
pop
subl
jae
and
sub
test
dec
mov
jns
mov
ds
repz
mov
dec
xchg
xchg
push
nop
mov
xchg
imul
push
lods
and
rorl
into
dec
pop
mov
jg
jbe
jge
sti
sbb
in
mov
mov
sub
dec
push
jns
and
stos
inc
aas
pop
xlat
xchg
mov
or
inc
pusha
sahf
movsb
test
cmp
push
or
lea
lcall
test
add
jmp
icebp
or
lret
outsb
pop
cmp
out
xchg
jno
or
rcrl
insb
stos
mov
cs
pop
pusha
add
inc
leave
mov
mov
ljmp
dec
in
faddl
dec
pop
out
sub
push
shll
mov
call
sub
test
inc
hlt
repz
in
pop
rcl
mov
push
jne
std
xchg
dec
and
mov
xchg
mov
dec
bound
pop
jg
push
push
push
call
fldcw
ja
lock
or
fadds
sbb
and
aas
push
jns
xorb
mov
mov
scas
pop
ljmp
xor
push
add
jbe
push
lods
subl
jne
push
shlb
cmp
sub
jle
scas
cwtl
jp
mov
ficoms
in
cwtl
dec
test
push
sub
adc
jg
jne
pushf
xor
shlb
sbbl
ret
mov
push
mov
lahf
aad
gs
pop
adc
in
scas
or
stos
mov
sarl
adc
imul
mov
jg
js
arpl
add
add
cmp
pop
cmp
adc
push
call
sbb
adc
fldcw
fldcw
fsqrt
jo
aaa
fidivrl
in
cmpsb
jle
dec
adc
adc
push
cmp
pop
mov
mov
mulb
xor
push
add
xchg
cmpsb
bound
cmp
rcrl
dec
scas
pop
out
test
mov
lss
mov
movsb
incb
jge
in
popf
pop
or
jp
jnp
jg,pn
sbb
push
lcall
cs
push
jl
into
sub
stc
mov
lret
mov
ror
dec
and
cmc
dec
cmp
push
mov
xchg
scas
sbb
nop
repz
push
add
inc
mov
andb
in
sbb
or
add
pop
hlt
stc
and
into
pop
fs
cmp
int
hlt
xchg
mov
or
daa
gs
movl
cmp
shr
fs
and
addb
lcall
fstpl
loope
gs
or
mov
jg
mov
pop
push
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
ja
test
lds
add
sub
inc
add
push
call
scas
loopne
jmp
push
call
dec
adc
jg
lahf
call
cmpsb
adc
pop
pop
jmp
add
jo
lret
pusha
jmp
call
add
std
cmp
push
mov
and
mov
call
lea
ja
jmp
xchg
xchg
fistps
cwtl
in
or
and
call
imul
mov
cmp
adc
jmp
daa
xchg
cld
xchg
mov
xlat
jle
adc
add
int
je
cli
ret
cld
mov
decl
xchg
scas
inc
sti
ds
cwtl
mov
pop
xchg
cmp
cmpsb
nop
fcoms
mov
pop
pop
repz
les
mov
add
mov
shrb
rorb
jl
jmp
sbb
add
push
call
xchg
mov
push
call
push
cltd
clc
dec
push
mov
lahf
lcall
rcrl
clc
push
rcl
daa
mov
push
mov
pop
push
filds
xor
lret
lock
push
clc
dec
adc
cli
test
pop
bound
cmp
inc
and
test
sahf
jecxz
out
add
cmp
pop
fdivrl
enter
pop
imul
in
sbb
mov
mov
pushf
decl
pop
jp
sarb
imul
or
rcrl
or
js
shrl
cmp
mov
adc
loope
push
call
sub
fldcw
addb
add
call
mov
clc
sub
jb
or
jmp
push
call
icebp
pop
push
call
pop
add
push
les
inc
faddl
sbb
leave
mov
rcrb
pop
scas
lahf
and
push
mov
xrelease
out
test
cmp
sbb
push
mov
test
clc
push
mov
in
jg
out
stc
fwait
pop
dec
fisubl
adc
stos
mov
ret
idiv
scas
fisubrs
imul
pop
imul
in
sub
arpl
xchg
push
sbb
loope
movsl
mov
mov
outsl
icebp
mov
mov
or
dec
ljmp
cmpsb
sbb
loopne
jl
add
push
push
lea
jne
pushf
inc
movw
jmp
sbb
fistpl
lock
btc
cwtl
sub
loope
sbb
addl
fidivrs
push
mov
test
mov
jno
lock
mov
movsb
inc
push
add
sti
mov
add
sbb
xor
push
movsl
inc
and
push
push
lret
add
and
cs
pop
loope
addl
cmc
cmpsb
or
stos
mov
gs
dec
mov
pop
repnz
gs
in
mov
out
add
xchg
movsb
push
cltd
jl
cld
das
or
jb
lock
call
mov
pusha
sbb
call
and
clc
pop
mov
sub
pop
nop
add
or
testb
cmp
lcall
sub
cmpsb
das
cmp
out
stos
or
rcr
mov
jno
loope
cs
stos
cmpsb
ficompl
mov
sub
mov
sub
ficompl
jae
mov
add
out
ficoms
div
or
icebp
mov
pop
inc
mul
sub
mov
test
push
mov
pop
js
aad
inc
aaa
push
jg
fdivrp
cld
push
jmp
fs
mov
ja
jmp
call
xchg
out
mov
fnstenv
mov
push
in
pop
and
lock
test
sbbb
cmc
or
add
ds
xchg
mov
sub
push
xchg
nop
xchg
and
lods
jns
pop
or
popf
outsb
cwtl
stos
in
xor
js
lea
int3
fldcw
pop
dec
loopne
inc
jle
imul
sub
fwait
cmpsb
and
and
jmp
push
pop
fldl
and
push
fnsave
rorl
call
and
sbb
popa
jp
cmpl
push
mov
jae
or
call
pop
in
xchg
pop
mov
fldenv
and
dec
addr16
jnp
or
sti
inc
mov
pop
push
dec
adc
add
loop
mov
aam
orb
ja
lret
aam
cs
in
and
add
cmp
pop
out
push
mov
outsl
mov
call
mov
ljmp
mov
outsl
ljmp
push
add
mulb
and
sbb
jg
aaa
jle
inc
mov
lods
pop
insl
loope
js
jmp
jle
add
iret
repz
movsl
lret
mov
inc
sub
ja
pop
lcall
sahf
rol
sti
inc
enter
dec
cmpsb
test
xor
mov
or
inc
mov
and
test
nop
ds
xor
cmp
lret
push
and
roll
sahf
insb
add
pop
and
inc
pushf
pop
lock
addr16
mov
inc
out
mov
mov
inc
ret
sbb
jne
add
into
inc
xor
mov
mov
push
out
add
sub
in
cld
lea
in
out
clc
sbb
into
lods
jbe
sbb
jbe
bound
and
mov
mov
or
lea
cmp
call
sahf
inc
dec
mov
mov
xchg
dec
movsb
testl
push
xchg
mov
cli
gs
inc
mov
jbe
aam
mov
mov
dec
jne
push
adc
sbb
xchg
jl
call
in
push
testb
pop
insl
iret
jmp
test
daa
and
testb
ss
mov
and
jle
outsl
xchg
adc
outsl
fldt
jne
mov
inc
fisttpl
mov
adc
hlt
mov
or
push
call
cmp
mov
or
mov
jl
fcoms
sbb
cmp
fwait
mov
xor
enter
adc
outsb
int3
or
and
or
rcrl
add
mov
and
add
js
inc
and
nop
mov
nop
xchg
add
popf
add
outsl
mov
fwait
jmp
fisttpl
pop
js
mov
xor
js
mov
sbb
push
ds
in
fistpll
shll
mov
movsbl
setb
movzbl
movb
lahf
lahf
push
pusha
mov
movsbw
lea
pusha
call
rcrb
pop
lock
jmp
add
addr16
shrb
cwtl
jbe
repnz
xor
xor
loopne
out
dec
nop
ljmp
in
xor
cmc
adc
iret
sbb
int3
xchg
mov
jb
stos
scas
movsb
push
sbb
mulb
sahf
jle
int3
fisttps
cmp
lret
cltd
aas
jecxz
lcall
das
pop
inc
mov
das
jmp
hlt
inc
fs
flds
jmp
cld
rorl
cli
sbb
ds
push
call
ljmp
call
daa
movsl
adc
lret
lods
fsub
mov
mov
sub
sub
cmpsb
inc
inc
in
in
xchg
fsubr
out
mov
cmp
hlt
jbe
stos
insb
jns
stc
xor
cmp
jp
test
mov
push
xor
lods
mov
inc
je
and
pusha
insb
cmp
out
or
divl
aad
mov
in
movsl
mov
lock
mov
sqrtps
sahf
pop
xchg
sbb
mov
stos
shlb
mov
or
ret
cltd
rcr
insb
xchg
in
xor
or
cmp
enter
icebp
push
call
and
cmp
inc
pushf
jae
cltd
jle
fstps
into
movl
cltd
loopne
dec
rol
dec
imul
pop
movsl
loop
mov
out
out
cltd
loope
mov
lea
stos
negl
dec
lret
push
out
cwtl
xchg
aas
sbb
mov
repnz
sub
dec
imull
inc
jo
sahf
clc
adc
add
pop
and
sub
jae
pop
cmp
jp
add
push
call
aam
xor
nop
inc
and
fsubrs
lahf
xor
inc
cmpsl
cli
mov
adc
xor
jg
lret
or
jnp
adc
lock
movsb
mov
jecxz
jnp
adc
sti
aad
push
enter
mov
movsl
sub
fs
sub
xchg
ds
test
imul
xchg
or
imul
pop
stc
clc
dec
pop
mov
mov
pop
jb
and
out
call
je
cvtps2pi
in
mov
mov
pop
sahf
push
dec
shlb
add
push
adcl
mov
mov
xchg
faddl
cmpsl
sub
mov
inc
fidivrl
testb
enter
dec
jne
xor
inc
xor
sbb
adc
ficoml
mov
jae
push
mov
cs
jae
das
aad
jns
ljmp
ja
or
or
jg
lret
jae
xchg
mov
inc
rorl
pop
sbb
pop
mov
in
pusha
jp
sbb
in
mov
popa
sbb
sub
xor
push
jle
fmull
call
pop
jb
adc
aad
lret
push
sahf
pusha
xor
mov
push
pop
mov
or
xor
sbb
xor
xchg
xchg
jnp
rcrb
inc
push
jnp
xlat
in
xlat
iret
ljmp
pop
lcall
xor
outsb
sub
int
mov
mov
mov
jb
fisubrl
jecxz
insl
fsubrp
push
jb
jmp
inc
lods
mov
add
call
lods
push
mov
lods
rcrb
movsl
push
les
cmp
bnd
dec
and
pushl
popf
iret
test
pop
jo
mov
push
call
inc
add
fwait
xor
jo
mov
cmp
out
int3
fwait
popa
pop
mull
cmc
or
dec
loope
into
mov
shrl
ds
std
xchg
scas
inc
out
aad
ret
dec
adc
pop
insb
test
adc
mov
xchg
xchg
mov
les
insl
aaa
lahf
ss
jge
and
push
addr16
dec
dec
scas
dec
add
arpl
into
hlt
icebp
inc
repz
and
shll
push
sbb
scas
inc
test
inc
sbb
or
dec
fdivrs
orl
inc
mov
out
test
imul
jo
jbe
pop
push
cs
and
inc
add
pop
dec
xlat
add
lea
pop
adc
out
hlt
fidivl
fistl
rol
loope
or
scas
addb
ret
pop
in
out
hlt
fisubl
lea
inc
enter
adc
iret
cmp
sbb
jp
daa
outsl
cld
aad
test
jnp
std
pusha
les
ljmp
and
pop
aam
std
xchg
mov
mov
add
ret
int
pop
or
mov
pusha
adc
add
xor
das
inc
jmp
arpl
jle
jb
lahf
scas
cmp
mov
pop
ljmp
cli
push
shl
adc
shrb
in
or
pop
jo
aas
popf
ljmp
mov
inc
push
sub
adc
ja,pn
iret
call
fsts
std
push
cmc
xchg
cltd
in
aad
jns
decb
mov
cmpsl
push
cmpsb
das
subl
sbb
xor
push
sub
xchg
loopne
and
and
jle
insl
xchg
loop
add
or
dec
dec
mov
scas
dec
fldcw
inc
outsb
mov
sub
outsb
jae
mov
ds
outsb
mov
sub
add
leave
lock
jns
lea
xchg
mov
mov
imul
sub
sub
cmp
inc
jle
xchg
nop
lock
xchg
inc
jl
or
aas
enter
push
gs
arpl
insb
gs
gs
cmpsl
fnstsw
jmp
test
jecxz
cmp
push
mov
sti
pop
ss
stos
inc
lds
sub
fs
mov
adc
lods
push
sbb
adc
dec
push
mov
clc
je
add
mov
add
mov
cmc
lock
mov
test
push
jo
mov
mov
in
repnz
jg
lea
into
sbb
push
xchg
test
fcomp
test
push
fistl
adcb
test
in
push
mov
loop
cmp
int
or
add
pop
outsb
inc
mov
push
call
add
loope
shll
add
xchg
fistps
push
call
js
add
push
pop
mov
mov
aad
mov
outsb
sbbb
and
pushf
adc
stos
mov
std
stc
pop
mov
adc
lea
and
mov
cmpsb
gs
or
fistps
in
lret
pusha
fwait
arpl
mov
mov
daa
repz
retw
cli
fdivs
and
mov
lret
pop
xchg
mov
inc
mov
popa
aas
dec
cmpl
out
movsl
push
or
shll
outsb
inc
and
push
call
out
sbb
xor
cs
insb
add
add
dec
mov
cmpsl
jb
sbb
mov
movsl
movsl
sub
or
stos
inc
bound
push
sbb
cltd
cmp
and
mov
cmpsl
inc
js
pop
insl
and
push
test
test
pxor
movsb
sub
pop
insl
insb
lahf
and
jg
push
call
movsb
push
call
mov
cs
jecxz
call
stos
repz
and
and
push
insl
or
xchg
pop
mov
dec
or
or
lcall
push
outsl
into
sbb
mov
jns
lahf
mov
mov
rolb
push
int
dec
dec
or
inc
xor
or
fcoml
repnz
mov
incb
rcrb
fistl
test
stos
xor
sahf
jmp
loope
xor
iret
xlat
and
mov
es
cmp
popl
mov
loopne
fwait
mov
dec
stos
sub
xchg
sub
inc
out
pop
fsubl
and
mov
out
out
mov
mov
and
pop
and
cmp
or
mov
add
pusha
stc
push
call
jge
add
pop
imul
test
xlat
jno
pop
rcl
sub
jno
enter
hlt
pop
in
jo
sbb
mov
pop
insb
movsb
push
cmp
mov
scas
fisubs
repz
test
hlt
or
xor
pop
push
call
jnp
xlat
lahf
movl
pushl
popl
bswap
mov
pushl
not
pop
movl
sete
lea
mov
movb
pusha
movl
jmp
push
call
out
inc
fcomi
mov
mov
lods
push
pop
test
js
mov
sub
inc
in
repnz
out
jmp
pop
test
pusha
pop
jo
fdivrl
std
leave
ret
mov
xchg
xchg
pushf
rolb
pop
ss
stos
push
jbe
cmp
ljmp
inc
or
sbb
inc
std
nop
vmaxps
jno
xor
mov
or
insl
incb
sub
xlat
mov
scas
mov
or
adc
and
mov
lret
pusha
pushw
popfw
pushf
push
jmp
push
call
push
mov
pop
bswap
call
inc
divb
int
aam
mov
pop
adc
stc
out
push
dec
arpl
cwtl
sti
shlb
sbb
mov
pop
fwait
insb
xchg
rcr
dec
outsl
mov
pushf
shlb
cs
addr16
xor
cli
xchg
or
dec
mov
lods
push
nop
inc
jnp
adc
pop
imul
stos
push
mov
mov
jp
cmp
adc
mov
ret
or
push
mov
daa
iret
lcall
mov
out
cmp
call
dec
mov
jo
mov
xchg
imul
push
pop
inc
bound
mov
aad
scas
ret
push
iret
loop
negb
mov
push
cmp
es
adc
pop
out
xor
idiv
punpckldq
xchg
lcall
jne
test
sub
jecxz
arpl
mov
clc
outsl
in
sub
pop
pushf
mov
outsl
mov
mov
xlat
data16
movsl
out
shll
mov
imul
mov
test
xor
js
jmp
or
jmp
sub
cltd
push
test
add
jp
mov
inc
mov
arpl
jno
adc
test
sbb
pop
dec
jp
inc
gs
cld
bound
test
pop
idivl
sahf
cmpsl
repnz
xchg
lcall
xchg
xchg
mov
jle
es
cltd
iret
add
jne
or
imul
imul
xor
pop
cltd
push
and
movsl
dec
push
iret
insl
sub
or
repnz
shlb
xor
inc
addr16
int3
in
sti
xor
test
lods
iret
xorb
xor
bound
add
fnstenv
shll
sbb
addr16
movsl
repz
loop
or
ja
mov
enter
pop
xor
das
dec
pop
pop
inc
les
fcoms
es
popa
or
nop
jnp
imull
xor
cmp
add
add
fiaddl
sbb
or
pop
and
mov
ds
jmp
roll
fnstenv
fiadds
dec
imul
test
push
jmp
lds
push
lock
sbb
xor
jg
jnp
aam
ret
inc
insl
imul
movsl
add
iret
stos
insl
hlt
lea
push
push
and
sbb
in
mov
dec
sub
daa
inc
rorl
push
inc
mov
jbe
jg
loopne
outsl
stos
adc
lods
xor
pushf
pop
dec
jne
dec
add
or
jbe
xchg
rolb
jo
add
inc
das
test
aaa
push
repz
jae
sbb
fs
cmpsb
sub
add
push
mov
fiaddl
in
adc
jmp
and
mov
inc
pop
lock
xor
sbb
out
and
inc
mov
aaa
jb
push
cmpsl
fnstcw
rorl
pop
push
mulb
jge
movsl
pop
std
and
sub
loopne
lret
or
inc
aaa
dec
out
xor
add
orb
lds
push
pop
pop
sub
mov
push
pop
rol
mov
loope
push
push
sbb
xor
sub
push
mov
push
push
rcrb
pop
movsl
rcl
push
hlt
sub
or
int
xor
sub
add
sti
or
jae
jl
pop
ss
inc
pop
popa
insb
and
stos
psubw
sti
push
jo
mov
pop
iretw
cmp
lea
ja
clc
call
push
inc
jmp
push
call
or
push
call
outsb
add
call
push
call
pop
mov
dec
sub
dec
add
push
push
call
sbb
dec
dec
push
call
popa
stc
pop
cs
shlb
jge
adc
pushf
mov
fsubs
out
lock
mov
andb
outsl
loopne
add
push
movsb
es
mov
inc
and
push
cmp
mov
mov
movsb
cs
xor
out
xchg
addb
fwait
inc
or
cmpsb
adc
add
mov
dec
sbb
loop
lods
xchg
repz
fst
ret
addr16
mov
rolb
in
mov
cwtl
adc
pop
data16
or
insb
call
mov
lcall
je
push
mov
sbb
cmpsb
pop
pop
std
xor
cmpsl
popa
jb
pop
repnz
pop
scas
lods
and
xchg
mov
dec
cld
in
in
jecxz
in
lcall
sbb
add
add
cwtl
inc
orb
or
movsb
test
dec
jp
loope
daa
mov
scas
inc
pop
movsl
or
jmp
aas
fstp
jbe
adc
sbb
dec
cli
subb
leave
mov
imul
adc
pop
fs
les
popf
iret
push
or
add
lcall
in
les
inc
das
fidivl
scas
sbb
loop
cmpsl
pop
test
xchg
sbb
adc
pop
mov
out
mov
mov
scas
mov
in
imul
jnp
sub
mov
cmpb
in
dec
movsb
sbb
and
inc
adc
push
mov
dec
inc
push
jmp
jmp
pop
fbstp
sbb
mov
and
pop
gs
mov
mov
ja
push
ss
rcr
push
fsub
xor
cmpsb
mov
inc
add
sbb
jle
addl
or
stos
xchg
inc
insl
xchg
scas
xchg
in
dec
lds
fcomps
push
inc
popf
pusha
mov
xchg
jg
cli
fdivrl
bound
mov
out
lds
sub
and
xchg
jl
and
pop
pushf
int
add
and
xchg
xchg
sbb
fnstcw
jge
push
bound
es
imul
or
and
or
jg,pn
stc
call
fs
call
cmp
or
mov
add
jge
jmp
aaa
push
cmp
adc
pusha
push
jmp
xchg
push
cmpsb
sub
dec
int3
push
xorl
add
pcmpgtd
sbb
lds
or
mov
lods
push
push
dec
insl
jp
hlt
pusha
xchg
mov
xchg
pop
push
adc
xor
outsl
sbb
es
pop
aam
xchg
shr
jno
lds
mov
ret
dec
and
sbb
hlt
inc
or
lcall
fsubr
es
add
adc
fs
jne
push
movb
setno
bswap
lahf
mov
lea
movzbw
pushf
movsbl
lea
call
cmc
cmpb
push
mov
inc
sarl
sub
ds
jo
pop
cmc
lea
xchg
pop
sub
sbb
inc
roll
pop
jl
mov
stc
mov
pop
mov
int3
push
jl
jnp
das
pop
sbb
and
mov
int3
leave
sbb
jg
add
mov
lds
cmp
xchg
xor
add
mull
dec
pushf
push
stos
inc
add
adc
aad
pop
arpl
push
xchg
idivb
ljmp
jmp
nopl
lret
pop
es
or
in
outsl
mov
sbb
push
mov
mov
push
push
std
jns
rolb
test
xchg
clc
mov
gs
std
jp
jns
ja
imul
inc
pop
ret
pop
mov
sub
dec
popf
cmc
ds
xor
nop
sahf
mov
dec
xchg
movsl
sbb
insb
fucomp
dec
fwait
pop
mov
xchg
adc
sub
pop
bound
sbb
mov
mov
xchg
out
dec
enterw
push
jp
push
lcall
xchg
mov
leave
int
adc
push
shll
in
cmpsl
jno
rcrl
pop
fsubrs
lret
aad
loope,pt
lock
pop
es
pop
lock
cmp
dec
aad
jl
or
in
aad
leave
mov
xor
add
add
test
cmp
and
inc
shll
adcb
or
push
call
imul
lock
mov
xchg
xchg
out
mov
cwtl
sahf
ror
dec
fcmovnb
movsl
dec
sub
add
add
jg
das
outsb
push
stc
cmc
xchg
cmp
add
push
loope
or
mov
push
cmpsl
push
outsb
cmp
leave
xchg
cmp
lret
cmp
repz
inc
into
das
movsl
inc
mov
cmp
icebp
inc
and
cmp
lods
ljmp
push
hlt
adc
dec
sbb
or
jnp
mov
dec
fcmovnb
pusha
fldenv
pop
mov
pop
pusha
int
jg
jne
iret
push
pop
popa
fmull
pop
shl
clc
test
arpl
stos
cli
xchg
fsubrl
pop
aam
cltd
sarl
adc
movsb
mov
fsubrl
sti
and
in
sti
ljmp
push
repz
add
filds
dec
cmpsl
push
jnp,pt
int
lea
mov
sbb
pop
xlat
jo
push
adc
push
jle
imulb
shrl
jge
jbe
jb
imul
add
dec
or
push
imul
adc
inc
cmc
popf
pop
or
xchg
mov
pop
cwtl
popa
pop
jle
sahf
fildl
ljmp
cmpsb
and
jb
add
mov
pop
pop
notb
xor
call
adc
push
call
pop
dec
fldl
adc
out
mov
cmpsl
xor
jecxz
jl
xchg
add
insb
sti
mov
fs
mov
nop
shrl
jg
cld
js
xchg
mov
loope
movzbl
or
cmp
cmp
jg
xchg
sbb
jnp
imul
sub
or
inc
sbb
jmp
dec
rorb
mov
pusha
and
lea
ja
rcl
clc
rcr
neg
sub
clc
not
rol
add
shl
add
and
bts
mov
dec
call
call
movl
mov
push
mov
pusha
mov
mov
pushl
ret
stc
xor
push
call
sbbl
pop
iret
adc
je
xor
je
test
xor
scas
mov
mov
enter
les
daa
std
push
leave
pop
cld
cmp
pop
sub
cmp
push
inc
mov
movsb
mov
jmp
in
fsub
xor
mov
hlt
jb
insb
fucom
dec
mov
xor
leave
sub
loope
notl
fldl
xor
insl
test
fcompl
clc
sahf
icebp
jae
pop
adc
imul
or
pop
sub
jp
test
mov
jb
jle
push
dec
call
pushf
mov
sub
sti
lods
je
fsubrl
shr
in
mov
push
rclb
adc
pop
lods
cmpsb
jg
shlb
jle
push
push
daa
sbb
push
cltd
stc
or
dec
xor
loop
jmp
xchg
negl
mov
add
cmp
mov
mov
or
jae
mov
or
mov
jecxz
mov
fstpl
shr
fisubrs
lock
jnp
dec
adc
in
into
popf
mov
subb
aad
insl
sbb
lock
sbb
mov
pop
inc
mov
pop
lret
aas
add
stc
lock
loop
out
xor
in
sub
cltd
cli
pop
jae
mov
adc
dec
push
std
pop
xchg
ljmp
es
cs
pusha
push
cs
int3
pop
mov
mov
arpl
add
ja
inc
sbb
jne
rcr
mov
ss
dec
or
lea
jle
mov
pop
pop
and
bound
mov
xor
cmc
jno
sub
rclb
ljmp
dec
or
pop
mov
nop
adc
jbe
sub
in
cli
push
testb
xchg
inc
fsub
sub
pop
cli
inc
mov
cmp
xchg
sub
and
pop
insl
jmp
std
lret
int3
stos
std
inc
add
xor
movsb
outsb
sti
cmp
and
test
or
shll
mov
push
mov
cwtl
pop
dec
lock
jp
insl
xchg
mov
js
dec
xchg
imull
ja
adc
xchg
jne
jo
mov
aad
adc
push
bound
mov
pop
cmpsb
ret
inc
ret
les
inc
loop
push
dec
xor
stos
mov
lret
imul
enter
nop
daa
icebp
stos
ss
or
in
dec
outsl
sub
cs
dec
int
mov
add
inc
cld
cmpsb
jne
out
enter
js
in
push
pop
dec
mov
nop
mov
add
repnz
nop
and
mov
dec
scas
int
in
gs
cld
out
in
ror
sub
stos
testb
hlt
addr16
repnz
icebp
insb
lock
call
scas
in
in
jmp
ljmp
out
in
in
jecxz
loop
loope
add
pop
std
scas
cld
in
sti
addr16
pop
stc
lods
clc
call
scas
hlt
in
repz
nop
outsl
in
mov
les
pop
mov
in
inc
out
xor
mov
dec
bound
mov
subb
incl
decb
sarb
or
icebp
mov
loope
jns
decl
inc
insb
dec
add
outsb
lock
jb
cltd
icebp
pop
mov
fdiv
clc
shrb
das
in
pandn
dec
cli
mov
pop
sti
xchg
shrb
dec
dec
scas
jmp
imul
lret
bound
pop
ljmp
movq
add
sub
arpl
or
push
das
adc
push
push
adc
or
sbb
add
imulb
jl
bound
jno
outsl
inc
lock
addr16
jmp
bound
scas
in
cld
addr16
pop
clc
lods
imul
hlt
jb
lock
pusha
out
scas
in
in
imul
lock
out
push
dec
add
adc
out
daa
push
ret
std
in
es
idivb
shrb
mov
and
push
mov
popl
mov
fldt
push
mov
jne
inc
push
outsl
shr
add
stc
dec
in
test
xor
iret
dec
xchg
and
cmpsb
and
std
imulb
and
pop
cmpsb
jno
test
add
testl
mov
outsb
in
out
js
dec
bound
dec
lret
bound
orb
jle
push
fdivp
cli
insb
les
inc
insb
outsb
jne
js
pop
xorb
mov
imul
pop
jl
cld
dec
repz
dec
scas
les
dec
mov
enterw
push
sbbb
jge
out
sti
pop
outsb
scas
clc
in
scas
addr16
dec
lods
repz
nop
insb
lock
mov
dec
insl
lods
dec
in
call
scas
iret
in
bound
pop
add
jp
nop
in
mull
pop
jae
insl
insb
outsl
mov
lock
push
sub
push
call
jb
sbb
jg
jle
call
scas
stc
in
shlb
pop
das
lods
hlt
call
je
xchg
pop
outsl
jnp
ja
pop
jmp
pusha
lahf
icebp
rcrb
aas
call
scas
pop
in
jbe
mov
je
pusha
mov
addr16
imull
xor
fsubrl
ljmp
jnp
mov
jmp
lret
testl
dec
mov
jle
rcrl
lods
insl
insb
jle
out
es
mov
mov
lods
loope
mov
aad
iret
cmp
jne
out
inc
mov
pop
in
in
add
aaa
repz
insb
lock
enter
push
push
call
pop
inc
ljmp
addr16
in
jecxz
loop
pop
out
enter
cmp
mov
xor
add
outsl
jbe
pop
xchg
cmc
dec
dec
rorb
mov
mov
outsl
jge
add
arpl
outsl
mov
stos
dec
mov
outsl
out
in
push
ds
push
mov
pop
outsb
ja
aam
dec
popf
imul
dec
outsb
iret
stos
outsl
cs
in
nop
ds
mov
hlt
psrad
lods
push
dec
into
outsl
pop
sub
mov
data16
std
dec
call
scas
stc
in
mulb
pop
clc
lods
cmc
in
jb
jae
icebp
dec
out
pusha
fs
stc
imul
popa
outsb
ljmp
sti
movsl
xor
pop
outsl
mov
es
shrb
jo
push
mov
les
mov
stc
dec
add
ja
pop
dec
imull
outsl
sbb
scas
push
call
lods
call
scas
cli
in
clc
negl
lods
jb
jnp
outsb
scas
in
in
jmp
sub
push
js
mov
outsl
dec
push
push
jl
sti
lods
sahf
push
call
nop
jbe
mov
dec
clc
outsl
push
in
out
push
pop
mov
mov
inc
jle
out
jne
fs
and
data16
in
push
in
dec
shll
pop
icebp
lods
callw
pop
push
scas
loop
jno
jg
adc
shrb
jne
xchg
lods
jae
mov
pop
push
dec
outsb
les
adc
lods
xor
out
pop
in
repz
bound
pop
subb
push
sbb
and
hlt
dec
ljmp
jle
dec
mov
push
ja
cmp
jns
cbtw
daa
dec
nop
popf
push
mov
xchg
jg
mov
insl
mov
jnp
push
inc
outsl
popa
jne
scas
push
push
into
bound
outsl
leave
icebp
fwait
bound
inc
movsl
inc
idivb
hlt
push
movsl
lock
movsl
call
push
jmp
jge
out
loop
es
lock
mov
outsl
rcll
clc
dec
das
call
insl
aas
insl
push
mov
mov
imul
dec
lahf
lods
mov
xchg
scas
icebp
in
shll
pop
inc
lods
mov
lock
scas
loopne
mov
enter
enter
aas
test
in
in
jg
movsl
ljmp
repz
imul
in
arpl
push
out
add
cmp
sub
jl
insb
and
dec
pop
imul
in
xchg
push
dec
pop
addr16
jle
jg
pop
icebp
lods
jno
jb
pop
js
subb
test
jb
jo
jmp
xchg
push
sub
or
jp
jmp
stc
jo
mov
push
sbb
insb
je
jbe
repz
jo
mov
jo
jl
jle
sti
jecxz
jo
pushf
test
jo
outsl
ja
jno
clc
ljmp
movhps
jo
jg
jns
add
cli
jo
lahf
xchg
jo
imul
in
hlt
out
jo
mov
or
jge
cld
in
jo
fwait
sbbl
add
cs
push
pop
dec
push
iret
xlat
leave
jo
shrb
jo
pusha
dec
pop
inc
ffreep
fnstenv
lods
mov
mov
xor
xor
push
dec
push
lret
ror
jo
mov
and
and
inc
pop
inc
fcmovnb
fnsave
scas
mov
mov
aaa
sub
dec
push
dec
push
rcr
lret
mov
cmpl
pop
inc
loopne
fcmovb
stos
jo
lods
mov
xor
dec
push
int3
aam
mov
cmp
cmp
pop
inc
fadd
faddp
push
pop
push
data16
gs
test
js
inc
stos
pushf
lods
jnp
dec
in
dec
xor
outsb
sbb
lea
insl
imul
movsb
outsb
add
or
xor
mov
mov
push
out
outsb
shrb
or
jmp
out
in
sbb
ret
jnp
bound
outsb
imul
jb
adc
dec
xor
add
push
pop
cmp
bnd
dec
jecxz
movsb
jmp
jo
sbb
js
in
push
jb
nop
insb
pop
andl
jnp
in
push
mov
dec
loop
scas
arpl
mov
mov
popa
jns
popl
call
dec
pop
imul
add
sub
jg
setl
call
clc
stos
out
dec
imul
addr16
cmp
push
arpl
cmc
dec
sub
int3
dec
jmp
mov
pop
mov
or
or
sub
pop
jmp
or
scas
sub
or
xchg
aam
stos
loop
pop
lock
test
insl
iret
cmp
call
mov
es
pusha
gs
scas
out
int3
cmp
call
pop
out
out
push
in
inc
inc
in
popa
shrb
ljmp
cmp
imul
movsb
push
bound
mov
test
scas
out
or
out
pop
lock
scas
mov
mov
in
jle
fnstenv
in
jbe
mov
fiadds
sbb
or
int
or
rcll
xchg
and
rorl
dec
jno
dec
jo
dec
das
mov
shrd
stos
pusha
pop
pop
outsl
mov
pop
pop
into
cmpsb
push
jb
out
mov
or
sub
imul
stos
and
es
inc
jo
xchg
and
movsl
test
les
add
jo
and
and
popa
inc
jo
mov
jg
jo
mov
sbb
mov
sbb
pop
mov
cmp
jns
mov
jo
pop
ja
mov
xchg
divb
xor
push
mov
xchg
hlt
aam
adc
mov
push
mov
repnz
adc
push
mov
or
lcall
push
cmpb
cmove
lods
jo
out
test
fidivl
dec
mov
push
pop
in
scas
ljmp
arpl
add
rcr
test
jbe
aam
jl
test
aam
imul
lods
dec
push
imul
addr16
pushf
data16
sbb
dec
bound
jmp
call
clc
fsubrs
bound
mov
add
inc
dec
inc
frstor
inc
dec
mov
lock
inc
push
and
jbe
pop
addl
mov
pop
in
insb
mov
pop
sti
mov
data16
gs
push
cli
loop
add
cld
or
xchg
std
jle
dec
loope
bound
out
dec
cmc
jg
dec
jmp
fistl
movsl
addr16
imul
dec
jns
jbe
je
jb
lock
repnz
popa
lods
jle
cld
cli
pop
ja
je
jno
outsl
adc
lods
imul
push
insl
sub
cmp
jmp
dec
in
testb
push
outsb
push
std
sub
cmp
dec
addr16
iret
lods
cmc
call
dec
outsl
push
mov
sub
dec
call
scas
fs
or
lods
jg
lahf
add
pop
into
lods
js
sub
repz
das
in
mov
outsl
call
jb
out
xchg
dec
imul
in
loope
jge
cli
pop
imull
insb
imul
addr16
js
pop
icebp
dec
in
aad
jmp
pop
jge
cli
call
xor
push
dec
call
addr16
pop
jp
jbe
jae
push
scas
in
loope
std
pop
js
hlt
sub
pop
dec
call
scas
jp
jbe
repz
push
dec
pop
dec
call
jge
jns
imul
bnd
pop
xor
jl
or
cld
icebp
dec
aam
iret
sub
jmp
cmpsb
and
movsb
push
cmp
mov
bound
mov
xchg
imul
cmpsb
inc
insb
outsl
xchg
testb
mov
lock
scas
div
movsl
dec
movsb
sti
sub
jne
das
cmp
fcoms
jecxz
xchg
insb
sub
cmp
in
inc
push
stos
bound
test
pop
insl
jp
dec
js
divl
hlt
scas
repnz
lock
sbb
push
jecxz
adc
in
clc
sarb
repnz
loope
mov
dec
decb
push
xchg
std
stos
inc
cld
dec
sti
in
cli
addr16
pop
imull
repz
stc
lods
in
cmpsb
lock
ljmp
in
in
jecxz
loop
call
add
rcrb
lret
test
popa
sub
call
or
outsb
push
insl
hlt
in
scas
insl
shrb
insl
jmp
or
lock
cs
jbe
lock
repnz
pmaxsw
popa
dec
push
fisttpl
inc
mov
jle
dec
ja
das
cli
sti
outsl
dec
rorb
lock
data16
and
dec
in
cs
test
add
movsb
inc
mov
andb
les
insb
jae
addr16
fwait
lock
and
cmp
jb
sub
insl
mov
fsubp
jmp
das
inc
and
test
sbb
add
movsb
cli
dec
and
test
ret
bound
jb
not
and
mov
scas
xor
inc
ud2
std
or
notl
dec
je
lods
push
cmp
loope
hlt
and
mov
mov
outsl
jns
out
in
shr
outsb
or
imul
rcrl
lock
fsts
dec
out
sbbb
ljmp
sahf
out
in
dec
outsb
sub
out
xor
dec
negl
push
xor
pop
cs
mov
js
jbe
mov
gs
iret
icebp
sub
aam
cmc
decl
dec
push
stos
movsb
jecxz
in
mov
orb
pushf
pop
cwtl
lods
xchg
sarb
push
test
mov
push
pop
rclb
out
xor
jmp
psrlw
mov
clc
dec
addr16
pop
inc
lods
pusha
enter
loope
aaa
lahf
push
or
dec
outsl
in
out
outsb
pop
insl
lods
insb
call
test
jle
pop
scas
clc
pop
das
sub
fdivr
dec
jnp
sti
cmpsb
jp
sub
iret
cmp
cmp
pop
out
lcall
out
imul
jmp
pop
jecxz
repz
in
addr16
pop
in
cmc
call
scas
icebp
in
mov
rcrb
mov
movsb
scas
mov
scas
addr16
call
scas
mov
scas
addr16
call
scas
mov
lods
addr16
call
scas
mov
das
addr16
pop
daa
lods
aaa
call
scas
xor
sub
lods
xor
and
ds
lods
ss
scas
xor
sub
cmp
and
xor
sub
pop
xor
pusha
pop
dec
lods
pop
call
scas
push
in
dec
addr16
pop
inc
lods
push
call
scas
push
in
dec
addr16
pop
inc
lods
push
call
scas
push
in
dec
addr16
pop
inc
lods
push
call
scas
push
in
shlb
pop
enter
int3
fcompl
scas
aam
into
ficomps
lods
call
scas
shr
iret
fistps
lods
xlat
call
scas
shr
int
fstpl
lods
aad
leave
fstps
scas
ror
mov
mov
mov
cld
addr16
mov
addr16
xchg
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
addr16
mov
sbb
lahf
cld
adc
lahf
cld
addr16
cld
addr16
cld
sbb
lahf
cld
adc
lahf
cld
addr16
mov
addr16
mov
sbb
lahf
cld
adc
lahf
cld
addr16
call
adc
call
sbb
and
test
in
outsb
pop
data16
push
bound
scas
imul
insl
pop
lods
imul
scas
in
in
in
out
pop
out
ljmp
dec
mov
scas
mov
pushf
test
xchg
ljmp
adc
or
out
pop
dec
out
lods
in
call
scas
lods
in
das
addr16
call
scas
dec
imul
int
nop
mov
lods
call
cmpsl
or
mov
outsl
mov
mov
iret
push
cs
push
or
mov
mov
ja
into
pop
sub
loope
push
pop
lods
icebp
lea
hlt
in
adc
and
fsubs
cmpsl
in
outsb
push
pop
dec
ja
hlt
mov
ja
push
or
dec
or
andb
in
push
sub
jmp
loope
outsb
jne
insl
sbb
insb
add
imul
jge
bound
dec
call
or
pop
loop
das
jecxz
out
inc
clc
fsubrs
push
addr16
mov
adc
xor
add
dec
cmc
les
scas
rorb
iret
mov
push
push
jle
xorb
cli
loope
pop
repz
aam
push
popa
ds
imul
push
rclb
stos
out
mov
push
push
and
loop
xchg
es
dec
movl
sbb
push
ja
dec
bnd
jmp
lcall
add
out
dec
outsl
ja
call
jg
fdivl
sti
inc
es
xchg
imul
ret
inc
bound
dec
dec
in
cmpsb
outsl
in
pusha
sti
xor
addr16
dec
pop
in
or
inc
cmpb
insl
add
sbb
out
out
inc
out
sub
cli
jmp
outsl
testl
incb
fmuls
pop
inc
cli
inc
clc
lahf
inc
subb
mov
mov
pop
hlt
mov
pop
jmp
jmp
dec
lock
in
sahf
std
mov
in
dec
sahf
jne
mov
in
dec
clc
inc
jb
mov
jp
fisttpll
stos
dec
stc
out
jg
clc
dec
insb
std
sahf
in
jge
inc
out
outsl
lret
and
dec
and
dec
out
dec
movsl
divl
es
jns
stos
dec
in
push
out
or
pop
dec
jmp
hlt
daa
out
mulb
stc
out
inc
in
dec
popa
dec
repz
cmpsl
jae
jnp
in
ljmp
jge
stos
push
add
call
stc
out
clc
not
dec
jecxz
test
dec
in
lock
dec
in
mov
mov
repz
out
cld
dec
out
mov
out
jle
push
sti
enter
cmpsb
mov
push
imulb
lock
stos
jae
jb
inc
repnz
outsb
xor
stos
push
cld
inc
out
add
call
repz
mov
jb
dec
add
outsl
mov
sahf
sti
loope
ja
ljmp
and
dec
and
dec
jmp
out
arpl
loop
dec
cmc
out
add
mov
push
repnz
dec
stos
dec
in
bound
in
clc
dec
dec
insb
popf
insb
cmc
call
sbb
out
cmp
stc
pop
and
hlt
dec
out
jmp
out
negl
dec
jecxz
call
out
pop
jle
pop
dec
in
inc
out
dec
jg
call
jno
pusha
repz
jl
repnz
in
in
std
mov
je
insb
testl
sti
inc
icebp
cmc
aad
inc
outsb
icebp
iret
jmp
xchg
mov
in
jns
aad
push
mov
dec
out
and
decb
cld
in
out
xchg
pushl
loop
rep
xchg
bnd
jp
gs
jecxz
js
cld
scas
cli
fucomip
dec
or
jecxz
dec
jne
pop
in
imul
pop
dec
incl
jge
cli
dec
in
pop
repnz
lcall
stos
inc
stc
inc
insw
xchg
jbe
pusha
out
dec
cmc
cmp
icebp
dec
and
pop
in
dec
inc
div
in
jg
pop
insb
inc
hlt
cmp
stc
inc
cli
mov
inc
out
mov
stos
push
decl
ljmp
cmc
adc
mov
stos
dec
jbe
jecxz
repnz
das
decb
or
cmpsl
push
out
pop
dec
in
pop
pusha
insb
dec
jno
lock
cmpsb
cmp
push
sti
lods
pop
loop
cli
dec
cmpsb
push
in
jb
jp
pop
pop
repz
cld
pop
inc
sti
dec
icebp
sahf
dec
jg
jmp
in
idivl
add
fcoms
popa
cmp
jg
jae
hlt
add
jmp
push
pop
jle
inc
jecxz
jmp
dec
repnz
cmc
int3
std
out
jecxz
in
testl
testb
loop
dec
negl
push
push
stc
dec
out
in
aaa
pop
push
jns
out
sti
jae
std
out
out
pop
inc
clc
popf
inc
testl
mov
outsl
clc
jge
push
jle
xchg
and
jle
std
pop
inc
jne
pusha
lahf
cmp
testl
inc
dec
jmp
inc
fs
in
stos
inc
cmc
pop
out
std
sti
pop
dec
loop
js
pop
cld
dec
in
pop
pop
decl
xchg
mov
dec
ja
pop
xchg
inc
ljmp
stc
mov
gs
jp
adc
int
ljmp
jge
add
lcall
js
mov
push
out
cld
aaa
add
jmp
mov
ror
ds
push
in
insl
stc
pop
out
cld
aaa
mov
fidivs
jnp
ret
add
xor
jecxz
test
into
push
mov
push
mov
loop
popf
daa
xchg
mov
push
into
sub
clc
dec
pusha
add
pop
ja
jp
stos
mov
insb
lds
rorl
jb
inc
pop
inc
cmp
mov
xchg
add
inc
int
or
jae
fcompl
fsubl
insl
imul
xchg
arpl
imul
xchg
xchg
sbb
mov
pop
xlat
into
xchg
fistpll
jle
sbb
xchg
jo
or
int
adc
fwait
int
aad
and
inc
pushf
push
cld
dec
dec
scas
xchg
mov
int3
arpl
pop
out
mov
ret
cmc
push
sub
incl
sub
fwait
incb
out
adc
mov
enter
movsb
mov
or
mov
push
call
xchg
imul
add
cltd
pop
daa
inc
xor
inc
sbb
xor
jl
cmp
pop
dec
or
mov
add
and
cmp
inc
pusha
fsts
adc
or
dec
cli
add
movsb
lods
mov
mov
sub
xor
sub
and
push
psubd
insl
mov
sub
ret
sub
insb
cltd
std
or
lock
and
lcall
cmp
lods
adcb
xchg
jmp
push
call
inc
xor
sub
or
and
mov
pop
mov
sarb
jnp
mov
cmpsb
inc
rorl
add
jecxz
leave
jno
mov
filds
outsl
outsb
xchg
jmp
xchg
add
fdiv
lret
jno
fdivp
xchg
push
imul
mov
into
rcll
inc
sahf
cmp
cmp
lock
mov
sub
mov
push
nop
fisttpl
insl
pusha
imul
push
sub
aaa
inc
jl
fs
pop
inc
dec
mov
inc
out
pushf
test
arpl
inc
push
pop
insl
sub
out
in
push
out
push
push
sbb
dec
mov
pop
stos
sbb
movsl
ret
pop
sub
data16
mov
dec
mov
cmc
inc
fcmovnb
add
out
pop
lods
dec
clc
and
arpl
data16
mov
imul
dec
xchg
stos
fdivrl
jns
sub
icebp
jp
cs
add
jo
pop
loop
sub
pop
dec
push
xor
nop
in
xchg
cmp
insb
or
pop
cmpsl
cs
pop
inc
and
push
mov
pushf
push
call
hlt
jbe
ss
jo
adc
cli
or
fs
cwtl
mov
and
cmc
call
movsb
in
mov
or
imul
pop
mov
cwtl
fs
mov
in
nop
mov
add
fimuls
orb
or
xchg
xchg
or
clc
lock
pop
outsb
fidivl
scas
lock
into
ljmp
in
xor
jg
inc
aaa
sahf
cwtl
inc
out
adc
scas
shl
mov
pop
inc
fldt
push
call
cmc
cmpsb
dec
push
call
ss
cmp
push
call
inc
sub
mov
xlat
push
sub
cltd
pop
cmc
mov
add
int3
pop
out
roll
inc
ja
out
fcmovb
repnz
xlat
leave
dec
dec
sbb
pop
jnp
daa
push
outsb
ss
jge
out
imul
pushf
in
add
dec
outsl
test
test
and
adc
inc
xchg
repz
fs
and
push
push
add
stos
xor
dec
cmp
push
or
push
movsl
movsb
dec
stc
sub
jp
pusha
cmc
not
pushf
test
bt
test
xor
cmc
mov
pushf
mov
rol
test
push
sub
clc
movb
clc
ror
bt
call
push
call
xchg
cmpsl
push
call
adc
push
call
out
xor
adc
xchg
cld
out
cmc
sub
xchg
hlt
sbb
inc
nop
sti
xor
inc
cmp
sub
inc
repnz
add
shrl
stos
pop
jge
faddl
ljmp
inc
jne
outsb
mov
add
xor
jp
and
pop
int
pop
and
cmpsb
lods
and
daa
fnclex
jne
fidivl
xchg
cltd
pop
insl
push
arpl
mov
ss
pop
sbb
stos
loope
push
dec
push
out
pop
pop
sarb
cmp
outsb
jo
shrb
inc
leave
pushf
stc
push
call
push
push
call
rclb
push
call
jnp
pop
scas
lea
jae
push
sub
push
lea
call
pushf
movb
lea
jae
stc
clc
xor
jmp
push
push
pop
adc
stos
adc
inc
fwait
push
lea
pop
dec
subl
ja
pop
push
scas
fisubl
jb
gs
ret
cli
das
rcr
sbb
lds
sbb
dec
adc
jae
pop
mov
test
and
sbb
fmuls
and
jle
insl
lcall
mov
pop
sub
add
add
icebp
dec
outsl
jo
movsb
ds
popf
xchg
jge
andb
xchg
xor
adc
xchg
std
mov
or
jns
ss
or
cmpsl
leave
stc
clc
cmp
test
add
pushf
push
lea
jae
je
pushf
test
jmp
push
call
pop
push
call
sub
jo
and
out
or
pop
aaa
aad
add
fldenv
push
rorl
mov
scas
insb
cmpsl
scas
es
jecxz
jo
fnstcw
in
cmp
mov
and
cmp
inc
movsb
push
shll
shlb
dec
adc
rorb
jg
orl
jo
sub
pop
outsl
mov
pop
xor
dec
fldlg2
dec
or
popa
push
and
cltd
call
inc
jecxz
sbb
ss
iret
xor
cmp
or
imul
sub
push
lret
mov
outsb
fdivr
pop
cmp
dec
jmp
sbb
ds
push
lds
pop
mov
call
mov
arpl
rorl
ror
pop
adc
mov
rorl
into
adc
movsl
into
lahf
icebp
lods
pop
sbb
jge
ss
push
push
pop
jle
xor
out
pop
nop
add
sarb
add
imul
push
call
dec
push
call
adc
outsb
xchg
imul
inc
cmp
sub
mov
or
mov
stos
movsl
das
cmpb
jge
mov
xchg
mov
outsb
push
test
pop
lea
pop
pop
push
stc
jge
lea
xchg
jl
pusha
xchg
outsl
push
movsl
sub
xor
xor
fs
or
insl
das
push
pushf
dec
ss
lret
cmp
mov
lea
into
fwait
bound
pop
cmp
mov
inc
and
push
mov
push
pushl
ret
push
neg
cmp
mov
bt
jmp
push
call
loopne
notl
cmp
enter
pushl
rorl
push
dec
int3
dec
jne
rorl
pop
rcr
mov
idivb
je
clc
adc
mov
fucomip
pop
rclb
lock
cmp
and
dec
repz
lahf
push
jns
je
mov
mov
loopne
sub
push
insb
jns
xchg
xchg
iret
std
neg
xlat
pop
sbb
mov
dec
pusha
push
inc
out
sbb
cltd
jae
mov
mov
pop
test
inc
leave
cltd
mov
testl
pop
lods
add
lods
repnz
call
jmp
mov
sub
bt
call
cmc
add
pushf
jmp
movb
push
pushl
popl
push
pushf
movb
movl
pushl
ret
push
call
jg
mov
imul
push
mov
test
xor
mov
mov
sub
stc
mov
pop
cmp
outsl
test
repnz
fisttpl
mov
std
push
or
mov
daa
push
das
test
jecxz
push
int3
pop
mov
repnz
xor
mov
mov
insb
ja
ja
sub
jnp
or
out
mov
sbb
jnp
loopne
jns
std
xchg
les
jl
jg
fsubr
adcb
lret
and
lret
cmp
call
rcll
minps
push
gs
sub
jb
fdivrp
sub
xorb
cli
cmp
jns
enter
call
fdivrp
sub
pop
call
push
cltd
dec
cmpsl
dec
mov
pop
mov
push
and
test
in
or
sahf
mov
xchg
dec
fstpl
fsub
lgs
and
pushf
xchg
or
aam
ds
call
cmp
cmp
push
call
add
and
push
pop
or
or
and
jb
into
and
pusha
push
iret
mov
cmp
xchg
faddp
inc
icebp
shll
mov
pop
and
fs
add
add
popf
pop
push
ljmp
jl
xor
dec
mov
add
jb
les
push
xchg
push
sarl
stc
je
mov
mov
and
negb
dec
push
and
fsubrl
mov
pop
cmp
subl
pusha
repnz
sub
add
out
movups
mov
push
pushl
movb
lea
jmp
push
call
clc
push
push
jmp
inc
pop
push
add
ja
insl
lcall
add
add
sbb
mov
repz
add
add
into
push
pop
fisttpll
enter
cmp
sbb
push
xor
mov
add
pop
rolb
mov
sbb
push
loop
mov
push
add
xchg
ja
mov
or
lock
loop
pop
or
enter
jl
mov
jecxz
inc
stc
mov
subb
xchg
pop
cmp
dec
xchg
je
mov
push
and
jg
cld
xor
sbb
mov
lret
jmp
enter
mov
movsl
ror
lea
add
xor
pop
cmp
sbb
mov
iret
add
lahf
dec
fucomip
or
cmp
out
cmp
aas
or
movsl
mov
std
or
sbb
fcmovnbe
adc
cmp
and
mov
jge
shll
mov
enter
aad
pop
cmp
es
call
dec
adc
jo
call
ret
jg,pn
movsl
call
adcb
sbb
and
aaa
in
imul
jl
mov
pop
stos
nop
pusha
add
out
sub
pushf
cmp
cmp
fisttpl
and
adc
xchg
lock
xchg
add
fdiv
aam
sbbb
dec
sbb
je
and
adc
jb
je
je
sahf
out
stc
loope
mov
sbb
data16
jae
js
scas
pop
je
ljmp
sub
jp
adc
pop
loope
decb
std
rcr
push
pop
inc
popf
xchg
cs
push
dec
xor
lret
fwait
popa
jo
add
pop
cmp
lea
call
call
popa
fs
jo
xor
cs
insb
add
mov
loopne
stc
clc
pusha
mov
shl
lea
push
bt
mov
cmp
jmp
insl
ds
icebp
xorb
pop
pop
lcall
or
and
mov
add
xor
jns
pop
addr16
adc
dec
ret
push
int3
scas
mov
jb
push
das
out
mov
cmp
or
push
cmpsl
push
fcmove
daa
pop
and
leave
inc
mov
xor
xchg
lret
out
cmp
push
sbb
fistl
xor
mov
mov
insb
adc
push
je
punpcklwd
mov
lret
pop
cmp
mov
mov
pushf
lea
jmp
push
call
das
js
mov
ror
clc
call
clc
pusha
cmp
bt
or
movb
call
sub
xchg
mov
dec
ja
testb
idiv
jo
nop
jl
pop
test
popf
cli
es
imul
fsts
repz
sub
and
cli
and
pop
mov
jecxz
scas
jno
aas
js
sub
add
dec
int3
adc
add
mov
sub
add
addb
les
lret
sar
push
out
xchg
dec
push
repz
out
les
add
js
xor
inc
leave
inc
or
xchg
pop
dec
mov
movsl
aam
out
icebp
mov
mov
mov
push
nop
in
xor
lods
xor
es
insl
or
fsubl
and
ja
lret
stos
or
dec
popa
outsb
loopne
or
idivb
cmp
xchg
push
mov
cmp
fwait
hlt
cmpsb
push
rcrb
andb
push
aaa
decl
pop
aaa
cmp
xor
jg,pn
push
call
loop
cmp
call
loop
push
call
mov
out
add
cs
cmp
xor
lock
jge
std
ss
sub
into
mov
and
xlat
dec
cmp
repz
mov
fmull
stos
movsb
call
xchg
sahf
dec
push
and
add
xor
mov
and
fcmovu
or
imul
lret
imul
cmp
jle
cmpsb
xor
mov
push
mov
pop
aaa
sbb
dec
mov
adc
mov
test
add
bsr
rcr
pushf
mov
lea
jb
and
cmp
push
add
pushf
pusha
pushf
lea
jmp
je
shrl
ror
mov
sbb
add
fildl
dec
xor
in
xchg
loope
xchg
cltd
cmp
dec
xchg
aad
lahf
cmpsl
outsb
and
cmp
outsl
lods
mov
pushf
mov
pop
lahf
cmpsb
dec
push
jmp
ljmp
inc
cmp
roll
js
negl
scas
fs
hlt
mov
push
xor
pusha
popa
xchg
pop
fimull
pop
ss
jnp
push
call
inc
out
push
push
xor
loope
add
fs
repnz
mov
add
and
pop
mov
mov
mov
ret
iret
lahf
fstps
movsl
sbb
mov
mov
fstps
jne
and
mov
mov
test
jbe
inc
pop
mov
pusha
js
mov
jbe
and
mov
rcrb
jnp
insl
mov
mov
inc
push
mov
jmp
cltd
jl
shlb
xor
sub
pop
xor
pop
shl
popf
adc
mov
adc
cld
shll
in
pop
push
iret
cmp
push
aad
lds
lea
jecxz
push
icebp
mov
xor
das
ss
in
mov
sub
mov
or
xchg
cmpsl
inc
out
dec
lea
dec
lahf
ret
jno
mov
xchg
outsl
out
mov
scas
les
adc
sahf
xchg
lcall
jecxz
fbld
test
adc
or
cmpsl
stos
cs
call
sub
add
movsb
mov
xchg
stc
mov
pop
jp
addr16
pop
aad
add
adc
repz
push
and
out
stos
xchg
sub
jnp
pusha
dec
shrl
mov
js
add
push
sub
pop
xor
or
pop
cmp
fwait
shll
or
lock
jge
call
addb
push
clc
push
outsl
or
out
out
out
popa
repz
mov
inc
pop
popf
inc
in
jmp
test
fbld
pop
xor
jg
repz
sbb
test
mov
xor
push
test
imul
mov
push
mov
fwait
inc
adc
lock
pop
mov
fidivs
scas
mov
nop
test
fidivs
adc
hlt
shll
cmc
pushf
mov
aaa
adc
nop
push
mov
jge
sbb
cmpsb
movsl
pop
loopne
in
out
loop
imul
popf
dec
scas
xor
loope
retw
or
cs
push
call
pop
and
inc
imul
je
imul
call
aas
aad
push
btr
rol
cmc
push
setl
test
stc
shl
push
shr
push
adc
push
lea
xadd
cwtl
push
and
push
dec
sbb
push
dec
or
rcl
lea
lea
movzbw
xor
clc
mov
bt
clc
push
test
jmp
push
call
xchg
stos
cmp
jg
call
icebp
push
call
add
or
lods
movsl
mov
movsl
mov
rorb
outsl
shll
lret
hlt
push
shrl
cmpsl
fsub
mov
cwtl
or
mov
std
xchg
pop
mov
pop
push
cmpsl
loope
insl
pop
cld
or
sbb
rclb
in
scas
mov
cld
mov
fimull
jle
and
ret
jno
jnp
sub
test
jl
inc
xchg
push
adc
mov
or
enter
cs
fnsave
add
push
dec
xor
push
mov
mov
xor
and
aam
out
xchg
mov
sbb
jge
lods
mov
cs
cmp
ret
mov
data16
loop
out
dec
aam
dec
cmc
cmp
loop
out
inc
int
xor
ret
xor
lret
fwait
ljmp
mov
jbe
mov
xchg
gs
sbb
lods
shrl
push
daa
add
jl
xorl
push
sahf
mov
lods
pop
inc
pop
testl
sbb
push
call
push
hlt
sbb
jae
pop
mov
lret
add
les
jge
push
push
fistpll
scas
in
cmpsl
jmp
ljmp
sbb
movsl
roll
jecxz
cmp
and
dec
movsl
cmp
mov
push
mov
pop
dec
pop
arpl
sub
push
out
fsts
mov
aaa
push
cwtl
push
push
das
xchg
push
mov
inc
fsubs
lret
sub
sbb
les
jg
add
insl
loope
je
cmp
adc
add
or
and
repz
add
mov
push
jnp
mov
or
sbb
jg
xor
adc
add
fisubrs
jg
sub
push
add
iret
xchg
push
call
js
push
call
imul
and
jmp
push
call
mov
add
insl
push
gs
gs
jae
inc
outsl
outsb
je
js
add
fs
ja
and
sar
adc
pusha
sub
add
lea
add
add
jmp
mov
jl
cwtl
jg
movl
cli
mov
fwait
and
mov
xor
imul
mov
pop
xor
scas
imul
xchg
cmp
jge
fsubrs
ret
daa
enter
lret
sub
push
sbb
add
xchg
sti
sub
fimull
add
fdivr
xchg
inc
cmp
pop
cs
imul
adc
add
stc
mov
pop
inc
pop
sub
add
arpl
jmp
xor
fildll
or
test
jmp
flds
sub
fwait
adc
push
stc
adc
jmp
loop
shll
pop
push
stc
sub
fsubrs
mov
jno
push
stc
das
out
lock
cmp
sub
and
test
fs
mov
cwtl
add
or
movsl
fnstcw
xchg
arpl
sub
dec
jne
or
decl
es
pusha
movsbw
seto
xor
lea
jp
movzbl
pop
movsbw
push
pusha
jmp
ror
cld
cmc
cld
std
pushw
popfw
movb
jmp
pop
test
ret
cmp
or
fnstsw
cli
insb
dec
test
adc
lahf
movsl
imul
and
sti
dec
loope
cmpsl
in
stc
xor
jns
mov
sub
xchg
cltd
in
mov
in
mov
scas
sbb
sbb
mov
pushf
mov
stc
cmp
jp
aam
pusha
jmp
ljmp
push
inc
mov
popa
mov
inc
sub
sbbl
fisubrs
jecxz
add
cmp
aas
dec
add
sub
in
bound
mov
sub
out
pop
and
sub
cmpsb
out
ret
xor
dec
orl
movsl
xor
test
sbb
inc
adc
mov
shrb
xor
mov
xor
xchg
sbb
pushf
jl
fstpt
arpl
repz
shlb
push
mov
imul
dec
sarl
sub
fiadds
int
aas
jmp
std
dec
cld
sub
dec
and
and
test
jo
pusha
sbbb
test
gs
jo
sbb
lahf
push
subb
pop
sub
xchg
mov
push
adc
sub
lahf
es
loope
inc
sub
adc
fldcw
loopne
push
jb
hlt
lds
loop
sub
in
inc
divl
into
sbb
add
mov
insl
scas
xor
xor
pop
fwait
xchg
mov
add
clc
pavgb
pusha
dec
je
stos
addr16
adc
push
mov
stos
nop
push
jl
insl
stos
outsb
rorb
mov
in
add
hlt
dec
cmp
push
mov
or
pop
push
push
ja
jno
hlt
xor
mov
mov
jno
add
jae
dec
loop
subl
xchg
enter
fwait
cmp
mov
jge
imul
cmp
or
call
adc
dec
rcl
es
stc
mov
sti
cli
and
pop
stos
icebp
in
jg
subl
or
hlt
inc
dec
pop
mull
xchg
add
lret
push
arpl
fs
sti
bound
pop
sub
in
mov
adc
pusha
call
lea
jne
pushf
pushl
ret
push
call
dec
push
lea
je
push
pusha
jmp
mov
mov
inc
dec
sbb
imull
es
push
push
test
scas
lret
push
inc
jp
mov
xor
ja
push
mov
out
insl
insl
jns
and
mov
push
sbb
push
xchg
inc
xchg
and
notb
das
mov
test
pop
or
xchg
adc
cmp
xchg
or
mov
pushf
call
stos
mov
xchg
movsl
dec
adc
outsb
dec
mov
clc
lea
mov
push
call
stos
rolb
push
add
mov
xor
sub
fnsave
rol
ja
adc
test
test
maskmovq
imull
out
les
fdivs
pop
push
outsl
cmpsl
mov
dec
imul
incb
push
adc
fldt
lcall
aad
adc
adc
add
insl
cmpsb
mull
int
mov
mov
testl
dec
dec
fdivs
inc
fistps
or
fisubrl
add
add
repnz
mov
jnp
sub
or
add
sarb
xchg
push
repnz
outsb
dec
arpl
daa
xor
mov
test
adc
adc
sub
mov
pop
lea
rol
repz
lods
clc
lea
and
sahf
fdivl
scas
nop
or
cs
mov
pusha
push
xor
fdivrl
aad
cs
out
mov
push
pop
ljmp
push
rcrb
pop
inc
cmp
fwait
or
notb
adc
call
dec
dec
shll
lret
cmpsb
jo
lock
rorb
push
cmp
pop
xchg
scas
jno
aas
nop
repnz
cs
pop
ss
loop
push
xchg
push
jbe
adc
xor
xchg
das
jl
shr
int
and
int
inc
out
aam
push
or
xor
mov
pop
aam
std
cmp
pusha
repz
fisttps
jo
adc
in
insb
push
or
out
sub
in
in
imul
pop
jbe
maskmovq
idivl
inc
lcall
mov
pop
loope
out
and
and
and
std
jmp
push
enter
push
xchg
mov
mov
pop
push
mov
mov
xchg
lea
mov
lcall
arpl
mov
aam
icebp
icebp
rcll
in
pop
sub
cmpsb
cmp
in
or
iret
xchg
addr16
mov
jg
adc
jle
push
insl
or
scas
mov
orb
push
lahf
sub
dec
mov
shlb
mov
and
mov
and
inc
lahf
xor
xchg
mov
pop
pop
stos
dec
icebp
lods
out
fildl
lret
adc
rcll
xchg
jle
jae
push
push
push
nop
outsl
daa
and
fldenv
adcb
das
pop
xor
flds
out
mov
lock
jecxz
lods
nop
outsb
push
rorl
mov
scas
call
push
sbb
mov
push
das
insb
and
mov
push
cmp
cmp
jno
xchg
jo
mov
out
loopne
fbld
pop
mov
imul
shll
lock
jecxz
mov
inc
xor
dec
inc
rcrb
ljmp
nop
test
std
xor
mov
xchg
call
sbb
bnd
les
xor
imul
in
dec
aam
push
xchg
push
pop
xor
jne
and
push
out
out
shl
add
data16
add
pop
out
sub
pop
addr16
ljmp
inc
leave
push
aaa
push
data16
out
lahf
xlat
or
push
outsb
xor
mov
out
jge
cmp
arpl
scas
lea
add
lret
movsl
xchg
outsl
jno
mull
js
lock
ljmp
jl
inc
push
lret
out
and
iret
jecxz
outsb
inc
adc
pop
or
sbb
in
daa
inc
fs
sarb
je
rclb
jae
add
cmp
out
out
stos
push
iret
pop
mov
jle
leave
pop
aam
push
cltd
rcll
xor
aad
data16
out
adc
xor
inc
movsl
sahf
cmp
pop
push
cmp
adc
cmpsb
jb
addr16
fs
jae
in
scas
fdivrl
add
sub
cld
mov
mov
pop
int3
pop
bound
and
fmuls
jle
arpl
jmp
mov
mov
test
xlat
inc
dec
loop
lods
adc
mov
pop
out
pop
imul
js
cmpb
add
mov
xor
imul
push
mov
imul
divl
push
js
push
jp
xor
clc
pop
jae
inc
and
adc
iret
pop
shrl
insl
xor
mov
fisubrl
mov
aas
xor
add
daa
ss
insb
insl
xchg
xor
pop
sahf
loopne
mov
push
les
push
mov
nop
js
arpl
xor
aam
or
fisubrl
mov
jp
fists
out
dec
lcall
outsb
lcall
push
mov
push
xchg
push
xchg
fsubrl
inc
ja
jp
pop
sub
test
xorb
inc
lcall
inc
jg
dec
gs
inc
int3
gs
jle
cs
mov
push
jmp
data16
mov
arpl
imul
into
imul
mov
out
mov
cmp
or
or
jg
das
arpl
in
pop
mov
test
call
stos
jnp
dec
xor
pop
call
loop
inc
mov
add
mov
enter
negb
xchg
push
or
cltd
jb
mov
jbe
jp
pop
movsb
jg
movsb
cmc
dec
stc
or
pop
fisttps
jns
mov
dec
das
ja
mov
std
insl
lods
inc
stos
mov
nop
xchg
cmpsb
scas
in
into
outsl
fsubs
sbb
aas
jle
xchg
xorb
jae
and
jp
iret
loopne
cmp
test
push
pusha
ljmp
shl
mov
pusha
cwtl
andb
arpl
or
aad
pop
je
xchg
cld
jns
cmpb
fucomip
xlat
out
in
int3
in
dec
ja
mov
cmp
clc
dec
std
xchg
or
out
sbb
sub
jmp
hlt
mov
fldcw
mov
jb
nop
jmp
pop
xor
adc
fs
jmp
or
icebp
jg
andb
xchg
cld
testl
xor
arpl
hlt
nop
xlat
icebp
and
mul
test
out
dec
pushf
pop
scas
inc
mov
fwait
xlat
push
sub
lahf
push
push
jg
cld
out
dec
jo
push
arpl
stc
cmp
adc
adc
adc
cmpsb
ror
fnstsw
insb
push
cmpl
iret
mov
in
push
fidivrs
mov
push
arpl
lds
sti
int3
inc
cld
push
sub
shlb
aam
scas
loop
je
loopne
sbb
jne
push
xchg
xorl
jle
or
test
jge
jg
jle
and
loopne
jae
mov
jg
add
lds
sub
cmc
pop
xor
stos
sub
xchg
push
mov
lea
sahf
push
add
jg
cli
out
push
lods
adc
mov
nop
mov
mov
push
mov
js
push
hlt
in
sbb
pop
and
pop
sti
call
decl
in
inc
test
mov
test
imul
rclb
mov
cwtl
jg
test
jne
mov
and
or
shrb
lock
pop
int
pop
and
push
loopne
outsb
cmp
lods
sub
cmpsb
icebp
movsb
jb
dec
orb
outsl
pop
add
push
adc
int
cmp
push
or
arpl
xor
adcb
out
or
push
add
ja
js
add
insb
add
std
shlb
je
rcpps
mov
insl
xor
aam
jl
in
pop
ja
lock
inc
pop
pop
mov
fstps
pusha
shlb
push
les
clc
jg
jp
xor
imul
or
outsl
clc
leave
nop
ret
adc
add
and
xor
negb
inc
es
int3
nop
cmp
mov
cmc
pop
cltd
push
push
adc
xor
dec
sub
adc
scas
pop
std
pop
cltd
es
in
aas
sti
adc
scas
sub
pop
xchg
sub
and
mov
sbb
fs
jg
dec
jae
inc
data16
out
imul
lret
cltd
shl
outsb
inc
test
scas
mov
sub
dec
xchg
pop
out
mov
clc
iret
pop
vmread
sub
adc
ja
js
enter
jo
enter
movsb
push
dec
arpl
xchg
pop
sbb
shll
sbb
arpl
push
loopne
outsl
pop
push
lods
push
add
lock
pop
cmp
out
enter
push
jae
das
mov
lock
jle
jae
xchg
mov
sar
sub
fidivrl
sub
push
xchg
movsb
push
mov
fdivrs
xchg
jo
mov
sub
jae
dec
test
popa
add
xchg
movsb
rorb
jns
jns
pop
aam
dec
loop
rorb
xor
xchg
shlb
stc
adc
imul
aaa
inc
movsb
push
lods
xchg
shr
cmp
aaa
pop
mov
sub
inc
dec
inc
imul
push
roll
aam
scas
ss
xchg
dec
aam
insl
jp
inc
insl
movb
inc
int3
push
inc
pop
adc
popa
and
and
inc
adc
rol
mov
leave
mov
fistl
pusha
push
mov
imul
int
push
in
adc
cmpsb
inc
jle
icebp
enter
push
stos
dec
scas
xor
inc
or
sub
push
ja
adc
mov
adc
pop
push
iret
stc
mov
js
cmc
rolb
scas
ret
xchg
jge
jg
cmp
dec
out
push
pop
add
aaa
cmp
push
adc
lods
sub
sahf
mov
mov
push
jge
test
jge
mov
int
push
sarb
mov
jne
sarb
xlat
jne
icebp
adc
inc
ss
xorb
jne
icebp
jb
mov
aas
mov
mov
jle
xor
cmpb
out
das
push
js
push
lds
mov
je
jecxz
sub
loopne
ror
push
icebp
aas
mov
mov
daa
dec
vmread
jmp
push
sub
imul
addr16
mov
inc
mov
sbb
push
lods
sub
imul
xor
sbb
or
sub
icebp
iret
adc
int
fnsave
std
loop
and
mov
gs
push
push
nop
push
fst
cmpb
fs
arpl
les
ret
mov
les
and
cs
cltd
xchg
pop
movsl
sahf
rorl
out
inc
outsb
std
sub
mov
push
lret
jmp
sbb
ljmp
outsl
imul
ja
push
hlt
dec
push
mov
jo
pop
movb
inc
mov
addr16
stc
clc
int
pop
data16
push
into
jle
dec
fsubs
sbb
icebp
insl
inc
pop
or
lahf
push
mov
jno
mov
filds
push
push
rcrb
stos
je
lea
ret
add
loop
xchg
or
clc
sarb
push
in
daa
xchg
aam
fs
rcl
dec
and
shrb
ss
arpl
mov
repz
pushf
push
push
jle
fwait
mov
addr16
cmp
popa
clc
pushf
push
jle
cmpsl
jg
sub
lret
push
push
inc
xlat
cwtl
arpl
jl
add
test
aaa
outsl
inc
ss
stos
sbb
lcall
jno
loopne
cmp
imul
and
dec
push
jbe
inc
stos
push
xchg
mov
popf
repnz
jae
xchg
xor
in
or
and
mov
pop
dec
es
cmp
sub
push
jae
mov
or
inc
int3
pusha
out
js
out
xchg
aad
mov
mov
imul
imul
add
and
sti
and
cmpsl
sub
cmp
nop
idivl
fistpll
xchg
mov
cmp
mov
adc
jmp
rclb
out
lods
divl
fs
stc
repnz
mov
and
pop
inc
enter
jae
dec
cmp
pushf
fcomip
cmp
aas
cmp
mov
or
jno
push
push
dec
and
lcall
mov
fmull
mov
in
push
aad
scas
loop
mov
mov
aas
insb
nop
imul
in
sub
xchg
ror
pop
push
mov
out
and
mov
xor
jo
outsb
jno
xor
cltd
inc
push
inc
ds
fs
nop
jl
xor
push
outsl
pop
addr16
iret
mov
inc
loopne
and
xor
mov
xor
push
lock
adc
pop
std
fldl
les
push
push
cld
hlt
mov
fwait
jl
xchg
cmpsb
pop
aam
dec
pushw
loopne
cwtl
in
fnstenv
icebp
sub
ljmp
xchg
inc
nop
xchg
push
cmc
aaa
push
out
lret
int
dec
in
js
mov
dec
pop
or
fnstenv
outsl
jb
in
jle
fcmovnbe
push
sbbb
mov
lds
rcr
int
pop
in
mov
mov
jno
popf
lods
rcrb
cmpsl
lods
lret
xchg
or
lds
lcall
rorl
mov
inc
test
and
imul
rorl
pop
test
rcl
jb
xchg
mov
or
push
mov
xchg
enter
movsb
inc
out
fcompl
push
ljmp
mov
push
aad
addr16
jle
shl
sub
and
ljmp
ljmp
stos
jmp
mov
rclb
pop
dec
dec
fcomps
xchg
push
dec
pop
add
or
or
js
mov
add
fnstenv
inc
add
das
jg
call
inc
lods
cmp
mov
mov
dec
sbb
xchg
clc
fistpll
or
mov
dec
xchg
sbb
lods
xorl
adcb
inc
push
std
mov
xor
icebp
jnp
xor
xor
jae
xor
out
adc
in
arpl
push
inc
sub
xchg
jmp
mov
clc
lahf
sub
cmpsl
lahf
dec
xor
add
repz
cwtl
jg
loopne
imul
arpl
xor
xchg
div
cld
ss
lods
out
xlat
jge
and
out
arpl
or
test
rcrl
icebp
jnp
inc
jmp
xchg
leave
cmp
lock
mov
dec
cltd
pop
jnp
mov
sub
scas
pop
push
mov
pop
lock
rcrb
loop
lock
mov
push
adc
aaa
push
arpl
mov
xchg
pop
jmp
clc
inc
ja
fsubrl
imul
mov
inc
fpatan
popa
lea
dec
std
mov
jne
add
fisttpl
cmp
jno
mov
cmp
cmp
mov
stc
dec
dec
fmuls
xor
xchg
and
aam
lock
imul
mov
fimull
cmp
sbb
lret
ret
ror
in
cld
lods
dec
push
jno
inc
push
sub
nop
ljmp
in
ss
push
pop
mov
xor
fidivl
fwait
out
xor
push
sbb
arpl
mov
shr
clc
stc
adc
shlb
push
cmp
aad
insb
ljmp
aad
cld
adc
push
pop
add
insb
test
mov
nop
push
xchg
je
and
push
cmpb
lret
cld
enter
mov
mov
arpl
pop
jb
xor
call
test
addr16
jecxz
adc
shll
sahf
fnstcw
pop
insb
jno
stc
lock
rcl
jno
pop
xchg
inc
push
mov
pusha
xchg
jb
leave
mov
outsb
push
adc
dec
in
ljmp
inc
mov
sahf
mov
sub
jmp
jno
sub
cmp
inc
dec
daa
sub
xchg
cmpsb
js
xor
or
add
or
fistl
or
cmp
push
dec
pop
sub
orb
mov
sbb
mov
jecxz
xchg
mov
pop
mov
jecxz
jg
je
jo,pn
arpl
mov
xchg
std
cltd
inc
jmp
ds
lcall
xchg
aad
dec
ret
push
fwait
lods
inc
and
lock
xor
pop
outsl
stos
jmp
cmpsb
mov
pop
mov
sub
lods
fs
sbb
insb
lret
mov
pop
pusha
mov
std
lea
pop
scas
outsb
push
push
xchg
lahf
cld
mov
mov
mov
mov
dec
fnsave
es
dec
jmp
pop
lahf
add
std
std
xlat
mov
push
fisubrl
dec
lcall
sub
repz
rcrb
jl
or
insl
add
fidivrs
push
and
in
out
out
decl
popl
push
mov
dec
pushl
and
push
xchg
jns
xchg
xchg
mov
lds
push
popa
xchg
pop
cmp
lcall
or
int3
jecxz
mov
int
pusha
test
sub
and
mov
mov
out
mov
mov
cmp
imul
jbe
jno
scas
inc
sbb
fucomip
or
int3
sar
pop
sbb
lods
fildll
mov
dec
dec
cs
add
inc
or
ret
outsb
stc
rorb
mov
popf
out
ret
adc
outsl
fldl
outsl
subl
jge
scas
push
jl
addr16
nop
pop
xor
xor
in
dec
sub
mov
sbb
std
cmpsb
out
out
ret
xlat
sub
adc
push
pop
or
imul
out
inc
adc
js
das
ja
adc
out
dec
movl
jne
loopne
mov
add
push
mov
push
repz
mov
xorb
push
outsl
mov
jg
cmpsb
push
xchg
adc
jae
arpl
xor
test
xor
lahf
imul
xor
out
std
sub
and
dec
fmul
push
repz
sbb
dec
out
shlb
js
ss
sar
xchg
pop
rcrl
out
faddl
test
call
xor
mov
inc
es
mov
jns
pop
adc
es
inc
lcall
loopne
mov
test
push
out
add
ja
xorb
mov
loopne
mov
imul
nop
push
adc
pop
push
and
inc
adc
lock
add
in
add
dec
repnz
ret
jmp
in
outsl
sub
mov
shll
pop
push
fstp
std
data16
mov
xchg
imull
mov
icebp
sbb
push
sub
inc
cmpsb
xchg
mov
jge
jae
shlb
mov
addr16
sub
inc
pop
mov
fs
fcomip
fldt
pusha
pop
pop
cmp
negb
shll
dec
cli
and
fnstcw
push
int3
jl
jo
jmp
inc
adc
push
pop
arpl
push
xor
lahf
fisttpll
push
shl
jne
and
cmpsb
xlat
jmp
in
xor
insb
lcall
xlat
call
cmp
xor
dec
inc
mov
jnp
ljmp
std
pop
rorl
fistpll
jae
sbb
push
insl
push
pop
adc
lds
repz
or
scas
jg
cs
fdivrl
push
lock
adc
call
cmp
jo
xor
push
and
sub
mov
imul
out
sti
jmp
jg
cmp
jae
or
lcall
pop
sbb
ror
mov
fldenv
mov
push
nop
outsb
push
push
adcb
fiadds
adc
pusha
popa
sbb
adc
push
out
icebp
lahf
aam
adc
dec
movsb
add
pop
mov
add
iret
int
pop
adc
or
mov
in
mov
or
insb
push
idivb
mov
aaa
or
int
aaa
repz
lea
movsl
mov
insb
mov
jo
xor
testb
or
cmp
pop
daa
pop
shrl
sarb
sub
shll
cmpsb
cmpsl
pop
inc
sarl
mov
sub
jmp
push
cltd
aam
imul
jo
insl
fucomip
lds
or
repz
mov
or
lock
ss
dec
xchg
xchg
imull
fs
in
pop
xlat
shlb
test
lret
mov
inc
in
xchg
insb
int3
jo
xchg
fistpll
clc
mov
mov
add
adc
push
sbb
movsb
cmp
pop
xchg
stos
movsl
hlt
mov
push
leave
push
sar
or
push
mov
shrl
in
fnstcw
lret
call
insl
cmp
outsl
jp
mov
push
call
fldt
push
insl
adc
ss
sub
adc
cmp
outsl
dec
dec
xlat
cmp
rolb
fwait
adc
pop
adc
es
push
inc
jge
stos
pushw
jl
jmp
inc
lcall
in
ret
jnp
fldl
fldcw
insl
push
cmp
repnz
dec
dec
call
add
outsl
dec
push
inc
adc
mov
inc
js
jge
or
mov
pusha
jae
add
mov
movsb
mov
outsb
xchg
jno
aas
in
push
mov
lds
mov
pop
jp
xchg
leave
das
fistl
mov
mov
mov
xchg
test
test
sub
ds
insl
xchg
cmp
xchg
sbb
jmp
fs
add
mov
cmp
arpl
rep
out
sub
lods
gs
mov
aad
jmp
fimull
sbb
mov
rcll
addr16
sub
jno
mov
notb
in
shrb
xchg
lods
mov
popf
inc
addr16
aam
stos
xor
dec
outsb
push
cmp
jae
jae
scas
adc
jbe
insl
and
push
adc
mov
push
xchg
stc
xchg
mov
imul
add
jmp
insl
sbb
push
sbb
mov
pop
push
aad
mov
dec
mov
imul
sub
cld
cld
cmp
xor
aas
fs
and
push
flds
scas
lea
push
outsl
fwait
inc
pop
je
jg
jl
sbb
pcmpeqb
jno
dec
pop
outsl
pushl
adc
nop
imul
cwtl
push
push
push
lods
es
and
jge
mov
je
fwait
call
data16
outsb
lea
call
jge
xor
fsubl
insb
jno
push
out
jl
into
push
mov
loopne
bswap
fs
and
cmpsb
dec
insb
push
test
insb
je
push
cmc
fs
cmp
cld
push
into
xor
push
jl
data16
jl
into
insb
ljmp
push
jecxz
loope
xchg
jnp
sub
fs
lea
addr16
mov
jge
incb
mov
insl
sub
outsb
jle
jae
gs
imul
inc
test
adcb
data16
jl
xchg
dec
pop
jecxz
loope
sub
es
inc
loope
mov
dec
call
insb
inc
insl
jecxz
jns
outsb
jge
idivl
jl
dec
jmp
or
jl
jle
arpl
or
jno
jp
outsb
dec
aas
jg
push
add
insl
outsb
cli
pop
lret
jl
fisubrs
add
dec
je
inc
push
sub
dec
jg
jge
retw
dec
mov
push
enter
sub
push
pop
loope
into
push
inc
into
in
data16
push
leave
out
xchg
dec
push
in
iret
insb
mov
sahf
fbld
mov
jmp
ja
jnp
imul
jp
mov
jns
jecxz
icebp
popf
imul
in
out
scas
les
lock
jp
imul
outsb
divl
imul
icebp
mov
bound
lock
sti
out
or
into
pop
out
insb
sub
jle
iret
ljmp
jl
popa
out
add
shl
enterw
jbe
fs
xor
arpl
sbb
jge
pop
xorb
jae
bound
imul
ja
cs
inc
push
sub
arpl
mov
jae
mov
stc
in
dec
sahf
or
mov
jbe
lock
xchg
pop
into
jb
cli
test
mov
data16
daa
dec
into
jge
and
fwait
mov
cmp
push
jg
mov
inc
add
xorb
push
jg
pop
daa
xor
mov
adc
push
sub
adc
rcrl
rorl
pop
call
in
pusha
fwait
xor
pop
and
leave
stos
ss
pop
cmp
cmp
inc
push
jmp
ljmp
jmp
jb
add
lret
imul
insb
push
mov
out
mov
adc
or
inc
jb
push
je
rcrl
imul
test
or
in
and
incb
loopne
add
push
inc
jb
data16
test
mov
jecxz
cmpb
inc
cmpsb
cmp
test
cs
sbb
xor
jecxz
sub
out
xor
arpl
adc
jbe
sub
dec
fcmovnbe
mov
ja
es
mov
xor
fistpl
add
aam
inc
dec
or
add
xchg
push
aaa
or
inc
push
in
pop
jne
adc
xchg
hlt
ja
dec
mov
sbbb
jns
and
mov
pop
cld
jge
mov
mov
fsubrs
pop
pop
cmpsb
jno
xor
push
add
inc
adc
xchg
std
hlt
insb
jbe
in
dec
add
sti
pop
jp
cmpb
mov
into
imul
sbb
push
mov
push
loope
pop
xchg
sbb
fiaddl
hlt
scas
imul
jae
mov
or
das
lea
insb
push
pop
and
pusha
dec
push
fs
movsb
cld
push
outsl
loope
in
arpl
cmp
dec
jb
popl
and
in
dec
push
xorb
imul
mov
and
sbb
sub
lcall
pop
dec
mov
mov
mov
dec
mov
jbe
mov
lods
dec
loopw,pn
outsl
cmp
xor
adc
adc
inc
push
mov
fwait
mov
scas
into
nop
sahf
shlb
cwtl
adc
jg
adc
jb
push
std
mov
arpl
mov
icebp
cs
sbb
jge
push
insb
adc
jae
and
or
rcrl
outsb
std
lods
mov
pusha
mov
fisttpll
data16
mov
in
nop
ret
mov
pop
shlb
outsb
xorb
mov
subb
jne
mov
js
test
pop
mov
inc
fldl
popa
mov
arpl
shll
fadd
pop
ljmp
pop
dec
push
push
fmuls
xchg
out
out
push
pop
sub
or
stc
pop
jge
push
das
cmp
into
xchg
dec
push
mov
xchg
imul
int3
push
adc
add
push
dec
ja
arpl
scas
push
shrl
dec
loopne
lcall
lea
or
lock
pusha
out
adc
sti
push
mov
push
inc
lret
cmp
jg
leave
jo
mov
jne
out
rcl
call
push
mov
or
jmp
aaa
push
repnz
sbb
imul
int
syscall
arpl
sub
lret
hlt
pop
jo
shufps
js
inc
mov
loopne
adc
ja
jno
push
movsl
ds
lcall
adc
inc
jno
pop
stc
add
pop
mov
sub
inc
int3
into
lds
and
cmpsb
xchg
into
adc
jbe
ret
cmp
rclb
int
inc
mov
cmpsb
std
pop
jo
leave
add
into
rcll
sbb
in
add
out
inc
mov
sub
jmp
das
pop
ret
sbb
jae
pop
sbb
repz
mov
int
xor
jo
adc
retw
out
jge
aaa
sub
push
scas
push
out
rorl
aad
fisttpl
pop
imul
add
push
in
jno
jo
fstp
pop
mov
insl
insl
push
push
out
xchg
jae
je
test
and
push
shlb
add
push
sub
sti
lahf
jmp
fucomi
das
inc
lret
cmp
sub
or
subb
mov
mov
add
mov
jmp
pop
inc
imul
jnp
and
lods
mov
xor
mov
adc
call
rcrl
jmp
add
mov
jae
lret
cld
and
inc
xor
imul
fisubrl
ljmp
out
xor
shl
scas
aas
sub
pusha
ret
out
pop
test
cmp
push
add
inc
adc
rorb
pop
shr
dec
jle
out
imul
dec
mov
dec
into
mov
insb
shlb
pop
push
js
mov
or
movsb
push
pushf
mov
sub
out
mov
aaa
std
out
bound
nop
inc
lea
pop
rcll
nop
shlb
xchg
lret
orb
inc
jg
leave
jle
insl
inc
mov
outsl
mov
adc
lahf
or
xchg
push
mov
fbstp
cmc
outsb
xchg
inc
push
jo
sti
imul
cmpsb
lods
pop
leave
push
stos
dec
out
xlat
outsb
test
dec
jle
inc
push
loope
mov
out
pop
mov
mov
test
lahf
cmp
mov
loope
mov
outsb
dec
pop
xor
leave
xor
addr16
add
iret
mov
mov
scas
mov
cmp
sub
outsl
lock
inc
add
push
out
push
xchg
inc
sbb
mov
pop
aas
jo
mov
repz
mov
push
stos
mov
les
xchg
xlat
jb
roll
push
dec
add
orb
mov
out
xchg
or
in
xor
out
mov
mov
lods
dec
jns
outsb
mov
das
imul
aas
out
mov
jae
int3
shr
jmp
aam
xchg
fwait
divl
jecxz
adc
sub
inc
or
test
les
outsl
lock
xchg
inc
out
sbb
mov
dec
ljmp
stc
or
or
pushf
adc
push
xchg
xlat
inc
pop
push
lcall
js
or
leave
fwait
lods
cmpsl
push
ja
xchg
out
mov
xchg
mov
outsb
or
dec
pushl
imul
sub
outsb
push
dec
test
push
in
into
dec
popa
js
sub
das
sub
sub
nop
sarl
nop
mov
fdivs
mov
jo
sub
and
push
jg
subl
mov
jecxz
push
sub
push
xchg
mov
lods
outsl
push
addr16
or
lret
jg
jecxz
mov
fs
mov
and
mov
insb
aas
int3
lods
xor
push
movsb
inc
jne
xchg
or
xchg
fistl
mov
add
test
xchg
dec
xchg
outsb
les
jo
movsb
subps
inc
js
xor
and
push
js
in
sti
popa
push
call
out
lods
sub
nop
pop
fidivl
mov
iret
js
sub
pop
xchg
outsb
jge
cmp
cld
mov
test
fidivl
push
adc
je
jae
pop
jo
add
mov
and
mov
push
mov
mov
fcmovu
sbb
sub
pushf
das
jmp
mov
fmull
das
cmpsb
dec
ret
das
aas
inc
test
in
bound
subl
das
jle
ja
pop
insb
test
fidivrs
mov
jo
ds
std
jecxz
outsb
js
sarl
mov
pop
and
lods
dec
out
jecxz
push
and
xor
cmp
out
pop
and
push
push
mov
movsb
adc
std
or
mov
sub
fs
out
cltd
in
xor
out
and
cmpsl
scas
mov
pop
lods
fcmovbe
fcmovnb
clc
insb
movsl
lea
sub
mov
jge
mov
cmp
test
xor
mov
push
insb
jns
test
cld
cltd
loope
adc
pop
inc
test
popl
xor
and
gs
lahf
rcrl
adc
mov
aam
cmp
insl
stc
cs
mov
jl
and
js
loopne
inc
hlt
jg
xor
push
clc
inc
in
pop
rclb
out
cltd
arpl
inc
nop
int3
aaa
add
pop
mov
push
push
insl
adc
femms
mov
subb
sub
hlt
repz
nop
data16
mov
mov
nop
mov
shll
aas
iret
mov
sbb
xor
add
xchg
jo
sahf
mov
xor
mov
add
lds
xor
jo
ret
or
adc
mov
xchg
std
jae
fs
pop
adc
push
adc
int
insl
jns
mov
push
mov
movsb
or
hlt
mov
push
out
fsts
and
jae
inc
sti
pop
jle
loope
mov
or
dec
int3
loop
push
in
and
js
outsb
push
inc
call
ss
sub
xchg
outsb
cs
xor
and
mov
dec
xor
out
jl
fs
loopne
sbb
insb
dec
cmp
inc
mov
popa
movsb
cmp
faddl
in
cmp
lock
jle
jmp
pop
lods
mov
stos
test
pusha
pusha
push
aam
push
cmp
outsl
mov
mov
dec
mov
repz
bound
std
xchg
in
out
subb
adc
push
cs
iret
nop
fwait
movsl
pushf
and
dec
pusha
mov
mov
jg
cltd
daa
push
testl
add
push
orl
sub
cmp
fsts
fisttps
inc
dec
push
mov
cmpsl
sub
adc
pop
jo
push
fs
inc
int
push
jae
xor
jp
pop
and
push
insb
adcb
xchg
mov
jnp
jle
jle
mov
add
sub
xor
sub
arpl
dec
cmp
and
pop
mov
shr
andb
xor
jae
fs
cmp
out
cmp
out
imul
cmp
xor
and
dec
out
mov
lahf
out
cmp
jnp
daa
dec
testl
xor
jne
imul
aas
sub
into
scas
cmp
insl
push
in
mov
push
into
jno
js
xor
xchg
aaa
insl
jg
mov
sub
gs
and
lock
push
jmp
fsubrl
jae
push
scas
jno
xchg
aas
or
cs
das
sbb
mov
push
loopne
sub
inc
call
popf
ret
xor
movsl
je
das
std
push
adc
or
pushf
mov
or
xorl
lret
subl
int
call
cltd
add
mov
jge
cmp
shrb
call
mov
scas
jmp
in
popa
pop
sbb
jge
in
sub
jae
fldcw
mov
xchg
cmpsl
sbb
or
insb
mov
lret
scas
outsb
mov
or
scas
out
and
es
pushf
cld
outsb
xor
sub
mov
cmpsl
pop
jmp
movsl
mov
jb
clc
pop
mov
fdivs
fsts
mov
insl
in
out
leave
mov
sub
out
xchg
dec
insb
mov
cmpsb
std
jle
push
lret
add
mov
jmp
cmpsb
mov
mov
mov
jb
insl
icebp
popa
in
clc
push
ret
mov
jne
decb
dec
arpl
ja
aad
jge
push
rclb
fistps
dec
shr
out
cmp
insl
or
js
sub
shll
shlb
int3
ds
clc
out
push
sub
into
push
cmp
mov
lret
jl
xor
adc
mov
inc
ret
add
lahf
pusha
fwait
ss
pop
cmp
outsl
lock
cmpsb
pusha
cmp
arpl
test
push
dec
pop
sarb
negl
sbb
inc
data16
bound
imul
ret
jle
pop
sub
nop
cmpb
mov
sbbb
divps
in
mov
jl
dec
fstpt
dec
ljmp
out
aam
jge
das
adc
clc
imul
xor
je
add
jne
mov
push
push
cmpsl
lahf
push
lock
icebp
mov
xor
mov
rorl
mov
in
xchg
inc
leave
jg
out
pop
mov
jmp
int
loope
mov
ss
movsb
adc
scas
push
xchg
pop
mov
dec
jmp
repnz
xchg
rolb
fildll
mull
mov
nop
inc
push
test
adc
and
dec
jge
inc
in
stos
xchg
pushl
bound
pushf
cmp
push
pop
daa
jae
add
mov
jae
insl
xchg
outsl
add
push
data16
pop
movsb
mov
adc
dec
jmp
das
and
jno
mov
or
lods
fdivl
and
mov
in
adc
test
jbe
jmpw
nop
jmp
dec
gs
adc
inc
clc
jle
call
jae
into
or
adc
sub
xchg
out
inc
out
or
test
aam
jg
aad
lret
data16
in
lods
dec
out
cmp
mov
arpl
cmp
add
sahf
js
arpl
xchg
aaa
dec
mov
or
aaa
mov
cwtl
push
xor
in
fldt
int3
pop
sbb
jnp
cmp
lret
and
lods
insl
jge
xor
xor
mov
aam
lret
ljmp
bsr
jg
enter
and
out
push
push
shll
push
dec
fwait
cmp
inc
insb
js
jae
mov
data16
nop
into
mov
pop
pop
movsb
mov
hlt
mov
mov
clc
xchg
in
cmpsl
outsb
inc
adc
lock
shrl
lret
mov
icebp
sbb
fnstenv
out
movsb
in
in
fistl
jecxz
out
into
stos
jg
in
jmp
jne
rorl
sub
mov
push
iret
dec
dec
dec
pop
jmp
xor
pop
jae
cli
ljmp
add
dec
andb
sub
pop
out
jns
jp
daa
xchg
jl
adc
push
outsb
mov
movsl
mov
out
sbb
push
jp
push
mov
leave
fs
ud1
cltd
decb
outsl
mov
out
ret
push
mov
xor
aas
gs
mov
cwtl
insl
push
cmp
scas
shlb
nop
icebp
scas
inc
nop
mov
std
add
stos
push
js
pop
xor
mov
add
test
pop
mov
insb
jl
mov
inc
inc
lahf
mov
pop
push
jae
jmp
rcrb
or
sub
push
xorb
std
clc
negl
ret
jae
imul
dec
sbb
icebp
xchg
inc
imul
out
movsb
in
in
repnz
jl
das
sbb
fidivl
addr16
mov
cmp
mov
int3
dec
insb
cltd
clc
mov
in
jecxz
mov
jne
or
les
inc
test
out
cmpsl
out
pop
mov
aas
loopne
jbe
bound
push
push
push
mov
arpl
xchg
jbe
cmp
jae
out
or
lock
jns
repz
cmp
xchg
push
cmovle
sarb
jbe
mov
imul
pushf
enter
lret
xchg
arpl
xchg
inc
jg
fucomip
push
mov
sbb
pop
push
addr16
push
out
nop
push
nop
das
std
fs
or
jb
ret
imul
mov
ret
mov
fistpll
icebp
push
jecxz
mov
out
jae
inc
push
outsl
ret
out
dec
lea
push
and
enter
xor
pop
stos
mov
add
dec
sbb
dec
mov
push
jae
bnd
std
cmp
jnp
fstps
or
and
js
mov
pop
push
imul
inc
out
push
clc
dec
push
aaa
sub
pop
xor
leave
dec
sbbb
int3
pushf
sub
imul
ljmp
lock
dec
cmc
pop
sahf
adc
lods
mov
jle
mov
push
aad
push
cld
sahf
in
fdiv
add
mov
aas
push
movb
xchg
out
mov
xlat
push
dec
push
rorb
push
jg
ficompl
ds
push
addr16
sub
sub
pop
movsb
or
ds
add
test
mov
pop
mov
mov
out
ljmp
outsl
dec
xchg
inc
mov
push
xchg
repz
in
cmp
inc
cmp
out
push
sub
ret
and
movsb
mov
push
xor
sbb
iret
mov
xor
out
lds
or
sub
push
push
jle
sbb
jns
pusha
insb
add
gs
sarl
cld
or
stos
push
notb
les
fwait
sbb
movsl
lret
scas
inc
jecxz
test
movsb
pop
jge
outsl
mov
pop
ss
sub
jo
outsl
test
fildll
clc
fs
xchg
les
push
stc
sub
or
je
movsl
lock
stos
insb
aam
andb
and
popf
decl
movsb
in
daa
xlat
arpl
pop
mov
movsb
rclb
jp
out
push
sub
fsubrl
or
xor
mov
test
outsl
xlat
arpl
push
and
pop
fldenv
roll
jno
je
imul
sbb
cmp
cmpsb
shll
mov
cmc
mov
lods
cli
sub
push
pop
push
in
inc
xor
cltd
sub
arpl
shll
data16
lretw
jae
in
cmp
cmpsb
out
fstpt
aam
pop
lahf
cmp
std
jno
push
xchg
push
push
inc
fs
pop
jmp
lea
sub
jg
mov
mov
jne
mov
roll
xchg
jmp
mov
push
push
mov
enter
jae
lds
mov
adc
and
jb
gs
lods
int
addr16
jae
mov
and
pop
xor
sub
loop
inc
std
push
dec
es
insb
imul
rcrl
mov
movsb
jg
subb
adc
scas
lret
fbld
inc
cltd
jmp
inc
mov
cmp
pop
pushf
push
push
push
push
test
lods
add
imul
or
jg
lret
mov
arpl
cmp
sti
and
loope
xor
xchg
cmpsl
outsl
jo
insb
jg
push
fisubs
mov
adc
sbb
jle
dec
pop
jp
cwtl
xlat
fxch
add
mov
mov
pushf
out
arpl
es
inc
lds
jmp
or
dec
xchg
cmpsl
lds
adc
popf
js
iret
mov
fstpt
push
add
std
fnsave
nop
add
testb
ret
mov
jl
imul
leave
shll
arpl
cmp
movsl
jle
lret
stos
test
addr16
adc
cmpl
lods
cmp
jg
xor
sbb
out
add
sbb
lock
hlt
cmp
addl
mov
adc
icebp
push
jne
out
push
xor
cld
int
xchg
mov
fdivrl
or
pusha
frstor
jae
adc
xor
push
ret
dec
push
pop
sahf
js
lock
mov
pusha
sbb
imul
fcomip
mov
mov
sbb
push
cltd
loop
mov
cwtl
cs
jne
push
cld
and
push
lret
sub
inc
lahf
lock
and
rclb
fldcw
out
int3
pop
mov
jbe
and
jo
out
rcrb
sbb
idiv
clc
iret
inc
add
inc
les
repz
int3
adc
shlb
pop
xchg
mov
mov
repnz
push
inc
insl
push
je
out
cmp
leave
test
add
jo
push
stos
dec
mov
cwtl
xchg
mov
int
mov
fs
shlb
fldl
mov
in
mov
sub
xchg
add
out
inc
jle
lds
jl
cmpsb
mov
pop
or
or
jnp
xor
mov
repz
jg
push
add
in
push
icebp
add
lods
push
add
or
iret
fidivs
rcrb
roll
inc
int3
imul
fstpl
std
test
dec
mov
xchg
inc
out
pushf
int3
mov
jle
xor
sarl
dec
mov
jne
push
or
in
lret
cmp
dec
inc
std
rorl
inc
push
mov
inc
fisubl
fs
insl
dec
sub
xchg
incl
xorl
cli
or
adc
push
dec
adc
cmpsl
jl
pop
ret
mov
lock
pop
jp
add
sahf
test
push
inc
out
lods
push
dec
sub
or
pop
jge
sbb
xchg
loop
and
fldt
sahf
shlb
jmp
inc
insb
or
ror
lcall
out
insb
mov
std
xor
and
jae
cmp
out
subl
movsl
xchg
testl
jle
inc
fiaddl
in
jne
call
jo
sub
gs
xchg
ja
fisubrs
popf
jb
push
sti
add
outsl
xchg
mov
subb
or
ja
arpl
or
and
call
push
mov
rcrb
xor
xor
cli
test
push
imul
mov
xchg
sub
lahf
ss
push
clc
mov
ja
out
jns
outsb
xor
rcrb
jbe
dec
mov
push
and
push
sub
andb
fs
jecxz
arpl
dec
sbb
mov
int
popl
lock
data16
arpl
sub
push
fwait
std
cmp
inc
jae
xchg
gs
inc
pop
enter
dec
xorb
loop
aaa
or
cmp
mov
out
loopne
add
mov
pop
into
sbb
push
xor
sbb
mov
test
push
jae
cltd
cmc
and
pop
pushl
das
pop
psubusb
out
es
jae
lahf
pop
or
dec
ljmp
psubb
inc
shrl
xor
cld
shrb
xchg
outsl
andb
mov
cmpsb
fidivrs
outsb
ret
cmc
pop
mov
fldcw
xor
adc
out
sti
jbe
mov
fs
stos
lret
sub
hlt
fnstcw
jo
jbe
dec
jae
fisubrl
pop
jbe
xchg
add
push
jne
ja
out
test
jno
mov
insb
push
gs
clc
out
and
mov
leave
xchg
push
sbb
jo
push
lods
mov
lret
jae
xor
data16
cmp
mov
push
idivl
push
testl
push
sahf
push
cmpsl
mov
and
rorl
in
je
std
sbb
in
push
mov
dec
jae
jae
inc
lds
inc
mov
jns
jae
int3
sti
outsb
jle
rcll
std
or
idivl
out
mov
out
cmp
push
sub
mov
mov
ss
lahf
mov
mov
pop
push
stos
ljmp
cmpsl
push
jo
aas
pop
xor
push
or
jg
loope
sub
shufps
dec
out
or
jo
inc
loope
lods
pop
push
xchg
pop
xor
mov
pop
mov
loop
cmp
xacquire
xabort
repnz
xor
add
enter
repz
jle
ljmp
negl
outsl
insl
out
dec
lock
mov
pop
jp
into
cli
fsub
int3
or
insl
jmp
lods
lahf
cmp
pop
daa
out
cmp
test
inc
fs
bound
jmp
pushf
subb
or
cmp
sbb
jae
mov
mov
ficoms
addr16
and
dec
rcrl
sahf
xor
mov
inc
mov
mov
out
mov
mov
adc
push
ss
jg
mov
enter
push
sub
orb
sub
cmpsl
test
jle
or
xor
ljmp
dec
push
insb
dec
dec
repnz
sub
and
push
fisubs
addr16
out
test
push
xchg
push
je
stc
push
sub
pop
std
in
repz
sbb
shr
arpl
mov
jae
and
mov
and
and
fidivrs
add
mov
mov
or
cwtl
jae
icebp
push
sub
cmpsl
pop
enter
cs
lock
mov
lret
push
xchg
and
pop
sbb
je
test
push
mov
out
lret
fs
jle
scas
shr
sub
int
fs
push
inc
mull
js
sarb
and
mov
fmuls
mov
dec
jecxz
repnz
xchg
xorl
sbb
fwait
jo
sarb
into
push
cwtl
shll
insb
fwait
cmpsl
sbb
repnz
jo
and
jbe
inc
fs
fsub
and
inc
jo
insb
adc
or
cld
add
aad
or
test
push
push
push
scas
or
pop
testb
out
enter
pop
push
dec
cmp
out
dec
jle
ret
shrl
popf
fsubs
mov
sub
jmp
lock
js
lcall
adc
jo
mov
and
test
push
loop
jo
test
std
pop
stc
aaa
jo
jl
and
pop
int
inc
lds
xor
orl
leave
out
andb
fidivl
fwait
sub
std
mov
jo
flds
rcrl
sub
popf
shll
nop
cld
cmc
cs
mov
jnp
je
jo
jp
test
mov
ja
jo
mov
mov
push
inc
fdivl
lds
push
fcomip
outsb
pushl
rcll
je
sub
push
std
jl
mov
out
nop
mov
mov
pop
jle
mov
pop
imul
fsubrl
dec
sbb
jo
jmp
sar
jo
dec
out
mov
popf
inc
jge
mov
es
push
fwait
test
test
add
push
orb
pavgb
jge
bound
jbe
mov
call
fistps
mov
nop
and
adc
jne
jo
dec
push
and
jo
adc
test
xchg
dec
jo
sbb
pop
add
fisubs
adc
stos
pop
jp
xchg
fwait
data16
jo
rolb
sbb
test
sub
push
or
pop
loopne
dec
fidivl
adc
dec
int3
jb
gs
cwtl
decl
or
push
mov
pusha
push
jp
xor
cmpsl
stos
mov
out
mov
test
int
xchg
andb
cwtl
sub
jo
push
mov
mov
inc
pop
sub
push
jo
cwtl
xlat
xchg
jns
push
aaa
push
dec
test
je
push
jle,pn
push
inc
js
sbb
add
jo
lcall
jo
addr16
add
out
dec
jo
lcall
cs
movsl
mov
insb
int3
addr16
sbb
in
aaa
inc
push
dec
jo
movaps
mov
push
push
jo
scas
call
insb
divps
in
fistpl
push
repnz
dec
dec
je
xchg
int3
mov
xorb
aas
bound
mov
jp
iret
add
mov
vmwrite
xor
cld
adc
mov
xchg
xor
or
mov
bswap
test
sbb
in
sub
add
shll
sub
jo
mov
std
fidivs
fucom
xor
and
popl
jge
mov
ja
push
cmpl
cwtl
xchg
jle
lods
iret
push
jg
outsb
xchg
data16
ud0
mov
xor
push
out
in
in
out
jo
imul
push
jo
jbe
sbbl
lock
leave
mov
jae
jo
dec
adc
orb
test
pop
aaa
mov
test
mov
sub
pop
mov
inc
push
jo
sbb
cmpsl
push
mov
sub
xchg
arpl
lock
sbb
faddl
push
sub
xor
call
mov
sbb
inc
ret
lret
fisubrs
mov
jle
cmp
in
xor
es
ss
addb
int3
or
push
jnp
mov
jle
pop
rolb
xor
aas
sub
jle
push
sbb
fucom
push
ret
movl
push
leave
jo
sarb
dec
push
cmp
jo
or
jge
sub
dec
bound
add
jl
jp
pop
in
sub
push
pop
cmp
es
jo
xchg
ss
sbb
jo
orl
jo
mov
add
jbe
cmc
jo
hlt
les
jne
ljmp
cmp
lock
fadds
adc
fcomip
jbe
sbb
push
inc
jo
push
mov
fadd
cmpsb
push
into
mov
xor
in
in
mov
pop
lds
jo
ja
mov
sbb
fnstsw
push
clc
or
imul
andb
xor
or
xchg
adc
daa
out
push
sti
inc
sub
lea
outsl
xorb
xchg
cmp
inc
and
jo
daa
stos
mov
loop
jo
jne
jb
ds
jo
and
outsb
jo
mov
daa
jo
test
cltd
test
aam
jo
sbb
add
jo
stos
xchg
sub
jo
js
call
jo
jae
mov
jo
loope
popf
test
sbb
xchg
mov
pop
push
xchg
cld
jo
outsb
clc
js
push
sbb
and
popa
mov
mov
dec
rcr
push
mov
mov
ss
movntps
test
out
clc
sub
cltd
scas
lods
push
pop
xor
andps
test
sub
imul
sub
jo
das
pop
sbb
shlb
adc
pusha
ss
test
jns
cltd
imul
dec
sub
sbb
adc
scas
push
mov
test
stos
subl
or
pop
roll
mov
mov
jecxz
hlt
in
into
jne
xchg
push
nop
jo
mov
cmp
cmpl
imul
rcrl
std
je
adc
cmpb
lahf
cmp
scas
aam
roll
lods
pop
sarb
sbb
aaa
xor
popa
xor
lret
xchg
xlat
jecxz
mov
andb
and
xchg
je
pop
jo
aaa
jl
jae
jno
jo
mov
lahf
cmp
add
or
xchg
mov
adc
jmp
mov
xchg
xor
pop
in
or
test
outsb
ficoml
cmc
and
mov
insl
dec
imul
pop
push
movsb
out
mov
xor
loop
lods
xchg
fcmove
cltd
jo
test
or
fists
mov
add
mov
dec
jo
in
shl
out
add
jo
es
xchg
je
push
or
imul
jo
jl
es
popa
push
mov
stc
or
push
add
idivl
jo
inc
in
xor
jae
sub
rdtsc
clc
mov
push
lods
lahf
jo
push
icebp
dec
test
jo
negb
fcompl
test
xchg
jne
in
mov
push
adc
int3
aam
out
or
inc
loope
pop
cltd
jo
push
add
sub
data16
jl
mov
jo
inc
std
xchg
pop
sub
je
int
mov
js
or
sbb
jb
xchg
addr16
xor
adc
jo
loop
cwtl
in
jecxz
jo
ja
ret
incl
mov
nop
lea
jl
cmp
push
popa
imul
jl
shlw
mov
jo
mov
es
mov
sub
and
arpl
jae
cltd
sub
loop
aaa
das
gs
jo
sbb
adc
fnstenv
lret
dec
inc
mov
icebp
jo
dec
push
or
outsl
scas
mov
jo
mov
out
lahf
dec
call
leave
xchg
addb
loop
daa
ljmp
xchg
jo
dec
push
aad
mov
out
or
mov
mov
aam
daa
mov
int
pusha
popa
stos
xor
jo
xchg
cltd
pop
mov
dec
sub
push
jo
cmp
xchg
cli
shll
push
test
sbb
jns
push
fdivrs
jg
repnz
in
inc
cmp
add
jl
daa
mov
ret
jo
lahf
jmp
xor
mov
or
clc
pop
in
xchg
jp
bswap
rcrl
ja
xchg
out
jno
dec
inc
scas
dec
cmpsb
aam
ret
xlat
inc
mov
jo
outsb
pop
in
dec
xchg
mov
sbb
mov
imul
scas
insl
mov
sub
sbbb
sub
out
mov
out
es
jmp
icebp
mov
mov
pop
xchg
jo
inc
xchg
shlb
in
inc
negl
mov
adc
dec
or
jle
popf
or
call
and
cwtl
sub
fbstp
mov
bound
jmp
push
cmp
jns
imul
movsl
lret
stos
addb
in
mov
fbstp
jno
sub
lock
call
repnz
or
dec
mov
jae
and
jbe
call
es
sbb
icebp
xor
cltd
mov
jno
int3
scas
mov
inc
stos
sub
aam
xor
lods
xchg
pop
aam
flds
adc
cmpsl
sbb
sti
jmp
movsl
push
jp
push
fldenv
std
jge
mov
bound
test
xor
jo
add
or
adc
popa
mov
insl
mov
jae
mov
fidivrl
or
stos
fs
fstl
jno
push
push
mov
les
mov
nop
stos
push
test
xchg
in
push
loopne
inc
adc
test
outsl
test
and
or
sub
inc
outsl
mov
cmc
xlat
sub
jle
add
lea
and
pop
lcall
cmpsb
dec
or
pop
cld
out
inc
icebp
sbb
repz
insl
xchg
fsubp
dec
pop
push
stos
ljmp
and
fdivl
ret
push
stos
bound
repnz
push
test
int
lret
data16
dec
jl
dec
stos
cbtw
lret
rclb
mov
inc
arpl
inc
test
jne
lahf
popf
gs
je
xor
fidivl
cmpsb
fistpll
outsl
mov
shrl
push
dec
test
xchg
pop
orl
push
sub
xchg
inc
shll
fdivp
imul
das
ret
and
sbb
mov
lea
cmp
or
nop
ss
in
shlb
mov
mov
dec
test
mov
scas
mov
sbb
shlb
add
jae
mov
xor
je
mov
movsl
out
adc
out
inc
xchg
or
iret
insb
ret
jmp
mov
add
push
pop
das
stos
jge
add
sub
loopne
lret
xchg
jle
mull
and
inc
outsb
xor
adc
xor
loope
cmpsl
movsl
pop
adc
push
adc
inc
nop
in
and
fs
push
not
push
incl
inc
adc
or
and
ror
push
call
test
jmp
movsb
push
inc
inc
imul
push
push
fsub
out
subb
add
jp
movsb
jl
xor
or
das
push
push
adc
pop
aam
dec
outsl
mov
add
outsb
xchg
or
xor
cmp
push
in
jae
or
mov
mov
sbbb
js
in
sbb
push
xor
mov
scas
lock
dec
mov
inc
or
pushl
xchg
arpl
inc
movsb
adcb
mov
arpl
pop
inc
in
mov
inc
dec
push
jb
fnstenv
jae
inc
mov
test
mov
dec
arpl
icebp
call
add
pop
stos
sub
xacquire
pusha
fsubl
push
pusha
pusha
dec
xchg
pop
shll
fldcw
popa
dec
jns
push
sbb
outsb
and
pop
nop
pusha
adc
push
add
dec
fstpl
lahf
fcmovnbe
and
pop
test
jo
shlb
inc
sub
shlb
incl
fwait
adc
or
repnz
dec
xchg
aam
cli
lods
dec
jle
mov
dec
popf
popa
inc
jl
pop
mov
sub
lea
push
push
jl
adc
imul
sbb
fldt
outsl
cld
mov
hlt
xchg
xor
xchg
sub
sarb
jb
pop
jg
das
shrb
push
mov
cmp
mov
xchg
jle
fistpll
jae
leave
loop
xchg
je
aad
jle
mov
sbb
inc
int
add
outsl
mov
push
scas
ljmp
loop
xchg
fiadds
xchg
mov
repnz
hlt
xor
std
stc
inc
ss
lahf
in
outsl
je
lcall
adc
cld
arpl
xchg
sub
loopne
cld
inc
pop
or
sub
jp
inc
insl
shl
mov
out
inc
pop
push
xorb
dec
out
or
jg
xor
cmpsl
sub
xchg
aad
cltd
and
jle
or
cmp
and
jae
out
jne
and
jle
test
cmp
xor
cld
sub
test
or
repz
mov
out
addr16
or
sbb
push
xchg
or
or
pop
aaa
rcrb
sbb
jmp
mov
mov
mov
pop
je
jg
imul
fidivl
lods
jae
xor
sti
movsb
cmpsl
cmp
push
xchg
insb
int3
mov
mov
js
push
pop
pop
xchg
test
in
fs
sbb
je
dec
negl
pop
jo
pop
test
fiadds
cmp
xor
arpl
stc
sbb
mov
jg
outsl
sub
jbe
hlt
dec
int
fs
std
lahf
sarb
adc
iret
mov
popf
stos
mov
adc
loopne
std
mov
jbe
sub
int3
mov
xor
lock
xor
jns
mov
jecxz
daa
add
lea
rcrl
leave
outsb
clc
xchg
into
jae
in
adc
lock
inc
cs
and
in
mov
call
inc
jno
mov
mov
jae
or
imul
sbb
mov
inc
out
cmpsb
gs
jg
lock
shl
mov
cmpsb
icebp
hlt
out
jo
inc
mov
in
loope
es
dec
gs
sbb
pop
jae
loop
lock
es
pop
mov
out
pusha
jg
loopne
cli
add
xchg
lods
cmpb
rolb
cmpb
gs
fisubs
mov
pop
xlat
subb
cmp
xchg
orb
or
imul
jge
sub
sub
pop
leave
push
mov
adc
pop
repnz
push
xor
inc
jae
scas
xchg
out
jle
push
stc
pop
mov
inc
pop
pop
in
cmp
xor
gs
push
loop
sub
loopne
mov
xchg
push
xchg
push
mov
push
push
adc
mov
cs
sbb
dec
adcb
dec
repnz
mov
mov
lock
sbb
scas
push
aaa
adc
popf
and
dec
push
mov
notb
xchg
xlat
mov
rcll
sub
xchg
add
lock
ljmp
sti
mov
adc
xor
push
nop
xor
mov
out
ja
addr16
fwait
test
mov
leave
lods
rclb
xor
dec
std
subl
mov
inc
insl
push
mov
inc
es
mov
add
sub
mov
push
roll
je
arpl
xor
dec
das
imul
pushf
dec
ljmp
jae
jmp
adc
or
sahf
mov
sahf
mov
mov
into
mov
mov
faddl
jmp
pop
ret
pop
or
xchg
sub
add
pop
outsb
jo
test
dec
cmp
jae
jle
es
cli
inc
push
inc
rcl
cld
insl
cmp
xchg
sbb
sub
subb
in
cmpsb
push
cs
decb
add
sbb
insb
je
repnz
bound
or
jmp
inc
stos
lcall
xor
dec
adc
add
and
dec
out
mov
and
pop
and
ja
out
jecxz
sbb
ret
cmpsl
sub
or
sub
push
aam
inc
add
out
xor
pop
les
ss
dec
scas
clc
mov
cmp
or
es
jl
andb
push
xor
push
push
push
xchg
jge
push
fninit
fidivs
jmp
jns
inc
mov
and
sbb
mov
mov
cmpsb
pop
push
mov
lods
xchg
pop
mov
out
mov
cli
mov
mov
sub
or
push
add
arpl
pusha
in
dec
shll
in
push
pop
mov
leave
mov
dec
outsl
cmp
and
or
cmc
inc
pop
xchg
cmc
jo
cwtl
sbb
in
mov
and
daa
imul
mov
adc
mov
fisubrl
push
mov
cltd
inc
dec
sbb
fs
inc
arpl
mov
ret
cmp
jns
fucom
xor
push
test
mov
pop
lea
or
xor
or
js
sbb
popa
loop
lods
mov
mov
push
mov
insb
sbb
ficomps
xchg
push
mov
mulb
fdivp
mov
bound
cmc
push
jns
popf
cmpsl
mov
arpl
push
std
mov
mov
pop
iret
mov
push
lods
aas
add
add
mov
insb
and
mov
mov
mov
jae
jno
mov
mov
sub
mov
push
lock
sbb
call
push
cmp
cmp
sub
lock
xchg
test
xchg
movsl
pop
mov
xor
jno
or
aas
shlb
std
mov
pop
lcall
cmp
push
testl
jnp
adcl
cld
or
rcrl
cmp
pop
icebp
lods
int
scas
jae
cmpb
xchg
inc
pop
sti
outsb
fstpt
push
mov
dec
xor
jg
sbb
push
jmp
jns
jae
mov
arpl
lret
nop
lahf
je
add
lods
cmpsb
and
rorl
dec
in
aam
fnstcw
sub
leave
cmp
pushf
adc
adc
xchg
mov
add
enter
jne
shll
jae
mov
push
lret
rcl
jle
nop
imull
push
into
call
mov
pop
adc
lds
lret
dec
adc
std
bound
pop
jp
int3
fldl
hlt
ret
fnsave
mov
pusha
mov
enter
jae
sbb
fdivrl
sbb
adc
push
jb
call
mov
shlb
push
mov
aaa
arpl
insb
jl
arpl
lea
fisubrl
je
sti
add
xor
test
add
sbb
sbb
pop
xchg
in
pop
out
rcrl
cltd
jo
add
mov
dec
aam
stos
call
or
fadds
mov
dec
imul
xor
jle
push
inc
lock
add
aaa
push
pop
scas
jae
lods
mov
flds
mov
push
dec
or
jns
xchg
pop
or
xor
fdivs
cli
fnstsw
aas
cmpsb
hlt
scas
push
outsb
cmp
or
js
in
pop
pushf
fnsave
and
out
jg
rcll
out
dec
jnp
iret
cwtl
cmp
mov
repnz
xchg
dec
xor
jno
stos
ljmp
and
subb
jae
mov
adc
in
inc
fs
popf
ljmp
mov
mov
push
jmp
xchg
gs
test
rorl
mov
mov
in
outsl
mul
push
stos
xchg
nop
out
outsb
jo
std
inc
xchg
out
pop
xchg
jg
jmp
adc
pop
rorl
movsb
mov
fnstcw
negl
push
jge
dec
sub
jle
push
lahf
testb
lods
or
call
sub
adc
cmpsl
imul
ljmp
mov
jae
aas
fdivrp
int
lock
iret
jns
fcoms
inc
andb
dec
adc
test
jp
mov
or
jae
inc
das
stc
cwtl
or
test
icebp
arpl
loop
loopne
das
outsb
insb
je
jae
mov
jnp
lods
ds
jge
int3
insl
cmp
jb
sub
dec
out
push
and
push
sub
xchg
mov
int3
jno,pt
pcmpgtd
jne
push
jle
incl
mov
dec
jo
inc
inc
sti
imul
fs
cld
cmpsb
mov
addr16
mov
fisubrl
int
cmpsb
loop
sbb
mov
xchg
pop
push
lods
pop
or
out
jg
out
int3
jo
arpl
out
in
lahf
add
addr16
insb
push
xor
cld
or
js
arpl
ss
les
bsr
inc
aas
hlt
xchg
outsl
lock
sbb
dec
xchg
sub
int3
stos
push
xor
inc
outsl
mov
scas
mov
divb
dec
testl
xchg
push
out
outsb
lret
push
xlat
mov
jae
shrl
pop
xlat
mov
mov
xchg
lods
shrl
fcmovb
in
out
imul
push
gs
inc
mov
cmp
and
cmpsl
popl
mov
pop
add
jecxz
js
jns
xlat
mov
cld
insl
cld
inc
and
inc
mov
imul
scas
cmp
int
scas
or
sbb
inc
mov
repz
lods
mov
jo
in
aad
add
push
xchg
pop
loop
mov
in
and
lret
jmp
add
push
out
mov
jecxz
mov
push
pop
rcr
dec
les
jmp
testb
shll
stos
cli
scas
ret
imull
insb
pop
in
leave
jl
pop
push
cmpsl
mov
mov
out
in
fwait
addr16
push
iret
stc
push
std
jo
xor
sbb
aad
jnp
dec
dec
mov
xchg
shlb
and
mov
inc
ljmp
or
fldt
xchg
jbe
fmulp
mov
cmp
jo
addr16
int
insb
sti
push
xchg
pop
mov
jg
outsl
cmc
or
cld
lods
jns
lahf
insb
insl
int
xchg
test
insb
sub
iret
call
in
mov
clc
cwtl
test
cmpsb
sub
xchg
and
scas
mov
and
push
popl
addb
test
jb
shlb
push
loopne
xor
xor
jae
pop
push
jg
sti
jle
sahf
jg
js
cli
mov
jbe
cs
dec
insb
mov
es
cmc
xchg
arpl
sar
mov
xorl
outsl
push
dec
outsb
ds
pusha
jle
je
sub
push
cmp
push
iret
imul
push
leave
mov
repz
repz
cmp
clc
movsb
pop
push
push
movsl
out
push
push
scas
sahf
adc
adcb
xor
cmp
and
pop
jae
fsubrp
jecxz
add
std
cltd
in
jmp
sub
push
testl
mov
pop
xor
add
jo
push
mov
jns
sbb
dec
sbb
rorb
pop
xor
push
clc
or
lcall
sahf
dec
ret
insl
xchg
jmp
das
fcomp
in
jmp
cmpsl
ret
push
pusha
xacquire
sbb
mov
insl
cmp
aaa
movsb
push
insb
fdivs
rorl
mov
xor
ljmp
gs
sar
in
add
dec
shrb
data16
fmuls
imul
mov
fldl
and
scas
leave
int3
cld
enter
call
lods
mov
pop
ds
cmp
jp
cld
push
scas
pusha
shlb
popa
les
adc
jb
push
aad
js
cmp
jp
call
scas
jo
out
push
repnz
pop
jae
pop
mov
in
cmp
or
jbe
nop
mov
lahf
inc
adc
ret
aas
cmpsl
pusha
stos
jge
out
or
es
pop
lea
sbb
jb
mov
mov
xor
push
inc
xor
push
mov
js
sbb
in
inc
scas
out
ret
mov
and
jl
rorl
rorl
sub
in
sub
movsb
xor
xchg
xor
mov
cmpsb
push
sbb
pusha
and
push
mov
in
shll
push
jae
repz
mov
push
push
or
sub
bound
cmp
cmp
xchg
xchg
mov
fisubrs
sbb
adc
cmc
lret
pop
sub
int
rcl
test
shl
push
lret
inc
call
push
cmpsl
adc
je
outsl
cmp
jbe
mov
adc
fcmovnb
stos
xchg
xor
out
mov
popa
cmp
pusha
arpl
adc
sbb
rorb
mov
mov
add
jg
sbb
xor
out
lods
mov
fdivrl
les
xor
in
push
aad
xchg
daa
imul
pusha
mov
jae
enter
jle
dec
pop
jge
dec
mov
push
aaa
test
loopne
add
push
out
pop
jns
outsb
rclb
mov
out
pop
pop
mov
xchg
jle
pop
jno
sbb
mov
movsl
push
xor
mov
push
mov
adcb
pop
mov
call
mov
pop
adc
add
lret
lret
int3
push
hlt
and
shr
dec
jae
add
into
jle
ja
lret
das
xor
inc
jmp
mov
int
testl
sub
scas
jae
das
jo
inc
push
sti
sub
sbb
les
imul
jle
jmp
fcoml
scas
lret
cmc
jnp
imul
jle
jge
adc
icebp
and
jns
out
scas
jo
mov
dec
rclb
mov
rcll
das
cmp
push
test
jo
xchg
xchg
cmc
hlt
cld
ljmp
xor
lods
fistpll
mov
add
ret
inc
jle
mov
push
pusha
lret
jb
dec
mov
jo
fwait
ret
push
mov
pop
pop
push
lahf
push
cmp
xlat
jp
vunpckhps
lock
and
fbstp
pop
xor
mov
lds
out
push
push
call
nop
enter
jle
dec
fidivrs
xchg
or
mov
jo
shl
cmp
dec
nop
fdivl
cli
xor
mov
mov
arpl
mov
dec
pop
mov
imull
jo
aad
mov
jmp
xor
inc
movlps
xchg
imul
in
jle
xorb
xor
jo
leave
jp
push
aaa
xorb
js
adc
sar
sbb
rcl
lods
xchg
nop
xor
leave
mov
mov
dec
in
loopne
ficomps
lods
fs
jo
lcall
leave
dec
or
jns
lea
cmp
adc
jp
sub
addr16
nop
adc
fndisi(8087
jo
fadd
shrl
or
hlt
xchg
mov
ret
sbbb
add
popf
insl
mov
push
jo
mov
lahf
xor
xchg
dec
inc
pop
add
dec
sub
movntq
pusha
inc
or
push
fildl
cmp
ljmp
pusha
jne
setp
outsl
sbb
in
clc
repnz
xchg
mov
fs
enter
cmp
fdivrl
fistps
stos
mov
and
test
add
subl
sbb
jmp
dec
dec
les
loopne
loopne
orb
or
enter
mov
fimull
jae
movsl
pop
outsl
dec
lock
cmp
mov
cmp
pop
dec
jae
loopne
aam
lret
dec
jle
outsl
scas
rol
daa
cli
insb
or
cmp
cmp
sbb
scas
inc
mov
stos
xchg
hlt
mov
fs
adcb
dec
jle
adc
cmp
pop
cmp
mov
mov
push
xchg
mov
mov
pop
int
lds
jnp
inc
or
pop
clc
gs
divb
lret
push
addb
imul
push
sbb
fstl
mov
dec
dec
mov
xchg
negb
int
pop
cmp
mov
stos
xchg
or
jl
outsb
xor
inc
js
push
pop
cmp
movsl
test
mov
mov
scas
data16
gs
sbb
insb
xor
rcrb
fldcw
mov
ret
jns
rolb
out
outsl
lds
insb
and
movsb
jmp
xor
pop
gs
enter
repnz
sbb
and
push
mov
insb
ret
sub
imul
insb
sbb
jae
pusha
lret
xor
in
lock
aas
cmpsb
rolb
js
ret
sti
adc
cmp
lds
out
lock
xchg
in
mov
incl
jle
push
dec
mov
mov
sub
xor
cwtl
jb
xchg
inc
loopne
or
test
out
bound
jbe
or
jne
int3
insl
mov
shrb
jmp
mov
xchg
aas
mov
insb
lock
push
lods
aam
in
int3
mov
out
jnp
iret
xlat
sub
jo
xor
or
inc
sbb
arpl
fildl
sub
sbb
out
mov
cwtl
nop
mov
leave
mov
lock
jl
cmc
dec
rcr
addl
push
popf
ss
out
lds
cs
jo
ret
cltd
gs
out
mov
cs
mov
pop
pop
fsubrl
hlt
or
pop
fisubl
inc
jno
xor
jo
call
mov
nop
add
sub
insb
nop
cmp
jge
flds
loopne
cmp
sub
mov
daa
pop
mov
jo
pop
cltd
inc
addb
loope
sub
mov
call
orb
sbb
jo
mov
sub
xor
por
add
pause
ret
in
scas
jo
sti
jl
jp
sub
jo
sub
dec
xlat
inc
xchg
jo
xchg
mov
out
adc
repnz
lds
pop
xchg
aam
ds
jo
scas
shl
mov
ja
push
jo
inc
addr16
xor
or
pop
inc
out
test
mov
pop
dec
or
bound
inc
lds
fmuls
pop
cli
int
ds
jb
rcr
push
sub
jo
pop
and
xchg
in
cwtl
pop
cmpsb
or
sbb
cmp
das
rcrl
push
cmpl
xor
mov
arpl
out
mov
insl
add
jae
pop
in
mov
shl
test
test
jo
sti
fiaddl
shlb
out
jo
sbb
popf
mov
cmp
dec
lret
or
pop
or
push
dec
imul
nop
or
fstl
sbb
jg
fdivs
jo
jge
ja
sbb
jo
or
or
aas
dec
jne
push
shlb
popa
in
push
mov
inc
jle
nop
xor
jg
sbb
leave
sbb
jo
pop
mov
pop
icebp
xorb
and
repz
cmpsb
sbb
sbb
or
mov
je
mov
subl
jo
adcb
jo
call
cs
lcall
fidivrl
jo
cwtl
lret
cli
shll
sub
mov
ja
dec
jge
cvtpi2ps
jg
mov
test
add
mov
jo
mov
mov
dec
xchg
jns
jo
xor
and
mov
jo
test
movb
adc
out
cs
fldl
mov
jo
cli
sbb
or
cwtl
popf
shll
mov
fs
mov
dec
out
ds
jo
and
inc
or
ss
imul
xorb
mov
out
fwait
imul
jo
insl
mov
xchg
cld
lahf
mov
shrl
movsb
icebp
int3
dec
mov
mov
cwtl
push
ja
push
call
and
stc
pop
ret
rorl
cmpsb
push
bnd
dec
jb
cli
aas
add
mov
clc
idivl
rcrb
or
add
sahf
sub
hlt
test
xchg
dec
aad
add
xchg
aas
sub
cmp
popf
nop
adc
or
test
mov
cli
push
divb
add
jo
mov
imul
cld
fst
shrl
push
pop
jns
push
cmp
jo
adc
daa
or
imul
mov
int
mov
xor
and
fidivrs
stos
repnz
dec
clc
aam
cs
jo
sub
jne
and
sub
jmp
jl
sub
sub
xorl
cmp
lods
adc
pushw
rorb
jo
mov
xor
mov
scas
pop
lret
pop
jo
rorl
fimull
jno
or
je
xor
hlt
push
jmp
testl
cmp
inc
sub
push
insb
iret
dec
test
push
clc
rcll
aas
out
mov
repz
dec
push
call
lods
jo
ljmp
test
sbbl
repnz
cmpsl
mov
sahf
xchg
or
push
mov
jmp
popf
inc
test
push
jo
cmpsb
dec
shlb
sbb
jno
shll
les
aaa
xor
xchg
xlat
push
pop
jo
scas
or
jo
or
jmp
lea
pop
push
jp,pn
cmpsb
mov
shlb
jo
sbb
sbb
out
jo
shll
call
lcall
div
jbe
stos
jo
jle
mov
gs
ret
jo
or
insl
scas
iret
adc
rclb
push
roll
das
fs
inc
lods
out
jns
mov
aam
icebp
insb
jns
jo
xor
pop
roll
jb
imul
jo
and
xchg
aam
jl
jecxz
and
jle
bound
nop
mov
push
push
or
out
inc
lahf
fwait
mov
adc
ds
repz
add
xchg
mov
cmp
xor
jo
and
add
push
sbb
jo
enter
loope
outsl
jo
sub
mov
jo
inc
mov
mov
cmp
push
jo
es
or
and
jno
mov
fs
push
and
pop
fildl
notb
psubq
lcall
cwtl
push
jp
icebp
jns
mov
out
std
and
push
cwtl
push
jo
inc
popa
mov
jne
dec
jo
add
inc
mov
btr
push
cwtl
jl
insl
sub
jo
rcr
sahf
dec
and
push
add
sbb
into
fcoms
jo
push
xchg
pop
ljmp
push
cmc
push
mov
scas
pop
or
ja
inc
btc
ja
inc
movsb
cli
sbb
and
rorl
les
fsts
jo
dec
movsb
pop
pop
je
xlat
xor
jo
mov
sbb
sub
hlt
pop
cmpb
jo
lds
sbb
stos
xchg
sub
je
imul
adc
insb
xor
test
cld
ret
dec
clc
shrb
and
outsl
or
ja
jb
rorl
jns
add
jo
jle
xor
jno
insb
out
xor
pop
jl
pop
jbe
and
fadds
hlt
jo
popf
inc
nop
fs
mov
sbb
push
fdivp
mov
scas
int
mov
bound
adc
dec
jo
mov
xor
adc
push
adc
add
or
pop
bound
inc
es
mov
into
repz
hlt
jl
repz
mov
jo
xchg
push
push
imul
lods
mov
mov
js
insb
pop
stos
jo
cmp
inc
mov
jo
les
jge
jo
nop
push
pop
xchg
dec
jo
xchg
inc
jo
sub
sbb
std
and
mov
push
hlt
inc
or
nop
repz
imul
mov
outsl
iret
in
pusha
mov
in
or
xchg
repz
pop
arpl
jl
dec
push
sti
jns
and
jmp
pop
and
sar
ret
jno
mov
or
fdivl
mov
and
push
sbb
test
in
cmp
scas
xor
out
jle
clc
leave
pop
sbb
sbb
movsb
fs
vmread
fmul
ret
aad
sarb
fisubrs
add
je
cmpsw
pushf
xchg
sub
push
mov
subl
inc
cwtd
inc
in
cmpsb
push
jnp
add
jo
fistps
arpl
pop
outsl
loop
jl
or
add
dec
cmp
push
loop
and
jne
jbe
push
sbb
and
rcrb
fnstcw
sbb
mov
lock
in
inc
sbb
ds
dec
and
push
daa
mov
shrb
mov
popa
rcr
or
mov
jo
outsl
push
mov
arpl
sub
cmpsl
repnz
xor
test
mov
cmpsl
jno
or
fsub
data16
movsl
lcall
and
std
push
xchg
test
out
bound
imul
pop
test
data16
out
mov
sti
adc
sub
repnz
mov
jle
cwtl
or
push
outsb
sbb
stos
pushf
push
mov
sbb
or
xchg
shlb
dec
xor
mov
push
inc
addr16
orb
lahf
pop
rclb
pop
mov
jnp
or
mov
mov
push
fistps
push
arpl
cltd
add
les
dec
arpl
and
mov
jno
add
insb
mov
push
hlt
inc
test
push
pop
dec
mov
sub
arpl
test
pop
or
xchg
shlb
imull
fistl
xchg
jle
adc
jae
dec
test
mov
cmpsl
inc
push
xchg
std
cmp
les
rcll
fldl
jo
xchg
pop
insl
jp
fdivs
out
mov
xchg
leave
out
cmp
loope
jo
xorps
in
roll
popf
out
add
sub
gs
js
test
test
in
mov
ret
adc
call
pushl
and
jae
test
jbe
jo
cmpsb
mov
pop
int3
mov
ss
mov
scas
sbb
ret
fdivs
sub
pushf
jns
xor
fucompp
cmc
xor
in
mov
adcb
enter
dec
shrl
addb
jle
jmp
mov
sbb
adc
in
aam
xchg
pop
out
xchg
jno
je
lea
fstpl
imul
shrb
movsb
mov
push
mov
jp
inc
and
jp
jo
out
cmp
xor
ds
test
sbb
mov
les
push
in
out
in
pop
adc
loopne
out
mov
jo
adc
mov
int
lods
js
ret
push
jae
push
nop
and
sarb
mov
xchg
repz
sub
mov
jo
rcr
fists
lcall
add
sub
int3
nop
out
add
mov
jle
into
test
pop
fsts
mov
and
xor
pop
or
adc
mov
leave
xchg
wrmsr
jae
lret
mov
pop
dec
lods
push
dec
test
sbb
or
cmp
sub
jo
mov
lret
inc
cs
xor
je
imul
in
imul
stos
adc
dec
dec
pop
insl
jecxz
mov
or
push
push
dec
fstl
inc
test
sbb
rorl
push
xor
cmpsb
loope
inc
ja
jmp
push
push
jo
repz
add
sbb
xchg
dec
cli
lahf
icebp
xor
xor
punpcklbw
push
or
mov
xchg
in
insb
jecxz
jb
sub
mov
stc
jle
jo
aad
out
jl
pop
add
dec
mov
lahf
xchg
adc
lods
sbb
lcall
dec
subl
push
rclb
xor
adc
mov
lock
fisubl
push
outsb
xchg
dec
call
xchg
insl
jo
dec
enter
hlt
xor
shl
push
nop
out
mov
jno
xor
jbe
cmp
jae
ficoms
lea
xor
push
in
pop
pop
stos
js
mov
addr16
jo
sbb
pop
jle
push
xlat
jae
mov
mov
cmc
scas
nop
jo
int3
mov
sbb
imul
je
sbb
jo
scas
push
cli
test
add
jo
add
shlb
lcall
mov
xor
jo
xchg
cli
cld
push
hlt
aaa
pushf
jo
insb
loopne
scas
movsl
or
jns
xchg
clts
xchg
push
jo
and
out
adc
outsb
jo
mov
mov
jge
rol
cmp
cmp
test
mov
xchg
bound
pop
inc
mov
mov
js
into
add
mov
shlb
sbb
ret
xor
fistpll
xchg
or
jo
adc
ret
aaa
xchg
mov
jo
jmp
mov
or
cmp
pop
mov
mov
stos
jmp
jo
mov
push
sub
cld
xchg
jmp
push
xor
fisttpll
loope
cs
loopne
js
push
mov
inc
nop
jo
xchg
lea
lcall
dec
shrb
icebp
mov
fs
std
das
js
movsb
cmp
sahf
push
pop
add
jecxz
aam
or
fdiv
sbb
icebp
mov
int
add
cmp
sub
fwait
cmc
sub
test
clc
ficoms
loope
mov
xlat
outsl
insb
jnp
mov
icebp
jmp
jo
inc
add
push
repnz
jo
lods
jbe
xchg
addr16
jb
jo
ja
aad
adc
add
lods
rcrl
xor
ds
xor
stc
jp
bound
jo
lea
data16
jmp
pop
add
xchg
dec
call
xor
mov
cmp
mov
lock
dec
lods
stc
mov
cltd
mov
repz
jo
pop
es
in
lea
stos
addb
or
sub
xchg
enter
and
arpl
ret
jo
xor
ss
cmp
mov
xchg
cwtl
daa
jae
or
cmp
subb
xchg
test
lods
cs
push
adc
pop
push
lcall
jl
mov
mov
dec
adc
cltd
sahf
cmp
in
mov
in
inc
imul
cmp
enter
call
sbb
insb
and
jnp
cmp
lea
jo
shl
shl
std
data16
ret
dec
bound
scas
and
inc
push
mov
cmpsl
mov
cmp
pop
into
sub
jp
mov
fcmovnbe
xchg
inc
lcall
cmc
gs
xchg
adc
xchg
jo
insl
mov
popa
jmp
arpl
dec
inc
dec
ljmp
clc
pcmpeqb
fimull
mov
jo
mov
inc
les
mov
fistpl
xor
js
cs
and
push
iret
mov
xchg
pop
push
rolb
neg
push
mov
dec
lret
ljmp
aad
lcall
xlat
dec
mov
mov
out
loop
mov
push
cwtl
mov
imul
mov
cmpb
jp
mov
or
jns
mov
lcall
rep
push
arpl
jno
mov
hlt
sahf
and
pop
or
jmp
add
xchg
fstpl
jo
fistpll
mov
or
and
mov
lret
mov
ja
push
lahf
es
outsb
adc
popl
inc
pop
lods
lds
int3
push
xchg
and
es
cltd
sbb
out
jae
mov
fnsave
adc
in
and
dec
outsb
or
mov
sbb
or
pop
mov
shl
out
test
cmpsl
jge
pop
mov
mov
mov
inc
fisubs
sbb
pop
out
inc
xchg
pop
pop
jp
lock
test
jno
outsb
pop
mov
dec
jmp
adcb
shrb
xchg
mov
repnz
rcrb
push
push
es
fstps
pop
fs
js
push
push
push
into
xor
sti
lds
data16
dec
outsb
aaa
mov
jmp
fwait
add
jae
test
cmp
notl
sahf
sti
push
push
xor
dec
pop
imul
scas
and
arpl
adc
shrl
cs
jmp
or
orw
loope
fcompl
bound
push
out
icebp
inc
mov
addr16
in
pop
jl
mov
cmp
ss
and
inc
out
push
pop
shlb
dec
mov
inc
sbb
cmp
cmp
mov
xor
mov
stc
fucomip
sti
dec
or
fldcw
or
es
and
stc
adc
jno
sub
cmpsb
lods
push
nop
cmpsl
cmc
fwait
pop
out
out
push
xchg
arpl
cmp
xlat
cmp
dec
icebp
inc
dec
push
push
and
xor
out
scas
push
out
sub
xchg
mov
mov
subl
jl
xchg
mov
push
xlat
lock
jmp
incl
pop
inc
add
mov
push
imul
jbe
and
sbb
mov
jae
mov
call
push
and
fisubs
popf
into
pop
sarb
repnz
pop
daa
and
and
cs
out
bswap
sbb
and
push
leave
sbb
xorl
or
lahf
sbb
pusha
sub
in
in
inc
inc
adc
mov
scas
push
or
scas
push
enter
bound
scas
xchg
insb
out
and
stc
fs
add
xchg
std
fs
outsb
mov
iret
scas
stos
jnp
fbstp
pop
sbb
sub
or
data16
jg
sarl
scas
cmp
dec
push
mov
xor
loope
arpl
add
push
jne
xor
sbb
xor
or
push
mov
sub
pushf
cltd
push
mov
xchg
popf
andb
test
cmp
ds
cmp
andb
das
pop
lret
jg
ss
ffree
call
adc
aam
fimull
pusha
lahf
sub
popa
push
lea
mov
mov
xor
cmpl
addr16
repz
mov
mov
pop
and
lahf
scas
outsl
pop
cmp
fildll
rclb
cmp
faddl
cmp
dec
dec
mov
scas
enter
stc
jno
xorb
jo
aam
mov
mov
mov
fldcw
xchg
mov
mov
jg
aaa
jle
sbb
arpl
sub
pop
jmp
fsubrl
pop
push
xchg
jno
stc
sbb
jmp
or
jmp
imull
lret
and
mov
int
jp
test
std
or
insl
inc
inc
arpl
out
out
fimull
mov
lret
arpl
xor
or
ret
or
and
cmpb
push
or
cmpsb
sbb
push
inc
mov
adc
inc
in
xchg
insb
in
cmpsl
xchg
data16
and
push
push
ja
ficoml
mov
pop
xchg
jno
mov
in
cli
jae
stos
jno
mov
pop
cmp
test
jp
inc
insl
dec
xor
mov
in
mov
jae
enter
jl
mov
or
arpl
pop
and
mov
jae
dec
leave
out
aam
lea
out
cltd
cmp
xchg
mov
outsb
cli
out
inc
cs
mov
lret
jbe
aaa
stos
lds
movsl
dec
sarb
and
push
fdivrs
adc
xchg
mov
lea
sar
xchg
push
jmp
mov
outsl
inc
sbb
xchg
cwtl
lret
shl
push
mov
cs
dec
cmp
clc
cmpsl
data16
xor
inc
cmp
sub
lahf
or
push
repz
mov
jle
pusha
outsl
cmp
call
sbb
or
fildl
repnz
pusha
dec
sub
test
jbe
xchg
cltd
into
imul
jb
ss
cmpsl
icebp
jecxz
mov
popf
sbb
push
mov
fs
pop
sub
in
jp
jle
int3
cltd
in
jo
arpl
xchg
push
xor
sub
mov
repnz
push
lret
cs
ja
jne
scas
sbb
xchg
pop
push
xor
and
shlb
cmpsl
sbb
and
repnz
int3
inc
pop
in
push
push
sbb
lret
aaa
adc
push
test
sahf
mov
cltd
jo
and
sub
sub
cs
dec
mov
nop
cmp
shlb
push
sar
outsb
mov
scas
xchg
add
insl
push
mov
int3
js
xor
pusha
mov
and
pusha
shrb
add
test
aam
loope
hlt
push
outsb
sbb
sbb
ljmp
pop
insb
rol
aad
pop
movsb
inc
add
adc
dec
out
xchg
add
outsl
mov
stos
insb
rcrb
push
ss
ror
jp
popf
push
insb
loop
dec
push
pop
and
pop
cmp
stos
xorb
lahf
clc
mov
lds
scas
or
mov
inc
js
pop
std
pop
xchg
test
pop
mov
pop
mov
loopne
push
aad
and
arpl
loopne
push
stc
xor
call
add
pop
mov
mov
xchg
jae
aaa
mov
inc
mov
aam
js
movb
outsl
pop
jae
stc
repz
mov
adc
call
sbb
xor
std
and
imul
jne
std
lret
aas
mov
arpl
mov
in
fldl
lock
dec
push
cmp
adc
mov
mov
fldenv
cmc
or
jb
addr16
mov
xchg
mov
add
pop
data16
gs
or
sbb
iret
inc
int3
and
jmp
dec
add
add
pop
data16
repz
es
jg
pop
mov
inc
mov
call
sar
pop
dec
pop
cmpsb
push
movsl
mov
mov
jnp
or
mov
push
arpl
mov
or
les
lock
jge
and
cltd
je
leave
scas
pop
inc
jl
lods
push
and
lods
test
cli
idiv
or
and
cmp
pop
lock
jl
rorb
hlt
icebp
jns
ret
mov
mov
sub
stos
fisubl
pop
js
out
add
mov
jns
or
mov
inc
test
bound
xchg
or
sub
jno
or
jb
sbb
in
cmp
addr16
dec
clc
rcr
fwait
xlat
cmpb
ljmp
mov
inc
popf
cld
push
idivb
pop
jae
icebp
push
popf
sbb
andl
jge
cmp
cltd
clc
addr16
in
jecxz
arpl
pop
lock
xchg
pop
fs
and
ret
cs
test
push
push
add
iret
push
push
dec
scas
insb
sub
aaa
out
jnp
mov
mov
add
pop
cltd
outsb
fisttpl
bound
push
pop
fucomip
xchg
scas
call
mov
dec
lret
out
std
arpl
xchg
inc
dec
adcl
sub
mov
push
sbb
rcl
aaa
and
pusha
pop
fisubrl
jbe
fs
imul
movsb
jecxz
sub
cmp
mov
adc
sahf
in
xlat
sub
xchg
movsl
sub
push
jae
jl
mov
lock
hlt
pusha
dec
out
in
lret
inc
insb
es
and
dec
movl
cmp
lds
jns
iret
push
push
ds
or
dec
shll
inc
cmp
fwait
xchg
into
xchg
insb
xchg
scas
scas
jns
pop
xor
add
jae
dec
cmc
rolb
dec
mov
sbb
ss
pop
cmp
xchg
and
sbbb
in
mov
std
enter
cmpb
dec
dec
in
fisubrl
das
incl
adc
andb
sarb
negl
inc
lock
imul
and
jge
sub
addr16
push
cmpb
sub
lret
lea
shll
insl
xor
cmpl
mov
push
sub
lds
jl
lret
adc
push
js
gs
frstor
scas
push
adc
cmpsl
out
fs
cmp
jbe
lea
pop
sbb
dec
cmp
iret
loope
test
mov
mov
inc
ss
scas
pop
mov
insb
lret
sub
sbb
dec
clc
arpl
frstor
pop
out
fsts
je
dec
and
hlt
enter
cs
jl
or
es
xchg
cmp
mov
stc
cs
int3
jle
add
push
scas
add
adc
pop
xlat
aam
pop
cmp
jo
xor
add
push
push
sub
sbb
imul
pop
inc
repnz
mov
push
in
insb
mov
jl
aas
xor
fstl
shlb
mov
cwtl
jns
sbb
sub
and
or
xchg
out
js
lock
movsl
icebp
pusha
adc
rorb
test
push
fimuls
wbinvd
in
mov
dec
dec
xchg
push
rcr
leave
scas
xchg
roll
sub
out
ret
mov
jge
jle
pop
inc
lret
jae
decl
sub
and
jb
fistpll
dec
pusha
mov
cmp
add
pop
inc
in
sbb
sahf
js
pushw
mov
or
sub
sbb
icebp
xor
jl
mov
cld
lcall
dec
popa
adc
ljmp
cmp
cmp
fldt
stos
pusha
jne
or
movsb
cmp
mov
or
and
jae
add
jle
adc
outsl
mov
std
fstps
lahf
xor
out
fdivl
pop
stos
das
or
pop
mov
pop
dec
pop
popa
loope
jl
sbb
mov
or
je
xor
ljmp
or
data16
stos
inc
jnp
mov
lahf
pop
mov
pusha
jno
arpl
jnp
loopne
mov
add
mov
or
fstpl
cmpsl
bound
scas
push
mov
popa
pop
adc
xor
cmp
addr16
adc
test
out
fwait
xor
sbb
push
out
cmp
in
cmp
cmc
pop
mov
cmpsl
cmp
lcall
divl
inc
sbb
pop
xor
gs
into
dec
addr16
loopne
stc
and
mov
jae
sbb
ja
jmp
loopne
imul
lret
push
ja,pn
xchg
out
push
jp
push
mov
xchg
or
fldl
sti
xchg
sub
xchg
sbb
movq
stos
cmp
push
jle
and
cmp
aas
jae
in
pushf
cmp
push
arpl
push
xchg
in
rcrb
mov
cmp
mulb
pop
sub
jo
jecxz
push
cli
cmovae
fidivs
mov
fs
mov
out
fstl
add
pop
push
jmp
dec
jmp
sbb
out
orb
loop
xchg
and
inc
rolb
add
sub
xchg
add
sub
outsb
insw
outsb
call
out
xchg
arpl
cmpsb
and
pop
jae
and
shl
mov
out
stos
sub
push
das
out
jae
arpl
sbb
jmp
push
imul
xchg
addr16
mov
sbb
imul
popf
inc
and
pop
jle
xchg
lock
pop
cmp
mov
out
fsubrp
jo
cmp
mov
xchg
sbb
dec
es
sub
pop
jmp
mov
adc
div
cmp
mov
add
xchg
fldz
inc
arpl
cmpsl
sbb
out
insb
rolb
test
leave
push
test
or
sub
out
outsl
test
xchg
insb
jmp
pop
in
adc
push
ljmp
jmp
mov
inc
inc
fs
fsts
dec
outsb
dec
ja
hlt
mulb
mov
lea
or
sbb
mov
xchg
push
and
or
daa
lahf
fistl
les
cld
dec
adc
sub
lcall
out
out
jne
jno
in
jae
mov
shlb
in
in
jne
in
push
outsl
test
out
mov
jae
adc
xchg
mov
lds
add
xlat
sbb
int3
std
and
sbb
ljmp
aad
lahf
xchg
lret
bswap
lods
mov
push
shrb
mov
and
sbb
pop
pop
in
pop
popf
jae
sub
ret
loopne
clc
hlt
push
insb
lock
filds
je
and
insl
fs
ret
mov
and
push
pop
movsl
or
ja
mov
jle
lds
dec
jae
adc
fstps
pusha
dec
rolb
iret
cwtl
imul
fs
mov
aad
scas
mov
xorb
sbb
fs
out
cli
fadds
and
push
lods
dec
enter
lcall
add
ret
lods
push
arpl
push
nop
pop
push
lock
in
cs
std
dec
daa
out
add
mov
ficoml
aas
push
hlt
or
lea
or
add
scas
jle
into
ja
or
fists
sub
push
and
arpl
inc
je
fiaddl
leave
int
push
das
mov
inc
push
dec
fdivrs
test
inc
jae
movsl
popa
xchg
mov
shll
mov
divl
stos
xor
push
test
ja
dec
and
jmp
xchg
repz
pusha
add
sbb
in
mov
les
or
fmull
scas
adc
imull
mov
push
xchg
repnz
movl
inc
popa
push
inc
int3
add
mov
jns
js
lahf
cmp
cmp
dec
or
out
jnp
sarl
cmpsb
fcmovnb
js
test
sub
fdivrl
pop
rep
cld
sub
mov
in
movsl
fsub
lock
xchg
das
xchg
mov
mov
ret
inc
scas
imul
adc
jae
es
arpl
mov
push
xchg
shll
mov
sub
push
mov
mov
ss
pop
mov
mov
pop
repz
shrl
cmp
lds
sbb
mov
push
and
mov
in
ja
or
mov
adc
in
jne
mov
pop
pusha
in
inc
push
es
js
push
mov
mov
jl
popf
mov
sbb
push
xorl
sbbb
xor
dec
out
pop
push
hlt
data16
insl
daa
imul
adc
gs
jg
pop
push
push
pushf
fcomi
loopne
mov
iret
push
lahf
lods
cli
out
mov
sahf
xchg
fdivrl
cli
sub
sahf
call
add
shlb
jo
out
dec
fwait
sbb
dec
jb
jle
in
jo
test
pop
ret
cwtl
adc
enter
mov
inc
fmull
fs
cltd
lret
out
mov
popf
repnz
mov
in
and
jns
cmpsb
dec
pusha
jl
in
mov
dec
inc
pop
or
cmp
imul
jbe
mov
and
je
mov
leave
frstor
fmull
mov
push
dec
push
imul
call
outsl
es
sub
jge
sub
testl
pop
daa
scas
cli
outsb
rorb
mov
pop
pop
push
xchg
iret
lret
int
push
std
sbb
jle
sub
sti
or
mov
sub
pusha
mov
data16
jb
xor
dec
cltd
enter
push
jae
repnz
add
rorb
xlat
pop
cmc
notl
imul
je
popf
into
cwtl
add
addr16
and
mov
sbb
jmp
cld
outsl
push
pusha
arpl
out
push
mov
aaa
cmpsb
aas
mov
out
mov
push
dec
xor
pop
xor
int3
jmp
inc
test
push
push
out
pop
mov
lds
or
rcrl
adc
jae
mov
prefetcht1
outsb
push
dec
in
push
mov
push
push
enter
into
mov
jbe
sbb
shlb
mov
aad
xor
aaa
xor
arpl
inc
lret
mov
sbb
loope
mov
mov
adc
sub
xor
insb
popa
std
dec
icebp
iret
lret
push
jecxz
mov
mov
mov
lret
sub
imul
add
stc
cs
mov
and
test
repz
mov
push
mov
cmp
out
dec
jns
push
pop
scas
jne
iret
or
and
pop
inc
leave
or
push
aaa
xchg
dec
aas
lock
movsl
in
xor
push
pop
jmp
int
sbb
push
shlb
sbb
test
js
pop
push
push
xchg
cmpsb
cli
lock
push
shl
das
mov
fnsave
xor
push
fwait
aad
insb
adc
pusha
adc
mov
aaa
sahf
lods
push
push
push
inc
rcrb
inc
movsb
push
lcall
std
xchg
cmp
jo
mov
push
popa
mov
and
pextrw
rcpps
insb
jb
movsb
mov
stc
sub
xchg
mov
mov
jg
std
dec
enter
pop
ficoml
xlat
insl
inc
sahf
pop
rorb
arpl
dec
scas
add
xchg
fcoms
cmpsb
jb
lret
dec
ret
mov
sub
fsubs
jno
nop
mov
lock
sbb
test
and
lret
xchg
sbbb
out
test
mov
lret
jmp
iret
mov
and
push
add
rol
cld
test
sbb
xchg
dec
jge
imul
out
mov
clc
mov
xchg
pop
xchg
int3
icebp
lods
rolb
test
push
outsb
mov
jge
fdivrl
mov
mov
add
push
push
mov
dec
gs
sub
cmp
jge
jg
push
jg
std
pop
dec
cmp
arpl
jmp
mov
mov
jmp
inc
and
or
mov
into
mov
in
int3
int3
bound
iret
sub
xor
mov
cltd
lahf
cmp
cmpsl
repz
cmc
sub
jae
ds
cmpsb
push
add
fnstsw
lds
lcall
xor
xchg
jp
jbe
or
sub
fsubs
jae
push
cmp
repnz
fldt
in
std
ret
push
mov
adc
xor
cmp
repnz
sbb
and
xchg
or
or
jno
mov
mov
pop
stc
ret
insl
xchg
aam
sub
out
sbb
or
movsb
ret
add
repnz
push
fildl
mov
push
in
cmp
inc
dec
push
sbb
dec
leave
push
lock
cmc
mov
lods
adc
inc
and
gs
pop
or
fidivrl
push
imul
or
add
xchg
in
xchg
sbb
xchg
mul
mov
cli
pusha
cs
jbe
sbb
xchg
mov
dec
jns
jo
or
loop
lcall
clc
push
out
add
jb
mov
popa
push
xchg
push
aam
inc
insl
cmpsl
cmp
dec
mov
call
scas
shr
add
and
or
inc
add
aam
icebp
pop
jo
sub
push
js
jmp
cmpxchg8b
out
jp
push
mov
pop
rorb
orb
repz
xchg
xor
fisubs
scas
loop
xchg
fnstcw
lods
lcall
in
push
out
mov
push
pusha
mov
je
loope
enter
jo
sti
not
cmp
mov
icebp
adc
sbb
jbe
dec
loopne
nop
std
dec
shlb
mov
dec
pop
fwait
lods
jge
mov
add
add
or
fidivl
cmp
pusha
imul
sbb
xor
sbb
xchg
mov
dec
pop
adc
jne
imul
std
test
lret
outsb
int3
jo
call
stos
pop
jo
sub
xchg
ss
aas
mov
cmp
inc
pop
jb
jo
xlat
inc
adc
xchg
inc
jl
cmpsl
cmp
push
es
js
out
sti
jb
or
add
nop
push
aad
jge
xor
stc
insb
pusha
dec
jo
jl
jbe
movsb
inc
icebp
int
mov
sti
push
jns
imul
mov
jne
xchg
pop
add
jecxz
adc
loop
shlb
dec
add
push
push
shlb
xchg
mov
jo
mov
push
stos
inc
xor
cs
mov
sbb
popf
inc
inc
jge
jbe
sub
iret
lret
jno
pop
jg
cltd
popf
push
lds
xchg
loop
xor
fsubl
or
xor
pop
cmp
push
push
fsubl
dec
lds
outsl
xchg
pop
out
stos
lods
jo
inc
adcl
jo
lock
jecxz
nop
mov
and
or
dec
lock
jecxz
jno
pop
or
and
ror
nop
xlat
stos
js
lods
pop
ja
sub
mov
loop
shll
adc
cs
add
sub
scas
nop
mov
idivl
jg
xor
popf
inc
lock
mov
mov
adc
mov
orb
inc
insb
cltd
cmp
sub
test
xchg
jecxz
inc
fwait
jno
iret
jo
repz
jo
mov
loop
push
pop
dec
inc
pop
je
rorb
push
decb
jo
ljmp
jo
shlb
ds
pop
imul
cmc
shl
dec
dec
xorb
mov
jmp
mov
and
jo
sbb
sub
jo
mov
cmpsb
int3
inc
je
jo
enter
in
stc
fs
push
mov
filds
mov
dec
packuswb
das
mov
mov
mov
mov
jl
shlb
cmc
ret
int3
mov
inc
jmp
jo
pop
push
pop
fldl
data16
bound
mov
out
push
jo
mov
popa
xor
enter
dec
mov
jb
test
push
mov
and
aam
cld
mov
test
dec
mov
adc
daa
jb
mov
jbe
sbbb
mov
xorl
xor
fisubrs
inc
sbb
sub
shr
sub
xchg
jb
jo
inc
sahf
dec
divb
pushf
cmpsl
sbb
hlt
and
xchg
push
ret
jo
xor
jo
sbb
mov
sbb
pop
xorb
fisttpl
aas
imul
mov
inc
cmp
sub
inc
js
test
std
icebp
sbb
insb
lea
sub
and
in
jmp
inc
mov
jo
cli
jg
pushf
cmp
cs
out
pop
ss
xor
addr16
repz
mov
nop
mov
lahf
popa
push
jo
dec
adc
sub
and
jo
or
mov
jo
outsb
sarl
xor
jne
fstp
adc
iret
ljmp
xor
xorb
inc
lret
imul
add
jle
mov
fcomps
aaa
or
psrad
bound
repz
jno
pop
jo
or
rorl
insb
xor
push
ret
sbb
dec
ja
rcrb
test
sub
mov
pusha
dec
jle
push
adc
adc
jg
push
icebp
shll
cmp
enter
xorps
addl
iret
jo
dec
mov
int3
push
jb
jo
sbb
out
lods
popf
repz
push
xchg
not
enter
bound
dec
jo
mov
jo
sub
frstor
xor
sbb
jno
lret
pop
jae
out
jo
jp
outsl
cmpsl
dec
mov
or
dec
outsb
sbb
js
roll
aam
xor
lcall
addr16
dec
jmp
push
push
fcmovb
rol
sahf
cmpsb
jb
push
push
or
outsb
into
out
mov
lods
jo
push
out
xor
lods
mov
cmc
repnz
vpsraw
sahf
sbb
jb
fs
or
xchg
shll
fs
jo
ror
sarb
jge
push
dec
jbe
inc
jl
clc
push
push
aam
push
add
jo
pop
adc
sub
ss
subb
inc
in
sarb
push
push
notb
add
xor
push
jmp
fs
mov
hlt
test
rol
xor
jo
and
jp
ret
mov
rcr
cld
sub
dec
roll
ljmp
hlt
dec
jo
lods
pop
je
div
in
jo
jmp
test
push
lret
adc
imul
jmp
xchg
xchg
pop
xchg
dec
lds
lods
or
aam
mov
rcll
cmp
xchg
cmp
jmp
jl
jo
jge
jnp
push
loope
popf
cmc
rcr
or
iret
aaa
js
jl
mov
scas
cs
fs
adc
js
mov
sbbb
sbb
jo
scas
and
sbb
push
mov
inc
jo
cmp
mov
fidivrl
lcall
sbb
jno
aaa
push
push
and
cmc
sub
ss
lds
fldcw
inc
xchg
jo
fwait
pop
nop
sub
loope
jo
ret
enter
jo
les
or
pusha
inc
jo
lea
pop
or
psrlw
insl
jo
jns
push
jp
mov
bound
and
jo
jns
jg
lret
inc
insl
xchg
bound
mov
cmpsl
sbb
sub
js
push
dec
xor
and
out
xor
aam
test
cmp
jo
pop
cltd
outsl
aaa
mov
or
pop
neg
loopne
cwtl
push
jae
xlat
jbe
push
jnp
pop
add
lock
lret
xor
jno
data16
xor
jge
popa
divb
aad
cltd
lret
and
loopne
sub
rorb
test
daa
jmp
and
jo
push
and
sbb
repnz
mov
mov
ret
xchg
std
fdivp
xchg
in
jo
xchg
dec
shlb
adc
daa
hlt
aaa
dec
xchg
ljmp
loop
sahf
lock
push
xchg
pop
xor
sbb
sbb
in
insb
sbb
jmp
sbb
push
andl
cmp
sbb
jae
test
imul
push
jns
lea
sub
adc
stos
jae
dec
in
lahf
xor
or
jge
in
insl
sbb
push
cmp
xor
push
dec
and
icebp
ja
push
cmp
test
fldenv
xchg
icebp
push
insl
ss
cmp
fmulp
sarl
xchg
jl
pop
xor
jp
add
in
arpl
cmp
sbb
lahf
jns
movsl
xchg
vphaddbw
add
mov
jns
jge
sbb
push
leave
nop
iret
test
jg
jne
mov
adcl
ss
insb
divb
shrb
jb
nop
jmp
xor
cmp
stos
movsl
sbb
dec
jle
jno
outsb
add
ja
inc
mov
xchg
push
movsl
dec
ljmp
inc
out
shr
adc
cmpsb
nop
aad
cltd
dec
imul
sub
mov
xorb
push
cmpsb
jnp
inc
adc
divl
enter
xchg
add
jo
dec
call
popa
jo
loop
movsl
mov
mov
push
push
dec
mov
leave
roll
pop
inc
sub
or
ds
dec
cmpsl
clc
pop
bound
cmp
cmp
jnp
cs
repz
dec
dec
or
cmc
loop
mov
jo
dec
mov
out
add
jb
push
adc
jo
andl
dec
in
dec
int3
imul
xchg
mov
push
pop
jae
daa
pop
mov
jg
scas
jp
test
incb
push
mov
jno
insb
jo
jnp
dec
cs
add
mov
or
pop
int
inc
rorl
mov
ds
pushf
jo
mov
dec
shrb
dec
out
jo
inc
cld
sti
jecxz
pop
cwtl
xor
negl
mov
adc
pop
jo
daa
or
xor
inc
leave
sub
xchg
sti
ret
in
lock
mov
mov
dec
test
jo
mov
pop
pop
rorb
icebp
fidivl
aas
fs
out
stos
jo
lcall
push
mov
adc
or
add
lea
or
xchg
push
dec
xorb
push
cmpsl
test
cs
jno
jnp
xor
xchg
push
jne
sbb
and
sub
inc
int3
pop
inc
scas
data16
dec
jo
or
dec
mov
cs
clc
mov
jb
xchg
inc
jo
push
lahf
fsubrs
sbb
push
psubd
add
scas
xchg
sti
pusha
jne
jno
jo
out
push
stos
pop
imul
scas
pop
out
cmpsb
in
les
adcb
cld
push
cmpsl
pop
mov
insb
sub
je
or
aas
dec
jb
cs
mov
jo
pop
xchg
scas
lahf
pop
popa
and
adc
imul
xchg
pop
jo
xor
stc
or
jno
push
inc
dec
nopl
lods
repnz
xorb
in
sbb
stos
mov
shrl
inc
dec
roll
ja
dec
jo
mov
mov
rol
mov
in
imul
or
nop
int
inc
pop
aad
add
mov
pop
mov
xchg
arpl
jo
neg
pop
stos
jne
shlb
test
lahf
mov
jge
mov
int3
orl
sahf
rcrb
pop
sbb
dec
je
dec
xor
or
cmpsb
xorb
lahf
shrb
sub
icebp
cltd
call
mov
mov
mov
imull
mov
mov
arpl
xchg
out
adc
xchg
sub
loop
jle,pt
fimull
les
loop
insl
out
jg
or
shrb
outsl
inc
loopne
xchg
icebp
popf
lock
arpl
push
out
push
pop
or
push
mov
mov
enter
insb
js
mov
ljmp
mov
pop
fs
jns
sbb
out
in
in
sarb
outsl
lea
cmp
pushf
mov
pop
fiadds
sub
mov
icebp
arpl
mov
data16
adc
pop
mov
shlb
movsl
jle
arpl
cs
jecxz
pop
int
sarl
push
lds
movsb
inc
hlt
jne
lret
cmp
xchg
mov
jl
pop
jl
test
sub
inc
movsl
cmp
inc
pop
mov
cmp
jae
roll
xchg
pushf
or
xchg
inc
push
xor
xorl
fs
xor
push
mov
loope
popf
out
nop
fs
jae
lret
xlat
lret
and
push
stc
stc
into
add
mov
sbb
aas
mov
data16
mov
or
mov
daa
adc
cmp
dec
xor
push
and
stc
jp
cmp
pop
push
jae
and
nop
and
mov
adcb
dec
shrb
lods
or
pop
push
mov
loop
je
sbb
add
nop
jmp
cld
inc
lea
jo
inc
je
cmp
sbb
mov
jns
sbb
mov
or
cmpsl
js
icebp
push
loopne
mov
jmp
orb
sub
aaa
dec
inc
adc
test
pop
jo
sbb
lea
enter
cltd
xchg
inc
xor
jo
mov
imul
cld
or
mov
lcall
rorb
loop
je
or
jnp
les
dec
pop
icebp
inc
mov
sbb
mov
movsl
jo
ret
insb
push
stos
xchg
or
cmp
and
jmp
in
fucomip
dec
pop
or
lods
sub
xor
adc
sahf
in
mov
out
sbb
fs
push
and
fwait
xbegin
sbb
mul
xchg
jo
lret
add
mov
js
xor
xchg
mov
fisttpl
push
or
jo
scas
and
jo
flds
bnd
xlat
add
inc
pop
sbb
or
pop
or
fistps
push
push
xchg
inc
jl
adc
notl
test
mov
std
cli
jg
pop
cmp
popa
shll
nop
adc
daa
push
adc
mov
inc
shr
sbb
push
mov
push
pushf
jo
inc
xchg
shr
dec
js
mov
repz
jmp
adc
jo
xor
adc
push
cs
inc
dec
fs
or
mov
hlt
jne
xlat
jo
je
jmp
jo
ret
pop
sbb
call
xor
lds
shr
pop
test
jle
divb
inc
imul
aaa
fs
out
jo
in
mov
mov
repz
inc
pop
dec
shlb
cmp
call
mov
mov
mov
sbb
sub
mov
add
mov
mov
hlt
sub
test
inc
sub
andb
rolb
jo
dec
out
hlt
dec
sub
cmp
jbe
xor
je
popf
jp
stos
jp
mov
push
lods
jo
mov
xor
jo
scas
jle
addr16
cs
push
rorl
jo
rcpps
in
mov
jo
inc
dec
jmp
sbb
push
pop
and
fwait
clc
pusha
in
je
loop
int
lods
arpl
pop
xchg
iret
data16
rcrb
ja
hlt
xchg
mov
mov
xor
shll
cmp
data16
nop
xchg
pop
pop
sub
fs
out
std
push
aas
cmp
daa
jle
out
bound
push
mov
js
arpl
and
test
cmp
ss
sbbb
push
ja
std
jns
and
push
cmp
sbb
dec
or
push
loopne
cmpsl
addr16
sti
je
fldcw
ljmp
jbe
imul
addb
addr16
fiaddl
xor
xchg
mov
push
mov
popa
cmp
xchg
xlat
sub
jecxz
imul
data16
mov
mov
es
inc
pop
push
idivl
jae
pop
test
mov
sti
inc
insl
lahf
add
orl
sbb
push
or
push
xchg
out
jl
shrb
movsb
push
es
jbe
add
leave
iret
daa
loopne
pop
pop
call
add
rorb
or
inc
inc
lahf
ljmp
int3
mov
jae
aam
cmp
fucomip
loopne
and
data16
int
repnz
jae
in
mov
pusha
imul
or
jp
repz
arpl
push
lcall
jmp
cli
or
fs
cmp
mov
ret
jne
std
in
dec
push
xchg
jp
in
pop
roll
sbb
in
pop
jg
or
or
je
jo
mov
testb
inc
shlb
mov
jae
sbbb
mov
mov
mov
js
adc
pop
push
jo
ljmp
jo
out
xchg
mov
pop
cmp
jo
push
outsb
xchg
ljmp
dec
dec
xchg
out
das
scas
addl
sti
sub
fnsave
in
insb
imul
inc
dec
sbb
out
pusha
and
bound
ficoml
inc
aaa
cltd
push
jo
jmp
mov
or
call
pop
xchg
idivl
cmp
and
push
into
jb
mov
inc
loope
push
xor
push
rcl
mov
js
lods
outsl
shlb
push
getsec
mov
jmp
insb
cmpb
fsubrl
pop
pop
dec
movsl
cmp
int
adc
jp
jne
mov
in
cmc
jo
mov
enter
jo
cmpsb
ss
sbb
dec
sbb
aaa
jae
push
add
clc
pop
jo
imul
inc
sbb
aad
push
jp
shlb
dec
xor
mov
jno
jo
fldl
repnz
outsl
push
into
out
push
sahf
rorb
add
pop
mov
insb
xchg
mov
fadd
int3
rol
xchg
jle
loope
loop
jmp
in
jo
jae
xor
lcall
dec
dec
lret
cpuid
push
jnp
mov
sub
pushf
push
and
mov
xchg
or
rolb
or
fs
mov
sbb
inc
jo
mov
mov
psubsw
xor
sub
add
mov
or
add
aam
push
jo
into
cli
mov
test
xchg
sbb
cs
pop
sbb
push
adc
jo
jbe
aaa
and
insb
dec
mov
jo
dec
inc
shr
add
and
sbb
adc
jo
insl
repnz
stos
dec
mov
fs
pop
xchg
sbb
std
dec
add
and
xlat
dec
sbb
mov
repnz
pusha
mov
inc
stos
enter
nop
jnp
scas
mov
jmp
inc
jno
clc
jo
bound
imul
andl
add
jne
std
in
jne
mov
cmp
push
dec
or
mov
fstpt
lods
jo
pop
les
dec
push
stc
pop
xor
out
js
add
xor
bound
xorl
pop
pop
cmp
and
std
jl
outsl
dec
jo
push
stos
pop
pop
xchg
pop
cld
inc
test
jne
sti
and
inc
outsb
jge
push
add
pop
stos
jne
push
jo
sbb
filds
bound
jae
dec
and
aaa
jo
dec
sahf
test
jmp
cmp
loope
dec
pop
imul
cmp
out
leave
mov
sub
sub
mov
sub
xchg
ds
cmp
test
lret
mov
add
cmp
mov
xchg
or
jmp
mov
push
mov
pushf
cmp
mov
push
ja
adc
addb
lods
enter
mov
mov
xor
je
adc
iret
ret
lds
jl
mov
stos
jo
cmp
mov
push
inc
jl
sbb
nop
fs
movsb
pop
sbb
jge
inc
sbb
lds
xchg
lahf
jo
xchg
mov
aam
aad
push
jno
lods
call
mov
push
jo
dec
test
clc
and
push
sub
mov
jo
xor
mov
push
leave
xor
out
les
sub
jo
push
scas
leavew
and
sahf
add
in
idivl
push
daa
test
jns
push
or
sbb
nop
push
mov
dec
loope
or
movsl
or
je
enter
jne
jno
outsb
xchg
das
orl
js
dec
repz
sbb
jo
inc
xchg
jmp
int
pop
dec
add
inc
gs
mov
sub
jns
je
nop
int
push
jo
inc
cmp
cmc
fwait
mov
xchg
push
push
sub
mov
sar
pop
out
punpckhdq
sbb
push
stos
popf
xlat
add
lcall
and
or
jo
lret
xchg
imul
mov
insb
inc
xchg
mov
mov
jnp
iret
into
shlb
nop
cmp
and
or
inc
add
push
cli
jo
adc
dec
lret
pop
pop
in
shlb
fiadds
mov
fcoml
pop
add
inc
xor
xchg
in
stos
push
adc
inc
mov
stos
pop
cmp
xor
mov
leave
mov
and
in
out
cmp
fdivs
inc
clc
inc
fisubrs
mov
xorb
cltd
leave
jl
pop
mov
test
cmp
out
mov
and
adc
lret
jle
jo
or
or
sbb
jo
xor
mov
push
mov
ret
addr16
lea
dec
push
jp
pop
setg
sbb
xor
sbb
push
lds
mov
dec
in
repz
push
add
fsubs
jo
jns
mov
jnp
jo
adc
xchg
jne
cmp
adc
leave
mov
mov
outsl
pause
and
push
fldcw
jge
cmpsb
je
jo
fisubrl
lahf
call
data16
jb
cmp
nop
aaa
and
pmaddwd
pop
out
mov
sbbb
mov
add
test
orb
jo
call
jo
iret
dec
loopne
mov
fildl
ret
push
push
ret
rcll
fadds
dec
enter
xor
and
jbe
mov
fldpi
rorb
mov
subl
cmpsl
lods
int
and
cwtl
pop
inc
imul
mov
nop
test
push
scas
xchg
jae
sub
jo
arpl
out
jo
push
xchg
testl
rcrl
and
and
jmp
jo
adc
push
shlb
scas
mov
add
sti
aas
mov
fstp
cmc
xor
add
imul
lahf
stc
fsubr
pop
mov
cmp
lret
xchg
xlat
jge
push
andb
imulb
fwait
cmp
lock
jo
mov
sub
test
hlt
nop
popf
xchg
cltd
cmp
add
outsb
cwtl
clc
fs
ret
test
arpl
push
pop
stos
jns
jo
jae
rorl
fcomp
cld
pmullw
dec
jmp
lea
stc
into
test
xor
mov
ds
sbb
or
mov
test
movsb
lods
loope
icebp
or
mov
lahf
pop
fdivl
dec
inc
ss
nop
inc
jo
fisubl
mov
xchg
ljmp
int3
sbb
pop
mov
and
data16
xor
test
shll
cmpsb
pop
inc
sub
xchg
aad
push
or
out
lods
dec
imulb
push
fisubrl
jmp
cltd
addr16
aaa
ss
insl
insb
sub
jo
popa
xchg
xor
mov
lret
daa
xchg
pop
push
mov
mov
scas
out
das
xor
nopl
push
test
xor
jo
mov
adc
lea
push
inc
mov
mov
dec
popl
icebp
hlt
adc
loope
xchg
push
ds
aaa
in
flds
jo
fwait
and
cmp
shr
enter
jo
push
cmp
dec
jl
jo
sub
push
and
sahf
mov
jo
lods
pop
cmp
hlt
jp
daa
es
popf
idivb
leave
push
cltd
pop
js
cmpsb
nop
and
pop
cmp
popa
sub
xchg
leave
push
pop
push
bound
xor
sbb
popa
xchg
outsb
jo
and
ret
pop
imul
inc
cmp
adc
testb
push
icebp
stos
jne
leave
js
imul
pusha
add
push
idiv
movsb
sub
out
js
jmp
xor
mov
je
jecxz
jo
lahf
leave
orb
xor
orl
xchg
cmpsb
dec
inc
mov
jo
jns
outsl
stos
add
or
jbe
cmp
mov
out
xchg
mov
mov
ret
mov
pop
mov
inc
test
jne
jo
call
insl
push
sbb
sbb
je
cmp
push
js
inc
fwait
or
out
adc
faddp
jbe
out
jae
add
xor
dec
cs
or
push
rorb
outsb
test
and
cmp
iret
nop
xor
sbb
dec
jg
xchg
fmull
adc
test
push
aas
popw
or
insl
jne
call
add
mov
xchg
fistpll
imull
negl
mov
cmp
es
adc
or
in
xchg
cvttps2pi
imul
adc
cmpsb
adc
insl
ja
add
sbb
jecxz
push
pop
into
imull
jns
je
add
jae
cmp
enter
movb
push
shrb
movsl
imul
xchg
in
inc
sub
outsl
es
jne
xchg
arpl
or
adc
insb
rolb
inc
push
add
adc
das
adc
inc
fnstsw
jns
out
fs
or
ret
pop
lcall
xor
or
shl
repnz
adc
sub
lret
xor
and
les
bound
out
rclb
mov
pusha
sub
outsl
das
lahf
mov
dec
or
scas
jle
push
pop
imul
xchg
or
push
sub
xchg
mov
xorb
je
out
pop
rorl
jg
sbbl
sub
test
pop
aas
ljmp
xchg
nop
cmp
aaa
cmp
lods
add
mov
nop
into
cmpsl
or
mov
pop
addb
loope
xor
mov
insl
mov
jl
arpl
sub
sub
sbb
sar
mov
ss
imul
out
xchg
jle
stos
and
pop
fistps
and
jns
inc
and
xorb
xor
in
icebp
and
push
dec
pop
mov
push
mov
fs
adc
je
in
fwait
js
fnstsw
fsubp
adc
popf
aam
adc
add
mov
fstps
push
push
dec
test
ficoms
in
jo
jg
add
es
pushf
pop
push
rcrb
shll
push
add
stc
add
sub
ret
and
mov
mov
sbb
call
sbbl
mov
cmp
outsl
inc
iret
out
push
cmp
jle
ret
jg
sarl
addb
rcrl
popa
movsl
sbb
mov
cmp
jnp
pop
hlt
loope
lret
push
pop
xchg
int3
jns
pop
or
and
mov
pop
dec
outsl
cli
outsb
rcrb
into
inc
in
test
xchg
test
push
mov
arpl
sbb
sbb
mov
aas
pop
pop
aas
lcall
sub
sbb
sbbb
or
ja
shrl
scas
xchg
movsb
dec
and
lods
loopne
faddp
dec
cwtl
cmc
pushw
mov
pop
ret
test
or
xor
inc
mov
popa
sbb
je
adc
cmp
and
adc
imul
fnstsw
inc
xchg
adc
mov
sarl
dec
dec
repnz
mov
jae
testb
add
sub
enter
aaa
jae
in
cmpsb
cmp
arpl
add
repz
movsb
aas
and
pop
repnz
sub
sub
pop
sti
pop
aaa
ret
push
cmpsb
repz
mov
ds
idiv
cmpb
test
mov
fisubl
mov
jae
fnstsw
push
fmull
insb
dec
xor
insl
mov
int
leave
cwtl
dec
pop
jp
add
cmp
fcomip
test
arpl
jmp
pop
pop
cwtl
or
cwtl
push
in
dec
push
lahf
rcll
xor
scas
pop
call
loopne
sbb
jbe
dec
adc
push
aaa
jae
sti
leave
mov
inc
mov
adc
insl
sub
fisttps
loope
shrl
ret
fnstcw
push
or
js
fistps
outsl
pop
leave
sbb
outsb
cmpsb
pop
iret
jae
push
sbb
fwait
pushf
xchg
fisubrl
insl
or
adc
and
pop
lods
clc
fildl
add
xorb
jne
jmp
sbb
xor
pop
arpl
rcrl
sub
loop
enter
sub
pop
jnp
jnp
pusha
mov
jb
xchg
je
jle
lret
sbb
scas
inc
sbb
cmp
mov
das
insb
mov
dec
insl
dec
lret
aas
xchg
or
jmp
jb
imul
push
cmc
out
shlb
add
inc
xchg
add
dec
mov
inc
rcrb
pushf
cmp
and
les
push
std
adc
and
push
cmp
pop
hlt
and
ror
or
aam
hlt
mov
push
mov
push
pushf
cmp
push
and
frstor
fidivrl
rorl
xchg
push
jae
test
mov
and
ret
sub
stos
mov
pop
jb
and
pusha
mov
iret
rorb
loope
leave
xor
sub
add
push
loopne
insb
adc
push
fs
mov
push
jmp
xchg
pusha
outsb
jg
dec
mov
lds
ss
xchg
addl
mov
mov
mov
fcomip
ret
mov
lahf
or
push
in
lea
dec
pop
adc
stos
jmp
lahf
iret
mov
pop
test
mov
bound
jl
cs
fs
insl
push
out
jo
repz
fdivr
add
int
ret
pushl
pushf
mov
cmpsl
ljmp
std
pop
loop
jae
test
movsb
setp
or
cmp
lea
fdivp
cld
add
movsl
jl
out
adc
inc
sub
fldenv
jne
inc
nop
mov
dec
cmpsb
cmpsl
push
mov
insl
mov
arpl
ss
movsl
xchg
outsl
lock
push
pop
imul
mov
les
sub
iret
xchg
jmp
inc
pop
jle
cs
fwait
adc
imul
sub
cmp
std
inc
mov
subl
int3
xor
test
push
arpl
fsubs
pop
push
std
jmp
inc
and
fnsave
repz
out
push
or
loopne
je
cmp
out
jmp
pop
neg
mov
add
jl
repz
cmp
jnp
pusha
sub
sub
push
out
mov
fstpl
stc
fs
data16
clc
cmp
scas
inc
lret
mov
inc
dec
lea
scas
test
pop
jo
ror
fwait
jp
mov
xchg
test
sbb
sub
pusha
mov
xchg
or
mov
imul
int3
jae
rclb
std
cmpsb
mov
mov
js
xor
das
mov
xchg
or
fucomip
enter
test
jae
xor
push
outsl
xchg
xchg
lds
sbb
clc
out
mov
pop
or
data16
lret
sbb
mov
scas
or
pop
lcall
add
mov
arpl
mov
dec
jb
mov
ja
jo
or
fldenv
out
call
xchg
push
adc
lods
lret
jae
js
arpl
cmpsl
mov
xor
pop
lcall
or
or
add
mov
add
jo
push
jno
pop
lea
ror
xchg
fbstp
xor
jno
rclb
test
cmp
or
jge
stos
push
bound
mov
mov
int
out
lahf
inc
fs
ljmp
int3
mov
mov
insb
add
subb
int3
arpl
or
loopne
xor
mov
bnd
inc
sub
pop
jno
lret
xorl
out
fidivrl
je
enter
xor
fs
call
and
jmp
jge
cmpsb
data16
jae
outsb
cmp
sahf
lahf
sub
call
or
adc
mov
cmp
insb
imul
jnp
adc
jmp
dec
cli
inc
push
jle
jo
jbe
ja
cli
pop
rclb
fstpt
jle
push
insb
int
mov
rolb
xchg
outsb
addb
lahf
std
rclb
sbb
pop
imul
test
push
jg
popf
sub
cmpsl
dec
hlt
jnp
sbb
dec
pop
sub
mov
push
cltd
aaa
xor
arpl
in
ret
push
sbb
andb
jae
fadd
sub
jle
cmp
into
push
xchg
mov
lret
mov
dec
mov
daa
push
pop
int3
icebp
das
pop
pop
lds
in
mov
loope
add
mov
lds
out
or
int3
mov
add
lods
push
or
mov
jb
out
mov
pusha
je
sub
subb
int
fidivl
add
mov
mov
rolb
lahf
cmp
rcrl
out
push
mov
pop
or
aaa
xor
mov
subb
jb
insb
jge
fisubl
icebp
and
sub
mov
cmp
imul
outsb
xor
and
lea
shrl
jo
fidivrs
xchg
xor
jecxz
js
jbe,pt
push
repz
xor
or
sbb
pusha
addl
jo
das
and
xor
loope
jo
inc
jge
cmpl
pop
test
jo
mov
mov
cld
pop
shrl
add
es
cmp
and
imull
mov
lods
das
jo
dec
mov
pop
jo
mov
and
jo
test
push
mov
aaa
pop
jo
popf
loop
push
jmp
or
jl
das
mov
push
pop
orb
adc
movsl
cs
fistpll
bnd
cli
stos
addr16
xor
int
lods
xchg
js
cs
cwtl
pusha
jo
and
repnz
mov
jo
data16
scas
pop
or
aas
mov
ljmp
mov
xchg
repz
fmull
add
jp
mov
mov
sub
pop
sbb
xorb
jmp
clc
rolb
gs
jmp
or
sub
pop
popa
rolb
push
fs
sub
jae
push
jo
push
mov
sbb
cli
test
cmp
xor
loop
rcr
pop
nop
sbb
jbe
icebp
push
sub
ja
fnstcw
mov
add
push
bound
add
push
lcall
xor
js
and
jo
xchg
inc
call
inc
xor
pop
sbb
sbb
pop
lods
lret
jo
push
outsl
push
push
mov
les
and
div
or
loope
jo
lods
das
add
inc
adc
jo
fs
rcl
mov
mov
or
cmp
and
sub
mov
xor
ret
jae
cmc
shrl
mov
ss
and
dec
sub
mov
mov
test
mov
push
sbbb
ret
fcoms
into
jo
sbb
rcrb
jo
enter
out
jo
jb
and
inc
add
jmp
repz
ljmp
mov
mov
mov
inc
mov
jle
push
icebp
adc
imul
jno
cmovl
rol
lret
mov
jmp
clc
hlt
inc
jo
and
in
insl
or
aas
jo
jns
sub
adc
jecxz
repnz
inc
and
inc
sub
and
push
sub
int3
push
addb
sub
movq
xchg
cmp
repz
or
pop
xchg
pop
and
jo
pop
jae
fsts
in
jae
jo
or
imul
outsb
add
add
pop
jp
sbb
ja
es
push
sub
mov
jo
mov
das
mov
popa
inc
adc
test
mov
jo
enter
mov
cli
lock
mov
jnp
ret
cmpsl
push
call
sbb
cmc
std
bnd
ljmp
movnti
mov
std
hlt
dec
or
pop
cmp
inc
in
iret
and
fwait
dec
outsb
aad
lea
dec
xchg
pusha
lret
cmpsl
pop
add
mov
lods
fsubrs
enter
jg
mov
sub
cmp
cmpsl
push
fwait
cwtl
cs
clc
jo
push
mov
inc
outsb
mov
nop
inc
xlat
jae
int3
mov
pop
fsubs
loop
lods
mov
xchg
xchg
push
push
dec
mov
mov
ds
cmc
mov
jmp
pop
addr16
in
dec
neg
cmp
fldenv
add
inc
test
divb
aas
xor
mov
fisubrs
mov
adc
and
sub
fdivrl
in
insb
mov
push
repnz
adc
jo
mov
into
pop
jnp
lret
sub
out
jo
jle
loop
or
push
xchg
push
mov
jo
dec
int
xchg
data16
dec
or
push
sbb
mov
fmull
sahf
xchg
pop
push
and
or
imul
dec
testb
pop
jo
pop
xchg
adc
or
call
add
mov
pop
sub
mov
mov
jo
adc
das
mov
inc
nop
cmp
adc
push
nop
xor
xor
aam
cmpsb
out
idivl
lcall
jo
fstl
add
daa
pusha
jo
dec
lea
jo
mov
dec
jo
insb
xchg
rep
and
jo
leave
mov
mov
jo
sbb
test
cmc
lods
adc
and
mov
sub
mov
imul
xor
push
xorl
mov
jo
jbe
rcrb
fidivs
adc
cwtl
jo
pop
rol
mov
ret
shrb
mov
jbe
je
and
jmp
pusha
bound
out
xcrypt-cbc
cmpsl
adc
loopne
enter
test
icebp
sub
mov
xchg
jns
mov
aad
sub
cmp
pop
pop
ljmp
jns
or
in
loopne
sub
xchg
push
ret
jo
pop
dec
insl
adc
mov
xorb
sbb
sub
push
pop
fwait
adc
sahf
mov
ret
rcrl
pop
adc
adc
ret
aam
jnp
adc
es
movsb
dec
popf
pop
in
scas
inc
jo
outsl
sbb
out
les
cmpsl
cmp
insb
pop
addr16
jae
xor
test
mov
out
xchg
mov
shrl
sub
adc
insl
and
xor
xlat
cmp
ficomps
sahf
push
jo
push
dec
movsw
inc
jb
jo
mov
lea
nop
jb
in
jne
jl
sbbl
fcoml
cmp
in
int3
xor
push
pop
cmp
inc
xor
jl
dec
dec
fwait
mov
cmpb
dec
add
lods
sub
inc
adc
shlb
daa
popl
fs
popa
cmp
sub
aam
outsb
mov
or
popf
mov
ret
scas
push
out
cmp
push
push
add
repz
bswap
fnsave
or
xchg
sahf
in
sbb
stc
arpl
jno
insb
inc
jmp
xchg
shll
shlb
mov
xchg
scas
or
mov
push
jg
enter
or
jl
insb
xchg
loope
je
sub
subb
adc
pop
in
fdivr
mov
inc
adc
setbe
scas
pop
jl
into
scas
push
hlt
repz
cmc
arpl
jg
cs
ret
sbb
jl
icebp
mov
mov
inc
add
stos
jo
cmpsl
outsb
adc
paddq
xchg
jb
outsl
push
sbb
in
jp
jo
pop
sbb
repz
sub
int
xor
cmpsl
mov
out
nop
cmpsb
fiadds
aas
loop
inc
jmp
sbb
push
pop
rep
add
insb
or
pop
ljmp
push
pop
add
je
xchg
out
mov
sub
movsb
test
jo
push
adc
mov
adc
jbe
or
mov
jmp
cmp
js
jb
mov
or
out
mov
cwtl
das
and
pop
in
nop
jle
cmpsl
jo
pop
test
add
insl
in
insb
sbb
mov
negb
test
inc
jno
fidivl
cltd
adc
jo
xor
decb
push
jo
in
xor
cbtw
push
push
aas
sbb
imul
cmp
xor
aam
inc
cmp
mov
jmp
sub
insl
dec
and
lahf
hlt
fcoml
daa
aam
clc
cmp
neg
mov
int3
jns
push
push
jo
pop
or
nop
pop
xlat
and
push
mov
jae
push
mov
mov
in
cs
cltd
stc
sub
icebp
jo
push
mov
push
or
and
pusha
push
jns
in
mov
push
jmp
cmp
xor
jo
mov
call
and
pop
mov
insl
jae
les
jg
cmpsb
test
pop
imul
sbb
movsb
sub
movsl
in
orl
lock
mov
push
jecxz
or
pop
push
jno,pt
sbb
mov
add
fiaddl
sbb
aaa
inc
das
jo
fnstenv
jge
push
cmp
cmpsb
jo
enter
pop
pop
xchg
fs
jae
test
xor
mov
test
loope
lret
inc
or
decb
sbb
or
insl
out
test
jno
das
ror
js
iret
jb
fnstsw
test
jmp
jmp
inc
push
mov
stos
lock
push
js
add
adc
xor
cmpb
cmp
jo
insl
push
or
fsubrp
int
enter
or
jo
fadd
dec
jbe
jecxz
sub
jg
repz
add
out
adc
in
push
dec
cltd
insb
or
js
mov
scas
jle
fwait
cli
mov
cmpsl
out
sbb
cmpsb
mov
adc
ret
push
xor
out
or
loopne
jo
xchg
pop
lea
and
cmp
ficoml
dec
lock
pop
sbbb
fbstp
jo
lahf
in
xchg
test
andb
cmp
mov
push
mov
addr16
jmp
add
andl
sbb
mov
pop
xor
jo
sbb
lds
int3
dec
into
xor
pop
popf
dec
jo
add
scas
jo
cmc
vunpcklps
jp
fs
push
push
test
mov
xor
leave
pop
addr16
loop
iret
adc
xor
xchg
xor
test
shll
inc
insb
push
icebp
xchg
jo,pt
insb
jae
rorb
rorl
out
dec
push
xchg
iret
add
inc
dec
add
movsb
fsubl
jnp
mov
mov
mov
sbb
sbb
insb
std
mov
lds
lahf
xor
jo
filds
and
in
stos
subb
ficomps
sbb
data16
sti
hlt
add
loope
in
dec
jo
imul
jo
cmp
xor
jmp
into
xchg
dec
cli
or
or
push
sbb
sbb
xor
repnz
xor
jo
cmp
ljmp
mov
cld
cmp
adc
and
or
xor
add
fwait
jle
xor
cmc
nop
scas
inc
clc
jmp
bound
sub
add
fisttps
mov
nop
test
pushf
pop
jb
popa
out
loop
outsl
pop
in
enter
clc
sub
and
lods
and
xchg
std
mov
jo
or
add
mov
les
inc
imul
orb
mov
das
out
jo
repnz
xchg
insb
mov
mov
adc
and
jo
sbb
add
cs
xor
jno
outsb
stos
xchg
cltd
push
push
dec
cld
and
icebp
shlb
aad
mov
sub
inc
shrb
xlat
jo
rcr
dec
xorb
xor
in
jmp
jo
jp
imul
sbb
ret
mov
jo
xor
clc
lret
jns
add
lock
push
pavgw
mov
outsb
scas
pinsrw
and
sub
insb
cmpb
adc
sub
psllw
aad
jbe
mov
mov
jmp
inc
loop
shlb
popa
lods
fs
pop
addr16
xor
inc
int
push
xchg
mov
loop
jo
pop
faddl
jo
or
hlt
jne
pop
jo
jg
stc
mov
jp
jo
cs
adc
inc
mov
sti
into
jne
pop
mov
jo
iret
xchg
rcrb
leave
jo
mov
int3
divl
jns
rcll
repz
sub
jo
mov
mov
and
push
cmp
cmc
pushf
lret
dec
je
xchg
xchg
mov
cmp
push
pusha
mov
jo
int3
or
cmp
mov
mov
lahf
stos
packuswb
lea
ret
inc
jo
mov
rorl
js
lods
pushf
inc
cmp
sub
cmp
fcmovne
or
pop
xchg
jmp
nop
nop
popf
push
inc
add
jnp
pop
cmp
ljmp
repnz
addr16
mov
clc
leave
test
jo
cmp
mov
pop
pusha
jo
rorb
xor
mov
add
std
cmp
bound
pop
jo
cmp
sub
xor
in
push
out
jns
adc
xchg
mov
cmp
jmp
ljmp
inc
outsl
mov
data16
pcmpeqb
xchg
mov
repnz
movb
fcmovu
in
outsb
dec
add
jge
inc
jecxz
adc
xchg
adcb
lods
int3
cmpsb
cli
mov
sahf
seto
adc
jp
jo
inc
fs
pop
inc
sub
jo
fsubrs
push
aad
pop
xchg
int
jg
and
arpl
les
cmp
das
and
fildll
loope
les
sub
jb
movsl
inc
insb
shl
sub
bnd
push
xorl
mov
sub
inc
jo
rolb
adc
mov
insb
mov
mov
test
dec
jo
dec
inc
pop
into
adc
repz
jo
out
sub
sbb
les
adc
jne
xchg
insl
stos
jo
out
lret
fcoms
in
jo
je
loope
lds
or
push
in
dec
xchg
xchg
jne
andb
mov
xchg
push
pop
pop
mov
nop
or
cmp
idivb
jo
mov
jecxz
es
push
push
mov
xor
sbbl
sti
jo
fisubl
inc
fiadds
mov
fistl
sub
pop
jg
lods
shlb
dec
and
xchg
push
js
dec
mov
add
add
jge
adc
aad
fnstsw
pop
mov
hlt
or
jo
jb
mov
and
sahf
idivb
loope
sub
mov
jp
jecxz
in
cmp
cwtl
inc
xlat
fs
bound
push
push
push
jo
out
js
xchg
hlt
mov
mov
adc
mov
aaa
mov
dec
xorb
jo
lret
inc
filds
cmc
repz
xor
jmp
mov
mov
setb
push
adcb
mov
enter
cs
ret
test
std
repz
push
loope
movzwl
xor
js
dec
sahf
pop
xchg
jo
add
jle
int
pop
nop
cmp
jl
mov
gs
je
iret
clc
sub
mov
jo
repnz
jo
fildl
jg
in
push
mov
jge
fmull
insb
in
jo
addr16
inc
jl
movsb
jo
pop
movsl
shl
clc
dec
jge
lock
cld
in
pusha
push
mov
lcall
rclb
push
out
stos
arpl
out
xchg
jne
ja
inc
jo
and
push
cwtl
cmp
dec
test
andnps
sub
mul
jo
cmp
xchg
mov
push
into
call
shrl
mov
pusha
or
jg
sbbb
sahf
fs
imul
jo
int
add
xor
jo
sbb
jl
cs
mov
test
mov
inc
inc
sbb
cwtl
loop
jo
sbb
and
cmp
int
jecxz
pop
push
pop
mov
imulb
cltd
pop
rcr
scas
mov
jmp
popa
cmp
push
loop
das
mov
inc
jge
test
push
jo
add
or
add
sbb
loope
jo
push
cltd
push
inc
push
dec
mov
ret
or
hlt
shll
mov
push
aam
cmc
addl
and
dec
jae
add
test
aam
mov
insb
xor
dec
lds
loop
mov
in
sbb
lds
cld
jo
inc
aam
cmpsb
les
dec
fnclex
xor
mov
mov
sub
lret
ret
mov
fimuls
jo
cmp
xchg
fldenv
sahf
push
int3
jo
popf
mov
lahf
in
mov
xchg
lret
gs
add
and
movsl
sbbb
push
jo
pop
sub
ret
test
mov
lods
xor
jo
add
lret
aaa
and
ret
jo
pop
xchg
je
jne
frstor
dec
mov
loop
mov
int
push
mov
mov
xor
sub
adcl
ds
xor
cmp
inc
sub
scas
adc
adc
dec
sbb
jmp
mov
ss
daa
into
mov
rcrl
mov
jl
xchg
cs
mov
js
adc
dec
jmp
pop
mov
jne
adc
mov
jp
dec
adc
and
dec
mov
ds
mov
sub
fbld
xor
sub
mov
jo
sbbb
pop
gs
inc
mov
pop
push
fnstcw
push
jb
push
mov
lahf
pop
and
jo
xchg
mov
out
popa
inc
sub
outsl
sbb
scas
xlat
jo
xor
pusha
jns
popf
repnz
inc
loop
and
dec
push
les
pop
lret
inc
out
movsb
andl
pop
cmp
add
and
popa
sub
enter
or
mov
jae
push
xor
aam
bound
daa
les
xor
pop
pop
sub
jae
das
add
mov
out
jnp
les
in
inc
cmp
sub
inc
pop
repnz
sbb
or
and
lods
sub
xchg
das
mov
mov
push
repz
mov
jae
insl
xchg
jp
cmpb
push
and
into
push
or
adc
arpl
mov
out
lock
aaa
test
and
sahf
xchg
or
add
insb
scas
mov
pop
cmpb
dec
or
mov
push
sbb
mov
pop
lock
pop
dec
sarb
into
cmp
outsl
xor
mov
cmp
arpl
enter
inc
hlt
loope
push
xor
outsb
je
pop
in
aaa
ret
mov
cmp
jae
out
dec
push
cmpsb
adc
fnstenv
repz
cmc
popa
arpl
jle
jg
or
mov
out
push
cmp
mov
inc
cmpsb
rclb
or
stc
lret
add
cmp
xor
fstl
jge
xchg
mov
or
mov
lahf
cmp
fwait
jl
ret
data16
mov
je
stos
mov
movsb
fimuls
sbb
dec
or
outsb
xor
mov
xor
das
ret
enter
jg
repnz
jl
cs
or
pop
xor
xor
add
data16
mov
repnz
es
push
jl
pusha
hlt
mov
bound
xor
mov
lea
inc
popfw
and
les
fnstsw
add
icebp
mov
pop
mov
std
sbb
call
dec
sub
pop
ljmp
sub
pusha
aas
push
push
frstor
arpl
fs
xor
dec
mov
jge
push
fs
mov
xchg
sbbb
dec
push
or
pop
movsb
push
mov
mov
test
pop
or
fcompl
adc
fdivrp
cmp
push
roll
gs
cs
mov
jle
mov
adc
dec
jnp
in
xor
in
inc
sbb
stos
insl
daa
push
or
pushf
jnp
jg
fnstenv
cmpsb
sub
and
and
fs
pop
jns
arpl
add
mov
cmp
push
and
inc
push
push
sbb
hlt
jecxz
add
shlb
xchg
pop
int
enter
push
add
shll
and
jmp
scas
jno
ret
dec
jmp
fstps
jle
fsubrl
in
mov
sub
cmp
pop
dec
xchg
movsb
push
decb
dec
stos
mov
inc
lret
fwait
push
clc
mov
arpl
outsb
xor
rolb
jnp
or
lahf
rcl
push
jae
in
mov
out
je
push
or
pop
repz
insl
outsl
cmpl
cmp
in
push
leave
je
bound
outsb
fwait
pop
pop
mov
xchg
push
inc
xchg
or
shl
jle
loope
std
jns
pop
int3
cld
push
mov
mov
test
and
outsl
fldcw
jg
jns
mov
fsubp
insl
fnstenv
mov
mov
addr16
inc
cmp
inc
add
sub
xchg
cwtd
sbb
stc
sub
mov
lea
xchg
repz
imul
push
cmpl
adc
dec
out
imul
jne
in
and
mov
cld
jo
nop
dec
add
push
fs
dec
cltd
sbb
mov
lock
in
sub
mov
mov
std
xchg
bound
loopne
jmp
scas
aam
push
inc
push
lock
push
xorl
mov
imul
pop
pop
push
jge
aaa
mov
xchg
outsb
jae
fs
xor
pop
in
loopne
mov
nop
frstor
loope
inc
shll
sbb
ss
ss
ljmp
idivl
sbb
lret
add
push
pop
push
cmpsl
jmp
pushf
xchg
fistps
sbb
ficompl
pusha
gs
sub
arpl
inc
loopne
stos
mov
sahf
jno
sbb
iret
mov
xorb
out
push
int3
or
addr16
cltd
inc
scas
loop
or
out
xor
das
enter
lahf
add
mov
outsb
cmp
mov
mov
push
cmpsl
cmp
and
daa
add
pop
js
arpl
push
cmovle
pop
xchg
sbb
ljmp
xor
ljmp
and
clc
push
fsubrl
arpl
inc
scas
mov
xor
and
retw
fwait
mov
test
cmpsl
jmp
jno
mov
lds
out
xchg
shr
push
mov
arpl
push
sbb
daa
mov
inc
sbb
clc
dec
das
adc
jl
xchg
mov
mov
push
addl
jb
divb
mov
fnstsw
daa
sti
mov
add
mov
add
ja
push
xchg
jo
jbe
add
push
inc
pop
sub
std
or
mov
mov
mov
bound
insb
mov
sbb
jne
bound
add
inc
popf
rclb
mov
clc
mov
dec
jb
push
xchg
jnp
pop
xchg
sti
aas
cmpsl
lock
mov
mov
cmp
mov
xor
or
jp
out
out
and
les
pop
mov
fnstenv
cmp
pushf
adc
push
fcomp
push
pop
int3
inc
lea
push
pusha
pop
inc
inc
inc
shr
push
jb
adc
mov
jl
sti
ljmp
into
pop
aaa
mov
lods
push
push
call
push
push
jo
xchg
mov
imul
movsb
push
or
push
xchg
dec
jnp
movsb
pop
fistps
jno
gs
call
xchg
in
stos
std
sub
rcl
pop
inc
pop
das
or
cs
imul
sbb
inc
or
xor
mov
scas
mov
aas
add
lcall
ljmp
std
pushf
or
mov
rcrl
inc
test
hlt
fisubl
and
push
addr16
xor
jle
pusha
testl
cld
insl
std
cmpsl
inc
inc
adc
fxam
mov
fistpll
aad
or
mov
cmpsl
sahf
dec
jns
push
dec
lea
sub
inc
lods
repz
sub
push
push
dec
adc
and
fnstcw
inc
icebp
inc
and
fs
lahf
push
aaa
test
inc
sub
int
in
aas
mov
subl
cmp
add
fstl
mov
and
enter
std
aaa
mov
insl
inc
stos
xchg
outsb
fmuls
fwait
aam
jecxz
dec
jp
cmp
je
pushf
sbb
mov
mov
adc
jbe
imul
jo
push
cli
ficompl
xor
cld
mov
mov
pop
scas
dec
jno
xchg
insb
fists
adc
xchg
pop
daa
js
in
push
push
cmp
inc
mov
sub
fisttpl
js
sarb
rorb
sbb
and
jns
call
push
sub
int
dec
adc
jae
ret
adc
add
xchg
and
shrl
push
out
jl
xor
lods
dec
mov
imul
jge
add
sti
icebp
ljmp
cmp
rorb
and
jmp
mov
mov
scas
int3
pop
inc
mov
jge
shlb
cmp
add
cmp
bnd
pop
in
sti
push
adc
fprem
pop
rcrb
mov
jle
mov
sbb
daa
insb
aam
xchg
movsl
imul
in
adc
stc
mov
and
pop
or
push
jno
inc
sbb
cs
jo,pt
arpl
jl
or
xor
addb
dec
inc
in
int3
insl
jmp
les
into
loope
cs
lock
js
repz
mov
mov
arpl
aas
cmp
imul
call
fcoms
xor
inc
ljmp
stos
outsl
pop
fisubs
rorb
fwait
and
fisubrl
lds
xor
sbb
les
and
or
cmpsl
xchg
fists
sar
sbb
jb
inc
adc
and
repz
sub
test
mov
xlat
int3
or
mov
and
addr16
sbb
mov
movsb
dec
mov
mov
mov
cli
jg
xor
jo
add
lahf
mov
mov
jae
xchg
adc
cmp
sbb
mov
sbb
sti
mov
sar
xlat
cs
data16
mov
rcr
pop
jo
cli
insb
mov
call
add
leave
mov
jo
sbb
pop
scas
pop
or
mov
sbb
mov
jae
jo
fsubrp
jp
inc
and
je
push
adc
std
pusha
jnp
insl
nop
cmovle
je
sub
mov
mov
in
shlb
jle
xchg
repz
repnz
mov
xorb
cli
mov
cltd
insb
xchg
sti
int
adcb
loop
int3
nop
das
fwait
inc
sub
pop
dec
cmp
mov
push
inc
movsb
and
mov
add
mov
out
repz
cmpsl
mov
cmp
nop
mov
xor
ss
ljmp
dec
ja
push
fs
insb
out
cltd
xchg
iret
jae
push
in
enter
dec
jmp
out
mov
scas
into
add
out
push
jle
out
loope
pushl
or
jnp
lret
or
outsb
inc
test
mov
xor
ffreep
xor
fwait
je
adc
xchg
arpl
sbb
xchg
inc
cmp
iret
fldl
jnp
and
xchg
xor
dec
loop
sub
fst
outsl
sbb
jno
adcb
mov
jb
xor
and
add
icebp
je
add
and
js
adc
push
test
sub
out
xchg
jg
arpl
jae
cmpsl
ss
lret
repz
call
jno
lock
fldcw
movsl
inc
dec
push
or
fistpll
iret
sti
jae
pop
andl
push
imul
sub
sbb
cmpsl
test
andb
mov
pop
in
cs
lret
lret
divb
ja
mov
mov
pushf
bound
fistpll
dec
popa
test
pop
pop
push
push
test
mov
sub
cmp
fsubp
xlat
sarb
rcr
lods
sti
or
dec
mov
cli
or
je
sti
scas
test
sbb
loopne
shrl
jae
add
jns,pn
shrb
jbe
rolb
nop
adc
sarb
insb
jne
shrb
subl
inc
sub
or
jns
cmpsb
jp
sub
arpl
test
es
xchg
scas
rcll
cmp
sbb
jb
jo
inc
sub
or
cmpsl
jge
arpl
sbb
dec
call
out
dec
outsl
mov
mov
nop
jmp
xchg
call
out
frstor
push
pusha
jp
cmp
adc
push
insb
mov
dec
data16
mov
gs
movsl
xor
cld
and
lds
in
jb
push
sbbb
enter
xor
adc
pusha
sahf
pop
adc
and
cmpb
insl
and
in
nop
outsl
lahf
popf
push
dec
int
cmc
add
jle
mov
pushf
ds
sub
shrb
sub
out
out
pop
cld
sbb
inc
imul
xchg
inc
scas
out
jp
inc
out
mov
mulb
or
popa
ror
sbb
rcrl
imul
jae
add
dec
jp
mov
push
in
insb
sbb
add
adc
cltd
leave
movsl
jno
pop
jbe,pn
push
or
and
jae
out
pop
cmp
xchg
mov
test
jno
and
scas
nop
pop
jno
cmp
outsl
incb
movsb
xchg
push
repnz
pop
or
js
decl
lret
mov
std
inc
sti
daa
arpl
jmp
addr16
pushf
out
sbb
mov
ficomps
aad
xchg
lock
xchg
test
je
popa
xchg
sbb
add
rorl
cmpsb
mov
test
push
pop
mov
or
xchg
jp
cmp
push
mov
or
cmp
inc
jmp
cmp
xchg
push
data16
dec
mov
in
dec
cld
movsl
pop
push
inc
addb
jae
out
dec
repz
loope
xor
lock
jb
js
inc
iret
dec
mov
insb
jo
sbb
or
xor
insb
push
cltd
xor
in
out
lds
jbe
adc
icebp
push
cmpsl
dec
xor
cmpsb
es
test
jg
mov
inc
push
nop
add
jnp
pop
test
fs
std
jae
test
mov
test
aas
mov
fcoml
jmp
out
mov
inc
sub
into
or
push
jns
push
lock
push
jl
arpl
jno
fsincos
es
inc
test
cld
cld
push
inc
mov
je
inc
jno
push
out
insl
pop
out
push
mov
mov
sbb
jg
ret
call
repnz
sbb
js
mov
mov
push
push
mov
jmp
jb
pop
xor
insb
mov
push
cwtl
rolb
mov
outsb
jmp
pop
add
sbb
cmpsl
test
aas
dec
jo
jecxz
out
mov
jns
xorb
jecxz
jp
jl
pop
xchg
shlb
mul
adcb
add
xchg
xor
cmp
repz
fs
dec
and
inc
nop
cmp
add
jo
xchg
iret
cmp
test
call
int
jo
in
pop
push
popf
sbb
lock
negb
mov
lods
jg
jo
int3
jl
push
repnz
xorl
cmp
imul
movl
aaa
pusha
test
mov
iret
sbb
dec
push
pop
cs
and
add
movsl
inc
js
jnp
cmp
add
xchg
dec
push
pop
or
xchg
mov
dec
cmp
dec
add
repz
imul
nop
scas
cmp
hlt
nop
pop
jl
pushf
sbb
ds
jbe
mov
pop
xlat
nop
dec
test
into
push
jns
and
jo
jg
hlt
pop
push
sbb
and
jo
in
rclb
lock
jecxz
adc
jo
js
push
sub
push
xor
lds
js
gs
sbb
leave
scas
repnz
and
mov
sti
inc
fldpi
pop
inc
cmp
test
mov
jo
lds
add
int
cmp
test
inc
dec
negb
je
call
pop
inc
hlt
push
jo
sub
mov
sub
ja
sbb
mov
repz
mov
jp
add
in
push
xchg
sub
cli
imul
sub
lods
nop
stos
push
bound
inc
inc
fstpl
mov
push
dec
ljmp
push
push
adc
sbb
jl
in
fdivs
rorl
popa
inc
adc
jp
cli
div
jl
jo
xchg
jno
push
cltd
or
push
movsb
mov
push
xorl
hlt
imul
inc
jo
push
xchg
adc
lret
jo
push
pop
cmpsl
insb
lcall
int
xchg
mov
popa
cmp
pushf
add
mov
mov
adc
adc
mov
sbb
subb
pop
sbb
ret
jg,pn
mov
or
push
or
lods
insl
mov
jo
xchg
outsb
nop
inc
sub
out
pop
and
or
ljmp
in
jo,pt
pusha
add
jo
sbb
into
jl
adc
mov
mov
lock
jo
sahf
cmovno
gs
jo
dec
sbb
cs
pop
jge
jl
or
repz
repnz
fwait
jo
sbbb
addb
nop
adc
dec
ja
fsubr
jo
inc
and
jo
jnp
not
scas
sub
jo
mov
stos
mov
xor
cmp
xor
push
ss
scas
sub
daa
xchg
sub
scas
xchg
add
push
fisttps
fdivs
push
mov
pop
out
aaa
jo
push
jge
iret
add
lret
jo
pushl
cwtl
jo
xchg
repz
daa
imul
mov
pusha
shrb
out
jo
xchg
out
mov
repnz
add
xor
mov
jo
loope
mov
jo
xor
outsb
jo
mov
je
jo
scas
js
or
jno
jo
test
out
push
push
inc
sti
cwtl
jbe
add
sub
jae
jo
shlb
and
and
sub
dec
pop
inc
push
push
lods
in
pushf
sbb
cpuid
mov
jp
nop
cmp
popf
mov
sti
out
jo
jbe
mov
data16
imul
repnz
cwtl
pushf
test
repz
rorb
sbb
sbb
shl
outsl
push
fnstenv
rorl
sbb
jo
movsb
mov
xchg
push
adc
fdivrs
adcb
mov
outsl
xor
shlb
out
push
popf
dec
or
add
and
aad
nop
fbld
int3
hlt
pop
push
shll
xor
roll
lcall
sub
and
sbb
mov
sub
inc
and
xor
in
jo
rclb
add
pusha
push
and
movsl
inc
adc
inc
insb
jl
bound
mov
inc
jo
into
pop
adc
scas
rorb
xchg
or
or
dec
xchg
repnz
xchg
inc
bound
popf
jo
push
testb
iret
add
lds
jle
xchg
jo
push
and
shll
in
cmp
xchg
sub
fisubs
add
iret
pop
jo
jb
lods
jl
nop
and
inc
insl
lahf
push
mov
dec
js
cltd
setbe
fnsave
les
nop
mov
divl
xchg
jo
push
test
xchg
mov
gs
sbb
dec
xlat
mov
int
pop
jo
add
ret
jmp
adc
sub
jp
js
dec
cwtl
adc
mov
jo
stos
rorl
pop
mov
jo
adcl
sti
jo
push
popf
in
pop
jns
xor
cs
scas
je
pop
popa
mov
je
pop
pop
clc
call
inc
sbbb
add
repz
or
test
arpl
xor
mov
shll
nop
gs
repz
das
jb
adc
pop
or
leave
add
js
loop
sub
xor
xchg
and
mov
flds
subb
mov
push
stos
jle
jmp
dec
lea
std
jae
cmp
leave
mov
pop
lret
mulb
mov
xchg
jo
ljmp
loopne
aam
fsts
cmp
lock
xchg
jge
jae
test
pop
cmpsb
dec
into
inc
pop
push
inc
jns
push
jo
lcall
mov
or
bound
mov
xchg
adc
xchg
lahf
push
xchg
pop
in
pushf
inc
out
jmp
push
adc
lret
push
fdivl
jns
sbbb
repz
pop
into
xor
mov
dec
or
jne
mov
push
push
cmp
cltd
inc
pop
dec
fistps
mov
jo
push
lods
push
out
imul
mov
in
dec
es
icebp
sub
jo
lock
ret
fmull
or
push
adc
or
ss
js
adc
shl
loop
in
imul
aad
js
xchg
loope
lds
sbb
in
and
jo
ja
imul
fsubrl
cli
and
scas
dec
adc
jle
mov
jo
scas
add
nop
dec
sbb
pop
hlt
jb
cmp
aas
xor
or
push
scas
mov
andb
inc
cltd
add
dec
je
lods
sbb
xchg
imul
test
andl
loope
jo
aas
and
movsb
add
adc
cli
pop
adc
loop
and
ret
lock
cmp
mov
inc
pop
jo
ja
adc
xor
les
invlpg
test
push
xlat
add
pop
nop
xchg
mov
jle
hlt
out
mov
es
jo
adc
inc
lret
leave
call
outsb
popf
dec
and
imul
rorb
pop
push
test
jo
jno
stc
inc
out
nop
jle
inc
ljmp
icebp
fldl
push
fistps
std
test
mov
idiv
scas
sbb
loop
xor
je
pop
int3
add
or
test
andb
mov
or
rcll
sub
shll
push
ds
out
subl
dec
imul
xchg
fisubl
fwait
pop
or
inc
adc
pushw
cld
inc
insb
test
shrb
mov
es
movsb
inc
xor
orb
and
stc
jp
inc
out
fidivrl
ljmp
hlt
gs
pop
or
mov
mov
das
mov
mov
and
loopne
jae
repz
lret
mov
adc
insl
lret
mov
js
push
cmc
or
imul
ret
ljmp
jge
lahf
cmp
jg
ljmp
xchg
mov
fiadds
sti
movsb
test
inc
dec
cwtl
lret
lock
movsl
repnz
or
popf
mov
mov
mov
xchg
cmpl
fs
movsl
mov
stc
mov
imul
aam
or
and
scas
fadds
ljmp
sub
aas
push
cltd
fwait
dec
or
or
fists
icebp
adc
into
xor
adcl
xchg
mov
shlb
ljmp
jns
jno
call
adc
hlt
jp
fsts
leave
xchg
cld
mov
dec
sbb
jns
clc
jg
jns
push
xor
add
bound
std
pop
mov
arpl
sbb
call
lcall
cltd
in
push
add
jecxz
push
push
jg
ja
cli
adc
pop
call
and
aaa
push
fcmovb
cmp
repz
lahf
pop
in
add
loopne
pop
jge
push
mov
jae
pop
pop
pop
jns,pn
push
out
inc
lock
mov
adc
jl
int
aad
mov
lods
xchg
jo
arpl
stos
xchg
pusha
inc
lahf
mov
push
mov
adc
cli
movsl
or
jmp
jp
xor
rcrl
add
push
pop
outsb
subl
lahf
cmpb
loopne
and
loopne
hlt
lods
mov
std
fxch
popa
xchg
in
call
push
subb
dec
sbb
sub
xchg
sbb
popf
adc
jbe
je
xor
jae
movsl
inc
push
xchg
repz
push
shlb
adc
pusha
xchg
dec
subl
and
fiadds
fsubs
popa
push
into
mov
or
loopne
mov
jo
arpl
nop
push
dec
mov
jp
dec
hlt
and
pop
je
add
cmp
imul
stc
inc
mov
pop
loopne
dec
mov
pusha
mov
push
mov
push
jge
idiv
sub
dec
or
es
pop
pop
lock
mov
dec
push
dec
pop
out
sar
int
daa
and
lret
or
bound
add
jbe
mov
rcll
mov
arpl
jbe
jae
out
shll
repz
add
cmp
es
subb
mov
adc
pop
push
stos
or
xchg
movsl
sarb
mov
pop
dec
dec
push
in
dec
insl
inc
bound
mov
dec
out
movaps
lods
into
push
mov
inc
inc
push
jb
adc
loop
lds
jge
jl
adc
lret
imul
in
arpl
jnp
cmc
iret
ret
push
bound
cwtl
xor
and
push
dec
sub
das
aam
das
sub
repnz
lea
mov
mov
mov
inc
xchg
imul
mov
cmp
xchg
repnz
inc
xchg
outsl
push
into
mov
sbb
std
cmp
xor
xchg
mov
aam
jns
lods
or
divl
mov
mov
jle
dec
and
clc
in
addr16
push
adc
mov
scas
lods
std
sbbb
dec
dec
in
fld
les
aaa
push
repnz
mov
xchg
gs
cmpsl
stc
jg
outsl
mov
rolb
cld
outsb
shl
lds
aas
mov
push
sub
mov
popw
dec
pusha
xchg
mov
hlt
lock
jae
test
in
adc
lock
dec
mov
jae
pop
paddd
insl
sub
fs
cmc
in
sub
dec
lock
pop
stos
jnp
sub
int
adc
andb
mov
addr16
int
pop
orl
adc
push
push
pop
cwtl
nop
ret
insl
push
hlt
ldmxcsr
repz
jo
arpl
les
sbb
aas
jge
loopne
shlb
aaa
cld
jns
mov
jmp
adc
insl
or
xor
arpl
jp
lahf
jg
cmp
pop
es
fcoms
pop
push
jg
jns
pop
rclb
cmpsb
add
stos
jp
mov
fsubrs
xor
in
adc
ss
cld
lret
push
inc
out
ds
pop
ja
addl
mov
leave
jecxz
das
cwtl
jge
imul
inc
fldenv
shlb
ret
add
dec
jg
je
dec
arpl
sbb
push
mov
mov
in
pop
int3
dec
push
neg
loop
push
inc
cmpsl
pop
mov
jae
inc
push
push
mov
xchg
test
mov
stc
test
mov
push
xor
xor
sbb
cwtl
shlb
sub
cmp
sbb
movsl
fsts
and
jae
sbb
cmp
inc
push
dec
pop
jae
popf
arpl
sub
and
test
shlb
xor
cmp
or
mov
jg
xchg
test
or
pop
jp
jle
xor
iret
imul
mov
jecxz
mov
mov
movsb
pop
pop
out
sub
push
or
inc
add
data16
out
mov
mov
cld
aas
outsb
jb
imul
mov
popf
arpl
push
or
inc
je
in
adc
pushf
movsl
std
loopne
mov
pop
mov
idivb
dec
xchg
or
js
sbb
xchg
mov
sbb
push
shlb
xor
ret
sbb
daa
mov
movsb
cwtl
lahf
sti
pop
data16
or
ss
push
out
xchg
xchg
orl
push
cs
jae
stos
lahf
insl
cmpsb
inc
fwait
outsl
push
xchg
insb
lods
sbb
pop
xchg
jno
aas
sahf
mov
mov
inc
adcl
insb
inc
add
enter
fists
ds
stos
mov
in
arpl
dec
fdivl
imul
adc
pop
xor
aas
cs
in
lods
sahf
out
push
xor
xorb
orb
add
stos
test
and
daa
call
sahf
xor
adc
push
jo
arpl
nop
xchg
into
jns
dec
andl
push
xchg
adc
xchg
lock
push
sub
jns
jns
lea
and
lcall
loop
jae
pop
or
push
inc
pop
pop
and
sub
out
xchg
xchg
fcoml
add
loopne
pushf
add
add
cmp
add
popl
add
pushf
adc
daa
xor
clc
mov
pop
xchg
dec
sbb
xchg
or
int
aas
push
es
jle
mov
and
lds
jbe
ss
mov
mov
mov
jle
mov
or
pushf
insl
push
sti
fcomps
and
jle,pn
mov
mov
ljmp
adc
pop
push
insb
test
jo
pop
fwait
adc
insb
out
or
xchg
mov
bt
repnz
movw
mov
lea
jne
not
jmp
jmp
push
call
or
mov
pop
call
push
push
call
movsb
lock
push
call
loope
scas
lret
jg
fs
adc
jg
pop
call
mov
sarl
cs
out
call
ret
push
call
mov
test
and
and
adc
cmpsl
rcl
cmp
gs
adc
cli
xchg
sbb
iret
pop
jno
jnp
mov
inc
aaa
add
test
adc
pushf
divb
or
mov
addl
push
inc
mov
es
sub
push
mov
imul
jle
test
lods
aas
adc
lret
test
decb
add
adc
sbb
shll
push
pop
jo,pn
sbb
mov
cmpb
or
adc
cmpsb
mov
mov
lea
je
or
shl
sub
mov
bts
sub
movzbw
cmc
xchg
shr
rcl
stc
mov
clc
bts
clc
and
add
btr
cmc
inc
add
not
inc
mov
call
push
call
add
ja
iret
call
movsb
shlb
imul
insb
mov
addr16
pop
jle
xchg
sub
pop
out
dec
popl
shlb
adc
mov
pop
andl
xlat
mov
shlb
into
inc
out
dec
sbb
icebp
pop
cld
inc
ucomiss
adc
leave
cmc
nop
mov
insl
inc
fs
jns
dec
push
inc
push
pcmpeqd
lock
roll
insb
xchg
xchg
sub
outsl
out
inc
cld
push
or
or
je
pop
loopne
push
sbb
jg
inc
or
popf
shlb
ja
fucomip
lods
inc
add
cmp
cltd
add
pop
rcrb
inc
jl
mov
mov
inc
stos
inc
push
loope
fldl
xchg
rorb
hlt
or
mov
in
cmpl
sbb
inc
sub
xor
lret
notb
cwtl
in
movsb
sub
add
gs
in
lret
mov
ja
or
lock
jg
pop
push
mov
mov
fistl
les
int
or
and
mov
cmc
in
sub
add
xor
insl
out
mov
adc
xor
or
push
movsl
pop
data16
mov
inc
xchg
fisubrs
pop
inc
jb
shlb
mov
cli
scas
fadd
lea
xchg
test
cmp
add
jl
aas
lret
les
sarl
jp
add
pop
jg
pop
dec
mov
dec
outsl
popa
fs
imul
add
test
and
jmp
mov
xchg
mov
stc
inc
shl
sub
clc
mov
cmp
call
xchg
pop
aam
inc
sbb
fldenv
out
jne
add
insl
shlb
cmpsl
dec
shlb
sti
inc
dec
sbb
mov
orl
mov
lods
and
movsl
jl
inc
sbb
jl
cmp
shrb
movsl
push
ja
rcll
lcall
add
or
add
cmpsb
cmp
cmpsb
jo
ret
mov
sbb
pop
lods
or
cs
outsb
rolb
or
mov
movsl
int3
sar
push
dec
sahf
sub
scas
mov
pop
fistl
ss
or
jecxz
cmp
sub
jns
jo
popf
jnp
xor
pop
enter
repz
inc
cmc
add
repnz
or
xor
fldenv
addr16
in
sbb
orl
mov
push
out
adc
pop
aaa
cltd
cwtl
xchg
sbb
int
sub
xor
sub
int3
jno
repnz
fmuls
pop
dec
pop
or
cs
call
pop
shl
sbb
sti
lea
adc
lcall
cmpl
lcall
dec
xor
mov
mov
and
adc
pop
shlb
or
dec
ficompl
mov
adc
dec
mov
aas
rorb
push
sbb
sub
je
push
inc
fisubrs
filds
cmp
inc
mov
add
cmpsl
adc
addr16
push
or
faddl
jmp
pop
call
add
shl
xchg
movsb
xchg
hlt
sub
iret
insl
xchg
dec
leave
inc
pop
push
dec
shrd
push
dec
mov
push
addr16
je
cmpsb
mov
leave
imulb
adc
pushf
lahf
jno
enter
xchg
mov
sarb
shr
dec
jne
sub
fmul
and
cltd
or
testl
mov
or
jl
insl
xlat
xor
outsl
cld
repnz
xchg
mov
std
inc
xchg
test
ss
adc
ret
mov
cmc
fwait
mov
pop
dec
ds
push
call
xor
ja
inc
call
jecxz
outsl
insb
xor
cs
insb
add
mov
adc
addr16
push
dec
mov
xchg
xchg
lods
add
cmc
adcb
mov
lret
mov
sbb
xor
std
add
loope
sbb
jb
shll
add
loope
pop
jmp
loop
rcrb
inc
lahf
inc
jno
adc
mov
scas
cltd
popf
mov
sbb
insb
xor
mov
nop
cs
mov
or
pop
adc
sbb
mov
mov
pushf
pusha
pushl
popl
pushf
movb
pushl
ret
push
call
ja
sbb
ret
xor
mov
inc
push
movsb
ret
lock
jle
push
pop
mov
loopne
roll
mov
roll
dec
mov
xlat
sub
and
sbb
shrb
sbb
filds
adc
loop
es
sbb
popf
movsb
outsl
cmc
xor
dec
mov
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
add
add
movsl
hlt
es
pushf
mov
int3
cmpsl
das
mov
mov
pushf
lock
mov
gs
loope
dec
loop
jnp
repnz
or
pusha
insb
in
sub
mov
pop
push
jo
lock
test
xlat
insl
aas
out
sub
in
lods
xchg
rclb
inc
hlt
mov
ja
inc
and
outsb
test
push
fdivrl
lcall
mov
jns
adc
mov
repz
ss
xor
mov
cmp
and
insl
ljmp
sub
cmp
call
lahf
imul
push
or
cmp
test
sub
sbb
inc
lahf
push
cmc
inc
mov
inc
add
mov
andb
in
or
inc
xor
fwait
and
mov
rol
mov
scas
and
mov
cli
andl
pop
jne
out
rorl
out
jns
shlb
push
out
ja
ja
mov
mov
jmp
js
push
lahf
push
cmp
das
and
outsb
repz
mov
fwait
stc
push
clc
push
stos
jb
mov
roll
sar
inc
jne
shl
sbb
std
out
adc
mov
pop
js
push
lods
lahf
shld
dec
add
in
mov
icebp
adc
push
inc
ror
dec
stc
insl
bound
jns
jp
dec
in
sar
test
jl
test
cmpsl
aad
and
jg
sub
pop
add
mov
daa
add
jne
sahf
inc
or
mov
sub
das
test
fcoml
xor
pop
push
dec
or
mov
stos
xchg
and
jmp
cmp
test
mov
jmp
gs
stos
inc
mov
push
ss
out
sbb
lock
pop
nop
sub
or
adc
xchg
sahf
jecxz
fidivl
repz
nop
in
lret
add
es
mov
or
cmp
repz
adc
loop
add
sbbb
mov
jne
lds
stos
xchg
add
xlat
dec
lret
cmpsb
xor
test
push
inc
aam
mov
bound
jg
mov
jmp
aaa
ret
sbb
jae
xchg
test
add
push
jp
push
je
pusha
mov
add
lds
lret
jle
sub
xor
mov
test
sbb
loope
sahf
test
push
or
shlb
ficoms
imul
xchg
add
pusha
daa
mov
div
ror
movsb
repz
add
ror
or
push
jecxz
adc
insl
int3
cwtl
cmp
jle
rorb
or
pop
cmc
add
orl
or
inc
pop
enter
out
mov
fs
jns
shll
ds
icebp
pop
dec
imul
lock
pop
clc
pop
scas
leave
aaa
aad
cmpsb
mov
in
push
jae
ds
ds
mov
decl
sub
cmp
mov
sub
inc
cmpsb
push
bound
insl
je
mov
dec
mov
cmp
dec
gs
daa
call
lahf
lret
test
lret
jmp
cmpb
lcall
dec
push
fidivl
repnz
cmpb
fnstcw
adc
movsl
inc
inc
mov
or
lods
or
int3
cmpsb
rcll
adc
xchg
pop
gs
shrb
dec
sbb
fistl
and
mov
jno
jg
imul
aam
insb
inc
pushf
mov
mov
lret
out
gs
fwait
sub
jge
or
xor
cmp
dec
and
js
pop
xor
or
mov
mov
in
xchg
cmp
mov
push
mov
pop
jp
xor
or
fisttpl
lods
movsb
and
mov
sbb
pop
mov
lret
inc
in
addb
adc
jbe
sbb
xchg
mov
sti
cmp
add
clc
xchg
das
setns
cs
pop
iret
jmp
pop
outsl
icebp
std
popf
adcb
sbb
loope
stos
add
mov
mov
mov
aas
out
mov
mov
jb
int3
mov
xchg
inc
lret
scas
push
xor
fcmovnu
xor
int
ss
shrb
and
insb
lret
movsb
out
es
std
pop
jecxz
xor
arpl
push
hlt
icebp
adc
ja
push
daa
pop
ss
mov
xchg
dec
out
dec
mov
scas
jo
pop
mov
inc
inc
xchg
xor
jle
jle
mov
lock
pop
fstpl
xchg
jne
xchg
push
pop
pop
mov
mov
or
sub
mov
lods
fisubrs
mov
jl
ret
mov
icebp
shrb
neg
vmwrite
xchg
mov
lods
xor
push
insl
es
xor
ss
mov
inc
inc
jns
js
jp
add
mov
adc
inc
test
sbb
loope
or
jnp
fstpl
sbbb
pop
and
outsl
jmp
iret
lods
divl
mov
dec
ja
aaa
idivl
imul
pop
fmuls
xor
int3
sub
add
out
ja
cmp
or
xor
xlat
or
mov
dec
mov
call
cmp
inc
sub
or
dec
call
or
icebp
xor
pop
aas
mov
pop
test
inc
xchg
fnstsw
lock
les
or
inc
leave
jb
push
popa
mov
pop
ljmp
inc
nop
adc
xor
movsb
mov
repz
outsb
push
push
lock
jbe
adc
xchg
add
dec
add
xchg
orb
mov
push
popa
inc
mov
cmp
pop
push
out
insb
lcall
and
daa
jle,pn
mov
adc
add
insl
cmc
ficoml
jnp
push
lret
pop
in
addb
or
rcrl
in
add
mov
pop
popa
or
xchg
into
dec
jo
mov
adc
push
mov
dec
or
push
jmp
setnp
dec
mov
jp
sbb
sub
or
push
mov
aad
xor
dec
dec
repz
lock
scas
clc
jns
add
ret
inc
push
push
mov
sub
jnp
push
xor
or
mov
repnz
fistpll
icebp
ljmp
lret
xchg
outsb
pushf
sahf
insb
mov
push
pop
and
mov
sbb
notl
or
ret
and
popa
dec
jmp
in
or
mov
stc
scas
push
fcoms
pop
adc
xorl
inc
and
movsl
dec
xor
xor
jo
fldenv
xor
and
inc
sub
sbb
jne
jne
fcomps
test
loope
test
add
sbb
std
bound
or
cmc
pop
enter
scas
push
sub
jb
test
les
enter
xchg
pop
mov
fs
lds
je
daa
mov
or
push
xor
jne
mov
int3
ja
test
aad
pop
mov
sub
cwtl
cltd
testl
push
sub
sub
out
sbb
cmp
mov
inc
bts
pop
sub
daa
cmc
ljmp
jae
mov
out
popf
inc
cmpsl
aaa
aas
pop
push
sbb
outsl
push
dec
mov
cmpb
lret
jbe
fmuls
push
adc
test
div
and
mov
nop
sahf
cltd
ja
inc
push
repz
fnstenv
inc
scas
cmp
jb
inc
mov
adcb
insl
add
ja
mov
dec
lea
xchg
dec
cmp
mov
mov
aad
xchg
lret
push
dec
test
fcmovnb
movsb
imul
ret
movsl
push
shlb
lahf
inc
divb
cwtl
mov
lahf
jp
dec
jecxz
pushf
push
stos
cmpsb
jnp
push
sbb
fisubl
xlat
fbstp
add
cmp
std
mov
cmpsb
and
mov
loop
sbb
out
jo
push
sub
int
xor
jg
sub
jb
dec
fcomip
leave
stc
or
fwait
daa
sarb
cmp
lahf
xchg
xor
xor
cmp
jne
jno
sbbb
shrl
stos
mov
in
and
xor
lods
mov
fistps
scas
mov
test
mov
movzbl
jmp
dec
js
jp
push
mov
addb
xlat
stc
out
into
push
mov
mov
adc
and
inc
dec
jno
pop
repnz
test
jp
nop
sti
out
das
xchg
xchg
fsubrp
bound
lods
pop
cwtl
sub
imulb
push
push
into
pop
ret
mov
hlt
sub
pushf
jecxz
cmp
je
adc
negl
pop
scas
xchg
rorb
xor
or
sbb
xchg
cmpsb
and
mov
ss
aad
out
scas
test
ss
dec
lods
jo
je
jne
cli
daa
mov
mov
lahf
xor
mov
in
mov
jmp
xor
notb
hlt
imul
fidivl
and
iret
loopne
imul
adc
mov
ja
sub
jmp
cmpsl
mov
mov
inc
fildl
clc
sbb
daa
cmpsb
icebp
inc
mov
jge
pop
scas
mov
inc
push
mov
gs
pop
std
lret
cmp
pop
push
dec
int
pop
fcmovnu
pop
pop
xchg
pop
repz
pop
sub
cmp
stos
aam
jb
sub
repz
iret
dec
fidivl
inc
xor
loopne
pop
insl
inc
pop
insw
ss
mov
pop
lods
mov
adc
mov
stos
cmpb
sub
lea
cmpsb
arpl
mov
pop
aam
mov
movsb
mulb
repnz
es
jp
sbb
fidivrl
sbb
arpl
inc
dec
inc
stos
add
incl
sbb
cmp
push
cwtl
sub
repnz
ja
imul
imul
fldenv
movb
movsl
ljmp
dec
nop
repnz
pusha
test
sub
jb
fs
mov
idiv
sbbl
xchg
jge
call
mov
push
jb
mov
adc
and
imul
gs
scas
inc
repz
mov
les
jmp
hlt
shll
fcompl
adc
push
add
ja
cli
call
push
push
ja
fwait
mov
push
mov
test
daa
inc
stos
into
inc
sub
or
les
and
int3
xchg
fimull
sbbl
loopne
adc
stc
cmc
clc
jecxz
int3
xchg
fldcw
mov
sahf
lret
lds
aad
mov
leave
push
xchg
popa
cs
mov
test
sub
out
cmc
in
pop
dec
into
sbb
mov
loope
in
cmpsl
into
test
jb
sahf
adc
in
cli
push
filds
mov
sub
leave
mov
add
pop
jle
insl
out
xchg
mov
xchg
negb
mov
jb
gs
dec
out
out
sbb
testl
pop
lods
push
fbstp
into
into
xor
sub
mov
insl
or
jg
push
shrb
in
lahf
popf
push
lcall
dec
xchg
popa
pop
mov
nop
ror
mov
lods
xchg
emms
lods
test
pop
jl
add
ret
mov
pusha
add
mov
dec
mov
xchg
or
jo
jnp
repz
push
jnp
cmovo
pop
mov
es
or
mov
push
xchg
pop
inc
and
push
xor
inc
out
push
jge
sbb
loope
into
adc
push
movsl
or
pusha
out
jne
mov
pop
or
popa
fdivs
out
pop
xorl
pop
xchg
lcall
cld
movb
mov
pop
inc
xor
inc
cmpsb
leave
adc
pop
pop
gs
sub
cmpsl
push
sbb
mov
jo
inc
push
add
pop
mov
or
fwait
jecxz
jg,pn
call
mov
add
push
call
mov
jmp
add
inc
jb
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
jg
sub
sub
in
std
push
call
lret
xchg
cs
icebp
imul
xor
add
stos
mov
adc
sbb
push
inc
jns
adc
mov
inc
sahf
cmp
xchg
loop
sub
push
mov
sub
sahf
call
movsb
dec
movsl
push
mov
fisttpll
sub
dec
jle
or
lods
je
xchg
jg
mov
shr
push
ret
add
call
insl
dec
js
mov
dec
jp
xor
ss
inc
lock
mov
and
push
ja
pop
cmp
enter
jb
test
cld
mov
daa
cmp
xor
cmp
and
and
cmp
cli
jl
fadds
in
nop
xchg
outsl
in
and
add
cmp
aad
mov
pushf
mov
dec
xor
pop
shll
mov
lret
scas
or
or
iret
cmp
mov
mov
jmp
cld
fistpll
cld
cmp
cmp
loop
mov
mov
push
jecxz
xor
cld
aaa
mov
xchg
xchg
cltd
adc
addr16
fsubrl
jmp
or
jl
mov
cmpsl
add
ret
add
sub
dec
pop
pop
ret
adc
mull
add
fs
call
xor
sub
mov
in
adc
ret
xchg
jb
mov
or
gs
jp
js
lds
orl
aas
lods
xchg
gs
jp
lods
out
inc
lret
mov
mov
fbstp
outsl
bound
fstps
mov
xlat
gs
mov
or
jp
add
jo
test
cmp
call
push
call
mov
pusha
pop
push
mov
mov
lea
pushf
mov
push
call
pushf
push
jmp
push
call
cmpsb
sti
into
test
jg,pn
push
call
push
push
sbb
xor
jno
sbb
adc
imull
cld
pop
pop
xchg
popf
sti
mov
popa
lods
imul
in
xor
add
and
sbb
nop
push
sub
repz
test
mov
ljmp
pop
psubd
insb
repz
in
push
sbb
mov
rorb
popa
bswap
mov
iret
movb
push
cmp
dec
sub
xchg
pop
push
xor
push
loopne
test
xlat
xor
pop
cmp
sub
call
jmp
in
xor
out
das
fwait
nop
cmpsb
inc
dec
mulb
push
enter
dec
sub
int
nop
dec
sti
ret
mov
loopne
xor
push
push
xchg
stos
loope
sti
ret
imul
mov
ds
jb
fwait
loopne
insb
loope
jg
lods
mov
repnz
pusha
jp
xchg
ss
movsl
lock
mov
lods
stc
xor
and
dec
adc
adc
push
mov
ja
clc
adc
pusha
dec
mov
or
mov
dec
pop
sbb
sub
enter
lahf
or
pop
popf
xchg
add
xchg
pop
cmp
sbb
lahf
xor
sbb
mov
mov
jae
add
ja
adc
jp
in
pop
je
inc
lods
xor
xor
cmc
sbb
arpl
cmp
movsb
jle
lcall
test
mov
sahf
in
divl
aam
fdivl
stos
mov
mov
sub
sbb
out
mov
dec
fisttpll
jmp
mov
pop
cmpsb
sti
mov
stos
pop
int
cs
add
dec
sub
add
test
sub
xchg
mov
clc
xchg
mov
sub
sbb
mov
pop
daa
ds
jg
push
stc
inc
aas
hlt
adc
cmp
sub
cmovno
repz
aad
aas
mov
or
hlt
mov
xor
daa
mov
repnz
bswap
or
movsb
into
stos
mov
inc
hlt
out
jp
popa
xlat
mov
sub
or
aam
pushf
push
call
add
and
push
call
fisubs
in
sub
ret
ljmp
int3
jb
jle
mov
dec
loope
mov
dec
lea
stos
inc
add
sbb
pop
pop
inc
sbb
cld
in
xor
mov
xchg
jecxz
mov
popl
inc
xor
push
jecxz
mov
clc
lods
xor
dec
dec
xchg
adc
out
jge
mov
and
faddl
add
fcomi
or
sbb
push
dec
invd
pop
aaa
aad
cmp
mov
pop
sub
push
add
rclb
xor
xchg
sahf
mov
leave
aam
sbb
xchg
test
sahf
and
pop
fiadds
lcall
cs
adc
add
or
mov
mov
add
add
imul
or
cmpsb
ret
push
jg,pn
mov
jo
add
int3
mov
paddd
sti
clc
inc
and
xor
into
imul
jle
pop
push
jo
fnstsw
or
or
or
ret
mov
add
cmp
and
je
test
xor
dec
scas
jl
add
call
cmpsl
dec
sbb
jb
cld
adcl
fsubrs
push
jno
ds
out
cmp
pop
mov
push
lods
pop
rcll
or
mov
push
call
adc
in
int3
orl
stos
jecxz
mov
in
pop
in
cli
mov
push
in
push
inc
bound
inc
jno
xchg
out
testb
call
insl
ja
add
negb
cmp
adc
inc
je
gs
push
imul
mov
xchg
add
mov
xchg
or
adc
jmp
test
mov
ret
push
mov
dec
xchg
int3
lcall
or
lret
mov
pusha
lret
cmp
and
mov
lds
cmp
ja,pn
push
call
push
out
outsl
dec
lea
je
stc
bt
push
pushf
cmp
pusha
jmp
repnz
mov
int
cltd
ret
xchg
xchg
std
push
cmp
pop
xlat
ret
outsl
push
fs
pop
sub
mov
lea
scas
add
and
pop
ja
xlat
cld
outsl
out
ljmp
push
subb
sub
and
adc
pop
in
add
and
lahf
jnp
cmp
aaa
mov
mov
adc
mov
jecxz
or
iret
xchg
xor
ja
aaa
nop
or
fcomp
int
jg,pn
xchg
call
or
in
sahf
test
jmp
pop
jl
and
cmc
lret
orl
das
cmp
or
cltd
js
push
sbb
pop
mov
std
jb
mov
mov
cs
aam
test
lods
jnp
fucomi
mov
mov
pop
test
jnp
iret
inc
mov
sbb
iret
push
adc
scas
jmp
add
mov
stos
and
data16
add
push
push
fcmovne
mov
jne
sti
mov
fadds
lea
outsb
or
fcompl
sbb
xchg
pop
xor
cmpsl
dec
push
call
sub
divb
cs
jl
xlat
mov
movsl
xchg
flds
je
push
xlat
into
sub
add
ljmp
adc
cmp
push
in
outsl
push
xchg
bound
xor
daa
repnz
fcmovb
sti
repz
adc
xchg
sahf
mov
fnstcw
mov
jl
imul
adc
mov
es
dec
ret
shlb
jbe
pop
orb
sbb
loopne
xor
dec
sub
cs
xor
call
push
push
call
push
cmpsl
repz
push
call
loop
add
push
add
dec
ret
mov
push
inc
sahf
and
out
insl
imul
xchg
lcall
sub
mov
pop
mov
mov
dec
pop
or
enter
xor
xchg
dec
lods
scas
add
mov
dec
std
clc
cmpsb
cmp
jns
sbb
loope
ds
and
or
sbb
add
insb
insb
fchs
push
sub
pop
lods
ds
and
rorl
pop
cmpsl
mov
shlb
icebp
cs
not
icebp
mov
outsb
cli
pop
lahf
add
jbe
negl
in
lret
sti
jmp
xchg
mov
xor
xlat
xor
rcrb
jne
popa
cld
lea
nop
loop
push
add
into
push
call
ja
fs
jae
call
movb
lea
je
push
cmp
jmp
mov
jecxz
or
ds
ljmp
sub
dec
pop
icebp
movsl
xor
or
push
jmp
or
mov
and
insl
in
imul
test
pop
xor
xchg
arpl
arpl
xor
fs
insb
add
pusha
loop
call
inc
scas
je
mov
add
out
je
fistpll
movsb
cmpsb
and
ss
lcall
lcall
roll
cli
adc
and
and
mov
aas
mov
icebp
cmp
movsl
stos
cmp
pop
clc
xchg
fdivrs
inc
sbb
mov
adc
xor
in
lock
ja
pop
cwtl
add
pushf
mov
out
adc
lcall
xchg
mov
popf
sub
mov
jnp
mov
in
sub
sbb
fidivrs
push
sub
pop
xor
repz
xchg
or
sti
ss
leave
mov
iret
sbb
clc
mov
fists
fs
nop
mov
icebp
jns
xchg
xchg
mov
xchg
outsb
stos
pop
and
loop
or
insl
pop
scas
xor
mov
test
fnsave
mov
mov
in
inc
jae
sub
or
sbb
dec
cmp
and
andb
out
dec
or
imul
test
and
push
dec
mov
lea
push
xlat
jp
sub
loop
or
jp
mov
sub
fnstcw
adc
mov
xor
fs
mov
insl
imul
xor
fimuls
dec
jne
int
mov
adcb
inc
sub
pop
xor
ret
ja
sbb
sti
sub
and
clc
mov
fdivrp
mov
xchg
aam
rclb
subb
cltd
stos
and
inc
std
inc
jno
cmp
mov
pop
mov
adcl
test
xchg
sub
pop
cmp
sbb
pop
and
lahf
dec
mov
push
mov
ja
gs
and
ret
aad
jo
dec
mov
jno
imul
or
sbb
mov
enter
js
inc
add
pop
xor
fmuls
jg,pn
loop
xor
add
les
out
inc
add
lret
sub
repz
push
sbb
inc
or
sub
popa
bound
push
jp
or
in
or
ss
ret
jno
out
sub
jp
xor
pop
xor
fcoml
inc
fimuls
repz
montmul
cmpsb
sbb
sti
mov
pop
popa
retw
dec
aas
cmp
insb
mov
daa
adc
mov
sbb
cli
les
or
shl
push
xchg
jb
loope
stos
inc
inc
sub
pop
xor
xor
icebp
mov
subl
add
iret
push
inc
lret
push
int
mov
shlb
js
dec
push
jge
in
repnz
pop
and
xorb
dec
aaa
out
jns
popf
dec
fnsave
shlb
fs
inc
adc
mov
jl
aas
or
sbb
cltd
outsl
pop
push
push
sbb
rcll
push
jnp
iret
fwait
test
xor
jbe
sbb
add
int
jns
iret
aad
push
add
or
adc
inc
sbbb
xor
dec
or
dec
dec
mov
and
sarb
inc
lret
adc
xchg
mov
jle
cmp
mov
cmp
loope
pop
iret
jae,pt
mov
mov
fsubrl
fs
decb
pop
xor
push
pop
ds
cmp
xchg
jmp
sbb
sti
out
or
xor
push
xor
lods
xchg
rcll
pop
or
adc
mov
mov
iret
aam
pop
sahf
movsl
mov
pop
ljmp
cwtl
sub
not
call
add
movb
pushl
push
cmp
jmp
push
call
int3
nop
cld
xchg
push
add
cmp
add
sub
jo
inc
pop
clc
cmp
repnz
sbb
movsl
xchg
mov
pop
jae
and
idivb
cmp
rorb
pop
test
gs
push
stos
nop
cltd
push
push
lock
cmp
in
xchg
jg
mov
stos
shrl
lret
mov
sarl
add
hlt
test
or
inc
daa
stos
push
call
stos
sub
push
push
cmp
inc
dec
test
adc
sub
sub
ljmp
xchg
xchg
push
pushf
inc
mov
mov
es
out
lcall
jl
push
fwait
js
mov
mov
fistps
push
dec
sbb
xchg
xchg
test
dec
scas
cmc
loope
push
pushf
call
pop
mov
mov
pop
dec
mov
shll
push
aaa
rolb
movsb
sub
das
cmp
sub
out
cmp
mov
and
or
xchg
adc
inc
push
imul
cmp
stc
and
aas
nop
mov
rorl
aas
popf
test
sub
cmpsb
insl
jg
pusha
mov
jae
push
std
and
push
mov
cmp
pop
rorl
dec
adc
xor
fstl
into
mov
lods
or
in
pop
int
dec
push
ss
inc
jb
cmp
je
lahf
insl
imul
push
or
push
lret
pusha
dec
jge
cmc
add
aaa
addr16
fwait
cmpsl
popa
fwait
lods
lret
aad
addr16
psraw
inc
cmp
leave
aam
sbb
sub
arpl
push
pop
mov
fadds
jp
sbb
cmp
mov
inc
fsubrs
test
loop
fmul
cmp
pop
sbb
arpl
fidivl
loop
jne
mov
sub
into
xor
scas
lret
inc
movsl
icebp
test
fldenv
pop
cmpl
sbb
xor
inc
loop
push
mov
out
lds
cmp
cli
mov
xlat
mov
mov
cmpsl
test
add
mov
repz
out
test
cmp
sub
jmp
mov
jns
xor
push
jno
push
mov
orb
mov
mov
sbb
xchg
out
jmp
mov
aaa
popa
mov
sub
xchg
pushl
lea
call
call
push
call
stc
hlt
es
stos
gs
dec
xchg
test
adc
test
dec
jno
lock
repz
mov
rclb
insb
je
pop
shr
push
inc
xor
jo
cmp
adc
lods
insb
je
inc
enter
xor
lret
mov
dec
jg
inc
mov
mov
sub
imul
add
xchg
rol
inc
sar
fisttpll
clc
fstpl
sbb
outsl
pop
mov
cwtl
popa
ret
sbb
xchg
or
or
add
xor
jmp
push
call
jl
sahf
cltd
pop
jle
jnp
inc
andl
aad
loope
sub
jge
loope
movsl
ret
jne
xor
movsb
mov
sbb
outsb
int
dec
jnp
mov
das
push
mov
sbb
shlb
pusha
lahf
je
push
pop
mov
enter
subl
sbb
pop
imul
sbb
lock
dec
stos
mul
popa
in
mov
or
mov
andb
repz
lret
push
fwait
lds
pop
scas
in
dec
outsb
sbb
enter
daa
push
pop
ficompl
or
xchg
mov
push
push
stc
imulb
mov
jno
dec
and
sbb
scas
pop
movsl
setne
mov
add
stos
enter
lret
push
xlat
into
std
sahf
out
sub
jo
push
xor
shlb
or
push
pusha
or
cmp
pushf
sbbl
mov
popf
lahf
aad
outsl
lds
cmp
call
mov
mov
push
mov
lea
jmp
fisttps
xor
jmp
cli
arpl
cmp
jns
ds
mov
xor
cmp
sub
stos
dec
call
out
mov
test
lret
mov
adc
adc
and
test
int3
xor
pop
mov
add
out
idivl
notl
pop
clc
pop
je
aas
mov
jp
rcll
pop
mov
jae
push
icebp
lock
cmp
and
inc
and
das
mov
shlb
sub
lock
call
add
pop
push
call
add
push
jne
xchg
jl
pusha
sbb
repnz
loope
lcall
xor
jne
scas
movsb
cmp
dec
mov
sti
jmp
pop
sti
or
mov
gs
dec
jge
outsb
out
push
mov
and
sahf
pop
aam
shrb
pop
inc
dec
fadds
or
xchg
das
aaa
mov
mov
mov
sbb
or
mov
xor
out
xor
out
mov
imull
out
arpl
pop
sub
inc
gs
outsl
fs
gs
imul
add
mov
ja
pop
aaa
dec
flds
lods
xchg
jge
add
aad
popa
inc
xchg
movsb
sbb
jae
cmpl
jns
jecxz
stos
js
adc
add
shlb
cmp
jbe
fbld
loopne
and
arpl
dec
push
and
sbb
inc
mov
dec
and
jnp
cmp
push
mov
ljmp
inc
aad
insl
inc
or
cltd
pop
subl
push
test
or
cmc
push
and
dec
nop
cmpsb
rcll
pop
loopne
cmpsl
mov
fisubrl
jge
mov
into
sub
aad
xor
push
add
add
popf
arpl
into
fwait
repz
pop
add
inc
push
sbb
gs
gs
pusha
stc
cmp
mov
cmc
mov
pandn
xlat
add
jbe
out
mov
cmpl
stc
roll
clc
int
mov
out
add
sub
aas
movb
lea
je
pusha
pusha
mov
pushf
lea
jmp
pusha
mov
pusha
push
lea
jmp
mov
push
pop
jl
adc
out
imul
pop
mov
pop
cmp
out
je
stos
dec
fstps
pop
and
jg
push
es
dec
xchg
mov
mov
adc
dec
jge
ret
shl
leave
add
iret
sub
mov
out
adc
dec
push
iret
push
jne
fisttpl
adc
fidivs
sub
sbb
mov
sub
xchg
push
xchg
std
iret
add
lock
daa
lods
pop
jp
jg,pn
fwait
call
addb
aad
jb
add
jmp
cs
jmp
call
adc
sbb
jle
jg,pn
inc
call
sbb
ja,pn
out
call
int
pop
push
call
push
mov
pusha
add
pushf
pushf
pushf
movb
lea
jmp
shl
not
pusha
setle
pushf
lods
push
dec
stc
clc
not
cmc
clc
bt
test
xor
clc
rol
mov
cmc
bt
movw
sub
cmc
cmc
pushf
cmc
ror
call
push
call
lea
jp
lds
les
repnz
push
jmp
mov
and
pop
aas
cmp
inc
mov
dec
jmp
lcall
stos
pop
shrb
jecxz
mov
mov
pop
pusha
jmp
pop
inc
xchg
inc
fs
out
inc
out
mov
leave
ljmp
fldt
nop
jmp
cmp
stos
xor
push
push
fildll
dec
or
dec
sbb
test
cwtl
lods
xlat
call
jge
stos
loop
inc
je
outsl
movsl
cmp
mov
test
repz
pop
es
cmpsl
lret
imul
fcoml
pop
sarb
insl
imul
fisubs
xor
popl
imul
pop
xor
cwtl
andb
push
mov
cmpsl
fdivr
xor
ja
sub
mov
mov
cmp
fnstsw
mov
jle
dec
push
sub
sub
out
jmp
mov
push
scas
mov
pop
add
jo
xchg
mov
dec
and
leave
mov
ds
xor
xor
ljmp
or
cmpsl
bound
roll
or
pop
add
lea
call
push
jmp
push
call
aaa
out
push
pop
jbe
xchg
mov
sbb
neg
or
pop
inc
xor
mov
xchg
fisubl
or
xchg
icebp
pop
mov
push
shl
push
adc
mov
mov
outsb
dec
push
jb
or
outsb
xor
dec
stc
mov
or
jecxz
and
xchg
xchg
dec
cs
push
inc
test
jmp
int3
sub
pop
dec
mov
sub
aas
xchg
inc
jns
repnz
inc
cmp
pop
or
sahf
sti
ret
mov
mov
pushl
ret
pop
sub
das
cmc
jns
imul
pop
fsts
jo
sbb
lock
sbb
shll
mov
imul
sti
popw
insb
stc
sub
fisttps
clc
cmpsl
shll
or
out
mov
push
or
dec
outsl
fsub
movlhps
mov
psrlw
pop
pop
lea
je
pushf
movb
pushf
pushf
lea
jmp
xor
dec
out
stos
and
push
lods
adc
repz
mov
push
add
iret
test
pop
aad
mov
sub
hlt
in
dec
arpl
xchg
iret
xchg
adc
in
je
lock
or
and
iret
dec
lds
popf
inc
out
inc
mov
inc
clc
fadds
shrb
xlat
push
test
mov
stc
pop
sbb
or
mov
mov
mov
jne
inc
cmc
xor
outsb
adc
inc
sub
adc
fisubs
lods
inc
jae
xor
push
mov
dec
mov
mov
mov
push
fisubl
dec
shll
xchg
fistpl
and
mov
sub
out
pop
sub
dec
and
sub
and
mov
shrl
mov
pop
cmp
xchg
cmp
rorb
or
jl
inc
sub
pop
and
test
lcall
sti
or
jle
test
out
iret
mov
push
fs
cld
pop
test
cmp
mov
int3
pop
icebp
aam
scas
mov
pop
in
sbb
aas
inc
cmp
pop
and
out
jmp
mov
lahf
popa
dec
mov
hlt
push
pop
cmp
cld
pop
jle
jl
mov
mov
push
sub
inc
icebp
xchg
lods
imul
add
push
or
jl
das
repnz
add
cmp
shll
adc
out
or
sub
push
call
xor
js
add
addr16
jo
outsb
dec
gs
js
add
pusha
cmp
call
and
mov
push
call
jb
jbe
out
add
add
lods
sub
pushf
cmp
cmp
pushf
lea
ja
pusha
cmc
bt
imul
stc
bt
mov
add
pusha
movl
movb
lea
jmp
loopne
push
sbb
pusha
jo
adc
jg
pop
mov
and
jge
sahf
inc
mov
jbe
push
stos
sub
cmp
cmpsl
mov
adc
out
push
sti
push
and
lret
xchg
cmp
movsb
add
aas
or
popa
adc
leave
ss
jle
test
shll
loope
sti
cld
jb
out
sub
dec
int3
aam
popf
mov
inc
add
mov
lret
loope
sbb
fwait
add
and
jnp
aas
fadds
aaa
loope
insb
ljmp
add
insb
lret
add
or
inc
pop
and
repz
and
rclb
orl
gs
jne
outsl
adc
or
outsl
rolb
in
ja
xor
rcrb
outsb
rorl
mov
mov
pop
pop
jle
into
decl
add
mov
ljmp
scas
test
mov
sbb
pop
pop
jg
cmp
or
divb
push
fcoms
negb
fcompl
les
push
pop
pop
into
out
dec
and
xor
mov
xchg
daa
mov
movsb
inc
or
push
int
out
xor
je
int3
fldenv
fisttpll
aas
enter
sbb
cmp
dec
jne
in
stos
imul
push
adc
stos
xchg
movsb
rorl
lcall
int
mov
sbb
shl
pushf
into
push
mov
mov
or
hlt
jp
addb
xor
insb
popa
arpl
pop
loopne
xor
mov
shll
push
mov
pop
pop
int
mov
ja,pn
push
call
hlt
xor
in
mov
insl
outsl
mov
mov
mov
dec
in
fsts
insb
cmpsb
sbb
xchg
xor
jae
js
in
pusha
push
mov
mov
rorb
daa
insb
mov
pop
std
xchg
fwait
shrb
add
aam
add
inc
add
jo
inc
out
xchg
adc
jge
fnstsw
xlat
jge
mov
sub
call
add
xor
mov
rcll
pop
xor
mov
and
mov
jmp
movl
pushf
popl
push
mov
pushl
popl
pusha
lea
jmp
mov
pushl
pushf
popl
shl
shl
mov
dec
dec
push
not
xchg
cmc
jmp
movzbl
not
not
pushf
popl
rcr
lea
rcl
mov
clc
shld
lea
mov
ror
mov
jmp
stc
sbb
mov
pushf
pushf
rol
mov
dec
call
jmp
push
xchg
bts
movsbw
push
shl
push
shl
test
or
push
btr
not
movsbl
push
pushl
popl
adc
xor
add
shl
push
mov
xor
sbb
mov
bsr
rol
sub
dec
shrd
stc
xchg
bswap
pushf
pop
pusha
not
add
sar
shl
lea
shl
clc
sar
sub
lea
mov
push
pusha
lea
jmp
call
pushf
pusha
push
xchg
jmp
not
call
jmp
shrd
movl
btc
mov
sub
sub
bswap
pop
bswap
movsbw
mov
not
shr
bswap
shrd
add
lea
ror
btr
sub
lea
jp
mov
pushf
pushf
movw
pusha
lea
jmp
push
movb
mov
jmp
clc
cmc
call
and
jo
pushf
pusha
pusha
pushf
popl
pushf
mov
movw
pushl
popl
movw
pushf
lea
jmp
push
pushl
movb
mov
mov
movzbl
jmp
pushf
pushf
mov
jmp
xor
pusha
test
neg
pushf
sub
pushf
call
jmp
pushl
mov
pop
movzbw
mov
pusha
call
sub
test
pushf
add
pushf
pushf
popl
pushf
pusha
pushl
popl
push
pushf
push
pushf
lea
jmp
movl
call
add
pushl
jmp
xor
pusha
neg
push
sub
jmp
pushf
dec
pushf
cmc
ror
clc
bt
pushl
sub
test
not
stc
stc
add
pushf
test
clc
sub
jmp
mov
sbb
xor
dec
pushf
mov
bt
pushf
stc
sub
mov
jmp
rep
add
pop
pop
mov
bt
btc
add
jl
neg
pop
jmp
pushf
pushf
call
movl
call
push
pushf
mov
call
push
pusha
pushf
mov
call
pusha
bswap
cmc
add
call
pushf
mov
call
mov
pushl
mov
movsbw
mov
pushf
bsf
or
mov
movzbl
movsbw
sub
pushl
popl
shl
bsr
bts
dec
movl
dec
movsbw
shld
mov
movzbl
bsf
sub
cmp
lea
sbb
bswap
add
sbb
shr
bts
not
or
lea
movzbw
jmp
pushf
btr
pop
mov
pusha
mov
test
bt
pusha
call
mov
pushf
pushf
lea
jmp
pushf
push
mov
bswap
lea
jmp
push
pushf
divl
pushl
jmp
pushf
mov
pushf
movw
lea
jmp
pusha
mov
pushf
pushl
lea
jmp
pushf
btc
das
cwtd
mov
aad
mov
dec
dec
mov
cmc
mov
mov
sub
call
clc
sub
cmc
pushf
pushf
cmp
shr
call
mov
adc
cmp
mov
cmp
movzbw
pusha
dec
mov
not
ror
shr
inc
mov
pushf
add
jmp
dec
call
jmp
xadd
rcl
inc
mov
ror
stc
mov
push
jmp
pusha
bt
shr
mov
test
pusha
cmp
or
cmp
cmc
pushf
test
xor
pushl
jmp
pusha
call
mov
not
lea
pushl
pushf
popl
test
rol
pushl
movsbl
mov
shr
inc
movzbw
clc
mov
mov
inc
bts
xor
push
dec
push
shrd
test
not
push
jmp
test
cmp
bt
js
add
pushf
pushf
lea
jmp
pushf
stc
pusha
sub
clc
clc
call
mov
jmp
push
pusha
call
call
push
pusha
pushl
movb
mov
bswap
bswap
pushf
popl
jmp
aaa
mov
setae
sar
inc
mov
cmp
push
sub
stc
pushf
call
adc
not
sub
push
lea
mov
pushl
lea
jmp
lea
setb
jb
mov
jmp
xchg
aaa
cmp
stc
mov
mov
movsbw
rcl
mov
jb
test
add
pusha
pusha
mov
jmp
jmp
push
pushf
mov
movzbl
not
jmp
xchg
jmp
push
pushf
popl
push
push
pushl
popl
mov
movw
movb
lea
jmp
jmp
pusha
pusha
pushf
popl
jmp
mov
clc
sub
pusha
movb
mul
jmp
lea
test
mov
sub
pushf
pusha
lea
pusha
pushf
mov
pushl
lea
jmp
lea
shrd
push
sub
movsbw
bswap
mov
pusha
push
pushf
pushf
lea
jmp
mov
inc
call
mov
pusha
pushf
mov
pushf
movb
lea
jmp
mov
pushf
pushf
popl
jmp
mov
push
pushf
jmp
xor
pushf
xor
bswap
not
not
clc
call
movsbw
movsbw
pushf
popl
sbb
add
push
neg
jmp
pushf
pushl
popl
mov
pusha
movb
lea
jmp
movb
mov
jmp
cmc
mov
neg
sub
setp
pushf
not
lea
jge
dec
mov
pusha
inc
adc
rcr
pusha
neg
pushl
rol
xor
sub
sub
neg
add
mov
test
sub
jmp
jmp
push
call
dec
jmp
decl
mov
lea
jne
call
cmp
pushf
and
movb
call
push
pusha
mov
jmp
movb
pushl
popl
mov
push
mov
lea
jmp
movl
bsr
lea
mov
shr
sub
mov
bts
bswap
movsbw
xchg
not
or
xchg
neg
mov
shr
btr
cmp
shrd
sub
pusha
pushf
lea
pushf
mov
pushf
push
lea
jmp
call
mov
push
pushl
popl
push
pushf
mov
lea
jmp
pushf
movsbw
mov
pushf
push
push
pushl
ret
pushf
pusha
pushl
popl
pushf
movw
pushf
pushl
lea
jmp
shld
mov
jmp
bswap
jmp
push
call
sub
aas
or
mov
btr
bsf
sbb
btc
mov
bt
test
clc
clc
not
stc
not
clc
cmc
cmp
test
sub
test
pushf
clc
and
mov
push
jmp
push
mov
not
adc
xor
sbb
mov
mov
lea
jp
clc
sub
cmc
shl
pusha
jmp
or
mov
pusha
clc
test
add
push
pushf
pushl
movb
lea
jmp
stc
not
call
pusha
mov
pushf
mov
jmp
pusha
movsbw
mov
lea
pusha
mov
movb
movl
lea
jmp
add
jmp
jmp
jmp
push
pushf
lea
ja
not
pushf
bts
call
call
pushf
test
xchg
xadd
push
shr
rcr
stc
btc
push
cmc
sbb
sar
push
bsf
push
cmc
rcl
dec
dec
push
clc
test
pushl
movsbl
rol
push
stc
mov
rcl
push
rcr
sub
push
bswap
shl
not
not
cmc
lea
bswap
sub
movzbw
pushf
lea
pusha
pushf
push
lea
jmp
bt
pushf
mov
sar
mov
cmc
clc
call
test
bt
cmp
cmp
pushf
mov
push
pusha
lea
ja
das
mov
bsf
bswap
movzbw
lea
bswap
rcl
mov
sub
clc
bsr
ror
shl
lea
clc
add
and
movzbl
shld
sub
push
push
jmp
pushf
pushl
call
mov
call
bt
mov
stc
sub
jmp
pushf
popl
jmp
movsbw
pushf
popl
shr
dec
mov
add
btc
movsbl
movsbl
push
neg
push
movsbw
push
not
and
rol
push
rcr
push
shr
sbb
push
shl
bt
pushl
btc
sbb
bsr
push
sub
mov
xadd
shl
sub
stc
neg
bswap
shl
xor
bsf
not
rol
ror
sub
or
mov
shl
and
sub
pushf
lea
pusha
pusha
mov
pushf
lea
jmp
pushl
popl
test
shrd
bswap
movl
btr
xadd
movzbw
jmp
jmp
push
jmp
pushf
call
pushf
pushf
popl
jmp
pushf
jmp
sar
pusha
mov
movsbw
add
mov
mov
movb
pusha
add
call
adc
bt
and
movzbl
pusha
sub
mov
jmp
pushl
call
mov
sar
setne
add
test
mov
mov
push
call
pushf
pusha
add
pushf
mov
push
pushf
movb
lea
jmp
mov
movb
pushf
lea
jmp
lea
xadd
clc
mov
bt
or
add
push
mov
and
xor
sub
lea
rol
mov
test
pushf
cmc
shl
jmp
pushf
popl
sbb
neg
push
mov
sbb
xchg
jmp
call
mov
pushf
pushf
pushf
popl
push
movb
lea
ja
popl
pushf
pushl
pushf
pusha
lea
jmp
sub
movb
rol
pushl
cmp
mov
clc
xor
push
jmp
ror
pushf
sub
cmp
test
jmp
aad
and
sbb
push
mov
stc
cmc
cmp
test
add
jmp
jmp
pushf
pusha
mov
pushf
popl
lea
jle
popl
pusha
pushf
lea
jmp
movw
mov
movb
mov
movw
pushl
ret
pushf
pushf
push
mov
push
movb
lea
jmp
lea
mov
cmp
cmc
clc
push
add
movl
mov
push
pusha
push
pushf
mov
push
movb
movb
mov
lea
jmp
pushl
popl
mov
push
lea
jmp
pusha
mov
pusha
movzbw
pusha
not
pushf
popl
push
cld
std
lea
mov
push
mov
call
call
mov
push
mov
call
call
popl
pusha
movw
lea
jmp
pushl
mov
pushf
mov
lea
js
mov
pusha
jmp
call
mov
movw
mov
movl
lea
jmp
jmp
pushl
popl
movb
pushf
lea
jmp
mov
mov
movw
mov
lea
jmp
mov
shl
btc
sar
push
shl
neg
add
push
push
shl
sbb
mov
test
shl
bsr
bts
push
btr
not
push
pusha
mov
bsf
stc
shld
pusha
pushl
popl
pushl
bt
movsbw
rcl
movl
inc
xor
mov
add
rcl
bswap
movzbw
sub
movzbw
clc
ror
bswap
or
add
pushl
not
shld
lea
xor
stc
sub
jmp
ror
not
and
shr
lea
lea
bsf
sub
pusha
lea
movb
movb
movb
movl
lea
jmp
pushf
jmp
pushf
pushf
pushf
popl
adc
test
inc
rcr
mov
and
bts
bsf
push
sar
movzbw
call
bt
inc
sets
aam
mov
jmp
bsf
adc
neg
rcl
rol
movsbw
shrd
test
bts
xor
btr
xor
stc
clc
rol
movzbl
cmc
bswap
rcl
pop
mov
pusha
clc
clc
rol
call
not
xadd
shl
movzbl
shld
pushf
sub
movzbw
bsf
pusha
bswap
dec
bswap
jmp
mov
movb
pusha
push
pushf
lea
jmp
add
mov
push
push
mov
pushl
lea
jmp
inc
shl
mov
shrd
neg
lea
adc
and
sar
add
xor
mov
cmp
stc
add
pusha
pusha
mov
push
push
push
lea
jmp
pushl
popl
cmc
movsbl
sar
clc
push
adc
bts
dec
mov
bswap
shl
sub
stc
cmc
btc
bswap
and
shl
not
bswap
sub
ror
not
mov
cmc
pushf
shl
sub
bswap
movzbw
mov
pusha
lea
jmp
jmp
pushf
popl
jmp
ror
push
sar
mov
bt
stc
sub
pushf
not
pushf
pushf
inc
pushf
cmc
neg
bt
sub
mov
pusha
mov
stc
jmp
push
pushf
pushl
mov
push
bswap
pushf
popl
and
mov
bswap
mov
xchg
rcl
push
not
push
btr
ror
sub
add
push
add
btr
stc
push
mov
add
jl
ror
push
xadd
call
stc
add
call
add
push
lea
jge
mov
pusha
pushf
pusha
pushl
lea
jmp
movb
call
aad
or
mov
rdtsc
push
movb
cmp
sub
pusha
call
test
mov
test
test
sub
call
mov
call
jmp
push
movb
pusha
call
pusha
call
rol
test
push
cmp
xor
cmc
cmc
jmp
shl
sub
btr
or
pushf
shl
bswap
rcr
not
jmp
lea
jg
pushf
jmp
pushl
xchg
not
pushf
popl
xor
bts
mov
bswap
xchg
bts
cmp
push
movzbw
pushf
pushl
xor
mov
lea
adc
btr
mov
btc
cmp
dec
push
cmc
push
bsf
stc
pushl
btc
ror
add
push
mov
mov
bswap
rcl
neg
inc
sub
btc
ror
shrd
shld
bswap
shl
pusha
bswap
not
pushf
dec
lea
stc
not
pushf
shrd
sub
pusha
lea
pusha
pushf
lea
jmp
xor
sete
pusha
neg
mov
inc
mov
movb
mov
jmp
pushf
popl
push
pushf
movb
pushf
pushl
popl
push
push
lea
jmp
lea
jns
pushf
mov
pusha
pushf
push
call
mov
push
movw
lea
jmp
mov
btc
mov
sar
or
movw
movsbw
mov
sar
bswap
mov
lea
btc
mov
bsr
mov
xchg
cmp
movw
sar
mov
shl
bts
pushl
popl
lea
shr
not
ror
movl
bsr
and
bsf
mov
shrd
pop
call
pusha
pushf
lea
je
mov
push
pushf
lea
jmp
daa
btc
pushf
bsr
mov
stc
cmp
sub
jmp
mov
mov
push
pushf
pushl
ret
cmc
cbtw
mov
add
pushf
clc
cwtl
call
mov
pusha
mov
pushf
lea
jmp
jmp
test
cmc
cmp
add
pushf
pusha
lea
jmp
add
pushf
mov
lea
jmp
lahf
pusha
call
push
pushl
xchg
std
mov
cld
movw
mov
push
cld
mov
call
lea
ja
popl
push
pushf
pusha
pushl
lea
jmp
shl
pop
rol
sub
shr
bswap
inc
rcl
add
not
xchg
inc
not
mov
pushf
sub
movsbw
call
pushf
popl
sar
shrd
or
shld
mov
shrd
xchg
sbb
shrd
or
push
bswap
sub
shrd
push
adc
push
add
call
cmc
jmp
pushf
mov
pushf
movw
movb
movb
lea
jmp
pushf
mov
pushf
lea
jmp
dec
jmp
pushf
popl
pusha
pushl
mov
pushl
popl
push
movb
mov
lea
jmp
jmp
cmc
call
bsf
lea
je
cmc
cmp
push
lea
ja
cmp
mov
btc
btc
cwtl
das
lea
mov
bsf
jmp
mov
mov
push
not
mov
pushf
jmp
shl
rcr
setb
mov
clc
call
pusha
pusha
push
mov
push
pushf
popl
btc
call
pushl
popl
movb
pushl
lea
jmp
rcr
mov
ror
pushf
setbe
mov
cmp
sub
push
movw
bt
shr
jmp
pushf
popl
call
pusha
mov
movw
mov
pushf
popl
jmp
pushl
popl
mov
lea
jmp
mov
sbb
xadd
sub
add
bsf
bt
mov
adc
rcl
shr
btr
xor
shl
rol
call
mov
mov
call
mov
bsf
shl
mov
sub
lea
bsf
xchg
mov
call
pushl
mov
mov
push
pushf
pushf
lea
jmp
pushf
mov
div
pushl
jmp
cmp
pushf
sub
push
mov
mov
pushf
push
pushf
push
lea
jmp
dec
mov
bts
pushf
pushl
popl
or
push
xor
bsr
cmp
clc
mov
shl
sub
dec
adc
bswap
bts
bswap
and
clc
xadd
or
not
inc
dec
call
pushf
pushf
popl
push
lea
je
popl
push
movl
lea
jmp
push
not
inc
pusha
ror
shld
add
neg
neg
sub
rol
rcl
dec
sar
mov
clc
stc
pushf
sub
test
call
rol
mov
pushf
jmp
pushl
popl
pushf
pushl
lea
jmp
pushf
call
pushf
popl
ror
mov
rol
mov
rol
mov
xchg
or
sar
mov
and
shld
btc
mov
clc
shl
movsbw
rcl
mov
rol
and
mov
bswap
rcl
shrd
pushl
popl
shld
movl
shr
rcr
movzbl
shr
mov
xor
pushf
sub
sar
bswap
rcl
bswap
jmp
clc
stc
call
jge
mov
bt
pushf
movl
xchg
bt
cmp
pusha
cmc
add
jmp
cbtw
rcl
rol
stc
mov
call
mov
jmp
pushf
xchg
movsbl
pushf
pusha
shl
stc
rcr
mov
movzbw
rcr
xor
and
mov
adc
pushf
xchg
xor
pushf
mov
cmp
mov
sub
mov
not
mov
dec
pushl
popl
call
jmp
jmp
cwtl
lahf
bswap
mov
pusha
call
ror
ror
mov
add
cmc
dec
bsf
mov
lea
dec
shl
mov
bts
pushl
popl
call
pushl
pushf
pushl
popl
push
pushf
pushf
pushf
lea
jmp
clc
ror
and
movsbw
test
ror
sub
call
push
cmc
mov
jmp
or
inc
rol
neg
jmp
mov
mov
jmp
push
mov
movb
pushf
mov
pushf
lea
jmp
cmc
pushl
popf
movb
push
lea
jmp
bts
pusha
movl
call
sub
movb
pushf
test
call
jmp
pusha
jmp
sub
bswap
mov
test
stc
add
push
pushf
jmp
sbb
neg
bsf
inc
add
setl
movzbw
neg
push
sar
bts
movzbw
and
neg
ror
adc
mov
pushf
clc
sub
pushl
pushl
mov
pushl
lea
jmp
pushf
push
call
jmp
jmp
mov
pusha
pushf
popl
call
mov
mov
mov
push
lea
jmp
sub
cmc
call
add
add
call
push
lea
jns
popl
push
mov
pusha
push
lea
jmp
call
push
movl
cmc
add
jmp
sub
pushf
mov
jmp
popl
pushf
pusha
push
pushf
lea
jmp
pushf
pop
pushf
pushf
popl
sub
add
mov
mov
push
lea
neg
pushf
xchg
movzbw
sar
bsf
shl
push
ror
push
test
pusha
not
mov
rcl
btc
mov
adc
adc
xchg
add
pushl
popl
sub
bt
add
movl
pop
lea
mov
sub
clc
btc
sub
pop
bswap
movzbw
btr
shl
sbb
not
not
bt
lea
shrd
or
test
sub
mov
mov
push
push
push
mov
lea
jmp
call
test
stc
shr
push
pushf
push
call
pushl
popl
movb
pushl
pushf
lea
jmp
sub
pushf
pushf
mov
push
pushf
push
lea
jmp
jmp
pusha
pushl
ror
cmc
clc
call
call
sbb
sub
movsbw
call
call
cmc
mov
shld
not
and
mov
clc
bt
cmc
jmp
jmp
sub
movsbw
mov
bsr
and
btc
shrd
mov
pushf
jmp
pusha
cmc
bswap
or
mov
cmc
sub
js
cmp
push
add
pusha
push
mov
movw
lea
jmp
push
jmp
add
call
add
jmp
jmp
pushl
not
pushf
call
lea
push
pusha
mov
push
lea
jmp
not
pushf
popl
clc
mov
shl
mov
sar
mov
movsbw
add
mov
add
movzbw
shr
mov
shrd
pushf
mov
movzbl
test
add
clc
mov
sar
bsr
pushl
popl
adc
ror
movl
shld
adc
sub
cmc
mov
xadd
xor
sub
call
pushf
pushf
popl
mov
jmp
clc
sub
push
jmp
not
lea
mov
pushf
call
sub
cmc
rol
movsbw
lea
btc
push
cmp
and
shr
bsf
add
lea
sub
mov
movsbw
movzbw
mov
pushf
push
pushf
pushf
popl
push
xchg
mov
cld
mov
cld
movw
lea
pushl
pushl
push
xchg
bswap
pusha
movzbw
mov
std
push
cld
mov
pushf
rep
bswap
mov
shl
mov
push
cld
std
mov
pushl
popf
push
pushl
movl
lea
jmp
test
sub
clc
shl
jmp
pushl
mov
jmp
jmp
mov
pusha
pushf
pushf
lea
jmp
jmp
jge
stc
cmp
pushl
pushf
stc
add
cld
cmp
std
pushf
pushl
popf
pushl
pushf
lea
jmp
call
mov
pushf
lea
jmp
cmp
sub
mov
neg
dec
add
pusha
call
test
shrd
push
jmp
pushf
pushf
popl
jmp
mov
push
pushf
popl
call
movb
jmp
call
call
pusha
pushl
popl
mov
lea
jmp
push
shld
jmp
shld
bt
push
pushl
mov
test
cld
push
pushl
popf
pushf
pushf
pushf
lea
jmp
mov
pushl
popl
pushf
pushl
lea
jmp
test
mov
shl
rol
push
mov
bsr
stc
cmp
push
call
push
ror
push
jmp
pusha
call
pushl
popl
push
push
mov
lea
jmp
not
pusha
push
clc
pushl
not
push
jmp
movsbw
lahf
mov
pusha
pushf
cmc
xchg
stc
cmc
add
call
cmp
cmp
add
pusha
jmp
dec
mov
jmp
and
setp
sar
mov
cmc
pushf
test
cmc
add
jmp
jmp
push
shl
push
lea
jne
pusha
mov
pushf
jmp
bswap
jmp
movb
pusha
pushl
popl
pushl
lea
jmp
jmp
jmp
mov
bts
sub
test
shld
shl
bswap
rcl
not
rcl
mov
shr
cmc
sub
pushf
movzbw
lea
lea
push
lea
jmp
aam
shld
notl
aam
and
mov
stc
cmc
cmc
sub
stc
jmp
movw
mov
pusha
push
lea
jmp
mov
cmc
add
stc
stc
movb
pushl
cwtl
cmp
add
jo
bt
bt
sub
cmp
jge
bt
add
push
call
movb
movzbw
mov
call
pushf
jmp
mov
pushf
movl
mov
lea
jmp
jmp
push
mov
movsbw
movzbw
pushf
inc
add
push
pushf
btr
xchg
test
bt
push
push
sbb
pushl
or
mov
stc
lea
cmp
mov
and
push
pushf
mov
bsf
pushl
bsf
stc
push
ror
shr
sub
jmp
xchg
lea
mov
inc
cmc
not
mov
bswap
shrd
shl
mov
bts
pusha
movzbw
mov
shld
dec
test
pushl
popl
bsr
movl
test
lea
movsbw
mov
adc
adc
sub
dec
bswap
movzbw
xor
xadd
not
movzbw
shl
lea
stc
shld
ror
shr
sub
bswap
not
mov
pushf
lea
jmp
mov
pushl
lea
jmp
pushl
popl
bt
stc
cmc
add
std
clc
bt
clc
popf
pushf
push
movb
push
lea
jmp
lea
bswap
lea
push
lea
jmp
add
jmp
bsf
cmp
bswap
call
push
pushf
ror
mov
xadd
clc
pushl
clc
shrd
push
bswap
bswap
mov
cmp
shl
clc
sub
call
add
call
dec
rcr
mov
ror
bsf
shl
cld
pop
std
adc
pop
clc
mov
not
pop
cwtl
rol
pop
xadd
shrd
bt
xchg
pop
movzbw
cmc
ror
pop
clc
rol
cmp
pop
btr
pop
bt
pop
shl
popf
lea
jmp
call
pushf
pushf
push
jmp
lahf
shld
xor
mov
push
sub
pusha
push
mov
push
pushf
mov
lea
jmp
pushf
jmp
call
mov
pushl
push
lea
jmp
cmc
push
add
pusha
mov
pusha
push
push
lea
jmp
shl
inc
mov
bts
movzbw
or
xadd
mov
setle
shl
mov
cmp
stc
bt
clc
add
pushf
call
pop
lea
bswap
lea
call
pushf
popl
jmp
clc
bt
mov
cmc
call
push
pushf
popl
jmp
jmp
test
push
rol
push
bsf
mov
adc
rcl
btc
push
inc
push
push
ror
mov
shr
mov
rol
shrd
call
mov
movb
pushf
pusha
push
lea
jmp
mov
call
bt
shr
push
sbb
rcl
btr
pushl
inc
jmp
bt
not
movb
jmp
shl
pusha
mov
jmp
aam
setne
mov
call
pushf
call
pusha
pushf
mov
call
not
mov
or
sub
not
and
mov
adc
mov
shl
add
shr
mov
setnp
rol
inc
xor
movsbw
sub
movzbw
pusha
lea
pushf
neg
bts
rol
xor
btr
bsr
xor
call
mov
movb
pushf
call
mov
jmp
or
pop
mov
bsf
sub
bt
cmp
lea
adc
bswap
seta
btc
btr
bts
not
rcr
shl
or
cmp
lea
shr
sub
test
sub
mov
xchg
seta
xor
jmp
mov
pushf
mov
push
pushf
mov
lea
jmp
add
cmp
cmc
cwtl
test
sub
cmc
add
jmp
xor
bts
bts
movzbl
pop
clc
pop
bts
mov
bt
rol
test
cmp
pusha
add
call
pusha
mov
movb
push
lea
jmp
push
call
cmc
not
test
push
call
dec
call
lea
pusha
movw
lea
jmp
mov
pushf
lea
jmp
xor
bts
lea
rol
pusha
sub
bswap
mov
pushf
pushl
lea
jmp
lea
cpuid
cmc
push
test
sub
pushl
mov
pushl
jmp
pushf
pushf
mov
call
movb
mov
call
pusha
mov
push
lea
jmp
mov
lahf
movsbw
mov
mov
call
stc
movzbl
stc
jmp
or
or
pushf
aad
mov
shr
cmc
mov
pusha
stc
add
pusha
call
jmp
mov
pusha
pushl
pushl
pushf
lea
jmp
jmp
dec
add
pushf
pushf
setne
mov
pushf
mov
movb
pushf
lea
jmp
pushl
mov
mov
pushf
pushf
mov
lea
jmp
loopne
lcall
or
adc
negb
adc
dec
cltd
adc
add
shlb
adc
dec
cltd
adc
pop
xchg
adc
in
xchg
adc
dec
cltd
adc
xchg
adc
aaa
cltd
adc
mov
cltd
adc
mov
lcall
enter
add
adc
dec
cltd
adc
cwtl
adc
lods
lcall
insl
xchg
adc
or
adc
dec
cltd
adc
scas
xchg
adc
out
lcall
dec
cltd
adc
or
adc
dec
cltd
adc
lcall
mov
cltd
adc
add
adc
dec
cltd
adc
lcall
and
adc
push
cltd
adc
hlt
fwait
adc
dec
cltd
adc
negb
adc
dec
cltd
adc
or
adc
xor
cwtl
adc
stos
cltd
adc
xor
xchg
adc
xchg
adc
lcall
add
adc
out
cltd
adc
rcrb
adc
rcll
adc
ss
adc
outsl
xchg
adc
cltd
adc
lcall
ss
jl
adc
scas
xchg
adc
negb
adc
imul
mov
ss
adc
xchg
xchg
adc
sahf
xchg
adc
mov
cwtl
adc
out
cltd
adc
add
adc
lcall
adc
out
cltd
adc
bound
adc
lcall
bound
adc
stos
cltd
adc
stos
cltd
adc
cltd
adc
je
adc
bound
adc
lcall
enter
or
adc
cltd
adc
xor
lcall
xchg
adc
hlt
fwait
adc
cltd
adc
stos
lcall
pop
cltd
adc
cltd
adc
add
adc
cltd
adc
xchg
adc
pop
cltd
adc
rcrl
loopne
cwtl
adc
cltd
adc
stos
cltd
adc
cwtl
adc
es
adc
cltd
adc
mov
lcall
xchg
xchg
adc
lcall
pop
cltd
adc
fwait
xchg
adc
hlt
fwait
adc
lcall
mov
cwtl
adc
lcall
clc
xchg
adc
stos
cltd
adc
fwait
xchg
adc
cltd
adc
fwait
xchg
adc
lcall
pop
cltd
adc
clc
xchg
adc
xchg
adc
xchg
xchg
adc
cltd
adc
lods
lcall
pop
cltd
adc
rcll
adc
cwtl
adc
aaa
cltd
adc
xchg
adc
outsl
xchg
adc
mov
cwtl
adc
es
adc
lcall
or
adc
fwait
xchg
adc
lcall
or
adc
out
cltd
adc
es
adc
cltd
adc
cwtl
adc
cltd
adc
add
adc
aaa
cltd
adc
cltd
adc
xchg
adc
es
adc
in
xchg
adc
xchg
adc
lcall
lcall
adc
cwtl
adc
or
adc
xchg
xchg
adc
stos
cltd
adc
lcall
xchg
xchg
adc
push
xchg
adc
jl
adc
xor
xchg
adc
xor
pushf
adc
out
cltd
adc
xchg
xchg
adc
hlt
fwait
adc
xchg
adc
add
adc
es
adc
sahf
xchg
adc
out
lcall
mov
xor
or
call
pushl
popl
movb
pushl
push
push
lea
jmp
cmc
stc
cmp
add
mov
neg
mov
inc
stc
push
add
pushf
pushf
pushf
add
stc
jmp
call
call
push
movzbw
pushf
bsf
push
lea
bt
push
rcl
clc
push
mov
jmp
call
pushl
popl
cmp
lea
adc
xadd
push
movsbw
xor
mov
cmc
xadd
sub
lea
xadd
bswap
bts
shld
shl
not
jmp
jmp
call
bswap
not
pushf
dec
shl
push
or
bt
movzbl
push
sar
pushf
bsf
mov
shr
inc
push
stc
pushf
sar
mov
sar
test
rol
not
push
cmc
neg
clc
add
push
stc
pushl
adc
or
xor
push
mov
sbb
sar
mov
rcr
sar
shrd
movzbl
sub
cmp
btr
bswap
push
not
btr
lea
bt
cmp
lea
ror
btr
adc
sub
pushf
lea
pushf
push
push
movw
lea
jmp
xchg
push
lea
movsbl
pushf
popl
btc
sub
bsr
add
mov
or
cmc
shld
xchg
rcr
mov
rcl
mov
stc
mov
sbb
mov
xor
mov
pop
mov
lea
bt
xadd
pushl
popl
rcl
rcr
add
movl
xchg
lea
mov
bt
btr
xchg
pusha
sub
shld
test
bswap
dec
test
ror
not
pop
btc
shld
lea
adc
sub
bswap
lea
mov
lea
mov
pushf
pusha
lea
jmp
pushf
jmp
lea
jno
pushf
pushf
popl
jmp
jbe
mov
push
test
call
mov
push
pushl
lea
jmp
mov
push
jmp
ror
not
movsbw
and
lea
sub
bsr
bt
neg
sub
call
btc
mov
sete
jmp
bt
cmp
pushf
cmc
sub
pusha
pushf
add
call
