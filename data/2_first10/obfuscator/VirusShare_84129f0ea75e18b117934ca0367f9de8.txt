push
call
ret
ret
jl
inc
lods
scas
mov
mov
sub
pop
fldcw
jnp
scas
mov
or
aas
push
cs
push
xor
fs
ficomps
or
pop
dec
daa
mov
ja
ret
inc
insl
xchg
rorb
mov
mov
ret
push
test
mov
es
inc
sbb
mov
cmp
fstpl
pop
sbb
repz
jg
add
arpl
push
mov
scas
call
pushf
inc
sbb
xchg
ret
push
test
pop
push
sub
mov
lods
std
sbb
movsb
mov
and
movsb
xchg
in
into
insb
fadds
push
fdivl
in
lahf
or
out
cmpsl
mov
lret
pop
ljmp
jg
das
dec
fbld
mov
sti
popf
push
and
in
and
push
sbb
imul
and
mov
ljmp
mov
dec
lock
sbb
imul
xor
in
test
test
jnp
mov
mov
lret
mov
mov
cmc
and
xchg
test
push
xchg
jbe
jle
push
fildll
or
call
or
mov
xor
add
shrb
mov
movsl
imul
and
fs
xlat
or
pop
mov
push
test
add
adc
pop
push
fcompl
lcall
xor
ret
jl
das
dec
loop
mov
in
stc
mov
xchg
inc
fistl
fdivrs
in
add
cli
mov
shll
add
mov
pop
bound
push
scas
addb
mov
call
sbb
cmp
and
xchg
xchg
fistps
mull
lret
aaa
cmpsb
js
stos
leave
leave
fstl
jns
add
xchg
push
sti
and
clts
push
or
int3
cwtl
sub
inc
dec
test
fildll
xchg
xlat
inc
mov
dec
adc
push
test
test
jns
or
xchg
icebp
inc
pop
inc
clc
mov
mov
xor
dec
dec
dec
sbb
outsl
xor
cwtl
inc
jns
xlat
pop
out
jmp
out
cmp
in
test
cltd
fiadds
sbb
add
movsb
fsubr
cmc
cld
xor
cmp
sahf
cmp
dec
sub
sbb
mov
roll
in
inc
faddl
mov
sbb
lods
mov
jae
xchg
movd
idivb
es
sub
jmp
fwait
std
dec
cs
rclb
testl
out
rorl
inc
movsl
testb
icebp
mov
sbb
cmp
xchg
and
mov
outsb
and
mov
xchg
mov
sar
hlt
adc
rcll
mov
add
xchg
ret
rolb
scas
add
xorb
cmc
or
out
add
jno
xor
mov
sub
jp
sub
fs
xor
xchg
aas
cltd
movsb
movsl
loopne
sbbb
dec
cmc
jne
push
fucom
aaa
js
inc
out
or
cmpl
lods
fisttpll
std
adc
rolb
lret
jnp
jmp
aad
stc
pop
add
push
inc
sub
or
scas
sahf
pusha
mov
sbb
mov
shll
cltd
in
and
lods
mov
mov
sbb
es
pop
dec
sub
cmp
jmp
loope
push
faddp
int3
inc
aad
lods
xchg
fdivrs
nop
dec
data16
cld
rcll
jp
lods
in
jl
add
out
cmp
push
call
popa
cli
pop
mov
or
lea
lcall
pop
inc
popf
and
pusha
push
call
jae
loop
mov
jmp
cmp
scas
push
inc
pop
out
out
jb
inc
mov
in
out
outsl
call
pop
mov
jnp
xchg
pop
xchg
ret
lds
rcll
or
es
adc
outsb
jmp
and
mov
jmp
imul
or
sbb
sub
inc
data16
xchg
int3
dec
aas
xor
mov
into
jne
add
mov
out
jmp
add
fxch
ret
bound
je
add
pop
movsl
cmp
cmp
ljmp
jmp
push
sub
sti
inc
and
mov
bound
jge
jns
and
sub
fsubs
lds
dec
idivb
or
in
in
mov
and
testl
aaa
outsb
subl
lds
mov
ret
sub
mov
mulb
mov
push
cmpsb
push
test
arpl
dec
cld
xor
das
in
sbb
xchg
notl
aas
and
adc
fists
fwait
std
roll
fwait
in
int
push
pop
cmp
orl
push
dec
cltd
outsl
sub
mov
notl
sub
sti
adc
lcall
outsl
and
mov
shl
adc
adc
movsl
mov
push
lret
push
push
pop
dec
sub
mov
and
rcrb
mov
aaa
lods
jmp
adc
jle
pop
ljmp
cmp
or
sub
lahf
pop
jnp
sub
popf
pop
inc
ja
ja
ljmp
and
ss
inc
fcomps
mov
and
andl
adc
lcall
mov
mov
clc
jo
mov
pop
out
add
jb
sbb
pushf
mov
adc
add
je
scas
out
adc
ljmp
jnp
int
jns
outsb
jmp
dec
jge
addr16
pop
mov
xchg
add
int3
dec
je
add
adc
scas
push
mov
lcall
cli
aad
ret
mov
mov
xchg
push
mov
add
mov
mov
mov
test
inc
pop
xlat
stos
adc
sub
outsb
sbb
mov
mov
in
divl
ficompl
xchg
addr16
inc
pop
cmpsl
into
fnstcw
adc
cwtl
or
lret
inc
les
and
xchg
cmp
sbb
icebp
pop
add
and
add
sub
xor
jne
jb
mov
add
mov
das
and
pop
pop
mov
les
cwtl
andl
fsubl
or
pop
arpl
fisubs
adc
xchg
and
stc
daa
popf
jb
push
insl
negb
daa
xlat
push
mov
in
jne
hlt
add
in
arpl
loope
push
ja
add
shrl
cmp
testl
in
sub
outsl
jb
push
lea
cmp
pop
pop
dec
dec
inc
add
sub
mov
popf
ds
les
test
push
leave
ret
inc
cltd
stc
sub
scas
lods
in
mov
dec
mov
mov
lret
fsub
pushf
xorl
jg
jge
nop
sbb
cltd
and
js
fistpl
aad
shrl
sbbb
popf
imul
add
mov
add
sub
sub
loopne
das
ljmp
xchg
in
cltd
mov
pop
mov
xor
mov
mov
ret
xor
jg
mull
xor
or
pop
cwtl
and
loopne
mov
mov
push
fbstp
inc
sub
adc
mov
mov
dec
mov
cmp
test
sub
int
aas
cwtl
sub
xor
clc
add
shrl
or
test
data16
test
sub
mov
jge
pop
lods
mov
mov
mov
icebp
lcall
jle
mov
call
mov
faddl
inc
sbb
lods
leave
jecxz
add
test
mov
stos
mov
sub
and
aam
mov
movq
xchg
test
mov
addr16
sub
or
bound
movsb
dec
mov
imul
imul
cld
in
cmp
mov
rcrl
mov
lods
mov
push
jns
jae
mov
in
cmp
push
mov
js
test
jns
xor
cmp
out
testb
dec
imul
cwtl
push
imul
inc
scas
dec
jmp
add
mov
cmpl
in
in
stos
iret
dec
push
xchg
mov
outsb
inc
leave
xchg
sar
jmp
adc
push
lds
push
jl
in
jo
or
adc
add
sbb
daa
pop
dec
shlb
cltd
push
and
scas
jmp
fstpl
mov
iret
divl
jp
das
inc
push
xlat
cmp
pop
mov
outsb
mov
icebp
js
jns
dec
mov
cld
lock
scas
adc
les
mov
cmp
or
scas
jo
dec
sub
cli
push
dec
xchg
dec
jmp
outsb
cmpsb
fldt
fcoml
in
popf
lret
negb
fcomp
repz
adc
inc
add
inc
and
dec
imul
mov
push
xchg
rcll
lds
inc
test
insl
cmp
or
mov
inc
lldt
bound
adc
mov
push
and
push
sbb
repz
or
cmp
lea
mov
insl
push
push
lods
lahf
int
test
jmp
arpl
ficompl
pop
push
shl
mov
mov
mov
leave
cs
push
cmpsb
pushf
cmp
and
jae
repz
sbb
inc
cltd
ds
daa
sahf
cmp
add
test
sti
adc
lcall
pushf
lods
add
mov
aas
push
in
dec
xchg
sbb
test
fwait
nop
adc
fs
int
fistpll
xor
push
cmp
and
or
cmp
cmp
mov
mov
mov
add
out
adc
enter
mov
cmp
jl
ror
fldcw
sti
bound
jl
dec
decl
shlb
mov
mov
xor
dec
test
jno
pop
and
add
insb
aad
mov
adc
and
cmp
mov
movl
push
pop
mov
in
into
push
hlt
add
pop
mov
sti
fsts
ja
push
dec
fistl
aam
pop
pop
mov
out
jp
dec
jge
outsl
push
imul
and
ljmp
sub
aaa
inc
insb
push
pop
or
dec
pusha
jbe
iret
in
aaa
or
push
imul
jl
sbb
or
cwtl
ret
fldt
mov
nop
pop
movsl
popf
mov
int3
mov
and
lea
scas
xorb
loope
add
and
inc
shrl
lods
fimull
cltd
imul
xchg
loopne
in
xchg
jecxz
adc
pop
je
add
mov
test
call
cmp
xlat
sbb
mov
xchg
or
or
pop
aam
in
test
mov
mov
and
ret
xlat
repnz
push
sarb
outsb
push
sbb
lret
cltd
lahf
dec
xlat
sub
insl
ja
mov
and
jp
repnz
push
scas
test
pop
rcrl
mov
or
test
std
sbb
jle
sub
pop
or
mov
mov
and
daa
in
shll
sti
or
jp
icebp
sub
dec
or
mov
outsb
mov
test
pop
out
test
lea
popf
aam
xchg
repz
insb
jne
ret
dec
jno
mov
cmc
push
out
hlt
pop
ret
add
fnstenv
adc
add
cwtl
dec
in
sti
mov
sbb
es
push
dec
les
jo
add
adc
dec
xchg
imul
and
adc
aam
xor
push
sbbl
rcll
les
outsb
outsl
xlat
aas
jge
mov
or
into
xchg
loope
push
stos
stos
xor
sti
or
jb
test
adc
je
push
in
pusha
sub
lods
adcb
dec
sbb
les
mov
test
mov
out
popa
xor
push
adc
sbb
outsb
jecxz
xchg
dec
add
xchg
pop
lret
movsl
add
mov
js
or
mov
cmp
jne
repnz
int
jge
or
fistpll
pusha
cmpsl
ret
mov
test
pop
xor
js
mov
mov
cli
xchg
std
add
repz
fbld
dec
out
es
rolb
add
fdivrs
sub
jb
inc
or
inc
or
xlat
sub
loopne
clc
adc
adc
or
inc
cwtl
jno
xor
ficomps
add
xchg
lea
testb
div
dec
xchg
xor
pop
int
fidivrs
inc
bound
je
sub
aas
pop
sahf
jb
push
lret
xor
push
push
fidivs
xor
pop
inc
push
mov
adc
push
imull
imul
add
rcrb
jge
call
gs
daa
imul
out
rcr
and
lds
repz
push
xchg
sub
rcl
ffreep
outsb
insl
orb
or
mov
subb
lds
sti
ds
jmp
andb
fisubrs
jle
pop
dec
jl
xor
dec
inc
jg
fdivs
movsb
cwtl
mov
xchg
cli
sub
push
cmp
adc
das
int3
mov
cmp
push
cs
in
or
xlat
aad
orb
pop
pop
xchg
test
jg
cmp
scas
jl
or
rcl
push
aas
pop
inc
into
fwait
jl
cmp
cltd
add
shrb
mov
mov
int3
pop
adc
push
test
mov
inc
xchg
pusha
pop
mov
mov
adc
adc
and
lods
outsb
pop
pop
sub
xchg
sahf
rolb
push
test
or
daa
sub
dec
into
orb
sbb
mov
mov
clc
stc
sets
cmp
add
sub
mov
fistl
push
jns
and
pop
push
xor
pop
add
sub
xchg
aam
mov
cmp
popl
xchg
aas
fwait
aad
xchg
pushf
lret
jo
jecxz
ja
inc
pop
jnp
push
ficoms
fs
add
les
or
rcr
inc
aam
ds
inc
mov
jecxz
cwtl
popa
push
xor
nop
dec
loopne
in
femms
clc
jp
dec
insb
push
sbb
leave
subl
mov
or
lods
aam
adc
inc
inc
les
xor
xor
xlat
test
push
lret
movsb
mov
sbb
sub
jg
js
popa
jns
outsb
sbb
mov
jmp
dec
pop
test
xchg
push
dec
pop
icebp
adc
scas
out
test
sub
hlt
lahf
pop
dec
loopne
push
sub
add
rcl
inc
or
dec
pop
sbb
pop
out
in
sub
sbb
and
ret
pop
xor
inc
xchg
and
data16
aas
clc
or
mov
inc
aaa
movsl
xorb
adcl
sbb
scas
xchg
adc
test
sahf
mov
xchg
inc
shll
fdivp
ja
xlat
loop
sub
rcrl
ret
insb
mov
sub
rcr
iret
repz
sbb
cmp
mov
incl
outsl
pusha
insl
adc
xor
cmpsl
mov
adc
jg
test
jmp
inc
add
mov
popl
scas
push
sbbb
xchg
loop
adc
push
push
stos
push
notb
jnp
fadd
jl
push
xchg
pop
mov
hlt
push
pop
jmp
flds
sbb
pop
push
xor
inc
lret
bound
lods
cmp
aaa
bound
aam
mov
lock
daa
pusha
ret
jle
mov
jg
js
push
bnd
scas
jns
cmpsb
les
sbb
fidivrl
dec
lods
fmull
cmp
pop
push
xchg
in
pop
sbb
jecxz
iret
pop
sub
fsubr
cwtl
cmpsb
inc
aad
jne
dec
pusha
add
xor
mov
and
dec
xor
imul
add
sti
scas
jmp
and
push
imul
push
inc
pusha
aad
jmp
dec
jge
jle
js
ds
xchg
mov
imul
mov
das
sub
add
mov
dec
mov
cs
jl
sbb
add
loop
sub
ljmp
sbb
js
rsm
test
fldcw
jge
xor
test
xor
movsl
pop
fmuls
jbe
jp
fbstp
mov
cmpsb
inc
xchg
out
pop
out
repnz
xchg
mov
inc
mov
mov
ds
lock
js
and
cmp
and
jg
push
xchg
mov
movsb
dec
xchg
pop
pushf
pop
mov
idivb
popf
add
fbld
rcrl
push
lods
fs
into
pop
xor
jg
mov
jae
cmp
push
add
xchg
jmp
push
add
insb
pop
cmp
add
xchg
xor
sahf
xchg
push
and
insb
lea
add
sub
ljmp
mov
add
pop
leave
and
movsb
inc
lcall
or
addr16
aam
dec
add
xchg
cmpsl
or
js
dec
cmpsb
bound
faddp
arpl
jbe
add
jecxz
jns
mov
jno
call
xchg
xor
out
push
aaa
call
daa
xchg
pop
cltd
out
jae
scas
or
jne
xchg
adc
rclb
rcll
aaa
aas
gs
data16
cmp
pop
or
imul
sbb
clc
mov
pop
ret
sahf
mov
enter
ret
dec
inc
iret
notl
push
add
mov
xor
adc
andl
and
mov
cltd
dec
inc
or
mov
int3
adc
mov
insb
jae
ja
mov
test
ljmp
icebp
inc
idivb
mov
nop
imul
xchg
inc
xor
or
push
pop
push
in
and
nop
divb
fstpl
xchg
sti
pop
sub
je
enter
jb
daa
out
pop
les
add
dec
push
mov
mov
inc
jo
dec
mov
sub
icebp
pusha
pop
test
mov
js
cmc
in
sbb
loope
outsl
xchg
mov
movsl
mov
or
push
iret
shl
push
jle
scas
push
push
push
fs
lods
aam
inc
push
pop
aam
ret
cmc
test
adcl
mov
xlat
dec
jmp
test
push
adc
outsb
decl
movsl
bnd
adc
iret
cs
and
pop
or
sti
adc
lods
cmp
test
sbb
adc
in
in
dec
divb
or
push
xchg
push
adc
cltd
xorb
jb
cwtl
cmp
inc
jle
loop
pop
rorw
hlt
out
jns
sbb
test
dec
adc
sarb
pop
sbb
stc
mov
add
cmp
leave
imulb
aas
pop
add
divb
out
mov
mov
stos
jecxz
mov
in
cld
cmp
les
lcall
jns
jbe
mov
xlat
repnz
sub
cwtl
xchg
ret
orl
mov
cld
mov
push
out
sub
faddl
out
push
shr
out
and
sub
arpl
dec
int3
mov
adcb
loopne
rcr
lret
mov
jp
mov
xor
aam
jg
lret
or
mov
jnp
inc
loope
push
ja
rcrb
cmp
nop
sbb
adc
lret
pop
loopne
movsb
jmp
dec
leave
adc
clc
jmp
pop
insl
and
or
push
jo
push
lock
inc
negl
cltd
std
xchg
xchg
or
mov
inc
aas
sahf
jns
and
mov
lock
mov
ds
mov
sar
es
ret
pop
jp
in
aam
je
aaa
fsubs
fistpl
cmp
jb
cmp
pusha
pop
xor
pop
xchg
mov
scas
jb
push
addr16
and
mov
adc
filds
scas
rolb
insb
pop
jnp
sub
jmp
shll
ffree
shll
fisubrl
adc
jmp
fistpll
mov
jno
aaa
fldl
filds
jno
mov
xchg
stos
xor
stos
jmp
or
imulb
push
pop
out
pushf
arpl
jecxz
or
jle
dec
scas
pushf
mov
push
cld
sub
mov
lock
cmpsb
outsl
push
in
inc
inc
jae
cmpsb
sub
nop
jbe
aam
test
lods
out
or
mov
icebp
stos
hlt
ss
add
mov
add
gs
pop
bound
xchg
adc
lcall
roll
out
mov
cmpsl
cmp
cmc
pop
sbb
and
cli
filds
add
orl
jp
xor
in
or
push
lcall
repnz
test
xor
fnsave
sub
dec
mov
in
jge
adc
int3
mov
sbb
scas
clc
inc
rcrb
and
subb
pop
xchg
std
je
insb
mov
dec
ljmp
cmp
hlt
cld
push
and
andb
add
pop
lods
loopne
mov
mov
or
mov
frstor
mov
in
or
test
insl
lock
mov
cmpsl
jne
popa
int
in
incb
sahf
adc
adc
cli
mov
add
adc
shrb
xor
xor
fst
mov
aam
cltd
fiadds
sub
adc
push
jbe
cmp
fs
aad
cwtl
jae
test
add
xchg
int3
jae
push
pop
pop
adc
pushf
in
sub
xchg
addr16
clc
daa
and
lods
xchg
iret
push
cmp
dec
das
push
dec
mov
cld
lcall
push
inc
fistpll
sub
dec
dec
jns
cmp
enter
adc
clc
pop
sahf
shr
das
and
xchg
jne
sbb
mov
sbb
in
push
and
cmp
in
fimuls
mov
sub
pop
daa
pop
int3
mov
out
leave
mov
in
and
int
in
or
mov
fwait
xor
and
cmpb
xor
sti
xchg
mov
rolb
or
push
jne
jo
loopne
ret
fiadds
sbb
and
jo
nop
cmpsl
jl
mov
dec
dec
sbb
shll
jnp
adc
push
loope
fdivrs
sub
xchg
js
movsb
in
push
mov
aas
pop
fdivp
incl
fistpl
std
push
loopne
push
popf
test
pop
push
pop
std
insl
mov
jns
and
jae
cli
jno
icebp
shlb
xor
dec
ficomps
adc
and
push
stos
test
mov
inc
in
inc
cwtl
movsl
out
dec
pop
push
mov
push
push
sub
add
icebp
out
fcom
es
stos
pop
clc
xor
loopne
lea
push
outsb
and
pop
jne
js
sbb
xchg
je
sbb
int3
jns
sbb
adc
adc
xor
aas
push
ja
mov
adc
cmp
pop
fmull
pop
nop
ljmp
push
addr16
lea
adc
das
and
mov
push
xor
fnstcw
dec
dec
push
arpl
jnp
xor
jno
xlat
cmovno
mov
ret
sbb
sub
push
and
lret
xchg
jbe
loopne
push
adc
outsl
lock
ficompl
cwtl
add
dec
cmp
sub
push
add
mov
xchg
mov
aas
adc
in
sbb
and
mov
or
pusha
lock
xorps
arpl
adc
psubw
add
cmp
mov
inc
in
mov
pusha
das
cs
sub
out
push
xor
pop
and
cltd
jle
notl
inc
lods
test
enter
lcall
lret
in
loopne
or
rclb
adc
inc
or
cli
xor
mov
testl
out
push
push
scas
or
mov
cmp
push
call
rcrl
jl
xchg
push
cld
fdiv
outsl
sahf
movsl
or
adc
stc
shrl
test
lcall
test
repnz
arpl
arpl
mov
push
xchg
rclb
fdivrl
test
add
movsb
xor
pushf
in
jne
push
adc
xor
mov
hlt
jp
repz
bound
arpl
xor
jmp
sbb
xor
pop
dec
mov
fdivs
mov
jp
inc
nopl
sub
enter
into
pusha
icebp
mov
mov
fists
push
mov
stos
mov
adc
inc
or
jg
sbb
sti
sbb
in
and
out
cli
sar
mov
fstpt
mov
mov
pop
cmpsb
lock
dec
adc
and
mov
xchg
lcall
adc
mov
jmp
in
adc
cmp
mov
mov
outsl
in
xor
mov
push
cmpsl
gs
jle
jle
aaa
jbe
jne
pop
cs
adc
cmp
imull
sahf
cmp
dec
mov
ljmp
pusha
xlat
mov
hlt
mov
or
lret
jmp
cltd
ror
inc
dec
sti
enter
mov
jb
mov
adc
push
pop
sub
lret
mov
cmp
sahf
xor
inc
mov
cmp
cmp
dec
sub
fcmovb
ljmp
shll
lock
and
pop
mov
pop
add
lods
rcrl
insb
mov
inc
dec
cmpsl
inc
inc
mov
mov
sub
aaa
daa
add
dec
push
xchg
push
inc
adc
sti
lods
sbb
shrb
inc
test
sub
xchg
xor
mov
jl
pop
mov
stos
rcl
sub
mov
jo
ret
and
ss
fwait
cli
xchg
pop
sbb
hlt
jmp
loop
fmull
popa
jge
mov
pop
sbb
jmp
pop
mov
xchg
or
inc
lcall
in
fs
push
fs
adc
push
pop
jge
movsb
or
fcmovnu
jb
test
sti
rcrb
lods
mov
push
and
xor
ds
loop
xchg
sahf
dec
jb
fld
jl
sub
loopne
sarb
sbb
inc
mov
dec
ret
fucom
testb
and
ja
fsts
pushf
jmp
and
pop
cltd
push
addr16
movsl
inc
in
cli
sbb
addr16
loop
xchg
cmpb
fucomi
sub
mov
pop
pushf
fcmovb
xchg
mov
repz
loopne
jp
lea
sti
push
scas
clc
mov
shlb
negb
div
mull
pop
mov
ret
into
ficomps
adc
inc
insb
jae
int
lret
js
inc
adc
xchg
dec
mov
mov
cmp
mov
or
cmc
mov
cmp
arpl
rcrb
movsb
into
add
sub
mov
inc
mov
sub
dec
in
jmp
movsl
dec
int3
imul
inc
xchg
adc
sub
push
push
jbe
jb
es
jae
mov
cmpsb
test
outsb
pop
mov
mov
mov
and
call
push
clc
mov
ss
push
pop
dec
jg
ret
int
nop
aaa
mov
add
int
push
xor
int
pushl
mov
stos
sub
leave
fnsave
xor
test
xor
inc
in
pop
sub
aas
and
xchg
cmp
dec
arpl
and
imul
mov
mov
sbb
and
call
mov
cmpsw
test
pop
sti
aas
shl
idivl
jecxz
out
xchg
lea
frstor
add
aad
ja
ret
pop
add
mov
inc
push
mov
sbb
sarl
xor
pop
jo
scas
aam
test
cmpsl
sub
push
dec
lds
ss
sbb
fisubs
push
cltd
andb
adc
mov
add
hlt
stos
push
icebp
dec
test
out
push
mov
lret
rcl
sbb
xor
and
insl
scas
cmp
loopne
adc
mov
hlt
mov
mov
in
mov
add
fists
pop
out
dec
into
push
cmpsl
mov
mov
sbb
jnp
push
inc
mov
daa
cmp
xor
xchg
inc
fucomip
sub
pop
inc
lea
mov
cmc
mov
xor
in
sbb
cmp
xchg
aad
mov
je
fs
arpl
sub
ret
adc
add
pop
les
dec
add
or
xchg
sub
ret
jns
sub
push
int
iret
adc
inc
adc
repnz
and
cmp
cmc
pop
inc
sub
fstpt
fcmovnu
mov
fisttpll
sub
xor
pop
ljmp
inc
adc
cmc
mov
repz
or
or
add
fwait
sahf
mov
stos
cmp
xor
div
rcrb
lahf
mov
push
add
dec
icebp
inc
pop
clc
icebp
xchg
adc
aas
ss
mov
xor
sti
iret
pop
fndisi(8087
inc
mov
stos
mov
das
add
nop
fdivrl
sub
sub
push
ja
dec
cmp
dec
jecxz
xchg
mov
iret
add
in
mov
insl
in
stc
int
dec
lea
mov
dec
adc
pop
fistpll
push
inc
mov
repnz
inc
rcl
lock
outsl
or
inc
scas
sbb
xor
jae
cmp
cmp
test
mov
outsb
and
mov
aas
sti
jmp
mov
imul
in
cmp
jmp
sti
cmpsb
and
int
jle
imul
xorl
add
call
into
sub
adc
push
xlat
adc
or
mov
pop
sti
mov
pop
movsl
shlb
addl
insl
popf
or
aas
sbb
fadds
sub
enter
cwtl
cwtl
push
xchg
add
mov
xor
nop
jnp
ret
loope
and
call
test
mov
ret
lret
arpl
hlt
jnp
inc
adc
or
push
xchg
inc
add
adc
or
mov
stos
add
ficoms
push
push
xchg
adc
stos
inc
xor
pop
mov
movsl
subl
stos
out
sti
jle
mov
fidivs
mov
cmp
cwtl
xor
mov
in
addr16
nop
jl
hlt
cmpsb
and
dec
xchg
out
repnz
jp
add
fmuls
mov
dec
stc
sub
ljmp
xor
cltd
or
xlat
sub
push
xor
xor
out
mov
push
bound
loop
sbb
cltd
mov
aad
mov
add
lock
mov
mov
jp
aas
aas
testl
ficoms
and
test
clc
sub
fsubrs
xchg
lret
inc
in
ret
jl
das
dec
or
or
jmp
and
add
loop
jp
sub
fistpl
push
xor
test
mov
pop
mov
aad
repz
jge
push
iret
mov
and
adc
jge
and
sar
xor
cmp
lcall
cltd
xorb
cs
jecxz
pop
mov
jno
mov
jg
clc
inc
cmp
aam
dec
push
add
clc
push
add
mov
jnp
adc
dec
int3
stos
fadd
aas
movsl
test
sahf
fbstp
mov
push
mov
rclb
xchg
pop
test
sub
mov
cvtps2pd
sub
or
mov
out
mov
aam
mov
mov
mov
sbb
test
movsb
lods
sub
addl
or
loop
sbb
xchg
fnstenv
jp
mov
fisubrs
pop
negb
jno
addr16
push
mov
pop
sbb
das
rorb
sub
xor
mov
lret
in
xchg
outsl
jle
in
inc
xchg
sbb
stc
outsl
icebp
push
pop
es
insb
sbb
push
test
pop
jecxz
aaa
pop
lahf
xchg
test
ret
dec
jbe
mov
mov
lcall
mov
jecxz
mov
shlb
mov
test
bound
xchg
test
cli
xchg
inc
lea
jle
mov
js
mov
cmpsb
adc
loope
outsb
push
shrb
mov
aaa
sarb
ret
lret
jo
sbb
pop
add
fcmovne
jb
add
sbb
mov
adc
xchg
lods
push
hlt
xchg
adc
sbb
jno
into
hlt
out
lret
movsb
pop
lret
pop
push
xchg
ds
and
gs
incb
lods
js
int
data16
cmp
lret
stos
rcrl
nop
idivb
or
inc
enter
scas
subb
mov
sbb
xchg
and
out
xchg
xor
mov
je
test
jbe
xor
repnz
daa
cs
loope
jp
loope
cld
dec
sti
inc
in
ds
mov
movsb
out
lahf
loope
mov
insl
out
out
dec
je
std
rcll
outsl
and
jge
mov
xor
mov
test
sarb
pop
mov
sbb
std
inc
dec
mov
jmp
fs
movl
fwait
pusha
mov
imul
cltd
je
inc
stc
jnp
test
les
jns
xor
fldt
pop
pop
in
cmp
and
es
decb
pop
dec
mov
lahf
mov
push
dec
js
cmc
mov
fwait
xchg
mull
inc
pop
sbb
andl
out
js
add
movsb
adc
mov
xor
inc
add
test
add
mov
push
cltd
fisttpll
push
dec
rclb
mov
jno
imul
das
lret
fsubs
and
out
lcall
jbe
jmp
fidivl
push
aaa
cli
iret
push
jae
jle
int
loope
in
cmp
in
fadd
stc
es
cltd
jmp
cs
cmpsb
or
adc
enter
jecxz
push
aad
add
sahf
scas
gs
jnp
push
adc
int3
lock
sbb
in
sbb
aam
mov
xor
add
xlat
xchg
xor
xchg
xor
mov
push
sbb
iret
out
flds
out
xor
xlat
pop
push
rorl
xchg
xorb
sbb
cmpsb
scas
and
mov
mull
xchg
fwait
or
xchg
xchg
ret
push
fwait
inc
inc
add
clc
jmp
ja
in
aam
mov
popf
int3
cmp
fisubrl
insl
lods
jmp
pop
popf
xchg
stos
les
mov
loopne
mov
enter
icebp
and
pop
mov
aam
pusha
popf
cltd
xor
ret
add
clc
popf
xlat
xor
pop
mov
or
bound
out
jge
or
test
ss
inc
xchg
frstor
mov
movsl
loop
add
movsl
imul
mov
mov
cs
incl
cmp
ljmp
jmp
popa
pop
or
xchg
cltd
es
mov
xchg
or
cmp
adc
nop
je
jns
pop
add
les
mov
fs
test
sbb
not
dec
and
shrb
cmp
adc
cmp
sub
jmp
pop
cmp
pushw
in
addb
imul
adc
arpl
or
fidivs
ret
or
xorl
inc
inc
sub
or
mov
stos
mov
xor
xchg
hlt
inc
cmp
push
filds
pop
test
jl
fcoml
insl
mov
jp
les
pop
cmp
fld
out
movsb
dec
out
leavew
xor
xchg
pusha
mov
mov
lret
ss
ret
inc
aas
xchg
cs
addb
pop
or
cmp
ds
pop
sti
xorb
out
lods
pop
orb
stos
xor
movsl
mov
add
adc
jnp
sbbb
jmp
sub
xlat
mov
inc
sbbb
popa
and
mov
jae
cmp
xor
push
inc
mov
sub
cwtl
jno
mov
pop
cmp
mov
adc
xchg
push
subb
test
scas
test
dec
scas
adc
adc
and
scas
test
mov
mov
es
clc
sahf
enter
xchg
push
lock
lods
mov
mov
push
out
pop
jg
xchg
out
psubw
daa
out
xchg
pop
pop
jne,pt
jp,pn
out
inc
movsl
pop
pop
add
test
arpl
sub
sbb
ficoms
icebp
rorb
inc
mov
cs
les
pop
push
dec
fs
shlb
daa
jmp
es
inc
jmp
cmp
iret
sbb
aam
sbb
push
popf
aas
cmp
dec
addr16
mov
adc
xor
jne
lea
enter
scas
movsb
jge
push
repnz
dec
or
xor
ja
test
xor
dec
addb
xchg
dec
fs
adc
cmc
dec
inc
cmpl
rorb
into
push
stos
cli
inc
loop
or
xchg
inc
sub
pop
arpl
push
and
mov
sti
bound
aas
xchg
mov
loope
push
mov
stos
loope
and
sub
xlat
int3
int3
mov
add
hlt
imul
rorl
push
inc
xchg
insl
jbe
jns
or
mov
sbb
repnz
aam
adc
jle
mov
icebp
in
sbb
sti
sub
js
rol
icebp
movsb
and
mov
loop
jl
push
push
xchg
mov
mov
movsl
insl
arpl
mov
cs
adc
jp
mov
sub
jecxz
push
add
out
pop
sbb
add
xchg
sub
mov
sbb
push
ljmp
testb
int3
pop
cmpsl
mov
pop
cmp
fildl
or
add
adc
shll
das
scas
test
pop
rcr
int
add
ror
fmuls
popa
inc
push
nop
adc
mov
test
lcall
cmp
hlt
pop
stos
addr16
and
fisubs
test
jb
bnd
adc
imul
jae
inc
rol
cld
inc
mov
adc
push
int
shr
mov
rcrb
aad
mov
jo,pn
add
mov
andb
lret
xchg
enter
or
ret
inc
aad
inc
mov
lods
cld
outsl
or
push
vpmacsdql
hlt
sub
add
xchg
ret
fnsave
sarb
xor
sbb
mov
mov
test
lds
xchg
jg
stos
shl
idivb
sub
mov
inc
dec
lock
rcrl
aaa
xchg
sub
call
in
mov
add
std
and
out
mov
cmp
and
leave
pop
pop
fbld
and
out
mov
mov
jne
nop
ss
sbbl
cs
imul
sahf
adc
mov
mov
daa
insl
adc
cs
adc
mov
repnz
je
push
xchg
out
mov
adc
push
fisubrs
imul
add
rolb
mov
xchg
xchg
rcll
mov
mov
or
mov
push
lds
push
pop
push
xlat
stos
cmp
jmp
mov
mov
lods
scas
jle
xor
add
mov
in
shrb
xchg
xchg
adc
int3
scas
mov
pop
aaa
arpl
sahf
popf
pop
adc
and
dec
dec
sbb
push
ret
out
test
jo
push
push
mov
out
or
jge
inc
lea
gs
mov
mov
mov
decl
lret
pop
inc
lds
pop
mov
cmp
mov
xor
pop
cs
and
add
mov
and
mov
shlb
push
popf
or
out
sti
fsubs
test
xlat
jecxz
inc
add
ret
jae
jne
imul
pop
pushf
or
punpckhdq
xor
cltd
or
adc
push
lret
mov
xor
leave
add
push
icebp
pop
push
and
dec
sbb
jae
push
mov
mov
sub
aas
mov
adc
mov
xor
cltd
loope
pop
cmp
xchg
add
imul
imul
jp
lcall
out
popa
xor
cwtl
aad
sbb
fists
mov
adc
sub
inc
sub
insb
push
inc
sbb
jecxz
int3
xchg
or
cmp
mov
neg
movsb
pop
rcrb
xchg
or
ds
subl
test
and
xor
into
jbe
and
xorl
repz
pop
push
xchg
frstor
jnp
dec
cmp
and
cmp
jmp
call
mov
fs
popf
xchg
fwait
or
push
ret
out
out
popa
sbb
loop
pop
adcl
mov
fisubrs
add
inc
mov
ret
pop
mov
dec
xor
out
cmp
pop
scas
aaa
push
dec
shl
imul
mov
push
dec
sbb
pop
loope
lods
shlb
cwtl
jecxz
inc
stos
add
aas
cs
test
cli
sarl
rol
orb
or
aaa
pop
sbb
cmp
or
aas
dec
dec
push
test
arpl
mov
xorl
insb
xchg
cltd
shr
data16
sbb
jmp
loopne
xor
cmp
and
jge
jg
imull
stos
and
mov
bound
cmp
or
ds
sbb
jp
notl
cmpsb
ret
jle
shll
and
inc
fld
stos
add
xchg
mov
les
cs
into
sbb
xchg
loope
add
pop
dec
mov
inc
in
frstor
mov
sbb
cltd
xchg
and
into
insb
inc
in
popa
push
in
xchg
mov
pop
sub
pop
and
sub
pop
addb
out
jno
fbstp
pusha
and
scas
mov
sbb
lahf
dec
add
xchg
lcall
fnsave
movsl
mov
inc
out
add
and
cs
inc
es
push
pusha
je
pop
lret
pop
repz
in
fistps
adc
add
ss
in
mov
cmp
bt
int
les
mov
aam
push
sbb
jle
mov
int
inc
test
cmp
or
fisubl
pop
fdivrs
push
and
fmull
xchg
clc
insl
loop
mov
into
mov
inc
xor
pop
imul
daa
jbe
sbb
repz
mov
mov
xlat
add
jle
push
and
bnd
xchg
pop
mov
cmc
mov
cmpsb
out
loopne
iret
andb
in
push
and
lock
dec
mov
mov
in
adc
sahf
mov
sbb
or
fistl
fsts
cmp
pop
jbe
outsb
xor
jne
adc
xor
cmp
js
fidivl
orb
lea
cmp
jg
cwtl
push
sub
bnd
push
jmp
fs
jg
outsb
repnz
jecxz
inc
jbe
inc
int3
icebp
outsb
push
adc
sbb
shll
and
mov
lods
hlt
pop
leave
scas
push
mov
outsl
xchg
xchg
ret
call
inc
aam
adc
loope
into
imul
into
fisubs
xor
adc
call
mov
cmovle
lahf
insl
icebp
sbb
ret
sub
pusha
insl
xorb
test
inc
add
push
adc
push
bound
mov
in
cld
out
or
mov
lods
add
inc
push
xchg
dec
filds
xchg
sti
mov
cli
movsb
jne
pop
and
add
js
into
movsl
xor
test
xchg
push
xchg
pushf
mov
inc
xchg
jmp
jbe
pop
test
xor
push
pop
rcl
cmp
sub
ret
jb,pt
fldt
fdivs
push
add
in
cs
gs
das
and
push
popa
clc
sbb
cli
sub
inc
aas
test
sub
adcb
cmp
sbb
mov
testb
dec
adc
ljmp
enter
or
popa
btc
lods
jp
cmp
cmc
insl
loopne
imul
xor
daa
in
lret
std
and
nop
mov
adc
ret
je
fcomps
jne
mov
nop
push
int
xchg
mov
jns
ficoml
fisttpll
lods
pop
pop
and
add
and
int3
int3
dec
popl
sub
sub
or
lahf
popa
cmpb
mov
inc
or
xchg
xor
mov
lahf
inc
fs
jmp
xchg
mov
sbb
das
add
push
stc
loopne
clc
jns
mov
xlat
sahf
adcb
aad
cmc
mov
add
rep
cmc
or
push
enter
add
or
mov
jmp
pop
cmp
in
pushf
sbb
or
xor
pop
adc
fsubs
test
dec
das
arpl
jno
pop
pop
push
stc
jmp
insl
pop
add
sti
or
jae
jae
xlat
aam
ljmp
movsb
outsb
lret
cmp
gs
jmp
xor
sahf
cmp
xchg
push
scas
cmp
scas
fmulp
push
movsb
lahf
push
rcll
inc
mov
sbb
xor
xchg
popa
in
jle
cld
in
jo
lea
fbld
mov
lods
loopne
and
push
inc
cmpsb
or
js
xlat
ror
mov
push
data16
fsub
dec
scas
pop
stos
add
fiadds
fldenv
dec
xor
cmpsb
add
xorl
shll
push
mov
in
ss
lret
adc
push
inc
sub
dec
stos
jno
pop
mov
push
cmp
out
aas
nop
pop
mov
lret
retw
cmp
lahf
cmpsl
mov
mov
add
arpl
mov
push
ficoml
and
call
pop
lock
dec
int3
or
xorl
push
or
dec
mov
xchg
std
imul
lods
sbb
cmpsb
sbb
movsl
mov
xorb
sarl
mov
pop
or
movsb
daa
ret
adcb
test
sub
jb
movsb
jmp
mov
sbb
fstpt
je
movsb
add
int
frstor
mov
jae
into
xchg
mov
or
cmp
ljmp
ljmp
cmpsb
fnsave
out
aaa
sub
sub
cmp
xchg
shrl
jecxz,pt
outsb
sub
mov
xchg
sub
in
inc
jmp
insl
inc
ss
mov
sbb
movsb
jbe
rcr
and
movsb
inc
lea
in
xor
mov
push
push
cmpsb
xchg
jmp
mov
push
push
mov
jg
xlat
pop
pop
roll
cmpsb
fstl
sub
lods
jo
lahf
stos
jp
mov
inc
cmp
pop
push
filds
lahf
clc
pop
aad
mov
movsl
pop
xor
out
pop
repnz
rcr
xlat
cmp
pop
sub
das
insl
or
add
fdivr
or
and
loopne
dec
push
test
adc
sahf
pop
shlb
adcl
test
or
pop
nop
hlt
arpl
mov
sbb
stos
sub
cwtl
hlt
add
clc
push
lahf
jb
xchg
inc
fbstp
and
push
adc
mov
popf
inc
or
fwait
nop
std
lds
or
test
les
push
adc
jl
or
adcl
mov
mov
xchg
mov
or
mov
jb
daa
psrad
sbb
xchg
xor
ss
jg
scas
inc
fldl
rolb
and
or
ss
stc
cmpb
fwait
jae
mov
mov
fs
hlt
cvtps2pd
push
std
imul
das
fnsave
bound
mov
xchg
jmp
dec
dec
shll
loopne
or
adcb
popf
icebp
mov
les
push
mov
pop
mov
les
inc
mov
mov
mov
dec
sbb
pop
xchg
es
dec
sbb
ja
xor
out
out
repz
mov
stos
or
mov
mov
jae
in
cmp
inc
hlt
and
or
ret
sar
mov
xchg
fisubs
sub
sbb
lods
aad
cmp
ret
sub
mov
mov
jbe
mov
pop
sbb
dec
push
lods
push
andb
jb
fistps
and
cmpsb
sub
sahf
mull
sbb
dec
pop
xchg
jno
movsl
loopne
xchg
pop
je
pop
adc
mov
jmp
pop
adc
loopne
push
pop
pop
push
sub
adc
in
and
xorl
bound
imul
in
pop
fldt
jge
pop
andl
mov
stos
pop
and
inc
aam
sbb
popa
xchg
testl
dec
sti
mov
mov
icebp
xchg
mov
int3
xor
or
push
push
popa
push
arpl
adc
pop
stc
fwait
push
mull
sub
dec
dec
push
je
sub
roll
xor
xchg
and
nop
or
xor
out
mov
cmp
adc
movsb
xchg
add
lret
pop
pop
popa
mov
je
shr
in
jl
push
or
imul
bound
jbe
jp
or
mov
es
out
cmc
out
fldt
insl
mov
sub
xchg
jg
fwait
mov
insl
or
cs
xchg
and
push
jae
arpl
dec
popa
sbb
pop
xchg
fisubl
fisubrs
jge
test
push
push
leave
or
xchg
and
pushf
sub
gs
jge
xor
test
jp
pop
je
bound
sbb
mov
fwait
cmp
mov
adc
dec
push
push
sahf
pop
jl
cmp
sub
insb
aad
push
vpsubw
pop
std
popf
and
ds
mov
sub
les
mov
loopne
mov
sarb
mov
mov
int3
loopne
pop
push
scas
push
xor
mov
into
jle
sub
les
mov
sbb
sahf
xor
movsl
push
ljmp
mov
sub
jmp
movsl
inc
js
movl
jae
hlt
ret
xlat
out
iret
sbb
xorl
push
and
das
and
incl
adc
lds
insl
mov
hlt
dec
push
jo
rcrl
dec
dec
cmpsb
and
xorl
mov
rcrb
push
mov
call
outsb
std
cmc
sbb
inc
sub
movsl
mov
add
dec
xchg
mov
sti
icebp
out
hlt
fsubl
sbb
xchg
ret
inc
fdivr
jg
xchg
push
lret
lods
stos
jmp
std
mov
jo
jno
xor
movsl
pop
xor
inc
cmp
jae
sub
adc
stos
cmp
out
xlat
or
xchg
pusha
pop
addr16
cmpb
pusha
insl
sti
jmp
shll
lret
cs
repz
outsb
repnz
and
fmull
mov
in
xor
aaa
xchg
adc
fs
mov
outsb
push
out
mov
stc
add
xchg
call
mov
pushf
rorb
std
loopne
add
andl
das
pop
push
es
out
cmpb
jecxz
push
mov
mov
neg
hlt
pop
int
stos
loopne
lret
push
push
mov
jb
jl
push
rcl
xchg
or
fsubr
lea
imul
dec
and
inc
or
or
je
pop
in
jmp
mov
sbb
clc
pop
aam
dec
out
pushf
and
jge
push
into
xlat
or
pop
mov
xor
dec
in
lods
and
cmp
add
movsl
add
pop
aad
test
enter
ret
stos
inc
inc
lcall
out
leave
and
ds
shll
jl
push
sti
inc
das
rcrl
add
popa
loopne
in
cmp
daa
enter
cwtl
sbb
inc
insb
cmp
sub
sbb
fldln2
in
push
rorb
xor
subl
test
sbb
das
mov
mov
dec
and
cmp
fwait
icebp
loop
mov
sub
xchg
jge
imul
push
lret
sar
stos
adc
ficompl
mov
fwait
mov
enter
xchg
push
sub
mov
adc
mov
jg
xchg
inc
push
pop
push
pop
out
rol
and
stos
out
pop
int3
sub
mov
jmp
in
dec
cmp
jae
pop
or
js
mov
jle
lock
popf
mov
cwtl
outsl
shrl
test
jp
push
into
stos
xor
and
inc
pop
aam
jmp
pop
movsb
cmp
or
insl
jle
ret
lret
icebp
pop
adc
cmpsb
aaa
xchg
adc
mov
hlt
adc
dec
add
mov
and
xor
scas
push
xor
rcr
pop
dec
cltd
xchg
push
cld
mov
rcrl
mov
int3
insl
ja
daa
push
xor
xchg
outsb
lahf
cmp
cmpsb
xor
xor
pop
push
xchg
push
ljmp
cld
xor
fcoms
mov
test
outsb
cmp
inc
idivb
inc
cmp
daa
pusha
xor
add
xor
cld
repz
gs
adc
and
dec
pop
xor
dec
cmpl
lcall
mov
icebp
cmc
jecxz
jne
and
int
sub
dec
sub
jl
dec
sbb
imul
pop
cmp
testl
fisttps
repz
loope
cmp
out
ja
push
ljmp
xchg
jp
cmp
adc
stc
cmp
jne
stc
pop
and
ds
jns
mov
mov
iret
lcall
lods
loope
daa
pop
stos
leave
push
cmpsb
outsb
push
and
xchg
sbb
out
add
ret
push
aaa
js
and
and
pop
xchg
mov
std
cwtl
repnz
arpl
arpl
hlt
mov
cmp
repnz
imul
daa
adc
xchg
mov
mov
mov
mov
lret
les
imulb
jp
in
mov
push
jmp
cltd
mov
imul
or
aad
xor
inc
push
repz
mov
jb
jle
cwtl
mov
dec
and
dec
or
mov
inc
bound
btc
sahf
sbb
pusha
mov
jae
lahf
xchg
or
xor
xor
push
insb
push
insb
sarb
mov
add
mov
push
incl
aam
test
call
sub
sbb
ss
stc
sub
mov
add
or
aaa
std
pop
addr16
ljmp
scas
mov
test
pop
sbb
sbbb
ret
dec
mov
push
test
pop
jmp
aam
sbb
xchg
clc
cwtl
mov
mov
nop
mov
cmp
popf
idiv
cmp
fstps
add
jnp
push
push
pop
push
adc
cmp
pop
push
xchg
cmp
loopne
push
jns
fisttps
push
in
or
cltd
xchg
clc
out
inc
mov
and
push
sbb
ficompl
sarb
arpl
cmp
arpl
cmp
or
ficompl
insl
and
xchg
popf
dec
movsl
rclb
out
mov
pop
push
aas
adc
enter
call
icebp
cmp
pushf
outsb
fisttpl
sub
inc
push
pop
inc
loopne
jae
sub
lcall
and
sbb
xchg
inc
push
and
test
jp
sub
insl
imul
dec
push
mov
or
icebp
add
imul
js
icebp
sub
dec
test
dec
xchg
divl
jge
ret
pop
movsl
cmpsb
imul
test
ja
shlb
cld
mov
mov
ss
xor
push
mov
cmp
cwtl
xor
fidivrs
fistpll
push
stos
mov
in
insb
jl
nop
sbb
and
pushf
add
cmp
push
mov
xchg
inc
mov
mov
dec
js
movb
int3
jmp
cmp
dec
add
add
pop
je
adc
sub
xchg
pop
cmp
xchg
sub
je
push
fdivrp
xor
testl
lcall
add
addr16
sarl
xor
loop
dec
mov
or
mov
idiv
pop
test
stos
imul
lea
ljmp
inc
aas
aam
mov
mov
mov
or
icebp
test
jmp
rorb
sbb
pop
and
cli
out
adc
mov
pop
mov
ret
jl
pop
scas
inc
loop
fs
pop
cmpl
mov
or
sbb
xchg
pusha
js
cld
pop
roll
pop
orb
outsb
jecxz
insl
negl
inc
rorl
mov
jp
inc
popf
sub
nop
push
adc
dec
mov
push
xlat
adc
mov
test
cs
inc
leave
rolb
inc
push
inc
push
fisubl
out
dec
ss
imul
push
in
fs
cmp
jmp
cmp
cmp
sub
jnp
icebp
pop
jg
push
sbb
icebp
mov
xor
out
aam
sbb
mov
sub
cmp
mov
fwait
mov
cmpl
xchg
test
adc
jecxz
andb
xchg
or
or
push
fidivrl
add
xor
sbb
fsubrs
scas
xor
iret
imul
adc
xorb
lret
add
test
out
ljmp
imul
fnsave
test
loop
add
sub
pop
sbb
adc
xchg
lds
es
push
addb
call
pop
scas
pop
fists
xor
icebp
cmp
push
cwtl
push
jg
xor
mov
and
pop
popa
pop
stos
es
test
int
out
insl
sbb
inc
lods
pop
fcoml
add
fs
sbb
jmp
adc
jb
add
lret
mov
and
xchg
leave
sub
sub
roll
outsb
sbbb
add
clc
dec
push
test
inc
fiadds
pop
imul
iret
dec
cmp
xor
add
push
adc
sbb
je
stos
je
lock
stc
pop
test
mov
subb
std
cmc
dec
in
cmpsl
mov
pushf
pop
lods
sub
sub
pop
stos
in
mov
mov
pop
jecxz
mov
jg
dec
pop
jle
sahf
jmp
ljmp
add
push
in
movsl
add
push
mov
push
jmp
lea
out
adc
cmp
cli
sbb
and
adc
fucomp
push
rcrl
cmp
push
hlt
pop
xorl
dec
and
mov
les
insb
jmp
int3
daa
bnd
jb
xor
or
ret
mov
icebp
dec
lret
out
xchg
imul
repz
aas
cmp
jmp
stc
ja
pop
lods
fistpll
mov
test
push
lods
jg
xor
dec
mov
lds
dec
cli
loope
cli
sub
jne
jbe
or
int
lods
movsb
mov
dec
or
movsb
fisubl
ss
mov
sub
cmp
cmp
pop
pop
cmpsb
ret
out
les
push
ja
xchg
test
and
cld
addb
add
inc
push
cli
jl
test
and
ret
repnz
aaa
push
lahf
mov
stos
out
sub
sub
adc
dec
cld
daa
mov
pop
ds
push
cmp
in
or
adc
inc
pop
repnz
pop
sti
sub
das
pop
ja
stos
push
fnstcw
out
rolb
xchg
adc
fwait
dec
mov
fwait
jbe
cwtl
push
sbb
rcpps
and
sub
test
adc
ret
hlt
flds
mov
fists
les
cwtl
repnz
xor
add
fwait
or
and
lea
jmp
adc
fcoml
movsl
adc
in
sub
mov
pop
mov
or
fists
out
loop
adc
leave
or
ss
popf
or
or
sub
xchg
daa
cli
xor
dec
adcl
movsl
push
aad
mov
cltd
adc
adc
cmp
dec
ja
cmp
sub
shrd
add
push
cld
cwtl
lds
mov
fst
hlt
stos
bnd
pop
je
cmp
lret
dec
fiadds
sti
or
inc
mov
negl
sbb
arpl
xchg
sbb
fldenv
adc
fwait
sub
add
pop
movsb
sarl
push
and
je
xchg
push
mov
in
cli
test
daa
jnp
orl
xor
movsl
sub
fldt
dec
mov
ja
ja
lret
xchg
mov
mov
adc
mov
push
jno
and
out
xchg
cmp
in
mov
inc
mov
cwtl
aad
rclb
in
addr16
cs
lret
xor
jne
dec
pop
stos
shrb
cmp
adc
push
cmp
xchg
xchg
shlb
push
jb
jl
hlt
sbb
gs
inc
push
sahf
pushf
xchg
sahf
popa
arpl
stos
cmc
add
jg
push
cld
jg
fdiv
incb
xchg
sub
fs
push
sbb
or
out
out
hlt
dec
push
cmp
mov
xor
adc
scas
mov
aas
ss
cmpsb
mov
jae
mov
cwtl
in
bound
jecxz
mov
push
dec
int
arpl
adcb
popa
call
fiadds
cmc
sbb
or
aas
inc
jg
test
mov
addr16
out
aam
fiadds
xor
xchg
dec
cmpsb
xor
mov
mov
cwtl
mov
inc
sub
ja
lret
xchg
sti
push
rcrb
and
xchg
push
or
dec
out
sbb
pop
into
dec
rorb
or
inc
nop
ja
sbb
lea
inc
and
cmp
xor
cmpsb
push
and
push
push
xor
into
dec
fstpl
sbb
imul
jl
jp
pop
mov
sarb
jl
push
jno
adc
sub
or
add
and
dec
pusha
sbb
xchg
xor
iret
cmp
ret
ljmp
imul
cmp
xchg
push
cmp
mov
sbb
cs
imul
sbb
fimuls
jnp
leave
pop
mov
in
cwtl
out
dec
dec
push
repnz
sarb
lret
xor
pop
shll
in
mov
mov
add
mov
cmp
mov
or
push
sbb
mov
cmp
xor
mov
xchg
cmp
adc
mov
test
fidivs
push
loopne
mov
pop
test
in
mov
push
or
push
hlt
pusha
mov
loopne
in
sti
jmp
dec
iret
mov
hlt
add
in
ret
icebp
or
pop
cmp
ret
fsts
xchg
cmp
bound
lahf
loope
jecxz
cld
or
fimull
scas
shl
pop
ds
jge
jno
xor
cmp
int
dec
or
push
or
push
cmp
ja
mov
out
ja
scas
lcall
pop
flds
adc
push
xchg
mov
js
into
push
mov
cld
push
rcrl
out
out
and
push
inc
pop
lea
mov
fsts
orl
out
subb
adc
sbb
xor
jle
jbe
adc
out
and
outsl
jmp
xor
mov
jnp
iret
xchg
push
mov
sarl
dec
lods
enter
pop
test
sub
aam
dec
cmp
adc
jo
sub
mov
push
mov
mov
sahf
sub
in
rclb
pop
mov
repnz
shll
sub
lock
lret
mov
lret
cwtl
jno
movsb
mov
bound
sub
cmp
outsb
cmp
push
add
pop
pop
mov
sub
sub
out
pop
cmp
cmp
in
repnz
lret
sub
sbb
cmp
lds
pop
dec
add
jmp
jecxz
mov
aaa
push
stos
daa
dec
xor
aaa
jnp
rorl
test
add
push
push
push
mov
lods
js
sub
xor
push
xchg
int
cmpsl
icebp
push
sub
mov
movsl
or
pop
push
fisttpl
lds
fdivrs
mov
rclb
sub
cltd
loop
and
stos
inc
xor
add
sahf
add
cmp
cmpsl
xchg
adc
inc
pop
push
shl
cmp
je
mov
inc
scas
out
leave
enter
pop
mov
leave
jecxz
xor
xlat
dec
cli
xchg
adc
jb
sub
pop
mov
cmc
jnp
jae
cli
in
xchg
scas
add
lret
lcall
out
aas
xor
push
push
int
xchg
jne
xchg
bound
mov
insb
pop
add
xor
and
int
call
mov
sbb
inc
mov
xor
stos
add
adc
sbb
into
data16
xlat
loop
das
mov
insl
pop
jbe
push
loop
mov
lret
lret
es
push
xchg
testb
cli
pop
inc
xor
int3
jl
mov
iret
aad
addr16
dec
je
xchg
cltd
and
sti
mov
mov
adc
push
and
in
xor
pop
jle
mov
cmp
or
add
div
popf
dec
es
jp
cmp
les
mov
cmp
cmp
sbb
filds
dec
fwait
test
jbe
in
dec
out
mov
and
test
popf
ficoms
sub
mov
push
dec
push
adc
xor
adc
xor
ret
mov
fistpll
iret
push
xor
ljmp
std
jne
xor
xchg
and
jmp
imul
hlt
adc
je
dec
inc
push
and
inc
jo
loop
mov
hlt
push
into
mov
sbb
mov
lods
dec
icebp
ret
pop
dec
mov
cmp
mov
mov
mov
aas
cmp
aaa
jge
fists
mov
fs
ret
mov
push
call
hlt
cli
mov
add
je
out
rolb
mov
stc
mov
mov
cmpsb
adc
ljmp
adc
inc
add
addr16
mov
movsl
ror
es
std
xchg
jb
lods
sub
dec
xor
sbb
es
inc
push
or
xchg
js
nop
pop
push
mov
bound
mov
mov
sub
sti
push
push
mov
lods
in
xorb
push
insb
sub
mov
fnsave
dec
hlt
push
xchg
or
int
xchg
adc
or
jl
push
and
loop
dec
pop
add
mov
jnp
movsb
pop
sbb
jl
cmp
hlt
mov
and
insb
ljmp
xchg
std
mov
pop
cli
sbb
dec
mov
decl
sbb
ss
fs
adc
pop
in
cwtl
dec
jae
insl
or
push
ret
mov
out
mov
out
stos
mov
sub
adc
cmp
xor
or
push
xor
into
ja
inc
push
and
in
jae
dec
sub
fcompl
lds
jmp
mov
out
and
test
dec
incl
loope
push
jl
lock
int3
dec
divl
mov
or
lea
sub
rclb
cmp
sti
push
test
arpl
or
dec
shlb
outsl
mov
mov
mov
test
shll
shlb
adc
out
mov
sbb
pop
xchg
andl
jle
bswap
mov
or
sub
sub
int3
and
ss
add
adc
mov
dec
inc
dec
or
ret
mov
fwait
push
filds
cli
adc
bound
divb
ds
addr16
inc
xor
movsl
mov
xchg
test
or
std
mov
and
cwtl
int3
xor
add
lods
mov
jp
cli
pop
stc
xchg
jl
sahf
add
dec
testb
mov
jg
iret
cmp
jnp
jp
lahf
jno
outsl
aaa
dec
jg
add
sbbb
and
mov
sub
jle
fistpll
inc
test
and
dec
pop
mov
lret
xchg
sub
lcall
cmp
out
ja
scas
daa
xchg
mov
jb
stos
data16
mov
xorl
or
ja
popa
mov
xchg
addr16
cltd
mov
add
cmp
dec
inc
rcl
stc
lods
out
dec
cld
out
filds
xor
cmp
pop
out
pop
rsqrtps
inc
out
lock
adc
jl
xor
push
aas
xor
add
test
repz
and
js
mov
xor
xor
inc
pushf
add
sub
call
mov
xchg
addr16
xchg
out
jmp
insb
ret
add
je
push
insl
fwait
jp
in
mov
cwtl
stos
push
xorb
push
pop
movsl
jno
addr16
push
pop
fcmovbe
push
out
sti
not
and
aad
testb
mov
or
aas
jno
mov
pushl
adc
mov
pop
test
push
jae
xchg
insl
lcall
mov
sub
shrl
dec
xchg
mov
mov
mov
mov
sub
mov
ret
add
aaa
imul
dec
loopne
mov
sbb
push
add
outsl
or
cld
adc
cwtl
mov
lcall
fldcw
arpl
ret
xchg
inc
in
fdivp
mov
mov
xchg
fnstsw
inc
sbb
push
adc
inc
leave
ret
push
lea
add
out
cmc
push
pop
fsubs
insb
inc
clc
shrb
ss
adc
int
mov
sbb
xlat
xchg
lock
ja
fwait
sbb
lahf
fs
mov
adc
sbb
mov
popa
rol
addr16
mov
popf
inc
daa
lds
jb
pop
scas
xlat
testl
ret
pop
inc
inc
mov
cmp
xor
cs
fs
rorb
lea
and
jns
in
inc
leave
and
or
inc
cmc
dec
out
dec
out
xchg
pop
push
dec
xchg
sbb
cmp
stos
sub
in
sub
loop
incb
xchg
lahf
pusha
fidivl
lret
sbb
push
inc
pushf
lds
jnp,pt
iret
dec
insb
dec
sub
shlb
lods
mov
jo
je
cmp
lods
dec
xchg
xchg
test
mov
pop
notl
mov
adc
mov
ficoml
adc
lret
inc
cmp
loopne
push
or
jecxz
lea
push
sti
jmp
enter
mov
imul
or
jl
pushf
sub
out
loop
xchg
push
sbb
repnz
inc
mov
dec
jl
test
into
pushf
flds
add
lea
lea
and
mov
imul
scas
popa
insb
inc
xchg
xor
push
filds
jp
add
arpl
loopne
stos
mov
or
popf
movb
dec
inc
fnstenv
lods
inc
rcrl
sbb
add
rcrb
or
movsl
dec
aam
scas
mov
xor
leave
js
mov
pop
push
xchg
cmpsb
cwtl
pop
outsb
fistl
pop
cld
je
lret
mov
sahf
movsl
mov
in
inc
in
fcompl
rorl
imul
jb
dec
stc
les
rclb
scas
stos
dec
inc
or
push
cmp
lahf
in
fwait
xchg
movsb
mov
ja
out
jns
in
sbb
scas
mov
fldt
mov
pop
sbb
mov
jmp
push
dec
jmp
loop
test
jne
sub
xchg
das
fsubr
aam
sbb
mov
int3
aas
daa
push
mov
rorl
mov
popf
pop
sbb
jg
fwait
cmp
push
pop
xor
sti
or
push
push
in
pusha
lret
xor
daa
ds
bound
pop
repz
pop
push
stc
jnp
mov
loope
or
inc
mov
pop
orb
mov
push
stos
jg
and
fsubrs
loope
scas
out
js
lds
icebp
repnz
stos
imul
xchg
out
mov
in
mov
cmovne
js
sar
adc
pusha
js
xor
dec
mov
cli
fwait
mov
inc
push
jle
jno
ljmp
and
or
pop
sbb
outsb
mov
mov
xor
int
xlat
pop
pushf
cmp
out
xor
es
push
mov
hlt
lcall
cmp
mov
int
xchg
cmp
in
notb
idivl
pop
inc
jne
andl
inc
sahf
push
sub
sbbb
into
inc
mov
lret
jnp
jl
push
or
xor
popf
movsb
movsl
inc
cmc
mov
jbe
and
clc
ficompl
sub
mov
adc
push
test
insl
out
test
int
jmp
imul
repz
mov
mov
cs
popa
xor
push
addb
sub
xchg
cmp
dec
push
lahf
scas
aad
jnp
or
add
lds
movsb
insb
repnz
int3
ljmp
scas
inc
rcrl
sub
mov
mov
mov
cmp
jae,pn
sbbl
sub
xchg
std
sti
sbb
cld
in
enter
mov
cmp
fstpl
sub
cmp
mov
andl
fs
rolb
frstor
fldt
pop
sbb
xor
pop
orb
dec
sub
fisubs
fsubl
lods
scas
ljmp
add
jo
sarb
or
loop
dec
aaa
mov
test
adc
jmp
fdivp
cli
adc
pmulhuw
inc
repnz
pop
inc
mov
cmpsl
add
and
outsb
adc
mov
nop
add
add
popa
adc
adc
inc
lds
in
jge
dec
adcl
arpl
lods
int
mov
sbb
mov
push
insb
jns
cltd
scas
adc
sub
cmp
cmp
and
dec
insb
mov
xchg
clc
pop
cmc
jns
push
into
cmp
fmull
stos
add
push
arpl
popa
jne
imul
add
fwait
mov
std
lods
adc
gs
cld
cmp
mov
ret
push
xchg
fldcw
xor
dec
add
pop
and
or
and
stos
aam
xor
pop
inc
and
adc
adc
imul
mov
push
mov
mov
mov
pop
out
or
daa
cmp
outsl
mov
xchg
in
inc
jne
mov
inc
in
mov
mov
pop
push
xchg
xchg
loope
rcrb
push
sub
or
xor
cmpsl
imul
adc
mov
fnstsw
mov
mov
pop
xchg
pusha
mov
pop
fs
aas
mov
adcl
inc
mov
xlat
addb
out
cmp
or
xchg
push
sbb
mov
roll
loope
jo
cmpsb
cmp
aam
into
push
add
test
or
adcl
push
pop
push
sub
out
mov
xchg
aaa
dec
test
test
les
ret
sbb
sbb
fstp
inc
mov
sbb
adc
cmpsb
hlt
popa
and
xchg
mov
jb
jg
inc
or
icebp
roll
and
mov
cmpl
cmpsl
xorl
sbb
pop
es
.byte
.byte
.byte
.byte
.byte
add
add
cmp
pop
add
add
add
push
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
cmp
pop
add
add
add
add
mov
add
addb
add
cmp
pop
add
add
add
add
add
add
enter
add
add
loopne
add
cmp
pop
add
add
add
push
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
cmp
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
cmp
pop
add
add
push
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
cmp
pop
add
add
add
add
mov
add
addb
add
cmp
pop
add
add
add
add
add
add
addb
add
add
cmp
pop
add
add
add
add
add
add
cwtl
add
add
add
add
ljmp
add
add
add
add
test
add
add
add
cmp
pop
add
add
add
add
add
add
mov
add
add
ljmp
add
add
add
add
enter
add
add
cmp
pop
add
add
add
add
add
add
fadds
add
add
add
ljmp
add
add
add
add
call
add
add
ljmp
add
add
add
add
clc
add
add
add
add
ljmp
add
add
add
add
or
add
cmp
pop
add
add
add
add
add
add
sbb
add
cmp
pop
add
add
add
add
add
add
sub
add
cmp
pop
add
add
add
add
add
add
cmp
add
cmp
pop
add
add
add
add
add
add
dec
add
add
cmp
pop
add
add
add
add
add
add
pop
add
add
cmp
pop
add
add
add
add
add
add
push
add
add
ljmp
add
add
add
add
js
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
ljmp
add
add
or
add
add
add
ljmp
add
add
or
add
add
add
ljmp
add
add
or
add
add
add
ljmp
add
add
or
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
cmp
pop
add
add
add
add
or
add
push
add
add
add
cmp
pop
add
add
add
add
or
add
push
add
add
add
cmp
pop
add
add
add
add
or
add
push
add
add
add
cmp
pop
add
add
add
add
or
add
push
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
add
cmp
pop
add
add
add
add
or
add
add
add
add
cmp
pop
add
add
add
add
add
add
push
add
add
ljmp
add
add
add
add
js
add
mov
add
in
add
add
add
andb
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
in
add
add
add
dec
out
add
add
add
add
add
add
add
add
in
add
add
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
sbb
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
mov
imul
scas
sbb
sbbb
adc
xor
xchg
mov
xor
lret
lcall
pop
inc
and
xchg
xor
repz
adc
sarb
sbb
pop
in
ffree
std
loopne
aas
loop
insl
fisubrs
movsb
mov
or
test
inc
xchg
inc
and
js
lods
mov
ret
add
xlat
adc
inc
dec
addr16
and
mov
inc
sub
ficomps
adc
fmulp
sbb
rolb
xchg
int
dec
and
lcall
and
jb
and
test
xor
iret
mov
cmp
fisttps
cmpl
fimuls
push
incl
lods
mov
lds
stos
inc
test
mov
sub
popf
lds
mov
decl
push
xor
shlb
or
push
jne
cmp
pop
sti
arpl
jne
push
decl
mov
imul
pushf
push
sbb
adc
jp
mov
sub
adc
mov
jbe
jae
xor
cmp
xchg
push
ljmp
xor
outsl
xchg
out
mov
sbb
sub
xchg
add
adc
jp,pt
jge
insl
push
ror
ret
mov
dec
inc
push
into
push
sub
jbe
xor
out
push
loop
pop
cwtl
mov
lret
dec
mov
cmp
shlb
ljmp
dec
ss
int
mov
lock
test
ret
movsb
ficoms
stos
scas
int3
push
cmp
subl
xchg
in
insl
bound
ret
test
sbb
cmp
std
cmp
jnp
jmp
sub
push
xor
ljmp
jp
out
push
mov
mov
mov
pop
and
pop
or
scas
mov
push
sarb
mov
test
jg
mov
mov
add
sbb
shl
adc
add
into
push
lret
shrb
movsl
xchg
js
sbb
into
in
out
scas
mov
fs
insl
jmp
jl
xor
push
mov
or
sub
mulb
dec
inc
mov
outsl
callw
mov
jnp
ljmp
mov
push
jl
lahf
out
subb
mov
inc
stos
jl
leave
mov
push
fnstcw
xchg
ds
lds
adc
gs
ljmp
or
ret
mov
mov
fdivrl
xor
bound
xchg
fistpll
mov
lret
push
adc
dec
lods
mov
rcll
or
movsl
lock
je
gs
add
push
mov
sbb
push
leave
movsl
pop
sub
jle
push
sbb
push
xchg
dec
xchg
dec
fld
stos
cltd
std
fmul
xor
and
mov
pop
xlat
mov
inc
lock
movsl
mov
imul
sti
shll
out
insl
cmp
add
or
loope
fidivl
xchg
iret
test
dec
or
lahf
fistl
subl
mov
mov
iret
cmp
loope
iret
loopne
dec
les
lods
dec
and
aas
les
pop
push
push
mov
jp
pop
sbb
add
mov
int
mov
leave
jg
sbb
pop
int3
bound
movsb
pop
inc
xchg
xchg
mov
addr16
and
mov
cmpsl
pop
stc
or
imul
pop
cmp
negl
sub
xchg
jb
mulps
movsb
xlat
mov
pop
out
xor
adc
mov
fisubl
sbb
jmp
sahf
stos
mov
cli
push
lcall
sbb
adc
or
arpl
imul
les
adc
add
or
inc
cmp
xchg
outsl
daa
scas
inc
fnsave
push
sbb
inc
mov
adc
cmc
les
mov
sub
mov
sbbl
jl
sti
pop
sub
add
cmp
dec
lds
push
mov
sub
mov
pop
sub
out
xlat
rcrl
ljmp
pop
cs
js
jmp
or
sbb
mov
inc
sub
inc
lds
sub
pop
mov
nop
xor
xor
jb
es
data16
push
cmp
or
in
adc
add
pop
pop
xchg
dec
adc
mov
mov
insl
jge
jl
adc
shlb
adc
push
add
fyl2xp1
lret
jecxz
sub
or
mov
fcoms
test
jp
int3
pop
and
lcall
pop
push
inc
jl
es
sti
mov
int
les
lret
pop
sbb
jnp
or
jle
adc
xlat
pop
xchg
pop
call
fbld
or
negb
gs
sbb
std
lock
or
jo
mov
in
mull
andl
sahf
dec
adc
scas
adc
mov
outsb
mov
lods
mov
mov
sbb
xor
or
inc
push
push
inc
xor
xchg
out
bound
std
mov
or
cmp
pop
mov
cltd
data16
cwtl
xchg
sahf
lods
pop
imul
loope
call
sbb
push
loop
mov
jmp
push
cld
out
push
sbb
mov
repz
push
pop
dec
mov
movsl
hlt
xchg
pop
rol
jbe
mov
jns
and
out
pop
dec
or
ss
loopne
push
xor
dec
mov
jge
push
push
std
adc
pop
lcall
push
adc
push
cmc
mov
cmp
out
jb
or
cmp
cmpl
insb
pop
inc
bound
scas
lds
das
fwait
inc
movsb
jbe
xchg
sub
aam
orb
shlb
out
pop
mov
ds
pop
cmp
pop
cmp
test
push
mov
aaa
scas
adc
adc
sub
or
xor
in
fwait
dec
aas
mov
iret
mov
mov
or
fcomip
fst
imul
mov
fimuls
xorb
mov
fildll
ljmp
push
xchg
je
movzbl
cs
mov
xor
sbb
lahf
fiadds
xor
sub
adc
dec
lods
lds
test
lcall
test
inc
pop
movsb
mov
insb
mov
xchg
jb
aad
jnp
sbb
inc
js
dec
adc
xchg
leave
out
cmp
pop
pop
add
fadds
lahf
lds
pop
mov
push
ja
push
jg
aam
add
sub
shll
lcall
aaa
pop
mov
adc
in
stc
mov
jae
mov
mov
jbe
scas
push
add
push
ds
in
pop
jge
and
mov
xor
outsb
mov
mov
ss
fcomi
jo
mov
sub
sub
psubd
jp
pop
aad
pop
mov
data16
push
push
insb
sbb
xor
mov
sbb
mov
orl
ljmp
arpl
add
sti
aas
jle
pop
xchg
out
insb
pop
sti
out
ljmp
cmp
push
mov
sahf
scas
mov
fisttpll
cmpsb
popa
sti
mulb
mov
test
adcl
mov
push
call
jp
pop
pop
in
jge,pn
and
mov
adc
mov
aam
les
lods
je
and
hlt
mov
and
pusha
ret
not
sti
pop
or
or
outsb
jae
mov
dec
xor
pop
adc
jnp
xchg
jge
leave
mov
or
loopne
dec
stos
ret
xchg
aam
cli
ficomps
inc
push
adc
ss
push
mov
adc
jl
jmp
pop
sbb
jmp
aas
push
mov
fwait
push
mov
and
mov
xchg
lds
jb
push
subb
sahf
repnz
jbe
shl
shll
mov
xor
lcall
stos
mov
cs
int
jns
mov
cwtl
and
jmp
mov
hlt
sbb
repnz
push
dec
cmp
data16
mov
mov
push
outsl
cli
das
cmp
add
and
jo
xorb
or
cmp
repz
lods
and
roll
sub
sub
data16
pop
clc
push
clc
sbb
inc
test
mov
std
into
ds
stos
cwtl
sub
mov
lods
jo
fs
lds
mov
test
xchg
cmovle
push
lret
xchg
out
inc
int
paddb
inc
fistl
daa
push
xchg
out
iret
push
outsl
add
adc
aas
mov
add
imul
lahf
jle
out
in
push
inc
sahf
in
call
and
dec
aam
mov
cmpsb
sub
sti
mov
enter
cmc
pop
adc
pop
add
cmp
out
mov
cwtl
xchg
pop
popa
in
fisttps
xlat
or
popf
or
mov
rcl
fwait
pop
jbe
or
js
dec
iret
xchg
out
shl
push
xor
out
out
out
mov
pop
dec
sbb
push
iret
fbstp
ss
data16
pop
or
insb
or
pop
cmp
pop
xorb
aad
sub
shll
mov
test
aaa
cmc
scas
cmpb
xchg
dec
mov
dec
add
lods
imul
lea
cwtl
rorb
inc
lock
jnp
outsl
sub
shll
daa
xor
push
sub
aas
lods
xor
mov
pop
jno
pop
inc
and
adcb
dec
xor
inc
mov
pusha
lds
add
ja
insb
inc
fistl
and
lret
jb
pushf
rcrb
icebp
fwait
leave
push
xchg
sbb
add
dec
xchg
daa
pop
shlb
or
sbb
sahf
or
push
repz
es
push
mov
fsub
inc
dec
add
mov
mov
push
and
inc
mov
loope
add
addr16
in
fists
cli
cmp
xlat
notl
stos
xlat
mov
xor
and
fwait
addr16
in
insb
pop
adc
clc
call
or
xchg
mov
mov
xchg
sub
mov
movsl
push
out
cmp
mov
xchg
mov
mov
sbb
jns
cwtl
cmp
adc
fisubl
pop
jno
xor
mov
xor
lds
push
in
lods
add
add
xchg
sbb
or
shrl
push
outsb
pop
and
jnp
dec
jb
push
mov
push
pusha
and
fmulp
pop
dec
dec
xor
leave
outsb
inc
mov
pop
cmpsl
jae
loop
mov
addr16
test
inc
clc
aam
jno
pop
sti
fisttpll
cs
sub
cmp
dec
insb
mov
sarb
nop
jecxz
sub
popf
cmp
or
adc
out
jns
lock
mov
int
int
push
xchg
repz
int3
adc
cmp
divl
xor
movsb
xor
cmp
and
aad
xchg
mov
mov
cli
sub
jecxz
popf
sahf
mov
mov
mov
pop
clc
out
js
das
popa
add
sub
and
xor
ficompl
cmp
fwait
cli
in
fistpll
sub
mov
push
jl
idivl
dec
out
nop
xor
mov
xchg
ja
jbe
out
pop
mov
inc
sbb
adc
push
adc
xor
add
and
addl
mov
push
out
dec
notb
ds
test
lret
je
push
popf
pop
mov
shl
xchg
pop
les
test
ss
pop
in
inc
or
popa
lods
jbe
ret
sub
stos
mov
lds
push
jg
fsubrp
adcb
jae
out
sub
inc
push
jns
xchg
fyl2xp1
cmp
outsb
jp
bound
fsubl
sbb
fdivs
cmp
sbb
cltd
and
add
lods
mov
add
and
pop
cmp
dec
outsb
fiaddl
push
xchg
mov
cmp
ja
dec
outsb
cmp
movsb
push
adc
xchg
inc
ss
dec
dec
adc
test
dec
shll
jmp
movsl
leave
mov
repnz
std
sub
cmp
les
pop
mov
push
les
movsl
sub
pop
pop
outsb
in
fnstenv
xchg
add
sub
push
clc
add
and
pop
fsubrs
std
and
iret
adc
jnp
cmp
js
jecxz
xchg
mov
push
data16
xchg
outsb
leave
shr
xor
mov
jg
mov
repnz
int3
mov
in
push
dec
dec
push
cld
dec
movsb
and
sbb
dec
cld
xchg
in
mov
dec
pop
add
xchg
xchg
fcomps
cmp
jg
cmc
cmp
and
pop
fimull
cwtl
in
stos
dec
dec
das
mov
fwait
push
psubusb
stos
rcl
ss
mov
push
lock
inc
xchg
inc
mov
push
dec
or
add
loop
dec
sub
dec
arpl
and
or
inc
pop
push
and
mov
rcrl
dec
sub
jl
clc
fcomps
in
repz
jle
mov
mov
cmc
daa
dec
cmpsb
insl
lcall
push
sbb
xchg
pop
pop
ret
mov
rcll
push
mov
pop
outsb
icebp
lcall
push
add
into
dec
or
sbb
sub
lahf
sub
shrb
adc
and
iret
push
mov
test
mov
mov
fs
pop
int3
and
stos
cld
daa
and
loopne
and
push
cld
mov
loop
in
into
scas
mov
push
cmp
or
stos
lahf
loop
inc
cld
add
adc
jno
push
imul
outsl
stos
fldcw
mov
mov
arpl
or
lods
imul
imul
pop
pusha
and
pushf
hlt
xchg
mov
insl
or
frstor
sbb
xchg
adc
js
std
mulb
jl
sahf
adc
mov
jns
out
lods
push
inc
jnp
xchg
mov
push
add
mov
imul
insb
outsl
cmpsl
out
sbb
pop
jbe
out
jp
sbb
lock
popa
dec
je
pop
imul
out
inc
inc
out
cmp
pusha
or
inc
mov
sarb
sub
push
xchg
fs
stos
jg
pop
flds
mov
add
aaa
shll
ret
fsubs
out
aad
push
lea
inc
dec
mov
sub
stos
inc
push
mov
inc
repnz
inc
jnp
xor
test
divb
testb
testl
xchg
sbb
insl
sub
cmp
push
pop
dec
das
jle
scas
pop
or
out
mov
or
sbb
adcl
inc
mov
jae
into
xchg
leave
stos
mov
rcrl
mov
sbb
adc
shr
mov
sub
in
sub
in
mov
shrl
add
adc
outsl
mov
pop
dec
rolb
jbe
mov
data16
jl
dec
shr
sbbb
jo
leave
push
jl
cmpb
aas
pop
dec
rolb
dec
nop
ds
cld
cmc
hlt
adc
leave
pop
add
out
push
leave
or
cmpsb
dec
sahf
push
sbb
jo
sub
mov
cmp
in
or
es
pop
mov
mov
xchg
or
mov
outsl
mov
lcall
and
push
out
dec
push
mov
or
xor
mov
and
sub
pop
push
xchg
push
rcll
add
or
or
add
mov
pop
das
icebp
arpl
xor
mov
out
mov
mov
sti
mov
imul
jecxz
add
push
fs
sbbb
cmp
mov
ss
push
jle
ja
icebp
xor
fdivrl
mov
jmp
pop
or
pop
add
sbb
push
loop
mov
cmc
mov
push
lds
call
xor
add
cmpl
pop
or
movsb
bound
shr
xchg
mov
or
fildl
mov
movsb
popa
push
or
pop
cmpsl
adcl
sti
cmp
jns
or
cmp
mov
iret
cwtl
ret
pop
call
sbb
cmp
xchg
ljmp
dec
mov
jbe
nop
or
jl
pop
ss
jmp
mov
dec
pop
xchg
in
repz
stos
mov
or
or
mov
mov
test
pop
jecxz
push
mov
sub
test
lahf
cmp
fs
add
sbb
js
push
pop
test
aaa
mov
and
scas
mull
inc
push
insb
inc
leave
push
roll
sbb
mov
push
mov
push
pop
mov
xlat
lods
push
add
pusha
xor
mov
and
iret
and
pop
cld
fists
add
mov
ror
ja
pop
rolb
xor
mov
pop
or
enter
das
js
shlb
xchg
setne
pop
xchg
aas
or
mov
stos
lods
sahf
mov
repz
leave
xor
xlat
mov
and
jmp
int
repnz
xchg
cltd
sub
insl
pop
popf
pop
cld
adc
sub
and
and
mov
xchg
add
gs
stc
xor
inc
inc
jo
mov
pop
gs
adc
es
daa
enter
add
sub
inc
loope
mov
cmp
test
mov
insl
mov
je
ret
push
idivl
addr16
mov
cwtl
pop
push
js
jbe
enter
pop
push
adc
sub
push
rol
jecxz
mov
repz
dec
clc
dec
in
xor
repnz
scas
std
sub
inc
pop
push
pop
dec
and
cmp
or
out
out
lea
testl
inc
mov
aas
mov
imul
je
icebp
lea
mov
in
jb
shrb
mov
or
dec
jne
fstp
leave
in
sbb
int
ja
mov
call
pop
jb
xor
out
dec
bound
xor
hlt
lods
pop
shr
cld
adc
sub
pop
leave
dec
out
mov
jp
arpl
push
xchg
and
test
xor
lret
cmp
lods
xchg
outsb
mov
in
mov
test
incb
call
cmp
xor
cmp
in
dec
dec
pop
ss
add
daa
lds
or
test
popf
movsb
rcl
or
aam
in
lock
ret
jge
push
outsl
in
dec
arpl
push
mov
inc
jmp
js
push
cmp
mov
mov
dec
adc
insb
mov
mov
push
cmp
and
negb
push
mov
adc
repnz
mov
jg
mov
add
aad
adc
int
loopne
leave
cmc
cwtl
adc
fs
mov
cs
sbbl
cld
fcomps
or
shrb
cltd
shlb
push
adcl
out
daa
pop
loope
cmp
test
or
sbb
mov
es
adc
in
mov
push
or
repz
loope
mov
in
pop
les
repnz
mov
pop
cmpsb
outsl
test
jle
and
push
xor
dec
stos
outsl
or
dec
and
push
fstl
addl
mov
lods
ljmp
pop
lahf
shll
sbb
xchg
int3
inc
movsb
mov
dec
cs
add
jno
adc
cmpl
mov
xchg
repnz
call
fld
inc
out
fists
enter
xchg
xor
pop
inc
mov
mov
ss
xchg
ja
fs
scas
insb
push
mov
inc
add
mov
jecxz
lret
notb
cmpsl
add
mov
jp
add
ficoms
or
cmpl
mov
imul
outsb
fimull
adc
mov
ss
aam
pop
adc
popf
ficoms
je
inc
add
mov
into
call
or
xchg
jmp
and
push
mov
stos
push
push
jno
orl
iret
mov
or
jl
lcall
dec
dec
fcmove
clc
xor
adc
in
lcall
mov
xor
idivl
cmp
push
fimull
in
cmpb
mov
or
std
std
not
inc
mov
stos
scas
inc
mov
adc
push
mov
filds
jae
add
inc
dec
push
faddl
add
les
dec
repz
jne
ret
repz
mov
jp
xchg
rep
mov
loop
cmpsl
sbb
testl
mov
psubq
test
mov
xor
js
shr
cmp
adc
pop
stos
cs
xchg
aas
js
mov
nop
js
cld
add
or
ljmp
push
cld
mov
mov
loop
mov
jae
mov
xor
sub
pop
or
iret
call
mov
xchg
xor
lcall
jno
xor
push
ret
xchg
popf
lods
call
icebp
and
paddd
xchg
ret
xchg
push
mov
xor
pushf
pop
inc
pop
xor
or
mov
loop
push
mov
push
mov
daa
mov
leave
pop
les
mov
incb
outsb
jmp
out
mov
lods
imul
repnz
xor
test
add
or
dec
aas
mov
das
mov
out
cmpl
arpl
test
xchg
dec
mov
cmp
or
icebp
arpl
mov
lahf
jmp
rcr
roll
inc
in
aas
out
loopne
inc
xor
icebp
out
push
imul
mov
loope
int
pop
pop
push
pushf
pop
int
adc
cld
lret
fsubrl
mov
ds
sbb
inc
add
push
pop
dec
lcall
xlat
push
push
dec
enter
ja
lahf
test
inc
fwait
push
lods
das
iret
pop
stc
out
mov
xchg
sub
nopl
insb
jo
and
in
lsl
hlt
cmp
mov
pusha
arpl
sub
push
cld
sahf
fdivl
cmp
popf
or
xchg
dec
xchg
mov
lods
or
pop
xchg
fwait
pop
cld
and
jb
repnz
insb
mov
inc
imul
jbe
lock
add
aad
push
pop
mov
adc
in
lcall
ret
les
cld
int3
mov
jnp
or
jno
inc
inc
jg
and
addr16
repnz
mov
subl
jmp
pshufw
lret
cs
jo
pushf
jo
xor
mov
or
jge
sti
pop
adc
fsubs
and
jae
iret
sub
movl
and
scas
mov
cmpsb
mov
mov
dec
xchg
jmp
mov
loop
imul
lods
push
mov
insl
mov
inc
orl
insb
outsb
aad
or
insb
test
xor
inc
loop
test
outsl
leave
pushf
out
sbb
add
inc
dec
push
cwtl
push
xor
cmp
stos
cmp
or
arpl
xchg
adc
scas
or
xchg
mov
jg
sti
xor
push
inc
jge
data16
inc
test
imul
ret
xor
jns
rcrl
fisttpl
ljmp
adc
int3
mov
sub
arpl
add
adc
and
scas
mov
adc
push
mov
cmp
pop
pop
js
jo
or
scas
mov
jmp
rcrb
sahf
dec
mov
repz
leave
inc
xor
push
movsb
test
cmp
pop
lock
add
loopne
pop
int
test
in
push
insl
jb
jl
rcrb
bound
stos
jbe
ret
mov
inc
negb
mov
outsb
pushf
sbbb
cmc
aam
lods
xchg
mov
lods
stos
mov
aaa
ret
and
or
xlat
fldt
inc
adc
adc
and
push
push
mov
inc
lret
cmp
lcall
jge
mov
lock
lods
inc
bound
mov
mov
int3
pop
push
popf
int
pop
in
mov
popa
sahf
imul
add
xchg
mov
lock
sbb
sbb
or
jbe
xor
mov
xchg
mov
push
push
mov
push
jno
mov
mov
pusha
add
dec
sub
jl
adc
sbb
jl
hlt
push
notb
out
andb
push
je
xor
mov
mov
mov
add
and
jle
or
push
popf
test
mov
pop
int
push
adc
add
cwtl
pop
mov
sti
mov
int
dec
push
and
pop
inc
inc
sbb
mov
rclb
dec
mov
xchg
pop
scas
push
data16
inc
hlt
repnz
lods
lea
mov
or
pop
and
inc
xchg
stos
imul
aam
into
movsb
xor
xchg
loopne
lea
mov
shl
lret
lock
mov
imul
sub
aas
adc
xor
shll
data16
mov
mov
scas
fistpll
cmpsl
stos
dec
pop
xlat
fnstenv
fnstsw
jno
mov
xor
adc
cmpsl
std
shrl
xlat
ret
ret
popf
cmc
and
xor
xchg
ficoml
mov
jecxz
mov
aaa
jg
movsl
aad
aaa
mov
cld
jne
push
divl
fsubrl
movsb
push
xchg
or
add
mov
addr16
pop
aam
mov
add
aaa
pop
mov
lea
inc
movl
jp
mov
jmp
xorl
mov
ret
testb
and
lret
dec
aas
aam
push
lret
rorb
sbb
enter
pop
or
push
cmp
adc
inc
fdivrs
fs
mov
in
fiadds
or
dec
test
push
or
clc
icebp
or
pop
mov
xor
push
mov
ret
mov
or
pop
orl
inc
cld
loop
fiaddl
aaa
and
shl
ret
popa
xchg
fnsave
jmp
xchg
shrl
ljmp
sti
cli
int
fisubs
mov
sbb
push
dec
cmc
notb
xor
arpl
jb
add
xor
or
pop
push
inc
fs
fistpll
shlb
mov
iret
xchg
adc
mov
jne
pop
sahf
hlt
into
out
xchg
xchg
loope
mov
loopne
cmp
pop
movsb
imul
stos
inc
push
xchg
jae
movsb
mov
mov
dec
fs
and
and
and
push
jno
sub
jmp
loopne
inc
ja
sbb
repz
pop
or
pop
lret
hlt
insb
dec
loopne
popf
scas
imul
jne
leave
in
add
mov
js
mov
bound
mov
add
pop
add
push
addb
cmp
cmp
fistl
loopne
add
pushl
movsl
sbb
cli
mov
jbe
xor
popf
stos
dec
and
lods
or
pop
jl
nop
popa
cmp
jp
xchg
clc
cmp
imul
aaa
inc
xchg
lret
adc
stos
or
js
push
push
mov
jnp
xor
pop
dec
mov
or
mov
lret
fmuls
fisttpl
sbb
pusha
rorb
cwtl
xchg
mov
cmp
test
xchg
adc
daa
nop
pop
stos
mov
in
dec
add
fisubs
in
lret
lea
hlt
stos
mov
addl
scas
push
mov
add
orl
jmp
pop
hlt
cli
rorl
inc
inc
adcl
sbb
repnz
pushf
pop
in
dec
cmp
xor
sub
and
insb
dec
int3
pop
or
cmc
mov
xor
orb
jge
mov
int3
and
movsl
push
idivl
insb
sbb
dec
insl
dec
mov
cltd
push
leave
fwait
xchg
mov
lods
imulb
sub
insb
dec
dec
ljmp
inc
addr16
add
sub
dec
mov
gs
mov
mov
fs
xor
pop
das
push
mov
jbe
cltd
jnp
sbb
out
in
lcall
aas
sbb
lret
mul
dec
jno
and
int3
or
cmp
fsts
lea
in
mov
xor
xor
sbb
sbb
xchg
cmpsl
in
loop
insb
mov
nop
icebp
mov
fwait
iret
pusha
sbb
xor
and
ret
in
pop
add
mov
add
xchg
sbb
rcl
adc
and
xor
rorl
push
fdivrl
mov
pop
dec
mov
mov
ret
push
outsb
and
sub
pop
pusha
pop
mov
ds
add
std
jge
ret
push
inc
jmp
mov
pushf
addr16
aam
pop
outsb
stos
cmp
aas
and
add
pop
arpl
push
cltd
ljmp
mov
fnstsw
nop
outsb
dec
mov
mov
and
pop
sub
fstpl
pop
repnz
in
add
js
dec
movsb
pop
mov
inc
mov
fwait
pop
or
cmp
sub
ret
or
mov
lea
loope
inc
clc
jg
nop
cltd
mov
js
std
jl
adc
pop
rorb
lock
cmpsl
jo
jb
jmp
pushf
das
cmp
jmp
arpl
lods
test
inc
add
sub
test
pusha
pop
mov
stos
cmp
js
fdivrl
or
add
cmp
lcall
push
int3
cmp
in
fidivrs
add
adc
sbbl
inc
je
neg
sbb
out
clc
sti
rcl
push
adcl
sahf
dec
pop
sbb
je
mov
sub
pushf
aaa
pop
repnz
and
cwtl
cmpsb
lds
pop
push
pop
je
adc
bswap
push
mov
fdivrs
xchg
sub
in
dec
pop
adc
dec
dec
mov
dec
sub
xor
dec
loop
mov
aaa
sub
clc
insl
jmp
filds
in
add
xchg
jl
xlat
add
enter
xchg
shl
ret
aaa
pop
rolw
cmc
cltd
int
out
sub
repz
jge
mov
movsl
cwtl
andb
xchg
je
push
stc
cwtl
inc
popa
sub
push
ret
leave
cmp
pop
mov
aas
jb
clc
push
js
xor
mov
xchg
lods
pop
imul
stc
adc
cmp
hlt
vpsubusw
and
fcmovu
mov
fnsave
faddl
les
in
add
pop
cs
mov
fildl
sbb
add
stos
std
jecxz
push
sti
das
jle
mov
in
adc
mov
xchg
inc
sub
jl
cld
movsl
dec
mov
rorb
mov
divl
jae
or
fld
jge,pt
xchg
lods
mov
sub
shl
mov
inc
les
hlt
insl
jecxz
ljmp
xor
outsl
in
push
and
dec
or
lret
and
cld
outsl
fbstp
push
push
jmp
inc
xchg
je
and
loopne
shll
push
into
inc
add
in
push
in
mov
mov
push
bound
ljmp
cltd
adc
out
outsb
xchg
shlb
push
mov
test
push
jp
decb
clc
dec
sbb
cld
inc
adc
sbb
pop
sub
and
mov
dec
sub
push
lock
ret
icebp
aas
test
jno
mov
mov
adc
and
fldcw
mov
loopne
fnstcw
cmp
pop
lahf
jecxz
mov
ficompl
jp
or
cld
and
pusha
push
fbstp
sub
out
cmpsb
jp
add
inc
pop
stos
push
sub
mov
push
addr16
insb
pop
mov
mov
add
xchg
loop
dec
stos
sbb
sub
adc
js
add
mov
add
mov
cmpsb
add
inc
lret
pop
aaa
js
jo
jl
repnz
sbb
add
stos
xchg
sub
jge
lods
mov
inc
add
imull
xor
fisubs
push
pop
add
arpl
sbb
fbld
lcall
fcompl
aaa
ja
push
adc
cmpl
insl
outsl
pop
cmp
mov
xchg
mov
insb
stc
test
std
add
mov
inc
and
arpl
aas
jno
mov
scas
jb
inc
adc
push
and
subb
push
mov
and
pushf
pusha
jecxz
adc
movsl
pop
pusha
mov
push
jns
mov
loope
push
sub
add
xor
scas
mov
divl
cwtl
in
lcall
pop
lea
xor
pop
es
pop
dec
in
in
jae
pop
add
xchg
fimuls
in
icebp
lock
inc
sub
lods
scas
sub
push
frstor
jecxz
fidivrl
mov
and
and
inc
cmpsl
fisubs
mov
add
jg
lock
ljmp
in
push
out
shll
xor
sub
sbb
pop
mov
lods
adc
push
lock
nop
fcompl
sbb
xchg
roll
loopne
sti
dec
adc
out
cs
repnz
std
in
lock
in
sub
mov
adc
sahf
jp
mov
pop
cwtl
and
shll
adc
or
jmp
xlat
mov
inc
sub
aaa
jbe
cli
pop
pushf
repz
repz
cwtl
shlb
aad
add
mov
fstpl
or
out
in
notl
push
rolb
sub
add
stos
daa
test
cltd
aad
out
aaa
subl
mov
or
cld
imul
sbb
test
mov
and
mov
add
dec
or
inc
mov
push
xor
mov
cmpsb
add
xlat
shlb
mov
dec
or
pop
push
aas
aas
xor
and
cltd
arpl
cmpsl
loope
or
add
adc
sbb
cmp
inc
xchg
adc
xchg
mov
mov
clc
cli
jp
push
push
sbb
clc
and
xor
movb
cmp
fwait
push
loopne
cwtl
popf
sbb
inc
mov
push
mov
lcall
push
or
hlt
popa
divl
and
jmp
das
roll
or
add
ror
pop
jmp
test
dec
jno
cmp
out
leave
sbb
mulb
fstpt
test
stc
lea
in
dec
mov
movsb
sub
daa
sbb
pop
sahf
push
imul
mov
xchg
fst
xor
loopne
ret
jno
jp
hlt
add
out
sti
shrb
dec
cltd
jbe
and
flds
aas
scas
scas
mov
rorl
add
call
xchg
mov
call
jae
xor
or
pop
cmpsb
cmp
fld
inc
cs
fld
test
loopne
js
rcl
sub
push
ficoml
push
js
cmp
mov
lods
rcll
add
sbb
inc
adc
mov
cmp
int3
mov
cmp
andps
fisubs
mov
mov
inc
ds
mov
loopne
std
sti
cmp
hlt
mov
inc
ret
jae
je
mov
xchg
movsl
mov
clc
mov
mov
pop
rclb
or
pop
fwait
andl
inc
inc
lret
popa
add
xchg
inc
hlt
push
sbb
filds
mov
jge
and
push
lock
out
push
mov
lea
jge
shrb
enter
das
sub
faddl
lods
js
arpl
sbbb
fisttps
inc
rolb
stc
out
leave
ja
jae
testb
mov
jne
xlat
mov
push
dec
lret
mov
add
mov
daa
push
in
xor
icebp
xorl
bound
cli
into
and
dec
lea
jge
nop
push
fisttpl
and
repnz
cmp
lods
adc
test
icebp
test
ja
jae
xchg
ret
add
inc
fdiv
mov
in
sarl
cwtl
jg
pop
jle
add
fidivs
scas
pop
fisttpl
outsb
dec
lds
sub
stos
fildl
jp
or
faddl
loop
mov
cltd
stc
test
jne
fidivs
cld
xor
xor
outsl
xor
mov
outsl
inc
scas
sbb
test
daa
inc
jnp
out
lock
popa
adc
test
in
jbe
sbb
loop
iret
cwtl
jle
addb
popa
lock
xchg
mov
and
or
sub
adc
in
vmread
or
mov
push
push
neg
subl
repz
push
lods
outsw
out
repz
rcrb
jo
roll
inc
lods
push
nop
xchg
adc
ds
dec
leave
xor
xor
pop
ljmp
or
or
xchg
jo
lret
xchg
imul
and
lret
or
dec
ss
adc
mov
test
inc
jo
xor
sub
test
fnstcw
push
lahf
sbb
out
xchg
mov
mov
test
nop
pop
call
stos
scas
jnp
pushf
cld
pop
pop
pop
call
ljmp
imul
xchg
ror
fs
xor
mov
mov
int
xor
mov
into
sahf
sub
xor
dec
lds
push
jno
movsl
sbb
inc
repz
fiadds
mov
mov
jae
fisttps
push
inc
loop
lds
test
xchg
das
jmp
ret
ret
xchg
rcrl
scas
js
or
sub
icebp
inc
xchg
xchg
data16
mov
out
aam
in
mov
pushl
daa
pop
pop
in
lret
loope
mov
cmp
fstpl
cmp
movsl
dec
xor
mov
mov
dec
push
cwtl
in
setnp
and
popa
inc
cli
pop
pop
repz
cwtl
cmpsb
stos
jo
or
inc
cmp
lds
cmc
call
lahf
xchg
shll
mov
in
ljmp
mov
scas
dec
aas
jge
sub
jmp
mov
int
pop
loope
pop
fldcw
idivb
jmp
adc
mov
fdivp
lgs
daa
mov
aaa
inc
inc
je
cmp
push
mov
mov
add
cli
out
ljmp
out
push
mov
pop
popf
push
dec
int
push
sub
imul
pop
mov
sub
in
mov
sti
in
outsl
sarl
and
and
cs
das
test
data16
mov
pusha
jae
adc
sti
cltd
rcll
addr16
pop
stos
add
push
data16
push
mov
mov
cmp
mov
jmp
insl
dec
mov
jnp
jp
hlt
pop
fwait
mov
pop
and
iret
insl
xchg
inc
adc
xchg
adc
sbb
add
mov
ss
scas
cld
xor
pushf
cmp
ss
out
mov
pop
arpl
add
mov
enter
and
int
sub
xchg
imul
push
mov
iret
push
pushl
jge
pop
sbb
and
add
lret
loope
jmp
sarb
inc
jnp
shll
sub
pop
decl
fnstsw
mov
adc
loop
movsb
addb
add
mov
insb
and
sbb
push
pop
popl
std
pop
dec
sahf
inc
cmpsb
iret
sub
xor
push
jae
push
dec
xlat
pushf
add
cmc
jmp
pop
fsubs
and
pop
les
fwait
pop
sub
outsl
xor
or
cli
sub
lock
icebp
test
adc
loope
scas
add
pop
and
inc
or
or
mov
push
push
pop
push
das
ret
popa
or
xchg
aam
addb
fldenv
out
es
jmp
inc
sub
negl
push
sbb
mov
sbb
pop
or
in
cmp
mov
xlat
pop
mov
xchg
lods
pop
mov
in
xchg
jle
aad
mov
sub
xchg
mov
mov
mov
fsubl
stos
mov
xor
aam
in
pop
ljmp
repnz
xchg
dec
pop
pop
inc
sub
dec
insb
rcl
loopne
lret
outsb
push
out
push
and
jg
mov
mov
nop
inc
addr16
andl
or
mov
js
adc
mov
xchg
or
mov
cltd
rcll
les
lahf
loop
add
cmp
lret
dec
or
pop
pop
push
cmpsb
imul
cmp
xlat
lcall
adc
lds
lods
sub
add
push
cli
cmp
mov
mov
or
and
cmc
jns
pop
or
dec
in
sbbb
mov
xlat
xor
out
mov
ret
add
sbb
cmpsl
fisubl
out
ds
pop
xor
cmp
pop
xor
and
ja
cmc
and
std
scas
out
loope
sub
loope
sbb
dec
lods
aad
and
push
dec
ss
inc
add
dec
or
cmp
mov
jo
jnp
xor
fcoml
adc
add
xorb
dec
mov
scas
add
fsubrp
out
scas
push
adc
cmpsb
inc
test
sbb
xor
rcll
fidivl
pop
mov
inc
cmp
mov
rcr
dec
and
sub
fs
pop
add
or
xchg
test
jb
pop
jge
addr16
icebp
inc
lcall
aad
push
push
ret
ds
or
leave
aam
out
out
iret
ja
les
das
dec
sbb
add
jae
daa
xchg
je
in
incl
int3
inc
xchg
insl
fsts
std
sub
cmp
sbb
cmp
fldcw
pop
push
or
adc
loope
cs
push
adc
leave
stc
je
fsubl
mov
xor
loope
dec
lods
jl
xchg
pop
int
cmp
rol
in
add
jecxz
addr16
clc
xchg
faddl
dec
sahf
inc
jnp
mov
adc
ret
aam
mov
push
jno
mov
hlt
mov
aas
jb
inc
jo
add
cmp
push
xchg
jl
repz
sub
dec
in
leave
test
mov
mov
pop
xor
mov
or
mov
mov
icebp
xor
sub
mov
dec
mov
mov
push
stos
clc
nop
adc
and
pop
mov
aad
and
and
pop
mov
mov
je
mov
clc
sub
sti
inc
icebp
xor
mov
push
rcr
shrl
dec
add
xchg
or
subb
loop
push
xor
jnp
fistl
push
pop
xor
jae
push
fs
and
mov
adc
pop
pushf
inc
jmp
int3
mov
dec
xchg
loopne
lods
jge
inc
xlat
mov
cwtl
cmc
in
mov
xor
nop
add
push
icebp
inc
je
or
fdiv
cmp
dec
inc
stos
jns
insb
cltd
rcll
outsl
or
dec
imulb
test
loopne
push
push
lcall
adc
test
lods
and
adc
dec
adc
xor
sti
fcompl
cmp
fdivs
and
push
xchg
cmpsl
in
ja
sarl
test
jg
inc
inc
inc
aad
fcmovbe
xlat
jbe
sbb
pop
ret
inc
popf
ret
idiv
jp
addr16
cmp
jae
mov
mov
outsb
fsubrs
sbb
and
adc
sbb
repz
ret
jg
pop
int3
pop
fisttpl
imul
push
insb
cmp
add
mov
testl
xor
clc
sbb
jb
pushf
cli
les
push
in
mov
inc
and
mov
jge
in
pop
test
stos
and
lock
sbb
cwtl
inc
jb
fadds
xor
ret
scas
ljmp
push
and
push
sub
and
nop
push
inc
aam
mov
cld
lock
out
out
cwtl
mov
lods
add
dec
lahf
seto
out
aaa
and
xchg
sub
sti
pop
adc
sbb
jle
adc
scas
dec
subl
adc
fcoml
adc
call
xchg
test
jp
mov
push
pop
cmc
cmpsl
sub
fisubs
xchg
xor
fistl
inc
fstpl
mov
or
xor
pop
jmp
in
adc
movsl
sarb
outsl
mov
cli
inc
push
lcall
cmp
std
mov
icebp
movsb
out
pushf
and
dec
push
inc
lret
in
push
roll
rcl
enter
jle
lret
sub
mov
lock
mov
jmp
sub
lahf
jnp
pop
cmp
fadd
mov
mov
ds
fiadds
or
fisubrs
fdivl
xor
ja
ss
out
outsb
cs
cmpsl
push
ljmp
add
adc
and
dec
inc
mov
push
cmpsb
pop
dec
mov
fsts
sub
lds
or
mov
jbe
sbb
lret
fnsave
xchg
popa
lahf
inc
pusha
ffree
cmpsb
inc
cmc
iret
lods
popa
enter
icebp
add
aas
scas
sub
mov
nop
jae
clc
dec
jp
sub
cld
pop
ljmp
leave
mov
xor
repnz
inc
bound
cmp
sbb
movsl
popf
in
iret
loope
mov
mov
mov
adcl
xor
ror
and
es
dec
insl
pop
rolb
mov
sub
mov
push
bound
jmp
arpl
jno
sbb
je
je
cmpsl
jne
lods
mov
inc
mov
loopne
popf
sarl
daa
add
fadds
test
xchg
inc
mov
mov
ds
mov
fiadds
xchg
aad
loope
repnz
in
fcmovbe
rorb
cwtl
xchg
push
stos
xchg
out
jne
into
inc
sub
leave
loopne
shll
les
ficomps
std
inc
lock
mov
mov
xor
mov
fadds
add
inc
jl
cltd
add
fbld
hlt
inc
in
inc
nop
js
xchg
jl
pusha
cmc
lcall
jbe
int
out
sbb
idivl
ror
insb
ret
cld
std
mov
inc
divb
daa
frstor
loopne
ss
call
pop
jge
inc
sub
mulb
push
push
push
pop
cs
inc
outsl
jp
lea
out
jge
aas
test
into
in
js
repz
popa
into
cld
mov
pushf
cmp
push
pop
lahf
fnsave
inc
lret
add
out
add
adc
mov
daa
and
pop
shr
jbe
pop
dec
imul
into
mov
inc
jl
lret
daa
icebp
xor
cmpsb
andnps
ljmp
insb
jge
or
pop
xchg
cmpsl
mov
cld
bound
in
lahf
mov
insb
stc
in
stos
fwait
sub
jmp
inc
movl
out
rcll
test
add
insl
fstps
dec
mov
inc
imul
mov
jl
mov
mov
jns
lahf
fiadds
repnz
insb
mov
stc
dec
sarb
enter
dec
sub
add
stos
inc
test
sub
icebp
sbb
repz
cmp
and
xor
fidivrl
xchg
mov
stos
int3
xchg
mov
jg
repnz
add
push
lret
repnz
int
or
shl
push
scas
enter
jecxz
mov
dec
or
cmc
pop
dec
or
mov
sbbb
divl
and
stos
cmpsl
jno
stc
and
adc
lcall
sub
rcr
aas
or
sbb
lea
push
out
lahf
mov
xlat
push
cltd
mov
ja
cwtl
jle
mov
push
sbb
shll
gs
inc
movsl
test
jg
out
jp
jno
stc
xchg
movsb
push
int
insl
hlt
push
stc
jo
out
or
loop
lods
sti
inc
and
js
fisttpll
js
sbb
jb
pusha
cmp
pop
mov
cmp
testb
rcl
dec
fdivrl
lds
mov
in
dec
fldcw
das
mov
test
iret
ds
cmpsb
es
lea
adc
rorl
mov
jecxz
jge
orl
lods
in
pushf
es
sub
ljmp
sub
sarl
mov
xchg
mov
push
cmp
in
xor
mov
in
fld
lret
mov
pop
ficomps
sahf
fstl
push
add
push
xor
int
inc
dec
and
xchg
scas
lret
jae
inc
inc
ljmp
arpl
ret
orb
fstl
in
cmp
sarl
add
shlb
int
divb
jnp
jbe
insl
fimuls
sbb
aaa
push
je
and
adc
dec
test
inc
lcall
cld
cmpsl
adc
push
ret
mov
enter
hlt
jle
mov
push
xor
xchg
xchg
xchg
lahf
lcall
out
out
push
gs
fdiv
or
insb
mov
or
bndstx
popf
push
shl
mov
mov
dec
xchg
jge
inc
push
mov
add
mov
pusha
and
push
mov
pop
pop
fsubs
mov
pop
addr16
lods
je
push
sahf
mov
stc
ret
push
lahf
push
or
gs
loope
jle
push
arpl
fwait
mov
daa
push
stos
pushw
xchg
data16
push
out
ds
mov
popf
sub
cs
imul
leave
enter
pop
rolb
mov
xchg
daa
popf
cmpsb
clc
sahf
popa
inc
xor
inc
pop
push
push
inc
fiadds
daa
repnz
movsb
jp
lcall
push
test
inc
adc
rorl
sub
addr16
xchg
addr16
xor
loop
sub
in
mov
addr16
test
jbe
mov
push
push
in
ret
sahf
xor
jmp
into
jmp
popf
lods
in
pusha
add
out
sub
nop
mov
adc
cli
sbb
sbb
pop
sub
pop
sub
push
repnz
cmp
daa
add
leave
sub
repnz
aaa
pushf
sub
sar
push
cwtl
mov
incb
nop
mov
sub
mov
test
pop
icebp
add
xchg
mov
insl
lods
pop
inc
insb
les
lret
and
out
xchg
popa
cwtl
movsl
sub
mov
adc
inc
jo
xor
outsl
xor
out
js
sbb
jmp
cmp
shlb
bound
repnz
cmp
data16
cltd
dec
sbb
lret
pop
cs
mov
ss
xor
pop
push
sub
cmc
lret
dec
stc
nop
and
jnp
orl
sub
negl
daa
sub
xor
adc
pop
aaa
ret
outsl
ficomps
out
outsl
bound
adc
mov
das
pop
test
inc
sbbb
push
dec
xchg
insb
push
js
jo
push
sbb
xchg
lods
adc
jns
mov
paddd
ret
jecxz
pop
sahf
clc
imul
in
enter
dec
jae
call
nop
jle
push
movsb
and
das
lcall
mov
or
pop
add
mov
popf
push
cmp
movsb
cmp
or
jae
xor
out
adc
mov
add
xchg
movsl
in
repnz
sbb
dec
mov
cmpsl
sub
out
gs
cld
jl
pop
cltd
push
push
shl
in
repz
nop
and
or
mov
add
jne
lods
mov
sbb
or
xchg
ds
mov
loopne
in
mov
push
aaa
xchg
cltd
mov
pop
jno
sar
pop
es
xor
mov
cmp
xor
outsb
push
mov
es
les
xlat
and
stos
jl
iret
clc
mov
and
add
dec
mov
test
or
cld
mov
pop
lock
cmp
aad
mov
daa
xchg
rcll
fisttpll
cmpsl
lahf
inc
fdivl
xchg
sti
popa
xlat
sbb
inc
or
shl
push
mov
movsl
push
mov
add
mov
orl
jo
vmovdqa
xchg
xor
sub
rorb
xchg
mov
test
adc
adc
push
fmull
hlt
pop
push
jns
icebp
dec
sahf
ds
rcr
inc
jg
xchg
xchg
push
outsl
adc
into
loope
std
and
pusha
add
dec
fisubs
ret
gs
jns
testl
fmul
mov
fcoms
cli
jl
inc
mov
add
insl
jle
out
pop
sbb
repz
stos
or
and
mov
pop
cld
test
cwtl
rclb
ret
leave
xor
cmc
pop
push
cwtl
jmp
test
sbb
out
out
lret
fildll
cwtl
das
aad
fdivl
mov
or
xorb
arpl
mov
mov
adc
inc
mov
mov
lds
icebp
inc
jnp
push
adc
insb
xchg
adcl
fcom
insb
outsl
inc
push
pop
mov
subb
and
fstpl
shlb
fistpll
and
aam
mov
cwtl
inc
jle
jle
mov
and
and
pop
mov
mov
popf
and
xor
dec
dec
lcall
call
jge
xor
aam
jecxz
push
xor
cli
jne
xor
lods
pop
fsubp
shll
mov
sbb
mov
mov
cltd
xchg
add
add
in
inc
fs
cmp
and
push
ljmp
jg
pop
pop
lea
mov
cmpsb
lret
xchg
cmp
sbb
mov
push
in
daa
or
fistps
or
std
cmp
ret
cmpsl
jo
dec
add
or
cmpb
jmp
jle
pop
and
fisubs
leave
inc
xor
jecxz
add
sub
ret
and
mov
mov
xchg
adc
and
sbb
push
xorl
jno
lds
mov
repnz
cmp
popf
or
rclb
loopne
dec
pop
adc
push
popa
fistl
idivb
iret
jl
inc
mov
fisubrs
sbb
pop
add
aas
cmp
adc
in
out
push
fwait
std
push
cld
out
or
pop
add
nop
push
push
inc
and
js
jo
loope
xlat
mov
add
mov
movsl
mov
cmpsb
xor
enter
mov
dec
jmp
int
mov
xchg
push
pop
or
dec
or
repz
fwait
xchg
mov
test
andb
loope
enter
or
cli
jo
mov
xor
pop
sbb
adc
push
loopne
mov
call
xchg
pop
jg
sub
cli
lahf
push
pop
dec
fimuls
mov
mov
push
pop
outsb
andb
pop
adc
shll
or
std
ss
mov
jbe
xchg
mov
xchg
outsl
sahf
out
xchg
push
inc
ret
inc
pop
jge
movsb
pop
loope
inc
lcall
xor
sub
mov
ret
cmc
loope
daa
dec
cmpsl
and
inc
test
iret
add
inc
std
jno
add
xchg
sub
movsl
mov
fbstp
and
aam
adc
push
inc
loope
clc
lret
js
cs
fucom
pop
into
and
dec
sbb
mov
xor
loopne
leave
xor
pop
mov
mov
mov
imul
inc
sub
jo
imul
shrl
aas
leave
mov
mov
mov
mov
push
cmpsl
in
pop
adc
idivl
in
lods
mov
pop
imul
jp
push
cltd
push
xchg
push
mov
push
ja
shlb
std
scas
cwtl
dec
mov
mov
out
aaa
add
mov
jp
sub
out
push
mov
xor
or
setbe
stc
test
xchg
cmp
rorb
and
invd
movsl
sub
jge
xchg
mov
cli
jge
inc
test
fdivp
ret
pop
sub
in
jmp
mov
shl
sbb
cmc
inc
repnz
jo
or
clc
lods
or
leave
sbb
sti
cmc
mov
cmpsl
nop
dec
loope
lahf
pop
jecxz
sbb
pop
and
sti
adc
notl
loop
stc
sbb
cmp
mov
pop
outsl
push
sub
and
cwtl
ficoml
mov
jae
add
repz
lcall
ljmp
ret
xlat
sbb
fisubrl
push
push
je
mov
cli
mov
das
bound
lods
addb
pusha
pusha
inc
les
rcrl
push
and
aam
jge
fldt
and
mov
popf
push
mov
push
add
out
sub
stos
mov
mov
dec
push
test
mov
inc
sub
mov
xchg
lahf
xchg
mov
inc
cmc
cs
cmp
push
xchg
cld
add
lret
dec
outsl
push
pop
aaa
jge
xor
test
rcrl
pushf
jl
pop
lock
xchg
inc
xchg
adc
dec
push
into
dec
or
pop
and
popa
or
in
mov
addl
clc
mov
loope
leave
sahf
push
adc
fsubr
dec
mull
mov
mov
rcrb
sub
jge
insl
xlat
sub
adc
push
into
lods
lds
rorl
scas
push
out
sti
ret
cmp
xlat
jb
test
lret
lcall
aam
repnz
and
sub
lods
add
xchg
jl
and
jbe
arpl
mov
shrb
negl
jp
xchg
ret
inc
push
push
sbb
xor
push
daa
ret
jp
mov
das
xchg
add
add
dec
adc
mov
shl
int3
add
daa
and
or
in
cmp
in
sub
mov
jo
ljmp
out
mov
aam
sbb
loope
pop
mov
es
inc
mov
mov
js
adc
push
xchg
decb
push
ss
add
imul
inc
inc
cs
test
test
jmp
andl
jo
push
sti
sbb
sti
mov
and
mov
sbb
pop
sahf
pop
insb
inc
jns
in
mov
or
sbb
pop
outsl
mov
aaa
fildl
mov
int
mov
sub
fnstcw
pop
stos
cmc
pop
xor
je
jno
out
je
push
repnz
insl
outsl
and
inc
cmp
pop
cmp
dec
es
shlb
pushf
cmp
jne
cli
add
sti
add
jb
test
cmp
daa
je
xchg
in
roll
add
ss
addr16
xchg
dec
repnz
mov
aas
mov
ret
sbb
jle
xor
add
mov
leave
cli
adc
es
push
nop
adc
xchg
inc
mov
repz
test
add
shr
movsl
adc
aam
jb
cmp
ficoml
jp
dec
push
cs
or
xlat
fidivrs
mov
xor
out
push
xchg
mov
sbb
push
sub
and
aad
adcb
rolb
push
jbe
fildl
jo
cld
sub
mov
adc
cli
js
mov
int3
sbb
int3
je
out
cmp
jb
bound
xor
sbb
ret
and
les
xor
xchg
jo
mov
jne
adcl
and
sub
xchg
add
shll
mov
dec
outsl
pop
cmp
repz
fucom
pop
call
nop
add
jo
xchg
aam
nop
jno
mov
pop
xlat
xchg
dec
pop
rorb
enter
add
imul
popa
jbe
sahf
jno
mov
jno
lds
push
mov
cmp
sbb
aaa
push
repnz
and
xor
mov
les
mov
mov
pusha
and
and
sub
jns
mov
andl
mov
insl
jp,pn
mov
push
mov
or
pop
ret
sbb
push
push
ret
pop
inc
cmovae
std
xor
or
sti
lcall
int
mov
stos
outsl
movsl
push
jnp
ss
pusha
sbbl
adc
xchg
push
add
test
push
adc
jmp
shll
mov
adc
sbb
mov
or
hlt
or
mov
mov
fs
xor
aam
enter
cmp
test
scas
call
popl
test
out
ret
mov
fcompl
cmp
movsb
out
cwtl
sub
mov
std
enter
out
add
insl
shll
xchg
xor
test
inc
ljmp
mov
inc
lcall
mov
pop
hlt
bound
stos
andl
popa
popa
jp
sbb
mov
pop
mov
jl
out
imul
int3
lods
repnz
push
xor
and
and
add
scas
negl
add
sbbb
mov
cmp
push
lods
push
inc
call
jp
mov
lahf
rcl
ja
mov
jg
and
push
popa
mov
pop
cmp
mov
mov
fdivs
push
scas
jne
gs
aas
dec
cwtl
xor
push
push
mov
mov
outsb
lds
stc
cld
ficompl
cmc
xor
out
mov
jbe
mulb
push
mov
mov
rolb
aam
sub
mov
inc
jne
mov
jmp
cmc
push
rcrl
and
lahf
cmp
push
lret
mov
sub
jnp
cmpsl
mov
sub
or
jb
mov
call
xor
mov
xchg
adc
movsb
sbb
mov
xor
lods
int3
cli
sbb
add
andl
inc
subb
ss
inc
stos
mov
loope
int
push
cmp
sub
jecxz
test
mov
add
fisubrs
cmp
or
aad
xor
sbb
and
xchg
add
es
das
adc
icebp
aas
sbb
ljmp
iret
test
fidivl
mov
nopl
mov
std
mov
mov
sbb
cmp
cs
push
dec
add
imul
mov
je
sbbl
mov
push
insb
clc
outsl
sar
and
jne
js
jp
pop
mov
sbb
loopne
or
mov
mov
pop
dec
rclb
xchg
cld
test
int
sub
fabs
jnp
iret
test
pusha
sub
out
mov
jle
push
mov
xchg
cs
sbb
loopne
adc
adc
jle
jle
jp
movsb
cmc
sub
mov
and
std
cmp
add
xchg
or
into
cmp
sbb
cld
mov
add
mov
inc
inc
movb
sub
rorl
jnp
das
incl
cmp
stos
or
pop
test
xor
add
into
mov
xchg
rol
cltd
in
adc
in
aaa
push
pop
mov
mov
add
jb
leave
insb
ja
sbb
and
mov
lea
fcoml
mov
inc
sbb
loope
adc
and
jl
add
cmp
das
les
pop
sbb
cmp
mov
pop
es
cmp
jns
popf
and
push
xor
cltd
cmp
stc
aaa
mov
jl
inc
mov
jmp
jae
daa
dec
mov
aad
cwtl
inc
mov
addr16
fidivrs
and
mov
int3
insl
jbe
int
mov
gs
sub
fcoml
push
add
pop
fwait
loop
lret
call
fsubl
push
or
popf
inc
push
sti
aad
enter
cmp
aad
fldl
cli
mov
repnz
cmp
adc
out
xor
push
pop
mov
add
inc
push
jnp
into
cmpsl
into
mov
dec
in
das
push
pop
jae
js
jle,pn
out
out
add
cmp
sbb
std
stos
cld
sub
ret
pusha
fisubrs
addr16
mov
ret
sbb
pushf
scas
daa
test
xchg
outsb
popf
sub
inc
mov
repnz
mov
pop
add
aad
pop
stos
and
sbbb
adc
add
rcrl
mov
adc
movsl
or
add
or
and
xor
test
inc
fs
aas
inc
movsl
fs
adc
mov
adc
call
push
sub
insb
sbb
test
in
nop
mov
lahf
mov
dec
pop
sub
adc
leave
arpl
fnstsw
loope
leave
iret
mov
inc
xchg
ja
and
lock
sub
sub
fstpl
xchg
add
arpl
xchg
inc
cmp
sub
pop
cmp
sbbb
daa
and
push
mov
sub
mov
jno
ficoml
cmc
lods
and
insl
mov
and
or
and
fisttpl
push
or
les
cmp
mov
int3
out
mov
call
push
mov
mov
lds
pop
cmp
idivb
divb
or
insb
jmp
outsb
mov
dec
popf
ss
and
inc
pop
mov
inc
in
xchg
adc
sub
scas
rclb
or
int
mov
repnz
push
pop
pop
je
or
mov
xchg
mov
shr
dec
cmpl
addb
inc
mov
mov
cmp
lock
clc
ds
test
pop
push
std
test
add
call
notl
loope
cmp
xlat
aas
sbb
mov
movsl
icebp
or
jecxz
out
push
aaa
add
cmpsb
int
xlat
cmp
inc
mov
adcl
mov
insl
mov
loopne
cmpsl
shl
jb
ja
sub
sbb
pop
mov
mov
lea
sub
inc
in
aad
inc
adc
es
imul
jno
xor
and
cwtl
rcr
stos
clc
cmpsl
inc
inc
js
in
xchg
js
cmp
mov
int3
scas
mov
add
sbbb
mov
xor
push
xor
sub
mov
sbb
mov
cmp
jnp
or
xchg
push
aas
xchg
adc
xchg
and
stos
xor
push
pushf
int3
cli
std
cmp
or
dec
je
xchg
xchg
pop
popl
xchg
js
xchg
pop
xchg
nop
dec
adc
push
cmp
dec
xchg
fwait
pop
push
pop
imul
push
or
adc
fildll
lret
jp
push
sbb
cmp
jns
out
shrl
mov
cmc
xlat
push
mov
roll
cs
out
leave
hlt
sbb
pop
pop
hlt
pop
test
sub
ficoms
adc
out
inc
sub
fiadds
pop
xor
jb
dec
int3
lcall
xor
add
aam
xor
inc
adc
xchg
loop
cmp
push
mov
test
xor
inc
cmp
ret
lcall
dec
sub
inc
inc
adc
mov
jbe
arpl
sub
aad
mov
jl
pop
mov
xor
fwait
mov
inc
mov
lods
jns
hlt
jb
jp
fs
shr
inc
shll
jae
jo
es
xchg
pop
sub
xchg
xchg
mov
xchg
mov
pop
ds
and
int
xor
push
sbb
leave
or
lods
test
sbb
push
mov
lds
negb
jge
push
xor
inc
and
push
mulb
rolb
rcrb
jp
jo
xchg
dec
inc
notb
data16
test
push
dec
rolb
orl
fidivs
push
inc
or
call
mov
sti
add
push
out
push
into
xchg
sub
mov
cmc
fwait
mov
inc
test
jae
jl
xchg
cmp
jo
push
rcrb
xchg
lds
mov
aad
loope
out
jge
push
jg
mov
ja
mov
adc
enter
adcb
dec
push
jecxz
push
mov
inc
jp
ficomps
xchg
jge
cmp
stos
leave
adc
mov
push
lds
or
shlb
xorl
data16
push
sub
dec
mov
adc
or
xorb
push
cmp
jmp
fcmovnb
pop
adc
and
mov
je
adc
mov
repnz
or
cmpsl
pop
mov
dec
mov
mov
fdivrl
aaa
int
mov
ja
xchg
and
xchg
jmp
sub
cwtl
nop
adc
out
jle
mov
jno
xchg
icebp
jne
or
pop
pop
inc
mov
mov
shrl
push
xor
xchg
and
sarl
mov
andb
pop
cmc
fildl
inc
sti
push
adc
jo
add
fsts
stos
xchg
xor
and
push
mov
jae
inc
push
pop
filds
hlt
mov
aaa
mov
ja
ret
jbe
dec
fcomps
pusha
sbb
clc
pop
push
popl
test
cs
cmpb
outsl
jo
in
jge
cld
js
stos
aas
test
in
jg
pusha
mov
test
xlat
and
push
ret
push
cmc
aaa
shll
fs
xchg
or
daa
aaa
lret
rorl
mov
notl
sub
mov
lea
push
mov
je
jge
or
ja
in
cs
sbb
out
call
sbb
cmp
mov
xchg
cmp
std
ret
sbb
enter
xchg
pop
lock
push
jo
arpl
jp
dec
mov
adc
outsb
je
imul
loop
sub
inc
cmp
mov
lds
dec
dec
mov
ss
xlat
xchg
insl
testl
lds
enter
dec
xor
iret
int3
fdiv
insb
add
stos
pop
cmp
ret
jmp
popa
out
sbb
in
xchg
sbb
push
ja
imul
fiadds
out
aam
xor
xchg
and
mov
notb
imull
push
testl
and
cs
ljmp
sbb
xor
mov
icebp
jno
jne
or
testb
adc
aad
cmp
sbb
mov
inc
dec
cmp
out
leave
gs
scas
jmp
inc
mov
add
std
ret
push
sbbl
and
clc
xchg
or
jecxz
sub
cmp
add
rorl
mov
test
rcrl
int
sub
rolb
insl
mov
or
mov
dec
dec
outsb
ret
sub
int
neg
mov
jp
or
subl
or
sub
dec
popa
decl
jge
jne
lods
repnz
fs
xor
push
sahf
jbe
xchg
in
mov
aam
enter
adc
push
leave
mov
aad
cmp
outsl
and
pushf
sbb
loopne
sub
pop
dec
push
jno
cmp
sub
push
fisttpl
and
add
xor
cmpsb
cmp
addl
jg
dec
rolb
jno
in
lcall
rcr
int3
ffreep
mov
push
idiv
nop
aam
ret
xor
pop
insl
mov
jmp
rolb
inc
int
add
shl
xchg
fcoml
popf
sub
jne
sub
fldl
jl
sub
sbb
mov
test
mov
push
mov
sub
rorl
cs
mov
hlt
movsb
jb
pop
or
outsl
jae
mov
lahf
jnp
cmp
xchg
sbb
icebp
adc
and
sarb
out
lods
xor
rcr
popa
aam
stos
mov
repnz
lods
shr
sahf
out
bound
fs
xor
inc
jne
adc
scas
dec
call
testl
mov
push
bound
inc
adc
jnp
mov
fbld
rolb
jb
mov
xchg
cmpsl
mov
sbb
xchg
fistpll
mov
add
fcmovbe
pushf
test
mov
xchg
cmpsb
and
xlat
push
sub
aas
inc
sub
mov
push
xchg
jno
call
ss
jo
sub
add
mov
sbb
inc
outsb
xor
test
mov
fwait
movsb
loope
je
or
jno
pop
sti
jo
cs
test
and
cwtl
adc
flds
mov
std
js
adc
aad
dec
pop
push
aad
fmul
lret
iret
sarb
stos
lahf
xor
ja
mov
out
lret
push
fwait
mov
lods
aad
and
call
call
inc
and
int
and
into
push
rol
push
jmp
xchg
hlt
xchg
sbb
inc
sub
mov
or
sbb
cmpsl
scas
stc
cmc
inc
pop
mov
popf
mov
cmpsl
pop
xor
cltd
push
test
add
pop
mov
mov
mov
fcom
mov
test
sti
or
xchg
ljmp
pop
fs
add
adc
rcrb
int
aad
sbb
mov
xor
mov
ds
js
pop
jno
mov
scas
push
loope
mov
test
sub
push
addr16
test
cs
scas
and
lock
add
movsb
mov
xchg
inc
adcl
fstp
mov
pop
or
fldl
fprem
xlat
adc
xchg
lods
mov
imul
hlt
jp
hlt
adc
inc
stos
adc
sbb
call
xchg
cmp
insl
fldt
stos
stos
pop
mov
std
sub
pop
sbb
divb
ds
xchg
popa
cmpsl
push
repnz
mov
mov
in
mov
push
xchg
mov
xchg
dec
fs
lahf
enter
xor
adcl
jne
mov
cli
test
lea
mov
mov
leave
dec
xchg
std
sti
es
sbb
mov
xchg
dec
push
xchg
inc
scas
xor
imul
dec
inc
mov
lahf
xor
imul
js
out
adc
test
xor
add
mov
js
add
ror
or
outsb
push
rcl
gs
sub
mov
sub
loope
cwtl
push
xchg
xlat
repz
and
pop
test
jno
gs
push
aaa
sub
mov
mov
nop
inc
out
into
sbbl
jmp
pop
mov
test
inc
dec
mov
dec
mov
test
mov
subl
push
rorl
mov
or
je
or
ds
pop
and
xor
xchg
xor
pop
inc
addr16
imul
movb
movsw
add
scas
dec
push
adc
flds
pop
inc
jg
sbb
loop
sub
lret
fisubrl
mov
test
cli
mov
fsubrl
sub
cltd
sbb
xlat
lds
cmp
sub
jo
jno
push
dec
aam
shll
test
pop
sbb
pop
pop
hlt
popf
add
xlat
test
cmp
sti
jp
inc
add
daa
xchg
lcall
mov
out
mov
lret
addr16
lods
pop
ret
mov
xor
pusha
or
push
cli
ror
lock
xchg
mov
dec
or
jo
sbb
jle
sbb
jecxz
pop
xchg
sbb
mov
fbstp
fmull
push
clc
xchg
push
push
dec
push
enter
cmp
mov
ret
mov
push
lret
mov
ret
inc
dec
mov
jmp
push
xchg
push
sbb
inc
repz
cs
and
push
adc
fsubs
ljmp
pop
mov
idiv
xchg
in
adc
test
mov
push
dec
inc
mov
push
mov
adc
dec
push
js
or
andb
mov
fs
lea
add
out
push
test
jae
jmp
jecxz
test
in
sahf
mov
imul
add
and
outsl
movsl
push
scas
add
push
pop
ljmp
lock
repz
mov
rclb
sbb
jl
cwtl
and
cmp
lahf
orb
cmp
test
xlat
sar
push
mov
push
mov
cmp
gs
in
je
cmpsl
cmpsb
jg
enter
or
mov
jb
or
push
sti
sub
push
ficompl
dec
int
cmp
and
xchg
mov
pop
mov
std
mov
sbb
hlt
scas
in
xor
lock
dec
scas
pop
daa
xor
add
sub
arpl
mov
add
test
push
lock
mov
xor
inc
dec
clc
pop
jmp
push
aam
fcompl
ss
xchg
mov
mov
sbb
mov
add
shl
push
mov
adc
pop
xchg
je
and
jl
pop
sbb
stc
cmpsb
ljmp
xchg
loope
int3
dec
movsb
and
aaa
mov
xor
and
jnp
shlb
lcall
add
adc
pushf
jnp
pushf
fldl2t
and
jp
xchg
xor
lods
ja
fsub
into
and
movzbl
bound
add
stc
add
mov
mov
cld
ret
pop
pop
mov
pop
xchg
arpl
icebp
cmp
movq
mov
in
data16
sarl
cltd
and
outsb
mov
outsl
and
lods
xchg
mov
push
adcl
cmc
das
stc
idivl
je
or
xor
dec
leave
imul
in
mov
dec
mov
aaa
repnz
inc
dec
sti
cmc
in
mov
js
shll
sbbl
add
mov
in
enter
aad
xchg
and
loop
xchg
ljmp
pop
mov
mov
outsl
mov
clc
inc
xor
icebp
cmpsl
or
outsl
ljmp
lss
lds
lock
sbb
ror
xor
cli
jo
sahf
fisttps
push
flds
dec
ret
popf
xchg
rclb
or
daa
mov
push
mov
mov
inc
dec
adc
xor
and
push
popa
testb
mov
enter
mov
or
sbb
scas
or
ljmp
sarb
mov
push
dec
repz
aas
xchg
imul
fdivl
xchg
nop
rcrl
inc
imul
mov
xor
mov
xchg
shrb
fimuls
fisttpll
mov
jb
das
nop
fisubs
pop
adc
out
pusha
jbe
dec
cwtl
std
inc
cmp
in
cmp
sub
sub
in
xchg
cmp
mov
inc
cmc
pusha
subl
idivl
xor
int3
sub
sahf
push
pop
jbe
mov
push
repnz
loop
pop
add
leave
inc
movsl
xor
out
dec
sahf
inc
shr
adc
pop
mov
push
adc
pop
xor
cwtl
and
fwait
pop
sbb
cs
in
adc
movsb
xor
sbb
hlt
test
fdivrl
mov
int
das
mov
add
out
outsb
inc
dec
and
push
xor
roll
jno
xchg
and
add
in
test
cmp
pop
add
mov
pop
into
jmp
or
pop
pop
mov
aaa
mov
pop
mov
or
aaa
mov
dec
pusha
lcall
in
add
rolb
add
adc
arpl
mov
adc
imull
mov
and
mov
sbb
gs
lods
xchg
dec
xchg
inc
cmp
int
inc
or
xchg
inc
dec
mov
repz
sub
jnp
mov
push
mov
sbb
push
js
lcall
sub
push
cwtl
shrb
jg
fistpll
sub
xchg
jle
les
push
sub
nop
jae
push
adc
cltd
int
movsl
nop
mov
jae
bnd
aam
insl
mov
icebp
outsl
lahf
mov
stc
movsb
cmp
jno
rcl
jmp
and
jge
push
iret
ss
jmp
jecxz
push
pop
mov
fucomip
gs
push
mov
lahf
into
mov
push
ret
cmp
adc
bound
rol
inc
in
add
inc
jbe
sbb
dec
loope
adc
sbb
pop
sbb
outsl
lret
mov
xchg
loopne
inc
jg
adc
pop
daa
xor
cmp
ror
lock
iret
daa
lret
mov
xor
sbb
and
xchg
js
pop
sbb
ds
cmpsl
sbb
test
mov
into
movsb
or
lcall
xor
pop
cltd
pop
sbb
mov
pusha
roll
pop
jl
into
sbb
leave
jle
sub
xlat
cmp
les
pop
cmpsb
push
lahf
nop
add
mov
push
mov
insl
mov
add
lret
mov
cli
loop
fcomps
cmp
xor
xchg
mov
xchg
mov
cmc
jle
jmp
inc
gs
divb
or
adc
fidivrl
and
push
in
xlat
adc
fistps
ss
scas
xor
push
add
adc
jb
shll
das
cmp
sbb
sbb
inc
cli
inc
cmp
mov
pop
fs
sahf
jmp
loopne
jge
outsl
orl
repnz
jl
rcrb
adc
enter
inc
imul
and
leave
pop
cli
mov
add
dec
sbb
leave
imul
rolb
pop
xor
mov
inc
sub
rcrl
das
and
pop
and
dec
je
mov
and
cmp
mov
jmp
add
jnp
or
push
xchg
dec
or
sub
fcmovne
mov
pop
fadds
repnz
aaa
test
mov
pop
xchg
fs
add
sahf
xor
in
inc
aad
nop
lea
xchg
int3
add
xchg
fs
adc
or
arpl
pop
inc
imul
fwait
mulb
pusha
or
mov
push
aas
or
fldt
adc
lea
sbb
inc
adcl
idivb
xor
mov
clc
popa
lahf
jne
in
int
fbstp
push
mov
inc
loopne
daa
push
hlt
into
nop
sbb
std
arpl
outsb
sub
push
xchg
out
dec
inc
dec
nop
imul
popf
cmpsb
call
iret
inc
mov
jmp
lret
mov
movl
test
jb
adcb
enter
data16
mov
pushf
mov
adc
or
xor
in
pop
jno
data16
dec
add
add
repnz
sbb
sbb
ret
test
xchg
sti
push
mov
mov
sub
int3
fdivr
sbb
mov
shlb
pop
ficoms
stc
lahf
out
xchg
fidivrl
cli
jmp
dec
idiv
xchg
cs
and
pusha
in
nop
sub
pop
pusha
scas
mov
inc
mov
nop
xchg
xchg
push
cmp
lahf
pop
insb
mov
arpl
cmp
pop
xchg
int
or
push
test
in
lcall
rorb
aas
arpl
mov
push
loop
push
and
xchg
push
mov
cli
pop
inc
js
push
scas
adc
mov
cld
out
inc
lahf
fidivrl
rcrb
nop
sub
inc
jnp
daa
imul
cmp
test
adc
adc
lods
int
ljmp
rcl
jno
imul
xchg
aas
mov
jno
xor
mov
and
or
cltd
push
cmpsl
shll
cld
and
into
mov
push
xchg
scas
xor
mov
cli
inc
fwait
insl
xor
push
lahf
fdivs
lcall
iret
cld
stc
xchg
lds
test
dec
nop
shrl
ret
rorb
xchg
pop
push
dec
or
int
lret
call
adc
mov
inc
or
iret
or
test
xchg
or
dec
xchg
or
rcl
loop
mov
popf
adc
stos
sarb
push
xchg
push
mov
and
clc
adcb
inc
cs
xchg
push
adc
ds
popf
mov
sub
mov
jmp
jae
in
add
sbb
outsb
sbbl
xor
inc
cmpsb
add
or
loope
leave
aad
inc
ret
jmp
xchg
or
add
ljmp
ret
mov
imul
dec
push
arpl
sub
jg
jae
jmp
and
or
aaa
inc
xchg
add
mov
jnp
call
push
sahf
pop
je
dec
aam
pop
xor
arpl
cvtdq2ps
sub
pop
mov
sub
dec
lods
test
int
icebp
movsb
cmc
std
icebp
jecxz
push
pusha
adc
sti
add
stos
add
addr16
roll
xchg
fwait
fs
xchg
movl
sar
daa
sbb
stc
adc
or
sahf
cmp
mov
fmuls
mov
jecxz
icebp
push
lret
cmp
or
xor
movsl
gs
sub
inc
out
push
sub
inc
add
fstp
shll
mov
stc
mov
dec
jno
cmp
and
jo
pop
in
mov
dec
mov
in
mov
xchg
add
and
clc
repnz
fwait
and
add
loope
adc
mov
ss
inc
clc
imul
cmp
and
mov
aad
sub
mov
pop
in
inc
sahf
lcall
rorb
rorl
jae
insb
or
xchg
jno
cmp
jmp
aad
sbb
mov
or
and
mov
dec
cmp
popa
repnz
xchg
jle
mov
mov
sti
and
cld
adc
sub
cwtl
cmc
sbb
out
and
or
sahf
fisubl
jb
cmpsb
gs
icebp
mov
inc
pop
jns
jno
dec
aaa
das
cwtl
add
xor
xor
mov
ret
mov
add
dec
les
and
cmp
pop
cmpsl
fildll
into
nop
imul
les
imul
mov
xchg
cmp
mov
je
leave
push
cs
adcb
mov
and
adc
and
in
pop
adc
pop
pusha
cli
cs
push
jae
aas
lock
pop
pop
cmpsl
push
cltd
out
jecxz
loop
dec
cmp
and
test
imul
mov
fldl
cmpsb
rcrb
mov
scas
popa
mov
out
xchg
mov
cwtl
insb
mov
cmp
lret
jno
mov
pop
lock
dec
scas
test
cmp
stos
jle
stc
sub
xlat
ss
test
pop
push
ss
mov
pusha
dec
sub
bnd
cltd
sub
fisubs
rcrb
cmc
sbb
rorb
setge
xchg
mov
xor
imul
mov
push
jg
xchg
push
test
jns
lea
fisubrl
int3
imul
lea
fsts
pop
iret
es
mov
or
xchg
dec
movsl
cmp
sbb
sbb
mov
mov
je
insb
cltd
orb
xor
mov
lret
mov
popa
scas
clc
test
cld
sbb
cmp
mov
outsl
pop
xchg
xor
mov
int3
rcr
ret
lods
fcomp
and
sbb
jb
cltd
cli
js
dec
and
mov
adcl
sbb
dec
pusha
add
sbb
or
xchg
inc
or
pop
adc
cmpsb
cmp
jb
xchg
fsubs
mov
add
mov
jecxz
ret
std
sbb
sub
cmp
das
adcb
push
jl
js
adc
clc
xor
push
in
inc
mov
dec
dec
sub
xchg
dec
push
aaa
mov
dec
clc
cmp
fdivr
push
ja
rcrb
or
cs
outsl
daa
sahf
add
or
leave
inc
subb
adc
jmp
mov
or
pop
iret
push
dec
inc
mov
lods
xchg
inc
lods
pop
insl
push
fisubrl
shrb
push
dec
cld
nop
icebp
add
add
push
push
out
cmp
leave
ficomps
in
ds
dec
dec
popf
or
insl
cmpsl
addr16
dec
mov
loopne
dec
divb
inc
add
in
in
jno
aad
adc
push
xor
or
fldt
add
cmpsb
and
jbe
and
xchg
mov
xor
in
loopne
mov
mov
iret
mov
and
xchg
fstpt
xchg
fcomp
out
sbb
mov
adc
xchg
repz
iret
adc
mov
sub
mov
sbb
pop
mov
daa
sbb
sahf
mov
cmp
enter
mov
fisubs
in
pop
lods
mov
pop
ljmp
pop
mov
icebp
mov
xor
pop
push
pop
mov
inc
adc
xchg
enter
pop
jmp
and
and
aas
mov
add
mov
push
scas
mov
xor
outsl
mov
shlb
adc
cwtl
mov
cs
sbb
popa
repnz
add
sbb
adc
mov
push
sub
mov
jmp
and
int
mov
lret
repnz
adc
loopne
pop
mov
lods
pop
mov
into
test
insl
xlat
push
gs
jecxz
iret
or
mulb
add
rcrl
sub
loopne
mov
or
paddw
jns
sub
push
in
cltd
jo
jge
push
inc
in
in
xor
dec
mov
jp
daa
in
inc
pusha
sub
stc
inc
test
movsb
in
inc
fwait
outsb
mov
mov
sahf
les
jge
jbe
mov
add
mov
rolb
shlb
add
push
pop
popf
xchg
add
push
inc
in
fcompl
adc
fcmovbe
push
lret
pop
dec
insl
loop
leave
mov
mov
mov
xor
inc
or
xchg
iret
xchg
lret
sub
shrb
cli
xchg
cmp
jnp
mov
leave
mov
and
dec
xlat
cmp
cmp
addb
sbb
movsl
stos
imul
inc
test
pop
std
int3
cltd
pop
int3
dec
adcl
dec
dec
jnp
inc
aad
dec
fwait
cmc
pop
dec
adc
jecxz
fbstp
hlt
mov
pop
ja
stc
iret
mov
movsl
push
jno
and
lret
and
lods
or
stos
xor
pop
adcl
ds
icebp
test
pop
mov
mov
dec
xor
icebp
fadd
ret
mov
std
lea
inc
adc
add
push
add
rorb
fwait
adc
fdivl
push
sub
dec
push
lds
fwait
aad
mov
nop
adc
mov
sbb
and
xchg
and
lock
mov
rorb
cmp
push
sbb
ja
mov
xor
and
sbb
out
jg
add
xor
outsb
inc
cmc
gs
dec
mov
fincstp
dec
imul
loopne
xchg
jne
mov
pop
adc
loope
mov
adc
mov
xchg
cmp
in
dec
push
sar
mov
test
lods
loope
mov
and
and
arpl
prefetch
or
jg
insb
bts
test
inc
cmp
or
lahf
pusha
ja
enter
sbb
mov
lahf
test
jge
je
mov
repnz
sub
adc
lret
dec
js
adc
mov
sbb
lcall
sbbb
mov
ss
cmc
mov
repnz
pop
fs
test
lret
dec
or
and
push
adc
cmp
push
fwait
je
out
inc
mov
pop
pop
add
aaa
inc
out
sbb
pop
mov
rcrb
or
mov
push
add
sub
jns
out
dec
jge
jo
int3
xorb
push
enter
xor
repz
adc
sub
shrl
jne
test
inc
lds
or
aad
jp
push
xor
lret
fsts
or
sbbl
xor
pop
les
add
adc
inc
sbb
pop
xor
movsl
adc
sbb
mov
and
jne
sbb
or
adc
stos
cmc
imul
or
mov
inc
jmp
out
cmpsl
sbb
and
and
fs
mov
fcoms
loop
in
int
mov
jg
adc
ss
xchg
jecxz
dec
jle
xchg
cli
or
loopne
cmp
add
or
xor
pop
sbb
fwait
cli
daa
xchg
es
mov
push
shl
sti
addb
std
testl
std
lcall
adc
and
fistpll
cmp
mov
xor
and
mov
rcll
addb
popf
dec
out
repnz
jecxz
mov
dec
sbb
subb
jae
lcall
mov
inc
loopne
daa
dec
jns
iret
test
jle
mov
nop
add
jge
add
out
cmp
shr
push
popa
les
cmpsb
fimuls
mov
dec
fsubp
movsb
int3
push
aaa
cmp
fs
ds
arpl
inc
xchg
xchg
gs
ja
or
add
or
mov
test
mov
dec
insb
xchg
push
push
imul
mov
fwait
leave
sub
sbb
int
repz
lret
mov
push
and
gs
fwait
jp
push
dec
jno
lcall
pop
imul
jns
mov
dec
or
ds
vmovq
sub
mov
sbb
leave
mov
ja
in
lods
add
cmpsb
mov
in
rorb
mov
rolb
ffree
jno
sub
out
jnp
mov
lret
mov
ja
arpl
lds
sahf
loope
pop
ret
cmc
loop
xor
out
sbb
push
daa
sub
negl
adc
in
jmp
shll
push
dec
es
mov
xorb
je
addr16
push
ret
xchg
mov
fisubl
xchg
xchg
inc
xchg
mov
mov
cmc
jecxz
sti
out
push
cmp
leave
push
sub
sbb
xchg
jae
cli
lods
test
jp
into
cltd
mov
and
mov
leave
cmp
in
popf
out
push
fnstsw
or
jo
jmp
mov
aad
mov
pusha
fldenv
dec
dec
insb
icebp
inc
mov
in
push
push
ret
mov
mulb
cmc
sbb
cltd
push
sbb
int
lods
in
mov
inc
lods
xor
inc
pushf
popf
test
daa
subb
daa
mov
jecxz
mov
cmp
xchg
ds
push
pop
xchg
jg
sub
mov
mov
clc
movsl
jae
leave
sbb
push
test
decl
gs
mov
dec
fidivl
sbb
daa
pusha
scas
dec
xchg
cs
pop
push
pop
call
stc
lods
inc
outsb
mov
stos
clc
and
mov
dec
jmp
andl
lock
mov
adc
not
aad
outsb
jno
or
inc
adc
call
mov
sbb
ret
push
test
jecxz
lcall
test
jb
pop
sbb
jo
sbb
xchg
add
sahf
xchg
fstl
hlt
clc
mov
xor
pop
hlt
lret
xor
rol
mov
inc
fwait
inc
sub
ja
seto
das
std
ss
aam
mov
aas
mov
mov
pop
xchg
imul
aad
imul
aad
outsb
test
pop
pop
pop
repnz
stos
cltd
and
xor
adc
mov
mov
xchg
xchg
and
mov
cltd
cmp
insb
insl
negb
in
pop
aad
repnz
pop
adc
mov
repnz
outsl
lds
aam
out
mov
outsl
icebp
imull
dec
adc
cmp
push
pop
and
sbbb
pop
enter
cltd
ljmp
imul
xchg
add
cmp
ret
or
fs
loopne
gs
jmp
iret
sub
fisttpl
das
subl
inc
pop
sub
ret
cmp
and
xor
mov
xchg
lods
ljmp
add
rolb
ficomps
int3
xor
pop
insl
in
aas
add
and
or
pushl
fisubl
sub
les
shlb
jg
lods
aaa
sub
add
dec
daa
dec
cmp
dec
xchg
sub
and
sahf
clc
xor
push
shl
les
and
sarb
jo
pushf
test
xor
imul
or
les
dec
inc
jno
xchg
mov
xor
gs
xchg
xchg
ds
mov
shll
xor
scas
movsb
inc
mov
fwait
pop
pusha
mov
pop
std
cs
cmc
push
lods
sbb
jb
adc
cltd
lods
sbb
dec
dec
mov
jae
mov
adc
xor
sub
jb
xchg
xor
leave
fldcw
sbb
jmp
call
pop
in
xchg
sub
sub
loopne
hlt
pop
xchg
cli
add
sub
adc
push
or
sub
pop
dec
ja
inc
aas
jmp
mov
pop
xor
stos
mov
push
icebp
pop
mov
adc
push
adc
xor
lods
test
out
cld
jns
flds
das
mov
js
mov
lcall
jae
ds
cmc
push
push
mov
mov
test
imull
jle
sbb
idivb
cmp
sbb
mov
rorb
jp
pop
jb
jge
jge
cmpsb
mov
in
bound
push
xchg
lcall
pop
dec
imul
pop
jecxz
pop
jns
fidivrl
or
clc
mov
push
xchg
jle
jecxz
out
sub
lcall
ljmp
push
push
cmp
int3
out
mov
push
add
sahf
mov
cmpb
mov
cmp
ret
pop
jge
sbb
es
push
mov
inc
jno
xchg
pop
cvtdq2ps
cmp
es
jns
adc
in
cwtl
mov
sbb
push
sub
sbb
sub
mov
lret
aad
testb
fdivrs
outsl
cmc
mov
mov
loop
andb
popf
adc
pusha
sub
hlt
testb
repz
cmpsw
rcrb
pushf
dec
sub
mov
add
cmp
fidivl
in
ret
jno
and
daa
xor
shl
xchg
pop
lods
xchg
and
adc
mov
arpl
mov
push
lods
cltd
jae
mov
adc
sbb
arpl
mov
stc
xchg
in
xor
out
cmc
cmpsb
rorb
xor
jnp
mov
mov
inc
ja
mov
insl
aad
mov
pusha
or
cmp
clc
adcl
ficompl
cmp
cli
popa
adc
dec
pop
cs
out
and
shr
xlat
adc
es
fcomps
cmp
sbb
mov
cmp
hlt
lcall
out
sub
popf
sti
test
dec
jmp
jge
out
add
mov
out
xchg
xchg
scas
das
cmp
pop
aaa
xchg
mov
fimuls
push
inc
daa
fnsave
popa
lahf
sbb
lock
mov
ljmp
cmpsb
xchg
ficompl
lock
sub
jne
sub
in
inc
dec
in
nop
mov
pop
dec
jl
enter
xor
fcoml
insl
gs
dec
cmpsl
mov
jg
mov
inc
add
or
jp
das
mov
pop
or
pop
cmp
shrl
test
inc
stc
mov
ret
mov
stos
push
scas
mov
dec
adc
lea
sahf
cmp
xor
cli
scas
add
iret
cltd
add
dec
add
cmc
push
test
add
mov
dec
xchg
lcall
in
mov
negb
push
fcompl
arpl
and
push
gs
dec
xchg
mov
and
mov
scas
xor
mov
cmp
push
sets
je
cmpsl
imul
subb
fcoms
popa
out
sub
or
dec
xchg
cmp
cmpsb
lahf
mov
hlt
mov
in
or
outsl
aad
pop
jbe
int
aaa
fs
in
ja
insb
leave
hlt
ljmp
inc
jbe
push
sbb
out
mov
push
push
fimull
jbe
mov
mov
sahf
mov
push
xor
mov
push
sbb
test
adc
outsl
bound
adc
sub
loopne
pop
cwtl
iret
mov
add
pusha
sbb
scas
add
nop
jg
roll
adc
fldt
lds
inc
dec
mov
sub
cmp
movl
xorl
xchg
jns
std
and
iret
sbb
repz
lret
sbb
sub
faddp
push
mov
push
xor
pop
push
subl
in
add
loop
sbb
aam
pop
and
cmp
push
std
outsb
pop
es
sub
mov
dec
jmp
gs
inc
pop
fs
xchg
adc
add
stos
add
mov
xchg
aaa
cmp
testl
adc
pop
aad
push
aad
enter
dec
jecxz
rclb
icebp
cwtl
sub
mov
ror
push
pop
in
je
lods
xlat
cmp
push
dec
addr16
sub
jb
out
dec
test
jne
sub
pop
or
jg
mov
xchg
jp
and
mov
lret
leave
dec
xchg
cs
sbb
sub
mov
mov
sub
mov
faddl
test
mov
inc
sahf
cmp
dec
jecxz
xor
fcmovnb
xchg
adc
xchg
fimull
test
dec
pop
aam
out
call
xchg
cmp
pop
xor
push
push
cmp
add
roll
testb
data16
daa
call
aam
jmp
and
mov
cmpsl
ja
sub
jecxz
push
outsb
in
mov
dec
int3
xor
sbb
movsl
lret
cmpsl
das
mov
loopne
xchg
add
scas
sar
pop
std
lea
push
lahf
out
cmpb
test
sbb
jl
in
mov
lds
xchg
inc
push
test
sub
mov
js
cmp
es
or
adc
movsb
ja
dec
mov
pop
inc
mov
add
jp
scas
mov
addr16
mov
add
pop
sub
in
add
jmp
loope
lds
aam
dec
jg
add
testl
jl
js
sub
lcall
ss
push
and
jae
ss
mulps
jns
daa
push
mov
add
fstpl
mov
loope,pt
popf
out
out
and
jle
pusha
push
call
dec
cmc
aaa
daa
xchg
pop
cs
cmp
pop
xchg
jl
inc
xchg
repz
out
dec
sub
decb
adc
or
lods
mov
mov
loop
mov
mov
add
sbb
insb
movsb
mov
ja
enter
popf
jle
pop
in
adc
push
fcmovu
jno
xchg
xor
xor
lods
lods
lods
pop
imul
arpl
lds
dec
pop
es
inc
test
flds
adc
mov
cld
out
mov
rclb
aam
mov
inc
push
push
idivb
mov
push
add
xlat
aam
and
cmp
mov
cmp
fcmovbe
pop
pop
mov
jbe
insl
andb
pusha
push
fidivrl
jb
mov
popf
idivb
mov
cmpsl
jbe
ljmp
bnd
xchg
jmp
sub
push
or
cmp
inc
leave
mul
jge
in
into
fs
adc
jbe
aaa
add
pusha
mov
mov
cmpsb
in
jg
jbe
push
mov
mov
out
nop
repz
icebp
dec
sti
jmp
cwtl
cwtl
ljmp
jne
xorb
and
or
pop
or
sub
cltd
das
sarl
or
xor
jae
outsb
jle
cs
sub
inc
push
insb
cmp
jae
jnp
popa
je
push
sbbl
aas
les
inc
imul
cmp
scas
mov
mov
cmp
shlb
pop
sar
sub
adc
mov
pop
mov
sbb
xor
jmp
data16
aaa
xchg
xchg
insl
pop
adcl
test
adc
or
mov
xchg
adc
or
mov
in
lret
pop
cld
lds
pusha
cmp
outsb
xchg
mov
push
and
pop
sar
sbb
mov
lahf
xlat
imul
adc
cmpsl
inc
inc
mov
outsl
fadds
fsubr
mov
dec
jp
sbb
loope
mov
dec
fmul
or
test
sub
stos
cmp
inc
adc
mov
lret
mov
out
and
loopne
sbb
mov
sub
mov
into
movsb
shlb
push
cmp
cmp
ljmp
pusha
pop
data16
stos
dec
push
xchg
test
call
cmp
aad
fsts
mov
xorl
cld
jbe
jp
xchg
movsl
pop
dec
jbe
imul
clc
xchg
daa
popa
rorl
add
call
daa
loop
lock
mov
or
sbb
stos
shlb
inc
mov
lds
dec
push
adc
mov
jl
sbb
ret
rorl
pusha
pop
cmp
push
arpl
mov
add
fsubl
sub
imul
js
fwait
icebp
icebp
jnp
cmp
es
dec
inc
les
dec
ja
xor
jno
insb
jno
dec
aaa
pushf
test
mov
mov
add
addr16
xor
mov
and
test
popl
jg
ficomps
adc
inc
fmull
dec
xchg
movsl
adc
leave
fiadds
mov
loope
test
insb
inc
sahf
dec
out
enter
jno
mov
cld
sbb
mov
lea
es
movsb
cs
lods
push
xor
mov
cmp
sbbb
data16
add
jnp
lods
icebp
and
sbb
outsb
xchg
rcr
adc
or
pop
mov
mov
loop
data16
adc
js
mov
sbb
lret
pop
add
out
out
push
call
and
rcll
lret
hlt
or
fwait
adc
mov
insl
push
and
jg
push
xor
js
inc
hlt
cld
pop
inc
out
inc
sti
in
mov
pop
xchg
sbb
xchg
je
xlat
xlat
xchg
pop
test
pmaddwd
dec
push
push
xchg
imul
shrl
jo
push
cmpsl
jae
jecxz
xchg
push
dec
mov
lods
shrl
insl
mov
out
jb
sbb
sbb
ss
in
fptan
xchg
jmp
xchg
imul
mov
test
push
adc
movsb
sub
sbb
dec
push
dec
mov
mov
mov
dec
lret
inc
jmp
insb
aaa
xchg
xchg
jmp
push
js
sub
xlat
jl
fcoml
outsb
ret
divb
adc
push
jle
or
fwait
lret
mov
mov
pushf
daa
xor
dec
pop
push
fistpl
pop
mov
clc
test
xlat
icebp
lret
dec
out
js
test
call
mov
xchg
mov
adc
out
data16
ds
mov
cs
push
push
sbb
inc
rcl
outsb
mov
das
adc
jmp
jns
adc
jle
jge
adc
std
test
inc
xor
push
jp
push
in
dec
repnz
pop
mov
fxch
dec
out
adc
push
sarb
mov
jecxz
fistpll
adc
sbb
popa
mov
push
repnz
test
push
rorl
test
jg
jo
jb
or
dec
dec
add
sti
gs
in
das
or
cmp
jp
mov
loope
rolb
cltd
adc
mov
add
mov
adc
xchg
movsb
inc
into
pop
dec
push
ja,pt
mov
daa
fiadds
in
mul
sbb
lock
pop
stc
push
mov
ret
xor
addr16
pop
jecxz
test
push
or
fistps
popa
jg
js
xchg
std
mov
pop
scas
push
das
push
add
lret
pop
flds
mov
or
int
cmp
sbb
mov
pop
pop
jae
cmp
adc
cmpsb
sahf
fcmovnb
push
addr16
cli
pop
je
dec
push
mov
ficompl
cmp
psrlq
push
cmp
push
shl
cltd
popf
mov
int3
and
and
lahf
shrl
add
jmp
ja
inc
add
pxor
mov
sub
shl
and
mov
mov
sub
mov
push
int3
fcoml
inc
cmpsl
cmp
inc
or
sahf
jns
push
cmp
and
fs
and
inc
dec
leave
pop
sbb
insl
mov
xchg
pop
rolb
stc
cmp
mov
pop
sub
adc
addr16
stos
aad
or
xchg
addb
aam
jle
mov
push
in
shl
sbb
sbb
sub
and
mov
dec
mov
pop
mov
xor
sub
lret
mov
sbb
pop
cmp
pop
lahf
push
xchg
dec
imul
mov
or
mov
hlt
ds
test
sahf
outsl
mov
lahf
xchg
xchg
mov
int
jbe
shl
mov
xor
add
inc
jbe
test
xchg
mov
aaa
push
in
mov
mov
or
test
in
fimuls
mov
repz
cmp
add
jle
push
popa
jecxz
lahf
nop
sbb
orl
mov
or
push
push
insl
stos
sahf
stos
mov
push
push
fnstsw
fs
xchg
xchg
rcr
call
mov
fsub
or
inc
dec
xchg
inc
pop
mov
lahf
inc
into
mov
into
bnd
imul
std
aad
in
enter
or
lret
inc
dec
repz
das
add
sub
or
bound
int3
dec
sub
or
hlt
decl
lret
mov
mov
lret
mov
aad
les
sbb
or
sbb
push
andl
push
fldt
mov
icebp
mov
cmova
dec
loopne
adc
mov
mov
or
mov
and
rclb
xchg
add
jb
xchg
lea
pop
cmpl
inc
call
adc
in
jmp
rcrb
sbb
ja
push
xor
cmp
pop
mov
cli
sub
xchg
insb
aas
cmp
cld
cli
mov
enter
subl
pop
sub
jae
mov
adc
xor
sbb
cld
adc
clc
js
cmp
sub
ret
loop
push
insl
jo
addr16
ja
sbb
insb
push
jecxz
inc
repz
icebp
mov
es
mov
add
je
mov
outsb
leave
andl
xor
outsb
data16
fimuls
cmp
pusha
sti
or
cld
sub
orb
bound
jns
jl
xchg
jp
lds
sub
inc
dec
xor
loop
mov
xchg
outsl
lcall
mov
test
test
out
rcrl
lahf
fnstsw
fiadds
xorb
loopne
push
call
test
mov
xchg
rcll
mov
outsl
adc
sub
or
xchg
or
into
xchg
pop
mov
fs
shll
imul
add
mov
jb
push
adc
xchg
lcall
es
or
ljmp
pushf
idiv
cmpl
outsb
imul
cmp
out
gs
mov
scas
mov
ret
popa
es
xchg
cmp
push
cmpsl
scas
stos
ret
mov
fisttps
stos
xor
or
xchg
out
mov
jnp
cmp
jo
pop
icebp
mov
pop
jmp
and
icebp
dec
cmpsb
loop
jae
int
cmpsl
xchg
sti
jno
mov
and
cmp
bound
stos
into
xor
sbb
cmp
sub
xchg
jmp
je
lcall
data16
mov
xor
in
sub
cmc
pop
jp
mov
mov
jae
mov
cmc
cmp
jmp
mov
xchg
xor
stos
xor
movsl
and
cld
pop
mov
cld
pop
test
jp
or
enter
inc
lcall
mov
outsb
pmaxub
add
lret
into
jne
jae
popa
jg
roll
lods
fldenv
shrl
xchg
bound
xlat
sbb
idivl
scas
dec
imul
lret
js
and
cmpsb
mov
mov
sub
ljmp
insb
push
mov
cmp
mulb
xchg
xchg
jae
gs
es
insl
xchg
sbb
xchg
mov
pop
add
ds
and
mov
mul
push
shll
out
pop
sbb
pop
add
enter
jb
ljmp
in
orb
sahf
imul
in
loop
fnsave
mov
xorl
add
rcl
je
dec
int3
push
stos
xchg
mov
lcall
pop
cmpsb
push
cmp
pop
movsl
cmpb
leave
sahf
add
imul
cmc
add
push
negl
jle
pop
int3
out
jo
bound
mov
dec
sar
pop
cmp
push
ficomps
and
cltd
cmp
mov
rcrl
out
mov
mov
push
push
xchg
sbb
ret
faddp
cmp
or
sbb
insb
ret
sub
enter
fucomp
sahf
add
push
pop
mov
jnp
lods
stos
add
mov
aad
dec
lahf
xor
rcr
cli
or
sbb
and
push
icebp
adc
jg
push
shlb
int3
dec
insb
add
scas
fists
sbb
cmpsl
nop
jb
jae
adc
stc
pop
fcmovbe
test
jmp
sbb
hlt
lcall
add
cli
andl
roll
mov
rorl
push
push
stos
ljmp
mov
in
in
pushf
fdivrs
je
sbb
or
scas
adc
lret
lea
mov
mov
and
add
shr
ja
stos
and
mov
test
rorl
mov
and
mov
push
sahf
fnstsw
mov
cli
pop
xlat
xor
aad
aam
and
mov
jns
cmc
mov
mov
add
jnp
add
rcll
lods
or
xlat
and
push
push
xor
dec
movsl
aas
push
mov
outsl
and
push
push
xchg
int
jl
test
sbb
test
adc
push
lahf
mov
into
cwtl
cmp
and
cmp
or
or
xor
push
cltd
loop
dec
sub
out
lcall
pop
and
cmpsb
push
jo
dec
push
das
out
push
dec
repnz
xchg
aaa
mov
hlt
xor
rol
cmp
jmp
mov
dec
lds
loopne
mov
test
arpl
mov
xor
lahf
ret
adc
pusha
test
sti
sbb
inc
sbb
out
insl
fs
push
pop
mov
dec
fcmovu
hlt
lea
adc
and
xor
ret
pushf
cmc
cwtl
mov
sbb
aam
cmpsb
stc
and
push
mov
outsl
out
sbb
mov
enter
scas
add
push
pop
arpl
daa
push
stos
lahf
ret
xor
mov
insl
inc
lods
cmp
mov
mov
push
xorl
pop
sub
aam
inc
sahf
push
sbb
insb
xchg
and
mov
mov
mov
or
inc
test
gs
jne
and
push
mov
inc
lods
xor
aaa
push
into
iret
rol
lret
add
jl
aas
xchg
jns
icebp
mov
xchg
std
mov
sub
out
push
int
or
mov
dec
cmp
fmulp
cmp
push
mov
jmp
push
inc
daa
pop
mov
in
ja
pop
loop
jo
jp
ja
mov
ja
movsb
clc
pop
mov
cs
out
mul
repnz
pop
cs
rcrl
mov
sbb
mov
sti
pop
cmp
adc
mov
mov
addr16
mov
lods
sbb
insb
popf
fcmovne
lods
cwtl
popf
mov
sarl
fwait
pop
and
pop
out
jecxz
adc
inc
sbb
dec
into
lcall
lods
sub
inc
dec
arpl
pop
pop
cmp
push
lods
push
sub
lret
movsl
inc
or
push
fistl
add
clc
adc
das
and
popa
cli
orl
mov
xor
sbb
mov
jo
or
inc
das
mov
mov
ret
test
cmpsb
dec
push
inc
clts
and
leave
es
test
push
insb
les
cs
subl
test
sbb
inc
cmp
sub
out
or
aam
cld
xchg
mov
fbstp
aas
es
push
out
or
popa
into
lret
cwtl
inc
movsb
cwtl
pop
icebp
or
std
pushf
mov
lcall
lea
test
adc
outsb
push
loop
or
mov
out
sbb
insb
or
rclb
sarl
ja
sbb
xchg
mov
sbb
add
pop
cwtl
out
fistpl
sbb
mov
pop
jno
and
xor
inc
push
fisubrl
pop
ret
adc
stc
cmc
cmp
outsb
xchg
imull
jae
mov
cli
adc
inc
lods
xlat
mov
sub
xchg
push
imul
inc
mov
bound
and
inc
mov
sbb
xor
mov
adc
dec
and
imul
or
mov
fs
mov
push
dec
cmc
jle
fistpl
jge
decl
mov
cwtl
push
arpl
test
ret
jbe
sbb
ror
xlat
hlt
dec
jge
dec
cmp
sub
xchg
push
cmp
decl
gs
lods
call
ja
jns
bound
popf
pop
add
jl
dec
or
xlat
fildl
ljmp
aas
jle
mov
out
lock
push
jbe
fnsave
sub
out
test
popa
mov
mov
or
sbb
adc
orb
fdivrp
les
aaa
push
leave
loope
fcoml
pop
mov
jp
add
out
or
ficoml
ljmp
sub
dec
sti
shlb
push
clc
lcall
in
sahf
jecxz
mov
std
pusha
and
mov
lods
movsl
movsl
in
popf
out
xchg
pop
mov
cmp
shlb
div
movsb
das
mov
cmpsb
dec
jne
in
mov
movsl
sbb
jo
insb
and
jo
loopne
gs
lods
das
pop
out
jae
inc
cmc
ret
pushf
bound
dec
or
inc
mov
mov
mov
or
fs
pop
out
test
inc
mov
mov
inc
or
sub
ret
dec
scas
adc
rcrb
repz
or
jnp
cmp
mov
cmp
mov
jnp
and
mov
int
and
std
testb
xchg
dec
and
clc
cmp
pop
xchg
dec
jge
add
mov
aaa
jg
push
hlt
pop
repnz
mov
in
jecxz
sahf
outsl
dec
ror
pusha
jle
mov
scas
add
imul
pop
gs
dec
jecxz
shrl
lea
rclb
cmp
fsub
adc
mov
mov
sti
mov
jl
hlt
fbld
sbb
push
mov
imul
mov
insl
loope
into
out
scas
shll
aam
sub
ljmp
scas
jge
and
stos
mov
add
xor
scas
in
outsb
jmp
movsb
mov
fimuls
cmpsb
jecxz
aam
movsl
icebp
sbbl
lahf
loopne
dec
loope
xor
and
scas
pop
jmp
and
push
std
mov
inc
sub
push
or
mov
adc
fdivrl
inc
sub
or
and
call
test
push
sub
jo
add
mov
jp
pop
xlat
mov
push
outsl
nop
stos
insl
jb
mov
and
push
lods
push
xor
inc
loop
out
and
sub
out
pushf
xor
pop
jae
cmp
xchg
cmp
cmp
xorl
inc
orb
mov
inc
outsl
jne
jmp
divl
sub
int3
cmpsl
xchg
sbb
fndisi(8087
loopne
icebp
push
into
add
or
push
stos
out
int
push
push
dec
xor
dec
pop
movaps
mov
fdivr
rorl
pop
xchg
cmp
inc
test
push
dec
jle
xor
dec
jnp
xchg
dec
inc
inc
les
mov
jb
rcrb
sub
mov
ss
pop
lds
sbb
mov
pop
rcl
mov
hlt
inc
lret
in
jp
mov
loop
cmp
inc
cltd
daa
fs
inc
push
cmpsl
cmpsl
mov
adc
mov
xchg
insb
lret
mov
jmp
push
call
xchg
jmp
mov
ja
aas
and
cmpsl
sbb
mov
jp
dec
sahf
sar
dec
arpl
mov
jnp
frstor
push
pop
or
ficompl
hlt
jne
push
inc
repz
jmp
outsb
ds
pop
jbe
mov
jmp
push
out
call
dec
pop
mov
add
pop
push
sub
nop
push
add
data16
in
lcall
xor
inc
sti
push
lods
stc
mov
stos
xchg
xor
dec
xor
add
dec
mov
mov
or
cld
rclb
insb
and
out
jecxz
ljmp
dec
jp
cmpsb
dec
cltd
dec
cmp
adc
mov
dec
and
mov
gs
jno
out
push
push
xchg
cltd
mov
arpl
mov
inc
inc
ret
pushf
inc
xchg
inc
aas
std
adc
in
ret
stos
test
adc
inc
je
mov
loopne
rclb
setl
mov
jg
push
pslld
mov
fsubr
mov
outsb
push
in
and
lock
stos
in
mov
cltd
and
aad
jno
cmp
out
mov
inc
lods
test
das
fildll
int
and
insl
nop
outsb
inc
pop
mov
mov
adc
sbb
cmp
or
cld
movsl
xor
push
std
mov
fildll
jle
pop
inc
leave
test
mov
insb
xor
and
inc
push
mov
dec
xchg
divl
loope
rolb
mov
data16
int
adc
jne
aad
dec
nop
sbbl
xchg
cs
pusha
sub
jno
pop
add
sbb
notl
insb
or
jecxz
lcall
cld
mov
add
pop
push
cmp
cs
int
inc
dec
rcrl
xor
hlt
not
push
cs
sahf
xor
ds
testl
sbb
jno
fwait
pop
incb
movsb
mov
jno
call
xor
enter
cmc
popf
stos
mov
repnz
mov
stos
fnsave
addr16
push
stc
add
in
subb
mov
iret
sbb
cmp
lods
pop
fstl
faddl
inc
call
fcmovnb
loop
ja
ds
jmp
pop
mov
push
test
sub
jb
jg
sbb
xor
leave
fiaddl
mov
dec
sahf
decl
pop
es
loope
aad
test
jg
divl
dec
sub
lock
out
xchg
push
out
lcall
push
lret
mov
arpl
fstpt
out
xchg
add
das
movsb
xchg
hlt
roll
and
mov
mov
add
xlat
push
lret
cmc
jecxz
dec
inc
xchg
lcall
mov
mov
dec
les
pop
pop
jae
xchg
push
andl
mov
ret
test
add
cmpsb
pop
call
test
xchg
idiv
xchg
jecxz
cmp
add
cmp
inc
aaa
pushf
sub
mov
jne
test
enter
mov
fsubrp
sub
push
pop
daa
and
fidivs
pop
inc
or
sub
mov
sbb
lock
add
loop
sarl
shrb
in
sub
xchg
sbb
adc
fsts
cmpsb
lcall
or
fcomi
dec
push
ret
push
rolb
xor
int
mov
nop
in
jae
cli
and
add
or
fidivrs
mov
orl
pop
sbb
dec
pop
mov
stc
leave
xchg
lret
or
ftst
or
test
xchg
adc
sub
push
mov
xorl
add
ss
inc
jle
mov
pop
mov
hlt
rcll
mov
lahf
mov
rcrl
xchg
ljmp
lock
out
xor
pop
sbb
sub
lret
les
cld
sub
test
dec
fsts
and
add
or
or
cli
lahf
add
jl
mov
gs
ret
push
inc
mov
push
rorb
mov
lds
pushf
dec
cld
add
mov
sar
mov
push
push
in
jmp
int
pushf
test
hlt
adc
push
movb
jl
or
cwtl
jge
adc
add
jg
mov
clc
xorl
jmp
jp
mov
lret
std
fwait
adc
xorl
xorb
lods
out
roll
and
adc
add
aam
mov
mov
std
mov
sbb
ficomps
lock
into
in
push
lret
push
test
push
mov
fimull
lds
dec
lds
cmp
popa
xchg
ljmp
in
dec
or
mov
enter
jmp
mov
mov
outsb
shlb
nop
adc
pop
clc
je
or
add
ret
sub
add
pop
fld
mov
in
push
xor
mov
pop
mov
push
shl
loopne
adc
in
insb
test
sbb
cmp
test
mov
repnz
mov
lret
shl
mov
xor
mov
pop
sbb
in
insb
inc
rcll
fstpt
hlt
xchg
adcl
decb
add
fucom
xor
mov
popa
flds
xor
xlat
pop
loope
pop
inc
ret
xor
out
push
ds
xchg
push
dec
jno
cmpsl
dec
or
ljmp
jno
pushf
shl
jne
test
pushf
imul
shrl
sub
clc
xor
in
addb
xlat
std
sub
mov
push
mov
mov
enter
add
pop
adc
testb
rorb
out
daa
ss
lahf
imul
movsb
push
mov
sub
imul
out
push
lret
inc
bnd
inc
jle
and
icebp
daa
sbb
pop
iret
push
js
fidivl
mov
ja
outsb
and
insb
in
test
fcoms
icebp
mov
mov
and
test
adc
pushf
std
lods
xor
test
aaa
sub
xlat
je
sbbl
mov
es
insb
xchg
jle
orl
and
lret
out
fsubs
in
sbb
mov
and
pop
cmp
je
rolb
pushf
scas
jno
out
inc
rcll
into
push
aad
and
pop
push
inc
jbe
lret
pop
mov
lods
sub
imul
mov
das
int
and
and
push
mov
into
xchg
pop
cmp
js
xchg
les
shrb
mov
les
movsb
pop
push
ljmp
ret
call
loop
jnp
adc
scas
cli
xor
or
pusha
push
lds
enter
mov
daa
es
scas
testl
push
fisubs
dec
adc
scas
lret
jge
clc
into
clc
inc
movsl
mov
add
ja
mov
or
cwtl
sbb
fdivrp
mov
cs
fisttpll
pop
cmpsb
add
aaa
push
pop
cmpsl
lock
popa
hlt
cmp
mov
out
in
leave
repz
or
into
pop
inc
xor
push
js
pushf
aam
adc
clc
je
adc
dec
sbb
jns
loopne
pop
mov
leave
movsb
call
mov
jecxz
movsl
cmp
add
inc
push
lods
mov
push
mov
sub
sub
xchg
sub
jbe
ss
subl
fwait
movsb
add
shll
dec
sub
fistps
mov
outsl
add
jmp
int
mov
push
test
xchg
addr16
xchg
pop
popa
xchg
stos
lods
and
inc
fsub
xchg
lods
add
sub
in
mov
mov
dec
cmp
or
push
jle
shll
imulb
enter
adcb
fwait
cs
jmp
or
and
xchg
js
bound
data16
jo
ret
xor
or
mov
loop
jns
mov
and
or
mov
scas
jns
loopne
pusha
xchg
push
push
inc
push
adc
jnp
fwait
mov
in
and
push
add
dec
test
adc
nop
cmp
jae
push
push
int3
loopne
mov
fs
xchg
inc
mov
frstor
push
mov
and
pop
cmpsl
stos
dec
mov
adc
mov
jb
add
sbb
jne
jmp
test
xor
ret
or
nop
js
out
dec
nop
mov
jg
cli
dec
call
inc
jae
js
stos
mov
jnp
cmc
mov
mov
int3
xor
xor
sbb
lock
mov
dec
test
outsl
lcall
out
adc
test
aad
hlt
outsl
mov
pusha
add
fs
inc
jo
ret
insl
jle
mov
aam
pop
pop
push
test
dec
cmpsb
or
jecxz
pop
push
mov
jge
jbe
mov
fdivl
jp
sbb
fwait
loope
pop
popa
pop
ret
sbb
xchg
mov
jne
std
fbstp
das
sbb
neg
movsl
sbb
ljmp
cmpsb
xchg
mov
shlb
pop
in
loopne
int3
inc
aam
lahf
inc
mov
jle
mov
push
sbb
out
dec
fs
add
mov
call
xchg
popf
xor
sti
jecxz,pn
dec
mov
outsb
add
cmp
in
dec
cmpsb
adc
xchg
rclb
jp
stos
mov
and
push
jmp
in
jge
xor
sub
xchg
mov
fcoml
sti
repnz
das
mov
mov
stos
or
mov
cltd
jnp
xor
outsb
clc
pop
xlat
push
cmp
sti
and
xor
faddl
std
push
in
push
xchg
add
and
fsubs
stc
ja
pop
jg
xor
sub
inc
inc
push
lret
add
imul
sahf
mov
popa
jmp
mov
jmp
adc
aad
aas
fdivl
pop
or
out
inc
adc
clc
add
push
xlat
sbb
lret
and
push
mov
pop
fidivrs
cld
inc
sub
mov
notl
dec
cltd
mov
sbbb
jle
fcoms
dec
clc
pop
xchg
shl
das
cmp
mov
cmc
test
push
popa
imul
das
or
xchg
xchg
pop
ds
jo
mov
xchg
sbb
adc
jp
or
imul
push
out
test
cs
frstor
psubq
lock
push
std
sub
imulb
push
pop
rcrw
cwtl
cld
xor
mov
inc
mov
movsl
jo
movsl
push
and
lcall
fwait
inc
inc
pop
inc
lock
xchg
push
push
inc
push
xchg
xchg
fidivl
std
lds
neg
hlt
fsubs
fidivrl
pusha
or
lret
mov
inc
sub
mov
pop
push
add
mov
jbe
mov
dec
lock
sub
or
jae
sub
dec
or
xor
popf
cmpsb
mov
pop
xchg
cli
scas
add
into
fiadds
push
fstp
mov
int3
sub
jge
into
jo
incb
inc
mov
test
shlb
jo
dec
add
pop
loop
push
je
sbb
inc
js
sti
xor
sbbl
stc
je
aaa
cmp
and
ss
push
movsl
cmp
push
mov
scas
orl
pop
jp
cmp
sbb
and
push
mov
xorb
cmp
cwtl
pop
lea
xor
cmpsl
sti
adc
jl
pop
jp
xchg
inc
fildll
inc
cmpsb
inc
jbe
push
lret
outsb
xchg
inc
sbb
addr16
ret
ret
xor
adc
sbb
add
inc
pop
sbb
pop
fs
aas
clc
hlt
out
ret
mov
fwait
out
xchg
jge
dec
or
lock
sub
aas
or
xlat
xlat
andl
xchg
add
and
pop
insb
rorb
jae
int
dec
dec
sub
pop
cmpsb
mov
add
xchg
in
xor
js
shrb
cltd
xchg
jbe
fwait
sbb
movsb
inc
dec
aad
cwtl
adc
sub
pop
sub
inc
out
repnz
lahf
lret
js
push
add
das
insl
mov
mov
aaa
adc
push
xchg
inc
mov
imul
ja
xchg
into
mov
jae
xchg
fwait
jns
mov
repnz
int
int
sub
xchg
test
out
inc
shlb
sub
in
sbb
outsl
dec
jbe
loop
notl
mov
push
incl
mov
stc
adc
push
mov
jg
daa
aaa
sbb
sub
pop
ljmp
cmp
adc
lret
scas
js
and
jp
xor
loop
cmp
xchg
out
sti
add
add
loope
pop
sahf
mov
push
xor
popa
push
xor
jo
xlat
pop
dec
adc
push
outsl
sbb
jp
in
das
dec
js
pop
cmp
dec
in
add
and
mul
ror
ljmp
push
in
je
mov
in
cmp
aad
adcl
fnstsw
jge
bound
dec
sub
fisubrl
mov
int
adc
jecxz
jae
cld
mov
pop
test
in
jns
fldenv
shll
pop
int
clc
mov
mov
xlat
adc
inc
in
lods
add
jns
cmp
jg
call
xlat
das
outsl
or
add
and
mov
fwait
das
mov
xchg
jae
sub
outsb
sbb
cmp
test
std
adc
mov
shl
nop
dec
jge
xchg
cmpl
sub
test
fs
in
jbe
sbb
shlb
pop
pop
lock
rcl
movsl
xlat
sbb
arpl
rcl
mov
push
pusha
shrl
pop
sub
aaa
fidivrs
jb
bound
mov
fs
fnsave
daa
adc
cmp
adc
sbb
insl
adc
arpl
inc
adc
hlt
flds
ret
jg
and
adc
dec
and
inc
xchg
mov
mov
xor
and
push
jnp
dec
iret
out
jmp
ja
aad
mov
ret
add
push
fs
push
cmp
in
jl
jo
pextrw
pop
inc
cmpsl
loop
ds
fdivp
inc
movsl
fidivl
sbb
movsl
sbb
pop
daa
dec
push
in
bound
dec
adc
cmp
lret
andb
fdivp
fwait
jno
cld
arpl
cwtl
dec
mov
adc
mov
in
mov
and
or
pop
push
pop
lret
jl
xor
sbb
xorb
cltd
inc
mov
mov
mov
or
bound
adc
hlt
sub
fildl
sub
rcll
and
pop
xchg
adc
ret
add
push
add
iret
push
mov
repz
fdivrl
adc
or
cld
ds
push
fcomi
iret
rcll
mov
push
dec
lret
ja
and
cmp
lret
cmp
xor
imul
out
push
orb
mov
add
xchg
cmp
loop
mov
cmp
in
cmp
lds
add
ficompl
mov
loopne
and
repz
adc
clc
enter
mov
repnz
push
or
adc
xchg
xchg
sbb
pushf
mov
push
add
pop
lods
iret
cmp
test
cmp
mov
call
ret
ljmp
sbb
lret
dec
leave
ja
cmp
mov
in
arpl
test
push
das
xor
push
and
mov
mov
scas
cs
and
ret
mov
mov
bndstx
mov
enter
out
loop
lahf
push
out
loopne
aad
sbb
out
movsb
aaa
push
out
pushf
sbb
xchg
stos
int
cmpsb
imull
and
scas
jl
xchg
lods
lcall
cmp
jbe
jno
or
sub
add
xor
mulb
cwtl
ret
pop
repz
sub
mov
outsl
inc
push
cltd
inc
mov
mov
sbb
mov
lret
das
add
xor
arpl
nop
sti
mov
iret
jnp
fnsave
sti
cmp
xchg
movsb
adc
sbb
sahf
shll
dec
xor
addr16
popf
dec
out
sub
out
mov
or
test
icebp
int3
jns
pop
lahf
jb
shl
mov
add
pop
lods
cmp
sbb
push
add
jg
jo
addb
pushf
mov
push
inc
bound
inc
movsl
push
fiadds
out
test
pop
and
mov
ljmp
sub
and
fwait
loope
pop
xor
push
lcall
lret
pop
stc
rcrb
pop
lods
lahf
sbb
jmp
pop
and
lea
aam
jns
mov
jne
and
jmp
xor
dec
leave
popf
je
pop
jnp
insb
mov
or
xchg
in
cmpsb
jno
sub
mov
in
fwait
dec
lret
push
lahf
test
and
insl
fisubl
rcrl
mov
cmc
loopne
xchg
outsb
shr
pushf
mov
xchg
cli
pop
ret
pusha
jbe
push
jbe
ljmp
cmp
sbb
insl
add
inc
or
fdivs
xchg
hlt
je
cwtl
ret
lcall
mov
mov
pusha
sarl
fistl
inc
mov
pop
mov
jl
dec
movsl
xchg
rolb
mov
or
fildl
pop
mov
cmp
gs
mov
jo
daa
scas
mov
jae
xchg
sub
xchg
jbe
sub
pop
push
sub
mov
mov
faddl
mov
jno
xor
sub
icebp
or
sbb
call
sbb
and
or
or
sahf
call
push
inc
jg
adc
jmp
sub
xchg
in
sbb
fwait
rorb
sub
or
mov
add
jae
rolb
pop
mov
dec
aad
int3
mov
lea
cltd
insl
lcall
pop
cmp
call
push
js
lds
xchg
loop
xlat
ss
and
xor
or
jb
mov
add
jmp
ret
cmp
add
push
or
xor
sbb
jae
aam
sub
xchg
sbb
cmp
cmpsl
or
mov
add
and
mov
xor
pop
sbb
sub
xchg
dec
ljmp
push
movsl
pop
jg
inc
mov
jl
sub
push
lahf
lock
paddb
pop
pop
sti
xor
adc
popf
push
inc
xor
mov
scas
add
ret
mov
push
cmp
movsl
insl
push
xchg
or
gs
push
icebp
lds
out
jns
jl
sbb
mov
adc
xchg
lods
xchg
outsl
lahf
adc
add
out
out
shrb
add
pop
and
or
mov
shll
inc
wbinvd
into
fwait
xchg
outsb
push
movsb
cmpsb
pop
loop
call
lret
popa
push
mov
adc
dec
mov
sbb
and
push
pop
xor
mov
dec
sarl
cmc
mov
inc
dec
cmp
push
xchg
mov
or
cs
imul
jecxz
and
stc
aaa
fnstcw
mov
pop
insl
addr16
or
data16
test
adc
mov
fidivs
dec
sub
jl
clc
rcrl
test
mov
stos
sbb
xorl
cmpsb
xor
lock
pop
adc
sub
fwait
push
mov
xchg
mov
adc
add
sbb
in
jno
andb
dec
dec
aas
mov
mov
dec
in
or
xor
mov
sub
and
pop
outsb
push
sbb
dec
jmp
or
jp
mov
roll
mov
xor
jg
lods
mov
cltd
rcrl
fistps
push
and
sbb
movsb
dec
sbb
es
nop
adcl
lcall
pop
xchg
out
fisubs
jp
mov
push
mov
shll
mov
adc
jl
ror
and
jbe
jb
jo
cmpl
imul
sbb
jnp
sarb
jle
xchg
jp
jl
inc
jmp
cmp
daa
xchg
dec
push
adcb
pop
add
inc
fwait
or
aad
and
or
sbb
cltd
lock
shr
js
arpl
adc
rcll
inc
sub
or
pop
je
cli
dec
mov
scas
jno
dec
stc
test
lds
lcall
sbb
sbb
xor
movsl
dec
negb
or
notb
xor
insl
mov
xor
sub
sub
push
sub
push
into
cld
aas
pop
nop
xor
mov
ja
icebp
ret
insl
and
in
imul
daa
push
and
push
mov
and
enter
pop
call
cld
pop
adc
insw
push
adc
mov
mov
add
aam
cmp
jbe
or
jns
lods
lds
pop
xchg
faddl
or
push
mov
aam
stc
pusha
loope
ja
jns
fsts
pop
daa
insb
pop
bswap
dec
lods
xchg
jl
in
mov
sti
or
inc
mov
inc
out
dec
xchg
mov
fxtract
pop
push
stos
fildll
rclb
cmp
mov
pushf
mov
enter
push
fstl
outsl
pop
xchg
xchg
loop
out
add
xor
scas
jo
insl
pop
scas
mov
imul
mov
mov
and
popa
add
fidivrs
add
insl
sbb
mov
popf
cltd
mov
inc
xchg
adc
jne
ret
pusha
mov
cltd
or
mov
xchg
adc
ret
or
outsb
leave
andb
in
lret
cmp
dec
test
xlat
lods
ret
mov
mov
int
ret
dec
std
push
and
shll
push
mov
fidivrl
jb
fnsave
ret
mov
ficomps
rclb
xchg
pop
dec
mov
jae
and
scas
test
push
and
mov
imul
sbb
jae
ret
or
in
ret
dec
aam
imul
sti
mov
fidivl
and
fsubrl
jle
and
lcall
jns
mov
mov
and
mov
mov
cmp
pop
dec
icebp
mov
bound
shll
imul
mov
test
flds
pushf
sub
sahf
push
fs
inc
repnz
xchg
test
mov
setbe
push
aaa
cltd
dec
sbb
rcll
out
nop
fdivl
jmp
and
sub
add
call
psllw
negl
pop
xchg
arpl
mov
sbb
popf
fldl
imul
outsb
lds
pop
outsl
sbb
lock
and
in
jecxz
out
aad
cmpsb
sahf
adc
mov
rorl
out
cmp
adc
outsb
push
xor
xchg
pop
fldcw
test
cld
jns
push
loopne
sbb
push
lods
clc
push
xor
push
sub
hlt
jmp
movl
sub
gs
sbb
nop
inc
es
leave
jb
xlat
aas
and
popf
mov
or
dec
push
test
cmp
jp
hlt
insl
filds
ljmp
pop
addr16
mov
sub
push
clc
enter
inc
inc
scas
rsqrtps
and
rorb
aaa
inc
sub
mov
cmpsb
fisubrs
jmp
fwait
push
or
aad
dec
or
adc
lods
lods
xchg
adc
xchg
inc
lret
jne
ja
dec
xor
in
loopne
fadds
rcrl
lods
jno
add
jno
dec
push
outsb
dec
ffree
negb
adc
add
xlat
jns
pusha
push
int
mov
and
dec
rclb
push
popa
xchg
push
mov
add
pop
lods
sbb
xor
add
xchg
pop
dec
pop
add
and
lods
leave
inc
lret
xlat
mov
mov
mov
dec
mov
xchg
mull
push
sbb
jmp
push
xlat
push
popf
cmp
jl
into
xor
push
insb
sub
sub
xchg
adc
jp
adc
inc
loop
push
ret
mov
cmpsl
shl
imul
gs
popl
mov
test
jecxz
sbb
shrb
xchg
test
insb
sub
pushf
subl
lods
bound
xchg
rcl
subl
std
jmp
rcll
popf
sub
adc
arpl
pop
inc
movsb
adc
jle
mov
push
cwtl
ss
mov
outsb
mov
dec
ds
out
mov
inc
adc
sub
push
inc
add
cmp
rcrb
adc
push
test
cmp
iret
shrb
sbb
clc
inc
in
mov
cmc
iret
arpl
ds
inc
insl
daa
outsb
mov
dec
mov
call
pop
mov
mov
adc
out
lret
or
jmp
xor
mov
ja
mov
sbb
js
inc
scas
mov
xchg
ss
xor
sbb
mov
sub
add
lret
cmp
bound
sbb
hlt
scas
cs
aaa
roll
cmp
aas
cmp
adc
mov
imul
pop
xchg
push
in
or
jl
cmp
jg
addl
and
adc
incb
shrl
ja
push
mov
faddp
cmp
push
jl
adcl
bound
pop
mov
das
pop
imul
movsl
pop
jne
psrad
ret
adc
outsb
jecxz
push
sbb
inc
ja
pop
pusha
in
push
pushf
push
data16
lret
xor
adc
push
sbbl
jo
data16
push
sahf
xchg
call
aad
lods
cmp
inc
pop
test
inc
or
addr16
jecxz
movsb
dec
mov
cltd
inc
rolb
ds
ljmp
fs
enter
or
rcrb
sbb
ds
sbb
sub
sbb
mov
mov
lods
fwait
sub
aam
cs
add
ljmp
and
inc
ret
adc
jbe
or
and
ljmp
jns
inc
push
cmp
insl
pop
insl
jl
lock
adc
jno
push
fcoml
and
mov
cwtl
xchg
setnp
dec
stos
es
jns
imul
sub
sub
test
mov
aas
cwtl
sbb
ret
loop
and
xor
into
aad
cli
fidivs
pop
push
js
pop
jb
imul
jo
xchg
cmpl
jg
xor
jns
in
add
fnstcw
nop
or
inc
xor
in
int3
fs
ljmp
movsl
cmpsl
das
jge
je
push
push
xchg
jbe
sub
add
jnp
push
rcrl
inc
mov
cmp
jbe
dec
mov
mov
pop
jns
pop
pop
adc
mov
ja
insb
dec
inc
int3
push
xor
loop
xchg
sahf
push
sbb
mov
cmp
inc
sub
cmpsb
test
jl
out
pop
jp
inc
dec
andb
sbb
sub
dec
cmc
cwtl
or
mov
lcall
addr16
sbb
mov
pop
pop
push
ret
insb
mov
cmp
mov
bndstx
mov
cmp
adc
movsl
jmp
cmp
xchg
jno
and
cmp
loop
jge
fwait
pop
mov
test
imul
sub
xchg
jge
dec
and
scas
ror
dec
addl
ljmp
out
jg
add
gs
js
pusha
fistpll
je
leave
pop
or
push
mov
stos
icebp
jl
clc
rclb
int3
lods
fcomps
cmp
sbb
mov
lret
rolb
add
xlat
pop
por
jnp
jp
inc
pusha
push
jb
lret
gs
fiadds
mov
aaa
sahf
mov
pop
jae
push
xor
xchg
cli
es
fistps
xor
sbb
mov
inc
fisttps
loope
cmp
inc
and
and
push
popf
int3
or
out
bound
iret
test
sub
cmp
pusha
sbb
dec
mov
jl
lock
jo
psubw
mov
imul
sbb
or
sub
inc
pop
fucom
inc
lea
pop
adc
and
cmp
jae
aaa
pushf
or
jbe
ffreep
insl
clc
repz
pop
sub
fnstenv
test
add
add
aam
clc
rol
jo
add
les
and
add
and
scas
popa
out
push
lahf
mov
adcb
hlt
sbb
jecxz
jmp
in
ja
lcall
xchg
sub
faddp
sbb
dec
and
xchg
in
sub
test
mov
xchg
xlat
sub
inc
inc
addr16
xor
shlb
push
cli
xor
inc
dec
jae
inc
out
jecxz
sarb
pop
ja
push
xchg
inc
mov
push
mov
and
xchg
stc
xor
imul
testl
stc
notl
and
xchg
es
leave
daa
dec
xlat
jmp
adc
sub
scas
mov
inc
inc
mov
dec
mov
in
or
adc
adc
call
pop
mov
adc
pop
aad
or
in
sub
cmpsb
cmp
js
mov
popa
and
xchg
mov
addr16
mov
and
test
adc
xor
lret
inc
xchg
mov
dec
cmp
mov
inc
add
add
mov
out
cwtl
cmp
jne
push
test
std
sarl
jo
ss
and
push
adc
cmp
adc
and
push
xor
cmp
mov
in
mov
popf
gs
js
jge
hlt
xlat
loope
xlat
xchg
mov
mov
ljmp
fcmovnb
add
xor
sbb
mov
and
ja
cmp
in
ss
sub
rcll
or
adc
test
cmpsb
sbb
pop
repz
jle
mov
mov
and
add
shlb
pusha
add
cmp
mov
lahf
jb
inc
sub
add
sarl
ret
push
xor
jbe
pop
loopne
and
and
fldcw
or
std
cld
int3
out
cwtl
inc
sbb
ja
and
mov
jb
push
xchg
pushf
push
or
in
xor
mov
inc
data16
inc
fldt
fildll
lds
mov
push
lcall
loopne
cwtl
push
xchg
dec
cmp
cmp
cmpsl
pop
fisubrs
adc
sub
xor
ret
repz
movsl
mov
js
ja
aas
subb
mov
imul
sbb
push
dec
fs
xor
mov
lock
std
rcrl
out
adc
scas
loop
add
xlat
ss
aaa
sbb
test
repz
out
std
dec
sarb
or
aam
jle
and
push
adc
xor
pop
clc
push
pop
dec
jmp
daa
mov
lea
lret
daa
cmp
out
scas
add
into
mov
pop
dec
in
in
stos
cmp
lahf
testl
popf
clc
jo
movsb
mov
mov
roll
outsl
mov
movsb
xor
aam
dec
adc
aas
lock
mov
jmp
jmp
inc
scas
mov
stos
push
test
out
sub
cmovp
je
jle
mov
adc
cld
iret
movsl
inc
mov
js
cmpsl
clc
push
ret
add
mov
shrl
cmp
or
int3
pop
outsl
and
jbe
sbb
xlat
pop
dec
jno
mov
jne
jecxz
cmp
sbb
movsb
inc
inc
je
out
add
xchg
out
inc
jg
pop
int
scas
sbb
or
and
pop
cld
add
push
pop
push
xchg
and
nop
imul
dec
or
mov
sahf
cld
out
rorb
xchg
sub
add
xchg
cld
aad
out
xlat
lds
push
sub
rcl
movsb
cltd
pop
mov
cmp
hlt
mov
pusha
in
xchg
in
cld
jle
or
mov
stos
xchg
and
negb
sub
jns
mov
mov
and
add
test
push
cmp
push
mov
je
aad
hlt
mov
js
out
sti
in
es
mov
fs
out
pop
lret
mov
inc
xchg
sbb
insl
ret
sahf
ror
pop
mov
fsubrl
lds
pop
mov
and
lret
pop
leave
and
mov
mov
sbb
fs
jl
mov
mov
cmp
scas
mov
pop
push
fdivl
fs
movsw
insb
jmp
popa
mov
lret
pop
cli
lock
fwait
stos
stos
mov
arpl
pop
movsl
cmpsl
movsb
in
lcall
jmp
push
fwait
push
push
inc
repz
mov
loop
adc
cld
pop
fs
rorl
mov
xor
jge
in
out
ds
imul
sti
sahf
lret
jno
ss
loopne
xchg
dec
lahf
jae
mov
cwtl
test
sti
sub
xchg
cmpsb
popf
call
xchg
cmp
popw
mov
pop
dec
sbb
test
in
ret
fistps
xchg
or
test
inc
jg
push
movsb
dec
cs
push
sets
sbb
sub
pusha
enter
add
push
xor
loopne
movsl
rolb
out
sarb
or
mov
testl
sbb
lods
cmpsb
cmp
jo
call
je
dec
int3
xor
clc
add
mov
or
or
lret
push
int
and
hlt
fnstsw
mov
push
sbb
and
orl
sub
add
lods
ds
inc
das
jbe
adc
fstps
pop
inc
adc
and
inc
icebp
push
scas
dec
shll
push
xorb
sbb
js
loopne
pop
cmpsl
cmpsl
adc
push
jb
or
inc
or
sbb
mov
pop
clc
fwait
dec
cmp
pop
fadd
shlb
je
push
roll
in
std
je
mov
push
fwait
stos
pop
add
xor
jmp
in
scas
or
enter
mov
add
jne
fdivs
enter
jp
fisubrl
testb
dec
fisubrl
jmp
std
popf
in
inc
jmp
das
mov
test
ror
es
andl
lahf
lcall
fmul
and
and
mov
mov
cmp
xchg
inc
push
adc
in
sbb
out
in
dec
mov
js
xor
ret
add
adc
sub
push
mov
cmpsl
in
mov
lret
mov
xchg
mov
cmpsl
pop
test
push
fistps
mov
dec
std
cs
inc
stc
gs
pushf
push
inc
cmpsl
xor
or
cli
inc
push
loopne
mov
sbb
loop
mov
push
sub
lret
call
or
xchg
xlat
test
xor
dec
and
mov
lods
ret
sbb
adc
in
das
pop
xlat
lahf
mov
jp
sbb
fistl
out
in
adc
lcall
inc
scas
inc
jp
repz
popa
inc
call
in
icebp
sbb
out
sbb
sbb
pop
movsb
mov
adc
aas
push
std
or
pop
pop
ljmp
loopne
rcll
mov
lcall
pop
pop
out
sub
ljmp
aam
ficompl
sarl
in
pop
xor
jb
pop
lea
mulb
jbe
cmpsb
cmp
bound
mov
push
xchg
and
add
lahf
leave
mov
xchg
je
int3
xor
pop
inc
arpl
add
mov
pop
sbb
inc
xor
add
push
rorl
cmp
pushf
or
inc
mov
cld
cwtl
pushf
imul
scas
int
out
and
and
out
mov
ss
pushf
jne
lock
xchg
or
cmp
inc
xor
jl
dec
pop
dec
imul
jle
dec
jp
pop
mov
sub
adc
sbb
adc
lcall
or
sbb
inc
aas
lcall
jecxz
or
dec
ljmp
scas
imul
xchg
in
out
push
cmp
push
or
icebp
adc
sbb
mov
lds
addb
mov
not
sbbb
xchg
push
bound
adc
sarl
xchg
jl
fs
sub
shlb
inc
dec
and
add
mov
push
sub
sbb
mov
push
aad
mov
mov
in
iret
stos
aaa
mov
test
movb
cmp
add
scas
sub
xor
sbb
jmp
mov
and
pop
push
dec
cmp
sbb
aam
cltd
aaa
jg
xor
das
jle
mov
adc
dec
mull
jge
push
mov
xchg
xor
pop
ret
pop
pushf
mull
cli
ljmp
je
loop
cli
mov
ja
fcomps
in
jne
pushl
pop
data16
dec
iret
xor
cmp
mov
decb
sarb
pushl
xchg
loop
jmp
stc
inc
sub
xchg
test
inc
push
ss
mov
fsubrs
jae
iret
xorb
dec
push
pushf
je
inc
mov
lsl
repnz
data16
pop
pop
xchg
mov
repz
add
xchg
stos
mov
xor
mov
sub
jp
push
pop
push
push
sub
jnp
mov
sub
out
popa
out
xor
adc
cmpsb
xchg
xchg
or
scas
xchg
js
hlt
cmp
test
jo
xchg
mov
in
lret
adc
mov
test
hlt
push
jmp
xlat
or
test
push
xchg
adc
inc
add
and
cwtl
and
jo
add
leave
jecxz
clc
in
xchg
in
adc
mov
fs
cmp
mov
cmp
xchg
sbb
es
iret
pop
in
dec
int
jmp
push
mov
fucompp
aam
mov
dec
jbe
mov
lahf
insl
movups
push
insb
xor
push
loope
repz
iret
jg
inc
je
mov
dec
inc
arpl
add
cmpsb
test
pop
and
mov
jge
pop
xorb
negb
test
xor
sub
incb
cmpsl
cld
sbb
or
xor
dec
inc
xchg
stos
enter
stos
clc
push
dec
loopne
or
mov
xchg
jo
cmpsb
add
sub
sbb
inc
sbb
jno
xlat
xchg
lret
aaa
pop
pop
clc
aad
jge
cltd
pop
shll
jns
imul
xor
and
and
sahf
aam
jns
shr
inc
out
jp
shlb
cmpsl
add
jp
sub
cs
in
mov
push
mov
add
inc
mov
xor
aas
dec
sbb
inc
fucom
lahf
and
xor
and
dec
push
jnp
or
arpl
and
sbb
push
or
pop
sub
inc
inc
mov
pop
lret
and
or
dec
sbb
sbb
adc
rorl
mov
gs
cwtl
pop
push
lods
cmp
dec
add
push
jg
dec
or
icebp
jmp
cmp
jno
iret
cmp
sub
mov
pop
mov
js
push
lea
push
fldt
cmpsb
out
mov
shlb
mov
mov
cmpsl
cli
jne
scas
inc
or
popa
pop
cltd
dec
ret
jmp
pop
insb
out
shlb
dec
jns
imul
mov
or
xor
add
push
pop
mov
jge
xchg
inc
inc
xor
popf
inc
roll
add
aam
and
and
mov
xor
in
mov
push
aad
scas
cmp
mov
xchg
sbb
cmc
test
mov
pop
sub
jne
popa
inc
aas
movzwl
xor
loopne
pop
popf
xchg
daa
popa
sar
pushf
cvtps2pd
push
mov
pop
mov
inc
fnstenv
xchg
stos
adc
out
cmp
xchg
jbe
shrl
std
loope
inc
stos
inc
cmp
lods
inc
mov
enter
push
fstl
xchg
xor
sti
sbb
xlat
pushf
pop
fwait
mov
mov
pop
jnp
test
dec
mov
ret
pop
aam
outsb
stos
jb
test
aaa
outsb
int3
and
jnp
dec
rcrb
ja
or
addl
inc
push
out
dec
ja
pop
fidivrl
cmc
lret
arpl
addr16
cmc
rcll
dec
jno
xor
js
cmpb
lods
inc
scas
popa
push
jo
jmp
cmpsl
xlat
cmp
dec
js
mov
inc
insl
and
push
aaa
jbe
xchg
inc
fistps
inc
iret
mov
leave
test
leave
aaa
ret
je
mov
test
setno
xchg
push
inc
add
mov
pop
mov
inc
scas
je
sbb
fwait
add
xchg
int3
mov
fistpll
xorl
xchg
outsl
bound
into
sahf
in
mov
pop
push
and
popa
xor
movsb
sti
sti
add
jmp
push
js
scas
test
fwait
xchg
std
mov
pop
sub
enter
dec
enter
jno
push
insb
movsb
ljmp
pop
push
mov
mov
fs
mov
push
into
pop
or
push
into
sbb
ret
outsb
jl
dec
or
ret
fildl
mov
aam
inc
adc
jl
xor
int
mov
sbb
cmp
aad
push
xor
ret
jl
rclb
scas
jb
pop
int3
ss
call
fldl
jge
pop
mov
push
in
data16
sahf
and
stc
ljmp
lods
stos
shll
repz
lods
leave
push
sbb
xchg
xlat
daa
inc
jle
pushf
or
pusha
les
lcall
or
clc
lahf
inc
rclb
fcomps
xor
pop
movsb
adc
bound
mov
add
negl
pop
push
loop
jmp
orb
sub
adc
sub
inc
sub
out
fs
std
sbb
or
pop
sbb
ret
xchg
adcb
jb
pop
jae
aad
jo
cmpsl
out
push
mov
or
aad
ret
pushf
clc
lea
inc
cmp
xchg
cld
mov
sub
add
dec
bound
jno
jno
jo
jl
xchg
cmc
cmp
inc
arpl
add
fcom
icebp
jp
clc
cltd
insb
lds
and
push
int
frndint
fisttpl
mov
pusha
mov
ficomps
mov
pop
jp
pusha
add
jbe
addl
jb
lds
das
or
pop
pusha
xchg
cld
cmpsl
jge
cmp
add
jnp
or
cmc
nop
push
xchg
ret
out
adc
lahf
std
ja
cmp
jmp
lret
or
xchg
pop
clc
and
lret
and
cmpsl
jo
cmp
cmp
mov
es
loopne
into
mov
or
outsl
stos
xor
cmp
repz
pusha
out
or
cmpsl
mov
outsb
mov
cmp
sub
js
fsts
xchg
mov
cmp
sbb
in
xchg
mov
cmp
js
mov
or
in
or
pop
mov
xchg
xchg
pop
inc
loop
xchg
and
inc
cmp
int3
jae
out
imul
out
iret
mov
mov
repz
jp
push
inc
cmpsl
cmp
out
ffree
movsl
xchg
dec
mov
packssdw
imul
mov
xor
pop
int3
lds
mov
std
mov
loope
fwait
repz
arpl
sub
cmp
sub
and
pop
cmp
out
ljmp
or
les
jge
sub
mov
enter
or
lea
fiadds
add
mov
pop
lods
jne
mov
pushf
aam
dec
cmc
pop
sub
sub
or
mov
xor
sub
fistpll
je
mov
sub
in
dec
pop
and
xchg
cmc
decl
mov
adc
xchg
cmpsb
rcrl
xor
sub
pop
xchg
fdivl
fildll
mov
clc
pop
or
insl
scas
icebp
out
and
scas
int3
imul
addr16
jp,pt
sub
jo
sbb
fists
out
and
jns
mov
dec
push
xchg
lock
scas
jnp
or
inc
dec
bound
dec
push
dec
push
sbb
jns
dec
push
xor
inc
push
nop
pop
data16
add
add
lock
aad
jbe
lods
lea
mov
xchg
or
fdivrs
push
lahf
mov
inc
ds
xchg
push
pop
sbb
inc
jl
xlat
or
jns
enter
or
aaa
test
and
add
in
out
popf
std
pop
shl
pop
adc
icebp
dec
ljmp
adc
inc
mov
std
std
in
cld
cmpsb
pop
stos
and
jnp
or
fistl
adc
sahf
loop
jle
cmc
cmpsl
push
adc
cmp
xchg
xchg
sbbl
das
jb
lock
jae
add
in
dec
lret
sbb
add
dec
inc
filds
rclb
mov
fcompl
sub
push
or
sbb
jge
out
push
xor
test
call
xor
sbb
mov
scas
mov
jo
cmp
in
je
ror
or
sub
dec
cmp
xchg
pop
imul
das
aaa
sub
setg
and
orl
or
lcall
xor
imul
pop
xchg
stc
into
push
sbbl
sub
fiaddl
sbb
pop
dec
test
adc
pop
add
pusha
cmpsl
fildll
pop
in
add
xorl
dec
or
fstpl
loop
cmp
lea
imulb
negl
testl
inc
stos
sub
ljmp
addr16
mov
inc
ret
push
cmp
mov
dec
xchg
cmp
sahf
lds
push
addr16
mov
and
stos
rol
or
aas
fsubr
mov
lea
mov
and
mov
jb
and
inc
hlt
in
shlb
xchg
mov
cltd
and
cmp
xchg
jae
pushf
sub
aaa
inc
das
push
push
sub
add
mov
scas
pcmpgtb
shrb
sub
push
jbe
popa
push
jne
enter
insb
push
mov
stos
mov
rol
sbb
pop
aas
or
adc
xor
cltd
pcmpgtd
in
dec
mov
out
fimull
xor
cmpsl
mov
lcall
mov
mov
adc
xchg
outsb
fldl
adc
lods
fldl
decb
les
mov
call
mov
outsb
inc
jo
call
pusha
push
sbb
arpl
cltd
jae
fs
pop
xor
lret
loope
xchg
mov
test
scas
dec
mov
xchg
dec
sub
fistpl
mov
xchg
pop
subb
movsl
xchg
add
adc
dec
sub
shrb
push
mov
inc
add
pop
pop
inc
adcb
push
jae
or
in
lods
cmp
jge
cmp
dec
hlt
stc
push
nop
pop
ret
sub
push
cmp
add
push
pop
sahf
inc
or
int
mov
xor
jmp
lods
frstor
sbb
movups
ja
adc
jg
imul
cmpsb
adc
cmp
or
pop
fwait
fwait
pop
sbb
das
adc
pushl
mov
xchg
xchg
ds
jnp
xchg
jecxz
push
cmpsb
pop
pushf
out
mov
sbb
ret
add
xorb
jecxz
jno
push
cmp
mov
push
inc
popl
int
dec
dec
mov
lock
test
and
lock
fmull
jge
popf
out
pop
adc
push
add
insb
cld
sbb
stc
cmpsb
inc
sbb
lds
pop
mov
mov
outsl
hlt
mov
cmp
dec
cmpl
push
xchg
add
xchg
es
shll
cld
mov
sahf
dec
push
daa
sbb
mov
mov
or
jge
pop
int
insl
mov
cs
xor
outsb
adc
dec
xor
stc
mov
clc
mov
stos
js
adc
or
xchg
ret
sub
sbb
rcl
and
fsubrp
pop
push
aaa
rcll
cmp
out
in
mov
jp
xchg
cmp
adc
xchg
stc
mov
xor
push
imul
mov
in
scas
add
fstps
insl
loope
addr16
xlat
mov
xchg
movsl
lret
jge
add
lahf
xchg
incb
mov
or
fucomip
es
loop
leave
das
mov
mov
inc
push
adc
xchg
add
clc
ljmp
jecxz
fisubs
mov
jge
jge
xor
jnp
or
mov
adc
lods
mov
data16
aaa
movsl
out
ud1
mov
mov
in
mov
cmp
xor
push
mov
fsubrl
stos
or
stos
jo
leave
lret
pop
push
adc
jbe
add
mov
dec
mov
push
jns
fwait
adc
into
inc
fidivrl
dec
or
lods
aad
icebp
iret
inc
mov
pop
add
popa
and
dec
sub
mov
jl
lea
pushf
add
inc
xchg
pusha
xor
dec
inc
aaa
push
pop
dec
mov
adc
sub
test
ret
repz
mov
xor
jb
cmp
das
std
mov
add
mov
jbe
sub
push
pop
stc
sarl
test
adc
fnstenv
fwait
mov
xor
mov
das
int3
dec
lods
pop
mov
mov
icebp
xchg
push
cs
sbb
data16
testb
stos
test
leave
aad
stc
rcll
or
sarl
push
out
sbb
sub
std
sbb
jb
das
daa
mov
push
fwait
addr16
adc
out
sarb
fsub
stos
cmpsl
in
xchg
and
push
mov
lea
test
lock
sub
dec
testl
insb
sarl
scas
or
dec
fistps
dec
adc
movd
jo
jno
call
mulb
test
pop
push
cmpsb
lahf
and
sub
adc
ret
lcall
cmp
push
jge
mov
pop
lcall
mov
shrb
mov
push
or
jle
pushf
dec
sub
movsb
lahf
xor
clc
sbbb
clc
addr16
into
mov
leave
push
daa
test
outsb
jae
sbb
xor
std
stos
insb
cmc
fcoms
rcl
out
stos
mov
daa
adc
cli
in
rorb
lret
and
cmp
lret
andb
repz
adc
xchg
lret
outsl
dec
movsl
stos
cld
jns
test
jae
subl
inc
dec
imul
sub
jnp
fwait
xchg
xchg
xchg
sub
fcomps
jl
jmp
call
aaa
adc
out
jmp
jmp
clc
jnp
lds
sub
jnp
and
ljmp
fisubs
daa
bound
jne
cs
les
inc
cli
mov
fs
push
hlt
add
fwait
mov
icebp
mov
mov
fcomps
test
cmpsl
dec
add
addr16
pop
insl
cmpsb
stos
in
sbb
sti
stc
cld
xor
mov
ret
push
sahf
es
jbe
aad
negb
mov
movsl
xchg
outsl
mov
aam
ds
pop
xor
data16
xor
xchg
jle
pop
bound
stc
inc
cmp
mov
out
mov
cmpsb
jecxz
decb
mov
imul
outsl
jge
add
and
add
mov
xlat
in
sbb
xor
dec
pop
xor
lret
test
pop
jns
loop
arpl
mov
call
in
test
xlat
test
fucomip
mov
das
push
stos
loopne
push
mov
xor
push
push
or
pop
fcomi
pushf
test
shll
mov
dec
mov
and
dec
outsb
adc
ljmp
enter
or
mov
mov
stos
test
js
xchg
scas
sbb
or
jae
fdivrl
pop
in
out
jb
ljmp
sub
je
gs
sub
push
push
out
xor
je
jp
fnsave
or
dec
xlat
out
cmp
sub
add
sbbl
aad
xor
lods
out
fwait
jge
add
das
das
imul
shlb
push
loopne
mov
pop
push
push
jnp
shll
mov
lock
sbb
add
adc
add
mov
push
mov
fsubrs
in
mov
mov
push
dec
mov
les
mov
cmp
stos
sub
pop
lods
xchg
mov
mov
out
sub
dec
push
xor
sbb
out
and
jge
in
loop
jmp
push
repz
orb
dec
jecxz
push
pop
das
insb
inc
xorl
xchg
push
dec
and
jg
jns
nop
notl
push
xchg
sti
call
cmpsl
lahf
push
fstpt
push
ljmp
jnp
fs
lods
jecxz
mov
mov
test
cmp
mov
aad
xlat
addr16
movsb
cmc
fld
shlb
dec
fnsave
push
sbb
mov
outsb
pop
jle
mov
push
mov
cmp
dec
je
insl
fnstsw
adc
fs
sahf
imul
mov
cmp
inc
mov
push
sbb
mov
leave
xchg
jmp
mov
adc
stc
dec
or
loop
fistl
out
push
cmp
jns
andl
cmp
and
mov
push
dec
sub
stos
sbb
negl
inc
inc
pop
sub
dec
inc
add
mov
sub
rcl
in
mov
fwait
rorb
mov
jae
mov
lods
cmp
push
mov
fisttpll
cmp
mov
dec
pop
mov
enter
cmp
popf
mov
fstl
or
aaa
fst
xchg
imul
mov
fs
and
inc
imul
rclb
in
dec
sbb
fisttpll
loop
rcrb
sahf
sub
inc
pushl
sbb
testl
jbe
cmp
ja
mov
cmpl
insl
and
nop
and
mov
lds
mov
jne
das
adcb
stos
cmpsl
mov
mov
push
sub
subl
aad
outsl
ret
fsubrp
dec
lret
push
cltd
popf
int
pop
pop
sbb
decl
cmp
fstps
mov
lret
mov
enter
or
or
jmp
xchg
addl
push
out
cmp
inc
int3
push
fucompp
js
xchg
adc
aas
lock
pop
data16
hlt
fldt
sub
out
in
lret
clc
in
or
jg
add
cmp
sbb
subl
mov
rolb
fmull
leave
hlt
sub
scas
adc
pop
and
je
adc
dec
mov
jmp
js
shrl
int
jmp
ja
mov
out
jp
pop
xchg
mov
sbb
mov
push
outsl
xlat
hlt
jp
push
mov
cmp
movsl
shl
and
ret
movsl
xor
test
fimuls
repz
mov
ret
addr16
ds
push
jns
inc
adc
imul
sti
sbb
jb
lds
lret
ret
jecxz
repz
mov
sahf
dec
dec
adc
inc
scas
inc
sub
sub
in
inc
mov
sub
movsl
aad
sbb
push
or
jle
repnz
push
out
adc
adc
sbb
orl
scas
cmc
mov
push
arpl
daa
shl
xor
movsl
fsubs
pop
add
cmc
cmp
dec
ljmp
adc
lock
dec
inc
inc
call
xorb
xor
and
sbb
push
xchg
call
stc
dec
bound
pop
jecxz
push
xchg
and
jg
sti
popa
repnz
and
cmpsl
push
arpl
lea
test
jbe
mov
fbld
int3
test
imul
mov
fldl
inc
adc
inc
dec
adc
nop
jmp
adc
xor
jl
test
test
dec
add
jmp
fisubs
test
call
pusha
je
mov
sbb
adc
add
mov
out
jmp
out
or
xor
mov
lock
jge
pop
add
out
xlat
fsubrl
sarl
icebp
stos
in
cmp
push
fwait
loopne
stc
add
dec
push
jle
insb
xchg
mov
sbb
cld
in
xor
pop
xlat
mov
xchg
xchg
xchg
or
and
sarl
outsb
add
out
xchg
arpl
add
cmp
data16
fsubp
stos
mov
shl
mov
in
push
fwait
gs
push
pop
jmp
jl
pop
sbb
lods
adc
mov
popf
outsb
xchg
int
lret
andb
test
jne
inc
mov
mov
or
pop
push
std
xchg
insb
sub
loop
mov
adc
jl
xchg
mov
adc
stos
mov
popa
test
fisubrl
push
adc
mov
mov
fwait
cmp
jno
pop
adc
or
jo
sti
pop
cmpl
push
pop
pop
dec
jge
mov
xorb
dec
dec
out
xchg
push
out
mov
xchg
adc
sbb
je
push
pop
or
xor
fcoml
jge
sbb
sub
lods
rorb
xor
mov
pop
inc
add
xchg
adc
hlt
mov
icebp
mov
sti
jle
dec
ret
cltd
pusha
sbb
mov
xchg
iret
roll
cmp
adc
faddp
or
fsubl
mov
dec
cmpsb
les
sub
ret
imul
sbb
push
subl
jmp
mov
sbb
mov
xchg
fisubrs
neg
andl
xchg
mov
cmpsl
pop
int
dec
xor
or
inc
int
mov
mov
add
jge
sbb
push
pusha
jo
outsl
lret
sti
lcall
cmp
fucomip
xorb
in
in
into
mov
pop
cmp
sub
inc
sub
push
pushw
lock
std
out
inc
outsb
inc
popa
cmp
repz
out
cmpsl
and
cmp
dec
sbbb
push
push
daa
mov
jecxz
stos
mov
sbb
sub
shll
xor
push
popf
pop
push
nop
mov
es
loope
imul
loop
psubusw
and
jmp
insl
cmp
dec
xchg
pop
stc
push
xor
repnz
popa
xchg
xchg
aad
cs
push
out
ja
sub
les
hlt
inc
mov
sub
testl
sbb
push
mov
inc
ds
mov
sbb
in
and
clc
ja
and
pop
lea
mov
jecxz
jns
imul
stos
andb
xchg
loopne
adc
push
mov
fdivp
add
je
dec
dec
dec
xor
ret
cmc
int3
pop
mov
inc
push
adc
adc
mov
out
lret
jne
sti
mov
lods
popf
mov
out
pop
ss
hlt
das
and
sti
lods
jecxz
xchg
xchg
daa
inc
sbb
ljmp
gs
mov
mov
je
sbb
add
int
cwtl
out
adc
add
and
pop
adc
push
dec
cmp
adc
push
add
pop
pusha
xchg
fmulp
ja
xorb
push
push
push
cmp
cli
adc
xor
xor
test
xor
xchg
mov
cwtl
mov
add
dec
data16
sub
add
jns
pop
sbb
inc
imul
divl
movsb
or
aaa
stos
pusha
hlt
dec
out
subb
jnp
rol
hlt
shr
stos
sbb
xor
lock
inc
jae
adc
push
and
add
subl
fisubrl
xchg
mov
mov
lods
xchg
ror
mov
aas
mov
loop
push
cmp
push
xchg
adc
inc
add
stos
pusha
push
ljmp
clc
push
push
sub
or
ret
in
jbe
ds
cs
push
and
xchg
mov
jle
jne
cli
and
mov
and
mov
xchg
out
fisubrs
leave
ret
test
in
shr
adc
mov
fistl
notb
and
add
add
imull
cmp
inc
mov
inc
mov
lods
fiadds
dec
dec
jmp
scas
ja
or
xchg
ds
inc
mov
shrb
lds
mov
mov
fsubr
shrb
mov
scas
lcall
and
movsb
or
sarl
xor
or
adc
sub
push
cmovno
int
jle
lea
je
mov
fcoms
dec
and
adc
test
mov
in
push
rolb
and
push
or
xchg
int
inc
sarl
negl
fcmovne
test
or
mov
mov
mov
fidivrs
ficoms
movsb
sbb
pushl
scas
add
jg
enter
lea
xchg
sbbb
test
xchg
arpl
cmc
mov
stos
dec
aad
popa
pop
mov
std
xlat
mov
cwtl
pop
mov
in
lea
cld
pop
xlat
jg
mov
leave
pop
clc
ss
rolb
inc
xchg
test
pop
xlat
mov
insl
xchg
dec
addl
dec
adcb
aad
in
cmp
rcrb
ss
push
daa
ljmp
test
and
xor
dec
movsb
jecxz
jecxz
adc
push
ret
out
leave
aad
pushf
int3
outsb
jle
arpl
push
cmpsl
test
jno
push
outsb
mov
into
stos
in
arpl
sub
pushf
repz
push
dec
pop
lcall
dec
sbb
rcll
in
call
add
ds
test
cli
and
shlb
jl
roll
or
aas
mov
mov
cmp
add
test
cmp
lock
lret
std
punpcklwd
dec
aaa
in
gs
sbb
sti
or
test
call
inc
cmp
pop
in
jecxz
mov
add
jl
or
mov
mov
mov
mov
call
pop
stc
repz
xchg
mov
ljmp
inc
xchg
sahf
inc
in
nop
test
jnp
push
popf
jmp
mov
inc
mov
sub
inc
push
adc
and
fcom
dec
lret
dec
cmpsb
jmp
xchg
popa
mov
lretw
rorl
aam
xchg
pop
sahf
pop
rorb
sub
and
mov
dec
pop
or
xchg
aas
jmp
mov
arpl
mov
std
inc
mov
std
adc
ljmp
mov
les
cmp
aam
pop
gs
xchg
gs
mov
test
stc
das
mov
hlt
and
mov
ret
jle
jmp
or
pop
adc
and
jno
cmp
cmp
movsb
loope
sbb
add
jmp
jae
inc
inc
std
popf
xchg
cmp
or
pop
fadds
cltd
das
std
data16
pop
push
cmp
in
div
sbb
jmp
cmp
stc
sahf
jns
inc
jmp
stos
cmpb
test
das
movsb
aaa
test
cs
inc
ret
bound
popf
mov
repnz
sar
loopne
mov
jg
repnz
mov
lret
andl
dec
mov
stos
test
shll
addl
mov
mov
ds
cmp
dec
mov
out
ds
arpl
fdivs
cld
shll
pop
idivl
add
out
and
loop
pop
mov
test
push
loop
ds
sahf
dec
aad
mov
repz
jne
das
mov
cmp
mov
pushf
cli
xor
cltd
out
mov
cmpsb
mov
aam
inc
faddl
add
fdivs
dec
fiaddl
mov
inc
pop
cltd
dec
aaa
adc
test
push
add
inc
cs
cmc
jne
int
xor
push
sub
cwtl
jl
int
scas
addb
add
enter
movsl
or
insb
push
dec
xchg
adc
fadd
jmp
andl
jnp
add
jnp
mov
test
pop
sbb
ds
or
cmp
repnz
mov
adc
inc
aam
int3
xchg
out
shrl
mov
xchg
lahf
insl
xor
arpl
pop
ret
jns
in
dec
adc
or
or
cld
mov
fsts
roll
push
inc
jne
jnp
popf
ds
call
cmp
push
imul
adc
inc
fs
mov
adc
in
add
push
icebp
mov
negl
pushf
pop
loopne
cmpsb
jp
cmp
xor
cmpsl
cmpsl
sbb
sub
cmp
clc
cmpsl
push
mov
and
fsts
adc
cld
jnp
in
mov
cltd
dec
pusha
ret
push
les
ss
xor
cli
adc
stos
jbe
fistps
movsb
pop
xchg
cmpsl
rcrb
arpl
jg
lret
lods
mov
pushf
nop
or
dec
lods
cmpsl
xchg
jg
sti
xor
stc
in
cltd
ret
inc
pop
out
adc
and
mov
cmp
mov
and
in
lret
mov
sub
adc
jae
xchg
inc
and
imul
jb
xchg
cmp
push
mov
in
push
cmp
adc
jecxz
jge
into
push
outsb
adc
leave
rorl
aaa
sbb
lcall
mov
imul
xchg
mov
and
cwtl
push
lea
lods
inc
push
out
push
xchg
sub
test
hlt
js
les
scas
pushf
and
dec
or
sub
rcl
mov
arpl
adc
cmc
in
dec
xchg
push
in
inc
mov
dec
pop
add
ljmp
xlat
aad
out
lahf
loopne
arpl
xchg
cli
int3
jnp
pop
pop
xor
cmc
mov
movsl
scas
xchg
loopne
mov
out
sbb
mov
lods
ss
inc
ret
ds
test
call
push
inc
mov
pop
jnp
call
je
cmc
or
mov
push
sbb
push
out
mov
push
adc
cmp
inc
and
push
out
testl
pop
push
sub
sbb
pushf
or
dec
xor
sub
lds
sahf
mov
mov
and
nop
push
icebp
and
jp
pop
mov
or
sbb
dec
lahf
daa
ret
lahf
and
roll
lahf
mov
test
mov
sbb
cli
fistpll
add
sbb
cmp
push
pushl
xchg
loopne
call
or
aas
sub
jns
jae
mov
inc
pop
xor
movsb
iret
jecxz
mov
pop
push
insb
cmpl
stc
mov
sub
dec
add
dec
mull
inc
mov
xchg
pop
lahf
dec
outsb
jge
aas
xor
mov
int
inc
jb
stc
mov
pop
loope
sbb
mov
sub
mov
aad
out
movsl
cmp
loopne
aas
aad
jmp
dec
adc
xor
pop
add
pop
xchg
or
push
imul
fstl
push
mov
leave
aas
std
and
iret
and
test
popa
das
es
in
repnz
pop
hlt
mov
dec
mov
fst
ljmp
add
into
ja
xchg
ds
jns
pop
mov
repnz
and
sbbb
ljmp
push
fldl
and
mov
pop
sub
cmp
call
imul
push
cli
je
je
dec
ret
or
cld
adc
shrl
cmpsb
inc
lods
in
call
mov
sub
dec
cmp
cmp
dec
adc
les
call
jle
xchg
cs
imul
jle
sub
call
push
sbb
pop
push
or
repnz
out
and
subl
sub
lea
and
xor
enter
cmpb
mov
notb
bound
sbb
sub
mov
mov
pop
loop
cmp
out
inc
xor
push
movsl
xchg
outsb
add
mov
pop
dec
jne
clc
xchg
inc
sbb
add
fisttps
leave
jnp
push
ljmp
mov
je
xor
xchg
inc
dec
add
mov
xlat
mov
mov
fwait
mov
jp
mov
pop
lea
jnp
xchg
es
pop
jmp
idivb
mov
jge
pop
sbb
pop
push
imul
sbb
lcall
mov
add
pop
roll
repz
push
add
iret
sub
lock
cmp
push
pushf
pop
out
test
popa
ret
adc
and
daa
add
cmp
js
mov
dec
mov
or
dec
xchg
xor
fistps
addr16
inc
mov
imul
sbb
insl
mov
lcall
nop
pop
scas
push
out
jmp
ret
pop
add
lock
cmp
mov
js
daa
add
addr16
cltd
and
icebp
dec
push
aad
xor
mov
jecxz
rcrl
adc
mov
and
jmp
push
shll
subb
movsb
adc
add
iret
pop
and
daa
sub
cmc
stos
sbb
sub
sub
ss
jge
jge
jle
stos
jno,pn
push
cld
adcl
and
aaa
sbb
lods
jbe
sbb
sbb
stos
sbbl
roll
dec
fs
jle
out
push
out
jns
xchg
push
daa
hlt
mov
stos
rcrb
mov
pop
mov
test
movsb
mov
ja
in
pop
dec
repnz
xchg
sub
cld
je
pusha
jnp
push
ja
jmp
popf
pop
das
movsl
jecxz
dec
rcrl
pop
pop
mov
fcmovu
cmp
mov
sarb
inc
pop
add
sub
in
out
and
roll
sbb
dec
lods
mov
jb
cmp
sub
fiaddl
divl
aas
repnz
sbb
lahf
push
insl
dec
push
outsb
aaa
add
into
cwtl
vmread
shll
cmp
sarl
jbe
mov
mov
inc
add
cmp
jns
cmp
xorl
es
int
sbbl
bound
jmp
fstpl
clc
dec
mov
and
lods
je
add
xlat
ds
insb
in
cmp
jno
jecxz
les
lret
sarb
sub
out
filds
sbb
call
idivb
xor
mov
insb
clc
pop
sub
lock
jb
or
push
negb
push
or
add
push
jns
enter
mov
pop
push
mov
vandnps
push
dec
dec
ja
jns
arpl
popf
js
inc
xchg
sti
or
notl
hlt
aas
stos
jp
lret
dec
rolb
inc
fdivl
lods
adc
mov
lret
mov
xor
and
xchg
inc
mov
rcr
push
add
call
test
cmc
dec
jp
lods
xchg
xchg
push
pop
xchg
call
jo
outsl
into
mov
dec
and
push
push
push
iret
test
nop
into
imul
add
cmp
or
hlt
adc
xor
shll
cwtl
sub
lcall
push
cmp
orl
sub
pop
icebp
mov
or
lods
mov
int3
enter
or
shlb
cld
sbb
pop
out
movsb
shlb
and
xor
push
dec
jae
lock
dec
arpl
sbb
push
nop
loop
xor
daa
mov
or
adc
fldcw
inc
movsl
mov
jle
mov
push
mov
loopne
inc
mov
sub
inc
lcall
inc
call
cmp
pop
xor
aaa
push
pop
mov
mov
xor
ss
inc
mov
push
or
sub
pop
stos
and
xor
or
mov
push
pop
cmp
push
cmp
xor
cwtl
push
aad
and
lahf
cmp
int
imul
fistpll
xchg
das
loop
lds
jmp
imul
fistl
repnz
jp
push
push
aaa
sub
scas
bound
pop
adc
jecxz
repnz
lea
push
mov
mov
xor
cli
mov
les
xchg
adc
or
add
cltd
shlb
insl
ja
mov
inc
adcb
rcrl
loope
cmp
mov
xlat
mov
pop
in
add
sti
pop
cmp
add
test
arpl
aas
xchg
cs
scas
js
jns
xchg
mov
pop
mov
rcl
mov
insl
and
ss
and
jp
scas
dec
loopne
bnd
mov
adc
xchg
loope
and
pusha
dec
mov
dec
cmp
inc
inc
pop
movsl
std
cs
popf
xor
mov
adc
inc
adc
pop
ljmp
mov
daa
shlb
movsb
or
ret
adc
add
pushl
iret
lahf
imul
movsb
pop
scas
ss
inc
and
adc
sub
xchg
and
es
int
adc
sub
mov
push
ret
ret
and
dec
orl
mov
ds
xchg
xlat
hlt
push
pop
stos
mov
or
jge
cmc
iret
cmp
cmp
ds
add
iret
push
in
mov
jg
pop
cmp
add
pusha
mov
inc
and
mov
lea
mov
mov
js
push
outsb
push
mov
push
ffreep
aaa
daa
rolb
xrelease
in
sbb
inc
jmp
jl,pt
cmp
push
movsb
lret
outsb
xor
inc
movsb
iret
mov
add
aam
jns
jge
mov
ja
mov
mov
sub
push
mov
mov
not
push
or
push
dec
fcoms
mov
jge
sbb
gs
push
fildll
test
pop
jge
mov
sbb
xor
pop
les
mov
add
cmp
cmpb
dec
or
mov
inc
test
loop
cmp
jnp
xor
aas
or
xchg
adcl
cmp
cmpl
dec
in
adc
negb
std
mov
cmc
lds
les
jmp
subb
inc
subl
lea
dec
lahf
push
std
xchg
scas
movsl
lea
mov
mov
cmp
shrl
ret
xor
jle
insl
dec
mov
lret
xor
addr16
xor
int
in
pop
arpl
push
xchg
ds
nop
inc
lahf
clc
fistpl
inc
add
ret
loope
clc
sbb
or
pop
push
or
mov
xchg
daa
das
inc
add
loopne
xchg
jge
ja
aaa
push
mov
pop
push
and
dec
inc
jp
and
js
jge
adc
popf
xadd
in
push
lock
in
jns
ss
xchg
sbb
hlt
outsb
ffreep
jle
mov
mov
test
shlb
dec
jns
lcall
adc
movsl
inc
loope
sbb
fcomps
sbbl
cmpsb
mov
jecxz
pop
mov
mov
jl
dec
mov
idiv
add
or
clc
xchg
sbb
mov
imul
into
lcall
jge
ja
mov
lock
ljmp
jae
lods
ds
mov
xchg
inc
es
ret
mov
inc
xchg
inc
push
pop
cmp
mov
fistpll
loopne
cmp
and
lds
loope
mov
adc
shlb
into
roll
clc
into
out
icebp
aaa
jl
mov
out
cmpsl
iret
fidivl
jbe,pt
adc
add
lahf
lods
paddw
bswap
sbb
inc
mov
enter
push
push
inc
mov
rcll
or
shrb
out
and
sbb
pop
pop
inc
xchg
outsl
or
sarb
push
pop
sbb
js
js
fdivrl
xchg
outsb
push
mov
and
mov
pop
pop
add
xor
pop
inc
mov
andb
adc
sub
mov
test
fcoml
lahf
fcmovnbe
mov
sub
cli
iret
inc
xor
mov
mov
and
test
mov
dec
hlt
loopne
in
stos
insl
push
bound
lock
mov
adc
pusha
add
push
sbb
jle
test
popa
sub
jno,pn
xchg
mov
dec
repz
mov
rcll
push
dec
mov
stos
shl
sub
sbbb
push
sub
repnz
lret
push
mov
and
fldt
je
mov
pop
rcrl
in
fcoml
sbb
cli
stos
bound
pop
lods
shld
loopne
sub
sbb
fs
xor
sub
cltd
clc
movsb
adc
and
es
mov
movsb
cwtl
push
xchg
xchg
jmp
xchg
dec
call
imul
or
push
pop
dec
xchg
pop
xor
push
sub
cmpsl
or
repz
cmpsl
int
inc
loope
js
loopne
pop
add
push
jae
popf
pushl
js
adc
lea
es
mov
adc
pop
cmc
jl
pusha
fs
stc
jbe
mov
imul
fcomp
xlat
jmp
movsl
pusha
mov
adc
xchg
push
arpl
xor
xchg
adc
cltd
fnstcw
xchg
pop
or
call
ret
pop
mov
and
sbbb
cli
outsb
lret
sbb
or
mov
pop
ja
out
lret
lret
repz
jmp
ss
popl
gs
inc
loope
mov
adc
lcall
adc
push
jge
outsb
dec
add
mull
jge
xchg
add
insb
xchg
mov
xchg
lret
pushf
xchg
dec
jl
jno
call
push
rorb
pop
inc
lea
xchg
loopne
jbe
push
insb
adc
xchg
inc
add
lahf
push
xchg
sub
into
cmp
and
push
mov
leave
push
insl
and
orl
xor
loopne
rolb
sbb
in
test
sbb
pop
cmc
inc
mov
add
pushf
adc
shr
push
sub
ret
ficoms
mov
inc
jo
sbb
add
dec
repz
roll
mov
subb
out
sbb
fwait
leave
push
shlb
cmc
mov
stc
and
pushw
xchg
jp
in
xor
jge
jp
xor
mulb
pop
mov
sub
mov
add
mov
xchg
shlb
aaa
subl
dec
xchg
adc
ja
aaa
inc
jecxz
xchg
or
stos
lret
and
or
aas
pop
sub
pop
push
iret
mov
cmpsl
cmpsl
cli
xchg
jbe
cmp
jmp
aam
mov
and
mov
fistl
xchg
shlb
push
sub
out
dec
out
repnz
adc
add
pcmpeqw
lcall
int
lret
outsb
aad
nop
xchg
lods
add
pop
sbb
jmp
add
das
repnz
add
cli
rolb
xchg
xchg
nop
test
sbb
and
xchg
sbb
adc
adc
out
push
scas
and
std
pop
add
lret
nop
xchg
sbb
xchg
jb
cmpsb
xchg
xor
inc
sub
push
add
popf
gs
data16
cmpsl
lock
pop
xor
loopne
icebp
mov
pop
icebp
adc
imul
call
shr
dec
aas
outsl
ljmp
and
push
add
push
fisttpll
adc
adc
push
arpl
add
fmul
and
xor
iret
aam
test
inc
jge
mov
jo
cltd
sub
jne
je
test
cmp
std
adc
sub
stos
sbb
insl
dec
cmpsl
sub
and
lock
repnz
shlb
ja
mov
mov
aad
and
push
mov
int
inc
mov
inc
subl
xor
lcall
mov
shl
ds
sbb
popf
in
dec
fsubs
add
or
or
mov
bswap
mov
jmp
mov
aaa
data16
icebp
loopne
mov
adc
test
pcmpeqb
adc
fisttpll
jnp
icebp
cmp
add
cmp
pop
xor
insb
cmp
out
push
adc
push
dec
xor
push
jl
andb
adcl
push
fldl
jae
jo
mov
es
out
mov
stos
popa
pop
icebp
mov
loope
jl
cmp
mov
int
dec
jb
sub
inc
test
cmp
mov
in
mov
call
pop
call
pusha
push
sbb
into
xor
mov
or
mov
or
jbe
push
sbb
adc
mov
dec
mov
cltd
mov
int
test
and
subb
mov
outsl
add
stc
cwtl
fistps
imull
xchg
sub
sbb
repz
pushf
sbbl
fdiv
sti
cmp
mov
fs
push
daa
fstpl
mov
iret
xor
pop
gs
inc
xchg
cmp
or
mov
repz
mov
adc
iret
adc
mov
sbb
adc
iret
jns
jbe
cli
jo
xchg
mov
insl
push
loopnew
mull
push
ljmp
jns
ss
movsl
es
rorb
mulb
add
jg
mov
sub
pop
fmulp
pusha
lods
jecxz
xchg
inc
loopne
mov
cs
mov
movsl
jns
stc
sti
js
mov
test
pusha
sub
test
and
rcrb
fildl
or
sarl
out
imul
or
repnz
aam
or
in
in
inc
dec
mov
insl
jo
push
jp
or
out
iret
sub
add
and
push
jg
out
add
adc
sub
cmp
cmpsb
ret
cld
mov
fsubs
fistpl
out
adc
cmpsl
lock
imul
addl
add
addr16
std
jmp
imul
ss
test
mov
sbb
mov
je
jno
and
hlt
inc
mov
dec
sub
inc
fwait
xchg
orb
sub
and
out
outsl
loope
jo
and
cmpsb
push
pop
rcrl
push
jne
ljmp
sbb
fidivrs
xchg
push
xorb
xchg
add
bound
int3
imul
in
sti
sub
xchg
sbbl
addr16
sbb
andb
xchg
cltd
cmpsb
sbbl
pop
sbb
push
js
ljmp
stc
ljmp
jle
mov
ljmp
fimuls
xor
pop
cmpsl
mov
sbb
xchg
add
stos
and
int
push
ja
jne
jg
ja
pushf
add
aaa
fucom
dec
into
movb
test
fbld
in
inc
push
cli
fs
jge
xchg
aad
adc
jno
lds
shl
xchg
dec
jne
inc
sub
imul
adc
adc
push
int
fcompl
mov
jb
shl
repz
fstpt
jp
inc
cmpsl
pusha
jl
xchg
or
data16
inc
les
nop
dec
aam
mov
in
mov
in
push
add
push
dec
jae
jg
lea
sub
xor
iret
aaa
push
cmpsb
push
repz
stos
iret
imul
cld
in
mov
shlb
in
cmp
and
push
test
lret
cmp
cwtl
cwtl
pop
loope
cmpsl
push
daa
push
lcall
cltd
xchg
inc
int
mov
push
idivl
cmp
mov
xchg
shll
repz
dec
mov
cmp
jns
xor
ja
add
rorb
stos
mov
or
cmp
ljmp
lcall
mov
mov
iret
movsl
sbb
je
enter
aaa
or
daa
add
sub
outsl
push
mov
dec
in
movsb
mov
shll
daa
or
cli
mov
push
add
mov
lahf
fcompl
vmovd
sub
push
das
icebp
test
cvtps2pi
fisttpl
imul
sub
fsubrl
add
fadd
jbe
xor
xorl
lret
cmpsb
inc
enter
sbb
sahf
jns
adc
sub
mov
add
clc
sbb
insb
fmul
push
push
xor
lahf
aad
testb
addb
lods
imul
nop
imul
mov
sub
stos
fnstsw
lret
pop
adc
mov
dec
call
imulb
sahf
xchg
cmp
add
dec
repnz
pop
stc
mov
daa
fsubrs
sub
sbb
nop
dec
in
sbb
roll
inc
push
int
xlat
fsubs
pop
sub
push
sahf
mov
dec
in
insb
icebp
movsb
lcall
jge
cld
add
ret
xchg
sbb
adc
push
addr16
jp
shrb
test
cmp
fs
cmp
movsb
jl
mov
mov
xorl
xor
xchg
rcr
jbe
inc
out
lods
leave
pop
adc
test
or
arpl
sbb
cli
and
ret
stos
aam
xor
dec
push
jg
adc
add
inc
adc
sub
out
jmp
data16
cs
and
xchg
push
inc
sbb
or
leave
dec
add
sbb
mov
data16
in
xlat
flds
cmp
push
daa
jp
movsl
into
ret
add
fsubl
dec
xor
adc
push
out
icebp
hlt
add
dec
pop
pop
sbb
mov
mov
and
ds
xor
xchg
rorb
scas
rolb
fcmovnbe
push
ret
inc
pop
mov
mov
lea
inc
rcl
gs
or
sbb
sbb
mov
repz
and
fs
push
mov
in
xlat
sbb
xchg
jo
xchg
daa
xor
jb
add
rcrl
mov
cmp
iret
adc
jmp
ljmp
add
pusha
push
notl
inc
test
mov
jno
dec
into
cwtl
mov
inc
dec
add
out
lret
jno
xchg
pop
or
jmp
dec
jle
sbb
sub
or
pop
mov
lock
xor
clc
scas
push
push
jle
push
adc
and
int
inc
les
sbb
and
ficoms
xor
dec
out
adc
mov
daa
ja
jl
fnstsw
lea
adc
push
add
adc
mov
sub
loop
js
fmulp
pop
subb
xchg
push
leave
pop
aaa
add
push
das
fcoml
push
jns
xchg
outsb
pop
sti
sub
sti
adc
xor
mov
lcall
mov
icebp
and
push
push
js
pop
scas
push
shlw
mov
xchg
inc
jae
lret
push
lret
xchg
xchg
push
xor
cmp
add
imull
push
mov
movsb
adc
das
repz
jno
in
xor
jge
sahf
xchg
out
xor
mov
outsl
jbe
dec
and
push
sbb
jnp
cmp
jp
jmp
mov
jge
mov
sub
pop
ror
jl
dec
ja
cmp
and
pop
insl
jae
mov
repz
fdivrp
cmpsb
pop
lock
sbb
sbb
pop
and
lcall
mov
outsb
mov
push
jae
xor
jge
ret
sbb
jp
sub
pop
out
adc
pop
scas
ja
test
lcall
loope
cmp
push
mov
push
push
fst
push
mov
lret
push
mov
addr16
sahf
cmp
data16
scas
mov
mov
push
cld
xlat
or
inc
pop
mov
pop
arpl
or
cltd
je
push
lock
inc
xor
lcall
or
pushf
pop
adc
add
jnp
rep
je
movsl
inc
xchg
mov
lods
fs
xchg
pop
add
dec
popf
cmc
add
mov
ret
sbb
scas
in
dec
mov
aaa
call
sahf
fstl
mov
inc
in
mov
cmc
arpl
push
lock
mov
fildl
add
pop
cmp
xchg
fcoms
test
clc
xor
pop
pop
jp
stos
out
ljmp
fmuls
push
leave
jbe
loope
andl
push
cli
or
push
push
dec
dec
pop
sub
fidivrl
mov
mov
dec
int3
adc
sbb
add
dec
jmp
or
jmp
into
xlat
int3
jp
xchg
mov
and
mov
mov
in
mov
sub
int
into
mov
rcrb
add
fsubr
mov
notl
mov
or
xor
mov
mov
cmpsl
add
mov
lods
mov
movsl
test
int
popa
sbb
push
xchg
dec
ret
enter
add
or
sub
lahf
adc
mov
xor
int3
insl
shlb
mov
inc
add
incl
push
inc
in
mov
jle
inc
mov
mov
push
loope
insl
jmp
aas
data16
mov
popa
sub
int
xorb
lods
cmp
or
lret
repz
jmp
mov
adc
gs
or
addr16
cmp
outsl
stc
int
nop
push
cmp
mov
mov
add
push
shll
push
xor
cmp
add
jle
fucomip
iret
xor
nop
pop
into
jge
popa
xor
cld
gs
pop
out
stc
mov
repz
sbb
test
xor
sbb
int3
lods
insb
fdivs
nop
in
outsl
cli
cmp
mov
scas
adc
addl
mov
lahf
mov
push
inc
inc
test
jno
mov
sahf
push
lahf
adc
aaa
cmp
adc
xchg
cmc
adc
pop
pop
dec
andl
push
call
xlat
cmp
pusha
push
xor
mov
leave
push
dec
adc
pushf
pushf
mov
aam
add
out
das
in
xor
test
clc
push
xor
and
mov
lret
es
push
sub
pop
sbb
pop
adc
mov
xor
xor
lods
nop
dec
xchg
outsl
ds
lods
mov
flds
xor
scas
xor
data16
cltd
push
iret
subb
sub
rcr
das
iret
pusha
popf
mov
dec
dec
inc
jnp
mov
outsl
fcmovb
movsb
and
xor
mov
insl
dec
cmpsb
in
pusha
lret
outsl
sbb
jmp
rcll
mov
mov
xorb
jmp
in
mov
icebp
dec
out
add
pop
fcoml
mov
fildll
push
cmp
mov
les
or
dec
or
leave
imul
in
cmp
jno
cs
mov
nop
arpl
xchg
rcrb
pop
testb
sbb
ficoml
cmp
jno
add
cltd
cltd
movsl
mov
and
pop
push
lret
fs
inc
arpl
sbb
or
xchg
and
mov
mov
xor
add
jmp
pop
and
movsb
das
push
loop
cld
sahf
cmp
daa
pop
jae
or
je
repz
je
je
orl
mov
or
mov
mov
cmp
adc
pop
int
and
dec
jnp
mov
xlat
add
je
insl
pop
cmpsl
dec
inc
fsts
mov
fwait
nop
ja
notb
sbb
dec
insl
or
lea
js
ds
mov
cwtl
fwait
sti
hlt
iret
dec
mov
pop
or
adc
dec
or
cmp
orb
sub
mov
popf
push
inc
out
setno
das
adc
mov
dec
ds
lods
cmp
loopne
div
je
aam
push
cmpsb
fmulp
lret
out
enter
mov
jl
leave
sti
insl
loopne
call
pop
mov
mov
sti
mov
lcall
out
inc
or
xchg
jbe
int3
addb
xchg
cmpsl
sub
mov
mov
add
repz
rcrb
fs
inc
enter
sbb
int
xor
bound
pop
stos
and
arpl
nop
repz
int
bound
test
mov
inc
bound
pop
in
mov
cltd
aad
mov
push
cltd
les
pop
lds
rol
fstpl
jae
sahf
xchg
dec
dec
xor
data16
popa
les
int3
ja
sub
adc
dec
out
lcall
adc
add
out
cmc
adc
iret
xchg
sub
lret
aaa
addr16
mov
cltd
mov
cs
sti
xorl
mov
push
ja
jg
or
mov
xor
xchg
je
test
sub
cld
and
adc
jp
jb
rorb
adc
cld
shlb
cltd
xor
jle
adc
std
inc
sub
nop
lods
hlt
lahf
imul
mov
add
lcall
out
push
or
lahf
mov
xchg
inc
rclb
sbb
or
inc
loope
out
sub
sbb
outsl
mov
xchg
andl
pop
les
mov
icebp
adc
inc
sub
vmovaps
sbb
shll
sub
mov
mov
push
jmp
jg
sahf
and
xchg
leave
cmp
repz
sbb
adc
mov
push
fmulp
and
adc
and
mov
inc
dec
jno
aad
sbb
jmp
mov
enter
sbb
gs
and
or
xor
cli
insb
xor
pop
jl
addl
mov
jno
sub
sbb
xor
xor
jne
mov
mov
push
sar
lcall
dec
dec
cmp
loope
in
loop
leave
hlt
dec
dec
leave
shll
jp
xor
je
outsl
iret
or
push
adc
test
cli
lds
cmp
lret
and
repnz
or
jmp
sub
dec
fnsetpm(287
sbb
inc
test
movsl
fnsave
xchg
xchg
cs
in
mov
pop
push
cs
rcrb
js
out
test
test
jo
icebp
ficoms
cltd
xor
or
sahf
xor
pop
jne
push
int
and
outsl
sub
movsb
nop
sub
or
andl
fnstenv
in
rclb
imul
pop
jb
mov
mov
cmp
and
call
lret
loop
rcrl
jle
lea
repnz
xchg
mov
push
xor
loop
rcl
push
aas
pop
ffree
jnp
decl
and
outsl
jno
cmp
pushf
pop
rorl
inc
add
rcll
out
popf
aaa
xor
ss
lods
repnz
add
xchg
scas
and
pop
sub
pop
cmp
lahf
movsb
mov
das
insl
dec
sub
xor
and
adc
jnp
out
push
xlat
pop
and
stc
or
mov
outsb
push
jmp
insb
and
pop
lods
sub
push
loop
fsts
stos
loop
rclb
out
mov
xor
mov
add
and
ljmp
sbb
xorb
mov
jle
sub
lds
insb
dec
and
ror
xor
push
xchg
mov
js
and
or
push
fisttpll
pop
mov
xchg
xchg
add
mov
fsts
inc
jge
faddl
pop
ljmp
mov
push
ror
jg
rclb
adc
push
mov
sbb
push
pop
scas
pop
mov
sub
pushf
adc
rorl
xchg
dec
aas
add
mov
repz
scas
xchg
lock
or
mov
and
xchg
pop
cmp
test
ss
aaa
dec
mov
mov
lahf
add
jmp
adc
in
cmpsl
jno
add
popf
mov
xchg
gs
pop
addb
pusha
pop
jns
jb
xor
icebp
push
rorb
xchg
int
adc
adc
adc
aas
push
lcall
sbb
test
cmovnp
movsb
data16
mov
cmc
push
inc
inc
jbe
ss
fwait
xor
fnstsw
pusha
sbb
ficomps
leave
mov
nop
hlt
push
push
jo
out
adc
dec
mov
add
ds
dec
inc
fs
inc
add
xchg
mov
pop
mov
cwtl
inc
jp
xlat
shll
flds
in
jnp
dec
or
inc
imul
push
mov
dec
pop
iret
pop
pop
cltd
cmp
in
or
xchg
es
pop
mov
ja
lret
push
scas
dec
push
gs
ljmp
jno
cmc
lea
mov
sbb
call
push
cmp
out
loop
mov
mov
jg
outsb
xchg
pop
inc
rclb
rclb
pop
pop
xchg
lret
or
data16
ss
int
outsb
js
aam
pop
mov
jnp
sti
into
jge
jno
xchg
jnp
insl
add
andl
pop
mov
mov
stos
into
pop
ljmp
pop
and
xchg
andb
push
fdivl
mul
scas
pop
jmp
jne
jp
xor
or
les
sbb
shr
xchg
xor
outsl
loope
dec
std
flds
inc
xchg
jae
mov
xchg
out
ret
rcll
in
in
fwait
sub
insl
cltd
ljmp
ret
imul
in
fsubr
push
jne
sub
dec
mov
or
int
push
lods
pop
or
mov
adc
adc
sbb
xor
test
cli
xor
dec
mov
sub
push
cmp
jmp
sub
das
out
bsr
push
mov
icebp
imul
in
push
cmp
mov
add
pop
in
push
dec
sbb
xchg
or
arpl
push
add
or
push
cld
mov
test
cltd
addr16
sbb
jmp
loope
cmp
popl
popf
or
mov
inc
xlat
imul
sub
pop
cmc
imul
push
ficomps
mov
js
nop
inc
or
std
jno
dec
mov
cwtl
lods
push
lea
fistps
nop
jp
push
dec
xchg
orl
lea
cmpb
outsl
cmp
aam
cli
or
in
pop
jne
lcall
sbb
aaa
pop
xlat
daa
addr16
mov
mov
xchg
pop
cmp
scas
loop
xor
cmpsl
cmp
jecxz
inc
inc
call
popl
adc
insl
and
scas
inc
fstl
pusha
adc
jnp
movl
lods
add
xor
lahf
cmpsb
or
lods
dec
add
lds
push
sub
cmpsb
inc
xor
push
jno
xor
mov
daa
and
addb
scas
in
xchg
sub
jge
movsb
xor
dec
mov
and
jae
les
jl
push
sub
fbld
pop
jnp
xor
fcoml
mov
pop
pop
movsl
jg
inc
add
or
test
in
push
push
mov
lods
sub
ss
and
fsubrs
xor
inc
push
add
lea
int3
jb
or
dec
in
adc
pop
jecxz
xor
outsl
jne
insl
inc
inc
stos
mov
or
lods
mov
test
push
arpl
jmp
push
cmp
push
insb
adc
arpl
in
xor
out
andl
sub
in
aaa
lcall
divl
cmpl
cmpsl
scas
cs
idivb
push
cltd
ficomps
xor
or
stos
and
xchg
das
xchg
jmp
dec
fldenv
sub
mov
stos
push
sbb
jle
sub
in
mov
cmp
push
aam
jg
xchg
aaa
mov
push
sbb
sarl
scas
cmpsb
sub
sahf
in
cmpsl
sub
ljmp
out
es
push
add
xor
insb
imul
mov
dec
xchg
inc
jg
ds
outsl
sahf
aas
jecxz
pusha
sub
fdivp
pop
xchg
sbb
das
mov
jb
add
popf
rcr
dec
insl
test
divl
cs
mov
arpl
jno
movsb
shll
mov
stos
pop
sti
roll
adc
outsl
push
lret
test
jne
fs
hlt
pop
aam
rorl
and
xchg
lock
les
ds
outsl
pop
data16
xchg
clc
test
mov
xor
dec
adc
add
dec
mov
stos
pop
add
inc
cmp
sub
dec
outsl
push
or
mov
das
cmp
lret
inc
addr16
cltd
dec
pop
xchg
fsubs
dec
jno
add
ljmp
mov
xchg
lea
jb
sub
push
adc
cmp
push
sbb
sub
rclb
loop
xor
es
pop
out
xchg
add
lds
jns
js
dec
out
ret
out
ljmp
mov
test
js
jae
cs
jge
out
sbb
mov
fs
or
add
mov
int
push
cmp
sti
cld
sbb
mov
jo
test
push
aas
daa
testb
lret
mov
xor
test
scas
test
push
ret
inc
cld
push
fdivrl
lods
mov
xor
cs
rep
mov
rcll
imul
push
shr
repnz
dec
sub
jmp
in
clc
cmp
jg
mov
fwait
aas
xchg
cld
popf
and
cwtl
notb
hlt
pop
outsl
jge
scas
or
jo
icebp
mov
fsubs
mov
cmpsl
or
push
ss
xchg
jb
sub
or
jmp
cwtl
movsl
fstl
dec
pop
out
faddl
ljmp
scas
jl
sub
fdivp
imul
es
pop
xchg
movb
sub
dec
js
pop
pop
and
adc
mov
xlat
inc
inc
push
das
dec
lock
jnp
cmp
clc
inc
mov
pusha
bound
icebp
outsb
mov
les
sbb
fs
or
divb
xchg
dec
xor
divb
jg
cmp
cwtl
and
subl
pop
lds
ret
and
int
push
xchg
aad
ss
movsb
lahf
mov
pop
push
stos
adc
int
inc
sbb
aas
cltd
inc
cmp
sbb
out
stos
out
incb
stos
movsl
sbb
and
das
jae
mov
push
cmp
push
pop
cli
sbb
mov
pop
cmp
sbb
pop
addl
inc
mov
cmp
jp
xor
pop
adc
sbb
pop
add
pop
xchg
and
gs
pushw
push
dec
pop
sub
cmp
ljmp
rol
sub
fs
fsubs
and
cwtl
mov
jo
repz
test
mov
in
cld
ljmp
mov
popaw
sbbb
add
cmp
es
sub
hlt
adc
adc
cmc
pop
arpl
pusha
mov
loop
lods
lret
cmp
mov
adc
pushf
xchg
movsl
shlb
out
mov
in
mov
or
push
jl
addr16
mov
sbb
loop
fstpt
dec
inc
sub
push
stos
jae
mov
fnsave
jne
in
xor
out
shrb
add
sbb
mov
dec
das
js
add
or
add
jbe
cwtl
mov
repnz
call
pop
test
movsl
sub
loopne,pn
xor
jo
inc
xor
jecxz
in
mov
mov
loop
loope
fcoms
pop
fs
cltd
sar
pop
add
cmp
mov
lcall
bound
pop
ljmp
lea
xor
or
mov
pop
test
jo
mov
push
ficoms
mov
sub
push
pop
popf
inc
mov
scas
cmp
push
sub
push
jae
adc
xchg
cld
repnz
push
and
lea
mov
out
frstor
xor
imul
sbbb
iret
bnd
pushf
cmpsb
xchg
mov
nop
fnstsw
mov
imul
mov
cmp
push
adc
divl
not
pop
xchg
mov
xlat
or
aaa
jmp
or
sub
stc
stc
fnsave
cmp
cmp
loop
ja
pop
jae
and
and
ffreep
xchg
test
imul
dec
data16
imulb
pop
loopne
mov
cmpb
lret
push
pop
cmpb
fldt
push
cs
out
fsub
imull
push
sahf
mov
fsubs
jns
ja
daa
sbb
push
in
cld
aad
push
xchg
dec
sub
mov
repz
je
jnp
xchg
insl
jo
pop
stos
out
sbb
xchg
shll
jmp
mov
lods
xchg
jne
stos
outsl
lret
cmp
dec
test
push
iret
and
xchg
mov
add
pop
repnz
sbb
es
ds
mov
lds
inc
push
cmp
mov
adc
shlb
push
enter
sub
pushf
out
lret
ror
comiss
es
push
jmp
sub
aaa
mov
sti
pop
or
fldcw
out
mov
add
fidivrs
jecxz
pop
mov
push
adc
xchg
pop
ds
out
jmp
lods
fimuls
sbb
popa
push
jle
mov
push
in
mov
je
jae
lahf
xor
xchg
rcrl
sti
pop
cld
adc
stos
cmc
clc
pop
lock
adcl
scas
pop
das
or
stos
or
push
out
xchg
push
ja
cltd
push
fs
jae
loop
sbb
xor
inc
andb
mov
pusha
test
or
inc
push
xchg
xchg
and
loopne
add
or
jnp
dec
or
cmpsl
pop
cmp
sbb
mov
mov
mov
addr16
ds
nop
jle
push
out
xchg
inc
sub
jno
mov
mov
out
mov
mov
cmp
out
sbb
js
outsb
inc
push
dec
mov
mov
dec
sbb
inc
popa
cmc
in
xchg
rol
mov
std
pop
inc
sahf
jmp
pop
cwtl
cmpsb
xchg
or
clc
ror
movsl
cwtl
lds
xchg
inc
add
mov
pop
dec
pop
repz
or
dec
getsec
push
lods
pushf
jmp
fs
test
sub
mov
mov
dec
xchg
test
repz
paddsb
mov
xor
mov
mov
mov
pop
pop
or
jle
aad
mov
sub
pop
cmp
mov
cmp
sub
xor
iret
fsubr
mov
pop
clc
xchg
cmp
xchg
cmpsl
stos
push
and
roll
cmc
push
ret
jbe
outsb
std
mov
mov
test
dec
dec
push
xor
push
mov
mov
out
cmpb
mov
sbbl
out
icebp
cmpsl
pusha
sub
adc
inc
mov
fstp
xor
aas
ljmp
and
add
cwtl
pop
and
pop
fisubrs
adc
inc
ljmp
aad
mov
cmp
enter
mov
stos
inc
jno
inc
stos
push
cmp
sbb
std
jle
in
data16
mov
imul
inc
int
mov
mov
pop
fists
les
xorl
sbb
mov
cs
xchg
pop
xchg
cmp
popa
fdivr
and
cmp
jns
push
xor
popf
call
les
fstps
shl
out
std
rcl
in
loope
push
or
push
sbb
jnp
fisubrl
xchg
mov
imul
add
or
cmp
sub
push
cmp
repz
cmp
add
xchg
lret
lcall
aad
iret
push
ret
cmp
movlps
sbb
popa
mov
mov
fwait
iret
in
testl
addb
cmp
sbb
js
and
cmc
notl
rcll
sbb
mov
mov
addb
push
gs
fildl
inc
idivl
xchg
jns
mov
jno
sub
jg
xor
testb
or
sub
jp
aam
inc
shrb
je
sar
sub
mov
into
into
xor
cmpsl
icebp
mov
sbbb
mov
je
pop
cld
push
sub
adc
cmp
cmpsl
popa
pop
ljmp
inc
add
mov
lds
aaa
mov
out
fstpl
jo
roll
scas
cld
jge
aas
inc
cltd
clc
popf
stc
cmp
decl
xchg
js
fstl
mov
mov
xor
cld
jo
pop
jp
rcrb
cltd
test
addr16
imul
mov
sub
jge
xchg
add
mov
pop
clc
adc
jno
call
gs
subl
mov
or
ja
add
aas
lock
stos
vpermt2pd
jns
push
jge
outsb
adc
scas
idiv
dec
int3
pop
mov
imul
cld
repz
scas
adcl
pop
jle
xchg
xchg
fldl
add
jae
dec
mov
or
pop
mov
popa
jb
repnz
iret
push
mov
push
outsl
fnstcw
pop
lret
nop
xor
cmpsb
mov
or
push
out
inc
lock
mov
inc
push
dec
insb
hlt
rorb
fmulp
mov
movsl
lahf
out
jg
mov
dec
xor
fistpll
jmp
in
mov
add
and
out
mov
mov
adc
jbe
pop
push
les
jb
cmc
aaa
loop
sar
cmc
out
inc
fst
jbe
inc
dec
scas
push
mov
sbb
leave
fucom
inc
dec
xchg
stos
pushf
ret
insl
lcall
iret
mov
push
pop
adc
mov
je
test
movsb
pusha
pop
xor
mov
add
and
pop
mov
fidivs
pusha
push
lcall
push
gs
out
sbb
iret
sbb
lods
cwtl
or
outsl
out
inc
rorb
pop
inc
xor
jmp
mov
mov
cwtl
leave
shlb
into
jbe
jo
aas
fs
repz
add
or
dec
cmp
adc
mov
popf
enter
dec
adc
lcall
cmpl
pop
cmp
mov
js
in
sbb
push
imul
mov
fsubrl
adc
jecxz
call
jp
mov
jno
in
stos
push
lods
dec
push
mov
fiadds
popf
shlb
mov
push
inc
push
ds
jno
in
icebp
or
lahf
into
loop
in
sahf
mov
sub
je
test
imul
sub
fwait
or
inc
test
imul
popa
adc
stos
and
pop
in
into
cmpsb
sbb
jns
je
inc
out
aas
dec
push
and
xchg
mov
mov
push
ret
sahf
pop
repz
mov
vmread
hlt
cmpb
sti
aas
sub
xchg
pop
dec
adc
push
mov
dec
dec
je
out
sbb
aam
rcl
inc
shll
fwait
mov
xchg
add
xor
call
adc
out
mov
or
sbb
add
sub
xor
das
mov
adc
gs
xlat
call
adc
outsl
mov
inc
sub
adc
jge
gs
xor
jo
xchg
bound
jbe
test
movsb
add
pop
jno
ds
sahf
jnp
sbb
push
add
cmp
iret
add
lock
mov
in
mov
and
and
icebp
int3
scas
dec
push
pushf
sti
mov
outsl
lcall
mov
out
xor
mov
aad
cmc
imul
arpl
push
outsl
outsl
das
push
sarl
add
in
mov
add
ret
mov
aas
stos
movsb
movsb
inc
xor
inc
cltd
adc
cmp
mov
out
aad
mov
in
test
mov
mov
inc
fdivrl
push
or
push
into
adc
push
cs
rclb
mov
push
outsl
inc
testl
or
xor
jl
xor
add
jecxz
push
add
add
cmc
int
jle
push
mov
or
fldenv
movsl
adc
push
jne
iret
fcomp
sbbb
pop
add
or
arpl
adc
js
pop
pusha
pop
mov
pushl
pop
xchg
pop
fldt
and
ror
or
stos
mov
jl
mov
pop
movsb
jle
shr
lods
xchg
aaa
shrl
frstor
lcall
cmpb
lcall
jae
mov
idivb
inc
ffreep
pop
xor
inc
repz
lods
push
jle
push
subl
loop
xchg
and
rclb
pop
inc
sbb
sbb
sub
enter
ret
vpminub
mov
rolb
ret
xchg
inc
sub
lods
xchg
dec
test
push
les
jp
fcmovne
lea
and
inc
in
test
xchg
inc
pop
adc
add
out
popf
scas
add
sbb
rcrb
mov
pop
addb
jmp
ficoms
xchg
das
or
or
outsb
stc
and
daa
popf
bound
mov
push
pop
inc
leave
int
popa
in
mov
jne,pn
test
fwait
mov
and
adc
rcr
fildl
cmp
or
adc
add
xchg
mov
add
ret
cmp
scas
test
jle
int3
jno
lock
add
cltd
into
and
data16
pop
mov
int
push
pop
mov
inc
popf
out
adc
shrb
pop
inc
leave
xchg
das
inc
into
mov
pop
push
arpl
lods
mov
inc
sub
mov
mov
jne
pusha
insl
or
adc
in
jb
lcall
insb
sbb
call
jbe
clc
ljmp
mov
mov
add
aam
cmp
es
jge
scas
mov
mov
adc
jae
or
lock
enter
jecxz
mov
inc
aaa
sbb
adc
sbb
dec
jle
sub
inc
mov
xchg
ja
test
cmp
cltd
movsb
pop
jecxz
rcrb
lea
scas
mov
jnp
sub
cmp
movsl
mov
test
mov
mov
negl
mov
xchg
xchg
xchg
push
es
je
dec
push
insb
js
and
xor
cmp
xor
pop
jo
rcrl
loop
sbb
je
cwtl
ja
fiaddl
dec
xor
inc
jge
inc
pop
fnstenv
mov
mov
daa
div
pop
or
fimull
add
push
lock
dec
push
das
outsl
fsubs
mov
xor
addr16
pop
cmp
and
cmp
sub
out
test
stos
sti
xchg
rcrb
in
xchg
pop
insb
adc
mov
and
pop
jnp
jb
out
and
popl
stos
adc
cmp
jne,pn
sti
jecxz
sbb
inc
xorb
pop
pop
fldenv
loope
and
sbb
out
inc
sbb
std
rorl
inc
pop
mov
pop
inc
pusha
popf
clc
dec
stos
ret
push
gs
inc
mov
sub
clc
pop
ret
out
xchg
ljmp
xor
loope
jge
and
push
push
ret
adc
adc
dec
or
mov
mov
fmul
sub
test
push
shrl
bnd
fxch
adc
lock
ds
mov
clc
xor
dec
shlb
mov
xchg
testl
addb
mov
mov
imul
pop
arpl
jecxz
dec
test
repnz
pop
add
jns
push
lods
dec
lds
popf
adc
mov
or
or
adc
pop
pushf
add
xchg
inc
bswap
lahf
scas
jne
add
dec
adc
push
mov
xor
mov
xor
movsb
sbb
add
or
int3
les
stc
mov
or
lahf
ss
popf
xor
cld
stos
outsl
xchg
aaa
das
je
inc
pop
mov
fisttps
cmp
or
stc
loope
sbb
mov
lods
cmp
push
scas
add
shll
or
sbb
sti
test
cli
jne
es
test
jns
outsl
inc
add
leave
mov
adcb
pop
je
fidivs
mov
cmc
cmp
xor
aas
sbb
fstl
xchg
fnsave
or
xor
pop
inc
pop
out
outsl
scas
shl
icebp
rcl
cmp
scas
into
inc
mov
mov
sub
lea
and
std
lahf
xchg
adc
cmpsb
mov
aas
idivb
adc
cmpsl
bound
push
push
mov
pop
pop
out
mov
and
repz
fistpl
push
out
inc
xor
or
dec
xchg
out
filds
push
daa
jmp
sub
adc
das
mov
out
or
daa
jge
test
rolb
push
aad
stos
push
mov
push
addr16
mov
sbb
das
jae
fucomp
das
outsb
stc
mov
sbb
leave
jle
and
rolb
or
out
jl
xor
dec
mov
mov
jl
cmp
aad
mov
add
mov
test
sub
cs
xor
cld
pop
icebp
sti
je
inc
addr16
jo
add
cwtl
rcll
rol
adc
jmp
push
pop
fmuls
cltd
push
sbb
xor
push
mov
dec
insl
xchg
aaa
mov
dec
cmp
jmp
js
xchg
pop
fdivl
xor
jg
push
or
jecxz
jno
xor
je
stos
imulb
std
dec
xor
aas
dec
cmp
gs
push
mov
iret
repnz
and
sub
sub
jo
pop
movsb
or
ss
jecxz
ss
outsl
nop
inc
out
sub
inc
lcall
bound
add
fcoms
adc
inc
into
mov
cmc
and
jp
sub
addr16
je
push
mov
inc
inc
fisubl
or
mov
or
pusha
mov
sub
jns
cmpsb
lcall
mov
push
aas
pop
xchg
xorb
dec
push
jge
lret
orl
sub
pushf
mull
sub
addr16
cmp
test
das
mov
inc
imull
fistl
movsb
lods
add
jmp
mov
scas
and
mov
es
cmp
jmp
adc
adc
cmc
and
popa
out
sbb
call
lahf
aaa
jl
and
mov
cmc
xlat
mov
shlb
mov
add
int3
and
and
xor
mov
out
out
xchg
adc
lods
lds
xchg
inc
and
pop
mov
adc
xchg
add
lock
cltd
or
addl
sub
out
loopne
inc
and
sub
push
jb
xchg
xchg
repz
push
outsb
std
leave
mov
mov
orb
aam
inc
jae
push
push
sub
xchg
cmpsb
das
dec
not
xchg
and
ja
out
pop
jbe
dec
lods
bound
jo
or
fs
fisubs
jmp
out
scas
and
lods
pushf
iret
xchg
ds
mov
ret
jb,pn
cmc
negb
and
xor
jno
minps
jg
lahf
out
data16
imulb
inc
loope
in
scas
jl
pop
frstor
dec
pusha
jmp
fdivp
cltd
xchg
or
jl
scas
nop
cs
and
cmp
sub
hlt
sbb
cwtl
cwtl
ss
std
push
addr16
lods
out
mov
or
sbb
loopne
xchg
xchg
mov
mov
cmp
iret
stos
clc
icebp
inc
aam
push
and
shlb
sbb
scas
xchg
lods
and
fsubs
aas
jno
out
adc
mov
inc
cld
movsb
jbe
sub
out
hlt
lods
mov
out
or
in
dec
int3
mov
jl
push
inc
sbb
dec
andb
cli
mov
imul
popf
push
jnp
add
mov
inc
cs
xchg
dec
push
jno
jge
mov
loopne
cmp
mov
mov
cmp
movsb
cmpl
outsb
xlat
jo
sub
pop
das
sub
ret
xchg
jbe
aas
sub
xchg
push
enter
mov
movsl
cmp
cmp
test
out
cmp
incb
ffree
pushf
xor
out
cmpl
test
pop
imul
push
xor
jmp
lods
test
lret
call
dec
fcmovnbe
pushf
xchg
loope
sub
jne
scas
scas
aam
pop
sub
movsl
iret
stc
rcr
mov
adc
mov
pop
test
mov
sbb
stos
shrl
jnp
cmpsb
push
pushf
data16
mov
in
cwtl
push
xchg
imul
outsb
push
adc
stos
jbe
loopne
jecxz
mov
test
lods
jo
add
mov
and
inc
push
xlat
inc
mov
aam
xchg
mov
mov
lds
lods
add
sub
mul
mov
jle
sbb
mov
inc
pop
iret
push
xor
mov
mov
xor
in
dec
push
pusha
and
or
sbb
cmp
loopne
jns
outsl
lcall
jle
imul
or
mov
scas
xchg
pop
adc
hlt
jns
neg
and
add
inc
popa
ss
mov
insl
out
test
jge
adc
shl
mov
cld
mov
outsb
sub
and
lea
in
fbstp
xchg
mov
test
aad
push
xchg
scas
sbb
push
std
pusha
sub
test
leave
sahf
and
mov
addl
dec
aaa
loope
pop
imul
sub
std
sub
and
les
pusha
cmpsb
mov
jns
push
push
aam
scas
pop
int3
xor
aad
setbe
inc
fnstcw
cmp
push
gs
push
adc
mov
shll
ret
sbb
popa
clc
pop
sbb
xchg
int3
stos
shlb
jge
sbb
das
push
add
mov
jns
sub
mov
adc
je
test
int3
mov
cmp
out
and
movsl
sub
ds
push
arpl
out
pop
jmp
cld
xor
int3
cmp
test
popa
test
jge
xor
aas
das
and
test
aaa
test
fldcw
int3
sti
lret
inc
cwtl
aam
add
xor
jae
lcall
in
or
adc
sub
out
enter
jns
cld
sbb
jle
int
sub
orl
sub
test
clc
movsb
stos
ret
in
dec
jns
push
adc
jmp
sbb
fcoms
aad
sub
xlat
pop
add
pop
je
sbb
lahf
ljmp
inc
push
cli
sbb
es
sbb
dec
or
adc
rcrb
and
and
outsb
loope
sahf
cli
jge
cmp
xchg
mov
mov
inc
insb
rolb
inc
mov
add
adc
stos
sub
or
mov
dec
jb
push
dec
jb
arpl
orl
dec
and
cwtl
mov
pop
sbb
push
stos
xchg
dec
inc
cmc
mov
ss
les
cltd
xor
test
inc
cmc
mov
or
cmp
mov
out
push
cs
in
xor
out
ja
and
mov
ds
jg
push
outsl
lods
jnp
sti
or
sbb
dec
lcall
mov
sbb
cmpsb
shlb
fldl
adc
lds
sub
and
or
js
fisubl
adc
fdivrs
pushf
adc
adc
dec
or
adc
cld
push
inc
mov
mov
xor
aad
xchg
pop
dec
test
sbb
lds
fadds
adc
inc
jp
je
fstl
lea
dec
aad
negl
lahf
dec
lock
iret
push
pop
inc
jmp
addr16
jnp
jns
adc
daa
repnz
pop
sbb
dec
mov
mov
lock
push
cmp
mov
shrb
mov
push
push
jno
icebp
xchg
sti
xor
popa
flds
shlb
or
adc
xchg
cli
inc
dec
adc
in
imull
int
scas
in
xchg
dec
mov
sbb
dec
cmp
hlt
lret
pop
sti
fs
inc
sub
roll
aam
popa
xor
scas
outsl
cmpsb
out
outsb
dec
data16
cmpsb
xchg
call
xor
fs
mov
pop
xchg
arpl
add
push
nop
inc
enter
sahf
stc
shlb
cld
cmpsb
sahf
inc
bound
out
and
rclb
cmc
imul
mov
xor
mov
inc
cmpsb
fwait
inc
xor
jge
insl
or
mov
xor
js
jne
ja
cmp
in
mov
je
scas
jecxz
fnstenv
mov
mov
mov
fistpll
mov
inc
jg
fucomp
fcmovu
dec
xlat
inc
dec
pop
stos
lea
push
rcrb
xor
dec
leave
mov
xor
sub
mov
test
xor
rcll
jno
push
sbb
adc
sub
mov
fiaddl
mov
movsb
fstl
xchg
das
xchg
and
push
out
incl
imul
xchg
xor
or
pop
pusha
fisttpll
jnp
mov
sbb
fimull
xchg
sbb
push
call
cli
fiaddl
sar
hlt
es
imul
movsl
inc
arpl
andl
fwait
dec
push
push
jne
loope
int
mov
cmc
loop
sub
imul
popa
repnz
xchg
icebp
or
cwtl
dec
lret
arpl
imul
adc
scas
xor
inc
loopne
adc
clc
push
mov
and
rcrb
aam
inc
int
adcb
jmp
push
cmp
pop
sub
pop
out
mov
enter
popa
jno
scas
addb
out
and
cmpsl
fcoml
outsl
mov
adc
lcall
add
mov
cmp
add
ret
sbb
aam
pop
mov
mov
out
mov
xlat
shr
sbb
pop
jmp
neg
jp
jmp
adc
add
jb
daa
ljmp
add
stc
sahf
add
roll
sub
mov
push
jmp
jo
int
pop
inc
cltd
dec
or
xlat
lods
sbb
sbb
dec
inc
jo
mov
xchg
jo
rcll
dec
mov
adcl
mov
scas
repz
inc
cmp
in
sub
sub
pushf
push
mov
sbb
insl
jg
lcall
adc
sbb
inc
push
pop
dec
jne
sub
sbb
xor
xor
dec
add
push
push
enter
push
mov
sbb
sbbl
xchg
and
xor
cmp
pusha
adc
test
test
out
push
aad
fxch
jo
add
push
and
jmp
test
lock
cmp
push
js
fnsave
mov
dec
sahf
lahf
xlat
repnz
dec
cld
mov
dec
sub
test
imul
pop
sub
jmp
daa
aas
jae
or
sbb
and
aam
pop
lea
mov
rcll
arpl
cmp
mov
sub
dec
rclb
repnz
mov
mov
adc
jne
mov
in
fldl
out
and
inc
mov
les
in
roll
sub
aas
sbb
outsb
fcomip
sbb
xchg
repz
mov
push
adc
loope
push
add
adc
and
jbe
ret
ljmp
inc
pop
out
mov
lods
mov
xchg
out
pop
imul
in
scas
icebp
cmpsl
pushf
out
pop
cmc
mov
mov
gs
mov
push
add
stc
nop
ret
jecxz
xchg
stos
and
xor
or
daa
jno
mov
mov
jmp
pop
push
cmpsl
add
lods
das
mov
xor
pushf
dec
mov
jbe
xor
inc
xchg
ret
adc
std
dec
add
xor
jge
mov
jo
mov
icebp
cmp
daa
dec
xchg
mov
xchg
es
xor
in
cwtl
imul
pop
pop
dec
fs
stos
aaa
dec
lret
cmpsl
shrl
inc
mov
shl
aaa
pop
cld
fnstenv
inc
mull
ror
push
mov
aas
sbb
lock
and
sub
mov
test
out
arpl
ds
ds
jecxz
sub
adc
or
dec
lcall
adc
pop
pop
push
outsl
pop
je
jnp
xchg
bnd
cmp
daa
popa
xlat
sarb
imul
out
fs
icebp
jle
push
outsb
mov
lcall
xor
push
repz
dec
out
sbb
xor
xchg
bound
jl
imul
insl
dec
insb
aas
mov
fwait
rclb
pop
rcrb
mov
cmp
add
iret
aam
pop
cmp
or
push
cmp
int3
sbb
outsl
pop
ficoms
mov
cli
outsl
xchg
cmp
stos
mov
mov
push
cmp
stos
and
ss
sahf
push
insb
jp
cmp
push
jecxz
adc
sub
idiv
add
inc
cltd
imul
add
mov
jns
in
fcoms
mov
outsl
pop
aam
std
xchg
jb
push
sub
cmp
mov
test
push
divl
inc
imul
jnp
push
in
push
test
iret
mov
sbb
in
mov
popf
lret
insl
adc
call
adc
sub
pop
add
dec
cmp
push
nop
pop
decb
inc
outsl
mov
mov
iret
inc
sbb
xor
xchg
xchg
inc
jp
imul
fcomp
mov
push
jle
clc
or
adc
mov
cmpsb
sub
lods
inc
sub
xlat
dec
aaa
jp
ret
xchg
mov
add
int
push
push
xchg
push
sbb
add
pusha
dec
mov
mov
fsubrs
push
push
xor
lahf
mov
mov
imul
jb
lahf
loop
jecxz
cmp
test
pushf
into
insb
xchg
pushf
mov
pop
int
pop
cld
rcr
mov
jbe
push
mov
dec
jge
jnp
push
dec
out
test
movsl
aam
adc
xor
sub
lock
hlt
das
pop
inc
test
add
lahf
movl
inc
mov
jl
ja
pop
pop
js
out
or
dec
or
adc
adc
repz
mov
sub
dec
mov
test
jle
or
pop
mov
pop
into
aas
cmpsl
xor
imulb
fwait
cld
leave
cmc
mov
pop
lods
adc
outsl
fadds
inc
push
flds
outsb
aas
cs
or
xlat
xchg
rcrb
scas
mov
or
push
movsb
clc
pop
jnp
pop
jns
jnp
in
jg
xor
out
dec
scas
es
or
push
popf
adc
mov
mov
push
mov
call
int3
movsb
jle
xchg
pop
mov
in
in
jge
adc
imul
jecxz
mov
pop
in
lods
stos
int3
mov
jp
or
pushf
lret
cmp
push
test
cmpsl
out
mov
sub
ss
push
xchg
cmpsl
mov
or
popa
pop
mov
fdivrs
adc
rcll
mov
sbb
lds
outsl
ljmp
popf
lods
add
mov
mov
jnp
fnstenv
sbb
cmpsl
xchg
xor
ret
pop
dec
sbb
insb
cltd
mov
int
cmp
cld
jne
sahf
jno
adc
imul
pop
cmc
lcall
push
outsb
repz
jbe
inc
pop
xchg
push
dec
out
mov
mov
jo
or
xchg
iret
orl
arpl
xchg
lock
idivl
pop
push
mov
call
push
mov
mov
push
mov
or
cmp
in
xchg
lods
mov
pop
lret
mov
leave
out
jne
clc
scas
push
pop
imull
icebp
ficoms
shrl
mov
rclb
jne
mov
jg
inc
orb
and
dec
std
fdivrs
rcrb
nop
ficoms
mov
fs
xchg
gs
and
or
iret
sbb
sbb
int3
jns
mov
mov
loopne
sub
cmp
pop
inc
popf
or
fadds
push
rcl
add
pop
std
rorl
aam
or
scas
fidivs
jbe
cld
xchg
fucomi
jo
cmpsl
push
and
mov
dec
mov
inc
xchg
ss
add
xor
test
adc
imul
xor
fisubs
stos
das
lds
xor
stos
hlt
adc
in
sub
and
bound
jmp
dec
daa
rep
int3
push
xchg
xor
dec
or
xchg
out
push
fidivrl
mov
pusha
lahf
pop
cli
shll
pusha
fwait
mov
les
test
shr
ss
ret
ja
out
aaa
scas
aad
mov
push
jmp
stos
sub
pop
adc
test
dec
pop
sbb
jle
je
shll
dec
int3
sub
pop
fcoml
pop
push
sbb
outsb
mov
dec
sub
jl
sub
setp
mov
xor
mov
aas
lcall
lods
lock
fisubl
aas
pop
xor
dec
leave
pop
adc
cmpsl
lahf
mov
je
xor
bound
pop
test
pushf
aam
mov
xchg
dec
mov
inc
mov
loope
aas
mov
loop
ds
mov
and
mov
jno
xchg
cmc
mov
shll
xor
fsubrl
mov
dec
cwtl
and
or
mov
mov
xorl
pop
rorb
in
orb
outsl
movsb
clc
cmp
out
popa
lods
inc
jl
adc
das
adc
mov
mov
xlat
lret
cmp
jb
ret
repnz
push
mov
mov
xor
add
pop
dec
push
sbb
push
add
bound
mov
testb
mov
add
jp
outsl
cmp
test
xor
rol
repz
cld
daa
ds
lret
mov
mov
jl
xor
cmp
sarb
jecxz
add
jmp
mov
movsl
cmp
jp
not
push
rclb
dec
or
lea
pusha
push
push
pop
adc
div
mov
mov
int3
out
test
add
rcll
aam
sti
fsubrs
ja
lods
popa
pushf
mov
out
xchg
fimull
insb
pop
push
shr
repz
dec
adc
cmp
xchg
js
mov
mov
add
call
mov
icebp
cmc
dec
rcr
jge
outsb
sub
jns
les
and
jb
adc
adcl
insb
orb
mov
mov
pusha
imul
decb
push
fstl
out
jno
sarl
lods
pop
ja
mov
dec
and
fsubp
dec
jmp
adc
lcall
cmp
or
xorl
aaa
int
xor
pop
sub
mov
sub
or
mov
testb
add
popf
jb
xchg
adc
jmp
das
pop
xor
mov
or
push
cltd
jp
mov
sub
and
inc
pop
mov
and
pop
movsb
add
into
mov
pop
or
sub
dec
icebp
andb
call
mov
and
push
xor
loopne
movsl
pop
pop
push
pop
in
sbb
push
lret
mov
cmp
imul
and
pushf
push
jp
rcl
cmp
or
jnp
aas
pop
enter
and
sbb
arpl
sub
movsl
inc
xchg
into
cltd
adc
add
shlb
jb
jne
mov
mov
adc
mov
out
push
out
enter
xor
dec
adc
addl
into
ds
mov
pop
pop
mov
dec
jb
loop,pn
shll
stos
ficompl
mov
pushf
xorl
test
nop
pop
scas
addr16
out
xor
pop
xor
sbb
mov
mov
cmp
xlat
inc
or
rcrb
pop
mov
or
pushf
lods
das
pop
cmp
ja
sti
xor
scas
jae
sub
mov
mov
inc
pop
ret
cmp
aad
xchg
mov
pop
popf
add
inc
push
xor
jnp
inc
mov
xchg
and
adc
sbbb
lds
sbb
hlt
std
mov
inc
inc
mov
jo
or
popa
shlb
scas
test
xchg
int
mov
lret
orl
or
and
xchg
mov
cmp
repnz
mov
mov
cmp
ret
outsl
mov
imul
mov
ljmp
iret
xchg
dec
push
frstpm(287
xor
jp
jne
mov
jl
aam
sub
jl
and
fs
mov
loopne
int
movsl
inc
add
das
jne
dec
subb
add
pop
push
test
jg
movsbl
dec
jecxz
ds
push
mov
adc
je
lret
mov
scas
sahf
test
dec
ljmp
mov
jmp
mov
sti
aaa
adc
idiv
mov
out
lock
adc
aas
mov
nop
test
test
in
pop
insl
xor
xchg
fdivrs
lahf
shl
out
aaa
adc
jne
mov
es
cmp
inc
sbb
xor
subb
sub
popa
dec
andb
or
jg
in
cmp
cmpb
inc
into
push
sbb
xchg
push
dec
lret
dec
pop
cli
fildl
add
hlt
dec
loope
pop
aam
fimuls
push
daa
ds
cli
jl
lods
enter
jl
sbb
or
aad
das
mov
jge
lock
lods
xor
add
dec
in
inc
stos
loop
mov
mov
mov
push
insl
fsin
mov
out
sbb
xchg
cli
fiaddl
dec
mov
or
outsb
ljmp
enter
sahf
arpl
sub
fists
sti
daa
cld
add
fadd
mov
fwait
movsl
or
lret
lahf
cltd
in
pop
in
jg
pop
cmp
dec
popa
cld
inc
les
fbstp
lcall
push
insl
mov
xchg
sbb
popf
or
sbb
sub
shrl
lods
jb
scas
sub
rcrb
mov
pop
gs
decb
xchg
fxch
add
test
cmc
les
aad
sti
out
hlt
stos
mov
inc
hlt
dec
or
pusha
inc
clc
lods
jne
test
xchg
insb
movsl
sbb
cmp
and
lods
lea
jnp
out
pusha
cmp
and
push
push
scas
roll
adc
cmp
adcb
xor
inc
mov
aad
mov
movaps
dec
xchg
push
test
mov
mov
gs
mov
inc
fidivs
jo
push
push
jle
and
int
add
mov
push
adc
adc
scas
lret
jmp
adcl
cmp
pop
mov
lods
sbb
loopne
jae
test
test
fildl
xor
fldl
jl
push
fstpt
scas
lret
lds
ljmp
je
cltd
or
jg
or
push
aaa
stc
in
imul
pop
mov
movsb
push
lret
xor
mov
lods
xchg
movsb
mov
cmp
cmp
es
mov
enter
adc
jmp
cwtl
cmp
and
inc
inc
ror
sub
sub
pop
sbb
lock
cmp
lahf
inc
pushf
addr16
push
pop
pop
cmp
cmp
lods
and
xor
sahf
mov
scas
xchg
je
pop
mov
arpl
and
xlat
add
fmul
sti
shrl
dec
jle
push
push
pop
test
pusha
ljmp
cmpsl
fisubrl
mov
inc
inc
dec
mov
mov
add
out
cltd
pop
mov
dec
and
cmpb
add
mov
sub
out
insl
push
and
stos
popf
pop
jbe
fsubr
out
imull
xchg
mov
mov
mov
jg
iret
insl
dec
cmp
add
mov
iret
add
mov
sahf
insl
mov
inc
out
in
adc
outsb
lock
dec
and
aad
and
mov
dec
and
arpl
in
mov
pop
mov
pop
cmpsl
inc
popa
mov
dec
arpl
arpl
cltd
adc
xchg
enter
clc
mov
lret
ja
or
mov
mov
out
inc
popf
push
adc
std
add
xchg
push
xchg
mov
add
mov
test
sub
aas
pop
rcll
aam
popa
outsl
jmp
sbb
popf
popf
jno
fcoms
lods
sub
insb
repnz
xchg
loop
push
enter
jbe
daa
or
xchg
ret
gs
jecxz
and
int3
ja
xchg
add
es
sahf
bound
fwait
pusha
sysenter
lock
test
xor
or
xor
mov
xchg
adc
enter
push
and
jge
subl
jl
and
lcall
inc
in
int
mov
mov
aaa
push
cmp
sbb
mov
jge
mov
jge
adc
pop
cld
push
aas
mov
jnp
xlat
insl
enter
mov
arpl
mov
sub
aad
jle
scas
jge
loopne
xor
push
jae
push
loop
lock
or
push
cmp
cmp
pushf
adc
les
cwtl
aad
call
or
jge
mov
test
mov
ds
inc
fxch
dec
and
and
loopne
in
mov
jecxz
sub
push
xchg
mov
cs
add
scas
push
mov
aas
pop
jnp
pop
xchg
bound
sub
adc
imul
out
nop
adc
fcomip
nop
mov
adc
cmpsb
leave
and
xor
sub
push
ljmp
pushf
ds
inc
jb
movb
loopne
je
and
out
movsb
sub
sbb
fcoml
push
sbb
mov
pop
movsb
push
sub
in
xchg
ficoml
mov
mov
pop
shlb
xor
push
mov
sbb
and
int
inc
daa
xchg
push
pop
test
sub
add
xchg
dec
andb
adc
pop
jmp
jp
cmp
call
out
mov
sbb
push
mov
pop
adc
rcl
and
fstl
mov
xor
cmp
test
and
bound
jae
stos
repz
notb
pop
lret
push
pop
mov
sub
hlt
sbb
test
in
jnp
dec
sbb
fsts
pop
jmp
mov
inc
add
sub
lods
iret
les
lahf
inc
and
xchg
cld
cmpl
bound
push
fidivrs
xchg
xchg
sti
scas
in
push
jo
mov
xor
sub
sbb
push
inc
loopne
xchg
sub
add
repnz
add
negb
imul
fs
bound
push
adc
xchg
repz
sbb
hlt
jae
rorb
test
imul
fisubs
popf
mov
outsl
xor
inc
xor
pop
mov
jmp
xchg
cmp
pop
cwtl
adc
cmp
jecxz
add
jne
or
aas
jge
push
aas
stos
psubb
out
sub
or
jno
sahf
pop
xchg
inc
dec
sbb
mov
cmp
mov
insb
add
cld
mov
idivb
or
jae
push
int
imull
or
jae
jg
sbb
jbe
and
jg
loope
mov
xchg
stos
sub
xor
cmc
xlat
cs
ljmp
shll
fs
or
jge
cli
xchg
xchg
outsb
fsubl
pop
adc
ds
insb
jne
daa
lods
mov
nop
lea
cmp
add
pusha
and
inc
push
les
adc
leave
mov
mov
cmp
jbe
outsl
mov
and
add
pusha
and
aaa
call
orb
rorl
repz
adc
movsl
mov
pop
les
lret
and
sub
adc
stos
jb
jbe
scas
rcrb
stos
test
jp
aaa
es
mov
hlt
addr16
lock
mov
push
mov
adc
faddp
movsl
inc
xlat
or
xor
divb
bound
inc
or
sahf
shlb
jae
je
test
xchg
fisubs
rorl
pop
jmp
jecxz
test
push
or
clc
lcall
cmp
push
jo
das
jl
inc
ret
sub
push
outsb
filds
adcb
pop
enter
or
bound
inc
cmp
xchg
push
loopne
cmp
fists
cli
xchg
pop
rorl
sub
shll
fcoms
scas
loopne
stos
jns
fsubrp
adc
stc
dec
xor
sub
out
clc
sub
es
pop
jbe
repnz
into
lea
shlb
add
pop
dec
jne
jle
shrw
loope
movb
movsb
sub
sbb
movsl
xchg
loopne
daa
cmpsb
cmpsl
mov
popf
iret
and
test
mov
mov
xor
ja
jge
mov
loopne
lahf
cli
mov
test
lods
pop
and
pop
mov
scas
inc
mov
mov
mov
gs
jns
test
jo
call
stos
in
mov
jnp
and
mov
lea
fmulp
sbb
pusha
ljmp
dec
hlt
lret
jnp
repz
fdivrl
inc
cld
jmp
in
incb
mov
mov
bound
cmp
int3
or
test
pop
or
icebp
mov
stos
lret
data16
mov
add
dec
repz
test
mov
aas
push
fdivrl
movsb
xor
ljmp
inc
fmuls
hlt
lods
jmp
mov
inc
or
xchg
jo
cmp
pusha
adc
cltd
stos
loop
pop
lcall
test
inc
mov
lcall
mov
mov
aaa
rcr
xchg
mov
shll
fdivrl
aam
int
movsl
jmp
loopne
push
movsl
jmp
scas
es
push
push
fst
sahf
cli
push
repz
loop
xchg
clc
test
out
push
roll
in
fimull
or
pushf
ss
push
stos
adc
mov
sbb
daa
and
mov
pusha
xor
fisttpll
dec
jae
xor
cwtl
mov
sub
inc
push
loope
sahf
cli
mov
les
cmp
sahf
jo
leave
in
loop
lahf
fwait
mov
mov
sub
jo
cwtl
add
xor
xchg
push
xchg
fs
add
mov
mov
pop
orl
cld
jbe
lret
push
xchg
test
sbb
rclb
cwtl
aam
ret
push
cltd
pop
insb
add
inc
out
cmpsl
xorl
pushf
adc
lods
sub
cmp
or
or
push
add
enter
mov
pushf
mov
pcmpeqb
es
xor
lahf
loop
cmp
scas
movsl
cltd
mov
cmp
repz
cmp
dec
sahf
cmc
icebp
adc
and
inc
mov
dec
push
dec
push
scas
out
ljmp
mov
push
jb
mov
lds
out
xchg
dec
pop
cmp
lea
dec
dec
adc
movq
rcrl
push
imul
cmp
xor
cmpsb
test
mov
fbld
pop
test
pushf
push
mov
xor
add
loopne
cmp
scas
loopne
cmpsl
jae
shll
das
std
pop
xchg
outsb
call
adc
or
pop
push
out
imul
pop
mov
nop
in
in
sbb
push
movsl
mov
ret
push
and
mov
push
cmc
mov
scas
orl
inc
cmp
xchg
inc
mov
movsl
xor
scas
mov
add
shlb
dec
xchg
jge
mov
and
int3
and
jg
outsb
call
pop
fldt
negl
mov
in
mov
cld
mov
pop
pop
ds
setno
stc
pop
call
jmp
add
dec
mov
xor
lret
push
mov
push
adc
in
sub
mov
test
movsl
add
jl
inc
pop
sbb
adc
pusha
sbb
and
das
cmc
scas
rolb
and
mov
sub
fldcw
int
mov
std
enter
jb
adc
pushl
xor
sbb
lods
test
mov
xchg
or
mov
inc
test
mov
push
adc
decb
cmp
mov
mov
and
xor
and
jle
inc
es
scas
mov
iret
fsubrs
dec
or
and
adc
pop
mov
fildll
in
scas
mov
push
fucomi
mov
pop
loopne
jecxz
and
xor
jne
mov
int
lea
inc
mov
or
push
imul
loope
push
xchg
pop
sub
adc
adc
mov
dec
mov
scas
cmc
adc
adc
enter
mov
xor
je
mov
xchg
je
dec
clc
mov
es
hlt
mov
inc
or
ds
data16
stos
xchg
jmp
pop
cmp
sub
outsl
lds
pop
fs
sub
out
cld
push
and
ret
mov
outsl
xchg
push
pusha
push
xor
sbb
std
mov
stos
xlat
push
pop
scas
push
bound
int
adc
inc
mov
imul
leave
ljmp
dec
add
adcl
jle
nop
sarl
aaa
xor
xor
push
ficomps
lock
pop
cmp
mov
xchg
mov
out
cmp
ds
xchg
sub
mov
sbb
push
mov
jno
sub
es
in
fs
mov
movsl
vpaddsw
es
xchg
cmp
es
ror
push
dec
fldenv
push
jle
push
fmull
mov
xchg
inc
ffreep
insb
insl
sub
mov
in
pop
into
cld
mov
sub
sarb
mov
std
fistps
dec
and
jno
mov
sti
push
mov
test
outsl
cs
jae
push
lret
mov
aas
repnz
xorb
push
sub
jge
js
insl
mov
push
ret
ffree
push
jbe
sbb
cmp
cltd
in
jnp
mov
pop
adc
sub
loope
and
push
push
pop
enter
inc
aaa
sub
cmp
leave
dec
push
fidivs
adc
sub
loop
shrl
cmp
dec
mov
lret
lea
cmc
and
cmp
adc
adc
out
xchg
clc
or
jo
in
cmp
sti
cmc
adc
xchg
sbb
xchg
add
dec
movsl
movsb
xchg
and
repz
inc
and
mov
fidivs
dec
aaa
or
or
sub
xor
sahf
jae
gs
xchg
scas
inc
push
cmp
jbe
nop
bound
stos
fcomip
ret
inc
fadds
mov
inc
int3
mov
and
sub
fisttpll
cmp
mov
and
push
xlat
jno
mov
jg
shll
xor
cmp
out
lea
jmp
mov
xor
jp
les
pushf
cmp
jmp
testl
icebp
jmp
push
in
mov
repnz
test
mov
sub
std
mov
movsl
subb
jne
mov
clc
add
jo
lods
and
arpl
sbb
rcll
inc
insl
test
dec
dec
loope
pop
or
xlat
repnz
mov
pop
and
lds
jae
lods
cs
pusha
insl
and
jb
in
inc
and
mov
std
fwait
xorl
inc
popf
and
push
xchg
cmpsl
ljmp
dec
and
mov
add
jle
imul
imul
xchg
pop
imul
xchg
lcall
cmpsl
xchg
pop
push
subl
lahf
fisubrl
aam
sub
lods
dec
sub
aad
lahf
cld
and
push
or
les
mov
mov
xchg
in
fisubs
adc
je
in
pop
out
or
or
mov
xchg
pop
mov
lcall
or
push
dec
arpl
pop
xor
into
mov
lahf
jae
pop
shrl
add
scas
mov
dec
inc
pop
je
imul
mov
rorl
js
pop
push
roll
or
sbb
ss
or
sub
iret
adc
mov
test
ficompl
jae
xchg
gs
shr
pushf
inc
mov
in
cwtl
push
ret
mov
cmp
xchg
sbb
adc
out
jnp
mov
aas
mov
pop
aad
in
mov
sbbb
enter
add
inc
fldenv
rcrb
sti
ss
push
lahf
mov
xchg
jbe
iret
mov
cmp
push
inc
loop
gs
pop
lods
mov
xlat
sub
jg
fucomi
in
jnp
add
gs
sub
enter
clc
jns
dec
add
inc
pusha
mov
adc
mov
mov
das
in
out
jp
fwait
loopne
pop
movsb
xlat
arpl
push
loop
mov
aad
cmpsl
push
gs
stos
pusha
out
std
xchg
imul
xor
sbb
int3
loopne
clc
push
sbbl
fsubs
sub
adc
xchg
fadd
cmp
inc
rol
outsb
pop
jns
mov
sub
add
rorl
adc
adc
dec
jbe
xchg
popa
aas
sub
ret
push
xor
pushf
mov
jp
adc
jns
movsl
aas
sub
ret
loop
call
jle
push
pop
mov
sbb
dec
push
xchg
repnz
and
insl
sti
xor
xchg
fiaddl
mov
sbbl
pop
pop
fsubrs
jbe
decl
cli
insb
add
ficomps
mov
jle
jmp
mov
mov
in
mov
and
mov
cwtl
scas
jo
enter
lods
int
in
and
inc
pop
popa
stos
iret
inc
out
sub
lcall
jno,pt
dec
inc
fistl
or
jle
jle
mov
and
popf
out
inc
jae
mov
mov
nop
pop
pop
dec
sub
cmpsl
aaa
mov
jmp
inc
mov
sbb
push
adcb
jp
out
cmp
xor
sbb
jmp
fldl
movsb
dec
sub
fsubrl
mov
xor
dec
inc
jb
sub
stc
add
and
mov
mov
adc
sub
or
sahf
jb
mov
ret
idivl
dec
adc
mov
add
int
in
sbb
jnp
xchg
mov
ss
cmc
xor
popa
dec
test
xchg
pop
sub
lret
fs
cmp
mov
pop
sbbb
and
addr16
or
dec
xor
aam
jo
cmpsl
push
mov
mov
sbb
fnstcw
add
out
lea
aas
outsl
sti
fsubrl
push
pop
mov
cmp
insl
roll
mulb
mov
stos
push
and
add
fsubl
fmull
fsubrs
fwait
mov
pop
lret
mov
sub
push
inc
or
cld
je
movsb
cmovge
fadds
fsubl
and
ljmp
jb
pop
mov
les
mov
push
stc
mov
and
xor
sahf
outsb
nop
dec
xchg
das
enter
adc
pop
call
or
ret
lods
daa
ret
mov
pushf
hlt
clc
ljmp
and
in
jnp,pt
ret
pop
sub
and
rcll
jl
or
movsl
mov
out
jae
pop
jg
cld
test
out
jb
arpl
inc
or
es
fdivrl
jge
ret
add
xor
cmp
loopne
enter
pop
pop
movsl
or
pop
pop
scas
xchg
movsl
dec
cld
add
out
test
mov
insb
adc
mov
mov
inc
les
je
push
dec
shl
xor
cld
sbb
pop
lock
adc
cmp
inc
dec
sbb
xchg
inc
mov
cmp
jmp
mov
mov
add
rorl
cwtl
loope
in
sub
and
sub
mov
mov
add
mov
and
rclb
hlt
push
mov
in
cs
adcl
sahf
push
mov
xor
popf
mov
sub
cmc
fbstp
pop
insb
leave
insl
inc
cmp
add
call
je
push
or
sahf
movsb
adc
movsb
rcl
lcall
mov
dec
or
cmp
bound
sbb
call
add
div
fstl
mov
cmp
lds
push
xor
rcpps
in
out
loopne,pn
std
insb
pusha
int
sbb
sbb
cld
inc
les
lods
test
adc
int
test
loope
leave
aad
fmull
jp
pushf
mov
aas
out
cmp
push
or
xchg
pop
dec
or
mov
ss
push
in
test
cmc
push
lret
notb
popa
fdivrs
pop
add
enter
sub
mov
ja
inc
xchg
aad
std
dec
inc
or
lock
repz
and
in
icebp
mov
dec
mov
adc
fwait
sub
sub
cmp
push
sbb
ss
mov
adc
add
add
lods
scas
jae
cmpsl
xchg
call
fstl
in
into
inc
std
pop
dec
fimuls
lret
es
and
xchg
arpl
je
or
lods
jns
lret
ljmp
sub
cltd
push
pop
sbb
rorb
fadds
into
push
jmp
jp
inc
cmp
lcall
cmp
test
enter
or
push
stc
sbb
dec
loop
xor
jge
rcrl
xchg
pop
loop
in
insb
in
mov
in
lods
into
pushf
les
andl
je
fiaddl
sbb
pop
mov
pop
mov
jns
jecxz
imul
aam
cmp
sub
jp
cmp
leave
in
icebp
outsl
fs
cmp
adc
dec
arpl
ret
paddsb
jmp
sbb
dec
je
push
mov
inc
mov
cmp
mov
pusha
push
fincstp
daa
jmp
and
pop
and
push
jg
xchg
lret
in
add
push
adc
push
mov
xchg
icebp
xor
adc
movsb
lcall
sbb
mov
lea
sub
in
cli
pop
lcall
movsl
jecxz
xchg
cmp
fwait
mov
sbb
jg
sub
loop
sbb
cmp
push
outsl
fsubr
test
stc
data16
arpl
rclb
fists
mov
or
xor
sub
pop
mov
les
fwait
lcall
adc
dec
adc
cmp
mov
cmpb
pop
outsb
or
scas
and
repz
aam
jne
imul
shll
test
ljmp
push
sub
sarb
pop
sbb
mov
test
push
xchg
fisubrl
or
std
push
jnp
loop
mov
cmp
outsb
test
inc
dec
test
or
stos
es
and
xorl
push
lret
addr16
jp
xlat
rclb
sub
fwait
cmpsb
es
mov
scas
ds
stc
xchg
leave
sub
adc
jge
xor
aad
sbb
notb
cltd
or
push
inc
sub
out
lods
sub
testl
inc
mov
cmc
sbb
pop
in
dec
mov
cmp
cmp
sbb
mov
sbbb
xchg
xor
stos
fsubs
lods
xor
fstenv
cli
cmp
testl
arpl
push
sub
pusha
arpl
stos
mov
pusha
inc
and
dec
mov
fisubrs
xchg
mov
cwtl
icebp
repnz
push
hlt
and
gs
sub
add
push
adc
mov
sbb
out
mov
nop
push
roll
jg
mov
xchg
ja
add
loopne
in
mov
call
mov
idivl
dec
xor
dec
sub
enter
aaa
ret
in
jmp
daa
add
repz
out
sub
shlb
fldt
sub
arpl
fcom
stc
jmp
push
pop
sahf
ja
pop
out
xlat
pop
imul
mov
and
fdivrs
mov
fisubrl
xchg
mov
mov
bound
xor
mov
mov
mov
shrl
daa
mov
scas
test
adc
sbb
in
jae
mov
bound
aas
ljmp
adc
add
in
xor
popf
jne
sti
mov
hlt
scas
mov
jbe
cli
cmpsl
mov
add
sub
outsl
push
dec
mov
idivb
xor
lahf
push
int3
adc
xor
rcrb
mov
cmp
inc
inc
stos
mov
scas
in
mov
xor
cmp
fdivs
or
sub
xchg
pop
sbb
dec
mov
push
lret
das
adc
aas
andl
scas
out
add
add
xchg
in
rcl
mov
jle
cmp
mov
fstpl
out
cmpsl
mov
aaa
push
or
dec
inc
je
push
or
ss
in
jle
mov
xor
dec
imull
sub
js
sbb
lods
push
test
sub
fstl
add
inc
scas
dec
mov
mov
int3
out
cmp
or
lds
mov
jbe
sub
add
push
mov
outsb
dec
aam
xor
push
mov
paddq
push
leave
notb
jno
mov
cld
and
and
mov
fstps
and
sar
xor
lock
adc
es
jne
jge
or
pop
xchg
mov
mov
clc
adc
and
ss
mov
mov
inc
ret
fstpl
inc
in
push
dec
ja
pop
push
jbe
ficoml
fisubs
jmp
js
test
iret
mov
lods
adc
mov
daa
dec
iret
sbb
arpl
fadds
cmc
leave
leave
jbe
xchg
loopne
mov
gs
pop
out
les
rorl
scas
pop
rolb
mov
push
dec
repz
insb
xchg
adc
mov
dec
cmp
inc
xchg
enter
imul
test
jg
fdivp
das
mov
jns
ja
icebp
jle
lock
idiv
test
and
add
outsb
xchg
test
mov
inc
sti
popa
sub
outsl
inc
mov
rorl
xor
fildl
ret
test
jne
test
push
mov
mov
xor
mov
pop
cmp
jge
push
push
sbb
mov
fldt
cmp
pop
adc
push
push
mov
imul
push
sub
mov
mov
jg
in
adc
pop
int
or
fwait
jge
and
cwtl
and
or
mov
dec
cmp
enter
xlat
movsb
jl
adc
loopne
int
popa
xor
int
popf
leave
jg
xlat
aas
add
jno
clc
or
in
in
sbb
pop
pushf
push
mov
mov
in
sub
mov
inc
fwait
adc
scas
mov
dec
mov
stos
mov
out
mov
mov
fisubrs
imul
arpl
fdivrs
sti
insb
cs
movsl
pop
add
adc
fdivl
push
loop
jle
lds
push
rolb
pop
cmp
mov
fbld
mov
inc
mov
test
test
or
push
rcrb
push
jne
bound
mov
ss
mov
cmp
or
sbb
stc
and
ficompl
jns
and
sbb
mov
inc
pop
ja
pop
dec
jbe
dec
stos
pop
xor
fcmove
sub
dec
push
cmp
clc
int3
mov
mov
xchg
dec
lods
in
loope
std
inc
pop
test
push
loopne
pop
inc
in
sbb
test
inc
cltd
jmp
xlat
mov
lods
mov
inc
lahf
push
cmp
add
dec
add
sub
dec
fs
addr16
cmp
stc
inc
xchg
aas
out
jne
jns
cmp
add
arpl
sbb
cmp
ds
pusha
mov
push
and
fisttpll
or
add
js
xorb
mov
stos
sub
lock
adc
xorb
push
out
add
jbe
dec
rol
aaa
ljmp
sti
scas
imul
inc
sub
sub
push
dec
addb
cwtl
bound
fildll
mov
xchg
je
aad
and
pop
xlat
adc
xchg
rolb
push
lods
les
lret
fsub
insl
cmp
ljmp
inc
sub
stos
ficomps
lcall
adc
pop
xor
add
push
cmp
lahf
repz
mov
or
ror
mov
or
into
ss
xchg
insl
outsl
mov
cli
add
cli
add
fdiv
in
test
pusha
mov
std
or
sbb
mov
pop
and
mov
and
dec
sub
jo
xchg
ja
mov
hlt
sub
bound
fdivl
and
and
mov
jle
jg
das
bound
cmp
xor
sub
and
xchg
roll
in
cmp
mov
roll
stos
idivl
pop
clc
fcomps
mov
mov
jnp
push
sbb
mov
decb
sbb
jo
dec
in
xchg
sub
lret
pop
test
jbe
xchg
mov
mov
sti
fsubrs
fildll
add
fstpt
dec
icebp
jecxz
mov
rolb
mov
cmp
pop
insb
mov
shrl
inc
int3
cmp
sub
pushf
pop
shlb
inc
loope
pop
jno
dec
mov
or
rclb
sub
test
mov
cmc
ss
hlt
in
test
shlb
lea
idivl
loop
addr16
sub
ret
loopne
test
ja
xor
add
mov
fisttps
sarb
cmp
fistpl
dec
xlat
mov
stos
jmp
enter
idivl
push
cmp
dec
dec
in
pop
arpl
testb
push
mov
push
sbb
arpl
addr16
or
loop
cmc
xchg
jl
inc
adc
in
leave
pop
outsl
rep
inc
dec
dec
ss
adc
sahf
and
ljmp
cmpsl
or
lret
insl
push
jle
xchg
hlt
mov
xor
fs
je
ljmp
aas
inc
mov
js
fisubl
add
test
test
clc
add
pop
mov
out
xchg
sbb
or
jbe
call
rorb
mov
adc
bound
lret
mov
mov
mov
inc
sbb
outsb
xchg
jae
sub
adc
fmull
popf
rorl
and
insl
dec
aaa
fwait
lock
or
rorb
imul
cmp
out
insl
stos
push
inc
dec
stc
push
add
xor
mov
imul
repnz
pop
sub
scas
jg
mov
je
cwtl
push
push
sbbl
pop
scas
ljmp
or
sub
ret
call
pop
mov
cltd
jmp
out
sbb
mov
sti
sub
xlat
cs
xchg
lret
mov
jecxz
mov
mov
mov
fistpll
push
push
into
mov
adc
out
jo
jb
adc
add
aad
mov
add
stc
mov
aam
jne
test
gs
xor
outsl
pushf
call
imul
xor
mov
mov
adc
mov
lret
jl
pop
cmc
leave
pop
mov
jp
or
aaa
dec
or
fsts
gs
xor
loope
lods
lret
out
imul
fimuls
jns
lahf
adcb
mov
and
mov
jp
cld
pop
rorl
pop
xor
pop
mov
lock
fiadds
pop
in
xchg
sbbl
xlat
xchg
inc
mov
data16
daa
mov
cmp
adc
or
fadds
lcall
pop
fcoms
out
mov
jle
lahf
xchg
dec
push
cmp
sub
in
enter
push
fcompl
rorl
repz
js
xchg
and
mov
or
cli
dec
push
iret
dec
loope
dec
cmp
mov
cli
lcall
sbb
xchg
fldenv
sbb
cmpsl
mov
lahf
fsubrl
sbb
stos
ljmp
push
mov
add
scas
mov
dec
fxch
push
sbb
add
mov
pop
out
sbb
stos
testl
data16
cmp
inc
push
jg
lcall
adc
in
adc
xlat
jns
add
lds
rcrb
fbstp
cld
mov
push
sbb
xchg
mov
sbb
or
data16
xor
jg
cld
sub
push
cmc
sbb
xor
add
aaa
mov
sub
cltd
out
inc
inc
mov
pop
out
mov
adc
dec
lds
leave
lods
ret
lds
jecxz
sub
pop
lods
je
mov
jno
jecxz
and
stc
popa
int3
adc
cmp
in
imul
jge
jl
inc
ret
jle
cmp
push
pop
ja
mov
adc
xor
mov
imul
add
sbb
xchg
stc
jae
rcrl
xchg
sbb
call
fdivs
adc
jnp
cmp
mov
andb
or
lahf
mov
mov
jno
cs
inc
fdivl
dec
jae
cmp
scas
cmpl
in
mov
mov
xchg
sub
mov
sti
in
icebp
ljmp
into
cld
xor
cwtl
sub
fwait
leave
je
aam
pop
mov
jp
into
mov
xor
add
call
jns
cmpsl
in
add
les
les
push
pop
adc
mov
adc
xor
pop
ds
lock
jae
imul
push
test
pop
idiv
xchg
jno
jo
pop
jbe
sub
inc
insb
push
dec
jns
pop
add
data16
pop
bound
lret
sbb
jle
sub
test
and
repz
out
pop
push
push
imul
outsl
sub
insl
cmc
xorl
mov
inc
aad
push
pop
test
addr16
int3
dec
arpl
ja
sahf
imul
lahf
jo
popa
sbb
ret
push
sbb
sbb
enter
andb
dec
test
sbb
das
shrl
pop
lock
lds
cmp
bound
aas
dec
fs
jns
nop
or
vcvttps2dq
jo
add
pop
addr16
sbb
negl
inc
jno
push
loopnew
ret
scas
xor
adc
xor
js
outsl
je
cmp
pop
cmpsl
cmp
jbe
mov
in
loope
cld
hlt
lods
sub
es
mov
adc
sti
mov
xchg
jle
push
xchg
movsb
fwait
inc
mov
out
lret
cwtl
mov
int3
cmp
pop
gs
jp
leave
or
ds
jbe
mov
add
mov
adc
push
cmp
dec
inc
subl
add
dec
push
cltd
lods
or
lea
push
mov
popa
mov
sbb
pop
negb
mov
lahf
fisttpll
inc
aad
ljmp
ja
out
xor
mov
aaa
mov
in
xchg
adc
lahf
pop
cmc
into
cs
sbb
test
int3
inc
pop
jmp
addb
std
imul
cs
or
pop
mov
push
mov
dec
orb
push
xchg
jns
jae
lods
negb
mov
arpl
sbb
mov
mov
ffreep
jecxz
pop
pushf
add
or
decb
ds
or
xchg
lea
adc
clc
xchg
mov
jne
stos
fs
push
cmpsb
mov
and
test
mov
inc
cmpsl
cmp
scas
mov
xchg
xor
adc
test
pop
add
repz
mov
out
xchg
lock
stos
push
cs
jns
mov
fadds
loope
in
mov
pushl
fdiv
pop
in
push
imul
xchg
cld
insb
inc
dec
cmp
fdivs
mov
dec
in
sbb
fs
rcrl
jae
xchg
xor
mov
inc
stos
jns
cmp
mov
lds
das
adc
insl
dec
enter
pushf
in
pop
xor
mov
mov
jmp
lods
shrb
push
sub
in
cltd
pop
mov
js
cmp
mov
movq
inc
icebp
test
sti
in
fistps
fstpt
lock
push
xor
out
scas
sbb
pop
cwtl
dec
shlb
or
sub
cmpsb
clc
or
scas
jns
fimuls
outsb
notl
push
and
fistps
xchg
insl
mov
fnstenv
addr16
ret
in
or
xchg
mov
push
mov
jge
mov
sub
and
mov
lret
es
ss
xor
lcall
xchg
icebp
clc
dec
add
fnstsw
stos
pusha
fisubrs
inc
mov
and
push
adc
cmpl
in
aas
push
in
pushf
test
call
inc
ficomps
bound
fimull
and
jne
xchg
dec
dec
or
daa
test
jmp
sbb
mov
or
add
imul
mov
ja
fsubrl
sbb
adc
subl
mov
and
cwtl
rolb
pop
dec
js
pcmpgtw
cmpsb
xchg
cli
cltd
je
push
adc
cltd
jge
mov
jnp
scas
pop
xchg
dec
sub
jmp
mov
adc
mov
sahf
pop
cmp
and
and
mov
push
outsl
sbbl
aam
inc
dec
add
xlat
out
mov
or
rcrl
cwtl
lahf
gs
insb
pop
movsl
mov
call
mov
repnz
xor
aad
pop
mov
mov
pop
and
push
lret
and
add
in
bnd
in
jmp
jbe
push
mov
mov
call
or
add
mov
mov
mov
rorl
lods
cmpsl
mov
fcoms
mov
dec
cli
add
dec
cltd
mov
cld
shrl
loopne
out
popa
push
outsl
es
out
push
mov
cli
popa
std
les
mov
imul
mov
cmpb
loop
cli
cmp
out
mov
aam
pop
aad
mov
stc
aas
in
push
shlb
adc
fnsave
dec
jno
repz
data16
sbb
cmpsl
pop
sub
mov
xor
test
push
mov
inc
mov
mov
cs
cmc
or
xchg
rolb
fcmovnu
stos
mull
dec
js
movsl
cmp
pop
mov
inc
cwtl
hlt
cmc
stos
gs
lock
or
pushf
xchg
sub
jno
icebp
or
push
cmp
movsl
sbb
clc
daa
push
jmp
test
push
fucomi
rcll
cmpsb
int3
inc
push
push
int3
add
subb
pop
sahf
xchg
push
pushf
in
into
cmp
or
and
inc
add
mov
cltd
inc
cmp
jo
pop
or
jno
gs
fs
pop
or
pop
je
scas
das
xchg
inc
xchg
lahf
or
int3
enter
cmp
pop
sub
insl
add
scas
xchg
mov
pop
fisubs
aaa
frstor
mov
sub
call
fs
push
fdivr
mov
ss
cmp
fstpl
aaa
or
lea
cmc
arpl
in
lods
jns
xchg
mov
rorl
pop
xlat
jmp
inc
rolb
fiadds
push
mov
add
fbstp
sub
sbb
loopne
push
add
loope
aas
xchg
mov
loopne
jnp
push
je
das
fistl
cmp
xchg
popf
int
gs
negl
pop
pop
popf
pop
filds
cmp
out
mov
fstpl
rclb
movsl
loop
test
aam
push
vmptrld
mov
push
lods
dec
jbe
insb
cli
sbb
push
sbb
stos
sbb
mov
cld
pushf
or
jns
pop
inc
add
pop
xchg
lea
divb
test
inc
sub
aaa
hlt
out
mov
fsubs
adc
in
insl
stos
pop
jge
or
call
orb
out
mov
mov
fsts
dec
sahf
inc
inc
xchg
scas
add
ret
xrelease
xor
mov
idivb
mov
lahf
in
pop
ret
test
nop
pop
repnz
pop
jb
out
in
dec
add
std
mov
mov
mov
mov
xor
popa
xchg
movsl
add
dec
nop
test
es
sbb
cld
or
test
aas
test
jb
lcall
movsb
mov
pusha
xchg
or
jle
call
xchg
rcrl
sbb
bound
stos
es
gs
mov
jb
fwait
or
icebp
insl
sub
push
mov
jge
push
leave
dec
sbb
sub
jo
std
push
mov
flds
into
mov
and
int3
and
push
pushf
push
adc
rcrl
aaa
jecxz
lods
idivl
inc
ljmp
out
and
ret
pop
or
in
std
sarb
in
cmpsl
fwait
cmpsb
aaa
in
lds
or
inc
je
daa
pcmpgtb
popa
jnp
fnstenv
popa
clc
hlt
jae
es
mov
in
cmpsl
push
shll
and
sub
sbb
xchg
push
cmc
xchg
xchg
insb
inc
mov
call
movsl
add
aaa
insb
mov
sbb
mov
into
lods
insl
das
dec
inc
pushf
enter
cmp
fs
xchg
aam
lret
mov
pop
dec
in
xchg
sar
mov
adc
into
cmpsb
sub
out
sub
insl
adc
bound
jbe
lcall
std
lock
mov
fstp
and
sub
dec
ss
xor
std
sub
enter
cmp
sub
aam
ss
loope
sub
jl
xchg
dec
pop
or
jae
add
neg
int3
or
insw
push
or
call
jb
and
dec
cmp
dec
imul
mov
test
xchg
adc
xchg
lahf
push
repz
lahf
ret
ror
mov
jbe
push
push
pop
dec
lods
fadd
mov
pop
aam
mov
sti
sub
mov
jge
stos
in
mov
inc
pop
and
dec
add
popf
add
out
xor
dec
jns
mov
cli
out
jne
fsts
negl
adcl
enter
xchg
outsb
xor
cwtl
adc
pop
xchg
insl
insl
push
or
rcrl
and
xchg
fwait
or
inc
bts
mov
jo
ja
pop
loop
pop
es
sbb
out
dec
push
pop
mov
mov
add
sti
je
enter
loop
mov
adcb
mov
inc
add
push
cmp
inc
add
jmp
mov
int3
add
pop
dec
sbb
pusha
lea
or
mov
mov
push
inc
jnp
fs
mov
xor
leave
mov
push
pop
fidivrs
jp
dec
pop
mov
push
stos
jno
insl
mov
push
push
ds
dec
cmpsl
rcll
cli
push
scas
imul
adc
in
je
cmp
stos
enter
in
repnz
adc
mov
rolb
pop
aad
push
push
xchg
js
inc
push
pop
xor
lret
cmpsl
outsb
inc
jle
fmulp
in
repnz
shrl
xorl
subb
pop
mov
jmp
call
hlt
jae
xor
inc
cmp
xor
jae
push
inc
or
orl
cmp
es
jo
call
js
in
out
div
cltd
in
push
pushf
cld
les
clc
cwtl
fstpt
push
psllw
sbb
mov
insl
xor
test
dec
pop
jb
outsb
aaa
ret
mov
cltd
mov
mov
leave
mov
dec
cmpsb
movb
pushf
repz
push
pop
push
and
lds
stc
mov
stos
jae
mov
xor
in
xchg
mov
cli
movsl
sbb
jecxz
ror
jmp
aad
ss
pop
stc
movsb
jno
pop
jge
push
mov
out
cmp
xchg
jmp
scas
lea
scas
pop
inc
test
ret
and
xor
test
sbb
pop
xor
jg
repnz
sbb
add
inc
push
or
add
push
mov
push
xor
fwait
xor
std
ds
xchg
jmp
mov
mov
xchg
lret
cltd
jecxz
ds
xchg
xchg
dec
sub
push
xor
add
inc
dec
mov
outsb
ds
xchg
dec
lods
movsb
das
std
in
jno
cmp
out
rcrl
mov
fdivr
idivl
aaa
mov
dec
push
and
fwait
push
test
cmp
xor
dec
mov
xchg
mov
lcall
movsb
lea
cli
push
pop
in
cltd
jnp
jae
adc
inc
pop
fcompl
out
xchg
dec
xor
mov
push
insb
pop
fcomps
fistps
adc
leave
aaa
aas
pop
cmpl
jo
pop
sub
popf
push
xchg
loope
cmp
mov
imul
cwtl
push
adc
mov
or
dec
push
push
xor
cmp
or
outsl
adc
adc
lcall
outsb
jnp
dec
daa
stc
push
sbb
add
je
xchg
push
jb
out
mov
xor
mov
xor
insb
dec
stos
in
lods
test
sub
jp
jb
or
out
das
outsl
cltd
ud0
repnz
popf
es
ja
subl
cld
adc
subb
xor
popf
test
mov
loopne
xchg
int3
cmp
ret
in
jns
xor
call
rorl
adc
cltd
xchg
push
mov
in
lods
or
cmp
push
inc
in
and
push
pushf
subl
test
test
dec
subl
pop
cmp
pusha
test
aaa
jne
cltd
pusha
frstor
subl
lock
out
das
aad
ret
int
jo
std
cmpsb
xchg
test
fmuls
insb
repz
andb
mov
adc
mov
sub
inc
mov
pop
sar
mov
sarb
xlat
and
jbe
mov
stos
or
push
js
ret
pop
dec
and
call
inc
adc
cmp
and
cmpsb
imul
fildll
bnd
dec
xchg
mov
xor
adc
or
fsqrt
stos
ljmp
jns
not
in
xchg
ficomps
add
lock
pop
popf
testl
dec
mov
jns
add
fld
sbb
sbb
test
and
gs
cs
repnz
adc
jb
out
clc
sarl
inc
outsl
addr16
jle
adc
mov
xor
jecxz
repnz
lds
mov
stc
test
rcll
mov
mov
leave
std
ficoml
pop
psllq
inc
popa
mov
or
cli
xchg
pop
into
les
mov
leave
sbbb
jo
test
sub
in
push
int
or
hlt
jle
push
jno
iret
pusha
mov
jp
movsl
mov
jle
or
int3
xchg
jo
jns
mov
add
adc
daa
cmpsl
hlt
sbb
mov
and
sub
cmpsl
push
inc
scas
sahf
jo
cld
cmpsl
mov
inc
shlb
lret
mov
push
lahf
lods
std
cmpsb
pop
fistps
out
mov
or
mov
loope
in
push
cmp
jb
or
push
enter
and
mov
cld
pop
test
dec
fs
jl
dec
mov
xor
sbb
mov
jp
pusha
cmpsl
scas
adc
mov
in
das
inc
imul
outsl
push
lcall
fs
aas
push
imul
mov
pop
cli
in
pop
mov
pop
fnsave
xchg
rcll
stos
pop
sbb
cmp
mov
cmp
jecxz
fcoms
or
stos
sbb
mov
jg
push
or
scas
cli
jmp
or
mov
out
mov
xor
jge
sub
and
lods
scas
pusha
sbb
ds
push
fsubr
add
push
xchg
xor
pop
cmp
push
jecxz
jg
xacquire
or
stos
sub
inc
inc
stc
test
cltd
cmpsb
adc
movsl
inc
repz
mov
stc
sbb
mov
ljmp
dec
jb
imul
leave
push
cli
int3
fsubl
dec
xchg
pop
out
insl
ds
test
xchg
aas
mov
mov
jbe
movsl
out
mov
adc
sub
enter
dec
mov
in
add
push
push
mov
test
pop
scas
iret
andb
cs
push
mov
repnz
rcrb
inc
inc
xchg
rol
push
mov
pop
cmp
call
sub
popf
loope
mov
rcl
push
or
lds
pop
push
cmp
aam
pop
jl
out
lock
xor
dec
out
push
mov
inc
rcrb
in
xchg
add
daa
inc
push
popa
mov
call
push
les
jecxz
mov
sbb
mov
fists
or
cmp
iret
jmp
ds
mov
ss
inc
test
fabs
test
fwait
ret
int
test
aam
out
xlat
xchg
push
lret
inc
push
push
out
and
mov
jno
int
add
fisttpl
jnp
push
push
jnp
add
scas
in
fldcw
xor
jno
popa
jp
shl
pop
add
aas
daa
bswap
lods
loope
nop
jg
xchg
mov
push
adc
loop
mov
sub
add
aas
ja
popf
mov
scas
subb
jbe
mov
lds
loopne
in
test
cmp
outsb
repz
pop
sbb
sub
nop
inc
push
aas
cwtl
leave
insl
pop
lret
fcmovu
xor
stos
dec
dec
dec
cmp
add
in
jae
fsubl
adc
aad
inc
push
fnstcw
mov
pushf
and
out
mov
mov
fs
inc
sahf
arpl
mov
pop
out
pop
sub
pop
sbb
inc
test
in
mov
jge
loopne
mov
push
mov
mov
in
jp
add
sbb
out
dec
lods
flds
jo
movsb
xor
inc
fnstcw
xchg
mov
mov
int3
and
dec
out
adc
sub
cmp
mov
in
xor
outsl
pop
into
movsl
push
lds
int3
dec
arpl
pop
cmpsl
shr
in
or
movsb
jae
ret
pop
pop
jmp
lea
shll
or
xor
fistl
lret
mov
pop
xor
insb
cmp
adc
jl
pop
pop
mov
xchg
jl
sbb
clc
daa
iret
popa
inc
add
xchg
pop
cld
movsb
jnp
mov
push
jo
pop
test
popf
xor
mov
jp
xor
push
mov
stos
add
pop
out
es
cld
insl
mov
movsb
inc
pop
add
lcall
mov
scas
dec
push
jo
lds
mov
test
adc
outsl
sbb
inc
sbb
scas
pushf
jl
ret
loope
mov
leave
and
in
fs
ljmp
rorb
rorb
in
lahf
fisubrl
sub
pop
stc
xchg
fadd
xchg
xor
mov
scas
out
xchg
scas
jg
ss
je
sbb
xchg
xor
sbbb
pop
std
xchg
clc
xor
jmp
sbb
stos
call
cmpsl
dec
and
dec
mov
rolb
sbb
orl
jns
mov
and
popf
push
push
sbb
es
aaa
hlt
xchg
sub
stc
xor
ffree
inc
ds
cmp
mov
cwtl
mov
idiv
mov
mov
or
xchg
adc
pop
adcl
out
lds
adc
lret
push
rcpps
addr16
sbbb
les
out
test
cmpsb
xchg
test
xlat
je
cmpsl
and
sub
cmc
pop
adc
imul
sub
movsb
xchg
icebp
stc
xlat
pop
lret
sbb
fadd
scas
gs
jb
xorl
jno
outsl
xor
jp
aaa
jmp
je
mov
repnz
jmp
daa
bound
mov
ret
cmpsl
jmp
testb
mov
repz
push
mov
push
imul
cltd
xor
fstps
jle
mov
dec
addr16
es
add
ss
xchg
das
shlb
inc
fs
mov
jp
hlt
lock
pop
xor
pushf
fwait
cmp
xlat
inc
dec
loopne
pop
pop
fnstcw
rcrl
roll
mov
adc
test
mov
inc
lcall
mov
jne
addr16
dec
mov
outsb
mov
add
orb
out
jl
rorb
adc
aas
es
jge
mov
in
sbb
popf
adc
aam
stos
test
xchg
push
fidivl
jbe
out
adc
xor
mov
bound
cld
mov
dec
ljmp
sbb
aad
leave
aad
call
ja
or
sbb
mov
mov
jnp
daa
inc
loope,pn
int
imul
loop
daa
sbb
ljmp
shll
daa
sarl
hlt
mov
iret
sub
fld1
or
mov
dec
jbe
lock
hlt
xor
gs
or
adc
jae
lret
cmc
push
rorl
in
scas
cs
cld
adc
lret
pop
stos
divl
ret
lea
jmp
xchg
jnp
add
pop
lret
pop
and
ljmp
pop
shrb
das
mov
pop
mov
leave
or
mov
sub
test
jae
imul
js
sub
scas
push
mov
inc
fwait
mov
fs
adc
lds
test
cmc
push
mov
lret
mov
mov
push
sub
and
lea
lds
mov
xchg
jle
pop
inc
repz
cmp
rol
movsl
push
loop
or
or
in
shlb
enter
add
dec
in
je
lods
push
js
stos
imul
and
ljmp
push
and
iret
add
test
push
clc
adc
xchg
xchg
cwtl
int
xor
xchg
dec
sbb
mov
shrl
rolb
fildll
lock
sbb
lods
push
push
or
test
pusha
sbb
cmp
mov
into
pop
rcr
decb
sbb
sub
mov
and
push
std
or
xchg
xchg
mov
pop
fisttps
scas
cwtl
lret
sbb
inc
cmpsl
mov
insb
push
bound
and
sbb
addr16
xor
shrb
bound
and
or
aas
mov
pop
sbb
loope
xchg
jae
sub
cltd
subl
stos
out
ja
adc
or
fwait
lods
divb
repz
ds
pop
cwtl
into
adc
pop
out
inc
mov
cmc
bound
pushf
jne
push
clc
push
mov
sbb
xchg
inc
shll
xchg
push
xchg
out
enter
test
jno
imulb
lret
jbe
cmp
jnp
fmull
inc
cli
pop
cs
push
push
pop
dec
test
sbb
arpl
mov
fimull
daa
ficoml
fistpl
imul
out
push
negl
xlat
xor
push
jl,pn
inc
or
sbb
or
xlat
ljmp
pop
dec
frstor
inc
xorl
and
xor
loope
cmp
sar
push
dec
sub
dec
iret
xor
leave
cmc
sbb
hlt
jno
inc
add
test
popa
aaa
jnp
inc
pop
mov
out
push
jb
fldenv
mov
mov
sub
inc
aas
in
sbb
push
cmp
sbb
icebp
sbb
int3
lcall
and
xchg
scas
mov
mov
fld
fs
loopne
outsl
jo,pt
popa
xor
mov
std
dec
adc
out
aas
ss
xchg
or
fbstp
jp
sbb
or
dec
cwtl
mov
or
push
into
imul
faddl
mov
and
sbb
mov
inc
xchg
mov
inc
repnz
dec
push
imul
data16
and
adc
push
stos
sub
xchg
pusha
mov
mov
adc
mov
outsb
adc
mov
jmp
xor
outsl
xchg
adcb
add
int3
sarb
call
idivb
or
mov
jae
mov
pop
mov
cwtl
cmp
mov
in
jnp
jno
test
or
pop
out
test
pop
lods
push
pop
cs
or
je
and
or
cli
mov
xchg
adcb
mov
lods
sbb
pushf
out
test
das
fsubl
jo
mov
xchg
jecxz
mov
sbb
cmp
mov
dec
sub
cmp
fwait
push
in
dec
adc
shlb
rcrb
pop
in
iret
or
out
mov
xor
sub
mov
loopne
sub
das
addw
in
and
xor
cmp
cmp
movsb
xchg
cli
sub
add
roll
leave
fstpl
out
jo
jecxz
jae
cmpsl
sbb
push
in
lcall
jecxz,pn
jmp
or
pop
gs
lods
es
and
cmpb
nop
and
addr16
mov
or
test
fdivrl
sub
hlt
stos
icebp
fmull
rolb
xchg
push
hlt
sbb
jmp
icebp
pop
mov
stos
sub
jne
xor
adc
cmp
sub
push
shld
and
dec
jo
mov
jge
mov
cmpl
or
pop
sub
out
cltd
clc
leave
sbb
xlat
sub
add
inc
pop
into
je
sub
adc
popf
push
xchg
fs
jne
int
aaa
inc
inc
cmp
adcl
dec
inc
out
jno
out
aas
fs
mov
push
mov
idiv
dec
js
pop
call
imul
sub
loop
xchg
jne
or
sbb
dec
and
jnp
inc
xor
mov
aaa
call
aaa
and
movsb
sahf
mov
ret
mov
mov
insb
mov
jb
xchg
in
add
scas
pushf
ja
mov
lret
std
mov
movsl
fwait
rclb
jg
loop
imul
incb
dec
bound
or
mov
adc
cmp
cli
sub
pop
mov
mov
xchg
mov
popf
jae
into
adc
sub
cwtl
pop
jecxz
rcrb
cmp
jp
xchg
cmp
or
xor
in
xor
and
inc
ret
add
pop
out
mov
pop
gs
jge
mov
cmp
idivl
movsb
icebp
mov
jb
inc
pop
and
xchg
dec
popa
jle
aas
sti
outsl
enter
je
xor
pop
cmp
xchg
sub
cld
addr16
lcall
sbb
imul
ja
out
lahf
pushf
ss
jmp
mov
movsl
adcb
popf
and
sub
sub
cmpsl
add
jne
and
xor
dec
lods
push
ret
popf
and
mov
mov
leave
call
pop
int
push
jg
int
and
jb
leave
mov
and
cmp
cmpl
xchg
jge
arpl
mov
cmc
mov
fs
out
sub
mov
into
or
inc
sbb
dec
ss
pop
dec
adc
pop
aas
test
push
sbb
jg
jb
sbb
add
adc
jl
sti
stc
fdivrl
and
and
mov
int
sahf
stos
aad
popf
leave
pop
adcl
inc
mov
push
fs
nop
xchg
das
cmp
inc
and
std
arpl
jg
clc
jmp
jle
xor
jae
cli
inc
xchg
xor
mov
popf
pop
cmp
nop
mulb
sbb
gs
das
adc
push
mov
mov
scas
bound
mov
mov
int
add
jmp
shlb
push
aas
bound
push
cmp
loope
jnp
fimull
add
inc
nop
movsl
cmpsb
jbe
xor
jg
push
popf
fdivrs
lahf
mov
pop
push
fcoml
into
mov
imul
test
or
mov
imul
mov
pop
add
cs
out
cli
add
call
add
sarb
stc
in
push
jo
ss
push
inc
cmc
mov
into
imul
add
push
arpl
imul
je
sub
push
js
mov
mov
ljmp
add
mov
sub
stc
cwtl
ror
inc
pop
inc
jno
and
mov
stos
icebp
push
movl
push
pop
mov
inc
jae
sbb
pushf
shlb
mov
jno
scas
mov
repnz
pop
add
dec
fnstsw
pop
je
jbe
loopne
xor
mov
dec
sti
xorb
movsl
ss
rcll
ret
imul
fisubs
scas
std
xlat
inc
jne
decl
jno
iret
stos
push
push
sahf
insb
gs
cli
sbb
pop
ss
mov
cld
mov
cmp
sbb
jns
push
inc
sub
out
imul
fwait
pop
fsubl
and
negl
mov
aas
addr16
sub
lahf
shr
and
rcll
rcll
scas
sti
cmp
in
fdivrp
test
sbb
arpl
sbb
insl
arpl
jl
clc
ljmp
or
cltd
pop
inc
jb
ret
clc
or
loope
setno
pop
or
rcrl
push
stc
adc
pop
insb
adc
jno
das
stos
rcrl
addb
mov
xchg
dec
sbb
popa
jne
call
in
push
add
sub
dec
cmp
lret
les
xor
dec
mov
mov
notl
sbb
or
out
incl
data16
sub
je
std
insb
xchg
mov
mov
in
xor
jmp
adc
mov
add
je
insl
xchg
mov
sbb
sub
movsb
push
pop
je
cwtl
lods
and
movsb
push
jbe
jecxz
cmp
jae
in
out
jns
addr16
es
xlat
mov
inc
jg
pop
mov
lock
insb
pop
iret
aaa
dec
data16
fistpll
sub
push
jecxz
ja
outsb
ret
mov
jg
and
int
and
out
scas
lret
fwait
xchg
mov
mov
imul
or
insl
or
andl
aad
mov
push
mov
and
and
jbe
and
jmp
lds
clc
or
les
xor
mov
pop
aad
es
fisubrl
test
or
fsubl
pop
mov
and
sbb
add
cs
add
add
sbb
jmp
lods
std
mov
out
mov
aaa
push
dec
enter
add
inc
pop
jmp
in
pop
sbb
and
lods
mov
outsb
clc
jbe
mov
andl
dec
stos
mov
inc
sub
and
inc
pop
xchg
test
or
cmpsb
push
test
bound
outsb
sbb
xchg
sbb
aad
bnd
push
and
sub
int3
mov
adc
out
nop
rorl
sti
mov
repz
aas
ja
leave
push
aas
fnstcw
push
icebp
fs
xchg
mov
imul
testl
test
loop
imul
pop
outsb
test
clc
fnstenv
adc
ret
xor
push
sbb
jle
mov
xchg
inc
sub
outsb
mov
push
scas
je
jne
adc
jmp
rdtsc
pusha
cmc
fwait
lea
xchg
roll
inc
fucomp
jg
and
xor
mov
push
mul
test
pop
pop
mov
leave
push
sbb
callw
dec
jp
inc
push
out
dec
jmp
xor
or
test
xlat
out
xchg
icebp
xorl
stos
push
fnstenv
sub
cltd
cltd
mov
outsb
aaa
in
cmp
sbb
fnstsw
sbb
mov
sahf
xchg
fsubs
shrb
mov
adc
sub
sbbb
push
and
xchg
fwait
lds
and
shll
mov
dec
in
rcrl
cli
cmpsb
add
clc
ljmp
addb
dec
and
out
aad
jo
pushf
fisttpll
loopne
neg
jge
dec
lods
mov
inc
cmpsl
ja
out
in
insb
mov
lock
pop
adc
das
nop
ret
inc
add
aam
les
pusha
jle
add
cmpsb
mov
mov
divl
aam
cli
ja
push
jle
sbb
idiv
dec
mov
xchg
xchg
dec
or
inc
in
or
movsb
popf
xchg
xor
lea
xchg
loope
mov
or
jns
mov
lods
mov
sub
mov
lcall
movsb
and
mov
ds
imul
sti
jno
jl
push
lock
rcrb
pop
repnz
movsb
mov
xchg
mov
push
mov
mov
jno
pmaxub
int3
lods
divb
adc
sub
stos
lods
fsubs
leave
inc
inc
sarb
xor
fwait
das
mov
clc
adc
sbbl
inc
int3
fwait
roll
mov
jle
pop
push
sbb
daa
adc
dec
jae
sub
lret
shll
jbe
outsl
pop
dec
cmpsb
and
jecxz
add
and
pop
dec
and
movsb
mov
xchg
sti
xchg
cmp
pop
push
in
inc
adc
push
mov
cmp
mov
xchg
inc
or
pop
mov
xorb
cmp
pushf
lret
lock
mov
mov
mov
cli
mov
jecxz
in
pop
in
mov
dec
out
sahf
jnp
mov
push
jecxz
repnz
pop
movsl
popa
sub
notb
or
jecxz
sahf
mov
rcrb
and
popa
xchg
mov
out
dec
ljmp
jno
xor
push
mov
jmp
outsb
loopne
in
and
fistpl
jo
call
cmc
icebp
ljmp
inc
mov
rorb
add
lret
dec
push
ss
or
jg
sub
pop
arpl
sub
jle
inc
inc
mov
add
cmp
lea
xor
add
int
ret
call
lods
jg
pop
lods
push
subl
xor
xor
dec
inc
jnp
pop
push
out
rcr
pop
pop
ss
fisttpl
pop
jb
nop
push
ss
xor
mov
xlat
leave
add
cs
mov
stos
sar
jl
mov
shl
scas
sbb
ljmp
rorl
jnp
divl
loopne
mov
orl
loop
xor
mov
bound
xlat
int
or
das
mov
jne
jne
xchg
xchg
jmp
sbb
lret
adc
push
cmpsl
xchg
sbb
rclb
jle
mov
bound
aad
lret
cmp
stc
and
inc
cltd
sub
sarl
mov
and
jp
lret
or
test
lods
and
enter
cmpsb
aas
adc
arpl
jo
mov
xchg
jmp
clc
add
and
je
aad
fstl
inc
xchg
jmp
lea
mov
or
call
cmpl
insl
neg
sub
and
cmc
and
push
pop
push
mov
push
or
mov
sahf
cmp
sbb
cmc
push
push
movsb
jns
mov
imul
das
mov
adcb
cmc
mov
jae
mov
or
add
sbb
mov
jne
and
cmpsb
mov
popa
xchg
test
xor
sahf
dec
ds
inc
sti
sbb
es
sar
dec
pop
lods
into
imulb
fsubs
cs
je
arpl
cmp
loopne
sub
fdiv
push
repnz
sbb
rorl
hlt
arpl
sbb
pop
in
enter
scas
shrb
mov
ja
gs
gs
mov
sbbb
xor
mov
and
dec
jmp
pop
cltd
sub
daa
fnsave
pop
pop
mov
lds
push
clc
inc
test
mov
shlb
pop
push
mov
jg
sbb
gs
fwait
hlt
and
cltd
add
xchg
push
adc
dec
mov
movsb
push
lods
lret
out
push
lds
lcall
enter
movsl
out
fiaddl
out
rclb
adc
orl
cwtl
stc
enter
lret
stos
add
outsl
and
xor
arpl
pop
mov
adc
mov
push
pop
aad
pmaddwd
shlb
pushf
gs
inc
mov
mov
rcll
lea
mov
add
je
pop
sahf
cmp
ss
stos
xchg
shr
cmp
lahf
lea
mov
shl
mov
adc
dec
cmp
cmp
int
das
mov
iret
xorl
hlt
arpl
or
xor
lcall
imul
sbb
mov
insb
loope
cmc
mov
push
lds
ficompl
xchg
int
xor
pop
movsb
imul
scas
mov
scas
ss
xor
or
aaa
loopne
cli
lods
and
mov
inc
aaa
outsl
dec
es
pop
mov
or
and
dec
mov
jo
push
inc
push
lcall
imul
in
stos
pusha
sti
into
scas
xor
insl
das
sub
add
push
in
ljmp
and
and
push
popl
sbb
pop
dec
aad
stos
cld
ret
hlt
push
jg
stos
incl
lds
movsb
jo
dec
cmpsb
mov
inc
or
ljmp
daa
lret
int
pop
aam
loopne
mov
jmp
pop
nop
out
jle
fcomip
test
stc
out
and
stos
rolb
mov
lahf
jns
repnz
in
clc
fdivrl
inc
add
cs
sbb
mov
lret
jo
cmp
sub
fwait
mov
xchg
pop
cmp
xor
jb
daa
lret
push
cmp
icebp
clc
mov
fdivs
mov
add
cmp
lds
adc
push
les
add
mov
fnstenv
cmp
adc
shrl
adc
out
arpl
jno
or
or
jae
cmp
sti
dec
xchg
test
jae
pavgb
out
push
movsb
and
push
inc
rcrb
adc
xchg
insl
jp
mov
out
hlt
int
add
xchg
cmpsb
int3
pushf
mov
push
or
lret
outsl
cmp
aaa
movsb
lahf
xor
rclb
push
adc
add
pop
not
cmp
cltd
push
or
push
jge
movzbl
in
lcall
in
push
int
inc
sbb
pop
jne
repnz
gs
cld
mov
mov
stos
sbb
or
pop
leave
jecxz
sub
mov
out
xor
imul
push
jb
jno
mov
pushf
mov
inc
cmp
inc
or
imul
mov
lcall
ljmp
loopne
and
sbb
lret
imul
inc
mov
jno
loop
inc
and
xor
bound
pop
in
push
jp
lds
adc
mov
dec
or
shr
rorb
xchg
lods
push
test
addl
adc
pusha
push
cmp
adc
or
fstpt
and
mov
xor
in
mov
xor
mov
push
lods
inc
sub
pusha
ss
inc
andb
mov
pop
out
inc
ret
and
push
daa
scas
xchg
xor
sbb
iret
pop
and
inc
daa
cmp
mov
adc
mov
jb
dec
sbb
popa
fcompl
mov
insl
lret
mov
xchg
lcall
push
sub
lods
popa
sti
or
jo
jge
data16
mov
aad
nop
mov
push
das
xor
movsl
xlat
es
lahf
data16
and
mov
imul
pop
or
jnp
cmpsl
xchg
xchg
sbb
adc
mov
out
mov
fwait
stos
repz
lods
outsb
pushf
jp
stos
ficompl
cmp
addr16
jno
push
inc
push
scas
popf
pop
cmp
ss
lods
xlat
out
mov
inc
mov
mov
test
mov
xchg
cmpsl
lea
test
sub
sub
cwtl
xchg
push
lods
sar
dec
jb
mov
mov
dec
outsb
fstpl
call
push
adc
test
mov
lock
loop
jnp
repnz
pushf
mov
aad
sbbl
xchg
or
sbb
cltd
movsb
adc
gs
mov
cltd
fnsave
pusha
pop
call
jecxz
ljmp
jecxz
int
scas
fldl
out
xor
pusha
mov
arpl
pop
push
out
fildl
sbb
insl
into
cmpsb
pusha
sub
cwtl
and
push
clc
xchg
nop
xor
pop
gs
mov
adc
or
jecxz
cmc
sbb
or
insb
fmuls
lea
xchg
pop
fs
stos
jmp
or
jo
filds
mov
push
push
jge
pop
aas
adc
cmp
pusha
adc
xor
andl
add
xchg
imul
inc
inc
or
pop
mov
sub
lods
movsl
fidivrs
out
mov
mov
xor
pop
daa
data16
cmpsl
pop
inc
adcl
inc
adc
xchg
sub
sbb
xlat
sub
outsb
inc
rclb
dec
sbb
cli
xchg
cli
lds
fdivr
insb
or
pop
and
icebp
repnz
pop
push
rcl
std
and
cmpb
movsl
inc
sbb
fnsave
dec
adc
push
jmp
and
mov
push
lock
imul
cmp
mov
push
loopne
scas
js
fidivrs
push
mov
mov
mov
mov
mov
xor
add
cli
push
mov
fildll
inc
mov
sbb
pusha
mov
jg
mov
inc
ficoms
xchg
out
ljmp
js
dec
sarl
orb
ljmp
jnp
xor
fistl
into
addb
lret
cmp
addb
mov
std
xor
pop
add
sub
mov
or
xor
clc
mov
out
mov
mov
rorl
stos
pop
cltd
push
push
xchg
lods
es
popf
inc
imul
repnz
xchg
popa
sbbl
cli
aaa
jl
lods
push
cld
hlt
shrb
insl
jb
cmp
and
cs
add
pushf
mov
xchg
dec
in
dec
jbe
out
jmp
loope
das
lods
ds
xlat
push
push
jmp
cmp
mov
in
pop
shrl
out
pop
dec
or
cmp
adc
xchg
xor
cwtl
idivl
jge
sbb
xchg
cmp
lret
jb
adc
and
aam
add
sub
mov
ret
pop
outsl
xchg
dec
ds
shlb
jp
dec
pop
mov
fnstenv
ret
test
aas
pop
or
push
mov
inc
insb
lea
sub
in
pop
movsb
in
insb
cmp
aas
repnz
movsb
cltd
push
rcl
inc
fbld
stc
scas
repz
jp
xor
outsb
es
stc
imull
xor
das
sbb
mov
inc
mov
dec
jns
sub
scas
inc
mov
inc
jl
sbb
cmpsl
repnz
into
lahf
inc
adc
fstl
ss
insb
mov
xchg
filds
out
inc
incb
loope
sub
mov
cmp
push
out
mov
mov
jp
xchg
pop
cmp
jp
pop
insl
ss
push
dec
rorb
cmc
or
lds
lret
adc
cmpsb
jnp
xchg
lock
and
mov
enter
pop
hlt
and
lock
add
scas
pop
mov
inc
adc
nop
xor
mov
xchg
xrelease
out
sub
or
outsl
push
aas
push
insb
js
adc
nop
mov
pusha
mov
dec
test
push
nop
cmp
jge
pop
fnstcw
cmc
leave
out
push
es
push
out
dec
test
pop
xchg
mov
and
cmc
adc
subl
or
pop
jae
ret
cmp
fldenv
cmp
mov
sti
sarb
push
call
or
mov
pop
fstl
ret
sub
cmpsb
push
jo
orps
cmc
lret
mov
cld
es
adc
aam
lods
fs
dec
add
lahf
leave
inc
or
mov
mov
pop
in
imul
pop
les
sub
xor
andl
sbb
mov
mov
dec
addb
fadds
jl,pn
or
das
stos
xor
inc
sub
in
push
in
mov
sbb
jae
push
movsl
xchg
imul
lods
pop
cmc
jnp
imul
xchg
adc
fistl
pop
pop
pop
cmp
mov
push
lret
mov
push
dec
insb
aad
daa
jg
cmp
loope
fmul
xchg
or
into
lcall
mov
and
aaa
dec
dec
cmpsl
add
in
stos
mov
sahf
aam
inc
js
jle
and
pop
xlat
loopne
xor
mov
es
jmp
jl
test
mov
jp
dec
sbb
add
and
cmpsb
mov
inc
pop
jne
mov
and
mov
aad
bound
mov
call
mov
je
mov
add
lods
mov
insl
push
ret
scas
int3
or
imull
inc
iret
push
xchg
iret
or
mull
mov
push
adc
push
stos
ja
test
mov
xchg
loope
inc
movsb
js
sub
out
push
ja
push
sub
xlat
in
stos
inc
into
call
stos
dec
or
cmp
xchg
outsl
mov
cmc
mov
fdivrs
imul
mov
xor
and
int
enter
jge
xchg
dec
out
je
test
mov
repz
mov
vandps
dec
or
clc
test
adc
lds
cld
aam
das
movsl
push
jb
icebp
lret
fbstp
sbb
outsl
adc
mov
add
xor
cmp
mov
adc
or
dec
and
ds
enter
aaa
inc
sbb
mov
jmp
dec
cwtl
movsb
sub
xor
xorb
or
aaa
and
lods
push
jecxz
imul
push
insl
push
mov
jecxz
or
rclb
sbb
dec
or
out
cltd
lret
stos
inc
cmp
inc
enter
je
std
iret
cmp
ljmp
xor
std
ret
out
ret
push
pusha
sbb
fwait
mov
mov
aam
ret
cmpsb
sub
aad
jno
and
push
rorb
sub
xchg
push
sub
int
ret
or
xor
push
push
dec
sbb
mov
lock
imul
jns
push
bound
add
sar
movl
sub
subb
jge
imul
mov
rcr
fnstcw
pop
insl
xchg
out
mov
das
jo
mov
jg
mov
insl
add
mov
arpl
cmp
pop
dec
int
lds
xor
xlat
cwtl
adc
or
lcall
mov
test
push
mov
sub
in
aad
mov
add
cmp
loope
test
dec
push
je
call
jnp
jnp
add
jmp
jae
mov
mov
pop
inc
lea
sub
inc
xchg
mov
mov
int
dec
xchg
mov
scas
rcr
and
mov
xor
push
mov
push
adc
int
test
lret
fsubl
movsl
jo
sub
cs
scas
dec
jl
adcb
dec
add
fwait
xchg
mov
jno
sub
lcall
adc
jne
adc
xchg
mov
icebp
push
insb
inc
outsb
fs
sbb
and
and
or
add
adc
pop
int
inc
imul
in
push
or
xor
incb
jns
stos
adc
fs
in
inc
push
fwait
mov
popf
push
xor
push
cmpsl
and
xor
ret
hlt
push
stc
std
hlt
leave
mov
or
push
sahf
in
aaa
sub
test
arpl
or
or
sub
xorb
int3
xchg
negl
lods
and
adc
mov
jg
dec
cmp
xor
sahf
sbb
and
in
ds
and
loope
xor
pop
mov
jno
scas
sbb
push
mov
jecxz
push
hlt
and
bound
mov
shlb
inc
popf
popa
sub
sbb
ret
dec
xchg
js
push
push
sub
sub
cmp
mov
test
lret
loopne
ret
sarl
pop
or
outsb
inc
leave
sti
adc
mov
movsl
int
into
mov
leave
pop
mov
inc
fisttps
pop
sbb
push
and
mov
pop
add
fldcw
ds
in
dec
xchg
lret
or
andl
fwait
dec
imul
or
lahf
loopne
and
mov
cmp
dec
dec
inc
push
pop
into
ficompl
xlat
loop
insb
jl
pop
movsb
add
lods
mov
sub
inc
fstpl
push
inc
pop
pop
dec
ljmp
in
and
ss
xchg
out
or
adc
lea
sub
in
int
mov
popa
mov
push
negb
xor
addb
xchg
sti
stos
scas
add
push
mov
xchg
sub
std
or
or
jne
enter
add
inc
add
addr16
and
bound
mov
cs
pop
test
popf
in
call
iret
cmp
dec
and
pop
sbb
add
popf
mov
fnstsw
movsb
adc
push
ret
xlat
inc
jnp
jg
cmp
dec
pop
xor
mov
pop
out
jb
cmp
inc
ret
pop
stc
add
xchg
cmp
mov
in
sahf
sub
dec
xor
sbb
xor
out
pushf
sbb
xor
aaa
popl
cmp
push
fcoms
xor
add
jbe
icebp
rolb
push
inc
pusha
ret
jns
test
xchg
or
jp
mov
loop
cmp
cmpsl
or
jle
mov
sahf
pop
or
adc
ljmp
cmp
out
push
inc
mov
or
es
bnd
out
out
enter
mov
mov
lods
jno
addb
lcall
pop
cmp
pusha
outsb
lods
rolb
insb
sti
dec
xchg
aas
and
or
out
mov
inc
movsl
push
insl
jl
inc
ja
mov
aam
les
pushf
out
imul
je
adc
mov
sub
xor
and
pop
cmp
push
cli
test
fisubrl
mov
or
orl
xor
pop
out
outsl
movsl
call
and
jmp
pop
push
xor
and
add
cvtps2pi
imul
mov
and
aam
dec
sbb
fnsave
jns
xor
add
lcall
dec
lock
ret
mov
into
lods
shl
inc
pop
adc
inc
into
xchg
xor
sbb
or
shl
test
jge
and
test
xchg
add
pop
or
cwtl
movsl
mov
xchg
dec
xchg
loopne
adc
mov
mov
pop
jo
push
push
leave
jp
in
ret
mov
xchg
mov
jg
imul
rcll
add
shlb
jl
pusha
xchg
fs
jnp
clc
lret
mov
popa
fisttpl
add
xchg
rcl
cmp
jle
mov
inc
adc
lock
xor
jbe
sbb
mov
sub
dec
test
xchg
es
mov
mov
mov
mov
movb
mov
in
insl
cmc
sub
dec
mov
lock
icebp
fisubrs
std
dec
aaa
xor
es
pop
dec
jp
jbe
jl
xor
aaa
in
jg
and
gs
sbb
dec
idiv
xchg
pop
or
mov
xchg
jae
in
aaa
inc
dec
push
xchg
push
int3
pop
sbb
push
inc
fdivrl
lea
add
xchg
sbbb
cmp
xor
push
gs
cmpsl
mov
stos
das
sti
daa
jmp
dec
fcmovb
sub
out
sbb
stc
inc
outsb
cmp
ret
test
pop
dec
enter
aam
add
test
jnp
sbb
add
aam
sbb
jp
lock
loopne
sbb
xchg
mov
mov
es
je
mov
pop
and
mov
push
icebp
int
push
dec
push
or
pop
scas
out
sub
inc
ds
cmc
pop
push
lods
mov
nop
push
push
xchg
aaa
es
push
fbstp
mov
fidivl
cmpb
pop
sbb
sahf
mov
test
divb
mov
rorb
hlt
pop
pop
jb
outsl
in
xor
int
jnp
adc
cmc
and
add
and
xchg
out
dec
rcpps
cmpl
fstl
cmp
pop
add
into
mov
push
lret
lds
test
xchg
loopne
aas
mov
cmpsl
dec
das
aad
add
or
test
or
dec
sub
out
aaa
fld
push
mov
add
fdivr
xor
sbbl
mov
pop
sub
bound
scas
jg
pop
xchg
xchg
mov
das
stc
lods
ljmp
dec
xor
stos
gs
xor
out
mov
xor
mov
xchg
or
hlt
mov
sub
or
mov
stc
xor
gs
cmp
dec
adc
outsb
cs
xchg
mov
or
aaa
cmpsb
push
dec
push
lock
pop
sbb
js
in
or
mov
cmp
cwtl
int3
push
insl
ja
cmp
inc
idivb
xchg
mov
je
inc
testb
lods
movsl
arpl
xor
cwtl
hlt
mov
xchg
sbb
addr16
xor
push
xchg
cmc
xor
pop
es
lods
dec
cmp
dec
fdivs
pop
mulps
mov
mov
adc
aam
hlt
pusha
cltd
data16
pop
dec
addb
inc
loop
pop
lock
pusha
xchg
jnp
xchg
loope
test
pop
adc
call
aaa
loop
xchg
push
and
outsl
mov
decl
jae
rcrb
jb
jne
roll
xchg
rclb
or
add
sub
in
pop
addr16
cld
sbb
aad
push
xor
mov
mov
or
mov
xor
fcomi
inc
test
popa
std
jl
lcall
shll
jg
push
ds
inc
inc
ret
inc
inc
aad
xchg
dec
mov
cmpsb
out
xor
cmpsb
rcll
mov
xorb
aad
lds
lahf
xchg
xchg
sbb
mov
pop
mov
or
sbb
sbb
jle
shll
aaa
rorb
add
push
mov
sbb
cs
lods
mov
pop
mov
mov
sub
sub
es
push
jo
arpl
pop
or
push
push
lods
scas
jno
cmpsb
int3
int
cltd
popf
xchg
mov
std
mov
in
lds
cmp
push
pusha
daa
dec
scas
mov
pushf
out
stos
icebp
dec
xor
cmp
inc
lds
sub
ja
add
or
in
xor
shrb
mov
aad
ja
movsb
xor
jae
adc
in
xchg
les
xlat
xchg
dec
and
pop
or
mov
pop
test
cmpsl
imul
ds
mov
ljmp
loopne
xchg
mov
mov
popa
mov
je
lock
cmpsl
out
push
popf
into
test
adc
mov
stos
jbe
pop
shll
outsl
enter
pop
dec
aas
in
insl
fldenv
stc
xchg
loope
push
dec
xchg
jb
es
les
in
cs
ret
mov
dec
aaa
testl
mov
aaa
ja
push
mov
shlw
dec
shlb
sbb
mov
mov
in
movsb
insb
out
sbb
xor
pop
xor
fists
je
mov
mov
dec
jmp
cmpsb
sti
xor
push
mov
ret
or
pushf
push
dec
or
es
xor
ss
mov
mov
cmpsl
es
sub
nop
xor
xor
ja
xchg
push
sub
push
xchg
jl
das
mov
aaa
nop
xor
pop
dec
bound
xchg
nop
sbb
xlat
inc
mov
outsb
xchg
jno
js
fs
xchg
add
jle
add
cmpsl
push
xchg
sbb
addr16
add
jp
sbb
mov
jns
repnz
inc
stc
inc
outsl
pop
pop
jle
pop
cltd
pop
loopne
adc
mov
insb
add
jle
mov
das
sbb
inc
adc
push
aas
dec
xor
cmp
mov
stc
es
and
test
imul
mov
push
push
fisttpl
add
jg
fisubs
out
and
out
fwait
cltd
cli
mov
jno
stos
cltd
dec
and
or
mov
and
inc
test
push
push
mov
ja
and
jno
or
sbb
pusha
pop
je
cmp
sar
pop
shl
mov
in
xor
xor
shlb
fidivrl
xchg
fimuls
or
jbe
das
movsb
test
push
push
and
scas
cmp
mov
cwtl
xor
pop
xor
imul
mov
xor
jge
jge
mov
scas
push
xor
aas
mov
call
push
push
mov
dec
mov
add
jns
dec
addr16
ljmp
add
jno
enter
jbe
stos
xchg
xchg
test
test
and
adc
in
insw
or
and
notl
filds
lock
stos
gs
xor
push
push
andl
movsb
int3
and
fimuls
int3
mov
mov
mov
push
dec
add
addr16
push
xchg
dec
add
hlt
mov
fcoml
and
push
jnp
dec
xchg
in
pop
lret
adc
xor
mov
outsb
xor
insb
jp
jnp
out
jno
xchg
xor
out
lcall
jmp
js
sub
arpl
pop
ds
mov
dec
jecxz
xorb
aas
dec
dec
mov
lods
cmp
leave
adc
cmp
cmpsb
insb
dec
sub
test
ss
mov
fwait
pop
addr16
pop
mov
dec
cmpsl
ret
xchg
out
cmc
inc
xchg
fmuls
cmp
stc
jae
dec
push
repz
insl
mov
sub
fwait
pusha
out
pop
pop
movsl
push
imul
scas
mov
mov
cmpl
sarb
incl
jmp
add
cwtl
popa
add
dec
jmp
push
sub
ss
mov
hlt
lret
and
cld
mov
xchg
scas
dec
xchg
inc
or
fstpt
dec
js
lock
sahf
adc
xor
sbb
dec
aam
hlt
mov
cld
pop
testb
xlat
das
cmp
dec
mov
xor
or
sahf
cmp
jge
outsl
stos
dec
mov
mov
dec
sbb
movsb
inc
sar
arpl
insb
in
or
repz
sarl
cwtl
xchg
pushf
jg
and
mov
dec
pop
adc
fstps
inc
jnp
lods
dec
push
mov
xchg
movsb
mov
jmp
cmp
xor
xor
out
mov
addr16
xchg
enter
cmp
mov
xchg
xlat
dec
xlat
test
jl
dec
fiaddl
dec
xchg
es
mov
loope
popf
push
ljmp
jo
pushf
jmp
add
aam
lods
out
sbb
dec
push
jae
push
fnstenv
outsl
dec
xchg
rolb
pusha
fiadds
xor
rol
jne
adc
pop
mov
outsl
add
hlt
sti
xor
or
mov
in
outsl
xchg
inc
mov
push
mov
lods
insb
les
scas
insl
mov
dec
and
inc
xchg
cmp
in
or
push
cmp
cmp
dec
mov
inc
mov
int3
mov
roll
int3
lock
movsl
xor
pushf
ja
ja
cmpsb
xchg
inc
jle
mov
and
shrb
jmp
xor
stos
filds
adc
std
mov
sbb
mov
mov
add
loope
nop
or
and
rorb
lret
shr
lahf
push
add
int
cmp
insl
icebp
scas
mov
rcll
decl
xchg
push
shrb
mov
cli
lcall
pop
mov
cmp
andl
movsb
pop
adc
in
ret
mov
sbb
or
push
jno
movsl
adc
push
frstpm(287
push
inc
lret
lahf
test
xor
hlt
std
mov
mov
mov
xlat
and
adc
jl
lret
ret
shll
daa
mov
xchg
imul
cmpsb
repnz
lret
dec
cmpsl
xchg
shl
sub
jle
mov
cmp
push
cmp
scas
and
lds
inc
and
in
popa
imul
call
addb
pop
pop
push
mov
test
cmp
and
adc
stos
mov
in
mov
loope
sahf
aas
iret
test
rcrl
inc
insl
test
pop
xor
or
in
aam
into
jl
cld
and
sar
and
add
cmp
imul
lahf
sbb
lds
or
dec
stos
or
popa
mov
xchg
xchg
and
sbb
fbstp
adc
xor
xor
inc
sbb
scas
movsl
repnz
push
adc
pop
cmpsb
popa
or
icebp
fcomps
jle
push
ljmp
and
push
clc
cmpsb
and
cmp
jnp
adc
add
out
sub
je
aam
sbb
pop
sub
out
icebp
mov
mov
mov
loop
es
lods
mov
cltd
push
aaa
test
mov
xchg
insl
adc
incb
imul
sub
push
out
mov
pop
push
in
dec
and
push
sbb
aas
les
sub
nop
daa
lahf
add
cmp
lret
xchg
adc
lods
add
cld
bound
repz
cltd
pop
mov
arpl
or
out
add
and
cmpsl
mov
mov
lcall
jecxz
fists
push
test
sbb
sahf
ds
jg
arpl
arpl
dec
xchg
or
xor
or
aaa
sbb
jle
xor
xchg
push
and
adc
adc
iret
aas
adc
jae
cmpsl
xlat
outsb
push
in
bound
loopne
pop
movsb
cmpsl
mov
dec
cmp
xchg
roll
daa
pop
and
je
xor
and
outsl
inc
rcrl
adc
lahf
pusha
stc
mov
scas
add
dec
adc
pusha
shr
push
xchg
dec
in
inc
insb
cmpsl
cmp
out
jl
inc
xchg
outsb
outsl
into
clc
out
push
adc
jecxz
shrb
xor
leave
movsl
push
lea
les
mov
mov
outsl
sub
nop
cmpsb
adc
or
jae
rol
sarl
pushf
scas
stos
insl
lods
push
data16
jmp
dec
jl
out
sbb
push
in
jae
mov
test
add
jbe
stos
nop
call
iret
out
xchg
ret
out
scas
mov
mov
fmull
or
pushf
inc
hlt
cld
inc
sarb
inc
repnz
stos
fst
add
iret
fisubs
mov
mov
lcall
stos
loopne
loopne
or
push
push
movsl
xchg
push
mov
sub
pop
mov
jmp
ret
adc
xchg
inc
push
jne
xlat
xchg
rolb
call
push
dec
lock
movsb
jns
jno
stc
sub
cld
inc
or
xchg
adc
fidivrl
xor
mov
push
sbb
cmp
rcr
xchg
xchg
insl
dec
mov
icebp
and
fsubl
mov
add
enter
lahf
cs
push
add
pop
jns
in
shrb
pop
jmp
mov
sbb
jb
mov
or
test
faddl
rclb
ja
dec
inc
dec
pop
push
fildll
xlat
xchg
pop
sbb
ss
sahf
pop
in
repnz
add
jecxz
lea
incl
xchg
cmp
push
sti
sbb
adc
daa
daa
loop
inc
xor
icebp
push
jnp
jecxz
lods
leave
sub
jae
mov
mov
cltd
sbb
dec
fcomps
fidivrs
ret
es
lcall
push
scas
xchg
or
adc
sub
pop
fs
frstor
out
mov
mov
insb
inc
stos
mov
or
jge
jbe
jae
pop
loope
dec
stos
outsl
stc
sub
popa
add
sub
mov
jb
lods
push
jnp
gs
xor
and
cld
lahf
mov
xor
popf
add
test
cmpsl
mov
popa
xor
rolb
adc
addr16
cld
jge
scas
outsb
in
jb
shlb
rcll
lods
mov
pop
jle
mov
jmp
add
ljmp
sub
mov
pop
sub
int3
xor
xchg
std
xchg
popf
sbb
fs
sbb
icebp
insb
jb
aad
pop
lret
shll
lock
pusha
add
outsb
pop
fimuls
or
push
add
push
mov
stos
aas
cs
or
mov
mov
insl
pop
mov
adc
and
xchg
push
jo
jl
movaps
push
out
adc
imul
jge
int3
add
jg
fcmovu
dec
sub
fistpl
xor
dec
or
jns
and
addps
leave
cmpsl
jnp
out
cltd
mov
std
int3
xor
enter
clc
std
rcrl
adc
insl
jmp
push
lcall
cmp
lods
notl
pop
cmp
shll
jae
adcb
xchg
incb
mov
mov
and
out
fsubrl
xchg
daa
sub
ret
inc
fwait
dec
daa
jmp
dec
xor
fdivrs
lahf
jb
shlb
add
xchg
shlb
fimull
stos
push
mov
testl
inc
cmpsb
adc
jmp
cmc
xchg
xorl
aam
and
mov
out
lock
fcoms
mov
mull
paddb
sbb
sbb
test
int3
xor
stc
into
pop
jl
push
cmpsb
add
xchg
stos
add
pop
loop
gs
inc
mov
hlt
inc
mov
cld
imul
inc
mov
subb
mov
mov
mov
cmp
inc
ret
or
cmpsb
into
fnstcw
jecxz
rclb
sub
stc
pop
pushf
mov
mov
jo
shll
fstpt
lahf
fcoml
pop
xor
jmp
xchg
mov
push
cmp
pop
repz
dec
or
hlt
test
repnz
inc
cmp
and
fimull
inc
bnd
mov
sub
pop
mov
cmpsl
and
gs
pop
lods
fstpl
pop
xchg
adc
push
mov
stc
add
ja
add
lods
adc
push
fistpl
pop
sbb
pushf
jmp
cmp
xchg
stc
idivl
jb
push
sarl
dec
fldl
cld
xlat
pushf
mov
test
addr16
fldt
mov
xchg
or
mov
lcall
mov
movsb
inc
and
dec
push
lea
mov
xor
cmp
sub
add
or
mov
inc
push
test
pop
data16
jbe
mov
push
rolb
test
dec
rorl
push
sub
push
inc
ret
bound
movl
jmp
xchg
xor
or
rcll
in
test
test
cld
movsb
pop
sbb
sti
push
jle
ret
imul
lock
pop
test
add
xlat
sti
xchg
inc
stos
pop
inc
out
hlt
outsl
pop
mov
in
add
inc
pop
int
push
shll
mov
icebp
jno
sub
imul
add
jno
pop
pop
in
dec
addl
fistpl
inc
and
imul
hlt
mov
cli
mov
stos
pushf
pop
fcoms
ret
lds
sti
addr16
jg
loope
scas
mov
cmc
lgs
roll
stos
and
scas
js
xor
out
in
dec
or
out
clc
andl
imulb
enter
push
push
add
fisubl
push
push
sub
jmp
and
hlt
push
imul
pushf
incb
xchg
cmp
push
xchg
negb
inc
andb
loopne
pushl
jp
cwtl
push
mov
dec
int3
fwait
ds
pop
outsb
pop
cmpsb
sub
inc
jle
xor
scas
push
mov
mov
lret
mov
ds
add
cld
stc
fsubrs
out
into
std
fildl
mov
dec
ds
cmp
cmp
pop
fs
sub
scas
mov
and
jnp
dec
inc
insb
dec
xchg
pusha
stos
and
jle
fwait
add
stc
lcall
sbb
add
xchg
add
lock
dec
fdecstp
xor
mov
fsub
int
cmpb
repnz
dec
scas
push
sbb
xchg
cmc
mov
aas
orb
jmp
mov
into
push
and
shl
leave
ret
loope
outsl
ret
or
mov
add
lds
out
mov
aam
arpl
mov
fiaddl
cmpsl
leave
mov
ret
cmp
movl
ja
xchg
or
enter
sub
call
mov
pop
outsb
out
or
mov
mov
pop
fisttpll
push
add
scas
inc
movsl
fildll
push
xchg
and
sti
jle
ja
adcl
in
sbb
mov
bswap
popa
fcmovnbe
pop
pop
inc
and
mov
xchg
mov
mov
fldcw
mov
inc
mov
out
int
daa
fdivrl
pop
or
or
daa
push
mov
xchg
bound
outsl
mov
xor
into
insl
inc
xchg
loop
sbb
loop
add
cmp
decb
cmp
inc
in
test
mov
xor
mov
cmpsb
jecxz
aad
popa
into
xchg
mov
lock
out
push
test
sub
xchg
lcall
and
call
stos
sahf
xchg
popa
enter
cmpb
mov
pop
movsb
sbb
jo
xchg
aas
dec
ds
or
test
in
and
mov
cmp
fadd
movsl
mov
stos
fsub
hlt
ret
pop
pop
fldt
loopne
jp
sub
out
add
cmp
sub
nop
push
or
int
fists
push
adcb
lcall
mov
loope
push
jns
fildl
clc
or
scas
subl
push
sub
xchg
pop
pusha
int
jl
xchg
loope
aam
mov
pop
mov
sbb
xor
ljmp
sbb
addr16
inc
dec
ret
ja
aaa
int
sti
les
sti
fnsave
clc
jg
rcrb
jne
movsl
adc
imul
sbb
test
sbb
jmp
mov
mov
mov
andl
aaa
enter
or
xchg
mov
pop
or
pusha
imul
or
xchg
frstor
xor
jb
mov
in
adc
cltd
ds
scas
lahf
and
movsl
lcall
fdivrs
rorl
or
jecxz
pop
aam
mov
sbb
adc
add
dec
icebp
int3
sub
jge
addr16
inc
cli
xchg
rcr
pop
mov
add
pop
push
ds
dec
out
rclb
push
jmp
out
pop
cwtl
xor
pushf
aam
inc
call
xchg
push
or
aad
xor
xor
jl
cmp
sbb
cli
jne
arpl
inc
ss
in
jno
ud1
xchg
or
dec
dec
mov
imul
fwait
adc
adc
adc
ds
sub
lods
mov
lcall
fwait
sub
cli
loopne
dec
or
sbb
fldenv
in
je
pop
mov
test
dec
cmp
cld
adc
lods
jl
and
aaa
pop
mov
sub
mov
rcrb
mov
xorl
dec
mov
aam
mov
cmpl
pop
je
aad
arpl
mov
pop
xor
pop
or
sub
outsb
adc
psubq
mov
mov
xor
xor
pushf
cld
loop
nop
pop
loop
sub
aad
ljmp
jl
inc
loopne
xchg
jnp
jns
or
xor
jmp
push
in
xor
shl
sbb
jae
push
in
mov
inc
sbb
cld
lret
push
jge
outsl
outsl
in
leave
dec
jb
stos
mov
xlat
xor
dec
aaa
mov
iret
incl
sahf
dec
xlat
popf
hlt
mov
push
enter
outsl
cltd
mov
jecxz
out
dec
lods
jo
js
push
stos
pop
mov
fisttpl
push
xor
pop
ja
push
and
mov
inc
sahf
fnsave
hlt
dec
insl
dec
cmp
scas
dec
dec
movsl
mov
mov
cli
adc
cmp
sbb
cmp
fbstp
imul
inc
sub
jbe
enter
enter
out
mov
sub
inc
pop
adc
fnstsw
dec
dec
add
lods
mov
das
inc
adc
or
add
mov
shrb
imul
xor
xor
cli
mov
push
divb
mov
push
dec
and
add
lods
or
adc
xor
sub
fsubrs
sub
cmp
das
fwait
or
adc
jae
int3
sub
test
andl
fwait
movsl
cmp
mov
add
jp
pop
sub
loop
pop
lret
cmp
add
mov
jne
cld
push
test
loopne
jnp
shr
inc
ret
cmp
rorb
add
iret
fwait
cmp
in
in
inc
into
pop
clc
sub
xchg
xchg
dec
ret
sub
int3
dec
or
lahf
scas
cmp
and
or
pusha
stos
rcrl
test
cmp
sub
jo
add
sub
sbbb
sub
and
mov
push
stc
jo
lods
fwait
mov
or
cmp
pop
inc
pop
xor
mov
in
jle
lea
loop
or
adc
xchg
fiadds
inc
imul
xchg
cs
push
mov
adc
xorl
fsubs
hlt
and
add
jns
and
sbb
lods
push
xor
out
mov
sub
mov
jecxz
in
push
adc
mov
int3
xor
mov
or
jmp
and
sbb
popa
daa
ljmp
inc
sub
popf
mov
push
xor
xchg
cmp
sbb
push
and
inc
shlb
and
out
stc
stos
gs
lea
ret
mov
or
jecxz
inc
add
push
push
cmp
pop
push
add
ljmp
fdivr
lds
cmp
pop
cmp
dec
xchg
mov
add
jnp
popa
ret
fwait
lods
aaa
mov
pusha
mov
sbb
out
sbb
cltd
movsl
sub
outsb
cmp
dec
mov
push
dec
inc
das
lea
mov
ja
in
cmp
sub
mov
ret
mov
xor
jl
je
and
push
jae
xor
and
iret
mov
cmp
push
rcrl
ja
iret
adc
dec
cli
and
dec
stc
orl
or
mov
call
push
adc
fadd
bound
fcmove
dec
shll
jecxz
add
jne
mov
dec
enter
adc
sbb
add
mov
jl
scas
pop
cmp
outsb
push
aaa
mov
cli
mov
fistpll
xchg
push
ds
sub
stos
es
ja
sarb
out
xchg
fwait
sub
adc
pushw
lods
cmp
repnz
loope
inc
sbb
adc
mov
mov
sbb
xchg
aam
jecxz
mov
inc
lcall
mov
xchg
dec
cmc
shrb
cmpsl
inc
pop
mov
les
sub
subl
pop
jmp
pop
cmp
sahf
int
jg
and
paddd
sub
add
and
addl
sbb
daa
scas
push
insl
cmp
sub
adc
in
test
ds
shl
sahf
dec
data16
cmpb
inc
ja
jne
lods
lret
cmp
pop
imulb
icebp
popf
inc
aad
jge
cmp
add
jle
ss
add
mov
bound
xchg
imul
ret
mov
out
or
or
pushf
leave
jns
lock
in
mov
mov
int
notl
sahf
mov
cmp
jo
aad
jp
xor
add
mov
adc
pop
push
cmp
pop
iret
lret
gs
adc
clc
lret
mov
and
sbb
xchg
sbb
sbb
aad
sub
or
cmovo
mov
lret
push
cmp
cltd
pop
and
imul
xchg
test
lods
out
xlat
faddp
jp
jp
push
or
mov
test
pop
sbb
or
adc
jp
pmuludq
mov
sub
pop
insb
add
aad
lds
movsl
mov
pop
outsl
cli
pop
lds
ljmp
mov
sbb
bound
cmpsl
sbb
dec
inc
xor
cli
pop
dec
iret
lret
ja
jne
or
enter
mov
or
add
add
faddl
mov
dec
fs
dec
sbb
insb
adc
adc
or
in
jmp
clc
xor
mov
cmpsb
data16
in
inc
cmc
cmp
ss
clc
sahf
in
jg
jne
or
sbb
jno
hlt
sub
test
sbb
cmp
js
pop
xor
adcl
inc
cli
cltd
subb
xchg
sbb
mov
je
icebp
shrl
mov
gs
rcll
xchg
dec
xor
loope
push
insb
imulb
push
mov
dec
inc
pushf
mov
push
sub
aaa
adc
jp
dec
jae
movsb
pop
into
ss
loopne
mov
out
jo
daa
scas
jl
pop
int
push
bound
int3
stos
in
out
and
cli
lahf
inc
xchg
xor
adc
jmp
push
negb
adcl
mov
insb
icebp
push
sub
mov
loopne
or
push
movsb
jb
jnp
sub
add
push
xchg
adc
aam
dec
mov
xor
mov
inc
lock
sub
jbe
adc
mov
jbe
xor
insb
push
rdmsr
rcll
inc
int3
jae
and
imul
pusha
or
scas
mov
int3
add
out
cmpsl
cli
es
adc
lods
repnz
gs
adc
out
sahf
mov
mov
popf
js
aas
cmp
add
or
data16
add
cmpl
adc
inc
bound
jmp
fsubl
imul
mov
int3
sub
scas
dec
push
sub
loope
ljmp
xchg
jl
popa
mov
dec
es
sub
dec
xlat
ja
decl
push
pusha
daa
push
push
punpckhbw
xchg
xor
mov
leave
jecxz
or
jnp
stc
dec
jb
or
adc
pop
je
pop
daa
in
sbb
jno
cltd
insl
icebp
repz
mov
pop
sub
imul
xor
imul
xor
ficompl
pop
and
push
lret
dec
jo
cs
push
fsts
test
mov
frstor
test
mov
cmc
push
xchg
fsub
mov
pusha
adc
int3
pop
mov
push
dec
jg
jns
stc
in
in
lock
push
imul
int3
stos
ffreep
adc
jbe
inc
mov
cbtw
scas
mov
pop
xor
xor
mov
xor
stos
fildl
scas
lea
gs
stc
mov
cmp
inc
nop
pop
cmp
mov
pop
add
bound
fdivl
pop
inc
mov
mov
pop
mov
dec
outsl
data16
push
sub
jno
or
gs
xor
cmp
mov
pop
cmpsb
jg
jl
es
mov
pop
lods
cwtl
xor
jnp
pop
bound
les
push
icebp
xchg
xor
test
sbb
cltd
mov
adc
mov
cmpsl
cltd
aaa
inc
rorl
mov
xor
jmp
in
xchg
sub
cmc
push
mov
push
call
push
cmp
sbb
add
aaa
negb
adc
divb
or
xorb
data16
neg
mov
xor
push
pop
icebp
sbb
nop
clc
cmpsb
sahf
mov
or
js
sub
lahf
stc
xchg
push
or
xchg
shll
jb
insl
add
out
xor
cs
in
jmp
jp
pop
and
xchg
mov
orl
push
mov
and
imul
out
in
mov
and
adc
push
icebp
xchg
jmp
sbb
dec
pop
mov
add
lcall
int3
iret
xchg
push
lcall
daa
addr16
aad
test
fwait
jecxz
xchg
sar
xchg
sbb
and
sub
pushl
and
out
mov
sbb
xorb
int3
and
in
add
imul
add
push
add
add
orb
jle
pusha
js
pop
lods
notb
lret
shl
fisttps
dec
lods
int
insl
ja
insl
inc
lds
ret
insb
out
or
push
cmpsb
mov
je
sti
dec
aad
mov
push
mov
pushf
shll
mov
das
lcall
jge
xchg
push
loop
push
repz
cmpb
push
fisttpll
mov
fs
out
or
sub
xor
or
rcrb
mov
jl
pop
xchg
out
jb
mov
leave
shlb
xchg
into
or
sti
jp
push
outsl
les
out
xor
jle
ds
jge
arpl
in
cmp
out
repz
add
ljmp
rcll
movsb
push
push
adc
mov
sub
mov
mov
pop
jbe
mov
dec
pop
sbb
iret
pop
js
add
jle
and
sbb
or
insb
sti
xlat
mov
add
sub
mov
enter
loopne
mov
xor
pop
adc
mov
fstpt
out
adc
or
xchg
adc
lods
cmp
pop
sbb
or
mov
sub
xchg
shll
fstp
ja
mov
mov
fs
test
sahf
test
scas
xchg
adc
and
arpl
add
inc
cmp
lahf
addl
ret
xchg
xor
test
add
js
pop
fstpt
push
sarb
mov
jne
pop
test
ds
sub
fldcw
sbb
adc
popf
dec
jo
cmp
inc
jge
lahf
pop
push
arpl
ja
iret
movsl
mov
into
jmp
mov
inc
mov
out
pop
ljmp
push
jno
or
mov
cmpsb
je
sbb
dec
cltd
sub
sub
jb
aaa
shl
fisttps
ja
mov
fs
or
imul
mov
pop
das
jno
jae
fmull
stos
add
xor
fsubrs
sbb
inc
sbb
testl
sub
push
jmp
lods
mov
mov
cmp
dec
adc
and
sub
sbb
and
cmc
push
rcr
fs
stos
por
jae
mov
sub
push
and
sub
cld
mov
mov
sbb
into
loope
or
sbb
pop
mov
sbb
ds
xchg
mov
cltd
sbb
js
or
push
jae
jo
mov
xchg
add
push
test
mov
shrb
ss
dec
imul
out
xchg
addr16
int3
dec
loop
jns
or
lret
mov
rcrl
dec
pop
xor
sub
xor
mov
adc
ds
pop
in
daa
or
or
add
loopne
test
mov
add
and
pop
ljmp
ljmp
xor
add
pop
adc
pushf
pusha
add
insb
rcrb
adc
in
ret
insb
aam
adc
mov
cltd
cwtl
jmp
xchg
jno
insl
or
mov
das
aas
mov
sbb
shr
jp
mov
arpl
mov
int3
jo
jl
xor
stos
testb
popa
imul
repz
jg
dec
pop
xchg
jl
fidivl
imul
or
in
push
dec
cli
lret
int3
and
mov
test
cmp
fsubrl
divb
shl
loope
stos
xchg
jecxz
int
xchg
push
mov
data16
repnz
jns
mov
xor
aam
mov
aas
outsl
outsl
mov
adc
cmovnp
or
repz
repz
out
daa
loope
loop
loope
mov
in
xchg
dec
decl
push
fiaddl
mov
pusha
xlat
iret
push
andl
xor
loop
mov
pop
es
dec
xchg
fists
jbe
and
push
push
mov
out
repnz
inc
mov
roll
jl
mov
mov
jp
add
cmp
fadds
dec
xchg
push
adc
or
push
rcl
mov
fcoml
fucomi
xchg
mov
dec
jp
nop
test
pop
popf
jns
cmpl
inc
lret
sub
inc
mov
xchg
loope
push
add
cltd
inc
mov
leave
jae
into
lret
inc
js
inc
scas
les
in
fmuls
outsl
adc
or
iret
sti
stos
fcomps
fstpt
stos
adc
ret
xchg
lretw
lret
jmp
xchg
popa
in
push
mov
sub
xor
mov
mov
or
mov
in
enter
cmp
add
into
cmp
fmulp
leave
cmp
and
pop
leave
out
loop
leave
add
jg
mov
imul
mov
jg
lahf
enter
sub
rorl
push
inc
ss
mov
mov
and
lar
insl
inc
xor
fistl
push
xor
dec
cmp
sub
mov
imul
pop
mov
xor
xchg
mov
loope
push
xchg
mov
and
loope
jge
test
mov
outsl
push
push
xchg
inc
pop
in
pop
cmc
daa
loop
fcom
popa
push
or
sbb
push
push
cmp
mov
repz
xor
in
in
fnstenv
aaa
es
les
test
and
mov
xchg
mov
rcrb
shlb
sti
pop
mov
sbb
sub
call
ds
into
jno
add
lds
jb
push
std
push
arpl
sbb
imul
aam
js
cmpsb
rcr
mov
and
and
xchg
adcl
mov
or
inc
pop
mov
inc
xor
bnd
shll
dec
decb
andb
sub
mov
loope
lahf
test
shlb
movsl
hlt
inc
and
mov
lock
push
popa
cs
testb
xor
mov
fsubl
popa
ljmp
xor
leave
ret
add
mov
xchg
stos
xor
not
jo
cltd
dec
int3
lds
mov
inc
xor
cmp
jo
jno
dec
jecxz
sbbb
inc
data16
lahf
sub
lret
and
or
insb
fsubrp
mov
adc
or
rcr
xor
insl
xor
daa
jb
sub
mov
pop
movsb
shlb
xor
movsl
stos
mov
mov
xchg
add
out
pop
adc
push
mov
arpl
sahf
sahf
aad
sub
leave
push
imul
xor
subl
xor
stos
lds
loope
lret
dec
pop
sbb
imul
lods
stc
mov
leave
fwait
sbb
loope
repnz
mov
add
fidivrs
movsb
and
lret
mov
insl
adc
push
fsubrl
in
lock
fs
jp
jmp
adc
shll
adc
stos
movsb
ret
pop
adc
pusha
pop
out
sub
pop
int3
dec
xchg
aam
push
cld
decb
out
dec
mov
in
or
leave
mov
jecxz
rolb
mov
inc
xlat
jecxz
lret
jp
mov
mov
mov
lret
mov
scas
fs
cltd
ds
or
daa
fs
mov
test
xor
mov
fisttpl
out
subl
mov
pop
ja
in
loope
pop
push
mov
les
roll
stos
jge
fnstenv
mov
sbb
inc
fidivrs
dec
les
inc
aas
fidivrs
or
pusha
fnstenv
lea
and
mov
mov
xor
loope
xlat
in
push
mov
outsl
push
lret
inc
and
fldenv
scas
add
and
shlb
test
xor
adc
adc
scas
inc
fcoms
xchg
testb
scas
cli
sahf
jbe
jl
jg
cmp
sahf
mov
push
fwait
ds
ljmp
rolb
pop
add
xor
mov
movsb
fwait
adc
pop
ljmp
ds
inc
jbe
xchg
test
rcrl
cli
mov
jns
adc
test
rcrl
cmp
or
mov
icebp
loope
sbb
lea
sub
mov
cmp
and
add
in
adc
dec
or
iret
pop
pop
jb
rorl
and
mov
inc
jno
pop
fcmove
pop
shrl
dec
or
jl
pop
lret
add
sbb
daa
ljmp
adcb
adc
mov
shrb
js
cmp
lods
ret
cmc
xchg
jb
push
xchg
mov
shlb
aaa
scas
dec
das
or
jnp
testl
das
cli
je
mov
sbb
jecxz
into
into
xor
xchg
add
cmpsl
fs
gs
sub
pop
dec
mov
xlat
jne
jns
test
iret
push
ret
jp
clc
les
mov
mov
adc
lock
inc
into
out
shlb
out
push
xchg
movsb
sub
inc
sub
pusha
ret
sub
mov
xchg
xchg
lods
dec
movsb
xchg
std
inc
mov
mov
ljmp
seto
lcall
push
and
push
mov
jp
arpl
xor
push
push
das
test
push
inc
cmpsb
inc
ret
cli
push
dec
cmp
mov
xchg
sub
jmp
xlat
je
in
mov
movsb
aad
fnsave
je
imul
pusha
popa
adc
outsl
in
rcr
aam
adc
xor
inc
out
dec
enter
xchg
mov
outsb
int
mov
sbb
and
jle
push
push
or
enter
lock
les
ret
xchg
push
ret
popl
jg
jne
sbb
pop
xor
stc
mov
int
mov
mov
or
pop
mov
mov
jle
pop
mov
and
jl
xchg
jecxz
movsb
movb
dec
or
push
or
sahf
mov
cmp
xlat
insb
adc
inc
aam
mov
sub
cmpl
aas
imul
adc
shlb
scas
nop
mov
js
aas
xor
cli
jle
fiadds
in
jmp
std
ds
inc
insl
inc
and
inc
mov
out
shll
push
rcrl
sub
outsb
rorb
test
mov
push
popf
mov
fstpl
imul
in
adc
in
cwtl
rcll
adc
adc
fs
inc
cltd
inc
jno
lret
in
or
jo
aas
mov
in
mov
out
push
in
scas
mov
repz
jo
in
push
add
popf
cli
fisubs
jnp
jge
and
imul
int3
cltd
int
push
add
xlat
aad
dec
ja
ficoml
in
and
jmp
xchg
cmp
mov
jg
dec
mov
insb
jmp
push
cmc
mov
andl
fs
pop
push
jae
pop
test
or
cwtl
js
adc
rcr
jno
jge
scas
adc
pop
sub
xchg
imul
clc
inc
adc
aam
adc
mov
sbb
jbe
lea
xchg
dec
push
arpl
cmp
fwait
push
jge
push
lds
cmp
mov
call
data16
push
daa
cmpsb
mov
jmp
lds
clc
cmp
aas
in
push
das
jecxz
and
fwait
xor
ficomps
dec
imulb
push
cmpsl
adc
ror
pop
sbb
mov
scas
push
shlb
jecxz
sti
push
outsb
out
inc
push
jno
rcr
sub
adc
pop
lock
cmc
cld
inc
inc
pop
cwtl
outsl
push
jg
dec
cmpsl
xchg
xchg
fwait
lods
mov
dec
pop
sahf
sub
sbb
cmc
push
mov
jnp
jmp
cmp
sarb
rorl
inc
inc
arpl
cld
jo
jmp
in
int
inc
push
inc
xor
mov
pop
sahf
inc
xchg
xchg
cmpb
pop
bound
lods
mov
fimull
mov
pop
aad
cmpsb
pop
hlt
sbb
push
aad
imul
jbe
fisubrs
shll
notl
adc
pop
scas
and
inc
pop
sbb
mov
inc
push
xchg
hlt
xchg
rep
inc
call
mov
xor
das
mov
mov
repz
push
dec
add
sbb
ja
or
xchg
outsb
xchg
pop
jne
xor
rcrb
add
jg
push
in
out
adc
jns
xor
add
cmpsb
gs
divb
adc
jl
sbb
xchg
and
xchg
popf
xor
pop
sbb
insl
sbb
xlat
and
mov
bound
dec
adc
cmp
mov
fbstp
add
inc
ret
imul
cltd
cwtl
and
out
pop
lret
push
cwtl
and
mov
mov
mov
pop
xchg
dec
bound
and
add
inc
enter
xchg
jge
stc
jl
popf
dec
cmpsl
sti
in
xchg
lahf
and
daa
clc
and
dec
sahf
dec
addr16
mov
adc
sti
xor
mov
dec
xor
mov
fs
rorb
or
jecxz
stc
shrb
sbbb
test
into
iret
xchg
xor
dec
xlat
mov
imul
clc
pop
sub
pop
scas
jmp
sub
pop
aam
hlt
push
je
jb
jge
mov
mov
in
arpl
les
and
mov
mov
stos
imul
sbb
adc
adc
ret
aaa
dec
mov
cltd
scas
subb
jnp
jge
cmp
jle
push
jae
lahf
test
daa
push
lret
or
aad
dec
mov
les
int3
jle
clc
ret
loop
mov
cmp
xlat
fs
jg
mov
push
mov
negl
dec
data16
dec
fwait
mov
js
scas
nop
xor
les
fldt
scas
aam
lds
sbb
loopne
push
in
rolb
aas
iret
push
xor
lcall
loopne
cmp
pop
enter
outsb
lds
in
add
mov
or
mov
gs
xor
rcr
arpl
mov
cmpsb
jae
popf
idiv
xchg
clc
or
ret
js
jnp
jle
sti
int
je
test
lods
cld
fucomi
xchg
clc
je
imul
xchg
data16
daa
mov
cmp
jl
jne
cld
and
lret
dec
mov
addl
nop
scas
sbb
push
ret
push
push
ljmp
dec
add
push
or
add
push
sub
dec
sbb
xor
pop
sbb
hlt
mov
fucomi
jbe
ja
inc
add
pop
and
mov
cwtl
xor
pop
add
add
movsb
cli
xor
icebp
pusha
repnz
xor
scas
xor
cmp
ret
je
adc
mov
and
daa
outsl
inc
scas
pop
aam
popa
dec
jmp
xchg
push
jno
test
aam
adc
ljmp
loop
mov
hlt
sub
inc
or
stos
jmp
repnz
sub
push
add
jmp
lahf
xor
push
lods
imul
mov
cmpsl
xlat
aam
inc
je
andb
xor
divl
loop
popf
out
mov
shl
lds
jae
sarl
mov
vrsqrtss
and
pop
dec
xor
stos
outsb
lods
xchg
sub
xchg
in
ja
sbb
mov
mov
aad
int
inc
xchg
cmp
push
out
lock
jle
loop
dec
imul
xlat
xchg
pop
xchg
lcall
push
sarb
lods
xchg
sbb
xlat
scas
push
in
cs
jecxz
nop
popa
loopne
outsb
mov
push
out
sbb
inc
and
jl
inc
fdivrl
add
fiaddl
push
sbb
inc
cli
jno
and
ret
cmpsb
jle,pn
rcll
jnp
push
mov
xlat
adc
in
sahf
jg
adc
in
cmp
or
inc
sbb
mov
bound
mov
adc
leave
mov
cltd
jmp
xchg
sarb
inc
popa
rcll
adc
in
fnsave
push
test
inc
jle
add
insb
mov
cmpsl
lcall
out
adc
insl
nop
popf
lds
dec
test
mov
mov
leave
leave
xor
jecxz
jmp
mov
rcll
call
inc
push
mov
mov
sub
jecxz
dec
mov
xor
sub
push
mov
aad
mov
subb
fwait
outsl
cli
insl
jmp
push
cmp
lea
adc
in
in
adc
xor
rcrl
sub
mov
bound
xlat
test
ss
mov
sarb
add
outsl
hlt
pushf
sarl
bound
adc
or
adc
std
rorl
test
cmpsb
loop
rorl
cld
decb
xchg
cmp
dec
cmp
xlat
sub
push
xor
sbbb
dec
mov
xchg
mov
ds
and
pop
cld
loop
cmp
pusha
cli
ljmp
jnp
mov
bound
int3
xorl
roll
rcr
dec
xor
adc
inc
dec
imull
and
lea
sub
pop
lahf
mov
push
mov
sub
cld
jge
fcomip
cmp
push
fwait
jp
aad
cmp
rorl
jbe
shll
ficoms
inc
popa
scas
pop
dec
faddl
jecxz
xor
jg
leave
arpl
aad
pop
xor
icebp
mov
inc
fists
in
out
sbb
lock
cli
push
and
mov
sarb
adc
pusha
push
cmp
aaa
push
mov
fisubrl
or
das
sbb
fwait
xchg
scas
rcrl
das
inc
cld
sbb
add
dec
bound
out
jo
out
xor
xchg
xor
mov
fwait
aam
and
sub
mov
repnz
pop
mov
test
iret
jbe
testb
ret
mov
jbe
icebp
add
lea
decl
sbb
js
les
scas
ljmp
pop
mov
das
cmp
test
pop
gs
movsb
sbb
ret
in
lods
or
inc
testl
aas
pop
scas
sub
cltd
je
fidivrl
movsl
es
ret
out
pop
cltd
sub
lret
xchg
sub
push
xor
add
mov
loop
imul
call
lret
aaa
haddpd
out
fs
repz
mov
rorl
test
shlb
iret
and
pop
push
or
mov
pop
push
nop
and
mov
push
pop
or
out
js
or
xchg
mov
das
add
mov
dec
xor
sbb
add
mov
xor
push
loope
dec
pushf
jge
sahf
insl
pop
cwtl
sbb
divl
mov
cmp
push
ja
mov
cmp
cmp
daa
xchg
and
and
xor
mov
insb
dec
xor
jnp
scas
lret
enter
xor
pop
sahf
dec
sbb
mov
icebp
add
movsb
cmp
arpl
cld
inc
jmp
scas
sbb
stos
popa
and
jno
cmp
or
lret
jnp
aaa
jb
and
push
clc
sub
lock
test
mov
js
add
testb
mov
pop
dec
imulb
dec
lcall
lret
cmp
mulb
push
xor
mov
pushf
dec
xchg
jo
cs
push
sub
fwait
aad
add
leave
jg
sub
cwtl
cs
into
adc
mov
mov
mov
xchg
add
ja
pop
adc
push
xor
jno
int
addr16
adc
loop
sub
fadd
nop
in
das
loope
mov
dec
push
and
es
jne
jae
cwtl
fs
and
jge
bound
sub
nop
xor
mov
aam
cmp
call
pop
insl
test
jne
imul
mov
xlat
lods
shl
mov
inc
xchg
sbb
jle
xchg
cmp
pop
xor
adc
test
orl
into
in
aad
pusha
mov
shll
inc
pop
stos
sub
mov
insl
out
cmp
mov
insl
mov
pop
mov
xor
add
gs
sbb
jne
dec
roll
js
shl
jl
movsb
sbb
test
loopne
xor
insl
mov
movsb
scas
rcll
push
ret
xchg
out
fwait
sub
movsb
xchg
mov
orb
dec
add
test
scas
jle
cld
push
push
cwtl
scas
movaps
mov
mov
insl
adc
mov
inc
jl
enter
cmpsb
lods
mov
mov
imul
icebp
sub
sbb
dec
ja
outsb
fdivr
or
mov
push
outsl
jbe
adc
outsb
mov
push
clc
inc
jl
stos
ret
mov
pop
test
scas
hlt
xchg
mov
test
cmp
nop
push
xchg
sub
sub
icebp
aas
pop
cli
cmp
lret
aad
shl
mov
push
jb
sub
mov
ret
shrb
movsb
sti
outsb
out
sub
dec
test
into
and
cmp
xor
icebp
xchg
int
sbb
and
lret
jno
jp
mov
int
call
in
inc
adcl
mov
lcall
shlb
mov
call
les
inc
mov
adc
int3
mov
jae
mov
sbb
loop
sbb
sahf
gs
jbe
dec
outsb
stos
and
outsl
mov
cltd
jbe
push
and
ret
cmp
jp
sti
mov
clc
push
sbb
das
add
mov
ja
inc
sub
insl
ret
aas
mov
mov
pop
stos
insl
pop
dec
lods
jns
lock
js
and
xor
mov
sub
rcrb
imul
fisubl
sub
add
mov
jg
xor
lds
lret
push
cs
or
add
data16
js
dec
cmp
sub
dec
push
ljmp
imul
out
sbb
mov
jmp
or
insl
inc
adcb
adc
xchg
xchg
push
pop
sbb
and
test
das
lock
xor
fldenv
adc
mov
xchg
inc
sbb
push
pop
iret
pop
movl
mov
and
mov
pop
loope
xchg
hlt
jno
aad
mov
jo
push
mov
push
inc
fsubrp
sarl
mov
and
mov
sub
mov
popf
xorb
div
mov
inc
sub
int3
jne
jb
xchg
mov
adc
jmp
cltd
and
xor
mov
sub
in
xchg
mov
stos
and
xor
jbe
js
lret
dec
cwtl
pusha
xchg
cmp
les
inc
pop
cmpsl
clc
rcrl
sbb
fwait
lret
mov
fdivr
or
mov
sbb
sbb
pop
jb
mov
movsb
mov
sbb
push
cltd
loop
mov
pushl
daa
mov
loop
or
test
jp
fisubrs
lahf
cmp
sbbb
inc
ret
sbb
mov
dec
cmp
sti
push
jne
aad
test
pop
mov
or
mov
sbb
gs
jno
sbb
mov
mov
mov
xor
add
pop
sbb
stos
divb
addr16
cwtl
xchg
mov
dec
fadds
pop
dec
cltd
inc
and
fcompl
cmp
push
push
and
mov
fidivrl
fwait
scas
stos
cmp
push
sub
ret
loopne
in
cmc
cld
dec
xor
cmp
xchg
cmp
and
test
dec
jae
mov
mov
data16
mov
xor
sub
stc
and
mov
inc
std
push
insb
adcb
mov
mov
leave
inc
loopne
push
sbb
or
add
mov
aad
xchg
pop
sub
leave
fucomi
jnp
add
pop
insb
das
add
mov
adc
dec
sub
cmp
mov
cld
xchg
loop
mov
sbb
movl
pop
adc
fsubl
inc
fldcw
fwait
sbb
gs
mov
add
cmp
fstpl
int
cmp
pop
enter
test
repnz
shlb
jb
sahf
rcll
out
stc
in
loope
out
pop
stos
jle
ljmp
fcompl
imull
stc
loope
jp
rclb
sarl
cmp
xchg
lock
and
loopne
push
cmp
pop
filds
js
into
ret
push
into
enter
shrl
ret
and
fistpl
rcrb
roll
fnstenv
add
clc
cmp
and
xchg
je
rolb
and
mov
les
cmpsl
pop
int
mov
add
pop
or
into
int
or
and
repz
cmpsb
imul
mov
test
pop
inc
adc
dec
mov
sbb
jmp
pusha
push
mov
mov
jge
cmp
pop
test
add
push
pushf
inc
mov
inc
jp
lret
lods
roll
std
jle
adc
ss
inc
cmp
daa
and
cmp
add
and
jae
cld
inc
inc
scas
rorl
ja
dec
mov
lret
repnz
lret
mov
enter
imul
repnz
inc
movsb
mov
in
sub
rcl
jnp
mov
sarb
pop
pop
and
push
ficompl
mov
inc
into
pop
in
push
shl
jmp
cmp
cmp
enter
arpl
xor
mov
sub
push
out
addr16
orb
es
cli
popa
out
push
outsb
ficoms
negl
popl
gs
loope
and
add
inc
outsb
jno
add
cmpsb
sub
jb
test
fsub
dec
pop
pushf
data16
mov
mov
dec
pop
notb
loopne
lds
aas
out
mov
sbb
mov
mov
push
incb
jns
hlt
sbb
scas
xlat
movsl
jg
movsb
sub
lahf
andl
mov
sbb
lret
jmp
pop
jmp
xabort
xor
pop
insl
jae
pushf
add
inc
and
scas
push
xorl
xchg
lcall
mov
pusha
not
sar
mov
mov
repz
fcomps
imul
mov
int3
test
ss
push
cmp
mov
and
lock
das
or
outsl
shlb
aaa
hlt
adc
inc
decl
push
adc
ret
mov
and
sbb
pop
mov
mov
scas
scas
jle
inc
aaa
adc
mov
aaa
out
push
push
out
mov
xor
daa
cmpsb
mov
cli
loop
insb
mov
push
imul
data16
mov
addr16
movsl
jmp
adc
cmc
imul
xchg
shll
lods
incl
jmp
mov
add
loope
push
mov
jne
into
jnp
dec
add
stos
xchg
jge
pop
repnz
ja
aad
push
and
adc
adc
mov
jl
jp
dec
divl
lcall
lret
jp
fnstcw
pop
adc
insb
ss
or
jecxz
sarb
jo
xchg
mov
xchg
jne
jb
pop
icebp
and
or
mov
fdivrp
jns
cmp
jl
mov
mov
push
xchg
or
lds
mov
jnp
inc
adc
or
inc
push
popf
iret
cs
mov
hlt
insl
fdivl
push
mov
mov
iret
fisubs
push
pop
mov
jmp
js
and
cli
or
movsl
add
movsb
lods
pusha
mov
ljmp
push
test
cmc
adc
fucom
sbb
xlat
pop
cltd
mov
push
dec
lock
jbe
sbb
xchg
mov
inc
out
cmp
cmpl
out
fstl
inc
aam
loop
nop
xchg
std
mov
out
ja
pop
add
sbb
movsl
into
sub
mov
inc
xchg
call
aas
jae
lret
js
dec
into
cmc
sub
inc
into
pop
or
lock
out
stos
inc
inc
inc
out
mov
push
mov
lods
icebp
test
adc
int3
pop
aas
lock
pop
subl
lahf
imul
ficompl
lods
insb
pop
enter
js
loope
cmp
jp
xor
inc
imulb
ds
les
dec
push
cmp
mov
push
sbb
in
jge
cmp
out
push
xchg
adc
inc
jp
cs
dec
push
mov
movsb
jno
dec
aaa
jb
jle
call
ljmp
inc
lods
pop
loope
into
js
xor
outsl
popa
loope
xchg
bound
pusha
movsl
lea
xchg
jno
add
mov
outsb
dec
adc
adc
es
pushl
push
xor
or
push
push
xor
jge
xor
aam
jne
xor
or
icebp
ds
into
shl
mov
pop
push
sbb
sub
divb
frstor
fldt
fs
int3
fiadds
mov
mov
and
pop
nop
insl
adc
adc
nop
cmpl
jmp
pop
jecxz
popf
jl
nop
push
and
add
fisubrs
mov
pop
xor
xor
adc
gs
shl
aam
aam
xchg
icebp
dec
mov
enter
mov
xor
mov
movsb
push
mov
dec
test
andl
add
sbb
insb
aad
mov
test
push
xor
incl
out
push
pop
lahf
mov
bound
inc
mov
pop
mov
imull
jl
xlat
xchg
or
and
jmp
cmpsb
inc
pop
icebp
ja
sub
shl
arpl
mov
mov
mov
dec
and
jle
cld
xor
ficompl
mov
ret
push
stos
imul
mov
mov
xchg
pop
mov
cmpsl
insb
push
sahf
es
dec
enter
mov
dec
pop
enter
cmc
divl
enter
clc
ffree
cs
jbe
out
clc
jge
les
shr
and
mov
or
test
pop
cmc
sub
repz
aam
xchg
imul
mov
sarl
aad
add
xor
add
and
mov
sti
adcl
push
dec
push
mov
mov
mov
push
pop
xor
scas
inc
sbb
sub
std
imul
aam
out
ret
inc
shlb
jno
jg
fwait
or
pop
jp
lods
inc
pop
add
test
xchg
jg
mov
cmpb
jg
call
push
dec
fwait
das
repnz
mov
pop
fs
loop
xchg
test
enter
pop
pushf
push
rcll
or
inc
jecxz
xorl
jnp
mov
stos
stos
lret
push
loope
push
fcompl
cmpsb
jp
cmpl
jl
and
dec
pop
mov
ss
out
leave
adc
rolb
popa
jl
push
jae
adc
jmp
pop
push
dec
pop
daa
jb
filds
lea
fwait
sarb
fnsave
test
arpl
sbb
sahf
cltd
mov
mov
in
jnp
xchg
xchg
sbb
xchg
int3
dec
jno
cmpsb
je
dec
repz
test
mov
mov
push
push
add
mov
push
idivl
shlb
and
pop
adc
mov
cli
sti
call
sub
sbb
pop
cs
add
adc
lcall
and
sbb
xchg
mov
fwait
in
stc
aam
mov
sti
enter
sub
and
mov
jns
mov
out
xchg
inc
cmpsb
mov
mov
rolb
add
pop
pop
lea
xchg
lods
test
lods
dec
imul
insb
sub
fdivrl
gs
xor
pop
mov
dec
push
mov
cmpsl
xchg
inc
das
sub
xor
or
xor
push
test
push
pop
inc
inc
xor
and
iret
sub
cmp
fmul
bound
mov
cmpsl
cmpsl
mov
and
push
repnz
push
ret
mov
outsl
bound
xor
xchg
push
rcl
fisttpl
adc
cltd
jns
adc
out
fwait
les
notb
ja
or
jns
cmc
sbb
xor
sarl
cwtl
in
pop
adc
seto
arpl
pushl
inc
xchg
stos
mov
mov
jecxz
xchg
add
jne
cwtl
ja
out
cmp
lret
inc
popf
imul
mov
add
in
xchg
mov
pushw
arpl
adc
out
ret
fwait
xlat
test
pop
adc
xchg
loope
ret
nop
adc
inc
jbe
mov
jmp
ror
fisubrs
or
mov
ljmp
add
and
idivl
fnstenv
pusha
sub
fnsave
mov
mov
add
inc
jne
xchg
lret
stc
ljmp
xchg
aad
pushl
pop
lock
inc
cmp
xor
je
pop
inc
xlat
jo
lods
leave
cmpsl
cmp
pop
push
hlt
out
sub
sub
push
or
adc
jo
dec
add
aad
cld
sub
stos
sub
xchg
in
mov
movsb
mov
lock
xchg
out
sub
fwait
cltd
call
inc
push
sbb
sub
leave
xor
xor
mov
push
pop
xchg
mov
lea
lret
sub
aas
in
aaa
adc
stos
pop
std
enter
testb
jecxz
sub
clc
xor
lods
xchg
dec
add
pop
pop
cmp
mov
sub
jnp
pop
pop
shr
mov
imul
mov
out
jp
test
clc
adc
jge
aad
xor
das
xchg
imul
xlat
mov
mov
xor
scas
clc
shll
adc
cmp
popa
in
push
mov
shlb
or
vminsd
xor
sbb
stos
and
dec
test
push
cmp
mov
xchg
sarb
cwtl
add
jo
stos
in
repz
loope
scas
sahf
mov
jb
lcall
jo
jmp
imul
movsb
icebp
mov
and
rorb
rorb
mov
aad
jg
es
and
int3
and
cmc
incb
mov
movsl
adc
cmp
pop
mov
xchg
push
int
inc
inc
dec
lock
jg
sbb
loop
scas
add
sti
es
insl
mov
cmp
push
out
sub
adc
call
jg
lcall
mov
push
xor
lock
sub
jno
packsswb
pop
subl
lds
mov
jnp
insl
fdivs
jle
lock
mov
repnz
and
jne
fcmovb
loopne
outsb
gs
jnp
cltd
cmp
sub
and
loope
mov
movsb
dec
aas
push
popa
out
mov
sbb
jg
mov
int
sub
pop
jae
push
sbb
cmp
push
ret
notl
jno
adc
mov
loop
rorb
jmp
dec
mov
cmp
int
cmp
jns
add
rolb
cltd
jns
sub
xorl
rorb
mov
popa
test
mov
movsl
inc
ficompl
jbe
ss
rol
out
push
dec
sbb
lcall
ss
mov
lea
subb
test
xor
lret
imull
test
sub
mov
idivl
stos
lea
rol
push
push
or
push
xchg
jp
push
add
pop
push
push
cmp
repz
mov
xor
negl
cmp
dec
std
jo
push
mov
mov
push
aaa
notl
jbe
adc
add
pop
popa
fcomp
imulb
fdivrl
repz
pop
push
add
mov
scas
cltd
push
add
imul
lea
adc
iret
pop
in
push
sahf
cmp
into
mov
xorb
pushf
test
cs
frndint
lods
add
out
and
pop
add
lret
jmp
cwtl
fwait
pop
ljmp
mov
daa
mov
xor
or
pop
push
in
iret
add
aas
dec
hlt
int
jb
ljmp
adc
outsb
in
xor
push
inc
aad
mov
add
imul
jmp
in
out
cmp
aam
jp
sbb
jmp
xlat
jns
pop
sub
mov
bound
aad
in
push
outsl
mov
aad
ss
push
push
mov
pop
cli
cmpsb
dec
aad
dec
or
mov
pop
add
xor
aam
popa
xor
and
fstpt
in
dec
hlt
sub
xor
test
fdivl
mov
xchg
icebp
jl
jecxz
or
push
stc
sarl
nop
ds
ficomps
mov
dec
pop
push
ficompl
lods
sub
loop
xchg
pop
push
mov
sarb
mov
pop
rclb
scas
dec
arpl
adc
int
and
or
test
sub
shlb
stos
dec
xorps
mov
inc
aaa
ret
adc
lret
int
add
scas
rcrl
pop
mov
imul
mov
sbb
mov
cli
loopne
les
enter
push
test
mov
jp
mov
sar
jle
fildl
jg
pop
pop
jns
lods
and
mov
das
rolb
ds
into
cmp
cwtl
sbb
out
stos
test
idiv
adc
icebp
add
lods
jbe
xchg
mov
scas
mov
jae
or
or
clc
mov
mov
pop
mov
mov
push
mulb
sahf
pusha
pop
aas
ljmp
lock
dec
sub
jmp
iret
repz
cmp
lea
jecxz
test
sub
leave
mov
jecxz
fs
lods
dec
sub
mov
loope
aaa
jle
hlt
fimull
cmpsl
cmp
mov
cmp
int3
scas
mov
pop
and
call
leave
cmpsl
shrl
inc
insl
or
pop
or
cli
xchg
mov
arpl
iret
call
push
repz
mov
push
fidivs
in
mov
ss
es
and
pop
fbstp
call
cmc
pop
pop
stos
test
mov
mov
arpl
cmp
fwait
dec
cmc
repz
mov
dec
dec
or
mov
mov
cmp
sub
or
test
bound
jl
das
mov
mov
xor
movsb
and
xlat
sti
fsub
aas
outsl
xlat
int3
adc
pop
adc
push
sub
mov
test
jne
cmp
pop
jg
fidivrl
pop
leave
fcmovnu
repnz
movsl
in
mov
inc
inc
fwait
popa
pop
imul
lds
dec
repz
jecxz
gs
aaa
xchg
jg
roll
mov
cli
stos
mov
mov
adc
jecxz
data16
movsl
int
leave
xchg
xchg
sarb
xchg
push
jl
fcompl
xchg
inc
xor
lds
mov
sub
xor
fldt
lcall
loop
add
or
pushw
add
shll
push
movsb
mov
cld
jo
pusha
pop
inc
fiaddl
stos
push
mov
loope
int3
sbb
mov
jle
ljmp
inc
mov
or
movsl
push
inc
cmpsl
sti
and
iret
ret
xchg
incb
std
imul
cmp
lods
mov
pop
test
cmp
mov
popf
push
mov
sahf
sub
lahf
sbb
inc
xor
pop
push
faddp
or
insb
jo
sub
jo
fcomps
jp
and
xchg
je
arpl
scas
sbb
jno
cmp
mov
push
fcompl
add
add
arpl
mov
hlt
nop
sti
and
dec
xor
jge
ss
jnp
lods
sub
jo
sub
int3
std
mov
das
jp
xchg
rcrl
aam
out
outsb
xor
push
jmp
mov
mov
jle
arpl
nop
sub
or
insb
sub
pop
sub
push
outsl
xchg
sti
sub
jno
mov
adc
out
shl
icebp
ret
cmp
mov
mov
inc
test
cwtl
ss
sbb
jb
fbstp
mov
and
lock
cwtl
in
dec
loopne
sbb
mov
addb
or
or
inc
add
mov
push
push
iret
lods
cs
stc
sbb
mov
cmp
add
es
jle
fcmovne
cmp
jns
mov
sbb
mov
xorb
notl
popa
in
sbb
inc
add
mov
stos
inc
and
loope
dec
xchg
pop
or
sbb
icebp
jnp
pop
mov
out
test
nop
xchg
aam
cmp
push
xlat
sbb
jp
into
loop
shr
mov
pusha
inc
loop
mov
int
fists
cmp
inc
mov
or
lds
dec
repnz
push
test
addr16
xchg
iret
sub
stc
sti
push
stos
pop
adc
call
bound
ljmp
lods
pusha
dec
cmp
cmp
ret
fidivs
out
push
xchg
mov
inc
jle
or
pop
mov
add
mov
rolb
and
scas
cmpsl
add
mov
clc
inc
aas
movsb
cmpb
cmc
insl
and
dec
or
lods
imul
cmp
xor
or
mov
cmp
loopne
insl
pop
out
mov
mov
inc
cli
or
fmull
sub
push
push
cs
jnp
xor
cld
rcrl
mov
aaa
decl
leave
or
jmp
adc
and
enter
imul
addr16
stos
mov
push
ret
jmp
xor
jne
stos
push
xor
sbb
sbb
mov
shll
scas
mov
mov
pop
fsubr
dec
sub
adc
jno
jae
loop
mov
aam
stos
fdiv
aas
lods
mov
mov
pop
sub
mov
ljmp
mov
std
sub
inc
mov
subb
add
adc
xor
mov
jmp
addl
dec
xor
jbe
jge
ret
mov
jmp
in
test
push
call
sbb
pop
push
sbb
enter
mov
stos
jno
loop
push
jo
push
sub
xor
push
jecxz
inc
aaa
xchg
scas
stos
adc
pop
stos
pop
jle
enter
fdivrl
push
jae
mov
clc
fisttpll
xchg
dec
cmpsl
outsb
test
test
into
dec
je
repnz
jmp
rcrl
fstps
xor
and
jecxz
dec
xchg
cli
adc
jo
enter
mov
out
jmp
sub
fsub
dec
in
mov
or
nop
je
inc
dec
arpl
movsl
out
nop
addr16
popf
rolb
inc
pop
outsb
xchg
pop
sbb
mov
adc
inc
je
lods
mov
pop
sahf
mov
fiaddl
jbe
sar
xor
in
inc
inc
xchg
jbe
shr
into
int
aad
insl
lret
in
lods
xor
adcl
add
or
adc
inc
pop
stos
lret
insb
lcall
and
fbstp
popf
xchg
gs
sbb
out
insl
cmpsl
test
adc
shlb
mov
aas
push
ret
mov
and
cmp
cmp
daa
pushf
in
imulb
mov
rcl
mov
fwait
pop
iret
pusha
dec
inc
addb
es
aaa
pop
mov
sahf
loop
jmp
je
mov
sbb
push
mov
or
fldcw
aam
add
call
mov
xor
mov
rorb
rorb
sub
insl
out
ror
cmc
inc
mov
lret
and
lds
mov
lcall
mov
jae
sub
mov
lods
sarb
xchg
insb
mov
in
adc
push
jb
xchg
sbb
insb
mov
das
cmp
filds
pop
add
fdivrs
lcall
sbb
outsl
jecxz
mov
mov
jo
push
fldenv
pop
mov
enter
repnz
or
push
ret
dec
inc
mov
fcomps
aaa
cli
jne
pop
out
dec
leave
and
and
outsl
scas
lock
rorb
inc
push
call
xlat
and
adc
pop
mov
add
jb
sbb
loope
xchg
sti
jae
mov
pop
mov
xor
mov
jle
push
jae
adc
adc
mov
mov
je
stos
pushf
das
mov
stc
cmc
inc
test
xor
push
leave
mov
push
mov
lcall
mov
mov
mov
in
mov
jle
push
xor
xchg
test
cltd
sbb
or
pop
inc
out
xchg
mov
jmp
nop
add
aad
dec
pop
and
xlat
add
stos
test
cmp
shlb
gs
icebp
enter
add
mov
cwtl
icebp
int3
or
sahf
mov
aas
fildll
inc
xorl
xor
in
sub
rep
xchg
cmpsl
mov
mov
xor
and
std
pop
and
mov
sbb
imul
out
pmullw
mov
andb
pop
fwait
fwait
pop
or
outsb
and
addr16
out
sub
and
mov
repnz
dec
lock
loopne
mov
rclb
das
pop
test
mov
xor
xchg
inc
out
fidivrl
xor
js
cmp
sub
jmp
ds
lret
push
pop
sub
bound
aam
clc
data16
lods
mov
add
into
repnz
out
repz
lods
inc
add
mov
sti
jns
add
fxch
xchg
sti
cli
cwtl
je
jae
inc
sub
lods
mov
es
mov
repz
adc
sarl
daa
adc
adc
push
push
jmp
in
cwtl
jb
and
xor
idivb
mov
das
imul
outsl
dec
inc
arpl
mov
in
add
stos
cmp
cld
add
dec
pop
fbstp
add
xchg
jae
push
or
fsubrs
sub
inc
jmp
fidivs
cwtl
or
pop
in
cltd
sbb
add
mov
xchg
sbb
push
jp
in
into
add
adc
xchg
mov
push
adc
mov
pop
arpl
mov
adc
addr16
sub
test
mov
scas
fistps
adc
cmpl
leavew
cmpsb
addb
sub
xchg
inc
xchg
sbb
in
lea
mov
test
push
adc
ret
adc
in
jne
les
sahf
out
arpl
outsl
inc
inc
jbe
jge
adc
loope
mov
les
xchg
or
adc
mov
lods
adc
in
int
idivl
pop
sbb
fs
jns
mov
fisttpl
dec
lods
jbe
jbe
cmp
testl
test
push
movsb
jb
ret
pop
push
and
shl
mov
bound
xchg
and
lahf
ljmp
je
cmp
add
and
enter
xchg
into
iret
mov
aaa
das
xor
mov
faddp
imul
jecxz
pop
sbb
test
adc
dec
mov
push
cmp
sub
pop
xchg
adc
push
adc
adc
sti
push
and
push
sar
pop
xor
push
fstp
xchg
inc
leave
cmp
ds
mov
xor
add
fstpt
pusha
add
jle
add
lock
pop
lcall
fsubl
imul
jns
jbe
fdivl
out
mov
push
pusha
push
stos
jg
lahf
mov
add
and
fistpll
pop
adc
mov
insb
pop
cmp
and
ret
sub
adc
lds
cmp
adc
loop
adc
mov
push
fsubs
imul
xchg
into
pushf
xor
mov
pop
lods
shrb
sub
imul
enter
cltd
mov
andb
dec
in
jg
mov
sbb
popf
xor
int3
adc
sarl
mov
mov
movsl
fiaddl
insb
cmpsb
aad
in
cmp
push
imul
xchg
mov
stc
cmpsb
lahf
xchg
lret
in
stos
lahf
cmp
in
stc
and
mov
pusha
lds
bnd
aaa
dec
push
into
ret
sbb
pop
push
sub
clc
fbstp
mov
mov
push
sub
dec
ret
cld
faddp
push
data16
or
fdivl
xor
mov
and
arpl
jmp
sbb
ret
lods
bound
adc
gs
pop
ljmp
cli
pop
sbb
and
outsl
jl
jle
clc
je
mov
mov
xor
ss
mov
lods
jo
pop
push
fstps
das
push
ds
mov
test
cltd
shrl
inc
lds
loope
mov
in
pop
sbb
push
imul
lret
stc
icebp
xchg
sti
hlt
push
rcl
divps
aam
ljmp
add
mov
pushf
aam
adc
or
push
sbb
inc
and
hlt
in
mov
out
out
imul
lret
je
dec
jb
in
xchg
add
outsb
ds
dec
xchg
rcrb
add
pop
lcall
sbb
movsb
jns
mov
loop
orl
jne
int3
repz
push
jo
addr16
gs
jo
jg
jno
dec
icebp
das
inc
dec
xchg
jno
cmp
jnp
lds
aad
shrl
dec
cmpsl
out
xor
mov
inc
push
fnsave
ja
imul
cmpsl
in
lea
cmpsb
ret
adc
or
jle
sub
pusha
jmp
das
xor
iret
xlat
cmp
clc
xchg
das
xchg
mov
shl
mov
cmp
or
mov
cmp
lods
repnz
out
in
sti
addr16
repnz
mov
xor
jb
mov
adc
rolb
cmpsl
jg
imul
jbe
fisttps
rcr
sub
push
cmp
addb
bnd
sbb
bound
sti
jae
add
lret
lahf
loopne
adc
and
pop
xchg
sub
popf
jno
pop
mov
movsb
mov
enter
outsl
pop
inc
or
lods
stos
repz
jno
xchg
test
mulb
in
jle
rcll
negb
dec
gs
daa
inc
rcl
aad
cmpsb
mov
shrl
subl
mov
insb
shl
ret
push
push
push
mov
fistl
in
cmp
and
mov
std
aaa
dec
movsl
sbb
pop
fadd
cmpl
jns
add
ja
mov
in
dec
ja
adc
orl
sub
lods
dec
inc
inc
push
popf
int3
mov
test
add
inc
cld
inc
sbb
xor
sub
mov
call
lret
xchg
std
push
popa
cmp
pop
daa
jge
jbe
push
add
inc
and
xchg
jbe
inc
cld
and
imul
rol
jp
mov
push
mov
das
adc
lods
stc
in
mov
lods
sub
lcall
ss
aam
inc
xor
xchg
inc
mov
int
inc
cmp
adc
push
cmp
pop
xchg
pop
sbb
mov
adc
mov
pop
addr16
arpl
orb
push
cmp
adc
out
rorb
inc
pop
xor
jp
repz
aam
xchg
iret
loope
icebp
notb
test
sub
pop
adc
mov
or
xor
sbb
or
mov
mov
cwtl
stos
repz
lods
mov
cmc
inc
icebp
imul
pop
mov
daa
cmp
sub
mov
mov
or
xchg
out
push
es
js
mov
dec
jo
pop
imul
cltd
hlt
in
dec
push
push
push
jl
jmp
cli
test
pop
pop
inc
je
cmp
fsub
and
cld
mov
mov
pop
adc
in
dec
dec
sub
push
sbb
jmp
daa
lahf
stos
dec
lock
xor
out
pop
xor
fisttpl
insl
cmc
sub
into
iret
jns
mov
in
out
xchg
mov
sub
mov
sti
dec
mov
lea
pop
fisttpl
insl
fldenv
mov
fcoml
test
sub
sbb
mov
xor
mov
outsb
loope
sub
test
cmp
sbb
push
dec
fadd
push
jb
mov
pop
pop
stos
mov
out
ds
into
jmp
pop
std
cmc
rcr
dec
fcoms
repz
jnp
idivb
xchg
and
jge
test
fadd
pop
aaa
mov
xchg
mov
xor
pusha
xchg
sbb
mov
shr
fdivr
mov
pop
jo
mov
cwtl
mov
fsts
lret
pop
lahf
xlat
bound
pop
xor
in
aam
sbb
and
loope
mov
or
add
loope
mov
bound
push
mov
out
and
xor
test
pop
sub
inc
jnp
add
adc
popl
xor
adc
sbb
pop
dec
loop
mov
cmp
adc
lock
and
dec
mov
push
push
cwtl
rcrb
stos
jge
std
mov
stc
sub
mov
cmp
aam
in
xor
inc
paddb
xchg
lret
test
inc
loop
lea
lahf
dec
adc
aam
ljmp
or
aaa
mov
iret
xchg
push
xchg
frndint
sbb
pop
rclb
loopne
push
daa
mov
popf
dec
mov
ja
shl
mov
int
ja
pop
lods
jge
xor
loopne
sahf
pusha
movsl
xor
adcl
or
mov
repnz
cmp
divb
ds
push
jb
cwtl
movsl
fs
bswap
fistpll
in
ret
popf
and
out
xchg
vminpd
les
cmpsb
pop
pop
and
dec
adc
insb
pusha
jg
lock
lea
int
or
sub
or
lds
cmp
or
rep
jne
stc
pop
sahf
mov
inc
in
inc
mov
add
dec
dec
push
jns
adc
adc
std
out
xor
mov
sti
dec
jge
aad
mov
ret
jno
pop
fcoms
mov
cmp
cmc
sbb
imul
mov
sbb
shl
jl
sbb
xchg
sbb
pusha
leave
test
test
movsb
push
push
mov
testb
icebp
jle
out
lret
or
repz
ret
inc
sbb
clc
int3
xchg
mov
popa
xor
cmp
or
fildll
pushf
mov
sub
lret
mov
pop
imul
pop
mov
nop
int
cld
lods
push
lcall
adc
outsl
mov
cltd
xchg
movsb
dec
mov
push
jno
pop
test
dec
repnz
inc
sbb
push
mov
pop
icebp
cmp
mov
out
stc
mov
in
add
orl
cli
adc
mov
scas
ss
sti
lcall
add
popa
pop
scas
hlt
je
fs
adc
dec
call
lds
sarl
xor
jno
imulb
jl
shlb
adc
paddb
shl
in
jmp
add
pop
pop
das
fisubrl
cwtl
jmp
call
rcll
je
je
arpl
mov
or
dec
movsb
jg
xchg
add
shll
dec
ret
fiaddl
dec
inc
lahf
jae
faddp
hlt
sub
enter
int3
les
inc
jae
jno
imul
cwtl
xchg
pop
dec
or
insl
push
or
sbb
enter
dec
pop
loope
in
xchg
cmp
jmp
scas
mov
sub
inc
sbb
mov
out
sub
pop
js
imul
lods
and
sbb
out
ss
cmp
or
cmp
icebp
and
js
stos
jbe
vpmaxub
pop
mov
popa
ljmp
cmp
rolb
scas
out
shll
mov
or
sbb
dec
dec
adc
pushf
inc
iret
push
jno
dec
nop
cmpl
mov
sbb
cmp
mov
rolb
aas
mov
in
test
mov
not
jns
enter
lds
iret
fnstcw
xchg
inc
cmp
gs
mov
cmp
shll
emms
leave
subl
push
in
add
xor
push
cmpb
out
insl
inc
clc
and
cli
int
mov
jbe
adc
aad
ds
adc
inc
imul
xchg
mov
fcomi
scas
sbb
aaa
bnd
out
pop
movnti
out
lock
mov
and
push
add
sbb
in
jle
pusha
sub
inc
mov
dec
pop
jnp
sbb
jns
test
enter
mov
add
gs
mov
jle
lcall
cmp
add
or
inc
mov
add
mov
or
xor
stc
rclb
insb
addr16
fadd
jle
mov
pop
insb
pop
insl
sbb
addr16
xchg
pushf
dec
xchg
outsl
mov
lods
shll
rep
lret
in
pop
pop
roll
out
xor
aas
and
mov
xor
jmp
sbb
mov
call
pop
bound
adc
mov
or
lahf
xchg
call
insb
imul
insb
pop
movsl
pop
mov
ret
pop
sahf
mov
out
jmp
les
pop
addps
adc
repnz
push
fcomp
and
mov
insl
ret
cwtl
mov
out
add
pop
enter
repnz
pop
out
adc
add
in
add
nop
jns
cwtl
outsb
lock
mov
jge
mov
data16
dec
test
scas
mov
les
xchg
mov
adc
movsb
or
dec
mov
cmp
sub
mov
ds
mov
jne
add
andl
test
test
repz
ror
icebp
and
mov
lret
xor
add
std
sub
fdivs
and
daa
jne
stc
adc
pushf
test
xor
inc
mov
imul
dec
or
and
jp
xlat
or
jg
xchg
dec
neg
dec
dec
cmovp
mov
inc
pop
jns
lret
in
fstpl
std
push
fidivl
jle
pushf
mov
aam
mov
rolb
pop
fildll
xchg
jle
mov
sbb
nop
jbe
mov
sbb
jmp
insb
sub
or
xlat
loop
cmpb
pop
mov
stc
roll
cmp
dec
test
stos
xor
out
add
sahf
or
inc
mov
int
sbb
insb
rcrb
in
outsb
pop
inc
lods
cmpsb
push
fcomps
loop
and
scas
dec
loope
jmp
cmpsb
pop
jne
scas
incb
xor
jp
xor
aad
inc
push
pop
pop
cld
mov
or
xchg
stos
jae
addr16
pop
lods
jg
sub
and
imul
jae
repnz
cmpsb
pop
arpl
dec
imul
push
out
jns
ret
into
xchg
roll
sti
jo
push
push
jns
stos
add
call
pusha
xchg
jns
sub
xor
inc
aaa
das
cmp
int3
out
lret
popf
lret
xor
xchg
mov
out
std
in
cmpsl
mov
mov
ret
sbb
rolb
xor
int
sbbb
shl
or
out
add
mov
inc
dec
loop
dec
push
lea
lock
xchg
jg
push
ficompl
dec
inc
inc
loop
mov
ds
in
jge
and
lds
loop
pop
push
xchg
push
xlat
repz
lcall
pushl
inc
mov
stos
jp
cltd
add
mov
dec
xchg
testb
inc
xor
out
cmc
popa
call
popl
inc
jecxz
xor
nop
lret
inc
mov
dec
ljmp
sub
xchg
imul
push
cmp
cltd
clc
mov
mov
mov
inc
stc
ljmp
xor
test
cli
fs
adc
inc
push
les
in
popf
jo
sbb
test
sub
sub
loop
ss
jb
into
int3
pop
or
shll
pushl
xchg
ficoml
sahf
cmpsl
jle
testb
loop
loope
pop
sbb
ss
cli
data16
mov
pop
popf
lods
stos
or
pop
adc
bound
pop
inc
shlb
icebp
cmp
jecxz
sahf
pop
test
mov
adcl
mov
rcrb
xchg
jns
mov
mov
aad
jle
mov
test
mov
jle
sbb
and
add
aas
mov
sbb
test
cmp
rcll
push
and
call
adc
jmp
out
pop
pop
insb
pop
aam
mov
fnstsw
out
fsub
aam
pop
inc
ret
sub
inc
stc
cs
fisubl
je
push
push
jne
sbbb
dec
mov
cmp
lahf
icebp
cmp
pushf
mov
jp
cwtl
cwtl
add
lods
sub
stc
repz
jg
in
jge
aaa
lods
outsl
push
sub
mov
bound
xchg
insb
enter
aas
lcall
adc
leave
inc
and
xchg
ljmp
xor
fcmovu
bound
xchg
scas
cmp
adc
jns
pop
xchg
xchg
xchg
lahf
xchg
adc
pop
cmp
hlt
fwait
or
insb
cmp
or
int3
insl
or
cli
cli
mov
adc
push
jg
cmp
cmp
pop
enter
stos
sbb
sub
out
das
data16
out
pop
xrelease
cmp
dec
inc
dec
out
inc
jle
repnz
dec
cmp
bound
xor
fnstsw
rorl
lods
pop
pop
lock
das
xchg
xchg
pop
rorb
mov
push
sbb
lock
stc
mov
ds
ljmp
cmp
repnz
in
adc
shr
mov
cwtl
or
lahf
es
dec
xorb
sub
rcrb
mov
sahf
lods
xchg
dec
pop
ret
lret
pop
lock
lret
sbb
je
pop
popf
add
or
cwtl
fdivs
stos
jo
mov
shrb
dec
arpl
fadds
push
inc
jp
leave
fldt
bound
fstpt
sti
clc
sbb
xchg
dec
mov
pop
mov
fnstenv
cmc
xchg
hlt
and
add
add
jno
cmc
cmpsb
leave
scas
xor
add
xchg
cmp
scas
jns
mov
sbb
fsubl
xchg
jb
fs
test
mov
inc
jmp
cld
popa
testb
cmp
pop
aam
xor
cmc
push
fwait
inc
dec
pushf
dec
lds
cmp
pop
out
sub
ret
bound
pop
ljmp
push
daa
mov
sbb
scas
xchg
loop
mov
cli
pop
or
fwait
fwait
iret
addr16
test
mov
jle
push
shr
jmp
and
cli
and
mov
pop
pop
inc
mov
popf
bsr
cmp
adc
adc
jbe
pop
fdivs
cmpsl
jmp
push
dec
xor
aaa
mov
and
movsl
jo
xor
mov
loop
div
mov
pop
pop
das
js
mov
insl
cmpsb
pop
and
mov
loope
repz
jbe
loop
inc
pop
push
hlt
hlt
jmp
push
xchg
xor
sahf
jp
gs
lods
jl
xlat
int
out
inc
xchg
sub
pop
xchg
dec
cmp
jle
sbb
push
lret
insl
push
xor
push
nop
push
test
and
jno
lea
inc
popf
dec
in
mov
push
pop
inc
test
mov
mul
jmp
loopw
bnd
mov
and
lock
push
mov
jg
cmpsb
out
ss
pushf
int
sbb
loop
sbb
gs
nop
jne
cmp
and
ret
cmp
dec
xchg
mov
push
repz
idivb
jg
decl
xor
jl
jne
mov
adc
popa
inc
in
in
mov
mov
popa
stc
or
nop
dec
dec
dec
into
xor
add
cmp
or
leave
xchg
xor
outsl
scas
icebp
xchg
pop
push
les
roll
push
js
stc
sbbb
pop
inc
sti
adc
out
mov
inc
cmp
jno
xor
push
lock
ja
xchg
into
adc
dec
lret
ljmp
xchg
mov
packssdw
dec
ret
inc
je
xchg
or
jg
sbb
mov
inc
movb
cmp
mov
cmp
xchg
js
xor
cmpsb
pop
lcall
xchg
inc
push
dec
push
insl
mov
repnz
pop
jle
das
lcall
jge
xor
push
mov
pop
rcr
pinsrw
imul
cmp
mov
pop
dec
jb
sbb
popa
pop
cmp
pop
jae
leave
fs
insl
mov
cwtl
mov
pmullw
add
in
add
js
ret
shll
pop
adc
hlt
fnsave
ss
ret
mov
cmp
imul
shlb
mov
and
and
sub
out
fisttpl
movsl
inc
inc
or
mov
dec
sub
repz
imul
rcrb
xlat
adc
push
mov
sbb
fsubrp
enter
das
ret
pop
jnp
jle
hlt
xchg
push
notb
sub
fsubrp
sub
mov
mov
or
push
xchg
push
dec
popa
div
sarl
lock
mov
stc
stos
mov
add
pop
mov
inc
aam
call
cltd
femms
shr
addr16
fwait
ljmp
outsl
pop
out
ret
sub
stc
pop
outsb
in
in
pushf
imull
stos
or
sbb
sbb
inc
lds
or
je
jnp
add
lea
stos
in
into
ljmp
lea
or
fdivp
ljmp
insb
lret
out
outsl
lds
popa
mov
jecxz
xor
stc
sub
push
mov
xchg
imul
and
mov
pop
mov
hlt
mov
push
push
pushf
stos
mov
aas
or
mov
dec
fldl
cmpsl
xor
out
lock
ret
or
aas
jg
ss
inc
std
pop
sub
and
inc
mov
pop
out
mov
loope
add
pop
mov
ffreep
insb
jg
dec
push
pushf
ds
adc
dec
out
or
mov
ret
cmp
xchg
mov
mov
jbe
shl
add
xor
lds
outsl
inc
pushf
xor
daa
enter
scas
pop
push
mov
xor
das
mov
cmp
icebp
sbb
inc
arpl
xor
pusha
xchg
aaa
jp
ret
test
inc
jp
jg
xor
std
dec
arpl
cmpsb
mov
jl
int3
insl
push
push
mov
jecxz
cltd
ja
pushf
sbb
sahf
push
inc
aaa
mov
lahf
out
mov
jbe
or
pop
mov
jecxz
repz
xor
into
les
xor
xchg
inc
icebp
mov
fisubrl
je
inc
add
gs
and
popa
repz
mov
mov
js
pop
lcall
test
xchg
or
mov
push
push
dec
leave
imul
out
add
imul
mov
insl
jp
jae
dec
jp
out
lret
stos
add
lods
push
test
push
jecxz
and
dec
jae
xchg
mov
inc
mov
into
fs
aaa
scas
lahf
cmp
adc
cmp
dec
mov
cs
pop
xor
loope
out
push
int3
jmp
pop
sbb
test
les
std
popa
mov
insl
bound
mov
cmp
lods
vpor
mov
jb
add
repz
sub
push
adc
sub
popa
movsb
add
movsl
xor
hlt
push
adc
into
adc
xor
jmp
mov
pop
jae
ja
sub
cmpsb
adc
movsl
push
ret
imul
pop
idivl
nop
test
sbb
cmp
fcmovnu
shll
pop
sub
sub
lcall
rcrb
sub
cmpsb
test
xor
clc
sub
orl
sub
sub
testl
loope
shll
jge
sub
push
adc
push
and
lods
fs
dec
stos
ret
dec
iret
pop
jecxz
sub
out
les
jp
and
xchg
cltd
xchg
xor
sti
xchg
jp
mov
and
push
xchg
mov
inc
or
push
dec
dec
aaa
outsb
and
cmpsb
dec
sub
sub
arpl
icebp
aaa
cli
mov
dec
push
jecxz
dec
inc
in
mov
ret
mov
jnp
daa
fsts
aam
pop
lahf
dec
pushf
cltd
add
dec
int
pop
cmc
or
and
clc
dec
jecxz
inc
or
and
or
inc
jo
jg
adc
ds
lock
repnz
cmpb
js
aam
adc
jb
cli
xchg
jo
sbb
notb
xchg
push
fildll
movsb
jbe
aam
lds
aam
and
ret
sbb
fsincos
mov
pop
lahf
pop
and
pop
adc
out
push
mov
jo
cmp
pop
sub
aam
mov
lock
adc
insl
push
adc
and
stc
outsl
imul
add
mov
cmp
xor
and
cltd
ds
sbb
into
mov
jmp
icebp
sbb
or
push
cli
cld
mov
mov
std
pop
shrb
and
mov
and
mov
out
lods
scas
fs
ret
fninit
xchg
mov
insb
jle
cli
push
sbb
ret
outsb
mov
outsl
xchg
lret
xchg
xchg
jp
jg
mov
pop
sbb
ret
jp
dec
mov
pop
jl
dec
xchg
mov
push
subb
inc
dec
add
call
repnz
lret
push
inc
or
icebp
mov
sbb
push
jno
xchg
xlat
jae
lcall
dec
mov
nop
dec
pop
paddw
jl
add
xor
cmp
mov
lret
frstor
pop
mov
int
cs
jle
dec
popa
push
adc
enter
add
lods
addl
pop
push
push
dec
mov
jle
ljmp
mov
in
test
cmp
enter
jecxz
pop
jbe
jne
sar
sub
cmp
fsubp
sub
mov
jns
fisttps
std
es
daa
stc
xor
jg
adc
xchg
jno
je
mov
adc
sbb
mov
arpl
pop
insl
je
stos
mov
jnp
push
jb
ss
sub
xor
xchg
repz
lahf
push
sbb
das
xchg
jnp
pop
mov
sbb
ret
push
xchg
sbb
mulb
dec
ror
or
mov
int
test
arpl
mov
pushf
dec
sti
cmp
pop
jecxz
imul
xchg
pop
sbb
sub
jmp
sub
sbb
inc
out
out
aam
cmp
dec
stos
sub
sub
es
xor
jge
push
sub
pop
movsb
cmc
stos
les
out
sbb
call
xchg
sti
mov
push
test
xor
lds
adc
bnd
pop
jmp
rep
icebp
mov
in
jp
in
stos
dec
in
outsb
lods
cltd
inc
adc
ds
jl
pushf
outsl
rcll
mov
xor
shr
rclb
push
ret
jle
mov
scas
mov
push
xor
adc
jg
lock
cmc
ficomps
loopne
inc
in
or
insb
loope
ficomps
or
adc
cmp
ljmp
sar
and
push
cli
and
push
pusha
cwtl
cli
int3
call
push
mov
lods
gs
add
xchg
pop
arpl
jge
cmp
xor
call
dec
sub
inc
in
aaa
dec
aaa
pop
int
lahf
cmpsl
in
jge
sbb
mov
inc
xchg
add
test
xor
stos
push
in
xor
out
push
cmp
cltd
cmp
push
aas
rclb
lods
lret
xchg
popa
outsl
sbb
jg
cld
sub
adcb
cwtl
cmp
xor
fdivr
enter
mov
sbb
bound
stos
in
add
movsb
iret
lods
cwtl
xorl
and
pop
iret
cmp
inc
fnstcw
or
fldt
shrl
adc
fsubr
es
popa
addr16
repz
or
add
sub
xchg
mov
inc
arpl
inc
xchg
cmp
sbb
jmp
lret
gs
and
loop
fwait
jo
pop
mov
xor
int
in
addr16
imul
mov
xor
stc
cmc
mov
pop
dec
cwtl
popa
push
je
out
sti
mov
shll
aad
imul
popf
jne,pt
loopne
and
ret
xor
fildll
mov
mov
adc
leave
call
ja
pop
into
mov
cmp
or
loope
push
sbb
lret
sbb
add
adc
xchg
test
mov
inc
push
jle
lahf
and
cs
or
test
mov
pop
xchg
lea
sbb
hlt
push
jnp
dec
mov
lret
loopne
xlat
insb
aad
xor
lret
nop
mov
mov
insl
xor
lret
stos
mov
loop
movsb
mov
pusha
pop
or
mov
cmpb
push
cltd
xchg
pushf
lods
int3
sbb
fmul
arpl
stc
push
xchg
jno
cld
xor
jns
mov
mov
aad
rclb
lds
gs
mov
pop
test
scas
push
mov
push
das
jae
or
sub
mov
cmp
rorl
sub
cmpsb
fstpl
outsl
sub
jb
push
les
imul
setb
ret
data16
adc
push
mov
movsb
adc
pushf
add
and
popf
insl
xlat
dec
scas
test
fmulp
aas
js
mov
mov
sub
ret
mov
std
cmpsb
outsl
jp
les
push
inc
ja
sar
pop
and
dec
sub
or
popf
pop
mov
mov
into
push
sti
cmp
cwtl
sub
repnz
jo
sub
push
adc
mov
sbb
pop
xorl
cs
jns
push
repnz
cmp
jg
out
fst
mov
pop
inc
adc
rolb
xor
sub
or
call
mov
ljmp
stos
push
fs
sub
pushl
aad
jo
mov
outsb
bound
cmpsl
mov
ja
scas
cmp
or
imul
dec
enter
enter
mov
lock
ror
pop
cmp
sbb
jge
jne
call
repz
and
sbb
fstpl
test
cs
mov
gs
daa
xchg
rcrl
in
lahf
js
xchg
repnz
in
push
xor
adc
xlat
mov
and
mov
arpl
leave
pop
movsl
jnp
stos
call
cmp
lret
xchg
xchg
iret
call
push
mov
out
int3
popf
fsubrs
int3
pop
dec
idivb
cmpsl
xlat
std
xor
rcr
fwait
dec
push
and
adc
cmc
push
lcall
mov
sarl
jl
inc
mov
in
mov
push
lret
repnz
test
pop
and
add
fsubs
enter
movsb
jmp
sbb
int3
add
test
sub
xchg
xlat
mov
popl
in
xor
lds
add
inc
jmp
iret
xchg
fldenv
push
mov
xchg
pusha
fwait
adc
mov
lods
insl
sti
loopne
or
pop
sbbl
mov
in
pop
or
je
sbbl
sbb
and
xchg
mov
out
jge
xchg
mov
cmc
sbb
fs
or
and
jmp
rclb
inc
aad
and
cmpsb
add
outsb
dec
dec
leave
pop
outsl
scas
jae
shlb
xchg
out
cmp
shll
leave
sbb
lods
adc
test
fnclex
hlt
rol
ret
sahf
pop
sahf
add
push
loope
xor
mov
mov
stc
mov
imull
xchg
mov
mov
and
cmp
adc
pop
inc
mov
lods
sahf
adcl
les
add
ret
or
movsl
add
jnp
pop
adc
sbb
bound
jb
add
shll
inc
cmpl
iret
pushf
aam
hlt
andl
sti
mov
pop
cltd
xchg
sti
inc
adc
mov
fs
pop
sub
cld
test
lea
jp
jmp
divb
popf
bound
inc
or
sub
les
push
popf
xorb
push
lret
ja
mov
dec
lods
and
pop
or
pushf
xor
gs
rclb
lcall
push
scas
pusha
dec
ds
and
jecxz
inc
add
rcrb
or
or
mov
lret
push
cmpl
pop
pop
jp
jmp
xor
inc
pop
mov
mov
pop
push
loop
mov
mov
je
mov
aam
stc
pop
bound
ljmp
xchg
ja
nop
out
jae
inc
dec
daa
pop
into
shlb
es
xchg
xchg
cmp
in
push
jb
lea
dec
xchg
mov
lods
lds
xchg
loope
adc
fs
cmp
in
push
insl
ds
shlb
js
loope
out
mov
rolb
rclb
or
movsl
addr16
cmp
call
push
sbbb
les
insb
cmp
sub
fcmovne
into
push
aam
sub
lods
sub
mov
push
sahf
js
or
xor
mov
call
repnz
lods
xchg
add
xchg
mov
or
fbld
inc
jmp
mov
stos
loope
arpl
sbb
jb
adc
lods
subb
lea
push
add
mov
std
addr16
sub
pop
mov
or
dec
mov
out
add
dec
adc
jmp
adc
sub
ss
in
cwtl
out
push
std
pop
std
mov
add
mov
aam
xor
ljmp
int3
xchg
add
popa
xchg
xchg
xor
mov
push
cmp
cltd
lcall
cltd
inc
in
gs
jbe
hlt
jmp
pop
out
lea
xchg
sbb
inc
fwait
mov
xchg
xor
jne
loope
pop
aaa
adc
das
lret
mov
pushf
mov
dec
jne
push
sahf
ret
lret
xchg
inc
xchg
scas
out
pop
stc
icebp
push
jae
jns
sbbb
mov
fsubrs
out
pushf
add
inc
imul
out
adc
pop
cmp
ds
loopne
mov
xlat
js
xchg
fisttps
mov
and
lods
out
bound
inc
lcall
mov
dec
sbb
or
pop
das
pop
push
pop
sub
out
cmp
pop
lods
std
adc
cmp
ds
outsl
outsb
test
mulb
sahf
cmpsl
scas
insb
cwtl
add
adc
jmp
inc
das
cwtl
int3
xor
ljmp
cmp
cmp
xlat
cmpsb
dec
mov
ret
mov
adc
fcmovb
je
aad
fwait
pop
sub
inc
fldenv
push
cld
inc
addr16
inc
mov
push
cmp
jmp
int3
ss
jb
stos
inc
mov
or
ljmp
push
sbb
sub
xor
push
push
pop
and
push
out
or
cmc
mov
jno
xchg
decl
rcll
pop
pop
das
mov
jg
xchg
imul
addr16
sub
mov
pop
sahf
fsub
out
inc
stos
mov
loope
repz
push
cs
test
std
test
arpl
xor
dec
ret
aaa
cli
push
scas
scas
sub
fdivp
cmp
add
iret
lock
fnstenv
out
xorb
cmp
retw
xor
xor
mov
or
push
xchg
outsb
or
aaa
lds
repz
lahf
dec
lcall
push
ljmp
cld
and
gs
pop
xor
lods
aas
xor
lock
out
adc
dec
test
sub
pop
aad
and
pop
push
ret
xor
in
cltd
frstor
adc
mov
xor
mov
push
push
sub
dec
dec
xor
aaa
xor
aad
mov
or
jecxz
push
or
rclb
mov
add
in
push
add
sub
adc
jl
adc
fidivl
and
lock
rol
lret
pop
xchg
push
std
sub
adc
xchg
cmp
pop
pushf
or
lock
add
testl
lock
inc
mov
add
std
lret
sbb
lret
push
int3
add
and
push
repz
addr16
dec
je
jp
adc
xchg
push
sbb
or
sbb
and
nop
sbb
call
push
mov
xchg
fimull
mov
shlb
aam
adc
mov
and
movsb
sbb
sub
pusha
ja
repz
jo
xor
sub
cld
dec
loop
inc
gs
sub
cmp
and
lds
addl
cwtl
mov
inc
mov
sbb
cltd
mov
movsl
push
cmp
sbb
dec
pop
xchg
std
js
fs
ret
jmp
xchg
lcall
loop
out
mov
jbe
mov
mov
sbb
mov
in
sbb
sub
mov
lahf
negl
sbb
outsl
movsb
dec
movsl
jp
push
jmp
fildl
cld
sub
mov
dec
cmp
cmp
pushf
lret
mov
popf
daa
aad
add
fidivrl
xor
pop
and
cli
notl
std
pop
aas
mov
jp
dec
out
call
cltd
mov
data16
xchg
lds
imul
hlt
xchg
mov
pop
or
in
inc
pop
jnp
mov
stos
push
sub
mov
add
adc
lcall
cmp
in
jp
leave
jbe
popa
push
repz
aas
jle
cmp
repnz
loopne
jl
pop
movsb
adcl
mov
add
jmp
mul
pushf
mov
outsb
movsb
push
mov
cmpsb
testb
lock
out
cmc
cs
repnz
sub
jge
fcomps
pop
es
ds
int
test
adc
lods
andb
repz
push
inc
maxps
mov
inc
jo
inc
push
mov
push
or
sarl
dec
jne
adc
sub
xchg
pop
loop
das
out
mov
mov
cltd
inc
mov
call
dec
pushf
cltd
dec
pushf
pop
xchg
sub
push
je
push
push
push
fimull
cmp
cs
cwtl
ds
shrl
daa
in
cmc
mov
fldl
xor
xchg
int3
fdivrl
in
fisubrl
pop
sbb
out
call
shr
ret
xchg
lahf
pop
inc
xchg
shll
jle
adc
sub
das
add
lret
out
dec
movq
pushf
sub
idivl
loopne
arpl
push
mov
loopne
jl
jmp
out
stos
fcoml
and
xor
sub
stos
mov
repz
pop
adc
xchg
in
scas
imul
lods
je
inc
inc
mov
fisubl
scas
and
sub
push
divb
jecxz
dec
lret
outsb
ror
lea
push
cmpsl
sub
loop
add
xor
add
cmpsl
xchg
xchg
push
stos
xor
inc
inc
es
pop
lahf
and
pop
inc
or
ret
stc
sbb
pop
nop
cmc
pop
call
mov
push
jns
imul
mov
pop
push
sbb
adc
jae
pop
ljmp
push
es
movsl
ret
sub
hlt
xor
and
sub
lock
pop
in
push
stos
sbb
lcall
sti
repz
int3
or
lahf
jg
jnp
cld
and
or
push
push
add
je
jp
das
adcl
pop
xor
push
or
in
and
push
pop
dec
cmp
sbb
push
inc
scas
je
push
aad
adc
pop
das
jno
clc
int
sbb
test
cmp
imul
les
cld
mov
lods
inc
stos
xchg
push
xor
addb
mov
ja
ss
mov
mov
lret
jne
js
and
jb
cs
xchg
loop
dec
pop
sti
cmpsl
cmp
push
je
jne
xor
fimull
and
adcb
icebp
cmp
mov
lods
lea
jp
xor
in
fimuls
int
pop
sub
std
hlt
inc
push
sahf
and
adc
dec
sbb
insl
das
rcrl
out
fisttpl
movsb
cmp
out
inc
or
addr16
add
mov
cmp
mov
pop
lret
and
jbe
pop
push
das
sub
sar
xor
data16
pop
jo
lock
push
adc
push
out
cmp
push
push
add
inc
pop
repnz
push
imul
sbb
stc
jp
movsb
popa
call
pop
inc
push
rcrl
push
xchg
add
xor
sub
cmpsb
adc
jo
loope
pop
imul
int
mov
push
outsb
lea
hlt
fs
jo
push
movsl
jb
mov
mov
xlat
mov
pop
sbb
ss
xchg
mov
sub
pusha
aaa
or
sahf
xchg
adc
or
adc
jg
xchg
js
cmc
and
jle
pushf
hlt
lock
push
sar
psrad
push
mov
cmp
shrb
decl
scas
pop
push
jnp
adc
into
sti
data16
popa
call
cli
add
scas
add
pop
jp
out
mov
push
xchg
popf
push
xor
cmp
xchg
test
push
dec
shl
cmp
xor
mov
xchg
fisubl
aam
aad
mull
stc
stos
jmp
mov
pop
or
pop
fwait
cs
xor
mov
push
fs
jnp
xorb
lcall
pop
mov
mov
gs
jb
mov
das
pop
xchg
dec
lods
test
jecxz
mov
mov
dec
loop
imul
or
clc
out
sbb
mov
mov
xor
mov
mov
lods
xor
sbb
pusha
jb
loope
imul
jmp
and
mov
jnp
push
add
mov
jecxz
jg
lods
inc
mov
sub
movsl
outsl
pop
and
pushf
jecxz
insl
fistpll
sbb
sub
inc
inc
xchg
popa
inc
xor
cltd
xchg
adc
sub
push
popa
mov
pop
xchg
sub
test
pop
ljmp
mov
xor
out
bound
aam
sbb
mov
push
xlat
push
bound
cmc
or
cmpsb
pop
movsl
aaa
movsl
mov
inc
dec
pop
in
xchg
loopne
sbb
lcall
fsincos
xor
test
and
scas
in
lock
or
and
xor
mov
sub
in
and
sbb
jne
and
xor
das
mov
and
push
loope
pop
aam
push
or
mov
popf
inc
inc
orl
mov
ljmp
pop
cli
les
add
add
cwtl
adc
pop
mov
cmpsb
push
inc
fs
sbb
aam
rolb
sbb
and
and
jge
xor
sbb
pop
fldl
sub
clc
dec
pop
call
scas
or
mov
lods
stos
jp
xchg
orl
sbbl
lcall
popa
jb
push
sbb
dec
mov
pop
sbb
movsb
ljmp
dec
icebp
mov
leave
inc
aas
clc
adc
add
pop
sbb
push
pop
mov
stc
push
jl
cmpsb
jg
jae
fs
jb
mov
and
adc
inc
pop
pop
test
mov
outsb
mov
bound
cmc
filds
lods
out
mov
dec
xor
sub
mov
push
aam
ffreep
push
fcoml
cs
ja
repnz
popf
jb
out
aad
aad
inc
push
mov
lea
fcomps
lds
daa
cli
stos
clc
mov
dec
mov
push
sbb
or
cmp
xchg
dec
lock
shlb
xor
sub
cmc
ret
dec
mov
push
ret
or
mov
aas
xchg
cld
lea
lret
add
pop
inc
pop
aad
call
sub
pop
dec
dec
daa
xchg
pusha
mov
cmp
jns
cmp
insb
lea
dec
fdivr
lods
pcmpgtw
push
out
mov
fcoml
mov
divb
mov
hlt
mov
ficomps
or
mov
pop
iret
fsts
int3
test
jle
in
scas
xchg
fs
mov
pushl
dec
cmp
pop
push
inc
push
rclb
scas
mov
mov
in
push
and
pop
loop
gs
sub
adc
xor
adc
sub
inc
mov
notl
movsl
cld
mov
cmp
mov
in
pop
in
pusha
push
fldl
jp
fcmovnu
pop
cltd
es
insl
lods
push
jg
pop
push
lahf
out
push
xor
in
pop
mov
jo
mov
adc
and
add
mov
sub
xor
lock
ret
push
pop
andl
fimuls
sbb
jbe
mov
jae
stos
std
stc
mov
insb
add
add
sub
push
movsl
insb
sub
or
jg
insl
aaa
stos
fwait
ja
bswap
mov
or
lcall
mov
lret
inc
jle
popf
pop
stc
mov
xor
add
in
mov
xchg
data16
jne
mov
xchg
fbstp
cmpsl
and
xchg
cwtl
aas
test
push
jle
lcall
sub
push
cwtl
jmp
pop
mov
lock
ljmp
jl
das
push
add
ret
cwtl
aam
out
rclb
mov
gs
lods
adc
mov
aad
jne
arpl
mov
jns
arpl
lea
fistps
sbb
or
ror
das
stos
hlt
into
or
push
ljmp
cwtl
cltd
lcall
call
iret
orl
xchg
setl
xor
out
shl
jb
add
jne
mov
aaa
adc
cwtl
and
in
leave
mov
push
int
jp
clc
aaa
es
int
cld
not
cmp
mov
jl
mov
push
pusha
dec
push
mov
push
push
lods
ljmp
stc
mov
mov
inc
leave
fistps
ds
aad
daa
movsl
pop
in
pop
call
jge
sub
lock
xlat
lret
sbb
gs
lods
jne
aaa
lahf
pop
loopne
std
lahf
sub
loope
and
mov
mov
jbe
lret
adc
mov
inc
dec
push
jnp
and
aam
mov
jmp
inc
mov
mov
lds
pusha
xlat
xchg
jge
add
call
inc
lret
dec
xor
pop
int3
push
cmp
dec
xor
pop
das
push
lea
lods
mov
das
lock
ficoml
into
ds
ljmp
sub
and
into
inc
int3
dec
movsl
cmpsl
out
lods
arpl
loopne
fabs
xor
xchg
xor
lret
leave
and
xor
and
les
ja
outsl
mov
rcrl
gs
sbb
cwtl
mov
push
daa
xchg
inc
push
mov
filds
bound
xor
jp
xchg
ds
stc
mov
and
les
jmp
scas
xchg
mov
cmp
fimull
icebp
pop
mov
add
popa
arpl
inc
aad
in
dec
jbe
lahf
ret
pop
sbb
sub
inc
jno
jbe
pop
pop
xor
pop
adc
dec
xchg
lcall
mov
cwtl
pop
call
test
aam
sarb
cwtl
sbb
or
push
test
ds
in
xor
or
insl
lret
lahf
adc
in
ljmp
loop
fwait
sub
lret
mov
adc
outsl
cld
ud0
xlat
xor
mov
ret
pop
mov
inc
mov
push
mov
std
pop
call
out
and
dec
repz
paddq
dec
pop
aad
ja
adc
in
rcrb
push
push
mov
mov
mov
fsubs
fstl
in
jb
push
xchg
and
mov
xor
or
pop
cli
orb
pop
adc
in
xlat
stos
jae
fldcw
notb
cmpsb
insb
sub
mov
add
cltd
test
lock
dec
sbb
cs
or
clc
jne
int
mov
jb
inc
mov
fwait
push
scas
daa
lds
mov
xchg
cld
gs
jge
in
pop
aas
and
inc
fsubr
flds
jo
inc
cmp
sub
sahf
leave
mov
js
xor
push
loop
sbb
popf
jecxz
fdivr
data16
imul
xor
je
cmc
aad
pop
pushf
out
adc
or
push
jl
jno
add
clc
daa
lahf
aad
rorb
jmp
sub
scas
jmp
mov
lret
xchg
mov
movsb
inc
and
test
jecxz
mov
xchg
and
fs
in
rcrl
xchg
cltd
xchg
popf
xchg
scas
out
outsb
pop
addr16
lcall
dec
and
cmp
xor
inc
and
fwait
sbb
sti
push
hlt
sarl
repz
scas
lods
mov
aas
sahf
pop
es
xchg
jle
pop
rcrb
push
iret
aaa
dec
sbb
mov
jle
js
jae
ret
bound
adc
push
and
xchg
rcll
stos
ret
add
mov
test
dec
jl
and
pop
je
lahf
in
lea
stos
mov
mov
outsb
popf
mull
ss
ds
outsl
out
pop
or
jo
mov
or
adc
mov
lret
cs
aad
sti
sbb
lcall
loop
lret
loopne
jno
or
lods
roll
mov
fcompl
int
mov
jbe
arpl
jo
sti
data16
shll
and
pop
xchg
rol
push
jb
mov
sti
cmp
js
lock
xor
les
repnz
shr
mov
sbb
jmp
repnz
push
in
mov
rol
inc
adc
or
pop
cmpsl
mov
in
pushf
loop
test
out
std
cmc
jne
push
jg
hlt
push
sarl
add
aaa
lods
pusha
cmc
movl
adc
aam
je
cli
inc
cmp
popa
dec
pop
ljmp
popa
mov
xor
mov
call
pop
jo
pop
mov
push
mov
ret
add
push
fbld
cmp
sbb
or
jge
pop
inc
xor
pop
sub
xor
pusha
cmp
dec
inc
lcall
cwtl
jo
or
push
lahf
xchg
lret
leave
jl
push
lahf
fwait
in
xchg
push
push
lds
adc
mov
and
and
dec
imul
jg
icebp
lock
sub
jle
aad
dec
push
sbb
jp
shll
or
or
adc
cltd
add
pop
or
hlt
enter
filds
push
mov
jnp
cmpsl
pushf
xchg
mov
clc
dec
lods
ss
popf
or
sbb
mov
sub
adcl
sbb
sbb
sbb
lahf
inc
add
stos
dec
stc
mov
inc
enter
addl
pop
mov
pop
or
testl
popa
inc
cmc
nop
mov
jge
sub
and
arpl
jl
pop
jp
imul
xchg
aas
aas
mov
repnz
movsl
sub
das
jo
lea
cmp
jl
sbb
hlt
xchg
sbb
fldt
sahf
jno
cmpsb
sub
add
jmp
out
inc
scas
dec
js
mov
js
mov
sub
sub
or
arpl
sahf
xor
push
hlt
test
fdiv
lahf
jnp
dec
adc
cwtl
in
aas
add
cmp
mov
pop
mov
ret
mov
loope
cmp
insl
icebp
ljmp
cld
dec
inc
sbb
stos
adc
xchg
push
sbb
add
inc
mov
cmpl
icebp
imul
ss
xchg
out
je
push
movsb
pusha
jmp
lret
mov
pop
aad
in
and
addr16
jns
dec
inc
test
out
hlt
xchg
not
xor
sbb
insl
dec
mov
sub
mov
mov
mov
sub
scas
lock
push
stc
and
pop
mov
fsts
fisttpll
inc
or
arpl
out
out
sub
xchg
xor
pushf
xchg
sub
cmpsl
cmp
or
adc
dec
outsb
repz
dec
lret
das
adc
sub
xor
loope
xchg
pop
out
push
mov
std
adc
sahf
pop
cmp
and
pop
jbe
inc
ds
add
cmp
sti
mov
imull
and
cmc
push
adc
xchg
mov
rorl
or
push
sbb
pop
lods
lcall
sub
inc
fcoml
stc
testl
jg
xchg
ficoml
cmc
cmp
int3
ss
addr16
lods
inc
pop
in
aam
cmp
inc
adc
js
mov
jg
sti
add
mov
insl
sub
adcl
cli
cmp
cmp
jnp
popa
pop
sub
imul
je
jg
outsl
sub
into
add
sub
rclb
pop
cmp
inc
lret
xor
test
in
cwtl
jae
xor
or
gs
xchg
ret
push
push
sub
jle
mov
sub
pusha
and
jno
fcmovne
arpl
mov
stc
shlb
movl
aam
fs
mov
lret
or
sub
xchg
sbb
test
scas
leave
sti
mov
mov
aad
outsb
outsb
inc
pop
and
mov
inc
jno
and
cmpsb
jmp
mov
roll
lea
testl
jbe
fcmovbe
lret
pop
mov
push
repz
or
mov
push
mov
cmp
and
mov
dec
xchg
out
mov
cmp
and
mov
je
pop
fcmovb
loope
and
adc
dec
ret
movsb
or
nop
jnp
insb
push
jmp
add
inc
stc
scas
outsl
dec
bound
in
or
fistpll
sbb
adc
adc
add
ss
mov
lock
jecxz
std
mov
out
stos
outsb
ljmp
sbbb
add
js
jae
push
or
in
cmpl
dec
stc
jle
bound
pop
js
xor
cltd
dec
cmp
stos
inc
sub
lcall
ds
push
inc
test
and
mov
xor
addr16
mov
icebp
iret
pop
out
sub
fldcw
xchg
inc
xchg
addr16
mulb
inc
jae
fdivs
jae
idiv
add
push
fsubrs
cmp
mov
jp
add
insl
pop
cli
pop
inc
xlat
sub
es
push
sbb
lahf
gs
mov
in
xchg
push
out
sbb
pop
cmpsl
jl
adc
pop
icebp
adc
add
or
icebp
rcll
or
cmp
fsubl
movsb
in
add
rep
xchg
scas
js
call
lcall
add
insb
loope
insl
insb
xchg
insb
test
not
fisubl
mov
loopne
cmpsb
js
cmp
sub
fcompl
rolb
test
fisttps
gs
lea
xchg
pop
sub
sbb
jo
dec
cmpsl
iret
negl
cmp
push
add
imul
mov
pop
aad
mov
bound
lret
jecxz
ss
lahf
push
push
hlt
add
lods
pop
cmp
inc
sub
outsl
jb
sub
or
icebp
inc
xor
add
mov
shrb
ret
cli
lret
stc
or
adc
test
aam
or
jp
or
shrl
sub
lret
xor
lret
xor
dec
push
call
aad
jp
xor
or
mov
xchg
gs
sbb
mov
das
mov
adc
cli
imul
mov
mov
push
mov
mov
shlb
out
mov
pop
test
es
pop
mov
xchg
xchg
lcall
push
xor
sub
subb
pushf
xchg
mov
jnp
test
push
leave
sar
jns
push
iret
into
mov
insb
es
cmpsl
test
mov
mov
mov
cmpl
insb
fnstsw
aad
test
repnz
ret
mov
lret
mov
bound
sahf
lret
out
mov
add
sahf
popa
or
mov
and
lock
adc
and
mov
xor
lahf
pop
mov
pop
lds
insb
cs
fnsave
push
mov
jae
stc
and
fwait
dec
push
pop
int
push
je
cmc
out
push
out
arpl
in
shl
mov
push
jmp
subb
jmp
shld
push
sub
mov
ja
mov
ficomps
mov
dec
inc
imul
pop
mov
ljmp
mov
mov
jns
cltd
loopne
addr16
xchg
jno
cld
or
xchg
in
mov
mulb
add
cwtl
pop
push
aam
jns
mov
lahf
int
inc
xchg
sub
je
aas
imul
xchg
stc
sarb
into
das
mov
outsl
pop
sub
mov
xchg
or
scas
or
add
cmpsb
loopne
lods
lds
stc
mov
dec
sbb
and
loope
mov
into
mov
dec
cmpsl
cmp
ds
mov
rclb
push
pop
cmp
popa
call
out
adc
mov
aaa
pop
pop
mov
sub
shll
loop
leave
pop
mov
or
insl
and
std
shl
adc
mov
dec
dec
ror
push
mov
push
adc
xor
cmp
scas
in
sbb
loope
or
xor
cmc
xchg
ret
push
mov
adc
lods
mov
dec
frstor
mov
adc
sahf
cli
and
aaa
or
sbbb
inc
hlt
push
mov
and
jl
mov
insb
mov
fisttpl
add
pop
test
cwtl
loopne
jno,pn
stos
popf
pop
sar
outsl
xchg
jge,pt
in
add
fildl
popa
mov
pop
lret
add
fwait
call
pop
cmp
push
fisttpl
mov
call
inc
sbb
xchg
fisubs
push
dec
pop
cmp
cli
lea
addr16
add
mov
dec
ss
mov
mov
push
test
and
add
dec
xor
incl
adc
ret
inc
icebp
fcmovnb
pop
push
mov
ljmp
push
femms
and
imul
mov
mov
lss
popf
shll
adc
push
pop
xchg
cltd
cmp
push
out
sbb
in
test
addr16
jne
das
insl
lods
sub
std
jo
and
pop
add
outsl
xor
test
in
je
push
inc
jle
orb
shll
push
and
add
pop
mov
out
call
js
mov
adc
mov
push
add
mov
mov
jo
das
ss
jae
jp
inc
insl
push
cltd
lock
fldcw
mov
add
sub
pop
aam
mov
sub
adc
pop
inc
scas
repz
lea
lcall
fs
dec
push
lret
imulb
pop
ficompl
repz
inc
and
xlat
cmp
lods
mov
adc
or
inc
jae
add
push
js
hlt
push
xchg
adc
push
and
pop
mov
nop
add
es
jb
jb
popf
lods
out
or
les
and
cmpsl
mov
cmp
lods
add
xor
dec
ds
fmuls
sub
bound
fistpll
xchg
je
cld
adcl
push
loop
stos
das
adc
ret
cmp
and
xchg
xchg
mov
and
lahf
cmpsl
sub
and
repz
push
popa
rcrl
in
loope
data16
mov
add
fs
shlb
sub
outsb
push
cltd
dec
popa
insl
mov
lea
add
xor
or
out
dec
ljmp
or
or
dec
push
mov
in
pop
and
into
add
xchg
insl
in
jg
pusha
std
and
add
jns
cmpsb
jge
icebp
lahf
fistps
xor
jmp
xchg
sbb
outsl
pushaw
xlat
out
mov
push
les
test
lahf
cs
popa
mov
pop
dec
add
rol
mov
inc
add
mov
rorl
pop
cltd
mov
std
push
jl
cmp
mov
sub
in
mov
rorb
in
mov
sub
jmp
jbe
adc
xor
xorb
push
mov
push
iret
fcoms
jnp
imul
call
jecxz
ret
movsl
out
and
fldenv
rorb
jbe
lea
insl
in
out
pop
sub
cmp
jns
sbb
sbb
jge
adc
es
in
iret
adc
add
mov
and
mov
dec
cmp
ror
inc
or
jl
stos
jo
inc
sbb
fistpl
pop
aam
cwtl
shll
nop
xor
cs
jge
mov
xlat
cmp
inc
inc
lret
fwait
call
mov
xchg
pop
mov
ljmp
fcompl
mov
xlat
aam
jmp
sahf
mov
mov
cmp
adc
fimull
icebp
mov
gs
ss
aad
mov
popf
add
call
cs
pushl
add
dec
fstpl
mov
jg
push
bound
movsb
cmpsb
test
loope
xchg
xor
add
and
mov
testb
cwtl
lret
ds
push
add
pusha
cmp
or
sbb
jb
push
adc
movsl
ljmp
and
mov
shlb
sarl
xchg
jne
addr16
scas
fistl
adc
inc
sbb
bound
jno
sbb
ljmp
xchg
lods
sbb
xor
rcr
mov
sbbl
sbb
add
cwtl
and
push
fldt
sbb
sub
pushf
cmp
subl
sahf
std
shlb
pop
or
gs
mov
mov
lahf
into
pop
lret
mov
dec
or
int3
icebp
mov
sti
fwait
jb
push
sub
jecxz
lock
loope
xchg
mov
or
xor
lods
test
inc
insb
cmc
xchg
sti
push
jge
ds
dec
imul
xor
out
jecxz
mov
push
loope
xchg
leave
push
std
mov
aas
inc
jg
inc
mov
adc
jo
daa
xchg
and
dec
lcall
rorb
jno
mov
add
fimull
push
pusha
fwait
into
cmp
cmc
cltd
xchg
jo
testl
adc
enter
fstps
imul
mov
cmp
cmp
mov
int
out
or
cmp
push
push
insb
dec
lahf
popf
xor
or
inc
roll
adc
fwait
dec
int
push
xchg
jecxz
enter
dec
out
push
sub
std
pusha
into
out
mov
lods
dec
pop
jns
in
xor
sahf
js
xchg
call
loopne
test
mov
call
inc
cmpsb
mov
xor
jmp
iret
arpl
fildll
and
int
in
ja
mov
mov
fildll
pop
cmpl
inc
in
ds
sub
xor
mov
ja
lar
inc
lahf
sysexit
xor
lods
dec
jbe
loop
das
pop
push
nop
jae
jo
jo
ret
cmp
scas
inc
dec
test
movsl
jo
inc
jno
inc
sbb
fcomps
mov
adc
jnp
xchg
test
mov
loop
shlb
xchg
inc
sti
in
fwait
negl
imul
dec
add
or
cmp
xor
sub
mov
add
jp
xor
lahf
xchg
call
adc
mov
scas
xchg
xchg
int
pop
xor
rcrl
incb
test
dec
xchg
add
loopne
xor
sub
pop
int3
pop
sahf
or
dec
adc
mov
mov
scas
inc
and
out
jns
xchg
sti
insl
enter
fdivrl
inc
int
hlt
sbb
incb
js
clc
xor
aas
data16
insb
vpsubusb
sar
sub
dec
psrld
push
mov
cltd
loopne
jne
sbb
call
repnz
xchg
lahf
mov
lret
or
insl
outsb
push
dec
xchg
cmp
jecxz
sub
loop
mov
rclb
push
push
cli
ja
outsb
bound
movsl
push
clc
sub
int
mov
xchg
xchg
or
int3
scas
push
push
push
push
jo
pop
lods
xchg
adc
sub
aad
push
stos
xchg
insb
out
adc
xlat
jecxz
cli
out
add
xor
sbb
sahf
mov
dec
sbb
cmp
fisttpll
icebp
and
cmp
cmp
pop
imul
adc
ljmp
jnp
addr16
pusha
xor
mov
jno
lahf
jp
dec
xchg
mov
cmp
xor
mov
mov
jno
cmp
mov
add
pop
and
loop
xor
jb
loop
fsubrl
and
jmp
js
loop
fidivrl
mov
fldpi
notl
cmp
pop
stos
mov
mov
pop
insb
mov
popf
fcmovnu
and
mov
hlt
notb
das
aaa
dec
cltd
gs
inc
mov
and
loop
ljmp
jmp
xchg
out
addr16
mov
ficoml
mov
pop
fs
scas
ss
jge
push
popf
xchg
outsb
inc
in
pop
push
in
inc
fsts
sub
es
push
loop
imul
bound
xchg
shl
cmp
aam
mov
aad
into
inc
or
clc
sbb
dec
push
fwait
imul
push
lahf
push
xchg
jp
lcall
iret
shlb
adc
rcr
push
lods
lods
sbb
xor
int3
mov
push
adc
push
dec
cmc
inc
sub
in
jb
jmp
sbb
push
lods
daa
push
and
dec
xchg
iret
pushf
push
leave
cmc
push
lds
shrl
xchg
jg
aad
inc
sbbl
jge
ror
sbb
jo
dec
mov
js
bound
loop
psrld
push
imul
enter
xchg
push
leave
dec
push
or
dec
insb
mov
cs
shl
xor
outsl
pusha
mov
add
jae
dec
test
lcall
pop
orb
and
fstpt
mov
je
sub
xchg
js
and
add
sahf
ficomps
popa
call
cld
je
vsubsd
shll
inc
shlb
pop
mov
dec
or
cmc
or
push
mov
lods
cmp
out
xor
data16
cld
xchg
out
pop
jmp
and
aam
push
shll
popa
lret
jg
and
pop
push
jae
shlb
push
mov
pop
insb
sub
dec
gs
adc
mov
sar
lahf
lcall
call
lahf
adc
pop
jo
lret
push
and
ret
ljmp
outsb
xchg
fnsave
sbb
data16
sbb
es
cmp
xchg
mov
adc
sbb
xchg
mov
pop
pop
aam
mov
outsl
mov
lret
jl
divb
sub
mov
mov
hlt
cmp
add
sbb
rcrb
pusha
pop
dec
daa
jne
pop
pop
mov
jb
jnp
dec
push
aam
data16
xlat
fldcw
shrl
loopne
pop
mov
sbb
and
out
mov
lock
cmp
inc
out
dec
pop
std
lock
and
icebp
xor
pop
call
clc
je
jnp
iret
jecxz
cmp
repz
pop
popa
jge
test
dec
sub
cmp
andb
mov
xchg
movsl
cmpsl
add
gs
mov
pop
je
xor
stc
mov
loop
dec
inc
je
idivb
mov
cs
jp
aad
gs
ret
aad
int3
pop
std
or
addr16
stc
xor
inc
pop
test
loop
inc
je
push
mov
pop
bound
movsb
push
mov
mov
dec
inc
dec
adc
jl
push
sub
arpl
outsb
mov
push
push
and
cmpsl
test
iret
int3
fcomps
mov
rol
jecxz
adc
or
and
lret
push
pop
pop
jmp
repz
pop
pmullw
mov
pop
lods
fwait
xor
jno
push
in
mov
push
out
outsb
mov
push
adc
aas
adc
test
mov
cmp
fwait
pop
jecxz
jg
call
lea
jecxz
sbb
mov
mov
pop
cmp
push
dec
xchg
out
push
rcll
sbb
cmc
mov
pushf
jmp
aam
adcb
mov
push
shll
fdivrp
xor
enter
xor
mov
movsl
jae
cwtl
das
pop
adc
push
cmp
sbb
roll
pusha
cmp
push
lcall
mov
aad
lea
enter
xchg
movsb
mov
das
inc
cmp
push
push
sti
inc
mov
lahf
jmp
dec
push
lea
xchg
mov
pop
mov
scas
dec
aad
sub
int3
xchg
stos
add
repnz
les
loop
ja
or
jp
fimull
repnz
xor
iret
jo
pop
lret
cmpsb
in
push
movsl
mov
nop
adc
push
dec
xor
lods
jo
pop
lods
jo
push
adc
iret
or
add
mov
push
push
daa
jbe
test
sub
dec
repnz
stc
in
cmp
je
cmp
pop
jecxz
pop
jecxz
stc
cmpsb
mov
arpl
dec
xchg
or
movsl
xor
adc
or
ffreep
xchg
sbb
xor
mov
divl
setp
hlt
push
and
ret
mov
mov
sub
mov
gs
sub
sarl
sub
xor
iret
mov
shlb
cmpsb
sub
xchg
out
flds
cltd
mov
sub
enter
fsubrl
hlt
out
sbb
cmp
mov
xchg
xchg
add
pop
mov
int3
jecxz
lds
jnp
popa
fbld
mov
push
sub
jno
cmpsl
test
movsb
sbb
xchg
pop
clc
jne
negb
scas
sbb
mov
into
push
clc
or
cmc
cs
scas
cmp
mov
mov
add
mov
jb
fcoml
jp
cli
cmp
inc
inc
imul
or
dec
lock
out
jl
lds
pop
mov
and
jmp
sti
jo
mov
push
rclb
iret
sub
lods
fs
inc
repz
nop
lret
popa
int3
scas
loope
add
lock
mov
out
and
jmp
outsb
jl
addr16
sbb
fists
repz
jge
inc
jp
ficoms
les
fisubl
dec
stc
mov
sbb
cld
mov
mov
or
rcrl
pop
rcl
jne
movsl
mov
sub
lock
sbb
cmp
bound
mov
paddb
pop
pop
sarb
insl
cmp
call
mov
inc
mov
mov
xor
fwait
add
jo
test
adc
lea
dec
int
inc
scas
mov
xchg
mov
cwtl
sub
ljmp
cs
jno
sbb
mov
and
mov
xor
popf
cli
or
je
mov
mov
je
jno
leave
decl
inc
dec
and
cs
jo
pop
in
stos
je
test
push
vpmacsww
push
xor
out
jns
nop
test
scas
lds
inc
adc
in
push
je
popa
jb
out
push
add
xor
enter
cmpsl
test
xchg
mov
popf
jbe
pop
sbb
int
fs
lret
addr16
xor
mov
mov
insl
adc
xchg
sbb
aad
jmp
jae
sub
cmp
mov
mov
push
sbb
pop
mov
lods
ror
daa
pop
stos
mov
xor
test
xor
dec
imul
cmpsl
inc
add
roll
mov
xor
mov
jns
movsb
lock
xchg
xchg
in
push
aam
dec
cmpsl
scas
and
lret
xchg
and
insb
mov
imul
decl
dec
cmp
test
call
enter
daa
lret
push
inc
aas
gs
outsl
sub
mov
shlb
fstl
jecxz
mov
mov
sbb
jge
xchg
add
dec
icebp
inc
loope
inc
and
cmp
jb
cs
push
mov
cli
mov
xor
das
scas
sub
dec
adc
push
or
hlt
inc
das
inc
sub
pop
or
xchg
sub
sub
inc
jmp
or
pop
mov
jl
lods
dec
ds
repnz
cmp
dec
cld
sub
leave
sub
out
push
out
test
mov
xorl
addr16
out
fldenv
pop
aas
xor
or
cld
fsubl
adc
mov
andl
insb
sub
dec
sti
mov
nop
mov
lock
xchg
mov
adcl
inc
lods
add
inc
xchg
sbb
idivb
sub
leave
out
add
cmp
fwait
nop
cmpb
aas
adc
repnz
outsl
push
out
and
xchg
mov
mov
lea
test
jle
mov
inc
lahf
adc
orb
jnp
mov
adc
sti
lahf
xor
push
adc
test
add
mov
nop
gs
mov
mov
fsubl
bound
xchg
pop
cli
psrlw
aam
imul
sub
mov
cmc
xor
add
mov
sbb
adc
xchg
push
cmp
push
xchg
mov
add
stc
jmp
fcoms
das
mov
and
sbb
mov
jo
inc
jb
xor
push
cmp
jns
xor
fidivs
bound
pop
mov
ret
cmpsl
mov
iret
sahf
xchg
ds
inc
call
jl
das
xor
mov
dec
fldenv
cwtl
mov
ds
xchg
icebp
aaa
inc
mov
pop
xlat
xchg
dec
jo
and
ror
jnp
movsl
or
pop
fdivl
mov
pop
js
mov
cmp
sbb
jg
jg
aas
adc
lods
pop
addr16
loop
push
or
es
push
sub
loope
out
sbb
pavgw
push
gs
sub
cmp
jmp
pushf
mov
mov
ss
lods
mov
push
push
xchg
and
fsts
and
arpl
mov
or
lret
inc
adcl
in
pusha
dec
mov
adcl
test
lret
cmp
inc
pop
lock
add
subl
out
lret
jnp
jp
int
mov
test
cli
decb
mov
loope
hlt
xchg
mov
int3
ss
xlat
fsts
push
dec
dec
subl
or
mov
in
inc
mov
sub
or
loop
inc
inc
jne
js
call
fwait
add
scas
je
cmp
int3
lea
mov
inc
add
and
lea
sbb
mov
imul
jae
inc
test
aaa
nop
bound
in
mov
push
nop
push
cmp
mov
popa
jnp
mov
in
inc
lods
mov
call
sbb
les
inc
pop
mov
push
push
sbb
bound
add
pop
and
mov
cmp
cmpsl
add
mov
mov
xchg
cmp
les
pop
sbb
mov
in
pop
in
in
adc
xlat
mov
sti
inc
mov
jle
xlat
or
or
out
mov
sub
shrb
mov
inc
je
xchg
and
mov
pop
adc
jl
test
out
arpl
cmp
insl
push
xchg
dec
lods
nop
add
or
mov
xchg
jle
bound
xchg
adc
inc
xor
cmpsl
repnz
add
or
mov
lods
icebp
inc
and
cltd
push
mov
fmuls
nop
cltd
sub
dec
push
inc
mov
enter
sub
sub
pop
add
lock
dec
decl
jb
popf
dec
aaa
jmp
push
xchg
adc
imul
push
sbb
js
in
push
popw
jno
in
bound
cmpsl
nop
in
push
adc
movsb
out
mov
mov
xchg
imul
mov
mov
test
cmp
inc
add
sub
dec
jmp
into
repnz
int
roll
cmpsb
xchg
aad
in
mov
jl
add
call
lret
sub
pop
jl
mov
and
or
jmp
push
jmp
mov
xchg
fs
out
aas
push
outsb
aad
bound
adc
gs
push
push
lods
inc
dec
pop
nop
push
mov
jbe
push
mov
jnp
movsl
sbb
xchg
jb
sub
fstpt
jo
stos
test
cwtl
cmpsb
lahf
pop
daa
mov
push
scas
cmp
aam
mov
out
insb
pushf
mov
and
into
dec
xor
jno
dec
push
and
cmpsl
and
cmp
shrl
mov
push
push
cmpsl
mov
mov
ds
inc
ret
jb
jl
push
or
inc
mov
popf
mov
int
mov
stc
lods
sbb
stos
xor
adc
xor
sbb
jg
sbb
jbe
movsl
idivb
fidivs
and
mov
add
call
out
test
outsb
jg
jnp
rsqrtps
idivb
ljmp
pop
jno
es
negb
lcall
pop
cld
xchg
add
daa
mov
push
cmpsb
mov
mov
test
mov
dec
test
and
out
inc
shlb
ljmp
repnz
xlat
cmp
mov
sub
repnz
mov
cmpsb
test
dec
add
mull
pop
mov
mov
add
aad
inc
rcrl
addr16
mov
mov
lods
mov
data16
dec
ljmp
jno
dec
pop
ja
mov
ja
outsb
test
lahf
adc
cmp
lret
push
sbb
ja
xor
lods
ret
scas
call
cmc
sbb
pop
add
ret
adc
nop
mov
sbb
lret
mov
fstp
add
stos
fdivrl
jecxz
mov
fbld
rclb
das
cmpsb
adc
dec
js
sub
xchg
jbe
cmc
push
mov
mov
add
cmp
je
icebp
xchg
pusha
rclb
mov
in
fs
adc
xchg
loop
movsl
out
cmp
inc
aaa
shll
rolb
arpl
fdivrl
pusha
daa
sub
mov
movl
mov
cmp
ja
inc
scas
dec
push
cld
fmuls
add
bound
repz
cmp
and
jnp
push
add
shr
bound
popa
inc
cmc
xor
int
std
lock
rcll
push
jg
mov
subl
subl
pushf
sub
or
pop
sbb
enter
xor
add
cmp
stos
pop
fcoml
and
xlat
mov
outsb
je
stos
call
jbe
cwtl
rcrb
aam
xchg
and
adc
push
jmp
xchg
dec
bnd
xchg
push
mov
pop
push
adc
fiaddl
nop
sahf
test
xchg
inc
sbb
ret
pop
dec
jmp
repnz
jns
jno
add
call
push
xor
imul
insl
insb
jnp
or
icebp
cmp
jg
mull
push
in
lcall
cmc
fldl
fdivl
cmp
int3
fadds
div
mov
push
jnp
inc
push
fbstp
push
lock
mov
xchg
movsl
data16
xor
add
pop
adc
ffreep
jle
out
inc
mov
ficompl
push
dec
push
call
ficomps
add
cmp
lock
push
mov
and
push
adc
ja
mov
leave
movsl
scas
or
mov
dec
jp
jae
andl
leave
in
inc
xlat
xor
js
hlt
loop
shl
popa
sahf
sbb
jae
pop
push
push
loop
adc
ret
xchg
pusha
pop
test
ret
adc
lcall
call
mov
mov
cmp
pop
repz
les
jge
andb
jmp
clc
lret
mov
leave
lods
xor
jb
sbb
or
pusha
mov
xchg
icebp
repnz
enter
subl
scas
pop
mov
push
out
fimuls
dec
push
dec
xor
dec
dec
and
test
lahf
dec
aad
cmp
mov
jne
and
lcall
sbbb
lea
sbb
pop
and
hlt
dec
aaa
or
jbe
je
adc
aad
sarl
out
inc
test
sbbb
jbe
jecxz
cmpb
sbb
cmp
adc
sbb
push
and
xchg
pop
adc
sbb
sub
fwait
into
addr16
push
add
xor
mov
xchg
mov
add
dec
je
mov
fs
orb
cs
aad
inc
adc
cltd
pop
jb
mov
inc
add
sub
sub
hlt
mov
loopne
shl
push
jnp
icebp
in
mov
lret
xchg
mov
bound
or
sub
shll
cmc
lret
pop
pop
in
add
sarb
lea
lahf
or
mov
in
jo
pop
or
mov
outsb
enter
pop
pop
cmp
adc
dec
push
dec
lret
pop
bound
mov
and
adc
clc
in
out
imul
mov
jbe
and
in
or
sti
fistpll
test
push
test
jae
inc
out
mov
stos
jb
mov
fprem
sbb
outsl
shrb
movsl
jae
js
sahf
mov
in
and
test
sub
mov
jns
stos
cmpsl
xchg
in
inc
jmp
cmp
or
adc
mov
cmp
jns
or
push
mull
adc
lret
cld
push
pop
pop
aaa
push
sub
mov
sbb
daa
jno
iret
sub
dec
or
xor
movsl
js
imul
test
in
or
sub
addr16
dec
enter
cmp
jg
shlb
sub
and
jl
pop
fsts
les
repnz
scas
popa
mov
jns
in
sub
ret
movsl
cld
cwtl
jno
jbe
sub
imul
aaa
push
dec
loope
pushf
jnp
pusha
mov
sbb
outsb
idiv
fs
out
pop
lods
adc
pmulhuw
jo
and
and
int3
xchg
sub
dec
or
cmpsl
cmp
pop
dec
jg
cmp
repnz
aad
popa
cmp
orl
sbb
pop
out
movsb
lret
arpl
iret
pop
loope
lods
loop
xchg
xchg
fmulp
mov
lods
iret
jl
mov
and
xor
lret
in
adc
hlt
fiadds
aam
mov
push
sbb
mov
cwtl
gs
inc
lcall
or
stc
push
pop
mov
dec
ficompl
jl
enter
xor
in
rclb
lods
popf
test
mov
scas
xchg
aam
sub
cmp
fnstsw
cli
sbb
test
inc
outsl
cmp
popf
pop
cltd
scas
dec
inc
pop
mov
jl
inc
cmp
arpl
jo
xchg
cld
xchg
pop
mov
or
cltd
imul
pop
gs
xor
ficompl
lds
ss
popf
add
es
adc
xor
pop
cmpsb
test
shrl
inc
movsl
dec
jp
cmp
pushf
imul
xchg
incb
mov
dec
popf
inc
mov
jbe
ss
mov
daa
sbb
std
push
mov
mov
mov
stc
test
pop
ds
cs
clc
fidivl
xchg
mov
sbb
rep
mov
cmp
pop
in
or
fisubl
scas
inc
inc
insb
push
mov
jae
dec
hlt
roll
into
jg
mov
jb
xlat
scas
xor
pop
cmp
adc
int
dec
movsl
fcoml
adc
fcoms
mov
inc
fisubs
xchg
mov
pop
sub
jmp
enter
mov
in
arpl
pushw
addl
mov
out
or
es
ret
mov
xchg
leave
js
in
and
jp
daa
pop
fldenv
cli
out
in
cmpsb
cld
pop
sar
lods
fbstp
push
and
test
sub
shll
sub
stos
sbb
push
jb
mov
fnstcw
add
sub
outsb
pop
sbb
in
lods
jb
pop
lahf
jmp
push
or
dec
cmc
test
adc
push
xor
adc
mov
pop
psubw
mov
int3
mov
pop
stos
jno
pop
jns
push
sub
adc
lahf
jle
inc
sub
cmpb
cmpsb
dec
and
iret
popf
add
rorb
mov
and
shl
lds
push
ror
ja
aam
push
xlat
out
iret
cmp
adc
in
movsb
ja
aad
add
sbb
shlb
mov
dec
mov
mov
mov
ss
xorb
inc
xchg
lahf
jmp
sbb
push
sub
scas
adc
sub
je
out
movsl
mov
dec
lods
jno
addr16
jo
adc
cmpsl
mov
ret
jmp
or
andb
mov
inc
sbb
cs
xor
sti
clc
pop
shrl
mov
adc
daa
pop
sahf
add
in
in
jno
pop
adc
adc
xlat
hlt
lret
cmp
loope
pop
sbbl
add
push
xchg
inc
scas
xchg
inc
insl
dec
filds
ror
ret
idivb
test
mov
leave
fmuls
pop
inc
lods
pop
mov
lds
mulb
call
gs
sbb
adc
and
jo
gs
mov
push
lds
hlt
mov
in
data16
xor
fwait
rclb
mov
xor
jne
icebp
les
xchg
inc
add
stc
and
repnz
test
sub
jno
inc
adc
lcall
icebp
pop
movaps
jmp
inc
push
xor
inc
xorl
add
call
in
stos
dec
inc
insl
mov
popa
pop
adc
cmp
sub
stc
adc
addr16
add
jne
sub
mov
mov
mov
and
add
icebp
subb
sbb
stos
enter
mov
inc
mov
mov
test
subb
les
mov
or
test
push
inc
jb
push
ret
dec
cld
mov
and
mov
out
nop
dec
push
mov
scas
sub
push
lock
inc
adc
mov
mov
movsb
sub
sub
ret
ljmp
jnp
fwait
mov
mov
or
test
sbb
loop
pop
add
add
movsb
dec
fcom
and
sti
adc
inc
cmp
rcl
movsb
or
mov
lods
push
or
cmp
mov
and
test
dec
lods
pop
out
mov
in
lcall
add
cld
sub
pushf
aad
pop
xor
inc
lahf
and
adc
add
pop
and
jmp
mov
sbb
jecxz
mov
pop
cltd
insl
jns
pop
icebp
sahf
xor
sub
lock
or
call
adc
and
mov
mov
push
jae
jnp
sub
xor
imul
sub
dec
jg
add
xor
mov
xchg
sti
test
orl
shrb
iret
add
repnz
add
inc
fs
mov
lret
mov
test
data16
mov
shlb
das
jp
lahf
cltd
shlb
xchg
ja
push
lret
sub
out
mov
shl
aas
rcll
jno
repz
mov
pop
in
in
pop
or
shl
mov
fidivs
mov
sbb
std
data16
and
std
aas
dec
shr
pusha
int3
jge
xor
loopne
xorl
xor
jmp
mov
push
fimull
xor
scas
imull
cmp
cmpl
push
insl
daa
jmp
mov
push
js
add
divl
lds
call
out
loop
adc
cmp
inc
shrl
loope
dec
loope
mov
add
cmp
jecxz
dec
test
cmp
sbb
jmp
or
rcr
and
add
js
imul
mov
and
into
and
sub
fildl
lahf
mov
xchg
aad
cmp
mov
outsb
mov
imul
jns
pop
xor
mov
push
sbb
ret
sbb
roll
rclb
test
push
mov
jno
cmp
aaa
test
test
inc
lea
shrb
xlat
mov
lods
iret
sbb
ret
fsts
cmpsl
filds
shr
ret
pop
mov
pushf
jp
pop
pop
aaa
jae
pusha
sub
add
out
and
nop
inc
and
fnstcw
lock
xchg
push
mov
mov
movsb
sbb
shlb
lock
inc
and
pop
jae,pt
out
sub
loopne
std
stos
jmp
iret
hlt
add
xchg
push
push
lea
in
sub
jle
ret
orl
adc
xchg
cmp
js
sub
cmp
in
jmp
push
push
mov
lahf
jp
stos
gs
inc
pop
sahf
jae
pop
test
add
pop
arpl
inc
and
jae
sbb
repnz
push
mov
xor
mov
jg
ds
mov
in
aam
inc
loop
push
sbb
cmpsb
fmuls
adc
lea
out
push
xchg
aam
pop
lahf
test
inc
test
sbb
xchg
pop
test
subb
rclb
pop
sub
xchg
ljmp
adc
ucomiss
ficompl
addr16
add
pusha
ret
mov
lea
repz
push
sub
out
pop
jae
jecxz
shrb
add
aaa
push
xor
pop
jne
jl
es
clc
fidivs
jmp
sub
sub
dec
insl
shr
inc
jp
fwait
data16
push
mov
into
inc
vmovq
sbb
jmp
mov
xchg
add
inc
sbb
test
sahf
int
jmp
aas
add
call
or
dec
xchg
ljmp
push
les
and
jmp
xor
mov
lods
and
aam
aam
or
cmp
test
dec
jnp
adc
push
xchg
or
push
adc
cmp
lret
ds
test
mov
sbb
sub
adc
or
frstor
test
jae
jp
je
dec
sub
scas
pop
inc
mov
negl
je
pop
xchg
cmp
xchg
and
xchg
or
sbb
sbb
sbbb
aaa
xabort
test
push
mov
mov
jge
cmp
rclb
fcoml
lea
xchg
fwait
rep
dec
push
mov
mov
sbb
jge
jge
mov
push
and
adc
movsb
aaa
sub
add
es
mov
je
cmpsb
jae
addb
xor
lods
rorb
shll
cmp
mov
mov
scas
lret
cmp
pop
ret
xor
lds
add
push
sub
mov
aas
fldl
mov
cmc
roll
repnz
and
mov
dec
push
dec
xchg
sub
fidivrl
mov
test
cmp
imul
ja,pt
addr16
out
cmpsb
int3
mov
ss
test
movsl
shld
pop
lcall
pop
nop
add
cs
xchg
cwtl
or
daa
orl
jae
insl
jmp
push
push
xor
mov
cmc
mov
filds
popa
int
push
and
das
lret
lds
push
sub
sbb
mov
dec
sahf
stos
mov
xor
es
sub
cmpsl
fdivr
inc
sub
mov
cli
jp
xchg
xor
fdivl
push
daa
fwait
mov
inc
ret
push
ret
or
cmp
add
pushf
subl
xor
push
hlt
push
inc
cmpsl
cltd
push
das
cmp
adc
xor
mov
and
cmp
add
shlb
hlt
popa
or
mov
and
jp
push
add
out
mov
ret
jb
cs
imul
inc
lcall
and
and
popa
cld
in
fsubp
sub
insl
pop
clc
jmp
inc
or
xor
jno
inc
cmpsb
fistps
scas
and
dec
inc
orl
mov
test
cmp
or
mov
mov
and
bound
jle
jb
pop
lcall
mov
scas
lret
sub
pop
xchg
das
pop
das
inc
adc
mov
pop
movsb
jae
into
dec
add
mov
stos
pop
sbb
cltd
push
inc
add
les
push
jp
dec
in
hlt
bound
dec
xchg
jl
push
dec
rcrl
push
push
subb
jle
mov
shlb
or
int
out
pop
gs
push
mov
daa
sub
inc
subb
sbb
test
push
sbb
shlb
jmp
adc
test
inc
divl
ret
inc
inc
out
add
push
and
sbb
movsb
ret
push
lods
fistps
lea
cld
inc
and
add
dec
cmc
cltd
pop
sbb
xchg
xor
lds
add
inc
lret
inc
cmp
push
xor
popf
aas
inc
add
pop
add
test
decb
mov
cmpsl
mov
loop
inc
dec
iret
add
fwait
mov
imul
scas
fwait
mov
cld
pop
lods
bound
cmp
aaa
cmpsb
int3
inc
stos
dec
test
in
or
insb
stos
cmp
push
mov
adc
adc
cmpl
enter
or
repnz
test
cmp
jg
test
stos
fildl
xchg
mov
addb
pop
addr16
clc
rcrl
ds
mov
push
cmpsb
imul
ret
pop
xchg
jmp
fistps
in
ljmp
nop
adc
mov
js
jno
jb
aad
das
adc
fs
push
div
inc
cmp
sbb
fcmovbe
outsl
inc
dec
jns
xor
inc
data16
inc
mov
fildl
sub
test
stos
inc
test
push
inc
inc
push
les
add
mov
cmc
jle
mov
rorl
inc
or
push
inc
add
enter
arpl
xrelease
loope
cmp
out
sbb
and
sbb
xchg
fcoml
jae
loope
popf
test
jnp
sub
jecxz
sahf
and
into
ficoms
lods
or
iret
pushf
adc
cmp
dec
je
push
mov
dec
movb
leave
pop
ja
out
sub
cmp
fstpt
push
out
dec
lock
and
xchg
cld
lods
pop
xor
xorl
xor
push
scas
push
outsl
das
sbb
je
mov
gs
lahf
jmp
cmp
jp
pop
xrelease
xchg
out
or
push
lcall
fbstp
lea
fcmovnu
mov
andb
push
outsl
punpckhdq
adc
pusha
popa
mov
test
add
adc
mov
repnz
xor
sub
jnp
inc
xchg
cwtl
or
int
notb
mov
push
in
mov
and
or
mov
lret
loope
cltd
add
mulb
jge
mov
in
adc
lret
mov
sub
arpl
repz
or
rcrb
add
jae
or
call
inc
fistps
pusha
xorb
jl
pop
imul
or
je
shl
adcb
push
add
adc
xor
lods
jns
jns
pop
lods
sbb
sbb
jne
add
mov
pop
jnp
and
sbbl
outsb
jl
mov
adc
imul
dec
daa
repz
push
xorl
xor
push
scas
ret
stos
xor
mov
lcall
pop
sub
mov
loopne
scas
inc
inc
mov
adc
outsl
xchg
inc
add
mov
ljmp
inc
xlat
movsb
out
add
sub
push
sahf
data16
dec
jb
data16
int3
outsl
pop
js
pop
inc
xor
dec
push
dec
push
loope
add
jb
and
sti
mov
arpl
scas
and
pop
and
data16
mov
idivb
aas
xchg
outsl
sub
sbb
dec
mov
mov
mov
aaa
jge
fadds
inc
mov
pushf
sahf
iret
leave
sti
sub
test
sbbb
inc
clc
mov
in
jle
andb
adc
and
mov
sbb
mov
arpl
mov
stos
dec
push
enter
daa
push
pop
insb
cmpsl
mov
pop
mov
test
loop
lea
xor
xor
out
inc
mov
mov
inc
fwait
adc
call
dec
sub
and
or
test
mov
pop
dec
dec
mov
mov
iret
adc
out
inc
push
pop
or
outsl
js
sbb
scas
add
adc
out
loop
pushf
fcmovb
add
repnz
adc
movsl
jg
xor
and
addr16
das
jp
adc
push
dec
add
iret
mov
cltd
std
test
out
sbb
mov
pop
mov
lret
loope
fisubrl
clc
cmpsl
inc
jge
pop
fadd
inc
xchg
std
push
inc
inc
in
out
in
bound
dec
aas
xlat
sub
dec
dec
or
stos
xchg
xchg
insb
pushf
and
test
aaa
sbb
xor
inc
cmp
roll
and
xor
mov
cmp
int3
push
test
out
into
pop
popf
xchg
mov
xchg
mov
sub
xor
or
dec
loope
xchg
cltd
xchg
mov
jne
aad
mov
mov
jo
and
clc
lock
adc
leave
out
js
pop
sub
sbb
outsb
cmp
aas
out
or
adc
mov
mov
inc
rcrb
int
mov
fadds
test
xchg
mov
enter
lret
jecxz
inc
insb
loop
adc
mov
clc
icebp
enter
sbb
inc
in
cmp
dec
mov
add
mov
jno
aas
push
inc
pop
mov
mov
mov
adc
mov
sbb
adc
insl
sub
sub
mov
cltd
lds
data16
mov
jle
popf
not
ja
adc
nop
movb
sbb
lea
sti
jns
cmp
cmp
xor
xchg
gs
mov
push
nop
xchg
in
ss
fildll
add
lahf
shl
das
and
mov
rol
lock
and
add
mov
mov
lods
out
or
mov
xlat
int3
adc
fs
mov
jge
mov
lret
repz
in
mov
add
pushf
test
jge
dec
iret
xor
jg
test
popa
pop
push
test
jl
sub
xchg
xor
dec
dec
divl
cwtl
sub
stc
pusha
shrl
dec
jmp
inc
shrb
mov
arpl
pop
sub
fildll
mov
push
cltd
add
mov
dec
ljmp
add
loope
mov
lds
stc
pop
lods
inc
fmull
push
lcall
cmpsl
outsl
aaa
lahf
mov
pop
pop
shlb
xor
cld
dec
pop
repnz
xor
jnp
dec
and
push
imul
stos
mov
mov
inc
pop
add
loop
sub
mov
sub
stos
mov
movsl
pop
mov
call
gs
mov
imull
pop
loope
add
jb
add
dec
sub
lahf
iret
xchg
fstpt
fcompl
sub
inc
aaa
inc
add
dec
shl
imul
mov
sbbl
adcb
push
inc
clc
out
xchg
xchg
loope
mov
mulb
lods
inc
mov
sahf
int3
arpl
out
inc
aas
and
mov
xor
int
sbb
fcompl
cmp
shll
dec
sti
mov
pop
loope
add
mov
jp
cmp
dec
and
inc
sti
enter
xlat
jo
scas
icebp
in
repz
or
popa
dec
lea
xor
pop
sub
insb
popf
in
dec
mov
mov
xor
lods
mov
xchg
or
sbb
sbb
or
pop
movsl
cwtl
enter
invd
mov
lods
arpl
orb
xorl
fincstp
and
leave
mov
xor
mov
pop
subl
movsl
or
xchg
mov
inc
jmp
aas
ljmp
sahf
popa
pop
add
ret
or
xor
stc
add
sti
lahf
in
and
sbbl
mov
lds
cs
mov
jnp
push
adc
mov
jecxz
mov
out
xor
test
test
jae
xchg
jb
mov
cld
jg
js
xchg
xchg
nop
mov
stc
sbb
xor
jp
into
xorl
dec
adc
xor
mov
mov
lods
into
movsl
rorl
push
push
leave
mov
jns
inc
mov
cmp
xchg
jp
pushf
cmp
xor
jae
dec
adc
outsl
addb
push
sub
loope
and
jb
inc
adc
mov
xchg
lea
mov
or
notl
xchg
mov
leave
push
or
add
jnp
inc
and
add
outsl
loopne
repnz
mov
wrmsr
fs
add
mov
inc
sub
popa
xor
std
sub
loop
fdiv
or
and
sub
test
dec
adc
dec
aad
ljmp
in
xor
cmp
cli
jge
xchg
rorl
xor
pop
mov
fcompl
adc
int3
jmp
vhsubps
filds
and
stos
imulb
mov
adc
jg
pop
push
sub
and
lock
aam
cmp
add
cwtl
jle
inc
addps
xchg
jp
adc
out
ja
jno
push
mov
mov
add
fisttpll
sbb
xchg
ljmp
ror
cs
sti
fldl
mov
sbb
addr16
cmp
data16
scas
gs
adc
mov
add
jge
aad
jne
push
inc
push
rorl
cmp
push
aas
lcall
iret
dec
jns
cmpsb
fcomps
mov
mov
xchg
cli
add
orps
into
sbb
adc
sub
add
push
or
dec
inc
inc
sub
mov
rolb
push
jns
imul
bnd
xchg
test
std
das
xchg
mov
xor
cli
fnstcw
xor
aas
mov
je
add
jnp
test
pop
xor
dec
repz
sbb
jns
push
push
ds
xchg
mov
xorl
cmc
je
and
fisubs
xchg
lods
out
sbb
sbb
fiadds
sub
and
jl
in
mov
stc
jo
xchg
mov
arpl
xchg
add
push
out
cmp
mov
in
or
nop
jo
bound
push
loopne
sbb
ja
lret
sub
pop
aaa
xchg
xchg
faddl
fnstenv
jns
int3
xor
lcall
out
xchg
add
leave
xlat
lret
mov
roll
fisubs
in
mov
or
fwait
jg
lods
inc
sub
je
sub
pop
sub
loop
movsb
jl
fdivs
pop
in
aam
sar
out
fildll
addr16
aaa
mov
sbb
mov
stos
icebp
xchg
leave
shlb
mov
aad
movsb
or
int
call
ss
icebp
dec
fstpt
int3
pop
lcall
mov
enter
dec
aam
loop
stos
test
shl
jo
push
dec
imul
pop
test
mov
push
sub
fs
sub
fmuls
gs
out
flds
lret
push
fnstsw
sahf
cmpsb
add
int
lret
or
iret
imul
shrb
mov
fwait
ljmp
pop
sub
call
outsl
mov
jnp
add
shll
rcl
loopne
adc
dec
popa
xorl
push
in
add
cwtl
adc
data16
scas
jns
iret
out
gs
jmp
enterw
mov
addr16
orl
int
inc
shll
jns
rclb
loopne
push
aam
sahf
dec
inc
mov
pop
sub
mov
imul
pusha
ss
jne
sbb
loope
lfs
sbb
push
jno
push
and
lock
jmp
adc
mov
dec
lret
or
sbb
push
je
lahf
inc
es
mov
pop
mov
in
loope
aaa
in
ds
sahf
pop
mov
arpl
sbb
ja
scas
pop
mov
dec
jle
push
mov
hlt
adcl
pushf
push
ds
sahf
push
adc
or
and
insl
cmp
jmp
adc
adc
jb
add
testb
ljmp
test
mov
fmull
loopne
xchg
xor
inc
xlat
lahf
stos
shrl
push
test
loop
push
xchg
js
fiaddl
cld
loope
push
sbb
inc
pop
pop
cs
cmpsb
popl
adc
test
push
pushf
mov
out
pop
out
push
out
push
fcmovnu
cltd
and
jmp
xchg
xor
rclb
in
cmc
test
cmc
push
rorl
xchg
jo
cmp
push
inc
wrmsr
and
enter
mov
sub
aas
mov
ljmp
or
inc
in
adcl
test
pop
xor
movsb
lahf
and
cmp
or
lret
pop
pop
mov
or
jnp
cltd
daa
add
or
push
add
mov
pop
xlat
mov
mov
movsl
inc
insl
hlt
push
cltd
insb
mov
pop
adc
pop
ja
sbb
out
stos
stos
ss
rcll
aam
int
fcoml
pop
outsb
or
movsl
push
rorb
mov
adc
cltd
and
cmc
clc
out
push
inc
push
jge
sub
in
push
xchg
and
jp
jns
jge
sub
adc
popa
int3
mov
dec
xor
add
cmp
or
pushf
fmul
sbb
js
fiadds
xor
add
mov
dec
mov
lods
or
enter
xchg
icebp
jle
sub
push
gs
mov
jo
mov
fstl
roll
ljmp
aam
clc
mov
fwait
rorb
stc
ljmp
cmp
mov
mov
mov
mul
pop
mov
jp
jmp
mulb
out
add
cmpl
test
das
xor
xchg
jnp
loope
add
ret
add
cmp
stos
mov
popa
push
mov
nop
ss
cmpsl
fistl
cmp
or
dec
outsl
lahf
pop
push
rcrl
sub
sbb
xchg
inc
sbb
lret
rorl
div
in
andl
shrb
xchg
shll
mov
stc
mov
mov
mov
nop
dec
bound
xchg
lods
test
push
jmp
lods
jp
ja
call
mov
xor
pop
loop
mov
dec
out
pushf
cmp
movsl
push
into
jle
sub
adc
je
xchg
mov
aad
push
test
jge
mov
pop
pop
jle
dec
inc
or
ret
jne
inc
lahf
popl
jo
shl
mov
or
mov
ret
and
dec
fcompl
add
mov
inc
int3
popa
sbb
cli
jp
adc
cmp
adc
addr16
lea
adc
popf
jmp
mov
jae
cli
stos
nop
into
test
decb
cmp
ss
jp
stc
push
mov
push
mov
adc
sbb
jo
xchg
rcrl
mov
mov
sbb
sub
xchg
je
sbb
es
sbb
bound
xchg
sbb
sub
dec
xchg
cmc
mov
clc
setge
repnz
fimull
lods
sbb
adc
outsb
jno
data16
repnz
jmp
shl
pop
push
sbb
movsl
stos
or
jp
push
sub
xor
repz
stos
lret
ret
sub
shll
in
cld
fsubp
iret
shll
add
or
lret
cli
jmp
push
in
clc
inc
mov
shl
orl
inc
test
cmpl
mov
aad
or
mov
and
in
jge
xchg
inc
sub
repnz
test
mov
ljmp
mov
xchg
sub
enter
or
mov
add
push
xchg
inc
lock
mov
jno
xchg
iret
pop
push
lahf
idiv
cmp
lea
fnsave
mov
dec
repnz
loopne
adc
add
and
popa
sub
mov
gs
outsl
pop
mov
test
mov
adc
or
push
mov
js
add
int3
and
into
popf
leave
outsl
pop
mov
loop
imul
jle
adc
cmc
xlat
lahf
in
aas
outsb
add
push
sub
add
stos
scas
and
adc
scas
and
out
scas
xchg
pop
pop
fstps
xor
cmc
test
mov
inc
movsb
xor
rcrl
je
jb
xor
push
mov
push
lcall
add
fadd
and
adc
cmp
out
mov
or
push
int3
fsubrp
aad
jmp
inc
push
dec
pop
inc
inc
push
jns
mov
or
ljmp
stc
sbb
mov
cmpsb
and
loopne
cmp
push
push
sbb
pand
jecxz
push
cmp
sti
shrl
add
rcll
test
in
add
rorl
fwait
mov
xor
jmp
test
sahf
dec
jmp
int3
das
insb
mov
sub
repnz
divl
insl
testb
mov
lods
mov
and
pop
iret
out
movsl
jbe
sub
imul
out
push
outsb
jo
inc
mov
idivl
mov
test
sub
mov
bound
mov
ret
js
add
xchg
xor
or
xchg
cmp
in
jnp
test
nop
pop
cld
stos
out
in
or
data16
iret
out
mov
mov
fistl
cmp
jb
xchg
std
arpl
dec
or
cli
cmp
or
aaa
into
inc
out
call
repz
mov
in
es
jae
adc
mov
jne
and
popa
jp
mov
shl
mov
loop
data16
push
xlat
leave
or
stos
xchg
and
cmpsb
and
arpl
pop
cmpsb
das
jp
push
fstl
mov
insl
aad
ljmp
jecxz
xchg
test
cmp
shrb
inc
adc
sti
dec
sub
divl
insl
sub
dec
outsb
cmp
fwait
loopne
fidivrs
push
sbb
add
popf
cmpsl
or
insb
jp
jbe
xchg
xchg
xor
mov
imulb
inc
dec
lock
adc
clc
inc
invd
scas
scas
push
cmp
add
add
xchg
pop
call
pop
cmpl
sub
mov
enter
push
fistpll
xchg
push
xchg
rolb
insl
jne
pop
sti
dec
rcl
push
dec
mov
and
lods
sbb
mov
jns
enter
jmp
aas
push
or
xor
ja
std
sub
leave
or
outsb
mov
mov
repz
fsubrs
popf
pop
test
jl
mov
sub
sbb
mov
aam
into
mov
pop
sub
or
cltd
movsb
dec
or
push
int3
mov
dec
xchg
jbe
shrb
inc
movsl
dec
adc
mov
out
test
mov
insb
sub
pusha
subb
fwait
push
stos
mov
cli
inc
out
sub
add
dec
mov
sub
xchg
cmpsl
mov
ljmp
jl
xchg
jns
mov
inc
add
fucom
aam
in
shr
test
shrb
xor
inc
loopne
gs
jne
xlat
inc
inc
mov
aam
dec
and
pop
popf
inc
sbb
push
or
jmp
js
mov
push
jno
test
hlt
mov
sub
xchg
repz
adcl
arpl
paddq
ds
insl
push
cmc
mov
mov
xchg
or
ja
xchg
les
dec
push
insb
adc
clc
stos
jecxz
out
push
repnz
mov
iret
lcall
loop
ja
imul
dec
cmc
fwait
sbb
loopne
xchg
cli
inc
lods
mov
and
xchg
dec
les
inc
push
mov
int
mov
cltd
fs
mov
jp
stos
sub
dec
mov
sbb
or
lcall
adc
fsubrs
and
dec
push
in
dec
inc
outsl
cli
mov
movsl
repnz
ja
mov
xor
or
mov
fstps
pusha
mov
sub
gs
add
inc
cli
hlt
imul
fwait
xchg
push
aas
or
lret
arpl
mov
es
jnp
jmp
adc
xor
cmpsl
add
icebp
push
xchg
cmpsl
or
inc
xchg
movl
lods
movsb
gs
inc
add
dec
mov
and
cmp
add
pusha
mov
fs
cltd
push
ds
pusha
xchg
outsl
es
xchg
sub
insb
jmp
pop
jl
xor
repnz
pop
stc
mov
fcompl
sbb
dec
int
and
mov
push
push
and
pop
sub
or
cs
pop
cld
lret
jp
stc
pop
or
xor
mov
fs
jmp
out
adc
loope
hlt
pop
adc
ficompl
sub
inc
sbb
mov
iret
pop
jns
out
aam
xchg
jbe
mov
mov
test
arpl
mov
sti
or
popa
out
push
inc
add
xor
mov
aaa
cld
jg
stos
mov
data16
sub
ficomps
dec
sub
ja
ja
scas
es
outsl
dec
jb
adcl
dec
push
je
mov
rorl
inc
adc
sbb
xor
rcll
xchg
hlt
call
jp
jnp
xchg
cli
mov
add
dec
insb
mov
sbb
adc
cmp
pop
gs
inc
pop
inc
xor
ret
movsb
fbstp
sti
flds
mov
fcmove
test
mov
xor
test
test
or
mov
xor
dec
push
dec
push
clc
jae
call
fs
stos
xchg
icebp
push
imul
pop
cmpsl
les
add
dec
iret
out
or
clc
in
sbb
pop
iret
or
push
cmpsl
idiv
out
xchg
mov
je
push
sarl
fistpl
pop
js
scas
fsubrs
aaa
clc
jle
lcall
es
rol
and
and
lcall
stos
jbe
dec
push
mov
pop
aad
fsub
int3
inc
stos
rcll
xchg
xor
aaa
fdivrl
jb
sub
lahf
sub
or
sahf
xchg
mov
ss
or
or
mov
mov
icebp
cmp
mul
adc
pop
rolb
lcall
add
ret
push
push
nop
jbe
xor
out
test
daa
mov
sub
xchg
jnp
decl
mov
adc
push
xor
sub
pop
cld
push
hlt
pop
sub
cmpsl
call
sbb
jns
flds
cmpsb
repnz
cwtl
cltd
xchg
cld
orb
dec
add
add
ret
push
mov
cli
out
sub
bound
leave
repnz
pop
mov
lret
or
inc
idivb
icebp
pop
mov
test
pop
mov
repz
roll
mov
adc
shll
mov
cmp
movsb
je
pushf
mov
mov
mov
fsubrs
mov
scas
jle
dec
and
in
shll
dec
into
movsb
loope
xchg
add
mov
in
idivb
jns
idivl
insl
incl
test
aad
inc
add
inc
adc
pushf
mov
movsl
cmp
adc
add
sub
dec
shr
dec
sbb
fs
fucomip
xchg
or
add
out
mov
sub
pop
or
and
push
int
inc
test
lock
mov
mov
pop
imul
cltd
sbb
dec
sahf
xchg
outsb
imul
sub
mov
test
mov
aaa
sbb
mov
movsl
andl
and
mov
xor
mov
in
sbb
or
or
call
pop
jecxz
xor
add
out
mov
push
rorb
sti
push
leave
cld
insb
cmpb
arpl
mov
push
clc
push
mov
in
rolb
pop
cmp
stc
loope
jne
mov
sbb
insb
in
out
repnz
repz
aas
sub
and
into
sbb
sub
or
and
xchg
jno
insb
imul
cs
cmp
repz
iret
mov
sub
cmc
mov
ds
xchg
ljmp
or
out
cmp
scas
add
fnsave
rcrl
jnp
testl
lock
aaa
jecxz
and
pop
insl
pusha
fs
dec
repz
and
int3
pop
mov
testl
jp
and
mov
es
dec
cmp
xor
or
daa
outsb
lret
fistpll
add
mull
enter
js
or
mov
adc
int
jmp
inc
popf
jns
inc
mov
insb
xchg
push
pop
stos
ja
mov
and
nop
insb
mov
pop
jle
sub
jecxz
and
dec
push
jge
mov
loop
or
push
icebp
outsl
mov
mov
ret
jne
sub
sub
into
jle
sbb
cmp
push
ljmp
fmuls
lods
add
adc
mov
adc
jns
xor
pop
xchg
orl
pop
aad
push
adc
jecxz
test
imul
ljmp
and
sti
jecxz
cli
js
loop
imul
xor
cmpsl
mov
movsl
xor
dec
xor
sub
test
xor
adc
test
testb
dec
bound
push
rcrl
dec
jns
mov
mov
mov
ffreep
outsl
insb
xlat
movsb
dec
pushf
mov
stos
fsubr
xchg
mov
loopne
push
adc
int3
ret
inc
dec
rcl
add
daa
adc
inc
les
stos
mov
das
cltd
sub
shll
inc
ljmp
pop
sarb
dec
inc
jp
pop
movsl
sti
lret
push
jmp
insb
iret
es
mov
dec
idivl
sub
push
movsl
ficoms
fstps
adc
jns
xchg
adc
adc
mov
sti
jb
mov
inc
test
cmp
add
insl
scas
xchg
fidivs
adc
fisubl
cmp
lcall
ljmp
pop
jno
add
pushf
pushf
sahf
cmp
dec
int
addl
es
xor
fidivl
fmuls
jp
movsl
sub
out
xor
mov
rcrl
fbstp
aas
daa
dec
xchg
lahf
divl
mov
mov
out
mov
in
and
addr16
cmp
rolb
insb
push
cld
lods
xchg
add
incl
mov
and
lods
dec
imul
xchg
or
lds
push
icebp
jnp
mov
mov
mov
sub
and
and
mov
std
je
inc
push
pop
xchg
lea
decl
fsubrp
sbb
jmp
clc
add
xchg
sahf
dec
mov
dec
cmp
push
mov
lds
scas
xor
mov
xor
imul
stos
xchg
mov
lods
femms
cmpsb
mov
inc
adc
cmc
in
or
loope
adc
insb
repnz
and
rclb
fiadds
cmp
movsl
out
mov
iret
add
scas
cmpsl
clc
ret
adc
call
test
jbe
adc
pop
push
push
es
fwait
jp
lods
inc
jno
in
adcl
cld
dec
leave
sbb
add
adc
inc
cmpsb
stos
xor
ja
jmp
daa
outsb
fstps
mov
test
imul
fdivrp
cmp
sub
pop
out
or
ljmp
stos
or
mov
xor
inc
sbb
push
jp
pop
dec
sub
inc
int
pop
ss
and
sbbb
lds
push
std
lods
shlb
push
adcl
fsubrl
add
xchg
mov
or
mov
cmc
icebp
gs
jecxz
cmp
jne
or
jae
fadds
xchg
cmp
lcall
lcall
pop
jmp
cmp
pop
mov
cmpsl
add
pop
insb
pop
mov
inc
mov
cmp
pop
or
loop
lahf
xchg
pop
inc
push
push
mov
add
mov
in
int3
scas
adc
cs
jle
lods
adc
mov
imul
call
insb
mov
push
push
adc
cmp
xor
in
xor
aaa
xchg
les
inc
pop
out
cmpsl
nop
cmp
xchg
out
inc
imul
clc
sub
pushf
inc
push
and
add
jno
mov
pop
mov
sbb
js
or
pop
in
mov
pop
je
js
ljmp
lods
dec
mov
pushf
lds
add
push
xchg
push
xchg
xchg
in
rolb
adc
popf
dec
cltd
leave
adc
cs
mov
dec
aam
out
jp
es
cwtl
mov
cmp
cld
bnd
mov
fcoms
out
inc
or
jp
mov
or
out
popl
lock
add
loopne
aad
mov
pop
push
xor
mov
stos
dec
testb
push
out
add
js
jno
jle
adc
and
mov
outsl
pop
and
out
sarl
sbb
jb
xchg
gs
inc
into
push
mov
add
leave
dec
pop
xor
in
or
les
sub
push
or
sub
in
loop
outsl
insl
and
xor
push
cwtl
sub
inc
das
xchg
xor
add
ret
add
jecxz
rorl
mov
mov
and
cmp
out
jns
mov
sete
mov
cmpsb
nop
popf
inc
imul
mov
push
add
icebp
movb
adc
xchg
adc
dec
lret
jecxz
int
mov
add
call
or
lahf
lods
cli
adc
in
sub
and
inc
gs
add
push
stc
inc
mov
shlb
sub
imul
cmp
push
sahf
push
lds
pop
sub
rclb
xchg
lcall
out
std
lds
in
subl
cltd
daa
ds
cs
and
test
dec
fdivp
cmp
sub
inc
push
push
fidivrs
push
mov
test
ret
imull
fiaddl
inc
mov
pop
xchg
cwtl
ret
add
mov
mulb
imul
decl
loope
int
aas
hlt
cmpsl
cld
pop
scas
sub
movb
xchg
pop
adc
adc
loope
xchg
mov
xor
dec
es
lea
or
call
fldenv
xor
cltd
jle
sub
out
xchg
inc
xchg
jp
add
jmp
cmp
jo
sti
sub
add
xchg
and
scas
pop
iret
sub
push
in
call
inc
jecxz
aas
mov
out
jl
outsl
mulb
jne
fcoms
or
xchg
shrl
out
lods
mov
jg,pt
mov
js
arpl
rorb
adc
mov
pusha
ret
shl
xor
dec
subb
stos
cmp
movsl
adcb
mov
pop
hlt
scas
push
jmp
sbb
out
scas
stc
inc
loopne
dec
mov
mov
pop
out
or
pop
dec
jmp
inc
pop
aas
ja
cmp
lock
inc
or
mov
or
sub
inc
stos
popaw
jns
jb
pop
outsb
jecxz
arpl
nop
pop
das
or
imul
decb
fisubrs
push
cmpsb
ss
sub
jno
popl
leave
cmp
xchg
cld
inc
inc
icebp
lahf
or
or
inc
popf
sti
dec
jmp
ja
cld
pop
xchg
pop
mov
jne
mov
sbb
xchg
xor
cmc
insl
cmp
lret
pop
int3
cmc
pop
movsl
mov
cmp
xchg
test
fs
pop
nop
imul
rorb
add
and
loopne
jl
and
add
sarl
cmpsb
daa
add
ficoml
repz
jne
shl
xorb
push
xor
mov
or
arpl
ljmp
ljmp
add
das
dec
mov
or
loop
mov
xor
jnp
jecxz
hlt
mov
mov
mov
mov
je
incl
or
xchg
testb
cs
out
sarb
arpl
add
outsb
pop
inc
sub
les
xchg
mov
loop
sbb
cltd
jno
jle
jl
push
lret
and
jno
dec
daa
fldcw
add
add
ret
ljmp
jp
insw
push
push
lods
leave
dec
loope
sbb
cmpsl
sbb
pop
ficoml
testl
jge
xchg
mov
shll
idivl
dec
push
xchg
enter
mov
rcl
incl
jnp
pop
mov
sub
xchg
out
mov
cli
and
push
inc
divb
int
cmp
push
out
jl
movl
xor
or
fdivs
xchg
mov
cli
cmp
ror
imul
ret
clc
repnz
aaa
divb
jo
dec
fwait
out
or
mov
add
std
sbb
mov
mov
pop
fwait
inc
fildl
sbb
ja
stos
outsb
adcl
mov
jns
push
pop
pop
adc
sbb
sbb
fidivl
inc
mov
test
gs
xor
inc
mov
lret
xor
pop
xor
loop
mov
pop
mov
rcrl
nop
xchg
mov
ds
cmpsl
imul
fstpl
dec
insb
pushf
xlat
int
xchg
and
mov
pop
inc
das
cltd
jmp
mov
jmp
repz
or
mov
mov
lret
mov
sbb
or
gs
aam
xchg
jp
popf
and
pop
inc
mov
je
add
adc
lds
hlt
ljmp
nop
ljmp
mov
aam
mov
jbe
icebp
fisttps
movsl
and
dec
xor
push
in
cmpsb
ficompl
mov
dec
xor
push
nop
jge
mov
mov
es
cmpsl
lret
shlb
cmp
das
fs
push
js
sub
dec
js
sbb
mov
cli
rcr
fiaddl
dec
xor
mov
add
loopne
inc
xchg
or
loope
mov
or
or
mov
in
cwtl
push
add
stc
xor
out
cmp
mov
or
rcll
insl
ss
push
popa
cmp
mov
mov
and
test
inc
imul
sahf
mov
push
add
les
aad
or
pusha
pushf
divl
pusha
insl
xor
pop
icebp
cmp
add
ljmp
data16
lods
jb
sarb
fsubl
scas
std
ret
mov
or
adc
mov
dec
xchg
push
and
addr16
dec
mov
sub
lret
fcomps
fstp
xchg
sbb
out
shll
adc
mov
popa
mov
fnstenv
nop
mov
xlat
les
push
mov
sbbl
loope
test
xchg
mov
dec
xor
out
cmp
outsl
js
mov
aas
mov
insb
xchg
int3
sbb
mov
or
gs
dec
or
xor
mov
outsb
pop
imul
lods
jns
sub
mov
test
jae
sub
scas
cmc
lret
enter
mov
ds
ret
pop
xchg
cmpsl
arpl
cs
jns
mov
jle
cmp
mov
sbb
mov
loope
divl
pop
sahf
add
mov
add
lahf
xchg
leave
pop
jne
mov
and
adc
dec
fs
je
fadds
iret
jecxz
cmp
test
idivl
mov
sti
imul
sub
mov
loop
shrb
cmc
jae
lea
sti
jg
cli
loope
or
xchg
inc
mov
mov
insb
cmpsl
sarl
popf
xchg
push
jno
jae
rcl
gs
push
mov
xor
cld
cmpsb
dec
push
or
leave
stc
xor
pop
or
or
pusha
outsb
mov
cwtl
stos
jne
daa
cmp
addr16
mov
fs
cld
mov
push
in
bt
fisttpl
mov
mov
popa
in
sti
jo
inc
stc
out
ja
pmuludq
dec
mov
adc
loop
cmp
adc
xor
or
mov
adc
add
adc
nop
in
xor
sbb
and
lods
sub
inc
pushf
mov
lret
add
ficompl
pop
cld
das
pop
rcrl
add
int
ficompl
cli
dec
jbe
xor
fdivl
stc
shlb
ss
add
xchg
push
aam
ffree
test
subb
cmp
fmuls
mov
cwtl
and
and
fisttpll
rol
or
xlat
cwtl
aam
adc
jecxz
mov
ds
imul
jge
scas
cmpb
out
mov
loopne
ds
repz
jg
scas
add
ja
pop
fisubrs
lahf
fucomp
and
jp
shlb
dec
xorb
int
lock
jb
test
cmp
push
fldcw
ds
popa
cmp
mov
push
mov
add
cmp
jno
mov
aad
push
outsb
in
test
jno
jmp
cltd
fs
mov
add
sbb
inc
in
pop
and
or
stos
imul
add
jl
sub
fstp
inc
sbb
dec
loop
mov
mov
sti
xlat
lods
popa
jbe
iret
inc
shll
push
into
scas
dec
sbb
push
sub
int3
add
mov
cmp
stos
adc
jbe
cmp
inc
dec
out
jle
cld
pop
insl
cmp
neg
loopne
dec
push
mov
test
rorb
and
cmc
flds
das
jl
xchg
cwtl
jl
into
mov
imul
fidivrl
js
fsubrs
xor
mov
movl
adc
dec
ljmp
jecxz
stos
jns
lds
push
jp
inc
cld
mov
or
sbb
push
pop
mov
sti
aas
out
dec
jbe
inc
sbb
xlat
negb
adc
scas
das
adc
jge
daa
mov
imul
sub
mov
xchg
lds
clc
pop
lods
cmpsl
xchg
dec
rep
or
mov
enter
je
mov
lret
jl
inc
jns
push
sbb
arpl
cmpsb
inc
movb
xchg
shll
hlt
and
dec
in
push
std
inc
cwtl
hlt
in
inc
sbb
outsb
push
mov
pusha
icebp
dec
add
in
lds
xor
imul
push
cmp
cltd
pop
adc
ret
movsb
xor
mov
loope
inc
dec
xor
or
dec
out
mov
lcall
loop
sbb
pop
push
mov
in
inc
lods
pop
pop
dec
cmp
pop
cmp
push
dec
jo
sub
ja
push
rcrb
sti
outsb
pop
xorl
sbb
or
sti
shll
mov
pop
pop
imul
es
adcl
stos
scas
cmp
jg
daa
out
psubd
sbb
sub
aam
fstpl
mov
leave
scas
cmp
cmc
mov
jle
xorl
mov
mov
sbb
icebp
and
sbb
adc
das
dec
jo
in
xor
lock
in
enter
lahf
sahf
xor
xor
sbb
testb
inc
insb
call
ss
mov
jns
imul
mov
and
sub
fs
jb
shrl
roll
dec
repnz
cmp
lret
test
or
push
dec
cmpsb
cmp
or
lahf
lret
jge
cli
pop
cld
push
or
pop
rcll
lea
inc
ret
lret
mov
sub
loop
into
inc
mov
xlat
pop
loopne
or
cmc
mov
fistpl
test
mov
mov
push
jmp
dec
outsb
mov
out
fstps
cmp
cmp
jg
mov
adc
inc
inc
cmc
fisubs
sub
stos
sbb
loope
sbb
cmpsl
mov
pop
push
adc
cmp
movsl
dec
xchg
push
popf
mov
insl
sub
inc
inc
fiaddl
or
nop/reserved
test
pop
or
cmp
test
inc
push
fiadds
stos
lock
push
aad
jbe
test
loopne
or
mov
cmp
shl
pop
xchg
popa
add
mov
popa
mov
and
int3
loopne
push
insb
dec
pusha
dec
lods
ret
fsub
push
movsb
sbbb
xchg
xor
insb
shlb
cltd
xchg
push
clc
mov
jne
adc
or
movsl
jnp
sbb
ds
add
dec
mov
sub
sbb
xor
or
divb
and
push
repz
ss
mov
test
pop
adc
xchg
and
push
pop
cmpsl
or
decl
add
mov
arpl
arpl
xchg
ss
and
aam
movsl
adc
push
hlt
outsl
push
push
sub
data16
lods
push
dec
pop
testb
in
idivl
xchg
out
or
xchg
ljmp
mov
inc
mov
stos
add
mov
pop
popl
cmp
mov
rcrl
pop
dec
jge
cwtl
push
jl
inc
cwtl
loop
or
push
xor
sub
shll
call
xlat
xorb
add
icebp
and
inc
fdivrs
add
add
es
out
cmp
scas
fsts
loopne
push
sbb
sub
sbb
lods
jmp
adcb
sub
xorb
es
mov
add
fstl
fcmovu
popf
xor
mov
mov
int
ss
out
sahf
aas
call
jb
inc
gs
mov
in
test
jae
xchg
fnsave
pop
mov
push
mov
inc
repz
ja
addr16
loopne
jne
cmovle
cmp
pop
cmp
les
pop
lods
mov
jnp
inc
mov
sub
cld
mov
ret
fstpl
jecxz
or
call
push
add
das
call
jle
inc
dec
cmpsb
push
ret
and
xor
and
inc
stos
adc
dec
jge
loop
sbb
inc
mov
lods
push
xor
xor
adc
sbb
pop
dec
add
and
pop
cmp
ficomps
push
insb
add
xor
inc
or
dec
mov
lds
jno
push
aaa
pop
popa
loope
xchg
stc
lods
xor
mov
pushf
sbb
inc
scas
cmp
dec
xchg
cli
pop
pop
jg
inc
pop
mov
or
xor
stc
movb
and
into
fucomi
add
fadds
lods
std
xor
insl
out
insl
loope
enter
cmp
rcr
xor
psrld
ljmp
insb
sti
loop
in
sbb
inc
mov
mov
rclb
xlat
jmp
cwtl
jl
into
mov
xor
lret
xchg
xchg
int
inc
rorl
cmp
int3
sub
mov
aad
jp
cwtl
lea
fcomps
pop
xchg
inc
mov
ror
jae
test
mov
lds
icebp
lret
xchg
sbb
test
nop
ficoms
mov
test
cld
leave
cmc
test
jae
cmpsb
mov
fdiv
insb
das
mov
mov
mov
or
insb
dec
sahf
and
pop
sbb
loope
ss
inc
jl
daa
test
test
repz
shr
dec
cltd
jg
sub
icebp
jo
sahf
aaa
jne
nop
repnz
xor
fnstsw
fadds
adc
sbbl
push
pushf
pop
jge
or
jae
cmpl
in
lahf
fsubr
adc
loope
dec
fwait
jecxz
fldt
test
push
daa
cld
daa
loopne
leave
jne
ds
cmp
repnz
aaa
dec
push
sbb
add
push
adc
sub
jg
cmp
add
cmpl
dec
sub
mov
outsl
xchg
pop
jge
cmp
movsl
movsl
cmpsl
orb
and
xchg
jo
xor
or
jae
lret
loope
xorl
decb
js
dec
xor
push
lods
loope
daa
lock
adc
or
inc
test
add
sub
inc
dec
out
cs
stos
jnp
lret
pslld
sub
cmp
stos
lret
mov
mov
mov
out
mov
mov
std
ljmp
lahf
jno
cmp
xor
or
out
jg
xchg
sub
imulb
cmp
push
dec
shll
in
imul
xor
mov
nop
aam
xchg
jb
es
fwait
sbb
sbb
jmp
xchg
dec
mov
popf
pop
imul
or
mov
dec
cli
or
mov
aas
push
outsl
stc
lcall
jmp
lret
aam
sbb
push
lea
mov
aas
enter
lahf
cmp
xchg
loopne
outsb
jge
mov
sbb
fistpl
inc
scas
sysret
mov
push
std
and
or
in
popf
fdivs
push
insl
or
cltd
test
shl
outsl
les
aas
dec
divb
mov
adc
and
mov
push
pop
fsub
or
es
push
add
pop
jle
or
lds
adc
enter
adc
call
push
addb
cmp
adc
push
test
mov
fidivrl
mov
sub
faddl
jbe
leave
popf
loop
test
test
insl
repnz
shlb
out
mov
push
adc
mov
add
int
gs
mov
push
imul
cld
cmpsl
out
cwtl
pop
jge
outsl
rclb
xor
mov
pop
scas
mov
insb
aaa
test
or
dec
mov
ret
xchg
out
popa
and
sub
xchg
in
test
into
inc
add
xor
aas
dec
push
push
outsl
call
fldl
rcr
inc
lahf
out
pushf
shlb
sub
inc
xrelease
push
shlb
pop
popa
pop
ja
es
ljmp
pop
xchg
jne
jno
pusha
cmp
pushf
pop
or
adc
dec
aad
sbb
xor
xor
loopne
adc
push
push
xchg
xor
aam
stos
mov
xor
ja
jne
pop
ds
pop
and
push
inc
jns
push
call
sbb
movsb
cmpb
or
fdecstp
push
xor
mov
xchg
adc
repz
das
or
push
in
test
sbb
jecxz
test
in
cmp
lods
jae
notb
cmpsb
insl
sbb
cmp
sahf
testl
inc
inc
outsl
sti
xchg
mov
idiv
mov
shl
lea
insb
outsl
notl
inc
iret
mov
test
scas
mov
jmp
packsswb
pop
enter
mov
clc
sbb
cmpsl
push
sub
push
lods
pop
insl
cmp
stc
popf
and
in
sarb
cmp
mov
inc
lods
lods
mov
mov
inc
mov
in
xlat
out
cltd
addr16
bound
lahf
cmpsb
sbb
dec
cmp
cmc
ds
xchg
sub
jecxz
ss
and
aam
mov
jbe
mov
pop
test
jp
loopne
cmp
jecxz
test
inc
dec
je
test
jl
arpl
or
sbb
push
push
pop
insl
and
outsl
lds
mov
pop
dec
lods
mov
jnp
inc
mov
sbb
mov
push
lock
test
pop
or
imul
test
subl
inc
inc
jmp
test
js
imul
fildll
adc
push
mov
xchg
int3
cmp
inc
push
daa
sbb
push
insl
iret
comiss
mov
int3
fdivrp
mov
pop
movb
xchg
adc
ret
dec
push
cmp
jns
lods
xor
enter
out
sub
mov
test
scas
cmp
ss
mov
inc
decl
imull
lock
sub
mov
jp
cltd
push
pop
movsb
repnz
cmpsl
repnz
in
ljmp
scas
sbb
xchg
mov
dec
cmp
lcall
movsl
xor
mov
add
popl
sub
push
ja
xchg
xchg
xchg
lods
pop
sub
std
in
fnstenv
mov
ljmp
jge
mov
push
and
mov
push
movsb
mov
lods
xor
sbb
and
std
xchg
pop
push
inc
mov
mov
fimull
mov
rorb
cmp
gs
push
pusha
inc
mov
mov
push
xchg
shlb
cltd
fstp
cmp
push
cmc
insb
push
fistpl
pop
mov
insb
dec
daa
adc
push
in
jnp
out
sbb
fisttps
mov
jbe
clc
movsb
or
push
or
mov
cmp
xchg
push
arpl
je
sbb
cmp
inc
loop
lock
scas
outsl
sbb
sub
jns
pop
inc
shll
popa
xchg
movsl
je
and
mov
cmp
mov
ljmp
push
cmp
sub
adc
aam
sub
mov
leave
out
xor
mov
sbb
out
test
aaa
sub
repnz
je
push
mov
inc
or
insb
les
loope
mov
mov
loope
fwait
imul
or
xchg
loope
fwait
push
jg
shl
adc
lods
in
ja
shrl
stos
sbb
jno
testb
xchg
std
fst
mov
xlat
xor
test
push
jno
bound
movsl
leave
lock
loop
in
lcall
test
ficoms
lret
fmull
into
es
lret
mov
rolb
jae
push
nop
cs
or
popa
lcall
adc
pop
or
in
addb
icebp
cli
out
adc
cltd
addr16
sub
popa
lahf
rcrb
pop
mov
push
sub
pop
jge
mov
pop
inc
or
in
test
in
lods
or
das
dec
cwtl
fimuls
add
sub
xchg
jns
addr16
in
ds
loopnew
inc
aam
in
loope
xchg
test
cli
test
cmpsl
dec
push
popa
rcrb
mov
cmp
jns
add
adc
das
in
aad
push
lcall
adc
mov
xchg
xchg
shlb
dec
jle
pop
cmp
jp
dec
lds
push
xchg
ret
jae
repnz
orb
sbb
cmp
jle
sahf
lods
icebp
dec
mov
cmp
mov
mov
sbb
das
jge,pt
ret
ret
mov
lds
and
add
cwtl
testl
daa
aas
xor
jne
subb
imul
mov
movsb
sub
mov
movsl
in
sub
ret
shlb
scas
dec
fcoml
dec
and
and
int3
xchg
push
adc
xor
add
pop
push
push
subb
mov
cmc
pop
in
adcl
ja,pn
push
movsb
imul
jp
testl
hlt
jb
jnp
movsb
in
testl
clc
mov
and
loope
push
inc
test
out
or
xchg
pop
idivb
leave
push
add
cs
orl
mov
std
das
mov
xlat
movsl
push
pop
mov
sbb
ss
dec
fcmovnb
into
push
xchg
mov
inc
dec
cmpsw
inc
cmpsl
or
pop
xchg
mov
aad
rclb
cmpsb
ss
fsubr
js
fcmovnbe
leave
imul
cwtl
push
jo
ret
push
sbbl
test
push
fcomps
popa
cmc
lods
aas
stos
aam
adc
adc
in
xlat
jno
cmp
idiv
movsl
in
clc
adc
add
xchg
jnp
xor
fstpl
ds
subl
mov
mov
mov
into
popf
jae
xor
rcrl
in
lret
outsb
movsb
pop
mov
rolb
std
xchg
std
push
sub
sub
mov
nop
je
mov
popa
movlps
jb
jecxz
xor
xlat
push
push
push
out
shll
inc
shlb
and
stc
mov
aaa
jl
sbb
popf
jbe
ds
je
or
nop
add
jmp
insl
mov
cmp
pop
push
jecxz
dec
xchg
jb
ret
out
inc
xor
and
mov
jbe
cld
ds
add
adc
adc
test
lret
or
lods
arpl
repz
movsb
mov
mov
push
jns
jmp
outsl
ret
loopne
lods
dec
pop
push
mov
push
xor
das
or
cld
dec
or
es
lods
adc
enter
je
les
jae
pcmpgtw
adc
mov
jno
or
jle
stos
roll
push
and
lods
xchg
jg
pop
or
addl
jmp
xor
bound
mov
aas
cli
iret
les
mov
or
jp
jno
jl
adc
fldenv
sub
mov
outsb
push
xchg
mov
dec
add
lea
cmp
jo
dec
int
mov
cmp
repnz
pop
imulb
fwait
jb
jbe
sbb
mov
out
ljmp
mov
jmp
loopne
mov
mov
fldl
shlb
and
cmc
jb
jae
mov
push
xor
bound
lea
add
shl
adc
sub
sbbl
imulb
sti
dec
mov
pop
pop
mov
fisubrs
fsubrs
insl
adc
push
jg
ja
and
pushf
insl
xor
ret
fistps
jp
fcomps
je
ror
movsl
pop
fcmovnbe
xor
sti
aam
dec
mov
in
mov
ror
punpcklwd
mov
fisubrl
test
imul
add
push
aam
sbbb
fs
iret
xlat
mov
int3
mov
lcall
and
adc
stos
or
xchg
adc
or
pop
stos
ss
sbb
jl
or
insb
add
or
mov
frstor
or
cltd
lahf
dec
cmp
push
inc
xchg
cmpsb
xchg
push
enter
mov
mov
jns
out
test
ret
push
inc
js
cltd
mov
out
xlat
jnp
push
mov
aas
cltd
mov
nop
pop
pop
dec
dec
jp
in
cmpsl
inc
or
outsl
xchg
and
jo
mov
mov
ja
ret
enter
mov
xorl
or
cmc
cli
clc
jecxz
imul
enter
or
add
cmpsl
xor
das
adc
pop
es
lahf
sbb
pop
adc
cmp
adc
popl
adc
dec
aad
mov
imul
xor
cmp
sub
sub
jecxz
xchg
or
hlt
stos
pop
push
sbbb
enter
flds
daa
cmp
xor
mov
push
js
and
addr16
inc
test
filds
sub
sbb
pop
mov
sahf
loope
add
xor
or
pop
std
loopne
mov
jecxz
mov
je
mov
inc
inc
adc
lods
jne
loope
jns
mov
arpl
pop
fmuls
out
pusha
mov
push
mov
sti
ss
rolb
fisttpl
push
push
jnp
lock
inc
rcrb
or
and
and
fbld
adc
jp
shlb
test
mov
add
scas
jnp
hlt
push
xor
ficoml
orl
imul
pop
adc
ljmp
pusha
jmp
pop
and
mov
clc
jnp
pop
sub
iret
test
xor
pushl
ja
test
fdivs
cltd
jae
jbe
pop
jne
cwtl
and
into
cld
mov
outsl
ret
dec
mov
sub
aas
and
les
test
jg
mov
out
pop
sub
and
or
mov
daa
int
sahf
imul
and
push
add
pop
cmpl
inc
inc
jb
pop
pop
repnz
jne
mov
pop
and
xor
add
leave
jle
jle
jmp
insb
bound
dec
into
fsts
mov
mov
bound
out
pop
filds
sbb
addr16
cwtl
enter
adc
je
int
lret
pop
sub
dec
mov
inc
push
fsubl
jge
mov
inc
dec
dec
mov
mov
mov
mov
loop
enter
add
inc
mov
and
or
xor
add
iret
inc
add
jne
xchg
adc
ds
mov
das
sbb
jmp
popa
pop
mov
jae
sbb
in
repz
jmp
inc
add
lock
fldcw
fistps
scas
push
xor
into
jno
pop
and
dec
imul
hlt
shll
dec
cli
inc
inc
push
lods
mov
out
nop
add
cmpsl
xchg
jg
rcrl
inc
ret
cld
bound
mov
iret
subb
out
shll
lret
daa
out
aad
enter
xchg
cmc
xchg
mov
aaa
fs
lcall
inc
push
sbb
push
ds
icebp
adc
in
mov
pop
xor
mov
sub
fs
mov
out
jmp
aad
lret
push
andl
jp
hlt
sub
ljmp
icebp
pushf
icebp
test
inc
cmp
addr16
push
xchg
cmp
jmp
into
push
and
jle
int3
in
orb
enter
mov
and
sbb
cmp
in
in
popa
fucomip
loopne
pop
xor
sub
pop
fs
dec
jge
movsl
mov
ss
cmp
mov
mov
repnz
in
in
cmpsb
cmp
adc
int3
xchg
xchg
test
sub
stos
lret
arpl
mov
mov
lret
and
cmc
and
ret
mov
add
cmp
sbb
mov
jne
dec
cs
lea
dec
movsl
jb
in
dec
xchg
outsl
les
cwtl
sarb
adc
aam
dec
sub
cmp
jnp
sbb
xchg
sub
sub
adc
ret
andb
stos
adc
or
adc
pop
popa
sbb
aam
imul
test
call
pop
leave
jle
ficompl
fndisi(8087
outsl
sbb
popa
pop
sbb
pop
mov
or
inc
loopne
add
dec
test
hlt
dec
and
adcb
pop
test
push
add
mov
dec
pop
imul
hlt
cmp
scas
jae
mov
mov
fisttps
in
out
out
sub
aaa
movsb
push
jp
cmpsb
shll
iret
loop
dec
push
icebp
hlt
push
xchg
add
rorl
ss
jl
lret
sahf
call
and
sub
mov
fistpll
testl
jae
mov
add
pushf
in
mulb
mov
mov
pop
adc
jle
fstp
jae
or
sahf
hlt
add
pushf
ljmp
testl
pop
imul
loopne
pusha
mov
lock
mov
adc
imul
loop
cmc
clc
add
mov
mov
mov
loope
in
lret
dec
pop
cmp
idivb
orb
mov
mov
sub
cmp
mov
add
pop
pop
or
cmp
mov
inc
popa
lods
xchg
or
mov
cmc
mov
adc
push
xchg
cmp
mov
mov
mov
xor
dec
xlat
jl
dec
push
and
mov
js
iret
or
mov
sub
test
repz
icebp
sti
pop
mov
sub
sub
pop
sub
idivl
dec
mov
inc
jle
xchg
jnp
fcom
aaa
inc
in
test
push
lcall
pop
cmp
mov
jl
je
adc
or
dec
push
sub
dec
or
jmp
lock
sbb
ret
ja
sbb
and
dec
popa
adc
fnstsw
cmp
add
and
mov
ja
icebp
jo
cs
pop
gs
and
outsl
out
and
pop
adc
sub
dec
cltd
mov
xor
arpl
mov
or
stos
sti
pop
or
je
pop
mov
lret
aad
push
leave
inc
lret
mov
xlat
xchg
aas
add
mulb
sub
jo
mov
sbb
pop
call
pop
out
or
jecxz
dec
mov
mov
imul
dec
pop
sub
pusha
test
push
out
scas
mov
push
imull
jl
int
loope
imul
and
cmc
push
dec
leave
es
jle
push
sub
pop
div
jmp
jns
mov
pop
cs
cmp
jl
ss
cmpb
js
addb
mov
mov
add
inc
xor
lock
jge
test
fstpt
rcll
loop
movsb
mov
and
mov
jb
sub
movsb
sbb
jnp
test
jl
jno
inc
push
sti
popa
ja
lock
mov
dec
lea
arpl
pop
cmp
xor
mov
fsubs
adc
divb
ret
negl
les
fisttps
js
int
push
add
and
xor
inc
sub
in
lea
lods
mov
cmp
fistps
adc
inc
mov
mull
sbb
in
sub
test
mov
jecxz
mov
add
sbb
inc
aad
pop
jbe
stos
cltd
inc
setle
dec
movb
imul
lcall
and
push
sarl
mov
sbb
loop
test
out
jb
xchg
mov
imul
cmp
pushf
inc
sub
cwtl
cmp
mov
rclb
xor
ss
mov
pop
mov
ret
mov
jmp
out
push
stos
std
sub
lea
roll
xor
nop
loopne
mov
out
xor
ss
push
iret
jb
inc
hlt
cli
inc
cmp
inc
stos
and
pop
sub
popa
dec
push
push
sub
mov
lcall
pop
out
mov
mov
pop
add
les
call
mov
cmpsl
xchg
cmpsl
push
in
mov
mov
push
dec
or
and
sub
ret
cld
jnp
test
clc
sub
mov
adc
dec
and
out
pop
xchg
add
add
add
mov
push
jmp
xchg
xchg
mov
adc
shll
push
shrl
negl
fsubl
lods
push
ret
or
popa
fisubl
add
sti
aas
cmp
pop
das
push
mov
sbb
call
repz
jae
stos
cmp
jo
pop
sbb
jp
or
das
jg
popf
in
lods
dec
mov
pop
push
fs
hlt
add
movsb
mov
test
mov
mov
hlt
or
cwtl
and
call
xchg
mov
or
push
dec
mov
cltd
rcr
cld
js
or
mov
je
xchg
jge
orl
mov
jo
push
shlb
sub
jns
sub
sahf
pop
xchg
cmp
add
icebp
rorb
mov
jne
sbb
std
or
das
fldl2e
cmp
cmp
out
inc
push
je
jl
or
xlat
inc
adc
dec
call
pop
call
push
dec
enter
cltd
adc
dec
repnz
cmp
fwait
mov
test
jecxz
stc
addr16
sub
xchg
xor
jg
push
out
pop
cmpsl
ja
pop
pop
sbb
fidivrl
mov
cmp
inc
adcb
push
or
in
arpl
fcompl
shll
lret
xchg
adc
in
daa
and
mov
test
in
sub
data16
push
out
test
popf
ret
iret
or
movsl
adcb
mov
push
mov
sub
push
adc
adc
inc
stos
mov
subl
sbb
add
rcrl
sbb
add
ja
mov
adc
jae
imull
mov
cmpsb
sub
neg
rcrb
int3
stc
jb
arpl
mov
xchg
out
popa
movsb
mov
sub
inc
xchg
aaa
mov
xor
and
xor
out
cmp
popf
fisttps
rclb
out
push
loopne
sbb
xor
in
jmp
stos
pop
xchg
subb
fcoml
jge
adc
mov
cli
shr
je
rcll
test
or
rcrb
repz
cmp
add
xlat
loope
aam
and
or
push
sti
or
dec
add
sbb
adc
movsb
xor
dec
pusha
clc
setae
lds
in
sti
into
mov
add
pop
fs
push
fdivrp
ret
pop
rcrl
push
and
jb
mov
cmp
jb
clc
mov
cwtl
sbb
sarb
scas
cmp
xchg
or
jns
popa
pop
cmpsl
and
fsubrl
mov
pushf
fs
clc
mov
or
mov
push
cltd
shll
mov
lcall
mov
adcb
movsl
stos
loopne
addr16
sub
xor
insl
mov
jmp
and
cmp
mov
inc
add
out
fcomi
cmp
in
push
push
add
repnz
ljmp
xor
push
scas
inc
cmpl
and
fcoml
cld
adc
push
jmp
push
test
call
sti
push
test
inc
sub
jnp
aas
leave
idivb
popa
loopne
insl
adc
mov
mov
pop
inc
sbb
adc
aad
cmp
insb
dec
cli
cmp
mov
lret
fistpl
mov
or
xor
dec
fistl
repnz
pop
inc
mov
nop
sahf
int
xlat
pop
sub
xchg
mov
movsb
rcll
jb
or
xchg
dec
mov
xchg
pop
mov
imul
pop
mov
andb
fst
and
push
push
xchg
xchg
or
cmpsl
cmpsb
xchg
adc
cmp
mov
push
dec
in
test
jne
dec
scas
or
cwtl
cmp
xchg
push
stc
loope
and
jae
push
out
and
test
xlat
cs
sbb
les
mov
xor
std
lret
adc
jb
adc
out
hlt
mov
outsl
mov
aaa
mov
pslld
pop
fwait
lds
in
pop
pinsrw
jecxz
jae
dec
fnsave
inc
mov
and
lock
xor
clc
fistps
mov
mov
jno
pop
xor
xchg
mov
out
das
and
push
lds
scas
fistpl
sub
jbe
xchg
test
filds
fisttps
xchg
lahf
dec
jnp
out
mov
adc
faddl
ljmp
cmpb
ds
push
push
lret
pop
pusha
cltd
mov
dec
out
lea
cli
icebp
je
shr
pop
xchg
jecxz
mov
push
lock
popa
repnz
sub
adc
push
adc
push
pop
dec
or
add
jno
out
xchg
dec
dec
pushf
orb
sbb
cs
jle
fidivl
push
cmp
sub
jmp
add
lcall
cmpsb
mov
lret
or
push
sbb
xchg
add
add
fildl
jb
out
jo
cltd
lods
mov
add
hlt
nop
jno
imul
ret
mov
jbe
fadds
mov
adc
and
mov
mov
aaa
xor
sbb
mov
sub
imul
outsl
xor
add
in
lock
pop
loop
xchg
or
shrb
pop
inc
sbb
das
sbb
stos
in
clc
in
enter
fwait
dec
imul
scas
aam
and
inc
xchg
pop
xor
pop
mov
or
sbb
mov
arpl
ret
loope
inc
xor
inc
mov
out
test
adc
aad
lahf
movsl
pop
imul
je
sub
fildll
jp
std
pop
push
pop
fld
xchg
or
add
push
xlat
and
int3
loopne
jg
dec
imul
push
fsts
jl
xlat
out
or
push
mov
imul
push
mov
filds
orb
mov
inc
stc
fdivrs
je
inc
cmpsl
sbb
les
jo
dec
and
mov
and
add
push
cmc
mov
adc
mov
fisttps
xchg
pop
fbld
fstpl
ja
jno
mov
insb
xchg
jp
push
dec
fwait
test
lea
test
jge
loopne
outsl
xor
inc
push
inc
sub
dec
cmc
mov
or
iret
xchg
and
cmp
test
clc
cmp
sub
dec
lcall
scas
add
or
sbb
dec
and
inc
stos
lret
xor
push
adc
incb
dec
addr16
push
ss
push
int3
mov
std
jg
mov
popa
hlt
mov
push
popl
popf
jae
jbe
cmpsb
leave
jge
inc
or
push
daa
aad
hlt
or
sub
jecxz
mov
adc
loopne
cli
adc
mov
mov
xchg
add
mov
hlt
fwait
jmp
imul
in
scas
xchg
fstpt
mov
cmp
push
sub
cld
cmpsl
jbe
sbb
mov
dec
inc
pop
bound
neg
pop
mov
xlat
mov
xchg
insl
or
rol
mov
pop
mov
sbb
pop
shll
jle
test
pop
fdivrl
les
cmc
or
imul
push
cmp
jno
icebp
outsb
ficompl
cmpsb
subb
pop
fidivl
adc
inc
pop
shr
jecxz
psubsb
add
push
pop
jno
adc
testb
jo
stos
and
and
and
cltd
or
jg
mov
das
inc
xchg
push
lods
lea
xchg
enter
push
dec
jbe
fucomp
cs
dec
stos
add
cmp
xchg
incb
test
je
flds
xor
scas
xchg
les
rcrb
inc
pop
inc
scas
dec
cmp
cs
xchg
lcall
xchg
mov
sarl
xchg
out
movsb
out
pop
cwtl
inc
cmp
adc
rorb
scas
jle
gs
jge
or
in
shll
jns
mov
stos
hlt
fstpl
add
mov
imul
sbb
push
inc
mov
sub
pop
jg
pop
in
push
popf
leave
push
or
jmp
lret
jae
jmp
mov
fdivr
add
add
xor
pop
clc
fs
ficompl
jle
add
ret
fst
into
std
mov
rcrb
mov
int3
sarl
xchg
shrb
jmp
fnstsw
or
stos
cmp
lods
push
adc
movsb
mov
xchg
test
mov
scas
jo
sbb
push
push
gs
cmpsb
adc
fadd
cli
pusha
movsb
mov
mov
push
fs
sub
add
inc
movsb
lock
cmpl
cmp
cmpsl
ja
xor
mov
pop
cmp
test
adc
aad
pop
in
call
arpl
in
stos
push
mov
adc
push
jnp
rolb
mov
scas
add
aas
out
adc
sahf
je
inc
push
mov
dec
fwait
movsb
or
test
fsubrs
and
js
test
das
xchg
pushf
in
inc
fs
shll
ja
test
cld
mov
cmc
sbb
scas
or
andnps
pop
mov
and
push
or
jo
out
stc
and
pusha
insl
aad
clc
cmp
arpl
xchg
mov
cmpb
fidivl
ja
lods
dec
loop
pop
popa
lds
rolb
ja
xor
clc
add
mov
cli
js
push
dec
adc
je
push
pop
cs
pop
pop
lock
les
pop
mov
mov
rol
dec
pop
test
int3
rolb
ljmp
in
mov
add
or
inc
inc
dec
xlat
ljmp
jno
lock
dec
insb
inc
leave
pop
das
mov
fbld
in
pusha
adc
pushf
pop
insb
adc
outsl
ret
cltd
int3
adc
dec
push
repz
sub
adc
and
repnz
push
test
sub
or
sub
test
mov
leave
in
fs
call
mov
outsl
xchg
sub
sub
jmp
xor
aas
xchg
dec
negl
int
lea
cltd
add
in
arpl
xlat
scas
xchg
mov
outsl
andb
cltd
cmpsl
cmp
xor
sub
jne
push
stos
pop
test
ffree
xchg
sbb
sti
arpl
xor
mov
xchg
jno
adcl
rcrb
lea
cwtl
mov
ret
xchg
xlat
xor
cmpsb
enter
lods
fwait
lret
mov
ret
inc
xchg
push
xchg
in
mov
lea
call
mov
fldcw
fadds
hlt
rcll
mov
push
mov
fistl
xor
popl
ss
sbb
cmc
xchg
pushw
das
shll
cmp
adc
cmp
testl
hlt
xor
icebp
fs
daa
notb
xlat
and
movsb
inc
adc
and
daa
mov
and
sub
sbb
sub
into
mov
mov
mov
cmp
sub
nop
and
cli
or
cmpb
mov
pusha
push
fimull
mov
nop
dec
ja
popf
insb
push
pop
rcr
jno
xlat
mov
loope
roll
xor
cld
xchg
add
mov
xlat
cmpsb
add
cmp
push
jo
popa
aas
xchg
inc
dec
mov
or
lods
into
jns
inc
pushf
out
js
push
sub
pop
fucom
int3
les
in
lahf
icebp
mov
lcall
jno
sbb
lds
leave
inc
push
insl
das
lcall
fs
into
jne
inc
inc
lods
mov
decl
pinsrw
sub
fcom
push
stc
outsb
push
mov
cwtl
aas
pop
leave
popf
push
cmp
push
push
adc
mov
mov
jecxz
enter
jb
rorl
push
out
in
int3
cmp
jo
dec
or
fistps
pusha
cmp
clc
shll
sub
xor
stc
xchg
icebp
adc
loop
lea
fwait
dec
mov
mov
add
xchg
test
push
daa
sbb
ljmp
inc
leave
addr16
jg
add
cld
les
mov
push
rolb
pop
cmp
xchg
jle
fidivrs
bound
ja
movsl
pop
cmc
addb
clc
jnp
dec
jle
bound
inc
pop
cmp
xchg
xor
rolb
test
jne
cld
jle
jbe
das
xchg
sbb
bound
or
lret
pop
fldl2t
adc
jns
or
fsubr
insb
jle
test
mov
push
xchg
xor
lods
mov
fs
ja
xchg
outsl
sbbl
int
or
xlat
decb
shll
test
fdivrl
and
push
push
or
mov
out
sarl
decb
dec
loop
inc
movsl
icebp
push
inc
loope
pop
or
pop
and
into
sub
cmc
not
outsb
mov
jae
aad
movsb
cmp
or
lods
mov
sbb
cmpsb
mov
push
mov
not
adc
add
mov
inc
cmpsl
std
xchg
inc
outsb
mov
lea
ljmp
mov
in
mov
mov
add
inc
mov
pop
xchg
add
bswap
clc
bound
xchg
dec
ds
mov
or
cmp
sub
inc
pop
dec
dec
sub
sti
rcr
or
push
cmp
or
aaa
pop
dec
mov
jb
mov
call
adc
push
ret
jg
out
call
sbb
arpl
sbb
xor
jbe
movsb
insl
es
adc
loopne
jp
subb
lods
and
pop
dec
mulb
add
loope,pt
adc
icebp
imul
push
imul
leave
rcr
mov
ret
lods
jle
xor
stos
shl
jl
std
mov
xor
in
in
in
insb
scas
in
negb
dec
daa
sahf
icebp
lds
jmp
xchg
dec
ficompl
aad
aam
add
jae
loop
pop
dec
xor
es
es
mov
mov
push
shrl
ret
xor
dec
xlat
dec
shrb
pushf
jnp,pt
xor
xor
and
sub
lds
jge
cld
iret
jae
inc
mov
adc
mov
jne
push
ss
outsl
fsubrs
out
jecxz
adc
mov
fistl
mov
into
out
pusha
sar
jns
mov
call
push
sbb
push
sub
mov
jnp
mov
xchg
sub
mov
scas
in
inc
add
pop
and
pop
push
push
aam
add
lods
xchg
push
lret
mov
loop
arpl
adc
mov
add
aas
aas
ficoml
dec
cmp
test
cmp
mov
or
mov
or
jnp
and
leave
and
repz
lret
adc
sti
movsl
dec
pusha
adc
ret
adc
jle
adc
dec
xor
xchg
loop
inc
mov
out
jne
addl
pop
jbe
sbb
push
jg
addr16
jecxz
arpl
fiaddl
cmp
loop
xorb
icebp
in
mov
and
xor
out
push
insb
cmpsb
jmp
xchg
pop
in
mov
push
jge
loop
out
dec
jle
je
push
sub
insl
call
sub
ljmp
cwtl
adc
movsl
pop
aaa
mov
rclb
lahf
imul
mov
mov
pop
xchg
pop
push
xor
inc
into
add
test
stc
jecxz
out
dec
and
negb
mov
mov
loope
xor
stc
inc
push
sbb
xor
daa
fnsave
sbb
mov
cpuid
jg
sub
mov
fdivr
ss
pop
push
xchg
scas
test
sub
xor
arpl
sarl
sbbb
subl
adc
std
shrb
push
mov
mov
vmread
negb
push
or
or
aam
jo
das
push
cmp
aam
push
push
xor
jns
outsl
and
ljmp
push
popa
xor
shll
dec
add
mov
sbb
and
outsl
jge
jbe
push
pop
movsb
mov
lret
cmp
or
mov
cmpsl
sahf
jle
lods
mov
cmpsb
jno
out
jbe
cmp
in
dec
push
loop
jb
xchg
xor
xor
push
out
out
push
bound
btc
arpl
aam
pop
mov
mov
pop
lea
aam
mov
adc
sub
mov
lds
fistl
std
push
xor
lret
mov
pop
cmp
jnp
rolb
shll
dec
lret
and
dec
call
push
repnz
sbb
mov
jmp
cmp
je
jecxz
loopne
mov
pop
cmp
push
ja
mov
add
add
sbb
sbb
in
inc
and
int3
sbb
into
mov
mov
xor
call
lahf
or
and
in
lahf
push
repz
sbb
pusha
dec
jns
jnp
jmp
inc
xchg
lock
addl
cmpb
cmp
leave
pop
repz
xor
adc
test
mov
jp
test
out
or
inc
dec
jmp
mov
and
push
and
xchg
scas
xchg
rcr
push
into
aam
lods
popf
xchg
mov
fwait
cmp
jmp
sarl
xor
cmp
jle
insb
cmp
clc
dec
dec
js
sbb
push
or
jns
or
push
jo
sbb
sbb
lock
movl
nop
test
dec
call
sahf
push
js
xor
push
je
cmp
and
pop
imull
pop
jge
cmp
shlb
insb
dec
push
cmpsb
loope
mov
repnz
or
dec
cmp
jecxz
adc
sbb
xor
imul
or
xchg
mov
and
les
pop
xor
jbe
xor
mov
and
out
mov
push
lret
repnz
add
xor
inc
into
cmpsb
daa
and
call
test
enter
les
mov
dec
pushf
cmp
push
xchg
in
xchg
icebp
add
inc
xor
loopne
adc
mov
or
xchg
lcall
and
jno
inc
or
xor
jge
pop
mov
in
add
sti
sub
out
cmp
std
inc
popa
lock
test
call
aam
rcll
int3
aad
fwait
mov
js
push
test
xorl
mov
or
lods
or
pop
jns
jp
mov
cmpsb
xor
xchg
sub
mov
dec
pop
adc
fs
xchg
enter
sbb
out
rcll
adc
add
cmp
or
out
test
repz
insb
lock
ret
xchg
jne
lcall
leave
mov
sahf
push
arpl
cli
jmp
stc
cmp
or
or
clc
xchg
roll
cmp
in
popl
int3
jmp
lds
pop
adc
and
scas
outsl
int
cwtl
mov
jge
std
setp
shrb
jl
pop
xchg
push
xchg
test
sbb
push
jl
imul
xor
jo
sub
mov
mov
sub
es
and
lods
mov
xor
fidivrs
stc
fdivl
ljmp
dec
mov
aad
inc
hlt
jae
jmp
xchg
popa
add
stos
ret
andb
repnz
push
repnz
insb
cmp
js
pop
dec
adc
inc
jle
into
aad
in
sbb
jo
and
push
xor
cmp
mov
bound
add
out
paddw
aas
cmp
popf
sub
enter
inc
xor
cmp
and
repz
icebp
iret
das
xchg
es
adc
pop
or
data16
sbb
pop
sbb
cmpsl
xor
mov
fldenv
dec
arpl
jp
push
mov
and
push
add
dec
push
shrb
rorb
rcl
jl
pop
dec
sub
test
leave
inc
ret
popa
cmp
in
xor
adc
loopne
iret
dec
adc
push
sbb
inc
mov
sbb
mov
jl
das
sub
xlat
shrb
push
pop
dec
and
pop
xchg
dec
sbb
fistl
in
dec
xchg
scas
add
push
loope
mov
lods
adc
or
test
cmpl
push
pop
push
push
jne
push
rcrb
adc
push
dec
fcompl
xchg
ss
cs
sub
loop
xor
cltd
push
jne
test
shll
or
or
gs
pop
loope
lea
pop
fisubrs
jecxz
push
repz
in
int
and
jno
sbb
jge
mov
imul
aam
pop
jno
idiv
movsl
sub
jl
cs
je
addr16
or
ss
mov
pop
mov
mov
fwait
dec
ljmp
mov
jg
subb
mov
pop
dec
jecxz
xchg
outsb
repnz
dec
scas
in
ss
and
sub
cltd
add
or
mov
xor
addr16
imul
pop
pop
mov
shll
std
adc
cwtl
pop
in
sbb
repz
push
xchg
add
inc
subl
ljmp
stc
jl
fsubrs
mov
ds
daa
jne
lret
jecxz
sbb
mov
sub
nop
dec
fdivl
pop
add
push
lods
pop
or
pop
mov
adc
adc
popf
out
cmpsb
int
add
ret
insb
pop
pusha
shll
out
xchg
sub
inc
jno
or
pop
movsb
and
adc
sbb
add
inc
stos
mov
xlat
push
mov
clc
adc
dec
push
test
outsb
sahf
pushf
pop
add
ds
xchg
adc
inc
fadds
fsts
in
xchg
mov
sbb
fsubrl
sbb
fwait
sub
fildl
adc
cmp
sub
out
imul
dec
or
pushf
pop
pop
std
mov
fs
xchg
push
clc
daa
mov
ret
adc
outsl
cmp
jb
pop
in
jle
mov
insb
xlat
cmp
jbe
jp
xor
int
scas
loop
cmpsb
dec
jl
lahf
dec
imul
sbb
dec
les
jno
or
pop
push
outsb
leave
lods
mov
inc
lcall
cmp
shrb
jecxz
or
mov
sbb
cmp
or
pusha
cltd
ds
xchg
js
adc
xchg
jg
dec
sub
inc
lock
sahf
xor
test
mov
pop
ja
data16
and
rcrl
fbld
jae
dec
push
in
pop
dec
push
inc
test
dec
roll
jbe
add
cmpsb
in
xlat
adc
mov
cs
fisttpl
inc
add
fisttpl
enter
test
sbb
sbb
xor
loop
stc
addr16
mov
aas
dec
add
popa
popa
mov
bound
mov
ss
scas
mov
push
scas
adcb
adc
int
cmp
jecxz
jmp
fs
xchg
test
flds
push
pop
push
loopne
lahf
lock
adc
sbb
addr16
sub
xchg
push
lods
xor
movsl
lods
ret
movaps
cs
int
xchg
xchg
sbbl
in
subb
push
jb
and
fs
cmp
sbb
adcl
jns
lret
sbb
shrl
or
sub
push
pop
shl
adc
fsubrl
mov
in
sahf
or
xor
mov
int
add
mov
jecxz
cmpsb
daa
sbb
mov
dec
lods
add
frstor
or
add
incb
and
add
shr
ljmp
xor
aam
jb
push
sub
xchg
insl
mov
lds
dec
cld
dec
frstpm(287
adc
lret
dec
movb
dec
cmp
or
js
insb
out
dec
sub
lods
pushf
clc
mov
cmp
mov
in
mov
icebp
or
adc
mov
pop
push
fdivrs
add
adc
pop
mov
sub
mov
or
aaa
gs
ret
lahf
mov
dec
nop
popl
ret
repnz
push
adc
cltd
in
jg
sti
cmp
shll
push
addl
adcl
mov
lods
cmp
and
xchg
repz
nop
push
inc
mov
mov
scas
jmp
cli
mov
and
out
into
jg
repz
lret
insb
jmp
popa
lods
adc
mov
sub
mov
test
and
push
inc
pop
xchg
adc
fwait
out
cmp
pop
add
cwtl
or
xchg
leave
push
jns
fidivrl
stc
ret
push
stos
ds
mov
push
jb
lods
pusha
cmc
pusha
push
sub
imul
das
cmc
sub
shr
add
dec
mov
mov
push
fstl
lret
xlat
add
dec
xchg
mov
dec
insb
shlb
loopne
xor
xchg
sbb
inc
xchg
shrl
add
nop
lret
push
or
js
notb
dec
pop
mov
add
jmp
mov
mov
jbe
inc
or
sbb
idivb
sbb
ficomps
jle
lods
movsb
mov
aas
movsl
jmp
std
xorl
dec
andb
adc
lds
push
or
scas
lcall
cwtl
outsb
les
mov
push
filds
dec
pusha
dec
jns
xchg
inc
mov
test
in
out
stos
sbb
cmp
aaa
sahf
inc
fwait
cmp
jne
inc
mov
vmwrite
xchg
cmp
dec
aas
shll
pop
iret
pop
cmpsl
add
add
or
mov
inc
xchg
sarl
push
mov
pop
add
fimull
mov
dec
popf
or
lds
les
xchg
shll
mov
pop
lret
mov
iret
or
lods
aas
bound
sbb
shll
pop
sbb
push
pop
aad
mov
pushf
je
mov
stos
adc
iret
jne
mov
add
lea
into
rcl
sub
pcmpeqb
xchg
aad
xchg
mov
xchg
xor
notb
pop
mov
add
sub
out
aam
aad
jbe
pop
clc
sub
cmp
xlat
popf
dec
jo
push
rolb
adc
fmuls
pusha
push
mov
inc
adc
ret
je
subb
test
imul
pop
xchg
out
mov
dec
and
mov
inc
fidivl
sarb
rorb
nop
xor
mov
mov
cmp
rol
fmuls
dec
leave
das
fistpll
loopne
pop
out
movsl
fsts
aaa
arpl
cli
in
add
jns
iret
lods
and
dec
daa
out
stos
sbbb
xor
js
data16
rolb
test
daa
ljmp
iret
stc
mov
inc
rsm
scas
mov
xorb
mov
mov
push
gs
stos
lcall
push
imul
test
inc
or
adc
dec
lret
jle
adc
mov
mov
add
stc
pusha
mov
lock
and
mov
es
loop
out
mov
adc
inc
push
pop
sbb
push
xchg
out
leave
js
or
mov
pop
or
xchg
call
or
adc
pop
xchg
bound
das
mov
nop
jg
sub
fucomip
fldl
in
ret
pop
xor
and
cmc
in
into
and
ror
inc
xor
in
leave
stos
jle
daa
push
xor
pop
shrl
fwait
jg
scas
cmp
hlt
add
rorl
sub
iret
ds
aad
mov
outsl
sbb
cmpsb
outsl
pop
xor
out
subb
sti
sti
xlat
xor
adc
test
enter
mov
mov
push
adc
les
iret
sbb
inc
jl
repz
cmp
sbb
pop
jp
mov
mov
cld
jno
enter
sbb
cmp
add
mov
out
mov
inc
dec
js
test
rorl
mov
das
sbb
xchg
in
cwtl
daa
or
fmuls
ret
in
ja
push
xchg
imull
sbb
fld
movsb
mov
outsl
inc
mov
xchg
ljmp
pop
and
std
mov
scas
xchg
cmp
pop
roll
mov
cmpsb
add
imul
std
loope
xchg
add
pop
pop
push
mov
sahf
push
stc
jne
adc
clc
xchg
sbb
add
daa
cwtl
cli
fidivs
or
jle
scas
xchg
add
pop
or
lcall
movhlps
shlb
xchg
pop
loop
jge
inc
cltd
sub
add
test
jp
or
and
dec
adc
lret
lea
pop
mov
rcr
lods
shl
mov
sti
call
mov
fmul
mov
adc
out
test
lods
sbb
or
leave
push
jmp
mov
cs
jo
inc
dec
cmp
or
subl
mov
loope
enter
sbb
dec
or
test
or
mov
mov
sbb
sub
aam
imull
push
jnp
xor
in
lods
test
push
adc
inc
or
mov
je
mov
xor
pop
pop
roll
cmpsl
mov
ds
ret
xchg
jb
stos
ss
xchg
jl
cli
jl
in
sbb
cld
mov
imul
cmp
pmaddwd
cli
insb
add
cltd
and
inc
fnstsw
loop
jnp
rcll
ja
cmp
push
call
fwait
stos
bound
jbe
push
dec
sub
fmuls
mov
aas
or
iret
lock
xchg
sbb
xor
dec
hlt
mov
pop
xor
pop
in
xchg
push
cmp
pop
dec
jnp
hlt
jbe
aad
and
sarb
add
cmp
mov
jle
fisttps
push
movsb
xor
jmp
cmpb
fstp
and
mov
mov
repnz
outsl
aad
popa
cmc
dec
sub
jne
insb
sahf
or
icebp
mov
dec
sbb
pusha
rcrb
addr16
mov
fnsave
sarl
mov
sbb
imul
xor
jge
scas
lahf
mov
add
outsl
push
mov
int
cmpsb
mov
test
xchg
dec
sub
out
and
scas
jnp
repz
pop
out
mov
xor
subb
stos
push
or
lret
push
int3
mov
push
addr16
mov
ja
into
jno
es
dec
stc
int3
or
mov
sarb
test
insb
push
movsb
andl
jmp
fimull
addr16
sbb
or
aaa
cmp
test
jb
in
add
mov
jb
int
cmp
sub
mov
imul
loopne
sub
mulb
push
ret
std
cwtl
jne
leave
lret
jo
jns
and
aas
cmp
push
aas
mov
test
jo
cmp
ja
insb
mull
adc
and
in
popa
decb
inc
mov
xchg
or
pushf
lds
inc
fisubl
stc
test
pop
sbb
xlat
aam
daa
rclb
imul
push
test
xchg
inc
pushf
es
mov
loop
add
jo
add
xchg
push
add
ret
popa
push
mov
mov
sbb
pop
pop
mov
lock
ret
mov
jns
nop
out
loop
shll
jb
xchg
jnp
mov
fld
add
test
add
stos
jg
mov
adc
push
or
mov
xchg
out
xchg
aad
in
xchg
lock
dec
loop
mov
call
adc
xor
in
jmp
dec
cwtl
lock
ljmp
ficoml
iret
loop
cmp
push
inc
sahf
mov
xchg
ret
pop
inc
adc
xor
jae
cmpl
jae
gs
cmp
das
dec
mov
xchg
jno
dec
xchg
pop
push
test
addr16
mov
jbe
orl
lahf
xchg
jle
in
aad
cld
mov
push
cmp
orl
pop
pop
out
adc
pop
int
imul
mov
mov
mov
in
mov
adc
xchg
mov
cmpsl
stc
jl
pop
mov
sti
push
jnp
pusha
notl
sarb
pop
inc
adc
mov
insl
lahf
lods
sbb
into
sub
pop
cwtl
adc
jnp
mov
out
addr16
mov
mov
jns
xlat
in
aas
aas
mov
xor
pop
scas
cmpl
dec
xor
push
push
insl
data16
and
mov
sbb
gs
mov
lods
xchg
movsb
cltd
in
sub
xchg
dec
dec
cmp
test
das
mov
adc
ja
frstor
mov
sbb
push
pushf
mov
inc
pusha
sbb
sub
outsl
insl
imul
imul
push
add
push
inc
insl
dec
xor
jmp
insb
jns
lret
stos
in
jmp
insl
inc
jp
mov
or
jl
fidivrs
clc
xchg
das
mov
cmc
popl
push
push
xor
and
lods
out
lds
pop
faddl
outsl
test
testl
mov
mov
hlt
into
dec
push
xchg
xor
mov
jo
pop
inc
and
jbe
mov
xor
ds
jns
repnz
xor
push
lahf
orb
fdivl
jle
movsb
mov
fistl
and
sbb
sbb
pop
fdivrs
jne
fldt
pop
cmp
pop
inc
cli
in
dec
and
jnp
jl
mov
or
sub
das
testl
pop
test
xchg
dec
dec
jp
mov
adc
add
mov
int3
nop
out
mov
lret
sub
in
cmp
or
push
es
lcall
add
push
repnz
outsb
pop
or
dec
mov
mov
inc
not
and
in
jmp
imul
jne
ljmp
shlb
or
mov
jmp
add
add
setg
mov
jl
jmp
cmp
nop
and
call
imul
pop
loope
jo
cs
xor
call
cmc
fsubl
mov
push
mov
dec
pop
cmc
jmp
sub
mov
lods
inc
add
outsb
scas
mov
pop
jp
push
aaa
pop
adc
inc
pushf
cmpsl
mov
sbb
inc
testl
stos
adc
aas
pop
or
adc
ss
addr16
mov
jmp
in
cmc
int
test
pop
inc
ret
sub
dec
mov
out
shl
test
call
popf
or
sub
mov
ffree
in
dec
mov
sub
mov
push
and
adc
outsb
or
push
mov
inc
icebp
scas
mov
jmp
pusha
rcrb
mov
test
sub
cld
adc
mov
inc
ficoml
adc
orb
mov
sub
jb
stc
shll
mov
dec
leave
rol
shl
shrl
sahf
ja
or
out
dec
xchg
xchg
call
or
lds
jb
and
jge
das
xlat
imul
mov
rcl
xorl
testb
add
dec
stos
negl
pminsw
or
pushf
mov
insb
mov
lds
clc
scas
cmp
adc
fisttpll
out
movsl
push
dec
mov
or
negl
xor
jo
adc
fcomp
bound
int3
mov
shrl
leave
mov
cmp
test
psadbw
push
insl
fldl
mov
mov
jle
mov
adc
movlps
in
xchg
aas
ret
repnz
cmpsl
and
ljmp
and
ljmp
jbe
dec
in
add
rcll
or
in
mov
sarl
out
movsl
popf
cmp
push
and
sbb
pop
sbb
pop
stc
aaa
or
sub
adc
dec
or
push
clc
dec
fadds
pusha
repnz
cmpb
dec
push
mov
mov
adc
imull
sar
decl
adcb
aam
xor
es
mov
clc
enter
xor
jge
dec
enter
jge
sbb
and
push
enter
lock
gs
cmc
loop
jb
xor
mov
gs
mov
dec
out
rcr
sti
icebp
sbbb
sbb
and
subl
inc
cld
jle
test
pop
pop
xor
xchg
mov
loop
add
insb
lods
sahf
mov
loopne
cs
shrl
adc
cmp
imul
jl
test
cmpsl
sub
std
xor
push
push
inc
sarl
add
xchg
jle
fmull
int3
fmull
outsl
xchg
add
xsha256
cmpsb
push
dec
push
dec
and
pop
mov
fists
pop
jmp
repnz
dec
imul
rcl
mov
and
push
shrb
inc
push
adc
cld
cmp
jmp
or
cmp
repz
adc
inc
pop
lods
dec
adc
iret
cld
cmpb
sub
sbb
pop
sbb
or
xor
lea
mov
cmp
mov
inc
or
repz
push
jno
mov
push
sarl
add
mov
test
and
push
pop
out
or
jg
dec
out
into
mull
dec
je
mov
popa
fsts
mov
je
inc
xlat
in
mov
cmc
adc
xor
iret
nop
dec
pusha
adc
xchg
xchg
adc
sub
pop
repnz
and
out
mov
in
or
ss
rcll
cmp
gs
aam
popf
inc
dec
out
subb
jns
inc
cmp
mov
andl
sub
fucomi
xchg
jle
inc
in
and
or
mov
dec
lds
mov
loop
mov
mov
dec
movl
movsl
inc
push
adc
mov
in
das
cmc
call
pop
data16
and
leave
jge
xor
clc
les
sbb
fcomp
pop
clc
jmp
xor
lahf
lcall
pop
stos
in
mov
ret
or
pop
add
or
out
push
xchg
xor
loope
push
lcall
lods
enter
adc
sbb
and
dec
pop
ds
icebp
test
mov
outsl
loop
mov
mov
ficoms
hlt
inc
or
insl
pop
mov
xor
ficomps
sbb
mov
into
loop
pushl
mov
loop
cmp
scas
ss
sbb
sbb
cmp
jmp
and
js
xchg
pop
stc
cmpsb
fildll
insb
fsub
push
subl
sub
mov
aaa
std
pop
and
lret
push
decl
mov
lock
jle
sub
aaa
div
and
enter
shrb
imul
leave
cmpsl
hlt
cmp
push
push
adc
mov
scas
mov
jne
jp
push
pop
incb
jne
fs
mov
mov
pushf
inc
shl
cwtl
push
ja
sbb
out
and
push
cmp
adc
cmp
into
jns
mov
jg
sbb
out
push
fisubrs
fs
in
adc
mov
cltd
lock
add
push
fdivs
std
loop
ret
mov
jae
stos
jnp
cmc
negb
rclb
push
and
divl
cwtl
gs
add
dec
pop
jb
ret
imul
rcrl
icebp
insb
roll
cli
cld
xor
add
js
sti
idivl
daa
jnp
nop
ficoml
addb
ljmp
enter
movmskps
shl
inc
shlb
mov
stc
push
xor
fstp
inc
lcall
mov
call
inc
and
add
xchg
iret
popa
dec
movl
xor
mov
shrl
in
int
xchg
mov
loop
ja
lret
decl
lods
flds
add
popa
pusha
nop
push
xchg
pop
iret
xchg
insl
sub
in
mov
pop
jp
insl
jge
repz
ret
test
mul
pop
sub
pop
push
fnstsw
push
sbb
push
jl
fistpl
jo
sbb
push
pop
push
popf
mov
mov
fsubrs
sahf
arpl
out
xchg
and
cli
push
es
rorb
shlb
push
mov
sub
jbe
mov
add
pop
and
bound
dec
push
daa
jno
je
mov
fcoml
popa
adc
aad
das
jnp
dec
push
scas
inc
push
mov
iret
add
lret
ss
mov
xchg
dec
cmpsb
lock
fwait
movsl
das
mov
sbb
es
sti
push
and
mov
mov
push
xor
incl
aad
cmp
jge
jnp
mov
mov
insb
adc
push
lret
test
repnz
pop
mov
push
pop
xchg
dec
aas
pop
add
adc
lret
adc
scas
cmp
mov
and
pop
aam
jecxz
pushf
arpl
mov
lock
cmpsl
rorb
in
aad
cmp
or
insb
mov
cmp
repz
inc
push
ljmp
push
or
push
ret
popl
inc
lret
cmp
test
push
cmpsb
push
mov
jno
mov
pushf
lock
mov
sbbl
shlb
in
jae
and
xor
sub
cmpsb
xor
sti
sbb
bound
dec
std
or
repz
pop
push
mov
test
xchg
or
adc
mov
scas
sub
mov
into
cltd
lods
loop
filds
xchg
stos
dec
or
mov
lea
push
loope
mov
addr16
cmpsb
add
fiadds
popa
jecxz
xchg
cmp
jmp
daa
fistps
data16
push
insl
and
pushf
outsl
lahf
ficoml
shll
test
pushf
jbe
cmp
pop
cs
jne
sbb
or
or
mov
jns
mov
sbbb
mov
aas
ss
mov
xlat
cmp
arpl
xchg
arpl
xchg
jmp
cli
xchg
mov
iret
cmp
aaa
icebp
xchg
inc
cwtl
mov
xchg
xor
fisubrl
enter
adc
lods
jmp
xchg
fwait
cmp
lcall
cmp
leave
stc
xchg
pop
sub
push
loopne
pop
loop
jge
cmp
xor
cmovp
jb
fildl
push
popa
push
xor
rcrb
inc
pop
xlat
and
icebp
je
pop
insb
jo
aad
cmp
dec
sub
loop
mov
pop
gs
xchg
pop
mov
shl
dec
insb
adc
mov
mov
mov
cli
jb
mov
push
inc
jge
adc
dec
aam
sub
cmp
les
push
and
int3
dec
arpl
negb
movsb
loope
in
lods
pusha
gs
lods
sbbb
gs
or
xor
sbb
jae
lahf
stos
push
jecxz
popa
loope
decb
push
jecxz
sub
fsubr
nop
pop
sbb
adc
xor
push
js
ja
push
sbb
xor
shr
push
pop
mov
testl
mov
les
mov
cmp
out
mov
sub
mov
pushf
cwtl
or
js
or
outsl
sub
xchg
mov
mov
add
jae
or
dec
xchg
repnz
clc
adc
xor
jae
cmp
sarb
mov
or
inc
sub
outsb
lcall
into
fstpl
push
jl
mov
lret
out
xchg
shrb
push
mov
push
mov
or
ret
popf
andl
jae
and
enter
int3
adc
xchg
jge
sbb
xor
mov
mov
cmpsl
loop
ljmp
push
test
nop
sbb
scas
pop
xor
std
imulb
cmp
xchg
ret
pop
test
mov
mov
jae
jle
push
insl
or
push
xor
mov
mov
push
jle
and
sbb
fldcw
imull
sbb
sarl
shlb
stos
in
clc
mov
mov
add
add
icebp
std
dec
stos
stos
ret
cmp
nop
movsl
mov
stc
cmp
enter
loope
mov
xchg
push
jno
inc
mov
push
out
lock
aam
pop
hlt
cmp
xchg
loop
leave
inc
xchg
popf
fstps
ret
mov
insl
mov
xor
aaa
popa
xlat
out
loopne
fwait
and
scas
mov
adc
dec
addr16
shll
daa
and
and
xor
jge
cmpsb
repz
pop
mov
sahf
addl
movsb
xchg
sub
pop
insl
pop
inc
je
inc
jp
sub
bound
shlb
les
cmpsb
popf
int3
es
or
adc
mulb
xchg
mov
mov
push
sub
fwait
jno
in
inc
lds
int3
mov
mov
and
fdivrs
call
inc
mov
daa
lds
xlat
push
xchg
cmp
jnp
rcr
js
ret
pop
dec
lds
sub
in
mov
stos
mov
jge
or
pushf
add
rol
jge
int3
ljmp
sahf
cmp
jecxz
and
jecxz
ljmp
movsl
add
jne
pusha
sarl
push
mov
mov
mov
mov
sti
andl
test
inc
pop
xor
xchg
xor
sarb
mov
xor
xchg
aas
aaa
pop
xor
mov
jbe
xchg
push
jl
lds
imul
xchg
nop
ds
test
ljmp
clc
mov
pop
and
pop
imul
mov
mov
jns
fdivrp
psrlw
adc
ficoms
rclb
scas
jo
mov
dec
xchg
pop
mov
jge
sub
cmp
mov
in
fidivl
pop
int
fs
sbb
mov
mov
std
add
mov
jmp
nop
adc
mov
mov
jmp
jge
xor
or
mov
or
dec
pop
cmp
fs
je
dec
pop
rcr
cmp
loope
pop
sbb
cld
pop
sahf
dec
sub
xor
orl
pop
das
add
push
pop
aam
call
jmp
sarl
icebp
jae
sbb
fs
jmp
push
out
xor
ljmp
sahf
ds
fwait
out
mov
lcall
ss
mov
fptan
ljmp
xor
ljmp
cld
dec
xchg
push
inc
nop
mov
out
sarl
loopne
pusha
fnstsw
ret
cli
push
jp
inc
cli
aaa
xor
lock
mov
pop
adc
int3
int
and
hlt
adc
adc
push
scas
push
cmp
and
das
and
inc
and
pushf
jecxz
sub
test
in
jne
mov
cmp
int3
repnz
imul
dec
aam
sbb
mov
ljmp
fst
imul
mov
fisubl
jae
shl
rolb
cmp
adc
xor
xchg
xchg
fstl
lods
xor
bound
xor
push
inc
mov
mov
add
xchg
add
sbb
pop
mov
aaa
andl
pop
jl
cmpb
jg
fcomps
loopne
pusha
cmp
xchg
inc
jo
in
lods
adc
push
mov
lods
sub
add
out
scas
jecxz
in
jmp
pop
mov
out
and
mov
push
sub
test
or
mov
push
or
lea
mov
push
ljmp
add
xor
xchg
lret
scas
sbb
flds
cmp
add
pusha
imul
xchg
leave
mov
xor
loope
out
dec
scas
stos
pop
adc
enter
lret
clc
jmp
cs
mov
push
mov
or
cmp
mov
xor
mov
xor
ret
cmp
xlat
xor
adc
fwait
pop
mov
push
push
outsb
fistpl
or
into
and
lods
lds
addr16
dec
inc
mov
jg
divl
sub
push
pop
mov
pop
je
fisubl
scas
subl
push
pop
pop
or
mov
xchg
aad
in
jmp
lods
fistps
push
fists
xchg
popa
mov
jge
lock
mov
mov
lret
mov
out
bound
repz
and
push
mov
out
arpl
es
sbb
cmpsb
shll
jo
outsl
les
cld
in
loop
inc
cmp
cmp
out
shll
push
sub
rcr
cmpl
test
enter
jae
clc
inc
add
xor
cmp
inc
jbe
inc
sarl
xchg
imul
ljmp
xor
add
cltd
sbb
aad
dec
loopew
ret
das
jns
in
add
cmp
mov
imul
pushf
enter
pop
addl
pop
mov
outsl
and
mov
fistps
out
mov
adc
cltd
mov
adc
jno
jp
inc
mov
cs
repnz
lret
xor
push
das
jbe
icebp
and
outsl
rorb
std
aad
jge
and
loop
xchg
mov
pop
notl
daa
inc
add
fdivrs
movsb
mov
shrb
addr16
cmp
add
jae
mov
outsl
mov
ja
in
outsb
lds
push
daa
lret
and
insl
dec
andb
mov
sbb
rcrl
lret
movq
inc
movsl
movsb
lret
scas
fidivrs
mov
add
add
jno
and
call
inc
inc
push
bound
addr16
ss
xchg
daa
pop
mov
out
pop
cmc
lcall
fstpt
pop
fstps
cmc
sub
ret
push
xchg
adc
lahf
les
mov
jl
sub
xchg
or
cmp
jo
xor
cmp
push
push
iret
mov
or
fbld
clc
mov
push
jmp
mov
jge
sahf
jne
adc
jae
lock
xor
inc
sub
xor
je
sahf
xchg
shl
shlb
add
pusha
fsub
and
inc
ss
push
sbb
push
xorb
aas
mov
pop
mov
icebp
or
sbb
jp
out
bndldx
cltd
faddl
jns
mov
sbb
or
mov
mov
stc
test
pop
pop
imul
fwait
jns
nop
mov
mov
popa
add
and
push
mov
in
lea
sub
xor
fs
mov
cmp
push
mov
lock
je
or
push
xchg
xchg
xchg
xchg
scas
or
sti
sarb
ret
cmp
shll
lods
call
push
cmp
lds
mov
int
mov
je
ja
aaa
sub
xor
or
lock
sub
loope
fcompp
dec
and
inc
jo
pushf
mov
nop
push
not
ds
push
cmpsb
add
clc
adc
jnp
f2xm1
lods
fsubrp
xor
xor
divb
inc
cmp
pop
and
out
rcrb
aas
cmp
xor
mov
sbb
xchg
in
inc
pusha
cmpsl
ret
loop
int3
clc
mov
mov
icebp
push
js
xchg
lret
mov
aas
dec
cmp
addl
mov
dec
shlb
sbb
pop
cmpsl
dec
lcall
mov
cld
push
mov
mov
adc
sbb
add
xchg
fisttps
pushf
not
mov
sbb
jge
add
pop
call
push
pop
xchg
mov
sbb
inc
das
adc
mov
stos
bt
fs
pop
cmp
scas
adc
mov
mov
hlt
jo
addr16
xchg
stc
call
lock
adc
mov
fstpl
divb
jge
jbe
jae
addr16
and
push
mov
pop
xchg
cmp
push
jae
ret
mov
inc
adc
push
inc
sbb
xchg
aad
pop
pop
adc
mov
sbb
je
mov
repz
dec
pop
pushf
mov
out
push
outsl
push
push
dec
push
pop
and
subl
mov
addr16
je
jno
jmp
pop
cmp
jg
stc
cmpb
push
cli
mov
mov
inc
push
sbb
sbb
and
cmc
in
idivb
inc
movsb
xchg
cli
aaa
lds
lret
xchg
add
cmp
adc
lds
add
es
adc
dec
mov
cmp
repz
fistl
sbb
out
fucomi
hlt
je
pushf
outsl
mov
pop
sahf
or
leave
mov
adc
rcr
mov
add
je
fsts
push
in
mov
jmp
xchg
sbb
call
pop
push
rol
sbb
inc
mov
jns
popf
lods
test
mov
pushf
inc
xchg
mov
out
and
sbb
add
aaa
xadd
sbb
pop
pop
mov
shrb
cmp
movsl
into
rolb
dec
pop
xor
mov
pop
pop
pop
cmp
icebp
mov
lds
cmpsl
dec
adc
push
out
jne
mov
movsb
mov
roll
sub
inc
imul
rclb
fisttpl
call
sbb
loope
rep
xchg
ret
jb
jno
fwait
arpl
or
imul
test
sub
mov
mov
daa
int3
ret
pop
shll
push
cld
fistpl
pop
and
xor
jo
mov
sub
and
and
test
lods
into
out
aas
pop
je
push
xchg
enter
push
hlt
inc
mov
stos
repz
xor
fwait
or
mov
jle
inc
sbb
pop
in
cmp
je
cld
inc
out
cld
sbb
xor
das
les
out
cmp
push
callw
mov
mov
push
inc
xchg
or
cld
mov
leave
in
jmp
and
mov
xchg
lahf
in
jb
fidivl
mov
sub
repz
in
mov
dec
into
pusha
sar
test
mov
outsb
cmc
push
mov
mov
insb
mov
scas
int3
sbb
jb
shr
mov
jl
xor
dec
test
and
fs
mov
jnp
xchg
scas
jns
cld
mov
ds
cmc
mov
and
idivb
mov
imul
test
push
pop
insl
jmp
mov
pushf
jo
fnstcw
cmpsl
mov
clc
push
xchg
int
mov
or
cmc
jno
outsb
sbb
dec
rcrb
jb
mov
repnz
dec
jns
cmp
jp
xor
push
pusha
sub
mov
es
iret
mov
push
fildll
sub
sub
push
in
mov
aam
add
stos
mov
out
outsl
lret
repz
fidivs
lock
mov
mov
repz
jne
cmp
outsl
mov
push
push
cmp
in
shl
dec
int3
pop
shll
mov
aam
decl
rclb
mov
mov
sbb
and
xchg
push
nop
mov
lcall
adc
sub
mov
in
dec
sub
push
cmp
mov
adc
fwait
hlt
fldcw
dec
cmpsl
lock
in
inc
inc
cmp
test
sub
les
push
push
cli
push
adc
cmpsl
and
cmp
arpl
int3
sti
mov
inc
xchg
enter
jne
mov
test
push
pop
or
lock
xor
cmp
shll
xor
jno
mov
mov
in
gs
aad
out
repz
mov
inc
jne
pusha
and
leave
xchg
push
pushf
sahf
lret
jmp
in
push
sbb
das
gs
sub
int
add
push
gs
lods
mov
xchg
fcoms
sub
lods
mov
push
pop
inc
sbb
jns
je
movsl
in
das
sub
daa
or
mov
fldt
out
mov
jge
rol
jnp
fidivl
mov
pop
cmp
repz
test
mov
xchg
loop
mov
es
jae
int3
xor
sub
mov
out
mov
pushf
push
inc
fists
pop
jp
xchg
push
loope
jbe
and
pop
xor
cmp
cs
dec
sub
add
xchg
add
nop
popf
sub
xchg
pop
sub
icebp
sbbb
sub
mov
fucom
xchg
cmpb
lahf
xchg
es
mov
out
sbb
jb
test
mov
adc
imul
adc
icebp
push
int3
jae
cmp
cmp
jp
out
dec
ds
fstl
mov
fstps
add
push
mov
es
repz
inc
mov
push
cmp
add
sbb
sti
mov
fcmovu
inc
xlat
or
inc
insb
dec
mov
sbb
mov
mov
sub
mov
mov
lock
jmp
mov
imul
lahf
daa
aas
push
nop
and
push
dec
pop
lret
and
out
pop
jg
popf
fsubp
push
dec
xor
cmp
or
xor
jae
pop
sbb
sub
push
sbb
adc
lret
xchg
pop
sbb
mov
sbb
sub
cmpsb
lock
xchg
jecxz
sbb
data16
fs
lock
sub
cmp
fsubs
data16
lods
mov
push
pop
jbe
nop
call
pop
je
mov
imul
xchg
pop
mov
call
ss
lret
sub
xlat
xchg
pop
cs
inc
and
jo
dec
sbb
mov
pop
dec
xor
jg
idivl
in
leave
fwait
cmovo
es
jb
inc
popf
orb
mov
push
xchg
push
dec
mov
mov
adc
jle
xor
pop
sub
and
repnz
jae
mov
jns
push
xlat
jmp
loope
sbb
divb
xchg
movsb
mov
mov
or
pusha
jb
mov
sub
add
ficoml
add
mov
lods
je
scas
pop
setno
addb
xchg
gs
decb
pop
stc
scas
jg
or
jbe
movsb
shll
push
jecxz
mov
lret
adc
lret
add
mov
cmpsb
mov
ss
sbb
pushf
out
insb
xchg
aad
sbb
imul
aad
mov
inc
sub
pop
or
addb
pop
mov
sbb
cmc
insb
mov
sbb
ret
pop
aaa
mov
push
shrl
mov
adc
addr16
adc
lahf
mov
dec
cmc
bswap
cli
add
mov
sbb
stos
lret
pop
aad
xchg
push
jno
js
movsb
std
lods
dec
inc
jcxz
jl
add
pop
js
aaa
push
in
dec
sub
enter
mov
js
fdivl
dec
pop
jne
das
xor
test
xchg
jmp
jl
ss
shrl
mov
fbstp
push
sbb
fbld
sub
push
mov
cmp
cmp
jecxz
in
push
pop
shll
movsb
les
sbb
mov
or
sub
repnz
jne
push
fcmove
aaa
je
ret
jnp
outsl
cmp
in
fst
imul
addb
jns
pop
mov
mov
mov
or
mov
fidivs
arpl
movsb
sub
callw
mov
or
enter
sbb
ss
aad
les
popf
mov
int3
rcrb
popa
pop
cltd
xchg
xlat
push
adc
xlat
jnp
adc
test
inc
xlat
fs
push
inc
in
and
xchg
lods
pop
pop
cld
daa
call
push
subb
inc
push
xor
cmp
mov
pop
push
ds
and
xor
lods
push
mov
mov
cmp
mov
daa
cmp
adc
sub
xor
test
cli
out
dec
addl
mov
push
pop
lcall
lahf
mov
mov
sbbl
lcall
or
mov
imul
test
pop
inc
shl
cmp
fcomip
pushf
xchg
jb
iret
xor
int
cwtl
push
scas
jmp
jbe
mov
loopne
jl
cld
mov
notl
test
sbb
sarb
out
and
xchg
jae
sub
fnsave
push
inc
dec
adc
enter
xchg
ffree
std
add
cld
xchg
jno
or
and
je
jl
jmp
imul
into
popf
cwtl
push
push
jno
mov
ja
pop
loope
call
push
cmp
outsb
sti
xor
inc
adc
jno
out
add
pushf
mov
xor
cld
fmuls
pop
iret
loop
jl,pn
mov
mov
inc
dec
popf
ljmp
rolb
adc
test
cli
xor
js
push
adc
adc
pushf
xor
je
mov
sub
clc
stos
push
rcrb
sbb
sbb
or
push
push
outsl
scas
dec
fistps
out
inc
or
rcrb
push
sbb
mov
ds
fnstcw
xor
push
scas
xor
movsb
sbb
in
jp
inc
in
cltd
xchg
sub
out
xchg
adc
add
inc
dec
mov
test
sbb
adc
push
scas
fimull
add
in
or
mov
xor
rcrb
stc
push
rol
push
andl
mov
aam
pop
std
dec
dec
ret
xlat
loope
aad
push
sar
mov
movsb
test
sarb
fldcw
outsb
add
js
mov
movsl
adc
mov
cmp
and
dec
or
enter
mov
xchg
jne
add
xchg
sbb
iret
xor
inc
pop
imul
and
xchg
aas
mov
jo
mov
xchg
sbb
ljmp
sub
ja
pop
lock
pop
gs
pop
and
ja
cmp
sbb
adc
add
push
fnstsw
icebp
hlt
xor
or
pop
stc
push
add
pushf
out
aad
hlt
or
lods
enter
jl
fisubrl
gs
cmp
mov
rolb
pop
ret
inc
pop
cmp
add
in
mov
stos
in
jnp
outsb
outsl
aam
mov
adc
sbb
mov
sub
imul
jne
push
adc
xchg
push
jge
test
clc
mov
add
ds
ret
jmp
dec
xor
int
jmp
test
jne
inc
xchg
repnz
test
movsl
das
push
sbb
adc
jp
pop
ficoms
scas
dec
adc
lock
adc
or
pop
mov
dec
mov
adc
cli
fisttps
jecxz
gs
xor
cmp
push
adc
nop
sbb
loop
mov
popa
in
shlb
or
sbb
int
loop
inc
pop
add
xor
iret
and
xchg
mov
dec
test
into
call
push
iret
cmp
cmp
xor
mov
fildl
nop
fnsave
xor
mov
sbb
sub
rclb
inc
inc
fdiv
jno
push
lcall
or
sahf
outsl
out
sbb
lea
popf
push
outsb
test
das
outsb
mov
jnp
fadd
fbstp
addr16
insl
add
xchg
stos
fstl
add
pop
cli
inc
shrl
push
adc
ja
dec
fcmovu
outsl
pop
sbb
fisttpll
out
fisttpl
mov
jge
push
cmpsb
pop
in
popf
jp
fdivs
into
sbb
idivb
dec
jbe
sub
leave
and
jmp
mov
pop
mov
and
push
jns
ljmp
jns
mov
andl
aaa
mov
cmp
xchg
idivl
pop
push
xor
fdivrl
stos
add
jne
arpl
or
mov
idivb
xchg
mov
and
inc
and
fdivr
fs
mov
cmc
scas
cs
inc
cmp
aas
cmp
gs
aad
ds
dec
dec
push
clc
ljmp
push
inc
pusha
stos
adcl
mov
movsb
push
xchg
xlat
je
nop
jnp
xor
add
push
mov
push
jne
int
or
mov
fbstp
lods
sub
jp
and
mov
cmp
jmp
outsl
in
in
rcll
pop
jle
iret
sbb
data16
xchg
aad
and
adc
test
ret
and
jnp
mov
int3
or
pop
inc
mov
test
out
dec
xor
fwait
sub
out
dec
aam
pop
mov
add
sahf
enter
fiadds
lret
and
jbe
movsb
dec
loop
aaa
xchg
loope
leave
add
inc
iret
add
mov
mov
call
pop
hlt
sti
repnz
popf
popa
jns
pusha
aam
sbb
out
pop
fmull
out
int
mov
imul
iret
rorb
cmc
imul
fwait
out
in
xlat
xchg
shrl
pop
fisttpl
jg
mov
xor
and
lret
mov
push
rolb
ss
ss
xor
xchg
xor
cmpl
mov
loope
sbb
adc
push
outsl
inc
mov
xor
pushl
ss
xlat
fstp
inc
xchg
lock
mov
xchg
stos
leave
fisubrs
lods
mov
lods
xlat
ficomps
sub
int
add
out
sbb
jl
pop
es
ja
mov
outsl
and
xor
push
roll
sti
lock
sub
ret
stos
mov
verw
ficoms
outsl
mov
inc
cmp
jnp
xchg
cmp
inc
or
push
inc
jmp
mov
push
cs
inc
push
push
pop
jae
jne
add
push
sub
cli
pop
lea
sub
push
inc
cmp
mov
movsl
imul
mov
jg
xor
adc
mov
jecxz
adc
fldt
jecxz
pop
fimull
idivb
fidivl
mov
leave
push
sub
ja
loope
or
mov
mov
push
dec
mull
xor
adc
push
adc
rcll
sub
insl
aad
in
and
sbb
test
push
cli
sub
adc
jge
and
cmpsb
sbb
test
outsb
rcll
cltd
xor
pop
sbb
xchg
pop
jl
sarl
fldl
jmp
mulb
mov
ja
repz
or
fs
jbe
xor
movsl
jne
clc
pushf
adc
sti
js
cld
push
mov
out
shll
je
movsl
cmpsb
pop
in
out
push
sub
mov
lcall
jp
lret
les
push
push
scas
in
stos
roll
cld
mov
addr16
dec
add
fst
mov
movups
sbb
ret
ljmp
or
or
push
cli
push
push
push
mov
pop
hlt
aaa
movsl
push
pushf
inc
cwtl
cmp
xchg
jp
adc
lret
mov
or
in
adc
cwtl
out
add
dec
nop
jbe
xlat
outsl
push
es
xchg
jb
adc
lods
fwait
and
arpl
ret
dec
push
mov
and
sub
fwait
mov
gs
sub
sarl
mov
sub
fisubrs
mov
push
mov
data16
jecxz
fimull
stos
mov
pop
clc
es
repnz
arpl
xchg
mov
scas
xor
popa
mov
test
add
jno
pop
mov
sti
push
int3
sub
sbb
sbb
jp
cwtl
aaa
loopne
loop
stos
pop
fimuls
sub
ror
addr16
inc
adc
pushf
arpl
test
push
pop
jecxz
xor
sti
sarb
fwait
inc
xchg
mov
jb
repz
stc
xor
outsb
mov
cli
inc
in
mov
mov
dec
pop
jp
and
add
stc
mov
rolb
xor
repnz
sbb
dec
inc
dec
sbb
mov
mov
loop
dec
fldenv
cmp
fwait
outsl
dec
add
xchg
dec
adc
scas
xchg
shl
hlt
lcall
cmpsl
sub
leave
jnp
and
push
fbld
loopne
dec
rorl
cwtl
scas
sub
leave
mov
cmpsb
popa
xchg
popa
icebp
mov
xor
movsb
lds
push
pop
and
iret
outsl
sub
subl
jae
cmpsb
fistps
aas
sub
out
pushf
nop
inc
loop
daa
dec
pop
andl
dec
mov
rcll
jp
xor
xchg
adc
lea
loop
fists
mov
fwait
xchg
mov
daa
xchg
push
sbb
cmpsb
xchg
cmc
sub
nop
test
push
mov
add
movsl
inc
and
jbe
in
pop
test
jl
xchg
sub
aam
cmpsb
je
sbb
push
and
jge
lret
fbstp
and
je
mov
ja
or
sbb
push
test
and
jp
bound
and
xor
cmp
jne
insl
mov
and
add
ret
push
push
adc
aam
fwait
sarb
addb
fsub
xchg
ss
and
cli
daa
push
or
movsl
mov
push
xor
cli
jmp
mov
mov
insb
mov
dec
aaa
icebp
jns
sbb
jno
scas
iret
bound
push
and
insl
xchg
js
or
xchg
fnstcw
mov
repz
iret
fs
in
push
jb
out
xchg
jl
adc
mov
js
and
icebp
test
dec
pop
pop
nop
mov
xor
mov
push
mov
xor
and
mov
andl
fisttpl
pop
dec
jg
cmp
xor
movsb
mov
pop
insb
and
pusha
imulb
rclb
dec
leave
std
imull
mov
std
cmova
mov
push
adc
inc
push
sub
stos
xor
outsl
inc
iret
add
add
out
outsb
mov
sarl
xor
aaa
and
mov
stos
or
xchg
nop
push
insl
std
xor
cmp
cmp
inc
dec
daa
pop
das
xchg
cli
std
jmp
cmp
out
shr
sub
leave
jle
mov
aam
arpl
movsl
pop
xor
add
clc
cli
mov
idivb
cwtl
push
push
mov
call
popl
xchg
cmpsl
push
sub
movsb
adc
cmp
cwtl
hlt
shll
add
imul
jp
aad
insl
adc
jmp
mov
jge
xchg
sbb
dec
fincstp
ret
addr16
xchg
outsl
push
push
cmpb
clc
cmpsl
daa
mov
adc
jmp
or
add
data16
cld
adc
xchg
pop
xchg
sub
adc
sub
daa
and
lea
add
notb
jb
clc
push
cmp
push
xorl
test
out
jns
subl
outsb
fnclex
push
jnp
push
sbb
call
add
jl
or
daa
mov
fs
icebp
pop
adc
rcrb
in
pop
jns
add
out
in
into
lock
cmpsl
xor
xor
and
aam
lods
lret
jns
pusha
cmp
arpl
aam
loopne
lock
mov
pop
dec
ret
sub
xchg
xchg
sub
lret
cltd
mov
mov
pop
mov
nop
lcall
pop
shll
xlat
cwtl
pop
das
aam
xlat
aaa
adc
and
aad
jecxz
and
pop
pop
pushf
add
push
mov
arpl
fisubrl
xchg
mov
or
fs
pop
xchg
add
cmpsl
mov
lcall
push
inc
jl
xor
xor
loopne
add
xchg
cmpsl
jl
xor
mov
lahf
es
cli
push
je
inc
and
mov
gs
fnstenv
fimull
stos
sbb
in
sub
jb
andl
push
adc
push
mov
cmp
mov
xor
xor
in
push
push
xchg
cmp
cmpsl
popf
call
insb
xor
js
and
call
fldcw
push
add
aad
jle
cld
jle
xor
xchg
add
mov
test
cwtl
cwtl
imul
xorl
addr16
mov
adc
cld
xchg
add
arpl
out
lcall
aaa
int
xor
mov
cmp
into
imul
adc
sub
pop
mov
add
sub
stos
je
or
xchg
fimull
icebp
sti
pushf
ret
mov
fld
and
mov
inc
jl
sti
or
or
inc
jmp
push
and
dec
jmp
lods
sub
add
mov
jl
jb
push
fstpt
inc
sub
adc
test
fisttps
inc
pop
outsl
sub
cmp
push
sbb
fs
repnz
jecxz
es
xorb
xlat
add
pop
xor
mov
dec
push
in
pop
call
out
mov
add
and
repz
scas
push
insl
sbb
stos
mov
adc
test
sahf
inc
sbb
adc
xor
movsl
and
jne
jle
or
push
hlt
adc
mov
and
xor
test
test
arpl
aam
lahf
repz
cmp
dec
in
jne
jnp
shlb
adc
adc
idivb
adc
push
mov
or
xchg
mov
pop
mov
cwtl
leave
inc
roll
dec
mov
sub
hlt
cwtl
push
fs
subb
popf
xor
in
push
sbb
in
add
icebp
mov
in
sbb
dec
sub
and
repz
push
in
test
das
or
xor
mov
jb
mov
pop
jg
mov
xchg
mov
hlt
gs
test
bound
popa
aas
push
fs
lret
cmc
loopne
mov
add
pop
mov
gs
pop
push
xor
sub
fxch
pop
sahf
dec
mov
rol
push
xor
clc
jl
or
push
scas
xor
test
data16
ljmp
inc
add
int
or
jns
popf
sahf
jo
sub
mov
mov
sub
jmp
push
dec
lcall
test
cmp
adc
stc
cmp
jb
and
sar
lret
dec
in
push
or
jmp
aam
inc
inc
js
mov
push
sbb
pop
sbb
or
cmp
push
and
std
pop
jno
lcall
iret
fnsave
dec
mov
mov
subl
mov
inc
xchg
cmpsb
pop
es
es
mov
int
ja
cmp
cmp
scas
sub
or
dec
mov
mov
lcall
jne
or
loope
adc
mov
xor
push
cmc
decb
cwtl
mov
mov
jmp
xchg
cmp
pop
test
repz
repnz
xor
icebp
mov
xchg
jecxz
sub
xchg
not
test
scas
pop
dec
mov
rcrb
dec
lock
fisubl
push
dec
cld
aad
out
adc
jg
pop
sbb
jno
and
pop
jg
subl
add
enter
daa
inc
mov
test
fwait
scas
sub
mov
jns
pop
shrb
ficoml
gs
lret
outsl
add
pop
xor
mov
fdivrl
stc
int3
push
jp
push
pop
mov
mov
sbb
and
and
mov
roll
or
lcall
lahf
arpl
test
mov
gs
mov
cmp
push
xchg
sub
pop
add
and
cwtl
push
pop
fcomp
add
push
xchg
test
cwtl
cmp
inc
sbb
js
sbb
xchg
fimuls
les
mov
or
mov
cld
daa
int
in
mov
and
cs
out
adc
imul
cmp
and
movsl
fidivs
dec
add
stos
orl
stc
mov
call
mov
lock
addb
jo
inc
arpl
xchg
pop
cmpsl
push
push
dec
int
outsb
inc
jg
fnop
fsub
xor
add
mov
mov
cmp
enter
pop
test
or
jp
aam
cs
lret
mov
scas
imul
sbb
insb
outsl
sub
mov
shl
or
sbb
out
jge
mov
in
insb
mov
aas
sub
sub
cmp
cmpsb
jae
cltd
lahf
xchg
sub
xchg
inc
cmp
les
jnp
dec
mov
fadds
incl
mov
repz
jo
sbb
jns
add
addl
repz
jmp
icebp
xchg
ljmp
bound
ss
mov
stos
cmp
lock
dec
add
arpl
push
pop
movsl
icebp
fistl
inc
inc
xor
sub
xchg
mov
outsl
aaa
ds
mov
loop
mov
or
dec
and
mov
std
dec
xor
jnp
mov
fsubrp
mov
fstl
scas
inc
pop
mov
mov
into
or
in
out
lea
int3
mov
movsl
fiadds
push
add
cs
mov
mov
rorb
mov
das
in
xlat
test
jle
xchg
and
cmpl
lret
xchg
pushf
sub
int
mov
fstl
daa
lret
ljmp
mov
in
cmp
test
mov
push
insb
or
fneni(8087
lods
mov
jmp
and
mov
mov
enter
xchg
addl
adc
xacquire
test
push
inc
mov
add
punpcklwd
inc
mov
mov
jne
fstps
mov
insl
cs
pop
dec
push
shll
bound
das
scas
in
jp
movsb
mov
mov
in
js
in
adc
sbbb
test
movsl
mov
das
pusha
xor
cmpsl
push
mov
mov
mov
imul
lea
incb
test
cmp
jnp
cmp
or
dec
fimuls
ret
outsl
mov
daa
mov
daa
adc
mov
fwait
cmp
scas
xchg
sbb
loope
addr16
mov
pop
mov
inc
cld
fsubrs
jns
decl
and
inc
fiadds
pop
add
and
push
or
jp
pop
jmp
test
sbb
dec
enter
jbe
sti
xchg
shll
sub
xchg
mov
cmp
cmp
je
lea
in
pop
xchg
or
pop
sarl
ljmp
cwtl
hlt
mov
xor
lret
mov
stos
inc
arpl
inc
fwait
shlb
sbb
int
cltd
mov
xchg
les
cld
jmp
gs
hlt
clc
push
mov
xchg
in
add
mov
mov
aaa
imulb
fs
push
repnz
insl
push
cmp
leave
mov
insl
shrl
jbe
jp
mov
jg
inc
xor
jns
pop
xor
mov
and
xor
jb
loope
sbb
xor
out
xor
iret
xorl
xor
cmp
pop
sub
sbb
out
outsb
fstps
add
cmp
mov
movsb
mov
xor
in
cmc
lds
lcall
ds
lahf
std
outsb
xchg
sbb
ljmp
inc
sbb
arpl
test
push
or
dec
sub
mov
inc
jns
scas
cmc
mov
mov
pop
adc
cli
push
fisttps
shr
test
pushl
pushf
pop
addr16
rcll
lcall
out
jp
pop
fsubrp
movsl
or
sub
adc
jecxz
int
pop
int3
fisttpl
aaa
jbe
jae
sbb
cmp
je
xchg
in
mov
push
jp
inc
jge
lahf
adc
add
push
jb
sbb
daa
inc
mov
sbb
stos
jo
or
ljmp
mov
lods
aaa
aas
ret
nop
pop
sub
lock
xchg
inc
mov
xor
int
mov
in
sub
aaa
xchg
jge
data16
xorb
jp
lock
adc
dec
icebp
add
add
mulb
ds
mov
jp
mov
jg
in
addb
mov
mov
js
xchg
sbb
out
mov
dec
or
or
out
fistpll
xchg
ss
hlt
pushf
jmp
adc
push
or
cli
cmp
xor
fs
push
jo
dec
fcmovu
mov
dec
jmp
cwtl
dec
inc
sti
das
loope
cmc
cmp
sbb
push
sbb
inc
add
stos
jne
pop
xchg
and
fnsave
mov
mov
scas
cwtl
mov
dec
mov
lock
fldt
fldz
insl
mov
cs
mov
in
fbstp
daa
and
icebp
cmp
lret
sub
ficoms
cmp
jne
stos
xchg
jl
cmc
adc
push
xor
ljmp
jecxz
je
dec
ja
mov
leave
pop
xor
repz
cli
testb
arpl
sub
dec
outsb
xchg
stc
leave
test
jp
stos
ret
mov
inc
movsb
iret
push
cmpb
push
in
jb
sbb
jge
mov
bound
sarl
mov
in
push
push
adc
sti
mov
ss
mov
icebp
hlt
pop
aad
fs
aam
mov
cmp
mull
lcall
popf
imul
xor
cltd
cmpsb
jb
jno
adc
cltd
pop
jae
out
lret
movl
daa
jmp
push
ja
dec
das
mov
into
jno
pop
and
or
inc
fsubrp
add
inc
dec
movl
outsl
mov
scas
mov
stos
or
mov
xor
jle
stos
insl
jecxz
jecxz
mov
mov
jo
insb
test
lods
test
es
or
repz
mov
inc
lea
daa
inc
add
imul
xchg
out
xlat
mov
popf
mov
mov
or
imulb
jo
pop
cmp
cmp
out
test
jo
mov
out
std
push
in
xor
jno
mov
movsl
mov
mov
popa
push
sarb
cmpb
add
and
or
jae
fidivs
fsts
sub
inc
jbe
shlb
mov
into
mov
dec
fcmovbe
imul
mov
out
sub
mov
int3
jns
fildl
jae
sub
mov
fisubl
sub
jnp
dec
andb
adc
xor
lahf
inc
sbb
add
inc
adc
push
outsb
dec
ljmp
insl
mov
cld
mov
push
jecxz
push
xchg
out
in
xor
in
sahf
test
outsb
pop
aad
and
shlb
sub
adc
jmp
imul
jb
scas
out
push
lret
lahf
lea
out
pop
fldenv
test
push
pusha
push
sbb
aad
jmp
lcall
xchg
mov
xchg
loopne
push
fisubl
adc
cwtl
mov
pop
dec
mov
adc
adc
orl
dec
test
jecxz
jl
add
adc
stos
and
dec
dec
dec
cmc
imul
cmpsl
jne
movsb
in
aaa
add
and
and
and
fnstenv
sbb
rorl
shrl
cmpsl
arpl
xchg
dec
aam
pop
pop
inc
in
jmp
jecxz
js
dec
add
mov
aaa
cs
ret
dec
xor
out
dec
xchg
sbb
scas
aad
loopne
mov
sti
xor
or
push
push
icebp
lcall
js
int
adc
sub
jmp
loopne
cltd
nop
and
add
mov
sbb
incl
fnstsw
sub
fbld
mov
inc
or
mov
cmp
les
or
push
cmp
je
sub
sbbb
arpl
shrl
xchg
jne
jl
push
popa
xlat
and
inc
cmp
gs
repz
push
loopne
push
push
mov
dec
push
pushf
dec
dec
das
daa
add
in
in
in
dec
push
dec
jns
arpl
mov
pop
mov
jo
es
cmpsl
push
xchg
xor
cmpsb
lahf
dec
in
sub
std
movsl
pop
test
jp
decb
mov
or
xor
test
adc
mov
dec
add
mov
test
lahf
jbe
push
js
ret
mov
shll
icebp
mov
pop
pushf
push
clc
les
cwtl
add
sub
in
sti
xchg
fwait
or
pop
leave
aaa
mov
outsl
aam
bound
dec
mov
in
dec
repz
cmc
ja
xor
mov
jo
adc
mov
dec
repz
fs
fistpll
jns,pt
mov
and
fistps
cmpsb
sbb
fdivp
mov
mov
popa
pop
pusha
pop
add
cmp
insl
or
mov
fnsave
sbb
imul
mov
and
push
pop
push
push
add
leave
xor
or
add
mov
sub
ss
push
push
xor
nop
ds
pop
xchg
adc
mov
ljmp
dec
push
or
mov
pushf
out
xchg
arpl
lock
cmpb
jl
stos
lret
pop
cs
aad
mov
pushf
fimull
dec
fwait
std
mov
jae
cmp
mov
xchg
add
lea
mov
add
test
jg
pop
mull
pop
rcll
mov
fs
stos
out
push
sub
cli
mov
test
int3
hlt
and
jge
shrl
sbb
xor
aaa
testl
and
mov
or
or
and
lahf
xor
js
lea
cli
pop
mov
es
mov
es
inc
push
jae
aaa
lcall
mov
or
addr16
mov
cmp
lea
push
out
add
or
scas
repnz
sbb
stc
sbbl
in
int3
lock
pop
nop
adc
enter
js
push
nop
out
mov
mov
loopne
mov
loop
jle
pusha
imul
psrlw
popf
addb
adc
mov
sbb
cmp
aad
enter
xchg
nop
lret
popa
jno
inc
ret
bound
mov
dec
pop
popa
aas
inc
shlb
hlt
int
mov
pop
push
cmp
pop
mov
aaa
dec
push
aas
adc
push
mov
out
ffreep
out
mov
andb
or
cmpl
mov
sbb
mov
sbb
icebp
push
loop
inc
dec
push
enter
jns
daa
lret
je
jbe
dec
push
xor
insb
cmp
pusha
adc
popa
and
in
add
lods
es
out
cmp
iret
fwait
lds
and
mov
inc
in
jg
fwait
lcall
scas
pop
or
popa
mov
mov
into
push
inc
ret
ss
movsl
sbb
dec
mov
sahf
sbb
cmp
mov
rcll
push
jmp
ret
jg
xchg
lds
out
push
test
les
test
divb
push
cmp
pop
ret
sbb
shll
mov
jbe
xor
je
pop
pop
lods
int
xchg
mov
cmp
daa
test
inc
inc
fildll
jp
pop
arpl
cmp
mov
push
pop
subb
inc
push
testl
nop
pop
aam
mov
mov
loope
enter
cmpsl
adc
jo
loope
xchg
dec
sahf
adc
ljmp
aaa
mov
lods
hlt
cmc
cld
fcoml
jnp
pop
enter
inc
in
mov
push
aad
ljmp
mov
test
cltd
popf
pushf
pop
cmc
push
inc
idivb
mov
fnstcw
cmc
in
or
mov
rol
rcrl
mov
dec
sub
mov
mov
jno
adc
pop
or
adc
lods
cld
repnz
fimuls
dec
repnz
test
mov
dec
jns
sarl
rcrl
add
pop
inc
aaa
cmp
mov
pusha
xor
test
push
lds
cmpsl
add
mov
jmp
popf
movsb
and
push
mov
add
aaa
mov
ja
movsb
mov
jmp
in
test
jo
sub
adc
adc
icebp
iret
jnp
pop
jne
push
xchg
popa
sub
dec
roll
mov
or
push
add
and
scas
mov
mov
or
and
pusha
std
cmp
jmp
mov
test
sbb
adc
imul
push
sub
test
add
mov
je
adc
xor
or
fldcw
imulb
or
arpl
push
fcmove
movsb
mov
push
sbb
jo
dec
or
test
mov
gs
mov
pusha
xchg
xor
pop
popa
jno
xchg
repz
dec
mov
movsl
loop
inc
fildl
and
mov
aaa
popa
jb
lods
adc
pop
pop
and
pop
cli
ret
outsl
icebp
bound
bound
mov
add
jle
dec
cmpl
push
xor
shl
imul
dec
add
sbb
adc
push
and
icebp
scas
mulb
aaa
in
xchg
ljmp
data16
das
sub
add
jae
pop
cmp
mov
pop
inc
ss
mov
mov
cmp
out
cmpsl
mov
lahf
mov
imul
enter
push
mov
push
and
mov
sub
pop
lods
jnp
mov
insl
inc
cmp
repnz
nop
shlb
mov
leave
orb
mov
sti
in
cmp
mov
loopne
stos
test
lret
or
mov
je
pushl
mov
js
mov
or
adc
enter
sub
sbb
and
mov
popa
mov
lock
dec
std
cmp
movsb
pushf
sub
notl
xor
xorb
aad
clc
xorb
lock
int3
stc
sub
dec
dec
rcrb
mov
xchg
pop
and
mov
inc
jne
sar
mov
push
cmc
pop
push
adc
mov
xchg
mov
das
in
xchg
sbb
mov
neg
aad
fidivrl
inc
fdivr
jle
shlb
notw
cmp
lods
inc
loope
push
xlat
adc
movsb
lock
cs
shlb
scas
stc
jge
int3
sub
pushf
sub
and
outsb
fsts
mov
loopne
sub
or
cmp
in
out
adcb
and
in
inc
push
xor
imul
add
fnstcw
cmpb
iret
and
and
popl
xchg
imul
loopne
jno
into
fdiv
loope
add
and
adc
xchg
inc
pushf
pop
push
adc
lret
jle
jle
mov
andb
daa
orl
fcmovnu
movnti
fisubs
popa
dec
popf
in
repnz
stos
jb
les
mov
push
gs
in
push
push
movsb
divb
push
mov
add
leave
add
xchg
sub
sbb
inc
and
std
dec
mov
and
sbb
dec
xchg
scas
std
dec
xor
adc
push
push
mov
mov
mov
das
insl
inc
int3
pusha
jns
inc
jns
subl
imul
jns
sahf
or
push
mov
jno
call
aad
adc
iret
pop
sbb
cs
and
ds
in
and
jo
inc
xchg
mov
push
out
cmpsb
jp
cli
sub
jb
je
hlt
filds
fcoml
ficompl
jno
add
mov
ret
mov
sbb
cmp
adc
dec
icebp
or
or
add
mov
pop
jle
cmpsb
repnz
mov
gs
stc
jl
test
pop
lea
repz
lods
scas
ljmp
xchg
les
inc
test
jp
sbb
test
xchg
pop
dec
or
sub
sbb
popf
add
pop
movsb
out
shll
and
mov
ss
data16
dec
sbb
and
filds
lret
mov
sub
stc
mov
pop
bound
fs
mov
insl
add
and
ret
inc
notl
aaa
xchg
es
int3
aas
adc
dec
push
mov
or
push
test
xor
repz
test
xor
add
cmp
outsb
fld1
sbb
mov
cmp
mov
sub
jo
repnz
sbb
dec
insb
in
and
in
mov
add
mov
jl
fwait
lds
mov
jl
push
dec
xor
and
icebp
inc
jne
xchg
lods
sarb
cmc
jmp
insl
leave
push
ret
ds
xor
dec
push
insl
dec
add
movsb
cmp
mov
orb
hlt
dec
pop
adc
jbe
das
sbb
inc
pop
mov
out
cmp
inc
fmull
into
int3
fstpt
in
shrb
cmp
adc
ljmp
adc
imul
pushf
sbb
popa
mov
fs
dec
sub
push
mov
jecxz
lods
sub
popf
std
dec
pop
arpl
popf
sbb
mov
mov
aam
hlt
xor
incl
popf
dec
icebp
cmpl
out
mov
or
pop
jmp
mov
mov
mov
fmul
mov
ds
inc
popa
or
mov
jmp
ret
pop
aam
mov
sbb
ljmp
jl
jo
mov
test
jae
negb
pop
sub
pop
push
mov
adcl
or
add
mov
jne
in
ljmp
in
stos
dec
gs
jle
sbb
pop
mov
sbb
push
adcb
jmp
sub
push
xchg
jl
arpl
and
xchg
push
push
je
cmp
in
mov
mov
dec
clc
or
sbb
shrb
sarl
movsb
mov
xchg
rcr
xor
xchg
repz
nop
fs
cmp
in
inc
loopne
jns
jae
test
addr16
shll
add
in
inc
mov
ret
stos
xor
popa
pop
or
xchg
and
cs
inc
push
aas
sbb
mov
inc
rcrl
mov
test
push
testb
pop
dec
lcall
aad
pop
jecxz
mov
mov
mov
ljmp
aas
fdivrs
or
mov
push
aad
mov
cmp
or
sub
dec
fstpt
imul
jo
out
mov
loope
push
in
cmp
xchg
lcall
sbb
lcall
daa
lock
rep
adc
loop
and
aaa
aad
sahf
aas
fadds
xchg
inc
jae
or
mov
sbbl
fnstcw
fnstsw
ret
and
pop
incl
scas
int
cmpsl
sbb
xlat
pop
add
and
pop
or
mov
push
incb
repz
and
iret
aaa
push
sbb
mov
add
std
cmc
xor
mov
or
fisubrs
ds
xchg
and
movsl
out
sbb
mov
push
pop
jle
jp
outsl
sub
push
pop
stc
loope
std
push
inc
sbb
inc
dec
xchg
cmp
pop
pusha
push
adc
sub
mov
and
in
clc
aad
outsl
lret
repnz
sbb
shlb
jg
or
js
sti
lahf
add
mov
add
and
mov
jp
ss
shr
xchg
and
addr16
fildll
lock
sti
outsb
lds
fldt
fstps
rcll
push
cli
add
jns
repnz
cmp
pop
or
push
ja
mov
mov
or
and
xorb
mov
ret
push
mov
jno
dec
ljmp
or
mov
xor
lret
es
mov
and
mov
insb
in
sarl
push
push
pop
jne
bound
cmp
in
mov
or
fs
jmp
jl
movsb
mov
push
rcrb
mov
or
mov
jl
cltd
push
jnp
mov
xchg
sahf
pop
out
lds
and
push
lods
fadd
jecxz
clc
lret
dec
in
adc
hlt
filds
subb
pop
jg
aaa
xchg
sbb
arpl
inc
or
or
int3
sbb
mov
push
mov
push
pop
into
xchg
fbld
xlat
ss
cmpsb
clc
sub
out
cwtl
inc
sbb
mov
repz
xchg
test
rolb
inc
leave
push
lret
pop
fdivl
jl
jnp
mov
sbb
scas
push
xchg
mov
idivb
imul
outsl
xor
fistpll
add
fcoms
pop
dec
dec
pop
nop
cmpsb
imul
ds
dec
add
xchg
fdivp
je
add
pop
les
jo
lcall
mov
decb
cmc
nop
ss
and
iret
rorb
jne
out
data16
ficompl
fadds
push
mov
sbb
insl
sub
fisubrs
pop
jp
cmpsl
fld
mov
mov
fwait
add
mov
js
shl
mov
out
cltd
xor
aaa
gs
xchg
cmpsb
push
sub
movl
out
test
test
lret
movsl
repz
popa
js
and
xor
pop
scas
mov
es
hlt
add
mov
scas
popf
mov
sub
test
mov
shufps
mov
cld
ds
jb
loope
jb
xchg
ds
add
cmp
inc
in
lea
xor
stc
sbb
mov
jno
push
sbb
fistl
push
fwait
sub
testl
and
fs
adc
rcr
push
xor
test
and
inc
xlat
aad
or
mov
stc
out
dec
aam
popa
xor
inc
sub
cmp
dec
mov
jge
jl
incl
xchg
popa
mov
cmp
cltd
sbb
sbb
add
jae
sbbb
jae
and
xchg
mov
xor
mov
cmpb
mov
por
cmpsb
fnclex
movsb
shl
fdivr
fwait
repz
mov
lea
inc
add
out
cmp
rclb
xor
fcmovnb
push
inc
aas
push
sbb
movsb
push
xor
nop
jmp
push
nop
inc
sbb
pushf
cmp
popf
jp
ret
lahf
dec
popa
push
xchg
mov
dec
sbb
push
aas
dec
cs
pop
mov
or
fldenv
dec
sub
xor
xchg
jns
jns
lcall
lahf
mov
je
imulb
lods
leave
sbb
fidivrs
xor
neg
frstor
testl
mov
pop
lret
in
in
insb
loop
icebp
mov
ret
fcom
pop
int
add
faddl
add
sub
add
jbe
ret
inc
push
or
push
mov
cmp
pop
in
and
xchg
inc
pop
jmp
push
adc
test
lock
fs
mov
loopne
push
hlt
push
fmull
cmp
and
sbb
jle
or
add
mov
aas
imul
jae
add
sub
add
pop
inc
enter
sub
cmp
push
loopne
out
and
lret
cmp
jns
cmpsb
cwtl
cld
shll
orl
fists
addr16
pushf
shrl
fdivrl
xchg
sub
pop
push
pop
jnp
aad
inc
ja
adc
icebp
sub
adc
movsb
adc
cwtl
push
fisttpl
ljmp
mov
dec
push
or
dec
inc
add
cli
imul
cmp
in
mov
cmc
and
enter
cmc
int3
mov
xor
and
js
sub
in
xor
mov
into
mov
rcl
shrl
aam
push
inc
or
test
jp
add
fbstp
xor
fbstp
cmp
dec
sbbb
inc
pop
mov
mov
pop
adc
sti
jmp
loopne
rclb
movsb
cmp
adc
stos
sbb
popf
iret
lock
mov
dec
adc
pop
scas
and
loope
es
movsb
mov
rcll
mov
pop
stos
pop
xchg
inc
or
or
sarl
jmp
jo
divb
mov
push
sub
out
xor
enter
pop
leave
clc
fistpl
int3
push
mov
jecxz
jl
in
decb
inc
mov
insl
loop
dec
xchg
xchg
ret
push
hlt
push
xor
fstps
cmp
push
dec
mov
lret
mov
cmp
std
mov
xadd
test
fwait
lahf
sub
dec
sub
push
inc
cmpsb
insl
sbb
jbe
lea
insb
cwtl
daa
out
mulb
test
sub
jo
out
mov
cmp
jbe
sub
add
ja
pop
jg
sub
push
mov
add
cmp
stos
jg
fsubs
mov
sbb
or
and
daa
sbb
adc
push
imul
ror
jge
sub
fidivs
and
loop
adc
ret
push
outsb
sub
mov
xchg
jnp
jo
xchg
push
insb
mov
loopne
adc
jmp
shlb
cld
and
xchg
jl
push
cs
jle
out
das
mov
jae
dec
push
insl
shrl
xor
and
pop
iret
xor
ja
shr
test
jmp
leave
les
lock
jns
inc
xchg
loop
pop
fisttpll
loopne
jns
aad
loop
test
aas
ss
sbb
scas
mov
and
test
inc
outsb
jns
pop
daa
pop
sarl
push
push
ret
es
outsb
scas
bound
outsl
cmp
inc
adc
popa
mov
jle
mov
scas
aas
push
mov
aam
sbb
and
loopne
push
mov
fnstenv
pop
xchg
lcall
pushf
pusha
enter
inc
mov
and
int
out
pop
movsb
sbb
iret
in
sbb
or
or
push
mov
or
outsl
dec
sti
sbb
push
loope
sarb
xchg
push
scas
out
test
dec
jmp
jecxz
aaa
jge
or
cmp
add
fdivrs
and
sarl
mov
dec
push
pop
add
fstpt
nop
stos
andb
into
xchg
xchg
inc
ret
ljmp
and
cltd
mov
dec
int3
add
and
idivl
dec
shr
pop
sbb
jl
dec
jo
aas
mov
addr16
lahf
jnp
jae
jp
adc
orb
mov
gs
mov
cmp
testb
sbb
fimuls
sbb
mov
popa
jno
and
leave
push
mov
push
cmp
insb
mov
rcl
cmp
and
xor
sub
out
push
mov
add
cmpsl
loopne
out
mov
mov
mov
out
inc
sbb
xchg
xor
mov
xchg
pop
out
fmulp
push
aaa
inc
dec
mov
loop
jmp
push
xchg
dec
gs
jg
inc
mov
push
add
dec
dec
xor
cmpsb
mov
jmp
pushf
inc
jle
jge
mov
imul
pop
or
jmp
adc
cmp
enter
ret
push
aam
cmp
xor
push
pop
mov
fdiv
test
movsl
dec
mov
cmpsl
out
sub
fnstsw
sbb
mov
mov
adc
mov
imul
mov
or
mov
arpl
nop
sub
jo
mov
add
fsubrp
test
sub
out
sub
jnp
std
out
cs
and
lock
ja
ret
stos
pop
or
call
inc
pusha
mov
mov
cld
push
pop
arpl
xor
or
lea
fst
push
in
test
push
xor
out
int3
pop
pop
movsl
inc
out
sarb
fldl
lret
push
call
in
cwtl
mov
shll
orl
add
or
add
fmul
cs
jbe
cmp
or
fcompl
dec
add
cmp
pop
in
fsubl
jae
cmpsl
outsl
push
enter
add
push
cwtl
jae
sbb
clc
or
hlt
jg
cmp
out
lahf
dec
jmp
test
push
adc
cmp
mov
sti
jae
rolb
pop
int
sbb
mov
jbe
es
and
inc
int3
dec
push
shl
call
sti
mov
ss
ret
divl
icebp
xor
xchg
je
icebp
mov
leave
mov
inc
cs
fisubl
adc
jo
jp
inc
dec
ljmp
adc
cmp
pop
cltd
shrl
dec
add
lcall
aam
xlat
xchg
out
fistps
shlb
or
xchg
or
sub
pop
aas
out
orl
add
loope
iret
pop
mov
inc
ds
rcl
repnz
push
cltd
mov
ror
push
mov
cwtl
repz
pop
mov
and
ljmp
mov
push
rolb
cmpsb
mov
dec
lods
out
aaa
psrlq
jp
dec
mov
enter
leave
mov
fs
cmc
adc
call
test
stc
jae
mulb
jge
xorb
pop
mov
xchg
out
scas
pop
data16
cmp
iret
jae
in
mov
repnz
mov
data16
popa
stos
loope
xor
xor
xchg
in
add
cmp
push
inc
sbbl
int
pop
imul
sub
xor
cmc
xchg
imul
nop
pop
dec
jne
sar
sti
ficoms
movl
xchg
pushf
imul
fcomp
mov
fsubrl
das
lcall
sarb
or
insl
std
mov
mov
push
push
inc
clc
lret
mov
push
sub
jne
dec
mov
fisubrs
jo
dec
inc
xor
into
popf
inc
sbb
xchg
inc
call
dec
push
test
add
out
pop
test
adc
aaa
jno
aam
xor
out
push
dec
and
adc
imul
outsb
in
aam
jp
add
jno
das
es
dec
cmc
inc
push
adc
sahf
mov
std
dec
inc
add
mov
aam
mov
aas
ljmp
inc
xor
jo
orb
add
mov
mov
xor
xor
adc
nop
popf
inc
rcrl
mov
cmc
cmpsl
popf
xor
adc
add
fcomp
pop
shll
lea
les
adcl
add
cmpl
mov
addr16
jo
sub
sbb
jp
lret
push
mov
sbb
test
or
lods
stc
add
add
and
pop
mov
jb
push
cmp
push
stos
add
popf
pushf
dec
mov
shll
insb
xchg
mov
pop
in
lock
and
sub
ficompl
lods
mov
xchg
add
movsb
imul
jnp
out
xchg
cmp
mov
das
stos
xchg
fldt
jne
aas
icebp
out
lock
sbb
fs
imul
repz
pop
push
daa
mov
movsl
mov
aaa
xor
mov
jns
inc
into
bound
call
or
mov
fdivrl
mov
movsl
fsubrs
orl
jle
mov
dec
das
jns
insl
xor
pushl
jecxz
mov
pushf
inc
jmp
inc
jne
jge
xor
push
out
xchg
and
addr16
pop
gs
jge
stc
pop
dec
jae
lahf
testl
pop
movb
push
out
add
and
fisubrl
xlat
push
imul
arpl
xor
inc
rcr
adc
and
shlb
add
lock
into
xor
mov
testl
outsb
mov
xchg
ljmp
scas
cbtw
cmpsl
je
mov
xchg
lods
mov
pop
or
ret
fistps
jl
xchg
loopne
or
daa
sbb
adc
outsl
in
sub
adc
pop
fwait
lods
stos
icebp
add
pop
fdivrl
fldt
sub
adc
ss
pushf
scas
sub
pop
loope
mov
ds
xchg
insb
cmpsl
in
notl
xchg
sub
popa
dec
cwtl
pushf
sub
shll
adc
pusha
inc
xor
repnz
xor
pop
loope
cmp
xor
js
fstl
inc
or
pop
xchg
rcll
ror
nop
inc
lock
std
push
popf
pop
dec
or
dec
hlt
bound
data16
bound
sub
scas
pop
jo
push
and
push
test
push
adc
push
cmp
insb
mov
movsb
and
hlt
adc
dec
pop
inc
repz
adc
xor
loope
cmp
sbb
in
hlt
dec
jp
roll
pop
sbb
inc
test
call
xchg
push
push
jnp
repnz
dec
dec
dec
dec
outsl
gs
aam
cmp
notl
imul
loopne
sub
rcrb
push
xor
sbb
dec
cmp
pop
xor
aad
flds
lret
subb
xchg
ljmp
dec
ret
lock
lret
cmc
xchg
xlat
dec
ljmp
cmp
stos
call
stos
sub
mov
ret
lret
dec
stos
adc
outsl
add
icebp
mov
aas
push
xchg
cli
fisttps
outsb
outsb
sub
pop
sub
test
dec
sbb
fmulp
mov
sbb
out
mov
pop
insl
cmp
inc
xchg
push
lretw
ja
cmc
shrl
dec
lret
ret
ja
inc
or
incb
lret
ficompl
das
mov
int3
adc
cmc
aaa
sbb
mov
and
test
ds
or
into
sub
adc
test
ret
xchg
in
cs
call
inc
mov
imul
inc
xor
or
ljmp
adc
divl
les
repz
cmp
inc
mov
pop
rclb
ret
shl
scas
jae
jp
test
mov
cmpsl
dec
stos
repnz
test
pop
and
push
dec
push
sbb
sarl
push
dec
stos
pop
cmp
stos
pop
pushf
xchg
push
pop
jmp
movsb
push
imul
xchg
jo
xor
or
cli
inc
shlb
add
xor
adc
adcl
js
in
mov
xchg
aas
sbb
mov
cmpsl
inc
movsb
sub
push
int3
cli
fwait
dec
push
sbb
mov
call
jl
fadds
sub
xchg
jns
push
jne
insl
lods
mov
inc
cmpsb
les
or
mov
imul
aad
mov
imul
insl
mov
cs
sbb
sub
outsl
out
add
stos
fnstsw
addl
sbb
push
sub
mov
sbb
cmc
sbb
fdivs
aaa
mov
pop
arpl
repnz
push
mov
or
das
inc
or
inc
jno
lds
xchg
or
or
dec
jl
lahf
sti
les
imul
sub
adc
sub
add
sbb
push
clc
test
or
push
xchg
test
xor
mov
dec
dec
or
out
push
rcr
iret
addb
sbb
outsb
subl
sub
shll
cli
scas
leave
imul
push
mov
adc
jmp
hlt
adc
pusha
sbb
inc
jb
pushl
and
gs
inc
or
lds
test
insb
push
js
sbb
mov
popf
jo
pop
lret
push
or
mov
pop
pop
jmp
xlat
jno
mov
and
push
and
icebp
int
in
inc
mov
lods
ficoms
and
cmc
ret
mov
je
imul
insl
mov
fwait
shll
movsb
mov
mov
out
nop
lock
mov
inc
jnp
fsts
jp
jp
pop
les
daa
push
icebp
adc
mov
dec
mov
insb
outsb
inc
dec
push
repnz
fildll
push
xor
xor
xor
int
sub
ror
xchg
xor
out
fidivrs
outsb
hlt
neg
pop
stos
add
incb
adc
cs
sub
adc
pop
call
sahf
test
leave
cmp
jno
sub
jbe
lcall
and
add
xchg
cmp
imul
cmpb
jmp
je
fimuls
ss
sub
and
push
fld
repnz
ret
sbb
sbb
push
and
push
cmpsb
sbb
pop
fdiv
in
insl
pop
enter
jnp
enter
fisttps
add
fldenv
push
xor
sub
popa
int
push
adc
outsl
lock
add
adc
xchg
push
mov
mov
enter
inc
lret
lods
stos
sub
pop
sub
jb
repz
scas
sbb
mov
cmp
mov
jnp
sbb
or
pop
mov
mov
cmp
cmp
adc
iret
scas
or
aas
dec
inc
lods
leave
or
or
cmp
xor
and
hlt
adc
inc
mov
cltd
test
xor
jbe
fsts
dec
fldt
cmp
inc
aaa
test
dec
data16
xorl
mov
jne
sub
dec
or
cmpsb
aas
and
sub
mov
shrl
cmpsl
mov
mov
pop
cmp
jge
jg
je
xchg
push
into
dec
pop
icebp
or
push
adc
or
or
out
inc
daa
stos
bound
data16
cmp
mull
xchg
shr
fdivs
mov
gs
push
mov
xor
popf
lds
dec
and
xlat
xchg
mov
std
cmp
pushf
jp
and
leave
fstl
arpl
in
mov
jl
fsub
cmp
pop
insl
mov
fwait
dec
xchg
xchg
xchg
lcall
inc
fnstenv
cld
rorb
xlat
aas
rolb
mov
out
stos
xchg
sub
stc
je
push
lds
mov
sub
shll
jno
push
inc
int
xchg
mov
fs
fiadds
jecxz
lods
pusha
out
into
jnp
mov
in
scas
or
push
sbb
sub
cmpsb
dec
insl
sbb
pop
jb
into
enter
mov
dec
xchg
inc
push
mov
stc
push
push
test
test
mov
scas
xchg
xchg
cmp
inc
pop
pusha
mov
jno
testb
sbb
mov
or
pop
cmp
sti
sarb
jmp
inc
aad
mov
fwait
pop
or
std
stos
clc
pop
in
or
jb
idivb
dec
jecxz
int3
add
cmpb
imul
pop
or
nop
imulb
xchg
push
pop
gs
inc
outsb
inc
mov
add
aaa
dec
sbb
mov
fisttpl
jnp
push
into
push
cmp
test
sbb
sbb
xlat
sbb
sbb
fadd
mov
mov
add
les
dec
jo
add
and
cmc
fisubrl
push
stos
adcl
or
gs
cmp
fcompl
or
lock
mov
repnz
daa
sub
in
sub
fwait
and
mov
sbb
xor
mov
test
movsl
repnz
lahf
ljmp
add
clc
cmpsl
cmc
xlat
js
lret
testb
js
pop
dec
sbb
lret
inc
mov
inc
mov
and
jecxz
or
cmpl
add
cmp
pop
sahf
sbb
insl
pop
enter
sti
lds
mov
rorl
mov
mov
push
stos
push
inc
pop
rcll
push
mull
sbb
jle
or
lea
jle
inc
and
mov
sahf
jp
jp
js
jl
fnsave
fbld
rcrb
aaa
hlt
xor
in
xchg
maskmovq
testl
inc
and
jmp
sub
dec
bound
pop
fisubrs
dec
jnp
es
add
leave
lods
mov
xchg
and
int
adc
adc
pop
stos
cmp
cmp
push
sub
cmp
outsb
dec
hlt
test
int3
add
scas
sarl
movsl
cmp
pop
bound
cmc
stos
lods
pop
sbb
ss
std
mov
xor
stos
and
data16
lods
outsl
add
dec
mov
cltd
stos
cmp
repz
inc
push
sti
or
push
sbb
jmp
mov
fldt
out
fcompl
movsb
and
lock
push
hlt
outsl
dec
xchg
call
jnp
push
adc
or
jge
daa
cwtl
inc
outsb
xor
mov
mov
xor
xchg
loop
mov
adc
rcr
inc
inc
std
sti
out
jl
and
pop
call
push
xor
mov
lret
jno
pop
jo
mov
dec
stos
mov
addr16
jbe
xchg
and
repnz
and
sti
push
or
ljmp
mov
test
push
mov
lret
ds
int
sahf
stc
or
jne
inc
xchg
push
mov
shrb
or
sub
leave
clc
into
test
cs
stos
cmp
jnp
mov
ljmpw
push
stos
in
and
lods
xchg
mov
arpl
cld
push
lcall
loopne
scas
fcompl
mov
sub
clc
divl
loop
aas
sbb
add
sbb
test
mov
movl
mov
pushf
test
js
xchg
fcomi
aas
sbb
and
scas
js
mov
adc
dec
cld
add
pop
or
into
addr16
std
insb
psubusb
mov
inc
pop
sbbb
add
mov
in
inc
stc
xchg
dec
sbb
gs
ret
sbbb
hlt
lods
fsts
cmp
pop
in
mov
popf
loop
fs
sbb
push
xchg
push
jnp
in
inc
insl
repz
jnp
int3
lcall
ret
jl
clc
outsl
add
in
movsl
xor
jge
dec
outsl
push
aad
scas
imulb
repz
lcall
mov
jb
pop
mov
jnp
imul
shll
xor
aam
inc
and
inc
sub
ret
xlat
popf
pop
cld
shlb
jo
mov
shl
nop
int3
icebp
mov
rcrb
es
out
cmc
pop
ss
xor
mov
dec
jbe
sbb
mov
xchg
lret
movsb
or
ret
jg
mov
jge
inc
mov
outsl
mov
ds
or
cltd
fwait
pop
cltd
xor
cmp
popf
loop
mov
clc
jg
jle
hlt
cmc
mov
adc
mov
das
mov
inc
ret
mov
dec
fisttpll
out
jno
cmp
or
mov
sbb
adc
mov
test
dec
mov
fildll
fstps
jmp
cmp
pop
mov
mov
sbb
std
test
xchg
push
js
xchg
clc
in
jecxz
jns
sahf
icebp
inc
stc
cmc
test
add
lcall
fsts
mov
mov
iret
rcrl
mov
pop
cmp
or
scas
xchg
mov
in
roll
out
cwtl
aas
and
sbb
pusha
in
lock
adc
and
xchg
dec
adc
xchg
jo
add
sar
fs
push
aad
xchg
sub
pusha
test
mov
and
xchg
push
add
sbb
mull
push
pop
xchg
jmp
jle
pop
inc
dec
dec
pop
ds
test
out
mov
dec
mov
add
mov
popf
sbb
add
or
add
lods
ja
sub
push
jmp
mov
pop
outsb
dec
dec
cmp
lret
cmpsb
out
mov
sub
pop
sub
jo
dec
clc
pop
pop
lret
mov
mov
in
lea
call
sbb
es
and
rclb
imul
in
out
notl
and
aaa
sbb
sysret
rclb
fyl2x
add
lods
and
outsb
lds
jl
xchg
gs
mov
adc
mov
rorl
pop
mov
repnz
fstl
js
clc
test
loope
ret
add
repz
rorb
sbbl
jmp
lret
imul
cmpsb
xor
aaa
mov
orb
int
dec
js
jbe
ds
mov
loop
sahf
in
jnp
add
jle
xor
rcrb
ror
inc
shrl
rcrb
inc
dec
rcrb
push
jno
jbe
jle
or
xchg
cs
sbb
popf
adc
inc
ja
push
test
adc
repnz
lods
cli
sbb
pop
and
mov
mov
pop
mov
and
add
cmc
pop
sbb
inc
xor
dec
mov
hlt
rolb
cmp
jns
jp
pop
xchg
add
subl
sahf
sbb
pusha
xor
jecxz
stos
mov
mov
cmpsl
pop
nop
jp
dec
mov
pop
inc
andl
dec
lret
push
out
push
in
dec
call
test
dec
inc
nop
lea
in
pushf
adc
adc
adc
or
call
in
mov
sti
jge
fisttpll
push
into
sbb
iret
push
jne
pop
cmp
insl
add
les
sbb
leave
lret
hlt
adc
xchg
push
mov
cmc
push
mov
pushf
adc
jp
mov
aas
or
sbb
cmp
and
sbb
dec
or
rorb
sub
fistpl
jne
add
gs
xor
push
mov
call
jmp
fnsave
data16
cmp
dec
das
inc
mov
insb
and
faddp
xchg
push
inc
jl
dec
cmpb
mov
fisubrl
fbstp
pop
ret
sub
stc
pushf
inc
or
cmp
fstps
sarb
cmp
imul
mov
cltd
add
into
bound
scas
push
add
jmp
jle
fs
sbb
pop
movsl
clc
jecxz
mov
hlt
out
lods
xchg
adc
push
decb
jle
cmp
fwait
out
pop
cmc
or
mov
push
adc
mov
dec
jmp
cld
fldenv
mov
out
dec
and
ds
mov
ficompl
gs
fdivl
fnstcw
cmpl
jecxz
outsl
dec
or
and
cmp
ss
mov
imul
push
f2xm1
mov
sete
test
popf
mov
pop
mov
push
push
pop
dec
ja
lods
cli
mov
inc
mov
push
nop
jno
mov
push
inc
lcall
pop
movsl
push
jecxz
pop
mov
in
push
fwait
test
sbb
sbb
les
pop
sub
shl
inc
into
xor
sbb
ja
sub
inc
xor
test
xor
in
out
adc
xchg
pop
jmp
fs
imul
sbb
mov
sub
ja
fs
xchg
test
or
cltd
testl
in
adc
jbe
pop
jmp
pusha
int3
jecxz
or
sbb
jbe
stos
push
sub
or
mov
pop
lods
out
sbb
mov
test
shr
jbe
lods
mov
ret
fs
dec
fistps
inc
xchg
xlat
aam
dec
add
stc
xor
ficompl
or
mov
or
push
movsb
push
inc
xchg
fdivl
push
push
enter
in
js
xor
lret
lahf
pop
dec
adc
test
popa
cmc
outsl
les
push
jg
testl
test
pusha
jl
gs
mov
pushf
add
decb
jecxz
push
cmp
cli
stc
xchg
je
imul
cmp
xor
sub
pop
je
mov
sub
rclb
test
test
arpl
rorl
out
push
pop
pop
lret
pop
and
xchg
mov
add
gs
in
xchg
add
ljmp
and
mov
call
sbb
adcb
pushf
test
dec
jno
out
xor
and
in
cmp
out
jl
sarb
lods
int
out
cs
leave
test
dec
mov
fimuls
jnp
in
mov
sbb
sbb
test
pop
dec
cmp
push
xchg
add
loope
dec
mov
inc
sbb
in
inc
push
sub
or
push
enter
sub
or
adc
xchg
sbb
adc
adc
add
fildll
cmpb
jns
jo
movsl
mov
inc
xor
in
pusha
inc
add
mov
push
add
sub
sub
jns
mov
bswap
add
mov
xchg
cli
pop
pop
jg
fs
insl
and
or
cmc
xchg
pushf
ret
test
mov
sarb
xchg
mov
inc
and
test
inc
nop
lock
cld
lea
icebp
inc
sahf
cli
jne
es
aaa
or
jmp
repnz
call
xchg
mov
addl
push
fimuls
xchg
fstpt
fistps
sub
lea
jns
std
lea
insl
ss
in
scas
insb
mov
jb
push
xorb
aas
in
jmp
pop
jo
loopne
and
subb
fldenv
and
popa
pop
inc
test
fucomp
loop
or
add
or
jge
xlat
out
dec
adc
add
loop
and
xchg
inc
push
in
mov
std
adc
push
scas
pop
xor
adc
imul
std
fdivrl
popf
ret
xchg
hlt
test
mov
insb
repnz
imul
mov
mov
imul
ljmp
mov
shl
in
mov
loop
andl
xchg
jnp
in
scas
bound
push
xchg
adc
fbstp
sbb
or
scas
test
sbb
jnp
mov
push
pop
inc
mov
adc
and
imul
lcall
outsl
mov
fisubrl
movsl
not
out
cmpb
fstpl
repnz
adc
nop
es
jb
sbb
xor
data16
movsb
sub
ficoms
out
loopne
dec
daa
lods
xchg
adc
sub
aam
xchg
lods
bnd
iret
je
leave
mov
cmc
lahf
and
or
and
push
les
scas
test
jl
push
mov
popa
lret
adc
lret
movsb
mov
dec
les
add
xchg
mov
mov
fsubrl
ret
aad
inc
xlat
mov
fisubs
out
lods
sbb
sbb
cmp
dec
ficoms
mov
push
outsb
cltd
mov
mov
js
loop
mov
and
stos
icebp
movb
fnstsw
or
jb
es
gs
hlt
pop
or
or
ret
flds
cmc
mov
out
aad
imul
mov
and
les
cld
and
mov
int3
icebp
and
dec
inc
pop
jle
add
add
mov
xor
movsb
sbb
xchg
clc
sti
lods
aam
mov
cmp
mov
lahf
mov
loope
push
loopne
mov
jl
sti
sub
adc
ret
pop
sub
cltd
pusha
cwtl
inc
cltd
andb
fistpll
and
int3
ret
stos
cmpsb
mov
lock
mov
mov
ficomps
inc
mov
call
loop
fwait
sub
negl
push
out
inc
imul
aad
jne
jno
lock
icebp
loopne
mov
dec
push
popf
add
mov
in
ljmp
sahf
movsb
fsubrl
jns
ja
in
mov
lret
add
std
sbb
mov
out
pop
sub
in
jo
outsl
mov
cmp
ja
xor
jne
sbb
inc
mov
sbb
mov
xchg
mov
cmpsl
gs
jbe
pushf
fildll
dec
jle
cmp
mov
ret
inc
mov
mov
sti
out
shlb
xchg
push
pop
xchg
fisubrl
mov
roll
add
shr
cmp
mov
mov
cmpsl
sar
mov
or
xchg
jp
jg
stos
xchg
mov
loop
push
jecxz
outsb
sbb
gs
sbb
addr16
sbb
mov
pop
js
fcomp
mov
sub
daa
jge
test
sahf
maskmovq
mull
cmp
mov
and
jmp
lods
mov
movsl
imul
mov
xchg
xchg
jp
jae
sahf
ror
arpl
jg
stos
push
cld
sub
push
jno
js
lret
jbe
lods
jle
mov
add
dec
adc
jmp
aas
xlat
sbb
xor
sbb
dec
ret
imul
lret
push
cmpsl
cmpsb
sbb
rclb
mov
jp
cld
add
bound
add
ret
adc
ror
rolb
pop
scas
mov
mov
dec
shlb
insl
sbb
bound
dec
push
mov
cli
jno
fdivrs
cld
out
daa
je
push
sti
ret
adc
hlt
pop
dec
mov
lods
dec
fldenv
dec
and
mov
les
lock
mov
outsb
xor
jecxz
pop
add
xor
mul
rcll
jecxz
adc
les
cs
repnz
pusha
sarl
shlb
xor
sub
cmp
rolb
sub
mov
repz
std
sahf
clc
clc
cmp
fistpll
inc
push
mov
mov
adc
outsl
negl
outsl
jno
test
lock
rol
cli
mov
movsl
xchg
mov
sub
and
mov
jle
mov
cld
cmpb
mov
or
mov
cli
out
imul
xchg
xchg
lds
sbb
clc
jno
fdivl
js
inc
mov
or
out
in
jecxz
in
aam
mov
push
pop
inc
adc
in
sub
xchg
into
push
xor
xor
pop
movb
xor
xchg
xor
lods
lods
das
inc
fs
call
xchg
sbb
ss
in
xor
inc
out
sbb
mov
fimuls
ljmp
insl
cmpsl
int3
dec
adc
cmp
clc
sbb
cmpb
aaa
icebp
sub
into
push
mov
add
in
lods
or
adc
mov
sub
xchg
mov
sti
or
lds
mov
mov
imul
or
pop
pop
dec
sbb
sub
jg
push
insl
ret
hlt
pop
loope
je
outsl
pop
jmp
inc
lcall
pop
xor
sbb
enter
mov
rcll
push
jnp
aad
in
scas
lock
inc
mov
mov
in
xorl
imul
jnp
add
or
sbb
push
and
add
icebp
sbb
sub
in
inc
cmp
push
xchg
add
mov
fcoml
inc
mov
pop
mov
mov
push
dec
push
sbb
jg
sahf
lret
out
or
js
pop
push
push
enter
pop
mov
jg
or
rcrb
popa
mov
dec
outsl
mov
or
inc
or
or
adc
aad
add
je
out
mov
jge
ficoml
mov
cmpsb
out
test
adc
push
jecxz
or
cmp
in
mov
daa
and
mov
out
add
imul
lret
pop
push
imul
enter
xchg
int3
insb
outsb
xchg
scas
xor
dec
xchg
lea
mov
test
jb
mov
sub
repz
popf
rcl
lahf
inc
fs
movsl
ss
dec
pop
mov
fcomi
ja
pop
xchg
xchg
adc
insb
mov
and
test
ret
add
out
sbb
lahf
push
mov
out
aas
lcall
lods
arpl
lods
mov
jb
and
inc
sbb
and
mov
push
fisubrs
add
fstpl
mul
pop
xchg
repnz
cmpsl
cmp
mov
inc
xor
add
xchg
cmpsl
xor
in
fs
lds
outsb
push
xor
xor
cmp
shlb
fnstcw
add
jae
xchg
inc
fs
popa
adc
bound
inc
pop
js
or
sub
popf
jno
push
mov
sbb
ss
not
fwait
sbb
push
mov
stos
xchg
dec
das
mull
pop
and
fidivs
inc
push
int3
sub
xchg
int
jp
add
mov
arpl
cmp
xchg
or
mov
out
mov
push
imul
shll
dec
rcr
or
repnz
icebp
add
inc
xchg
daa
xchg
or
sbb
inc
sbb
mov
xor
sbb
jecxz
pop
jg
hlt
arpl
js
addl
ds
mov
and
in
cli
cmp
cmp
mov
out
add
jmp
mov
xor
xor
lret
xchg
xchg
mov
mov
mov
mov
adc
and
xchg
scas
mov
rcrl
out
xlat
pop
cs
sbbl
and
test
shll
xor
dec
into
mov
xchg
or
sub
std
stos
xor
pop
mov
mov
adc
bound
xchg
ja
mov
lds
rorb
and
jl
xchg
mov
dec
outsb
je
cwtl
push
rcrb
mov
add
out
mov
push
ljmp
cmp
pop
xchg
sbb
jbe
mov
jnp
xchg
push
jl
out
hlt
enter
mov
cltd
push
mov
aad
mov
push
ja
xchg
popa
and
dec
aad
into
sbb
mov
cmp
addr16
fisubrs
je
hlt
sub
cld
inc
sbb
and
es
xor
or
scas
pop
or
inc
int3
xchg
pop
dec
lods
sets
test
cs
lock
add
dec
scas
aam
lods
push
pop
dec
lds
subb
jno
sbb
test
add
loope
subb
cltd
adc
xchg
sbb
mov
or
inc
aas
jne
jmp
inc
pop
insb
sahf
sbb
jno
sub
jne
and
fistpl
in
sarb
or
stos
lds
js
cmpsl
idivb
pop
inc
or
cwtl
sub
lods
hlt
out
int
push
jmp
sbb
xlat
incl
sti
stos
pmulhuw
dec
sub
out
std
xchg
push
ljmp
mov
lds
pop
cmc
jmp
adc
cld
sti
ret
add
adc
and
mov
dec
mov
jge
or
je
lahf
cmpsb
cmpsb
scas
jo
cmpsl
lock
sub
popa
xchg
jmp
and
shl
lds
dec
fmull
nop
lods
fs
push
ret
and
js
xchg
cmp
ret
push
pop
sbb
rolb
inc
jl,pt
cmp
mov
pop
jge
loope
xor
cmp
jo
shrb
pop
call
inc
aad
test
dec
aas
test
rcrb
sbb
jne
int
ret
inc
popl
xorb
fstl
push
xchg
mov
ds
jnp
push
nop
mov
mov
jo
dec
mov
repz
add
mov
lock
push
enter
lods
movsb
mov
xchg
fisttpl
jp
movsl
and
or
push
dec
std
pop
sub
test
mov
mov
add
sbb
mov
mov
xor
mov
pop
lods
fistpl
test
movsb
imul
shll
or
fnsave
cwtl
fmuls
jp
sub
pusha
xchg
cmp
dec
in
mov
leave
data16
mov
pop
fcmovnb
in
iret
ret
xor
dec
mov
fnstenv
mov
jnp
lcall
pop
xlat
sub
in
outsl
sbb
pop
js
xor
push
push
mov
adc
ja
andl
and
xchg
sbb
adc
mov
iret
js
jmp
adc
xor
lahf
mov
bound
loop
test
and
aam
and
loope
lret
pop
bound
push
push
fsubl
mov
jbe
loop
cmp
xchg
mov
jecxz
inc
iret
into
call
pop
lahf
loope
sbb
push
cmp
aad
and
imul
mov
sub
xor
inc
lea
repnz
mov
in
aas
scas
mov
mov
mov
jne
mov
or
mov
and
ffree
or
dec
inc
dec
scas
push
and
fnstcw
scas
dec
cmp
mov
inc
ja
stc
push
pushl
jno
inc
push
and
push
pushf
ss
mov
or
ret
jg
cmp
inc
mov
dec
pop
xor
ss
mov
mov
lcall
cltd
repz
xchg
negb
jmp
sub
ja
lahf
mov
mov
lret
adc
roll
pop
pop
lods
mov
outsl
or
jb
mov
fsts
add
cwtl
call
sbb
call
aam
scas
and
sub
sub
lea
add
pusha
mov
shll
in
mov
push
fsubr
dec
call
cld
mov
daa
add
aam
xchg
sub
add
pop
ret
xchg
cwtl
lods
cmpsb
mov
cmpsb
mov
test
stos
jae
rorb
repz
jb
incl
mov
push
lods
jp
or
fdivl
xchg
xchg
mov
pop
test
xchg
sub
rclb
adc
sbb
sub
mov
push
xchg
roll
mov
out
pop
adc
inc
fcoml
mov
aaa
mov
mov
pop
sub
dec
stc
das
outsl
mov
dec
mov
in
mov
sub
or
mov
mov
inc
fmuls
ljmp
fidivl
push
mov
into
fmuls
stc
rcrl
mov
pop
or
outsl
popa
xchg
xchg
outsl
adc
jge
sub
mov
cmc
mov
and
aam
gs
insb
add
scas
testb
jge
dec
movsb
pop
int
les
push
sub
and
xor
outsb
push
fmull
and
sahf
insl
xchg
imul
leave
jae
mov
mov
insb
dec
push
in
push
bound
mov
notb
jmp
jcxz
clc
cltd
jl
repz
loop
adc
testl
fldenv
adc
and
pop
or
mov
clc
stc
loopne
adc
lret
mov
or
and
movsb
xor
or
leave
pop
xchg
shrl
jne
xor
add
mov
push
push
aas
adcl
insb
pop
jle
out
cmp
push
repz
mov
jge
push
jo
sti
pop
mov
jae
mov
mov
pop
fsubp
inc
pop
fisttpll
mov
and
outsb
lods
cwtl
cwtl
mov
arpl
sub
lea
popa
out
adc
loop
in
inc
je
push
stos
mov
sbb
imul
pop
orb
mov
nop
mov
fwait
out
pushf
scas
cmp
int
cmp
loopne
fcom
push
aas
and
lds
cmp
sbb
aam
loope
lock
ja
sbb
push
mov
clc
filds
call
mov
addr16
lahf
pop
mov
push
jae
jnp
dec
popa
fwait
gs
nop
cmp
movsbl
fdivs
test
jmp
inc
adc
nop
mov
mov
pop
fcmovnu
fwait
es
xchg
xchg
inc
xlat
mov
jmp
add
push
enter
jae
out
popf
xchg
and
je
jbe
out
dec
mov
mov
imul
sub
add
mov
lock
pop
clc
repnz
jge
adc
xor
push
in
add
test
jnp
out
or
mov
xchg
in
cmpsl
mov
add
daa
mov
aas
pushf
fistpll
cmc
add
adc
sub
adc
push
rorl
pop
and
pop
icebp
dec
push
adc
pop
sub
repz
ljmp
test
xchg
cmp
mov
fiadds
sti
sbb
xchg
pop
fucompp
out
pusha
adc
and
pop
jno
sti
inc
add
fwait
jb
fisubl
pop
out
dec
xor
or
mov
mov
xlat
xor
xor
imul
xchg
jno
dec
xchg
lods
pop
add
sbb
pop
xchg
pop
push
shrl
xor
out
push
adc
add
pushf
cld
cmp
fildl
mov
aam
push
int3
dec
mov
xchg
std
outsl
mov
nop
int3
mov
xor
outsb
mov
mov
push
sbb
push
jg
dec
loopne
add
mov
push
lock
jle
and
xor
adc
dec
or
das
lods
mov
add
and
mov
fistpll
fstpt
lret
fnstsw
jmp
xchg
jno
iret
fistpl
ret
or
out
push
dec
xor
cmp
jns
mov
xchg
pushf
xchg
int3
sub
std
xchg
inc
imul
sahf
xorl
sbb
gs
shlb
mov
jecxz
iret
les
cmpsl
stos
outsl
fwait
or
clc
mov
pop
int3
cmp
jnp
jge
stc
aam
dec
scas
into
lcall
mov
cld
push
xor
jbe
jo
shl
inc
jo
addr16
mov
fwait
cmp
sub
pop
sbb
leave
xchg
nop
sbb
lret
imul
mov
addr16
ds
xor
scas
xchg
dec
cmp
das
int
xor
aas
mov
lods
test
jnp
xchg
negb
fwait
rorb
push
push
mov
or
mov
lret
jbe
arpl
add
in
mov
popa
cmp
xor
add
cwtl
push
mov
mov
add
cmp
ret
insb
in
or
movsb
fcmovnu
sbb
cld
and
in
add
push
jno
fnsave
inc
in
pop
sub
loopne
fldl
pop
or
bound
add
repnz
lret
xlat
dec
icebp
orl
ret
das
and
push
shl
mov
and
je
cmpl
int
mov
mov
test
or
in
jle
call
arpl
ror
popa
jmp
and
xchg
mov
jge
imul
mov
inc
ja
mov
loop
lahf
fmull
push
add
andl
sbb
mov
sbb
popa
lahf
sub
fsubrs
push
jmp
sarb
add
movsl
cmovl
jo
aad
aam
imul
mov
pop
pushf
leave
lds
fninit
inc
and
rolb
repz
add
or
inc
shl
aas
in
xor
lret
push
mov
dec
cli
sbb
scas
mov
jae
fxch
push
inc
xchg
test
popf
add
cld
add
jge
shl
shrd
add
sub
fs
lahf
call
loopne
ret
sub
popf
sbb
sbb
arpl
push
jae
mov
outsl
jmp
or
mov
mov
add
push
sbb
jmp
aas
add
ficomps
jl
dec
push
adc
stos
cltd
add
lret
stos
in
fidivl
or
ss
sahf
outsl
lds
cltd
psubw
fistpll
push
je
popf
jo
cmc
jb
cmp
stos
jp
or
aam
insl
push
mov
xchg
pop
pop
xchg
les
mov
xor
add
into
dec
and
cmp
sbb
xchg
mov
dec
filds
jnp
pop
push
pusha
fwait
push
mov
sbb
adc
jno
leave
xor
cli
jno
jae
xor
and
mov
lcall
rol
jns
cs
aam
xchg
cmp
mov
nop
adc
pushf
xor
sbb
xchg
popf
mov
mov
mov
pop
mov
inc
test
push
test
scas
divl
lcall
adc
jns
loopne
add
lods
das
movsb
lahf
cli
into
test
and
add
mov
fisubl
nop
add
dec
cmp
jns
xlat
loope
adc
outsl
loop
out
mov
pop
cmp
push
push
pop
jns
fidivs
mov
push
lret
push
cli
aas
js
sub
xor
xchg
fcomi
outsl
movntps
pop
ja
cmp
cmp
sbb
stos
xchg
repz
pop
xor
xor
addr16
daa
fdivs
dec
in
or
mov
lret
cmp
inc
and
in
imul
loopne
and
ljmp
test
or
dec
push
mov
aad
repnz
arpl
xlat
fidivl
iret
mov
inc
adc
mov
push
xchg
mov
push
pusha
xor
call
orl
ljmp
std
iret
sbb
adc
jle
add
mov
fldt
mov
out
push
or
outsb
xor
cltd
cld
lods
rcll
cmp
scas
in
jg
shlb
testl
stos
std
cmp
pop
nop
outsb
je
ss
push
sbb
int3
pop
mulb
hlt
insb
loope
ljmp
mov
ret
xchg
ljmp
lods
rcl
daa
pop
adc
sbb
std
data16
gs
dec
cs
aad
lahf
gs
movl
mov
popw
and
mov
inc
inc
cmpsb
sub
scas
fstl
shl
insl
push
fs
cmp
mov
ffreep
adc
xlat
lahf
or
loopne
sbb
mov
inc
mov
xor
insl
enter
mov
ret
js
aad
push
dec
cmpsb
or
inc
pushf
cmpsb
xchg
fnstsw
in
dec
jbe
xor
add
sbb
add
in
mov
stos
or
rclb
inc
xor
push
xchg
or
cmpsb
or
jno
mov
sahf
data16
sbb
test
pop
js
jae
sahf
mov
sub
std
sub
xchg
out
jb
ss
pop
sbb
xchg
insl
movsl
mov
outsb
jno
pop
or
fstl
push
repnz
dec
xchg
loope
inc
scas
nop
loop
ret
or
xlat
insb
in
sub
idivl
mov
or
addr16
mov
into
icebp
stos
mov
pop
arpl
mov
das
popf
dec
or
xchg
cmpsb
rcll
and
and
icebp
fists
std
jb
pop
or
mov
cli
clc
lods
out
lods
add
adc
cmpsl
pop
mov
out
daa
adc
xor
xor
push
insl
sbb
fsub
into
aas
sbb
jns
or
inc
add
gs
mov
ss
and
or
imull
adc
xchg
mov
leave
ficompl
mov
jb
dec
sub
mov
pop
mov
pop
mov
lcall
leave
push
dec
nop
addl
lods
adc
sub
insb
lahf
into
pop
dec
std
adc
int
aam
cmp
test
shll
ret
adc
leave
jns
loope
popa
neg
jnp
enter
orl
iret
push
movsl
or
lock
push
arpl
xchg
mov
cmpsl
add
andl
adcb
nop
mov
lock
rclb
gs
and
sarb
mov
ret
mov
pop
mov
and
jnp
jb
dec
xchg
loope
jecxz
cmp
push
mul
outsb
test
and
repz
popl
jnp
cmpsb
out
or
loope
adcl
aas
xor
out
jne
cmpsl
sbb
test
out
outsl
add
sub
mov
push
sub
mov
js
pop
xchg
dec
sub
push
mov
mov
ljmp
dec
pop
adc
pop
fwait
repz
cmc
leave
mov
inc
xchg
jle
xor
adc
loope
in
and
mov
pushf
or
add
jo
xor
sub
cltd
xchg
sahf
rol
testl
imul
pop
push
xchg
das
shlb
lcall
mov
or
jge
addl
repz
ficomps
pop
and
adc
aas
and
xor
xor
decb
jbe
repnz
xchg
imul
mov
xorl
or
ret
or
cmp
icebp
lret
or
fidivrs
arpl
pop
test
sarb
mov
sbb
pop
pusha
jae
fadds
in
push
jp
adc
dec
fistl
out
loop
mov
shl
jb
push
sahf
xchg
les
dec
stos
jo
in
pop
std
aaa
sbb
loop
and
xor
xchg
inc
xor
in
mov
out
test
sbb
mov
addb
stc
push
xchg
sub
push
jno,pn
sti
xchg
ds
es
xchg
or
and
add
xchg
inc
insb
ja
mov
mov
adc
cli
xor
faddl
push
jo
inc
sub
scas
mov
sbb
je
sbb
pop
xchg
mov
test
cmpsl
ret
imul
dec
loopne
mov
mov
lds
sbb
mov
cmpl
adc
dec
xlat
xchg
lods
addr16
dec
ficompl
ja
push
jle
mov
adc
cmpsl
mov
cli
mov
std
ficoms
pop
sahf
sub
adc
xor
clc
fwait
clc
icebp
in
adc
mov
sbb
pop
scas
sub
adc
sub
test
loope
dec
pop
dec
nop
lods
mov
inc
fsubl
lret
inc
popf
and
cmpsb
or
fs
jg
repnz
jl
testb
sub
sahf
call
clc
inc
in
dec
push
jl
pop
rclb
fsubs
popa
cs
jecxz
inc
cld
or
add
pop
mov
dec
nop
fsts
fdivl
or
fs
outsl
add
mov
je
xchg
addb
dec
movsb
testb
push
ss
dec
das
and
flds
setns
xor
lds
pop
jno
jnp
mov
xchg
pop
std
scas
imul
fs
jb
and
fbld
add
xor
das
mov
add
das
add
xchg
or
mov
cld
cltd
rcll
int
inc
push
cmp
cmpl
mov
push
mov
lret
ljmp
dec
push
mov
add
push
lds
loope
mov
add
loop
lcall
xor
jge
or
ds
inc
or
aas
mov
fwait
inc
vmread
test
and
adc
js
lock
mov
xchg
adc
or
test
dec
cmc
push
xor
inc
mov
int3
in
inc
imul
mov
repz
mov
add
inc
xchg
test
sub
fdivrs
adc
cmp
es
mov
lds
hlt
sbbb
cmp
mov
cmp
cltd
mov
negl
inc
jmp
and
and
cs
cmpsb
mov
mov
daa
mov
fnsave
xchg
push
or
sub
sbb
sub
push
sbb
add
ds
popa
sbb
std
leave
add
jge
adc
adc
inc
and
inc
rclb
lret
and
push
lea
cli
push
enter
stos
repnz
jb
popa
pop
add
lods
sti
xor
jbe
sbb
stos
std
sbb
jp
add
rcrl
sbb
inc
nop
out
popf
mov
movsl
mov
dec
pop
jge
cltd
sub
add
pop
pop
hlt
lods
mov
dec
lcall
cmpsl
int3
pop
mov
cmp
fdivrl
pop
movsl
sarl
fisubrl
int3
sub
test
push
mov
add
fldenv
mov
dec
add
and
insl
rolb
and
sub
repnz
and
scas
lods
popf
and
sbb
stc
mov
push
inc
loope
loop
sbb
enter
mov
and
dec
inc
in
push
mov
pusha
hlt
dec
and
mov
cwtl
sbb
mov
dec
pop
push
jmp
xchg
sahf
push
xchg
test
gs
jae
pop
dec
or
imul
add
mulb
cmpl
shlb
popa
xchg
adc
and
pop
mov
mov
stos
outsl
je
and
sbb
insb
dec
pushf
push
mov
out
sub
jbe
jecxz
jge
cmp
std
mov
or
jb
enter
push
sub
leave
test
scas
sbb
sbb
xor
and
jo
popf
mov
hlt
and
mov
mov
xchg
cmp
or
jecxz
push
je
aas
mov
sbb
in
sbb
inc
cmp
sub
lock
adc
bnd
adc
jecxz
int3
clc
rcll
lock
mov
add
xchg
out
test
ficompl
in
and
stc
jl,pt
testl
mull
mov
or
in
pop
inc
pop
stos
pop
mov
popf
mov
add
jne
or
push
dec
daa
je
hlt
mov
xchg
shll
cld
cltd
enter
sbb
mov
lods
mov
in
repnz
mov
cmp
xchg
adc
jbe
sbb
dec
jb
sahf
loopne
hlt
lret
push
imul
dec
push
daa
xchg
sarb
and
pop
scas
cld
cmp
in
cwtl
jns
or
mov
jo
cwtl
cmp
add
jge
mov
pop
pop
rcl
jg
mov
jecxz
rorb
jb
adc
pop
fistl
movsb
ret
mov
push
jne
leave
loopne
dec
mov
cmp
mov
imul
cmpsb
sub
xchg
xchg
push
inc
xchg
repnz
addb
add
mov
or
mov
add
xchg
cltd
adc
out
add
adcl
xchg
test
dec
jo
out
or
int
idiv
ret
xlat
push
jecxz
jmp
cmp
or
mov
subb
out
xchg
mov
inc
mov
jp
pop
xor
dec
cmp
fimuls
je
int
dec
push
mov
lret
ss
les
mov
filds
add
mov
movb
syscall
push
aad
sub
test
into
ljmp
push
and
inc
daa
jno
inc
cmp
mov
cltd
in
mov
add
mov
dec
adc
cmpsl
imul
jne
aad
aam
xchg
push
mov
dec
outsl
adc
adc
sub
lcall
jecxz
jne
or
outsl
push
dec
pop
je
mov
mov
xchg
dec
sub
and
stos
xor
cmp
xchg
in
dec
ret
push
jne
outsl
enter
add
and
sarb
repnz
ret
mov
andl
call
aad
jb
lahf
xchg
orb
fadd
ja
sbb
jg
aam
xlat
jge
mov
aas
rcrb
ss
daa
outsl
sbb
mov
pop
daa
jno
inc
xchg
dec
xchg
fs
cmpsb
push
arpl
cmpsb
mov
inc
mov
clc
mov
jb
pop
lods
ret
pop
mov
mov
enter
lock
push
mov
adc
pusha
adc
inc
rol
sbb
scas
fnstenv
inc
push
inc
and
and
inc
iret
mov
pop
mov
mov
sbb
movsl
fwait
pop
ficoml
add
lods
hlt
jno
enter
and
sub
adc
adc
adc
jae
addr16
mov
push
outsl
icebp
addb
cmp
ja
mov
ficompl
jo
dec
sub
push
stc
push
leave
cli
add
push
aad
fists
orl
imul
fprem1
jl
xchg
xor
clc
and
faddp
repnz
or
out
jb
arpl
out
loope
gs
ja
aaa
dec
mov
cmp
xorl
inc
sar
push
stos
aad
lret
xor
xorb
js
or
daa
pop
xor
ss
push
int3
cmp
mov
push
cmp
mov
sub
in
insb
inc
jg
mov
cwtl
cmp
or
jmp
sub
jae
mov
mov
lret
arpl
and
pop
mov
hlt
inc
and
xchg
stos
sbb
add
cltd
pop
or
jne
sub
fistpl
mov
push
ret
mov
dec
shll
hlt
xchg
mov
and
aad
stos
jge
enter
shlb
add
xchg
xlat
mov
movsb
pop
lock
xchg
into
jmp
repnz
clc
xor
xchg
mov
std
or
lahf
ja
jmp
push
mov
xchg
pop
inc
rcr
xchg
pop
push
or
jg
test
mov
or
out
cmc
std
push
cltd
shlb
jmp
adc
sub
sahf
in
mov
adcl
mov
out
fwait
mov
in
jp
cmp
sti
or
jno
fldcw
sbb
xchg
xchg
out
sahf
js
mov
lods
mov
jle
mov
leave
lock
add
xchg
test
cmp
lret
mov
xchg
shr
inc
or
cld
or
sbb
sbb
sbb
outsb
pop
jnp
ret
inc
cmc
pop
shl
xor
or
cmpb
xchg
outsb
cmp
or
cmp
jae
push
push
mov
cld
or
sub
pop
je
scas
pop
inc
movsl
rolb
das
xorb
cld
xchg
sbb
lcall
sbb
xchg
ror
mov
or
xchg
movsl
test
decb
cmpsb
pop
inc
mov
repz
pop
sahf
pop
inc
push
xor
push
insl
decb
push
cmp
jge
addb
das
rclb
sub
cmp
repz
sub
push
pusha
mov
repnz
and
sub
dec
fwait
nop
and
sbb
test
jns
add
push
je
test
daa
jle
cmp
mov
test
mov
orl
push
mov
out
xlat
dec
cs
enter
sbb
adc
mov
cmp
popa
dec
call
push
lret
xchg
jge
mov
mov
nop
and
dec
xchg
mov
in
adc
xchg
out
sub
jno
mov
mov
lods
arpl
bswap
adc
sub
xchg
push
dec
fwait
add
pop
or
push
inc
xchg
arpl
scas
repnz
daa
pop
and
jge
addr16
loope
nop
add
aas
les
cwtl
js
xlat
adc
gs
fcoms
sahf
adc
dec
add
adc
daa
daa
fidivrl
nop
test
mov
stc
pusha
test
or
js
cmp
inc
pusha
addr16
or
inc
shlb
dec
cltd
aaa
out
mov
cld
repz
int
dec
pop
cmp
dec
ja
mov
xlat
mov
gs
jg
add
mov
inc
sub
les
ljmp
popa
mov
xchg
imul
xchg
je
subl
sbb
jge
sbb
xchg
cmp
and
cmpsl
scas
sbb
sub
pop
shlb
mov
dec
dec
outsl
jbe
rorl
aaa
mov
cmp
clc
mov
stos
push
hlt
mov
sub
fisubrs
fldlg2
outsb
or
in
mov
jae
or
stos
lock
insl
push
scas
xchg
pop
pop
push
mov
mov
sub
mov
add
por
inc
cmp
clc
inc
popf
cmp
addb
inc
hlt
add
cwtl
pop
jb
popf
adc
or
jno
add
incb
fsubl
inc
dec
or
jle
test
jb
sbb
adc
mov
lods
pop
push
aad
daa
pop
repz
dec
rcrb
add
xchg
outsb
add
lret
or
add
xor
out
aam
mov
movsb
cmc
loope
shl
jne
in
dec
inc
lret
fdivl
dec
inc
and
pop
inc
mov
cltd
aad
push
push
int
and
lcall
or
jns
lods
mov
fldcw
and
xchg
movsl
cmp
cmp
jmp
dec
fs
mov
jne
xchg
scas
adc
fbstp
adc
inc
lcall
shrb
iret
sbbb
pop
pop
jnp
enter
mov
fcmovbe
mov
shl
test
mov
sbb
mov
int
out
inc
enter
jp
bound
or
xor
scas
rcrl
inc
movsb
adc
lds
mov
sub
nop
jnp
stos
sbbb
rcr
pusha
ljmp
jae
mov
nop
xchg
lods
pop
aad
or
pop
push
xchg
dec
imul
cmpsb
dec
fisubs
pop
pop
ss
dec
fcompl
ret
sbb
cmp
inc
or
es
gs
sti
mov
lret
popf
dec
icebp
leave
fisubrl
push
sbb
stos
mov
xor
andl
lock
and
mov
inc
mov
repz
movsl
je
mov
xchg
lds
stos
enter
sbb
loopne
int
cwtl
cmp
cltd
cmp
je
stos
xor
mov
cld
ja
add
mov
lea
in
fildl
cld
sbb
cmp
into
dec
out
cwtl
pushf
cmp
or
int3
loopne
mov
adc
push
gs
data16
jae
pop
push
rclb
lahf
ds
sbb
pop
mov
pop
lds
or
pop
sub
mov
fisubrs
test
ss
hlt
xor
sarb
shrl
sbb
out
add
cmpsb
iret
cmp
imul
ss
xchg
push
inc
je
inc
cwtl
iret
inc
pop
je
cmp
mov
les
mov
repz
mov
aas
int3
out
pop
mov
mov
or
movb
int
sbb
ljmp
mov
iret
inc
and
add
scas
sub
xchg
outsl
add
mov
out
pop
fisttpl
cmp
fstps
aas
xchg
mov
and
addr16
rclb
leave
rcrb
mov
sbb
stos
pushf
fimuls
mov
push
mov
test
dec
and
mov
lds
jae
xor
popa
inc
xor
xor
and
xchg
adc
rclb
sub
dec
jmp
dec
jns
dec
mov
popf
fcmovne
xchg
sbb
movsl
je
test
mov
sarl
or
mov
shrb
lcall
mov
adc
and
xchg
clc
xchg
and
inc
hlt
adc
scas
xchg
xor
jo
dec
out
inc
sub
adcl
xchg
jg
mov
push
jecxz
add
shr
adc
mov
inc
fimuls
or
int
lods
jno
negl
into
add
shll
lahf
outsb
adc
stc
xchg
pop
lea
inc
push
imul
clc
mov
rol
das
xor
sbb
test
inc
mov
push
mov
pop
loopne
sbb
jne
int3
ja
cmp
imul
push
sbb
or
loop
jb
cmpsl
arpl
loop
ljmp
clc
in
ss
push
mov
push
pop
or
pop
aad
inc
leave
pusha
cmp
ror
testl
lcall
paddusw
mov
movsl
push
push
leave
mov
push
mov
and
jl
imul
les
test
fstps
pop
and
xor
mov
cmp
dec
cmpsl
push
cltd
fwait
sarb
sti
movsb
cltd
fistpl
cmp
inc
mov
fldt
pop
icebp
dec
bound
xchg
outsb
fcmove
mov
dec
mov
cwtl
ss
xchg
and
sbb
lock
js
stc
bound
mov
sahf
lret
xor
jne
lret
push
push
dec
scas
or
out
adc
pushf
enter
daa
arpl
mov
dec
xchg
cld
iret
mov
imul
out
inc
push
mov
cltd
int
sarl
pop
lret
dec
xor
nop
add
push
inc
mov
mov
mov
pushf
cmp
imul
cld
lcall
sbb
test
sub
xchg
xchg
mov
lods
sub
mov
sbb
add
push
or
cli
mov
fdivrl
inc
pop
push
dec
outsb
push
in
scas
test
popf
mov
mov
jp
shr
cmp
mov
lret
jno
aam
and
or
dec
iret
sub
sbb
bound
cli
scas
cmp
jp
mov
push
imul
pop
js
lcall
inc
scas
add
cmpsl
mov
xor
test
jns
mov
sbb
inc
lahf
mov
out
jl
inc
cmp
mov
mov
movsl
mov
fstpt
mov
cmp
movl
add
mov
call
push
push
add
pop
or
inc
mov
xor
pop
sbbl
addr16
xchg
pop
imul
xchg
or
xchg
cmp
jb
xor
orb
mov
push
je
hlt
out
cmp
adc
sub
adc
in
mov
dec
pop
sbb
adc
inc
add
adc
mov
adc
mov
dec
pop
push
dec
mov
ja
xchg
cmp
mov
inc
mov
pop
sbb
push
inc
inc
pop
out
inc
stos
dec
push
lret
loope
out
lahf
lahf
xlat
xor
jb
pop
pop
repz
push
loope
incb
les
pop
iret
cmp
clc
mov
lods
xchg
push
or
repz
sub
mov
in
inc
inc
push
xor
mov
lahf
jle
dec
sarb
fimull
sahf
sbb
mov
xor
or
arpl
andb
push
cld
sbb
outsl
cmpsl
in
pop
sbbl
imul
sbb
shlb
xchg
jnp
stos
cwtl
arpl
sub
hlt
lcall
and
xor
mov
add
lods
call
sbb
push
cld
filds
adc
call
test
imul
enter
xchg
test
icebp
int
add
ja
push
imulb
fsubrl
mov
push
mov
addb
ret
mov
push
mov
xchg
das
ljmp
aas
sub
lret
outsl
cmp
ljmp
lock
pop
lahf
xlat
jns
xchg
arpl
cmp
xlat
in
push
add
aad
xchg
int
popa
ja
imul
clc
xchg
popa
pminsw
inc
jo
xchg
es
pop
fisubs
push
mov
and
js
pop
gs
shrl
bound
push
xor
rclb
out
or
sar
sub
or
shr
or
loope
stc
shll
cmc
out
inc
je
cld
mov
fcmovb
adc
mov
push
pop
orl
call
js
out
in
jo
cmpsl
jl
loopne
and
xchg
inc
ja
dec
cmp
push
outsb
int
xchg
and
ja
gs
push
test
daa
push
test
es
push
sti
mov
mov
jp
hlt
xchg
cltd
dec
add
mov
cmc
mov
divl
sete
sbb
xchg
iret
inc
cld
aam
push
push
in
push
or
fs
loopne
inc
sub
sarl
inc
shlb
enter
das
xchg
bound
loopne
xchg
scas
cmp
mov
push
rcll
mov
ja
mov
lret
mov
cli
push
jle
outsb
push
or
mov
adc
addr16
or
dec
sti
mov
xchg
arpl
gs
push
stos
xchg
sub
xlat
jmp
scas
mov
sbb
mov
rol
imul
fs
pusha
cmp
cmpsb
xor
pop
dec
call
pop
pop
adc
or
push
sub
dec
xchg
mov
sub
inc
fnstcw
dec
mov
sub
sub
sbb
lock
fistpl
xchg
push
cmp
adc
cs
adc
repz
fs
pushf
cli
xchg
popa
xor
call
cmp
enter
popa
cld
jns
int3
and
roll
lds
push
pop
adcb
popf
ljmp
xor
pop
mov
adc
sub
push
jnp
pop
mov
fs
mov
shll
add
ror
xchg
mov
jge
sbb
lret
insb
jo
jo
adc
ss
fstps
sub
xchg
mov
cwtl
shlb
fs
out
aad
fistpll
rol
int3
iret
cli
jle
inc
pop
loop
lret
inc
loopnew
gs
jp
inc
andb
sbb
or
dec
aam
movsb
cli
andl
leave
lock
mov
les
ss
push
icebp
sub
gs
ror
mov
aas
lock
jb
add
push
mov
mov
adc
out
lea
mov
xchg
scas
sti
xchg
dec
jnp
sbb
or
jmp
out
jne
cmc
push
lea
inc
pop
or
and
lret
mov
sbb
mov
int3
jmp
mov
fldenv
inc
mov
test
nop
les
nop
xlat
lods
shrb
xor
jmp
repnz
out
and
lret
fs
mov
mov
add
push
sbb
std
sbb
push
std
cmp
inc
outsl
or
jo
outsb
cmpsb
daa
sbb
jge
mov
jae
mov
dec
mov
mov
mov
jecxz
mov
pop
inc
sub
push
adc
sub
and
mov
cmpsl
sbb
add
popa
repnz
dec
call
ljmp
test
cmp
jl
jg
xor
imul
add
call
sbb
stc
cmc
pop
dec
jb
adc
fidivs
pop
shr
xor
mov
and
jbe
outsl
adc
shrb
mov
xchg
outsl
adc
sbb
lds
mov
push
xchg
lock
sub
ret
inc
nop
add
mov
ljmp
add
jge
mov
mov
adc
mov
sub
adc
pop
dec
jnp
xlat
mov
ficomps
push
fcomps
icebp
and
int
xor
xor
stc
das
sbb
add
ds
int
gs
std
lds
add
xchg
push
pop
pop
and
lret
inc
loopne
and
dec
jmp
stc
mov
jl
scas
std
add
adc
inc
out
mov
add
and
je
add
test
outsl
call
pop
cmpsl
ss
popa
test
pusha
cmp
sub
and
xor
pop
mov
dec
iret
adc
dec
jns
scas
fucomp
les
fstpt
enter
jl
rorl
pop
pop
xor
lret
cmpsl
rcr
sbb
into
loope
mov
test
mov
jp
jae
jo
cmp
loope
std
test
fldcw
mov
iret
aas
jae
pop
cmpxchg
mov
les
adc
fnstcw
xor
cmc
imul
popa
hlt
push
push
ret
mov
sbb
xchg
mov
mov
cmp
mov
addb
and
sbb
outsl
lock
inc
cmp
push
stos
xor
repnz
sub
pop
sti
and
inc
test
iret
push
dec
lds
pushf
fsts
ffree
cld
add
sahf
fstpt
lcall
fidivrl
adc
and
cmp
or
jno
sbb
jbe
push
push
mov
in
jae
daa
and
pop
xor
or
rcll
sub
movups
outsl
xlat
mov
loope
movsl
test
dec
push
jl
pushf
cs
xchg
jg
jnp
or
sbb
mov
jle
adc
jmp
xor
adc
mov
das
pop
jl
adc
add
mov
test
or
pop
shrl
cs
leave
js
xchg
dec
mov
jl
shrl
into
or
adc
push
insl
inc
fs
xchg
push
cmp
adc
add
outsl
mov
in
xchg
dec
mov
mov
push
xchg
mov
fdivl
add
inc
inc
fcomip
std
js
hlt
dec
dec
pop
iret
push
idivb
pusha
notb
jge
xor
bound
push
mov
shrl
mov
gs
adc
iret
ss
mov
cmp
lea
decl
push
inc
jl
fiaddl
mov
das
xlat
inc
dec
out
push
icebp
rep
jp
adc
shrl
mov
test
push
inc
popf
and
imul
mov
add
add
lret
jge
jns
js
dec
imull
sbb
sub
pop
mov
mov
imul
add
scas
jb
mov
stos
sti
stc
mov
dec
in
lock
bound
inc
rcr
nop
leave
and
rclb
jns
jbe
mov
cmp
ja
out
loopne
cmp
jecxz
jp
int3
jne
jo
xchg
xchg
mov
in
add
lea
push
mov
rcrl
jle
out
repz
loopne
orb
jl
cwtl
sbb
cmp
mov
icebp
inc
test
jae
sahf
movsb
lret
xlat
mov
push
sub
cmpl
mov
outsb
lret
adc
fmull
clc
adc
ficoms
jo
aaa
out
pop
int3
loop
and
pop
mov
sub
mov
iret
aad
fidivrs
or
andb
int3
hlt
repz
mov
add
xchg
sub
fdivrs
lcall
dec
lcall
xor
jo
stos
fnsave
jg
mov
push
lret
add
push
xchg
mov
push
jbe
gs
mov
rep
mov
fsts
orl
mov
adc
sub
dec
jg
enter
mov
inc
into
dec
and
in
mov
pop
pop
add
shl
jle
and
sub
shrb
mov
lret
mov
in
jg
ja
je
xor
test
fs
xchg
pop
addl
int
and
ss
rcll
pusha
and
les
ficompl
add
xchg
add
out
inc
adc
jmp
pop
or
jecxz
cmc
or
repnz
mov
adc
cwtl
decl
pop
sahf
xlat
xor
or
jo
test
fldenv
pop
bound
inc
fisttps
fs
loopne
add
cmc
loop
ja
repz
ja
push
sarl
pop
pop
mov
ret
stc
sub
sbb
push
push
jl
sub
js
mov
nop
shlb
lock
movsb
hlt
or
push
int
repz
mov
lret
and
push
lret
cltd
dec
jo
mov
xchg
ss
lods
push
push
xor
inc
into
jne
jg
adc
mov
xor
and
jmp
in
and
cmp
mov
pop
insl
xor
mov
cmp
lahf
inc
pop
movsl
mov
jl
faddl
sbb
pop
mov
jecxz
cmp
or
push
leave
dec
fwait
mov
xchg
push
mov
aaa
adc
loopne
inc
int3
jb
xlat
pop
insl
fs
adc
sti
out
xor
cmp
xor
jne
lea
adc
push
sub
inc
aas
int3
inc
icebp
imul
cmpb
loop
mov
lcall
cmpsl
add
fcoms
adc
sub
or
add
int
leave
sub
and
mov
sbb
xor
std
movsl
sbb
push
stos
aaa
fistl
and
scas
cmp
pop
jb
sub
xchg
ffree
mov
incb
sbb
insb
mov
push
adc
xrelease
pusha
int
sarb
push
cmp
pop
ljmp
pushl
aaa
nop
adc
push
f2xm1
xchg
xor
sub
fidivl
sahf
mov
test
xchg
dec
int3
out
push
lret
outsb
push
push
cmp
sub
aaa
sub
sbb
je
xchg
cmpsb
nop
and
cli
or
mov
mov
test
or
push
xchg
gs
out
rcl
and
outsb
mov
push
inc
xor
xorb
in
sub
mov
inc
roll
roll
mov
cmp
lds
test
shl
mov
sbb
js
cmpb
fs
cmp
mov
cltd
jp
xorl
sbb
jge
test
leave
mov
icebp
mov
push
xchg
pushl
or
mov
sahf
lret
dec
ja
cmp
sahf
jmp
mov
int3
out
cmp
imul
shrb
mov
xchg
data16
enter
hlt
stos
jmp
dec
insb
sub
shrl
flds
xor
int3
push
pop
jp
lcall
cmpsl
nop
mov
aaa
sub
aaa
movsl
clc
lea
ljmp
outsb
push
aam
shl
popa
push
push
jmp
or
call
or
fstpl
out
mov
add
pop
push
data16
push
fsubrs
jmp
test
lods
sbb
sub
jge
inc
out
adc
aaa
test
fdivrs
cwtl
sbb
cmc
push
mov
dec
dec
movsl
xchg
scas
fistpl
pusha
jnp
mov
dec
cmp
sub
adc
mov
dec
sbb
push
xchg
sbb
cs
adc
or
aam
or
sub
push
sub
dec
mov
fistl
arpl
adc
sbb
push
ud2
lds
adc
outsl
popf
data16
lea
sbbb
rcl
arpl
xor
sub
in
sbbb
insb
int3
cmp
jnp
call
mov
mov
sti
sbb
adc
push
idivl
add
add
popa
lods
adc
std
leave
imul
ret
dec
mov
jge
hlt
loop
repnz
movsl
stos
rcl
xchg
cltd
xchg
jg
xchg
mov
aad
and
inc
cmp
adc
push
scas
xor
mov
inc
mov
jp
xor
sub
sbb
insb
sbb
adc
cmp
add
dec
xor
sub
xchg
clc
mov
pop
sti
pop
xchg
mov
pop
stos
jb
addr16
or
sbb
pop
shr
dec
sub
imul
pop
bound
pop
scas
mov
outsl
test
mov
dec
cmp
push
mov
jns
adc
ja
xlat
popa
or
arpl
movsl
popa
test
sbb
mov
aas
adc
cmp
hlt
dec
pop
or
inc
pop
imul
jge
mov
jbe
pop
mov
xchg
fs
cli
fnstcw
xchg
stos
je
adc
adc
ficompl
sti
sbb
jae
jecxz
mov
push
push
push
mov
loop
mov
push
inc
in
sbb
inc
fldl2t
add
xorb
push
and
out
lret
xor
stos
mov
pop
lcall
cmpsl
mov
cwtl
test
cs
shlb
je
pop
divps
jl
lcall
mov
ret
test
add
inc
cmp
pushf
jns
mov
mov
mov
push
pushf
sub
pop
jp
and
mov
mov
dec
mov
cmpsl
adc
sub
les
imul
lock
xchg
pop
push
dec
icebp
xchg
and
inc
pop
cmpsb
sbb
jge
pop
divb
mov
or
mov
fadd
aad
rcr
imul
xlat
loop
mov
sbb
clc
sub
repz
add
xor
loope
fwait
mov
aam
push
lea
cmp
mov
cs
fs
dec
rorb
pop
mov
dec
cmp
shlb
test
jmp
fsubrl
jo
in
testl
sub
push
sbb
inc
push
mov
pop
int
and
repnz
inc
inc
xchg
and
sbbl
pop
cmp
cmp
pop
add
jae
repz
je
shlb
imul
cli
dec
mov
inc
idiv
mov
leave
pop
stos
jno
sbb
pop
lcall
outsb
outsl
pop
mov
mov
and
loope
push
cmpsl
cmp
mov
sbb
inc
cmp
out
aam
mov
subb
push
add
int
jne
xchg
jp
enter
push
in
enter
xchg
or
lret
lret
and
ljmp
fmuls
popf
popf
popa
sti
adc
insl
xchg
sbb
sbb
cmp
imul
mov
xchg
movsb
jae
xchg
mov
pop
sbb
imul
or
dec
lods
nop
gs
xchg
pop
sbb
in
iret
mov
cmp
add
lcall
div
sbb
hlt
sarl
xchg
mov
cmpsb
arpl
popa
or
lock
xlat
adc
push
cmp
call
data16
jne
pop
add
cmpsl
push
sbb
cmp
lds
or
pop
std
mov
sbb
pop
mov
bound
pop
add
xchg
xor
in
das
movsb
xchg
dec
adcb
or
xchg
mov
sbb
je
sub
divb
push
sub
add
xlat
mov
fldl
icebp
sub
pop
push
subl
aas
and
dec
repz
xor
push
negl
test
iret
push
lahf
call
outsl
aaa
flds
lahf
call
push
push
sub
in
lret
icebp
repz
in
cmpsl
arpl
jge
sar
cmp
testb
or
fdiv
mov
pusha
mov
push
lcall
outsl
cltd
out
mov
jge
mov
jp
sahf
dec
aad
notl
loope
push
ja
and
mov
or
mov
mov
jae
xchg
cmp
and
test
fldenv
mov
mov
fld
cmp
add
dec
mov
test
loop
dec
insl
jl
aas
fsts
cmc
pop
shrl
and
std
jmp
inc
sub
subb
and
mov
aad
scas
push
ret
insl
js
fbld
sub
add
insl
nop
ret
mov
cmp
cmp
xchg
loopne
push
pop
inc
xchg
popa
shrb
out
dec
in
mov
mov
jbe
enter
es
ds
rcr
add
and
xor
sub
inc
shr
sub
lods
mov
rclb
jmp
sbb
aam
adc
xchg
in
mov
test
lret
pop
fmuls
nop
pop
inc
sbb
pusha
mov
imul
mov
cltd
add
mov
push
mov
xchg
addr16
repz
push
dec
lret
pop
dec
push
xor
orb
and
fisttps
jle
sub
int3
ret
sbb
stos
mov
icebp
push
ret
add
cltd
out
adc
push
jp
mov
and
pop
enter
popf
mov
dec
adc
adc
fs
rorb
lods
mov
outsw
imul
jge
insb
sub
dec
sbb
jmp
addr16
mov
cmp
pop
mov
mov
add
or
aaa
xor
fcompl
aaa
inc
sbb
incl
movb
int
add
lods
add
xchg
iret
mov
cld
or
mov
std
mov
ds
jo
sbb
push
or
pop
in
into
push
inc
rclb
push
imul
mov
into
movsb
and
stos
pop
add
call
call
outsl
xor
xchg
add
mov
in
iret
sbb
sbb
mov
pusha
adc
mov
rcrl
pop
fwait
xor
push
mov
imul
xchg
insl
mov
adc
pop
fs
lods
rcll
into
jno
arpl
out
push
out
ret
daa
lods
fwait
divl
sbb
and
enter
les
test
pushf
add
movsl
dec
mov
or
nop
call
jmp
stos
and
enter
dec
loopne
popa
inc
mov
mov
daa
sub
setns
dec
adc
stos
call
jge
into
jge
push
rorl
add
add
imul
pop
sbb
jne
insb
xor
jp
or
ficoml
lods
repz
xchg
jl
inc
mov
push
jmp
jp
push
push
lds
xor
daa
into
ds
jmp
lea
mov
fsubr
int3
pop
mov
fisttpll
xchg
sarl
xchg
xor
push
sbb
dec
fucomp
nop
lea
in
subl
shr
add
adc
mov
or
mov
jmp
cld
movb
test
adc
aaa
sub
push
xor
ret
ds
or
mov
pusha
or
rcrb
jno
xchg
mov
outsl
hlt
insb
cmpsb
inc
test
pop
pop
aas
ljmp
jae
mov
in
test
mov
cmp
mov
insb
js
push
iret
mov
aad
or
dec
adc
xor
and
add
and
test
or
push
cs
jae
lds
mov
mov
pop
sub
push
aas
sbb
insb
jne
cltd
push
and
adc
arpl
nop
loop
or
pop
sar
xchg
das
loope
push
ret
mov
js
or
ljmp
push
imul
push
fnstcw
shl
loopne
clc
ljmp
pop
mov
hlt
mov
xor
scas
insb
rol
mov
or
inc
push
rorl
mov
fwait
repnz
ret
push
sbb
sbb
adcl
lcall
mov
sahf
rclb
mov
or
add
ret
test
loop
lods
shll
and
mov
jo
loope
mov
mov
lods
mov
jmp
sarb
adc
inc
adcl
fldt
bound
sub
hlt
sti
mov
ljmp
addr16
fstpt
das
pop
adcb
pop
adc
gs
lods
sbb
mov
jno
jl
push
insl
aad
xorb
rorl
ret
pushf
mov
push
mov
mov
add
mov
push
fidivrs
js
lahf
sub
pop
rorl
push
pushf
rcr
inc
xchg
push
outsl
dec
repz
sbb
iret
arpl
push
frstor
or
mov
pop
xor
cmc
sub
jo
shrb
push
es
in
sahf
jmp
addr16
push
lods
into
xchg
jbe
cmpsb
stos
lcall
test
test
adcb
mov
popf
cmp
sub
mov
lea
or
or
mov
mov
loopne
pop
add
xlat
jo
mov
jle
jae
or
inc
rcr
jg
pop
loop
xchg
bound
cmp
mov
jne
aad
rorl
movsb
xor
xor
dec
cmp
lds
mov
xchg
mov
in
sti
enter
push
out
jns
dec
and
mov
sub
sahf
push
mov
dec
aam
xor
mov
pop
push
jae
xchg
subl
inc
push
test
mov
mov
jns
xchg
push
inc
inc
clc
pop
inc
jne
push
movsb
ret
call
rclb
into
insl
in
cli
xchg
pop
cltd
cmpsb
leave
fimull
sub
aad
cld
jge
jp
mov
xchg
mov
push
test
dec
pop
push
xor
ss
outsb
pop
fmul
xchg
in
xchg
jno
inc
xor
jbe
out
xor
js
lahf
test
mov
lods
cli
test
xchg
nop
fistpll
stc
in
popa
dec
jecxz
inc
dec
push
xchg
in
xor
xor
dec
xchg
jno
in
mov
sahf
xchg
sbb
fstpt
push
in
jbe
ds
bound
out
les
loopne
lcall
in
add
xchg
pop
lret
fwait
lds
mov
sbb
pop
mov
lock
je
or
loop
cmpsb
fldenv
aas
stos
xchg
sbb
and
jl
stc
mov
and
mov
cli
jbe
mov
dec
cmp
test
lahf
sub
adc
es
pusha
mov
push
stos
and
aad
popa
push
mov
lods
out
cmpsl
push
mov
fisubrl
lea
inc
sub
adc
jo
and
pop
mov
dec
test
out
loope
test
lods
daa
sub
call
scas
cmp
dec
ret
mov
xchg
setae
add
jle
sub
push
sti
rcl
mov
in
lods
dec
lea
test
pushf
jmp
sti
arpl
inc
xchg
xor
dec
ja
in
add
imul
pop
shll
adc
push
pop
fidivrs
jo
sbb
jne
push
pop
adc
loop
in
inc
mov
shrb
in
leave
mov
push
out
fiadds
aaa
mov
icebp
cmp
mov
adc
or
jb
data16
aad
xor
sahf
loop
push
ficoml
movsb
jmp
mov
mov
aad
mov
mov
add
pop
pushf
mov
push
es
andb
or
adc
jb
adcl
adc
in
pop
xor
mov
pop
and
inc
daa
into
cwtl
ucomiss
mov
ja
pop
aaa
push
out
mov
imul
pop
loop
dec
sub
xor
xchg
push
inc
sub
mov
inc
xor
push
mov
ret
push
es
std
cwtl
test
popf
setge
push
ds
xor
jae
fisubrs
jge
sub
inc
icebp
dec
push
adc
sub
insb
and
mov
bound
andb
push
and
mov
inc
mov
lods
and
out
loop
inc
sbb
add
lods
xlat
mov
icebp
ret
stc
divl
into
fdivrs
rorb
and
jno
leave
fdivp
sbb
insl
frstor
or
das
jge
fmulp
adc
sub
std
jmp
xchg
das
add
lods
sahf
imul
movsb
sbb
dec
mov
repz
inc
mov
push
adc
cs
fimuls
mov
inc
mov
out
mull
lods
scas
mov
inc
ret
mov
jo
or
adc
cmp
jle
and
js
jb
fistpll
or
imul
mov
addb
xor
add
cmpsl
jbe,pt
and
loope
or
shl
int3
cs
scas
js
sbb
popa
ret
sub
movsl
dec
xchg
leave
sub
or
mov
fisubrs
sbb
in
iret
pop
mov
mov
mov
popa
sahf
push
cs
lret
jmp
sbb
jne
mov
js
mov
mov
stos
hlt
pop
xlat
daa
or
dec
adc
pop
add
mov
xor
inc
jae
mov
adc
insl
sbb
mov
and
repz
pusha
push
outsl
pusha
cmp
in
xlat
jbe
lret
mov
xchg
xchg
aam
pop
xor
call
jnp
std
cs
inc
mov
jbe
aas
nop
mov
imul
dec
push
adc
xor
jb
mov
mov
mov
inc
or
pop
adc
aas
inc
inc
test
pop
fmuls
xchg
imul
shlb
lret
cmpsl
int
dec
push
sbb
mov
xchg
dec
jp
jae
test
lock
mov
jb
pop
adc
push
out
mov
popf
pop
out
movsl
test
pusha
ficoms
adc
sub
stos
arpl
push
mov
jnp
hlt
sti
icebp
dec
push
dec
jmp
jo
mov
loop
mov
sbb
dec
mov
mov
cmpsl
ja
xor
jne
jbe,pt
test
out
aaa
neg
aas
rorl
inc
sahf
xchg
int3
mov
ss
aam
cmp
jo
sbb
mov
jp
and
popf
fwait
rcll
les
jae
cld
clc
icebp
aam
inc
repz
test
pop
add
lret
repnz
sbbl
clc
imul
adc
adc
sub
jp
mov
xlat
sub
cmpsb
xchg
movsb
movsb
seta
testl
arpl
int
sahf
lds
xor
and
mov
lock
into
scas
xor
cmpsb
int3
jge
and
int3
hlt
mov
mov
inc
mov
stos
movsb
cmp
imul
dec
jmp
lahf
ret
push
dec
test
mov
mov
adc
jno
int
adc
jb
adc
movsb
insl
adc
dec
test
xchg
adcb
repnz
mov
mov
aad
jbe
push
in
push
adc
inc
xor
or
lea
pop
jo
xor
icebp
xchg
sbb
popa
or
sarl
inc
xchg
std
xor
fisttpl
sbb
cltd
aas
les
cwtl
sti
adc
cmp
hlt
ss
fwait
arpl
in
dec
inc
xchg
addr16
add
sti
pop
xor
xlat
inc
xchg
outsb
mov
mov
mov
xor
fdivrs
stc
stc
mov
shrb
aam
jbe
cmp
add
movsb
inc
imull
ljmp
fs
insl
nop
mov
into
jae
ljmp
std
pop
and
pop
add
cmp
pop
xchg
sbbl
fld1
mov
xchg
and
pusha
rcrb
in
cli
sahf
dec
stc
ret
add
jb
fwait
sub
or
push
jbe
icebp
stos
and
iret
fcmovnb
loop
daa
stc
lret
outsb
into
call
mov
das
repz
fistpll
mov
sbb
mov
cmp
cmpsl
ds
outsb
mov
sbb
and
leave
jge
jge
mov
mov
jecxz
sbb
in
or
pop
rorb
xchg
ja
mov
jle
into
pop
mov
fildl
lods
jp
push
sahf
adc
inc
loop
aad
xor
push
cwtl
mov
mov
cltd
jg
jo
fcoms
or
cmp
enter
inc
stos
popf
dec
adc
aam
popa
test
out
push
je
ja
call
popf
cmpsb
dec
jle
mov
test
lret
xor
jle
lret
mov
cmpsl
fwait
pop
jp
js
das
fsubp
add
or
sub
ss
pop
int
imul
lahf
and
sbb
mull
cltd
adc
dec
adc
inc
mov
lret
xchg
nop
arpl
cmpsl
push
nop
or
pop
shll
cmp
jb
sbb
pusha
clc
cwtl
pop
aas
cmp
mov
adc
test
out
inc
xchg
clc
dec
push
ds
xor
and
xchg
xchg
inc
xor
jl
lds
insl
test
mov
cmp
and
mov
fstpt
jbe
shll
xor
jns
jl
lea
cmpsl
sbb
daa
daa
mov
mov
adc
int3
xchg
decl
pop
mov
int3
ljmp
sarb
mov
mov
push
arpl
adc
into
mov
mov
add
xor
push
jno
mov
pop
cmpl
popa
xchg
loope
add
add
cmc
xchg
dec
add
leave
fstl
lret
popa
out
sar
hlt
leave
in
mov
push
loope
mov
xchg
pop
shl
enter
mov
fucom
inc
pop
test
test
testl
stos
fwait
fwait
push
es
movsl
in
mov
pop
and
jmp
pop
ja
pop
cmc
jp
dec
add
rclb
cmpsb
lods
enter
pop
add
call
mov
sbb
jmp
loop
fbstp
cld
jae
jae
mov
or
pop
mov
mov
pop
jp
pop
xchg
fnsave
loopne
je
mov
mov
push
cmpsl
inc
cmp
jl
mov
xchg
sub
and
bound
out
dec
or
sbb
mov
and
cmpb
ret
jae
fisubrs
lods
add
andl
cmp
jbe
outsb
hlt
stos
jo
sub
ljmp
sbb
mov
scas
xchg
push
je
sarb
dec
cmpsl
push
or
daa
jecxz
xchg
inc
loopne
rcrl
insb
xchg
bound
sub
or
add
fcmovnbe
cli
lcall
and
fidivl
inc
lea
test
mov
movsb
cmp
shlb
sbb
xlat
pop
call
stos
cld
add
push
scas
movsl
pop
and
rcrl
push
sti
in
pop
and
inc
in
cmp
dec
lahf
add
mov
pop
mov
xor
mov
sbb
inc
pop
cmp
arpl
cld
adc
cmp
mov
mov
ret
js
or
outsb
cmp
mov
inc
bound
int3
jecxz
pop
xlat
mov
cwtl
pop
pop
sbbb
mov
add
or
out
mov
lock
insb
mov
gs
icebp
or
stc
cmp
inc
int
push
and
xchg
sub
jmp
pop
imulb
sbb
dec
jg
in
inc
les
lret
test
imull
push
ficoms
cld
scas
fcomi
pause
lods
xchg
ja
or
mov
sbb
cltd
inc
fwait
int
mov
pusha
popa
mov
push
dec
aas
test
js,pn
xchg
push
mov
mov
pop
lldt
lret
pop
adcb
xor
lods
mov
call
cmpsl
andl
ljmp
test
mov
popa
dec
repnz
shll
cs
jecxz
xor
mov
mov
cmpsl
aas
pop
adc
jns
in
aaa
mov
mov
mov
movsl
les
inc
jbe
and
cmp
pop
adc
rcrl
inc
ficoml
dec
imul
jle
pop
adc
insb
push
pusha
andb
jo
in
addr16
sub
xchg
inc
sbb
inc
test
lahf
mov
push
lea
cmp
test
repz
lods
nop
dec
jmp
push
xchg
fabs
out
sbb
ret
xchg
cmp
test
test
cmp
sbb
mov
mov
stc
test
jb
es
sahf
enter
cmp
js
jno
adc
inc
cmp
mov
addr16
xchg
push
jb
xor
cmc
sbb
inc
or
and
andl
negb
aad
scas
std
in
dec
push
sbb
dec
or
or
xchg
lods
lods
fdivp
test
push
pop
push
lret
jbe
aas
add
add
cwtl
lods
adcb
test
mov
fbld
les
adc
mov
in
mov
push
lret
mov
js,pt
mov
scas
ror
shll
int3
mov
jb
hlt
xchg
daa
jge
push
mov
cmp
cli
insl
sub
push
xor
push
imul
leave
in
push
test
sub
cmp
outsb
mov
inc
stos
fucomi
imul
dec
push
mov
in
mov
imul
or
xor
and
cld
or
shl
inc
mov
xchg
dec
testb
push
outsl
inc
adc
push
js
std
mov
mov
incb
pop
in
sbb
lods
sub
push
inc
mov
cmp
push
push
push
pop
cmp
iret
stos
test
rol
add
and
insl
xor
pop
xchg
addr16
mov
push
inc
push
jnp
xchg
repnz
aaa
or
popa
mov
mov
shr
and
push
popf
stos
pop
test
pop
loopne
sar
in
inc
rclb
arpl
sti
outsb
xchg
xor
dec
dec
enter
and
jnp
pop
enter
xor
pop
lea
pop
xchg
xchg
dec
test
js
fildl
and
mov
jnp
std
sti
jo
push
inc
insl
adc
ss
jae
xor
aam
sub
pop
mov
xor
iret
or
divb
lahf
pop
jg
cmc
inc
xchg
adc
cltd
or
pop
sbb
inc
lods
insb
xor
dec
in
inc
ljmp
add
into
xlat
jp
jne
flds
dec
sahf
dec
xchg
inc
aad
cltd
imull
in
rcrb
ret
ds
arpl
pushl
out
pop
pop
imul
inc
jb
pop
mov
and
es
mov
icebp
jmp
nop
sub
xchg
pop
addr16
lret
jne
rolb
xor
fldt
mov
mov
pop
nop
xor
pop
push
jne
inc
mov
pusha
sub
movsl
in
mov
testl
mov
daa
call
jnp
test
lds
or
mov
dec
lret
mov
mov
mov
xor
pushf
repz
xor
jecxz
data16
notb
push
jl
clc
mov
insb
ret
dec
pop
std
mov
rcrl
orl
ja
cltd
adc
fsubrl
or
test
loopnew
adc
sub
outsl
cmp
mov
mov
in
and
std
insb
inc
pxor
iret
int3
mov
int3
xchg
ret
sbb
adc
push
sahf
es
jmp
pop
inc
rcl
not
loopne
cmp
sub
push
das
or
pop
push
rol
les
pop
inc
and
xlat
ds
and
fimull
bound
adc
add
dec
cld
xchg
stos
lret
loope
outsl
cmc
mov
cmpsb
adc
jg
dec
sbbb
ja
test
sbb
lcall
in
rol
mov
movsb
loop
clc
jl
js
add
stos
push
or
push
and
mov
subb
mov
fcoms
popf
dec
sub
and
jno,pt
xlat
xor
sub
iret
sbb
bsf
mov
fadd
mov
lcall
fsubr
mov
inc
leave
ljmp
inc
sbb
xchg
cmp
dec
cmp
xor
stc
mov
inc
ss
adcb
and
jns
mov
fists
lret
mov
pop
lret
jmp
cli
dec
pop
add
add
test
adc
imul
adc
int
sub
or
cmc
sub
jno
lahf
call
and
je
test
add
into
mov
xchg
mov
xor
mov
divb
repz
mov
adc
addl
pop
mov
fbld
out
lret
scas
inc
lret
aad
stos
mov
jge
dec
repnz
sub
or
repnz
jl
fsubs
sbb
sbb
mov
sti
mov
adcl
jbe
cli
lret
int3
jno
and
mull
pop
mov
loop
out
xchg
and
push
sub
dec
jmp
and
push
sub
rorl
fildl
mov
add
and
jecxz
mov
fmuls
add
dec
xlat
scas
arpl
pop
xchg
stc
notb
jae
adc
sub
roll
repnz
push
mov
popf
cwtl
pop
sbbl
jecxz
imul
je
imul
iret
pop
rcl
daa
sbb
mov
sbb
out
lock
and
and
and
mov
mov
ds
test
dec
jp
cmpsb
les
aam
in
dec
mov
cmp
loop
xchg
lcall
fcompl
cltd
pop
inc
push
call
pushf
js
and
pop
test
xchg
jbe
or
mov
xchg
ficompl
pusha
stos
xchg
ret
mov
mulb
addl
cwtl
jmp
insb
pop
mov
xorb
push
ss
mov
xchg
sub
aaa
sub
push
mov
inc
rcr
ret
push
or
push
scas
push
cs
cli
xchg
xchg
cmp
xor
push
pop
sbb
cs
test
hlt
fistps
adc
xlat
adc
mov
addl
mov
mov
in
imul
je
enter
mov
int3
sahf
jp,pt
or
push
or
outsl
inc
push
push
lods
push
nop
mov
icebp
xchg
mov
sti
jnp
or
xlat
sbbb
and
into
movsl
mov
pop
xlat
negb
xchg
inc
sbb
jo
popa
mov
xor
pusha
xchg
ret
inc
fs
scas
imul
xchg
xchg
xor
mov
or
iret
push
jl
xlat
mov
dec
push
jecxz
pop
daa
out
inc
mov
pop
cmc
adc
jns
cmp
push
imul
icebp
outsl
jl
bound
das
std
fsubs
lcall
in
or
cmpsl
mov
mov
pop
sbb
mov
hlt
loop
ds
clc
xchg
push
mov
je
mov
subb
scas
out
pop
xchg
cmp
mov
inc
jge
ljmp
stos
cmpsb
push
in
adc
cmp
add
pop
mov
mov
cmp
pushf
dec
ljmp
imull
js
hlt
addr16
sbb
scas
and
mov
push
insb
int
ljmp
pop
and
data16
test
sub
pop
xlat
fadds
fdivrp
ds
ds
xor
ret
ljmp
lcall
ss
lds
sti
pop
xor
pop
adc
ret
lods
sub
mov
sti
testl
dec
add
or
and
arpl
enter
mov
aad
sarb
fsubrs
xor
scas
and
aam
dec
sti
dec
xor
pop
inc
mov
shlb
ret
sti
repz
ret
test
xor
pop
incb
out
or
cmp
loop
jg
scas
jle
adc
repz
or
sub
das
mov
cli
jno
dec
xor
inc
sub
sub
sbb
sbb
jl
fnstcw
xchg
mov
mov
lods
aas
ljmp
jnp
icebp
push
negb
mov
shlb
int
jne
dec
add
adc
rclb
leave
lea
in
and
sbb
test
dec
dec
lahf
cli
push
in
or
sbb
les
push
mov
out
movsl
jnp
jecxz
pop
push
movsl
mov
pop
mov
cwtl
add
xor
cld
in
or
jecxz
nop
push
or
jae
sbb
test
pop
pop
mov
and
out
or
jns
add
cltd
mov
shr
mov
push
sub
cli
enter
test
outsb
fisttps
xchg
pop
pop
pushf
ret
dec
and
xchg
loopne
pop
sbb
fisubrl
and
mov
adc
or
jle
sarb
mov
lcall
aam
repnz
pop
mov
xor
pop
sub
call
xor
addl
mov
push
fwait
arpl
sbb
adc
push
sbb
addr16
jg
push
push
mov
imul
notl
lock
adc
cli
rcrb
push
xchg
adc
mov
mul
int3
push
ret
pop
pop
mov
inc
cmpsl
mov
push
call
subl
inc
jo
hlt
pushf
insb
andl
push
dec
fidivl
movswl
out
cmp
mov
stos
mov
add
rcrb
sbb
xlat
add
jecxz
popa
jg
out
popa
cs
sti
push
adc
mov
mov
sbb
cmpb
popa
arpl
mov
out
test
sub
sub
add
divb
inc
inc
stos
dec
insb
push
jp
pop
imul
xchg
mov
aas
add
aas
insb
mov
and
dec
inc
mov
sub
jne
sbb
hlt
jo
xchg
push
sbb
inc
xchg
ljmp
cmp
gs
push
push
pop
clc
sbb
cmp
aad
rorl
arpl
nop
adc
jae
jb
pop
ljmp
sub
pop
push
mov
inc
mov
adc
inc
or
jp
fcomp
ss
xor
mov
in
pop
push
aam
mov
cmp
iret
out
xchg
xlat
fcmovb
int3
inc
loope
and
stc
popf
mov
test
sarb
aaa
dec
dec
dec
push
pop
fsubrs
loop
jo
push
jle
add
inc
push
cmp
mov
cmp
jne
push
jmp
mov
xor
scas
and
or
lret
push
bound
inc
aad
adc
sti
xchg
mov
sub
xchg
mov
test
or
enter
dec
xchg
nop
pop
mov
xchg
jne
mov
xchg
jnp
lea
in
dec
pop
push
mov
cltd
ds
popa
dec
jbe
sti
adc
add
push
adc
push
push
repz
ja
jle
push
and
loop
lods
jge
xchg
and
or
push
push
js
mov
adc
push
add
or
jle
mov
adc
xchg
pop
mov
pop
shll
ja
orb
inc
insl
push
pop
test
fcmove
mov
mov
mov
inc
loope
dec
ficompl
sahf
sbb
xchg
mov
cli
sub
mov
jae
dec
lahf
test
lret
sub
ljmp
jns
dec
lods
aaa
and
pop
xchg
pop
mov
sbb
addr16
jns
mov
dec
lahf
fdivs
mov
ljmp
fs
dec
out
std
mov
aaa
rorl
cmp
mov
divb
jnp
aad
cs
push
rcll
std
xchg
jae
jp
xor
fbstp
js
xchg
inc
stc
mov
jno
and
mov
jle
dec
test
int
sar
loope
add
add
test
fiadds
xchg
fsts
jne
inc
pop
xlat
adc
xchg
test
sub
movsl
push
inc
dec
cmp
or
inc
mov
popf
inc
pop
loopne
ret
mov
push
sbb
push
inc
nop
push
xchg
das
xchg
pop
jno
hlt
mov
sbb
adc
arpl
nop
insb
xchg
push
adcl
arpl
adc
cmp
cli
mov
ret
cltd
sub
shll
movsb
sbb
xor
sub
leave
lods
imul
cmc
adc
ss
repnz
jb
and
imul
dec
push
fmuls
in
xor
cs
xlat
mov
enter
orb
popa
sbb
lds
ljmp
xor
inc
fmulp
add
inc
outsb
outsl
add
cmpsb
stc
xchg
sbb
aas
dec
test
arpl
loope,pt
jmp
mov
cmpsb
insb
sbb
push
dec
add
mov
mov
imul
cmp
ds
lds
rcrl
out
and
cmp
cmpl
mov
mov
out
imul
aaa
xor
cmpsb
pushf
rcll
ss
inc
dec
or
pop
inc
pusha
aad
daa
dec
xchg
xor
std
push
xchg
xchg
sbbb
cld
adc
jg
adc
jns
call
xor
pop
add
fmulp
push
jo
addr16
or
jg
xchg
fwait
std
movsb
push
jmp
sbb
adc
jne
and
fldt
push
mov
jb
in
sub
pop
sbb
mov
jmp
xor
cld
test
outsl
inc
sbbl
das
imul
cmp
jne
insb
sub
fwait
aad
add
xchg
sub
push
or
sahf
aas
fnstcw
sub
jo
test
xorb
sub
jno
jnp
dec
push
dec
sub
jmp
std
mov
ds
pop
xchg
in
mov
loop
pop
cmp
jb
dec
lds
test
lea
ds
pop
xor
push
lahf
sbb
sub
add
xchg
adc
insb
mov
mov
jmp
fmull
jbe
out
outsb
pop
int
addr16
rcrb
ljmp
cmp
cs
inc
adc
jbe
mov
jne
and
adc
mov
sub
push
jb
idivb
rcl
rol
mov
xor
inc
js
sti
and
rorb
in
mov
and
jns
pushf
sub
mov
mov
jmp
lds
pop
push
dec
jmp
int3
push
xchg
aas
fcomi
push
dec
outsl
je
dec
adc
mov
sbb
and
mov
dec
push
sbb
lret
popa
cmp
scas
aas
push
inc
xor
jmp
pop
sti
mov
adc
aam
roll
into
jbe
addr16
jns
sbb
cmpsl
pop
cmc
xchg
movsb
fldt
roll
fnstenv
inc
call
dec
push
aaa
cmp
je
popa
dec
negb
fidivl
insl
sbb
stos
int
dec
out
sub
xchg
pop
es
popf
repz
xor
ss
cs
adcb
shlb
sub
shr
cli
xchg
and
add
inc
flds
lds
xlat
xchg
and
cmpsb
mov
addr16
mov
xchg
call
jb
cmp
test
ror
fcoml
mov
sbbb
sbb
xchg
push
repnz
popf
jmp
sbb
xchg
sub
popa
hlt
mov
call
shrb
xlat
shrl
and
inc
or
sbb
js
push
dec
int3
sbb
push
int3
sub
mov
mov
in
aad
mov
jle
popf
out
imul
movsb
and
aas
mov
push
in
divl
xor
lods
clc
sahf
mov
xchg
push
mov
lahf
pop
xor
das
inc
jecxz
xor
js
push
adc
scas
and
dec
lods
jle
push
and
rorl
pop
and
push
xchg
aaa
pusha
js
pop
in
push
and
hlt
mov
cmc
sbb
mov
test
lods
cmp
cmp
cwtl
push
stos
dec
js
jmp
mov
test
cmp
xchg
inc
adc
mov
rcll
cmp
push
sbb
adc
lods
push
pop
inc
ret
adcb
es
sub
scas
add
mov
and
dec
pop
cmc
add
loop
testb
add
aas
roll
xor
lods
stos
add
cld
mov
insb
ss
jp
adc
xor
cltd
push
movsb
pop
push
je
popf
pop
adc
out
xor
ljmp
loop
cmp
test
mov
mov
xchg
sub
mov
clc
aam
lds
push
sbb
fstp
and
push
inc
out
scas
rolb
sub
inc
insb
fs
cmp
test
dec
out
adc
stos
mov
or
jmp
aas
and
call
adc
jmp
sub
into
outsb
iret
fildll
lds
test
push
or
mov
sub
scas
test
jl
mov
mov
mov
out
jge
inc
sub
add
js
jae
dec
loope
addl
mov
in
mov
ret
lods
or
loope
pop
outsb
xchg
mov
lods
cmpsl
push
sar
mov
gs
stos
lret
cmpsb
xor
outsl
lods
ds
ret
aam
sub
pusha
xlat
fdivp
mov
or
sti
pop
mov
in
xor
xchg
cmp
add
dec
jmp
cmc
pop
xor
in
sbb
jmp
cwtl
push
call
xlat
adc
add
stc
mov
mov
imul
dec
in
pop
cmp
das
shll
aaa
mov
outsb
fistpll
cmp
sub
in
jb
sub
cmp
mov
popa
pop
inc
rcll
aam
mov
xchg
xlat
popf
into
cmpsb
test
push
xchg
fwait
sub
cltd
dec
mov
jl
cmp
inc
repnz
std
dec
idiv
lret
mov
fmull
mov
in
out
xchg
shlb
out
sbb
out
sbb
stos
cmc
test
js
aad
pusha
push
lcall
and
js
adc
mov
mov
ret
hlt
fs
outsl
jg
insl
dec
push
test
inc
nop
sbb
mov
pop
stc
jno
xchg
sahf
xor
lgdtl
dec
data16
stos
lcall
pop
stc
jecxz
ja
insb
arpl
push
and
push
xrelease
lds
movsb
inc
mov
jecxz
or
mov
add
test
lret
inc
mov
mov
popf
adc
aas
or
lcall
xor
push
ja
gs
dec
and
mov
inc
jp
data16
push
inc
pop
pop
push
imul
divl
adc
push
sbb
adc
cmp
or
push
imull
or
adc
in
push
inc
sbbl
jg
addps
gs
outsl
sub
cmp
repnz
inc
aas
pop
jne
sub
cmp
test
in
pop
loop
ljmp
jmp
shll
fdivrp
test
dec
mov
push
nopl
out
in
jnp
and
and
aad
xor
push
adc
xchg
mov
or
push
jecxz
mov
sbb
jmp
mov
push
dec
cmp
add
mov
fwait
inc
sbb
pop
dec
dec
mov
add
jbe
scas
sti
daa
and
dec
shll
fsubrs
int3
mov
pop
mov
lods
scas
pop
aad
adc
dec
mov
mov
pop
xchg
call
cmp
dec
loopne
popa
fbstp
mov
adc
jmp
ficomps
pop
mov
outsb
dec
adcb
pop
cmp
xor
sub
ret
sbb
cs
xor
test
push
dec
sbb
enter
scas
aaa
mov
sti
mov
lea
jle
je
sub
mov
cvttps2pi
adc
jb
inc
cmpsl
pushf
pop
popf
sbb
or
sbb
lock
into
loope
pop
sub
faddl
pop
icebp
jae
jne
out
and
and
jmp
repnz
push
add
xchg
test
xchg
mov
xor
pop
insb
push
jp
mov
add
pop
xor
adc
fucompp
jecxz
out
xchg
pminub
notb
mov
dec
test
fcmovnb
fisubrs
mov
outsb
icebp
cld
es
xchg
pushf
out
cmpb
sahf
stos
cmpsb
add
push
movsb
lods
shll
jns
sub
stos
test
xchg
pop
dec
push
shlb
adc
fcoml
add
fisttps
jne
pop
cmp
roll
sbb
mov
dec
out
rep
xor
lret
sub
push
sub
leave
add
cmpsl
out
mov
stos
aas
inc
push
adc
into
leave
jno
jle
iret
push
mov
jl
inc
pop
adc
cwtl
aaa
lds
mov
sbb
int
pop
test
jg
loopne
aam
xchg
xor
or
push
dec
add
add
dec
mov
sbb
mov
andl
nop/reserved
pop
jo
sbb
sti
add
pop
ja
ret
pop
aam
and
mov
subb
int3
std
bound
ret
xchg
sub
lds
out
dec
push
daa
jge
push
loopne
sub
adc
cmp
mov
and
pop
mov
ss
out
xchg
or
jle
insb
rol
out
fldenv
fst
mov
outsl
or
mov
dec
fadds
mov
scas
lahf
mov
imul
fimull
test
lcall
in
popl
xchg
add
cmpsl
jg
rcrl
enter
and
incb
test
sbb
imul
and
push
lahf
jmp
lcall
lret
sub
push
in
mov
pop
adc
sub
adc
stc
pushf
jmp
cmc
pop
stos
jg
jg
cmp
jmp
jb
leave
mov
aaa
in
sti
das
or
push
or
shl
incl
add
cld
mov
cs
inc
enter
mov
mov
push
cmc
sub
faddp
orb
addb
cmpb
sub
or
mov
xchg
movsl
mov
lea
in
sbb
out
test
jecxz
popf
nop
enter
xor
jle
pmuludq
repz
outsb
mov
jb
mov
sub
out
jne
xor
out
adc
addr16
push
and
test
roll
fdivs
xor
and
fxch
push
adc
rcr
adc
or
lret
push
lahf
pop
and
shrb
iret
movsb
inc
lahf
aam
aaa
add
mov
loop
and
aad
mov
push
adc
mov
gs
jl
xchg
icebp
ret
push
es
cmp
ljmp
xchg
mov
into
and
rcr
or
or
aas
xor
daa
jne
stc
xor
jnp
jge
mov
aas
jne
sbb
jg
mov
jecxz
dec
xor
shl
movsl
jns
sbb
sbb
sbb
inc
fsts
pop
stc
xlat
push
cmpsb
lret
repz
pusha
push
pop
mov
sub
pop
or
push
add
xor
push
cmpl
jge
ss
sti
into
xchg
les
ds
fdivrp
push
ja
lea
fsin
lea
imul
ss
sub
push
in
pop
cmp
pushf
leave
xchg
mov
in
lods
fwait
mov
pop
sub
rcr
push
je
aas
jmp
cmpb
ss
rorb
nop
in
or
sbb
inc
push
xchg
jno
adc
cltd
mov
inc
cli
push
cmc
mov
sti
lret
inc
icebp
sbb
cwtl
inc
ret
out
cs
movsl
sbb
cmpl
test
loope
lret
dec
sub
shr
jb
adc
test
sbb
rclb
repz
ljmp
aas
scas
mov
std
dec
mov
shrb
xchg
popf
pop
jnp
inc
scas
or
out
bt
ljmp
fdivr
notl
or
call
sub
scas
xchg
dec
cmp
in
cmc
sub
imul
test
imul
test
ret
mov
or
std
xchg
cmp
mov
cli
pop
xchg
sub
sub
push
lds
mov
dec
leave
test
je
test
cs
xor
ret
lcall
js
mov
and
jo
push
in
fs
imul
xchg
pop
cld
xchg
jo
loopne
inc
int
leave
adc
test
or
test
xor
stc
and
sbb
mov
shlb
fistl
lret
dec
xchg
js
aad
mov
test
neg
fwait
and
push
lods
lret
iret
rcr
imul
add
shr
outsl
shrb
inc
in
push
inc
and
ljmp
pop
popf
mov
push
add
cltd
xchg
lahf
sti
jae
in
push
inc
aad
je
jo
cwtl
sarl
add
mov
xchg
xchg
jg
mov
inc
jb
fwait
pop
pop
scas
xchg
loope
aas
lds
push
cltd
out
dec
stos
repnz
mov
insb
inc
mov
in
movsl
xchg
sar
movsl
xchg
xor
aas
lods
jae
fldt
fcomps
push
call
mov
jnp
and
lock
js
shrl
mov
sbb
sbb
inc
cli
mov
mov
sub
outsl
outsb
jle
sub
adc
mov
pop
mov
in
mov
test
push
scas
or
mov
add
out
out
test
push
negb
testb
inc
aam
shrb
mov
jle
push
mov
add
push
and
jns
jns
inc
sti
xor
pop
add
xor
je
pop
test
popa
jmp
rcl
or
or
aaa
xchg
ss
mov
fs
or
sub
cmp
jae
pop
mov
pop
cli
lcall
dec
fildl
in
or
in
and
not
xchg
lcall
jl
cmpsl
in
xchg
xchg
hlt
mov
ret
pop
insb
aaa
push
loopne
call
mov
adc
xor
scas
data16
insb
jecxz
cmp
xor
mov
xorl
adc
push
or
popa
imul
mov
push
stos
in
hlt
cli
lods
mov
rolb
insl
mov
int3
scas
inc
notl
mov
shll
aam
mov
jae
dec
push
cmp
cmp
push
xor
push
jno
push
test
adc
imul
mov
mov
xor
fsub
or
mov
es
cmovo
add
neg
adc
cmp
repnz
dec
jmp
fstp
insl
fcmovb
xor
mov
ja
xorb
in
jae
mov
push
mov
or
shlb
nop
or
jbe
in
in
bound
cmp
dec
leave
add
mov
in
add
mov
sub
aad
add
fmull
es
icebp
jb
and
repnz
outsb
cmpsl
pusha
xor
int3
inc
pop
xor
pop
pusha
mov
out
xchg
xor
mov
adc
dec
scas
aam
jns
pushf
pushf
popf
pop
jecxz
std
dec
adc
insl
addb
pop
mov
jo
js
int
pop
pop
repnz
sub
mov
and
clc
pop
daa
das
xor
scas
push
daa
pop
push
mov
sub
push
push
loopne
iret
jp
pop
fsts
loop
or
ficompl
adc
jl
sub
imul
pop
push
sub
sbb
fildl
jmp
mov
xchg
scas
and
mov
fs
add
push
fstpt
imul
inc
pop
inc
andl
mov
lret
outsb
mov
jbe
mov
adc
add
sbb
fistpll
dec
js
ror
std
lods
pusha
in
jne
jecxz
xorb
lret
xchg
mov
sbb
dec
pop
xchg
sub
insl
fsubrs
adc
aad
mov
shll
jae
call
push
arpl
mov
and
dec
test
or
mov
je
imul
fdivrs
ffreep
shr
jo
insl
dec
sahf
aas
mov
popf
adc
test
cmp
mov
test
xor
es
shrb
sbb
or
adc
or
bound
cmc
jle
ljmp
mov
jp
loope
std
cmpsb
movaps
pop
movsl
jo
ss
mov
pop
adc
adc
int3
mov
les
ss
jle
xchg
js
pop
lea
mov
pop
push
mov
dec
push
mov
std
sub
push
mov
outsb
push
xor
aad
xor
ss
testl
js
outsl
fcompl
cli
mov
xchg
mov
mov
inc
pop
cmp
inc
mov
jp
sbb
int
inc
pop
ja
sbb
int
movsb
movsb
fisubrs
inc
sub
xchg
jg
xchg
ds
jae
cltd
and
xchg
cltd
mov
outsl
lcall
push
out
lahf
and
mov
mov
aam
cmp
sbb
jnp
rclb
xchg
lcall
jo
lret
loopne
cmp
outsl
push
sub
mov
cwtl
aam
sub
inc
int3
fcom
xchg
mul
sbb
aad
ja
xor
or
cwtl
sub
jmp
push
adc
or
adc
and
rcll
clc
inc
stc
push
ret
loope
aaa
stc
pop
das
jmp
adc
push
sarb
mov
cmp
js
lods
sbb
or
push
fwait
jo
cld
test
and
sahf
es
mov
loop
popa
rcll
mov
push
psubw
jmp
add
repnz
loope
jae
ror
mov
fldlg2
push
scas
out
pop
les
fmull
adc
xor
mov
out
cmc
fs
mov
dec
dec
cs
cltd
add
mov
add
pop
in
ss
xor
jne
push
cmc
iret
add
xor
dec
out
stos
aam
sbb
push
aas
jg
lock
cli
fdivp
inc
fldt
lcall
fistl
jg
jo
jnp
xorb
out
testb
mov
popa
rolb
pop
negb
pop
mov
pop
and
xor
ror
dec
mov
scas
pop
clc
movsb
imul
mov
cmpsb
cmpsl
push
outsb
push
inc
push
mov
sub
pop
jecxz
js
sub
sub
ror
adcb
aam
xchg
mov
dec
xlat
xlat
inc
jmp
jns
pop
cmp
mov
add
out
adc
jae
incl
lods
pop
adc
outsb
xor
clc
call
in
shlb
into
insb
jae
push
pop
jecxz
out
daa
insl
sub
jmp
push
push
in
push
sbb
lods
dec
ljmp
outsb
jo
loop
cwtl
push
pop
int
divb
lock
cmp
fsts
dec
pop
scas
loope
rclb
sbb
jne
int
and
sahf
jno
rcll
adc
mov
inc
sub
leave
inc
push
push
movsl
es
pop
adc
hlt
bnd
loopne
mov
pop
mov
mov
sbb
loope
cmpb
int
rclb
rolb
aad
adc
jns
aas
adc
insb
and
and
popf
mov
pop
or
fldcw
xchg
int3
test
adc
jp
pop
pop
scas
jmp
cli
inc
outsb
addr16
cmp
out
pop
popa
jecxz
cld
sub
adc
test
dec
xchg
mov
loopne
and
dec
in
out
xchg
sti
jle
pop
dec
mov
inc
stos
pop
jl
aam
ret
arpl
pop
mov
sahf
mov
add
testb
jecxz
pop
sub
mov
filds
xor
stos
inc
ret
dec
mov
sub
sub
add
lock
mov
mov
gs
lret
imull
push
pop
rorl
insb
fsts
das
test
cltd
fnstcw
jo
or
fsubs
adc
popa
test
dec
pop
test
jns
xchg
fisubrs
sbb
sti
mov
jp
outsb
adc
clc
jbe
or
insl
or
xchg
mov
push
sub
addr16
shll
js
sbb
imulb
scas
icebp
push
stos
and
sub
adc
xchg
test
out
out
add
jle
das
jne
mov
lods
or
sub
lock
inc
fistps
mov
aam
mov
or
lds
cwtl
dec
enter
push
dec
stc
repnz
pushf
nop
fdivrs
hlt
xor
lds
xor
dec
adc
mov
and
jmp
shrb
mov
mov
sbb
sub
nop
ss
repz
faddl
ja
iret
mov
push
inc
cmp
pushfw
insb
push
jns
rclb
cmp
pop
add
aam
pop
repz
cld
inc
xor
std
sub
lea
nop
push
mov
cmp
cmpsl
mov
enter
add
push
xor
lea
stos
leave
lret
xchg
shrd
outsl
adc
orb
idivb
bound
das
cmpl
shl
adc
add
int3
pop
daa
repnz
xchg
adc
js
xchg
inc
xor
mov
xor
inc
jns
mov
cmp
sub
in
int3
mov
movsl
nop
loopne
stos
push
push
aas
inc
wrmsr
fbstp
xchg
jae
nop
add
mov
enter
inc
insl
jne
sub
movsb
idivb
fistl
sub
inc
ja
push
ret
and
xor
jmp
les
adc
sbb
push
inc
and
clc
mov
mov
outsb
call
pslld
in
popf
pop
inc
icebp
push
ds
mov
mov
iret
aas
pusha
adc
mov
xor
popa
jb
xchg
or
insl
adc
repnz
mov
xchg
cmp
repnz
sbb
ja
std
loop
pop
add
xor
sub
daa
push
cmpsb
mov
xchg
push
cmp
stos
shlb
addr16
movsb
loope
shlb
ja
push
pop
lods
push
cmpsl
sbb
test
sub
add
aas
push
popa
push
pop
mov
dec
inc
inc
lock
fimull
scas
adc
mov
in
clc
loope
xchg
pop
lahf
testl
xor
add
nop
rolb
sbb
addr16
pop
leave
inc
stos
mov
inc
add
enter
jno
pusha
aas
ret
das
jge
mov
xchg
fnsave
scas
pop
push
mov
popf
xchg
fadds
jnp
fisttpll
push
mov
insl
pop
test
pop
lock
int
pop
or
dec
push
lds
dec
cmc
ret
notb
in
mov
xor
clc
sbb
ljmp
mov
call
fcomp
xchg
loopne
and
push
pop
xor
bound
inc
out
je
sti
popf
call
mov
sub
inc
xchg
aaa
jae
jns
cmpl
mov
push
xchg
imul
lock
lods
sahf
popf
andb
setns
lods
pop
aad
popa
or
mov
lcall
fsubl
rcrb
or
es
jno
dec
ficompl
out
lods
outsl
cltd
mov
bound
test
out
out
fwait
rorb
cmp
gs
add
add
or
sbb
pop
lods
mov
jae
sbb
cltd
mov
int
lea
jmp
orl
inc
fcomp
mov
shlb
xor
jmp
or
or
push
xchg
int
dec
inc
jo
out
mov
aaa
add
testl
es
aaa
pop
popf
out
mov
clc
shrl
xor
cld
pop
jge
pop
rcrb
ficoml
push
mov
mov
inc
das
repz
xchg
rcll
cmc
rcrl
rol
xchg
inc
sub
mov
xor
cli
pop
pop
scas
adc
add
push
popa
aaa
in
mov
and
outsl
test
and
popf
jp
xlat
repz
das
dec
data16
inc
jle
mov
cli
push
js
in
cs
mov
rclb
in
inc
mov
jnp
or
je
int3
xchg
sub
lahf
pusha
xchg
mov
ret
mov
jmp
inc
movsl
jecxz
frstor
inc
mov
out
push
sbb
mov
push
lret
push
addr16
repz
xor
xchg
aas
test
pop
jmp
mov
sbb
sbb
push
inc
aad
cltd
aam
jne
or
lods
into
xlat
jne
pop
fwait
loopne
aas
dec
mov
fnstcw
and
push
cmp
mov
popf
and
dec
inc
push
mov
inc
jmp
adc
mov
jge
or
cmp
xchg
imul
sub
jae
in
xchg
mov
fs
lret
loope
mov
inc
jge
cltd
filds
ficomps
int
fwait
adc
push
jns
mov
andb
lcall
xlat
cmpsl
sub
add
lods
sub
cmp
mov
xchg
lock
or
shll
inc
xor
inc
dec
or
mov
test
mov
xor
jo
lea
imul
scas
dec
andb
shll
loope
ljmp
bound
mov
das
sahf
es
sarb
imull
repz
out
mov
add
sarl
mov
rcl
mov
sti
in
imull
xor
jle
sub
into
ss
sbb
xor
dec
xchg
xor
jge
ljmp
sub
mov
jge
sar
add
xor
cmp
in
cmp
arpl
das
sbb
scas
and
xchg
hlt
adc
or
cltd
fistps
add
mov
jno
mov
bound
mov
arpl
call
mov
pop
iret
push
dec
aam
pop
push
in
shrl
inc
inc
adc
imul
andl
jle
push
shlb
adc
gs
leave
mov
mov
mov
adc
xor
aad
lods
jbe
int
shlb
out
rcrl
xchg
sti
orb
add
nop
mov
cld
jle
add
sub
fistpll
add
xchg
shll
sub
cmp
adc
rcll
sti
lcall
andl
jge
loop
icebp
push
fistl
xchg
xor
or
or
repz
sbb
inc
pop
ds
fildl
stos
cmp
out
ret
idivb
and
push
aam
sub
push
ds
jne
dec
shlb
stos
xchg
inc
xchg
mov
hlt
inc
mov
aam
cmp
pop
je
or
jnp,pt
clc
les
ljmp
cltd
lock
adc
push
imul
or
outsl
mov
mov
sbb
popa
or
or
mov
imul
xchg
lcall
mov
lcall
or
out
es
mov
adc
jg
fcoms
jle
mov
mov
loope
mov
rolb
and
int
sub
rcll
mov
fisubl
inc
inc
stos
ficompl
insb
mov
mov
in
test
fs
and
lret
rcrb
fmul
or
clc
test
out
jle
xchg
jbe
sbb
call
add
shlb
xchg
aas
mov
movsl
or
inc
lds
sub
insb
aam
xor
lods
xor
push
dec
jle
call
mov
loop
xor
dec
push
mov
or
aas
inc
xor
sbb
in
inc
adc
iret
and
dec
push
testl
push
repz
mov
adc
lock
push
pushf
mov
ret
les
int3
push
lahf
push
jae
dec
add
sub
sahf
cltd
mov
xor
sbb
mov
sbbb
mov
aas
mov
or
mov
jge
inc
outsl
cmp
push
mov
outsb
not
mov
repnz
mov
std
sbb
sbb
scas
cmp
lds
jg
xchg
xchg
iret
rclb
pop
adc
mov
xchg
push
sarb
int
xchg
xor
jne
dec
loopne
mov
pop
outsl
fucomi
push
cmp
jmp
xor
out
xchg
cmp
mov
inc
aas
ds
push
stc
fcomps
inc
sbb
pop
xchg
mov
bound
loopne
sbb
sarl
push
ds
popf
and
xor
jl
dec
dec
jecxz
jecxz
xlat
rcll
sbb
cltd
cmp
test
test
dec
out
push
mov
and
cmp
aaa
mov
xor
push
jmp
jl
push
test
add
jns
mov
jno
mov
xchg
inc
dec
cmpsb
pop
mov
sbb
addr16
sub
lcall
nop
jg
fldcw
inc
int
mov
jle
jle
imul
inc
sarb
dec
dec
notl
mov
xorl
inc
cmpl
adc
jp
xchg
mov
sbb
push
test
sub
cmp
insb
mov
outsb
fdivr
mov
rorl
das
dec
push
sbb
jno
std
jmp
mov
mov
pop
dec
cmp
icebp
pop
push
add
mov
jne
push
movsl
cltd
adc
mov
ret
mov
xor
aaa
rolb
mov
jae
int3
adc
adc
push
int
jp
mov
mov
roll
cltd
bound
sti
mov
cmpl
dec
lock
pop
pop
mov
dec
pop
in
pop
jno
aam
testl
cmpsb
and
mov
adc
cmp
or
mulb
in
mov
dec
call
xchg
icebp
push
test
into
inc
cmp
jns
pushf
loop
in
xchg
pusha
sub
push
jmp
popf
iret
add
out
test
shlb
push
mov
lea
ficomps
gs
cmpsb
movsl
mov
out
fisubs
xor
das
sub
xchg
cmc
mov
jecxz
xor
add
repnz
mov
out
adc
mov
fwait
mov
popa
xchg
mov
dec
cmp
aam
jb
add
push
popf
icebp
shr
shrl
push
or
mov
pop
mov
pop
leave
lods
fildl
mov
push
je
add
data16
xchg
mov
js
fidivl
jecxz
ss
cmp
clc
xorb
rolb
cli
ss
jae
les
jno
push
stc
ljmp
and
js
ror
xchg
test
test
jno
xchg
xchg
ja
xchg
pop
rcl
add
rcr
cmpsb
in
fs
aam
cmp
mov
adc
sbbb
out
mov
and
insb
inc
jb
xlat
lds
fnstsw
leave
cs
out
mov
and
hlt
push
pushf
shl
mov
clc
xor
je
mov
outsl
push
mov
cmpsl
inc
jge
lock
push
push
clc
loop
sub
pop
dec
movsb
in
inc
inc
mov
mov
xor
das
xor
int
inc
dec
xchg
test
xchg
fistl
pop
stc
rorl
sarl
mov
cltd
sbb
into
faddl
sub
inc
dec
test
pop
add
xchg
adc
sti
fdivrs
andl
push
fldt
movlps
jmp
fnstcw
popa
pop
xlat
push
dec
adc
je
cltd
xor
testl
or
lods
or
fstl
sbb
popf
mov
mov
cmp
xor
out
pop
jbe
insb
push
inc
adc
xchg
enter
push
fdivr
in
lock
stc
es
hlt
push
fwait
jmp
insb
xor
or
ss
pop
fcoms
leave
js
add
mov
sub
inc
incb
mov
jmp
mov
sub
mov
fistps
leave
dec
mov
cmc
das
mov
lcall
sahf
mov
jno
loope
addr16
ror
mov
stc
dec
mov
fildl
pop
cmpl
add
mov
xchg
in
mov
out
lods
lcall
mov
mov
jne
fidivs
in
roll
adc
test
pusha
mov
aas
aas
inc
rclb
std
lock
sbb
xorl
pop
out
pop
shr
out
xchg
shrb
mov
stc
add
push
push
cmp
mov
lods
push
gs
xchg
xor
sub
insl
xchg
fldenv
and
ffree
inc
data16
xor
das
jg
movsl
mov
sub
cmc
jg
pop
xchg
dec
bound
mov
loopne
aad
cltd
inc
std
pop
mov
jecxz
inc
sbb
int
nop
cmp
bound
ret
insb
push
mov
aaa
imul
lret
popa
lods
push
xchg
aas
test
push
mov
in
fcompl
or
xchg
ret
outsb
mov
cmp
js
cmp
cmp
roll
loope
push
shll
jb
mov
add
push
das
inc
mov
xchg
mov
outsl
xchg
pop
daa
cmp
push
xlat
dec
mov
out
sbb
or
adc
xor
pop
imul
push
xor
sbb
fcmovu
sbb
xor
fdivr
filds
mov
mov
jmp
pop
loop
lock
xchg
test
lahf
or
mov
sub
xchg
and
ficomps
dec
fwait
cmp
xchg
dec
mov
dec
jbe
call
sbb
enter
pop
and
push
arpl
leave
pop
cld
jno
repz
pop
cli
xor
adc
test
sub
mov
push
mov
lods
int
push
fisttpl
mov
pusha
xor
pop
ja
movsb
push
push
cmp
add
mov
pushf
push
stos
std
leave
idivl
into
or
out
xor
sahf
add
jo
cmpb
call
fucomi
jns
xchg
call
sub
sbb
clc
dec
cmpsb
loope
xor
pop
fstl
stc
stc
pop
out
push
iret
jne
adc
or
test
sahf
and
stos
cmpsb
mov
mov
jae
lods
bound
xchg
mov
aaa
ja
stos
inc
inc
imul
mov
and
in
xorb
cmpsb
aaa
jnp
jns
repz
movsl
sub
loope
mov
ret
scas
sbb
inc
mov
addr16
jp
ret
push
loope
sarl
leave
cmpsb
cmp
divb
xchg
xor
cmp
sub
inc
mov
ds
pop
xor
cmc
mov
dec
imul
mov
test
lods
xchg
cmp
popa
or
inc
jb
pop
daa
push
sub
mov
arpl
cmp
rep
cmp
dec
push
shl
or
and
fimuls
scas
mov
icebp
movsb
adc
sub
xlat
andb
or
sbb
lea
jl
mov
or
call
sti
push
sbb
add
jbe
lods
or
xor
test
loopne
mov
pop
jns
mov
imul
je
jmp
ret
ds
mov
imul
enter
mov
outsb
adcl
sub
decb
lods
insl
aaa
stos
jo
inc
ret
shrl
into
nop
psraw
or
xchg
das
inc
and
xorl
fistpll
mov
nop
lock
sub
out
pushf
loop
aam
scas
addr16
scas
inc
mov
cmc
sbb
jo
push
and
dec
mov
pop
sbb
cmpsl
mov
ret
iret
push
mov
cmpsl
cmp
loop
sbb
lcall
test
addl
add
in
adc
fcoms
scas
ret
pusha
mov
popa
sti
stos
daa
xchg
jnp
dec
es
std
fsubs
inc
jp
inc
jecxz
and
fcoms
in
in
in
ljmp
xor
mov
mov
movsb
inc
push
dec
js
call
jns
inc
rcll
xor
cmp
dec
insb
xchg
and
pop
aad
ret
lret
call
or
or
fiadds
mov
das
add
subl
fcmovb
xchg
loopne
mov
sti
out
aas
cmp
xor
pusha
sahf
mov
mov
loop
xor
popa
sub
and
mov
cli
sub
pop
lahf
aas
ficomps
lds
xchg
insb
cmp
je
out
test
adc
ret
sbb
hlt
jecxz
sahf
mov
pusha
adc
test
in
test
jp
sub
jle
pop
or
or
das
outsb
mov
fildll
cli
fwait
shl
push
jmp
dec
adc
fbstp
push
and
push
in
jns
or
push
push
jle
adc
mov
subb
repz
icebp
xchg
aas
fmulp
sbb
int3
in
popf
cld
and
push
aam
fdivr
movsb
mov
lds
xchg
in
out
daa
or
je
sbb
ljmp
sbb
jge
lods
into
mov
xchg
push
sub
outsl
fimuls
cmp
push
or
mov
js
mov
in
mov
jbe
sbb
dec
mov
mov
add
cs
pushf
pop
dec
or
out
mov
xor
push
loop
enter
lahf
mov
ja
pop
fistpl
dec
pop
jg
sub
fadds
ret
mov
mov
test
mov
mov
test
adc
jg
dec
popf
cmpsb
icebp
mov
in
pop
nop
in
fwait
and
fdivl
inc
dec
inc
sbb
xchg
pop
mov
fnstcw
pop
add
add
jo
cmovb
lods
pop
add
sbb
xchg
fnsave
xchg
ret
test
add
in
lock
pop
xor
gs
sbb
int
ljmp
add
xor
mov
repz
or
out
cmp
sahf
dec
sbbb
call
mov
xor
outsb
lahf
call
push
lods
pop
in
les
sub
pop
pop
mov
shll
icebp
ss
and
sub
das
xchg
mov
testb
jp
shll
repz
les
int3
sbb
sahf
dec
pop
xor
xor
inc
lods
inc
scas
sbb
call
scas
test
subl
shrb
pushf
fstpt
push
rorl
sub
std
mov
xor
jg
out
cltd
jp
les
jmp
jle
repnz
ss
mov
addr16
and
imul
cmp
xchg
dec
sbb
jo
pop
in
enter
roll
outsl
jne
pop
dec
out
js
sahf
xchg
jno
pushf
test
bound
popf
mov
ds
pop
cmc
dec
jbe
add
loop
adc
out
in
pop
cld
rol
sbb
mov
xor
ss
jecxz
loopne
test
fisubs
pop
dec
movsb
add
jle
and
jmp
fbld
mov
test
sbb
pop
adc
mov
hlt
into
and
loop
fwait
jbe
hlt
inc
test
stos
add
lds
test
dec
sbb
push
mov
cmpsb
ds
popa
dec
aam
push
andl
fsubs
call
sbb
pop
dec
pop
iret
pop
out
ret
push
mov
mov
repnz
pusha
mov
js
je
pop
lock
cltd
gs
pop
jne
subl
push
arpl
xorb
dec
jl
jb
jns
mov
jg
sti
addr16
adc
pop
out
es
mov
lahf
mov
test
and
mov
lods
into
ret
and
daa
scas
xchg
cmp
push
int
mov
mov
push
push
mov
shrb
les
mov
xchg
fsts
lahf
mov
mov
mov
push
xchg
mov
out
mov
ret
add
mov
jns
inc
sbb
inc
inc
loope
loope
movsb
jecxz
mov
adc
fwait
xchg
xchg
and
popa
push
xor
repnz
lahf
cwtl
sarl
mov
pop
pop
xchg
std
fisttps
ja
xlat
loope
stos
xchg
add
jle
jnp
mov
repz
movsl
jo
fnstenv
leave
adc
sub
mov
scas
stos
mov
das
in
sub
mov
nop
lods
sub
mov
or
dec
mov
mov
pop
nop
push
and
fsubr
sti
movsl
push
sysexit
jp
cwtl
cmp
xchg
shl
inc
leave
scas
cmp
aas
mov
scas
mov
dec
subl
jne
push
or
and
and
mov
pop
ror
sub
cmc
jo
movsb
xor
pushf
adc
push
mov
xor
jne
pop
dec
mov
cmp
jle
call
jge
mov
adc
outsl
dec
jmp
inc
ret
repz
imul
fcomps
pop
movsb
ss
aas
int
fiaddl
adc
imul
lahf
mov
or
mov
shl
jecxz
xor
shl
icebp
push
jmp
add
hlt
test
and
mov
pop
into
scas
js
dec
and
sub
loope
inc
cwtl
bound
xchg
int
sarl
addb
xchg
lods
push
imul
pop
rorl
pop
adc
inc
test
int
inc
sbb
xor
push
dec
dec
js
push
or
mov
xchg
inc
add
push
xor
and
pop
jo
popf
adc
daa
aas
std
leave
and
inc
addr16
mov
pusha
pop
xchg
addr16
adc
pop
sbb
shll
push
pop
mov
in
or
iret
jo
sbb
jae
xchg
cmp
int
sub
daa
push
xchg
call
pop
lods
and
mov
cmp
mov
outsb
bswap
into
div
loopne
pop
pop
sub
notb
clc
fnstenv
ret
cmp
xchg
or
add
or
push
jbe
in
adc
popa
sbb
mov
mov
lret
nop
xchg
and
mov
xchg
add
mov
sub
aas
and
push
add
or
gs
scas
icebp
xor
pop
clc
fstps
es
lds
sbb
lods
das
cmp
mov
bound
xchg
sbb
test
sub
mov
mov
mov
mov
aaa
add
bound
cwtl
or
insb
sbb
jno
iret
sbb
insl
xor
ja
jmp
stos
inc
xorl
lds
loop
pop
lret
xor
clc
cmp
cmp
push
cmpsb
clc
sbb
jne
mov
cwtl
jg
mov
je
enter
push
adc
mov
movsb
xor
mov
add
clc
into
insl
stos
test
push
mov
pop
inc
xchg
aas
jae
cmpsb
adcb
sub
adc
dec
pop
mov
daa
or
cmpsl
sub
in
adc
ffreep
fnstsw
sub
shll
push
mov
xchg
inc
adc
xchg
loope
sub
inc
insl
lods
pusha
mov
xchg
insl
push
jmp
test
inc
mov
fadds
inc
inc
cs
xchg
xchg
and
or
outsb
lock
adc
cmpsb
lea
imull
jb
mov
add
fcmovbe
out
outsb
mov
inc
mov
aas
out
cli
test
jmp
mov
sub
clc
pop
lcall
test
or
jnp
mov
and
shll
xchg
dec
stos
dec
loopne
sub
cld
xchg
add
inc
mov
push
subl
jae
popa
sub
xor
jbe
vpcmpgtd
cmpl
rcl
xor
inc
cltd
mov
jae
hlt
test
out
push
aas
push
xor
lds
dec
mov
mov
jae
xchg
dec
push
into
lcall
add
test
ljmp
xor
insb
push
dec
dec
loop
dec
les
addr16
adc
add
out
pushf
lods
addr16
dec
add
je
pop
ljmp
out
adc
push
xor
xchg
nop
adc
not
mov
scas
mov
inc
xchg
cmp
push
sbb
cs
fsts
and
shr
andl
push
int3
arpl
movsl
xor
add
shrl
mov
lret
adc
cmpb
insb
ficoml
xor
mov
cltd
push
push
nop
sarb
and
in
push
push
aas
push
cmp
call
mov
push
fwait
lret
and
xchg
movsl
negb
loope
xchg
out
sub
push
inc
aad
out
push
pop
mov
ficompl
aad
jnp
dec
pop
and
mov
sub
dec
sub
adc
lea
shr
cmp
pop
mov
repnz
mov
push
aaa
push
cld
in
xchg
pusha
daa
xchg
pushf
jne
int3
xorl
cwtl
fldt
lret
clc
in
jb
dec
cmp
pusha
rcrb
fstpt
jnp
push
xchg
shl
mov
pop
out
inc
sbb
mov
test
push
fidivs
fcoml
dec
lret
jo
ja
aad
push
xchg
lds
push
xor
ja
div
mov
adc
inc
pop
cltd
insl
inc
add
and
in
out
dec
pop
inc
cmpsb
jo
xor
mov
or
in
cmpsl
push
lds
jo
sub
or
in
push
sbb
jae
mov
xchg
mov
push
int3
xor
xor
xchg
in
nop
xchg
fdivr
cmp
shr
sahf
mov
aas
popa
call
inc
test
adcb
adc
lods
mov
cmp
loope
push
push
xchg
add
or
hlt
andb
xchg
and
ds
cwtl
cmp
and
push
and
pop
test
or
pop
repz
or
sub
sub
les
jnp
mov
cmp
jg
sbb
shr
loopne
push
jae
or
add
xlat
mov
jbe
pushf
add
adc
cmp
mov
sti
pusha
mov
gs
pop
ret
mov
pop
xchg
jmp
mov
add
int3
pop
xor
pop
fnstenv
push
dec
cld
aad
mov
xor
sub
xchg
ss
mov
jb
mov
outsb
int
aad
popf
or
dec
stos
out
cmp
ds
lods
loopne
mov
mov
sub
data16
fcmovne
push
jnp
cmp
pop
sub
ror
xchg
insl
loopne
lret
jbe
insb
xchg
mov
idivl
test
sbbb
and
mov
fdivr
addr16
sub
lods
inc
push
sub
mov
xor
inc
pop
push
data16
pusha
fs
mov
cwtl
adc
inc
mov
mov
and
arpl
rcr
movsl
jb
push
inc
jae
rorl
cmp
inc
dec
mov
into
stos
jg
rorb
cld
xor
mov
sub
mov
sbb
pop
call
add
incb
movsb
loope
sbb
lock
in
jb
fwait
lods
fiadds
loope
int3
jg
aaa
movsl
mov
pop
ds
xor
in
pop
fisubl
and
cld
push
sbb
cld
outsl
pop
push
scas
xor
shrl
ljmp
adc
xor
jb
sub
cmpsl
mov
or
mov
jle
sub
jo
mov
pop
and
xor
nop
sub
stos
mov
sub
cmp
mov
jle
lds
lret
or
push
mull
and
sbb
pop
int
xor
or
out
mov
xor
or
iret
pusha
addr16
jne
js
scas
mov
lcall
iret
lock
lahf
xorb
jno
hlt
sub
cmpsl
cmc
pop
cmp
xchg
popf
lea
and
and
lret
adc
cmp
div
rorl
mov
dec
mov
dec
xchg
push
outsb
xchg
xchg
or
adc
test
push
push
ret
pushl
jecxz
jne
mov
in
push
loope
jle
push
out
out
es
jecxz
imul
mov
inc
movsb
fucomip
xchg
fidivrl
or
xchg
rolb
mov
sti
fcomip
jecxz
cmp
cli
in
sbb
mov
jbe
int3
add
repnz
aas
jmp
sub
sbb
cmc
sbbl
jmp
pushf
js
dec
pop
incb
or
push
and
jmp
mov
in
inc
stos
pop
es
sbb
emms
sbb
rcrl
test
test
pop
out
dec
xor
pop
in
into
jae
ret
pop
or
mov
hlt
dec
and
xor
add
sbb
cld
mov
cmp
cwtl
jp
xchg
mov
insl
mov
push
ljmp
stos
xchg
pop
arpl
and
adc
rclb
push
jbe
leave
jbe
mov
inc
adc
fs
adc
jp
cld
xchg
pop
jge
xchg
pop
outsl
mov
xor
flds
xor
and
lret
jnp
adc
inc
nop
rorl
aam
in
icebp
js
mov
sub
sbb
xchg
and
jb
test
hlt
adc
jecxz
pop
adc
outsl
xor
xchg
mov
ret
push
fisubl
cwtl
jp
mov
push
jns
repnz
sbb
sti
decb
outsb
jne
cmpsb
divl
add
pusha
lds
insl
push
cmp
test
jb
and
cld
or
test
fists
mov
mov
loopne
and
stos
pop
leave
cwtl
ds
or
divb
inc
inc
ljmp
cmovne
mov
in
popf
rclb
mov
jo
orl
in
gs
add
mov
adc
lea
popf
adcl
xlat
sti
rorb
adc
cmc
cmp
push
pop
mov
pop
clc
test
sahf
call
add
dec
aam
cs
out
add
xor
cs
stos
test
dec
movsb
subl
insl
push
fdivl
xchg
push
movsl
and
jo
hlt
mov
cmc
mov
lock
cmp
add
mov
aam
and
jnp
fsubrp
xchg
ror
sub
repz
sub
jno
mov
cmp
cld
cmp
orps
cmc
sub
xchg
fwait
sbb
mov
lock
push
cs
aad
out
mov
ret
subl
aaa
push
dec
xchg
fcmovnu
movsb
std
add
push
and
lcall
cwtl
mov
push
jbe
add
add
pop
loope
ret
ret
sbb
or
inc
ss
in
les
negl
xor
mov
inc
fdivl
mov
cmp
jge
mov
jle
out
xchg
adc
dec
mov
mov
jnp
adc
jae
scas
inc
fbstp
jle
addr16
add
xchg
add
xchg
dec
rol
xchg
jecxz
adc
ret
mov
lahf
push
icebp
sbb
xchg
mov
cs
xchg
out
pop
add
test
les
js
dec
sbb
insl
sub
pop
adc
sbb
xor
add
xor
or
loopne
jle
aam
ljmp
and
dec
repnz
imul
mov
push
mov
and
popf
jp
mov
nop
dec
sbb
loope
aam
mov
sbb
aas
sbb
push
pop
or
lret
stc
xor
mov
mov
sub
aad
rolb
js
sbb
call
sub
adc
pusha
in
lret
data16
test
add
inc
add
pop
push
ror
or
jbe
adc
out
xor
inc
test
mov
ja
clc
sub
xchg
mov
lcall
fwait
in
gs
in
mov
nop
add
insb
lret
and
popf
stos
push
and
stos
cmp
cmc
out
pop
lods
mov
cmp
pop
psubusw
and
jo
rolb
stos
ljmp
cmp
in
in
push
sbb
aad
jge
inc
push
inc
cmp
mov
mov
pop
mov
pop
push
popa
add
int3
rolb
iret
inc
cmpsl
int3
cmp
inc
testb
das
test
and
lret
jo
cmp
and
xor
inc
std
rorl
push
xchg
clc
mov
or
inc
scas
push
mov
inc
fiadds
leave
shrb
add
sti
ret
call
stos
dec
adc
pop
das
movl
stos
cld
jecxz
sub
mov
fadds
xor
fidivrl
test
int3
ret
outsb
jmp
adc
xor
fs
or
inc
inc
cli
ret
insb
shl
fildll
push
or
cli
mov
ret
inc
jbe
and
fcomip
insb
add
test
leave
in
jnp
insl
mov
xchg
or
stc
pop
stc
pop
clc
subb
push
cmp
sub
es
push
in
insb
ret
call
or
ret
pop
es
jae
and
push
jge
fwait
and
pop
jmp
pop
cmp
mov
xchg
cmp
imul
add
sbb
jmp
push
add
jl
mov
arpl
mov
lods
cmp
dec
mov
aam
push
jg
mov
mov
push
inc
jnp
jbe,pt
xchg
enter
add
imul
xor
ret
push
stc
push
test
mov
scas
hlt
xchg
mov
ficoml
iret
push
xchg
xchg
sub
test
gs
mov
repz
insl
push
test
es
scas
sub
je
fcoms
loop
xlat
out
push
inc
ret
cmc
loope
insb
fs
adc
sub
shrl
xchg
inc
arpl
mov
and
sahf
cwtl
pusha
and
mov
xchg
test
cmp
ret
andl
xor
aam
cmp
jno
and
out
adc
nop
cwtl
inc
push
pop
sbb
xor
aaa
lret
test
pop
mov
inc
rep
cmpsl
sbb
divl
or
pop
push
mov
int
mov
mov
mov
imul
mov
repnz
loop
pop
gs
mov
add
adc
ds
aad
push
insb
push
adc
mov
ret
or
mov
pop
cmp
pop
imul
cmp
sub
imul
sub
imul
clc
inc
cld
test
mov
int
lcall
ljmp
dec
inc
inc
inc
out
xchg
jb
insb
sub
jl
jnp
out
insl
inc
or
mov
out
subl
fwait
and
jmp
shll
test
or
xchg
repnz
in
and
out
sbbl
mov
push
sub
andl
leave
ficoms
arpl
std
in
mov
jae
sbb
inc
es
mov
leave
sbb
xchg
mov
sub
icebp
les
hlt
mov
xor
fs
or
sbb
add
dec
cmp
hlt
mov
fs
mov
mov
push
sub
lret
outsl
mov
or
inc
mov
xchg
cmpl
mov
lods
dec
cwtl
jne
xlat
mov
mov
cmp
sub
adc
mov
xchg
and
enter
push
cld
js
insb
xor
enter
faddl
aas
jmp
in
sub
cli
adc
js
or
jmp
fcompl
cmp
cmc
negl
xchg
jb
ljmp
jne
sub
push
loopne
movsb
jno
cmpsb
sbb
xor
add
mov
pop
mulb
jp
fcomip
xchg
cmp
aad
mov
push
inc
cltd
bound
mov
jne
jns
loope
icebp
pop
ljmp
sbb
or
inc
cmp
insb
int3
jb
cltd
jmp
mov
add
push
arpl
adc
insl
mov
sti
xchg
sub
outsb
pop
dec
push
test
jmp
aas
inc
dec
add
outsb
xchg
cmpb
dec
cmp
test
and
sbb
cmp
push
sub
out
ficoml
rorb
fadds
ljmp
dec
jbe
gs
jae,pt
imul
dec
mov
aaa
xchg
adc
push
loop
push
test
xor
imul
mov
jmp
dec
xchg
sbb
stc
out
inc
jle
sub
scas
dec
jno
sbb
add
inc
dec
cmp
xchg
cmpl
push
and
pop
jg
pop
mov
stc
mov
jp
scas
leave
in
jo
divb
xor
ficoms
shlb
mov
xchg
mov
cld
jno
push
pop
inc
leave
mov
fld
inc
dec
mov
jp
cmc
sub
cmpsb
dec
sub
les
addl
leave
pushf
push
push
pop
mov
inc
ja
add
push
sbb
mov
push
daa
mov
adc
inc
cmp
movsl
std
cmp
lea
and
int
push
aas
adc
ds
aam
addb
into
cltd
mov
ret
daa
mov
or
mov
stos
and
cmp
test
pop
sbb
mov
xchg
sub
jbe
adc
mov
xchg
sub
pop
popf
mov
fwait
out
enter
adc
mov
js
fwait
jle
cmpsb
dec
pop
xchg
lods
push
into
mov
movsl
shrd
out
or
jecxz
xchg
das
leave
fs
pop
mov
lock
pop
je
sub
out
inc
jmp
adc
mov
pop
mov
bound
or
ret
inc
jns
push
xchg
sub
std
sub
mov
cmpsl
mov
mov
fwait
jno
xchg
sbb
mov
out
outsl
inc
movsb
jbe
mov
xchg
xor
dec
jae
and
cmp
sbb
repnz
sub
add
out
shll
cmp
sbb
xchg
sbb
dec
stos
fwait
push
popa
push
nop
loop
xchg
add
push
adc
repnz
shlb
int3
dec
loop
push
subl
cs
jns
pop
pop
sti
fildll
cmp
or
xlat
test
cmc
mov
mov
jns
jge
mov
repz
jmp
lcall
stos
scas
bound
adc
icebp
and
sar
pop
mov
sbb
xor
rcll
mov
and
aaa
jmp
xor
pop
mov
xchg
dec
int3
cwtl
mov
xchg
adc
in
mov
or
sti
mov
dec
add
inc
pop
jp
outsb
lock
push
jns
pop
adc
push
sbb
shrl
cvtpi2ps
out
in
pop
mov
mov
sbb
cmp
push
jmp
xchg
ja
imul
rorl
or
pop
push
mov
fs
mov
inc
call
repz
movsb
pop
popf
jg
or
lret
cmp
inc
addb
sbb
mov
in
ret
xor
imul
inc
int
and
or
out
mov
data16
call
decl
rol
imul
loop
fdivs
sahf
sub
jl
in
imul
imul
adc
xchg
mov
cmp
dec
movsb
jmp
jo
les
outsb
dec
stos
jle
test
movl
les
jg
pop
rcll
dec
xchg
fisubrs
pop
and
inc
dec
mov
das
mov
xor
xchg
movsb
bound
sbb
out
lcall
pop
aam
pop
scas
dec
repnz
arpl
mov
jg
data16
loopne
test
push
push
jp
nop
movsb
jle
sbb
jle
loop
addr16
les
adc
cmc
push
mov
rorb
jge
mov
and
mov
mov
or
aas
fidivl
inc
xor
adc
sbb
sbb
cmp
mov
xor
xor
adc
xchg
mov
xchg
std
daa
shr
shll
js
movsb
push
jmp
out
kmovw
les
inc
rcl
sub
push
cli
mov
adc
jne
pop
sub
pop
shl
jbe
inc
push
mov
mov
jg
push
imull
pop
adc
sbb
je
or
mov
cmpsb
test
js
mov
pushf
mov
inc
fisubrl
cmp
jge
nop
lret
or
dec
jle
add
outsb
dec
aas
out
subb
adc
lock
push
mov
push
xor
sub
jp
push
pop
push
mov
outsb
movb
popf
cli
test
loopne
xchg
mov
ftst
cs
f2xm1
sbb
insb
pop
xor
and
popa
lcall
pop
loope
jno
sbb
sbb
fcompl
rcll
adc
mov
sbb
pop
fildll
imull
iret
pop
les
dec
mov
dec
dec
repnz
outsb
in
or
or
ret
roll
sbbl
sbb
inc
add
popa
shlb
jo
mov
ret
jle
negl
decl
insb
sub
jp
rcll
divb
mov
inc
pop
enter
mov
das
or
fwait
cmp
cmc
das
call
add
dec
cmc
lcall
mov
call
lret
cwtl
inc
loopne
nop
imul
cmp
dec
xorl
nop
jp
fildl
push
dec
sbb
sbb
fcmovb
pop
lahf
mov
testl
jo
incl
shrl
popa
popf
and
push
mov
pop
xchg
pop
inc
xor
das
sbb
lods
inc
out
push
stc
lret
shll
push
sbb
repnz
stos
or
add
repz
pusha
push
and
test
add
pusha
ss
bound
adc
xchg
inc
or
pop
lea
lea
orb
out
pushf
cltd
sub
sub
lock
shlb
fistl
inc
sbb
leave
cmp
dec
repz
cmp
lahf
xchg
push
jb
add
xchg
sti
lds
inc
lock
xor
push
addr16
pop
arpl
aas
jge
cmpsl
subl
rorl
fstps
andb
outsb
int
leave
mov
dec
mov
cmp
xlat
int
mov
jmp
sahf
loope
mov
addr16
mov
cmp
out
mov
cmovo
insb
push
lods
ljmp
cld
outsb
mov
xor
pop
sbb
jg
jnp
cmp
popa
mov
cltd
jns
repz
insl
cld
mov
stc
jg
lahf
push
pusha
mov
jl
sub
insb
mov
icebp
xor
je
loopne
jecxz
add
daa
push
fcmovnu
sbb
jb
mov
imulb
xor
sbb
outsb
xlat
out
mov
cmp
cmp
jg
in
repz
push
call
into
in
push
fcmovnu
in
mov
jmp
jg
sbb
lds
stos
lods
mov
or
dec
inc
es
test
push
push
ds
mov
cltd
popa
fcmovnbe
mov
call
es
insl
sbb
in
mov
or
insb
jg
mov
pop
les
ds
leave
loopne
out
cmpsl
xchg
in
in
sbb
ja
xor
aam
test
jmp
lods
lret
lcall
or
ljmp
push
dec
loop
jb
mov
pop
inc
xor
pushf
sbb
scas
xorb
jg
lahf
xor
push
dec
xchg
inc
inc
int3
cmp
ds
mov
stos
xchg
inc
jo
flds
or
enter
mov
fucomp
pusha
scas
loop
ret
out
dec
fsub
ficompl
jbe
ja
cmp
mov
and
cmp
inc
add
orl
push
sub
test
enter
stos
stos
mov
push
pop
dec
push
fidivrs
loope
int
insb
shlb
pop
lods
out
push
fadds
xor
sub
mov
and
adc
jp
jl
sbb
dec
jl
xchg
mov
stos
sbb
mov
jge
imul
and
mov
xor
jns
loope
rolb
push
rcrb
mov
std
jl
jl
mov
dec
in
sti
lods
sbb
clc
xchg
push
mov
and
loopne
fstpt
push
jae
jae
adc
cmp
cli
dec
aam
into
fisttps
out
fnsave
cmpb
popa
idivb
add
cmp
sub
or
shlb
push
rcll
lret
dec
push
sbb
inc
fcmovb
jnp
add
mov
inc
ret
pop
orl
scas
pop
std
in
and
not
test
test
mov
pop
jnp
ffree
mov
inc
mov
test
mov
in
insl
lcall
pop
fisubrs
cmp
mov
dec
cmc
mov
sbb
inc
xlat
stos
arpl
mov
jo
pop
jae
sub
in
pop
cwtl
jge
mov
xchg
cmp
adc
sub
pop
mov
dec
cmpsb
fdivrl
push
lods
lock
test
mov
in
add
fdivrs
cmp
fistpl
into
popa
inc
adc
push
movsb
out
fists
lret
rclb
mov
or
and
push
scas
in
jmp
clc
cmpsb
enter
cs
imul
and
shrl
push
xor
pop
push
pop
movsl
push
xor
dec
adc
ret
mov
bound
dec
cmpsl
gs
fwait
add
add
inc
or
xor
frstor
cmpsb
xor
lds
mov
sbb
call
dec
loope
je
jns
mov
cmp
ror
outsb
lods
lret
mov
cwtl
sub
xchg
fs
mov
pushw
stos
cmp
stos
mov
push
add
sbb
test
dec
jno
adc
or
lods
gs
mov
mov
mov
jg
mov
or
inc
xor
fsubs
popf
inc
jne
pusha
xchg
mov
push
fcomps
xor
mov
xor
mov
out
iret
jb
popf
xchg
sbb
int3
jecxz
xorb
sti
int3
shlb
mov
push
loopne
popf
sub
add
push
mov
sbb
sub
xchg
mov
jbe
outsb
push
cmpsl
fists
sti
xor
sbb
add
idiv
inc
pop
sbb
push
rcrb
fsubrs
and
cmp
js
mov
fbstp
iret
arpl
sub
ret
rcrl
dec
pusha
lcall
push
xchg
pop
adc
pop
je
mov
mov
sahf
push
les
js
jge
mov
pop
out
fdivr
not
jge
lods
mov
and
pop
popa
inc
into
pop
mov
fidivrl
mov
cmp
rolb
aaa
inc
cmc
pop
mov
jg
lods
rol
mov
mov
cmc
adc
add
shl
mov
std
cs
mov
mov
mov
push
popa
in
and
imul
jl
sub
jp
cld
aad
cmp
cmp
daa
stc
inc
sub
jecxz
cmp
pusha
pop
enter
cli
mov
mov
adc
push
jno
mov
shrl
aam
les
adc
inc
mov
shl
dec
dec
xchg
mov
hlt
popa
mov
fmull
rcrl
mov
call
mov
adc
lds
enter
pop
push
xor
daa
lods
fisubs
sbb
adc
sub
mov
cmp
out
inc
mov
loop
mov
mov
in
mov
enter
frndint
mov
xor
das
dec
jns
jg
jl
lret
mov
add
pop
adc
insb
repnz
loop
rclb
and
je
jg
add
push
jmp
xlat
sarl
sbb
lds
adc
mov
cmp
mov
pop
test
clc
repnz
add
add
imul
pop
xor
mov
ret
push
mulb
ret
gs
jecxz
subb
sbb
test
out
bnd
andb
out
inc
lods
mov
dec
clc
mov
dec
sbb
mov
mov
mov
add
xor
dec
mov
adc
sbb
aam
sahf
sbb
jno
inc
dec
in
addl
xor
xor
loop
insb
data16
cmp
mov
int3
and
movsl
xor
or
dec
jle
bound
loopne
or
cmc
or
mov
cmc
ljmp
mov
fs
into
jmp
xchg
sbb
adc
repz
and
test
cs
aas
or
dec
adc
test
cs
lret
push
ljmp
shrl
dec
lahf
jge
ret
repnz
or
push
dec
dec
gs
cmp
cmpsb
or
lret
jle
mov
jp
dec
jnp
inc
test
fsubs
push
mov
mov
mov
inc
sahf
flds
test
mov
xor
fs
adc
js
mov
int
push
cld
sub
add
lock
dec
mov
fcoms
pop
popa
xor
dec
or
cwtl
xchg
or
push
ljmp
push
jbe
xor
rolb
out
jno
test
std
xchg
jo
ret
pop
xor
push
cmp
dec
xchg
mov
xchg
adc
jbe
sub
add
mov
mov
pop
js
push
iret
jnp
test
push
mov
fsts
adc
jb
aam
push
enter
mov
jne
pop
mov
mov
inc
dec
enter
fisubs
mov
jo
mov
xorb
cmp
lcall
rcl
fistpl
inc
mov
scas
pushf
dec
pop
pop
lcall
mov
shll
sbbb
out
inc
sub
inc
fiadds
rcrb
sub
lods
jne
add
out
loop
icebp
mov
mov
loop
lds
inc
sahf
push
xchg
arpl
daa
mov
mov
hlt
test
ljmp
pop
cltd
pop
mov
fsubl
push
hlt
aam
scas
dec
sub
and
int3
mov
lock
movsl
popa
cmc
dec
xor
adc
ds
mov
jmp
mov
insb
out
pop
sbb
add
xchg
xor
adc
lret
mov
fsub
cltd
pop
dec
rolb
or
mov
pusha
dec
dec
movsl
add
and
adc
test
inc
fnsave
stos
mov
scas
sub
call
outsb
xchg
and
fwait
push
xor
test
pushf
clc
sbb
sub
adc
mov
xor
jne
scas
inc
scas
adc
movsb
rcrl
adc
or
out
jae
dec
test
xchg
jb
pop
pop
aam
push
repz
push
mov
jl
std
cli
cld
mov
push
mov
mov
jns
loopne
repnz
rorl
insb
sbbb
jo
sbb
fldl2t
sub
sub
jns
icebp
sbb
mov
mov
adc
pop
sbb
cmpsb
lcall
mov
xchg
cmp
insb
out
cs
test
scas
fidivs
xor
out
mov
push
mov
inc
das
cmp
loopne
popf
sbb
ljmp
xchg
pop
push
jb
loope
in
push
aas
aaa
call
pop
lods
daa
mov
scas
and
xorl
mov
adc
adc
push
xchg
sti
fbstp
pop
adc
aas
clc
add
leave
scas
enter
stos
push
mov
repnz
xchg
movsb
xor
clc
bound
hlt
push
mov
dec
add
fucom
subl
xchg
cmp
ja
cli
pop
popf
leave
fbld
bound
xchg
push
out
jb
push
out
inc
pop
popf
into
lock
dec
jle
and
insl
or
xchg
inc
or
and
ds
mov
aad
stc
int3
in
sub
sarl
sub
cltd
pop
pop
dec
push
stc
ds
adc
inc
shll
sti
sbb
jo
dec
or
out
sub
js
inc
daa
add
test
je
mov
xchg
jp
mov
push
jne
mov
movsb
jno
xchg
js
dec
and
shrb
or
loope
sbb
cmp
fadd
cs
push
ss
scas
xor
dec
insb
roll
cwtl
shlb
scas
popa
cmp
ss
jg
cmp
mov
sbb
xlat
adc
enter
mov
dec
loope
shl
aam
inc
clc
jmp
mov
test
add
dec
add
stc
mov
cmc
or
xchg
lahf
adc
mov
pop
mov
jo
cmc
movsl
gs
sbb
dec
adc
daa
pop
mov
cli
xchg
lock
outsl
mov
rcrl
aam
and
rorl
mov
inc
fisttpll
inc
outsl
add
repnz
stos
in
maskmovq
idivl
outsl
inc
cmp
mov
loop
xor
ds
cmp
gs
mov
mov
into
mov
lods
fxch
lea
lds
out
push
and
faddl
cmp
cmpsb
inc
mov
shlb
mov
dec
fistl
movsl
lahf
pop
cmp
mov
adc
out
movsb
cmpsb
mov
adc
jg
pop
dec
inc
repnz
sbb
sub
lret
push
popa
sub
push
dec
ja
adc
inc
xor
jl
ret
aas
xchg
mov
jbe
or
lcall
mov
sbb
adc
cmp
sub
cmc
or
jge
sbb
daa
sbb
lret
inc
inc
sti
imul
in
jge
lock
mov
push
push
inc
aam
sahf
aam
inc
loop
lea
ds
dec
mov
rorl
popf
js
lock
jg
mov
in
jge
adc
das
insb
repz
xchg
lock
repnz
sub
dec
lods
or
fwait
lods
mov
push
mov
cmpsl
push
or
jl
popa
mov
or
pop
and
cmp
push
adc
fisubs
and
push
out
mull
roll
ret
pop
outsl
sub
shlb
clc
cmp
mov
jmp
and
push
xchg
cwtl
jae
nop
in
xchg
push
cltd
std
mov
mov
jb
mov
xor
pop
xor
cmpsl
test
pop
test
and
arpl
pusha
sbb
and
adc
orl
test
popa
push
cltd
jle
lock
lock
cwtl
xchg
dec
adc
sarl
xchg
test
lds
iret
inc
orl
inc
iret
inc
pop
xchg
jg
std
out
push
notl
add
rolb
mov
std
lret
out
pop
lds
push
test
pop
in
fildl
or
pop
popa
cltd
in
adc
loopne
scas
cmpsb
inc
and
outsb
lahf
jp
fstpl
cs
aas
daa
and
mull
push
push
add
pop
sub
mov
push
add
adc
cmpsb
cltd
lods
adc
push
mov
mov
lret
ss
movl
rcrl
mov
push
mov
testl
fsubrs
daa
pop
pop
adc
pusha
cmp
xchg
popf
sub
push
jmp
out
loop
jl
lds
mov
movsb
push
mov
cmp
xchg
and
cmp
test
test
icebp
push
lds
add
lcall
mov
mov
or
mov
dec
data16
xchg
and
jle
adc
mov
notb
mov
xor
mov
jo
xchg
in
out
pop
push
and
popf
cltd
clc
int
inc
in
and
rorl
inc
aad
je
mov
mov
push
outsl
lahf
jae
xchg
xchg
stc
imul
js
imul
icebp
cmpsb
scas
pop
mov
cmp
imulb
xchg
sub
mov
pop
insb
std
iret
fstpt
scas
int3
outsl
ret
mov
xchg
pop
sbb
sbb
sbbl
lahf
push
inc
xor
or
fs
inc
push
out
int
or
call
jnp
mov
cmp
push
dec
mov
xor
shl
xor
shrl
dec
dec
or
test
pop
fwait
test
adc
or
aad
pop
fs
inc
insl
js
inc
xor
mov
fidivrl
mov
outsl
and
sbb
push
lea
fstl
int3
mov
cmp
xchg
adc
iret
in
xor
out
push
push
jnp,pn
pop
rorb
or
dec
scas
adc
mov
sub
lret
add
xchg
insb
in
jmp
shr
push
outsb
push
int
mov
cmpsb
or
nop
push
ljmp
or
ljmp
popf
and
push
call
lds
cmc
out
popa
dec
rorb
xor
xlat
jge
xchg
fs
outsl
jo
mov
push
imul
fstp
rcll
pop
mov
xchg
xchg
addr16
iret
clc
shlb
mov
lods
or
jle
cmp
jl
sub
mov
xchg
enter
ret
jnp
add
fisubl
aas
sub
mov
movsb
out
cli
pop
pop
fwait
dec
mov
out
mov
icebp
addr16
ret
push
or
out
or
xchg
loope
push
loop
adc
mov
xlat
cmp
adc
inc
xchg
and
rcll
cmp
cmpl
sbb
mov
shlb
xchg
jl
adc
or
repnz
dec
or
scas
xchg
cmp
cmpsb
xor
push
in
mov
sbb
andl
cli
xchg
cwtl
sub
aaa
mov
leave
xchg
cli
cmpsl
pop
xchg
inc
and
xlat
pop
adc
scas
insl
out
leave
rorl
cmpsl
jo
mov
test
mov
orl
std
lret
or
adc
pop
cmp
jge
outsl
cmp
dec
and
inc
test
jnp
adc
mov
mov
dec
cmp
inc
mov
not
or
popa
imul
cmp
fwait
cltd
or
repnz
jbe
test
cli
xchg
xor
loope
lods
sbb
pop
out
sahf
rorl
aam
sbb
clc
test
lea
stos
mov
mov
shll
jb
inc
loope
sub
push
mov
push
and
xchg
cli
sub
out
sub
test
mov
sub
mov
xor
xchg
jp
jae
inc
outsl
or
cmc
xchg
mov
jae
insl
pushw
inc
aam
cmc
popa
fcompp
pop
neg
push
add
jg
jle
gs
ret
cmp
ficompl
hlt
popa
rorb
cmp
mov
dec
push
add
inc
jmp
pop
push
es
insl
or
in
or
sbb
test
sub
imul
pop
xchg
ds
add
and
cli
cmp
loopne
xchg
adc
inc
xor
repnz
loopne
sti
add
pop
imul
insb
add
adc
testl
push
lret
mov
es
daa
jo
ret
mov
sbb
in
or
aaa
jecxz
lret
and
rclb
jb
fwait
jns
sbb
fnstenv
push
cmp
mov
mov
movsb
or
imul
daa
mov
jmp
push
pop
and
jl
xchg
lock
enter
dec
lock
fbld
lcall
jmp
gs
xchg
loope
shll
es
arpl
and
int
jecxz
or
add
sbb
test
add
inc
out
cmp
mov
jmp
mov
mov
lret
inc
je
aad
adc
push
cld
mov
dec
rorl
sbb
stc
inc
cld
imul
imul
test
lds
pop
pop
and
xor
mov
jmp
adc
je
enter
inc
push
xor
lods
movsl
outsl
mov
call
mov
movsb
pop
mov
rclb
inc
add
mov
bound
mov
dec
sub
subb
dec
xchg
out
test
mov
insb
xchg
aad
jb
or
imul
push
jne
sbb
movsb
mov
sbb
xor
mov
mov
xchg
xchg
jbe
mov
fld
outsb
or
add
push
pop
pop
cmpsl
pop
mov
data16
or
roll
stc
add
cmp
push
and
pop
shl
je
lock
ret
out
xchg
out
jae
xchg
out
sub
inc
int
test
sub
flds
xchg
sub
dec
adc
movsl
std
lods
es
nop
adc
les
out
insl
cwtl
xorl
ret
or
cmp
mov
mov
std
cltd
jp
or
mov
jg
xchg
mov
hlt
push
jb
mov
push
xor
push
fs
arpl
ja
adc
inc
icebp
bound
fmul
outsb
inc
mov
jno
pop
sarb
and
int3
mov
inc
in
lahf
fs
and
arpl
sub
ret
and
cmp
clc
jnp
iret
fldl
movsl
out
push
xchg
ror
adc
sbb
jge
pop
jl
cmp
aaa
stos
test
dec
or
imul
jge
mov
insl
ja
xor
sbb
sub
data16
lahf
inc
xchg
test
adc
test
ljmp
into
jecxz
and
inc
mov
imul
jge
fisttpl
test
sahf
add
insb
in
push
xor
xchg
lahf
jecxz
fwait
lods
dec
lret
mov
popf
outsl
fidivrs
iret
and
inc
pop
imul
in
into
arpl
stos
bound
ret
mov
pop
and
fbstp
ljmp
imul
std
icebp
ds
mov
into
lcall
dec
addr16
inc
xlat
sti
dec
sub
or
push
dec
cmpsl
bound
inc
dec
cmp
pop
cli
popa
add
leave
mov
dec
mov
xor
mov
mov
pop
repnz
xorl
jae
andb
into
sahf
mov
sbb
inc
pop
js
jmp
cmp
sbb
push
sub
mov
sarb
adc
or
sbb
inc
jg
nop
mov
enter
fwait
mov
jo
jbe
aam
push
in
jle
adc
hlt
sahf
mov
lret
mull
mov
jo
test
notb
lds
jae
cmp
popa
mov
add
and
jmp
jnp
popa
loope
mov
outsl
sub
bswap
cmp
repnz
xchg
imul
adc
fdivrl
and
pop
adc
mov
fwait
pop
fisubrs
and
cs
in
sarb
iret
das
mov
push
imul
fwait
mov
aad
fldl
sbb
leave
pop
cmp
fucomi
out
loopne
js
and
leave
icebp
mov
cmc
adc
xchg
adc
mov
jae
mov
mov
xor
cmc
fsubs
scas
fs
pop
xlat
les
jns
cmp
sbb
aas
mov
nop
add
dec
push
scas
sub
jnp
cmp
xchg
adc
cmp
cmp
scas
nop
mov
stc
push
jne
pop
inc
sub
jo
push
call
fstl
in
mov
sbb
xchg
xor
sbb
push
adc
mov
pusha
stos
xor
ds
fsts
xor
repnz
lahf
fadd
add
mov
aas
cmp
xor
and
sbb
mov
mov
out
xchg
daa
jecxz
loopne
mov
fdivrp
rcrb
pop
inc
test
mov
or
add
pop
ret
xor
pop
stos
imul
scas
daa
or
cmp
jp
cmpsb
mov
push
mov
lea
cmp
lods
push
xor
ret
inc
sub
and
cmp
sarb
std
or
outsl
xor
addl
int
xchg
lods
decl
jmp
sbb
cmp
sub
cs
mov
test
push
icebp
daa
cmpsl
xchg
push
pop
mov
push
adc
test
and
mov
scas
mov
jns
or
ljmp
mov
xor
fidivl
arpl
dec
xchg
call
lds
popa
lahf
inc
add
cmpsl
push
cmp
movsl
jle
pop
sub
loop
xchg
sbb
fcmovu
fwait
mov
xlat
mov
in
test
test
fmul
ja
in
lcall
ljmp
jge
dec
add
xchg
popf
shll
cs
mov
inc
sub
inc
or
xorps
lods
bnd
in
add
mov
push
or
lods
imul
add
inc
push
push
cmp
mov
das
sbb
cmp
push
imul
push
lret
fldt
mov
and
lods
adcb
jp
mov
shlb
mov
fdivs
cs
out
fimull
test
mov
mov
sbb
clc
cmpsl
and
mov
dec
push
add
ds
stos
cltd
push
xlat
xchg
call
xor
inc
mov
inc
jae
in
cmpsb
xchg
call
sbb
cmpsb
in
int3
mov
insb
jno
lods
adc
add
mov
cs
jnp
js
push
xlat
push
cmp
pop
push
mov
inc
out
rcr
je
mov
js
or
mov
movsb
pop
test
inc
pushf
mov
and
cmp
mov
dec
mov
sbb
mov
out
add
sbb
int
fisttpl
aad
or
test
dec
js
mov
lret
aaa
push
push
cltd
ficomps
and
inc
fldl
daa
lret
ss
jo
or
fidivl
mov
pop
mov
shl
xor
mov
fcom
rclb
shll
adc
fsubr
test
mov
das
daa
mov
jge
insl
outsb
dec
mov
xor
mov
jae
shrl
mov
in
clc
push
jmp
lock
jns
pop
test
jmp
cmc
jns
mov
lret
stos
int3
jno
jo
stos
push
fcomps
xchg
push
cld
cld
sbb
nop
or
into
ficoml
sub
mov
mov
mov
stc
aaa
repz
cwtl
rclb
insl
inc
dec
sbb
pop
mov
addb
xchg
jmp
sub
cli
jo
jmp
lods
cld
hlt
hlt
cmpsb
stc
lret
cmp
inc
cld
stos
sti
dec
adc
les
add
sbb
or
sub
jne
dec
add
push
pop
out
and
and
notl
sbb
mov
mov
jns
stc
mov
jne
or
scas
dec
lret
dec
xlat
jb
loopne
dec
inc
mov
cmp
or
mov
lea
scas
or
shll
sbb
dec
ds
shll
mov
xor
mov
cmp
mov
nop
insb
out
das
lds
mov
and
loopne
outsl
cmp
movsb
xchg
jo
jbe
jmp
mov
mov
dec
lret
inc
or
or
fidivs
call
incb
clc
push
outsb
icebp
push
jmp
mov
or
jno
popa
inc
ret
jg
sub
imul
lods
in
xchg
mov
nop
in
adc
mov
out
daa
and
push
aas
mov
mov
fisttps
xchg
pop
xor
inc
nop
lret
inc
jle
fdivrs
jno
mov
rcr
xchg
cmp
js
rol
movsb
icebp
cwtl
nop
addr16
test
xor
and
mov
test
loope
fidivrs
lea
mov
ljmp
ss
dec
add
cltd
xchg
in
sbb
call
aad
xor
mov
jle
or
xorb
scas
arpl
push
jg
iret
mov
fwait
pop
pop
push
les
jl
mov
and
rol
repnz
call
sbb
ljmp
pop
stos
imul
cmp
outsb
imul
xchg
scas
stos
data16
xor
push
cmpsb
jb
clc
pop
cmp
inc
adc
cmp
push
retw
sbb
sub
jl
dec
or
adc
adc
push
dec
push
sub
rcrl
test
sbb
mov
mov
xchg
mov
cmp
xchg
outsb
mov
enter
adc
jg
scas
mov
pop
fnsave
gs
pusha
xchg
sti
popf
sub
cmp
push
cmpsl
in
jns
mov
insb
mov
jb
js
or
dec
mov
jg
ss
jmp
js
cmp
mov
popf
sub
pop
push
test
addr16
sbb
xlat
repnz
jae
jp
mov
sbb
cli
add
adc
fsubs
and
outsb
lahf
xchg
mov
hlt
mov
dec
clc
xchg
in
add
and
dec
hlt
ffreep
outsl
or
ja
mov
jb
inc
xchg
mov
iret
pop
out
lods
xor
out
adc
jle
pop
clc
add
int3
inc
push
cwtl
movsb
and
add
stos
sub
rolb
dec
int3
push
mov
mov
cwtl
jecxz
add
xlat
dec
push
sub
jle
in
push
mov
cvttps2pi
add
or
xchg
cmp
dec
shl
push
jp
pop
out
adc
in
mov
jbe
inc
imul
push
dec
aad
mov
fwait
sub
sbb
outsl
shlb
je
or
lods
std
add
in
sbb
mov
lods
push
jmp
and
mov
push
lods
pusha
shll
stos
mov
dec
ficompl
daa
nop
xchg
fwait
cwtl
push
gs
xor
out
cmp
or
or
mov
sahf
inc
call
loope
xchg
cltd
jle
jo
out
cmpsl
imul
out
fptan
adc
sub
jbe
lock
js
jno
xlat
fnstsw
jo
in
jmp
push
lock
js
or
xchg
jbe
jp
push
enter
out
dec
push
movsb
jp
test
xor
repz
insb
pop
adc
mov
lds
add
inc
inc
jae
xchg
adc
mov
out
orl
xor
push
jmp
lret
dec
jns
sbb
jo
push
sbb
push
sbb
dec
sub
mov
out
dec
inc
or
adc
out
std
jne
push
shlb
jmp
dec
mov
mov
and
rcrb
pop
push
sbb
scas
adc
cmpsl
fsubl
dec
in
mov
push
adc
repz
mov
lret
dec
cs
shlb
push
jno
movsl
popf
fs
push
sub
dec
jp
cmpsb
dec
or
jno
pop
mov
pop
jle
sbb
imull
jmp
adc
pop
or
fwait
and
ja
mov
adc
cli
pop
and
pop
loopne
pop
pop
and
sbb
xor
inc
cld
lods
insl
push
das
das
sbb
jns
je
lods
pop
es
mov
add
aaa
into
jle
sbb
mov
jp
sub
and
cmp
and
sbb
inc
mov
js,pt
popf
ljmp
push
ljmp
mov
mov
xor
ret
or
mov
aam
and
inc
lret
stc
sub
out
xchg
ljmp
addb
jo
stos
sub
add
lods
or
sub
sub
and
notl
call
mov
mov
test
fmull
pop
loop
movsl
dec
lret
pop
mov
jge
sub
testl
popa
ljmp
int
cmp
mov
fmul
in
inc
in
fstps
mov
mov
popf
inc
or
fisubl
dec
inc
cwtl
or
ss
sbb
jmp
dec
mov
cld
xchg
aaa
rorb
sbb
mov
pusha
fwait
or
xchg
loopne
or
pop
push
das
lods
xchg
mov
ljmp
mov
jb
bound
inc
or
adc
jne
push
notb
jge
or
stos
adc
outsl
ds
push
mov
outsl
or
lock
fmull
add
mov
int
aaa
fsubs
push
xor
into
cli
xchg
sub
loop
clc
push
mov
inc
stos
in
cltd
movaps
shlb
push
in
pop
mov
xchg
lock
sbb
fnstenv
dec
mov
pop
xchg
jb
cmp
mov
cmp
adc
dec
repz
pop
dec
jnp
loop
mov
cmpsb
bound
je
cmc
repz
imul
daa
test
inc
pusha
lea
pop
cs
pop
and
std
sbb
and
outsb
call
andl
lock
fs
inc
mov
loopne
xor
xchg
int3
roll
sbb
adc
lret
ljmp
or
and
popa
jno
push
inc
xor
outsl
addr16
jecxz
dec
and
inc
and
popa
add
xchg
push
daa
dec
lret
xchg
push
js
data16
adcb
pop
lods
lods
es
pop
xchg
sbb
sbb
adc
push
xchg
movsl
add
mov
es
mov
pop
dec
sub
jl
or
push
sub
repnz
inc
movsl
or
xor
mov
jge
rcll
pop
push
cmp
and
fs
out
int3
rcrl
pop
lods
push
mov
test
outsl
inc
popf
decb
sub
nop
lock
pop
mov
xor
mov
sbb
jne
icebp
xor
mov
fistps
xchg
sahf
popa
sti
add
addl
sub
std
cmp
jl
adc
inc
outsl
in
or
rep
aad
arpl
pop
nop
js
fwait
aaa
ror
mov
movsb
hlt
enter
push
dec
stos
adc
sub
sub
adc
stos
adc
add
iret
sub
push
mov
dec
icebp
mov
scas
mov
cmp
pop
mov
cmc
pop
cmp
jp
into
jmp
cmp
cmpsl
inc
xor
jo
adc
jmp
mov
sub
test
dec
mov
xchg
pop
push
fisttpl
in
dec
bound
mov
adc
xor
cld
mov
sbb
dec
shlb
pop
adc
add
into
pop
mov
out
data16
sbb
adc
in
xlat
mov
cmc
push
movsb
adc
fldt
pushf
ds
test
mov
mov
inc
jecxz
cltd
insl
dec
jl
jl
sbb
popa
cmpsl
jns
jp
or
into
fldpi
jecxz,pt
pop
cmpsb
push
pop
inc
cld
call
lret
repnz
jb
lods
js
push
leave
ljmp
jo
cli
int3
std
gs
push
xor
aam
roll
into
adc
scas
shl
push
mov
mov
dec
xlat
cli
pop
jnp
out
push
push
cltd
push
stos
sub
mov
xchg
mov
sbb
jno
mov
cmc
add
cmpsl
push
push
in
pop
xchg
test
sbb
insl
add
mov
mov
jecxz
lea
inc
lds
xor
andl
jne
inc
pop
mov
loope
push
cmp
lcall
lea
lahf
iret
ja
jmp
ficompl
and
sub
lcall
call
xchg
arpl
int
loopne
xchg
add
adcl
jle
notb
fnsave
roll
jge
jecxz
xor
jbe
in
into
les
add
stc
rclb
in
bound
lcall
mov
xlat
push
roll
lahf
mov
fisubl
stos
shl
jns
daa
inc
in
xor
clc
mov
mov
lea
rolb
cmpsb
inc
gs
addb
ljmp
mov
xlat
lahf
sub
scas
sysexit
jae
shll
dec
or
pop
adc
movsb
das
sti
push
lods
xor
stc
inc
lods
pop
xchg
push
pop
jbe
and
pushf
and
sub
out
in
or
lds
dec
xchg
add
mov
adc
fisubrs
aas
mov
xor
push
int3
jecxz
cmpsb
rcl
push
xchg
sbbb
dec
adc
out
pop
adc
cmpsb
ffreep
xor
scas
inc
mov
loop
sbb
in
test
adc
cmp
mov
xlat
data16
mov
outsb
int3
ljmp
push
fimuls
pop
fistl
or
mov
sbb
adc
xchg
lcall
adc
mov
cld
test
mov
mov
mov
addb
push
push
rorb
insl
hlt
adc
sahf
adc
and
jp
aaa
jo
mov
jg
xor
shll
loopne
lds
inc
cmp
mov
loopne
out
push
icebp
insb
dec
or
jo
or
sub
outsl
pop
push
pusha
and
imul
jmp
push
leave
push
jecxz
inc
cmp
fisubrs
ds
je
ja
stos
icebp
xor
xchg
fucom
stos
aaa
stos
pop
mov
addr16
pushf
in
scas
push
leave
jmp
pop
int
scas
sbb
ljmp
jb
call
pop
arpl
xchg
pop
pop
lods
and
sub
jbe
mov
push
pop
sbb
or
dec
push
add
push
andb
pop
icebp
push
push
mov
shlb
fcomps
push
rcrb
mov
xchg
dec
mov
ja
sub
xchg
ret
pop
ja
nop
cltd
cmp
jbe
dec
cmp
jecxz
xchg
pop
inc
add
enter
mov
mov
push
xchg
imul
arpl
popf
and
inc
rcl
mov
pop
xchg
in
sbb
push
jecxz
xor
jmp
pop
lahf
pop
lods
jmp
iret
call
cmp
xor
push
cmp
or
mov
jno
mov
push
outsb
push
xor
loop
mov
mov
cmc
test
call
push
loopne
xchg
shlb
outsl
mov
jnp
sti
push
repz
in
lds
or
insl
sbb
mov
dec
ret
inc
inc
lods
push
aaa
or
jb
test
jmp
pop
jge,pt
fcoms
sub
cltd
push
in
ret
dec
jg
movsl
push
mov
dec
pop
sub
xchg
in
fldt
inc
push
mov
jno
pushf
jae
bound
mov
pop
inc
jl
orl
test
rcll
fstpl
mov
popa
mov
in
outsb
jecxz
into
or
stc
call
stc
outsb
mov
jl
jg
jnp
int3
and
jl
pop
adc
test
ljmp
inc
out
femms
and
adc
fidivrs
push
lds
fcmovnu
pop
imul
mov
lahf
push
pop
mov
adcb
jae
ret
xor
adc
mov
fcmove
inc
cs
cmp
imul
jns
and
sbb
mov
cmc
push
inc
push
out
mov
jb
mov
cld
repz
cltd
add
adc
jl
mov
std
inc
outsl
shlb
or
push
sbb
js
xchg
idivl
cmc
gs
mov
sub
addr16
jecxz
mov
jg
jo
sahf
in
dec
add
pushf
das
popa
cwtl
jb
leave
scas
jbe
mov
in
mov
lahf
dec
fimuls
shrl
push
mov
rcr
add
cwtl
xchg
sbb
lcall
dec
pusha
sbb
add
movsb
aaa
jo
push
pop
fisttpl
loope
rolb
mov
cmpsb
insb
lds
repnz
mov
and
cwtl
imul
movsl
inc
jg
push
sub
btrl
cwtl
ds
enter
ret
cmp
stos
and
xor
jge
out
xor
jecxz
lock
stos
mov
mov
sbb
jbe
pop
xchg
jb
out
sbb
test
mov
lods
add
jne
lret
in
repnz
les
push
mov
mov
cmpl
push
mov
xor
xor
outsl
insb
xor
adc
adc
lock
dec
sahf
mov
aam
cmp
add
in
bound
xor
push
cmp
subl
stos
jns
cmp
sbb
cltd
scas
sbb
daa
hlt
insb
imul
lods
pop
mov
test
jmp
inc
arpl
adc
int
mov
adc
push
xchg
mov
dec
push
mov
adc
xchg
mov
sub
and
xchg
adc
cmpsb
shr
mov
leave
out
imul
lods
xor
negb
adc
scas
pop
cmp
int
popa
push
add
ret
adc
mov
pop
cmpsl
aam
cli
loopne
sbb
imul
in
add
leave
cli
mov
dec
aas
pushf
ljmp
lahf
loope
inc
push
sub
cmp
mov
outsl
push
mov
andb
add
outsl
movd
repz
cmpsb
and
pushf
insb
and
xor
mov
mov
pop
mov
dec
mov
xchg
mov
push
pop
and
mov
inc
cmc
mov
in
hlt
sbb
mov
cmp
in
fs
bound
int
insb
ss
std
pop
fnstsw
mov
push
push
out
ljmp
push
xor
cmp
inc
dec
fstpl
cmc
in
fbld
dec
jo
pop
lahf
rclb
icebp
push
in
insl
inc
sar
pop
ljmp
test
sbb
scas
inc
sbb
aaa
inc
pop
and
insb
andl
inc
aam
jl
popf
cld
rclb
add
sub
mov
jno
sarb
mov
repnz
sub
mov
popa
icebp
mov
lret
cmp
pop
bnd
ret
xchg
adc
xorb
sub
test
sti
in
fiadds
test
fcmove
mov
mov
imul
inc
mov
adc
ljmp
lahf
jnp
test
incb
sbb
cld
jle
ss
xchg
push
pop
sub
xor
aam
jnp
fwait
pop
push
sub
imul
js
mov
movsb
or
daa
jnp
sbb
lret
xor
sbb
ja
xchg
dec
sbb
std
lods
fisubl
pop
lret
int3
loop
sbb
xchg
jmp
shll
cwtl
cmp
stc
and
push
movsb
xchg
es
push
cmpsl
xchg
ret
jns
iret
inc
inc
mov
push
nop
cmp
mov
lds
fistpll
pushf
sbb
popf
and
adcl
out
add
pop
or
ss
xor
aam
aad
xor
inc
cmp
jnp
dec
push
and
outsl
pop
test
orl
inc
stos
in
ljmp
cld
mov
js
int
rcr
ficoms
popf
jns
adc
in
dec
inc
mov
fcoms
dec
and
jle
xor
mov
test
cmpsl
imul
pushw
push
in
sahf
push
adc
into
lea
and
and
xlat
fsubrl
mov
in
sbb
add
enter
lret
fiaddl
enter
fimull
cmp
push
xchg
orl
shl
movsb
cmp
or
add
jae
dec
test
xchg
or
or
stos
jb
mov
cmp
mov
aam
mov
xor
jmp
lock
incl
fldenv
iret
orb
or
ret
ret
jle
mov
sbb
cmp
stos
mov
xchg
loop
and
std
dec
push
and
out
xor
lcall
dec
sbb
pusha
mov
push
cld
add
stos
cld
sbb
sti
pop
in
sub
push
inc
add
in
bound
pandn
sub
fistl
enter
jae
inc
jnp
push
lret
fs
push
fidivs
add
in
gs
cmp
mov
cmpsb
or
aaa
xrelease
mov
mov
xchg
in
pop
lret
mov
mov
cltd
push
shrb
stc
jge
pop
xlat
in
mov
jb
jg
mov
sub
testl
fucomp
or
xchg
ljmp
rorl
les
dec
mov
mov
cmp
mov
xchg
add
test
mov
filds
inc
xchg
ret
psubsw
inc
pop
xchg
cmp
push
jmp
pop
mov
insb
push
sbb
jecxz
and
mov
sbb
outsb
jmp
dec
xchg
sbb
out
repnz
lret
push
dec
lds
outsb
subb
ret
out
out
sub
adc
sarl
test
sti
add
std
scas
mov
xor
xrelease
pop
or
insl
movsb
stc
imul
cs
addr16
mov
jmp
pop
andl
pavgw
or
in
sbb
jne
push
mov
xchg
mov
je
notl
and
fidivrl
loop
test
cmp
jbe
jns
xchg
jmp
and
aas
shrb
mov
in
cmpsl
lds
fildl
leave
fnsave
lock
xchg
mov
lods
sbb
push
js
in
jo
ds
cmp
and
call
push
rol
jge
sti
pop
pop
repz
cli
fstpl
iret
inc
push
push
sub
sub
add
and
cmp
insb
mov
scas
pop
jmp
mov
fwait
mov
int
fldt
inc
aad
xchg
icebp
loope
mov
dec
imull
mov
stos
popa
push
popf
mov
pop
inc
leave
or
loop
arpl
lret
sbbl
mov
dec
mov
ljmp
fs
movsl
mov
sarb
cmpsl
popa
into
arpl
inc
or
and
hlt
clc
imul
ret
adc
call
dec
mov
out
addr16
addb
aam
mov
movsl
enter
cmp
push
dec
scas
inc
iret
lods
lods
loopne
pushf
pop
scas
mov
xchg
int3
enter
push
fwait
add
fdivr
push
adc
popf
movq
xor
push
lds
sti
test
cmpsl
push
sbb
dec
and
pop
popa
imul
ss
xchg
in
jnp
pop
repnz
mov
stos
jp
fcomps
mov
sub
repnz
xor
rcrb
repz
imulb
xchg
fwait
sarl
lret
les
mov
pop
imul
sbb
xchg
jmp
mov
mov
fisttpl
push
int
cmp
mov
std
inc
dec
jae
sahf
loopne
xor
enter
jle
xor
cltd
test
dec
lds
jne
scas
sbb
je
push
adc
mov
inc
rclb
scas
add
outsb
call
decl
and
out
das
jle
inc
adc
lock
sub
icebp
jmp
repnz
jge
jno
mov
xchg
out
mov
add
loopne
in
xor
pop
into
in
call
sbbl
leave
stos
loope
jns
pop
mov
subb
jne
lea
mov
clc
in
rcr
xchg
mov
mov
pushf
jae
lret
push
mov
adc
insl
dec
clc
out
in
pop
adc
imul
or
pop
bound
mov
mov
ret
dec
push
sbb
sbb
jnp
sub
call
loope
or
movsl
pop
imul
and
dec
shrl
pop
aas
scas
push
xor
sbb
lds
jnp
add
js
push
pop
sub
into
lcall
or
rorl
cli
adc
push
shrl
out
add
sbb
mov
sub
push
mov
adcl
popf
out
rcrb
jge
mov
sbb
loope
hlt
cmp
lret
shrl
idivl
enter
movsb
aas
sub
icebp
cmovae
push
mov
cltd
jmp
shl
push
icebp
xor
cltd
sti
jl
inc
adc
inc
call
jecxz
sbb
pop
dec
pop
pop
and
and
jecxz
xor
sub
loopne
icebp
sub
xorb
inc
push
jne
aam
add
imul
xor
inc
sub
push
or
adc
fldl
or
push
mov
xchg
hlt
sbb
sub
movsl
mov
mov
dec
insb
sbbl
or
jp
push
enter
adc
and
sub
idivb
xor
lret
cmp
mov
cltd
pop
repnz
mov
ds
incl
aam
add
sbb
rcrl
lods
cmp
push
mov
cmp
sahf
loope
jmp
mov
loope
jg
pop
fcoms
test
pop
sub
or
push
in
xchg
lret
cs
mov
push
insl
pop
and
imul
ljmp
inc
cltd
xor
mov
mov
adc
jnp
out
cmp
sub
loop
push
test
inc
xor
xor
sahf
push
popf
mov
addr16
fldl
mov
xchg
rorb
idivb
cmpsl
inc
call
loopne
jns
imul
dec
inc
nop
jo
cmp
xor
cmp
lock
pop
xchg
sbbb
push
sub
pop
pop
int3
xchg
pushl
mov
nopl
adc
inc
or
das
push
repz
in
in
lahf
push
cltd
jecxz
ret
pop
mov
and
push
jmp
inc
or
fsts
roll
jne
xchg
and
fs
push
dec
adc
push
mov
and
sarl
mov
xor
sti
xchg
ret
sahf
cs
addr16
aas
pop
fbstp
fnstenv
and
adc
cmp
inc
or
aam
ds
fstl
inc
mov
inc
lea
into
lods
and
cmp
les
xor
shl
les
mov
mov
jbe
mov
mov
fstpl
and
fstps
mov
fisttpl
rolb
pop
imul
int
nop
mov
jp
out
adc
adc
pop
lret
cmp
xchg
jb
pop
aaa
mov
enter
cmp
mov
pop
sub
sahf
sub
mov
ds
das
ja
ljmp
mov
lods
inc
int
sti
outsb
mov
xchg
sti
test
insl
or
in
push
in
fadds
mov
mov
test
insb
imull
bound
call
mov
cmp
ds
iret
cmp
mov
dec
inc
jno
pop
std
sub
xchg
repz
ss
cmpsb
out
pop
jecxz
add
leave
out
ds
cmp
xchg
lds
xor
push
into
mov
ds
stos
mulb
jnp
test
sbb
xor
je
inc
mov
ret
mov
cmp
adcb
dec
iret
cwtl
std
cld
xchg
aaa
rcl
ss
ljmp
ret
push
mov
clc
movsb
inc
loope
das
pop
imul
aad
mov
push
jo
imul
or
enter
insb
fcmovnb
sbb
adc
test
pop
xchg
push
jp
je
clc
mov
mov
dec
fcmovnbe
loopne,pt
repz
push
cmp
mov
mov
repnz
iret
pop
subb
add
int3
mov
pop
clc
sbbl
call
cmp
fwait
es
jecxz
dec
mov
cmc
add
test
lods
lret
jns
js
xor
aas
ret
sub
xor
add
insl
mulb
rcll
movl
lea
jae
adc
add
test
pop
and
outsb
daa
out
xchg
incb
inc
sub
xchg
fstpt
cld
bound
push
aam
cld
hlt
fisttpll
cwtl
sbb
jns
cmpsb
aam
sub
pop
xchg
ss
xabort
pop
js
movsb
pop
jge
dec
xchg
cmpsl
out
lock
fnstsw
dec
sbb
mov
shll
fisubs
stos
adc
cmp
cmp
arpl
stc
xchg
jmp
ret
rcl
or
cmp
in
add
bts
std
jbe
leave
shlb
icebp
negl
mov
cmp
icebp
std
mull
pushf
jmp
sub
push
and
ljmp
sbb
out
cmpsl
ffree
push
cmpsb
inc
nop
outsl
xlat
xchg
jmp
mov
jae
push
clc
pop
push
push
and
sub
lret
mov
stos
and
or
js
aaa
xor
ss
outsb
push
int3
mov
mov
lds
inc
das
and
add
cmp
sbb
mov
pop
mov
out
test
repz
and
mov
sahf
xchg
jge
cmp
xchg
push
jp
add
push
sarl
inc
addr16
lock
and
mov
test
out
test
clc
jo
jo
test
imul
cmp
lea
xor
sbb
aas
test
rcll
ret
fsubl
pop
fadds
jne
mov
fcomps
inc
outsl
aad
push
addb
fstps
cmp
xchg
sub
lret
xchg
jecxz
daa
and
movsl
addl
and
mov
inc
push
xor
adc
push
lcall
into
addr16
xchg
and
mov
ljmp
sbb
jle
add
stc
fdivr
cltd
sbb
in
insb
push
movsl
and
sarl
pop
js
clc
out
and
shrb
mov
adc
pop
nop
orb
push
aaa
cwtl
inc
lret
cs
mov
pushf
addb
mov
nop
add
jnp
shlb
int
flds
adcl
sti
lods
mov
cs
xchg
cmp
cmp
pop
xor
or
sub
imul
cs
fidivrs
fldl
ljmp
stos
jp
xor
aad
cwtl
out
cmp
or
xchg
and
pop
ficomps
repnz
and
jp
icebp
fists
shll
loop
stc
in
adc
dec
fnstcw
jmp
icebp
add
cli
mov
xchg
les
mov
jns
je
int3
outsl
fdivrl
das
add
dec
dec
pop
loopne
sbb
mov
jmp
adc
addr16
and
aad
aas
jecxz
fbstp
popf
aaa
data16
jno
roll
push
push
and
loopne
mov
in
mov
js
enter
xchg
or
es
enter
aam
scas
std
jns
xor
fstps
fs
sub
jne
std
ret
push
pop
cld
cmp
pop
pop
lahf
jge
jmp
int
movsl
push
lret
lock
push
lret
push
inc
pop
popa
dec
js
sbb
pop
xor
rcrb
out
ja
aad
loope
pop
mov
push
and
adc
stc
dec
stos
std
mov
mov
andl
test
xor
mov
addr16
bound
je
rcl
aas
cmp
es
xlat
lea
stc
loope
aas
push
nop
into
add
mov
adc
fldlg2
cmpsl
push
repnz
add
adc
mov
or
fs
mov
inc
cmpb
push
inc
fistl
stos
frstor
pop
mov
lret
shlb
pusha
pusha
cmp
xchg
test
mov
inc
mov
mov
jge
xor
or
cmp
cli
sub
push
popf
mov
inc
inc
adc
shrl
js
cmpsl
or
mov
and
jno
dec
inc
repnz
or
inc
popf
cs
mov
ret
enter
pop
mov
nop
jl
sti
loope
and
mov
sub
addb
sar
mov
sbb
into
cmc
out
cmp
leave
mov
cltd
dec
fxch
xchg
fisttpl
roll
jle
inc
fdivl
stos
jo
push
idivl
repnz
lahf
mov
lret
or
mov
loopne
repz
loope
mov
mov
sbb
and
arpl
fcoml
pop
mov
cmp
sub
loop
mov
cld
inc
lods
and
or
iret
scas
rcl
xchg
jnp
in
sbb
xlat
and
icebp
popa
mov
or
fistps
pop
and
dec
sub
jae
mov
xor
out
xchg
or
fildl
andps
mov
into
dec
subl
add
scas
fisubs
mov
lret
inc
loope
iret
in
dec
stc
xlat
sbb
insb
push
xor
push
inc
mov
xor
leave
inc
jae
cli
adc
ds
stos
cmpsb
jg
jmp
cmpsb
mov
jmp
out
xchg
int3
mov
pop
jle
out
std
icebp
mov
cmpsb
sub
shll
popf
jg
rorw
sbb
das
gs
dec
dec
xor
pop
out
jo
jo
push
sbb
test
xor
insb
fs
push
lods
aaa
and
popf
sub
sub
ds
inc
dec
add
daa
adc
cmp
inc
push
mov
sbb
xchg
fs
lret
jae
lea
mov
xor
ja
mov
stc
jo
or
jle
push
cli
xchg
mov
adc
stos
nop
mov
mov
mov
les
push
pop
mov
mov
jo
cld
jp
stc
push
dec
hlt
mov
imul
push
pop
inc
movsb
mov
in
outsb
pop
push
and
xchg
cli
adc
cmp
cwtl
mov
push
and
mov
bound
pop
or
fcmovu
shrl
inc
xor
dec
pop
dec
push
sbb
ret
or
push
push
cmp
sbb
xchg
cmc
shrb
adc
std
popa
clc
fbstp
aad
mov
aaa
push
hlt
negb
popf
call
test
out
cmp
pop
and
mov
shlb
sub
fdivrp
loope
adc
mov
add
xchg
imul
repz
rcrb
and
lods
fsubrp
mov
shll
xchg
sbb
cwtl
rcrl
enter
inc
mov
dec
lret
jnp
lods
test
out
inc
ja
pop
arpl
aad
dec
or
ret
dec
sub
mov
fstps
test
sarl
sub
push
jge
cmp
cmpb
enter
test
push
sahf
mov
xchg
sbb
and
insl
out
fildll
gs
addb
sbbl
xorl
call
repz
shrb
push
jnp
dec
jne
and
add
imul
sbb
ret
addr16
inc
mov
push
jg
mov
lret
aas
mov
out
clc
or
mov
xchg
jp
or
adc
push
lea
mov
and
jge
sbb
mov
dec
fimuls
push
xchg
dec
jg
dec
out
imull
enter
and
xchg
loopne
imul
xchg
daa
lds
xchg
in
call
adc
test
cmp
or
xchg
ja
fs
sahf
pop
add
cli
inc
into
and
and
js
xchg
dec
fyl2xp1
cmp
sbb
and
js
jl
cwtl
gs
insb
shlb
pop
jl
cmc
pusha
das
inc
enter
imul
cmpsl
jp
test
int3
pushf
fldenv
cmp
ljmp
clc
leave
inc
int
push
xchg
xor
mov
fisttpl
jp
mov
loopne
mov
or
xor
push
mov
mov
fildl
jo
sbb
cli
sbb
add
test
scas
inc
shl
mov
lahf
or
sbb
inc
mov
lret
cli
mov
jp
jb
sub
fs
test
out
call
pop
adcb
in
leave
sub
pop
and
add
clc
mov
pop
out
popf
mov
std
imul
xor
or
loope
xchg
clc
add
mov
sbb
stc
inc
pop
pop
das
in
xchg
lea
jp
jg
xor
dec
jne
mov
pextrw
data16
imul
test
in
addr16
pop
inc
test
popf
push
pop
mov
adc
insl
outsb
push
pop
inc
cmpsl
pop
ljmp
mov
mov
cmp
push
pusha
sarb
in
in
or
ret
sbb
add
and
out
outsl
sub
push
pop
cmp
mov
test
in
sbb
ret
pusha
xlat
add
popa
jno
cli
in
loopne
pop
push
sar
movq
mov
xchg
mov
sub
sbbb
loop
push
imul
sub
add
bound
cmc
popa
xor
mov
sub
xchg
sub
xchg
ljmp
jge
push
xor
mov
cwtl
adc
arpl
imul
fisttpl
loopne
ja
mov
rcll
mov
leave
stos
test
popf
gs
push
xchg
lret
daa
xor
xchg
mov
stos
bound
ds
sbb
pop
decl
daa
outsl
and
and
jb
shlb
sahf
ret
lret
ljmp
sarb
xchg
xor
add
mov
shl
shrl
mov
sub
xchg
xchg
je
mov
mov
mov
int3
xchg
test
sti
dec
inc
mov
mov
or
aad
dec
orl
mov
ja
ja
mov
sub
or
int
shll
repz
popf
mov
jns
fisttpl
sub
leave
push
mov
xchg
xorb
out
lret
push
stos
or
les
enter
mov
pushf
shll
movsl
fcomip
cmc
sub
pop
xchg
inc
fidivs
pop
xor
push
adc
loop
dec
es
aam
lea
adc
lret
shrl
lods
scas
add
mov
hlt
pop
jl
inc
loopne
push
jg
pusha
lods
adc
inc
push
inc
test
pop
and
mov
cmp
div
movsl
push
insb
mov
jne
xchg
mov
push
cmp
js
hlt
xchg
dec
adc
in
jge
js
sarb
inc
lcall
and
mov
pop
lea
xor
outsl
rclb
dec
inc
jle
rorl
lods
dec
test
dec
loope
movsl
inc
pop
mov
cmp
cmp
das
pop
rcl
loope
mov
xchg
push
mov
sbb
inc
sbbl
adcl
adc
std
add
int3
iret
fcomps
push
lcall
iret
fistps
out
adc
mov
ss
mov
test
fcoms
cmp
ret
pop
sbb
jbe
lea
xchg
outsl
dec
call
mov
f2xm1
adc
rol
jmp
jns
sub
sbb
sbb
out
jmp
sub
sub
ja
or
inc
xor
jb
add
push
out
popf
outsb
jo
incb
push
out
lea
shr
mov
mov
sub
cmpsb
ficompl
inc
mov
or
jmp
test
pop
mov
movsl
test
mov
jl
imul
stos
adc
xor
ret
orb
mov
imul
in
push
les
sub
andl
pop
adc
mov
adc
jb
adc
sub
add
out
shl
mov
mov
or
xlat
mov
loop
mov
ss
inc
je
adc
push
mov
mov
out
aas
enter
inc
cltd
pop
sub
imul
je
aaa
cld
push
adc
std
sbb
aam
jmp
lock
icebp
jae
dec
adc
sbb
rolb
rorb
sub
in
mov
imul
in
fucom
push
mov
and
fdivs
pop
mov
mov
aam
cmp
int
sbb
mov
sbb
fcomp
mov
or
pop
call
xor
adc
test
or
dec
push
mov
les
dec
ret
and
mov
mov
push
stos
test
iret
jp
fistl
test
adc
inc
mov
lods
out
mov
or
jmp
dec
int3
inc
hlt
pop
cmpsl
xchg
push
mov
jl
add
lret
jmp
mov
cmp
mov
xchg
and
dec
mov
xor
mov
in
jbe
fnstcw
inc
iret
popa
mov
jle
fidivl
xor
jl
stos
sbb
movsb
xchg
mov
inc
das
aaa
imull
cli
test
dec
lret
je
mov
jmp
fldt
sub
mov
inc
push
lahf
fcoms
or
mov
insl
mov
dec
adc
sub
das
xchg
ja
fcmovbe
pop
lods
pop
les
inc
pop
pop
fcom
repnz
push
stc
enter
fidivl
xchg
scas
push
icebp
std
fs
pop
xchg
dec
pop
enter
pop
rol
insl
js
xchg
mov
movsl
dec
xchg
sbb
out
push
sub
jg
adc
ss
in
subl
fs
cmp
orl
push
outsl
clc
xchg
sbb
adc
test
in
out
xchg
imul
in
jge
test
outsb
faddl
lods
in
cs
inc
or
xchg
lods
pop
rorl
dec
test
jecxz
pusha
iret
cmp
inc
mov
in
inc
int3
and
fcompl
mov
and
jmp
sub
std
xchg
in
dec
data16
test
and
sub
sbb
sti
inc
cmp
pusha
negl
add
insl
adc
in
pop
iret
ljmp
cmp
sbb
test
out
test
pop
jb
lds
push
stos
sbb
andl
hlt
aas
fsubrs
nop
cmc
inc
pop
lods
cmovb
cmpsl
pop
jp
loopne
into
std
cli
aam
or
mov
and
cmp
pop
cmp
mov
and
add
xor
push
iret
xchg
insl
pusha
insb
pusha
mov
insb
dec
mov
or
xorl
movsb
inc
movsl
loop
cmp
mov
dec
bound
jl
aaa
jnp
push
cmp
mov
les
in
int
sti
xor
cmc
sub
hlt
jns
xchg
sub
mov
sub
cltd
jo
ds
cli
je
andnps
shll
inc
rorl
cmp
outsl
stos
stc
fsub
loopne
psubq
xchg
ret
push
xchg
cwtl
push
mov
xorb
cmp
sarl
mov
and
pop
mov
gs
pop
cwtl
and
decb
dec
mov
arpl
xchg
push
pop
adc
aam
xchg
push
movzbl
pop
and
jae
cltd
cmp
stos
push
out
inc
xor
loop
dec
mov
mov
cmpsb
in
mov
or
xlat
rolb
xor
idivl
popa
out
pusha
outsb
out
jecxz
or
jb
jno
mov
adc
into
jg
aas
cmp
add
jbe
xor
push
into
xorl
xor
mov
mov
dec
mov
add
ds
insb
push
les
mov
add
and
pop
or
jbe
xor
stc
leave
sub
in
mov
push
sub
mov
pmullw
xchg
push
sbb
shlb
dec
cltd
data16
js
mov
shrl
aad
pop
cmp
insl
test
jmp
mov
clc
mov
iret
inc
shrl
and
daa
repz
test
add
rorb
push
cltd
out
and
ss
popf
addr16
xor
mov
leave
paddsw
sahf
lock
xorl
andb
je
sbb
into
add
ljmp
test
or
scas
orl
dec
pop
jbe
pop
sub
dec
sub
jnp
cli
insb
scas
mov
lds
int
push
rcrl
inc
mov
fwait
push
sbb
jmp
cmp
bsr
or
lahf
jne
mov
daa
lods
add
out
mov
or
xor
add
add
inc
into
cmp
aam
inc
jo
push
sbb
mov
rolb
in
mov
test
dec
adc
jge
es
sbb
sarb
fcoms
rcl
mov
icebp
aas
and
popa
jnp
dec
dec
cmpsb
cmp
adc
int3
xor
inc
pop
and
xchg
scas
dec
lahf
inc
mov
outsl
push
add
dec
cwtl
xor
cmpsl
mov
es
shrb
sbb
cwtl
jmp
insl
jne
loop
sub
jmp
rcll
lahf
mov
push
fstpl
popa
push
loopne
popa
jg
xchg
int3
dec
jg
loopne
sub
lock
ret
pop
xor
mov
fucomi
add
mov
testb
push
cmp
sbb
sti
ret
add
push
orb
add
or
adc
push
xor
dec
aam
in
dec
shlb
insl
lods
lods
fistps
xchg
inc
jb
push
mov
and
imul
jmp
sbb
out
call
lahf
xor
icebp
mov
lock
fnsave
adc
lock
add
dec
loopne
xchg
imul
cwtl
lcall
add
nop
lret
fsubs
push
ficompl
xchg
xchg
jae
in
daa
pop
lods
pop
push
sbb
fistl
leave
mov
xchg
add
or
repnz
lret
das
pop
and
xchg
pop
jl
xchg
jmp
sahf
or
cmp
outsb
iret
xor
dec
inc
insl
mov
sbbb
push
repz
mov
sbb
cmp
in
adc
sub
inc
daa
push
mov
pop
dec
sbb
ret
adc
or
push
fdivs
push
sub
inc
xor
nop
fildl
mov
push
lret
dec
outsl
mov
outsl
or
sbb
out
ljmp
sub
lret
movsl
shrl
add
sbb
nop
ficomps
sbb
inc
xor
push
jbe
cmp
ljmp
cld
xchg
insl
add
sti
ds
enter
push
mov
xor
pop
or
cmp
aam
xchg
cmp
sbb
ficoml
inc
repnz
not
mov
mov
mov
jmp
in
jg
xchg
outsb
cmpsb
shr
lds
jmp
mov
cltd
mov
incl
jmpw
rol
pop
push
jae
sarl
mov
fsubs
cmc
cmp
pop
out
in
mov
xchg
sub
stc
xchg
xchg
jns
outsl
or
adc
mov
data16
dec
fsubrs
mov
loope
mov
fsubr
mov
push
mov
loope
push
nop
cwtl
addr16
test
or
jp
stos
add
cmpsl
dec
inc
push
in
mov
jo
cmp
nop
adc
scas
out
dec
sub
stc
in
jno
mov
xlat
pop
inc
ret
and
and
jb
inc
add
or
inc
add
jnp
in
pop
inc
fildl
out
lds
js
push
jns
stc
mov
aad
les
arpl
and
mov
pop
sbb
inc
xchg
mov
gs
mov
sahf
dec
xchg
sbb
mov
sahf
mov
clc
int3
push
xor
and
xchg
push
xchg
xchg
and
int
dec
ficoms
jb
fldl
out
loop
cwtl
scas
cmp
dec
in
cltd
iret
add
inc
pop
int3
andb
out
and
and
pop
jbe
xor
and
dec
subl
adc
mov
jae
out
jne
dec
stc
dec
lods
gs
mov
orb
jbe,pn
js
mov
je
aaa
out
call
mov
inc
stos
ret
cwtl
insl
test
lret
pop
cmp
push
mov
loop
dec
pop
outsb
ja
jns
jo
xchg
dec
out
pop
test
push
mov
xchg
pop
push
movsb
lahf
lret
inc
jg
fsub
xor
jnp
popf
movsb
sbb
out
dec
fmuls
loopne
test
int
jns
xlat
adc
gs
lret
push
je
sub
out
je
xor
leave
negb
nop
mov
lahf
lcall
xchg
mov
inc
addr16
sub
pop
lcall
into
pop
pop
or
inc
sbb
push
inc
fwait
mov
xlat
ret
jg
int3
cli
leave
test
fsubrp
lcall
jnp
inc
adc
cmp
dec
je
mov
hlt
pop
loop
flds
pop
insl
shr
gs
sahf
xchg
mov
xor
test
and
jg
inc
enter
sbbl
test
repz
mov
cltd
push
ret
ror
decl
aad
inc
push
or
jp
in
lds
out
mov
xchg
cmp
pop
xor
repz
punpcklbw
mov
adc
dec
fstpl
add
mov
push
repz
or
daa
xor
cmp
xchg
dec
lods
dec
in
fiadds
sbb
adc
pop
dec
fstp
xor
cmpsl
inc
rclb
xchg
pop
sub
repz
sub
inc
sub
push
mov
cwtl
test
cmpsb
sbb
dec
inc
and
rcrl
push
xchg
inc
insb
mov
inc
stc
dec
xchg
fnsave
push
sahf
or
loope
ljmp
lea
outsb
push
pop
pop
dec
ljmp
in
sti
mov
mov
bnd
cmp
pop
pushf
pop
mov
dec
sbb
movsl
add
cltd
add
leave
fcmovne
sbb
cmp
sbb
inc
or
push
mov
cmpsl
or
mov
enter
test
and
dec
mov
xchg
or
dec
stc
sbb
xchg
arpl
out
xchg
jae
lret
and
mov
cli
imul
ljmp
mov
jo
mov
jmp
cli
into
int3
adc
push
mov
cmp
xor
clc
mov
pop
pusha
loope
xor
pop
leave
test
pop
popa
add
sub
sub
shrl
sti
push
fcmovbe
lea
rcll
je
cmp
int3
mov
inc
mov
test
cmpb
out
mov
or
dec
sbb
iret
dec
ja
jge
mov
push
hlt
adc
mov
adcb
jne
xchg
cmp
repz
andb
addr16
mov
fwait
test
xchg
mov
xor
scas
sub
sarb
sub
aas
or
pop
inc
adc
pop
sar
push
push
rcrb
xchg
mulb
lcall
xor
push
or
stos
mov
dec
fsubl
lret
jae
pop
inc
or
sbb
jecxz
imul
dec
outsb
dec
dec
lret
pop
xlat
pop
cld
test
push
leave
or
popa
mov
pop
push
sahf
int3
xlat
pop
mov
jmp
xchg
out
sbbl
stos
and
mov
lahf
push
dec
arpl
call
stos
ljmp
or
push
das
cs
jecxz
aaa
stos
inc
and
inc
ss
mov
out
sub
jno
ss
push
sub
mov
cmp
mov
push
ret
gs
inc
icebp
sbb
push
adc
outsb
sub
out
loop
fs
and
fisttpll
dec
pop
mov
xor
in
xlat
jp
and
sub
mov
lret
dec
lods
jo
cmp
adc
xchg
scas
arpl
je
ret
dec
sub
sbb
pop
dec
jnp
shll
adc
hlt
clc
sub
sbb
inc
adcb
mov
hlt
sbb
mov
daa
pop
mov
dec
scas
xchg
iret
xor
and
cmp
lret
inc
in
jle
or
jnp
fldl
and
jae
mov
leave
sbb
add
fmuls
fidivrs
or
push
fwait
xor
xlat
push
or
xor
push
push
lods
jb
jl
fcompl
test
insl
or
mov
dec
xor
dec
lea
sub
or
adc
fidivrl
loop
rolb
dec
or
in
jb
repnz
xor
lret
repz
cmp
mov
ret
dec
jg
and
leave
dec
cmovnp
push
clc
cmp
mov
test
cmp
cmc
mov
rolb
push
xor
hlt
xor
sbbb
mov
and
fdivrl
out
xchg
mov
sub
js
or
pop
sbb
icebp
lods
push
or
or
popf
xor
cltd
or
sub
cmp
lds
rorl
jnp
inc
mov
cld
push
push
gs
rol
pop
insl
sub
jns
sahf
push
add
add
cld
cs
sub
add
inc
fisttps
inc
movsb
lea
lods
inc
leave
clc
mov
jne
dec
dec
fidivrs
pusha
ja
inc
push
xor
cs
jp
sub
jle
cmp
aam
and
mov
dec
fwait
loop
mov
lret
rclb
fnstenv
add
mov
lcall
lret
cmp
cs
push
fldenv
leave
mov
fistl
aaa
and
hlt
out
ja
xchg
out
xor
lods
mov
rorb
gs
mov
dec
pop
out
cltd
xor
jl
pop
es
inc
adcb
nop
fadds
inc
fsin
loopne
xchg
insl
xchg
out
add
mov
adc
jl
sbb
test
test
cs
or
call
dec
inc
dec
popf
jecxz
test
pop
fmuls
bswap
scas
pop
push
push
std
and
sbb
decl
push
out
sub
and
lahf
cwtl
int3
push
cmp
jno
xlat
jns
or
cmp
jmp
loopne
out
inc
push
sti
insb
fistpll
xchg
or
in
and
in
pop
push
mov
pop
jg
cmp
add
mov
lds
cli
lea
in
lcall
add
push
push
mov
lea
cmpsb
dec
mov
push
arpl
out
in
add
dec
and
and
mov
pop
test
sahf
enter
xor
sub
hlt
aad
inc
mov
mov
fs
push
fsubs
clc
jo
pop
jae
xchg
enter
stos
daa
jnp
add
or
push
into
jecxz
push
xor
rcrb
pop
and
out
out
rcrb
aad
pop
and
movsb
outsl
mov
inc
mov
dec
jnp
push
out
mov
out
loop
cmp
idiv
jp
mov
imul
mov
sub
push
mov
mov
inc
int3
mov
lret
inc
icebp
test
pop
sub
incb
sbb
xchg
ja
cmp
xchg
repnz
cwtl
sub
or
int
push
fsubr
ja
outsl
xchg
add
mov
xchg
es
inc
or
mov
adc
clc
ss
sbb
xor
cltd
and
sbb
lea
sahf
mov
xchg
stos
mov
stc
or
jne
cmpl
sub
cltd
jno
pusha
mov
aaa
mov
ret
xor
sbb
mov
loopne
mov
lahf
fwait
jg
bound
and
loopne
int
je
or
and
stc
imul
xor
lahf
test
das
inc
movsb
sbb
adc
mov
sub
sbb
add
leave
mov
cs
sbb
fsubrs
dec
or
arpl
jle
cmp
push
mov
js
int
cwtl
ds
fmul
sub
sbb
sahf
popf
sbb
jmp
cmp
sarl
xor
imul
and
mov
outsl
lahf
jno
inc
clc
out
shl
jl
pop
xchg
aad
and
cltd
out
cmp
xor
push
xor
fmull
mov
cmp
mov
cmpsl
pop
outsl
jl
dec
adc
mov
andb
and
mov
or
inc
mov
stos
mov
add
and
cmp
out
mov
cs
ljmp
push
jge
and
or
cmpsb
mulb
and
insb
mov
mov
push
outsl
loop
jno
jl
in
sbb
mov
orl
aaa
sbb
sahf
daa
mov
xchg
mov
xchg
and
push
addr16
inc
jae
shl
fwait
push
xor
inc
xchg
scas
adc
sbb
mov
jg
insl
fists
push
pushf
in
cwtl
ds
mov
jle
jno
ss
mov
enter
mov
out
lds
dec
notb
test
pop
lea
cmp
dec
lahf
stos
jae
xchg
add
xchg
or
pop
adc
xor
jecxz
push
stos
sub
push
dec
insl
hlt
cs
enter
pop
sbb
jle
pop
hlt
pop
lret
dec
push
or
mov
ja
sbb
jae
adc
mov
es
add
mov
sub
repnz
mov
mov
add
pop
ror
cmp
fwait
repnz
adc
movsb
ret
jge
fwait
int3
push
repz
arpl
inc
jnp
pop
stc
cmp
jle
push
push
divl
loope
or
pop
xor
push
jle
loopne
add
jmp
xchg
aaa
test
xchg
lea
call
pop
mov
dec
jge
mov
call
mov
sbb
jl
pop
xor
push
pop
sti
add
mov
sub
out
repz
shlb
test
adc
add
insb
stos
sti
addl
outsb
or
lcall
sbb
jnp
cld
loope
cld
sbb
add
cmpsl
clc
lods
mov
sbb
ret
cmp
stos
lods
mov
repz
push
rcr
addr16
ror
das
xor
mov
mov
loope
in
and
add
and
or
pusha
mov
add
mov
push
push
sub
mov
into
es
movb
cld
fcmovbe
lahf
mov
or
xchg
mov
pop
jns
cmpb
dec
add
mov
xchg
xor
aad
shl
fsubs
mov
sbb
xor
je
mov
inc
jle
inc
xlat
cld
xchg
and
cmp
sarl
popf
jp
insb
scas
inc
mov
add
shlb
bound
and
pushf
inc
and
add
jmp
pushfw
sahf
sub
cmc
jae
lock
and
jne
mov
add
jecxz
mov
out
push
repz
dec
lock
xlat
orl
jo
xchg
imul
add
mov
xchg
push
mov
push
inc
data16
arpl
or
inc
sub
int
scas
dec
loope
sbb
rcll
jl
in
int
jmp
xchg
push
mov
adc
fnstsw
and
push
push
pop
push
popl
pop
mov
ret
xchg
cmp
scas
iret
push
stos
mov
sbb
addl
or
loopne
mov
mov
dec
mov
push
ror
pop
je
sub
in
push
push
sub
push
and
js
loope
dec
test
xor
or
adc
clc
fcoml
mov
inc
fldt
aaa
xor
mov
lds
out
pop
mov
dec
inc
push
aas
inc
arpl
cmp
or
cli
adc
cmp
mov
int
sub
outsb
outsb
inc
enter
inc
call
push
fwait
jl
or
push
pop
dec
and
lock
push
sub
sub
push
jo
jge
inc
push
mov
lret
jg
mov
mov
add
lret
mov
lea
es
fbld
pushf
dec
cmp
imul
or
out
fistpll
push
out
not
cltd
xchg
mov
dec
pop
aad
mov
push
mov
popf
mov
push
dec
gs
mov
ficompl
adc
add
and
leave
push
cld
adc
add
pop
pop
gs
sqrtps
inc
out
xchg
mov
pop
repnz
iret
mov
dec
mov
push
xlat
daa
in
ja
jp
dec
test
sub
jnp
fs
push
cmp
xchg
outsb
ss
sbb
outsl
and
cmp
fidivl
test
cmp
mov
shrb
xor
cmp
jnp
sti
inc
push
mov
stc
cmp
repnz
test
mov
out
mov
insl
add
neg
es
sbb
or
shl
mov
xchg
sbb
cmp
fstpl
dec
pusha
rorl
clc
lret
ja
fcomps
mov
push
incb
arpl
gs
xor
faddp
mov
mov
push
movsb
leave
in
jg
xchg
pop
adc
add
fnstenv
stc
add
jb
inc
add
mov
dec
mov
sub
mov
int3
addr16
cmp
mov
sti
ffree
dec
addr16
cmp
repnz
mov
rolb
xor
xchg
dec
dec
mov
cmp
add
pop
or
or
and
daa
aas
std
out
in
and
dec
jae
sub
xchg
in
dec
sub
gs
jne
adc
sbbl
pop
lods
xor
adc
adc
jle
mov
push
push
adc
movsb
clc
in
dec
and
push
ficoml
mov
cmpsl
shr
ja
inc
and
xchg
xchg
lods
shrb
jne
push
mov
jno
gs
leave
mov
cmpsb
hlt
push
lods
push
pop
jl
xchg
aaa
shlb
inc
cmpsb
jne
sarb
mov
or
push
outsb
test
out
pop
popa
adcb
sbb
adc
in
cmp
adc
push
gs
push
cmp
daa
or
dec
xchg
arpl
dec
or
in
pop
dec
or
lods
es
in
sub
jbe
pop
inc
aam
pop
in
movsb
xchg
mov
hlt
sbb
shl
xor
push
adc
lock
adc
out
fnstenv
xor
test
aaa
pop
clc
jno
iret
test
pop
jb,pn
out
repnz
cmp
sbb
xor
mov
inc
and
xchg
cmpsl
fsubl
pop
jmp
mov
call
sbb
mov
sbb
jecxz
adc
imul
jmp
add
sarb
pop
mov
sahf
xchg
ja
out
pop
popa
mov
dec
bnd
xor
mov
out
enter
les
mov
subl
pop
cwtl
and
jae
mov
sbb
aas
shll
shl
mov
ja
mov
push
xchg
aam
shll
inc
lret
sub
dec
push
cltd
sub
jns
sub
or
out
iret
jb
push
jg
xchg
fistpl
in
out
fdiv
xor
push
addr16
ja
pop
pop
mov
insb
fldl
fwait
mov
fdivrl
jmp
movsl
mov
int
push
mov
sub
insl
cwtl
dec
jge
fsts
or
jbe
test
jnp
cmp
test
sbb
jb
or
repnz
pop
fldenv
and
lcall
push
rcl
sbb
push
aaa
jno
mov
out
xchg
fstpt
leave
xchg
and
ds
adcb
repnz
xor
jl
cwtl
add
shlb
or
call
mov
inc
and
dec
push
stos
jnp
in
mov
jmp
out
fsub
push
pop
rclb
mov
mov
data16
mov
movsb
fisttps
test
lahf
xor
popa
lea
sub
outsb
sub
xor
sbb
repz
xor
mov
or
or
loop
das
xchg
or
mov
mov
std
movsl
test
xchg
mov
push
rorb
dec
pop
shll
cmpsl
sub
and
scas
mov
je
shlb
jle
lea
daa
mov
xor
inc
add
mov
lret
cs
mov
fnstcw
mov
adc
jp
aam
pushf
dec
push
push
pushf
xchg
and
mov
lcall
jl
sbb
xor
mov
stc
add
insl
mov
jb
stos
sar
cltd
inc
add
ss
sti
int3
dec
jne
lock
jmp
dec
orl
and
jmp
out
stc
or
stos
cmp
and
je
xlat
jge
bound
lds
mov
xchg
and
pop
xchg
add
repnz
in
int
outsb
push
aas
cmp
cmp
jbe
cmp
fiaddl
test
popa
shl
loope
sbb
cmp
in
icebp
and
sahf
adc
or
mov
std
sub
bound
pop
lea
cmpsl
sub
push
bnd
push
sbb
sti
or
xlat
imul
cmp
xchg
push
adc
icebp
jle
stos
leave
push
inc
xor
dec
xorl
outsl
adcb
sbb
aaa
and
push
data16
addl
divl
jge
outsb
mov
mov
add
mov
cmpsl
lods
dec
scas
pop
xlat
insb
fnstenv
push
mov
adc
es
mov
sub
scas
sbb
add
push
add
and
ja
fsubl
insb
adc
mov
ficoml
and
mov
adc
adc
cmp
popl
mov
mov
dec
xchg
mov
and
dec
pop
int
mov
xchg
cli
pop
sarb
loopne
cmc
aam
imulb
fildll
or
loope
cltd
xchg
push
jg
mov
sub
pop
js
rol
jo
nop
mov
and
inc
mov
in
add
es
pop
ja
xor
sub
xchg
dec
push
mov
hlt
test
js
inc
jne
xchg
rcr
test
ret
ss
pop
int
in
fwait
mov
clc
mov
xlat
ja
rcll
les
adc
int3
in
gs
pop
dec
mov
loopne
jnp
ljmp
sub
fsubrs
mov
inc
fmulp
in
loopne
mov
mov
jp
mov
pop
cmp
insb
mov
nop
pushf
add
sbb
shr
std
or
pop
je
cs
adc
mov
xchg
pop
int3
pushf
cmpsb
sub
in
xor
adc
jnp
ds
mov
add
stos
xor
out
aas
das
sahf
fldcw
mov
and
pop
sub
lahf
scas
les
lock
out
add
imul
out
push
sub
or
and
jg
cmc
mov
inc
push
xchg
and
cmpsl
dec
dec
rep
jge
xchg
and
repnz
and
and
xchg
sbb
ja
ds
mov
pop
sub
movsl
pop
icebp
mov
xchg
test
mov
jnp
push
dec
andps
aas
jbe
call
mov
out
fiaddl
cwtl
pop
arpl
sub
or
outsb
cld
test
push
inc
scas
push
cmpl
in
push
sub
adc
roll
sbbb
jg
push
xchg
cs
add
push
mov
aad
sub
push
and
adc
enter
sbbl
inc
loopne
jbe
ds
jecxz
mov
and
sbb
wrmsr
je
ss
jge
mov
outsl
lock
repz
push
mov
xchg
mov
adc
pop
inc
mov
movsl
nop
lahf
subl
repz
inc
nop
dec
outsl
jl
imul
push
or
lods
stc
lret
pushf
lods
lahf
push
adc
pop
add
cmp
mov
popa
lea
cmpsb
add
adc
push
stos
push
and
test
imul
icebp
push
cmp
xor
fmul
jno
pushf
adc
dec
fmul
mov
pop
adc
push
lds
loopne
ret
lahf
xchg
jne
popa
ret
inc
and
and
jo
aas
pop
and
add
loopne
adc
shlb
out
cmp
mov
shll
gs
cmp
clc
mov
and
jne
lods
add
mov
lods
data16
in
and
movb
daa
loopne
out
je
iret
nop
mov
andl
clc
mov
sub
add
jae
add
xor
testl
sub
lahf
mull
data16
xor
movsl
fwait
cmp
inc
sub
loopne
fnstcw
jge
sbb
dec
dec
adc
loopne
sti
cmpsl
in
adc
stc
movsb
out
stc
xchg
xor
or
sub
add
lret
leave
lea
shll
mov
push
aaa
scas
loopne
mov
inc
out
shll
cmpsb
or
and
scas
dec
xor
mov
xor
and
xor
jl
pushf
mov
daa
loop
push
sbb
out
sahf
inc
cmpsl
add
mov
mov
mov
mov
rolb
sub
aas
pusha
xor
pusha
clc
mov
cmpl
test
das
and
xchg
enter
js
rcl
xor
inc
loop
sub
xchg
insl
icebp
adc
fbld
dec
lahf
lahf
in
mov
in
cmp
sub
xor
ljmp
fsubr
sub
pop
lcall
dec
and
jp
xor
ja
adc
jns
hlt
sbb
ss
cmpsb
lcall
mov
sti
dec
mov
cmp
scas
jmp
out
ja
and
out
mov
leave
mov
rol
loopne
arpl
dec
cmpsb
pop
push
dec
and
and
mov
fisubs
pop
jmp
dec
or
cmp
mov
dec
rorl
mov
mov
fstpl
lds
je
das
repz
sub
iret
push
cmpsl
fldt
rcrb
lea
cli
push
jmp
inc
push
in
sbbb
addr16
inc
pop
leave
fisttps
push
pop
lods
fisubrs
dec
sub
sar
in
adcl
loope
ret
jae
xchg
pop
lds
daa
mov
dec
int3
adc
jle
imul
jl
jbe
sti
andl
cmp
adc
mov
lcall
aas
leave
pop
mov
pop
dec
mov
test
shlb
cs
sahf
dec
dec
and
arpl
pushf
and
jge
and
divb
mov
xchg
mov
dec
or
fs
loopne
cmp
mov
pop
xchg
iret
loop
xor
lahf
fcmovne
cmp
hlt
jp
push
add
lret
dec
sbb
mov
and
shll
popa
mov
scas
push
jo
sbb
rclb
call
xchg
pop
jle
add
mov
pop
lret
add
and
add
in
lahf
jnp
sti
cs
fstpl
sarb
popa
ljmp
fisubl
test
push
push
fisubrs
orl
adc
shll
or
cwtl
insb
sbb
ss
outsb
xor
fcoml
push
shlb
loopne
cmpsl
test
outsl
gs
pusha
dec
lods
or
rcrb
hlt
into
jns
jae
mov
dec
sub
mov
add
or
ret
fisubs
dec
test
dec
bound
psubw
and
sbb
cmpsb
and
add
adc
adc
mov
icebp
jno
arpl
mov
push
hlt
test
repnz
pop
lods
cmp
mov
sahf
shll
rcr
pusha
cmp
xlat
fsts
xor
cmp
icebp
add
das
dec
adc
add
movsl
sbb
fisubrl
pop
adcb
addr16
pop
jnp
push
iret
addl
dec
lods
lods
in
fs
inc
mov
cmpsb
add
cmp
xchg
xchg
jge
cld
push
stos
shlb
enter
jae
bound
mov
mov
push
pop
dec
xchg
ret
jns
cmpsl
xchg
or
pushf
or
call
ja
xchg
imul
aaa
fsts
push
sbb
sub
dec
enter
insb
clc
push
mul
ja
adc
adc
sbb
fstl
inc
aam
addr16
ds
sub
lock
or
dec
insb
push
sub
pusha
aas
sub
cmpsb
mov
ss
mov
nop
lcall
mov
jge
inc
fisubrs
add
int3
cli
lahf
rorl
int3
cmp
imul
repnz
scas
enter
push
sti
pop
fildl
sub
jge
or
shr
mov
in
outsl
push
xlat
jecxz
inc
outsl
insl
pop
adc
je
xchg
xchg
adc
xchg
sub
jl
adc
test
xchg
test
mov
jecxz
xor
adc
out
adc
inc
dec
sub
adc
and
inc
mov
push
test
pop
test
cmp
iret
or
pop
in
push
iret
sbb
jge
leave
jle
mov
gs
pop
inc
xchg
cmc
les
lcall
mov
inc
lahf
sub
outsl
test
mov
aas
rcr
lock
movsl
inc
add
fidivrl
mov
repz
xchg
adc
jno
xchg
fistpl
in
dec
mov
mov
negb
or
test
enter
js
jae
mov
ret
jge
aas
ret
xchg
loope
repz
xor
jmp
mov
xchg
es
mov
pop
push
jp,pt
stos
imul
sbb
loop
sahf
jl
inc
mulb
adc
mov
lret
mov
lods
xchg
add
aas
enter
sub
cld
test
pop
and
mov
dec
iret
int3
sbb
mov
fs
insb
inc
mov
imul
out
gs
adc
stos
popf
ja
push
std
outsb
ds
aaa
sub
incl
push
fstpt
pop
std
ja
outsl
sahf
test
cmp
mov
sbb
mov
push
insb
loopne
adc
xor
jae
out
lret
sub
insb
in
movsb
inc
fcmovne
adc
xchg
mov
and
test
add
idivl
jl
bound
icebp
aad
push
pop
int3
jp
xor
pop
adc
movsb
ss
xlat
repnz
inc
rcrb
xchg
push
adc
sbb
pop
push
sbb
test
addr16
mov
or
pop
stos
sbb
jl
jge
clc
ds
mov
out
adc
adcl
mov
cld
aad
pop
cs
ds
test
rcl
or
ljmp
inc
xlat
rorb
int3
sbb
into
imul
sub
jge
imul
pop
scas
idivb
jo
cmc
jmp
dec
negb
repnz
jle
mov
ret
sbb
jle
int3
fstl
mov
out
or
inc
mov
jnp
jp
scas
pop
or
negb
mov
xchg
cwtl
out
adc
loope
mov
out
sub
or
dec
push
insb
pop
inc
ficoms
cmc
mov
and
push
enter
bound
dec
ss
dec
mov
mov
mov
mov
cwtl
test
nop
jg
mov
or
push
mov
jbe
outsl
xchg
lock
push
jae
push
outsl
int
insb
xor
inc
pop
mov
sub
imul
adc
iret
pushf
jne
inc
xchg
imul
fs
cmc
out
push
add
xchg
sbb
jne
aam
aam
add
xlat
test
jbe
int3
push
scas
call
in
push
push
jg
xor
adc
in
or
pop
adc
add
das
or
gs
jae
adc
pushf
mov
cmp
lock
mov
push
xchg
jnp
xor
addb
testl
xorb
adc
inc
dec
iret
mov
fwait
in
lds
leave
xchg
mov
sub
push
sub
mov
xor
cmp
adc
sub
pop
imulb
push
pushf
hlt
inc
in
jl
in
sub
mov
xor
loop
adc
jge
inc
inc
icebp
ret
mov
andb
xchg
adc
or
fwait
xchg
sti
jo
sbb
js
popl
loopne
mov
mov
adc
xlat
stos
nop
sahf
fdivrp
lods
dec
ja
dec
adc
sub
into
in
sub
aaa
inc
or
adc
lods
lea
jnp
cmpsl
out
or
popa
pop
mov
push
pop
nop
add
sbb
xor
repz
push
fucomp
iret
into
aad
shr
and
in
gs
hlt
inc
mov
mov
jmp
fidivrl
out
aas
test
sbb
bsr
sbb
mov
lret
push
fiadds
je
aam
imul
sbb
sbb
loopne
push
sub
push
jno
int3
mov
test
subb
xor
insl
xchg
pop
sbbb
sti
mov
and
mov
mov
cmpsl
std
or
out
lret
adc
sbb
push
push
rclb
mov
adc
shrb
inc
frstor
xchg
ss
mov
clc
rorl
add
scas
push
stos
cli
add
shl
movsb
xchg
lea
adc
das
arpl
outsl
xchg
addr16
sarl
inc
lea
outsb
ss
in
js
jge
mov
mov
sub
popf
mov
xchg
or
pushf
xlat
pop
mov
loop
mov
xchg
loop
lcall
jge
dec
scas
xorl
call
cmp
or
jne
int3
inc
repnz
and
dec
xor
jbe
mov
loop
xor
mov
mov
movsb
aam
jns
xchg
nop
cmpsl
les
jecxz
push
xor
ret
out
sbb
fisubs
scas
jmp
icebp
aad
in
inc
mov
fsubrs
loop
mov
jno
orb
push
inc
mov
int3
mov
out
ljmp
xor
adc
mov
jnp
into
fiadds
mov
fsubr
test
push
aas
jmp
mov
sub
cwtl
test
push
sbb
rclb
jae
ds
inc
sub
popf
xchg
cltd
xchg
mov
xchg
jbe
fs
hlt
daa
fcmovbe
daa
xchg
push
add
hlt
mov
sub
xchg
dec
fs
mov
jnp
or
cmc
sahf
xchg
std
test
out
jg
fs
leave
jmp
sbb
sbb
roll
jmp
repnz
test
lds
cmp
cmp
in
loop
lcall
sbb
test
out
cmc
lods
jge
sub
or
out
repnz
jae
fildl
es
outsl
test
sbb
idivb
cmp
movsb
inc
jle
cmp
call
inc
jbe
je
and
les
aaa
mov
nop
cld
mov
mov
fcom
fbstp
cmpsb
add
addr16
add
daa
fcoms
sti
and
pusha
call
sbbl
mov
cmc
adc
add
stos
adc
xchg
insl
cltd
enter
outsl
pop
mov
sub
push
lret
cmp
mov
push
and
adc
stc
in
jle
xor
lea
add
andb
ret
cltd
scas
mov
pop
addr16
jmp
xchg
jg
mov
dec
daa
mov
in
cld
fdiv
xorb
jmp
inc
xchg
outsb
test
xchg
cmp
int3
call
jno
je
jae
inc
dec
ss
inc
and
mov
pop
jo,pn
test
shr
rorb
jecxz
out
addr16
pop
or
lods
jle
push
pop
and
rcll
jnp
jmp
dec
sbb
jbe
mov
rcrl
leave
mul
push
jbe
pop
popa
xchg
data16
scas
aam
js
xchg
jno
pop
insb
pop
test
inc
fstps
xor
pop
test
arpl
into
mov
sub
stc
popa
test
dec
mov
or
in
test
inc
mov
sbb
fstl
leave
pop
adc
mov
mov
xchg
fs
cmpsl
inc
lds
and
call
lods
cmc
bound
lods
outsl
rclb
in
mov
cmpsb
dec
clc
rcrb
dec
mov
lcall
mov
cli
pop
inc
sub
addb
jg
mov
mov
stos
repz
call
add
pusha
sub
cmpsb
lea
dec
imul
sti
jno
lods
mov
or
and
addr16
insl
filds
dec
jae
add
xlat
in
daa
shl
xor
cmpsl
sub
int
xor
loop
mov
push
pop
cmp
mov
pop
add
pop
rolb
mov
xor
add
das
add
lods
fimull
push
enter
jo
push
or
push
inc
cmp
jecxz
jnp
xchg
cmp
inc
sar
inc
xchg
repnz
inc
mov
sbb
fcmovnbe
push
cmp
xlat
jne
sarb
pushf
cli
ret
shrl
inc
jo
jle
jb
sbb
push
cli
out
push
pop
mov
dec
popa
and
mov
adc
dec
sbb
test
fidivrl
and
es
insl
out
inc
sub
pop
cmp
outsl
cmp
mov
fwait
cmp
pop
mov
enter
or
jecxz
adc
push
and
out
imul
pop
loop
cltd
daa
fst
adc
mov
push
jne
xchg
rcr
int3
adc
inc
dec
movsb
out
and
pusha
inc
fcomps
push
btr
pop
addb
push
xchg
add
mov
imull
clc
pop
or
popa
add
sub
cmp
add
sbb
xor
cmpb
xor
add
xchg
out
div
and
adc
jb
movups
inc
lds
fidivrl
loope
imul
sub
pop
test
push
lret
and
push
out
jl
adc
xor
fucomi
sbb
fildll
daa
lcall
mov
cltd
mov
cmpsl
inc
test
add
and
lock
mov
xchg
cmp
call
pop
mulb
push
mov
push
aaa
fisubl
add
sbb
mov
gs
xor
hlt
sub
cld
in
stos
shlb
jmp
fs
inc
sub
or
jae
dec
mov
jg
addr16
and
pop
xor
fs
mov
push
jo
push
daa
lret
jae
in
add
test
out
xchg
pop
test
and
mov
xor
loope
pop
inc
je
iret
sbb
mov
pop
sbb
idivb
mov
mov
adc
or
push
sub
jl
adc
lea
repnz
jp
hlt
push
in
inc
push
ja
outsl
stos
sahf
inc
sub
scas
inc
sbb
pop
mov
lock
subb
decl
cmp
lahf
push
pusha
jl
popa
std
xchg
js
sub
gs
jmp
jl
lds
fcompl
and
orb
int3
or
mov
adc
xor
inc
add
int
mov
lcall
fwait
shlb
jns
lds
shl
adcl
xor
mov
sahf
adc
outsb
iret
mov
push
lcall
jl
push
nop
imul
adc
sub
push
bound
ja
and
pop
hlt
cmp
sbb
or
in
jg
loop
jbe
scas
outsl
out
rcrl
stos
mov
data16
and
mov
pop
xor
sbb
int
into
sbb
shrl
mov
jg
out
pop
outsb
sbb
xchg
add
mov
out
mov
fs
out
cmpsl
test
shll
es
jo
or
pop
js
popa
int3
adcb
xchg
add
lds
rcl
or
xchg
andb
pop
stos
mov
jl
and
or
adc
outsl
es
and
jnp,pt
fs
jno
mov
sar
xor
movsl
push
call
xchg
hlt
cmp
test
jo
fistpll
popa
or
ljmp
xchg
jmp
fnsave
lret
ljmp
jns
jmp
mov
in
adc
rclb
cmpsb
cmp
inc
out
sub
cmp
fidivs
insb
out
stc
inc
push
popf
or
gs
fidivs
pop
jbe
arpl
test
hlt
shll
sbb
xor
jmp
push
mov
cmpb
mov
add
xchg
pop
sarl
lock
ret
jmp
adc
xor
pop
ds
nop
fidivrs
pop
dec
and
popa
mov
mov
fsubrs
lahf
daa
popa
jge
out
push
mov
hlt
cmp
cli
in
jg
xor
jg
push
incb
sbb
and
sti
sbb
lahf
scas
push
pop
dec
in
adc
jns
and
mov
stos
mov
dec
cmp
popa
out
and
add
dec
shrb
ds
xorl
lods
pushf
mov
fmuls
out
stos
cli
loope
test
call
or
push
out
sti
cltd
ret
andl
add
lcall
xor
mov
jl
in
cmp
mull
call
rolb
add
cmp
cmpsl
mov
mov
or
xchg
out
pop
lret
or
call
das
sbb
outsl
mov
sub
scas
in
xchg
cmpsb
fstpt
jno
jecxz
andnps
and
nop
mov
sbb
rol
cwtl
lea
sub
inc
outsb
movsb
xor
jbe
jae
xchg
ret
pop
push
addr16
push
jb
jbe
inc
or
sub
out
inc
stc
jg
xor
js
sbb
sahf
leave
add
jns
xchg
jbe
adc
test
xor
js
lahf
popa
xor
cmpsb
hlt
loope
loop
jbe
mov
mov
out
fs
adc
pop
je
push
pusha
push
xor
loope
push
mov
or
aad
xor
jge
dec
mov
enter
int
pop
fstl
lahf
add
mov
roll
pusha
lahf
mov
ss
loope
arpl
pop
dec
inc
dec
fstpt
sub
pushl
stc
mov
xchg
fwait
push
jb
mov
repnz
cld
mov
pop
jne
or
inc
loopne
bound
cmpsb
xor
js
imul
adc
out
jmp
insb
lret
ljmp
mov
jnp
outsl
loopne
inc
xchg
call
xchg
xlat
push
add
sbb
movb
pop
popa
sahf
insb
sbb
xchg
mov
subb
push
les
movb
addb
shlb
rclb
daa
inc
cmpsl
in
jnp
stos
sahf
jge
sbb
cmp
and
inc
cmc
inc
cld
or
xchg
mov
jne
es
push
cmpsl
aas
lea
pop
test
repz
xchg
rcl
pop
sub
int3
andb
fidivl
aad
add
scas
test
cmp
scas
in
test
adc
test
add
mov
mov
jb
dec
lods
sub
push
loop
fadds
xchg
mov
and
roll
out
xchg
jno
popf
stc
out
cltd
nop
xor
es
adc
iret
iret
sbb
cmp
addr16
xor
rcrb
or
pop
cwtl
arpl
js
nop
jge
cmp
mov
out
aaa
push
cld
scas
cmp
leave
out
test
lahf
popf
in
inc
popa
xchg
mov
stos
or
fnstsw
out
sar
push
in
xchg
mov
mov
orb
out
lret
inc
lock
fwait
pop
push
es
push
or
int
les
shll
aaa
movsb
sub
xor
jo
mov
test
dec
dec
push
stos
xor
hlt
push
xchg
popa
add
test
sahf
add
xchg
pop
dec
cmp
aaa
fiaddl
scas
loope
clc
mov
jnp
push
cmp
adc
int
ss
jl
int
inc
inc
stos
mov
mov
outsl
nop
int3
cmp
xchg
inc
rcll
add
sbb
mov
mov
fidivl
cltd
dec
cmp
inc
xchg
xchg
mov
pop
sti
xchg
sub
mov
insl
les
imul
rclb
stos
jnp
jno
dec
xchg
sub
imul
addr16
lahf
dec
pop
jl
in
test
stos
out
mov
push
mov
lcall
shlb
sbb
int3
gs
inc
push
addb
dec
xchg
xor
pop
imul
jne
out
pop
jns
stos
loope
mov
cmp
roll
sub
dec
cld
add
mov
push
cmc
or
xchg
push
pushl
cs
lret
jp
dec
iret
ds
push
mov
add
icebp
les
in
rclb
movsl
rcll
push
scas
jb
dec
pop
fnstcw
test
jmp
dec
push
aad
outsl
and
adc
push
test
lods
mov
int
enter
stos
cmpsl
clc
repz
loop
push
inc
orb
ljmp
into
pop
aam
scas
shlb
xor
clc
pop
out
mov
cwtl
push
xor
out
repz
pop
sahf
fldt
adc
and
xor
xchg
inc
xchg
loopne
inc
flds
lds
adc
scas
aaa
adc
call
fidivrs
dec
mov
xchg
aad
sbb
in
lods
or
loopne
fwait
jmp
pop
or
ret
lock
shlb
outsb
mov
dec
sti
out
scas
mov
out
sub
scas
hlt
xchg
jo
cmp
lds
je
and
iret
out
jnp
pop
insb
inc
test
fldl2e
cmp
jae
push
cmp
dec
jp
or
sbb
inc
lcall
scas
loopne
push
xchg
cmp
or
pop
popf
sub
mov
jmp
adc
adc
lds
out
push
jle
pop
enter
lahf
dec
std
je
aam
das
add
cmp
mov
bound
fchs
mov
xor
push
cmp
scas
pop
daa
call
xchg
cmpsl
dec
jp
push
fs
daa
or
or
rorb
sub
fcmovnb
jns
mov
jae
arpl
and
mov
popa
adc
outsb
scas
cwtl
aam
dec
lcall
jns
aad
sahf
fdivrp
fisubrl
sub
lock
cmp
inc
xchg
jle
dec
mov
jae
xchg
sbb
outsl
mov
in
mov
push
shlb
pop
cmp
xor
int
adcl
inc
int
sahf
hlt
jg
or
dec
jle
and
sbb
sub
pop
push
dec
mov
or
mov
jne
mov
push
pop
mov
aas
dec
scas
pop
ficoml
xor
insl
jle
js
negl
jnp
outsl
cmp
popf
xor
xchg
mov
jbe
std
insl
fdivr
mov
inc
aad
mov
je,pn
inc
inc
cld
xor
ja
dec
xor
jo
addr16
xchg
xor
stos
and
fistpl
ds
ficoms
sbb
push
rorb
or
icebp
stos
pop
out
fldt
ljmp
mov
push
cli
clc
lret
fdivl
jb
mov
outsb
jns
data16
mov
imul
xor
push
movsl
in
jle
fidivs
pop
stos
push
mov
and
pop
mov
repnz
push
sahf
in
movsb
xlat
ljmp
pop
sbb
mov
imul
adc
and
or
leave
jp
xor
imul
jle
std
popf
repz
push
pop
push
pop
xchg
les
jno
jecxz
sub
pop
xchg
jb
pop
push
test
xor
mov
push
adc
pop
xchg
sub
loop
fwait
jne
rcrl
jl
sti
xor
js
lcall
imul
cld
sbb
out
inc
stos
ja,pn
mov
xlat
scas
stos
iret
daa
cmc
xor
and
or
or
fucomip
xchg
mov
call
mov
cld
or
call
cmc
inc
ror
scas
shrl
popa
mov
jl
jno
mov
jecxz
xchg
xor
cmp
lret
bound
sbb
out
int
jl
or
ret
jmp
sbb
push
loop
xchg
pop
jge
push
jne
int
repz
test
ret
imul
mull
sahf
push
and
push
mov
mov
shll
push
pop
aad
cmc
loopne
sub
andl
mull
fbstp
scas
and
test
nop
mov
out
dec
xchg
push
xchg
sub
sub
mov
into
lods
mov
mov
push
xchg
movsb
nop
leave
sti
mov
xchg
sbb
xor
mov
and
mov
fnstenv
jmp
pop
inc
xor
incl
cli
test
xchg
daa
fs
xor
xor
in
push
or
xchg
xor
and
jmp
sub
sub
dec
fwait
pop
mov
dec
shrl
mov
pop
mov
or
std
push
je
adc
mov
push
pop
push
cmpsl
neg
cmp
fcmovnbe
insl
into
inc
jb
div
enter
push
addr16
push
out
inc
mov
pop
mov
inc
movsb
out
jns
mov
mov
xor
inc
insl
lret
adc
bnd
inc
fsubrl
call
cli
movsl
or
xor
sub
out
cld
aam
mov
imul
cmpsl
cmpsl
incl
mov
xchg
inc
xchg
dec
sub
fsubrl
enter
sub
xchg
mov
xchg
movsb
push
repz
or
es
jmp
or
inc
xor
call
or
std
movsl
mov
test
add
sub
es
dec
add
mov
outsl
jmp
sbb
loop
loopew
cld
cwtl
jmp
push
dec
jne
mov
add
dec
dec
das
sahf
push
loop
movb
add
adc
das
and
lcall
rolb
dec
cmp
jl
repz
mov
push
mov
push
in
lods
fsubr
aam
xchg
mov
pop
inc
adc
xchg
fdivrl
pop
cs
cltd
scas
jnp
popa
stc
fcmovnb
pop
inc
jno
pop
nop
jb
insl
jne
jno
sti
aaa
fwait
and
fwait
mov
ljmp
add
inc
scas
or
ljmp
push
pop
or
cwtl
int
xchg
mov
adc
ficomps
mov
setb
jp
imul
mov
es
not
shll
daa
test
cmpl
xor
jmp
push
and
roll
jbe
jmp
xor
xchg
pushw
cmc
xchg
ss
and
dec
jmp
dec
adc
xchg
jge
pop
pop
mov
ja
pop
lret
mov
aam
and
addr16
les
mov
lcall
into
cmp
imul
int
push
mov
aam
adc
daa
repnz
mov
and
push
cmpsl
dec
cmp
cwtl
adc
jp,pt
roll
dec
jns
push
push
push
mov
roll
inc
outsl
or
inc
call
fwait
outsb
add
aam
jg
xchg
mov
push
xor
and
pop
jg
popf
add
inc
jo
call
pop
and
dec
test
repz
mov
fwait
adc
add
push
mov
mov
add
hlt
or
jns
mov
mov
shl
and
and
dec
pop
lret
mov
bound
dec
cmp
andb
in
add
jo
dec
out
sbbb
lcall
pop
sbb
mov
mov
insb
sti
push
cmp
shlb
push
in
pop
add
int3
aaa
mov
les
sbb
and
andl
icebp
xchg
subb
das
cmp
nop
int
adc
jp
dec
test
in
sbb
scas
pop
xor
xchg
test
int3
fs
movsl
mov
popa
or
jns
leave
loope
or
movsb
cs
rsm
fcmovne
inc
jg
call
lret
mov
rcrb
xchg
cmp
fbld
fiaddl
repnz
jge
jmp
push
adc
mov
dec
or
inc
pop
xor
pop
push
sub
dec
scas
adc
cli
insb
mov
mov
cltd
jno
push
stc
sub
xor
daa
addr16
jecxz
xor
xchg
lds
imul
fsubrl
jnp
xchg
sub
cmp
outsb
aaa
out
popf
scas
inc
outsl
jmp
jno,pn
icebp
mov
fsubs
fcmovu
cmp
push
xchg
test
mov
movsl
lds
daa
dec
sub
sbb
in
xor
jg
mov
mov
mov
fsubs
xchg
rcl
in
gs
pop
mov
sti
sub
jns
cmp
scas
jo
xchg
inc
xchg
inc
loope
aas
pop
data16
add
mov
inc
sub
sarl
out
mov
adcb
cltd
jl
inc
inc
call
mov
mov
ja
fiadds
cmpl
cld
cli
nop
push
fwait
cli
or
test
test
jmp
mov
jg
jmp
push
or
or
mov
sbb
adc
addr16
lds
gs
add
daa
test
fsubrp
enter
cmp
imul
jl
push
mov
fwait
dec
dec
mov
stos
popl
test
mov
mov
lods
push
inc
je
clc
push
mov
jge
or
popf
jg
add
scas
pushf
or
enter
dec
stos
dec
repz
push
mov
xchg
fcompl
mov
sbb
inc
sbb
push
scas
push
test
sahf
sub
dec
in
std
fcoms
ja
and
mov
mov
int
mov
dec
dec
test
ret
mov
adc
incl
movsb
sub
dec
icebp
cmc
and
iret
mov
pop
jmp
xor
push
int3
or
dec
and
lcall
mov
pop
out
inc
inc
popf
cmp
dec
cli
out
adc
xor
inc
jae
push
pop
cmp
fsub
sub
repz
jmp
pop
or
in
jecxz
jo
test
mov
sarl
das
shll
lcall
mov
icebp
and
xchg
out
outsl
ljmp
out
or
mov
inc
add
dec
push
add
jbe
insb
call
mov
pop
int3
xchg
loopne
mov
xchg
pop
dec
jl
and
adc
repnz
sar
pop
movsb
adc
fs
xchg
daa
sub
sbb
icebp
sahf
jne
out
aas
aad
xchg
inc
mov
cmp
jae
daa
into
inc
out
js
rcrl
ljmp
enter
add
pop
stos
std
mov
sub
imul
pop
push
xor
xchg
ds
cmp
lods
loope
sub
shlb
push
mov
repnz
int3
xor
or
add
int3
out
jo
fmul
pop
lret
jge
xchg
aad
pop
or
adc
lods
int
cmc
scas
shl
imul
adc
scas
and
rcr
dec
lods
adc
dec
loop
inc
fsub
mov
or
cmpb
sahf
loopne
ljmp
ficomps
lods
pop
loope
xchg
sbb
andb
cmpsb
nop
fmull
add
inc
sbb
pop
xchg
inc
sbb
pop
push
jbe
sub
jne
outsb
sbb
das
pop
pop
rorl
out
xor
jne
mov
pop
aam
add
movsl
fucomi
nop
test
inc
mov
insb
in
push
jnp
fstpl
jae
jge
pop
dec
pop
lahf
jle
es
repnz
loopne
test
inc
lret
mov
mov
clc
fidivl
insb
mov
cmpsb
xor
repnz
mov
push
aad
fsts
stos
xor
and
mov
jle
lock
pop
ss
mov
xchg
imul
and
jbe
cs
push
cmc
sar
vmovd
and
add
js
pop
sti
out
jnp
adc
adc
add
pop
mov
or
lahf
add
repz
fsts
cli
icebp
shrl
add
mov
leave
addr16
and
imul
xchg
inc
pop
jo
ss
std
mov
sub
fsubs
insb
into
jg
adc
mov
and
in
leave
jp
mov
je
jp
push
inc
in
arpl
mov
outsb
imulb
mov
mov
push
outsb
ja
pop
ljmp
dec
imul
adc
clc
int
stos
fcomi
ss
push
aaa
std
push
outsb
adc
ret
jnp
shrl
mov
sarl
add
movb
pop
adcl
push
xchg
insb
adc
ret
faddl
imul
xchg
dec
pusha
lea
loop
fucomp
pop
sahf
add
jle
loope
arpl
push
sbb
jne
or
or
inc
popa
inc
sbb
or
jnp
cs
andl
add
mov
cmp
dec
imul
pop
fwait
rclb
pop
sbb
mov
aad
in
ja
or
in
mov
adc
inc
mov
xchg
xchg
jae
xchg
pop
mov
mov
cmp
fldl
pop
push
cmpl
add
scas
cmp
fdivl
out
mov
jle
jbe
pop
xchg
imul
data16
packuswb
xchg
icebp
out
jle
in
push
lods
out
ja
xlat
xchg
inc
icebp
mov
mov
sub
adc
bound
stos
stc
add
inc
push
rol
mov
mov
movsb
xchg
in
das
lock
adc
jbe
xchg
stos
mov
sbb
icebp
inc
push
cmp
jmp
scas
and
insl
fdiv
stos
cmove
std
outsb
decl
mov
jo
loopne
iret
js
mov
jno
cmp
icebp
aas
jno
test
jnp
divb
lods
pusha
xchg
andb
add
negb
dec
pop
jb
and
cmp
icebp
and
mov
dec
pop
sub
lea
jnp
pop
addr16
xchg
into
dec
lock
leave
popa
out
mov
jne
add
arpl
roll
in
nop
mov
stc
bound
pop
inc
and
mov
sub
mov
cmpsl
scas
adc
mov
adc
ljmp
or
push
gs
jp,pn
mov
rcl
mov
mov
pop
jp
shlb
clc
stc
insb
pop
and
xlat
mov
xchg
jb
mov
sub
sub
inc
dec
sahf
sub
push
push
lds
mov
mov
jecxz
mov
jbe
nop
js
pop
pop
dec
outsl
ret
in
cmp
ja
adc
out
cmp
notl
push
xor
repnz
scas
test
orl
arpl
push
push
es
shll
rcrl
aas
in
cli
push
icebp
mov
push
mov
mov
mov
int
jo
int
lahf
inc
imul
loope
or
dec
add
hlt
icebp
jg
pop
adc
mov
jo
in
push
into
mov
lods
icebp
cmpsl
and
pop
aam
sub
sbb
ja
jg
dec
xchg
or
shrl
jecxz
mov
pop
add
js
daa
testb
aas
pushf
dec
mov
lods
int3
pushf
jp
lods
dec
push
and
mov
enter
inc
daa
inc
aaa
outsl
shll
mov
ja
jge
outsl
cmp
xchg
shrl
jae
popf
lret
xlat
sub
mov
add
fsts
jmp
push
scas
mov
fstl
add
and
mov
or
leave
fdivs
pop
loopne
sbb
test
mov
rcll
inc
mov
adc
cmp
clc
xchg
cmc
mov
lcall
das
lea
mov
mov
or
ljmp
jbe
adc
cli
xorb
ret
cmc
mov
pusha
inc
mov
into
adc
iret
std
push
jbe
in
add
add
out
rcrb
loope
pop
es
rolb
add
jle
ja
jb
lds
mov
adc
xor
xchg
push
cmc
jb
loop
negb
dec
movsb
xor
ja
dec
lret
sub
and
mov
aam
sub
fadd
inc
xchg
push
mov
xor
sarl
dec
or
push
mov
dec
and
pop
xchg
jns
mov
push
fwait
dec
cltd
pusha
pop
cmc
loop
repnz
pusha
xchg
shlb
imul
adc
inc
sbb
or
xchg
fmull
sub
out
push
mov
bound
jg
movsb
pop
add
mov
icebp
mov
in
scas
xchg
jno
jbe
pushf
ss
jmp
in
pop
aam
add
mov
ret
xchg
or
and
cmpsl
dec
pushf
push
cmc
xor
pop
push
int
jmp
fisubrl
pop
in
xchg
int
jnp
inc
testb
sahf
fs
sti
fdivs
and
add
mov
mov
fisubrs
jmp
xlat
divl
sarb
xlat
push
test
bound
movsl
call
dec
test
and
pusha
shrb
push
loopne
and
jae
loopne
sbb
inc
jg
cld
pop
leave
daa
xchg
cmp
xor
dec
xor
sbb
test
in
cmc
pop
ljmp
jnp
or
pushf
sub
data16
sub
arpl
pop
sbb
sbb
xchg
mov
dec
mov
xlat
and
or
fwait
xadd
dec
jb
mov
push
mov
mov
stos
sbb
add
lahf
mov
sbbl
rclb
ds
pop
xchg
mov
mov
arpl
std
scas
pop
into
scas
test
push
adc
add
out
jle
daa
and
sub
cmp
xchg
insb
xchg
imul
pop
and
popa
popa
lods
js
out
or
pop
fldcw
data16
xor
pushw
cld
pop
and
int3
dec
data16
push
push
js
dec
pop
int3
sbb
popf
mov
cmp
mull
inc
inc
cmp
mov
call
jns
adc
pop
add
jle
or
adc
lock
andb
and
mov
or
jg
ljmp
decl
sub
movsb
cmp
or
outsl
xlat
jmp
jl
xor
outsl
and
push
mov
je
sub
xchg
gs
popf
jmp
das
push
aad
lea
inc
xchg
mov
xchg
push
jge
addr16
push
mov
nop
jp
pop
cwtl
xchg
mov
sbb
testb
or
sub
out
loop
into
dec
mov
arpl
and
xorl
hlt
xlat
jg
shlb
xchg
fisttpll
lcall
push
stc
mov
in
xchg
dec
mov
adc
rorb
int
jecxz
mov
sub
xor
pop
imul
repz
arpl
fsubs
ja
push
pop
mov
jp
lahf
dec
dec
icebp
and
outsb
cmp
sub
mov
fistpll
xor
cmp
mov
mov
inc
cli
ud0
push
sarb
pop
pop
cmp
mov
fdivs
out
clc
sbbb
xchg
sbb
inc
add
push
cmp
pop
push
cmpsb
pusha
imul
loopne
push
jge
mov
sbb
add
mov
aam
ljmp
aaa
pop
jecxz
inc
mov
inc
jmp
pop
xlat
pop
in
imul
mov
jns
les
aam
aad
test
lods
data16
fisttpll
push
mov
fdivs
call
pop
addr16
loopne
in
fnsave
sbb
dec
fnstsw
fadd
cmpb
out
imulb
outsb
call
or
xor
xor
cli
xchg
mov
stos
bound
clc
lock
or
or
mov
jmp
cmp
or
xchg
push
inc
repnz
xchg
call
cmp
inc
mov
mov
lret
dec
js
loop
cmp
bnd
cmpsb
daa
mov
inc
adc
adc
stos
inc
fsubrl
xchg
mov
aam
test
cmp
mov
sbb
push
int
add
sub
mov
pop
jmp
pop
iret
mov
cmc
in
outsl
stc
jne
sbbb
lret
aaa
in
lahf
or
mov
iret
jle
ja
mov
inc
mov
or
dec
adc
jno
sub
jnp
lods
clc
sub
jmp
adc
in
push
mov
fldt
clc
cs
sbbb
mov
roll
cmp
push
pop
jb
pop
pop
jno
mov
jns
lods
pop
cmp
lock
int
sarb
add
xlat
iret
je,pt
stc
in
cmp
add
fmuls
mov
adc
adc
outsl
ret
dec
dec
daa
fs
or
jbe
and
ror
out
lret
push
fnstsw
out
add
and
dec
in
pop
lods
pslld
arpl
or
push
fcompl
pop
call
jnp
data16
cmp
adc
pop
adc
add
aam
stc
std
push
in
xor
dec
insb
cwtl
xchg
dec
mov
insl
sbb
ret
fucomp
orl
lret
dec
xchg
lcall
cmpsl
and
sub
or
mov
je
mov
das
mov
push
aaa
ficoml
and
dec
sbb
cs
cmp
hlt
enter
cmp
stos
movsb
pop
jmp
jp
and
and
sub
mov
add
lods
mov
inc
cmp
pop
test
aas
fbld
mov
lock
std
inc
leave
stos
sub
inc
rorb
cs
mov
loope
push
ret
sub
shlb
xchg
dec
pop
cmc
pop
fsts
pop
sahf
movsb
adc
iret
add
out
stos
pop
add
and
adc
or
clc
out
mov
sbb
nop
xchg
loope
sbb
mov
fsubp
adc
push
jb
sub
push
stos
sub
add
lods
rcpps
lahf
inc
xor
sbb
jno
and
and
mov
or
cli
xchg
clc
push
fdivrs
pusha
sub
inc
cli
adc
or
push
sub
dec
pop
lret
and
sub
mov
out
dec
shll
mov
lods
adc
pop
cmpsb
aam
arpl
sti
cli
andl
sbb
shrl
jmp
aas
sbb
fbld
lods
sbb
adc
push
ret
notl
dec
sbb
test
sbb
in
add
je
and
mov
fidivl
and
ret
loope
sahf
push
adc
xchg
sub
dec
adc
repnz
cmp
negl
hlt
mov
mov
xchg
cli
lods
pop
fneni(8087
ret
and
adc
mov
xlat
fdivrs
mov
out
lods
and
sub
lods
call
pop
jmp
js
add
xor
negb
call
lahf
sbb
and
jo
sbb
outsl
stc
xchg
add
insb
jmp
movsl
fidivs
out
mov
imul
mov
daa
call
repz
in
xchg
fstpt
insb
push
xchg
pop
jae
sbb
and
sti
insb
ss
mov
inc
insb
mov
xchg
jnp
xchg
ja
test
scas
inc
lods
mov
adc
push
or
jl
cltd
jno
xor
add
dec
push
push
rclb
int
xchg
aam
out
cmp
lret
and
sub
adc
jp
cltd
div
dec
stos
incl
or
scas
jno
add
pop
pop
ss
mov
out
or
mov
std
pop
sub
out
insl
add
shl
aad
in
aad
jno
aad
enter
mov
xchg
aas
repz
bswap
movsl
dec
pushf
xchg
pop
mov
jno
fists
mov
out
sbb
cmp
sbb
fucomip
or
ror
inc
dec
cmc
test
jnp
in
roll
in
pushf
push
mov
and
sbb
inc
jp
ljmp
mov
push
mov
movsl
mov
xchg
addl
cmp
aaa
jg
cmp
mov
or
cltd
mov
adc
mov
push
rorb
sub
sub
pop
int
es
loope
mov
movsl
and
rcll
loop
add
dec
push
add
lods
adc
sbb
mov
sub
jb
adc
jbe
sub
xchg
inc
lret
les
stc
jno
inc
or
sar
add
sahf
mov
xchg
jns
cmp
mov
dec
out
pop
xor
or
movl
mov
sbb
push
es
cmp
lahf
and
mov
jecxz
dec
xchg
leave
jecxz
dec
dec
mov
shl
loop
leave
push
cmp
xchg
rcll
hlt
push
xor
into
lds
into
adc
sub
mov
mov
adcl
inc
repnz
icebp
jmp
push
ljmp
xor
cmpsb
or
into
addr16
xchg
leave
stos
ret
mov
xchg
mov
adc
and
mov
test
adc
fstl
or
call
insl
sbb
push
daa
cli
sbb
push
inc
jge
mov
xor
aas
add
insl
mov
push
mov
jp
inc
mov
push
sbb
pop
inc
pop
out
int
pusha
out
insb
mov
adc
add
daa
fistl
pop
add
or
repz
clc
push
push
inc
xor
push
or
dec
mov
popa
mov
mov
add
mov
dec
mov
inc
fistl
test
and
or
cmp
jle
jns
push
cmp
mov
dec
andb
lock
clc
push
and
jae
rcrl
mov
dec
pop
nop
xchg
add
aas
icebp
test
cmp
int3
and
mul
dec
cmp
addb
mov
xor
xchg
cli
adc
stos
mov
push
and
leave
jle
js
jl
adcl
rcrb
push
mov
fucomip
stos
test
add
outsb
fcmovnbe
push
mov
xchg
dec
fwait
or
xlat
mov
push
lock
dec
xchg
adc
cwtl
inc
and
and
mov
push
ja
enter
add
push
in
cwtl
mov
pop
loop
mov
mov
pushl
add
ret
sbb
add
mov
in
jl
sub
cmpb
inc
fwait
add
rolb
bound
fsubr
stos
sub
outsl
std
pop
dec
mov
out
or
lcall
test
gs
ds
lock
roll
adc
xor
add
aas
jb
ret
rolb
xor
inc
xchg
stos
jl
push
fcmovne
sbb
in
sbb
fildll
fiadds
cltd
scas
ds
push
imull
sbbb
or
pop
dec
ss
popf
out
in
add
xor
ret
fcoml
lods
mov
mov
inc
imul
aam
rolb
push
xorb
loopne
fdivrs
cwtl
mov
xor
hlt
int
hlt
inc
jecxz
dec
and
cs
mov
dec
xor
and
jmp
scas
push
divb
popf
pop
int
lahf
mov
arpl
sarl
insl
jo
jno
sarl
das
pop
fiadds
into
movl
sbb
stc
stc
and
imul
repz
test
lcall
pop
addr16
sub
mov
dec
cld
test
mov
xor
push
dec
aaa
push
int
adc
push
push
jl
jecxz
jae
jge
sbb
or
test
popa
sti
cmp
jp
movsb
push
and
or
jo
fsubl
xor
cmp
jb
push
xchg
push
hlt
loope
loope
insl
push
cmp
mov
imull
aaa
push
fwait
xchg
jmp
mov
adc
pop
icebp
pop
movsl
js
insl
cmpb
jbe
iret
popa
test
and
mov
in
or
pop
pushf
pop
testb
or
test
mov
aad
outsb
cmc
popa
mov
mov
test
adc
inc
movsb
mov
sub
stc
add
cmp
jmp
sbb
data16
or
js
sub
and
or
inc
jns
dec
push
dec
dec
xor
out
sti
mov
stc
xchg
ret
add
xor
jmp
jae
pop
sti
das
outsb
adc
xor
mov
and
pushf
int3
add
and
icebp
imulb
les
leave
pop
ja
lea
int
fwait
inc
xor
adc
pop
mov
mov
outsb
into
mov
repz
and
sbb
insl
sub
cmpsb
gs
fsubl
iret
shrl
push
fistl
fmul
add
loopne
and
fs
cs
xor
outsl
inc
xor
clc
in
mov
xchg
je
dec
mov
test
xor
pop
pop
mov
inc
jno
sarl
cwtl
aam
pop
loopne
cld
cmpsl
mov
movsl
adc
loop
xor
add
push
loop
fldl2e
iret
es
dec
inc
mov
divl
dec
mov
es
sub
mov
xchg
jecxz,pt
rolb
and
scas
xchg
mov
lock
add
cli
out
stos
out
cmp
adc
pop
cmpsl
test
add
cmpsl
and
ret
push
or
int
xlat
rorl
adc
or
scas
data16
loope
aaa
push
xor
mov
lods
dec
jnp
insl
mov
ljmp
or
ret
clc
jb
in
adc
data16
push
dec
push
pop
addr16
sbb
hlt
and
hlt
jns
pop
mov
pop
push
push
arpl
in
icebp
xor
inc
mov
mov
daa
add
int
lods
add
inc
aas
xlat
or
repnz
je
push
stos
in
ficoms
add
stc
jnp
jg
pop
lahf
adc
popf
repnz
mov
fwait
mov
testb
jmp
pop
sbb
push
lahf
inc
jae
mov
mov
cmpsl
or
nop
test
ljmp
push
je
mov
aad
test
es
pop
xor
lret
push
in
add
rorl
xchg
mov
lods
cld
mov
cli
mov
jb
xchg
in
pop
sbb
cwtl
mov
negb
cmp
push
adc
mov
cmp
pop
xchg
scas
adc
repnz
fldenv
dec
or
push
and
leave
add
enter
mov
shrl
jae
incb
xchg
loope
xchg
daa
adc
and
shlb
test
cmp
out
cmp
mov
and
jb
mov
rcr
pop
xor
push
jle
push
enter
or
sbb
lock
out
addr16
push
adcl
clc
sub
ret
dec
mov
or
hlt
jae
xchg
call
lret
sub
ds
pop
cld
mov
xchg
into
pop
lahf
cmp
xor
sbb
enter
pop
lea
cltd
and
pop
xchg
pop
sub
out
sti
int
scas
dec
cmp
scas
pop
daa
mov
sbb
ds
xor
fiadds
add
cmpsb
daa
aas
sub
lea
pop
cmp
fsts
out
lea
sub
xchg
lods
lret
pop
aas
into
pop
mov
mov
test
pop
jb
sub
xchg
adc
inc
fidivl
decl
loope
pop
ret
stos
loope
cs
js
mov
in
cmp
ret
pop
ljmp
pop
mov
mov
shll
xchg
lret
in
push
cmc
mov
or
sub
or
add
adc
test
test
mov
outsl
push
or
and
mov
adc
vmulss
icebp
fstp
dec
js
push
dec
xor
xlat
pop
or
cwtl
xchg
xchg
mov
sbb
loope
inc
xchg
sarl
sub
pushw
je
nop
ja
pop
add
cwtl
pop
in
sub
inc
inc
push
inc
pop
push
and
orb
ljmp
sti
test
mov
les
xchg
mov
movsl
arpl
pusha
popf
bound
loopne
push
mov
inc
cli
push
inc
xor
add
subl
fiadds
mov
rorl
shll
scas
nop
and
test
add
pusha
je
sub
fsubrs
mov
repz
jge
icebp
stos
push
popf
push
jb
add
ds
jmp
sub
popf
mov
movb
xchg
xorl
lahf
data16
xchg
mov
adc
jb
jbe
faddp
xor
or
adc
fst
sbb
mov
lea
or
lahf
xchg
xchg
push
mov
cmpsb
cmp
add
fsubl
insb
mov
icebp
es
jno
xchg
jbe
jo
lcall
or
sbb
aas
out
mov
cld
pop
sbb
xchg
push
mov
pop
mov
leave
mov
mov
xchg
loope
xor
jae
out
gs
mov
push
lret
push
mov
and
inc
push
dec
loop
ss
test
hlt
mov
inc
in
mov
and
mov
addr16
add
scas
and
popl
jae
ds
jnp
in
jl
add
daa
sbb
nop
push
test
arpl
cs
insb
popf
push
push
add
fucomi
xchg
movsl
xlat
insl
dec
iret
popa
or
scas
add
insl
jne
adc
cltd
hlt
imul
rolb
je
lcall
ret
cmp
add
ss
jmp
push
push
cmp
add
and
push
xor
xchg
dec
cltd
push
adc
pop
mov
idiv
mov
push
cmp
pop
mov
in
adc
popf
lods
mov
daa
sar
jmp
xlat
xchg
shrb
jge
scas
push
sahf
repnz
sarl
jp
adc
jmp
out
mov
xchg
test
push
inc
pop
movsb
adc
jmp
cmpsl
loopne
cwtl
pop
pop
add
xchg
cmp
sub
mov
jl
inc
loope
test
popa
mov
cli
neg
pop
push
daa
adc
repnz
xor
jmp
stos
add
jne
aad
xchg
mov
dec
pop
or
lahf
aas
cwtl
repnz
iret
adc
dec
fiaddl
sbb
adc
bound
stos
int3
out
lods
push
mov
jnp
cmpsb
test
aaa
dec
mov
sub
mov
sub
xchg
and
xchg
scas
pop
or
mov
aam
cmc
jbe
and
sub
xchg
push
mov
mov
dec
test
dec
daa
pop
ret
hlt
ljmp
faddp
fstpt
push
repnz
sbb
pop
popf
clc
mov
rol
or
mov
addr16
fs
sbbl
mov
jg
mov
push
sub
nop
call
jno
mov
repnz
xchg
push
mov
xor
mov
fucomp
imul
outsl
push
pop
sub
xchg
or
jl
js
push
enter
icebp
gs
push
jbe
bound
xor
dec
xchg
bound
loope
xchg
jne
mov
in
insb
mov
aam
fwait
push
outsl
mov
cmp
or
add
adc
adc
jns
sub
gs
push
icebp
inc
xor
stos
jge
mov
jle
inc
pop
ret
or
pop
rorl
and
or
aam
cmc
sbbl
sub
inc
adc
mov
ja
adc
outsl
xor
sti
int
mov
xchg
adc
mov
clc
jmp
test
mov
cwtl
movsl
arpl
mov
in
and
repnz
test
or
fildl
fcoml
imulb
int
movsb
jne
mov
mov
and
ss
mov
out
jmp
pop
cmp
test
nop
mov
in
push
xorl
inc
clc
rcll
mov
sub
adc
out
das
hlt
test
push
jbe
xchg
aam
mov
xor
mov
mov
mov
cli
inc
rolw
add
cmp
mov
xchg
out
adc
mov
movsl
dec
pop
mov
xchg
mov
inc
mov
or
lea
pop
test
test
cmp
stos
mov
sti
adc
out
mov
push
and
adcl
popa
jae
pop
jle
mov
pop
pop
lods
mov
push
popf
sub
sbb
pushf
movsb
stos
xchg
push
andb
rol
js
lds
jns,pt
in
cmp
sub
into
cmpl
imulb
lcall
mov
mov
or
adc
xchg
adc
paddw
add
lods
lret
ljmp
fwait
mov
pop
addr16
fisttpl
or
xor
roll
inc
fmull
lret
mov
cs
je
xchg
hlt
jp
mov
popa
clc
hlt
push
faddl
inc
mov
fcoml
flds
jne
xlat
bound
sti
lds
lret
std
pop
mov
rolb
dec
repz
mov
xlat
popf
arpl
add
mov
repnz
mov
stc
jno
out
in
pop
gs
jns
test
xchg
push
sbb
sbb
mov
push
push
data16
pop
cmp
pop
xchg
xor
jecxz
nop
in
rcrl
mov
or
mov
mov
out
push
sbb
movsl
addr16
adc
jne
gs
xchg
pushf
leave
dec
sbb
sub
cwtl
adc
xor
and
adc
shlb
sub
adc
js
repnz
xchg
or
xchg
dec
loop
icebp
jl
sahf
sbb
aaa
into
ret
adc
shl
or
cwtl
lods
clc
addl
cmp
cmp
push
ror
pop
xchg
and
fsts
jno
out
mov
lret
popf
push
les
mov
mov
sbb
sbb
push
negb
fstps
jmp
bound
int
dec
aaa
lcall
inc
iret
clc
xlat
xor
mov
aas
or
scas
add
nop
inc
mov
adc
cmp
rcrl
cmp
xchg
lahf
sub
fsubrl
rorb
pop
or
negb
pop
push
hlt
fdivl
push
pop
ret
in
repnz
mov
push
mov
xor
adc
mov
fadd
mov
test
mov
out
cmp
add
cmpsl
movsl
cltd
leave
push
push
shl
pop
pusha
adc
adcb
mov
dec
jmp
dec
push
in
mov
fdivs
enter
rcll
rcll
lret
inc
pusha
mov
movsl
cmp
cmpsl
jecxz
pop
stos
add
and
xor
inc
cmp
js
push
inc
xor
aaa
jle
push
and
push
je
lock
data16
scas
and
jno
xor
setp
mov
inc
movsb
cltd
stc
dec
mov
sub
mov
mov
scas
mov
lods
aad
pusha
out
mov
out
scas
sbb
cmp
scas
inc
cmp
mov
lret
aam
lahf
leave
jae
fcoms
fnstenv
push
fldcw
jl
xor
ud2
mov
xor
mov
sbb
mov
jns
cmp
adc
xor
mov
mov
adc
incb
mov
push
inc
push
in
addr16
xlat
aas
xlat
scas
jo
addb
or
fwait
mov
das
mov
sbb
aam
jle
add
or
mov
mov
fidivrs
out
popf
mov
adc
call
int
push
xor
jg
ficompl
sub
paddd
mov
paddw
push
xchg
or
scas
push
leave
sbb
insb
pushf
shl
clc
and
icebp
outsl
push
sbb
mov
dec
add
mov
test
icebp
out
fisttps
mov
std
sub
insb
adc
les
dec
mov
shll
mov
push
dec
imul
mov
cs
ljmp
jae
rcll
xchg
fsub
add
iret
push
testl
sub
push
loop
not
dec
cmp
loopne
xor
loop
cmp
xchg
jns
das
loop
adc
sbb
cwtl
fwait
mov
push
stc
or
scas
cltd
push
addb
or
pop
fsts
mov
aam
testl
inc
popl
popa
call
shlb
stc
mov
loope
fcomp
hlt
aaa
or
adc
jne
into
sub
mov
ret
inc
pop
sahf
rol
in
jns
mov
int
out
pop
jb
iret
shll
ljmp
ret
add
xchg
xchg
cmpb
or
mov
lods
xchg
push
xchg
dec
add
mov
ljmp
push
lret
ljmp
pushf
inc
inc
lret
push
pop
in
sub
inc
mov
adc
movl
lret
shr
inc
movsb
mov
int3
pop
xchg
pop
jbe
mov
push
jmp
iret
inc
jae
pop
arpl
mov
and
push
or
fmulp
data16
add
rol
push
dec
xchg
and
jmp
xlat
pop
mov
hlt
push
fcoms
jle
add
sub
jmp
jle
cmpsl
int
push
outsb
xor
fnstenv
cmp
dec
or
into
pop
daa
mov
lahf
jb
das
pop
sub
mov
insl
cwtl
nop
pusha
insb
ja
out
andl
scas
test
fnsave
sbb
testl
mov
adc
stos
mov
jns
mov
sub
xor
mull
jge
jl
lret
imul
xchg
and
aam
js
enter
fimuls
sbb
lea
sahf
pop
xchg
ds
cmp
push
dec
pop
add
sub
insb
fmuls
testb
daa
add
xchg
dec
push
adc
mov
jle
pusha
cli
jp
arpl
scas
or
xor
mov
sub
jno
pop
pop
push
in
ret
pop
fnstenv
loopne
adc
dec
sysenter
icebp
scas
sahf
fnstcw
adc
and
repz
in
outsb
jns
push
xor
cltd
rorl
fstpl
fs
shll
iret
cltd
daa
ret
push
adc
test
scas
insl
mov
fbld
je
sub
xchg
into
leave
push
shl
jnp
xor
mov
pop
jb
mov
xor
and
mov
rorl
into
adc
mov
out
bound
out
cmpsb
pop
push
pop
std
fdivr
in
add
out
or
loope
or
push
in
popf
nop
stos
and
push
add
or
ja
mov
aaa
mov
loopne
and
cmc
adcb
ret
test
aas
jl
mov
mov
enter
shll
scas
mov
test
mov
xor
rcr
jb
ret
je
int
gs
jecxz
loope
dec
mov
and
dec
xchg
or
and
or
mov
or
xor
adc
sub
pop
mov
lock
aas
mov
xor
cwtl
or
xor
and
arpl
dec
cmp
mov
pop
fadds
cltd
adc
jl
sbb
xor
in
shlb
lock
sti
cltd
out
in
mov
shlb
add
pop
int
leave
jmp
jg
mov
or
ds
cld
arpl
jmp
push
pop
lods
xchg
adc
in
mov
jp
push
xor
mov
jmp
inc
cmpsl
je
lret
or
jmp
cmp
fisttpl
addr16
sub
fmul
mov
xchg
sub
loop
jo
jbe
jge
das
scas
inc
stc
pop
movsb
inc
orb
rolb
and
stos
in
in
jl
lret
dec
mov
icebp
punpckhwd
or
faddl
xor
loop
xor
divl
add
mov
mov
mov
dec
sbb
inc
cmc
xchg
xchg
adc
repz
icebp
cmp
fstl
xor
push
stos
stos
pop
jbe
ds
or
cli
sbb
ljmp
push
aam
sub
xchg
pushf
sub
pop
pop
push
cmc
movsl
mov
cmp
jl
mov
imul
sti
stos
cmp
push
andl
xchg
icebp
aaa
mov
mov
mov
jbe
push
jnp
pop
cmpsl
or
sbb
dec
stc
cmc
sbb
dec
cmp
dec
mov
xor
xchg
arpl
mov
and
sub
mov
daa
xchg
jmp
adc
ja
stc
cmpsl
pop
andl
outsb
and
mov
notl
add
or
xor
rcrb
cmp
clc
lea
lods
cs
jecxz
int
je
lcall
xchg
and
aas
hlt
fisubs
jge
jecxz
fidivs
test
sbb
jbe
bound
mov
or
cli
test
push
mov
fwait
dec
mov
ss
sub
icebp
dec
add
xchg
std
xchg
fbstp
pcmpgtd
pop
into
fdivl
shll
sbb
sti
daa
mov
add
das
xchg
jbe
push
outsb
fs
rclb
test
pop
mov
in
test
push
or
add
roll
dec
lock
popf
flds
loop
xchg
lods
sub
inc
add
test
lret
in
xchg
xor
jmp
or
push
push
or
jae
in
sub
inc
shrb
add
or
ja
xchg
pop
imul
icebp
pusha
or
subb
xor
lret
pop
negl
test
sbb
add
iret
jae
mov
sub
cli
popa
xchg
lods
outsl
cmp
jae
sti
pushf
stos
xchg
jle
test
outsb
inc
dec
or
cmpb
in
int3
cs
lret
loopne
or
gs
les
cmc
or
cmc
cmp
sub
fsts
hlt
shl
jnp
stos
xchg
popa
or
adc
sub
popf
ret
push
loope
bound
cmpsb
jecxz
mull
jl
ret
cmpsl
pushf
scas
fwait
clc
sbb
mov
stc
dec
sub
xchg
adc
std
sahf
repnz
pop
ret
lahf
mov
jg
popl
jp
adc
push
lock
jo
idivl
adc
cmp
lcall
int3
xchg
or
ret
int3
shll
jbe
cmpsl
xchg
pop
jmp
push
in
add
lahf
imul
outsl
lcall
mov
sub
orl
lods
fdivs
mov
pop
xchg
sbb
mov
stc
and
sub
sbb
pop
jo
stos
or
xchg
sub
mov
inc
jne
outsb
mov
mov
xchg
and
sti
pop
add
mov
inc
sub
push
or
mov
imul
sti
imul
cs
fucomp
mov
les
outsl
roll
xor
adc
push
or
bound
stos
mov
jle
add
lds
mov
adcb
adc
loop
ds
dec
jo
stos
loopne
adc
dec
mov
std
mov
pop
out
loope
loopne
aad
mov
int3
sub
or
fdivl
dec
in
add
out
popf
and
xor
outsb
sbb
repnz
xchg
das
pusha
test
lods
cwtl
cltd
push
ret
push
jne
into
test
xchg
popf
fdivrl
out
xor
gs
fsts
shrb
sbb
sub
call
cmpsl
aaa
stos
lret
xlat
push
dec
xchg
rclb
add
inc
int3
push
ja
mov
ror
push
inc
cmp
sbb
icebp
aad
mov
add
idivl
pop
loopne
fwait
sbb
int
xlat
or
xor
push
mov
addb
xchg
aad
inc
insl
loopne
outsb
and
cli
in
mov
in
popf
inc
data16
mov
inc
xchg
pop
and
andb
scas
rolb
cwtl
gs
adc
mov
stc
jo
or
sub
xchg
push
jo
sbb
xor
mov
pop
pop
or
and
push
pop
mov
cmp
jbe
xchg
mov
aaa
cwtl
adc
in
mov
jb
fstpt
dec
jbe
jg
test
out
sbb
push
test
jns
cmc
add
cmp
sarb
ret
les
inc
lret
inc
pop
or
push
and
jge
bound
adc
fisubrl
aaa
addr16
aaa
push
movlps
dec
dec
nop
dec
pop
inc
jg
aad
push
lock
out
pop
fadds
inc
and
test
lds
cmpsb
push
clc
jle
dec
aaa
pop
lea
sub
outsl
mov
call
cmp
lret
sub
fcom
xchg
or
push
movsb
cmp
cld
ja
sbb
nop
in
and
sbb
mov
xchg
loope
jp
leave
xlat
es
cmp
cltd
pushf
cmp
mov
pop
cli
sub
movsb
xchg
add
xchg
es
jl
xor
and
inc
adcl
sbb
hlt
stc
sbb
xor
sbb
or
inc
gs
stos
cmc
ret
inc
ret
jmp
cmp
add
fcomip
mov
out
subb
mov
inc
cmp
fwait
inc
lds
mov
pushf
push
xchg
sbb
xor
pop
jns
lock
in
dec
xchg
lods
fwait
add
push
in
ret
aas
rcl
out
stc
mov
loope
insb
inc
or
mov
filds
mov
jl
dec
filds
cmp
mov
stos
cltd
ss
xchg
leave
push
shrl
push
test
ret
ljmp
mov
add
sbb
and
insl
pop
cmpsb
mov
shll
leave
sbb
lds
negl
push
sub
xchg
push
xchg
push
xchg
ja
dec
inc
sbb
pop
mov
jge
inc
es
aas
ret
fwait
pusha
xorl
mov
mov
pop
icebp
inc
test
pushf
pop
testb
mov
test
mov
std
sbb
push
cmp
fld
test
bswap
lret
cltd
lods
and
push
fdivrs
or
adcl
inc
dec
push
push
inc
test
sub
subb
mov
add
cmp
in
rcrb
push
outsb
sbbb
loop
cmpsl
mov
stc
repnz
dec
inc
mov
test
imul
ret
push
insb
and
js
push
mov
orl
ret
sahf
jnp
mov
pop
pushf
out
ret
add
rcl
mov
dec
and
push
test
cmp
mov
mov
dec
and
mov
xlat
inc
sbbl
xor
ss
and
sub
or
std
xor
add
imul
flds
test
lods
lock
cli
or
les
addb
es
fwait
push
aaa
mov
or
ret
in
bound
jns
fisubrl
and
es
jge
mov
adc
in
pop
xlat
and
aas
andl
lahf
fidivl
xchg
and
mov
pcmpeqw
sub
xorl
sbb
in
sbb
jo
or
retw
push
ret
mov
xor
jp
sbb
and
rep
add
in
leave
fiadds
sti
in
das
daa
out
fsub
jae
sti
call
add
pop
out
dec
sahf
mov
mov
daa
jb
cmp
mov
fdiv
subb
push
lods
test
push
data16
test
adc
inc
adc
cli
das
pop
jp
mov
hlt
lret
push
out
les
fsubl
in
sub
xchg
pop
nop
les
es
push
jo
dec
mov
data16
mov
fs
xor
dec
daa
mov
mov
adc
out
push
cld
rclb
nop
xor
mov
lret
repnz
pop
aad
mov
movsb
into
sub
into
cmp
std
inc
jp,pt
mov
loop
mov
cmp
pop
stos
inc
xor
pop
dec
xchg
push
leave
leave
nop
push
out
mov
xor
pop
and
sub
outsl
push
lods
fdivr
out
push
out
mov
mov
inc
lret
mov
mov
lods
notl
xchg
imul
shr
jnp
cs
aaa
push
xchg
dec
xor
push
arpl
mov
or
cmp
and
ds
lret
push
scas
nop
cmp
aas
mov
push
daa
push
stos
rorb
pop
xchg
fildll
inc
rorb
xor
mov
and
lods
aad
outsl
aam
xchg
mov
fsubrp
movsb
xchg
cld
std
xchg
aam
aas
dec
sbb
loopne
lods
mov
dec
push
add
sahf
push
je
mov
mov
push
adc
xchg
or
adc
icebp
leave
jge
and
jecxz
test
or
leave
sahf
xor
int
mov
push
push
testb
ficompl
loope
loopne
or
pop
dec
push
or
stc
push
xchg
scas
dec
sbb
rorb
xor
pop
fsts
jmp
add
shlb
jns
aas
xor
and
sahf
dec
jmp
xor
sub
add
leave
sbb
shll
lcall
and
adc
mov
stos
jp
fs
movsb
negl
bound
sub
mov
sti
loope
cs
mov
clc
dec
jl
test
mov
sar
aaa
pop
jg
int
cmp
insl
sub
sbb
or
cli
inc
lods
pop
loopne
jl
in
inc
jns
lret
fldlg2
and
lods
push
mov
sti
dec
lahf
int
enter
adc
mov
push
xlat
ljmp
xor
rcl
cmp
push
fcoms
dec
dec
daa
push
jmp
jb
loope
daa
and
negb
test
mov
jge
cmp
mov
bound
dec
int3
subb
adc
pop
and
add
jae
jns
adc
ret
in
loopne
and
repz
xor
rclb
mov
paddusw
repz
mov
insb
pop
and
add
xchg
fs
adc
ficoms
sub
data16
ja
out
add
stc
mov
jnp
movsl
and
push
pop
push
xchg
std
sub
and
enter
xchg
xchg
mov
inc
add
xchg
inc
xchg
test
push
pop
pop
ja
popl
dec
cltd
jbe
pop
ds
push
cmpb
js
test
cmp
out
mov
pmuludq
mov
test
push
or
sbb
fimull
push
sub
cmp
push
xchg
cwtl
enter
jb
mov
inc
jl,pn
scas
arpl
sub
in
inc
sub
mov
test
lds
gs
xchg
fiaddl
adc
mov
clc
dec
pusha
mov
or
ljmp
aas
test
call
push
dec
push
push
mov
popf
out
sbb
std
xchg
aam
mov
std
fsubs
push
pop
mov
aas
pop
pop
push
mov
aad
clc
xor
mov
arpl
ds
jbe
lds
push
inc
movsl
in
nop
cld
dec
jg
add
jl
mov
inc
sarb
ds
xor
and
in
pop
fwait
clc
int3
ret
ficoms
sub
xor
ror
loope
in
stc
lcall
ret
dec
loopne
int3
std
push
xchg
leave
cmp
imul
mov
mov
enter
shlb
cmp
rorb
xchg
inc
comiss
pop
int3
testl
je
cmp
popf
das
mov
push
mov
cwtl
repz
lcall
repz
and
cmp
adc
xorl
mov
stos
mov
mov
scas
mov
sub
inc
in
and
adc
add
dec
aas
push
addr16
dec
adc
sbb
adc
aas
in
inc
repz
cmc
jmp
frstor
repnz
lahf
dec
nop
dec
mov
int
loopne
int
add
je
insl
pop
mov
lret
push
push
dec
je
adc
sbb
xor
xor
add
in
daa
loope
in
xor
push
insl
sar
stc
adc
push
and
mov
adc
pushf
int3
mov
arpl
xchg
cmpb
leave
dec
ret
and
cmc
pop
nop
xchg
stc
ljmp
xchg
or
js
movsb
mov
nop
jo
inc
dec
mov
dec
neg
jo
inc
bound
sti
xor
mov
daa
mov
aad
xchg
cmp
mov
ret
sti
out
xchg
jns
out
xchg
cltd
rcll
xor
mov
in
mov
int3
mov
lret
mov
mov
jp
sub
sbb
mov
mov
std
out
hlt
addr16
xchg
scas
out
mov
fildl
sbb
sbb
clc
movb
arpl
das
xchg
divl
sub
lcall
and
fs
in
gs
mov
rcll
popf
dec
xchg
sahf
cwtl
jl
ret
into
faddl
js
mov
popa
mov
sub
cmc
dec
sub
pop
xor
lods
push
es
cwtl
xchg
addr16
push
xlat
adc
jne
mov
pop
lcall
icebp
bound
fs
std
adc
fisttps
push
lods
inc
sbb
scas
pop
pop
cmp
fs
dec
dec
mov
xor
jne
insb
xchg
push
sarl
add
mov
cli
sti
call
or
fbld
jns
dec
hlt
pop
dec
lcall
dec
adc
jnp
lock
xor
sub
data16
jnp
push
push
outsl
or
pop
nop
push
outsb
popa
add
adc
cmp
adc
movsl
or
ret
jmp
lock
jmp
mov
stos
push
mov
mov
inc
pop
fisttpll
ds
shl
jg
stos
push
mov
loope
fs
leave
sub
pop
sbb
add
fucomp
xor
lods
int3
loopne
pushf
out
sub
cmpsl
jne
cli
addb
dec
push
mov
ja
dec
or
mov
pop
iret
mov
mov
out
scas
sbbb
add
jmp
dec
sub
mov
mov
mov
mov
hlt
dec
shlb
mov
stos
in
loop
movsl
and
je
int3
mov
push
push
shr
inc
xchg
fists
sbb
add
rclb
jl
mov
or
mov
jno
jnp
push
xchg
es
mov
shrb
xor
sub
int
xchg
mov
lds
popf
cld
fistpl
mov
push
out
mov
xchg
lods
test
sub
and
psubd
pop
or
sbb
jb
mov
mov
sbb
add
push
or
fsts
sub
sub
test
inc
lods
and
lods
fsubs
pop
fldenv
test
xor
add
aas
xchg
icebp
repz
cltd
add
sub
sbb
add
sub
shr
icebp
out
dec
add
mov
adc
sahf
cwtl
mov
adc
fwait
int3
inc
xor
fdivl
aas
popa
insb
loopne
popa
ret
std
fwait
lods
ss
xor
mov
cli
daa
stos
mov
cmpsb
mov
pop
stc
mov
xor
popf
roll
sub
jge
sub
adc
or
mov
test
div
rorl
xchg
mov
inc
adc
xchg
mov
xlat
data16
xor
pop
int3
and
int3
inc
jns
or
ss
int3
in
lods
push
sbb
movsl
data16
fwait
jmp
mov
pushf
sub
in
push
sub
hlt
js
lods
mov
xlat
sbb
aam
movsb
push
std
clc
ljmp
imul
mov
pop
into
js,pt
xor
mov
xor
out
or
mov
sbb
in
pop
mov
lret
in
sbb
mov
sbb
addr16
jb
xor
sbbb
sub
pop
xchg
imull
adc
popa
push
ret
and
push
push
add
xor
cmp
push
cmp
stos
loop
ret
cwtl
rcr
cmp
dec
imul
loop
jg
shrb
mov
sbb
xchg
jb
hlt
fstps
ja
pusha
fsubl
or
es
mov
cmc
fsubs
or
inc
mov
xor
leave
sub
inc
enter
int3
faddp
mov
pushl
add
ficoms
jl
and
mov
xor
pop
loope
data16
mov
test
add
sbb
ret
aad
push
lret
lods
fcmovnu
lods
cmp
es
cmovle
adc
push
arpl
jne
lret
mov
mov
xchg
push
adc
jo
xchg
xor
cwtl
enter
jge
popf
fucom
dec
xor
lods
ret
add
test
adc
push
adc
mov
inc
fwait
aad
fnsave
subl
jecxz
icebp
ljmp
in
pushf
add
jecxz
and
push
cmp
sarb
scas
xor
popf
addb
adc
and
jl
fdivrs
or
xlat
icebp
out
loopne
adc
hlt
arpl
mov
mov
test
loope
pusha
mov
notb
mov
and
pop
pop
lcall
loop
loope
fnstenv
jge
mov
lcall
insb
jno
lret
stos
mov
sti
sbb
mov
movsb
lods
pusha
cmpb
fs
cmp
outsl
and
stc
mov
int
rorl
lods
or
push
cmp
xor
inc
jl
inc
adc
add
lahf
ret
shr
xchg
outsb
jae
pop
out
fidivs
mov
push
add
inc
les
inc
mov
xchg
lret
or
and
cmp
cmp
mov
ret
stc
push
cs
or
repz
cmp
cmp
mov
fs
int3
icebp
shr
xor
sub
mov
mov
and
or
mov
mov
jp
push
mov
test
fs
sub
and
mov
lods
sbb
ss
mov
mov
icebp
jbe
jae
jne
xor
xor
scas
cwtl
xchg
inc
sub
cmp
movsb
push
xchg
test
movsl
push
sub
xlat
dec
push
push
add
inc
cli
inc
insl
test
xlat
ret
dec
jle
std
xchg
xchg
lods
xor
sub
gs
xor
jno
lahf
and
es
cmc
scas
outsb
mov
fiaddl
dec
iret
mov
jbe
ds
pop
mov
xchg
cwtl
outsl
fmuls
orl
mov
movsb
dec
cld
dec
pushf
xor
scas
int3
and
lcall
ss
inc
dec
mov
sbb
push
inc
mov
int
add
inc
pop
adc
jnp
mov
sub
flds
jb
fimuls
xchg
inc
sbb
mov
push
and
lahf
je
xor
dec
pop
inc
enter
cmp
jge
jnp
out
cmp
out
stos
or
insb
iret
insl
jg
loop
cmpsb
mov
popl
test
inc
lret
adc
jecxz
int3
jns
mov
aaa
mov
mov
seto
inc
cmp
std
pusha
jns
xchg
push
inc
mov
std
loopne
bound
and
and
decl
adc
cmp
and
fwait
lahf
jno
mov
aas
lods
imul
inc
cmpsl
clc
addr16
push
rorb
push
sti
mov
pop
mov
mov
imul
leave
pop
push
aad
test
cmp
les
push
sbb
sbb
push
cmp
outsl
repnz
dec
jge
cmp
bound
loop
mov
out
fidivrs
pushf
and
lock
int3
cltd
es
pop
sub
push
mov
je
xchg
cmpsl
lds
fucomi
mov
xchg
mov
idivb
das
sbb
cmp
and
scas
aas
mov
and
dec
jg
pop
pause
push
pushf
and
out
ret
jecxz
and
movsb
test
bnd
add
flds
pop
popa
fsub
rol
add
inc
lock
stos
insl
loop
ret
ret
les
rol
lret
xor
ret
int3
lods
adc
dec
jo
out
fwait
and
dec
imul
adc
add
or
push
pop
cmc
or
cld
pop
ret
mov
mov
sbb
outsb
shlb
out
pop
std
xor
insb
sbb
arpl
push
dec
out
mov
iret
shll
mov
mov
mov
cmp
mov
push
jae
mov
add
xor
and
lds
sbb
sahf
push
popf
aad
lret
and
outsb
sub
push
jmp
and
rcl
test
mov
mov
jno
or
cli
roll
or
add
roll
popf
sbb
out
mov
loopne
xor
je
cmc
fists
fwait
mov
pop
ret
mov
sahf
pop
in
nop
pop
test
std
cmc
pop
sub
mov
cmpsl
mov
bsr
ja
cmp
outsb
and
cwtl
int3
xchg
sbb
fdivrl
pop
adc
mov
testl
cld
mov
fldt
dec
out
ds
sbb
mov
mov
push
jbe
and
jb
pushf
push
xchg
flds
xchg
iret
rolb
lret
jmp
cmpsl
xor
inc
imul
test
cmp
cli
jno
mov
jg
lock
pop
or
or
push
mov
enter
sbb
mov
cmc
aas
outsl
sub
imul
jp
add
rol
sbb
inc
xor
mov
cmp
xchg
out
ljmp
fsubrl
fimull
pop
bnd
push
shlb
movsl
outsl
and
push
push
call
push
int
inc
sub
inc
mov
push
pop
sbb
int
pop
inc
push
iret
xor
mov
jge
lret
out
icebp
pushf
pop
or
mov
mov
push
popa
push
lahf
test
push
dec
add
cmp
repnz
mov
iret
push
popf
sbb
and
movsl
xchg
iret
movsb
inc
daa
sub
inc
add
imul
fdivs
repnz
push
mov
decl
cmp
jge
xor
leave
daa
or
movsb
call
inc
rcll
or
and
jp
pop
fsubr
push
mov
in
xor
addr16
cmp
mov
out
push
ret
nop
in
add
loope
xchg
mov
inc
movsl
fs
in
add
mov
jnp
test
fwait
mov
fstpt
imul
scas
push
sbb
cltd
sbb
inc
push
inc
negb
jecxz
mov
sbb
js
enter
out
push
pushf
repnz
adc
mov
cli
outsl
test
rcrb
mov
or
cli
mov
mov
push
add
inc
mov
mov
scas
fstp
jae
lods
xchg
int
stc
repz
push
imul
and
jle
dec
cmc
rcrb
mov
xchg
aad
jo
mov
jno
daa
dec
or
and
test
loope
jle
outsl
repz
jecxz
or
pusha
cmpsl
pop
mov
jae
pop
jno
dec
subl
push
add
and
mov
sbb
pop
jo
jae
fmuls
pop
addr16
jno
iret
std
jo
iret
xor
test
xchg
lret
in
inc
or
mov
adc
loopne
movsl
sub
mov
loopne
addr16
ljmp
lcall
clc
mov
push
imul
and
sub
xchg
gs
jp
out
push
stos
mov
xchg
aad
xchg
add
pop
sub
shll
adc
sub
or
lods
cmpsl
sbbb
jne
and
in
jne
xchg
out
add
repz
in
clc
xor
test
xchg
cmc
js
xchg
lods
outsl
cld
ljmp
fnsave
xor
fldln2
cmp
dec
lock
aam
or
push
test
cli
push
stos
inc
inc
nop
sub
mov
or
jnp
hlt
scas
push
into
or
mov
movsb
pop
sbb
scas
lods
arpl
xor
lods
pop
mov
or
push
pop
sub
jp
lea
sbb
cmp
fisttpll
cmp
xchg
xchg
jmp
sahf
pop
repnz
xor
cs
out
inc
sub
ja
std
out
inc
cmpsb
push
aaa
sti
ret
mov
and
mov
clc
add
imul
clc
jnp
jmp
cmp
orl
clc
pop
js
sbb
mov
lods
arpl
outsl
pop
xor
das
xor
mov
mov
pop
icebp
and
nop
push
js
shlb
jnp
dec
fmul
incl
fistpll
je
mov
cmp
cmpsb
pop
jp
test
sbb
nop
or
lcall
and
int3
add
or
setne
inc
dec
or
aaa
pop
and
adc
jmp
mov
push
jo
ja
mov
mov
cmpb
dec
fisubl
int3
push
sar
mov
xchg
addl
jg
inc
mov
scas
das
loop
call
and
mov
jecxz
push
adc
xchg
mov
sub
outsl
aad
sub
and
in
sahf
inc
and
xor
and
movsb
push
xchg
and
addr16
pop
aas
data16
pop
incb
cmp
lret
mov
cmpl
xstore-rng
cmpsl
sub
aaa
aad
into
arpl
sbb
mov
cli
jl
ljmp
push
dec
sahf
or
add
cld
sub
popf
and
push
and
jne
or
out
add
loopne
out
movups
fcoms
dec
adc
fldt
icebp
jg,pn
xchg
icebp
loop
jecxz
ljmp
mov
inc
shl
imul
xchg
ret
push
enter
rcll
popa
add
dec
mov
in
out
adc
imul
jmp
jne
dec
mov
sbb
cwtl
pop
rcrl
icebp
outsb
dec
cli
inc
or
addb
cmp
inc
testl
cmp
imul
insb
mov
mov
cmp
xor
andl
xchg
adc
and
rcrl
roll
aad
test
jge
inc
dec
gs
mov
das
xor
add
adc
lret
or
mov
bound
jmp
inc
jne
pop
outsb
loope
inc
gs
push
push
and
cltd
or
insl
mov
hlt
mov
adc
xor
xor
dec
popa
pop
lds
inc
pusha
add
ja
jno
lock
arpl
hlt
push
mov
push
jno
or
jl
mov
pop
adc
aas
add
inc
ficomps
es
sub
mov
aas
adc
inc
add
mull
push
mov
in
clc
stos
xchg
xor
in
ljmp
or
xor
push
dec
push
add
ds
mov
loope
pop
xor
jo
xchg
and
add
stc
scas
lret
pop
lods
xor
inc
adc
lcall
jns
cli
test
and
jns
addb
pop
or
or
xor
les
or
sti
add
mov
mov
scas
and
arpl
in
mov
fcoml
push
sbb
add
out
gs
inc
ss
dec
adc
data16
movsb
std
cmpsb
mov
xor
adc
repz
fildl
dec
das
jns
mov
jb
sub
push
cmp
push
jno
cmp
stos
nop
loop
dec
pop
adc
aam
int3
mov
es
pop
cmp
out
mulb
cmp
call
xor
cmp
jbe
dec
rcll
mov
xchg
repz
pop
sbb
xchg
hlt
daa
xchg
and
xor
aaa
sub
pop
in
and
rcrl
cmp
ja
std
push
loop
xor
or
sub
sbb
repz
sbb
xchg
mov
xor
xor
movsb
icebp
mov
movb
push
inc
dec
dec
xor
stos
jmp
or
pop
pop
jne
sbb
shlb
mov
filds
fnstsw
ljmp
fmul
sbb
xor
or
sti
dec
dec
out
mov
stos
test
push
inc
in
mov
or
xchg
das
jecxz
inc
lds
mov
xor
xor
sub
jno
enter
jne
dec
int3
dec
push
sub
pop
cmpb
std
push
jae
fildll
mov
sub
aaa
stc
cltd
shlb
in
fdivrs
scas
rolb
jb
scas
std
out
push
daa
cmp
addr16
xchg
stos
pop
add
mov
sub
fwait
sbb
jmp
hlt
subb
shrl
dec
mov
lock
mov
add
fcomps
fidivl
cmp
inc
lahf
fs
jb
ljmp
imul
mov
loope
and
sbb
jb
push
mov
test
xor
aam
sbb
rcl
adc
fs
lock
mov
mov
and
push
fidivrs
popa
mov
sbb
mov
xchg
cli
mov
ja
jmp
or
and
gs
mov
cmp
inc
push
insl
adc
mov
cmp
jmp
bound
xor
sub
add
rcrl
fcomps
cltd
mov
xchg
arpl
mov
addr16
add
ficomps
xor
push
mov
adc
scas
adc
inc
arpl
xchg
jecxz
jno
fnsave
gs
ret
lea
call
jecxz
jnp
mov
fdivp
jle,pn
jnp
adc
lods
pop
aam
jns
orl
mov
jecxz
or
mov
and
push
js
roll
jb
sub
cs
sbb
out
leave
push
mov
shl
xchg
in
xchg
xchg
sbb
lock
fsts
sub
xchg
add
dec
mov
mov
movsl
stos
aad
cwtl
cmpl
scas
inc
xchg
sbb
cltd
loopne
adc
sbb
push
sub
fsub
xor
cmp
push
mov
sahf
lea
sti
lahf
loope
ja
int3
shl
push
in
xor
cmpsl
jnp
xor
push
push
lahf
push
insl
push
dec
dec
push
scas
ds
scas
jns
cwtl
leave
outsb
or
outsb
cmp
and
cmp
mov
or
arpl
jg
or
cmp
push
mov
xor
repnz
out
adc
xchg
jo
outsb
test
push
dec
out
mov
and
movsb
cmp
popa
dec
loopne
sbb
mov
enter
popf
ret
sbb
ret
cmp
leave
mov
jo
jne
orb
or
jbe
jle
mov
mov
or
mov
pop
mov
lods
mov
xchg
push
cli
mov
fmuls
mov
popa
mov
cmp
and
pop
pusha
int3
data16
js
out
lods
in
aam
leave
jmp
add
pop
mov
xchg
pop
dec
das
xchg
rolb
leave
nop
jae
repnz
call
les
push
jne
pop
sbb
and
es
int3
inc
xorb
jb
pop
dec
sahf
xchg
cmp
or
jecxz
out
or
lret
fbld
and
mov
jp
dec
insb
test
xchg
pop
mov
in
aad
mov
daa
mov
nop
cwtl
int
fdivs
mov
cltd
imul
mov
jl
roll
rcr
sbb
pop
xchg
inc
test
roll
cmpsl
push
push
shrl
dec
mov
fdivrp
fbstp
pop
mov
int3
xchg
adc
mov
cld
jns
stos
adc
fsub
adc
mov
aam
dec
out
jno
movsb
dec
fcom
subl
sarl
mov
ret
movsl
repnz
stos
insb
pop
lea
and
push
subl
adc
pop
or
xor
push
xchg
sub
add
fstpl
adc
mov
xchg
mov
lret
mov
fbld
or
mov
push
fs
aad
push
mov
add
testb
incl
mov
mov
cwtl
aad
sbb
cmpsl
xchg
mov
mov
jne
shrl
mov
jae
dec
divb
ljmp
inc
and
jnp
ljmp
inc
mov
mov
daa
jne
sub
or
test
xor
sbb
gs
mov
imul
stos
adc
les
es
loop
lret
sub
call
mov
jne
push
inc
jl
cmp
xor
test
xchg
jmp
xor
mov
adc
add
and
aam
aam
insl
mov
sbb
cwtl
sub
sbb
data16
test
loope
out
cmp
jge
pop
ss
sub
or
stc
mov
jle
pop
out
push
push
mov
or
and
test
in
fstpt
sbb
sahf
inc
pop
pop
xchg
fs
add
jbe
pop
mov
jecxz
das
int3
cltd
sub
popf
sub
stos
fldcw
push
imul
xchg
push
add
lret
xor
test
push
adc
mov
loop
pop
xor
push
loope
xor
xor
push
mov
adc
xchg
push
rcrb
pop
jmp
xcrypt-ecb
cmpsl
iret
and
lcall
jne
int
add
je
inc
in
mov
jo
fnstenv
imul
loope
add
jb
mov
into
mov
jno
fldcw
icebp
xor
cli
adc
aad
sbb
pop
dec
cli
shrl
cwtl
mov
fcomps
or
frstor
pushf
cs
mov
aad
mov
shl
jmp
xor
xchg
and
xchg
xor
daa
mov
mov
test
push
push
lret
xlat
lret
outsl
cmp
insb
mov
mulb
cwtl
jns
iret
cmpl
add
jg
push
inc
push
imul
xchg
sahf
or
cmp
sbb
jl
or
xchg
mov
inc
xlat
out
repz
pop
dec
dec
cmp
add
mov
cli
xchg
stos
fs
inc
dec
mov
cmp
sahf
mov
jbe
adc
ror
mov
mov
insl
stc
cld
in
sbb
icebp
stos
repnz
pop
testb
clc
mov
sbb
and
das
in
push
jbe
mov
or
ja
mov
int3
adc
or
push
mov
stc
addl
cmp
fs
fisttpll
push
rcll
fidivrl
data16
jmp
jnp
jno
dec
dec
fsubrl
mov
push
mov
sti
sub
lahf
repz
xchg
jb
add
pinsrw
jno
jno
stos
sub
adcb
test
push
push
xor
testb
add
sbb
adc
inc
adc
int
sub
adc
insl
jne
addr16
cmpsl
in
daa
push
pushf
loopne
out
fidivrs
shl
mov
test
jnp
xor
mov
rorl
test
mov
scas
sub
xchg
push
add
lods
pushf
imul
sbb
mov
cmp
pop
rcll
cmpsl
mov
ret
rclb
pop
mov
imul
lret
sarl
jg
daa
lods
call
inc
mov
add
mov
cli
mov
insb
push
cltd
daa
test
mov
loopne
aas
mov
daa
sub
fildl
repz
pushf
sub
push
arpl
icebp
push
add
int3
mov
test
dec
in
jle
inc
adc
fwait
clc
imul
pop
lock
cld
push
add
jno
es
lock
aaa
push
aad
scas
adc
adc
push
jo
pop
ret
sbb
fisubs
xchg
mov
ret
and
and
or
pop
add
in
outsl
dec
loop
lods
ds
mov
cld
fidivrl
mov
sub
lods
adc
push
jmp
add
xlat
xchg
mov
fdivrl
or
movsl
cld
mov
mov
cmp
xor
push
imul
mov
xor
loopne
rorb
jmp
std
sti
rorl
pop
insl
scas
sarl
in
push
pop
sub
jg
iret
dec
lret
inc
pop
xlat
xchg
hlt
test
gs
inc
imul
jae
dec
jp
fcmovb
out
cmp
jecxz
cmp
ret
sbbl
cmpsl
mov
inc
insl
das
sub
lret
mov
mov
cmp
inc
nop
dec
mov
push
cs
mov
mov
rolb
push
or
adc
sub
inc
movsl
icebp
fstp
leave
pop
sti
jae
int3
mov
cmp
push
ja
sbb
ss
loope
sahf
xor
loope
lea
rcrb
pop
mov
lods
push
jae
add
xchg
sub
sbb
fwait
test
jnp
dec
mov
sub
xor
jno
in
mov
inc
fwait
test
mov
arpl
inc
mov
dec
jno
add
mov
or
add
addr16
dec
adc
xchg
fnstcw
add
insb
and
lcall
ja
inc
movsb
ljmp
xchg
out
adc
jb
sub
xor
movsb
mov
pop
std
mov
mov
and
sbb
or
add
loop
daa
sbb
xchg
fs
je
test
or
jnp
push
fidivl
mov
call
out
out
rcr
sub
push
cmc
clc
stc
out
cmc
pop
int
shll
aad
jle
inc
sbb
icebp
and
sahf
mov
test
sub
jbe
ss
insl
adc
mov
std
mov
add
and
loope
or
or
cmp
pop
lods
dec
imul
jno
or
dec
inc
orb
mul
mov
or
es
adc
or
mov
bound
adc
jmp
sbb
imul
mov
ret
scas
add
cwtl
add
dec
out
push
jl,pn
cwtl
cwtl
xchg
das
pop
loope
sub
cmp
lcall
sub
xor
lods
jecxz
mov
push
inc
stos
push
mov
mov
add
jne
mov
inc
jns
cmp
lods
pop
cmp
mov
repnz
and
ja
out
xor
repnz
out
mov
jns
fidivs
imul
or
aas
subl
pop
rcrb
jp
sbb
pushf
stc
xchg
push
sub
lahf
jl
addr16
test
push
xchg
xchg
aas
mov
imul
sub
fimuls
out
in
ja
jo
cmpsb
or
lcall
xor
adc
pop
movl
imul
xchg
or
jb
or
add
xlat
test
mov
test
aaa
loopne
mov
insb
push
popa
or
std
xor
nop
shrl
sub
adc
jmp
aad
or
mov
imul
ret
sbb
xor
xlat
inc
into
rcll
aam
xchg
lret
push
add
outsl
fwait
xor
outsb
stos
dec
stc
xchg
out
push
sub
sarl
hlt
dec
mov
xchg
mov
aas
jns
mov
mov
push
inc
mov
or
jo
adc
int3
popf
sub
cltd
outsb
jb
fldl
sub
and
xchg
adc
hlt
pop
out
and
repz
ret
xchg
xchg
in
in
push
dec
lret
pop
and
lea
xchg
cltd
cs
out
push
mov
lahf
mov
in
sbb
sub
cld
cmp
pop
clc
pop
dec
push
loop
xchg
xchg
cmp
ficoml
fdivl
mov
mov
inc
aas
mov
ds
test
outsb
mov
cmp
push
pop
arpl
or
imul
xchg
xchg
mov
jmp
push
xchg
shrl
leave
mov
test
into
aam
jl
out
add
je
lret
xor
lret
hlt
mov
rorb
sbb
imul
xchg
cmp
push
fstpt
pusha
icebp
leave
std
adc
popf
and
xchg
fstpt
push
loope
push
sbb
cmp
orl
gs
popa
idivl
subb
cmp
in
leave
inc
mov
sbbb
xchg
dec
dec
sub
sbb
adc
nop
js
dec
mov
outsb
test
scas
inc
inc
jg
sbb
and
xchg
movsl
sti
mov
inc
pop
and
xchg
pop
fwait
loop
lahf
icebp
push
cmpsl
shlb
pop
sub
inc
loop
cmp
call
add
shll
mov
loop
mov
nop
jbe
add
stc
shll
push
and
aam
sub
pushf
leave
inc
call
fs
inc
adc
mov
rorb
test
mov
and
popa
fcmovne
mov
jl
js
mov
rcrb
shl
sbb
jl
stos
insl
pop
imul
stc
lods
das
out
push
or
lods
mov
iret
pusha
fsubs
inc
xor
mov
lcall
dec
js
jg
pop
lcall
adc
pushf
cwtl
int
ret
xor
scas
inc
fisttpl
mov
mov
and
ret
mov
pop
mov
pushf
decb
sub
xlat
mov
push
mov
jle
repz
enter
fidivrl
sub
int
mov
push
sbb
xchg
xor
scas
test
pop
cmp
inc
jno
sub
mov
fdivrs
in
inc
int3
adc
add
scas
in
movsb
and
mov
sbb
out
pop
icebp
inc
xor
cmp
pop
loope
mov
inc
lret
aaa
sbb
push
out
int3
xchg
fidivs
fwait
mov
ret
cmpsl
sub
push
jg
ljmp
add
mov
dec
lret
mov
fwait
hlt
idiv
pop
fnstsw
inc
stos
fisubrl
jne
inc
ret
les
cld
xlat
das
push
imul
jns
int3
aam
dec
inc
outsb
aas
mov
push
outsb
in
scas
lret
rcll
lds
cmp
fcomps
push
enter
cmpsl
insl
inc
sbb
dec
add
pop
xlat
push
adc
cmp
mov
pop
out
mov
dec
int3
enter
jnp
cmpb
pop
cmpsb
cmp
ja
dec
sbb
pop
jns
cmc
loope
push
dec
cmp
xlat
dec
jnp
sarl
xchg
sub
inc
jl
push
inc
mov
int
mov
sbb
or
jbe
xchg
inc
xchg
or
fnstenv
mov
arpl
lds
cmp
pop
test
clc
test
rcrb
mov
dec
mov
ljmp
mov
insb
xchg
aas
sti
adc
xchg
cli
shrl
and
ficoms
idivb
lods
cmp
fcompl
push
add
xchg
dec
ret
test
xchg
and
mov
loop
mov
mov
jo
mov
and
or
fmul
jg
cltd
adc
jbe
clc
pop
jo
int
jp
adc
insb
in
adc
jl
pop
in
adcb
out
inc
mov
test
add
mov
xchg
inc
xchg
int3
adc
aam
xchg
push
in
movsb
xor
imul
fnstsw
xchg
stos
int
pop
mov
mov
insb
xor
insb
and
xchg
es
jne
jbe
or
sub
lcall
ljmp
imul
mov
imul
js
push
pushf
jns
imul
mov
pop
repz
sub
pop
mov
push
ja,pt
jae
xor
jne
jmp
popf
jb
dec
loope
xchg
andl
jg
adc
ja
xor
jmp
test
bound
out
repz
es
adc
loop
int
jo
cmp
dec
jnp
movsb
sbb
push
mov
push
sbb
pop
add
fcmovnu
cmp
mov
leave
adc
sarb
fwait
shrb
out
mov
push
push
mov
insl
adc
daa
fcoms
sbb
jbe
add
testl
and
and
ds
xchg
pop
lret
sbbb
cld
jp
mov
roll
in
ficomps
pushf
out
add
nop
lods
cmpsb
pushf
xchg
push
decl
jp
into
jle
inc
out
ficompl
adc
xorb
xor
enter
mov
fwait
or
mov
cmp
fwait
jg
sub
nop
std
mov
cmp
pop
out
mov
stos
dec
das
orb
cmp
jns
ffree
loope
in
push
insl
xor
inc
push
out
xchg
xchg
adc
aaa
cmp
inc
dec
hlt
movsl
out
ret
je
outsb
int3
xchg
pop
jb
mov
pusha
add
xor
cmc
scas
stc
fimuls
jae
mov
decb
bound
in
stos
cmpl
rclb
sub
mov
dec
ljmp
hlt
cmpsl
iret
scas
xlat
push
ja
jl
dec
cmp
mov
faddl
shl
sub
nop
std
stos
or
push
jle
sub
stos
shrb
pusha
rorb
dec
xchg
enter
repnz
in
lahf
shlb
repnz
dec
pop
sbb
loopne
push
int
insb
add
repz
sbb
mov
arpl
das
ja
pop
cmpb
ret
push
sub
in
pop
jmp
xchg
cmp
aam
loop
push
insb
push
cmp
cli
and
es
sbb
test
js
pop
sbb
push
addl
aad
mov
out
pop
xchg
aaa
bound
movb
ret
jp
shrb
repz
push
dec
loop
xor
icebp
lea
rorb
test
popa
sbb
adc
pop
incb
in
cwtl
inc
jle
jg
mov
xchg
jb
jg
lret
les
fbld
adc
xor
insl
ds
and
fldenv
imul
fucomi
sbb
in
or
and
rorl
movsb
stc
sahf
dec
movsb
mov
mov
cmp
fimull
xor
push
cmpb
sbb
mov
mov
mov
pop
ss
arpl
stos
hlt
out
iret
and
sub
iret
adcb
jno
insl
pop
movsb
xchg
mov
pop
in
mov
fsubl
push
cli
inc
add
xor
sahf
lret
std
xor
fimuls
loope
nop
and
mov
mov
cmpsb
jns
inc
or
mov
jns
push
sub
jmp
fldl2e
outsl
dec
shlb
pop
jle
ud1
std
ret
cmpsb
insb
mul
leave
je
and
sub
mov
test
or
jecxz
jg
int
push
mov
mov
sbb
es
xchg
cld
test
lock
sbb
mov
fdivrl
fldcw
test
aad
or
test
movsb
inc
mov
fstl
nop
loope
loope
ljmp
cmp
std
add
es
mov
mov
jmp
and
addr16
pop
sbb
xorl
cmpsb
loop
popa
xlat
add
push
push
and
imul
xor
adc
cmp
push
jmp
arpl
clc
arpl
arpl
and
sub
arpl
ficoml
push
jnp
mov
jmp
bnd
cmp
pop
lds
cmp
mov
push
mov
jecxz
push
xchg
mov
pop
lahf
lcall
or
sub
inc
push
mov
mov
mov
pusha
clc
cmp
pop
and
outsl
pop
push
cmp
add
push
mov
or
xchg
inc
and
cmp
xchg
bound
mov
push
sbb
mov
adc
adc
mov
fs
add
sbb
xor
test
arpl
scas
lret
sub
ret
cmp
nop
inc
scas
ds
les
iret
dec
or
push
lea
inc
call
add
or
loope
inc
ja
push
jns
in
jg
adc
cmc
inc
lds
xorb
popf
dec
mov
in
fldt
dec
orb
pop
xor
fldcw
fildl
cwtl
mov
insl
xor
ficomps
pop
rcrb
adcl
daa
mov
and
imul
adc
jl
fldl
ja
repz
out
xor
js
popf
xchg
mov
mov
imull
aam
cmp
pop
xchg
adc
aaa
cmp
pop
push
pop
jmp
out
fisttps
stos
sbb
pop
push
pusha
sbb
pop
ret
je
xchg
add
jbe
icebp
mov
xchg
adc
cld
cltd
inc
add
jl
sbb
sti
pop
insb
cmp
aad
sbb
push
and
xorl
ficompl
xor
in
xor
pop
dec
lcall
das
cmc
sub
ds
fidivs
adc
mov
inc
jmp
dec
mov
inc
pop
push
mov
push
ljmp
cmp
cmp
aam
mov
call
push
xorb
pushf
arpl
movsl
out
mov
lds
pop
mov
repnz
mov
sub
data16
andps
jle
mov
jno
ja
pop
mov
mov
pop
dec
lcall
push
shrl
pop
loop
mov
enter
lret
sub
and
mov
lret
add
sub
dec
mov
xor
pop
loop
sbb
xor
sbb
inc
jbe
test
mov
xchg
xchg
es
mov
mov
outsl
lahf
jbe
xchg
in
pop
jae
adc
and
xor
inc
repz
adc
inc
or
xor
fmull
aad
sub
jp
adc
sub
cwtl
jb
pop
push
adc
pop
orb
sbb
pop
adc
rcll
push
inc
xor
loop
loope
adc
addr16
jecxz
aad
aas
in
popf
and
cmpsl
popf
push
adc
pop
in
ss
int3
fwait
xlat
mov
mov
xor
adc
divb
add
xchg
cmpsl
js
add
enter
and
jo
cwtl
inc
jns
sbb
fwait
add
push
lcall
xor
loope
adc
rol
push
xor
and
loopne
aad
push
jp
jnp
xchg
leave
fidivrl
jmp
mov
call
xchg
xchg
cltd
icebp
shl
loope
insb
test
lret
or
loope
fcoms
lahf
cwtl
sub
add
xor
pop
lock
sahf
fmul
je
dec
or
push
call
shr
ror
push
mov
cli
mov
popa
movsb
ss
cwtl
pop
add
push
scas
lret
adc
repz
mov
jmp
std
xchg
mov
aas
in
or
pop
adc
inc
rorl
cwtl
push
xor
jne
or
jno
add
xchg
mov
sbb
push
std
lock
pop
cld
daa
pop
pop
in
js
cld
mov
and
and
das
int
mov
cmpsb
loope
aad
fmuls
jmp
fadd
fwait
es
pop
add
sub
push
sbb
mov
xchg
pop
adc
pop
stos
xor
repz
shlb
lahf
jne
mov
in
mov
call
mov
add
cmp
or
movsl
and
ljmp
xchg
gs
sub
movsb
and
test
mov
leave
adc
sbb
sub
test
jg
call
jge
enter
mov
push
dec
pop
gs
enter
jns
inc
test
or
cmp
or
lar
mov
fbstp
pop
mov
inc
inc
testl
out
mov
sti
push
rclb
lret
ds
enter
filds
lea
sar
pop
mov
divb
movsb
stos
dec
je
loopne
mov
mov
mov
xlat
lds
out
fsubrl
xchg
push
repz
loopne
sarb
les
cmp
ss
dec
movsb
popa
cmpsl
divl
ja
pop
push
mov
ficoml
mov
scas
push
popa
clc
in
mov
sbb
addr16
or
or
arpl
pop
cmpsl
test
js
loope
adc
imul
cmp
mov
lods
pushf
fmull
fisubrl
stc
in
push
cmpsb
adc
push
xlat
sub
shll
lea
fcomp
jge
add
mov
clc
rclb
jnp
mov
xchg
dec
xchg
cmp
icebp
movsl
mov
in
adc
repz
jmp
sub
push
mov
add
pushf
jnp
inc
sbb
mov
ja
outsb
ja
dec
inc
push
popa
insl
jae
inc
dec
and
outsl
fdivl
gs
sub
ficompl
xor
adc
fcmovnu
cmc
pop
mov
sub
jne
cmp
repz
cmpsb
push
aas
cmpsl
mov
push
adc
imul
jl
inc
insb
sbb
lods
rcrb
cmp
xor
cld
out
into
pop
cmp
cmp
mov
pop
pop
push
fdivrs
mov
xlat
push
dec
incb
jle
cmp
lods
test
cmc
imul
dec
and
mov
loopne
add
push
aaa
jle
sub
clc
loope
aam
icebp
lds
icebp
stos
stos
adc
mov
mov
jle
imul
shrb
jb
out
jae
sti
aad
fistpl
xchg
out
mov
lret
cli
movsl
lods
inc
pop
es
repz
pop
out
cmc
and
testb
sub
sbbl
ss
jp
js
and
add
mov
dec
xor
fbld
lret
ficomps
sbb
adc
inc
xchg
icebp
add
repz
or
pop
push
or
sbb
and
pop
std
negl
jbe
filds
adc
in
mov
pop
dec
dec
add
pop
xchg
incb
sti
jb
fnstsw
cwtl
mov
mov
mov
cltd
sub
pop
mov
push
adc
fisubl
lea
jae
xchg
xor
sub
inc
fdivs
fwait
pop
jge
loopne
clc
adc
das
mov
mov
lret
andl
popf
xor
push
sub
popa
jno
xor
insb
subb
mov
dec
add
jl
mov
nop
test
jmp
fs
mov
or
add
loopne
mov
jmp
xor
mov
jae
add
mov
mov
mov
xor
and
sbb
cmp
jle
adc
cmpsl
add
pop
cmp
test
daa
nop
aaa
push
std
pop
lahf
loopne
rcl
test
sub
insb
pop
lea
repz
les
adc
call
in
rol
xchg
loope
addr16
dec
pop
jb
fildl
pop
jle
push
daa
mov
add
and
adc
aad
jno
popf
adcl
in
jecxz
xchg
lods
mov
std
and
rcrb
hlt
mov
cmp
loop
push
and
mov
add
aad
scas
mov
pop
in
push
xchg
bound
fnstcw
jbe
cmp
adc
dec
add
lcall
es
add
fisubs
mov
lock
and
das
pusha
jecxz
and
dec
lods
insb
ja
pusha
ret
pop
test
cmpsl
es
js
inc
fiaddl
dec
sysenter
jle
and
imul
inc
push
jp
pop
inc
shl
nop
js
or
ret
xchg
and
adc
lea
xchg
xchg
ja
testb
jmp
xchg
dec
imul
jl
add
sbb
add
dec
cld
sbb
das
push
push
testl
push
ret
roll
into
inc
jge
scas
xor
popa
jg
mov
rolb
and
lods
cltd
adc
in
outsl
out
movsb
loop
cmp
cmp
mov
cmp
lock
mov
dec
sub
popa
loope
mov
mov
loopne
xor
int
enter
in
add
inc
fucom
int
push
lds
ret
incb
or
rcr
pop
push
cmp
in
mov
cli
out
dec
roll
inc
pop
imul
mov
lds
jb
fucomp
add
inc
insl
add
sbb
loopne
mov
push
lock
ret
add
in
ficompl
leave
pop
cmp
outsb
adc
xchg
out
ret
mov
int
test
or
call
ss
dec
cmp
sti
inc
add
sbb
adc
mov
in
pop
pushf
xlat
xlat
stos
mov
aaa
cmp
or
gs
xor
jo
push
push
inc
jmp
cmp
inc
std
leave
mov
aaa
mov
push
cmpsl
nop
inc
call
fcoms
xor
rolb
lcall
cmpsl
or
outsb
dec
adc
imul
dec
sarl
lods
and
aad
push
adc
sahf
add
je
jge
aam
out
xlat
test
sahf
loope
jns
jae
mov
test
mov
out
adc
pusha
hlt
mov
pop
mov
cwtl
mov
fildll
shlb
js
jl
repnz
outsb
sahf
das
jmp
jecxz
mov
out
sub
enter
pop
das
aad
pop
ds
cmp
add
mov
cmp
xchg
xor
enter
cmp
pop
add
mov
inc
std
pop
mov
insb
insl
addr16
cld
in
int
add
cmpsl
in
stc
adc
sbb
clc
lcall
xor
fs
lret
and
and
aaa
sbb
leave
insl
push
fisubs
lret
fcoml
pop
cmp
pop
cmp
xchg
mov
sahf
add
clc
out
test
mov
and
mov
sahf
cmc
inc
ficomps
add
popf
mov
push
mov
mov
sbb
loop
in
ja
mov
fs
mov
mov
sbb
mov
sbb
dec
in
mov
or
xchg
add
outsl
inc
nop
stc
push
push
add
cwtl
sub
fdivl
fs
pop
les
mov
inc
cmp
ret
and
clc
imul
jg
adc
adc
lea
popa
cwtl
ret
jne
out
lret
in
or
cmc
pop
out
mov
sbb
or
pop
mov
inc
adc
push
push
insb
daa
pop
push
cld
fs
shrb
sub
xor
push
sub
dec
mov
pop
push
std
rclb
jle
push
enter
in
daa
sub
out
fnstsw
lcall
lret
ret
inc
popa
mov
inc
leave
xor
xor
push
and
mov
xor
aad
orb
jnp
clc
pop
push
xchg
fsubrs
scas
int
jne
jg
xchg
ret
or
push
mov
jb
imul
dec
cwtl
fstpt
ljmp
out
fsubrs
cmc
sbb
or
mov
sub
cltd
and
cmc
pop
iret
ds
mov
imul
cmp
dec
inc
xchg
aaa
inc
movsb
clc
cld
lock
pop
cmp
add
popa
testb
lcall
popf
fwait
mov
aas
les
ss
jne
xchg
fisubrs
push
loopne
jmp
bound
je
mov
inc
addr16
or
mov
sub
xlat
jae
data16
mov
sub
nop
iret
repz
pop
dec
outsb
cwtl
sahf
jo
popf
fidivs
xchg
mov
push
mov
push
sbb
addr16
iret
cltd
or
js
mov
xchg
mov
sub
imul
test
enter
xchg
push
mov
mov
pop
hlt
sub
mov
mov
pop
mov
jle
mov
cld
push
outsl
mov
mov
xchg
or
inc
push
cmp
shrb
lret
pop
xor
and
and
pop
and
sub
mov
lret
repnz
cld
in
arpl
in
sahf
insb
xchg
add
sahf
cmp
repz
xchg
outsl
hlt
adc
add
jb
loopne
mov
insb
pop
jle
cltd
mov
jne
jns
aas
inc
mov
dec
dec
xchg
movsb
ja
sub
jg
jns
inc
mov
push
or
pop
pop
dec
dec
sbb
mov
call
lret
pop
fstp
xchg
rorb
pop
sbb
pop
arpl
out
scas
push
shrb
xchg
jnp
lods
sbb
scas
test
das
push
out
ficoml
nop
push
lahf
dec
inc
or
jo
sbb
push
stos
mov
mov
lcall
lcall
inc
mov
gs
fisubrl
jo
aam
xchg
mov
int3
or
fadds
repz
repz
jne
and
sub
jne
push
enter
dec
xchg
loop
ss
sbbb
or
das
mov
xor
popa
stc
jb
xor
and
ljmp
dec
xor
mov
add
push
mov
pop
fistl
mov
leave
cmc
push
dec
cmp
jns
stos
pop
sbb
orl
xchg
pusha
sub
roll
jbe
xchg
aad
adc
inc
nop
ds
or
lds
lds
and
dec
int3
cli
std
adc
jnp
loope
jp
pop
and
scas
push
scas
fidivl
dec
cli
dec
scas
push
inc
mov
jp
pop
mov
inc
mov
in
mov
add
pop
jno
nop
bnd
mov
rol
sbb
imul
xchg
stc
sarb
daa
pop
sub
and
test
jb
pop
jbe
ljmp
int3
andb
sahf
jge
sbb
cld
or
pusha
dec
mov
or
jno
jne
xchg
imulb
icebp
xchg
adc
insl
lock
repz
add
data16
xchg
inc
push
cmpsb
adc
push
mov
jp
dec
sbb
decw
insb
add
push
sbb
fsubp
clc
rclb
mov
xchg
push
push
test
test
psubusb
pop
cmp
pop
pop
enter
jo
or
pop
clc
pop
adc
adc
mov
sti
out
xchg
push
sub
imul
cmp
call
inc
je
shrb
jp
cmp
dec
dec
sbb
and
inc
div
fisubrs
cmp
sub
int
jmpw
mov
nop
mov
dec
daa
imul
inc
into
mov
mov
les
arpl
cmp
pop
lods
in
filds
jae
sub
pusha
movsl
shl
mov
xor
push
push
cmp
mov
pop
hlt
aam
out
or
popa
lret
out
sti
mov
push
es
jnp
cmp
inc
mov
aas
sub
rorb
dec
fdivrl
add
pusha
push
xchg
or
dec
push
and
out
or
cmpsl
lret
les
ror
inc
int
lods
mov
cmp
add
inc
rorb
dec
popa
cmp
cmp
mov
mov
mov
jmp
dec
outsl
mov
jmp
dec
and
xchg
sti
xchg
addr16
pop
fistpl
inc
push
push
xchg
inc
loop
ljmp
insl
outsl
push
repz
pusha
jp
mov
vcmppd
or
add
clc
pop
cwtl
data16
inc
sahf
lock
sub
jbe,pn
ja
stos
adc
sbb
lock
jl
dec
addr16
je
addl
insb
pop
xor
lds
lahf
shll
fistpll
bound
test
cmp
xlat
stos
dec
fcoms
inc
cmpsb
pop
insb
and
add
outsb
repz
and
test
in
int3
add
mov
lock
lock
call
inc
jnp
sbb
and
xchg
or
ljmp
or
int3
mov
mov
in
push
out
xor
stc
testb
iret
cli
push
inc
fidivl
mov
adc
and
mov
subb
outsb
ja
ja
shll
or
dec
cmpsb
pop
sbb
clc
lahf
mov
mov
cwtl
cmc
int3
pop
call
popa
enter
fldl
adc
fbstp
mov
inc
pop
sub
loope
jno
test
movsb
cmp
cld
es
cmpsl
fwait
inc
jne
cwtl
pop
dec
or
call
loop
shl
jnp
sub
test
mov
inc
push
sub
cmp
std
loopne
in
in
add
xchg
xor
jb
andb
adc
subb
or
mov
sbb
mov
cmp
push
clc
jge
pusha
fstps
mov
jno
outsl
shrl
cs
or
repz
cwtl
xchg
pop
and
xor
jge
or
dec
std
dec
icebp
lahf
or
lret
aas
cmc
xchg
addr16
jae
js
push
push
mov
loopne
bound
push
pop
cmpl
mov
aaa
adc
test
test
hlt
mov
sub
push
mov
sub
jp
ja
fdivrp
mov
mov
ljmpw
xchg
iret
mov
outsb
inc
aam
pop
cmpsb
and
inc
xchg
lods
mov
and
repz
xor
jb
dec
adc
push
andl
shr
popf
ds
js
mov
and
push
sbb
jge
sahf
push
xor
ja
int3
add
cmpsb
xchg
fldl
sbb
out
cmp
sub
cld
sub
scas
lods
jge
sub
xchg
scas
mov
inc
enter
enter
push
mov
inc
lcall
push
ljmp
cmp
andl
mov
in
xchg
shlb
pop
test
je
lret
lret
mov
rorb
movsl
int3
xchg
push
mov
testb
daa
push
lcall
daa
mov
sub
aad
dec
bound
mov
dec
insl
test
push
icebp
sub
in
popa
and
add
mov
in
or
mov
insb
sbb
cld
fisttpl
inc
sahf
push
call
push
aas
push
adcb
lret
cli
out
lret
xlat
mov
movsb
mov
int3
sub
add
aad
rcl
mov
pop
andl
ja
mov
add
xchg
ljmp
push
les
in
pop
or
cld
lret
addb
je
imul
sarb
into
jle
iret
cmpsb
and
sbb
aad
iret
fs
pushf
arpl
jns
gs
push
mov
push
xor
pushf
idivb
in
subl
aas
pusha
data16
ss
cltd
jmp
iret
add
ljmp
pop
xor
mov
cli
sub
dec
cmp
mov
rep
int
ret
xchg
in
xchg
data16
das
lock
lret
mov
mov
pushf
gs
pop
and
je
push
mov
mov
xchg
movsl
lds
adc
insb
pop
test
adc
mov
mov
inc
xor
add
pusha
out
scas
adc
in
or
std
jb
std
insl
cmpsb
inc
nop
das
imul
cli
addr16
dec
and
popa
daa
cmp
push
test
int
out
mov
outsl
xchg
xchg
scas
nop
fs
stc
aas
lods
xor
and
mov
test
icebp
js
test
mov
test
out
cld
out
fcoms
hlt
sbb
sbb
mov
repz
addr16
andl
dec
stos
xchg
push
fildl
imul
jg
xor
xlat
flds
push
push
or
lock
and
push
imull
sbb
adc
mov
jl
lds
push
pop
jge
jb
gs
mov
sbb
inc
dec
xorl
cmc
add
into
and
pop
mov
jmp
fldcw
cltd
loopne
enter
push
sub
mov
xchg
test
dec
fildll
out
xchg
in
xor
mov
mov
sub
pop
lods
mov
fldl
and
outsb
fimuls
push
mov
fcoms
sub
pop
shlb
sub
pop
cmp
dec
psrld
push
fstpt
jae
cmp
aad
clc
dec
sub
enter
jo
pop
fisttpll
push
or
jl
cmpl
sub
xor
mov
cmp
xchg
inc
mov
in
bound
aam
pop
lcall
mov
out
inc
lock
mov
loopne
inc
rcrb
aas
jb
cmpsl
out
mov
jp
mov
xor
les
aad
push
int3
adc
inc
or
cmc
fstpt
and
xor
dec
out
aam
sbb
arpl
lds
daa
test
cs
mov
add
jb
hlt
jo
inc
push
scas
dec
or
cmp
aas
aas
pop
andb
or
roll
call
xchg
mov
outsb
jle
stos
mov
fs
jl
bound
cmp
pop
in
out
lods
xchg
inc
or
fs
data16
shr
sub
lret
outsl
dec
dec
js
enter
loop
cmpsb
mov
cmp
lds
cld
add
push
test
or
push
stc
icebp
pop
xchg
incb
shrb
neg
add
add
cltd
aad
cmp
mov
mov
sbb
inc
jmp
jecxz
faddl
out
jmp
shrl
add
pop
aad
push
test
fisubl
popf
fdivrl
mov
sub
icebp
xchg
inc
pop
jge
inc
out
inc
testb
cmp
jp
add
repnz
daa
mov
sbb
mov
icebp
xchg
inc
sub
inc
inc
adc
xchg
xchg
stos
xchg
push
push
push
push
mov
repz
push
clc
adc
adcl
or
and
lds
popf
sbb
sub
push
xchg
scas
repz
xor
xlat
sub
jmp
popa
or
push
gs
cmp
nop
daa
lcall
xor
xor
mov
xlat
movsl
jnp
imull
loop
mov
pop
and
std
xlat
aad
mov
shlb
dec
xor
push
mov
bound
add
jnp
sbb
scas
sub
fsubrl
xor
dec
jb
inc
dec
mov
fistpl
loope
pop
adc
mov
jmp
cld
xchg
sbb
lods
in
jle
test
mov
scas
mov
iret
jge
in
cld
pop
lcall
movsb
scas
ficoml
aas
xlat
imul
jae
in
and
jp
aam
or
fsubp
dec
inc
sbb
sbb
and
not
xchg
sub
scas
push
xchg
fidivs
int
int
push
cld
sub
and
sarb
add
mulb
push
gs
xchg
xor
mov
pop
and
and
push
repz
fwait
adc
jb
rorl
aam
fidivl
fdivl
pop
aaa
aad
or
loope
sahf
dec
rorb
jne
les
sub
xchg
ja
mov
sbb
bnd
aad
pop
pop
mov
mov
loopne
mov
ret
cmp
add
icebp
xchg
in
add
test
lret
dec
push
rcrb
rcll
aam
loopne
sahf
movsb
push
stos
ljmp
add
mov
fsubrp
aas
scas
mov
dec
in
jb
mov
dec
lahf
inc
cmp
jl
mov
rorl
jae
js
sub
shlb
arpl
fldenv
aaa
inc
jnp
mov
and
mov
aaa
lret
or
cmp
adcl
sarl
lret
out
push
stc
mov
insb
call
in
clc
mov
dec
push
dec
add
sbb
arpl
xchg
aad
out
mov
jbe
mov
lcall
ret
mov
jo
fldcw
lock
dec
xchg
imul
and
lea
loope
insl
lahf
sbb
xor
lcall
outsb
scas
pop
mov
stos
xor
cmp
adc
sbb
movsb
rorb
xchg
or
repz
rcl
jl
les
mov
scas
daa
adc
ret
cltd
add
inc
mov
xor
int
push
sub
fimuls
punpckhwd
xor
or
movsl
fst
daa
out
mov
cmp
mov
mov
push
mov
inc
xor
inc
stos
xor
add
rcll
sbb
mov
adc
pushw
mov
outsb
or
push
xor
cmpl
nop
jns
out
mov
call
in
push
push
sub
test
shrb
mov
push
or
in
rclb
xchg
add
push
pop
jp
push
add
xor
push
push
jns
rcr
sbb
or
xor
insl
andb
add
adc
stc
daa
xorl
sahf
jb
and
sti
test
sub
sub
xor
adc
pop
jge
mov
out
jl
inc
and
test
and
and
pushf
sub
inc
fiaddl
push
rorl
add
sbb
icebp
ret
xchg
mov
mov
dec
testl
bound
xor
xchg
insl
fsts
mov
xor
shlb
movsl
sub
xor
jae
gs
mov
pop
xchg
sahf
add
adc
scas
or
mov
arpl
test
shrb
pop
out
push
and
daa
cs
add
fildll
mov
inc
push
neg
data16
iret
xchg
sub
pop
dec
jae
insl
and
scas
jae
mov
iret
jnp
daa
xor
dec
push
leave
inc
pop
cld
dec
jnp
cmpb
mov
icebp
jl
stos
loop
or
push
cld
lcallw
cs
dec
adc
pop
nop
das
daa
or
mov
cmpsb
neg
lock
imul
rcr
push
ret
lds
push
add
mov
repz
out
cpuid
jp
frstor
and
imull
mov
mov
out
mov
mov
jne
mov
mov
or
pusha
arpl
lahf
sbb
bound
arpl
jbe
decl
pop
jbe
add
jbe
jp
dec
or
pop
and
ret
xchg
push
cmp
xchg
in
pop
rorl
outsb
cmc
push
cld
out
gs
aam
rcrl
cmpsl
leave
sub
pop
jb
add
sahf
adcl
push
inc
cwtl
cld
adc
cwtl
sbbl
sub
stos
mov
scas
cmp
mov
fcmovnbe
je
cwtl
mov
test
nop
or
or
sti
insl
aam
mov
mov
inc
mov
cwtl
ror
sti
mov
mov
add
mov
push
jb
hlt
orl
sahf
jg
jns
sbbb
bound
and
xor
cmpsl
jg
sbb
cli
out
cmc
xchg
outsb
mov
mov
fxch
jmp
or
lods
push
loopne
fs
jbe
rol
ss
or
lahf
sahf
xchg
inc
xor
stos
jo
mov
das
xchg
cmp
push
adcb
pop
push
jge
mov
push
addr16
sbb
pop
cld
pop
cli
mov
mov
sub
jmp
xor
jns
dec
movsl
mov
fucomip
filds
hlt
push
je
mov
std
push
stos
enter
sbb
popa
mov
pop
sub
notl
sbb
inc
dec
std
arpl
mov
inc
adc
push
mov
push
test
dec
cmp
mov
inc
icebp
mov
pop
or
insb
mov
xor
imul
or
test
sbb
xor
mov
test
movsl
lods
cmpsl
push
mov
dec
sub
push
aad
jne
addr16
repz
ss
testb
jno
ror
je
xor
pushf
mov
ljmp
fcmovbe
and
mov
or
pop
jb
push
inc
test
sarl
mov
dec
push
mov
xor
inc
outsl
push
jbe
add
roll
xchg
stc
mov
xchg
movsb
clc
popf
sub
icebp
fld
sbb
test
pop
leave
push
sbb
popa
push
int3
and
test
faddl
mov
sti
inc
popa
lea
movzbl
lock
add
cli
jnp
out
jecxz
push
adc
ss
cmp
cli
mov
pop
nop
repnz
into
cli
dec
mov
test
push
xor
inc
fs
loopne
lret
xor
pop
sub
jp
insl
push
inc
idivb
test
cmp
fst
stos
fcom
in
push
mov
xchg
inc
sbbb
sub
push
inc
xor
daa
lock
loop
push
idivl
mov
enter
lock
adc
imul
sub
repz
jp
fcmovnu
sbbl
pop
xorl
jne
inc
aas
fbld
stos
inc
and
xchg
push
jle
mov
sbb
mov
xchg
roll
movsl
shll
pop
push
add
push
push
lods
insl
popf
inc
add
jns
dec
cwtl
je
mov
ja
adc
in
jge
popf
mov
ret
hlt
pop
test
cld
cmp
ret
insl
or
out
shlb
lock
push
mov
xlat
shlb
or
lods
jb
loope
movsl
hlt
loopne
loopne
repz
ds
outsb
dec
xchg
push
add
into
inc
popa
loopne
shl
int3
fistpl
aaa
and
adc
mov
out
adc
fistps
pushf
lahf
jge
xor
inc
jnp
push
push
dec
add
repnz
mov
xor
xchg
nop
and
jmp
add
inc
cld
mov
push
cld
jns
les
adc
push
stos
movsl
leave
pop
pop
pop
cli
pop
into
pop
fsubs
ds
pop
and
xchg
bound
test
idivb
int
sti
fildl
cwtl
jmp
add
leave
idivl
cmp
shrl
dec
faddl
jnp
cmc
cwtl
mov
loop
sbb
dec
test
sti
push
js
outsb
call
sbb
push
aas
std
jle
xchg
fldcw
aam
dec
rep
mov
es
addr16
mov
lcall
adc
pop
ret
jnp
jmp
add
xchg
int
loop
xor
inc
clc
dec
rcl
xchg
jmp
stc
jbe
dec
mov
arpl
shrb
mov
pop
inc
mov
inc
xchg
adc
icebp
ret
test
fwait
cmp
sub
dec
enter
mov
and
inc
ljmp
adc
cmp
fxch
sbb
sti
and
sub
sti
jns
cmp
dec
sub
popa
sbb
mov
mov
xchg
test
rcrl
inc
popa
push
mov
in
in
outsl
jge
es
je
jmp
mov
cs
rorb
adc
lahf
mov
sub
sbb
pop
mov
pushf
sub
jle
mov
mov
pop
xchg
jle
push
lahf
or
out
or
popa
stos
cmp
or
mov
lea
popf
push
test
lock
adc
in
lods
add
scas
push
jecxz
stos
test
sub
xor
gs
xor
or
cmp
hlt
call
shll
movsl
hlt
frstor
mov
jmp
xchg
dec
pushf
and
sbb
stos
jle
imul
push
sub
sbb
add
scas
xchg
inc
mov
xlat
jno
mov
sbb
add
and
adcb
movsb
add
add
jbe
lahf
out
testb
push
imul
xchg
lods
ja
out
sti
sbbb
mov
hlt
cld
fsubrs
push
mov
lods
ret
adc
fists
outsl
or
daa
sub
std
repnz
pop
mov
push
insb
sti
test
cmp
push
and
pop
stc
movsl
xchg
mov
ret
hlt
sbb
dec
mov
xor
js
jp
xor
mov
int3
addl
clc
mov
inc
mov
sub
into
pop
xchg
clc
bnd
cmc
pop
test
add
add
adc
mov
mov
xor
mov
push
dec
jg,pt
mov
in
lea
dec
in
or
cmp
mov
dec
lods
popf
out
pop
push
jle
je
mov
push
stos
adc
add
in
fcmovbe
add
imul
shr
mov
imul
mov
outsl
leave
stos
pop
scas
outsb
mov
int3
outsb
mov
lcall
pop
add
or
test
sub
push
push
data16
dec
scas
das
insl
ret
mov
jmp
lock
mov
das
les
pop
cmpsb
insb
mov
aaa
mov
sub
aas
stos
imul
push
cli
xor
ds
mov
sub
sub
mov
xchg
xchg
inc
cmp
cmp
hlt
lds
nop
xchg
pusha
xor
sub
cmp
icebp
dec
dec
push
pop
out
lahf
and
ja
xchg
or
out
das
cmpsb
jae
xchg
or
add
or
cmp
rorb
insb
clc
inc
push
xor
pop
xchg
sub
nop
sbb
repnz
stc
inc
das
push
lcall
es
dec
inc
dec
xchg
push
jno
int
push
shrb
add
push
push
jbe
and
insl
pusha
std
jge
lret
orps
sbb
jbe
push
mov
or
cmovs
stos
mov
imul
add
dec
pop
aaa
imul
push
push
ljmp
cmp
ja
pop
jae
cmp
pop
test
incl
and
add
out
gs
add
mov
mov
or
les
and
mulb
push
ljmp
xor
sub
outsl
cltd
je
test
sbb
into
icebp
pop
mov
and
fsubl
mov
fildll
dec
push
adc
test
add
mov
mov
pop
incb
xchg
xor
sub
js
adc
mov
push
jae
mov
adc
mov
shll
pusha
mov
sbb
in
lea
mov
jmp
xchg
xchg
addb
lds
jno
jmp
icebp
idivl
test
sarb
mov
std
aas
icebp
cmp
ret
std
in
sbb
mov
stos
lret
xor
inc
push
fisttpl
cmp
sahf
fisttpl
push
push
jmp
rol
sbbb
xchg
test
dec
inc
pop
faddl
mov
push
pop
mov
pop
in
push
jg
test
pop
pop
scas
pop
stos
and
addr16
mov
jge
mov
mov
mov
cld
fwait
or
add
sbb
add
repnz
mov
lods
cmpsl
pop
in
hlt
jb
loop
sbb
jns
jp
sub
sti
cmp
shrb
cld
ret
insb
xlat
enter
icebp
aad
stos
jne
jl
test
cs
add
clc
and
adcl
push
mov
aaa
inc
daa
add
mov
out
cmp
dec
dec
lock
dec
jmp
gs
jg
je
sbb
aad
dec
fdivr
and
pop
out
stos
sbb
cmp
sarl
mov
jl
bswap
sub
and
shlb
jg
dec
or
xchg
pop
aaa
push
push
or
fs
adc
or
jmp
mov
setno
mov
mov
sbb
out
scas
cs
sbb
cmpsl
aas
adc
mov
lret
ja
icebp
into
aad
jg
jle
fs
fisubs
fwait
jnp
scas
inc
mov
and
or
repnz
sub
test
push
xchg
xor
dec
fsubl
scas
dec
loop
fcmovne
sbb
add
cli
inc
adc
andl
jmp
cs
daa
push
das
mov
std
loopne
jnp
mov
jmp
and
fsubl
xchg
ror
mov
and
or
cmp
ss
sub
sti
jb
lods
lock
aad
mov
mov
js
jo
or
xchg
inc
inc
dec
dec
pop
leave
push
ljmp
nop
loop
clc
mov
mov
pop
bound
xchg
je
inc
and
out
dec
xlat
xchg
imul
mov
fs
push
int
stc
sbb
cmp
inc
sub
pop
xor
add
xor
lds
hlt
sub
imul
jge
mov
mov
jge,pn
stos
in
jae
mov
jnp
add
inc
in
je
clc
jae
mov
fs
fwait
xchg
mov
sbb
repz
push
xchg
lods
ss
sbb
imul
cmovg
mov
pop
jmp
push
mov
cmp
fcoml
sbb
sbb
lahf
push
repnz
jmp
in
xchg
fs
sti
jg
add
push
fadds
lcall
xchg
outsl
adcb
stc
shll
xor
repz
push
sub
leave
arpl
fst
sarb
leave
arpl
jmp
jne
mov
rol
mov
rcrl
out
and
adc
sub
lock
dec
inc
daa
subb
xchg
out
mov
cmp
lret
es
push
test
ret
popa
enter
fsubp
inc
mov
sub
jp
stos
mov
icebp
scas
aas
icebp
imul
mov
in
mov
loope
repnz
sbb
ret
cs
push
cmpsb
mov
mov
repz
jle
pop
sbb
inc
push
popl
jns
in
adc
insb
out
loope
xor
popa
rorb
push
jmp
roll
call
stc
cmpsb
pushf
push
lea
pop
fisttpl
cld
mov
addr16
flds
pop
loopne
stos
mov
inc
lret
mov
shlb
fsubrl
sub
mov
sar
sub
push
cmp
loop
xchg
daa
or
push
hlt
sbb
xor
or
aam
bound
sahf
lds
push
sub
test
mov
movsb
push
lret
lret
or
mov
sub
pop
fdivrs
pop
shll
out
inc
mov
sub
mov
in
repz
adc
negb
inc
inc
sub
inc
inc
and
mov
pop
int
push
ret
inc
ss
lret
ret
mov
or
std
mov
mov
out
imul
mov
sahf
mov
mov
xchg
push
inc
sub
dec
push
in
inc
arpl
xchg
pop
pop
fcmovnb
mov
xchg
adc
or
pushf
mov
leave
mov
jp
int
fldl
xor
mov
lret
fbstp
daa
ja
mov
mov
push
daa
mov
inc
addr16
push
adc
mov
cmpsb
sub
fwait
cmp
ret
xchg
or
daa
idivb
push
cmp
dec
and
cltd
leave
push
adc
jmp
lods
fs
inc
popa
loop
and
xor
add
mov
push
or
js
jb
into
pop
adc
rcll
clc
fisubl
insb
lcallw
dec
mov
ljmp
jns
sub
enter
push
jo
inc
mov
dec
pop
data16
or
sbb
push
or
outsl
xor
cmpsl
int
movsl
push
sbb
pop
cmpsb
mov
push
imul
sub
rclb
push
and
cmp
leave
or
ds
outsb
les
int3
add
jne
test
inc
ret
ffreep
pushf
jno
cmpsb
ljmp
lcall
cmpsb
in
cs
dec
push
int
ss
mov
sbb
rolb
iret
gs
mov
sbb
cmpb
jge
pop
or
out
out
xlat
stos
jns
arpl
into
adc
dec
push
sti
mov
popf
mov
call
cld
cmp
and
shl
xchg
rolb
push
adc
pop
out
inc
jae
push
gs
add
lods
cmp
insl
cmc
xchg
mov
shrl
mov
mov
out
cmp
fnstsw
les
pop
ret
or
arpl
js
inc
cwtl
fstpl
cmp
fnstsw
hlt
dec
pop
push
add
xlat
mov
xchg
mov
sub
adc
ret
lret
jle
mov
or
lret
pop
in
sub
cmpl
jmp
shlb
sbb
inc
lods
mov
mov
sahf
lods
xlat
daa
pop
push
mov
pop
fcmovb
call
dec
mov
jbe
and
mov
sbb
sub
mov
push
jl
movsb
sahf
ficoms
lret
push
add
push
pop
rclb
sbb
sub
mov
push
inc
sub
movsl
pop
xchg
arpl
cwtl
and
pushf
sbb
xor
add
cmp
int
jae
xchg
push
or
mov
inc
or
int
stos
sub
in
scas
sbb
jo
xchg
cmp
sarb
repnz
push
addr16
xchg
ds
push
and
movsl
std
sub
fistpll
sub
mov
out
mov
inc
mov
and
das
jne
js
add
shlb
into
mov
fcomip
movsl
loope
sbb
leave
fidivrs
sbb
cwtl
leave
xlat
jp
or
adc
push
pop
jb
test
mov
adc
leave
insl
cs
fstp
xchg
pop
sbb
stos
enter
leave
scas
xor
sub
adc
xor
xor
xor
hlt
or
sub
dec
jne
sahf
stos
xor
loopne
data16
test
xchg
dec
xor
inc
jl
push
mov
ss
je
or
imul
push
lahf
mov
loopne
mov
loopne
mov
dec
jae
stc
fsubrl
xchg
xlat
push
mov
jns
push
push
cmp
sub
loop
ss
cmc
xlat
hlt
cmpsl
jmp
sbb
mov
mov
aas
mov
orb
ja
adc
add
ss
mov
aam
mov
jp
data16
adc
sbb
lock
jg
lret
cld
movb
mov
dec
rcr
aaa
sub
pop
test
pusha
adc
pop
lods
inc
mov
mov
xchg
sbb
dec
popa
lahf
ficoms
dec
mov
jl
sbb
stc
imul
xor
out
mulb
inc
cld
jl
ret
insl
enter
arpl
icebp
mov
lods
scas
or
loope
xchg
mov
pop
testl
dec
pop
rcrb
mov
push
fisubs
shr
fstp
rolb
mov
mov
int3
xor
fldt
cmpsl
mov
loopne
adc
add
sbb
test
xlat
sub
mov
in
inc
adc
sub
fdivrl
arpl
outsb
dec
cmpsl
mov
mov
push
mov
fistps
loop
cmp
mov
and
xchg
call
mov
movsb
cli
sub
vphaddubq
push
int3
xchg
mov
call
cli
mov
out
ss
sbb
pop
lret
sub
or
sub
rcrb
lahf
xchg
or
sbb
push
cltd
inc
in
aaa
loopne
jmp
push
dec
pop
or
sbb
sub
mov
and
jno
jg
test
roll
ljmp
sub
mulb
lds
dec
loope
out
inc
add
xchg
jmp
and
stos
pop
mov
in
lods
sub
jecxz
gs
jnp
nopl
mov
sbb
out
mov
xchg
in
in
cmp
or
aam
daa
adc
inc
adc
and
repnz
mov
mov
mov
lea
adc
or
fadds
add
dec
mov
or
dec
loop
and
sbb
and
sub
into
sbb
xor
inc
imul
lcall
loopne
mov
xor
dec
in
xchg
stos
add
inc
insb
lea
stos
push
inc
leave
xchg
jg
fidivl
cmp
mov
jg
icebp
mov
outsb
ss
dec
lahf
in
fistl
inc
xor
mov
lahf
pop
jns
aam
jno
mov
test
mov
cmp
lret
stc
sbb
insb
pop
js
shlb
jne
sbb
int
ljmp
pop
fnstsw
sahf
or
add
mov
jecxz
lcall
lods
loop
stc
in
aam
test
jp
sti
idivl
jnp
pusha
dec
loope
sub
mov
push
mov
sbb
mov
add
push
xchg
ret
jg
mov
mov
adc
xchg
and
push
mov
cli
mov
jae
repz
push
jg
push
frstor
xor
into
mov
push
imul
rcrl
ljmp
push
sar
repnz
mov
repnz
adc
hlt
dec
aaa
jmp
ljmp
cmp
repnz
popa
adc
pop
pop
shrb
movsb
ret
push
add
insl
xchg
xorl
pop
popf
andb
popf
jb
imul
xor
push
cmp
ret
int
call
adc
sbb
jg
cmc
inc
repnz
sub
cs
aas
dec
andb
dec
and
loopne
pop
jns
daa
xor
loopne
lret
jmp
outsb
aas
fistps
pop
loop
inc
push
loope
shl
insl
cs
mov
sbb
ja
jl
call
hlt
fisttps
pushf
mov
xchg
ds
stos
imul
outsb
out
add
inc
sub
ret
aad
mov
fcoml
sub
mov
sbb
sub
add
mov
out
add
adc
jb
pop
xor
mov
mov
jecxz
cmpsl
stc
jmp
lcall
inc
sub
mov
mov
in
movsb
cli
sub
das
sub
and
pop
mov
adc
mov
into
xchg
jnp
and
mov
jmp
dec
jge
push
leave
mov
push
rol
jno
push
daa
or
jae
ds
out
inc
and
mov
jg
jecxz
xlat
mov
xchg
imul
or
lea
insb
mov
dec
push
rcrl
xchg
push
cmp
pop
push
fwait
bound
adc
aaa
cmp
insb
pop
out
movsl
imul
cmp
inc
cli
je
pop
jmp
outsl
insl
jnp
xor
icebp
in
je
xchg
jg
aad
mov
lods
std
fistpl
fidivrs
cmp
rcr
je
sbb
mov
inc
sub
mov
add
mov
fimuls
ja
jecxz
push
shl
mov
push
cmp
push
outsl
or
stc
daa
cmp
lock
bound
xor
lods
negl
rcrb
daa
mov
movsb
pop
insl
and
xchg
sbb
add
cli
pop
ja
and
sbb
push
dec
sbb
fdivrl
js
or
xor
dec
hlt
adc
and
test
das
push
sahf
popl
mov
mov
lock
aaa
pop
pop
xor
aam
adc
add
test
mov
imul
fisubs
xchg
jnp
ljmp
sbb
lcall
nop
push
scas
cmpsl
jo
pop
loopne
xchg
or
xchg
mov
mov
out
mov
jo
lds
pop
or
outsl
push
inc
out
shr
xchg
iret
add
or
js
add
mov
lcall
int3
lea
cmp
cmp
and
xchg
dec
mov
jmp
xlat
popf
cmc
cmc
out
xor
es
adc
divl
call
cmp
jl
xchg
jl
lods
add
ds
pop
xor
push
dec
imul
out
xchg
mov
clc
aas
inc
imulb
dec
mov
pop
add
xorb
xor
dec
leave
cmpsl
and
or
inc
mov
or
stc
mov
jns
inc
imul
test
jnp
xor
daa
imul
xchg
cltd
pop
sarl
addb
insb
xor
fadds
mov
or
enter
mov
xor
shlb
mov
and
sbb
cmp
aam
scas
inc
iret
mov
pop
add
test
dec
jo
xor
popl
adc
movsb
in
or
lods
loop
into
mov
xchg
inc
addl
mov
fidivs
dec
mov
mov
xchg
gs
inc
orl
push
pop
daa
subl
ret
scas
xor
idiv
out
and
xchg
push
fwait
mov
push
insl
movsb
xchg
ds
leave
sbb
dec
push
bnd
sub
add
lds
and
add
xchg
push
mov
repnz
jg
xchg
lock
cmp
lret
sahf
pop
sarl
push
test
stos
out
nop
in
lret
xorb
jg
push
loop
fcomi
sbbl
loope
sbb
rcll
std
pop
adc
mov
or
pop
xor
outsb
sarl
lock
add
les
mov
adc
jb
mov
in
mov
insl
push
mov
std
lods
movsb
ror
leave
imul
cmp
repnz
jecxz
pop
jmp
mov
jp
ss
and
xchg
inc
cmp
popa
pop
fsubrl
lods
cmp
mov
adc
xchg
mov
scas
lret
enter
sbbb
mov
enter
dec
movsb
into
rolb
inc
cli
push
pop
jbe
aas
cmp
adc
sub
or
stos
in
and
or
scas
push
in
bnd
pusha
sbb
sub
shrb
or
pop
or
stos
jmp
pop
sbb
orl
addb
sbb
inc
xor
call
jl
mov
or
cmpsl
outsl
or
roll
sub
ds
push
push
cmp
fcomps
pushf
arpl
int
outsb
sbb
cwtl
xor
mov
push
lds
subb
add
notl
lea
cld
mov
xchg
cmp
xor
add
loop
in
or
xor
push
call
and
adc
inc
fidivs
dec
inc
pushf
inc
mov
jb
push
iret
jbe
addr16
jo
add
and
inc
push
pop
cmp
inc
lcall
xchg
inc
fisubs
sahf
dec
sahf
mov
call
inc
in
out
std
lret
loope
cmpsl
pop
push
push
sarb
jo
lea
nop
test
sbb
cvtdq2ps
cld
dec
xor
jp
pop
lods
jmp
icebp
xor
add
or
mov
daa
adc
divl
jecxz
jno
nopw
jo
insl
pushf
mov
dec
mov
or
xor
sbb
sub
fldcw
daa
xchg
dec
andb
stos
dec
ja
push
insl
shrb
notl
cs
test
xchg
std
ror
sti
stos
push
jmp
dec
jns
ret
daa
mov
pop
cmp
mov
loop
cmpsb
iret
lea
jl
repz
loope
pop
es
lea
push
das
xchg
.byte
.byte
inc
sbb
add
add
add
pop
pop
lds
mov
out
mov
push
jne
je
out
fwait
shlb
imul
loopne
push
test
inc
repnz
jp
test
push
jmp
mov
outsl
mov
js
add
push
js
add
sbb
dec
mov
sti
stc
push
mov
mov
addr16
push
mov
pop
outsl
sub
gs
or
aad
cmpsb
cs
dec
rclb
outsb
xchg
mov
imul
cmp
cmp
test
dec
mov
mov
inc
test
mov
inc
pop
pushf
stc
inc
imul
cmp
je
fwait
dec
mov
enter
adc
cld
sbb
es
pushf
dec
mov
jo
cmp
fiaddl
mov
nop
xchg
jns
popa
testb
push
and
mov
lret
frstor
out
fmull
mov
js
lret
inc
push
sbb
mov
sub
aaa
xor
push
pusha
xor
notb
push
dec
xor
aad
xor
mov
inc
xor
xchg
inc
sub
ljmp
cmp
mov
negl
xor
ja
pusha
xchg
pop
imul
rcrl
sub
cwtl
fwait
scas
jg
data16
ljmp
fld
xor
stc
lret
cld
scas
mov
test
mov
int3
enter
lds
das
mov
loope
sub
lods
in
inc
jb
int3
mov
sti
adc
stos
pop
stc
mul
mov
or
inc
test
adc
xchg
in
cmp
mov
outsb
jno
and
xchg
cwtl
jl
or
mov
mov
mov
cmc
daa
gs
insb
ljmp
aaa
sub
ss
dec
push
insl
shrb
.byte
int
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
xor
call
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
adc
pop
and
add
mov
mov
xor
pushl
xor
pop
push
add
pop
sub
jmp
aas
or
push
clc
shll
aaa
movsb
or
push
das
cmp
sub
mov
xor
jmp
jge
ret
inc
jns
pop
insb
xor
loop
mov
add
adc
add
pushf
movsl
jp
mov
inc
pop
xor
shlb
int3
adc
pop
cmp
jne
mov
jmp
call
cmp
jle
sub
mov
push
mov
pop
jmp
cs
pop
gs
dec
loope
hlt
sbb
pop
stc
outsl
mov
sarb
leave
inc
stc
js
cltd
int3
lods
nop
mov
lcall
subl
mov
jnp
outsl
sub
sub
insl
mov
and
std
iret
fadds
cmp
jmp
out
loop
jg
xchg
pop
popa
jmp
jb
fisubrl
aaa
mov
fidivrl
aas
shlb
jb
jo
push
jne
jns
or
or
mov
or
xchg
stc
pop
sar
sbb
repz
add
shrl
push
lods
cmpsb
lock
aas
sbb
mov
rolb
loop
jo
dec
or
mov
repz
jo
jb
jb
repz
fstl
lret
or
mov
push
jge
push
mov
jg
test
test
jge
ret
pusha
push
jge
fimull
push
sbb
stos
lea
push
inc
mov
and
mov
pop
and
inc
cld
subb
xchg
ds
out
dec
ret
lock
push
out
jnp
jle
cmp
loope
and
xchg
sbb
mov
push
rcll
jge
repnz
lret
inc
cld
test
push
inc
mov
cmp
push
int
pusha
push
dec
aas
les
jle
std
test
mov
push
sbb
imul
gs
stos
enter
cmp
push
sbb
loope
aaa
cmp
les
mov
imul
cmp
push
aas
stos
jmp
jge
ljmp
push
mov
leave
sti
aad
insb
and
cltd
jge
pop
nop
fistps
js
mul
loope
pushf
cwtl
loopne
pop
add
lret
aam
adc
mov
adcl
push
push
sub
lret
data16
adc
fbld
xor
es
or
rol
imulb
subl
iret
popf
fs
push
fs
dec
mov
jno
pop
or
outsb
cmp
aam
insb
iret
xor
cmp
cmp
pop
subl
mov
outsb
sub
push
divl
dec
or
sbb
iret
adc
jne
push
xchg
xchg
xor
in
test
xor
enter
adc
add
cmp
adc
cmp
dec
mov
and
hlt
and
mov
loopne
data16
jae
mov
dec
and
stos
pop
xchg
fdivs
jne
and
enter
insl
scas
and
insl
stos
cs
inc
mov
push
ret
or
into
xlat
es
test
testb
aas
loopne
sti
mov
shll
mov
jle
adc
push
ret
test
addr16
mov
jnp
adc
push
mov
xlat
xchg
xlat
xchg
adc
sbbl
bound
lcall
pop
mov
push
insl
xor
or
pop
mov
fistpll
sbb
idiv
insl
inc
fwait
popf
mov
pop
xchg
xlat
jg
outsb
pop
lret
fcom
xchg
xor
xlat
xor
enter
mov
xlat
mulb
enter
enter
movl
shrb
xlat
xor
outsb
cmp
jo
enter
and
xchg
inc
stos
xor
jo
enter
xor
mov
mov
cmp
bsr
xchg
mov
mov
cmp
xlat
xchg
add
jmp
cmp
jecxz
xor
mov
lret
mov
dec
insb
xor
stos
mov
push
mov
outsb
xor
in
mov
cmpsb
cltd
repz
loopne
sub
xlat
idiv
xor
add
or
xchg
aad
jmp
cmp
mov
enter
addr16
ja
inc
jno
jne
sub
enter
mov
arpl
xlat
xchg
pop
xlat
daa
sti
outsb
mov
xchg
enter
jbe
push
enter
sti
fadds
outsb
enter
outsb
and
mov
les
std
icebp
aaa
ja
aad
mov
cmp
add
test
push
in
arpl
and
orb
lods
mov
cmp
mov
neg
xchg
test
push
in
arpl
ret
inc
je
inc
mov
and
mov
pop
test
lods
pop
push
aad
mov
cmp
jecxz
push
mov
fwait
sarb
mov
pop
cs
mov
and
xor
test
lods
pop
push
aad
mov
cmp
or
cmp
nop
mov
and
xor
test
lods
pop
sti
lods
mov
cmp
or
je
mov
fnstenv
jg
cmp
inc
jne
xlat
xchg
mov
and
mov
pop
test
lods
ret
xchg
enter
xlat
mov
mov
mov
fnstenv
outsb
push
mov
dec
aad
xor
xchg
cmpsl
orl
mov
xor
out
cs
add
xchg
xchg
cmpsl
orl
mov
and
les
xchg
xlat
xor
enter
into
xlat
mov
jne
adc
xchg
or
inc
cmp
xlat
xchg
clc
cmp
lods
push
aas
arpl
xlat
xchg
sub
cmp
push
mov
inc
dec
lret
xchg
xlat
xchg
push
jge
cmp
jnp
xor
mov
enter
test
je
xchg
mov
xlat
xchg
push
sub
lds
jb
popf
jmp
test
je
fcmovnbe
xrelease
cwtl
fnsave
jecxz
cli
cmp
mov
sbb
and
mov
push
int3
and
dec
mov
inc
sub
or
lahf
insb
lods
sti
pop
das
mov
cmpsl
fstpt
push
jl
xor
xchg
xlat
xchg
xlat
xchg
xlat
xchg
xlat
xchg
xlat
xchg
xlat
xchg
xlat
and
into
pop
sbb
fdivrp
jae
xlat
push
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
inc
loope
fidivrs
sub
jge
imul
rcrb
adc
test
sub
dec
hlt
sahf
push
iret
jb
or
or
push
inc
sbb
sbb
sti
jg
pop
xlat
gs
mov
popa
ljmp
aaa
scas
dec
cmc
sub
and
andl
mov
xlat
xchg
iret
adc
mov
es
rclb
xchg
aad
insb
rcl
aad
jnp
fistpl
stos
jmp
dec
pop
jp
stc
sub
adc
loope
daa
cmp
push
loopne
outsb
pop
push
mov
adc
adc
mov
test
rol
dec
dec
xchg
dec
jns
sar
not
in
xor
push
inc
push
daa
jmp
aam
cwtl
cmpsb
out
shrl
jae
insl
hlt
mov
jmp
sbb
adc
jmp
shr
push
mov
movsb
mov
cmp
pop
mov
sub
icebp
scas
sub
in
jne
jecxz
xlat
adc
push
je
xorb
lcall
daa
test
cmpsb
or
sbb
mov
mov
in
movsl
lods
je
xlat
adc
add
mov
pop
jecxz
lret
xor
repnz
inc
jecxz
and
insl
mov
add
cmp
mov
xchg
xchg
pop
mov
sub
cmp
out
mov
mov
xor
sarl
or
fists
into
dec
dec
xchg
outsl
cltd
jecxz
es
bound
outsl
xor
clc
dec
sbb
mov
imul
mov
push
in
cmp
xchg
and
stos
shl
xchg
addr16
pusha
daa
js
pop
lret
add
flds
dec
ds
fldt
mov
fimull
xchg
jae
int
mov
in
enter
shr
cli
repz
les
addb
and
sub
or
scas
sbb
arpl
cmp
out
stos
dec
push
mov
gs
jnp
lock
testb
arpl
mov
adc
lcall
jmpw
mov
cmp
icebp
icebp
ss
ljmp
cmpsl
inc
stc
xchg
sbb
popa
and
xchg
sahf
push
adc
loope
or
push
ret
jg
mov
xchg
and
pop
inc
roll
mov
jmp
mov
xor
sub
out
andl
imul
out
jnp
int
lock
fsub
popf
cs
fnstcw
jl
xchg
inc
shlb
int3
lds
xchg
mov
xchg
and
call
jg
cltd
mov
and
add
add
add
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
sbb
add
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
sbb
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
sbb
add
fistps
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
fwait
js
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
xchg
lds
cmp
add
fdivrl
dec
mov
aam
inc
lods
fstps
dec
xchg
aas
mov
rcrl
movsl
pop
scas
xor
push
xor
movsl
cmpsb
outsb
xchg
adc
mov
jns
pop
mov
inc
in
vmptrst
pop
mov
push
push
xchg
lret
call
push
sub
jecxz
mov
pop
test
mov
pusha
sbb
sbb
sub
adc
sub
cltd
xchg
adc
cmp
pop
subl
sahf
mov
mov
sbb
adc
into
cld
fsubs
ss
stos
dec
xor
fucomip
out
xor
cmc
mov
lock
xchg
cmpsb
lcall
lea
add
mov
dec
dec
add
mov
lods
push
sub
jle
int3
int3
or
xchg
in
and
adc
pslld
xchg
daa
lcall
loop
dec
jg
sbb
jno
inc
cmp
mov
add
rcrb
xchg
clc
push
pusha
pop
test
sub
and
insb
inc
cld
iret
outsb
jg
and
push
pop
jbe
mov
jg,pt
shl
push
dec
pop
fists
jle
pusha
pop
ror
cld
inc
fnstsw
aad
call
idivl
mov
mov
int
mov
push
mov
outsl
stos
sub
les
xchg
popf
or
movsb
cltd
in
pop
xchg
hlt
shrl
push
cmp
std
push
or
pop
andl
outsl
cli
xchg
lods
push
add
or
add
jge
xor
adc
lods
fptan
rcll
adcl
ljmp
add
jecxz
stc
push
sbb
xchg
pushf
fs
dec
nop
test
test
adc
and
jno
pop
ficomps
daa
pop
add
push
movsb
fisttpl
sbb
or
mov
jne
mov
xor
fldenv
jge
dec
adc
stos
jno
jecxz
jl
mov
push
xorl
cmp
test
push
jge
dec
fsubl
inc
jecxz
fldt
jnp
push
inc
ret
sahf
pop
or
mov
pop
repz
fs
jbe
imul
sbb
or
fnstcw
lcall
or
cmpsl
mov
aam
stc
lock
les
mov
jg
pop
jnp
inc
adc
xchg
and
call
bound
dec
les
cmp
fs
lods
push
das
imul
mov
stos
xchg
cltd
lea
mov
dec
xor
out
adc
arpl
mov
out
mov
or
mov
pop
cmp
stos
pop
mov
mov
dec
mov
xchg
add
jo
add
sub
aad
jbe
mov
inc
test
aam
sub
jl
pop
push
movsl
mov
outsb
inc
sub
lock
in
cmp
shll
dec
fcoms
shrl
into
fmul
aas
fucomp
jbe
mov
pop
cmp
pop
or
push
mov
mov
jno
mov
inc
cmp
mov
jo
lods
mov
xchg
jae
sbb
adc
stos
push
cli
fstp
cmp
xchg
mov
add
fmulp
movb
ja
sbb
dec
cmp
cmp
test
dec
fcomip
sbb
inc
mov
cmp
mov
insb
xor
into
add
cmpsb
scas
data16
pop
incl
fdivrs
pop
xor
mov
pop
das
inc
repnz
or
into
xor
push
popa
xor
mov
pop
adc
lahf
mov
add
decl
adc
push
leave
or
pop
cltd
jbe
and
jns
test
ss
pop
sbb
ret
mov
lahf
cmp
push
shrl
xor
andb
dec
push
push
dec
seta
inc
and
cld
stc
mov
add
mov
sbb
jge
aad
dec
clc
hlt
lods
and
ljmp
mov
cwtl
out
xor
add
jecxz
jno
mov
call
dec
add
push
dec
ljmp
cmp
repz
mov
inc
fidivs
roll
es
loope
xchg
and
mov
push
je
pop
add
jno
push
in
mov
xchg
dec
xchg
mov
add
mov
mov
outsl
int3
xchg
shrb
inc
add
mov
and
cmpsb
pushf
cld
stos
mov
movsl
mov
cltd
cmp
cmp
lods
imul
lcall
inc
ficompl
dec
mov
push
cmp
ds
sub
cwtl
cmpsb
dec
push
jmp
adc
ljmp
sbb
adc
mov
imul
test
mov
int
lods
cmp
sub
fs
cmpsb
dec
push
rolb
fwait
les
lods
das
aaa
sbb
decb
sub
std
adc
out
in
adc
sahf
xor
sbb
loope
lods
outsl
lods
lahf
aas
femms
aad
push
ds
mov
pop
push
clc
xor
sub
mov
push
loope
loop
xorl
dec
inc
sbbb
sub
adc
pop
scas
shrb
pop
aas
sarl
fs
jecxz
bound
xor
jns
lahf
jmp
mov
push
cmp
dec
push
mov
out
out
jmp
sbb
pop
andl
and
imul
mov
pop
sti
shrl
sbb
sub
mov
pushf
push
rcll
incl
in
test
test
mov
rcll
nop
in
fstpl
cmc
push
jp
mov
je
mov
mov
sub
and
loop
push
test
and
cmp
sub
ja
jne
push
pop
cld
push
pop
aaa
leave
push
dec
jg
push
gs
lea
jnp
sbb
mov
sub
xchg
cmp
add
dec
mov
imul
aas
je
jle
pop
xor
inc
mov
popa
das
pop
dec
cmp
fwait
dec
and
hlt
sbb
xor
jl
lret
cmp
fyl2x
lret
in
cmp
mov
js
rorb
in
rcll
loop
dec
movsl
fidivs
sbb
push
lret
inc
mov
out
sbb
daa
xchg
mov
push
test
cmpsb
inc
out
or
imul
mov
xor
mov
push
les
stc
xlat
sbb
mov
gs
cltd
ja
je
and
gs
mov
jp
cld
stos
ja
push
or
add
inc
popa
divb
shll
jl
add
pusha
ja
cmp
fnop
inc
mov
test
pusha
xlat
insb
cli
mov
push
scas
aam
ds
rcrb
jbe
push
mov
or
jmp
ffree
addr16
cmpsb
js
add
add
into
fstl
mov
add
das
movsb
dec
repz
cmp
shlb
clc
mov
aaa
movsb
push
movsl
jl
xchg
pop
pop
stos
adc
cmpsl
mov
iret
jne
sarb
inc
jb
ja
mov
push
dec
mov
lock
jl
jmp
pop
push
sar
adc
xor
and
fucomi
popa
sbb
add
outsb
popa
in
out
and
sub
and
in
jmp
mov
dec
hlt
aad
in
push
xchg
cmpsb
pop
shll
cwtl
test
pop
dec
cmc
sub
jo
xchg
xor
aad
cmp
fs
int3
inc
divl
shrb
pop
jb
aad
and
shlb
cs
sahf
cmp
repz
mov
push
filds
adc
loope
jbe
pop
xchg
in
aam
dec
jne
jbe
leave
sbb
jp
push
das
mov
xchg
cs
cmp
lret
mov
fimuls
cmp
pop
inc
dec
mov
pop
mov
stos
pminub
mov
daa
das
vmovq
jg
ficomps
xchg
ret
push
call
adc
jb
mov
jmp
sar
hlt
mov
jecxz
out
lods
int
or
mov
mov
popa
stc
fildll
in
cltd
and
lods
add
dec
or
mov
leave
rclb
out
stc
shrl
mov
out
dec
fdivp
or
shll
fs
out
xchg
imul
les
pop
jnp
orb
inc
add
push
dec
pushf
jo
sub
mov
mov
cmp
jmp
ret
and
clc
negl
dec
arpl
in
insl
stos
ja
pop
les
idivl
xchg
push
enter
pop
pop
sub
mov
int
lds
sbb
jnp
adc
arpl
fcmovb
jbe
xchg
mov
fsts
jne
rcl
jns
push
mov
in
pushf
sub
sbb
dec
jl
xor
pop
or
ss
jno
add
xchg
pop
rorb
test
or
push
or
mov
sub
adc
ljmp
push
lods
jecxz
test
mov
lret
fwait
popa
mov
sbb
mov
jbe
push
and
stc
mov
mov
mov
xor
popf
push
mov
push
pop
mov
mov
xchg
inc
xchg
mov
xlat
ret
mov
sbb
cmp
jb
push
mov
mov
mov
lret
mov
and
out
inc
imul
sahf
adc
adc
gs
xchg
ljmp
std
xor
and
sbb
sub
je
or
sti
dec
dec
xor
cmp
adc
adc
mov
pop
rclb
test
sbb
lret
js
pop
lock
push
mov
sbb
xor
or
inc
cmp
xchg
adc
arpl
cmpsb
outsb
mov
in
xchg
jb
xchg
int
fwait
out
ljmp
out
out
or
or
inc
in
fs
pop
in
xor
les
aam
push
ljmp
xor
faddl
pop
and
test
mov
push
sub
stos
cmpsl
in
cmp
fs
inc
push
cmp
test
mov
lcall
pop
push
repz
xchg
ljmp
movsl
jp
in
sub
lret
bound
add
shlb
mov
in
xorl
xchg
and
pusha
daa
in
adc
mov
dec
cli
int
mov
mov
aad
in
mov
mov
jns
and
popa
out
ret
ret
icebp
fisttps
mov
lret
mov
popf
xchg
imul
pop
std
loope
dec
sbb
shl
push
je
fwait
mov
rol
rcrl
cltd
xchg
jnp
int3
and
mov
in
aaa
in
loope
xchg
decb
fdivl
push
out
scas
pop
push
jne
mov
mov
sub
adc
jo
pop
pop
xchg
ret
jne
call
mov
fmul
mov
jno
das
shrl
daa
sbb
std
ja,pt
dec
sub
into
xchg
jmp
repnz
mov
fldt
sbb
fcoms
shlb
loop
cld
pushf
pop
xlat
sahf
cltd
jle
push
ds
jmp
mov
sub
imul
jns
fdiv
lret
xor
sbb
xor
cmp
sbb
aad
out
dec
mov
mov
mov
inc
mov
lret
icebp
out
cmpsb
in
xorb
movsb
mov
in
jae
xchg
mov
cs
mov
lcall
mov
or
arpl
or
add
fsubrl
or
test
data16
std
repz
ljmp
jl
jg
ss
jnp
push
push
aaa
test
sub
addr16
repz
add
inc
mov
lea
fimull
loopne
mov
icebp
or
test
mov
mov
pushf
fmul
jl
mov
jae
daa
sbbl
movsb
xor
fcoms
mov
or
lods
sub
sub
mov
add
stc
popa
pop
mov
scas
jmp
and
repz
xor
jge
mov
cltd
test
pop
jb
mov
lret
and
nop
mov
jle
push
rcrb
test
aaa
andl
lods
mov
add
or
sub
inc
push
rorb
lahf
sahf
pop
aas
hlt
stos
rcll
sahf
imul
pop
mov
loopne
popf
push
lea
and
inc
lret
pushl
push
pop
insl
dec
push
mov
jg
lret
cli
and
jo
stc
dec
movsb
adc
xchg
cmp
decl
add
mov
push
fadds
lcall
sti
push
sub
xor
fs
insb
call
fwait
cmp
mov
dec
xchg
mov
pop
adc
fisttpll
fiadds
addl
xlat
jbe
repz
cli
mov
mov
stos
test
in
push
pop
xchg
xor
pop
fimuls
jl
cmp
into
pop
cmp
mov
lea
dec
pop
stos
cmc
cltd
cmpps
int
std
ficompl
stc
dec
jle
mov
lock
mov
movsb
aad
jle
mov
pop
add
adc
fmul
mov
out
cmpsl
lods
xor
aaa
sbb
in
je
push
nop
cmp
push
je
insb
push
jns
ss
add
and
mov
adc
inc
inc
arpl
repnz
fwait
mov
aas
dec
dec
and
iret
nop
mov
js
ljmp
mov
push
stos
flds
inc
lock
icebp
das
add
movsb
push
pop
rorl
notb
xchg
in
pop
cmp
pop
pop
outsb
loop
faddp
leave
add
adc
push
dec
inc
cmpsb
sub
mov
xor
pop
mov
test
inc
popa
push
leave
mov
mov
sbb
xchg
cmp
mov
mov
sbb
popf
fcoml
aaa
or
mull
pop
dec
sbb
sbb
fsubrs
sub
fs
lock
imul
xchg
push
je
xor
lock
int3
pop
mov
into
das
cmp
imul
xor
push
adc
insb
cld
ljmp
mov
xchg
sub
pop
subl
mov
sbb
out
js
sbb
cs
ficoms
scas
sub
and
out
and
xor
jl
lods
dec
in
mov
and
addr16
inc
jp
decl
adc
fimuls
or
lock
push
daa
add
in
mov
sbb
mov
sub
fs
jl
inc
andl
inc
icebp
loop
jb
lret
in
daa
adc
sbb
std
mov
lock
sbb
mov
iret
or
jb
fnstsw
aaa
jbe
push
mov
mov
sub
cmp
dec
cmp
sbb
inc
cmpsl
negb
xchg
mov
lret
sahf
in
outsb
lea
popf
insb
inc
sbb
rolb
adc
lret
shll
mov
or
in
xor
add
mov
in
lods
xchg
lea
xorl
enter
sbb
stos
rcll
inc
push
sub
add
faddp
fimuls
jae
bnd
jns
xor
cmpsl
into
and
fildl
mov
mov
and
xor
mov
push
pushf
xchg
sub
repz
jno
into
insb
xchg
push
dec
dec
or
test
mov
inc
sbb
sbb
stos
popa
push
or
cmp
mov
rorl
push
pop
or
or
lods
outsl
lret
into
adc
and
xor
fistpl
clc
pop
es
clc
pop
inc
inc
aam
and
mov
test
xchg
fisubrl
jb
fcmovu
adcl
pop
iret
into
mov
mov
jmp
adc
cld
lods
mov
aam
mov
fsubl
pop
mov
fmull
stos
popa
xor
nop
js
jnp
loopne
push
xchg
cmp
stos
adc
cmpsb
xor
mov
cmp
ficoms
arpl
pop
xchg
mov
stos
mov
shll
mov
inc
sub
lods
sbb
imul
fcompl
iret
or
sbb
push
pop
pop
iret
push
push
rcrb
cwtl
enter
dec
xor
xchg
icebp
fistl
test
xor
lahf
fcmovbe
fwait
xchg
out
push
jmp
test
aas
aaa
add
in
xchg
xor
mov
inc
mov
push
add
jb
data16
fstps
stos
fsubs
int
bound
inc
xchg
push
sti
flds
mov
fcoml
dec
fcmovnbe
loop
ljmp
gs
pop
shlb
test
mov
rorl
mov
fsubl
and
sbb
and
sahf
xchg
cmp
xchg
and
les
in
ds
push
rorb
push
sbb
xlat
mov
rcrb
cmp
inc
jecxz
incl
sub
aam
adc
mov
shlb
push
mov
jg
jl
stos
sub
sbb
xchg
mov
fwait
lea
sahf
or
icebp
bnd
aam
jo
loop
push
fcmovbe
dec
xchg
gs
sahf
and
or
std
ds
sbb
cmp
push
mov
jp
daa
repz
orb
call
popa
fldl
push
lcall
sub
push
rcll
mov
dec
xor
add
cs
enter
sahf
jnp
push
pop
iret
lock
or
inc
sbb
mov
jns
sub
sub
and
out
jne
cmp
imul
pop
lcall
repz
pushf
mov
jmp
inc
push
or
fnstenv
lods
jecxz
aam
ret
in
cs
xor
rcrl
es
sbb
cwtl
inc
jb
push
adc
sub
and
and
sub
lret
fiaddl
je
out
mov
aas
jl
fwait
mov
push
gs
inc
ds
adcb
push
lahf
push
aam
lds
mov
stc
push
nop
push
push
jb
inc
pop
sub
sub
leave
test
adcl
mov
mov
ljmp
bound
bound
in
jno
js
cli
imul
repnz
sbb
cld
test
push
mov
mov
jb
mov
popf
jp
pop
add
imul
jmp
dec
mov
fwait
xchg
sbb
xor
hlt
mov
mov
ret
dec
pushl
cwtl
xlat
std
sti
and
mov
sub
xor
adc
je
subl
dec
gs
and
jb
stc
adc
or
pushf
jmp
std
or
adc
fisubl
mov
mov
mov
xchg
adc
xchg
fmuls
out
mov
jns
add
mov
adc
pop
cmp
cltd
sar
movsb
and
push
out
inc
sti
push
repz
mov
sbb
sub
ds
clc
add
mov
clc
ficomps
test
or
xor
push
mov
movb
cmp
xchg
mov
pop
lea
sbb
notb
mov
aam
pop
mov
dec
call
shrd
adc
arpl
xor
iret
ret
or
jle
adc
enter
jae
mov
loopne
or
mov
jb
frstor
cltd
out
ljmp
xor
std
and
mov
cmp
loopne
fists
pop
nop
inc
or
popf
lcall
push
mov
fs
out
or
das
mov
jbe
stos
mov
dec
outsb
cld
inc
scas
ljmp
shrb
mov
xlat
not
imul
and
fwait
push
add
mov
add
inc
and
jo
in
adc
fdivs
cmp
inc
out
sub
popa
jne
fstpt
icebp
cmp
mov
mov
pop
sub
imulb
les
mov
das
add
hlt
jl
sub
iret
jbe
test
jle
in
popf
pushf
fmull
mov
popf
addl
aad
fdivl
repnz
xchg
inc
cmpl
mov
pop
mov
and
jp
iret
jmp
movsb
gs
repz
cmp
into
pusha
or
fs
push
xchg
jl
ret
cltd
sarb
push
mov
jne
mov
stc
lock
int
add
add
cmp
dec
xor
adc
mov
xchg
into
rcrl
insb
lret
cli
mov
cmpsb
push
cltd
add
test
adc
imul
cmp
mov
xor
mov
dec
sub
jmp
add
xor
les
mov
mov
xor
movsl
mov
xchg
loope
mov
jnp
add
std
pop
add
lret
addl
lock
mov
pop
xor
mov
iret
sub
dec
mov
inc
or
aas
jno
daa
mov
repz
mov
dec
pop
jnp
dec
mov
jl
pop
clc
xchg
ljmp
lahf
or
int3
cmpsl
sarl
movsl
adcb
mov
subb
lods
fstpl
and
shlb
fs
fsubrl
fisubs
sbb
jo
in
movsl
jmp
ds
jo,pt
cmp
xchg
ljmp
lahf
xor
sub
sub
pop
push
adc
std
rep
xchg
je
mov
cmp
ja
add
inc
mov
aad
or
repnz
mov
subl
daa
jns
ret
jge
stc
popf
fiadds
pop
sti
call
outsb
test
push
and
mov
repz
jno
sub
push
or
mov
inc
jp
popa
stos
sbb
cmp
or
inc
loop
sbb
testl
mov
insb
cmp
jb
cmpsb
call
and
dec
cli
mov
hlt
dec
loopne
xor
mov
inc
jl
scas
dec
frstor
dec
jo
cmp
lret
push
lea
lods
in
inc
jl
add
inc
adc
leave
pop
ficompl
mov
adc
cmpsb
out
and
mov
jnp
popa
mov
repnz
stc
arpl
in
pushf
cmp
xchg
cltd
mov
pop
mov
lahf
mov
into
sub
loopne
data16
pop
inc
mov
mov
xchg
mov
data16
cmp
fcoms
jo
cltd
adc
add
out
add
cmp
outsl
nop
pushf
push
mov
jbe
pop
adc
loopne
jp
test
jle
jo
aas
sbb
or
mov
or
std
popa
in
xchg
int3
sub
loopne
push
dec
jl
push
xchg
dec
add
into
and
xchg
in
and
sub
xor
cmp
cwtl
icebp
into
mov
shl
aaa
sub
ror
inc
insl
in
nop
int3
pop
push
cmpsb
sub
or
imull
call
push
inc
mov
gs
test
pop
cld
cmp
sbb
addr16
push
push
lret
add
mov
iret
les
pop
adc
pop
mov
loopne
ss
add
adc
shl
stc
mov
shl
and
notb
cmp
loopne
mov
in
mov
test
outsb
hlt
cli
les
pop
cmp
mov
dec
into
push
pusha
std
std
cmpsl
mov
scas
add
xor
push
and
das
out
mov
je
sbb
mov
arpl
mov
pop
mov
dec
xor
mov
mov
negb
or
push
loop
loope
negl
and
dec
cmp
adc
std
push
jae
jmp
mov
or
or
dec
lea
movsl
ja
test
fldl
scas
notl
jge
mov
adc
adc
cmp
faddl
sarb
sub
mov
mov
imul
cld
ret
decl
lock
lret
mov
sahf
cltd
and
jae
subl
pop
xor
in
cwtl
into
div
and
add
in
mov
iret
adc
js
jb
pop
push
or
cmp
int
ljmp
es
out
js
cmp
insl
out
fisttpll
pop
inc
nop
xchg
mov
ljmp
inc
add
test
clc
aaa
xor
or
mov
addr16
fimull
add
adcb
adc
and
xchg
data16
mov
xchg
xchg
mov
add
jmp
adc
jecxz
negb
add
add
pop
push
sahf
mov
aaa
mov
in
out
mov
fsubrs
jno
test
mov
out
cmpxchg
dec
out
lahf
pushf
push
fldl
adc
popl
in
mov
cmp
mov
orl
jno
popf
dec
fdivp
decb
cmpl
popa
jae
bound
lods
cs
or
les
loopne
stos
inc
icebp
push
fisubl
inc
lock
jge
test
inc
dec
push
add
mov
in
das
cmp
mov
and
jb
dec
ret
rcll
fs
push
inc
cmp
push
mov
push
mov
push
cmpb
mov
xchg
sub
inc
pop
call
dec
xor
and
or
add
aam
push
mov
or
push
mov
add
in
stos
jne
adc
cmp
and
filds
pop
ret
roll
mov
mov
push
sub
mov
movsb
mov
inc
dec
add
insw
pop
nop
sub
mov
cmc
stos
or
data16
daa
in
push
add
xor
js
jne
iret
sahf
push
pop
mov
jb
subl
out
push
cmp
pop
lcall
es
or
mov
xor
sbb
iret
ljmp
sbb
lret
xor
push
xor
fnstsw
push
dec
add
jg
test
sbb
addb
movsl
and
push
cmp
jb
jo
and
or
pusha
mov
popa
pop
lock
xchg
cmp
xchg
adc
lds
les
int
loop
inc
dec
fdivs
popf
ret
add
js
xor
xchg
imul
cmp
mov
nop
push
push
leave
inc
inc
push
push
fsubl
icebp
pushf
popf
mov
dec
outsb
xlat
add
icebp
push
fcmovb
sahf
int3
sbb
cwtl
or
stos
and
mov
scas
loop
clc
adc
push
ja
bound
jecxz
push
dec
push
cltd
mov
xchg
pop
into
xor
mov
test
pusha
jmp
and
scas
or
leave
push
mov
xchg
mov
or
add
sub
push
in
jns
ror
out
or
stos
sub
rcrl
in
and
pop
or
xchg
xchg
and
cmp
mov
mov
jb
pop
rolb
push
aas
das
adc
stos
cmp
imul
in
sub
std
imul
sub
scas
mov
cmc
iret
cli
stos
pop
loope
xorl
rcll
add
js
and
add
push
mov
pop
rcl
push
addr16
xlat
leave
fsubrs
adc
xchg
dec
or
idivb
das
or
mov
jmp
mov
jno
mov
lret
imul
mov
call
roll
push
adc
fsubl
jge
mov
inc
lret
xor
int
xor
loope
or
iret
and
pop
outsb
mov
fwait
test
push
dec
repnz
push
fs
and
lret
cmp
push
mov
iret
push
lcall
mov
and
test
push
push
adc
add
jae
es
adc
aaa
cmpsl
mov
and
out
cmp
adc
lods
sbb
icebp
xchg
dec
dec
nop
popa
shl
push
pop
inc
jne
iret
call
pop
and
clc
stos
in
mov
bound
xlat
dec
sbb
mov
fwait
or
rclb
fistl
sub
aas
shrb
imulb
fdivs
sbb
aad
and
dec
in
jns
cmpsb
cli
fldenv
stc
rcll
jg
mov
dec
stos
push
stos
outsl
jne
or
mov
iret
dec
jecxz
jae
and
lcall
xor
cmp
sub
sub
pop
jl
mov
insl
push
iret
mov
mov
repnz
fisubrl
out
sub
mov
push
scas
out
mov
cmpsl
mov
je
outsl
divl
and
mov
aam
xchg
inc
or
mov
add
addl
sub
jns
cmp
mov
outsb
xor
jle
dec
pop
push
pop
sti
adc
mov
jmp
out
fwait
and
call
pushf
dec
mov
sti
insb
lods
call
movsl
dec
mov
mov
jne
loope
insl
jg
das
xor
add
ret
mov
jno
inc
pop
jno
fsubs
arpl
pop
mov
dec
mov
lahf
xor
hlt
jno
dec
cs
mov
cwtl
scas
or
clc
and
into
imul
sbb
out
fldt
jns
fnstsw
repnz
mov
pop
add
imul
xchg
mov
mov
pop
xor
jmp
sti
das
jno
xor
fstpt
cmp
icebp
sbb
pop
pop
lods
jle
add
divl
fcoms
in
mov
in
xchg
pop
fisubrs
push
scas
pop
dec
adc
push
mov
outsb
loope
pop
sbb
or
mov
and
pop
xchg
pop
addr16
lods
jno
mov
push
lods
int
dec
cld
or
pusha
aaa
roll
push
cmp
cmp
pop
mov
sbb
and
repnz
xor
outsb
std
shlb
ret
mov
sub
push
mov
sub
aaa
adcb
pop
mov
mov
in
mov
add
popa
lods
pusha
jl
aam
mov
jecxz
mov
add
test
dec
inc
rcll
adc
inc
jecxz
ja
in
xlat
sbb
jns
sub
je
int
inc
fs
mov
inc
cld
daa
push
icebp
and
mov
ds
mov
add
arpl
dec
pushf
cmp
jne
xchg
sbb
push
pop
inc
sarl
add
sbb
push
aas
pop
inc
insl
mov
xor
pushf
and
testl
orl
aad
push
mov
push
xlat
xchg
sub
out
jp
mov
shrl
xchg
xor
push
test
sti
pop
mov
shlb
clc
ds
stos
xor
repz
ret
scas
and
pop
xor
filds
inc
aam
sahf
adc
cmpsb
add
dec
scas
xchg
pop
add
into
fs
out
call
push
icebp
mov
movsb
inc
movsl
scas
ffreep
gs
aam
and
jns
pop
lahf
jno
push
sbb
imul
mov
mov
push
cs
lds
push
rcrb
pop
pop
mov
fistpll
mov
sub
mul
push
pop
xchg
es
add
jo
lret
test
lods
sbbb
push
xor
insl
cmp
add
cmp
data16
adc
pop
rolb
mov
ret
push
mov
iret
das
xchg
mov
xor
scas
outsl
mov
add
repz
cmpsb
xor
lods
pop
pop
sbb
jecxz
sub
pop
mov
push
js
fcoms
ret
jecxz
js
gs
and
jae
pop
jne
imull
dec
scas
cmp
test
push
push
shll
in
lods
lcall
adc
sbb
jno
mov
xor
lds
in
lds
subb
xchg
inc
dec
push
out
dec
or
clc
dec
popf
leave
icebp
push
add
mov
mov
push
push
sbb
pop
lret
cwtl
vcvtps2dq
or
outsb
push
shl
or
xchg
inc
faddp
insl
lock
mov
or
ja
outsl
xchg
sub
mov
sub
cltd
push
scas
mov
inc
fstpl
inc
jmp
jmp
mov
xchg
mov
aas
ficomps
in
xlat
imul
stos
pusha
push
pop
adc
pop
mov
shld
push
sbb
shll
adc
negl
pop
mov
cmp
scas
cmp
mov
aad
adc
add
pop
dec
dec
test
mov
stos
cmpsb
call
outsl
cs
and
pop
sarl
push
xchg
or
fwait
cmpsb
pop
mov
push
mov
sub
gs
cli
xchg
imul
adc
es
int
test
push
jp
mov
scas
push
das
daa
mov
and
in
inc
or
test
push
imul
push
in
lods
push
or
jl
bound
loope
out
mov
stos
pop
lahf
pushf
fnstcw
inc
repz
xor
or
jbe
insb
cld
popf
push
shlb
lcall
xlat
mov
lret
and
sub
lds
adcb
out
rep
and
cmpsb
scas
arpl
xchg
xor
cli
cmpsb
cmpsb
mov
pop
std
sarb
pusha
mov
mov
movsl
imul
fstpl
lds
mov
jge
divl
jno
inc
xor
xchg
push
and
mov
xchg
mov
xor
outsl
xor
cmc
out
jecxz
mov
call
push
pop
push
push
mov
rcrl
cmp
cld
out
pop
jno
daa
jecxz
inc
out
sbb
cmp
mov
sbb
into
rcl
pop
pop
and
pop
cmp
iret
mov
sub
inc
rorb
fists
adcl
jns
adc
cmp
and
in
aaa
and
xchg
mov
test
int3
out
bound
lods
sub
das
pusha
mov
stc
pop
jae
add
add
nop
jne
into
sbb
or
mov
fwait
cmp
cmp
jmp
xor
push
xchg
push
mov
cltd
jno
xchg
aas
dec
jle
add
orl
pop
add
ljmp
inc
cmpsl
cs
out
cmp
push
mov
cs
cmp
adc
popf
lock
jg
push
jp
les
inc
ljmp
mov
push
xchg
push
repz
cs
je
fcom
push
imul
sub
xchg
xor
cli
stos
mov
add
jnp
mov
fidivs
jns
fists
ljmp
cmpsb
jnp
fwait
ror
add
cmp
xor
std
insb
pusha
cmp
mov
sub
sahf
cli
outsl
pop
mov
pop
or
sub
push
mov
mov
xchg
cmpsl
pop
movsl
xchg
into
jg
sub
inc
std
push
faddl
sbb
mov
movsb
mov
repnz
push
xchg
jmp
mov
push
and
push
jno
jge
xor
fcmovnb
xchg
outsl
xor
leave
icebp
sub
je
push
cmp
mov
into
cmp
jl
mov
mov
fistpl
out
mov
mov
pop
cmp
pushf
movsl
das
fnstsw
pop
nop
sub
pop
push
sbb
std
shrl
push
or
inc
jmp
jno
mov
inc
push
fisubrs
ss
jb
mov
jno
orb
es
gs
fbld
in
in
lea
xchg
push
add
mov
ja
or
fdivl
cmpb
leave
fwait
fwait
mov
inc
into
lret
jb
mov
dec
sub
pop
lods
sbb
dec
aam
push
mov
scas
das
jnp
dec
cmp
dec
cmp
push
inc
jb
scas
mov
mov
push
dec
orl
sbb
mov
mov
cmp
push
xchg
adc
rcll
cld
outsb
in
sbb
cltd
push
scas
sbb
pushf
out
ret
sahf
shll
inc
add
push
pop
out
dec
mov
pop
sbb
and
movb
pop
add
xor
std
inc
or
mulb
push
scas
pusha
jecxz
ss
out
xor
icebp
aad
shlb
call
mov
jb
inc
adc
pop
add
mov
mov
inc
jmp
add
ds
sub
cmc
jb
sbb
test
aad
cld
dec
push
pusha
sbb
cmp
cltd
mov
mov
movl
lods
jge
cmp
in
push
shr
jbe
stos
out
push
xchg
out
inc
xchg
jbe,pt
sbb
mov
in
out
push
cs
shlb
mov
shl
cmp
dec
mov
int3
lcall
movsb
stc
or
or
gs
xchg
lds
inc
adc
and
ja
aas
dec
std
add
add
divl
and
mov
jge
andb
or
xor
sub
dec
push
adc
jne
or
inc
clc
jnp
sbb
leave
std
mov
shl
dec
dec
push
js
imul
mov
pop
mov
ret
cmp
into
ds
test
inc
mov
dec
push
lret
repz
dec
sti
xor
sbb
push
adc
maxps
pop
xlat
ret
pusha
mov
inc
xchg
lret
leave
cmpsl
inc
pusha
ljmp
and
inc
mov
addr16
insl
orb
test
xor
jns
std
add
dec
pop
test
push
addr16
loop
add
xchg
cli
or
jns
movsb
dec
cmp
add
shrl
xchg
dec
xchg
data16
dec
mov
lds
ljmp
mov
loopne
add
inc
push
xchg
test
scas
lret
sub
jno
mov
pop
mov
pop
sub
push
cmpb
pop
jmp
mov
rcll
divb
adc
xor
fs
movsl
adc
ss
out
mov
xor
ficomps
cmpsb
icebp
sub
ljmp
mov
mov
call
lret
std
test
xor
repz
mov
and
lock
dec
xchg
fwait
insl
xor
testb
sub
lret
ret
xor
mov
xor
adc
inc
push
mov
dec
int
jne
int
and
rclb
mov
dec
pop
add
lods
jge
ja
scas
or
sbb
jl
lret
add
je
stc
mov
sbb
adc
in
dec
jbe
inc
flds
jns
daa
loope
inc
negl
xor
stos
mov
push
ja
lcall
and
jp
sub
cmp
xchg
push
cmp
jp
icebp
in
cmp
push
nop
and
stc
outsb
mov
mov
pushf
jno
ret
and
push
mov
mov
cs
push
xor
stc
adc
test
rcrb
outsb
cmc
mov
xor
imul
jl,pn
dec
push
int
lcall
push
xchg
sub
mov
mov
outsl
in
jecxz
out
movsb
pop
jo
test
sbb
add
je
push
nop
dec
loopne
enter
sbb
lret
imul
dec
push
cmp
pop
fiaddl
pop
lods
push
jb
loopne
mov
ljmp
xor
xor
dec
inc
pop
jnp
mov
jg
in
lds
insb
popf
adc
lahf
sarl
ss
ds
sub
daa
and
aam
lds
test
push
mov
insb
xchg
push
push
call
rorb
pop
push
jnp
push
push
and
dec
xor
pop
mov
sbb
gs
xchg
pop
or
scas
mov
insl
sub
lds
sbb
push
std
or
in
mov
fwait
pop
mov
insl
push
sti
cli
mov
int
xchg
mov
js
xlat
pop
jmp
scas
xchg
mov
xchg
mov
dec
insb
movsl
std
sbb
push
mov
sbb
xchg
jge
mov
inc
cmpsb
xor
or
scas
cmp
shlb
out
repz
bound
dec
repnz
cmp
rolb
push
cmp
adc
pop
sbb
leave
int
lock
pop
cld
jnp
cmp
pusha
mov
bound
xchg
and
ds
sub
stc
dec
movsb
test
jmp
adc
rcl
sub
fnstenv
xchg
imul
push
push
mov
movsb
scas
pushf
adc
mov
stos
out
in
mov
dec
mov
jp
push
notl
dec
lret
cmp
enter
mov
fs
dec
shl
out
pushf
in
test
mov
add
jg
sbbb
aaa
add
cmpsb
mov
arpl
xchg
mov
inc
fmuls
ss
insl
push
cwtl
test
adc
xchg
lcall
pop
cmp
mov
xchg
cmp
repz
out
imulb
pusha
adc
add
ja
add
fxch
std
sar
dec
sbb
scas
outsl
mov
or
sub
data16
push
fistpll
cld
inc
enter
and
out
out
xor
movhps
sub
into
ja
pop
push
jb
ret
add
repnz
fcompl
xlat
sbb
add
xchg
pop
xchg
movsb
imul
test
pop
xor
fistl
jns
pop
or
pop
ret
inc
aas
jae
mov
jo
cltd
push
pop
aaa
xchg
cmp
fists
mov
xchg
jne
int3
mov
fwait
cmc
lods
jle
cmp
into
vandnps
mov
arpl
lret
icebp
and
push
dec
mov
test
or
cs
arpl
and
or
jbe
pop
mov
leave
out
or
mov
cwtl
mov
insb
jne
ret
aad
dec
cld
add
pop
out
and
dec
stos
cmp
pop
mov
mov
inc
push
into
adc
notl
lods
sbb
mov
pop
cmp
leave
add
mov
cmp
loopne
scas
cmp
jo
in
adc
std
jecxz
sti
movsb
pop
fmul
fcomps
daa
or
mov
cli
js
ficomps
imul
sub
mov
cmc
adc
arpl
jb
mov
fdivs
mov
idivl
xor
fs
inc
roll
jo
out
nop
adc
cs
insl
lret
sbb
scas
mov
into
pop
ljmp
jb
pop
je
lea
xor
xchg
mov
enter
imul
dec
es
mov
setg
das
inc
insl
adcb
scas
add
out
int
mov
add
pop
fdiv
outsl
outsb
shlb
loope
dec
lds
mov
fists
jae
enter
mov
push
out
fdivs
sahf
aaa
loopne
xor
jecxz
mov
mov
cmp
pop
sbb
stos
es
nop
iret
jl
enter
stos
push
or
inc
out
inc
and
sbb
mov
add
jb
aam
cwtl
sub
mov
and
ret
cltd
sub
les
jmp
lds
inc
addb
ss
xchg
lods
rol
hlt
push
adc
adc
dec
mov
dec
xor
push
stos
jns
add
ficomps
icebp
jecxz
cld
sbb
mov
sbb
les
in
rorl
data16
clc
out
dec
frstor
cmc
js
test
mov
or
js
mov
add
dec
es
jg
xchg
dec
pop
inc
fisubl
je
ret
rcrl
cltd
mov
lods
test
das
movl
nop
js
out
call
rcrb
mov
js
sahf
and
cwtl
adc
inc
cmpsl
fsub
jmp
test
mov
and
pop
decb
fdivr
mov
jp
sub
faddl
call
in
add
cmp
push
aas
mov
push
sbb
shl
bound
rorl
leave
sbb
mov
ret
dec
ja
jecxz
movsl
loopne
outsl
aaa
stos
cmp
das
lock
jae
adc
leave
cli
mov
gs
loopne
outsl
jg
jmp
dec
mov
into
inc
pop
nop
sbb
test
lcall
push
aam
xchg
mov
fldl
shrl
inc
lea
mov
dec
dec
jg
xlat
push
loope
mov
test
mov
xorl
into
fdivrp
insl
add
add
repz
lock
dec
addl
fadds
cmp
push
mov
lock
xchg
inc
imul
call
iret
xchg
fwait
stos
mov
outsl
test
pusha
push
pop
frstor
xchg
dec
rorb
insl
pusha
push
xchg
mov
or
movsb
mov
out
push
xorl
push
and
in
or
push
outsb
pop
mov
stos
push
mov
jge
subb
notl
dec
dec
lods
enter
popa
js
mov
dec
jns
add
jns
test
pop
sub
lods
pop
fs
dec
cld
int3
jns
frstor
mull
mov
xor
in
mov
jnp
add
cwtl
into
jp
int3
imul
aam
das
hlt
cwtl
sbb
xor
das
loopne
mul
ss
ja
negl
lock
sbb
rol
fmull
push
and
popf
lret
or
test
dec
in
pop
ret
mov
jle
aaa
js
outsb
movsl
or
aaa
jne
cld
mov
mov
ficomps
imul
outsb
inc
arpl
pop
andb
xor
mov
mov
ja
inc
fdivl
lods
loop
mov
cmpsb
cltd
xchg
mov
imul
fcompl
out
xlat
psllq
mov
aad
adc
inc
xchg
test
outsl
push
push
cmp
lea
lret
ja
out
outsb
push
testl
inc
pop
and
hlt
les
cmp
mov
mov
sahf
ficoms
lret
inc
scas
popf
mov
das
test
add
mov
sub
jbe
or
out
xchg
mov
mov
mov
push
les
mov
bound
fstpl
dec
addb
icebp
fs
pop
out
mov
push
dec
or
les
stos
push
cmpsl
jp
jo
inc
imul
or
and
in
pop
xchg
mov
ret
jmp
or
call
dec
add
or
inc
push
arpl
cmc
das
sahf
and
dec
out
out
sbb
in
xor
mov
push
jne
jae
loop
imul
jns
add
and
dec
cwtl
sti
dec
mov
rorl
outsl
js
pop
jae,pn
push
stc
in
rcr
pop
sub
pop
iret
mov
test
arpl
js
repnz
dec
outsl
jmp
shrl
test
lods
shl
or
fcomp
push
sub
notb
push
in
daa
sarb
dec
sub
cwtl
adc
push
dec
les
fistl
in
popf
fs
xor
add
shll
lds
cmp
movsb
mov
pop
add
lds
fs
ljmp
push
mov
shr
bound
int3
cmpb
pop
imul
lds
and
dec
push
out
mov
cwtl
call
or
jbe
arpl
stos
sub
sub
int3
mov
inc
shlb
ficoms
mov
cld
imul
gs
adc
rolb
cmp
pop
in
sbb
and
test
fisttps
lock
or
pop
xchg
xchg
dec
add
sub
imul
xchg
cli
aas
lahf
xlat
dec
dec
shlb
cmp
insl
int3
jo
fnstsw
dec
dec
aam
dec
mov
cld
sahf
adc
and
lahf
xor
fs
fstps
fstpl
lret
clc
cmpsb
mov
push
dec
jbe
pusha
cmp
jne
movb
jecxz
mov
insb
or
pop
and
loope
mov
mov
lds
or
jbe
xchg
bound
daa
inc
sti
adc
cmp
xchg
pop
addb
jae
imul
lret
lahf
cmp
out
sub
decb
sub
mov
stos
adc
jmp
xor
push
xchg
sub
movsl
fisttpl
inc
mov
jmp
push
cmp
push
mov
xchg
addr16
jnp
jb
add
adc
pop
push
das
lods
push
stos
xor
ret
call
daa
ja
jmp
lret
mov
adc
pop
lock
outsb
push
cmp
xor
jae
or
fmul
add
sub
xchg
xor
dec
cs
pop
jns
pusha
daa
in
adc
xchg
jnp
xor
cmp
mov
jbe
mov
fnstcw
imul
mov
or
mov
sub
movsb
jp
pusha
mov
out
adc
add
pop
movsb
mulb
xlat
cwtl
sbb
cmp
cmp
xchg
lret
mov
stc
mov
xchg
addl
inc
cmp
in
cltd
bound
dec
jmp
mov
mov
push
xlat
push
repz
std
mov
dec
in
pop
mul
mov
cli
jge
repz
sbb
imul
cmp
data16
pop
jo
leave
or
cli
or
in
clc
fcoml
gs
mov
iret
loope
ja
sbb
or
add
xchg
inc
and
fs
rcll
mov
push
cmpb
fabs
mov
push
xor
outsb
bound
mov
mov
cltd
hlt
adc
lds
jle
insl
push
lahf
mov
dec
xchg
insb
mov
jl
movsl
sub
mov
ljmp
out
xor
adc
jecxz
aad
loop
xchg
adc
je
in
xchg
sbb
cwtl
popf
daa
pop
repz
cmp
imul
adc
and
jb
imulb
mov
loopne
lret
jg
gs
pop
movsl
lock
decb
lret
cmp
in
inc
out
push
or
ret
and
fwait
inc
sub
cmc
and
pop
pushf
adc
ljmp
sub
push
push
outsl
mov
cmpsl
xor
scas
add
in
cmpsl
in
sti
lods
jge
jge
mov
aaa
lcall
and
push
push
add
sahf
jns
add
outsl
xchg
add
bound
out
sbb
pushf
lahf
or
jne
add
fldlg2
or
out
aad
mov
push
iret
xchg
add
test
std
call
test
sar
lods
cmc
call
into
aam
add
shlb
out
push
stos
push
mov
jl
cli
cmc
repz
jae
cltd
lock
or
push
xchg
jge
jns
mov
push
xor
fistps
aaa
xchg
cmp
popa
pop
cmp
lods
leave
mov
aad
mov
sub
and
jl
jns
das
lret
ret
adc
stc
mov
adc
popf
and
add
adc
rcll
adc
pop
xchg
push
mov
std
shlb
loop
outsb
xchg
sub
xor
scas
jae
in
sbb
outsb
push
je
hlt
mov
aad
xor
aaa
adc
pop
push
cmp
and
imul
sbb
dec
mov
and
js
mov
mov
es
xchg
std
mov
mov
test
inc
es
insl
into
pop
dec
and
dec
enter
sub
outsl
lcall
ja
dec
stos
test
test
ljmp
inc
mov
xchg
mov
ficompl
mov
or
movsb
cmpsl
sub
adcl
xor
aaa
pop
xlat
fwait
in
addr16
dec
shlb
call
add
pop
test
and
stos
or
data16
shr
or
sub
int
mov
aam
push
cmp
mov
sbb
adc
pop
dec
test
push
xchg
test
xchg
mulb
dec
rcr
sub
mov
inc
les
cs
fistl
mov
mov
out
dec
setno
lods
lret
leave
sub
int
mov
xchg
jl
ja
jle
mov
mov
mov
je
xor
sub
pushf
and
test
mov
and
pop
test
insl
and
lahf
in
sub
mov
jl
adc
push
fdivr
sub
mov
fcmovnbe
cmp
ds
jecxz
mov
loopne
jb
fiaddl
push
lds
jno
call
out
cwtl
jle
inc
pop
jmp
hlt
in
or
adc
dec
pop
lahf
mov
or
aad
jbe
sub
in
pop
jecxz
test
push
xchg
push
add
dec
xchg
clc
testb
adc
or
sahf
bound
loopne
cwtl
jp
mov
mov
fsub
inc
out
jae
jecxz
mov
sub
inc
pop
clc
cmp
push
mov
mov
pushf
dec
pop
nop
adc
lock
adc
push
cs
stos
aad
push
fnstsw
xor
jl
sub
mov
jmp
sbb
insb
hlt
sub
aad
push
inc
adc
sahf
dec
add
popa
rorb
push
adc
leave
lret
cmpsl
ds
stc
mov
adc
cmc
fistpl
out
testb
cmp
insb
add
lods
mov
jbe
cmp
stc
mov
jbe
push
sbb
push
std
jecxz
into
or
call
repnz
push
sbb
xor
jns
sahf
cmpsl
stos
lahf
add
sbb
or
js
mov
mov
sub
in
insb
int
movsl
cmc
lds
test
mov
icebp
ds
pop
in
daa
in
shr
filds
push
fstl
add
pop
inc
aam
sub
add
test
inc
push
mov
xor
ja
and
jns
mov
sti
mov
add
inc
xchg
push
sbbb
lods
jo
movsl
fs
cmp
pop
icebp
xchg
aaa
out
nop
repz
cmp
dec
dec
mov
subb
push
push
cmp
inc
ss
lret
mov
movsb
mov
ja
mov
repnz
push
in
mov
popa
push
cld
iret
mov
dec
sti
flds
mov
cmp
mov
lahf
push
mov
jns
ss
popa
test
mov
sub
sub
mov
add
arpl
scas
jmp
call
stos
pop
sbb
jbe
imull
cmpsb
xchg
pop
xor
inc
pop
pushf
sahf
mov
call
push
jmp
lcall
xor
xchg
mov
loop
push
sbb
subb
in
sub
inc
pop
xchg
subl
add
pop
cmp
xchg
push
jno
dec
es
bound
mov
lcall
push
imul
add
mov
cmp
cld
jg
jmp
imul
in
fisttpll
loopne
sub
sub
mov
jo
pop
pop
dec
or
push
in
jbe
jmp
jl
push
push
inc
int
cmp
int3
adc
add
loope
mov
daa
jns
sbb
dec
mov
dec
imul
xor
dec
push
jnp
mov
cmp
aad
addr16
cli
lods
or
out
xchg
mov
fwait
add
sbb
fidivs
stc
and
es
enter
dec
mov
pop
adc
sub
mov
jp
push
push
sub
jmp
pop
xchg
cmp
add
inc
fildl
push
mov
nop
pushf
in
mov
cmp
cli
lea
les
add
and
in
cmp
mov
xchg
fdivrs
popa
xchg
std
xor
in
mov
adc
ret
fs
lock
stos
pop
fcompl
sbb
ja
out
push
fwait
daa
into
or
shl
mov
sti
xchg
mov
fstl
jo
das
iret
sbb
lock
jae
mov
cld
mov
clc
xor
pop
cmp
inc
das
pop
mov
cmp
andl
fidivl
ret
xchg
lods
push
xor
hlt
push
ja
jge
les
pop
icebp
mov
rol
popf
sub
mov
lds
pop
ds
inc
leave
xchg
nop
cmpl
push
jbe
ljmp
out
outsb
fs
cltd
jp
mov
jl
cmp
pop
mov
repnz
testl
cmc
sub
dec
cs
xlat
jae
shrl
lcall
fistpll
jp
call
daa
xchg
jns
xchg
inc
sahf
insl
rcr
out
aaa
adc
fmuls
jmp
mov
lods
xor
js
sbb
adc
in
insl
insb
mov
mov
xor
lret
dec
or
lcall
xor
mov
mov
adc
adc
mov
inc
fchs
mov
shll
mov
add
mov
pop
int
mov
cs
popa
out
lds
jae
lcall
push
push
lcall
push
aas
mov
loopne
dec
add
pop
push
clc
xor
mov
sti
cli
adc
xchg
les
dec
push
ljmp
mov
cli
mov
popf
gs
or
pop
es
sbb
pushf
mov
mov
aam
punpckldq
inc
scas
or
push
push
dec
push
mov
pop
lcall
mov
in
push
jbe
xchg
pop
jns,pt
jne
pop
out
bound
jle
lret
lret
fisubrl
out
imul
add
jno
adc
outsb
sbb
pop
mov
cmp
scas
mov
insb
negl
jbe
jg
fcompl
enter
jg
xchg
notl
mov
pusha
lret
sbb
imulb
sbb
sbb
push
repnz
cmp
inc
push
fsubrs
or
mov
pop
dec
xchg
cltd
pop
push
sahf
cs
pop
dec
hlt
adc
mov
add
aaa
cmp
mov
ds
sub
jbe
inc
or
pop
and
and
push
and
push
pusha
int3
add
cltd
aam
add
xchg
lds
xor
push
test
mov
mov
aaa
int3
rcrl
lods
or
mov
cltd
mov
roll
mov
pop
mov
and
mov
lcall
push
mov
fists
in
js
mull
sub
inc
call
jae
pushf
fwait
jg
pop
pop
push
and
cltd
xor
sar
jl
ret
sbb
pop
jne
movsb
icebp
in
inc
call
adc
into
jne
and
sub
fstp
lods
add
imul
or
mov
insb
addr16
dec
imul
jo
jno
add
sahf
jl
dec
lret
mov
push
xor
sbb
adc
cmp
imul
dec
mov
add
jb
scas
cld
inc
mov
fdivrl
cmpsl
lahf
sub
popa
xchg
ret
dec
push
and
xor
xor
and
jmp
arpl
out
mov
fisttpll
or
call
aam
mov
xchg
xor
ret
lahf
or
mov
jb
pop
jo
add
lret
add
or
inc
lds
sub
fsubrp
pusha
sub
xor
mov
inc
and
enter
sbb
mov
out
jge
adc
jle
adc
dec
std
jg
notb
ss
into
xchg
popf
lcall
dec
cld
push
test
ret
das
sbb
lret
sub
inc
arpl
sub
sub
dec
xor
mov
mov
mov
dec
rorl
test
sub
out
cmp
jp
cltd
jmp
push
stos
cs
or
lahf
mov
mov
sub
xchg
clc
aaa
pop
mov
xchg
pop
jnp
incb
xchg
fcmovbe
nop
add
mov
push
ja
xchg
jecxz
xlat
cwtl
add
popa
int3
notl
push
bound
lahf
mov
or
fldcw
movsl
insl
push
push
jmp
inc
push
inc
or
ds
scas
jl
jno
sahf
mov
dec
cmp
adc
sarl
shll
in
dec
or
out
push
pop
divl
cmp
or
in
insl
psubb
xor
pusha
lcall
jae
sub
test
push
mov
popa
dec
movsb
jo
les
cmp
mov
bound
sub
add
lahf
ret
test
sub
sub
inc
adc
xor
fdiv
std
push
or
and
nop
bound
into
bound
rorl
or
shr
add
movsl
dec
lods
test
lahf
or
inc
mov
decl
xor
xchg
mov
inc
test
or
insb
iret
pop
or
int
add
fiaddl
out
dec
xchg
add
pop
lret
xor
ret
rorb
js
jge
or
invd
push
mov
gs
pusha
adc
shl
jge
loope
pusha
iret
pop
sti
inc
pop
mov
adcl
dec
cmpsb
or
push
mov
mov
pop
cmp
xlat
jo
adcl
and
test
adc
out
dec
sahf
stos
jmp
push
mov
add
test
jp
clc
lahf
pop
mov
cmpb
loopne
inc
cmp
nop
jno
dec
mov
sub
mov
dec
leave
loope
ret
ds
movsb
push
sbb
jne
bswap
movsl
inc
push
jb
test
adc
cmc
loopne
pop
sub
fs
cli
push
sti
jle
cmovns
mov
pop
inc
ds
mov
xor
jns
mov
orl
mov
jo
std
push
xor
nop
xchg
imul
bound
cmpsb
mov
or
jmp
enter
call
data16
mov
sub
mov
iret
gs
xchg
ss
arpl
inc
popa
push
mov
xor
sbb
lea
inc
lcall
imul
or
imul
sub
in
popl
repz
sub
or
mov
xor
cli
dec
pop
scas
sub
movsl
mov
mov
rorb
inc
adc
dec
pop
repz
xor
arpl
sub
repz
idivb
sub
stc
cmp
popa
fbld
js
out
jb
or
popf
jne
cmpb
out
adc
jecxz
jns
adc
mov
cmc
repnz
add
jno
mov
pusha
cltd
xor
rcrl
adc
mov
mov
dec
adc
fcmovb
daa
inc
pop
nopl
and
pop
out
sub
sahf
lds
pop
or
int
cmp
dec
jae
fsts
xor
sub
fldcw
test
out
dec
mov
iret
jno
in
les
mov
ficompl
xchg
inc
mov
fdivl
push
sbb
or
leave
daa
mov
popf
and
fbld
aaa
inc
sub
sbb
mov
jg
push
scas
or
sti
js
sub
arpl
leave
sbb
pop
push
lahf
es
sbb
xchg
cmp
lret
inc
movsb
mov
daa
sbb
adc
sbb
test
mov
das
dec
adc
leave
daa
push
and
cwtl
enter
aad
pop
and
test
mov
or
in
inc
cltd
push
pop
xchg
adc
cmp
sub
sbb
imul
ret
mov
sub
lods
jns
push
mov
call
cmp
js
sbb
adc
je
pop
dec
dec
jne
dec
or
jbe
cmp
rolb
jmp
ffree
sbb
out
ljmp
gs
je
xchg
pusha
cmp
in
sbb
push
adc
push
add
pop
push
push
or
enter
repz
lret
rol
lcall
cmp
stos
sbbl
out
insl
loop
lods
stos
mov
lahf
or
cmc
xor
xor
js
dec
add
rolb
and
mov
mov
fsubl
xchg
arpl
shll
imul
hlt
jmp
and
xchg
mov
sahf
fwait
lods
sbb
xchg
jl
testb
mov
pop
mov
jle
jb
test
nop
pop
xlat
push
mov
ljmp
pop
call
and
sub
int
fnstsw
sub
inc
hlt
lock
pop
outsb
imul
mov
in
out
mov
cmp
pop
mov
imul
jb
icebp
leave
fcompl
sahf
push
or
mov
xchg
aaa
fcmovnb
sub
cmpsb
iretw
push
jl
push
fstpt
div
sub
xchg
push
sti
movsb
push
dec
xor
lret
cmp
ja
fsubs
adc
add
sbbl
mov
out
cmp
out
enter
sub
inc
and
test
pop
pop
cltd
cmp
push
leave
or
dec
test
or
sub
mov
insl
cmp
test
jne
imul
pop
and
jb
mulb
lahf
or
mov
push
add
ss
mov
or
push
cmc
cmpsl
sbb
cmp
loope
je
and
mov
xor
loopew
mov
push
repnz
xchg
wrmsr
dec
sbb
dec
mov
ret
push
xchg
ja
fwait
aaa
aaa
sbb
mov
es
jle
in
dec
addr16
hlt
pop
mov
xchg
adc
repz
jnp
repz
outsb
jmp
mov
leave
aad
out
js
sub
sub
inc
repz
push
and
fwait
mov
cmp
xchg
sbb
sahf
mov
jecxz
pop
pop
lds
mov
mov
icebp
or
test
and
arpl
out
shlb
xorb
or
cmp
mov
xlat
push
push
cltd
imulb
inc
sbb
into
mov
sub
xor
push
or
movsb
ret
cmp
insl
fistpl
loope
or
stos
rcl
es
push
push
ss
mov
mov
sbb
fstpl
sbbb
lret
xorb
fdivs
mov
push
lock
das
xorl
nop
movsb
testb
int
movsl
in
mov
js
push
into
mov
imul
scas
mov
dec
pop
sbb
ret
xchg
ss
cmp
lcall
cmovl
xchg
inc
stos
addr16
jne
cs
pop
lahf
cmp
mov
sub
bound
jecxz
cmpsl
pop
and
dec
rcll
subl
ret
jne
adc
in
pop
jg
mov
mov
inc
loop
daa
mov
push
jns
das
cltd
outsb
test
out
mov
lods
or
push
inc
cwtl
and
repz
mov
jmp
pop
jne
int
ficomps
jae
sar
movsb
mov
inc
enter
cmpsl
pop
add
dec
cld
mov
sub
and
loopne
xor
scas
andl
fstps
mov
imul
repz
jns
xor
mov
jne
pop
or
xlat
stos
mov
dec
jo
stc
inc
inc
push
addr16
aas
mov
aas
std
psubsw
push
xlat
xor
flds
shll
jo
cmpsl
mov
pop
in
pop
sub
std
and
inc
lods
lret
cltd
or
call
lahf
push
jnp
mov
decl
ljmp
sti
adc
jge
cmp
clc
sub
mov
orl
cwtl
stos
cld
inc
clc
push
shll
lds
cmpsb
fisttpll
aaa
gs
or
test
adc
jbe
outsl
call
test
dec
rcl
sub
imul
stos
and
mov
mov
insb
mov
add
mov
xchg
inc
outsb
adc
and
lock
aam
stc
test
les
mov
mov
push
inc
movsb
ss
and
hlt
xlat
inc
into
movsl
clc
aam
pusha
push
pop
push
insl
inc
ja
cld
sbb
nop
into
or
into
mov
mov
ret
push
repz
ds
shl
scas
aas
cli
lds
jb
push
cmp
loop
popf
cwtl
loopne
movsl
cmp
mov
fcmove
cli
mov
pop
iret
orb
jb
or
push
scas
push
cld
push
jl
shrb
push
in
cmpsl
loope
dec
xchg
cmc
pop
xchg
add
data16
push
cmpsb
and
push
insl
add
and
insb
into
xlat
jp
sbb
add
pushf
out
push
pusha
jae
jnp
mov
mov
cmp
repnz
js
gs
add
test
gs
inc
adc
mov
or
mov
xchg
pop
inc
or
pushf
rcr
adc
or
mov
mov
jp
lea
adc
push
push
jle
add
jmp
iret
vaddps
adc
stos
clc
xchg
movsb
push
mov
push
xchg
push
mov
cmpsb
rolb
pop
into
mov
xchg
cli
loope
mov
jmp
or
mov
ja
pop
stc
pop
push
lcall
fists
rorb
mov
fcomps
out
shrb
sub
and
or
pop
mov
shll
xorl
into
in
out
sbb
jnp
out
mov
dec
ficomps
mov
popa
mov
and
insl
dec
sub
jle
and
out
popf
call
stos
xchg
loope
add
adc
std
aad
negb
or
ds
adcl
mov
movb
or
repz
adc
outsl
jo
pop
aad
cmp
bound
or
jecxz
in
mov
sbb
cmc
add
jl
insl
ret
and
fs
mov
imul
das
adc
mov
or
subl
mov
fdivrl
adc
jmp
or
xchg
ss
lahf
hlt
pop
dec
sbb
dec
adc
sub
mov
xor
add
sarb
inc
loopne
pop
xchg
push
push
test
pop
in
xchg
movsb
outsb
nop
jecxz
cmp
std
and
into
push
loop
test
mov
outsl
popa
or
aas
cmpl
popa
mov
mov
pop
or
adc
scas
into
jae
lods
jmp
xchg
lcallw
or
xchg
mov
xor
push
mov
frstor
aaa
les
std
aaa
mov
inc
pop
aaa
jg
je
push
inc
js
in
mov
add
sub
pushf
int
mov
and
ds
dec
xchg
mov
addr16
push
and
push
hlt
xchg
loop
push
jg
gs
orb
scas
pinsrw
xchg
in
cmpsb
xor
push
xlat
inc
xchg
sbb
xor
mov
aam
pop
mov
xchg
cmp
push
cli
mov
enter
mov
mov
cmp
and
out
xor
sbbl
sbb
jp
mov
std
retw
mov
ljmp
or
xchg
dec
dec
hlt
jl
push
arpl
inc
mov
inc
xchg
in
sub
push
cs
push
ljmp
adc
cld
adc
mov
jmp
enter
inc
jno
movsl
sub
push
adc
lock
loope
gs
xchg
movsl
icebp
out
add
outsb
cmp
push
ret
std
loopne
xor
test
lea
push
cmp
xchg
incb
andb
dec
int
fwait
cmc
mov
shl
or
mov
and
fbld
fidivrs
fdiv
xorl
cmp
fbld
hlt
lahf
push
dec
frndint
cmp
int
fists
and
outsl
sti
rolb
scas
jl
inc
movsl
popa
inc
inc
cmp
jo
jp
xor
inc
mov
stc
dec
inc
push
loop
pop
pop
or
pop
scas
mov
mov
lds
int
push
shll
cmp
je
mov
int
into
dec
fcomps
mov
pop
jle
push
xchg
xchg
lcall
mov
xchg
inc
outsb
adc
xlat
mov
dec
jp
xor
add
push
push
xchg
and
or
scas
xchg
ficomps
bswap
in
cmpl
shrl
mov
and
test
gs
add
cs
jae
sub
in
ja
icebp
dec
pop
ja
gs
sub
insl
add
cmpsb
push
ret
fsubr
cmpsl
ror
adc
into
ss
std
dec
mov
sbb
xchg
xor
std
stos
push
mov
fucompp
fs
fs
outsb
out
xor
jp
rclb
icebp
into
mov
lds
inc
mov
mov
fsubrs
and
pop
cmpsl
jo
shl
fidivrs
frstor
cmp
mov
xor
add
adc
fidivrl
jecxz
fdivs
and
push
in
dec
aam
jmp
mov
adc
out
call
repz
cwtl
pop
push
mov
rclb
das
xchg
cld
cmp
scas
sbb
stos
icebp
jno
lahf
and
nop
push
out
cmp
push
ret
mov
jp
loope
or
or
ffree
xor
in
fidivrs
push
scas
insl
into
and
test
pushf
int
jae
jl
inc
or
mov
test
inc
xor
or
or
pop
repnz
stc
aas
in
dec
jp
adc
inc
stos
out
xchg
jl
sbb
inc
add
scas
imul
into
mov
int3
adcb
dec
jns
mov
repz
inc
adc
xchg
popa
xchg
pusha
and
or
sbb
cmp
aam
mov
add
jne
and
sbb
sbb
loopne
xchg
jg
es
or
pusha
xchg
and
lahf
ljmp
andl
xor
imul
push
insb
lcall
aam
cmpsl
xor
test
inc
ss
test
addl
sub
jno
pop
mov
xchg
insl
mov
cmpsb
and
cmp
sbb
std
test
repz
cld
pop
adc
push
jl
pop
ffree
lods
sub
pop
cltd
sub
pusha
int3
test
pop
ss
adc
or
pop
xor
lcall
lret
movsl
push
sbb
push
mov
or
pusha
int
out
ja
mov
or
sub
mov
push
std
sub
xchg
scas
aam
pop
roll
cmp
pop
mov
dec
faddp
clc
frstor
cmpsb
je
std
inc
and
testl
dec
add
xlat
xchg
rcr
stos
push
fcmove
mov
or
push
aam
decb
lcall
mov
pop
lret
cmpsl
std
mov
dec
mov
add
adc
rcrb
jnp
pop
enter
jmp
movsl
adc
shll
out
out
mov
shr
std
cmp
in
mov
sbb
hlt
arpl
push
fwait
sub
sbb
mov
fdivr
movsl
je
or
jb
jg
jle
js
sub
ret
pop
xor
and
sub
sbb
sbb
jno
fs
loop
mov
ret
jle
cmpsl
ljmp
sub
int
cmp
mov
push
lcall
add
test
test
jl
pop
in
das
mov
mov
out
jno
mov
aaa
sbb
lret
aad
icebp
mov
sub
mov
sub
sub
jno
cmp
jp
rorl
mov
imul
mov
pop
lods
pop
leave
adc
cmpsl
xor
xlat
inc
add
fsts
outsb
xor
outsl
xchg
jbe
mov
xlat
stc
inc
mov
rol
inc
inc
xor
lret
mov
sbb
adc
xchg
sub
push
cmp
sub
inc
stos
ss
inc
outsl
pop
jmp
movsb
inc
xchg
ret
imul
mov
cmpsl
add
mov
rcl
mov
jne
or
push
pop
aam
pop
out
inc
sub
sbb
dec
mov
mov
xor
pop
mov
mov
jg
push
sbb
fs
mov
roll
mov
fwait
pop
mov
icebp
sub
cltd
jnp
icebp
inc
add
sbb
mov
sub
dec
push
repnz
iret
cmp
mov
ljmp
sti
sub
sbb
enter
imul
dec
ljmp
stos
xchg
int3
cmp
mov
dec
ret
pop
sbb
iret
out
jnp
add
mov
clc
push
sbb
ljmp
inc
mov
dec
cmp
xchg
xlat
dec
ljmp
aaa
sbb
add
jns
and
cwtl
cmp
dec
mov
and
dec
jle
mov
scas
int3
stos
mov
int
mov
fldenv
mov
jge
inc
and
mov
jge
adc
les
ljmp
pop
adc
adc
inc
mov
adc
xchg
sub
pushf
jg
outsl
inc
inc
push
mov
arpl
stos
leave
adc
pop
dec
sub
ret
jg
and
loop
and
pusha
cmovno
xor
mov
fsts
dec
pop
sbb
in
scas
ja
lea
and
pop
jecxz
add
rcll
jns
daa
xchg
movsl
pushf
mov
test
jo
gs
movsl
mov
jb
or
test
and
lock
or
sub
daa
stos
lcall
lcall
dec
push
inc
subb
in
jns
fdivrl
fbstp
sub
adc
lret
aaa
imul
jne
popa
cwtl
repz
mov
sbb
xchg
inc
out
fsubrl
jge
jmp
je
inc
lret
setl
scas
sub
roll
pop
jne
stc
inc
add
or
clc
sbb
movsb
inc
lods
dec
xor
lcall
mov
sti
jle
pushf
mov
mov
scas
xchg
dec
jecxz
subb
iret
mov
clc
mov
jecxz
jp
outsb
mov
sub
call
lcall
fsubrl
fildl
addr16
push
incl
or
pop
mov
adc
push
mov
pop
xorb
sbb
lea
sbb
adc
sti
hlt
mov
scas
repnz
mov
jbe
pop
aas
out
add
mov
mov
pop
aam
sub
in
cmp
pushf
adc
mov
fbstp
clc
mov
adc
or
das
sar
int3
cwtl
movsb
dec
pusha
mov
outsb
das
mov
mov
mov
sahf
jecxz
cltd
in
in
ljmp
cmpsb
in
xchg
or
inc
lret
mov
mov
and
mov
aas
ss
sub
push
xchg
iret
add
incl
cmp
mov
fists
adc
loope
sbb
inc
mov
test
rolb
dec
jb
sbb
fimuls
push
cmc
mov
loope
fistpll
xchg
jg
data16
clc
stc
in
xor
cmp
rol
outsl
imul
fs
mov
loopne
push
push
ja
outsb
add
inc
sahf
repz
adc
enter
cli
lea
hlt
cmp
adc
jl
hlt
out
xchg
cmp
pop
cmp
out
insb
push
add
add
fistps
mov
push
or
test
add
rolb
mov
icebp
add
cld
or
cmpsl
sbb
push
sbb
in
cld
xchg
testb
in
test
lahf
mov
shll
add
jnp
movsb
dec
in
jmp
fs
aas
out
inc
aam
mov
in
leave
cli
scas
jge
cmp
or
jnp
pop
xchg
xor
xchg
cmpb
cmpl
gs
jge
mov
sbb
mov
sbb
jecxz
mov
sub
aad
and
jne
mov
xchg
les
mov
mov
imul
pop
mov
ljmp
xchg
jne
cmp
adc
outsb
inc
iret
adcb
sti
fildll
ficomps
push
int3
int3
xchg
fldt
cmpb
sbb
in
dec
and
movsb
shlb
push
jmp
lock
sub
jmp
mov
dec
push
popf
dec
out
mov
scas
in
dec
and
push
js
dec
xor
hlt
pop
and
in
rol
push
xchg
push
ja
sub
adc
jnp
push
lcall
fisubl
mov
push
insl
ljmp
jle
loope
pop
and
jns
loopne
das
push
pmaddwd
sub
push
inc
sbb
adc
inc
or
ret
das
lahf
jmp
sub
shl
xchg
inc
sub
pop
lock
xor
in
mov
ja
xchg
ljmp
out
push
stc
adc
pop
out
stos
inc
loop
inc
xchg
inc
loopne
ljmp
mov
push
pop
sub
in
sub
add
jp
or
lock
int3
adc
repnz
pop
fwait
sub
dec
pop
lock
pop
cmp
jle
xchg
sbb
nop
shrb
xchg
sub
xor
and
mov
mov
lods
dec
iret
push
xchg
lcall
or
or
jl
std
adc
pop
ss
aas
sahf
arpl
mov
or
jae
enter
or
mov
cmp
push
mov
adc
into
movsl
imulb
stos
or
lcall
sahf
inc
pop
xor
in
cmp
ja
adc
shll
push
test
cli
bound
ret
jnp
pop
xor
addl
rcr
movsb
jp
dec
dec
inc
mov
pushf
stc
push
sub
add
add
insl
add
push
adc
mov
push
aad
int
loope
sahf
sub
and
pushf
xchg
ja
jg
cmpb
sti
loope
je
mov
jnp
push
aas
lret
aaa
sub
xchg
mov
mov
mov
repnz
lods
cwtl
das
inc
xchg
mov
and
adc
inc
push
xchg
jae
or
push
aas
sbb
call
mov
mov
inc
mov
mov
mov
les
std
mov
ja
arpl
xor
adc
insb
divl
shlb
jecxz
mov
cli
sti
stc
pop
xchg
stc
in
lds
cltd
jae
sub
iret
sahf
sub
mov
fnstsw
adc
leave
pop
aad
jg
jge
jg
jno
fdivl
clc
aas
fadd
lahf
sub
out
dec
fisttpll
sbb
sahf
mov
icebp
push
mov
scas
add
push
imul
push
or
mov
sub
aam
gs
out
mov
stos
shlb
int3
sub
xor
aam
mov
xchg
in
cmpsb
pop
or
pusha
and
stos
test
insb
adc
xor
and
mov
inc
mov
mov
je
or
aas
iret
push
cmp
movzbl
push
dec
jg
lods
xlat
jmp
xchg
and
pop
out
loopne
pusha
cltd
cld
xor
cmpsb
cmpsl
jge
adcb
xchg
lock
js
sbb
hlt
fistps
mov
cwtl
fdecstp
loopne
adc
scas
scas
sahf
andl
adc
cmp
push
fsubrs
and
daa
incl
pop
push
les
mov
or
xor
push
aad
lods
mov
mov
movsl
lret
mov
and
xchg
push
push
mov
push
bound
fiaddl
sahf
adc
xchg
adc
pushf
and
xchg
cmp
shr
xor
sbb
negl
into
cmp
and
scas
pop
dec
jno
push
jge
push
mov
addr16
pop
dec
pop
xchg
and
shll
lea
xor
scas
cmp
ficoml
mov
sbb
ljmp
sbb
lret
push
inc
jl
std
addb
pop
inc
or
rorb
xchg
aam
fistl
jle
ljmp
aam
insl
sbbb
jnp
add
int
adc
sbb
lcall
ret
cmpsl
xor
pop
lods
sahf
mov
xchg
std
sub
mov
mov
xor
cmp
test
sbb
inc
or
lods
or
inc
push
pop
imul
jmp
popf
jae
out
dec
push
add
or
or
test
cld
loop
sub
or
pop
into
mov
push
iret
mov
bound
push
jl
mov
xor
sbb
dec
lcall
add
sbb
fcmovbe
sbb
push
add
cmpsb
inc
into
xchg
icebp
and
lods
dec
jg
cmpsl
incl
xor
cs
cwtl
jno
popf
lods
fdivrl
loop
xchg
adc
pop
jns
mov
push
xchg
clc
js
mov
sub
in
stos
mov
add
sub
test
clc
push
aam
jae
xor
dec
push
call
mov
and
mov
mov
sbb
es
mov
mov
js
mov
sbb
fcomps
leave
pop
pop
cmpsb
in
jecxz
sbb
mov
mov
scas
add
lcall
cmp
sbb
cld
jle
xchg
dec
scas
mov
add
dec
jg
push
ss
pop
fcomip
xchg
je
daa
dec
or
add
rcr
arpl
inc
fisubrs
pop
ss
sbb
stc
mov
adc
jbe
inc
bound
jge
cmp
js
test
xchg
fisttpl
push
subl
sub
xor
xchg
inc
xchg
shll
and
ljmp
jecxz
dec
xchg
xchg
lds
movsb
inc
jecxz
push
shll
jne
fistps
pop
cmpsl
dec
adc
leave
rdmsr
mov
scas
pop
mov
push
and
sbb
inc
or
cmp
jo
ja
scas
cmpsb
xor
push
rcll
roll
mov
inc
scas
nop
aaa
mov
dec
dec
and
mov
xchg
adc
mov
xchg
and
arpl
jno
lock
push
inc
inc
negl
or
jp
cmp
cli
xchg
dec
xor
dec
jno
sbb
mov
push
mov
mov
mov
jecxz
mov
mov
gs
test
jg
enter
pop
mov
fcmovnu
daa
dec
enter
or
ds
dec
sub
xchg
cmp
cmp
add
or
cmpsl
mov
sti
scas
shrb
or
dec
push
mov
subl
jp
fnstsw
mov
cmp
xchg
jbe
call
mov
out
adc
and
mov
mov
jl
inc
mov
mov
inc
and
fbld
mov
in
mov
aad
rcll
int
jl
pop
rolb
sbb
push
rclb
jns
lret
out
mov
cmp
mov
shrb
dec
xchg
xchg
push
or
adc
xor
mov
movsl
and
imul
push
cs
mov
fcmovnu
jo
cwtl
sub
mov
testb
scas
rorl
inc
fisubl
cmc
dec
adc
xchg
cmp
fwait
scas
out
ret
jmp
cli
or
inc
pop
aas
scas
sub
in
insb
subb
xchg
xchg
aad
push
cmp
xor
pop
inc
ds
pop
and
cmpsb
out
out
add
pop
pusha
inc
or
addb
sbb
cmp
bound
icebp
outsb
mov
pop
daa
add
out
cmp
aad
jl
andb
mov
shr
jmp
jb
xchg
ja
sti
decb
out
push
sahf
pop
imul
ja
iret
je
lds
and
lret
shrl
scas
mov
sti
adc
movsl
fwait
jns
aam
aaa
fidivrs
pop
pop
mov
movsl
out
mov
mov
enter
pop
pop
push
lods
sub
jl
sbb
mov
push
lods
sbb
js
fsubs
clc
out
mov
xor
xor
addl
cmp
fmulp
in
aam
insl
andb
enter
jle
insl
jmp
bnd
push
mov
les
cmp
cmp
mov
js
enter
xchg
mov
imul
jmp
test
sub
test
push
icebp
fsubrp
popa
outsb
into
sbb
pop
xor
fs
adc
int
and
sbb
nop
sub
jne
or
inc
pusha
mov
mov
imul
stc
pushl
push
lds
push
decb
inc
mov
pop
aas
add
or
pop
ficomps
jae
dec
dec
push
dec
sub
inc
loopne
fcoml
ss
fwait
jns
add
sbb
out
out
xchg
inc
adc
cs
adc
movsb
xor
mov
fldcw
sbb
push
scas
aas
lods
sbb
sbb
inc
xor
xchg
es
scas
insb
or
inc
mov
pop
je
addr16
fldt
in
pop
lods
mov
jmp
or
mov
ss
mov
lds
std
loopne
cwtl
or
repnz
hlt
xor
or
enter
mov
fwait
cmp
jmp
ret
sbb
in
or
dec
xor
mov
sbb
stos
pusha
in
jge
xor
xor
out
clc
int3
inc
jmp
scas
lahf
test
je
or
mov
out
in
push
lret
sbb
in
adc
in
sbb
push
cmp
nop
mov
cmp
push
repnz
popf
shll
and
int
push
mov
pop
insl
sub
into
jmp
dec
nop
sbb
adc
ljmp
xchg
ss
push
stos
adc
stc
pop
andl
fmuls
push
out
bound
jne
add
xchg
daa
sahf
sti
adc
lret
repnz
clc
fcmovbe
mov
cmp
in
sbb
push
cwtl
mov
shlb
test
stc
data16
pop
cmp
xchg
pop
or
out
insl
bound
fldt
push
rcll
mov
rcll
iret
aas
mov
bound
xchg
mul
sbb
push
cld
addr16
fisubrs
and
xor
push
rolb
les
and
xchg
xor
scas
xchg
int3
mov
add
xchg
pushf
stos
sbb
pushf
sarb
dec
out
or
jle
cmc
pop
test
cmpsb
int
ljmp
stc
minps
jmp
imul
lea
push
inc
dec
bound
mov
adc
mov
stc
xchg
lret
cmp
inc
scas
sbb
pop
mov
xchg
pop
inc
add
dec
xchg
dec
hlt
cmp
xor
dec
xor
cmp
jns
data16
arpl
or
in
sub
pop
mov
in
stc
popa
iret
test
ret
xchg
jno
add
in
rcl
mov
enter
int3
addb
les
jl
cmpsl
scas
mov
lock
dec
cli
ja
cmp
inc
rcrb
aaa
mov
inc
jb
pop
lock
adc
push
mov
jns
or
lods
mov
decb
ja
scas
sub
mov
movsb
in
in
pop
js
xchg
push
sar
cmpb
fdivrl
cmp
aaa
mov
cs
dec
lcall
sarl
pop
outsb
lods
ret
pop
cmc
dec
lock
xchg
rcll
mov
xchg
adc
mov
cwtl
inc
add
aaa
push
push
xor
fmul
pushf
int
fsubr
ja
inc
incl
xor
dec
fisubrs
aas
pop
aad
dec
arpl
stos
jecxz
sbb
ret
cld
inc
xor
pop
jp
sub
mov
aaa
push
popf
inc
das
mov
pop
stos
pushf
mov
imul
mov
sub
enter
lods
aas
mov
cltd
or
jo
cmp
shlb
adc
push
xchg
cwtl
setae
sbb
lds
rclb
xor
movsl
dec
inc
repz
mov
jle
mov
xor
xchg
sbbb
test
sub
in
push
xor
cmc
pop
mov
push
into
sbb
or
xchg
xchg
arpl
sbb
cmp
aaa
stos
mov
cld
test
iret
insl
xor
and
or
jnp
add
dec
nop
or
inc
cltd
mov
mov
xchg
fstp
and
cld
mov
and
dec
push
inc
arpl
into
xor
push
in
es
into
orb
rol
mov
sti
sbb
adc
mov
repz
sub
pop
adc
idiv
rclb
sub
xor
pop
pop
stc
pop
scas
adc
loopne
xor
rcll
dec
cmp
cmpsb
out
lods
pop
sub
je
clc
xor
cmpsb
or
int3
lods
sbb
mov
push
push
cld
xchg
rcr
dec
dec
fs
xchg
sub
pop
cmp
pushf
pop
icebp
outsl
push
and
mov
cmp
and
xchg
int
or
imul
repz
pop
into
cmpsl
repz
sbb
mov
adc
mov
int3
sub
andb
push
scas
test
cs
cli
in
neg
enter
inc
dec
pop
call
enter
lretw
imul
leave
push
movsl
inc
cmp
int
cmc
ss
mov
aad
xchg
cs
mov
adc
cld
dec
pop
pop
sahf
jl
mov
out
xlat
ss
pop
fadds
bnd
js
xor
xchg
pop
divl
jne
sub
test
or
vdivps
ljmp
xor
imul
cli
or
mov
mov
pop
inc
mov
or
fs
out
into
nop
shll
call
adc
mov
pop
andb
cmpsb
sbb
jl
in
pushf
stos
dec
adc
in
inc
sbb
and
ror
mov
jns
push
subl
xor
pop
out
inc
int3
in
int3
mov
mov
pop
insl
xchg
xlat
xchg
call
int3
divb
push
test
lret
lock
jge
sbb
ret
jne
and
ljmp
shlb
mov
jle
mov
push
pop
lods
sbb
jmp
pop
xchg
mov
push
daa
idivl
sub
push
mov
xchg
mov
lret
add
xchg
push
mov
cmpsl
ss
cwtl
int
gs
cmpsl
stc
into
inc
out
lods
cli
jnp
or
adc
xchg
sbb
rclb
jmp
fwait
cld
push
rclb
loope
lods
loop
pop
mov
hlt
xchg
cli
dec
sub
lds
push
jmp
pusha
mov
icebp
mov
jecxz
insb
sbb
mov
sub
loop
xchg
push
push
push
daa
mov
sbb
push
call
sbb
jnp
loope
add
adcb
nop
sub
data16
dec
hlt
xchg
inc
mov
adc
mov
nop
push
adc
imul
xlat
mov
outsl
sahf
stos
je
mov
mulb
xchg
mov
stos
inc
jae
pop
sub
sbb
jno
pop
dec
aaa
mov
nop
adc
pusha
jnp
rolb
sbb
push
lods
dec
inc
xor
scas
nop
gs
push
cmp
jo
ja
or
adc
and
inc
sbb
repz
push
cltd
or
dec
mov
cli
jmp
icebp
xchg
lret
stos
or
jb
test
add
mov
dec
xor
popf
shll
mov
push
inc
mov
lds
popa
in
xor
das
imul
jge
lcall
cmp
negb
adc
leave
cmpsb
mov
fistl
stc
and
jno
or
push
xrelease
dec
insl
dec
sbb
outsl
cmp
ds
imul
aaa
cmp
push
add
lea
push
xchg
aaa
or
mov
dec
int
daa
jmp
cmp
mov
nop
mov
xchg
adc
xchg
shr
lock
push
std
cwtl
stos
sahf
or
jl
and
add
inc
in
aas
mov
int3
push
enter
int3
sub
in
add
cmc
mov
loopne
insb
sbb
mov
inc
cmpsl
sub
or
pop
pop
shl
icebp
sbb
add
lds
jno
jnp
in
inc
inc
or
sbb
popf
inc
adcb
test
fdivl
push
or
inc
pop
mov
or
sbb
cmp
adc
orl
ds
lret
in
mov
pop
mov
popf
push
sub
aaa
mov
cmp
jmp
mov
arpl
cmp
mov
push
int3
aas
flds
repz
into
mov
jae
xchg
pop
xor
in
or
cmp
clc
aad
int
push
movsl
dec
adc
and
dec
or
lds
popf
sahf
fwait
mov
dec
or
mov
add
sbb
cmpsb
sub
cmp
outsb
push
add
push
lret
mov
cli
and
mov
mov
cmpsb
shlb
cmp
outsl
jecxz
add
push
sub
push
xchg
out
fsubl
cmp
fistps
mov
clc
in
push
xchg
add
repnz
sbb
sti
mov
and
fcmove
aad
scas
mull
sbb
out
fildl
in
js
in
jl
lret
js
xor
xchg
mov
pop
adc
mov
in
push
push
dec
sub
cld
rcrl
pop
inc
mov
jae
mov
xor
push
aaa
and
xrelease
pop
movsl
mov
jl
negb
insl
or
xchg
add
pop
mov
aam
xchg
xor
loope
scas
test
scas
call
js
jl
pop
mov
std
imul
push
sahf
hlt
dec
lods
dec
push
xlat
or
xchg
adcl
mov
and
cmp
test
xor
aas
not
mov
cmp
mov
ds
mov
add
add
and
xor
xor
aam
or
push
fs
xor
repnz
mov
cmpsl
or
sub
adc
mov
fcoml
inc
lock
mov
adc
leave
pop
ja
dec
xchg
push
add
pop
ror
mov
sub
jae
cmp
repz
jmp
add
sarb
inc
int
pop
mov
jle
ja
mov
fdiv
mov
clc
mov
xor
test
mov
sbb
xlat
inc
push
cmpsb
popa
mov
dec
ret
lahf
jl
out
fsubl
sbb
dec
mov
out
inc
mov
adc
lret
ret
ds
mov
enter
scas
leave
aas
shrb
mulb
add
pop
fldt
xchg
outsb
gs
idivl
mov
fisttpll
push
sarb
jno
dec
div
addr16
xchg
mov
pop
dec
push
mov
out
out
or
test
dec
sub
push
mov
xor
mov
pop
sbb
mov
out
mov
xor
push
mov
or
and
dec
pop
jbe
dec
lods
testb
push
jb
inc
dec
xlat
mov
jbe
push
inc
mov
pop
aaa
ret
or
stos
jne
xor
movsb
aas
mov
mov
cmp
add
ret
adc
sbb
out
mov
jge
inc
pushl
mov
je
xchg
fnsave
lret
cmp
shll
inc
inc
push
fcoml
ret
scas
or
scas
fldenv
and
les
lds
adc
cmp
fscale
push
in
out
cmp
scas
scas
repnz
or
pop
mov
bound
push
push
aam
lds
loopne
aas
xchg
ret
out
jne
inc
push
movb
pusha
sti
push
jg
sahf
add
push
sarb
adc
pop
cmp
ljmp
popf
add
and
inc
xchg
add
xlat
aad
mov
cmc
push
fildl
jne
sub
sub
dec
repz
int3
pop
xor
inc
rcll
lds
push
ss
repz
sbb
std
mov
cmpsb
or
cmc
inc
mov
ret
mov
adc
out
into
mov
movsl
xchg
popf
push
jge
pop
xchg
xchg
nop
test
adc
xor
sar
popf
mov
icebp
cli
lea
mov
ftst
adc
ds
test
lret
out
jmp
mov
out
xor
sahf
test
sub
push
xor
sub
push
int3
pop
daa
xchg
dec
pop
sbb
mov
cmovl
lock
inc
inc
mov
mov
mov
sbb
lds
lret
cmp
dec
lds
dec
push
and
jg
mov
bound
out
test
dec
das
cmp
jmp
cmp
sub
jl
imul
jg
pop
loope
xor
and
push
jl
rorb
xchg
or
cmp
pop
loope
pop
xor
sbb
cld
gs
sub
jnp
dec
fsubl
push
int
pushf
inc
shl
jmp
imul
out
ret
xchg
mov
cmpsb
negb
icebp
pop
fsubrl
add
xchg
xchg
cld
push
cli
dec
sub
jb
push
cs
inc
popf
xor
popf
and
or
cmp
lock
adcl
inc
adc
xchg
xchg
mov
push
pop
loopne
xchg
adc
mov
bound
shrl
imul
lret
inc
movsb
and
rorb
sbb
cwtl
and
sbb
repz
adc
jne
adc
mov
out
incl
icebp
add
adc
loopne
sub
or
ss
lods
and
stc
nop
ret
add
subb
mov
leave
xchg
and
xor
loope
jnp
jae
dec
push
cmc
es
jmp
jno
xorb
pusha
pop
leave
jo
jmp
sahf
sub
mov
popf
iret
dec
iret
mov
push
lods
pop
sub
aad
iret
std
data16
adc
fimull
ficoms
sbb
xchg
outsl
mov
fwait
sub
fsubl
aaa
jmp
or
mov
xchg
pop
adc
mov
adc
dec
jmp
std
lock
sahf
loope
lcall
and
rol
pushw
rcll
and
mov
inc
and
adc
in
mov
cld
mov
and
add
movsb
xor
xor
nop
jl
jecxz
inc
jg
dec
das
cmp
movb
push
ficoml
push
or
jecxz
push
lret
and
xchg
xor
pop
stos
or
clc
and
sbb
hlt
es
andb
es
dec
stc
fs
shrl
xor
pop
cli
repz
movsb
xchg
test
mov
inc
fs
jg
mov
push
pop
mov
jbe
fsubl
jb
clc
fs
add
incl
mov
cmp
fnstsw
sbbl
or
pop
mov
fst
push
mov
pop
fst
sub
dec
push
jecxz
adc
pop
aam
lcall
mov
push
or
jg
out
sbb
sbb
or
insb
out
scas
call
sahf
jnp
and
lahf
adc
sub
sbbb
add
bound
dec
out
es
stc
push
repz
sub
push
test
xor
enter
sahf
push
pusha
das
xchg
inc
add
sti
adc
xor
mov
mov
shl
jne
or
clc
fs
das
fistl
shrl
cmp
dec
clc
inc
test
pop
shlb
repz
cmp
mov
mov
push
sbb
ret
jmp
leave
sub
push
scas
mov
cmpsl
imul
lret
lahf
arpl
lret
clc
shlb
jmp
ds
int3
sar
sub
icebp
in
jb
mov
inc
inc
cmpsb
fs
repz
cwtl
popa
js
push
inc
cmp
or
pop
xor
aaa
cwtl
mov
daa
xlat
outsl
pop
push
add
sbb
rcl
das
sub
pusha
cmc
inc
addr16
xchg
xlat
mov
sbb
loopne
ffree
jb
scas
jl
xchg
popf
fstpt
movsb
jle
add
addr16
pop
jl
jp
mov
adc
sbb
mov
mov
scas
pop
jg
pop
clc
insl
into
xor
push
jb
in
pop
lds
sub
iret
jmp
sahf
nop
scas
cmp
cmp
pushf
lds
jmp
mov
inc
or
adc
into
es
jnp
jle
shll
pop
xchg
mov
push
add
add
cmc
jne
aas
xchg
in
movsl
cmpsl
shl
fmull
mov
mov
or
ret
lods
repnz
outsb
add
stc
loope
fdivs
loopne
and
xchg
push
stos
xchg
inc
pop
mov
fldl2t
insl
jmp
aad
cmp
or
pop
out
lahf
cld
cli
mov
mov
inc
cmpl
daa
add
inc
mov
xchg
loopne
xlat
cmp
aad
popa
sbb
popa
adcb
out
cmc
dec
mov
jb
pop
mov
stos
bound
mov
ja
daa
movsl
push
jmp
cmpsb
and
cmp
and
ds
fistpl
cltd
lock
inc
mov
mov
cmp
inc
dec
test
cwtl
dec
fidivl
inc
inc
pusha
lret
mov
movsb
stos
add
mov
orl
lahf
ja
out
repnz
lds
push
into
addr16
out
fadds
addl
pop
mov
push
jnp
and
rcll
enter
data16
inc
xchg
sbb
lock
repz
pop
push
xor
mov
sbb
dec
aad
jb
mov
inc
nop
lods
inc
inc
push
or
shl
testb
sub
lea
dec
inc
dec
addr16
xor
loope
sub
lret
repnz
pop
jg
idivl
push
and
push
addl
loop
add
shll
xchg
xchg
jg
mov
mov
insb
sbb
inc
clc
les
scas
add
cmp
push
icebp
lds
cmp
js
sub
jb
push
iret
or
mov
push
xor
enter
lret
jecxz
xchg
cmc
pop
add
leave
jae
fiaddl
sti
push
in
jbe
mov
jne
ret
add
inc
dec
adc
daa
cmp
xchg
insl
sbb
pop
shl
jno
lods
xchg
sti
adc
xor
mov
xchg
and
mov
in
adc
cmc
cmp
lret
or
fstpt
mov
inc
and
xchg
fcmovb
inc
mov
cmp
cs
ret
test
out
inc
push
dec
fdivrl
cmpsb
jmp
cltd
or
loop
pushf
cld
rorl
in
stos
mov
and
jns
loopne
add
sbb
xorb
add
addr16
inc
push
cmp
mov
sub
repz
dec
and
inc
and
push
arpl
inc
sbb
jo
pop
mov
lcall
jae
mov
ror
sbb
data16
ret
jp
or
inc
mov
add
cmp
das
dec
movsl
sahf
add
cmp
adcl
xchg
and
jb
je
stos
call
sub
xchg
jge
lret
pop
or
sub
push
aaa
xor
xchg
cld
stos
dec
xchg
imul
loop
jns
int3
push
test
test
rorb
movsl
and
cli
mov
stc
sub
iret
pusha
pop
mov
inc
cmp
jg,pn
mov
leave
outsb
sub
lds
adc
cli
cmpsl
cmpb
icebp
add
pushf
cmpsb
cmp
jl
push
xor
shrl
and
xchg
adc
dec
fs
insb
out
push
pop
addr16
or
and
pushf
dec
aam
xchg
sbb
loope
and
xchg
ljmp
sub
sbb
fsubl
cmp
xchg
adc
adc
inc
sub
imul
pop
sbb
pop
mov
inc
pop
adc
pusha
jae
hlt
rcll
shrb
fnstcw
jo
out
jne
xchg
mov
pop
decl
bound
fists
movsb
cmp
pop
add
mov
inc
sahf
jns
pop
fidivrs
stos
aaa
insl
mov
int3
inc
mov
pop
push
pop
addb
in
adc
pop
scas
cmc
stos
cli
lea
stos
mov
jge
aas
ja
cs
xchg
xlat
pop
push
mov
ficoms
xor
lret
out
xor
pop
sub
mov
adc
inc
lret
inc
push
push
cmpsl
jp
and
loopne
mov
rol
les
or
add
mov
pop
xor
add
xor
pop
sbb
fwait
adc
sub
lret
mov
shlb
pop
cmp
call
ss
pusha
xlat
jl
sbb
popf
mov
loope
outsl
mov
imul
cmp
cld
push
push
cmp
fs
scas
imul
mov
sbb
xor
xchg
fsubrl
les
testb
mov
inc
enter
ds
dec
xchg
fstpl
dec
outsb
ljmp
and
jno
cwtl
adc
add
or
xor
aad
cwtl
rorb
daa
push
mov
enter
aad
push
jp
push
sub
insb
cmp
in
rcrb
add
jge
cmpsb
sub
out
push
je
hlt
mov
outsl
jno
sbb
sub
mov
dec
pop
and
in
mov
xor
inc
fisttps
nop
dec
lods
and
in
and
iret
filds
lret
or
sbb
push
sbb
sbb
insb
in
inc
dec
dec
pop
fldl
ds
lret
scas
mov
pop
jnp
pushf
inc
mov
mov
sub
gs
mov
rclb
and
es
sbb
push
xchg
jge
push
cmpb
lret
insl
repnz
lret
mov
mov
scas
adc
cvtdq2ps
bswap
je
inc
mov
call
ja
and
imul
inc
sbb
nop
push
push
adc
pop
jmp
or
mov
shl
ret
jg
jg
leave
ret
sar
ss
sub
stos
loop
int
jnp
dec
dec
fmul
xor
dec
xchg
sub
pop
sbb
mov
fstpt
jb
jno
push
add
mov
inc
xchg
icebp
cmpsl
mov
push
sbb
push
incb
add
sti
push
push
push
cwtl
scas
pop
inc
movsb
in
adc
mov
jp
mov
and
movsl
leave
pop
jmp
call
cmp
mov
mov
lret
xor
cmp
mov
orl
enter
repz
jo
mov
mov
sbbb
jne
push
data16
ret
and
add
sub
cmp
cmpsl
sub
jns
dec
push
addr16
repnz
sub
mov
lret
ljmp
and
mov
clc
xor
mov
push
and
xor
pop
fiadds
in
scas
xchg
icebp
scas
push
sarb
fs
lock
push
push
ds
adc
add
cmc
cmp
and
lock
xor
cs
andb
inc
enter
xchg
mov
enter
movsb
je
mov
dec
imul
push
and
stos
adc
loopne
sub
repnz
ds
jns
push
scas
sbb
lcall
dec
fbstp
push
lcall
loop
xor
adc
js
pop
and
pop
int3
js
sub
mov
outsb
loopne
sbb
jo
inc
popl
mov
xor
popf
jae
or
outsl
mov
sub
or
mov
pop
inc
or
insl
adc
adc
mov
or
jg
inc
xchg
and
outsb
jp
dec
dec
xchg
jbe
imul
test
mov
xchg
inc
mov
cmp
rclb
test
lcall
out
mov
pushf
xcrypt-cfb
cmpsl
loop
out
push
pop
push
add
pop
loop
in
iret
ret
dec
aas
test
outsb
push
std
xor
test
dec
add
push
shrb
add
and
lea
push
adc
mov
fnstenv
cmpsl
mov
into
xchg
in
pop
xchg
mov
dec
pop
lret
dec
sbb
mov
clc
jb
jnp,pt
adc
mov
jns
cmpsb
lods
cld
ds
mov
jno
fildll
iret
shrb
cmpsl
push
mov
or
jnp
jno
sar
jmp
jno
in
adc
inc
out
mov
into
jl
ror
xchg
les
out
mov
inc
adc
out
push
bound
sbb
and
cmc
movsl
popa
pop
out
sbb
clc
out
sbb
jp
or
lods
cmpsl
jmp
sub
jb
jl
cmc
xchg
outsb
add
testl
xor
jns
sbb
rol
mov
sub
push
xor
rorb
jnp
and
in
jns
pop
mov
sub
sti
pop
int3
sbb
in
mov
outsb
psllw
scas
fwait
inc
and
out
out
jge
sub
sqrtps
insb
mov
lret
push
iret
cmp
inc
push
pop
inc
into
cld
aas
pop
add
pop
lock
push
enter
mov
test
xor
add
rcll
iret
jp
fs
mov
add
push
cmp
stos
sti
sbbl
dec
add
jg
xor
fs
push
mov
push
stos
popa
hlt
jns
push
push
sub
jb
aam
lcall
lret
sahf
sub
xchg
xchg
inc
jmp
jns
pop
loop
arpl
fidivrs
das
push
xchg
xchg
mov
das
movsb
lods
fists
push
pusha
rcrb
lcall
push
or
push
out
imul
loope
add
pop
add
sub
out
pop
push
or
test
popf
xchg
arpl
and
sbb
add
jmp
dec
es
push
xchg
rcll
jo
mov
pop
xor
xor
imul
scas
inc
es
inc
fldl
jnp
sahf
rolb
push
outsb
xlat
mov
js
push
mov
adc
insb
pop
js
cs
insb
xchg
xor
ja
rorb
fistl
xchg
adc
xchg
arpl
mov
xor
outsb
jbe
repz
mov
loop
pop
ret
in
ret
inc
jno
adc
jmp
rorb
jns
shrb
mov
jnp
rclb
cmp
mov
inc
in
adc
add
dec
repz
jmp
push
in
out
mov
or
outsl
jg
adc
jae
popl
jl
fildll
sbb
add
popf
pop
scas
xorb
dec
rorb
loope
inc
stos
ret
push
ret
movsb
sti
insb
pop
shr
in
imul
push
mov
aaa
sub
and
pop
mov
orl
mov
dec
movsl
inc
bound
jle
lods
xor
mov
sub
callw
dec
mov
out
adc
sub
movsl
pop
das
in
adcb
das
into
mov
xchg
inc
or
mov
push
lcall
xor
dec
bound
cmc
dec
aam
in
adcb
testl
jp
inc
xchg
mov
lea
xchg
gs
cld
aas
popa
lcall
xlat
imulb
push
lahf
mov
into
leave
and
or
and
out
cli
add
sbb
pop
dec
push
lcall
andb
insl
mov
imul
int3
lahf
call
xchg
pop
pop
shld
mov
clc
xchg
and
pop
pop
lret
in
gs
cmpl
xchg
cs
mov
mov
cltd
leave
sbb
jb
cmc
scas
outsl
dec
sti
pop
inc
ret
jbe
xchg
jae
sbb
push
in
scas
dec
stc
imul
pop
fdivrp
push
cwtl
xlat
cmp
fcompl
or
adc
sbb
dec
daa
arpl
loop
cltd
pop
or
cmp
cmp
cwtl
lock
orb
icebp
cmp
bound
mov
into
sub
adc
fneni(8087
mov
ja
jecxz
mov
scas
mov
xchg
mov
subb
movsb
jl
call
sub
mov
pop
fsubs
outsb
push
dec
xor
cmp
mov
test
test
adc
clc
xchg
adc
push
loop
xchg
outsb
add
or
loope
lods
xor
lock
mov
jo
xor
inc
xor
out
inc
cmp
fwait
mov
and
jmp
std
aas
and
mov
push
dec
lahf
dec
cmp
sti
push
mov
aas
xchg
leave
or
pop
cmpsb
inc
sub
sub
jnp
xor
dec
adc
or
add
inc
insl
or
cli
mov
xor
xchg
mov
push
cmpsl
push
cli
lods
loopne
in
bnd
arpl
dec
mov
mov
lods
stos
cmpsb
call
fimull
jl
mov
pop
cld
roll
loope
push
or
mov
xchg
push
cmpsb
inc
ror
mov
rcrl
sub
out
xchg
adc
cmp
jmp
jnp
inc
mov
pop
movsb
ja
shl
gs
hlt
mov
inc
mov
xchg
adc
mov
mov
lahf
push
cmc
add
enter
fimull
mov
sbb
outsl
push
push
sbb
sbb
in
es
jle
in
ret
lcall
inc
jg
xchg
roll
cltd
gs
push
or
cmp
adc
test
push
aas
push
orl
mov
jno
stos
mov
int3
and
lea
dec
call
sahf
push
xchg
mov
loopne
sbb
into
inc
pop
cli
mov
hlt
mov
scas
int3
int3
scas
xlat
dec
dec
dec
jecxz
mov
xchg
scas
adc
inc
add
lret
ds
sbb
outsb
call
pop
das
imul
xlat
adc
iret
test
mov
nop
mov
and
inc
in
xor
jmp
pop
adcb
leave
orl
xchg
mov
sub
icebp
pop
test
cmpl
pop
rcr
imul
or
pop
enter
movsl
int
loop
sub
xor
js
sub
cmpsl
shlb
aaa
jo
jmp
xor
jmp
dec
mov
dec
lock
pop
cmpsl
in
push
mov
hlt
iret
inc
sahf
and
or
and
mov
jns
lods
inc
xor
adc
loop
outsl
add
sub
adc
cwtl
mov
jae
das
ds
je
jmp
aas
sub
iret
cmp
pop
loop
ss
js
pusha
mov
sub
daa
repz
pop
adc
fs
rcrb
pop
push
sbb
jg
jnp
dec
pusha
pop
push
or
add
adc
mov
cmpsl
dec
cs
cltd
pop
mov
lahf
lock
imul
lcall
add
ret
out
stos
fdivrl
mov
test
inc
jecxz
push
cmpsl
xor
mov
pop
sbb
fsubrs
sti
xorb
jno
cmp
inc
dec
js
cli
into
shlb
mov
cmp
enter
mov
outsb
jecxz
les
xor
mov
adc
ficompl
js
insl
je
lods
sbb
out
pushf
addr16
mov
pop
out
xorb
cmp
push
ror
in
jae
cmp
xchg
ljmp
pusha
in
enter
jne
sub
pop
es
dec
mov
mov
test
popa
and
popa
sub
xchg
push
sbb
jne
cmc
out
hlt
push
jne
or
ss
paddw
xor
sahf
or
loope
push
jp
or
xchg
pushf
dec
stc
daa
das
mov
js
fnstsw
insb
inc
push
or
enter
sbb
jmp
mov
push
cmp
divb
int
scas
sub
ret
or
test
sbb
add
xchg
xchg
mov
dec
add
pop
mov
push
xlat
ljmp
rcrw
inc
fbld
mov
push
notb
jmp
jno
or
in
outsl
cmp
stc
adc
xlat
pop
push
jnp
hlt
mov
cmp
push
js
sbb
or
lds
sub
test
stos
fwait
aad
daa
fstl
jnp
lcall
inc
dec
nop
cmc
negb
adc
dec
fisttpll
pusha
fidivrs
dec
push
ror
sub
rcrl
xchg
pusha
in
std
jmp
sub
pop
ja
andl
xchg
mov
sahf
or
test
cmp
dec
fcomps
mov
addr16
mov
test
sbb
mov
add
mov
out
rorb
inc
loope
ljmp
mov
add
mov
cmc
lret
and
or
cmp
insl
jle
mov
filds
mov
repnz
mov
sub
and
or
push
xor
push
rclb
sti
adc
xor
stc
and
mov
sbb
out
stos
add
jmp
pop
jnp
imull
mov
xchg
xchg
fdivp
xlat
or
sub
mov
add
sbb
popf
sbb
mov
jnp
inc
push
pop
sbb
jecxz,pn
nop
jns
imul
dec
xchg
jae
cld
push
sarl
gs
movsl
negb
add
jbe
ljmp
cwtl
jmp
push
scas
jl
jmp
cmp
mov
test
xchg
adc
pop
inc
test
mov
loopne
sub
mov
int
sbb
in
mov
lcall
cmp
push
addr16
xchg
cwtl
mov
or
gs
lret
adc
enter
fstl
lods
popa
in
cmpsl
fdivp
into
push
outsl
mov
lea
push
fsubrs
addl
or
jno
pop
subl
adc
hlt
xor
dec
sbbl
push
push
test
cmp
cmc
popa
jae
test
jp
leave
lods
mov
and
adcb
lcall
push
fwait
iret
mov
mul
sub
fwait
popa
inc
lds
mov
jbe
pushf
adc
test
insb
xor
jb
sub
fisttpll
sbb
lret
aad
adc
addb
outsb
jge
sarb
mov
sub
stos
scas
aad
sbb
cwtl
test
les
xor
jecxz
xchg
or
rcll
push
ds
cld
pop
fidivrl
aam
cmp
mov
cmp
daa
mov
or
inc
cmovge
test
adc
mov
push
jbe
and
dec
xchg
pop
cmp
dec
xor
pop
inc
mov
sub
stos
mov
xor
nop
mov
inc
push
jo
adc
ljmp
sbb
push
pop
icebp
push
daa
bound
jge
pop
xchg
jb
loopne
push
pop
dec
shrb
imul
mov
fstpt
mov
sbb
cmpsb
add
cld
insb
call
pop
inc
or
int
pop
pop
leave
cmp
xor
out
cmp
inc
fidivrs
sub
dec
xchg
lds
lods
inc
into
push
mov
mov
jmp
inc
adc
push
pusha
outsl
inc
or
cmpb
insb
hlt
loop
std
loopne
inc
pop
pusha
add
sbb
xor
adc
push
nop
jle
addl
and
subb
ret
roll
sbb
fstpt
dec
leave
mov
inc
push
addb
loope
cld
add
mov
xor
ficompl
insl
sti
popa
jge
dec
push
test
std
mov
loopew
or
push
movsb
mov
push
mov
incl
ror
inc
loopne
jbe
adc
es
scas
jbe
das
mov
jae
repz
adc
ds
mov
les
jge
bound
adc
add
stos
push
mov
inc
push
xchg
data16
sarb
jge
movsb
enter
cmp
fcomp
lret
loopne
xor
mov
inc
aad
int3
rclb
pushf
ljmp
fprem
or
cmp
inc
jecxz
xchg
jnp
sbb
andl
rcr
xchg
xor
inc
out
fsubs
loope
mull
clc
cmpsb
xor
clc
add
jb
aad
sbb
bound
mov
pushf
push
js
les
mov
out
mov
popf
dec
jb
cltd
mov
popf
out
shlb
adc
lret
jle
cmpb
in
scas
cltd
rorl
jo
movsb
ret
ljmp
fcmovnb
dec
subb
arpl
pop
faddl
fistps
les
gs
movsl
ja
mulb
and
sub
cmp
and
andb
aas
lds
dec
in
cld
sbb
pop
ljmp
pop
xchg
inc
into
add
xor
inc
cmpsb
outsb
push
push
adc
pop
dec
cwtl
and
inc
mov
sbb
jle
test
jo
mov
jo
add
rolb
dec
jbe
push
les
les
inc
or
lret
outsb
lcall
jnp
mov
pop
outsl
test
push
mov
adc
push
and
jge
aaa
mov
inc
aad
adc
or
mov
sbb
jecxz
pop
pop
and
out
xor
into
adc
pusha
andl
sub
sbb
sub
test
imull
test
pop
cmc
cmp
repnz
inc
xlat
rclb
mov
xor
stc
adc
mov
mov
rol
rolb
orb
pop
pushf
in
cwtl
mov
and
mov
mov
push
mov
xor
cmpsb
or
adc
rorb
pusha
cmpsl
add
repnz
xchg
lret
je
pop
fucom
fiadds
jno
dec
lods
scas
mov
in
sub
mov
cmp
or
dec
lret
ret
outsb
addr16
cltd
pop
in
mov
mov
mov
push
cltd
sbbl
push
sbb
insb
enter
es
insl
cmp
clc
xchg
fnsave
push
sbb
fwait
adc
and
in
xor
jb
mov
jl
push
fstpl
aas
jbe
loopne
jb
ljmpw
sbb
leave
nop
mov
jb
daa
adc
repnz
sub
xchg
cmpsb
mov
loopne
icebp
or
mov
pop
mov
dec
movsb
fsub
push
mov
xchg
fwait
dec
pop
mov
stc
fiadds
shlb
lock
fldt
lods
jge
mov
sub
into
mov
cmp
jmp
inc
inc
and
test
es
movsl
push
mov
mov
mov
add
adc
or
xchg
mov
jne
pop
mov
xlat
xchg
jb
ds
mov
into
loopne
xchg
push
fsubr
dec
nop
xchg
sbb
push
add
shll
mov
mov
cmp
xchg
xor
ror
sub
mov
pop
adc
dec
fcompl
xchg
testb
gs
clc
fdivs
in
sar
mov
jge
sub
das
inc
std
cltd
mov
popf
stos
and
xchg
in
jl
and
add
dec
xor
push
rcr
clc
pushf
push
insl
inc
iret
add
xlat
mulb
jp
fnstenv
cmp
iret
cltd
mov
xor
into
cmp
fdivs
aam
jnp
inc
jle
clc
mov
push
push
push
sbb
outsl
fst
adc
repnz
lock
pop
mov
push
inc
xor
ret
sub
fiadds
insl
fistpl
test
adc
repnz
xlat
ds
lods
lret
ja
dec
ss
sub
jge
enter
lock
pop
cmp
or
pop
sbb
mov
cmc
fcmovu
xor
sahf
rcrb
sub
and
jbe
insb
cmp
in
pop
xchg
sub
scas
xchg
mov
and
mov
inc
mov
movsb
rcll
lret
ret
mov
rol
jmp
fcmovb
push
cwtl
xor
int3
pop
xchg
insl
and
aas
fscale
xchg
insl
pop
inc
rcl
mov
cmp
push
scas
jle
push
jne
rcrl
mov
mov
xor
shll
cmovbe
lcall
add
xchg
pop
xor
push
fs
xor
idivb
testb
fstps
and
add
inc
ljmp
push
nop
lret
std
add
ret
and
andb
adc
inc
fs
push
call
mov
push
scas
jge
mov
int3
sbb
sar
push
jb
sbb
addl
ficomps
repz
pop
cmp
mov
loopne
push
adcb
ret
add
rcl
pop
out
mov
push
jnp
ljmp
shll
xchg
mov
fists
adcl
gs
je
iret
cmpl
xor
jne
sub
pop
das
mov
sub
xchg
aad
push
adc
ja
sahf
pop
leave
mov
jo
or
mov
adc
outsl
mov
dec
sahf
lret
lods
jb
inc
push
out
sub
inc
mov
ret
and
sahf
push
sbb
sub
sub
sbb
sahf
xchg
and
outsb
loopne
inc
sbb
mov
dec
mov
insb
adc
bnd
loop
stc
icebp
into
jbe
out
mov
pop
cmp
mov
insb
into
and
call
add
dec
inc
xor
jge
xchg
add
xchg
pop
out
adc
mov
ljmp
loop
and
cmpsl
jg
popf
dec
xor
lea
xchg
and
addr16
inc
insb
clc
fwait
stos
and
scas
jp
les
mov
nop
mov
mov
loop
inc
outsl
xchg
ss
mov
les
popa
fmull
jb
ljmp
pop
mov
shl
leave
jnp
lcall
pushf
sub
out
inc
outsl
xchg
fdiv
orb
testb
sbb
inc
loop
mov
xchg
adc
xchg
rcll
test
jecxz
push
xor
jb
popf
inc
cmp
xchg
pop
lahf
adc
dec
rcrb
ds
jbe
and
push
into
in
cmp
pop
xchg
xchg
sub
jns
dec
xor
xor
sub
lods
fwait
sarb
imul
add
jecxz
sub
xchg
cltd
scas
mov
fmul
xor
cmp
insl
movsb
add
ret
add
push
sbb
fs
rcrb
or
cld
pop
dec
test
movb
out
inc
lock
js
outsl
push
mov
push
add
mov
dec
or
cld
fisttpl
jbe
mov
mov
dec
ja
fstpt
mov
mov
dec
hlt
xchg
adc
mov
cmp
sbb
xchg
adc
jo
outsl
sbb
adc
sbb
cmove
xor
and
dec
in
xchg
std
add
imul
dec
sti
mov
outsb
cmp
push
push
mov
sbb
mov
pop
out
dec
pop
movsb
jne
in
dec
push
sahf
jp
ret
and
gs
jbe
frstor
ret
int3
mov
xor
fistps
mov
aaa
je
ss
adc
vpcmpeqb
pop
outsl
out
sbb
and
adc
xchg
loope
movsb
shr
mov
andl
fs
or
divb
sbb
nop
mov
test
cmp
jge
xor
inc
sbb
aam
cmp
cmp
mov
rcrl
insb
dec
fsubrl
jl
into
pop
cld
test
pop
call
popf
cmp
mov
lods
mov
loopne
mov
push
cmp
aaa
cmp
mov
xor
cmp
xor
mov
call
jmp
mov
dec
push
inc
cmpsb
jp
iret
inc
xorl
ss
inc
movsb
jge
pushf
xor
sub
xor
xor
mov
cmp
nop
nop
mov
pop
jae
jecxz
push
and
mov
hlt
pusha
sub
clc
or
jnp
cmp
mov
jbe
cltd
repz
xor
in
hlt
stc
aad
xchg
inc
movsl
and
mov
xor
xchg
sbb
icebp
scas
in
out
lahf
push
out
mov
dec
mov
mov
xchg
fiadds
xor
cwtl
imul
xor
mov
mov
mov
mov
les
insl
jmp
pop
or
enter
and
xchg
sub
cld
lcall
ret
negl
jl
cli
jecxz
mov
push
and
mov
cld
and
add
cmp
cmc
inc
push
push
fwait
shr
jb
add
xor
add
dec
outsl
mov
sub
xchg
jg
or
out
push
push
dec
or
pushf
sbb
mul
dec
sub
rolb
ds
ljmp
scas
push
push
test
mov
mov
cli
add
push
int
or
mov
cs
sbb
add
out
sub
push
jae
mov
nop
adc
mov
xor
pop
hlt
shlb
cmc
int3
cmp
lods
loop
push
xchg
mov
sbb
addr16
das
rclb
repz
test
mov
imul
dec
pusha
fisubrl
pop
cld
in
push
dec
add
hlt
pop
xor
inc
stos
sbb
fcmovnb
call
xor
fcmovb
std
notl
jge
pop
mov
fsubrl
inc
stos
cmp
in
xchg
add
repnz
lea
cmp
mov
adc
sub
add
aaa
stos
inc
dec
mov
test
mulb
mov
inc
mov
mov
out
pusha
loopne
test
inc
adc
cltd
jle
test
mov
jmp
sub
fcomps
adc
inc
aam
mov
or
inc
xchg
out
xor
scas
push
jmp
fisttpl
and
mov
and
pop
push
sub
cmp
adc
xchg
mov
out
inc
xchg
lds
clc
aad
xchg
out
pop
out
std
test
push
add
sub
ret
mov
sub
daa
or
inc
xor
roll
cs
mov
jne
xchg
mov
lods
pop
cmc
or
lds
add
mov
and
movsl
negl
adc
andl
rolb
psubq
xor
imul
out
scas
daa
leave
mov
mov
jp
jno
test
jae
xor
ja
jb
fists
add
loop
loop
loop
aad
mov
imul
xchg
mov
cmpsb
mov
inc
shlb
mov
mov
push
lea
and
inc
mov
pop
out
bndldx
mov
icebp
je
lods
jge
enter
xor
pop
shrb
movsl
adc
mov
jne
sbb
mov
fsubrl
xor
out
mov
sub
inc
xchg
mov
dec
das
pop
ret
jo
xor
stos
mov
mov
jae
lods
cld
divb
xchg
push
in
test
in
xchg
push
aam
fs
jbe
vpcmpgtb
jmp
outsl
mov
jge
adc
sti
arpl
scas
adc
jg
loope
les
dec
sub
dec
aaa
leave
testl
mov
ds
aas
dec
pop
mov
std
or
shll
pop
popf
add
loop
ds
cli
pop
mov
insl
xor
mov
sbb
jbe
adc
test
inc
stos
inc
push
adc
subl
or
dec
sbb
andb
lea
movsb
adc
inc
xchg
mov
jae
movsb
cmp
xchg
or
sbbb
fwait
ss
lods
je
insl
test
inc
cwtl
cmp
fcoml
mov
sub
mov
pop
or
mov
pop
dec
or
mov
xlat
jge
insb
dec
adc
jns
push
in
add
addl
and
mov
inc
cmpsb
stos
add
pop
or
test
mov
jge
push
xor
dec
sbb
loope
mov
sarb
jnp
enter
sub
mov
sub
sbb
pop
push
mov
stos
testl
and
push
das
xchg
leave
ds
push
mov
ja
or
push
sbb
in
imul
fbld
jg
fbstp
or
fstpt
adc
fnstsw
rolb
xlat
call
adc
rcl
push
and
jmp
xchg
insl
push
arpl
push
add
mov
fistl
push
pop
das
push
sbb
ret
mov
data16
aad
pop
cmp
in
mov
mov
xchg
std
mov
jo
icebp
test
stos
aaa
mov
mov
jno
pushf
mov
cmp
lea
movsb
test
aas
mov
mov
push
frstor
addb
cs
sahf
iret
subb
cmpl
sub
pop
popa
or
cmp
cmp
insl
xor
pop
xchg
push
test
mov
std
enter
cs
pusha
mov
out
inc
adc
adc
pop
jae
cs
ja
cld
into
fisubrs
adc
jbe
adc
shl
fs
mov
movsl
mull
adc
mov
dec
stc
stos
arpl
push
fldt
xor
dec
jbe
mov
add
adc
divl
or
inc
sbb
shrl
ss
test
icebp
xchg
out
data16
mov
sarb
push
mov
popa
or
in
cwtl
dec
cmpsb
roll
inc
mull
out
pusha
iret
sbb
rclb
idiv
add
data16
lods
xlat
or
ljmp
pop
mov
in
pop
add
mov
nop
daa
lods
dec
xchg
mov
inc
dec
call
add
imul
inc
dec
sahf
lds
hlt
or
aas
out
pop
ret
fwait
in
int
jno
pop
dec
ja
mov
loop
cmp
dec
and
test
mov
mov
bound
cmc
mov
jg
lods
pop
push
rorl
dec
push
sti
xor
add
sbbl
lcall
or
lea
loope
inc
pop
mov
imul
arpl
sub
out
or
out
push
cmpsl
stos
fildl
out
jns,pt
jb
push
dec
dec
pop
lret
int3
mov
jns
push
mov
mov
jmp
gs
pop
mov
ja
mov
sbbb
cmp
insb
sub
mov
mov
aad
lock
nop
push
and
mov
mov
lret
mov
leave
decl
mov
pop
cwtl
and
jbe
rorb
xchg
out
mov
xchg
xor
mov
call
test
cmp
fmull
cwtl
jmp
into
cmpl
mov
dec
imul
imul
mov
inc
mov
pop
xor
cs
xlat
add
lods
ret
sbb
lret
sbb
mov
mov
loop
or
adc
push
outsb
mov
aam
xor
inc
cmp
sbb
mov
pop
jl
mov
mov
dec
sub
lods
cmp
or
cmc
and
lods
gs
idivl
and
popf
js
lock
cmpsb
or
cmc
jle
cltd
sub
andb
stos
js
int
hlt
imul
jns
icebp
and
dec
mov
mov
mov
movsb
cltd
inc
js
loop
or
bound
cli
and
iret
inc
jge
lds
push
push
es
adc
pop
arpl
pop
and
loope
fwait
lock
pusha
xlat
xchg
out
mov
push
dec
pop
out
sahf
sub
mov
push
daa
out
icebp
js
es
outsb
fldl
push
push
call
mov
cltd
adc
cs
or
mov
mov
dec
pop
mov
add
subb
inc
sahf
test
loopne
arpl
test
das
xchg
push
jg
xchg
pop
cmp
adc
sti
cmp
jecxz
push
mov
inc
mov
xchg
mov
jb,pt
iret
push
cmp
jg
movsl
sub
mov
int
subps
dec
and
jae
fcoml
push
imul
inc
fnsave
add
xchg
ficomps
pushf
sbb
push
iret
fists
jg
icebp
mov
das
pop
sbb
sbb
xor
loop
rcll
xlat
into
outsl
clc
xchg
cmp
xchg
enter
adc
std
cmp
xor
notl
fcmove
gs
js
xchg
cmp
dec
ds
mov
fildll
mov
out
add
stos
loope
xor
je
xor
adc
lods
fdivrp
xlat
out
sbb
popa
adc
lcall
bnd
test
jge
push
lds
sbbb
mov
lahf
nop
push
daa
mov
outsl
popf
pop
pop
cmc
mov
sub
pop
out
mov
sbb
xor
stos
addb
push
and
xor
jno
dec
test
cld
sub
std
lds
mov
lods
or
push
testb
sti
lret
dec
add
jmp
stos
push
xchg
jl
std
mov
cli
sub
in
mov
dec
xor
fildl
mov
xor
mul
and
pop
push
shll
dec
pop
cmp
xlat
mov
stos
stos
imul
adc
sub
dec
push
int
hlt
ret
push
sbb
xchg
hlt
mull
cmpsb
xchg
stos
and
dec
jne
mov
adc
xchg
xchg
xchg
push
dec
fildl
dec
sahf
outsl
pop
mov
out
or
mov
pusha
push
sbb
and
mov
fucomi
or
push
aam
js
dec
xor
loope
sbbl
pop
pop
leave
stos
jmp
push
inc
lods
cmp
in
pop
inc
cmp
out
ss
sbb
js
dec
arpl
movsl
loop
dec
movw
stos
jo
lea
mov
scas
fwait
mov
xor
pop
xor
add
insl
jp
pushf
xchg
xchg
nop
into
xor
pusha
mov
cltd
and
iret
hlt
stos
mov
sub
mov
cmpsb
push
sbbl
and
adcb
mov
scas
mov
and
inc
jne
cmp
sbbl
inc
loop
imull
cmp
mov
mov
inc
xchg
adc
loopne
pop
sub
pop
cmpsb
movl
fildl
and
insl
pop
mov
cli
push
and
or
lret
push
hlt
imul
pop
sbb
shrb
bound
ss
xor
lock
jo
popf
jg
mov
jl
push
int
pop
push
sbb
movsl
pushf
out
pop
or
mov
dec
mov
repnz
inc
mov
jmp
inc
mov
push
ror
pushf
pandn
adc
jne
rclb
loopne
jecxz
adc
xor
sarb
push
jno
shlb
push
push
cmp
push
push
push
jl
shrb
js
decb
fisttps
sbb
push
jo
test
pop
stos
leave
lret
cwtl
out
cmp
sub
xchg
popf
sar
mov
fcoms
push
das
push
jmp
or
push
in
in
xchg
mov
cwtl
pop
sbb
and
fwait
scas
xorl
je
mov
dec
and
jnp
add
out
push
push
jp
popa
jnp
insl
dec
mov
popa
inc
daa
push
fisubrs
xchg
cli
mov
xchg
test
and
mov
je
fdivs
adc
bnd
frstor
out
add
and
push
test
daa
xchg
xchg
loope
sahf
stos
pusha
jnp
pusha
push
add
stos
pop
cwtl
stc
mov
push
insl
and
add
cmpsb
mov
testb
mov
cld
hlt
in
into
sub
or
out
fnstsw
push
loop
daa
mov
fwait
mov
insb
outsb
icebp
iret
cmpl
xor
aas
sbb
sahf
adc
outsb
mov
call
push
jno
clc
lods
sar
out
loope
std
xchg
mov
inc
subl
cwtl
fs
outsb
test
scas
in
dec
add
dec
in
cwtl
mov
cmpsb
jne
shrl
cmp
lret
loope
mov
pop
push
ret
push
add
mov
sbb
jecxz
aam
pushf
pushf
loopne
movsb
jb
ljmp
mov
mov
sarl
pop
shrl
mov
dec
ret
push
daa
push
cltd
mov
push
inc
in
pop
adc
mov
or
or
push
inc
push
hlt
out
das
dec
add
ficomps
push
lcall
fwait
inc
fiadds
inc
mov
dec
xor
insl
imul
arpl
ss
jno
mov
icebp
jnp
insb
adc
cmpsl
icebp
push
ja
push
mov
sub
es
or
cmp
push
test
push
xchg
and
and
push
sbb
sub
sarl
jnp
cld
lahf
call
scas
shrl
sbb
jne
jo
jb
movsb
jno
pushf
and
cmpsl
push
into
outsb
pop
dec
lods
xchg
xor
lahf
repnz
mov
cmp
add
leave
or
imul
sub
int
pop
cmp
sbb
adc
pop
adc
inc
xor
rcr
subl
movl
pop
adc
mov
loopne
xchg
push
aas
push
adc
cmp
pop
movsb
arpl
inc
cmp
sbb
test
je
add
stos
lock
sbb
daa
and
push
sub
fisttpll
stc
xor
dec
dec
xchg
test
jo
divb
mov
pop
push
mov
xor
mov
push
adc
jno,pt
int
fisubl
cli
lods
inc
bound
sahf
popf
sti
addl
or
mov
xlat
adc
jb
es
push
test
mov
cmp
jbe
and
xor
cmp
movb
push
add
mov
pusha
pop
cmp
dec
pop
xchg
jb
fcmovu
in
test
xor
adc
dec
adc
jbe
mov
adc
lret
arpl
or
ja
cmpsb
or
cli
xchg
push
mov
sahf
sub
popf
pop
jnp
or
cmp
pop
scas
mov
xchg
aaa
xor
adc
jb
and
and
dec
push
cmp
pop
xchg
iret
test
dec
test
push
jmp
das
xchg
dec
outsb
jmp
mov
xor
fdivl
mov
inc
lods
ret
insl
popa
stos
xchg
dec
fwait
inc
add
sbb
and
jno
push
dec
push
lods
jae
add
imulb
pop
jns
jge
fidivrs
xor
js
pushf
mov
inc
mov
in
push
mov
jo
testb
mov
fdivs
or
and
lods
rcl
mov
and
and
test
pop
dec
jns
mov
cltd
add
add
jae
in
jne
push
outsl
nop
sbb
pop
push
cmp
inc
push
fmull
xor
repz
cltd
mov
enter
shl
sti
lret
shlb
scas
and
sub
inc
mov
pop
es
dec
or
xor
aam
mov
xchg
push
mov
add
cld
bound
ficomps
xchg
mov
xor
fisubl
inc
popl
movsb
and
xchg
pop
cltd
lods
cmpsb
mov
les
mov
lret
xchg
lret
cmpsb
xchg
pop
mov
mov
pusha
add
lahf
mov
dec
pop
mov
push
idivb
adc
push
jg
cmp
stos
cmpsb
inc
and
pop
or
xchg
cmc
dec
ffreep
fidivs
cmp
les
cld
xchg
push
sbb
adc
xchg
inc
mov
xor
aaa
jne
inc
lea
dec
push
lods
ror
adc
popf
inc
aam
push
inc
lahf
sub
dec
int
jl
sbb
dec
int
push
and
adc
xchg
mov
jne
out
test
out
xchg
and
fimuls
js
repnz
cld
push
xor
fdivrl
in
inc
or
xor
sub
pop
dec
arpl
rcl
leave
pop
daa
sbb
andl
pusha
fdivrl
das
cwtl
nop
into
lahf
mov
mov
pop
pop
cwtl
xor
ja
lods
jns
pusha
sbb
inc
loop
dec
adc
rorl
fcmovne
imul
pop
ret
adc
rol
scas
mov
lea
gs
add
das
das
in
clc
adc
pop
out
cmp
cmp
outsb
lea
mov
push
push
mov
icebp
mov
ds
lcall
mov
xchg
cltd
pop
jbe
or
add
adc
mov
mov
lret
cmpsb
dec
pop
add
neg
icebp
xchg
clc
jbe
sbb
inc
adc
mov
mov
ljmp
stos
inc
pop
sbb
push
into
lcall
sub
insl
and
int
imul
lret
pop
popa
fildl
jo
stc
push
jle
cmpb
jge
in
enter
dec
pop
sub
adc
mov
es
call
mov
notb
push
and
mov
pushw
pusha
nop
push
jae
xor
sbb
fimull
rclb
mov
mov
out
mov
jg
mov
xlat
inc
jnp
xchg
dec
into
sbb
xor
push
mov
cmpsb
pop
imul
mov
out
outsl
stos
mov
inc
and
fisubs
jmp
shrb
inc
cs
mov
adc
mov
dec
jp
shll
push
in
clc
mov
adc
clc
jae
aam
inc
dec
das
add
or
jo
push
and
sbb
or
pushl
daa
push
icebp
popa
adc
xorl
int
mov
pop
arpl
dec
adc
out
inc
call
inc
adc
imul
jnp
jmp
jle
das
jne
jb
enter
pop
xchg
jo
push
lds
jae
and
imul
dec
shlb
add
jecxz
xor
mov
sbb
loopne
loop
popl
inc
dec
dec
mov
xchg
sbb
jecxz
lock
notl
pop
cmp
push
mov
mov
pop
pop
es
pop
jae
fs
scas
lcall
adc
push
sbb
pop
mov
jmp
inc
pop
in
sub
test
arpl
sbb
orb
or
push
push
inc
pop
push
jo
repnz
mov
pop
xchg
repnz
sbb
adc
pop
cwtl
mov
mov
insb
inc
fbstp
sub
pusha
frstpm(287
and
imul
jae
mov
mov
dec
and
xchg
scas
pushl
movsb
lods
cmpl
out
pop
loope
sarl
and
mov
dec
leave
js
int
xor
mov
cmp
enter
mov
push
lahf
inc
repz
popf
in
or
fdivrs
rol
or
and
ficoms
lret
cmp
hlt
lcall
add
add
xor
push
sub
test
jge
test
data16
pmulhuw
outsl
dec
jge
mov
jns
mov
leave
sbb
in
mov
push
push
cs
jmp
mov
dec
dec
push
test
mov
imul
xor
xchg
lret
mov
std
pop
icebp
loope
dec
xlat
pop
jb
dec
and
movsl
xor
das
popf
xchg
jno
push
xlat
rclb
insl
xchg
lret
jg
fidivrl
jg
mov
imul
insl
xchg
shlb
jecxz
popa
enter
inc
int3
dec
jne
xor
rcrb
mov
mov
pop
movsl
frstor
mov
add
or
inc
ret
adc
sbb
bound
jbe
pop
iret
cmp
add
xchg
mov
aam
add
jnp
mov
out
in
or
shlb
jg
in
dec
mov
shl
mov
xchg
cmp
jo
and
sbb
iret
push
and
enter
scas
das
in
add
jnp
xor
imul
idivl
or
enter
mov
out
or
xchg
xchg
mov
inc
jecxz
xchg
sub
mov
gs
jmp
mov
jae
pop
mov
cli
mov
mov
push
jl
imul
fstpt
in
jp
cmpsl
aam
jp
popf
adc
pop
dec
out
sarb
dec
mov
rorl
dec
inc
xor
inc
insb
rcrl
cmp
lock
or
push
in
stos
scas
jg
push
test
xor
xor
adc
mov
sar
inc
rol
maxps
push
mov
adc
jnp
mov
std
jns
hlt
sub
lds
sub
adc
test
lds
leave
dec
scas
fdivl
xchg
iret
aad
mov
cmp
jnp
lahf
and
mov
pusha
cmp
or
std
xchg
and
arpl
sbb
mov
xchg
push
rolb
filds
test
pop
sub
pop
push
push
ret
stc
mov
icebp
imul
scas
pop
jb
es
push
pop
adc
mov
xchg
mov
shl
jns
test
cmpsb
les
out
test
ja,pt
fstl
orl
stos
out
sbb
adc
mov
cli
test
fwait
mov
rorb
loopne
ljmp
sbb
test
mov
sub
in
add
jmp
and
inc
insl
les
out
aad
add
je
adc
pop
add
rclb
aam
add
rolb
fmuls
xor
ja
adc
stc
lcall
inc
scas
inc
lods
cmpsl
jmp
stos
or
dec
add
cmovle
dec
mov
imul
int
push
xchg
cmpsb
xor
adc
and
in
mov
aaa
imul
sbb
mov
mov
test
adc
adcb
mov
aaa
bound
dec
in
cmc
aad
adc
xor
dec
cld
xor
divb
pop
outsl
je
inc
mov
add
push
cmp
mov
rclb
fildll
inc
add
mov
xorb
mov
dec
stc
mov
jmp
xchg
push
mov
aam
mov
test
ss
stos
mov
add
pop
sbbl
daa
gs
ret
dec
jb
adc
imul
mov
add
aad
jg
xchg
rcl
mov
add
inc
push
stos
outsb
pushf
lret
sub
cmp
push
mov
pop
repz
and
pop
call
push
push
lret
imul
sub
cmp
push
xchg
push
enter
lret
or
loop
mov
dec
outsl
cmp
test
out
dec
adc
fwait
mov
push
push
push
xor
dec
pusha
out
add
push
dec
cmp
xchg
int3
out
xor
lea
xor
sub
icebp
jp
pusha
mov
iret
lods
movsb
jns
pop
add
inc
add
mov
dec
or
or
test
mov
mov
mov
lock
in
xor
inc
pop
cmp
mov
loope
ss
jne
cwtl
cmpsl
mov
xchg
sbb
clc
xor
mov
test
xor
mov
pop
or
sbb
test
movd
mov
adc
repz
mov
insb
xlat
add
mov
das
xor
ss
addw
stos
add
mov
sbbl
pop
test
in
cs
sbb
fimuls
push
pop
lahf
fwait
adc
sti
cmp
ret
pushf
and
sbb
xchg
mov
cwtl
and
icebp
jbe
push
lods
sub
mov
mov
inc
aas
mov
ret
xor
mov
cltd
fs
or
dec
sub
pop
shl
notb
pushf
jg
clc
push
imul
push
cmpsl
jo
mov
xchg
lock
loop
popf
adc
stos
inc
mov
sub
insl
cmp
adc
sahf
rorl
test
mov
in
outsl
call
shlb
ljmp
push
ret
call
cmpsl
lcall
xchg
push
xor
rcrl
in
xor
sbb
cwtl
sbb
adc
aad
inc
dec
mov
jmp
mov
inc
lds
scas
mov
lods
sub
sbb
imul
jnp
pop
push
push
cmp
outsb
stos
mov
in
sub
in
imul
xchg
in
dec
jg
pop
sarl
push
sti
test
aam
loopne
sarb
repnz
mov
out
daa
mov
std
lock
cmp
and
inc
out
shl
popf
fcomps
imull
fnstcw
ret
test
ss
out
and
jo
push
test
sub
stos
jmp
add
idivl
sbb
mov
and
xchg
jb
push
adc
or
inc
pop
xchg
cmp
mov
in
push
push
lea
lea
mov
cltd
icebp
sub
mov
push
into
aam
push
ljmp
cmp
cmp
test
jno
out
gs
out
clc
imul
ret
xlat
int3
mov
pop
cwtl
mov
test
orl
jle
fdivrs
cmpl
cmp
jbe
mov
jbe
inc
loope
jle
js
pop
push
mov
push
sbbb
xor
pop
stc
pop
aad
jle
push
call
push
fsts
mov
fisubl
out
mov
push
xchg
nop
pop
add
cmp
mov
jne
fwait
mov
ds
push
push
add
xor
and
mov
cmpsb
pushf
cmp
fwait
mov
mov
scas
divb
pop
popa
push
pandn
insb
rcll
pop
aaa
sti
gs
mov
cmp
hlt
push
repz
dec
dec
aam
pop
pushf
lcall
xchg
push
pop
int
and
cmpsb
lods
jecxz
sub
je
jo
adcb
loope
mov
enter
dec
pushf
aam
into
stc
mov
inc
adc
add
shlb
aad
das
lods
xchg
sbb
out
fldl
inc
jl
or
dec
stos
arpl
inc
pop
push
sub
imul
mov
cmp
or
nop
lcall
add
pusha
pusha
jae
mov
addr16
lret
lods
jmp
hlt
mov
and
ds
mov
mov
mov
jmp
cmc
hlt
sub
int3
cmpsl
push
xchg
or
inc
mov
jl
cmpsl
shlb
enter
test
mov
inc
shl
xchg
mov
cmpsb
stos
lods
cmp
ja
xchg
testb
pop
add
mov
jne
out
sbb
inc
pop
jb
mov
lds
sbb
push
ret
cmp
loop
lcall
fimuls
dec
push
sbb
mov
dec
fs
cltd
gs
decl
cmpsl
ret
xchg
mov
flds
test
scas
ss
mov
stos
dec
faddl
add
xor
fldenv
dec
add
lcall
mov
in
lahf
mov
mov
out
inc
test
adc
sub
mov
jecxz
call
jno
xor
popf
mov
dec
cmpsl
fisubl
mov
mov
inc
xchg
pusha
adc
and
cwtl
mov
neg
add
daa
jae
push
dec
mov
mov
jge
inc
jbe
push
dec
cmp
add
rol
push
fidivs
inc
out
mov
jmp
aaa
dec
push
mov
clc
fwait
out
jne
xchg
sbb
negb
mov
adc
xchg
dec
in
sub
jns
addr16
mov
int
nop
div
mov
popl
outsb
mov
mov
mov
pop
in
xor
mov
out
dec
sbb
mov
pop
ja
iret
sahf
xabort
cld
xchg
dec
sbb
inc
push
pop
fidivs
jns
and
inc
test
lret
ja
mov
or
movsb
filds
sti
sub
fwait
pop
adc
fwait
push
adc
ja
inc
jno
rorl
add
test
cmpsb
pushf
or
mov
mov
movsl
sub
dec
lods
mov
ss
stos
popa
mov
jl
mov
mov
mov
cmpb
pop
inc
mov
insb
cmc
outsl
aad
fimuls
sbb
cmp
mov
pcmpgtd
subl
xor
inc
imul
inc
ret
inc
out
pop
xchg
mov
xchg
mov
test
ret
add
mov
in
sbb
leave
mov
push
inc
cmp
jns
or
push
or
lods
dec
std
xor
cmpl
or
jno
lret
inc
rolb
pop
ret
aad
js
leave
fs
imul
or
xchg
adc
pop
imul
and
and
pop
and
stc
adcl
frstor
mov
mov
inc
inc
pop
mov
jl
lods
outsb
je
adc
lcall
cmpsl
cwtl
mov
int3
daa
ss
and
adc
push
pop
push
inc
loop
mov
jb
xchg
sbb
pop
pushf
push
adc
ret
fisubrl
add
cltd
mov
mov
push
fiadds
test
stc
cwtl
dec
mov
and
pop
dec
cmp
inc
jb
out
add
iret
inc
jp
bound
mov
jecxz
arpl
and
cmp
or
add
xchg
outsb
mov
leave
jae
pop
xchg
lock
xchg
lahf
push
and
int3
sti
inc
pop
mov
in
xchg
lea
in
insl
mov
loop
psrlq
mov
sub
and
hlt
pop
inc
mov
mov
scas
jae
inc
shll
cmp
xchg
push
stc
dec
pusha
sub
into
pop
mov
pop
and
arpl
daa
aam
xchg
int
pop
and
mov
add
sbb
int
cmp
daa
jecxz
adc
inc
xchg
bound
stos
daa
dec
sbb
mov
in
adc
mov
jo
and
iret
dec
in
int
lret
or
push
in
jmp
mov
sbb
push
push
test
jno
addr16
pop
insb
mov
popa
dec
cmp
js
pusha
js
mov
or
cmp
int
dec
sub
bound
xchg
daa
aaa
and
ret
adc
push
inc
mov
push
cli
xchg
pop
sub
js
xor
dec
les
pop
fmul
pop
xchg
outsl
cmc
fstpt
mov
xor
or
cli
xchg
sahf
push
mov
or
paddsb
bound
cmp
cli
xchg
sbb
xor
dec
lcall
mov
pop
sub
pop
mov
or
dec
rorl
adc
xor
sbb
adc
mov
clc
ja
mov
mov
pop
fisttpll
xchg
inc
sub
cmc
orb
fildl
fdivr
cld
jae
cli
hlt
scas
or
lcall
or
xor
jle
inc
mov
jge
jne
dec
pusha
hlt
ds
push
shrb
cmpsb
jle
or
pop
nop
filds
dec
bound
cmp
lock
mov
or
push
xor
jnp
test
int3
sub
ja
fcompl
adc
adc
jmp
sbb
mov
cmp
loop
xor
sbb
fisttps
adc
xor
in
xchg
shlb
rcl
pop
add
mov
shlb
adc
mov
mov
jp
mov
cwtl
adc
cmp
stc
mov
cmpsb
scas
xor
dec
mov
xchg
rorb
clc
imul
dec
into
pop
push
loopne
mov
data16
lcall
cmc
loopne
adc
push
fcmovb
test
ja
std
shl
in
lds
mov
jmp
stos
dec
jnp
out
insb
aam
cmp
ja
aam
mov
sbb
adc
int
mov
fldt
jns
sbb
push
push
out
adc
icebp
notb
and
mov
shrb
jne
gs
stos
or
scas
xchg
or
outsl
inc
rol
mov
push
or
sbb
dec
mov
mov
dec
and
sbbl
pop
cwtl
mov
and
cwtl
mov
data16
xchg
pop
pop
mov
adc
inc
std
fucomi
mov
add
clc
scas
arpl
pop
imul
sti
rclb
loope
fidivl
dec
jle
jno
lock
mov
imul
mov
push
mov
ss
xchg
out
bound
ja
mov
xchg
cmp
outsl
dec
inc
scas
push
adc
imul
test
mov
pop
cmp
jno
sahf
xchg
sub
ljmp
push
mov
inc
sbb
pop
and
or
popf
dec
jno
pop
movsb
xor
mov
adc
hlt
aas
jp
and
push
ret
jge
scas
iret
inc
iret
adcb
sbb
stc
cld
loope
int
lds
lock
mov
adcb
jmp
push
mov
or
inc
daa
add
mov
divps
mov
sbb
fmull
pop
xchg
popa
adc
and
push
push
inc
lds
test
pop
cmpsl
dec
mov
xor
add
sbb
sbbl
sbb
push
mov
push
orl
rcll
sbb
jne
ds
imul
iret
jge
jl
call
push
mov
jg
arpl
mov
push
enter
mov
cs
mov
mov
sbb
orl
cmp
and
bound
inc
adc
xor
cmp
xlat
and
aam
or
out
icebp
pop
aas
push
cld
dec
sahf
mov
pop
push
push
or
cmp
xor
aad
push
pop
xor
ret
mov
pop
mov
rorb
ja
daa
lcall
fisttpl
jno
jnp
jp
aam
pop
int
out
xchg
push
cltd
inc
outsb
xor
xlat
jmp
sub
dec
xor
add
lods
icebp
jo
popf
jmp
inc
push
push
jbe
mov
jl
pop
mov
sbb
sub
and
add
js
in
cmp
jmp
aad
mov
dec
arpl
icebp
mov
fidivrs
insb
rcl
into
cmp
imull
jbe
xor
xor
sbb
push
push
jge
lock
mov
lret
push
inc
mov
in
cmp
mov
movsl
dec
mov
cmp
mov
pop
gs
inc
pop
add
mov
jnp
push
push
pop
pop
sub
ja
outsl
sarl
loopne
push
mov
movsb
popf
aad
je
bound
and
push
in
sbbl
push
cmp
popa
cld
ss
je
cld
sub
inc
jle
push
mov
inc
push
aaa
lret
cmpsl
sub
fcompl
rorl
add
cmp
add
hlt
cmc
xor
lahf
mov
and
sbb
adc
int
or
fdivl
fdivl
subl
add
out
dec
imul
xor
jbe
xchg
mov
xor
mov
clc
mov
popa
sub
cmp
js
dec
add
mov
inc
loopne
clc
mov
cmpsl
test
lock
inc
jecxz
mov
mov
cltd
xor
iret
adc
les
inc
dec
mov
cmp
pop
cltd
or
adc
out
leave
sbb
adc
hlt
pusha
leave
adc
push
rolb
lahf
in
shlb
mov
mov
shlb
insl
outsb
push
popf
addr16
push
enter
orb
pop
xlat
or
lret
jb
xchg
out
shrb
push
stos
loope
inc
imul
pop
popa
or
aaa
xchg
mov
cmp
stc
jb
inc
mov
pop
inc
jbe
imul
sahf
mov
and
pop
into
cmp
cmp
cmp
or
mov
mov
and
lahf
mov
das
es
js
ss
push
dec
into
inc
pop
orb
fistps
or
ficoml
std
dec
add
cld
gs
outsb
jge
sbb
and
push
nop
outsb
push
jbe
frstor
or
jp
sbb
aas
xchg
jae
cmp
ficomps
movsl
push
pop
gs
adc
push
sahf
test
popf
js
sbb
lock
je,pt
sbb
mov
sbb
ljmp
clc
pop
lea
cltd
outsb
sub
xor
test
pop
and
cmp
adc
pop
mov
mov
outsl
call
popl
pop
jnp
cwtl
dec
dec
repz
mov
mov
xchg
jle
outsb
mov
or
imul
adc
test
ror
xchg
cmpsb
pop
and
pop
repz
out
pop
sub
frstor
or
adc
mov
sbb
or
std
push
mov
test
stos
test
jmp
movsl
and
or
push
aaa
mov
lret
mov
lahf
sub
xchg
outsb
clc
lahf
lock
ficompl
mov
popa
bound
dec
outsb
mov
das
cld
jns
sub
mov
mov
add
cmp
idivl
sahf
daa
jmp
fdivl
into
vpaddd
inc
bound
ljmp
out
ret
mov
jae
repz
cli
mov
fwait
and
sti
es
inc
mov
mov
push
jecxz
cmp
sbb
sub
pop
sub
mov
push
jo
adc
mov
imul
out
cwtl
xchg
int
dec
sbb
add
jp
bnd
jb
add
add
dec
mov
scas
in
mov
dec
cmp
mov
ret
and
cmp
js
enter
adc
and
pop
ret
add
aas
rep
mov
insb
and
rcrb
shl
call
test
or
add
inc
fld
sub
mov
fdivrp
mov
mov
lds
adc
or
mov
addr16
xor
bound
xchg
fisubl
sbb
mov
iret
enter
clc
push
xchg
shr
push
jb
mov
ret
mov
jl
inc
test
or
testl
insb
adc
jb
loopne
inc
dec
sbb
add
movsb
out
lods
sbb
and
cs
loope
mov
push
leave
xor
ret
ficomps
in
jmp
pop
cmpsb
aaa
notl
dec
dec
and
push
adc
fildll
inc
shrb
faddl
dec
push
icebp
push
pop
pop
xchg
sub
aaa
jecxz
shlb
jne
dec
and
test
std
jnp
imul
test
insb
pop
push
xchg
gs
rcll
mov
and
sbbl
int
ds
insb
lret
or
fldcw
jae
inc
stc
xor
shrb
imul
push
nop
push
pop
add
jns
insl
in
inc
sbb
push
iret
sbb
shl
mov
pop
xchg
inc
or
and
adc
out
fwait
insb
jge
pcmpeqw
mov
mov
mov
ljmp
fisttps
sub
cmp
test
inc
pop
shrb
jne
mov
popf
hlt
fs
xor
jg
sbb
ss
cli
add
mov
push
adc
xchg
repz
iret
sahf
push
cmp
mov
popf
cmp
inc
lcall
loopne
cmpsb
or
pop
ja
ret
aam
jne
sbb
rcrb
mov
jns
adc
sub
in
daa
lahf
ss
cmp
adcb
stos
in
mov
dec
in
cltd
scas
enter
fsub
int3
jp
cltd
jl
mov
cmpsl
cld
sbb
pop
jbe
int
data16
adc
inc
or
int3
je
pop
std
push
sbb
sub
pop
bnd
mov
in
push
fiaddl
cmp
xlat
push
scas
dec
test
mov
mov
adc
jge
mov
dec
mov
pop
rorl
pusha
dec
sbb
imul
jecxz
jl
xor
nop
xchg
mov
mov
jo
cld
add
and
add
insb
push
push
ret
xor
mov
pop
and
sahf
mov
pop
outsl
mov
into
push
sbb
pop
pop
pop
adc
test
push
xor
insl
sbb
push
mov
jmp
or
cmp
inc
lret
lods
xchg
and
mov
movsb
mov
call
lahf
mov
sub
es
xchg
and
cmp
addb
or
jno
sbb
adc
imul
movsb
scas
push
pop
js
data16
ds
leave
outsb
enter
pusha
orb
pop
imul
mov
test
mov
es
mov
mov
ds
out
mov
pop
xor
xor
xor
cmp
call
pop
ret
add
imull
jb
inc
cmpsb
dec
repz
mov
in
leave
rcrl
xor
add
lods
mov
push
dec
scas
dec
ja
rorb
dec
aaa
jge
jno
adc
jmp
xor
fwait
mov
jg
cmp
mov
xchg
and
imulb
sub
and
hlt
fadd
leave
mov
pusha
and
mov
sbb
add
popf
xchg
imul
dec
aas
dec
mov
push
dec
mov
ljmp
xlat
push
mull
dec
mov
test
les
mov
and
out
daa
cltd
inc
pop
stc
rcrb
call
push
mov
jb
movsl
movsl
andb
int
mov
je
fisubs
int
sub
filds
out
lds
not
nop
mov
outsb
movsl
mov
rol
pop
pop
mov
sub
or
xchg
sbb
lock
cmc
sub
fstps
xchg
rclb
mov
jbe
inc
lods
push
mov
out
add
xchg
shrl
and
jns
mov
stc
jge
out
dec
test
jecxz
cwtl
push
cmp
rorl
adc
into
sbb
lods
jbe
dec
xchg
inc
mov
iret
stos
jecxz
push
arpl
sarl
add
pop
mov
jge
in
test
mov
hlt
insb
xchg
lock
mov
jo
and
inc
inc
cwtl
dec
mov
jno
sub
mov
lahf
push
cmc
xchg
popa
hlt
push
dec
pop
adc
xor
int3
jecxz
sahf
jl
xchg
test
mov
jno
jns
pop
insb
test
sub
mul
fmull
mov
enter
and
popf
mov
push
jno
gs
pop
sbb
fcmovnbe
jmp
test
enter
inc
andl
push
js
pop
sub
adc
jp,pt
loope
mov
repz
lea
mov
mov
cmp
push
nop
mov
push
push
fsubr
cmp
pop
jecxz
aas
push
and
cltd
dec
mov
pop
loop
repz
adc
roll
push
imul
dec
mov
and
xchg
ljmp
in
ficoms
xor
add
mov
js
mov
loopne
fstl
adc
pop
lret
lahf
lods
and
js
sub
ficoml
sbb
mov
xchg
hlt
test
cmp
jle
add
and
and
loopne
mov
scas
sub
and
push
inc
das
arpl
scas
lahf
and
in
sbb
add
test
add
mov
sub
stos
ja
js
mov
push
cmp
cmp
pop
sub
mov
sub
dec
xchg
jne
mov
add
push
jns
inc
test
cs
xchg
sbb
xor
js
mov
jmp
pop
dec
mull
in
frstor
push
outsb
int3
xor
jbe
pop
neg
sbb
dec
scas
mov
push
repz
aaa
inc
pop
cli
and
jp
push
ficomps
push
adc
and
and
repz
cltd
rolb
pop
into
pop
in
xor
sbb
and
lock
rcll
test
jne
jge
inc
pop
or
jg
cmp
dec
sbb
stc
sub
cli
rcrl
push
popa
mov
js
jb
pop
mov
orl
push
fs
mov
les
add
int3
fcomps
xor
movq
and
mov
mov
dec
or
pushf
cmp
mov
cmc
mov
fs
push
out
lds
and
test
lds
mov
dec
add
outsl
xlat
mov
std
dec
mov
fwait
xchg
mov
push
popf
fnstsw
cwtl
and
jno
pop
add
pushw
lods
lret
inc
test
dec
jo
out
jp
xchg
push
or
jae
pusha
jge
std
das
repz
dec
or
pop
insl
sbb
jo
lahf
fwait
pop
dec
sbb
cwtl
xlat
rcrl
insl
inc
lds
mov
mull
pop
adc
sub
mov
popa
sbbl
or
jle
orb
loope
mov
cli
ror
push
add
and
aad
mov
inc
daa
mov
push
aad
aaa
je
mov
sub
clc
lock
shrb
jae
push
sub
jno
jbe
loopne
shlb
scas
push
add
in
movsb
aad
inc
xor
inc
sbb
mov
pop
mov
sub
dec
shl
ror
outsl
lds
in
jne
xchg
dec
fs
adc
mov
cmpsb
testb
stos
jnp
cmp
fstp
jge
xor
cltd
cld
sahf
xchg
int
fwait
dec
mov
test
test
lock
push
dec
in
shrl
repnz
aam
out
ds
mov
mov
cmp
push
push
sbbl
push
cmc
pop
sbb
sub
or
mov
test
fstps
push
push
add
test
roll
aad
aam
stos
cmp
or
ja
loop
jnp
pusha
enter
jecxz
mov
idivb
add
popf
jle
sti
int3
shll
push
or
inc
sbb
or
xor
call
stos
faddp
jb
in
lock
loopne
imulb
out
insl
aaa
mov
je
cmpsb
push
cmp
je
sbb
push
dec
xchg
cmp
pop
pop
ds
stos
dec
mov
xlat
flds
cmpsl
adc
pop
sti
dec
jp
jp
and
cmp
inc
add
lods
pop
clc
stc
add
or
mov
jp
sub
mov
sahf
xor
pop
fs
mov
jge
scas
nop
ret
out
js
ja
cmp
loope
lret
and
clc
mov
mov
test
dec
xor
pop
mov
or
cmpsb
and
call
cli
ss
dec
popa
cmp
push
pop
and
xor
xor
and
insb
adc
sbb
lcall
sahf
pushf
xor
popw
popf
cmp
repnz
inc
jb
lock
or
jecxz
fcomps
push
push
xchg
inc
clc
stos
jno
pop
nop
sahf
sub
sub
xchg
cmp
js
mov
faddp
shlb
cmp
mov
jo
pop
cmp
das
sbb
mov
dec
aaa
pop
adc
les
xchg
js
and
fcmovbe
lcall
push
or
out
sbb
daa
bound
push
call
repnz
pop
test
xchg
movsb
cmpsb
push
mov
mov
pop
mov
popa
add
sbb
jnp
fldl
imul
pop
bound
jo
mov
std
call
stos
das
sub
and
es
push
repnz
push
aaa
cltd
divl
or
mov
imull
repnz
test
loop
lcall
inc
into
adc
mov
mov
and
jg
cmp
jle
pop
ret
fidivl
test
mov
dec
ret
insb
out
loop
push
in
gs
xor
sub
xor
aam
xlat
out
adc
mov
pushf
imul
sbb
xchg
pusha
testb
xchg
pop
js
aas
ret
push
jnp
jl
mov
test
mov
cmp
nop
ret
sarl
clc
psubusw
in
dec
adc
push
lds
jnp
inc
jmp
pop
pop
dec
mov
cmpsb
push
inc
lcall
sub
aad
inc
mov
js
scas
cmp
cmpsl
pop
cmp
xchg
scas
sub
sub
minps
or
jo
jno
pop
or
fcomip
std
mov
scas
jmp
jp
sub
or
and
jmp
jnp
popf
lahf
iret
xchg
sti
xchg
jno
xchg
stos
mov
imulb
xchg
out
lret
push
movsb
jmp
insb
mov
adc
addr16
cwtl
push
scas
xchg
cmp
sub
shlb
mov
scas
adc
fists
sub
mov
sbb
int3
jl
cmp
pusha
push
push
es
gs
test
scas
push
sbb
or
jmp
call
loopne
mov
nop
xchg
or
xor
xchg
mov
aas
shrl
add
mov
push
ljmp
mov
xor
ljmp
sbb
int
push
andb
daa
rcrb
lcall
enter
add
ljmp
jno
nop
daa
adc
aas
mov
xchg
inc
adc
fwait
shlb
popa
ficoml
sbb
push
xor
jge
fwait
mov
pop
outsl
push
sahf
inc
sbb
dec
push
add
sets
or
js
or
add
jbe
xchg
lcall
outsb
mov
stos
mov
cmp
loope
stos
sbb
mov
xorb
xchg
orb
and
icebp
lods
dec
push
movsb
repz
jbe
stos
xchg
out
mov
mov
mov
ret
jb
call
xchg
xor
out
mov
rclb
std
and
imul
pop
push
or
jmp
scas
mov
or
or
mov
rcll
jle
lahf
dec
neg
push
mov
popa
outsb
test
aas
push
fs
and
fists
sbb
ss
clc
ucomiss
push
push
xor
das
ret
pop
jl
in
enter
lea
jle
jge
cmp
fildll
cld
mov
xchg
xor
shr
sub
in
sub
xor
arpl
and
adc
js
mov
out
xchg
pop
shl
inc
xchg
xor
add
enter
dec
pop
inc
dec
pop
dec
scas
mov
out
scas
enter
jg
sbb
mov
aaa
adc
sti
xlat
dec
dec
xchg
rolb
dec
cmp
lret
add
cs
mov
push
stc
outsl
decl
jns
imul
push
pop
push
xlat
mov
ja
inc
adcl
add
jne
mov
mov
or
aad
cmpsb
daa
xor
lahf
cld
sbb
add
sbb
cli
mov
push
lret
jecxz
in
orb
mov
xchg
faddl
hlt
and
mov
leave
ds
outsl
jmp
insb
mov
jns
addl
jns
mov
jmp
out
push
rcrl
ljmp
mov
jns
sbb
jbe
sbb
int3
ljmp
andl
std
sbb
fldt
fmulp
popf
dec
hlt
mov
outsl
inc
cmp
dec
movsl
nop
enter
inc
xor
and
lea
scas
cmc
cmp
mov
scas
pop
ficomps
lret
orl
inc
jnp
lods
push
jle
cmp
mov
repz
lds
arpl
mov
sbb
imul
mov
sbb
add
es
popfw
pushf
ret
xchg
jg
dec
pop
inc
cmp
inc
sub
cmpsl
imul
jne
das
jge
inc
jmp
sub
aad
mov
mov
pop
in
stos
ljmp
mov
adcb
je
repnz
mov
cs
mov
dec
mov
gs
stc
sti
pop
sub
push
sbb
dec
sub
insb
lea
icebp
pop
sbb
pop
dec
push
xchg
fcomi
mov
mov
pop
cmp
xchg
mov
stc
rorl
dec
mov
mov
jnp
mov
xchg
mov
xor
inc
lahf
cmp
and
stos
lods
pop
fsts
adc
hlt
mov
mov
xor
inc
mov
scas
std
jge
mov
test
lahf
shrl
shrl
cmp
inc
mov
insl
adc
add
lret
mov
sub
sub
sbb
fwait
test
cli
dec
cmp
push
shr
cmpb
or
pop
test
mov
mov
jmp
lock
ret
push
sbb
and
dec
movsb
shll
aaa
out
mov
sti
dec
cmpsb
test
aas
stos
call
out
cmp
popa
mov
jp
sti
adc
mov
sub
in
lret
mov
leave
push
lock
add
and
test
pop
int3
arpl
sub
stos
push
orl
es
mov
or
sub
loopne
sbb
push
or
aad
push
mov
sti
xchg
jle
cmp
and
or
lea
sbb
push
dec
push
lods
mov
push
cs
sub
jp
xor
ret
lds
push
sub
lahf
pop
or
sbb
ficoml
or
lcall
mov
mov
xor
adc
cmpsb
aad
adc
add
in
int3
negb
adc
inc
mov
ret
sub
jle
inc
add
int
into
into
jae
or
dec
push
jae
daa
dec
mov
xchg
leave
aad
xchg
icebp
cld
fisubs
aad
scas
imul
fisttpll
ret
cmovo
fsubrl
into
insb
jmp
jb
mov
call
jbe
add
fsubs
cmp
mov
inc
push
ss
xor
aam
adc
push
jns
sbb
or
cltd
cwtl
sub
and
jne
xorb
jae
sahf
lods
inc
jne
jg
mov
sub
addr16
cmp
push
and
mov
ret
or
out
aad
adc
mov
mov
mov
lods
dec
add
push
cmp
fwait
out
fwait
dec
fs
int
dec
xlat
push
scas
imul
xor
push
lcall
inc
add
xchg
ja
and
std
in
mov
std
push
jle
pop
fwait
in
inc
push
jnp
jl
add
sub
loopne
ss
out
push
jmp
loop
push
jle
pop
xchg
jge
into
adc
push
xorl
hlt
fmulp
mov
or
dec
test
dec
aas
ret
mov
in
int
jbe
and
push
lret
push
in
test
sub
pushf
jl
je
cld
mov
std
push
jmp
lret
scas
loope
cmc
push
shl
adc
xchg
adc
push
mov
add
es
scas
cltd
or
flds
and
jmp
dec
cmp
push
xchg
stos
pop
cmp
les
jno
mov
push
jg
in
in
inc
jbe
cmp
xchg
subb
in
mov
cld
jne
jmp
adc
push
scas
movsb
fisttps
loopne
fimuls
mov
mov
or
inc
ficomps
xlat
xor
aam
xchg
pop
push
cmp
ret
xchg
stos
mov
das
pop
mov
xor
fsubrl
fidivrl
cmpsb
aad
aam
pusha
mov
mov
and
jmp
mov
push
mov
sbb
mov
test
ja
xchg
xor
loopne
pop
pop
push
jmp
ss
pop
adc
aas
popa
movsl
or
and
and
std
push
lea
sub
cmp
cmp
sub
or
pop
popl
insl
aas
jmp
jmp
lret
xchg
cli
sbb
jmp
push
shll
fwait
scas
pop
neg
mov
xchg
mov
inc
push
pop
ret
xorl
jb
inc
test
lods
icebp
insb
daa
fcmovnu
in
mov
pop
dec
ljmp
ljmp
cmp
cmp
pop
cmp
jmp
jns
insl
ja
add
dec
mov
leave
cmp
adc
ss
lcall
in
and
sahf
aad
adc
insl
leave
imul
or
add
push
insl
mov
jbe
mov
fs
movsl
arpl
jg
mov
fisubrl
std
sub
out
cmp
pop
cwtl
mov
test
xor
int3
dec
scas
ja
in
xor
lret
add
dec
cmpl
inc
fldt
or
sbb
push
push
fs
or
jno
mov
inc
mov
inc
sar
in
mov
adc
lds
xchg
pop
bound
xchg
or
iret
mov
mov
pop
gs
fcmovu
fists
lahf
loop
lret
mov
jnp
mov
jl
jb
dec
pop
push
scas
out
cmp
call
xor
push
jecxz
jo
pop
jp
les
out
ret
lea
jl
ja
or
call
out
popa
jns
push
pop
fistpl
popf
in
mov
mov
pop
xchg
inc
or
dec
loop
enter
xlat
jl
inc
incl
mov
adc
stos
xrelease
jnp
cmp
adc
sarb
shr
dec
pop
cmp
xor
dec
sbb
sub
push
ss
cmpsb
adc
scas
rorl
imul
xor
cli
mov
or
testb
int
push
icebp
xchg
sbb
insb
xchg
adc
push
ljmp
enter
dec
test
sub
xchg
shlb
pop
aam
lret
dec
cs
negl
scas
rcl
jp
movsb
adc
fsubl
rorb
dec
shll
mov
adc
push
jl
rorb
cmpsl
add
jmp
xor
addr16
pop
jno
sub
movsl
jmp
xor
xor
ret
fmull
dec
lcall
mov
sbb
sbb
add
dec
mov
dec
or
pushf
inc
jmp
sahf
push
enter
ja
jl,pt
icebp
push
push
sarb
shlb
mov
pop
sbb
mov
sbb
jo
rcr
fsubrl
cmp
push
insb
fsubp
ret
in
mov
mov
sub
or
inc
mov
and
cmp
cmp
in
adc
sub
jmp
lcall
shll
pop
call
ret
fidivs
negb
or
jmp
mov
andl
stos
mov
inc
in
and
lea
nop
jmp
push
int
hlt
push
sti
lahf
aad
in
incb
jle
sub
pop
cmp
sar
aad
mov
or
ss
or
sbb
xchg
movsl
pop
cs
push
inc
faddl
dec
or
int
lods
stos
rclb
lcall
mov
xor
popa
push
fcoml
loop
les
into
cmp
xchg
or
sub
cli
popf
fisubs
in
sahf
xchg
jmp
xor
addr16
or
pop
popa
dec
fisttps
lods
out
adc
loope
or
popf
loope
daa
addr16
or
shr
fistl
xchg
dec
cltd
cmp
cmp
mov
lret
lods
lods
inc
arpl
jle
mov
mov
test
jno
ret
xor
scas
add
stc
push
cmp
mov
into
sti
add
lcall
int
hlt
in
inc
out
es
mov
pop
cmp
cmpsl
jp
imul
push
rcl
dec
test
insb
test
lret
jp
cltd
adc
stos
testb
fmuls
mov
ss
test
jp
push
cmp
into
ds
mov
lcall
xor
bound
cltd
pop
inc
shrb
cld
add
mov
popa
adc
ja
xorb
arpl
movsb
lea
shlb
mov
ljmp
sub
and
test
inc
jae
mov
inc
aam
addr16
and
aad
push
loopne
loope
dec
adc
leave
int
cltd
notb
jb
mov
cmp
sbb
and
lret
stos
movsb
inc
mov
notb
add
mov
daa
cld
mov
jo
sub
aas
mov
dec
xchg
scas
clc
or
mov
fwait
pop
push
xorb
and
push
jg
inc
xchg
push
jae
and
fistpll
dec
sub
out
idiv
sbb
bound
test
cld
test
mov
mov
mov
xchg
sub
pop
in
or
out
add
xchg
inc
jl
into
and
ret
pop
jge
lret
fistpl
fs
stos
mov
repnz
int
mov
mul
push
pop
pop
jl
les
rclb
mov
add
fadd
or
pop
adc
decl
cmp
and
not
sbb
js
adc
inc
sbb
pop
pop
inc
lahf
jl
leave
push
mov
jge
movsl
pop
lahf
push
and
adc
jbe
imul
aam
hlt
xor
cmp
outsl
cmp
pop
and
xlat
sti
es
aaa
insb
mov
imul
push
mov
jbe
mov
fisubrl
aas
stos
dec
jb
stc
dec
movsb
gs
add
push
xlat
cmpsb
push
das
adc
push
and
out
imul
out
cli
or
jle
cld
jge
cmpsl
pop
cmp
push
xchg
push
scas
jbe
dec
mov
mov
jmp
out
xchg
addr16
scas
xor
jno
clc
push
inc
outsl
inc
mov
lahf
sub
sahf
das
mov
mov
cmp
ret
scas
pop
out
xchg
lods
dec
stc
jbe
sub
out
popf
and
add
xchg
xchg
cmp
sub
dec
movsb
out
bound
adc
aam
mov
dec
add
dec
lret
movsl
mov
push
xlat
insl
lret
and
push
mov
lcall
out
leave
shlb
out
loopne
and
into
in
push
jne
loop
fnstsw
ret
sub
sbb
shl
xchg
sbb
adc
popa
sub
mov
cld
mov
adc
push
mov
and
int
adc
stos
adc
xor
fldcw
push
aad
xchg
clc
sti
or
repz
sbb
subb
add
jle
sub
xchg
cmp
test
mov
movsb
out
inc
nop
popf
push
jnp
cltd
es
xor
ja
call
jecxz
jp
aad
adc
ds
xchg
outsb
ret
pop
jecxz
sbb
lea
rcl
shll
sub
pop
pop
lret
xor
sub
xlat
aad
dec
pop
ja
inc
jae
mov
out
aaa
jbe
lret
pop
add
in
leave
popa
stos
xchg
mov
pop
stos
cmc
in
sub
jg
lods
xor
lods
testb
mov
ljmp
testb
cmc
pusha
daa
sbb
test
xchg
mov
pop
xchg
out
xor
mov
movsb
lret
test
push
stc
faddl
mov
sub
and
or
cli
aas
dec
jle
pop
cmc
mov
inc
add
xor
sti
pop
pop
pop
inc
test
sub
jmp
icebp
call
ja
pop
push
sub
mov
cltd
pop
xchg
cmc
sbb
push
iret
sub
pop
or
or
mov
insl
jmp
arpl
jo
test
cmpsl
aam
mov
in
mov
dec
push
cmp
sbb
mov
cmp
pop
adc
andl
push
jmp
sub
and
push
cmp
cmp
sbb
xor
push
sbb
mov
mov
dec
mov
sub
lods
cmc
inc
lods
pop
fnstcw
ja
and
push
pop
mov
or
js
sti
stc
lods
out
push
xlat
sti
fcoms
dec
pop
cmp
mov
xor
outsl
pop
adc
test
push
lods
pusha
ret
jo
dec
jg
pop
jecxz
and
repnz
lahf
and
ljmp
hlt
mov
xchg
push
jl
fstl
sbb
repnz
dec
add
test
xchg
push
ret
movsl
mov
arpl
pop
rcl
insb
and
inc
xchg
mov
faddl
aaa
mov
int3
popf
dec
xchg
sbb
fmull
pop
mov
lods
fdivrl
sbb
sub
enter
test
outsl
xlat
shll
sbb
fsubl
shrl
dec
mov
test
fs
adc
and
jl
clc
pop
adc
in
push
push
mov
jmp
leave
mov
pop
call
testb
mov
das
fdivrs
push
jl
icebp
cmp
push
cli
hlt
pop
leave
jle
dec
fwait
ret
shll
xor
loopne
int
dec
xchg
bound
or
out
sbb
fdivr
cmc
cmp
lret
add
pusha
jmp
popf
jl
loope
call
fwait
rorb
jo
test
scas
mov
arpl
xor
jl
mov
imul
jne
out
sub
pop
mov
add
rcrl
push
dec
adcl
hlt
in
or
pusha
loope
xchg
loopne
insb
rcll
fcoml
aaa
jb
fisttpll
sub
cmp
cmp
jno
xchg
mov
cwtl
mov
mov
test
loopne
or
add
arpl
jp
adc
jp
dec
xor
jecxz
mov
mov
mov
loop
gs
es
mov
pop
sbb
or
inc
sbb
ret
pop
jp
mov
add
mov
mov
addr16
std
lea
xor
push
xor
push
jne
aam
lahf
out
fmul
add
jecxz
and
pop
jp
rorl
jg
iret
jge
adc
add
dec
sub
lods
int
movsl
mov
into
lcall
pop
jge
mov
pop
pop
outsb
mov
popl
shlb
and
in
fsubrl
aaa
mov
insl
xchg
push
xchg
lods
adc
push
pop
aaa
hlt
inc
jnp
and
movsb
out
adc
aam
dec
inc
call
xchg
mov
pop
mov
jbe
fmuls
jae
or
jle
sbb
outsl
shl
add
pop
adc
mov
cmp
pusha
rcrb
popa
rcrb
mov
test
loop
ret
cmc
pop
jecxz
cwtl
mov
roll
sub
inc
scas
decl
ja
and
lcall
data16
push
and
cli
test
xchg
imull
add
dec
insl
mov
ljmp
adc
and
fldenv
adc
mov
push
cmc
dec
pop
jno
ss
lock
fnstenv
xchg
sbb
mov
cmp
dec
mov
popf
fisubl
pusha
push
jo
ficoml
lods
outsb
mov
add
cmpsl
inc
jg
mov
inc
mov
stc
mov
aam
incb
fs
into
add
cld
mov
pushf
jbe
mov
jecxz
sarb
add
adc
popa
xchg
cmp
push
xchg
sti
mov
mov
mov
cmp
notl
iret
or
fistpll
mov
cmp
mov
push
fs
inc
jg
inc
and
lods
bound
xchg
inc
ret
jge
stc
xchg
lods
xchg
jmp
sbb
daa
lahf
mov
dec
push
int
push
jne
add
sub
mul
sub
sub
push
out
mov
nop
pop
test
xor
dec
adc
int3
imul
adc
shrd
cmpsb
add
pusha
mov
dec
xchg
fwait
icebp
into
jmp
data16
ss
lcall
mov
jns
jo
pop
lret
xor
inc
mov
std
pop
in
loop
push
or
fstpt
mov
inc
cmp
test
push
outsl
dec
jbe
sbb
xchg
sbb
mov
cmpsb
cwtl
in
mov
movsl
or
insb
pop
xchg
push
pop
pop
pop
enter
pushf
cmc
fstpt
and
inc
repnz
mov
xor
mov
dec
das
cmp
push
je
mov
sub
outsl
cwtl
lea
clc
sbb
lock
aam
sbb
and
cwtl
jae
movsb
in
fistps
stc
push
popa
mov
inc
dec
imul
mov
sbb
aaa
cli
aad
aaa
pop
inc
mov
push
xchg
out
into
xor
mov
mov
mov
sub
outsb
insb
loope
add
scas
mov
mov
ss
push
das
mov
sub
leave
and
jmp
nop
sbb
stos
imul
jl
inc
js
mov
daa
xchg
mov
inc
das
pop
into
sbb
jo
out
test
stos
pop
dec
fists
in
or
sub
sbb
xchg
adc
mov
jbe
cmc
mov
adc
pop
out
cmpsb
mov
pop
cmp
cmc
in
push
int
jp
adc
sar
icebp
fdivrs
mov
cmp
jns
sti
fdivl
push
in
mov
pop
pop
pop
sub
lahf
test
inc
in
cmc
ret
repz
fsubl
mov
xchg
adc
shll
dec
mov
outsb
gs
imul
cwtl
gs
or
adcl
sbb
fbstp
loopne
xchg
sub
fstpt
mov
cmp
dec
cmpsb
and
pusha
add
or
mov
les
jl
call
jne
fidivrs
dec
fldl
lret
nop
std
pop
test
adc
shrb
add
cwtl
sbb
xor
cli
push
sbb
ror
or
xor
pop
mov
mov
xchg
xor
sahf
stc
xchg
jno
pop
lcall
dec
addl
sbb
and
cmp
dec
stos
mov
sahf
sahf
inc
icebp
xchg
pop
xchg
push
imul
pop
sub
lret
mov
cmp
dec
xor
pop
xchg
push
mov
imul
in
jne
dec
fwait
and
or
jle
adc
add
test
add
pop
sti
inc
dec
dec
dec
sub
cltd
adc
add
pop
aam
out
rorb
xchg
push
adc
shlb
lret
fists
leave
dec
inc
xlat
je
adc
xchg
push
pop
cld
test
clc
daa
push
lea
push
mov
in
push
adc
jecxz
push
in
repnz
cmpl
rolb
cmp
cli
sarb
dec
mov
popf
sti
nop
pop
or
repnz
jne
test
test
dec
xor
daa
xchg
out
xor
dec
xchg
inc
or
and
test
lret
add
adc
mov
shlb
push
mov
cmp
and
mov
pop
push
mov
and
push
ret
inc
inc
cmc
out
inc
pop
in
xchg
push
sub
rcll
sbb
pop
lahf
jp
dec
cmpsl
jae
pop
sti
ror
popa
rorl
ds
fs
jecxz
cs
cmp
aad
lock
scas
mov
jns
xor
and
outsl
xchg
sub
outsl
push
sub
ret
ror
imul
js
bound
and
push
sti
inc
sbb
xlat
mov
and
lahf
mov
push
nop
mov
and
rorb
xor
adc
and
jae
aam
mov
repnz
insb
fadds
scas
xlat
cmc
mov
aaa
mov
sbb
lock
mov
int3
mov
xchg
ret
ret
jnp
ud1
fs
das
aam
lahf
or
sbb
adc
mov
in
daa
cwtl
aad
lods
lea
cmp
mov
add
in
xchg
add
ds
dec
mov
jg
pop
loope
shr
addb
and
xchg
out
arpl
in
push
sbb
or
mov
sbb
jle
and
xchg
push
lret
int
pop
or
fistl
xor
iret
test
jno
lret
mov
xor
xchg
dec
fsubr
push
sub
and
pop
sub
or
pop
filds
mov
int3
xor
je
pop
mov
adc
clc
jbe
inc
push
dec
inc
movsb
push
je
push
or
mov
insb
jne
dec
mov
push
fstpt
pop
dec
pushf
cmp
subb
loop
dec
and
les
out
add
xor
les
movsb
je
out
mov
cmp
adc
insl
pop
and
rcll
mov
aad
iret
adc
adc
call
stos
dec
int3
push
test
sbb
mov
stc
mov
inc
jbe
and
movsb
scas
fld
jl
jnp
push
cmp
cmpsl
lock
in
scas
sti
inc
jl
cmp
imull
push
rcrl
cmp
loop
push
pop
and
repnz
mov
mov
aaa
sbb
into
aad
xchg
in
mov
cmpsb
push
shl
sbb
mov
dec
xchg
jbe
mov
lcall
xchg
shrb
mov
mov
cmp
aad
adc
scas
aad
lods
push
jb
jle
cli
sbb
popa
sub
xlat
mov
cmpsl
call
push
imul
ja,pt
daa
adc
jge
inc
jno
xor
or
inc
sbb
mov
fsubl
dec
lods
int3
push
ja
call
add
adc
xor
lcall
add
push
xor
xchg
iret
cmp
mov
jle
mov
ss
xchg
jmp
call
bound
leave
mov
mov
sbb
insl
test
pop
into
fisttpll
sysenter
call
insb
dec
test
hlt
sbb
push
cs
bound
mov
cli
fucomi
scas
add
push
lods
int3
imul
lahf
and
push
or
inc
or
mov
daa
xchg
scas
pushf
sub
mov
aad
scas
or
loopne
cs
in
cmp
push
rcrb
adc
lret
faddl
jle
ret
cmp
shll
or
fcmovu
add
imul
adc
cmp
xchg
clc
rolb
aad
sbbl
xor
jmp
sub
sti
add
hlt
fbld
in
cmc
push
pop
adc
mov
in
aas
and
ret
fidivl
fisttpl
je
popl
or
jg
mov
cmp
int
stos
gs
mov
out
xchg
andb
jp
mov
sub
dec
or
clc
imul
repz
dec
mov
lds
lret
jae
fildl
fcomps
cmpb
jle
mov
xor
mov
scas
mov
or
mov
push
or
movswl
or
fldcw
mov
movsl
loopne
outsl
sbb
xchg
movsl
xlat
inc
test
push
andb
into
repnz
imul
push
cmc
add
inc
clc
cmp
or
inc
xchg
call
aaa
and
jp
adc
sub
arpl
inc
movsl
or
and
fwait
loopne
fs
dec
cs
inc
call
loopne
js
les
cltd
sub
enter
xchg
arpl
push
sbb
push
pop
xchg
and
push
inc
subb
stos
and
imul
sarl
jno
or
loope
call
push
out
fstpt
add
xor
inc
icebp
mov
adc
pop
cmp
icebp
aam
inc
shrl
push
movsl
lret
xlat
fistpll
enter
divl
pop
insb
lret
adc
mov
fidivl
ret
scas
and
aas
orl
aad
sub
mov
xorl
scas
adc
mov
xchg
push
in
mov
dec
cmpsb
cmpsl
inc
jb
sub
fmull
imul
daa
addr16
cmp
jne
outsl
mov
arpl
mov
or
inc
std
sbb
ret
dec
add
fstpl
imul
pop
nop
hlt
mov
add
pushf
xchg
adc
sbb
push
sbb
cmp
idivb
out
lock
sub
dec
jecxz
das
in
or
mov
sbb
push
cmpsl
mul
mov
xorb
sbbb
in
loopne
rclb
jmp
ror
pop
aaa
xor
andb
mov
jbe
jae
shll
inc
sbb
push
mov
mov
adc
out
pop
pop
mov
xlat
xor
adc
add
mov
or
cmpsb
pop
or
jle
push
rol
pop
push
aaa
sti
addr16
or
inc
jle
xlat
pushf
orl
arpl
dec
imul
push
outsb
jmp
pop
out
push
add
jg
test
xchg
es
aaa
dec
jbe
lods
or
cmp
mov
pushf
hlt
mov
dec
fisubl
cmp
sbb
xchg
or
push
iret
add
and
inc
mull
popf
aam
mov
es
add
out
inc
lock
data16
or
cmp
sahf
aas
arpl
es
sbbl
mov
dec
dec
push
push
sti
sbb
insb
lret
out
xor
cmc
or
cmpb
loope
xor
popa
ret
and
mov
mov
into
cltd
jo
xor
stc
adc
and
push
fiadds
dec
stc
mov
mov
mov
push
bound
ljmp
fbld
pop
dec
pop
pop
sub
mov
sub
mov
shll
push
xchg
enter
cld
or
aas
pop
fdivrl
inc
mov
sub
cld
xor
jne
cmp
jle
incb
out
xor
pushf
push
es
into
sahf
fsubrl
fcompl
shll
cmp
jle
pop
or
ret
xor
add
or
cmp
bound
xchg
sub
cmp
mov
push
jno
testl
sub
xchg
pop
dec
fidivrs
sub
mov
jne
mov
testb
int3
loope
pushaw
cmp
sbb
nop
ds
andl
sbb
dec
cmp
jns
bound
xchg
xchg
mov
subl
jnp
cwtl
test
aad
aad
out
daa
and
pop
or
shll
adc
jbe
xor
cmp
mov
pop
cwtl
mov
aad
xor
dec
sub
call
mov
mov
jns
add
xchg
or
sbb
inc
pop
dec
cmp
mul
iret
mov
sbb
pop
sub
scas
mov
call
mov
cltd
add
divb
mov
jnp,pt
test
daa
ljmp
mov
pop
push
xchg
jg
xchg
in
lcall
ds
add
sub
mov
out
cmp
lods
out
mov
jmp
test
fnsave
push
sahf
push
sub
or
aaa
mov
das
adc
lods
add
lcall
test
clc
xchg
cmp
jbe
iret
sbb
out
cmp
mov
pusha
test
inc
pop
mov
fidivl
cmc
loop
stos
xchg
sub
clc
lahf
mov
outsb
ret
add
xor
mov
inc
fldt
push
mov
imul
xor
scas
imulb
mov
testl
jo
pop
mov
imul
xor
and
cwtl
ret
data16
cmpsb
xchg
lret
loope
icebp
lahf
mov
and
push
mov
out
xor
cld
out
ss
dec
jge
mov
inc
call
push
mov
sub
clc
jmp
repz
or
inc
xor
cwtl
jno
int3
int3
stos
cmpsl
mov
sarb
sub
mov
in
clc
cmp
mov
mov
out
xlat
popf
pop
sbb
pop
aam
inc
jge
cmp
cld
or
scas
std
inc
sbb
xchg
popf
cmp
cld
cmc
sbb
and
jp
mov
sub
xor
xchg
addr16
mov
cli
stos
sbb
mov
loope
mov
int3
push
mov
shlb
jg
js
xchg
cmp
xchg
dec
xchg
jne
xchg
pop
es
adc
add
fnsave
adc
ffreep
dec
dec
xchg
and
je
outsb
dec
les
push
xchg
ss
icebp
push
cmp
mov
cwtl
es
repz
dec
add
adc
xor
lahf
leave
xchg
add
cmp
mov
icebp
adc
cwtl
or
je
rclb
xchg
shll
in
inc
mov
jb
xor
adc
lds
iret
out
adc
sbb
jns
mov
negb
inc
inc
fildl
mov
push
and
fwait
cmp
xchg
sti
pop
divb
mov
xor
cmpsl
addr16
mov
enter
jecxz
ja
das
fbld
jge
adc
jl
xor
and
or
pop
pop
xchg
pop
fidivrs
jecxz
jae
and
dec
inc
lea
and
add
pop
outsb
bound
imul
inc
in
adc
sbb
mov
mov
popf
lahf
dec
or
movsb
sbb
das
mov
dec
or
push
push
int
inc
jecxz
mov
repnz
jg
sub
jno
mov
xchg
repz
dec
sub
cmc
mov
imul
adc
add
mov
push
out
push
inc
cmp
lods
out
sbb
adc
test
fsubs
lods
pop
in
jno
fisttpll
lahf
push
fidivs
mov
mov
sub
test
fdivl
dec
shl
clc
mov
mov
dec
cwtl
icebp
cmpsb
sti
lock
jg
sbb
dec
mov
push
add
inc
xor
mov
mov
test
add
sti
mov
and
pushf
movsb
sub
aad
xchg
pop
nop
xor
clc
push
ja
adcb
cwtl
inc
mov
sbb
sub
imul
sub
or
es
sub
inc
xor
sub
fisttpl
mov
int
sub
int
movsb
mov
clc
push
movsl
mov
test
enter
and
push
pop
arpl
cmp
ss
test
jo
shl
jecxz
cmp
out
aam
mov
mov
nop
shrb
xor
and
xchg
xchg
xchg
jmp
push
xchg
ret
and
add
add
push
cmpsl
fbstp
lea
push
sub
inc
lea
jbe
inc
in
dec
sub
push
sbb
out
jecxz
mov
ss
cmc
sar
xchg
lds
dec
add
push
es
out
sbb
sbb
in
rcr
shrl
xor
add
sbb
add
out
ret
pop
adc
mov
adc
ja
xor
aas
cmp
jl
inc
aad
mov
gs
imul
insb
loop
aaa
nop
subb
insb
outsb
arpl
or
jnp
push
push
outsb
push
imul
adc
repnz
out
and
das
pop
mov
xor
jg
mov
cmc
jmp
xchg
adc
dec
cmp
ja
push
leave
sub
ret
pop
sbbl
rcl
rcll
in
cmp
iret
andb
not
inc
cmpsl
arpl
mov
adc
dec
jne
pusha
mov
imul
data16
icebp
out
sbb
insl
push
sahf
cmp
inc
aas
jecxz
jmp
sahf
in
sbb
xchg
cwtl
pop
xchg
push
outsb
int3
sbb
idiv
add
mov
ficompl
fcmovne
pop
pop
enter
stos
inc
mov
stos
movsb
jnp
dec
int
std
data16
rclb
push
and
jl
jae
and
sahf
repz
fstl
pop
cmp
fidivrl
sahf
data16
mov
cltd
adcb
inc
lcall
dec
nop
out
push
or
ds
stc
loopne
cmp
sub
cmpsb
shlb
je
add
mov
lods
repz
jae
sub
in
pop
out
cmp
cwtl
push
test
xchg
lret
mov
stc
roll
adc
xor
fmull
mov
cli
scas
dec
mov
adc
ss
lock
lret
adc
pusha
fadd
jp
mov
jl
cmpsl
stos
sbb
inc
imul
aas
xchg
xor
adc
pop
push
sub
cmpb
sti
into
pop
hlt
sbb
int
incb
movsl
ja
jp
cld
inc
sahf
sub
arpl
pop
lock
cmp
xor
ret
push
popf
pop
mov
cmc
pushl
sub
jg
cmp
stc
ljmp
cmp
inc
sbb
mov
push
mov
sbb
cmpsl
cwtl
dec
pop
cli
xchg
ss
sub
rcr
mov
imul
xlat
ret
push
lods
aaa
sbb
insl
xchg
pop
shll
sahf
mov
mov
leave
lret
scas
adc
sub
mov
addb
cmpsl
mov
and
pop
or
cwtl
fcmovnbe
out
xor
add
jg
loopne
add
int3
fs
in
or
das
push
mov
fmuls
aaa
int3
inc
shlb
add
mov
sbb
xchg
xchg
enter
sbb
loopne
in
adc
scas
push
push
xor
inc
adc
mov
je
mov
mov
pop
adc
repnz
data16
xchg
aam
nop
test
mov
or
dec
push
push
push
cmp
lret
dec
push
xchg
jae
adc
cmp
mov
repnz
fmull
ret
int3
ffreep
imul
test
mov
or
test
mov
ficoml
rorl
mov
push
sub
lahf
jmp
popf
out
pop
movsl
ds
xchg
pop
push
sub
xchg
movl
dec
mov
cmovg
push
xor
iret
loop
cmp
pop
ds
out
mov
test
push
lret
ficomps
mov
movsl
and
bound
pop
push
shl
cwtl
daa
insb
cltd
out
pop
ja
leave
mov
mov
pop
cmp
loop
jbe
ficompl
cld
mov
adc
xor
mov
popf
add
xchg
jmp
mov
sub
scas
push
shrb
imul
mov
mov
sbb
dec
mov
cmp
in
adc
xor
sbb
jbe
std
testl
imul
cld
fincstp
popf
jns
push
mov
sub
inc
std
cmp
pushf
loop
jns
jge
aad
jp
test
outsb
or
shll
dec
ret
inc
sahf
subl
int
mov
jecxz
or
xor
mov
in
add
pop
out
lods
pop
add
shl
pushf
sbb
dec
push
jg
mov
cli
cmp
negb
fmuls
test
call
pusha
lcall
and
cs
icebp
cli
enter
mov
flds
xchg
or
mov
in
dec
sbb
rol
lea
sub
adc
jg
mov
jmp
xorb
cld
cld
xchg
int
push
notb
icebp
adc
shrl
das
add
dec
jo
mov
sar
mov
add
dec
add
mov
mov
cmpsb
pop
fs
rclb
addl
dec
pop
mov
int
or
cs
mov
or
fcomi
xchg
cmc
lret
jg
dec
gs
cmp
jbe
ss
in
mov
xor
inc
push
in
divb
call
shlb
arpl
pop
add
xchg
arpl
mov
call
mov
add
jbe
out
jns
and
fsubs
dec
sub
mov
cmpl
and
inc
and
sahf
cmp
sbb
movd
aaa
mov
pop
outsl
dec
and
nop
inc
inc
inc
mov
mov
inc
in
lds
aam
ret
repz
loop
jl
inc
andb
loopne
mov
mov
mov
cmp
or
imul
jge
push
push
lds
add
xchg
xor
xlat
sbb
sbb
xchg
mov
add
into
or
leave
fdivl
sub
sbb
rcrl
push
pop
cmp
popf
pop
ds
scas
adc
loopne
bound
lods
mov
xor
test
and
pushf
jle
rorb
xchg
mov
andb
les
inc
jecxz
std
dec
xor
js
aad
jno
push
and
arpl
add
out
leave
fwait
dec
pop
push
mov
mov
sub
adc
rcrb
ja
jl
jne
xchg
mov
xor
push
and
or
sbb
and
fcompl
xor
lods
sub
scas
vfmsubps
imul
sub
dec
xchg
jbe
xchg
mov
push
jle
fnstsw
sbb
add
jecxz
mov
adcb
inc
adc
jno
mov
aam
out
push
adc
jnp
movsl
jecxz
mov
leave
xchg
dec
adc
lods
mov
xlat
push
cvtps2pd
xor
je
jns
jl
insb
inc
fdivrl
mov
in
fisttpl
sbb
mov
in
mov
cmpsl
stos
iret
jns
in
sbbb
divb
sbb
dec
je
cmp
add
sbb
out
or
fiadds
or
out
sarb
arpl
loope
icebp
jle
addb
daa
insl
push
test
std
lahf
in
sbb
xchg
jne
arpl
xchg
push
subl
sbbb
stc
leave
xchg
add
sbb
inc
mov
sbb
data16
stos
pop
ljmp
jp
pop
mov
cltd
test
cld
leave
push
in
nop
mov
stc
or
push
mov
xor
cmpsl
int3
mov
and
mov
mov
xchg
push
mov
pop
mov
pop
mov
cmpsl
sub
popa
das
stos
cmpsb
add
outsb
imul
jae
out
add
daa
dec
mov
mov
popa
clc
sbb
popf
jmp
adc
popa
cmc
movsb
mov
mov
cmp
stos
bound
out
sub
pop
xchg
mov
rclb
jecxz
sub
sub
mov
xchg
mov
xorb
pop
loope
jo
cld
in
ror
dec
sbbb
push
or
movsb
jae
ffree
lods
push
outsb
and
xchg
loope
stos
or
dec
and
pmaxsw
mov
pop
in
jns
sub
leave
or
loop
test
mov
dec
xor
push
icebp
mov
int
repnz
call
mov
mov
push
shlb
mov
mov
xchg
into
mov
mov
xchg
aas
insl
xchg
inc
dec
inc
xor
push
inc
mov
sub
push
lds
mov
push
jne
mov
addr16
movsl
xchg
push
jge
jg
jbe
jge
daa
data16
add
push
jbe
ja
cmpsb
xor
repz
push
pop
push
adc
push
push
fcmovb
inc
sti
xor
out
sbb
dec
movsb
or
ss
sbb
out
mov
sub
je
and
adc
sbb
mov
jg
sub
sub
fiaddl
daa
popa
test
mov
movsl
fadd
or
out
popa
jge
loope
xor
add
scas
sbb
imul
popf
cmp
or
jnp
fmuls
pop
fwait
aad
xor
subb
pop
push
repnz
jle
push
pop
out
push
test
jmp
outsb
rolb
xor
jae
cmpsl
xor
fwait
mov
aas
lds
ds
mov
sarl
sub
clc
push
pop
mov
sar
mov
addr16
and
xor
nop
and
jle
cmp
xlat
fucom
stc
or
nop
pop
sub
popf
sbb
adc
mov
js
stos
fsubrl
mov
rcll
popa
jno
and
inc
test
sbb
add
les
aam
sbb
loopne
mov
xchg
sub
push
popf
or
lock
mov
mov
mov
xorl
div
sub
add
data16
xor
lea
sbb
je
test
subb
jl
pop
jne
xchg
test
fs
aad
popf
mov
xchg
imul
popa
pop
inc
cltd
cwtl
bound
or
fbld
xor
jnp
mov
or
data16
and
sar
xchg
insb
leave
js
sahf
addr16
out
mov
es
into
mov
mov
js
mov
lret
aaa
inc
pop
subl
aaa
rclb
in
aam
and
sub
cmp
push
or
ss
pop
in
leave
fcmovnu
pop
enter
addb
enter
cmpsb
jge
out
sbb
xchg
mov
mov
pop
xchg
push
cmp
mov
dec
mov
jg
cli
jmp
icebp
icebp
add
cmp
pop
sahf
mov
adc
lds
out
push
pop
pop
push
push
mov
test
jnp
rorl
in
jle
xchg
jns
pop
and
mov
mov
imul
adc
aaa
xchg
fs
aaa
sub
cltd
scas
add
das
imul
push
fldln2
scas
mov
or
jbe
xchg
mov
ret
ss
test
xor
bsr
test
xchg
fcoml
xchg
dec
cmp
sub
cmp
push
inc
and
dec
ja
push
ret
sub
add
mov
test
out
jl
push
das
cmc
jo
or
cmp
sarl
dec
dec
push
push
xor
pop
jle
movsb
inc
jecxz
push
adc
push
xchg
mov
fnstsw
xchg
sub
pop
nop
roll
push
inc
enter
mov
jne
and
fadd
ret
cmp
sahf
dec
mov
push
lret
lods
sub
call
shr
push
xchg
or
or
sub
push
lahf
add
mov
lret
popf
jmp
cwtl
and
imul
in
lea
loope
lcall
sbb
or
mov
pushf
in
insl
jmp
lahf
mov
pop
stos
sub
in
repz
or
add
cmp
jge
pop
cwtl
stos
movsl
mov
push
je
add
cltd
imulb
out
mov
pop
out
sub
jb
loop
pop
inc
pushf
enter
pushf
xchg
int
mov
or
pop
out
mov
sbbl
ss
push
cltd
xchg
mul
imul
jnp
in
sub
add
xchg
aaa
rcll
ss
pop
fnstcw
das
sbb
xor
sbb
xor
or
sbb
test
ja
aam
jmp
cmp
sbb
and
pop
out
lret
xor
xchg
in
das
inc
jo
pop
fldenv
push
inc
mov
lds
fstl
sbb
push
pop
mov
cmp
mov
pop
sahf
pop
fnstenv
out
mov
nop
mov
inc
pop
testb
nop
xchg
jge
js
push
pushf
pushf
mov
push
cltd
out
jg
pop
stc
out
dec
inc
dec
push
fcmovnu
test
mov
mov
orl
mov
mov
test
jl
add
lret
jns
xchg
ljmp
mov
sub
xchg
enter
sub
xchg
fwait
cmp
shll
repnz
adc
jmp
mov
out
inc
dec
sbb
mov
or
jnp
hlt
inc
gs
cmc
outsb
imul
sub
rorl
adc
inc
mov
dec
out
test
sbb
out
jl
inc
fcompl
stc
mov
mov
loope
lods
mov
mov
sbb
adc
into
pusha
and
cmp
pusha
repz
sub
dec
lods
ds
ret
xor
test
or
push
imul
dec
xchg
mov
push
sub
dec
les
push
mov
ret
fs
jbe
stos
loope
rol
cmpsl
lds
les
mov
lds
lahf
xor
sbb
ja
jecxz
cli
addr16
fmuls
clc
out
arpl
lds
xchg
cmc
or
mov
add
xor
les
jecxz
lock
jnp
and
jp
nop
sbb
cltd
or
lret
mov
inc
out
mov
push
pop
push
push
fldcw
sahf
cmp
mov
cli
aad
xor
fwait
xchg
or
inc
mov
sti
std
addr16
jmp
pop
xchg
cmp
data16
loopne
pop
mov
int
int
ret
mov
mov
inc
jns
mov
in
or
rorb
xlat
repz
mov
bound
mov
dec
push
dec
cs
sti
mov
nop
cmp
inc
scas
lods
push
dec
data16
mov
mov
les
jb
mov
mov
aas
push
into
and
fucomp
ja
inc
gs
jle
pop
mov
sub
imull
incb
pop
fmul
aam
divb
imul
std
mov
lods
icebp
and
mov
iret
mov
lahf
cmp
mov
loope
push
loop
push
adc
cli
cmpsb
push
outsb
jbe
mov
mov
inc
test
xor
push
pop
ja
pop
into
test
sbb
inc
adc
iret
roll
mov
fxch
or
mov
lret
and
test
pushf
ds
and
adc
int
dec
cmp
adc
xchg
pop
ffree
rcr
add
sub
popa
stc
push
outsl
mov
outsl
out
aaa
bnd
repz
add
dec
lods
pop
int3
out
inc
inc
jb
mov
add
mov
movsb
dec
inc
in
aaa
add
enter
adc
mov
jne
leave
cmp
xor
pop
push
in
inc
pushf
push
dec
dec
cltd
lea
sub
es
sub
cmp
fwait
orl
fsubs
mov
jo
popa
mov
jae
cmp
mov
fmuls
push
dec
test
or
repnz
xor
cmp
sbb
push
fidivrs
daa
dec
push
iret
jae
arpl
mov
fcomip
aaa
fbld
sub
js
push
xor
divl
aas
in
clc
pusha
dec
test
push
mov
cmp
jecxz
int3
cli
cmc
lock
cmp
in
rolb
shlb
xor
outsl
fstpl
rclb
xchg
push
cmc
jbe
loop
fs
and
fwait
pop
fwait
cmp
js
sub
dec
int3
mov
in
in
cmp
aam
enter
pop
adc
cltd
mov
add
push
test
lds
pop
movsl
rolb
sub
ja
test
jno
or
inc
dec
dec
mov
fcoms
xor
nop
pushf
aam
out
xchg
orb
xchg
movsl
xor
dec
pop
cmovne
jge
mov
lret
push
mov
lret
stc
fdivrp
fistl
pusha
adc
loop
mov
out
fs
pop
addb
jp
sub
dec
out
fsubrl
fsub
dec
xchg
push
out
jmp
push
inc
outsl
lods
jno
sub
dec
xchg
xor
cmp
fiaddl
rcr
cmp
mov
cld
insb
mov
sarl
adc
lock
loope
lods
cmp
pop
push
sub
pushf
pushf
add
mov
sub
shll
or
int3
or
test
jbe
gs
std
repz
clc
lea
push
lea
std
xor
fisttpl
fs
jge
out
xchg
xor
lahf
jo
xor
ret
lds
fwait
ljmp
pop
cmpsl
xlat
es
mov
rcl
mov
int
insl
imul
pop
lret
or
or
or
lahf
push
add
pop
loopne
std
lahf
dec
sbb
pusha
lret
dec
mov
mov
sub
mov
mov
lret
lcallw
dec
dec
movsb
pusha
mov
fistpll
int3
jae
out
cmp
ljmp
js
test
sub
pop
jp
mov
or
jmp
xchg
repz
pop
outsb
push
cwtl
jns
push
sbb
mov
jg
scas
lds
mov
jg
jl
push
adc
push
jp
popf
dec
test
fs
imul
pop
sbb
pusha
out
xor
jo
dec
insl
arpl
sarl
fcoms
and
add
popf
push
sbbb
test
jecxz
mov
pop
test
xor
xchg
ret
xchg
dec
or
jmp
bound
mov
dec
sub
mov
test
mov
jmp
mov
roll
or
outsb
inc
cmpsl
jne
push
dec
outsb
sbb
addr16
jb
push
mov
push
xor
repz
and
xor
inc
fdivrs
adc
xor
std
xor
cmpsl
clc
hlt
jmp
mov
jecxz
mov
pop
xchg
jg
in
jbe
dec
xchg
out
aaa
nop
cmp
lret
pushf
or
mov
mov
pop
or
mov
push
outsb
add
add
or
add
test
js
fs
in
mov
pusha
popf
loop
pop
or
sub
mov
mov
leave
add
add
xor
pusha
mov
dec
test
push
mov
call
in
ficomps
mull
cmpsb
ss
cmp
jns
push
rclb
imul
out
push
les
push
push
and
mov
pop
dec
mov
cmpsb
mov
scas
mov
adc
imul
ret
sub
pop
fdivrl
inc
repz
movsb
fcoms
push
subl
js
add
mov
lods
ds
dec
or
xchg
dec
das
xlat
out
xchg
in
push
mov
push
pop
mov
loope
jecxz
jp
lods
test
imul
es
dec
sahf
and
pusha
adc
ja
fcoms
and
push
out
ss
test
push
sub
in
pop
push
sbb
jbe
jg
or
mov
mov
xor
cmp
lahf
add
loopne
mov
sahf
fs
mov
fisubl
xchg
js
repz
sti
xchg
sbb
jae
je
jle
cmp
mov
notb
imulb
mov
ljmp
cmpsb
inc
mov
jmp
or
mulb
sub
xchg
loopne
sub
dec
rolb
jecxz
fstpt
jp
xchg
test
xchg
xchg
cmp
sub
lea
sub
daa
xor
sbb
mov
leave
orb
aas
adc
and
in
movaps
cmp
out
int3
inc
jb
lock
ljmp
dec
addl
sahf
popf
mov
pminub
loop
jge
pusha
sbb
sbb
addl
or
cmpsb
lods
pop
cwtl
test
mov
cmc
pop
ret
ds
xchg
push
mov
cmp
ret
cli
push
push
aaa
sub
shl
outsl
inc
int
xchg
push
cmp
hlt
push
andl
test
inc
push
add
push
cmpsl
push
ss
adc
dec
dec
lods
push
lods
xchg
pop
push
insb
out
jbe
sbb
pop
int
or
in
pop
rol
push
lcall
xchg
shl
push
adc
or
jo
test
dec
sub
into
push
imul
stos
sbb
xor
lret
sub
or
sbb
jb
cmc
aaa
inc
test
cmp
cmpsl
int
movsl
jb
fistl
js
mov
mov
jge
lds
sbb
fwait
lret
jns
mov
mov
subl
fdivr
xor
cmpsl
mov
cmp
cmp
outsl
dec
sub
mov
add
mov
xor
shll
into
cltd
nop
sub
mov
sub
cwtl
inc
lds
aam
push
mov
outsw
cmp
and
jle
ret
dec
loop
xor
lods
out
sbbl
rolb
cld
in
gs
cmp
push
std
xor
aad
fcompl
fimull
jl
cmp
es
add
popa
insb
test
and
movsb
ret
sub
mov
dec
setno
arpl
pop
or
pop
push
jmp
ds
sbb
mov
mov
mov
and
lret
cmpsl
xchg
lods
adc
das
pop
jmp
mov
and
sub
das
arpl
stos
add
loopne
or
adc
fcmovnb
fcompl
or
cmp
add
pusha
mov
out
add
jmp
mov
push
jne
push
mov
cltd
xchg
inc
push
scas
int3
imul
fnstsw
popf
jb
and
in
xchg
cs
rcrb
stc
in
jb
and
and
leave
xor
sti
test
xor
int3
or
mov
dec
push
lahf
punpckhwd
in
xchg
pop
inc
sahf
rolb
addr16
jno
in
daa
bound
mov
stos
cld
int
shrl
mov
fiadds
fsubrl
sub
sbb
daa
scas
sahf
lret
sbb
mov
inc
adc
lret
mov
mov
add
cltd
cmpsl
outsl
andl
cmpsb
lret
fdivl
sbb
lahf
adc
pop
sbb
cwtl
pop
nop
popa
je
push
jne
test
lcall
out
jl
aaa
mov
cmp
dec
pusha
mov
imul
jbe
aam
xor
mov
shll
jmp
pop
inc
pusha
jmp
cltd
repz
add
lahf
pop
movsb
xchg
push
pop
mov
lret
lods
outsl
fwait
sub
repnz
icebp
sbb
test
mov
mov
bound
dec
enter
ja
ret
and
mov
push
stos
shlb
dec
cmc
mov
cmp
cmp
stc
add
xchg
cmpsl
and
mov
rcrl
lds
test
pop
cmp
and
aad
cli
push
aas
push
pusha
mov
pop
popa
push
pop
data16
stos
aaa
inc
mov
pop
xor
es
adc
dec
mov
loopne
and
std
jne
add
mov
iret
pop
push
add
dec
arpl
mov
imul
and
dec
sbb
pcmpeqw
jns
sub
scas
int
jle
cmp
out
adc
and
cli
sub
daa
cmp
dec
jg
mov
clc
and
scas
add
push
call
dec
xchg
nop
add
jecxz
mov
xchg
loopne
add
cmpsb
sbb
or
mov
popa
imul
jl
out
adc
fisubrs
pop
inc
std
aad
or
add
inc
lret
add
dec
std
scas
adc
outsb
mov
es
iret
adc
mov
call
mov
pop
scas
insl
lret
cmp
dec
psadbw
adc
mov
dec
or
push
cmp
dec
out
aas
je
jmp
scas
cmp
mov
push
dec
fildll
pop
xor
pushf
mov
jbe
xchg
xchg
rolb
mov
xchg
push
js
pop
pop
out
push
icebp
fsubr
push
jle
mov
sub
lock
add
incl
pop
jg
and
fmuls
fstpt
rcll
dec
ds
add
pushf
js
mov
popf
mov
call
cmp
push
dec
jno
sahf
sub
cwtl
dec
clc
mov
es
loop
stc
lods
insb
mov
inc
insl
jb
xchg
xor
mov
cli
test
into
lret
add
mov
testl
call
in
push
cltd
and
mov
cmp
lock
push
pop
das
xor
test
cmpb
movl
test
push
imul
mov
les
mov
jne
lods
cmp
xchg
std
test
in
sub
jge
cwtl
mov
sbb
adc
call
in
aad
hlt
out
cmp
fwait
add
jns
mov
nop
sbb
daa
sbb
cmovs
std
mov
pop
pop
out
xchg
popf
movsb
mov
or
mov
cmp
and
dec
xchg
popf
movsl
xor
jmp
and
test
add
mov
push
sbb
jo
cmp
or
jo
outsl
cmp
insb
ja
testb
js
cmp
sbb
mov
cmp
xchg
shrl
mov
inc
jbe
jbe
or
pop
or
repnz
dec
nop
and
aad
mov
and
inc
rclb
mov
ja
outsb
scas
inc
mov
or
in
add
adc
xor
filds
test
inc
arpl
mul
xchg
sbb
fldt
lea
inc
or
lods
test
int
stos
js
lret
sbb
ror
sub
mov
popa
stos
sub
xchg
out
insb
je
mov
push
aas
ret
ja
xchg
cmp
jb
sar
cmpsl
outsl
push
fisttpl
int
mov
lods
or
hlt
inc
and
ljmp
adc
pop
clc
add
sbb
aas
cmc
mov
shufps
movsb
sbb
int3
inc
mov
lahf
jns
lds
popa
adc
push
sbb
mov
out
dec
dec
lea
push
pop
scas
adcl
mov
xor
insb
out
mov
mov
icebp
lods
out
ss
pop
sbb
sub
in
stc
dec
mov
add
push
mov
adc
or
testb
dec
push
cmp
mulb
imul
adcb
fwait
push
les
repnz
subl
add
movsb
and
out
mov
mov
xor
jae
and
dec
mov
lahf
mov
dec
sbb
mov
fs
jnp
add
inc
mov
sahf
enter
fnstcw
jmp
daa
sbb
test
sti
ret
nop
or
dec
insb
inc
adc
in
xor
and
adc
imul
repnz
pusha
and
enter
out
movsb
ficoml
dec
jmp
mov
adc
mov
cmpsb
jmp
mov
xchg
and
push
or
xchg
cmpb
adc
pop
jne
jp
fnstsw
in
stc
mov
jbe
repnz
mulb
jns
cwtl
inc
sbb
movsl
lea
test
and
je
inc
iret
call
ljmp
cmp
push
push
insb
adc
push
lea
pop
lret
inc
test
hlt
shlb
call
loop
sbb
mov
shlb
push
push
push
in
scas
out
sbb
aaa
gs
aad
fst
pop
bound
fists
inc
stos
idivl
adc
fildll
and
les
push
mov
movsb
dec
add
push
mov
sub
fistl
flds
sbb
mov
push
pop
mov
fdivr
inc
mov
dec
arpl
fistps
dec
popa
arpl
add
jle
cld
sub
mov
cmc
sbb
push
popa
jns
adc
push
xchg
sbb
sarl
sub
test
loop
mov
inc
mov
jbe
daa
shl
jl
mov
call
or
test
iret
cmp
sbb
mov
inc
lahf
lods
in
out
dec
pusha
mov
std
adc
ret
cmc
shlb
std
cltd
data16
lret
xchg
je
arpl
in
inc
es
imul
out
cmpsl
dec
in
mov
push
mov
in
add
or
es
sbb
or
ret
rorl
jmp
sahf
xlat
adc
out
pop
adc
dec
in
pop
add
push
adc
xchg
mov
adc
push
xor
pushf
or
ficoml
push
popa
xor
hlt
adc
add
xchg
das
fmuls
push
incl
mov
js
test
xlat
xchg
cmp
and
mov
adcb
popf
data16
jno
jae
stos
push
cli
ret
mov
xchg
mov
xchg
sub
add
aad
sahf
adc
pop
cmp
out
stos
insl
lret
pop
xchg
sbb
or
in
mov
enter
add
inc
aam
repz
cwtl
push
xchg
mov
mov
ficompl
push
loop
adc
inc
imul
icebp
pop
dec
inc
push
sbb
xor
fildl
or
into
mov
icebp
aad
loope
cltd
jecxz
pusha
fwait
sbb
mov
jmp
loope
popa
cmc
push
and
movsb
rep
out
lods
imul
mov
loop
mov
repz
dec
xchg
mov
aaa
and
cmp
inc
loope
shlb
jp
rorb
mov
dec
dec
pop
jo
leave
sub
jb
add
jecxz
je
divl
and
popl
loopne
imul
lea
mov
sbb
mov
sub
or
xchg
sbb
sub
push
mov
or
xchg
nop
ja
sbbl
and
flds
lods
outsl
pop
enter
push
test
mov
cwtl
mov
push
or
in
jle
jl
fmulp
insb
cmc
xor
push
dec
rolb
imul
das
jo
int
scas
in
jne
cmp
fisttps
dec
pop
cltd
insb
xchg
ret
xorl
frstor
das
into
mov
test
arpl
arpl
test
inc
sub
sbb
cmp
call
xchg
cmpsl
les
mov
adcl
fcmove
sub
sub
inc
andb
push
arpl
sbb
jb
sub
outsl
jns
fidivs
and
mov
dec
cld
xchg
fldl
push
je
push
leave
adc
lret
jle
cmp
mov
fwait
mov
in
mov
add
les
dec
jle
sub
jns
repnz
xor
mov
push
mov
jae
lods
mov
xor
xorb
dec
repnz
rcrb
sbb
imul
mov
cmp
mov
add
jne
inc
or
rcrb
loop
pop
in
mov
dec
pop
push
dec
push
inc
clc
add
mov
popa
loop
sbb
xchg
push
jp
mov
aaa
sub
push
repnz
ljmp
pop
sti
push
and
xor
data16
xchg
push
lods
es
pop
pushf
jns
inc
pop
aad
cltd
push
insl
cmpsl
pop
cmpsl
stc
into
fbstp
mov
xchg
hlt
loop
std
in
mov
iret
jl
mov
pop
inc
jnp
cltd
pop
push
scas
dec
inc
dec
aaa
xchg
cmp
rclb
lods
push
adc
pop
int3
mov
rclb
mov
in
jb
in
cmpsb
test
cwtl
mov
xor
data16
pop
sbb
sar
mov
jecxz
xchg
and
pop
mov
es
add
jecxz
add
xchg
int3
mov
insl
lods
and
mov
and
cmp
cs
test
jmp
jnp
into
dec
aas
ja
pop
or
bound
in
les
leave
mov
sub
mov
pop
jo
popa
pop
dec
cmp
les
js
rorb
jo
jle
or
test
je
xchg
and
aaa
test
add
ljmp
push
pusha
inc
push
fs
fs
or
ds
and
adc
adc
mov
cs
lods
xchg
hlt
adc
subb
dec
mov
in
loop
inc
test
fbstp
mov
ret
clc
lea
outsb
mov
push
mov
mov
lock
xlat
or
mov
push
inc
shlb
testb
out
daa
negl
or
jp
sub
dec
dec
sbb
xor
sub
add
out
das
sbb
orb
shrl
mov
movsl
jle
lods
cwtl
loope
ret
icebp
jne
ds
sub
cmp
les
addr16
rolb
inc
in
mov
roll
push
enter
ret
ret
xor
dec
dec
pushw
enter
pop
scas
clc
cwtl
das
mov
lret
lds
cwtl
iret
cmpsb
pop
int
out
mulb
xor
fimull
nop
lret
push
pop
int3
mov
addr16
jo
lods
jecxz
fstpl
adc
xchg
clc
mov
fisttps
int
jo
ss
push
fmull
fwait
ss
xor
pushf
fs
mov
or
and
aas
xor
and
stos
jmp
or
daa
mov
pop
insl
xor
aaa
ret
aam
push
cli
add
xor
mov
icebp
dec
pop
push
gs
adc
fstl
mov
ret
dec
xor
setl
je
stos
int
xchg
data16
xlat
mov
xchg
push
mov
lret
push
adc
sub
loopne
daa
dec
enter
sbb
jo
outsb
jmp
dec
add
push
stos
or
lods
je
mov
mov
cmp
push
repnz
cmp
push
lcall
pop
adc
loope
dec
jmp
jl
fwait
imul
cmpsb
and
ja
mov
inc
repz
les
add
xlat
add
and
lcall
sbb
add
fld
mov
lods
mov
sti
xchg
dec
push
fwait
dec
addr16
imul
or
push
inc
mov
in
xorl
cmp
mov
jg
test
pop
addl
divb
sarb
xor
sbb
test
push
ljmp
mov
mov
test
test
lods
pop
mov
mov
sub
sbb
shrb
fdivs
out
dec
test
lret
bound
rolb
sbb
insl
push
lods
cmp
call
hlt
mov
sar
lds
dec
sbb
ljmp
sub
xlat
rcrb
enter
lret
pop
test
or
int
mov
sbb
popf
cmpsb
xor
and
pop
movsl
mov
push
aad
icebp
cmc
in
mov
push
rclb
dec
sahf
or
add
popf
xchg
jae
ret
xchg
nop
aad
xchg
push
scas
jmp
ljmp
adc
movsb
push
jnp
push
pop
cli
pop
add
xor
lcall
lret
pop
gs
pop
inc
adc
mov
inc
cwtl
shrb
dec
inc
insb
mov
les
mov
jle
push
mov
clc
cmp
mov
xchg
cmc
loopne
ja
sbb
add
push
ret
repz
notl
mov
add
push
fstps
cltd
jbe
hlt
jb
fcomp
lret
or
enter
bound
sbb
dec
into
stos
jns
pop
and
sub
outsl
aam
mov
std
test
dec
stos
clc
mov
testl
and
mov
jb
adc
out
sub
jl
dec
in
or
decl
push
sbb
jnp
pop
stos
xor
jno
jmp
push
aam
rol
add
int
into
pop
cmp
jnp
push
cld
add
into
outsb
stos
aam
ret
div
jae
and
js
rcr
cmc
push
insl
lock
addr16
sar
call
push
sbb
mov
pop
sub
and
movsb
repnz
sub
lahf
fs
shrb
dec
arpl
pop
mov
mov
add
lods
into
das
push
jge
into
je
out
xlat
lock
aaa
lds
push
ffree
jg
xor
push
jle
shr
dec
pop
xchg
and
fwait
jae
and
rcrl
xor
gs
ja
and
cmp
aaa
out
cld
push
adc
xchg
rclb
dec
jle
in
je
jl
cmpsb
xchg
fwait
cs
in
inc
or
pop
pop
sahf
data16
pop
out
adc
lds
mov
jg
adc
jmp
xchg
jb
mov
repz
out
aad
out
outsb
mov
cmpsl
jmp
repnz
xor
or
jb
jp
lret
or
mov
dec
mov
jns
sub
jmp
inc
add
push
sub
int3
movhlps
hlt
pop
and
jnp
lret
out
xchg
mov
movsl
jmp
push
xchg
push
cmpsb
andl
mov
jp
xchg
push
mov
test
roll
outsl
jno
inc
mov
cwtl
inc
push
jb
js
sbb
push
sub
sbb
add
ds
enter
fnstcw
push
rorb
jp
test
sahf
inc
in
cmpsb
mov
push
add
orb
adc
je
mov
sti
jp
push
and
nop
ja
fnstenv
mov
call
lock
jne
std
clc
test
call
inc
xlat
cmc
insb
inc
and
dec
lahf
sar
ss
xchg
inc
loop
out
sub
cmp
jle
mov
call
outsl
adc
jmp
ret
stos
xchg
cmp
mov
sti
addr16
sub
sbb
insl
div
es
cmc
sbb
add
xor
data16
in
push
mov
mov
fdivr
jmp
outsl
lret
push
pop
test
xchg
out
and
ret
scas
adc
mov
cltd
in
pop
js
sbb
adc
std
sbb
ret
mov
out
stos
xor
xchg
push
xchg
sub
clc
pop
push
mov
sub
mov
cltd
nop
adc
mov
mov
or
in
xchg
clc
lods
clc
jmp
repnz
rorb
inc
aaa
sbb
lcall
inc
repz
das
ljmp
push
sbb
addr16
negb
fmull
lock
mov
sbb
add
or
arpl
imul
or
dec
add
daa
push
stos
fwait
jmp
jg
dec
pusha
stos
outsb
pop
stos
inc
je
pop
xor
fcmovnb
xor
stos
je
rorb
iret
stc
and
xchg
andb
shrl
add
jmp
mov
mov
enter
add
scas
lcall
mov
dec
sbb
fdivs
pop
mov
cmc
pusha
pop
jecxz
in
jp
push
punpckldq
cmp
jmp
or
push
adc
out
and
repnz
mov
adc
mov
pop
testb
add
fcoml
mov
out
lods
fidivl
mov
pop
mov
dec
pop
cmpb
mov
push
cmp
ja
test
pop
pop
fcoms
add
clc
xchg
bnd
cmp
jl
xor
jge
popf
xchg
add
icebp
sub
mov
mov
mov
fsts
mov
insl
pop
push
xor
loop
imul
in
gs
clc
push
and
out
mov
push
stc
sub
clc
arpl
xchg
jno
call
loopne
push
sbb
cmp
gs
lahf
aaa
and
inc
add
jno
idiv
or
nop
xchg
stc
mov
mov
cmc
mov
mov
inc
fadds
push
fs
dec
mov
jge
adc
sub
mov
mov
inc
mov
mov
into
cmp
xchg
inc
xlat
loop
add
mov
cmp
mov
and
pusha
xchg
popl
out
cmp
inc
stos
lcall
push
push
jge
out
xor
xchg
cltd
adc
or
sahf
push
jl
mov
dec
jge
inc
scas
xor
test
dec
in
pop
insl
imul
adcl
shll
jo
insl
push
push
fdiv
outsl
cmp
push
jb
cltd
add
sub
xlat
es
das
jb
jne
fnstenv
sbb
lea
cmpsb
xchg
sti
pop
repnz
mov
je
flds
movsl
aad
and
negb
sub
sub
enter
jmp
stc
test
out
pop
out
adc
pop
loop
ret
xor
jecxz
mov
mov
lods
adc
inc
fs
sbb
lahf
dec
sub
jns
jae
mov
test
andl
adc
lahf
std
stos
and
and
mov
jecxz
inc
sahf
call
cmpsb
adc
test
jae
mov
jnp
xlat
mov
mov
add
fistps
adc
lret
and
nop
or
mov
or
inc
dec
out
dec
sahf
nop
sub
daa
jl
fimull
scas
psraw
clc
xor
mov
stos
dec
dec
sbb
test
jg
sbb
stos
xor
cltd
pop
fiaddl
sub
push
inc
xchg
icebp
push
fisubl
jge
in
pop
pop
adc
outsl
add
lret
outsb
out
add
clc
dec
xor
shrb
mov
call
and
in
xchg
ljmp
xchg
inc
ror
daa
out
mov
orl
sbb
pop
movsl
dec
pop
in
xchg
mov
ficompl
pop
push
rolb
stos
fidivrl
addb
dec
push
or
fwait
mov
lret
mov
or
out
xchg
jg
push
mov
mov
std
pop
pop
test
btc
test
lods
xchg
imul
lret
or
jecxz
sbb
mov
rorl
bswap
mov
mov
in
add
int3
or
xchg
push
add
hlt
mov
cmp
mov
xorl
add
cmp
jecxz
jnp
cmp
cmp
cmp
rcll
ss
outsl
inc
maskmovq
idivl
das
dec
mov
lock
es
mull
xchg
fldcw
add
scas
mov
leave
das
add
pop
repz
inc
push
xor
cmp
inc
outsb
jno
out
jg
mov
sbb
mov
cmpsb
xor
xchg
lods
lretw
xor
test
cld
inc
mov
enter
jo
jb
add
test
jle
addr16
or
xor
add
xor
jle
or
lahf
push
xchg
pusha
lds
jl
mov
inc
inc
sbb
xor
push
cmp
push
jp
sub
inc
outsl
xor
fs
cwtl
xor
incl
xor
mov
sbb
mov
outsl
into
lret
xchg
push
std
inc
and
dec
mov
in
or
xor
sbb
mov
and
les
daa
add
bound
and
ficoms
mov
mov
pop
cmpsb
mov
stc
into
dec
cmp
sub
inc
cmp
out
lret
dec
and
inc
jns
mov
insl
xchg
test
dec
pop
cld
and
icebp
out
movsb
or
pushf
jae
stc
mov
sbb
xchg
sahf
mov
pop
xor
adc
sahf
mov
pop
xchg
mov
mov
add
sub
add
insl
mov
sbb
push
mov
add
jbe
insl
adc
in
dec
mov
pusha
outsb
arpl
out
fisttpl
adc
push
push
add
lret
arpl
in
movsl
aas
movl
lret
rcl
lea
xchg
data16
inc
aas
pop
test
imulb
fidivrl
call
gs
jno
inc
adc
xchg
cli
enter
stc
fwait
mov
dec
pop
dec
jmp
outsb
jo
rcrl
jge
dec
xchg
movsb
inc
leave
mov
adc
ljmp
sbbb
popf
pushf
sbb
imul
int3
push
sub
sahf
sub
out
xchg
push
es
repnz
in
fistps
jmp
xlat
in
cwtl
pop
lds
scas
insl
das
dec
cmp
sub
pinsrw
gs
in
dec
inc
or
rcrl
sarb
jge
and
mov
das
imul
scas
adc
aam
daa
in
mov
popf
decl
ret
pop
push
pop
inc
and
mov
xor
aam
inc
stc
mov
out
dec
cwtl
mov
push
std
pop
xchg
push
jnp
add
jge
sub
dec
lds
and
lret
cmp
shrb
imul
mov
into
in
sub
jb
add
mov
adc
es
mov
addr16
insb
pushw
insl
int3
stos
fisubrl
inc
lock
mov
es
inc
in
orl
fdivrp
adc
jmp
shl
adc
loope
cltd
sbbl
leave
sub
xchg
fistps
cld
cmc
jae
bndldx
iret
ja
sbb
xchg
int
mull
push
inc
sub
mov
push
cmc
insb
bound
xchg
int3
iret
popf
leave
clc
cltd
rorb
bnd
push
daa
ret
xor
and
mov
adc
add
push
dec
mov
pop
mov
mov
lds
mov
arpl
add
push
faddp
cmpsl
out
fadds
pop
mov
add
aaa
jmp
pop
lret
insl
enter
ficomps
jno
lcall
jnp
sbb
dec
sbb
int3
pusha
mov
arpl
xor
das
push
sbb
cltd
adc
mov
bnd
andl
or
push
pop
fbstp
ret
repz
adc
sub
xchg
clc
sbb
outsl
das
icebp
aam
aad
sbb
daa
out
inc
pop
sar
push
sbb
cmpsl
xor
pop
mov
mov
mov
dec
ljmp
divb
lret
out
push
xchg
cmpsl
sbb
outsl
mov
fld
inc
lea
cmpsl
repz
int3
test
jbe
add
pop
mov
push
and
jbe
xchg
adc
test
dec
add
pop
or
repnz
bound
dec
jno
fists
sbb
jp
adc
icebp
iret
cmc
mov
xor
jno
stc
lods
das
jg
outsl
push
and
outsb
cwtl
ljmp
clts
pop
cmp
push
mov
loope
popa
add
xchg
movsb
xchg
or
loope
add
jo
pushf
outsb
clc
add
fdivl
orl
ds
cmpsb
pushf
out
and
pushf
and
out
pop
push
and
fimull
adc
out
xchg
jno
cmc
xor
push
mov
inc
ficoml
frstor
mov
mov
mov
mov
or
mov
cmp
inc
xor
inc
cmp
push
jecxz
in
push
mov
xlat
xchg
out
push
dec
xor
stos
mov
pop
sahf
jne
mov
fcompl
aam
adc
jge
lods
mov
pop
scas
jmp
xor
jns
daa
sbb
mov
dec
outsb
sti
insb
aas
cltd
pop
ficoml
popf
mov
push
adc
jmp
xchg
movsb
push
insl
jmp
add
in
ret
adc
jle
adc
inc
into
sbb
ficomps
jecxz
int
test
mov
adc
cld
mov
scas
es
jge
cmpsb
mov
aad
cwtl
iret
add
imul
movsl
or
cmp
ljmp
loope
inc
clc
shrl
pop
xor
pop
dec
sbb
insb
outsb
mov
dec
and
and
dec
inc
xlat
movsb
inc
add
addr16
test
pusha
lahf
outsb
insl
inc
pop
in
scas
inc
mov
pop
xrelease
icebp
xchg
scas
sub
mov
and
arpl
add
clc
push
mov
xchg
xor
cmp
jl
sbb
ret
jne
and
fdivrs
test
addr16
sbb
shrl
out
addb
add
pop
in
mov
imul
xorl
xchg
or
test
jecxz
xchg
test
stos
cmpsb
insb
call
pop
aas
jl
bound
rcrb
or
mov
push
push
cmp
cmp
mov
pop
xor
adc
and
push
mov
inc
aad
insl
fsubl
aaa
mov
xor
xchg
sbb
push
int
or
das
aad
fsubr
enter
sub
push
movsl
mov
icebp
imul
mov
sbb
mov
in
mov
aas
daa
mov
out
les
jno
mov
call
mov
cmpsb
subb
movntq
dec
movl
xchg
ret
fsubl
test
add
pop
pop
dec
cmp
dec
test
sbb
mov
lahf
repz
aam
and
adc
jns
ret
stos
xchg
addr16
pusha
popa
cmc
int
ljmp
sahf
call
add
je
aaa
bound
test
mov
lahf
out
mov
in
mov
outsl
xchg
imul
aaa
repz
xor
das
cmp
push
sub
cmpsb
xchg
push
in
push
test
cld
adc
pop
jne
fldt
jge
xor
pushf
mov
aaa
cmc
addr16
sbb
xchg
cmp
cli
jl
stos
fldt
and
xor
mov
sbb
add
idivl
mov
xor
sbb
pop
push
adc
mov
das
jecxz
push
push
test
or
imul
dec
cmpsb
std
fldcw
in
and
push
or
repz
ret
sub
in
test
mov
mov
pop
cwtl
sub
jmp
push
shlb
mov
pop
add
ja
insb
in
sub
mov
js
sbb
inc
mov
pop
mov
lock
jl
std
out
fmull
adc
in
lahf
leave
movsl
push
in
mov
push
add
dec
mov
rclb
xor
in
in
ds
shll
shlb
inc
pop
cmp
cld
cmpl
add
repnz
lods
xor
jb
mov
pop
mov
jo
ret
pop
xchg
dec
lock
andb
inc
lret
push
add
xchg
jb
add
and
cmpsl
and
pusha
push
ljmp
or
stc
fnstsw
lock
cmp
outsl
notl
pop
mov
or
mov
call
outsb
mov
pop
nop
xchg
jle
adc
out
cmp
rcll
dec
in
and
ja
adc
jp
jnp
or
push
mov
sub
or
add
cltd
add
sbbb
jnp
or
sbb
push
push
push
xor
shl
cwtl
inc
push
cli
aad
test
lds
aam
sbbb
pxor
repz
adc
imull
mov
pop
fstpt
mov
imul
pop
jecxz
and
bound
push
lock
ja
out
cmpsb
ss
cmp
inc
dec
out
stos
stc
or
inc
shrl
andb
adc
push
inc
out
lods
dec
popa
or
sbb
orb
push
pop
lret
and
adc
sub
jne
push
xor
pop
in
loopne
jo
std
cwtl
mov
lret
lods
fsubr
shlb
adcl
or
ja
or
cmp
setle
push
xchg
pop
dec
jo
mov
cwtl
inc
pop
jns
adc
cmpsl
adc
xchg
test
xchg
xlat
icebp
stos
push
cmp
inc
sahf
push
popa
cmp
sbb
aad
pop
inc
ss
mov
xlat
dec
outsl
dec
movsb
call
dec
daa
insl
fimuls
outsb
and
pop
mov
ja
push
jbe
outsl
test
and
adc
push
cltd
dec
cli
and
jmp
dec
adc
sub
jnp
jne
lock
ljmp
pop
mov
add
fisubl
js
js
in
push
pop
js
jge
cld
aaa
pop
fcomps
add
shlb
mov
jo
or
into
mov
clc
ret
adc
xor
ja
jp
das
dec
jecxz
sbb
mov
mov
loopne
inc
test
cli
push
push
cmp
lds
jle
test
push
insb
sbb
test
out
jl
push
add
daa
xchg
lret
dec
insb
adc
and
push
fisubl
mov
clc
test
mov
imul
sub
repnz
pop
daa
loopne
adc
es
lock
shlb
sbb
cmp
leave
jmp
scas
loop
arpl
cli
mov
jbe
jns
dec
outsl
cltd
adc
push
mov
cmp
push
int3
fwait
shlb
rol
int
push
iret
das
push
movsl
mov
ja
movsb
lret
xlat
aas
and
adc
andb
in
lds
out
lcall
pop
addb
pop
add
sub
jo
scas
push
adc
movsl
add
mov
dec
push
mov
and
add
insl
mov
insl
xor
sub
aad
adc
cmp
xor
mov
mov
xchg
jbe
fldt
std
ret
xor
or
arpl
lods
aam
push
sarb
pop
rclb
out
mov
sub
xlat
jge
push
roll
inc
cs
aam
test
push
stos
aas
or
push
bound
jge
les
add
push
test
push
mov
mov
and
inc
imul
repnz
jecxz
fnstcw
shll
lock
push
ja
mov
adc
push
das
ljmp
adc
mov
sbb
sbb
aad
fidivl
movsb
push
xchg
xchg
mov
nop
inc
cmpsl
les
mov
mov
in
ficompl
fsubs
data16
xlat
inc
out
jmp
decb
sbb
fstpt
xor
bound
pop
or
mov
mov
js
inc
fnstsw
xchg
xor
mov
movsb
loope
sbbl
cmp
cmpsb
mov
lret
xor
fst
mov
pop
pushf
pop
data16
sub
jb
jge
lcall
cmp
pop
lcall
lock
popa
inc
shlb
fisttpll
icebp
add
sub
mov
add
add
push
imul
insb
mov
iret
call
lds
sbb
push
stos
shl
push
or
sahf
xlat
fcompp
adc
je
push
test
std
lret
sub
js
stc
fdivr
pop
mov
mov
inc
clc
inc
jno
pop
cwtl
xchg
rorl
test
daa
xchg
add
dec
movsb
nop
dec
les
sbb
roll
sub
sahf
add
scas
icebp
mov
ja
xor
cmpsl
mov
ficoms
jecxz
add
dec
iret
mov
imul
int3
insb
mov
mov
xor
push
mov
adc
mov
jg
inc
dec
adc
mov
ljmp
imul
inc
mov
cmp
mul
mov
clc
dec
mov
out
out
add
scas
mov
mov
sub
lods
cmp
leave
push
nop
ret
inc
push
enter
dec
push
mov
popf
dec
repz
jmp
movsl
sub
sbb
mov
ret
and
pop
das
mov
push
or
jmp
adc
popf
xchg
adc
fucomp
jo
xchg
and
mov
bound
aaa
sub
ret
jmp
andl
fsubp
and
js
inc
int3
jg
xorl
mov
imul
aas
or
mov
adc
dec
dec
inc
aad
insl
hlt
xchg
mov
aaa
push
xor
jl
mov
adc
test
cld
push
gs
fistps
adc
test
pop
fnstsw
addr16
minps
cmpsb
and
and
and
insb
test
mov
cld
dec
dec
push
inc
rcrb
nop
mov
repnz
insl
sub
xchg
fisttps
add
adcb
cli
adcb
jns
adc
in
and
pop
add
jae
icebp
enter
inc
int
movsb
push
mov
pop
dec
shll
fisttps
sub
test
and
xor
xor
xor
and
popa
inc
dec
ljmp
test
js
hlt
dec
add
add
cs
push
jo
test
jg
int
adc
xor
jo
sub
mov
test
jnp
fwait
imul
arpl
jle
rcll
pop
cwtl
xchg
push
js
ljmp
stos
popf
scas
js
inc
fstpl
dec
popl
push
arpl
outsl
push
fisubs
fstl
mov
inc
cs
add
inc
push
xchg
aas
xchg
subl
xbegin
imul
dec
xor
pop
or
rcll
lret
push
jno
or
lret
add
jmp
inc
and
not
jo
jg
imul
lock
add
cmc
cmpsl
jb
mov
jnp
or
mov
cld
fdivr
mov
xlat
bnd
and
ss
rcrl
add
testl
pop
cmp
cmp
jmp
jg
js
or
xor
jecxz
push
xor
std
nop
sbb
int3
js
xchg
mov
jmp
dec
fsubp
push
jae
sub
add
sub
mov
push
roll
pop
int
popa
inc
xchg
aad
fdivs
fbstp
lea
jl
mov
xor
push
call
or
pop
dec
test
xchg
adc
out
mov
hlt
out
test
rclb
rclb
jp
xor
scas
rorb
ss
rcrl
inc
shlb
dec
fdivr
push
adc
hlt
orl
sbb
xor
xchg
push
xchg
addb
xlat
cld
or
lock
jle
lret
mov
jns
shld
jecxz
jmp
test
xchg
idiv
adc
inc
mull
push
dec
mov
or
jne
or
mov
sbb
or
mov
out
jg
jp
pop
mov
push
jge
clc
shll
adc
jno
push
add
rcll
mov
fistl
xchg
dec
ja
push
int
cmc
shrl
rcl
rcrl
jmp
add
add
pop
js
or
fwait
punpckldq
shll
and
imul
shl
aad
mov
and
pop
jne
push
sub
scas
enter
es
movsl
push
das
adc
jno
popf
outsb
jle
out
pop
and
lret
mov
repz
leave
rcrb
divl
lock
int
in
inc
out
sbb
das
xor
fsubl
lods
mov
cwtl
jg
lock
enter
mov
xor
and
outsb
mov
movsb
fsincos
cmp
mov
inc
push
adc
ds
xchg
repz
test
imul
mov
push
jmp
jb
call
test
js
out
fldt
xlat
pushf
loop
pop
push
popf
outsb
dec
lcall
lods
pop
cltd
add
cli
icebp
fcompl
lods
imul
fldl
aam
rcrb
loopne
push
dec
dec
push
push
fcmovnu
shrl
lods
daa
push
movsl
mov
xchg
cmp
push
xchg
inc
jb
sub
add
aad
fwait
in
rcrb
test
push
xchg
jmp
sti
test
roll
in
xchg
jg
mov
stos
cli
insb
cld
mov
scas
jae
xor
mov
mov
in
dec
push
xchg
fstpt
sub
pushf
jbe
test
mov
mul
mov
jae
jecxz
pusha
leave
cmpsl
push
xchg
aad
outsb
testb
test
rcll
push
fwait
int
xlat
out
scas
dec
cmp
jns
push
sub
cmp
test
jnp
mov
jae
insb
sbb
hlt
add
or
cmp
mov
cmp
stos
ret
test
out
pop
test
pop
or
rorl
push
mov
imul
mov
add
das
cmp
and
scas
outsl
inc
inc
outsl
sub
test
test
inc
and
and
shlb
popf
mov
hlt
mov
push
sbb
arpl
pusha
and
call
lret
mov
xchg
lcall
dec
xor
outsl
cmc
jge
js
cwtl
sub
jnp
dec
adc
ret
pop
cmp
fldl
shrl
fists
notl
dec
adc
pop
and
sbb
jbe
cwtl
add
pop
push
dec
rcr
and
jecxz
pop
jl
push
sbb
cmp
aaa
adc
jge
int3
pop
lret
jno
jno
fcomip
adc
mov
ret
xchg
stos
lock
cmp
outsl
inc
lahf
lret
cld
cmp
shl
es
add
arpl
mov
or
ds
das
vpshad
inc
mov
cmpl
mov
mov
cmp
cmp
mov
aaa
pop
ljmp
shrb
push
aad
cmp
push
cwtl
mov
pop
and
push
mov
mov
mov
sub
test
movsl
jbe
xchg
push
jmp
loope
jmp
fisubs
adc
cs
test
cwtl
andl
mov
sub
lods
push
leave
nop
jne
shll
leave
out
pop
scas
leave
jno
lods
xsaves
jg
fnstsw
xor
sbb
jmp
inc
sahf
mov
inc
inc
fwait
cmpsb
xlat
fdivs
popa
lea
test
push
in
sub
mov
pop
repnz
dec
adc
adc
xchg
arpl
push
adc
loop
jo
push
add
outsl
mov
sub
mov
aas
sub
dec
sbb
sub
incl
gs
jecxz
jecxz
pop
push
enter
lea
out
mov
and
push
xchg
xorb
es
or
add
sahf
out
std
ret
jg
jne
mov
push
and
push
in
dec
sbb
cmc
and
and
pop
lcall
repz
addl
mov
arpl
out
iret
xchg
int3
and
js
or
cli
dec
sub
flds
pop
scas
cmp
loope
and
cmp
pop
cmpsb
js
loopew
jg
or
pushf
xor
mov
test
aam
jge
loopne
pop
jmp
leave
jge
cmp
mov
adc
or
and
cmp
jo
and
mov
pop
jb
stc
mov
and
imul
and
mov
xchg
xor
push
push
pop
cwtl
or
sub
fisubrs
sbb
inc
adc
std
mov
mov
int3
mov
pop
outsb
jo
js
icebp
cmp
stos
mov
ret
xor
pop
push
or
push
mov
dec
icebp
xor
cmp
adc
xor
dec
xor
jle
repz
cwtl
pop
xchg
js
jb
pop
pop
cmp
mov
sub
xor
inc
or
lods
mov
out
sbb
lcall
xchg
dec
movsb
subb
cmp
in
mov
dec
fs
js
add
in
xchg
scas
adc
lock
cli
hlt
pop
pop
fistpl
cmp
jne
call
or
add
push
movsb
mov
rclb
addb
inc
ficoms
rcrl
int3
cld
fs
subl
lods
push
and
lret
popa
adc
sub
jo
sahf
clc
jbe
pop
fldt
lds
push
sbb
clc
xor
push
mov
and
test
mov
gs
int3
add
std
or
jecxz
cwtl
out
sub
cmp
ret
nop
jnp
add
mov
and
dec
mov
cmp
and
in
sbb
add
out
out
je
lret
inc
std
enter
mov
hlt
nop
js
fisubs
rcl
add
ljmp
push
test
or
nop
imul
adc
cmp
mov
add
sub
pop
pop
mov
fldcw
out
daa
movsb
in
roll
mov
arpl
insl
addl
andps
xchg
xor
ljmp
out
fistpll
jmp
out
push
aad
ficoms
loop
push
cmp
cwtl
daa
dec
daa
adc
movsb
add
push
nop
movsb
in
in
mov
arpl
pop
scas
popf
imul
fcomps
rcll
mov
stc
push
repnz
test
mov
sub
mov
inc
xor
cmp
mov
cmp
xchg
cltd
mov
lret
add
and
icebp
rcll
add
or
scas
xchg
addr16
lcall
pop
xchg
mov
or
dec
int3
push
and
jno
xor
inc
loope
jg
pusha
es
mov
leave
popf
xchg
mov
loopne
es
aas
popf
aaa
movb
pop
stos
imul
insl
xlat
or
push
xchg
pushf
add
sbb
scas
mov
inc
int
cmc
daa
jecxz
push
ds
xor
sti
dec
int
push
out
aas
sub
dec
bound
movsl
push
test
pop
aam
ss
jnp
pop
iret
add
push
adc
add
add
mov
mov
les
sti
lds
dec
add
sub
push
dec
pop
inc
dec
jmp
lods
jp
icebp
sub
xchg
ficompl
fnstcw
enter
mov
mov
xor
mov
lret
je
outsb
pop
mov
pop
icebp
fisubrl
push
mov
inc
and
xor
adc
insb
dec
push
aaa
sbb
lods
lds
out
test
adc
aas
les
repz
dec
ljmp
mov
in
inc
pusha
in
int3
xchg
mov
fidivrs
add
jl
jge
mov
mov
adcb
pop
cmp
rcrb
jno
mov
ror
pop
lods
popf
jae
fucomi
aam
je
and
xchg
pop
xor
add
std
fcoms
shlb
stos
popa
sbb
frstor
data16
jb
arpl
mov
mov
icebp
lods
sub
or
dec
sbb
sbb
jne
jo
fnsave
mov
sub
movl
mov
xchg
addl
mov
dec
pusha
sarb
push
xor
sub
dec
jmp
xchg
repz
stos
scas
and
jp
jno
inc
jo
jecxz
lret
fdivrs
xchg
push
sub
cmc
push
pop
fsubr
push
mov
std
repz
xor
inc
jg
out
xchg
out
mov
jnp
xchg
xchg
mov
add
mov
inc
test
pop
inc
cmovns
outsl
push
xor
lret
testl
xor
pusha
sub
xchg
shr
mov
vmread
mov
stc
jl
js,pt
iret
xor
push
cmp
leave
jle
jecxz
fisttpl
aas
insb
lret
push
pusha
test
aad
aaa
ret
xor
jns
mov
lds
cmpsb
fisttpll
push
sub
or
negb
lret
sbb
pop
pop
cmp
mov
lock
and
mov
or
or
sub
pop
push
dec
inc
mov
ja
sbb
addr16
mov
jp
and
cli
in
and
and
push
mov
xor
cld
xchg
cmp
xor
cmpb
jp
ja
lret
dec
pusha
ds
cmp
pushf
hlt
jle
inc
push
or
mov
dec
jmp
out
int3
lods
sbb
mov
and
and
cmpsl
xor
mov
popa
in
movsb
lcall
ficoml
scas
movl
enter
test
pop
mov
out
das
mov
mov
add
test
adc
dec
pushf
sub
add
sub
add
push
pop
adc
jle
sarl
mov
jecxz
sti
xchg
cwtl
sbb
sub
inc
std
out
cli
fidivs
imul
fwait
lret
inc
sub
or
jb
ja
dec
adc
and
jecxz
xlat
add
mov
aad
pop
adc
pop
jno
xchg
adc
aaa
jnp
mov
inc
rcl
imul
inc
fldl
sub
add
cmp
xchg
lods
in
and
scas
mov
cmp
mov
lea
into
dec
sbb
daa
cmp
cltd
adc
xor
pop
stc
scas
mov
inc
xor
mov
fcmovb
pop
data16
and
xchg
dec
or
cmp
movsl
mov
push
xor
xor
sarb
sub
fwait
insl
pop
xor
and
mov
lahf
or
push
mov
cmp
inc
xchg
xlat
test
pop
pop
push
sub
push
adc
jnp
xor
xchg
std
adc
lea
xlat
scas
in
pop
in
cmp
movsl
repz
jmp
xor
roll
ds
cld
xchg
push
add
sbb
cmp
jo
mov
roll
dec
jno
and
add
push
inc
xor
cmp
mov
mov
pop
xor
fcoml
xchg
mov
mov
jbe
in
stos
mov
stos
and
in
loop
hlt
lock
cltd
push
jne
gs
xor
loope
movsb
mov
mov
cmp
nop
push
cmc
mov
popf
jmp
out
add
enter
pop
mov
cli
rorb
loop
lret
mov
stc
inc
push
call
cmpsl
mov
inc
in
or
cmp
cmp
sbb
ljmp
imul
cmp
adc
lcall
dec
dec
xor
pop
xlat
pop
jnp
js
cmp
pop
sbb
mul
mov
mull
out
jbe
mov
cmc
dec
inc
sub
mov
stos
jo
bound
pop
xor
shlb
mov
add
sub
test
mov
cmc
in
push
stc
and
xor
clc
xchg
in
jne
cs
cmpb
insb
popa
xor
push
add
fdivr
test
sub
xor
icebp
subl
fbstp
inc
inc
adc
adc
inc
rcll
mov
divb
adc
xchg
lret
mov
push
adc
mov
lds
gs
push
lds
mov
pop
fwait
int
or
stc
fcomi
sarb
aad
sub
fs
ja
or
or
mov
jo
xchg
xor
sbb
test
jecxz
cmp
sub
stos
sub
add
dec
mov
bnd
in
jp
out
push
hlt
adc
mull
bound
cmpsl
fimull
frstor
test
scas
je
insl
mov
sub
add
cmc
lret
dec
or
push
sub
lods
jmp
ret
add
cltd
lods
or
adc
xchg
xlat
ss
xlat
xchg
push
xlat
flds
sbb
fnstsw
jo
dec
popf
lcall
popf
or
js
jp
cmp
xor
clc
xchg
sbb
scas
clc
lods
enter
cmpsl
push
rorl
and
data16
pop
clc
dec
push
or
in
sbbl
lss
add
jle
fxch
jo
outsb
add
dec
lds
xor
and
lret
push
fstl
mov
inc
lock
jle
xor
test
push
xchg
xor
xor
pop
adc
and
jne
icebp
lods
or
push
cmp
pop
jl
icebp
add
aas
inc
fnstcw
mov
sbb
je
int
sub
mov
inc
or
icebp
pushf
dec
bnd
xchg
cmp
mov
mov
shlb
adc
fiaddl
jno
adc
pop
push
jg
inc
popa
push
lea
fdivr
mov
xor
adc
iret
xchg
into
xchg
and
sub
hlt
sbbl
cmpsl
adc
popa
movsl
sbb
fimull
jnp
pop
mov
lcall
adc
out
popa
js
and
xchg
aaa
jo
dec
jl
pop
mov
sub
lods
loop
std
loope
call
sub
dec
and
cmp
outsl
loop
add
mov
mov
faddl
test
insl
call
pop
dec
cwtl
xchg
divl
push
dec
dec
divl
push
enter
cmp
cmova
aam
inc
scas
pop
fiaddl
mov
mov
out
add
je
cli
or
orl
push
mov
add
xor
hlt
xor
fcompl
fwait
leave
dec
addr16
test
fs
mov
or
dec
dec
mov
leave
notl
cmp
inc
or
clc
pop
pop
js
outsb
xchg
sub
insl
fiadds
dec
inc
mov
mov
cmc
xor
popa
add
shr
iret
jbe
pop
and
div
cmp
sbb
jne
divb
test
add
add
pop
xor
push
mov
rorb
mov
lods
imul
cmp
pop
mov
out
movsl
addr16
jns
or
mov
jmp
inc
cmp
les
xchg
int3
xor
pushf
sub
and
sahf
mov
push
int
cltd
pushf
dec
inc
stos
jmp
dec
cmp
subl
pop
xchg
mov
hlt
popa
dec
xchg
pushf
icebp
ret
jecxz
mov
jmp
sarb
in
js
fadds
xlat
movsl
sbb
adc
mov
std
int3
mov
addr16
ds
nop
and
pop
mov
stc
lea
cmp
add
jo
add
insl
xor
mov
push
ss
or
jae
int
in
jg
movsb
out
decl
jnp
aas
sub
push
sub
xor
jmp
ljmp
aas
xchg
inc
pop
enter
push
sbb
ret
mov
lcall
mov
ja
sbb
mov
add
nop
inc
addb
data16
dec
mov
fisubl
aas
mov
gs
jge
adc
fs
aad
scas
insl
xor
stc
dec
push
fs
cmp
xchg
push
aam
inc
imulb
mov
push
inc
push
lret
es
xor
cmp
or
mov
mov
ds
cmpsl
adc
lock
sub
pop
insb
sub
insl
and
xchg
mov
fidivrs
int3
out
jnp
xor
jae
mov
sub
leave
xchg
adc
sbb
cs
or
mov
xchg
ds
jmp
jne
inc
test
outsb
dec
or
mov
sti
repz
cmpsl
das
es
mov
sbb
iret
mov
jns
les
sbb
stos
mov
arpl
stos
std
jae
fcompl
hlt
mov
rcrb
mov
es
inc
xchg
ds
jg
mov
ficomps
sbb
mov
call
pushf
incb
fisttpl
xchg
hlt
int
xchg
pop
dec
inc
and
or
fisubrl
or
and
rcr
cmp
call
inc
in
cli
sub
mov
push
fidivl
xlat
push
adc
mov
push
adcb
dec
subl
push
mov
xchg
mov
nop
arpl
cmpsl
adc
test
pop
leave
nop
mov
rclb
out
setl
inc
xor
loope
push
das
lret
mov
push
inc
or
call
and
popa
movsl
clc
fldl
jns
popf
sbb
lock
mov
sbb
repnz
insb
dec
pop
pop
cli
xor
sti
mov
sbb
aad
mov
jp
jg
pop
and
js
mov
mov
xor
fs
jecxz
andl
popf
inc
mov
jle
nop
or
into
mov
mov
ret
mov
andb
jne
xor
adc
jno
pusha
add
data16
fsubp
or
cmp
scas
push
iret
push
lcall
xlat
pop
test
in
cmp
lret
push
rcrb
in
inc
int
jmp
dec
les
and
dec
lds
sti
out
jno
cli
or
jne
lahf
les
inc
clc
leave
cmp
inc
addr16
inc
jmp
popa
sbb
je
inc
and
fs
out
xchg
pop
xchg
imul
add
adc
insl
mov
mov
lea
lock
lods
fcoml
pop
push
fisubl
stos
mov
or
pop
int3
and
inc
dec
dec
pop
xor
mov
cwtl
pop
xchg
lret
out
or
adc
andb
jle
mov
adc
cmp
outsl
ljmp
dec
xor
pop
in
icebp
das
popa
dec
cmp
pop
in
outsb
in
push
xchg
mov
pop
mov
scas
outsl
adc
test
sub
cwtl
add
fs
xchg
scas
cmp
in
test
xchg
in
scas
adc
xor
dec
sbb
xor
jmp
daa
sbb
mov
mov
je
xor
jbe
shr
dec
mov
loopne
bound
cmpsb
ja
sub
aas
fs
stc
and
orl
fsubrl
jo
cltd
data16
xor
cli
aas
loope
fcmovne
fildl
bound
js
das
xorb
mov
or
shlb
cltd
mov
inc
adc
xchg
ljmp
cmc
data16
or
cmc
or
ljmp
sub
inc
lods
cmp
test
jmp
shrl
dec
pop
push
rcrw
bound
cmpsb
xchg
xchg
rcr
cs
mov
lret
ror
pop
push
movsl
pop
insl
push
int3
push
nop
jle
xchg
jnp
popf
add
mov
std
into
adc
in
lds
shlb
pop
imul
mov
test
rorl
fisubs
sbbl
push
sbb
mov
cli
je,pn
xchg
mov
push
lods
xor
inc
jb
imul
insb
sub
lahf
xchg
outsl
imul
cmpsb
ficoms
dec
pop
inc
push
sar
inc
cmp
adc
jno
das
pcmpeqw
pop
out
insb
std
es
xorb
ficoms
mov
leave
sbb
or
and
jae
inc
add
sub
imul
sti
xor
mov
es
xchg
xor
cmp
rcrl
sub
inc
jb
test
add
sti
int
cmpsl
add
pop
lea
jl
mov
sub
out
sub
mov
stos
dec
mov
push
aam
movsl
ss
pop
xchg
sub
xchg
hlt
xlat
mov
inc
pop
push
call
movsb
or
sbb
aam
cmp
dec
cmpsl
std
dec
loop
add
divl
mov
ds
adc
inc
dec
lret
mov
sbb
mov
sub
or
or
stos
ret
cmpsl
sub
pop
das
cmc
pop
xor
shlb
fimuls
pop
lret
mov
push
mov
movsl
stos
lret
cmp
stos
mov
jl
xchg
mov
mov
mov
jno
mov
lds
jge
sbb
adc
push
std
ljmp
jmp
push
mov
icebp
or
stos
imulb
out
aam
gs
pop
jne
aam
xor
ds
sti
or
jl,pt
jge
xchg
subb
push
and
gs
push
sbb
out
hlt
inc
mov
adc
mov
inc
push
movsl
push
push
in
mov
pop
mov
jno
jmp
cld
dec
repz
mov
add
hlt
adc
inc
out
push
pop
push
jbe
addr16
pop
push
loop
fwait
adc
jb
sbb
xchg
dec
cmp
pop
mov
mov
xchg
loop
ffreep
jb
push
stos
push
lret
data16
dec
je
iret
ja
idivb
call
add
inc
push
adc
and
pusha
jbe
pusha
push
lret
int
hlt
pusha
ret
sarl
cmc
or
dec
lods
sbb
test
movsl
aad
pop
and
lret
and
mov
lea
mov
mov
and
in
jo
xlat
sbb
or
push
hlt
sub
pop
xchg
mov
mov
aad
pop
mov
xor
sub
add
ror
daa
mov
ljmp
mov
jge
cmp
int
lret
xor
jmp
xor
cmc
and
xlat
jp
cli
and
repnz
jae
and
dec
cmp
mov
sbb
fnstenv
inc
pop
cmpsl
insb
subl
sbb
movsl
pop
repnz
cmpsb
fxam
and
icebp
and
jmp
cmp
push
loopne
out
std
div
sbb
stos
fwait
in
pushf
jge
push
lahf
dec
xchg
mov
sbb
in
in
sti
or
pusha
enter
nop
push
push
and
jne
xchg
xchg
lods
lods
dec
sub
add
or
out
movl
cmp
daa
xchg
mov
pop
cmp
rclb
fsubs
push
arpl
ss
mov
cmpsl
test
jb
fadd
mov
mov
pusha
xchg
leave
xchg
sbb
jno
call
gs
fs
in
pop
test
pop
leave
andl
sub
int
out
dec
outsb
jle
add
lea
dec
inc
and
in
repz
cltd
push
fdivs
cmp
fsubrs
jmp
pop
mov
add
lds
xchg
pop
adc
fisubrl
test
cld
xlat
pop
imul
std
out
call
sub
mov
jle
mov
mov
add
sbb
cmp
mov
fwait
sbbb
adc
ret
or
shrb
std
cs
add
out
int3
lret
push
lahf
push
mov
push
lods
adcb
lahf
fildll
adc
in
mov
jne
xchg
das
or
fistpl
and
xchg
popf
mov
mov
dec
mov
mov
jns
cltd
sub
call
mov
icebp
add
and
cmp
int
in
fistl
fdiv
xor
decl
jae
inc
and
loope
xchg
leave
mov
push
dec
lods
ficoml
jns
lods
lret
mov
jno
xor
pusha
cmp
mov
dec
lret
ds
lahf
fbstp
clc
adcb
pop
nop
lods
xchg
mov
testb
xchg
push
popa
cmp
fs
cmpsb
shlb
or
cld
loopne
lret
xor
ljmp
enter
repnz
out
lret
xchg
stos
sbb
mov
mov
insb
popf
xchg
cmc
cmp
xchg
pop
mov
sbbl
int3
nop
inc
jns
fists
mov
cld
inc
mov
int
cld
lock
mov
add
sbb
imul
pop
scas
repz
divb
and
xchg
adc
cld
or
xlat
pop
rcl
inc
xchg
adc
negb
in
ret
aam
fidivs
mov
lods
pop
mov
out
jmp
pop
fwait
btr
cli
push
into
mov
or
jb
xor
mov
sub
scas
stc
mov
jl
testb
inc
orl
mov
mov
scas
inc
inc
loopne
xor
inc
rsqrtps
or
lods
or
inc
hlt
cli
jl
rolb
fstps
sbb
cmp
enter
mov
cmp
dec
les
jp
mov
mov
rorl
mov
inc
nop
ret
mov
adc
add
syscall
jae
daa
lret
gs
and
test
into
cmp
mov
outsl
dec
mov
inc
or
imul
add
cltd
aad
jbe
or
sub
aad
mov
push
mov
mov
inc
add
mov
mov
fsts
add
dec
lret
xchg
mov
jg
mov
lock
xor
cmp
xchg
xor
in
dec
or
adc
ficoml
sbb
out
lea
mov
push
aas
lret
and
sub
stos
jp
dec
mov
fcmovnu
or
sbb
mov
movsl
insb
imul
jbe
add
jo
fldcw
mov
inc
pop
mov
shrb
insl
cmp
lock
je
mov
jecxz
idivb
cmp
rclb
test
push
in
lds
hlt
out
jno
insb
pop
pop
or
lea
arpl
add
idivl
loop
lea
mov
lret
push
add
add
pop
enter
jae
imulb
imul
or
rcr
pop
xchg
in
movsb
sarl
jle
xchg
cltd
ja
adc
push
mov
sbbb
mov
popf
pop
roll
xor
and
or
mov
js
dec
push
aad
sub
mov
into
inc
loopne
psrlw
sbb
xchg
in
lods
xchg
push
cmc
pop
xor
movb
and
in
cltd
repz
notb
lret
andl
pushf
arpl
inc
cltd
es
inc
push
mov
dec
fs
xlat
iret
mov
xchg
push
xor
jmp
pusha
sbb
fstp
inc
cmp
add
adc
movsb
testl
fisttpll
imul
lcall
push
in
pop
fmul
pop
adc
pop
jno
xlat
mov
mov
adc
sub
xchg
stos
aad
in
push
mov
push
push
xor
inc
aas
cmp
inc
mov
pop
lret
jns
sbb
test
outsb
sbb
mov
stos
je
pop
ret
jbe
push
dec
fldt
jno
std
ljmp
loop
mov
pop
outsl
fnsave
in
out
mov
xor
and
dec
repnz
adc
pop
push
mov
mov
mov
xor
mov
inc
rorl
enter
xor
mov
push
mov
lds
out
into
sahf
leave
icebp
pop
lds
testb
push
jecxz
push
inc
pusha
xlat
cmpl
jb
xchg
dec
mov
movsb
mov
jl
ja
iret
std
jbe
js
push
push
jbe,pn
mov
push
and
xor
and
and
xor
push
imul
out
push
fs
hlt
push
in
xor
xlat
rolb
iret
jl
repz
adc
push
xor
fiaddl
les
xor
sbb
xchg
mov
xorl
push
pop
or
mov
xchg
pushf
lahf
xchg
jnp
adc
icebp
lds
lds
test
cmp
push
cmp
jne
in
push
sbb
dec
jle
sbb
movsb
outsb
pop
xchg
inc
cmp
add
test
sub
pop
xor
adc
and
stc
xchg
push
sub
pop
mov
adc
inc
adc
scas
out
pop
sub
adc
hlt
cmp
movsb
jo
inc
nop
gs
rcll
enter
movsb
cmp
loopne
add
mov
test
cmpsl
data16
out
gs
mov
sti
movsb
imul
testb
inc
mov
pop
push
inc
call
out
lock
stos
insb
icebp
cmp
jp
and
bound
sub
or
jbe
orl
push
addl
cmp
aaa
ret
cmp
js
gs
divl
ds
cmpsl
adc
push
jo
pop
lods
or
push
test
sub
mov
leave
adc
jno
lods
and
mov
repnz
dec
mov
notb
test
push
pop
mov
popa
add
rorl
cmp
aad
xor
dec
cld
addr16
jnp
push
mov
xchg
test
shrb
insb
rclb
popa
mull
aas
sbb
arpl
lret
pop
mov
test
sub
mov
lods
push
dec
cmp
bnd
mov
sti
cld
mov
cli
jg
or
pop
lock
fadd
or
pop
cmp
je
insl
inc
dec
jnp
inc
sbb
or
int3
xor
push
aas
adc
dec
dec
push
mov
movsl
sti
cmp
int
pop
add
dec
and
adc
out
lods
adc
sbb
ljmp
lods
leave
les
into
mov
mov
out
mov
cltd
lahf
iret
aad
sbb
fcoms
push
cltd
cmp
inc
mov
jl
std
jno
mov
cmp
mov
pop
mov
shlb
out
outsl
cmp
push
push
ds
imul
sbb
push
imul
hlt
cltd
mov
push
and
fs
cld
sbb
and
in
or
fwait
sub
xlat
add
adc
push
jnp
lahf
je
cmp
mov
outsb
jge
inc
and
pop
cmpl
xchg
dec
adc
lods
pop
ja
nop
cmp
lret
push
add
cli
pop
repnz
inc
sub
dec
mov
in
fisubrs
shrb
mov
les
aaa
sbb
add
and
xchg
add
gs
fcmovnbe
mov
pusha
jp
mov
cmp
stos
jmp
lahf
add
cmpsb
mov
movsb
or
lds
je
daa
sub
jbe
mov
jbe
scas
push
mov
dec
test
sbb
sarl
dec
cmpsl
in
xchg
pop
aas
jne
or
dec
data16
daa
mov
xchg
inc
sub
je
int
sbb
push
xor
and
aaa
test
add
cmovbe
mov
push
jbe
cmc
scas
lea
add
or
add
mov
sub
cli
leave
incb
gs
flds
pop
cmc
nop
sbb
jbe
js
lds
dec
rclb
clc
cltd
addb
xor
stos
sub
jbe
in
push
in
movsl
add
adc
insb
mov
popl
in
add
add
xor
std
das
mov
imul
cltd
add
add
or
add
cmp
jbe
push
ret
cmc
pop
mov
int3
mov
ljmp
insb
hlt
call
nop
dec
ficoms
fstpt
xchg
mov
sub
aad
jg
or
xchg
leave
jp
fninit
and
add
je,pn
ret
sub
adc
xchg
cli
cwtl
add
adcb
mov
xor
cli
cmp
pop
arpl
shlb
push
dec
xchg
mov
lahf
mov
dec
push
jp
enter
clc
cmp
cs
sub
cmp
push
fldenv
push
out
leave
xor
je
cmpsl
fwait
imul
negb
ss
mov
and
mov
pop
fs
into
lret
mov
xchg
ss
dec
inc
pop
ja
ret
push
pop
bound
dec
iret
pusha
push
rorl
movsl
cs
push
jae
pop
add
pushf
outsb
and
outsl
push
test
mov
sbb
aad
jl
pop
leave
scas
sub
lahf
mov
leave
popa
mov
xchg
xchg
insl
pusha
lahf
fildl
out
incl
lahf
pop
cld
imul
pop
jbe
mov
mov
xchg
or
xlat
push
push
pop
fmull
jne
pushf
fs
xchg
hlt
mov
dec
mov
outsl
and
mov
dec
add
push
adc
rclb
or
jb
jg
loope
fwait
or
mov
jmp
imul
ret
lcall
xor
sbb
fnstenv
pop
mov
xor
mov
mov
xor
or
mov
cltd
mov
std
pop
mov
pop
mov
aam
mov
cmp
jnp
and
fs
dec
mov
lret
pop
iret
cmpsl
mov
sub
imull
mov
iret
jp
std
repnz
or
lea
mov
mov
pop
lods
rep
sbb
pushf
fs
pusha
mov
adc
pop
popf
xor
ljmp
jmp
pop
stc
enter
add
add
xor
inc
sti
mov
xorl
mov
mul
mov
mov
hlt
push
xlat
loope
mov
and
mov
pop
xchg
test
mov
fnstsw
cmc
jbe
cmpl
aaa
arpl
xchg
rcrb
pop
jle
out
sbb
test
pop
lock
into
js
cwtl
inc
out
pushf
addr16
syscall
sahf
or
orl
out
inc
and
xor
aas
dec
push
test
mov
xchg
iret
sahf
in
jo
mov
in
aas
mov
dec
popf
aam
mov
mov
mov
mov
fdivs
fisttpl
pop
in
das
out
cmp
orb
fisubl
lret
fdivl
rcr
mov
fisttps
push
enter
sub
pop
lret
push
js
dec
in
mov
sub
jmp
lahf
repnz
call
stos
fmuls
fwait
sub
xchg
push
fldenv
mov
push
jnp
mov
fwait
sbb
jo
xor
push
and
jmp
mov
and
jo
pop
fdiv
insl
insb
icebp
int
cmpsb
sub
mov
out
sbb
jmp
iret
sarl
add
mov
inc
xchg
mov
out
lahf
xor
sbb
adc
dec
sahf
push
adc
sarb
pop
pop
js
inc
mov
adc
repz
mov
mov
mov
int
movl
out
lret
mov
pop
mov
int
xor
es
mov
cmp
mov
in
mov
xor
out
pop
pusha
push
dec
adc
mov
je
mov
rcll
mov
ja
or
xor
repnz
pop
cmp
sub
pop
icebp
jno
jl
pop
jecxz
mov
clc
and
cmp
push
in
out
test
add
and
inc
stc
aad
push
pop
sti
add
push
mov
test
xorb
push
cmc
lods
jl
mov
lret
movsl
pop
in
aad
jne
outsl
nop
and
lcall
outsb
enter
sbb
ds
cmp
dec
pop
and
mov
cltd
xchg
test
xchg
shll
sbbb
push
inc
jmp
icebp
jbe
orb
cmp
shlb
adc
pop
dec
movsl
mov
sbb
adc
clc
push
mov
mov
mov
xorb
dec
xchg
enter
jl
rorb
jne
cs
cmp
cmpsb
mov
hlt
inc
inc
xchg
in
lahf
dec
jmp
addr16
int
mov
test
mov
dec
add
or
pop
in
and
aaa
inc
sbb
inc
xor
dec
jmp
adc
pop
lea
xor
ret
out
lock
scas
bnd
jo
add
adc
mov
rorl
pop
ret
dec
inc
jo
xor
cld
jle
xlat
fisubrs
mov
cld
push
movsl
mov
add
loopne
out
adcb
jge
lods
adc
pop
pop
shll
shrl
mov
lds
add
stos
xchg
lret
and
int
dec
out
sbb
xor
sti
mov
arpl
notl
ret
adc
fisubs
xor
mov
dec
jno
addr16
ja
pop
and
xchg
xchg
les
js
dec
aas
fadds
rolb
pop
adc
sub
and
cli
xchg
sbb
aam
and
aaa
xchg
faddp
mov
sti
inc
in
shl
loop
test
mov
sub
test
push
ret
push
sbb
icebp
push
gs
xor
jmp
ja
adc
push
out
call
fadds
out
fdivp
lahf
mov
mov
or
pop
mov
popa
sub
aad
xor
cmp
cmp
int3
icebp
cld
rcpps
adc
vpshlw
sbb
test
push
mov
push
dec
ljmp
xchg
and
pushf
push
sahf
popf
inc
dec
je
cwtl
cli
in
mov
stos
mov
ss
cmp
test
and
lods
pop
push
xchg
push
push
pusha
dec
js
mov
mov
cs
pop
jae
sbb
bound
mov
fbstp
arpl
orb
mov
loop
jno
sbb
mov
inc
mov
imul
mov
jmp
aam
xor
dec
rol
mov
mov
repz
adc
pop
insl
add
jl
lret
adc
pop
out
xchg
out
xor
pop
and
mov
test
cs
push
jne
insl
push
imul
mov
lcall
mov
adc
rcrl
pop
cmpsl
sbb
lahf
aas
divb
jb
inc
push
shl
mov
push
je
mov
jae
jno
test
lods
insl
jb
outsl
ret
fmulp
hlt
mov
pop
mov
movl
or
jp
faddl
jg
not
pop
dec
fidivrs
push
sbb
jl
andb
push
mov
jge
sbb
xchg
ret
test
mov
mov
stos
loopne
and
test
imul
aad
jnp
adc
jb
rorl
nop
hlt
lcall
ljmp
jno
add
mov
push
xlat
jno
xchg
js
sbb
lods
movsb
xor
repnz
push
dec
add
test
and
xor
popf
push
out
sbb
jne
clc
inc
lahf
xor
pop
mov
pushf
mov
and
pop
inc
movsl
adcl
hlt
test
cltd
mov
cli
fdivs
data16
xchg
xor
pop
xchg
pop
push
xchg
mov
mov
leave
es
dec
pop
add
ror
leave
sbb
bound
adc
popa
or
xchg
lods
adc
xor
jg
cmp
stos
lods
repz
lcall
cmpsb
movsb
push
gs
jg
inc
loope
jne
adc
pop
sub
sub
js
stc
push
xchg
xchg
inc
outsl
dec
mov
inc
sub
loopne
fcoml
stos
cmpsl
and
mov
pop
xchg
cli
je
sbb
mov
xchg
daa
fildl
xchg
negl
shrb
dec
mov
adcl
dec
incl
into
jmp
xchg
pop
adc
jg
add
mov
mov
jle
fstpt
aas
es
test
pop
jbe
inc
das
in
adc
xchg
adc
iret
stc
sub
push
sub
xor
mov
push
cmpsb
or
pop
mov
std
dec
push
adc
adc
xchg
into
jb
stc
pop
das
lret
xchg
dec
mov
repz
les
movsl
push
add
jle
pop
add
lea
out
mov
fs
dec
ds
sbb
push
xor
mov
lea
xor
cmc
aad
pop
pop
cmp
ja
dec
int
add
dec
cmp
and
xor
mov
inc
into
xchg
mov
push
repnz
fildl
testl
cmp
dec
pop
cmp
cltd
imul
lret
lahf
pop
pop
enter
cmpl
fstps
dec
mov
icebp
fldt
dec
xchg
lods
fbstp
lock
ljmp
jno
push
pop
test
mov
adc
in
ljmp
xchg
jmp
rcll
cmp
shll
outsb
dec
fcmovbe
lods
pop
jo
es
dec
adc
fidivrl
cld
fldenv
push
sub
std
or
and
das
inc
xor
cmp
jge
push
test
call
mov
outsl
cmp
inc
cmpsl
scas
xchg
jge
hlt
mov
jno
daa
mov
ret
mov
adc
inc
jge
sbb
adcl
jae
xlat
pop
adc
clc
cmp
shrb
nop
push
xchg
jle
dec
pop
pop
cmp
add
clc
in
adc
xchg
inc
mov
pusha
out
mov
int3
sbb
das
pushf
outsb
icebp
jg
xor
dec
xchg
or
sub
outsb
pop
insl
sti
fbstp
adc
int3
insb
inc
adc
pop
and
xchg
pusha
cld
push
imul
stos
fwait
loop
dec
jne
or
pop
jae
enter
or
xor
aas
adc
adc
adc
cmpl
fldcw
and
sahf
mov
ret
repnz
idivb
mov
pop
sbb
push
das
or
test
xchg
and
ljmp
sbb
sub
cwtl
jp
fsub
call
movsl
sub
insl
arpl
ds
sbb
out
push
out
lds
cmp
push
pop
dec
push
test
sbb
dec
shll
dec
imul
aas
cmp
fs
lret
ja
pusha
jne
roll
int
test
add
out
push
sub
inc
xchg
lret
lods
push
jne
xor
fnstcw
stos
cmp
popf
test
test
movsl
xchg
nop
lock
daa
xchg
mov
pop
inc
andl
mov
shll
aas
clc
sub
mov
lret
add
lcall
test
mov
cmc
fs
mov
and
jnp
lcall
stos
mov
jmp
jb
mov
das
ss
fmuls
inc
shlb
or
xchg
daa
js
pop
push
mov
xchg
ret
and
inc
pop
incl
or
ds
sub
mov
xor
sbb
pushf
sbb
les
bound
fs
outsb
xor
or
xchg
out
int
dec
push
mov
cli
das
push
jb
sub
xor
dec
sti
andb
xor
or
sbb
cmc
mov
outsl
filds
mov
in
push
xchg
adc
and
push
mov
dec
iret
push
icebp
fisubrl
notb
int
dec
add
cltd
inc
sub
jns
movsl
or
in
add
xor
cltd
mov
test
jmp
mov
outsl
icebp
sbb
lcall
push
cltd
mov
popa
rclb
mov
les
test
in
popf
das
jo
adcl
mov
fs
add
push
jns
faddp
rorb
xor
ss
out
sub
push
es
mov
jp
pop
cld
cltd
faddl
lahf
lret
cmp
adc
aam
popa
fistpll
and
in
inc
ds
sub
push
jecxz
mov
rorb
push
inc
or
xlat
enter
aaa
pop
and
mov
fsub
inc
mov
add
ljmp
loope
lret
into
and
xchg
rorb
lea
test
in
fsubs
jle,pn
sub
mov
clc
mov
ljmp
mov
pop
fs
jb
rol
out
lea
or
or
pop
pushf
icebp
jecxz
les
addr16
push
mov
out
or
div
cli
pop
subb
add
inc
outsb
xor
fnstsw
push
pop
pop
repnz
mulb
test
pop
orb
mov
dec
jge
xchg
cmp
jae
or
mov
dec
orb
jae
cwtl
stc
test
ss
leave
int3
xchg
ret
outsl
pop
mov
andb
push
int3
arpl
arpl
adc
sti
pop
or
cmp
xchg
push
sub
es
data16
scas
jle
sub
xor
dec
popa
xor
ds
daa
xor
and
aaa
xchg
fnstsw
nop
insb
or
mov
sub
sbb
loop
stos
incb
mov
xchg
es
lahf
mov
push
fsubl
fwait
cmp
inc
shl
pop
cli
adc
cli
outsb
mov
aaa
out
and
push
test
daa
mov
add
sub
int3
jge
add
dec
mov
mov
insl
outsb
or
cltd
mov
jnp
pop
test
gs
jae
xor
inc
aaa
aaa
add
jle
xor
xor
lock
push
mov
lret
mov
pop
movsl
cmp
mov
xchg
cltd
fcmovnbe
in
and
fs
ret
ss
pop
ret
add
mov
inc
mov
lcall
call
xor
shll
outsl
add
adc
iret
inc
push
adc
cmp
mov
xchg
inc
sti
mov
test
mov
dec
pop
lods
cli
out
sti
push
push
xchg
test
popf
lods
xlat
mov
pop
dec
sbb
cmp
ja
leave
xorb
int3
lea
cmpl
sub
in
stos
fisubs
loope
jmp
lds
fsubr
jo
xchg
push
insb
mull
fdivrs
sahf
gs
fldenv
sub
and
repnz
push
and
mov
or
ds
dec
push
mov
rcl
mov
scas
xchg
fcmovnu
sti
push
ret
sub
rcll
push
adc
sarl
xchg
mov
stc
sarb
mov
or
cwtl
icebp
jge
push
testl
sub
jno
xchg
push
pushf
jne
nop
test
jmp
dec
push
nop
das
stos
fidivrs
push
mov
cmp
mov
data16
and
inc
cmpsl
mov
sbb
pusha
adc
lds
in
xchg
sbb
xor
cli
mov
or
xor
fnop
push
iret
mov
or
sbb
inc
outsl
shll
inc
in
push
sub
mov
push
sub
mov
fiadds
inc
mov
lahf
data16
dec
sti
das
xchg
mov
xchg
push
loopne
cmp
ficompl
shl
lods
flds
movups
push
push
cmp
jno
jns
add
pop
in
stos
xor
pusha
mov
or
pop
mov
jno
pushf
sbb
imul
sub
mov
mov
xor
mov
pushf
test
sbb
sbb
xchg
ja
insb
fiaddl
testl
mov
or
mov
pop
cmp
xor
outsb
push
in
mov
mov
lea
mov
pusha
sub
jbe
sbb
jge
sbb
popa
lods
inc
fsubrp
adc
cmc
out
sbb
or
hlt
mov
imul
push
jg
out
inc
fldz
cmpl
mov
rorl
or
aas
xchg
mov
xchg
pop
ja
xor
scas
or
or
mov
inc
jp
pushf
cld
mov
mov
sbb
in
outsl
inc
xor
repz
push
xchg
mov
fstpl
jmp
sub
notl
or
cmp
push
lea
xchg
inc
fistl
mov
cltd
insl
scas
arpl
push
pop
cmc
mov
call
nop
jb
addr16
sub
cs
xchg
addb
or
fists
in
xchg
fs
fnsave
xchg
mov
push
sbb
outsl
inc
dec
loope
ljmp
push
addr16
lock
and
cmc
jecxz
push
inc
aad
mov
pop
mov
imul
pop
xchg
addr16
dec
mov
adc
add
dec
dec
cld
fs
es
call
mov
test
je
jae
out
push
push
pop
lock
adc
xor
jp
xchg
mov
dec
xchg
xchg
push
adc
push
inc
imul
add
or
xchg
sahf
ficoms
and
jo
shrl
jp
mov
xchg
jne
out
gs
subb
pop
cwtl
pop
xchg
push
mov
jno
mov
push
movsb
in
cmp
mov
ja
out
adcb
adc
or
and
pop
es
xor
add
pop
xlat
xchg
loop
stc
mov
into
sbb
xchg
cmp
cli
jmp
popa
inc
addr16
sub
and
cmp
jmp
dec
movsb
das
mov
and
dec
cmpsl
stc
xor
sub
inc
outsl
rcr
aaa
cmp
inc
adc
add
lret
jno
xchg
cltd
xor
xchg
push
mov
lea
adc
xor
adc
shl
bound
rcll
add
pusha
shrl
xorl
mov
in
pop
and
pop
dec
jae
pop
pop
cmc
dec
cmc
decl
add
jmp
in
movsb
loop
xlat
ficomps
inc
repz
mov
das
inc
je
shll
cmp
jbe
xchg
dec
xor
pop
shrb
les
sbb
fnstcw
fldenv
rcrb
xor
mov
fsubs
sarl
mov
icebp
or
daa
xor
stc
in
xor
push
out
dec
pusha
jo
mov
leave
inc
push
push
sahf
or
je
aam
mov
pop
push
pop
and
push
adc
loope
movntq
shlb
inc
sub
pop
mov
leave
adc
push
mov
and
jle
stos
fisubs
push
es
pop
mov
push
mov
in
jl
out
mov
repnz
xchg
adc
iret
mov
mov
push
out
push
pop
inc
sahf
inc
sub
arpl
sub
jns
push
cltd
xlat
add
dec
pop
insb
mov
std
inc
loop
divl
fidivrl
add
lcall
xor
je
flds
or
jnp
cmpsl
cwtl
mov
ljmp
loope
xchg
cmpl
jb
push
rcll
cwtl
mov
popa
lret
sbb
mov
fimull
pand
bound
imul
pop
insb
jno
lock
dec
lods
push
enter
and
test
xor
mov
popa
push
mov
pop
jl
rcll
aam
or
and
cmp
xchg
popa
push
or
out
pop
and
xor
stos
and
sub
mov
xchg
out
pop
stos
xor
sbb
jle
mov
into
jae,pn
jmp
mov
imul
fwait
xor
cmp
pop
pop
mov
push
fldt
cmp
test
mov
cltd
cmp
and
icebp
jge
pusha
out
mov
or
out
push
add
mov
cli
adc
or
mov
test
inc
int3
lea
jne
clc
rcrl
notl
rcr
dec
jle
pop
sub
dec
test
mov
inc
shlb
iret
es
sbbb
es
push
jns
xchg
add
jl
xor
jns
and
cmp
mov
fcmove
mov
clc
push
ret
cmp
mov
xchg
imul
adc
dec
fmull
shlb
pusha
sbb
mull
insb
sbb
sub
mov
sub
xchg
cwtl
ljmp
inc
rcr
mov
and
xorb
inc
clc
lea
movsl
mov
test
adc
ds
cmpsl
sub
data16
jmp
xor
jnp
outsl
ds
enter
pop
or
add
dec
enter
jo
adc
inc
mov
pop
gs
ljmp
fisubs
movsl
jbe
cltd
sti
ljmp
arpl
mov
and
stc
sti
int
test
insl
jmp
cli
sbbl
aaa
rol
mov
sub
adc
nop
mov
sub
push
xor
hlt
fiaddl
and
lods
sahf
fnstcw
sbb
push
imul
lcall
movb
mov
pop
inc
adc
cmpsl
int3
adc
sub
xchg
mull
fwait
mov
cli
out
mov
inc
movsb
push
jne
jmp
pushf
ret
stos
adc
scas
es
andb
push
popf
enter
mov
sbb
jecxz
lock
pop
pop
into
pop
clc
mov
ds
sarb
bndstx
adc
mov
or
js
cltd
cmpl
into
pop
mov
push
ss
xor
js
jge
push
xchg
es
fldcw
cmp
es
push
push
mov
sbb
shll
or
pop
sub
sbb
push
sbb
fs
sbbb
fldt
loope
insl
xor
daa
in
pusha
dec
cmp
ret
fidivrs
xlat
mov
inc
jbe
adc
out
loop
mov
aad
push
fmul
cmp
loopne
popa
scas
orb
cmp
imul
flds
test
xchg
mov
mov
out
int3
mov
jl
out
jp
xchg
loopne
add
out
cmp
add
dec
sub
mov
fs
mov
fs
push
xchg
adc
out
or
pop
je
dec
dec
fnsave
cmp
push
adc
lods
fwait
orb
bound
aam
pop
xor
sub
rcrb
into
or
inc
dec
loopne
stc
les
repnz
shlb
push
mov
fadd
xchg
out
jb
pop
add
pop
mov
mov
outsl
and
mov
inc
leave
jp
mov
mov
loopne
mov
int
jp
and
mov
hlt
sbb
jl
mov
fstpt
scas
cmc
popa
sbb
daa
loopne
pusha
fstpl
sub
aad
dec
adc
call
les
cli
and
imull
push
jb
mov
sahf
and
out
xchg
or
test
fdivl
jno
cwtl
xlat
pop
out
fwait
dec
fldenv
ds
jae
or
xchg
mov
push
push
sahf
shrl
stos
and
xchg
push
in
outsl
ss
inc
mov
mov
push
and
mov
pop
sahf
icebp
imul
push
scas
sub
ret
out
je
cmpsl
or
adc
pop
add
testl
inc
sbb
cli
mov
scas
push
jae
add
jno
pop
push
cmpsb
in
insl
mov
shrl
pop
int3
push
scas
adc
fsubr
cld
xlat
xor
cmp
mov
or
ret
xchg
lods
cmp
in
popl
movsb
lods
mov
push
sbb
add
push
stc
idivb
jne
sahf
les
sub
clc
jmp
add
xchg
es
mov
and
and
or
cltd
or
xchg
testl
inc
je
js
fucom
xchg
popa
add
mov
pop
jmp
adc
add
mov
dec
xor
mov
cmpsl
mov
in
xchg
pusha
inc
arpl
push
daa
push
push
insb
xchg
cmp
jae
out
xchg
je
imul
jecxz
xor
shrl
fimull
cmp
push
rorb
xchg
fwait
mov
js
sbb
daa
ss
add
stos
dec
lods
and
sub
cmpsl
and
mov
sbb
sub
or
xor
aas
loope
jnp
nop
outsb
fadds
mov
push
fdivrp
cmp
pusha
push
cmp
adc
or
lea
orl
shlb
push
dec
mov
mov
jge
aad
movsb
cmpl
fidivrl
mov
and
and
aad
push
mov
mov
js
dec
lret
icebp
jno
dec
mov
xor
mov
mov
xchg
fsubs
test
ljmp
xchg
sti
mov
fs
mov
sub
or
divb
sbb
imul
push
leave
xchg
js
sub
push
adc
addr16
mov
xchg
loope
sbbl
imull
pop
std
cli
and
out
in
cld
mov
xchg
fxch
or
inc
outsl
cltd
incb
jp
clc
dec
pop
repz
or
push
and
inc
imul
hlt
clc
aad
dec
and
idiv
loopne
xor
ja
xchg
mov
cmc
fidivl
or
or
pusha
lahf
daa
push
in
push
lea
clc
mov
push
mov
inc
movsl
enter
pop
enter
push
and
pop
sbb
xchg
jmp
cs
pop
push
outsb
push
or
call
in
scas
scas
xor
xchg
mov
dec
mov
inc
jge
add
repnz
lock
aam
nop
jle
lret
imull
movsb
push
mov
and
in
rcr
mov
adc
jo
lahf
cs
mov
jl
xchg
mov
xor
aaa
jmp
hlt
cmpsb
jp
icebp
jl
mov
push
ja
cltd
out
in
mov
mov
push
int
jle
fdiv
push
fwait
ljmp
mov
sbb
sbb
mov
pop
mov
lret
sbb
pop
mov
or
dec
leave
ret
test
decl
cmp
rcrb
mov
movsl
sub
pop
cwtl
push
cmp
pop
dec
test
dec
insb
mov
adc
mov
pusha
or
sub
or
push
popa
xchg
loopne
push
out
add
jp
and
mov
sub
or
push
cmp
jg
out
add
xchg
test
mov
pop
ret
stos
popf
pop
nop
cltd
mov
push
sti
sub
outsl
push
jge
xchg
pop
push
jge
ret
flds
shr
aaa
mov
stos
sub
repz
dec
popa
decb
or
xchg
iret
out
aas
jo
sbbl
negl
adc
pop
push
shlb
dec
dec
jno
mov
popf
popa
sarb
xlat
xchg
jg
in
iret
pop
and
sbb
arpl
shrl
addb
nop
ret
or
gs
or
out
sarb
mov
and
jg
je
fldl
inc
lret
test
pop
imul
das
insb
dec
fldpi
faddl
or
sub
into
xchg
jbe
insl
add
push
dec
mov
or
inc
cltd
mov
out
inc
testb
mov
mov
icebp
insl
enter
fldpi
arpl
mov
cmp
jecxz
ja
cmp
sarb
jnp
test
add
pop
push
push
adc
cli
leave
lods
scas
push
fcomip
lret
bound
std
repnz
lods
cmpsb
negb
jl
ret
loop
pop
and
pop
cmc
push
mov
cld
sub
or
repz
testb
dec
push
test
xor
lods
fcmove
inc
xor
inc
mov
jne
and
gs
and
outsb
or
lret
mov
pusha
and
in
sub
xchg
loopne
fidivrs
std
mov
jbe
mulb
out
sub
add
mov
setne
mulb
push
dec
arpl
movsl
mov
mov
and
rol
jnp
clc
loopne
loope
lds
into
adc
xor
adc
sub
out
inc
pushf
in
jo
scas
lea
cmp
jle
sbb
out
mov
jmp
pushf
inc
mov
jae
repnz
sti
cmp
cmp
fdivrl
test
ss
xchg
nop
and
jnp
scas
push
mov
inc
aaa
jnp
push
jb
mov
movb
mov
int
test
xor
adc
dec
push
nop
rolb
shrl
ss
aaa
loop
aad
leave
test
divb
jae
js
dec
cmp
js
push
xor
mov
rcrb
xchg
lods
adc
in
shlb
inc
pop
push
shrl
adc
mov
adcl
adc
cmp
mov
mov
sbb
inc
mov
inc
xchg
pop
inc
popa
ret
ss
mov
cmpl
dec
fistl
sbb
mov
sbb
cli
adc
jae
sbb
cld
adc
cmpsb
jp
adc
clc
fmul
dec
push
pop
iret
rcll
in
test
jno
inc
ljmp
lret
jle
fwait
xor
je
pop
mov
jae
pop
lahf
add
orl
cmp
lock
cmp
pop
and
jb
inc
dec
in
inc
jge
enter
pop
xor
movsb
fs
stc
sbb
popw
test
sub
int3
mov
ficoms
adc
inc
adc
xchg
jle
fisubrs
gs
decl
xor
fdivr
mov
xchg
xchg
push
push
mov
test
aam
imul
lods
mov
fs
lds
int
lret
stos
jge
xchg
mov
pop
rorl
loopne
adc
arpl
ljmp
jle
loop
dec
sub
je
rcrb
inc
sahf
jno
or
xchg
movsl
orb
mov
xchg
sar
jns
movsb
and
mov
xor
out
aaa
mov
je
push
bnd
xchg
fucomip
arpl
xor
fistpl
call
popf
lret
push
add
ljmp
pop
cmpsl
lret
pusha
or
mov
arpl
bound
fimull
or
lret
pop
jns
data16
push
pop
adc
aaa
dec
dec
out
lret
push
dec
out
lret
cmc
inc
add
jle
cmp
mov
cwtl
sahf
pop
cmp
mov
out
inc
dec
add
mov
cltd
pop
or
or
dec
push
mov
jle
sub
push
imul
jl
dec
jp
inc
loopne
shll
enter
aam
in
mov
mov
pop
pop
cmpsl
dec
xlat
mulb
inc
shrl
and
out
jl
inc
cs
mov
and
jp
shlb
lea
lods
movb
pusha
inc
mov
push
out
jp
movsb
loop
mov
addr16
jl
add
dec
add
mov
add
inc
sbb
cwtl
call
jecxz
inc
cmpsl
and
sbb
into
loope
pop
scas
call
popf
push
push
xlat
push
add
xlat
hlt
mov
fdivs
into
cmpl
mov
add
pusha
les
dec
shrb
push
push
popf
or
lahf
int3
xor
pop
pop
inc
loope
sahf
insl
movsl
xchg
data16
xchg
mov
sub
flds
stos
jecxz
gs
mov
lods
dec
in
aaa
cs
flds
add
xor
fnstenv
jl
ja
push
dec
xor
sbb
int3
icebp
and
clc
in
das
jmp
cs
popf
pop
in
fmull
and
lahf
in
jmp
cmp
xor
outsl
push
loop
mov
mov
mov
stos
and
adc
enter
sahf
icebp
sbb
jns
jl
inc
cltd
and
jge
addr16
mov
ret
jl
je
loopne
stc
dec
popa
jae
test
lahf
inc
sar
fs
pop
cmp
outsb
push
cmpl
cli
js
jo
aam
fwait
ss
jecxz
xchg
push
mov
mov
rcrl
pop
sti
icebp
inc
sub
imull
fbld
pop
add
fidivrl
mov
int
stc
adc
insb
loope
sub
inc
das
inc
xor
mov
bound
or
ljmp
es
test
movsb
pop
ret
xchg
pop
cwtl
xor
mov
add
in
rcl
lcall
ss
mov
add
addb
adcb
movsl
or
pop
imul
mov
xchg
pop
test
lret
aaa
and
dec
sahf
mov
cli
nop
cmpsb
mov
adc
fisttpll
xlat
loopne
jle
scas
hlt
and
ljmp
jecxz
mov
imul
incl
movsb
cmp
lods
and
iret
mov
icebp
out
push
push
adc
mov
jae
inc
pop
into
mov
xchg
ss
xorl
push
pop
cwtl
lods
push
es
hlt
and
popa
pop
mov
aam
int3
gs
test
mov
xor
and
pop
dec
jl
maxps
call
push
fsubrl
stos
mov
xor
in
jecxz
inc
lods
add
in
push
and
xchg
arpl
or
jmp
mov
or
addl
inc
mov
cmp
arpl
dec
and
rcl
test
jmp
cli
subb
jne
add
aam
cmpl
dec
scas
mov
and
aas
shll
add
xlat
and
pop
push
imul
mov
push
jns
rorl
mov
movsl
adc
mov
repz
test
mov
push
ret
cmpsl
mov
fwait
int3
cmp
jnp
addr16
insb
xchg
aas
jg
mov
cmp
outsb
outsl
scas
fsubl
hlt
mov
pop
jg
mov
or
pop
jo
sbb
stos
pop
mov
push
push
rclb
in
shll
mov
ja
scas
popa
inc
dec
stc
sub
outsl
dec
aad
orb
sbb
mov
rcrl
mov
bound
sarl
int
jp
andl
rcll
sbb
jne
xor
rcrb
or
pop
fistpl
sbb
ja
inc
pop
mov
jb
push
insb
jnp
stc
mov
movsb
sbb
sbb
lret
movsb
mov
sbb
pop
insl
inc
test
add
aad
mov
movsl
mov
or
stos
and
adc
mov
jmp
hlt
adc
mov
out
mov
push
pop
pop
rcrb
jb
mov
push
popa
sbb
ret
aas
xor
push
cmpsl
stc
test
add
and
aad
xlat
movsb
or
iret
xchg
outsb
xchg
or
pop
push
popf
jb
xadd
jmp
mov
jl
sub
testb
lea
ficoms
test
mov
or
dec
outsb
cmp
xor
fsts
dec
pushf
cmc
push
mov
cs
scas
jl
or
jbe
les
lods
and
je
es
pop
stc
out
das
pushf
mov
jp
shll
and
shl
dec
test
insb
imulb
inc
movsl
cwtl
xchg
fimuls
scas
gs
sti
pop
or
xor
xchg
stos
ret
jo
jmp
xchg
js
sbb
pop
out
sub
mov
dec
fs
fdivrs
cmp
popf
fisubl
test
add
out
test
loop
sbb
pusha
mov
sbb
mov
jno
rol
rorb
add
mov
jp
loopne
cmp
fisubs
jnp
jae
jg
js
cmp
pop
xchg
popf
add
adcb
or
test
add
movsbl
mov
add
pop
adc
pop
and
mov
hlt
jbe
pop
scas
mov
sbb
cmp
jp
pop
dec
mov
pop
in
ss
push
mov
pop
xchg
mov
adc
cmc
and
insl
mov
cltd
cmp
sub
fldenv
je
arpl
outsl
xor
mov
ja
xlat
je
rorb
xchg
sarl
stos
pusha
mov
mov
incb
push
fwait
add
adc
mov
sbb
scas
mov
rorl
jae
xchg
mov
loop
das
gs
dec
mov
sti
sub
jo
pop
mov
orb
fstp
mov
and
mov
rorl
fbstp
fs
dec
inc
shlb
lea
vfnmadd132sd
xchg
adc
xchg
rorb
or
imul
xchg
xor
mov
inc
dec
or
fmull
fwait
imul
xor
pop
lea
nop
ja
mov
into
push
ja
mov
daa
dec
lds
mov
xchg
inc
inc
push
clc
pop
or
arpl
add
lds
xor
pop
dec
mov
and
mov
mov
repnz
dec
lock
or
jno
mov
mov
repnz
jno
xor
xchg
enter
lcall
xchg
pop
mov
cli
lcall
lock
mov
loopne
fsubl
or
dec
inc
ljmp
cmp
mov
push
cmpsb
xor
icebp
hlt
hlt
mov
or
fcmovbe
enter
push
mov
ss
jo
mov
fwait
adc
jle
stc
mov
sub
test
fisubl
test
insl
xchg
testl
cmpsl
or
pop
jo
in
push
dec
cmp
ret
out
pop
daa
rol
add
pop
dec
or
je
jecxz
or
mov
aam
sub
and
xchg
pop
out
std
lahf
cmp
xchg
adc
aaa
sbb
shl
xor
clc
sub
data16
or
add
xor
xor
mov
push
add
adc
push
or
iret
lods
jg
xchg
xlat
scas
xor
inc
cmc
mov
fdivs
push
cmpsb
sub
inc
mov
test
shlb
xchg
xor
adcl
cli
pop
mov
loope
call
mov
mov
mov
into
add
xchg
pop
sbb
int
faddl
arpl
mov
jle
sbb
dec
mov
adc
ja
stos
push
test
je
mov
dec
dec
jge
adc
push
idiv
sub
adc
xchg
xchg
push
mov
inc
cmpsb
xor
out
jmp
mov
add
roll
mov
xchg
pop
cld
push
inc
push
mull
gs
imul
call
and
imul
xchg
fdivl
inc
les
nop
outsl
add
int
mov
sti
push
cmp
fwait
pop
cmp
addl
ficoml
adc
xchg
or
mov
mov
sbb
ljmp
add
and
jae
sub
cs
dec
imul
xchg
jmp
or
xor
pop
cmpsl
sti
mov
sbb
fldt
mov
and
push
stos
jbe
adc
ja
fcmovb
adc
cmc
pop
movsb
hlt
jno
mov
mov
js
dec
mov
push
mov
lock
adc
mov
pop
fisubl
jbe
inc
jg
mov
in
fpatan
cli
cwtl
mov
mov
cwtl
adc
iret
and
cs
lods
sbb
repnz
sahf
into
mov
mov
push
sub
adc
fstpt
inc
adc
sbb
mov
setns
scas
fbld
scas
cmp
adc
mov
mov
push
jno
xchg
and
in
pop
jg
cwtl
adc
ja,pt
mov
adc
out
iret
cld
sub
cli
push
ret
xchg
ret
icebp
scas
xchg
pop
push
mov
and
mov
mov
mov
lods
xor
push
and
pop
mov
lret
dec
je
mov
xlat
dec
mov
sbb
or
aas
pop
je
cli
sbb
shrb
jl
push
adc
push
mov
mov
pop
incl
out
dec
sbb
push
mov
sbb
stos
push
push
in
imul
stc
jnp
xchg
jno
arpl
or
xchg
dec
fsubp
ret
mov
and
ficoms
and
jns
test
cli
gs
es
rcl
repz
mov
mov
cmpxchg
stos
out
dec
mov
in
xor
push
mov
or
int3
int3
addb
pop
out
jb
mov
push
sub
stc
xor
orb
inc
std
fmuls
and
std
cmpsl
pusha
inc
flds
sahf
ljmp
jne
push
ja
and
adc
out
mov
insl
ror
inc
add
jle
stos
fwait
and
ss
fdivs
pop
ret
xor
xchg
inc
mov
jp
push
nop
add
push
lods
outsb
pop
jnp
adcb
xlat
sbb
push
sbb
imull
add
pop
xor
cmp
inc
arpl
sbb
push
sub
cmpsl
push
sti
mov
sub
fldcw
es
xor
jle
imul
test
int
int3
outsl
loop
pop
pop
leave
mov
lods
out
ret
daa
movsl
or
cld
push
adc
and
hlt
mov
or
add
imul
push
or
jecxz
sti
aam
sbb
or
xchg
or
ss
jb
lock
mov
jno
shlb
insb
push
pop
aas
mov
xor
add
repz
je
mov
out
aam
pop
iret
cmp
aam
and
xchg
loopne
inc
scas
rorb
sbb
lcall
sahf
mov
scas
ja
dec
pop
mov
cs
jb
das
inc
cmc
mov
sbb
inc
in
mov
pop
adc
lea
mov
adc
xchg
jle
and
sbb
cwtl
and
pop
xchg
imul
repnz
xor
mov
and
xor
mov
test
subl
pop
hlt
mov
mov
aad
mov
add
add
mov
mov
sti
call
adc
or
push
jg
sbb
inc
mov
and
out
jmpw
lods
hlt
jb
pop
push
test
aas
dec
mov
cltd
js
imul
or
popa
test
adc
jge
pop
push
add
pop
cmp
out
fs
mov
mov
sarl
jmp
mov
jmp
xchg
mov
mov
icebp
pusha
repz
add
mov
pop
ret
jp
aaa
out
insb
cmc
repz
sbb
xchg
popf
and
scas
adc
pop
pushl
cld
and
test
mov
jl
int
jg
inc
mov
imul
ret
je
fs
sbb
imull
fwait
cli
loope
or
dec
icebp
jp
push
test
add
jmp
and
inc
imul
xor
or
cmp
rol
push
lea
mov
and
loopne
out
pushf
fcmovnu
pop
fildl
pop
in
mov
dec
mov
incl
insb
sub
jp
add
setbe
inc
dec
int
loope
stos
adc
ja
mov
xor
fucomip
xor
cwtl
or
jnp
repz
inc
fst
insb
xor
jnp
mov
jl
test
scas
or
pop
adc
and
lret
lods
or
sub
stos
xsaves
xor
stos
adc
sbb
xor
mov
cs
jmp
repz
mov
pop
into
jae
ja
jne
cmp
adc
aaa
add
pushf
imul
shlb
add
in
push
repnz
cmp
xchg
insl
inc
push
movsl
mov
icebp
icebp
or
shr
push
fwait
push
aaa
inc
int
dec
clc
loope
or
subl
inc
cmp
inc
outsb
rclb
ds
ljmp
popf
sub
mov
clc
mov
sbb
push
jnp
jecxz
lds
xchg
jns
add
sub
mov
adcb
lods
adc
sbb
dec
subb
adc
mov
push
cmp
pop
adc
iret
test
add
mov
inc
sbb
jns
jae
mov
leave
push
adc
inc
mov
and
pop
inc
add
mov
aaa
movsl
or
test
dec
out
jne
adc
sti
push
test
cmpsb
mov
sub
ja
xchg
insl
mov
cmc
clc
mov
mov
js
pop
hlt
sub
push
outsl
les
movsb
jne
pop
fimuls
lods
push
inc
lret
sub
loop
lret
jae
mov
lds
outsb
fbstp
mov
sbb
sbb
inc
stc
mov
sub
rorb
lods
insb
popa
adc
inc
ss
dec
push
mov
out
mov
add
add
test
adc
fwait
js
les
insl
xchg
das
sbb
push
roll
orb
inc
insl
stos
and
pop
or
popa
imul
mov
loope
or
ret
and
movb
sbb
fistpl
mov
mov
cmpl
push
inc
fcoml
jb
popf
in
push
stc
mov
push
pop
fldcw
mov
pop
rolb
cltd
pusha
xchg
push
jle
cmp
add
jnp
ljmp
xlat
cld
fstpl
mov
fwait
or
loopne
jne
stos
rorl
leave
pop
xorl
add
push
push
arpl
mov
outsl
aad
jo
daa
xor
popl
xor
add
push
fldcw
fsubrl
enter
pop
shrl
sbb
cmpsb
mov
mov
mov
push
iret
dec
mov
pop
mul
repz
stos
lock
jle
jl
js
jmp
outsb
scas
movsb
cmp
xchg
call
mov
cmp
mov
mov
repnz
xor
cmp
ret
out
jle
pushf
cmc
dec
lcall
push
xchg
test
mov
bound
xor
or
push
ret
cld
das
mov
mov
pop
push
notl
xor
inc
shll
push
sub
push
mov
mov
scas
outsb
sti
enter
jns
clc
subb
in
jg
dec
mov
ret
enter
jo
fmul
shrb
fwait
pop
jno
lret
bnd
or
dec
xlat
pop
insl
sbbl
xor
test
xor
xchg
sbb
fwait
mov
jge
push
aas
loopne
lods
js
sub
icebp
loopne
mov
bound
dec
shr
in
mov
repnz
loop
lret
je
leave
insl
lds
scas
pop
andb
inc
popa
dec
or
dec
sbb
negl
mov
gs
fdivl
rep
sub
xchg
sbb
movsb
dec
mov
fld
push
in
cwtl
loop
nop
cwtl
call
mov
lret
jmp
and
jns
mov
adc
add
test
mov
imul
das
mov
sbb
jecxz
mov
stc
or
adc
sti
out
repz
dec
pop
ja
push
adc
mov
mov
nop
cmp
mov
aad
inc
inc
stc
cli
fcompl
add
push
cmp
addr16
shlb
adc
ret
jns
testb
mov
mov
mov
icebp
jecxz
mov
push
mov
sub
sbb
cltd
fldl
movsl
loope
lret
aad
in
imul
sti
and
jo
pusha
mov
jbe
stos
sub
dec
jae
fimull
xor
jle
mov
mov
pop
mov
negl
rclb
fwait
ljmp
mov
push
into
jmp
xchg
mov
mov
mov
xchg
movsb
stos
in
and
lcall
cltd
cli
dec
add
mov
shlb
push
inc
sub
sbb
in
lahf
ljmp
and
dec
fs
ds
jge
negl
mov
sub
shrb
ret
ror
test
jle
jge
xchg
inc
sti
stos
iret
xchg
insl
xchg
jno
loopne
add
loop
push
inc
repz
ret
scas
ljmp
sti
jno
cmp
fucomip
jmp
push
or
pop
andb
fsts
mov
jnp
sbb
jg
pop
cli
cld
inc
lea
pop
ja
jge
jp
insl
lahf
mov
test
insb
mov
arpl
arpl
jmp
divb
imul
rorl
call
ljmp
add
pop
xor
roll
mov
pop
mov
in
imul
out
out
data16
out
fwait
mov
xchg
dec
inc
sahf
dec
into
ja
jo
clc
xchg
sub
daa
std
lahf
sub
mov
addl
sti
das
add
stos
inc
adc
sbb
adc
push
push
or
ds
mov
dec
push
mov
inc
mov
mov
add
popf
sbb
pusha
push
jae
enter
mov
bound
in
push
fidivs
daa
roll
push
or
mov
mov
mov
adc
push
inc
add
pop
sbb
in
in
je
and
xorl
addb
mov
jne
mov
lret
daa
or
je
cld
pop
outsb
idivl
or
xor
fidivl
lahf
mov
sbb
out
jb
lret
loopne
aas
scas
adcb
orb
pop
pushf
inc
es
lret
ret
and
cltd
add
sub
mov
cmc
or
xor
and
sbb
lods
dec
dec
ret
push
arpl
mov
clc
push
pop
roll
repnz
xchg
rsqrtps
pop
scas
xorl
push
das
mov
sti
iret
sub
add
sub
jecxz
push
dec
orb
adc
into
stc
ret
data16
inc
mull
push
adc
pop
or
int
push
aam
stos
mov
jl
andb
adcb
data16
shr
lea
pushf
jl
pop
mov
mov
fs
fs
sub
and
cmpsb
and
pop
fcompl
cld
add
and
addr16
icebp
push
mov
sbb
int
pop
test
mov
ficompl
or
inc
pusha
xchg
mov
imul
cltd
or
and
rorb
sbb
cltd
push
mov
adc
dec
ds
outsl
mov
sub
jbe
add
xchg
test
inc
sbb
ja
loop
in
sbb
jb
push
jl
dec
mov
sahf
adc
pushf
push
imul
push
icebp
lea
cli
roll
push
xchg
aaa
aam
inc
mov
arpl
pop
pop
and
pop
repz
or
adc
repnz
push
shr
mov
stc
mov
adc
push
sub
fcom
jmp
inc
mov
jp
cmp
mov
cli
ret
pop
jl
xchg
xor
lods
and
mov
sar
inc
pop
test
mov
lea
pop
push
jp
sub
xchg
cmc
sbb
pop
push
or
sub
xor
jb
lret
insl
jge
stc
add
cli
mov
imul
andl
data16
not
addr16
je
mov
stc
and
pusha
pop
es
mov
sbb
into
ljmp
in
dec
sbb
aam
clc
fsub
cmp
jmp
imul
dec
loopne
call
dec
add
xchg
outsb
mov
shll
in
cmp
push
popf
push
vpaddusb
or
adc
sub
xchg
shrl
cmp
mov
cmovb
mov
lret
loop
sarb
mov
bound
push
sub
push
mov
or
push
scas
sbbb
lds
mov
cmpsb
pop
out
scas
push
ss
mov
stos
fbld
sbb
add
scas
sbb
adc
or
in
in
pop
inc
lds
mov
pop
fbstp
imul
inc
rorl
movsb
ds
cltd
xor
data16
sub
cwtl
test
lea
jecxz
jecxz
and
mov
loop
fdivr
sub
add
faddl
and
loopne
lea
aad
push
aad
cmpsl
repnz
popf
xor
cmp
insl
repnz
lods
outsl
rclb
mov
out
mov
push
lods
jb
stc
out
sub
loopne
stc
scas
addb
notl
or
out
bnd
in
into
dec
jae
test
xlat
jmp
mov
pop
into
adc
or
mov
movsl
inc
cwtl
xchg
add
sbb
and
ds
mov
xchg
jle
push
xchg
not
loop
pop
xchg
insl
repz
movsl
pop
enter
fldt
ja
sbb
scas
aas
push
cli
mov
cmpsb
stc
sub
push
and
xchg
out
fcoms
adcl
jno
in
xchg
cmpps
sarb
aad
mov
jb
cltd
ljmp
insb
repz
xor
outsb
dec
cmpsb
mov
pop
sbb
sub
push
lahf
xchg
cmp
pop
add
aad
or
hlt
inc
inc
add
ljmp
adc
sbb
rcr
ljmp
out
jno
nop
std
scas
push
add
xor
rorb
xor
aaa
mov
shrb
out
jp
mov
lcall
cmp
imul
xchg
filds
inc
and
je
test
lahf
into
mov
out
push
or
sbb
and
jmp
xchg
jnp
fs
add
and
daa
mov
xchg
lock
mov
mov
adc
std
xchg
stc
add
call
mov
push
jno
mov
pop
repnz
pop
inc
pop
sbb
mov
mov
int
sbb
gs
jbe
outsb
mov
loop
call
ss
pop
jg
dec
push
cmp
xchg
repnz
add
sub
stc
jo
dec
pop
and
cmp
xor
mov
sub
or
popf
xchg
push
stc
cs
mov
mov
in
pop
pusha
pop
add
push
call
fisttps
sub
cmp
mov
jg
rorb
or
mov
pop
pop
dec
xchg
fildll
pop
aas
js
mov
fidivrs
fdivrs
shlb
loop
jg
jp
lock
inc
dec
pushf
sbb
bound
mov
ss
and
lods
sub
sub
inc
jo
mov
adc
adc
icebp
jmp
and
and
and
add
xchg
cmpsb
std
and
and
stos
aas
testb
mov
inc
mov
rcr
les
addr16
shr
loopne
leave
xchg
pop
jbe
mov
insl
cmpsl
dec
sbb
fwait
xchg
mov
nop
pop
cltd
cmp
xchg
lret
mov
xchg
test
faddl
jb
mov
je
and
popf
ret
xor
jnp
xor
cmpsl
xlat
dec
frstor
loope
add
mov
pusha
clc
xor
bound
cmpsb
jne
fbstp
clc
notb
fildll
lret
ret
fisubl
stc
test
jne
adc
dec
jo
mov
les
daa
popf
jmp
pop
and
aam
lret
lcall
or
push
bound
or
sub
ljmp
or
insl
jo
pop
out
pop
rorl
push
push
xchg
sarb
push
and
and
push
push
inc
jae
pop
aas
aam
mov
test
push
jmp
stos
js
pusha
arpl
loop
lock
nop
es
or
inc
pop
cltd
ss
dec
mov
mov
sbb
adc
pop
nop
add
test
sbb
push
adc
cli
loopne
xor
push
adc
pop
mov
or
fidivs
mov
inc
stos
xchg
fldl
ss
and
clc
loope
stos
mov
mov
push
jmp
pop
aas
ja
insb
repnz
and
pop
xchg
fldt
pusha
sbb
out
mov
scas
loope
das
rclb
pushaw
aaa
jg
js
cmp
outsb
xor
lret
adc
incb
xchg
test
addb
lea
jl
and
jne
stc
repnz
mov
testb
cld
insb
mov
loop
or
pop
sahf
cmpb
add
aam
or
ss
nop
out
cmp
enter
dec
jb
imul
ret
xlat
xchg
jno
jecxz
xor
inc
scas
loopne
dec
jno
push
sub
jo
mov
mov
lret
pop
ja
mov
dec
sahf
sti
or
pushf
xchg
cmpsl
or
pop
and
adc
out
lret
lea
or
lods
fimull
aaa
dec
stos
sub
sahf
xchg
fdivrl
cmpl
adc
into
sub
xor
xchg
mov
pop
bound
outsb
adc
adc
jecxz
mov
push
adc
and
xchg
xlat
mov
xchg
clc
and
addr16
mov
out
xlat
or
inc
std
movsb
imul
dec
fildl
cmp
movsl
mov
push
mov
pop
push
inc
jle
mov
stc
daa
imul
outsb
lret
and
or
repnz
sbb
mov
or
push
sahf
push
ss
lcall
negl
pop
cltd
stc
sub
push
inc
nop
push
push
ds
das
mov
jmp
inc
jno
bswap
fldt
je
xchg
std
int3
mov
icebp
cmp
jg
stos
jle
add
xchg
int
mov
inc
nop
mov
das
push
enter
out
cmpsl
mov
xchg
call
jb
add
jl
cwtl
jo
ljmp
adc
sub
mov
push
inc
dec
daa
shrl
xchg
mov
outsb
nop
sbb
inc
mov
and
sub
adc
pop
cmp
jb
movb
cmpsl
mov
mov
sbb
xchg
sbb
ret
sbb
shrb
enter
scas
xchg
pop
pop
lret
bound
pop
movl
into
imul
and
cmpsl
inc
rcrb
insb
out
cmp
mov
pop
cltd
pop
push
jne
je
out
lea
pop
loope
jns
orps
or
in
shll
sub
push
xor
test
jmp
cltd
inc
fisubl
clc
nop
pop
test
rcrl
repz
jl
mov
add
cs
in
jbe
push
lds
mov
adc
push
sti
cmp
mov
adc
iret
in
or
faddl
sub
adc
aam
out
inc
sub
loop
jne
add
jne
sbb
in
jmp
or
sub
dec
arpl
loope
xchg
arpl
inc
pop
cmp
jno
rol
in
mov
cli
in
cld
cmpsb
push
es
mov
cmp
lods
rorb
ljmp
ja
and
sbb
inc
inc
mov
pop
scas
sbb
sbb
loop
jb
and
jg
rorb
je
mov
cmp
cs
lret
movsl
cmpsb
aam
outsb
mov
cwtl
int
repz
mov
mov
insl
in
xor
in
mov
sahf
ffreep
add
adc
xchg
test
add
in
imul
dec
sbb
xchg
push
jb
imul
cltd
aad
mov
ss
mov
adc
aam
and
pop
pop
out
rolb
in
pop
outsb
adc
std
fwait
and
mov
cmp
mov
push
aad
test
test
je
sub
xchg
push
aam
mov
push
ljmp
xchg
daa
idivb
dec
jecxz
push
and
mov
divb
pop
and
in
jmp
int
cmp
or
dec
rorb
lods
xor
mov
sti
push
rol
rorb
sti
movb
mov
push
scas
cmpsl
mov
pop
cmpsb
imul
mov
out
leave
push
mov
push
pop
out
lea
pop
sub
and
and
xchg
or
das
mov
cltd
fs
sahf
lahf
xlat
xor
sbb
scas
push
adc
aaa
xchg
out
mov
fwait
mov
mov
xchg
stos
pop
imul
mov
inc
push
inc
mov
jl
orb
ljmp
cwtl
aaa
in
jp
call
pop
xchg
push
adc
mov
shlb
dec
xchg
mov
dec
mov
popa
insl
pop
cwtl
fs
jns
ds
sbb
mov
inc
lcall
inc
enter
jge
jnp
xor
jl
imul
in
mov
js
scas
sub
int3
or
fs
mov
int
ljmp
xor
mov
jmp
cmpl
imul
xchg
andl
fistl
adc
mov
push
sbb
insb
push
sub
loopne
out
in
adc
jno
and
and
out
in
adc
and
and
imul
popf
jnp
sub
std
and
inc
mov
in
mov
xchg
push
cmp
pop
vmovdqu
cmpb
pop
sub
xchg
pop
xor
jbe
icebp
sub
out
popf
repnz
sub
push
bswap
jno
and
cltd
fwait
fwait
mov
jg
test
fimuls
sub
test
push
cmp
pop
inc
sbbb
fisubs
subb
idivb
into
jp
fmuls
xchg
jl
jmp
mov
aas
jmp
cmp
sub
jne
pop
pop
and
test
psadbw
dec
pop
mov
dec
add
sbb
pop
sub
add
fcomps
cltd
sbb
scas
stc
lods
sti
cmp
ja
add
jbe
add
hlt
jecxz
test
xchg
loopne
rcrb
jge
and
mov
mov
in
test
scas
push
int3
push
lcall
imul
and
dec
nop
pop
loop
cmpsl
into
fwait
ljmp
xor
das
mov
pop
mov
push
adc
test
push
addr16
mov
or
shll
dec
fcoms
out
add
and
push
fcompl
ja
inc
xchg
lea
mov
fs
fadds
sub
testl
popf
jg
loop
push
mov
add
mov
sub
and
or
dec
popf
addr16
adc
imulb
ret
push
sbb
into
int3
jg
dec
xor
pop
cmp
loop
pushf
rolb
lret
in
mov
pop
xchg
out
cmc
cwtl
dec
xchg
repz
pop
push
push
add
scas
jge,pn
mov
les
inc
addr16
inc
adc
sahf
mov
adc
movsl
rorl
lahf
clc
mov
out
fsts
and
inc
xchg
cmpb
hlt
cmpsl
mov
jb
out
xor
adc
fwait
mov
or
sbb
ljmp
insb
lods
repz
addr16
out
orb
stos
test
rclb
inc
ror
and
scas
roll
mov
cmp
test
sbb
repnz
push
add
add
insb
xor
mov
popf
das
mov
cmp
fwait
sbb
sub
sbb
and
test
bts
clc
cli
dec
pusha
test
jp
test
or
mov
fidivl
stc
testb
jle
stc
add
mov
cmp
mov
cli
lret
insb
jno
add
cmp
fdecstp
cmc
ficoml
jo
popa
stc
aaa
mov
xchg
inc
xchg
lahf
sbbb
insl
or
cmp
popf
cmovne
mov
rorl
push
xor
xor
xor
js
es
out
xor
lret
push
xor
push
insl
inc
out
dec
cmpsl
ljmp
bound
stos
add
ljmp
or
xchg
enter
stc
pop
loopne
mov
lea
mov
mov
inc
push
std
repnz
push
stc
pop
xor
subb
or
cmp
out
test
out
inc
sti
mov
inc
je
out
iret
pusha
push
and
xchg
faddl
lods
adc
inc
ja
sbb
pushf
jno,pt
outsl
outsl
ja
cmpsb
inc
andl
xchg
pushf
iret
rcll
mov
loop
jno
and
cmp
subb
push
sub
mov
push
add
xchg
and
lahf
mov
add
mov
sbb
sub
and
sub
shr
pop
cli
dec
faddp
cmp
mov
leave
push
jecxz
sbb
dec
out
push
mov
cli
or
ret
mov
sbb
scas
inc
ret
cld
loope
out
movl
pop
je
std
sbb
sub
pushl
sahf
pop
inc
aas
js
cmp
add
inc
and
xor
aas
push
pushf
jb
int3
jae
aas
pushl
xchg
cmc
xlat
in
mov
mov
lcall
sub
pop
inc
mov
lds
mov
lcall
outsb
adc
out
gs
cs
stos
and
jmp
dec
les
rsqrtps
and
or
sub
daa
scas
in
loopne
sub
mov
in
out
test
lret
mov
jge
inc
test
and
jle
cmp
stos
pop
outsb
push
cli
ljmp
out
popa
int3
outsb
ret
outsb
pop
pop
push
jle
fidivl
scas
dec
lcall
scas
fnsave
mov
jle
mov
push
pusha
arpl
pop
std
rolb
mov
mov
test
imul
adc
jo
dec
push
add
fisubl
add
dec
push
jmp
popa
stc
lods
sub
jns
jae
pop
frstor
xchg
or
rcrl
enter
dec
pop
lds
pop
loopne
inc
lock
sub
pop
fbld
loopne
and
mov
scas
outsb
cmpsb
add
or
add
lods
and
push
mov
xlat
ljmp
inc
jno
bound
scas
addr16
and
mov
mov
rcr
add
cmpsb
sub
mov
stc
jge
or
cmpb
sbb
inc
ja
iret
pmuludq
shrl
xchg
idivb
sub
cmp
mov
adc
mov
adcl
dec
or
es
add
sub
je
sarb
pop
jns
inc
sbb
jo
stc
mov
daa
push
xchg
dec
shll
push
sbb
xor
clc
leave
or
and
inc
jle
mov
jg
cld
mov
les
lea
xor
test
jp
je
mov
negl
stos
enter
int3
jns
fisttpll
loopne
sbb
cmpsl
inc
sar
or
je
inc
je
movsl
lret
test
addl
dec
es
xchg
xchg
icebp
sbbb
ret
iret
mov
dec
xor
and
int
push
dec
jg
out
scas
sbb
xchg
add
les
rcrl
fs
pop
mov
int3
lods
sub
in
fistps
not
jae
rep
lahf
fstps
pop
mov
adc
rcrl
fcompl
dec
adc
aaa
mov
stos
jns
sbb
sbb
xchg
lret
push
adc
out
sbb
lcall
lcall
jo
dec
jmp
stos
hlt
mov
or
push
dec
call
adc
cmp
jmp
mov
jge
sarl
dec
xchg
jnp
repz
cmpsb
xor
push
in
movsl
je
inc
fucomip
push
xchg
xchg
std
jge
pop
sbbb
dec
sbb
in
fists
stc
jp
movsl
jnp
int
mov
jle
push
insl
js
in
sti
in
clc
xor
test
pop
pop
push
neg
push
mov
adc
pop
mov
mov
call
aaa
sbb
push
pop
rolb
mov
popa
jno
jmp
mov
das
shll
jmp
decb
popa
cmpsb
js
or
jmp
movl
sub
push
hlt
mov
and
adc
mov
in
out
dec
cmp
dec
shrb
or
pop
sub
shll
ret
mov
nop
mov
adc
hlt
lcall
xchg
scas
rolb
xchg
push
adc
add
lahf
nop
lret
push
enter
es
mov
into
scas
xchg
enter
call
mov
in
inc
int
sbb
push
add
sub
testb
insb
scas
pop
jmp
fwait
xor
outsl
sub
lods
mov
pushf
sti
addr16
jg
fisubrs
lods
fidivs
dec
or
adc
dec
push
loopne
push
and
mov
mov
jle
inc
xlat
fs
sti
jbe
mov
jae
mov
test
scas
and
mov
mov
arpl
push
inc
insl
push
push
mov
or
adc
push
bnd
sbb
adc
cmpsb
outsb
mov
sarl
or
inc
mov
dec
xor
rcrb
and
pop
pop
pusha
add
sbb
mov
adc
cmp
sbb
pop
scas
inc
aaa
add
fucomi
jne
inc
xor
enter
test
sub
push
mov
in
cmp
or
mov
pusha
sahf
pop
xchg
mov
adc
jbe
push
or
enter
mov
subl
jne
jge
inc
ds
cmpb
in
push
sbb
jle
scas
jge
enter
aam
mov
and
repz
push
pop
xchg
fdivs
fsts
add
jns
inc
enter
leave
mov
popa
fisubs
mov
mov
and
push
fcmovu
or
int3
lret
data16
movsb
addr16
and
and
gs
ljmp
push
push
insl
movsb
push
pushl
xor
and
out
sub
jno
into
push
and
mov
xchg
cmpsb
lret
cwtl
pop
mov
mov
mov
rorb
push
mov
sub
mov
inc
repz
popf
div
outsb
out
mov
adc
sti
xor
push
sahf
aas
loope
fs
xchg
sbb
pop
ror
mov
mov
dec
in
pop
in
shrb
xchg
or
ret
cwtl
push
dec
push
in
bound
or
cltd
mov
subl
pop
repz
int3
mov
shrb
aaa
and
in
mov
rcrl
sub
dec
dec
outsb
ja
push
lret
daa
stc
cltd
mov
push
cmpsl
das
add
sahf
insl
stos
inc
mov
inc
rclb
jnp
xchg
inc
test
aas
lret
cld
mov
sbb
lcall
xor
cmp
jmp
outsl
jle
sbb
stc
xor
lods
pop
pop
pop
test
icebp
int3
ljmp
and
shl
call
in
aad
inc
mov
or
push
dec
sub
in
mov
pushf
and
ss
sbb
lods
fstpl
cmp
popf
sub
out
in
and
mov
mov
sub
mov
scas
cmp
xlat
xchg
mov
stc
add
mov
ljmp
push
push
cwtl
xor
push
cmp
rorl
mov
push
cmp
dec
daa
mov
mov
adc
movsb
xchg
imul
fs
test
push
sahf
lret
xor
or
sti
fsts
pusha
fbstp
push
cmpsb
mov
loopne
or
ret
pop
jb
ds
mov
movsl
in
loop
inc
stos
mov
add
testb
icebp
lahf
lock
fcoml
in
push
push
repz
jecxz
xchg
lock
cs
mov
sbb
ss
iret
xchg
pop
xchg
scas
or
pop
addr16
dec
cmp
dec
lds
je
fcoms
or
test
jg
cli
mov
pop
mov
jo
inc
push
adc
mov
cmpsl
in
inc
jle
pop
iret
rep
cs
ror
and
add
pop
pop
in
add
iret
push
call
and
push
xlat
mov
lcall
nop
jl
dec
aam
sbb
mov
jne
xor
in
repz
lods
push
test
lds
mov
xor
scas
addl
lret
pusha
cmp
or
adc
movsl
insb
jecxz
je
stc
mov
data16
ss
mov
lock
sbb
add
call
ror
push
ja
insb
inc
inc
sarl
lods
and
aad
iret
jae
test
adc
push
jb
andb
scas
mov
pop
add
ret
xchg
cmp
shll
and
loop
mov
sbb
pusha
adc
adc
nop
xor
loope
mov
push
scas
mov
jbe
mov
mov
cwtl
xor
fcomps
and
stos
out
jecxz
fisttpl
ljmp
inc
repz
mov
mov
stc
pop
mov
int
jns
cmc
and
inc
xchg
push
sahf
xchg
dec
inc
int3
xor
dec
addr16
jno
enter
and
push
pop
mov
jg
sub
mov
psubusb
push
pop
mov
loope
stc
mov
out
jl
sbb
sub
fadd
xchg
js
pop
add
ljmp
pushf
pushf
jl
push
out
sbb
adc
dec
push
push
inc
out
int3
jae
icebp
mov
lods
cmp
repz
mov
pusha
push
lret
pop
mov
inc
enter
xchg
outsb
scas
mov
icebp
les
mov
xchg
insl
pop
ljmp
or
pop
dec
sub
scas
inc
sarl
addr16
adc
aas
mov
push
and
out
mov
iret
mov
mov
mov
fimuls
jle
icebp
out
xor
and
scas
lock
inc
fists
movsb
fsubp
js
sbb
xor
jnp
mov
mov
inc
jo
cmc
test
add
aam
sbb
cmp
outsl
and
lds
stos
int
or
adc
psignd
xlat
jg
inc
test
pop
out
add
sbb
and
sbb
jae
daa
sub
shrb
das
das
ret
and
and
mov
es
inc
push
shl
mov
xchg
or
mull
clc
mov
xor
sbb
dec
aaa
arpl
and
or
and
cmpsl
xor
icebp
xor
cmp
lcall
in
pop
sub
add
sahf
iret
or
and
into
imul
out
or
repz
psllq
inc
pop
in
std
movsl
dec
mov
loopne
add
mov
jbe
add
int3
xor
pop
mov
pop
push
xchg
stos
dec
push
inc
repz
fidivrl
jno
sahf
and
push
cld
je
out
jno
mov
fnstsw
add
jle
jle
fcmovbe
aam
adc
aam
xor
and
mov
xchg
cmp
adc
mov
imulb
xchg
jl
insl
clc
xchg
hlt
sub
in
mov
mov
test
cmpsb
jg
mov
xchg
inc
in
mov
into
stos
xor
xchg
add
mov
outsl
in
andb
rolb
mov
mov
sub
cld
js
es
fwait
jae
rol
sub
jb
jp
inc
stos
xchg
cwtl
adc
inc
mov
pop
push
je
or
push
aad
cmp
mov
scas
mov
jge
test
cmp
inc
or
inc
imul
icebp
push
std
cmpsl
mov
ljmp
inc
lods
inc
jns
pop
sbb
sub
xor
mov
fcmovnbe
mov
fdivs
jl
mov
mov
xchg
mov
out
mov
sbb
lock
clc
or
shr
sub
inc
icebp
dec
adc
push
dec
or
cmc
push
xchg
mov
pop
aam
xchg
lods
addr16
add
mov
push
fcompl
mov
push
jmp
jo
adc
out
mov
in
inc
insl
inc
cltd
int3
iret
add
aad
js
mov
add
bound
xchg
fwait
or
lds
jmp
xchg
or
std
movl
add
sbb
insl
dec
test
add
add
jmp
and
jp
xor
add
xor
stos
adc
ds
in
pop
ror
lock
or
stos
push
mov
data16
push
cwtl
jno
xchg
stos
mov
cmp
adc
pushf
pop
test
addl
xchg
sti
enter
movsl
adc
ficoms
jnp
sub
push
mov
jnp
mov
mov
fisubs
int3
hlt
subb
xchg
cmp
jo
inc
mov
dec
scas
sbb
dec
mov
xchg
sti
movsb
shl
push
repz
adc
std
or
pop
mov
sbb
cmc
aad
js
cmp
aaa
xor
adc
insl
cmc
sarb
repz
imul
je
sahf
dec
add
loop
mov
out
mov
push
sbb
shrb
insb
jb
cmp
adc
dec
adc
ficompl
roll
clc
cmp
stos
xor
sbb
and
clc
or
xor
je
stc
mov
mov
dec
jl
out
arpl
jno
or
popa
xor
inc
inc
cs
xchg
xor
or
daa
imull
rolb
xor
add
movsl
test
mov
fcmove
xchg
stos
and
sub
pop
rorb
jg
xchg
sub
and
mov
jne
ret
leave
or
fucomi
sub
jae
dec
cmp
stos
sbb
pop
insl
xor
aaa
and
pop
push
andl
aam
loop
or
enter
xor
or
adc
test
push
or
loopne
hlt
into
cmpsb
lcall
inc
pop
into
paddw
out
mov
lock
adc
adc
add
lret
jb
movsl
pop
lret
mov
test
and
repz
mov
test
aaa
js
aam
out
mov
cmp
sti
rclb
xor
fistl
out
iret
loop
pop
inc
cmp
mov
scas
mov
mov
pop
lcall
sti
shrb
cltd
xchg
and
lea
out
clc
fidivs
fsubrl
mov
sahf
dec
ficoml
xchg
adc
pop
pop
test
mov
and
in
push
sub
cmpsl
out
mov
lret
mov
cmp
jns
dec
stc
divb
dec
push
mov
dec
cltd
dec
inc
and
fidivrs
xchg
ficoml
inc
sbb
frstor
shl
dec
outsb
mov
push
aam
add
pop
dec
test
in
rcrl
push
out
mov
nop
int3
inc
ret
mov
jbe
mov
cmp
mov
inc
mov
ficoms
mov
and
or
jp
cmp
in
aad
out
js
iret
jno
and
adcl
pop
loop
dec
pusha
sub
mov
js
rcrb
and
js
sub
aaa
js
mov
xchg
enter
or
in
daa
push
mov
cmp
cmp
mov
sahf
std
fwait
jge
mov
adc
fisttpll
xchg
hlt
jns
and
dec
adc
jbe
mov
repz
or
cmc
cli
test
push
xchg
jbe
flds
sub
lods
mov
into
xor
pop
addr16
aas
dec
cmp
shlb
push
adc
test
cmp
decb
test
into
enter
les
xor
rorb
add
and
fs
push
cmp
icebp
into
fistpl
test
push
jae
daa
adc
bound
nop
imul
adc
gs
or
inc
and
dec
fimull
clc
lahf
in
pop
mov
sbb
insb
xchg
jno
out
or
pop
aam
xorb
xchg
shll
jns
in
lock
cmp
dec
clc
cs
pop
push
arpl
test
andb
test
jb
add
andb
jmp
cmp
sbb
clc
jb
cmp
and
and
inc
cmpsl
mov
call
test
adc
inc
cmp
pop
jno
sbbb
add
cmc
mov
add
fnstcw
aas
ja
lds
pop
inc
mov
lea
sub
jb
or
push
or
sbb
mov
test
cmpsl
or
jge
push
popa
testb
pop
jmp
dec
fstps
dec
inc
stos
bound
shl
sub
test
push
fistps
data16
cmp
or
sarl
es
xlat
out
mov
cltd
adc
pop
dec
loopne
push
stos
xor
divl
popa
cli
scas
mov
popa
out
dec
loopne
mov
push
les
pop
mov
dec
out
loope
fdivrl
arpl
add
push
lcall
icebp
daa
inc
or
adc
ss
scas
imul
inc
loopne
cmp
pop
bsf
lret
loope
scas
int3
sbb
jp
jb
dec
jb
push
cwtl
in
adc
leave
lock
inc
addl
mov
mov
jecxz
pop
push
or
insl
mov
xor
jmp
int3
pop
iret
and
flds
pop
mov
sub
lcall
adc
addr16
inc
pop
sbb
cmpsl
push
scas
cmp
mov
data16
scas
cmp
add
add
xor
popa
mov
adc
mov
scas
jecxz
sub
lret
pop
mov
aad
pusha
inc
pop
les
push
fs
inc
xchg
shll
xor
into
push
add
fisubl
push
push
dec
insl
aaa
mov
rcr
adc
adc
popf
pop
cld
lock
fsub
lret
out
pop
inc
mov
push
mov
xor
movsb
push
fbld
aad
aad
mov
sub
pushf
mov
movsl
sarl
jl
subb
sub
push
sub
jns
imul
sub
dec
push
pop
dec
jnp
xchg
mov
push
dec
mov
mov
test
aas
xchg
popf
jno
push
inc
add
jbe
clc
mov
aas
jnp
ror
pop
shll
das
imul
mov
int3
mov
push
outsl
outsb
scas
fistl
movsb
daa
push
inc
stos
test
xor
xor
pusha
ja
nop
lds
mov
dec
imul
das
jb
and
mov
pop
repnz
mov
mov
in
sbb
pop
jg
int
arpl
mov
test
rcr
xchg
fcomps
dec
jno
cmp
inc
in
movsl
incb
incb
adcb
movsb
in
int3
loopne
aad
and
dec
test
fcomps
jno
adc
dec
scas
in
mov
stos
push
cmpsb
and
test
mov
mov
fstpl
xchg
repz
xlat
sub
mov
cmc
pusha
bound
mull
push
xchg
inc
imul
cmp
jp
fbld
dec
xor
xor
mov
xor
aam
hlt
cmp
bound
and
and
repnz
shrb
pop
iret
loop
les
or
rcll
std
in
cmpl
fmuls
adc
mov
dec
int3
xor
pop
jl
mov
xor
std
sarb
xor
xchg
xchg
ja
pop
loopne
daa
ror
cwtl
cmp
jne
fs
push
and
mov
inc
mov
stos
inc
mul
jae
mov
fucomi
inc
push
sbb
rclb
pop
aaa
fld
fisttpll
jge
mov
dec
dec
stos
pop
or
insb
rcrb
sahf
adc
adc
out
outsl
lods
mov
imul
in
rorl
std
mov
lcall
xchg
dec
push
xchg
xchg
test
outsb
mov
push
lods
mov
sub
orb
cmp
and
and
sahf
dec
xor
xchg
dec
xlat
insl
lret
fdivrs
faddl
shl
int
xchg
or
lret
dec
enter
movsl
pop
pop
cmp
push
fildl
in
sub
xor
jbe
rep
sbbb
outsl
cld
sahf
mov
outsl
lods
mov
ret
mov
mov
lods
xchg
mov
push
mov
lea
out
pusha
add
cmp
push
mov
push
mov
sub
out
fwait
add
xchg
sahf
out
sti
repnz
ss
add
jo
movsl
stos
mov
and
mov
lods
mov
iret
les
xchg
rcll
loope
cwtl
adc
xchg
rorb
daa
mov
popf
test
mov
dec
fdivl
stos
cmpsl
push
push
inc
jge
fstpt
jecxz
inc
imul
inc
packssdw
roll
xor
imul
insl
push
adcl
xor
add
cmp
test
lods
xchg
lds
adc
ss
in
push
insb
nop
xchg
push
call
or
or
dec
inc
mov
xchg
jge
xchg
jmp
adc
jl
jge
fdivs
icebp
sarb
fs
xor
jae
adc
aad
scas
test
rorl
mov
into
xor
ficoms
ljmp
frstpm(287
inc
xchg
cmpsl
lock
sbb
lods
and
add
rcrb
mov
jo
addr16
aam
push
sub
leave
xor
inc
rcl
ss
dec
out
sub
out
xchg
insb
loope
pop
clc
push
cmp
leave
aad
les
fisubl
xor
sub
or
fcmovnb
loop
cwtl
cmp
pop
fs
xor
clc
dec
and
or
cmpsb
stos
das
sbb
pusha
jb
xor
es
test
xor
ret
test
stc
mov
rcr
xchg
xor
sarl
outsl
sub
xor
aam
lret
xor
hlt
fnstsw
sub
mov
int
repnz
jo
push
and
mov
fdivs
xchg
sbb
addb
mov
push
paddsb
sbb
lahf
jo
sub
ret
xchg
fimull
sub
mov
pop
push
xchg
das
lods
push
lods
cmp
lods
out
push
fists
cmp
mov
nop
fstpt
jmp
hlt
mov
idiv
and
push
pop
cltd
dec
mov
jge
pop
mov
inc
pushf
test
rep
int
mov
int3
xchg
jo
lret
pop
cmpsb
and
outsl
and
imul
ss
ficompl
mov
gs
push
lods
jae
jno
add
cmp
into
cld
mov
or
push
aad
xor
cld
mov
mov
movsl
push
je
int
scas
out
push
rorl
lods
lret
cmp
and
xchg
cmp
in
repz
subl
es
xor
mov
movsb
testb
call
jae
adc
fbld
jae
cmc
cld
test
scas
adc
ds
inc
jg
out
test
mov
rcrb
fistpll
ljmp
out
mov
lods
stos
push
js
dec
rcrl
xchg
pushf
mov
rorb
popa
sbb
fstps
lock
and
sbb
push
testb
xchg
repnz
cli
and
xor
out
add
lret
shrl
enter
xor
mov
test
jb
sub
mov
dec
loopne
shl
xor
mov
or
add
popf
sbb
fadds
cwtl
xchg
out
ja
add
jl
sbbl
adc
xchg
mov
out
ret
push
dec
gs
xor
shlb
into
xor
lock
pop
jns
fstps
in
mov
lcall
out
lods
lahf
loope
int
leave
in
scas
dec
cmp
popf
int3
sub
out
cmp
stc
sbb
sub
add
and
adc
add
mov
lahf
test
jbe
pushf
cmpsl
xor
sub
push
jecxz
pop
nop
sub
cmc
pop
and
xor
paddusb
pop
stos
cli
jecxz
or
cld
stc
sbb
sub
xchg
daa
adc
shrl
movsb
nop
outsb
popa
xchg
iret
push
int3
adc
xchg
sub
icebp
push
inc
adc
or
popf
movsl
xchg
cmp
pop
jl
sbb
aam
xor
or
outsl
xor
or
loopne
or
insb
xchg
add
out
jge
pop
dec
gs
dec
lods
push
dec
push
jmp
or
mov
mov
inc
sub
xchg
push
in
inc
xchg
xchg
mov
inc
cmp
mov
or
and
in
mov
pop
addl
fsubs
or
push
movsl
enter
test
pop
cmp
push
xchg
rorb
dec
mov
lcall
jg
jns
push
pop
push
insl
cmp
enter
mov
mov
std
and
sbb
sti
notl
cmp
dec
xchg
jo
sbb
and
pop
lods
rcrb
aam
xor
ror
fstps
adc
in
out
lea
push
cltd
lcall
or
insb
mov
jae
xchg
cmp
stc
icebp
or
repnz
cmpsb
ja
cmpsb
aad
pop
sbb
fwait
pop
xchg
daa
fdivrl
mov
fsub
pop
mov
lret
in
pop
push
in
out
lds
lahf
xchg
jecxz
mov
call
jl
fmulp
mov
xor
movd
nop
jmp
loope
lea
clc
arpl
mov
cltd
xchg
fiaddl
ljmp
xchg
xchg
ljmp
mov
jbe
adc
mov
adc
test
cmp
int3
nop
ret
inc
push
xchg
or
in
call
mov
add
int3
pushf
das
or
repz
enter
pop
inc
dec
dec
flds
lods
cs
inc
mov
dec
and
pop
sub
or
fwait
or
adc
mov
mov
icebp
jne
cwtl
aaa
bound
mov
cmpsl
inc
adc
xor
fcomp
call
shrl
add
je
test
mov
or
push
ss
pop
adc
cmp
dec
fidivrl
cmp
pop
pusha
iret
insb
inc
xor
inc
aas
fwait
in
cmp
sub
nop
loopne
xor
inc
bsf
cltd
jg
mov
shlb
pop
mov
sub
int
mov
xabort
mov
push
jmp
inc
pop
dec
insb
ss
sub
lock
or
jle,pn
xor
movsl
pop
movsb
lods
pop
and
scas
imul
mov
or
insl
xor
lret
and
adc
mov
or
add
jb
jecxz
inc
es
lods
push
out
pop
ret
and
fnsetpm(287
xchg
mov
mov
inc
pop
loop
inc
nop
mov
jb
fidivrs
shl
adc
jmp
mov
cmpsb
cmpb
dec
outsb
shll
or
test
mov
das
dec
push
mov
pop
and
sbb
sub
in
fsubrs
mov
cmpsl
pusha
jmp
test
mov
repnz
call
jae
jae
rol
sbb
xlat
insl
xor
sbb
pop
aaa
es
push
ficomps
scas
xchg
ljmp
arpl
mov
popa
sbbb
scas
lret
mov
jmp
out
out
push
pop
imul
jno
mov
addr16
mov
xchg
xlat
stc
daa
rcrb
test
imul
xchg
cmp
xchg
sahf
aad
pop
mov
sub
add
cmc
push
in
and
cmpsl
push
sar
shrb
fwait
push
sub
xchg
mov
aas
mov
and
rcrb
arpl
lods
sbb
pop
mov
pop
push
mov
int
or
adcl
outsl
jns
or
outsl
xor
cmp
dec
jbe
stos
xchg
div
mov
in
or
fldl
mov
cmpsl
mov
pop
add
or
jne
clc
dec
adc
fstpt
push
mov
ljmp
mov
iret
cmpsb
into
sbb
into
into
or
inc
fucomp
leave
fs
fwait
aad
cmc
scas
fwait
mov
fcmovu
pop
es
mov
loop
outsl
inc
jl
inc
cld
ret
mov
out
gs
in
lahf
fldcw
and
cld
add
mov
lock
push
ljmp
jo
loope
push
and
jb
jle
lock
add
push
mov
sub
xor
leave
test
xor
push
dec
out
or
jae
popa
push
cmp
jge
cmpsl
sti
cwtl
je
jmp
lcall
stc
mov
jmp
sub
repz
mov
sbb
jo
call
dec
sti
sbb
or
aad
xchg
leave
pop
mov
cmpsb
repz
pushf
aam
and
pusha
pop
mov
insl
lea
cmc
mov
push
push
xchg
gs
out
xor
mov
jnp
jecxz
dec
dec
sbb
scas
ljmp
insb
dec
cmpsl
adc
insl
and
cld
sbb
xor
push
data16
push
adc
sbb
mov
add
or
leave
xchg
sti
pushf
or
sbb
scas
cmpsl
lds
xchg
dec
shll
gs
loopne
imulb
insb
pop
adc
add
xor
iret
lods
add
ret
dec
test
pop
pop
sbb
aaa
ja
js
in
dec
incb
lds
lret
xchg
xchg
cwtl
bound
aas
push
push
into
xor
test
stc
fimuls
rorl
mov
shll
jae
cli
mov
call
pop
ficoml
shr
incb
xor
jecxz
pusha
sbb
inc
imul
repz
aad
lods
in
in
jecxz
rolb
idiv
mov
fsubrl
push
dec
and
add
decl
lods
loope
les
xchg
sub
and
pop
inc
inc
out
fs
xchg
push
sub
incl
mov
jle
shll
gs
xor
ss
popf
arpl
jne
push
pusha
mov
dec
or
sub
aaa
cld
aam
xchg
mov
out
adc
stos
xor
cmpsl
stos
mov
insl
frstor
jmp
pop
jl
xlat
outsb
sbb
xchg
sahf
jmp
lahf
shlb
jge
imul
cli
orb
jg
mov
mov
mov
dec
out
sbb
mov
pushf
mov
jecxz
nop
dec
call
pop
mov
push
adcb
sbb
shlb
loopne
popa
sbb
scas
or
fidivl
or
popa
scas
inc
les
add
cmp
cmp
push
or
fsubs
lret
and
lahf
out
dec
jmp
ss
mov
mov
add
sub
or
lahf
adc
xor
add
xor
insb
xchg
mov
pusha
ljmp
decl
mov
filds
cld
mov
xchg
dec
adcb
adc
xchg
fs
mov
sub
sub
stos
ljmp
aas
inc
mov
ret
lods
mov
addr16
add
cmpsb
inc
pop
ds
jle
cmpsl
xor
test
adcl
je
push
lock
pop
cmp
mov
andb
repnz
inc
mov
aas
sahf
push
mov
int
stos
cmpsl
mov
xor
push
mov
ja
push
repz
in
lcall
or
imul
jbe
dec
mov
cmp
cli
arpl
data16
cmpsb
add
int3
inc
sub
add
mov
loope
mov
jecxz
pop
lret
scas
xchg
es
push
mov
jno
hlt
ret
notb
arpl
mov
dec
test
dec
dec
or
xchg
iret
rcr
push
imul
insl
jb
xor
in
inc
dec
mov
inc
mov
or
mov
test
ss
cmp
mov
int3
je
cmp
fdivrs
lods
xchg
negb
mov
gs
lock
lahf
insl
fistpll
pusha
pop
les
cmpsb
sbb
cmp
push
xchg
popa
mov
pop
add
aam
das
cmp
mov
push
pop
jecxz
mov
xorb
ret
inc
inc
or
cmp
daa
dec
incl
out
cmpsb
sahf
push
std
call
mov
xchg
cmp
int
mov
sub
inc
jecxz
arpl
mov
mov
out
cltd
jecxz
adc
rcr
push
xchg
push
xchg
xchg
cmp
inc
pop
lret
loope
or
outsl
sub
daa
sbb
scas
in
ds
sub
test
test
int
call
lcall
stos
repz
and
mov
mov
and
mov
mov
mov
pop
sub
cmpsl
ja
push
cs
xor
pop
das
jle
xor
popf
mov
in
push
push
push
jb
pop
out
pop
fstl
dec
aam
pop
xor
fmuls
sub
dec
out
enter
inc
ret
add
mov
pop
stos
mov
shll
repnz
loop
sbb
xor
cld
call
xor
int3
jns
stc
into
jge
and
cwtl
add
and
es
aam
jb
pop
and
mov
insb
jnp
pop
push
pusha
stos
in
jbe
jo
ja
stos
xchg
out
clc
mov
sar
cld
fimull
iret
data16
push
jle
cvtps2pi
adc
push
incl
inc
mov
movsb
in
fsubr
imul
push
or
push
pop
mov
out
shll
cmp
cwtl
cld
fsubl
outsl
cs
pop
cltd
out
xor
push
es
test
les
mov
push
mov
or
pop
mov
jle
inc
or
mov
fs
lahf
mov
xchg
adc
mov
mov
test
aas
lock
lods
xchg
pop
ljmp
jl
imul
xchg
outsl
mov
shll
outsb
fcoms
dec
scas
mov
inc
cmp
not
frstor
add
mov
stos
insb
outsl
fldt
push
ds
dec
push
xor
movsl
sbb
jae
aaa
mov
sub
fwait
push
inc
test
sbb
inc
mov
mov
add
test
addb
mov
fdivp
jp
dec
add
sbb
inc
add
aam
int
test
ja
lods
aas
sbb
shll
push
fildll
scas
fbld
addl
rorb
leave
rolb
dec
lret
cmovbe
pop
jb
mov
add
mov
pushf
sub
inc
ror
cmpsb
push
adc
push
dec
shl
mov
dec
xor
xlat
xchg
and
stos
mov
test
lret
clc
into
test
int3
out
mov
dec
test
push
pop
add
xorl
rorl
mov
xorb
addr16
xor
mov
nop
movsb
lret
mov
loope
mov
sub
cli
popf
js
stc
or
mov
jae
sbb
push
push
dec
rorb
pushf
cmc
push
or
sub
loop
dec
lahf
test
jne
arpl
add
jle
pop
jmp
cmp
cltd
insl
psllw
adc
xchg
add
mov
mov
gs
mov
iret
out
stc
dec
mov
jl
xor
or
fdiv
cmpsb
inc
movsb
sub
adc
add
cmp
mov
in
rcrb
cmp
outsb
jge
inc
movsb
js
int3
push
inc
and
and
fistps
insl
jns
cmc
sub
xor
xchg
mov
mov
sti
pusha
adc
inc
mov
xor
popf
addr16
in
in
adcl
out
iret
std
cli
or
rolb
arpl
adc
call
lret
dec
jge
pusha
aad
decl
hlt
sti
ljmp
in
call
jecxz
mov
adc
imul
xchg
loop
imul
test
cmp
lahf
mov
xor
add
les
mov
je
ljmp
push
inc
in
test
sub
mov
push
loopne
rorb
orl
xor
iret
pushf
push
mov
cmp
dec
sbb
into
xchg
pop
mov
stc
out
xor
pusha
loopne
mov
mul
or
ret
mov
pusha
cmc
std
push
dec
push
add
mov
xor
repz
sub
mov
mov
dec
cld
xchg
push
pushf
push
jno
dec
test
stc
shll
popa
xchg
or
cmp
mov
dec
cmp
jns
sysret
jl
sbb
dec
push
lock
shrb
negb
mov
iret
inc
stos
out
rcrb
jbe
lea
mulb
notl
cmp
dec
ds
ds
and
xchg
pcmpeqd
imull
sbb
mov
sbb
lea
add
insl
stc
sbb
mov
in
jecxz
push
mov
fisubrs
lock
in
xchg
add
clc
cwtl
jge
loopne
mov
scas
in
mov
mov
sub
in
rorl
push
mov
adc
mov
jmp
icebp
repnz
daa
cmp
ljmp
stos
push
mov
ja
dec
cltd
mov
adc
setl
xor
dec
in
stos
scas
xor
xchg
jecxz
jno
mov
out
dec
jle
jnp
out
aad
cwtl
push
ds
loop
ror
xchg
sbb
mov
fbstp
rorb
mov
sub
dec
addr16
out
ret
xchg
sub
aad
pop
ss
clc
mov
mov
sbb
das
js
subl
xchg
inc
sbb
and
dec
dec
fadd
in
fcomps
adc
orb
sub
popl
lock
movsb
jle
mov
les
sbb
pop
cmp
out
add
dec
gs
cld
loope
add
sbb
pop
scas
push
jg
aad
js
add
or
xchg
cmp
out
leave
and
insl
mov
dec
pusha
cmp
xor
jp
lods
mov
sub
loopne
mov
jg
pop
jmp
sahf
in
xor
loop
xchg
or
xchg
std
fucomp
aam
pusha
out
pop
cltd
repz
insb
xor
push
and
arpl
gs
ret
scas
jecxz
or
int3
mov
cs
aaa
pop
push
loopne
dec
pop
iret
les
sbb
sub
into
je
and
pusha
cmc
fmul
add
lea
into
popf
pop
xchg
xchg
stos
or
sbb
jne
data16
sub
xor
inc
pop
push
mov
and
daa
pushf
shll
fstps
add
pop
push
push
mov
push
xchg
fadds
push
sbbb
push
cmpb
sahf
xchg
fldcw
sub
push
push
movsl
dec
sub
leave
loop
or
or
addl
pop
push
jns
jno
push
mov
fimuls
stc
pop
mov
cmp
ret
out
adc
call
pop
int3
mov
aad
xchg
outsb
adc
test
lock
daa
scas
inc
mul
push
cmpsb
js
pop
pushf
mov
push
mov
push
repnz
dec
in
lods
test
gs
lret
dec
pop
sub
fsubr
aaa
mov
and
sub
mov
fcmovne
mov
push
mov
cs
or
jmp
mov
sar
in
movsb
sbb
add
push
rcl
sbb
pop
leave
push
js
push
leave
js
rcrb
shll
aaa
mov
ficoms
pop
repz
sbb
test
add
jge
jae
pop
xor
fs
mov
mov
cwtl
leave
std
dec
cmp
sti
push
icebp
adc
xor
mov
data16
sub
dec
in
aam
push
rclb
jmp
aad
outsb
mov
lcall
cmp
mov
jle
push
pause
inc
rcll
aad
rcl
inc
fldcw
outsl
ret
inc
test
add
dec
ret
sbb
repnz
push
or
inc
sub
jb
cmpsb
mov
cmp
dec
loop
in
adc
xlat
filds
jo
cmp
dec
inc
inc
adc
pop
inc
mov
ficoms
int
andb
jo
sub
xchg
mov
int
pop
aaa
xchg
sbb
in
fdivrs
jo
push
add
rcrl
inc
inc
push
imul
repz
repnz
jne
push
in
loope
add
sub
ja
cmpsl
int3
xchg
jne
cmp
fsubl
push
push
lea
lahf
mov
out
call
xchg
sti
into
sti
mov
adc
push
pop
or
call
inc
leave
pop
iret
fcomi
repnz
mov
jns
loopne
int3
fdivr
iret
adc
xor
push
jp
in
dec
sahf
in
test
mov
stos
cmp
insb
sbb
aam
cli
leave
sub
xchg
movsb
ja
das
divb
inc
lret
stos
fwait
xor
jl
ret
movsb
dec
daa
lret
add
stc
daa
fcompl
pop
out
into
sub
mov
popa
xorl
xchg
jp
xchg
pop
int
int
daa
push
xchg
pop
xchg
xor
sarl
adcl
divl
jle
lods
xor
inc
push
popf
xchg
fnsave
mov
adc
cmc
in
inc
insb
jnp
icebp
arpl
mov
out
xor
dec
xchg
push
xchg
sub
or
aas
push
pop
xchg
in
inc
adc
cmp
rcll
cltd
repz
sub
sub
and
pop
push
pop
push
jle
push
mov
aas
and
pop
jg
lods
inc
adc
leave
test
sbb
jle
lods
and
push
pop
cmp
dec
sti
mov
movsb
adc
pop
es
xchg
mov
add
push
sub
jle
call
xchg
insl
jecxz
repz
fdivs
adc
into
sahf
mov
xchg
mov
shl
mov
ja
pop
pop
mov
sub
jns
inc
test
sub
test
xchg
cmp
push
pusha
pushf
inc
lock
loopne
jb
sbb
ret
mov
xor
out
or
sub
lcall
and
mov
adc
mov
outsb
pop
fidivrs
mov
fistps
mov
out
stos
or
rclb
fwait
push
lock
jne
cmp
scas
xor
dec
pushf
xorl
fsub
gs
xlat
mov
dec
test
mov
fs
pop
adc
xchg
fistl
mov
imul
xchg
cmp
or
nop
aam
push
cmp
or
clc
std
mov
add
lahf
mov
cli
pop
lea
push
inc
jmp
dec
xchg
cltd
add
push
gs
sbb
stos
int
pusha
fcompl
inc
push
inc
cmp
cmc
ret
sbb
jmp
imul
fsubs
adc
pop
in
pop
loop
std
pusha
cmp
or
lea
pop
dec
bound
lret
int3
aam
and
pop
aam
push
in
add
sahf
in
mov
mov
mov
les
test
mov
adc
inc
cwtl
mov
cmp
jno
sti
sbb
jg
sbbl
mov
xor
dec
jmp
cs
movsb
imul
xchg
mov
lods
jae
pop
lahf
int3
mov
pop
mov
call
inc
and
push
cld
jle
ss
in
pop
xchg
test
xchg
nop
and
inc
fs
jp
jne
push
push
shrb
push
pop
xchg
mov
sub
outsb
or
lods
mov
add
std
sub
in
mov
mov
es
mov
dec
lcall
into
jno
test
mov
enter
int
jae
xchg
mov
or
lcall
fstps
cmp
roll
jge
movsl
push
sub
or
lods
repnz
and
dec
and
bnd
sub
rclb
inc
rcl
fs
xchg
pop
inc
xchg
pop
mov
xor
cltd
add
enter
cmp
mov
js
ss
bound
jns
outsb
xor
jae
cmp
jo
cmp
movsb
sbb
es
movsl
lock
jnp
sbb
cmpsb
dec
mov
pop
test
adc
or
cmpsb
jge
mov
add
xchg
shrb
xchg
clc
mov
jp
cmp
in
imul
or
jb
inc
sub
fcoms
fwait
cwtl
sbb
and
or
cmpsl
insl
data16
mov
xchg
jns
cmp
dec
out
pop
imul
cltd
andb
or
insb
sub
mov
push
and
in
jg
cmp
cmpsl
pop
stc
cmpsb
dec
stc
aaa
mov
cmpsb
test
add
imul
xchg
insl
add
add
hlt
jb
nop
pop
fsubrl
cmp
addr16
mov
adc
add
add
dec
mov
and
pop
mov
lods
push
push
push
push
xchg
sub
cmp
rclb
fisttps
insb
push
je
push
mov
sub
lcall
mov
sub
push
adc
sub
jb
xchg
outsb
or
fisubrl
test
imul
sub
adc
adc
aaa
jmp
pop
jae
rcr
fsubrl
mov
or
xor
fwait
pop
or
mov
inc
xor
and
lahf
dec
cmp
je
lcall
push
decl
insl
fmuls
pop
mov
dec
insl
push
xchg
sbb
push
ljmp
cld
enter
xor
jp
sarl
iret
pop
push
jg
pushf
aad
notl
mov
dec
fistps
sub
inc
sbb
lds
stos
aas
lcall
lcall
mov
pop
dec
scas
push
jmp
adc
mov
or
fnstsw
popa
test
inc
aam
pop
repnz
jo
addb
fidivrl
lods
stos
shrl
mov
mov
lea
mov
dec
repnz
fwait
repnz
outsl
xchg
test
call
adc
mov
adcb
fs
scas
aad
movsb
pop
mov
lcall
push
jnp
repz
xor
fisttpl
mov
in
fldl
lret
mov
ss
sbb
mov
push
xchg
out
pop
cmp
jecxz
test
addr16
mov
mov
sbb
sbb
cli
mov
mov
ljmp
aaa
lret
popf
xchg
lret
sbb
jg
ljmp
repz
popa
push
stos
mov
int
ficoml
stc
repnz
insb
pop
and
lret
shlb
mov
lods
xchg
test
scas
and
or
sbb
lea
mov
push
mov
enter
push
xchg
mov
cmp
push
inc
push
push
ljmp
js
mov
cmpsb
pop
add
cltd
fsts
aad
or
daa
xchg
test
movsb
jae
imul
jp
dec
insb
popa
or
insl
push
and
sub
add
mov
push
loope
sbbl
rcrb
into
add
dec
or
popa
mov
insl
jae
fs
xchg
dec
addb
in
cld
inc
mov
in
mov
je
loope
mov
lcall
and
sub
lahf
cmpsl
push
leave
cmpb
and
push
mov
or
mov
outsb
or
divb
incb
mov
jmp
popa
adc
pop
lret
push
mov
push
out
cltd
shl
or
in
xchg
fsubl
jmp
inc
sahf
out
xor
mov
jae
arpl
adc
leave
mov
fiadds
mov
add
gs
adc
fwait
add
jne
adc
test
inc
xor
jp
pop
mov
push
out
push
aad
push
xor
hlt
lods
ret
mov
daa
mov
mov
mov
scas
rcll
dec
cmp
fildl
and
or
enter
lods
les
dec
sub
push
jns
jl
repz
pop
stc
fstps
scas
pop
repnz
inc
dec
push
loop
leave
fxch
pop
adc
fwait
inc
scas
lcall
orb
inc
push
test
cwtl
iret
mov
mov
mov
repnz
pushf
jecxz
pop
push
or
daa
pop
and
imul
jecxz
cmp
and
sarl
xchg
in
out
pusha
rclb
cmpsl
pusha
mov
jmp
inc
js
and
xlat
aaa
and
decl
push
aad
xchg
stos
lahf
loopne
push
mov
cmp
pop
inc
add
mov
fdivl
mov
aad
cmc
pop
and
xor
pop
xchg
lahf
inc
mov
sub
adc
or
pop
lret
xchg
js
mov
sbb
push
cmp
andl
js
test
scas
mov
mov
stos
xor
bound
push
aam
dec
xor
add
mov
mov
and
je
rcr
aas
push
fildl
movsb
movsl
lahf
in
repz
sbb
jecxz
add
mov
lds
cmpsb
mov
lock
hlt
daa
inc
mov
dec
cmpsb
stos
and
inc
mov
jo
loopne
es
adc
cmp
in
fwait
pop
jl,pn
push
cmovg
sbb
push
cmp
sub
movsb
out
ljmp
cmp
fsub
sti
aas
stos
les
xchg
jge
ret
fstps
jmp
movsl
int3
push
out
scas
stos
ss
xor
out
movsl
cmp
into
fstpl
or
jbe
mov
xchg
jae
pop
scas
sub
out
fucomi
icebp
pusha
cmp
addr16
push
mov
movsl
inc
negl
dec
mov
mov
and
and
cmp
fwait
stos
mov
repz
pop
lret
push
cltd
jbe
push
in
cmpsl
or
ds
and
mov
adc
and
lea
lods
sub
fs
adc
or
xchg
arpl
mov
lret
scas
mov
pusha
xor
fldl
push
inc
jecxz
mov
inc
out
xorb
push
or
jb
fmull
ds
lods
mov
pop
mov
rolb
xor
inc
sbb
imull
mov
outsb
addr16
xlat
mov
xor
and
mov
popa
fildll
inc
rcll
popa
or
shl
xorl
mov
jo
xchg
xchg
mov
mov
stc
out
push
test
and
inc
mov
ret
mov
inc
mov
stc
xor
cmp
xor
dec
dec
adc
xchg
jle
cmp
pusha
mov
push
sbb
inc
inc
cmc
loop
and
cmp
or
test
or
mov
push
js
pop
add
int3
fildl
dec
jg
cmp
push
addr16
dec
les
stos
inc
shlb
xchg
imul
pop
and
int3
mov
jb
sbb
fidivl
popa
mov
and
mov
cmp
or
lret
or
inc
jg
pop
mov
aaa
push
movsl
pop
add
xchg
jb
jo
or
lcall
dec
mov
mov
mov
aas
sbb
rcrl
dec
cmp
iret
stos
imul
mov
pusha
aad
repz
xlat
xchg
fs
sbb
cwtl
adc
cld
xlat
xor
repnz
sub
movsb
lcall
lret
scas
jnp
aas
test
lock
lret
repnz
pop
aaa
or
test
lea
cmp
jecxz
adc
in
daa
push
pop
shrb
stos
cmp
imull
push
fcoml
sbb
daa
out
jp
int3
pop
outsl
and
mov
xchg
inc
cmp
lods
stc
cmp
arpl
sbbl
loope
cs
lds
pop
cmp
jbe
inc
fsubrs
jmp
push
faddl
fs
and
cmp
fmull
rorl
ljmp
test
xor
fstcw
add
cli
xchg
movsl
pop
fbld
data16
jae
mov
les
jp
lret
subb
adc
or
jns
xchg
and
jae
push
xchg
dec
into
mov
lds
popf
test
jo
popf
nop
cmp
imul
xor
pop
adc
lret
xchg
add
pop
cmc
out
stc
sub
push
pop
mov
cmp
add
ljmp
mov
add
adc
mov
pop
mov
mov
push
cltd
scas
lds
mov
fiadds
icebp
jnp
cs
ret
sub
movsb
lret
add
xor
andl
xor
mov
jb
dec
add
fbld
push
push
jns
sub
jmp
leave
push
in
out
lds
pushf
pop
mov
mov
cs
or
lods
arpl
or
xchg
arpl
sarl
cmp
das
insl
incl
sbb
mov
push
xor
stos
scas
adc
pop
pop
outsl
shlb
lock
clc
dec
loop
cltd
lret
pop
xchg
push
sub
inc
testb
push
scas
imul
add
ja
cmp
jp
bound
pop
xor
test
mov
jge
shll
mov
fbstp
loope
in
cmp
rcl
push
jmp
mov
fldl
lock
fidivrs
jp
pop
std
sbb
pushf
js
mov
push
sbb
add
inc
sub
push
push
sbb
ss
loopne
mov
and
jp
xchg
movsl
pop
fucom
pushf
les
jg
aam
and
cld
pop
ror
shl
sub
loope
add
pop
fsub
inc
sub
push
int
dec
das
icebp
pop
pop
lahf
arpl
fdivrl
lret
popa
mov
cmpsb
int3
enter
xor
cmovne
jle
out
out
js
arpl
dec
cli
inc
inc
mov
arpl
lods
sahf
xchg
sbb
cs
fwait
mov
push
in
and
lret
out
scas
cld
fdivl
xchg
lcall
sbb
int3
outsl
jg
std
adc
stos
test
or
inc
and
fsubrp
sbb
adc
jno
sbb
pusha
jb
push
ret
pushf
sahf
adc
xchg
adc
or
aaa
loop
loopne
jge
xchg
or
xchg
mov
add
or
in
rcrb
push
xorb
fiaddl
test
jmp
mov
mov
jb
push
pop
push
push
xor
iret
mov
pushf
pop
adc
add
pop
cmp
in
sub
popa
sbb
sub
cli
mov
das
or
and
mov
lcall
js
or
mulb
add
xchg
jp
sbb
push
xchg
mov
shll
inc
lock
or
cmp
loope
mov
jae
inc
jae
mov
or
xlat
mov
xlat
jle
mov
popa
int
dec
loope
insl
cli
ret
xchg
mov
lcall
daa
ret
add
stos
cmp
pop
scas
pop
fwait
push
cmpsb
pop
mov
pop
jb
je
add
mov
test
popa
enter
inc
sbb
xchg
mov
mov
sub
jnp
lret
dec
add
insb
ds
bound
push
fsts
inc
mov
movsl
mov
add
popf
sbb
push
xchg
add
pop
xchg
hlt
mov
pushf
adc
cmp
int
bound
lds
stc
mov
jl
cltd
cmpsb
sbb
mov
jbe
inc
aad
call
adc
dec
bound
dec
mov
adc
movsb
stos
mov
icebp
mov
movsb
jl
pop
lret
pop
out
js
ss
mov
in
jge
mov
in
dec
and
or
cmp
pop
out
lock
sub
pop
jns
popa
jp
xchg
lret
in
cmp
mov
les
push
icebp
xlat
aas
pop
test
jl
popa
addr16
push
jno
mov
jmp
adc
fildl
aaa
inc
add
inc
leave
mov
out
sbb
xchg
jnp
lahf
adc
mov
mov
in
aas
movsl
stos
xchg
xchg
jmp
mov
add
sbb
test
popa
neg
xor
jne
adc
rol
movb
dec
lret
jl
mov
mov
addb
xor
inc
stos
add
dec
rcll
fdivrs
lods
mov
jg
jne
dec
mov
inc
mov
rorl
mov
std
xchg
daa
add
dec
iret
jmp
daa
rcll
loop
imul
ljmp
insb
push
out
inc
xor
fldcw
mov
bound
jl
ljmp
mov
mov
insb
sbbl
mov
scas
xchg
mov
pop
leave
cmp
xor
daa
inc
arpl
or
data16
nop
cmc
inc
xor
rolb
push
adc
lahf
push
dec
add
pushf
or
fcoml
mov
mov
mov
fdivrs
push
push
dec
loop
sbb
adc
mov
push
movsl
out
pop
push
cld
popa
movsb
push
jecxz
xor
mov
add
into
aam
fisttpl
ljmp
aas
mov
jno
loop
repnz
mov
jns
outsb
outsb
shl
xchg
icebp
mov
out
or
adc
pop
mov
add
jbe
icebp
pop
cmp
jg
movsl
arpl
repz
push
loope
mov
push
lods
rorb
rcrl
cli
je
ds
jecxz
push
hlt
hlt
cwtl
mov
fcomi
subb
xchg
mov
pop
mov
cmpsl
mov
cld
inc
dec
lret
shrl
dec
cmp
aas
xlat
xlat
stos
or
xor
aam
dec
add
stc
loope
ds
jmp
sub
jl
imul
mov
cmp
sbb
pop
dec
dec
sub
lret
stc
jp
push
push
mov
pop
mov
dec
loope
stc
xchg
mov
mov
jp
mov
scas
adc
mov
pop
imul
or
mov
popa
inc
outsb
mov
mov
mov
inc
in
xor
mov
xor
std
in
xchg
test
dec
mov
daa
lods
push
test
aas
mov
jmp
das
xor
push
leave
sti
shll
into
gs
jl
inc
aad
sbb
aam
sbb
sub
aam
out
jl
dec
lods
cwtl
shll
test
in
add
ljmp
fisubl
push
cwtl
inc
rcll
pop
inc
xchg
mov
adc
rclb
push
arpl
adc
jb
movsl
cmpsl
stos
cli
in
inc
mov
out
ficomps
cmp
ja
inc
sbb
sub
aad
movsb
stos
mov
dec
lods
sahf
push
pop
cmc
imul
js
xor
pop
mov
mov
sbb
inc
addr16
repnz
jl
add
rcll
loop
mov
sub
jbe
mov
rcrb
xchg
mov
dec
dec
cmp
xor
outsb
jmp
mov
pop
test
mov
jg
push
movsb
out
sbb
in
or
fisttpll
jne
test
adcl
xchg
cmp
and
ret
bound
call
sub
cmp
cmp
fwait
rorl
mov
call
outsl
jmp
mov
cmp
xor
xchg
in
or
fwait
xlat
sti
mov
cmp
xchg
mov
pop
lcall
pop
inc
xor
out
addr16
pop
push
das
add
sarl
dec
jge
inc
mov
adc
jns
ret
adc
adc
lea
add
cmpsl
cli
adc
cs
push
xchg
cli
or
push
data16
cmp
dec
mov
adc
cmp
cld
add
push
sbb
xor
cmp
pop
cmpsl
sub
aad
mov
imul
cmpl
insb
pop
push
dec
dec
or
mov
in
out
xchg
xchg
mov
outsl
mov
dec
imul
cmpsb
dec
sbb
fnstenv
out
test
jns
out
or
sub
pop
jbe
in
mov
xor
andb
mov
jg
popa
jne
repz
adc
popf
mov
push
inc
fcomps
inc
xchg
stc
add
and
popf
mov
in
ja
in
cld
arpl
push
gs
mov
imul
xchg
cli
sub
stos
outsl
in
fldcw
std
int3
lcall
fwait
mov
fsubl
lcall
setne
or
arpl
adc
int
aaa
push
arpl
pop
mov
dec
iret
lods
lret
fidivrs
clc
daa
lea
pusha
sbb
push
cli
pop
lcall
movsb
mov
lret
cli
das
fcoml
fnstsw
add
fwait
scas
sbb
push
jl
inc
or
xchg
mov
mov
test
dec
pop
jl
sub
out
push
inc
jle
sbb
push
cwtl
pusha
movsl
and
in
dec
add
lahf
cmp
mov
mov
adc
loopne,pt
out
mov
jne
xchg
jo
dec
int3
xlat
xorl
or
xor
cmovns
aaa
mov
insl
inc
ret
scas
je
mov
jle
negb
lret
sbb
dec
dec
test
orl
adc
jle
cltd
pop
test
scas
xchg
stc
nop
inc
inc
icebp
cmp
inc
shlb
inc
jle
clc
insl
mov
xchg
incl
cld
push
sbb
loope
pop
push
or
aam
add
ret
loope
push
push
adc
rolb
mov
daa
call
das
xchg
mov
stos
adc
popf
sbb
arpl
cmpsb
inc
mov
test
fstl
je
cli
jnp
sub
inc
xchg
inc
mov
arpl
mov
sub
mov
aaa
gs
cltd
cmp
cmc
xor
sbb
jmp
sub
adc
and
enter
lock
inc
subl
shll
sbb
test
xchg
cmpsl
xchg
push
add
stc
push
mov
inc
push
lret
xor
lret
cmpsb
adc
sub
xchg
fdivrl
in
cld
loop
jne
pusha
sub
jns
fisubrs
aam
lock
mov
jne
clc
and
xchg
insb
xor
cmp
imul
dec
stc
test
pop
cmpsb
or
dec
into
mov
sbb
bound
mov
push
sbb
sahf
fstpl
inc
jmp
xor
clc
mov
inc
test
and
inc
add
jo
jnp
jnp
xchg
imul
filds
xor
das
push
dec
jb
inc
repz
xchg
pop
shrb
gs
movsl
fdivl
adc
or
add
jo
and
push
or
aam
push
mov
mov
cmp
jge
pushl
push
or
lods
push
sbb
mov
icebp
in
lahf
popf
ss
sbb
pop
ja
push
xor
aas
out
xchg
adc
push
in
out
in
fcompl
xchg
mov
pop
test
pop
xor
push
cmp
daa
and
jecxz
test
mov
cmp
adc
lea
jg
rolb
and
sbb
sub
mov
xor
sbb
cmp
pop
pop
dec
push
sbb
sub
nop
dec
ljmp
aad
lahf
aas
jbe
mov
outsl
jbe
inc
imul
insl
pop
sub
mov
push
and
rcr
push
xchg
cmp
pop
cmp
aad
inc
out
ret
xor
in
sahf
adc
pop
ret
stos
jmp
nop
jecxz
jge
addr16
cmp
sbb
sarl
lret
fsqrt
in
inc
jg
das
int3
mov
fadds
icebp
jge
jp
loope
and
mov
jge
pop
xor
ljmp
fidivl
xor
mov
sbb
ret
jb
jmp
mov
mov
fwait
sbb
inc
xor
pop
out
fcoml
jb
adc
ds
jns
insb
sub
int
and
jne
xadd
push
xchg
imull
movsl
rcl
fs
mov
in
jno
cmp
adc
mov
stos
sbb
int3
cmp
test
xlat
daa
popa
jle
cmp
cmpsb
inc
arpl
in
and
mov
stc
sahf
inc
rolb
pop
push
ja
dec
lcall
cltd
aas
mov
bound
cli
xor
loop
repz
dec
push
cmp
mov
mov
xchg
pmullw
cmpsl
dec
xchg
pop
les
js
jne
add
stos
mov
pop
sbb
xor
xchg
out
mov
inc
xor
in
xchg
mov
insl
inc
jg
repnz
fdivl
aam
cmp
mov
ret
mov
push
repz
insb
sbb
adcb
or
sarl
scas
outsb
cmp
ss
pop
lcall
sbb
cmp
xor
mov
push
fstpl
insl
fwait
jmp
jl
or
addr16
shl
in
movsb
push
divb
xchg
scas
push
pushf
pop
scas
test
ljmp
push
xchg
push
and
fwait
mov
cmp
pop
mov
scas
jmp
xchg
pop
jle
lret
iret
pop
leave
in
adc
mov
adcl
js
sub
add
mov
clc
adc
mov
shlb
in
mov
jg
cmp
ds
mov
pop
aad
adc
fisttps
sti
cmp
fwait
adc
stos
scas
aad
pop
aas
lock
sbb
jae
sbb
je
dec
add
rol
pop
jo
jg
std
jne
cmp
sahf
push
inc
sbb
inc
jo
pop
xchg
fcoml
xor
xlat
pop
enter
sbb
pop
dec
inc
stos
dec
stos
fbstp
nop
adc
out
add
or
imul
cmp
inc
fwait
add
mov
dec
cmp
sbb
inc
mov
repz
mov
jae
cmp
aas
add
mov
sub
out
jg
xorl
and
cmp
mov
insl
mov
repz
mov
mov
mov
inc
out
std
test
loop
lahf
arpl
test
adc
dec
jecxz
mov
jo
xchg
lcall
cmp
mov
std
inc
test
in
addb
xor
lods
gs
push
imul
sbb
mov
aam
daa
fs
sub
sub
pop
push
mov
lds
les
dec
cmp
ja
popa
push
hlt
in
jecxz
mov
dec
push
out
lahf
pop
notb
das
data16
sub
dec
mov
xchg
pop
sub
pop
ds
fcoms
xchg
jp
sbb
imul
mov
dec
sbb
popa
faddl
xor
jne
popa
push
mov
add
fsubs
je
xchg
sbb
or
ret
mov
or
sub
jmp
aad
lock
push
pop
cmpsb
cld
xor
shr
xchg
rcr
aad
leave
outsb
ja
inc
xchg
cmp
xchg
lcall
in
cld
out
adc
addr16
sub
mov
xor
push
aad
js
jmp
add
into
nop
popa
adc
pusha
dec
in
popf
stos
lock
mov
nop
xor
ret
mov
or
cmp
push
hlt
push
pop
adc
or
cltd
aaa
in
and
xchg
mov
scas
mov
or
negl
xor
je
sahf
adc
xchg
gs
fcomi
je
mov
jmp
stc
subl
pop
sub
sahf
push
sub
push
sub
pop
lret
jge
out
or
outsb
ja
cltd
xor
jg
cmp
enter
xor
and
adc
jg
repnz
fwait
stc
jne
inc
and
scas
xor
xor
sbb
xor
xor
inc
or
inc
outsl
xor
iret
or
test
mov
fdivr
mov
test
sbb
adcl
inc
ljmp
inc
and
mov
mov
popa
inc
xchg
shll
aaa
invd
hlt
ud1
dec
das
inc
test
nop
leave
lock
movsl
mov
mov
xchg
mov
lds
sbbb
xchg
jae
andl
jle
push
pop
shl
sub
mov
aas
dec
lock
or
loopne
cmpb
xor
arpl
insl
mov
and
dec
fstpl
mov
mov
mov
sub
mov
fnstenv
inc
imul
movsl
pop
int
fidivs
mov
fsubr
pop
shrl
push
jge
repnz
filds
in
ljmp
jnp
stc
pop
xchg
xor
jmp
aas
xor
adc
jmp
insb
mov
and
mov
lcall
movaps
addr16
xlat
cmp
pop
cmpsb
sbb
loope
popa
adc
jle
ljmp
stos
pop
pop
lea
insb
dec
jns
xchg
mov
test
ljmp
adc
jg
movsb
enter
inc
out
insb
enter
in
jmp
fmuls
adc
cmpsb
pop
pusha
bound
lea
jmp
mov
jno
test
add
push
sub
popa
mov
add
iret
sbb
and
jl
dec
in
adc
dec
or
dec
mov
push
mov
sbb
fdivl
rep
test
gs
bound
test
cmp
mov
lods
clc
mov
mov
xchg
adcl
mov
mov
lock
mov
sbb
mov
int
sbb
or
dec
adc
lcall
mov
test
mov
dec
test
mov
sahf
jle
pop
fbld
mov
mov
clc
and
cmp
xlat
arpl
xchg
and
xchg
and
int3
mov
add
or
sub
dec
cmpsb
cmp
fsubr
jbe
decl
jbe
mov
mov
dec
or
jmp
dec
jmp
arpl
push
mov
test
sbb
sahf
daa
xor
adc
mov
add
dec
dec
popa
ds
movsl
call
enter
jmp
fs
or
aam
aam
icebp
lods
inc
and
mov
cltd
pushf
xor
push
jge
ret
mov
scas
scas
sbb
sbb
sahf
js
push
enter
sub
loop
xchg
or
inc
or
test
icebp
cmpsl
adc
outsb
pop
lret
and
shr
cmp
cwtl
sub
gs
pop
and
mov
add
std
sub
test
ds
lods
push
push
and
dec
inc
mov
xchg
add
in
pop
and
xchg
lahf
stc
decl
ja
pop
mov
jp
stc
fmull
sub
lea
jno
mov
pop
xor
dec
pop
xor
jecxz
cmp
add
sub
ljmp
idivb
mov
xchg
mov
sbb
add
mov
or
or
sahf
out
outsl
lret
fsubrs
xchg
lret
inc
inc
add
sahf
shlb
jmp
shll
cmp
and
cmpsl
in
mov
or
cltd
stos
add
lea
mul
fdivrs
mov
cmp
or
jnp
cwtl
jmp
pop
mov
repnz
out
dec
pusha
test
mov
and
lcall
das
lock
mov
into
sbb
in
mov
push
aas
inc
lret
mov
ljmp
xorl
dec
sbb
ret
into
push
bound
shll
imul
in
jg
add
jbe
xor
insl
dec
inc
or
xor
mov
roll
lret
inc
hlt
xchg
mov
pushf
dec
push
add
ret
pushf
clc
xlat
in
fs
cmpl
jp
test
rcr
fcmove
and
add
adc
adc
pop
subl
and
mov
fimuls
fisubs
dec
mov
stc
rorb
es
pop
aaa
les
or
clc
das
cmp
lods
pop
mov
enter
push
cmpsl
cmpsl
push
jbe
enter
jbe
fstpl
inc
clc
jnp
daa
test
dec
mov
lcall
pop
fwait
das
mov
push
cli
or
cmp
fimuls
xchg
push
pop
lods
mov
aas
cmp
nop
jo
cltd
add
push
sti
icebp
lods
dec
and
or
clc
and
jb
pop
lods
jl
shl
pusha
popa
adc
leave
jp
cmpsl
inc
lea
push
mov
les
jbe
fstpt
shrl
cmp
movsb
mov
orl
mov
adc
dec
repnz
imull
jne
adc
push
scas
cmp
test
cmp
or
call
lods
insb
cmp
cmp
dec
xlat
fildl
jns
jnp
lea
out
xlat
add
roll
cmp
mov
cmp
dec
jb
inc
pop
insb
mov
test
sub
mov
add
out
pop
pop
push
sbb
movsb
pop
inc
sbb
or
mov
xorl
jle
pop
test
ljmp
imul
idivb
sahf
loope
xchg
or
arpl
mov
cmc
pushf
jge
mov
adc
aaa
fwait
sub
leave
add
or
outsl
xor
pop
les
jmp
pop
stos
out
setp
push
test
mov
or
test
lods
add
pop
pusha
ss
cmp
negl
inc
or
dec
arpl
mov
mov
or
fsubrs
mov
pop
adc
mov
and
ficoms
push
jo
ja
ljmp
addl
pop
insb
mov
repnz
sbb
push
orb
sbb
sbb
sbb
mov
mov
inc
in
daa
xchg
cmp
push
pop
mov
cmp
pop
icebp
mov
test
jne
out
dec
push
pop
int3
addr16
xor
arpl
orl
xor
mov
cmpsb
lods
add
bound
das
jle
xchg
sbb
cmpsb
add
mov
xchg
mov
addr16
mov
jmp
push
ret
lahf
or
das
sub
sahf
jecxz
fnstsw
mov
repz
jle
add
mov
test
stc
fcoms
lea
dec
js
insb
adc
fists
cmp
add
add
mov
mov
in
xor
cli
arpl
sub
jb
outsl
sub
inc
jmp
dec
jbe
sti
mov
xor
push
pop
cmp
mov
adc
xchg
fnsave
ret
jecxz
scas
xchg
lahf
test
push
jg
sub
sub
loopne
js
dec
dec
fwait
xor
aaa
jg
xchg
pop
or
dec
and
stos
sahf
lahf
sub
push
repnz
dec
push
jae
ljmp
dec
and
push
in
cltd
test
mov
imul
aad
sub
outsl
push
loopne
mov
add
mov
jp
mov
ds
outsl
js
sub
movsl
add
int
popa
xor
dec
movsl
xor
mov
mov
addr16
and
xchg
jge
xchg
loopne
addr16
or
in
adc
stos
dec
std
fists
and
mov
xorb
sub
into
lds
daa
in
arpl
addl
and
insl
add
ja
loop
inc
inc
dec
mov
loope
notl
xchg
push
iret
clc
jnp
cmc
add
xchg
repnz
sbb
xor
xchg
jbe
jne
sub
push
test
dec
push
cwtl
jns
dec
push
dec
call
adc
ret
and
insl
inc
pop
pushf
je
cmpsb
lret
mov
mov
sbb
ret
jge
add
or
daa
in
movsl
sbb
and
int
xlat
daa
lds
stc
sbb
push
push
jo
stos
in
ret
mov
xchg
jmp
pusha
es
or
xchg
sbb
enter
mov
in
ljmp
push
imul
mov
adc
push
in
jle
or
js
subl
pop
cmpl
insb
jecxz
jge
mov
mov
shrb
pushw
addl
sub
mov
in
test
sbb
push
lcall
push
aam
lahf
mov
js
adc
pusha
popf
lods
and
ror
jbe
push
test
in
addr16
mov
jg
sbb
mov
mov
sbb
push
ffree
jecxz
mov
mov
pop
mov
fisubrs
mov
push
inc
fnstsw
xor
push
inc
xor
mov
in
or
sub
pop
jp
les
andb
and
jl
xchg
lea
fldcw
std
outsl
stos
or
scas
loop
cld
lahf
ljmp
sub
aam
imul
or
push
push
das
pop
in
mov
cmp
push
in
lcall
cmp
lds
iret
pop
fwait
xor
push
and
test
data16
jnp
mov
int3
repz
mov
cmpsl
int
sub
cwtl
out
mov
or
mov
jecxz
mov
fmull
push
iret
leave
adc
xor
cmp
emms
ds
mov
and
out
dec
sbb
mov
cwtl
cmpsb
mov
sbb
ja
popl
mov
mov
test
mov
push
jge
inc
test
ret
cltd
pop
lds
inc
inc
xchg
popa
push
sti
mov
cld
nop
lods
lock
mov
mov
or
sub
mov
sub
out
xlat
push
dec
enter
cltd
pop
mov
movsl
mov
cmp
jge
inc
cmc
push
shrl
mov
mov
mov
mov
test
mov
addb
push
mov
pop
push
cmp
pop
mov
mov
icebp
mov
in
inc
stos
jecxz
lods
jno
lds
xchg
pop
stos
dec
xchg
inc
ds
mov
mov
pop
mul
int3
icebp
mov
int3
sahf
sub
adc
shlb
fisubs
ds
pop
aaa
or
inc
adc
or
cmpsl
jmp
sbb
int
lret
clc
stc
inc
loop
jae
mov
fistl
adc
lds
jp
jae
ficomps
loopne
adc
inc
addl
faddl
loop
push
ja
push
inc
movsb
shll
pop
sbbb
sub
cmpsl
addr16
test
adc
out
lret
fwait
push
leave
pop
ds
imul
scas
add
sbb
add
mov
jne
pop
add
jae
lds
addr16
xchg
sahf
fildll
in
mov
cmp
aam
out
in
mov
out
pop
sarl
mov
push
enter
adc
leave
test
adc
jnp
movsl
ret
inc
dec
push
mov
cli
push
mov
adc
and
js
fadd
xchg
push
in
cli
in
lahf
stc
fisubrl
test
xor
fisubrl
jae
imul
inc
jo
mov
lock
and
lea
cmc
out
js
push
cmp
pusha
adc
mov
pop
pop
cmpsl
and
mov
int
push
xchg
and
adc
xor
movsb
pop
dec
adc
add
les
enter
and
clc
imull
add
sahf
gs
std
scas
mov
aam
mov
dec
cmc
pop
dec
stos
xor
mov
adc
xchg
emms
lahf
adc
mov
gs
mov
shlb
lea
int
ds
aas
sub
inc
pushf
mov
cmp
int3
inc
jno
in
enter
fldenv
pop
mov
xlat
mov
xlat
push
dec
mov
pusha
push
xchg
adc
dec
cmc
or
call
inc
sti
inc
stos
lret
xchg
inc
sbb
daa
sbb
xchg
in
mov
mov
in
aad
xor
in
cwtl
jge
aaa
cli
or
cwtl
in
push
xchg
fnstcw
fisubrl
cmc
dec
cmc
add
sbb
sbb
or
sbb
jb
dec
jbe
dec
rcrb
leave
dec
mulb
stos
dec
mov
sub
sbbb
cmp
pop
jne
mov
cmc
ljmp
stos
ror
dec
mov
or
arpl
jnp
repz
adc
add
adc
adc
outsl
ds
popa
push
shll
and
dec
push
lret
ljmp
rorl
mov
test
andl
jg
mov
pop
cmp
repnz
inc
enter
pop
xchg
test
mov
and
aas
or
insl
enter
in
add
push
rcll
dec
add
lret
mov
mov
jne
dec
push
pop
jnp
dec
jae
cmp
lods
frstor
shrb
cwtl
stos
mov
mov
add
mov
mov
push
mov
enter
add
dec
shl
dec
mov
pop
push
clc
inc
mov
into
das
push
mov
push
dec
lcall
mov
xchg
fsubrl
push
shll
sbb
sub
or
inc
xor
xor
push
mov
push
add
mov
cmc
mov
add
pop
mov
arpl
ret
xchg
fisttps
stc
sbb
mov
sbb
andb
lds
jl
or
repz
adcb
push
mov
mov
or
mov
adc
ret
sbb
xchg
dec
mov
cld
bnd
mov
lods
pop
push
push
and
xor
cwtl
sub
jns
push
fsubl
push
mov
push
xchg
sub
das
dec
fs
imul
mov
xchg
xchg
sarl
mov
sub
repz
mov
add
lods
imul
sub
mov
jle
pop
imul
js
mov
mov
xlat
out
gs
outsl
icebp
mov
adc
xor
roll
fistpl
into
cltd
loop
cmp
loope
lahf
out
fiadds
imul
jl
loop
mov
repnz
popf
popa
jg
testb
fnstenv
lea
lret
mov
push
cmpsb
sbb
test
sub
in
lret
dec
or
fcmovbe
repnz
sbb
and
inc
mov
aam
or
pop
outsb
rcrl
adc
out
ror
xchg
insl
ret
in
mov
pushf
imul
addr16
scas
pop
stos
jge
jg
out
xlat
popl
jae
js
inc
push
cmpsb
lret
dec
pushf
test
mov
in
adc
lcall
out
mov
rol
loop
mov
lret
ds
das
inc
xchg
stos
mov
fisubrs
inc
pop
inc
bound
arpl
movsl
iret
jmp
pop
xchg
out
lds
jns
push
push
ret
dec
jge
sub
adc
pop
xor
std
jns
ja
je
test
push
inc
shrl
push
pop
scas
popf
pusha
lock
lods
lahf
aaa
fstps
cmp
movb
add
xchg
rorb
fldcw
fistpl
xor
sahf
add
fmul
inc
adc
and
sub
mov
pop
jbe
ret
xor
mov
outsl
repz
jge
rorl
rcrl
or
and
add
add
rcr
xchg
lods
inc
xchg
sbb
jb
mov
dec
jae
jg
jle
fdivl
test
inc
es
test
sbbb
dec
add
cmpsl
add
sti
add
sub
daa
jo
sub
orb
jge
mov
pop
and
sbb
inc
stos
push
and
repnz
push
arpl
dec
pop
adc
mov
jae
push
imul
lret
jp
jne
add
insb
jmp
xchg
jb
add
xor
call
es
inc
leave
loopne
mov
aad
cld
loopne
mov
movsb
es
mov
jne
adc
cmc
mov
dec
mov
dec
push
sub
lcall
notl
push
xchg
pop
push
icebp
filds
xchg
add
inc
fistpll
xor
ret
fucomi
xchg
push
adc
stos
insb
into
cmpsb
dec
repnz
lret
nop
movsl
push
sbbl
je
pop
inc
add
adc
push
cltd
stos
es
dec
shlb
negb
icebp
imul
arpl
push
orl
adc
dec
xchg
sub
aas
ja
push
in
lock
mov
fcoms
ret
subb
icebp
mov
jns
test
inc
ret
in
out
push
adc
mov
jo
pop
out
data16
fldl
pop
xor
aam
stc
inc
or
xchg
sbb
cmp
add
fucomi
mov
xchg
mov
test
push
addr16
jno
imul
mov
mov
xor
lret
sbb
mov
jmp
mov
pop
xor
ja
jmp
cmp
loope
jbe
xor
jmp
cs
aaa
jns
fcomi
xchg
inc
pushf
push
mov
jbe
dec
lret
ljmp
inc
iret
xor
stos
shrl
pop
scas
mov
pushf
lock
insl
ljmp
outsl
add
out
loop
setno
cmpsl
cmp
push
mov
dec
ret
les
repnz
lods
or
std
cmp
in
adc
mov
cli
jl
ljmp
mov
sbb
fstpt
data16
cwtl
push
popa
inc
mov
ljmp
imul
adc
test
repnz
xchg
mov
or
imul
adc
inc
xchg
push
or
loopne
aam
push
addr16
dec
loop
xchg
inc
es
xchg
movsl
lret
mov
mov
rclb
cmpsb
pop
cmp
or
int
mov
xor
mov
push
call
pop
scas
pop
or
subb
int
pop
push
cmp
jecxz
push
push
inc
xchg
bound
stc
jo
mov
cmpsl
cmpsl
js
repz
jnp
dec
pop
pop
mov
ret
add
sbb
inc
adc
xchg
dec
sub
sub
dec
roll
sti
lods
out
dec
mov
mov
or
je
mov
sbb
push
add
jb
add
imul
in
jae
cmp
adcl
dec
inc
and
nop
movsl
xchg
mov
mov
xor
mov
andb
outsl
mov
cmpsb
in
mov
int3
push
mov
inc
xchg
inc
mov
outsb
das
fists
in
shrl
jecxz
es
cmp
fcomps
add
mov
lds
int3
cmpsb
mov
push
insl
out
fcompl
in
and
scas
dec
jp
mov
arpl
jno
mov
xchg
cmp
data16
or
jae
add
movsb
sbb
std
ficoms
mov
testb
shll
inc
inc
fiadds
shll
rorb
bound
les
out
inc
sub
push
cwtl
mov
clc
sub
jl
sti
daa
mov
xor
pusha
add
ljmp
add
out
mov
mov
sbb
lods
jo
adc
lods
push
gs
fidivs
mov
fs
mov
xor
jae
call
push
fiaddl
push
adc
push
xor
sub
inc
cmp
iret
arpl
ret
push
inc
test
out
cwtl
pushf
cltd
popa
cmpsb
sti
data16
sarb
and
xchg
inc
mov
faddl
add
mov
mov
sub
sti
or
int
sub
inc
imul
pmaddwd
mov
dec
and
jmp
cmp
mov
flds
shr
mov
test
push
outsb
push
and
addl
in
fs
inc
push
or
sbbl
enter
test
je
loop
shlb
jle
cmp
adc
jl
mov
xchg
test
data16
in
jno
or
js
daa
jne
jge
aad
daa
pop
shrb
cli
mov
out
sahf
push
jo
sub
xchg
sub
jecxz
fsubs
xor
lcall
lds
ss
pop
xchg
push
jbe
add
and
in
loope
cmp
or
mov
lods
adc
xchg
inc
adc
ja
and
ret
gs
xchg
in
jmp
mov
mov
xchg
or
dec
mov
sub
pop
pop
std
insb
adc
sbb
scas
loope
jl
jmp
push
aaa
jg
xor
jl
xchg
sub
js
repnz
ljmp
ret
outsb
jns
ret
xchg
leave
jp
or
popf
fucomp
inc
int
dec
xchg
xor
movsb
jo
imul
ja
pusha
lds
leave
sahf
jnp
inc
sbb
xor
fstps
adc
sbb
jno
and
in
lea
dec
iret
ja
lods
and
cmpsl
pop
lret
add
stos
sbb
and
aam
sbb
es
mov
out
stos
imul
aaa
jecxz
mov
xor
int3
xchg
xor
jle
push
mov
cmp
sbb
shlb
mov
pop
or
pop
sub
scas
pop
or
push
xchg
insl
repz
shlb
xchg
cmc
add
mov
xchg
mov
adc
das
and
negb
push
xchg
pop
test
push
push
popf
shrb
out
xor
clc
sub
es
stos
aam
shrb
push
xchg
fidivs
sbb
fisubrs
push
out
ja
inc
fstpt
lea
xor
pop
mov
mov
rclb
rcrb
or
xchg
dec
fwait
aaa
jns
outsb
inc
adc
xor
insl
aad
cs
pop
mov
mov
stos
adc
cmp
xor
and
mov
ret
xor
jae
lret
sub
sbbb
sbb
fstp
cwtl
in
mov
mov
inc
and
inc
pop
inc
xor
and
cmc
inc
mov
shlb
shrl
xor
imul
jge
sarb
ja
fcoms
jnp
cmp
stos
xchg
mov
inc
insl
inc
push
vpternlogq
sbb
jecxz
js
and
loop
lods
aaa
xchg
mov
movsl
cli
dec
inc
xor
xchg
lods
mov
stos
scas
cmc
sbb
xorb
add
test
cmpsl
push
lret
inc
xor
dec
or
nop
std
mov
or
aaa
mov
or
xchg
mov
sbb
or
je
or
xchg
xor
lods
fdivr
dec
dec
sub
xor
test
pop
in
enter
mov
mov
inc
dec
hlt
push
movsl
xchg
inc
nop
jns
and
in
add
nop
divl
iret
or
lret
or
pop
xchg
mov
pop
sub
push
pop
outsl
sbb
out
hlt
or
pop
dec
sub
repnz
mov
es
cwtl
or
jmp
in
in
and
jne
scas
and
cmpsb
jecxz
jg
mov
es
jns
push
insb
loope
sub
sti
stc
mov
in
cmp
shll
jbe
imul
lret
mov
lods
iret
jae
mov
xchg
js
hlt
sahf
xchg
lret
xor
and
sbb
xchg
out
jbe
pop
ja
loop
ljmp
jg
adc
dec
mov
mov
mov
es
push
repnz
stos
shlb
inc
and
dec
xlat
jbe
or
sti
movsb
aas
push
aam
jmp
in
mov
dec
repz
les
mov
mov
rdmsr
pop
idivl
std
loopne
mov
pusha
or
popa
jmp
ret
sub
mov
xorb
xchg
and
arpl
jl
popl
cmp
ss
int
mov
dec
add
hlt
xor
jno
cld
sub
add
bound
xchg
cmc
xor
rolb
inc
jle
mov
mov
iret
mov
sahf
jnp
push
out
and
inc
pop
stos
fidivs
lret
mov
mov
sub
mov
data16
in
aam
and
into
mov
mov
cmc
push
inc
adc
es
xorb
ss
popa
lahf
pusha
call
lahf
xor
xchg
lret
dec
xchg
xor
sub
imul
in
lods
pushf
mov
aam
inc
movsb
xchg
add
pop
xor
pushf
cmp
andl
inc
shlb
cmp
loop
sbb
sub
sub
out
pop
call
sarl
clc
xor
cmp
jb
push
gs
mov
int
push
repnz
subl
dec
das
and
cmp
cs
sub
addb
insl
jg
movsb
stc
push
inc
mov
insb
add
adcl
jnp
xor
rorl
add
xchg
fwait
xlat
inc
mov
mov
and
sahf
inc
aad
daa
push
add
add
pusha
fdivp
pusha
mov
jae
or
add
sub
daa
cmp
fs
or
sub
mov
adc
mov
js
inc
test
shlb
insb
cmpsb
inc
pop
ja
mov
add
out
fnsave
dec
pop
jle
scas
mull
mulb
test
lret
and
stc
cltd
mov
add
sub
in
pusha
pop
aas
out
aam
lret
mov
sub
mul
jne
cmp
pop
fldenv
xchg
insl
pop
js
popf
pop
ss
inc
pusha
std
xor
mov
mov
mov
popa
adcl
sbb
push
imul
in
or
lock
sti
fnstsw
idiv
pusha
test
push
cmp
outsb
daa
lret
dec
movsb
push
xor
pop
and
cld
inc
divb
dec
hlt
mov
or
scas
rolb
push
push
inc
hlt
dec
icebp
sar
aaa
add
jb
test
das
stos
adc
dec
test
pusha
fldt
hlt
daa
adc
mov
push
stc
dec
mov
add
adc
shr
pop
outsl
inc
int3
roll
sbb
lock
fimuls
pop
mov
movsl
and
js
leave
leave
xlat
add
shll
stc
inc
sub
xchg
pop
pop
popf
jns
pusha
test
in
sub
xor
jp
push
lahf
pop
jp
sub
ret
movsl
jns
cmpsl
stc
jge
adc
xor
push
cmp
xlat
xchg
mov
dec
stos
adc
push
jnp
jne
imul
call
iret
sub
inc
sti
jl
enter
xchg
add
mov
add
xchg
mov
fwait
lcall
pop
cmp
dec
push
int3
scas
dec
mov
out
or
xorl
repnz
cltd
push
shlb
mov
out
sbbb
jno
addr16
and
xor
insb
xchg
andl
or
xor
mov
out
sar
push
into
rcl
fistps
jnp
hlt
mov
push
outsw
std
je
notl
int3
xchg
adc
adc
jmp
lds
in
pop
outsl
mov
dec
mov
int
push
or
adc
jp
cmpsb
adc
fisubrl
mov
lret
sti
pop
inc
sub
addr16
lcall
call
nop
xor
or
int3
repnz
sbb
pop
pop
xchg
push
add
fwait
mov
sub
xor
fidivrl
ljmp
in
xchg
repnz
jle
mov
push
fdiv
call
fisubs
mov
insl
push
and
mov
adc
shll
rcrl
sbb
popa
adcl
inc
mov
jne
fsubrs
popl
adc
cld
mov
incb
sbb
mov
movsb
jg
shll
cmp
add
rcl
or
mov
adc
leave
pop
lods
loope
scas
inc
ret
sbbb
flds
hlt
dec
test
sbb
cmpsl
js
into
dec
push
jge
sbb
lock
data16
pushf
cltd
orl
pushf
sbb
and
pop
xchg
test
aaa
fdivrs
insb
mov
movsb
scas
cmpsl
sti
xor
jmp
cmp
ss
pop
mov
shlb
add
fsubl
sub
outsl
outsb
xchg
adc
sbb
aas
add
and
inc
pusha
fs
pop
fsubrl
nop
js
sbb
outsl
test
fldt
outsl
data16
xor
movsb
nop
repnz
mov
inc
leave
clc
lds
lret
push
dec
test
gs
pop
lcall
add
mov
xor
dec
sbb
cwtl
or
out
in
lods
mov
sbb
cld
or
jne
pop
mov
dec
add
add
adc
sub
sbb
inc
jle
leave
inc
adcb
jb
add
les
mov
aam
imul
dec
xchg
test
add
mov
pop
mov
mov
xchg
lods
test
mov
hlt
imul
or
xchg
daa
inc
stc
ret
enter
push
mov
js
or
and
bound
sti
mov
pop
les
jp
rclb
jmp
cmp
lahf
xchg
loope
push
aad
inc
pushf
lods
loopne
stc
iret
nop
cmp
ljmp
test
pop
dec
rcrb
or
mov
mov
int3
jge
jnp
jle
sbb
jmp
pop
push
sbb
scas
and
lds
add
ja
repz
jo
mov
adc
cmp
es
std
loope
cltd
stc
inc
out
adc
xor
mov
out
pushf
dec
icebp
ds
aas
notb
mov
sbb
cmpb
or
mov
inc
es
test
sub
int3
imul
inc
rolb
inc
cmp
or
xchg
adc
dec
test
sarl
jmp
clc
inc
sbb
aaa
add
pop
or
add
into
push
test
jg
cli
lcall
push
add
movb
lock
fbstp
or
xlat
xchg
scas
rclb
inc
dec
xor
mov
leave
or
sub
fdivs
mov
aam
cld
jae
fs
jae
adc
mov
and
mulb
cmp
jns
outsl
repnz
fs
xlat
in
leave
outsb
cmp
xchg
fmulp
sbb
aam
jae
adc
jbe
int
rol
pop
push
into
loope
mov
add
jmp
push
shlb
out
mov
or
dec
test
mov
mov
mov
fisubs
pop
dec
shl
pop
pop
int
mov
mov
mov
sub
inc
ret
xchg
fists
lcall
inc
cmp
or
jl
pop
dec
sub
push
stc
mov
pushf
push
jae
addr16
lods
xor
inc
jmp
jb
lods
shlb
lret
imul
add
pop
and
add
mov
push
sahf
mov
sbbl
mov
ret
push
lret
stos
fldl
pop
add
push
fstpt
popa
and
xchg
in
imul
mov
mov
pop
sbb
int
das
add
mov
lods
es
and
paddusw
cwtl
iret
imul
xchg
add
stc
in
lahf
jb
or
iret
mov
xchg
mov
xchg
out
fisubl
jo
pop
cmp
mov
mov
fisubrs
lcall
inc
dec
dec
or
add
jns
imul
sbb
mov
xchg
cmp
cmp
mov
xor
test
mov
cli
cmp
scas
ja
loopne
push
iret
mov
pusha
and
xor
cltd
mov
aad
out
push
inc
jge
repz
mov
jle
mov
xchg
dec
out
add
mov
adc
xchg
jmp
lret
pop
xchg
subb
or
jp
push
ds
out
xor
mov
movsl
mov
cmp
shll
cmp
adc
lea
adc
fs
mov
adc
lock
sahf
divb
in
add
loopne
mov
jb
jne
or
mov
add
outsl
in
or
fsts
roll
adc
and
pop
ffreep
mov
sahf
add
inc
lahf
adc
fisubrl
sbb
or
mov
int3
fcmovu
shrb
pushf
xchg
fidivrs
mov
push
jle
fstpl
aaa
fldl
xor
shr
inc
popa
lret
mov
insl
fmull
fmul
mov
push
fcoml
adc
push
xchg
test
aam
sub
jge
sub
and
inc
cld
mov
sub
xchg
rcrl
scas
lret
fsts
out
xchg
add
scas
outsl
ds
arpl
shrb
mov
jge
movsb
dec
add
mov
add
xchg
ds
stos
xor
sbb
aam
adc
mov
adc
pop
loop
dec
movsl
inc
xchg
inc
jnp
mov
into
or
loop
fdivrp
popa
rorb
mov
lds
das
fcompl
out
iret
ja
mov
sbb
xor
push
shrl
lea
test
fnstenv
sbbb
loopne
jnp
sub
and
jo
pop
xchg
sbb
mov
in
mov
icebp
clc
xchg
popf
jl
push
pop
and
jle
in
or
mov
outsb
dec
fadd
cmp
push
pop
dec
add
or
rcrl
fwait
insb
cmp
out
std
or
test
mov
imul
add
inc
cs
sbb
notb
out
insb
push
lea
mov
sub
hlt
mov
mov
daa
pop
cmp
lahf
sbb
imul
dec
lods
jne
insl
out
shll
in
mov
fmuls
dec
adc
cwtl
xor
push
mov
jnp
xor
out
arpl
out
sbb
or
sbb
jnp
insb
inc
inc
xchg
mov
sub
repz
lods
jns
imul
dec
jns
and
lcall
push
data16
clc
icebp
scas
loop
fdivrl
jnp
sub
mov
gs
xor
and
cltd
pop
mov
in
mov
jbe
adc
lret
jns
jle
push
mov
adc
mov
test
jns
jne
hlt
push
mov
mov
stos
into
aam
stos
rclb
mov
test
mov
xor
dec
jp
mov
ret
add
adc
movsb
out
aaa
stos
aaa
sti
fs
push
and
mov
and
pop
cmp
imul
mov
test
pop
test
in
cld
shlb
sti
mov
adc
call
test
pop
mov
pop
outsl
mov
inc
inc
dec
cmp
mov
jecxz
stc
sahf
sbb
jne
push
mov
loop
in
repz
stc
xabort
rorl
aam
out
pop
mov
andl
das
sub
xlat
lods
gs
sub
mov
fnsave
fisubrl
int
cwtl
push
pop
mov
gs
lahf
add
imull
fninit
cs
cwtl
cmp
into
add
sub
xor
shl
daa
add
mov
cmp
jmp
mov
and
mov
push
pushf
mov
stos
jae
sbb
fwait
ss
stos
in
adc
scas
sahf
scas
xchg
xor
out
mov
repz
add
xchg
fistl
repnz
nopl
nop
fmull
inc
je
and
add
andl
cmp
push
push
xchg
sub
add
push
insl
adc
mov
adc
sti
and
mov
xchg
cmp
sub
push
or
pushf
inc
loop
int3
mov
scas
jp
sub
push
pop
cwtl
pop
jmp
loop
pop
push
arpl
movsl
mov
ret
fidivrs
test
pop
push
push
rorb
add
mov
push
js
ret
or
jge
jbe
sbb
lahf
jl
adc
cmpsb
popa
or
fnstenv
cli
lods
mov
nop
test
enter
into
xor
sbb
cmp
fldt
push
xchg
xor
jmp
adc
mov
ffree
jne
andb
add
popa
mov
std
les
movsb
cli
test
push
sti
or
mov
mov
pop
push
ja
fsubs
inc
push
pop
push
xor
fwait
mov
xchg
mov
mov
fnsave
push
test
lcall
sub
pop
ljmp
xor
xlat
pop
xor
sub
mov
or
lods
rcll
rorb
addb
cmpsb
test
sub
adc
outsl
pop
arpl
mov
in
jg
dec
mov
negb
or
or
fldz
jg
cmp
dec
xchg
mov
xchg
cmpsb
call
sbb
das
lret
jp
insl
aad
int
xor
insl
mov
outsb
out
daa
cmpsl
das
inc
mul
pop
into
xor
rorb
test
xchg
loopne
out
data16
cmp
das
push
cmp
or
repz
enter
cmpsl
mov
jnp
mov
pop
rol
and
scas
inc
hlt
mov
sti
enter
inc
cmp
fdivrs
add
mov
jne
mov
add
xchg
ss
sbb
or
add
pop
jae
addr16
push
in
and
xchg
into
push
aaa
xor
je
sarb
and
and
fidivrl
ret
aas
pop
out
hlt
aas
jmp
mov
cmp
popa
sub
lds
push
out
and
addr16
dec
push
add
arpl
imul
pop
jg
mov
movmskps
sbb
les
aam
gs
mov
adc
cmp
sub
xchg
loope
mov
imul
xchg
fs
and
push
dec
mov
movsb
xchg
movsl
cmp
or
jno
test
push
lds
push
bound
jbe
imul
test
lret
inc
xor
push
fisubrl
sub
cmp
es
clc
mov
sbb
push
mov
test
push
pop
sti
pushf
or
into
cli
scas
xor
xor
xchg
xchg
jae
pop
pop
cld
icebp
push
dec
xchg
mov
mov
incl
add
popf
jecxz
ss
subl
mov
ret
pop
sub
jnp
adc
sbb
int3
inc
aas
pop
pop
shll
rcrl
add
inc
insb
mov
mov
fwait
mov
stc
imul
nop
pushf
int3
fwait
sahf
lcall
outsb
fistps
sbb
dec
sahf
int3
lret
fwait
and
xchg
mov
aas
and
and
lock
setl
frstor
aad
stc
lock
xor
loope
sub
dec
jl
test
mov
bound
and
xor
or
inc
push
sbb
cmp
scas
xor
dec
lcall
mov
test
mov
or
bnd
xor
fucomp
rorb
xchg
lods
repnz
es
mov
movsl
or
clc
or
xchg
jno
jmp
stos
dec
push
cmpsb
push
jg
movsl
shrb
jle
xchg
testl
mov
test
adc
jecxz
shlb
sbb
sbb
rcrb
lcall
push
or
movsl
rorb
inc
movb
jp
xor
lock
aas
jge
ret
push
jne
adc
push
lea
cs
xchg
pop
jno
mov
bound
ror
cld
cmp
sbb
cmp
gs
or
xor
jecxz
dec
jecxz
std
sarl
sbb
ret
push
aam
hlt
xor
push
and
jb
nopl
imul
bound
insb
das
stos
push
mov
test
je
sahf
dec
push
ret
add
xchg
fnsave
ret
in
sub
leave
cmp
ret
xchg
cwtl
xor
push
in
xchg
mov
addr16
fisubs
mov
jp
fwait
sar
adc
jmp
lea
mov
push
mov
sbb
cs
loope
mov
mul
icebp
aaa
xor
jp
out
mov
lret
jns
lds
dec
add
jo
add
push
mov
leave
jns
lea
and
inc
xchg
cld
lods
push
hlt
pop
pop
pop
int3
push
roll
lock
push
popf
sbb
mov
out
inc
dec
adc
testb
inc
sub
dec
pop
sub
pusha
mov
push
popf
mov
ret
add
pushl
ljmp
clc
dec
xchg
fwait
mov
push
popf
push
or
inc
pushf
pop
shl
callw
pop
fdivrs
add
pop
mov
int3
jge
pop
xor
sahf
cmc
lret
and
adc
stos
lahf
aad
mov
rdmsr
jecxz
xchg
mov
out
dec
lea
gs
push
js
jb
mov
jo
cwtl
in
sub
jmp
outsb
cld
jae
pop
jmp
shl
push
inc
mov
xor
add
mov
and
sar
rcrl
push
add
lds
sub
lds
hlt
jb
out
add
pop
pushf
xchg
popa
and
sub
xor
mov
pop
popf
ficompl
cmp
shl
ljmp
je
lods
les
movsb
xchg
jne
xor
bnd
outsb
int
fucomi
faddl
ret
lods
and
aaa
andb
icebp
push
mov
addl
push
add
rcrl
add
pop
test
test
test
jo
sub
lods
xchg
in
push
mov
cmp
testl
inc
push
push
lret
mov
es
nop
out
sbb
jp
std
das
clc
add
mov
pop
iret
sti
xor
ret
jecxz
out
adc
and
fdivrl
std
cmp
ror
cmp
pop
xchg
lahf
push
out
xor
or
das
negl
rolb
inc
add
lret
add
sub
push
js
jne
popf
mov
jecxz
cmpl
mov
das
inc
inc
mov
cli
dec
aas
lods
shrb
cmpsb
setbe
mov
bound
push
push
int
ret
pop
lcall
inc
lahf
je
xchg
enter
xlat
in
mov
mov
or
sub
cmpsl
jp
outsl
or
jg
jno
xor
fwait
cmp
sub
ljmp
hlt
movsl
je
push
adc
pop
lods
xor
and
adc
sub
jecxz
sbb
jae
repnz
cmp
pop
filds
fldt
in
ret
jns
loop
out
popl
xchg
ffreep
or
fildl
mov
aad
das
sbb
push
popf
imul
lea
and
push
dec
sbb
aas
mov
das
jg
cmp
in
sbb
aaa
fbstp
aam
mov
sub
mov
lret
add
xchg
loope
xor
xchg
insb
call
xor
jno
mov
xchg
mov
push
test
jmp
xchg
cld
shlb
test
add
jle
sub
sub
xor
push
mov
xor
inc
test
dec
fisttpl
jmp
xchg
dec
pop
inc
jno
xchg
data16
mov
leave
jge
jo
mov
leave
sub
lods
cmp
pop
sbb
sahf
imul
fst
push
mov
mov
int3
mov
popa
outsb
push
cmp
cmc
or
mov
adc
fisubrs
nop
movsl
dec
adc
sbb
and
xchg
cmpsl
lock
cmp
mov
inc
insb
cli
dec
das
test
pop
movzbl
outsb
pop
sbbb
test
fldt
lret
mov
gs
lretw
clc
outsl
jnp
or
inc
stos
lret
pushf
push
add
movsb
add
sbb
icebp
nop
jo
call
ret
dec
inc
add
in
adc
xor
rep
xchg
push
pop
iret
lods
mov
aad
ds
testl
fidivs
shrl
mov
add
add
add
movsl
jle
mov
aam
adc
pop
pop
cmp
xchg
xor
mov
loope
fwait
pop
rclb
fs
outsl
sub
insl
inc
fstp
cmp
aas
js
push
test
sub
pop
or
cmp
jmp
test
mov
add
ret
outsb
mov
push
cld
dec
hlt
pop
xchg
fists
int
xor
mov
lea
divb
pop
xor
add
ja
mov
cmpsl
shlb
xchg
sar
mov
push
repz
popf
pusha
xlat
inc
mov
mov
inc
mov
das
pop
push
into
test
fwait
cmpsb
and
push
jecxz
pop
sub
ljmp
rcrl
ss
pop
movsl
out
lcall
fs
out
mov
jnp
fwait
mov
test
scas
cs
cmp
dec
push
scas
jecxz
push
pop
sub
ret
pop
xchg
imul
scas
xor
fmuls
out
mov
and
cmp
or
lods
ret
pop
insl
xchg
in
jno
push
shll
add
sub
jno
in
cmp
push
push
incb
or
std
sbb
pop
fwait
shlb
or
ficoms
xchg
sub
push
inc
mov
lds
jge
cmp
add
jns
ret
sub
je
dec
imul
outsb
jne
repnz
jp
loope
adc
mov
sub
enter
shrb
stos
pop
sub
pop
ljmp
cli
adc
in
pop
aam
add
call
rorl
repz
mov
jle
xchg
sbb
fwait
dec
dec
es
repz
xchg
xor
cmpb
xor
dec
mov
cmp
aam
cmp
jle
sbb
pop
lods
shr
push
push
jae
jg
adcb
jle
dec
xorl
jnp
stc
mov
lods
sbb
jmp
cmp
sbb
dec
ficoms
sbb
lods
cld
adc
lods
jl
shrb
jl
cmp
insl
aas
lahf
je
sub
jge
in
and
xlat
jle
jecxz
fsubrl
cltd
xchg
xchg
dec
ss
and
jecxz
popf
fistps
add
loop
pop
nop
je
mov
ss
sbb
jo
aam
fdivs
mov
inc
jb
sub
sahf
sbb
test
add
push
jae
pop
lock
pop
jbe
or
lret
sub
sbbl
hlt
adc
or
popf
jne
fwait
sub
xlat
cli
dec
push
lods
push
xchg
fdivl
sbb
hlt
incl
mov
push
jnp
sub
add
into
push
mov
test
fwait
mov
nop
or
xor
imul
bndldx
dec
cmp
call
insb
jg
push
cmc
sub
jnp
aaa
lods
lcall
and
and
add
adc
push
sahf
pop
add
ljmp
lret
mov
jne
inc
cmp
and
scas
xchg
adc
fisubrl
inc
into
outsl
cmc
cmc
call
lret
sub
jnp
xchg
cmc
movl
fwait
pop
fistpll
lea
cmpl
xchg
sbb
jp
addr16
mov
adc
sti
xor
add
and
inc
pop
push
hlt
mov
jle
int3
sbb
push
xor
inc
bound
dec
fidivs
sbb
adc
jo
das
popa
les
pop
popa
outsb
push
xor
lods
dec
sbb
enter
fcmove
pusha
jns
mov
fists
sbb
xor
pop
pop
inc
adc
mov
aaa
pop
sbb
cmp
inc
sub
dec
cmp
pop
push
iret
jge
popa
mov
fdivl
aam
mov
loope
lahf
push
movb
lods
in
jge
ss
sub
jp
pop
cmp
xor
mov
pop
lods
in
stc
jecxz
outsb
ss
lret
mov
sub
jmp
clc
movsb
sbb
jb
push
pop
jns
movsl
and
adcl
inc
sub
inc
and
dec
not
pop
inc
int3
sbb
xchg
mov
mov
push
xlat
lock
push
push
xor
lods
clc
scas
stc
subb
and
in
or
ret
push
lods
sbb
sbb
mov
cmp
stc
jecxz
xchg
test
scas
cmpsl
lock
sbb
insb
pusha
aas
pop
aam
int
ficomps
popa
inc
inc
mov
fmul
repnz
addl
push
push
into
add
fidivrs
sub
into
mov
movsl
dec
cli
dec
out
pop
mov
lret
lahf
or
and
push
lock
dec
je
arpl
ljmp
sti
or
mov
fidivl
adc
sti
push
dec
sbb
data16
mov
mov
xor
mov
cli
xor
repnz
xchg
mov
jle
cwtl
pop
test
ljmp
in
cmp
jg
fisttpl
sub
adc
loopne
gs
or
je
pop
jmp
pop
rorl
and
xchg
aaa
pop
add
enter
and
test
pminub
test
dec
pusha
fldenv
push
mov
jl
and
add
mov
sahf
mov
aad
iret
dec
xor
mov
stos
das
mov
sbb
push
and
dec
or
outsb
push
aad
xor
and
push
jp
mov
add
jb
xor
sti
cs
jmp
mov
mov
xor
and
jae
ret
inc
jg
mov
mov
lds
push
xchg
jne
pop
lods
xor
mov
sbb
mov
inc
push
ret
sbbl
sahf
daa
orb
lcall
mov
lock
sub
fmuls
inc
fisttpll
or
imul
pop
pop
pop
hlt
std
ljmp
jl
aad
daa
dec
xor
push
sbb
and
dec
cmp
cli
loopne
mov
and
xor
je
negl
inc
sub
ss
fs
sbb
ljmp
push
pusha
push
sub
call
add
testb
call
xor
ja
fistl
inc
add
dec
int
pop
lret
xor
mov
or
lret
mov
mov
stos
or
popa
jno
mov
iret
xchg
cwtl
sbb
push
sbb
jo
mov
jg
push
daa
popf
sub
loopne
pcmpgtw
push
fmull
les
xor
call
outsb
xor
xchg
jns
add
push
push
jge
sub
jg
cmp
fimull
lea
mov
push
addr16
cmp
jl
pop
mov
out
pop
and
dec
jae
pop
inc
fstl
pusha
arpl
popf
cli
pop
mov
movsl
push
xor
data16
and
sub
ret
push
je
fs
popf
push
push
jmp
sahf
movsl
icebp
sub
add
xchg
sbb
and
xlat
adc
add
ss
sahf
or
imul
jbe
push
pusha
fisttps
fiaddl
subb
test
das
nop
sbb
cmc
test
test
cmp
mov
mov
push
pusha
movsl
ds
lea
cwtl
sub
inc
lods
pop
das
jno
sub
mov
xchg
scas
jecxz
or
or
mov
aaa
insb
mov
out
pop
mov
sbb
and
adc
adc
xor
mov
jmp
fildl
arpl
cmc
cli
xchg
imul
outsb
or
jne
or
mov
jge
test
gs
ja,pt
shll
dec
adc
and
in
sub
add
call
mull
dec
fwait
mov
loope
add
xchg
cmp
mov
jb
jmp
enter
inc
cmp
std
mov
popa
sbbb
xchg
xchg
jp
push
mov
add
enter
es
pop
sarl
dec
into
js
jnp
stc
leave
xor
inc
dec
int3
cmpsb
mov
movsl
mov
mov
xchg
icebp
bnd
jbe
mov
in
or
pushf
and
cmp
sub
fnop
out
arpl
add
cmpsl
add
cmpsb
inc
ret
xchg
inc
sti
out
or
imul
add
jns
jl
cmp
mov
jns
push
push
insb
movsl
fdivl
xchg
push
sbb
bound
or
push
insb
dec
mov
iret
push
xchg
shl
adc
jo
adc
and
push
and
jns
cli
push
test
add
enter
movsb
xchg
hlt
xchg
adc
pop
cmp
xchg
xchg
scas
dec
gs
sbb
and
adc
mov
push
mov
out
pop
jne
sbb
cmp
xchg
cltd
stc
movsb
inc
outsl
pop
mov
or
sbb
rcrb
cmp
sahf
mov
popa
inc
jo
and
and
stos
sub
sti
add
outsb
pop
add
imul
dec
fistps
out
push
mov
cmp
bound
scas
mov
push
mov
lret
pusha
stc
daa
cmp
cmp
int3
adc
insl
mov
pop
shl
es
ja
sub
repnz
lret
popf
fisttpl
sarb
push
inc
and
xchg
add
shll
shrl
in
movsb
fwait
movsb
xchg
inc
sbb
add
add
fwait
sub
xchg
and
cmp
push
xchg
sub
or
cmp
lcall
scas
jnp
out
lds
or
call
push
jae
jge
mov
scas
jg
xchg
cmpsl
push
sub
dec
or
loopne
xchg
push
inc
cli
inc
in
stos
push
sub
xchg
or
in
jmp
dec
sbb
push
cmp
sbb
pop
sbb
sub
shl
stos
ds
jl
xchg
lods
shrl
sub
jge
push
jne
fildl
pop
mov
in
and
lcall
ljmp
add
gs
addr16
add
pop
pushf
lods
jns
cmp
enter
scas
fnstsw
iret
push
jmp
or
aaa
mov
ror
sar
xor
sub
lock
push
lret
inc
test
push
cli
mov
adc
sahf
add
adc
add
sbb
out
cld
cwtl
inc
mov
stc
lds
pop
pop
aad
inc
jle
imul
adc
int3
mov
sbb
dec
jae
sub
or
add
dec
out
dec
xorb
sub
jle
jl
ficompl
aad
jge
xchg
lcall
jecxz
inc
inc
mov
dec
das
test
xchg
xor
xchg
xchg
dec
push
cmp
push
icebp
loope
xchg
mov
arpl
lea
shll
xchg
fstps
sub
add
jno
stc
out
inc
lds
nop
inc
pop
push
xchg
test
aas
dec
lods
xchg
pop
notb
sub
xchg
movsb
aaa
cmp
ljmp
out
push
repz
xchg
cmp
cmpsb
jnp
mov
std
gs
movsb
add
dec
pop
inc
dec
sub
divl
and
mov
pop
test
and
or
mov
stos
push
add
aas
mov
shl
inc
mov
mov
rol
mov
xchg
jnp
jb
nop
xlat
sbb
inc
hlt
adc
mov
xchg
clc
jp
popf
mov
jmp
in
and
insb
mov
sbb
daa
adc
adc
aad
dec
pop
or
add
jle
fistpll
jb
dec
scas
ljmp
mov
insl
jnp
cs
sbb
cmc
fwait
and
or
sbb
xchg
insl
inc
lea
in
dec
imul
clc
dec
xchg
cli
jmp
insb
insl
pop
lret
dec
rcrb
rol
lock
hlt
in
mov
stos
std
xchg
cwtl
inc
movsl
test
inc
pop
lcall
movsb
cltd
mov
ror
lret
shll
inc
pop
adc
push
dec
mov
fcmove
fdivr
test
sarb
movsl
ficomps
std
mov
mov
pop
jnp
out
add
dec
addl
pop
testb
pushf
xchg
mov
push
push
int
sar
cs
inc
repnz
sub
out
mov
in
daa
sbb
xlat
rclb
cmc
ficoml
sbb
clc
sbb
or
adc
push
test
mov
add
aam
pusha
adc
insb
mov
xchg
xchg
stos
enter
mov
or
sbb
cmc
dec
cs
movsl
pop
push
and
aad
pushf
outsl
and
imul
lds
inc
mov
imul
sbb
iret
mov
cmp
sahf
cmpsb
decl
test
ficomps
ret
je
shl
cmpsl
jmp
shll
mov
outsl
loope
sbb
mov
jns
in
call
sub
xchg
xor
pop
jnp
aas
sub
imul
rcl
mov
cmpsl
xor
sti
and
test
mov
ljmp
jge
ja
aaa
rorb
xlat
lcall
je
sbb
cwtl
push
jecxz
cmp
mov
pop
inc
shlb
or
rclb
fs
in
mov
movsb
adc
loop
aam
sbb
rcrb
mov
jmp
shrb
mov
ljmp
fists
mov
push
popl
and
xor
fistpll
jbe
fs
add
add
cwtl
and
add
ds
inc
sub
nop
pop
test
inc
enter
push
bswap
lods
xchg
call
or
jl
gs
aam
out
mov
enter
adc
mov
jbe
mov
push
mov
sbb
divps
mov
mov
stc
push
push
lret
lock
xchg
popf
in
or
pop
pushl
fldl
mulb
sub
lret
add
sub
cli
in
fisttpl
xlat
dec
ret
or
xchg
jmp
mov
adc
push
ficoms
xor
add
pop
icebp
int3
lds
mov
js
in
adc
jne
add
pop
xchg
aad
nop
fisttpll
dec
cmp
and
cmpsl
lods
mov
imul
js
push
dec
mull
shlb
jmp
pop
and
sub
sub
mov
lahf
sub
adc
cmp
lods
cmpsb
arpl
in
cmpsb
or
adc
jns
enter
pop
or
fdivrs
push
push
aaa
loop
out
lret
and
fistpll
dec
sbb
lds
stc
mov
mov
xor
call
and
out
in
stos
or
stos
cmp
push
inc
out
sub
mov
xor
xchg
in
fucom
mov
adc
dec
sbb
ret
fs
jg
stos
cmp
repnz
mov
ja
sbbb
and
stos
stc
shll
in
or
jg
add
pusha
movl
imul
push
fwait
mov
xchg
sbb
or
fsubrl
push
ss
cs
test
add
iret
popf
push
scas
cmp
xchg
sub
or
pushf
test
push
jne
mov
and
mov
mov
dec
add
jge
push
movsl
ret
pop
es
inc
mov
cmp
jecxz
lods
lret
lea
xchg
cmpsb
dec
jbe
or
mov
push
or
call
jmp
adc
add
les
dec
aas
fucomp
lock
aad
sbb
or
xor
clc
dec
inc
mov
jge
adc
fs
push
daa
pop
stc
cmpsb
dec
jl
adc
jae
mov
adc
xchg
orl
xor
push
jne
daa
sub
xlat
lods
inc
cwtl
push
jmp
in
dec
lcall
pop
fildl
sahf
js
test
faddl
pop
adc
ret
push
push
pushf
xchg
leave
ret
lahf
jo
sub
out
hlt
loope
pop
xchg
and
enter
xchg
sub
fldt
sub
icebp
cmp
ja
jns
mov
push
jmp
mov
aad
das
xor
or
rclb
xchg
ret
mov
jne
push
dec
loop
push
mov
div
shll
add
lahf
dec
cmc
lods
mov
movsl
add
adc
mov
cmpsb
fxch
xchg
ret
stos
lock
cmp
xchg
cmp
test
push
xor
sbb
adc
jb
ss
pandn
mov
test
lret
lds
pop
pushf
ret
dec
icebp
scas
mov
lea
push
add
lea
or
or
out
or
and
sub
push
out
loop
and
into
clc
stos
jge
push
adc
outsb
testl
lea
lret
arpl
scas
xchg
xorb
push
mov
lcall
sub
clc
inc
ficompl
pop
push
jg
das
aad
cmp
mov
xor
imul
mov
btc
roll
cwtl
nop
jmp
xlat
add
daa
lret
push
ljmp
adc
push
push
fimull
insl
aaa
pop
mov
cli
fs
int3
js
mov
xlat
jne
aaa
pusha
lahf
js
lods
cwtl
push
mov
loope
push
loopne
scas
das
into
fs
in
adc
out
fadds
push
sbbl
bound
subl
test
dec
or
inc
cmovb
outsl
adc
in
mov
sbb
fstpl
jno
pop
pop
je
stos
fwait
push
filds
jg
pop
sti
flds
push
dec
mov
jg
in
ret
ret
jno
xchg
lea
pop
ret
cmpsl
shll
mov
call
popa
icebp
mov
push
gs
mov
mov
fidivs
adc
pop
cmpsb
mov
cmp
pop
mov
or
addr16
inc
insl
sub
test
push
lock
repz
fcoms
adc
faddl
push
pop
push
pop
push
and
call
insb
aas
roll
xor
dec
cmpsb
mov
xlat
sbb
mov
mov
lds
shlb
repz
or
stos
and
dec
jg
mov
mov
lret
fdivs
sub
imul
rorl
lock
cmpsl
mov
adc
out
js
mov
bound
and
xchg
xchg
mov
out
pop
shrb
add
cmp
call
fimull
out
sahf
or
insb
pop
jp
dec
lret
cmpsl
aas
mov
and
jg
adc
cli
mov
adc
xor
mov
mov
jns
mov
sub
push
dec
sbbl
int3
jecxz
dec
push
mov
push
jg
add
jbe
int3
and
dec
pop
mov
adc
repz
sbbl
leave
insb
hlt
xor
pop
mov
pop
mov
jno
sub
cs
popf
int
cmpsb
xchg
outsl
test
and
push
sbbl
jno
sbb
test
xchg
mov
add
mov
lretw
out
dec
jnp
pop
dec
movl
mov
jp
xchg
jae
adc
adc
ljmp
fists
sub
loope
lea
mov
pop
mov
push
push
adc
sti
xor
dec
popf
sbb
jo
jmp
pop
push
movsl
jl
stos
loop
in
std
adc
loopne
notl
std
mov
and
push
xchg
dec
out
movsl
xor
or
adc
testb
sbb
inc
push
lret
rcrb
cwtl
adc
fwait
adc
movsb
or
pop
int
inc
sub
lock
lods
enter
in
test
incl
test
xchg
jo
sahf
cwtl
gs
xchg
mov
mov
movsl
cltd
movsb
cmpsl
mov
jbe
xlat
push
fistl
push
inc
cmpsb
testb
jle
fbld
sbb
or
adc
imul
daa
add
xchg
ffree
xor
stos
lock
sbb
and
push
js
sbb
les
xor
inc
rcr
je
pop
cmpsl
mov
mov
aaa
jmp
in
inc
les
dec
mov
or
popf
fadds
or
pop
ljmp
lods
cld
jns
mov
sub
jb
lret
imul
adc
sbb
sahf
mov
xchg
and
sbb
repnz
flds
pop
cmp
ret
es
jg
imul
or
into
sbb
jo
mov
mov
push
data16
and
scas
inc
cmp
pop
addr16
xchg
arpl
out
adc
jg
pop
rcr
test
cli
cmp
inc
mov
add
xor
into
pushf
cmpsl
ss
loop
in
jns
rcl
jb
sub
test
sbb
push
pop
xor
in
roll
inc
cs
test
or
sbb
std
sub
jo
mov
les
and
test
cmp
addl
xchg
fisubrl
mov
mov
nop
movsb
sub
or
into
imul
loopne
push
dec
pop
arpl
sub
iret
cmpsl
push
sbb
sbb
add
push
inc
sub
pop
dec
ljmp
shlb
or
push
ljmp
daa
ss
inc
cmp
adc
aas
and
das
jge
stc
je
cs
sub
adc
repnz
addl
mov
mov
data16
sahf
rcll
popa
mov
add
pop
cmp
insl
cmp
mov
das
movsl
jmp
mov
xor
jmp
mov
xchg
out
test
cmc
jl
stc
loopne
std
std
fisubs
sub
insb
mov
inc
or
add
xor
mov
jg
sar
push
pop
xor
outsl
inc
inc
push
pop
sub
adc
xor
sbb
inc
inc
in
jo
daa
shl
sub
ret
pop
fadds
sbb
mov
aad
int
xchg
aam
lods
ror
push
add
scas
jmp
add
outsb
gs
fidivrl
int3
hlt
scas
pop
sub
push
xchg
xchg
aad
call
testb
add
ja
inc
cmpsb
cmp
das
cmp
add
lcall
sub
sbb
in
add
andl
add
sbb
and
idivl
fcompl
shrd
adc
fdivl
mov
repz
push
add
lret
xchg
push
pop
pop
add
icebp
movsl
xor
pop
nop
push
stos
out
add
adc
inc
push
stos
lret
pop
imul
out
out
xor
xor
add
sahf
adc
out
in
sbb
or
sarl
int3
sbb
inc
enter
loope
mov
insb
mov
aam
test
loop
imull
scas
aaa
xchg
adc
fmul
jmp
es
jecxz
sbb
cwtl
sbb
push
cmpsl
or
pop
in
scas
xorl
loope
int
sbb
call
jp
rsm
cmp
aad
jo
lahf
fildl
pop
inc
jb
mov
jno
js
xor
ret
add
mov
lods
addr16
nop
xor
sbb
mov
ret
mov
sbb
fs
cmp
stc
mov
adc
int3
pop
add
out
dec
into
lret
mov
dec
in
xchg
push
cmpsb
add
xchg
jnp
adc
aad
test
dec
inc
imul
fisubs
dec
in
dec
sub
mov
adc
out
jle
or
mov
pop
enter
in
movsb
ficoms
jne
push
shrb
cmp
adc
pop
mov
push
fistpl
movsb
test
aas
aas
mov
xor
mov
insl
or
mov
cmpsb
imul
lds
mov
test
pushf
mov
rcr
sub
mov
pop
stc
cmp
dec
out
test
cld
push
and
push
ss
out
dec
jp
les
xchg
loop
xchg
jb
loope
test
mov
cmp
in
pop
dec
xchg
xlat
test
mov
lods
inc
mov
adc
stos
push
fimuls
gs
rclb
xor
dec
jl
into
cmc
stos
xor
fwait
xor
or
adc
pop
pop
roll
jae
xor
imul
mov
xchg
fwait
cmp
push
call
lds
ljmp
outsb
adc
xchg
pop
sbb
or
sbb
movsl
mov
aam
mov
int
addb
daa
js
mov
sub
mov
sbb
inc
cmp
les
and
xor
xor
bound
or
dec
scas
call
push
loopne
xchg
dec
fiaddl
or
dec
gs
lret
lea
mov
movsl
and
push
add
xor
pop
pop
mov
test
jo
dec
pop
jg
icebp
jbe
icebp
xchg
sarl
shr
mov
jno
shll
inc
push
out
sbb
outsb
inc
fsub
fstp
psubsw
pop
xchg
dec
mov
pop
in
xlat
scas
sub
subb
pop
int3
lret
mov
in
mov
clc
inc
jg
mov
loop
loope
outsl
lcall
mov
ja
pop
out
gs
cmp
imul
dec
add
pop
mov
xchg
mov
aam
mov
lret
cmp
in
cli
lret
hlt
ss
adc
int
fcoms
dec
shlb
pop
sub
fwait
pop
sbb
add
pop
dec
repnz
cmp
sbb
cmp
sub
xor
jecxz
iret
clc
push
ljmp
sar
sbb
pop
testb
push
cmp
inc
ret
mov
xchg
int
fisubl
mov
lcall
add
iret
push
pop
inc
lods
add
xor
xchg
bswap
mov
sub
clc
push
add
call
loope
xchg
repnz
jp
jae
push
adc
pop
pop
xchg
inc
stos
pushf
or
mov
push
sahf
and
jno
and
pop
pop
pop
fisubs
push
adc
repz
and
aas
scas
mov
js
jns
movsl
mov
addr16
jmp
jmp
cmpl
dec
xchg
pop
mov
int
inc
pop
ss
mov
leave
mov
lods
movsb
and
inc
dec
pop
xchg
loope
cs
lret
jecxz
mulb
jge
test
sahf
pop
arpl
out
and
inc
test
sbb
addr16
addr16
mov
push
sub
cwtl
loopne
loop
arpl
add
stos
and
outsb
lea
mov
or
pop
cmove
push
es
add
insl
insb
shlb
imul
sub
lahf
jno
out
lods
jns
iret
int3
bound
mov
inc
mov
cmp
aas
sbb
leave
pushf
mov
repnz
jg
lret
movsb
in
cmp
ss
dec
xor
cmc
in
push
cmc
mov
adcl
push
push
ds
cmp
sarb
arpl
in
lcall
out
dec
push
gs
adc
js
push
jbe
pop
mov
jmp
loopne
inc
mov
mov
jp
push
pop
std
mov
cmp
shll
out
dec
mov
and
jae
xchg
cld
pop
out
ja
notl
sbb
or
adc
imul
test
and
mov
adc
hlt
pop
lods
pop
imul
adc
in
daa
arpl
arpl
xor
enter
ret
cmp
mov
popf
repnz
pop
imul
scas
loope
repz
addl
leave
xor
inc
je
sahf
dec
fwait
dec
mov
negl
aad
pop
dec
and
mov
test
loop
aam
imul
xchg
sub
stos
inc
mov
inc
lret
cmp
test
daa
call
pop
outsl
cs
outsl
and
cmp
jns
dec
mov
movsb
mov
nop
mov
je
dec
xchg
iret
lds
mov
xor
jle
ficompl
pop
les
mov
mov
and
ret
rcr
sub
and
add
jmp
mov
ds
sub
jp
mov
mov
xchg
mov
jno
add
testb
mov
xor
adc
adc
fsubrs
in
cmp
aad
xor
xor
call
fdivs
addl
xor
jb
std
mov
dec
pop
insb
sub
fdivr
dec
jne
xchg
xchg
mov
adc
xchg
insl
int3
in
pop
lock
dec
aad
cli
ficomps
jbe
add
jle
cmp
inc
bound
add
call
and
mov
and
int
and
add
cmpsb
or
inc
scas
sti
aad
shl
stos
push
std
iret
mov
or
inc
test
ret
aam
push
mov
mov
inc
rol
xor
lods
mov
sbb
rclb
and
inc
sahf
sti
xor
pusha
loopne
inc
sub
icebp
repz
xchg
lret
and
test
mov
clc
pop
js
push
pop
ljmp
xor
shr
iret
and
out
inc
int
js
mov
jl
sub
cld
xor
mov
packssdw
loopne
nop
int3
cmp
or
cld
aam
gs
and
add
out
jbe
les
mov
addr16
xor
cmp
lret
pop
pop
cmp
insb
das
shlb
xlat
sahf
ret
jno
jg
in
add
insb
ljmp
pop
jge
xchg
ret
sbb
lret
roll
bound
push
add
sub
incl
inc
mov
cli
fnstcw
jle
push
clc
adc
leave
and
ret
add
mov
dec
addr16
mov
movsl
or
xchg
ds
or
push
jo
scas
repnz
call
loopne
jl
xchg
dec
dec
sbb
bound
add
fnstenv
daa
xchg
push
inc
or
or
xchg
ret
js
out
adc
imul
mov
stc
mov
sbb
or
imul
scas
sbb
mov
sti
insb
enter
pop
mov
addr16
or
jge
in
xchg
cmp
add
inc
mov
jmp
sbb
hlt
jnp
lret
mov
lods
mov
sbb
ds
fistpl
data16
rorb
outsl
xlat
imul
inc
xor
div
insb
sarb
notl
mov
cmp
lret
mov
push
xchg
xchg
mov
std
xchg
imul
push
sbb
mov
sub
rolb
mov
cs
scas
or
push
and
pop
mov
fcompl
clc
enter
dec
ja,pt
inc
das
xorb
or
cmp
loop
push
dec
xor
xor
ss
push
and
mov
push
inc
addb
in
xchg
jecxz
out
sub
mov
cmc
sbb
loop
pop
insl
adc
scas
xor
loop
mov
lock
lret
mov
imul
xchg
jmp
nop
sub
xor
movzwl
in
push
cmp
or
sub
and
push
fwait
loop
cmp
daa
std
pop
mov
push
push
orl
push
push
pop
popa
xor
out
mov
adc
lock
xor
repnz
ret
xchg
xor
notl
jecxz
pushf
mov
xor
repz
imul
push
popa
sti
jbe
rcrb
xor
push
jae
cmp
sahf
push
loopne
sub
in
imul
mov
in
in
aaa
push
mov
sub
sub
aaa
or
sbb
adc
fldenv
dec
pop
jnp
fdivrl
leave
push
cmp
xor
arpl
ficomps
add
bound
xchg
xor
aad
sub
cmc
jae
stos
push
push
fdivrl
or
imul
les
inc
mov
out
sbb
stos
popf
sbb
pop
in
xlat
lret
outsb
sub
jns
adcl
or
cmpsl
adc
scas
out
dec
lcall
dec
gs
or
jecxz
xchg
xor
out
push
daa
insb
fiaddl
inc
rorl
scas
and
xor
jnp
jno
jnp
es
adc
push
sbb
dec
add
mov
int
cmpsb
jmp
sub
push
add
lea
cmc
pushf
into
ss
testb
add
or
jae
clc
shr
jbe
push
and
sub
or
adc
out
adc
cld
lret
cmc
mov
mov
sbb
lea
cmp
or
cmp
rorb
fistpl
pop
fwait
in
pop
mov
add
inc
lods
cmc
xchg
sahf
xchg
xchg
mov
pushf
and
jae
stos
flds
fidivs
std
stc
stc
mov
xchg
frstor
sbb
cmpsb
jl
cmp
xchg
sub
jbe
loope
xchg
cmp
and
xchg
in
lahf
jmp
inc
stc
add
repz
inc
insl
outsb
jo
ja
xchg
fnstsw
and
pop
data16
rolb
xchg
xchg
mov
dec
xchg
ss
adc
sub
test
mov
movsl
xchg
int3
sub
daa
push
pop
cmp
jp
adc
pop
pop
xchg
movsl
sub
popf
mov
xchg
insb
mov
rorb
push
gs
aaa
repnz
out
mulb
xor
pop
dec
push
arpl
xchg
es
push
mov
pop
pusha
cmc
jb
push
out
lcall
shrb
fildll
loop
pop
repnz
gs
jns
push
inc
mov
pusha
push
jns
cs
aas
inc
imul
jg
pop
or
repz
cwtl
push
fldl
jmp
rcr
jmp
pop
mov
jmp
pop
jbe
scas
mov
out
imull
cmp
lahf
mov
jle
cli
pop
jns
xor
mov
dec
mov
pop
inc
jns
ret
mov
in
xchg
loope
lcall
hlt
test
cmpsl
std
cmp
dec
stc
out
pop
pop
or
and
sahf
dec
inc
gs
or
or
ja
popf
loop
jp
lcall
jo
fldt
add
daa
jle
and
mov
sahf
aam
sub
stos
jg
ja
mov
jno
fisttpl
in
not
jmp
ja
add
dec
jno
stos
aaa
mov
jne
faddl
pop
dec
lahf
sbb
pop
add
mov
dec
pushf
loope
jnp
cmpl
jl
arpl
xchg
je
xor
xor
and
pop
mov
xchg
fwait
cmovno
mov
pop
mov
jl
outsl
push
or
sbb
pop
adc
mov
xchg
adcb
cmp
aam
lahf
cmpb
scas
mov
dec
mov
arpl
insb
rcl
ds
iret
adc
negl
jne
test
int3
inc
or
xchg
push
mov
mov
jmp
sbb
mov
push
into
das
fbstp
ror
enter
call
and
sub
sub
inc
mov
movsb
sub
or
sti
or
sahf
jo
test
jmp
cmpl
daa
sub
adc
notb
call
push
dec
pop
loop
int3
fsubrs
mov
leave
sbb
movsl
adc
sbb
repnz
arpl
mov
daa
andl
lret
mov
clc
or
dec
aam
dec
repnz
in
xchg
div
dec
xchg
pop
or
mov
inc
push
dec
xor
or
cli
je
jb
push
andb
push
dec
jne
cmc
dec
adc
test
adc
sbb
adc
fstpl
or
fists
stos
mov
in
rorb
pop
jbe
jnp
fildll
inc
lret
gs
icebp
mov
mov
xor
and
pop
test
ret
ror
adc
in
xchg
movsl
testb
adc
sarl
in
fisttpl
jno
or
xor
jne
lds
xor
decb
loopne
int3
imul
xor
push
push
pop
pop
jns
or
cmp
inc
inc
imul
ds
add
xor
loop
jl
and
movsl
cmp
iret
jp
dec
mov
xlat
lret
jle
aad
stos
ds
sub
sbb
fstpt
push
decb
aaa
mov
pop
adc
aas
sti
outsb
dec
or
dec
mov
arpl
call
rcrb
into
jnp
mov
xchg
lcall
cmc
lea
xchg
cmp
and
sbbl
adc
jbe
cs
scas
mov
mov
mov
jns
xlat
mov
sub
out
mov
add
adc
pop
xorb
push
sub
pushf
mov
ficoms
cmp
add
mov
jl
mov
psrlw
pop
add
jecxz
scas
push
or
daa
sub
adc
out
and
ljmp
shr
ds
call
rcrb
daa
cmc
testb
testl
xor
jmp
cs
or
es
push
insb
mov
inc
shlb
orl
jecxz
pushf
jbe
xor
lret
jae
and
inc
out
or
cmp
inc
mov
movsb
add
adc
andl
in
std
cmpb
adc
lods
jbe
lahf
fstpt
xor
mov
jae
out
dec
push
inc
cmpsb
sbb
mov
lods
repz
cld
add
mov
inc
and
push
and
push
addr16
rorl
aad
or
pop
jne
mov
mov
fninit
pusha
sbb
pop
out
jmp
xor
mov
push
sub
push
js
xlat
pop
daa
in
jb
xchg
outsl
data16
add
into
mov
xchg
bound
ds
and
sbb
enter
popa
test
rcrb
cs
mov
push
out
push
out
push
push
sbb
adc
loop
sub
aas
and
insb
loopne
js
push
es
cli
cmp
out
jl
sarb
lret
xchg
xchg
push
nop
mov
imul
dec
into
into
lods
rol
push
xor
inc
hlt
add
pop
push
ss
push
dec
pop
and
mov
push
adc
jge
pop
mov
test
fnstcw
shlb
jae
popa
in
rcrb
call
jae
cmp
repnz
pusha
jbe
mov
push
mov
inc
or
jl
push
and
jne
sahf
dec
push
in
sbb
dec
imul
lea
aas
mov
fisttpll
clc
rclb
imul
inc
clc
stc
xchg
adc
pop
jle
inc
leave
pop
adc
adc
lret
cltd
pop
pop
es
jno
xchg
adc
cmc
iret
fidivl
je
fisttpl
sub
jmp
pushf
call
out
into
mov
fnstcw
xchg
pop
andb
xchg
add
shl
fsubs
add
jmp
mov
xor
mov
lds
js
in
jnp
mov
add
and
xchg
mov
stc
repnz
pop
stos
mov
cmc
out
push
lret
xlat
cmp
lret
out
sbb
or
lds
mov
dec
imul
jmp
negl
aaa
mov
and
orl
imul
xchg
add
or
jge
mov
scas
jl
lret
mov
mov
das
data16
xor
add
dec
and
mov
data16
xor
adc
sub
pop
cmpsb
pop
jb
ret
fldcw
xor
fmull
xchg
int
jns
push
das
test
mulb
mov
pushf
ficomps
mov
mov
cs
mov
into
imul
out
add
std
mov
sub
scas
cmp
pushw
push
std
mov
jl
loopne
fistps
pop
or
mov
jg
dec
push
popa
fwait
adc
popf
test
leave
adc
cmp
mov
in
inc
cmpb
insb
decl
pop
imull
out
sub
frstor
fdivl
sub
xor
faddl
hlt
sbbl
inc
inc
out
jmp
sub
pop
sarb
cmc
inc
push
ret
out
dec
xor
std
js
cmp
jne
or
pushf
and
push
inc
cld
inc
sbb
push
push
lock
mov
xor
les
scas
xor
and
dec
mov
mov
fiadds
xchg
cmp
cmp
fwait
adc
loop
inc
push
sbb
mov
dec
cmp
out
ljmp
xor
gs
fisubl
dec
xchg
jbe
ret
lret
lret
add
pop
addr16
inc
xchg
sbb
jg
pop
fsubl
push
je
xchg
ljmp
mov
rcl
jg
xchg
movb
notl
out
lock
xlat
rcll
repz
aad
pop
scas
jo
sbb
push
and
outsb
call
xchg
mov
mov
or
insl
dec
movsl
aam
push
dec
sahf
sbb
lods
test
fdivrs
outsl
mov
xor
out
pop
mov
rolb
imull
ret
addr16
mov
out
mov
fistpl
aaa
pop
sbb
sbb
push
push
and
ljmp
stos
sub
sbb
vcvtpd2psx
sarb
jge
loope
jg
add
movsb
cli
pop
movsb
xorl
cltd
xchg
test
psubb
mov
test
and
mov
sub
push
les
lret
mov
shll
cmp
pop
mov
mov
in
xrelease
stos
rcrl
pop
and
cmpb
dec
rcrl
xorb
imul
aad
aam
jecxz
lret
insb
divb
jg
push
rorb
mov
mov
insl
in
add
cmp
lods
outsb
mov
lahf
pop
jl
call
jns
sub
jg
mov
mov
paddsw
ljmp
pop
mov
scas
adc
push
stos
inc
fldl
pop
fucomi
sarb
gs
mov
xor
push
pop
pusha
mov
mov
cmp
sub
adc
insb
dec
sar
clc
jns
jecxz
out
add
cmp
sbb
xchg
addr16
stos
popw
dec
lea
adc
out
pop
cmpsb
fucomip
lret
xchg
bound
jno
inc
jbe
or
add
ret
nop
in
sbb
inc
aas
aam
rol
mov
out
mov
and
jle
push
cltd
ljmp
je
jmp
pop
loop
js
stos
rcrl
pop
jl
les
ss
inc
dec
push
mov
pop
jmp
jne
mov
pop
or
into
pop
pop
or
test
std
sub
inc
loop
inc
add
leave
repz
pop
push
mov
inc
xchg
sbbl
popa
testb
loope
mov
and
and
outsl
pushf
inc
shlb
or
mov
loopnew
jge
lock
stos
fstps
mov
gs
mov
pop
dec
push
cmpsb
lock
shll
pop
in
stc
out
popf
jecxz
inc
xor
adc
or
pop
fs
lds
shll
sbb
dec
lahf
push
shrl
cmp
mov
das
sbb
push
push
sbbb
dec
or
loopne
cltd
jbe
dec
cmp
sub
mov
scas
call
mov
outsb
pop
popa
dec
push
push
cmpsl
jns
push
adc
pushf
cmp
das
adc
icebp
jg
pop
pop
iret
stos
roll
pop
addr16
mov
ss
sahf
sub
or
adc
push
hlt
or
jo
cltd
pop
xor
ss
pop
int3
and
out
adc
add
daa
mov
jge
add
popa
push
leave
into
sbb
jae
ljmp
jmp
int
push
mov
mov
movsl
dec
cmp
in
addr16
inc
pop
pop
das
or
add
sub
add
xlat
pop
xor
mov
inc
mov
bound
sbb
neg
add
mov
mov
lcall
or
pop
or
xor
pop
stos
cld
or
push
pop
enter
cmp
pop
push
or
nop
cmpsb
bound
ret
adc
test
mov
sbb
mov
pop
pop
movsb
mov
or
inc
jo
or
shlb
inc
xchg
push
pop
call
stos
pop
ss
mov
sub
pop
ljmp
stc
dec
adc
leave
sbbb
adc
addb
sahf
in
imul
sbb
cltd
sbb
rclb
pop
jl
gs
aad
and
sahf
sbb
out
mov
push
movl
jmp
sti
mov
jnp
call
lret
dec
clc
pop
test
cmp
loop
std
jl,pt
rcl
in
fmul
add
cld
push
iret
xlat
mov
stos
sbb
pop
sbb
stos
mov
mov
inc
inc
add
in
inc
pmulhuw
mov
or
in
adc
js
scas
or
push
adc
test
aad
mov
add
orb
add
mov
ljmp
pushf
push
imul
add
lock
fistl
sbbb
mov
idiv
in
jae
xchg
and
xor
and
add
orl
insl
or
dec
or
and
push
fwait
xchg
imul
mov
mov
in
lods
mov
enter
or
imul
sbb
ljmp
mov
call
xchg
jnp
mov
orb
pop
xor
fs
mov
imul
jnp
xor
out
addl
mov
stos
addr16
cltd
push
in
mov
push
into
cmp
sbb
pop
loopne
in
mov
cmp
mov
cmpsl
push
xchg
mov
cmpsl
and
jb
and
adc
mov
aas
dec
scas
push
jbe
leave
push
mov
rcll
add
and
push
rolb
dec
cmc
jnp
mov
push
not
xor
ljmp
cmp
mov
test
lods
out
push
pop
inc
pop
sti
clc
ret
push
xor
lahf
jg
mov
shrl
cld
push
idivl
jnp
ds
faddp
fsubrs
lods
cli
lods
dec
mov
ret
mov
jmp
hlt
cli
mov
cmpsl
lea
dec
hlt
jl
and
stos
ret
fildl
xchg
mov
mov
sbbb
mov
add
pop
or
popa
pop
imul
add
pop
add
loopne
je
paddsw
pop
mov
or
inc
mov
arpl
out
js
and
ja
mov
int3
xchg
or
hlt
pop
lcall
jnp
and
inc
arpl
fwait
and
notl
xchg
dec
cmc
mov
lahf
pop
sbb
iret
inc
adc
into
mov
add
jbe
push
xchg
push
pop
mov
xor
sbb
push
add
int3
fldt
leave
xor
push
mov
dec
cmp
test
add
ret
lds
shll
popf
pop
inc
mov
cmp
pop
sub
xlat
push
hlt
jge
test
inc
cltd
enter
sub
int
js
pushf
pop
xchg
sahf
in
pushf
add
sbb
sbb
add
push
fwait
xchg
pop
xor
add
icebp
and
mov
push
or
xor
xchg
cwtl
push
dec
dec
mov
mov
lret
icebp
and
mov
adc
rcll
adc
and
dec
push
add
roll
outsb
jno
clc
sbb
fdivrl
mov
and
xchg
leave
and
add
pop
dec
shll
inc
mov
xchg
add
pop
dec
lret
mov
add
sub
outsb
popa
push
stos
pop
mov
into
pop
add
xor
sbbb
insl
daa
stos
cmp
mov
sub
lret
cmp
dec
std
sbb
fdivrs
mov
mov
jl
stc
fidivl
sbb
sub
add
cmp
fwait
repz
add
sub
ss
stc
nop
aas
rclb
ret
mov
sarb
mov
and
mov
push
cltd
into
pop
loope
mov
cld
insl
cwtl
int3
int3
lock
xchg
mov
and
adc
cmp
adc
xor
iret
jmp
test
cltd
push
mov
mov
mov
loopne
inc
or
inc
adc
pusha
jae
push
sbb
mov
cwtl
mov
int3
inc
lahf
in
outsb
or
lahf
push
gs
push
imull
inc
and
cwtl
in
xlat
enter
fld
mov
jae
pop
xchg
hlt
mov
mov
push
push
cmp
xchg
dec
inc
mov
inc
pushf
sahf
lret
sbb
and
adc
push
inc
lods
pop
mov
push
xchg
loop
pop
and
adc
rcll
loopne
lahf
jns
lock
sub
dec
push
cmp
adc
out
xchg
adc
pop
int
inc
pop
mov
rcl
repz
mov
lock
add
subl
stc
fiaddl
and
inc
jno
dec
pop
aas
mov
enter
mov
addl
inc
pop
mov
lret
shll
cmp
in
enter
xor
shlb
out
fcompl
sbb
mov
jge
shlb
lret
push
fadds
xchg
cli
out
jmp
repz
ret
adc
sbb
or
sarl
inc
xor
or
mov
sti
push
loopne
sub
cmp
push
pop
cmp
in
pop
xor
js
popa
movsb
addl
pop
lahf
lods
push
dec
and
sub
lea
push
push
loop
jle
subl
jno
int3
aam
test
xor
push
inc
or
mov
inc
jo
out
test
js
or
dec
mov
fs
aaa
stos
jnp
inc
cmp
push
mov
inc
push
push
das
pop
ja
ljmp
fwait
push
movsb
fwait
out
jae
pop
hlt
push
fstpt
pop
iret
das
xor
or
loope
das
fstps
lea
rolb
into
or
add
test
dec
dec
in
mov
icebp
mov
test
data16
cmpsl
push
sbb
pop
fwait
sahf
negl
lods
mov
mov
cltd
nop
lcall
arpl
inc
jmp
mov
push
aam
xchg
aaa
enter
je
xlat
jle
jo
dec
aad
cmp
stc
fisttps
inc
cwtl
loope
movl
pop
add
mov
push
add
xor
xchg
out
das
jnp
push
fisubrl
mov
or
cltd
or
jb
dec
jno
mov
or
jle
sti
push
xlat
in
push
jnp
mov
rcr
sahf
add
cmpsb
inc
xchg
cmp
lods
mov
xchg
test
mov
fdivrs
cmp
mov
clc
je
lock
scas
ds
sbb
mov
cs
mov
lea
js
mov
pop
mov
mov
pushf
lods
jnp
clc
cmpsb
cld
sub
fdivl
repnz
xchg
push
push
in
pop
cmp
and
xor
adc
dec
in
mov
inc
pop
ljmp
test
sub
or
add
inc
negl
push
leave
pop
sub
icebp
gs
push
or
cmp
xlat
adc
pop
hlt
jnp
int3
xchg
div
hlt
pushf
sub
xchg
xor
push
dec
in
lods
call
pop
sub
shll
and
adc
imul
jmp
jno
sbb
loope
ret
inc
int3
ds
jns
push
testb
xchg
push
and
cltd
lahf
sbb
lods
push
dec
lock
idivl
mov
cmp
inc
insl
outsl
bound
mov
fdivrs
and
mov
les
mov
xor
scas
cmp
xor
mov
ljmp
jl
xchg
xchg
lret
pop
mov
insb
out
mov
jae
sub
lea
sarb
jno
loopne
sub
mov
popf
int3
mov
into
loopne
inc
cmpsb
test
adc
mov
and
add
push
add
pop
inc
jno
xor
loope
out
lcall
adc
fsubrl
fsubr
mov
int
mov
mov
jae
jae
dec
jp
dec
movsb
push
push
pop
push
adc
pusha
jo
hlt
dec
nop
xchg
icebp
mov
stc
inc
fbstp
mov
clc
mov
or
imul
mov
mov
cwtl
bswap
fiaddl
negb
clc
movb
mov
jb
cwtl
sub
lret
push
sub
cli
sahf
mov
popf
cmpsl
jno
mov
inc
sbb
xor
push
or
jg
xor
ret
jp
xchg
ss
sub
pop
jmp
push
mov
mov
rcrb
test
mov
test
mov
mov
in
divb
or
and
jle
dec
pop
jmp
dec
xchg
es
aam
fldt
cli
idivb
xor
ret
xor
jmp
mov
into
leave
dec
lahf
fistpl
mov
fists
sub
imul
xchg
scas
inc
xor
inc
push
add
xchg
adc
push
mov
mov
es
or
call
sub
push
outsb
imul
js
call
xchg
into
into
jge
push
pop
call
test
jmp
xchg
loop
push
sbb
adc
add
mov
and
shr
inc
sub
jmp
dec
test
push
jo
add
pop
sbb
xchg
ret
push
insb
cmpsl
pop
movsl
ret
lea
nop
push
dec
mov
cs
rclb
lods
jns
mov
scas
ja
cmpsb
pop
decl
repz
and
out
cmc
out
or
sub
mov
fmul
jmp
xorl
xchg
sarl
stos
shll
cmp
jl
les
sub
cmpsb
or
jno
mov
test
xchg
xlat
cli
dec
push
dec
adc
int
lea
adc
mov
inc
jae
int
ret
xchg
and
out
jmp
adc
dec
inc
sub
imul
pop
mov
pushf
int3
leave
pop
lods
lcall
push
pop
mov
and
mov
xchg
mov
push
cli
rol
xor
push
call
leave
shlb
inc
jecxz
int
ss
push
cmpsb
inc
sub
out
sbb
jmp
aam
fs
daa
dec
loope
sub
sbb
mov
ret
add
push
mov
mov
or
add
cwtl
pushf
or
xchg
icebp
push
movsb
or
jecxz
fdivrl
add
bound
mov
sub
lret
pushf
imul
scas
test
icebp
sbb
mov
orb
lret
js
jb
mov
gs
inc
push
or
cmp
xchg
xor
loope
ljmp
push
fs
frstor
lds
pop
cmp
jb
add
ljmp
int3
inc
clc
cmp
in
lea
ds
sti
out
ret
lahf
out
mov
and
sti
cltd
cmp
mov
adc
inc
dec
jg
and
or
pop
add
or
inc
or
dec
sbb
mov
shl
mov
cs
add
pop
xchg
dec
pusha
adc
cmp
cld
pop
xchg
int
add
adc
cmp
cmpl
or
mov
ja
or
icebp
mov
push
arpl
sbb
cltd
cmp
std
test
pop
aaa
cltd
pushf
mov
push
aaa
push
sub
cmp
push
jns
xor
jae
mov
xchg
pop
lea
jg
insl
add
arpl
inc
or
fs
stc
fbstp
fcmovnbe
pop
cmc
push
push
cld
fstpt
jb
lods
out
xor
push
sbb
cmc
mov
pop
or
dec
jns
pmaxub
mov
sub
or
pushf
pop
dec
out
fwait
push
popa
xchg
adc
sub
or
js
fmull
push
cld
fstpl
dec
mov
lds
xchg
pushf
loop
dec
push
lods
mov
jmp
lcall
jae
mull
mov
imul
stc
outsl
cltd
testb
ljmp
xchg
dec
sahf
push
or
lock
push
inc
pop
fistps
push
xchg
sahf
lods
cltd
inc
loopne
sub
mov
sbb
and
call
negb
cmpsb
fwait
push
add
xor
scas
rep
dec
sbb
lea
fdivl
pop
xlat
jo
cwtl
ficoml
ret
dec
shl
push
sti
jne
dec
nop
aas
clc
cmpsb
xchg
pop
mov
cmpsb
adc
jge
pop
add
pushf
adc
sbb
rclb
push
cwtl
push
dec
mov
push
push
and
jne
mov
xor
cltd
testb
sbb
popa
push
push
xchg
mov
aad
inc
mov
std
pushf
out
push
cs
mov
leave
les
ror
sub
xchg
inc
movsb
int
aam
xor
aaa
das
sub
aas
int
adc
mov
or
nop
add
pop
lahf
out
mov
push
daa
addr16
push
push
adc
sbb
jg
out
outsl
cltd
cmc
mov
fisubrl
loop
push
mov
int
mov
jg
lock
and
stos
enter
lods
shrb
cmpl
pop
insb
rolb
leave
mov
negb
rcll
movsb
sub
mov
mov
shll
jb
sub
leave
dec
ds
mov
popa
mov
adc
icebp
fincstp
push
mov
sub
cmp
sub
sub
mov
dec
inc
xchg
cwtl
addl
mov
pop
aam
jae
mov
push
push
fists
adc
orl
das
call
xchg
add
lcall
jmp
mov
lds
pop
pop
adc
fstl
mov
stos
jg
xchg
adc
cmp
in
inc
and
mov
push
fildl
shlb
mov
mov
push
pop
lods
enter
adc
mov
enter
xchg
xchg
iret
fmull
cld
mov
ja
das
aaa
jp
mov
in
inc
out
into
fmulp
mov
sub
daa
sbb
sahf
and
mov
lock
mov
or
mov
cmp
inc
sub
popl
pop
inc
mov
mov
lods
cmp
pop
lahf
jbe
pop
fdivrp
mov
sti
push
insb
jl
ds
add
sub
or
dec
xchg
sbb
movsl
push
sbb
inc
lret
testb
push
push
mov
outsl
mov
mov
add
sbb
lea
lahf
adc
jecxz
dec
ret
push
adc
cmp
dec
cltd
andl
lds
daa
or
jge
push
add
xchg
sti
sarl
cltd
add
popa
adc
mov
xchg
ja,pt
push
sub
into
add
cmpsl
push
mov
pop
js
inc
jp
adc
lret
adc
sahf
add
sarb
insb
cmp
lahf
inc
leave
mov
cmp
ss
imul
push
in
jmp
inc
inc
mov
dec
and
daa
scas
inc
cwtl
movsb
or
in
xor
ss
jle
test
insl
aaa
imul
popf
arpl
fldcw
or
xchg
inc
cmp
call
xor
mov
mov
push
test
fwait
repz
ds
inc
jmp
xorl
insb
sbb
loope
in
scas
loopne
out
jp
insb
jmp
ret
lcall
bound
dec
jnp
test
inc
jecxz
cltd
imul
jnp
je
add
ja
mov
mov
es
in
insb
loop
cmp
test
adc
mul
mov
jp
push
addb
icebp
movsl
push
pop
or
out
pusha
rolb
std
std
or
pop
sub
jo
jle
aas
pop
pop
mov
inc
lret
enter
int3
jns
dec
jle
adc
imul
and
popf
outsb
mov
or
pop
mov
cmpsb
mov
sbb
mov
fwait
enter
testl
fcomi
sub
hlt
mov
xchg
fwait
call
lret
ret
push
lods
shl
aam
push
mov
adcb
clc
sub
lock
or
imul
mov
and
out
je
xchg
pop
dec
or
sub
push
int
mov
add
fs
aam
in
jne
add
cmpb
shll
int3
nop
adc
inc
xchg
add
and
imul
scas
movsl
std
std
jp
movsl
cs
out
mov
xchg
cmp
fldcw
xor
mov
push
push
les
stc
sub
ret
jo
sbb
mov
xor
loop
outsl
push
sub
mov
aas
outsl
sbb
shrl
fisubl
lods
jl
and
sbb
cmp
push
mov
jle
cmp
jo
loope
or
nop
push
mov
ds
cmpsb
mov
lret
push
dec
ror
stc
mov
xchg
arpl
and
ficoml
clc
mov
inc
sbb
rcr
mov
mov
mov
hlt
mov
testb
addl
or
cli
mov
mov
rcrb
cmp
fs
outsb
add
inc
sbb
test
sbb
pop
fwait
lds
cmp
outsl
mov
pop
lcall
pop
xchg
aad
loop
fimull
cmpsl
lret
inc
movsl
ret
aas
cmp
ljmp
insl
imul
adc
insl
hlt
xor
int
push
dec
or
xor
sbb
cli
rorl
roll
sti
clc
mov
mov
loope
mov
xchg
popa
pop
icebp
mov
imul
cmp
popa
fsubrs
addb
test
loop
push
dec
jne
out
ss
repz
sbb
mov
movsb
adcl
call
lods
popa
repz
pop
int
test
int
aad
gs
adc
xor
out
add
mov
cmp
cmc
add
push
inc
inc
inc
or
je
jl
xchg
add
push
mov
push
cli
jbe
leave
repnz
mov
adc
stos
xor
fcoms
addr16
fs
cwtl
jo
mov
dec
movsl
fisttps
jb
sub
das
xchg
pop
in
ret
mov
stos
adc
jle
cmpl
std
cs
ljmp
lods
or
xor
outsb
int3
pushf
pop
or
sahf
pop
ja
pop
std
mov
aas
sbb
sbb
das
jl
scas
lcall
ss
out
int
mov
inc
test
push
std
inc
fiadds
sbb
sti
sub
jno
push
lods
fcoms
jmp
fadd
in
or
int
cmp
cmp
or
push
mov
in
fdivrp
push
imul
jg
mov
or
js
popf
rcrb
sub
imulb
jbe
and
das
fs
adcb
mov
mov
mov
jg
sub
cs
lock
dec
mov
xor
notb
insb
cmc
enter
ret
mov
push
mov
push
scas
and
sub
add
mov
jmp
imul
adc
inc
mov
adc
lock
sbb
frstor
sbb
sar
in
xchg
jge
rcll
mov
push
jmp
fistl
push
notl
les
dec
pop
test
pop
pop
mov
jb
int3
in
inc
and
mov
xchg
jmp
repnz
jp
loopne
enter
out
insl
mov
mov
nop
iret
xor
sub
inc
mov
push
imul
gs
xchg
inc
mov
inc
test
mov
mulb
nop
mov
dec
and
js
or
mov
jle
pushf
mov
lods
push
fwait
mov
mov
jp
subb
dec
inc
fnstcw
mov
lds
je
jecxz
pop
nop
insl
retw
int3
adcl
xchg
push
xchg
dec
xor
inc
loope
pop
test
mov
or
push
loopne
sti
xchg
xor
cmp
sar
xlat
mov
loope
jmp
sub
cmp
sbb
js
sbb
in
ret
iret
push
push
notl
mov
outsl
cli
popa
or
mov
arpl
mov
fidivs
pop
pop
dec
call
push
popa
push
pop
or
xor
sub
js
sarb
jmp
mov
xchg
pop
adc
adc
int3
mov
movsl
rcrl
cmpl
and
mov
fnstsw
call
lret
jnp
or
jbe
fistpl
add
outsl
in
test
and
je
mov
fdivs
inc
xlat
lahf
mov
test
mov
rol
lret
jb
mov
push
ja
push
jle
push
push
xorl
xor
negb
ror
out
jbe
rorb
filds
lea
cmp
mov
dec
data16
or
fldt
lds
adc
mov
sub
or
xchg
sub
arpl
cmpsl
leave
dec
jne
xchg
lea
add
out
cmp
xchg
clc
lret
mov
adc
adc
sub
push
dec
nop
aaa
xor
into
inc
or
mov
ljmp
call
xchg
mov
and
xlat
loopne
iret
push
mov
xor
mov
inc
push
xchg
cmp
lods
fcomi
icebp
mov
mov
imul
adc
adcb
push
jns
dec
xchg
inc
call
or
rorl
jmp
pop
mov
int
xor
jb
push
sarb
addr16
xlat
int3
pop
mov
mov
dec
jnp
push
adc
jl
outsb
xchg
xor
iret
pop
fdivrs
sahf
sbb
or
ret
ds
sub
and
nop
or
jg
mov
mov
dec
enter
adcl
imul
shlb
jp
add
aas
scas
mov
insl
mov
pop
cld
popf
xchg
sbb
dec
in
push
mov
dec
push
inc
pop
dec
mov
dec
jmp
ss
subb
push
sub
nop
subb
lret
mov
mov
jmp
inc
xchg
cmp
cs
cwtl
mov
out
repz
popa
ficomps
test
subl
cltd
sar
xchg
pop
sub
cmpsl
lcall
mov
mov
ret
adc
jp
xchg
sbb
enter
mov
test
add
gs
outsl
das
adc
add
into
outsl
xor
test
lods
inc
or
movl
je
es
test
leave
mov
push
test
insb
cmp
pop
cmp
mov
sub
ficoms
repz
fimull
or
mov
inc
aam
jp
loop
je
test
shrb
push
pushf
push
lock
cmpsb
outsb
movsl
inc
loop
mov
dec
gs
cmp
adc
imul
cli
ret
push
adc
add
xor
pop
mov
mov
popa
jnp
std
enter
sahf
mov
mov
cmpsb
xchg
inc
dec
pop
inc
jno
xchg
jle
lcall
leave
xor
fidivrl
lods
in
sub
xchg
lret
push
mov
sbb
mov
fcomip
push
mov
scas
xchg
xchg
insb
mov
push
stc
call
xor
lods
test
mov
lds
xor
inc
ja
je
daa
daa
push
aam
cmp
mov
dec
xchg
in
dec
pop
xchg
arpl
and
pop
int3
js
mov
das
aaa
sub
add
adc
mov
jl
repnz
test
mov
nop
cmp
push
or
repz
out
dec
mov
ror
push
lretw
jbe
mov
scas
mov
int
dec
lds
jb
sbb
pop
fwait
lds
es
xchg
test
lods
add
dec
mov
addl
cmp
push
jb
inc
mov
mov
jg
pop
jmp
aam
add
in
cltd
mov
cmp
sbb
add
sahf
pop
mov
in
jnp
mov
mov
fwait
jns
daa
fs
fdivp
inc
lods
lock
dec
outsl
xchg
xor
pop
mov
inc
jns
xor
popa
sbb
pop
cmp
insl
bound
rclb
cmpsb
daa
dec
and
out
fistpll
add
clc
lods
mov
push
sub
jge
jge
das
jp
cmp
std
into
push
dec
test
mov
cmp
cmp
or
pop
ds
push
aam
pop
mull
push
pushf
push
repnz
fs
jp
loopne
mov
adc
and
xor
stos
out
mov
xor
jbe
addr16
push
jno
inc
or
inc
ss
add
insl
or
mov
inc
push
add
movsl
push
jl
pop
mov
enter
mov
jbe
jmp
or
inc
repz
jg
mov
dec
lods
mov
aam
push
test
push
cmpsb
sahf
add
lret
in
loop
outsb
pop
sbb
sub
xchg
pusha
test
xor
push
mov
inc
xchg
addl
inc
sti
mov
decl
js
or
outsb
fdivr
loop
pop
ficoms
insb
sbb
pop
or
sbb
repz
jmp
push
pop
mov
fdivrl
cmc
pop
out
dec
cwtl
mulb
cwtl
jl
in
jmp
jecxz
inc
mov
fwait
shlb
xchg
jl
jmp
aas
adc
das
out
jbe
cli
xor
fs
jg
icebp
addr16
adc
xchg
scas
xchg
xchg
out
adc
test
movsb
in
jl
and
stos
mov
jb
add
mov
pop
and
pushf
test
aaa
add
gs
mov
cwtl
decb
ja
pop
and
out
iret
pop
xor
pop
push
clc
sbbl
mov
sub
push
popf
fmuls
adc
or
xchg
jle
cli
out
fisubrs
stos
in
stos
jb
pop
xor
out
xchg
xchg
xchg
subl
add
xchg
push
dec
inc
imul
ja
jb
fsubrs
lods
cld
cmp
mov
js
testl
mov
add
fs
lret
push
mov
mov
push
lret
imul
lcall
add
and
push
pop
test
mov
cltd
test
fiaddl
cwtl
popa
sbb
adc
sysret
sub
pop
mov
sbb
shll
mov
mov
inc
adc
mov
push
out
mov
mov
push
addl
les
mov
jecxz
mov
sub
sar
push
enter
adc
or
lds
xor
sahf
sbb
pop
pop
out
fwait
jecxz
lock
and
or
std
and
sarb
mov
xorb
rol
inc
pop
mov
mov
mov
cmp
push
je
cmp
add
fnstcw
push
push
dec
jbe
mov
sub
ss
ds
scas
sub
jb
mov
jp
adc
iret
sbb
pcmpeqd
and
pop
lahf
mov
ret
add
popa
mov
cmp
jecxz
sub
stc
stos
xorb
lods
pop
sbb
je
cmp
xlat
das
test
push
cmp
testb
sbb
fucomi
add
test
pop
loop
test
outsl
sbb
mov
dec
pop
mov
out
mov
mov
jb
mov
into
jnp
mov
inc
xor
fwait
ljmp
clc
fiadds
push
jl
sub
jl
mov
ret
pop
fisttpll
aad
enter
ret
shlb
fistl
or
adc
and
inc
pop
dec
and
lea
dec
call
imul
adc
push
and
fistpll
lahf
loop
ds
addl
jecxz
push
iret
push
shrl
pop
inc
ja
sub
inc
mov
or
hlt
or
jns
xchg
push
outsb
fs
js
mov
inc
sbb
mov
ljmp
out
dec
mov
push
arpl
shll
imul
cmpsl
fldt
xor
sbb
cmc
int
or
loopne
adc
and
mov
je
pop
or
add
push
sub
add
inc
sbb
mov
lret
movsb
test
clc
mov
pop
add
pop
mov
jbe
sub
sbb
fs
pop
pop
or
lret
test
pop
push
clc
cmp
orb
lret
sub
mov
xchg
push
ss
mov
into
adc
sbb
jnp
je
lock
jge
lcall
dec
mov
jns
hlt
add
rcll
sub
jnp
cwtl
imul
xchg
add
cmp
cmp
mov
mov
sbb
pop
pextrw
test
xchg
or
je
addr16
push
out
mov
push
stos
testb
xor
mov
ret
insb
lock
rcr
xchg
cmc
mov
inc
jmp
loop
movsl
clc
xor
fildll
and
cwtl
sub
and
mov
call
inc
das
adc
and
stos
add
push
or
adc
int3
push
jecxz
jbe
daa
mov
push
das
mov
or
push
jbe
and
xchg
out
jg
and
adc
pop
lock
dec
mov
jb
std
mov
xchg
jp
add
xchg
add
add
adc
test
mov
jnp
mov
xlat
test
mov
pop
movsl
aam
aaa
cmp
test
icebp
hlt
out
cmp
inc
decb
or
jo
jmp
outsb
sub
mov
mov
jmp
fisubrl
fsubs
cs
cmp
fists
xchg
pop
mov
push
mulb
imul
sub
add
xor
xchg
jge
lcall
xor
push
cmp
cmc
xor
testb
mov
jecxz
xor
loope
add
repz
sub
inc
aam
je
mov
fcmovne
mov
loopne
out
adc
xor
pop
into
xchg
and
repz
out
int
lcall
and
aaa
fisubrl
leave
adc
cmp
dec
es
sub
sbb
mov
adc
insb
pop
mov
test
xchg
clc
xchg
mov
ljmp
sbb
test
std
ds
mov
insl
out
ds
jecxz
sbb
out
dec
in
mov
pop
xchg
stos
mov
mov
add
jmp
fists
movsb
stos
pop
das
xchg
jecxz
clc
or
dec
fldpi
nopl
daa
or
mov
hlt
sbb
dec
mov
movsb
cmp
xchg
adc
fsubrs
inc
pop
cmp
sbb
pushf
es
pop
sub
ja
in
cmp
insb
clc
ficomps
jne
shll
roll
jb
add
mov
mov
adc
or
cmpsl
pusha
push
sub
pop
or
mov
xlat
test
jbe
add
xor
rcr
push
jae
sbb
cmp
xchg
sbb
mov
and
fcoms
test
in
stos
inc
inc
rep
je
mov
push
mov
fst
addr16
iret
or
mov
fs
pop
test
js
scas
pop
cmp
cmp
aaa
xchg
into
xor
or
dec
dec
push
ja
mov
das
mov
adc
inc
mov
ficomps
pop
or
and
jl
jno
test
mov
jno
shlb
or
dec
dec
dec
pusha
xchg
inc
mov
mov
lahf
scas
cmp
jmp
push
and
in
add
adc
cmpsl
add
ja
ret
shl
add
aad
push
mov
into
out
movsl
jnp
ds
out
fscale
xor
dec
ret
loopne
or
or
xchg
sti
ss
inc
pop
or
or
test
mov
inc
sub
scas
dec
or
xchg
push
xchg
pop
jns
imul
loopne
ret
je
jbe
test
inc
dec
shl
pop
in
scas
cmc
icebp
add
push
nop
jns
pop
push
add
and
mov
sub
pop
mov
imul
fistl
imul
out
ficompl
ret
jge
or
mov
mov
incl
movsb
test
dec
sub
pop
push
xor
sbb
aam
sub
mov
xchg
push
movsl
jge
in
add
stc
jecxz
hlt
add
xor
mov
sub
sub
repnz
mov
sub
mov
or
movhps
lds
cld
jae
hlt
pop
sub
jle
das
insb
sub
stc
aas
mov
xchg
push
mov
nop
int
dec
shrb
xchg
xchg
loopne
jo
aad
roll
and
movsl
xor
inc
repz
adc
in
cmp
or
or
out
leave
in
fsubrp
mov
jae
sbb
push
pop
stos
popf
into
mov
pop
pop
mov
call
lods
pop
adc
jne
mov
pop
mov
ljmp
lds
aam
inc
jo
in
sub
or
cmp
inc
movsb
imul
push
add
out
cmc
aaa
jns
pushfw
jecxz
or
or
rorl
push
cltd
test
adc
jbe
mov
out
rcrl
pusha
shll
xchg
int3
jmp
push
mov
push
mov
xor
mov
push
pop
pop
fmuls
pop
mov
into
adcl
xchg
dec
jb
les
pop
je
and
mov
shrl
dec
sbb
fdiv
adc
mov
cmp
cs
nop
in
mov
mov
aas
inc
mov
icebp
ror
orl
int3
xor
jl
sub
sti
adc
xchg
jge
cli
pop
in
mov
movsl
test
cltd
mov
movsl
in
shlb
out
jns
ret
jbe
xchg
negb
pushf
insl
std
jg
push
mov
push
ja
mov
pop
xchg
push
outsl
loope
and
or
sbb
add
repz
int
movsl
lcall
out
jmp
mov
scas
shrb
insl
lea
add
sbb
stc
inc
jp
aas
or
and
xchg
mov
fisubs
or
lods
xchg
icebp
mov
dec
inc
inc
mov
pop
loop
aam
lods
jle
xor
or
outsl
test
mov
in
aaa
testb
push
outsb
das
out
mov
iret
test
roll
adc
mov
sbb
mov
pushf
hlt
or
dec
mov
sub
jmp
pop
sbb
dec
sub
mov
out
push
out
pop
imul
jmp
pushf
dec
fcmovbe
insb
aas
test
inc
out
dec
enter
loop
sub
clc
rcl
lcall
cmp
in
mov
push
lods
add
mov
jle
push
adc
jns
pop
sbbl
cltd
lea
mov
rolb
push
ja
bound
stc
mov
xor
inc
lret
xchg
inc
inc
mov
mov
out
mov
ss
push
cmpsl
lret
out
pop
push
jmp
mov
outsb
out
pop
xchg
mov
xor
push
and
xor
mov
lods
repnz
xchg
sub
adc
mov
adc
inc
push
into
cmp
divb
mov
xlat
and
inc
push
aaa
imul
pop
mov
sbb
push
xchg
mov
adc
xchg
cmpsl
out
sbb
or
inc
jle
cs
pop
divl
push
in
ret
les
cltd
inc
fsubs
cmp
xchg
mov
xor
and
in
adc
loope
das
jne
inc
test
sbb
std
stos
movsb
mov
sbbb
add
daa
dec
pusha
adc
ficoms
xchg
cs
hlt
ficoms
cmp
lahf
js
addl
pop
add
xchg
jnp
je
ja
ret
jg
mov
mov
aaa
jp
xchg
fidivs
ds
xor
fcompl
es
rorb
jae
sub
lahf
sahf
lcall
or
icebp
jb
push
insb
cmp
add
cltd
fwait
adc
outsb
sub
jmp
mov
jae
jno
test
popa
inc
test
mov
movsl
mov
sub
lods
cwtl
push
pop
xor
pop
pop
test
cmp
icebp
cmpxchg
fistps
je
and
mov
jno
imull
xor
popa
js
mov
test
out
int3
cmpsb
scas
cmp
clc
loope
mov
lds
jp
sahf
inc
mov
sub
pop
aam
dec
shl
cmc
push
mov
data16
sub
cli
jne
cmp
or
cld
scas
jno
cltd
mov
dec
cmpsl
mov
pop
add
dec
dec
jnp
xor
add
gs
cmp
xor
inc
sub
jg
cmc
adc
cs
nop
insl
or
or
or
mov
mov
xchg
ret
daa
orl
cmp
pop
fs
cmpsb
cmpsl
or
dec
into
icebp
bound
add
mov
mov
and
inc
rol
add
cmp
je
mov
insl
inc
call
ret
nop
cmpsl
push
psubw
mov
test
xchg
fwait
out
sbb
cmp
and
es
clc
shll
jbe
lods
faddl
cld
scas
test
mov
dec
andb
sub
mov
test
mov
out
lods
fiaddl
sarb
fcoms
xor
jmp
push
or
into
mov
mov
and
dec
cmpsl
jecxz
cmp
rcll
pop
hlt
xchg
jns
jns
cmp
xchg
lahf
hlt
sbb
dec
cld
int3
xor
mov
pop
adc
xchg
loop
mov
inc
and
jno
sub
lret
cmpsl
push
leave
xor
xlat
xchg
push
les
and
lcall
arpl
outsl
sbb
add
lods
inc
stc
clc
daa
xor
xor
fcoms
sbb
pusha
push
imul
xchg
inc
and
pop
xor
lahf
data16
push
or
add
je
pop
or
fisttpll
out
xchg
mov
mov
xchg
into
or
ret
pop
and
cmp
movsb
pop
jg
loope
mov
xchg
add
sub
jno
dec
dec
jno
lods
sbbl
jge
dec
or
push
lock
or
sbb
aas
xor
pop
pop
cwtl
adc
mov
out
cmp
bound
pop
xor
jp
js
lahf
mov
aas
add
mov
dec
inc
sub
cmp
fwait
lods
jl
add
cmp
adc
push
cmp
jne
addb
popa
mov
cwtl
mov
xchg
mov
lea
xchg
push
je
xchg
push
das
addr16
push
inc
push
pop
nop
test
adc
dec
lds
addb
xor
and
icebp
mov
sbb
lret
cmpsb
xchg
out
dec
ret
mov
sbb
adc
inc
push
mov
fwait
clc
outsl
mov
fcoml
add
adc
and
xor
repz
or
loop
cs
and
clc
jmp
dec
sub
popa
add
jno
mov
pushl
lea
xchg
jg
loop
ds
idiv
inc
sbb
push
mov
test
out
lahf
insl
mov
xor
inc
aaa
out
or
inc
mov
je
clc
mov
ja
ret
mov
jo
xchg
mov
lahf
dec
adc
mov
mov
addl
inc
push
mov
push
xor
or
shrb
push
into
test
cmpl
sbb
lds
inc
xor
add
aad
push
bound
mov
das
add
jg
movb
mov
sbb
ds
cli
or
and
cmp
inc
cltd
xor
xchg
cli
xlat
add
pop
lcall
push
mov
movsl
pop
dec
push
out
adcb
inc
pop
push
mov
push
jns
add
cld
cmp
mov
adc
push
mov
mov
mov
rcrb
mov
push
sub
xchg
ss
dec
loopne
push
dec
mov
dec
push
xor
sub
lcall
inc
in
lods
ret
ljmp
imull
xor
adc
cmpsl
fdivp
test
cmp
aas
movsl
adc
xor
push
out
and
add
xor
and
outsl
and
mov
xor
cmp
dec
fdivrs
and
sarl
pop
inc
dec
sbbl
mov
cmp
cs
andb
cmp
les
jb
pop
in
pop
mov
jp
divb
jle
test
or
or
arpl
mov
shl
mov
sahf
loope
cmc
jl
outsl
icebp
movsb
shrd
hlt
inc
xor
dec
test
popf
push
jge
scas
mov
outsl
insl
movsl
mov
addl
stos
rol
push
cmp
mov
arpl
adc
enter
sub
call
adc
ljmp
sub
fs
int3
test
mov
jecxz
jb
divb
fsubrs
je
lods
ficompl
push
fwait
out
js
inc
arpl
add
or
fwait
cltd
clc
inc
mov
frstor
mov
dec
push
decb
pop
mov
push
adc
lods
lea
fisubs
sub
fsts
xor
xor
int3
cmp
movsl
je
fwait
mov
in
int
outsl
mov
sub
shrb
pop
fcmovnbe
xchg
jns
dec
cmp
dec
mov
push
cwtl
into
scas
and
push
adc
add
pop
mov
pop
fwait
lahf
jecxz
lcall
and
add
int
xchg
mov
test
mov
rcrl
ljmp
rorl
mov
mov
mov
inc
dec
enter
ja
add
sbb
nop
or
stc
push
rcll
call
adc
and
divl
adc
nop
fdiv
stc
pop
mov
and
testl
mov
pushf
sbb
xor
insb
mov
or
es
jb
fisubs
sub
sub
dec
cli
or
out
mov
aam
xchg
mov
clc
movsb
test
xchg
xchg
add
cmp
push
lahf
add
add
test
rorl
inc
test
gs
imulb
lahf
ficompl
pushf
mov
sbb
mov
mov
push
pop
pop
shll
dec
outsl
sub
call
std
mov
into
loope
push
stos
call
pusha
sbb
test
and
push
push
fisubrl
mov
scas
jmp
cmc
aaa
mov
dec
div
cs
push
adc
mov
cmp
push
pop
or
dec
scas
movsl
fiaddl
sub
push
cli
loope
roll
xlat
mov
dec
or
out
cli
sbb
hlt
shlb
stos
mov
je
or
sub
pop
mov
je
pop
stc
mov
minps
data16
dec
mov
cmp
cmp
sbb
mov
hlt
cli
push
mov
cmp
add
mov
and
sar
std
out
sub
andb
ja
xor
rcrb
mov
cld
push
or
in
or
cmpsb
outsl
push
inc
xchg
stc
call
xchg
int3
aaa
jbe,pn
lods
sub
push
cs
or
cltd
repnz
or
inc
cltd
fldcw
testb
loope
xor
push
mov
push
inc
jl
pop
cmp
lock
mov
mov
mov
add
xlat
jle
push
mov
aad
movsl
add
scas
sub
mov
call
ret
out
leave
std
pop
mov
adc
mov
pushf
sbb
sbb
imul
lds
ret
xor
mov
clc
outsb
jmp
xchg
test
enter
orl
cmp
cmp
adc
lods
inc
push
lea
loop
fimuls
jbe
bound
clc
hlt
cs
shlb
mov
loope
or
pop
mov
lret
inc
stos
dec
mov
cld
das
and
push
or
popa
mov
dec
xchg
and
scas
or
cmp
add
xchg
jb
scas
into
jae
aad
mov
jnp
in
sahf
movsl
iret
dec
clc
mov
aas
add
andl
fbstp
xor
fs
cs
pop
add
mov
mov
iret
sti
mov
pop
decb
xchg
je
cs
das
xrstors
test
jle
call
xchg
aaa
orl
dec
jne
or
push
outsb
sarb
insb
lahf
mov
mov
fisttps
ror
push
mov
mov
insl
fiadds
idivb
dec
test
jg
dec
insl
out
out
rdtsc
cwtl
repnz
int
pop
hlt
and
icebp
nop
loop
clc
xchg
sti
imul
sbb
pop
xchg
lock
mov
xor
mov
mov
call
insb
jecxz
pop
mov
sysenter
loop
push
and
mov
xchg
mov
out
jns
mov
sub
jnp
repz
push
pop
test
xor
cli
cli
stc
nop
cmpsl
mov
notb
scas
xor
jb
leave
mov
cltd
fs
push
mov
fcmovu
les
ss
add
sbb
cmp
mov
adc
xor
mov
stc
xchg
add
xchg
and
int3
in
rorb
cmp
pop
je
out
and
aaa
ja
mov
add
test
jmp
lods
push
sbbl
adc
fistpll
adc
rolb
loopne
cmp
repnz
bound
push
daa
jecxz
mov
sub
lret
aad
mov
test
stc
mov
push
cmp
cld
xchg
sbb
gs
mov
ret
cld
push
jg
das
fstps
leave
nop
pop
loop
in
sti
fadds
imul
movsb
push
dec
inc
adc
aas
inc
rcr
or
dec
dec
sub
mov
or
push
xchg
mov
fidivrs
xor
push
mov
jo
add
or
sbb
push
or
mov
fsts
addr16
pop
sub
loop
add
jns
outsb
imul
cmpsl
test
dec
not
cltd
fcomp
mov
in
cltd
outsb
stos
cmp
mov
mov
add
repz
xor
mov
icebp
push
mov
repnz
idivl
cltd
inc
or
cmp
aas
test
add
mul
add
mov
inc
sub
dec
inc
movsl
push
testb
scas
push
jbe
lret
pop
in
aam
mov
mov
testb
dec
fcomps
incb
daa
cli
mov
je
sub
sbb
push
sahf
inc
cmp
xor
test
mov
imul
mov
aad
jo
dec
add
cmp
and
adc
aam
lret
aad
push
mov
ds
test
mov
in
mov
je
pop
sti
push
pop
gs
xlat
inc
add
psubw
negb
out
jb
sub
mov
cmovg
push
sarl
dec
adc
shl
xor
fwait
outsb
inc
cmp
addr16
daa
add
cs
imul
aad
sbb
and
test
fdivs
adc
pusha
push
in
test
es
cmp
jge
mov
test
sbb
xchg
inc
out
push
insb
cmp
push
mov
cmp
add
sbb
cmpsl
dec
pop
xor
shr
test
pop
sbb
mov
cmc
daa
hlt
mov
push
sub
nop
les
inc
jo
cmc
push
pusha
and
xchg
aad
in
pop
push
push
or
sahf
cmpsb
lea
inc
repz
sbb
out
pop
popf
popa
push
out
pushf
mov
pop
in
int
dec
sbb
xchg
je
jmp
pop
cld
jne
push
insl
rorl
mov
push
cmpsl
sbbb
pop
inc
imul
adc
subb
in
sub
icebp
test
inc
sbb
iret
sub
pop
push
xchg
test
sbb
jb
jg
dec
jecxz
adcb
mov
out
xor
cmc
scas
fstpl
and
and
xchg
sbbb
scas
out
push
inc
cmp
inc
mov
fcompl
cmp
popf
and
data16
scas
inc
test
stos
jp
ljmp
jo
ljmp
int
push
xchg
in
push
insl
mov
or
sahf
sbb
and
xor
sbbl
shlb
ljmp
pop
aaa
jle
jbe
rolb
insb
out
mov
sbb
inc
jge
mov
sti
ljmp
and
loop
mov
pop
push
das
jbe
mov
cmp
push
cmp
and
je
hlt
aad
das
mov
xlat
daa
sarb
sbb
out
ret
lds
mov
mov
shr
xchg
lea
adc
mov
cmp
dec
mov
mov
pop
dec
in
lods
adc
les
jmp
jg
aam
jbe
or
je
es
inc
shlb
add
push
in
imul
out
outsl
les
imul
jp
push
jle
xor
jne
cli
mov
and
ret
push
push
rcr
xchg
xchg
ljmp
adc
int3
ss
sbb
repz
in
add
mov
fnstenv
push
into
xor
pop
add
lods
lcall
push
jns
cltd
xor
xchg
ss
les
lock
scas
pop
pusha
dec
lahf
decl
outsb
add
lods
and
or
cli
pop
mov
cli
and
push
rolb
push
add
cmp
inc
mov
xor
push
and
sub
ss
jnp
xchg
xlat
mov
inc
xchg
sti
je
sbb
cmp
movsl
iret
jmp
insl
or
and
mov
ret
pop
xchg
mov
mov
jmp
lock
lods
xor
jmp
xlat
or
loop
jle
pop
pop
rorl
jmp
or
or
mov
mov
ret
add
sub
movsl
les
xchg
or
cmp
lea
dec
ss
fistpl
outsb
push
xor
in
sti
leave
rcrl
xchg
ss
popa
push
push
fs
cmp
cs
mov
xchg
pop
xlat
cmpsb
aad
pop
popa
add
push
sbb
loop
adc
int
pushf
scas
ja
fisttpl
xchg
hlt
cwtl
leave
hlt
stos
xor
or
pop
push
sub
daa
sti
jno
pop
in
sahf
inc
arpl
shrb
or
outsl
loop
cs
imul
push
negl
mov
cld
cli
les
mov
lahf
xor
cmp
xchg
les
insl
and
mov
shll
fs
pop
push
pushf
pop
jmp
fdivp
xchg
rolb
int3
aad
pushf
std
ret
adc
shll
add
push
imul
adc
repnz
lea
stos
xchg
movsb
xchg
int
fists
or
jae
adc
ret
pop
or
sbb
dec
mov
cmp
cltd
dec
aaa
adc
mov
cld
or
adc
idiv
add
repnz
mov
ret
sbb
mov
outsl
test
cmp
mov
sahf
mov
mov
xor
outsb
push
ss
in
mov
push
fadds
mov
xlat
cmp
dec
mov
lret
std
scas
xchg
hlt
jmp
sbb
mov
jnp
jns
mov
mov
or
xlat
das
in
psubd
aam
ffreep
xor
iret
sbb
mov
ret
sub
cld
mov
test
push
sbb
sub
cli
xchg
xchg
ret
rol
cmp
enter
mov
mov
and
mov
and
and
ret
and
mov
mov
frstor
das
and
rclb
lea
inc
movsl
daa
xchg
iret
add
ds
xor
xor
lds
notl
mov
dec
xorl
xorl
xchg
in
lcall
rcrl
outsb
insl
sar
adc
fwait
lret
xchg
xor
jo
sbb
mov
xor
push
inc
or
fidivs
jge
mov
inc
mov
notl
mov
pop
aaa
mov
sti
dec
pop
inc
lret
gs
and
push
scas
push
cwtl
test
and
sbb
mov
mov
data16
bound
cltd
and
add
stc
cmc
push
xchg
pop
ret
pop
clc
or
dec
cli
or
xchg
outsb
lods
pusha
cmp
jbe
ljmp
insb
rcrl
jecxz
inc
imul
lock
out
push
outsb
push
lret
mov
cmp
jl
sbb
arpl
stos
fisubl
pop
xlat
adc
dec
mov
movsl
test
loop
adc
or
mov
mov
sub
jae
dec
call
sub
xchg
mov
inc
jl
pop
mov
fsubrl
lods
mov
fsincos
fidivrl
iret
aad
push
imul
push
enter
out
jbe
imul
cmc
inc
js
sahf
cmp
and
fstps
sub
cmp
dec
inc
scas
jo
mov
fisttpl
sbb
out
in
daa
outsl
pop
add
cmp
into
mov
std
test
dec
stos
add
test
insb
adc
idivb
icebp
js
mov
jl
or
test
and
dec
test
jg
addr16
hlt
in
faddp
aad
loopne
mov
js
cmpl
int
stos
ss
xchg
pusha
pop
pop
addr16
mov
fisubrs
dec
mov
inc
sbbb
mov
mov
ja
mov
mov
dec
xchg
cli
out
sarb
mov
orb
mov
inc
adc
pop
jns
std
xchg
scas
daa
xor
xor
cmp
out
xor
adcb
das
rcll
scas
rcr
mov
enter
dec
xor
sti
add
push
stos
fwait
out
roll
rol
das
enter
cmp
push
aam
lcall
cmp
add
mov
xor
sub
or
pop
or
das
rorl
inc
mov
ss
icebp
sbb
xchg
loope
ja
cmp
dec
fadd
aaa
inc
cmc
scas
mov
fidivrl
adc
inc
pop
pop
xor
or
loop
xchg
fbstp
inc
and
add
pushf
mov
popa
in
scas
jp
cmpsb
outsl
es
mov
and
mov
adc
jne
test
aas
jge
sub
test
in
sarb
push
add
outsb
pop
jmp
xchg
pushf
fidivrl
xchg
cs
mov
mov
xchg
pop
mov
sub
cs
mov
sbb
sub
mov
rorb
add
push
aaa
add
ja
inc
test
dec
cmp
sbb
cmp
ret
imul
test
out
push
jne
ret
sub
jne
inc
in
push
and
mov
mov
pusha
stos
adc
pop
pushl
push
mov
mov
fsubrs
ljmp
cmp
dec
nop
shll
mov
or
jnp
cmc
sub
daa
add
push
mov
scas
push
in
mov
jp
xor
sbb
push
xchg
sbb
add
push
xchg
lret
mov
cmp
ds
clc
lock
popa
and
ficompl
sbb
pop
xor
or
and
sub
daa
out
stos
jp
jmp
xor
jmp
lahf
mov
add
xchg
mov
out
mov
sub
cltd
pop
scas
cmp
insb
in
xor
mov
jecxz
aam
incb
inc
jle
pusha
in
jg
arpl
dec
js
testb
pop
mov
iret
lds
jge
fildll
movsl
ja
sub
shll
add
pusha
and
jge
sub
in
push
loop
test
out
mov
pushf
je
lret
pop
pop
inc
mov
add
mov
rol
std
mov
or
add
sub
xchg
push
and
sbb
lcall
sbb
pop
cmp
cmp
jbe
xchg
mov
cs
xchg
sbb
and
dec
adc
mov
test
lret
sub
inc
or
cmp
or
jns
mov
sbb
or
int3
lods
inc
mov
mov
jl
cmp
shrb
push
mov
push
pop
leave
mov
pop
sbb
cltd
ret
es
xor
jno
lock
sub
xchg
scas
cmp
aaa
push
xchg
lcall
pop
lock
fsubl
orb
xor
lock
add
push
or
jmp
sub
dec
sub
test
push
aam
lds
adc
pop
mov
out
out
mov
sub
or
fcmovnb
pop
int
mov
cmp
xor
cmc
adc
test
pushf
lahf
cmpsl
es
es
jo
mov
popf
push
jl
fnstsw
je
int
jecxz
cmp
out
xlat
daa
jne
addr16
mov
push
mov
add
pushf
add
jnp
mov
fwait
sbb
loope
and
push
add
pop
xor
mov
adc
inc
mov
pop
cmp
jb
inc
inc
repnz
int
cli
ljmp
cmp
dec
xchg
test
test
pop
or
cmc
pop
test
pop
mov
jae
and
mov
xchg
dec
jecxz
sub
pop
xor
pushf
bound
cmp
test
jecxz
mov
in
pop
sarb
je
cli
ret
aas
xor
popf
add
pop
adc
inc
clc
mov
or
lock
mov
mov
fcompl
inc
lahf
mov
xchg
push
xchg
cmp
mov
out
lret
mov
out
sbb
andb
pop
xor
outsl
and
clc
imul
addb
fs
add
data16
stos
mov
mov
hlt
in
aaa
sub
mov
les
in
pop
ret
or
fmull
cmp
fcmovnb
pushf
loope
jo
pop
testb
xor
xchg
sub
jo
or
je
fnstcw
xorb
mov
push
stc
ret
cmp
dec
jge
imul
mov
or
mov
test
jp
inc
rclb
aad
cld
repnz
je
repz
jns
into
cmpsl
adc
inc
cltd
idivb
jb
repnz
sti
loop
cmpsb
adc
push
das
sub
inc
jb
mov
insb
popa
inc
negb
lods
lret
sbb
iret
bound
push
int3
xchg
popf
add
xor
imul
cmp
inc
cmc
std
sub
jno
xchg
cli
addr16
mov
notb
std
cmp
sbb
insl
inc
fsts
add
jmp
xor
cmc
daa
add
push
imul
aad
aam
sub
cmp
in
mov
add
enter
lds
push
stos
cmc
jae
cmp
leave
test
push
iret
jge
aas
mov
push
test
or
aas
in
or
lods
imul
ljmp
jecxz
sub
and
push
popf
flds
mov
adc
xor
mov
fs
mov
out
iret
pop
mov
fwait
mov
stc
push
jp
push
loop
fstpl
repz
pop
sbb
mov
je
xchg
gs
repnz
fidivl
sbb
testb
jge
sti
pop
sbb
movsb
rcrl
fldt
adc
add
enter
dec
in
repz
ficoml
mov
stos
jae
loope
aas
hlt
ljmp
jo
popf
in
inc
fmuls
pop
inc
ret
sub
fdivrs
sbb
mov
jg
addr16
les
xlat
push
inc
pop
and
pop
adcl
add
sti
js
icebp
fildll
fld
nop
sbb
aad
or
pop
loop
pop
pop
adc
cmp
sbb
popf
inc
cmp
xchg
or
ret
les
cmpsl
int
sbb
inc
sbb
xchg
jo
xor
cld
in
xchg
pop
xchg
add
cmc
cmpsb
test
sarb
mov
cmpsb
aaa
push
rorb
or
xchg
test
sub
shr
loope
xchg
shlb
and
daa
ret
jmp
dec
cld
ss
push
sahf
movsl
or
xlat
sbb
lcall
int
mov
pop
add
and
pop
mov
pop
add
fwait
jmp
push
scas
push
movsl
movsb
dec
xchg
or
pop
dec
inc
scas
inc
lahf
in
jae
push
decb
adc
int
and
or
jnp
les
cmpl
ret
lret
nop
pop
ds
in
divb
aaa
into
and
push
test
inc
push
mov
push
mov
and
inc
addl
mov
mov
mov
das
test
movsb
sub
xor
pusha
incl
rclb
rcll
cmp
test
add
decb
push
loopne
mov
inc
sub
mov
cltd
ljmp
test
clc
mov
das
loope
imulb
jno
mov
lods
and
mov
imul
jge
std
scas
test
mov
imul
mov
inc
sub
lret
dec
rolb
adc
push
mov
lahf
pop
xor
xchg
int
cmp
js
repnz
mov
xchg
mov
loope
pop
inc
not
adc
and
icebp
adc
pushf
sub
test
xchg
loope
in
push
adc
mov
insb
call
scas
or
test
scas
sbb
scas
jge
sbb
das
sti
clc
repz
ss
push
mov
sbb
jp
mov
das
rorb
cmp
jae
mov
add
nop
mov
xchg
jmp
mov
add
jb
out
fwait
das
sub
add
ss
test
fs
adc
sbb
idivl
jge
call
mov
adc
scas
testl
icebp
dec
and
fldenv
loop
aam
or
jb
jae
ret
ret
out
shll
xor
daa
add
insl
push
pop
icebp
sub
mov
rcl
dec
and
inc
fstpl
push
cmp
in
adc
leave
pop
rorb
subb
inc
loop
mov
mov
fcompl
xor
in
mov
popa
xchg
cld
gs
lret
test
icebp
dec
xchg
fstpt
out
sub
loopne
out
rolb
sbb
jl
lcall
and
and
fidivs
mov
je
adc
imul
jnp
dec
lds
jg
and
adc
test
xor
test
mov
in
bound
jae
fisubrs
loope
aad
adc
scas
jp
or
hlt
or
repz
mov
cmp
aas
xchg
shrl
lret
sub
inc
mov
adc
xchg
outsb
mov
xchg
add
jb
ret
cwtl
scas
push
ret
mov
les
clc
xor
or
mov
xchg
pop
fnsave
inc
push
mov
push
orl
or
add
sub
sbb
sub
je
ret
cmpsb
mov
dec
ret
cld
and
adc
push
addr16
lock
sub
scas
xor
mov
mov
imul
jl
cmp
icebp
insl
lods
test
lcall
inc
scas
dec
popf
mov
insl
out
jae
fiadds
lret
test
mov
int3
xor
inc
sar
movsl
insb
lret
imul
outsb
adc
fldl
and
push
or
and
or
mov
faddl
mov
fiaddl
stc
out
jge
das
jb
cmpsb
cmp
sbbb
pop
xchg
add
pop
pop
lock
mov
stc
push
dec
push
and
js
pop
inc
mov
cmpl
arpl
sub
outsb
mov
sub
subl
fnsave
test
adc
sbb
lahf
dec
xor
enter
testb
push
fucomip
mul
mov
mov
call
xor
xchg
dec
dec
ficompl
pop
push
iret
pop
sbb
lea
pop
and
cmp
inc
pop
xchg
lcall
sub
jl
dec
mov
or
sahf
pop
cltd
sbb
cmp
inc
and
popa
and
xlat
out
add
inc
rclb
mov
fstpl
sub
fidivrs
and
add
dec
jo
loop
jle
mov
and
dec
out
or
mov
push
arpl
stos
gs
mov
add
xchg
pop
xchg
pop
cwtl
pushf
dec
mov
dec
mov
imul
cmp
loop
xor
into
imul
stos
adc
mov
add
add
mov
mulb
or
sbbb
mov
push
ljmp
repnz
mov
rcl
pop
movb
aas
mov
enter
add
ficompl
scas
push
or
mov
jl
aaa
mov
fs
addr16
mov
sub
xchg
jecxz
xchg
push
dec
sub
mov
inc
dec
jge
cmp
jo
xlat
add
mov
movzbl
sub
add
cmp
test
into
clc
pop
lea
sbb
adc
push
outsb
xor
sub
push
inc
inc
ss
mov
cmpsb
into
xlat
push
dec
jp
add
scas
mov
bound
stos
pop
and
dec
imul
insl
pop
mov
xchg
xor
movsl
dec
dec
fistl
mov
xchg
and
aad
pop
cltd
nop
inc
inc
into
scas
ret
push
inc
int
jmp
icebp
fiaddl
daa
or
fistpl
rcll
pop
pushf
adc
sarl
dec
dec
xor
cwtl
jbe
cs
dec
push
add
sub
cmp
cmpsb
and
add
dec
lods
push
mov
test
lock
pop
fisubrl
jp
or
push
or
jae
mov
rcr
sub
or
shrl
push
subl
scas
sbb
mov
test
testb
jge
int3
pusha
loope
dec
sbb
inc
adc
push
adc
xchg
mov
cli
add
mov
xchg
mov
stos
jecxz
and
popa
jmp
and
aas
test
test
ss
test
aaa
sub
inc
rolb
scas
stc
cmc
packssdw
jno
jb
xor
stos
out
mov
hlt
xchg
pop
data16
mov
inc
mov
fists
stos
or
fs
sub
push
xchg
push
xchg
iret
cmc
sahf
insb
dec
sub
cs
in
cli
cmp
jmp
mov
imul
cltd
sbb
aad
mov
je
daa
andl
out
cltd
lods
in
mov
dec
scas
push
and
inc
cld
jg
inc
xor
stc
addr16
pop
daa
xor
mov
mov
xor
cmp
push
inc
xchg
dec
cmpsl
test
mov
cld
inc
pusha
cmp
shr
sbb
lods
push
add
fisttpl
repnz
bound
outsl
cmp
les
jae
cmp
outsl
mov
lds
orb
ss
jae
loope
xor
pop
mov
pop
mov
cld
xor
ret
movl
cmpsb
fistps
mov
ret
scas
test
fimull
jl
cmp
pop
sub
xlat
call
jg
mov
dec
pop
mov
imul
cmp
leave
adcb
and
xor
xor
movsb
cld
jns
mov
iret
rorl
pop
xchg
sbb
mov
mov
cmp
push
loope
mov
loopne
jle
fwait
dec
xchg
push
in
je
mov
inc
xchg
xlat
lock
lahf
xchg
loopne
mov
lea
xor
cmp
pop
ljmp
xchg
xchg
or
xor
ret
cli
cli
hlt
pop
pushf
xchg
xchg
adc
xor
mov
fs
dec
inc
lret
in
xor
pop
xchg
mov
and
push
ja
xchg
fsts
sbb
lods
orl
xchg
xor
adc
fsubrl
mov
ret
mov
repnz
push
fsubs
mov
jecxz
sbb
pusha
rcrb
push
mov
inc
aas
jbe
int3
xchg
xor
push
or
mov
mov
test
cmc
sub
loop
sbb
mov
loopne
mov
std
and
jnp
lea
cmpsb
jecxz
sbb
mov
mov
ret
enter
mov
or
mov
xchg
add
sbb
mov
or
stos
sub
imul
lods
sub
std
icebp
or
stos
xlat
mov
outsb
imul
frstor
stos
daa
arpl
xorb
cli
jbe
repnz
repnz
nop
test
jle
scas
mov
fldenv
cmp
add
out
icebp
or
cmp
es
lret
scas
push
inc
hlt
mov
adc
pop
testb
out
xlat
mov
jbe,pn
stc
repnz
mov
sub
decb
les
pop
push
xchg
or
xchg
cltd
mov
xor
ror
in
xor
mov
lret
mov
sbbl
xor
es
repnz
aas
insb
sbb
xchg
sub
mov
das
add
enter
pop
pop
stos
enter
ret
into
push
mov
ja
add
sub
das
inc
test
out
loop
jmp
push
inc
sbb
lea
adc
pop
outsb
fdivrp
or
jmp
mov
ret
mov
add
dec
jg
sub
add
cmpsb
fstps
aad
scas
dec
mov
mov
adc
out
xor
daa
sub
bound
mov
mov
mov
scas
lods
test
ss
sub
push
outsl
and
pop
jmp
out
insl
mov
or
dec
xor
cwtl
lods
std
hlt
cltd
or
inc
cmp
and
xor
jl
ret
dec
out
scas
mull
mov
in
jno
cld
cmp
test
adc
fstpl
rolb
push
aam
push
jecxz
lea
js
out
inc
sbb
mov
jns
stc
pop
and
lea
pop
ds
addr16
in
shlb
data16
xchg
push
sub
push
pop
fsubl
push
cwtl
inc
sbb
push
push
daa
xor
fsts
dec
sub
xorl
sub
push
mov
call
dec
mov
xchg
insb
clc
into
inc
hlt
mov
icebp
cmp
lods
call
dec
loopne
pop
lcall
andb
or
add
push
int3
ljmp
loope
jg
jae
push
or
dec
pop
mov
pop
je
cmc
test
movsb
int
stc
pop
jo
cmp
das
sbb
bndstx
sub
xchg
jns
inc
sub
insb
xor
aaa
cmp
imulb
fistl
or
fcomps
jmp
dec
fmull
cmp
and
pop
sbb
and
mov
xchg
xor
jbe
lds
xchg
xor
rol
mov
aaa
cwtl
mov
mov
fwait
mov
outsb
out
aam
mov
pop
dec
cmpsl
mov
cmp
or
jg
inc
ffreep
push
add
shrl
shl
inc
mov
cmp
movsb
in
cltd
adc
stos
in
push
sti
mov
sbb
test
popa
inc
xor
pop
jg
xor
pop
movsb
or
dec
ss
aam
mov
xchg
mov
jl
inc
or
xchg
mov
push
loop
dec
fldt
xchg
shll
loop
repnz
incl
add
xchg
movsl
mov
sub
fcmovb
xchg
test
dec
xor
add
mov
out
dec
arpl
inc
xchg
add
mov
and
or
int3
pop
insb
jo
aaa
push
mov
or
and
inc
inc
adc
jge
mov
mov
aam
or
ja
push
push
jo
or
mov
mov
add
std
and
lods
inc
sahf
mov
jbe
jno
std
or
cwtl
cs
fcoms
sub
notl
aam
sbb
sub
pop
cmpsb
test
pop
sbb
push
pop
cmpsb
nop
jae
insl
or
or
ret
sub
lret
movsb
jl
lods
cmp
push
in
add
test
lods
sbb
inc
sarb
add
sbb
loope
in
or
dec
push
or
movl
out
iret
test
adc
jp
push
inc
roll
lea
fimull
adc
outsb
xchg
mov
sbb
stos
pop
pop
int3
clc
add
ret
mov
sub
out
and
cli
adcb
cmpsl
aaa
mov
lcall
daa
scas
mov
popf
mov
mov
add
cmpsl
sbb
sti
lods
dec
jg
push
mov
mov
sub
int
sahf
jno
movl
dec
push
xlat
jae
shl
sub
mov
pushf
into
ret
leave
fcoms
jl
jmp
repnz
icebp
jo
shll
jmp
clc
out
adcb
cmp
shlb
out
and
mov
inc
xchg
jbe
mov
nop
mov
mov
sbb
arpl
sub
inc
in
push
in
cmc
jp
mov
or
lock
ja
and
subl
mov
add
out
push
mov
adc
not
pmaddwd
xchg
enter
stos
aam
mov
or
sub
fs
imul
stos
pop
cmp
push
push
cmpsl
cmpb
in
pop
into
decl
call
jne
out
adc
or
loopne
inc
xchg
cld
push
pop
pop
jne
sub
mov
mov
stc
mov
pop
push
arpl
cmpsb
xor
lahf
add
stos
pop
js
or
test
ja
outsl
and
and
popf
sbb
lods
movsl
test
bound
fistpll
mov
push
fcomi
mov
rcll
or
dec
nop
ds
insb
cmc
out
ljmp
loope
aam
jnp
pop
cmp
inc
cmp
cmpl
pop
pop
xchg
xchg
xor
in
adc
jg
int3
cmpsb
dec
lcall
mov
cmc
ljmp
adc
jle
jbe
out
shrl
in
rcll
sbb
idiv
dec
sbb
dec
hlt
in
stc
push
in
iret
mov
mov
mov
popf
add
movsl
push
movsb
aaa
loop
xor
adc
push
and
or
sub
sub
push
pop
test
mov
and
and
fstps
mov
fnsave
mov
lea
pop
sub
stos
data16
fwait
sub
or
pop
scas
adc
int3
fs
mov
mov
pusha
cmp
ja
pop
popf
lea
cltd
ds
adcb
inc
daa
stc
insb
inc
mov
movsb
decb
out
shrb
cld
sbb
addr16
jmp
in
ds
mov
insb
mov
push
xchg
xchg
ret
push
jne
mov
insl
in
dec
stos
push
fadd
adc
stc
pop
pop
adc
mov
sub
loope
or
mov
cmc
fsubrs
sti
loop
pop
ja
and
test
and
pop
jle
push
sti
jp
xor
int3
cmpsl
addr16
in
jecxz
mov
inc
fucomi
lock
sbb
loopne
insb
je
data16
fstpl
dec
icebp
ljmp
sub
je
push
add
imul
je
jl
pushf
sbb
mov
sti
loop
mov
ret
lret
mov
cmpl
xor
or
xchg
int3
cmp
pop
rcrb
sbbl
adc
mov
adc
cltd
mov
sbb
inc
call
dec
pop
ja
lds
pop
add
fnsave
idivl
mov
pop
out
mov
mov
push
jmp
fnsave
sub
adc
pop
scas
xchg
cwtl
or
mov
sub
rolb
ss
cltd
sbb
arpl
in
add
in
xor
sbb
scas
push
mov
bound
mov
add
lret
or
imul
outsb
bound
or
add
movsl
pop
mov
aad
popw
xchg
int3
dec
out
push
xorl
pop
mov
mov
xor
or
mov
fsubrs
push
lea
mov
loop
mov
sbb
imul
pop
insb
inc
enter
les
pop
das
test
loope
cld
xchg
call
xchg
gs
int
int3
jmp
jmp
cmc
hlt
adc
add
cmp
fbld
mov
and
mov
mov
and
cmc
cltd
xchg
lahf
cmc
fs
outsb
inc
dec
adc
jl
or
lods
add
lds
stos
iret
cmc
or
and
pop
push
arpl
cmp
cs
cmp
sub
push
hlt
aas
outsl
inc
xor
in
mov
fildl
adc
or
out
arpl
dec
inc
sub
cmp
mov
or
mov
jle
test
outsl
xchg
incl
fistpl
mov
aad
fistl
loope
pop
cmp
sbb
insl
inc
negl
sub
cs
pop
cmp
lock
jge
add
lds
aam
sbb
pop
cmpsl
in
mov
cmpsb
pop
lock
mov
cmp
sub
push
decb
xchg
lea
std
das
stos
in
orb
loope
enter
jecxz
sub
cli
mov
mov
and
push
ja
jmp
out
xchg
clc
adc
jbe
dec
ret
jle
pop
loop
sti
jmp
aam
and
cmp
pop
jo
jecxz
jno
xchg
out
or
aaa
jbe
xchg
cld
fidivrs
mov
lds
xchg
jge
jp
in
or
sub
sub
and
push
pop
subb
xlat
mov
push
dec
sti
push
lcall
shll
mov
adc
popa
cmc
pop
add
fsubs
add
fistps
add
or
and
jae
imul
sti
in
sub
imul
pop
and
sub
test
mull
icebp
test
mov
mov
shlb
pop
movsl
lret
mov
dec
scas
mov
in
rcrl
jle
loopne
int3
cmp
stos
je
push
gs
out
loopne
lock
cmp
mov
mov
fidivs
add
sub
mov
mov
repnz
je
and
dec
adc
xchg
jl
fildll
jp
mov
int3
jno
cwtl
out
lea
ss
fwait
mov
dec
mov
ret
sahf
lods
mov
popa
sbb
test
int
jecxz
fldcw
or
lret
scas
bound
inc
inc
ret
push
stos
lock
cmp
push
aam
add
mov
insb
sub
stos
mov
daa
clc
jge
xor
pop
xchg
arpl
aaa
and
stc
xchg
aam
mov
stos
sti
jno
inc
leave
aas
xor
scas
iret
loop
pop
push
cmc
mov
adc
sub
inc
adc
add
push
mov
faddl
pop
jmp
mov
xchg
adc
les
cltd
test
sbb
shll
ljmp
adc
subb
cmp
or
sbb
addb
push
repz
loop
xchg
adc
clc
movsb
movsb
insl
pop
xchg
mov
adcb
push
in
cs
add
mov
nop
add
xor
test
push
cmovae
sbb
mov
repz
push
je
nop
jle
xor
jo
hlt
cmp
ss
comiss
out
cmp
addr16
adc
shl
mov
mov
xchg
cmp
les
add
out
cwtl
idivb
lods
inc
mov
daa
mov
ret
xchg
mov
mov
in
hlt
jge
sbb
flds
cltd
mov
inc
sbb
imul
push
add
ficompl
sbb
shrl
test
cmc
sbb
pop
adc
xchg
xchg
mov
iret
and
leave
andl
ss
mov
sbb
sbb
xor
arpl
dec
fisttpll
cmp
xor
subb
arpl
or
mov
repz
cli
filds
jne
pop
nop
add
es
shl
mov
loope
fsub
int3
pop
ljmp
imulb
push
int
pop
test
fildl
add
dec
aam
push
movsl
xor
xchg
mov
nop
divb
xchg
loopne
addl
and
in
xchg
pop
xor
daa
leave
cmp
push
xor
mov
adc
adc
xchg
jecxz
enter
arpl
iret
rcrl
mov
mov
sbbl
sub
sub
out
mov
add
dec
popl
push
and
pop
and
sbb
jne
ljmp
pop
mov
testb
mov
lock
pop
in
ficomps
push
mov
faddl
or
cmp
jg
inc
js
out
stos
repz
adcl
cltd
jge
push
adc
sbb
aad
fwait
mov
jecxz
dec
pop
int3
mov
repnz
inc
xorb
ret
clc
and
adc
icebp
mov
pop
dec
push
test
addb
push
mov
stos
push
test
lods
jnp
ljmp
ror
movsb
add
in
or
sub
mov
sahf
cmc
jle
and
dec
icebp
push
sub
mov
pop
test
push
out
stos
jge
dec
into
mov
movsb
xchg
daa
loop
cmpsb
cmp
adc
sti
imul
dec
bound
and
js
aas
test
xchg
sbb
aam
jnp
inc
hlt
stos
shl
loop
lahf
or
push
lret
sbb
in
movsb
test
or
in
gs
lret
dec
dec
clc
mov
ljmp
jb
mov
or
or
xor
add
test
cmp
test
and
es
aam
xor
rorb
jo
and
mov
out
sub
ljmp
cmp
mov
cmp
xlat
jmp
jo
push
test
cmp
jb
aas
out
dec
xor
inc
dec
xlat
push
rcrb
rorl
xor
jmp
testb
mov
inc
cmp
in
lret
mov
ss
fcompl
xor
pushf
test
mov
cmpsl
stos
add
movsb
imul
testl
pop
stc
gs
fs
jno
divl
stc
dec
xor
add
add
push
jae
mov
or
mov
lahf
subl
and
and
stc
ds
pop
or
mov
lock
mov
das
lods
mov
imul
xchg
insb
lock
xchg
and
pushf
nop
scas
stos
mov
add
push
fmulp
popa
testl
loop
cltd
pop
lock
pop
fmul
mov
cmc
inc
push
sahf
sub
test
mov
add
or
jp
cmp
mov
lcall
sti
sub
mov
int
sbb
or
xchg
inc
xor
xor
div
mov
sbb
loop
mov
in
mov
push
fldt
add
add
cmpsl
shrl
cwtl
xchg
loope,pt
mov
std
sbb
mov
je
mov
mov
pop
outsl
test
es
imul
hlt
dec
adc
or
pop
mov
or
push
psraw
stc
aaa
xor
dec
pop
lahf
lds
xor
or
or
xor
mov
test
imul
mov
push
dec
movsl
idivb
mov
rorb
movsl
jae
imul
pop
cmp
sahf
test
out
cmp
mov
shr
loope
xchg
movntps
int3
push
shll
into
clc
scas
or
stos
pop
out
scas
push
frstor
or
and
fdivrs
stc
outsl
pusha
nop
jle
in
arpl
push
push
mov
xchg
cld
xchg
inc
mov
dec
jmp
int3
pop
mov
cld
imul
sbb
dec
lahf
popa
cmp
addl
fcoms
aaa
rorb
in
mov
or
les
mov
fs
sub
mov
lods
inc
cmc
mov
sbb
movsb
and
testl
push
popf
xor
clc
sbb
rorb
pop
jmp
bound
lods
mov
mov
push
arpl
mov
popf
xchg
ljmp
xchg
jno
imul
sti
xchg
test
lret
pop
sbbb
in
pop
add
lods
push
push
dec
adc
test
jmp
or
shll
scas
cs
rorl
pop
rcrb
push
cli
xor
dec
sub
test
ja
iret
lds
sbb
psrlq
pop
nop
stos
fistpl
jmp
ljmp
pop
cmpsb
dec
sbb
push
pop
stos
das
mov
js
dec
das
cwtl
fs
or
add
fcmovnb
dec
hlt
hlt
and
mov
ja
or
cli
fcoml
inc
adc
push
xlat
mov
les
leave
mov
mov
push
scas
push
xrelease
dec
sbbl
bound
sbb
sbb
scas
adc
jnp
mov
ljmp
cmpsb
push
daa
cmp
jle
in
or
sbb
xchg
rcll
jg
js
push
mov
insb
pop
clc
cld
jno
shlw
popa
out
mov
or
call
push
iret
and
mov
lea
xor
stos
mov
ds
aad
inc
xchg
mov
xor
clc
pop
inc
and
cmp
push
lds
cmp
xchg
push
jo
lcall
jo
dec
cmp
aam
inc
mov
inc
adc
mov
mov
mov
inc
into
rclb
subl
push
or
mov
mov
xchg
jle
pop
cld
test
das
push
push
xchg
pop
in
xor
outsb
xor
test
mov
mov
pusha
dec
add
leave
sbb
cwtl
aam
test
xor
lods
push
sahf
into
or
jl
lahf
cmc
dec
sub
popa
sbb
loope
push
repz
xor
cmpsl
push
pop
or
std
mulb
jl
mov
sub
adc
rorb
inc
jnp
mov
mov
xor
jp
nop
rep
mov
and
insb
je
add
rol
call
mov
mov
lcall
jnp
nop
sub
or
stc
popf
out
xchg
shlb
mov
mov
mov
jmp
movsb
and
lahf
mov
jg
lods
push
push
repz
aas
pop
mov
or
test
inc
inc
adc
cwtl
in
jmp
xor
rcr
fwait
or
mov
sti
push
in
test
stos
aad
rcr
jnp
rol
xor
call
sbb
dec
pop
or
mov
subb
mov
mov
adc
stc
adc
and
lods
pop
sbb
popa
loope
pop
pop
and
stos
fistpl
cld
dec
fadd
divb
lock
popa
pop
jbe
ret
lods
sbb
lret
push
cmc
outsb
adcb
scas
pop
outsb
or
adc
fstpt
imul
mov
cmp
add
sarb
mov
push
movsb
hlt
fwait
and
out
sbb
rcrb
pop
inc
in
ret
push
call
ficomps
and
loopne
mov
jae
mov
jne
mov
cs
int
push
jecxz
inc
xchg
jo
repnz
leave
push
inc
adcb
cmp
pop
test
jge
adc
lret
es
sbb
ret
test
dec
cld
sti
and
sbb
cs
inc
mov
xor
inc
mov
push
add
pop
adc
lahf
jg
les
mov
sbb
hlt
sti
cmp
insl
or
loope
pop
and
mov
inc
fs
stc
repnz
test
aam
out
add
mov
and
dec
outsb
inc
insl
test
or
push
mov
mov
sub
push
lods
jnp
dec
jno
dec
leave
xchg
sub
cmp
adc
inc
rcrl
pop
pop
leave
push
movsb
ds
imulb
insb
pop
sub
dec
out
rclb
xchg
sub
jl
clc
push
cmc
hlt
gs
jo
rol
jbe
inc
adc
cmpsb
sahf
xchg
or
out
inc
loope
adc
paddsw
aam
push
lock
pop
sarl
dec
sub
lock
ret
push
sub
repnz
lea
jne
std
mov
jo
mov
sub
addl
mov
test
repz
mov
test
jg
lahf
psrld
adc
mov
sbb
test
.byte
int
