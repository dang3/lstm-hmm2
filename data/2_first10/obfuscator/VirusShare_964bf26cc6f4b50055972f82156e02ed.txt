add
or
add
add
jo
add
mov
add
adc
add
lock
addb
add
rclb
orb
add
sbbb
orb
add
sbb
orb
add
add
add
lock
add
xor
add
jo
add
add
add
add
add
add
adc
add
add
or
add
xor
add
pop
add
addb
add
add
add
add
add
add
addb
add
add
addb
add
add
orb
add
add
jo
add
cwtl
add
orb
add
add
orb
call
add
add
add
orb
add
add
orb
add
add
mov
add
add
add
add
add
add
add
add
add
and
add
mov
or
xor
add
in
add
add
add
add
add
or
add
add
in
or
xor
add
in
add
add
add
add
add
or
add
add
sbb
add
in
add
add
add
add
add
or
add
xchg
or
xor
add
in
add
add
add
add
add
or
add
add
add
xchg
or
xor
add
in
add
add
add
add
add
or
add
add
add
or
xor
add
in
add
add
add
add
add
or
add
add
add
or
xor
add
in
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
or
add
add
rcrb
add
in
add
add
add
add
add
or
add
fwait
or
xor
add
in
add
add
add
add
add
or
add
pushf
or
xor
add
in
add
add
add
add
add
or
add
add
add
add
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lahf
or
xor
add
in
add
add
add
add
add
or
add
add
or
add
in
add
add
add
add
add
or
add
add
cmp
or
xor
add
in
add
add
add
add
add
or
add
mov
add
in
add
add
add
add
pop
add
add
subb
add
dec
add
subb
add
cwtl
add
adcb
add
rolb
adc
add
call
add
add
add
add
add
add
add
or
add
add
add
add
in
add
add
add
add
add
add
add
cmp
add
add
in
add
add
add
add
add
add
add
pusha
add
add
or
add
add
add
add
add
add
add
add
mov
add
add
in
add
add
add
add
add
add
add
mov
add
mov
or
add
add
add
add
add
add
or
add
add
add
daa
push
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
aas
add
add
add
pop
add
inc
pop
add
push
add
add
add
add
add
add
pop
add
or
add
xor
add
pop
or
orb
add
orb
orb
add
add
add
or
orb
add
clc
or
orb
add
and
add
dec
or
adcb
add
jo
add
cwtl
or
adcb
add
rorb
adcb
add
or
adcb
add
cmp
add
pusha
or
sbbb
add
mov
add
mov
add
fmuls
add
add
add
sub
add
push
or
sbbb
add
js
add
mov
add
add
or
andb
add
lock
andb
add
sbb
andb
add
inc
or
andb
add
add
nop
or
andb
add
mov
add
add
or
subb
add
or
add
xor
add
pop
or
add
orb
add
add
add
or
add
clc
or
add
and
add
dec
push
add
jo
add
cwtl
push
add
rorb
xorb
add
push
add
adc
add
cmp
add
pusha
sldt
mov
add
mov
add
fmuls
add
add
add
sub
add
push
adc
cmpb
add
js
add
mov
add
add
adc
addb
add
add
add
add
add
add
add
add
add
xor
add
out
sbb
push
add
add
add
add
add
add
add
pop
pop
add
dec
int3
sbb
call
add
add
add
add
add
add
add
addb
add
iret
sbb
sub
add
in
add
add
add
add
add
add
add
test
add
pop
rcrb
test
add
in
add
add
add
add
add
add
add
rolb
add
push
fistps
test
add
in
add
add
add
add
add
add
add
clc
pop
add
scas
out
add
add
in
add
add
add
add
add
add
add
and
add
push
in
sbb
test
add
in
add
add
add
add
add
add
add
dec
or
add
adc
add
add
add
add
add
add
add
add
jo
add
and
add
add
add
add
add
add
add
add
cwtl
or
add
or
add
add
add
add
add
add
add
add
rorb
add
sbb
sub
add
in
add
add
add
add
add
add
add
call
or
push
add
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
add
add
add
pusha
or
add
clc
sbb
test
add
in
add
add
add
add
add
add
add
mov
add
push
adc
add
add
add
add
add
add
add
add
mov
add
add
sbb
push
add
add
add
add
add
add
add
fmuls
add
pop
rcrb
add
add
add
add
add
add
add
add
add
add
mov
sbb
test
add
in
add
add
add
add
add
add
add
sub
add
dec
cmpsb
sbb
push
add
add
add
add
add
add
add
push
or
add
sbb
call
add
add
add
add
add
add
add
js
add
js
sbb
call
add
add
add
add
add
add
add
mov
mov
add
in
add
add
add
add
add
add
add
enter
test
sbb
test
add
in
add
add
add
add
add
add
add
lock
add
mov
add
add
add
add
add
add
add
add
sbb
add
cmp
add
in
add
add
add
add
add
add
add
inc
or
add
jl
add
add
in
add
add
add
add
add
add
add
push
push
sbb
test
add
in
add
add
add
add
add
add
add
nop
or
add
adc
add
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
loopne
add
nop
cmp
add
add
in
add
add
add
add
add
add
add
or
add
xor
add
add
in
add
add
add
add
add
add
add
xor
add
sbb
call
add
add
add
add
add
add
add
pop
or
add
sbb
sub
add
in
add
add
add
add
add
add
add
orb
jo
sbb
test
add
in
add
add
add
add
add
add
add
test
add
enter
test
add
in
add
add
add
add
add
add
add
rorb
add
sbb
push
add
add
add
add
add
add
add
clc
or
add
and
add
add
add
add
add
add
add
and
sbb
test
add
in
add
add
add
add
add
add
add
dec
or
sbb
push
add
add
add
add
add
add
add
jo
add
inc
rcrl
add
add
in
add
add
add
add
add
add
add
cwtl
or
sbb
enter
in
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
add
call
mov
add
add
add
add
add
add
add
add
adc
add
add
add
in
add
add
add
add
add
add
add
cmp
add
cwtl
lods
sbb
push
add
add
add
add
add
add
add
pusha
push
add
lock
sbb
test
add
in
add
add
add
add
add
add
add
mov
add
mov
add
in
add
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
fmuls
add
clc
mov
add
add
add
add
add
add
add
add
add
add
push
jnp
add
add
add
add
add
add
add
add
sub
add
test
sbb
test
add
in
add
add
add
add
add
add
add
push
sldt
add
test
add
in
add
add
add
add
add
add
add
js
add
cwtl
pop
sbb
push
add
add
add
add
add
add
add
mov
cmp
add
add
add
add
add
add
add
add
enter
dec
sub
add
add
add
add
add
add
add
add
lock
loopne
sbb
push
add
add
add
add
add
add
add
sbb
add
cmp
add
in
add
add
add
add
add
add
add
inc
adc
add
or
add
add
add
add
add
add
add
add
push
pop
sbb
push
add
add
add
add
add
add
add
nop
adc
add
and
add
add
add
add
add
add
add
mov
rcrb
add
add
add
add
add
add
add
add
loopne
add
jo
sbb
push
add
add
add
add
add
addb
add
adc
addb
add
add
add
add
add
add
add
or
add
adc
add
adc
mov
add
in
add
add
add
add
adc
add
add
adc
andb
add
adc
addb
add
push
adc
addb
add
mov
add
add
adc
orb
add
sbb
add
inc
adc
sbbb
sbbb
add
mov
add
add
adc
andb
add
xor
subb
add
adcb
push
js
add
add
add
add
add
add
add
add
add
add
lock
add
fsts
add
add
in
add
add
add
add
add
add
add
sbb
add
test
adc
js
add
in
add
add
add
add
add
add
add
inc
adc
add
fists
add
add
add
add
add
add
add
add
add
add
push
loopne
add
add
add
add
add
add
add
add
add
add
nop
adc
add
add
add
add
add
add
add
add
add
add
mov
in
add
add
add
add
add
add
add
add
add
add
loopne
add
pusha
jmp
add
in
add
add
add
add
add
add
add
or
add
push
ljmp
in
add
add
add
add
add
add
add
xor
add
icebp
adc
sub
add
add
add
add
add
add
add
add
pop
adc
add
cmc
adc
movsb
add
add
add
add
add
add
add
add
add
adcb
add
add
add
add
add
add
add
add
add
add
test
add
enter
rolb
add
in
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
add
or
add
adc
add
std
adc
cmpsb
add
add
add
add
add
add
add
or
add
adc
add
add
in
add
add
add
add
add
or
add
add
call
add
add
add
add
add
add
add
or
add
add
loopne
adc
cmp
add
in
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
adc
xor
add
in
add
add
add
add
push
add
add
add
adc
add
clc
adc
add
and
add
dec
push
add
jo
add
cwtl
push
add
rclb
adcb
add
call
push
add
adc
add
cmp
add
pusha
pop
add
mov
add
mov
add
fcoms
add
add
add
sub
add
push
sbb
addb
add
js
add
mov
sldt
enter
adc
add
lock
adcb
add
sbb
add
inc
sbb
adcb
add
add
nop
sbb
sbbb
add
mov
sldt
loopne
add
or
add
xor
add
pop
sbb
addb
add
add
add
add
add
add
add
or
add
adc
adc
sahf
add
add
add
add
add
add
add
or
add
push
add
fadds
add
add
add
add
add
add
or
add
push
add
insb
or
add
add
add
add
add
add
or
add
add
in
adc
add
add
in
add
add
add
add
add
or
add
adc
add
in
add
add
add
add
add
or
add
adc
add
in
add
add
add
add
add
or
add
push
add
mov
adc
push
add
add
add
add
add
add
add
or
add
pop
add
or
adc
add
add
add
add
add
add
add
or
add
pop
add
je
adc
pusha
add
add
add
add
add
add
add
or
add
add
aam
adc
sub
add
in
add
add
add
add
add
or
add
add
cld
push
adc
jo
add
in
add
add
add
add
add
or
add
pop
adc
push
add
add
add
add
add
add
add
or
add
pop
add
mov
add
add
add
add
add
add
add
or
add
pop
add
cwtl
and
add
add
in
add
add
add
add
add
or
add
sbb
add
and
add
add
add
add
add
add
add
add
or
add
add
test
adc
clc
add
add
add
add
add
add
add
or
add
add
mov
add
add
add
add
add
add
add
or
add
and
add
in
add
add
add
add
add
or
add
and
add
in
add
add
add
add
add
or
add
sbb
add
and
add
in
add
add
add
add
add
or
add
sbb
add
adc
loop
add
in
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
or
add
add
js
adc
faddl
add
in
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
or
add
xor
add
add
add
add
add
add
or
add
sbb
add
add
in
add
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
add
add
or
add
sbb
add
cmp
add
add
add
add
add
add
add
or
add
add
xchg
cmp
add
add
in
add
add
add
add
add
or
add
add
sarb
add
add
in
add
add
add
add
add
addb
add
add
add
sbb
addb
add
add
add
add
add
add
add
or
add
cmp
add
add
add
add
add
add
add
add
add
add
loopne
add
sbb
adc
or
add
in
add
add
add
add
adc
popl
add
sbbb
addb
add
test
add
rcrb
add
clc
sbb
sbbb
add
and
sbbb
add
dec
sbb
sbbb
add
jo
add
cwtl
sbb
sbbb
add
sbb
sbbb
add
adc
add
cmp
add
pusha
sbb
add
mov
add
mov
add
fcomps
add
add
add
add
add
add
add
add
add
cwtl
sbb
add
adc
adc
add
in
add
add
add
add
add
or
add
sbb
add
cmp
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
in
add
add
add
add
add
or
add
sbb
add
adc
adc
add
in
add
add
add
add
add
or
add
sbb
add
add
in
add
add
add
add
add
or
add
add
cwtl
cmp
add
add
in
add
add
add
add
add
or
add
cmp
add
add
in
add
add
add
add
add
or
add
cmp
add
add
in
add
add
add
add
add
or
add
sbb
add
cmp
add
add
in
add
add
add
add
add
or
add
sbb
adc
adc
add
in
add
add
add
add
add
or
add
sbb
adc
adc
add
in
add
add
add
add
add
or
add
add
adc
add
in
add
add
add
add
add
or
add
add
and
adc
adc
add
in
add
add
add
add
add
or
add
cmp
add
in
add
add
add
add
add
or
add
sbb
adc
adc
add
in
add
add
add
add
add
or
add
sbb
adc
adc
add
in
add
add
add
add
or
addb
add
add
mov
add
mov
add
fcomps
add
add
add
sub
add
push
pop
add
js
add
mov
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
lds
test
add
in
add
add
add
add
add
add
add
mov
lret
sbb
add
add
add
add
add
add
add
add
add
enter
cwtl
lret
sbb
adc
add
in
add
add
add
add
add
add
add
lock
add
adc
sbb
test
add
in
add
add
add
add
add
add
add
sbb
add
fs
scas
add
add
add
add
add
add
add
add
add
inc
pop
add
loopne
sbb
test
add
in
add
add
add
add
add
add
add
push
leave
sbb
add
add
add
add
add
add
add
add
add
nop
pop
add
jo
sbb
xor
add
in
add
add
add
add
add
add
add
mov
leave
sbb
pop
add
add
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
and
add
ret
dec
add
add
add
add
add
add
add
add
add
dec
and
addb
add
add
add
add
add
add
add
or
add
add
mov
sbb
push
add
in
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
or
add
inc
adc
adc
add
in
add
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
dec
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
addb
add
add
add
xor
cmp
xor
xor
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsl
add
imul
add
cmp
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
sub
and
aaa
add
and
xor
sub
and
xor
cmp
add
push
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
insb
add
jae
push
add
imul
outsl
add
outsb
add
outsl
add
add
add
js
add
add
sub
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
arpl
sub
and
inc
add
outsl
add
imul
and
inc
add
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
sbb
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
push
add
imul
outsl
add
outsb
add
outsl
add
add
add
js
add
add
pop
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
push
add
and
push
add
add
outsl
add
add
outsb
add
outsl
add
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
aaa
add
and
xor
sub
and
xor
cmp
add
push
add
add
add
jne
imul
inc
add
je
add
add
add
popa
add
jne
popa
add
jns
and
xor
xor
add
add
add
add
add
and
xor
xor
cmp
xor
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
add
add
add
add
adc
add
add
add
add
pop
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
xor
add
pusha
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fst
adc
adc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
cltd
adc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fst
sbb
cltd
adc
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sbb
cltd
cltd
cltd
sbb
fstp
fstp
fstp
fstp
fst
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
xchg
fstp
fstp
fstp
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sbb
fstp
fstp
fstp
fstp
sbb
cltd
cltd
cltd
cltd
cltd
sbb
fstp
fstp
fstp
fst
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
xchg
fstp
fstp
fstp
fstp
fstp
fst
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
xchg
fstp
fstp
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
xchg
adc
fstp
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
cltd
pop
cmp
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
cltd
pop
repz
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
add
cltd
cltd
cltd
cltd
pop
aas
cmp
fstp
fstp
sbb
add
or
aas
repz
fstp
fstp
fstp
sbb
add
or
aas
aas
cmp
fstp
fstpl
cltd
cltd
cltd
nop
add
add
cltd
cltd
cltd
cltd
sbb
xor
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
cltd
sbb
fstp
fstp
fstpl
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
cltd
cltd
cltd
sbb
fstp
fstp
fst
cltd
cltd
cltd
cltd
add
add
cltd
cltd
cltd
xchg
stos
stos
mov
aas
cmp
fst
cltd
cltd
cltd
cltd
nop
add
add
stos
sub
aas
repz
fstp
fstp
sbb
add
cltd
cltd
cltd
sbb
aas
cmp
fstpl
cltd
cltd
cltd
cltd
nop
add
cltd
cltd
cltd
sbb
xor
fstp
fstp
fst
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
xchg
stos
mov
xor
cmp
fstpl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sbb
stos
das
repz
fstp
fst
sbb
cltd
adc
stos
stos
mov
aas
cmp
fst
sbb
stos
stos
sub
stos
and
repz
fstp
fstp
rcll
adc
sbb
stos
stos
stos
stos
stos
mov
cmp
fstp
shl
xor
stos
stos
stos
sub
stos
stos
stos
and
fstp
fstp
fstp
fnstsw
xor
sub
stos
stos
stos
stos
stos
stos
cmp
fstp
fstp
shl
repz
stos
stos
stos
stos
stos
mov
fstp
fstp
fstp
fstp
fnstsw
xor
mov
stos
stos
stos
stos
stos
stos
stos
stos
cmp
fstp
fstp
fstp
shl
aas
sub
stos
stos
stos
mov
fstp
fstp
fstp
fstp
fstp
fnstsw
pushl
mov
stos
stos
stos
cmp
fstp
fstp
fstp
fstp
shl
xor
stos
stos
stos
stos
stos
stos
mov
fstp
fstp
fstp
fstp
fstp
fstp
fnstsw
xor
mov
stos
cmp
fstp
fstp
fstp
fstp
fstp
sar
repz
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
aas
xor
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
shl
aas
sub
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
aas
pushl
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
shl
xor
mov
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fnstsw
xor
cmp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sar
repz
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
aas
cmp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
rcr
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
incl
add
incl
add
loopne
incl
add
addb
incl
add
add
incl
add
add
jg
incl
add
add
aas
incl
add
add
pop
incl
add
add
pop
incl
add
add
ud0
add
loopne
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
rolb
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
aas
add
clc
add
add
pop
add
cld
add
add
sldt
incb
add
add
add
incl
add
jmp
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
incl
add
incl
add
incl
add
incl
add
inc
add
incl
add
jmp
add
incl
add
push
add
incl
add
clc
add
incl
add
cld
add
add
incb
incl
add
incl
incl
add
incl
inc
incl
add
out
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstl
adc
fstp
fstp
fstp
fst
adc
fstp
fstp
fstp
fstp
fstpl
cltd
cltd
cltd
cltd
cltd
sbb
fstp
fstp
rcrl
cltd
xchg
fstp
fstp
fstp
fstp
sbb
cltd
cltd
sbb
fstp
fstpl
cltd
nop
add
fstp
fstp
fstp
fstpl
cltd
nop
add
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
xchg
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
xchg
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
xchg
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
xchg
fstp
fstp
fstp
rcrl
cltd
cltd
cltd
xchg
fstp
fstp
fstp
rcrl
cltd
cltd
add
or
fstp
fstp
rcrl
cltd
cltd
add
or
fstp
fstp
rcrl
cltd
cltd
cltd
add
cltd
cltd
adc
fstp
fstp
fst
xor
cltd
xchg
xor
fstp
fstp
fst
lcall
cltd
cltd
cltd
cltd
cltd
pop
repz
fstp
fstp
sar
and
cltd
cltd
xchg
adc
repz
fstp
fstp
shll
sub
das
repz
fstp
fstp
shll
sub
and
fstp
fstp
fstp
sar
sub
and
fstp
fstp
fstp
sar
and
and
and
das
repz
fstp
fstp
shll
sub
das
repz
fstp
fstp
shll
sub
and
fstp
fstp
fstp
sar
sub
and
fstp
fstp
fstp
sar
sub
das
repz
fstp
fstp
shll
sub
das
repz
fstp
fstp
shll
sub
and
fstp
fstp
fstp
sar
sub
and
fstp
fstp
fstp
sar
sub
das
repz
fstp
fstp
shll
xor
xor
xor
xor
fstp
cld
pop
jmp
add
inc
add
incl
add
add
jg
add
jg
add
aas
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
incb
add
sub
add
adc
add
and
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
add
add
incl
add
incl
fst
adc
sbb
sbb
fst
cltd
add
adc
fstp
sbb
pop
fstpl
cltd
add
cltd
xchg
cmc
fstpl
cltd
add
cltd
xchg
lcall
cltd
add
cltd
xchg
and
sbb
mov
add
sbb
cltd
xchg
stos
stos
movsl
fst
adc
sbb
pop
repnz
stos
movsl
fstp
fst
lock
fstpl
movsl
fstp
fstp
fst
lock
fst
sarb
add
paddusw
add
fst
add
nop
add
add
fldl
add
roll
add
add
sar
pop
nop
add
setns
sub
add
xor
add
pusha
add
add
add
add
add
add
addb
addb
add
addb
lock
stos
aas
sub
aas
sub
add
add
sub
stos
pop
sub
lcall
add
jg
add
sub
stos
jg
add
jg
add
lahf
sub
push
lahf
sub
stos
lahf
sub
lcall
sub
push
mov
sub
mov
sub
push
fildll
add
fildll
add
ljmp
add
sub
stos
ljmp
add
ljmp
add
add
push
add
stos
add
incl
push
add
pop
push
add
push
add
pop
push
add
aas
push
add
push
add
aas
push
add
pop
push
add
push
add
pop
push
add
jg
add
push
add
jg
add
lahf
push
add
push
add
lahf
push
add
mov
push
add
mov
push
add
push
add
fists
add
push
add
push
add
call
add
jg
push
add
stos
add
incl
jg
add
jg
push
pop
jg
stos
pop
jg
lcall
jg
add
jg
push
aas
jg
stos
aas
jg
aas
jg
add
add
jg
stos
pop
jg
lcall
add
jg
add
jg
stos
jg
add
jg
add
lahf
jg
push
lahf
jg
stos
lahf
jg
lcall
jg
push
mov
jg
mov
jg
push
fistpll
stos
fistpll
fistpll
add
jg
push
jg
stos
jg
jg
add
stos
add
stos
add
add
add
stos
add
pop
stos
add
aas
stos
add
stos
add
aas
stos
add
pop
stos
add
stos
add
pop
stos
add
jg
add
stos
add
jg
add
lahf
stos
add
stos
add
lahf
stos
add
mov
stos
add
mov
stos
add
stos
add
fildll
add
stos
add
ljmp
add
aam
stos
add
add
add
add
pop
aam
push
pop
aam
stos
pop
aam
lcall
aam
add
aam
push
aas
aam
stos
aas
aam
aas
aam
add
add
aam
stos
pop
aam
lcall
add
jg
add
aam
stos
jg
add
jg
add
lahf
aam
push
lahf
aam
stos
lahf
aam
lcall
aam
push
mov
aam
mov
aam
push
add
add
call
add
aam
stos
call
add
call
add
incl
stos
add
add
pop
incl
push
pop
incl
stos
pop
incl
lcall
incl
add
incl
push
aas
incl
stos
aas
incl
aas
incl
add
add
incl
stos
pop
incl
lcall
add
jg
add
incl
stos
jg
add
jg
add
lahf
incl
push
lahf
incl
stos
lahf
incl
lcall
incl
push
mov
incl
mov
incl
push
add
add
incl
stos
incl
dec
int3
add
int3
incl
pushl
add
jmp
lcall
add
jg
add
add
stos
jg
add
jg
add
lahf
add
push
lahf
add
stos
lahf
add
lcall
add
push
mov
add
mov
add
push
filds
add
filds
add
add
stos
incl
add
add
add
sub
stos
add
add
add
add
pop
sub
push
pop
sub
stos
pop
sub
lcall
sub
add
sub
push
aas
sub
lock
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
nop
xchg
cltd
mov
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
nop
xchg
xchg
cltd
cwtl
cltd
popf
ret
ret
ret
popf
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
xchg
xchg
nop
xchg
nop
xchg
xchg
xchg
xchg
cltd
popf
ret
ret
cltd
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
insb
nop
xchg
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
popf
ret
cltd
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
cltd
ret
cltd
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
jno
cmc
cmc
jno
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cltd
popf
xchg
and
add
add
add
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
xchg
xchg
jno
cmc
cmc
jno
xchg
mov
xchg
xchg
xchg
xchg
xchg
cltd
cltd
insl
lock
add
add
add
add
add
add
add
add
add
add
add
insb
insl
insl
xchg
xchg
xchg
mov
cmc
cmc
cmc
insl
mov
xchg
xchg
mov
xchg
xchg
xchg
xchg
cltd
jo
pop
pop
add
add
add
add
add
add
add
add
add
add
jb
nop
xchg
cltd
cltd
xchg
mov
cmc
icebp
cmc
jno
mov
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
xchg
cltd
cltd
mov
icebp
icebp
jno
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
insl
sub
add
add
add
add
add
add
add
add
insb
insb
xchg
cltd
mov
add
add
xchg
xchg
mov
xchg
xchg
xchg
xchg
insb
and
stos
test
add
add
add
add
add
add
add
insb
jno
cltd
mov
icebp
icebp
icebp
icebp
icebp
icebp
icebp
jno
mov
mov
xchg
xchg
xchg
xchg
dec
or
add
add
add
add
add
add
add
add
xchg
mov
icebp
icebp
icebp
cmc
icebp
cmc
icebp
jno
mov
xchg
xchg
xchg
xchg
xchg
xchg
dec
xorl
add
add
add
add
add
add
add
add
cltd
cltd
mov
cmc
cmc
cmc
cmc
cmc
cmc
jno
mov
xchg
insb
cwtl
dec
sub
jge
shrb
add
add
add
add
add
add
xchg
mov
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
mov
sub
stos
push
add
add
add
add
add
add
add
cltd
xchg
cltd
mov
cmc
cmc
cmc
mov
sarb
xchg
sub
xor
stos
push
add
add
add
add
add
add
insl
xchg
cwtl
cltd
xchg
mov
cmc
cmc
cmc
push
mov
mov
cwtl
insb
xor
pusha
pusha
pop
push
stos
rcl
stos
push
add
add
add
add
add
add
insb
cltd
popf
cltd
xchg
mov
cmc
cmc
cmc
or
jne
mov
cltd
mov
mov
shrb
add
add
add
add
insl
cltd
mov
mov
cmc
cmc
cmc
cmc
cmc
mov
mov
mov
xor
add
add
add
add
add
jno
mov
mov
cmc
cmc
cmc
cmc
mov
mov
lods
lods
test
rcl
int3
test
add
add
add
add
enter
mov
cmc
cmc
cmc
cmc
mov
insb
push
test
mov
test
test
add
add
add
add
int3
enter
mov
jne
mov
cltd
mov
lods
lods
stos
mov
mov
xor
add
add
add
add
add
enter
ret
mov
mov
jo
test
lods
mov
sub
test
add
add
add
add
enter
enter
mov
insl
push
test
mov
mov
cmp
sbb
jge
pop
pop
int3
test
add
add
add
add
popf
mov
ret
popf
mov
test
lods
mov
cmp
cmp
push
xor
shrb
add
add
add
add
xchg
xchg
jno
insl
dec
pop
pusha
test
mov
mov
cmp
cmp
sbb
adc
rcl
shrb
add
add
add
add
test
sub
cmp
pusha
mov
mov
cmp
sbb
cmp
cmp
add
add
add
add
add
add
stos
int3
stos
test
pusha
mov
lods
mov
sbb
cmp
cmp
inc
gs
pop
testb
add
add
add
add
add
add
add
int3
jge
pop
xor
lods
lods
test
gs
cmp
sbb
cmp
cmp
add
add
add
add
add
add
add
add
add
pop
mov
mov
cmp
cmp
sbb
popa
gs
add
add
add
add
add
add
add
add
add
int3
scas
iret
xorl
mov
mov
cmp
cmp
cmp
sbb
gs
add
add
add
add
add
add
add
add
add
add
int3
sarb
stos
scas
scas
mov
mov
cmp
cmp
sbb
cmp
gs
add
add
add
add
add
add
add
add
add
add
add
rcl
stos
not
stos
lods
mov
inc
cmp
cmp
cmp
cmp
gs
add
add
add
add
add
add
add
add
add
add
add
rcl
pop
pop
andl
cmp
cmp
inc
gs
add
add
add
add
add
add
add
add
add
add
add
add
rcl
pop
pop
rcrb
inc
cmp
cmp
cmp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
rcl
test
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
shlb
xor
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shrb
popa
gs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
rcl
sbbl
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
lea
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
jge
rorb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rcl
rorl
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shrl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
shrl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
incl
add
loopne
incl
add
addb
incl
add
add
incl
add
add
jg
incl
add
add
aas
incl
add
add
pop
incl
add
add
ud0
add
loopne
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
add
rolb
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
aas
add
lock
add
pop
add
clc
add
add
sldt
cld
add
add
pop
add
incb
add
add
add
incl
add
add
add
incl
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
jg
add
incl
add
incl
add
incl
add
inc
add
incl
add
jmp
add
incl
add
push
add
incl
add
clc
add
incl
add
cld
add
incl
add
incb
jg
add
incl
incl
add
incl
inc
incl
add
jmp
incl
add
incl
add
add
add
add
add
add
add
or
add
addb
add
add
addb
addb
add
addb
lock
stos
aas
sub
aas
sub
add
add
sub
stos
pop
sub
lcall
add
jg
add
sub
stos
jg
add
jg
add
lahf
sub
push
lahf
sub
stos
lahf
sub
lcall
sub
push
mov
sub
mov
sub
push
fildll
add
fildll
add
ljmp
add
sub
stos
ljmp
add
ljmp
add
add
push
add
stos
add
incl
push
add
pop
push
add
push
add
pop
push
add
aas
push
add
push
add
aas
push
add
pop
push
add
push
add
pop
push
add
jg
add
push
add
jg
add
lahf
push
add
push
add
lahf
push
add
mov
push
add
mov
push
add
push
add
fists
add
push
add
push
add
call
add
jg
push
add
stos
add
incl
jg
add
jg
push
pop
jg
stos
pop
jg
lcall
jg
add
jg
push
aas
jg
stos
aas
jg
aas
jg
add
add
jg
stos
pop
jg
lcall
add
jg
add
jg
stos
jg
add
jg
add
lahf
jg
push
lahf
jg
stos
lahf
jg
lcall
jg
push
mov
jg
mov
jg
push
fistpll
stos
fistpll
fistpll
add
jg
push
jg
stos
jg
jg
add
stos
add
stos
add
add
add
stos
add
pop
stos
add
aas
stos
add
stos
add
aas
stos
add
pop
stos
add
stos
add
pop
stos
add
jg
add
stos
add
jg
add
lahf
stos
add
stos
add
lahf
stos
add
mov
stos
add
mov
stos
add
stos
add
fildll
add
stos
add
ljmp
add
aam
stos
add
add
add
add
pop
aam
push
pop
aam
stos
pop
aam
lcall
aam
add
aam
push
aas
aam
stos
aas
aam
aas
aam
add
add
aam
stos
pop
aam
lcall
add
jg
add
aam
stos
jg
add
jg
add
lahf
aam
push
lahf
aam
stos
lahf
aam
lcall
aam
push
mov
aam
mov
aam
push
add
add
call
add
aam
stos
call
add
call
add
incl
stos
add
add
pop
incl
push
pop
incl
stos
pop
incl
lcall
incl
add
incl
push
aas
incl
stos
aas
incl
aas
incl
add
add
incl
stos
pop
incl
lcall
add
jg
add
incl
stos
jg
add
jg
add
lahf
incl
push
lahf
incl
stos
lahf
incl
lcall
incl
push
mov
incl
mov
incl
push
add
add
incl
stos
incl
dec
int3
add
int3
incl
pushl
add
jmp
lcall
add
jg
add
add
stos
jg
add
jg
add
lahf
add
push
lahf
add
stos
lahf
add
lcall
add
push
mov
add
mov
add
push
filds
add
filds
add
add
stos
incl
add
add
add
sub
stos
add
add
add
add
pop
sub
push
pop
sub
stos
pop
sub
lcall
sub
add
sub
push
aas
sub
lock
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
add
add
add
add
add
dec
mov
mov
add
add
add
add
add
add
add
add
add
add
mov
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
add
add
xchg
xchg
xchg
cmc
cmc
cmc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
add
dec
xchg
xchg
xchg
xchg
cmc
cmc
icebp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
add
icebp
cmc
icebp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
dec
xchg
xchg
xchg
xchg
mov
xchg
mov
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
dec
xchg
cltd
cltd
mov
icebp
icebp
sub
sub
movsl
push
add
add
add
add
add
xchg
cltd
mov
icebp
cmc
sub
mov
movsl
push
add
add
add
add
dec
xchg
xchg
cltd
mov
mov
xchg
xchg
xchg
mov
shlb
add
add
dec
xchg
cltd
xchg
mov
push
mov
cltd
xchg
pushf
pop
mov
push
add
add
add
dec
xchg
popf
cltd
cltd
mov
push
push
popf
mov
test
shlb
add
add
popf
mov
cmc
cmc
cmc
jne
cltd
cltd
ret
test
stos
movsl
push
add
add
add
enter
mov
jne
xchg
ret
test
xor
push
add
add
add
int3
int3
ret
popf
mov
xchg
ret
test
cmp
int3
pop
int3
movsl
jge
add
add
dec
popf
enter
mov
cltd
dec
test
cmp
sbb
xor
rclb
add
add
add
cltd
mov
jo
dec
test
inc
cmp
cmp
cmp
rclb
add
add
add
add
dec
dec
dec
dec
dec
dec
mov
cmp
cmp
cmp
lods
push
add
add
add
add
add
push
test
mov
cmp
cmp
cmp
lods
push
add
add
add
add
add
add
push
test
mov
mov
cmp
cmp
lods
push
add
add
add
add
add
add
add
push
test
mov
inc
cmp
cmp
gs
add
add
add
add
add
add
add
add
push
shrb
cmp
cmp
inc
gs
add
add
add
add
add
add
add
add
add
push
test
gs
add
add
add
add
add
add
add
add
add
test
mov
add
add
add
add
add
add
add
add
add
add
stos
scas
pop
mov
add
add
add
add
add
add
add
add
add
add
add
jge
test
add
add
add
add
add
add
add
add
add
add
add
add
rcl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
rcll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
clc
add
push
add
loopne
aas
inc
add
inc
add
incl
add
incl
add
jg
add
aas
addb
pop
addb
xadd
add
rolb
add
add
add
add
add
add
add
add
pop
incb
add
incl
add
incl
add
loopne
push
add
clc
add
cld
pop
decb
lcall
mov
add
add
add
add
add
add
add
add
add
addb
addb
add
addb
lock
stos
aas
sub
aas
sub
add
add
sub
stos
pop
sub
lcall
add
jg
add
sub
stos
jg
add
jg
add
lahf
sub
push
lahf
sub
stos
lahf
sub
lcall
sub
push
mov
sub
mov
sub
push
fildll
add
fildll
add
ljmp
add
sub
stos
ljmp
add
ljmp
add
add
push
add
stos
add
incl
push
add
pop
push
add
push
add
pop
push
add
aas
push
add
push
add
aas
push
add
pop
push
add
push
add
pop
push
add
jg
add
push
add
jg
add
lahf
push
add
push
add
lahf
push
add
mov
push
add
mov
push
add
push
add
fists
add
push
add
push
add
call
add
jg
push
add
stos
add
incl
jg
add
jg
push
pop
jg
stos
pop
jg
lcall
jg
add
jg
push
aas
jg
stos
aas
jg
aas
jg
add
add
jg
stos
pop
jg
lcall
add
jg
add
jg
stos
jg
add
jg
add
lahf
jg
push
lahf
jg
stos
lahf
jg
lcall
jg
push
mov
jg
mov
jg
push
fistpll
stos
fistpll
fistpll
add
jg
push
jg
stos
jg
jg
add
stos
add
stos
add
add
add
stos
add
pop
stos
add
aas
stos
add
stos
add
aas
stos
add
pop
stos
add
stos
add
pop
stos
add
jg
add
stos
add
jg
add
lahf
stos
add
stos
add
lahf
stos
add
mov
stos
add
mov
stos
add
stos
add
fildll
add
stos
add
ljmp
add
aam
stos
add
add
add
add
pop
aam
push
pop
aam
stos
pop
aam
lcall
aam
add
aam
push
aas
aam
stos
aas
aam
aas
aam
add
add
aam
stos
pop
aam
lcall
add
jg
add
aam
stos
jg
add
jg
add
lahf
aam
push
lahf
aam
stos
lahf
aam
lcall
aam
push
mov
aam
mov
aam
push
add
add
call
add
aam
stos
call
add
call
add
incl
stos
add
add
pop
incl
push
pop
incl
stos
pop
incl
lcall
incl
add
incl
push
aas
incl
stos
aas
incl
aas
incl
add
add
incl
stos
pop
incl
lcall
add
jg
add
incl
stos
jg
add
jg
add
lahf
incl
push
lahf
incl
stos
lahf
incl
lcall
incl
push
mov
incl
mov
incl
push
add
add
incl
stos
incl
dec
int3
add
int3
incl
pushl
add
jmp
lcall
add
jg
add
add
stos
jg
add
jg
add
lahf
add
push
lahf
add
stos
lahf
add
lcall
add
push
mov
add
mov
add
push
filds
add
filds
add
add
stos
incl
add
add
add
sub
stos
add
add
add
add
pop
sub
push
pop
sub
stos
pop
sub
lcall
sub
add
sub
push
aas
sub
lock
incl
movsb
mov
addb
add
add
incl
add
incl
incl
add
add
add
incl
add
incl
add
add
dec
dec
dec
dec
add
mov
dec
add
add
add
add
mov
mov
add
add
and
mov
mov
add
add
mov
xchg
xchg
mov
add
push
cwtl
mov
sub
push
add
push
mov
icebp
sub
movsl
stos
push
add
mov
sub
mov
test
mov
icebp
mov
movsl
push
add
les
mov
sbb
sbb
add
dec
enter
enter
cmp
push
add
add
add
jno
insl
sub
sbb
push
add
add
add
add
stos
test
add
lret
stos
sbb
add
push
stos
movsl
push
add
add
add
add
add
jg
xchg
sarb
icebp
sbbb
xchg
orb
xchg
add
mov
add
add
add
add
add
add
rolb
xchg
loopne
xchg
xchg
lock
pop
push
add
aas
add
jg
add
add
add
add
add
add
add
and
cmp
cmp
ss
cmp
aas
aas
aas
xor
cmp
aaa
inc
inc
inc
aas
inc
cmp
ss
cmp
cmp
sub
inc
sbb
aas
ds
aas
aas
aas
add
xor
xor
sub
sub
inc
inc
aas
sbb
xor
xor
sub
sub
xor
cwtl
and
pop
scas
daa
sub
mov
and
mov
sub
cs
and
dec
xor
xor
cmp
cmp
inc
inc
aas
add
sub
sub
inc
inc
inc
adc
das
cmp
cmp
sub
xchg
and
xor
cs
dec
cmc
xor
pop
std
cmp
js
cmp
jns
xor
ljmp
adc
pop
sbb
fbld
pop
mov
xor
dec
cmp
and
inc
or
add
add
sub
add
ss
inc
cmp
jg
sub
ret
or
add
jmp
sar
and
pushl
xor
cmp
incl
fdivr
inc
inc
inc
xor
incl
mov
xor
pop
ljmp
sub
xor
ss
add
and
and
das
xor
push
aas
inc
cmp
xor
xchg
sub
cmp
jmp
add
lcall
leave
jmp
sbb
ljmp
and
pushl
sub
fdivr
inc
inc
dec
push
loope
pop
imul
fs
jmp
in
decl
aas
sbb
pop
std
sbb
sbb
sub
aas
cmp
or
add
add
inc
inc
adc
xor
aas
and
xchg
das
push
pop
icebp
sub
test
jmp
leave
ljmp
adc
ljmp
or
lret
pushl
or
cmp
lret
or
cmp
int
aas
sbb
decl
xlat
lcall
loop
imul
sar
cmp
and
and
sbb
aaa
cmp
cs
inc
or
aas
aas
aas
or
dec
cs
xor
xorl
add
ljmp
or
pushl
or
cmp
lret
push
iret
incl
sar
inc
pop
sar
inc
pop
sar
inc
or
incl
into
incl
incl
lret
adc
decl
sar
pop
in
incl
xlat
cmp
sbb
fldcw
sub
cmp
xor
adc
push
dec
or
pop
push
add
add
add
and
xor
sbb
xor
pop
xor
pusha
fisubs
add
ljmp
push
mov
incl
lret
incl
aad
dec
or
decl
decl
in
push
or
call
fcos
push
or
decl
aam
dec
or
decl
iret
incl
lret
sbb
call
lcall
aas
cmp
pushl
test
sbb
sbb
sub
push
dec
xor
pop
push
sbb
pop
push
or
xor
pop
add
add
add
inc
or
and
xor
and
movsl
sub
add
ds
incl
lret
decl
aad
push
pop
sahf
ljmp
add
insl
inc
add
insl
inc
add
pop
sbb
push
or
push
or
xlat
decl
sar
inc
or
incl
lret
decl
aad
push
push
aaa
push
mov
cld
push
xor
mov
cs
dec
xor
cmp
wrmsr
pop
push
add
xor
add
xor
adc
xor
push
xor
jg
add
cmp
ret
incl
decl
sar
dec
or
call
test
jmp
add
arpl
add
pop
sbb
call
in
push
psrad
push
pandn
push
push
fdivrp
push
or
aad
inc
or
incl
lret
incl
aad
aas
cmp
pushl
xor
and
lods
sub
push
dec
cmp
pop
push
and
push
adc
imul
xor
xor
cmp
sbb
sub
movsl
ljmp
add
mov
decl
sar
dec
or
call
in
push
push
lods
call
call
call
call
mov
push
paddsw
push
adc
call
jecxz
push
adc
call
jecxz
push
psraw
push
push
dec
or
incl
into
incl
lret
cmp
sar
sub
push
outsl
incl
mov
and
push
movsl
and
push
dec
inc
cmp
sub
push
push
cmp
or
arpl
aas
inc
aas
add
cmp
sub
add
aam
add
incl
aad
push
xor
lcall
out
push
sbb
call
call
mov
inc
cs
inc
sub
add
push
push
mov
push
adc
call
out
push
adc
call
in
push
adc
call
in
push
pandn
dec
push
dec
or
incl
lret
pop
int
sub
add
ljmp
jmp
dec
dec
stos
sub
imul
pop
push
sub
xor
cmp
add
add
add
xor
std
sub
mov
decl
fdivrp
push
aas
out
bound
ljmp
idiv
pusha
sub
decl
mov
cmp
cmp
cmp
mov
push
adc
call
out
call
jmp
push
adc
call
out
push
adc
call
jecxz
push
adc
decl
incl
iret
cmp
pushl
push
enter
test
and
ja
lret
mov
jmp
push
mov
inc
jo,pt
bound
ss
xor
pop
dec
sbb
pop
push
or
insl
bound
cmp
cmp
xor
add
cmp
aam
dec
xor
lcall
ljmp
push
idiv
jb
lcall
mov
pushl
push
add
xor
add
dec
adc
call
std
call
clc
call
icebp
call
jmp
push
adc
call
call
loop
dec
pand
inc
or
lret
sbb
jmp
or
std
gs
mov
mov
call
lcall
inc
dec
mov
xor
push
dec
ss
pop
dec
or
cmp
or
mov
cmp
xor
lcall
jmp
bound
ljmp
idiv
outsl
pop
jmp
mov
aas
es
inc
daa
add
aas
daa
add
aas
sub
aas
sub
sub
decl
lods
call
call
ljmp
adc
decl
inc
or
lret
pushl
adc
lcall
sbb
cmp
jnp
imul
decl
fdivr
pop
inc
dec
mov
cmp
push
das
pop
dec
cmp
pop
push
push
sub
dec
add
add
add
sub
add
or
sub
test
cmp
aam
dec
xor
lcall
jmp
popa
inc
icebp
ljmp
idiv
insl
pop
ljmp
sar
cs
dec
das
add
push
xor
dec
xor
decl
add
dec
xor
decl
add
push
sbb
call
in
call
ljmp
pmaxub
inc
or
lret
pushl
sub
aas
or
ljmp
mov
ds
mov
lock
fdivr
sbb
inc
ret
cmp
aas
jne
cmp
arpl
xor
add
add
add
or
sub
ljmp
sbb
aad
dec
das
push
cmp
lcall
icebp
jmp
idiv
push
ljmp
mov
lcall
add
pop
cmp
pop
cmp
pop
cmp
lcall
add
pop
cmp
call
mov
pusha
xor
ljmp
idiv
insb
push
idiv
push
cmp
incl
ds
pushl
sar
aaa
aam
xor
outsl
jmp
cs
dec
test
call
mov
inc
ret
and
test
imul
fs
cmp
pop
push
pop
xor
pop
push
add
add
add
or
das
add
ljmp
sbb
cmp
fcos
inc
sub
ljmp
dec
cmc
jmp
ljmp
sar
outsb
inc
add
insl
inc
add
insl
inc
add
ljmp
cmp
outsb
dec
xor
outsb
dec
sub
jne
into
pushl
pushl
std
pushl
cli
ljmp
jmp
hlt
lcall
out
aas
adc
ljmp
push
call
inc
fdivr
and
decl
imul
incl
out
incl
cmp
es
inc
test
dec
inc
pop
cmp
aaa
xor
sub
or
pop
push
add
add
add
sub
das
add
pushl
ss
inc
sub
out
push
cmp
lcall
hlt
jmp
cld
jmp
jl
push
jge
add
jl
add
pushl
ljmp
pushl
pushl
pushl
ljmp
cli
ljmp
jmp
idiv
pop
push
repz
in
incl
and
iret
lcall
cs
and
decl
test
pop
ljmp
mov
ljmp
fwait
icebp
mov
in
sbb
inc
ret
and
sub
pop
dec
xor
sub
pop
push
add
add
add
add
cmp
fcos
aas
ss
inc
jecxz,pn
push
ss
lcall
repz
stc
jmp
jle
push
decl
push
add
incl
arpl
ljmp
ljmp
ljmp
ljmp
cld
jmp
clc
jmp
hlt
lcall
lock
out
inc
aaa
adc
jmp
mov
adc
mov
call
mov
jl,pt
cmc
sbb
mov
mov
in
sbb
inc
les
cmp
push
push
cmp
xor
pop
push
sbb
push
dec
add
add
add
add
aas
aas
xlat
incl
jecxz
inc
aaa
jecxz
dec
xor
call
out
lcall
idiv
pop
dec
jmp
call
lcall
pop
push
lcall
pop
or
test
jl
cltd
ljmp
jmp
jmp
idiv
pop
dec
repz
in
decl
in
xor
loope
or
pushl
or
call
mov
cwtl
cmp
scas
call
mov
dec
cli
mov
xchg
cwtl
in
in
jp
loope
sbb
inc
mov
sub
xor
xor
adc
cmp
add
add
add
jl
cmp
movsb
incl
lcall
out
push
pop
out
dec
cmp
decl
call
icebp
call
stc
lcall
jns
popf
ljmp
addr16
test
pushw
ljmp
addr16
test
pop
dec
lcall
idiv
push
inc
out
decl
out
inc
das
fdivr
pop
push
out
sbb
lret
dec
ja
sbb
cmp
scas
call
ljmp
sar
add
ljmp
cmp
add
or
sti
xchg
pushl
fdivrp
sbb
inc
mov
xor
dec
aaa
pop
sub
pop
adc
dec
inc
add
inc
add
mov
es
pushl
out
lcall
in
call
call
call
repz
call
pushl
popf
pushl
push
add
ljmp
pop
call
decl
icebp
decl
out
inc
das
and
loop
or
ljmp
adc
jmp
lcall
in
ljmp
sar
add
jge
aad
jo
int
aaa
push
cmc
cmp
hlt
xchg
fyl2x
decl
shl
pushl
pop
inc
dec
mov
dec
inc
insl
cs
dec
inc
aaa
pop
and
pop
push
sysexit
bound
inc
adc
add
push
inc
sar
orb
pushl
out
lcall
in
call
out
call
repz
cli
decl
lcall
call
ljmp
imul
lcall
cmp
incl
ds
das
xor
decl
sbb
jmp
cltd
cmp
scas
call
ljmp
sar
add
jg
aam
outsb
out
lret
call
mov
ljmp
enter
stc
js
iret
repz
imul
lret
jno
sbb
dec
scas
and
push
push
pop
xor
or
push
dec
add
add
add
nop
sub
cmpsb
jmp
xchg
mov
clc
call
jg
jmp
call
decl
idiv
inc
cmp
incl
incl
call
into
lcall
call
sar
xor
cmp
loope
sub
pop
jmp
sbb
enter
test
and
cwtl
pushl
iret
lods
call
ret
ljmp
sar
add
jg
aam
jo
int
push
out
cmp
mov
call
movsb
call
cmpsb
call
and
sbb
inc
sarl
fcos
mov
in
pushl
fdivr
and
cmpsb
sub
push
sub
das
sub
dec
push
xor
push
dec
adc
jmp
cltd
movsb
icebp
pushl
cli
lcall
test
lcall
repz
icebp
decl
hlt
incl
cmc
aas
cmp
cmp
icebp
pushl
ss
xor
loop
sub
or
sbb
xchg
and
xchg
pushl
out
ljmp
sar
add
jg
aam
jo
int
push
out
cmp
mov
call
shrb
rcrb
adc
stc
push
int
enter
in
decl
es
pop
xchg
daa
dec
inc
inc
das
pop
push
sbb
dec
sbb
fs
sar
xchg
xchg
jmp
mov
idiv
mov
cli
jmp
idiv
jne
hlt
jmp
repz
out
decl
in
cmp
pushl
inc
in
sbb
call
ljmp
dec
xchg
and
cwtl
pushl
out
ljmp
sar
add
aam
jo
int
pop
out
cmp
mov
call
shrl
adc
pop
decl
dec
decl
leave
inc
call
xchg
jmp
cmpsl
call
pop
sarl
pop
imul
jp
and
jnp
inc
cmp
sub
pop
pop
mov
aas
mov
jg
in
test
out
jle
out
ljmp
out
lcall
jmp
inc
push
in
and
out
pop
cmp
jmp
adc
lcall
xchg
xchg
and
cltd
pushl
call
sar
add
sar
jno
int
pop
out
cmp
fadds
call
lret
adc
dec
call
les
adc
inc
decl
aas
decl
test
cmp
cli
mov
mov
mov
xlat
repz
jg
in
cs
inc
add
dec
jns
add
xchg
sahf
push
xchg
ljmp
movsl
incl
lods
decl
mov
dec
cs
sub
incl
mov
pushl
push
xchg
ljmp
das
cmp
jle
call
mov
cwtl
pushl
out
ljmp
sar
add
sar
jno
int
pop
out
cmp
fadds
call
lret
adc
dec
call
ret
inc
call
rolb
roll
ret
inc
decl
xchg
pushl
pop
js
mov
fprem1
ljmp
ljmp
scas
pop
sub
add
add
test
decl
test
jns
aam
aaa
cmp
lcall
pop
decl
decw
mov
decl
mov
cmp
xlat
xchg
pushl
fisubrs
ljmp
sar
add
aam
jno
int
pop
out
fbld
lcall
shrl
adc
pop
call
les
adc
inc
call
mov
inc
call
rolb
rolb
les
pop
lret
dec
cmp
popa
decl
xlat
cmc
decl
jbe
jnp
mov
add
sub
add
mov
ljmp
enter
shl
and
cmp
adc
jo
pop
into
cmp
xlat
xchg
pushl
fisubrs
ljmp
iret
incl
out
pushl
int
pop
out
loop,pt
jmp
fadds
call
leave
pop
call
les
adc
inc
call
roll
rolb
roll
roll
rolb
push
cmp
push
dec
fnstcw
dec
lods
jae
dec
push
aad
xor
sldt
add
pop
inc
aaa
add
xchg
ljmp
andb
aas
jae
sti
xor
lcall
movsl
ja
sub
fwait
aas
loope
call
ljmp
sar
add
aam
jb
into
lcall
mov
jmp
fadds
call
leave
pop
call
lds
adc
inc
call
roll
inc
call
roll
rolb
roll
push
ds
imul
aam
decl
jnp
inc
fnsave
xor
cmp
sbb
xor
mov
ljmp
test
call
mov
jmp
lret
out
decl
call
iret
lcall
aas
loope
jmp
flds
call
lret
adc
dec
call
ret
inc
call
ret
inc
call
roll
roll
ret
inc
call
ret
inc
jmp
enter
shrb
dec
aam
decl
jl
push
fiadds
adcl
sub
es
inc
add
mov
jmp
into
out
call
popf
scas
ljmp
lods
stc
xchg
aad
xchg
rcr
decl
sar
pop
ljmp
sub
mov
sbb
jo
adc
pop
call
push
call
les
adc
inc
call
ret
inc
call
ret
inc
call
les
adc
dec
jmp
enter
shrb
dec
aad
decl
jle
push
loope
incl
imul
add
add
inc
cmp
dec
jl
push
shr
call
mov
fcompl
fninit
lcall
hlt
aad
gs
sar
jecxz
ljmp
fimull
call
pop
call
push
call
lds
adc
dec
call
ret
inc
call
lds
adc
dec
call
pop
aas
shlb
dec
xlat
jge
push
fildl
incl
insb
adcl
add
and
add
xchg
fcomi
jmp
xlat
dec
clc
call
stc
call
fadd
incl
stos
ljmp
fmull
push
into
popa
call
leave
push
call
dec
call
dec
call
lds
adc
dec
call
dec
call
int
aas
shll
push
fiaddl
ljmp
lcall
sub
or
add
add
inc
cmp
push
xchg
pushl
cmc
lcall
fisubrl
inc
inc
mov
xor
jne
push
shlb
adc
push
call
push
call
dec
call
enter
leave
dec
call
lret
daa
iret
pop
decl
cmp
js
mov
decl
jno
push
cs
add
add
inc
add
scas
in
mov
jno
std
cmp
xchg
sahf
fdiv
incl
jmp
mov
lcall
rcrl
pop
iret
pop
jmp
into
pop
jmp
pop
ljmp
aam
decl
cmp
loop
jns
mov
pushl
mov
adcl
and
and
add
lods
out
jmp
repz
rcl
cmp
addr16
cmp
fnstsw
inc
fstpt
inc
fidivrl
inc
fstpt
fstpt
push
fimuls
js
movsl
jns
cmpsl
pushl
movsl
decl
jns
pop
xor
or
add
add
mov
lcall
shl
call
es
and
iret
dec
mov
aas
loope
incl
jge
inc
fnstsw
push
loope
ljmp
sahf
pushl
cmpsb
jp
stos
pushl
test
dec
mov
orl
and
and
xchg
call
mov
jae
lret
jmp
fwait
mov
inc
jnp
inc
in
call
ljmp
lahf
pushl
test
pushl
lods
decl
jle
adc
sub
and
inc
add
lcall
jmp
ljmp
aas
mov
push
rorb
pushl
lods
jp
mov
jbe
scas
decl
jg
adc
sub
sub
add
fwait
in
lcall
movsl
mov
mov
jl
scas
pushl
stos
pushl
mov
jae
mov
dec
mov
sub
add
aas
aaa
add
sahf
ljmp
dec
test
inc
cmc
stc
decl
in
scas
decl
test
and
add
test
stc
mov
idiv
mov
movsb
xchg
andl
and
and
addr16
xchg
dec
mov
cli
decl
sbb
sbb
das
add
movsb
inc
mov
iret
sarl
sub
gs
cwtl
adc
incl
add
incl
add
add
incl
add
add
jg
incl
add
add
aas
incl
add
add
pop
incl
add
add
pop
incl
add
add
add
incl
add
incl
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
aas
add
addb
add
pop
add
addb
add
sldt
rolb
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
inc
add
add
add
jmp
add
add
add
push
add
add
add
clc
add
add
add
cld
add
add
add
incb
add
incl
add
incl
add
incl
add
incl
add
inc
add
incl
add
jmp
add
incl
add
push
add
incl
add
clc
add
incl
add
cld
add
add
incb
incl
add
incl
incl
add
incl
out
incl
add
add
add
add
add
add
add
and
xor
xor
cs
sbb
cmp
aaa
inc
ds
sub
ss
inc
inc
inc
es
dec
dec
adc
aas
push
cmp
cmp
inc
dec
inc
pop
das
das
cs
aas
cmp
xor
jne
daa
sbb
rcll
adc
fisubl
and
adc
xor
cs
cmp
aaa
sub
ss
add
add
add
cmp
or
inc
daa
xor
sub
mov
cmovne
daa
add
ljmp
add
mov
cmp
sar
sbb
ljmp
adc
pop
push
and
sub
and
xor
sbb
cmp
or
dec
add
add
add
dec
pop
inc
inc
aas
daa
sub
adc
shll
add
lcall
lret
jmp
sar
xor
fcos
dec
pop
jecxz
pop
outsl
ljmp
xor
ljmp
adc
sbb
pop
cmpsl
sub
sub
cmp
cmp
pop
push
cmp
add
pop
push
add
add
add
cmp
add
das
sub
xor
gs
adc
lods
lcall
or
jmp
shufps
or
pushl
push
add
sar
or
incl
sar
pop
jne
call
cmp
sub
push
dec
xor
adc
pop
dec
add
cmp
or
xor
mov
and
mov
pushl
push
incl
decl
xchg
decl
mov
aas
pop
cmp
ret
cmp
mov
decl
dec
dec
fdivr
sub
incl
cmp
inc
push
cmp
pop
daa
xor
push
or
push
add
add
add
sub
add
sbb
xchg
jmp
push
mov
cmp
inc
add
push
add
bound
incl
fdivr
inc
or
incl
int
aas
or
cmp
sar
movswl
inc
inc
sar
cmp
sar
es
incl
dec
inc
push
xor
sub
addr16
push
xor
or
push
add
add
add
inc
add
cmp
sub
push
pop
mov
cs
mov
incl
fdivrp
push
aaa
add
push
ss
push
sub
decl
decl
fdivr
dec
or
sar
aas
or
cmp
ret
pushl
sar
sub
cwtl
pushl
insb
cmp
inc
gs
dec
inc
push
aas
jb
sub
arpl
xor
push
add
add
add
xor
add
das
add
cmp
aad
dec
inc
in
push
xor
call
incl
add
inc
and
push
adc
call
out
dec
adc
decl
fcos
inc
or
leave
pushl
or
ljmp
sbb
ljmp
or
decl
mov
push
inc
data16
es
dec
push
xor
xor
push
dec
sbb
pop
dec
or
fs
add
add
add
aas
ds
daa
sub
inc
add
ds
decl
in
pop
push
cmc
jmp
pushl
sbb
add
cmp
call
call
stc
call
in
decl
loop
inc
push
fdivr
inc
or
pushl
or
mov
jl
lret
call
cmp
sub
push
pop
xor
xor
dec
sbb
bound
inc
ja
add
add
add
xor
push
and
stos
ljmp
xlat
decl
in
pop
dec
repz
incl
add
inc
sub
incl
incl
add
inc
sub
decl
decl
incl
fdivr
inc
or
cmp
enter
mov
jmp
add
dec
adcb
pop
sahf
enter
pusha
shll
push
dec
xor
pop
push
sbb
pusha
push
or
push
dec
add
add
add
add
add
aas
add
and
sub
scas
ljmp
into
cmp
xlat
decl
lcall
repz
lcall
add
pop
ss
pop
ss
pop
ss
pop
ss
push
sub
pop
xor
lcall
in
call
in
ds
pushl
add
loop
sub
rcl
jg
leave
negb
mov
and
pop
xor
push
xor
imul
cs
dec
add
add
add
add
add
sub
and
add
pushl
sub
incl
loop
push
inc
out
lcall
ljmp
and
jno
add
jno
add
outsl
pop
xchg
outsl
push
jns
jo
mov
jmp
clc
lcall
repz
in
pushl
adc
incl
pop
in
jmp
insl
pushl
lahf
test
and
loope
movsb
mov
lcall
lret
cmp
and
dec
push
outsl
bound
cmp
sbb
pop
push
or
dec
dec
add
add
add
cs
add
cmc
sub
into
pushl
dec
cmp
call
std
pushl
arpl
mov
decl
pop
cwtl
ljmp
jmp
jmp
lcall
idiv
push
dec
in
decl
in
xor
xlat
decl
push
out
and
ljmp
fcompl
pushl
test
in
lcall
lret
ds
sub
pop
push
sub
pop
push
adc
cmp
cmpsb
xor
leave
incl
fdivrp
cmp
fdivr
inc
xor
decl
repz
loope
cmpsb
bound
jmp
pusha
add
xchg
popa
incl
push
push
dec
hlt
decl
call
call
popa
out
lcall
mov
dec
fbstp
ljmp
call
and
fdivl
int
xchg
call
leave
incl
inc
push
dec
inc
jae
and
pop
push
adc
add
add
add
add
pop
mov
pop
insl
in
pop
push
loope
inc
xor
incl
clc
ljmp
xchg
pushl
imul
pushl
dec
mov
inc
aas
out
aas
xor
ljmp
cmp
incl
jae
pushl
pop
xchg
decl
mov
les
decl
incl
lahf
call
xchg
lods
out
xchg
jecxz
push
cltd
enter
addr16
es
dec
inc
cs
dec
sbb
add
add
xchg
nop
push
inc
sar
xchg
out
call
out
inc
cmp
aas
ss
push
inc
lret
pop
aas
pushl
imul
pop
inc
stos
cmp
jecxz
das
sub
incl
xor
lds
dec
out
pushl
xchg
lcall
mov
sbb
mov
decl
xchg
mov
rcrl
add
add
aas
push
lahf
aam
pop
sar
mov
mov
pushl
out
call
in
ds
cmc
pushl
das
idiv
xor
lock
cs
sub
add
idiv
sbb
mov
jmp
mov
decl
mov
fstl
call
pusha
decl
jle
decl
insl
jge
xchg
enter
mov
jne
sbb
adc
push
lret
lcall
lret
popf
mov
cmc
lcall
icebp
decl
in
cmp
lcall
dec
out
push
fs
jmp
scas
decl
test
gs
mov
call
scas
pushl
aam
call
lret
call
push
decl
dec
decl
aas
lcall
imul
lcall
ljmp
add
add
inc
jg
dec
cmp
pushl
in
ja
ljmp
push
loope
sbb
and
mov
decl
mov
enterw
jmp
call
mov
cmp
xchg
jmp
aad
call
int
call
push
call
les
adc
inc
call
movb
int
call
cmp
in
pushl
outsl
fwait
lock
xchg
add
popa
add
dec
dec
and
fbstp
sar
outsl
jbe
ljmp
or
insl
ljmp
lcall
dec
out
ljmp
mov
call
mov
cmp
cwtl
jmp
aad
call
int
call
enter
lds
les
adc
inc
jmp
leave
push
ds
decl
jmp
jb
decl
cmp
xor
add
add
add
pop
push
add
cmp
fisubrs
sar
dec
test
cmp
test
ljmp
ret
jmp
ret
call
mov
cmp
cltd
jmp
jge
sbb
callw
leave
push
call
dec
call
lds
adc
dec
jmp
push
aas
aad
decl
lret
lcall
es
inc
or
add
add
dec
add
xor
and
bound
decl
inc
inc
shlb
mov
js
pushl
lcall
mov
cmp
fwait
jmp
shrb
adc
lret
adc
dec
call
dec
jmp
xlat
jbe
dec
in
lret
popf
jg
sub
cmp
xor
xor
add
cmp
and
gs
fidivs
aam
imul
lcall
mov
ljmp
flds
call
into
pop
call
leave
push
call
lret
es
pop
incl
jns
pop
lock
xor
pusha
mov
cmp
add
add
add
cmp
and
gs
fistps
shl
ljmp
dec
push
fmuls
sahf
ljmp
fiaddl
call
rcrl
push
into
push
call
int
lcall
int
ljmp
shll
push
fisttps
incl
xchg
call
push
pop
mov
insl
arpl
das
pop
dec
add
cmp
fiadds
mov
jmp
inc
xchg
cmp
fdivrs
xor
fnstenv
inc
fnstenv
pop
fisttps
jnp
dec
mov
pop
mov
pop
push
push
sub
add
add
add
pop
dec
add
cmp
and
xchg
fimuls
mov
cli
sub
filds
jns
cmp
fidivrs
push
loope
ljmp
mov
decl
cltd
call
push
bound
cmp
add
add
push
add
cmp
and
xchg
fidivs
sar
mov
in
xchg
shl
incl
outsl
decb
xchg
push
clc
dec
rcrb
and
or
das
pop
dec
add
cmp
and
fimuls
mov
aad
mov
fdivr
push
lret
fwait
decl
push
insb
stos
sub
or
add
add
inc
add
cmp
and
addr16
fiadds
fldl2e
mov
mov
ja
and
add
add
inc
add
xor
sub
mov
addr16
push
inc
add
add
add
cmp
sub
fisubl
xchg
scas
clc
add
push
add
jmp
add
inc
add
incl
add
jg
add
aas
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
inc
add
jmp
add
push
add
clc
add
cld
add
incb
decl
add
add
add
add
add
add
add
pop
add
pop
xor
jnp
pop
push
mov
pop
push
pop
pop
push
push
pop
push
scas
sub
pop
pop
xor
pop
pop
pop
add
dec
pop
pop
push
mov
cmp
mov
pushl
or
jmp
dec
repz
pop
push
dec
pop
pop
pop
xor
das
or
sub
in
pushl
xchg
ljmp
insb
jmp
stc
js
std
pushl
lock
cmp
push
pop
pop
xor
add
add
push
test
or
cld
call
icebp
lcall
and
pop
aaa
add
push
or
call
in
insb
xor
incl
add
pop
jmp
dec
aas
push
and
mov
lcall
aas
sbb
pushl
and
call
call
out
call
out
jbe
repz
mov
incl
xchg
cmp
push
in
jmp
cmc
ljmp
decl
sub
inc
sub
decl
sub
dec
and
push
push
out
call
call
pushl
sub
insb
movsl
mov
fldl
add
add
add
add
inc
cld
lcall
hlt
ljmp
ljmp
jmp
add
pop
xor
jmp
pop
lcall
cli
call
out
jmp
lock
or
jp
into
jle
dec
js
fiadds
add
add
adc
sub
call
cmc
lcall
jnp
popa
decl
popa
pop
ljmp
ljmp
ljmp
lcall
cmc
jmp
xor
jns
into
decl
mov
xchg
out
cmp
ss
ljmp
std
call
std
lcall
clc
ljmp
addr16
scas
push
mov
decl
lret
decl
pop
xor
sbb
push
incl
cmpsb
lret
incl
xchg
lods
dec
pop
pop
cs
push
incl
cmp
lcall
call
lcall
inc
test
push
pop
cld
ljmp
mov
decl
enter
cmpsb
insl
incl
xchg
cmpsb
dec
inc
pop
cmp
jle
icebp
jmp
lcall
call
decl
idiv
xor
jg
adc
jmp
test
decl
cwtl
movsl
dec
xor
in
or
decl
scas
decl
scas
pushl
cs
decl
lods
xor
or
cmp
and
lcall
add
add
jb
inc
jbe
fidivs
jg
aad
jnp
sar
sbb
push
decl
lret
and
lcall
add
add
xchg
fnstsw
in
incl
cmpsb
insb
decl
cwtl
movsl
dec
js
fidivrs
jno
lret
incl
xchg
movsl
inc
jae
out
jae
lods
cmpb
add
add
mov
add
mov
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
cmc
jmp
movntq
out
clc
pop
cld
aas
fcos
jg
incl
mov
dec
jnp
xor
mov
aad
mov
add
scas
out
cs
mov
stos
lcall
andnps
jns
bound
and
fsubs
sbb
pop
sbb
adc
cltd
xchg
nop
movsb
xchg
lcall
adc
sbb
repnz
test
or
movsl
or
or
mov
fisttpll
mov
subl
call
cmpb
fisubs
sti
mov
bound
inc
jnp
enter
int
enter
xor
push
popl
test
out
mov
cmp
pop
or
out
andb
stc
lock
sub
mov
mov
enter
push
jbe
dec
arpl
cltd
jbe
jnp
add
cmc
out
insl
sub
pop
inc
jno
ds
sbb
lcall
jmp
jp
or
aaa
pop
out
aaa
mov
jbe
sub
and
cmc
and
pushf
sbb
xor
jne
ds
daa
mov
popf
jno
outsl
das
stc
divl
and
dec
ljmp
or
and
mov
add
and
hlt
mov
adc
xchg
nop
xor
pop
adc
ret
dec
cli
push
or
cld
jb
insb
lods
cwtl
adc
jg
cmp
aad
xchg
das
or
movsl
cli
ja
jecxz
mov
fcomps
shrb
bound
call
adcb
scas
mov
es
aaa
adc
nop
cmp
loope
jmp
scas
push
or
inc
ja
jo
cmpsl
and
sarb
pop
lcall
push
in
xor
ds
aaa
in
xchg
xchg
in
cmp
pop
mov
push
lcall
xor
lcall
sbb
stos
in
jmp
mov
dec
adc
cmp
pushf
insb
dec
or
xchg
aas
and
call
mov
outsl
repnz
xorb
in
push
push
mov
inc
jmp
imul
in
cmp
push
push
test
out
popa
mov
sbb
hlt
push
fs
scas
movsb
cli
scas
jnp
jns
dec
push
sub
pop
adc
ljmp
sub
shrb
ljmp
out
dec
xchg
and
ret
jmp
xchg
cli
push
sbb
lcall
loopne
movb
je
dec
aaa
stc
in
sub
data16
sar
add
sbb
cwtl
pusha
jmp
imull
mov
adc
test
mov
fsubl
push
add
aaa
jle
sbb
xchg
lods
std
fs
cmp
int3
push
add
dec
shll
ret
adc
dec
cmp
pop
and
hlt
aad
test
or
push
cmp
xor
js
xchg
adc
and
arpl
or
push
jecxz
iret
push
adc
scas
pusha
jbe
xchg
jne
fcomps
push
push
pushf
call
xchg
out
sub
fidivs
adc
fprem1
inc
sti
adc
test
cmc
sbb
sbb
out
sbb
push
jb
subl
xchg
mov
jle
jmp
dec
adc
cli
sub
lds
mov
rorl
shll
xchg
rorl
push
icebp
stos
pop
adc
addb
or
int3
aaa
mov
xor
pop
inc
pop
xor
sub
adc
cmpsl
inc
les
dec
adc
movsb
ror
in
insl
pusha
pusha
adc
popf
dec
shl
mov
in
rcrb
cmpsl
inc
and
mov
mov
pop
in
in
cmpsb
rol
aas
shrb
pop
dec
push
hlt
sbb
rcl
mov
lods
das
sti
std
mov
inc
mov
in
sbb
dec
mov
xor
dec
inc
aad
pop
sbb
call
je
aam
inc
cmpsb
call
stos
mov
mov
push
or
icebp
sbb
add
cwtl
push
push
jnp
pop
xchg
add
mov
xchg
scas
sbb
test
mov
hlt
sub
out
mov
sbb
add
test
inc
adc
aas
dec
push
pop
mov
pop
mov
test
movsl
lahf
les
in
insb
sahf
cli
hlt
repnz
jnp
sbb
inc
lds
aaa
xor
xchg
repz
insl
ljmp
les
inc
jg
mov
mov
aam
ret
loop
dec
pop
and
arpl
push
push
cld
outsb
xchg
and
cmp
dec
adc
rcrl
jb
xor
test
test
sub
mov
sbb
xchg
jbe
lahf
jmp
mov
fadds
mov
pop
and
xor
jnp
or
mov
lcall
xchg
insl
jno
mov
push
scas
mov
add
adc
jge
adc
dec
dec
push
aas
cs
int3
and
mov
jg
insl
mov
add
xor
rclb
pop
mov
mov
adc
and
sarl
rorl
daa
pop
cmpsl
inc
adc
push
cmpsb
and
inc
jmp
mov
lahf
sub
rcll
jmp
stos
arpl
jge
jge
cmp
mov
jle
outsb
jl
int3
inc
push
xor
imul
js
cwtl
lret
repz
lock
or
xor
lods
xchg
and
dec
bound
inc
push
test
fwait
scas
xor
jo
and
pop
in
leave
jb
pop
sub
sti
mov
jmp
out
repz
mov
dec
dec
cmc
xchg
push
dec
lcall
dec
ss
inc
jno
or
imul
int3
cmp
jnp
adc
gs
push
movl
icebp
mov
adc
push
ljmp
pushf
ds
ret
pop
dec
aad
or
inc
int3
das
fwait
and
repz
sar
cmpsb
mov
push
push
adc
jle
enter
inc
push
dec
out
mov
scas
adc
dec
popa
add
ds
push
xchg
hlt
test
adc
repnz
xchg
and
mov
mov
push
shlb
insb
in
jno
out
xor
gs
rcll
mov
cltd
add
test
adc
outsb
icebp
hlt
add
push
pop
jge
cld
loope
mov
movsb
mov
mov
jp
push
add
and
lret
push
mov
es
push
and
mov
push
adc
or
fistpll
mov
mov
test
inc
nop
pop
pop
out
mov
hlt
or
add
into
cmc
cwtl
dec
movsl
daa
mov
sub
repz
jl
add
imul
cmc
fldl
mov
imull
iret
gs
arpl
cmpsl
mov
mov
inc
les
scas
cwtl
or
out
iret
adc
int3
shrl
jle
mov
div
jns
hlt
imul
or
mov
inc
lds
fisttps
dec
ret
dec
fs
ja
cmp
shl
mov
sbb
mov
push
fnstsw
adc
popa
int3
sbb
xchg
repz
and
cmp
scas
bound
mov
das
mov
in
add
bound
test
xchg
div
mov
push
int3
sub
std
ja
fisubrs
lahf
dec
or
xchg
pusha
mov
sub
movsb
repz
mov
pop
das
fildll
in
mov
sub
jns
inc
mov
repnz
aaa
jmp
sub
stos
insl
push
test
mov
xchg
or
fs
push
ljmp
imul
addr16
push
popa
sbb
lret
test
mov
shll
or
hlt
in
popf
out
ret
inc
mov
mov
push
cmp
push
btr
push
pop
movsl
out
icebp
addl
xchg
andl
test
mov
dec
sub
sub
stc
pop
xlat
pusha
mov
or
mov
dec
test
pop
insb
je
std
fistpll
mov
push
inc
push
fsubrl
add
jle
out
pop
push
ljmp
mov
out
lret
imul
fisubl
movsl
sbb
jecxz
movsl
or
nop
cmp
leave
clc
out
sub
orl
add
call
rolb
adc
xchg
shlb
jmp
pop
mov
loopne
popf
ljmp
mov
xchg
enter
jns
shlb
dec
shlb
sarl
fdiv
mov
cmp
and
push
inc
xchg
pop
ds
and
sbb
jge
add
adc
or
xlat
and
mov
mov
stos
stos
ljmp
add
daa
push
push
pop
jecxz
sub
mov
repz
xchg
push
add
jle
or
and
mov
pop
jg
imul
int3
xlat
mov
out
in
scas
mov
test
and
call
and
add
enter
inc
daa
push
push
dec
adc
js
dec
leave
cmp
sub
mov
hlt
cmp
dec
in
or
push
fimuls
xlat
icebp
fisubs
cmpsb
out
xor
mov
arpl
pop
pop
xchg
movsl
ret
repnz
fisubs
fildl
xchg
orl
sub
loop
mov
stos
cmp
je
or
add
jecxz
popa
ret
flds
int
in
sub
dec
daa
sahf
adc
out
dec
inc
icebp
cmp
arpl
cld
mov
hlt
push
int
xor
or
or
and
xchg
jl
sarb
xor
mov
dec
push
mov
cmc
xchg
cmc
cmp
inc
pop
ret
test
dec
xchg
scas
and
leave
jnp
sbb
adcb
pop
idivl
pusha
insb
lea
dec
fists
popa
ror
or
pushf
ljmp
mov
or
mov
add
xor
push
outsl
fidivrl
push
ds
fidivs
xor
leave
movsb
dec
jle
mov
dec
lods
dec
xchg
outsb
add
add
add
cmp
out
leave
hlt
in
pushf
pushf
xchg
lea
or
lods
sub
pushf
iret
mov
in
dec
sub
imull
fwait
cmpsb
leave
jle
xchg
push
outsl
pop
jp
add
mov
sub
jbe
sar
clc
popf
lods
stos
ss
ds
sub
inc
fcmovnbe
int3
pop
movsb
ljmp
jmp
xor
jmp
rorb
jecxz
mov
dec
or
insl
lret
sub
push
pop
add
adc
adc
xchg
adc
dec
mov
add
movsb
mov
mov
icebp
pop
cwtl
sti
repz
or
repz
pop
mov
pop
mov
imulb
xor
js
xchg
dec
add
dec
xor
xchg
in
cmp
jl
mov
or
mov
sbb
pop
cmp
sbb
jecxz
jno
xchg
cmpsb
dec
shlb
mov
jge
inc
pop
push
sti
sbb
rol
inc
sbb
pop
inc
cmp
xor
outsb
dec
imulb
ret
fmull
jmp
nop
aam
mov
push
push
pop
inc
xor
fmul
pop
mov
mov
cmp
or
sub
pushf
cmp
and
xchg
loopne
repz
push
daa
mov
sub
cwtl
testl
sbb
testb
shl
cmp
xchg
test
dec
pop
mov
cltd
aad
clc
lcall
lock
imull
adc
mov
dec
xlat
insb
push
lcall
mov
jge
xchg
xchg
xchg
mov
sbb
aam
sub
mov
sbb
jo
sbbl
cmp
cmp
dec
lods
mov
ret
test
repz
mov
lock
and
mov
jle
add
adc
inc
adc
dec
icebp
inc
out
mov
pop
add
mov
xchg
stc
cmp
icebp
sbb
mov
daa
cmp
sub
movsb
mov
sub
pop
xlat
dec
cmp
sub
mov
mov
loop
xchg
mov
jnp
or
cmp
sti
inc
push
sahf
into
push
movsb
xor
sub
je
sahf
mov
adc
adc
stos
mov
lock
or
push
lods
adc
xchg
lea
mov
cmp
scas
lcall
add
lahf
adc
and
xor
call
add
push
std
jno
gs
dec
rclb
test
adc
sarb
or
add
aaa
cmp
js
bound
mov
lods
mov
adcl
mov
mov
lahf
add
dec
push
pop
adc
ljmp
or
sub
clc
movsb
lret
jns
or
aas
xchg
or
sub
push
stc
popf
lret
pop
mov
sbb
rcrl
xchg
mov
test
push
repz
xchg
aad
xchg
js
push
movsl
loope
jp
bnd
xchg
push
or
xchg
lea
push
inc
pusha
push
ror
dec
mov
shr
test
andb
and
sbb
stos
xchg
test
vcvtdq2pd
popf
ret
dec
ds
icebp
minps
icebp
mov
ret
in
mov
mov
or
and
push
ds
inc
into
out
loop
cmp
push
xchg
test
outsb
mov
dec
fisttps
xor
mov
pop
mov
add
dec
xor
adc
pushf
mov
mov
jg
cmp
jno
sar
sub
dec
adc
lds
cmp
mov
lea
or
mov
or
dec
xor
xlat
and
les
push
sbb
or
movsl
test
jge
fidivrs
aad
popa
push
adc
push
push
lds
loope
push
adc
sahf
mov
scas
std
in
pusha
mov
outsb
sbb
or
push
adc
int3
mov
and
and
stos
aad
mov
dec
adc
inc
int
test
xchg
mov
cmp
scas
inc
xchg
pop
jne
dec
push
jg
aaa
mov
mov
jae
sbb
rcrl
adcb
pop
pushf
mov
or
cmpsb
sub
mov
and
sti
jbe
sub
adc
adc
jne
inc
mov
adc
addl
push
xorl
xor
loope
jle
sub
and
adc
das
data16
fwait
stos
sbb
push
popa
mov
adc
iret
sub
cmp
xchg
mov
cmp
ja
dec
mov
mov
and
rcrb
sub
mov
dec
cmp
leave
ds
jno
nop
outsb
rorl
sahf
lea
addr16
lds
vpmacsww
jmp
mov
rolb
jbe
sbb
cmp
xor
inc
bound
adc
fistl
ror
fistl
dec
aas
sub
outsl
sub
xchg
jnp
leave
ret
mov
call
out
sti
aas
sarb
pop
xchg
test
xchg
pop
mov
dec
les
aaa
pop
jg
out
sbb
cmc
push
jae
into
imul
dec
cmp
push
and
pusha
mov
shrl
int3
rorb
cmp
stos
aam
rorl
xchg
ljmp
jno
sub
xchg
jmp
das
fisttpl
xlat
dec
mov
icebp
mov
add
or
std
imul
dec
push
icebp
mov
rcr
mov
cmp
add
pushf
stc
out
imul
push
repnz
lods
mov
jnp
mov
xchg
push
inc
cmp
add
cmpsl
mov
gs
mov
and
nop
mov
je
pop
inc
into
into
and
scas
mov
and
and
or
data16
loope
xchg
or
lods
pop
sub
xchg
pop
enter
mov
pop
dec
and
sar
jp
scas
xchg
fsubr
add
sub
inc
inc
leave
add
sbb
and
sahf
sbb
leave
xchg
bound
mov
scas
icebp
loop
jne
lock
imulb
lcall
mov
sub
aam
push
push
outsb
lret
lcall
dec
pop
ret
fistpl
out
jno
fldcw
call
stos
fwait
push
dec
cld
imul
mov
xor
xchg
shll
ljmp
mov
pusha
push
mov
faddp
and
sbb
sub
repz
adc
fiadds
pop
sub
xorb
fdivl
adc
push
cltd
jns
jne
pop
shr
stc
movsb
leave
xchg
cwtl
test
pusha
loope
ss
shrl
pop
cmp
xlat
add
js
in
jbe
lret
mov
ret
ret
inc
jnp
in
push
sbb
add
rolb
pop
mov
insl
dec
xchg
push
into
jmp
xor
xchg
pop
push
push
bound
mov
inc
outsb
or
mov
mov
jno
xchg
pop
xchg
and
pushf
lock
inc
mov
add
out
mov
mov
andb
and
fcoms
rcrl
lret
mov
cltd
push
pop
cmp
mov
ja
push
in
push
and
pushf
test
adc
ja
enter
push
pop
add
jns
dec
mov
pop
or
ljmp
int3
push
ds
jnp
cmc
in
fidivrl
pop
jo
cmp
cmpsl
pop
adc
push
cmp
pop
out
mov
add
jge
sub
cltd
out
cmp
clc
fists
adc
cmpsb
lods
mov
idiv
inc
jg
into
xor
xor
or
insl
sub
insl
push
jp
pop
sub
jne
notb
pop
mov
or
sti
and
push
call
sbb
cmpsb
jns
sahf
aas
fisubl
movsb
aam
sub
divb
xchg
add
dec
addr16
jbe
daa
cmp
pop
inc
fsts
dec
dec
into
lcall
aas
dec
jecxz
jno
cmp
push
push
adc
idivb
int3
mov
pop
fldt
repnz
push
out
push
out
andb
insl
or
pop
dec
xor
xchg
push
xchg
dec
popf
sub
pop
test
pop
mov
imul
iret
cmp
jmp
cmp
push
imul
fsubrs
aam
xor
pop
ret
icebp
dec
adc
je
rcr
jl
cli
fdivrl
xchg
leave
xlat
inc
and
push
inc
xchg
insb
dec
dec
adc
pop
inc
pop
jge
push
add
mov
insl
ljmp
adc
movsb
js,pn
xchg
popa
bound
adc
stc
mov
add
stc
stos
dec
dec
xchg
lcall
pop
lcall
mov
aas
add
cli
test
std
js
jp
pop
mov
cmp
dec
nop
push
ret
adc
dec
xchg
adc
xchg
cli
or
test
scas
push
xor
cmpsl
xor
push
lock
jb
pop
dec
mov
xchg
and
scas
test
mov
add
adc
cmp
jg
jp
inc
push
mov
outsl
ja
jnp
mov
cmp
imul
ds
pop
push
adc
cltd
push
xchg
sbbb
adc
adc
mov
lds
lods
insb
cmpsl
jmp
outsl
sahf
jno
mov
push
xlat
js
inc
jecxz
push
or
jmpw
push
dec
bound
cmp
imul
data16
and
mov
sbb
xchg
pop
fstps
scas
push
adc
xchg
push
xor
or
and
and
sbb
sbb
arpl
fcmovbe
out
pop
rcrl
dec
push
hlt
lcall
and
ja
mov
xor
cmp
jnp
ret
push
or
xchg
jge
jnp
in
lret
inc
out
sbb
loop
mov
and
int3
mov
loope
push
arpl
lds
pop
jbe
jbe
inc
gs
pusha
testb
inc
hlt
push
test
sbb
xchg
sub
std
ja
inc
cmp
mov
shlb
daa
and
aaa
jl
mov
mov
jge
pop
mov
xchg
dec
mov
sub
cmp
cwtl
shlb
cwtl
cs
into
cmp
pop
test
mov
enter
pop
push
jge
pop
dec
xchg
add
fdivrl
xchg
stos
stc
lods
aas
out
cli
stos
stos
inc
bound
aam
sahf
sub
fadds
fninit
inc
inc
shrl
jns
dec
push
pop
fimuls
mov
or
push
fildl
inc
xor
push
mov
sbb
mov
out
mov
or
clc
rcr
sbb
loop
mov
in
push
fidivl
pop
cmc
fs
mov
pop
sub
test
faddl
loopne
fbstp
xchg
pushf
mov
mov
in
ja
paddd
mov
lods
mov
cwtl
popa
insl
stos
div
out
inc
fbld
test
and
xchg
mov
xlat
fdivrl
pop
adc
adc
popa
pop
arpl
push
js
pop
pop
fbld
sets
lods
es
ljmp
cmp
jo
decl
sbb
aad
in
sub
inc
lds
cltd
in
adcl
and
imul
bound
inc
mov
dec
jnp
jecxz
out
mov
in
pop
bnd
idiv
push
fidivl
ljmp
xor
cmpsb
imul
fidivl
jae
mov
ret
xor
cmp
mov
int
mov
aad
aad
jae
int
stos
adc
push
fldl
or
inc
and
stos
mov
adc
xchg
and
cltd
sbb
out
adc
js
pusha
mov
xchg
mov
movsb
jbe
pop
pusha
sub
xor
push
dec
adc
lcall
daa
in
inc
rorb
cmp
mov
jg
js
or
or
add
ljmp
lret
pop
or
cmp
push
mov
jle
xchg
mov
daa
or
ds
lds
out
gs
mov
ljmp
insl
clc
push
aam
lret
leave
lock
sahf
xor
leave
xor
mov
cli
pop
mov
pushf
xchg
sub
out
outsb
dec
sub
xor
cmc
or
loop
cmp
jp
std
mov
lds
jno
pushf
inc
mov
xchg
dec
dec
sub
adc
in
pop
stos
daa
arpl
adc
lret
and
pop
push
mov
xlat
aam
and
ret
stc
add
shrb
adc
adc
loopne
jae
stos
fwait
imul
or
fstpl
push
mov
sbb
and
mov
cld
andl
insb
ret
fld
xor
mov
xchg
gs
imul
pusha
enter
xor
push
push
movsb
jbe
sub
push
inc
mov
je
sub
gs
push
enter
js
js
dec
push
mov
enter
sub
ret
iret
dec
xchg
test
in
inc
xchg
adc
lods
xlat
movsl
scas
jne
cmp
inc
scas
sub
cltd
ret
jb
cmp
clc
pop
mov
in
mov
dec
repnz
push
dec
inc
xlat
imul
push
loop
pushf
out
push
addb
jecxz
fstpt
sahf
xchg
lock
xchg
push
lret
inc
repz
xchg
inc
cmp
imul
pushf
sub
popf
mov
cmpsb
sarb
xchg
xchg
sbb
jb
mov
insl
test
dec
xor
mov
jl
int3
out
pop
gs
dec
ret
pop
dec
arpl
ja
mov
aas
and
or
out
mov
pop
daa
cmp
cmp
add
mov
mov
cmc
outsl
sbb
xlat
je
mov
and
fcoml
pop
adc
iret
adc
lcall
mov
push
push
mov
pop
add
mov
xchg
ret
jmp
add
fst
sub
or
clc
sbb
and
adc
push
jle
nop
popf
xchg
adc
std
adc
adcb
cmp
scas
inc
xchg
in
negb
aas
popf
add
mov
dec
and
mov
dec
mov
mov
dec
popf
les
pop
mov
js
mov
repz
mov
pop
mov
sub
push
jns
mov
fucom
dec
mov
shl
mov
cmp
sub
xor
int3
scas
nop
jo
xchg
test
and
inc
setno
mov
pop
ror
mov
mov
fcomps
or
idivb
in
cwtl
mov
das
pop
sarb
add
mov
inc
mov
mov
test
ss
mov
bsf
pusha
xchg
aas
icebp
sbbl
or
call
push
jg
fldenv
repz
lods
jo
inc
dec
jae
sub
orl
dec
nop
ret
adc
das
out
pop
shlb
mov
and
add
cmpsb
push
lahf
and
xor
adc
cmc
fmuls
fisubrs
xchg
flds
push
out
outsb
cmp
mov
mov
mov
fiadds
pop
int3
pop
push
stos
out
cmp
loopne
inc
dec
loop
dec
adc
inc
out
mov
lock
or
test
jne
mov
jp
gs
aaa
jmp
add
out
mov
sub
std
fs
lahf
das
loopne
mov
dec
push
sbb
test
in
fadds
outsb
cmp
mov
shlb
mov
lock
mov
pop
jbe
push
push
jecxz
dec
pop
add
pop
call
icebp
push
mov
mov
sbb
lds
mov
add
roll
mov
lcall
jns
xor
mov
xchg
mov
or
lods
out
xor
fidivrs
push
stos
jp
pop
into
out
jg
lods
in
dec
xor
leave
push
sub
aad
jecxz
ljmp
std
add
add
inc
iret
or
cmpl
je
mov
fucomip
sub
fucomp
out
mov
inc
in
fs
cmpsb
jno
xchg
mov
cmp
lds
lret
repz
outsb
lcall
lret
andl
mov
sbb
jl
cmp
jmp
jl
jmp
dec
push
push
or
dec
daa
bound
pop
int
xchg
pushf
xor
and
or
movsb
outsb
sbb
push
mov
lea
movsl
loopne
repnz
push
push
push
mov
rcll
aas
push
sub
movsb
stc
xorl
ja
push
idivb
stos
pop
lods
mov
xchg
lock
mov
iret
insb
hlt
aaa
mov
inc
sub
mov
dec
mov
add
pop
sbb
cmp
lcall
out
add
push
mov
xchg
add
mov
test
push
sbb
in
lahf
xor
idiv
sbb
xchg
loope
das
push
out
fs
adc
xor
stc
mov
loope
jl
xchg
pushf
dec
jb
lahf
loope
or
shrb
inc
xchg
add
into
mov
call
dec
pop
mov
stos
push
mov
mov
cwtl
jge
mov
xor
inc
mov
popf
jno
fs
dec
in
mov
lds
pop
lods
mov
das
sti
sub
outsb
ljmp
ds
pop
ljmp
dec
xor
mov
cli
or
movsb
rolb
and
sub
xchg
idivl
xor
cmp
fwait
std
cmpsl
data16
add
adc
aas
fstl
sbb
add
into
add
adc
clc
push
aam
sbb
mov
and
hlt
pop
jnp
xor
or
orl
xlat
arpl
or
push
cli
cmp
fistps
jae
mov
mov
adc
xchg
call
or
adcb
dec
mov
dec
fs
scas
out
gs
adc
push
ljmp
jecxz
xor
and
and
popa
enter
add
inc
sar
mov
xchg
jo
aaa
hlt
jmp
adc
sub
xor
push
in
sbb
loope
aas
leave
icebp
pop
cmp
nop
int
loope
lock
and
cwtl
dec
sub
daa
and
in
xor
mov
out
stos
push
loop
sub
pop
in
jl
and
lret
rep
adc
leave
mov
mull
add
sbb
cltd
imul
scas
xorl
in
gs
lahf
imull
push
fnstcw
insb
mov
push
adc
cmpsl
mov
lcall
roll
jge
subl
push
xchg
mov
and
dec
es
jmp
push
push
sub
push
adc
add
pop
les
xchg
cmp
mov
mov
shll
sarb
mov
loope
and
xor
xchg
int
out
xchg
xchg
jp
pop
mov
test
mov
sub
ja
jns
adc
dec
idiv
pop
fcomi
add
mov
mov
movsl
je
mov
lock
stos
cmp
dec
push
mov
jge
loopne
fsts
les
es
push
icebp
nop
or
mov
mov
fsubs
sub
inc
and
leave
pop
in
rcrb
xchg
js
mov
mov
pop
push
xchg
hlt
or
jl
xlat
hlt
push
xor
test
push
inc
mov
ret
or
decb
and
adc
test
xchg
inc
sub
push
out
mov
subl
mov
dec
xor
sbb
jo
aaa
fstps
inc
sbb
mov
into
push
in
push
lea
in
negb
inc
repnz
stos
add
mov
push
push
ja
loop
xchg
add
mov
icebp
sbb
sub
test
mull
xor
les
leave
ja
jb
ljmp
adc
jl
xor
fld
add
mov
scas
rcl
aad
add
xchg
adc
in
cli
test
push
aaa
rorb
ror
into
lret
inc
and
shll
inc
out
cmc
decb
mov
pop
divl
filds
es
filds
cmp
icebp
mov
cmp
pop
stos
cmp
je
sarl
mov
mov
push
cs
ljmp
mov
dec
sub
test
mov
ret
cmpsb
cmpsl
jns
inc
in
popa
dec
cld
inc
mov
cmp
popf
inc
cli
push
cmp
push
jmp
into
stos
and
cld
fisubl
push
sub
mov
pop
inc
cmp
std
bound
insl
xor
xor
push
mov
push
cmp
push
jne
je
adc
xor
push
repnz
mov
fdivl
sub
mov
cmc
les
push
clc
xchg
fsub
dec
rclb
in
into
adc
jl
in
xor
loopne
mov
jno
jo
test
xchg
roll
mov
mov
mov
js
sub
inc
cmp
mov
in
icebp
ret
jg
lock
lss
jp
cwtl
dec
jae
fildl
push
and
sub
and
test
xor
in
movsb
sbb
jo
mov
mov
mov
icebp
outsl
pop
xorl
lahf
test
int3
mov
jbe
js
into
fmull
cwtl
xchg
xchg
push
leave
inc
hlt
test
mov
mov
jecxz
xor
leave
sahf
and
out
xor
ret
dec
js
mov
mov
add
cld
sarl
imul
fwait
add
push
das
inc
popf
fcmovne
loope
add
add
push
arpl
dec
mov
loop
mov
adc
sbb
lret
jno
test
add
xor
int3
push
inc
dec
mov
adc
cltd
lcall
pop
ja
popf
push
adc
lcall
es
adc
push
jno
push
repnz
shl
mov
inc
inc
ja
lret
mov
sbb
fbstp
rolb
mov
mov
les
leave
test
push
jo
aad
test
cltd
test
insb
addb
ljmp
and
pop
jo
pop
inc
dec
dec
xchg
jne
aaa
push
test
push
sbb
xchg
imul
dec
ja
adc
leave
mov
jne
cmp
jbe
movsb
in
sub
push
imul
lahf
cmpsb
mov
cmp
fidivs
insl
into
dec
loope
sub
or
dec
mov
jno
std
mov
fidivs
cld
push
sbb
mov
cltd
jmp
pop
dec
lret
sub
aaa
pop
jns
cli
outsl
enter
adcb
sub
add
arpl
jp
and
call
adc
movsb
dec
mov
xchg
repz
cli
sbb
mov
sub
adc
and
popf
int3
iret
addr16
mov
cmpsl
stc
sti
loopne
bound
fistpl
push
popf
std
add
cmp
push
out
jl
xor
dec
subb
mov
je
mov
inc
mov
sbb
imul
int
aad
sbb
sbb
jae
sub
int3
cld
int
pop
and
sahf
test
mov
aam
sbbl
xchg
daa
jl
sbb
push
dec
xchg
mov
inc
popa
int3
bsr
ss
ret
leave
cmp
jbe
repz
call
lock
in
mov
fmull
out
jg
or
jns
mov
pop
loop
xchg
sti
or
inc
sub
stos
arpl
mov
aad
aam
add
test
adc
loop
mov
sbb
arpl
xchg
pop
add
xlat
les
sahf
pop
aad
movsb
fsubr
jb
jno
fcomps
test
frstor
pop
mov
mov
sub
inc
out
div
rcrl
add
test
cmp
ds
dec
mov
and
scas
sbb
call
mov
in
fsubp
aam
jp
shll
jmp
ljmp
mov
testb
in
sub
lret
in
and
and
cmp
shrb
jecxz
adc
mov
subl
xchg
push
mov
fs
xchg
dec
mov
adc
lahf
ja
test
shl
mov
in
scas
pop
sbb
je
pop
aas
lods
out
sbb
ss
cmp
imul
and
fwait
add
xchg
jg
in
dec
mov
cltd
sbbl
pop
mov
or
push
xlat
sub
mov
and
fnsave
jmp
or
push
push
jecxz
sub
push
mov
inc
xor
mov
xchg
xchg
or
mov
mov
mov
arpl
shll
push
cmp
mov
loope
sub
jnp
cwtl
jmp
inc
fsubrs
xchg
xor
imul
cmp
stos
fs
push
xchg
xchg
loope
js
sbb
inc
test
adc
inc
mov
out
imul
xchg
adc
inc
lcall
mov
sbb
mov
gs
pop
iret
push
sub
fisttps
imul
loope
cmp
push
xchg
lods
push
cmc
fsubrp
mov
jno
or
push
sbb
popa
and
jge
les
dec
cmp
lahf
jge
adc
popa
dec
or
pop
add
mov
pusha
add
jl
cmc
mov
clc
xchg
add
xor
push
ljmp
mov
adc
ret
mov
push
fnstsw
push
xor
push
test
jmp
in
add
cmc
mov
pop
add
adc
mov
jge
pavgb
fnstenv
mov
stc
jnp
dec
repnz
popa
rorb
xor
sub
add
arpl
arpl
mov
loope
mov
jne
lret
mov
lahf
mov
cli
push
je
repnz
cmc
aaa
jns
mov
cltd
dec
loope
mov
pop
mov
mov
pop
xchg
std
sbb
push
sub
lods
add
imul
sub
fidivl
adc
jo
cltd
add
push
fdiv
sbb
jbe
mov
int
push
pop
jge
cli
mov
sbbb
sub
cmp
push
mov
ljmp
add
inc
dec
scas
shl
fnstsw
cmc
adc
adc
and
stc
add
xor
popa
jnp
mov
jmp
dec
adc
mov
rolb
into
and
test
inc
xor
js
pop
ss
insl
jge
sbb
ret
into
jge
adc
es
mov
sbb
pop
std
mov
nop
arpl
sbb
insb
test
notb
test
aas
sbb
xor
jbe
jle
mov
cmp
insb
sbb
movsb
fistl
test
iret
jno
pop
xor
xchg
cmpl
mov
lea
xchg
mov
cs
push
xchg
outsb
cmp
push
add
gs
adc
insl
inc
xchg
ja
into
loopne,pt
je
ret
cmp
lock
xor
and
push
cmpsb
and
jno
das
rorl
or
sub
mov
dec
mov
movsb
adc
sbb
mov
adc
xchg
out
sahf
shr
jbe
ja
rcrb
fwait
mov
sahf
and
add
shrl
inc
dec
mov
dec
out
sarl
ljmp
mov
push
xchg
pop
outsb
inc
ja
mov
push
sub
pusha
arpl
fbld
mov
js
and
xor
je
xlat
pop
les
inc
xor
pop
lret
mov
ret
jo
xor
sub
mov
xor
sahf
jne
stos
cli
outsl
lret
pop
fidivrs
out
sbb
jp
and
arpl
scas
jo
sub
cmp
adc
ret
out
mov
or
ret
fistpll
iret
pop
push
jns
pushf
xchg
loope
mov
fwait
int
rcll
fimuls
inc
cmc
sub
arpl
dec
pusha
add
out
xchg
xor
jb
mov
lock
push
cwtl
jno
arpl
jle
lret
add
add
sub
and
jns
add
jns
add
mov
mov
push
jnp
ret
repnz
xorb
repz
jmp
and
ret
and
sub
mov
xchg
int3
xchg
mov
fcmovbe
sbbl
divl
add
sbb
jmp
dec
fstps
add
cwtl
loopne
movsl
jbe
dec
vpcomuq
jmp
fmulp
mov
jl
dec
sub
sub
xor
sbbl
imul
mov
das
and
addl
sbb
fsubs
sbb
push
add
lea
mov
stos
pop
push
push
outsl
rcrl
adc
mov
sbb
pop
mov
cmpsb
push
and
aad
jg
lods
mov
mov
dec
jnp
mov
or
rcrb
sub
and
pop
adc
out
and
pop
addr16
test
aad
add
cmp
xor
inc
push
xor
mov
xchg
push
fdiv
into
xchg
xcrypt-ctr
cmpsl
fidivrl
pop
sbb
cmp
js
pusha
jl
pusha
dec
dec
dec
imull
or
cltd
or
sbb
and
mov
inc
mov
movsb
sbb
dec
aaa
clc
fisttpll
xchg
mov
and
fcmovne
pushl
cmc
pop
in
je
es
aad
mov
mov
icebp
xchg
add
out
add
sub
push
imul
cmp
push
aaa
inc
push
rclb
mov
mov
push
stos
push
loope
outsl
sub
mov
in
dec
push
lods
bound
arpl
dec
addr16
xor
mov
or
insb
shlb
pop
cltd
or
rclb
push
lods
push
push
shl
inc
ss
inc
inc
mov
jge
loopne
push
aam
dec
xchg
cmpsl
cltd
jmp
xchg
inc
cmc
dec
insl
jecxz
push
sub
mov
inc
lods
mov
lcall
aam
mov
std
xor
sbbb
xor
or
dec
push
outsl
push
negl
test
push
fstpt
dec
and
or
rolb
push
cltd
xchg
je
pop
outsb
mov
mov
dec
cs
shl
ret
xchg
pop
inc
arpl
ret
mov
mov
fcmovnbe
leave
sbb
arpl
mov
aam
sub
adc
and
dec
hlt
xchg
xchg
xchg
ret
mov
jo
negb
mov
popf
or
add
lods
pop
sub
lea
aam
sar
jno
pop
fldl
les
mov
scas
arpl
callw
jbe
ret
mov
sub
pop
sbb
jb
fstpl
inc
incl
jae
ficomps
icebp
pop
out
imul
inc
push
aad
jl
and
sbb
xor
xlat
popa
jbe
sbb
imul
sarl
xchg
jae
mov
leave
aam
pop
push
ljmp
sub
subl
xchg
adc
push
mov
data16
lret
sbb
mov
mov
mov
add
or
call
push
and
jo
push
call
or
lcall
sub
sub
adc
xchg
mov
dec
or
push
arpl
xor
fs
push
in
jae
lds
mov
int
je
bound
sbb
icebp
out
ror
xchg
xchg
fsub
mov
or
sti
aam
mov
cmp
jnp
ret
mov
dec
sti
test
test
out
pop
inc
and
test
dec
add
mov
sbb
shl
mov
jecxz
pop
jo
lock
pusha
cmpl
jge
inc
lds
mov
les
lds
cmp
pusha
xchg
jle
movsl
cmc
inc
loopne
and
xor
sbb
xor
movd
shll
call
es
loopne
xchg
fdiv
mov
cmp
push
jl
fmul
lret
push
mov
and
or
adc
or
cmp
roll
arpl
push
mov
push
adc
lock
inc
lret
sub
jns
into
push
jo
cltd
icebp
mov
jmp
clc
or
dec
jno
es
cltd
pop
cmp
mov
and
dec
hlt
cmpb
mov
pop
sbb
add
sbb
mov
mov
addl
cmp
sti
cs
mov
dec
cmpsl
cs
mov
sbb
outsl
cld
cmpsl
jge
adc
dec
xchg
fdivrs
inc
ja
adc
pop
pop
mov
push
aaa
sbb
and
inc
add
insb
aam
jb
mov
out
dec
cltd
fmull
loopne
scas
cmp
lret
ret
rcrb
stc
dec
repnz
sbb
and
pusha
ret
mov
jp
mov
sbb
push
mov
das
icebp
ds
subb
or
and
cmp
cld
cli
add
fcmovu
xchg
pusha
loopne
mov
mov
sbb
pop
test
sub
test
or
push
in
adc
or
xor
jp
fidivs
icebp
mov
test
adc
out
sub
cltd
mov
sub
dec
xchg
in
pop
aaa
arpl
jo
inc
xchg
addr16
pusha
dec
rorl
shrb
popf
add
das
dec
mov
in
mov
pop
lahf
and
xor
gs
pusha
push
call
jne
test
add
shll
jo
mov
outsb
outsl
loope
push
scas
sahf
inc
ljmp
xorl
jbe
gs
add
dec
mov
jl
cmpl
imul
mov
std
dec
pop
pop
dec
push
insb
xchg
jnp
sub
std
mov
mov
sub
xorl
hlt
or
or
dec
lret
lret
test
lahf
lret
in
or
xchg
sti
cmp
insb
push
cs
mov
add
xor
leave
push
les
jae
push
imul
mov
fldl
mov
cmp
mov
and
cmp
int
popf
stc
insb
aas
cmp
bound
das
jp
mov
cmp
or
outsb
leave
aas
clc
int3
dec
adc
cli
push
adc
adc
stos
stos
jnp
fmulp
xchg
test
fs
sub
cli
sub
out
sub
xor
jecxz
cmp
out
inc
fwait
xor
xchg
scas
jle
lret
sbb
scas
jmp
lahf
mov
sti
loop
sub
scas
mov
sbb
sbb
xchg
imul
adc
ss
and
cmp
pusha
mov
imul
xchg
cwtl
pop
jo
daa
sbb
xor
or
into
push
insl
inc
je
pop
mov
repz
inc
xor
das
adc
lret
int3
dec
rcrb
dec
ret
and
fbld
push
ret
jns
dec
pop
xchg
push
subl
in
mov
jl
mov
stc
xor
mov
popf
mov
fprem
xlat
cmpsl
fidivs
fwait
insb
shlb
shrb
shrb
sbb
jne
out
scas
jl
xor
fs
cmp
mov
pop
xchg
xor
insl
add
and
int3
mov
sbb
cli
mov
icebp
test
lcall
pushf
sti
xchg
cmpsb
push
addr16
mov
fisubrs
fimull
outsb
imul
int
jge
push
cs
push
incb
sbb
mov
xchg
loop
shlb
mov
lds
std
fistpll
dec
in
int
mov
adc
nop
cltd
test
xchg
mov
iret
std
cltd
xor
pop
les
loopne
push
or
mov
lods
sub
pop
inc
mov
xchg
cmp
fidivl
scas
pop
xor
popa
int3
out
cmpl
shll
dec
pop
sub
fdivs
mov
or
xlat
lods
pop
lcall
sbb
lds
xchg
xchg
cld
aaa
stos
adc
mov
jmp
loop
aam
lea
dec
sar
or
lods
jno
jno
out
mov
mov
fsts
mov
test
push
xor
leave
pop
test
push
cltd
mov
out
sub
lods
testl
ret
fwait
cs
jno
cmp
or
loope
mull
xorb
pop
dec
shlb
sbb
fstps
loope
sub
and
in
icebp
andb
jl
in
into
aaa
dec
loope
xor
mov
dec
loope
adc
xor
popf
jge
xchg
xor
cmp
test
push
push
dec
jle
or
mov
or
mov
mov
ss
lods
push
hlt
add
and
add
out
push
mov
fwait
xchg
pop
sub
adc
fisttpl
sbb
and
sbb
jns
or
jb
dec
pop
popa
sub
mov
dec
negl
dec
loope
inc
push
nop
pop
add
cltd
or
out
aam
adc
aad
cmpsl
dec
testb
pop
mov
aad
pop
xchg
inc
incl
pop
cmp
addr16
pusha
xchg
inc
mov
idivb
cmp
jns
push
sub
inc
aaa
fsts
rclb
data16
pop
hlt
repz
loopne
fcompl
mov
jp
or
mov
fadds
addr16
fisubl
in
cli
shrb
mov
push
test
pop
dec
sbb
call
sub
fstpl
fwait
mov
mov
xchg
mov
ds
in
je
into
sbb
sbb
add
add
aaa
ds
mov
test
jmp
dec
mov
cmc
loopne
cs
push
insl
xchg
test
mov
outsb
push
movsl
cmp
xorl
push
std
aaa
in
sbb
fwait
xchg
bnd
out
mov
scas
pop
dec
shl
inc
int
jns
xchg
dec
rcll
dec
mov
xchg
dec
xchg
test
insb
and
adc
sarb
xchg
sbb
mov
shl
sub
xchg
testl
mov
pop
sti
pop
pop
add
fnstsw
insl
mov
loop
test
cs
push
rclb
mov
adc
sahf
insb
test
das
lds
aaa
xorl
sti
dec
pop
push
movsb
rcrl
adc
pop
idivb
mov
push
sub
pushf
jmp
cmp
test
fcmovnb
scas
lahf
es
mov
sbb
push
jno
pushf
and
mov
jl
test
jmp
mov
push
jo
adc
fcom
popf
js
mov
iret
push
mov
mov
inc
insl
mov
mov
sbbl
xchg
test
stos
cmp
add
mov
sahf
pop
out
jnp
ljmp
mov
pop
lret
addr16
test
mov
divb
pop
jge
inc
loop
inc
int
outsb
sbb
push
and
shl
mov
imull
jo
add
fidivl
in
mov
push
and
inc
pop
jne
xchg
jo
xchg
sar
aam
lock
xor
std
push
out
push
jp
lds
push
mov
dec
sub
mov
aad
js
stc
stos
movsb
cwtl
test
test
imul
add
mov
int3
sbb
adc
in
les
jns
mov
arpl
addl
jp
sbb
xor
sub
ja
pop
jb
test
pop
sbb
sbb
testb
scas
decb
dec
add
add
inc
jge
and
test
mov
repnz
dec
dec
sbb
jnp
neg
cmp
or
mov
jbe
dec
push
cmp
mov
es
jmp
dec
pop
inc
pop
outsl
push
sahf
jge
jnp
insl
loope
inc
cmpsb
add
mov
push
ret
into
jp
dec
mov
mov
aam
ja
mov
jbe
mov
sub
pop
insl
and
mov
outsb
pop
lcall
cmpsl
adc
lcall
es
xor
mov
and
dec
cmp
jecxz
mov
mov
cmc
jmp
xchg
out
add
out
ljmp
lock
mov
test
adc
push
mov
sti
xlat
or
lock
out
aad
jne
loope
pop
bound
adc
imul
inc
mov
mov
mov
mov
mov
and
or
push
pop
or
fldl
iret
push
out
push
outsl
pop
pop
mov
lock
sbb
icebp
mov
divl
cmpl
jo
jp
dec
jle
adc
into
xor
fbstp
inc
add
test
cmp
mov
sarb
mov
imul
xchg
mov
lock
cmpsb
scas
mulb
push
mov
lea
pop
mov
inc
and
cld
or
jp
rorb
push
iret
mov
rorb
or
mov
push
pusha
mov
adc
mov
sbb
xor
or
push
outsb
add
cs
push
bound
pop
adcl
icebp
xchg
int3
aas
orl
jae
stos
xchg
cmp
test
dec
out
pop
insl
dec
sub
nop
pop
dec
in
sbb
std
stos
inc
sbb
jae
mov
subl
mov
data16
std
subb
pop
sub
loope
mov
dec
das
adc
add
mov
stos
xor
xor
cmpsl
and
push
jg
xor
out
inc
mov
jo
fcompl
lods
dec
jno
in
or
loop
xorl
adc
jle
icebp
jmp
xor
mov
cli
sbb
xchg
adc
insb
mov
push
pop
dec
push
mov
aas
add
adc
imul
fwait
out
jl
neg
adc
adc
das
imul
pop
adc
xchg
push
movsb
mov
daa
lods
pop
jmp
arpl
pop
les
ss
inc
mov
sbb
add
ret
push
inc
mov
idivl
inc
loop
mov
lcall
inc
popa
adc
pop
adc
jne
push
add
add
cmp
dec
push
xor
push
pop
inc
iret
jg
push
out
push
pop
loop
mov
ret
popa
jl
addl
cmp
mov
movsl
es
fmulp
rorb
leave
mov
xchg
sbb
cld
insb
xchg
rol
mov
daa
xchg
mov
pop
xor
mov
sti
hlt
mov
sbb
shlb
addr16
pop
mov
or
into
test
lods
mov
mov
mov
inc
xchg
and
jnp
sbbb
test
lds
int
pop
cld
negb
out
shrl
jne
sub
mov
sbb
cwtl
cmp
sbb
ds
push
sbb
scas
fs
sbb
pop
sbb
push
in
pop
cmc
loope
lretw
mov
ret
out
ror
scas
mov
sub
andb
addb
testl
ds
pop
fldpi
sbb
dec
arpl
fwait
adcb
xor
mov
lds
fwait
popa
icebp
jle
inc
add
insb
into
in
cld
or
into
jns
fistpl
sbb
push
xor
pop
sbbl
cmpsb
xchg
outsb
rclb
cwtl
pop
icebp
or
or
mov
add
movb
push
ds
mov
or
jne
xchg
lock
popa
mov
sbb
scas
push
jecxz
jl
dec
sti
fidivl
pop
test
jle
mov
pop
jns
or
inc
jo
jle
mov
mov
dec
inc
add
bound
rcr
daa
mov
pop
and
ret
or
movsb
push
dec
pop
sub
mov
mov
les
cmp
cmc
in
mov
push
pusha
and
mov
mov
jb
cmp
popa
stc
stos
outsl
mov
outsb
push
add
xor
hlt
cmp
mov
xor
mov
pop
cmc
push
adc
mov
lcall
lret
rol
sub
sbbb
frstor
fisttpll
scas
xchg
ja
nop
jmp
stos
jle
mov
push
jmp
inc
mov
mov
push
jp
sbb
xchg
xchg
lret
movsb
pop
jecxz
imull
in
xchg
push
pop
cmp
loopne
addr16
lret
out
lret
insl
incb
cltd
pop
movsl
lea
in
shrl
in
stc
aaa
comiss
ja
stc
mov
xor
leave
filds
and
xchg
mov
jl
stc
inc
sub
mov
ss
mov
mov
inc
and
jo
adc
push
mov
mov
cmc
leave
insl
or
cmp
fdivrp
push
mov
out
jp
add
lock
daa
icebp
aam
xchg
jge
sub
xchg
jbe
fld
mov
imul
ret
push
or
sub
sub
enter
dec
out
icebp
inc
cltd
and
sarl
test
sub
fcompl
sub
mov
and
add
dec
outsl
xor
addb
int
dec
mov
cmc
push
mov
fwait
nop
loope
out
nop
mov
mov
inc
rorl
repz
notl
shlb
jmp
addb
jmp
rcl
insb
sub
xchg
jge
pusha
adc
lods
push
xchg
cmp
hlt
cmpb
repz
ja
sub
scas
cmpsb
movsb
and
ss
inc
mov
bnd
sub
push
xor
adc
mov
add
mov
xchg
ja
mov
ficomps
pop
aaa
adc
mov
xor
xchg
sub
insl
loop
rcr
mov
test
cli
fwait
push
leave
insl
popa
lret
xlat
das
pop
push
cs
shufps
push
add
jb
idivl
popa
xchg
mov
dec
cmp
aaa
cmp
cmp
test
pop
out
lods
add
or
icebp
stos
xor
xor
into
xchg
inc
inc
movsl
inc
or
subl
mov
das
outsl
mov
jmp
std
arpl
adc
bound
xchg
sahf
push
jo
das
or
lret
xorl
xor
hlt
pminub
lret
ljmp
push
ja
sbb
push
pop
les
lret
add
push
fstpt
inc
or
pop
mov
insb
std
sbb
das
outsl
int
adc
cmp
fsubrl
movsb
jae
xchg
mov
aas
mov
pop
lea
data16
xor
idivb
aam
push
bound
sbb
mov
or
mov
lods
and
mov
dec
push
pop
repnz
shll
sbbb
push
popa
fwait
sbb
jge
stos
scas
into
ljmp
xchg
lods
push
xchg
insb
stc
adc
xlat
sub
xor
jmp
stc
xchg
lds
xor
inc
xor
outsb
mov
imul
or
cltd
int
pop
cmp
xor
imul
push
lods
stos
in
xor
lret
dec
xchg
mov
ds
pop
mov
xchg
rolb
xchg
in
sbb
or
xchg
mov
mov
xor
mov
xor
push
mov
sbbl
mov
sbb
addr16
mov
add
mov
jns
imul
xchg
or
vmovntps
rolb
pop
mov
pusha
scas
add
xchg
xor
pusha
xchg
pop
fs
cld
lret
add
in
lods
xchg
movsb
stos
ja
cmp
mov
dec
xchg
mov
movsl
mov
pop
in
hlt
xor
stos
xchg
inc
sti
or
rclb
jb
outsb
lret
mov
rcrl
pop
jmp
pop
pop
int3
stc
cmp
pop
in
xchg
lret
addl
fstpl
mov
mov
inc
stos
loopne
push
and
mov
xor
movsl
je
shl
movsb
xor
sbb
pop
xchg
or
in
pusha
loop
cmp
fldenv
leave
cmp
or
ret
pop
testl
movsl
push
js
lahf
mov
sub
pop
movsl
das
ja
in
add
aad
stos
mov
push
repnz
jo
pusha
mov
mov
push
shlb
add
xor
in
stos
mov
aas
mov
sti
push
pushl
mov
imul
fistpll
sbb
fildl
out
or
dec
out
mov
inc
sbb
adc
push
jb
push
cmpl
imul
stos
pop
repz
sub
stos
cs
push
xor
push
lcall
out
sub
mov
cmp
data16
push
ss
subb
pop
or
xor
xor
ljmp
dec
xchg
inc
jecxz
push
aam
pop
pop
cmpsl
xchg
xchg
insl
sub
stc
faddl
scas
push
xchg
mov
stc
mov
pushl
mov
cmpsb
lods
les
sub
push
hlt
inc
cmp
inc
xchg
ljmp
jo
dec
jbe
lods
ja
aad
push
scas
int3
mov
lahf
xor
js
addr16
je
and
rolb
outsb
stos
inc
cmp
cmpsb
out
fmuls
test
or
stos
js
or
xchg
inc
xchg
sbb
stos
xor
sub
ret
lcall
movsl
push
mov
scas
imul
sub
jge
int3
out
insl
cmp
mov
mov
ffree
dec
mov
pop
push
imul
mov
insl
cli
lds
jb
subl
mov
aad
mov
std
mov
dec
stc
clc
jae
add
xlat
lea
push
adc
mov
mov
jb
aam
rclb
inc
mov
add
mov
mov
mov
xchg
cld
cmp
push
xor
or
mov
into
cmpsl
loop
adc
std
scas
xorl
inc
mov
scas
xor
ret
jle
mov
jne
pop
mov
js
mov
pop
lcall
bound
je
push
mov
xchg
dec
fwait
jecxz
stc
cli
sub
sbb
negb
mov
pop
push
paddd
arpl
scas
pop
movsb
test
das
enter
and
cmpsw
ret
pushf
fistl
dec
xchg
lret
pop
jp
add
xor
je
or
ja
mov
ss
adc
ljmp
bound
clc
repz
test
add
inc
mov
inc
popa
inc
mov
jb
jle
xchg
hlt
add
jo
mov
mov
imul
call
and
pop
add
xlat
movsl
lods
push
push
cmovle
daa
or
push
mov
nop
push
mov
jg
lret
ja
adc
adc
adc
test
dec
int3
dec
int
int
and
jbe
sub
popf
xchg
std
mov
in
loopew
or
jge
lret
andb
test
shlb
cwtl
inc
cmp
xchg
sub
dec
adc
inc
js
xchg
jmp
gs
icebp
addb
or
fadd
dec
or
pop
data16
sti
ss
dec
enter
or
add
inc
pop
sbb
sub
sbb
loopne
adc
or
sub
mov
pop
sbb
xchg
call
inc
xor
shl
fdivr
adc
pop
or
cmp
adc
push
xchg
and
and
lcall
out
fiaddl
int3
repz
mov
notl
negl
addr16
dec
cmp
cmp
xchg
sbb
mov
insb
insl
inc
lcall
mov
xchg
jmp
xor
idivl
xchg
dec
sub
mov
xor
xor
out
add
into
pop
mov
mov
inc
mov
les
mov
mov
mov
pop
add
jbe
dec
insl
cwtl
dec
test
xor
sbb
dec
sub
pop
out
shll
pop
mov
stos
clc
cmp
lds
push
aas
jno
mov
sub
int
lock
sub
gs
ret
cmpsb
pop
jle
cmp
adc
lods
mov
out
lock
or
push
dec
jne
movsb
mov
xchg
or
sub
or
inc
add
push
push
lods
sarb
inc
adc
mov
mov
rorl
mov
fisubs
sarb
subb
and
adc
lods
ljmp
push
les
fcompl
xchg
fmull
test
jo
lea
jns
fwait
movsb
aad
gs
xor
xchg
dec
test
icebp
xorl
loop
fucomip
sti
inc
sub
js
pushf
mov
addr16
fsubrl
lahf
pop
push
push
addr16
or
fdivrs
jne
pop
xchg
insb
sbb
push
jo
push
push
dec
jns
ja
sub
int
cmp
dec
xchg
xor
xchg
ss
aad
push
enter
popf
cmc
loop
xlat
inc
out
icebp
xlat
push
cmp
jo
ds
mov
dec
cs
mov
je
or
xor
pop
or
lock
inc
xor
mov
jge
inc
rolb
add
insl
das
popa
push
mov
or
push
test
xor
outsb
int
jge
loopne
mov
jl
xchg
xchg
stos
pop
sahf
mov
pop
pop
jo
mov
add
dec
in
xor
jb
ss
dec
sub
lcall
sbb
loopne
aaa
dec
jecxz
mov
and
arpl
sub
cltd
jnp
outsl
rol
sbb
popf
add
push
dec
cmp
pop
lret
aas
jnp
fildl
xor
ret
xchg
cs
les
rorb
push
push
and
lds
ss
sbb
jp
shrl
mov
not
imul
rcrl
js
lea
psubusw
out
test
inc
rcr
adc
push
inc
idivl
sbb
or
cmp
cmp
mov
mov
call
xlat
and
fwait
xor
xor
xor
out
jge
jg
or
fcomps
add
cli
dec
fsubs
daa
movsl
push
lcall
roll
xchg
pop
int
std
jecxz
jp
loope
cmp
xor
lret
mov
sahf
out
sub
sarl
mov
mov
jnp
fldt
and
cld
or
and
jl
adc
xor
repz
test
outsl
mov
add
push
inc
pop
xchg
adc
cmpsb
les
adc
jbe
sub
es
jae
inc
sar
pop
cmpsb
arpl
cli
sbb
fiaddl
fmul
sub
sub
cmc
xchg
aam
sbb
push
mov
sub
mov
loopne
or
mov
lret
jg
fiadds
and
jmp
sti
push
movsl
sub
pusha
shrl
sbb
sarl
dec
pop
xor
ljmp
jno
xchg
xchg
push
clc
add
icebp
and
aaa
jne
pop
jnp
jle
inc
pop
jo
daa
xchg
fldcw
clc
divb
adc
mov
xor
mov
or
xchg
fisubs
or
xor
cmpsb
adc
dec
xchg
shl
mov
in
out
or
fmuls
out
mov
mov
jmp
adcb
in
dec
or
in
xchg
addr16
jo
in
jecxz
inc
shl
push
mov
aas
pop
movsl
outsl
pusha
loope
inc
sbb
imul
arpl
cmp
out
xchg
inc
mov
test
pop
lods
sub
pop
mov
xchg
or
pop
test
addr16
xor
sub
mov
adc
and
adc
mov
add
and
xchg
sbb
orb
cmp
push
lock
sbb
jb
pop
cltd
ret
xchg
jl
cwtl
adc
sbb
popf
cmp
cmp
loop
mov
sbb
shrb
xchg
pushl
and
mov
test
cld
xchg
xorl
xor
push
jg
mov
pop
cmpsb
icebp
dec
out
test
jge
sub
in
jmp
movsl
mov
add
out
inc
xor
sub
les
mov
push
mov
pop
loope
in
sub
mov
aaa
mov
dec
push
int
or
les
xchg
mov
jmp
repz
add
xchg
xor
mov
insl
jge
and
push
iret
xor
push
mov
or
mov
add
lods
push
neg
push
mov
lret
jbe
jg
movsl
sbb
and
dec
xchg
cld
cmp
in
pop
jl
ficomps
cld
loope
outsl
push
sbb
dec
jmp
outsb
rcrl
inc
fnsave
pushf
std
icebp
lea
shr
mov
in
int
mov
movsl
shr
sbb
imul
cltd
xchg
mov
mov
addr16
sbbl
loop
sbb
jb
inc
xchg
jmp
int3
loope
nop
jl
add
and
or
cmp
sub
lret
add
add
and
mov
pusha
hlt
stos
arpl
cs
call
repnz
cltd
int3
jo
mov
hlt
lds
aas
pop
clc
mov
inc
xorb
lea
inc
std
inc
test
push
insl
sbbb
stos
in
mov
push
push
xchg
scas
out
popf
mov
xchg
aaa
aam
sbb
dec
xchg
sahf
cltd
xchg
cmp
inc
clc
cli
jns
fisttpll
cs
mov
pop
jnp
imul
xor
pop
add
inc
leave
std
pusha
jecxz
xor
ds
popf
lret
je
arpl
xchg
repz
xchg
outsb
cmp
pop
push
add
inc
inc
add
sbb
push
jg
inc
pop
sti
inc
leave
call
mov
pop
sbb
aas
jb
add
push
mov
mov
adc
jp
inc
in
push
push
incb
jg
push
sbb
insb
add
adc
test
pop
and
jns
jb
adc
aad
insb
dec
inc
sbb
adc
dec
fcompl
call
mov
test
repz
outsb
mov
popa
test
lahf
lods
ss
outsl
push
fcmovne
mov
cmp
push
cmp
or
in
pop
dec
bound
adc
mov
out
mov
dec
mov
mov
ds
rolb
jge
das
add
dec
push
sub
gs
in
outsb
inc
add
movsb
inc
dec
aad
fadds
subb
pop
shlb
adc
add
xor
clc
dec
testb
fsubs
mov
ds
sbbb
mov
jge
insb
je
call
inc
inc
scas
js
in
rorb
test
ss
loop
sub
xchg
sub
inc
cwtl
pushf
dec
lret
xor
stos
sahf
outsl
clc
xor
jo
cmpsl
xchg
pop
xor
movsb
sub
ret
mov
xor
outsb
sub
fs
pop
icebp
mov
cmpsl
das
sub
xchg
arpl
or
mov
in
lea
mov
shr
filds
stos
insb
movsb
fimuls
sbb
test
cmp
jno
pop
inc
push
insl
rol
xchg
inc
pop
test
ds
mov
cmp
mov
pop
fcomp
mov
and
mov
push
das
sbb
std
add
js
loop
fucomip
push
arpl
pusha
mov
es
arpl
mov
pop
sub
jo
add
sbb
pop
dec
out
jnp
leave
out
xchg
xor
cmp
rcll
inc
je
sub
push
xchg
push
ja
js,pn
das
flds
jbe
push
ss
icebp
push
cmp
pop
jno
test
jp
jle
jmp
sbb
arpl
out
xadd
push
push
lods
cmp
mov
movsb
ret
dec
sub
lods
stc
pop
or
ds
xchg
inc
xor
jo
ret
imul
mov
into
repnz
lret
cmpsl
int3
aas
lret
cmp
mov
mov
mov
repz
insl
jl
jge
hlt
lods
push
sub
add
lret
jle
mov
movsl
jle
and
fwait
loope
or
popf
aas
fadd
test
adc
lret
test
fildl
repz
out
pusha
mov
aaa
test
mov
and
imull
iret
movsb
mov
push
imul
subl
lock
or
lcall
mov
outsl
inc
fidivrs
cld
test
pushf
pop
mov
or
sub
mov
pop
bound
lods
lea
mov
mov
pusha
loopne
or
das
pop
and
cld
cmp
mov
daa
cs
pop
cmp
xchg
enter
mov
lds
mov
push
dec
pop
add
lret
pop
pop
out
les
cmp
movsl
sbbl
jnp
scas
sahf
clc
sbb
in
jae
xchg
jmp
cmp
adc
jge
mov
cwtl
inc
and
push
pop
dec
dec
pop
jns
sub
mov
push
sar
shl
mov
fsts
cmp
jno
push
arpl
push
xchg
shl
xor
dec
pushf
mov
and
out
cmp
popa
stos
and
xchg
inc
imul
call
jg
aas
lods
add
xor
or
enter
sub
or
cmp
sub
cli
jno
xlat
cld
cltd
mov
dec
rorl
mov
dec
mov
fsubrl
mov
xlat
add
ljmp
lret
adc
out
mov
inc
movsl
mov
ret
or
stos
sub
movb
aad
sub
sub
enter
insl
mov
jo
mov
scas
and
mov
aad
pinsrw
loop
or
mov
push
lds
in
rolb
mov
add
dec
xor
gs
fistpl
fs
pop
cli
pusha
and
xchg
mov
mov
insl
dec
jnp
cltd
jge
lahf
jle
cmp
fnstcw
xlat
hlt
dec
pop
adc
mov
inc
mov
fcoms
push
add
mov
decb
les
dec
sub
cmp
decl
aam
ret
and
stos
adc
xchg
fstpl
pop
fidivl
inc
sbb
inc
jp
inc
imul
pop
and
mov
mov
vcvttss2si
lock
add
aaa
adc
push
jo
hlt
xor
mov
fsubl
lock
inc
pop
mov
sub
adc
sub
negl
imull
add
mov
xor
clc
pop
es
mov
inc
mov
mov
or
jle
push
imul
xchg
sbb
dec
aaa
negl
sub
jp
sbb
shrl
mov
fucom
enter
mov
test
shll
rcrb
nop
test
sbb
xor
pop
adc
into
popf
dec
loop
xchg
sub
testb
pop
ret
lods
faddp
inc
fs
test
jbe
ds
ret
js
mov
sti
or
lret
push
cwtl
call
jg
mov
xor
mov
xor
hlt
xchg
sub
and
out
int3
jmp
cltd
mov
bound
mov
xor
push
ret
jle
jp
dec
sarb
test
popa
paddusw
int3
pop
pop
mov
xchg
jle
inc
xchg
flds
mov
popf
sbb
popa
enter
daa
mov
cmpsb
or
dec
inc
movsb
scas
xchg
sub
or
fnstenv
aam
jo
sub
cmpsb
sbb
aam
xor
mov
inc
sbb
test
xor
ljmp
les
fcmove
adc
jp
in
pop
dec
or
sub
xchg
mov
xchg
inc
push
movl
sbb
jnp
cmpsl
add
or
cmp
inc
loopne
push
stos
aas
pop
pop
mov
hlt
pop
xchg
push
xchg
imul
inc
daa
sub
lret
xchg
in
pop
test
outsl
cmpsb
and
ljmp
cmpsb
dec
push
clc
mov
inc
jmp
push
adc
jnp
sahf
sti
mov
sar
test
lods
scas
and
jp
repz
imul
pop
out
arpl
fldl
clc
add
cmp
jns
jmp
jae
inc
jns
lods
push
inc
mov
push
jne
xor
ljmp
into
lock
fidivs
pcmpeqd
jmp
test
xlat
mov
aad
test
repnz
imul
xchg
cmpsb
test
pop
jle
cltd
mov
pop
mov
ljmp
cmpsl
stos
filds
and
iret
xor
adcb
mov
cmpsb
mov
jo
in
inc
pop
pop
out
mov
or
xchg
in
xchg
mov
dec
or
aas
mov
pop
mov
cmc
sbb
movsl
mov
add
and
push
stos
sbb
loope
enter
dec
js
sbb
pop
xor
sarb
fs
and
std
imul
push
and
std
pop
mov
xor
ds
mov
and
inc
shrb
xor
pop
add
subb
pop
stc
lcall
popf
xor
jns
loope
sti
arpl
mov
add
fwait
imul
xchg
jns
pop
je
xchg
sahf
fistl
imul
subl
pop
ret
clc
daa
hlt
jmp
sub
and
xchg
leave
sbb
mov
lods
mov
imul
int3
int3
mov
je
xor
mov
and
xchg
mov
dec
notb
pop
leave
iret
sbb
and
imul
test
or
inc
aam
lods
mov
sub
sbb
mov
mov
imull
test
mov
cltd
enter
jmp
hlt
dec
jl
ret
cmpsb
cmpl
sahf
into
sub
test
cmp
fisubs
mov
das
or
inc
mov
loopne
xchg
push
dec
inc
xchg
ja
sbb
rcll
adc
cmpsl
inc
xor
pop
das
mov
sub
xchg
hlt
out
jp
push
add
test
sbb
inc
lea
sbb
shrl
lret
or
aas
pushf
sbb
fbld
test
daa
push
into
movsl
xor
stos
pop
push
repz
mov
dec
pop
push
cmp
inc
fistpll
jns
mov
jg
enter
outsb
ja
jg
xor
lds
das
inc
nop
mov
jle
shlb
lods
negl
add
in
cmp
add
mov
push
sahf
or
cld
je
jmp
enter
push
dec
xor
pop
sub
xor
mov
je
into
in
cmp
rcr
les
ss
rcrl
adc
jae
loopne
sub
mov
loop
lret
scas
lret
aaa
jnp
lret
bound
sub
cmp
fwait
ds
int
sbb
sub
mov
es
jge
push
pop
imul
mov
das
es
mov
pop
jbe
pop
push
cwtl
xor
push
sub
lods
js
push
faddp
sbbb
fwait
or
adc
ffree
jecxz
dec
push
dec
add
mov
xlat
rol
push
or
adc
icebp
pop
jnp
ret
out
inc
fisttpl
shrb
xchg
pop
sub
xchg
faddp
add
das
mov
popa
outsb
push
decb
mov
enter
push
andl
pop
add
cmp
xorl
int
test
les
call
pop
mov
in
xlat
fcoml
jb
xchg
mov
sbb
and
dec
nop
sbb
push
push
fistl
xchg
xchg
mov
xchg
divb
cli
sti
pop
andb
or
mov
loope
fdivl
lret
nop
test
int3
negl
insl
inc
dec
and
cmp
push
xchg
cmp
scas
sub
in
mov
sbb
and
and
imul
inc
lods
aad
negb
das
sbb
fcomip
xchg
adc
xor
adc
scas
test
xchg
clc
and
cmp
jg
mov
jo
cwtl
mov
pop
repnz
or
mov
fdivs
and
aad
adcl
jno
sbb
fiadds
push
imul
cs
jp
mov
add
dec
adc
lahf
orl
loop
or
xchg
and
mov
sbb
sub
push
xlat
fnstsw
mov
and
bnd
push
lods
bnd
arpl
setns
popa
dec
add
jp
jecxz
inc
adc
fs
add
daa
pop
lret
ss
mov
pop
cmp
outsb
sahf
bound
sub
sbb
dec
xor
and
nop
jecxz
rclb
jecxz
enter
out
cs
pop
sahf
lahf
movsl
cmpsl
and
test
inc
data16
pop
cltd
loope
fidivrl
aam
inc
fwait
sub
sub
leave
enter
popf
xor
std
aad
gs
ja
lds
clc
lods
stos
mov
fldt
mov
sub
xchg
leave
fcmovnu
imul
lcall
ja
sbb
cmp
pusha
stc
fsubl
dec
rcrb
scas
imulb
mov
push
rorl
lahf
pushf
mov
pop
xor
adc
lcall
adc
xchg
and
add
xchg
sbb
jb
mov
add
fistpll
sbb
and
mov
aas
mov
sub
or
ds
ret
mov
les
fstl
jmp
imul
or
clc
dec
dec
outsl
dec
outsb
sarb
fwait
pop
or
or
pusha
cmpsb
pushf
ret
call
pop
cwtl
lds
daa
push
test
pop
xor
out
or
into
sub
xor
imul
xchg
xor
and
enter
jne
cli
rcrb
orl
inc
push
or
popa
jno
out
dec
jge
push
jb
mov
pop
leave
mov
inc
stc
into
movsb
in
int
decb
mov
and
cs
add
pop
mov
mov
in
pusha
add
inc
sub
add
bound
outsb
pusha
inc
testl
cltd
inc
popa
mov
jae
cmp
xorb
jmp
push
sbb
lcall
push
push
pop
outsl
cmpsl
rclb
cltd
roll
xor
lcall
ficomps
jns
in
pop
arpl
iret
xchg
in
inc
and
pop
lcall
jle
xchg
mov
inc
stos
leave
jg
cmc
lock
mov
or
popa
test
xchg
sbb
and
int
xor
popf
sub
push
je
mov
add
xchg
jo
or
lods
sti
sub
test
int
orb
out
xchg
repnz
jnp
loopne
push
jae
roll
push
mov
loope
test
inc
push
popf
movsb
testb
jb
icebp
ret
pop
and
cmp
push
repz
and
mov
loope
mov
hlt
xor
dec
jg
and
ret
dec
jae
pusha
adc
out
insl
fistps
mov
jo
inc
pop
cmpsl
cmp
dec
fs
mov
pop
shlb
fsubrp
insb
out
mov
andb
xor
fsts
movl
loope
enter
pop
or
outsb
cwtl
or
arpl
int
rcl
xlat
jmp
and
je
lods
push
movsl
or
add
pop
ficompl
insb
lret
sahf
int3
ljmp
jp
push
jo
fnstcw
out
gs
xchg
ret
dec
dec
inc
jnp
and
sbbl
leave
xor
lret
jae
sub
inc
arpl
fdivl
dec
shlb
or
cmp
inc
jbe
out
scas
out
mov
popa
cmp
rcrl
sub
sbb
pop
or
dec
jnp
lods
scas
and
insl
fs
adc
imul
fwait
rolb
jmp
pop
repz
mov
add
xor
mov
insl
pop
inc
mov
cmp
xchg
and
movsb
jo
fldcw
push
fwait
cmp
dec
out
out
dec
stos
pop
mov
cld
or
and
inc
test
or
inc
subb
insb
lods
mov
aad
or
adc
sub
jl
movsl
xchg
test
push
xchg
sub
fucomp
push
mov
lahf
pop
out
stos
int
inc
and
lret
test
loop
mov
and
int3
aad
or
or
in
nop
add
mov
inc
mov
and
or
int
mov
inc
stc
shrb
fildl
pop
call
call
je
push
sbb
pushw
dec
push
sbb
push
out
test
sbb
or
pop
fsubp
add
sub
int
sbb
int3
dec
rcll
push
cmp
inc
cmpsl
call
testb
mov
jl
ds
dec
sbbb
imul
imul
or
jbe
fdivp
cli
mov
into
push
iret
int
inc
fmul
fstpt
shlb
pop
pop
mov
ror
xchg
fbld
stos
sub
cmpl
out
push
ja
pop
fcomp
fs
add
mov
int
les
icebp
pop
test
mov
xchg
inc
das
xor
in
icebp
xor
jp
mov
adc
jns
mov
cltd
cld
add
call
add
xchg
mov
adc
fldenv
ds
out
int3
fisubrl
inc
xor
mov
jle
fldcw
push
aas
movl
dec
adc
mov
adc
ret
jae
dec
push
xchg
pop
sbb
mov
jo
add
in
loopne
lret
push
shrl
jns
scas
fisttpl
xchg
sub
xchg
pop
mov
mov
lods
push
sbb
sub
mov
sti
jmp
cmc
jg
enter
jnp
add
sub
jle
pushl
jno
popf
inc
loope
insb
insb
mov
stos
adc
mov
outsl
lods
ljmp
lods
jo
jbe
leave
ljmp
fisttps
out
lock
mov
nop
filds
scas
jg
mov
sahf
popf
push
ss
inc
fisubrl
cwtl
inc
xor
inc
cmp
lods
shl
add
xchg
or
out
iret
sub
mov
outsb
movsl
xchg
cmp
insl
adc
jne
mov
mov
push
popa
arpl
nop
loope
insl
dec
dec
rcrb
pop
or
shrl
jne
jmp
js
imulb
mov
cmpsb
jnp
mov
push
data16
hlt
pop
cltd
jge
xchg
popa
outsl
stc
cmp
jmp
out
into
xor
sbbb
push
push
iret
dec
mov
in
ret
add
cli
enter
push
jnp
jno
daa
fstpt
mov
push
int3
rcrb
dec
pop
aaa
add
cmp
cmp
dec
push
ljmp
cmpsb
mov
popf
repnz
xchg
mov
cmp
xor
cwtl
mov
hlt
fmuls
repz
mov
cmpl
mov
mov
sbb
mov
pop
cltd
dec
xor
aam
push
lret
iret
cld
lods
repz
jae
add
push
xchg
or
arpl
popa
and
jo
push
data16
insl
lods
mov
dec
insb
shrb
cwtl
pushf
inc
sub
xor
or
and
mov
notb
mov
sbb
addr16
test
and
cmp
dec
xchg
push
mov
loop
or
push
sahf
lcall
pop
into
adc
dec
movsl
sub
inc
lods
sbb
add
push
xchg
rcl
je
or
movsw
push
xor
mov
das
inc
mov
or
or
je
idiv
jp
mov
lds
imul
push
dec
mov
shl
mov
in
cltd
pop
add
mov
insl
push
jbe
adc
arpl
xchg
and
sbb
xchg
in
xor
xchg
inc
cmp
mov
sbb
jle
mov
add
push
repnz
sbb
mov
mov
repnz
push
mov
mov
pop
mov
lock
xchg
xchg
mov
lahf
orl
lds
lret
addb
insb
fbld
out
cli
mov
cmpsb
aaa
dec
pop
xchg
aaa
sub
dec
pop
jmp
ret
stos
fmull
mov
repnz
jp
shll
lods
out
fwait
jp
and
lret
movsl
imul
push
mov
lahf
mov
cmpsl
xor
dec
mov
scas
sub
lahf
mov
aas
imul
fstp
inc
push
inc
mov
inc
loope
inc
imul
arpl
dec
and
mov
in
mov
adc
or
lds
sbb
xchg
pop
jle
lock
hlt
pop
mov
or
popf
sahf
mov
icebp
add
cmp
xchg
mov
cmp
mov
mov
sub
js
hlt
std
inc
mov
mov
aaa
or
negl
dec
xchg
or
hlt
fwait
fwait
xor
stos
xor
fisubrl
lahf
pop
jns
jl
cli
lahf
out
mov
mov
lds
mov
aam
mov
out
mov
les
or
movsb
dec
pushf
pop
mov
adc
mov
sub
dec
arpl
flds
adc
scas
test
xchg
mov
clc
jne
psrld
cltd
cld
jne
test
sub
mov
xlat
sahf
xchg
test
imul
add
mov
xchg
mov
int3
cmp
clc
xor
insb
daa
fistl
cmp
out
sbb
jbe
shlb
scas
ja
sar
mov
seto
add
mov
ret
hlt
pusha
sub
cmp
aaa
mov
out
fcomip
sbb
icebp
or
mov
push
inc
ret
inc
addb
lock
fsubrs
test
insl
jnp
push
mov
xchg
adc
aam
mov
int3
fidivs
mov
cwtl
xchg
das
ja
dec
and
adc
and
jno
mov
rcl
pusha
movsb
jno
jae
push
scas
cmp
insb
add
and
adc
jp
das
xor
ja
aas
adc
mov
pop
mov
js
jb
mov
xor
mov
stos
insl
mov
rolb
imul
pop
adc
rsm
outsl
sub
cwtl
sub
dec
clc
sbb
nop
cld
push
add
xchg
jns
das
les
jno
inc
lahf
out
movsl
mov
mov
pop
stos
out
test
adc
lods
int
shl
jo
or
stc
jl
inc
or
nop
mov
mov
or
adc
mov
cmpsb
mov
jns
lock
mov
xchg
xchg
out
ja
bound
sbb
cmp
mov
shr
mov
sub
pusha
mov
mov
xchg
mov
jmp
jg
adc
popa
cmp
push
divb
push
fsubrs
dec
dec
mov
test
insb
jne
mov
fdecstp
in
adc
inc
test
lcall
and
mov
rolb
mov
cmp
je
rclb
mov
loope
rclb
inc
cmp
out
test
fdiv
in
adc
push
aas
rorb
mov
popf
scas
imul
push
es
imul
dec
lock
sbb
mov
aam
dec
cmp
and
inc
mov
or
movsb
lods
cmp
sub
xor
or
pusha
je
sub
inc
and
aam
pop
push
shll
dec
adc
mov
sbb
pop
xor
aam
pop
decb
dec
push
loopne
in
out
inc
mov
xchg
test
dec
mov
mov
les
lahf
iret
cmp
or
xchg
pusha
push
and
test
xchg
loope
mov
enter
das
or
push
dec
and
insl
shll
sti
icebp
ret
mov
jns
pop
ret
push
pop
pusha
arpl
mov
cli
shr
adc
std
imul
and
rol
clc
sahf
ss
lods
movsb
xor
jns
cmp
and
xchg
fwait
mov
sahf
lds
into
mov
out
pop
inc
bound
inc
mov
sti
lods
stos
ds
sti
insl
mov
sub
sbb
xor
dec
jbe
add
and
xor
push
out
pushl
cmpsb
jle
out
pop
xor
dec
xchg
push
repz
cli
push
loope
lahf
and
rcr
pop
jno
clc
imulb
pop
stos
sbb
pop
pop
fldenv
inc
lahf
lret
sbb
sbb
nop
mov
mov
and
pop
movsl
loope
or
push
xor
mov
mov
and
fsub
push
popf
cmp
loopne
test
push
jns
pop
lret
push
repnz
jge
push
sbb
fstpl
xlat
sub
mov
mov
dec
mov
xchg
in
rcll
outsb
cmp
dec
push
mov
bound
jb
dec
mov
arpl
cld
aam
mov
cs
cmp
cwtl
xchg
outsl
jecxz
pushf
push
cmp
dec
cmp
rolb
jecxz
sti
or
pop
mov
stc
popf
mov
dec
sub
enter
test
cmpsb
pop
xor
mov
dec
fdivrl
test
jns
push
push
enter
dec
hlt
dec
fdiv
popa
cld
push
pusha
mov
pushf
int3
ficoml
lea
mov
setl
cmp
test
roll
jle
mov
in
popf
iret
pop
iret
loopne
test
xlat
xchg
mov
push
mov
shlb
sub
or
add
loopne
into
icebp
mov
dec
xor
pushaw
ja
lock
fidivrs
sub
call
add
repnz
jae
aas
dec
rclb
sub
test
lret
clc
inc
push
pop
int3
add
fwait
add
aam
sbb
in
test
inc
lret
in
aas
mov
subb
adc
adc
or
subps
mov
je
jb
mov
ficomps
test
mov
adc
pop
dec
xor
shll
mov
adc
xchg
inc
sbb
popf
ja
mov
push
inc
dec
shrb
push
add
mov
addb
jl
lock
dec
aam
add
dec
bswap
pop
hlt
inc
cmp
dec
notb
dec
jae
pusha
call
pop
cmpsb
mov
push
ds
fs
out
addb
ja
ljmp
outsl
out
rclb
cmp
iret
jge
push
bound
cs
clc
sub
aaa
fucompp
int
cmp
cmpl
frstor
dec
sub
or
addl
add
lea
or
iret
insl
fidivl
jae
mov
das
int3
gs
jecxz
jno
adc
in
bound
popf
and
cmp
mov
mov
call
test
push
aad
mov
fdivrl
mov
mov
test
movsb
mov
out
jns
add
push
sub
fisubrs
add
sub
ss
aam
arpl
fimull
pop
and
bound
sub
test
jmp
sbb
inc
push
dec
sti
push
xor
mov
in
sub
decl
inc
out
push
bound
ret
jnp
popf
or
sub
js
xchg
subl
xchg
sub
inc
out
ret
mov
enter
outsl
mov
push
insl
xor
cmp
mov
jp
pop
imul
jae
add
mov
lcall
hlt
adc
xchg
fdiv
push
jo
lahf
les
cld
lret
lahf
icebp
mov
es
cli
mov
loope
and
fimuls
or
sti
fdivs
sub
pop
inc
dec
cmpsb
and
lds
push
jno
inc
xor
push
push
lcall
add
in
adc
sbb
imul
ja
ljmp
dec
mov
data16
repz
adc
das
int
pop
sbb
insl
dec
mov
js
or
dec
jl
mov
jmp
sub
hlt
fs
mov
into
daa
loopne
push
mov
jg
sbb
xchg
add
sub
mov
xor
js
and
repnz
test
outsl
loop
and
or
ljmp
mov
movsl
rcl
loope
pop
pop
ror
or
or
push
push
in
enter
xchg
sbb
lock
pop
adc
in
pusha
inc
leave
cmp
cmp
test
cmp
push
push
leave
rolb
test
ja
mov
push
mov
xor
jg
cltd
ja
test
jno
adc
fbstp
out
lods
lods
pop
cmc
orl
outsb
add
dec
push
inc
mov
pop
xchg
xchg
dec
jecxz
xchg
dec
ljmp
scas
cmpsl
mov
dec
loop
pop
mov
ljmp
pop
and
insb
mov
cmc
stos
mov
cltd
stc
test
enter
pop
and
and
insl
mov
imulb
fisubrl
movsl
mov
mov
inc
xchg
fsts
jmp
lods
or
mov
adcb
addr16
push
pop
les
imul
loopne
hlt
insl
sahf
clc
dec
cmpl
xor
sub
orl
sub
pop
js
ss
mulb
sbb
pop
xchg
sbb
and
cmp
push
jp
popf
arpl
ret
nop
stos
jnp
flds
push
bound
enter
inc
pusha
sub
xorb
push
jge
aaa
arpl
adc
fidivs
and
and
lret
test
cmp
cmp
ss
stc
dec
fisubrl
sbb
bound
in
push
jecxz
dec
jle
push
mov
jo
adc
jmp
cmp
cwtl
mov
cld
mov
nop
test
ret
cwtl
push
sbb
xor
fwait
inc
dec
xor
lods
mov
bound
aam
test
jo
adc
stos
scas
jbe
test
jns
push
jmp
dec
dec
and
mov
pusha
movsb
out
xor
add
and
rol
and
xchg
jne
push
fldcw
xlat
add
mov
fdivrs
call
xor
icebp
rorl
cmp
add
cmp
ds
mov
xchg
adc
mov
sbb
scas
pop
hlt
and
cmp
jmp
addr16
inc
bound
test
test
jmp
xor
repnz
lret
push
push
bound
add
out
xchg
xor
andb
jo
outsl
mov
cli
or
cmp
sti
mov
test
mov
popa
inc
add
mov
inc
das
adc
cltd
pop
sbb
outsl
aam
outsl
ret
jecxz
mov
je
pop
cmp
es
data16
fisubs
call
adc
inc
xlat
push
popf
inc
dec
xchg
mov
sbb
jp
push
cmpsb
fidivs
mov
add
mov
fcompl
je
inc
adc
push
and
mov
je
mov
dec
sub
push
pusha
scas
arpl
mov
testl
sub
loopne
add
inc
out
jmp
stc
cmp
xchg
lahf
test
adc
test
pop
daa
or
loopne
xchg
ret
aaa
pop
repnz
cmp
pop
xor
push
lock
hlt
dec
fmull
shl
sbbb
loope
add
jne
outsb
shr
sub
inc
cmp
pop
pop
ds
popf
loopne
cmpsl
and
xlat
xorl
pop
and
cmp
pusha
test
cld
int3
data16
int
xchg
pop
aad
fdivrl
je
shrl
cmpsb
aaa
jb
test
js
aas
pop
cmc
pop
dec
lcall
test
sub
push
ret
aaa
arpl
test
in
push
dec
mov
lret
stos
das
cmp
mov
imul
je
aaa
and
or
jle
test
add
cld
dec
cmpsb
icebp
mov
xchg
xchg
loop
ret
jg
cmpsl
sub
fildll
pop
push
js
sub
add
repnz
mov
pushf
loope
xchg
repnz
and
dec
ret
xchg
mov
dec
mov
stos
xchg
shll
mov
inc
decb
adc
push
push
fsubrs
pop
or
popf
sbb
mov
pop
add
fnstenv
cld
sar
mov
leave
lahf
cmp
pop
in
cmp
fcomi
stos
outsb
xor
mov
xor
push
lea
outsb
into
dec
test
ljmp
xlat
fs
arpl
push
mov
mov
hlt
inc
and
inc
rorb
cmp
push
mov
bound
mov
or
shr
add
mov
addr16
or
add
mov
call
lods
mov
lock
xchg
in
test
inc
dec
sub
pushf
iret
in
jp
jne
xor
inc
lcall
sub
fstpl
ret
int3
lods
xchg
mov
pusha
insl
in
insl
sti
in
xchg
jg
xor
cmc
sbb
popa
cmp
addr16
sti
xchg
jnp
add
daa
sarb
mov
lds
mov
rolb
fisubs
inc
mov
and
inc
inc
sub
add
loopne
loopne
sub
mov
lahf
dec
dec
jno
inc
fwait
inc
sbb
mov
aad
mov
insl
inc
stc
push
ror
popf
jp
sbb
or
xchg
in
inc
test
subb
add
xor
ret
mov
mov
jl
pop
lret
ja
fwait
mov
pop
dec
test
cld
jae
ret
xor
adc
push
mov
xchg
inc
cs
jno
loope
mov
daa
dec
icebp
sub
pop
add
xlat
xchg
cmp
push
push
in
aaa
and
or
nop
mov
pusha
imul
xchg
rcr
pop
mov
mov
push
stos
fs
cs
test
std
in
fldcw
fisubrs
inc
and
test
push
inc
repnz
mov
outsl
mov
xchg
rcrl
data16
sub
pop
enter
loopne
inc
dec
sbbl
std
add
mov
pop
mov
or
sub
cli
hlt
stc
ret
pushf
push
je
dec
xchg
in
shrb
sub
fisubl
xor
jecxz
push
push
and
push
rcrl
cmp
sub
mov
ret
jb
add
stos
adcb
hlt
icebp
sub
xchg
xlat
sub
or
and
mov
out
adc
jg
inc
fwait
subb
jae
or
int3
int3
jo
cwtl
insl
ds
sbb
xlat
pop
fsubrl
xchg
shlb
sarb
jbe
jnp
push
ss
add
inc
dec
xor
cli
jmp
push
outsl
or
jl
adc
les
and
pop
lahf
cmc
dec
add
and
jecxz
loopne
jne
shl
rcrb
sbb
push
rcll
lods
loop
shl
inc
movsb
stc
sub
icebp
jb
lea
push
pop
loope
pop
push
dec
xchg
clc
mov
push
iret
sahf
adc
dec
cmp
mov
sub
pop
fnstsw
shll
push
dec
dec
ss
jp
mov
aad
fwait
jne
add
push
push
sub
mov
call
mov
mov
cltd
fadd
push
adc
adc
cmpsl
inc
int
cmpsl
mov
push
and
mov
xor
roll
or
lcall
ficompl
orl
jno,pt
inc
cmpl
das
addr16
push
mov
hlt
push
mov
push
cmc
pop
test
insl
addr16
dec
into
mov
jp
movsb
inc
push
cmc
jg
sub
into
dec
mov
lret
inc
aam
xor
movsb
mov
bnd
jge
inc
mov
and
das
mov
shlb
dec
inc
in
jae
and
sub
imul
jo
data16
inc
clc
es
mov
add
test
out
rol
jbe
insb
adc
aaa
push
aaa
cmc
imul
sbb
inc
cmpsl
in
in
jge
cld
cli
dec
sbb
lods
rorl
adc
lods
imul
sahf
add
inc
jmp
fistl
cmp
cmp
cmp
fnsave
mov
lret
popl
jne
insb
mov
ficomps
iret
popl
mov
test
sbb
mov
nop
pop
icebp
or
rcll
mov
push
sbb
adc
mov
mov
ja
inc
sbb
adc
pop
dec
jnp
jp
add
xchg
adc
jnp
loop
xchg
adc
jb
ss
rcrl
dec
cltd
mov
xor
iret
scas
sub
shl
pop
mov
enter
sahf
int
scas
xor
push
js
out
mov
pop
testw
aad
jg
cmpsl
or
mov
pop
fadds
sub
daa
incl
inc
mov
rcr
cltd
lahf
push
xchg
cmp
out
nop
jnp
xchg
bound
push
push
and
dec
leave
sbb
iret
dec
lret
aad
mov
aam
fucom
push
mov
icebp
cmp
or
push
adcl
jecxz
add
dec
dec
push
xchg
dec
mov
js
scas
push
nop
inc
fdivs
subb
mov
jecxz
inc
cmc
push
test
push
test
push
sbb
ret
arpl
inc
push
orb
gs
fsubl
arpl
mov
pop
aaa
out
pop
and
pop
dec
sbbl
mov
leave
dec
outsl
mov
push
mov
jmp
repz
mov
ljmp
cmp
mov
adc
inc
push
arpl
inc
sbb
ljmp
push
test
inc
in
cmpsb
mov
ror
pop
negl
into
and
cmp
cmp
push
scas
sbb
fcmovnu
dec
rcrb
sbb
stos
test
xchg
jns
xchg
add
mov
xchg
imul
jmp
adc
xor
adc
insl
adc
in
popa
add
push
dec
jmp
or
aas
jp
pop
test
mov
push
jle
enter
cld
lret
push
into
or
mov
jb
mov
mov
ljmp
push
mov
and
je
out
mov
push
ja
add
sbb
jmp
adc
add
lods
stos
std
fsubrl
dec
dec
mov
mov
ljmp
jae
pushf
lret
push
fwait
mov
and
daa
inc
lock
jne
je
icebp
push
mov
repz
mov
mov
sahf
lret
cmp
dec
xor
xchg
push
popa
fldcw
mull
popf
mov
adc
out
adc
shlb
repz
mov
mov
jns
jl
cmp
xchg
pop
inc
jecxz
xchg
cmp
lcall
daa
std
call
push
mov
ljmp
mov
dec
mov
inc
daa
pushf
cmp
insb
and
cmp
dec
loop
lods
test
mov
rcrb
mov
in
pop
pop
mov
add
ret
mov
in
out
popl
mov
xor
sub
jnp
mov
push
push
push
es
clc
jecxz
into
fistps
daa
xchg
fadds
xchg
or
mov
and
in
pop
popa
scas
shlb
movsl
movsb
std
cmpsb
aam
cmpsb
push
test
add
jp
les
addr16
mov
push
cmp
add
bound
sbb
mov
adc
cmp
cwtl
push
sbb
aad
and
stos
cltd
push
lods
xor
jne
lret
in
test
or
add
jns
ja
add
mov
int3
test
sub
mov
sbbl
pop
sbb
cmp
lcall
sub
flds
mov
mov
xor
lahf
in
gs
mov
push
les
sub
fdivs
iret
add
sarb
mov
popa
and
fsubl
pop
lock
lcall
or
ret
jbe
jbe
jb
movsb
xchg
sub
leave
iret
jno
lcall
push
incl
gs
scas
add
sbb
in
repnz
push
add
inc
cmpsl
pop
sahf
pop
into
fisubl
aas
add
test
sbbl
adc
psubsw
xchg
cmp
cmp
hlt
push
cmpsb
sub
pop
fwait
pop
repz
test
std
jge
ror
fldenv
cltd
mov
rcrl
push
mov
lods
arpl
mov
add
test
push
xorl
rorb
sbb
mov
sbbb
cmpsb
pop
sub
jp
decb
xchg
inc
pushf
mov
int
les
insb
popa
pop
sub
push
mov
filds
ficomps
lea
mov
mov
or
lcall
out
jmp
fldt
jae
std
out
outsl
scas
and
sub
adc
xor
inc
sahf
inc
or
mov
aad
mov
dec
sbb
lcall
push
jge
mov
xor
in
adc
mov
mov
fildll
or
push
adc
pop
std
cmp
push
jl
sub
ja
gs
outsb
test
loop
cli
add
movsb
sbb
pop
push
sub
lahf
lea
cmp
inc
int
call
std
stos
mov
dec
movsl
nop
in
loope
xchg
movsl
rolb
inc
push
pop
je
xchg
adc
push
in
jmp
mov
sub
and
loopne
push
and
mov
js
rorb
in
cmova
fwait
lods
inc
insb
xchg
pop
and
mov
movsb
lret
and
xchg
mov
mov
xchg
js
leave
fwait
ss
iret
jl
fpatan
fistps
iret
add
cmp
xor
xchg
push
repz
loop
lret
pushf
test
loopne
test
insb
push
inc
notb
outsb
cmp
sub
sub
leave
clc
sub
lret
mov
mov
es
pop
cwtl
insl
push
or
jp
push
mov
sti
test
pop
mov
xchg
push
icebp
negl
adc
cmp
add
mov
mov
cmp
popa
cwtl
jp
ss
jl
std
in
aas
pop
fldl
inc
insl
push
mov
xor
pusha
cvtps2pd
lods
outsl
pushl
add
and
jno
and
jl
fists
xor
sarb
sbb
outsb
mov
sbb
insl
mov
das
mov
repnz
test
and
inc
loope
sub
cmp
ret
loop
lret
sbb
cli
xchg
mov
clc
cmp
int
addl
stos
mov
sub
gs
jno
and
sub
jbe
enter
xchg
inc
loop
aas
subl
ret
shl
repz
mov
out
lods
push
sub
jb
add
aam
popa
dec
loope
cli
mov
sbb
inc
cmp
dec
ss
inc
in
pop
aad
fwait
popa
xchg
mov
mov
adc
mov
mov
push
jbe
mov
push
dec
mov
xor
fmull
and
pop
xlat
add
daa
jmp
repnz
cwtl
push
js
dec
jno
xor
sub
les
xlat
movsl
dec
ret
and
push
mov
dec
arpl
push
mov
xchg
mov
xor
fldcw
inc
xor
addr16
cmp
movsl
add
push
mov
add
bound
ret
clc
inc
mov
add
add
aam
cld
mov
jmp
mov
cmp
lods
cmp
push
jne
aam
mov
decb
push
jecxz
adc
ret
les
movsb
sbb
xchg
pop
pushf
mov
outsb
sti
filds
xor
js
sbb
jae
xchg
adc
pop
inc
add
push
in
adc
or
js
push
fidivrs
push
iret
fdiv
cmpb
push
push
ficoms
cwtl
mov
out
jmp
data16
insb
inc
fiadds
xchg
mov
push
jbe
sub
lods
rolb
or
out
test
push
addb
inc
push
loope
nop
bound
imul
xchg
jle
xchg
loope
inc
cmp
add
clc
cmp
test
jne
sub
aad
aaa
int
loope
jl
out
xor
add
mov
pop
add
mov
into
fsubrl
add
xchg
addl
sbb
ja
xchg
jns
aam
notl
nop/reserved
loopne
mov
mov
insb
in
adc
out
xor
fdivrs
popf
mov
jge
test
xor
xlat
cmp
inc
mov
hlt
and
out
sub
pop
sahf
lea
out
push
adc
test
clc
add
aad
shrb
pop
test
or
mov
cwtl
pushf
fnstsw
stc
loop
push
xor
iret
or
cmp
loope
in
outsb
pop
adc
adc
push
mov
in
inc
ficoml
fs
pop
jb
jo
mov
adcb
mov
jno
jmp
movsl
pop
add
mov
popf
fadds
cli
iret
in
in
aas
aad
fcmove
adc
nop
push
push
fsubrs
sbb
lods
dec
or
out
push
lahf
inc
mov
mov
xor
pusha
sub
mov
cs
mov
cmp
into
ficomps
cwtl
mov
pop
stos
pop
rorl
adcb
xor
js
or
dec
imul
es
ds
orb
fwait
jns
stc
pop
and
or
mov
stos
cmpsb
xor
add
adc
inc
sbb
inc
mov
mov
and
add
pop
sbb
outsb
jb
popa
lock
pop
add
in
call
cmp
out
ret
jle
das
lret
dec
add
xor
inc
add
pop
repz
loopne
fwait
rcll
call
mov
jge
inc
das
cwtl
in
adc
inc
roll
sbb
pushf
out
jg
hlt
in
push
inc
test
aad
adc
shrb
or
fcoml
pop
sub
lock
bound
push
mov
pop
push
push
pop
push
add
cwtl
adc
lret
arpl
cmp
mov
je
out
js
mov
pop
imul
adcl
mov
sbb
xchg
iret
push
cwtl
mov
or
pop
je
nop
or
and
inc
clc
mov
or
icebp
movsl
out
testb
dec
cmpsl
adc
pop
xchg
lret
xor
outsl
hlt
pop
mov
push
loop
out
push
movsb
mov
leave
cltd
adc
push
mov
push
popf
ficompl
popa
jb
sbb
ss
je
out
and
aaa
loopne
stc
and
imul
cli
arpl
mov
add
lds
inc
movsl
dec
xor
push
adc
jns
and
xchg
fsubrs
xor
mov
into
adc
or
xor
enter
insl
lea
out
lahf
and
loop
mov
arpl
dec
mov
mov
call
rcr
fnstsw
jnp
xchg
or
or
push
dec
pop
scas
jnp
sbb
xor
out
in
sbb
xor
in
and
sub
sub
cwtl
xlat
shrl
lcall
ret
push
insl
push
dec
jne
movsb
movsl
mov
inc
pop
xor
andl
cmp
push
xor
es
and
push
aam
mov
sahf
fsubrs
movsb
pushf
leave
and
nop
sbb
sysret
inc
pop
daa
mov
inc
mov
insb
pop
test
cmp
add
int3
arpl
fisubl
xor
lea
iret
nop
call
lods
xor
lds
mov
xlat
adc
push
xor
ror
pop
xor
ret
andl
jl
adc
psubsb
jo
in
ss
das
push
dec
int3
mov
addr16
je
in
test
nop
fwait
and
rcrl
adc
sub
and
pushf
and
outsl
adc
imul
rorl
or
in
inc
adc
divb
insb
icebp
sbb
sbb
add
xchg
int3
rclb
mov
in
cmp
xor
sarl
fsub
je
xchg
daa
sub
or
xor
and
xchg
dec
je
jle
in
dec
fdivrl
mov
popa
sub
ja
fnsave
sub
cmp
cmp
jg
stc
lcall
jne
push
xchg
or
pop
imul
sub
inc
sbb
push
push
nop
clc
cmp
lock
push
lea
jle
ret
ljmp
jb
fwait
test
test
cmp
inc
out
inc
mov
jmp
xchg
xchg
ficomps
mov
jmp
dec
stos
pusha
and
aad
inc
jno
je
or
inc
cmc
mov
lret
mov
sti
fnstenv
test
pop
roll
mov
sbb
jg
repnz
or
and
cmc
shll
lock
inc
mov
xchg
jbe
imul
rol
gs
xchg
xchg
pop
add
scas
jp
ret
cld
movsb
sbb
xor
je
jle
cld
gs
mov
js
mov
cli
iret
test
lds
mov
xchg
xchg
je
mov
mov
int3
loop
aad
rcrl
sub
orl
ret
daa
cmpsb
adc
push
dec
xchg
std
rcrb
add
mov
ret
call
iret
add
sbb
test
jb
clc
pop
nop
aas
push
pop
lods
sbb
pop
inc
movsl
or
das
mov
jbe
incb
shl
movsbl
fwait
mov
notl
sahf
dec
mov
mov
xchg
push
sbb
or
cld
adc
xchg
rcll
mov
cmpsl
push
shlb
mov
sahf
imul
mov
xor
jg
mov
inc
pop
xchg
aaa
push
das
ss
je
cli
sub
sub
leave
or
lcall
cmp
dec
pop
mov
daa
dec
fcmove
int
pop
call
fadd
out
scas
xchg
das
out
jmp
or
bound
adc
js
dec
and
inc
cltd
add
test
fldt
shrl
or
pop
mov
ljmp
shr
mov
test
cli
pop
mov
lods
mov
add
test
dec
cwtl
pop
fistps
int
subl
jbe
xor
cmp
imul
aam
fdivrl
aam
sbbl
adc
adc
in
aam
cs
pop
mov
mov
imul
imul
sbb
popa
ret
inc
push
jp
rorb
fmul
jle
lcall
gs
jmp
add
repnz
xor
jbe
jle
out
pop
push
in
cmp
cmpsl
inc
les
enter
aaa
sbb
inc
jb
movsb
loopne
shrl
push
lods
andl
arpl
stos
jne
pop
outsl
push
xor
sahf
cmpsl
test
scas
dec
cmpsb
aad
icebp
mov
mov
inc
jnp
stos
ja
in
pop
adc
mov
icebp
loop
mov
adc
inc
and
pop
push
xorb
pop
pop
inc
sub
mov
gs
xchg
lock
xor
pop
pop
decl
out
jnp
fldt
ret
scas
cmpps
fistps
imul
and
stc
int3
loope
sub
adc
xor
ds
pop
sub
sahf
addr16
cmp
iret
xchg
jg
cmc
lret
loope
sub
fs
dec
scas
xchg
int3
xor
pop
insb
std
xchg
jmp
mov
and
and
repnz
push
in
insl
repnz
or
mov
arpl
pop
jge
cmpsb
sbb
xchg
cmp
insb
fsub
adc
aad
sbb
xchg
mov
push
cmp
or
xchg
jns
fs
js
fadds
inc
adc
fcmovu
movsbl
adc
push
ss
or
iret
ljmp
pop
sbbb
stos
mov
insl
jle
jae
cltd
mov
adc
out
mov
dec
xchg
cmpsb
inc
inc
add
ja
push
pop
scas
mov
clc
cld
out
xchg
js
rorb
imul
and
call
imul
gs
xchg
icebp
loop
into
adc
mov
mov
aam
xchg
push
dec
repnz
out
daa
xor
js
test
insb
inc
jb
jbe
pop
jecxz
add
imul
push
adc
sub
fildl
sbb
imul
in
outsb
jmp
push
jnp
imul
sub
adc
fsubr
xchg
dec
cwtl
aas
mov
ret
jno
into
sbbb
xchg
mov
repz
idivb
enter
dec
aad
sbb
pop
call
xlat
sbb
int
mov
add
das
lret
pop
or
ret
dec
mov
jp
test
jae
push
outsb
loope
push
iret
mov
repnz
jb
jle
jns
or
dec
enter
aam
mov
js
dec
fwait
inc
call
xchg
cmp
xchg
adc
sbb
mov
push
std
inc
jmp
movsl
cmp
addr16
jecxz
fisubl
gs
fidivs
data16
add
inc
lods
mov
dec
mov
int
pop
insb
gs
frstor
adc
dec
push
loop
dec
dec
sub
sub
fucomi
sbb
or
xchg
lods
out
sub
adc
cmp
call
inc
int
xchg
or
xchg
mov
in
ljmp
mov
or
ret
andb
sbb
or
ljmp
sti
addr16
mov
das
xor
icebp
pop
ljmp
cmpsb
loopne
mov
xchg
add
fildll
dec
adc
push
sbb
in
shrb
mov
fcmovnb
inc
cmp
shll
jne
je
mov
add
mov
rorl
ljmp
aas
jecxz
movsl
in
imul
in
mov
dec
and
jl
add
out
cmp
cmp
outsl
je
inc
loope
les
sbb
mov
fsts
sti
shll
xchg
push
shlb
testb
pop
add
push
insl
pushf
test
jbe
xchg
jmp
push
idiv
lds
xchg
cs
insb
jge
xchg
dec
xorb
mov
jg
xor
xlat
lcall
xor
mov
dec
scas
or
lds
scas
fistpll
pop
xor
add
mov
dec
js
daa
repnz
sbb
icebp
out
push
cmp
out
mov
pop
mov
movsl
mov
out
ret
jno
adc
fmuls
push
int
push
inc
pop
bndldx
lcall
jge
ja
cmp
stos
gs
xor
aaa
pop
popf
pushf
sbb
in
and
and
cwtl
dec
lods
icebp
or
lock
ja
sub
les
mov
or
mov
out
ja
and
pushf
dec
pop
outsb
sti
mov
in
xchg
add
or
mov
stos
cli
or
andl
mov
xor
data16
fisttps
xchg
jae
out
cmc
push
addb
mov
inc
adc
jle
xor
adc
aad
lods
imul
mov
cmc
jl
cli
cs
pop
ret
mov
dec
fsubp
std
ret
into
jl
push
arpl
shl
arpl
xchg
repnz
ret
fsubp
xor
std
out
mov
add
fisttpl
mov
jns
jg
js
xor
mov
mov
loopne
dec
add
mov
and
lods
jp
fistps
pop
ret
jecxz
mov
xor
outsl
mov
lock
jge
hlt
mov
or
sti
adc
mov
arpl
dec
fidivs
inc
jl
inc
repnz
pop
test
iret
push
jecxz
mov
push
inc
sub
xchg
push
push
push
rcrl
cmpsb
mov
mov
fsub
shrl
negl
lret
imul
addl
jg
popa
pop
cmp
mov
mov
sbb
adc
adc
mov
loop
fwait
stos
xchg
in
push
test
es
mov
xor
inc
jne
test
lods
dec
bound
aam
addl
call
add
aaa
dec
mov
ret
cmp
push
push
sbb
pop
negb
jae
out
xchg
adc
mov
loopne
dec
jo
dec
bound
js
and
xor
sbb
push
rorb
bound
jne
js
and
out
out
orl
jae
xchg
aas
imul
jbe
test
mov
jge
mov
cmp
loop
and
lds
je
jle
sub
mov
cltd
loop
filds
xchg
jne
ja
mov
jne
lock
jnp
jno
or
call
stos
pop
inc
pop
push
sbb
leave
arpl
push
push
daa
fdivl
or
and
xor
jb
sahf
dec
mov
mov
or
pusha
shl
mov
pop
aaa
or
mov
je
hlt
les
shll
in
adc
cmpsl
pop
jp
or
mov
ds
adc
loopne
cli
dec
and
sbb
mov
std
repz
jle
jecxz
xchg
mov
mov
stos
scas
gs
push
mov
or
movsl
test
and
add
rcrl
lods
or
imul
scas
push
add
mov
mov
cmpsl
pop
pop
das
leave
push
jb
cmc
adc
icebp
outsb
dec
push
and
inc
sub
mov
aas
mov
push
adc
inc
test
inc
push
notl
jne
and
cmp
in
bound
push
add
jbe
pop
and
sub
mov
stc
jecxz
fists
fsubrl
dec
scas
lods
mov
das
fs
or
cmp
cmp
lods
pop
pop
mov
scas
jp
out
dec
xchg
scas
jmp
inc
pushf
cmpsl
add
pop
xchg
out
inc
js
stos
loop
pop
lods
adc
int
xchg
add
les
cmp
pop
mov
or
push
lcall
iret
jno
popa
xchg
repz
mov
mov
and
in
push
xchg
lods
and
jg
mov
ss
aaa
adc
aas
out
xor
push
cmp
aaa
mov
mov
fcmovbe
sub
adcl
aaa
push
sub
cmc
sub
rclb
pop
jno
add
fiaddl
pop
fimuls
sbb
dec
imull
dec
push
stos
jp
hlt
and
into
add
in
aas
nop
push
cmp
inc
cmc
test
adc
sarb
out
jo
pop
pop
cwtl
mov
inc
mov
push
or
rcll
fildll
int3
jns
sub
out
push
ja
fnstsw
inc
sbb
aam
and
dec
mov
test
mov
jecxz
mov
es
and
scas
dec
push
in
mov
xor
int3
fildll
cmp
aad
jmp
and
xor
jl
push
jb
sbb
mov
shl
icebp
jo
inc
jp
and
aad
cltd
or
div
fwait
mov
mov
mov
cmp
repz
sub
add
jge
dec
mov
pop
repz
inc
jno
lock
insl
js
icebp
ret
cmp
cmp
nop
aam
out
cmpsl
outsl
inc
mov
std
in
dec
stos
jle
ss
nop
repz
mov
pop
push
xchg
pop
into
arpl
cmpsb
scas
not
push
mov
add
or
mov
int
add
pushf
mov
add
or
cmpsb
inc
pushf
adcl
imul
test
jmp
mov
jns
push
sbb
and
pop
mov
outsl
fs
ret
add
adc
lock
push
sbb
fcompl
sub
inc
xor
repz
sbb
in
adc
push
fdivrp
cwtl
jne
into
inc
arpl
popa
shll
adc
cmp
outsb
jp
popl
pop
mov
jo
pushf
dec
sti
mov
push
cmpsw
cmc
jmp
popf
enter
push
and
lret
and
push
clc
clc
or
icebp
imul
xchg
pusha
ljmp
jge
xchg
cli
push
mov
rolb
daa
movsb
xchg
cmp
adc
insb
iret
popa
iret
fwait
popl
lods
dec
xchg
in
adc
add
sub
cwtl
insl
sbb
push
cwtl
xor
lds
test
in
mov
mov
outsl
and
mov
dec
push
scas
mov
push
push
or
and
loope
movsb
and
lahf
les
mov
ret
rcrb
lret
jae
orl
mov
cmp
call
sbb
cs
js
vmovsd
and
dec
pop
jbe
roll
push
add
in
or
xchg
cmp
push
mov
push
mov
mov
enter
gs
mov
and
roll
or
fs
iret
lods
icebp
data16
std
sti
and
pop
cwtl
push
mov
lret
jecxz
and
mov
push
in
arpl
push
sbb
lret
lock
add
sbb
aam
jl
xlat
repnz
push
popa
test
imul
cmp
adc
and
scas
mov
outsb
in
xor
push
mov
inc
jmp
scas
faddl
pop
pop
cs
xchg
cld
pop
dec
dec
loop
xor
iret
mov
popa
push
rclb
push
mov
cmpsb
and
arpl
dec
push
fcmovnb
divb
add
andb
add
xchg
jge
aam
loop
into
mov
adc
loop
lret
dec
mov
mov
push
mov
ljmp
lock
xchg
push
dec
arpl
xchg
xor
cmc
stc
out
mov
mov
jge
insl
adc
mov
lret
iret
or
mov
cmp
xor
sub
mov
insb
sbb
xchg
in
add
hlt
pop
inc
push
mov
aad
pushf
nop
push
aad
std
add
xor
pop
adc
pop
fistl
and
daa
fcmovnb
mov
mov
mov
mov
clc
mov
sub
dec
or
xchg
pusha
aam
aad
pushf
or
imull
rol
mov
cmpsb
xlat
mov
pop
adc
pushf
cmc
test
sub
sub
mov
dec
call
or
leave
xchg
and
jbe
inc
push
jmp
jbe
dec
vshufi64x2
pop
sub
ss
imul
dec
and
es
sbb
inc
cmp
lret
mulb
pop
js
imul
ss
inc
pop
pop
or
hlt
xorl
adc
mov
xchg
and
fldcw
or
les
leave
test
xor
inc
jbe
inc
jl
add
je
xchg
add
pop
add
cld
pop
cmp
dec
xor
jno
icebp
rcrl
xchg
cltd
jnp
push
adc
nop
pop
adc
pop
jecxz
adc
inc
inc
add
pop
pmulhw
sub
sub
testl
pop
add
lahf
repz
pop
pop
push
jae
into
fisubrl
push
pop
loope
scas
leave
add
dec
rclb
add
jno
lret
sub
addr16
addl
arpl
jbe
rolb
cwtl
mov
stos
mov
pop
inc
jne
xorb
rcll
in
andb
in
gs
xchg
pop
push
es
sbb
xchg
push
aas
ror
jae
sbb
adc
adc
subl
out
pop
push
sbb
fs
int3
ja
mov
and
imul
cli
mov
ficoml
movsl
inc
shll
sub
std
scas
mov
xchg
jbe
jp
call
lock
pop
jbe,pn
dec
bound
shlb
cmp
std
cmpsb
call
data16
fcoml
leave
cs
testl
push
add
adc
mov
jmp
cld
dec
xchg
int
xlat
pop
test
mov
xchg
jns
decb
cvtdq2ps
adc
int3
or
in
jns
xchg
cmpsl
jbe
mov
es
xchg
out
inc
ds
xchg
sub
mov
and
jne
push
xchg
or
cmpsb
inc
mov
xor
dec
mov
js
vaddsubpd
xchg
in
mov
jg
loope
cmp
adc
inc
pop
repnz
inc
mov
stos
xchg
push
jae
jo
popf
or
dec
or
pushf
pop
add
pushf
mov
push
push
daa
or
cmpsl
jbe
dec
xchg
lock
inc
dec
fs
push
sbb
insb
out
cmc
loop
xchg
xlat
scas
sub
lods
enter
xchg
lea
mov
arpl
inc
xchg
or
jns
loop
int
insb
jae
arpl
mov
das
aad
pop
repnz
fnstcw
push
rclb
gs
sub
arpl
adc
inc
jmp
sub
fldl
gs
int3
mov
mov
ja
je
or
mov
imul
xchg
je
std
mov
movsl
das
xor
cmp
mov
imul
in
ret
push
jecxz
jl
jmp
lods
mov
iret
and
sbb
popa
jmp
call
popa
test
and
inc
sarl
mov
gs
in
mov
and
or
adc
xchg
push
int
push
addr16
pop
test
mov
xchg
cmp
daa
data16
xchg
sahf
adc
insl
outsl
fldenv
inc
xchg
insb
mov
and
repz
cmp
lret
xor
ret
pop
push
add
or
cmp
dec
movsb
mov
dec
cmp
mov
addb
sbb
outsb
ret
ljmp
subb
outsl
loope
adc
pop
xlat
cmp
jo
sti
dec
mov
ja
pop
pop
lret
lds
ja
dec
and
push
icebp
je
cmp
popf
negb
ret
lahf
imul
pop
dec
xchg
movsl
mov
mov
in
jbe
mov
stos
addl
rcrl
jbe
jp
adc
push
cltd
jle
push
push
popf
jbe
sti
rcll
out
arpl
test
das
xchg
mov
xor
xchg
dec
mov
mov
add
fnstenv
movsb
jb
out
mov
sbb
imulb
mov
test
and
push
imul
das
mov
sub
jno
gs
lock
je
mov
test
lea
sub
sbb
add
lock
sbb
mov
mov
sbb
mov
inc
jp
mov
jb
mov
cli
or
fnstcw
cmpsl
sbb
pop
hlt
add
scas
test
xor
mov
mov
jnp
icebp
sbb
push
ja
stc
cmp
mov
fs
sbb
sbb
popa
xchg
lea
mov
sub
scas
jge
add
loop
cmp
mov
adc
xchg
outsl
not
roll
stos
xchg
inc
and
repnz
cmp
ljmp
out
rol
xor
fistps
sbbb
jle
xor
add
rorl
inc
lods
lea
aas
and
cmp
pop
popa
jne
les
jae
push
adc
sbb
fiaddl
push
mov
cmp
ret
mov
mov
jl
fsubrs
out
sub
and
lods
sub
xacquire
movsb
sbb
in
gs
or
xor
pop
sbb
lcall
inc
inc
pop
stos
lods
cmp
add
popf
dec
inc
adc
mov
pop
das
push
lcall
fnstsw
push
jg
fstp
cmp
xchg
dec
cmp
or
je
lea
or
push
fcomps
adcl
lahf
enter
xchg
les
mov
sbb
mov
pop
jle
cmc
inc
out
pop
divl
mov
out
push
arpl
ss
inc
faddl
xchg
adc
add
icebp
outsb
out
adc
cmp
fistl
jg,pt
out
adc
sub
insb
andb
pop
pop
dec
jo
scas
push
out
insl
insb
mov
mov
mov
push
mov
xor
fisttps
ss
push
mov
fwait
arpl
popa
sbb
cmpsb
dec
push
dec
add
and
jb
into
aad
lahf
imul
mov
jb
fwait
iret
in
stos
xor
cmc
add
in
dec
pop
or
adc
push
rclb
cld
popa
sbb
mov
stc
push
push
inc
mov
inc
adc
cmp
aaa
cmc
dec
mov
nop
mov
jle
test
sbb
mov
xlat
mov
mov
mov
int3
fmull
roll
xor
sub
ret
push
andb
dec
cld
lret
fstp
adc
inc
lret
pop
jb
push
xchg
jle
fisubs
addr16
dec
xchg
cs
sub
mov
inc
pop
out
je
lods
or
fstpt
or
outsb
loop
sarl
inc
mov
out
dec
mov
cmp
loopne
mov
add
sub
inc
jne
mov
mov
xchg
ljmp
repz
test
out
mov
and
mov
adc
test
popa
pushf
fistpll
push
pop
imul
pop
push
mov
adc
cmp
pop
or
sbb
push
inc
xor
ret
je
inc
test
jle
mov
sbb
fstpl
inc
add
inc
rorb
shll
int3
ds
aas
cmc
jge
mov
dec
fdivs
jnp
adc
imul
out
mov
ficoms
mov
mov
pop
sub
lods
mov
push
mov
jp
dec
ds
xchg
imul
mov
or
jne
ja
mov
push
leave
dec
aad
inc
shrb
ljmp
lods
jno
or
mov
xor
nop
inc
jno
add
insl
sub
adc
cltd
sbb
add
jle
gs
popf
sub
out
loopne
mov
add
and
aad
js
ds
lock
jno
sub
outsl
jbe
loopne
into
out
notb
icebp
fcmovnb
jo
loop,pn
inc
jmp
test
xor
loope
sbb
mov
sub
sbb
mov
les
mov
or
mov
jne
ret
mov
lds
xchg
jl
aaa
orl
test
mov
jnp
in
dec
pop
jle
fidivrs
push
sbbb
loop
push
filds
cmp
inc
ret
push
rcr
add
and
out
jbe
jno
add
and
aad
lds
mov
mov
mov
inc
push
cmp
jmp
adc
mov
mov
pop
out
push
int
mov
pop
out
pop
add
int3
decl
nop
test
adc
inc
pop
jns
repz
out
dec
xchg
iret
jecxz
imul
cmpsl
adc
xor
push
sbb
dec
sbb
jmp
movsl
pusha
std
jmp
push
loope
adc
and
pop
push
xor
xchg
loope
add
mov
frstor
stos
aas
les
mov
inc
test
push
test
and
xor
test
cmpl
sub
xchg
test
pop
pop
xorb
imul
fstpl
sbb
je
add
push
pushf
cwtl
sub
push
mov
push
inc
adc
pushf
mov
jo
popa
int3
arpl
int3
push
rorb
add
sub
fcomps
mov
arpl
in
jp
pop
push
sbb
aad
xor
mov
pop
ljmp
push
adc
jo
xchg
in
jle
cmp
mov
jl
outsb
std
data16
pop
dec
jns
inc
sbb
in
push
out
jg
push
xchg
jg
das
add
pop
adc
sbb
or
lods
popa
insl
xlat
insb
xchg
xlat
mov
ss
xchg
push
pop
mov
aad
pop
jecxz
xor
jl
inc
dec
es
nop
xor
out
xor
xor
notl
js
nop
in
ret
outsb
jmp
lds
mov
into
shll
xchg
or
leave
fstl
cmp
mov
cwtl
add
push
testb
int3
and
test
push
test
jb
xchg
sub
xor
xadd
cmp
sahf
aad
movsl
jg
mov
call
lods
mov
xchg
mov
sbb
push
scas
cltd
inc
outsb
ss
or
jae
sub
xor
mov
ret
addr16
arpl
cmp
cmpsl
popf
sbb
mov
mov
out
mov
insl
js
mov
sub
cmc
scas
xor
or
test
add
xchg
inc
fidivrl
sub
gs
push
mov
xchg
cmp
adc
mov
lcall
sbb
inc
stos
cli
fiadds
out
and
out
jmp
je
mov
test
adc
aas
ficoms
fucomip
hlt
in
jp
int3
pop
jge
lahf
add
mov
dec
fwait
outsb
outsb
dec
fistps
cltd
outsb
or
dec
rorb
dec
fdivr
cwtl
repnz
sti
push
mov
sbb
jmp
and
scas
inc
fnstenv
arpl
idivb
les
out
pop
inc
or
daa
push
jb
addr16
push
xlat
push
movsb
jne
cmc
cmp
sub
xchg
ret
xor
shll
mov
mov
fldenv
mov
sbb
stos
push
xchg
inc
aas
fsubrl
js
xor
sub
ret
out
fldl
imul
es
data16
push
pop
repnz
lahf
and
inc
hlt
fistpll
scas
xlat
jae
out
bound
ficompl
xor
sbb
repz
xchg
xchg
inc
sbb
cli
inc
call
push
enter
outsl
scas
testl
cmp
clc
inc
xor
and
or
inc
sub
jnp
xor
mov
sbb
daa
xor
add
movsb
stos
or
daa
in
into
and
dec
mov
adc
or
pop
xor
shlb
mov
pop
clc
add
addr16
stos
scas
cs
pop
fbstp
lret
ds
dec
outsb
sub
or
pop
adc
aas
inc
sahf
mov
xchg
mov
shlb
enter
std
fsubrl
loope
cmpsl
lds
stos
xor
loopne
mov
pop
outsb
lcall
inc
jecxz
mov
test
inc
pop
jecxz,pt
aad
aad
cmp
or
stos
jge
add
loop
jmp
lcall
inc
lcall
dec
ficompl
fadds
pop
stos
divl
jmp
sub
sub
and
mov
arpl
aam
sub
daa
xchg
cwtl
movsb
cmp
es
stos
dec
jnp
ljmp
sbb
call
or
into
in
dec
cmp
mov
push
cmpsl
stos
cmp
xchg
xor
ljmp
es
imul
repz
std
push
pop
mov
aam
bound
cmp
cmp
jl
and
enter
sbb
divb
mov
xchg
and
out
jns
mov
std
lret
daa
repnz
add
daa
sub
push
js
out
in
mov
jg
repnz
insb
xor
adc
cltd
cmpsb
jbe
adc
xchg
inc
xchg
js
daa
pop
jae
mov
push
ja
pusha
mov
inc
push
lret
and
xorl
mov
loope
cs
push
int
and
inc
scas
pop
xor
fcompl
dec
inc
sub
inc
mov
and
aad
adc
clc
icebp
sbb
mov
jl
leave
add
lds
xchg
in
mov
jecxz
dec
aam
lahf
mov
inc
lahf
popa
jbe
repnz
push
pop
jne
pushf
rcr
mov
cmc
daa
adc
jo
test
cmp
in
dec
pop
sti
stos
and
decb
sub
xor
mov
clc
out
test
loopne
stc
testl
adc
cmpsb
jge
in
cmp
js
repz
icebp
test
push
orl
inc
xchg
mov
sbb
dec
aad
lods
fs
sbb
outsl
adc
jne
or
movsb
loop
int3
cmpsb
mov
adc
xor
dec
lret
mov
daa
dec
std
mov
mov
int
pusha
addl
inc
stos
xlat
push
add
aad
in
cld
push
or
ret
test
pusha
add
mov
aam
hlt
dec
lahf
in
daa
outsb
repz
cmc
std
aaa
jbe
fwait
jg
subb
shl
jge
addl
repz
insl
add
int
loope
adc
lahf
fmull
insb
jg
roll
push
pop
fsubrs
shlb
in
lea
imul
push
jno
lret
push
movsl
jo
dec
arpl
out
leave
inc
and
loop
daa
imul
movsb
test
cmp
pop
cwtl
jno
loopne
sbbb
arpl
jo
leave
out
imul
xor
movsl
or
std
int3
add
sub
xor
lods
mull
int3
add
mov
stos
movsb
idivl
addl
push
stc
lds
add
or
lods
cmpl
jmp
xor
insl
push
or
ret
aaa
bound
jmp
enter
jl
and
inc
mov
js
cmp
les
push
and
ss
pop
cmpsb
cmpb
and
scas
fcmovu
push
ss
mov
cli
mov
cmp
mov
sub
decb
sub
xor
pop
movsl
arpl
imul
daa
cmpsl
out
js
pop
pop
xchg
pop
ret
cmp
shll
sahf
lods
mov
mov
xlat
or
stc
lods
pop
cmp
ret
sbb
sti
lods
cmc
lea
sub
pop
xchg
xchg
adc
cmp
adc
rcr
dec
imul
pop
xor
jp
cwtl
repz
jle
pop
pop
lods
xchg
arpl
es
xchg
ficomps
outsb
sahf
andb
jns
push
rcll
aad
imul
and
sub
pop
cmp
shrl
dec
dec
jge
and
fstl
incl
fdivl
repnz
shlb
imul
xchg
mov
test
push
lret
jno
pop
cmpsb
or
inc
push
sbb
xchg
or
arpl
and
leave
push
pop
xchg
xchg
imul
mov
xor
and
xor
rcl
pop
pop
mov
xor
movsl
xorl
lret
adc
dec
movsb
scas
jo
mov
add
ja
shrl
stc
pop
lahf
adc
jmp
nop
dec
and
out
imul
iret
pushf
mov
jp
pushf
add
es
xorb
xor
jbe
xchg
imul
dec
out
dec
mov
mov
adc
xor
aaa
lret
adc
pop
mov
adc
cltd
mov
mov
bound
sub
push
test
xor
mov
gs
push
movsb
mov
cmp
sbb
add
pop
repz
jecxz
mov
sti
loope
and
repnz
mov
push
jbe
xor
push
pushf
je
mov
push
js
imul
mov
push
lcall
fnsave
pop
lret
scas
outsl
mov
jb
mov
out
das
ret
mov
xor
fwait
or
add
pop
sub
adc
pop
jle
imul
adc
mov
jmp
sub
push
pusha
cmp
mov
fcmovbe
les
outsb
jo
pop
push
jmp
fistps
mov
push
int
mov
rcl
or
mov
or
sub
sahf
mov
adc
push
xchg
mov
and
addl
fsubrs
lds
inc
pop
inc
mov
aas
fildll
push
mov
cli
inc
cmp
pop
inc
mov
pop
dec
dec
addr16
leave
dec
out
leave
call
mov
aam
push
mov
fisttps
xor
xchg
out
lret
aaa
test
addl
mov
iret
jo
ja
and
std
mov
decl
mov
shll
and
daa
dec
mov
push
enter
sbb
push
cmp
adc
mov
jmp
sub
and
push
and
cmpsb
es
lods
push
mov
fs
outsl
aad
inc
out
push
nop
mov
xchg
mov
rorl
or
xchg
jecxz
inc
cmpsl
imul
js
xchg
adc
add
xor
push
out
nop
outsb
xchg
mov
fcoms
adc
pushf
push
rorb
jo
mov
push
cmp
jns,pn
rorl
addl
sub
repnz
and
leave
repz
mov
in
jmp
jmp
movswl
lcall
fwait
dec
sbb
adc
add
arpl
aam
fsts
movsb
les
mov
fdivs
lods
ds
pusha
jns
aam
ds
xor
and
add
lea
xchg
das
or
mov
ss
mov
out
lods
clc
jnp
push
test
out
cs
cmc
xchg
mov
notl
subl
inc
test
dec
stc
jl
cmpsl
dec
xchg
testb
and
xchg
fisttps
lods
inc
cmp
and
out
push
and
push
lea
jnp
dec
mov
sti
pop
or
mov
adc
fwait
and
scas
fidivs
cmpsb
mov
lcall
rcl
and
dec
pop
add
mov
or
dec
pop
mov
gs
or
shlb
es
scas
rorb
xchg
cmp
bound
mov
inc
cwtl
imul
mov
mov
push
add
hlt
ljmp
jne
xchg
scas
add
and
push
popa
aam
inc
mov
push
stos
add
cmp
xchg
push
scas
js
or
pop
push
cltd
jae
sbb
leave
test
stos
mov
shl
cmp
pop
jbe
xchg
leave
and
mov
or
mov
and
xchg
mov
cwtl
in
enter
in
xchg
rcr
dec
cltd
cmp
inc
mov
arpl
jl
scas
pop
mov
push
das
jb
mov
cmc
rorb
pop
sbb
lock
or
insb
pop
xchg
pop
fldl
add
xchg
insl
mov
inc
or
outsl
lods
nop
dec
test
or
or
cmp
mov
adc
cltd
fsubrl
and
mov
in
ret
fs
loope
leave
leave
lds
mov
mov
insl
movsb
addr16
dec
mov
enter
jg
cwtl
inc
push
mov
xor
insl
adc
mov
xchg
sahf
cmc
xrelease
insl
add
sti
nop
rcll
popa
fwait
push
insb
imul
and
js
push
cmp
sti
ficoml
add
push
ja
sti
push
sbb
idivb
xchg
popl
mov
ret
or
fistpll
mov
mov
mov
adc
cli
lcall
cmpsl
imul
test
std
lret
and
mov
int3
hlt
xor
push
rcr
dec
pop
sarl
scas
das
jb
jo
jp
push
mov
cmp
mov
sti
fisttpll
xor
xchg
mov
loopne
jno
inc
push
sahf
sarl
jmp
lock
stos
xor
dec
xchg
adc
xor
ret
dec
xor
cmpsb
or
xor
pop
xchg
dec
lods
test
movsb
fldln2
xchg
dec
jbe
adc
in
sub
ret
popf
sbb
popf
dec
popl
lods
inc
das
test
testl
jecxz
pushf
aad
addr16
mov
mov
loope
lret
pop
mov
xor
lret
test
in
insl
aam
mov
lds
jge
mov
jmp
jmp
aaa
lret
push
xchg
ds
scas
out
leave
popf
loop
jmp
shll
out
lods
loopne
shrl
mov
movsl
cmp
jb
iret
testb
or
jg
mov
and
xor
and
mov
in
jmp
int
dec
xor
jmp
icebp
push
or
out
mov
clc
rcrl
dec
inc
andb
pop
and
mov
test
pop
iret
clc
rolb
stos
cld
mov
movsb
cmp
lahf
std
enter
outsb
out
cld
lcall
push
push
iret
push
orl
mov
mov
dec
and
inc
mov
xor
jp
fs
popf
xor
or
mov
adc
mov
mov
or
push
enter
pop
iret
xchg
push
cwtl
inc
and
lock
sbb
mov
nop
adc
pop
add
cli
adc
ss
or
push
jmp
rcll
out
push
rol
hlt
xchg
inc
bound
lahf
ljmp
daa
iret
pop
repz
adc
idivb
mov
push
pop
out
xor
addr16
xor
dec
popf
pop
aad
jl
inc
adc
xor
test
cmpsl
sbb
iret
std
rorl
outsl
mov
divb
dec
sbb
mov
setae
pushf
cmp
xor
xchg
fildl
sub
mov
and
je
add
test
sub
mov
out
inc
movsl
or
js
loop
iret
xchg
inc
fdivrs
pop
std
jne
in
and
js
ficoml
and
aad
ret
sub
mov
aad
movsl
loop
or
jns
xchg
in
xchg
jg
mov
and
ljmp
test
notb
push
add
movsl
xor
inc
test
or
jg
sbb
xor
test
cvtps2pi
cmp
push
outsb
mov
lods
cmp
lock
sub
inc
pushf
cmc
es
divb
push
add
push
xchg
xchg
jne
add
shlb
jg
in
popa
cmp
stos
rorl
sarl
push
lods
lahf
push
push
sbb
arpl
push
cmp
stos
mov
xchg
testl
pop
outsb
sub
jbe
imul
lea
dec
push
push
jmp
or
test
jmp
and
cmp
add
mov
hlt
stc
mov
xor
mov
xchg
push
xchg
adc
push
mov
jmp
mov
in
std
sub
cltd
xchg
cmp
das
lea
sti
iret
loopne
xchg
cld
cmp
mov
and
cwtl
insb
xor
and
mov
sbbl
inc
out
jp
dec
xchg
test
cmp
pop
ljmp
jmp
movsl
mov
aas
test
imul
jnp
or
mov
sbb
imul
jl
inc
jns
push
int3
ficompl
pop
add
push
or
jge
dec
iret
mov
inc
cmp
push
outsl
icebp
stos
and
xchg
push
and
sub
cmp
loope
adcb
mov
xchg
sarb
pop
xor
pop
aas
fdivrl
arpl
pop
std
dec
or
mov
jb
insb
addr16
push
cmp
inc
xor
jmp
mov
jae
clc
jae
jb
pop
icebp
shll
es
cmp
or
es
cmp
push
pop
mov
dec
pop
or
sarl
mov
jecxz
subb
gs
push
mov
je
fdivrl
mov
aas
ret
movhps
js
cmc
call
sub
in
push
mov
or
jmp
and
xchg
mov
sub
push
sbb
sarl
cli
fimull
cmp
adc
das
mov
adc
in
test
outsl
bound
push
fimuls
mov
push
imul
inc
inc
fnstenv
ss
mov
sbb
loopne
enter
sub
jmp
lea
or
fildl
inc
imul
das
cmpb
xchg
mov
cmpsb
fs
loopne
push
das
dec
sahf
loop
adc
jp
pushf
test
lea
ds
mov
ucomiss
pushf
mov
dec
cli
fsubrl
xchg
adc
inc
adc
add
fiadds
ret
outsb
add
and
mov
and
dec
sub
aad
in
sbb
int3
cmp
add
sub
mov
push
push
adc
push
mov
jns
rcr
outsb
addr16
in
int
cltd
adc
jmp
pop
cmp
rcl
sbb
jns
lock
aad
sbb
inc
add
and
pop
fst
dec
fnstsw
arpl
ret
aam
xchg
inc
adc
push
mov
xchg
aad
xchg
pop
dec
ljmp
loopne
inc
mov
adc
shr
mov
sahf
movsl
repz
in
daa
mov
or
or
rolb
ds
inc
imul
outsb
inc
subb
add
mov
sbb
push
popa
fs
or
mov
cltd
sub
das
or
and
xchg
cli
adcb
jb
push
mov
mov
sub
add
int3
inc
imul
outsb
addl
jb
outsl
and
jbe
and
in
mov
xchg
pusha
imul
loop
lock
daa
adc
and
pop
dec
mov
cltd
daa
insb
fildl
jp
or
repnz
fwait
jb
test
sti
mov
pushf
mov
adc
push
dec
inc
cmp
ljmp
or
popa
pop
or
cmp
mov
cmp
adc
out
add
and
mov
and
icebp
add
mov
leave
notl
push
jno
cmp
notb
and
pop
xchg
roll
mov
scas
add
es
test
andnps
test
rol
pusha
jp
scas
fdivrl
jne
movsl
sbb
inc
jae
lret
add
bound
sarb
rolb
xor
jno
mov
push
lret
clc
jo
in
dec
cmp
cmpsl
int
adc
xchg
cli
movsl
rcrl
insb
xchg
sub
mov
stc
ja
aas
cltd
sbb
outsl
ljmp
pop
mov
out
or
test
jp
or
stos
lret
jg
mov
lds
mov
xchg
xchg
or
popf
in
or
divl
cmpsb
mov
mov
or
repnz
out
xor
mov
shrb
std
and
out
xlat
jae
aaa
mov
jno
call
jle
mov
push
repz
mov
pushf
in
cmp
cltd
sbb
out
imul
call
xchg
flds
fidivrs
test
notb
adc
repnz
jb
jl
js
imulb
mov
ss
ret
fs
stos
mov
test
mov
es
ret
jg
std
cmc
in
inc
cmp
jns
jae
sub
jb
adc
or
sbb
lds
jg
test
ficoms
js
lock
rep
cmp
xor
bnd
cmp
aaa
sbb
mov
and
mov
pop
test
or
xor
xlat
test
sbb
mov
pop
sbb
aam
adc
lret
push
mov
mov
scas
or
mov
xchg
rorb
inc
pop
add
fwait
iret
xchg
loopne
lea
jne
loop
or
cmp
pop
sub
fistps
sub
test
fsubrs
adc
mov
jb
lock
js
mov
or
daa
xchg
push
dec
mov
pop
clc
jnp
inc
sub
pushl
and
xchg
mull
jne
mov
pop
roll
fimull
lret
movsb
push
das
pop
cmp
xchg
pop
movsl
xchg
ljmp
aam
or
sbb
inc
outsl
xchg
sub
cmp
hlt
sbb
test
inc
pop
jmp
dec
add
fcoms
clc
dec
or
xchg
fs
int3
sub
nopl
jl
or
sub
adc
lods
xor
in
shlb
stc
adc
pop
std
fidivs
xchg
in
les
nop
sub
pop
inc
sub
adc
insl
data16
mov
cmp
inc
aad
mov
push
dec
lock
ret
adcb
pushl
sbb
add
inc
ja
jl
cli
shlb
js
push
jecxz
inc
cmp
jge
aas
sub
mov
inc
das
lods
cld
xor
lahf
aad
jns
mov
adc
test
scas
test
mov
sbbb
dec
pop
bound
test
mov
fimuls
cmp
push
stos
pushf
mov
sub
movsb
rorl
sahf
bnd
jg
imul
and
mov
ret
mov
test
in
add
cs
mov
mov
jl
inc
pop
std
lods
jne
or
sub
mov
mov
mov
test
pusha
jne
jg
in
mov
fs
lds
or
std
sbbl
jne
fdivs
ja
mov
int
es
push
frstor
outsb
arpl
or
adc
pop
jl
xchg
xor
mov
lock
mov
pop
dec
mov
cli
push
mov
mov
and
cs
xchg
js
xchg
out
loopne
xor
into
sub
mov
push
xchg
ja
fsubrs
mov
dec
adc
imul
adc
pop
aaa
sbb
outsb
adc
jno
ss
jae
movsl
lds
xchg
out
test
inc
pop
shl
jle
xlat
pop
dec
ja
jmp
dec
xlat
mov
cmp
imulb
ds
repnz
data16
jae
shlb
mov
inc
inc
mov
fwait
jae
xchg
adc
jle
and
mov
lock
sub
insl
movsb
rorb
stc
mov
add
adc
add
inc
or
dec
mov
out
sahf
mov
add
hlt
inc
cmp
data16
lret
and
dec
das
push
lock
adc
inc
push
sbb
mov
iret
nop
jle
pop
jne
int
xchg
imul
inc
lock
les
pop
daa
arpl
rorl
dec
xchg
xchg
push
out
jnp
fstps
push
sub
sbb
push
inc
pop
or
mov
movsb
mov
aad
insb
dec
in
cmp
push
cltd
pop
mov
jl
dec
pop
mov
into
lret
pop
int3
dec
icebp
add
and
in
in
xchg
cld
pusha
mov
ss
dec
es
inc
fnstsw
das
imulb
mov
ret
shr
xor
push
dec
push
lahf
fdivr
aas
inc
mov
xor
lcall
cmpsb
cwtl
push
pop
into
push
cmp
sbb
add
rcll
and
pop
inc
jne
and
imul
push
pop
in
pop
test
leave
pop
pop
rcrb
push
data16
sbb
sbb
fcomps
out
test
jbe
shrb
cmp
dec
sbb
mov
push
mov
adc
arpl
enter
adc
mov
jmp
sub
jl
repnz
jg
lock
push
out
push
and
call
insb
icebp
inc
scas
jae
xchg
adc
fsts
mov
outsl
leave
shll
lea
inc
jne
fadds
cmpsl
and
sti
xor
or
bound
addb
out
or
mov
mov
std
sbb
mov
sbb
arpl
mov
mov
fidivrl
arpl
mov
scas
sbb
rcrl
push
dec
xchg
xchg
subb
pop
imul
cli
dec
push
ret
mov
jb
cli
aad
mov
fsubrs
pop
push
int3
leave
and
fs
hlt
push
inc
mov
lcall
movsl
dec
movsl
xchg
lods
push
jnp
jl
or
stos
push
out
dec
fdivs
test
mov
jp
push
imul
mov
outsb
pusha
sbb
xchg
adc
add
xchg
in
xor
ret
add
subb
adc
sbb
popf
add
jg
nop
data16
stos
bound
mov
fwait
add
xor
jecxz
mov
xchg
repz
rolb
pop
mov
pop
jno
test
sub
aam
fmull
push
push
sbb
jecxz
jbe
pushf
sbb
cmpsl
pop
mov
jmp
scas
sahf
fs
rorl
cmpsb
fdiv
std
jl
out
roll
pushf
push
or
repz
cwtl
mov
sbb
jg
mov
insb
gs
shl
jns
inc
cmpsl
pop
cmc
pop
es
mov
xchg
loop
stc
xor
add
or
data16
adc
imul
lds
in
pop
push
ds
cmp
mov
rcrl
test
lods
cmp
movl
lea
into
mov
jne
inc
adc
cmpsl
xlat
mov
ss
inc
jecxz
mov
push
lock
movsl
sbb
lret
cld
xor
cmc
scas
gs
sbb
cli
cmp
stos
sub
test
cwtl
stc
loopew
lods
xchg
or
or
mov
loope
add
inc
insl
inc
lcall
pushf
les
push
fs
stos
mov
scas
cmp
mov
gs
push
xor
jmp
add
jp
dec
rorl
push
rorl
inc
xor
sub
movsb
pop
inc
into
out
and
adc
out
push
add
dec
or
or
dec
push
fisubs
and
outsb
les
mov
fisubrl
dec
dec
xchg
sbb
cwtl
shr
cli
test
mov
punpckhdq
adc
aam
sbb
mov
mov
mov
adc
xchg
push
cwtl
xor
fldl
pop
in
in
push
mov
inc
cld
sbb
jecxz
dec
hlt
push
cmp
mov
cmp
mov
sub
mov
cmp
pop
jns
aaa
sbb
popf
iret
nop
adc
cmp
xor
lea
movsb
notb
sbb
xor
dec
xchg
iret
mov
rolb
pop
inc
xchg
arpl
add
cld
dec
mov
mov
pop
mov
jnp
mov
movsb
sbb
sahf
lcall
inc
mov
mov
push
add
jle
lods
add
sbb
insl
into
xor
inc
test
lahf
daa
push
inc
imul
int3
sub
sbb
jp
daa
sbb
bound
lea
or
movsl
aaa
pop
add
arpl
jl
nop
outsb
mov
adc
imul
push
mov
cmc
lret
lret
xchg
jns
mov
jmp
leave
pop
shll
xor
adc
mov
xchg
add
cli
xchg
call
aam
jge
ds
cmp
testb
das
mov
repz
fucom
xlat
fs
lcall
or
fstpt
push
mov
dec
movhps
std
imul
in
mov
mov
test
in
inc
aas
je
cwtl
xchg
jns
loopne
push
hlt
loopne
add
sahf
sbb
fistps
popl
test
enter
ljmp
mov
sub
cs
mov
addr16
jp
and
push
pop
push
sahf
or
adc
sub
xor
adc
xchg
in
xor
inc
cli
mov
xchg
add
iret
fdivs
popf
shll
or
pop
or
sbb
rcrb
inc
sbb
xlat
xchg
inc
jno
sbb
mov
jo
cmc
in
stc
push
out
jle
rcrb
fsts
sub
mov
addr16
cmpsl
pop
movsl
pushf
pop
sbb
pop
call
xlat
dec
inc
insb
lods
adc
lcall
mov
cli
outsb
sbb
add
movsb
and
push
pop
hlt
mov
xor
aad
subl
lods
add
movsl
movsb
call
in
loope
jl
and
enter
rolb
pop
test
jp
xchg
pop
icebp
dec
cmc
leave
adc
mov
addr16
cs
and
outsl
xchg
jbe
sbb
cmpsl
rcll
inc
mov
and
pop
movsb
sbb
fnstenv
jns
mov
nop
lods
inc
lock
pop
xchg
test
dec
pop
jp
and
fstps
dec
or
jg
fstp
aad
mov
rcll
cld
outsb
mov
cmp
ljmp
scas
xor
pop
and
mov
mov
ljmp
mov
dec
lcall
loope
mov
sbbb
leave
stos
dec
imul
and
dec
push
decl
scas
fcom
push
outsb
insl
addb
xchg
fisubs
scas
cwtl
pop
push
outsb
scas
in
add
int3
cwtl
push
xchg
cs
mov
lret
stos
aas
js
mov
mov
mov
das
popa
loope
sahf
cmp
gs
cmp
dec
dec
sbb
stos
sub
sub
mov
div
xchg
push
push
or
into
mov
xchg
pop
stos
outsl
push
mov
mov
ljmp
or
mov
xchg
or
lods
xor
imul
xor
mov
incb
into
lock
leave
loopne
aas
push
in
sti
orl
aam
dec
add
aad
fldt
push
push
push
mov
ret
cmp
lret
es
loopne
sub
lret
test
mov
sbb
ret
xchg
inc
and
vunpcklpd
cmc
fs
loopne
or
sbb
addr16
inc
ret
mov
loopne
cs
test
dec
loopne
add
int
cltd
dec
dec
or
and
sbb
cld
iret
into
or
stc
sbb
push
add
dec
loopew
sbb
jge
into
stos
out
out
mov
shlb
imul
out
xor
fcompl
cltd
sarb
inc
and
push
mov
sbb
jnp
mov
test
inc
hlt
mov
or
cli
sbb
nop
lock
and
mov
cmp
shrb
mov
mov
push
or
lahf
xor
outsl
jae
stos
loop
jge
mov
divb
hlt
push
dec
cmc
jp
jno
les
adc
and
dec
inc
fstps
pop
mov
pop
dec
cmp
push
cmp
mov
mov
adc
add
inc
cmp
dec
insb
ja
iret
push
icebp
xor
mov
std
inc
mov
lds
lret
add
cmpb
repnz
sub
ljmp
fcomps
ss
std
xchg
cmc
jle
lret
sbb
scas
out
cld
push
inc
dec
mov
iret
cs
ss
mov
xor
pop
cld
sbb
xlat
fisubs
adc
scas
cmp
sbb
cmp
rorb
pop
out
jb
negl
add
repz
mov
dec
mov
clc
adc
jle
or
es
jne
shr
into
ffreep
bound
into
pop
adcb
mov
and
fld1
aaa
pushf
pop
cmp
mov
xchg
inc
out
cli
xchg
mov
pop
fcmovu
cmp
sbb
add
xor
dec
jecxz
mov
dec
pusha
pop
mov
or
inc
imul
and
inc
shrb
das
and
sub
push
mov
add
mov
repz
out
xor
xor
adc
outsb
inc
cmc
mov
lret
push
xorl
and
insl
xchg
jns
inc
push
adc
xlat
mov
mov
mov
out
mov
fdivrs
imul
adc
fisubrl
cmp
lret
cmp
jnp
or
in
pop
insb
push
mov
inc
mov
fmulp
insl
fidivrs
xchg
add
movsl
inc
out
subb
jns
in
outsb
fmuls
dec
sbb
popl
and
scas
xchg
sub
push
leave
in
loop
mov
int3
pop
inc
inc
and
mov
pop
out
sbb
dec
test
jmp
fmuls
pop
mov
sub
dec
sbb
cmp
mov
cli
pop
add
shrl
dec
pop
lods
cmp
mov
cmp
jp
sar
fisubs
aas
mov
loope
in
jmp
mov
adc
in
push
das
jae
sub
divb
enter
cmpsb
shl
test
leave
mov
std
mov
adc
ficoms
push
flds
jmp
inc
jbe
and
std
cmpsl
push
mov
pop
xchg
movb
test
neg
mov
stc
iret
fs
xchg
dec
jno
in
xchg
jno
movsl
sbb
vpmulhuw
nop
or
cmp
sub
inc
fisttps
xorb
pop
lods
jmp
negb
ret
mov
ret
mov
push
pop
xorl
inc
les
mov
push
mov
xlat
pop
iret
xchg
lds
mov
dec
sub
push
jne
and
loopne
sub
adc
lret
inc
mov
data16
in
xor
jne
xchg
add
les
andb
movsb
sub
mov
mov
and
inc
out
stos
and
jmp
insb
das
mov
mov
xchg
cmp
mov
ss
stc
mov
jmp
sti
mov
adc
int3
mov
testb
rolb
or
je
pop
mov
movsb
jge
insb
sbb
and
inc
sbb
stos
test
xchg
mov
mov
jmp
pop
sbbb
adc
dec
xor
hlt
int
and
mov
orb
push
clc
inc
fbstp
outsb
and
cmc
in
test
lret
sarb
dec
test
push
cmp
insb
adc
and
push
inc
pop
fiaddl
sub
inc
sahf
mov
jbe
xor
push
push
pop
insl
mov
pop
shrl
mov
sub
push
or
sbb
sbb
jmp
sbb
pop
or
in
imul
arpl
faddl
xor
and
ljmp
xchg
xorb
stos
cmpl
lret
and
jp
sub
inc
roll
clc
mov
jo
sbb
stos
mov
pop
pop
lret
movnti
aaa
xchg
mov
push
or
mov
cltd
repnz
push
cmp
scas
mov
or
dec
adc
cmp
icebp
nop
shlb
inc
out
or
int3
ds
xor
mov
nop
jne
pop
and
out
insb
or
inc
xor
lds
adcb
or
pop
or
push
dec
test
dec
iret
inc
dec
in
inc
shlb
sub
loope
xchg
jns
ds
sbb
pusha
shll
test
loopne
scas
push
pop
jno
fsubs
jnp
lea
cld
insb
jbe
gs
aaa
pop
outsb
xchg
mov
loope
cmp
push
mov
pusha
stos
and
pop
fnstcw
sbb
pop
xor
icebp
repnz
insl
jecxz
mov
sbb
lods
adc
cltd
lcall
cmp
test
dec
movsl
sahf
xchg
xchg
lcall
pop
mov
mov
mov
or
sti
in
jb
pop
mov
test
jle
add
pop
inc
push
insl
sbb
inc
lea
cli
cmp
cwtl
xlat
lods
out
mov
gs
adc
inc
pop
cmc
in
push
inc
jg
xor
daa
mov
nop
es
pop
dec
cmp
xlat
loope
adc
shlb
dec
xor
in
loopne
stos
and
pop
int3
sbb
jne
mov
or
out
enter
loop
arpl
repnz
cmp
add
mov
in
nop
mov
popa
es
popf
xchg
inc
sti
insl
gs
mov
and
inc
insl
mov
lret
push
cwtl
not
push
arpl
test
mov
dec
xchg
nop
lahf
fcompl
xor
cmp
das
mov
dec
xchg
aaa
aaa
stos
shll
int
out
add
in
dec
inc
rolb
test
pop
dec
nop
cmp
push
sub
inc
inc
pcmpeqd
adc
jns
pop
aad
out
xor
pop
cld
mov
inc
and
rorb
sahf
aas
add
int3
sub
xor
fldt
daa
sub
pop
push
cmpsb
enter
hlt
icebp
pop
pop
jecxz
add
add
xchg
rcl
xor
frstor
push
fisubl
xor
andps
imul
sub
rcll
fs
mov
icebp
adc
js
int
push
sub
cmp
clc
lret
cli
xchg
ret
insl
nop
or
jecxz
lcall
cmpsl
int3
fmull
jle
xor
pop
test
mov
mov
fsub
call
pop
mov
js
adc
loop
mov
stc
jns
sbb
cs
call
popf
fdivrs
sahf
inc
pop
push
sti
outsl
cmpsb
repnz
in
xchg
aas
xchg
xchg
jns
icebp
outsb
jb
adc
jp
xor
hlt
adc
xchg
scas
test
insl
in
int
push
push
dec
std
shlb
shl
in
mov
arpl
aaa
jbe
sub
in
fldenv
dec
pop
sbb
fildll
roll
xchg
and
movsb
icebp
and
aaa
stos
enter
ss
push
xor
xchg
adc
mov
scas
xor
sbb
jne
adc
pop
ss
sbbl
mov
sub
movsl
push
pop
mov
js
aad
dec
sti
adc
fisubrs
xor
cli
fimuls
clc
cmpsl
pop
es
pop
test
int
out
mov
push
mov
jg
cmpsl
dec
hlt
test
les
cmpsb
add
cli
pop
or
xchg
mov
or
stc
call
imul
pusha
es
in
cltd
or
xor
roll
jb
cmp
pop
or
rclb
xchg
cli
mov
stos
pinsrw
arpl
clc
test
cltd
fsubrl
and
mov
pop
cmp
out
dec
dec
scas
sbb
mov
arpl
mov
scas
lock
cmp
ret
push
aad
sub
addr16
cmp
sbb
leave
or
das
or
inc
and
xchg
ss
xchg
cmpsl
and
hlt
inc
add
or
aas
fwait
xor
pop
aad
add
push
ret
xor
in
adc
fwait
hlt
add
dec
jmp
pop
jmp
jg
inc
sahf
jnp,pn
mov
in
adcb
jno
pop
push
mov
pop
aas
cwtl
cmp
or
cmp
cmp
push
pop
pop
adc
and
xor
nop
icebp
mov
cmp
lret
and
nop
icebp
test
jge
push
inc
outsb
out
or
push
or
sub
xor
cmp
rorb
dec
add
lahf
aas
repnz
ret
enter
scas
in
faddl
and
shlb
ret
mov
ja
enter
test
mov
xchg
pop
xchg
add
mov
cmp
pop
dec
mov
xor
pop
jecxz
test
test
pop
dec
out
arpl
jb
push
cmpsb
inc
sti
inc
aas
test
add
js
pop
divb
jge
in
fidivrs
pop
testb
andb
nop
lret
addr16
sub
or
adc
or
push
out
imul
or
adc
push
or
xor
dec
into
or
arpl
mov
in
adc
pop
das
js
ss
int3
jmp
jns
push
mov
push
fldenv
insl
cmp
daa
int
jecxz
in
sti
or
idiv
add
jecxz
mov
ret
push
xorl
cmp
xchg
dec
cwtl
sub
pop
fnstsw
mov
or
repz
sbb
cmp
lahf
sbb
scas
or
xchg
aam
dec
dec
je,pt
pushl
cwtl
cmp
rcl
xchg
addr16
mov
bound
inc
add
xor
pop
les
outsb
jle
and
inc
cmp
in
enter
iret
arpl
pop
adc
imul
xchg
jmp
jbe
sti
jno
cmc
notl
bsr
sub
inc
arpl
sbb
inc
cmp
rorl
mov
mov
movsl
pop
adc
push
lods
fldenv
loope
mov
int
std
xchg
or
js
fimull
clc
shlb
lret
popf
adc
mov
std
fcoms
data16
outsl
loope
pop
mov
xor
xor
push
fidivrs
mov
fstpl
jmp
fdivrl
shll
rcrb
sbb
mov
mov
insb
jnp
mov
sti
aaa
popa
pop
rcrb
fwait
dec
shrl
xchg
cmpsl
dec
inc
lcall
fidivrs
sub
scas
ficompl
xchg
xor
divl
xor
add
adc
mulb
aam
mov
data16
cmpl
std
and
push
mov
pop
fwait
jle
mov
in
or
test
add
idiv
pop
je
or
sbb
xor
test
xchg
negb
rol
arpl
jmp
or
xor
data16
pop
or
mov
jbe
cltd
jg
pop
aaa
mov
xchg
test
lcall
iret
lods
movsl
loope
push
iret
sub
xor
mov
aam
lret
cli
in
cwtl
imul
dec
test
fwait
push
pop
dec
pop
and
pop
addr16
xchg
insl
pop
stc
sbb
cwtl
pop
out
ds
mov
aam
push
test
mov
and
xorb
arpl
lock
or
repnz
fldcw
scas
popf
je
xor
rorl
sub
scas
cmp
mov
sarb
in
xor
ds
loope
fld
arpl
mov
pop
mov
or
push
jmp
into
xor
cld
aas
dec
sbb
pop
dec
mov
mov
sarl
js
bnd
pop
xchg
dec
lret
push
lock
ret
mov
fidivrl
and
mov
ss
mov
sti
js
mov
cs
in
push
mov
pushf
arpl
jmp
or
les
pop
cltd
sahf
test
lahf
lods
inc
pop
pop
cmp
and
xchg
cmp
xor
in
icebp
xor
mov
nop
rcrb
cmp
add
adc
cmp
push
cmp
pop
sahf
imul
cmc
loope
jmp
test
xchg
shrl
pop
inc
mov
mov
lods
dec
sub
and
xor
mov
sbb
aaa
and
push
dec
je
jg
popa
mov
aas
mov
insb
roll
adc
movsb
data16
push
jge
fwait
mov
daa
mov
insb
jnp
es
int
and
das
cmp
mov
mov
push
fsts
pop
shlb
xchg
adc
push
or
daa
out
test
ljmp
insl
mov
enter
and
icebp
add
add
mov
xor
pop
sub
mov
and
insl
jl
mov
cld
mov
dec
mov
inc
or
fwait
mov
dec
push
jecxz
insb
cs
jb
push
xor
and
and
mov
sub
mov
enter
dec
jae
mov
shr
xchg
push
cmp
leave
ret
orb
gs
push
sub
mov
xor
push
aam
sub
push
mov
inc
in
inc
int
sub
out
xchg
cmpsb
andl
push
xor
mov
mov
repnz
sbb
pop
cmpsl
ds
dec
jp
add
stos
inc
pop
jge
jns
aaa
dec
cmp
and
sub
outsl
dec
xor
out
xor
stos
adcb
pop
sub
sbbl
mov
lret
stos
loope
std
pop
cld
push
xchg
pop
xor
out
test
pop
cwtl
loope
xchg
test
inc
addr16
rorl
mov
adc
daa
fadd
xor
lock
dec
stos
aad
push
adc
cs
test
dec
jmp
xchg
lock
das
in
aad
adc
sar
cli
xchg
std
ss
and
in
adc
xchg
data16
pop
mov
or
jnp
push
inc
xchg
push
add
ljmp
popf
sbb
insb
sub
repnz
inc
cmc
mov
sub
sbb
in
xchg
sub
aaa
pop
pop
inc
cmpsl
push
push
sahf
and
in
mov
je
sahf
xchg
cli
fsubrp
outsl
les
push
jmp
pop
mov
mov
js
fldenv
push
lret
or
xchg
stc
add
hlt
fistps
mov
mov
orb
push
fcoms
jbe
jge
ds
cmpsb
int3
cld
mov
jne
out
jecxz
xor
mov
cmp
push
into
ret
cltd
push
xchg
daa
test
mov
lret
push
scas
jmp
or
ss
xchg
mov
test
cli
xor
push
push
cmc
mov
popf
scas
iret
push
jecxz
mov
stos
push
xchg
fsubl
arpl
mov
sti
fs
xor
and
or
push
sysenter
sub
test
mov
pop
ja
scas
mov
inc
addr16
jg
push
cmp
or
outsb
inc
out
mov
cld
add
xor
int
inc
inc
jns
lods
mov
sub
cmp
cmpsb
fsubl
call
push
lahf
adcl
int
in
btc
mov
or
push
inc
adc
jo
lods
adc
icebp
ja
dec
bound
xlat
inc
ret
insb
lods
inc
stc
popa
jmp
add
decl
call
push
fsts
dec
sbbb
mov
xlat
imul
test
shll
lods
xor
sbb
mov
sbb
jns
adc
mov
into
mov
movsl
in
sub
jns
cwtl
out
js
push
out
or
and
scas
inc
dec
test
dec
in
lret
out
mov
int3
dec
rcll
or
ds
nop
and
push
cmp
imul
test
inc
mov
mov
test
aaa
dec
fsubrp
mov
jl
lret
mov
sbb
in
and
xor
lods
dec
enter
push
out
mov
ss
ja
test
mov
stos
sbb
adc
in
adc
rclb
jg
jno
add
xchg
xchg
sub
aad
mov
xchg
fs
fwait
xchg
test
hlt
push
daa
sbb
in
subl
sti
loopne
loopne
push
jae
fidivs
mov
add
pop
popf
rcll
smsw
loope
mov
movsl
adc
sub
cli
imull
test
cwtl
movsb
xlat
inc
mov
xchg
gs
push
aaa
pushf
daa
push
sub
push
or
mov
or
mov
outsb
mov
adc
scas
add
add
mov
pop
add
imul
cmpsl
jg
movsl
loop
mov
jp
leave
sub
test
push
jns
shr
mov
stc
xchg
daa
in
cmp
mov
pop
adc
mov
mov
dec
mov
and
bnd
sub
divb
jg
in
and
repz
mov
dec
xor
mov
sbb
pop
lcall
or
loope
mov
sub
push
lea
nop
enter
stos
ds
push
repnz
or
pop
leave
gs
rclb
stos
pop
and
xchg
hlt
popf
jne
bound
test
sbb
daa
outsb
clc
int
or
add
mov
fisubrs
push
lret
jo
out
in
fiadds
fimuls
lods
shrb
nop
ret
mov
xchg
cmpsl
mov
add
jae
test
and
stos
mov
sub
pop
and
mov
clc
test
dec
rcrl
into
mov
fsts
inc
xor
xor
into
mov
push
or
in
test
gs
mov
gs
jbe
insl
dec
mov
xchg
insb
pushf
rcll
lock
in
int
jae
fdivl
testb
inc
xor
std
pop
loope
mov
lcall
subb
pop
push
incb
lahf
push
sbb
mov
fadds
sbb
mov
and
imul
call
repnz
xchg
fwait
sub
push
pop
and
xchg
mov
call
mov
imul
popa
pop
adc
std
out
jge
fld
in
movsl
mov
addr16
fimuls
test
insb
mov
add
mov
and
iret
add
jg
jmp
jb
mov
dec
xlat
inc
or
xchg
push
dec
jns
int
jmp
add
lret
xchg
adc
movsb
or
jo
mov
mov
cld
mov
rcrb
out
icebp
sbb
cmp
adc
fadds
and
sub
cmp
js
push
sub
iret
push
fucom
mov
stos
ja
lods
mov
orl
sub
adc
lahf
gs
jae
inc
xchg
cld
js
xor
jae
out
out
jo
push
ret
movsb
lods
ret
fisubrs
lds
push
test
fidivl
cmp
or
add
aas
xchg
dec
dec
in
and
divb
aas
dec
outsl
jecxz
sbb
sti
xchg
fucomi
xchg
shll
negl
add
cmpsb
jno
jge
call
rol
cmp
push
mov
roll
ja
pusha
lods
adc
adc
xor
lret
pop
jnp
sub
fisubl
pop
pop
jno
ljmp
xor
cmp
mov
jl
divb
add
jg
or
xchg
enter
cli
add
and
adc
bound
mov
jo
cmp
es
sbb
push
mov
popa
and
lcall
cmovb
cmp
in
inc
sbb
loopne
clc
out
sbb
xchg
jno
fldlg2
dec
or
pop
repz
inc
pushf
cwtl
push
fisubs
les
mov
xchg
outsl
mov
push
dec
add
andb
and
mov
push
dec
sub
cmp
lock
jmp
or
cmp
std
jb
std
rcrb
ja
pop
nop
inc
xor
in
pop
into
inc
inc
xchg
inc
push
out
mov
lret
js
cmc
stos
scas
lret
lret
jno
mov
xchg
jb
aad
jb
or
or
jno
daa
repnz
and
cmp
xlat
out
jno
lcall
cmpsl
jb
test
push
sbb
mov
and
inc
or
scas
cmp
xchg
push
hlt
push
pop
addb
push
daa
or
sbb
rorb
lds
add
and
dec
add
xchg
in
sub
xor
fidivrs
cltd
int3
dec
cmp
insb
loop
movsl
sbb
and
cld
pop
lret
push
mov
sub
and
outsl
ficoml
push
mov
jg
lods
mov
pushf
and
loop
pop
push
call
insl
or
jo
fidivl
adc
arpl
adc
or
or
js
push
ja
clc
jl
out
push
fcmove
jecxz
shr
mov
and
pop
xchg
sub
push
cmp
testb
xor
mov
push
jns
mov
jo
xchg
in
jecxz
movsb
mov
std
lds
mov
iret
sub
add
xor
lahf
cmp
into
push
sahf
ja
pusha
shr
das
fwait
push
inc
adc
fidivrl
sarb
cli
dec
in
pop
pop
inc
fistps
xor
popf
inc
mov
testb
ret
aad
inc
push
pop
or
arpl
fistl
pop
scas
dec
stos
test
sub
pop
scas
mov
imulb
pusha
adc
sub
lds
enter
add
cmp
cmpsb
cmpsb
insl
fcomps
addl
daa
jne
jo
pop
lret
cwtl
andb
jp
out
and
add
lods
incl
xor
add
dec
jno
fdivrl
stos
lcall
adc
fwait
inc
inc
int3
mov
pusha
addl
cmp
sub
push
jle
mov
mov
mov
ljmp
xchg
ret
add
mov
je
inc
int3
insb
mov
insb
test
xchg
push
jnp
and
into
fstps
xchg
fst
dec
mov
test
ret
and
lret
mov
mov
out
insl
repnz
mov
insl
or
incb
mov
mov
cmp
es
fldlg2
xor
xor
cmp
leave
xchg
dec
gs
jno
shlb
inc
xor
movsl
data16
xlat
sub
or
xchg
push
lods
dec
notb
out
lret
mov
into
daa
ret
pop
lret
or
inc
dec
or
decl
xchg
out
dec
ds
negl
inc
testb
cmp
xchg
mov
das
aas
dec
push
jo
sbb
ja
ja
mov
scas
out
mov
shll
cmp
push
dec
insl
lahf
dec
inc
xlat
jns
incl
mov
mov
mov
mov
dec
mov
pushf
mov
ret
aam
sub
mov
and
gs
cmp
jg
pop
mov
fcoms
test
out
xchg
and
adc
lods
xlat
xchg
bound
shl
ljmp
inc
jp
loope
int
in
insl
test
lods
xchg
daa
add
mov
arpl
insb
les
movsb
mov
xor
andl
fnstenv
cmp
inc
leave
add
sbb
sub
into
pop
loop
mov
sti
xchg
jp
aam
mov
into
mov
adc
jge
pushf
mov
ss
jecxz
cmpsl
lods
or
orl
in
cmpsb
subb
in
outsl
cmp
leave
pop
es
mov
cmp
in
cmp
cmpsl
adc
sub
aaa
cmc
and
push
push
xchg
cmp
sub
fcmove
pop
arpl
mov
rorl
and
cli
cmp
sbb
aam
sar
sub
js
pop
lret
es
mov
push
sbb
jp
sub
fimull
out
icebp
xchg
movsl
dec
js
or
fldl
out
repz
push
push
push
xor
adc
cmc
add
das
lods
cmp
xchg
pop
or
fmulp
or
mov
dec
js
push
inc
mov
ss
mov
push
mov
xchg
push
or
hlt
out
pop
lcall
inc
aam
jl
leave
out
leave
xchg
mov
push
mov
pop
inc
adc
mov
mov
insl
adc
hlt
popf
adc
movups
add
jle
mov
pop
in
sub
lock
adc
xchg
addr16
push
or
dec
test
jmp
xor
orl
inc
xor
vucomisd
mov
clc
outsl
mov
adc
and
inc
mov
cmp
add
imul
cld
movsl
inc
test
pushl
mov
inc
es
fistpll
jecxz
lock
jecxz
fimull
add
sarb
je
scas
sub
or
scas
dec
pop
ficompl
mov
movsl
lret
push
mov
mov
xchg
nop
es
pop
mov
ds
gs
sub
inc
mov
xchg
loop
mov
call
or
stos
jbe
sbb
and
aas
sub
sti
loopne
daa
ret
shll
mov
push
je
dec
cmc
leave
mov
push
jno
cmpsl
addl
loope
lcall
jmp
mov
cltd
push
xchg
lahf
add
add
jmp
dec
stos
mov
xchg
cmp
and
push
jnp
or
pushf
mov
or
jecxz
push
mov
xchg
pushf
or
imul
mov
lods
dec
mov
jne
mov
sub
jl
insl
ret
lea
mov
fidivl
or
in
jmp
sub
pop
fs
sbb
dec
add
xchg
sbb
cmc
xchg
iret
adc
and
add
sub
test
jp
cmp
pop
push
ja
sub
aaa
pop
add
cwtl
mov
adc
adc
nop
lret
dec
mov
or
cmc
decb
xchg
mov
mov
aas
dec
pop
jnp
push
mov
jo
jns
aas
test
mov
or
lcall
dec
loopne
or
sub
mov
mov
cmp
add
out
lds
jge
cmp
jnp
fisttpl
jb
in
xchg
movsb
add
outsb
pop
adcl
rcll
sub
bts
js
push
sti
sar
sbb
lds
cmp
popa
xor
lods
stos
push
int3
popf
stos
sbb
outsl
ss
push
mov
dec
adc
test
push
mov
adc
push
mov
rcl
ljmp
mov
pop
es
int3
push
push
push
push
dec
mov
fsubrs
ds
mov
test
outsb
test
sbb
mov
jp
test
scas
dec
push
push
lea
adc
repz
dec
adc
xor
into
push
mov
aas
in
popl
test
push
cmp
fcmovnu
xchg
xor
push
mov
lret
mov
fs
imul
push
and
push
scas
fnstsw
pop
aam
insb
rorl
in
sahf
adc
add
inc
imul
mov
out
mov
lret
add
in
adc
ds
xor
add
lret
pop
mov
insl
imul
mov
loopne
mov
fistl
or
push
add
enter
push
adc
jae
dec
push
mov
push
pop
fimuls
aaa
rclb
test
xchg
xlat
mov
inc
shlb
xchg
adc
sub
in
in
sub
push
push
pop
in
in
das
jo
ljmp
sti
or
jmp
or
push
xchg
xchg
js
out
cvtdq2ps
mov
mov
push
or
jecxz
inc
sub
call
outsl
mov
imul
insl
xchg
fwait
aaa
out
jl
cmp
ja
cmp
or
jecxz
inc
pop
xchg
jp
jne
clc
punpckhwd
out
fmul
pop
mov
xor
neg
lds
jmp
or
mov
pusha
idivb
cmpsb
fs
lock
dec
adcl
pop
ret
lods
inc
pop
pop
idiv
jae
outsl
mov
sub
sarb
hlt
pop
inc
pushf
scas
adc
aaa
add
bound
idivl
testb
push
push
push
out
imul
pushf
dec
mov
daa
sub
addl
lahf
push
push
jo
test
sub
daa
cmp
adc
xchg
lods
jb
aaa
stos
lret
add
es
ds
das
sbb
jle
push
mov
xor
adc
rcl
bound
inc
push
lods
jns
mov
xchg
xor
dec
sub
xchg
insb
cmp
or
or
mov
pop
scas
xchg
stos
cmp
pop
int
xor
add
xlat
sti
adc
pop
sbb
out
cmp
fmul
lock
dec
out
lcall
xchg
insl
mov
loop
mov
shlb
or
mov
out
sub
loope
xor
aad
xchg
fdivrl
gs
or
inc
mov
int3
fs
cmp
shlb
sti
test
xchg
in
pop
bound
out
out
sub
imul
cmpsl
into
xor
dec
push
mov
rolb
xchg
sub
xlat
into
fdivrl
in
addr16
decl
out
aaa
sub
inc
adc
xor
mov
sbb
mov
stos
mov
loope
lcall
adc
sahf
sbb
test
shlb
fisttpll
sahf
mov
inc
pop
arpl
jae
push
mov
pop
dec
xchg
mov
pushf
xchg
push
aas
stos
cmp
movsl
mov
jnp
and
sub
out
fisubl
xor
jg
xchg
stos
pusha
cmp
pop
sbb
push
rcl
ret
xchg
inc
lret
pop
sub
mov
xchg
shll
sub
sbb
fldenv
dec
es
xchg
dec
jge
pop
pop
jg
mov
movsl
cmpb
aaa
pop
jmp
xchg
jge
shll
dec
cmp
adc
cld
fs
xor
sub
fmuls
dec
aam
std
xchg
dec
fstp
insb
mov
outsl
jge
loope
aad
scas
icebp
dec
sub
pop
scas
sbb
push
fdivrl
aad
pusha
in
popa
out
jecxz
jbe
jmp
pop
imul
push
xchg
cltd
or
push
shrl
sbb
xchg
cmp
push
and
outsb
jns
adc
stc
mov
cli
mov
push
push
hlt
inc
fiaddl
scas
shr
cmp
add
ret
mov
add
pop
pop
cmpsl
adc
int
jae
repz
ss
loop
mov
pop
or
ja
loopne
sbb
mov
inc
fwait
insb
sbb
pop
movb
daa
popa
sub
inc
out
and
dec
and
mov
in
lods
dec
subb
mov
aam
mov
popf
std
jne,pn
mov
iret
push
aaa
or
adc
sub
xchg
mov
push
shlb
sub
inc
xor
jns
aad
mov
lret
mov
out
fstps
icebp
pop
outsb
inc
push
sub
xchg
data16
int
lock
dec
push
int
lret
rclb
xor
adc
out
sub
in
jp
mov
lahf
sub
push
pop
movsb
rcl
or
mov
jnp
scas
lret
popf
adc
dec
dec
decl
sbb
or
cltd
mov
fildll
push
lods
ja
nop
inc
mov
mov
icebp
add
dec
idiv
jp
add
jle
vpsubw
nop
xchg
push
test
add
jnp
push
jp
mov
fcmovne
aas
outsl
scas
xor
jge
pop
add
dec
pop
bound
dec
or
out
jae
mov
sbb
push
js
mov
jecxz
dec
inc
lds
vmovupd
call
arpl
loope
inc
sbb
dec
sub
pop
mov
push
shr
fs
adc
pop
jnp
lret
push
insl
fidivrl
jns
out
aaa
sbb
sbb
adc
shlb
sub
xchg
pop
xchg
int3
cmpsl
and
in
cmp
dec
stos
inc
pop
dec
sbb
or
mov
cmp
mov
xor
mov
and
inc
bswap
push
clc
fnstcw
mov
ja
jb
fcoms
jbe
in
les
mov
xor
inc
mov
push
sbb
dec
in
lret
outsl
adc
xor
mov
mov
fdivrp
lea
mov
es
cmp
cs
and
mov
jecxz
sub
icebp
adc
fwait
or
cmp
insb
lods
out
rcrb
jp
xchg
std
out
rcrl
mov
pop
pop
imul
clc
mov
and
out
cltd
out
leave
andb
fimull
pop
loop
adc
loope
adc
sbb
stos
cmp
xlat
out
loope
jge
jge
jo
push
subb
xorb
xor
mov
push
repnz
test
dec
or
and
loope
out
out
movsl
or
test
iret
inc
push
and
xor
js
push
scas
or
xchg
adc
les
jnp,pt
mov
lcall
sbb
xchg
ret
sub
jl
rol
pop
popf
out
mov
inc
ljmp
dec
ret
mov
inc
movsl
jno
cld
dec
test
cld
rorb
or
jge
jg
in
cwtl
add
call
iret
mov
push
testl
sub
fnstcw
sub
mov
das
ret
outsl
inc
sub
cmp
cltd
xchg
scas
into
adc
xor
jbe
xchg
xorb
hlt
mov
aad
ja
pop
push
hlt
aad
cwtl
xor
jge
into
mov
mov
mov
cmp
pop
push
pop
test
dec
testb
push
sub
push
sbb
cmp
mov
vmovntps
xchg
cmp
jo
sahf
inc
dec
push
adc
je
sbb
enter
faddl
sarl
jmp
ja
jo
lahf
xor
xchg
dec
xchg
adc
jl
push
jne
xchg
in
aas
inc
clc
cli
or
in
push
nop
sub
nop
add
jbe
mov
outsl
dec
inc
jle
nop
sub
data16
or
dec
rorl
or
sti
pop
jmp
mov
scas
inc
mov
mov
push
andl
mov
roll
imul
jmp
cmpl
shrl
aam
rorb
shlb
mov
adc
iret
rcrl
xchg
lahf
or
jns
jl
sbb
jmp
gs
pop
aas
adc
dec
pop
loop
rol
stos
cmp
movsl
test
fwait
mov
arpl
pushf
test
mov
jae
insb
push
fidivs
jg
test
sbb
cmp
mov
icebp
nop
and
out
cwtl
mov
inc
vmovaps
jmp
shll
test
andb
fs
lret
cmp
les
cmp
lea
and
or
ret
lcall
popf
add
sub
mov
dec
fcompl
add
lods
mov
xchg
into
dec
xchg
jns
inc
mov
pop
xorl
sbbl
inc
add
mov
jnp
pop
pusha
xchg
jl
pop
lds
jecxz
clc
test
mov
andl
imul
iret
xchg
mov
out
les
inc
lret
and
dec
sub
sub
daa
or
insb
mov
xor
fisubl
mov
and
pop
pop
and
neg
dec
xor
cltd
les
xchg
inc
sbb
arpl
and
fpatan
adc
scas
jns
rorb
jmp
sahf
or
or
inc
movsb
add
sub
inc
call
movsl
rclb
inc
test
push
ja
mov
or
pusha
std
jge
insl
test
add
movsb
cmpsl
jge
push
cmp
stc
and
fistpl
push
sarl
dec
fidivrs
cli
xchg
andl
andb
cmp
push
and
aam
jmp
lea
out
mov
ficoml
aas
dec
ljmp
mov
leave
inc
sub
mov
lret
inc
jecxz
jl
push
int3
push
loope
cs
and
icebp
jle
pusha
mov
push
inc
and
in
cld
cld
sub
push
adcl
jle
adc
cli
ss
repnz
fwait
mov
in
lret
cs
jge
adc
aaa
mov
divl
jg
jae
and
adc
cwtl
fwait
push
sbb
cltd
cmpsl
inc
sub
mov
pop
punpcklwd
cmc
inc
sbb
dec
cmp
xchg
mov
rolb
lret
cmp
and
mov
mov
inc
out
stos
loop
outsb
mov
scas
push
push
mov
ds
pop
aaa
fs
icebp
pop
xor
and
and
xor
xor
shl
daa
add
stc
lods
xchg
and
jmp
or
add
fmull
mov
lret
xchg
hlt
pop
mov
shl
icebp
test
aas
mov
outsl
jbe
and
ret
xor
ljmp
aas
dec
or
push
mov
sub
clc
or
fnstsw
mov
insl
pop
test
xor
loop
or
inc
enter
or
repz
or
sahf
les
cmp
adc
lret
pusha
xchg
or
cwtl
push
sub
mov
cs
xor
sti
xchg
inc
xor
popl
rcrb
sbb
stos
scas
cmpsl
sbb
addr16
loope
xor
stos
sahf
xor
sti
int3
lds
sbb
xor
std
imul
and
mov
inc
adc
stos
jne
xchg
pop
add
dec
ljmp
push
pop
ret
fdivrl
sbb
hlt
out
cmp
pusha
pop
or
and
jae
daa
xchg
fnstcw
mov
dec
jns
and
xchg
and
push
les
enter
movsb
add
mov
xor
ljmp
mov
fisubrs
popa
lret
das
mov
push
lret
ret
jl
mov
es
mov
adc
pushf
into
adc
mov
ficompl
pop
sub
mov
cmpsl
addr16
popf
idivl
push
repnz
mov
call
cmp
in
jp
dec
push
leave
xor
jo
mov
aas
and
add
pop
shll
fstl
call
push
adc
push
into
sarl
jle
fsubrs
out
jmp
xchg
pop
mov
mov
or
push
aaa
stos
jb
pop
rclb
mov
sub
push
add
int3
lods
mov
out
std
mov
aas
sbb
dec
xor
lock
les
shr
test
mov
les
test
fisubrs
lods
sub
sub
loop
aaa
lock
pop
push
or
add
push
push
xor
rcll
mov
test
test
sub
call
xchg
dec
test
and
sbbb
ss
std
dec
or
pop
or
testb
dec
xchg
stc
dec
iret
jp
jo
pop
test
sbb
ljmp
push
mov
mov
shlb
dec
in
xor
xchg
sub
fcomp
sti
and
jl
aas
lea
repnz
push
or
pop
fstps
pushf
jp
xor
mov
jno
in
and
sahf
imul
pusha
into
test
jp
xor
mov
dec
sbb
push
dec
mov
sub
jmp
cmp
mov
jmp
lret
stos
popa
bound
cmp
push
rclb
popa
ficomps
jo
mov
stos
xorb
dec
mov
sub
into
loopne
sub
ret
sbb
dec
fwait
jp
imul
inc
sbb
mov
ret
fstps
movsb
lods
push
in
sbb
nop
pop
push
mov
loop
adc
jmp
and
movsl
mov
sub
int3
jns
push
les
inc
xchg
inc
push
into
in
fwait
mov
sbbb
push
js
add
fs
dec
cmp
sbb
cmp
data16
and
push
push
mov
fisubrl
jp
arpl
movsl
in
cli
xlat
jb
pop
dec
test
cltd
dec
and
pop
xor
sub
ja
push
pop
std
xorl
xchg
js
jle
lea
cmp
divb
nop
aaa
sub
pop
mov
call
add
mov
shll
outsb
push
push
adc
jb
fistpll
mov
jns
pop
push
sysenter
dec
not
rorb
enter
andb
pop
es
mov
jl
int3
mov
jns
mov
jbe
movsb
add
fwait
out
xchg
sub
enter
movsl
cmp
test
movsb
mov
pop
push
iret
call
mov
pop
idiv
loop
leave
pop
jmp
push
push
testb
dec
repz
les
sub
hlt
fcoms
mov
loopne
jne
fwait
and
fsubrs
cmpsb
dec
addr16
dec
pop
push
and
push
test
adc
mov
dec
push
loop
mov
ds
mov
dec
pop
movsb
out
in
inc
pop
push
loopne
jno
mov
add
xchg
jmp
inc
scas
jmp
mov
push
ds
jne
sub
movzww
mov
pop
lahf
dec
inc
or
das
jbe
push
loope
movsl
xchg
dec
push
bound
testl
lds
pop
enter
imulb
mov
lock
scas
into
cwtl
xchg
and
or
rol
movsl
int3
test
mov
movsb
ljmp
andl
pop
or
mov
xchg
cmp
push
jb
sub
sbb
pop
mov
or
mov
test
jae
loope
push
mov
dec
fisubl
mulb
shrl
jo
xchg
mov
and
mov
xor
movb
stos
lcall
movsb
lods
and
push
nop
inc
ds
lret
mov
or
inc
mov
dec
call
and
cmp
stc
out
inc
push
or
fwait
loop
mov
imul
int3
add
jecxz
xor
loopne
and
push
jns
pop
mov
lods
pushl
jge
mov
pop
stos
mov
nop
outsl
xchg
popf
addb
sbb
lea
rcrb
filds
movsl
mov
add
cmp
xchg
add
lcall
lahf
aas
cmpsl
cwtl
pop
fsubl
push
mov
pop
sbb
decl
orb
aam
pop
dec
ret
mov
cmpsl
dec
sbb
popf
mov
push
xor
push
int
jno
jmp
in
mov
pop
int
fstps
cwtl
dec
jbe
jge
sti
fisttps
dec
in
cmpb
movsl
in
xchg
int3
or
outsb
fidivs
adc
dec
push
xchg
cwtl
insb
cltd
cmpsb
and
es
and
and
and
dec
xor
dec
ja
and
add
imul
iret
jmp
xchg
push
sbb
jnp
sbb
insb
fs
mov
call
mov
pop
cmp
pop
sub
mov
gs
fdivl
lret
test
push
and
es
std
lods
outsl
inc
cmp
data16
dec
inc
stos
out
add
xorl
mov
cmp
bound
sub
cmp
ja
jnp
xor
test
sbb
out
sub
lcall
mov
push
xchg
push
imul
jmp
in
pop
ds
add
cmp
or
xor
shrb
pusha
push
sbb
xchg
cmp
xchg
push
push
in
shlb
pusha
sub
push
call
cmp
test
mov
inc
push
test
das
addr16
into
das
flds
cmpsl
add
mov
cmp
fbstp
add
js
stos
iret
xchg
push
ja
sub
loopne
sbbl
jbe
repz
loopne
fsubrl
aam
rol
xlat
std
adc
loope
adc
sub
add
nop
lret
mov
lods
and
fldl
test
test
movsl
mov
jb
es
push
fadd
test
cmp
in
hlt
cmc
xor
in
rorl
mov
popf
adc
xchg
jp
js
adc
addl
push
testl
ss
iret
cwtl
nop
in
xor
lods
addr16
xchg
pusha
cmp
pop
xor
ljmp
jne
push
xchg
mov
loop
cmp
xor
icebp
fildl
ja
sub
aam
push
or
imul
mov
scas
sbb
cmp
inc
pushf
cmc
jg
and
mov
pop
movsb
pusha
neg
loop
mov
cwtl
enter
repz
cwtl
incb
addl
es
cmp
ja
fs
cli
cs
xor
roll
pop
jl
insb
xor
xor
push
xchg
or
into
lods
enter
pop
repnz
jl
incb
or
sbb
sub
sub
js
cmp
cwtl
repnz
ret
flds
repz
xlat
daa
add
movsl
sbb
js
imul
faddp
fstps
xor
push
clc
mov
mov
stos
or
scas
add
repz
sahf
faddl
or
inc
inc
sub
sbb
das
insl
inc
mov
adc
cmp
cwtl
stos
mov
mov
mulb
cmp
ret
leave
ds
cmp
test
imul
lret
cmpb
cmp
adc
mov
bound
or
mov
jl
xor
xchg
and
in
jne
adc
jle
adc
push
push
ss
addr16
ljmp
sub
mov
pushf
mov
jns
insb
sub
and
divps
int3
pusha
or
cmp
xchg
ja
cmpsb
cmp
int
inc
sub
push
fisubrl
int
pop
and
je
cwtl
dec
sti
test
shlb
fistpll
iret
lret
and
or
addr16
inc
nop
int3
and
sub
jns
cmp
jne
jno
dec
out
fwait
andl
pop
push
jge
xchg
stos
fadd
mov
and
sbb
jo
mov
pushf
xchg
leave
out
lret
fisttpll
sbb
aad
fcompl
mov
add
hlt
mov
out
cmp
sahf
sahf
mov
cmp
aaa
and
icebp
lock
and
xchg
xchg
hlt
dec
inc
push
mov
inc
sub
pop
mov
adc
and
int
cmpl
adc
cld
adc
cmpsl
sbbl
mov
dec
push
int
jno
fisttpll
fiadds
mov
sarl
inc
int3
or
dec
add
push
ljmp
dec
lret
mov
jns
inc
scas
shrl
fisttpl
rorl
sub
and
mov
popf
arpl
out
outsb
inc
movl
sub
mov
cmp
cmp
iret
sub
clc
gs
out
pop
sub
ja
inc
mov
jbe
mov
dec
flds
aam
pusha
cmpsb
jo
cmpsb
sahf
out
lods
mov
fists
xchg
inc
fidivrs
xchg
mov
jge
nop
sbb
push
jle
push
roll
subb
test
and
popf
popa
cmp
roll
sub
xchg
fwait
xchg
fidivrl
push
loope
mov
mov
xchg
shrl
xlat
scas
es
jne,pt
sbb
cmpsl
cmpb
add
mov
mov
scas
sbb
add
and
or
mov
xchg
sub
mov
mov
mov
cmp
sbb
push
loop
adc
cmp
xchg
aas
mov
add
cwtl
cmp
cmp
sub
mov
insb
aam
jnp
fidivrs
sbb
repz
jbe
out
push
jnp
mov
inc
xchg
les
leave
push
out
mov
repz
test
rorb
btc
dec
xchg
cmpsl
in
loope
xchg
int3
movsb
add
add
and
movsb
out
imul
out
add
sub
push
cmp
loopne
lock
jae
adc
xchg
mov
into
inc
insl
pushf
sti
mov
sub
mov
sub
test
xor
adc
mov
sub
mov
xchg
in
and
lea
fwait
pop
jp
sahf
xor
pop
push
jae
pop
push
add
lret
inc
or
out
xchg
pop
pop
cmp
pop
faddl
imul
xlat
add
mov
cmp
test
lods
pop
les
mov
dec
inc
sub
and
push
mov
adc
or
mov
in
jns
xchg
lret
mov
sti
or
push
mov
xor
pushf
inc
pushf
out
xchg
jbe
pushf
push
mov
insb
aad
test
cmpsb
shlb
mov
and
xchg
fisubl
sbbb
sahf
mov
test
xchg
or
push
lahf
jns
lods
cld
or
xchg
jbe
cmp
mov
dec
sahf
test
cmp
cmc
push
cmc
nop
push
and
fwait
mov
ret
iret
mov
jp
test
or
push
ja
sahf
xlat
scas
sbb
aaa
sbb
adc
push
outsl
pushw
fldenv
add
sbb
call
cmc
pusha
call
lahf
push
cwtl
ss
loopne
mov
insb
call
or
loopne
ds
jecxz
mov
imul
roll
ja
jmp
out
jmp
pop
lea
jae
and
lods
orb
adc
es
iret
dec
xlat
out
int
and
xchg
cmpb
sbb
sub
test
jne
xor
scas
in
xchg
repnz
adc
xchg
pop
loop
push
push
or
loopne
mov
mov
repnz
aad
push
mov
jp
and
sbb
push
mov
mov
negb
int3
lcall
test
out
out
imul
scas
inc
cs
repz
dec
cld
push
ss
xchg
fwait
jmp
sub
jmp
test
jge
leave
hlt
mov
push
or
jno
pushf
sbb
bsf
push
xchg
dec
sub
push
pop
or
lds
mov
mov
stos
cmp
adc
sbb
inc
xor
clc
stos
sub
push
pop
movb
pop
mov
cmp
lcall
adc
lahf
ficoml
push
sub
xchg
add
mov
je
mov
sub
out
jns
jo
lret
and
dec
mov
pop
int3
popf
xchg
hlt
inc
push
pop
aad
pop
aas
xchg
lods
sarb
push
cmp
cmp
mov
movsb
in
stos
push
cmp
adc
mov
or
repz
sti
insl
cmc
inc
xor
sub
mov
pop
iret
shr
mov
mov
cmpsl
mov
fs
adc
outsb
bound
fdivrs
xchg
or
int
pop
ljmp
aad
scas
movd
adc
xor
jp
mul
outsl
add
cmpsl
cmpsb
sub
xor
cmpsl
cs
int3
cld
mov
and
jno
cmpsb
loope
xlat
sub
and
xchg
aad
sbb
das
ret
and
xchg
stos
mov
cli
ljmp
add
cmp
call
cmpsb
outsl
adcl
lret
hlt
sbb
ja
into
adc
inc
in
adc
adc
dec
js
xor
and
push
ljmp
dec
fsubl
fisubs
ds
xor
xchg
inc
jmp
or
inc
cld
cmp
or
inc
xchg
pop
addr16
jl
fxtract
or
mov
xchg
and
add
xchg
xchg
in
adc
mov
fsubrl
push
frstor
ds
cld
pop
push
test
push
xchg
add
inc
jno
cli
jb
dec
add
inc
roll
std
mov
adc
lods
adc
cmc
maskmovq
mull
call
xchg
or
sti
adcl
gs
dec
pop
adc
imul
cwtl
mov
addr16
int
filds
int
jmp
or
jp
rcrb
das
mov
pop
addl
enter
insl
popf
xchg
or
adc
or
imul
fidivrl
sbbb
addr16
out
popf
inc
loope
xchg
dec
lahf
icebp
inc
mov
pop
jp
jo
nop
test
shl
das
push
mov
data16
sbb
or
mov
sub
test
sti
jg
mov
jecxz
lds
or
shrb
lcall
cltd
xlat
int3
pop
add
dec
cs
gs
jb
xor
dec
aam
insl
iret
jge
sbb
inc
mov
int3
repnz
rolb
sbb
je
xchg
repnz
xchg
adc
mov
cmp
roll
inc
mov
jp
push
in
sub
mov
inc
outsb
mov
jecxz
add
xchg
rsqrtps
mov
sub
push
push
sahf
pop
cmc
loope
sbb
add
aas
hlt
adc
xchg
test
fst
jg
pusha
sahf
add
jns
dec
mov
cmp
popf
xchg
mov
mov
mov
pusha
mov
pop
aad
mov
cmpsl
jle
pop
adc
dec
sbb
fstps
enter
pushf
xor
imul
jg
es
stos
xor
daa
pop
xor
pop
dec
sbb
jle
pop
popa
dec
lahf
and
stc
push
sub
cmpsb
arpl
dec
int
aam
sub
lret
repz
adc
shll
mov
jo
jg
aas
mov
mov
cmpl
mov
adc
sub
out
aas
push
inc
mov
not
dec
icebp
push
and
icebp
sbb
xor
cmp
pop
mov
inc
and
jle
push
sbb
add
pop
dec
test
mov
in
adc
in
xlat
mov
mov
bound
jmp
aaa
sub
insb
sub
pop
shr
adc
cld
push
sti
aam
loope
shrb
es
cltd
mov
adc
int3
or
push
clc
jnp
movsb
ror
popf
mov
dec
in
imul
bound
cli
jb
xchg
cmp
and
rcrb
dec
testb
bound
ficomps
push
loope
popa
mov
pop
test
jae
and
imull
orl
xor
xlat
mov
inc
cmp
mov
daa
dec
xchg
push
and
fwait
outsl
mov
dec
xor
xchg
mov
aas
push
fmul
into
ja
lock
or
fadd
call
enter
push
mov
push
mov
adc
test
add
fwait
xor
gs
xchg
jae
popa
out
and
sti
aad
nop
outsw
dec
sub
out
jge
in
jg
mov
ja
mov
in
dec
jge
inc
inc
adc
shll
stos
ret
push
jnp
sar
sub
pop
daa
mov
pop
adc
arpl
mov
sahf
dec
xor
data16
scas
stos
mov
cld
sahf
fstl
or
or
subb
leave
dec
lods
aad
jg
arpl
sub
test
mov
mov
scas
mov
mov
push
cmpb
jg
mov
aas
sbb
pop
fldcw
sub
ss
insl
mov
cmp
mov
sarb
inc
or
les
push
into
mov
xor
les
leave
test
in
push
xchg
pop
cmp
fidivrs
mov
adc
fisubs
inc
test
iret
das
jle
mov
xchg
mov
jle
fmul
bound
dec
sub
xchg
cmp
xchg
and
aad
cmpsl
clc
ljmp
bnd
sbb
ds
push
loop
lods
imul
repnz
rcl
out
or
icebp
pop
addr16
jne
pop
jne
mov
or
mov
or
leave
add
hlt
pushf
lea
and
xchg
stos
jle
icebp
push
push
mov
das
and
lahf
jbe
fwait
rorb
fsubrl
pop
jnp
adc
jo
mov
test
cmp
in
fs
test
cwtl
jmp
enter
adcl
pop
shll
in
repnz
xchg
ret
stos
cmp
cltd
negb
aas
jo
jmp
xlat
addr16
lods
stc
add
int3
call
pop
jbe
dec
add
lods
test
je
cmp
pop
mov
test
or
jl
f2xm1
addr16
notb
into
repnz
insl
data16
divl
jbe
adc
gs
data16
mov
repnz
xchg
je
mov
adc
test
pop
sub
jecxz
pushf
pop
mov
or
call
aad
xor
sub
gs
adc
jg
sub
ja
cwtl
cmc
fwait
sub
xchg
jo,pt
jb
push
sbb
pop
push
pop
insl
adc
inc
jnp
sbb
cmp
or
pop
jnp
cld
adc
clc
test
inc
push
lea
mov
push
std
ret
mov
adc
ficompl
imul
imul
rol
mov
mov
push
sbb
mov
dec
cmc
aad
and
adc
outsb
mov
rcl
sub
shrl
in
pop
and
imul
pop
jns,pt
sbb
mov
mov
jge
cld
popa
int
stc
js
pop
adc
iret
lret
int3
pop
imul
inc
xchg
rclb
push
pop
push
pushl
call
js
push
jae
insb
mov
out
aad
lods
sahf
lea
lahf
data16
ss
movsl
xchg
mov
data16
and
addb
xchg
idivl
ds
adc
jnp
int
loope
je
sub
cmp
mov
mov
cmp
inc
mov
mov
xchg
stos
push
repz
sub
loop
ds
mov
lret
add
push
xor
pop
dec
hlt
sbb
shrb
stos
sub
cmp
loop
sub
rolb
and
pop
fsubrs
cmp
sti
popl
inc
out
and
cmp
sub
xchg
sbb
into
shll
sbb
xor
rcrl
movsb
pusha
adc
sub
inc
jne
jb
sub
sub
movsl
and
sbb
jne
sub
mov
mov
xor
cltd
mov
enter
mov
fs
inc
mov
test
push
outsb
bsf
mov
or
test
pop
cmp
or
sahf
jnp
push
pop
jg
sub
std
mov
aaa
cmc
leave
das
je
mov
outsb
dec
sbb
adcl
mov
bound
repz
lds
xchg
movsl
push
pop
jae
mov
ret
fldenv
idiv
js
xchg
fwait
mov
inc
push
add
push
mov
mov
push
out
adc
int3
loopne
imul
add
popa
and
add
insb
dec
clc
leave
mov
mov
add
inc
test
sub
jnp
xchg
iret
lret
push
fnstsw
je
mov
repz
fidivrs
fisubl
mov
outsb
xchg
sbb
and
sbb
or
mov
pop
pop
aas
adc
cmp
movsb
outsl
mov
push
xor
or
enter
out
and
inc
mov
push
push
iret
pop
add
scas
mov
aam
lods
xor
dec
stos
sub
push
fs
sub
movsl
lods
adc
cli
fadd
mov
ds
out
cmp
cld
push
and
cmpsl
dec
sahf
scas
adcb
push
hlt
insl
xchg
cmp
sub
mov
sub
dec
ds
stos
mov
shlb
leave
fisubrl
ret
lret
scas
lcall
push
sub
add
inc
push
adc
lock
mov
xchg
fldt
int
mov
shrb
mov
cli
pusha
inc
xlat
adc
sub
add
fmull
push
ficoml
iret
test
inc
adc
es
jne
shll
cwtl
push
in
in
mov
mov
stos
mov
lea
lea
push
mov
addr16
ficompl
mov
negl
iret
loope
sbb
sub
in
push
test
mov
xchg
jle
mov
lds
cltd
adc
outsb
dec
or
outsl
mov
pop
jno
jb
sub
mov
lret
dec
pop
addb
cltd
xor
test
pop
and
xor
fmuls
push
inc
sti
cltd
scas
xchg
dec
mov
fadds
scas
xchg
lock
stos
inc
adc
ret
fstps
push
mov
pop
test
adc
push
icebp
inc
or
xor
shll
and
xchg
jae
xor
push
jl
cmovge
adc
mov
sbb
adc
mov
cmpsb
call
jp
push
mov
scas
xor
call
pop
in
lds
loopne
push
lea
insl
daa
jl
sarb
pop
pop
mov
iret
in
xchg
lret
mov
test
mov
sbb
sub
jge
xchg
ret
push
repnz
fnsave
arpl
ja
adcl
fnstsw
adc
clc
or
adc
cmp
fnstcw
cmp
mov
outsb
mov
adc
add
sahf
cwtl
cld
pop
inc
xchg
xchg
repz
adc
adc
inc
hlt
or
or
mov
jbe
lods
push
sub
or
int3
loop
int
sbb
or
pop
addr16
dec
fnstcw
cmpsb
loope
mov
mov
xor
jo
jae
out
pop
cmpb
neg
movlps
rclb
subb
sahf
add
sbb
sarb
aaa
orb
mov
or
cld
iret
push
repz
jle
and
scas
cltd
leave
hlt
scas
add
scas
and
mov
scas
lods
adc
cmpsl
mov
mov
int3
aas
xchg
xchg
movsl
addr16
adc
inc
imul
lds
test
out
rolb
lret
sub
addr16
add
and
nop
out
mov
push
daa
ror
cld
sub
aam
mov
adc
push
inc
ja
dec
jg
adc
mov
andb
lcall
xchg
jl
imul
add
cltd
sub
jne
mov
sub
pop
pop
scas
dec
sbb
mov
inc
scas
or
imul
lea
push
inc
inc
cmpsb
das
lods
mov
insb
push
cmp
fists
pop
das
sbb
fidivrs
das
std
push
cwtl
mov
movsl
popf
jmp
push
dec
inc
call
add
in
cmp
fwait
dec
mov
pop
push
ds
push
orb
inc
cs
lret
sub
cmpsb
mov
sub
xor
clc
pcmpeqw
lock
jl
sub
mov
ds
add
dec
sub
sbb
out
mov
add
orb
pop
jb
push
in
push
cmc
fsubrl
ret
push
adcb
push
mov
popf
adc
mov
add
mov
bound
mov
daa
inc
ja
out
push
lds
sbb
dec
repnz
mov
icebp
push
dec
stc
sbb
and
pop
fistps
xorl
add
neg
cmp
roll
les
sti
shrl
ljmp
adc
mov
decl
mov
jae
mov
rcll
rep
inc
mov
sbb
pusha
and
sbb
sub
into
sub
sbb
loope
inc
and
jnp
dec
ja
faddl
or
addr16
sahf
cmp
lret
xor
repnz
mov
shrb
sub
inc
inc
add
lea
scas
call
nop
xor
dec
pusha
or
jmp
push
mov
loopne
push
mov
push
test
fdivs
or
cmp
repz
lret
lds
mov
or
das
dec
dec
xorl
in
arpl
jle
mov
addr16
push
fmull
shl
lock
rclb
cltd
lea
mov
sahf
sti
mov
mov
ja
or
ds
adc
arpl
popf
push
fdivr
iret
iret
int
cmc
sti
ret
xchg
addl
mov
aas
dec
add
sahf
std
ret
xchg
addr16
xchg
stos
inc
push
jg
stc
sarb
ret
xchg
sub
inc
cmp
in
mov
in
or
sub
sahf
out
lods
or
xor
jnp
loop
loope
imul
adc
dec
add
mov
cmp
xor
cmp
mov
inc
inc
jl
mov
into
aam
pop
push
sbb
icebp
ret
adc
fdiv
int
mov
hlt
and
xchg
bound
dec
adc
test
cltd
or
ret
shl
dec
cmp
inc
xchg
xor
int
gs
push
sahf
push
test
mov
pushf
cmpsb
adc
pushf
aas
xor
out
cmp
xchg
push
fiaddl
jno
sbb
cwtl
adc
ljmp
sbb
mov
in
leave
scas
inc
mov
sub
xor
cmp
xchg
stc
jp
popa
xchg
sbb
cmp
sahf
jno
aas
fprem1
inc
repz
mov
aas
sbbl
stc
jb
jecxz
dec
xor
jnp
jl,pt
dec
repz
sti
push
add
dec
sub
es
mov
sub
or
add
pop
push
das
jnp
clc
js
out
rorl
mov
sub
pop
inc
sbb
xchg
idivl
cmp
push
or
inc
pop
addr16
call
fs
or
push
sub
pushf
lods
mov
es
pop
mov
jae
pop
jg
mov
and
sbb
adc
and
outsl
repnz
xor
mov
sbb
aam
add
cmc
jge
scas
mov
bound
sbb
fildl
cmp
pusha
and
xchg
stos
inc
lods
cwtl
ds
add
dec
sub
imul
fcoml
scas
jmp
mov
in
push
dec
pop
cs
punpckhdq
stc
out
push
push
push
pop
push
xor
test
dec
fisttps
pushf
cmp
xor
lahf
pop
lds
movsl
mov
mov
rclb
test
jo
orb
and
popa
add
jnp
js
mov
cwtl
mov
dec
loopne
jns
jno
rcll
hlt
cwtl
push
mov
mov
mov
inc
dec
sub
push
mov
dec
dec
push
xchg
pop
cmp
xor
push
ret
add
cmp
pusha
add
xchg
xchg
cltd
popf
dec
pop
cmpsb
add
inc
sub
cmp
std
mov
add
cmp
fstl
sub
jns
addl
in
outsb
insb
mov
rorl
mov
into
mov
adc
and
cmp
or
cmp
push
inc
int
pop
or
xchg
in
add
jns
jecxz
arpl
inc
fisttpl
xchg
jg
mov
fists
or
cmp
xchg
adc
and
inc
sub
popf
mov
ja
outsl
pop
add
lcall
in
jne
ja
adc
xchg
mov
mov
shll
push
lret
dec
sub
add
xor
mov
idivl
mov
sbb
js
test
sarb
sub
leave
stos
mov
fnsave
je
xor
and
push
das
imul
scas
insb
loope
stos
mov
sbb
ljmp
jl
insl
sbb
sahf
mov
repnz
mov
jbe
js
xchg
pop
dec
pop
inc
or
pop
xchg
cli
cs
or
xor
aam
push
mov
cmp
mov
or
xor
cld
xor
sub
add
sbb
insl
mov
inc
pop
jns
pop
test
arpl
inc
ret
cs
xor
leave
shll
popf
shrb
xchg
cmpsl
dec
fimuls
push
clc
frstor
mov
fimuls
inc
jge
shlb
dec
icebp
fisttpl
cld
into
jmp
les
dec
or
repz
push
pop
cmpxchg
fimuls
scas
cli
add
js
inc
outsb
jb
add
sbbl
loop
out
jg
cmp
out
call
out
adc
or
xor
pop
adc
jb
test
xchg
call
lea
pop
cld
sbb
mov
movsl
lret
mov
add
fsubs
repz
mov
aas
aam
fdivp
les
lea
pop
daa
jl
push
cs
push
movl
movsb
imul
jle
xchg
scas
xchg
push
insl
or
fidivrl
sbb
xor
sbb
pushf
adc
bound
mov
clc
fiadds
adc
leave
bnd
jmp
ja
aam
leave
xchg
pushf
fldt
cli
mov
jp
fwait
adcb
addr16
pop
and
int
pop
cmp
push
mov
jge
adc
xchg
cmpsb
mov
inc
cmp
shl
jmp
lret
mov
jecxz
dec
sti
lods
pop
jbe
and
dec
mov
jecxz,pt
in
xor
adc
das
xor
cmp
lret
xchg
sub
pop
lods
cltd
subl
ret
call
lods
push
jb
pop
loope
shufps
xchg
dec
rclb
aas
popa
pusha
in
pop
pop
jl
popa
xlat
test
dec
insb
adc
in
fstpl
fsubs
test
lahf
mov
xchg
out
xor
rol
roll
icebp
sub
push
jo
in
decl
sub
mov
push
mov
leave
inc
std
ds
dec
jp
dec
imulb
sbb
push
scas
and
cmpsl
mull
xchg
inc
sahf
push
scas
test
cmc
sbb
and
fisubs
pop
rcrl
clc
push
mov
pusha
pop
xchg
mov
sti
fs
shrl
add
mov
cmp
sub
dec
and
xor
pop
lods
add
push
xchg
mov
push
sbb
adc
call
inc
jmp
sub
scas
gs
push
inc
pop
loop
test
fdiv
clc
xchg
loopne
lds
jg
pop
xchg
clc
rorb
std
mov
aam
add
sub
dec
repz
inc
jge
jl
xor
gs
outsl
inc
imul
or
aaa
inc
push
inc
cld
enter
in
rorl
xchg
or
arpl
jne
imul
popf
rcll
xchg
ljmp
cmpsl
addr16
add
pop
inc
ret
add
push
push
xchg
ffreep
lock
pop
push
and
data16
cmpb
insl
outsb
rcrb
jne
sub
lea
pop
mov
fisttps
xor
mov
cmp
in
shll
sbb
sahf
sbb
repnz
aaa
daa
sbb
pop
popa
out
mov
and
add
xor
daa
subl
sub
add
jmp
sub
out
push
sarl
xor
mov
dec
jb
out
or
sub
cmpsb
test
cmc
stos
inc
mov
or
xchg
jle
repz
lahf
inc
xorl
xor
sub
or
xchg
adc
dec
push
pop
sbb
std
xchg
cmp
adc
cmp
xchg
xor
add
cmc
sub
lea
mov
in
inc
loopne
icebp
aad
lods
daa
add
xchg
mov
xlat
mov
fnstenv
mov
jnp
inc
inc
cmpsb
loope
cltd
in
add
jbe
shll
mov
jo
stos
cs
push
scas
and
mov
jne
icebp
jmp
sub
push
shrb
cmpsb
movsb
mov
cmc
lcall
push
inc
jge
dec
stc
adc
push
pop
outsb
xchg
lods
je
mov
fsubrs
icebp
imul
jl
in
ja
mov
xchg
pusha
hlt
insb
and
test
imul
sbb
test
call
cld
or
xor
in
or
insl
sti
int
test
sbb
xchg
lea
or
subl
pusha
mov
filds
sbb
stos
cmpsl
fucomp
xchg
jl
adc
push
sub
mov
lret
jns
mov
xor
fadds
xchg
repnz
pop
das
or
dec
imul
bound
nop
fs
out
in
dec
pop
push
bound
xchg
jg
scas
js
je
pop
xor
adc
out
sub
bound
pop
jecxz
imul
adc
and
shrl
or
inc
lods
and
lock
push
mov
call
hlt
insl
push
mulb
xorl
incb
fstl
xchg
or
adc
cmp
jb
adc
lods
or
mov
fdiv
xor
mov
les
inc
movsl
fdivl
inc
mov
fnstcw
out
lock
pop
mov
lcall
aad
dec
and
pushf
out
add
scas
mov
arpl
push
push
mov
ret
xchg
cmpb
jnp
push
pushf
sub
and
mov
int3
ret
out
clc
mov
xchg
stc
repz
cs
adc
fbld
or
sbb
xchg
jmp
push
ds
or
and
xchg
pop
xchg
dec
dec
daa
mov
jmp
or
data16
mov
cmp
popa
xchg
lods
mov
addl
and
ss
xchg
xchg
cmp
sbb
pop
loop
and
mov
sahf
and
psubd
mov
out
adc
rorl
mov
jbe
ret
mov
inc
mov
scas
xlat
scas
jb
cmp
dec
insl
adc
dec
cmpsb
fs
cmp
lds
push
pop
icebp
and
test
cld
dec
in
jbe
dec
les
dec
pushf
mov
hlt
lret
js
inc
arpl
mov
movsl
inc
or
aas
dec
cmovg
orl
loop
or
data16
push
push
mov
aas
stc
stos
lods
je
scas
ljmp
mov
jp
xchg
cmpsb
adc
mov
pop
movsb
repnz
cmp
imul
shrl
testl
push
test
bound
add
xor
in
and
push
jnp
mov
ja
dec
fisubl
mov
sbb
xor
imul
dec
pushf
pop
int
movsb
pop
cmp
add
sbb
imul
cmp
sub
popf
and
std
dec
ret
jle
les
mov
in
push
imul
mov
sub
es
inc
stos
and
and
and
add
and
sub
inc
data16
call
js
cmpl
jnp
test
mov
int3
and
ljmp
and
sub
jo
pusha
jnp
push
jo
out
add
jns
loop
sbb
jp
fcomps
mov
sub
push
xchg
lret
add
jecxz
fldcw
and
ret
lods
xchg
xor
and
gs
xchg
ja
ret
xchg
inc
and
push
fdiv
sub
sub
mov
cmp
scas
lock
aaa
mov
sahf
pop
jbe
sbb
je
dec
cmp
lret
pop
or
cmp
cs
adc
adc
xor
jle
sub
jp
pop
mov
notb
dec
dec
lcall
in
mov
repz
outsb
cwtl
repz
push
pop
roll
adc
push
dec
stos
imull
jb
inc
adc
sti
fisubs
or
incb
sarl
jle
mov
sbb
add
inc
divl
pop
test
and
sub
inc
sti
xchg
loopne
lret
mov
incb
jge
and
jg
mov
mov
mov
push
ret
loopne
sarb
inc
mov
xchg
push
sub
pop
add
out
js
sub
inc
jno
xor
cmp
pusha
movsl
mov
mov
stos
dec
pop
in
loope
arpl
fdiv
sbb
mov
dec
xchg
vmwrite
jno
cmp
sub
testl
aas
sub
dec
mov
push
test
fldenv
imull
cmpsb
sbbl
or
hlt
fisttpl
out
ss
push
and
or
inc
faddl
inc
inc
das
stc
and
in
xor
and
lock
gs
enter
mov
pavgw
test
and
jb
mov
shlb
sub
icebp
mov
lret
test
sub
addr16
iret
and
je
dec
out
lods
test
repz
sbb
scas
push
adc
pop
mov
mov
push
and
stc
imul
pop
jecxz
pop
push
dec
outsb
jle
hlt
fiaddl
add
mov
sub
andb
pop
push
loope
jle
cwtl
lret
rclb
out
sub
pusha
sub
mov
and
int3
test
inc
divl
sub
xchg
adc
sub
add
mov
pop
outsb
call
kmovw
mov
ret
hlt
adc
popa
enter
jle
or
and
outsl
mov
es
bound
sub
leave
ja
jbe
dec
pop
or
add
dec
insl
outsb
pusha
adc
inc
cmp
lds
cmpsl
fisttpll
cwtl
fildll
push
aaa
push
arpl
xchg
sbb
dec
in
xor
inc
sub
imul
aam
mov
pop
in
mov
sbb
adc
xor
nop
pop
jno
sbb
cmpsl
and
imul
movb
xlat
cltd
add
ret
in
lahf
inc
in
loop
cld
pop
pop
xchg
fucomip
adc
movsl
sub
inc
stos
dec
mov
cmp
and
and
mov
fwait
sub
insb
pop
xor
rclb
cmc
push
icebp
enter
mov
mov
jo
fdivrs
lock
cmp
lods
and
or
sub
mov
cwtl
scas
out
mov
adc
pop
jne
mov
std
dec
mov
and
push
ss
es
push
ret
js
movsl
sbb
in
jp
dec
imul
xor
scas
fldenv
jl
pop
rcrl
push
add
stos
popa
or
xor
push
dec
lods
repnz
hlt
les
dec
sub
in
pop
mov
inc
sahf
je
sahf
pushf
add
add
jbe
cmp
dec
add
jne
loope
incl
mov
stos
lahf
ret
shrl
xor
inc
rorl
shlb
dec
inc
jns
xchg
pop
sbb
popf
mov
lcall
sarb
cmp
xchg
sbb
dec
xor
arpl
bound
or
sbb
inc
xor
loopne
ja
shlb
fwait
mov
xlat
int3
outsl
push
rcrl
push
int
ja
jmp
aas
adc
daa
stc
xchg
ja
add
jge
mov
dec
out
xor
jmp
add
push
in
cltd
add
pop
cs
dec
loope
add
pop
ja
outsb
dec
xchg
mov
dec
pop
add
jmp
xchg
push
pop
mov
mov
test
fmulp
sbb
ret
icebp
outsb
out
adc
test
pop
cmp
insl
insb
ret
loopne
mov
sub
sub
mov
and
popa
orl
rcll
add
arpl
mov
pop
mov
lods
out
mov
in
rorl
out
stos
outsl
xor
xchg
cmp
movntq
cmp
push
insl
movsl
les
pop
cmp
sbb
in
loop
scas
inc
sbb
mov
add
add
sbb
push
or
cmpsb
lds
mov
aad
pop
mov
mov
inc
and
fwait
cmp
fs
insl
sub
scas
dec
push
addb
push
jmp
xor
inc
sti
cltd
in
test
mov
sub
xorb
pop
js
aaa
pop
jg
cmp
dec
jle
sbb
test
xor
repz
and
mov
js
fs
cmp
mov
mov
xchg
test
fcomip
imul
jp
lret
sub
dec
and
lret
les
stos
cmpsb
in
jecxz
test
insb
pop
dec
into
mov
in
mov
inc
cmp
pop
hlt
roll
lea
testl
subl
xchg
ret
sar
fiadds
aaa
lret
lea
xchg
insb
out
aas
jmp
mov
std
repnz
sbb
or
mov
mov
adc
adc
and
lret
sti
sbb
movsb
mov
sarl
ds
or
insb
jecxz
in
out
mov
neg
cs
test
loop
pushf
add
add
test
test
cmp
fcompl
or
ds
and
pop
jnp
subb
sbb
rorb
adc
inc
push
push
movsl
popf
dec
inc
and
aaa
xchg
dec
xor
and
imulb
aas
loopne
pop
popa
ret
out
pop
je
cwtl
daa
shll
std
fs
daa
sbb
sub
imul
fcmovnb
push
sub
mov
subb
mov
add
cli
aad
inc
adc
xchg
nop
mov
mov
sahf
andb
xchg
popa
loope
sbb
sbb
mov
jl
sbb
xor
push
mov
xlat
shl
jno
push
xchg
xor
ljmp
jecxz
inc
or
xor
inc
stos
sbb
fnstenv
or
pop
mov
cmp
pop
mov
jmp
mov
pop
pop
push
clc
mov
cltd
pushf
jbe
cli
insb
adcl
pop
int
add
test
add
dec
add
ror
jne
jge
bound
iret
or
add
xor
imul
jne
fdivs
out
rol
add
add
lea
dec
pop
rclb
sub
lcall
in
les
fs
lods
mov
push
fists
pop
pop
inc
pop
mov
adc
fxch
sub
mov
imul
mov
jle
sub
cld
dec
dec
push
mov
cltd
jns
xlat
sub
mov
adc
out
cmp
xchg
inc
inc
jne
pusha
dec
leave
push
mov
loope
xchg
mov
cld
mov
gs
sub
daa
sub
cmpsb
xor
call
cmpsl
imul
inc
xor
andb
sbb
lahf
push
fimull
mov
out
pop
push
inc
rol
imul
fmull
test
call
ficomps
or
out
popa
inc
mov
mov
xor
fsubrl
pop
sbb
inc
les
out
mov
aas
xchg
sub
pop
arpl
jmp
or
insl
daa
iret
fdivrs
enter
cmpsl
cmpb
imul
shll
adc
xor
fisttpl
pop
fsub
and
sti
xchg
ja
lcall
stos
adc
push
push
imul
shlb
inc
and
pop
inc
adc
repnz
inc
dec
fldl
jb
shrl
mov
jno
jne
es
push
scas
pop
scas
xor
mov
jmp
iret
jle
jns
sub
mov
js
mov
or
push
std
clc
fildl
lcall
mov
mov
fcmovb
dec
daa
lds
and
dec
lcall
arpl
cltd
pop
icebp
inc
mov
test
negb
mov
icebp
xchg
leave
pop
pop
gs
daa
add
ljmp
icebp
test
cmp
pushl
pop
inc
rcl
fcmovnb
je
imull
lds
lret
xchg
cmp
jns
jp
test
outsb
sbb
fildl
push
daa
dec
test
ret
fidivl
jle
nop
pop
sti
orl
lds
mov
data16
mov
adc
movsl
adc
sbb
lret
mov
dec
scas
icebp
aas
stc
dec
fcmovne
xlat
push
pop
in
adc
inc
dec
insb
roll
sub
jmp
leave
jmp
pop
jbe
negb
and
leave
inc
testb
push
shlb
adc
push
jbe
xchg
nop
call
jb
je
fwait
adc
push
call
cmpsl
loopw
mov
pop
and
cpuid
aas
ljmp
or
orb
mov
jno
push
in
orl
adcl
mov
psubusw
mov
pop
roll
mov
outsb
lcall
ror
das
push
pop
frstor
or
testb
jb
pop
dec
jmp
mov
out
negl
mov
jo
popf
cltd
jmp
or
mov
inc
mov
std
add
arpl
mov
arpl
clc
push
clc
scas
lds
xchg
sbb
subb
mov
add
lcall
stos
mov
xlat
out
outsb
fldl
push
test
addr16
jae
shlb
and
mov
neg
cmp
clc
in
in
jo
xor
shl
pop
cld
xlat
adc
add
mov
cltd
sub
fdivrl
ret
xchg
pop
sti
sbb
inc
pushf
mov
popw
data16
loope
jns
arpl
fdivr
mov
sbbb
xchg
into
lea
js
aaa
jl
cmp
pop
test
mov
jecxz
adc
and
mov
xchg
fldz
xchg
dec
or
icebp
xchg
lods
jb
or
loop
and
cmp
mov
stos
push
fldcw
ja
mov
fsubrp
dec
pop
mov
and
add
pop
cmpsb
and
in
bound
subb
mov
std
stos
es
push
sub
insb
mov
xlat
in
add
arpl
in
xlat
pop
adcb
adc
jbe
and
sub
push
addl
jecxz
mov
mov
mov
jne
out
inc
hlt
rcrl
aad
jne
mov
mov
test
lock
mov
dec
jns
mov
xchg
daa
iret
fistpl
dec
imull
loop
add
mov
pop
jmp
pmaxsw
add
dec
fcomps
jg
mov
out
xor
push
dec
sahf
jns
inc
mov
and
imul
xchg
pop
or
cltd
xchg
xchg
in
inc
movsb
imul
xchg
lret
mov
aad
push
xor
mov
mov
sbb
xchg
test
lds
ds
mov
addr16
mov
sti
lds
or
sarb
into
mov
leave
inc
jl,pn
sub
mov
pop
leave
js
xchg
out
and
les
pushf
lret
dec
inc
adc
clc
cmpb
fimuls
aas
cmp
outsl
in
add
cmpl
push
inc
cmpsb
mov
roll
cmp
sti
mov
lock
js
xchg
sub
add
cwtl
push
out
in
cmpsl
cmpsl
lret
push
xor
adc
cmp
sub
cmp
movsb
cmp
mov
or
std
imul
jg
ss
adc
loope
scas
push
mov
ffree
repnz
les
fisubrl
push
xor
xchg
jb
pop
mov
call
and
loope
adc
jg
test
fisubrs
push
lds
and
cmp
add
shr
adc
daa
popf
jo
xor
sub
imul
repz
xor
xor
xchg
pop
cmpl
xchg
subb
into
hlt
out
lds
stos
in
push
lds
sub
add
inc
out
jo
je
sub
into
push
cmpsb
sbb
stos
adc
fnstcw
dec
mov
jg
sbb
mul
mov
lods
push
ja
nop
jno
push
fdivs
push
movl
push
inc
inc
jnp
xchg
test
mov
mov
push
test
scas
push
mov
inc
pop
mov
push
xor
in
xlat
test
fmuls
push
int3
ret
les
mov
adc
jmp
cmpsb
in
aam
pop
mov
cli
cmp
dec
mov
repnz
popa
add
fs
fs
mov
sub
mov
push
imul
sarl
int
int3
out
pusha
mov
inc
in
sbb
xchg
repnz
dec
sbb
rcl
cs
mov
mov
pop
fwait
sbb
mov
shrl
mov
movsb
push
dec
popa
push
mov
cs
add
inc
das
adcb
sarb
add
jl
movsb
jo
mov
cmpb
mov
pop
jbe
sbb
push
das
and
fisttpll
jmp
inc
and
orb
jmp
ret
out
fists
pop
inc
sbb
jne
sahf
aaa
inc
pop
ljmp
fistpll
adc
jo
ljmp
aad
or
cmc
inc
pop
insl
dec
mov
and
inc
jmp
or
cld
in
cmp
int3
movsb
mov
cli
hlt
xor
pop
xor
aas
pop
cwtl
gs
out
popf
addb
adc
in
adc
push
mov
pop
push
or
arpl
jne
mov
inc
wbinvd
in
popa
in
mov
pop
pop
fwait
out
out
xchg
jle
aaa
imul
adc
lods
sbb
sbbb
mov
clc
dec
sbb
cltd
or
rorl
inc
mov
pushf
std
aad
movsb
cltd
cmpl
and
push
push
xor
clc
shlb
jmp
test
notl
mov
add
ds
mov
mov
mov
clc
shrb
push
mov
mov
pop
mov
inc
push
lret
mov
popa
jecxz
shll
nop
int
mov
jb
icebp
lahf
clc
cmp
dec
dec
push
icebp
int
cmp
pcmpeqb
push
mov
jbe
dec
adc
mov
adc
pop
push
std
jns
lods
sbbb
mov
lods
xchg
leave
mov
test
fwait
dec
inc
xchg
addr16
push
jmp
xchg
or
sbb
mov
xlat
cmp
cmc
push
iret
mulb
lea
ja
xor
test
dec
int
aad
out
and
pop
shl
adc
shll
pop
adc
jne
aad
stos
cmp
inc
clc
cld
inc
pop
jg
and
or
mov
push
mov
adc
stos
sbb
mov
mov
lods
add
mov
outsl
mov
or
ja
push
or
sti
in
xor
arpl
aad
push
cli
outsb
hlt
push
cmc
lret
adc
pop
sbb
das
adc
xor
jns,pt
mov
cwtl
adc
jmp
pop
shlb
cmp
mov
ljmp
xchg
mov
fninit
inc
jmp
in
xchg
mov
movsb
adcl
add
aaa
push
jns
mov
inc
lahf
pop
arpl
push
lods
iret
aad
mov
and
rorb
insl
cmp
or
or
arpl
jnp
cmp
pop
sbb
clc
test
arpl
out
mov
in
add
leave
fisttpll
insb
jb
dec
mov
inc
jp
adcb
or
mov
movsb
push
add
in
dec
dec
cltd
ss
pop
icebp
stc
jae
lret
dec
xor
inc
cmp
add
xor
ja
ret
mov
and
fs
jno
pop
jecxz
pop
pop
or
shr
ja
jle
les
mov
pop
fwait
dec
clc
sbb
cli
sbb
dec
sbb
je
les
push
push
sarl
push
xchg
inc
and
lret
mov
jl
mov
xchg
push
gs
stos
jb
jb
cmp
sub
and
add
icebp
add
pop
cs
imul
jae
push
dec
inc
imul
xchg
dec
xor
out
inc
pushf
pop
enter
push
iret
push
add
xchg
push
stc
jg
mov
dec
fwait
jg
shlb
dec
int3
inc
es
adc
sahf
mov
ror
push
lret
push
push
aad
lds
or
repnz
jnp
xor
out
and
mov
inc
cwtl
jo
xor
leave
jno
loope
add
int
jl
jl
in
mov
mov
fnstenv
fstpl
push
arpl
movsb
mov
addr16
push
sbb
inc
mov
jbe
cmp
leave
push
mov
test
pop
adc
pop
and
out
scas
inc
xor
test
iret
popa
mov
rcll
cmp
add
negl
stos
cmc
inc
xchg
outsb
fnsave
sub
mov
imul
into
and
sub
je
xchg
xchg
sub
cld
mov
xor
push
sub
jbe
xor
push
jns
jae
ljmp
fwait
push
clc
pusha
test
and
mov
or
mov
cmpsb
push
aas
loopne
adc
and
popl
roll
ret
mov
jae
inc
int
js
aaa
scas
jns
or
lock
or
mov
lds
and
stos
sub
push
push
ret
dec
ja
push
cmc
lret
mov
mov
and
jne
int
pop
addr16
ret
lds
ds
lock
dec
enter
xor
cmc
dec
pusha
vmwrite
ret
sbb
push
lret
sbb
xchg
and
pusha
es
xor
adc
and
pop
xchg
mov
in
adc
mov
mov
push
dec
das
stc
cltd
push
sahf
sbb
sbb
test
push
inc
imul
mov
push
adc
adc
lock
mov
sbbb
xor
mov
dec
lahf
jbe
das
fadds
pop
sahf
jg
xchg
sub
mov
cmpsl
adc
dec
mov
or
aas
in
cli
pop
dec
cltd
xchg
xor
xacquire
popf
loopne
push
pop
stc
mov
stos
cli
or
popa
jmp
fiadds
lret
pop
cmpsl
adc
mov
daa
cltd
outsb
sub
push
loop
xchg
mov
test
fucomip
xchg
divl
cmpsl
imul
mov
jae
ss
lods
or
xor
lret
add
aas
sbb
xchg
and
or
aam
stos
xchg
fidivrl
stos
xor
test
cmp
stos
jns
mov
push
xchg
inc
lock
add
test
cmp
iret
out
cli
push
ret
pop
je
jne
or
and
cmp
pusha
fstl
inc
push
push
inc
or
sub
and
hlt
fdivrl
lret
add
mov
pop
sub
jo
pop
ljmp
mov
js
jo
push
dec
test
and
in
fistl
sbb
shrw
xchg
std
jecxz
idivb
mov
jl
repnz
mov
cmp
addr16
push
out
xor
call
stc
ljmp
add
sbb
bnd
stc
lahf
cmp
in
push
inc
push
test
inc
int3
pop
mov
pop
cwtl
jb
jnp
mov
xor
fbld
inc
push
inc
mov
je
test
add
cwtl
out
push
ljmp
xlat
lret
or
xchg
xchg
js
add
in
push
test
loope
dec
sar
mov
out
outsl
in
adc
sub
inc
lds
cs
mov
jno
inc
ret
shrb
bound
call
test
es
xchg
xlat
sahf
push
int3
stos
jb
pop
jb
add
in
mull
aad
or
test
bound
rorb
notb
mov
fildl
or
jle
fucomi
subb
addr16
cmp
push
add
mov
cmp
cmp
jb
dec
gs
mov
cwtl
inc
fistps
mov
insl
pop
mov
mov
inc
pop
sub
das
dec
jns
sbb
add
jb
frstor
sub
mov
pop
jo
aas
lret
and
xlat
mov
sbb
mov
std
bnd
js
aam
push
sbb
test
popa
jge
sub
xchg
push
addr16
ficomps
ljmp
call
dec
stc
test
jnp
jbe
xor
mov
adc
pop
adc
ret
push
jno
insb
inc
mov
sahf
mov
test
lcall
jb
out
mov
arpl
bound
loop
sub
jl
push
xor
mov
push
push
add
and
mov
lahf
or
pop
xor
popf
and
mov
movsb
rcll
cmpsl
scas
xlat
mov
mov
lods
mov
add
movsb
pop
fucomp
adc
mov
mov
shrl
add
jle
test
sbb
pusha
lret
stos
jns
clc
ss
aaa
cmp
mov
rcrb
insb
and
shr
sahf
lahf
ficoml
stos
stos
jecxz
jbe
push
dec
cwtl
shlb
mov
lock
push
mov
insb
nop
sub
incl
stos
inc
add
cmp
iret
or
sbb
inc
repnz
mov
cmp
sti
popl
sahf
into
jmp
iret
push
movsl
in
cmp
xor
push
stos
xchg
push
fcompl
xchg
popf
inc
negl
mov
popl
jle
daa
adc
dec
xchg
rcll
int3
imul
fs
or
out
jno
in
xchg
fstpl
mov
pop
jae
inc
sbb
dec
push
cmp
add
leave
aam
jno
and
mov
fiaddl
es
dec
adc
push
ja
jno
pop
add
ljmp
push
call
pusha
fistpl
dec
jae
lret
and
cmp
mov
sbb
lods
daa
push
enter
sbb
and
sbb
jnp
fisubrl
pop
dec
jnp
fsubl
arpl
aam
mov
cmpsb
jns
pop
and
ss
xlat
adc
scas
lret
cwtl
push
dec
aaa
push
shrb
xor
add
adcl
sahf
xor
test
sbb
sbb
add
int
aas
mov
add
push
sub
and
lods
jns
gs
and
imul
mov
movsb
insl
cmp
mov
pop
xchg
movsb
jl
push
repz
lcall
jo
push
jne
adc
nop
test
insb
xchg
jno
and
push
push
cmp
jae
push
add
test
shlb
jge
out
xor
fwait
xchg
push
jo
fwait
in
popa
and
inc
and
testl
jmp
jnp
mov
cltd
sarb
mov
cmc
mov
jo
fidivl
jle
xchg
idivl
int3
rorl
fs
in
adc
ret
clc
testl
ss
and
or
mov
iret
inc
mov
pop
gs
test
std
fimuls
cmpsb
ret
jbe
jmp
push
inc
xchg
adc
stos
mov
or
jmp
fcom
push
popf
jmp
xchg
sbb
mov
dec
leave
insl
add
jnp
sub
inc
paddsb
add
test
mov
jmp
and
and
jae
pop
test
mov
sub
lods
incb
sub
sub
fcoml
lods
lret
ja
or
jno
lret
jns
and
gs
notb
dec
hlt
sbb
fwait
dec
adcb
sbb
stos
shlb
pusha
mov
cs
mov
ljmp
mov
dec
push
stos
ficoml
mov
pop
repnz
xlat
dec
lahf
hlt
stos
test
sbb
push
and
dec
scas
and
push
add
movsb
lret
hlt
push
adc
aas
ret
ret
sub
push
mov
add
adc
lods
rcr
inc
jns
aad
lods
push
cltd
pop
add
sub
cli
mov
subl
sbb
out
push
aam
cli
movsl
sub
pop
aaa
dec
lcall
scas
cmc
adc
fstps
fst
jmp
or
xor
cwtl
cmp
or
add
out
movsb
rolb
in
dec
mov
cmp
add
outsl
jno
cwtl
outsl
adc
xchg
lcall
jecxz
adc
andl
jecxz
inc
addb
sub
cmpsl
pop
out
sub
paddw
or
pop
xlat
xchg
sub
outsb
imul
pop
xchg
mov
addl
xchg
in
dec
inc
insl
rol
cli
pop
shrb
jns
out
cmp
insl
push
mov
and
shrb
mov
mov
adc
pop
jecxz
in
sub
mov
dec
xorb
fwait
in
test
or
ds
or
imul
and
cmp
in
testl
das
imul
imul
push
jo
xorb
mov
sahf
and
testl
ficoms
icebp
out
xchg
add
std
call
jne
add
cwtl
push
and
jp
push
data16
lret
imul
sbb
sbb
outsl
pusha
and
mov
xchg
data16
mov
lret
bound
xchg
jg
or
movsl
fldcw
cmc
sbb
mov
movsl
outsl
pop
sbb
mov
add
hlt
stos
push
mov
cmp
cbtw
fwait
dec
shlb
push
outsb
xchg
mov
les
push
std
in
sub
xor
repz
shll
xchg
lret
add
push
cltd
cld
jb
mov
push
mov
cld
xchg
mov
xchg
pop
std
cld
pop
repnz
imul
jl
xchg
adc
adc
fcmovu
and
test
sbb
js
jle
das
and
movsb
xor
or
scas
or
push
lcall
andb
fsts
add
inc
add
pop
inc
mov
ja
out
pop
adc
dec
or
xor
sbb
loopne
sbb
popa
jl
shll
gs
aad
hlt
pop
cmp
icebp
imul
movsb
scas
repz
bound
aad
mov
sub
popw
ja
popa
mov
fstpl
clc
mov
sbb
mov
inc
aam
sub
inc
cmp
repz
leavew
jmp
lods
cs
lods
inc
notl
pop
push
clc
ljmp
jg
xchg
sbb
jno
data16
jo
xchg
cmp
jecxz
or
xor
adc
jo
sarl
jmp
ljmp
ficoms
fmull
lock
les
push
hlt
push
xchg
les
pop
xchg
popa
sub
or
mov
fisubs
push
inc
add
mov
pop
add
scas
sti
in
dec
push
outsl
inc
push
inc
cmp
xchg
in
imul
icebp
sub
sbb
test
fdivl
xor
call
jnp
mov
out
jns
subl
fwait
aam
pop
addb
pop
dec
es
sarb
ljmp
leave
jle
decb
push
mov
jecxz
and
adc
outsb
xchg
mov
insl
inc
inc
gs
mov
in
xor
push
xor
ja
inc
adc
addl
sub
mov
push
cmpsb
mov
into
or
aam
mov
fs
jo
mov
xchg
fs
dec
dec
mov
and
cmp
sbb
jb
jp
test
repnz
push
pop
leave
testl
loopne
inc
cld
popa
gs
or
mov
lods
mov
aas
cmpl
daa
in
ud2
sysexit
xchg
mov
and
sub
mov
and
push
sbb
mov
push
ficompl
and
push
mov
cmp
mov
out
aaa
sbb
imul
aaa
scas
inc
or
repnz
inc
xlat
aaa
fnsave
mov
mov
mov
pop
das
mov
sbb
inc
mov
fs
pop
adc
cmpsb
testl
ss
inc
mov
bound
es
adc
mov
sub
jne
sub
js
add
mov
xor
xchg
sbb
mov
int
lahf
mov
mov
lds
pusha
mov
cmp
xor
loope
lret
xor
dec
add
pop
cmp
divl
push
fs
lret
je
pop
test
sbb
push
mov
inc
movsb
pop
movb
es
xor
stos
pop
js
sub
sarl
call
xor
push
inc
dec
jb
jae
mov
sbb
ficoms
sub
jp
dec
pop
psrlq
dec
sbbl
jmp
and
fwait
ret
push
inc
inc
stos
sbbb
push
jmp
lret
mov
sbb
rolb
lods
imul
adcl
and
rclb
mov
int
sbb
pop
pop
jmp
out
nop
aaa
loop
push
test
ja
lods
cmp
dec
popa
push
cld
mov
in
push
nop
rcrl
xchg
jbe
repnz
and
adc
dec
out
pop
push
adc
addl
adc
sub
xor
or
add
xlat
sub
lods
push
dec
xchg
dec
adc
test
shrb
in
shrl
push
cltd
js
or
xor
inc
adc
int
cld
jecxz
sti
bound
mov
pop
roll
and
in
in
jp
cwtl
or
mov
pop
lock
negl
adc
adc
cmp
sbb
aad
lods
xchg
xor
cmpsb
sahf
fwait
aad
add
adc
iret
sub
push
mov
stos
pop
aad
adc
iret
mov
scas
xor
pusha
xlat
mov
push
inc
stos
push
bound
sbb
rol
lock
aaa
das
jno
inc
test
push
cmp
sbb
add
lock
xor
push
cld
dec
jno
jno
popa
xlat
add
into
cmp
aas
push
dec
psubb
sub
and
fisttps
cmpsb
cmp
xchg
xchg
sbb
ss
push
hlt
aam
mov
scas
roll
fldenv
ss
sub
not
not
sbb
push
add
std
jb
xchg
pusha
int3
pop
mov
lock
les
fstpt
das
gs
outsl
and
ja
sub
cwtl
outsb
in
ljmp
std
icebp
sub
and
int3
into
lret
sbb
data16
int3
pop
pop
push
xchg
adc
jmp
and
mov
jecxz
cmp
cmp
adc
mov
sti
add
repnz
mov
mov
test
add
daa
xor
enter
lahf
or
mov
daa
rorl
cmpsb
cli
out
inc
cmpsb
cmpsl
jmp
xchg
mov
dec
jae
sub
ja
sahf
mov
jno
jecxz
incl
inc
mov
mov
dec
jmp
adc
repnz
shll
mov
and
inc
add
lea
pop
pushf
lds
stc
das
out
fdivrs
outsb
aas
dec
inc
mov
pop
sub
push
xchg
leave
mov
sti
jne
mov
jnp
mov
pop
add
lods
inc
jecxz
sahf
aaa
jns
dec
cs
cmpsl
pop
pop
scas
pop
stc
mov
or
cmp
mov
sti
test
jge
xor
sub
add
popa
add
cmc
xor
loop
push
lcall
cmp
pop
fs
insb
pushf
lret
and
lds
adcl
or
addl
pop
rep
fists
jae
data16
adc
fisubs
adc
or
mov
mov
aam
das
pop
imul
xchg
adc
cmp
sbb
mov
add
dec
and
pop
clc
jmp
jmp
dec
sub
rorl
rorl
pushf
pop
mov
rdpmc
mov
fstpl
dec
sub
mov
cmp
and
mov
in
insb
stos
sarl
or
sub
adc
sub
stc
pop
insw
pop
mov
in
xchg
fcoml
or
loop
dec
ljmp
push
jp
out
xor
popf
fcmovbe
bswap
cmpsb
mov
pop
jge
and
jae
mov
aam
mov
inc
pop
adc
in
dec
ret
lds
sbb
or
cltd
push
dec
loopw
call
int3
pop
mov
insl
movsl
dec
gs
bound
rorl
xlat
and
sbb
cmc
clc
sbb
shr
pop
adc
data16
fxch
leave
ret
leave
mov
ds
dec
pop
imul
and
pop
mov
scas
imul
xor
mov
lods
aaa
add
xor
mov
mov
test
fwait
and
rcrl
xorl
in
add
movsl
jne
imul
test
sti
inc
mov
pop
int3
or
ljmp
and
mov
mov
and
movsl
mov
std
sub
arpl
das
pop
icebp
sbb
xorb
orl
mov
xor
in
jo
pop
cmp
shll
mov
sbb
cmp
das
jmp
stc
sub
into
int3
add
add
bound
xchg
xor
cmpsl
dec
stc
push
sbbb
jbe
shlb
cmp
jl
loop
iret
in
dec
mov
enter
out
notl
mov
shll
pop
jno
pusha
out
data16
repnz
cmp
pop
mov
cmp
xchg
pop
or
scas
and
or
inc
dec
js
push
loope
sbbb
outsl
mov
or
icebp
mov
jnp
shlb
lahf
xchg
mov
vmread
insl
and
in
aas
es
lods
push
cli
sub
iret
jns
sahf
out
mov
aaa
fst
cmc
out
scas
and
shlb
pop
push
aas
and
lcall
push
dec
jns
mov
pop
inc
ljmp
stc
loopne
jbe
fcmovne
mov
lds
rorb
sarb
jbe
adc
popa
push
jle
adc
daa
pop
add
push
fldl
xchg
sbb
cmc
dec
sbb
pop
add
fnstsw
adc
mov
rcrl
aas
xor
lcall
dec
xchg
divb
adc
pushf
push
aaa
cmp
cli
scas
xchg
lret
sub
mov
adc
fbld
fistpl
rcrl
stos
flds
out
push
mov
sub
pop
test
lret
jnp
xor
add
lret
dec
movsb
cmpb
xchg
sti
lret
push
jle
push
sbb
push
sti
or
mov
mov
imull
xor
lock
leave
repnz
pop
mov
sub
mov
sbb
jp
test
lcall
push
int3
and
mov
subb
mov
lcall
das
lods
jp
in
jge
mov
popa
and
mov
call
outsb
mov
adcl
not
sbb
pop
mov
cld
add
out
adc
loopne
xchg
cmp
mov
ja
out
jmp
popf
outsb
mov
sti
inc
cmp
sbb
jecxz
sub
aas
xchg
dec
aam
stos
sahf
add
clc
dec
scas
push
ret
jne
dec
cs
imul
adc
push
jb
std
ret
cli
sahf
int3
lahf
and
cmpsb
inc
and
push
iret
inc
push
test
popa
xor
sbb
or
push
movsb
mov
lret
sub
into
xor
fldt
fwait
loop,pt
aas
jmp
dec
dec
leave
cmp
or
add
addb
xchg
xchg
les
nop
sbb
inc
out
pop
cli
aad
push
imul
std
andb
xor
mov
push
adc
std
daa
mov
xchg
stc
push
and
or
lcall
mov
lods
lea
out
ds
xchg
jmp
adc
lahf
fiadds
pop
mov
lock
inc
out
lcall
sbb
push
je,pt
ja
std
pushf
mov
mov
adc
jle
test
mov
lods
push
push
or
aad
sub
xlat
movsbl
or
pop
ss
pushf
out
jmp
add
xor
jae
mov
jl
ljmp
mov
adc
mov
lds
add
ds
jp
mov
pop
cld
jae
jnp
ss
insl
sbb
pop
sub
mov
cld
lock
out
shll
push
inc
and
jmp
dec
sub
cmc
pop
cld
xorb
and
ljmp
mov
xchg
fisttpl
mov
stos
sub
arpl
loop
cmp
outsl
xor
mov
shll
push
push
clc
stos
pushf
inc
fstps
insl
cmp
push
pop
sbb
roll
dec
inc
mov
loopne
lods
inc
mov
and
xorl
rorl
sub
imul
lods
jge
cmpl
test
cmp
sub
hlt
dec
outsl
in
fiadds
mov
pop
push
cwtl
iret
mov
dec
scas
insl
iret
jne
cwtl
xor
push
nop
in
aas
mov
mov
in
out
mov
daa
loope
pusha
stos
sarb
jb
mov
mov
nopl
nop
outsb
jg
fisttpll
dec
pushf
or
lock
ret
rolb
and
rorl
out
xor
pusha
in
adc
mov
pop
movb
xchg
push
jbe
repnz
fbld
enter
inc
lea
rcrl
adc
insb
notl
dec
roll
loopne
jo
cmp
fsubl
cmp
push
loop
addr16
rorl
cmp
push
fcomps
call
adc
sbb
idivb
shrb
fstl
dec
mov
shl
inc
inc
ret
pop
xor
mov
push
jmp
fiadds
aaa
lret
jg
movsb
orl
and
in
add
dec
aas
jae
stos
sub
sbb
sub
pop
cltd
cmc
ds
and
xor
dec
sub
decl
orl
sub
and
fbld
sbb
cmpsl
sub
cwtl
xor
popf
mov
push
jbe
stos
jns
mov
pop
sti
test
in
jbe
sahf
xor
sbbb
xchg
ficompl
in
test
lods
test
lcall
sub
cwtl
fcoml
add
mov
mov
ja
mov
sti
call
add
jbe
lods
subl
negb
ljmp
in
movsl
aad
icebp
fsubs
xor
sbb
cmp
cs
mov
cmp
aam
ret
shll
imul
and
popf
cmpsb
push
add
adc
jo
lods
test
call
mov
into
jmp
mov
adc
mov
adc
iret
sub
mov
sarl
sti
repz
or
int3
mov
pushf
and
lret
cmc
leave
jno
and
xor
mov
repz
int3
mov
push
nop
dec
pop
pop
xor
ret
inc
je
cmc
lcall
cli
aas
insl
mov
fwait
pop
inc
fists
lcall
std
pop
push
xchg
aad
pushf
ret
inc
lock
lret
xlat
cmp
jge
ljmp
es
outsl
mov
pop
movsb
cmpsb
out
cs
ret
ret
or
adc
sbb
rorl
adc
and
in
lods
dec
jne
inc
or
jl
add
adc
data16
jns
and
test
fwait
ret
push
cs
movsb
movsl
les
enter
cmc
jae
movsl
mov
mov
mov
mov
jnp
icebp
lds
mov
shl
insl
lods
into
int
ljmp
cmp
pop
xchg
add
shufps
xchg
xchg
divb
jg
push
fcmovb
inc
sbb
push
sub
outsl
jle
inc
push
int3
mov
std
add
add
fs
std
lret
mov
pusha
iret
jge
cmpsb
lods
test
or
imul
lret
jge
dec
xchg
pop
mov
lahf
jecxz
fildll
fcoml
and
xchg
imul
or
push
xchg
dec
pop
lret
pop
xchg
mov
lret
shl
jbe
aad
sbb
arpl
add
lds
add
test
mov
mov
icebp
xchg
add
mov
cmp
jle
ja
cmp
pop
or
sub
jnp
lods
pop
fsub
cmp
fldcw
mov
sarb
repnz
pop
mov
mov
iret
popf
in
sub
std
pop
xor
jb
inc
cmp
rclb
mov
xchg
lret
add
lock
je
push
pop
fistpl
add
dec
in
sbb
jno
xor
popf
cmc
mov
sub
cld
fcompl
lds
sar
int3
sbb
cld
push
cmp
cli
cli
dec
adc
cmpsb
insl
pop
pop
dec
pop
scas
mov
popa
int
mov
lcall
adc
sbb
test
insl
dec
and
lret
jbe
ret
push
fisttps
mov
adc
fbstp
fstps
jne
jbe
adc
add
mov
sbb
mov
movsb
mov
sbb
mov
call
xor
mov
adc
fsubrl
adc
xlat
aaa
inc
push
mov
pop
xor
add
mov
in
mov
dec
jmp
cmp
fwait
shlb
push
lds
popa
jp
test
aas
clc
lcall
sub
sub
mov
sub
push
mov
int3
xchg
cs
imul
in
or
mov
push
adc
cmp
sarl
andb
out
subl
movsl
push
mov
cmp
rdmsr
in
jbe
ljmp
fcmove
add
mov
jge
xlat
adc
pop
bound
popa
shl
or
inc
lods
out
fcompl
ds
dec
fnstcw
test
add
ret
mov
pop
xor
inc
inc
jae
sub
stos
inc
mov
stos
or
std
popf
adc
lock
jns
lahf
loopne
popa
dec
fdivrs
stc
daa
push
pop
add
cmp
sub
jg
xor
repz
mov
ret
stos
inc
adc
xchg
push
nop
out
pop
scas
and
shll
notb
cmp
mov
ljmp
xchg
stos
ret
cmp
lods
sub
sub
fdivrs
mov
std
xchg
push
xlat
movsb
fstps
xchg
rep
repz
fcomp
jne
adc
mov
adc
and
ja
jne
fistps
inc
xchg
mov
jge
and
adc
cld
call
cwtl
movsb
std
sarl
orl
cmpsb
shl
inc
add
ds
sbb
push
cs
cmp
insb
imul
in
cmpsb
out
mov
mov
sbb
mov
sbb
shll
jbe
push
pushf
icebp
xchg
hlt
hlt
or
add
and
mov
mov
inc
out
movsl
test
std
loope
sbb
push
push
imul
mov
and
xchg
cli
fcoms
push
dec
negl
addr16
jno
dec
adc
mov
addr16
insb
mov
jno
xchg
or
fwait
cltd
and
repz
ljmp
jecxz
xchg
sbb
sti
inc
mov
rcll
mov
in
lea
imul
sbb
pop
popf
pop
andb
dec
iret
jbe
aad
add
mov
add
push
push
mov
movl
pop
cmp
out
cmp
push
lea
js
jbe
js
mov
es
das
out
in
subl
xchg
decl
in
add
xchg
push
mov
bnd
aam
int3
call
mov
test
into
cmpxchg
aam
leave
into
xchg
xor
test
icebp
mov
cmp
and
sbb
into
dec
ficoms
addr16
mov
movzwl
push
repnz
scas
mov
mov
or
lock
test
jg
in
pop
fs
xchg
aaa
dec
jbe
jle
xor
pextrw
sub
mov
fists
xchg
mov
ror
aas
lahf
cmp
jp
das
mov
pop
or
gs
jmp
pop
idivl
nop
js
popf
xor
clc
inc
in
mov
adc
mov
jns
push
mov
cltd
fidivrl
dec
adc
ljmp
pop
mov
enter
and
fisttpll
lea
xor
test
mov
push
rcll
push
push
jb
mov
ja
mov
fs
cltd
fsubl
jno
xor
dec
lea
rorl
dec
mov
iret
imul
cmp
pop
pop
push
push
insl
lods
xor
push
jmp
and
mov
loop
data16
push
jg
mov
add
cmpsl
adc
fidivl
movsb
adc
mov
push
dec
shll
sub
jbe
xchg
and
pop
dec
bound
push
xorb
mov
mov
or
mov
lock
shrb
mov
aaa
pop
popa
popf
popa
push
aam
cld
lods
stc
xchg
lahf
out
add
sarb
imul
movsl
mov
push
xchg
je
xchg
dec
addl
cmp
gs
cmp
imul
jge
push
mov
popa
inc
push
mov
cmc
cmp
scas
arpl
jo
jno
xor
add
pop
aam
mov
fwait
sti
lcall
pop
push
andl
jb
add
cmp
or
cmp
inc
dec
push
xchg
cmp
les
pop
lret
daa
jmp
repnz
aam
test
ja
or
ljmp
test
mov
shll
cltd
cmpsb
jae
jbe
push
mov
mull
sarb
cmpsb
cmp
mov
inc
push
test
xor
pop
dec
adc
ret
sahf
xor
movsb
pushf
mov
dec
inc
mov
add
push
adc
ss
es
jge
add
add
fistps
pop
cmp
jl
fisttps
jbe
pop
and
push
add
cmp
sub
or
sbb
fs
sbb
push
je
or
xor
add
inc
stos
dec
jge
mov
stos
mov
andb
cmpsb
mov
out
jbe
xchg
cmp
lds
daa
dec
add
push
add
addl
and
not
ljmp
mov
lock
pusha
cmp
sub
cmpsl
mov
push
xchg
out
inc
push
mov
es
push
lea
ljmp
das
lahf
jecxz
xor
jns
push
cli
inc
cmp
out
divb
inc
push
jns
test
push
inc
sti
mov
insb
cmp
pop
popl
mov
mov
out
movsb
adc
push
or
inc
sub
add
idivb
jns
inc
orb
mov
mov
pusha
int
mov
mov
in
mov
jno
xchg
push
orb
ds
xchg
shrb
bound
sbb
mov
or
push
pop
ret
lcall
cmp
jg
jecxz
int3
leave
decb
xchg
rcr
push
mov
icebp
js
or
mov
dec
out
cmpsb
sbb
mov
scas
pop
notl
stc
pop
incl
mov
sbb
fisubrl
out
cmp
imul
push
or
jo
in
out
sbb
cmp
or
jp
and
inc
call
jae
jle
mov
add
xor
ss
imul
cli
mov
insb
mov
pop
jb
movsl
inc
push
xor
xchg
push
sbb
add
xor
out
pop
pop
xor
insl
mov
fmull
jecxz
or
xchg
mov
xchg
nop
bnd
pop
imul
ds
arpl
repz
cld
clc
and
and
sbb
or
sub
fcmove
mov
cwtl
aam
and
push
jo
mov
push
arpl
insb
call
clc
inc
push
push
int3
psrlq
shll
pop
fbld
cmpb
rcrl
lcall
add
inc
bound
sbb
mov
je
aas
std
fcmovbe
ret
push
inc
jo
mov
push
push
mov
pop
fs
mov
mov
call
out
into
mov
test
jno
jbe
ficoms
std
mov
testl
push
sbb
cltd
dec
iret
dec
cmc
xor
cld
cmp
xlat
sbb
test
xchg
lock
push
adcb
fsubr
fadds
aad
add
jp
cmpb
test
push
test
cmpsb
cmpsb
outsl
loopne
mov
cli
and
push
lcall
xchg
xor
mov
mov
lcall
and
cmpsl
or
stc
mov
inc
scas
lret
lahf
repnz
inc
mov
dec
adc
in
enter
or
jl
mov
cmpsl
scas
je
add
mov
dec
out
clc
dec
sbb
call
je
xchg
pusha
push
adc
roll
sbb
roll
and
cmp
jl
icebp
mov
push
pop
cmc
into
in
repz
nop
andb
fcomip
push
rol
imul
cs
fwait
clc
adc
ror
js
and
pop
push
jle
and
push
mov
push
or
lcall
movl
aaa
daa
and
mov
shrb
jecxz
dec
loopne
ds
nop
enter
aad
xchg
dec
xor
cmp
dec
xor
test
adc
or
inc
lods
jecxz
cmp
or
cmp
jbe
pop
push
pushf
add
out
cmp
xchg
cmp
lea
pop
mov
dec
mov
mov
inc
mov
pushf
ds
je
xor
lea
pop
jbe
loope
dec
cld
inc
fldenv
jmp
xchg
lods
int
dec
sti
pop
jnp
dec
inc
inc
popf
gs
inc
mov
cmpl
jge
sbb
cmp
dec
sbb
mov
mov
sub
adc
loop
add
shll
js
mov
lahf
dec
lea
lahf
nop
sahf
stc
ret
xor
insl
std
daa
mov
repnz
cltd
and
inc
inc
push
sub
dec
add
ja
into
xchg
aaa
and
cwtl
insl
imul
jge
or
aas
gs
sti
mov
pop
loop
push
mov
pop
std
gs
daa
test
daa
mov
xor
fldt
test
mov
adcl
and
pushf
shlb
adc
pop
and
aaa
lret
add
mov
sbb
les
xchg
xchg
jle
out
lahf
dec
das
jae
mov
ljmp
and
push
repz
sbb
dec
mov
push
lea
roll
daa
mov
dec
popf
or
mov
repz
mov
sahf
sbb
xchg
stc
mov
cli
push
xchg
push
sub
push
mov
mov
adc
ret
sbb
lret
xchg
add
jl
gs
xor
mov
stc
test
mov
xor
stc
adc
in
loopne
or
xor
inc
pop
or
or
fucom
inc
sbb
roll
and
mov
clc
stc
testl
imul
arpl
add
mov
xchg
daa
and
ret
repz
jl
hlt
xchg
ds
push
in
mov
inc
lcall
fsub
mov
mov
cmp
or
loopne
cmc
movsb
clc
test
fldt
cmpsl
pushf
test
add
rcr
in
int3
test
lret
mov
in
dec
mulb
fst
clc
jl
add
jle
sbb
inc
mov
call
cmp
loop
add
cmpsb
test
and
mov
call
xor
mov
mov
scas
movsl
fists
mov
rclb
jg
sbb
cmp
mov
in
pop
dec
syscall
in
js
mov
mov
test
push
jo
pop
lcall
aam
mov
adc
jae
jns
out
push
andb
sahf
mov
or
aaa
xor
dec
sub
and
notb
jne
push
jmp
rcrb
mov
mov
pop
frstor
sbb
pop
scas
rcrl
and
jne
movl
cmp
nop
loopne
lods
inc
xchg
xchg
shll
shlb
rorl
sub
xor
pop
xchg
jne
idivb
fucomi
andb
push
sbb
or
cmpsl
and
std
inc
jle
or
subl
outsl
sbb
imul
ret
xchg
mov
nop
xchg
push
mov
rorl
ficoml
movsl
test
mov
push
daa
stos
mov
fwait
ret
xor
xchg
imul
inc
pop
or
divl
aaa
cmp
mov
clc
cmp
pop
cmp
fsts
bound
scas
mov
push
inc
add
mov
add
add
imul
repnz
ss
jnp
add
push
jb
mov
mov
jl
mov
mov
dec
mov
rorl
subl
mov
sub
mov
fistpl
test
pop
mov
and
imul
mov
ljmp
imul
add
or
cmp
sbb
and
mov
mov
ret
rcrl
mov
dec
fnstenv
pop
or
lods
push
loop
stc
jo
pop
inc
scas
out
lock
inc
xchg
and
and
adc
and
dec
mov
lret
movsl
repnz
jmp
popa
lcall
aad
or
dec
cmpsl
pop
or
daa
std
gs
adc
sti
inc
jg
jle
aaa
push
jl
adc
arpl
dec
pop
cltd
stc
movsb
jmp
out
mov
push
mov
pop
rcrb
sbb
sbb
adc
in
mov
int
xchg
test
mov
and
pop
int
shrl
xchg
std
jecxz
xchg
sbb
jp
lret
scas
mov
xchg
sub
pop
jge
mov
push
mov
pop
call
sbb
push
rcl
add
jge
dec
sub
adc
mov
xor
and
lret
add
shl
test
dec
sbb
outsl
clc
sti
pushf
arpl
push
xor
repnz
mov
mov
outsb
sbb
add
loope
mov
mov
jb
cld
adc
mov
jg
mov
stc
and
mov
call
cmpl
icebp
xchg
dec
mov
sbb
sub
into
fcmovnbe
cmpsb
test
mov
dec
js
into
sbbl
pop
lret
in
jb
mov
data16
outsb
inc
je
or
into
clc
adc
fistps
into
mov
js
fwait
lods
test
pop
mov
repz
jb
scas
inc
and
rolb
stos
repz
jnp
jo
cmp
sub
rolb
movups
mov
in
data16
stos
adc
pop
push
shr
xchg
mov
mov
dec
aad
je
and
sbb
cld
and
push
sub
sbb
push
notl
pop
dec
jae
cwtl
into
xorb
movsb
sti
jnp
loop
pop
cmpsl
sbb
xor
adc
cmp
fs
xchg
cmpxchg
lock
mov
xchg
insb
inc
cmp
andb
icebp
push
or
add
fiadds
insb
cmp
push
ss
jle
sbb
and
mov
cli
shr
pop
pop
xchg
int
xor
xchg
fsubrl
cmp
test
dec
adcb
and
cmp
incl
mov
mov
mov
dec
shl
mov
mov
lods
xlat
jno
dec
fwait
sbb
push
sahf
cmp
in
daa
in
hlt
shlb
jo
into
add
cmp
push
rclb
in
mov
sbb
fcomip
mov
repnz
dec
fwait
adc
mov
andl
lcall
push
out
jb
jmp
inc
push
insl
flds
xor
das
cmp
dec
cmp
lahf
out
cmp
mov
shlb
xor
xor
cmp
outsl
bound
cmp
jo
inc
mov
cmp
pop
and
lret
outsb
mov
sub
jle
push
and
fnstcw
fwait
jmp
adc
aam
mov
adc
xor
mov
jne
aaa
mov
in
cs
nop
and
sbb
idiv
and
jne
aam
push
fchs
loop
xchg
mov
lock
mov
xchg
push
jl
mull
add
inc
or
fists
imul
cmp
push
scas
das
out
sub
xor
in
inc
pop
daa
sub
stos
inc
outsb
out
pusha
sbbb
cwtl
mov
mov
outsb
out
ret
dec
dec
lahf
jbe
lea
mov
subl
cmpb
pusha
dec
add
enter
adc
dec
push
inc
enter
mov
add
or
dec
dec
fstp
shll
out
aad
out
mov
push
mov
push
stos
sbb
pop
aam
mov
out
jne
lret
inc
cltd
lds
mov
push
push
add
dec
jmp
imul
sbb
arpl
push
pop
enter
cmp
fmulp
mov
sub
adc
insl
mov
jg
jmp
jne
cmp
loop
push
cltd
cmp
bnd
pop
lret
pop
lods
cmc
jle
lret
rorb
sahf
outsl
pushf
bound
in
mov
add
xchg
dec
shrb
adc
add
sub
xchg
mov
mov
jg
sub
stc
lods
loop
cmp
jns
aad
pop
mov
mov
pop
mov
or
mov
mov
jecxz
cmpsb
es
popf
mov
add
aaa
dec
jo
or
sbb
jae
sbb
sbb
cmpsb
lea
mov
rolb
arpl
pop
cmp
testl
popf
outsl
lea
ds
fisttpl
mov
addr16
stos
pop
ficoms
xchg
xor
add
mov
or
popa
dec
adc
mov
cmpsb
and
add
cmp
lods
pop
lahf
addr16
pop
xchg
rolb
pop
xchg
popa
dec
adc
cmpsb
xor
call
out
push
cs
cmp
and
pop
push
cmpsb
cmp
adc
out
mov
add
imulb
pop
test
jl
add
adc
pusha
dec
int
xor
pop
xchg
cmp
and
cli
lock
in
jle
push
mov
xor
xor
gs
push
and
sbb
inc
mov
sub
inc
cs
movsb
inc
jb
dec
pop
shlb
lock
icebp
sub
pop
out
inc
dec
stc
and
mov
pop
lock
test
in
movsl
dec
mov
insb
ljmp
enter
and
stos
jbe
rcl
les
xchg
mov
subl
jl
sub
lcall
cmp
pusha
jmp
fs
or
xor
dec
mov
pop
dec
out
jmp
mov
dec
jne
js
imul
daa
mov
imul
adc
cmp
push
add
in
dec
pushl
fwait
loop
cwtl
push
cmp
xor
cmp
lret
fs
stc
shrb
mov
les
add
into
jl
mov
push
sbb
jge
mov
out
mov
add
cld
pop
into
xor
inc
lods
push
stc
cli
js
loopne
xorb
push
inc
out
jge
iret
xor
movsl
std
push
mov
addl
movsl
leave
push
lods
rsm
mov
add
fmull
push
sbb
loop
mov
push
adc
cmp
add
jmp
push
cmp
and
mov
sbbb
fisttps
mov
jne
pop
inc
and
sub
or
mov
mov
cmpl
inc
iret
xor
cld
pop
pop
test
and
push
int
lcall
or
nop
insl
dec
xor
stos
pop
sbb
and
or
bound
pop
push
loope
out
sti
mov
or
inc
shrb
test
sbb
adc
loop
jae
adc
pop
push
in
frstor
daa
and
data16
gs
sbb
adc
out
ss
sub
aam
push
icebp
jb
and
cmpsl
push
insl
popl
subl
stos
fldenv
bound
shlb
and
std
or
shll
pop
inc
scas
inc
inc
pop
sub
enter
mov
push
fdivl
icebp
add
add
adc
int
and
mov
popf
add
inc
jns
movsl
mov
call
mov
or
sbbb
mov
jno
lock
loope
or
ds
pop
xchg
cmpsl
aad
xchg
push
scas
test
mov
xchg
pop
sub
jnp
int
mov
daa
push
xchg
xchg
aad
cltd
rcr
push
test
push
lahf
and
inc
jle
ljmp
sar
ret
out
pop
aaa
mov
les
cltd
xor
je
mov
jne
das
dec
sar
leave
push
fmull
daa
gs
out
push
outsl
add
push
cli
daa
xchg
dec
cmc
sub
comiss
sbb
out
lahf
nop
adc
cli
popf
fisttps
push
push
je
pop
fsubrp
sbb
aas
imul
repnz
lods
add
ss
jge
pushf
nop
mov
lret
and
mov
adc
dec
daa
pop
addb
jns
repz
rcpps
dec
fxch
stos
pop
loopne
inc
mov
das
scas
pop
cmp
mov
rclb
aas
inc
sbb
inc
jno
lret
pop
or
stos
xchg
xchg
gs
and
jle
jmp
dec
int3
sbb
mov
rcr
push
popf
ljmp
pop
popa
xchg
sbb
ret
pushf
sub
fmul
adc
inc
or
aaa
repnz
xchg
and
or
and
or
cmp
aam
popf
fdivs
mov
int
add
arpl
dec
roll
int3
enter
fistpll
outsb
fldt
or
lods
mov
mov
out
je
inc
stos
xchg
dec
or
into
test
cmp
fucom
push
addr16
loope
out
lret
xchg
xor
outsl
pop
or
popf
and
insl
movb
jns
dec
insl
insl
ja
mov
xchg
shrb
sub
xorl
cmc
daa
pop
lods
cmp
mov
xchg
sub
push
xlat
mov
sbb
fs
add
add
add
xchg
dec
test
xor
cmc
sub
cmp
mov
sub
add
inc
or
cmpsl
add
dec
jmp
pushf
mov
scas
out
mov
xlat
xchg
mov
mov
in
sbb
mov
les
inc
rcl
push
sbb
rcll
stc
nop
orl
fcmovu
xchg
inc
mov
fidivs
fimull
pusha
jne
push
in
push
imul
sbb
ja
and
fldl
sbb
jg
lods
scas
test
mov
cmp
fsubrs
lods
sti
jnp
ds
movsb
mov
jle
popa
mov
pop
ficoml
fisttpl
mov
or
adc
test
std
cmp
mov
addb
leave
popa
mov
les
in
pop
jmp
jbe
mov
bound
dec
fsubl
mov
fs
mov
dec
loope
pushf
ret
sub
and
mov
push
push
pushf
cld
push
inc
pop
pop
push
push
jmp
mov
push
sbb
in
insl
daa
mov
dec
jl
dec
lahf
in
repz
inc
int3
test
xor
pop
pop
mov
pop
dec
adc
inc
das
add
push
mov
cmp
pop
or
mov
cltd
out
jo
iret
aad
imul
cltd
mov
clc
push
dec
adc
sti
pop
adc
repz
sbb
jp
mov
xchg
sub
ljmp
and
sbb
movsl
ret
jmp
cld
mov
enter
js
popf
or
mov
cmp
aad
push
xchg
sti
or
mov
mov
shlb
test
aad
test
fwait
xchg
sahf
jmp
mov
orb
mov
xchg
ret
cmpsb
pop
cmc
cwtl
jg
je
lock
mov
inc
icebp
out
repz
mov
loope
iret
into
mov
pop
jl
cwtl
popa
mov
or
jecxz
or
jmp
repz
xchg
movsb
aas
adc
xor
push
ret
mov
mov
test
sbb
adc
loop
push
mov
movsb
push
mov
jne
jo
ret
sbb
insb
pop
aaa
ds
pop
sti
addl
loope
mov
jecxz
jae
push
out
test
xorb
and
pop
xchg
out
push
xchg
out
lock
pushf
mov
les
mov
test
decb
sbb
mov
push
or
mov
cmpsl
out
push
sub
bound
inc
push
pop
arpl
out
sbb
xchg
in
movsb
cltd
mov
lcall
xor
push
ss
xchg
add
mov
nop
pusha
and
outsl
sarl
jbe
cmpsl
fwait
dec
inc
dec
leave
jno
pop
test
lods
xchg
sahf
test
js
push
addl
cmpsb
test
fs
gs
xchg
dec
pop
push
cmc
mov
jb
sub
jae
incl
adc
test
and
ja
aas
and
mov
adc
dec
mov
dec
pop
ds
push
aaa
arpl
popf
jp
imul
in
add
addb
add
imul
mov
cmp
sbbl
dec
scas
nop
hlt
cmp
cld
xchg
add
or
icebp
ficoms
pop
enter
mov
lahf
sbb
xchg
xor
icebp
lret
jp
mov
das
xor
jg
sahf
out
xlat
mov
mov
es
iret
xor
mov
or
inc
xchg
ss
xchg
or
jge
and
rclb
mov
mov
out
pop
adc
ret
jl
push
mov
cmp
loope
pop
mov
adc
sbb
popf
out
jne
imul
leave
add
sub
mov
cltd
ds
call
scas
repnz
cmp
inc
cltd
lret
pop
sub
repnz
int3
push
ds
mov
icebp
adc
ret
jmp
pusha
fimull
ja
sbb
addr16
mov
pop
popf
jmp
xchg
mov
addr16
dec
cltd
js
scas
sbb
in
mov
push
call
popl
lds
jecxz
fdivrs
inc
jl
jmp
add
test
ffreep
fcomps
push
jmp
cmp
cmp
les
push
fisubl
sbb
arpl
mov
mull
jge
mov
xlat
fimuls
cmpsb
xlat
cmp
mov
push
outsl
add
push
aas
clc
int3
andb
jnp
loope
in
xor
jns
push
sbb
ss
sbb
hlt
bound
dec
add
cmc
fs
mov
mov
clc
inc
cmp
pop
imul
fadds
je
jbe
mov
xchg
dec
ror
push
cwtl
pushf
sub
je
sub
inc
in
negb
jecxz
mov
jne,pn
xor
lods
mov
cmpsl
addb
das
inc
popa
mov
cli
dec
lcall
xchg
jecxz
js
inc
mov
push
out
jns
into
add
aam
adc
push
mov
cmc
jns
jns
push
push
mov
ss
sub
mov
push
mov
mov
jl
cltd
cmp
jae
xchg
sub
dec
jle
sbb
sarl
out
pop
les
repnz
sti
xchg
int
out
popf
sti
sbb
sbb
rcrb
sub
adc
mov
add
jae
vcvttss2si
inc
add
jb
pusha
xchg
outsl
in
insb
test
xor
stos
andl
lret
mov
and
in
rol
and
in
subl
pop
and
and
push
fmull
fsubr
test
push
xor
repnz
xor
mov
je
dec
mov
in
mov
cmc
ret
inc
mov
js
push
out
repz
jne
repnz
and
ljmp
adc
aas
sub
mov
or
push
xchg
add
inc
sbb
aad
insl
sub
pop
mov
and
push
push
xchg
or
daa
sti
xlat
clc
dec
ljmp
jbe
aam
lods
imull
push
test
hlt
ljmp
fwait
add
test
sahf
mov
rclb
sti
mov
jnp
and
clc
not
jecxz
mov
dec
gs
jno
cmpsl
ljmp
aam
je
mov
push
xchg
mov
add
ja
jbe
iret
test
mov
out
push
ret
or
mov
sbb
inc
xor
stc
daa
push
fdivl
inc
or
movsb
call
fwait
jle
inc
jg
mov
nop
imul
popf
call
xor
pop
icebp
cli
or
scas
sbb
push
jg
mov
jb
mov
push
in
shll
lcall
fisttps
loop
cltd
addr16
mov
mov
leave
adc
out
fbstp
mov
rol
test
dec
jg
ret
pop
in
mov
subb
and
bound
cmc
jle
mov
sbb
shlb
sub
les
repnz
adc
cmpsl
outsl
xchg
cmp
shlb
cltd
aaa
repnz
mov
mov
fsubrp
outsl
lock
pop
pop
mov
mov
lods
insb
sbb
mov
mov
add
mov
jecxz
xlat
ss
iret
nop
jle
mov
mov
mov
lock
and
and
sub
mov
and
mov
aam
xchg
idivb
movsb
inc
pop
sub
stc
fdiv
imul
jb
iret
add
in
gs
pop
fwait
insl
gs
add
int
jae
pop
test
adc
mov
dec
mov
sub
mov
daa
push
sbb
cmp
or
push
dec
pop
jle
jno
subb
sti
mov
ss
pop
push
mov
mov
stos
sub
dec
rcr
jecxz
mov
mov
lcall
cli
mov
pop
inc
cs
stos
inc
cltd
mov
adc
inc
sbb
aad
dec
leave
inc
mov
and
dec
xorl
ficoms
popa
inc
cmp
ds
shr
mov
jp
add
outsb
std
decb
dec
jg
rcl
lahf
sub
clc
leave
dec
or
sahf
sahf
mov
xor
loope
outsb
xor
daa
mov
mov
arpl
jb
dec
mov
je
pusha
pop
pop
xchg
lds
mov
cmp
jmp
sub
popf
fsubs
mov
addb
daa
loopne
mov
dec
xchg
push
sub
sub
pop
cmp
clc
jle
mov
loope
loop
lea
xchg
pop
inc
cld
mov
add
cld
loopne
test
jmp
xor
jbe
push
mov
mov
loope
dec
push
jno
or
adc
mov
xlat
gs
nop
xor
imul
aad
xor
loopne
xchg
stos
mov
jmp
pop
adc
loopne
adc
or
or
xor
imul
push
sub
jbe
push
mov
and
inc
mov
inc
push
lock
xchg
push
adc
mov
sub
mov
aam
mov
adc
pop
jg
or
push
mov
es
pusha
fcmovnb
sub
push
mov
cli
pop
pop
scas
mov
into
push
pusha
sub
in
in
mov
in
insl
scas
data16
mov
roll
cmp
lret
jno
shlb
push
js
rorl
fdivl
in
cmp
xchg
jno
out
inc
pop
cs
shl
bound
mov
ret
add
daa
inc
mov
jnp
pop
adc
rcrl
fnstenv
pop
sbb
lock
sub
test
mov
repnz
or
and
push
mov
dec
std
dec
pop
push
jge
dec
js
dec
dec
jmp
push
inc
sub
ret
ror
enter
xor
testl
jno
push
mov
mov
out
push
pop
notb
mov
and
xor
push
mov
mulb
push
inc
scas
cli
addr16
jp
adc
pop
ja
mov
mov
jle
out
lock
in
jle
test
fnstsw
jo
pop
mov
aaa
ds
sub
pop
js
sbb
jmp
jno
cmc
cs
out
lcall
cmp
idiv
jle
dec
shrl
cli
aaa
cmpsl
fidivrs
push
neg
fnstsw
ljmp
mov
lcall
inc
mov
or
in
adc
jg
test
dec
jle
les
imul
xchg
xchg
mov
xchg
cmpsl
pop
jle
xor
add
and
mov
in
leave
dec
dec
pop
testb
cld
mov
repnz
dec
mov
mov
add
and
scas
xor
jmp
ror
xchg
cs
mov
push
mov
rcrl
inc
sbb
lods
imul
xor
test
push
pop
xor
in
mov
test
out
pop
imul
cmp
adc
push
inc
outsb
xchg
and
imull
pop
movsb
mov
ds
adc
push
add
hlt
pop
xor
pop
std
inc
dec
jle
xchg
loopne
call
cmp
push
add
ror
into
fadd
dec
movsb
fcom
shl
lods
pop
shl
bound
mov
cmpsl
inc
andb
sbb
dec
loopne
lret
movsb
fs
dec
mov
adc
push
push
mov
xchg
cmpb
mov
iret
lahf
repz
arpl
in
push
les
mov
or
dec
jl
push
jb
mov
or
test
lret
imul
mov
jns
push
in
jae
and
into
aad
jns
mov
test
dec
push
sub
gs
enter
nop
popa
fsubs
xor
or
in
roll
imul
leave
in
dec
ret
andb
rcll
pop
test
aad
xchg
mov
rolw
adc
dec
sbb
xor
pop
mov
push
mov
adc
cmp
xchg
cld
inc
test
mov
xchg
jmp
adc
xchg
xchg
movsb
xor
xchg
pop
cmp
jp
popf
jae
out
adcb
rcl
push
lahf
test
jg
mov
and
and
mov
mov
sahf
shlb
icebp
mov
push
or
mov
fmull
ror
addb
aam
pop
dec
iret
xchg
lret
in
pop
dec
dec
cld
pushf
fwait
stos
xchg
inc
mov
push
or
xchg
int3
mov
cmp
sbb
test
cmp
leave
movsb
jecxz
jg
fdivrl
cmp
iret
inc
mov
adc
ret
mov
repz
iret
sub
sbbb
xchg
aaa
adc
or
push
insb
stos
enter
jne
inc
cmpsb
or
cld
adc
mov
xor
adc
inc
fsubrp
add
addr16
dec
jl
out
fdivrp
or
cmp
add
gs
jp
push
andl
loope
sub
push
jle
cli
and
sbb
mov
sahf
sbbl
andb
lcall
aam
mov
iret
movsl
ljmp
and
jns
pop
dec
loope
mov
sbb
sub
sub
pushf
mov
push
or
cld
mov
popa
sub
inc
lcall
push
out
div
inc
sbb
and
add
shrb
and
int
push
insb
mov
push
dec
add
mov
dec
dec
cmp
add
inc
outsb
lahf
test
setbe
jne
test
pop
inc
inc
stos
popf
push
cmp
mov
add
aas
mov
imul
add
movsb
jnp
adc
jnp
mov
push
jmp
mov
rorl
mov
mov
sbb
mov
inc
in
loop
add
ds
in
loope
lds
nop
dec
xor
sbb
icebp
call
pop
mov
daa
mov
add
dec
outsb
pop
or
add
mov
or
cmp
add
and
cmp
loope
lods
idivb
mov
std
insl
pop
lret
or
inc
mov
cwtl
idivl
adc
jns
out
xchg
pop
mov
dec
into
xchg
cld
cld
mov
cmp
xlat
pushf
jb
mov
out
mov
dec
cmp
ds
jbe
into
out
mov
daa
ficomps
mov
adc
jle
ds
ljmp
cli
aaa
push
jno
rorb
cmpsb
mov
cli
cmp
sub
fcmovb
pusha
int
movswl
or
lcall
cmovo
xor
lea
int
add
testb
sbb
shlb
push
in
mov
mov
xchg
add
out
loope
add
sub
jno
movsb
add
scas
popf
inc
ja
jns
add
popf
clc
mov
adc
loope
insl
xor
sbb
push
mov
dec
xchg
lahf
xor
in
sbb
mov
add
cmp
sbb
jmp
push
aad
dec
in
jecxz
daa
sbb
adc
push
jl
pop
dec
mov
xchg
push
imul
dec
insb
adc
inc
insl
inc
inc
enter
mov
sub
xor
dec
sub
adc
aad
sti
pop
loope
xchg
push
cmc
lea
add
int
sub
mov
mulb
clc
cltd
leave
call
dec
mov
fdivl
mov
push
pop
dec
and
enter
outsl
scas
and
push
in
xor
pusha
gs
add
sbb
cmp
insb
rolb
lock
jno
mull
cmp
or
loopne
xorb
mov
dec
sub
xor
push
jns
out
sahf
cld
adc
outsl
fstps
xor
lods
cwtl
leave
dec
ja
jo
dec
lods
icebp
or
in
divb
dec
lods
mov
sbb
mov
mov
lret
adc
lds
and
pop
push
lock
and
ja
xchg
sub
insl
ljmp
cli
data16
stos
scas
rcrl
ret
dec
jp
push
subl
mov
mov
xlat
ret
fucomp
enter
inc
add
sub
ljmp
loope
daa
fsubl
adc
mov
mov
subb
cli
jle
jp
lock
hlt
cmc
das
pop
sub
mov
cmp
xchg
sub
dec
dec
dec
scas
inc
mov
jo,pt
aas
or
fmuls
sti
adc
sub
dec
rcrb
pop
test
daa
insl
std
rcrl
jmp
cwtl
mov
outsl
jae
push
addb
les
or
xchg
loope
mov
fcompl
adc
out
aaa
mov
test
cmp
scas
fwait
mov
or
pop
dec
aam
pop
aaa
js
xchg
add
aaa
cli
test
jae
sub
xchg
xchg
inc
pop
sub
call
mov
cmpsl
popa
cmpsl
mov
push
rcrl
sbb
cwtl
in
dec
out
xor
cs
cmpsl
ret
jb
xchg
push
std
adcl
addr16
fldt
cmp
sub
fiaddl
sub
push
inc
or
aas
cmp
insl
mov
aad
push
ja
test
xchg
rorb
fmul
pop
js
dec
pusha
lods
ret
pop
sub
mov
dec
adc
dec
cmp
leave
enter
aad
dec
pop
xor
out
scas
xchg
addb
cmp
pusha
dec
imul
add
negb
out
sarl
mov
stos
loopne
mov
or
sbb
fwait
loopne
leave
cmp
jb
aas
dec
dec
add
test
mov
add
pop
pop
mull
jge
dec
push
das
push
and
sbbl
sub
dec
aad
or
or
dec
adc
aam
and
movsb
xor
mov
pop
in
dec
and
push
lahf
adc
adc
pop
mov
mov
ds
dec
pop
js
sbb
test
fiaddl
mov
cmp
jae
push
push
loopne
insl
adc
das
pop
in
hlt
mov
xchg
clc
ljmp
fimuls
sub
mov
insl
adcb
mov
icebp
aam
pop
enter
clc
into
pop
lea
pop
add
cmc
add
adc
into
sub
in
mov
test
aaa
jb
mov
and
movlps
fsubrs
hlt
cmp
mov
inc
push
add
xchg
pop
jge
addb
sbb
push
xchg
sub
xor
pop
call
loope
pushf
jp
adc
loope
dec
loop
add
push
jns
test
mov
pushf
mov
xchg
pusha
leave
sub
lahf
mov
adcb
push
cmp
call
dec
dec
mov
iret
push
sbb
lods
lds
inc
popa
dec
jg
cld
stos
cmp
and
xchg
dec
repz
int3
jo
jmp
inc
mov
sub
aam
outsb
nop
add
inc
xlat
and
fstpt
push
and
pushf
rep
mov
std
pop
test
push
test
push
dec
push
jp
cmp
xchg
ds
mov
sub
mov
rcrl
push
in
std
mov
call
jo
aad
jle
fiadds
xchg
add
int3
imul
addl
test
pushf
inc
das
pop
mov
adcl
movsb
push
hlt
mov
pop
test
mov
sub
cmpl
inc
dec
mov
mov
add
push
gs
orb
shll
fucomi
dec
aas
out
inc
int
loope
push
sbb
into
inc
push
sbb
fnstcw
mov
outsl
or
mov
xchg
pushl
cli
adc
or
andb
test
mov
cmc
jl
sub
pop
das
add
push
cmp
repz
mov
xor
or
add
in
loop
push
jle
cmc
repz
rcr
mov
les
pop
sbb
xor
mov
push
dec
sarb
adc
push
in
ret
movsl
xchg
inc
nop
sbb
mov
fadd
loope
cltd
aad
hlt
jb
and
hlt
repnz
loopne
xchg
inc
mov
je
fyl2xp1
in
inc
popf
push
mov
repz
fmuls
adc
and
or
je
push
scas
mov
sahf
lret
movsb
pop
jp
sbb
popa
cltd
insb
rcll
push
ret
jge
sbb
stos
mov
dec
cld
or
jns,pt
fstpl
push
std
outsl
dec
push
cmp
pop
jbe
mov
out
xchg
mov
xor
sbb
inc
in
pusha
mov
movsb
mov
cmp
dec
jb
and
cwtl
add
inc
fcoml
cmp
push
inc
idivl
lock
mov
lret
pop
out
loop
sarl
xlat
fnstsw
mov
push
cmpsb
or
xor
into
call
sbb
add
test
push
inc
test
popa
out
inc
ret
orl
in
cwtl
pop
aaa
mov
arpl
inc
lock
ficoml
mov
jb
clts
lahf
jae
inc
pop
in
lods
fwait
jg
pop
dec
sub
pop
dec
jns
dec
jno
add
adc
loop
ret
xchg
int3
fbstp
cli
jl
push
hlt
dec
dec
sub
cmpsb
and
es
sub
fwait
adc
in
sbb
pop
xchg
call
xor
ja
lods
jge
gs
std
nop
mov
xor
ss
push
jl
xchg
cmp
lcall
jne
pop
cmp
inc
sti
pop
idivb
push
pop
aad
fidivrl
addr16
packuswb
mov
add
pop
jg
mov
subl
aaa
pop
movsb
or
out
pop
jle
xor
pop
dec
daa
lret
fiaddl
inc
pop
push
jo
mov
packuswb
and
dec
and
xor
stos
stc
fmull
sbb
in
pusha
adc
data16
and
add
pop
jnp
cmpsb
add
fistpll
shlb
fstl
lods
or
and
cwtl
and
mov
std
push
ror
leave
mov
adc
or
addr16
icebp
gs
jne
out
out
movsl
repnz
adc
stos
dec
mov
js
lret
movsb
cli
sbb
push
je
mov
add
das
aad
adc
mov
ljmp
dec
in
stos
push
adc
in
xchg
xchg
jns
les
lods
arpl
int3
inc
test
mov
rclb
sbb
mulb
xor
inc
jns,pn
popa
icebp
add
push
inc
jecxz
push
leave
test
out
mov
aam
fmull
and
pop
lret
push
dec
ds
aas
fnstsw
es
mov
stos
sti
fstpt
pop
inc
lret
xor
fisttpll
push
fwait
scas
push
movsl
adc
pusha
dec
jbe
std
sub
cmpsb
dec
jge
xchg
dec
add
dec
or
inc
pusha
test
test
enter
adc
out
sub
adc
jl
push
rorb
fidivrl
push
push
gs
fadds
out
out
cmpsb
loope
push
icebp
sbb
pop
or
repnz
mov
fisubrs
enter
pop
lcall
rorb
sub
push
test
movsl
xor
cmpsl
mov
arpl
mov
push
pop
or
mov
in
ja
test
mov
and
mov
out
and
add
dec
mov
jl
lcall
jp
cltd
int3
pop
and
sub
jp
jge
cmc
xchg
xor
int
push
mov
scas
call
iret
mov
shlb
incl
fwait
icebp
mov
fs
pop
aas
ficompl
nop
and
push
call
lods
inc
jnp
dec
andl
jnp
xor
and
mov
pop
mov
mov
sub
mov
pop
mov
ret
pop
stc
sti
in
sbb
push
cmp
push
inc
repnz
and
dec
pop
cmp
loope
addr16
mov
das
mov
jno
adc
jge
scas
jbe
int
fldl
addr16
cmp
mov
adc
faddl
sahf
inc
roll
es
mov
dec
push
mov
sbbb
imul
rcrb
data16
inc
mov
or
std
push
fcoms
xchg
push
adc
jg
xor
cmpsb
cmp
pop
test
mov
sbb
or
jl
call
xchg
xchg
or
repz
mov
rolb
arpl
mov
daa
cwtl
outsl
xchg
mov
cli
jbe
and
or
add
cs
mov
xchg
mov
xchg
sbb
jmp
pop
pop
repnz
add
ss
out
inc
mov
cmpsb
loopne
shrl
insb
rcrl
mov
pop
cmp
fs
movsb
mov
inc
insl
roll
sbb
push
fildll
mov
loopne
dec
enter
or
push
in
add
push
push
sbb
push
inc
fists
mov
xchg
xor
xor
outsl
sbb
cs
loope
push
add
subb
sti
lret
mov
jmp
xchg
jbe
add
in
push
insb
inc
call
push
out
sub
add
stos
iret
outsb
jp
pop
test
daa
hlt
sbb
add
jo
pop
ljmp
and
inc
ja
vmovapd
or
cltd
jne
jns
mov
jno
add
cmpb
pop
mov
subl
xor
mov
cmp
dec
test
movsl
jnp
shll
xorl
mov
push
cmp
inc
mov
push
stc
sbb
fistpl
mov
lret
inc
lea
adc
lock
cwtl
insl
loopne
cwtl
add
and
cwtl
mov
orl
jle
loop
in
mov
sti
sub
sub
decb
sbb
testl
mov
and
push
push
loop
popa
inc
and
mov
popf
inc
xchg
sarb
xor
xlat
add
in
pop
repnz
and
jae
icebp
leave
jmp
push
xchg
push
jno
push
btsl
push
syscall
or
scas
aam
test
push
call
push
mov
xorb
repz
rorb
movsb
daa
jae
imul
xchg
sub
jbe
sub
push
sbb
iret
sub
rclb
sbb
or
cmp
jecxz
jae
sbb
loopne
xchg
or
stc
test
add
sub
cmc
fcmovb
sub
pop
fimull
sbb
or
aad
and
cmc
pushf
adc
cli
icebp
and
aad
xchg
mov
xchg
jnp
stos
aad
adc
cmovbe
rcll
ret
int3
insb
push
push
dec
ds
cmp
xchg
sub
js
cmpsl
dec
mov
movsb
sub
ja
fistpll
call
pop
xchg
xchg
jnp
fstpl
in
inc
mov
insl
jb
inc
iret
mov
xor
xchg
test
int3
sub
xor
ljmp
loop
in
mov
pusha
jp
lds
inc
mov
mov
imul
rcrl
and
pushf
mov
arpl
xor
and
jae
adc
subb
jmp
lret
inc
in
imul
fs
les
pop
sbb
and
stc
lods
test
mov
xor
xor
rcrb
add
dec
aaa
dec
pop
pop
xbegin
pop
cmc
push
or
aaa
mov
arpl
hlt
xchg
pop
aam
inc
sub
and
pop
jecxz
pop
jne
in
outsb
mov
loopne
pop
push
in
xor
pop
fadd
mov
clc
mov
clc
addr16
xchg
pop
dec
mov
orb
inc
js
dec
scas
clc
cld
mov
loopne
lods
or
dec
sahf
jmp
out
popf
jl
pop
mov
imul
mov
popf
mov
jae
pop
stos
dec
add
add
mov
pop
xor
stos
add
jae
std
stos
or
lret
jmp
outsb
adc
jno
cmp
ret
jbe
push
nop
les
cmp
xorb
mov
vpshufhw
inc
cwtl
sub
fmulp
hlt
enter
das
fs
inc
fidivrs
sbb
aad
aad
dec
adc
mov
xor
movl
xchg
lock
dec
icebp
cli
and
mov
or
bound
lock
inc
mov
mov
mov
scas
inc
push
stos
mov
push
sbb
mov
ficoms
mov
into
movsb
lret
adc
mov
int3
out
test
adc
jle
fmull
int3
mov
cs
lahf
ds
enter
jmp
in
clc
and
dec
xor
rorb
mov
ljmp
and
push
sarl
or
lret
lret
pop
pusha
inc
and
jne
movsb
cltd
pop
stos
add
cld
lcall
jno
xor
lock
int3
dec
xchg
sti
decb
iret
inc
adc
fldenv
nop
adc
mov
inc
xlat
cltd
or
dec
mov
test
or
inc
ret
icebp
cmp
push
mov
push
mov
inc
xor
lods
mov
pushl
mov
xlat
push
inc
or
fiaddl
sahf
fisubrs
roll
std
imul
daa
cld
xchg
mov
in
fmull
in
pushf
adc
add
gs
mov
lds
jle
push
jp
inc
sub
or
roll
push
pop
orl
mov
push
pop
test
xlat
dec
sti
pop
jle
int
xchg
leave
sbb
scas
lahf
sti
xchg
aas
dec
push
jg
jns
jo
nop
sbb
jle
cmpsb
data16
lds
hlt
arpl
jbe
fsubs
jno
jno
bound
jp
rcrb
and
pusha
fsubl
add
mov
mov
jns
xchg
popa
xchg
mov
and
repnz
cmpsl
call
push
push
daa
sub
pop
mov
mov
push
out
call
jo
sbb
lret
cs
pop
jae
scas
or
jb
jg
enter
imul
push
jns
pop
in
lret
or
mov
in
or
aam
and
shrb
xchg
into
mov
push
in
jne
mov
inc
popa
ja
push
pop
lds
inc
enter
sti
pop
xchg
xor
sub
loop
adc
scas
iret
lods
int3
xchg
mov
leave
ja
push
scas
daa
and
fmul
popf
icebp
pushf
and
stos
mov
rcll
sub
aas
adc
roll
ficomps
pop
icebp
loope
fwait
jo
loop
daa
andl
imull
aad
pop
pushf
push
ret
lods
adc
fstpt
iret
sbb
jnp
sub
add
cmpsl
cli
mov
cmpb
mov
cmp
hlt
stc
in
insb
out
call
mov
sarl
sbb
rep
mov
sbb
adc
sub
push
jle
mov
pop
test
daa
xchg
idivl
push
sahf
mov
jns
push
adc
mov
mov
push
dec
fwait
xor
xchg
pop
pop
push
cmp
aaa
cmp
mov
sub
add
pop
in
aas
pop
aas
aam
scas
cmpsl
es
inc
fstpt
fdiv
push
gs
push
sahf
xchg
mov
rorb
sbb
orl
shrl
push
adc
loope
pop
xchg
shr
lock
pop
mov
mov
es
cld
pop
add
sti
pop
lock
shr
push
shll
addr16
mov
dec
es
mov
fistps
or
es
int3
ljmp
imul
int3
mov
push
xor
hlt
xchg
mov
fdivrp
scas
cmp
mov
xor
fcoms
into
jns
fmulp
cmp
add
xchg
scas
ja,pn
fldcw
fisubrl
ficoml
sub
inc
sbb
push
clc
jb
loope
sub
xor
in
jnp
push
sub
xchg
dec
cmpsb
sbb
cmp
or
push
push
es
js
movsl
fisttps
wrmsr
call
in
inc
dec
push
insb
cmp
loop
mov
xor
xchg
sbb
js
invlpg
mov
and
test
xchg
push
stos
dec
sbb
pop
dec
add
cmp
out
mov
insb
out
jecxz
icebp
and
inc
xlat
jp
in
xchg
imul
arpl
lods
cltd
sub
jns
repnz
fucom
fcompp
movsb
imul
int3
insl
scas
pop
cmp
sbb
gs
push
add
jae
fnstenv
str
sbb
nop
adc
and
add
mov
sbb
jl
lea
sbb
lret
outsl
cmp
jo
faddl
pop
xor
adc
xorb
push
jecxz
adc
insl
adc
xchg
imul
push
jae
sbbb
inc
xor
push
inc
xor
shlb
aaa
or
sti
push
adc
ret
push
mov
jmp
inc
inc
imul
sub
sbb
shrb
cmp
mov
into
push
cmp
daa
sbb
outsl
in
fbstp
fwait
dec
les
mov
js
sbb
mov
jle
mov
outsb
sbb
inc
pop
xlat
shll
mov
in
sarb
inc
xor
mov
insl
sbb
xor
incb
imul
sarb
push
adc
inc
mov
lods
out
insb
push
cwtl
xor
repnz
dec
fucomp
adc
inc
ss
add
lea
mov
push
inc
repz
outsb
in
je
adc
aaa
mov
fstl
pop
outsl
pop
or
pop
rclb
pop
pushf
cwtl
fidivrs
adc
das
inc
aaa
in
in
cmp
sbb
inc
test
mov
rcrl
ja
jecxz
lret
sbb
lret
cmpsl
cmpsb
pop
dec
js
out
test
push
mov
lret
int3
mov
sbb
inc
sti
cmpsb
repz
sub
dec
popf
test
inc
sbb
iret
divb
jecxz
sub
fldl
addb
lret
mov
sub
aas
add
das
mov
push
mov
mov
or
aas
mov
jp
jecxz
lret
scas
repz
pop
dec
lret
sahf
mov
js
in
mov
adc
push
mov
adc
mov
adc
inc
les
or
lcall
add
std
sbb
mov
sub
aaa
cmp
imul
xor
or
lret
ds
pop
repnz
jmp
mov
sbb
jne
sbb
mov
jl
lcall
jno
lock
lret
pop
pop
decl
loope
sub
addb
ds
and
push
jle
mov
es
repnz
mov
insb
inc
mov
scas
sub
mov
jmp
arpl
aaa
rcrl
push
adc
push
and
out
pop
js
dec
sbb
adc
inc
jecxz
xor
jnp
fcmovnb
xor
stos
mov
dec
ffreep
adc
in
pop
or
inc
cmp
in
mov
xchg
pop
fistps
push
push
or
pop
repnz
bound
cmovne
cmpsl
mov
inc
stc
xchg
push
insb
dec
mov
add
fistps
mov
mov
je
sub
xor
lds
decb
cld
stos
xchg
stc
stos
inc
rolb
jecxz
dec
int
out
dec
call
inc
inc
loope
inc
jnp
jge
or
shrl
fwait
xor
lret
fs
sbb
cwtl
fstpt
sbb
ss
pop
cs
sub
push
jp
insb
mov
add
mov
jecxz
sub
or
inc
js
lods
mov
repnz
push
push
add
jne
dec
inc
pop
push
pop
ret
gs
out
adc
es
lret
sbb
xorl
add
in
movsl
lea
pop
les
and
sub
cmp
mov
inc
push
fisubrl
push
mov
and
pop
movsl
scas
clc
loope
lock
adc
dec
loop
out
dec
lods
aad
call
js
jno
jecxz
sub
outsb
xorb
xor
lret
mov
rcl
popa
mov
test
mov
enter
mov
adc
mov
stos
popf
out
enter
iret
add
lret
mov
jp
adcb
ret
dec
cmc
ret
pop
aaa
js
adc
aad
test
sbb
mov
subl
jae
iret
aad
out
sbb
mov
xlat
or
mov
je
adc
dec
or
jb
fnstenv
push
dec
xchg
test
inc
sub
push
loopne
shll
sbb
jnp
cltd
push
push
jns
mov
adc
bound
hlt
out
movsl
cmp
enter
dec
add
cmc
and
lods
sbb
scas
adc
out
sbb
test
imul
lods
mov
pushf
ja
daa
mov
pop
pop
ljmp
pusha
sub
push
push
pop
sub
std
je
and
mov
test
ret
fmul
lret
jns
push
and
sbb
or
enter
adc
iret
jmp
mov
aas
sti
std
enter
pop
sub
cltd
mov
gs
stos
xlat
lcall
pushf
jge
push
cwtl
ficoms
fmull
dec
inc
push
xorl
mov
sbb
cmpsl
adc
mov
notb
test
pop
out
clc
aas
ljmp
sbb
jmp
cmp
sbb
sub
xchg
enter
fists
cltd
mov
cmp
rcll
insl
adcb
xor
sub
sarb
scas
fcomi
popa
push
ss
mov
mov
arpl
addr16
push
sbb
movsb
inc
sbb
and
ret
jp
test
push
es
sbb
fldl
jl
mov
das
adc
cmp
xchg
push
icebp
add
lahf
lahf
xchg
out
jae
repz
jnp
pop
and
test
fwait
out
mov
lret
dec
pop
xchg
jne
xchg
pop
xor
push
inc
call
mov
lret
out
inc
loope
fwait
addr16
push
dec
jne
fstps
ret
faddp
test
das
movsl
push
mov
mov
mov
je
imul
or
shl
mov
outsl
and
sbb
pusha
ror
dec
dec
mov
int3
sbb
roll
xchg
and
cli
out
testl
aaa
test
xchg
cld
cmp
cmpsl
sub
ret
movb
cmc
sub
repz
popf
sbb
into
dec
popa
mov
bound
xchg
adc
movsb
add
test
pop
push
pop
movsl
sbb
popf
les
rorl
loope
cmpb
mov
pop
adc
sub
test
push
imul
int
dec
cmp
sbb
jmp
lods
cmc
call
das
nop
inc
sar
sub
pop
sbb
mov
cmp
jl
xchg
mov
push
cwtl
rorb
movsb
ja
pop
fucomip
fcoms
xor
jb
xchg
inc
dec
xchg
lcall
inc
xor
dec
mov
repnz
jp
jge
xchg
popa
adc
push
popf
clc
mov
lret
popf
bound
movsl
cld
dec
jmp
stc
bound
test
sbb
xor
xchg
mov
fisubrl
mov
lds
mov
push
adc
push
mov
arpl
cmp
leave
arpl
scas
mov
push
xor
sti
lods
and
mov
mov
inc
dec
mov
les
mov
and
cmp
or
testb
sahf
rorl
mov
fmuls
ret
hlt
out
fxch
ja
iret
pushf
cmp
scas
movsl
cmp
jbe
je
je
aam
outsl
hlt
push
scas
cmc
in
adc
int
or
cmpsb
loope
mov
pusha
jg
adc
push
inc
mov
push
mov
jbe
sbb
sahf
jno
or
in
lret
mov
dec
and
pop
inc
ss
ret
pushf
jp
mov
test
lret
xchg
jbe
jno
daa
loopne
pop
mov
into
push
es
leave
and
faddl
inc
mov
inc
jbe
and
pushf
cmc
pop
add
mov
icebp
gs
mov
pop
fmull
fsub
mov
xor
fs
aaa
aaa
sarl
and
mov
les
mov
mov
fs
in
loop
xchg
jge
jl
mov
fcoml
cmp
arpl
cmp
jbe
sub
icebp
repz
push
mov
pushf
loope
add
fs
sbb
jge
in
jns
int3
imul
pop
adc
jg
in
sbb
daa
and
fs
iret
out
add
mov
dec
cmpsb
inc
cld
gs
test
mov
cmp
mov
stc
ljmp
mov
mov
xor
cmc
add
and
add
mov
add
out
aam
mov
cmp
mov
ret
aaa
push
cmpsl
ss
inc
jle
repz
js
xchg
jae
add
fcomps
cmc
pop
mov
sub
push
out
cmpsl
dec
cltd
lret
dec
sub
loop
inc
cmc
in
out
sahf
mov
pop
ja
int
std
push
xorl
adc
pop
sbb
sbb
inc
loopne
ja
jl
mov
xchg
add
test
out
xchg
and
push
lea
mov
lcall
mov
push
mov
and
mov
pushf
popf
xchg
xchg
xor
imul
enter
adc
nop
inc
mov
push
add
jge
mov
and
ss
das
push
mov
xlat
aad
rorl
jl
dec
sub
sti
mov
push
cmpl
dec
mov
sbb
pop
int
insl
sbb
stos
mov
outsb
xchg
cmp
cmp
xchg
xor
inc
cmp
pop
cmp
jo
ds
sub
dec
adc
pop
test
cmp
pop
popa
add
jle
and
je
push
sti
inc
or
ficoml
sbb
lahf
subb
insb
rclb
test
stos
neg
lahf
dec
dec
in
add
mov
cld
mov
cmp
test
inc
int3
out
insb
leave
push
pop
add
ds
sahf
rcrl
or
jl
es
sahf
push
test
shrl
sub
add
xor
mov
sbb
fwait
mov
jecxz
movsb
ljmp
jl
lea
jecxz
pop
inc
jle
pop
push
mov
jmp
mov
repnz
mov
push
mov
dec
and
xchg
pop
pop
or
cwtl
dec
dec
test
cmc
or
leave
shlb
jo
inc
inc
adc
sbb
outsl
xor
add
in
lret
push
xchg
xrelease
out
and
inc
mov
ja
mov
in
lea
adc
loopne
pop
fildll
push
mov
push
jp
pop
add
cmc
xchg
pop
pop
data16
add
dec
je
insl
mov
or
add
outsl
jbe
or
sbb
pop
jns
dec
movsb
lret
movsl
repz
subl
int3
arpl
xor
iret
add
mov
jmp
int3
insl
pushf
xchg
shll
movsb
jb
dec
xor
mov
int
inc
sbb
push
push
hlt
in
sti
adc
and
lret
mov
test
mov
cmc
stos
pushf
mov
vphadduwq
dec
leave
cmc
dec
popaw
aam
mov
arpl
push
jno
xchg
lea
jno
out
mov
call
mov
ss
push
aam
cwtl
fs
cmp
cmp
into
pop
add
xor
mov
and
sbb
inc
or
ja
add
repz
pop
mov
rclb
loopne
pop
xor
in
pop
sbbl
clc
mov
adc
ficompl
xchg
loop
clc
xchg
add
fdivl
mov
vaddss
push
xor
dec
jge
push
imul
cmp
mov
mov
int
mov
popa
sbb
mov
fwait
movsl
fsubrl
and
sbb
mov
add
cmp
sub
sti
call
notb
js
mov
out
sub
lods
mov
in
push
adc
jbe
adc
sti
xor
addr16
aas
jb
pop
jbe
insl
adc
xchg
or
gs
or
jmp
pop
xor
roll
fadd
add
push
or
gs
jg
sbb
mov
mov
push
push
adc
cli
int3
mov
sbb
clc
sahf
pop
movsb
mov
xor
jne
imul
addl
inc
dec
jge
rorb
ljmp
jle
xchg
test
jns
and
imul
jns
sbb
mov
mov
fcmovbe
or
push
mov
mov
out
mov
out
sbb
dec
fisubrs
iret
sti
push
xor
xchg
xchg
mov
jo
sub
pop
inc
jae
cmp
jne
mov
pop
cmp
hlt
cmp
in
lahf
cltd
icebp
icebp
sbb
xchg
jl
je
hlt
adc
push
mov
enter
lret
lahf
cmpsl
pop
mov
int
outsl
dec
fldt
sahf
aaa
daa
in
or
mov
add
push
aad
mov
mov
mov
aam
cli
movsl
into
subb
pop
outsl
mov
or
adc
lea
popa
mov
pop
scas
xor
out
leave
jecxz
out
test
mov
int
push
mov
pop
mov
mov
xchg
int
cmp
cli
jp
cmp
inc
loopne
test
clc
add
pop
cmp
out
pop
cmpb
lcall
mov
ret
std
mov
mov
arpl
stc
in
nop
or
mov
outsb
movsb
aam
mov
and
jl
out
int
push
jae
mov
fnstcw
movsl
mov
push
cmp
mov
ds
rolb
and
sub
sbb
cmpl
repnz
cwtl
stc
insl
and
add
negb
mov
adc
and
loope
call
xchg
and
call
push
arpl
mov
daa
out
dec
int
ss
jb
outsl
dec
jl
movsb
adc
dec
lods
hlt
xlat
dec
add
mov
aad
call
mov
ss
scas
test
sub
mulb
out
shrb
cmp
push
imulb
and
jo
pop
lahf
sub
or
pop
sbb
es
mov
sbb
pushf
fsubrl
addr16
jb
popf
mov
bound
or
xor
jmp
mov
mov
lock
push
ss
int
inc
test
add
fisttpll
cmp
sbb
adc
fldt
sbb
or
mov
mov
movsl
pusha
popf
mov
js
xorb
push
jb
out
mov
jae
fsubl
cld
mov
pop
xlat
pmullw
cmp
aas
cmp
dec
xchg
cmpsl
out
push
stc
mov
xchg
inc
cwtl
inc
jp
adc
imul
sub
es
jg
mov
js
clc
pop
jo
js
clc
inc
adc
shll
inc
les
dec
pop
mov
ja
pop
jb
mov
lahf
leave
dec
stos
lods
repz
sub
test
pop
fiaddl
or
push
daa
jns
cmpsb
icebp
loop
and
icebp
and
sbb
and
mov
idivl
in
push
jo
pop
jmp
fdivl
mov
xchg
adc
fs
inc
dec
push
std
mov
popf
add
inc
push
inc
add
cwtl
dec
cmc
loop
xchg
jl
push
ficompl
mov
pushf
jge
ja
aas
ja
imul
mov
and
std
lock
es
prefetch
mov
mov
mov
jb
pop
pusha
idivl
ret
aad
sub
jmp
test
xlat
les
rol
mov
out
pop
insb
and
mov
ds
js
les
sbb
cmpb
les
ret
push
add
out
xor
adc
jbe
jge
push
lods
sbb
dec
dec
jno
lret
movsl
pop
sbb
pusha
mov
sub
repnz
out
ficompl
in
rolb
jo
dec
pop
fs
mov
mov
inc
test
sub
daa
push
gs
shl
adc
repz
inc
adc
dec
arpl
fdivl
hlt
push
or
add
xchg
dec
sub
or
adc
rcrb
mov
sub
cmp
inc
adc
mov
or
push
adc
sbb
pop
fmull
mov
add
jns
loop
push
iret
cmp
jg
cmc
inc
icebp
or
push
pop
xchg
mov
mov
nop
lret
xor
std
jecxz
or
cltd
jne
push
fsubr
shll
sahf
pop
cli
scas
aad
xor
mov
push
in
pop
pop
les
ja
mov
faddl
std
aam
fadd
or
dec
in
gs
imul
fists
add
sub
add
das
pop
pushf
adcl
dec
xor
jns
sub
add
xchg
pusha
mov
cmp
push
ret
aad
lock
enter
inc
pop
gs
inc
xor
fisubl
int
pop
inc
adc
popa
rclb
lods
push
sub
mov
jmp
lahf
aas
sub
leave
fnsave
lret
mov
out
dec
fbstp
test
adc
sbb
jge
das
test
ljmp
cwtl
mov
dec
jl
adc
out
leave
jle
shrl
xchg
pop
in
xor
jne
je
lds
dec
jecxz
mov
xchg
scas
inc
cli
pushf
cmp
sbbb
add
and
jg
loopne
jo
sbb
repnz
ret
arpl
xchg
push
test
xchg
pop
pop
sbb
mov
testl
es
xchg
xlat
scas
fmuls
xchg
sub
adc
dec
addr16
cmp
mov
popa
outsb
test
into
mov
iret
mov
mov
push
and
fwait
push
push
sub
cmp
sbb
ja
mov
es
roll
inc
out
cmc
test
add
add
out
xor
sub
loope
mov
in
jae
push
repz
test
lcall
arpl
push
jne
and
outsl
loope
jmp
jae
xchg
xor
shrb
add
enter
in
shrl
push
out
xor
push
rolb
stos
pop
stos
xor
ds
jo
enter
icebp
faddl
xchg
sub
imul
fildll
imul
pusha
lods
xchg
out
push
and
or
test
or
iret
jns
adc
repz
pop
lahf
mov
cmp
cmp
and
mov
std
scas
test
push
cmpsb
mov
stc
jnp
push
sbb
mov
dec
pop
xor
clc
inc
test
ja
inc
mov
icebp
orb
xchg
or
lret
repnz
mov
mov
and
inc
sub
dec
sbb
xchg
add
jns
cmp
shrd
fwait
cmp
or
inc
push
xchg
cwtl
inc
mov
cmp
xor
xor
cmp
xchg
mov
mov
xor
mov
jnp
inc
adc
add
fcmovnbe
popf
add
xlat
xchg
movsb
push
mov
stos
push
jbe
rcrl
xchg
mov
stc
das
mov
jnp
xor
test
mov
push
ret
les
fldt
mov
inc
fcoms
addr16
or
cmp
push
ja
add
test
divb
cltd
popf
sbbl
arpl
push
jl
mov
int
mov
aaa
adc
xlat
and
repz
sbb
bound
xchg
jg
js
pop
cmp
enter
call
xchg
mov
xor
arpl
rcrl
dec
stos
cmp
mov
dec
sti
es
jbe
arpl
mov
xchg
rorl
dec
jmp
xchg
add
inc
inc
jmp
popa
jb
imul
leave
adc
cmp
cmc
push
xchg
aas
movsb
jmp
push
idiv
xchg
inc
std
jne
subl
out
int3
push
add
cli
xchg
js
lahf
cwtl
push
xchg
or
sub
sub
aad
xchg
lods
ds
shr
stc
ss
pop
dec
add
mov
std
add
push
sub
add
xor
movsl
mov
mov
in
mov
dec
int
fstl
push
rcrl
clc
mov
out
xor
jmp
pop
daa
adc
xchg
mov
inc
loopne
mov
psubw
out
in
inc
shrl
gs
in
dec
hlt
inc
std
xor
mov
leave
cwtl
dec
or
jae
xor
sub
pop
into
push
xchg
mov
cs
jbe
jle
pop
mov
fisubrs
cmp
push
pop
sub
adcl
push
into
scas
popf
push
ss
add
flds
push
xchg
jle
pusha
mov
xchg
pop
push
fildl
mov
leave
cs
mov
sti
sub
xchg
and
xor
sbb
mov
mov
mov
pop
rolb
lods
xlat
std
mov
pop
push
push
into
sahf
push
sub
and
or
xchg
xchg
arpl
es
scas
mov
pusha
dec
jbe
adc
scas
jae
inc
ja
mov
jns
add
imul
mov
jg
loop
adc
lea
mov
jne
mulb
or
inc
push
or
push
inc
cmpsb
jg
in
cmpb
pop
cwtl
jg
push
std
push
sarb
dec
mov
jb
add
cmp
rcrl
aam
xchg
push
arpl
sbb
idiv
mov
jno
ljmp
jg
push
mov
adc
push
ja
dec
xchg
push
lret
xlat
loop
mov
jno
test
jbe
sahf
xor
insl
push
gs
pop
and
mov
test
int3
mov
push
out
test
popf
es
inc
out
cmc
in
and
xor
push
inc
lcall
jge,pt
jae
jle
jmp
mov
and
frstor
aas
mov
jbe
sub
push
and
xor
sub
or
loope
jmp
aas
in
bnd
mov
and
rcrl
cmp
push
add
test
jb
mov
clc
leave
cmp
sbb
pop
cmc
ror
das
int3
aaa
dec
mov
scas
in
dec
dec
loop
lret
js
and
pop
das
out
pop
js
and
movsb
push
icebp
jo
imul
xchg
sbb
jecxz
push
les
jb
movsl
adc
cld
mov
mov
pop
inc
dec
fsubl
repz
fwait
xlat
or
mov
lcall
sbb
out
test
inc
adc
lock
mov
cltd
addr16
sub
xor
pop
mov
jne
cli
icebp
mov
lock
adc
arpl
and
test
outsb
fsubl
pop
jnp
sahf
xchg
scas
out
push
cltd
add
int
int
mul
mov
or
cltd
sti
sbb
cld
xor
scas
mov
sub
je
ljmp
sub
insl
xchg
js
push
movups
out
insl
push
xor
pop
adc
in
sub
and
adc
xchg
jbe
jne
mov
inc
pop
mov
inc
dec
ss
mov
add
add
or
push
mov
sbb
sti
or
and
sbb
cmp
inc
pop
addb
shll
xchg
andb
rcll
popa
movsb
ja
sub
push
inc
xchg
jmp
jg
ficomps
sub
jo
fmuls
cltd
test
and
sarl
add
inc
xor
pop
mov
jbe
and
jp
sbb
cmpsb
lcall
dec
push
mov
fs
test
push
push
push
cld
xchg
dec
and
outsl
inc
lret
das
fmul
xor
xor
stos
cs
int
fstpl
mov
inc
aad
cs
pop
jmp
idiv
gs
add
cmp
adc
pop
xchg
mov
dec
push
sub
pop
pop
pop
shll
shlb
push
insl
stc
fmuls
push
cwtl
mov
out
scas
mov
movsl
adc
movsl
inc
cltd
sbb
jp
xchg
sti
push
das
repz
scas
je
mov
idivl
int3
cmp
lahf
insb
xor
sbb
outsb
mov
fidivrs
cld
stc
out
scas
fsubrl
xchg
out
iret
subb
popf
mov
mov
test
ror
ss
mov
mov
mov
fsubs
arpl
negb
or
enter
xor
cmp
orl
pop
sbbb
int
subb
scas
cli
add
popf
mov
mov
ds
mov
pop
sub
cmp
scas
jns
lcall
sbb
cmp
or
cmc
and
pushl
aad
jns
push
addr16
orb
clc
rcrl
imull
in
jecxz
fs
pop
fsub
inc
fwait
mov
pop
mov
or
repz
loop
inc
jne
pop
or
xchg
scas
jne
jbe
sbb
dec
fimull
gs
or
pop
xchg
jp
mov
mov
fcomps
push
stos
loop
inc
add
xchg
cmp
jae
sbb
sbb
cmp
mov
inc
divb
pop
or
pop
and
je
loop
adc
cmp
jno
rcrb
xchg
xor
sti
ss
pop
faddl
jle
lods
xchg
std
ja
jns
xchg
ds
popf
aam
cld
stos
or
or
cld
imul
ret
movsb
mov
movsb
dec
xchg
cmp
cmpsb
sub
lret
dec
jne
sbb
sti
push
out
jns
popf
push
into
push
jbe
hlt
or
mov
fbld
cmp
inc
in
outsb
imulb
rcll
cmpsb
loopne
imul
sti
mov
sub
hlt
into
mov
bound
mov
outsl
mov
icebp
test
out
jae
dec
dec
cmp
cmp
cmp
mov
pushl
sub
scas
add
push
push
push
stos
pop
mov
pop
bound
in
ret
out
shlb
cmpsb
pop
add
popf
call
mov
loopne
push
lods
sub
cmc
jb
call
cmp
sbb
outsb
fs
dec
movzbl
mov
es
shrl
out
push
adc
pop
push
imul
sbb
mov
andl
mov
fdivl
pop
xchg
add
loopne
adc
push
inc
mov
cld
outsl
cmp
nop
mov
leave
sub
aad
out
imul
sti
aaa
fmull
mov
push
lods
adc
dec
cwtl
cltd
lcall
fsubp
jmp
dec
xchg
and
imul
popf
and
or
lock
mov
enter
push
xchg
pop
int
xor
sub
lcall
js
ljmp
sub
xchg
mov
cmp
push
scas
mov
das
addr16
sub
test
cli
sub
push
xchg
iret
xor
cmp
or
xchg
or
cmp
pushf
push
jb
and
fcoms
mov
outsl
int
repnz
popa
pop
push
cmp
sub
or
fiaddl
adc
jl
pop
inc
inc
mov
sub
adcl
adc
lahf
pcmpeqb
mov
call
mov
stos
mov
inc
rcl
dec
fiadds
jge
push
packssdw
aaa
dec
sub
daa
xchg
or
ds
push
mov
push
adcb
push
fchs
out
scas
dec
mov
bnd
add
movsl
scas
int
jno
mulb
or
mov
jp
or
add
mov
xchg
xchg
imul
js
lahf
lea
cs
cmp
repnz
fistpll
lahf
mov
mov
rcll
mov
sub
push
fwait
clc
fcmovne
mov
and
push
out
add
mov
out
cmc
fdivs
mov
jno
movups
or
das
xor
jp
popa
adc
pop
mov
cmp
cmp
stos
xchg
cmc
lcall
mov
inc
loop
movl
sbb
add
scas
xchg
mov
insb
xor
hlt
sbb
and
ret
daa
pop
cwtl
adc
xor
add
mov
mov
popf
jge
stos
popf
cs
iret
imull
movsl
in
loope
in
jnp
mov
nop
mov
cmp
stos
pop
fs
mov
decb
test
cmp
pop
sbb
inc
frstor
lds
dec
stc
jecxz
pop
and
mov
in
push
mov
and
fiadds
adc
in
xlat
test
sarl
insb
or
or
mov
inc
test
cmp
xchg
sub
cmp
sbb
loopne
cli
ja
adc
out
inc
int3
arpl
pop
fdivl
pop
rcrb
int
in
cld
fsubr
lock
inc
adc
test
cmpsb
xchg
rorl
pop
or
jg
pop
pop
and
sarl
mov
loopne
adc
pop
inc
lahf
xchg
pop
push
adc
cmp
sbb
js
add
jo
pop
sbb
cwtl
fnstcw
jo
push
xlat
cmp
out
orl
test
adc
loop
jno
mov
aad
mull
in
and
js
mov
adc
mov
mov
or
pusha
pushf
cs
in
repnz
jecxz
cmpsb
out
ljmp
in
fldcw
int3
jecxz
orl
js
sub
sbb
mov
stos
pusha
sbb
mov
imul
sti
imul
xchg
int
mul
aam
mov
jae
rclb
cltd
xchg
inc
imul
or
loop
insb
iret
adc
adc
ljmp
or
imul
sbb
inc
xor
cmp
xchg
das
or
mov
daa
loop
cmc
mov
les
pusha
ss
mov
add
cld
and
pop
clc
mov
mov
inc
iret
movsl
xorb
cmpsl
pop
je
insl
aas
mov
push
jnp
or
sbb
or
pusha
jle
xchg
ds
inc
mov
xchg
xchg
push
shrb
jne
movsl
je
push
xchg
decb
fmull
mov
xchg
fimuls
out
rcrb
rcl
mov
push
fildll
add
mov
jp
fdivl
fistps
ret
insb
call
xchg
movsb
xchg
fsubr
inc
cmp
scas
dec
popa
xchg
faddl
and
or
pushf
inc
pop
xchg
fwait
data16
adc
repz
cmpsb
int3
mov
mov
xchg
jne
cmc
negl
lret
cltd
or
stos
xchg
cmpsl
inc
sub
mov
adc
cmc
sbb
push
push
push
out
xchg
push
mov
inc
mov
out
adc
jae
movsl
mov
xchg
adc
es
cltd
adc
xchg
movsb
ficompl
outsb
adc
mov
jno
stc
data16
adc
sbb
into
mov
stos
mov
jae
orb
or
aam
adc
pop
jecxz
lock
ficoml
fsubrl
ret
lret
adc
add
orl
xchg
inc
stos
adc
mov
std
or
pusha
out
addr16
testl
xchg
int
sbb
lret
dec
in
push
outsl
mov
pop
sbb
jp
inc
aam
and
movsl
mov
xchg
push
subb
stos
xor
fsubs
bound
sbb
pop
adc
lods
pop
jmp
xchg
shll
in
sub
mov
out
mov
in
pop
add
fdivrp
lods
jle
scas
sub
movsb
add
mov
inc
push
jo
fcmovu
int
stos
ret
sbbb
aam
inc
sub
sbb
add
and
fs
pop
repz
in
or
pop
mov
outsl
out
movsl
out
cmp
or
clc
add
ja
inc
pop
jecxz
add
mov
test
or
xor
aaa
or
xchg
test
jno
cmp
je
stc
fs
and
push
stc
dec
in
iret
ret
sbb
cs
sti
push
fcmovnu
and
repnz
cltd
mov
icebp
jmp
xchg
dec
push
jle
jg
pop
mov
jle
mov
inc
sbb
dec
sbb
push
push
ljmp
es
push
cltd
inc
xchg
jo
adc
inc
enter
cmp
aaa
or
mov
push
pop
lods
fwait
push
and
aaa
add
sbb
aaa
in
mov
popa
xor
jge
push
loope
aas
aam
mov
shrb
push
inc
ficoms
das
or
into
insb
pop
mov
inc
xor
inc
xchg
dec
fists
jb
mov
rclb
mov
adc
mov
repz
adc
jmp
mov
xchg
lcall
push
push
push
xchg
xchg
sub
lock
nop
sbb
jmp
and
inc
js
jmp
push
cli
pusha
pop
sbb
hlt
pop
add
jmp
add
rcrb
sbb
lret
mov
and
or
mov
lcall
out
mov
mov
xor
sub
test
mov
or
push
cmp
repz
jbe
in
mov
add
xchg
je
outsb
bound
or
imul
cmp
and
cltd
pushf
insb
jb
jl
add
loopne
rclb
ss
shrb
jns
in
add
out
lods
test
dec
jns
outsl
cli
xchg
cmp
sbb
and
cmp
call
mov
nop
cwtl
jp
rorb
cmp
lahf
in
jp
mov
xchg
ret
inc
cli
shl
icebp
loopne,pn
cmp
cmp
mov
xchg
push
inc
push
aad
dec
mov
pusha
xchg
push
cmp
pop
cmp
in
sbb
stc
pop
adc
test
shrb
fwait
or
cld
adc
or
xchg
mov
inc
lds
dec
insb
test
and
in
pop
add
mov
scas
mov
add
xchg
lcall
xchg
sub
adc
movl
fs
push
mov
lock
fwait
mov
dec
xchg
rclb
jg
das
jl
xchg
daa
sbb
mov
hlt
fstpl
sbb
mov
fldenv
dec
repz
push
sbb
subb
inc
adc
insl
add
sbb
push
in
jmp
int3
xchg
sub
lds
mov
imul
push
adcl
imul
in
dec
dec
inc
push
jne
and
pop
pop
fs
cmp
ljmp
mov
and
xor
scas
int3
in
mov
sbb
stc
movsl
sub
mov
test
lcall
cmp
inc
loop
and
lret
adc
xchg
jne
mov
iret
fists
dec
out
push
das
mov
mov
loop
jae
push
pushf
dec
aaa
bnd
dec
dec
jae
inc
push
shlb
mov
ret
mov
jl
pop
fmulp
pop
nop
cmpsb
mov
jle
sub
mov
movsb
repnz
sub
dec
mov
jg
push
clc
aad
dec
lea
outsl
sub
data16
outsl
push
bound
jl
das
push
push
popf
pushf
jp
leave
inc
push
inc
xchg
or
sub
push
negl
insb
cwtl
sbb
cltd
stc
xor
sbb
cmp
or
aad
gs
or
popf
mov
sbb
jle
or
jmp
mov
hlt
in
rorl
adc
popf
add
pushaw
inc
jae
data16
sahf
andnps
sbb
arpl
mov
dec
add
cmp
cmpsl
dec
adcb
subb
in
mov
nop
into
and
jge
xlat
add
mov
cmpsl
xor
addr16
cpuid
fwait
dec
sub
push
out
cmp
scas
gs
add
mov
bound
dec
in
mov
or
pop
cmp
pop
xchg
mov
pop
mov
mov
test
push
je
pop
sub
xor
loope
xchg
out
testl
add
pop
sti
sti
jg
add
lcall
push
scas
lret
into
iret
jp
cmp
mov
xchg
pop
test
das
int3
lds
pop
mov
inc
sbb
imul
xchg
movsl
push
add
jbe
lret
fdivrl
mov
adc
test
jno
mov
mov
fisubrs
sub
and
daa
xchg
mov
push
cmp
out
out
scas
mov
test
scas
popa
icebp
mov
js
fnstsw
rcrb
std
adc
pop
mov
push
sub
jb
out
aas
or
bound
repz
in
inc
dec
hlt
pop
shrl
aam
jg
mov
out
cmp
mov
jmp
cmp
fisubl
add
lods
mov
and
jp
pop
cltd
insl
fdivr
in
js
or
cs
outsl
jb
imul
push
cmp
cwtl
cmp
dec
jno
outsb
popa
mov
mov
icebp
ds
add
es
mov
stos
mov
xchg
push
shll
ss
fwait
mov
dec
out
jns
sbb
ljmp
mov
movsl
mov
push
rcrb
loopne
jecxz
sbb
cmp
and
enter
push
ret
cmp
cli
mov
insl
adc
pop
ficoms
int
ja
dec
mov
les
dec
in
repz
leave
test
loope
sub
jbe
in
add
lcall
out
inc
jno
jne
scas
xchg
mov
js
fdivp
fldl
sub
jmp
jp
pop
ljmp
cs
mov
push
mov
mov
outsb
mov
push
or
out
sub
cli
or
mov
and
fldl
and
jbe
insb
jp
xchg
xor
icebp
sub
dec
cmpsl
popf
dec
xchg
pop
xor
mov
fistpll
bound
enter
jb
das
xor
imul
imul
or
andl
ss
rcrb
lahf
insb
xchg
or
mov
sub
push
js
jecxz
adc
push
or
cs
popf
jo
dec
xor
and
pop
stc
dec
insb
jg
nop
rclb
int
mov
divb
pop
mov
stc
xor
fidivs
dec
add
jge
aas
jecxz
adc
or
mov
mov
jne
mov
pop
jecxz
mov
lret
xchg
cltd
mov
das
inc
mov
or
cli
and
jmp
pushf
jb
fs
jle
jge,pn
cmp
jmp
lcall
xchg
dec
adc
rcl
pop
ds
jg
nop
std
in
jbe
mov
mov
mov
jno
jle
jns
push
pop
cwtl
das
mov
xor
std
ds
lret
pop
mov
fdivl
or
pop
insb
push
cmp
push
pop
push
movups
xchg
xor
pop
fbstp
inc
pop
xchg
pop
cmp
add
mov
lahf
cmp
lea
xchg
mov
cs
fidivl
mov
test
cmp
jg
jge
lcall
in
mov
xchg
scas
push
in
call
sbb
leave
loopne
mov
push
js
push
cwtl
or
sbb
or
dec
arpl
cwtl
in
je
or
xchg
mov
enter
jns
xor
inc
cmp
js
add
sbb
and
jbe
cmc
bound
dec
cmp
rorb
xchg
push
xchg
cld
mov
int3
shll
stos
mov
mov
sbb
dec
cmp
jb
adc
ret
add
xchg
decl
inc
jg
adc
mov
lds
outsb
daa
xchg
mov
sub
mov
and
or
in
xor
aas
cmp
cli
pop
in
dec
loop
arpl
fwait
add
stos
ret
in
test
xor
cmc
mov
xor
lcall
lods
sti
push
fdiv
outsb
push
mov
xor
inc
cmpsl
pop
shlb
fwait
test
dec
add
test
mov
aas
dec
lock
add
fcoms
cmp
lock
mov
and
dec
adc
and
gs
imul
xchg
aam
cmp
xor
jp
mov
xchg
pop
jne
mov
loop
loop
cmpl
imul
xchg
jnp
shl
mull
or
out
xchg
jl
push
in
stos
daa
leave
incl
xor
jbe
jo
pop
test
fidivrs
mov
cwtl
inc
aad
ffreep
cmp
mov
and
inc
inc
xchg
or
das
mov
adc
mov
les
rorb
mov
fsubp
add
push
loope
push
or
mov
in
adc
push
push
data16
fs
outsb
loope
sub
shrb
iretw
and
iret
fwait
mov
int3
mov
repnz
cmpl
cmp
or
xor
sub
sbb
gs
mov
push
cwtl
fiadds
cmp
adc
adc
sub
int
iret
fisttpl
stos
jnp
inc
rolb
push
lcall
push
sti
stos
mov
shlb
and
jp
pushf
and
xor
movsl
and
sub
pushl
xor
movsl
mov
xchg
jp
xorl
or
in
push
fisubrl
push
insb
or
fistps
jecxz
sub
mov
rcrb
pop
mov
lock
fbstp
pusha
or
dec
mov
sub
mov
sbb
mov
mov
jle
pop
cltd
cmp
iret
test
fsubrl
std
arpl
mov
push
sbb
mov
dec
incb
sub
out
cmp
inc
mov
mov
pop
cmp
pop
int3
or
add
xchg
pop
push
add
add
jb
and
in
ficoml
mov
mov
fs
cmp
jmp
sbb
or
sub
pushf
rcrb
add
rcrl
icebp
sub
inc
add
dec
cmp
divb
xchg
clc
dec
mov
test
xchg
cltd
or
ds
lret
lock
jo
mov
mov
out
jmp
and
xchg
mov
or
mov
xchg
into
stc
cmp
xchg
pop
fwait
pusha
cmp
ret
and
cli
stos
adc
add
pop
sub
xchg
lret
outsl
dec
mov
or
lea
inc
sbb
lahf
dec
add
cmp
xor
loopne
mov
inc
cmp
pop
ret
jl
adc
xor
and
enter
push
inc
jo
roll
notb
jae
xor
adc
mov
test
sti
mov
ja
cmp
rcll
rolb
mov
and
nop
mov
jns
mov
fadds
jb
ret
jmp
push
xchg
push
mov
lea
out
adc
adc
xlat
pop
or
imul
outsl
sti
cmp
jp
push
or
or
sbb
jb
jo
add
add
arpl
sbb
adc
dec
enter
js
fsubl
push
lahf
mov
jne
inc
and
mov
mov
mov
pop
inc
das
scas
pop
jae
test
adc
cmp
pusha
jnp
pushf
das
add
mov
dec
xor
lahf
pop
pop
xor
in
div
popa
insl
mov
sahf
mov
add
push
pop
or
ret
subl
inc
add
mov
push
jmp
sbb
mov
pop
push
negb
push
jne
xor
pop
adc
pop
jle
je,pn
lods
shlb
setne
add
sbb
lods
pop
test
lock
inc
mov
adc
xor
cmp
fs
dec
cmp
out
fisttpl
aad
test
dec
out
xor
pusha
push
pop
outsb
cmp
cmp
int
mov
xchg
shlb
xor
adc
shll
pop
add
mov
dec
popa
decb
sbb
mov
fcomps
imul
lods
mov
inc
xchg
and
pop
xor
loope
in
xor
sbb
imul
std
fdivl
and
xor
and
mov
dec
inc
ja
push
loopne
pushf
push
test
test
adc
sahf
stos
xlat
leave
cs
jo
ret
les
sub
push
incb
pop
inc
sarb
lods
mov
mov
mov
push
inc
adc
call
mov
push
lods
cli
aas
xchg
insb
dec
cltd
aad
push
shr
cmc
pop
repz
mov
push
xchg
or
jmp
in
cwtl
pop
scas
lods
idivl
dec
jecxz
inc
leave
jecxz
nop
test
aaa
imull
xchg
or
cmp
add
push
ljmp
add
xor
dec
loopne
xor
insl
loopne
testl
push
test
cmp
pop
or
mov
xor
mov
xor
push
shll
adc
cmpsb
in
mov
add
mov
xchg
jns
ja
fisttps
out
jo
add
adc
xchg
jnp
dec
inc
rorl
xchg
jb
xchg
testb
dec
mov
mov
or
lods
fstpl
or
xchg
icebp
psubq
out
repz
cmp
dec
lcall
leave
fbld
sbb
loopne
in
subb
popa
rcrb
fdivr
shlb
and
mov
xor
iret
fsubrp
stc
mov
ja
cmp
xor
or
jle
fsubrl
rcrb
or
lods
xchg
mov
call
adc
push
jge
rcrb
xor
add
scas
in
mov
pop
ret
jno
dec
cli
in
lcall
inc
cmpsb
dec
mov
call
imul
mov
xlat
pop
push
and
mov
cmpsl
out
imul
sbb
cmc
and
scas
adcb
xor
daa
mov
push
and
jmp
in
or
daa
dec
out
add
sti
rol
inc
out
xchg
add
push
cmpsb
rcrb
out
popf
ret
faddl
inc
addl
lahf
pop
loop
cmp
pop
mov
xor
mov
into
mov
or
rcrl
adc
sbb
addb
popf
std
es
mov
sbb
mov
pop
negl
xchg
pop
mov
push
add
shll
adc
xchg
xchg
pop
outsl
into
push
fwait
jecxz
push
addr16
push
push
add
clc
cmpsl
mov
loope
mov
scas
xor
and
sbb
sbb
mov
sub
test
loope
xor
xor
fdiv
push
imul
xor
loopne
lods
cmpsl
push
sub
push
jmp
xorl
lret
push
ljmp
stos
inc
or
pop
pop
test
and
fwait
push
add
gs
mov
arpl
pop
mov
or
popf
adc
sub
pop
pop
lahf
push
jne
add
jae
jne
pop
push
divl
jge
inc
inc
add
cmpsb
js
out
sbb
mov
pusha
stos
push
pop
push
mov
sbb
shll
inc
ljmp
mov
jp
loop
dec
mov
mov
or
hlt
push
out
adc
int
outsb
stos
xchg
mov
jae
sbbl
or
test
xchg
mov
push
outsb
dec
mov
push
mov
mov
aam
shl
stc
inc
call
cmpsb
lock
inc
in
es
mov
or
push
sbb
shl
jle
popf
std
sahf
inc
pop
mov
int
mov
les
fistl
sub
jle
jbe
jae
fimuls
fnsave
ds
xlat
leave
sbbb
lret
xchg
mov
fmul
stos
ss
cmp
cli
xor
ss
out
xchg
xchg
mov
xchg
aas
ja
fs
das
push
cmp
es
mov
jge
mov
mov
ret
mov
pop
jmp
iret
sub
xchg
data16
cmp
idiv
rcll
das
ja
push
lods
repnz
jecxz
lret
xchg
subb
cwtl
fsub
lds
mov
or
rclb
arpl
lods
and
rolb
daa
fiaddl
pop
ret
adc
stc
shlb
lods
test
cmc
movsl
and
jb
push
mov
pop
cmp
andl
jnp
dec
out
cmc
add
pop
lds
stos
clc
cmp
movsl
movsb
xchg
js
lods
lods
daa
and
pop
jb
or
cmp
jns
fs
push
inc
fistl
sbb
inc
in
cmpsb
jae
icebp
sbb
push
loop
out
xchg
sub
push
cld
xchg
cmp
movsw
and
mov
xchg
dec
inc
scas
sub
movsl
into
dec
pop
cmp
in
dec
mov
mov
inc
cmp
test
les
xchg
push
fildll
in
push
xchg
sub
inc
push
adc
int3
mov
cld
xchg
mov
inc
push
cli
sbbl
pop
pop
dec
mov
inc
xchg
and
jae
adc
inc
xchg
addr16
lret
jle
push
pop
jp
mov
in
add
outsb
popa
adc
add
push
jmp
rclb
cmp
lcall
xchg
pop
inc
xor
and
negb
inc
push
push
adcb
lcall
sbb
mov
add
push
jg
ljmp
jne
push
or
scas
jb
pop
cmp
pusha
inc
cmp
fisttps
jo
rcr
stos
nop
negb
cmp
in
jle
or
mull
fwait
popf
loope
fbld
je
call
out
add
in
or
subl
sbbb
pop
cmp
sbbl
cmp
xchg
fcmove
cmpsl
and
arpl
push
testb
notb
jle
add
xor
stos
sub
adc
stos
insl
mov
cmp
aam
lods
push
mov
xor
mov
in
rcrb
pop
sahf
cmp
ljmp
int
fucomip
add
add
xor
mov
jg
or
inc
push
cmc
mov
or
mov
jno
icebp
cmc
or
lcall
call
jnp
sub
xchg
adc
stos
mull
lock
inc
lret
xchg
ror
arpl
sub
pop
bnd
call
addr16
test
aam
cmp
mov
mov
loope
sbb
arpl
and
dec
idivb
aad
test
mov
fadds
aaa
mov
jo
sbb
fs
and
dec
inc
inc
push
xor
les
pop
cmp
push
mov
roll
les
mov
mov
pushf
inc
or
adc
sbb
sti
or
xor
inc
push
test
movsl
bound
stc
sahf
aaa
shlb
pop
or
mov
or
dec
test
sbb
dec
scas
enter
and
dec
subl
add
scas
xchg
cmp
mov
fwait
arpl
hlt
ror
jo
lret
and
out
cmpsb
int
xchg
shr
cmp
fwait
jp
jle
mov
xor
movsb
std
pop
outsl
mov
inc
inc
popf
lret
cmc
lock
inc
fistpl
push
mov
sbb
jae
adc
cmp
pop
rcll
dec
jb
ret
int3
ficompl
popl
sbb
in
sbb
pop
pop
add
out
pusha
pop
xchg
bound
or
xchg
xor
je
mov
push
or
negb
arpl
xchg
adc
scas
repz
xlat
test
lret
jle
outsl
insl
and
cmp
push
fidivs
jo
sbb
test
in
or
cmp
cmp
pop
imul
adc
inc
adc
test
jbe
sbb
test
inc
inc
sbb
sbb
pop
cmp
rorl
cwtl
add
xchg
adc
in
mov
lock
sahf
insl
xor
fsubs
mov
dec
jae
loopne
sti
jp
repnz
xor
decb
jnp
xorb
add
pop
xchg
je
inc
insl
or
ror
aaa
stos
fmuls
pop
mov
dec
divl
cmpb
fs
ja
call
xor
out
xlat
out
xor
xor
imul
loopne
or
cmp
cmp
xchg
in
inc
inc
stos
mov
push
jle
fisubrl
pop
ljmp
pop
ucomiss
dec
aas
add
mov
xchg
cwtl
cmpl
fcoml
clc
les
idiv
rcrb
and
cmpsb
adc
into
mov
mov
lret
sbb
dec
xchg
movsb
push
or
movsl
out
inc
push
add
mov
mov
das
pop
cmpsb
jge
mov
xchg
cmp
cmp
lock
in
inc
out
decb
shrl
insl
loop
push
mov
fs
fbstp
and
xchg
and
pop
mov
pushf
cs
push
arpl
sbb
pop
add
fsubrs
movsb
mov
out
inc
inc
xchg
sbb
xor
loopne
mov
cld
movsl
popa
and
ljmp
mov
popl
pop
nop
iret
jp
dec
std
fisubs
daa
fnstenv
gs
leave
pop
adcl
jne
mov
int3
xchg
xchg
js
mov
pop
adc
dec
pop
jno
inc
arpl
and
pop
pop
lock
jno
mov
cmp
jae
add
mov
lcall
or
pop
cmp
shlb
inc
shlb
sbb
xchg
std
test
enter
push
lcall
mov
xchg
andl
push
into
insl
mov
xor
pop
jmp
shrl
out
push
add
les
stos
xchg
mov
mov
lret
aad
mov
add
add
jno
xchg
dec
jne
and
or
std
push
std
iret
cmp
jg
jnp
mov
in
or
push
xchg
pop
adc
adc
sbb
add
or
cmc
lret
cmp
sub
jecxz
ljmp
mov
sbb
mov
incl
dec
jmp
jp
sbb
call
jo
ds
mov
add
mov
mov
sarl
xchg
sti
xchg
lret
adc
inc
mov
clc
pop
jb
mov
shll
lret
filds
lret
test
ds
inc
jo
mov
inc
xchg
jbe
aas
call
mov
sbb
repnz
dec
push
jmp
fs
cltd
outsb
push
mov
cmpsl
adc
ret
faddp
inc
in
ret
int3
in
in
mov
sub
add
out
outsl
nop
jecxz
dec
jg
aaa
sbb
lods
scas
scas
push
outsb
test
lods
fwait
xchg
sub
cmp
cmc
cmpsb
out
stc
push
sub
sbbl
mov
negb
sbb
stc
add
xchg
fs
rol
inc
inc
sub
fsubs
pop
out
ret
fstps
ss
inc
add
or
pop
or
insb
pop
or
pop
mov
mov
mov
sbb
cs
pop
das
mov
sub
clc
out
jno
push
jmp
shll
ds
fstps
dec
inc
add
idivl
arpl
in
dec
ret
jbe
mov
aaa
jl
sub
add
jae
sbb
popf
std
sbb
insb
add
in
outsl
xchg
push
sbb
mov
inc
jle
stc
shl
push
adc
les
inc
icebp
sub
fstpt
cmp
popa
repz
stos
cmp
pop
iret
sub
xor
dec
mov
sbb
pop
fdivr
out
scas
into
push
cli
mov
mov
mov
add
into
cmp
fstps
sarl
outsb
push
subl
fs
lret
addr16
aaa
stc
jecxz
and
testl
cmp
out
push
stc
lea
mov
jg
in
sub
outsb
mov
cld
and
les
mov
lret
dec
xchg
lds
dec
ds
and
movb
jbe
rcll
sub
adc
inc
jns
repnz
stos
jge
pushf
mov
mov
stos
out
sbb
jg
subb
pusha
in
sbb
xchg
aaa
mov
xchg
and
aas
in
mov
or
pop
idivb
lcall
and
insb
out
mov
mov
rorb
sub
mov
push
add
mov
pop
stos
fnstcw
mov
testb
push
test
mov
jb
xchg
add
adc
push
mov
sahf
es
inc
rclb
movsb
mov
pop
outsl
or
add
dec
and
jns
repz
cmp
mov
sbb
je
and
and
lcall
jbe
push
test
mov
fstpt
xor
pop
mov
ret
test
jbe
sahf
test
ret
stos
jecxz
cltd
push
cmpsl
scas
and
or
or
pop
jg
sbb
push
out
dec
mov
mov
sub
jle
or
shll
int3
insl
lcall
pushf
jne
ss
pop
scas
jge
jmp
inc
enter
mov
cmpsl
pusha
jb
inc
aas
push
cwtl
stc
jnp
cltd
mov
loopne
or
jb
mov
xchg
iret
lret
int
andb
cmp
xor
arpl
add
lds
or
mov
lds
sub
test
scas
popf
inc
cmc
mov
negl
bound
repz
loope
xchg
and
lds
popf
rorl
add
sbb
inc
inc
pop
idivb
xor
call
xor
lock
inc
jle
mov
mov
leave
mov
xor
ja
adc
xchg
jg
mov
pop
mov
cmp
mov
mov
and
mov
icebp
pop
imul
push
fiadds
jb
pop
adc
sub
push
std
sti
add
movsl
stos
push
into
adc
cmp
pop
adc
cmp
loopne
mov
jp
jle
shlb
mov
outsb
movsl
mov
mov
scas
pushf
andb
mov
adc
inc
es
pushf
call
mov
in
cli
data16
fldt
xchg
into
jp
pop
jbe
add
mov
xchg
or
pop
popf
sbb
stos
xor
cmpsl
imul
repz
mov
js
sub
iret
aad
jb
in
mov
lea
outsl
mov
sub
xor
lahf
push
push
push
cltd
addr16
mov
dec
insb
pop
subl
mov
lods
xor
fistpll
or
jbe
and
mov
pusha
jl
push
lods
or
cltd
fadds
or
gs
es
pop
loop
into
repnz
adc
loope
lods
sbb
enter
ret
adc
div
sub
sbb
dec
add
mov
ja
adc
loope
push
js
xlat
sub
loopne
ljmp
mov
insl
xchg
mov
fucomi
ficoms
pop
cmp
repnz
mov
mov
ja
dec
loop
imul
push
jle
inc
insb
mov
jno
pop
call
jmp
xchg
in
ss
into
sub
xchg
sbb
loopne
fwait
sbb
ds
push
lock
scas
mov
or
and
dec
mov
frstor
out
icebp
sub
sub
push
sub
ja
into
scas
push
mov
roll
mov
sbb
aaa
fstpt
in
xchg
lret
mov
dec
inc
iret
mov
les
pop
mov
push
xor
call
add
sti
mov
js
fisubrl
les
aam
cmp
test
push
jle
inc
int
cmpsb
movsl
jne
dec
and
pop
ret
pop
int3
push
subb
mov
cltd
nop
mov
cmp
sub
insl
sbb
xlat
aam
mul
sub
dec
adc
cmp
dec
lods
xchg
into
sahf
fs
mov
fsubrs
call
xchg
movsb
sbb
daa
imul
leave
jno
stos
mov
cmc
adc
jge
stc
inc
inc
out
and
movsl
jbe
cmpl
daa
aad
bound
jg
arpl
push
fstpl
daa
cmp
mov
aam
je
xchg
jg
mov
xchg
mov
push
jecxz
lret
mov
stos
sbb
clc
cwtl
cli
push
pop
jg
cmp
ret
adc
jmp
pushf
arpl
enter
xchg
in
cmp
iret
add
out
xor
jecxz
lret
mov
pop
cmp
lcall
sub
jb
dec
pop
mov
andb
sarb
sbb
jo
insb
in
shll
lods
insl
repz
daa
std
shr
adc
lods
sbbb
rol
aam
out
inc
and
ret
inc
stos
mov
leave
mov
mov
jge
popa
ror
cmp
mov
lahf
out
out
sbb
loopne
popl
sbb
xchg
cmc
sbb
jns
gs
rcll
icebp
in
or
cmpsl
pop
jb
dec
add
cwtl
mov
and
push
xor
cmp
xchg
sbb
ficomps
pop
add
sub
notl
sub
test
pop
or
push
dec
and
sbb
or
icebp
cmp
mov
jae
cmc
or
pushf
jmp
push
ss
loopnew
loop
jg
mov
enter
or
sub
dec
cmp
push
aaa
in
or
popa
xchg
in
loopne
inc
call
hlt
and
into
cld
sub
cmp
inc
dec
jl
or
enter
adc
sbb
mov
push
stos
sbb
rcrl
jne
mov
in
dec
sbb
and
pusha
xchg
xor
rcrb
jecxz
int3
sbb
dec
test
mov
dec
shlb
jb
sbbb
mov
out
add
push
addb
sub
sub
mov
sbb
sarb
mov
je
jmp
test
sahf
ljmp
data16
sti
inc
mov
and
push
cmp
outsb
in
lcall
mov
movsl
jmp
inc
sbb
sub
call
test
repnz
sbbl
sbb
push
mov
mov
mov
fldenv
lahf
mov
mov
mov
daa
jae
adcb
negb
rcl
xchg
mov
hlt
pop
enter
insl
test
xchg
fstl
mov
loope
and
cmp
cmp
mov
xchg
xor
out
lahf
mov
push
adc
and
mov
lods
inc
fdivs
mov
dec
stos
mov
mov
lock
inc
jnp
enter
clc
sub
cmp
ds
scas
mov
in
cli
or
test
sbb
push
out
mov
mov
scas
cmp
repz
xor
punpckhwd
pop
cmp
mov
and
call
and
cmp
gs
mov
mov
inc
daa
mov
mov
cmp
insb
lcall
aas
jmp
frstor
add
inc
sarl
jbe
in
and
pop
leave
jno
push
mov
inc
pop
std
dec
pop
hlt
xor
jge
xchg
and
and
repz
in
loopne
mov
jno
lods
push
inc
sub
pop
insl
popf
cmp
decl
push
addr16
adc
inc
and
push
inc
sub
add
inc
dec
loope
cli
xor
xchg
jne
test
cld
movsl
or
test
push
cmpsb
dec
sbb
stc
jnp
mov
cmp
loopne
decl
fsubrl
lods
pop
insl
int
dec
stos
aad
xchg
loop
and
fmul
outsb
jne
push
inc
cmp
cmp
xor
push
ja
mov
ret
sub
sub
mov
push
clc
mov
xchg
push
ret
and
sbb
pop
dec
xchg
pusha
lods
sub
insb
or
mov
pop
aaa
lods
mov
cwtl
cmp
sarl
imul
dec
jge
movntq
out
mov
inc
adc
cmp
mov
adc
dec
daa
and
loope
aas
and
adc
cmp
xor
jle
xchg
es
pop
icebp
cmpsb
icebp
das
movl
movsb
dec
pop
push
mov
jne
lds
xor
mov
in
jmp
leave
xchg
lods
pushf
stos
xchg
idivb
out
adc
jp
movsb
pop
jbe
cmp
in
push
andl
pop
mov
and
cmp
mov
or
mov
stc
arpl
popw
mov
shl
pop
xor
or
stos
and
leave
lock
enter
pop
mov
mov
repnz
je
add
aas
xor
out
cmp
test
xor
add
mov
pop
int3
pop
leave
mov
lret
pusha
pop
outsb
xchg
addr16
xor
rcll
lock
dec
xchg
loope
scas
mov
ret
popf
push
and
aaa
sbb
mov
and
aad
fildl
fstl
mov
in
push
mov
stc
cmp
push
push
xor
stos
icebp
fsubrs
push
incl
and
mov
fcmove
add
je
mov
sub
ret
call
jecxz
lret
ds
sbb
dec
xchg
mov
cmp
mov
rorl
popa
pushf
in
mov
add
sbbb
je
xchg
leave
scas
sbb
inc
pop
test
sub
jl
insb
sub
movsb
mov
mov
out
test
fs
xchg
jp
popf
aam
subl
das
rol
ret
jle
or
std
repnz
jecxz
push
into
loop
addr16
xor
js
pop
stos
in
jge
and
ja
xchg
cli
adc
into
in
sub
pop
jl
and
inc
adc
aaa
popa
mov
mov
xchg
and
xor
push
addr16
pop
sbb
iret
pop
clc
rclb
pusha
scas
int
std
or
sbb
inc
pop
mov
xor
mov
in
or
cmpsl
mov
and
pop
push
mov
inc
in
rcrl
dec
jbe
lock
xor
ficoml
xchg
rcrb
test
xchg
mov
cs
push
shlb
lahf
scas
cmp
cwtl
xchg
or
inc
and
andb
out
nop
fwait
mov
lahf
mov
or
call
mov
mov
out
sahf
xchg
dec
pop
stos
pop
dec
push
mov
sbb
inc
cltd
pop
add
mov
scas
lahf
popf
daa
jns
and
sub
sbb
mov
dec
insl
sub
mov
pop
ficomps
je
or
and
jno
push
mov
xlat
or
stos
lods
xor
pop
push
push
jbe
dec
xchg
jne
in
imul
push
add
clc
dec
add
hlt
dec
int
cmpl
in
arpl
sbb
xlat
sub
pushf
pop
ds
mov
mov
out
lahf
push
pop
stc
jmp
ja
arpl
sahf
mov
pop
adc
mov
test
cs
insl
out
ds
popf
xor
rorb
inc
fmulp
loopne
cmc
insl
imul
test
mov
lock
ja
inc
jecxz
sub
loope
gs
sbb
lcall
push
dec
push
mov
dec
mov
adc
es
xchg
imull
jo
movsl
out
cltd
inc
adc
xchg
or
out
mov
into
repz
push
repnz
loope
pusha
or
inc
scas
and
mov
data16
call
add
icebp
pop
push
and
aam
cltd
pop
jns
dec
imul
mov
mov
cmp
shl
ja
xor
adcl
ret
mov
in
lods
mov
testb
xchg
test
fildll
jmp
dec
adc
add
sub
in
cmp
dec
insl
xchg
out
loope
and
mov
lret
fbstp
repnz
or
fimull
lahf
mov
xchg
cmp
repz
sub
add
mov
repnz
cmp
mov
dec
xor
mov
aaa
xchg
and
jb
outsb
lcall
mov
inc
mov
data16
hlt
dec
js
sahf
std
in
mov
mov
xchg
mov
shl
pop
jno
std
movsl
add
mov
repz
mov
inc
sub
xor
push
push
xchg
or
and
add
cmp
mov
push
dec
jne
mov
outsb
dec
jge
push
adc
fcomp
mov
lods
and
cli
dec
xchg
jmp
das
sub
aam
mov
aas
xchg
sarl
adcl
add
and
mov
fildl
or
test
cmp
jns
xchg
fstl
out
pop
in
cmpsl
mov
loop
js
add
icebp
mov
sbb
ret
fdiv
sub
dec
leave
hlt
inc
das
xor
adc
repz
jne
clc
loop
adc
negl
mov
xchg
and
lret
xor
into
aaa
sbb
mov
lock
leave
mov
jge
adc
mov
jno
or
xchg
xchg
mov
xor
call
mov
and
out
pop
adc
dec
or
xchg
lcall
mov
push
jecxz
xlat
mov
fisttpll
mov
dec
pop
xchg
lock
es
jns
push
lret
adc
dec
fldl
mov
dec
pop
xchg
aad
mov
imul
dec
sub
inc
in
fidivrl
dec
jnp
outsb
fstpt
and
pop
leave
mov
push
mov
xor
dec
insb
pop
pushl
incb
aas
imul
inc
inc
adc
rorl
mov
data16
cmpsb
data16
mov
test
cmp
idivb
sti
push
mov
lock
clc
xor
scas
or
ret
mov
mov
fldt
cmp
mov
out
cmp
push
popa
inc
jg
es
fwait
mov
xchg
inc
shll
fisttpll
pop
aas
or
jle
cmc
loope
push
imulb
push
ret
push
loopne
sbb
cmpsb
mov
pushf
pop
cld
test
loop
xchg
cwtl
nop
inc
ret
adc
int3
fstpl
ret
mov
in
sub
sbb
call
mov
fimull
xchg
int3
mov
jg
inc
insl
sbb
sbb
mov
add
cmp
addr16
mov
jnp
movsb
gs
std
push
xchg
in
inc
jnp
jle
sub
mov
xor
sbb
sahf
xor
push
test
aam
jmp
jae
add
push
jge
and
fsubs
fisubrl
push
sbb
mov
add
fstl
aaa
popf
pop
jno
mov
ss
rcr
sub
movsl
xor
pop
pop
xchg
ja,pn
or
sbb
pop
fildll
pushf
stc
insb
mov
int3
in
pushl
pop
cmc
or
cmpsl
sbb
pushf
or
sbb
xor
cs
sub
cmp
mov
out
je
jl
xchg
dec
mov
popf
push
stos
ja
fld
or
adc
inc
out
outsl
cmp
mov
fimuls
pop
dec
jb
pop
mov
xor
test
xchg
test
ss
mov
insl
or
sbb
fstps
adc
inc
sbb
pusha
scas
pop
icebp
pop
out
push
jmp
adc
push
jg
xchg
je
jle
mov
movsb
mov
xchg
call
fisubs
in
aas
or
stos
mov
push
mov
icebp
push
xchg
or
inc
fcomp
call
roll
imul
or
xor
add
cs
or
push
subl
mov
jp
inc
cmpsl
and
ss
cmpsl
sbb
cmpsb
mov
sbb
lcall
xor
ss
test
lods
imul
divb
stc
stc
cmc
mov
dec
mov
or
fmuls
cld
mov
cld
sub
sub
aam
inc
stc
jb
cmp
inc
jns
adc
out
jno
push
and
popf
jg
pop
ror
adc
rcrb
and
and
jae
adc
pop
lret
sar
push
jb
inc
subl
or
xlat
and
ror
ficomps
fs
adc
dec
ljmp
mov
inc
lret
jg
lods
push
inc
hlt
imul
mov
stc
int
mov
std
add
and
dec
aaa
cmpsl
dec
sbb
dec
clc
sbb
dec
out
sub
push
decl
test
pop
sub
push
out
sti
jae
xchg
push
dec
xchg
shrl
test
aas
rorb
sbb
ss
mov
cmpsl
push
push
xor
push
mov
cmc
mov
xchg
je
jbe
aam
divb
mov
loopne
jnp
cmpsl
mov
sti
scas
pop
sbb
into
mov
cmp
daa
leave
xchg
into
sar
xchg
cmpsl
add
repnz
ss
cmp
mov
imul
jg
ds
cmp
addr16
lret
imul
jg
xlat
pop
dec
jmp
in
jo
push
fadds
jge
mov
scas
popa
push
and
movsb
add
inc
push
je
clc
adc
sti
push
mov
cmpsb
jns
cmp
and
push
mov
cmc
inc
in
pusha
dec
jb
push
push
pop
push
fs
cmp
push
loop
nop
bound
sahf
je
push
push
and
jno
or
pop
xor
int3
pop
inc
xchg
repz
adc
imul
sub
cmp
gs
pushf
mov
fnsave
test
dec
repz
jp
lret
inc
mov
mov
push
daa
dec
push
push
mov
hlt
sbb
loop
push
sbb
movhps
jae
inc
push
jo
out
sub
jno
pop
mov
repnz
loope
pushf
fwait
and
xchg
lds
and
decb
aaa
xor
jnp
mov
xor
js
pop
lahf
int3
inc
add
cltd
mov
and
add
sbb
ds
stos
add
repz
mov
repz
aad
xor
mov
or
adc
clc
push
push
xor
lea
aaa
jae
clc
stc
pop
pusha
cs
xchg
add
push
pop
inc
rorb
lods
ss
or
push
pop
jne
adc
int
mov
mov
sub
cli
inc
shrb
ss
inc
xor
test
sub
std
rolb
xchg
ret
jne
fxch
adc
loopne
ret
rcrb
or
adcl
pop
sbb
jmp
nop
inc
int
push
xchg
rcl
psubusw
test
sbb
and
imul
mov
add
push
jmp
aaa
push
call
cmc
cmp
xchg
dec
outsb
xor
repz
xor
fldenv
subl
adc
aad
cli
rcrl
mov
cmp
dec
sbb
aaa
sbb
pushf
loopne
mov
push
mov
dec
dec
lock
pop
or
jecxz
ds
adc
lahf
data16
push
scas
mov
cmp
dec
les
lcall
mov
or
out
jns
or
mov
push
es
push
ss
mov
sbb
xor
stos
subb
iret
stc
fildll
inc
push
lcall
jne
gs
cmpl
lods
mov
std
cmp
out
xor
fisubrs
lds
sti
addr16
cmp
or
xchg
jb
dec
in
sub
or
jecxz
or
inc
sbb
ror
daa
cli
mov
xchg
repnz
cmp
add
jno
sbb
dec
mov
out
mov
gs
jp
outsl
and
mov
fs
jle
push
pop
sub
stos
dec
sub
inc
jno
cwtl
add
or
mov
popf
outsb
jle
shll
sti
push
or
push
and
jns
cmp
xchg
or
lahf
push
arpl
sbb
cwtl
data16
mov
dec
mov
mov
aaa
sub
inc
dec
shll
mov
adc
mov
mov
xor
scas
movsl
xor
inc
xlat
pushf
cmc
mov
mov
inc
rorl
jbe
lods
test
mov
aam
hlt
mov
inc
in
adc
sbbl
ja
mov
cmp
je
pop
movsb
mov
inc
add
mov
mov
outsl
adcl
mov
popf
mov
jns
lret
pop
xchg
test
inc
hlt
mov
call
xlat
mov
scas
andb
push
popf
je
call
enter
orl
dec
clc
ljmp
lahf
cmp
ret
sarb
push
sub
xor
leave
out
jg
jecxz
imul
cs
dec
lods
roll
adc
call
dec
jo
cmc
incb
out
ror
and
loop
into
jne
mov
aaa
js
add
filds
jnp
movsb
xor
jne
jle
popa
mov
sub
in
or
pop
xchg
inc
push
lock
faddl
ror
push
ss
fmull
lock
pop
or
inc
cs
xchg
mov
mov
sahf
js
repz
xchg
mov
cmc
mov
les
leave
push
jae
into
jb
das
inc
jns
push
xor
cmp
push
cmp
out
bound
lds
add
xchg
jns
imul
sbb
rcll
mov
hlt
fdiv
andb
xchg
sub
push
imul
lcall
add
sbb
ljmp
jmp
nop
rolb
sub
push
sbb
insb
aad
repnz
mov
sub
xchg
xchg
mov
outsb
test
mov
jno
jne
xor
cmp
mov
ret
mov
and
cmp
dec
lret
pop
outsb
cwtl
xlat
push
push
stc
xor
adc
jb
xchg
xor
in
leave
pusha
or
mov
mov
or
cwtl
test
inc
dec
sub
out
lods
xchg
aas
cli
sbb
icebp
aaa
icebp
push
sub
pusha
popa
inc
sbb
out
mov
sub
unpcklps
int
mov
mov
xchg
icebp
nopl
insl
pop
dec
cmpsl
dec
pop
jo
sub
mov
sub
lahf
and
xor
hlt
mov
and
insb
pop
cmpsl
or
jmp
int3
test
dec
mov
xor
push
rdmsr
mov
fbld
test
push
mov
pop
pushf
pop
insb
adc
xchg
in
pop
lahf
lret
sbb
lret
cmp
push
out
sbb
stos
sbb
rcr
cmpsl
and
arpl
shrl
pop
sub
lcall
xchg
push
add
mov
and
lcall
mov
or
js
pop
jp
outsl
add
ret
sti
or
xchg
jecxz
inc
pusha
lock
mov
dec
cmp
and
dec
dec
aaa
xor
mov
lret
add
cld
adc
leave
test
push
test
and
pop
cmp
sub
pop
insb
nop
mov
daa
out
mov
aam
mov
and
xlat
lock
nop
push
cwtl
stc
cmp
mov
and
outsl
jp
or
clc
int
adc
adc
cmp
xor
mov
inc
inc
out
iret
mov
mov
stos
hlt
dec
or
sahf
jb
mov
jae
mov
xchg
jmp
pop
rol
cmpsl
bound
test
adc
add
pop
jnp
mov
dec
push
mov
push
xchg
mov
sbb
int3
adc
jnp
mov
shll
mov
mov
xlat
fs
xor
xor
popa
sbb
out
cli
ficompl
ja
lock
fcoms
sbb
scas
je
pop
push
inc
lcall
ret
sub
iret
pop
mov
adc
cmc
lds
push
popa
stc
push
xor
rclb
frstor
fcoms
fimuls
data16
push
aam
out
mov
clc
xchg
add
adc
cmpsb
xor
mov
xor
stos
mov
sbb
mov
jmp
std
mov
jl
pusha
test
clc
cltd
jae,pt
scas
ds
dec
out
inc
push
push
ja
sbb
inc
fistps
inc
xor
loope
iret
xchg
fdivrl
scas
outsb
icebp
or
sbb
in
sbbb
stos
mov
pushf
and
loop,pt
dec
bound
inc
mov
pop
loopne
sbb
test
fwait
cmp
or
outsb
sub
xchg
ljmp
mov
ficompl
int3
fs
movsb
repnz
inc
rcl
xor
rolb
cwtl
push
jbe
jg
movsb
ds
mov
xchg
js
loopne
pop
mov
mov
sahf
cmp
dec
pop
notb
sbb
int3
sub
and
dec
pop
sti
cmp
pop
or
fsubr
xor
adc
mov
les
jbe
rolb
orb
out
fcmovu
xorb
popa
inc
jmp
mov
cmp
jecxz
inc
loopne
pop
xor
mov
addr16
sub
xchg
pop
pop
sarl
sahf
cmpsl
pop
std
xchg
mov
jecxz
popf
and
sahf
in
cmp
stos
cmpsl
mov
mov
pop
mov
inc
movsb
cs
xor
popf
les
dec
leave
mov
xchg
mov
lds
fwait
push
mov
sbb
enter
adc
jge
aas
pop
or
push
push
sub
gs
xor
ret
push
pop
push
sub
dec
lahf
jmp
ljmp
push
jne
fdivrs
sub
and
and
jo
adc
inc
test
and
dec
and
ret
cmp
aas
mov
adc
call
sbb
int3
push
adcl
sbb
xchg
mov
aaa
sub
cli
les
pop
inc
loopne
iret
mov
jp
fs
fcomps
mov
xchg
or
sbb
or
cltd
cld
dec
xor
pop
out
lcall
pop
inc
ljmp
dec
in
scas
loop
push
pop
add
cmc
fwait
adc
les
aaa
int
mov
mov
pushf
sbb
xor
push
repnz
std
sub
stos
imul
shrl
cmpsb
roll
in
out
fucomi
ja
or
push
jo
xor
mov
popa
jecxz
mov
sti
cwtl
dec
inc
xor
jnp
push
add
stos
mov
je
push
cmp
sub
jge
xorl
aaa
cld
lock
pusha
mov
xchg
xor
pop
loope
cmp
push
nop
pop
cli
and
fsubrl
xlat
scas
mov
sbb
sub
pop
mov
in
xchg
push
mov
insl
or
nop
loope
inc
push
push
push
fmul
cmp
pop
les
adc
inc
fldcw
rcrl
mov
aam
cmp
stc
jb
aaa
test
mov
push
xchg
test
pushf
lods
iret
ss
jg
popf
xchg
jmp
pop
push
mov
movsl
cmpsb
cmp
repz
je
outsl
pop
idivl
push
lret
xchg
ret
jo
push
test
sar
adc
pop
dec
add
pushf
inc
imul
mov
mov
xlat
cltd
lahf
jp
xchg
jg
hlt
arpl
inc
aam
xor
gs
dec
fildl
mov
in
xor
enter
pmaxsw
std
jge
jg
sub
pop
pusha
mov
subl
int
xor
cli
fcomip
inc
ja
cmpsl
mov
mov
pop
sbb
mov
outsb
cmc
dec
inc
js
fwait
dec
pusha
lds
ds
xlat
adc
adcl
mov
push
das
cltd
sbb
inc
push
cwtl
pop
arpl
test
lods
push
cwtl
xor
adc
dec
xchg
jns
fwait
jle
push
adcl
sbb
and
sbb
dec
adc
push
cmp
mov
xchg
lods
scas
sbb
adc
loop
add
repz
push
test
popf
jp
int3
stos
xor
xchg
push
pop
subl
das
fisttps
or
mov
mov
out
out
rorl
cmpb
cmp
lret
xchg
cmpsl
scas
push
adc
inc
xchg
sbb
jbe
and
roll
ds
or
jbe
mov
popa
jmp
js
in
xchg
shlb
sbbb
icebp
out
dec
leave
jo
xchg
jmp
int
imul
xchg
outsb
and
mulb
xchg
and
popa
stos
cmc
insb
sub
dec
js
test
xor
fistpll
pushf
stos
adc
dec
jle
add
mov
mov
mov
fstpl
push
sub
stos
int
pushf
aam
pop
jne
pop
or
aaa
sbb
and
ffreep
sbb
mov
dec
lahf
cmp
add
clc
cmpl
or
fisubl
stc
jns
bound
int
xlat
gs
mov
mov
mov
rcr
loop
pop
pop
mov
inc
cmp
push
clc
cmp
sub
sbb
repz
lods
dec
push
ds
push
mov
in
cwtl
xor
pop
test
nop
inc
jge
mov
sbb
fucomi
or
inc
cli
push
in
or
xchg
pop
test
dec
mov
xor
xor
and
lea
insl
cmc
add
repnz
xchg
arpl
or
cmpsb
push
sub
imul
add
push
jecxz
jnp
fdivrl
lods
mov
or
push
negb
xor
mov
mov
mov
mov
leave
pusha
xor
inc
mov
xchg
inc
pop
lret
outsl
push
stc
aas
or
mov
mov
mov
inc
or
enter
lods
adc
cs
pop
push
ljmp
out
xchg
outsb
sbb
pop
sub
push
pop
movsb
xchg
ds
push
push
add
out
pop
mov
mov
lret
iret
pcmpgtd
mov
pop
and
mov
mul
mov
in
pop
shrl
orb
into
int
push
loop
int3
mov
shrb
cli
andb
push
ret
sbb
jecxz
in
push
add
popa
std
adc
test
mov
jg
fwait
inc
mov
stos
xchg
cld
xchg
mov
xchg
xchg
cltd
out
loop
jecxz
icebp
dec
sbb
je
loope
inc
cmp
add
mov
xlat
xchg
aam
push
jbe
push
fstl
rclb
imul
outsb
movsb
rcl
sbb
lods
fwait
xlat
lea
pusha
lahf
mov
pusha
frstor
xor
pop
loop
test
addr16
int
cltd
orl
int
fisubl
cld
sbb
pop
push
lock
xor
ffree
sahf
mov
sbb
mov
insb
cld
inc
xchg
es
out
das
sub
fsubs
lcall
icebp
cmp
mov
jne
adc
pop
mov
pop
dec
cltd
mov
ss
add
mov
das
sbb
mov
adc
adc
cmpsb
popa
jg
mov
in
imul
andb
movsb
subl
jg
or
sub
out
popf
pop
jp
inc
dec
repz
scas
inc
sbb
and
addr16
pusha
imul
inc
xchg
push
adc
repz
cs
sbb
daa
or
ret
sub
int3
dec
fiadds
lea
loope
sub
add
mov
lret
roll
daa
dec
in
lods
pop
pusha
inc
scas
xchg
inc
std
lret
mov
jno
mov
shlb
pushf
fucompp
testb
imul
xlat
in
imul
fisubrl
add
mov
shll
add
in
add
dec
stos
sti
sbb
rcll
and
adc
insb
jmp
xchg
clc
fwait
xchg
and
and
imul
mov
mov
call
jbe
lds
add
adc
mov
mov
out
popa
and
mov
loopne
mov
cld
out
loope,pn
sub
xchg
and
push
andl
xchg
daa
xchg
test
fistpl
bound
jp
push
int
mov
mov
cmpsb
xor
adc
mov
mov
test
je
divl
adc
cmc
adc
sub
mov
arpl
jns
inc
sbb
lret
aad
ljmp
sub
xchg
test
xor
inc
hlt
jg
push
aad
lea
lods
xchg
xchg
mov
mov
ja
inc
or
push
and
or
pop
pop
or
sarb
or
lret
and
loope
clc
orl
cmc
mov
aad
les
xor
xor
jb
xchg
in
xchg
cld
ja
sub
in
inc
mov
mov
test
sub
enter
add
das
mov
sbbl
dec
lcall
dec
lock
xor
mov
pop
mov
arpl
jmp
jg
and
mov
fcmovnbe
out
xchg
push
pop
lret
jae
cwtl
enter
mov
push
jae
imul
mov
mov
hlt
ss
outsb
xchg
cmpsl
ljmp
imul
leave
insl
cmp
insl
and
cli
fistpll
mov
jb
jnp
int3
js
mov
mov
sbb
es
mov
add
mov
lods
insb
outsl
loope
push
outsl
or
data16
ljmp
jae
data16
xchg
insl
adc
mov
outsl
mov
or
mov
sarb
xchg
out
cmc
cmp
pop
call
cvtdq2ps
mov
push
pop
fistpll
jns
lret
dec
arpl
shll
dec
pop
jle
jae
sub
sub
push
mov
sub
dec
cmc
jecxz
mov
add
mov
pop
lcall
movsb
mov
pop
or
dec
cmp
push
into
sub
sub
jge
or
push
sbbl
into
cltd
xor
enter
aas
ss
sbb
jge
cmp
inc
and
out
mov
pop
push
andb
jle
add
xor
push
les
clc
jmp
cld
out
or
mov
scas
stos
mov
aad
sub
dec
push
cwtl
xor
test
pop
pop
xor
sub
in
mov
push
mov
ret
test
gs
incl
dec
pusha
pop
outsl
jg
das
lds
cli
js
sbbb
inc
mov
jno
jmp
and
push
out
call
cmc
enter
push
popf
call
bswap
sub
xchg
cmpsb
rcll
push
inc
sub
xchg
addr16
mov
aam
sarl
xor
sub
cmpsb
repz
adc
inc
or
int3
addb
int3
jge
sub
push
mov
dec
cmpsb
movsl
mov
jae
imul
ret
cli
scas
call
jmp
mov
sub
imul
cs
scas
add
dec
lcall
leave
add
xor
fsubrl
mov
loop
pop
jg
popf
scas
fcompl
cmp
xor
popa
je
jns
or
dec
adc
mov
loope
xor
jmp
lcall
inc
cmp
pop
lock
test
xor
or
ret
out
jb
or
imul
push
mov
imul
or
pop
aad
xchg
xor
pusha
and
fwait
mov
mov
lahf
rcrb
sub
mov
insb
cmpb
in
je
insb
shrb
stc
testb
mov
xchg
mov
cmpsl
mov
adc
call
xlat
xchg
hlt
enter
sahf
aad
push
mov
jbe
pop
inc
cmp
jae
scas
insl
or
xchg
loope
xchg
fcomps
gs
pop
push
sbb
mov
adc
cmpsl
sti
lcall
dec
mov
cmp
es
and
push
sahf
aaa
lcall
dec
push
xchg
scas
int
fnsave
lock
lods
cs
mov
xor
mov
lds
jae
dec
cmpsb
sbb
ficompl
dec
jg
sbb
sub
push
movlps
sbb
inc
sti
daa
jnp
xchg
cmp
fdiv
movsb
dec
jbe
repz
sbb
mov
mov
jge
imul
mov
clc
dec
jno
push
icebp
jbe
scas
and
jmp
stos
jge
test
sbb
lods
cmp
lds
mov
inc
mov
inc
xchg
loop
jmp
and
aas
jp
out
fcoml
inc
fimuls
cmp
dec
enter
aaa
pop
loop
das
sub
push
fucomp
xchg
out
sbb
mov
imulb
addr16
js
es
xchg
icebp
decl
adc
sbb
cmp
xor
push
xchg
outsl
add
out
dec
xchg
push
cmp
and
sbb
mov
scas
loope
jne
mov
enter
fs
aaa
movsb
inc
push
jae
xchg
mov
insl
dec
test
inc
pushf
cld
inc
psubsb
sbb
and
les
mov
push
pop
or
push
fcoms
in
xor
jae
xchg
addr16
or
push
lods
push
ret
push
test
xor
pop
cmp
stos
pusha
xor
mov
add
vpunpcklbw
xchg
aad
inc
mov
mov
dec
and
clc
jno
cmp
into
and
jb
outsb
sub
push
or
inc
cmpsl
xchg
sbb
xchg
push
inc
xchg
and
das
dec
inc
add
jae
and
sub
mov
xchg
sub
sub
jmp
or
std
adc
das
cmc
popf
jae
sbb
adc
jnp
lods
pop
shl
mov
imul
outsb
ret
mov
mov
cmp
xor
aad
cwtl
inc
shll
shll
fwait
aaa
aam
div
pop
dec
decl
cwtl
push
mov
lock
imul
popf
jae
outsb
je
les
rorb
cltd
push
test
inc
cmpsl
or
dec
dec
lods
xor
or
shll
lret
add
sbb
push
mov
push
shlb
or
ret
push
pushf
insl
repz
add
test
cltd
push
test
add
fsubl
and
imul
mov
jg
jns
adc
jl
aam
xlat
or
jle
stc
pushf
mov
movsb
jg
mov
ficoml
into
std
shl
push
lock
jg
push
scas
hlt
sbbl
iret
jge
repnz
pop
pop
jns
lods
push
arpl
dec
stos
inc
push
ja
orl
rclb
dec
aas
orl
adc
dec
cld
or
pop
fldcw
inc
sbb
repz
fst
scas
mov
in
push
and
push
and
or
dec
and
lock
or
mov
mov
fldl
mov
sub
cwtl
push
sbb
ljmp
xor
enter
cmp
es
mov
mov
hlt
mov
jnp
xor
pop
kmovb
add
popf
gs
sti
and
mov
ljmp
outsb
inc
imul
or
mov
stc
je
daa
les
add
stos
pop
movsb
scas
popa
mov
push
adc
jge
sub
lock
ret
ljmp
push
cmc
cwtl
pop
popf
test
add
dec
cltd
outsb
sbb
filds
mull
repnz
pushf
lahf
daa
cli
add
ss
and
mov
ljmp
sbb
jle
sub
xchg
aad
ljmp
enter
cmpsb
loop
pusha
mov
out
inc
add
xchg
fcomi
mov
mov
mov
cwtl
aam
scas
daa
in
jae
xchg
adc
xchg
sub
adc
cmpsb
mov
rol
mov
push
shrb
xor
scas
and
popa
sarb
scas
cmp
dec
mov
int3
pushf
bound
xchg
in
ret
jg
jo
in
popa
arpl
xchg
testl
pop
xchg
shlb
and
mov
scas
push
pop
lcall
lret
lods
adc
das
mov
fs
jae
xlat
cwtl
pop
popf
and
std
das
pop
jbe
pusha
pop
mov
inc
mov
lret
mov
cmp
outsb
add
out
cwtl
pop
mov
xchg
das
je
push
mov
mov
lods
xchg
test
adc
test
pop
jno
and
imul
cmp
and
xchg
mov
idivb
mov
popf
and
add
mov
out
cmp
loopne
inc
inc
inc
push
push
sbb
inc
cltd
mov
cmp
ja
adc
inc
testl
faddl
and
add
ret
stos
mov
ret
addr16
out
outsb
mov
fcmovb
mov
jmp
scas
pop
add
adc
jp
shlb
sub
add
inc
and
xchg
mov
pop
and
leave
mul
es
and
aam
sub
xchg
in
jle
lret
pop
jecxz
jp
push
icebp
out
jp
jle
iret
arpl
mov
or
mov
clc
jecxz
cmp
push
lret
cmpsl
pop
rclb
cmp
sbb
xor
loope
or
out
inc
pop
stc
cmp
lcall
jmp
negb
scas
pop
and
stc
push
scas
ds
test
je
fwait
mulb
xchg
jns
mov
cmp
push
mov
cltd
mov
jno
clc
cmp
mov
cmpsb
mov
adc
adc
adc
aaa
jle
xor
js
inc
test
xor
push
je
push
pushf
subl
jle
cmp
or
mulb
mov
movsb
mov
xchg
push
pop
lods
push
lods
bound
mov
lea
in
imul
fs
push
bound
xlat
xor
in
mov
mov
or
or
out
pop
imul
daa
cs
insb
insb
fbld
iret
push
mov
xor
dec
jmp
inc
cli
insl
inc
xor
mov
mov
or
dec
or
cld
xlat
xlat
add
cltd
cmp
ret
mov
cmpsl
adc
mov
xchg
add
lcall
add
pop
mov
ret
ficoml
jne
add
mov
jno
ret
insb
xchg
nop
in
je
aaa
xor
in
and
loope
aad
mov
js
insb
mov
mov
filds
adc
or
push
xchg
scas
xor
and
lret
or
xor
push
push
loop
xor
jb
cmp
sub
lahf
sbb
insl
push
stos
dec
push
bound
lock
adc
aam
pop
aad
sbb
and
xchg
sbb
adc
mov
sahf
pusha
and
xor
dec
lods
cmp
or
jmp
jno
mov
scas
xor
mov
jne,pt
pop
fidivrl
mov
test
xor
stos
imul
inc
cmp
push
ficoms
mov
pop
pop
mov
sbb
dec
jno
loope
rcrb
xor
loopne
orb
pushf
push
clc
icebp
loop
fwait
mov
fucomp
xor
call
and
jg
ljmp
mov
adcb
adc
adc
mov
inc
push
dec
jmp
movsl
shrl
sti
mov
lods
cmpsb
jl
sbb
leave
shufps
add
out
xor
adc
pop
pop
popf
mov
in
hlt
aaa
not
ret
inc
inc
outsb
popf
popl
lds
aam
inc
lods
and
push
lea
test
out
and
xchg
jmp
jecxz
cltd
push
mov
shrb
scas
addr16
inc
xlat
push
dec
sarl
pop
inc
orl
inc
mov
mov
loop
das
lods
sbb
xor
lods
mov
xchg
ret
adc
xchg
decb
das
popf
loopne
fsqrt
mov
test
inc
jmp
pushf
daa
sub
mov
stos
xchg
mov
divl
dec
popa
mov
inc
out
test
xor
es
in
push
enter
add
xchg
test
leave
and
into
sub
loope
adc
loope
outsb
mov
clc
push
dec
pop
repz
inc
out
clc
xchg
ds
jae
fs
popl
bound
roll
xor
sti
ljmp
mov
js
push
outsl
mov
mov
pop
dec
and
mov
xor
push
push
mov
add
pushf
das
cmp
in
mov
add
cmp
mov
mov
and
addb
push
mov
inc
sbb
sub
jb
cli
push
push
mov
test
fisubrl
dec
push
pop
popf
sub
and
mov
jg
mov
mov
jmp
lods
dec
sub
or
push
shl
ret
push
add
add
push
or
or
jne
inc
mov
sub
rolb
xor
mov
jne
adc
jecxz
das
sti
xlat
bound
push
movsb
test
xor
std
mov
rorb
icebp
push
lea
pop
sub
mov
fidivrs
out
inc
imul
loope
dec
mov
in
ret
mov
cs
jb
sarl
ljmp
fildl
mov
sbb
sub
outsb
jle
addl
sbb
int3
sarb
sbb
adc
sub
ret
mov
jnp
movl
movsl
rolb
mov
pop
stc
or
dec
and
add
sub
xchg
adc
sbb
jnp
cld
das
in
push
jle
lods
fs
ljmp
cld
jg
sub
pop
sub
jb,pn
test
nop
sbb
rcr
shll
popl
sub
sarb
cmp
out
test
pop
cmpsl
sbbb
fisubs
cmp
test
test
pop
scas
orl
lret
popa
push
aaa
outsb
dec
ficomps
lcall
dec
pop
fwait
popa
cmp
and
sub
repz
push
scas
cltd
xchg
pushf
cltd
shrb
loopne
aad
mov
fldenv
aad
enter
fistpll
stos
mov
enter
jo
test
test
in
dec
add
decl
mov
dec
mov
pop
mov
xchg
xchg
into
dec
pop
xchg
int
leave
inc
add
xlat
aas
pop
addr16
cmp
les
adc
out
cmpsb
insl
or
sbb
add
and
movsb
pushfw
pop
xchg
xchg
in
mov
cmp
add
pop
adc
pop
pop
aad
lea
cltd
xchg
loope
jb
push
mov
shr
mov
jnp
jp
mov
std
jo
or
rorb
or
lds
pusha
xchg
sub
shrd
scas
mov
jg
push
data16
int
sbb
fmuls
jle
sub
adc
dec
add
scas
in
outsb
jg
sbb
imul
or
pop
xchg
fisttpl
add
cmp
das
push
push
stos
fisubrs
fdivs
sbb
dec
addr16
ret
push
push
pop
aam
iret
xchg
push
popa
in
mov
int
not
dec
pop
add
inc
pop
test
and
mov
xor
inc
int3
xor
fnstenv
lret
call
xchg
je
sbb
mov
sahf
and
popf
jns
cltd
inc
rclb
addb
movsb
sbb
aas
aad
popf
loopne
insl
jno
icebp
cwtl
or
scas
dec
fstl
or
aaa
xor
loope
pushl
rcpps
jno
stos
mov
fs
push
push
mov
ret
xchg
sti
das
insb
dec
test
dec
cld
push
fnstenv
fcoms
aaa
js
arpl
cmp
ss
or
cmp
out
scas
pop
xor
mov
fsubrs
gs
inc
not
xor
mov
inc
push
pop
fidivl
jle
out
xchg
xchg
movsb
ret
mov
sti
mov
lds
dec
sub
mov
subl
aam
aad
sahf
outsb
out
bound
adc
dec
pop
sbb
mov
adc
iret
pop
jge
mov
xor
pushf
clc
mov
ffreep
stos
int3
neg
mov
sti
mov
hlt
rcrl
std
jne
icebp
insb
cli
fidivrl
pusha
sub
xchg
fldt
or
pop
mov
roll
xorl
icebp
imul
jnp
daa
or
loop
adc
rorb
aam
movsl
mov
into
jns
das
mov
or
loope
push
xor
xchg
lea
mov
cmp
mov
lea
jmp
sbb
add
push
sbbb
scas
lods
lea
bound
enter
imul
sub
lea
xchg
sbb
pop
inc
lock
fs
adcl
mov
lret
incb
fisttpl
cltd
imul
stc
addr16
mov
jle
cs
popa
in
push
ret
mov
or
ret
or
scas
jp
in
and
adc
adc
or
ja
inc
cmp
xor
loop
mov
pop
movsb
xor
xchg
jbe
inc
jecxz
out
mov
lahf
push
insl
lods
lret
push
repz
and
arpl
xchg
xor
mov
inc
jge
mov
inc
fwait
hlt
mov
sub
jnp
ret
std
imul
cmp
xor
inc
arpl
les
je
ss
sub
scas
push
push
in
jo
loopne
movsl
outsl
pushf
jno
mov
jle
aad
cltd
jb
push
adc
adc
popa
sub
stos
dec
flds
adc
mov
inc
mov
dec
and
push
xor
imul
arpl
push
adc
mov
scas
mov
fcmovu
sbb
adc
lahf
sub
mov
or
pop
leave
mov
add
icebp
pusha
sbb
cmp
mov
orb
scas
xchg
cld
and
hlt
xchg
fsubrs
push
sbb
xchg
std
lds
xor
scas
pop
test
sahf
mov
dec
push
push
cmpsl
mov
push
negl
sub
adc
pop
movsb
stc
fldt
mov
lods
pop
mov
fnstenv
mov
mov
icebp
cmp
pusha
rclb
out
dec
xchg
divb
ret
les
jp
dec
sahf
jecxz
es
inc
lock
mov
out
mov
dec
xor
mov
test
push
js
test
xchg
mov
mov
aad
xchg
xor
push
sti
mov
mov
cmpsb
pop
jg
out
cmp
jne
xor
push
dec
adc
sub
jmp
xorl
out
stos
frstor
into
aaa
clc
test
nop
mov
in
xchg
pop
pop
lar
inc
xor
sbb
popa
jmp
bound
sub
ljmp
xchg
aas
cwtl
ljmp
ja
arpl
es
mov
inc
sahf
sbb
adc
lods
pop
push
movb
das
insl
dec
int3
mov
cmpsl
mov
es
jge
inc
cld
mov
out
adc
push
mov
lock
pop
dec
dec
xor
jmp
scas
mov
push
icebp
cltd
pop
inc
pushf
xchg
mov
nopl
fildl
cmc
mov
mov
or
sbb
mov
jge,pn
jle
daa
sub
jne
dec
shlb
imul
mov
daa
xchg
mov
mov
mov
mov
jbe
fs
sbbb
adc
mov
inc
xor
mov
pop
jbe
test
jae
mov
in
dec
xor
add
jge
outsl
lds
inc
rcr
jb
adc
lods
mov
in
nop
dec
test
xchg
nop
into
je
ds
pushf
pusha
dec
push
addr16
cli
fstps
jp
push
inc
pop
test
mov
aas
loop
lret
adc
or
hlt
in
ljmp
inc
addr16
xor
mov
mov
inc
sbb
lds
rclb
add
jnp
stos
sbb
movsl
jge
jns
cld
sbb
mov
xchg
imul
fildl
insb
mov
dec
gs
sub
loopne
int
fisubl
cs
add
cs
aad
lret
jl
mov
imul
mov
push
cmpb
insl
dec
inc
movsb
jl
test
adc
cld
pushf
or
cmp
and
stc
clc
sbb
fimuls
shlb
std
es
fstps
jmp
dec
xchg
cmc
pavgw
or
scas
cmp
stos
jl
xor
imul
push
jmp
sbb
cmp
dec
aas
out
push
imul
pop
mov
and
cmpsb
lock
adc
js
imul
ret
mov
and
inc
insb
lret
sbb
inc
sub
and
repnz
sbb
not
push
pop
or
arpl
pop
add
sahf
sti
jl
and
filds
xor
in
mov
jo
aam
pushf
int
or
out
jecxz
inc
in
push
roll
or
pop
fld
cmp
fwait
adc
cmpsl
movsb
repz
mov
ret
pusha
pop
aam
lea
pop
scas
cmp
outsl
dec
leave
mov
xchg
test
aas
mov
mov
jb
lock
rcll
lods
div
sub
mov
jmp
and
ljmp
loope
jbe
and
sbb
aam
push
and
mov
ljmp
cmc
push
daa
leave
test
arpl
mov
sbb
push
jae
movsb
dec
and
mov
lds
push
cmp
add
stos
adc
inc
adc
xor
ja
sahf
push
out
test
imull
loopne
mov
sti
loopne
and
pop
int
push
lret
and
and
dec
mov
lcall
clc
inc
outsl
fisubrs
xor
pop
sub
cwtl
pop
lods
push
cmp
jg
push
enter
lock
outsb
mov
cmp
ret
loop
adc
push
in
cmp
popa
mov
and
mov
ljmp
cwtl
and
sub
and
mov
jmp
stc
out
shlb
pop
push
jmp
daa
loope
xchg
jne
or
cltd
sbb
mov
xchg
inc
lcall
outsb
cwtl
pop
loopne
jb
mov
lret
cmp
shlb
cld
mov
sbbb
and
pop
cmp
xchg
add
pushl
es
xchg
scas
jle
cli
scas
fsub
mov
pop
subb
push
jo
ret
sub
mov
inc
inc
shrb
pop
add
dec
in
sub
xor
leave
sbb
cwtl
mov
into
mov
inc
daa
pop
xchg
subb
cmc
decb
jle
and
pop
mov
popa
push
sbb
sub
mov
aaa
jmp
jnp
orl
sbb
popf
mov
insb
nop
xchg
jae
js
jb
xchg
pop
mov
arpl
clc
push
popf
loope
xchg
test
push
cli
into
imul
sbb
xchg
mov
push
repz
aad
mov
fs
adc
fnstsw
jae
test
cmp
pop
lock
cmp
or
cmp
in
or
mov
hlt
aam
ljmp
stc
push
mov
inc
movsb
xorl
xlat
jnp
xchg
mov
ljmp
testb
sbb
fcmovnbe
cmpsb
push
rolb
jle
adcb
push
enter
sub
pop
xor
pop
xor
ds
call
clc
out
inc
rorl
push
pop
sbb
or
js
data16
mov
out
insl
xor
imul
xor
mov
dec
es
add
adc
rcrl
test
popl
aad
jmp
pushf
lods
gs
push
rclb
out
or
xor
xor
aaa
push
stc
icebp
scas
ja,pt
fwait
and
xor
out
mov
xchg
lcall
pop
inc
jg
adc
out
stos
daa
js
inc
mov
movsb
push
mov
mov
or
std
mov
gs
push
incb
or
shll
pop
icebp
xchg
add
stc
push
dec
pop
add
cs
or
jle
in
shll
cmp
popf
xchg
cmpsb
shlb
cwtl
or
push
dec
push
mov
mov
push
test
bound
pop
push
and
lret
sbbl
clc
adc
in
psllq
or
in
mov
and
mov
loopw
sahf
mov
ss
inc
aas
fstpl
outsl
into
loope
dec
add
mov
add
mov
jge
cmpsb
fwait
jmp
cmpsb
int
std
subb
adc
pushl
lock
jmp
pop
cli
pop
fldenv
int3
xor
jmp
dec
call
push
cwtl
lahf
dec
lret
shll
outsl
aas
push
into
aas
sbb
inc
pop
andl
inc
xchg
test
jbe
je
add
xor
outsl
cmp
sub
sub
mov
sarl
xor
rorl
test
fistpl
mov
and
sahf
paddusw
adc
cmp
fistps
or
in
adc
adc
nop
or
xchg
rclb
sub
mov
inc
std
in
sub
push
loop
or
cli
pop
mov
adc
jae
or
sbb
fadd
rcl
jle
jnp
jecxz
test
lods
push
ss
das
stos
js
repz
push
pop
mov
call
mov
jl
daa
pusha
add
push
xor
sub
xchg
rcll
aaa
adc
int3
popa
xchg
cmp
std
js
ljmp
xor
dec
ret
in
cmp
outsl
mov
into
outsb
or
test
mov
xor
cli
mov
pop
icebp
cmpsb
push
call
adc
int3
jns
pop
dec
jecxz
inc
xor
sti
ljmp
mov
ds
pop
mov
or
push
repnz
aaa
dec
dec
xor
insl
mov
idivb
out
cld
jnp
jbe
jb
dec
hlt
jno
fcompl
insb
xchg
aaa
and
inc
jns
dec
ret
jecxz
ja
loop
adc
xchg
imul
daa
fs
jns
push
mov
sub
bnd
sub
in
enter
add
jecxz
lock
push
jp
cmc
call
lahf
testb
add
cmc
mov
testb
les
pop
xor
mov
fldcw
loop
cmp
ljmp
movsb
je
jg
dec
pop
and
sbbl
mov
leave
bts
xchg
sub
jmp
xchg
pusha
dec
lret
cmpsl
aas
lret
mov
mov
popf
mov
in
shll
xchg
lcall
filds
sbb
xor
or
xor
push
popa
lcall
mov
jmp
dec
mov
inc
cmp
push
repz
int3
andb
inc
xchg
cmp
cmp
or
andb
inc
push
xor
movsl
jbe
ja
bnd
xor
lret
adc
insb
ss
test
clc
rclb
fwait
les
scas
cmovbe
cld
fwait
cmp
loopne
repz
pusha
out
xor
hlt
test
repnz
inc
mov
mov
lcall
or
andb
sub
lret
sarb
xchg
mov
rcrl
pop
mov
mov
inc
dec
rorb
jae
lret
fs
jae
lea
mov
push
sbb
mov
xchg
popa
shlb
sti
inc
cld
outsb
mov
push
hlt
faddp
mov
push
mov
mov
imul
pop
jbe
add
mov
mov
fwait
adc
push
js
shll
imul
dec
add
pop
out
test
fcmove
scas
dec
iret
add
pop
cmp
fisttpll
mov
add
decl
push
call
jae
movsl
xchg
cmp
lret
and
adc
xchg
inc
xor
add
out
imul
bound
repnz
xchg
xchg
cmp
xchg
mov
loope
xchg
mov
or
mov
push
jbe
pop
dec
inc
sub
test
jle
mov
cli
lret
movsb
arpl
addr16
sbb
test
das
fwait
sti
xor
rol
mov
xlat
fstps
repz
sbb
es
shll
push
inc
cs
orl
mov
mov
dec
loope
test
leave
pop
inc
xchg
pop
into
ficompl
sub
add
dec
add
inc
dec
fmul
cld
mov
xor
outsb
insl
es
idiv
add
movsb
movsl
lods
mov
sub
int3
cli
jle
jno
out
xor
lret
xorl
xchg
clc
or
dec
mov
and
pop
pop
outsl
and
xchg
dec
outsb
sbb
call
mov
scas
das
sbb
push
sub
sub
popl
out
dec
int3
icebp
or
jge
imul
mov
mov
js
jg
adc
jno
testl
mov
stos
icebp
sbb
xchg
ljmp
orl
sbb
sbb
cmpsb
lahf
lcall
enter
js
dec
ja
sbb
test
and
dec
xchg
popf
mov
mov
xchg
in
cli
jns
push
sub
sbb
push
cmp
push
xor
pop
dec
andb
mov
lret
lock
add
jmp
adc
movsb
mov
xlat
shll
outsl
and
cmpsb
ficompl
fs
inc
fmul
scas
inc
aas
popa
test
sub
jne
ja
pop
cmpsb
sbb
cs
ret
push
mov
shlb
or
mov
les
pop
ja
movsb
jl
cld
pop
cmp
inc
add
int
sub
cmp
inc
cmpsl
adc
and
movsl
int3
fxtract
cmp
dec
rcr
lock
daa
add
and
fiaddl
mov
mov
jl
loopne
mov
adc
nop
add
ljmp
dec
int
incb
cmp
clc
jl
xchg
pop
inc
xchg
jno
mov
xchg
mov
and
fsub
gs
pop
aam
dec
adc
enter
stc
sub
jle
mov
enter
cwtl
fisubl
cmpsl
shll
aas
cmp
test
aas
lods
mov
push
xchg
push
int
mov
fucomp
sub
push
xorl
test
cmp
cmpsb
xor
rclb
mov
push
cmpsl
add
scas
bound
sub
loopne
fld
cld
ficompl
mov
das
ja
jne
xchg
movsl
dec
add
aas
adc
mov
test
inc
sub
inc
cmp
repz
cmpsl
adc
or
dec
push
lock
jb
dec
cmpsl
test
mov
xchg
jecxz
mov
in
lods
lcall
and
mov
jb
ret
std
adc
inc
fmull
cmp
rcll
add
xchg
lcall
bound
inc
outsl
push
enter
dec
pop
lcall
out
call
xchg
imul
push
inc
ds
cs
mov
xor
js
and
outsb
insl
stos
divb
cmp
subb
enter
std
mov
and
xlat
outsl
cmpsb
push
push
inc
and
jge
dec
insb
insb
or
jge
stos
pop
dec
in
data16
test
stos
movsb
sub
or
mov
ss
sub
or
cmpsb
adc
pop
scas
xchg
sub
inc
outsl
xlat
in
rclb
rclb
xor
inc
popf
jl,pn
adc
lods
test
pushf
mov
gs
inc
je
xchg
out
push
lcall
dec
cmp
mov
inc
push
xchg
jg
lret
stos
loopne
xlat
inc
shl
jbe
and
xchg
mov
into
push
ficompl
cwtl
stos
mov
out
out
leave
cli
in
lock
inc
insb
fstps
out
push
aaa
mov
dec
xlat
outsb
pushf
pop
mov
pop
clc
repnz
push
cltd
or
xchg
jnp
xor
fidivrs
mov
daa
loope
shlb
push
repz
aaa
adc
jmp
add
add
jl
xchg
push
jmp
xchg
loope
mov
dec
cmp
mov
test
mov
cmpsl
xor
out
cld
popf
xor
sub
sti
xor
jg
or
insb
ret
cli
push
inc
std
mov
hlt
mov
dec
and
pop
push
mov
push
xor
nop
adc
inc
cmp
sbb
mov
mov
sbb
jo
xor
push
out
mov
add
mov
cmp
or
add
movsb
nop
xor
inc
add
jae
add
jge
test
push
sbb
stc
cmpsl
bound
inc
lret
movsb
pop
lcall
and
test
lret
sbb
loopne
dec
sbb
addr16
lds
cmp
xchg
sti
std
lods
jo
mov
mov
xor
scas
adc
ljmp
adc
rorl
xlat
jns
test
sub
adc
arpl
jl
jno
popf
sub
push
sub
stos
in
ret
and
ret
es
out
fists
cli
ds
cmp
loop
loop
sbb
cmpsb
outsb
push
repz
adc
int3
lcall
pop
mov
data16
cld
stos
dec
clc
int
add
mov
shlb
or
push
jne
sbb
jecxz
fwait
mov
or
pop
loopne
cmp
xchg
inc
push
fs
pop
cmp
pop
mov
aas
pop
out
stos
xchg
mov
pop
pop
jnp
lea
ljmp
insl
enter
popa
inc
cmpsb
movsb
lret
jmp
adc
cwtl
aas
xor
ja
flds
lods
inc
sub
sub
mov
push
sbbb
aad
rcr
jle
mov
adc
mov
stos
push
and
push
mov
mov
call
ret
negb
sub
pop
in
jno
js
sti
subb
ja
shlb
leave
out
orb
fstl
pop
iret
dec
jns
xor
push
int3
les
inc
pop
pop
popa
stc
sti
pop
movsl
pop
adc
js
out
lcall
addr16
mov
imul
imul
add
lock
push
movsl
pop
xchg
lahf
daa
out
cmpl
cld
dec
push
adc
mov
sub
arpl
fstps
jo
jne
icebp
daa
and
add
and
sbb
mov
xor
es
xlat
mov
dec
or
loope
inc
stc
push
lds
arpl
cwtl
dec
mov
into
stos
sub
xchg
subb
mov
divb
cli
mov
mov
add
sbb
inc
das
shrl
add
arpl
data16
cmpsb
mov
sbb
aad
cmp
xchg
repz
jo
ss
mov
outsl
or
cli
repnz
mov
out
push
aad
std
rcrl
sub
adc
cmpsb
cmp
into
repnz
add
xchg
or
das
dec
add
js
sub
in
push
pop
test
lods
popa
xor
outsl
jbe
mulb
imul
or
leave
aas
adc
pop
jne
cmp
mov
ret
mov
enter
daa
cli
movsb
or
les
mov
mov
rcll
inc
push
mov
mov
scas
sahf
shll
xor
dec
mov
sbb
pushf
aaa
lret
sub
jae
xchg
or
mov
adc
jg
lret
cmp
int
das
push
and
pusha
ds
aaa
not
fcomi
jp
ficomps
cmp
repz
mov
pop
aas
cmpsb
dec
aam
sub
lock
and
subb
xor
sahf
dec
push
sub
xchg
ret
stc
pop
loopne
int
xor
repnz
pop
enter
xlat
sti
outsb
cmp
sbb
adc
mull
cli
dec
sub
repnz
insb
fwait
repz
aaa
test
sub
hlt
pop
inc
jle
xchg
int3
aad
out
pop
shl
adc
dec
out
xchg
icebp
fs
cmp
data16
push
loopne
xchg
inc
mov
inc
lods
inc
mov
pop
loope
and
push
cmp
pop
in
fwait
push
or
dec
das
imull
jge
or
mov
dec
jb
aaa
push
sub
cmp
daa
sub
or
sbb
fdiv
pop
std
sub
mov
gs
cmc
aaa
and
inc
sub
push
jp
or
mov
in
jecxz
inc
shl
bound
jns
mov
mov
mov
jb
mov
mov
ja
in
push
lea
mov
pushf
rol
push
idiv
fstl
data16
mov
xor
jo
sahf
shrb
pop
and
add
incb
or
int
jnp
insl
inc
gs
or
addl
pusha
push
ja
andb
ja
mov
dec
sub
les
add
cwtl
pop
pop
imul
call
sub
mov
ss
ss
sbb
addr16
bswap
cmp
bound
leave
mov
adc
fstpl
inc
mov
and
pop
adc
sti
in
sbb
leave
iret
test
mov
xor
mov
xchg
pop
stos
shlb
sub
jbe
fdivr
mov
or
stos
mov
jae
push
inc
jmp
das
mov
subb
inc
and
jle
leave
mov
repnz
jae
nopl
or
dec
je
or
js
mov
repz
dec
jle
mov
stos
dec
mov
jge
lcall
and
adc
inc
inc
out
fcomp
mov
or
add
inc
xor
loopne
dec
push
dec
fmull
pop
inc
dec
lahf
mov
movl
fbstp
js
ja
or
sub
insl
jo
ret
pop
push
jecxz
xchg
ficomps
push
dec
jns
gs
into
outsb
in
xchg
push
push
icebp
int
icebp
adc
idiv
shll
call
push
cmpsb
lahf
xor
pop
ret
sbb
jmp
push
and
push
mov
add
or
int
jmp
dec
add
adc
loop
scas
lret
or
pop
lea
cmp
mov
cmp
loope
mov
cs
enter
aas
pop
inc
inc
jmp
fidivl
lcall
mov
cmp
mov
aad
aas
stos
sub
sub
xchg
dec
lcall
inc
leave
xor
ret
lock
mov
xor
je
test
lcall
mull
dec
xlat
lods
mov
aad
adc
cli
pop
das
stos
fistpl
mov
and
inc
cmpsl
cmpsl
xor
and
std
sbb
stc
mov
push
jns
sti
daa
and
push
pop
adc
testl
test
mull
pop
sub
repz
cmpsl
loop
add
ljmp
cmc
adc
sarl
lret
fninit
shll
xchg
cmpsl
jo
ja
mov
pop
adc
sbb
bound
sbb
test
pop
movsl
aaa
gs
cmp
sbb
lock
repz
testl
adc
inc
sub
and
push
in
call
cltd
fwait
fwait
stc
clc
cmp
in
xchg
cwtl
cmp
jbe
sbb
or
mov
popa
mov
fsubl
int3
add
adc
fisttps
nop
push
push
outsl
mov
cs
push
xchg
adc
dec
ss
and
sub
sahf
fimuls
sbb
cmp
icebp
mov
jns
out
or
ja
stos
push
dec
pop
push
or
jmp
andl
mov
js
clc
stc
sub
sub
add
mov
cmpsl
xchg
or
push
push
xchg
xchg
imul
out
jle
mov
or
movb
jecxz
dec
repnz
sub
mov
sbb
test
pop
ret
mov
int3
flds
in
pop
mov
or
sbb
insb
cmp
icebp
shl
mov
jmp
orl
xor
jb
cmpsl
sti
fstpl
mov
dec
lcall
adc
mov
mov
xchg
sbb
and
xchg
lods
push
mov
and
push
or
enter
sbb
scas
mov
push
or
inc
dec
les
roll
jno
or
sub
mov
in
test
push
mov
mov
test
test
dec
ljmp
mov
mov
cmpsb
ffree
lods
mov
dec
cltd
mov
adc
add
leave
sbb
mov
cmp
in
in
push
rclb
shlb
mov
ss
ljmp
fsubl
les
or
or
ficoms
lds
add
xchg
jnp
cwtl
mov
cs
aad
push
pop
rep
popf
mov
jns,pt
push
dec
xor
push
psubq
stos
das
sbb
dec
sti
push
shlb
and
xchg
mov
outsl
push
fadd
dec
movsb
jp
cmp
jo
fdivrl
mov
stc
xchg
sahf
lret
push
in
cwtl
psrlw
and
push
lods
mov
mov
xchg
ja
je
add
mov
test
mov
mov
sub
inc
out
ja
sub
call
mov
stc
sbb
ja
push
imul
outsb
sub
inc
adcl
mov
das
lahf
ret
sbb
mov
pop
aaa
or
and
aam
or
adc
lret
push
add
or
es
pop
jb
sub
sub
hlt
das
jge
aad
pusha
or
cli
sub
leave
shll
sbb
pop
push
mov
dec
sbb
pusha
fidivl
xchg
inc
je
dec
ret
rorb
jnp
cwtl
repnz
hlt
jbe
add
sbb
fs
jmp
xorb
push
xor
push
in
xchg
call
jle
mov
je
arpl
pop
xchg
insb
test
mov
push
icebp
das
ret
and
mov
imul
inc
dec
rcrb
loope
inc
xor
mov
andl
lock
sahf
dec
dec
jle
mov
pop
sbb
mov
and
cmp
or
or
hlt
ljmp
fwait
push
pop
ljmp
cld
repz
inc
les
cmpsl
push
outsl
incb
push
movsl
lcall
xchg
xor
repz
dec
stos
and
mov
test
jmp
dec
loop
out
jne
push
enter
mov
shl
inc
dec
stos
xor
and
mov
int3
rcrl
fbld
int3
ret
push
ficoml
adc
push
pop
aas
inc
adc
not
sbb
jne
jno
xchg
mov
xchg
jmp
mov
rol
inc
mov
out
jge
xchg
hlt
jnp
sbb
call
movsl
testb
loope
repnz
mov
lock
adc
pop
xchg
push
mov
pop
lea
mov
bound
sarb
cwtl
outsl
popa
arpl
movsl
fildll
cmpsb
cwtl
adc
mov
add
xchg
mov
mov
mov
or
shl
and
or
scas
push
sbb
sub
add
pop
data16
add
out
jmp
sar
dec
mov
dec
pop
or
lock
and
sbb
xor
jg
scas
sub
push
in
fwait
lret
jmp
stc
or
loop
xor
clc
inc
push
adc
pop
and
cs
mov
mov
cli
mov
fwait
push
stos
and
adc
push
insl
mov
fstpt
std
shll
addr16
xor
mov
inc
insl
fadd
bound
test
inc
cmp
mov
add
loop
cmp
and
push
test
mov
arpl
cmp
rcrb
xor
jmp
das
xchg
mov
movsb
mov
mov
imul
sub
pop
adc
cmp
fwait
push
mov
lods
stos
sbb
add
cmp
xor
sbb
or
xor
cmpsb
mov
adc
je
mov
push
mov
xchg
xor
shll
jns
sub
popa
xor
sub
out
mov
push
push
mov
test
cmp
mov
nop
mov
subl
and
xchg
xchg
es
fyl2xp1
sbbb
xchg
loopne
test
and
mov
cmp
clc
xor
cltd
mov
xor
pop
xor
jmp
or
rep
lahf
push
jl
pop
stos
mov
jo
xchg
cmp
adc
push
dec
push
js
lock
cmp
into
and
adc
sub
push
mov
inc
dec
cs
std
ss
icebp
xlat
pop
js
insl
lea
jns
sti
lock
call
fwait
xchg
mov
loope
popl
pop
push
dec
in
dec
jecxz
mov
std
aad
mov
cmpsl
lods
xor
andb
xor
out
sub
popa
aad
inc
mov
mov
sbb
push
orl
push
xchg
nop
test
or
inc
addr16
lahf
test
jne
aad
dec
rcr
movsb
cltd
mov
jo
sbb
std
mov
push
sahf
icebp
cmp
mov
mov
lea
pop
lods
leave
push
sbb
lds
or
xor
add
and
push
jns
cltd
pop
lcall
insl
out
jmp
outsl
and
dec
cltd
cltd
cld
adc
xchg
mov
pop
in
imulb
inc
bound
cli
sub
lods
and
sub
push
xchg
mov
or
xchg
push
aas
je
or
jae
aad
aam
sbb
sbb
ds
repnz
lret
das
aam
adc
rclb
je
xchg
test
shll
adc
sub
ret
dec
inc
test
pop
and
mov
and
cmc
pop
pop
mov
xchg
jno
mov
inc
push
out
mov
xlat
repnz
push
and
movsl
push
jno
enter
fwait
in
mov
dec
scas
cmp
sbb
mov
dec
or
loop
cmp
enter
arpl
std
cmp
pop
pop
andl
pop
xchg
lods
lret
inc
cmp
fcompl
and
lods
lret
push
pop
mov
lret
mov
sbb
jbe
insb
cmpsl
insb
xor
adc
mov
jmp
into
outsb
outsl
pop
jecxz
cld
mov
mov
xchg
dec
aaa
and
subl
mov
mov
mov
clc
mov
push
popa
ja
in
pop
cmp
mov
mov
shlb
movsl
rorl
pop
and
pop
fwait
inc
xchg
xor
scas
call
push
das
fs
cmpsl
xchg
add
push
repnz
adc
xchg
inc
sahf
test
mov
xchg
shrl
mov
xchg
cmpsb
out
cld
push
gs
push
or
mov
cmp
push
jno
sub
xor
out
aad
shl
fwait
mov
in
fildll
test
xor
mov
fisttpl
ljmp
fimuls
cmp
push
or
stos
dec
pop
or
pop
ss
imul
inc
mov
idivb
jne
pop
push
rorb
or
test
in
sbb
iret
insb
lret
loop
jne
pop
dec
mov
xor
inc
insl
sbb
cmp
cwtl
jbe
and
lahf
push
loop
aaa
das
int3
dec
sahf
jns
or
sbb
repnz
jo
dec
xor
mov
out
addr16
ret
mov
out
cld
stos
les
lret
sarb
push
test
add
aam
rcrb
mov
push
adc
cmp
jmp
cmpsb
insb
data16
xchg
sub
mov
lahf
jl
pop
xor
ljmp
dec
dec
lds
adc
push
mov
jnp
jecxz
loopne
sub
cmc
aas
mov
mov
xor
ljmp
jle
and
scas
int3
icebp
pop
sub
pop
dec
out
push
add
ss
stc
fcoms
rorl
pop
sub
adc
jb
imul
call
dec
xor
shlb
aam
and
packsswb
jl
lret
icebp
in
or
jge
jge
in
lds
cwtl
stos
daa
loop
xor
imul
push
out
or
shlb
iret
mov
push
pop
xchg
shll
sahf
in
loop
mov
loope
cli
repz
insl
call
inc
int
lock
sbb
mov
nop
push
iret
jle
or
fsubl
dec
movsl
stos
ljmp
out
mov
xchg
lret
into
sbb
cmp
sahf
cwtl
and
mov
fdivr
rorl
push
cmpsl
ljmp
push
push
fwait
hlt
clc
xor
add
push
loopne
test
mov
inc
mov
adc
lock
xor
rcll
pop
xorl
out
sbb
cmp
adc
mov
out
rcrb
jecxz
xchg
adcb
std
adc
out
ret
icebp
dec
movsl
pop
lcall
mov
decl
aas
push
je
ss
dec
cmp
add
adc
mov
xlat
pop
jmp
and
dec
leave
sbb
push
xor
or
cli
icebp
test
sub
in
mov
fimuls
cli
push
es
push
and
test
sbb
and
div
iret
in
pop
or
cmp
pop
cmp
cltd
inc
inc
outsb
or
pop
cmp
mov
mov
ljmp
jle
mov
dec
bound
mov
shrl
js
pop
nop
int3
iret
sub
lahf
jae
push
mov
xchg
out
ja
adc
shlb
xlat
and
popf
mov
push
pop
fchs
inc
mov
fsubl
jmp
jmp
xchg
jmp
xor
dec
in
jne
mov
or
and
test
add
xchg
cmp
cmpsl
pop
movsb
and
enter
daa
lea
jge
lcall
sti
mov
xchg
pop
ds
outsb
dec
enter
adc
cmp
or
dec
stos
or
les
inc
and
or
fldt
push
jge,pt
sub
mov
xchg
fisttpll
dec
jecxz
pop
jns
outsl
rcll
call
mov
enter
or
shl
jne
push
lock
test
jb
clc
sbb
faddl
sets
mov
daa
xor
mov
outsl
xor
mov
xchg
inc
mov
clc
xor
outsl
pop
cli
xchg
mov
sbb
clc
dec
jnp
push
adc
mov
mov
ret
mov
xchg
cmp
and
nop
mul
movsb
dec
outsb
dec
cmp
push
cltd
xlat
inc
add
int3
cmpsb
repz
call
lods
push
aas
inc
mov
mov
cmpsl
inc
mov
lds
cmpb
push
ret
sub
ljmp
or
lock
mov
sbb
fs
in
push
mov
movsb
add
arpl
dec
into
inc
fmull
cmp
cmp
xor
jmp
iret
dec
add
lret
cmp
and
clc
sbb
or
inc
popf
inc
rcll
cwtl
add
jl
loopne
and
push
adc
lret
adc
xor
sub
cld
mov
lahf
mov
sub
daa
push
sbb
test
out
add
jmp
stc
js
push
std
mov
jl
xor
test
sbb
mov
popf
adc
mov
push
and
mov
push
inc
push
jb
pop
xchg
xor
cmp
aad
mov
stos
das
jae
jle
sbb
pop
mov
arpl
imul
jl
pop
in
xchg
cmp
xor
cmp
dec
pop
jno
jnp
shrl
shlb
inc
push
jle
xchg
mov
xchg
sbb
inc
pop
xchg
bound
cld
rolb
and
cmpsl
xorb
xor
pop
loop
push
push
nop
mov
in
push
adc
pop
lea
dec
shlb
inc
loope
mov
jb
ja
shlb
mov
mov
inc
pop
fwait
sbb
fcomp
ror
push
mov
pop
push
cmpsl
push
mov
cmp
push
pop
mov
cltd
pop
dec
push
xchg
cltd
xchg
dec
stos
js
in
shrb
pop
arpl
push
mov
fcomps
pop
aam
ss
mov
adc
rorb
xor
and
loope
outsb
xchg
or
sbb
sarl
in
xchg
ja
adc
lds
and
fs
popf
adc
sub
hlt
adc
mov
jg
int3
mov
mov
fsubrl
scas
into
mov
ror
pop
xchg
aaa
sbb
fs
mov
add
mov
jmp
and
mov
mov
arpl
mov
pop
dec
mov
ret
sub
popa
shlb
inc
jl
test
push
sub
pop
inc
sub
or
bound
fs
jb
lock
push
outsl
mov
daa
out
jo
ljmp
in
mov
pop
xchg
and
jle
loopne
int
mov
fbstp
stos
push
fwait
xchg
insl
sub
js
pop
int
enter
inc
jl
cmp
mov
fsub
inc
addr16
push
push
or
lods
mov
mov
sbb
dec
out
iret
cltd
data16
add
aas
lods
mov
dec
adc
push
clc
aam
and
xchg
add
cmp
sub
cmp
scas
in
gs
sub
push
jmp
push
imul
into
push
je
pop
aaa
iret
stos
mov
xchg
les
mov
xor
xor
push
jbe
push
cmpl
or
adc
or
inc
xchg
insb
jne
mov
pusha
cld
or
gs
add
gs
mov
inc
pop
lods
bnd
sbb
add
lds
adc
jbe
rorl
inc
xchg
pop
cmp
je
stos
or
hlt
into
cmpsl
shl
fcoms
pop
and
sub
or
inc
add
subb
push
jge
or
sbb
mov
cmc
lahf
inc
push
sti
jg
test
pop
xchg
pop
aaa
sbb
sbb
roll
repnz
out
push
pop
fdiv
rcrb
test
mov
cmp
mov
mov
popf
push
enter
test
fcomps
sub
daa
data16
sbb
xchg
pop
loopne
mov
lods
add
mov
add
or
and
fidivrs
sbb
inc
mov
test
mov
js
cmp
lahf
lcallw
dec
sbb
lds
add
cmp
sub
fcoml
cs
dec
imul
sub
fs
aam
mov
add
add
repnz
jnp
inc
mov
mov
pop
mov
pop
pusha
sub
xor
jl
stc
xor
mov
add
mov
inc
push
adc
dec
jno
pushf
loopne
dec
ds
pop
sub
push
add
adc
mov
scas
xchg
fnstsw
int
mov
arpl
add
test
xchg
int
mov
movsl
adc
ljmp
pop
or
out
dec
lods
xchg
jl
daa
xchg
aaa
mov
std
notb
lcall
mov
and
fdivl
repz
fimuls
push
mov
cmp
das
and
movsb
push
add
mov
mov
xor
jo
xchg
add
rolb
pushf
or
xor
sub
cmp
mov
ds
stos
cmp
mov
into
test
dec
jo
push
mov
pop
mov
jae
gs
ret
mov
mov
sub
nop
sub
daa
xchg
stos
jg
add
push
icebp
enter
jns
inc
insb
mov
fxtract
out
push
or
lcall
adc
mov
ss
cld
hlt
pushf
sub
mov
mov
fldt
pop
mov
fdivrl
fistpl
xchg
sti
pop
xlat
test
lahf
push
pop
jns
scas
orl
push
mov
int3
sub
mov
fwait
sub
add
sub
js
jns
jns
jecxz
mov
xor
fs
push
jno
inc
xor
jns
jb
lods
repz
xchg
push
push
or
adc
push
adc
dec
sbb
cwtl
xchg
lcall
sbb
loop
test
fnstenv
ret
testl
xor
mov
cmp
inc
cmp
pop
dec
hlt
sbb
into
pop
out
arpl
enter
aam
cltd
out
inc
xchg
data16
repnz
popf
pop
inc
in
mov
mov
fxch
push
sub
cmp
les
mov
or
or
lret
jl
sbb
push
mov
cmp
jmp
nop
jle
pop
xlat
cmpsl
jl
test
push
jmp
sub
push
testl
sub
iret
sahf
pop
adcl
dec
pusha
mov
cli
daa
push
aas
xor
cmp
aas
fmuls
xchg
push
ja
int3
push
fsubs
mov
mov
cld
push
push
xchg
ljmp
decl
xchg
sbb
xchg
mov
cmp
fisubs
mov
adcb
xchg
mov
jle
repz
push
outsl
scas
cmc
pop
mov
xchg
inc
add
push
sbb
sub
sbb
mov
cmp
mov
pusha
pusha
popa
cltd
fwait
call
les
and
cwtl
cmpsl
divl
jnp
mov
fisubs
out
rcrb
adc
mov
movsb
add
test
test
mov
les
aas
testb
mov
mov
push
dec
mov
lret
sbb
pop
adc
xor
montmul
cmpsb
test
or
and
push
test
lods
in
mov
pop
out
aad
mov
in
lods
repz
movsb
bound
add
in
out
push
int3
mov
lods
mov
outsb
outsl
push
je
add
mov
pop
fstps
xor
mov
loope
addr16
add
fcomps
pop
cmp
imul
and
cld
lcall
mov
dec
or
inc
gs
mov
mov
int3
mov
out
push
out
mov
cld
and
cmp
je
js
push
in
or
stos
fistl
pop
test
push
xor
mov
ror
out
nop
stos
mov
mov
pop
lret
adc
add
sbb
xor
icebp
mov
out
push
mov
pop
jecxz
iret
cmpsb
pop
andb
mov
dec
cltd
in
pop
fs
das
and
sub
testl
out
movsl
in
cmp
int3
test
aad
das
add
jge
jle
jecxz
pop
ret
mov
js
xor
outsb
xor
push
adc
jnp
ljmp
stos
xor
cli
push
lea
dec
pop
ljmp
fcompl
dec
shlb
jbe
inc
loope
adcl
stc
mov
ja
in
rorb
ret
test
lods
cmp
arpl
cmc
fiaddl
loope
push
lds
xchg
inc
call
in
sti
sbb
sar
pushf
int
pusha
cwtl
ds
sbb
pop
inc
out
pusha
bound
pop
sub
or
pop
add
adc
pop
jne
gs
jbe
mov
mov
fidivrl
das
adc
test
mov
pop
xor
or
imul
jl
sub
test
mov
lret
mov
push
out
xlat
decl
pop
push
xchg
pop
jae
mov
push
and
mov
sub
push
adc
aas
aaa
mov
mov
vdivss
jmp
jmp
inc
dec
jg
dec
insl
pop
cld
addr16
fs
es
jnp
push
rclb
pop
loop
jmp
inc
xor
pop
hlt
mov
dec
lcall
jns
fstl
cpuid
mov
in
shll
jbe
xlat
cmp
cli
or
dec
insl
dec
and
repz
rcll
cmpsb
sub
dec
push
jne
mov
out
cmp
jns
push
lret
jae
sub
loope
mov
adc
out
cs
mov
or
mov
push
ret
jne
das
cs
lret
filds
in
and
in
pop
cmpsl
adc
push
popa
js
jne
mov
sar
adc
mov
xor
xchg
aaa
inc
mov
mov
mov
cmpsl
inc
mov
cmpl
int
inc
mov
xlat
ja
push
mov
cmp
fidivrs
repnz
add
test
mov
pop
inc
dec
sub
popf
xchg
cmp
mov
push
jmp
sbb
cwtl
orl
or
and
jg
scas
cli
movl
daa
fs
jg
out
rol
lret
sub
mov
test
je
test
test
mov
mov
sahf
movsl
and
jbe
fmul
xchg
cmpl
popa
adc
lock
ret
popa
scas
sahf
xchg
in
cli
pop
ljmp
xor
sbbb
ss
adc
mov
lahf
push
mov
mov
dec
scas
xchg
inc
fs
and
adc
mov
lret
mov
mov
xchg
xor
mov
lea
stc
scas
ds
mov
or
sub
repz
stc
jecxz
scas
je
pop
cmc
dec
aas
xchg
or
and
jae
mov
out
push
mov
lcall
rcr
adc
enter
xor
testl
lsl
xor
loop
iret
cmpsb
pop
sub
ss
xchg
lahf
and
dec
sbbb
cmpsl
push
sub
pop
cld
das
cmp
movsb
mov
enter
loope
xor
subl
sub
sub
test
sub
push
movsl
inc
sahf
rorl
cmc
popa
jae
pop
inc
inc
add
cmp
iret
stos
rcr
mov
call
mov
or
dec
jns
les
mov
test
dec
push
cmp
sbb
popa
ja
mov
enter
sbb
push
dec
jns
mov
jecxz
test
fwait
test
dec
pop
pcmpgtw
aad
push
mov
das
scas
insl
adc
lret
shr
pop
mov
inc
jnp
mov
and
jb
call
sbbl
push
push
xchg
cmp
jg
adc
inc
lret
inc
xor
sbb
pop
or
sbb
sahf
mov
pop
pop
lea
stc
into
cmp
xchg
sub
test
add
dec
aaa
or
sub
sbb
push
shll
clc
jo
aad
iret
xor
rcrb
xor
xlat
push
test
push
and
fucomp
pushf
xor
mov
mov
mov
andl
mov
loope
xor
call
data16
repz
addb
out
nop
lods
dec
mov
jb
mov
mov
mov
loope
push
in
cmp
cmp
dec
inc
pop
leave
test
arpl
jno
or
data16
mov
adc
pop
popf
push
sub
in
cmpsb
fisttpll
in
into
push
and
mov
sbb
cltd
push
mov
mov
mov
jbe
std
dec
notb
das
xchg
in
mov
in
or
int
roll
push
out
push
lret
out
je
mov
stc
xchg
stc
sbb
mov
shlb
push
mov
dec
add
xchg
pushf
mov
xchg
dec
adc
pop
addb
inc
mov
mov
cmp
push
pop
mov
int
in
in
enter
push
shl
rcl
mov
out
mov
data16
in
push
test
xchg
popf
shrb
clc
fidivl
push
mov
hlt
sbb
bound
or
xchg
and
add
add
lock
daa
mov
in
cmp
leave
xor
fsts
and
pop
inc
movsl
lock
add
std
rcrb
out
call
mov
insl
in
jmp
mov
add
mov
cmp
pop
and
aam
lods
stos
das
inc
das
push
mov
call
mov
adc
jo
sbb
xor
sar
loopne
ja
lods
mov
xor
sahf
push
outsb
jecxz
enter
insb
into
rolb
xor
pop
rcrl
loop
ja
int
pop
sbb
int
hlt
inc
pop
fmull
std
fdivs
mov
mov
jecxz
jecxz
cli
repz
jae
xchg
mov
int3
push
in
ja
shl
mov
lock
pushf
jbe
stc
pop
jg
jno
or
mov
lods
xchg
xchg
mov
repz
inc
and
add
sbb
test
andb
loopne
jns
or
das
pop
dec
out
dec
dec
xchg
inc
es
fsqrt
addl
popf
xor
cwtl
adc
mov
jns
and
popf
pushl
sub
dec
sub
inc
loopnew
orl
sbb
pop
std
lahf
cld
fucomi
mov
inc
faddl
sbb
mov
sub
push
or
cmpsb
add
out
add
lret
push
ds
inc
xchg
inc
push
popf
sbb
inc
sub
mov
adc
gs
mov
sub
sbb
fimuls
mov
and
sahf
cmp
adc
in
sub
push
add
outsb
mov
mov
in
inc
ret
xor
mov
inc
sbb
aad
push
add
mov
push
sbb
xor
adc
inc
lea
jno
and
mov
push
or
mov
cmc
xor
add
push
mov
pop
inc
push
or
dec
mov
pop
movsl
out
adc
in
out
cmp
imul
lahf
neg
std
jecxz
cs
movsl
cmp
lds
out
hlt
pop
rcll
leave
movl
and
push
loopne
add
cmp
jbe
jp
mov
fmul
cmpsb
lds
mov
in
icebp
xorl
je
shlb
push
xchg
mov
mov
mov
pop
xchg
pop
sbbb
shrb
xchg
lret
xchg
mov
and
inc
sub
and
test
mov
add
aaa
pusha
dec
rcrl
lea
mov
mov
lock
add
adc
sub
push
sub
js
push
ja
shlb
jmp
orl
jo
sahf
sahf
std
enter
out
sub
aad
xchg
andl
and
addr16
out
mov
icebp
fs
repz
icebp
es
sbb
popf
sbb
jno
jnp
push
xchg
in
les
sbb
outsb
repz
lahf
lea
ficompl
mov
xchg
fld
and
rcrb
pop
mov
test
filds
and
aas
icebp
and
insl
int
addr16
cmp
sbb
sub
dec
sub
or
in
jne
sarb
ljmp
push
pop
and
bound
fisubrl
cmp
aad
test
aad
adc
loope
push
or
push
ds
clc
or
mov
sub
popf
mov
push
mov
call
jecxz
and
je
xor
outsb
and
inc
adc
rcr
or
test
int
test
pop
or
loopne
push
add
lahf
into
movsb
add
fdivl
sbb
mov
aam
jnp
pop
jnp
xor
xchg
jne
sub
lea
jge
lahf
and
xor
adc
cmc
aam
int
xchg
mov
mov
ja
push
and
pop
dec
lret
push
pop
jne
test
aas
mov
dec
mov
negb
jle
mov
out
mov
insl
or
xlat
pop
in
stos
mov
clc
cmc
lret
lret
push
out
jo
stos
dec
sub
pop
addl
mov
mov
mov
dec
loop
les
sub
jp
lock
push
pop
adc
and
xchg
jno
jb
jo
jo
pop
std
lret
lock
enter
daa
arpl
in
pop
add
or
xchg
cmp
or
or
insb
inc
les
stc
or
loopne
xchg
or
testb
fmul
jmp
dec
jnp
xlat
divb
mov
jg
dec
loop
jne
shlb
das
inc
pop
pop
outsb
push
jmp
fistpl
ljmp
or
push
dec
aad
mov
je
arpl
pop
push
dec
lods
imul
rcr
outsl
cmpsb
pop
sub
push
xor
scas
xchg
push
mov
sbb
xor
lock
icebp
sarb
push
int3
int
push
rclb
call
mov
xchg
test
or
leave
mov
leave
test
imul
lcall
sbb
ss
push
add
aad
sahf
jns
pop
mov
orl
xor
pop
js
sbb
fisubs
jg
adc
into
jne
jo
xchg
xor
fldt
dec
imul
pop
or
fildl
arpl
and
or
jbe
in
push
xor
jmp
xchg
sub
mov
xchg
mov
stos
mov
dec
push
jno
adc
mov
cwtl
nop
mov
and
int
sarb
imul
popa
cmp
adc
push
mov
push
cmp
sahf
cmovg
mov
dec
inc
cmp
jns
lret
filds
or
ss
cmp
lds
test
out
mov
loope
pop
mov
stos
xor
or
xchg
push
loopne
sbb
pop
mov
notb
xchg
outsb
leave
and
lret
mov
xchg
adc
sbb
and
enter
dec
add
shlb
or
xchg
push
mov
lea
loopne
in
mov
imul
pop
sbb
pop
dec
pop
cmp
jl
aaa
clc
aad
popa
jo
imul
clc
add
xor
pop
dec
adc
clc
enter
enter
mov
aas
repnz
adc
sbb
jns
pushf
dec
mov
filds
sub
jbe
inc
bound
pop
mov
repz
lds
jns
pop
dec
mov
out
mov
cli
xchg
mov
or
fucom
shll
jmp
add
mov
fsubrl
xchg
insb
and
cli
mov
pop
push
ds
xor
ds
sub
jecxz
dec
cmpsb
inc
jnp
jg
mov
mov
cmc
or
fcomps
and
test
cli
dec
sub
aaa
or
xchg
mov
ficoms
subb
or
mov
inc
faddl
jns
push
adc
mov
cmp
xchg
sub
div
stos
and
call
jb
mov
in
mov
insl
ds
cs
inc
mov
or
xchg
mov
add
rcr
xchg
mov
xchg
dec
add
test
and
adc
scas
dec
mov
and
and
in
cmp
or
adc
arpl
out
sub
enter
loope
rclb
inc
les
xchg
mov
pop
add
add
cli
dec
add
leave
test
scas
fdiv
daa
dec
or
xchg
in
push
movsb
addr16
xchg
aaa
mov
imul
xorl
xorb
add
mov
mov
mov
popa
dec
leave
push
dec
loopne
pop
cs
jb
dec
cmp
dec
mov
mov
mov
out
imul
xchg
icebp
imul
xlat
add
hlt
mov
push
out
mov
pop
rcrl
push
fidivs
outsb
idivl
push
dec
xchg
dec
iret
loope
sahf
into
push
leave
rclb
mov
out
hlt
adc
jg
push
adc
or
or
loope
cmc
leave
bound
push
lock
aas
ffree
daa
jp
push
cmp
loop
mov
negb
pop
dec
and
shlb
push
add
pushf
in
cmp
fldcw
jb
sbb
mov
out
inc
xor
cmp
mov
loop
push
add
sbb
fwait
mov
lods
imul
les
scas
pop
or
add
sbb
insb
jbe
mov
movsb
add
pushf
ja
pop
lock
push
out
or
mov
jge
mov
lds
shrl
rcll
lock
jp
fdivs
jl
sahf
cld
mov
adc
fstl
push
push
sbb
cmp
mov
jl
in
shlb
es
or
jecxz
popf
in
fisttpll
rclb
jge
fistl
adc
or
es
and
mov
outsl
mov
xchg
sbb
inc
jl
mov
mov
lcall
add
ficompl
call
inc
out
loop
in
adc
mov
xor
dec
jp
jne
adc
pop
jmp
or
in
xor
or
lea
imul
cmpsb
leave
xchg
loope
fmuls
pop
xchg
mov
cmp
jb
xchg
pop
sub
fstpt
bound
outsl
jae
fdivrs
lods
hlt
mov
pop
pop
lea
xor
ja
ret
sub
or
ret
jnp
push
inc
popa
pop
ljmp
cmp
lss
cmp
addr16
nopl
outsb
xchg
pusha
xor
std
ss
dec
push
ficoms
gs
and
fistl
lods
imul
test
jmp
pop
daa
push
idiv
rcl
push
lods
stc
jnp
mov
adc
or
push
test
xchg
sbb
xchg
adc
lock
mov
aam
or
imul
push
or
dec
cwtl
pushf
sub
xchg
or
adc
movsb
sub
pop
popf
in
sbb
fwait
xchg
loopne
hlt
add
cmp
sbb
scas
cltd
fbld
mov
cld
mov
pop
lea
xor
in
push
je
xor
push
call
mov
int3
dec
mov
jmp
pop
jbe
pop
movsb
ds
test
push
stc
ljmp
xor
mov
daa
dec
jno
stos
push
les
sub
adc
push
jo
jb
jmp
mov
in
cmpsl
ret
fnstenv
inc
outsl
xor
xchg
jp
mov
lahf
xor
sbb
lret
lret
pop
xor
adc
sbb
data16
or
rcll
pop
sbb
ret
mov
lret
jp
out
hlt
aad
iret
nop
mov
arpl
icebp
lahf
lods
jl
jb
xchg
pop
leave
jge
mov
mov
cmp
push
pusha
mov
jl
notl
and
mov
fidivrl
popa
outsl
mov
out
and
nop
and
or
mov
dec
dec
mov
dec
int
jo
xor
xor
cld
xor
jns
ret
test
test
xlat
inc
rorl
fstpl
or
and
movsl
cmp
test
push
test
cltd
inc
data16
nop
adc
dec
dec
mov
sbb
cmp
mov
xchg
loope
fnstenv
mov
push
repz
imul
cmp
dec
jle
sub
xchg
sbb
adc
mov
pop
xor
mov
and
test
ljmp
sbb
test
mov
paddq
inc
and
push
and
into
jno
mov
sub
scas
cmp
or
sbb
movzbl
stc
cmp
lock
std
stc
lock
call
adc
xacquire
cltd
push
sbb
xchg
test
icebp
mov
push
inc
addr16
mov
jl
jmp
movsl
fstpl
cmp
dec
sub
and
shl
xor
loop
pop
dec
iret
cli
push
js
stos
das
je
push
inc
adc
movsl
jp
daa
test
ljmp
clc
pusha
or
imul
or
adc
pop
shrl
cli
cmp
jmp
ss
pop
stc
sbbb
lret
out
jb
ja
popf
pop
sub
shll
arpl
add
sbb
push
pop
jb
inc
mov
cwtl
jns
out
ret
dec
fdivl
mov
mov
insb
lahf
sub
cmp
sbb
lods
push
out
stos
cli
test
xchg
jecxz
push
adc
inc
sbb
mov
aas
jmp
jl
lea
xchg
mov
in
mov
call
movsb
imul
lock
in
jg
mov
jmp
jne
gs
sub
jb
add
or
mov
xchg
dec
sub
push
das
mov
adc
add
jge
xchg
jae
cmp
seta
and
mov
inc
sarl
sub
shrl
lea
and
ss
xor
scas
jle
mov
sub
cs
cltd
mov
jbe
sbb
cmpsb
ficomps
jecxz
loope
int3
pop
or
negl
rorb
sti
inc
insb
push
gs
fwait
inc
adcl
std
leave
insl
adc
lahf
and
add
mov
loopne
push
shlb
add
xor
sahf
xchg
loop
das
loopne
test
xchg
repnz
cmp
ss
icebp
push
xlat
jmp
jno
cmp
stos
jne
das
xchg
into
mov
mov
add
pop
into
and
in
das
arpl
cld
cmp
pop
mov
lea
dec
dec
or
lahf
or
and
enter
nop
int
aam
cmp
adc
mov
adc
sub
stc
or
nop
icebp
les
shl
jae
xor
xchg
popa
xor
sub
icebp
mov
inc
cmpsb
icebp
in
dec
fdivrp
mov
int3
cmp
cwtl
cld
aaa
lret
and
add
xchg
or
push
fldz
imul
aam
sbb
sub
or
pushf
cmpsb
mov
pusha
fimull
in
push
add
xor
out
std
xor
aam
sahf
sahf
stc
mov
sub
aam
je
in
mov
add
push
dec
cmp
cmp
out
dec
ret
fsubrs
push
and
sub
iret
and
push
sbb
jg
js,pn
inc
lds
popf
jae
pusha
notb
loopne
test
fcompl
cmp
add
cmp
leave
loopne
iret
lret
xchg
aam
adc
lea
movsb
push
adcb
push
sbb
dec
push
cmp
mov
xor
fsqrt
inc
out
jb
mov
fwait
es
dec
aas
xor
in
outsb
jno
cmc
cmp
and
jne
mov
mov
xchg
sarb
sbb
cmp
negl
outsb
jmp
mov
or
imul
hlt
loopne
mov
dec
inc
jne
xor
inc
testl
mov
aad
mov
pop
sbb
enter
mov
pop
pop
pop
jns
ficomps
notb
dec
mov
hlt
mov
in
data16
stos
outsb
push
sbb
mov
jo
jo
mov
and
icebp
pop
add
xchg
or
xor
mov
call
xchg
mov
inc
xor
inc
lods
fdivrl
lret
leave
or
in
jp
notw
xchg
push
and
daa
lcall
dec
cmpb
mov
gs
adcl
stc
mov
shr
fistps
jbe
cs
push
fld
jae
lods
cltd
jl
imul
pop
push
jge
lcall
leave
pop
pop
push
insl
pop
adc
aaa
in
in
mov
inc
mov
adc
mov
inc
push
imul
mov
adc
adc
push
aas
mov
mov
adc
std
inc
lods
fwait
jbe
sub
inc
dec
xchg
int3
mov
lea
call
inc
lret
push
popa
add
mov
push
shlb
ljmp
dec
arpl
lret
cld
and
push
cli
xlat
push
lret
mov
inc
mov
mov
xor
int
in
cmpsb
andl
jno
sbb
call
divl
mov
jo
xor
and
rolb
dec
pop
xor
stc
adc
and
sahf
stc
fsubrs
xchg
lcall
pushf
scas
cmp
aad
jbe
push
nop
testb
sbb
jbe
and
pop
and
pusha
or
xchg
push
jg
shr
mov
adc
icebp
push
inc
ffree
jns
inc
outsb
xchg
addr16
arpl
xor
lock
jle
mov
lcall
loopne
add
lods
addb
mov
lret
aad
fcmovu
cltd
pop
mov
out
or
mov
loopne
in
xchg
bound
cmp
sbb
nop
xor
jecxz
inc
cld
lock
out
cli
test
xchg
or
mov
mov
add
lea
lods
and
pop
lods
mov
bound
stos
aam
ja
jns
dec
or
xor
loop
jno
daa
jbe
ss
enter
std
popa
std
xor
cmp
xchg
mov
test
add
stos
cmp
ret
outsb
pop
sbb
imul
scas
jge
popa
ret
lret
jle
cmp
bswap
dec
insl
shlb
push
jg
int3
mov
xchg
mov
mov
in
pop
or
cmp
popa
shll
rolb
jp
mov
fmull
iret
cmp
bound
cs
inc
mov
and
cs
pop
pop
roll
es
cmp
xor
stos
subb
data16
scas
lahf
loopne
clc
mov
xor
cmp
adc
insb
ret
cmpsb
gs
je
test
cmpsl
sbb
push
lea
inc
lret
imul
test
sbb
incl
xchg
pop
mov
cli
xchg
decl
inc
or
in
ss
cltd
push
sarb
test
fisttpll
pop
inc
inc
sub
push
js,pn
int3
pop
mov
repz
cmpsl
xlat
jo
pop
ficompl
adc
cld
cmp
out
xchg
ror
scas
lods
andl
or
stc
lea
mov
ret
fwait
adcl
cmp
pop
jmp
insl
add
dec
sub
push
or
xor
mov
shrb
xchg
pop
shr
cmp
fwait
in
outsl
dec
jnp
addb
out
pop
scas
mov
dec
lret
lods
fwait
sarl
sbb
cmp
jmp
or
scas
xchg
mov
lock
jb
in
jmp
inc
call
and
xchg
js
aam
dec
sub
mov
negb
cmp
jmp
fs
push
adc
rcrb
pop
sub
jge
enter
jb
cwtl
out
jl
leave
adcb
push
push
cmpsb
dec
adc
dec
pop
or
adc
movsl
cmp
rolb
insl
xor
in
es
test
in
xchg
push
mov
inc
mov
loope
mov
mov
and
imul
mov
mov
rolb
sbb
mov
mov
ret
dec
push
mov
int3
lahf
or
arpl
jmp
mov
and
mov
testb
out
cmp
jno
and
out
pmulhuw
xrelease
inc
pop
test
lret
add
mov
lods
scas
test
iret
xchg
out
pop
cmpsb
movsl
or
lods
pop
lods
pop
scas
ljmp
mov
jl
sbb
dec
mov
in
negl
imul
or
clc
cmp
cmp
movsb
ret
adc
sti
sub
push
sbb
fwait
bound
insb
pop
jne
sbb
out
rcr
sti
and
mov
test
mov
dec
setno
loopne
xor
nop
xor
sbb
and
shl
fs
ljmp
xor
xlat
cs
nop
fwait
jae
es
cmp
mov
stc
jne
popf
push
lea
stc
or
aad
add
js
sub
pushf
lods
mov
jns
jno
xchg
jecxz
rolb
loope
jecxz
gs
or
sub
pop
push
xor
lods
cmpsl
mov
shl
out
in
pop
push
in
sbb
add
stos
jbe
jle
pusha
in
mov
pop
pop
pop
addb
xor
pop
data16
cli
sbb
xchg
and
fsts
jnp
sarb
inc
int3
pop
daa
jns
cmp
mov
das
sbb
mov
dec
adc
pop
push
or
in
sbb
and
stc
dec
cmpl
sbb
dec
into
and
xor
out
popf
rcll
push
out
add
cwtl
sbbb
mov
adc
sbb
mov
pop
test
add
push
hlt
loop
inc
inc
pop
cltd
add
movsb
scas
sub
dec
lock
inc
mov
js
aad
inc
sub
jnp
inc
lcall
repz
push
enter
push
lahf
jbe
hlt
jecxz
dec
fdivrs
js
insl
mov
xor
popa
sub
jl
sbb
mov
mov
lea
jne
jl
mov
gs
inc
push
out
mov
enter
out
mov
cmp
ret
ja
psubusw
sub
gs
sti
jns
push
std
jmp
sbb
int3
lahf
cmp
bound
mov
mov
pop
ror
cmp
test
jnp
mov
fs
int3
loop
jbe
dec
jbe
sbb
jmp
xor
xor
xlat
in
xor
jmp
data16
js
mov
dec
sbb
mov
xchg
gs
hlt
sbb
pop
sub
sbb
jp
pushf
dec
lock
lds
mov
repz
dec
or
loop
jnp
push
rcll
jge
bnd
pop
push
lahf
mov
ss
xor
out
leave
sub
xlat
cld
popf
adc
inc
int
shlb
outsb
push
jg
das
fiadds
mov
push
shlb
pop
icebp
jne
and
movups
pop
clc
in
stos
sub
adc
mov
push
xchg
mov
pushl
insb
fnsave
ret
push
pusha
or
jo
in
lods
xchg
xlat
mov
aam
icebp
jb
into
jmp
insl
mov
mov
dec
loopne
rorl
fwait
imul
repnz
mov
sub
ret
mov
inc
jl
cmpsl
mov
cld
in
add
mov
jg
xor
or
pop
jp
inc
cld
test
xlat
popa
mul
xlat
push
jae
movsl
out
test
inc
mov
lea
sbb
orb
orb
std
nop
andl
sub
or
pop
insl
or
or
cmpsl
adc
ljmp
xor
or
fildl
sub
mov
or
mov
mov
rcrl
out
fisubl
jbe
fs
xchg
mov
mov
or
lcall
adc
rcll
cmp
subl
in
mov
xchg
lock
mov
std
lods
shlb
mov
mov
fsubs
mov
mov
and
mov
jne
mov
xchg
fisubrl
mov
ror
lahf
add
jb
lret
sahf
aam
out
popa
loope
push
in
mov
sti
dec
sahf
xchg
cmc
inc
sarb
clc
mov
push
lods
scas
or
xchg
in
jne
or
into
add
iret
imul
loopne
jge
mov
outsb
pusha
aaa
sbb
xchg
je
xlat
pop
inc
mov
cld
adc
mov
push
push
out
sub
inc
and
js
dec
inc
std
fisubl
or
jae
mov
jg
imul
xchg
inc
rcrl
dec
insl
fists
cmpsb
mov
repnz
insl
in
mov
cmp
push
lods
cmp
cwtl
fdivrl
sbb
inc
inc
pop
or
adc
lret
test
scas
dec
addr16
pop
ficompl
in
pop
push
add
in
orb
adc
cwtl
lcall
shrb
inc
jns
push
mov
aaa
jns
add
mov
inc
loop
cmp
inc
adc
cmpsb
and
jno
cld
xchg
sahf
jno
fwait
imul
je
pushf
jmp
cmc
test
xchg
arpl
xchg
pushf
and
dec
add
ficomps
rorb
xchg
jno
testl
push
push
sbb
sub
or
lods
aaa
repnz
push
aam
sbb
cmpsb
xchg
enter
mov
mov
sbb
popa
cwtl
test
and
aas
inc
icebp
adc
mov
mov
mov
xlat
arpl
mov
insb
lcall
or
push
mov
jns
jae
xchg
inc
mov
enter
inc
pop
mov
js
aad
inc
xchg
xchg
aaa
fxch
fsubs
mov
push
xchg
fs
lahf
clc
xor
pop
jg
scas
test
stos
mov
lret
nop
sbb
xor
les
add
cs
lock
jl
in
lahf
cmc
outsb
push
mov
xchg
ljmp
mov
sbb
mov
sbb
out
inc
inc
je
arpl
add
aad
xor
lcall
cmpsb
add
jecxz
dec
xor
inc
lods
push
and
or
out
imul
sbb
xor
rcrl
jle
mov
fs
dec
mov
lahf
lahf
out
add
out
mov
les
dec
ljmp
popa
rcrl
sub
sub
aad
mov
aad
es
adc
inc
dec
lea
jle
xchg
jae
push
xchg
cmp
mov
inc
cld
addr16
mov
cmp
aas
mov
pop
fstpl
sahf
add
mov
clc
inc
cmp
xchg
and
mov
and
push
pop
lret
cmp
pushf
sbb
int3
hlt
rolb
andl
jg
mov
jns
and
lret
icebp
xor
loopne
inc
les
mov
adc
lcall
pop
jl
mov
subb
jne
imul
adc
inc
push
pop
sbb
xchg
or
cmp
and
adc
js
sub
jno
push
insl
sahf
shlb
sbb
push
mov
cmp
mov
add
dec
cmp
push
xor
aaa
inc
fwait
imul
fucom
cli
xchg
jnp
mov
test
xchg
push
insb
and
dec
inc
loopne
push
icebp
pshufw
inc
adc
nop
or
out
in
ds
data16
adc
push
xlat
rcl
add
fstl
inc
leave
inc
lock
dec
cmpsb
iret
leave
adc
pop
jp
mov
jne
stos
inc
je
and
aaa
cmpsb
jnp
aad
loope
jge
or
lods
movsl
fwait
inc
xor
jae
xor
addr16
mov
loop
pop
addl
je
pop
int
mov
pop
xlat
lods
sarl
mov
xor
pop
fs
aam
mov
sub
fcompl
repnz
jb
jne
mov
cmp
inc
sub
das
push
push
ficomps
sub
xor
int
dec
fs
jle
dec
stos
xchg
int
adc
call
inc
mov
sarl
in
sub
hlt
and
rclb
or
insb
pop
cltd
cmpsb
push
and
lock
inc
or
mov
jno
mov
repnz
or
sarb
fists
out
cmp
xchg
cmpsl
jl
sti
sti
data16
stos
addr16
sbb
scas
bound
add
cs
push
das
insl
xchg
loopne
nop
movsl
xor
pop
cwtl
imul
lods
popa
and
and
inc
notb
pop
cs
les
call
jnp
mov
lods
inc
xlat
and
adc
dec
pop
pop
faddp
ja
xorb
mov
movsb
setne
movsl
push
xor
sbb
sub
popf
mov
call
popf
inc
sub
es
dec
ja
cmc
inc
add
insl
pop
mov
and
jle
xor
mov
rcl
in
into
dec
pop
dec
add
push
rol
popa
imul
mov
popf
mov
mov
or
mov
xchg
jae
js
push
enter
jo
mov
mov
lcall
or
inc
jnp
cli
cmpsb
sub
add
cmp
push
jp
ljmp
cmp
pop
add
cmovl
jl
sti
push
push
add
mov
data16
dec
dec
fstp
nop
scas
iret
cmpsl
icebp
in
sarb
ret
fimull
mov
fiaddl
scas
xchg
add
sub
cmpsl
mov
test
xor
jmp
cmpsl
leave
subb
pop
sub
sub
mov
mov
das
in
ss
push
pop
jo
mov
lods
addr16
xchg
xor
mov
and
cld
sub
lcall
xor
push
inc
out
fcmovne
ficoms
imul
cmc
add
in
or
xor
subl
rdmsr
sahf
lcall
cmp
and
rcr
lcall
sbb
ret
sub
fstpt
push
pushf
sub
pop
lcall
pop
pop
stc
insb
cmp
or
dec
inc
shll
cmpsl
cmpsl
stos
inc
out
mov
ss
sbb
sbb
jo
daa
and
push
mov
mov
gs
adc
mov
mul
cmp
leave
push
xchg
call
lea
lds
ss
movsl
or
and
sub
sub
out
shll
call
popa
cs
std
pop
inc
lods
insl
cmp
outsl
pop
dec
xor
and
lock
push
sub
in
mov
subb
and
push
adc
stos
pop
in
mov
or
pop
call
cld
into
sarb
mov
mov
jb
andb
repz
scas
mov
repnz
and
xchg
sub
mov
ljmp
dec
in
popf
fsubrl
and
cld
cmp
xorl
fsubr
add
ret
inc
shlb
out
cmc
popf
dec
dec
das
pop
mov
push
je
inc
and
add
jl
orb
xchg
pop
xor
mov
jmp
popl
leave
movsl
push
jg
jg
cmp
add
pop
xchg
lods
jae
mov
repnz
push
icebp
in
adc
push
add
mov
push
clc
in
into
jne
imul
pop
xor
nop
sti
dec
jno
outsb
cs
js
or
mov
sub
jne
mov
dec
jmp
cmp
ret
sbb
push
clc
jecxz
subl
jns
ds
test
xchg
xchg
fdiv
pop
xchg
cmp
je
mov
pop
es
fcompl
sbb
ds
sbb
je
dec
pop
push
fists
dec
lds
push
xor
aam
rcrb
insb
out
clc
sbb
jge
inc
push
mov
pop
push
mov
xor
enter
pop
icebp
or
pop
out
mov
inc
or
push
mov
out
jl
test
test
ror
std
fwait
and
dec
sbb
add
mov
pushf
mov
push
aaa
push
repnz
bound
xchg
xor
cmp
sbb
xchg
dec
sbb
pop
cmp
jo
stos
jmp
adc
cmpsl
andb
aam
mov
add
mov
jno
test
jp
lret
cmp
test
mov
leave
pushf
stc
movb
xchg
jb
clc
add
addr16
mov
or
or
stc
sysexit
iret
jnp
mov
push
loopne
adc
and
les
xchg
xchg
pop
mov
cmpl
lcall
int
call
dec
jno
rclb
in
push
jmp
rcrl
or
aaa
repz
out
test
cmp
inc
adc
or
adc
mov
dec
xchg
adc
icebp
dec
xchg
mov
shll
cmpsb
cmpsl
pop
xorb
dec
and
jbe
sbb
pop
pop
cltd
jno
lcall
mov
out
ret
push
loopne
adcb
jb
mov
jae
scas
mov
mov
inc
fwait
or
cmp
sub
call
dec
pop
jae
push
in
mov
cmp
enter
test
les
movsl
mov
sbbb
pop
les
adc
aaa
add
xlat
or
mov
ret
push
out
push
adc
or
add
fs
mov
sbb
in
test
sarb
loop
xchg
fwait
jp
xchg
xor
or
adc
jae
jmp
pusha
aad
add
jns
pop
pop
jp
lret
push
aad
lds
idivl
ljmp
aaa
mov
xchg
dec
into
jp
dec
pop
jne
movsb
setle
sbb
arpl
das
mov
adc
repz
loopne
sbb
jnp
adc
data16
dec
or
mov
mov
fdivrl
cmp
out
sysexit
inc
movsb
cs
insb
or
and
jl
sti
sub
mov
hlt
dec
ljmp
nop
cmpsb
or
pop
mov
fisubl
and
imul
repz
out
xlat
adc
mov
push
lret
unpckhps
fs
ljmp
and
sbb
icebp
fadd
nop
mov
jp
mov
movb
addr16
fcompl
push
xchg
xor
in
jno
xchg
and
mov
mov
iret
mov
sbb
mov
push
mov
adc
subl
mov
mov
adc
pusha
inc
mov
sbb
dec
mov
std
je
aas
std
dec
mov
mov
loopne
iret
inc
fldcw
mov
lcall
or
lcall
int
ret
iret
stc
dec
gs
or
dec
mov
movl
xchg
rcrb
hlt
xchg
cld
push
mov
in
mov
xchg
sbb
sbb
out
stos
add
xchg
inc
push
push
int
pop
xchg
pop
fcmovne
cld
push
in
cwtl
lods
mov
xchg
jle
sti
xor
push
mov
les
out
adc
xchg
in
sbb
jecxz
dec
or
pushf
ja
sarb
xchg
fsubrl
ror
push
pop
jno
push
lret
test
pushf
sbb
leave
cmp
sbb
sub
mov
pop
add
dec
stos
dec
jle
dec
into
sar
ljmp
sbb
repz
in
leave
ret
add
mov
insl
testb
ror
xor
scas
imul
and
frstor
lcall
repz
leave
inc
mov
ret
out
in
scas
int3
loopne
xchg
pushf
mov
cltd
imul
mov
pushl
xchg
inc
stc
clc
mov
pop
ljmp
dec
adc
adc
in
sub
fdiv
inc
mov
inc
sub
adc
out
xchg
sahf
mov
mov
cmp
mov
or
arpl
adc
cmp
shll
ret
sahf
ss
add
jbe
add
pop
push
pushf
sbb
xor
xor
sbb
pop
jl
adc
add
pushf
sub
bound
test
clc
xchg
loopne
mov
imul
lods
in
sbb
pop
add
mov
int3
dec
aas
adc
add
aas
or
pop
lret
sbb
jmp
pushf
jb
adc
test
sahf
xor
mov
cmp
mov
jl
sbb
les
or
addb
mov
ror
jnp
jp
pop
into
and
push
sbb
or
fs
adc
adc
pusha
imulb
and
mov
es
pop
fsubs
leave
jno
aad
adc
or
jmp
arpl
out
pusha
adc
and
dec
outsb
sarl
pop
mov
fisttps
punpckhwd
lods
inc
sahf
repz
mov
push
inc
sarb
sbb
dec
sub
andl
jns
daa
insl
incb
insb
imul
inc
or
inc
xor
sbb
push
pop
dec
mov
sti
inc
mov
vhsubps
xchg
dec
xchg
jmp
dec
sbb
lods
pop
add
jl
outsb
mov
sti
mov
sub
decl
xchg
shll
jns
stos
jns
je
pushf
stos
fiadds
stc
jne
mov
dec
mulps
bound
push
adc
dec
shrl
jno
sbb
aas
es
add
cmpsb
adc
xchg
pop
mov
lret
das
mov
shrb
add
jbe
addr16
jb
loope
dec
hlt
cmp
hlt
push
cltd
mov
and
jne
fdivrl
lock
add
movsb
mov
ret
movsl
add
mov
ret
insl
incb
addl
cmp
sbb
je
pop
lahf
fiadds
imul
and
inc
idivl
ljmp
adc
rorl
adc
loop
mov
xor
pop
movsl
sahf
add
mov
pop
xchg
dec
sti
xchg
mov
cli
neg
dec
mov
stos
addr16
jmp
mov
inc
cmc
mov
popa
repz
mov
xor
dec
pop
imul
adc
mov
loopne
dec
push
rol
aaa
inc
je
bound
or
xor
aaa
fiaddl
inc
inc
mov
cwtl
das
pop
pop
scas
loope
out
dec
jp
pop
push
and
mov
loope
mov
mov
jge
in
ss
fs
cltd
sbb
sub
jmp
lret
mov
mov
or
mov
push
loopne
mov
es
jne
and
push
lods
push
xor
cmp
xlat
out
es
xchg
hlt
jl
mov
inc
sbb
loopne
and
gs
push
in
sar
push
int3
jg
pop
popa
sub
push
and
push
dec
pop
loopne
test
cmp
or
xchg
dec
stc
cltd
mov
cmc
xor
pop
pushf
or
xchg
sub
ret
pop
mov
push
jmp
cmp
and
mov
out
jle
sahf
inc
push
enter
xchg
fistpll
scas
leave
add
push
std
jnp
popa
mov
sbb
jg
sbb
mov
mov
imul
fimull
fstl
leave
lahf
mov
ret
cli
lcall
repz
jae
in
arpl
sub
cld
push
mov
sbb
jge
jp
stc
les
fwait
sbb
mov
divl
dec
sub
stc
sub
imul
mov
loopne
in
ret
std
push
mov
sbb
pop
mov
add
xchg
lcall
addb
rcrl
lods
mov
icebp
out
test
imul
rclb
pushf
int
testl
insl
xor
push
aad
mov
mov
insb
jl
repnz
outsl
xchg
inc
xor
inc
xchg
leave
lods
push
cltd
cmp
jbe
leave
clc
xchg
pop
and
xchg
aad
xchg
fisubrs
or
mov
repz
sbbb
cwtl
add
mov
or
in
test
adc
pop
cmc
movsb
mov
andb
movsl
add
mov
xchg
pop
scas
stc
or
rcrb
movsb
insl
aaa
mov
mov
add
push
popf
movsb
fcompl
xorb
js
jmp
sub
andl
aam
imulb
icebp
xor
inc
pop
xchg
les
xor
fdivp
sub
and
pushl
rol
in
call
fwait
xchg
push
push
or
pop
addr16
mov
aad
outsb
mov
mov
push
mov
leave
test
icebp
inc
mov
jle
jge
out
xchg
push
pop
mov
mov
insl
cmp
cmpsb
and
div
or
inc
pop
sub
dec
mov
cmp
outsb
shlb
gs
add
aaa
jb
pop
xor
imul
xor
lret
in
dec
jecxz
pop
add
sub
mov
das
icebp
ss
lock
sbb
dec
xor
lcall
cs
aaa
stos
push
shll
mov
in
sbb
jp
mov
jp
neg
out
lcall
adc
ret
loopne
aas
popa
loop
sbb
and
into
push
inc
or
mov
test
mov
add
push
fsubp
mov
dec
mov
sahf
pop
mov
lahf
mov
sbb
in
mov
inc
pop
xlat
daa
push
sahf
aas
int3
imul
xor
loop
lods
adc
adc
fnstcw
mov
ficoml
xchg
fwait
mov
mov
gs
push
xor
push
repnz
mov
mov
repz
cmp
aad
adc
xor
or
loop
popa
mov
dec
sub
sub
aam
jp
mov
iret
dec
outsl
add
int
push
out
xchg
jne
andl
imul
push
mov
pop
mov
repnz
add
clc
sub
scas
inc
dec
outsb
xchg
into
aaa
js
mov
jge
repz
ljmp
jns
jne
add
lds
add
push
loope
stc
fs
pop
mov
test
aaa
inc
mov
sub
or
mov
mov
andb
fbstp
and
push
sub
out
js
sbb
inc
cmp
or
imul
insb
sbb
rcrl
pop
lods
imul
cmpl
xchg
lods
fisubs
dec
mov
cmp
jns
add
sbb
hlt
xchg
fbstp
std
inc
setae
out
dec
lcall
dec
dec
pop
fmull
fsts
or
and
outsb
xchg
sub
cmp
push
imul
xchg
loope
inc
sahf
in
hlt
push
stos
pop
and
xor
jo
and
fcompl
xchg
ja
les
sbb
aad
jg
je
ret
jae
shlb
mov
inc
popa
outsb
dec
mov
scas
add
enter
stos
push
in
jp
dec
xchg
scas
ljmp
insb
testl
cmp
popf
xchg
and
xlat
cmp
mov
fmuls
push
xchg
jae
data16
inc
pop
mov
cli
out
addl
out
mov
adc
pop
pop
int
xchg
out
popf
mov
rorl
xor
xchg
mov
xor
or
xchg
lods
les
rorb
mov
scas
sub
leave
cli
popa
pushf
lret
outsb
xchg
add
loopne
sahf
mov
jmp
jge
shlb
mov
imulb
sub
je
andb
sahf
sti
loop
ljmp
mov
imul
sbb
sbb
repz
pop
rolb
daa
leave
repnz
icebp
xchg
xor
clc
adc
inc
pop
lds
xor
cmpsb
shrb
int3
pop
testb
inc
cmp
push
push
jae
aam
cmpsb
sub
dec
insb
sub
loop
into
xchg
imul
push
sub
or
dec
xor
rcr
jns
fsubl
pop
inc
push
ds
ja
adc
in
cwtl
mov
mov
adc
jo
not
in
nop
xchg
lea
cmp
dec
mov
fcoms
into
lds
gs
shrb
xchg
aas
mov
int3
loopne
mov
decl
into
jmp
mov
mov
or
testl
movsl
in
mov
orb
xor
or
jno
test
xchg
jle
or
jbe
sahf
mov
aas
repnz
scas
mov
or
adc
or
mov
jecxz
inc
dec
ja
je
divb
pop
inc
test
cld
rcrb
mov
jo
cmpsb
xor
imul
push
xor
mov
or
cmpsl
and
cli
fwait
adc
scas
lock
inc
cmpsl
push
xor
imul
mov
idivl
call
fstps
bound
cmp
fisttpl
out
outsb
das
test
mov
pop
add
insb
repz
push
int
pop
mov
gs
mov
pop
sbb
ficoml
add
push
aaa
ss
mov
aad
mov
data16
lods
xor
gs
fucomi
ja
jbe
ficomps
push
fcomps
pop
jne
aam
xlat
inc
subb
mov
enter
pushf
adc
push
sahf
sbb
add
cmp
dec
fisttpll
lock
ds
dec
lods
rclb
add
inc
jl
pop
or
xchg
mov
inc
jecxz
in
sbb
xchg
cmpsb
push
fisubs
cmp
pusha
mov
gs
or
cld
cmp
divl
gs
sahf
inc
add
insl
mov
loop
shll
and
jg
imul
jle
bound
ret
fisttpll
dec
adc
jmp
mov
popa
dec
jbe
cmpb
xchg
in
insl
scas
jno
outsb
mov
dec
mov
jns
jne
rorb
mov
icebp
jo
xchg
dec
int3
xor
add
ds
into
int
sbb
jp
out
sub
ficoml
mov
rorb
xor
ret
shlb
push
daa
mov
data16
imul
mov
jae
xor
jecxz
adc
call
sarb
or
mov
dec
popa
inc
pop
inc
sbb
les
sbb
cmp
cli
xchg
mov
xor
cmp
cmp
inc
mov
dec
lock
cmpsb
add
jecxz
sub
arpl
pop
aad
ljmp
aaa
xchg
fs
leave
jge
mov
and
daa
ficompl
or
lcall
and
sbb
add
jns
dec
shr
and
mov
in
xor
sub
fidivs
mov
jb
dec
divl
pop
gs
mov
mov
orb
andl
mov
lret
add
sub
in
insl
cld
inc
das
pop
aam
inc
andl
ljmp
add
push
rorb
outsl
aad
aam
sbb
jl
mov
fistps
mov
add
js
adc
sbbb
lea
in
fists
cmp
js
and
jge
loopne
jbe
clc
sbb
je
daa
dec
fadd
add
scas
and
sub
xchg
add
aas
xchg
jle
push
in
and
sbb
jecxz
scas
ss
pop
int
jle
dec
ret
sub
subb
pop
arpl
or
pop
push
repz
xchg
addr16
pop
push
shl
jmp
mov
scas
lret
daa
cmp
sar
data16
pop
ljmp
cmp
rorl
das
sbb
xor
js
mov
mov
fstpl
clc
dec
repnz
add
repnz
sub
fdivrs
add
into
dec
ret
and
nop
dec
out
adc
popf
jne
pop
cmp
pop
xchg
sub
lea
sub
jne
sbb
popf
pop
aad
ret
sti
clc
fcomip
mov
fs
daa
dec
cmp
lods
out
fistpll
and
jb
mov
inc
sarl
push
adc
sahf
rcrl
inc
lahf
sub
pop
jne
mov
test
rcrl
sti
mov
sub
push
cli
lcall
daa
scas
aam
addr16
aam
mov
ficomps
leave
lcall
cmp
das
push
shrl
jne
mov
clc
shr
sub
sbb
test
pushf
jo
jecxz
xor
mov
test
and
enter
sbb
mov
aad
test
xchg
push
out
inc
mov
idivb
and
push
pusha
push
jo
aas
sbb
sub
jle
add
mov
in
ja
ja
xor
inc
mov
test
pop
out
arpl
in
sbb
ds
or
out
stos
add
ret
xchg
mov
mov
test
pop
mov
inc
mov
push
xchg
loopne
loope
mov
call
ljmp
es
clc
add
in
xor
sub
or
jp
mov
dec
cmp
daa
cmp
fildll
es
inc
sbb
mov
fs
cmp
in
sbb
and
sbb
stos
aam
or
mov
cltd
push
pop
and
cmpsb
mov
mov
jno
shrl
push
btc
int
rcrl
vrsqrtss
sbbl
test
enter
filds
xchg
fcomps
out
dec
mov
fcompl
pop
dec
dec
adc
pop
div
repnz
int
jl
cmp
lea
push
fdiv
dec
inc
dec
in
hlt
mov
mov
out
sub
mov
cld
add
xor
cs
out
cmpsl
cld
adc
enter
mov
pop
int3
fnsave
lea
jb
and
sub
stc
in
je
or
add
jmp
push
mov
idivb
jae
test
mov
pop
or
subl
jle
sub
inc
pushf
xchg
aad
mov
mov
fdiv
cmp
gs
lcall
xchg
cmp
pop
shl
lret
fdivrp
mov
xor
mov
cmp
sub
aad
ret
sub
pop
fdivrl
sub
cwtl
fcoml
or
mov
lds
inc
add
push
lcall
inc
sbbb
pop
call
data16
mov
push
ret
mov
mov
fistpl
rorl
cltd
ljmp
ret
cwtl
jl
movsb
dec
mov
into
jp
fstpt
inc
cmp
and
das
test
xchg
or
iret
repnz
fiaddl
mov
jmp
mov
mov
loop
pop
inc
sbb
imul
sub
insl
mov
es
aad
imul
in
mov
adc
clc
lahf
std
addb
xor
jno
lods
push
push
loop
test
es
ret
mov
jle
or
jmp
mov
dec
lret
cmp
imul
pop
jnp
jmp
shlb
and
ljmp
loopne
ret
mov
xchg
fdiv
xor
icebp
sub
rolb
rcr
inc
xchg
jbe
cltd
jb
cmpsb
adc
cmp
mov
popa
xchg
daa
movl
loop
mov
jp
insl
jae
iret
or
js
jo
sub
and
sahf
fdiv
fcoml
gs
lock
out
int
cs
xlat
outsl
loop
pop
std
jns
in
mov
lret
std
and
int3
sahf
sub
push
jnp
test
jecxz
jge
lcall
mov
adc
jecxz
push
out
sbb
loopne
in
push
push
adc
lods
pop
xchg
sub
or
mov
rcl
idivb
out
sbb
inc
pop
inc
push
xchg
lods
pop
stc
dec
hlt
shrb
test
adc
imul
aaa
sub
add
mov
ds
dec
cmp
adc
or
inc
movsl
insb
dec
cmpsb
mov
lret
add
add
xchg
or
shlb
mov
push
xor
je
fisubs
push
xchg
push
popa
xor
or
cli
scas
dec
xchg
lods
pop
cli
cmp
mov
add
call
in
push
xchg
enter
call
ljmp
push
mov
cwtl
filds
mov
push
jno
mov
insl
fucom
mov
jle
mov
push
enter
add
inc
in
and
mov
not
add
jl
add
mov
popa
stc
inc
lcall
add
out
push
and
lret
std
xchg
adc
mov
pop
aaa
cmpsl
inc
mov
xor
sbb
ja
mov
mov
and
cmpl
push
arpl
push
ljmp
or
adc
dec
xchg
mov
lret
das
cmpsb
add
and
dec
push
mov
nop
mov
bsr
mov
lock
iret
xchg
fiaddl
mov
int3
push
inc
repz
xor
pop
dec
gs
out
arpl
mov
mov
bound
lret
divb
int3
xchg
stc
aam
xchg
cld
add
mov
mov
popa
sahf
daa
or
fnsave
into
mov
push
fistps
dec
ret
push
aaa
push
addr16
mov
ret
fldl
aad
mov
sbb
mov
or
leave
outsb
and
test
push
ror
fimull
lea
cld
cmc
jno
test
in
fildll
stos
mov
enter
loope
fidivl
xchg
imul
ret
gs
jno
stos
loope
or
arpl
repz
inc
dec
cmp
push
mov
mov
push
push
aas
xor
inc
mov
addr16
in
sbb
shll
icebp
andb
and
arpl
pop
or
jecxz,pn
cwtl
out
add
inc
jno
outsl
out
mov
cmp
sub
or
je
lods
fstpt
dec
xor
mov
or
icebp
fidivrs
and
inc
ljmp
mov
out
inc
inc
adc
fsub
ljmp
test
movsb
out
notl
adc
jecxz
jbe
and
and
mov
xlat
fstl
mov
lods
xchg
mov
push
int3
int
xor
leave
stos
and
push
pop
xchg
and
and
addr16
mov
xchg
fisubl
in
jo
jne
mov
cmp
push
dec
lods
sbb
sub
push
jmp
mov
pop
vphaddubd
hlt
mov
sti
mov
cli
enter
icebp
popf
inc
icebp
rorb
push
movsl
ljmp
leave
fildl
leave
lods
js
mov
or
push
push
aad
out
push
sub
ljmp
imulb
add
mov
fisubrs
cmp
xorl
lods
mov
clc
jo
lahf
sub
sub
dec
test
andb
rcrl
or
js
scas
mov
sub
sbb
pop
dec
int
sbb
test
mov
nop
cmp
push
lock
mov
sbb
sbbl
push
and
push
jns
out
or
sbb
icebp
and
out
jnp
adcl
push
push
jge
jle
cs
mov
aaa
inc
mov
or
push
xchg
sub
sub
dec
mov
pop
cmp
pop
push
push
fsubr
xchg
sub
addr16
arpl
ret
inc
push
mov
push
jg
push
repz
hlt
xor
adc
push
loope
sbb
inc
lods
int3
sbb
mov
fnstcw
movsl
mov
ljmp
add
in
pop
sbb
add
or
jns
or
inc
jns
call
sbb
xchg
outsl
or
leave
add
adc
sbb
pusha
xchg
orl
push
popa
mov
cli
jnp
ds
add
mov
adc
mov
jmp
sub
addb
and
pop
cwtl
adc
rcll
adc
mov
mov
pop
jns
sub
dec
outsb
int3
ja
lods
push
add
sbb
pop
icebp
sahf
arpl
hlt
dec
rorl
jg
jp
pusha
adc
cmp
and
mov
movsb
hlt
sub
and
push
pop
mov
xlat
lret
lahf
mov
adc
mov
scas
cs
cmpsb
sub
mov
lods
pusha
shll
mov
shr
in
test
mov
pop
les
mov
std
mov
out
aad
movsb
add
shl
std
pop
pop
jmp
inc
push
pop
lds
xor
leave
out
out
pushf
jge
inc
xchg
adc
and
in
lcall
sahf
lds
push
hlt
sbb
aad
xchg
addr16
adc
cmp
inc
add
xchg
pop
add
daa
jns
cmp
adc
jl
adcl
add
clc
into
insl
bound
dec
aas
insb
out
xlat
jmp
sub
dec
lea
jg
mov
xor
dec
jae
ss
xor
jge
push
push
mov
into
inc
adc
repz
mov
in
scas
pop
dec
sub
shll
aas
sub
out
movsb
out
loop
xchg
loop
mov
lret
into
fs
pusha
insl
js
repz
push
adc
push
jne
pop
xor
sub
les
mov
int3
jae
pop
fs
repz
sbb
push
rcll
dec
push
push
adc
push
xchg
arpl
out
shrb
cmp
push
dec
mov
in
enter
cmc
sbb
cmpsb
les
int
cld
push
mov
fldcw
sti
sub
inc
sbb
sbb
add
xchg
xchg
fs
push
test
dec
push
jecxz
ljmp
mov
sub
adc
fmuls
das
add
bound
cwtl
lea
xchg
mov
aas
imul
xchg
cmpsl
sbb
push
in
mov
sarl
mov
xchg
dec
out
mov
push
ja
shl
into
inc
stos
jge
movsl
add
xor
js
mov
sub
les
jle
inc
and
test
pop
inc
sti
jg
fcomp
std
cmc
mov
xchg
dec
iret
movsl
mov
or
fmul
sub
mov
pop
push
mov
mov
mov
loope
loope
enter
push
lods
push
xor
das
jo
pop
out
mov
out
lods
pop
push
mov
shl
push
adc
scas
aam
dec
xor
and
push
xchg
jo
icebp
xchg
pop
jb
aam
pushf
adc
pop
mov
orl
loopne
jg
fwait
mov
data16
adc
mov
adc
ret
roll
jmp
sti
arpl
cmpsl
cmp
dec
addps
in
jg
iret
testb
push
push
out
clc
ljmp
mov
cmp
iret
fsub
inc
mov
mov
inc
ja
dec
jns
sbb
and
inc
mov
jl
push
xchg
rcrl
mov
xchg
repz
pop
mov
popf
xchg
mov
sbb
repnz
xlat
xor
lods
test
dec
aam
popa
mov
mov
lds
test
or
xor
mov
leave
mov
loope
dec
cld
mov
lret
xlat
jle
stos
inc
stos
test
jp
and
out
sbb
add
xor
mov
cmp
sub
mov
pushf
ss
xchg
andb
stc
and
insl
xchg
mov
les
loope
sub
adc
add
fiaddl
or
imul
fstpl
push
sub
enter
xchg
insl
loope
jns
std
add
dec
add
xor
jae
ret
inc
jne
cld
jl
cmp
push
jo
xlat
cli
jp
adc
cmp
mov
mov
cmp
xchg
xor
into
lret
jb
jno
mov
sbb
jb
mov
pop
adc
imul
shl
gs
fwait
inc
idivb
push
jnp
push
js
pop
inc
inc
pusha
cli
pop
out
cmp
or
lock
mov
out
xchg
daa
mov
inc
xor
mov
xor
sbb
dec
mov
andl
xchg
hlt
xorb
sbb
das
insl
lret
xchg
bound
leave
xorl
cmp
jb
sti
ret
pop
sub
mov
sub
sub
loopne
cmp
mov
mov
ds
pop
or
shlb
daa
push
xchg
fnsaves
mov
or
xchg
stos
jl
call
rol
or
mov
pop
inc
jb
mov
push
popf
mov
or
divb
inc
mov
into
inc
mov
fimuls
jg
xchg
daa
push
fdivrs
sub
xor
mov
int
add
mov
xlat
pop
adc
rcr
cmpsl
cmp
pusha
clc
dec
dec
push
xchg
movsb
and
out
out
aad
xchg
call
arpl
or
mov
sbb
xorb
test
fisubrl
ds
jle
iret
xlat
incb
xor
mov
or
sbb
std
push
out
pop
mov
stc
ss
mov
lods
mov
imul
into
mov
mov
dec
pop
jbe
cmp
push
mov
push
aam
leave
push
inc
mov
pop
ficompl
mov
xor
aas
movsb
fcoml
pop
data16
mov
push
das
mov
mov
in
lfs
mov
jmp
xor
std
sub
jae
jg
sbb
insb
js
js
por
enter
repz
in
repnz
and
adc
sub
movsb
shll
nop
push
loopne
sbb
dec
inc
sub
fistpll
sahf
call
mov
cltd
int
movsl
mov
punpckhwd
mov
xor
sbb
mov
shrl
lret
jo
adc
mov
mov
dec
and
pop
pop
ret
inc
mov
shll
movsl
cmp
xchg
aaa
dec
jnp
data16
incl
clc
dec
add
fsubl
leave
movsl
popa
push
sub
outsb
out
adc
leave
je
xchg
push
sahf
jle
xchg
out
and
scas
out
jnp
xchg
add
pop
pop
xchg
ret
out
scas
cmp
adc
sbb
inc
jae
add
fsubl
test
add
cld
pop
pusha
and
imul
xlat
cmp
rorl
cmp
jnp
std
and
adc
xor
xor
in
fdivrl
sbb
mov
mov
stc
mov
push
mov
xchg
popf
xchg
arpl
adcb
sbb
mov
ds
out
cmpsb
pop
jge
push
add
cmpsb
dec
jl
pop
loopne
xchg
gs
iret
stc
adc
cld
push
lock
push
mov
mov
dec
lock
subl
test
fcmovne
lea
and
xor
jge
ljmp
std
mov
adc
jl
pop
in
daa
imul
das
fmuls
stos
icebp
push
push
jbe
jge
push
or
fnstcw
lahf
sbb
into
rorl
xchg
stos
sbb
sub
rol
aad
into
pushf
or
xchg
scas
jle
mov
fdivrl
cmp
lcall
sbb
or
aam
mov
pop
xlat
sarl
cmpl
out
stc
dec
mov
into
mov
fisttpl
pop
inc
imul
js
xchg
jae
push
repz
adc
mov
push
daa
xor
fmuls
rcrl
inc
xchg
ret
xlat
sbb
inc
mov
fwait
in
fcmovb
imul
mov
data16
xchg
xchg
pop
cld
aaa
push
sti
jae
sub
push
aas
mov
mov
movsl
std
cwtl
add
pop
jecxz
and
push
cmpsl
stos
adc
push
out
cmp
je
push
gs
sub
mov
jl
scas
mov
fldcw
adc
dec
shl
adc
pop
xor
mov
xchg
add
adc
adc
adc
or
dec
xchg
les
test
lods
pop
dec
lcall
test
mov
js
inc
iret
mov
movl
les
cwtl
pop
sub
add
stos
mov
jl
gs
xor
mov
ds
sbb
pop
cmp
aas
fs
fucomip
sbb
stos
dec
dec
sub
out
shrb
dec
xchg
dec
pusha
mov
in
push
pop
lret
xchg
lahf
fwait
mov
mov
push
inc
cmp
imul
or
jecxz
cmp
push
xor
push
popf
int3
jbe
and
std
rcrl
lock
popa
and
adc
icebp
addr16
jnp
mov
inc
mov
sub
iret
adc
adc
pop
ud0
loope
xor
or
imul
and
and
rcl
inc
sti
sbb
sbb
repz
pop
int
rcrb
subl
jo
out
mov
stos
dec
sub
fwait
mov
repnz
ljmp
inc
mov
leave
dec
add
sbb
insl
adcl
and
out
jns
test
push
imul
mov
clc
mov
lock
cwtl
pop
jno
jmp
add
mov
out
shlb
xor
cmc
pop
loopne
lods
jbe
ss
stc
int
jnp
xchg
test
pop
loopne
or
movsl
and
inc
ljmp
daa
dec
insl
pop
pushf
scas
mov
cmpsb
pop
or
int3
mov
rsm
insb
out
fcomps
aaa
xchg
das
or
adc
movsb
ds
inc
insl
in
cmpsl
pop
adcl
popa
sub
push
sbb
cmp
pop
or
sub
mov
stc
push
push
jae
insb
mov
lds
dec
xor
and
loope
push
inc
lods
aad
cmc
test
frstor
int3
sbb
test
mov
nop
out
cmpsb
nop
sbb
rcll
cmp
arpl
adc
and
xchg
rclb
lcall
cmp
adc
inc
cmpsb
dec
push
sub
mov
xorb
ret
repnz
test
imul
and
test
dec
leave
jae
jnp
mov
push
pushf
inc
cmc
out
sbb
leave
lods
femms
pop
inc
ret
lea
clc
push
mov
mov
out
insb
xchg
jo
sbb
mov
sarb
fadds
or
cli
icebp
aas
xor
xorl
mov
mov
mov
popf
xor
je
mov
xchg
fsubrl
outsl
mov
pop
cmp
fists
mov
mov
adc
xor
or
icebp
inc
dec
cmp
data16
sbb
hlt
xchg
dec
mov
xchg
jae
xlat
and
inc
lahf
daa
mov
mov
sbb
inc
jl
inc
cmp
cld
jl
cmp
push
adc
lahf
insl
add
lahf
sbb
subl
ja
inc
outsb
cmp
sbb
inc
fisttpl
jnp
inc
add
jmp
sbb
cmpl
cmc
cmp
lret
push
xchg
cmp
cmp
cmpsb
fcmove
push
pop
scas
addb
add
fcomi
push
cmp
icebp
sub
add
jp
mov
out
cmp
mov
pop
ljmp
in
push
rol
adc
and
scas
or
bound
fsubl
pop
lcall
rcrb
aaa
in
pop
push
ja
arpl
sub
stc
repz
sub
das
insl
sbb
stc
enter
adc
out
negb
mov
pop
hlt
xor
pop
in
sub
jl
in
mov
jecxz
jge
cld
sub
inc
push
icebp
rcr
imul
xchg
fnstsw
push
outsl
imul
in
push
inc
mov
mov
jno
js
adc
test
fsts
fmuls
mov
pop
xchg
lea
aas
in
shlb
hlt
arpl
jmp
jo
mov
jg
cs
mov
xchg
xchg
pop
sub
mov
in
inc
imul
mov
push
ja
cmc
mov
adc
ja
mov
nop
scas
push
mov
out
aaa
add
inc
test
cmp
xor
stos
jb
sbb
dec
or
inc
repnz
icebp
or
pop
or
pusha
fmul
dec
xchg
sub
xchg
ljmp
ret
jo
dec
inc
sbb
ret
push
mov
mov
pusha
shl
hlt
popf
cld
gs
mov
sti
inc
dec
or
sub
jo
push
push
xchg
mov
cld
scas
cs
xor
xor
jno
inc
xchg
sub
dec
add
scas
add
stc
sarl
jg
jle
mov
sbb
testl
enter
push
jl
mov
lret
push
int3
adc
and
outsl
sbb
cmp
imul
add
mov
xchg
mov
data16
inc
add
xlat
ljmp
xchg
cmp
mov
in
or
int3
push
adc
aas
cmp
in
loop
jecxz
or
sbb
arpl
lods
cmp
sahf
xchg
and
pushf
inc
lods
loop
mov
arpl
out
jg
stos
jns
fcmovb
lock
pop
cmp
dec
scas
jnp
pusha
incb
cmp
push
pop
xchg
and
and
loop
aam
std
repz
incl
sbb
into
sbb
cmp
or
cmp
cmp
mov
push
adc
adc
jg
push
xchg
leave
push
add
into
arpl
or
adc
adc
push
test
dec
jmp
mov
outsl
cmpsl
jp
aam
imul
icebp
rcll
pop
mov
jns
or
movsl
push
mov
popa
adc
fldl
pop
inc
push
aas
mov
call
pop
jmp
add
xchg
sbb
movsb
imul
push
sub
xchg
dec
outsb
js
in
mov
aam
call
scas
or
jbe
mov
xor
xor
pop
arpl
mov
stos
and
mov
shll
and
es
dec
jne
out
mov
subl
popf
xchg
shl
and
jg
dec
fiadds
arpl
pop
jp
cmp
ss
outsb
sbb
push
loope
push
mov
dec
pop
pusha
ror
pop
add
push
call
jmp
in
mov
loope
or
out
sbb
test
rolb
les
lods
int
cmp
mov
inc
xchg
ss
jp
push
adc
xchg
sbb
or
cld
cmp
xor
in
hlt
cmpsb
and
jnp
pop
mov
push
mov
push
mov
cmpb
dec
xor
add
adc
js
xor
inc
les
fsubp
pop
rol
jnp
cld
push
dec
mov
xchg
aad
stos
xchg
or
pop
mov
add
imul
mov
jecxz
sub
sahf
cwtl
and
cltd
jge
loopne
in
js
inc
add
scas
inc
shlb
in
xor
mov
add
out
frstor
stc
clc
je
loop
fisttpl
scas
mov
push
out
and
push
es
cltd
inc
lcall
adc
movsl
orl
pushf
call
xlat
addr16
and
jmp
rcr
jmp
push
arpl
stos
inc
jno
jle
and
sbb
es
mov
int3
rcr
xchg
js
repz
imul
ds
fcomps
aas
bound
xchg
fwait
lret
aas
cmp
add
bound
out
jle
and
lcall
mov
inc
mov
pop
lret
sbb
notl
cmove
inc
movsl
mov
jae
shl
jne
cmp
jle
clc
sub
xchg
sbb
xor
push
das
scas
and
rol
hlt
in
aam
scas
sbbl
mov
pushf
jo
into
call
es
stc
cwtl
cmp
icebp
stos
loope
mov
mov
ret
stc
jns
sub
pop
rcrl
inc
fnstsw
mov
push
xor
adc
jge
mov
inc
hlt
or
int3
jbe
sub
into
and
les
mov
sti
pop
cmp
xchg
shlb
adc
pop
sbb
jne
arpl
jg
adc
and
add
push
cmp
movsl
push
dec
aad
jns
dec
es
and
mov
xchg
push
dec
insl
std
cmp
decl
push
je
fistl
mov
xchg
push
dec
jecxz
sarb
les
jmp
mov
dec
sub
mov
insl
rol
arpl
mov
loop
lock
mov
xchg
pop
pop
int
jnp
and
addr16
cmp
jmp
scas
ret
or
fbld
leave
out
mov
pop
scas
lods
push
les
xor
movsl
outsb
out
xchg
loope
cmp
and
inc
mov
mov
sub
pop
call
icebp
mov
add
aad
lahf
aam
aam
mov
xchg
adc
cmp
mov
cmp
cs
dec
or
lahf
jmp
insl
push
imul
or
or
pop
lea
fisttpl
xor
daa
xchg
xchg
pop
inc
mov
mov
or
lcall
push
mov
xorb
ja
jo
pmaddwd
push
pop
mov
fcmovbe
sub
in
dec
lahf
out
dec
sub
aaa
lcall
stos
inc
jo
push
pop
out
mov
and
dec
mov
dec
mov
aad
daa
imul
outsl
or
inc
dec
les
jl
push
mov
xor
adc
js
jne
pusha
mov
xchg
pop
enter
icebp
mov
xor
out
sbb
jmp
adc
inc
lcall
jnp
cs
insl
call
fidivrs
negl
mov
addr16
xor
inc
setge
inc
push
jnp
pop
out
test
mov
ficoml
xchg
insb
shrl
mov
cmpl
mov
inc
mov
mov
push
adc
mov
pusha
pop
jg
add
mov
iret
or
mov
mov
sbb
xor
outsl
leave
push
sbb
sbb
rorb
pushl
loopne
in
jecxz
dec
lret
adc
and
push
and
pop
mov
lcall
inc
in
outsl
fst
add
dec
add
std
adc
pop
call
push
or
leave
push
push
sbb
mov
push
pusha
inc
sbb
and
jge
adc
xchg
sarl
ret
mov
out
jg
push
add
dec
pop
andl
jae
insl
add
js
cmp
lahf
leave
fs
sub
cmpb
jb
sbb
sub
aaa
mov
or
cmp
test
cmp
loop
xor
inc
dec
cmp
movq
dec
cmp
xlat
mov
lret
ja
push
enter
add
xchg
or
test
popf
js
subb
mov
adc
jmp
aam
test
scas
mov
mov
ficomps
hlt
or
jp
and
popf
mov
pop
mov
out
xchg
xor
ss
inc
shll
test
stc
sub
mov
sub
inc
sbb
push
cmp
inc
test
inc
sbb
flds
cli
adc
mov
sub
xchg
mov
pop
or
lock
pop
push
cmp
fidivrl
or
xlat
shl
pusha
ror
ret
mov
mov
xor
cmp
push
dec
pop
popf
cvttps2pi
sub
jmp
pop
jb
sub
mov
jmp
shr
call
and
scas
or
lds
add
flds
leave
and
in
sbb
mov
pop
and
leave
lock
stos
pop
enter
mov
lret
fimuls
xchg
aad
cmpl
mov
or
cmc
fildl
dec
and
lahf
xchg
cmpsb
mov
push
mov
mov
sahf
adc
je
sarl
pop
xchg
sub
jbe
cmp
sub
gs
or
mov
mov
das
mov
mov
xor
enter
es
lock
jge
xchg
dec
addl
cwtl
add
xor
sbb
jmp
cld
dec
add
insb
or
xor
sbb
fdivrp
cmc
cmp
xchg
clc
leave
test
fmul
jp
sahf
jbe
add
cmc
insl
sbb
repz
jne
xlat
and
arpl
xlat
lcall
push
jge
imul
sub
dec
fmulp
push
int3
and
or
xchg
mov
mov
jb
push
cmp
pop
sub
xor
or
and
mov
inc
or
inc
mov
hlt
pop
lahf
add
lahf
fidivs
popf
ja
ss
mov
pop
js
rclb
jle
bound
arpl
insl
mov
add
jge
pop
sbb
ret
xor
push
cmp
dec
imul
pop
movsl
popf
push
cli
dec
jns
add
cmc
mov
jo
adc
dec
pop
sub
sbb
mov
fldl
fcompl
insl
xchg
ficoml
mov
add
cmp
or
outsb
shrb
aad
or
popa
loope
add
mov
rcrl
cs
and
outsl
xor
sbb
and
negl
ja
aaa
jl
daa
je
cmpsb
dec
push
inc
cmpb
out
inc
jl
mov
pop
lahf
shl
cltd
lahf
clc
clc
mov
or
mov
clc
fsubrl
loopne
cmpsb
fdivrs
or
lods
xchg
xchg
mov
cmp
inc
lock
cmpsb
mov
mov
les
rorb
jae
jo
fidivrl
mov
add
in
cmp
les
add
fisubs
std
mov
mov
movzbl
js
sbb
and
jp
shlb
or
out
dec
and
xchg
sub
push
xchg
int
cltd
jae
cmp
jmp
mov
dec
add
add
sub
push
ds
or
stos
call
icebp
int3
sub
add
repz
mov
push
arpl
adc
sub
xlat
add
dec
and
lods
inc
rcr
adc
jb
daa
loopne
jno
lcall
sbb
fcmove
adc
lods
adc
jmp
int
addl
xor
icebp
jbe
adc
dec
mov
mov
jbe
mov
fwait
in
outsb
jno
pop
push
or
push
icebp
or
gs
hlt
dec
inc
lods
cmpsb
je
push
dec
in
adc
jb
daa
add
xchg
insb
mov
sbb
fs
icebp
xor
and
fs
fcomip
movsb
repnz
mov
xor
push
dec
aad
add
and
xchg
das
xchg
rolb
ds
push
cmp
pop
inc
push
inc
lea
add
in
xor
cs
sbb
mov
and
das
dec
iret
sbb
add
xor
daa
ja
push
shrl
andb
shll
loop
inc
add
or
sbbl
fs
add
mov
sbbb
dec
dec
enter
lea
js
xchg
sti
mov
movsb
xchg
cmc
repz
jle
cmp
add
add
sub
sub
das
inc
sbb
push
addb
nop
ja
adc
and
fnstcw
loop
out
push
sbb
sti
test
shll
out
jne
jo
xchg
mov
mov
push
aas
adc
pusha
push
cmpsb
inc
ljmp
pop
iret
icebp
int3
push
int
jl
sub
clc
call
pop
cwtl
jnp
push
cld
aaa
shrl
leave
cmp
sub
cmp
ret
adc
int3
ljmp
fldl
sub
inc
adc
data16
jo
pushf
hlt
push
arpl
gs
mov
push
pop
dec
stos
jno
xor
and
cmc
shll
xchg
jmp
add
jne,pn
bound
and
adc
add
pop
hlt
pushf
ss
jecxz
push
roll
add
pushf
test
scas
inc
std
xchg
sbb
push
mov
lret
push
popf
push
iret
mov
push
std
push
fistl
or
dec
inc
das
hlt
push
sub
and
inc
loop
and
push
mov
push
push
sbb
xor
add
int
jge
scas
shr
inc
sbb
cmp
iret
mulb
add
xchg
daa
mov
jae
stc
add
push
ficoml
test
out
mov
gs
roll
repnz
push
aaa
adc
fldt
loop
scas
test
xchg
xor
jmp
and
es
addr16
push
cltd
pop
inc
push
dec
dec
cli
add
dec
faddl
adc
imul
je
popf
mov
dec
repz
mov
mov
popa
jb
pop
fdivr
mov
gs
cmp
rcrb
andb
sub
push
cltd
sbb
or
push
rorl
mov
inc
lds
rorb
fildll
ss
sub
xor
pop
mov
stos
sub
xlat
mov
mov
mov
sub
mov
mov
std
or
or
mov
pusha
lods
in
fldenv
mov
sbb
hlt
inc
das
dec
test
jp
lds
aas
xchg
xor
xor
and
ds
mov
test
xchg
cmp
loope
ds
mov
outsl
add
arpl
aaa
jl
call
jae
push
or
add
pop
ja
out
gs
rorb
into
jne
xchg
mov
push
or
inc
dec
aad
cld
lock
imul
jno
or
sbb
movsb
and
lea
jge
adc
adc
fs
ffreep
push
sub
dec
clc
insl
xchg
xor
movsl
arpl
push
in
dec
rclb
aad
les
lods
sub
ljmp
lods
dec
lods
add
sbb
test
sbb
sub
lcall
mov
iret
cli
int
test
dec
rcl
loope
mov
rcll
mov
jl
sbb
dec
loop
jecxz
and
cmpsl
xor
push
mov
mov
mov
pop
scas
leave
adcb
and
jb
dec
out
lock
shll
inc
stc
test
xchg
pop
dec
dec
xchg
pop
sbb
mov
cltd
out
push
and
cli
and
sarb
insl
test
and
sti
pop
fsubl
xchg
add
popa
aam
pop
pop
push
cli
cmc
icebp
pop
lods
push
iret
call
loope
mov
sub
lcall
mov
popa
daa
push
xchg
pop
jns
push
dec
enter
jmp
mov
jns
mov
negb
test
and
iret
adc
js
and
jno
and
add
cs
lds
or
mov
pusha
dec
int3
pop
push
mov
cmp
push
repnz
and
movsl
dec
testb
mov
test
sub
push
pop
push
jne
mov
pop
jl
or
aam
mov
pop
mov
sbb
popf
inc
mov
mov
inc
xor
cmc
sub
jg
test
out
cmp
inc
popf
pop
xlat
aas
cmc
mov
lahf
jns
push
adc
sbb
test
mov
pop
movsb
or
popa
lret
pushf
xor
adc
aad
jle
lcall
push
jno
sti
xchg
and
inc
ret
and
imul
adc
fldenv
xor
and
mov
loope
cmpsb
mov
add
xchg
cmp
daa
xor
loope
sahf
pop
movsb
mov
out
in
imul
clc
jo
pop
nop
lods
int3
cmp
cmpsl
xor
sbb
ret
loop
sbb
insl
sub
xchg
enter
xor
lcall
sub
or
lods
sbb
and
sub
imulb
lahf
sub
jbe
add
lock
cltd
fs
jae
cmpsb
out
inc
adc
ret
loop
xor
mov
movsb
mov
sub
rcrb
mov
cld
sarl
cmp
call
cmp
clc
repnz
mov
loop
pop
clc
or
pop
adc
pop
cmc
push
xchg
push
xchg
add
sbb
iret
dec
in
mov
add
jmp
push
pop
pop
or
and
in
xor
mov
adc
lret
imull
fld
jbe
sub
or
hlt
jmp
cld
sbb
arpl
mov
jnp
lcall
cmp
mov
orl
mov
fs
xchg
or
dec
pop
int3
dec
push
mov
lahf
sub
sahf
cmpb
pop
mov
push
sbb
imul
fisubrl
mov
imul
and
mov
sahf
xchg
fs
lock
sbb
fisttpl
xchg
out
xor
push
sub
and
xor
rorb
cmp
pop
jbe
push
stos
sbb
shl
ja
lret
add
ss
add
jb
mov
and
add
xchg
js
daa
cmc
ljmp
out
mov
or
sti
or
mull
ret
ds
xor
insl
mov
iret
mov
push
sbbb
pop
int
ss
fmuls
mov
pop
xchg
in
push
negl
jno
push
test
xor
lods
enter
pop
ds
mov
fcompl
scas
outsb
push
lret
sahf
sbb
sub
mov
and
cmc
loope
push
mov
push
sub
xchg
and
cli
pop
sub
mov
stos
shlb
mov
mov
ficoms
sbb
rclb
popa
cli
jmp
outsl
mov
ficomps
loope
and
pop
insl
scas
push
add
popa
insb
nop
loope
sti
mov
test
ljmp
add
mov
std
rolb
push
int3
insb
mov
movsl
add
icebp
test
ja
lsl
push
push
pop
or
adc
test
fs
icebp
pop
lcall
or
repz
lret
lods
mov
push
xchg
cmpb
movsb
rol
mov
cs
push
dec
les
icebp
mov
mov
or
loop
jbe
std
pop
loop
sbb
data16
enter
data16
xchg
fistl
test
adc
test
jl
or
int3
loope
pop
pushf
int
sti
lock
cld
sub
jns
adc
shll
push
inc
and
cmp
push
inc
inc
popfw
or
and
sarb
mov
cld
repnz
push
push
sub
sar
push
add
cmc
out
jg
divb
inc
dec
xchg
fistpl
pop
ja
push
lcall
xor
cli
clc
sub
pop
push
inc
mov
cltd
out
mov
iret
cli
push
sarb
in
xor
mov
push
mov
inc
add
imul
sub
daa
push
mov
jg
mov
popa
fstpt
pop
xchg
rorb
lods
sbb
pop
sub
or
lds
and
jl
in
out
cmp
aad
lret
ljmp
jne
jmp
adc
push
sub
fs
mov
xor
outsb
xor
xchg
js
push
sti
pop
push
in
sahf
sbb
dec
lcall
popa
add
jecxz
scas
inc
mov
sarl
jb
add
mov
cmp
sub
mov
mov
sub
adc
jl
or
jmp
and
addr16
pop
clc
add
add
sbb
out
lret
xor
inc
or
mov
fstpl
pushf
bound
push
lret
xchg
pop
lea
and
sbb
lret
sahf
xchg
cmpsl
popf
sub
mov
mov
push
scas
testl
or
mov
sub
pushf
fistl
shl
mov
popf
sub
cmp
and
cmpb
adc
mov
xchg
or
adc
movsb
mov
or
pop
aam
jl
push
push
inc
scas
jmp
je
dec
fs
test
stos
fdivrp
into
and
sbb
and
stc
and
xor
dec
push
cmp
leave
sarl
out
jno
mov
mov
dec
push
pop
je
dec
movsl
not
test
pop
test
dec
mov
add
lret
or
adc
stos
push
and
lret
inc
cmp
jecxz
fistpl
xchg
sbbw
lret
dec
aad
data16
mov
pop
xchg
and
push
rcrb
enter
xchg
hlt
roll
xchg
loope
cmpsb
int
jl
or
or
cmc
and
incl
inc
sub
push
jl
ja
and
cmpsl
or
jge
cltd
xchg
sbb
xlat
mov
je
pop
test
je
mov
cmp
add
push
mov
ret
lret
xchg
or
sub
add
xchg
mov
test
jge
pushf
dec
out
mov
adc
mov
mov
imul
cmp
jae
ja
pop
jne
pop
jge
addr16
pop
dec
ljmp
xor
pcmpgtb
fstp
cmpsl
repz
mov
sub
loop
pushf
imul
add
aam
push
jecxz
cmp
sub
fs
test
add
movsl
dec
and
or
aaa
push
hlt
mov
jl
add
cwtl
xchg
inc
aad
push
mov
add
cmpsl
out
push
test
in
cmp
and
sarb
mov
add
sbb
test
ret
xor
mov
mov
jp
jne
cmp
out
aas
jno
rol
movsb
stos
orl
cmp
sbb
adcl
xor
cmp
dec
and
repz
clc
stos
ret
add
pushf
xchg
addr16
push
int
pop
loop
xor
in
adc
jns
sbb
adc
es
loopne
shr
or
call
test
mov
xor
jo
loop
jmp
and
lock
scas
jl
or
xchg
adc
lahf
daa
test
mov
push
out
stos
int
dec
sub
add
lds
cmp
les
jmp
xor
dec
int3
cmc
sub
in
jle
rol
pop
lahf
push
and
sti
call
lods
in
dec
pop
push
and
dec
xchg
and
jp
cwtl
lods
jmp
push
mov
xchg
push
adc
sub
es
mov
inc
or
adc
inc
mov
jbe
sbb
lock
movsb
cmc
in
imul
mov
std
add
arpl
fiadds
or
cmp
rorb
arpl
sbb
lret
lods
and
lock
xchg
dec
lret
je
xchg
frstor
imul
adc
jae
sub
jb
pop
out
mov
mov
jle
xor
add
scas
pusha
cmp
cmp
jmp
xchg
jl
or
mov
ja
push
inc
cwtl
aam
loop
and
mov
push
dec
xchg
and
pop
ds
xchg
mov
xchg
leave
xchg
add
mov
sbb
adc
sbb
hlt
shll
cmc
loopne
dec
inc
cmp
repz
insl
sbb
push
enter
mov
sbb
add
clc
in
ret
xchg
das
mov
stc
xor
call
dec
adc
cli
andb
sbb
pminub
inc
orl
pushf
js
xlat
cmp
push
cmp
sti
adc
lret
test
lea
dec
sub
out
nop
mov
lds
imul
adc
sarl
aaa
ret
test
cwtl
mov
xchg
mov
xor
pop
mov
cmpsl
dec
dec
mov
cmpsl
into
xchg
sti
stc
mov
sub
jmp
xlat
adc
loop
jnp
add
lock
inc
das
xor
dec
jns
fcmovb
or
bound
movsl
cmp
sbb
sub
nopl
jmp
rcr
neg
imul
ret
loop
pop
push
int
filds
xor
enter
push
adc
and
add
ret
xchg
inc
cmpsl
loop
insl
cmp
and
cmpsl
ja
data16
push
cli
test
mov
cli
jle
cmp
je
mov
cmp
scas
mov
sub
test
call
cmc
insb
iret
xor
in
cmpsl
sahf
pop
pop
inc
cmpsb
jecxz
pop
scas
fistpl
loopne
scas
mov
mov
xchg
xchg
int
cltd
lods
lods
int
and
sahf
or
popf
das
sbb
and
fs
lahf
dec
mov
or
sbb
icebp
inc
idivl
sbb
mov
or
or
dec
mov
aaa
loope
lret
jp
push
add
orl
fsubl
shlb
loope
jne
xor
mov
mov
stc
rcr
xor
hlt
shl
add
push
dec
sarb
ret
inc
pop
imul
push
sub
aad
orl
cwtl
repnz
mov
cmpsb
push
jmp
aaa
sub
xor
inc
in
nop
aaa
cltd
sbb
aaa
imul
sahf
mov
pop
les
inc
jl
jns
loopne
inc
ss
mov
jecxz
pop
nop
push
ljmp
mov
ret
xor
pop
mov
sti
and
rol
push
fdivrs
xchg
cwtl
or
dec
jnp
fwait
dec
imul
scas
xchg
cs
mov
xor
in
fsubs
mov
sbb
cmp
iret
add
add
sub
daa
or
jle
push
or
add
mov
dec
mov
cmc
adc
jp
adcb
jno
jbe
add
mov
jae
stc
cmp
adc
add
jmp
enter
xor
fadds
gs
test
rol
scas
addr16
lods
and
icebp
and
cmp
bound
pop
lods
ljmp
sti
pop
add
xor
movsb
mov
adc
jge
inc
cmp
sub
je
mov
xor
iret
mov
push
movsb
sbb
popa
stos
dec
cmp
fidivs
push
or
xor
pop
loope
mov
fldl
jl
xchg
cwtl
push
dec
jle
aaa
pusha
daa
mov
fimuls
test
jmp
pop
fldcw
in
xorl
mov
and
pop
lcall
xchg
andl
mov
or
mov
imulb
aaa
jno
and
push
pop
xlat
in
fs
fnstsw
mov
add
and
and
mov
lea
adcb
loop
pushf
push
mov
mov
je
bound
and
sub
test
rorb
movsb
push
pop
pop
loopne
add
fs
aad
dec
arpl
pop
stos
push
xor
fmuls
cld
out
fs
daa
xor
js
stc
int3
push
and
xor
sbb
scas
jno
cmp
cmpsl
inc
cli
cmp
xor
pop
sbb
mov
xor
pop
adc
cltd
inc
jo
jmp
ljmp
push
dec
pop
fwait
jo
rorb
sahf
fcmovnb
pop
fsubrl
push
mov
xchg
cmpsl
cmp
mov
and
adc
cmc
test
jns
mov
fadds
out
xchg
sub
sub
mov
sub
and
shlb
popl
lea
pop
push
mov
jnp
dec
outsl
sbb
movsl
jno
jg
xchg
xchg
adc
mov
and
or
cs
aas
lods
cwtl
popa
lcall
inc
cmp
push
imull
in
out
cmp
inc
mov
and
mov
cmp
inc
cwtl
lock
inc
ss
lret
iret
xlat
repz
test
lret
pop
inc
mov
ret
loope
cmpsb
jg
or
and
push
push
adc
aas
leave
sbb
add
pop
mov
sub
inc
or
mov
pushf
in
sbb
adc
cwtl
in
add
mov
fcompl
mov
adc
xchg
xor
dec
lret
sbb
shll
mov
xchg
push
mov
lods
jp
sbb
dec
movsl
roll
inc
mov
jecxz
addr16
les
xchg
sti
mov
add
jl
or
loope
mov
adc
push
push
fists
jmp
add
jmp
inc
push
mov
out
xor
mov
repz
adc
addr16
adc
lock
jg
sbb
movsb
test
fdivrs
aad
pop
lret
ficoml
add
push
mov
xor
mov
sarl
sbbb
mov
xchg
inc
js
imul
repz
xchg
pop
pop
stc
out
xor
jecxz
jo
xorl
or
insb
leave
enter
sahf
enter
pop
push
xorl
xlat
faddl
fdivrs
push
jb
fdivl
loope
ficoml
movsl
aam
lock
clc
sbb
shrb
scas
add
ja
in
cmp
rcrl
jmp
fiaddl
psubq
and
or
bound
das
rolb
pushf
and
push
or
dec
in
cmp
dec
push
loopne
ss
ljmp
xor
pop
lahf
sbb
xchg
push
js
cmp
test
cmc
rcl
pop
adc
jne
mov
mov
fstp
icebp
stc
outsb
gs
jmp
add
sbb
lods
jecxz
repz
fsubs
sbbb
sub
jae
pop
pop
popf
and
mov
push
push
adc
roll
je
sbb
dec
insb
popa
daa
adc
xor
or
pop
nop
pop
test
mov
sti
das
pop
int3
xor
inc
popf
push
ds
psrlq
or
jmp
test
fisttps
insb
mov
lahf
das
mov
imul
pop
fcomi
test
or
lea
jecxz
imul
lahf
fisubl
adc
dec
int
imull
inc
inc
addr16
in
sbb
pop
jns
loope
lock
or
cmpsl
std
dec
push
fwait
cmpsl
insb
jae
jo
cmpb
adc
add
fwait
pop
aas
xchg
insl
aaa
testl
mov
push
cmpsb
pop
idiv
pusha
mov
sub
inc
push
aad
fcmovnbe
shlb
insl
test
fsubr
in
nop
lea
and
aas
aas
jne
inc
sub
imul
aaa
shl
cltd
pop
xor
lret
enter
or
sub
dec
sarl
mov
lahf
imul
add
lret
push
inc
repnz
mov
add
mov
dec
sbb
in
push
insl
aad
add
fs
jge
out
pop
loope
es
sahf
or
cltd
and
pusha
fucom
fsubl
shrl
sbb
pop
fadds
cltd
inc
cwtl
les
xchg
imul
cmp
scas
sbb
jp
fcomps
inc
outsl
les
outsb
sub
aam
das
nop
dec
mov
ss
clc
ss
cmp
pop
les
repnz
test
push
sbb
fisubl
into
mov
cmp
movups
mov
jb
loopne
cmpsl
out
in
sbb
cmp
ja
fmulp
or
scas
dec
pop
lea
xor
fwait
lcall
lcall
mov
sbb
inc
test
xlat
ja
cmc
xor
xlat
ljmp
lock
mov
lea
jbe
mov
mov
sbb
push
push
cwtl
out
or
sub
add
cmpsl
pop
sub
imulb
in
filds
rol
je
mov
mov
add
fisttps
mov
repz
out
fmuls
icebp
arpl
sbb
insb
pop
aas
out
mov
jne
push
mov
notl
jne
pop
lods
scas
push
pop
sbb
fisttpl
xchg
sti
add
mov
sub
jp
cmp
lods
scas
cmc
int3
mov
sbb
cmp
pop
dec
insb
outsl
leave
cmp
ljmp
int
outsl
lods
nop
pusha
ljmp
push
and
rcl
lcall
and
cltd
pop
pop
ficoms
xchg
fcomps
div
in
pop
mov
fcoml
pop
nop
inc
or
pusha
push
pop
jg
shlb
out
scas
rcrb
adc
rolb
mov
std
pushf
sarl
repz
inc
movsb
cmp
lock
aam
mov
rorb
inc
inc
loope
cmp
add
xchg
lock
or
and
fisubrl
mov
sbb
cli
icebp
pop
fwait
testl
flds
sahf
clc
mov
and
mov
test
sbb
scas
in
mov
cld
xchg
add
outsb
adc
imul
stos
popf
cmpsl
cwtl
loope
pop
sub
popf
sbb
mov
add
repnz
sbb
pop
push
test
add
sahf
jp
incl
aam
dec
out
sub
mov
fldcw
imul
flds
mov
push
sbb
inc
xchg
add
frndint
xchg
fdivs
fstl
push
add
inc
rcr
rol
inc
lock
adc
push
pop
mov
out
fwait
je
jne
adc
dec
andb
push
dec
dec
sti
repnz
mov
jle
mov
pop
and
test
imul
dec
mov
fstl
aas
dec
pop
jns
cmpsl
adc
ret
sub
mov
out
jae
test
mov
decl
inc
sub
addr16
in
mov
stos
mov
idivl
test
ss
rcr
fdiv
lds
arpl
sbb
addr16
lcall
mov
dec
pop
imul
mov
sbb
cmpsl
mov
dec
pmaddwd
sbb
add
sub
xchg
inc
pop
xor
popf
xchg
lods
cmp
jne
add
mov
out
stos
and
ljmp
movsb
push
fcmovbe
int
xchg
insb
jb
mov
js
in
les
pop
xchg
push
lcall
push
add
insb
cmpsb
mov
and
ljmp
mov
dec
push
imul
or
pop
add
xchg
jne
cmp
push
fidivrs
popf
addr16
fchs
fidivs
ljmp
ja
shll
sub
aaa
push
lock
mov
inc
fs
mov
cli
mov
pop
add
dec
xor
lock
int3
adcw
in
mov
cmp
cltd
pushf
xor
dec
sbb
cwtl
jae
push
pusha
or
sub
test
mov
mov
jns
sub
dec
xor
fcmovu
popa
or
stos
and
push
cmpsl
fs
sub
adc
and
inc
icebp
movsb
jns
adc
dec
jns
ret
pop
adc
lahf
test
xor
icebp
cmovp
lea
inc
pop
adc
rep
out
fcomps
dec
decb
mov
dec
leave
cwtl
cli
mov
sbb
call
mov
fists
testl
cmc
mov
and
fcoms
andb
mov
stos
inc
fists
mov
cmp
stos
mov
pop
inc
xchg
jge
inc
movsb
mov
push
xchg
mov
jl
push
mov
mov
push
dec
and
leave
inc
loopne
xlat
dec
inc
lods
mov
daa
cwtl
mov
dec
out
fdivl
into
aad
mov
lahf
dec
xchg
mov
int3
mov
add
out
xchg
imul
cld
mov
or
xor
push
movsl
mov
stos
imul
rorb
out
fdivs
cmpsl
test
xor
outsl
xor
pop
popf
in
xchg
xlat
sarl
or
mov
out
jle
repnz
in
fwait
push
push
cli
sub
addr16
inc
imul
xchg
int
popa
testb
dec
cs
mov
dec
jno
lcall
adc
into
scas
mov
outsl
enter
test
mov
pop
jp
fcoml
xchg
cs
movsl
push
adcl
pop
xchg
insb
sti
imul
test
cwtl
loop
rcrb
popf
inc
xor
insb
adc
cmp
call
sbb
jb
bound
aam
or
lret
lret
xchg
mov
faddp
or
cmpsl
addl
ja
pop
mov
mov
popa
icebp
mov
movsb
mov
scas
push
adc
dec
xor
mov
mov
mov
mov
in
rorl
clc
sbb
pop
jbe
aad
call
mov
in
cli
fistpl
mov
jge
sahf
test
mov
out
rcr
mov
dec
mov
xorl
jle
outsb
ja
jmp
pop
dec
sub
shr
rorl
loop
cmp
or
jbe
mov
fisubl
add
stos
pop
ljmp
sub
sti
in
jae
adc
cmp
pop
sahf
mov
mov
in
jnp
into
push
mov
int
pop
js
clc
call
jle
mov
lahf
cld
push
call
pop
push
push
icebp
stos
test
xor
adc
and
sub
fistl
push
addr16
xchg
xor
jo
and
inc
or
pop
adc
stos
pushf
enter
xchg
scas
stos
push
pushf
outsl
xor
lret
arpl
mov
adcb
iret
xchg
and
int
loop
or
movsl
pop
mov
sbb
sbb
or
jmp
dec
xchg
fsub
inc
iret
hlt
push
cld
roll
xchg
mov
pop
mov
jmp
add
cmpb
xchg
xchg
mov
sti
jl
xor
mov
test
nop
jnp
fnsave
add
out
sbb
push
insl
fisubs
roll
xor
data16
jp
cmp
push
shll
out
lahf
in
adc
mov
stc
xchg
bound
jl
pushf
aam
push
mov
loop
push
mov
andl
scas
aad
lods
lds
mov
rol
jmp
test
push
and
movsl
pusha
mov
shl
pop
mov
dec
rclb
loope
insl
dec
jp
mov
test
inc
inc
push
outsb
mov
xor
xchg
not
mov
add
imul
les
aam
sti
sub
pop
pop
xchg
ljmp
fiaddl
xchg
pusha
mov
adc
popa
mov
test
dec
sub
movsl
aad
rorl
pop
adc
xor
and
mov
xchg
xchg
int3
inc
iret
and
fs
clc
mov
sub
mov
fldenv
stos
cmpsl
nop
pop
add
sub
lret
jp
sti
cli
dec
pop
fstps
jmp
mov
out
aas
and
test
mov
jmp
mov
imul
sbb
test
lea
jne
jno
add
scas
shll
jle
shlb
xor
dec
mov
std
and
xchg
out
shll
xor
xor
das
dec
add
jmp
repnz
lahf
and
pop
ret
imul
jb
outsl
lds
mov
push
sub
sbb
shrw
mov
ss
mov
lret
pop
out
imul
out
outsl
es
movsb
sub
jl
or
popa
pop
into
sub
aam
movsb
pop
shlb
pop
mov
jno
jecxz
cwtl
mov
div
test
xchg
push
mov
jp
mov
fwait
mov
mov
xchg
out
push
jae
xchg
pop
pop
test
pop
mov
gs
fadds
dec
mov
cmp
cmp
or
test
xchg
scas
clc
lds
add
lds
dec
psrlq
jmp
aam
ljmp
in
insb
int3
rorb
adcb
lret
jae
xchg
sbb
in
cmp
scas
xchg
xchg
xchg
pop
pushf
lahf
pop
icebp
jno
cmpsb
add
xor
sbb
mov
push
mov
jg
mov
es
fsubs
cmpsl
loop
je
fwait
pop
les
dec
or
jo
call
push
sub
dec
xchg
lret
test
adc
add
fmulp
sti
xchg
ljmp
sbb
inc
pop
fs
pop
pop
dec
notb
arpl
pop
mov
stos
mov
ror
mov
xchg
dec
mov
xor
out
bound
push
rclb
insl
xlat
movsb
mov
mov
fs
jmp
js
adc
inc
sbb
loope
cltd
or
gs
in
pushf
cmp
imul
cmp
cmp
add
enter
adc
and
sbb
mov
iret
adc
repnz
arpl
cmp
sub
bound
aaa
jo
adc
in
fwait
ss
cmc
push
das
ds
in
insb
rcr
cmp
mov
movsb
int
xchg
xor
outsl
jl
in
add
ja
push
ss
xlat
jo
adc
loopne
in
jae
xchg
imul
pushf
xchg
and
rclb
js
shll
dec
sbb
push
ds
pop
ret
cltd
sbb
mov
dec
leave
lds
mov
add
cmp
dec
sti
pop
test
in
shrb
out
fsubl
mov
dec
mov
xchg
mov
xchg
adc
outsl
adc
push
xor
bound
test
lea
pusha
jl
mov
xor
adc
sarb
jp
jnp
pop
push
push
sbb
push
or
dec
xchg
push
inc
dec
ljmp
les
push
jmp
xor
lock
mov
inc
lcall
jmp
push
stc
mov
mov
mov
pop
int
fsubp
dec
cmpsw
push
iret
sub
cmp
shl
add
dec
add
sub
cmp
fnstcw
loop
sub
add
xchg
lods
aaa
sti
dec
pop
mov
aad
lods
sbb
fnstenv
pop
xor
lods
sbb
pop
jnp
insb
mov
mov
out
pop
jb
ja
xor
inc
test
jle
jmp
or
or
add
ja
mov
adc
adc
gs
cli
xor
jnp
inc
sbb
xor
xchg
rcrl
rolb
fnsave
int3
femms
fildll
es
cmp
jno
dec
subb
inc
lea
mov
stc
mov
xor
fs
gs
cmpsb
mov
sub
test
pop
sti
call
jno
cli
pop
jae
and
xchg
pop
sbb
imul
lea
mov
mov
dec
push
mov
std
scas
add
mov
xlat
pop
xchg
aaa
pop
mov
dec
adc
rcll
adc
add
sub
pop
loopne
adc
adc
cmp
mov
shrl
or
mov
push
dec
scas
lcall
fcoml
adc
jle
jbe
pop
out
mov
rcl
mov
pslld
scas
add
push
fcom
inc
or
cmp
pop
mov
mov
mov
jns
cld
jnp
push
pushf
sub
imul
mov
pop
lock
jb
cmp
into
ret
ljmp
adc
inc
jle
jge
inc
push
xchg
ret
dec
xor
sarb
shll
std
jno
das
popf
leave
sub
mov
mov
dec
push
cmc
xchg
cmpsb
pop
sub
push
sub
jo
in
xchg
leave
shl
jl
pop
bound
out
or
clc
sti
cmc
inc
stc
xchg
lods
gs
inc
sub
xor
mov
test
add
pop
ds
add
sub
imul
je
in
mov
ds
jecxz,pn
iret
scas
xchg
mulb
ror
ds
leave
sub
insb
inc
jns
aam
lahf
sub
jmp
mov
add
lock
sbb
sbb
adc
cmpsl
rcll
and
int
lcall
xchg
jecxz
xchg
nop
mov
jb
xlat
clc
dec
push
mov
jo
sub
aam
repnz
int
xchg
pop
mov
xchg
push
mov
js
sbb
mov
add
out
xchg
loop
dec
mov
inc
cli
fstl
movb
add
hlt
out
jp
pop
jae
sub
fistpl
and
sub
mov
lea
and
add
aaa
inc
pop
or
dec
dec
icebp
jns
cmpsl
jo
addr16
arpl
cmpb
test
and
mov
and
aam
loopne
jmp
mov
dec
or
pop
sti
jns
adc
ret
jno
out
lret
les
xchg
or
insb
shll
jae
mov
sub
add
ds
jge
das
lods
xor
clc
and
xor
mov
out
jp
bswap
imul
dec
mov
sbb
inc
sahf
sub
filds
stc
popf
add
loopne
and
push
rep
add
and
xor
stc
cld
movb
repz
xor
ljmp
sbb
fldl
cmp
sbb
and
mov
pop
jo
test
sub
fwait
cs
scas
test
out
call
or
fstpt
inc
data16
add
movsb
sub
cwtl
or
dec
inc
pop
call
lea
cmp
shr
mov
push
mov
cvtpi2ps
bound
mov
jl
xchg
cli
and
aad
mov
mov
fsts
fcompl
scas
mov
xor
lock
out
out
jne
cmp
inc
dec
dec
pop
xchg
lods
mov
dec
inc
mov
enter
sub
das
mov
jns
mov
hlt
mov
shll
jg
xchg
jnp
gs
ds
xchg
leave
adc
fidivs
push
jno
cmp
enter
and
push
dec
icebp
cmp
adc
in
int3
popa
pushf
dec
fcompl
cmc
js
xor
imul
push
pop
lock
or
sub
outsl
mov
dec
dec
loopne
rolb
lods
xchg
das
and
insl
std
jmp
jle
std
rol
inc
stc
data16
mov
push
inc
and
jle
xchg
jne
inc
fsubrs
jb
pop
cmp
in
shll
mov
and
out
lea
js
shlb
jg
lds
leave
cmp
or
mov
mov
dec
cmp
pop
andb
push
xchg
xchg
push
jne
loope
adc
push
adc
push
ja
xchg
icebp
pop
cmpsb
aad
rcrl
je
lods
js
mov
out
popa
mov
or
mov
jecxz
and
push
les
jne
jp
pop
in
sub
or
pop
pop
ret
dec
inc
mov
mov
mov
dec
xor
loope
sti
nop
xor
or
test
addr16
mov
mov
push
scas
cmp
mov
invd
scas
sub
call
adc
xchg
mov
cmc
cmp
pop
aas
sbb
inc
fisubs
aam
mov
xchg
add
aad
pop
pop
or
mov
aas
clc
add
imul
inc
push
mov
hlt
ret
mov
mov
outsb
jns
xor
in
loope
mov
xchg
mov
dec
xor
fcoml
inc
mov
fwait
data16
cmp
imul
es
dec
rorl
insl
lret
dec
push
ficomps
lods
dec
insl
sarb
or
rorl
cltd
push
lods
jbe
mov
xchg
loop
icebp
fildll
cmp
or
wbinvd
adc
mov
or
or
data16
inc
data16
outsl
push
xor
aaa
fxch
mov
mov
loope
roll
hlt
sbb
decb
pop
insb
jns
aam
mov
ja
xchg
shlb
add
cwtl
stos
std
add
xor
sbb
jl
div
add
mov
push
xchg
dec
imul
cltd
testl
pop
mov
fs
jbe
fdivrs
or
cmpsl
insb
jle
or
addr16
and
xchg
xchg
mov
xchg
std
sub
outsl
or
push
lahf
xor
xorb
xor
sbb
in
iret
xor
cmpsl
mov
sbb
incl
jg
mov
outsl
fdivl
mov
mov
jne
inc
fsubs
mov
push
das
lahf
sbb
insl
shll
push
call
cs
dec
fs
sbb
mov
adc
adc
call
mov
stos
inc
mov
in
movb
call
jge
push
outsl
sbb
inc
xor
pop
fsub
movsb
loop
jno
jbe
mov
lcall
push
rorl
inc
arpl
scas
inc
mov
cmp
dec
mov
or
jno
scas
cmp
adc
mov
punpcklbw
test
inc
inc
aaa
fsubl
push
xchg
cmc
and
orb
pusha
nop
cmpsb
mov
pop
cld
pop
pop
aaa
and
and
stos
stos
xor
movsb
mov
xor
loope
xlat
fidivrs
mov
mov
mov
adc
jg
push
sbb
out
xchg
cs
fsts
das
push
and
xorb
ja
loop
into
add
fst
lcall
sbb
lret
sbb
jl
xchg
mov
push
jg
mov
lcall
mov
rorl
and
ficomps
add
aam
mov
movsb
pop
sbb
stos
or
inc
movlps
jbe
mov
push
shrl
jne
iret
push
add
xor
ss
loope
rcr
dec
mov
hlt
mov
lcall
mov
ret
movsl
sub
fnstenv
das
pop
push
sbb
cmp
jnp
xchg
test
sbb
inc
add
pushf
mov
pop
enter
add
out
lret
xlat
add
mov
scas
jno
sub
jl
cmp
push
adc
repnz
inc
and
mov
sarb
in
out
mov
or
mov
mov
hlt
cmp
and
std
cmp
sub
add
ljmp
mov
sub
mov
out
sahf
int
addr16
sbb
movsl
jnp
test
fnstcw
dec
das
xchg
int3
pop
adc
aam
lahf
imul
or
fldl
add
fildl
or
sarb
call
push
jnp
cmc
or
fwait
cmpsb
das
std
inc
adc
ret
enter
pusha
sbb
test
jns
sti
syscall
movsb
mulb
mov
loop
lcall
fisttps
jle
in
ficoml
fwait
mov
pop
add
inc
dec
lock
sbb
loop
pop
jno
sbb
cs
dec
mov
jae
inc
xor
test
jp
outsl
add
bound
es
add
mov
movsb
mov
in
fmulp
sub
mov
sub
mov
cld
stc
sti
mov
lahf
push
adc
hlt
insb
cmp
test
sub
cmp
push
jnp
fstl
mov
mov
sub
repz
jno
xor
adc
testl
popa
sbb
icebp
push
test
cmp
xor
jo
pop
popf
js
adc
mov
les
mov
in
sub
inc
test
push
pop
cld
and
mov
xor
xchg
sub
add
mov
rol
mov
pop
loope
dec
dec
movsl
xchg
mov
imul
cmc
jl
in
hlt
mov
out
out
es
or
and
inc
sub
sar
push
and
aam
scas
fimull
jmp
insb
jno
pop
cmp
repz
data16
push
pop
jg
sbb
rcl
test
xchg
fwait
push
and
xchg
sahf
mov
sahf
aad
jb
xchg
mov
jae
loopne
mov
test
cld
lret
cli
mov
cltd
pop
sbb
cmp
mov
and
loope,pn
jnp
inc
jno
pop
adc
jbe
lods
cmp
std
sub
fisubs
lods
aam
lds
mov
jge
pop
loope
lahf
aaa
sti
in
lods
inc
mov
jg
fbld
pop
xchg
and
fistps
mov
imul
sarl
stc
xor
or
mull
ffreep
mov
xchg
pusha
mov
pop
mov
push
aaa
fldcw
mov
test
les
sahf
stos
int
or
iret
lcall
push
test
mov
jne
fsubs
xchg
cli
in
popf
push
cmp
divl
inc
das
or
sub
push
movsb
sar
lea
mov
test
and
aas
xchg
lret
sub
scas
popf
out
insl
cmpsb
leave
mulb
js
pop
insl
jnp
pop
jg
mov
jne
sbb
mov
enter
mov
imul
scas
mov
mov
andb
and
repz
sub
test
ret
xchg
pslld
stos
test
cmp
cmp
imul
test
mov
mov
ja
xor
dec
cmc
ficompl
dec
roll
xor
scas
jno
mov
fisubl
mov
cmc
xor
push
xchg
pop
lock
pop
jmp
mov
stos
mov
ja
test
ror
mov
jmp
add
inc
les
stc
jne
scas
add
das
xor
je
pop
nop
dec
das
jae
pop
cs
divl
pop
enter
jecxz
mov
adc
gs
sbb
insb
pop
mov
inc
adc
jp
pop
pushf
sbb
mov
inc
popf
repnz
jnp
dec
xlat
xchg
rcll
add
mov
iret
aad
pop
scas
leave
sub
cmp
add
add
cmpsb
out
mov
pop
push
fbstp
jo
jl
sbb
mov
pop
pusha
mov
nop
movsb
pop
fstps
insl
push
jmp
fs
jl
cltd
sub
inc
pinsrw
pushf
jnp
dec
cmc
stos
daa
clc
xlat
sarb
pop
cli
icebp
push
rcll
push
or
or
sbb
mov
icebp
dec
pusha
das
std
inc
pop
mov
and
push
cmp
ja
stc
dec
ss
cmp
and
pop
clc
mov
lret
add
xor
jg
or
movsb
ret
dec
or
js
sbb
insb
adc
loopne
pusha
xor
mov
push
xlat
mov
add
cmp
cmp
mov
pop
sub
sbb
mov
pop
jae
outsl
sub
or
fistpll
xor
jo
popf
fsts
stos
mov
sub
push
or
xor
sub
mov
out
fwait
xchg
jns
js
mov
mov
adc
mov
sbb
xchg
push
mov
js
sti
push
imul
rcll
movsb
mov
dec
jno
std
gs
xchg
cmp
push
xor
add
add
int3
std
cwtl
mov
fwait
mov
hlt
xchg
shr
mov
ja
fnstenv
and
popf
ficompl
es
mov
popf
bound
dec
jl
mov
inc
add
xchg
sub
outsb
pop
and
pop
inc
pop
daa
pop
les
insb
insl
sbb
loop
subb
movsb
pop
adc
clc
sub
iret
jecxz
inc
cli
clc
or
push
cmp
xchg
mov
xor
mov
xor
idivl
add
xor
std
ds
aad
stos
sub
mov
sbb
mov
cmp
cmovp
push
subl
mov
mov
mov
cmp
sub
push
xchg
mov
push
int
jno
xchg
mov
sub
inc
out
and
mov
aas
stc
shll
dec
jg
dec
sti
pop
cmp
mov
int3
jb
pop
xor
push
push
jnp
out
out
sbb
fisttps
mov
stos
popa
cli
fcmovnbe
popf
add
mov
sub
sub
or
aam
sub
sahf
enter
cld
rorb
mov
aam
icebp
jp
xor
sahf
pop
jae
test
mov
inc
xor
xor
push
mov
out
and
bound
or
and
int
jge
lods
mov
shll
and
shlb
adc
inc
faddl
adc
loope
loope
mov
js
pop
jp
out
sbb
stos
loopne
cs
xchg
test
cld
mov
fsts
mov
push
dec
sub
stos
fisttpl
lret
std
push
cs
mov
push
scas
jb
mov
into
into
push
push
mov
in
clc
std
inc
jns
sbb
shlb
insb
fsubl
out
hlt
jnp
out
mov
or
mov
int3
xchg
loope
test
ja
sbb
jbe
mov
lock
les
cs
sub
popf
inc
out
cli
scas
mov
pop
call
testb
scas
cs
dec
sbbl
stc
jp
jge
sbb
fxch
sub
loopne
cmp
xchg
fiaddl
into
lds
clc
into
les
pop
pop
inc
ds
cs
loopne
cmpsl
stc
outsl
xchg
jns
lret
test
lods
pop
pop
lds
dec
inc
das
xchg
iret
pop
in
movsl
add
cmpsl
mov
sub
cld
jne
aas
jecxz
mov
jnp
in
inc
sbb
ss
andb
testl
aas
push
jo
jbe
movsl
push
sub
fs
out
mov
movsb
outsb
outsb
arpl
iret
dec
mov
aad
mov
pop
shr
or
int
loope
movsl
mov
in
jbe
cld
aad
mov
mov
cld
cmc
pop
les
cli
jb
jns
into
sbb
mov
cmp
xlat
cltd
orb
cmp
jns
pop
fimuls
enter
and
mov
movsb
sub
pop
cmpsb
mov
mov
aaa
inc
add
mov
lret
shlb
or
movzwl
repz
mov
insl
dec
mov
dec
mov
mov
push
mov
movsb
jae
rcrl
repnz
cmp
pop
pop
rcr
aad
loop
inc
ljmp
pop
out
popa
and
cmpl
xor
addr16
or
jns
jns
int3
mov
shl
jle
int3
push
das
adc
testb
cmpsl
cmpl
mov
pusha
adc
dec
sub
push
sbb
xor
fs
mov
jnp
xor
cmpsl
mov
mov
adcl
ljmp
ret
add
jmp
lcall
jge
sub
pop
pusha
aas
pop
inc
ja
stc
lock
mov
sub
push
dec
lret
pop
cs
mov
pop
add
bound
xchg
cwtl
inc
sahf
test
push
fidivl
jo
inc
push
dec
dec
int
and
sbb
test
out
cmpsb
fs
pop
xchg
jl
pop
dec
pusha
iret
out
dec
or
pop
outsb
iret
call
shr
cmp
dec
decb
rolb
xchg
adcl
adc
cltd
pushf
and
lods
std
stc
jp
or
or
mov
hlt
jecxz
loopne
int3
jg
test
push
push
push
xor
jno
pop
pop
pop
shll
mov
test
add
add
dec
fbld
mov
push
jns
jo
cwtl
rcrl
arpl
das
scas
sbb
pushf
mov
ljmp
std
mov
jge
lret
xchg
dec
mov
adc
sub
jne
dec
test
in
mov
jo
mov
int3
repnz
dec
dec
lahf
cmp
popf
ds
mov
mov
in
xchg
ds
add
jl
and
cmc
xchg
in
jle
enter
rcrl
test
xor
mul
mov
test
repnz
mov
xor
into
xchg
push
pop
int
popf
fcomps
out
addr16
imul
lcall
inc
mov
lcall
adc
es
mov
divb
imul
mov
jo
or
pop
bound
dec
add
dec
or
cmpsb
pop
stos
dec
out
push
jo
pop
push
adcl
push
imul
sahf
mov
outsb
frstor
imul
dec
scas
int
cltd
ja
test
test
push
stos
daa
repnz
xor
repz
sbb
add
cmpsb
icebp
insl
in
data16
mov
inc
pop
add
pop
or
sbb
bound
pop
popf
shlb
add
adc
lret
mov
sti
xchg
adc
fs
inc
cli
push
sti
mov
rol
sbb
or
mov
add
data16
je
bound
sti
cmp
es
ret
inc
adc
jmp
mov
push
and
rcrl
xlat
cltd
jbe
sbb
insb
inc
das
xchg
test
mov
pop
dec
in
or
add
xor
nop
adc
clc
and
pop
push
mov
and
fwait
add
sbbl
cwtl
incl
cltd
mull
jnp
cld
data16
inc
xor
inc
sbb
dec
push
push
cmp
outsl
test
pusha
xchg
pop
ss
ja
add
je
jge
mov
mov
sub
fstp
enter
roll
bound
jp
sbb
cmp
arpl
in
bound
dec
popf
clc
xor
mov
xchg
mov
cs
jns
push
cmp
out
xor
addr16
popf
cmp
mov
mov
mov
xchg
mov
fisttpll
out
stc
push
inc
xor
push
popa
shlb
into
es
hlt
es
repnz
adc
sub
loop
mov
mov
mov
nop
pop
dec
cwtl
pop
aad
or
js
cmp
loope
add
hlt
ljmp
inc
data16
cmp
int3
mov
mov
inc
outsb
push
fstpl
outsl
loop
sbbl
jl
subl
pop
ret
jmp
add
cwtl
xchg
mov
mov
sbb
jmp
movl
mov
dec
shrb
inc
dec
xchg
xor
inc
xchg
xor
in
aad
and
cmpsb
fwait
inc
stc
push
das
and
add
jo
mov
mov
mov
movsb
testb
mov
enter
pop
mov
mov
fwait
adc
mov
adc
sbb
test
aad
sbb
pinsrw
js
sbb
call
xor
xor
lock
test
addl
cli
movsl
jo
sbb
gs
push
pop
xor
or
sbb
sub
scas
lahf
imul
daa
jo
in
push
aam
fidivrl
out
fsubrl
adc
jo
xchg
dec
jp
xor
rorb
arpl
jb
jmp
dec
push
xor
mov
dec
inc
pop
fisubs
movsl
pop
fcoml
aad
mov
mov
scas
add
jns
in
inc
ret
jl
test
rorl
out
sub
fsubs
xchg
push
shlb
jns
and
push
mov
jns
fs
test
mov
mov
adc
add
jmp
inc
testb
push
xor
mov
das
fdivrp
sub
pop
pop
push
mov
push
test
fists
mov
hlt
pop
pusha
dec
and
jge
or
and
xchg
jae
mov
int
out
int3
ljmp
icebp
es
aam
pop
insb
inc
stos
movsl
loopne
stos
out
ret
pop
inc
dec
aaa
inc
xchg
mov
aam
rorl
call
pop
xchg
addl
bound
lret
adc
pushf
pop
int
lods
adc
test
cmpsl
add
out
int
mov
dec
hlt
lods
jp
jno
mov
xor
adc
gs
lea
and
in
lods
sbb
pop
stos
aaa
pushf
test
fwait
and
aam
testb
jmp
mov
clc
out
push
xor
sahf
leave
inc
das
or
ja
add
bound
sbb
or
mov
test
xchg
shr
jl
outsl
and
lods
xchg
push
mov
cs
js
push
pop
rcr
ds
iret
or
adc
push
in
adc
push
mov
test
mov
or
xor
xor
lret
in
out
fiadds
mov
addr16
jge
push
jp
push
inc
lahf
addr16
popa
test
out
sti
leave
call
sbb
mov
jle
jnp
loop
mov
push
ljmp
scas
insb
sarl
repz
dec
mov
fwait
mov
inc
jecxz
fisubs
out
pop
test
pop
mov
xchg
imul
dec
mov
icebp
sbb
inc
iret
push
neg
lds
dec
cwtl
mov
jp
xor
and
pop
sub
arpl
jmp
repnz
daa
imul
and
and
movsl
jmp
xchg
fimuls
and
add
dec
or
dec
add
dec
ja
addr16
mov
loopne
inc
xchg
sbb
inc
mov
adcl
mov
ud0
cltd
mov
lods
add
push
sbb
bound
mov
sub
add
cmp
sbb
jno
shl
push
cwtl
sbb
xchg
add
or
mov
or
out
pop
in
mov
jecxz
dec
ret
test
loope
adc
ficoml
sahf
lret
imul
lcall
cmp
fmuls
xor
inc
loop
mov
push
mov
addb
or
mov
and
jns
mov
fs
leave
iret
das
sbb
push
mov
inc
stos
aaa
addl
pushf
sub
sub
mov
xor
and
inc
inc
mov
mov
mov
mov
jmp
fs
and
dec
push
loope
xor
sarl
or
jg
sub
es
mov
mov
sub
adc
gs
iret
testb
mov
jge
stos
sub
enter
fidivl
das
mov
push
adcb
icebp
cmp
jns
dec
mov
imul
lock
cmpsb
ror
cmc
dec
push
add
dec
pop
jle
movsl
sub
jns
cmp
out
in
mov
and
pop
sub
cwtl
mov
xor
cmpsl
adc
push
mov
ds
rorb
jecxz
xor
mov
jle
inc
jno
mov
lods
pop
or
test
inc
dec
outsl
push
jmp
and
rcll
mov
xor
rorb
test
dec
int
xchg
adc
mov
xchg
subb
pop
inc
add
jno
adc
test
ret
sbb
lret
cmpsl
cmova
sub
adc
push
lock
and
mov
aaa
xchg
sub
mov
inc
cmp
mov
test
adc
push
imull
lods
lahf
push
push
aad
out
lret
or
mov
imull
pop
jmp
mov
mov
jl
inc
push
ds
outsb
push
xchg
mov
sbb
push
dec
push
lret
sub
xchg
aam
dec
ret
dec
inc
mov
scas
inc
ret
cld
iret
imul
repz
das
out
scas
fnstcw
dec
jg
mov
std
mov
out
ljmp
ret
or
popa
jns
test
cmc
dec
sbb
cltd
and
dec
dec
je
push
cmp
fdivs
sub
cmpsl
adc
and
pop
mov
cltd
loop
fcomp
pop
adc
sbb
dec
pop
jae
addr16
mov
cmp
andl
repnz
cmpb
cmpsl
push
jae
inc
adc
movsl
lcall
ljmp
cmp
pop
pushf
test
cld
pusha
pop
push
ljmp
add
aad
sub
iret
dec
pop
mov
nop
pop
sub
fisttpll
push
scas
mov
adc
mov
mov
les
jl
out
adc
xor
mov
inc
jp
rcrl
dec
xor
ffree
scas
insl
jmp
adc
push
je
push
lods
push
mov
dec
es
pop
or
imul
xorb
test
pop
out
fldenv
jnp
cmp
sbb
dec
dec
xlat
adc
mov
inc
dec
cmpsl
and
lahf
sub
jmp
ds
cld
lret
inc
adc
mov
test
adc
inc
push
and
push
xchg
outsl
dec
shrl
in
fadds
and
jp
or
clc
testl
mov
dec
fists
jg
add
xchg
xchg
hlt
dec
jmp
repz
cmp
push
jo
movsb
mov
aas
mov
mov
push
ds
jbe
repz
out
lcall
aaa
into
jg
stos
cmp
aad
test
xchg
xor
or
addr16
bound
push
roll
push
outsb
popf
scas
bound
in
xor
xor
sbb
inc
movsl
test
cmp
and
adcl
hlt
sbb
movsl
jb
stos
push
pop
pop
dec
lea
pushf
jbe
insl
je
mov
mov
or
icebp
dec
push
test
push
push
shrl
sbb
pop
lds
xchg
push
push
pop
xchg
push
xchg
mov
js
or
mov
imul
sub
lcall
dec
push
shll
lcall
enter
mov
adc
lcall
bound
scas
jns
pop
push
mov
jbe
push
stc
inc
adc
mov
push
inc
aad
inc
mov
jne
into
bnd
push
mov
js
and
push
jp
fnstenv
jg
aas
lcall
lods
in
ja
movsb
or
cltd
imul
pop
cld
pushf
and
call
jp
add
fldcw
push
test
fidivl
dec
testl
stos
jno
cmpsb
dec
fcomps
cmp
insl
sbb
add
adc
mov
cmp
testl
sub
mov
mov
lahf
lods
out
in
push
sti
pop
add
xchg
sub
inc
scas
out
das
pop
ret
push
int3
add
inc
inc
insl
div
stos
stos
aam
imul
andl
scas
dec
jmp
mov
inc
sti
or
add
xchg
push
popf
pop
ss
ljmp
jb
out
mov
fwait
sub
out
cmp
lock
dec
cs
jecxz
shrl
jmp
push
loope
mov
xor
nop
xchg
mov
mov
xchg
rclb
cli
repnz
mov
cmp
and
xor
cmp
rep
test
mov
imul
lea
xchg
into
aaa
ljmp
negb
sahf
leave
loope
xchg
cmp
in
xor
scas
pop
sub
movsb
popa
xchg
and
xor
loope
ds
adcl
push
xchg
pop
roll
fistl
and
les
sub
call
xchg
pop
sbb
inc
je
rorb
lret
ficoml
jmp
imul
in
xchg
sbb
out
ret
rol
sbb
inc
repnz
dec
scas
nop
imul
js
shl
mov
lea
mov
add
push
sub
sub
xor
lret
push
sub
in
xchg
lahf
icebp
into
dec
pop
in
cmp
jbe
fisttps
mov
jnp
fnstenv
or
sbb
inc
imul
cmp
or
xchg
add
push
xchg
cmpsb
inc
jns
shll
mov
adc
pop
inc
fimull
sub
in
jecxz
push
insl
pop
jmp
mov
ja
mov
mov
dec
jp
daa
push
rep
inc
ljmp
xchg
jmp
jbe
xor
mov
cmp
shr
popa
jb
cmp
push
in
rcll
xchg
nop
xor
stc
bound
fwait
out
scas
pop
inc
cs
xor
push
inc
pop
iret
push
mov
insb
adc
mov
inc
fldcw
pop
push
dec
or
fs
mov
push
cmpl
cmp
add
scas
popa
cmpsl
lret
jno
nop
mov
lds
add
mov
dec
rcll
lods
fwait
aas
sub
ljmp
out
cwtl
xor
dec
inc
dec
jmp
xor
inc
push
pop
mov
add
faddp
push
in
stos
std
pop
ss
in
data16
or
flds
iret
imul
insb
jnp
nop
sbb
jnp
push
ljmp
mov
dec
mov
outsb
dec
pop
xchg
stos
push
cwtl
idivl
aam
rorl
mov
jae
jecxz
pop
mov
sbb
push
sub
lock
adcl
jb
jns
xchg
arpl
mov
cltd
out
lds
or
addr16
or
mov
mov
cmc
inc
aas
sub
xor
mov
enter
cmpsl
leave
imul
adc
lret
mov
mov
mov
popa
mov
outsl
loope
mov
push
jnp
cmp
je
sti
pop
in
sub
stos
pop
push
pop
jbe
sarb
jecxz
add
pop
cmp
popa
jne
subl
inc
fs
mov
stc
sbb
xchg
xchg
pop
test
maxps
daa
and
jnp
jae
insb
mov
add
inc
xchg
divb
shrl
push
scas
insl
or
scas
mov
or
push
cs
or
pop
cmp
je
cmp
xchg
or
and
inc
out
fprem1
sub
in
loope
add
or
sbb
mov
lret
push
pop
add
jb
out
outsl
test
jne
sub
sahf
lods
popa
dec
dec
daa
jnp
andb
cmp
shlb
xchg
inc
mov
dec
fmuls
fsubl
repnz
jecxz
push
sub
je
loopne
jno
jecxz
dec
mov
mov
ret
mov
out
cmp
ljmp
fisubl
adc
lret
mov
or
inc
loopne
sahf
cmp
lods
ss
imul
pushf
cmp
pop
push
add
outsb
xchg
dec
and
movl
push
sub
jg
xchg
mov
jge
loop
fcoml
clc
outsl
jmp
jge
mov
jae
ret
fsts
add
fadds
inc
lea
into
out
jmp
test
sub
popf
movsl
sub
and
rorl
and
pushf
inc
cmp
xor
aad
fbstp
sbb
mov
popa
jg
out
movsb
mov
jp
xchg
or
and
add
cmp
pushf
xor
fmull
iret
std
push
bound
lret
push
fldenv
leave
mov
icebp
insb
adc
fstps
shrl
or
mov
push
shrb
inc
and
and
mov
imul
sub
xchg
mov
loope
test
sub
repnz
cli
shr
test
jbe
les
lcall
aad
iret
add
mov
cmc
lret
and
xchg
lock
mov
push
mov
out
dec
insl
mov
push
pop
fldl2t
movsb
pusha
xlat
mov
addr16
push
aad
or
pusha
mov
push
xlat
fs
jns
fldt
jb
fwait
xor
xchg
enter
and
gs
outsl
test
jo
inc
addl
and
push
pop
jmp
pop
pop
jae
inc
out
dec
int
jl
out
fadds
aaa
and
and
jecxz
dec
inc
inc
cmp
mov
push
lahf
clc
xor
xchg
insl
fs
push
in
daa
pop
xor
mov
xlat
jnp
and
addb
je
jge
and
xchg
cmp
iret
dec
stc
je
fmull
inc
out
jo
push
and
pop
push
popf
mov
sbb
xchg
test
and
push
out
push
into
pusha
cmp
in
loopne
out
in
test
mov
pop
xorb
xor
jecxz
data16
or
fimull
add
sbb
nop
xor
out
stos
mov
jl
loope
adc
in
pop
lret
mov
pop
clc
push
inc
addr16
inc
cmpsb
dec
bound
sbb
std
inc
bound
data16
mov
lret
mov
les
bound
xchg
jb
mov
bound
sub
or
stos
test
int3
add
xor
test
xchg
sbb
pusha
xlat
adc
sti
mov
sti
imul
lds
mov
aaa
xchg
jno
fimuls
xchg
push
pop
dec
repz
or
xchg
cmpsb
lahf
fisubs
lods
xor
inc
or
sub
shrb
pop
iret
test
mov
dec
aaa
jle
in
xor
lahf
sti
inc
mov
and
mov
push
lods
loope
imull
test
mov
jl
lret
adc
stc
lods
push
mov
cmpsb
out
call
loopne
add
imul
lret
cmp
ficomps
mov
jl
inc
push
xor
pop
dec
aas
ljmp
shlb
dec
movsb
sbbl
cmp
xor
mov
jmp
std
es
or
add
fsubl
out
movb
adc
jmp
test
in
dec
push
out
subl
loop
fwait
orl
cltd
addr16
and
imull
aad
jb
ret
cmp
jge
pop
mov
push
aaa
mov
push
inc
pextrw
push
mov
mov
mov
adc
scas
mov
arpl
ret
popa
lods
sub
xchg
lahf
nop
push
fdivr
xlat
insl
mov
or
push
clc
mov
jge
push
sti
pop
imul
pop
cltd
push
mov
stos
xor
repz
dec
test
sbb
shrl
mov
sub
and
xchg
inc
add
popa
jbe
lea
sbb
push
ret
sarb
jge
xchg
jg
mov
popa
inc
fstpl
clc
mov
jp
xor
jge
hlt
cmpb
addl
push
push
mov
xor
jno
dec
or
cli
or
mov
fiadds
inc
jmp
loop
mov
push
jmp
mov
mov
stc
orl
dec
jmp
jl
movsb
dec
fcmovbe
push
mov
rcrl
push
int3
pop
movsb
mov
inc
add
dec
fisubrl
cmp
call
nop
cmpsl
data16
xchg
and
sub
adcl
inc
out
jp
mov
sbb
pop
push
out
xchg
sbb
or
bswap
nop
sbb
mov
movsl
outsl
dec
sub
in
dec
fwait
cwtl
cmpl
mov
ljmp
stos
repz
dec
sbb
jg
adc
sub
and
sub
xlat
cmp
or
xchg
outsb
int
sbb
sub
xor
xchg
mov
pop
aad
jae
cmp
or
pop
mov
test
ret
pop
imul
lds
outsl
sbb
and
push
ja
push
cld
clc
arpl
ret
lret
cmc
pop
mov
andl
push
adc
iret
cltd
aaa
ret
popa
cmpsb
fidivrs
int3
jecxz
adc
fdivs
mov
hlt
sahf
hlt
cld
movsb
addb
std
xchg
or
sbb
iret
mov
ffree
mov
lods
add
ret
daa
jnp
scas
mov
setae
xor
mov
inc
ret
push
fdivrp
movsb
int3
push
inc
pop
lret
fiadds
pop
push
sub
xchg
test
jl
inc
add
jle
cmp
xchg
cmc
pop
loopne
fists
pusha
cmpsb
fmulp
cwtl
xlat
aam
xlat
mov
jg
sbb
int
dec
or
test
xor
push
xchg
test
out
nop
movsl
adc
call
xchg
cmp
test
in
dec
lret
out
lret
mov
sbb
jno
je
out
fldt
mov
je
push
dec
loopne
hlt
sub
lcall
or
adc
ja
fs
add
sahf
xchg
pusha
iret
out
aaa
sti
mov
mov
mov
add
mov
or
or
aaa
test
push
gs
jmp
add
dec
insb
shrb
ret
das
arpl
popf
add
pop
xchg
rorb
sbb
in
jmp
xchg
jg
xchg
sub
push
into
jmp
nop
push
dec
andl
jle
lods
jmp
roll
cmpsb
pop
jg
sub
cmp
mov
aam
popf
lods
xchg
loop
nop
sub
sbb
jg
dec
inc
adc
lret
pop
shll
mov
daa
mov
xor
ret
mov
cmc
xchg
jnp
pop
pop
gs
adcb
xchg
pop
test
push
aaa
out
pop
in
imul
sbb
mov
and
add
int3
dec
stos
les
je
push
loop
push
fistl
jmp
mov
xor
add
mov
pusha
loope
lds
mov
gs
sbb
cwtl
sbb
jne
les
or
add
pop
pop
fdivrl
xor
jle
cmp
push
dec
adc
cmp
mov
inc
ss
and
push
movsb
mov
in
push
mov
cwtl
mov
xchg
popf
sbb
xchg
xrelease
imul
repnz
push
mov
or
sub
stc
sbb
xchg
mov
andl
fsqrt
cmpl
mov
jp
pusha
std
add
mov
cld
fiaddl
std
adc
mov
movsb
xor
scas
pop
lcall
les
dec
ljmp
mov
hlt
addr16
inc
mov
popa
outsb
nop
ret
mov
mov
adc
push
inc
imul
add
pop
push
pop
cld
mov
sti
lret
push
je
lods
pop
inc
test
jmp
inc
lcall
sbb
and
add
jne
dec
imul
mov
fdivrl
jle
loopne
push
inc
fmulp
ljmp
mov
inc
xor
not
stos
add
push
lds
fisubrs
cmc
xchg
jb
mov
sub
aad
lahf
jae
data16
xchg
jb
pop
in
push
int3
push
cmpsl
cmp
cli
stos
fs
jge
stc
or
sbb
sub
push
adc
daa
sub
cli
sbb
pop
rol
icebp
insl
pop
lret
adc
incb
cmc
stos
popf
add
sbb
sub
inc
fsubs
stos
stc
inc
gs
pop
fistl
sub
xchg
xor
std
mov
cmc
imul
lds
stc
pop
pushf
add
mov
cmp
stos
mov
add
lahf
jb
mov
andl
jecxz
movsl
dec
adc
sbb
icebp
dec
scas
mov
mov
loopne
aas
mov
sbb
push
jo
fldcw
stos
xchg
and
pop
pop
or
sahf
adc
in
mov
push
lcall
mov
xchg
or
mov
push
aas
xchg
sar
fwait
jl
jo
mov
out
fsub
fldl
mov
frstor
movsl
pop
add
sbb
sub
outsb
jg
pop
sbb
xchg
sbb
iret
xchg
imul
xchg
fsubs
dec
add
cmp
adc
scas
push
iret
mov
ds
mov
out
push
inc
cmp
xchg
out
sbb
jg
js
rorb
pop
inc
cld
adc
push
push
rolb
pop
or
xchg
inc
mov
cmp
jae
mov
dec
lods
and
xor
cld
mov
cltd
cmpsb
push
sbb
test
cwtl
push
adc
fwait
mov
sbb
cmpsb
mov
cmp
cmpsl
add
aaa
ret
dec
xor
cs
mov
and
adc
pop
push
fcoml
icebp
lds
or
out
testb
aas
inc
leave
adc
cmp
inc
inc
imul
leave
mov
dec
adc
lret
dec
mov
outsl
adc
imul
rorw
test
inc
in
call
xchg
loope
add
mov
unpcklps
imul
push
cmp
xchg
xchg
mov
jbe
push
insl
movsb
adc
and
lock
in
xchg
addl
add
sbb
fdivrs
sub
sbb
cmpsl
out
push
test
mov
push
in
jmp
mov
rolb
rorl
jne
sahf
addr16
push
jl
in
add
pop
lods
jno
mov
jb
movsb
mov
and
sahf
jl
inc
sub
inc
test
push
dec
scas
inc
xchg
dec
repnz
aad
sahf
fnsave
dec
cmp
aas
add
jp
or
push
push
jno
movsl
cmp
scas
mov
call
and
xor
mov
test
aam
inc
call
enter
dec
and
in
int
or
xchg
jb
insb
enter
cmp
pusha
iret
or
cld
pushf
sbb
pop
fstl
push
fisttpll
jb
aam
hlt
movsb
cli
hlt
outsl
jmp
adc
jge
lods
push
pusha
mov
xlat
call
leave
pop
adc
ja
adc
xchg
mov
pusha
add
push
mov
test
push
adc
cmpsl
js
leave
jns
loop
lahf
js
aaa
mov
scas
stos
leave
adc
pop
or
fstps
imul
stos
jb
dec
xchg
pop
push
or
pop
sarb
xor
jecxz
lds
and
sti
popa
movsb
mov
cmp
test
inc
xchg
enter
cwtl
mov
callw
jnp
and
dec
xor
cmp
cld
xchg
mov
push
lock
call
inc
push
lods
cwtl
jmp
aas
int
icebp
jge
dec
nop
flds
adc
mov
out
out
jno
or
sahf
cmc
push
xor
clc
push
roll
outsl
cmpsb
test
test
test
mov
sbb
pop
lcall
pop
iret
insb
xor
or
xchg
jo
xor
in
push
mov
andl
xchg
dec
loope
rcrb
jns
cmp
add
and
push
cmpsl
idivl
cli
inc
mov
loope
pop
cwtl
add
lret
in
or
sub
sub
rcrb
fcomi
sub
out
push
pushf
int
xchg
mov
cmp
mov
leave
test
jle
pop
sub
jns
mov
push
sahf
insl
push
push
add
xchg
repz
mov
inc
in
aad
sahf
jle
scas
sub
jb
test
inc
repnz
sbb
pop
xchg
mov
sbb
add
pop
xchg
loopne
call
lret
cmp
xchg
add
inc
mov
xchg
sbb
sysexit
xorl
call
pop
push
xchg
in
test
push
cmp
movsb
or
lods
mov
push
pop
adc
and
lods
mov
xchg
pop
mov
xchg
adc
sub
cmp
sub
outsb
pop
leave
pop
fsubrp
icebp
inc
lret
pop
pop
cld
fstpt
mov
and
add
fwait
add
xchg
mov
jge
mov
mov
add
sbb
movsb
dec
fsub
dec
into
jmp
xor
push
xchg
push
sub
jge
shrb
xchg
mov
repnz
outsb
push
rcrb
push
cltd
pop
jg
jne
sbb
xor
icebp
mov
mov
mov
adc
push
adc
xor
cmpsl
daa
mov
inc
std
jns
in
xchg
mov
pop
pop
xchg
mov
test
imul
mov
loop
jl
fsubs
loop
mov
test
push
cmp
sub
adc
sub
inc
jg
xchg
inc
inc
sub
jno
mov
jo
mov
mov
mov
das
arpl
cmpsb
xchg
add
lahf
add
mov
ret
lahf
xor
int3
inc
arpl
pop
dec
out
mov
mov
dec
ret
push
imul
mov
cmp
dec
stc
push
push
push
mov
dec
adc
lahf
jns
rol
dec
lcall
mov
xchg
rolb
test
push
inc
addr16
mov
addr16
pop
cli
outsb
xor
fcomps
add
sub
mov
ja
inc
loop
xor
leave
push
mov
sahf
nop
or
push
dec
ret
in
fsts
push
out
sahf
or
and
pop
adc
push
js
je
rorb
icebp
inc
mov
aad
cs
jg
add
pop
jp
sarb
aas
and
mov
pop
push
adc
pop
sbb
movsb
mov
jno
and
mov
push
mov
xchg
repz
xchg
clc
push
in
xchg
mov
rolb
lret
sub
cld
scas
scas
iret
adc
or
rcrl
dec
or
addr16
rcll
mov
xorb
dec
and
xchg
push
sub
xchg
rcrl
sub
jg
data16
in
mov
jp
cmp
inc
sub
fwait
enter
sbb
inc
pop
adc
fisubrs
clc
ds
add
mov
mov
pop
mov
jl
xor
mov
xchg
es
mov
ja
push
xlat
xor
xchg
movsl
mov
les
push
jns
lods
into
push
scas
mov
loop
lret
and
je
mov
mov
inc
jne
out
in
mov
cld
repz
lahf
in
push
inc
dec
mov
fmuls
inc
mov
inc
subb
xor
cld
dec
or
out
outsb
frstor
lock
mov
xchg
sahf
mov
clc
ss
inc
push
cmp
jne
and
mov
mov
sub
pushf
cmpsb
jbe
add
call
cwtl
inc
in
inc
sub
popa
cli
out
daa
jno
jno
in
xor
jecxz
js
cld
mov
popa
push
lcall
adc
xchg
ret
jne
imul
jg
lret
xchg
sbb
mov
push
adc
sub
insb
aas
or
adc
clc
jne
cmp
aaa
in
scas
inc
cmp
cmc
imulb
jg
popa
mov
xchg
loope
push
lcall
xchg
adc
cmp
jge
sbb
flds
sbb
and
not
frstor
loop
dec
mov
test
mov
ja
test
lock
int3
movsb
imul
inc
mov
jno
cmpsb
dec
jno
inc
lret
mov
in
xor
je
add
adcl
stos
or
xchg
inc
cmpsl
jns
add
pop
mov
pop
jnp
mov
pop
loopne
test
jl
cmp
xchg
sahf
pushf
mov
sbb
sub
jnp
mov
xor
sub
in
sbb
pop
scas
sbb
int3
lcall
dec
push
mov
xchg
adc
movsl
sahf
mov
bswap
nop
lea
inc
movsl
cwtl
jae
jo
sahf
jmp
jbe
pushf
fwait
add
inc
mov
pusha
fldln2
pop
popa
mov
jmp
sti
lahf
push
cmp
jecxz
leave
jge
adc
in
vunpcklps
mov
xchg
incb
mov
cmp
outsb
xor
mov
arpl
ds
mov
xor
filds
jl
mov
inc
es
nop
xlat
stc
loopne
push
and
mov
mov
lods
lret
mov
cmpsl
pushf
int
jl
int
add
fnstsw
xor
pop
gs
mov
adc
xchg
mov
sbb
or
adc
xor
movsb
in
aam
and
jnp
leave
rcr
test
and
pop
push
addb
adcl
mov
dec
imul
leave
sbb
and
or
inc
mov
sarl
out
xor
cmc
aas
and
pop
adc
pop
cltd
xor
jne
imul
pusha
jns
fcoml
daa
arpl
push
mov
add
dec
sahf
add
stc
cwtl
cmovne
mov
lret
insl
or
les
icebp
insl
mov
insb
repz
movsl
fs
nop
sarb
xchg
adc
or
daa
mov
repz
arpl
push
adc
fimuls
cs
insl
dec
adc
divb
subb
aad
jno
popf
das
dec
in
add
sub
adc
jae
or
shll
mov
mov
push
or
movd
add
pop
mov
lods
sub
xchg
outsl
mov
mov
sbb
pushf
jo
push
in
js
repnz
jmp
mov
sub
mov
jb
mov
test
test
inc
sti
stc
adc
sub
adc
jb
jne
inc
mov
nop
jns
clc
sub
mov
loop
outsb
xchg
clc
bndstx
inc
jo
insl
test
and
mov
sub
push
ss
stc
mov
jb
jo
pushf
hlt
rorl
mov
into
fistl
leave
push
adc
fbld
sbbl
aas
ret
shrb
xor
dec
out
lret
adc
andl
pop
and
or
mov
clc
cmp
push
lret
dec
bnd
andl
stc
mull
or
adc
mov
and
rorb
test
lret
cmp
cld
in
cltd
notl
jle
jns
mov
cmpsl
xor
dec
inc
lds
inc
stos
cmpsb
xchg
ds
add
xor
inc
aad
shll
jmp
add
pop
inc
scas
fwait
dec
sbb
scas
add
cltd
push
out
cmpsb
xlat
repnz
mov
fcoms
adc
ja
cltd
inc
mov
iret
sti
aas
sub
xchg
int
sub
jg
mov
lea
iret
xchg
stos
test
test
cmp
pushf
stos
test
inc
push
mov
xor
mov
stc
jecxz
sbb
loop
push
add
push
addr16
jecxz
outsb
clc
adc
mov
dec
aam
jae
lds
mov
jo
push
out
cmp
dec
cltd
daa
add
stos
das
cli
mov
cmp
cmc
mov
aaa
sub
movsl
push
push
pop
sahf
imul
adc
in
out
xor
loopw
test
lock
mov
rorb
pop
enter
and
mov
mov
ficomps
movsl
push
xor
push
mov
out
insb
in
ss
push
pop
outsl
pop
xchg
insb
push
idivl
lret
jmp
xor
out
sahf
cmp
adc
sbb
push
jnp
mov
incb
shlb
or
push
cld
xchg
jg
sbb
cltd
mov
add
aad
or
push
push
add
jo
push
shrb
push
inc
mov
popf
mov
jno
mov
lods
mov
mov
lods
and
pop
push
push
mov
mov
mov
jne
jae
int3
mov
in
jbe
hlt
adc
rcrl
out
jns
xchg
push
mov
xor
shrb
leave
mov
or
xchg
sbb
ret
xor
loop
subb
push
pop
adc
dec
mov
in
sbbb
shll
insb
mov
inc
cli
xor
popa
mov
mov
repz
aam
pop
sbb
ja
jnp
imul
lods
imul
cmpsb
cmp
lret
mov
inc
lahf
repz
xchg
and
dec
into
mov
mov
sahf
lock
xor
and
daa
mov
imul
xor
push
addb
lock
sahf
jmp
dec
push
cli
dec
lret
sub
rolb
push
push
scas
sahf
add
aaa
scas
imulb
leave
insl
data16
mov
jnp,pn
push
ret
lods
ss
into
and
sbb
sti
add
push
loope
xchg
cmp
cmc
xchg
fwait
dec
xchg
aas
or
icebp
pop
scas
mov
es
inc
int
pop
movsl
dec
aas
lahf
mov
insl
pop
repnz
orl
bound
insl
cs
fstpt
mov
cmp
fwait
mov
sar
dec
or
lea
or
push
sbb
testb
jmp
loop
jle
mov
aas
sbb
frstor
jge
int3
adc
jle
imull
lcall
lods
test
mov
ds
push
leave
mov
xchg
aad
fmul
push
imul
aas
icebp
ret
in
xor
repz
inc
pop
inc
int3
addr16
cmp
xchg
lods
mov
sti
mov
popf
fcoml
bound
sbb
mulb
xchg
aaa
loope
jmp
test
ss
add
lock
mov
push
dec
unpckhps
pop
popa
cmp
dec
mov
jmp
jl
loopne
in
cmpsb
mov
je
jbe
outsl
jg
jb
imul
lods
jnp
out
std
xor
jbe
fwait
adc
adc
filds
ja
insb
jb
into
fdivp
je
xchg
xchg
pop
xchg
rcrb
es
xchg
pop
scas
cmpsb
pop
jno
fmuls
lret
dec
xor
fists
test
in
imul
lret
xchg
dec
xor
lds
sbb
mov
push
add
das
adc
bound
loope
xchg
push
es
jecxz
mov
adc
sub
cmc
daa
movsb
cmp
rcrb
pop
pop
loope
in
into
arpl
xchg
push
incb
mov
mov
mov
scas
sub
dec
lcall
and
or
aas
pop
mov
push
jns
jmp
xor
or
pop
dec
int
and
popa
mov
lret
dec
leave
mov
out
or
cmp
in
xchg
xor
inc
adc
insl
xor
add
inc
fmull
fwait
mov
add
mov
mov
sub
sbb
mov
push
fiadds
push
lcall
hlt
and
fimuls
jmp
lods
push
jae
fidivrl
mov
mov
lahf
in
sub
xchg
xor
jo
das
push
pop
sbb
mov
xor
pop
jg
out
adc
jp
mov
in
or
xchg
cmp
imul
or
psubusw
xchg
and
inc
stc
out
jp
stc
inc
xchg
mov
mov
popf
mov
ljmp
js
rcrl
icebp
aas
cmp
lret
addr16
xchg
dec
fnsave
sbb
loopne
pushf
sbb
inc
sbb
cmpsb
negl
mov
xchg
cmp
push
mov
jns,pn
xor
push
lea
into
scas
fcmovb
lods
cmp
lods
loopne
xchg
pop
lret
xchg
and
outsl
sub
insl
into
ljmp
adc
inc
daa
xchg
jle
lods
sarb
shl
mov
jne
xchg
push
xor
push
xorb
mov
adc
mov
faddl
popa
sub
out
in
sbb
jo
or
mov
mov
insl
movsb
jnp
adc
fcmovbe
xchg
aas
sti
xor
enter
jmp
mov
jb
out
mov
jne
mov
mov
mov
jnp
ss
testb
cmp
fdivrl
jns
popa
stos
pop
push
out
outsb
aam
cld
shll
push
in
mov
es
sti
xor
mov
mov
push
push
test
ret
add
lock
loope
pop
int
inc
data16
mov
xchg
sti
std
aam
iret
popa
pop
out
stc
int
cs
pop
push
and
ljmp
xlat
xor
cmp
je
frstor
aas
or
fs
adc
rclb
aad
mov
ret
fdivr
pop
daa
mov
fmul
mov
push
int3
dec
ret
mov
inc
mov
mov
aad
orb
cld
scas
push
jne
add
hlt
cmp
xchg
ss
bound
or
xlat
jge
add
dec
mov
jmp
push
cmc
xor
adc
or
adc
and
rcrb
les
xor
fs
push
mov
gs
test
jmp
shrb
dec
dec
sub
jp
into
jecxz
push
cmpb
xlat
sub
push
cmp
lahf
mov
or
das
fmull
in
negb
gs
push
lcall
xor
mov
mov
or
jle
rclb
mov
das
jp
loopne
loopne
bound
inc
outsb
push
repz
inc
xchg
fcomi
mov
cmp
negb
cld
xchg
cltd
jmp
jg
jb
dec
jmp
mov
mov
mov
add
mov
xchg
mov
push
jnp
das
cmpsb
mov
loop
push
or
jnp
mov
fs
mov
lcall
inc
stos
xchg
daa
mov
inc
stos
cmp
mov
mov
ja
pushf
inc
sahf
stc
xchg
dec
pop
jbe
lea
repz
lods
rcrl
pop
xchg
orl
ret
nop
pop
mov
lcall
ffreep
xor
or
pop
and
and
loope
sbb
test
iret
lods
dec
clc
cmpsl
sub
xchg
adc
mov
and
mov
add
push
push
lods
inc
cmpsb
out
ds
xor
or
rep
aas
jo
aam
pop
pop
push
push
sbb
stos
xchg
adc
or
iret
push
jg
out
loopne
loope
push
stos
aad
je
pusha
mov
add
jecxz
mov
imul
mov
sbb
roll
pop
orl
jne
adc
cmpsl
cmpsl
jns
push
stos
aad
loopne
sti
es
pop
mov
add
in
sub
call
sub
data16
xlat
lea
mov
das
pop
aad
sub
xchg
cmp
das
pxor
jbe,pt
jp
repnz
fidivl
xchg
sbb
sti
mov
cwtl
loop
cmp
jmp
scas
pop
mov
adc
mov
outsl
jae
mov
sub
sbb
mov
adc
imul
lds
or
push
negb
pop
xchg
sbb
stos
mov
dec
cmc
enter
add
jns
cmpsb
divl
jbe
mov
mov
xchg
inc
lcall
mov
xchg
fcomps
mov
scas
and
rcrl
test
xchg
sub
popa
adc
mov
cmpsb
hlt
lods
push
or
dec
mov
jb
jns
and
pop
add
xor
enter
xchg
and
inc
pop
repz
pop
mov
xchg
sbb
imul
dec
jp
xchg
xlat
sahf
mov
std
mov
pop
sti
out
outsl
xchg
pop
dec
outsl
js
mov
cmp
jno
sahf
sub
cli
add
mov
push
clc
shr
xchg
mov
ljmp
hlt
lods
sub
sub
mov
cli
xchg
pop
cmpsl
int3
jmp
sbb
jmp
mov
mov
xchg
das
push
xchg
pushf
ja
jmp
sub
in
pop
fbstp
push
ja
fisttpl
int
dec
movsb
lods
aam
dec
repz
or
mov
sub
or
testb
pop
mov
test
pop
nop
mov
movsb
fists
xor
mov
loope
pop
jo
in
jge
out
pop
xchg
inc
push
pop
xor
lcall
add
inc
sub
ljmp
sbb
arpl
or
add
push
push
test
hlt
mov
mov
add
sub
cld
iret
xchg
iret
movsl
les
rolb
mov
add
fimull
outsl
lcall
mov
scas
outsl
sbb
adc
mov
or
test
lahf
jge
jb
mov
push
negl
clc
mov
std
adc
pop
cltd
mov
push
int
or
int
lahf
or
cwtl
lea
jo
add
ds
push
inc
mov
repz
fbstp
pop
sub
add
dec
in
neg
pusha
and
cld
sbb
sub
dec
adc
mov
or
aad
enter
rcrb
int3
fdivrp
push
aas
clc
pop
cmpsb
shlb
fiaddl
cmp
add
pop
arpl
inc
pop
jmp
fisubrs
les
movsb
cld
dec
bound
and
popa
push
sub
hlt
or
adc
pop
cltd
pop
in
int3
ljmp
int3
xor
push
mov
aas
push
iret
sub
xor
aas
nop
loop
insb
scas
and
inc
jns
in
cmpsl
mov
add
lea
jle
jmp
push
pop
push
xor
jnp
leave
les
push
ja
rcrl
ja
jae
ret
ret
movsl
push
enter
psubusw
mov
jmp
lods
pop
mov
outsb
insb
lret
mov
jne
imul
nop
ljmp
push
ret
adc
ljmp
fxch
mov
negb
cmp
jl
adc
std
out
cmpsl
cmp
pop
and
adc
adc
jbe
cmp
in
dec
cmpsl
or
popf
jecxz
icebp
mov
push
adc
ret
idivb
push
dec
aas
out
push
fsubrl
or
xor
push
adc
inc
enter
aaa
mov
divb
cli
adc
mov
addr16
adc
shll
jo
jbe
inc
mov
pop
and
pop
out
cmpsb
bound
mov
cmpl
hlt
push
pop
mov
jbe
stc
pop
mov
fmuls
xor
jne
lcall
lea
lret
aaa
mov
inc
pslld
inc
stc
out
cmpsl
fists
int3
lcall
pop
popf
outsb
cmp
mov
jmp
lds
xlat
mov
xor
into
adc
sbb
inc
sbbl
push
and
pushf
ds
mov
adc
leave
jbe
jns
hlt
sub
dec
jb
mov
stos
adc
nop
jne
lds
int
cli
daa
jbe
cmp
pop
bts
popa
js
pop
fwait
popf
sbb
cli
aad
push
push
jmp
out
xor
ss
xchg
pop
js
stos
lock
ljmp
add
and
mov
in
mov
clc
std
mov
ret
adc
lahf
and
push
xchg
mov
and
and
xchg
dec
out
lahf
ljmp
inc
jge
imul
and
lods
insb
xor
test
mov
and
out
enter
ds
and
lret
iret
mov
jge
add
mov
data16
lea
imul
cwtl
inc
cwtl
sbb
test
xchg
mov
lods
dec
jp
in
outsl
jo
jno
push
shrb
in
sbb
mov
cli
mov
fcom
lock
mov
jge
cli
in
pop
cmp
mov
icebp
mov
imul
shrl
and
scas
rcrl
adc
dec
ljmp
cmp
xchg
test
mov
test
out
aam
gs
or
es
fnsave
arpl
andl
aad
inc
push
mov
dec
mov
arpl
jl
dec
jg
jbe
jecxz
and
imul
adc
enter
pop
stos
int
push
das
ljmp
shl
lahf
shlb
fbld
mov
xchg
push
mov
insb
repz
sbb
mov
push
dec
dec
push
and
mov
lcall
pop
rorl
jmp
ret
mov
jle
push
lret
push
jp
inc
insb
gs
ret
sbb
lahf
mov
mov
inc
xchg
shr
insb
std
jbe
sbb
jge
jmp
and
xlat
xor
push
cmp
or
aaa
outsl
xor
sub
xchg
cld
sub
cli
bound
decb
fwait
cmp
insb
mov
inc
loope
mov
aas
dec
mov
inc
popf
outsb
jp
lods
js
jb
leave
mov
add
leave
test
xchg
mov
or
cmpsl
aaa
xlat
sub
mov
mov
movsl
stos
add
cmp
inc
lea
pusha
mov
mov
hlt
xlat
mov
cltd
adc
pusha
test
mov
subl
andl
fmull
mov
cltd
ret
cs
pop
adc
pop
loopne
and
loope
jb
int3
mov
dec
jb
mov
nop
xchg
push
in
out
stos
sub
cmpsb
push
mov
push
xchg
imul
cwtl
mov
xchg
or
adc
dec
insl
inc
sbb
push
adc
xor
adc
imul
dec
pusha
push
push
sbb
adc
mov
pop
push
xlat
je
aam
dec
pop
std
push
inc
inc
or
mov
mov
pop
add
push
into
mov
sbb
xor
xor
cmp
sbb
daa
inc
sbb
sub
je
add
sbbl
arpl
cwtl
mov
sbb
jmp
lret
out
mov
dec
mov
rorb
jno
add
fs
in
jns
dec
pop
push
jae
xlat
movsb
cmp
dec
lock
inc
jae
stc
das
cmp
mov
sbb
push
xchg
push
push
cltd
cmc
jp
push
lcall
cmp
sbb
dec
and
sti
out
insb
xchg
jge
imul
mov
lea
add
iret
sub
xor
sbb
push
insb
mov
pop
mov
fsubrs
push
ror
xor
popl
and
mov
jns
data16
push
pop
mov
nop
lret
dec
outsl
push
popa
push
xchg
subl
add
jne
mov
dec
hlt
data16
pusha
loopne
inc
lret
mov
pop
fiaddl
ljmp
push
fstpt
add
fwait
imul
jno
inc
insb
and
lret
nop
push
pop
popa
push
xor
arpl
add
sbb
aaa
xchg
ror
scas
or
xor
sbb
mov
cmpsl
icebp
enter
pusha
inc
mov
pop
out
aas
cmpb
push
jo
mov
sub
loopne
mov
add
jmp
test
mov
pop
dec
or
mov
pmulhw
fst
loope
and
ret
std
pop
xchg
mov
push
lock
xchg
jl
lea
inc
loop
sub
loopne
jnp
mov
push
out
cmp
inc
xchg
sbb
dec
dec
sub
shrl
aaa
js
push
nop
jmp
add
push
stos
mov
jmp
dec
rorl
aas
jb
or
ret
sub
sbb
pushf
outsb
dec
push
sub
int3
jecxz
subl
cmp
push
sbb
lock
inc
fsubl
dec
pop
jns
mov
mov
aaa
scas
pop
outsl
mov
dec
adc
jo
push
out
ret
xchg
lock
xlat
aas
cmp
scas
adc
jno
sbb
pop
adc
dec
mov
mov
and
movsl
sbb
pop
pushf
popf
sbb
cmpsl
mov
scas
jne
sub
mov
or
stc
out
xor
mov
jbe
insb
mov
jmp
xchg
and
shrb
mov
pusha
insl
int3
xchg
push
out
sbb
mov
xor
and
stos
ret
add
lea
jns
into
add
ss
jmp
mov
sub
mov
xchg
shll
mov
loop
and
mov
sbb
jne
pop
imul
mov
and
adc
and
mov
cltd
push
out
js
rcll
aaa
sub
shlb
add
stc
pop
imul
cmp
add
jmp
inc
mov
adc
int3
push
mov
fdivr
je
shrb
push
fdivl
mov
shl
lods
loop
inc
push
cs
mov
sub
dec
out
or
adc
fsubl
push
aaa
pop
into
ja
dec
xchg
xchg
ljmp
mov
mov
pop
jno
aad
idiv
notb
int3
stos
rcrl
and
pop
pop
mov
subb
adc
je
adc
or
cmp
ss
enter
subb
cmpsb
mov
shr
or
outsb
pop
and
and
test
call
sub
stos
xor
call
mov
subl
mov
dec
add
pop
cmc
cmp
pusha
mov
out
and
enter
adc
sahf
push
test
jae
shrb
das
cmp
jae
cltd
pop
fidivrs
inc
jnp
inc
push
adc
add
cmc
xor
mov
mov
scas
sub
dec
mov
sbb
adc
stos
sub
aam
mov
push
int3
std
loopne
push
into
loop
dec
insl
lds
cmp
rolb
and
cmp
leave
sbb
xchg
outsb
aas
sbb
mov
in
jl
cli
enter
dec
xor
or
pop
dec
sbb
cmp
xor
adc
subl
data16
call
xor
out
pop
pop
or
cmpb
add
aas
pop
mov
jp
movq
enter
add
mov
in
mov
movsl
jno
xorl
xlat
mov
repz
mov
ffree
jl
and
sahf
fisttpl
adc
and
mov
push
es
outsb
xlat
mov
mov
rcrb
lahf
pop
inc
or
fsubp
push
cmp
subb
lahf
and
push
int
xchg
jbe
push
imul
cmp
mov
popa
mov
icebp
and
adc
pop
pop
and
sbb
movsl
sbb
mov
sbb
jne
incb
arpl
mov
and
lahf
sub
pushf
xor
mov
inc
mov
mov
cli
pop
dec
xchg
pop
mov
mov
in
sub
cld
test
xchg
sahf
mov
adc
dec
adc
cmp
dec
int3
pop
adc
stos
leave
jae
sbb
rorl
push
pop
mov
sbb
jmp
mov
cmp
pop
pop
insl
and
shl
mov
in
das
sti
sti
mov
cmpsb
lret
jae
rorb
dec
cltd
fnstsw
sub
fldcw
stos
mov
inc
mov
mov
imul
inc
testl
push
inc
repnz
dec
dec
repnz
xchg
loop
js
repz
mov
shrl
xorb
dec
lret
cmovnp
mov
inc
dec
inc
mov
scas
xor
cli
lahf
push
ret
or
dec
inc
lea
adc
push
imul
jge
int
cld
std
or
push
arpl
push
mov
movsb
dec
push
lret
insb
jecxz
and
scas
or
pop
loopne
into
cmp
sub
mov
ss
xor
ret
xor
adc
sub
icebp
mov
mov
stc
sub
clc
fldt
mov
movsl
or
sbb
xor
in
cmpsl
mov
and
loop
dec
pop
jb
and
in
popf
mov
ljmp
xor
jl
test
sub
rclb
fsubs
mov
ja
mov
push
inc
inc
mov
in
lea
scas
mov
ret
xchg
jae
in
insl
imul
lcall
jb
xor
xchg
fadd
arpl
adc
xorl
push
cmp
gs
test
xor
push
and
shll
int
jecxz
pop
hlt
push
lcall
cs
stos
push
lock
fimull
inc
call
lods
lcall
push
mov
xor
mov
sub
pop
in
insb
adc
mov
outsl
fisubrs
out
jecxz
ret
pop
fidivl
das
icebp
int
inc
mov
pop
inc
jecxz
xor
sub
lods
jo
fists
dec
dec
icebp
sti
pop
push
faddl
rcrl
addl
insl
cmp
out
cmp
xor
in
popf
adcb
xchg
hlt
dec
xlat
or
test
push
in
add
aam
adc
pushf
aas
xor
fildl
repnz
stos
stos
movsb
clc
mov
repz
mov
dec
repnz
loopne
ja
popf
dec
and
cmp
xor
xchg
jnp
cmc
dec
mov
cmp
je
and
imul
pop
add
aaa
test
mov
and
xlat
mov
mov
pop
add
push
jp
xor
sbb
pop
in
inc
das
sbb
aaa
sti
pop
jns
stc
aaa
lock
mov
push
and
add
sar
outsb
imul
fs
pop
sub
xor
test
std
outsl
inc
imul
scas
fistpl
xchg
mov
mov
inc
andl
popf
mov
aas
pop
adc
sbb
pop
ficompl
lds
sti
add
and
sbb
sub
cli
andl
jmp
inc
xor
inc
scas
loop
stos
gs
adcb
xchg
mov
pop
jg
jle
jnp
negl
or
inc
mov
dec
xor
pop
pushf
aaa
jp
in
lock
adc
adcl
mov
fprem1
sub
mov
mov
jno
xchg
dec
mov
mov
mov
mov
sti
jno
ror
add
ss
xchg
sysret
sbb
inc
std
inc
cmpsb
mov
push
aad
xchg
mov
mov
pushf
mov
xchg
pushl
and
ficoms
jno
add
out
dec
test
cmc
repnz
inc
pop
mov
jp
cmc
and
call
lock
clc
jg
outsl
inc
ljmp
lret
xorl
dec
xor
adc
cld
add
dec
mov
push
mov
dec
fs
push
repnz
lods
dec
jo
or
push
jnp
mov
jbe
lret
out
mov
cmp
scas
bound
out
mov
lcallw
push
aad
loopne
fsts
insb
fiadds
mov
jp,pt
cmp
sbb
or
xchg
rcr
mov
jle
imul
aam
ss
inc
cmp
adc
cmp
mov
int3
repz
mov
sub
cs
add
lret
add
test
or
loope
cmp
inc
into
cmpl
jne
fcoml
popf
test
in
jae
scas
ja
sbb
mov
push
aad
mov
ja
add
push
imul
inc
add
aas
inc
ljmp
shlb
loop
movsb
xchg
sub
pop
ss
test
ret
ja
lods
lds
lcall
cmpsl
push
push
movsb
adc
arpl
cmp
popf
arpl
lds
test
into
lods
loope
jns
push
add
imul
cld
push
adc
and
or
hlt
lret
dec
mov
repz
pop
fisttpl
loopne
jl
inc
cmp
outsl
adc
ret
fmull
mov
or
jne
push
xchg
mov
insl
push
fisubl
jne
sbb
lds
aas
pop
add
mov
ja
pop
cld
call
popf
in
stos
dec
jne
pop
cltd
ja
xchg
fnstsw
rcll
mov
mov
xchg
jg
push
ret
or
cmovb
cmpsl
sub
push
mov
imul
hlt
mov
hlt
pop
mov
adc
test
push
js
daa
cmp
mov
das
jbe
dec
dec
mov
mov
cmp
mov
pop
add
mov
adc
inc
test
scas
jbe
dec
xchg
arpl
cmp
inc
jnp
add
mov
out
mov
fisttps
add
push
xchg
jg
data16
test
aas
pop
mov
mov
popf
lods
sbb
pop
scas
out
ss
jmp
add
dec
inc
out
push
xor
xchg
nop
popa
pop
jne
jmp
aad
pop
fsubs
popf
jae
push
fcom
adc
push
std
xchg
sahf
popf
mov
sub
sbb
pop
sbb
jg
aad
or
cwtl
movsl
hlt
sub
lcall
mov
fsubrs
push
in
cli
and
dec
inc
pop
sub
in
rcrl
enter
loopne
mov
or
pop
daa
nopl
call
pop
andb
inc
mov
xchg
xchg
push
cli
cs
push
mov
shlb
insb
xchg
push
pop
xor
jns
fcoml
jle
push
ret
sub
fnstsw
lods
lahf
dec
sbb
insb
push
cmp
cmp
mov
repnz
clc
jmp
and
enter
loope
fildll
sub
xor
pop
jecxz
dec
pop
push
pop
push
fcomi
hlt
lret
or
clc
inc
sbb
xchg
dec
jg
sti
push
roll
xor
test
jecxz
bound
xchg
test
gs
dec
and
and
xchg
pmaxsw
fbld
out
dec
jge
adc
push
loope
mov
aam
idivb
xchg
push
xor
sub
jl
scas
jg
cmp
xchg
arpl
sti
mov
inc
popa
cmpsl
push
repz
es
data16
stos
test
jb
pusha
addr16
cli
mov
pop
xchg
adc
addr16
rcl
in
loop
add
js
xchg
jle
jnp
cmc
mov
fisubs
xor
adc
cmpsb
popl
sub
cmp
outsl
jl
push
movb
fidivrs
cmp
mov
aaa
mov
popa
mov
cmp
inc
cmpb
fnstenv
jg
jae
out
mov
sub
test
lret
dec
sub
pop
test
jecxz
and
dec
jmp
mov
inc
jge
xor
testb
out
or
xchg
loopne
mov
lret
dec
sbb
fcomp
clc
cmpsb
lods
dec
scas
pushf
fidivs
pop
pop
fucomip
inc
mov
testl
lret
inc
sub
dec
jnp
mov
ja
cli
mov
push
sub
sbb
popf
bswap
xchg
sahf
into
cmp
out
stos
sbb
test
push
shll
stc
fists
shll
sbb
mov
stc
adc
sbb
mov
nop
or
shl
stos
fadds
test
movsl
test
xchg
cmp
or
sbb
sbb
into
gs
lds
popa
fs
aaa
xor
add
decl
mov
cmp
loopne
inc
mov
or
test
flds
sub
or
inc
mov
into
loopne
fisubl
into
mov
add
ret
xchg
adc
mov
inc
or
mov
xchg
outsb
outsl
cs
sub
popf
daa
jle
jmp
adc
out
dec
arpl
mov
or
fdivl
das
fsub
xor
in
mov
in
sbb
cli
sbbb
adc
inc
mov
popf
int3
inc
sahf
mov
adc
jecxz
and
push
inc
hlt
pop
push
xchg
shl
ds
in
lddqu
idivl
ja
cmp
cmp
inc
pop
dec
xchg
aad
enter
mov
cltd
test
cmp
fsubrs
das
pop
jle
xor
gs
jo
jle
xor
cltd
outsl
and
sub
mov
xchg
test
cmp
test
fs
out
loope
or
adc
pusha
pusha
push
incb
inc
adc
and
pop
or
dec
mov
pop
inc
scas
mov
and
pop
push
inc
pop
mov
xchg
lcall
jnp
jae
cld
daa
jmp
fcompl
mov
sbb
into
es
lods
loope
rcrb
xor
add
jns
test
jbe
outsl
fsubs
data16
add
rclb
push
test
aam
cmpsb
adc
das
cmp
les
outsl
mov
pop
in
in
test
test
sbb
and
dec
push
or
mov
aad
cmpsb
fstps
xor
adc
push
xchg
insb
mov
adc
xchg
shl
fmuls
mov
xchg
imul
les
inc
cmpsl
push
fsubrl
lea
gs
push
inc
jb
jno
xchg
incl
adc
jae
sub
lahf
sbb
mov
sbb
hlt
xor
fbld
mov
cltd
inc
sbb
out
or
xchg
sub
mov
inc
fidivs
scas
aaa
and
mov
int
pop
les
jp
fstl
xchg
rcl
jecxz
imul
xor
inc
cli
xchg
repnz
stc
mov
adc
jg
and
pop
stos
clc
imul
nop
dec
test
js
aad
jle
and
xor
add
inc
repz
cmp
ret
dec
sub
mov
fcmovb
stc
push
mov
mov
jle
or
sti
fstps
push
xor
mov
scas
or
or
fwait
mov
fistpl
mov
push
filds
out
das
or
and
jmp
xchg
mov
addb
inc
fmull
sbb
mov
shrl
int
xchg
pusha
jg
cld
cmc
hlt
outsb
insl
xchg
mov
cvtps2pd
rclb
mov
cld
mov
into
mov
mov
push
lods
pushf
push
js
imul
or
xchg
cltd
cld
mov
sub
push
dec
add
push
cmp
push
inc
push
sbb
loopne
inc
cmp
lahf
sbb
das
std
sub
das
jns
out
sbb
lcall
sub
cwtl
jge
jae
fldenv
aad
testb
xchg
inc
stos
loopne
xchg
inc
sbb
cmpsl
adc
aaa
lods
sub
ljmp
jg
pop
enter
xor
and
push
in
notl
sbb
stos
jecxz
pop
mov
mov
add
sub
mov
cmp
pop
dec
or
rclb
addr16
data16
sbb
insb
and
mov
inc
and
pop
sti
movsb
rol
push
and
lods
fstpl
xor
arpl
arpl
jge
push
sti
dec
pop
dec
addr16
mov
cmp
cs
mov
and
sbb
xor
push
stos
rolb
push
mov
mov
out
jmp
leave
dec
in
dec
mov
mov
sub
pop
mov
movsl
push
dec
cmp
mov
sbb
jne
sbb
pop
test
sub
repnz
nopl
in
iret
adc
out
pop
aas
dec
addr16
and
adc
popf
adc
push
and
test
lahf
xor
adc
dec
out
inc
xchg
inc
xlat
movsb
je
inc
pop
xor
lret
loope
mov
ljmp
or
out
push
mov
xchg
push
repz
add
rclb
fcomip
mov
jl
xor
out
push
mov
adc
int3
cmp
xor
pop
or
in
dec
cli
mov
or
int3
clc
cmp
gs
mov
push
jmp
push
dec
fscale
lods
cmp
push
jno
and
push
out
mov
cld
adc
test
add
loopne
cld
jp
mov
sbbl
mov
add
test
sar
mov
mov
sbb
out
pop
add
fistpll
mov
sti
icebp
les
aas
out
sarl
js
cs
and
stc
cli
cmp
or
inc
icebp
addr16
adc
push
adc
cmpsl
jle
in
xchg
mov
push
and
sub
addr16
push
cmp
add
in
pop
mov
mov
in
fcomps
mov
sbb
imul
hlt
in
mov
int
sub
and
push
cmp
mov
out
pop
sub
push
in
pushf
lock
and
jle
fcomip
push
adcl
ret
inc
test
pushf
je
pop
in
movsl
nop
sub
jb
aas
pushf
jge
fwait
cmpsl
das
xor
add
mov
bound
jnp
imul
dec
cltd
in
shrb
pop
out
cmp
sub
testl
sbb
xchg
xchg
rclb
mov
out
sarb
enter
jae
push
pop
stc
out
ds
push
jle
mov
out
adc
cmc
mov
cmp
jne
lret
stos
popf
aaa
xchg
pop
cltd
sbb
xlat
sub
sbb
jmp
gs
or
stc
insb
lds
orl
hlt
inc
in
mov
imul
js
stc
add
cwtl
pop
adc
ljmp
stos
andl
loop
pop
daa
out
jge
btc
clc
jl
or
sbb
call
mov
push
movsl
adc
ss
sub
dec
xchg
sbb
pop
jg
bound
int
loope
jmp
mov
gs
push
ss
aas
pop
gs
mov
rep
jno
fbstp
push
jle
push
push
mov
cmp
mov
inc
jno
xor
push
aad
mov
adc
xchg
cmpsb
ja
push
hlt
jg
push
test
sbb
adcb
mov
repnz
mov
int
cmp
test
xchg
insb
movsb
in
add
cs
jae
jp
mov
push
mov
fcmovbe
es
loop
in
cli
xchg
adc
iret
mov
dec
xlat
test
and
fstpt
insl
cwtl
insb
add
iret
sahf
leave
dec
in
pop
mov
movsb
push
mov
cmpsl
stos
lock
testl
push
push
push
sbb
stos
les
popa
nop
inc
insb
in
ret
mov
xchg
in
inc
push
pop
push
mov
cmpsl
bound
dec
fcomps
fwait
nop
repnz
xor
push
jmp
xchg
int3
aas
rcrb
sbb
scas
iret
xchg
mov
and
pushf
jmp
fwait
daa
arpl
mov
sub
push
mov
ljmp
sbb
mov
or
adc
fisttpll
pop
xchg
pop
data16
cmp
xsavec
and
mov
jno
fs
nop
xor
popf
arpl
mov
cmpsl
pop
and
xor
in
stos
inc
add
push
js
pushf
and
sbbl
xchg
aas
jecxz
adc
cld
mov
adc
and
mov
dec
in
mov
outsl
jns
scas
lcall
xchg
add
out
xchg
xor
mov
mov
stos
loope
inc
popf
hlt
dec
mov
mov
and
aas
inc
cli
gs
push
lds
movb
xor
inc
add
jge
mov
cmp
or
xor
jecxz
inc
push
add
es
xchg
inc
push
sub
andl
orb
stc
je
push
xchg
push
ljmp
out
pmaxub
sub
inc
lds
out
mov
aad
xor
fildll
out
setp
js
jecxz
xchg
mov
or
jmp
testb
xorb
lea
fld
jno
pop
insb
jg
aaa
adc
add
pushf
jg
mov
xchg
ds
cmp
imul
jmp
xchg
in
cmp
xor
ret
jb
jno
je
mov
cli
icebp
testb
pop
repz
xchg
xchg
inc
sbb
sub
push
mov
icebp
fsub
dec
pop
repz
fdivrs
mov
lret
pop
in
fisubrl
pop
pop
and
mov
test
stos
push
mov
movsb
pop
fcompl
mov
mov
sbb
push
jno
mov
cs
xor
and
jb
push
and
xchg
nop
cmp
dec
in
add
scas
mov
or
jge
sub
cwtl
aam
fidivl
pushf
jmp
jb
lods
divl
adc
dec
bound
stos
outsl
sbb
jns
jns
les
cmp
sub
out
push
outsl
or
xchg
std
inc
out
push
push
mov
dec
xor
mov
pop
mov
mov
mov
daa
ds
cmp
nop
mov
xor
sub
add
mov
push
push
sbb
cmp
jp
inc
pop
call
inc
jmp
and
mov
lods
sti
inc
sahf
mov
popf
testb
inc
mov
lods
idivl
or
adcl
pop
xchg
inc
push
jns
sbbw
outsl
inc
adc
jnp
xor
sub
pop
jg
ret
repnz
add
jbe
and
xor
int
insl
cmp
xchg
out
fiadds
cld
pusha
inc
pop
stos
les
push
xchg
jne
outsb
imul
jbe
xchg
insl
cwtl
cmpsl
ret
insb
loop
leave
loop
arpl
sbb
and
jno
cli
mov
mov
cltd
and
push
stc
jb
sbb
outsb
cmp
mov
loopne
loopne
out
in
sbbb
sub
xor
ds
hlt
fldcw
shr
lods
test
add
movsl
roll
push
imul
xor
inc
inc
adc
scas
sbb
mov
inc
adc
xor
icebp
sub
idivl
movsl
xor
mov
jnp
add
dec
mov
sti
mov
outsl
or
cmpsb
mov
mov
or
stos
xor
jp
lret
call
movb
pop
out
cmp
js
roll
pop
clc
xchg
stc
cltd
in
jmp
cmc
cmp
icebp
imul
sbb
cmp
jo
lock
xchg
pop
jns
cltd
adc
dec
sqrtps
pop
movsl
jb
xorb
inc
or
aam
mov
dec
jno
inc
sahf
cmp
mov
add
cmc
daa
ret
stc
ret
lcall
sbb
push
mov
sub
stos
popa
add
add
and
pop
sbb
sub
mov
lock
js
pop
inc
add
lods
jo
loopne
int
lret
outsl
add
lcall
popl
test
jge
cmp
dec
inc
push
fstps
orb
and
mov
mov
mov
and
jns
pop
fwait
rcl
rolb
xor
lcall
xchg
mov
push
sub
bound
cmp
dec
push
daa
sub
jl
out
outsb
or
pop
jb
vpsubw
test
jg
push
sub
mov
mov
pop
das
adc
dec
push
mov
xchg
jmp
cmp
sbb
popf
jno
sub
invd
andb
sahf
push
aad
or
and
inc
inc
mov
leave
aad
iret
call
jecxz
pop
or
jge
repz
lahf
mov
out
xor
mov
pop
sarb
cmp
sub
push
sbb
incl
dec
fidivrs
sub
fwait
popa
enter
daa
or
pushf
jecxz
mov
insl
push
or
es
aam
cmp
adc
or
mov
add
loop
rcl
imul
lahf
mov
jb
or
out
add
insb
pop
repz
cmp
pop
idivl
mov
and
outsl
dec
stos
fstpt
pusha
fwait
mov
xchg
cwtl
lods
adcl
std
pop
push
xor
dec
xchg
adc
cltd
stos
xlat
sahf
ret
lahf
rcr
lea
es
mov
push
push
loop
or
mov
xlat
xchg
loop
mov
mov
fcoml
insl
or
lahf
into
push
fnsave
cs
mov
sub
lods
jp
push
stc
pop
sbb
cmp
pop
repnz
and
xor
or
or
and
dec
subl
mov
add
out
jmp
pop
mov
test
mov
fistl
in
clc
nop
aad
cmp
push
jg
add
and
xor
fsubrl
cvtps2pi
mov
push
pop
cmc
imulb
test
xchg
mov
lea
arpl
sub
loope
and
jl
enter
insl
cmp
dec
sub
cmp
das
or
jno
arpl
scas
call
imul
aam
into
xlat
cmpl
je
and
dec
cmpl
inc
stos
fsubrs
data16
mov
xlat
pop
sar
fsubl
aad
ja
ds
lock
fldcw
fdivrp
iret
jae
mov
xlat
xorb
mov
jp
inc
negl
add
cwtl
or
loop
jae
inc
or
pop
pop
loopne
lret
xor
int3
push
jae
icebp
sbb
lret
stc
jge
fnsetpm(287
and
and
jnp
push
imul
rcrl
cli
shrb
or
pusha
test
push
sub
addl
push
loopne
stc
sbbb
mov
jae
cli
push
adc
xor
inc
cld
and
mov
sub
jg
iret
call
dec
lds
es
notl
push
daa
inc
ror
shll
mov
imul
lods
cmpsb
iret
inc
lcall
aad
nop
aam
jne
outsl
adc
mov
outsl
arpl
cmp
add
cmp
inc
out
test
adc
xchg
lods
insb
pop
icebp
hlt
cwtl
loopne
push
jne
je
in
mov
pop
mov
cmc
and
imul
pusha
ja
out
das
insb
rol
fs
and
je
dec
xchg
loopne
jle
jbe
or
je
aam
lods
xchg
mov
xor
mov
ja
add
andl
xchg
inc
into
pop
daa
dec
adc
lock
mov
cwtl
pop
cld
dec
sbb
cmp
loope
inc
loope
fdivrs
mov
dec
xchg
cmp
push
cmpb
nop
aas
cltd
cmp
rorb
sbb
in
jle
cmp
les
bound
jo
cld
cmp
shll
test
mov
setl
out
testl
mov
out
add
cmp
lret
repz
pop
xchg
ror
call
inc
jg
out
add
rcrl
lods
int
lods
jnp
movsb
mov
mov
outsb
cmp
or
lahf
xor
and
xchg
imul
movsl
inc
inc
fs
cmc
push
hlt
mov
pop
test
rclb
xor
sub
fnsave
cs
mov
cmp
pushf
sub
jecxz
mov
fadds
pop
mov
call
mov
scas
inc
insl
in
into
xlat
and
cmpsl
adc
inc
movsb
aad
mov
ljmp
imul
mov
xchg
mov
push
cmp
dec
leave
cmpsb
cmp
popa
add
adc
ljmp
mov
sub
sti
call
ret
cmp
out
pop
sbb
call
jl
in
jg
push
mov
fidivrl
jg
mov
xchg
fsubs
out
jnp
jns
xlat
int
and
sub
loop
mov
adc
int
inc
incl
mov
scas
jne
fistpl
pushf
das
std
cs
xchg
push
mov
sub
mov
imul
sub
stos
mov
pop
loope
jno
push
lret
cmp
pop
inc
cmp
je
mov
mov
sbb
ss
jl
jecxz
loope
dec
xchg
sub
popf
outsl
std
push
addb
test
cmp
and
dec
stos
xor
push
xor
push
add
repnz
lea
fmuls
cmpsl
fisubrs
out
scas
jecxz
ja
lods
stos
cltd
leave
sbb
xchg
int3
sbbl
dec
inc
dec
aam
shll
mov
cmc
fs
or
jno
leave
addr16
lret
inc
aad
sbb
push
push
call
xor
cltd
enter
lds
sbb
inc
loop
aam
int
or
sbb
mov
pushf
inc
sar
imul
jecxz
out
xchg
sahf
aam
mov
xor
and
xor
mov
xor
hlt
mov
mov
cmp
lahf
adc
in
jecxz
pop
dec
push
xchg
loopne
lds
out
mov
jbe
shll
and
leave
sbb
das
jg
mov
imul
movsb
std
enter
pop
cld
and
mov
cmpsl
test
inc
movb
imulb
pop
mov
pop
push
dec
add
push
pop
jge
cld
fsubs
adc
data16
out
imul
xchg
mov
sarl
sbb
shrl
jg
sbb
mov
cmp
in
daa
pop
push
and
enter
pop
fsubs
arpl
loop
sbb
adc
mov
jnp
jl
xchg
mov
aad
ja
loope
ret
sub
xchg
dec
push
pop
pop
popf
adc
mov
jne
scas
dec
adc
mov
push
ror
and
loop
jb
loop
cmc
pop
xor
jo
xchg
sub
add
fistps
sahf
xor
ret
jae
dec
orl
packuswb
adc
adc
lods
clc
jo
xlat
shrb
dec
jp
inc
aad
fsts
fdivs
bound
dec
xor
mov
and
lcall
xchg
push
xchg
sarl
push
pushf
aaa
push
divb
ljmp
out
shlb
clc
add
dec
xlat
pop
inc
out
aaa
sub
ja
mov
clc
or
mov
loopne
jmp
xchg
test
fs
and
sbb
cmpsl
cmp
clc
xor
repnz
pop
jno
jmp
retw
pop
jb
mov
xor
repz
jg
andl
add
js
gs
xlat
imul
fdivl
xchg
xor
mov
mov
mov
jl
dec
rcrw
and
add
sub
cmc
sub
and
popa
test
aas
pop
lret
lods
fidivrs
imul
and
addr16
std
test
xchg
cwtl
push
jle
cmc
pop
mov
pop
into
dec
xchg
sbb
inc
inc
nop
add
in
test
mov
push
repz
adc
fistpl
cmc
xor
shl
jp
outsl
and
sbb
fcompl
stos
adc
add
and
mov
push
xor
popf
enter
dec
dec
test
pop
xor
nop
mov
cmp
mov
xor
pop
stc
in
add
xchg
pusha
fwait
add
shl
test
jae
mov
mov
inc
xchg
jne
mov
or
arpl
cmc
and
mov
shlb
cmpsb
pusha
jl
das
and
sbb
or
add
sub
movsl
mov
or
shlb
int
sub
shrb
or
and
xor
xchg
sub
movsb
ret
add
inc
sbb
xor
mov
sbb
out
push
cmp
cmp
push
dec
push
loope
fs
xchg
sub
mov
lods
mov
ds
mov
mov
imul
cli
or
xchg
xchg
xchg
sbb
in
add
mov
cmp
add
xchg
fs
sbb
jle
cmc
shlb
or
out
cmp
cld
cmp
ficompl
xor
aas
dec
sbb
mov
es
and
mov
inc
dec
jge
test
mov
xchg
out
daa
lods
test
mov
or
jb
inc
dec
adc
xchg
inc
and
stos
jle
scas
aas
repz
dec
insl
inc
fwait
js
inc
or
or
jb
jg
mov
int
inc
add
pushf
cmp
mov
cmp
or
movsl
mov
inc
xlat
push
xchg
push
push
sbb
xor
pop
xor
sub
jecxz
fldcw
cmc
ja
inc
pushf
jge
adc
addb
fcoms
lret
andl
shlb
adc
addr16
xchg
and
pop
int3
ret
addr16
jb
mov
roll
jnp
jg
jo
mov
xchg
rcl
shrb
daa
bsr
xor
push
and
fdivl
movl
shr
sti
testb
test
or
and
and
int3
stos
ficoms
fimuls
mov
psubq
cmc
lret
sete
fwait
sbb
stos
sbb
outsb
enter
pushf
lods
push
sbb
mov
cli
stos
mov
jne
dec
outsl
xor
aam
xchg
mov
xchg
popa
enter
scas
lds
mov
sbb
call
mov
mov
fcoml
jns
lret
inc
inc
sub
cmpb
lods
xchg
cmp
lods
and
push
ja
into
sbb
push
xchg
jp
test
inc
fiaddl
sbb
pop
sti
dec
pop
rcrl
insl
ljmp
loop
mov
cmp
ss
lea
mov
mov
push
arpl
ret
cltd
shl
into
dec
xor
icebp
lds
into
push
or
aad
psrld
ds
insb
icebp
jno
mov
mov
adc
add
mov
cmpsb
out
push
cmpsl
add
mov
int3
out
xor
aam
dec
ss
call
jge
insl
mov
add
mov
pop
enter
in
cmp
xchg
push
mov
push
fsubl
divb
mov
xchg
into
xchg
mov
out
sbb
popa
sub
push
call
popf
out
aaa
je
shrb
xchg
iret
or
iret
adc
nop
push
movsl
and
cmp
push
jge
jo
sbb
adc
jl
aas
adc
and
jbe
out
mov
iret
pop
fisubs
dec
cwtl
addr16
ss
aas
dec
add
push
daa
pop
jecxz
pop
dec
cmc
cmpsl
cwtl
inc
mov
sbb
int
outsl
sbb
sbb
cs
inc
cwtl
rcr
sub
cmp
popf
pop
lea
mov
sub
fcoms
call
sub
inc
and
test
mov
sarl
dec
out
aas
jmp
dec
aad
lahf
mov
or
jns
push
sahf
mov
and
jne
push
xchg
or
daa
stos
sub
je
je
jmp
outsb
mov
fists
inc
add
mov
adc
mov
lds
mov
int
cmpl
mov
jmp
and
pushf
jns
mov
add
add
mov
jnp
fidivs
pop
jmp
std
sbb
rcl
mov
lcall
shl
xchg
loopne
or
or
sub
xor
xor
inc
pushf
push
gs
mov
pop
xchg
cmp
ss
push
lcall
pop
sub
movsb
imul
dec
out
mov
sub
adc
jo
in
or
fsubl
scas
mov
add
je
adc
pop
add
leave
push
hlt
push
dec
inc
pop
das
sub
sbb
outsb
nop
popa
push
pop
filds
shl
dec
stos
loope
popa
adc
jmp
lahf
mov
scas
cmc
and
shlb
xchg
sub
enter
adc
lds
imul
dec
ret
pop
out
add
das
push
pop
fs
test
add
ret
or
adc
mov
test
dec
loopne
imul
stos
ljmp
and
and
call
cwtl
in
fwait
mov
jnp
mov
es
pop
mov
mov
adc
xchg
mov
fisubl
lods
inc
xchg
clc
mov
outsb
mov
ror
inc
scas
stc
inc
test
mov
or
fists
stc
std
and
xchg
push
mov
add
jle
push
dec
aad
popf
inc
or
lods
stc
scas
push
mov
mov
xlat
test
push
mov
lods
push
shl
xor
lods
into
inc
testl
push
popa
sbb
adc
orl
popa
push
aas
mov
cmpsb
mov
cld
mov
sub
mov
cmpsl
jecxz
imul
out
test
imul
fadd
xchg
fwait
daa
pushf
je
jg
outsb
pusha
jl
xchg
sbb
mov
fbstp
jge
ret
mov
mov
in
sub
mov
fnstcw
xchg
daa
pop
adc
dec
sbb
add
cmp
in
mov
adc
push
pop
lcall
cmp
mov
cmpsl
mov
jge
or
pop
ret
dec
xchg
adc
pop
adc
mov
push
cmpsb
lock
add
arpl
push
add
mov
jae
out
inc
xchg
xchg
scas
inc
fdivl
jns
cmpsl
sub
inc
sbb
scas
aam
xor
push
insl
mov
jl
mov
popa
xchg
inc
xchg
mov
xor
mov
int
add
popa
push
dec
mov
adc
shlb
or
scas
jnp
scas
testb
scas
xor
mov
gs
lock
insl
mov
push
cmpsb
insl
jle
mov
sub
and
das
lahf
into
mov
mov
insl
imul
cwtl
out
mov
mov
dec
mov
and
mul
test
lock
into
pop
cli
jecxz
lret
lret
push
aad
cmp
test
xchg
ss
aas
pop
ret
cltd
xchg
shufps
xchg
loopne
aaa
dec
stos
pop
aad
cmpsl
xlat
lahf
add
jo
xchg
aas
popf
hlt
inc
jne
mov
inc
push
cmpsl
out
xor
mov
sbb
xor
pop
sub
jp
outsb
shll
lods
sub
arpl
ror
into
adc
and
scas
mov
les
daa
nop
and
mov
lods
xchg
vmovups
lret
mov
jb
repnz
mov
cmp
sahf
enter
push
je
fcmove
xor
incb
int
inc
mov
jo
cld
inc
inc
outsl
rcrb
mov
jne
rclb
out
pusha
xor
mov
adc
push
and
jb
mov
mov
mov
adc
punpckldq
loopne
addr16
scas
cmp
addb
and
jns
stc
loopne
fsts
icebp
in
outsl
jg
push
inc
out
insb
mov
or
out
pop
cld
mov
cld
cld
lock
insb
clc
sbb
test
mov
and
pop
shrl
jp
mov
notb
pop
or
push
cmp
int3
movsl
cltd
jae
fs
fwait
add
sbb
leave
js
mov
pop
jbe
or
movsl
mov
in
sub
jecxz
nop
or
inc
mov
xchg
out
ss
nop
inc
cmp
popa
arpl
xor
xor
mov
mov
cmc
jg
std
jmp
sbb
js
cmpsl
xor
mov
imul
outsb
sbb
adc
or
cmpb
cmp
dec
into
sar
dec
lret
dec
adc
mov
pop
fcomps
fistpl
inc
dec
dec
cld
repnz
jbe
add
pop
loopne
cs
stos
aas
xor
push
sbb
stc
pop
adc
pop
in
jno
stos
sarb
pop
adc
sbb
scas
jp
sti
cmc
mov
sub
fxch
pusha
sub
fstpl
pop
les
test
xchg
mov
push
mov
cs
mov
sub
mov
shrb
push
fbstp
sub
in
mov
ja
repnz
dec
sbb
sbb
fchs
sbb
lds
push
sar
push
popf
jne
jbe
sub
mov
insl
inc
jmp
movb
jecxz
dec
adc
jge
xor
rcrl
aaa
sbb
scas
inc
fimuls
jle
dec
into
roll
test
loope
lret
stos
out
fistpll
cmp
cmpsb
loop
push
adc
xor
test
push
sub
fistpll
add
or
or
scas
sbb
lret
outsb
add
push
xchg
jo
sub
xchg
push
jmp
ret
mov
pushl
cmp
outsb
sti
jmp
inc
or
xchg
pop
sbbb
imul
fldcw
shll
jno
add
sub
dec
sub
imulb
push
mov
mov
fs
daa
sti
dec
lea
fdecstp
xor
push
std
push
mov
mov
jnp
movsl
into
out
mov
enter
out
filds
scas
inc
aas
cmpsb
imul
inc
aam
shrl
mov
mov
loope
cmp
popf
fisttpl
in
sbb
mov
xchg
cmc
cmpsb
int3
cltd
push
mov
pusha
or
mov
mov
in
pushf
mov
shlb
bound
add
and
mov
negl
jp,pn
mov
dec
mov
das
inc
push
pop
out
mov
inc
inc
sti
addr16
pop
ret
or
add
out
jnp
mov
fistpl
and
pop
clc
inc
mov
enter
adc
jbe
inc
push
fcompl
push
cmp
lea
inc
pop
pop
or
mov
imul
dec
stc
lds
jnp
imul
xchg
insl
push
add
insl
fstpt
push
scas
outsl
sub
mov
adc
data16
mov
loop
testl
aas
pusha
jne
hlt
lods
ret
mov
dec
cli
push
jg
or
clc
lret
seta
and
lods
push
adc
mov
out
or
icebp
push
and
or
fs
sub
sbbl
xchg
cli
fstpt
pop
insl
cmpsb
jle
in
inc
jb
movsb
or
addr16
pop
nop
out
mov
mov
imulb
les
popa
xchg
inc
mov
rcr
jp
into
lods
int
dec
lods
lea
fsubrl
mov
pop
dec
or
push
cmpsb
xchg
jnp
loope
or
push
mov
out
and
cmp
xlat
pusha
hlt
add
fldl
cli
dec
push
sbb
xchg
out
in
imul
and
jp
push
mov
call
sbb
push
or
test
mov
pop
lea
adc
and
xor
es
mov
movsl
inc
ljmp
jmp
push
inc
dec
cmp
rcr
in
cmp
pop
ret
daa
cmp
lret
xor
pop
pause
ljmp
frstor
mov
pop
pop
ss
popf
sub
std
fnstcw
mov
loope
inc
nop
hlt
aaa
lods
sub
pop
dec
enter
dec
mov
imul
mov
outsb
mov
lods
cmpsb
push
and
lret
lods
insb
into
pushf
xchg
dec
repnz
cs
pop
and
sub
or
in
loopne
inc
stos
insl
movsl
icebp
dec
cmp
sub
push
mov
xchg
mov
push
stos
mov
mov
arpl
mov
push
xor
dec
imul
sbb
add
jb
mov
sub
int3
jge
pop
push
lret
sub
bound
pop
daa
and
mov
push
mov
inc
push
bound
and
xchg
cli
clc
movsb
cmpl
movsl
mov
out
test
cmp
outsl
mov
jne
xlat
mov
or
int
xor
push
mov
notb
sbbl
mov
and
mov
pop
xor
add
cmp
push
jge
and
adc
jae
push
cmp
stc
loopne
xchg
lcall
push
inc
int
iret
into
fimull
dec
into
and
cmp
movsb
xorl
sti
movsl
and
and
cli
and
xchg
pushf
push
mov
je
xchg
lock
fcompl
ja
push
out
sbb
mov
ret
inc
popa
add
sbb
jp
mov
dec
imul
out
dec
xchg
push
pop
rclb
sub
jns
push
jne
subb
jecxz
and
pop
xlat
jbe
shrb
sub
pop
sbb
jno
in
ja
jg
pushf
popa
fsubl
cmpb
and
mov
sti
sub
add
icebp
testl
iret
push
jbe
xor
jp
aam
lods
cmp
pop
inc
jno
cld
mov
clc
fnstenv
pop
sub
xor
pop
fst
inc
mulb
pop
rcrb
or
mov
cli
mov
daa
jmp
or
mov
mov
mov
inc
sub
cltd
sarl
fwait
jbe
aaa
loop
imul
adc
xchg
add
shl
pop
sub
test
xchg
adc
iret
popa
cmpsl
scas
pushf
repz
pushf
pop
call
out
lret
ret
add
sub
xchg
push
adc
mov
pop
aaa
sahf
sbb
insl
mov
push
mov
fsubs
push
in
cmp
sub
sbb
loop
dec
or
ds
dec
movsb
sub
ljmp
add
mov
imul
out
pop
sub
xchg
imul
test
mov
pop
lds
jl
sbb
test
popa
addl
add
aas
or
cmp
js
movsl
push
cltd
enter
push
mov
mov
sahf
mov
and
fxch
cmc
sbb
outsl
int
mov
pop
aad
mov
mov
inc
jo
test
and
and
lds
fs
jge
popa
or
and
and
mov
inc
ja
bound
fldenv
stos
out
bnd
mov
sbb
mov
je
push
repz
fwait
adc
push
in
cli
adcb
and
xor
lds
mov
std
clc
cmc
adc
sub
jnp
aaa
popf
cmp
push
jg
inc
fistpl
xor
test
icebp
sub
xchg
mov
dec
shlb
test
ds
sub
enter
dec
popf
or
aad
iret
jo
xchg
jne
idivl
cs
mov
xchg
pop
lea
cmpl
fildl
lods
or
sbb
inc
out
mov
aad
or
mov
dec
mov
cld
lret
shrb
lods
outsb
sub
pop
cli
fnstcw
or
mov
jge
mov
push
bound
sbb
iret
and
mov
std
mov
adc
push
xor
mov
or
fcom
jo
cwtl
and
mov
je
test
ja
fimull
stos
fistpll
jb
or
cmp
out
in
mov
int3
cmp
jo
cs
testb
lock
and
pop
ja
sbb
stos
jmp
inc
push
and
xlat
xor
cmp
iret
xor
popf
shlb
outsb
push
movsb
xchg
aam
cli
mov
pop
insb
cmp
ret
and
xchg
sub
mov
testl
ss
adc
and
xchg
cmpl
cmp
inc
aad
std
lods
and
arpl
ja
dec
loope
inc
sbb
lds
lret
xor
dec
test
sub
inc
lock
dec
test
out
sahf
jp
mov
xor
adc
inc
dec
mov
or
mov
cmpsl
sbb
sub
push
cltd
xor
dec
out
filds
lods
sbb
ffreep
pop
push
mov
pop
sub
add
ds
into
hlt
pop
out
cmpl
cmp
mov
adc
nopl
dec
xchg
aas
mov
pop
xor
mov
pop
push
scas
adc
cld
lods
jo
cmc
adc
push
mov
jle
repnz
xor
sbb
sbb
jmp
orb
dec
aad
cli
decl
mov
pop
fnstenv
test
jbe
mov
fs
inc
loope
cmp
and
mov
loope
mov
ljmp
sub
mov
enter
call
or
mov
cmpsb
lret
call
adc
push
cmp
push
or
int3
add
cli
ret
push
mov
cli
movsb
js
jb
out
dec
idivb
sahf
and
cltd
pop
int3
movsb
pop
outsb
inc
les
ffreep
filds
mov
mov
and
push
cmp
xchg
sub
sbb
lods
xchg
pop
xchg
push
loopne
loop
push
cli
jnp
jg
sarl
mov
lcall
xor
pop
cmp
adc
aam
je
push
jae
cmp
xor
cmpsl
cmp
mov
mov
mov
cmp
subl
ljmp
mov
bound
xor
stc
mov
ficompl
mov
xlat
test
dec
adc
adc
cmp
mov
sbb
jmp
pop
mov
out
cmp
push
add
sahf
push
dec
pop
mulb
add
jle
dec
inc
test
daa
push
dec
push
add
lret
lcall
mov
and
dec
insl
int3
sub
mov
and
mov
mov
lods
or
sbb
add
pop
and
popf
imul
dec
pop
pop
nop
shl
jmp
fstps
mov
mov
shr
pushf
fs
cmp
hlt
std
cmp
pop
mov
mov
jmp
shlb
das
daa
and
ret
pop
addr16
mov
dec
test
dec
mov
jns
fidivrs
xor
mov
and
adc
popa
shrl
mov
lahf
xor
cwtl
xchg
jge
fisttpll
call
icebp
cld
mov
je
push
daa
fistpll
adc
in
mov
lret
cmpb
add
sub
stos
sahf
je
inc
inc
ds
and
cmc
dec
adc
jnp
in
lods
cld
push
lretw
sbb
hlt
mov
fwait
jp
inc
jge
adc
xor
insl
or
mov
dec
loop
add
push
cmp
jb
xlat
nop
lret
jge
push
out
imul
push
enter
sub
jp
jg
fdiv
sub
roll
push
jmp
mov
movsl
add
jle
shlb
push
cmpsl
pop
pop
xor
aad
add
sti
jg
xchg
andl
jo
imul
ret
fiadds
jo
cmp
sbb
scas
setle
adc
mov
pusha
cmp
fisttpll
int3
push
mov
push
js
fs
pop
cmp
cmc
test
ret
xchg
cwtl
in
fisubrs
lea
add
test
aaa
fildll
sbb
cmpsl
sub
arpl
and
aaa
test
inc
lea
adc
or
enter
pop
add
xchg
aas
fcoml
fadds
jb
aam
cmpsl
push
inc
or
push
dec
dec
and
jmp
outsb
push
mov
shll
jae
shl
cmp
jne
or
movl
loop
rolb
sub
aad
cltd
or
dec
add
adcb
and
sbb
shll
dec
shl
push
imul
cmp
pop
ds
cmp
fcomi
iret
and
int
repz
rorl
lods
push
jb
ret
lahf
dec
shrl
xchg
lea
icebp
loopne
nop
sub
int3
out
insl
xor
ret
cmpsl
inc
jle
stc
jg
mov
mov
and
mov
pop
test
clc
add
mov
repnz
inc
mov
fwait
inc
push
stos
xlat
shlb
push
outsb
jge
xchg
lods
mov
dec
fs
popa
test
dec
push
and
or
or
sub
mov
in
xchg
lods
lock
xchg
dec
cmp
out
sahf
rcr
je
mov
xor
mov
outsb
or
mov
imul
dec
cmpl
hlt
imul
pause
jmp
sbb
insb
xchg
xchg
pop
lret
and
mov
jl
sahf
mov
cmp
stos
stos
sub
pop
stc
loop
pop
hlt
push
push
mov
mov
jecxz
dec
jnp
pop
mov
adc
les
mov
or
iret
out
add
insl
gs
daa
fs
mov
add
jp
cld
push
cld
movsb
lea
je
aaa
pop
aam
adc
pop
out
push
int
push
dec
or
in
test
je
sbb
lcall
fwait
pmulhuw
adc
sbbb
es
vmwrite
pop
and
xlat
popf
mov
clc
xchg
cld
mov
je
call
adc
ror
pop
jge
mov
xchg
call
shrl
scas
stos
sub
xor
mov
cmp
xor
sub
jo
in
imul
rorb
or
fdivs
test
loopne
mov
cmovs
inc
sub
inc
push
dec
cmc
frstpm(287
mov
js
test
pop
test
pop
add
scas
nop
xchg
and
and
fwait
arpl
aam
sub
mov
fdivrl
inc
pop
dec
mov
fsubrs
cmp
lods
pop
add
sub
sahf
cmpsb
pop
shrl
pop
call
pop
xchg
jbe
cmp
fwait
push
cmpsl
cmp
dec
aaa
or
fidivrs
xor
pop
add
jnp
mov
repz
mov
ret
cmp
aas
rolb
xlat
fwait
out
out
and
jle
adc
pushf
rolb
dec
cmc
mov
mov
inc
pushf
addr16
jl
xchg
pop
daa
mov
sbbl
xchg
divl
inc
xor
enter
xor
in
push
pop
outsl
outsl
jp
inc
jecxz,pt
and
or
or
mov
pop
cmp
std
add
inc
jle
dec
xchg
push
or
jp
hlt
xchg
mov
dec
aaa
pop
dec
out
add
push
sub
push
inc
cmp
jp
jle
pop
push
xor
cmpsl
fisttpll
mov
fmulp
cmp
loope
mov
fs
xor
fistl
cmp
sub
lret
out
and
xor
push
dec
sbb
fwait
push
cmp
repz
lahf
dec
pop
jecxz
mov
lret
mov
or
inc
insb
or
cmp
mov
das
lods
dec
cmpl
lds
pop
cmpsb
jbe
xor
mov
fwait
add
cwtl
sbb
fs
mov
lret
les
aaa
insl
sti
sbb
mov
les
rclb
dec
xchg
cmpb
dec
xor
sahf
xchg
mov
pop
stos
cld
and
jecxz
out
arpl
data16
mov
fs
push
pop
imul
jo
pop
icebp
pop
daa
mov
and
xor
sbb
loope
inc
adc
jb
lods
cmp
sahf
in
lods
push
mov
test
loopne
and
iret
into
addl
inc
xor
mov
fsubrl
push
jbe
popf
das
pop
xor
in
mov
or
fs
stos
pop
icebp
xchg
sub
or
cmp
cltd
je
jo,pt
lea
mov
fsubl
xlat
jecxz
pop
jl
fwait
dec
imul
rolb
xor
hlt
fildll
dec
js
lahf
daa
xchg
inc
in
in
je
or
sbb
lret
loope
sbb
adc
adc
pop
jge
xchg
enter
or
pop
and
adc
movsb
xor
or
mov
imul
lahf
lret
adc
cmpsb
xor
inc
push
es
sahf
shl
outsl
sbb
lock
loopne
fs
mov
test
pop
mov
inc
xor
adc
clc
ret
cli
std
mov
inc
outsb
ja
cmp
call
cli
scas
add
push
pop
cmp
aaa
dec
add
xchg
outsb
cmp
xor
data16
imul
sub
in
inc
and
pop
cmp
sbb
fists
outsb
inc
in
shr
mov
stc
ret
loop
pop
cmpsb
jmp
pop
jnp
clc
or
loope
test
and
ret
adc
add
movsl
cli
test
jnp
enter
jle
ja
push
jecxz
pop
mov
test
xor
addr16
test
repz
inc
insl
xchg
scas
stos
divl
xchg
cs
mov
xchg
mov
cld
xchg
mov
out
mov
mov
jecxz
mov
out
lret
jne
sahf
xlat
daa
adc
insl
mov
mov
xor
jae,pt
cmp
out
add
mov
add
and
out
jb
movsb
dec
lahf
mov
mov
mov
push
pop
and
sbb
adc
sbb
enter
add
stos
push
sub
test
mov
push
aas
xchg
sub
addr16
sub
mov
adc
inc
cmp
popf
sbb
cltd
pushl
pop
in
dec
sar
pop
in
out
add
mov
xchg
inc
je
lret
test
in
push
pop
jne,pt
clc
aaa
push
int3
sahf
mov
shl
dec
loope
mov
sbb
loopne
xchg
or
into
je
adc
or
dec
stos
mov
mov
fiaddl
lods
push
xchg
ljmp
mov
jno
scas
mov
test
sub
jnp
fldt
and
fadds
js
adc
cwtl
stos
jne
xchg
loop
rcr
movsl
xchg
or
sub
stos
mov
push
pop
or
mov
push
sub
int3
jle
pushl
rcrb
jnp
sub
cwtl
mov
loop
sbb
mov
rclb
dec
fiadds
sti
into
xlat
mov
cmpsb
fld
xchg
mov
pop
data16
mov
das
cs
sub
sbb
xchg
inc
jg
insl
test
leave
xchg
push
arpl
xchg
jle
je
push
fwait
dec
jp
jge
mov
les
fistpl
outsl
orb
sti
adc
dec
sub
mov
in
jmpw
dec
pop
pop
add
sub
push
xchg
popa
xor
push
rclb
pop
jl
rorb
mov
xchg
jbe
cmc
xchg
shlb
xor
je
lock
mov
ret
ds
mov
xchg
jbe
call
mov
lds
and
std
jmp
pop
add
jb
out
rcrl
push
xchg
or
adc
xchg
movsl
pop
adc
stos
jge
test
sub
pop
adc
mov
adc
cmp
mov
das
add
or
mov
dec
dec
in
cltd
leave
ja
call
push
inc
nop
jne
subl
gs
fstpl
int3
dec
jb
gs
mov
inc
out
jbe
lods
daa
popa
lea
test
lret
ja
pop
mov
data16
pop
mov
lea
sub
iret
test
sbb
and
inc
in
ss
push
sub
pop
scas
movsb
scas
imul
inc
addl
loop
ja
insl
sub
ds
xchg
xor
arpl
push
sbb
enter
sub
pop
ja
adc
xor
jns
int
cmpsb
loop
xchg
sub
shl
popa
repz
cmp
hlt
inc
orl
or
jge
add
mov
aad
add
mov
cmp
xlat
push
rol
outsb
mov
jg
jmp
mov
and
mov
lock
fstpl
mov
xchg
dec
pop
jmp
outsl
pop
es
add
popf
addr16
scas
cltd
jne
add
add
mov
xlat
ja
repnz
jmp
les
mov
sarl
int3
pop
inc
xor
inc
jbe
repnz
clc
push
mov
ljmp
repnz
cmp
ja
lock
adc
pop
pop
pop
scas
hlt
pushf
mov
sbb
xlat
jmp
xor
sahf
sub
lods
jb
into
arpl
xor
jae
jo
xchg
dec
mov
push
push
dec
hlt
add
test
fnstsw
aas
push
sti
scas
cltd
sbb
jns,pn
xor
dec
bound
fcmovnb
inc
add
loopne
mov
fcompl
pop
pop
test
incl
xchg
repz
test
jl
cmc
add
incb
pusha
sbb
jge
pop
xchg
adc
test
pop
dec
and
mov
sub
mov
and
lock
rcll
bound
mov
jo
xchg
arpl
pop
push
and
rorl
add
xchg
lock
sub
fistpl
sbb
fbstp
dec
incl
leave
push
sti
andl
mov
pop
mov
sbb
dec
adc
pop
add
xchg
mov
push
sub
into
mov
cmp
imul
rorl
sub
adc
pop
adc
pop
rcll
sbbb
insl
sub
and
call
lret
mov
mov
xchg
and
and
inc
scas
and
mov
mov
inc
out
xor
pusha
and
fwait
mov
pop
cmpsb
loopne
jecxz
pop
lods
subl
mov
sbb
or
pop
bnd
pop
xor
mov
icebp
loop
mov
xor
mov
movsl
xchg
arpl
imul
loop
sub
mov
or
sub
mov
shrb
jecxz
cmpsb
jle
lds
addr16
sbbb
out
imul
cmpb
sbb
add
push
aaa
popa
outsb
in
je
push
test
mov
rcrb
mov
sahf
in
cwtl
pusha
std
ret
sub
fs
ja
test
ljmp
jae
ljmp
dec
test
movsl
inc
xlat
mov
enter
dec
bound
and
mov
pusha
add
ret
rolb
out
outsb
fmull
push
hlt
add
sub
push
jns
mov
sbb
enter
iret
inc
lea
cmove
es
into
addr16
sub
jnp
sbb
mov
xchg
add
xor
jge
sbb
mov
decb
icebp
aad
movl
jns
arpl
sub
inc
jb
loopne
sbb
imul
fsubs
add
pop
mov
sbb
jae
mov
pop
cli
inc
jae
pop
xorb
aas
icebp
lods
lret
cmpsb
and
lcall
xchg
pop
add
ja
dec
shrb
mov
mull
inc
pop
movsb
rcrb
je
cmp
lahf
insb
ja
test
jg
xchg
lods
popf
pop
int
into
repz
fsubrl
xor
xchg
mov
jo
lahf
cmp
add
fcom
mov
or
sub
aad
jmp
adc
outsb
fadds
scas
in
repnz
push
roll
inc
push
dec
push
inc
std
shll
test
pop
jb
or
imulb
and
xchg
push
jb
and
cmp
test
lea
shl
stos
dec
xor
dec
pop
sbbl
aas
test
in
leave
cmp
loop
movsb
rcrb
sub
fistl
shll
fwait
arpl
lret
fidivrs
and
xchg
loopne
cld
popf
movsl
push
rolb
inc
xor
push
sbb
push
jnp
mov
test
cmc
icebp
loopne
pop
ret
ret
mov
fwait
xchg
jmp
cmp
cmpb
push
aaa
lahf
jns
jne
movsb
test
add
fldt
outsl
fisubs
and
jne
add
mov
int
repnz
or
movsl
fs
shll
fdivs
xchg
inc
ljmp
cmc
and
cmp
jp
adc
dec
push
pop
mov
scas
inc
clc
push
mov
aad
cld
pop
jns
pop
jl
scas
xor
add
out
sbb
hlt
and
mov
inc
cmpsb
sbb
push
gs
mov
gs
jns
ja
or
cmpl
mov
or
cmp
in
out
adc
stos
sub
fimuls
imul
cwtl
sub
xor
sbb
cmpsb
jl
cmp
xchg
popa
sub
aad
iret
sahf
inc
iret
add
sbb
and
out
mov
aas
xchg
inc
jno
in
out
icebp
incb
mov
ret
mov
cmp
test
jecxz
add
sub
push
negb
push
pop
jge
repnz
xchg
stc
out
inc
test
pop
icebp
cwtl
pop
jmp
mov
divb
pop
ret
mov
notrack
mov
insl
jo
pop
jl
movsb
jo
jg
jg
mov
xchg
popa
push
push
fistpl
mov
ret
add
cs
pop
xor
ret
das
rdpmc
roll
xor
mov
iret
pushf
xchg
push
shrb
push
mov
adc
je
push
int
or
or
mov
sub
mull
neg
into
imul
es
ljmp
and
add
mov
jp
rcll
or
nop
mov
hlt
mov
jb
sbb
lds
sub
add
or
adc
mov
test
and
inc
adc
xchg
movsb
outsb
xor
jecxz
pop
sbb
std
pop
in
ljmp
in
mov
filds
xchg
xchg
lcall
mov
adc
in
cmp
pop
stos
jle
test
fs
ss
hlt
scas
int
sbbb
das
push
scas
mov
sbb
xor
mov
popa
int3
mov
xchg
fcoml
xor
fsubrs
pop
jmp
and
or
lods
dec
je
iret
jne
std
mov
punpcklwd
add
repnz
repnz
sbbb
shl
clc
ljmp
sub
test
in
xchg
mov
lds
mov
movsl
in
les
cmpsl
mov
dec
pop
xor
and
add
xchg
into
sar
push
mov
push
lret
cli
push
lds
ret
mov
cmpl
insl
fdivs
addr16
inc
sub
std
mov
mov
cmpsl
in
ja
xor
pop
repz
movsb
movsl
in
movsl
jge
lret
bound
push
dec
ror
mov
or
sarl
jl
notl
insl
sti
insl
pop
imul
hlt
sub
fwait
lcall
xchg
lret
sub
es
bound
add
sbb
sbb
mov
sbb
test
addr16
lea
sbb
xor
mov
cwtl
sub
push
sbb
in
jae
mov
shll
and
adc
jl
loop
jb
ss
sbb
lods
mov
rclb
or
sub
pop
lret
jns
mov
movsl
loopne
xchg
pop
sub
sti
mov
mov
cmpl
icebp
loopne
clts
ljmp
adc
fwait
cmp
shl
cs
imul
dec
sub
aam
mov
std
rcrb
cmpsl
into
pop
and
jbe
push
inc
and
inc
cmpsb
pop
pop
jl
in
fstpl
sbb
loope
lock
mulb
xchg
movb
sarl
les
inc
inc
cwtl
nop
sub
in
out
mov
mov
mov
test
jns
adc
adc
push
pop
lret
pop
pop
mov
pop
outsl
lcall
pop
insb
out
sbb
int3
idiv
cmpb
or
adc
jg
stos
popf
sub
xchg
test
pop
xor
mov
out
xor
inc
mov
jmp
dec
and
stos
mov
lods
dec
xchg
test
jg,pn
push
hlt
mov
dec
call
pop
xchg
hlt
movsl
fisubrs
repz
das
enter
dec
out
imul
mov
add
inc
sbb
cmp
ds
lds
mov
xchg
add
ret
popa
aam
cmpsb
mov
mov
iret
aad
call
cmp
fwait
sub
in
mov
clc
mov
cmp
fidivs
arpl
aad
xchg
ficoml
xor
sbb
imul
sbb
test
sbb
jns
mov
mov
clc
dec
cwtl
int3
xlat
hlt
or
iret
dec
jmp
mov
push
inc
icebp
jo,pn
jae
int
sub
xchg
jmp
std
adc
push
in
inc
mov
fcoml
je
sbb
and
test
adc
jle
mov
mov
push
cmpsl
adc
cld
add
jge
sbb
xor
rep
dec
inc
jmp
mov
shrl
pop
mov
fst
push
in
push
test
ljmp
dec
mov
or
popa
dec
rcrb
xor
call
cmp
jb
inc
outsl
outsl
or
hlt
shl
rcrb
stos
push
pop
lods
jle
pusha
sbb
xor
cmpsl
cmp
add
xchg
lahf
ret
imul
mov
aad
nop
insb
jne
xchg
add
icebp
adc
aad
pop
add
test
popf
ja
hlt
adc
out
jno
mov
das
int
pop
sub
jecxz
xor
xor
stc
call
stc
fs
push
mov
jg
ror
sarl
outsl
mov
or
and
and
out
pop
lods
cmp
cltd
ficompl
xchg
inc
mov
ss
imul
jb
xorl
test
or
mov
or
lahf
mov
aad
pop
pop
dec
and
ret
imulb
daa
adc
cmc
adc
adc
dec
rcr
dec
mov
jecxz
je
out
xchg
out
push
lds
dec
pop
icebp
mov
add
mov
sti
fsubl
inc
jbe
movsb
inc
fistps
fidivs
mov
push
mov
add
sub
push
sbb
inc
nop
popa
icebp
inc
es
push
mov
mov
push
mov
push
xchg
push
push
je
pop
inc
outsl
sub
xchg
jae
mov
xor
scas
std
sub
push
mov
and
out
jnp
bound
mov
cmp
jg
int
inc
mov
inc
or
std
pop
les
xlat
out
sbb
das
inc
enter
cmc
aam
les
lahf
mov
lods
fstl
mov
movsl
inc
lret
mov
aam
xchg
xor
pop
pop
rol
mov
or
lret
call
jbe
fistl
mov
mov
pop
jne
call
adc
ss
xchg
aas
sbb
mov
pop
mov
in
or
sub
popa
daa
sbb
nop
dec
sbb
mov
mov
cltd
lret
ja
lret
sub
or
loope
adc
scas
test
gs
adc
insl
or
adc
out
sti
adc
cmpsl
call
stos
shlb
nop
sbb
xor
and
orb
jp
popf
jmp
jb
movsb
ficoml
lcall
leave
shll
cwtl
dec
jns
sub
jecxz
and
pop
inc
push
mov
lret
jmp
idivl
cwtl
arpl
stos
cmp
rcll
test
loop
sarl
jae
stos
pop
repz
pop
movsb
mov
out
pop
outsb
dec
mov
std
sbb
push
cwtl
pop
xlat
jno
icebp
sub
out
mov
xchg
xchg
xchg
jo
and
repnz
std
sti
push
pop
dec
jns
std
add
sbb
rclb
adc
adc
xchg
enter
jge
or
inc
stc
enter
js
dec
mov
dec
mov
rorb
std
mov
and
xchg
jecxz
mov
mov
jo
or
sahf
pop
and
sbb
movsl
cmp
ffree
inc
test
xchg
arpl
mov
jle
daa
int3
aad
loope
add
fldenv
in
popf
pop
cmp
inc
or
mov
frstor
push
mov
push
test
shlb
cmp
mov
lea
jb
es
hlt
dec
or
xchg
pop
outsl
xchg
movsb
mov
push
scas
sahf
lret
loopne
mov
insb
cwtl
inc
adc
iret
cmp
pop
pop
cmc
mov
inc
daa
push
sbb
sarl
mov
lock
ja
fldenv
lds
mov
push
cmp
repnz
adc
out
jo
xor
sub
insl
mov
cmp
ja
mov
mov
xor
dec
xchg
mov
shll
xor
shll
out
adc
fsubrs
test
stc
sbb
dec
fnstsw
mov
cmc
in
push
sub
incl
rcr
sbb
inc
pop
jnp
jb
xchg
int3
test
cli
stc
push
add
inc
add
je
enter
inc
jecxz
test
jmp
sahf
sub
pop
cmp
mov
xor
daa
clc
popa
clc
jo
fucom
dec
xchg
mulb
mov
mov
jge
add
das
nop
pop
ljmp
jmp
mov
pop
jl
mov
xchg
mov
or
mov
fmulp
add
lock
movsl
ret
lods
js
lods
sbb
std
sbb
es
jecxz
or
sub
jbe
mov
pop
sub
sbb
ljmp
outsl
cmp
scas
les
jp
sahf
loope
push
jo
add
push
mov
lea
ss
mov
iret
insb
inc
sub
fdivl
subl
ja
jecxz
xor
lods
loop
push
cmp
jno
inc
cs
ss
cmp
adc
fldl
data16
popf
dec
aam
das
test
pop
ds
cld
fisubrl
mov
nop
mov
insb
stc
icebp
xchg
shll
test
test
lods
lcall
pop
rorl
je
cmp
call
pop
popa
syscall
sub
add
sti
shll
popa
cmp
imul
inc
lock
out
xlat
jg
popf
push
test
cmp
xchg
sbb
decl
scas
jge
push
cmpsb
icebp
push
repz
and
test
add
cltd
lcall
jne
popa
ret
jle
popf
lock
mov
cmp
in
aad
mov
cli
xor
loopne
pushf
es
sbb
xchg
add
push
mov
lods
push
or
rclb
gs
pop
inc
mov
lcall
pushf
test
pop
jns
xchg
push
jno
ja
and
mov
push
jg
test
dec
adc
mov
sti
cwtl
ja
sub
cwtl
push
enter
popa
dec
ret
fs
je
fwait
sahf
stos
pop
aas
test
ret
cltd
das
cli
pop
sahf
and
inc
arpl
add
adc
cld
lret
aad
mov
xchg
int3
js
jg
add
cmc
fs
cmp
sti
mov
cmp
sub
mov
int
les
jnp
lcall
repz
sbb
pushf
out
sti
jl
loope
je
cmc
dec
xchg
mov
stos
cmpsl
aas
xor
mov
repz
stos
cld
in
ret
mov
shrl
push
ljmp
arpl
sub
sbb
push
sahf
push
int3
lret
inc
mov
inc
daa
sbb
scas
mov
xor
lods
rcrl
gs
dec
fsubrl
divl
lahf
test
rorb
jae
in
cltd
adc
or
inc
jmp
mov
mov
dec
fadds
jbe
xchg
mov
mov
xchg
jbe
test
cltd
xor
test
cmpl
jecxz
adc
jbe
lret
push
std
repnz
add
mov
and
dec
mov
add
push
loope
dec
sbb
sarb
mov
jo
clc
into
fucomip
mov
ljmp
fsubp
jmp
cmp
sahf
dec
in
ret
adc
paddq
lret
movsb
sbb
imul
gs
dec
or
das
out
jbe
sub
ficoms
pop
mov
pop
jnp
daa
flds
xor
lock
sti
mov
cmp
mov
loope
or
sub
jnp
test
mov
subb
mov
imul
xor
leave
mov
inc
loop
xlat
jmp
dec
test
es
int3
dec
and
cmpsb
push
rcr
daa
mov
pop
inc
repz
adc
xchg
xchg
test
loop
dec
aad
jb
daa
lahf
lods
jns
std
xor
out
cmpsb
scas
push
sbb
outsl
jbe
fdivl
mov
mov
pop
mov
mov
xchg
std
sbb
mov
aas
aaa
je
inc
mov
xchg
rclb
dec
nop
mov
inc
into
ds
sub
xor
xchg
push
and
test
push
sub
lds
adc
fdivrl
out
add
mov
outsb
in
xor
cmp
loope
scas
lock
mov
and
sti
stc
and
cli
lahf
mov
scas
int3
insl
pop
jnp
sub
jb
mov
ss
pusha
leave
xor
orb
xchg
shl
jecxz
hlt
cmc
and
pop
test
mov
mov
aas
pushf
in
mov
jb
div
ret
cltd
add
jle
test
clc
imul
mov
inc
insb
cmp
sahf
push
jb
outsb
and
cmp
je
cli
sarb
push
or
mov
jae
mov
adc
lahf
jns
pusha
xchg
mov
push
fisubl
aam
mov
data16
dec
out
sub
pop
or
adc
movsb
imul
xlat
add
jge
subl
outsl
mov
stc
popf
sbb
ds
es
int
loop
arpl
mov
add
xchg
or
xchg
je
inc
or
mul
mov
popl
fs
jp
sti
inc
enter
inc
mov
call
add
mov
out
aad
loope
push
cmp
pushf
sub
pop
subb
sub
push
adc
outsb
adc
scas
cwtl
push
je
js
test
xor
cmp
pop
cmp
or
sbb
xor
ljmp
out
or
and
jo
jnp
inc
push
sub
or
inc
adcl
push
rorb
push
clc
dec
xchg
adc
arpl
divl
mov
mov
jmp
popa
cmp
cmp
repnz
arpl
push
adc
mov
xor
sbb
mov
or
in
subl
in
and
test
fs
es
push
loopw
sub
xchg
push
add
adc
dec
out
push
in
mov
call
jne
jne
addl
adc
test
bound
outsb
adc
flds
sbb
test
adc
leave
stos
loope
fisubl
ljmp
out
mov
add
xchg
lret
lea
push
jns
outsl
inc
mov
adc
xor
lods
shlb
and
xchg
cmc
xchg
fs
ret
pop
mov
fdiv
fadds
sbb
fs
mov
arpl
sub
sub
add
inc
in
cmp
dec
inc
in
lods
push
push
push
sub
popf
sub
or
leave
mov
cmp
add
pop
lcall
cmc
mov
and
lock
mov
lods
add
fwait
icebp
es
aam
fnsave
xlat
cmp
rcll
repnz
pop
cmp
inc
in
cwtl
into
or
jg
sahf
je
add
fidivrs
clc
mov
adc
hlt
mov
cmp
movl
stc
clc
jge
push
cs
inc
or
aad
lods
scas
cmp
scas
adcl
call
pop
adc
mov
mov
or
inc
inc
mov
call
sub
loopne
mov
sub
and
pop
or
mull
mov
pop
xchg
jecxz
mov
fildl
inc
or
pop
aas
test
rolb
insl
jo
and
loop
xchg
mov
jecxz
fisubl
lds
xchg
sbb
inc
into
shl
dec
ret
push
jmp
xor
test
add
jle
pop
addb
and
out
sbb
jo
or
aas
movsl
mov
jb
sub
xor
pop
pop
mov
sub
jl
shlb
inc
mov
pop
cmp
mov
xor
mov
out
rcrb
mov
or
mov
int
xlat
inc
dec
mov
lock
cmpb
sbb
pop
push
pop
or
pop
sub
and
cli
inc
je
addr16
aad
sar
icebp
repz
int
cs
sahf
inc
into
jecxz
push
lret
cld
inc
mov
mov
inc
jecxz
cmp
in
icebp
aas
test
sti
es
lahf
cmpsb
out
mov
or
fcmove
dec
cmpb
jle
fs
and
lods
adc
cli
test
mov
pusha
sbb
data16
out
js
or
leave
pop
mov
sarb
inc
adc
lock
dec
push
mov
dec
cmp
dec
imul
sub
call
imul
and
test
mov
and
scas
sti
gs
inc
inc
pop
das
add
mov
push
xchg
fildll
ljmp
cmp
movsl
dec
sub
shlb
test
xlat
cwtl
dec
pop
daa
mov
es
jle
cwtl
jb
or
fdivr
imul
xchg
cs
jle
sbb
inc
mov
rorb
add
cli
stos
jne
in
mov
jno
and
inc
add
dec
lock
xchg
jecxz
popf
mov
cmp
mov
in
scas
loope
ja
cs
pop
cmpsb
js
pusha
cmp
aas
std
movsb
adc
popf
push
xor
out
test
mov
dec
insl
adc
cmpl
push
mov
movsb
add
lahf
adc
and
fwait
xor
mov
int
out
shrl
mov
out
into
push
outsl
cs
imul
gs
sub
inc
or
test
xchg
add
sbb
mov
js
movsl
mov
inc
inc
pusha
sub
ljmp
test
test
bound
lods
insl
sbb
adc
adc
inc
and
repz
setbe
mov
call
loop
push
inc
cmpsl
add
mov
aaa
xor
dec
and
pop
nop
pop
sbb
and
pop
sahf
subb
pop
jbe
add
in
lock
push
lods
clc
int3
stc
sahf
sub
pop
out
jae
lea
and
leave
cld
inc
les
mov
in
mov
fcoms
mov
mov
push
lahf
mov
inc
jle
push
xor
inc
sahf
test
out
rolb
dec
adc
rorb
jge
jo
in
mov
dec
decb
push
fcoml
pushf
pop
push
stos
nop
push
into
push
sub
cltd
dec
xchg
fsubp
fcomps
add
aas
mov
sbb
jno
jmp
dec
cld
lcall
jmp
inc
sub
sub
hlt
jnp
adc
outsb
test
das
fists
mov
mov
shr
jno
sbb
popa
mov
hlt
call
aam
adc
loopne
cli
fdivrs
cmpsb
dec
mov
pushf
hlt
scas
imul
fwait
or
push
into
jne
inc
pop
cmp
into
pop
aam
leave
mov
mov
mov
inc
dec
mov
and
add
sbb
push
dec
jo
popa
xor
cmp
cmpsb
roll
add
call
enter
xchg
imul
orb
testl
mov
std
add
pop
bound
mov
pop
int3
adc
jl
loope
icebp
in
in
mov
and
adcl
jg
push
and
mov
push
orb
jecxz
jnp
inc
pop
inc
jle
es
or
mov
mov
insb
clc
inc
push
loope
and
dec
push
push
mov
fimull
jl
xchg
and
sub
lret
lea
and
sub
cmc
lods
sbb
loop
dec
push
cltd
fistpl
mov
aad
fldl
stos
add
bound
in
sub
int
stc
cli
jbe
push
fstpt
lea
lret
aaa
push
sub
dec
jp
fsubrs
or
insl
clc
inc
shrl
jne
pushf
lods
jmp
subb
scas
outsb
jo
js
xor
pop
and
xchg
fmuls
stos
negl
inc
adc
movsl
mov
aaa
push
and
xor
rolb
out
outsl
dec
xchg
fnsave
int3
xchg
js
mov
jl
pop
out
xor
mov
cli
imul
inc
add
out
mov
int
aad
pop
xor
dec
mov
cmpsl
fdivrs
jg
adc
ret
mov
inc
cmpb
sbb
xchg
inc
mov
add
in
pop
ljmp
jne
ja
leave
loopne
das
aaa
fimuls
subl
adc
or
into
in
pushf
or
jecxz
dec
adc
orl
pop
push
xor
cwtl
or
mov
or
aaa
lds
inc
or
jns
imul
inc
aas
loopne
jbe
pop
loopne
aas
sbb
dec
inc
je
dec
dec
inc
pop
inc
fidivrl
adc
sub
and
mov
out
jnp
jl
scas
inc
sub
loope
jmp
inc
aaa
loop
outsb
repnz
jmp
std
test
rorl
sbb
adc
rcrb
adc
adc
ret
lods
jne
popf
sbb
fldenv
data16
imul
sbbb
fcompl
test
imul
test
aam
jae
pop
mov
xchg
stos
pop
stos
ja
std
cmp
jl
out
les
cmp
aad
sahf
push
sub
mov
cs
jp
mov
fmulp
cld
fdiv
stc
int
mov
xor
hlt
aaa
mov
sbb
push
rclb
xor
sub
fsubrs
cmc
sub
dec
add
adc
das
test
pop
jge
add
idivb
pushf
stc
clc
adc
in
push
scas
mov
addl
out
fwait
pop
adc
fwait
jo
pop
sbb
jns
jl
pop
test
sbb
shrb
dec
cld
fbstp
mov
insl
lahf
mov
les
stos
mov
pop
fdivp
add
mov
or
pop
inc
ret
pop
xor
aaa
adc
mov
aam
xor
hlt
xchg
and
sahf
repz
or
and
call
shll
sbbl
mov
out
mov
movsl
mov
adc
in
xchg
sub
cmp
shl
mov
dec
in
sti
int
adc
add
dec
ja
cmpsb
dec
outsl
mov
ret
mov
lock
bswap
ljmp
movl
jmp
hlt
sub
ja
stos
pop
lods
dec
stos
jns
imul
fstpl
mov
push
cwtl
fdivl
push
jp
pop
mov
inc
shll
push
push
aas
xchg
jmp
movsl
pop
test
insb
jae
mov
and
mov
js
icebp
dec
lods
leave
jb
int3
or
xor
mov
xchg
sti
pop
xor
cmpsb
and
enter
aam
xchg
shr
fwait
xchg
dec
inc
xor
jle
sub
jle
pusha
stos
add
cmp
xchg
sbbb
iret
fists
and
cwtl
push
inc
sub
cli
cmpsl
mov
into
pop
pop
pop
or
test
jnp
mov
sbb
fnstsw
cwtl
xor
push
or
push
jmp
sub
filds
test
xchg
pop
shrb
fstpt
sarl
ror
sbb
dec
add
ror
jp
and
pop
lret
repz
xchg
out
jecxz
sti
imul
push
sub
push
mov
rcr
insb
mov
shr
sbb
insl
shrb
ljmp
aas
cmpsb
fwait
adc
adc
insw
aas
xchg
mov
adc
movsl
sub
lahf
mov
sar
jb
dec
rolb
insl
pop
js
inc
mov
sub
sub
push
gs
scas
ds
loopne
fmuls
mov
xchg
movsb
pop
mov
sub
mov
sub
ja
pop
mov
and
negb
sbb
shld
divl
mov
aaa
cmc
lock
mov
fbld
lcall
jge
stos
push
mov
icebp
outsl
rol
cmp
dec
inc
cmp
push
ljmp
shrl
mov
dec
movsb
push
jmp
sub
fnstcw
lea
cmp
cmp
imul
icebp
cwtl
enter
fwait
xchg
mov
imul
jnp
jle
adc
add
jbe
pop
arpl
leave
adc
dec
adc
inc
insb
addr16
cmp
stos
adc
dec
pop
aas
mov
push
and
dec
xchg
jns
imul
xor
lret
dec
nop
pop
nop
outsb
dec
loop
lds
mov
call
in
stos
test
adc
sub
push
lret
mov
push
xchg
sbb
cmpsl
push
pop
jb
xchg
dec
mov
mov
sti
push
aaa
sub
jmp
pop
xor
movsl
dec
dec
in
movb
adc
xor
flds
inc
call
ss
mov
or
jmp
ret
mov
push
push
pusha
sbb
dec
call
js
and
xor
mov
repnz
pushf
inc
test
pop
repz
sbb
sub
inc
inc
orb
xor
jg
push
aas
mov
sbb
sub
xor
push
cmpsb
cmp
or
testb
mov
jle
negl
sarl
push
movsb
add
lods
out
js
push
dec
ret
jb
mov
dec
rcll
jns
not
mov
les
fs
jo
jb
in
mov
and
jae
mov
mov
sbb
lods
mov
loopne
into
subb
ss
clc
lcall
out
xchg
adc
outsb
inc
mov
lahf
insl
push
and
in
into
jae
popa
pop
inc
cmp
pop
cmpsb
inc
xchg
sbb
fs
push
sbb
push
mov
sub
and
aam
movsl
loopne
popa
fwait
jno
push
pusha
test
sub
dec
ja
popf
pop
push
sbb
xchg
js
iret
rcl
push
lds
hlt
shlb
mov
ss
cltd
add
mov
push
xchg
push
xor
enter
xchg
fptan
into
jle
in
cmpsl
adc
aaa
jae
cmc
mov
loope
dec
sbb
push
sar
int3
or
mov
adcb
sub
loopne
xchg
mov
dec
mov
add
fcomp
add
jbe
in
dec
out
repz
hlt
test
lahf
xor
sub
fidivrs
not
xchg
testl
xchg
sti
scas
sbb
mov
or
jp
lea
mov
test
loope
adc
stos
jnp
mov
pusha
out
adc
filds
sar
test
jmp
push
push
cmp
jnp
dec
outsb
or
hlt
inc
fwait
push
xchg
fidivl
sub
rorb
iret
mov
adc
adc
push
mov
test
sbb
outsl
idivb
aam
loopne
lcall
jl
sbb
xlat
outsb
roll
inc
data16
les
sahf
scas
decl
mov
xchg
pop
lods
cmp
xchg
fs
push
aad
inc
int3
fs
mov
imul
mov
mov
mov
dec
fwait
and
ljmp
mov
push
mov
pop
scas
sbb
push
and
test
outsb
daa
sub
nop
incl
test
in
out
push
outsb
clc
mov
lret
test
or
inc
outsl
or
pop
pop
push
inc
jno
xchg
fstl
jmp
rcr
cmp
xchg
inc
arpl
ret
stc
xchg
int3
mov
cmp
lods
and
push
addr16
adc
stos
cwtl
roll
cmp
cmc
mov
lods
or
jmp
mov
outsb
push
sti
mov
and
jnp
pop
xchg
mov
adc
push
jnp
jge
mov
shrb
mov
add
ret
cmp
inc
stc
rorb
lods
push
je
and
cmpsl
test
insl
pop
jp
sbb
or
cmp
inc
sbb
int3
jnp
cmc
jae
movsl
addr16
mov
cltd
rorl
sbb
pushf
dec
or
and
jae
fwait
add
inc
cmpsb
xor
push
shlb
scas
loop
adc
and
inc
aam
cmpsb
imul
push
aam
fisttpll
inc
xor
insb
ret
std
pop
movsb
xchg
pusha
xor
insl
mov
ret
das
dec
sahf
pop
in
pop
fs
lods
lcall
pop
inc
mov
cmpsl
mov
hlt
arpl
and
mov
mov
ficoms
scas
fwait
cwtl
out
test
sbb
push
dec
xlat
hlt
sub
pop
pop
lods
loopne
cmp
and
rorb
adc
inc
dec
sahf
shrl
mov
leave
jo,pt
movsb
ret
in
adc
dec
sub
inc
adc
ss
or
or
andb
movsb
cmp
ret
xlat
xor
sti
pop
push
push
loopne
loop
popl
cmp
movsl
in
cmp
aas
fistl
jecxz
jb
add
jmp
mov
lahf
sbb
pop
std
push
add
add
cld
in
mov
lods
out
mov
mov
jp
mov
jecxz
xchg
push
jp
cltd
inc
jb
mov
push
pop
psraw
sub
imul
mov
outsl
inc
push
in
jg
lock
enter
imul
xchg
repnz
sahf
cmpsl
lods
inc
adc
xor
adc
pop
or
jne
add
sub
movsb
adc
scas
xchg
aas
and
les
int3
bound
hlt
xlat
pushf
xchg
cmp
add
cmp
inc
and
adcw
jle
mov
es
adc
lret
xor
dec
sbb
out
iret
xor
imul
icebp
inc
pop
mov
and
lret
adc
xor
jecxz
int
sub
outsl
lea
xchg
bound
pusha
pop
fsubl
lods
sbb
jge
cltd
mov
std
out
dec
dec
push
xchg
mov
push
sub
sahf
xor
imull
dec
enter
ds
test
inc
scas
dec
clc
mov
push
das
scas
fucomip
pop
jge
pop
dec
inc
mov
dec
lcall
mov
std
add
lcall
clc
jl
dec
pop
dec
jbe
out
cmp
cmp
jo
cmp
jl
fwait
sbb
or
mov
popf
je
stos
xor
cmpsl
push
add
cld
roll
enter
pusha
flds
clc
lret
xchg
jle
arpl
sbb
cmp
and
push
cli
inc
push
adc
sbb
xor
imul
mov
ret
mov
cwtl
add
inc
scas
cld
dec
je
jae
inc
call
rclb
inc
adc
xchg
les
dec
mov
push
xor
rcrb
mov
les
inc
jb
mov
push
xor
imul
push
mov
cmp
in
in
pop
sahf
mov
rolb
sbb
or
outsl
out
pop
repz
lods
out
test
fs
ljmp
clc
and
dec
jne
int3
inc
cmp
je
push
pop
ja
fsubs
inc
mov
add
sbb
sti
pusha
fcmovnb
cmpsw
push
push
rclb
mov
in
inc
fsubs
dec
repz
xor
mov
data16
mov
pop
add
jp
enter
and
xchg
pop
je
ss
lods
mov
mov
sub
out
out
xchg
imul
mov
pop
jmp
add
adc
test
mov
sub
xor
or
push
cmp
cmp
daa
pushf
ficompl
jb
test
loope
add
stos
xchg
jmp
sub
or
das
scas
cli
aaa
not
repz
dec
xor
and
dec
xchg
movsl
test
dec
push
andb
pop
inc
daa
popf
mov
sbb
jo
lea
sti
sub
jmp
rcrb
mov
jecxz
popa
test
jb
xor
mov
lods
or
popf
mov
lods
popf
dec
ficomps
pop
jmp
sub
jae
pop
fcoml
enter
push
mov
popa
jae
or
jae
enter
mov
cmc
loope
cmp
sbb
mov
mov
pop
pop
inc
outsl
or
js
or
inc
sbbl
xchg
cmp
lcall
aaa
push
loopne
arpl
jmp
or
or
and
xchg
push
addb
inc
aad
aad
xchg
sti
push
fdivrp
sbb
add
rol
adc
mov
inc
sbb
cmp
sbb
movsl
dec
xor
outsb
je
or
repz
adc
mov
sahf
mov
gs
mov
and
push
lret
lods
ljmp
mov
popf
out
and
push
sub
inc
call
dec
fwait
mov
aaa
ret
cwtl
pop
loop
cmp
dec
or
mulb
inc
shl
push
test
jmp
adc
mov
xorl
leave
and
sub
rcll
shrl
mov
scas
inc
mov
shrb
add
adc
mov
outsl
mov
ljmp
pop
add
rcl
aam
in
cmp
into
mov
xchg
inc
fmull
sbb
jb
and
mov
adc
stc
adc
leave
lcall
or
or
dec
lods
dec
or
stc
es
hlt
push
inc
push
jg
sar
gs
dec
jp
orb
dec
sub
inc
push
add
cs
mov
add
or
inc
shr
xchg
movsl
fsts
in
ret
sbb
push
nop
push
inc
or
int3
fcompp
andb
dec
mov
add
or
push
push
mov
mov
fldcw
das
xor
sti
fnsave
mov
or
inc
xor
or
fdivrl
sub
cmpsl
lock
pusha
mov
mov
pop
and
adc
adc
in
aas
pop
dec
push
int3
sub
xchg
iret
add
imull
xlat
enter
sbb
pop
xor
cli
xor
jge
insl
lods
mov
sbb
das
sub
fwait
jmp
adc
and
push
sbb
xchg
mov
imul
mov
mov
mov
dec
repnz
loop
pusha
pop
cld
cmp
outsl
out
out
std
scas
ret
jnp
xchg
mov
xchg
jge
cmc
pushl
push
imul
or
xchg
jno
mov
aaa
adc
mov
int3
subb
popf
aas
mov
testb
das
mov
sbbb
popf
jl
pop
stos
rcrl
aam
popf
fisubrs
pushf
mov
imul
sbb
loop
add
stc
xchg
push
test
xor
insl
das
mov
divl
dec
lock
xor
stos
outsb
and
sbb
test
jmp
shl
push
pop
cmp
mov
popf
sbb
scas
push
mov
push
sub
fistpll
movsl
push
out
push
cmc
scas
jne
pop
scas
out
aas
out
push
syscall
push
loop,pn
sti
push
neg
sbb
lds
dec
int3
es
cmp
xor
cli
push
push
outsl
shrb
pusha
adcl
test
mov
push
fdiv
jne
or
mov
gs
jl
sub
mov
js
xchg
cmpl
and
jae
xchg
or
push
mov
cltd
xchg
imul
js
adc
mov
pop
in
dec
xchg
sub
scas
mov
push
jp
cltd
sarb
out
cwtl
shlb
add
xlat
les
mov
sbb
cs
sbb
ret
out
aad
mov
aas
rorl
shll
adc
inc
ret
sbb
daa
out
add
or
sbb
mov
cs
push
mov
daa
inc
jo
inc
mov
out
test
xchg
xor
dec
in
sbb
nop
push
call
xor
addr16
mov
push
xchg
cmp
lock
add
jmp
addr16
push
pop
inc
sub
cmpsl
xchg
fimull
pop
loope
jecxz
mov
cli
mov
ret
xchg
stos
mov
mov
dec
fstpl
or
push
mov
jne
sahf
stos
pop
jge
adc
fiadds
test
ss
jl
lods
fadds
daa
es
int3
mov
outsb
pop
mov
std
stos
inc
ljmp
pop
test
mov
cmp
fbld
jecxz
sub
in
add
or
ficoms
add
stos
dec
ret
or
push
cwtl
or
inc
cld
addr16
cmc
xlat
sub
loopne
mov
ret
cmp
in
out
inc
cmp
movsl
or
movsl
pop
mov
cmpxchg
stos
xor
mov
jb
lret
addb
sub
scas
jae
cmp
jmp
ja
test
test
les
cmpsb
nop
mov
or
into
inc
out
push
data16
in
jmp
inc
movsb
jle
sbb
mov
daa
mov
pop
lock
pop
ret
ret
mov
in
sbb
loopne
scas
sbbb
mov
pop
add
scas
rcll
and
das
out
movsb
popf
je
cmp
lods
test
rorb
sbb
outsb
leave
or
insl
pop
add
idivb
push
jae
std
sub
sub
xchg
xor
push
js
cmpsb
xor
pop
cmp
add
in
cmp
xor
cmpsb
insl
add
stos
pop
int3
cmpsl
aaa
stos
sub
adc
adc
test
js
adc
mov
pop
clc
pop
mulb
orl
lods
cld
xor
lcall
nop
cmp
icebp
pop
stc
pop
and
shl
cli
or
mov
adcb
jg
cmpsb
imul
xlat
add
leave
cwtl
push
sbb
hlt
or
jecxz
fxtract
jl
jbe
lds
inc
push
popf
xor
add
aaa
dec
add
pop
mov
lds
out
addr16
pop
rcr
or
mov
daa
and
add
test
adc
test
int3
outsb
xor
movsl
div
xor
loop
out
test
out
dec
sub
fwait
ret
cs
pop
add
inc
adc
sbb
popa
pushl
jnp
test
shrb
mov
cmc
inc
mov
negl
fidivrs
dec
push
adc
in
stos
dec
inc
std
xchg
stos
loope
loopne
movsl
xchg
sbb
leave
and
incl
mov
std
mov
scas
sbb
jnp
je
call
jmp
in
xor
mov
dec
xor
dec
insl
sbb
xchg
inc
std
lea
out
fcomip
int3
pop
xchg
push
jp
movsl
jno
decl
lret
std
insb
mov
test
cmovge
movsb
repnz
loopne
cltd
mov
mov
add
jbe
or
in
and
sbb
xor
in
dec
add
cld
lcall
mov
movsb
dec
in
sbb
mov
xor
and
int3
cmp
and
les
gs
sub
test
dec
ret
cmc
push
mov
cltd
daa
fsts
cwtl
lock
icebp
fcmovbe
ja
call
mov
jbe
mov
sub
push
pop
xchg
mov
stos
nop
or
std
lcall
mov
jp
and
test
mov
inc
iret
cld
add
mov
pop
xlat
pop
pop
add
adc
lahf
or
popa
xchg
fistpl
test
mov
mov
pop
popf
jno
outsl
or
bound
andl
mov
pop
sbb
sti
ret
mov
inc
cmp
dec
mov
test
and
pop
add
and
dec
out
push
push
adc
mov
pushf
fstl
push
enter
jb
xor
lods
mov
pop
mov
shld
pop
test
insl
mov
lcall
xchg
cmp
aam
pop
scas
jge
movsb
js
xchg
xchg
test
and
stos
inc
xchg
pop
inc
movsb
cmpsb
cwtl
les
or
mov
rol
xorps
add
idivl
jp
inc
testb
adc
mov
push
into
mov
adc
jmp
fdivrs
pop
xchg
in
leave
jmp
stos
sub
testl
jns
fistps
stos
inc
add
jg
xor
hlt
int
fisttpll
or
and
loopne
jne
imulb
icebp
cwtl
xchg
xchg
pop
sbb
cli
pavgb
out
in
std
insl
mov
adc
push
fidivs
mov
sar
jae
dec
aas
or
popa
xor
mulb
jbe
movl
stos
pop
shl
gs
mov
mov
push
sub
lods
inc
mov
pusha
adc
loope
sub
or
loope
jae
dec
lcall
fwait
bnd
leave
or
sti
dec
pop
fsubr
lods
sub
je
lahf
cmpsb
cmp
jp
dec
add
mov
mov
lahf
rorb
int
repnz
push
xor
shrl
stc
xor
stos
push
je
jbe
mov
incl
add
jmp
mov
ja
jp
fiaddl
arpl
cmp
popf
mov
or
sbb
cwtl
jnp
push
rclb
test
je
xchg
pop
rcll
stos
add
repz
sbb
jl
dec
or
inc
lahf
mov
mov
cmp
test
aad
outsb
bound
fidivrl
in
lret
imul
cmc
sahf
pop
loopne
sbb
fs
pop
adc
mov
or
loope
jnp
cmp
push
scas
and
jae
mov
mov
push
stc
pop
mov
fisttps
jb
fsubrp
mov
mov
xorb
mov
subb
mov
push
cmpsw
fstpt
xchg
add
lret
mov
dec
mov
insl
fidivrl
leave
add
lret
fistps
popf
mov
push
mov
repz
sbb
mov
movsb
xchg
das
jp
xchg
cmpsl
sub
test
rorl
inc
pop
es
subb
push
and
push
xchg
xchg
std
or
imul
fwait
xor
xor
mov
push
xchg
hlt
rorb
inc
cmp
jne
cli
fadds
lret
xchg
scas
inc
test
bound
sub
xchg
cmp
out
cmp
xchg
mov
inc
enter
add
pop
sbb
sub
mov
xchg
fisubrl
test
jecxz
or
repz
das
sbb
adc
lock
insl
xchg
clc
cmp
jl
js
stos
fisubrs
push
je
xchg
lods
push
ds
xchg
lods
and
push
jb
push
jb
test
pop
les
punpckhbw
and
test
cmpb
add
loope
push
cmpsl
xor
lods
cmc
mov
test
push
push
mov
push
mov
xor
jo
cltd
pop
inc
xchg
mov
ja
nop
sarb
hlt
test
sub
test
and
lock
jle
mov
xchg
mov
sub
rcl
shll
popa
mov
pop
arpl
pop
adc
push
dec
loopne
ja
jb
xchg
fwait
push
cmp
shr
dec
xor
scas
cmp
push
mov
inc
loope
aas
mov
mov
lods
add
pop
or
daa
test
cmp
cmp
in
or
pop
ficoms
push
dec
push
daa
aam
sub
rolb
fmul
cmpl
ret
mov
xchg
ficompl
pop
shrl
adc
lods
xor
add
shr
inc
shl
outsb
cld
jmp
xorb
ret
repnz
pop
sub
ja
adc
sub
or
popf
loopne
test
and
pop
cmp
pushf
mov
sub
dec
mov
test
sahf
xor
pop
add
jnp
lea
fnsave
inc
jo
orl
loop
mov
fcomi
cmp
push
xchg
mov
dec
adc
out
int
xor
sbb
push
aam
xchg
xor
mov
cmp
scas
ficoms
add
push
rorb
imul
mov
lds
or
std
loop
inc
fs
add
cld
inc
jle
shlb
sarl
cld
pop
icebp
leave
or
ds
dec
lahf
mov
jbe
dec
cmp
cmp
push
jo
popa
sbb
inc
fstpt
inc
imul
stc
decl
and
mov
xchg
sbb
push
mov
lods
and
jmp
jo
pop
adc
adc
adc
loop
sub
jge
mov
cmpl
aas
fs
icebp
lods
movsl
sub
call
mov
mov
dec
mov
fcoml
dec
lcall
mov
mov
dec
out
xchg
inc
xchg
add
push
add
popf
mov
call
jl
js
mov
call
out
rolb
inc
fistl
xor
xchg
push
inc
cmp
xchg
jns
pop
dec
scas
fimull
aam
push
jno
inc
mov
call
aam
cmp
fsubrl
jg
rorb
mov
push
dec
dec
mov
sub
test
xor
lds
testb
mov
sub
push
dec
rcrl
scas
sub
mov
inc
pop
push
jle
adc
je
out
lret
push
mov
mov
test
lret
jg
xchg
mov
imul
fcomip
cmp
dec
js
cmpsb
cld
cmp
sti
in
pop
cwtl
xor
fsub
dec
mov
cmp
imul
push
add
repz
sub
icebp
xchg
jp
cld
mov
or
std
sub
cmp
nop
mov
pop
aam
push
sbb
scas
mov
and
jo
test
ror
stc
imul
adc
mov
push
adc
shll
aas
popw
pusha
push
pop
in
adc
sub
fcompl
mov
add
movsl
sub
inc
aas
dec
mov
add
mov
iret
pop
and
fs
call
pop
negb
imul
rcrb
and
mov
jl
mov
nop
xchg
test
and
jp
imul
jno
int
jb
xchg
inc
mov
push
fwait
and
out
pop
jp
std
fildll
jle
push
lea
into
jbe
ret
pushf
cmp
add
xchg
int
sub
fnsave
loope
in
test
mov
outsl
cmp
ja
ficoml
fwait
cmc
mov
adc
jae
ss
mov
mov
pop
and
cmpsl
test
mov
inc
testb
sbb
aas
repz
addl
lock
add
mov
push
mov
icebp
lret
rcll
faddl
sbb
in
xlat
repz
rolb
xor
fisttps
dec
mov
cmpsb
xchg
mov
jl
inc
jo
jne
and
inc
fs
pop
mov
adc
adc
repnz
xor
jmp
outsl
push
xchg
adc
int3
sub
dec
dec
pop
pop
fwait
adc
add
pop
test
mov
pop
jmp
lock
negb
jb
inc
popf
jae
ss
sub
fdivrl
insb
inc
inc
in
fwait
icebp
push
xor
adcl
movsb
mov
cmp
imul
fcmovb
gs
repz
add
divl
mov
push
cwtd
repnz
jb
pop
out
je
mov
or
fisttpll
popa
orl
loope
or
jmp
inc
inc
imul
push
xchg
and
inc
outsb
stos
fstl
icebp
jo,pt
xor
jp
mov
push
test
ret
dec
pop
ljmp
cmpsl
mov
dec
xlat
fstl
mov
mull
idiv
mov
pop
xchg
pop
or
lock
push
ret
cmp
dec
in
cmpsl
push
lock
mov
sbb
jge
and
mov
das
dec
pop
lds
test
sub
mov
rcr
sti
ficompl
xor
inc
jns
push
ljmp
jge
sbb
inc
frstor
mov
dec
test
repnz
popa
leave
cli
pop
mov
rorl
jecxz
sub
push
mov
jo
xor
xchg
xchg
xchg
push
cmp
push
push
inc
sbb
leave
push
push
gs
or
fdivl
dec
cwtl
mov
adc
test
mov
addr16
loop
adc
addr16
mov
ss
xlat
mov
insl
mov
stos
fcmovnbe
mov
ja
in
loope
in
pop
outsb
cmp
je
ret
push
cmp
mov
sbb
insb
mov
lods
sub
sbb
shrb
mov
xor
push
jge
stc
mov
pusha
movsl
add
aad
mov
leave
xor
cmp
aam
push
fisubs
imul
mov
xchg
cmp
mulb
mov
imul
cmp
cwtl
mov
and
mov
pop
mov
lret
inc
lods
cmp
or
jg
or
jne
gs
ja
fdivrs
scas
mov
loop
and
lret
mov
cmp
inc
cmp
dec
xchg
fs
clc
icebp
mov
push
imul
and
jmp
cs
sbb
les
cld
ljmp
std
out
pop
or
add
jb
adc
push
and
inc
les
sbb
adc
bound
inc
adc
xlat
mov
subb
ffree
incl
lock
imul
and
adc
xchg
mov
sub
insb
cmpsl
inc
dec
push
dec
test
mov
add
out
pop
jle
sbb
fdivs
btr
sbb
sbbl
inc
test
xchg
cmp
mov
ret
inc
xor
xchg
imul
mov
jmp
xor
mov
test
add
jbe
hlt
lock
and
ss
loope
pop
orb
add
adc
enter
xchg
push
test
mov
stos
sbb
sar
jne
add
add
jle
fs
pmaxsw
lahf
imul
stos
test
repnz
dec
dec
lea
cmp
repz
sahf
and
push
push
in
xchg
ret
sbb
xor
jecxz
jbe
insl
adc
mov
fcoms
cmp
insb
sbb
sub
test
pop
addl
call
push
mov
push
stc
sbb
mov
mov
test
or
rcrl
xchg
mov
cli
mov
mov
in
mov
ret
mov
inc
call
movsb
pop
repz
inc
inc
pop
out
pop
push
pop
stos
hlt
xchg
cmp
adc
out
jl
push
push
add
cld
cmp
es
outsb
pop
xor
mov
out
mov
ljmp
pushf
add
jge
cli
dec
movsl
out
fdiv
and
inc
xchg
frstor
outsb
xchg
cmc
sub
mov
mov
and
shlb
sbb
sbb
cld
stc
sub
and
sarb
int
loopne
mov
je
and
adc
fsubp
into
aas
mov
out
xchg
mov
aam
aaa
xor
push
xor
xor
jle
adc
hlt
jbe
dec
or
cltd
jae
cmp
data16
stos
mov
ja
jns
lcall
push
lods
popa
mov
jno
aam
shlb
sub
out
mov
push
mov
outsb
dec
mov
das
in
or
ss
sub
cmp
out
dec
push
fcomps
xlat
mov
jecxz
dec
fnstenv
sbb
cmc
inc
jge
cmp
inc
fld
push
sti
or
mov
out
jge
cmp
shr
loop
popa
lcall
lea
std
jl
adc
add
or
add
lret
mov
test
aam
lds
sbb
xorl
in
dec
mov
stos
push
cmp
lods
ret
int
inc
imulb
sub
lcall
mov
add
movsb
rolb
push
add
outsb
movsl
lods
sti
out
mov
shll
stc
iret
push
movsl
imul
and
add
rcrl
stos
dec
adc
incl
push
scas
push
fcoms
mov
mov
es
sub
sarl
fiadds
in
sub
int
insl
jl
mov
andl
cwtl
adc
aas
cmp
pop
mov
add
dec
int
xchg
dec
pop
xor
mov
jae
or
cld
jle
repz
sbb
or
add
pop
pop
rcrb
clc
dec
ljmp
in
sub
sub
pop
mov
stc
dec
cmovle
mov
mov
into
std
jne
call
sub
aaa
dec
or
mov
fcmovbe
cmp
push
movsb
adc
sub
xchg
lret
into
mov
aam
gs
ja
jl
mov
push
pusha
pop
pop
outsb
add
push
jb
test
dec
fcomi
sti
jb
jmp
notb
lock
std
dec
dec
outsb
out
mov
sub
mov
cs
and
mov
rcr
jne
ret
cmp
outsl
shl
cmp
mov
lock
lods
stc
inc
pop
jp
dec
sub
pop
xchg
lods
adc
testl
sub
pushf
mov
insb
mov
in
clc
call
and
in
add
ja
test
jne
pusha
adc
lods
add
inc
insl
popf
jns
cltd
int3
adc
addr16
fwait
jae
or
pop
xchg
jge
ja
out
daa
jb
lahf
or
inc
cmp
mov
jecxz
pop
or
mov
and
shrb
sub
movsl
lahf
test
in
insb
pop
int3
int
sub
xchg
cs
fsubrs
add
pop
cltd
outsb
push
pop
sbb
mov
fidivs
lods
adc
pop
iret
int3
pop
and
ds
movsb
ret
inc
dec
shrb
add
fiadds
add
and
add
or
in
test
fcompl
xchg
arpl
in
das
insl
cmpsb
sbb
cmpsb
dec
sbb
int
lock
fistl
adc
mov
xlat
pop
or
sub
nop
xchg
test
lock
mov
arpl
mov
mov
inc
loopne
pushf
add
mov
imul
in
cmp
rorb
adc
pop
leave
push
mov
adc
jb
insb
inc
pop
add
mov
mov
daa
dec
fisubrs
mov
lahf
xor
pop
push
push
pop
loop
aad
jnp
mov
sbb
scas
xchg
xor
je
sahf
sti
fistl
inc
xchg
popa
push
and
bound
out
mov
xchg
mov
loop
cmc
daa
adc
leave
dec
cli
push
or
and
ljmp
cmpsl
mov
cld
pop
stos
aam
pop
in
or
mov
out
lods
enter
pop
testl
outsl
addr16
ljmp
addr16
arpl
test
mov
loop
aaa
add
cmp
jne
fnstsw
jno
adc
xchg
lods
out
mov
loop
loope
mov
push
add
lret
jno
lea
sub
negb
icebp
jle
aas
cld
push
mov
add
inc
add
sti
and
jl
pusha
sbb
pop
shlb
out
out
and
repnz
mull
and
stc
xchg
call
popa
stos
mov
out
xor
adc
pop
ljmp
nopl
dec
push
fwait
push
stos
xchg
stc
inc
nop
mov
xchg
fidivs
cwtl
decb
mov
inc
jp
in
mov
mov
into
hlt
or
out
inc
jae
jmp
loope
or
push
rcl
sti
je
adc
xor
arpl
inc
xor
cld
pop
cmpsl
sbb
lds
lock
cmp
shlb
dec
or
jb
lret
fmulp
in
jecxz
insb
inc
icebp
fsubrs
xchg
movsb
out
push
pop
testl
pop
daa
or
mov
out
movsl
clc
cmpsl
cltd
in
adc
inc
cmp
pushf
jnp
lret
jno
repnz
cmp
inc
cld
pop
mov
lods
pop
adc
mov
ja
ljmp
or
jmp
push
data16
scas
fidivs
sub
jb
clc
sbb
xchg
pusha
les
or
aas
xchg
jo
xor
enter
ds
sbb
addr16
rcll
test
fistl
cmp
xchg
insl
mov
and
cmp
pop
bound
out
xorl
add
or
popa
divl
cmpsb
int
ja
loope
jecxz
stos
test
orb
in
sbb
dec
push
push
out
pop
xchg
lret
mov
xor
hlt
pop
xor
iret
les
and
cli
mov
shlb
add
adc
xor
pop
and
pushf
adc
mov
mov
das
push
ror
cmp
fnsave
dec
std
sub
dec
mov
add
lret
add
jbe
pusha
and
test
sbb
dec
pop
call
or
push
bound
ljmp
jmp
xchg
inc
out
daa
xor
push
jle
sub
bnd
mov
dec
jno
insb
or
pop
movsb
pop
mov
scas
adc
mov
ljmp
pop
in
jmp
pusha
cmc
lds
xchg
aad
mov
cmp
sub
and
mov
xor
and
cmc
das
sbb
aam
jge
jle
mov
add
push
outsl
pop
loop
in
stc
or
add
in
inc
push
enter
or
lea
pop
fildll
jl
fwait
loope
mov
jecxz
mov
push
jecxz
mov
mov
sarb
xor
sub
pop
rclb
les
sbb
outsb
stos
sbb
mov
push
push
jecxz
jge
icebp
arpl
icebp
xorl
and
push
inc
mov
push
mov
test
ds
mov
xchg
ret
ja
push
or
mov
jo
rcrb
or
cs
mov
loopne
call
cmp
fmuls
imul
jmp
out
dec
mov
dec
mov
sbb
lea
dec
jecxz
jno
jae
lcall
xchg
mov
out
dec
ror
dec
shr
inc
pop
cmp
xor
mov
xchg
xor
insb
adc
aas
out
test
incl
xor
inc
pop
imul
dec
fisubrl
aam
loop
faddp
xchg
mov
dec
nop
incb
mov
jmp
jns
testb
cmp
jns
movsb
test
scas
cmp
ficoml
je
mov
leave
sbb
fsts
fldl
aam
jmp
les
pop
xchg
push
testb
adc
mov
nop
add
adc
es
sub
test
dec
arpl
fildll
add
loope
mov
lock
std
lods
shrl
xchg
aaa
add
daa
sbb
pop
xchg
testb
stc
dec
push
shl
in
fists
fdivl
add
imul
cld
or
cltd
and
aam
fldenv
jg
mov
stos
jb
gs
xchg
push
in
pushf
add
mov
les
insb
andnps
into
mov
lcall
je
cmc
lock
dec
mov
or
mov
sbb
mov
mov
xor
mov
out
xor
jmp
xchg
inc
sub
lods
scas
adc
sub
sbb
insl
push
jae
enter
xchg
pushf
mov
push
adc
xchg
cmpsb
in
mov
sbb
loop
mov
sbb
mov
jp
xor
inc
xchg
in
jmp
popl
insl
pop
or
test
jg
pushf
push
lcall
insl
ja
cmpl
and
movsb
jbe
pop
inc
iret
loopne
dec
cmpsl
jl
jo
adc
loope
sub
pop
push
xchg
mov
push
inc
inc
inc
mov
cld
loope
mov
iret
iret
aad
stos
nop
inc
jmp
push
jno
loopne
xor
sbb
shr
sbb
lods
jae
hlt
inc
dec
inc
mov
loop
jg
push
pop
hlt
lahf
clc
test
mov
adc
arpl
jle
xchg
imul
push
push
or
fsubrs
fs
fwait
js
js
xor
sub
inc
and
cli
jb
shlb
inc
dec
jge
imul
out
add
mov
jle
mov
movsl
and
je
sbb
jb
xor
and
out
pop
push
js
jns
out
hlt
dec
add
mov
mov
jnp
jo
cmpb
or
mov
push
lods
mov
dec
fsubs
cmp
adc
test
mov
shrb
or
subb
jns
jmp
jg
and
xchg
xor
and
fisubl
adc
mov
mov
dec
ret
test
aas
jecxz
mov
lcall
and
mov
mov
pusha
lds
mov
cmp
push
test
mov
outsb
fstl
mov
mov
adc
xchg
outsl
jns
imull
insb
or
jns
shlb
jae
movsl
jl
addr16
jno
push
nop
sbb
sub
std
in
pop
in
push
incb
es
cltd
enter
daa
pop
inc
xlat
fcom
jecxz
dec
shlb
daa
dec
insb
pop
xor
dec
mov
push
lods
xor
or
or
mov
lock
scas
mov
int
and
mov
cmp
cwtl
inc
popf
bound
adc
mov
cli
jne
daa
rclb
adc
lods
sbb
pusha
mov
ret
xchg
shrl
fisubrl
or
inc
fildll
xchg
out
in
cmpsl
test
lds
mov
add
std
dec
test
jo
cmp
cmp
cmp
sub
in
inc
loope
and
mov
adc
jae
mov
fs
test
inc
pop
mov
fldt
into
loop
adc
pop
fistl
mov
fs
adc
ret
pop
out
loope
adc
adc
inc
xchg
mov
shll
clc
lret
fimuls
add
xor
inc
fcompl
mov
adc
xchg
js
test
sub
mov
jl
pop
adc
sub
dec
les
inc
sbb
adc
testl
or
pop
lea
std
lock
rclb
dec
faddl
lock
push
dec
dec
stos
ror
cmpsl
sub
pop
sub
lret
mov
fistps
push
mov
fadd
jae
lods
mov
pop
jg
and
out
mov
call
rcl
sbb
cwtl
add
cmp
jne
adc
inc
cmp
mov
data16
xor
or
cld
lods
dec
inc
fsubrl
add
pushf
imul
shrb
leave
out
popa
pusha
add
je,pt
cmp
cli
jo
mov
dec
out
fwait
mov
ficoms
sbb
mov
ret
ljmp
das
sub
cwtl
dec
in
xchg
je
adc
in
lods
out
int3
or
cmp
cmp
fistps
iret
push
dec
mov
test
push
icebp
filds
xor
add
pop
dec
sub
push
inc
and
jl
push
adc
mov
leave
adc
and
mov
jmp
jbe
jo
imul
dec
xor
mov
ss
or
jb
cmp
pushf
fmuls
inc
xor
call
push
and
mov
cmpsl
sbb
mov
dec
in
stos
adc
frstor
imul
xchg
popa
lret
lods
xchg
movsb
push
dec
cmp
int3
popa
sub
add
inc
mov
ljmp
dec
jnp
mov
push
jae
sbb
lock
shrl
lods
pop
push
repz
je
out
add
js
fidivrl
lcall
jbe
sahf
or
mov
inc
aas
add
pop
icebp
mov
mov
pop
insl
adc
fsubr
dec
or
xchg
js
jb
aaa
or
bound
lret
stc
mov
cmc
push
cmp
dec
jbe
xchg
sub
test
sub
sbb
mov
enter
mov
daa
test
xor
jbe
ss
nop
and
push
shld
into
aas
dec
dec
iret
ljmp
and
scas
jecxz
xchg
pop
jg
das
sti
leave
push
lock
adc
leave
sbb
out
mov
hlt
ficompl
cwtl
repz
mov
out
shll
jb
add
sub
add
sahf
sub
out
daa
inc
in
test
inc
add
mov
addr16
movsl
mov
fs
addr16
out
pushf
mov
ds
and
push
xchg
fildll
pop
xchg
repz
adc
mov
jg
in
aam
pop
sub
addb
leave
iret
adc
mov
loop
shl
inc
sub
push
inc
lahf
sub
and
fs
sbb
adc
ljmp
pushf
subl
out
loope
mov
int
rorb
push
pop
or
mov
fs
inc
pop
out
in
and
stc
lods
or
das
int3
cmp
repnz
dec
fistpll
pop
adc
xchg
pop
ror
aaa
sbb
popf
jne
jb
mov
imul
inc
adc
sub
mov
stc
enter
test
push
mov
jmp
push
loop
mov
xor
lea
inc
push
cmp
lcall
xor
pop
dec
icebp
mov
loope
rep
push
mov
or
xchg
fisttpl
roll
fstl
and
or
andl
mov
xor
dec
rol
aas
int
inc
out
jl
fnstcw
dec
add
es
jge
popf
sbb
pop
xlat
test
out
inc
and
inc
cld
dec
dec
cmpsb
xchg
stos
mov
mov
subl
lock
inc
into
iret
xor
inc
jne
sbb
std
cmc
fcmove
or
xor
pop
adc
jnp
push
sahf
jp
xchg
cmpsl
mov
xor
cmpsl
imul
jo
sub
js
imul
notb
xlat
jbe
cmp
fsubrs
cmp
cmc
nop
jmp
rolb
imul
movsl
ror
out
es
rcll
subl
popf
lods
cmp
xchg
pop
xor
imulb
jp
in
pop
mov
jbe
inc
push
aaa
jmp
xor
outsl
xchg
xchg
ljmp
cmp
cmp
ljmp
cmp
push
roll
mov
scas
test
inc
cs
inc
sarb
inc
cli
pop
les
popa
ljmp
push
inc
jb
fisttps
pop
push
mov
cmpb
inc
in
jno
push
adc
out
push
push
mov
mov
cmc
push
movsb
fdivrl
lahf
mov
push
and
xor
jns
inc
mov
pop
ja
popa
mov
in
cmpsl
daa
aaa
cmp
jae,pn
imul
stc
andl
ffree
add
adc
fstpt
pop
sub
push
dec
mov
das
sarb
ljmp
jb
mov
and
mov
cmpsl
stos
push
xchg
jge
scas
data16
mov
xchg
arpl
mov
dec
add
pop
push
fadds
aas
fnstenv
dec
add
ret
adc
test
xchg
xor
pushf
aaa
cmp
daa
xor
sbb
rcrb
push
lea
fistpl
ret
inc
mov
pop
sbb
jne
cltd
sarb
repz
daa
call
add
adc
je
repnz
and
scas
mov
mov
mov
cmp
xchg
in
dec
dec
adc
mov
dec
or
in
mov
pop
mov
ret
dec
lret
cltd
std
mov
jge
cltd
int
mov
jl
je
adc
sarb
pop
into
sub
xchg
inc
jmp
ja
mov
add
ljmp
roll
mov
mov
sbb
test
cmc
lods
mov
pminub
push
pop
loope
ljmp
mov
ljmp
fldenv
mov
sub
daa
and
inc
fcoms
inc
inc
js
adc
xor
loope
xor
fadd
mov
imul
dec
stos
mov
mov
daa
xchg
aaa
cmp
xchg
popf
ret
es
jmp
shr
in
cmp
fs
pop
imull
sub
pop
andl
jbe
subl
sub
aas
or
cld
add
shl
xchg
adc
mov
xchg
shll
dec
adc
loop
out
mov
xor
insb
test
pop
lahf
push
es
into
outsb
and
rorl
or
inc
mov
repnz
mov
shlb
sbb
js
stos
jno
adc
sbb
mov
out
push
dec
aas
adc
pop
lds
outsl
mov
jno
xchg
rep
shrb
imul
push
sbb
push
sbb
int3
add
mov
xchg
jle
push
ljmp
jns
xor
push
sbb
icebp
test
or
inc
jnp
push
scas
hlt
and
cmc
rorl
nop
xchg
and
lea
enter
cmc
pop
scas
mov
or
or
ret
xor
aas
stos
test
jns
fcmovnu
loopne
xor
dec
mov
or
sub
dec
test
sub
shr
repz
jl
push
stc
adc
cmp
xor
sbb
cmp
push
or
jns
push
insb
sbb
inc
sbb
int3
add
inc
ljmp
loop
jb
cwtl
out
iret
push
xor
xchg
xor
jnp
pop
jno
arpl
xlat
push
xchg
fs
and
ret
jge
addl
scas
dec
insb
out
xchg
cmp
test
sbbb
adc
repz
lret
push
out
xor
pop
xlat
loope
and
xchg
cli
fucomi
push
repz
mov
lods
mov
or
ret
or
mov
test
jg
ret
stos
out
sub
and
lea
repnz
rolb
mov
jo
nop
roll
ljmp
js
jne
mov
xor
insl
fdivrs
ljmp
inc
or
jge
push
pop
icebp
pop
loop
cmp
scas
jbe
mov
aas
rorb
mov
sahf
add
inc
loop
push
js
pushf
push
inc
mov
mov
adc
mov
fsubl
sbb
aad
add
inc
inc
mov
mov
sub
push
gs
arpl
xchg
xchg
int3
and
out
dec
inc
xlat
inc
fsts
rclb
sub
xor
imul
adc
mov
imul
push
dec
cwtl
jns
cmp
or
or
test
mov
mov
push
into
fildll
add
mov
pop
xchg
mov
addr16
mov
cmp
mov
push
dec
mov
cmp
pop
notl
push
fidivl
pop
fadds
insl
mov
ss
xlat
xchg
inc
ds
iret
addr16
pop
cwtl
xor
lods
loopne
inc
pop
mov
xchg
divb
jp
nop
cld
push
sub
ss
jp
lahf
insb
cmp
push
mov
jbe
call
and
adc
iret
cmpb
sbb
sub
push
shlb
call
ror
inc
ljmp
fists
loop
test
sbb
pop
lods
jae
push
leave
movsl
xor
lods
fisubrl
and
in
fstps
jmp
and
sub
mov
xor
jno
call
cmp
test
jb
repnz
mov
shlb
test
xlat
push
lods
sub
jbe
fbstp
rorb
arpl
lret
ljmp
adc
movsb
lcall
fmull
clc
fmuls
es
inc
test
fistl
ja
xchg
or
sub
lods
ja
mov
sub
dec
pop
ss
mov
jecxz
inc
out
ja
add
mov
jg
out
mov
mov
mov
sub
inc
stos
or
or
lret
scas
rorb
cmp
mov
addr16
fidivs
jmp
pop
add
lods
push
push
or
xchg
or
mov
cli
jmp
or
sbb
adc
and
pusha
jle
mov
lcall
enter
mov
pop
add
nop
insl
dec
mov
adc
repnz
cmp
xor
insl
popf
adc
xchg
arpl
sub
sbb
lcall
or
sbb
dec
inc
inc
stos
sub
ret
dec
cltd
mov
inc
cmp
mov
sub
mov
sbb
and
imul
icebp
cmp
mov
mov
jmp
orl
lods
out
cli
adc
out
mov
jle
cmpsb
mov
wbinvd
arpl
lret
in
sbb
iret
fdiv
fcompl
out
pop
fistl
jae
inc
push
mov
add
out
xchg
dec
push
add
sbb
mov
jle
sub
ljmp
das
js
push
sub
mov
xorl
filds
sbb
xor
add
sbb
mov
aas
popf
leave
call
mov
jg
cld
enter
xor
out
dec
sbb
or
cmpsb
adc
or
repnz
mov
cmp
pop
sbb
xchg
mov
add
and
add
cwtl
dec
mov
or
dec
xor
movsl
xchg
cltd
inc
push
popa
imul
and
sbb
push
adc
push
imul
es
xchg
ret
add
nop
cmpsb
into
stos
les
jo
jge
xor
or
xor
fistpl
test
jp
lret
call
out
jg
fbstp
dec
xchg
xchg
pop
test
cmc
jo
pop
push
and
sahf
imul
jmp
sbb
shl
ss
adc
and
in
aam
cmp
push
enter
inc
outsl
adc
xor
jae
addr16
je
cmpsl
cmpsl
lret
insb
cmp
or
xlat
cmp
cmp
lahf
in
mov
add
fwait
shl
sub
cmp
mov
fisubrl
loop
clc
shrb
push
adc
xchg
enter
imul
jl
adc
hlt
pop
mov
sbb
push
in
mov
xor
xor
test
cmpsb
jmp
cwtl
xor
xor
mov
fwait
add
les
add
dec
pop
and
push
adcb
cld
arpl
dec
lock
movsb
lret
jge
lcall
inc
lcall
xor
call
add
or
push
jl
cltd
aas
cmpsb
fnsave
loope
les
fistpl
xor
fnstcw
pop
cmp
cmpb
rorl
mov
lods
xor
lods
or
cld
inc
ljmp
dec
push
push
push
inc
sti
arpl
aaa
ds
xchg
sbb
fisttpl
push
test
loope
loop
lahf
cwtl
sub
sahf
ljmp
xchg
dec
std
cmp
clc
in
dec
outsb
clc
adc
ja
stos
fnsave
push
add
pusha
mov
inc
nop
test
imul
push
adc
jecxz
inc
leave
mov
mov
xor
mov
xlat
cmp
clc
andb
int3
pushf
jmp
and
clc
fwait
nop
dec
ret
mov
mov
imulb
or
add
push
or
addl
jne
sbb
dec
mov
jae
iret
xchg
daa
mov
aaa
jg
adc
cmp
icebp
orl
lock
xor
jl
icebp
std
add
inc
stc
jle
scas
sub
sbb
sbb
cld
push
push
jbe
lahf
sub
sbb
hlt
or
inc
mov
repnz
pop
repnz
inc
inc
inc
inc
pop
outsl
adc
pushf
dec
aam
add
in
int
add
push
daa
push
flds
pop
je
mov
dec
jmp
popf
push
mov
stc
cld
sub
xchg
pop
nop
cmc
mov
xor
push
fsubp
loop
and
pop
dec
push
loope
mov
push
jb
lret
or
lea
mov
in
scas
sbb
sub
sbb
lret
test
inc
push
xchg
popa
ret
dec
cmp
mov
cli
aad
xchg
nopl
sbb
mov
mov
push
mov
addr16
dec
loopne
jne
cmpsl
repz
lods
sub
ret
dec
fwait
inc
popf
out
ret
add
adc
les
fistpl
js
jbe
xchg
dec
jge
gs
ss
xchg
fcmovnu
sarl
cmp
sub
psadbw
ret
icebp
xor
adc
mov
mov
jg
pop
pop
cli
mov
cmpl
or
jmp
mov
repnz
pop
fistpl
push
cmp
sub
icebp
cs
int3
or
and
add
dec
sbbl
mov
or
sub
lret
xchg
mov
mov
mov
cmp
test
cmp
shrb
and
cmp
sbb
int
pop
pop
inc
jmp
jno
mov
add
xchg
jbe
movsl
xchg
adc
test
fdivs
ss
xchg
outsl
sbb
enter
ds
cmc
pop
push
sarl
stc
xor
push
ljmp
test
xchg
insl
add
sti
test
mov
test
xchg
loop
mov
call
lret
dec
xor
pushf
aas
jecxz
xchg
adc
mov
ja
mov
scas
adc
in
test
and
ss
xchg
pop
imul
iret
mov
and
pop
out
icebp
mov
cmp
jecxz
pop
dec
divl
sub
cmpsl
mov
pop
xchg
inc
cltd
iret
jb
les
jae
lds
push
pop
mov
pop
jbe
lods
adc
pop
enter
fnstsw
addl
mov
cmc
aas
popa
lds
jge
jmp
xor
lock
xchg
jbe
gs
fs
cmpsb
mov
mov
sbb
aam
push
ret
loope
addr16
add
test
aas
imul
negl
insl
icebp
cmp
in
pop
inc
cmp
adc
xchg
inc
and
popa
mov
jp
fldln2
xchg
out
mov
xchg
push
lcall
movsl
cmp
fadd
testl
fwait
call
lods
adc
out
test
lahf
pop
pop
jle
xor
mov
jmp
inc
sbb
adc
ss
or
push
js
dec
outsb
jbe,pn
shll
call
mov
and
rorl
mov
insb
out
pop
dec
repz
rcr
xor
aas
rclb
inc
and
out
ret
fnstcw
mov
or
or
xor
lret
cmp
aaa
mov
sbb
sub
xor
loope
jle
leave
fisttps
sbb
xor
pop
mov
dec
inc
ja
mov
movsl
dec
xor
push
es
dec
xchg
jecxz
sub
out
pushf
jns
int3
call
fnstenv
xor
add
les
cltd
repz
mov
pusha
jbe
push
sar
push
ret
roll
adc
pop
ficoml
lock
jnp
lock
fstps
dec
inc
xchg
out
sbb
loop
out
fcomps
mov
daa
sub
out
mov
cltd
popf
fisubs
lahf
sub
push
clc
es
ret
pop
jge
jns
add
adcb
pop
xchg
mov
xor
cmp
cmc
add
mov
ds
pop
and
add
push
add
in
jns
inc
sarb
adc
push
sahf
cmp
pop
dec
push
outsb
scas
ret
jmp
insl
in
add
xor
jg
xchg
sahf
push
in
pusha
data16
xchg
ss
cmp
in
pushf
add
test
outsl
lock
mov
cs
test
jmp
sti
aam
sub
aam
faddl
call
sub
test
movsb
or
push
push
push
cmp
pushf
lods
pushw
sub
cmp
loope
out
insb
sub
leave
outsl
pop
ret
ficoms
rcll
ret
cltd
std
adc
ret
sub
adc
push
or
addr16
cltd
jp
xchg
popf
mov
pop
fstpt
add
sub
ds
xchg
shll
mov
dec
and
xor
fwait
or
mov
fidivrs
data16
mov
add
jno
outsb
out
dec
jo
adc
and
dec
sub
fsqrt
sub
lret
add
xor
xor
sahf
mov
sti
pop
fcmovbe
lods
and
fldl
cltd
lcall
pop
and
fistps
ret
pop
pop
dec
and
lcall
xor
outsl
fsubrp
and
push
imul
loope
bound
insl
xor
or
and
pop
cmp
or
stos
andl
cs
es
xchg
fsubr
push
jmp
es
cmpsb
xchg
xchg
cmp
cmpsb
inc
cmpsl
pop
push
pushf
sub
inc
lcall
mov
dec
mov
les
adc
xchg
mov
iret
push
add
xchg
pushf
dec
push
or
inc
xchg
cmp
sub
outsb
cmp
fs
pop
push
cmp
push
cli
cmpsb
adcl
dec
xchg
add
jb
idiv
jle
sub
xor
and
aad
mov
jle
repnz
jmp
rclb
pop
xchg
data16
xchg
sub
sbb
lahf
xchg
dec
mov
pop
lcall
icebp
pop
mov
mov
repnz
stos
scas
push
std
jle
and
bound
lods
insl
add
movsb
ret
sahf
dec
dec
pop
imul
mov
push
dec
add
mov
and
testl
inc
xchg
aam
pop
pop
scas
mov
jge
mov
movsb
call
in
ret
repz
enter
std
and
out
xchg
and
test
cltd
repnz
cwtl
jmp
push
push
cmp
sub
jecxz
push
xchg
aam
cmp
fldenv
sarb
or
aam
pusha
into
pop
rcrb
xchg
pop
inc
dec
rclb
mov
rclb
shl
add
jle
jle
shrb
push
and
dec
mov
out
imul
bt
jno
arpl
adc
inc
mov
or
push
fstpt
adc
sbb
dec
gs
scas
fs
mov
mov
cmp
aaa
sti
in
or
fnsave
repnz
mov
in
mov
jo
pop
hlt
pop
pusha
fst
mov
xchg
hlt
stc
pop
mov
add
data16
repnz
cli
sub
adc
aaa
testl
in
pop
test
xor
jb
fistl
dec
add
orb
mov
int
out
fcmovnb
leave
mov
xor
jmp
je
xchg
jb
sub
dec
je
xlat
lcall
push
xor
lret
movsl
mov
xchg
and
sti
insl
js
or
out
stos
ss
sbb
shrb
aaa
cmpsl
call
arpl
add
insb
in
notl
lods
les
xchg
pop
mov
inc
mov
and
mov
arpl
or
pop
icebp
jns
movsl
mov
repnz
cmp
sbbb
mov
enter
mov
fldl
inc
je
loope
xchg
lret
xchg
adc
cmp
lock
rcl
rorb
lret
jno
or
mov
jmp
xor
pop
rclb
pop
mov
xchg
mov
and
mov
xchg
pushf
ja
xchg
fdivl
adc
jb
pop
iret
inc
mov
fcompp
push
rol
mov
enter
inc
mov
mov
test
adc
cmp
push
xor
gs
shrl
shll
sub
movsl
movsl
mov
in
in
inc
in
or
popa
mov
pop
fucomi
and
inc
push
cmp
push
sahf
in
inc
inc
dec
pushl
push
inc
pop
push
push
adc
ret
rcrl
les
xorl
out
pop
mov
repnz
xor
outsb
daa
fdivl
ss
mov
jb
mov
dec
and
xchg
nop
scas
in
jmp
mov
and
addb
jnp
ljmp
cltd
and
sbb
or
mov
jne
jp
jbe
dec
and
mov
aas
or
sbb
popa
out
fcompl
and
pop
out
xor
cmpl
xchg
sub
cmpsb
dec
std
subl
sub
cmp
pusha
popf
and
pop
in
repz
xchg
jecxz
cmp
push
imull
stos
push
add
inc
movsl
dec
aas
cmp
add
call
cmp
rol
mov
xchg
or
lock
xor
cmpsb
repnz
test
push
push
jb
jmp
pop
rorl
and
mov
inc
adc
into
lods
shrl
out
js
fs
into
stc
xlat
sbb
scas
mov
jnp
xchg
sbb
ljmp
out
adc
sti
ret
xchg
adc
loopne
call
xchg
aaa
and
data16
sbb
in
inc
hlt
insl
ficoml
sbb
lds
pop
mov
adc
mov
cmpsb
push
movsb
adc
gs
pop
jl
in
dec
and
cmp
std
inc
xor
pop
std
jp
psrlq
and
clc
mov
mull
pop
mov
jecxz
es
push
out
je
repnz
push
dec
xchg
push
lret
hlt
mov
jg
jl
mov
add
jns
shrl
cmc
mov
jle
iret
xchg
iret
pop
dec
jge
jle
call
das
inc
dec
leave
mov
cs
add
jae
in
leave
push
and
lock
xor
cmp
jp
xor
into
outsb
jp
cmc
push
sub
int
inc
mov
sbbl
or
cltd
lret
ss
dec
stos
sub
push
repnz
or
jne
hlt
jmp
loop
xlat
cmp
xchg
test
hlt
mov
xor
xlat
loope
ret
xchg
jb
out
sbb
adc
mov
xor
fisttpl
fsubp
inc
inc
mov
xor
xchg
movsl
out
adc
inc
divl
lahf
test
pop
sub
std
test
cmp
jp
subl
addl
sbb
push
test
inc
cmpsl
cmp
add
icebp
mov
icebp
out
enter
adc
mov
stos
loop
notb
mov
push
das
fs
sub
mov
cmp
add
pop
stc
mov
jno
or
ljmp
inc
sahf
jle
lret
xchg
jb
or
lods
mov
xor
inc
lcall
insb
popl
lcall
mov
fsubs
xor
push
lods
mov
mov
js
aad
pop
decl
add
movsb
lahf
sub
cmpsb
fcmovnu
sub
dec
fbstp
jns
std
lcall
sbb
mov
cmp
sahf
adc
add
inc
sbb
outsb
cmp
leave
pop
cltd
inc
loop
add
or
or
pop
cmpsb
jno
pop
loope
enter
pusha
popa
dec
sbb
pop
add
fadds
xchg
xlat
lds
jp
dec
push
mov
jle
cld
jbe
mov
or
addr16
xchg
movsl
sub
enter
ds
in
mov
push
pop
dec
aaa
ds
add
scas
in
aaa
inc
insl
mov
sbb
pop
fs
popf
cmc
lea
jmp
lret
fisubl
loopne
cmpsl
xchg
pop
dec
rcr
inc
xor
mov
add
mov
stos
pop
mov
sbb
sahf
or
xor
not
cmp
and
sub
fs
mov
in
std
lock
add
xchg
mov
jae
mov
aad
adc
pushf
cmp
sub
dec
popf
ljmp
pop
jecxz
test
test
and
je
adcl
outsl
lcall
outsb
adc
lods
pop
fwait
cld
and
hlt
add
xchg
jp
cwtl
cmp
inc
inc
add
pop
pop
or
push
mov
jno
adc
adcb
mov
pop
and
lret
adc
aaa
popa
into
xor
xlat
lcall
mov
clc
inc
lret
das
fs
stc
loope
jno
psubq
cmpsb
cmpsl
addr16
outsb
aam
xchg
jp
add
mov
mov
and
cmpsb
lods
xchg
mov
test
xchg
cwtl
mov
inc
cmpb
popa
sbb
push
jns
push
push
out
inc
rol
sbb
iret
aaa
subl
stc
arpl
les
int3
repnz
test
add
iret
je
pop
dec
inc
push
stc
push
xchg
pop
sbb
mov
or
pop
cmp
hlt
imul
jg
pop
pop
jo
sbbb
add
int3
xor
int
sub
addr16
or
sbb
shrl
imul
xchg
mov
cwtl
add
or
jg
cmpsb
xchg
pop
bound
orb
mov
jp
lods
inc
ds
pop
inc
ret
mov
cmc
nop
sahf
add
fstl
inc
icebp
insl
or
data16
pop
data16
loop
repnz
cltd
lods
mov
cs
lods
insb
inc
adc
pushw
inc
mov
out
aam
xchg
jnp
mov
pop
cmp
or
movsb
ret
sub
mov
test
sub
push
jae
sub
dec
push
jle
fcompl
das
das
nop
and
scas
push
push
fisttpll
adc
scas
pushl
rolb
mov
sbb
mov
pop
sub
add
sbb
test
add
sub
ss
inc
js
pusha
add
mov
movsb
jge
addr16
pop
cmc
mov
lcall
outsb
fistps
dec
stc
lahf
sti
aam
add
movsl
in
or
iret
loop
jo
adc
push
xor
pushf
leave
cmp
fstps
mov
or
and
xorl
fisttpl
leave
clc
bswap
test
add
mov
mov
jnp
shrb
push
fmul
xchg
scas
aad
iret
xor
jno
aad
std
sbb
xchg
push
jg
add
inc
cmpb
mov
dec
stos
out
jo
out
lahf
xchg
xchg
mov
in
dec
dec
push
arpl
inc
std
movsl
stos
loope
mov
loope
out
fs
movsl
push
xchg
fcomi
jne
pop
mov
popa
push
test
add
mov
push
push
jge
lret
xchg
add
mov
xchg
inc
cld
sbb
xor
sahf
int
jae
out
stos
out
mov
lahf
cltd
adc
push
out
lods
div
cmp
or
cwtl
loop
hlt
add
testb
mov
ja,pt
out
jmp
and
inc
mov
lds
jne
inc
xchg
fxch
cli
adc
xchg
in
or
bound
pop
adc
mov
xor
xor
dec
jmp
in
std
xor
popf
test
faddp
addl
fwait
dec
pushf
rcl
addl
xor
sbb
sbb
hlt
int3
sub
dec
iret
insl
lock
push
mov
lods
xlat
popf
cmp
adc
out
mov
in
int3
or
das
push
iret
xor
shufps
or
daa
lret
sar
push
inc
sub
add
jge
sbb
unpcklps
scas
sub
pop
stos
add
sbb
fnstcw
js
and
lods
lods
adc
out
call
fnstcw
loopne
mov
mov
mov
mov
lret
ss
jmp
fnstenv
shlb
xchg
jno
nop
and
xor
aam
mov
fmull
rolb
lods
pop
sbb
or
movsl
and
sar
pop
aad
jns
daa
decb
sub
push
xor
int
and
inc
and
ljmp
add
in
mov
mov
pop
dec
cmp
sub
cmp
lret
mov
mov
sti
lods
sub
loope
jmp
in
mov
add
nop
cli
lods
lret
fisubrl
cltd
insb
dec
mov
loopne
xor
inc
add
lahf
mov
leave
or
push
xor
stos
insb
and
mov
icebp
or
push
and
adc
mov
adc
mov
sbb
lahf
cmp
imul
jo
iret
in
in
push
jo
add
imul
and
mov
clc
pop
jb
mov
inc
lahf
out
jno
dec
mov
ja
sub
push
mov
dec
jp
xchg
inc
sub
dec
and
pop
or
mov
ljmp
iret
rcrl
xor
out
cmc
jle
adc
imul
inc
mov
movsl
movsl
addr16
jo
cmpsb
pop
out
and
xchg
push
lds
cwtl
mov
or
inc
repz
jmp
sahf
in
add
adc
push
popf
xor
das
or
mov
movsl
add
mov
jl
xchg
lods
dec
pop
push
out
push
mov
adc
add
adc
mov
rcll
push
xlat
sub
mov
fcoml
mov
fisubrl
pop
cmp
out
jle
out
or
in
leave
insl
dec
in
dec
insl
js
add
pop
sub
and
or
mov
fmuls
sbb
mov
dec
or
dec
push
add
cmc
mov
xlat
or
adc
popf
xor
ds
stos
or
and
mov
into
fsubrs
mov
repz
dec
int
es
xchg
mov
xlat
lods
gs
mov
dec
jo
pop
pop
stos
out
and
lahf
repnz
ljmp
test
nop
test
iret
bound
add
adc
pop
movsb
rorl
sbb
xchg
call
mov
inc
invd
add
movsb
aas
call
data16
lds
push
hlt
dec
fdivrl
into
and
loope
ret
pop
sbb
push
jecxz
push
mov
aad
push
push
xor
pop
cltd
jge
add
imul
fbstp
jae
hlt
add
adc
or
les
cmc
push
hlt
jb
inc
dec
sbb
push
mov
lahf
fnstsw
push
cmp
out
sbb
ret
cmp
cmp
inc
ljmp
mov
jno
or
lock
mov
ljmp
fmulp
xor
cmpsl
testl
and
push
sbb
lcall
mov
cmc
push
ljmp
push
enter
cwtl
pop
test
call
lods
cmp
sub
jno
ret
pop
es
push
lea
mov
cmp
mov
mov
jmp
or
mov
lods
add
cmc
jg
cmpsb
jmp
mov
jp
nop
cmp
popf
iret
imul
and
add
jl
shll
or
push
insb
jno
divb
push
xor
notl
xchg
js
dec
pop
movsl
cld
mov
add
repnz
sbb
add
in
ror
pop
outsl
aaa
sti
out
pop
jns
push
push
sub
push
stos
rcrb
in
in
cmp
dec
push
lods
push
cli
in
jno
nop
inc
faddl
pop
aas
mov
jbe
rorl
and
push
mov
dec
mov
fisubrs
pop
into
ret
sbb
loope,pn
jp
mov
xchg
xchg
jno
xor
fldenv
dec
inc
cmc
cmc
aam
mov
adc
jg
cli
loop
aad
data16
push
je
outsl
fs
test
adc
xchg
outsl
fists
mov
mov
sub
in
stos
pop
adc
ret
dec
decl
int
sbb
movsl
stos
into
stos
jp
das
mov
or
roll
std
push
xor
and
xchg
lcall
pop
outsl
movsl
jp
pusha
mov
xor
aam
sub
ss
lock
cmc
mov
push
dec
jmp
push
dec
mov
dec
gs
jae
add
mov
lds
jmp
xor
jnp
xchg
js
mov
inc
loope
mov
cmp
mov
mov
inc
mov
out
xchg
fisttpll
fisubrl
aas
push
adc
push
aaa
adc
lods
jo
push
arpl
or
subl
push
movsl
in
dec
adc
stos
xlat
jmp
std
dec
push
add
pop
xchg
leave
lds
fyl2xp1
adcb
mov
mov
adc
mov
addl
ljmp
test
add
xlat
pop
sahf
push
xchg
movsl
sbb
push
adc
xchg
xchg
movsb
jb
push
lahf
jno
test
mov
frstor
mov
inc
gs
mov
dec
add
xor
icebp
cmc
jae
scas
and
pop
jnp
push
jecxz
xor
sbb
lcall
rcl
dec
sub
cld
sbb
cmp
lahf
popa
pop
notl
hlt
add
jp
sub
mov
outsl
pusha
mov
pop
jb
jp
inc
adc
fisubl
mov
mov
pop
cs
sub
test
daa
stc
out
loopne
mov
sti
dec
es
cmp
in
das
pop
test
test
mov
sub
pop
andb
xchg
sbb
loope
sbbl
xor
and
stc
dec
pop
movsl
and
in
dec
nop
add
das
jns
movsb
ds
xchg
popa
enter
sbbl
outsl
std
push
lret
pop
adc
dec
push
push
les
cltd
mov
in
addr16
imul
ficoms
sti
mov
mov
cmp
xchg
ja
fimull
mov
xchg
adc
incl
mov
push
inc
cmp
jl
mov
xchg
ja
jae
outsl
adc
inc
inc
lahf
stc
cmp
push
mov
cmp
sbb
pop
add
cmp
cmp
mov
mov
fimull
dec
mov
stos
xorl
sbb
adc
aad
xchg
xor
add
lds
mov
push
lret
or
or
push
cmc
lods
xchg
out
adcb
movsl
out
inc
jecxz
lods
jg
mov
int
jge
dec
mov
mov
out
jo
mov
sub
jno
pop
xchg
adc
mov
adc
ret
fwait
pop
jo
in
cld
in
out
call
jne
popf
rorl
js
stos
arpl
cmpsb
out
mov
rcr
inc
jne
rcrl
dec
push
scas
mov
pusha
inc
cmpsl
fprem1
mov
or
jmp
mov
dec
xor
xchg
out
push
jge
jmp
mov
test
push
lret
in
xor
push
sub
inc
sbb
loop
les
in
mov
xor
mov
mov
rcr
aas
xchg
aas
pop
cmp
enter
mov
jl
inc
sub
push
movsb
les
rcrl
call
adc
pop
xchg
or
sub
idivl
repz
mov
jecxz
rorl
xchg
cli
sahf
inc
and
cmpsb
inc
iret
mov
call
subb
xlat
jb
push
loope
clc
pop
inc
cmp
lcall
sahf
sub
push
lcall
pop
movsl
dec
cwtl
je
incl
pop
jl
rorl
pushf
andl
sub
sbb
lock
fstpt
push
push
xchg
adc
adc
js
xor
pop
and
jg
jge
or
subl
mov
and
push
dec
pushf
push
or
push
pop
imul
mov
jl
jmp
push
shrb
push
mov
sbb
mov
jg
icebp
xchg
add
dec
in
xor
mov
fimull
icebp
pop
mov
mov
add
dec
mov
js
xchg
dec
mov
test
cmp
es
pop
dec
leave
lcall
stos
sbb
ret
aas
push
jge
sub
popf
fbstp
sbb
outsb
mov
jl
fsubr
pushl
mov
sub
push
lret
push
xor
xchg
sub
push
or
movsl
repz
test
scas
fcom
scas
and
jge
push
aam
out
outsb
mov
pop
es
fsubr
rol
icebp
cmp
pop
shl
fsubrp
dec
dec
lds
jle
inc
add
data16
loopne
jb
test
cmp
pop
bound
mov
test
cwtl
adc
inc
sbb
jo
or
mov
lahf
dec
aaa
loope
pop
dec
outsb
jnp
jmp
xor
nop
ret
mov
popa
xchg
scas
icebp
push
push
icebp
xor
push
ret
inc
sbb
pop
fs
notb
or
in
sub
cmp
or
lcall
cwtl
lods
insl
cmp
inc
stc
mov
das
daa
insl
sbb
cmp
js
clc
mov
loope
mov
aam
repnz
mov
jge
mov
sahf
ljmp
loopne
hlt
nop
jmp
arpl
dec
add
inc
fidivl
push
xchg
mov
mov
pop
push
scas
xchg
std
inc
lret
sub
sbb
mov
enter
or
adc
xchg
in
pusha
insb
jg
dec
sarl
and
ret
repnz
jo
pop
mov
inc
lock
push
mov
and
mov
lea
call
xchg
or
popf
aad
push
mov
pop
and
daa
xor
xchg
sbb
cmpsl
int
std
leave
jg
mov
rorl
mov
lcall
cmp
fldl
mov
inc
insl
int3
lcall
push
lods
sbb
add
xor
push
sbb
test
testb
xor
nop
and
sbb
es
hlt
sti
aas
in
fcmovb
xchg
dec
fldcw
out
push
imul
rcrb
inc
push
mov
fcmovne
lahf
mov
add
add
mov
loope
mov
lcall
cld
gs
cmpsb
addb
xchg
xchg
xchg
adc
stc
add
hlt
idivl
cmc
push
fwait
cmp
pop
movb
mov
mov
in
je
lcall
push
mov
xchg
mov
xchg
shrl
outsb
push
push
jae
mov
repnz
pop
pop
lret
loopne
push
sub
push
cmp
mov
adc
imul
lret
shl
shrb
das
movsl
mov
fs
pop
xor
stos
sbb
clc
fwait
out
lcall
cmc
outsb
push
lods
adc
mov
or
adc
mov
lcall
stos
add
cmpsl
mov
xchg
pop
xor
mov
ja
adc
mov
rcr
push
sub
xor
shll
mov
xchg
ret
loop
xor
loopne
add
mov
push
add
mov
adc
cmp
jb
test
xchg
lcall
je
fcompl
lds
scas
mov
sahf
sub
dec
imulb
pop
int3
inc
or
xor
jmp
mov
out
arpl
sub
pop
lods
fists
loop
insl
add
cli
cmp
or
pop
pop
mov
push
rcrb
cltd
pop
or
pop
fsubrl
jae
outsl
stc
in
mov
pop
cs
inc
jb
sbb
jne
enter
push
ret
push
enter
and
jl
cmp
lret
fistps
push
mov
ss
lods
sbb
int
xchg
push
dec
fistps
mov
jg
insb
sub
mov
push
mov
or
sbb
pop
inc
lret
cmp
out
shrb
bound
scas
inc
mov
mov
mov
jg
outsb
inc
xor
pop
jbe
pushf
mov
or
test
ds
sahf
sub
pop
popf
ds
pop
xor
outsb
testb
nop
inc
push
cmp
int3
stos
or
into
push
adc
mov
push
stos
in
push
ja
in
mov
call
sbb
aad
mov
inc
les
xchg
or
leave
sub
in
rclb
and
lcall
jns
or
sbb
les
int3
xor
leave
enter
daa
sub
fadds
xchg
gs
int
mov
mov
sub
test
mov
lret
gs
fstpt
jmp
test
iret
icebp
pusha
stc
pop
sub
cmp
in
lods
xchg
push
cli
out
cmp
xchg
inc
xchg
rcl
iret
sbb
or
cmp
hlt
rolb
es
test
push
cmp
mov
imul
and
xor
cmp
jne
jno
out
add
jnp
jno
inc
test
cli
mov
out
mov
pop
xor
inc
add
scas
add
sbb
rcrl
addr16
xchg
adc
or
stos
dec
movsb
jns
xchg
icebp
push
clc
jne
jecxz
mov
roll
test
cmp
cmp
cmp
jp
mov
bswap
es
fwait
leave
add
ds
aas
jle
repnz
pop
push
mov
cmpsl
cld
fidivrs
push
mov
inc
jmp
outsl
inc
cmp
cmp
das
mov
les
add
das
pop
scas
imul
inc
lahf
inc
stos
push
mov
push
test
je
xchg
loop
ljmp
popf
fcompl
ss
call
bnd
jecxz
mov
das
mov
test
inc
fwait
daa
xorl
xchg
enter
or
cmp
imul
ss
and
outsb
or
popf
std
adc
imul
outsb
dec
mov
fbstp
test
cli
push
mov
push
mov
orb
cmp
fs
fs
rcrb
repz
push
pop
sbb
adc
sbb
xchg
nop
icebp
inc
mov
sub
loope
sbb
popa
xchg
mov
xchg
sbb
xor
popf
mov
in
push
repz
fsubs
fs
and
int3
mov
out
shlb
push
xor
loope
xchg
in
jle
fldlg2
outsl
ror
mov
cmpsl
lods
xchg
loope
or
jl
jmp
cmp
stos
lret
mov
test
ret
mov
jmp
stos
jns
push
ret
dec
xchg
daa
pop
clc
aad
dec
push
fdivl
mov
ficomps
add
fucomi
jno
mov
mov
loop
out
ret
cmp
std
into
sbbb
mov
mov
sub
stos
xchg
testl
lea
mov
bswap
ljmp
mov
jge
arpl
inc
jbe
jge
adc
pop
bnd
sbb
mov
es
addr16
lods
jnp
jmp
cmp
mov
and
iret
push
insl
out
mov
pop
sub
adc
out
sub
popf
scas
mov
pop
cmp
push
xchg
cmp
shl
xor
and
lods
sub
in
ja
jno
pop
add
add
movsl
shll
and
push
popf
pop
and
imul
sti
out
cmp
loop
cwtl
int3
cmp
ret
mov
imul
imul
push
jns
pop
in
pop
stc
cmp
orb
dec
insl
movsb
dec
add
cmc
xchg
icebp
pop
cmp
cmp
inc
adc
stos
orb
and
dec
pop
lcallw
das
mov
dec
push
stc
pop
gs
add
inc
sub
inc
stc
lds
pop
adc
imull
enter
lret
mov
or
pop
add
clc
es
in
jp
pop
push
push
and
fldcw
add
fldcw
cmp
arpl
dec
mov
jb,pt
sub
das
jne
scas
mov
mov
lahf
adc
mov
dec
mov
hlt
inc
outsl
jns
subb
addr16
cmpsl
dec
xchg
or
pop
push
pop
sbb
adc
sbb
push
sbb
and
aas
je
repz
loope
insb
mov
stos
outsl
int
dec
ret
movzbl
dec
insl
lea
cltd
jno
mov
es
xor
jmp
mov
dec
jb
scas
mov
pop
mov
and
shl
sub
sbbb
fsubp
adc
xchg
jle
sar
in
insl
xor
dec
push
shrl
jb
xchg
inc
das
fwait
int
jb
ljmp
ljmp
inc
mov
push
push
fidivl
scas
js
mov
mov
mov
leave
jmp
push
jecxz
inc
jp
lcall
push
sbb
out
cli
fimuls
or
inc
add
xchg
cli
decl
add
pop
stos
jge
fistpl
je
insl
jmp
stc
mov
add
jl
mov
or
ret
jne
aam
pop
ficoms
mov
imul
icebp
add
xchg
cmp
mov
stos
push
adc
rcr
sbb
iret
andl
pop
sbb
aas
vmovaps
xor
inc
sub
cld
js
xor
push
mov
mov
jb
and
jl
aad
mov
cmpsl
pushf
movsb
inc
repz
fildl
or
mov
mov
and
sahf
repz
push
movsl
imul
popa
ja
sti
mov
je
push
rclb
xchg
ficoms
push
xchg
sbb
insl
fnstsw
adc
sbb
mov
sbb
mov
fs
ret
xchg
fwait
pusha
loope
mov
jne
pop
mov
and
dec
dec
cmp
push
fdivl
and
es
jbe
aam
sub
xchg
mov
enter
lret
jecxz
test
jp
pusha
adcb
lock
mov
dec
fldt
sub
out
sub
xlat
pop
cmp
or
testl
sub
push
push
push
in
mov
xchg
cs
mov
add
or
movsl
jo
push
jns
and
xchg
mov
xchg
lods
movsl
cs
jge
in
popf
dec
and
out
sbb
mov
add
lea
dec
adc
cmc
les
or
loop
push
pop
cmpsb
scas
push
shrb
pushf
repz
shl
call
stos
xchg
rcl
inc
add
inc
sbb
and
es
push
mov
mov
sbb
jmp
arpl
mov
fldl
cmpsl
add
int3
jl
adc
fsubs
jge
dec
inc
xlat
rclb
shlb
dec
push
and
cmp
cmc
movsl
fisttps
repnz
out
mov
or
pop
adc
fsubp
sbb
jecxz
add
inc
mov
inc
mov
adc
cmp
les
mov
xchg
mov
jmp
sbb
notl
cmc
in
movb
aam
shll
push
adc
or
lods
cmp
pop
xor
addr16
push
adc
enter
add
jbe
in
xorb
inc
icebp
mov
lea
push
cli
hlt
lods
dec
aam
maskmovq
insl
add
pop
xor
insl
add
dec
xchg
fmuls
mov
scas
cld
inc
fmul
xchg
adc
inc
sbb
or
out
adc
lcall
stos
ds
adc
inc
movb
sbb
sbb
in
pop
mov
jbe
ljmp
adc
pop
stos
lahf
shld
xor
push
fwait
mov
xor
and
in
fwait
or
pop
cwtl
inc
inc
loope
in
int3
iret
mov
fs
adc
std
leave
fwait
inc
inc
mov
jns
cwtl
dec
jg
lret
test
jb
in
mov
mov
cltd
xchg
leave
sbb
add
mov
mov
test
push
push
push
xchg
data16
stc
xor
mov
mov
mov
mov
push
mov
cli
cmp
mov
sub
add
fdivl
pop
loope
jle
icebp
addb
test
fwait
ja
sbb
push
icebp
js
push
push
shlb
inc
pushw
jle
dec
loope
add
inc
push
arpl
scas
cmp
fsubl
inc
das
ljmp
jmp
out
lea
hlt
push
xor
adc
jns
adcb
dec
lea
jl
xchg
ret
push
adc
mov
cwtl
not
nop
cwtl
cmp
notl
imul
xchg
movups
xchg
loopne
test
leave
mov
pop
mov
lds
adc
nop
add
fisubrs
sbb
push
paddq
xorb
out
rorl
cmpsb
jb
cli
mov
repnz
ret
mov
addr16
imul
test
fsubrl
push
mov
insb
jbe
push
inc
xor
push
jne
mov
iret
insl
outsl
in
fstpl
dec
test
es
sub
adc
std
loopne
push
aaa
xchg
ret
mov
loop
les
mov
and
jle
sbb
mov
or
adc
in
inc
mov
imul
xlat
mov
add
sub
inc
cmpsl
in
popf
jae
sarb
push
fld
out
cs
inc
gs
clc
mov
inc
mov
add
int
out
aaa
sti
jo
mov
cmp
jg
out
sbb
pop
add
mov
push
xchg
push
push
xor
ss
inc
in
ljmp
jae
into
mov
mov
cmp
ds
mov
mov
mov
mov
pop
mov
cmp
or
int3
pushf
lods
test
sub
mov
pop
loop
dec
pop
fmulp
iret
cmp
push
ret
push
xchg
int
jmp
or
pop
push
cs
out
pop
pop
and
jle
jmp
or
dec
push
cmp
dec
add
in
xor
aam
inc
cmc
popa
cmpsl
lods
push
pushf
filds
sub
out
call
ss
cmp
or
cmpl
das
es
test
cltd
fs
rcll
jae
stos
pop
outsl
mov
jo
je
jnp
cmp
mov
stos
inc
sub
lcall
mov
or
cmp
lret
and
xchg
jmp
push
adc
mov
fnstsw
cmc
stos
adc
dec
jle
leave
push
push
pop
cmp
mov
xor
and
std
jno
xor
stos
mov
fdiv
push
ret
in
pop
and
not
mov
in
mov
das
jb
mov
jmp
xchg
pushfw
sarl
inc
cmp
insl
andb
pop
cmpl
lds
test
mov
xchg
ret
loop
cltd
out
jb
mov
cmc
mov
dec
leave
testl
in
test
adcb
lods
std
mov
mov
push
test
xchg
out
pushf
jno
mov
stos
sub
and
add
rcr
jno
invd
lods
xchg
dec
insb
xchg
movsl
and
and
mov
add
outsl
lea
lods
inc
filds
inc
leave
repz
mov
scas
or
xchg
xchg
movsl
rclb
shrb
lret
aaa
or
clc
jg
pop
pop
aaa
bound
test
sub
mov
adc
sbb
xor
xchg
outsb
xor
adc
or
out
jmp
loopne
or
inc
sbb
imul
jmp
aaa
int3
out
dec
lahf
sub
loop
jl
sbbb
in
call
adc
push
ret
faddl
pop
xchg
mov
pop
dec
dec
dec
jmp
call
test
pop
testl
insl
jo
roll
rcl
push
cltd
loop
xchg
cli
jmp
pop
jae
leave
ret
outsb
inc
push
repnz
lods
insb
and
addr16
inc
sub
cs
or
jo
subl
mov
popf
mov
mov
insb
adc
out
adc
ljmp
insl
push
cmpb
inc
xchg
inc
dec
ror
enter
xor
adc
jnp
nop
push
cmp
mov
rcr
pop
aas
sbb
jno
and
push
xchg
cwtl
sbb
ret
cmp
iret
pop
pop
mov
sbb
pop
addl
cmpsb
xor
pushf
and
and
into
das
jle
js
sbb
cmpsb
imull
les
xor
xchg
sub
stos
mov
cmp
inc
dec
sub
ss
lods
cmpsl
and
cmc
and
ljmp
pop
test
imul
test
adc
xor
ds
adc
in
mov
fwait
mov
xacquire
xchg
add
mov
lock
sti
out
jmp
cmp
outsl
cli
jg
and
fwait
rdpmc
dec
jae
mov
xchg
push
jae
imul
das
pop
mov
push
test
mov
daa
jmp
and
jge
stos
daa
insl
sub
sbb
cmp
sbb
xor
and
jp
fidivl
inc
in
push
cmp
lods
cli
xchg
pop
ror
jns
leave
call
cli
cmc
pop
aad
out
mov
ljmp
lods
sti
popf
mov
push
add
xchg
pushf
es
shrl
das
push
scas
adc
push
jecxz
inc
xor
lret
popf
push
and
ljmp
xchg
or
jnp
sbb
enter
rclb
pushf
insb
mov
inc
dec
popf
pop
jns
xchg
sbb
mov
mov
sub
jge
cltd
icebp
gs
pop
into
sbb
sub
push
jge
jge
inc
lahf
inc
cltd
and
cwtl
sub
xchg
lcall
scas
sbb
push
and
fwait
sub
stos
add
add
and
xchg
mov
icebp
mov
js
push
stos
cmp
cmp
pop
push
repz
dec
xchg
xlat
ss
test
shll
mov
popf
sub
dec
ret
test
ret
dec
cmc
or
scas
or
xchg
dec
data16
jne
push
sub
push
xchg
mov
fucomp
scas
mov
ror
inc
sub
mov
sub
out
jb
adc
fsubs
sbbl
cs
dec
aaa
in
imul
adcl
inc
mov
push
push
dec
enter
cs
dec
je
pusha
push
jge
mov
pusha
sti
mov
ss
ljmp
jl
mov
xorl
xor
cmpsl
test
clc
jp
jle
loop
xchg
lods
jno
cmp
stos
notb
sub
lahf
repnz
sbbl
ss
pop
sub
adc
incl
sahf
sti
rorl
jmp
xor
cmpsb
aad
push
sbb
ljmp
mov
mov
mov
pop
sub
push
xchg
sti
rcll
arpl
repz
test
jbe
sub
mov
mov
cmp
shlb
movd
sub
fisubrl
xchg
sub
pop
shll
push
scas
xchg
inc
jmp
adc
les
cmp
test
fistps
sbb
xorb
pushf
mov
or
mov
mov
lcall
adc
sti
movsl
in
xor
stc
lock
stc
jmp
inc
xorb
movsb
cltd
sbb
cmp
push
push
mov
call
stc
in
dec
imul
adc
ret
enter
mov
mov
mov
mov
lret
push
imul
mov
shlb
push
add
clc
push
imul
mov
xor
int
or
data16
xor
jl
jle
and
mov
sbb
mov
insb
lea
popf
push
jl
pusha
push
data16
divl
out
pushf
dec
pop
call
xlat
push
sub
arpl
jne
xor
mov
dec
popf
negw
jp
inc
in
cwtl
xor
out
or
mov
mov
or
and
xchg
xchg
in
add
or
mov
cwtl
rcll
loope
inc
fwait
mov
sbb
mov
movsl
cwtl
into
lret
mov
cld
pop
mov
cmpl
movsl
xor
leave
dec
loop
xor
mov
xor
sbb
sub
xor
sbb
sbb
in
mov
fnsave
mov
das
add
push
in
insl
mov
popa
mov
and
push
dec
push
pop
push
pusha
addl
insb
and
mov
inc
cmp
and
add
aas
daa
mov
push
sbb
repnz
pop
pop
mov
rcrl
sbb
pop
pop
xor
in
lods
pusha
mov
cwtl
mov
into
mov
ficoms
ljmp
add
or
dec
mov
enter
dec
cmp
subb
push
inc
hlt
xor
mov
mov
les
jge
lods
js
xchg
lcall
insl
and
jo
rcr
sbb
mov
sysenter
pop
mov
xchg
pop
add
fsubrl
das
cld
repz
faddp
fnstsw
imul
mulb
lahf
cmp
push
cmc
sbb
cmp
jnp
push
das
push
add
sub
add
lret
shrl
xlat
rcpps
test
and
xchg
dec
cwtl
xor
xor
xchg
fistpl
pop
sti
je
mov
popf
add
or
dec
ret
push
mov
xor
cmp
jns
mov
adc
pop
inc
inc
cmp
fnstenv
lods
es
xor
call
or
jo
push
inc
or
adc
jae
test
lret
call
aad
ss
mov
cmpsl
add
mov
push
mov
cmp
loope
xchg
fwait
lods
jb
cwtl
mov
clc
push
roll
movsb
jle
cwtl
adc
movsl
xchg
and
or
adc
or
nop
in
rcll
inc
incb
enter
test
mov
xor
nop
test
push
sub
lods
push
cmpb
sub
imul
and
addr16
loopne
adc
cmpsl
fldcw
ljmp
jge
cmc
into
or
jne
adcl
lret
pusha
mov
es
lret
pop
sahf
and
jg
xchg
mov
icebp
cmp
dec
push
in
fldcw
and
xchg
mov
lods
outsl
lods
stos
mov
mov
pop
sti
mov
push
mov
repz
loopne
mulb
lret
fwait
in
mov
sub
jne
mov
loope
mov
into
push
call
ds
test
sub
inc
dec
mov
cs
xchg
mov
dec
or
stc
push
sub
cli
sub
repz
adc
mov
jb
pop
ds
mov
sub
rclb
mov
out
lods
pop
insb
out
pusha
rcrl
sub
push
ror
mov
xor
dec
jmp
sahf
mov
mov
bound
cmp
push
clc
lcall
sbb
jl
inc
std
xchg
out
cmpsb
fmuls
push
cmp
and
stc
imul
repnz
adc
pop
roll
addr16
and
lcall
mov
lret
mov
pop
dec
xchg
jne
sbbb
shlb
rcll
test
cmc
out
leave
push
fnstcw
jno
lods
flds
loopne
inc
lahf
sub
inc
hlt
jae
popf
addr16
fcoml
xchg
or
jno
enter
add
int
fbld
pop
inc
aaa
push
and
stos
je
std
pusha
into
fcoml
and
divl
jnp
add
andb
mov
adcl
cld
aam
inc
pushf
fs
pop
pop
shll
inc
and
inc
popf
js
pusha
ret
lea
mov
cmp
pop
rcll
push
mov
cmp
sbb
cs
ja
call
add
rorb
ds
movsl
pop
jnp
xlat
out
xlat
lcall
inc
cld
add
clc
sbb
ja
jbe
xor
cwtl
push
jnp
push
adc
or
clc
gs
jno
xor
cmp
pop
rcrb
lods
inc
or
rcrb
add
sub
adcb
dec
adc
or
imul
stos
test
in
flds
test
sub
push
pop
shlb
movsl
je
and
mov
bound
sub
pop
xor
movsb
mov
pop
pop
loopne
xor
xchg
xor
aam
call
dec
jmp
lea
inc
sub
pop
repz
je
jl
nop
xchg
cwtl
imul
test
add
and
jno
dec
jno
lret
add
loopne
dec
fadd
add
jl
and
lret
push
std
add
shlb
lock
rcrl
movsb
in
lds
arpl
push
stos
or
cli
sub
xchg
pushf
push
inc
test
mov
cmp
cwtl
je
data16
adc
xor
lods
or
adc
mov
pop
dec
sarl
jp
movsl
ret
mov
ljmp
mov
xchg
lret
stos
leave
adc
sbbl
outsl
test
pop
pusha
aas
xchg
mov
mov
aaa
push
adc
jp
cmp
push
das
cmp
imul
out
jne
xchg
jle
lods
cmp
in
in
adc
pop
shl
xor
jae
ror
test
ret
dec
and
mov
out
pop
push
xchg
push
cmp
jecxz
jno
fistl
aad
xor
ret
sbb
lcall
and
dec
sub
inc
jbe
add
push
jns
jnp
sub
call
add
outsb
in
test
xchg
push
clc
dec
pop
inc
fildll
pop
xchg
pop
aam
mov
jmp
stos
add
sub
in
ja
or
cmp
add
int
push
cwtl
sub
repz
clc
popa
mov
lahf
int3
cmp
cmc
dec
adc
mov
sbb
cmpsb
pop
mov
push
inc
cmpsb
push
cmp
mov
cltd
cld
push
dec
push
test
cmp
sub
repnz
je
xor
dec
inc
pop
push
fs
mov
fucomip
rol
cld
loopne
xchg
rcrl
mov
dec
mov
or
push
jg
fmuls
sub
lods
in
add
or
shll
in
xchg
dec
cli
mov
add
pop
lods
sti
loopne
pop
xor
mov
outsl
lock
test
pop
xchg
xchg
mov
or
jns
add
pop
rcll
dec
lcall
loop
mov
ljmp
dec
pop
lea
ss
outsl
sub
loopne
xlat
jge
cmpsl
outsb
cmp
xor
cli
add
mov
aad
popfw
jl
popa
fdivl
mov
pop
mov
mov
adc
pop
and
clc
dec
mov
mov
adc
mov
inc
push
jo
jmp
push
loop
sub
mov
mov
cmp
clc
lret
jl
stc
xor
cmp
xchg
xchg
adc
xor
lahf
mov
cmc
fbld
test
pop
cwtl
inc
addb
out
test
stos
aas
jnp
cld
fldt
int
lds
fnstenv
pop
xchg
mull
add
or
adc
sbb
cli
mov
es
dec
xor
aam
out
add
ja
and
sbb
mov
push
sbb
xchg
mov
sbb
dec
dec
mov
mov
sub
out
xor
cld
ret
sbb
aas
sbb
xor
loop
sbb
dec
loop
imul
jno
pop
in
lret
xchg
pop
leave
adcl
jle
cs
shlb
scas
mov
fcomip
adc
movsl
mov
stos
mov
repnz
je
adc
mov
enter
mov
add
jae
sbb
push
or
push
mov
or
inc
rcrl
rcrb
xor
inc
aaa
hlt
loop
push
sub
int
enter
mov
in
sbb
xchg
inc
or
lret
jb
imul
rclb
sbb
mov
xchg
imul
jg
xchg
adc
push
in
and
xchg
outsl
pmaddwd
loop
sahf
stos
lods
xor
mov
decl
mov
add
and
lret
jmp
shrl
xchg
ret
push
daa
testb
and
add
cmp
jmp
mov
sub
dec
dec
int3
and
enter
pushf
or
ret
nop
mov
outsl
cmp
mov
xchg
repnz
inc
push
jle
jmp
test
nop
dec
pop
not
jne
in
lcall
mov
fcoms
lock
inc
add
mov
les
fld
sbb
push
std
lret
lahf
daa
xchg
inc
mov
stos
inc
ja
ds
sbb
pop
cmp
xorl
je
aas
push
nop
iret
ret
repnz
push
movsb
pop
pop
push
int3
pop
lret
aaa
pushf
sbb
scas
jbe
jno
add
lea
es
xor
call
adc
pop
lods
jae
das
cmpsl
mov
das
push
pop
dec
mov
adc
lods
mov
xchg
sbb
jecxz
cmpb
add
cmc
nop
cmp
mov
divl
dec
movb
push
add
scas
dec
jns
test
cs
fcompl
ds
shlb
and
test
popf
lahf
or
dec
jae
cwtl
iret
repnz
scas
and
mov
popa
and
std
je
sbb
subl
lcall
sbb
ret
inc
andb
sbb
hlt
sub
mov
lods
clc
push
mov
xor
sub
movsb
sbb
movsb
add
imul
push
cmpsl
fstpt
xchg
jl
call
lods
iret
icebp
xor
test
mov
push
in
push
and
pop
imul
pop
jge
test
or
into
xchg
and
lods
push
scas
mov
or
dec
divl
inc
cmc
pop
pushf
pop
neg
xchg
iret
out
jno
fisttps
cmpb
out
cwtl
sbb
dec
adc
or
inc
push
roll
loopne
jg
inc
pop
sbb
stc
jecxz
cmc
or
jmp
call
mov
push
mov
pop
lret
jb
imul
nop
fcomi
ss
mov
clc
xchg
xor
imul
ret
sahf
sub
shlb
push
int3
mov
xchg
mov
cmp
sbb
out
jno
pop
les
dec
jle
shlb
fdivl
pop
in
popa
mov
pop
cwtl
lods
adc
shlb
pop
out
xor
addr16
push
scas
mov
xchg
aas
cmp
call
jo
icebp
push
and
mov
leave
lds
cltd
cmc
insl
add
push
and
xchg
mov
lods
cmp
cmp
inc
jle
mov
xchg
pop
mov
mov
xchg
mov
divl
movsl
pandn
jae
cltd
fld
push
mov
loopne
sahf
ss
call
or
jg
push
xor
pushf
lret
shr
push
push
push
js
outsb
int
mov
cmc
xor
jl
jbe
mov
lds
je
add
sub
movsl
icebp
pusha
loop
mov
call
push
mov
or
out
cld
pop
pusha
ret
xchg
scas
in
xor
inc
xor
pop
xor
or
dec
push
mov
push
popa
add
in
push
fnstenv
cmp
pusha
jmp
xchg
add
push
pushf
lea
mov
fdivr
and
test
clc
fildll
enter
cmp
sub
dec
pop
fistpll
sbb
scas
pop
scas
jmp
xchg
je
call
add
or
pcmpeqw
jle
pop
push
int
loope
shlb
mov
push
es
cwtl
stos
aad
or
outsb
fadd
push
xchg
adc
cld
dec
outsl
fdivl
jmp
std
xchg
sub
mov
push
pop
je
lods
mov
fwait
into
mov
jecxz
jns
lret
adc
mul
cli
adc
dec
adc
sti
cmpsb
ds
adcl
mul
ret
hlt
jp
bound
push
roll
dec
pusha
aas
stos
sbb
sub
je
mov
mov
in
ds
dec
iret
push
cmp
nop
and
loope
loopne,pt
mov
movsb
jno
call
jne
pop
add
stos
pop
in
test
les
fsubs
out
xchg
ret
adc
dec
xlat
mov
lahf
jp
lods
clc
xchg
repz
fildll
repz
push
aas
cmp
enter
inc
loope
mov
stc
test
shll
pop
xor
mov
pushf
in
mov
jne
sarl
ret
sbb
xchg
mov
lea
repnz
mov
pop
out
pop
daa
pusha
or
pop
push
fnstsw
inc
pop
stos
stc
jo
inc
test
dec
mov
neg
stc
dec
xchg
in
xchg
test
dec
sbb
aas
pop
add
jnp
ss
mov
xlat
test
leave
mov
bnd
loopne
jmp
push
pop
loopne
movsb
pushf
sbb
jg
inc
xchg
hlt
xchg
ljmp
je
shlb
cmp
xlat
adc
pop
jne
lods
mov
push
xor
xchg
dec
push
mov
out
cmp
pusha
fdivrl
dec
sahf
sbb
cmp
stc
and
cmpb
add
jb
out
xor
fidivs
lret
xor
loopne
sub
mov
jnp
or
mov
lea
repz
cmpsb
out
jecxz
dec
adc
sub
lock
aam
addr16
ds
adc
cmp
test
cmpb
int
sub
movsb
hlt
pop
xor
ja
daa
xor
or
in
lcall
mov
icebp
js
pushf
cmp
mov
leave
xor
mov
pop
adc
iret
xlat
xchg
push
into
sub
mov
iret
jbe
fwait
xchg
into
sbb
aaa
mov
mov
jmp
cmp
dec
lods
jbe
loope
push
xchg
jecxz
leave
pop
psubusw
mov
mov
dec
test
push
cwtl
dec
int3
movsb
add
pop
outsb
sub
mov
insb
test
or
out
lods
xchg
jbe
inc
jb
xor
mov
adc
loop
or
in
dec
movb
jge
xchg
sbb
xchg
sub
xchg
pop
or
test
mov
adc
cmp
mov
bndstx
pop
dec
push
hlt
adc
fildll
push
fimuls
push
cmp
mov
std
mov
or
adc
jle
jg
jp
bound
scas
xchg
imul
cltd
and
push
sbb
jo
das
ret
inc
ficoms
popf
xor
cmp
jne
ds
adc
ss
das
sahf
sbb
lock
cmp
dec
sahf
in
jnp
lret
mov
xchg
push
xorb
inc
pop
push
sbb
lock
jne
push
dec
iret
inc
call
sub
mov
xor
add
sbb
ret
dec
pop
xlat
sub
int
in
aad
bound
lahf
add
sub
lret
push
cmpsl
mov
pop
mov
jns
sub
mov
dec
mov
out
push
dec
in
mov
cmp
inc
rorb
mov
mov
dec
pop
jp
enter
sbb
test
stc
sbb
dec
or
cmp
and
dec
jns
repz
cmp
adc
sub
cmpsl
xchg
cmp
dec
pop
scas
dec
cmp
and
dec
or
lahf
xor
out
cmp
int
sbb
mov
sub
aad
jae
imul
repnz
dec
cs
jge
mov
mul
cld
xor
les
lret
rcr
mov
testb
mov
push
lods
data16
shrb
sbb
shlb
ja
pusha
das
and
outsb
bound
push
loopne
mov
mov
ds
xchg
sti
inc
or
add
sbb
mov
movsl
fdivrs
push
jle
pop
cli
fdivrs
xor
mov
inc
jne
out
aam
xor
xchg
decb
scas
xlat
jo
imul
rorb
mov
pop
sub
sbb
adcb
adc
mov
lock
jnp
jne
call
adc
test
jno
jecxz
adc
mov
lahf
mov
ret
sti
lret
jle
hlt
sarl
std
das
repnz
scas
inc
out
cmp
popl
adc
dec
data16
repnz
sahf
and
adc
repz
jecxz
or
xor
sbb
loop
and
jmp
lods
mov
jmp
jp
imul
fisubs
add
and
dec
add
sub
pop
scas
xor
sub
xor
insb
jb
in
push
outsl
daa
in
cmp
fisubrl
xor
stos
push
fs
mov
loopne
fistpl
repnz
test
dec
int
gs
scas
popa
and
shrl
pop
loope
addr16
inc
sahf
cmp
in
sub
daa
jge
jae
pop
leave
mov
add
xor
aas
enter
cltd
add
xlat
js
outsb
push
iret
pop
push
pop
xchg
inc
in
jne
xor
out
push
sbb
xchg
scas
cli
pop
push
fisubl
push
sub
aad
add
nop
pushf
cmpsl
test
std
int
sub
cwtl
in
jecxz
inc
jbe
insb
sub
gs
cmpsb
or
insl
push
push
xchg
cs
sti
and
outsb
pop
js
pop
dec
test
shrb
es
or
mov
shrl
add
mov
loope
jb
jmp
int
cmp
pop
out
fwait
out
sub
pop
pop
xchg
mov
js
jns
mov
rorb
push
cld
jecxz
test
js
adc
int
scas
ret
push
xchg
dec
shll
mov
rcrl
dec
in
sub
jnp
add
xchg
push
dec
fadd
addr16
push
stc
out
dec
es
nop
test
lret
ror
lods
and
inc
insb
lock
and
adc
push
jns
aas
sub
push
xchg
jo
add
in
jmp
mov
push
test
and
hlt
lods
std
dec
jae
xor
stos
pop
pop
sbbb
xchg
lea
inc
stc
int
sub
mov
rcrb
aas
jns
mov
sahf
inc
and
in
fimull
jle
call
ret
shll
cmp
stc
mov
pop
push
dec
push
pop
push
cs
cs
xor
and
shlb
stos
lahf
mov
jno
jbe
adc
jnp
or
mov
adc
xchg
xor
inc
ljmp
clc
cmp
or
pop
insb
jmp
testb
jo
roll
inc
cmc
push
sbb
aas
xor
in
mov
pop
mov
or
ja
dec
lock
xchg
push
adc
inc
call
cmpsb
or
inc
loope
fmul
testl
gs
insl
push
mov
lock
sti
or
jns
fnsave
lea
push
std
sbb
push
aas
std
xor
insb
inc
push
imul
xlat
scas
or
pop
push
add
cltd
test
vdivpd
cli
iret
outsl
mov
mov
xchg
pop
stos
xor
sub
inc
push
test
rcrb
mov
fwait
cmpsb
and
cmp
insb
int
les
test
and
jecxz
lods
in
sbb
cld
cli
movsb
push
sub
mov
not
or
inc
movb
imul
data16
lea
add
dec
sbb
lock
das
insb
pop
sbb
cmp
and
arpl
xor
pop
pop
lcall
test
sub
push
inc
xor
jmp
ds
add
call
inc
inc
in
inc
loopne
addl
jp
aas
mov
push
cmp
int3
fsubrl
or
nopl
or
push
gs
int3
xchg
insl
sub
in
icebp
out
push
pop
dec
das
mov
push
or
enter
mov
and
int
scas
subb
out
add
jle
sarl
xlat
repz
sti
fcmovne
mov
inc
sarb
jge
int3
ss
call
addr16
aas
inc
aaa
xchg
dec
cmp
or
cmp
inc
loopne
in
in
nop
out
rolb
xor
imul
sbb
das
inc
inc
faddl
loope
sub
xchg
pop
fcmovbe
cmp
out
cmp
cmpl
outsb
cmp
dec
insl
and
cmp
sub
and
add
cli
movsb
pop
test
stc
mov
add
fsub
out
mov
sbb
xor
insb
lret
and
mov
mov
and
leave
fisttps
lcall
rcrl
dec
xchg
cli
push
mov
fistl
adc
lock
lret
pop
and
enter
push
lods
subl
pop
icebp
jno
sarb
lcall
pop
or
jle
movsl
xor
mov
es
loop
or
add
daa
xchg
addr16
dec
mov
xchg
pop
loope
in
sub
jge
or
nop
add
cmp
in
mov
enter
jo
push
cltd
int3
xchg
sahf
mov
xor
xchg
lods
sbb
nop
repz
dec
or
or
fisttpl
out
jb
lcall
add
mov
pop
fbstp
or
lock
loop
cwtl
not
les
fsubl
mov
ljmp
ret
lahf
cmp
pop
divl
clc
mov
jo
adc
adc
adc
js
and
ja
adc
jecxz
or
ret
imul
insb
rorb
test
add
or
mulb
mov
xor
lea
bound
mov
or
lods
mov
nop
pusha
mov
lcall
pop
push
dec
jno
add
fwait
ds
fisubrs
hlt
loopne
out
rorl
inc
movsb
pop
addr16
mov
mov
aad
inc
jne
rcr
adc
loop
or
ror
pop
or
test
and
mov
mov
cmp
lods
lahf
cmp
jp
mov
inc
dec
jmp
push
ficomps
jne
push
mov
outsb
dec
or
les
pop
mov
dec
mov
push
std
in
shl
loopne
pop
mov
pop
sub
fxam
iret
jno
sbb
shrb
rol
rcrl
sbbb
xlat
sbb
leave
jle
outsl
dec
ret
mov
dec
or
pushaw
cmp
in
negb
mov
mov
inc
lret
adc
push
sub
adc
movsb
pop
jnp
jae
inc
fistpl
mov
inc
mov
or
outsb
and
pusha
fnstsw
in
and
dec
add
sub
push
aas
mov
push
add
cmp
ljmp
jge
push
leave
pop
push
js
pop
fisubl
or
outsl
lcall
push
pop
and
add
stc
in
call
adc
sub
fcompl
pop
xchg
aad
jnp
cmp
int3
ljmp
add
movsb
ret
test
adc
sarl
mov
sarb
test
repnz
sahf
mov
scas
ljmp
mov
fildll
arpl
cs
cmp
and
inc
sti
cmc
mov
jl
shrb
sbb
sbb
arpl
cmp
dec
je
sub
adc
fldcw
icebp
icebp
jge
lahf
lds
sti
push
or
cli
inc
xchg
imul
sbb
and
xchg
repz
or
lock
sub
xchg
inc
test
cmpsl
and
out
mov
inc
loop
int
repnz
insl
sub
mov
mov
sbb
sub
sbb
in
les
mov
imul
clc
out
or
cmpsb
dec
cmpsb
iret
rcll
sub
sbb
out
xchg
xchg
aam
dec
ljmp
cltd
sub
fsubs
mov
aas
and
mov
dec
fwait
pop
pop
popa
shrb
ja
ljmp
inc
jp
sub
das
mov
jbe
repz
push
push
aas
pop
push
repnz
js
mov
adc
ss
add
dec
mov
std
pop
ret
ficomps
aas
push
pop
inc
ja
xor
nop
orl
into
sbb
rol
inc
es
dec
mov
jns
mov
sar
outsb
mov
adc
inc
push
xchg
fs
push
aad
enter
in
adc
lcall
filds
pop
lods
jns
nop
xchg
insl
jle
jle
lea
pop
or
shrl
push
cmp
or
add
sbb
test
clc
or
mov
cmp
shrl
fnsave
icebp
sti
jmp
stos
mov
shll
and
lcall
test
shll
aad
ret
mov
pop
fsubp
mov
fwait
shll
xchg
and
int3
jecxz
pop
popf
mov
in
stos
aad
scas
bound
aad
fcomp
fisubs
mov
clc
in
and
xchg
lods
aaa
jae
adc
push
xor
daa
fdivl
aad
cmp
nop
mov
out
fcoms
aas
icebp
ficoms
lahf
lcall
inc
mov
or
jne
jb
pop
loope
inc
add
ret
mov
push
sub
xor
adc
sbb
clc
in
inc
or
daa
push
xchg
ret
popf
pop
add
mov
adc
cmpb
out
add
sahf
int
arpl
jl
sbb
push
sbb
sbb
sahf
sub
mov
xchg
xchg
dec
dec
rcrl
or
mov
rcl
xchg
int
xchg
les
push
xchg
or
fisubrl
sub
jp
dec
mov
scas
insb
imul
fnsave
hlt
iret
cltd
add
cmp
mov
sarl
loop
mov
sahf
bound
pop
push
push
and
jle
lods
lods
mov
clc
adc
adc
mov
and
in
lock
mov
jmp
insl
stos
jge
decb
std
dec
mov
stos
pop
mov
jp
lcall
fs
dec
test
ret
push
and
jne
in
cmpb
ffree
cmp
cmpsb
push
mov
ficompl
push
test
out
ja
outsl
fimuls
jecxz
and
xor
pop
std
or
pop
stc
iret
mov
mov
stc
scas
jl
jp
mov
movsl
icebp
cmp
adc
mov
dec
fbld
sbb
bound
mov
push
push
mov
mov
repz
or
fisubl
and
dec
inc
push
pop
js
scas
and
out
test
push
call
mov
push
popa
lea
stc
call
cmc
push
and
sub
movsl
xchg
je
cmpsl
fidivrl
cmp
mov
inc
ja
xchg
mov
jge
push
cmp
cmp
push
cmp
jg
lret
add
push
jmp
adc
jno
mov
or
js
cmpsb
inc
xchg
ss
aas
scas
inc
shl
sbb
jle
aaa
and
jp
shrb
xor
stc
in
inc
fiaddl
negl
ds
addl
cmp
push
dec
out
loop
push
insb
lret
lock
sbb
cmpsb
rcrl
pop
dec
sbb
repnz
adc
gs
loopne
mov
mov
test
jno
cmpsl
push
cs
ja
cmp
nop
inc
popa
std
push
mov
cmp
jecxz
xchg
sub
mov
xchg
int3
and
repnz
aas
xlat
cld
mov
shlb
xchg
cmc
and
push
add
out
and
cli
fiaddl
sbb
pushf
pushf
orb
bt
dec
mov
push
pop
xchg
stos
into
cmp
xor
movsl
fsub
push
outsb
lret
scas
adc
stos
sbb
inc
pusha
and
movsb
adc
xor
add
int3
cmp
jbe
pop
cmp
push
pop
popa
push
mov
pushf
ret
jmp
inc
cltd
adc
mov
or
lret
mov
or
mov
lds
addr16
js
das
jb
mov
xor
imul
lods
mov
into
mov
mov
mov
stos
mov
adc
cmp
inc
mov
stc
dec
ror
jge
adc
aas
sub
es
mov
cmpsl
popa
in
mov
mov
adcl
dec
scas
arpl
fwait
outsl
loop
dec
fstl
mov
sbb
cmp
xchg
cmp
adc
and
and
push
in
repnz
stos
shlb
push
sbb
dec
fsubrs
adc
negl
lds
xchg
mov
dec
adc
xchg
jns
inc
lock
lods
or
fstps
sub
push
sub
dec
push
inc
ljmp
out
or
jnp,pt
xor
dec
cwtl
movsl
andb
push
stc
xchg
stos
notb
inc
lea
rorl
mov
sarl
cld
scas
lret
jne
cmc
add
icebp
sbb
xor
or
shll
jo
inc
into
mov
or
cwtl
mov
push
mov
and
mov
loope
inc
decl
int
sbb
adc
cmpsl
adc
das
push
subb
fsubs
rcrl
jae
fbstp
inc
or
mov
push
int
jecxz
fldl
mov
dec
fs
and
or
shlb
mov
xchg
mov
cmpsl
xchg
adc
jmp
mov
movsl
shlb
cli
out
adc
fmul
xor
lcall
test
push
mov
faddl
cmp
dec
and
or
adc
das
clc
fistpl
xchg
xor
in
clc
mov
out
mov
mov
in
adc
cmp
scas
ljmp
mov
push
add
clc
xor
inc
mov
lahf
inc
and
out
loop
das
lcall
in
stos
jge
and
hlt
xchg
xchg
add
jg
inc
xchg
mov
je
ret
js
test
mov
inc
mov
movsl
incb
add
sahf
and
je
clc
cld
shr
ds
add
xchg
test
pop
stos
mov
dec
sbb
push
or
sarb
jg
lods
adc
subl
xchg
cmp
aas
mov
in
movsl
cs
les
jle
jp,pn
inc
out
je
xor
stos
clc
mov
nop
mov
inc
and
addl
jo,pt
adc
xor
je
cmc
in
mov
stos
stos
outsl
je
dec
lret
mov
xchg
mov
or
dec
cld
movsb
mov
repz
imul
xchg
enter
ss
add
cmp
adc
inc
sbb
push
mov
cli
jmp
test
outsl
enter
in
rclb
xchg
xchg
jecxz
mov
xor
cmp
stc
inc
xor
or
mov
cld
jae
test
test
out
call
inc
jne
adc
fs
or
fcoml
cmp
cmc
add
sahf
stc
or
test
or
loopne
aad
bnd
inc
xchg
movsl
dec
cmp
in
pop
sbb
lahf
inc
aas
jb
xchg
inc
popa
mov
pop
sbb
add
fdivl
loop
iret
dec
inc
push
jmp
ret
mov
sahf
xchg
push
enter
or
out
test
cmp
and
sbb
fcomp
imulb
push
xor
add
int3
bound
push
lea
mov
int3
aas
lea
xchg
popa
adc
fwait
daa
stos
pop
lods
add
pop
je
arpl
iret
add
lea
dec
inc
or
mov
mov
mov
outsb
test
clc
sbb
xor
popa
jno
pop
push
call
xor
outsb
daa
data16
sub
inc
inc
or
hlt
hlt
cmpsb
xchg
mov
mov
xchg
pop
lret
sub
push
add
xchg
push
xchg
addr16
ss
repz
mov
sub
or
pop
adc
inc
repz
sbb
pop
aam
pop
and
add
dec
jae
fldt
out
arpl
push
mov
out
in
cmp
mov
pop
sbb
aaa
stos
outsl
and
sub
add
loopne
lock
cmp
push
outsl
inc
bound
out
sbbl
add
mov
aam
xor
cmp
inc
pop
pop
mov
loope
fildl
add
push
scas
push
out
pop
leave
and
adc
or
push
in
cmp
adc
xor
loope
inc
cmpsl
repnz
imul
in
dec
mov
mull
jns
orl
jle
gs
fisubrs
dec
popa
pop
mov
mov
je
add
sbb
je
mov
mov
out
stc
lcall
and
enter
mov
mov
scas
ja
inc
adc
jbe
lods
sbb
dec
sbb
sbb
testl
adc
loopne
test
mov
lods
jnp
lret
or
nop
mov
ss
mov
mov
jae
stos
jnp
jp
pop
push
mov
fidivs
dec
xor
xchg
add
imul
imul
and
cmp
clc
test
fs
shl
repz
push
jbe
imul
push
xchg
into
adc
scas
xchg
aaa
sbb
outsb
ds
pop
sbb
dec
test
xlat
inc
lea
divl
in
sbb
repnz
mov
or
flds
popa
fyl2x
ds
loopne
ret
inc
movsb
loopne
in
sub
xor
sbbb
cwtl
or
dec
jge
jmp
nop
jecxz
aam
push
mov
dec
enter
outsb
add
lcall
and
popf
pop
rol
fwait
cmc
ret
add
jp
sbb
inc
in
lods
cld
addr16
and
inc
les
popa
xor
and
push
dec
inc
jl
mov
rcrb
adc
and
add
imul
cli
mov
test
test
sbb
xor
mov
xchg
sub
xor
test
xor
or
fcoms
mov
outsb
mov
mov
clc
dec
icebp
data16
es
or
sub
pop
loop
and
fidivrs
bound
sub
mov
pop
sbb
xor
mov
cmp
push
push
cmc
sub
bound
or
fimull
fs
jno
sub
add
inc
inc
insb
xor
jmp
mov
lret
int
mov
push
rorl
out
aas
or
and
out
or
ror
sbb
jmp
negb
js
and
sbb
test
test
jb
outsb
lods
jb
in
and
fcmovbe
movsl
lock
inc
fimuls
or
or
imul
outsb
cmp
dec
xchg
cmp
fsubrl
push
nop
adc
jns
in
jmp
stos
cli
fcmovu
or
and
add
dec
pusha
push
sbb
or
fwait
das
push
dec
ror
repz
and
aam
bound
inc
xchg
mov
in
fs
mov
fstps
pop
sahf
add
pop
ja
or
fnstcw
repz
dec
mov
hlt
or
call
dec
mov
or
test
fstps
push
inc
cmp
enter
out
subb
mov
sbb
inc
push
fwait
jg
pop
mov
lods
jns
ja
test
outsl
das
loope
aas
pop
popf
mov
loope
dec
mov
lds
add
pop
push
aad
clc
cmp
pop
push
mov
mov
dec
dec
pop
push
int
xor
mov
test
jmp
movsl
insl
ja
lods
out
push
das
push
gs
dec
rclb
insl
sbb
push
outsl
movsl
loopne
fldcw
sbb
cmp
or
scas
dec
fidivrs
stos
xchg
sub
xchg
mov
outsb
lods
lods
or
ret
pusha
outsl
pop
stos
adc
sbb
fisubl
iret
xchg
dec
negb
cs
fs
xchg
mov
jmp
pop
mov
movsl
dec
aaa
sarl
enter
js
ret
pop
fadd
leave
das
mov
jmp
insl
or
dec
xor
jbe
in
mov
cmp
je
xchg
mov
pop
inc
neg
lods
mov
imul
lcall
sub
lea
jbe
shrl
bound
das
pop
nop
lcall
sarl
mov
sub
hlt
je
xor
aad
inc
shll
mov
in
orb
arpl
jp
mov
pop
xchg
xorl
xor
adc
data16
mov
std
rcrb
cmp
cwtl
push
stc
shlb
popf
pop
and
mov
push
fmull
cmp
inc
mov
test
fstpt
mov
sbb
push
xchg
add
inc
mov
push
cmp
fwait
stos
mov
fcom
hlt
pop
ret
push
orb
mov
and
sub
mov
fisubrs
pop
pop
adc
sub
mov
push
hlt
scas
mov
ljmp
jno
pop
into
das
sub
xlat
mov
or
sub
dec
repz
push
jae
mov
mov
lret
ja
ds
sbb
addb
nop
jne
push
inc
fistpl
and
or
movsb
jae
pop
rclb
data16
enter
sbb
insl
fisubrl
in
lds
add
les
jnp
sbb
cmc
dec
xor
fwait
jle
aas
dec
iret
test
loope
inc
jle
hlt
and
or
jnp
ljmp
aad
aam
out
fstpl
adc
sbb
mov
pop
mov
jno
push
xor
dec
dec
and
or
fwait
ror
cltd
popf
inc
xchg
push
sub
fsubrl
or
mov
mov
dec
sbb
addr16
push
sbb
pop
pop
pop
fwait
lcall
xchg
mov
iret
int3
cmp
rorl
lds
add
out
nop
xor
cmp
decl
xlat
aad
xchg
int3
hlt
inc
or
pop
out
mov
pop
fldl
and
cmove
aad
dec
loope
sub
sub
clc
sbb
cmp
stos
cwtl
sti
lea
lcall
jmp
stos
gs
loopne
out
or
lods
adc
dec
fistpll
insb
imul
push
and
xchg
test
xlat
mov
mov
dec
adc
mov
cmp
loop
xchg
push
sti
push
sub
mov
xlat
pop
jbe
rclb
test
bound
sbb
imul
inc
addl
adc
ja
or
imull
rclb
js
sarl
cmp
inc
scas
cltd
pop
stos
adc
dec
inc
mov
mov
pop
add
subb
inc
jecxz
cltd
and
cmp
cmp
pop
ljmp
lret
out
add
mov
xchg
adc
xchg
aam
jae
inc
mov
lret
cmp
fbld
add
cmp
sub
das
daa
pop
inc
jge
fdivl
shl
push
mov
jae
mov
xlat
jmp
fs
jbe
jmp
out
ds
mov
jbe
or
push
icebp
test
cmp
jmp
mov
sbb
xchg
shrl
mov
sbb
push
add
adc
sbb
hlt
push
adc
add
rcl
lods
shrb
inc
inc
jb
pop
mov
dec
or
ljmp
pop
subb
scas
ss
daa
imul
call
std
sub
es
es
leave
popf
inc
push
and
nop
outsb
and
dec
lahf
xchg
stos
mov
jecxz
xlat
cmpb
ljmp
hlt
fldenv
mov
aaa
stc
rcll
ljmp
jecxz
pusha
mov
mov
xor
or
cmpb
sbb
outsb
and
jns
lock
xchg
mov
lahf
out
dec
cltd
daa
mov
push
es
and
incb
pop
shrl
loope
mov
xchg
lods
dec
mov
push
mov
inc
push
clc
movsl
clc
loop
sbb
pop
rclb
jmp
ljmp
repz
push
mov
lods
mov
dec
imul
inc
or
ds
push
aaa
sbb
jnp
sub
inc
jb
outsl
xchg
mov
cltd
xchg
ret
push
add
movsl
outsb
cmp
icebp
jmp
dec
lret
fucom
iret
pop
loopne
mov
xchg
das
in
xorb
sbb
or
sub
aad
int
sub
insb
mov
subl
lods
fidivs
popf
push
pop
mov
sbb
dec
ret
or
push
mov
fbstp
popf
lcall
xchg
ret
es
aad
pushl
outsb
adc
adc
es
cmp
outsb
rcll
fldt
and
jecxz
xchg
pop
mov
loop
daa
inc
idivb
push
xchg
inc
arpl
cli
push
mov
mov
push
adc
dec
insb
sub
outsl
aam
adc
or
mov
scas
fldenv
pop
mov
dec
cli
inc
xchg
xchg
fdivp
out
jae
pop
xor
jg
inc
rcr
out
or
jmp
lcall
aaa
cmp
pop
out
subl
loopne
arpl
flds
out
adc
cmpsb
jecxz
cld
lock
inc
imul
outsl
pop
or
mov
sahf
dec
jg
insb
dec
pop
push
enter
test
mov
ficoml
mov
lock
lret
cmp
es
jno
inc
lods
loope
add
mov
lock
push
nop
test
jle
cmpsb
jp
imul
sbb
out
sbb
xchg
push
pushl
inc
out
sbb
and
xchg
xchg
pop
xor
sub
or
lret
dec
pop
call
add
xor
cltd
mov
mov
mov
xor
or
push
mov
or
xchg
xchg
mov
pop
push
xchg
aad
mov
inc
mov
dec
stos
push
mov
cmp
mov
jns
xchg
dec
add
xor
test
dec
test
adc
popa
sub
scas
jmp
or
adc
cmpb
orb
dec
insl
in
dec
or
xor
mov
andl
aas
mov
xchg
ja
pop
insl
lret
je
mov
push
roll
fcmove
jle
in
sub
setp
or
adc
call
jno
and
xor
jl
into
sub
ljmp
mov
aaa
xchg
and
cmp
movsb
dec
lods
pushf
movsb
adc
pop
les
leave
fidivrs
pop
loope
lahf
inc
pop
in
mov
xchg
and
sti
mov
and
xorl
or
cli
pop
rorb
add
lret
dec
cmpsb
xchg
pop
aad
mov
popa
scas
out
hlt
icebp
xchg
test
movsb
and
mov
into
cmp
enter
cmpsb
ja
das
push
scas
ja
pushf
ljmp
iret
popf
shr
xor
insl
push
jae
dec
hlt
cmp
inc
mov
lea
in
push
and
les
pop
dec
xor
outsl
push
loop
or
and
mov
dec
rolb
ret
sbb
jno
mov
enter
mov
mov
imul
cmp
cmp
or
inc
xchg
adc
add
inc
add
fldt
sub
loopne
adc
and
sbbb
xor
mov
fisubl
xchg
fisttpll
int
dec
adc
lea
mov
mov
cmp
popf
sahf
push
rcll
in
cmp
jb
in
dec
fwait
daa
xchg
cwtl
xor
in
mov
xchg
outsl
std
in
test
inc
pushf
shlb
sub
mov
inc
mov
rolb
cmp
mov
pop
xorb
xor
sbb
sbb
sub
out
jae
push
cmp
in
add
xchg
fs
xlat
mov
jmp
mov
lsl
or
dec
jp
or
and
lret
aam
xor
xchg
jae
xchg
push
jns
mov
mov
xor
popf
push
xchg
dec
fcmovbe
enter
insl
adc
stos
mov
pushf
ljmp
jmp
mov
movsl
cmp
push
ja
aam
imul
mov
xor
pop
mov
mov
inc
inc
arpl
cli
add
shlb
ds
hlt
push
xchg
jo
mov
es
fsts
xchg
sub
fsts
sub
dec
cmp
cs
jecxz
pusha
or
test
movl
add
and
dec
repnz
pop
xchg
mov
and
out
das
test
sub
jg
es
jge
adc
jb
enter
mov
xor
push
es
lods
xor
add
push
sbb
stos
sub
in
add
std
test
sarl
adc
add
sbbl
cmp
cmp
pop
sub
rcll
cwtl
xor
iret
or
dec
pushf
jmp
sub
push
in
pop
lock
and
and
loope
fcompl
mov
xchg
fld
adc
and
mov
xchg
pop
push
mov
jle
pushf
mov
out
sbb
sbb
lods
dec
pop
jne
push
dec
dec
ret
jle
test
repnz
aam
or
mov
mov
mov
aad
push
inc
and
xchg
hlt
gs
fwait
sbb
orl
into
mov
sbb
arpl
insb
push
jge
shll
sbb
push
div
jbe
cmp
jmp
mov
xchg
pusha
and
lret
out
clc
jge
pop
jp
out
popf
daa
out
mov
or
aaa
clc
mul
xor
cmp
dec
cmc
mov
addb
adc
or
insl
or
or
mov
dec
movsl
dec
pop
jl
dec
mov
sar
push
push
jl
cli
das
mov
cltd
or
push
aam
sarb
add
mov
in
dec
dec
xor
push
pop
scas
lock
dec
cmp
loope
adc
movsb
inc
femms
add
add
out
aas
mov
pushf
mov
in
pushf
xchg
jnp
test
jns
rcll
pop
cmpsl
push
sbb
je
sub
mov
push
loope
icebp
jae
push
sarb
movsb
xchg
roll
das
jae
bound
xchg
dec
in
mov
jecxz
cld
xchg
push
push
outsb
addr16
push
mov
pop
mov
dec
nop
pop
jl
mov
dec
xchg
mov
dec
fwait
pop
sbb
sahf
pushaw
ss
enter
out
lcall
fstl
pop
seto
mov
sbb
mov
and
outsb
sbb
lds
jmp
outsb
sbb
fs
ffreep
mov
xchg
cltd
aas
push
sbb
dec
and
enter
fidivs
or
mov
and
xor
mov
shlb
cld
lods
push
fldcw
sbb
sub
xlat
insl
push
int
lea
jb
push
mov
in
roll
jno
ficoms
shrl
xchg
mov
aas
ret
rcl
and
inc
imulb
and
or
lret
mov
push
ret
dec
inc
stc
add
dec
in
sub
push
mov
shl
daa
lds
int3
sub
out
mov
hlt
adc
nop
addr16
xchg
leave
stos
rolb
lret
push
push
subb
mov
jg
dec
clc
dec
adcb
lods
fs
jae
mov
push
cld
or
adc
hlt
sarl
jo
push
inc
cmc
pop
fidivl
jmp
push
es
ret
je
subb
stos
push
shll
mov
iret
push
pop
add
or
stos
push
mov
add
dec
adc
mov
cmpsb
movsl
arpl
xchg
push
in
mov
aam
stos
ret
nop
xchg
aad
setl
push
rolb
nop
mov
cltd
lahf
mov
fs
rcrb
dec
adc
xor
cmp
dec
out
subb
mov
inc
sbb
cld
or
xchg
sub
xlat
rorl
adc
mov
xchg
add
incl
out
out
dec
pop
pop
lahf
and
pop
daa
mov
or
and
mov
outsb
lret
outsl
enter
mov
sub
xor
lret
fcompl
sub
test
lds
cli
mov
nop
jmp
push
add
cmp
jnp
jg
adc
addr16
or
repnz
push
adc
imul
inc
fistps
add
add
push
sbb
push
mov
ds
fwait
ljmp
stos
mov
adc
cmp
test
ljmp
in
jb
mov
xor
sub
imul
movsl
adc
sub
dec
movsb
cli
ss
push
stos
je
cmpsb
mov
lcall
sbb
cld
push
adc
shll
roll
mov
push
in
add
dec
push
cmpsb
popf
push
aas
and
cmp
mov
sub
test
mov
pop
movsl
push
dec
jecxz
pop
out
das
fdivrl
and
inc
mov
dec
jg
and
inc
add
lods
jge
add
xchg
ljmp
insl
and
rclb
out
inc
andl
sub
and
and
xchg
jnp
ficomps
cmp
cmp
mov
sahf
mov
dec
lret
rcrb
mov
jae
shl
pop
pusha
inc
repnz
outsb
or
add
cmp
movsb
outsl
fbstp
and
adc
mov
push
movsb
and
jbe
adc
leave
scas
mov
and
bound
inc
notrack
shrl
jle
pusha
push
dec
jbe
ret
xchg
xchg
arpl
and
mov
ret
stos
cmc
push
push
sub
or
lret
inc
dec
pop
movsb
xlat
cli
xchg
lods
call
enter
cwtl
push
ja
mov
in
imull
andb
xor
lahf
dec
aaa
lcall
push
sti
inc
rol
stos
ss
or
xor
push
and
push
roll
mov
enter
lret
aad
movsb
dec
xchg
jno
xchg
mov
ss
loopne
pop
orl
add
mov
add
xor
dec
mov
std
sbb
mov
hlt
ss
aas
idivl
xchg
loopne
mov
push
mov
lret
sub
js
es
sbb
filds
mov
push
jo
sbb
test
xorb
lretw
jle
test
gs
xchg
add
popf
sbb
les
or
ljmp
scas
ret
shll
aaa
outsl
fadds
out
sahf
in
cmp
cltd
or
inc
movsl
sbb
ret
push
ljmp
jb
nop
dec
dec
jl
cltd
rolb
fstps
repnz
sarb
cli
mov
divl
insl
int3
icebp
rorb
mov
imul
add
xchg
adc
add
add
push
loopne
outsl
std
jmp
in
mov
inc
aaa
mov
jecxz
notl
mov
mov
aam
jae
mov
shlb
dec
dec
lcall
nop
sbb
aas
jg
dec
or
dec
mov
mov
push
andl
sarb
jmp
pop
cmp
jl
bound
sbb
iret
cmc
and
pop
pop
fildll
sbb
and
mov
mov
mov
sahf
dec
mov
push
stos
dec
sub
push
outsb
pop
sbb
lret
cmpsl
push
arpl
dec
es
in
adc
cld
test
cmp
faddl
mov
in
popf
stos
fldl
jo
out
dec
arpl
add
adc
sbb
aaa
sbb
dec
andb
xor
or
popf
and
pop
or
mov
add
push
adcb
in
cmp
cld
popa
xchg
int
nop
movsb
pushf
cmp
pop
jb
jg
sarb
divb
adc
lods
dec
mov
dec
insl
addr16
cmc
jecxz
insb
fldt
fidivl
and
fwait
inc
dec
mov
fldenv
cld
pop
lahf
fwait
out
cmc
enter
jecxz
mov
loope
leave
xchg
clc
xchg
jmp
inc
or
mov
fmull
jns
xor
inc
bound
pop
das
xor
aas
insl
test
lea
xor
cli
dec
loop
dec
cmp
sub
in
callw
push
insb
rorb
fmuls
xor
cltd
mov
out
push
sahf
das
adc
jae
cmp
pop
jp
dec
lahf
lea
cmp
sbb
andl
inc
les
sbb
test
push
rcll
fcmovb
mov
pop
jl
jp
fwait
xchg
sbb
loopne
hlt
in
loopne
inc
push
fwait
sbb
imul
jp
sub
lock
aam
imul
stc
pop
addr16
fwait
movsl
lcall
sti
aam
sbb
call
out
sbb
mov
sub
pusha
xor
enter
xorb
mov
lcall
push
mov
pop
flds
shrl
loop
aas
and
mov
push
jle
pop
daa
mov
cmp
and
nop
sbb
mov
and
call
mov
jge
xchg
shr
gs
push
int3
loop
mov
pop
js
mov
aad
nop
icebp
loopne
mov
in
jnp
sbb
add
and
cld
cltd
jmp
and
addr16
adc
adc
jno
fbstp
cmp
pushf
sub
mov
out
test
nop
cmp
and
xchg
dec
mov
jl
add
mov
jp
test
xchg
leave
inc
jle
stos
std
inc
ret
push
out
in
imul
adc
loop
call
out
sub
adc
or
add
push
in
jmp
adcb
jae
xlat
loope
roll
mov
jmp
stos
dec
roll
push
faddp
std
or
gs
or
push
hlt
mov
fdivrs
inc
push
push
std
xor
or
js
jns
in
adc
add
subl
pop
addr16
je
dec
inc
xchg
loopne
ret
pop
mov
movsl
testl
rolb
add
adc
das
aaa
call
pop
mov
aad
inc
xchg
popf
hlt
mov
popa
lret
push
sarb
mov
cmp
lods
inc
cmpb
popf
sarb
insb
inc
pop
xor
mov
mov
push
les
push
push
int3
fisttps
iret
rcrb
je
movsl
xchg
cmp
arpl
test
imul
call
enter
add
sti
aad
popf
sbb
fdivl
in
ss
add
icebp
out
xor
xor
bound
lahf
push
xchg
adc
mov
shlb
dec
cmp
xor
cmp
xor
cmp
or
fst
mov
lret
dec
or
mov
pushw
ds
in
call
pushf
insl
clc
in
test
hlt
pmuludq
lea
or
jg
mov
mov
sbb
pop
pop
adc
jge
and
repnz
in
jp
addr16
movsb
les
fiadds
jnp
cmp
pop
notb
inc
iret
sbb
insb
movsb
imul
inc
add
xchg
mov
gs
stos
pop
cmp
xor
inc
pop
lret
dec
out
sub
cmpsl
dec
test
xchg
dec
mov
scas
pop
clc
sbb
fists
dec
call
pop
sub
and
iret
cmpsb
mov
adc
out
push
sbb
xor
fs
out
sbb
shrl
mov
in
arpl
sub
loop
jp
test
mov
rcrb
iret
fscale
inc
and
or
pop
inc
push
inc
mov
fisubs
ljmp
push
sbb
mov
in
and
push
test
lock
js
adc
daa
clc
dec
negl
mov
jo
fstps
xor
push
pop
jl
push
mov
or
popa
push
inc
xchg
ss
xchg
cmp
and
movsl
xor
mov
mov
xor
xorl
enter
lahf
adc
test
mov
push
in
inc
jmp
dec
clc
aam
or
dec
cmp
jno
int
or
pop
cmp
add
dec
pop
mov
lock
shlb
test
lods
faddl
lahf
lret
dec
scas
or
mov
cmp
aad
jo
shll
xchg
pop
ljmp
mov
es
in
adc
shlb
push
sbb
push
lret
icebp
push
fmul
cwtl
xchg
cmpsb
ret
jo
xchg
ret
inc
pushw
cmp
push
cmpsl
mov
xchg
addb
mov
into
pushf
pop
inc
pop
icebp
xor
icebp
xchg
out
dec
xor
cmc
mov
mov
imul
mov
sbb
mov
sub
push
cs
push
dec
loope
sbb
dec
ljmp
push
fmul
and
imul
shl
xchg
repnz
test
add
xchg
cmp
add
int
mov
pop
and
push
mov
adc
mov
outsb
jno
sub
fildl
push
es
inc
icebp
mov
sbb
test
or
leave
out
push
mov
pop
inc
leave
in
ficomps
idiv
js
jns
push
inc
and
pop
es
clc
mov
jecxz
jno
or
outsl
es
aas
add
ds
div
push
sub
scas
add
pop
adc
jno
in
frstor
clc
or
fdivrs
mov
inc
xchg
xor
mov
mov
fsubl
jb
inc
outsb
in
jno
lahf
shrl
in
inc
dec
sbb
pop
xchg
dec
fldcw
je
out
dec
inc
inc
insl
pop
jmp
dec
dec
jbe
aam
mov
sub
cmpsl
sub
imul
ljmp
dec
add
push
xchg
push
or
aam
mov
cmp
inc
shll
testl
lret
loope
fs
jp
and
roll
cmc
push
pop
icebp
adc
mov
repz
daa
mov
or
mov
fnstenv
stos
aas
arpl
jle
pop
add
mov
jae
fcomps
lahf
ret
fcmovnb
int
or
sub
cmp
sub
adcb
and
imul
jno
cmp
jbe
fwait
xor
push
or
mov
cmp
mov
movsl
dec
xchg
xchg
ja
jmp
xchg
push
sbb
push
js
enter
mov
sub
in
pop
test
pushf
add
inc
lds
aam
ret
inc
out
adc
hlt
and
test
lret
dec
icebp
dec
sbb
push
scas
mov
jmp
jle
imul
mov
ret
mov
adc
xchg
inc
adc
outsl
inc
aad
xchg
xor
xchg
pop
outsb
dec
rolb
dec
xor
inc
add
inc
jae
sahf
push
jl
pop
loope
mov
sub
movsb
ret
pop
xlat
iret
jns
bound
push
and
mov
repnz
loopne
adc
gs
jbe
xor
sbb
jo
shl
jmp
pop
mov
and
jl
jmp
xor
or
dec
jbe
lret
adc
fdivl
dec
inc
and
popf
int3
push
sub
adc
pushf
sar
pop
jne
divl
xchg
arpl
push
leave
or
jge
push
xor
ja
cmp
pop
cmp
das
sbb
mov
int
or
or
cli
iret
sahf
imul
idivl
xor
and
mov
insl
aas
fstl
lods
aas
in
jbe
sub
jb
xchg
enter
sbb
std
jns
movsb
jl
sti
les
xor
outsl
fnsave
insb
frstor
test
lcall
jae
and
sub
je
lahf
add
loope
mov
lods
insb
xchg
dec
stos
enter
jmp
in
mov
addb
sbb
loopne
jbe
mov
ja
sub
jmp
popf
cli
xor
mov
mov
fistl
lahf
les
jno
or
push
pop
cltd
or
pop
insl
leave
xor
flds
inc
sbb
lods
dec
mov
pusha
sub
fwait
popa
xchg
aam
mov
or
jno
sarl
inc
adc
pusha
jge
push
test
xor
inc
inc
out
aaa
adc
or
push
push
arpl
push
add
popa
cmp
xorl
mov
pop
fwait
xor
adc
sbb
ds
jne
fcoml
lods
cltd
add
push
repz
jmp
cmp
je
es
lahf
ds
jle
aad
dec
push
out
out
pop
adc
jns
dec
xor
out
pusha
inc
imul
shll
pop
stos
cmpsl
xchg
loope,pt
clc
popl
inc
jmp
jae
xchg
inc
pusha
mov
adc
xchg
sbb
lret
loope
mov
test
pop
push
mov
mov
add
pusha
loope
mov
dec
jb
aam
adc
clc
jns
iret
lcall
inc
sbb
into
pop
push
mov
mov
mov
xor
dec
lcall
das
stc
add
ds
adc
sbb
lret
jl
mov
xchg
jl
ds
js
mov
mov
shrl
adc
test
mov
jno
pop
cmp
push
shlb
gs
pusha
mov
enter
scas
jnp
mov
jo
daa
shlb
popa
mov
push
mov
movsl
pop
inc
or
ss
cmp
cmp
add
lods
lret
jbe
cmp
pop
outsb
es
sbb
imul
imul
pop
imul
aaa
imul
fsubrl
lods
inc
sub
mov
movsl
fdivrs
mov
lret
js
popa
aad
sti
mov
mov
sub
push
add
dec
subb
cmp
mov
into
icebp
mov
sub
sbb
jbe
adc
xchg
or
pop
cmp
sbb
cmpsl
pop
cmp
hlt
je
inc
jmp
mov
dec
adc
mov
addl
movsl
xchg
cmp
out
pop
ja
add
cmpsb
test
das
popa
imul
dec
fwait
push
test
es
iret
pop
lret
sbb
sbb
add
lret
pop
ffree
repnz
xchg
xchg
jbe
lret
inc
cmc
out
test
je
mov
int3
sub
pop
cmp
das
push
cmpsl
xchg
xchg
mov
lret
add
mov
or
cli
add
out
jne
jge
sub
and
pop
lahf
fwait
jbe
scas
mov
mov
pop
cmp
mov
sbb
pop
jl
mov
xchg
jne
in
stc
mov
push
push
sbb
add
add
cmp
or
or
icebp
or
cli
pop
out
pop
and
jge
movsb
jp
notb
sarb
cmp
cmp
in
lds
icebp
rdmsr
mov
dec
lret
cmp
xor
jo
popf
shrl
dec
or
notb
test
dec
mul
popf
adc
mov
jge
fmul
lds
lret
cwtl
fisubrs
xchg
cmp
jne
cmp
rorl
mov
push
pop
dec
into
add
ret
sti
push
mov
mov
sbb
push
sub
insl
fnsave
stos
imul
lret
mov
mov
jns
push
movsl
movsb
lock
jle
fnsave
rorb
out
ret
aaa
mov
fstps
into
insl
shl
xchg
outsl
shll
fcoms
es
xchg
js
xchg
sti
inc
cld
mov
mov
mov
mov
pop
or
scas
inc
cmc
and
mov
xor
out
sub
jae
sbb
cmpsl
cltd
ja
scas
test
mov
inc
jmp
stos
and
pop
jmp
insb
stos
mov
fucomp
test
pop
mov
cli
inc
fstpt
sbb
fmulp
and
mov
jnp
or
sarb
inc
mov
mov
je
outsl
push
xlat
adc
fnstenv
and
xor
or
inc
jns
and
call
sar
cltd
push
mov
movsl
hlt
adc
pop
fimuls
dec
lret
aaa
jne
mov
push
mov
mov
push
push
stos
sbb
sbb
out
notb
lea
lret
fcoml
out
mov
arpl
in
in
ljmp
add
cmpsl
lea
mov
jne
jne
mov
push
push
outsl
sbb
sti
loopne
cmp
adc
les
mov
xchg
adc
inc
ja
mov
test
sbb
sti
fisubrs
int
inc
and
stc
add
repnz
addl
pop
sbb
hlt
shrl
fidivl
add
add
mov
ret
jmp
js
xor
shl
adc
inc
sbb
jae
fmull
aad
adc
fildll
test
aaa
cmp
lea
std
pop
shrl
mov
cmp
cmp
or
push
xor
ror
aam
inc
das
xchg
mov
push
lea
mov
les
outsl
lea
add
inc
and
fcomps
fmulp
clc
jae
push
jo
pusha
cld
lods
dec
stos
ja
xor
fwait
jnp
daa
bound
dec
rcr
repnz
mov
sahf
pop
xchg
push
xor
in
add
cwtl
push
int3
test
addb
test
scas
ljmp
mov
std
inc
loope
mov
loopne
sub
adc
les
pop
add
ja
aam
std
mov
or
jmp
push
dec
sarl
movsb
mov
and
bound
repnz
mov
push
dec
rcl
sahf
sbb
lcall
cmp
lods
lea
or
xchg
fisttpl
popf
inc
mov
xlat
sbb
test
inc
xchg
sub
add
add
repnz
outsl
icebp
mov
insb
js
lcall
sbb
mov
std
int3
push
mov
je
mov
in
add
je
mov
mov
aas
jl
lock
xor
adc
fmulp
add
jg
add
movl
fisttps
and
sti
jns
adc
xor
jge
mul
sbb
push
pusha
iret
in
aam
mov
icebp
rcr
xchg
mov
adc
imul
pushf
fsubl
mov
rcll
adc
add
int3
mov
fcoml
xor
mov
les
xchg
imul
lret
in
jbe
push
push
pop
and
popa
fs
cmpsb
xor
add
idivb
push
out
ret
xchg
ret
arpl
test
insb
sbb
adcb
adc
inc
mov
popf
inc
jae
fwait
and
and
inc
push
out
cmpl
ret
stos
or
and
pop
stc
sbb
sti
loopne
jb
das
add
lods
push
push
pop
mov
pusha
lds
sbbb
scas
cli
and
cs
aas
out
or
aam
imul
loope
mov
xchg
out
fs
pop
jecxz
or
and
hlt
lea
push
adc
jp
mov
ljmp
sub
xlat
jp
out
mov
cmp
ja
test
mov
outsb
xchg
fmul
dec
lcall
in
pop
push
addr16
movsb
das
mov
les
test
bound
pop
popa
ficompl
out
pop
cwtl
add
mov
lods
push
mov
icebp
fstl
inc
or
mov
test
dec
ficoml
sbb
push
jno
lods
sahf
int3
xor
imul
ljmp
in
lods
pop
mov
jns
cmp
pop
jecxz
cld
adc
scas
sub
pop
pop
pop
mov
jno
and
ljmp
xor
sbb
xor
xchg
push
or
movsb
add
es
jo
and
sub
addb
dec
mov
push
negb
and
pop
jb
aad
sahf
loop
push
movsb
sbb
mov
cld
xchg
test
leave
sub
mov
adc
xorl
imul
aam
xchg
hlt
mov
lock
sbb
or
aam
cmc
xchg
push
aad
loop
psubd
test
mov
mov
outsb
rcr
and
pop
aad
lret
jp
lea
xchg
arpl
dec
ficoml
test
ret
jecxz
or
movsl
orb
mov
loopne
sbb
int
add
mov
cmovno
mov
sub
jne
jge
mov
jns
xlat
xchg
xlat
dec
ds
and
inc
shrl
jl
mov
js
in
sbb
out
es
enter
mov
push
insl
mov
gs
ljmp
iret
or
inc
sub
jb
repz
pop
aam
push
mov
cli
push
inc
sbb
je
or
scas
xor
push
mov
lret
sbb
iret
pushf
ja
push
scas
insl
fwait
or
inc
xor
dec
cmp
jno
pop
iret
sbb
pop
cli
mov
inc
out
icebp
movsb
and
dec
sbb
and
in
cmc
ret
pop
orl
push
cmp
push
inc
cltd
sbb
mov
roll
faddl
xchg
in
ret
adc
mov
pop
nop
push
jnp
dec
aam
lahf
mov
iret
dec
or
enter
repz
pusha
std
add
xchg
enter
mov
jns
cmpl
aaa
in
incl
clc
push
push
pop
cmp
punpcklbw
xor
pusha
xchg
fcos
movsb
enter
fcmovu
sbbl
outsl
xchg
js
nop
mov
sub
data16
int3
xor
and
inc
dec
in
arpl
xor
in
lea
lahf
jp
sub
hlt
pop
jle
lock
ja,pt
cmp
imul
lahf
xor
inc
push
add
in
rcr
dec
jmp
psrad
gs
mov
inc
xor
mov
pop
loop
out
add
iret
push
rclb
arpl
popf
and
aas
lret
mov
lods
adc
insl
cmpb
mov
mov
dec
push
mov
gs
addr16
out
jmp
xchg
fxch
xlat
and
ja
dec
pop
xchg
adc
cld
rorb
adc
dec
sub
pop
mov
cs
ss
or
stc
js
dec
mov
pop
in
popa
mov
cmp
pop
loop
popf
loope
jne
or
sbb
xchg
jo
mov
jae
ljmp
shll
andl
sub
les
adcl
adc
lea
add
adc
push
add
jl
adc
lods
inc
emms
ret
lods
adc
loope
leave
lods
mov
push
jl
jae
enter
sti
scas
shll
cmpsb
incb
data16
cmp
in
inc
push
fldt
cs
sbb
sub
jo
popa
into
add
cwtl
cmpsb
repz
cmp
orb
mov
xor
rorl
in
push
xchg
out
es
dec
ljmp
popa
cmp
xchg
fcomp
sti
jle
lock
jbe
lds
in
pop
xor
mov
daa
pop
cmp
lods
and
out
fnsave
push
mov
xor
mov
test
les
into
cmp
in
inc
pop
ds
push
cli
jo
std
movsb
inc
mov
test
pushl
sbb
sub
aas
filds
test
imul
or
les
test
scas
inc
inc
cmp
push
gs
das
shlb
in
std
jae
arpl
pop
adc
cmc
adc
lahf
mov
adc
jg
push
adc
push
rol
popf
pop
or
xor
adc
test
sahf
xlat
mov
mov
scas
aad
jecxz
and
cmp
andb
ret
enter
fwait
out
in
loope
in
inc
fisubrl
arpl
inc
push
cmp
and
and
cmp
xor
add
pop
lret
pop
xchg
int3
sub
rcl
lock
or
dec
and
movsb
pop
adc
mov
sarb
xor
mov
or
add
mov
scas
and
aam
andl
enter
jbe
fld
cmpsl
mov
test
data16
out
lods
add
push
and
imul
mov
out
test
jbe
lods
or
jecxz
rcrl
loop
outsb
sub
push
sub
pusha
mov
in
xor
ja
mov
ficoms
fsubr
clc
ds
test
push
cmp
idivl
test
adc
mov
lods
outsb
xchg
les
stos
push
ljmp
jg
mov
hlt
xchg
dec
push
fdivrl
out
out
jns
sti
or
jl
or
and
fs
insb
xchg
adc
test
aas
popa
mov
adc
shlb
inc
mov
xchg
xchg
inc
clc
pop
stos
testl
and
int3
clc
push
lahf
addl
je
cmp
mov
adc
dec
stc
mov
xchg
flds
pop
out
fsubrs
leave
sti
call
test
insl
sbb
subb
mov
scas
push
movsl
pusha
pop
shrb
std
push
decb
lods
nop
subl
xor
sahf
fwait
mov
aam
xchg
fidivl
mov
nop
cmc
and
mov
loope
fildll
dec
ljmp
jbe
outsb
mov
or
sbb
fistl
sbb
lahf
imul
push
mov
push
out
mov
in
pop
sarb
dec
mov
movsl
cmp
lahf
and
dec
fbstp
ljmp
insl
lods
int3
mov
outsb
dec
imulb
jbe
jmp
push
in
add
jecxz
adc
xor
mov
test
xchg
movb
hlt
sbb
imul
mov
cs
test
mov
les
pop
xor
shl
mov
vpaddq
xchg
test
mov
icebp
or
push
push
ja
cmp
push
pop
and
call
sbb
xor
adc
dec
ja
addr16
int
sbb
sahf
cmp
xchg
aam
cs
pop
xchg
cmpsb
sbb
mov
idivl
inc
in
cmc
and
jmp
add
mov
cwtl
cmp
sbb
inc
xor
sub
mov
rorl
loop
fists
js
pop
xchg
test
shrb
sbb
sbb
mov
into
orl
mov
mov
outsb
in
shl
loop
outsl
mov
in
or
ds
or
repnz
iret
pop
sbb
fbstp
mov
js
dec
mov
addr16
or
mov
cmp
pusha
jle
push
xor
mov
imul
push
jnp
in
mov
fmuls
mov
inc
cmp
and
sub
and
sub
sar
shrb
xchg
xor
xchg
xchg
outsl
xchg
cmovae
push
jnp
or
sbb
movsl
mov
inc
out
test
sbbl
jns
inc
and
mov
insl
xchg
lock
dec
and
adcl
push
fidivrs
nop
push
adc
nop
mov
mov
or
sbb
and
pop
cwtl
movsb
notb
sbb
jno
push
xor
add
inc
dec
das
out
std
stos
cs
decb
iret
pop
shll
adc
jnp
sbb
popa
cmp
repz
mov
test
mov
xchg
mov
insl
push
stc
pop
xchg
repz
jp
arpl
sti
pop
leave
pop
xchg
shlb
ret
mov
outsb
xlat
stos
adc
cmp
mov
or
or
add
gs
in
sub
inc
lods
mov
inc
ret
or
hlt
and
out
lret
cmp
popa
daa
xchg
or
rorl
mov
fdivs
xchg
out
cmp
mov
int
xor
call
sub
testb
test
inc
pop
jae
mov
data16
jg,pt
push
out
mov
outsb
data16
imul
add
and
cmp
sbb
ljmp
divb
js
notl
aad
pop
mov
das
stos
fdivl
cmp
pop
cmp
shl
in
and
das
adc
enter
hlt
les
and
test
shrb
adc
xchg
aam
out
test
cs
mov
inc
mov
shll
ljmp
jecxz
andb
mov
outsl
or
xorl
mov
mov
dec
mov
xchg
scas
call
mov
add
jne
ja
push
pusha
and
or
push
and
push
nop
pop
add
mov
mov
xlat
nop
cwtl
xor
cmpsb
fs
mov
or
inc
lock
fcomps
and
cmp
xchg
xchg
or
incb
xchg
mov
jge
out
imul
icebp
insl
sbb
repz
out
inc
fistpll
sbb
ret
or
xchg
dec
xchg
hlt
add
mov
xor
xchg
inc
mov
sub
out
mov
fucomi
iret
xor
nop
mov
lods
pop
addr16
pushf
or
and
cmp
fcomp
sti
push
mov
push
addl
or
movsl
stc
mov
xor
or
lret
aad
jbe
stos
repz
popa
orl
cmpsl
xchg
ljmp
push
nopw
movsb
cld
xchg
hlt
add
inc
ljmp
test
popa
repnz
cmpsl
cmp
push
fldcw
aas
dec
cld
sub
adc
pop
xor
lret
shll
ret
jecxz
cs
sti
sub
xchg
mov
sbb
insb
pop
rcrl
jmp
inc
ja
add
aam
movsb
xchg
sbb
in
repnz
adc
and
push
xor
imul
popf
push
insl
fisubl
xlat
mov
mov
jno
push
repz
jecxz
cld
call
lock
push
cs
xchg
aad
ss
jmp
ret
jno
mov
into
mov
inc
sbb
bound
pop
movsl
xchg
sbb
lods
stos
cld
xlat
dec
push
pop
sub
dec
shll
insl
push
mov
sub
push
sub
push
sub
dec
outsl
jmp
nop
imul
inc
dec
ret
aas
dec
xorl
push
sub
xor
push
push
xchg
fdiv
sbb
loop
fisttpll
test
push
or
dec
int3
mov
push
into
inc
push
es
push
mov
lahf
test
ret
or
clc
rcr
scas
lock
sbb
icebp
aad
in
add
pop
mov
cmpsb
shll
xchg
mov
insl
sub
push
push
outsl
add
or
inc
shr
insb
add
aam
fsubs
adc
sub
and
ret
icebp
dec
jp
cmp
mov
shl
repnz
cltd
fidivrs
ja
pop
mov
push
imul
xor
js
mov
push
out
lret
pop
out
outsl
loope
dec
cli
pop
shlb
pop
ljmp
inc
shl
nop
xorb
mov
mov
add
pop
jmp
cwtl
aaa
xlat
lods
mov
lock
jbe
xor
pop
pop
mov
mov
or
xchg
sbb
bound
rcrb
adc
xchg
jle
push
notl
inc
pusha
mov
repnz
push
sahf
out
fs
mov
mov
mov
test
push
iret
cmpsl
sub
mov
out
arpl
jb
inc
je
mov
popf
jb
dec
aam
aas
cmp
adc
xlat
lret
jecxz
add
inc
popf
ret
pop
insl
mov
pusha
jnp
pushf
mov
lcall
and
jb
dec
pushf
in
xchg
inc
jmp
test
pop
in
mov
mov
mov
jmp
lds
or
aas
inc
fwait
ret
pop
sub
cmp
fisubl
mov
sti
cmp
mov
pop
jnp
xchg
add
adc
xor
into
mov
dec
dec
sbb
xor
jno
sub
xor
dec
sub
rcrl
sub
out
fs
mov
jmp
mov
mov
fisubrl
in
arpl
dec
and
or
xchg
mov
inc
sbb
push
outsb
jne
fwait
imul
push
fldcw
lret
int
fcos
adc
movsb
or
es
jae
cmp
xchg
inc
and
cmpsl
add
jg
jecxz
inc
jns
ficompl
jl
sbb
mov
lods
jb
push
push
jp
dec
dec
insb
mov
jae
fsubs
mov
mov
mov
push
mov
adc
xchg
dec
sub
jl
imul
hlt
ret
cs
imul
fists
test
pop
add
push
ljmp
sub
xchg
fimull
xchg
lea
enter
lods
or
iret
out
push
mov
fistpll
lcall
sbb
jnp,pt
pop
inc
push
pop
push
add
out
xor
push
lcall
inc
aas
stos
sbb
push
cs
roll
add
test
or
or
and
mov
dec
dec
jbe
clc
jecxz
dec
mov
sbbl
aaa
jbe
mov
xor
or
mov
aaa
nop
fwait
rolb
and
lcall
xchg
mov
inc
cs
mov
mov
jecxz
jp
push
mov
pop
xor
jp
pop
js
dec
mov
jns
insl
xor
cs
leave
add
jno
sub
mov
mov
in
sub
mov
fsubrp
ja
jnp
clc
cmp
or
repnz
scas
cmpsb
xchg
notb
mov
dec
icebp
mov
test
sbb
mov
in
inc
push
into
pusha
loopne
aad
cld
shll
or
outsb
es
popf
pop
std
adc
and
xchg
xchg
aad
test
inc
and
or
mov
xchg
mov
pop
je
pushf
lcall
inc
test
and
inc
inc
and
hlt
outsb
push
lret
jno
cmpl
push
mov
int3
jns
push
xor
inc
dec
and
and
add
pop
rcrb
add
or
mov
and
mov
add
cwtl
cs
jo
fadds
stos
or
lret
xor
dec
mov
inc
fcompl
mov
mov
mov
faddp
adc
mov
repnz
out
mov
push
mov
pushf
mov
mov
mov
inc
in
mov
sarl
or
push
inc
cmc
fildll
enter
dec
sbb
xor
bound
cltd
andb
mov
cmpsb
jo
pushf
addr16
mov
in
jp
rclb
mov
imul
inc
je
jle
inc
call
pop
lods
xchg
dec
mov
lcall
mov
shrb
stc
or
mov
push
mov
lods
adc
push
xor
jg
jb
xchg
sti
fildl
cmc
mov
jae
mov
je
imul
cmpb
out
scas
pop
test
negl
sbb
pop
mov
mov
in
aam
sub
movsb
xchg
icebp
je
and
dec
sub
jge
push
or
pop
arpl
das
lock
and
ja
aam
cwtl
aam
push
ret
je
test
dec
pusha
in
xor
xchg
mov
shlb
sub
inc
adc
outsb
pop
in
cli
pop
cmc
movsl
rcrb
lcall
adc
iret
and
add
xchg
mov
add
test
or
in
jmp
outsl
xchg
pop
mov
sti
dec
xchg
sub
fs
dec
cmpsb
cmpl
mov
test
mov
xchg
lock
cmc
inc
sti
fidivl
add
sbb
pop
outsb
idivb
cmpsb
jmp
jl
out
and
sub
inc
xchg
sbb
in
lcall
mov
xchg
and
repz
fisubrl
and
loope
jl
icebp
clc
xor
sbb
mov
repz
hlt
in
pop
dec
and
cmpsb
mov
addr16
jg
mov
push
inc
loope
mov
lods
jg
xchg
adc
jns
add
divl
int3
and
imul
loop
hlt
pop
insb
adc
mov
ficoms
pop
aad
mov
push
mov
mov
push
stc
push
lret
sbbl
sub
dec
jle
std
and
push
mov
lret
jbe
outsl
dec
fs
daa
mov
push
popf
imul
mov
insb
out
mov
mov
and
fisubl
xor
dec
push
mov
jns
jne
lahf
les
pop
or
push
addl
stos
adc
popf
rcll
sbb
push
inc
fildl
aad
mov
ja
aas
outsl
add
fsts
jnp
mov
mov
add
test
jmp
stos
loopne
imul
mov
scas
clc
test
xchg
sub
sbb
jge
movsl
or
negb
xor
xchg
add
int3
jge
mov
add
or
fwait
sub
add
iret
sub
xor
xchg
dec
mov
jnp
in
jl
adc
dec
mov
jge
fisubrs
add
cmpsb
imul
jge
cli
push
xor
xchg
movaps
push
aad
or
sti
mov
icebp
addb
xor
test
dec
cmp
lock
pushaw
xchg
add
xchg
test
and
jle
push
pop
mov
mov
test
and
ja
ja
and
movsl
xchg
mov
fiadds
movsl
repz
cmp
mov
cmp
sbb
adc
adc
sarb
aaa
shl
sub
pop
ljmp
xchg
bswap
push
jns
sti
ja
pop
adc
clc
adc
lea
out
cmpsb
pop
cmpsl
cmc
lds
mov
test
mov
pushf
inc
sub
daa
punpckhbw
les
ds
into
imul
cwtl
pop
push
in
fadds
stos
cmp
mov
or
outsb
bound
loop
or
pop
lods
mov
push
in
stos
dec
push
les
sbb
add
int
jne
inc
cli
cltd
jbe
mov
sbb
out
jns
loop
fnstenv
xlat
idivl
push
mov
in
cmp
xor
mov
inc
cmp
fwait
pop
push
mov
aad
movsb
leave
loopne
mov
or
sti
or
jl
cmp
mov
out
std
dec
pop
cmp
cli
push
es
add
sbb
inc
xchg
popf
lods
mov
push
dec
jne
in
je
and
arpl
mov
mov
cwtl
rolb
loop
sarb
jnp
mov
mov
mov
cmp
dec
push
jmp
cmp
int
jnp
cli
clc
adc
and
daa
stc
push
repnz
out
push
mov
xor
in
jmp
mov
rorl
dec
cld
ret
and
gs
fnsave
add
int3
movsb
jge
aam
xor
daa
int
adc
nop
mov
mov
lods
test
pop
fsubs
sub
aad
push
dec
lea
mov
enter
movsl
flds
jne
mov
paddusw
das
sub
mov
subb
arpl
cmpsb
push
xchg
xchg
xchg
sub
jno
adc
incl
clc
mov
mov
sub
hlt
or
or
mov
adc
outsb
ljmp
pop
mov
arpl
rcrb
aas
call
mov
add
jno
and
mov
popw
xor
repnz
adc
mov
lret
leave
push
fdivs
imul
jne
xchg
in
shll
jg
outsl
in
adc
jecxz
inc
scas
loop
bnd
or
or
push
in
mov
cmc
inc
dec
bound
dec
aas
cmpb
test
scas
stc
xor
jbe
clc
cmp
cmc
bound
mov
xlat
arpl
add
addr16
repnz
jo
and
and
and
fdivrl
repz
ja
ds
addr16
fmull
sbb
mov
fldenv
pop
xor
mov
add
js
mov
jbe
sub
imul
and
add
int3
pop
lods
cmp
xor
fld
and
inc
xchg
cmp
push
scas
add
push
das
push
shrb
sbb
mov
loopne
in
xchg
pop
add
sbb
rclb
sahf
out
scas
inc
repnz
pop
in
fnstenv
mov
ds
mov
pop
cmp
fimull
cld
pop
rorl
in
mov
daa
cmp
xor
sahf
mov
sub
dec
inc
and
or
jb
mov
jae
stc
push
push
pop
adc
insl
jle
push
lret
push
mov
scas
cmpsl
push
ds
mov
cmp
sbb
push
mov
iret
mov
cmp
repnz
cs
test
movsl
jle
std
insb
js
inc
xor
testb
and
cli
xor
mov
insl
mov
xor
ljmp
push
mov
mov
jnp
inc
or
out
xchg
ret
and
cltd
and
mov
movsb
inc
sti
nop
mov
lahf
stc
data16
dec
jb
nop
rolb
shl
movsb
adc
cmpsl
cmpsl
push
movb
shlb
gs
pop
pop
sahf
ja
les
lcall
adc
ljmp
adc
or
jae
jg
in
scas
adc
xchg
xchg
and
sbb
dec
xchg
pop
mov
sbb
outsb
fsubl
adc
sub
cs
push
stc
xor
scas
stos
inc
dec
leave
and
je
adc
mov
pop
repnz
inc
sub
les
pop
lcall
and
inc
sbb
mov
loopne
bound
popa
sub
pop
add
insl
cmp
lds
test
hlt
fidivl
jle
jp
movsl
popf
jp
mov
mov
push
mov
inc
cltd
cmp
push
xchg
mov
pop
roll
add
adc
mov
pop
cmc
push
and
aaa
jns
fsubl
sub
daa
sahf
mov
xor
or
jmp
mov
mov
dec
push
std
ljmp
rolb
cmp
lds
jmp
mov
sbb
test
call
lret
popf
iret
or
es
mov
stos
out
scas
mov
test
cmpsb
inc
mov
mov
mov
ret
adc
fstpt
mov
ret
push
jge
pop
jecxz
and
das
sbb
and
imul
jp
mov
xchg
and
imul
add
add
mov
sub
cmp
in
sahf
cld
cmp
aam
push
inc
and
lea
ret
leave
dec
outsb
pushf
and
mov
daa
mov
popa
or
adc
int
pop
sti
jno
xor
xchg
jae
in
adc
ja
push
sbb
int3
mov
imul
pop
push
xchg
clc
push
ret
aas
add
dec
arpl
mull
mov
mov
adcb
jo
testl
sti
rcrl
popa
cmp
mov
xor
stos
test
imul
push
adc
mov
sbb
xor
mov
lahf
cmc
jp
push
sub
cmp
mov
jno
jmp
rcrb
jle
je
mov
nop
ds
es
out
and
ror
imul
xor
mov
or
dec
adc
cmp
lcall
loopne
addr16
inc
daa
scas
imul
fwait
test
in
fimuls
int
cwtl
pop
push
call
pushf
adc
dec
cmpsl
stos
sub
add
mov
push
std
mov
inc
or
icebp
xchg
adc
loopne
ds
inc
pop
and
mov
cmpsl
pop
ret
insl
ljmp
jecxz
cmp
push
stos
or
pop
or
jbe
out
push
inc
or
push
dec
addr16
faddl
mov
dec
ss
popa
mov
out
stos
xor
lret
jae
rorl
jne
mov
jne
repz
lret
jge
and
ret
mov
push
jge
jl
jecxz
inc
or
xlat
mov
sbb
and
xchg
push
push
das
into
or
mov
rol
adc
test
push
and
ja
xchg
mov
push
fstpl
mov
and
cmp
cmp
call
sarl
mov
shll
stos
sti
int
aaa
xchg
jmp
outsb
out
ja
mov
push
out
in
mov
imul
fimuls
jge
mov
stos
inc
cmp
inc
fbstp
and
insl
stc
daa
iret
jmp
dec
fmulp
dec
xor
mov
push
inc
dec
sti
cmp
cld
cmc
pop
aam
je
adcl
pop
fildll
sub
sbb
nop
insb
in
mov
jbe
xor
ljmp
movsl
mov
mov
mov
or
sbb
lea
jb
cmpsb
mov
push
lock
sub
int3
jne
mov
jbe
stc
call
fdivl
aaa
cmc
test
ds
call
out
sbb
in
jae
movl
les
ds
and
dec
xor
mov
push
fists
icebp
mov
nop
xlat
int3
test
adc
mull
fsub
mov
sbb
int
test
popf
lods
xor
subb
js
mov
imul
loopne
push
fidivrl
out
std
xor
ss
dec
adc
and
sub
aam
fstpl
add
inc
cmp
pushf
sbb
loope
sbb
inc
ret
in
mov
dec
nop
pop
fidivrl
insb
push
test
dec
into
rolb
aaa
xchg
and
stos
jl
jnp
push
mov
pop
data16
or
and
mov
and
cwtl
mov
orl
lcall
push
dec
ss
push
jl
fwait
rsqrtps
xor
push
or
sub
into
sub
jge
pushf
dec
in
decb
push
sti
repz
add
cmp
push
inc
mov
imul
fldenv
bound
pop
hlt
mov
lcall
sub
movl
loop
lahf
scas
sbb
push
inc
aam
cmp
movsb
fistps
jmp
push
pop
cmp
mov
push
insl
lret
clc
movsl
sub
pop
out
dec
sbb
xchg
stc
fdivrs
mov
in
or
sub
into
popf
je
inc
mov
mov
nop
lret
xorb
ds
lock
xchg
sti
mov
jecxz
dec
push
in
inc
insb
adcb
add
fistl
fwait
fwait
push
cmp
loope
adc
in
ret
andb
inc
inc
or
mov
pusha
lcall
xchg
mov
jbe
shll
sbb
or
jmp
and
in
mov
imul
pop
lret
sub
aam
lds
pop
movsb
push
cmp
sahf
clc
mov
out
outsl
pop
cwtl
cltd
or
and
and
jno
adc
cmp
sarb
lods
xor
push
and
xor
inc
fldlg2
pop
or
loop
mov
jge
mov
adc
jmp
in
cli
dec
push
or
into
adc
testl
and
mov
xchg
andb
pop
mov
std
xor
daa
cmp
mov
outsb
loop
int
ret
mov
mov
fdivs
or
add
mov
movsb
fwait
lcall
pusha
mov
aam
test
out
fidivs
pop
inc
jle
push
mov
add
cmc
mov
insb
outsb
add
xorb
add
add
xor
ljmp
sub
add
lea
mov
hlt
out
push
mov
ret
cli
lds
call
cwtl
push
lahf
pushf
negl
mov
sub
movb
push
mov
lods
aaa
rcll
jecxz
pop
mov
fbld
mov
ja
adc
pop
sbb
lret
icebp
xor
repnz
call
push
and
mov
ret
pop
add
test
lahf
push
mov
jge
cmp
inc
add
or
dec
cmpsb
push
fdivs
dec
aam
fcomps
inc
fstl
insl
mov
jl,pn
insl
mov
cli
loop
or
pop
sar
andl
pusha
adc
in
icebp
nop
cmpsb
in
fnstenv
movb
xor
mov
jne
adc
jb
sub
pop
jmp
arpl
icebp
imul
es
dec
js
shll
cwtl
ret
push
inc
mov
jo
xor
out
cmp
and
imul
ljmp
mov
or
out
icebp
xchg
arpl
mov
les
fdivl
sbb
cmp
les
movsl
mov
notb
sti
mov
nop
fldt
pop
push
cmpsb
cmp
mov
leave
orb
jl
xor
jne
cwtl
xchg
add
cmpsb
or
sti
xchg
sbb
push
leave
scas
adc
mov
bound
int3
push
jnp
adc
lock
xchg
pop
ficoml
fwait
add
pop
rcr
adc
pop
cwtl
push
mov
test
sbb
lcall
cli
dec
clc
jecxz
pop
push
scas
cmc
dec
clc
hlt
cwtl
or
xchg
cwtl
inc
pop
jno
out
dec
fs
cltd
lcall
dec
fwait
mov
inc
nop
ficompl
lcall
mov
enter
adc
lds
insl
loop
lds
adc
pop
or
xlat
sti
pop
scas
mov
pop
mov
in
mov
fwait
and
sbb
ss
jo
scas
mov
rcrl
js
jae
mov
fwait
or
in
sbb
popa
adc
pop
or
test
cmp
popf
mov
mov
das
fdivrp
loope
cli
test
inc
pop
jle
jl
js
mov
push
xchg
insb
stos
popf
shl
xchg
cmpsb
push
pop
xor
movl
arpl
fisubrl
xchg
sti
cmp
out
outsb
shr
adc
mov
jae
shrl
jp
jb
and
mov
lret
fwait
iret
hlt
mov
adc
xchg
inc
cli
xorb
dec
sbb
adc
cltd
dec
adc
pop
dec
shrl
or
in
cmp
pushf
nop
cmpsl
dec
mov
and
mov
pop
std
jae
fwait
mov
push
push
adcb
jae
cmp
xor
xchg
pop
lods
in
movsb
aaa
shrb
or
add
iret
jge
xor
pop
cmp
adc
or
dec
xlat
mov
or
mov
mov
insl
xchg
loopne,pt
jb
daa
aam
test
loope
jnp
fsubrs
cmp
mov
leave
es
cs
pop
cmc
das
mov
test
dec
aam
mov
lds
dec
mov
lcall
add
movsl
fwait
inc
test
int
adc
arpl
dec
xor
lea
subb
push
push
test
mov
pop
data16
xor
outsl
cmc
inc
pop
pop
jnp
lds
movsl
sub
scas
sar
clc
mov
push
mov
cmp
addb
sbb
sti
push
jmp
pop
sub
int
xor
mov
aaa
fidivrl
fmull
sbb
fucomp
jle
jo
or
push
mov
jne
subl
push
dec
aam
dec
jns
xor
orb
stos
fwait
stos
sub
mov
cmp
mov
xor
push
sahf
cs
sahf
lock
fstps
sbb
les
adc
cmc
adc
inc
shll
xchg
sbb
add
mov
faddl
or
rclb
mov
jecxz
gs
mov
inc
sbb
ds
or
cmp
test
mov
sbb
mov
loop
out
cmc
sarl
xor
lahf
out
arpl
in
and
rep
xchg
outsb
pop
inc
sub
popa
jae
fs
cmp
outsb
cmpsl
into
daa
cltd
rcr
mov
testb
jle,pt
dec
push
jne
mov
subb
xchg
cmp
inc
ror
jmp
mov
push
std
pusha
dec
push
xchg
test
lret
and
xor
jmp
fs
fdivrl
adc
pop
cmp
pop
pop
add
test
push
popa
mov
cmp
cwtl
ficompl
mov
ret
and
jge
sbb
adc
cltd
jg
push
ficompl
sti
push
inc
jne,pn
test
test
xor
pop
sbb
insb
fildl
xchg
mov
das
shrb
adc
popa
test
mov
call
push
cmp
aas
out
inc
mov
mov
xchg
scas
or
sbb
testl
mov
sbb
pop
pusha
sbb
into
jmp
inc
aas
push
shl
xor
sub
mov
dec
popf
aam
insb
mov
imul
sahf
mov
outsl
and
lods
sbb
sub
das
clc
cmc
cwtl
jmp
or
sub
loopne
push
inc
repnz
xchg
sub
movb
fcompl
in
inc
xor
jg
xorl
sti
mov
in
jl
insb
cwtl
sahf
scas
mov
xchg
add
mov
in
flds
jmp
dec
cmp
in
sbb
xchg
mov
vaddpd
sbb
inc
ret
leave
push
cmp
or
sub
pop
frstor
sti
cli
jle
test
sbb
fstpl
test
mov
lret
mov
lret
sarb
enter
xorb
sahf
andl
dec
outsb
mov
pop
loopne
dec
mov
mov
int
sbb
adc
loopne
dec
js
outsb
scas
jns
dec
ficomps
daa
xlat
add
shrl
dec
xor
cmpsb
jl
test
out
mov
xchg
sbb
out
mov
dec
pop
stos
mov
data16
push
stc
lds
cmp
gs
data16
test
jo
and
loopne
aam
mov
xor
js
adc
jae,pt
fadd
call
push
in
jge
sub
jne
sub
clc
pop
int
hlt
nop
or
pushf
dec
fld
pop
popf
imul
mov
mov
xchg
and
cmp
cwtl
loope
in
sub
jbe
sti
into
xchg
sbb
mov
cmp
cs
push
mov
in
adc
sbb
addr16
repnz
jl
mov
mov
orl
adc
xor
test
std
loop
mov
xlat
cltd
test
push
mov
fchs
sahf
mov
jge
pop
add
jecxz
lods
mov
aaa
scas
sbb
mov
or
addl
xchg
xchg
lret
imul
add
xor
lods
sub
mov
lret
lcall
jb
ret
dec
pop
outsb
into
sti
adc
or
mov
cmpsb
xchg
lcall
nop
mov
add
xor
mov
add
fs
dec
push
stos
mov
adc
int3
pushf
jg
mov
adc
lods
loop
mov
pop
push
iret
inc
dec
and
movsb
movsl
aaa
jbe
xchg
sbb
xchg
and
enter
fnstcw
pop
xor
mov
inc
adc
das
outsb
int
dec
xor
nop
fisubrl
sbb
dec
insb
adc
out
or
mov
rclb
addr16
test
repz
mov
je
mov
xchg
and
jg
nop
fistps
insl
sub
mov
sahf
push
xor
js
lds
into
cs
xchg
mov
nop
leave
or
cmp
jae
ljmp
sbb
sub
or
push
and
xor
or
adc
loope
jecxz
push
or
mov
in
xlat
push
pushf
cmpsl
jmp
jle
jnp
stos
sub
xchg
or
sub
xchg
adc
xchg
fs
mov
ljmp
mov
fsubs
jge
inc
ss
push
loope
jecxz
shrl
jp
call
iret
cltd
push
jmp
pop
aas
jns
ret
xor
insl
mov
into
nop
pop
sub
in
int
cwtl
jae
enter
add
call
mov
pop
cli
push
stos
stos
call
fildl
dec
or
xchg
mov
xchg
jp
idivl
push
xlat
scas
xor
int
pop
ss
psubusb
or
adc
pop
repnz
sbb
adc
dec
cmp
fidivl
xorb
je
je
xchg
pop
mov
xchg
movsb
out
add
cwtl
lods
mov
movsl
gs
inc
mov
mov
jmp
sbb
push
test
loopne
sub
lahf
cmp
add
sub
mov
enter
rdpmc
fst
mov
and
loope
add
push
mov
test
loope
inc
push
push
mov
xchg
mov
add
popa
cltd
adc
mov
test
sub
ret
adc
repz
call
xchg
add
jl
lock
in
outsb
ret
jne
sbb
add
push
sub
mov
sbb
popa
xor
call
push
popa
cmpsl
sub
pop
icebp
xchg
mov
aam
movsl
out
and
push
mov
sbb
ds
pop
pop
clc
fld
cltd
mov
out
jp
scas
pushf
xor
sti
mov
lcall
mov
aaa
mov
sbb
and
mov
das
int3
lcall
pop
loope
mov
inc
outsb
add
xorl
orl
scas
mov
inc
cmp
test
call
mov
or
scas
shl
xlat
sbb
inc
aad
cmpsl
jo
aam
add
push
push
in
ss
adc
stos
fsubrl
cmc
jne
cwtl
lahf
inc
mov
nop
push
test
sbb
in
sub
pushf
dec
and
call
cmp
sbb
inc
stos
pushf
xor
jbe
add
push
mov
dec
sbb
adcb
lahf
or
xchg
movsl
mov
dec
sbb
dec
stc
out
stos
pop
xchg
xchg
and
dec
bnd
mov
mov
shll
dec
enter
mov
je
adc
xchg
add
lods
adc
dec
jae
sar
hlt
imul
pop
push
dec
inc
sti
jb
loop
mov
lcall
mov
or
xchg
jp
jecxz
sti
popf
pop
adc
setp
fistpl
jp
xchg
ja
pop
lods
insb
addr16
mov
pop
rcrl
jmp
btr
sub
xchg
and
jmp
push
push
shrb
xor
sbb
shlb
jmp
mov
repz
adc
leave
scas
es
vpackuswb
sbb
xor
shl
dec
aad
fbstp
mov
lds
dec
mov
pop
sub
inc
sub
xor
cmp
movsb
adcb
mov
scas
arpl
sbb
or
jo
dec
add
mov
pop
bnd
xor
cmp
daa
inc
mov
pop
xchg
dec
push
filds
xchg
daa
dec
cmpsl
adc
in
dec
shlb
int3
movsl
fsubs
movsl
test
arpl
or
mov
out
mov
hlt
mov
in
cmp
fdivrl
or
mov
aam
popl
fwait
fwait
call
cld
dec
ss
cmp
adc
aad
xchg
push
lret
sbb
jmp
add
cmp
jge
sub
cmpl
insb
sti
fisubs
in
out
mov
mov
lods
mov
dec
or
add
add
aam
addr16
jns
ja
mov
cmp
xchg
lcall
test
ja
arpl
fwait
jl
enter
shll
xor
add
aad
mov
xchg
jle
jno
xor
pop
xchg
daa
sub
push
movsl
mov
rorl
dec
jae
std
mov
into
jge
jmp
cmp
sub
mov
pusha
inc
mov
lock
fs
push
xchg
adc
and
jo
lock
int3
mov
mov
dec
aaa
repnz
dec
or
into
sbb
test
test
jmp
mov
stos
sti
ss
mov
mov
stc
pop
out
jp
in
push
es
cld
inc
and
lret
pop
pop
jp
pop
loope
and
shll
loopne
jo
jo
cmp
lahf
cmp
daa
ficomps
xchg
xor
jl
pop
xor
mov
decl
adc
pop
inc
mov
sbb
mov
sub
out
add
cli
std
adc
inc
push
mov
mov
jp
cltd
pop
add
adc
lahf
inc
popa
push
push
and
jae
sti
cwtl
xchg
inc
jbe
in
ljmp
pop
adc
aaa
or
fistpll
xlat
dec
sti
inc
adc
xchg
roll
mov
icebp
sbb
jge
push
add
inc
ja
dec
dec
cmpsl
lret
pop
fbstp
sbb
mov
fiaddl
repnz
ss
jp
jmp
sub
fcomps
rorl
push
sarl
dec
sbb
push
shll
push
jp
add
mov
andl
fwait
out
ljmp
clc
ds
cmp
aam
in
gs
sbb
in
lcall
cmp
int3
cwtl
mov
jecxz
xchg
popa
push
repnz
pop
push
xor
inc
std
roll
shrl
pop
fs
cwtl
jae
cmp
sub
stc
int3
rcl
inc
cli
jne
push
addl
movsb
lcall
mov
rolb
inc
xchg
push
movsl
fildl
xchg
mulb
cmp
jecxz
sub
cmpsl
imul
sbb
sbb
mov
out
rcr
inc
data16
add
dec
or
cmp
cmp
dec
fnstenv
fcomp
lret
xchg
dec
iret
stc
dec
xchg
or
pop
idivb
test
imul
ret
pop
inc
stos
aad
add
xchg
dec
jmp
divl
inc
cmp
sarb
cmc
sar
shlb
dec
outsl
mov
jmp
test
out
xor
cld
sub
cmp
icebp
cmc
cmp
int3
sbb
cmp
ljmp
fcoms
add
mov
pop
dec
test
lods
sbb
ret
or
inc
cmp
jl
je
mov
cmpsb
inc
into
test
mov
aaa
add
int3
pop
inc
cs
cmp
sahf
les
push
adc
xchg
push
lcall
jbe
pop
popf
sbb
jns
xlat
popa
cmp
lock
mov
aas
dec
faddp
scas
add
insb
adc
xor
or
jmp
in
jmp
mov
mov
insl
sbb
or
adc
sub
cmp
inc
sbb
pop
outsl
xor
mov
ret
imul
sahf
in
sub
mov
rcr
mov
push
shlb
inc
leave
xor
test
pop
adc
or
or
xlat
mov
loop
xchg
xchg
or
fnsave
inc
roll
out
popa
je
mov
or
and
push
jne
repnz
sti
cld
jno
mov
pop
sub
subl
test
xor
ja
add
ljmp
push
xchg
scas
adc
mov
and
rorl
jne
in
ffree
and
and
mov
test
push
pusha
cmp
jp
mov
cwtl
mov
jl
sub
xchg
sub
jae
sbb
std
dec
or
scas
int
in
inc
jno
bound
out
outsb
dec
fildll
and
or
icebp
repnz
pop
popa
mov
inc
lcall
jge
jle
ret
xchg
icebp
mov
inc
add
bound
dec
lods
dec
adc
xchg
insl
movsb
stos
push
jo
nop
stos
sub
testl
ret
push
mov
rcr
or
push
xor
pop
mov
sar
lods
xchg
mov
addb
aam
repz
rcpps
mov
orb
add
stos
cmp
xchg
movlps
lock
int
data16
call
mov
push
fstpl
or
and
nop
push
loope
add
push
lock
adc
movsb
dec
xor
mov
push
jmp
sub
pusha
notb
dec
jmp
dec
ss
adc
push
pop
dec
add
in
cli
xlat
in
mov
jnp
sbb
icebp
xchg
int3
es
dec
shlb
gs
je
or
jl
ffree
push
inc
scas
and
lock
sahf
xchg
shlb
rcrb
aaa
shrl
sar
popf
popf
ds
ror
mov
rcl
push
mov
jg
orl
push
xchg
xor
pop
and
jge
das
adc
dec
pop
jg
push
fidivl
fldpi
mov
cltd
sub
jae
pop
movsl
sahf
pop
push
pop
mov
repnz
sbb
test
decb
sub
loop
dec
xor
mov
or
nop
daa
and
sti
ret
adc
lods
in
stc
xor
test
scas
sub
and
cli
jle
mov
andb
xchg
movsb
inc
jecxz
lret
in
enter
adc
notb
ret
repz
repz
sub
lcall
rcl
xchg
popf
dec
add
xchg
xor
sbb
cmpsb
rcrb
test
xchg
fldenv
mov
mov
and
out
jns
dec
loop
sbbb
das
testl
and
cmp
shrl
dec
jp
fdivs
push
push
dec
push
xlat
adc
jge
in
fstl
ss
lahf
inc
test
or
loopne
mov
cmp
cli
popa
or
fmuls
inc
lret
sub
mov
ljmp
icebp
popa
xchg
mov
cmp
fcoml
stc
mov
fldt
gs
negl
mov
sbb
jo
les
imul
mov
call
mov
rolb
dec
push
xor
pop
ret
sbb
adc
je
dec
xchg
iret
out
pop
dec
mov
pop
imul
je
or
shll
jge
cmp
cmp
loope
mov
outsl
xor
mov
dec
inc
inc
mov
ret
mov
cs
imul
xor
addr16
shl
inc
stos
cmp
inc
cwtl
push
addr16
adc
or
sar
jnp
add
lods
mov
outsb
pop
push
jno
stos
sbb
mov
xchg
jmp
mov
test
dec
fnstenv
jl
push
ja
pusha
loopne
rcrl
cltd
dec
jge
push
shl
jp
push
lock
es
xor
xlat
cmpsl
inc
movsl
loope
in
push
dec
mov
fisubl
je
pop
sub
add
mov
imulb
aad
xchg
ds
sbb
sti
cld
mov
xchg
jg
adc
ret
xchg
push
push
xor
enter
sub
inc
les
loopne
int
pop
mov
jbe
negl
inc
jno
lds
pop
xchg
rcl
outsb
out
pop
xchg
idivb
mov
roll
cmpsb
fwait
in
hlt
push
sub
adc
je
add
or
notl
xor
ja
mov
fstpt
lcall
cmpsb
sub
sbb
aam
add
dec
movsl
pop
mov
movsl
xor
sub
shlb
mov
sbb
dec
dec
cmp
mov
sub
push
cmpsl
dec
sub
hlt
gs
pop
cmpl
jmp
xchg
fsubrl
xchg
mull
sub
jnp
push
sub
rclb
sarb
xor
cmp
sbb
test
or
into
jge
mov
mov
lcall
repnz
push
xor
inc
mov
pushf
ret
lock
sub
lods
fcoml
shlb
jl
into
addr16
add
imul
add
xchg
popf
fidivl
add
cli
push
sub
stos
mov
pop
jo
add
insl
lock
loope
jge
or
mov
push
int3
cmp
fsubrs
rolb
mov
loopne
scas
or
xchg
jecxz
fcoms
out
repz
jp
inc
mov
pop
movl
xchg
test
xor
pop
mov
icebp
inc
jo
inc
and
ret
into
hlt
mov
fsubl
icebp
xchg
lret
inc
sahf
loop
inc
mov
mov
mov
jg
xchg
dec
scas
out
ret
and
aam
mov
shlb
push
enter
lock
stos
ret
aam
filds
icebp
and
inc
gs
xor
movsl
jp
rcr
or
xor
jae
insl
cmp
sbb
jl
cwtl
lock
gs
mov
push
icebp
dec
lods
inc
jne
or
and
aas
rorl
dec
hlt
jae
ret
push
cld
lcall
shlb
mov
or
mov
inc
sbb
sbb
in
dec
jns
std
popa
jnp
xor
push
dec
pop
jmp
movsl
sbb
dec
in
rcr
call
mov
xchg
and
outsb
mov
movsb
push
rcr
jo
mov
jo
adc
pop
sub
test
xchg
in
test
push
int3
out
xor
push
sub
cmp
and
push
scas
xor
push
scas
mov
xchg
int3
add
sbb
scas
shll
sub
decb
pop
mov
stos
jg
dec
xchg
xchg
rorl
jg
mov
movsl
cld
stos
cmpsb
mov
out
repz
sub
dec
popa
pushf
sbb
sbb
test
jnp
cmp
jno
in
sarl
mov
mov
cli
xlat
xchg
pop
je
xorb
shl
lock
inc
arpl
addl
xor
jnp
jp
hlt
shl
imul
or
mov
add
daa
iret
adc
pop
push
aas
out
lods
cmp
ljmp
popa
and
test
pop
push
jne
pop
add
inc
dec
lock
inc
mov
stos
and
lret
pop
cltd
sbb
xlat
fldcw
ds
arpl
enter
nop
xchg
scas
test
jg
inc
jp
xorb
dec
pop
pop
dec
jb
xor
push
jg
fcmovnbe
jbe
push
mov
cmpsl
fwait
jb
inc
push
dec
aaa
push
push
std
fbld
pop
pushf
outsb
loopne
sub
fimuls
fdivrl
into
jbe
data16
loope
int3
add
mov
negb
stc
cltd
sub
and
add
and
mov
daa
nop
mov
mov
pop
push
outsl
ljmp
sti
shl
sub
hlt
and
mov
push
mov
xchg
mov
adc
mov
or
inc
fisubrs
pushf
loopne
inc
iret
or
fbstp
clc
cmp
gs
jmp
loope
je
or
mov
xchg
aaa
or
lret
xchg
aaa
sti
xchg
pop
cld
push
outsl
call
adcl
ret
inc
inc
aad
mov
out
mov
cmpsb
mov
fprem1
xorl
add
lea
aam
mov
add
pusha
mov
sub
cwtl
into
shll
mov
and
cmpsb
mov
xor
sbb
nop
ret
pop
lea
fmuls
insl
and
mov
int3
push
stos
aas
or
dec
pop
incl
loop
adc
xchg
xor
jae
xor
add
enter
cmp
gs
lahf
jne
xor
cmpsl
push
incb
lods
adc
mov
sbb
test
or
push
adc
push
jns
daa
imul
cs
std
mov
pusha
out
or
inc
pop
rcll
mov
pop
cltd
xchg
add
es
mov
sbb
cmpsl
sub
sahf
loopne
lcall
mov
outsl
sar
xor
nop
out
jg
pop
inc
cmp
jecxz
push
outsl
scas
dec
je
and
mov
cld
or
sub
xchg
subb
rol
xchg
or
mov
ds
dec
mov
lahf
loop
aas
lahf
jl
add
mul
jecxz
push
mov
lahf
mov
hlt
fs
imul
sbb
jo
mov
nop
and
sub
sahf
add
call
mov
enter
xchg
push
daa
nop
fcoms
rcll
cs
enter
inc
or
fldt
mov
push
loope
sub
outsb
popf
aaa
addr16
dec
out
lcall
dec
xchg
xchg
loope
loop
stos
into
movsb
jnp
ljmp
in
stos
cmpl
test
and
jge
addr16
mov
pop
out
es
pop
inc
dec
imul
aaa
vrcpps
pcmpgtb
std
daa
dec
fnstcw
jl
inc
pop
sub
fs
pop
inc
mov
icebp
test
pop
adc
test
jge
pop
ret
fs
call
out
or
in
mov
ljmp
push
push
cs
rolb
adc
rcr
sub
inc
add
adc
pop
insl
xor
out
jae
push
push
inc
cs
test
add
mov
ror
sub
or
pop
mov
pop
call
add
outsb
jp
leave
pusha
fwait
addr16
dec
sbb
stos
fnstcw
or
iret
andb
xor
scas
dec
das
xchg
fsubrp
scas
call
dec
push
rclb
out
pusha
jge
insb
shll
fs
jge
loope
push
mov
xchg
ret
pop
fs
bound
mov
addr16
aas
jecxz
movsb
test
cmp
jmp
mov
cmp
pop
mov
pop
pop
jmp
mov
or
test
mov
outsl
stos
pop
imul
out
arpl
and
aaa
insl
or
imul
stos
and
push
clc
push
jge
sub
jl
push
inc
adc
add
movsl
mov
mov
push
cmp
cmpsb
and
xor
xchg
aas
roll
lods
mov
daa
mov
fchs
adcl
xchg
pop
xor
mov
and
imul
into
pusha
andl
and
jmp
rep
dec
sahf
inc
lods
dec
pop
ja
or
cli
mov
into
inc
push
cmpsl
and
cmp
stc
sahf
jge
or
pushf
cs
mov
jmp
inc
or
push
es
sbb
repz
inc
std
xor
add
jge
xor
outsb
cmpb
imul
inc
and
and
mov
lods
btr
stc
mov
out
sbb
mov
arpl
sbb
mov
cmp
arpl
std
mov
jo
mov
mov
and
call
clc
jg
pop
jb
fcmovnb
jmp
pop
sahf
sub
cmp
dec
jbe
add
inc
movsl
xchg
xchg
mov
mov
mov
push
inc
adc
insb
negb
lock
xchg
mov
push
cmp
outsl
mov
mov
enter
xchg
lar
mov
and
or
push
loope
popf
pusha
or
lds
pop
enter
or
push
imul
mov
xchg
shr
aad
mov
jle
es
mov
mov
inc
dec
push
add
lods
xchg
popw
jg
mov
pop
shlb
into
mov
jp
test
inc
mov
cld
or
mov
mov
jbe
test
add
scas
dec
clc
fcoms
add
dec
and
jg
cld
xor
sub
pop
call
sub
inc
aas
dec
cmc
mov
mov
test
mov
cmp
or
stos
inc
xchg
ja
cmpsb
fldt
fs
int3
fmul
cld
mov
dec
cwtl
xchg
fcmovb
xchg
lods
mov
inc
bound
scas
add
cmp
adc
and
adcb
jno
mov
fidivrl
jp
test
jne
test
out
cmp
fmul
and
xor
std
add
push
inc
stc
imul
xchg
into
mov
jo
adc
mov
iret
cli
push
dec
shl
fwait
loop
or
mov
cli
push
dec
mov
scas
ficoml
xchg
push
push
push
or
dec
adc
mov
push
sub
mov
jle
push
cmpb
cmp
pop
or
mov
pop
xor
das
xor
jae
or
in
mov
repnz
jp
scas
jecxz
mov
dec
divl
pop
fbld
xchg
xchg
push
xchg
inc
cmpsb
insb
popa
and
jae
pop
cmp
push
xor
lea
jne
inc
jb
ret
push
xlat
ret
push
dec
sub
test
je
mov
pop
sbb
dec
push
imul
das
sbb
adc
ljmp
mov
ret
mov
and
mov
xorb
mov
mov
cmp
enter
dec
xchg
jns
cwtl
inc
adc
dec
pushf
adc
inc
add
mov
mov
in
or
test
std
arpl
scas
scas
outsb
pushf
in
icebp
ss
lahf
loopne
mov
or
fdiv
pop
jl
mov
and
lods
mov
lahf
jg
push
test
int
add
cwtl
mov
imul
es
pop
cmp
rclb
fs
sbb
jb
and
or
ret
add
sub
sub
in
movl
ljmp
cld
xchg
jb
shlb
rcrl
mov
pop
cltd
and
pop
aas
pop
push
xchg
mov
and
leave
lret
adc
repz
and
fcoml
push
enter
lods
adc
insl
dec
scas
pop
das
shl
insl
pop
xchg
dec
lds
sub
lret
adc
push
pop
stos
in
pop
int
pop
xchg
bound
push
sub
jmp
out
insb
sub
or
imul
daa
sbb
add
dec
sbb
xor
andb
mov
add
sbb
sarb
outsl
mov
test
mov
lahf
inc
orl
lods
pop
lret
or
mov
cs
mov
les
fdivl
and
mov
les
ljmp
add
das
mov
push
ret
push
mov
es
pushf
mov
lret
push
mov
jo
mov
fcomps
or
ret
mov
add
aas
sarl
jle
mov
xor
das
mov
cmp
test
xchg
dec
sbb
clc
jge
cwtl
repz
cs
mov
imul
aam
mov
xor
cs
loope
sti
xchg
imul
inc
sub
dec
popa
push
adc
mov
sbb
das
insl
pop
sub
movsb
sub
jmp
int
lret
pop
mov
icebp
cmp
fimuls
insl
fimuls
jns
sub
in
sub
inc
or
jge
xor
sub
lea
push
mov
rol
xor
data16
mov
cmp
sub
dec
enter
out
cwtl
xlat
test
bound
pop
nop
repnz
pop
cvtps2pi
aad
xchg
fadd
inc
popf
adc
testl
fnsave
sbb
inc
fldl
aad
mov
and
xor
inc
dec
or
or
and
loope
scas
cmc
popf
sub
or
xlat
jbe
mov
repz
aaa
and
jmp
jmp
orb
ficoms
inc
mov
push
ds
ja
jae
dec
jbe
cmc
aad
xchg
pusha
sbb
ds
jne
inc
mov
or
sbb
rorl
push
sub
lods
xchg
loopne
push
sub
dec
test
scas
scas
je
sub
out
pop
xchg
fildll
fcomp
hlt
int
mov
movsl
xor
xchg
inc
pop
rorl
daa
das
shlb
out
cmc
pop
and
mov
xor
pop
jo
lods
jb
mov
stos
sarb
aas
mov
jle
mov
popf
sti
xor
cwtl
dec
jmp
push
cmpsl
dec
add
popf
outsl
lahf
aam
mov
jge
insl
sarl
adc
mov
sbb
cmp
out
data16
inc
cli
inc
in
repnz
xchg
movl
repz
out
pop
ret
mov
aaa
loope
xlat
mov
adc
mov
jg
inc
xlat
sub
pop
mov
mov
mov
clc
mov
sbbb
or
xchg
jmp
mov
inc
fcmove
scas
aaa
adc
jg
stc
imul
in
out
cmp
adc
neg
sarl
xchg
push
push
ss
aas
aam
out
cmpb
xchg
lahf
xor
pop
add
add
shl
dec
aad
xor
xor
outsb
loop
mov
ret
dec
loopne
mov
mov
iret
cld
xchg
sbb
mov
lock
pop
pushf
dec
aad
sub
sbb
in
pop
pop
cs
addl
xchg
or
inc
fnstenv
aas
push
pop
insl
jg
incb
pop
daa
jl
sti
sti
lret
sub
cmc
cmp
add
mov
jns
movsl
add
pop
leave
rclb
popa
push
pop
icebp
mov
ret
aad
sub
dec
into
or
cs
dec
sbb
jns
divl
sub
jecxz
scas
xor
and
mov
loope
or
sbbb
inc
addr16
push
mov
push
pop
cmp
iret
lcall
in
insl
bound
pop
int3
mov
xor
insb
jae
fimull
push
push
add
sbbb
or
and
pop
adc
pop
fwait
jbe
cmc
outsl
psraw
out
mov
std
jle
mov
outsb
mov
or
sti
pop
adc
js
dec
push
add
test
cmp
stos
hlt
xchg
mov
xorb
push
adc
pop
add
test
fdivl
mov
in
sbb
jl
inc
lcall
jmp
stc
loopne
mov
cmpsl
inc
testb
mov
sub
subl
adcl
ljmp
or
xor
sub
arpl
dec
push
std
dec
les
daa
sbb
movsl
lods
jecxz
int3
push
in
aaa
fsubl
lds
test
in
push
add
jg
and
test
mov
or
shll
adc
in
adc
adc
fisttpl
mov
incl
mov
mov
pushf
add
pop
mov
mov
out
sbb
cmc
add
mov
mov
stos
add
sub
mov
mov
dec
sahf
fnsave
in
cwtl
and
loop
enter
pop
sub
subb
cmp
xchg
adc
cwtl
out
mov
xchg
ss
inc
mov
out
inc
scas
adcl
pusha
jae
pop
xchg
mov
add
or
jecxz
fcmovnb
mov
loop
fstpt
cmp
or
mov
inc
push
aam
lods
dec
push
push
lods
loopne
pop
xchg
imul
lcall
scas
incb
cwtl
mov
mov
repnz
xchg
outsb
aam
mov
div
push
add
lods
cli
les
in
cwtl
pop
sbb
mov
aas
xchg
sbb
jae
sbb
sub
ljmp
sarl
inc
sarl
and
push
mov
xlat
cli
inc
shlb
adc
shrb
cmp
xchg
subl
adc
xchg
push
testl
imul
adc
lods
in
fistl
fwait
mov
out
jae
loope
xchg
mov
push
test
jne
sahf
push
repz
test
popl
ds
add
xor
repnz
cmpsb
fdivs
fwait
xlat
sub
mov
or
mov
data16
ficomps
imul
mov
or
mov
int3
mov
push
xlat
ljmp
call
jne
loope
push
rorb
es
pop
dec
xchg
inc
push
pop
leave
jg
scas
pop
pop
adc
cmpl
xor
adc
push
movsb
mov
jns
adc
fimull
movb
insl
adcb
inc
popf
imul
and
call
hlt
stos
pop
mov
out
cld
xor
sahf
imul
sbb
cmpsl
lds
push
mov
pop
aas
fsubrs
jl
sub
adc
jmp
imul
jg
lods
scas
mov
xchg
or
jno
addb
stc
jae
dec
fimull
imul
daa
cmp
cwtl
xchg
or
mov
or
and
and
out
push
and
ljmp
icebp
inc
cmpsl
movsb
add
lret
add
cmp
lds
pop
xchg
test
push
mov
mov
pop
je
xchg
cmp
push
mov
push
lea
cmp
mov
dec
pop
fildll
cld
pop
jnp
mov
pop
xchg
sti
scas
mov
mov
adc
es
sbb
aaa
hlt
outsl
pop
and
xor
jmp
inc
push
cmpb
inc
cld
ss
push
lret
and
mov
fstpl
dec
inc
and
rclb
lret
pusha
xchg
call
inc
pop
xchg
or
ret
popf
loopne
cmc
sbb
sbb
mov
xor
test
movsb
cld
lods
pop
or
jle
or
sbb
cmp
dec
lret
sub
mov
ret
mov
out
or
addr16
jle
dec
sub
ja
or
sub
mov
cmp
int
repz
sub
rcl
xchg
lock
xchg
test
lret
xor
movsl
jmp
jp
jp
shlb
push
lret
sub
loope
xor
mov
jno
push
mov
push
xor
add
imul
pop
addb
es
xor
call
sahf
aad
mov
lea
sbb
pop
iret
xor
cmp
fst
fldenv
mov
cmc
js
es
inc
addr16
addr16
pop
push
pop
jecxz
or
sbb
add
pop
jp
mov
rolb
lcall
rorl
inc
mov
xchg
push
adc
mov
or
xchg
push
out
push
addr16
ss
js
imul
dec
imulb
lods
stc
fisubrs
out
jnp
repz
add
addr16
and
dec
push
out
shlb
out
sbb
mov
cmpsl
pop
outsb
fs
jle
int
ljmp
call
loope
out
sahf
mov
mov
cld
jle
in
xor
pop
test
cmp
out
cmp
jo
jg
aas
mov
adc
outsb
mov
aas
popa
cs
sub
out
push
inc
xor
inc
sti
adc
out
jp
sbb
adc
aad
adc
fst
out
inc
outsb
and
push
add
sub
js
das
pop
push
mov
out
lock
imull
or
inc
pop
mov
cli
ret
mov
ja
lods
add
ret
and
cmp
push
adc
sbb
int3
imul
adc
inc
xlat
dec
mov
js
jp
mov
stc
push
mov
lret
test
aad
and
push
incb
loop
lcall
cmp
pop
xlat
test
dec
dec
orl
movsb
push
mov
das
fwait
imul
daa
cmpsb
inc
int3
xchg
dec
fs
push
test
push
mov
test
and
fcmovb
shlb
movsb
push
mov
out
adc
mov
push
nop
ja
sbb
lea
mov
push
lret
jecxz
xchg
in
es
cltd
repz
push
gs
das
test
sbb
fs
popf
mov
inc
lret
or
mov
xor
and
lahf
ds
pop
aaa
mov
je
aad
pop
push
lret
push
ds
leave
lock
fmull
cli
push
adc
xor
cmpsb
in
dec
daa
jne
dec
jecxz
cld
inc
inc
imul
sbb
outsl
sub
pop
xchg
int
addr16
shll
or
xchg
ja
push
jge
push
lods
icebp
dec
mov
jmp
dec
and
fsts
bound
sub
daa
mov
lods
xchg
xchg
sbb
popa
sub
push
cltd
mov
movsb
daa
cmp
popf
cmp
loope
lock
xchg
std
cltd
outsb
fisttpll
test
cmp
mov
fcom
rorl
mov
adc
orl
dec
sbb
enter
fsub
imul
pop
jecxz
les
fists
cmpsl
mov
mov
repz
mov
adcl
loopne
idivl
mov
cwtl
mov
jae
mov
sbb
xchg
shll
and
sbb
rorl
sub
loopne
cmp
iret
test
mov
add
bound
sbb
adc
cmc
sbb
in
add
pop
fstl
mov
mov
ret
xchg
shll
xchg
xor
inc
rcrl
out
sub
mov
in
bound
fcmovne
fimuls
in
outsl
pop
lahf
sbb
test
daa
cmp
fbld
stc
xchg
inc
lods
mov
sar
dec
mov
sarl
call
and
jne
or
or
xchg
and
cmpsb
insl
cmp
andl
rcll
ret
add
sub
cmpsl
jno
xor
fdivs
out
and
movsb
mov
xor
fisttps
lcall
mov
jle
pop
outsl
shlb
add
cmp
push
mov
dec
imul
xchg
mov
cltd
add
inc
jmp
mov
xlat
stos
fldpi
xchg
bound
vmptrst
or
testl
int3
add
std
pop
hlt
pop
call
cmp
in
inc
loop
inc
mov
popa
add
negl
xchg
loope
xor
push
sub
push
int3
test
inc
xor
sub
loopne
inc
stos
adcb
setns
dec
mov
out
lret
mov
jg
mov
mov
out
lock
cmp
mov
imull
int
sub
dec
sub
bound
dec
jo
daa
ds
xor
add
xor
rorl
and
inc
xlat
scas
movsb
cmp
insb
sub
pop
cld
pop
pop
lahf
adc
ffree
push
lods
sbb
ret
sub
adc
xor
mov
ud0
add
fs
pop
pusha
xor
nop
push
stos
cli
mov
clc
adc
mov
push
lcall
jle
dec
xchg
popf
outsb
xorl
into
sbb
je
pop
push
stc
or
dec
xchg
mov
sbb
inc
dec
add
mov
pop
push
adc
mov
sbb
mov
add
dec
add
xchg
imul
pop
or
xor
icebp
mov
cld
sti
sbb
data16
shlb
lcall
sub
out
and
test
std
shrb
popa
in
jae
inc
inc
loope
mov
cmp
dec
inc
pop
adcb
fistpl
fcmovb
pop
jp
pop
xchg
xor
jae
imul
cmp
cmp
mov
inc
in
mov
pop
xchg
mov
dec
dec
push
pop
popf
pop
sub
jno
and
jbe
mov
mov
into
mov
mov
mov
std
adc
and
cmp
xchg
xchg
or
jno
imul
pop
adc
sbb
popf
sub
push
mov
dec
dec
nop
dec
rol
lret
rcr
insl
pop
xor
notw
add
mov
lods
sub
jge
cld
cmp
dec
dec
ss
aas
cmc
sub
idivb
fdivr
movsl
cs
imul
push
adc
sub
mov
cs
sub
cmp
inc
or
add
xor
fistps
js
popa
sub
xchg
push
pop
subb
inc
sub
movsb
iret
imul
imul
in
or
push
or
or
sub
push
sbb
inc
cmc
mov
push
mov
out
mov
imul
in
mov
xchg
imul
std
std
pop
fdivl
or
push
jae
inc
cs
adc
mov
inc
add
sub
shlb
sbb
out
mov
imul
lods
mov
push
daa
dec
and
and
pop
clc
shlb
mov
inc
std
sbb
aaa
add
pop
mov
jmp
jno
push
pop
stc
xorb
xchg
cmpsb
and
pop
rcll
aam
xchg
out
out
xchg
loopne
dec
adc
jnp
std
sub
and
sub
jae
out
sar
lret
xchg
inc
fstpl
mov
or
mov
test
repnz
loopne
pop
mov
cli
jns
push
imul
inc
ret
fsubrs
sahf
sbb
jbe
imul
push
stos
jg
inc
in
mov
scas
add
ret
aas
adc
cmp
lods
nopl
jge
mov
or
loopne
popf
into
int
push
pushf
stos
add
mov
jb
shr
fisttpl
not
and
jnp
add
inc
mov
out
idivb
lods
scas
xor
das
and
jle
mov
mov
push
fs
insb
es
or
dec
lods
les
sbb
int
ror
rorl
jb
cmp
xchg
pop
es
repz
pop
mov
loopne
out
cmp
inc
jo
cld
lcall
cmp
mov
jo
add
repz
xchg
sbb
sbb
cld
leave
mov
inc
pop
jns
or
jg
lods
fwait
sub
daa
xor
jns
jne
inc
sub
mov
test
mov
cmpsb
jmp
scas
lods
les
sub
jnp
out
in
mov
sbb
pxor
in
pop
mov
mov
mov
shl
push
adc
scas
adcl
sti
enter
arpl
dec
std
fimuls
popa
repz
xchg
adc
into
mov
push
add
stc
cli
mov
inc
cmp
pop
xchg
push
je
adc
jg
xchg
in
inc
xor
push
lret
outsb
mov
mov
iret
in
push
jmp
mov
fcomps
in
mov
adc
mov
cmp
imul
pop
in
xchg
icebp
xor
es
or
iret
or
out
orb
mov
pop
dec
ss
pop
fnstenv
jle
sbb
bound
cmc
mov
mov
dec
loopne
add
out
sbb
out
sbb
inc
outsl
cmp
cmp
shrb
shr
das
xchg
cwtl
or
stos
push
ret
push
adc
popl
aaa
mov
icebp
daa
pop
or
xor
lahf
mov
nop
jmp
scas
je
ja
ret
iret
pop
jbe
add
movsl
popa
adc
or
mov
lods
xor
jmp
jno
pop
jno
repnz
iret
mov
pop
ss
push
add
stos
mov
xorl
pop
cmpsb
jb
pop
and
mov
xor
mov
mov
and
mov
subb
xchg
subl
in
cli
and
jo
lahf
daa
imul
push
out
xchg
dec
test
pushl
or
push
mov
mov
dec
push
test
pop
out
leave
test
jno
push
mov
sub
pop
xchg
or
sub
sub
cmp
push
push
pop
pop
lret
jnp
adc
xor
in
inc
ds
jle
push
push
in
fcomps
ja
and
test
bound
xchg
pop
adc
sbb
pop
xor
mov
xor
sbb
or
jne
push
mov
fmull
out
xchg
add
repz
adc
subb
repnz
pop
std
pop
or
add
and
lret
fisubs
stc
addr16
push
jle
stos
fidivl
push
mov
and
enter
xor
stos
bound
sub
xor
fistps
or
imul
mov
or
mov
mov
adc
or
insb
xchg
add
pop
and
or
and
adc
hlt
and
orl
or
jo
insb
add
in
and
mov
sub
das
pop
lahf
mov
mov
fwait
inc
imul
bound
imulb
sub
and
sbbl
test
addb
paddb
negl
stos
stos
pop
in
or
jb
pop
arpl
loop
iret
aaa
jo
push
dec
xor
into
shl
lret
cmpsl
adc
adc
inc
in
enter
push
jg
fcoml
push
popf
repz
mov
cmc
fcomps
dec
and
fmull
mov
pop
pusha
pop
or
aam
int
xor
push
inc
ret
jmp
stos
lea
sbb
dec
shrl
loope
scas
shll
push
dec
add
std
lcall
ret
shll
ljmp
je
adc
int3
int
addr16
adc
lock
repnz
mov
in
xchg
push
mov
mov
adc
push
das
add
sbb
insb
cmp
sub
in
int3
fucomip
lock
pop
xchg
or
sarb
mov
xchg
iret
call
mov
xor
mov
mov
loope
sub
fiadds
das
jb
or
push
loop
mov
cmpsb
xchg
and
mov
cmp
push
sub
push
cmc
js
jl
sbb
adcl
fdiv
call
mov
pop
pop
add
int
add
pop
mov
xor
push
jecxz
dec
int
scas
xor
jg
das
popa
jmp
mov
sbb
or
nop
lds
pop
pop
xchg
icebp
xchg
loop
addr16
mov
dec
lea
aaa
mov
rclb
jmp
testb
aad
sub
push
add
sbb
or
add
dec
sti
cmp
mov
lods
add
mov
lock
fdivrl
outsl
insb
adc
int3
in
and
ffreep
xor
push
push
mov
xchg
outsb
sahf
push
sbb
sub
xchg
jecxz
fdivl
gs
dec
jle
or
fisubrs
inc
out
or
pop
inc
sbb
popl
cld
cmp
jecxz
movsb
fadds
or
xchg
imul
call
test
sahf
imul
icebp
neg
pop
repnz
testb
icebp
dec
loopne
xchg
loope
and
adc
jae
mov
or
xchg
ljmp
sar
je
mov
sar
dec
sbb
jno
mov
outsl
mov
push
pop
xor
out
out
imul
cmp
xor
adc
popa
sub
sub
cmp
popa
pop
sub
test
lds
rcr
pushf
adc
push
lock
mov
pop
or
loope
mov
sbb
arpl
ret
std
je
lret
popa
mov
inc
xor
mov
iret
push
jmp
int3
pop
mov
cmp
in
pop
ja
cmpsb
xchg
in
dec
cmp
lret
sub
lret
adc
hlt
or
repnz
aad
inc
data16
pop
mov
in
xchg
pusha
fstp
push
scas
out
mov
in
lods
dec
aam
outsb
out
xor
and
sbb
fisubrl
popa
and
and
sbb
cmp
push
cmpsb
jb
mov
mov
shrb
rclb
sub
adc
lock
leave
jmp
outsb
popa
jl
aam
inc
js
mov
xchg
inc
pop
push
mov
aam
mov
outsl
pusha
mov
inc
cmp
loope
jle
int3
fadds
mov
cmp
je
test
jae
pop
sub
cmp
dec
call
mov
adc
xchg
dec
pop
rcll
mov
adc
in
xor
mov
cld
jns
popf
inc
scas
push
sbb
jne
ja
and
inc
sub
shlb
test
xor
pusha
data16
pop
jns
cmp
repz
adc
sub
fistpl
fnstenv
jl
mov
sbb
jl
cmp
test
cwtl
mov
fistps
mov
push
arpl
mov
xchg
rcll
repz
mov
mov
xchg
inc
in
or
nop
aaa
or
cmp
cmpsb
mov
jns
repz
cld
inc
hlt
shrl
mov
inc
loopne
adc
fdivl
and
and
or
or
xchg
sbb
xchg
andl
lods
cmpsl
cmp
sti
lret
xchg
imul
pop
sub
adc
iret
jg
xchg
dec
shll
fcoml
mov
add
test
cmc
rclb
stos
lds
bound
lcall
repz
mov
in
cmp
mov
sti
fwait
xchg
scas
push
icebp
inc
movsl
pop
mov
into
jl
push
mov
push
in
lea
pop
xor
adc
sbb
lret
inc
mov
jbe
and
daa
call
aaa
sub
pop
mov
mov
sbb
push
pop
popf
repnz
mov
cmp
add
jmp
and
fistpll
pop
call
cmp
cmp
sub
dec
int
cmp
mov
jbe
movsl
rol
lds
xchg
xor
pop
xchg
lock
notb
xchg
rcll
mov
stos
mov
push
sbb
sub
scas
xorl
dec
loope
pop
mov
sbb
sub
ss
ret
arpl
add
mov
out
rcl
cmc
incl
cmpsl
imul
or
inc
jbe
cmp
aas
dec
imul
insl
or
dec
sbb
dec
shl
adc
popf
sahf
out
mov
and
adc
popl
add
xchg
fdiv
adc
add
dec
sub
fs
sub
ja
xchg
cwtl
pop
sbb
lret
cmpsb
roll
mov
stos
mov
push
push
mov
inc
popf
mov
and
xor
je
lods
jb
outsb
and
mov
les
adc
lret
push
sbb
jne
or
lahf
inc
sahf
jmp
inc
hlt
scas
aad
das
inc
leave
push
out
dec
jnp
pop
shrl
pop
pop
std
add
push
add
mov
aad
ret
popa
fcomps
dec
jb
das
jno
es
adc
mov
dec
xor
sbb
ret
push
xchg
mov
cwtl
xor
lcall
in
or
mov
push
or
mov
daa
outsb
pop
js
inc
cwtl
data16
ds
mov
dec
pop
inc
fcom
loop
push
push
mov
or
mov
nop
jl
mov
lahf
and
mov
ja
push
rcll
jmp
xor
out
aaa
sbb
in
push
sub
cmpsl
push
int
dec
push
cmpsb
mov
cwtl
lods
mov
add
js
ja
jne
stc
lods
data16
enter
das
mov
fcmovnbe
popa
sub
dec
mov
divl
jmp
xor
outsl
jmp
fwait
mov
cmp
jl
mov
mov
cmp
jle
xchg
mov
cmp
popa
dec
lahf
jns
ds
lea
lret
push
mov
jo
mov
xchg
fisubrs
xchg
cmpsb
inc
pop
sbb
pop
mov
sub
inc
xchg
mov
aaa
add
loop
dec
inc
jbe
scas
or
add
mov
pop
xchg
lret
cmp
xor
sbb
ret
outsl
test
jb
cmovo
xchg
fidivrl
add
fadd
fcoml
mov
or
jns
stc
and
mov
dec
call
outsl
leave
add
std
jae
add
inc
loopne
add
ljmp
inc
in
stos
test
inc
adc
sarb
dec
add
xor
xor
push
sbb
js
outsb
push
into
xlat
js
repz
in
push
xchg
popa
push
or
or
pop
jb
lea
mov
jae
sub
and
fwait
insl
das
push
rcrl
inc
jnp
fwait
dec
and
fs
clc
sub
inc
mov
stos
shl
xor
mov
orb
aad
sarl
pop
mov
sbb
pop
jg
cmp
xchg
int
pop
rolb
inc
dec
add
inc
push
shr
aam
push
shr
lret
xchg
scas
push
xor
cld
popa
jo
add
add
adc
push
insl
pop
dec
shrl
and
sahf
orb
adc
xchg
sbb
xchg
jb
jne
xchg
and
test
cmc
lea
les
adc
std
rcrb
or
fldenv
cwtl
popf
xchg
aad
push
cmp
mov
repz
in
add
mov
cmpsb
popa
stos
or
add
cmpsl
pop
xchg
inc
jnp
sub
mov
pop
stos
ja
test
inc
pop
int3
xor
cmp
loope
adc
sub
out
insl
sbbl
jl
add
add
add
and
mov
mov
stc
adc
addr16
dec
pop
iret
test
fcoms
ljmp
imul
xchg
mov
cmpsl
push
testl
addb
push
push
test
push
test
out
daa
icebp
push
jle
dec
mov
lock
xorb
fsub
jno
addr16
mov
inc
negl
xlat
outsb
or
cmp
popa
ss
sub
jo
add
or
std
or
mov
call
push
jecxz
pushf
push
ss
loopne
and
dec
stc
in
bound
lea
sub
in
test
jae
mov
ds
cmp
add
mov
mov
mov
push
mov
push
ss
or
jae
mov
jns
loope
out
push
les
dec
dec
adc
sbb
fwait
out
ficoms
in
push
sahf
inc
push
xchg
ss
push
xchg
xor
sbbl
aas
cmp
adc
add
lahf
and
push
outsl
mov
sbb
rorb
sbb
out
jl
dec
jmp
enter
mov
jg
rcrl
out
push
sbb
cmp
hlt
ljmp
test
pop
jmp
adc
add
xlat
xor
cmp
out
cld
mov
cmp
mov
or
out
xor
pop
mov
inc
cmp
cld
and
sub
sbb
lock
xor
lock
fdivl
ds
pop
push
divl
out
mov
loope
dec
or
rolb
loope
dec
jbe
push
test
mov
jb
pop
jno
shll
mov
xchg
sbb
test
cmp
xor
cmp
mov
sub
and
aaa
dec
sbb
enter
dec
lret
dec
data16
leave
jo
mov
xchg
loope
and
test
pop
movsb
jbe
cwtl
mov
jo
repnz
adc
mov
cmp
adc
in
sub
lds
jle
fdivs
mov
repnz
rolb
test
lds
ljmp
pop
adc
leave
pushf
or
jecxz
sub
pop
sarb
data16
mov
testl
in
enter
xchg
dec
dec
xchg
cmp
inc
fisubs
movsl
lret
push
mov
xchg
jge
xor
sti
jle
test
stc
pop
fs
lret
add
or
xor
out
push
pop
cmpl
out
cmp
jno
mov
adc
and
jp
or
dec
mov
cmp
push
pop
inc
sbb
data16
int3
xlat
pop
mov
mov
fsubrl
iret
sub
sahf
mov
mov
arpl
dec
sbb
sbb
fistps
andl
pop
adc
das
jge
out
add
push
adc
pop
adc
fs
dec
pop
add
or
es
out
xlat
pop
fists
inc
bound
xor
cmp
xor
in
lds
mov
cmp
div
mov
xchg
mov
out
dec
add
pop
or
mov
and
cld
push
aas
popa
sbbl
fstpt
mov
dec
and
jne
mov
push
test
mov
repz
pop
sub
xchg
adcb
flds
ret
mov
inc
push
nop
nop
leave
lods
jb
scas
ret
les
inc
xchg
pop
out
pop
pusha
xchg
mov
push
out
inc
xchg
push
xchg
es
ret
sub
fld
fstl
aaa
lds
loopne
in
mov
mov
and
dec
out
xor
adc
push
xor
movsb
loop
jae
ret
in
add
push
and
mov
insl
adc
push
add
test
mov
push
stos
push
cmc
test
and
adc
xchg
pop
push
mull
orl
cmp
pushf
dec
sub
faddl
adc
dec
dec
mov
adc
xchg
mov
sarb
lcall
push
mov
xlat
imul
leave
ljmp
push
sbb
js
fdivr
fcmovnb
aas
mov
adc
mov
xor
jmp
es
sahf
insb
popf
mov
and
pop
mov
mov
push
js
js
iret
jno
daa
pushf
into
and
ds
jnp
lds
adc
mov
or
pop
xchg
jno
sbb
jb
fcomps
mov
leave
xor
mov
ds
stos
fsts
jbe
enter
js
and
and
xchg
scas
decl
out
out
out
fimuls
in
ficoms
out
sarl
adc
cmp
pop
lds
lret
mov
mov
cltd
adc
sub
add
loop
enter
je
lret
or
sbb
cmp
cmp
dec
negb
aas
dec
or
rorl
cmp
mov
in
faddl
jp
pop
stos
xor
imul
push
fnstcw
stc
sbb
push
imul
cmp
aaa
xchg
lret
lret
mov
jbe
cwtl
sbb
push
add
lock
mov
rcr
pop
out
dec
inc
and
inc
punpckhbw
mov
dec
hlt
out
call
jp
adc
xor
and
jae
pop
pushf
popa
js
push
inc
mov
fmull
cwtl
stos
cmp
fadds
and
cltd
into
xchg
sub
fs
jns
xchg
and
test
orl
call
xchg
stos
dec
sbb
les
cmp
mov
jl
cmpb
in
xchg
loop
wbinvd
rorl
pop
xor
cmpsb
loopne
fsubrs
sbb
mov
test
cmp
push
out
fcomps
mov
shrb
xor
and
sti
hlt
sub
jge
jle
pop
jbe
mov
jno
xor
push
std
bound
out
fxch
mov
push
adc
and
shrb
scas
sub
dec
or
andb
jno
jbe
mov
fcmovbe
enter
push
arpl
jl
fadds
xchg
out
push
sub
insb
int
std
test
jnp
iret
jmp
lahf
xchg
mov
out
outsl
sub
xor
les
lods
test
decl
jp
sbb
xor
mov
data16
mov
lret
movb
pusha
pushf
cmc
sti
movsl
pop
dec
add
fwait
test
xor
sti
fdivrs
adc
push
fcmovb
insl
lcall
daa
and
movsl
mov
idivb
push
sub
mov
mov
cli
mov
cmpsl
pop
out
add
lock
aad
ss
mov
pop
ret
mov
push
add
mov
and
mov
push
pop
jne
and
jecxz
dec
adcb
mov
xchg
popa
sub
icebp
test
subl
jecxz
popf
loopne
dec
lock
stc
mov
lds
push
imul
jle
xlat
std
adc
hlt
xchg
lods
push
je
mov
xchg
cmpsl
rclb
push
sub
in
sbb
movsl
cwtl
aaa
lock
std
inc
inc
sti
rcrl
es
fcomps
push
sub
push
jae
dec
or
pop
add
xlat
jno
out
repnz
dec
in
jle
mov
add
and
add
pop
aad
lret
adc
je
pop
cwtl
int
xchg
mov
mov
jl
jns
pop
out
sub
inc
cmp
arpl
ljmp
cltd
aam
call
jno
cmp
push
xor
out
adc
sub
iret
cmp
pusha
mov
xchg
insl
sub
adc
or
mov
mov
std
jecxz
pushf
or
xchg
and
and
fcomps
or
inc
bnd
mov
sub
mov
cltd
cltd
sub
jl
push
sbb
repz
dec
sbb
sub
pusha
lea
pop
notl
pop
mov
pushf
mov
scas
stos
pop
loope
inc
xlat
iret
imul
mov
xchg
sub
or
cmp
outsl
pop
gs
lds
mov
jmp
fs
popf
add
clc
jo
push
movq
outsb
and
pop
ds
popf
outsb
inc
push
or
xchg
mov
push
push
daa
cmp
das
push
cwtl
mov
ja
xor
or
sbb
aaa
cs
push
psubq
cs
rcr
js
test
push
cmp
js
ja
out
out
add
sti
dec
mov
pop
pop
insb
mov
cmp
cmpsb
jmp
jns
mov
inc
stc
ss
add
adc
aad
push
popa
insb
mov
leave
fbstp
imul
sub
and
jnp
hlt
jl
mov
in
dec
mov
and
ret
sub
out
jno
jl
dec
mov
test
inc
jb
xchg
jno
inc
sti
out
and
pop
lret
and
mov
shlb
js
mov
loopne
pop
lahf
repnz
add
xor
mov
push
push
xchg
adc
pop
in
xchg
ficompl
cs
add
sub
imul
lcall
adc
xor
aas
pop
dec
sahf
aad
sbbl
xchg
mov
es
out
movsb
pop
mov
aaa
push
in
or
and
mov
and
mov
rclb
sub
fidivs
jg
movsl
sbbl
xchg
mov
add
or
sub
mov
fcmovu
testl
aad
subb
dec
cltd
inc
pop
scas
ss
into
idivl
shr
test
mov
inc
inc
call
imul
and
stos
repz
ljmp
xchg
clc
clc
test
push
das
ljmp
mull
sbb
push
jp
mov
lds
pop
jo
adc
pusha
mov
dec
sarb
and
adc
stos
icebp
xchg
loopne
xchg
scas
mov
les
mov
enter
aas
mov
fucomip
fildll
divl
inc
mov
movsl
or
cmp
pop
clc
aad
aam
pop
out
mov
insl
dec
or
enter
jg
stc
and
pop
pop
jnp
loope
ljmp
ror
fbstp
cld
jl
nop
sbb
ror
fmuls
jp
xchg
scas
and
push
mov
mov
push
imul
mov
jo
pop
mov
ret
cmp
mov
or
push
mov
mov
push
cmp
jle
jae
jne
jl
sub
or
loop
push
push
mov
insb
iret
mov
mov
add
jg
stos
outsb
fisttps
clc
xchg
call
insb
flds
mov
push
mov
hlt
mov
or
and
and
xor
imul
and
repz
shlb
xlat
sbb
mov
mov
pop
mov
stc
loop
inc
int3
xchg
jb
out
inc
loopne
rcl
mov
in
push
adc
pushl
outsb
push
and
daa
stos
sarl
pop
cltd
jns
repnz
stc
sub
cltd
mov
mov
icebp
push
mov
xlat
repnz
push
sub
xlat
inc
dec
push
adc
dec
test
addr16
jecxz
fwait
sub
outsb
lret
jmp
in
dec
rclb
pop
or
sub
jnp
add
add
lods
mov
jnp
jo
mov
jge
add
mov
hlt
pop
ljmp
or
cmp
lret
add
and
sub
cmp
ficoms
cld
inc
inc
sarb
test
pusha
ret
gs
cmpsl
inc
mov
xchg
insl
mov
dec
lcall
call
dec
pop
mov
test
mov
mov
repz
hlt
cmp
add
push
pop
lahf
fdivrl
inc
sbb
xor
dec
cmp
inc
faddp
ret
xorl
sbb
mov
fstpt
xchg
test
jl
xchg
scas
test
aas
cmp
lock
xchg
cwtl
pop
and
sbb
hlt
fwait
sarl
push
inc
nop
fnstcw
call
lcall
mul
dec
or
das
out
in
dec
jae
sbb
outsl
pop
mov
mov
jb
hlt
add
cli
les
out
arpl
aam
lret
insl
int3
inc
mov
mov
jb
das
and
movsl
push
inc
cmp
imull
div
or
inc
push
jmp
hlt
inc
jo
popa
loop
inc
mov
inc
nop
or
andb
icebp
and
jp
dec
adc
inc
sbb
mov
mov
cmp
xor
loope
sbb
mov
sub
xchg
lock
imul
mov
mov
mov
aaa
cwtl
int
or
cli
cmpsb
or
mov
mov
xchg
rolb
mov
icebp
es
testl
mov
mov
pop
mov
pop
xchg
int
inc
pop
jg
rcrl
jnp
scas
fcomps
xchg
cmpsb
mov
sub
xchg
outsl
jge
jnp
sub
cmc
shl
fnsave
jns
out
pop
jmp
jmp
insl
out
imul
add
inc
or
xchg
lods
mov
mov
int3
mov
aaa
and
outsb
xchg
scas
or
push
pop
cmp
xor
xor
mov
pop
in
stos
pop
div
pop
lock
inc
mov
jo
jecxz
jle
add
adc
mov
push
pop
int
sarl
leave
sub
sbbl
add
cmp
xchg
push
fists
out
cmpsl
add
inc
pop
sbb
dec
insb
adc
cld
mov
jl
mov
mov
add
mov
imul
push
mov
push
dec
dec
enter
mov
or
shl
nop
std
mov
sbb
out
scas
cmp
push
sub
ror
andb
js
scas
cmpsl
cmp
pop
movsl
mov
int3
data16
daa
mov
cmp
scas
dec
das
ret
mov
pop
shlb
out
adc
in
dec
fimuls
jnp
call
fnstsw
sahf
dec
jo
ja
xchg
lcall
inc
aam
cmp
aad
ljmp
add
mov
in
lds
cs
movsl
in
cmp
jne
lods
mov
loop
ds
xor
inc
sbb
aas
stos
das
push
sbb
ljmp
mov
cmp
sub
jp
lds
leave
shlb
inc
sub
add
fs
stos
fcmove
xchg
jmp
pop
sbb
faddp
cmpsb
fsts
and
sub
fimull
sub
pushf
in
adc
xchg
push
rcrb
hlt
aas
pause
es
fwait
addr16
push
out
sahf
arpl
dec
jae
lahf
repz
rcl
add
addr16
pop
or
xor
cmp
add
add
or
fildl
jecxz
dec
out
and
loope
insb
sbb
xchg
adc
sbb
popf
sbb
dec
cs
jp
and
jle
push
cmpsb
je
xor
pop
call
lods
xchg
mov
jge
and
and
or
adc
or
cmp
mov
or
cmp
push
sahf
lret
out
sbb
lahf
jb
mov
cld
aad
mov
repnz
sub
mov
iret
sub
sarl
sbb
mov
pop
sbb
sub
xchg
push
imul
dec
xor
cmpb
lods
test
adc
jne
test
adcb
add
imul
xor
sub
testb
out
sub
or
cmp
xlat
jns
mov
ret
mov
decb
pop
hlt
mov
cmc
mov
jle
push
ljmp
addl
pop
jns
sarb
insb
jl
mov
shll
aam
cli
fsts
push
mov
inc
in
lret
dec
js
lahf
add
or
push
call
movsb
and
andb
jb
fsubl
jle
mov
mov
in
dec
cwtl
repz
and
xor
imul
cmp
mov
repz
jb
hlt
dec
mov
push
shll
sbb
dec
movsb
fsubr
test
dec
mov
xor
add
lea
adc
sub
mov
aad
lods
mov
sahf
ss
cmc
imul
mov
push
iret
pop
cmp
lret
shlb
lahf
filds
sbb
lods
and
sub
fwait
cltd
stc
rclb
test
adc
mov
jns
lods
cmp
pop
repz
mov
aad
sbb
push
ret
pop
lds
jmp
lock
push
xchg
push
jecxz
push
mov
shlb
xor
and
imul
mov
enter
xchg
imull
int
dec
xor
test
jnp
fwait
jbe
loop
insl
sbb
fdivl
sub
hlt
in
add
jno
push
dec
js
adc
add
or
hlt
xor
inc
outsb
mov
mov
cmp
mov
mov
xchg
into
cld
add
jecxz
inc
sub
sbb
cli
push
push
xchg
sbb
ja
and
push
ljmp
mull
mov
lods
andb
jb
pop
lds
aas
add
xlat
cltd
cmc
data16
or
adc
out
push
or
adc
in
inc
cwtl
and
or
sti
mov
push
push
icebp
stc
cli
mov
in
or
and
imul
addr16
insl
xchg
insl
pop
in
imull
pop
cli
dec
cltd
mov
stos
mov
or
inc
addr16
or
add
jmp
ret
jb
cs
test
fildl
xorb
mov
fildll
push
stc
xor
inc
outsl
int
pop
sub
iret
sbbb
movsl
or
xor
adc
movsl
fdivs
jnp
xor
jg
popf
push
sub
lock
inc
jmp
ljmp
pushf
push
repnz
jno
hlt
jbe
or
fildl
jno
idivl
sub
adc
inc
and
xor
adc
psrlq
aas
sbbl
lods
and
int3
das
scas
push
dec
daa
fdivs
dec
aam
test
out
sub
test
imul
sbb
arpl
pop
mov
cmp
mov
add
es
aad
int
mov
mov
sbb
push
dec
std
jmp
fistpll
jecxz
cmp
dec
lret
imul
stos
jns
adc
mov
dec
insb
push
jmp
enter
jmp
leave
popa
jmp
lret
pop
aad
mov
daa
or
xchg
out
iret
inc
push
rolb
xchg
pop
xchg
xlat
scas
xor
sbb
jle
jge
mov
in
in
sbbl
fidivrs
xor
cwtl
cmpsl
leave
and
test
repz
and
sub
pop
dec
popf
fcmovnu
ret
mulb
js
jbe
int
push
cbtw
push
xchg
jle
lods
push
push
mov
cltd
cltd
mov
insb
or
push
ja
sub
out
xchg
loop
cld
shrl
add
and
add
jnp
mov
add
push
xlat
and
out
xchg
push
in
mov
adc
mov
or
out
loop
xchg
shlb
dec
push
xor
pusha
sbb
rcll
stos
je
xor
cmp
jmp
cmp
adc
sbb
mov
les
and
lar
clc
aaa
std
jne
in
ljmp
inc
aad
push
out
jb
cmp
cmp
add
cmp
add
leave
dec
push
dec
push
dec
push
cmp
popa
jb
in
cmp
mov
das
mov
popa
dec
xlat
pop
into
mov
lods
mov
mov
sub
lea
aaa
xor
or
ja
jb
adc
out
movsb
dec
into
push
cmp
adc
mov
in
shlb
inc
inc
pop
mov
xchg
fnstsw
pop
test
dec
xchg
es
pop
jecxz
shl
dec
lea
mov
pop
cs
mov
outsl
mov
mov
cmpl
ja
push
adc
dec
mov
fcmovnu
fistpl
orb
add
push
orb
pop
xchg
andb
cmp
mov
dec
loopne
aaa
mov
andb
inc
fbstp
mov
repnz
in
cmp
cmp
cmpsl
imul
push
xor
xor
mov
shlb
pusha
sbb
xchg
mov
imul
push
imul
pop
xor
lret
imul
insb
mov
xor
sahf
imul
xchg
or
stos
out
ljmp
in
shll
mov
xor
xchg
les
std
cs
pushf
pop
mov
orl
aas
sbb
sar
mov
shl
and
cli
iret
jmp
aaa
push
push
scas
pop
out
sbb
xlat
adc
push
imul
mov
pop
sub
xchg
jg
icebp
int
pop
fwait
cltd
cmp
mov
mov
push
stc
inc
les
push
sbb
cmp
and
lret
test
rorb
push
dec
push
and
fists
js
and
xor
aad
mov
cltd
sub
jle
std
mulb
orl
dec
rclb
in
js
xchg
cmp
les
xchg
aaa
je
inc
cli
or
ret
inc
pop
add
or
xchg
andl
inc
sub
inc
mov
lods
xor
jl
leave
cmp
pop
int
popa
outsl
call
scas
jecxz
xchg
inc
fisubrs
sub
pushf
movsb
xchg
test
mov
out
call
imul
add
xor
sti
sbb
neg
in
mov
lret
stos
jl
je
shlb
ljmp
rcrb
repnz
sub
mov
push
add
shll
stos
push
push
mov
movsb
cltd
lcall
das
xor
pop
mov
lods
idiv
das
and
mov
or
in
jg
repnz
sub
stos
stos
push
std
mov
insl
shrl
jp
jns
mov
fdivrp
push
sarb
outsl
sbb
xor
mov
and
xlat
sbb
out
std
lcall
fcomip
mov
dec
and
nop
jle
daa
mov
mov
push
gs
ret
lret
fisubs
scas
jb
xor
imul
jp
mov
inc
mov
dec
int3
rcrl
pop
call
mov
inc
mov
outsl
sub
xor
cli
adc
jmp
and
pop
das
pop
mov
mov
push
cmpsb
sub
ficomps
int3
push
xchg
or
hlt
xor
sub
cmp
mov
fwait
stos
sub
fcoml
adc
sbb
xor
mov
adc
fs
adc
scas
mov
mov
xchg
lods
scas
xchg
push
xor
shll
mov
sbbb
xor
in
add
leave
add
pop
and
idivb
mov
aam
sbb
jae
xlat
sub
fcomps
jle
nop
push
push
mov
insb
test
fisubs
popa
push
scas
dec
jb
loope
jmp
or
rcrb
xchg
fxch
pop
mov
cmc
jmp
iret
ret
add
xchg
pop
hlt
inc
loope
and
pop
or
outsl
add
pushf
js
hlt
xchg
sub
mov
cmp
pop
or
stc
push
sarb
xchg
popf
inc
sarl
popaw
insl
or
cmpsl
sbb
out
sbb
jmp
push
enter
sbb
add
or
mov
dec
or
cmp
pop
xor
add
loop
es
xor
jg
adc
ja
repnz
sub
shll
xlat
mov
outsb
push
loopne
mov
int3
sub
loope
add
mov
adc
gs
in
into
iret
repnz
fcmovnb
push
aaa
dec
or
jae
mov
xchg
cli
lea
repz
lret
dec
outsb
push
je
sub
aam
dec
int3
popa
fcompl
inc
pop
adc
push
fstps
lods
jnp
jl
fsubrl
repnz
test
movsb
test
notl
xor
xchg
lods
repz
lock
es
loope
lret
cld
add
lret
and
xor
or
in
test
adc
adcl
add
arpl
cmpsl
xchg
dec
cmc
lods
stos
sbbb
mov
call
push
cmpsb
mov
pop
or
xor
lock
in
js
jo
imull
dec
adc
xor
and
cmp
lret
cltd
sub
movsl
jg
rol
pop
test
mov
add
into
sub
jmp
push
push
popa
xchg
or
lods
hlt
push
push
adc
popa
imul
das
out
mov
loop
jb
cltd
adc
inc
fisubl
aas
popf
jp
cmpb
in
arpl
xchg
mov
jmp
mov
mov
daa
and
mov
mov
xor
mov
push
jge
cs
pop
fnstsw
and
pop
mov
ljmp
mov
jns
mov
cmc
xor
movsb
pop
jmp
loopne
pusha
in
pushf
jns
fistps
push
and
push
fnstsw
pop
lret
adc
adc
mov
jno
std
inc
mov
or
stc
adc
bound
sub
in
jo
nop
arpl
int3
dec
outsl
arpl
cmc
mov
mov
and
in
sbb
jg
xor
or
fistpl
mov
cmp
push
adc
lods
cmp
les
outsl
shlb
pop
outsl
mov
in
stc
fucomp
xor
and
adc
jge
and
test
cmpsb
pop
call
add
fsubrs
push
dec
push
pop
je
mov
ja
fldl
lods
pushf
mov
dec
out
mov
mov
jl
jecxz
inc
sbb
je
mov
das
fs
outsb
into
inc
mov
ss
xor
dec
lret
aad
insb
dec
fldl
cs
xor
in
bound
pop
pop
adc
test
in
sahf
and
stc
lods
das
mov
mov
push
push
pop
shll
outsl
in
arpl
outsb
bound
leave
xchg
outsl
repnz
jle
rcr
ja
dec
inc
rcl
aad
fmull
dec
jne
push
and
fbstp
vandps
cmp
sbb
pushf
add
lea
cmp
inc
jb
pop
jnp
cld
daa
int
push
js
mov
mov
in
aad
pushf
or
sub
jge
pop
ret
dec
jle
jns
jns
add
repz
jno
cmpsl
clc
mov
jl
fsubp
or
push
repz
cli
inc
loop
sysexit
outsl
shll
lods
mov
mov
sti
rclb
leave
adc
jne
mov
mov
xchg
int
sub
mov
mov
imul
sub
imul
inc
and
mov
cmp
xchg
addr16
cmp
mov
stos
imul
rcrl
sub
xor
jecxz
popf
dec
xor
lahf
xlat
push
lcall
iret
mov
into
inc
adc
mov
pop
sbb
inc
cmp
mov
lods
out
popa
sbb
repnz
mov
sbb
fsub
test
insb
xor
mov
mov
add
cld
xchg
jnp
fimuls
js
cmp
mov
push
inc
add
sub
fwait
out
ss
jmp
sbb
clc
cmovg
dec
cs
add
and
adc
xlat
pop
fidivl
xchg
pop
and
pop
pop
fidivs
or
sbb
jmp
add
push
push
cli
sti
push
mov
popa
sbb
mov
sub
loopne
cmp
mov
lret
xchg
aaa
mov
popa
push
and
es
mov
orl
cmp
insb
dec
cmp
push
ja
imul
xchg
enter
dec
dec
cmp
call
out
xchg
fcompl
js
xorb
test
xchg
sub
mov
cmp
mov
xor
clc
pop
sub
cmp
sub
faddp
into
test
or
daa
insl
test
loopne
iret
jnp
mov
mov
pop
mov
xchg
sub
and
push
pusha
fdivr
les
and
xchg
je
sbb
fbstp
or
xor
mov
stos
es
daa
inc
xchg
shlb
ja
test
enter
roll
sub
test
sbb
mov
adc
and
fistpl
mov
out
push
add
cli
popa
mov
aad
push
and
lcall
ljmp
push
jno
add
fiadds
rolb
xchg
inc
test
push
xor
mov
jnp
inc
insl
lock
lret
dec
aam
stos
mov
xor
cwtl
xchg
mov
and
inc
mov
xor
fs
adc
mov
add
xchg
dec
add
jo
in
ss
fwait
push
or
adc
push
inc
gs
fisubl
test
int3
push
in
sar
xor
outsl
mov
outsb
xchg
dec
repnz
dec
pusha
xchg
cmpsb
cmp
jp
pop
clc
pop
scas
mov
xor
sub
adc
dec
or
mov
stos
cmp
xor
mov
outsl
mov
mov
aad
jge
cmp
jp
pop
xlat
call
mov
and
fsubrl
xor
sbb
xor
mov
rcrl
bound
add
cmp
test
ja
or
cmc
test
ljmp
mov
dec
xor
fildl
jge
adc
inc
lods
out
shl
jnp
or
out
andb
nop
or
add
adc
das
inc
adc
sarl
inc
sub
or
mov
add
mov
je
mov
mov
mov
push
icebp
and
mov
lcall
xor
call
jbe
fstl
lds
mov
pushf
mov
pop
aad
mov
or
or
xchg
mov
sub
mov
lret
insl
xlat
push
mov
adc
and
outsb
fwait
mov
mov
mov
pusha
leave
fwait
repnz
pop
add
mov
ret
push
lea
adc
or
xchg
dec
xchg
testb
sub
jae
lods
mov
mov
test
pop
or
adc
loopne
inc
adcl
jb
lahf
jb
xor
leave
aas
arpl
jae
imul
mov
outsl
lcall
sar
pop
xlat
xor
pop
repz
pop
mov
scas
sub
sbb
ljmp
test
fdivrp
lea
adc
fldenv
les
je
xchg
scas
inc
add
mov
xchg
fistpl
pushf
in
mov
mov
cvttps2pi
mov
cmp
mov
mov
or
cmpsb
call
or
mov
cld
sbb
pop
adc
push
cmc
adc
jmp
mov
je
and
ret
inc
shlb
lock
jo
xchg
push
leave
push
idiv
mov
push
lret
mov
mov
gs
repz
xor
test
sbb
mov
mov
addl
arpl
adc
xor
imul
lods
ja
xor
popf
loopne
aad
outsl
and
add
insl
dec
push
mov
mov
dec
add
jno
jo
mov
leave
add
mov
iret
shll
pop
inc
icebp
shlb
movsb
xchg
sub
loop
jbe
adc
cmp
loop
sub
xor
pop
addl
inc
stos
pop
or
xchg
sbb
jp
orl
fxch
into
test
sti
mov
aad
xlat
loopne
scas
das
rcrl
divb
shlb
mov
scas
mov
xor
dec
or
cmp
mov
dec
inc
push
add
mov
and
std
scas
mov
cmpsl
daa
inc
adc
and
pop
or
push
xor
cmc
mov
cmp
je
mov
sbb
add
xlat
outsb
aaa
push
daa
cmpsl
adc
loop
imul
push
imul
pop
or
adc
outsl
das
xor
pusha
cmp
jecxz
out
incl
fs
dec
sbb
push
daa
mov
setbe
and
mov
mov
jg
movsb
rcll
adc
push
leave
cs
test
push
sti
xor
test
lods
ss
mov
cmc
mov
and
insl
push
cmp
jmp
mov
mov
inc
mov
jmp
sbb
movsl
xchg
ljmp
lret
sbb
push
mov
adc
push
repnz
push
lret
rolb
mov
jp
out
cs
in
imul
ret
fstpl
sub
adc
pop
or
arpl
adc
ss
cltd
add
in
add
lds
jl
stos
jp
jmp
aas
push
pop
cmpsl
aad
mov
mov
fs
inc
mov
sub
pop
pop
mov
sub
mov
idiv
fstpl
add
fucom
mov
mov
mov
rcll
ficoml
test
xlat
adc
mov
mov
xchg
es
hlt
dec
test
xor
ficomps
movl
int
idivl
test
test
xchg
insb
adc
add
pop
ds
push
andb
scas
cmp
jp
dec
xlat
fimuls
jl
in
lahf
cld
jne
stos
mov
aam
pushf
aam
mov
repnz
pop
cs
enter
mov
xor
cwtl
fisttpl
test
xchg
je
push
rcrl
xchg
dec
sub
and
sbb
mov
jae
adcl
lahf
xchg
addr16
jnp
adc
xor
repnz
xor
push
test
cld
popa
leave
jae
mov
imul
inc
aas
add
cmpsb
xor
push
inc
jle
cli
cli
jg
xchg
out
lds
push
in
ja
pop
push
fnstsw
or
cmp
testl
sarb
dec
and
add
insb
lea
jbe
xchg
adc
pop
and
aam
mov
lahf
adc
push
cmc
out
fs
insl
and
pop
sbb
push
out
mov
push
sahf
cmc
out
xor
mov
mov
clc
ficompl
sbb
pop
into
jns
add
je
sbb
cli
sub
sbbl
push
mov
sbb
je
test
sbb
iret
mov
cwtl
popf
or
out
mov
mov
adc
mov
or
fsubs
push
adc
js
cmp
loope
mov
mov
out
xor
mov
fldcw
or
pop
dec
or
mov
clc
dec
cli
xor
sub
pop
and
inc
or
jo
add
stos
stc
push
cmpsb
test
jmp
aam
bound
loop
jmp
lahf
push
fcmovnbe
mov
ds
cmp
push
or
dec
mov
adc
in
iret
sbb
xchg
mov
or
es
add
mov
movsb
arpl
fistl
sbb
outsb
fcomps
mov
sub
pusha
jle
out
cmp
lods
int
movsl
into
inc
in
ficoml
mov
repz
mov
adc
adc
in
rol
addr16
mov
mov
mov
scas
test
lods
fsts
rclb
pop
sbb
int
pop
aad
sahf
jg
fidivl
clc
jmp
cmc
bound
popf
scas
loopne
mov
ss
mov
jle
push
stos
aaa
stc
mov
jb
pminsw
sbb
icebp
sbb
push
subl
and
cwtl
pop
sub
je
lods
jecxz,pt
mov
jecxz
and
loop
xchg
ja
and
and
aaa
test
jmp
fldt
test
jl
pushf
test
dec
sbb
loopne
stos
sub
mov
icebp
dec
push
xchg
sbb
push
leave
aaa
pushf
dec
std
mov
aad
cwtl
inc
mov
sub
inc
out
xor
add
cltd
loopne
aad
inc
mov
jg
sbb
cmc
adc
int3
lahf
pushl
mov
push
adc
pop
das
pushf
mov
std
cmp
cltd
xchg
ja
lahf
push
sbb
add
ljmp
jp
repnz
inc
stos
scas
sub
sahf
sbb
movsb
enter
pop
mov
or
pop
cmp
push
adc
imul
mov
xor
sarb
sub
or
outsb
mov
add
hlt
aas
sbb
pop
and
adc
adc
jb
jg
hlt
jmp
jns
ds
or
mov
roll
adc
outsb
mov
push
stos
ja
repz
fcomp
pop
push
xchg
mov
xchg
cli
enter
mov
call
stos
jbe
sbb
inc
and
lds
rolb
inc
or
push
popa
push
lahf
mov
mov
stos
inc
add
pop
data16
das
cli
ljmp
aam
pushf
cmp
xchg
rcrb
fbld
stos
xor
insl
stos
test
lods
jns
mov
adc
cmp
xor
sbb
clc
fwait
jbe
sbb
fisubrs
lds
pop
mov
push
mov
sbb
pusha
dec
sbb
ficompl
xchg
sbb
xchg
push
fsubrp
cmp
in
and
xchg
data16
mov
shll
jmp
fs
sub
or
sub
cld
cmp
xor
inc
popa
stos
xchg
icebp
mov
jl
xor
mov
incb
fidivrs
add
or
sub
push
scas
fstl
xchg
and
mov
mov
jbe
xchg
aam
aad
pcmpeqb
xchg
pop
enter
and
cmp
mov
adc
sahf
mov
popf
std
lds
insb
bnd
mov
pop
xor
add
dec
divl
inc
dec
add
adc
dec
out
mov
jl
shrl
imul
aad
sub
jns
jae
jb
cmpsl
inc
sub
shl
xor
mov
sbb
xor
push
daa
out
mov
sub
mov
into
in
les
nop
loopne
cld
jmp
xchg
ss
ret
sbb
jae
jo
iret
inc
jl
mov
stc
lock
cmpsl
fsub
into
ljmp
push
inc
and
insl
cmpsb
hlt
adc
ljmp
sub
mov
test
jmp
mov
fmul
inc
les
cmp
call
repnz
adc
mov
sbb
xchg
popfw
in
add
xor
int3
xor
loop
in
and
ss
lds
fcoms
xchg
mov
or
inc
in
pop
arpl
out
sub
adc
add
clc
lcall
adc
xchg
sbb
in
xchg
adc
lret
pop
stc
jecxz
sub
sarl
push
push
imul
aas
add
lods
in
scas
push
sahf
in
ret
inc
adc
jmp
add
data16
xchg
out
sbb
xor
cmp
movsb
daa
ljmp
pop
sub
xor
push
imul
and
add
call
inc
shlb
push
insl
pushf
aad
lock
push
cmpsl
fadds
out
aaa
outsw
add
mov
adc
sub
mov
jle
stos
sub
xor
out
outsl
add
ljmp
xor
int
call
adc
adc
pop
inc
leave
lods
lcall
cmp
js
in
mov
xchg
loop
loope
sub
mov
rol
stc
les
jne
xor
ret
mov
in
inc
std
push
repz
hlt
ljmp
jne
mov
pop
ret
ss
inc
decb
movsb
pop
lock
dec
lds
sarl
pop
xchg
pop
sbb
inc
xlat
sahf
imul
scas
aad
xlat
pop
lret
pop
mov
push
dec
push
mov
cltd
jae
inc
gs
and
mov
lods
mov
jl
insl
cld
xchg
push
test
or
fcmovnu
rcl
cmp
or
loop
repz
shll
lods
push
mov
or
ja
dec
mov
xchg
cmp
repnz
sbb
jecxz
cmpl
and
out
inc
lret
fidivrl
add
inc
sub
add
jns
out
mov
daa
test
add
ljmp
lcall
and
xlat
pushf
rorl
sahf
jnp
xor
cmp
sbb
jne
adc
cwtl
shrl
daa
sbb
pushf
clc
testb
mov
add
fimull
test
fisubrs
sbb
movsl
sbb
xchg
loope
sahf
lcall
orl
shl
shlb
and
sahf
xchg
ss
mov
leave
dec
popa
data16
popa
mov
mov
xor
mov
js
and
pop
sbb
sub
ja
lods
pop
or
dec
xor
mov
dec
data16
sub
pop
ja
sbb
push
sub
and
adc
push
shlb
mov
add
dec
daa
fs
add
cmp
and
mov
fdivrl
sbb
jo
xchg
iret
lods
mov
popf
rorl
dec
push
aad
loop
out
mov
pop
repnz
mov
or
or
mov
in
cmp
xor
rcrb
fnsave
pop
push
lock
mov
aas
xchg
pop
ret
ret
test
shrl
int
jecxz
rep
xlat
jecxz
dec
inc
mov
arpl
addr16
jmp
adc
xor
cli
cmp
cld
inc
fucomip
cltd
xlat
xchg
fidivs
sub
lret
mov
xchg
xor
fxtract
dec
sbb
lret
sub
lret
imul
jp
cmpsb
adc
jb
mov
jae
or
add
aaa
or
aaa
adc
lea
push
stc
leave
push
push
andl
pop
jb
add
pusha
xchg
jbe
xchg
push
ljmp
fisttpl
and
jge
lret
mov
push
sbb
mov
ja
mov
movb
xchg
imulb
pop
outsb
add
fistps
fs
loopne
jnp
xor
xor
cmc
push
iret
or
mov
push
add
and
xchg
sbb
arpl
xchg
lods
into
or
cs
and
xor
stos
ret
aaa
into
push
mov
js
jae
out
aam
cmpsb
aam
cltd
lret
adc
ficompl
and
xchg
mov
stc
dec
pop
imul
out
or
sbb
shrb
testb
xchg
pop
iret
pop
fidivl
dec
out
sbb
inc
mov
xchg
movsl
jle
fisubl
dec
jnp
and
and
mov
adc
outsl
dec
push
add
ds
gs
mov
mov
imul
and
xchg
sbb
sbb
jmp
in
in
stos
dec
jno
jl
in
push
sub
or
or
or
je
imul
bnd
xor
mov
xchg
std
mov
or
mov
and
es
loope
sub
cmpsb
fadds
lcall
mov
call
aaa
inc
movsl
inc
and
mov
adc
js
cmp
mov
cli
shll
ficomps
pop
and
xchg
push
sbb
push
stos
bound
push
sbb
lods
enter
xor
or
enter
inc
sbb
test
shrb
adc
adc
push
rcrb
fwait
sbb
es
rol
push
add
decl
cmc
outsl
mov
lret
or
jg
lds
push
popa
insl
sub
xlat
out
test
add
push
sbb
cmpsb
sti
popf
addr16
xor
insl
cli
and
fcompl
popf
test
xchg
mov
xchg
shll
dec
adc
or
sbb
fcomps
lock
pop
cmp
adc
cli
scas
mov
icebp
jl
mov
dec
jp
jnp
es
xor
cmp
lock
xchg
sti
add
outsb
rorl
push
ret
hlt
lods
jmp
mov
mov
mov
dec
loope
fsubrs
popf
inc
dec
int
push
push
mov
test
mov
cwtl
flds
push
jne
aas
add
inc
mov
sbb
scas
push
movsb
adc
push
fildl
sub
cmp
stos
cld
inc
push
and
push
lret
jecxz
aas
fwait
ljmp
daa
add
rclb
fwait
pop
cs
fadds
cmp
inc
jg
ret
mov
pop
pop
pop
leave
mov
xor
lds
mov
jo
daa
negb
or
jno
adc
ficomps
mov
fcoml
insb
mov
mov
sti
and
js
stos
dec
sub
ljmp
lock
test
jecxz
mov
scas
movsb
mov
inc
add
and
mov
jg
jg
cs
inc
jmp
fisttps
push
dec
ds
sbb
xor
imul
fsub
imul
in
jbe
aam
lcall
cmp
cmp
and
inc
push
sbb
xor
int3
les
fmuls
in
js
xor
xor
sbbl
jnp
aas
adc
sub
jo
mov
mov
iret
or
hlt
mov
add
dec
nop
pop
add
adc
ret
sub
add
mov
dec
sbb
push
mov
cmp
hlt
out
cmp
fbld
jge
call
sbb
mov
nop
leave
pop
xchg
mov
xor
push
xchg
popf
push
and
mov
arpl
sbbl
icebp
pop
popf
xchg
jp
adc
xchg
lds
adc
cld
push
mov
xor
pop
adc
inc
jb
mov
cmpsb
out
scas
cmp
jmp
in
dec
xchg
mov
xchg
std
cmp
test
lds
pop
repnz
movsl
pop
aaa
das
ret
jo
daa
xor
insb
jb
scas
sbb
loopne
sbb
adc
cmp
mov
inc
pop
out
xor
add
pop
mov
int
mov
lock
in
mov
in
xchg
and
jne
sub
in
sbb
int
fs
imul
aad
jns
jnp
pop
sbb
adc
jne
dec
push
frstor
mov
pop
sub
pop
xor
pusha
push
orl
adc
cltd
addb
mov
mov
sbb
sub
imull
xchg
sub
push
push
stos
jbe
sub
jge
dec
nop
mov
fisubrs
and
mov
inc
invd
fisttpl
add
or
sub
je
pop
cwtl
and
repnz
jmp
and
xor
pop
lea
xchg
adc
or
int3
out
jae
mov
hlt
cmp
fidivrs
pushf
adc
push
lret
adc
es
inc
out
iret
iret
cmc
inc
sarb
jg
lds
iret
je
or
cmp
icebp
pop
addr16
fldt
rcrb
mov
xchg
call
lret
jl
sbb
or
mov
jge
loopne
push
repz
push
add
sub
pop
jne
loope
faddl
cmp
or
frstor
xchg
and
clc
inc
xchg
push
lods
lahf
cmp
pop
nop
iret
jp
ficoml
jnp
or
fstl
cmpsl
nop
ficoms
das
push
test
je
adc
lock
sarb
mov
cmc
sahf
inc
pop
inc
xor
jae
or
jmp
scas
xchg
cmp
imul
inc
lahf
imul
adc
cmp
sti
addr16
jo
sti
icebp
and
fwait
dec
mov
cwtl
dec
xchg
negl
push
mov
jg
jecxz
frstor
iret
sbb
subb
cmpsb
jmp
fdivrs
inc
jmp
or
dec
jne
jmp
dec
popf
add
hlt
mov
mov
push
add
imulb
and
cltd
add
inc
push
sub
push
int3
mov
mov
mov
mov
xlat
add
mov
mov
shrl
sub
movsb
orb
nop
aas
aas
inc
gs
loop
lea
jmp
jge
or
andb
outsl
in
inc
aas
add
mov
int
repz
jl
xorb
fdivrs
fwait
pop
aaa
xchg
cld
enter
shrl
dec
jne
outsl
inc
and
xchg
repnz
dec
pop
sbb
and
xor
stc
lahf
xchg
gs
gs
mov
gs
push
mov
mov
adc
cld
dec
adc
cs
sahf
test
sbbb
mov
roll
inc
pop
inc
lods
or
add
xchg
xor
repnz
shlb
dec
pusha
mov
notb
outsb
push
cs
sub
andl
lods
add
inc
fistpl
pop
xor
push
xchg
iret
aas
push
dec
out
sbb
gs
push
pop
xor
pop
push
mov
jmp
rcrl
mov
xor
fiaddl
les
in
jecxz
lds
sbb
in
push
iret
adc
lds
mov
mov
testl
scas
fsubrl
pop
popf
dec
xchg
mov
bound
in
sbb
fadds
loope
out
cmp
xor
testb
xor
mov
loop
jl
stos
push
cltd
xor
js
jo
xor
or
dec
push
jae
cmp
sbb
add
push
sahf
pop
mov
lods
xor
push
cmovp
pushl
lcall
outsl
xor
xchg
xor
xor
stc
mov
repz
jecxz
test
clc
lret
and
push
scas
cmp
pop
cmpsb
push
jb
nop
in
dec
fimuls
xchg
pop
mov
or
cmp
out
add
and
mov
mov
mov
jns
add
lea
scas
cmp
or
xor
call
jns
aam
call
mov
fwait
in
inc
lcall
jl
and
xor
cmp
sbb
lcall
rcrl
xlat
pop
mov
xchg
test
cmp
call
xchg
xchg
lock
add
dec
and
in
lods
jl
imul
adc
test
sub
xor
in
adcl
pop
xor
icebp
ret
test
cli
xchg
or
sub
in
or
sub
sbb
inc
push
sbb
outsb
insl
push
adc
loop
cmp
pop
int3
push
adc
out
cli
jno
jb
addl
sbb
pop
fs
into
in
sub
repnz
lock
scas
xor
bound
add
dec
std
or
ljmp
jnp
pop
cmp
or
xchg
dec
in
sub
pop
mov
pop
dec
pop
mov
dec
aam
mov
and
repnz
loop
adc
dec
fnstcw
lods
cmpxchg
push
lret
sbb
scas
push
add
pop
xlat
inc
and
sub
mov
iret
adc
xor
icebp
dec
divb
push
nop
leave
mov
nop
push
mov
or
and
inc
dec
jp
mov
cmp
popf
mov
sbb
add
cmpsl
xchg
mov
mov
lods
add
xchg
inc
flds
or
aam
mov
add
mov
insb
push
bound
fbld
cmpl
adc
adc
gs
lret
cmpl
add
outsl
adc
xor
sbb
hlt
mov
scas
call
sub
pop
xor
cmc
adc
xlat
xchg
adc
js
cmpl
scas
push
sub
cwtl
and
data16
fildl
mov
adc
mov
mov
push
out
ret
mov
jp
in
add
add
popf
xlat
testl
pusha
sti
scas
loop
scas
icebp
xor
mov
repz
cwtl
mov
pop
lret
push
loopne
jp
pop
mov
int
cmp
data16
hlt
sub
and
les
fisttps
add
lock
imul
cltd
mov
add
add
jmp
movsb
daa
pop
pop
pop
int3
sbb
aas
shrb
push
lods
mov
jbe
loope
test
fs
lret
push
lea
add
ss
fstpl
inc
mov
out
ficoms
dec
pop
fildll
or
es
cmc
gs
sbb
cli
dec
jbe
fimull
xor
sti
shr
jbe
in
lret
mov
das
xor
out
daa
dec
daa
dec
push
scas
call
movsb
and
cmp
imul
xchg
iret
push
das
loop
ja
ljmp
cmpsl
mov
or
cmp
pop
or
lea
xchg
ljmp
call
subl
mov
scas
dec
push
arpl
jns
add
aas
ss
cmp
insl
jg
test
sbb
repz
and
movb
testb
loope
push
shll
pop
lcall
popa
and
mov
adc
fbld
fdivl
mov
xchg
mov
data16
stos
enter
cltd
scas
decl
repnz
cli
imul
xlat
cwtl
cwtl
popf
mov
cmp
cmp
push
js
das
pmaxub
ss
inc
jno
js
and
jno
test
dec
mov
das
clc
shlb
adc
addr16
xor
lods
jns
stc
mov
xor
loopne
std
dec
jecxz
mov
fistl
repnz
mov
scas
inc
pop
and
iret
mov
push
mov
aad
stc
les
sbb
dec
mov
mov
sbb
cld
data16
lahf
add
inc
stc
cli
xor
cmp
jo
dec
clc
lock
ljmp
dec
incb
lcall
ljmp
xchg
stos
js
push
mov
adc
cwtl
into
pop
sbb
in
insl
jb
iret
stos
pushf
icebp
mov
xor
adc
lods
popa
inc
sarl
sub
jecxz
popa
sub
rcrb
lea
mov
mov
xchg
ss
aad
sbb
pop
xor
xor
dec
inc
xor
mov
scas
mov
iret
pop
mov
dec
inc
hlt
xor
mov
insl
les
mov
xchg
jno
mov
out
cli
mov
loop
pop
je
test
xor
jno
or
mov
inc
mov
push
sbb
add
fcomps
insl
fwait
jecxz
pop
sbb
loope
daa
cmpsb
jecxz
cld
inc
adc
mov
mov
mov
lcall
shl
rolb
mov
and
push
mov
mov
pushw
fisubrl
gs
pop
pop
fucomi
outsb
lods
in
jb
mov
loope
imul
push
xchg
flds
nop
cmpsl
jnp
insl
insl
cld
daa
lret
mov
cld
in
inc
lret
and
mov
jmp
mov
insl
ficoml
xlat
xor
lcall
sbb
mov
or
add
pop
data16
mov
arpl
mov
jns
in
pop
loopne
or
xor
mov
mov
push
lea
movsb
aad
int3
test
pushf
push
icebp
sahf
dec
out
pop
or
mulb
out
pop
xor
loop
call
lock
jno
adc
out
ret
je,pn
clc
mov
adcb
push
movb
jb
mov
sbb
dec
jne
xchg
imul
les
add
jne
or
loope
mov
cmp
mov
mov
mov
push
xorl
pushf
adc
in
mov
leave
and
push
enter
sub
sbb
jno
call
popf
sub
divb
xor
dec
repz
test
inc
mov
aas
dec
adc
pusha
jl
mov
mov
or
jp
js
jmp
adc
cld
neg
add
jnp
cmc
ret
es
mov
sbb
cmc
and
repz
mov
sbb
sbb
loopne
mov
test
inc
fisttpl
popl
ds
psllq
mov
sub
or
jo
into
stc
test
ljmp
ljmp
rorl
aas
jno
xchg
dec
jl
stos
pop
inc
fisttpll
xchg
sub
cmp
jbe
xchg
jae
ss
call
jmp
dec
outsb
sbb
mov
add
mov
xor
inc
jl
mov
mov
out
pop
adc
push
and
cmpsb
xchg
sbb
and
or
mov
loop
jle
push
xor
pop
loop
xor
cwtl
rcpps
aad
and
pushf
filds
mov
sub
adcl
rclb
mul
stos
sbb
sub
dec
inc
mov
jne
aam
jmp
sub
pop
jp
cmp
cwtl
adc
lcall
movsl
mov
push
xchg
mov
sbb
and
xor
push
cmpsl
test
mov
hlt
dec
mov
add
jnp
lahf
sbb
mov
cmc
sti
in
imull
dec
pop
push
addb
push
dec
dec
mov
dec
lock
fbstp
or
mov
xor
out
push
pop
pop
pop
and
aam
xor
idiv
test
lcall
jae
cmp
xor
sub
lds
jge
ret
fldcw
dec
mov
hlt
jmp
dec
inc
addb
pop
or
sub
add
jecxz
dec
inc
test
or
lret
mov
icebp
dec
jmp
adc
dec
scas
call
lods
mov
sbb
fistpll
cmp
scas
cmp
insb
jle
jge
jp
and
lahf
sahf
js
les
jge
je
and
mov
xor
popl
add
mov
loop
push
jne
ret
inc
dec
dec
shll
adc
lret
push
lret
push
xor
fwait
ds
jns
cmc
lahf
sbb
lcall
cmp
fwait
jb
inc
shl
repnz
and
cmpsl
cltd
daa
xchg
jge
sahf
in
adc
cmp
lfs
clc
mov
icebp
icebp
ljmp
sbb
sub
mov
xchg
pushf
pop
mov
xchg
shll
jl
sub
leave
sbb
lds
sub
mov
mov
adc
addl
aad
addr16
shlb
dec
or
mov
mov
ljmp
cmpsl
xchg
or
pop
xchg
cmp
scas
xchg
scas
out
adc
imul
pop
push
push
movsb
cmp
pop
aaa
rorl
cltd
mov
push
jno
sbb
push
dec
out
repz
insb
mov
lds
pop
cmp
scas
cmpsb
mov
adc
outsl
dec
mov
dec
pop
inc
jbe
leave
and
pop
aas
aaa
imul
mov
mov
jo
add
pop
cmp
pop
pop
aaa
xchg
mov
into
mov
gs
jne
loopne
dec
subb
arpl
daa
cmp
add
mov
cmp
push
cmp
xor
loope
ljmp
aaa
aas
cmp
sbb
mov
int
fs
and
dec
lods
inc
inc
adc
pop
mov
sub
aam
pop
scas
mov
sub
and
xchg
jns
mov
scas
inc
pop
xor
xchg
mov
inc
js
or
mov
pushf
stos
jnp
mov
add
dec
outsb
subb
xchg
fidivl
mov
lret
inc
push
loopne
cmp
jno
cld
mov
ss
push
jo
mov
incl
cmp
int
and
xor
cmp
cli
inc
ljmp
sbb
jne
bound
rolb
scas
or
test
enter
sti
je
push
test
enter
scas
dec
lods
and
shl
mov
stc
sbb
dec
enter
mov
mov
xor
loopne
mov
pop
jns
lret
sbb
mov
cmpsb
fisttpll
ds
add
je
sbb
imul
cmp
pop
lcall
and
test
mov
mov
rcll
icebp
ret
insb
cld
lods
mov
test
aad
iret
jmp
cmp
in
or
sarb
add
cmc
mov
fs
cld
ss
mov
loope
insb
or
mov
arpl
cmp
test
inc
jb
xchg
iret
add
mov
int
shrb
aam
int3
or
mov
dec
out
mov
rclb
test
jge
arpl
daa
cmp
repnz
or
xor
in
sbbb
fbstp
mov
cmpsb
push
insb
orl
mov
fidivs
mov
mov
pop
movsb
or
rol
mov
adc
mov
stos
sar
cwtl
adc
add
jns
mov
imul
sub
pop
je
iret
or
movsb
inc
sti
sub
enter
jnp
andb
cmp
shld
pop
data16
inc
movsb
mov
lds
iret
pop
inc
add
pop
daa
pop
imul
pop
in
xor
gs
mov
and
pop
xor
repz
stos
popa
rcll
das
clc
and
inc
jle
cmp
into
lock
cmp
cmp
cmp
iret
mov
or
loope
js
and
mov
repnz
mov
or
push
and
sub
lds
loope
xor
mov
mov
and
roll
xor
push
fimull
xchg
fisubrl
and
pop
cmp
daa
lret
std
jns
mov
fs
adc
gs
stc
shlb
jns
push
lds
rorb
int3
les
push
xchg
out
mov
jecxz
jecxz
fnsave
out
cld
test
std
negl
jbe
sbb
jo
test
xchg
sbb
loop
push
inc
cmpsl
and
xor
mov
dec
sar
in
dec
out
cmc
addr16
mov
divl
mov
xchg
jg
xor
mov
enter
movsl
dec
pop
movd
mov
dec
mov
push
mov
subl
pop
nop
lahf
clc
xor
mov
cmp
bound
pop
adc
add
push
push
pushf
int
mov
rclb
mov
shll
andb
jecxz
sub
cltd
mov
pop
inc
rcll
jae
jl
scas
in
dec
pop
mov
adcb
mov
pop
or
pop
out
ds
add
cmpl
pop
inc
xor
jmp
or
push
ret
adc
fisubrs
push
mov
xchg
cwtl
mov
dec
pushf
push
pop
js
dec
call
add
or
ret
ja
mov
js
lahf
cmp
sub
push
mov
mov
jl
lods
sahf
aam
sub
jns
inc
xor
inc
sbb
jl
aam
mov
jae
push
xchg
xchg
arpl
jl
and
and
add
mov
fbld
inc
rolb
jns
in
sar
adc
sub
nop
or
gs
mov
inc
xchg
adc
data16
aaa
idivb
cmp
dec
fiaddl
adc
xlat
or
aam
js
pop
sub
jp
stos
fcompl
pusha
scas
jle
hlt
sub
stc
pop
xor
add
lds
mov
fsqrt
add
jmp
test
loop
jno
je
mov
out
lret
imul
sub
sbb
xchg
push
inc
xchg
mov
and
adc
repz
test
push
inc
cmpsl
mov
fisttps
dec
cmp
addb
xor
out
aad
mov
add
jno
sar
movsl
repnz
jno
fldl2e
push
sub
inc
shlb
ds
and
lock
jns
sti
mov
jmp
dec
mov
fwait
mov
sub
enter
sbb
xchg
push
aad
adcl
jb
cltd
loopne
sub
pop
inc
cmc
mov
xchg
cmp
jo
scas
mov
inc
or
xor
xor
sub
popa
mov
out
add
dec
mov
sbb
int3
add
jge
ja
and
fsubr
adc
ss
mov
jecxz
daa
mov
pusha
jno
xor
mov
fisttpl
rolb
mov
mov
popa
and
inc
jg
es
mov
int3
or
mov
cmp
inc
shll
je
icebp
in
scas
repz
fisttpl
or
cltd
xor
orl
or
test
clc
or
push
in
add
xorl
cmp
pop
dec
es
pop
sub
in
add
dec
xor
xchg
add
in
and
std
sub
mov
sbb
test
fwait
add
push
jecxz
mov
in
nop
dec
in
mov
fcoml
push
repnz
xor
and
fwait
add
cmp
mov
dec
out
popa
inc
fstpt
ss
in
outsb
xchg
add
lods
jne
and
xlat
mov
into
out
es
inc
adc
pop
sbb
mov
lods
sbbl
mov
cmp
ds
adc
xor
jb
mov
in
shrb
add
in
jmp
aad
ljmp
jb
push
sbb
jns
or
outsb
jns
adc
ror
xor
jae
popf
pop
jb
mov
push
push
fisttps
aad
and
dec
push
icebp
mov
xchg
sub
and
add
sbb
xchg
push
loope
xchg
xor
inc
and
je
inc
movsl
stc
xchg
mov
pop
jmp
pop
adc
test
fnstsw
and
jo
inc
clc
out
sub
sub
addr16
cmpsl
movsb
stc
inc
popa
leave
mov
imul
sub
inc
push
dec
push
mov
out
lcall
ror
jno
sbb
xlat
mov
push
out
lds
xchg
popa
adc
jge
mov
mov
and
pop
xor
add
aad
jp
mov
sbb
int3
xchg
jbe
insb
jns
aam
add
jb
dec
stos
jo
ss
push
xchg
ss
pop
test
sti
rorl
in
jmp
push
lods
loopne
popa
push
and
test
lcall
xchg
aad
inc
hlt
pop
pop
mov
fildl
pop
jno
imul
or
iret
sub
jmp
pop
aam
jbe
xchg
mov
int
int3
stos
repnz
mov
pusha
andb
push
sbb
dec
jbe
xor
sub
pop
int
imul
xor
lret
jl
xchg
pop
inc
jge
repz
pop
push
scas
shl
add
adc
jge
sub
lea
jns
and
pop
outsl
fs
jmp
jmp
aad
pop
outsl
mov
enter
sbb
fsts
pop
repz
lea
in
stos
ret
cwtl
inc
xchg
lods
adc
dec
mov
xlat
fiadds
fildll
neg
inc
loop
jmp
call
cmc
ljmp
enter
add
pushf
jno
sbb
add
and
std
stc
xor
mov
aas
fcoml
jae
jnp
rolb
outsb
add
inc
test
loop,pt
adc
nop
scas
cld
push
popf
pusha
pop
jmp
cmpsb
cmp
mov
inc
add
push
mov
jbe
push
rcrl
mov
rcll
sub
dec
pop
xchg
fsubrs
and
dec
push
stos
jno
jb
xchg
cmp
xchg
push
push
movsb
fadds
movsl
sub
incb
lea
les
dec
je
xchg
ja
mov
add
cld
gs
cmp
fldt
cmc
fistpl
cmpsl
mov
fldenv
mov
iret
sbb
mov
lods
pusha
lret
inc
movsl
stc
jnp
xchg
orb
sbb
sub
enter
lods
inc
imul
mov
mov
pop
les
push
and
add
sbb
or
test
stc
xchg
xchg
sahf
pop
sbb
jo
pop
and
jo
mov
jge
pop
push
mov
mov
xchg
inc
push
psubsw
push
xchg
data16
fisttpll
inc
ret
sub
sub
sub
fidivl
outsb
lods
pop
jae
mov
mov
cli
add
push
pop
cmp
jmp
cmpsl
jl
pop
add
mov
sbb
scas
pop
les
icebp
sahf
hlt
shlb
push
mov
push
or
push
mov
push
dec
pop
push
cmp
adc
lret
mov
aam
rclb
bnd
mov
out
arpl
jbe
jno
pop
inc
pop
inc
cmp
inc
mov
das
xor
lods
std
fldl
sub
xchg
lds
je
xlat
dec
jo
jbe
jg
iret
push
mov
add
repnz
fdivrs
push
ret
fmulp
sti
cs
push
sub
or
insl
mov
jmp
sub
sbb
aas
xor
mov
cmp
jne
stos
mov
ds
fildll
fs
cltd
xchg
mov
and
ficomps
push
adc
jne
xchg
jle
or
pop
sbb
cmp
clc
in
adc
jle
mov
mov
das
hlt
add
dec
scas
cmp
ss
mov
imul
sti
inc
sbb
ljmp
aaa
mov
and
jl
jne
out
aas
push
push
scas
push
and
mov
fadd
jp
xchg
pop
lret
mov
jns
aam
push
pop
cmpsl
or
jge
fimull
inc
xchg
sbb
flds
jg
out
inc
push
test
cs
cmpsb
xchg
inc
sub
in
cmp
jmp
sbb
cmp
xchg
adc
hlt
mov
sar
xchg
into
test
push
in
fldenv
or
mov
lea
adc
mov
inc
cwtl
mov
jmp
jno
imul
bound
in
into
inc
js
pop
push
jge
push
mov
scas
add
loope
pop
pop
stos
sbb
push
call
sbb
cmp
mov
mov
jne
ss
xchg
or
aad
mov
testb
fldt
cltd
out
js
into
test
leave
test
rcrl
das
insb
push
lock
nop
div
inc
sbbl
push
stos
xchg
test
gs
test
mov
test
test
iret
lock
pop
mov
cs
dec
dec
aam
cmp
mov
and
jecxz
jae
pop
out
popa
and
jbe
clc
lret
daa
mov
push
lods
and
cmp
inc
dec
push
jmp
cltd
fprem1
popf
mov
sbb
or
cwtl
rorb
aaa
jl
xchg
out
jnp
push
retw
fldcw
cmp
clc
filds
rcrl
pusha
mov
ja
gs
mov
xor
cltd
psubb
loop
clc
sbb
inc
jge
int
pop
insb
pop
movb
inc
mov
or
push
mov
fwait
sbb
les
ja
sbbb
mov
lahf
dec
jo
outsb
outsl
sub
fdivl
sub
sub
push
cwtl
inc
call
stc
sahf
push
shl
or
add
pop
out
mov
xlat
arpl
lds
inc
push
sti
popa
sbb
push
lea
pop
les
or
or
xor
movsb
std
stc
sahf
or
testl
mov
add
dec
pop
rolb
neg
sahf
dec
arpl
sti
pop
rorb
imul
xchg
in
push
cld
sarb
push
mov
mov
sti
bound
or
mov
jle
dec
cmpsl
jp
jno
push
mov
roll
testl
adcb
xchg
mov
lock
outsb
mov
rorl
icebp
or
popf
nop
xorl
push
mov
adc
pop
lock
mov
pop
pop
cli
sbb
pop
out
imull
sbb
loope
nop
lret
mov
call
hlt
daa
jmp
mov
push
stc
test
mov
sti
push
cmp
push
inc
add
dec
push
pushf
fists
dec
sbb
xor
inc
xlat
pop
call
xchg
adc
and
or
js
loope
push
or
jecxz
icebp
inc
scas
sbb
jns
in
aas
loopne
push
icebp
add
cmc
sbb
stos
movsl
popa
push
push
inc
mov
gs
insl
jg
push
outsb
add
add
pushf
inc
out
mov
xor
loop
imul
mov
movl
xor
dec
xchg
andl
dec
add
lock
xchg
imul
mov
daa
and
loopne
ret
repnz
jo
jge
pop
movsb
dec
aad
push
jo
into
add
stos
pop
xchg
aaa
pop
push
sbb
cmp
mov
fisubl
lret
cmp
cmp
enter
cltd
repz
add
sub
jle
iret
movsl
sub
cmp
jnp
cmp
loope
sub
add
mov
sbb
call
data16
mov
and
out
iret
sbb
mov
roll
dec
jb
sbbl
and
push
lea
loope
fcomps
mov
mov
rcr
sbb
mov
mov
fldt
inc
cmpsl
cmp
cmpb
mov
xchg
xchg
test
mov
xchg
enter
gs
xlat
scas
add
push
jmp
int3
jp
adc
cmp
popa
mov
xchg
mov
cmp
jae
inc
mov
imul
xorb
add
lret
and
mov
lret
sbb
mov
pop
mov
or
mov
mov
xor
sarb
arpl
mov
pusha
jle
xor
jge
out
mov
les
jb
pop
or
mov
loopne
push
cltd
adcl
mov
jmp
cmp
xorl
pop
jmp
or
aad
sbb
sti
sbb
fcompl
pop
dec
sub
lds
fbld
subb
or
sub
fdivp
sarb
mov
mov
dec
sub
test
dec
jecxz
pushf
xchg
lret
ja
pavgw
mov
xchg
cltd
xchg
adcl
cmp
pop
mov
jnp
shrl
gs
sub
mov
ror
jl
aas
mov
or
std
out
ret
icebp
pop
sbb
jo
pop
sub
jle
pop
jnp
sbb
mov
xchg
sub
inc
mov
dec
push
mov
gs
or
lcall
out
mov
cmp
stos
xchg
push
inc
mov
out
adc
pushf
imul
test
jge
dec
data16
lcall
lods
jb
push
xchg
cmpsl
mov
loope
mov
push
pop
cs
rolb
cmp
test
pop
or
xchg
data16
inc
lds
roll
xlat
mov
cwtl
aaa
adc
fistl
loopne
hlt
rcll
ret
xchg
lods
inc
fmull
das
push
dec
mov
sub
xor
lret
adc
mov
or
xor
shll
mov
popf
and
test
rclb
pop
mov
dec
jbe
rorb
fisubl
xor
adc
xor
nop
mulb
in
xchg
outsb
mov
cs
mov
sub
or
sub
sub
adc
icebp
adc
mov
icebp
xor
push
lea
dec
lock
inc
out
jno
add
sbb
cmovae
xor
jns
jg
scas
daa
std
pop
sub
xchg
inc
out
repz
and
mov
xchg
sub
adc
pop
pop
mov
popa
add
mov
dec
lds
clc
add
pop
call
pop
mov
orl
lds
sbb
jns
push
xchg
pop
or
xchg
aad
xchg
cli
adc
xchg
test
fsubs
pop
jl
mov
iret
std
adc
add
mov
outsb
inc
push
jns
sti
out
dec
hlt
and
xchg
mov
enter
adc
clc
addr16
les
mov
push
dec
and
push
and
call
xchg
aam
inc
ds
jp
mov
xor
popa
iret
push
out
and
lds
mov
mov
stos
xchg
jmp
insb
lcall
sub
xchg
std
imul
sahf
imul
loop
sbb
out
movsb
cwtl
xchg
ficomps
divl
and
mov
std
xlat
or
jmp
call
or
mov
inc
xchg
out
cwtl
out
adc
jb
xchg
dec
mov
jg
inc
dec
mov
ret
aam
sarl
or
xchg
cld
push
sub
mov
mov
repnz
arpl
pop
repnz
gs
sti
test
mov
lcall
push
pop
mov
incl
xor
in
sub
addr16
and
push
pop
das
clc
lahf
daa
roll
mov
dec
scas
add
rcrl
insl
push
push
add
stos
sbb
add
lahf
mov
mov
es
ljmp
inc
inc
and
sub
push
aaa
movsb
insl
outsb
mov
lock
das
fiadds
popf
xor
pop
push
cmpsb
loope
xchg
mov
push
pop
xchg
rcll
add
enter
pop
movsl
or
mov
mov
xchg
mov
add
fcoml
cmc
xor
loope
mull
and
gs
fbld
xlat
popa
pop
mov
mov
pop
lret
push
inc
sbb
sbb
cmp
xor
out
fwait
movsl
ss
shlb
xor
xchg
xchg
lds
mov
jns
mov
mov
adc
push
cmp
negl
loope
enter
in
xchg
inc
adc
scas
jae
sbb
je
mov
in
stos
push
popa
push
fwait
scas
cmp
repz
out
mov
scas
pop
ds
jg
mov
push
sub
sbb
adc
in
aas
sbb
dec
test
or
add
dec
add
sbb
int
icebp
stos
push
sub
movsb
sub
push
or
leave
pop
xchg
scas
jbe
pushf
ljmp
cli
mov
repnz
in
push
orl
mov
push
sti
sar
jb
pop
and
dec
pop
add
pushf
inc
loop
jp
lahf
push
loop
adc
test
aam
jmp
add
jno
adc
add
jbe
add
and
dec
loop
std
inc
sbb
orb
pop
fwait
jbe
sub
ljmp
aaa
test
jmp
ja
cmp
repz
loopne
mov
xor
rorb
push
mov
mov
call
cmp
cltd
pusha
jno
xchg
push
mov
inc
or
mov
sbb
lret
sbb
addr16
int3
lcall
mov
jae
lahf
or
jbe
outsb
fldcw
jg
xor
push
sbb
or
mov
icebp
mov
dec
inc
pop
jb
leave
iret
bound
inc
loop
push
mov
leave
insb
repz
jecxz
sbb
sbb
push
lock
mov
pop
sbb
xchg
mov
mov
cmp
and
dec
sub
lock
mov
dec
pop
bound
imul
jge
roll
popf
mov
xchg
mov
sbb
shr
mov
dec
lret
inc
jge
pop
loope
adc
imulb
sub
gs
and
xchg
or
pop
inc
aad
inc
lods
aam
mov
pop
shll
adc
dec
pop
xor
add
jl
push
test
movsl
and
fdivr
adc
pop
sbb
push
push
mov
inc
in
mov
fsubl
in
popa
push
sbb
push
pop
xchg
insb
je
int
cli
pop
pop
cwtl
push
xor
mov
sti
mov
mov
mov
aad
rorl
leave
nop
mov
jmp
lock
push
addb
lds
cmp
pop
adc
js
jl
lock
sbb
xchg
popf
sub
push
rcrl
repz
ret
fisubl
test
mov
es
add
das
aas
xchg
dec
testb
xchg
xlat
out
mov
dec
shll
sahf
and
aas
push
jo
jle
sub
dec
call
push
sub
in
fistpl
or
cltd
xchg
jno
jge
and
in
subl
dec
and
aad
js
fisubl
push
mov
enter
call
das
xchg
add
mov
xchg
ljmp
dec
mov
mov
test
lods
cmp
push
test
cwtl
xchg
lcall
outsl
imul
xchg
inc
pop
loopne
out
dec
std
pop
test
int3
outsb
in
inc
dec
pop
popf
and
es
outsl
sti
inc
push
cmp
iret
jno
out
xchg
push
clc
enter
data16
pop
popa
repnz
adc
and
int3
jae
les
or
add
in
subl
inc
test
clc
dec
cmp
inc
es
jmp
lret
cmc
xlat
arpl
xlat
mov
aad
stos
or
lods
pusha
jno
add
add
popa
pop
sub
cmpsl
je
mov
std
clc
mov
add
sbb
scas
sti
mov
push
xchg
int
push
ss
cmp
sbb
test
jae
sbb
inc
add
add
repz
out
test
adc
push
imul
ret
aad
ret
xor
add
jp
dec
jp
inc
or
es
call
popf
ljmp
das
add
jecxz
pop
jb
aam
push
popf
add
inc
xchg
mov
mov
jo
dec
xchg
dec
xor
nop
push
xor
lods
aas
shrl
adc
test
inc
out
add
cmpsl
inc
xchg
lds
jbe
lahf
dec
pop
mov
pop
sti
cmpsl
xchg
pop
push
rcrb
in
fprem
and
lret
jge
rcl
mov
xor
and
mov
push
jg
xor
stos
lds
movsl
xor
pop
enter
lea
pop
aam
sbb
cmpsb
loopne
push
popa
dec
push
jnp
lret
push
insb
or
test
or
das
scas
add
push
stc
insl
testb
push
xorl
lds
jmp
jl
pop
fisubl
js
pushf
cmp
mov
and
cmpsb
lcall
xchg
add
sbb
notl
aas
lods
daa
cbtw
and
das
mov
pop
mov
pop
mov
shl
jecxz
mov
xchg
and
mov
bound
push
popa
lret
dec
push
cmp
or
fnstsw
and
cmpsb
sbb
add
mov
outsb
xchg
adc
into
jle
jp
out
pop
test
dec
mov
mov
push
dec
cli
shl
nop
aas
xchg
leave
lock
pop
nop
mov
hlt
inc
lea
sbb
insb
mov
sahf
sti
cmp
movsb
outsb
insb
mov
mov
cwtl
mov
movsb
mov
pop
sbb
or
loopne
pushf
les
lods
pop
add
push
pop
jbe
sbb
out
loope
outsb
sbb
inc
and
imul
iret
repz
sub
fistl
out
call
aaa
pop
mov
mov
nop
cltd
fsubp
fisubs
lret
sbb
mov
mov
stos
push
xor
sbb
inc
add
add
push
call
std
cmpsl
pusha
int3
out
dec
mov
into
sbb
out
gs
sbb
sbb
mov
insl
pop
inc
ds
arpl
insb
loope
in
in
mov
sub
jge
sbb
aaa
add
jns
adc
out
mov
lds
pop
sub
dec
aaa
icebp
dec
jb
jge
cmpsl
out
xor
fisubrs
bound
enter
mov
aad
std
lods
icebp
push
gs
imul
adc
repz
fldenv
sahf
ljmp
mov
je
inc
lds
fistpl
dec
shl
xchg
js
xor
mov
inc
xor
or
sub
inc
rcr
out
cltd
add
jmp
xor
orl
jnp
inc
sub
mov
cmp
sbb
imul
cld
mov
jns
or
aam
xchg
fnstcw
ja
sub
add
cmpsl
loopne
enter
cmp
cld
test
in
insl
filds
xorl
jns
and
into
sub
lea
mov
enter
fwait
and
stc
lahf
pop
loope
in
das
and
roll
sbb
into
push
sahf
shlb
inc
sub
aaa
daa
add
or
in
fisttpl
sbb
addr16
mov
xor
fwait
sahf
iret
dec
repz
pop
arpl
pop
inc
sbb
xor
xchg
movsl
and
insb
gs
das
test
in
mov
mov
cltd
aaa
mov
aam
pop
xchg
fwait
mov
jp
mov
mov
xchg
adc
fcomp
xchg
inc
in
jo
sub
mov
cltd
sub
adc
inc
mov
fs
pusha
sbb
call
pop
inc
sbb
aam
in
add
mov
push
pop
data16
sbb
lret
inc
xor
jo
scas
stos
push
jmp
sahf
xor
in
sub
xlat
out
lock
push
jns
fwait
das
jl
out
inc
out
jns
inc
scas
jne
xor
std
es
push
inc
clc
cwtl
sbb
sub
and
daa
loopne
jl
cmp
lods
mov
addr16
push
mov
xchg
dec
mov
push
inc
mov
iret
and
mov
pop
pusha
cwtl
in
cmp
jg
aad
daa
leave
push
adc
in
mov
sub
pop
and
and
loopne
mov
pop
sbb
pop
sbb
sbb
sahf
mov
repz
push
addr16
insl
fildll
subl
test
inc
mov
in
mov
aam
sbb
mov
jp
fistl
push
inc
fdiv
jle
cmpsl
clc
clc
xor
jle
fimuls
sub
mov
enter
cmp
xchg
js
mov
adc
or
mov
outsl
in
neg
test
stos
jmp
add
mov
ficomps
sub
out
jmp
shrb
mov
adc
adc
add
insb
and
push
dec
pop
inc
or
and
ret
jl
xchg
xor
pop
push
dec
outsl
and
aam
int
int
into
ret
and
leave
dec
jb
push
mov
sbb
xchg
sub
scas
adc
or
jg
lods
pop
shrb
imul
or
popl
mov
mov
xor
sbb
sbb
push
add
pop
xlat
sub
inc
imul
sbb
mov
push
xchg
adc
sti
and
xchg
ret
movsl
imull
xor
or
rolb
pop
fwait
jle
jae
push
iret
add
or
mov
out
mov
imul
push
inc
jns
call
in
bound
or
in
movsb
fwait
lcall
dec
rcl
pop
and
int3
ja
inc
cs
pop
in
stc
rclb
pop
sbb
pop
pushf
cli
test
cmpsb
daa
xchg
sub
pop
in
fcomps
mov
and
repz
add
sbb
mov
test
xor
xchg
jnp
imul
inc
push
bound
push
mov
loopne
jnp
adc
jnp
inc
xchg
cli
push
dec
bound
aad
mov
add
push
test
subb
sub
iret
ds
stc
sbb
and
mov
inc
xchg
and
mov
sub
jo
rcll
fdivr
sbb
jg
cld
movlps
inc
ljmp
out
mov
pop
or
sub
les
fcoml
nop
cmp
dec
iret
scas
lea
mov
mov
jns
in
leave
movsl
and
jae
add
enter
push
dec
mov
std
cs
fnsave
and
jb
sub
daa
jns
pusha
cmp
dec
mov
inc
out
sbb
fcmove
js
leave
sahf
out
push
lods
inc
outsw
es
idiv
mov
fs
add
mov
mov
cmp
cmpsl
dec
or
jne
inc
outsb
and
inc
jns
pushf
test
stc
lods
mov
call
or
jp
add
adc
pop
mov
jmp
jecxz
dec
out
jo
jae
xor
rorb
mov
std
jle
int3
movsb
push
scas
mov
xor
dec
test
add
into
lock
lods
inc
jnp
adc
mov
leave
inc
jg
cmpsb
fdivl
fcmovnb
mov
inc
es
aaa
mov
mov
cmp
arpl
repnz
jmp
dec
push
cld
popa
test
pop
data16
or
daa
adc
push
lea
dec
cmp
arpl
aaa
or
jne
lods
testl
insl
push
jmp
xchg
in
push
sub
cmpb
pop
mov
popa
pop
xchg
push
mov
push
adc
movsb
aad
cwtl
inc
test
push
inc
mov
pop
shrb
xor
sbb
mov
fidivl
daa
sub
pop
mov
jge
faddl
mulb
enter
cld
pop
mov
mov
pop
jmp
stos
jmp
in
sbb
mov
arpl
lahf
push
jge
fnop
cmp
cltd
neg
rcr
into
jbe
xor
xchg
into
sbb
lock
scas
popf
push
jle
ss
pusha
pop
cltd
xchg
into
adc
popa
shll
push
add
push
adc
push
xchg
outsl
adc
movsb
jge
and
das
dec
fstpl
pop
jl
in
mov
outsl
add
ret
cmc
divl
push
sarl
dec
pop
mov
xchg
jmp
xchg
ds
out
dec
repz
lret
ja
in
mov
test
xchg
enter
fistps
clc
sbb
insb
cmp
mov
iret
xchg
arpl
stc
in
test
or
insb
scas
sti
push
stc
sahf
mov
mov
xor
xchg
mov
inc
out
sti
bound
fs
lods
movsb
fidivl
out
stc
test
stc
sbb
pop
nop
mov
jbe
int3
push
fistpll
mov
add
cs
test
popa
rcll
dec
das
loope
mov
je
xchg
fwait
xchg
sub
xchg
jmp
adc
mov
std
or
jns
loopne
das
sbb
leave
inc
adc
push
idivl
leave
subb
ss
xchg
xor
rclb
pop
add
enter
ja
inc
pop
pop
push
sarl
or
mov
ja
lcall
and
jbe
test
rcrb
inc
xor
lods
arpl
lods
push
push
xchg
mov
adc
cmp
adc
mov
inc
test
and
lahf
xchg
and
push
popf
adc
loop
sbb
xchg
jbe
out
pop
mov
mov
std
cld
xlat
aam
sub
mov
sub
mov
pop
cltd
inc
mov
notl
fstps
imul
ret
sbb
test
leave
es
leave
rclb
lahf
sahf
jge
sub
imul
jb
pop
mov
fmull
comiss
test
lcall
aam
add
mov
jne
mov
push
nop
jo
adc
js
aam
test
add
add
inc
mov
aad
dec
repz
inc
xor
sbb
stc
js
iret
mov
mov
in
popa
or
jmp
mov
sub
xchg
fcompl
or
cmp
fs
mov
xor
insl
dec
adc
xlat
pop
in
xor
mov
cs
xorl
fstp
push
popa
test
xchg
sti
dec
add
test
movsb
dec
sub
add
aad
jp
mov
jb
mov
addr16
arpl
pop
inc
or
aaa
xor
popa
movsb
or
sahf
push
sub
add
popf
aam
jnp
fstpl
imul
adcb
shll
cmp
pushf
mov
movsl
pop
mov
mov
std
dec
jne
push
movsl
imul
adc
cli
mov
and
mov
subl
mov
repnz
xchg
popf
push
arpl
out
sub
xor
push
hlt
sub
insl
iret
mov
cmc
test
repz
xchg
or
outsl
out
sarb
fistpll
jle
insb
scas
arpl
cmp
mov
push
sarb
rcr
mov
adc
and
dec
adc
cli
push
mov
mov
std
jae
pop
mov
imul
xchg
pop
insb
ljmp
mov
pop
stc
in
movsl
sbb
xlat
xor
pop
jno
cmpsb
dec
hlt
xor
push
xchg
dec
sti
sub
and
call
les
std
loopne
lret
test
out
scas
sti
je
push
xor
daa
push
ja
leave
mov
mov
std
mov
lds
jno
lahf
cmp
mov
push
ret
int
xchg
fmull
sahf
fwait
and
add
ret
cmp
icebp
adc
outsl
inc
dec
js
test
mov
xchg
cmpsb
dec
and
adc
sub
pushf
and
sbb
outsl
imul
andb
jecxz
mov
mov
push
fisubl
xchg
insb
push
mov
das
in
mov
jae
jb
cmp
cmp
push
sub
xchg
mov
sti
sbb
xor
mulb
add
fiadds
rclb
iret
movsb
inc
pop
sbbl
fimuls
inc
cmp
and
inc
mov
fmuls
or
das
out
ret
pop
lret
notl
int3
push
pop
push
mov
clc
jnp
jns
scas
std
cmp
dec
sbb
cmp
lock
jb
mov
enter
lret
inc
pop
daa
sub
cmp
cli
dec
lds
movsb
outsb
pop
and
cmc
lahf
repnz
sub
nop
test
mov
pop
jmp
pop
xor
cli
cmp
andl
xlat
out
push
mov
and
jne
mov
fs
jnp
lock
lret
shrl
mov
jo
shll
cmp
sbb
and
jb
pop
push
pop
inc
lret
outsb
subl
test
pop
jl
inc
inc
enter
scas
test
sbb
dec
mov
xorb
mov
sbb
leave
xlat
shlb
frndint
cmc
lods
pop
xlat
xor
jnp
inc
pop
iret
add
dec
jl
in
clc
shrl
out
mov
push
cmp
cs
dec
and
or
xchg
scas
fisubrl
xor
mov
mov
cmc
data16
fadds
xor
or
stos
cmp
jmp
and
inc
mov
mov
lea
inc
adc
or
loopne
cmp
stc
mov
cltd
xchg
mov
adc
or
in
add
mov
stc
dec
mov
sbbl
in
mov
pushl
pop
xor
ljmp
mov
ss
dec
jl
loop
jae
and
inc
pushf
sbb
ret
out
and
andb
sbb
and
cld
push
cmp
fwait
movsl
mov
adc
movsb
cmp
mov
mov
je
push
xor
in
ja
sbb
xchg
adc
jnp
mov
js
cmpsb
push
inc
jge
arpl
imulb
and
lods
jmp
leave
bound
push
sahf
sbb
lahf
icebp
in
push
repnz
mov
push
inc
xchg
pop
push
in
stos
and
outsl
scas
pop
pushf
lret
enter
xchg
push
test
xor
sub
js
lea
xorb
mov
repnz
loop
lea
mov
icebp
or
add
jge
cmp
jecxz
mov
jns
test
insl
sub
jle
xchg
imul
sbb
ss
inc
cwtl
dec
sti
daa
cwtl
adc
hlt
into
and
mov
incl
adc
outsl
mov
inc
or
pop
or
add
sbb
jb
test
call
xor
dec
insb
stos
hlt
xchg
jecxz
pusha
xor
clc
clc
cmpb
push
push
arpl
mov
insl
divl
or
scas
lods
cmp
les
sub
fstl
xchg
lds
lret
or
adc
mov
outsb
sbb
dec
add
out
ss
loopne
cmp
sbb
fadds
jp
xchg
and
push
rcrb
insb
sarl
xorb
sub
loope
lods
jp
fs
ret
in
add
mov
out
sbb
or
and
inc
fsub
sbb
call
insb
gs
push
and
mov
xchg
push
test
aas
sub
xchg
ret
enter
adc
adc
idivb
mov
cmpl
push
jae
mov
add
sarl
pop
mov
adc
and
fldl
mov
jo
dec
inc
lahf
addl
sbb
lahf
jo
jle
mov
pop
out
pop
fwait
inc
cmp
push
mov
mov
repz
sub
mov
adc
and
and
and
ret
pop
call
jnp
lea
cld
adc
sbb
cld
jp
notl
jp
in
xchg
add
xor
stos
ret
jge
jp
repz
rcll
add
jb
xchg
jecxz
sub
ret
insl
lods
std
xchg
gs
ja
test
mov
test
pop
cmp
xchg
sbb
call
xor
mov
or
out
inc
xor
scas
xor
mov
jnp
sbb
xchg
stos
xchg
inc
jnp
push
mov
scas
mov
insb
jle
sti
mov
movsb
or
mov
xorb
imul
hlt
out
scas
lret
fwait
xchg
fdivrl
cltd
ret
dec
loopne
jae
sbb
repz
sbb
pop
mov
out
pop
xchg
add
ficoml
pop
out
aad
inc
pushf
push
adc
sbb
insl
icebp
xor
fstps
sub
lret
mov
divl
outsl
inc
loop
and
xor
cmpsb
sbb
clc
sahf
and
xlat
pop
mov
inc
ja
fsubs
mov
jb
push
ss
mov
adc
fstl
mov
mov
js
cltd
cmp
adc
push
cs
push
cmpsb
jle
arpl
inc
cld
fiadds
outsl
or
int
xor
aam
sub
jbe
inc
in
jae
mov
das
mov
stc
cmc
orb
jb
xchg
shll
mov
or
bound
adc
xor
std
mov
test
inc
dec
gs
scas
js
jno
xchg
std
repnz
mov
cmp
inc
push
add
xor
add
jbe
mov
sub
jp
outsb
sbb
aaa
and
push
adc
addb
insl
scas
pop
and
adc
nop
aas
fidivrs
cwtl
repz
push
dec
insl
cmpsb
adc
outsb
jns
adc
inc
cmc
popf
cmpsl
fisttps
clc
sbb
mulb
mov
mov
mov
push
je
hlt
inc
rorl
pop
cmpsb
and
inc
mov
dec
or
inc
or
mov
icebp
sub
pop
fprem
mov
sub
jo
sti
repz
fiadds
mov
ljmp
jmp
lcall
and
hlt
mov
ja
fistl
addr16
stc
cmpsl
fxch
loop
aam
andb
cmpsb
outsb
es
or
cltd
ret
mov
xor
jbe
ret
cmc
add
loop
call
lods
negl
push
stc
lods
or
inc
pop
bound
insb
pop
jecxz
subl
inc
jno
pop
jecxz
in
mov
inc
jb
inc
pop
pop
cwtl
fcmovbe
cld
jle
mov
lret
js
aad
inc
in
loopne
ljmp
fisubrs
stc
jae
pop
sub
dec
jge
aaa
add
sub
mov
mov
fwait
ror
pop
shll
jmp
push
insl
xchg
mov
mov
pop
or
nop
clc
jge
addr16
adc
test
popa
lea
pop
and
cmpsb
push
cmp
sti
addr16
mov
jo
mov
bound
inc
mov
mov
das
pop
dec
mov
push
pop
mov
idiv
push
xor
pushf
pop
loope
sub
div
mov
mov
push
in
and
movsb
popf
mov
aas
xchg
inc
pop
xchg
cmpsl
xchg
in
or
stos
push
std
dec
cltd
xchg
xlat
jne
rcll
out
mov
xor
mov
mov
aam
xchg
mov
mov
mov
les
xor
in
imul
sub
sbb
mov
push
cltd
shll
in
xor
add
mov
jno
fs
mov
shlb
jecxz
icebp
mov
mov
pop
fsubrp
popf
mov
xchg
dec
xchg
add
lret
fistl
cmp
cmc
aam
mov
xor
push
jb
lret
pusha
adc
add
mov
bound
das
test
xchg
lods
sbb
sub
jle,pn
stos
add
iret
aam
pop
push
push
movsb
mov
test
inc
jno
pop
movsl
scas
mov
sbb
fs
fs
cmp
out
imul
xchg
pop
ja
ret
jns
lods
shrl
xchg
ss
mov
cmp
out
aas
repnz
lahf
cmp
call
dec
sub
push
xchg
mov
cmpsl
or
sbbl
pop
insb
test
jecxz
in
jmp
in
xchg
xchg
pop
jae
inc
dec
ja
pop
xchg
loop
xor
cmp
pop
mov
mov
add
mov
add
loopne
xchg
lock
aam
sti
sbbb
outsb
cmp
push
and
add
sub
scas
out
das
mov
dec
xor
pop
add
cmpsl
sarl
mov
in
jbe
xchg
or
sub
cmpb
fstps
test
shll
cmp
scas
sti
das
xchg
addb
ficoms
int3
leave
or
cltd
xchg
mov
mov
jns
add
adc
push
sti
sahf
cmp
mov
jae
pop
mov
aaa
vpsubw
leave
movsl
sub
xchg
adc
push
imull
lahf
pop
outsl
cmp
sub
dec
rcrb
jge
add
js
inc
pop
push
inc
jmp
jne
movsl
mov
push
and
les
fldt
dec
sti
sub
cli
lea
adc
stc
subb
mov
mov
and
dec
sub
pop
pop
or
fs
dec
idivb
int3
in
xchg
mov
neg
mov
sub
xor
push
mov
or
pusha
xor
les
ja
pop
mov
xchg
outsb
sub
dec
mov
jp
cmpsb
in
push
mov
vmovapd
rcll
cmp
scas
or
seta
xchg
mov
add
pop
sub
lcall
sub
mov
outsb
cmp
lahf
dec
add
repz
cwtl
adc
xor
stos
subb
imulb
les
or
cld
ljmp
es
push
xchg
sub
sub
add
mov
enter
shlb
lods
add
rolb
xchg
mov
gs
frstor
or
insb
lods
sti
xchg
jl
cli
fsts
inc
loopne
outsl
mull
add
xchg
mov
adc
dec
push
pusha
mov
pop
adc
fxam
call
sub
enter
pop
jae
cmp
mov
lods
mov
fisttps
pop
out
push
repz
subb
lock
mov
pop
repz
repnz
sub
dec
add
xor
adc
inc
fcomps
mov
fidivl
nop
ret
mov
jp
test
outsl
cmpsl
and
rorl
mov
inc
or
testb
hlt
push
sub
xor
sub
xor
mov
outsl
push
fcmovu
iret
xchg
jo
push
mov
push
mov
dec
sub
xchg
in
push
sub
test
jmp
mov
adcb
inc
dec
xchg
aaa
inc
jmp
ss
sarl
jae
sub
stos
jmp
mov
inc
scas
and
movsl
xor
mov
xchg
lahf
cmp
fadd
push
clc
inc
jle
outsb
popa
push
leave
dec
mov
mov
cmp
shlb
inc
into
mov
aaa
push
loope
movsl
add
icebp
pavgb
jg
push
cmp
sarl
pop
dec
fcoms
xor
subb
jecxz
jg
dec
mov
in
inc
dec
fidivl
jno
fsubrl
outsl
in
inc
jbe
sub
ficompl
xlat
dec
hlt
sub
pop
cmpsl
mov
les
xor
and
das
mov
cltd
mov
xchg
das
fadds
mov
int3
sti
addl
lret
xor
xor
xchg
lds
cmp
xlat
adc
xchg
scas
test
mul
xchg
push
adc
ret
mov
mov
pop
popa
ds
data16
outsl
sbb
xlat
sub
std
leave
arpl
jnp
jno
call
xlat
inc
push
mov
icebp
adcl
push
and
mov
out
mov
pop
xchg
ret
or
push
xorb
jb
jae
or
sub
or
mov
push
lret
arpl
or
or
gs
pop
in
mov
mov
lea
mov
gs
arpl
dec
aas
clc
pop
scas
pop
data16
xchg
cli
fs
add
xchg
mov
cli
outsb
inc
lcall
cli
xchg
rcrb
lea
xchg
stos
fsubr
or
cmpsb
iret
sbb
loopne
in
inc
fisubrl
mov
popa
push
mov
pop
subl
aad
mov
pop
dec
inc
push
cmpsl
loopne
jp,pn
aam
jno
fstpl
xor
pop
aas
add
js
subb
pop
jecxz
fcomp
mov
pop
jmp
enter
pushf
pop
xchg
negb
sbb
mov
cmp
out
ss
shlb
outsl
sbb
ja
xchg
mov
test
je
sub
mov
iret
or
int3
pop
add
je
add
or
insw
mov
mov
mov
pop
inc
ss
xor
addr16
sbb
sbb
into
xchg
daa
xchg
lods
pop
mov
sbb
inc
dec
sub
sbb
xor
mov
fs
cs
xor
jae
fdivrp
popf
test
das
and
mov
dec
leave
jno
push
bound
xchg
cmp
mov
jg
lods
outsl
pop
imul
pop
scas
lcall
lcall
xchg
add
pop
xor
mov
cmpsl
out
lock
push
test
testb
lods
adc
in
inc
mov
rcrl
out
popf
ficoms
adc
sahf
jge
adcb
fadd
add
pop
push
shll
lcall
inc
mov
inc
add
cmp
ja
or
push
shlb
adcl
shr
aad
pop
mov
inc
mov
pop
bswap
xchg
out
and
movsb
or
adc
xor
loope
pop
cmp
mov
ss
mov
push
out
popf
pop
or
cmpb
imul
or
ds
add
push
sub
dec
xchg
pop
push
movsb
xchg
sbb
lock
and
ss
cwtl
in
dec
xor
push
push
or
mov
pop
cwtl
test
xchg
mov
test
mov
jecxz
sbb
adc
call
stos
daa
rcll
mov
xchg
and
xchg
rclb
ret
sub
stos
insb
pushf
cmpsb
jbe
or
xchg
jmp
pop
xor
shll
fimull
push
push
mov
notb
push
test
lea
cmp
push
out
xor
sub
insl
popf
lret
pop
outsb
clc
shll
cli
sbb
aas
popf
test
mov
cmp
cltd
pop
adc
jmp
dec
cmpsl
cmpsl
in
push
add
inc
pop
scas
enter
cwtl
mov
int
subl
das
sti
fidivl
bound
jnp
and
shl
mov
or
ret
cmp
mov
xor
and
pop
ret
cmpsb
sub
pop
sub
dec
dec
aam
xchg
insl
shlb
lods
fistps
adc
mov
mov
cmp
fstl
jae
add
lods
xchg
ja
test
adc
mov
lock
mov
mov
hlt
cld
lods
xchg
shrl
sub
or
dec
arpl
dec
pop
aam
dec
adcb
jns
rclb
and
adc
xchg
fdivl
test
jg
fstps
pop
jne
rcrl
data16
cmp
xchg
lods
push
out
push
arpl
insb
mov
mov
jae
cwtl
mov
subb
jnp
push
dec
mov
xchg
ja
dec
pop
repz
xchg
mov
inc
call
pop
xor
loope
iret
out
sbb
cmpsb
xchg
fisubrs
js
mov
pusha
cmp
push
gs
mov
dec
leave
inc
pop
loop
dec
adc
mov
or
jp
movsb
mov
stos
mov
imul
scas
lahf
jg
add
in
aam
pop
adc
lret
imul
mov
in
xchg
adcb
aad
loop
data16
out
mov
inc
lcall
and
push
pop
xchg
xor
xor
push
mov
sub
or
lea
jbe
sbbl
pop
mov
sahf
sub
xchg
xor
or
fmuls
test
outsl
xor
in
adc
xor
sub
mov
stc
add
sub
add
in
lcall
xchg
daa
mov
lcall
lahf
xor
fcompl
divb
insl
sub
push
or
enter
pop
pop
bswap
rolb
pop
jo
sub
cli
pop
push
pop
push
in
dec
add
cmp
or
cs
shll
aaa
mov
push
ljmp
in
pop
push
icebp
loop
movsl
lahf
sbb
mov
gs
xchg
push
mov
add
int
xchg
mov
jae
mov
das
jle
cmp
adc
dec
mov
push
cmp
mov
mov
mov
pop
sbb
or
xchg
repnz
pop
and
adcb
pushw
and
addr16
loop
or
xor
mov
outsb
shrl
cmp
loop
mov
andb
and
test
inc
push
aas
mov
mov
push
jmp
sbbl
xor
cmp
mov
xor
lods
ja
outsb
fstp
stos
mov
std
out
data16
call
add
jno
mov
test
arpl
mov
xchg
cld
mov
cmp
mov
jb
stos
xor
jbe
push
xor
sub
movsb
inc
pop
dec
fisubrl
clc
ret
cld
push
or
dec
fucomip
mov
sbb
daa
lcall
sub
hlt
movsb
mov
jne
hlt
mov
and
xor
pop
sub
sub
stos
sub
add
test
int3
inc
scas
sbb
bound
or
adc
pop
jae
loop
sub
xchg
mov
test
jno
mov
testb
test
ret
mov
cli
ret
popa
pop
mov
add
mov
xor
or
imul
call
test
adc
mov
fcmovnu
sarb
cmp
add
popf
and
inc
xchg
and
xor
mov
or
cmpsb
cwtl
mov
fistl
adc
clc
adcb
cmpsb
outsl
filds
decl
or
mov
movsb
cmp
push
aas
and
adc
cld
mov
loope
repz
call
fistpll
push
xor
mov
mov
or
daa
sbb
lock
dec
xor
mov
pop
divb
inc
movsl
mov
sub
inc
mov
cmp
iret
jns
lret
in
bound
rclb
iret
pushf
subb
push
fs
push
popw
sbb
repnz
mov
xor
stos
pop
fistl
sub
test
and
pop
dec
sub
into
push
fisubl
cmp
sbb
scas
push
gs
jb
rol
mov
xor
xchg
testl
lock
aas
add
cmpl
int3
push
and
or
std
nop
mov
lea
and
jp
or
pop
pop
and
lods
mov
pop
stos
nop
fistpl
testl
dec
arpl
mov
iret
adc
mov
mov
mov
xchg
push
ror
movsb
cs
das
dec
in
lods
mov
stos
mov
cwtl
clc
testl
ss
mov
sub
xchg
xor
stos
push
sub
and
push
mov
sbb
insl
stos
add
in
loop
xor
je
jo
xorb
stos
les
outsb
or
ss
daa
in
mov
and
jns
sbb
dec
xor
rorb
xor
sbb
das
mov
pop
adc
in
popl
mov
test
cltd
inc
icebp
icebp
mov
ds
cltd
xchg
rorb
mov
push
inc
negl
arpl
mov
shl
and
adc
and
dec
pop
push
ljmp
out
jne
xlat
dec
nop
ror
shl
inc
dec
adc
jno
sbb
hlt
lcall
repz
lret
outsb
sbb
jp
in
sub
aam
push
imulb
jae
ja
jns
arpl
xchg
lahf
add
inc
out
out
ljmp
mov
lods
dec
mov
iret
pop
pop
cmp
push
dec
and
lahf
xchg
push
mov
and
dec
sti
mov
push
pop
es
inc
pop
mov
jno
xor
sti
mov
or
cmp
dec
fisubrl
dec
sbb
and
ljmp
ja
out
cmpsb
jge
js
dec
loope
sbb
gs
push
and
pop
out
pop
xlat
and
in
loop
les
or
and
test
in
sub
outsl
xor
jo
mov
das
push
mov
out
jmp
mov
cmpsb
arpl
pop
push
rorb
sbb
pop
dec
je
pushf
fstpt
fmul
adc
add
std
mov
and
fsubs
notl
es
es
pusha
push
clc
out
sub
std
xor
add
sub
xor
sub
sub
sub
dec
int
in
sbb
pop
movsl
aas
jne
or
xchg
out
call
popl
cli
mov
out
add
js
jo
jnp
push
xor
movsl
fsubrs
ss
sub
sar
cs
es
cs
mov
pushf
dec
xchg
adc
mov
jle
xor
cwtl
inc
adc
and
and
test
cs
test
lea
movsb
inc
cmp
mov
rcl
sbbb
add
push
mov
xor
hlt
mov
rclb
fidivs
push
test
inc
jne
push
mov
int3
xchg
push
push
pusha
stos
sbb
dec
scas
mov
inc
xor
ret
int3
mov
test
and
dec
pop
call
sti
addb
and
arpl
mov
pop
cmpsl
dec
inc
inc
fisttpl
adc
nop
and
fucom
jno
sbb
adc
cli
push
push
outsl
push
mov
push
cmp
popa
arpl
jp
pop
mov
popf
pop
test
push
fs
inc
push
mov
add
mov
pop
fisubs
sbb
dec
mov
mov
jne
jno
out
xchg
icebp
cli
inc
push
xor
shll
lds
push
inc
push
or
fbld
pop
fsubs
iret
lock
mov
enter
nop
push
fs
jno
fcoml
add
lahf
jmp
jmp
jle
scas
shll
subl
jle
mov
shlb
popf
mov
dec
ljmp
aad
testb
in
pop
inc
aaa
xor
es
push
jo
and
popf
jnp
addr16
call
fldt
mov
outsl
pop
and
xor
daa
mov
shll
push
mov
or
negl
hlt
pop
mov
outsl
adc
or
inc
push
jbe
xor
daa
add
loope
lods
movsl
aam
mov
cltd
pop
mov
std
out
outsl
icebp
cltd
les
lds
push
jae
jmp
pop
js
je
add
out
xchg
je
dec
fistl
mov
dec
adc
jmp
mov
adc
pushf
ret
lahf
fdivs
mov
pop
or
shl
hlt
jo
test
inc
jecxz
lds
das
andb
mov
or
mov
std
push
add
push
add
ljmp
xchg
xor
jae
cld
fildll
push
add
lahf
dec
push
aam
icebp
push
lock
out
enter
xor
push
dec
push
in
or
mov
ret
stos
loopne
or
jae
cltd
dec
sbb
dec
fistpll
cmc
lret
push
mov
jo
icebp
cld
jnp
dec
out
adc
sahf
cmp
cmp
shll
adc
xor
inc
jne
std
xor
fnstcw
jmp
push
stos
cmp
add
xlat
push
shrb
lea
sti
xchg
jnp
xlat
and
in
mov
pop
in
adc
xchg
xchg
dec
xchg
aaa
cmp
push
outsb
jno
mov
mov
xchg
xor
mov
cmp
xchg
das
cmpsb
push
xlat
pop
in
push
pop
mov
out
test
and
xchg
arpl
or
lret
jbe
dec
clc
add
cs
orb
jb
and
repnz
cwtl
lret
inc
fdivs
adc
mov
and
xor
mov
push
loope
jb
pushf
das
pushf
ficomps
pop
sbb
pop
mov
test
into
gs
pop
nop
xchg
jb
ss
jae
dec
fbld
loope
push
adc
or
lret
sub
pop
mov
test
jo
ljmp
jge
and
es
je
inc
jbe
and
mov
repnz
sbb
add
cmp
xor
inc
jae
punpcklwd
adc
in
mov
xor
fcompl
mov
sub
xchg
scas
scas
dec
push
pop
insl
ds
xchg
cmp
int3
push
mov
notl
stos
sub
xchg
scas
push
mov
dec
mov
out
xor
push
jae
dec
jecxz
in
rorb
imul
mov
sbb
jae
negb
insb
mov
sbb
mov
and
jns
sbb
aas
js
fisubs
imul
loop
pop
jl
ds
fistpll
mov
js
add
loopne
mov
xchg
sub
mov
jge
pop
jg
jnp
inc
ret
add
xor
outsl
mov
ja
mull
inc
subb
out
imul
sti
push
daa
xchg
ljmp
fidivrs
hlt
shlb
add
mov
push
sub
mov
pop
negb
lods
mov
mov
sub
ror
lods
test
daa
pop
and
xchg
mov
push
pop
pop
insl
pop
cmp
inc
insb
adc
mov
jne
icebp
mov
call
or
scas
pop
jo
orb
add
add
push
pop
ja
jge
sbb
ret
js
imul
push
mov
mov
jno
adc
cld
xor
sbb
imul
pusha
mov
adc
pop
lds
xor
dec
xor
lea
push
cmp
jno
push
mov
pop
mov
pop
adc
pop
int
push
xor
in
lcall
scas
or
aam
fs
int
sbb
or
jno
fs
sub
sub
pop
stc
faddl
or
dec
fsubrp
xchg
shl
popf
xchg
mov
jae
push
mov
incb
sbb
pusha
mov
ds
sub
test
ljmp
and
xor
fldt
andb
in
sub
jmp
mov
pop
out
cli
push
mov
mov
sbb
push
aaa
sbb
adc
rolb
out
mov
in
lahf
jmp
sbb
in
fsubs
cld
les
loop
nop
push
inc
aad
leave
mov
addr16
enter
xor
fs
adc
dec
jns
sbb
cld
adc
lods
xchg
or
popf
sub
das
push
leave
out
lds
imul
in
loop
mov
in
lea
push
mov
fwait
jne
daa
test
xchg
les
pop
loope
cli
sbb
add
push
push
sub
ret
sub
lcall
leave
pushl
repnz
gs
test
cmp
out
adc
sbb
out
movl
mov
popa
adc
sbb
pop
enter
aad
sub
and
shlb
jmp
imul
addr16
inc
pop
mov
int
sub
ds
mov
mov
pusha
orl
or
dec
adc
shrl
xor
add
mov
add
mov
pusha
fisttpl
in
and
jb
cli
xor
cmp
xchg
roll
rclb
iret
test
jg
jo
sahf
cltd
adc
dec
rcrb
xlat
and
leave
popf
jno
shl
dec
sub
inc
fidivl
mov
inc
sbb
mov
dec
inc
mov
mov
pop
sub
xchg
lods
loopne
push
cltd
and
or
push
pop
sbb
dec
mov
aad
inc
jno
int3
xchg
mov
movd
cs
push
stc
sub
pop
idiv
jno
cld
adc
jecxz
out
ret
xchg
cltd
ja
jne
popa
mov
ret
addl
mov
pop
sub
xor
inc
push
lret
out
js
cmovno
or
test
loope
inc
xchg
sar
sub
data16
lret
iret
inc
gs
sub
daa
jne
jnp
lods
sahf
cmp
repnz
pusha
lcall
and
test
lahf
adc
insl
mov
push
add
xchg
lock
add
test
addr16
adc
sbb
pop
or
inc
shr
test
xchg
mov
jne
mov
sbb
push
imul
aam
popa
mov
and
popa
loopne
jg
xchg
adc
xchg
daa
dec
mov
pop
test
mov
or
js
xor
dec
or
adc
ds
shll
fwait
or
pop
into
jb
movsb
enter
rorl
pop
aas
popf
add
out
mov
mov
loope
pop
mov
push
loop
in
pop
out
xor
ljmp
xor
in
push
xor
test
rcrl
ret
test
lcall
inc
imul
sarl
fidivrl
es
and
roll
ljmp
and
push
inc
pop
jne
sbb
push
cltd
loop
mov
cli
cmp
adc
sub
daa
popa
outsb
push
test
cmp
lods
jge
add
aam
mov
cmpsl
sti
cmp
movnti
jmp
fcmovbe
clc
lret
or
repnz
sti
push
testl
ja
arpl
movsl
jns
ja
inc
in
xchg
nop
mov
call
shrb
push
mov
adc
fisubrs
push
xchg
rcr
imul
stos
hlt
pop
es
arpl
popf
jns
test
lods
or
and
mov
sbb
aas
xchg
call
sbb
iret
mov
push
and
push
pop
jp
adc
and
into
lock
pop
jle
gs
pop
or
pop
jp
stos
orl
mov
or
fs
fnsaves
pop
call
sarl
stos
ja
lods
cmp
sub
xlat
cmc
rcll
push
mov
nop
add
or
in
iret
dec
mov
and
mov
lock
out
adc
fsts
jle
dec
jecxz
sbbl
dec
pop
test
lret
xchg
and
ljmp
rcl
ja
insl
inc
dec
xor
jl
lret
fpatan
arpl
imul
stos
mov
popa
je
rorb
or
and
inc
sbb
mov
int3
mov
aad
out
out
push
ja
jecxz
pushl
addb
sbb
pushf
mov
sub
test
scas
loope
dec
hlt
mov
in
pop
sbb
or
push
sbb
andb
mov
add
or
mov
ja
gs
mov
stc
sub
cmp
adc
mov
inc
jo
xchg
clc
loope
rorb
aad
insb
pop
clc
ljmp
pop
pop
mov
ret
fcomps
push
mov
test
mov
into
outsw
gs
lods
inc
scas
pop
mov
sti
stos
popf
jo
cmp
loope
jb
push
jl
dec
mov
jb
xor
push
pop
dec
push
pop
pop
xor
insb
push
addb
sub
jge
or
pop
jmp
nop
push
mov
hlt
lods
sbb
and
test
sub
mov
jo
adc
push
int
dec
push
into
shr
pop
xchg
sahf
aad
call
sub
push
andl
xchg
mov
popa
mov
test
add
adc
pop
jecxz
mov
lock
nop
cmp
cmc
lock
inc
and
sbb
ret
push
add
inc
push
jns
push
and
push
sub
mov
aad
and
pushf
cs
dec
in
test
out
out
mov
xchg
rclb
xor
adc
jge
insb
repnz
push
aam
inc
xchg
xor
popf
ja
pop
iret
mov
aaa
push
shlb
or
data16
fistpl
xor
mov
mov
push
test
or
movsb
sbb
jo
out
outsl
inc
movsl
inc
test
or
out
outsl
and
and
pop
dec
push
ss
adc
add
dec
out
adc
cld
insl
or
mov
xchg
pop
test
lods
adc
mov
popf
stos
shlb
scas
int3
dec
dec
dec
and
push
sbb
shll
js
aam
fisubrl
fcmovbe
divl
enter
pop
imul
jp
clc
mov
dec
sub
scas
jmp
cmp
cli
push
mov
loop
pusha
or
mov
jl
fwait
mov
xchg
arpl
sahf
mov
xchg
cmp
popa
imull
loopne
jecxz
faddp
inc
and
push
pop
scas
sarb
lods
arpl
mov
stos
popa
dec
adc
mov
nop
or
test
sub
xchg
lahf
lahf
adc
insb
jmp
xchg
mov
mov
leave
movsb
fimull
test
jmp
mov
ret
std
arpl
leave
mov
fs
mov
pop
dec
das
push
lcall
ja
scas
loop
test
insb
xor
clc
or
pop
in
negb
cmp
adc
cmpsb
rcrb
icebp
cltd
or
movsl
sub
cltd
cmpsb
xor
inc
fwait
fwait
gs
lret
daa
cld
inc
mov
xor
outsl
push
hlt
clc
adc
push
cmp
incl
movsb
xchg
cmp
clc
ja
sarb
shll
shlb
aaa
or
scas
dec
subl
scas
or
add
movsb
xor
mov
and
mov
into
ljmp
mov
adc
repnz
push
and
xchg
and
bound
jp
cld
push
cmp
shlb
cmpsb
in
loopne
cmp
fwait
roll
mov
jnp
jae
addb
arpl
roll
popf
mov
inc
push
or
sbb
std
dec
sahf
loop
sbb
das
lahf
inc
adc
sbb
mov
mov
in
jmp
jmp
jle
imul
and
ret
mov
les
clc
inc
adc
es
in
pusha
and
in
std
insl
adcb
in
scas
dec
lea
ljmp
cmp
inc
out
int
add
mov
mov
mov
xchg
ljmp
mov
aaa
mov
inc
cwtl
leave
sub
stos
aad
adc
test
test
pusha
mov
aas
out
dec
push
jne
stos
and
fsubrl
sahf
jl
shll
push
pop
mov
je
fmulp
pop
or
pop
pop
mov
or
jb
std
pop
mov
gs
ljmp
fwait
push
xchg
inc
sbbl
bndstx
or
cmp
xchg
push
shrb
es
inc
inc
icebp
mov
repnz
es
scas
movsl
mov
cld
hlt
inc
ficompl
jle
inc
mov
fucomp
test
shlb
xorl
scas
mov
dec
sti
lret
mov
scas
inc
jmp
push
mov
mov
rolb
arpl
dec
mov
mov
shll
in
pop
pop
popf
mov
out
imul
fsubs
in
mov
sbb
and
sbb
or
pop
fs
test
xchg
fs
mov
movsl
pop
movups
mov
mov
aas
je
mov
or
stc
mov
add
push
loopne
inc
jmp
inc
icebp
outsb
dec
data16
pop
cs
dec
xor
scas
lcall
nop
lea
jp
cmp
xchg
fidivs
cmpsb
decl
fsubrl
push
mov
dec
or
push
xlat
push
setl
push
enter
mov
ret
and
imul
sub
mov
orb
jnp
ss
call
nop
fiaddl
mov
jne
sub
dec
push
mov
pusha
mov
movsl
xchg
jne
clc
jmp
jbe
inc
sbb
mov
lret
cmc
enter
mov
std
out
mov
js
cmp
out
pop
mov
pop
pusha
and
or
fstpl
out
mov
cs
mov
xor
cltd
add
mov
cltd
bound
mov
loope
xchg
stos
jge
cmpsl
fdivrs
outsb
shll
mov
pop
or
jne
pop
repnz
imull
inc
inc
cltd
sbb
enter
jl
push
sub
lret
xchg
push
push
idiv
movl
sub
sub
addl
enter
push
pop
call
shr
mov
inc
mov
insl
testl
jae
sti
or
pop
mov
sub
in
xchg
adc
or
xchg
gs
arpl
mov
inc
aas
mov
add
dec
and
sti
fdivrp
insl
adc
js
gs
das
scas
std
cmp
add
fwait
test
mov
sub
inc
addr16
in
in
inc
gs
jecxz
dec
sub
cmp
jnp
ja
out
mov
cmp
jae
bound
dec
or
ret
push
or
ds
out
shll
jl
int3
into
sub
dec
in
movsb
int3
push
jne
out
cltd
jg
mov
xlat
insb
out
sbb
push
rcrl
bound
push
insl
inc
and
ds
nop
pop
cmpsl
js
pop
and
xchg
xchg
fadds
jae
nop
out
push
dec
mov
lahf
jo
adc
xchg
and
push
mov
js
loop
mov
push
add
addl
inc
xor
push
incl
imul
outsl
jns
xor
out
add
dec
clc
ja
dec
negb
insb
pop
dec
jecxz
dec
mov
xchg
hlt
cmpb
dec
jb
mov
lcall
cmp
lods
mov
dec
jle
scas
and
gs
out
jecxz
sarb
jmp
mov
lock
sarl
test
mov
jns
ficomps
cltd
lret
or
pop
test
mov
xor
inc
rorb
cli
mov
into
inc
cli
jae
cmp
xchg
xor
ljmp
mov
mov
adc
aam
repnz
mov
aam
xor
mov
mov
xor
mov
push
xchg
sbb
pop
lret
adc
outsl
add
clc
into
rclb
mov
nop
mov
xor
popa
xor
sbb
nop
mov
inc
dec
xchg
fistl
mov
adc
arpl
adc
pop
out
xor
ret
lcall
sub
dec
and
movsb
call
xchg
push
in
push
dec
cmp
stc
popa
xor
out
sbb
cmc
sub
aas
sbb
push
sti
mov
jo
mov
jbe
sub
inc
fs
push
mov
push
fnsave
enter
mov
rcl
mov
ljmp
ficomps
adc
loope
pop
loop
and
xchg
push
sahf
shl
dec
push
mov
mov
rcrl
sub
mov
cld
insl
fidivs
or
adc
outsl
in
xor
imul
adc
sub
in
cmpsb
push
das
pop
loope
movsb
jecxz
xchg
or
das
sbb
hlt
inc
out
mov
mov
clc
pop
sbb
jmp
and
cmp
mov
pop
mov
faddp
test
imul
or
mov
test
sbb
sahf
icebp
rorl
outsl
ljmp
add
jb
test
ja
or
orl
stos
lahf
fisubs
dec
push
sahf
imul
jbe
push
or
pop
pop
xor
leave
pop
adc
sbb
call
ss
pushf
lods
jecxz
mov
rcrl
inc
loope
inc
or
mov
dec
fs
test
push
add
fdivrl
ret
fs
add
fbld
pushf
lcall
enter
pop
dec
and
aad
sti
stos
ret
xchg
lret
fs
cmp
cmp
sbbb
push
hlt
xchg
fmul
cmp
into
inc
pop
add
inc
sub
jge
scas
aam
and
mov
clc
loop
leave
cmp
lret
les
sti
sbb
mov
jecxz
roll
cs
cs
ss
mov
jmp
inc
inc
sbb
int3
rcll
ret
stos
jge
add
mov
dec
sub
inc
xchg
das
sub
pop
cmpsb
adc
xor
pop
in
lods
in
mov
mov
out
mov
test
pop
packssdw
fcoml
mov
aad
xchg
xor
aaa
mov
fidivrs
aam
aas
lcall
addr16
xor
adc
mov
les
inc
cmc
ret
xchg
call
sub
and
shlb
mov
mov
mov
xchg
jg
xorb
sbb
mov
cmp
rclb
aaa
mov
sbb
out
imul
xchg
adc
andl
cmp
xchg
pop
pop
add
xchg
dec
pop
lret
popa
lret
cmp
inc
shll
dec
hlt
and
pop
popa
mov
pop
insb
push
aam
pop
repz
sti
inc
fsubrl
or
clc
js
js
mov
rcl
xchg
or
je
jp
ficoms
jle
add
inc
mov
int3
adc
rcr
fldt
push
adc
test
dec
mov
mov
or
adc
and
shrl
jns
xor
loopne
mov
nop
xor
fcomps
cld
cmc
or
aaa
cmpl
in
xchg
loopne
mov
lahf
or
sbb
js
jle
jns
in
and
inc
mov
out
fdivp
mov
sar
xor
sbb
shrl
mov
push
int3
into
or
sbb
add
addr16
mov
std
adc
jb
xchg
sub
pop
mov
inc
std
fldl
out
imul
pop
fs
popf
subl
lahf
lds
mov
mov
mov
push
repnz
cld
enter
mov
ret
jne
xlat
inc
insl
testb
int3
push
push
outsl
popa
stos
adc
call
lret
adc
in
xorl
test
cltd
testb
xchg
mov
cvtpi2ps
jle
in
imul
pop
xchg
xor
jmp
bound
sub
jo
pop
gs
mov
lret
jnp
call
inc
xchg
dec
clc
jne
imul
iret
dec
pusha
shrl
xor
cmp
fsubl
jnp
add
fisubrl
popa
cmp
scas
push
mov
lret
fdivrs
push
xchg
jb
xor
sbb
and
mov
cmpsb
in
fbld
popf
popa
shll
es
push
jmp
lret
movsl
sub
or
rorb
mov
jbe
dec
jae
sti
fwait
jo
push
add
lahf
sub
push
mov
or
xchg
push
and
movsl
mov
mov
jp
stc
push
in
or
or
iret
inc
add
aam
lret
fwait
mov
out
call
mov
addr16
cld
or
mov
xchg
or
add
outsl
sahf
cmp
sub
in
sbb
mov
mov
std
mov
int3
xor
scas
jns
cmp
fwait
jne
sbb
adc
fcoml
repz
pop
fs
mov
fs
loop
dec
push
adc
mov
inc
popw
out
in
hlt
ss
jae
jl
hlt
and
and
mov
sub
pop
push
int3
pop
or
jp
leave
dec
dec
mov
loopne
xchg
xchg
xor
sub
jno
test
int3
inc
pop
movsb
popa
loop
sbb
outsb
add
add
push
mov
js
clc
sbb
loop
or
xchg
jno
sar
int
dec
xor
in
in
and
xchg
sbb
je
mov
ss
dec
mov
lret
cmp
dec
inc
inc
lcall
push
sti
clc
or
sbb
add
pop
cmp
sahf
loopne
and
mov
ja
test
and
idiv
adc
sbb
inc
sub
xlat
mov
sub
xchg
cs
and
mov
or
test
add
outsl
inc
in
int3
and
cltd
xor
repnz
ret
loopne
sahf
inc
adc
jge
sbb
test
repnz
push
ja
mov
and
fstpt
scas
add
mov
jno
sub
mov
insl
ja
popa
ja
or
and
daa
mov
adc
pop
xor
xor
pop
stc
fucomp
jo
call
and
movsl
pop
xor
pop
xchg
dec
ret
sar
lret
mov
or
mov
add
jecxz
push
leave
rcl
and
xor
mov
enter
sub
xor
ds
jmp
sahf
std
ret
push
das
fcomi
cmp
mov
jg
xor
shl
out
sti
lcall
sub
dec
push
inc
pop
and
lods
fdivrp
sub
stos
std
xor
jge
pop
jg
and
jbe
push
movntps
or
xor
cltd
repz
push
mov
in
dec
push
add
lcall
adc
insl
pop
cld
movsb
aad
push
mov
loopne
mulb
repnz
cvtps2pi
push
addr16
icebp
fidivrl
imul
cmp
arpl
push
inc
dec
hlt
or
mov
js
pop
cmc
std
dec
and
inc
xchg
mov
or
lods
fnsave
lahf
out
xchg
lock
lea
gs
or
dec
mov
pop
mov
loope
adc
loop
xchg
dec
xchg
fistpl
sbb
mov
jo
mov
pminub
pop
ss
add
sbb
int
xor
inc
dec
xor
sub
mull
xor
inc
mov
push
lahf
lea
push
scas
xor
notl
dec
inc
mov
out
pop
repnz
pop
shlb
xor
mov
ds
sarl
jecxz
dec
shlb
inc
daa
pop
xchg
addl
clc
sarl
inc
fwait
adc
mov
mov
inc
idiv
rcll
in
rcll
scas
cmp
adc
jg
js
mov
add
stos
or
cmp
and
push
adc
daa
dec
mov
jecxz
scas
mov
addb
mov
sbb
mov
pop
sub
loope
out
popf
insl
fs
call
xor
shrb
cmp
test
rolb
inc
mov
inc
aaa
das
bound
sub
popf
fnsave
je
mov
push
stos
cwtl
mov
test
cmp
mov
mov
sub
push
adc
mov
dec
in
ret
push
loope
mov
xor
xchg
xchg
cmp
inc
mov
mov
test
je
fsubrs
xchg
enter
int
js
shrb
cmpsl
out
lds
in
rcrl
mov
xor
jbe
add
ja
and
leave
icebp
subl
xchg
repz
loope
sti
inc
cwtl
or
das
movl
jmp
pop
jmp
pushf
mov
cltd
lahf
mov
sub
movsb
and
push
andl
rorl
in
sbb
std
push
cltd
popf
adc
push
and
mov
orl
iret
rcll
test
jne
push
sub
outsl
cld
xchg
scas
mov
cmpsb
jle
popf
inc
inc
int3
mov
cmc
push
xor
into
push
mov
and
adc
insb
xchg
jnp
adc
cmp
add
frstor
fimuls
mov
in
test
mov
je
mov
mov
and
sub
xor
mov
add
clc
sub
pop
sbb
sbb
xchg
sti
sbb
outsl
sub
shll
je
dec
popf
in
xor
push
das
push
push
into
imul
dec
test
mov
lds
lret
flds
jp
sub
gs
mov
out
jle
sub
out
dec
repz
jg
mov
sub
mov
aad
pushf
pop
scas
push
push
cmpl
fidivl
sub
test
and
imul
add
jbe
mov
mov
call
jmp
xor
push
popf
pop
push
xchg
ret
add
into
sahf
imul
shl
cltd
sub
xchg
sub
cwtl
scas
shlb
aaa
imul
pop
test
shrb
std
pop
mov
inc
push
cmp
das
comiss
pop
jbe
mov
mov
into
inc
and
fwait
jmp
cwtl
xchg
ja
and
cmpsb
sbb
lret
int
fld
push
xchg
out
pushf
je
outsb
lea
lock
mov
xchg
clc
xchg
enter
out
cltd
inc
movsl
pop
xchg
lret
notl
repz
pusha
adc
in
in
inc
daa
xchg
fisubl
popf
test
xchg
aas
loopne
pop
lds
push
stos
pop
jno
mov
add
in
xor
addr16
repnz
fistpll
clc
xchg
lock
or
andb
jecxz
dec
jecxz
scas
mov
pop
push
in
mov
pop
add
adc
xchg
icebp
loopne
repnz
xlat
ret
dec
jg
push
ljmp
loope
pop
sub
pop
sarb
pop
push
fwait
les
in
sub
or
popf
xchg
aas
push
enter
sub
inc
adc
pop
dec
mov
dec
and
and
inc
ss
test
mov
loop
xor
mov
sbb
jmp
adc
lds
pop
sbb
and
shll
pop
add
iret
sbb
push
leave
inc
mov
add
cmp
outsb
sarb
or
xor
sbbl
stc
jno
ja
cwtl
loop
pushf
jno
outsb
mov
lret
lahf
adc
not
xchg
loop
test
and
mov
lcall
cmp
sbb
jb
loopne
cmc
cmp
in
lahf
mov
jns
call
lock
mov
pop
imul
xor
nop
fisttpl
rcrl
fdivrs
jg
or
cli
test
stc
iret
mov
and
mov
loopne
lret
out
adc
mov
xor
jg
js
insb
sbb
out
std
and
or
and
mov
addb
mov
and
cmp
or
xor
sti
sbb
jmp
shlb
pusha
dec
shld
sbb
pop
push
add
and
ja
jne
xlat
xchg
cmp
and
aam
add
iret
xchg
jge
push
and
xor
adc
push
std
inc
push
push
stos
push
cmp
xor
cld
test
jecxz
mov
adc
mov
roll
xor
sub
mov
out
lds
push
adc
jle
mulb
push
testl
inc
cli
xor
mov
popf
dec
push
pop
stos
mov
push
mov
xchg
sub
fildl
insl
xchg
mov
or
xchg
inc
xor
outsl
jb
or
push
xchg
gs
stos
push
insl
mov
in
or
add
dec
push
adc
mov
and
out
lock
popf
gs
out
daa
cmp
fsubr
pop
jns
pop
mov
lods
cmp
lret
daa
je
popf
cld
out
jecxz
mov
cmp
popf
ds
arpl
lock
js
insb
jg
mov
and
sbb
mov
adc
fdivs
xlat
sbb
or
lods
jno
mov
fildl
aam
cmp
mov
imul
mov
shll
mov
aas
repz
push
in
sbb
rorb
adc
sub
push
dec
mov
popa
cmpsb
loope
jecxz
push
push
pop
jl
sub
cmp
sti
fs
jle
lcall
imul
stc
test
imul
mov
lret
je
addr16
xchg
lods
pop
inc
aaa
xor
sub
imul
into
in
jl
xor
imul
pop
ret
fbld
sub
xlat
dec
dec
imull
add
mov
stc
pop
add
aas
hlt
imul
aam
repz
int3
inc
cmp
iret
xlat
int
and
sub
xchg
addr16
lods
inc
movsl
js
stc
push
out
adc
inc
pop
clc
ret
in
lods
push
sub
repnz
imul
sbb
outsb
lock
imul
or
and
fisttpl
add
and
cs
dec
or
sarb
sub
mov
sub
icebp
cmp
nop
fcmovne
mov
mov
cmc
std
pushf
cltd
lret
inc
test
or
mov
bound
jbe
leave
frstor
sbb
pop
test
addl
scas
cmp
xor
fisttps
ljmp
movsl
cmc
jno
mov
ss
mov
fwait
sar
mov
and
mov
ds
pop
pop
pop
int3
in
add
add
mov
inc
mov
mov
fwait
imul
or
xor
inc
lock
push
loopne
cmpsl
aad
lcall
ss
test
mov
or
cmpsl
mov
xor
and
cmp
xor
add
mov
fcoml
lock
lock
outsb
sub
mov
xchg
lds
shrl
movsb
push
mov
hlt
cmp
daa
cmp
mov
imul
call
fnstcw
sbb
lock
add
adc
sbb
inc
or
inc
sub
push
je
not
adc
and
sub
lods
ja
and
test
push
scas
pop
inc
adc
lea
mov
mov
ret
xchg
sbb
call
scas
hlt
mov
dec
cmc
ljmp
insl
aam
jbe
icebp
mov
ficoml
sbb
or
adc
pop
mov
mov
in
sub
in
fiaddl
cmpsl
cmpsl
cmpsb
int
push
fistpl
loope
cmpb
inc
sub
scas
sbb
test
cld
fwait
pusha
or
gs
fstps
push
ljmp
push
adc
sarl
cmp
adc
mov
lcall
in
cmpsb
sbb
xchg
push
mov
xlat
popa
xor
push
inc
dec
dec
jno
stos
xor
andl
mov
pusha
jnp
sub
lret
das
out
fdivrs
pop
add
pop
sbb
sti
jge
leave
and
cmpsb
neg
mov
adc
add
repnz
pushf
jns
xchg
sub
xchg
inc
in
and
ret
mov
movsb
lcall
loopne
cs
mov
adc
popf
es
shr
fnstenv
in
xchg
int
jbe
jb
ljmp
ja
jo
xchg
inc
shlb
sbb
testl
loope
mov
scas
shlb
int
push
mov
push
ja
mov
sbbl
pop
test
arpl
ja
dec
rcrb
hlt
rolb
mov
test
push
cmp
dec
cmp
test
in
stos
jecxz
push
fmull
cmp
faddl
ret
sub
std
aaa
add
jg
jl
mov
lcall
aaa
xor
xor
mov
dec
js
sar
add
xor
and
xchg
push
inc
xchg
mov
mov
sbb
cld
adc
sbb
dec
mov
mov
adc
clc
mov
clc
stos
cmp
in
and
mov
sbb
in
mov
fwait
in
mov
andl
mov
out
inc
xor
cltd
or
inc
mov
pop
incl
mov
out
lcall
icebp
and
psubusb
mov
inc
fisttpll
out
std
std
and
sbb
sbb
cmc
es
popf
push
adc
imul
shlb
in
ret
iret
pop
loopne
mov
cmc
or
push
add
xchg
push
movsl
mov
jecxz
mov
call
out
dec
imul
cmp
lcall
into
mov
mov
movsb
mov
rcr
xchg
pop
inc
inc
pop
repnz
aas
cmp
out
loope
ss
sbb
jl
cli
movsb
cltd
in
lcall
xor
adc
cmpsb
mov
pop
pop
jnp
jnp
mov
mov
int
dec
mov
sub
push
mov
lods
push
dec
pop
pushf
mov
pop
push
stos
adc
add
cmp
fs
sbb
push
pop
test
leave
cltd
outsb
imul
insl
movsb
lcall
call
lods
cld
mov
xor
hlt
mov
les
or
out
jmp
faddl
jbe
mov
add
or
js
fs
push
enter
lods
push
adc
lock
imul
xchg
cli
movsl
ja
and
mov
cwtl
insl
inc
imul
jns
aaa
out
add
sbb
ljmp
out
data16
call
cmp
mov
js
addr16
rol
fildll
out
das
addr16
test
mov
pop
xchg
mov
iret
shl
int3
lret
pushf
fwait
jl
and
ficoml
ret
jns
pop
pop
aad
mov
jmp
mov
test
jns
or
add
pop
movsl
into
mov
push
dec
pop
sahf
xchg
loop
xor
adc
test
popa
in
cmp
adc
shlb
lahf
mov
loop
mov
hlt
mov
rolb
addr16
sub
hlt
jg
pop
aad
cs
sub
das
out
cltd
insb
enter
stos
sub
pushf
mov
adc
and
popl
rol
lahf
fwait
in
rolb
rol
inc
ret
out
icebp
jb
sbb
adc
inc
and
clc
icebp
insl
popfw
sarb
pop
jge
inc
jne
movsb
adc
iret
mov
jg
shl
faddl
pop
imul
jo
mov
add
lret
mov
or
pushf
stc
mov
mov
into
mov
adc
in
pop
in
xchg
or
push
je
push
icebp
xor
inc
jmp
ss
lret
lret
shll
lock
inc
in
push
adc
add
mov
iret
cwtl
js
test
xor
mov
pop
enter
mov
fsub
sub
and
add
pop
xor
push
je
sub
aas
flds
mov
sbbl
ret
pop
fwait
outsl
mov
sub
lret
loopne
dec
sub
hlt
daa
pop
push
popa
jl
push
cmpsl
pushl
in
or
or
adc
fcmovnbe
inc
ljmp
fdivrl
out
enter
or
aad
clc
jae
push
mov
lahf
loope
fcmovnu
mov
mov
add
jo
cmp
inc
pop
mov
or
or
jg
mov
mov
xchg
movsl
daa
inc
in
xchg
mov
out
sbb
cmp
loope
or
out
aas
inc
fcmovbe
divl
or
mov
outsb
and
pop
push
fsts
xor
repz
test
pop
stc
pop
add
test
sub
fdivl
sbb
mov
das
cmp
mov
push
mov
lods
dec
les
sub
mov
mov
lahf
and
icebp
dec
in
cmp
fwait
stos
iret
sar
loope
cs
and
jae
jg
adc
lods
daa
imul
lods
les
mov
push
ja
mov
lcall
xor
adc
pop
adc
aad
jg
mov
adc
cltd
fwait
mov
mov
ficompl
mov
inc
idiv
ret
in
jns
ljmp
sahf
in
stc
push
sub
mov
stc
mov
mov
loope
cmpsb
push
addb
and
sbbl
sub
cli
aaa
jmp
fadds
cmpsl
ret
push
cli
test
jmp
xor
sahf
sti
test
nop
mull
sarb
cmp
icebp
pop
in
mov
faddl
xor
ret
je
cmc
mov
jns
mov
mov
add
jbe
and
jge
add
fistl
inc
popf
loop
and
out
mov
test
test
cmp
push
mov
push
sti
jg
incl
cmp
or
std
sbb
test
add
push
ja
mov
fistl
adc
inc
fnstcw
adc
xor
sbb
xlat
fisubrl
out
add
into
sbb
shll
inc
mov
cmpsb
sbb
pop
and
push
xchg
aam
mov
frstor
sbb
mov
or
and
push
push
repnz
adc
and
pop
das
xchg
hlt
imul
mov
jl
push
xchg
repnz
rcrb
add
xor
pop
lods
push
cmp
arpl
in
cmp
bsf
jp
push
mov
jbe
fs
cmc
adc
cmp
aas
sub
pop
dec
scas
jne
push
subl
xor
lods
mov
xor
push
pop
in
jno
int3
insl
or
pop
jg
xchg
in
cmpsl
mov
mov
and
push
pop
fs
loop
dec
sub
addr16
mov
push
mov
mov
aas
and
or
jmp
sbbl
jg
aaa
push
daa
mov
jmp
cmc
dec
mov
sbbl
adc
jno
sahf
fisttps
outsb
addr16
fcoml
test
pop
mov
mov
adc
sub
and
pop
jae
jl
sub
inc
fldcw
cmc
sahf
or
pop
ja
mov
or
mov
mov
pop
mov
in
xorl
and
insl
sbb
imull
ja
and
outsb
pop
mov
in
insl
mov
idivb
mov
and
or
sub
or
lock
fdivp
popf
push
movb
in
stos
mov
cld
sahf
mov
push
add
cltd
pop
addr16
jne
rcll
pop
fistpl
mov
or
iret
push
or
mov
arpl
in
inc
xor
mov
sub
stc
sbb
or
movsb
stc
jp
jb
lods
jns
add
xor
jo
inc
jae
xchg
orb
xchg
pop
push
aam
or
repnz
push
xlat
test
movsl
pushf
enter
jnp
push
bound
pop
pusha
xchg
int3
insb
or
out
icebp
ss
dec
cmp
dec
pop
jmp
lods
push
popa
clc
pop
pop
pop
gs
stc
aam
adc
fs
insb
push
imul
or
in
push
das
test
and
sbb
icebp
adc
dec
aaa
pop
push
mov
stos
xor
mov
fwait
les
jmp
xchg
pop
call
and
mov
and
cmp
pop
insb
and
repz
push
popf
pop
jle
jne
insb
dec
fwait
push
cltd
bound
gs
addb
and
pop
or
std
lods
lahf
sub
inc
sub
rolb
jae
xor
or
or
sbb
andl
pop
pusha
cmpsb
dec
das
aad
add
popl
or
pop
popl
sarl
pop
add
int3
sub
mov
leave
sbbb
fwait
jp
dec
loopne
lods
mov
popa
sbb
jmp
lahf
shll
jmp
jmp
sbb
testl
cmp
jae
mov
out
cmpsl
mov
xchg
addr16
sbb
mov
out
mov
pop
xor
pop
mov
mov
jecxz
shrb
adc
dec
adc
jnp
push
lods
daa
push
scas
mov
dec
push
sbb
adc
out
xchg
jnp
pop
incb
int
repnz
and
scas
test
les
mov
call
pop
repz
jbe
test
xchg
xor
pop
jb
and
lds
jle
and
dec
int
insl
fmuls
and
mov
jg
xchg
loope
push
and
jbe
cwtl
pop
bound
add
cltd
test
hlt
xchg
push
fmulp
in
sbb
sbb
mov
ja
inc
add
adc
mov
shlb
jecxz
adc
cwtl
pop
or
enter
cmp
adc
andb
push
jb
jb
jecxz
sbb
rcrl
inc
not
pop
push
sub
fldenv
ds
repnz
call
je
adc
push
repnz
mov
pop
mov
adcl
push
mov
pop
mov
mov
sbb
cwtl
inc
repz
inc
je
and
cmp
aad
fadd
ljmp
ja
lahf
bound
sbbb
xchg
mov
cmpsl
cmpsl
push
mov
mov
xor
and
pop
pop
push
insb
ficoms
mov
or
addr16
hlt
jl
aas
cmp
mov
push
cmp
mov
pop
inc
aaa
loope
filds
pop
mov
adc
pop
mov
movsb
xor
movsl
les
fisttpll
stos
jp
dec
xchg
je
pop
filds
xor
jl
xchg
push
and
pop
repnz
sbb
mov
pushf
push
test
mov
push
ja
xor
add
pop
mov
out
push
int
sbb
incb
mov
iret
or
sbb
adc
fwait
dec
in
out
inc
mov
dec
shrl
fisubrs
loope
shlb
or
movsl
mov
sub
icebp
sbb
pop
aam
xlat
or
popf
mov
leave
cmp
les
stos
jl
leave
out
or
shll
jecxz
outsb
xchg
mov
aas
out
sbb
stos
sbb
pop
lds
cwtl
sub
sub
inc
mov
sbb
push
inc
insb
pop
sarl
insl
dec
pop
arpl
aam
or
jnp
in
test
or
adc
mov
popf
sbb
pop
ja
pusha
inc
mov
test
adc
fnsave
leave
adc
sbb
mov
jle
cltd
imulb
push
and
call
and
inc
rclb
xchg
roll
jmp
mov
xor
mov
in
cltd
add
push
orl
ss
push
lretw
mov
cmc
cld
movsb
mov
cmp
call
sbb
lret
xchg
fld
cmp
sub
fs
andb
out
orl
lcall
mov
mov
rolb
in
inc
cwtl
cs
cmpsl
scas
pop
mov
out
jp
push
insl
jbe
cmpsl
dec
cmp
or
popf
xchg
xor
adc
dec
xlat
jno
pop
mov
aaa
inc
sbb
mov
fstpt
out
pusha
arpl
mov
jb
out
xor
mov
mov
mov
scas
out
jb
xchg
mov
cmpb
push
stos
mov
int
aad
icebp
sbb
lds
jle
xchg
sub
mov
inc
les
lahf
ret
mov
pop
push
xor
cmp
mov
sbb
add
push
mov
scas
add
icebp
shll
in
mov
in
jnp
arpl
pusha
outsl
pop
push
bound
pop
ljmp
pop
shr
scas
mov
mov
movl
popf
shrb
pop
push
bound
dec
daa
scas
les
aad
loop
adc
loopne
add
mov
mov
mov
adc
cmp
mov
ret
sar
ds
clc
addb
add
pop
sbb
ret
or
mov
xor
jnp
xchg
xchg
and
xor
or
je
movsb
cmp
lcall
cli
sarl
pop
mov
fmulp
add
xchg
adc
and
adc
mov
arpl
call
out
popl
test
cmp
and
mov
push
shrl
add
sub
clc
call
inc
scas
andl
int
loop
mov
sbb
xchg
fstp
mov
jp
outsl
test
lret
dec
ret
lods
pop
cmpsb
mov
jmp
mov
sub
sub
sbb
mov
ljmp
cltd
add
out
adc
cmp
sub
mov
std
sbb
inc
and
pop
xchg
fwait
nop
repz
arpl
add
jecxz
pusha
mov
in
adc
out
sbb
mov
das
out
out
dec
mov
das
pause
arpl
push
add
inc
mov
sbb
dec
push
call
fwait
popf
push
jae
loop
mov
xor
es
inc
push
and
xor
popa
jno
in
mov
dec
cmpb
pop
into
shrb
fbstp
mov
lods
jle
leave
xchg
jnp
test
mov
mov
jo
notl
jnp
xor
fcmovnbe
xchg
cmp
hlt
adc
and
adc
push
sbb
pop
jle
xchg
lds
imul
xor
stos
cmp
push
mov
fwait
sub
jl
imul
aad
cwtl
pushf
adc
or
stos
pop
jmp
pop
mov
fs
in
adc
mov
mov
push
out
sbb
js
adc
stos
stos
cmp
pop
pop
scas
out
lcall
xchg
pop
inc
inc
xchg
mov
xor
jl
unpcklps
add
pushf
add
sub
mov
jo
fucom
jb
and
imul
add
sbb
add
xchg
je
bound
ret
aam
call
fisttps
lock
pushf
and
sbb
mov
ret
xor
cmp
lret
mov
xor
cli
inc
cltd
shlb
inc
stos
dec
xor
je
das
push
xor
inc
add
jle
jnp
dec
mov
jge
int
pop
mov
mov
scas
lods
sub
sbb
jg
adc
adc
stos
rcr
divl
popf
mov
mov
aad
push
mov
jns
imul
sti
imul
mov
cmpsl
rorb
std
fs
mov
aam
xchg
or
lds
roll
add
lds
mov
xor
fld
push
cmpl
notb
push
js
test
lds
fimuls
push
jmp
stc
inc
dec
sbbb
xchg
add
and
xor
cli
pop
push
mov
jmp
int
aam
leave
sbb
adcb
enter
aaa
dec
lock
mov
stc
dec
insl
sti
addl
sub
outsl
orb
jno
jmp
js
cld
push
mov
jg
roll
xchg
test
adc
inc
add
hlt
add
je
dec
lock
push
lods
push
sbb
lret
popl
jne
inc
imul
push
add
lock
pop
jp
sbb
stc
push
jno
push
adc
pop
dec
data16
xor
and
fmull
mov
std
pop
sub
sbb
mov
pop
test
scas
ret
cmp
mov
repnz
outsb
addr16
jp
hlt
dec
lock
mov
imul
add
daa
and
sub
pushf
adc
cld
insl
cli
dec
lea
outsl
ret
xlat
clc
shlb
leave
push
xor
je
add
inc
cwtl
sahf
negb
xor
test
mov
mov
mov
icebp
gs
mov
sbb
xchg
push
lock
scas
sub
mov
xor
jno
or
inc
xorl
scas
jne
push
lcall
fnstcw
ficomps
fwait
mov
mov
cli
inc
imul
jge
imul
shl
jno
int
mov
xchg
cmp
popa
dec
popf
dec
adc
bound
xchg
test
adc
loope
mov
mov
shr
mov
push
inc
cmp
inc
cs
daa
sub
xchg
xchg
in
mov
imul
ljmp
mov
insl
test
ret
mov
imul
dec
sbb
xor
sbbl
or
sub
pop
mov
subb
push
shl
add
daa
mov
cmp
jge
mov
out
fistps
aam
mov
jl
nop
adc
cli
or
or
fsubs
imul
sub
jge
into
mov
aas
sub
rcrb
in
mov
fwait
fs
lret
mov
pushf
lret
xlat
push
ret
out
cmp
ljmp
mov
push
iret
and
js
cmpsb
arpl
lcall
push
sahf
mov
inc
test
jno
les
xchg
cmp
sbb
or
dec
in
xchg
mov
mov
out
xor
pop
sbb
and
mov
ret
mov
loop
sti
mov
mov
jbe
mov
sbb
test
inc
lcall
cld
stos
dec
or
ret
imul
lds
cmp
popa
dec
out
adc
orl
dec
sub
das
xchg
lods
stos
mov
nop
arpl
call
inc
lret
pop
fidivrs
pop
mov
push
dec
push
aas
movd
gs
pop
pop
push
inc
xchg
ja
gs
or
mov
cmp
and
mov
pop
fimuls
xchg
aas
sti
shl
cmp
popf
xor
mov
jecxz
push
cmp
sar
ljmp
push
lret
and
push
mov
xchg
ljmp
into
es
mov
sbb
roll
push
in
dec
into
cmp
jge
rorb
cmc
test
rclb
cltd
cmc
cmp
loop
jo
and
divl
fs
pop
pop
xor
jp
daa
jne
and
idivb
ret
andb
fs
dec
aaa
hlt
adc
outsb
pop
ret
addr16
nop
sub
data16
mov
outsl
jl
or
sub
jmp
icebp
andb
cmp
inc
xchg
call
imul
mov
movsl
or
mov
cmpb
inc
std
cltd
inc
inc
loope
test
ficoms
repnz
ss
xor
aam
insl
out
rol
mov
mov
ljmp
inc
xor
lret
es
mov
xor
dec
lahf
int
loope
inc
nop
or
dec
lret
test
push
ret
dec
outsb
mov
loop
and
lds
test
add
push
in
pop
jg
mov
sub
shrl
out
cmp
scas
shlb
mov
and
mov
sub
pop
jge
xchg
test
aas
out
imul
out
mov
int3
mov
cld
maskmovq
testl
pop
ret
fdivp
sub
aam
add
test
cld
call
int3
mov
pop
xor
mov
mov
je
shl
mov
adc
pop
or
aad
jecxz
shl
push
aad
in
int
pop
xchg
add
xchg
test
mov
pop
xor
xor
sarl
test
cld
and
lock
adc
sub
sbb
or
xor
jmp
xchg
mov
sub
sbb
loop
xor
loop
dec
push
dec
dec
adc
movsb
xchg
ret
stos
lods
sarb
sarl
adcl
dec
cmpsl
xlat
jnp
sbb
inc
sub
mov
sbb
xlat
pop
sbb
adcl
xor
pop
mov
fcoms
popa
dec
mov
inc
ret
push
lds
femms
ret
imul
imul
inc
jge
scas
inc
cs
mov
cmp
pop
add
xchg
inc
pushw
sbb
aas
mov
mov
push
pop
stos
xor
and
mov
std
ret
lcall
push
ds
push
lods
and
scas
je
mov
outsl
mov
jmp
fistpll
xchg
call
into
insl
out
je
and
mov
jbe
ret
js
jbe
adc
pop
in
inc
jo
dec
push
dec
push
cld
leave
outsb
jl
sbb
sbb
cld
fildl
jp
fdivs
mov
aas
xchg
cmc
dec
add
mov
adc
jle
jl
pop
push
inc
push
subl
enter
ret
clc
pop
pushf
xor
xchg
das
mov
icebp
xchg
lds
sub
mov
popa
mov
mov
and
sub
jns
xchg
fistps
xor
fbstp
outsb
clc
push
jns
mov
jb
cltd
dec
jg
call
je
mov
push
cmp
jle
out
add
iret
mov
pop
aad
lret
or
rcl
std
or
test
push
jno
mov
adc
inc
mov
fs
fisubs
aam
sbb
sub
fcomip
add
adc
mov
xchg
lods
push
inc
repz
or
das
ds
sti
inc
lahf
js
ljmp
aas
sbb
mov
in
xor
int3
ljmp
imul
add
notl
out
cld
das
xchg
jmp
cmovae
pop
xchg
cld
jecxz
jbe
sbb
stc
test
nopl
xchg
shl
hlt
sbb
or
ret
mov
jne
or
clc
movsb
shlb
push
sub
ljmp
popf
fcoms
push
ss
push
and
bsf
ja
outsl
jl
dec
jne
cmp
inc
jns
gs
cmpsb
mov
and
xor
adc
dec
mov
movsl
jg
lcall
xor
jae
pop
mov
mov
test
mov
fisttpl
add
cltd
add
mov
push
dec
pop
ss
jmp
dec
lahf
dec
add
and
push
mov
ret
inc
sbb
jle
into
call
sub
xor
and
push
dec
mov
sub
and
and
jle
das
sbb
loope
inc
xor
ja
push
inc
inc
cmp
jns
fs
push
and
sbb
jo
pusha
mov
rorl
dec
cld
jns
enter
loope,pn
fiaddl
loop
fisttpll
sbb
dec
and
fsubl
fbstp
cmp
mov
pop
addr16
shlb
rep
scas
push
push
lds
xchg
mov
mov
loop
add
sarb
push
push
int
pop
mov
leave
test
mov
cmp
push
adc
dec
out
sub
pop
mov
sub
aas
pop
test
mov
inc
cbtw
mov
leave
or
sub
add
xor
inc
aaa
sarb
addr16
in
mov
mov
sub
mov
je
mov
jle
jo
loop
nop
mov
jecxz
mov
push
popa
fwait
aaa
into
adc
les
mov
ja
repnz
and
mov
nop
mov
repz
lahf
movsb
mov
push
sub
xor
inc
mov
cmp
je
test
dec
pop
jo
or
movsb
cmc
cli
cmp
add
cmp
push
xor
in
stos
mov
in
dec
pop
jno
sbbb
pop
dec
in
pop
ret
or
data16
inc
or
mov
loop
xchg
xor
jno
imul
stos
mul
lods
fdivrp
adc
lods
daa
pop
jae
xchg
setp
hlt
das
sbb
push
jno
and
jns
not
push
xor
enter
and
rclb
xlat
fistps
shlb
addr16
jne
dec
ds
fisubrs
mov
sarl
or
pop
add
mov
or
mov
loop
sbb
lds
xor
jg
test
pop
push
inc
mov
ds
jle
push
test
ljmp
inc
jbe
or
fstpl
pop
and
lea
pop
insb
push
inc
mov
test
push
xor
inc
je
mov
add
xor
test
mov
roll
rorl
cmp
pop
dec
lods
iret
ja
pop
jmp
or
add
in
bound
and
dec
sbb
xchg
push
sub
inc
sbb
loop
adc
xchg
inc
pop
jbe
cmp
and
jae
fs
call
sub
push
pop
frstor
in
lret
js
sbb
clc
dec
inc
jno
addb
xlat
shl
or
xchg
call
jae
sti
pop
enter
or
imul
sbb
lcall
insb
sahf
push
push
enter
nop
out
jmp
jo
push
cmp
adc
inc
popa
mov
or
scas
call
sub
es
sbb
out
nop
shll
ret
xchg
lret
push
dec
cmc
test
jmp
pop
dec
clc
jecxz
insl
mov
add
repnz
cmp
dec
push
mov
sbb
fs
sahf
jb
pop
xor
in
dec
out
and
stc
mov
nop
mov
mov
pop
cmp
adc
jne
dec
addl
pop
sub
push
clc
and
fmuls
mov
test
fwait
dec
arpl
movsb
cs
mov
dec
std
lock
sti
and
in
sahf
shr
sub
aad
pextrw
inc
aas
movsl
fidivl
xchg
aas
inc
dec
in
aam
jl
dec
shr
sub
and
bound
push
push
mov
popa
mov
or
gs
xchg
add
jns
decb
fcmovnu
call
and
imul
in
insb
push
jnp
movsb
ja
xchg
cld
sbb
and
mov
add
out
aaa
das
pop
or
cmp
lret
loopne
add
push
ds
push
jno
jg
loopne
mov
addr16
sub
in
imul
test
pop
push
sub
mov
fwait
lock
inc
les
pop
das
sbb
add
scas
lea
lea
push
iret
pop
mov
pop
testl
scas
sub
popf
sub
stos
leave
inc
subl
xor
and
out
repnz
cs
lret
ds
jne
stc
or
sbb
es
ss
push
cmp
popf
fstpt
xchg
sbb
pop
mov
movsb
xor
push
xchg
cmp
add
xchg
testb
notb
push
call
shl
daa
in
ret
loope
lahf
xorl
mov
ret
in
rcl
jne
sahf
adc
insl
jne
sub
xlat
ret
or
jb
cmpsb
add
xorl
jae
cmp
add
scas
andb
jbe
mov
js,pt
xchg
fidivs
ds
shll
cmp
add
add
cld
xor
mov
jecxz
lret
xchg
aam
jnp
ret
push
xchg
movsl
cltd
adc
insb
dec
outsl
and
and
out
xor
pop
xchg
sbb
xor
push
inc
mov
outsl
mov
jno
inc
push
nop
mov
std
pushf
cmp
nop
shrl
mov
inc
sbb
mov
dec
or
dec
mov
mov
test
push
jbe
jbe
adc
jbe
xchg
enter
sti
cld
out
push
orb
jnp
cmp
cwtl
out
loopne
cwtl
mov
and
cmp
adc
pop
mov
adc
aad
mov
test
mov
ljmp
xchg
or
out
repnz
push
mov
sub
xor
jae
je
add
xor
jmp
push
cmpsl
ss
inc
mov
or
jmp
dec
xchg
cmpsl
cmp
mov
cmp
mov
lods
push
pop
fistpl
and
cmp
mov
pop
aam
add
repnz
movsb
adc
mov
or
arpl
push
cmp
pop
out
fildl
mov
jge
adc
ss
dec
and
push
push
lock
cs
adc
jbe
inc
sbb
les
pop
and
xchg
outsb
jno
rorl
or
stos
ret
jle
and
sbb
mov
sub
inc
cld
xchg
stc
inc
xchg
imul
repz
inc
insl
xlat
cmp
xor
pop
cmp
outsb
shrb
xchg
nop
sbb
cmpsb
xor
scas
pop
in
decl
stc
and
fbld
out
negb
xlat
out
sub
push
rol
aad
scas
push
jno
push
or
insb
jp
jmp
inc
mov
mov
mov
sub
aaa
add
repnz
sub
mov
mov
aam
adc
push
lret
inc
popa
mov
ret
shrl
and
fwait
jne
pop
jo
imul
insb
push
sbb
xchg
cld
jb
call
jge
xorl
xor
mov
mov
cltd
add
test
xor
fbld
enter
repnz
fidivs
sub
push
push
adc
fidivs
fidivl
mov
test
sahf
mov
jne
in
xchg
icebp
sub
and
fsubrl
sbb
sbb
jb
cmp
stos
imul
push
out
xor
orl
rorb
cmp
std
pusha
cmp
lcall
out
cmpsb
rorb
daa
jg
icebp
push
xchg
pop
or
call
dec
lret
mov
xor
mov
into
mov
push
inc
lret
lret
clc
dec
mov
nop
mov
lock
mov
pop
aas
into
stos
sbb
lds
outsb
sub
cltd
fs
add
aas
adc
sarb
pusha
ret
addr16
xchg
addl
mov
ret
push
inc
inc
sbb
cmpsb
bound
in
rcll
mov
ds
xor
jae
bnd
jns
push
xor
repnz
pop
jg
xchg
xchg
orl
mov
push
push
cmp
or
sahf
xor
mov
mov
pop
pop
xorb
call
scas
cmpb
icebp
mov
loop
or
sbb
lods
ja
loop
mov
mov
jp
dec
mov
ret
dec
push
sub
pop
push
or
cmp
mov
pop
fbstp
xor
jmp
lret
std
test
add
mul
fdiv
jge
sbb
popf
std
jle
mov
xor
or
jl
mov
clc
incl
pop
push
mov
inc
lret
push
jecxz
pop
mov
push
mov
dec
cmp
add
cmp
cmpsb
cld
out
sti
push
pop
add
add
js
inc
or
or
inc
or
loopne
pop
lcall
adc
cld
dec
sbb
insb
faddl
dec
sarb
xlat
addr16
stos
test
mov
in
inc
loope
jp
mov
cld
jb
data16
mov
out
pop
xchg
fistps
ss
dec
nop
xchg
fsubl
bound
mov
or
fiaddl
ja
mov
out
mov
adc
mov
in
mov
mov
adc
les
cli
movsb
dec
mov
in
cmp
add
sahf
add
call
outsl
sbb
cwtl
dec
vmwrite
mov
add
sbb
push
ret
pop
sub
and
bound
xchg
inc
test
outsl
jecxz
adc
or
cmc
stos
or
add
sbb
clc
xchg
xor
xchg
mov
xorb
inc
pop
cmp
push
jae
cli
into
sub
or
hlt
add
xchg
outsl
or
lea
mov
cmp
add
jns
pop
cmp
jae
lods
or
sub
fcomps
aad
ss
lods
mov
jns
imul
jb
mov
imul
xor
andb
sub
lcall
jae
je
cmp
cld
pop
pop
ljmp
in
lods
pop
sbb
pusha
sub
imul
and
xchg
jo
push
sti
add
sub
inc
std
ja
hlt
sbb
and
cmc
mov
mov
or
out
das
mov
pop
lods
and
outsb
in
into
mov
jle
fstpl
mov
aas
fldenv
out
cmp
inc
fwait
mov
add
sbb
das
push
xor
data16
push
sbb
ds
loopne
sbb
in
dec
ret
aad
sahf
imul
add
data16
cmpsl
sbb
mov
cwtl
cmp
sbb
adc
in
jo
fnstsw
push
pushf
add
adcl
xchg
test
pop
test
stc
into
mov
jo
shrl
mov
xor
adc
mov
and
or
push
ljmp
adc
add
shll
xchg
fwait
mov
jno
ficoml
out
test
loopne
pop
dec
stc
inc
sub
aaa
insb
mov
insb
mov
loope
clc
mov
cli
fwait
cli
cmp
push
or
xchg
dec
adc
loopne
inc
cs
iret
icebp
lret
mov
fbstp
pop
adc
nop
dec
sub
mov
push
mov
fisubs
xchg
mov
fcmovb
lods
xor
jg
out
lds
lret
mov
lcall
outsb
ret
out
rcr
jle
aam
add
push
cmp
inc
test
xchg
rorb
cmpb
frstor
cld
sbb
lret
adc
add
sbb
jl
lret
jecxz
test
je
push
mov
ret
lods
sub
in
push
aas
xchg
cmpsl
push
movsb
in
gs
jns
stos
sub
fdivs
push
into
fists
inc
xor
adc
addr16
js
inc
bound
lods
push
sbb
lret
pop
cmp
mov
push
jnp
aaa
cld
jnp
cmc
adc
jecxz
jo
clc
pop
enter
mov
jnp
xchg
cmp
mov
incw
add
sbb
push
ss
packsswb
dec
lock
xor
ljmp
add
in
lock
call
gs
loope
jne
enter
rcll
lods
shrl
cmp
lret
xorb
xchg
call
inc
xor
push
ret
mov
push
sbb
inc
sbb
push
mov
popf
xor
pop
rcl
ret
insb
cmp
push
pop
cmp
rcll
popa
dec
testl
ret
inc
fnstenv
out
cltd
mov
dec
or
jle
cmpsb
insb
push
jnp
sub
push
pop
dec
xchg
imull
jl
dec
inc
xor
nop
cmp
inc
mov
xlat
or
cmpsb
aaa
dec
jns
mov
push
cld
outsb
mov
push
cli
mov
jp
shrb
and
or
ss
jmp
jbe
cmp
adc
push
or
mov
popa
fstl
movsb
xor
pop
popa
adc
push
adc
sahf
push
test
shlb
sub
out
adc
xor
jnp
loope
outsb
sti
test
filds
sbb
mov
insb
lds
into
add
jmp
cli
pop
cmp
sbb
push
push
roll
jecxz
cmp
sbb
imul
jo
sbb
cmp
mov
inc
pop
es
fcomp
mov
cmp
xchg
aad
and
outsl
xor
push
shrb
jp
movsl
loop
jl
inc
add
sbb
mov
push
mov
cmp
jmp
in
mov
xchg
adc
jl
aas
insl
loopne
xchg
mov
push
jle
dec
ljmp
mov
mull
cmpsl
mov
std
ret
sub
scas
mov
and
adc
xor
mov
xor
in
inc
aas
cmp
inc
mov
sbb
jle
cmp
pop
mulps
sbb
scas
jecxz
add
xchg
ds
add
xchg
fstpt
or
leave
mov
xchg
pop
int
sbb
cmp
ffree
inc
in
cmp
jb
xor
sub
aas
mov
je
jmp
sbb
lret
es
popa
flds
out
roll
lret
std
test
mov
push
push
lock
sub
jne
scas
dec
out
jmp
fcoms
push
and
or
or
loop
xchg
in
xor
mov
sbb
cli
add
fwait
jmp
jge
shrl
lcall
push
pop
mov
loopne
xchg
out
xor
test
mull
test
cwtl
adc
fs
and
shlb
cmp
stos
ss
in
adc
xchg
jg
rcll
sbb
cmpsb
imul
insl
push
cmp
inc
loope
das
out
and
xor
adc
add
mov
add
out
xchg
jbe
fidivrs
mov
cmp
pop
lock
push
cmpl
repnz
dec
rcr
adc
jns
mov
inc
adc
inc
sub
ret
sti
imulw
and
popl
fstpl
sub
inc
notb
stc
and
sbb
int3
xlat
mov
pop
mov
pushw
jae
and
outsb
pop
fidivrl
addr16
lods
out
in
out
in
lds
lods
fucom
push
push
inc
movsl
inc
repnz
rorb
and
xor
xor
fidivl
xor
xlat
ja
xor
in
sar
loopne
lea
lret
mov
pop
fldt
push
movsl
pop
imull
xchg
leave
jp
jmp
adc
pop
pop
jg
and
fs
arpl
mov
or
nopl
mov
xor
sahf
sbb
or
cld
jmp
scas
adc
fdivrp
adc
sbbb
pop
xchg
pop
inc
push
test
xor
xor
je
arpl
test
push
fprem
test
add
movsb
jmp
jecxz
mov
lahf
icebp
loopne
rcrl
movsw
cli
push
mov
inc
stc
and
mov
outsl
in
mov
mov
push
add
leave
xchg
repz
fisubrs
sti
loop
sti
xor
out
push
cwtl
lret
dec
rclb
test
testl
xor
leave
ret
leave
aad
mov
iret
ficompl
loope
jecxz
dec
lock
lock
shl
bswap
stos
daa
pop
sub
in
ret
push
test
icebp
mov
xchg
pushf
sbb
adc
loopne
lods
sub
push
dec
xor
push
mov
sahf
add
mov
lahf
out
enter
jbe
cmp
and
cwtl
mov
js
ret
pushf
jge
mov
repz
dec
fsubl
sbb
outsl
ds
jecxz
lcall
test
mov
mov
pushf
lods
shrl
out
and
movsb
sub
jnp
xchg
arpl
dec
push
shll
and
push
lods
or
in
mov
mov
sti
inc
ja
hlt
cmpsl
pop
shr
stos
mov
cmp
mov
in
mov
shlb
sub
jne
mov
es
push
mov
out
mov
insb
adc
xor
and
pop
xchg
outsb
aam
jns
pop
cmp
push
fs
ljmp
stos
into
or
dec
add
mov
aam
pop
shll
rcrl
sbb
adc
sarb
loopne
cmpsb
push
sbb
add
mov
push
adc
aaa
cmp
repnz
add
or
andb
movsl
pop
mov
mov
push
mov
xor
push
cld
push
pop
out
push
test
push
shrl
mov
std
xlat
push
iret
lea
out
sbb
loop
add
nop
push
mov
push
push
add
or
loope
jmp
pop
dec
sub
cli
je
add
mov
iret
stos
jle
sti
test
dec
xchg
cli
repz
pusha
das
pop
xor
adc
mov
push
push
inc
jmp
add
xchg
jne
mov
data16
xchg
and
leave
mov
test
dec
icebp
popa
sub
sbb
scas
out
push
mov
fcoml
push
or
adc
pushf
popa
test
aad
adcb
rcl
jnp
adc
addl
add
cmp
mov
popa
push
push
daa
je
xor
aaa
push
shrl
es
out
mov
jge
shrl
dec
jp
or
insb
mov
std
pop
test
xor
sbb
aas
and
or
and
jns
mov
stc
jle
mov
rclb
iret
aam
aad
inc
mov
or
or
jbe
movsb
mov
addr16
pusha
icebp
mov
ljmp
sub
shl
addr16
pop
lahf
fs
cmc
dec
add
push
ja
mov
dec
insl
imul
push
repnz
lods
es
out
call
jge
xchg
fwait
mov
dec
loopne
or
mov
add
add
lret
stc
lcall
movsb
jbe
outsb
seto
lods
xchg
mov
mov
call
sbb
xchg
mov
lds
jmp
ror
je
fstp
sbb
jne
mov
push
mov
pushf
sbb
mov
cmp
test
mov
aam
dec
cmp
and
adc
mov
and
ljmp
sbb
mov
lret
lds
xchg
not
and
cmp
in
rorl
mov
jb
imul
or
jbe
xor
dec
push
arpl
or
inc
repnz
jecxz
jl
sti
or
fs
xchg
lods
in
lahf
push
sbbl
mov
testb
mov
ds
bound
scas
pushf
das
lret
inc
pusha
outsl
add
clc
push
in
fdivs
sbbb
add
cld
xor
cmc
ss
add
xchg
sti
push
lret
pop
xor
in
stc
scas
sbb
stos
xor
cmp
js
cmp
inc
lahf
mov
js
pushf
pop
cli
fwait
lret
push
shl
xor
lahf
xor
cmp
xor
mov
les
fsqrt
in
add
or
xchg
pop
add
add
popf
fisubs
and
in
int3
mov
xor
pop
cld
pushf
sub
adc
iret
outsb
and
inc
xchg
adc
cmp
int
cmpsb
pop
cmc
or
jge
xor
xchg
mov
mov
inc
cmp
xlat
and
nop
imul
sub
loop
jo
ret
xchg
rorb
aad
or
pop
mov
push
xor
sub
pop
cli
mov
mov
cmp
pcmpgtd
jmp
mov
mov
xchg
in
xor
mov
pop
push
test
out
loop
mov
adcl
xchg
ja
icebp
mov
mov
aam
jecxz
pop
sub
pusha
pushf
inc
push
cwtl
fidivrs
sub
testb
cs
pop
loop
mov
fisubl
mov
xchg
xchg
divl
adc
pop
loopne
jg
pop
cmp
in
je
xor
mov
dec
sub
call
call
cli
or
dec
push
cmpsl
and
mov
test
ljmp
sub
fwait
pop
les
fucomp
je
and
inc
push
add
shll
popf
pop
in
lds
jne
rep
cmpl
mov
repz
aam
or
daa
sbb
bound
and
mov
push
div
adc
out
movsb
daa
and
mov
ss
aas
rcll
push
cmpsl
push
int
sub
cmp
cmp
jecxz
adc
fsubr
adc
jns
jg
iret
mov
xchg
mov
xchg
ret
xor
push
movsb
ror
pusha
add
jmp
xor
js
imul
movsl
mov
cmp
lds
das
jo
ret
adc
xlat
mov
shl
dec
dec
xchg
in
arpl
je
rorb
fdivs
lock
cld
sbb
cmp
push
or
fmull
cmp
cmp
cmp
lock
xchg
popa
pop
fistpl
pop
inc
push
rcrl
or
outsb
lock
fstpt
xor
mov
in
imul
rcll
mov
mul
test
mov
dec
std
test
mov
lods
repz
std
mov
js
ljmp
add
or
lret
fnstenv
out
mov
inc
jbe
nop
aam
imul
cmp
dec
popl
jl
int3
sahf
add
mov
cld
adc
add
leave
ss
insb
inc
push
push
dec
sbb
adc
mov
hlt
jne
sub
jno
xchg
and
and
stos
test
bound
pop
xchg
mov
cmp
push
sub
sub
stc
clc
negb
sub
mov
lret
cmp
fidivrl
call
xor
enter
ss
fsubrs
xchg
in
ja
insb
xor
sub
int
in
cmp
cwtl
jo
cltd
jns
push
aad
daa
sub
loope
pop
pop
or
xor
pop
pusha
lods
in
push
adc
mov
pushf
sbb
lods
sbb
push
cmc
pop
xchg
scas
push
mov
or
jg
out
inc
loop
pusha
xchg
cmpsb
test
pop
adc
xchg
lods
cltd
in
shrl
fidivrl
mov
pusha
xor
pop
mov
insl
movsb
push
push
sub
sbb
clc
fisubs
dec
iret
cmp
sub
push
mov
rorb
sbb
hlt
inc
movlps
xor
rcl
or
xor
xor
cmp
xchg
pop
cli
repz
mov
shlb
xor
fisttpll
stc
lock
faddp
xchg
add
xor
jo
push
adc
xchg
adc
jae
pop
sbb
ss
mov
dec
and
add
mov
adcl
fld
out
or
sub
pop
push
int3
call
xor
popa
sbb
lods
mov
adc
jbe
in
add
xor
adc
call
js
in
fsubrs
dec
xchg
ret
mov
repz
jbe
lods
jns
lret
rcrl
xor
dec
das
jnp
jl
or
mov
mov
stos
add
xchg
push
or
jp
mov
loopne
in
ret
jae
out
arpl
fwait
sub
es
loope
jmp
jl
iret
push
mov
push
bound
imul
inc
jmp
cmp
xor
je
cwtl
push
xchg
cld
xchg
lahf
dec
inc
imull
jle
add
jns
push
daa
lea
jecxz
js
or
icebp
shl
jmp
xchg
setnp
mov
xchg
xchg
or
mov
add
mov
gs
pop
daa
sub
mov
push
stos
xor
adc
jg
jb
pop
or
hlt
add
xchg
cwtl
mov
imul
jno
addl
out
cld
ret
test
inc
xlat
xchg
dec
bound
inc
xor
test
xchg
cli
mov
aam
cld
mov
dec
dec
xchg
push
fistpl
and
mov
xor
jecxz
fstps
adc
dec
xchg
dec
hlt
cmp
jp
mov
adc
dec
add
imul
in
mov
xor
or
add
repnz
or
icebp
into
das
cmp
call
pop
pop
lods
ljmp
sbb
lock
fnstcw
jbe
cmp
push
xor
lahf
orl
outsb
aaa
lds
cmp
push
mov
add
cli
sub
out
push
pop
in
sub
cmp
nop
cmpsl
fucomi
mov
stc
dec
ret
testb
mov
mov
mov
jnp
lock
sbb
test
xorb
sbbl
cmp
loope
mov
lret
arpl
loope
out
xlat
mov
cwtl
dec
adc
mov
ja
shlb
in
or
mov
bound
sbb
cs
lcall
push
jmp
enter
sbb
sub
or
cmp
test
xor
cmp
mov
mov
jae,pn
out
and
xchg
shll
dec
xor
clc
jbe
pop
rcrl
jae
inc
adc
inc
int3
sbb
in
dec
sbb
mov
stc
test
cltd
lea
mov
ds
mov
pop
or
enter
stos
mov
push
push
add
popa
daa
cmc
push
out
push
aad
paddw
out
ss
fsubp
sub
loopne
and
jne
in
xor
dec
pop
and
pop
std
lcall
mov
add
cmp
push
cld
cmp
js
imul
leave
push
imul
filds
dec
mov
xor
fildll
subb
je
pop
int
test
inc
mov
sbb
iret
xchg
aas
lret
dec
out
xchg
repnz
lods
pop
and
xor
out
sbb
ljmp
int3
dec
xlat
xchg
data16
mov
sub
testl
pop
popf
bound
insb
insb
jae
ret
adc
or
int3
fsts
stos
mov
ja
jge
insl
sub
cwtl
lahf
lahf
je
mov
dec
xor
movsl
cwtl
add
testb
push
xor
hlt
imul
inc
push
testb
scas
hlt
loope
cwtl
add
pop
sbb
ja
div
loop
sahf
les
mov
in
loopne
add
and
and
popf
jo
dec
xor
cmp
dec
mov
fcompl
int3
and
sbb
sub
jno
jnp
test
cmp
xchg
jno
dec
in
xor
or
xchg
loope
fidivs
jbe
les
sbb
call
enter
jg
insb
mov
cs
inc
adc
push
popa
hlt
push
mov
pop
dec
mov
mov
xor
or
sub
rolb
shrl
push
lods
jmp
ret
ljmp
sub
mov
xor
pop
mov
jne
xor
ficompl
pop
adc
sarl
into
cmp
xchg
ja
mov
sub
loopne
push
inc
inc
and
arpl
sub
in
mov
das
movsb
mov
stos
adc
cmpsb
add
jbe
mov
adcl
mov
adc
fldt
push
lods
xchg
sub
js
fcoml
inc
adc
pop
mov
adc
mov
cmp
mov
mov
adc
inc
mov
pusha
adcb
daa
insb
add
imul
add
int3
dec
mov
pop
fldt
lods
add
imul
outsl
mov
ja
loop
xchg
imul
fbstp
pop
adc
das
fstpl
cmp
mov
into
mov
add
in
xchg
dec
cmpsl
test
test
movsb
and
push
popf
jbe
inc
dec
adcl
dec
or
xchg
je
daa
mov
out
loope
data16
xchg
xor
fs
fs
loope
push
add
loopne
sbb
pop
adc
xchg
sbb
xor
lea
xor
pushf
sub
cmc
out
mov
lock
lds
punpckhwd
inc
stos
enter
test
add
shll
add
adc
sbb
xor
aas
pushf
test
mov
addl
inc
nop
add
add
ljmp
cld
testb
cmp
or
daa
mov
das
out
adc
enter
xlat
or
push
cmp
mov
scas
dec
sub
adcl
jecxz
in
daa
mov
pop
out
mov
pop
pop
adc
mov
mov
xor
xorl
xlat
and
data16
lret
fistpl
lods
mov
sbb
lret
inc
add
bswap
out
ret
push
je
add
adc
fs
out
push
rorl
lock
cltd
cmc
push
push
and
rolb
push
psubd
imul
in
mov
inc
stos
jmp
fsub
and
in
int3
jbe
fistpl
xchg
xchg
dec
out
enter
inc
out
jmp
mov
test
sub
fidivrs
add
nop
ja
inc
push
xor
call
icebp
pop
mov
and
or
fs
jns
push
cmpsb
popf
nop
xchg
sub
add
push
imul
mov
pop
dec
setae
mov
mov
popa
xchg
lods
aaa
mov
or
jl
dec
test
iret
cltd
arpl
push
adc
pushf
iret
mov
mov
lahf
xchg
dec
out
add
mov
xor
int
cld
adc
cmp
lret
iret
xchg
xchg
or
xchg
dec
std
and
mov
stos
mov
in
cltd
stos
cwtl
xlat
jno
mov
lret
f2xm1
dec
push
jmp
sub
pushf
sti
pop
push
inc
call
testl
std
push
lret
stc
mov
mov
insb
pusha
adc
inc
xor
popl
mov
rorb
std
cs
cmp
das
int
sbb
push
mov
or
movsb
test
es
jnp
fistps
fsub
pushf
pop
mov
and
pop
mov
add
jle
sbbb
lret
inc
xor
cs
push
pop
cwtl
mov
xor
cmpsb
div
and
pop
nop
aaa
cmp
addr16
fcmovnu
loop
iret
fcmovnu
punpckhdq
or
or
nop
scas
xchg
addl
push
sub
adc
dec
jne
in
cltd
jne
out
inc
fwait
popf
fistpll
xor
enter
pop
mov
iret
pushf
inc
mov
stos
sbb
fadds
movsb
int3
bound
sbb
inc
sarb
lahf
stos
mov
sub
ljmp
fisttpll
cmp
ds
inc
pop
jns
loop
sbb
mov
sub
xchg
sbb
adc
pop
mov
pop
and
mov
flds
mov
cs
jno
mov
cmp
xor
pop
mov
popa
pop
xor
mov
je
dec
loopne
repz
outsl
outsb
repz
inc
jnp
push
mov
dec
es
jp
mov
insb
dec
lret
inc
jg
add
aaa
pop
mov
fdivr
das
cs
cmp
add
inc
mov
add
andb
loop
dec
adc
xchg
jb
xchg
push
push
fdiv
fisubrl
sbb
cld
fucom
xchg
mov
adc
xor
pop
mov
adc
out
inc
shll
cmp
mov
xchg
mov
pop
in
add
pop
repz
sbb
idivb
push
insb
inc
pop
movb
ret
es
pop
adc
data16
mov
and
or
jmp
xchg
cmp
jp
sbb
lods
sbb
enter
sub
adc
bound
push
mov
add
push
pop
jbe
mov
mov
push
xor
repz
mov
cwtl
sarb
xchg
mov
xorl
add
jge
mov
outsb
push
aas
sub
mov
cmp
sub
and
push
filds
jle
dec
cmp
pop
xchg
repz
lret
or
call
sub
lods
xchg
push
and
xor
ljmp
push
and
pop
jl
add
dec
arpl
push
or
ja
mov
aad
cwtl
shlb
dec
les
xlat
mov
sahf
sbb
pop
inc
cmpsb
sti
cvtps2pd
rorb
jbe
nop
ret
and
ffree
jo
mov
repnz
outsl
jbe
mov
out
fstpl
or
aad
jge
out
aaa
mov
call
cli
mov
and
pop
jbe
jnp
int3
movsl
or
cwtl
pop
pop
psubsb
jo
out
jb
mov
sub
clc
out
adc
cli
sbb
mov
clc
xlat
dec
std
mov
lret
imul
pop
or
out
jns
inc
xor
xchg
dec
js
sbb
scas
mov
in
sub
hlt
hlt
xchg
inc
inc
cmc
outsb
hlt
lret
insl
pop
enter
leave
test
rolb
fwait
push
xchg
mov
int3
cmc
jecxz
rorb
data16
cmp
fmull
adc
sahf
movsl
aaa
stos
sub
cmp
mov
and
lods
xchg
inc
imul
lcall
fistl
flds
xor
ficomps
idivb
mov
fdivrl
cmc
jb
repz
dec
xor
adc
mov
enter
jl
enter
jp
jmp
mov
sub
or
push
jmp
pop
mov
in
lret
test
push
outsb
mov
call
push
sub
adc
incl
cmp
cltd
ficoms
cmp
sbb
sbb
lods
mov
jo
stc
dec
pop
addr16
jnp
ja
sti
pop
aas
xchg
jo
shll
lret
adc
mov
into
ss
or
arpl
and
xchg
fisttps
jbe
lds
adc
outsl
daa
sbb
inc
fistps
dec
dec
mov
popf
pushf
mov
mov
shll
mov
loopne
in
nop
movsb
jae
adc
cli
je
adc
mov
mov
aam
sub
mov
add
inc
es
and
dec
jb
imulb
and
add
push
fiaddl
inc
cmp
out
aas
sbb
sti
cli
insl
push
fisttpll
pop
insb
and
test
xor
enter
addr16
ds
pop
jp
inc
xlat
mov
xor
or
mov
shl
dec
or
mov
pop
sub
sahf
xchg
test
in
sub
and
mov
lret
jge
cmpsb
js
lea
aas
xor
mov
sti
sbb
adc
sub
and
sub
push
xor
cmp
adc
add
jae
jo
mov
mov
adc
inc
aaa
mov
cmpsl
push
sarl
cli
negl
or
lock
std
jnp
lea
icebp
ret
aas
js
mov
shll
orb
inc
sbb
outsl
rclb
and
aam
dec
jmp
add
mov
dec
cmc
add
inc
pop
pop
push
out
jmp
fmulp
mov
add
fwait
xor
call
cmp
xchg
adc
sbb
and
xlat
out
jecxz
xor
ss
movsb
pusha
mov
cmp
xor
adc
dec
push
idiv
loopne
inc
insb
jmp
mov
lret
mov
lret
stos
sbb
push
test
xor
xchg
jne
xor
jnp
add
outsl
test
div
push
filds
insl
push
nop
cld
pop
push
dec
xchg
popf
add
sub
es
jmp
push
movsb
into
push
imul
push
push
sti
rorl
jle,pn
push
scas
aaa
xchg
aam
loope
or
push
mov
add
mov
lods
fidivl
out
fdivl
and
out
push
sbb
addl
push
rorb
dec
mov
stc
sub
jle
inc
ret
push
or
dec
dec
out
test
jns
and
dec
loope
jl
clc
push
aad
inc
mov
jne
int3
je
push
stos
mov
into
out
imul
xchg
fidivrl
cld
cmp
shlb
or
xchg
mov
adc
push
cmpsb
out
mov
pop
push
movsl
fidivl
outsb
dec
shr
lahf
push
cwtl
mov
out
test
xor
push
cli
lret
sti
add
or
lret
jl
pusha
xchg
or
pop
pop
push
mov
push
mov
out
insb
xor
mov
fdivl
lods
dec
scas
xabort
xchg
xchg
icebp
addr16
lret
mov
mov
in
mov
icebp
mov
xor
mov
repnz
fwait
xchg
cmc
ficomps
test
inc
jno
cs
cmp
std
xor
xlat
mov
mov
aad
and
ffree
sbb
sub
jp
add
sbb
or
pop
out
jmp
or
cmp
pop
and
adc
rorb
cmp
xorb
sbb
add
lock
imul
mov
and
fsubr
in
iret
test
icebp
dec
fwait
clc
cmp
out
jecxz
cmovbe
mov
fbld
aaa
out
das
test
adc
and
popl
xchg
mov
push
ret
popa
pusha
sbb
mov
sbb
sub
push
std
cmp
cmp
mov
xor
loope
sub
cmp
mov
ljmp
and
mov
pusha
and
out
xchg
ret
ds
adc
test
or
andl
bound
sub
push
mov
jl
imul
out
add
pop
jg
and
popf
in
mov
and
aaa
js
int
push
in
cmpsl
jecxz
in
xor
fdivp
cmpsb
or
bound
test
mov
test
xor
dec
mov
aad
mov
cmpsl
psubq
inc
ljmp
sub
sub
jmp
push
and
lock
inc
push
mov
or
mov
jns
ljmp
cld
sub
ljmp
add
sub
in
cli
mov
int
jne
mov
pop
cmp
pop
test
popa
sub
insb
mov
fiadds
sub
mov
mov
sub
and
stc
cwtl
mov
outsb
lds
loope
xchg
out
pushf
sarb
adc
xchg
or
cmp
dec
or
xchg
push
hlt
mov
adc
fadd
rorl
sbb
push
pusha
push
and
sub
gs
push
mov
cmp
lods
dec
mov
dec
inc
dec
jae
adc
loopne
push
out
mov
iret
cmpsb
inc
jle
outsb
leave
fidivrs
mov
insb
stc
cmp
jp
xor
arpl
fmuls
cld
add
arpl
ljmp
inc
dec
add
out
lahf
test
cwtl
mov
popa
ds
push
lods
movsl
mov
fdivl
stos
cmp
push
jmp
je
inc
aaa
icebp
jmp
jns
mov
fwait
repnz
in
mov
xor
mov
idiv
in
or
push
xor
add
push
scas
hlt
jbe
cmp
lahf
inc
movsl
in
dec
dec
and
mov
jmp
fdivp
jo
sahf
add
repnz
xlat
pop
ds
push
test
pop
and
leave
mov
es
shl
adc
cmpsb
or
addr16
out
dec
in
into
mov
insl
lcall
or
lock
mov
jp
out
cs
xlat
mov
pop
loope
push
leave
ss
faddl
mov
mov
gs
jns
nop
pushf
pop
loop
inc
lds
fcmovne
mov
cmp
pop
repz
std
sub
scas
dec
add
adc
std
push
dec
dec
push
cwtl
push
loop
pop
fs
push
insl
stos
into
mov
jge
sub
lea
jle
push
xchg
xchg
loop
leave
dec
mov
cmp
push
fnstenv
adc
add
push
mov
dec
repz
repnz
in
jno
push
mov
pop
cmpsb
ret
faddl
pop
xor
je
int
sbb
pop
fstpt
dec
leave
lock
xlat
int
dec
ret
test
cmp
repnz
aad
aad
sbb
dec
sbb
inc
addr16
jne
sbb
push
das
xchg
cs
jle
add
jl
repz
jno
mov
sub
jne
imul
mov
cld
sub
aad
jno
push
pop
push
mov
push
hlt
ret
fld
ret
lahf
movsl
lret
adcl
shll
push
push
movsb
jecxz
dec
mov
cmpsb
into
dec
xchg
loope
mov
rorl
push
sahf
push
sbb
mov
jle
aam
mov
shr
enter
adc
pop
push
or
shlb
mov
dec
nop
js
test
cmp
icebp
jb
lahf
pop
push
shlb
lahf
in
push
lret
dec
outsl
ja
iret
adc
push
cltd
cli
push
mov
mov
mov
sub
insb
and
ficoml
jg
mov
loopne
dec
jae
popf
divb
mov
aaa
arpl
mul
inc
fs
in
sbb
rorb
push
popf
nop
ret
outsb
pop
push
sti
mov
dec
movsl
push
sbb
jg
aaa
xchg
gs
push
sbb
jne
mov
add
inc
mov
push
mov
idivl
mov
movsb
jo
adc
or
mov
fcmovnb
jo
imul
jb
adc
or
or
out
cltd
sbb
aad
iret
push
mov
pop
roll
mov
movsl
cmp
repz
jge
cpuid
and
jl
pop
repnz
adc
push
hlt
jo
adc
and
les
mov
pusha
mov
mov
xchg
lods
sbb
mov
push
or
mov
sbb
es
out
jbe
lcall
lahf
test
insl
push
sub
sbb
int
adc
pop
in
cmp
dec
cmp
aad
popf
stc
ror
cmp
push
shr
jmp
mov
nop
sbb
iret
fldt
mov
out
ljmp
push
cld
mov
sbb
cmp
jnp
in
sbb
sub
cld
or
addl
arpl
pop
and
rcll
sbb
dec
stos
add
into
dec
xchg
push
out
mov
dec
in
sub
bound
or
stos
sub
and
mov
or
ret
jne
sbb
sbb
xlat
outsl
lcall
movsl
js
mov
enter
mov
into
push
add
rorb
hlt
fsubl
mov
jmp
xchg
push
inc
fstps
fsubr
jl
pop
imul
pop
aam
fisubs
push
mov
inc
divb
xor
rcll
xchg
or
jmp
cmp
pop
and
lret
xlat
add
jne
in
push
enter
jo
ljmp
es
js
xchg
in
xor
pop
loop
scas
sbb
nop
sti
cmpl
jne
mov
or
hlt
mov
sub
lods
jb
roll
inc
cltd
iret
shll
insb
out
lcall
fstps
and
into
mov
and
cmp
xor
insb
add
and
rclb
mov
das
lods
lds
cmp
or
divb
or
dec
push
mov
sbb
push
sbb
les
dec
jne
adc
xchg
jecxz
jb
fdivp
movsb
sub
push
data16
sbb
aam
dec
lock
test
out
mov
mov
mov
dec
xor
call
outsl
push
cmp
or
xchg
ret
add
or
or
pop
jge
mov
je
adc
add
mov
pushf
pop
jle
in
mov
jnp
pop
int
push
jae
int
mov
test
add
cmc
test
pusha
scas
push
sar
adc
mov
jle
xchg
repnz
scas
sahf
roll
scas
add
imul
fs
mov
inc
repnz
je
gs
mov
popf
mov
inc
add
sbb
out
mov
lcall
lcall
sbbl
outsb
push
stos
sbb
repz
dec
inc
cmc
dec
sub
adc
in
pcmpgtw
fisttpll
xor
mov
mov
pop
push
push
daa
add
jp
jb
mov
jb,pn
cmp
fnsave
arpl
test
pop
dec
in
or
ret
lahf
jbe
mov
enter
addl
rcrb
mov
xchg
iret
fidivrl
lcall
xor
adc
sub
stos
movsb
lcall
in
rolb
lcall
push
push
adc
lcall
xchg
dec
les
dec
scas
push
outsl
xchg
xchg
sub
cmp
push
mov
jo
or
mov
xor
cmp
loop
add
sbb
das
testb
mov
out
jb
mov
push
scas
sbb
push
lock
out
mov
into
pop
mov
lods
cmpsl
stos
enter
jb
sub
and
in
and
fld
hlt
inc
iret
push
repnz
imul
fmuls
push
inc
push
jmp
lret
pop
outsl
mul
mov
aaa
iret
xor
test
add
int
test
cmp
sahf
push
std
adc
pop
mov
rorl
pop
paddusb
ljmp
subb
mov
push
mov
cmpsb
stos
pop
dec
or
sbb
lahf
mov
xchg
je
int3
sub
push
inc
jnp
divb
dec
iret
dec
scas
xchg
inc
movsb
lock
xchg
lea
and
sub
cmp
test
popa
sub
dec
in
ja
out
mov
inc
out
js
sub
das
enter
inc
rorl
ret
in
adc
out
fisttps
shl
mov
scas
bndldx
lods
in
sbb
out
cmp
cmp
ret
bound
xlat
push
loop
js
inc
mov
lret
xchg
xchg
fstpt
mov
loop
and
testl
repnz
rclb
repnz
dec
push
mov
lods
test
fwait
xchg
js
clc
incb
test
jl
cmpsb
jecxz
jge
out
xor
push
hlt
sahf
fcmovnbe
mov
std
pop
xchg
orl
aad
ja
call
jo
ror
dec
pusha
test
call
subb
mov
xor
jae
shlb
jb
push
je
mov
ds
call
test
sub
sbb
mov
and
adc
sahf
pop
jecxz
or
cmpsl
addb
dec
dec
xchg
xor
sahf
dec
and
push
xchg
jge
add
stos
mov
ss
loop
fwait
les
adc
and
push
push
jl
xor
mov
je
push
sbb
mov
dec
xor
pop
or
rorl
and
or
jne
cmp
loop
icebp
pop
movsl
mov
js
mov
cmpsl
imul
iret
jmp
int3
dec
lock
mov
jle
sub
scas
mov
jl
sbb
aaa
fstpl
scas
popl
fs
inc
jae
hlt
dec
or
mov
xchg
mov
out
fs
pusha
int3
xor
das
pop
xor
std
xchg
push
push
sub
dec
lock
jp
jmp
aam
js
jne
loop
fbstp
repnz
hlt
rolb
test
push
sbb
push
daa
test
out
push
sahf
add
add
xchg
sahf
mov
cmc
cmc
cli
inc
xor
xor
pop
cltd
stos
fildl
into
repnz
or
inc
inc
aaa
lea
inc
xchg
mov
fldl
stos
fildll
jl
sahf
lea
in
cmpsb
mov
pop
adc
mov
jns
jl
mov
pop
push
and
icebp
cs
insb
sbb
xor
shlb
ds
mov
adc
mov
add
scas
cmp
sbb
or
or
sarb
xor
pop
mov
sub
mov
arpl
test
cmp
add
hlt
shlb
and
inc
inc
and
and
insb
test
scas
imul
lcall
or
xlat
mov
jne
icebp
mov
loopne
sbb
push
enter
popa
mov
mov
ljmp
fldt
gs
test
add
mov
adc
mov
dec
cmpsl
or
xchg
mov
add
lds
push
loope
sbb
clc
stos
test
mov
pop
ret
fists
pop
inc
ret
inc
lcallw
test
jp
loop
mov
in
in
cmp
dec
rcll
push
aas
fwait
push
adcb
add
jbe
cmpb
add
mov
outsb
mov
mov
sbb
cli
sbb
or
das
dec
sti
ret
push
xchg
jne
push
and
lcall
imul
in
test
push
inc
movsl
push
push
ds
mov
xchg
aam
out
adc
mov
iret
xadd
dec
mov
jg
loop
in
int3
cs
lahf
push
rcll
sbbl
mull
stos
add
inc
sbb
xorl
and
mov
add
xchg
rclb
aad
pop
jns
mov
lea
mov
pusha
add
pop
push
mov
xor
lock
mov
stos
imul
shlb
sub
insb
pop
dec
aam
mov
jnp
mov
inc
cmp
ja
or
outsb
xchg
scas
or
mov
jl
mov
mov
inc
les
lcall
push
test
adc
mov
pop
inc
xor
adc
rorb
lds
mov
int
xlat
or
inc
lea
sub
mov
iret
push
sbb
mov
test
or
xchg
dec
idivl
mov
jge
fidivrs
inc
inc
mov
cltd
shl
je
sti
int3
leave
ret
insb
sbb
sub
ret
pop
insl
sbb
loopne
push
outsl
sub
lret
push
adc
mov
lea
sbb
jo
andl
insb
repnz
pop
sbb
xchg
jbe
outsl
std
push
lea
dec
and
dec
sub
pop
push
fdivl
xor
and
arpl
jg
cli
adc
insl
xchg
xor
repz
dec
shl
xchg
xchg
fs
fldt
xor
cli
jecxz
jb
pop
add
cwtl
aas
out
sbb
pop
imul
mov
pop
ljmp
or
pop
add
mov
mov
ja
ljmp
dec
and
xchg
add
jmp
or
mov
fstpt
and
and
iret
jp
pop
lcall
jne
imul
movsb
inc
xor
in
push
sub
sub
jg
jmp
stos
cli
add
pushf
stc
aam
mov
sbb
lcall
ss
jle
loop
push
sti
repz
das
mov
daa
sahf
dec
jo
push
xchg
mov
mov
jb
pop
icebp
mov
xchg
imull
cmp
xchg
lds
push
adc
pop
int
leave
lea
movsl
sbb
in
xchg
sbb
inc
ret
push
pop
repz
jbe
dec
add
out
jb
xchg
fwait
lods
mov
outsl
xor
enter
push
insl
or
jbe
and
jo
and
pushl
cs
and
dec
outsb
mov
incb
adc
repz
repz
popa
pcmpeqb
out
arpl
push
mov
or
cmp
cmp
push
out
sub
das
xor
mov
not
sbb
mov
xchg
adc
jg
hlt
jns
fwait
call
sbb
mov
mov
je
jecxz
mov
into
or
jmp
mov
xor
fs
pop
jb
sub
mov
repz
inc
push
nop
add
jno
lahf
jnp
xchg
xor
loope
addr16
add
js
dec
inc
and
test
inc
jg
lea
inc
ret
stos
xor
in
add
mov
ljmp
adc
data16
loopne
loop
cmpsl
cld
dec
xor
outsl
fcmovne
out
cmp
repnz
cmpsl
push
and
dec
cmp
mov
add
sbb
push
rcrb
pop
and
pop
ljmp
rorb
daa
rorl
cmp
ret
pop
inc
hlt
or
jge
push
popa
icebp
mov
pop
push
lods
popf
arpl
les
nop
shlb
pminub
push
mov
enter
sahf
xchg
xchg
xchg
incb
cmp
sub
jb
iret
dec
into
clc
stos
fs
mov
xchg
sub
xchg
jg
addl
pusha
adc
shlb
je
sub
test
sbb
test
sbb
arpl
or
dec
cmp
mov
jns
jg
fstps
test
sti
out
xor
addr16
sbb
ret
cmp
lds
int3
fstp
sti
mov
int3
jp
mov
outsb
adc
lret
add
pop
test
cmp
inc
shll
pop
jbe
pop
in
adc
lahf
stc
insl
mov
adc
push
lods
push
pmuludq
inc
cltd
push
cmp
jl
aas
leave
and
and
jmp
and
notl
fstpt
das
aam
mov
inc
mov
ja
std
mov
sahf
out
aas
outsb
ds
cmp
mov
pop
and
ds
sub
push
lea
fwait
jp
test
int3
sub
jle
jmp
insl
mov
cli
ja
cltd
add
lahf
pop
andb
adc
push
mov
int
pop
andb
icebp
push
sub
mov
sbb
mov
fidivl
sar
lods
jg
ret
mov
add
add
orb
bound
into
nop
js
sbb
rclb
jb
push
jl
pop
cltd
iret
mov
jmp
mov
shrb
mov
dec
and
subl
addr16
mov
dec
push
sub
jp
mov
xor
pop
mov
pop
push
inc
pop
loopne
push
enter
xor
leave
hlt
push
mov
or
jecxz
xor
test
fisttps
jge
imul
push
test
in
push
push
pop
fdivrs
push
fstl
lret
mov
enter
push
mov
and
cmp
push
inc
adc
xchg
add
clc
add
adc
adc
xchg
cmp
jo
gs
push
int3
xlat
in
dec
mov
adc
fidivrl
subl
jnp
mov
in
fcomp
andl
shlb
jecxz
repnz
int3
cmp
and
ret
insb
sbb
daa
sbb
sbb
daa
and
test
sub
and
and
lahf
xchg
mov
mov
fwait
shl
mov
out
mov
push
inc
shlb
xor
adc
push
dec
in
add
or
inc
mov
and
jg
xchg
push
mov
icebp
xchg
jne
push
dec
out
mov
stos
jg
push
call
jge
gs
arpl
or
inc
add
fidivs
hlt
jmp
shr
nop
xchg
and
fnstcw
and
pusha
scas
insb
push
cwtl
popa
lea
or
and
sub
mov
insb
cmc
and
mov
sbb
rorl
testb
popf
gs
dec
cs
aam
sti
pop
mov
jnp
xchg
test
sub
inc
repnz
pop
pop
dec
jl
pop
sub
adc
jecxz
sbb
mov
out
pop
ja
lret
or
mov
lcall
or
pop
filds
or
testl
stc
into
fldz
xor
sub
in
xor
xchg
rcr
andl
sbb
orb
pop
inc
stc
add
jne
add
inc
js
fdivrs
ret
fcmovne
dec
subl
xchg
inc
cmp
push
adc
js
or
sub
lods
cmp
sbb
xchg
pop
sahf
fldenv
test
aam
lds
imul
sbb
movsb
push
es
fsubrl
sbb
repz
aad
icebp
test
push
cmp
popa
push
push
xchg
mov
or
sub
aaa
inc
imul
pop
inc
dec
push
cmp
hlt
cmp
cmp
sub
mulb
jo
xor
adc
pusha
lret
clc
jno
xchg
and
stos
lcall
std
dec
mov
mov
sbb
push
pop
jge
sub
stc
popf
cmp
in
aam
push
xchg
out
mov
jno
ret
push
push
pusha
pop
js
jle
add
sub
enter
dec
mov
mov
scas
jne
mov
in
inc
jne
outsb
pusha
pop
dec
push
outsb
rcr
sbb
test
pop
cmp
dec
outsl
sbb
xor
or
loopne
dec
call
cmpb
cmp
lods
movsb
inc
mov
sbbb
inc
dec
adc
or
mull
lret
rcrb
mov
push
mov
pop
sub
cmp
cs
out
syscall
iret
mov
push
push
clc
or
pop
pop
jmp
test
mov
icebp
nop
movsl
sbb
cmp
xor
enter
dec
lock
inc
call
cltd
add
fcoml
cld
add
add
sbb
out
and
jbe
shlb
stos
sbb
rcll
xchg
dec
lock
int3
add
ss
sti
scas
inc
sub
jecxz
ficoml
loop
mov
cmpsb
jns
and
cli
loop
aad
in
mov
stc
aaa
sbb
out
pop
daa
xor
cmp
jle
fistps
mov
cmp
jne
insl
movsb
fdivrs
and
push
gs
cmp
nop
fneni(8087
fld
packssdw
repz
mov
in
mov
shl
ret
push
xchg
pop
out
leave
bound
push
push
mov
hlt
cltd
add
cs
lock
cwtl
xor
xchg
icebp
movsb
clc
sbb
movnti
lahf
or
ljmp
arpl
cltd
test
mov
mov
aam
data16
cmp
xchg
jg
ret
jae
out
hlt
jmp
mov
gs
dec
pop
adc
sbb
fistpll
shrl
fiaddl
addl
addr16
sbbb
dec
xor
or
mov
mov
cmpsb
in
lods
enter
data16
inc
add
sub
cs
fstpt
sub
push
addr16
loopne
stos
jmp
inc
divl
enter
inc
stc
imul
push
fdivr
dec
js
repnz
icebp
xchg
and
repnz
jo
mov
jge
clc
lahf
sub
repnz
xchg
jl
aaa
enter
inc
sub
insb
sbb
jle
or
or
inc
iret
push
lahf
mov
fdivs
mov
sub
cli
loopne
push
jg
hlt
sbb
scas
add
iret
dec
leave
loope
adc
scas
cmp
cmp
stos
pop
punpcklwd
sub
push
lahf
nop
shlb
jns
in
dec
inc
pop
and
lds
loop
stos
icebp
fwait
ret
subb
push
icebp
movsl
fnsave
rcl
pushf
movsl
in
test
sti
subb
sti
jge
xchg
push
push
adc
lahf
push
add
inc
fisubs
adc
cld
gs
jne
xchg
lea
gs
hlt
jne
lock
dec
push
xlat
add
pop
pusha
les
idiv
add
add
outsb
lock
ss
lret
cmp
das
cmp
outsl
sub
adc
mov
mov
repnz
sub
xchg
std
cmpsb
out
mov
sub
fwait
mov
aas
and
mov
cli
pop
shlb
rorl
mov
or
aaa
sub
or
adc
xchg
pop
jecxz
xor
add
insl
jl
mov
fstps
les
inc
lea
add
in
mov
ret
adc
fldl2t
call
xchg
pushf
ret
sub
mov
xchg
out
loop
dec
sub
in
push
je
lret
sar
repnz
jmp
cmp
jp
test
or
ret
aad
inc
aad
lock
mov
orb
add
hlt
sbb
ds
insb
and
fisubs
aaa
and
stos
jno
and
jo
sarb
std
mov
loope
pop
jns
push
fyl2xp1
jae
xor
mov
mov
add
dec
push
xorb
add
ja
mov
and
sbb
and
xchg
sub
or
cs
push
leave
add
lods
bndldx
lods
sbb
mov
stos
out
and
imull
inc
idivl
pop
lea
movsl
xor
idivl
movsl
pop
jno
js
fmul
fwait
ds
movsl
jmp
push
xlat
adc
stos
adcl
xchg
sbb
jge
sbb
mov
cmp
loopne
data16
mov
mov
cmp
mov
je
cltd
jecxz
or
pop
cmp
pop
icebp
ja
insb
fs
rcrb
movsb
out
rclb
cmp
jae
mov
pop
mov
adc
sbb
movl
xchg
adc
or
repz
outsb
xor
xor
lods
sbb
aad
mov
mov
push
add
movl
insb
test
ja
mov
inc
mov
mov
mov
into
xor
jge
das
mov
jecxz
cmpsb
scas
pop
cmp
mov
adc
mov
insb
adc
mov
jb
jne
add
inc
add
jns
mov
sub
mov
push
lods
pop
jge
mov
and
adcl
mov
jbe
inc
hlt
add
stos
daa
rcrb
out
sbb
jo
mov
add
call
sbb
addr16
push
loopne
in
and
mov
lcall
cld
cmp
xor
or
pop
fbld
clc
fs
jl
inc
xor
dec
sub
xchg
faddl
mov
popf
movsb
inc
std
lock
sbb
nop
cmp
push
jl
push
and
cltd
ljmp
lcall
push
xlat
mov
lcall
shrl
js
rcrl
loopne
scas
aam
and
pop
in
dec
xorb
jge
cmpsl
sbb
movsb
jle
out
sbb
dec
lret
jp
and
mov
pop
mov
testb
push
push
jle
clc
xor
jmp
jp
js
and
dec
adc
outsb
shll
cmp
clc
jno
xchg
xchg
cmp
and
lea
sub
cmp
sub
inc
or
jne
mov
imul
mov
sbb
and
adc
sahf
aaa
dec
push
mov
inc
sub
imul
lret
jl
or
test
xlat
call
xchg
scas
test
into
and
js
xchg
mov
neg
sub
out
xchg
outsl
inc
inc
mov
push
push
sbb
scas
cmp
notl
inc
pusha
movsl
inc
push
sbb
insb
inc
push
xchg
ljmp
push
in
adc
arpl
mov
loope
sti
jo
push
outsb
sub
pop
push
mov
push
pop
or
and
or
mov
push
outsl
mov
jo
subb
sub
add
test
je
xor
fwait
sub
push
pop
mov
xchg
inc
imul
aad
add
data16
es
pop
sbb
in
jp
add
inc
or
jl
sbb
stos
or
adc
call
pushf
das
or
roll
push
add
fs
push
rorb
pop
pop
mov
ja
ja
arpl
mov
push
push
lahf
mov
sti
js
and
shrb
loop
jnp
repnz
xor
mov
sub
push
fwait
sti
insb
sbb
xor
adc
movsl
mov
pop
push
or
outsb
bound
ret
sbb
sbb
into
dec
inc
rcl
add
lcall
or
out
xor
ret
sbb
dec
fstp
sbb
or
je
push
stc
jae
pop
jne
test
sub
rclb
sbb
mov
xlat
loop
push
dec
mov
clc
imul
pop
jmp
adc
sbb
pop
jecxz
rorb
movb
jp,pn
or
sarl
push
adc
cmp
outsl
aad
cmp
jnp
cli
or
xor
and
aam
cltd
xor
mov
mov
pop
or
jb
mov
push
sahf
sbb
enter
sti
lret
std
mov
inc
add
mov
daa
cmpsl
cmpsl
fisubl
test
outsb
xchg
fimuls
mov
add
xor
lods
xchg
add
arpl
loopne
jae
add
fdivrs
int
loopne
adc
insb
and
sti
and
add
ret
mov
jmp
cmc
pop
fsubrs
int3
cmpsl
inc
stos
fbstp
lods
inc
and
cli
loop
imull
sub
jae
sub
cs
enter
lods
sub
and
xchg
pop
pop
daa
sbb
out
out
lret
scas
iret
adc
sub
mov
cwtl
push
xchg
test
push
leave
or
lods
fs
enter
enter
sbb
xchg
cmp
mov
mov
push
movsb
jp
rcrb
pushl
and
popa
shll
data16
imul
iret
insb
mov
or
ret
cmpsl
fisttpl
testl
movsb
push
xorl
in
inc
mov
call
adc
mov
lret
xchg
fistps
dec
sbb
movsb
or
pop
ja
cmp
mov
mov
mov
lahf
mov
pop
xchg
add
hlt
sbb
adc
jg
jg
lcall
mov
cmc
stc
sbb
je
notb
cmp
sub
xorb
faddl
imul
jge
sbb
mov
or
push
inc
xor
aad
ds
adc
into
pop
xchg
or
nop
scas
mov
rcrb
outsb
call
xchg
loopne
and
mov
jmp
or
mov
dec
push
or
push
out
ja
and
cltd
movsl
or
pop
xor
mov
sub
sti
xchg
dec
int
add
sbbb
and
jecxz
and
arpl
sbb
jmp
lods
mov
or
ret
jne
imul
and
cs
jb
in
dec
push
dec
aad
inc
push
fidivl
push
mov
add
cmc
add
fiadds
lahf
mov
jecxz
mov
add
ud0
xchg
dec
fsubrp
mov
cltd
mov
in
aas
dec
jbe
mov
dec
mov
xchg
inc
outsb
daa
in
inc
repnz
add
in
ss
jge
sbb
stc
xchg
hlt
jp
data16
out
call
int3
inc
fidivrl
xchg
decl
cmp
jp
mov
jbe
in
shll
xchg
rclb
leave
inc
or
jecxz
pop
fldl
js
mov
imul
into
inc
ss
lret
push
inc
iret
add
call
sub
mov
mov
cmpsl
movsl
ss
movsb
test
pushf
int3
ljmp
pushf
mov
fbstp
xchg
iret
adc
mov
movsl
xlat
pop
cs
clc
out
jne
xchg
jge
insb
cmp
pushf
mov
adc
xor
bound
jmp
ret
lock
std
out
push
or
mov
and
jecxz
push
mov
dec
inc
les
pop
xchg
jbe
pusha
sbb
cmp
daa
add
sti
out
xor
add
jecxz
jne
add
rclb
or
adc
cmp
jmp
cmp
push
and
loop
nop
and
out
movl
lcall
push
sbb
ja
ficoms
ficoms
out
xchg
imul
outsb
push
test
xchg
test
mov
xor
aam
sbb
push
jne
mov
std
and
add
mov
cmp
push
jo
sbb
stc
fidivrs
jno
pop
cld
fisttps
mov
popf
mov
shlb
dec
jl
xor
and
dec
cs
popf
fnclex
icebp
push
xchg
pusha
push
jle
pop
xchg
pusha
icebp
or
mov
ljmp
fsts
mov
js
and
push
jp
mov
jmp
mov
scas
popf
cmp
mov
push
mov
cmpsb
sahf
mov
call
fstp
mov
dec
pop
lods
pop
lods
inc
es
xlat
hlt
ret
jp
jl
ret
add
call
sub
fistps
pop
dec
fisubl
mov
cmp
inc
repnz
push
addr16
mov
lret
xchg
pop
xor
jge
and
sar
inc
or
mov
scas
and
fwait
dec
out
xor
fldenv
adc
add
pop
adc
in
lret
push
xchg
stc
add
js
leave
inc
fwait
xor
mov
push
mov
rcrl
pop
or
mov
test
adc
pop
adc
mov
cmp
sub
jnp
sub
push
cmp
lret
clc
std
in
stc
mov
aaa
or
add
pop
jno
cmp
sarl
pop
mov
jmp
test
lcall
leave
pusha
outsl
insl
sbbl
cltd
in
imul
sub
dec
xlat
jnp
inc
in
jl
orl
mov
in
cmpsb
sbb
lods
xor
xchg
pushf
xor
mov
into
sbb
mov
leave
lea
add
pop
pop
into
push
xchg
sbb
jne
lock
mov
test
mov
mov
inc
lahf
lret
xchg
ret
sahf
or
inc
sbb
loop
in
push
rolb
dec
add
and
add
aas
and
adc
xor
int3
ss
inc
test
aas
fistps
inc
mov
xor
dec
rcrb
cmc
shl
les
push
ret
mov
jo
pop
or
xor
jge
inc
scas
out
and
and
lea
div
jb
aam
jge
dec
fwait
scas
lcall
cwtl
sbb
mov
cld
push
adc
mov
mov
push
ds
pop
movsl
dec
mov
loop
jbe
sbb
jmp
bound
lahf
mov
imul
je
or
xchg
and
in
or
sub
int3
or
call
sub
or
addr16
push
movsl
jmp
sbb
mov
add
and
xor
mov
loop
aaa
call
mov
jno
adc
pop
push
subb
test
sbb
cs
lret
shrb
out
popa
in
repz
add
outsb
js
repnz
das
push
push
sbb
xchg
popf
mov
cmpsb
aas
sarb
cmpl
icebp
xor
imul
rclb
in
jns
lods
add
sbb
aad
add
shll
mov
mov
mov
dec
push
add
adc
dec
pop
ret
icebp
xor
fwait
mov
fnstsw
jmp
mov
lret
nop
push
addb
sub
mov
lea
xchg
add
adc
movsl
loope
scas
sub
fbld
pinsrw
cs
add
ficoml
mov
add
adc
xchg
sti
lods
idivl
pop
pop
jp
or
sbb
xchg
push
mov
cmp
xor
xrelease
sbb
inc
inc
sub
adc
int3
mov
shlb
es
or
inc
jp
scas
loop
shrl
pop
cld
jle
dec
push
shrb
stc
daa
test
xchg
cmpl
jo
cmc
inc
rorb
popl
test
cltd
cmp
xchg
inc
test
fdivs
push
cmp
xchg
push
das
xchg
sub
ja
mov
clc
ljmp
loopne
test
sub
sub
es
push
xchg
dec
shll
lock
or
cmc
xchg
adc
cmp
jecxz
addr16
mov
arpl
fidivrs
pop
repnz
aam
lock
lcall
pop
xor
jge
inc
fs
not
cmp
inc
mov
les
or
and
ret
rorb
enter
fmull
popa
and
push
mov
orl
imul
loope
test
pop
inc
cmpsb
xorl
jg
dec
pop
mov
ljmp
movups
sar
jle
cmpsb
mov
mov
gs
mov
jae
xor
test
mov
add
fldt
xor
data16
sbb
je
push
fldl
int
dec
mov
jp
lods
dec
inc
inc
jge
mov
scas
mov
mov
push
push
mov
out
push
xor
mov
es
add
cmc
rolb
div
das
push
push
fdivl
incl
mov
jno
jle
cmp
xlat
icebp
inc
and
fstl
mov
movsl
adc
rol
movsl
mov
mov
int3
xorps
data16
sbb
out
or
adc
xchg
mov
inc
int3
xor
push
push
or
cmpxchg
adc
leave
add
jnp
adc
xchg
mov
mov
or
cs
lret
mov
add
out
xchg
shl
cmpsl
je
or
cld
outsl
popf
into
outsb
sahf
xor
mov
and
fidivrs
aaa
scas
mov
adc
dec
fs
mov
jno
std
outsb
shll
inc
testb
xchg
xor
xlat
mov
into
clc
sub
cmp
adc
push
mov
movsb
mov
loop
stos
inc
mov
cmpxchg
or
movsl
adc
inc
loopne
outsb
cmp
mov
dec
push
and
testb
loopne
cld
add
xor
mov
jle
mov
faddl
jae
cmp
fwait
arpl
repnz
fidivrl
push
cmp
and
notb
inc
aam
mov
das
jmp
loope
mov
lods
stos
scas
repnz
adc
push
mov
nop
callw
cmp
push
loopne
dec
sahf
push
jo
call
std
dec
jns
cli
inc
lret
rep
ficoml
sbb
jnp
sbb
loope
pop
fldt
test
jp
sub
shlb
dec
test
mov
loop
mov
inc
rcl
sub
mov
imul
mov
jb
stos
rcll
shl
push
cmpsl
xchg
adc
shl
pushf
dec
ja
call
rol
jle
pop
xor
aad
aam
push
orb
leave
inc
pop
ja
sub
add
int3
jb
cmp
cmp
data16
lcall
xor
addb
stos
xchg
and
add
push
add
inc
mov
sti
flds
adc
and
jp
push
pop
or
ret
jb
ljmp
ja
jo
adc
jae
jle
sbb
mov
loope
ss
ljmp
and
out
mov
ficoml
movsb
sbb
movsb
addb
enter
adcb
jecxz
inc
lds
test
add
scas
pop
loop
pushf
aaa
out
jno
std
aam
pop
lcall
cmpsb
aaa
outsb
mov
jp
push
fisubl
stos
push
xor
push
aas
int3
pop
mov
sbb
cmp
push
ljmp
mov
in
or
notl
sbb
jns
or
popf
adc
test
pop
addr16
cmpsb
jge
sub
push
sti
adc
bound
js
mov
lods
jne
dec
les
test
popf
push
insl
mov
mov
imul
mov
leave
xchg
imul
push
pmaddwd
aas
jmp
int
test
mov
cmp
es
inc
loopne
xor
mov
or
pop
nop
add
das
inc
push
rcrl
xchg
push
push
inc
add
and
pop
out
fadds
dec
movsl
xor
cmp
mov
cmpsb
pop
or
lret
aad
push
lea
sub
out
or
and
jns
scas
movsl
inc
add
add
cmp
lock
cmpsb
inc
aas
add
ds
lahf
faddl
xchg
push
or
js
mov
and
ja
nop
inc
lds
fucom
and
inc
jge
xor
movsl
repz
mov
out
mov
pop
mov
mov
mov
mov
arpl
or
dec
and
jno
icebp
stc
mov
mov
es
arpl
sti
jbe
adc
sarb
int
fwait
dec
retw
das
dec
cmpsb
jecxz
cmp
shrl
loope
int3
dec
fcoms
fstl
add
hlt
inc
lock
popf
faddl
and
dec
xor
sarb
mov
push
imul
fsubrs
leave
jbe
testb
ljmp
fistl
popf
xchg
sbb
mov
jle
ds
push
dec
jb
sbb
repnz
mov
dec
mov
adc
mov
xchg
ret
pop
fwait
rorb
std
mov
stc
imul
out
dec
out
inc
mov
shl
cmp
popa
fwait
adc
and
mov
inc
jno
jns
and
mov
repnz
xchg
faddl
or
jns
lret
jge
push
rcr
mov
loop
mov
xor
sub
or
test
imul
cmp
pop
lret
xor
sub
dec
cmpsb
mov
lret
xor
jp
inc
adc
dec
nop
cmp
sub
xchg
push
out
icebp
or
pop
rcrl
in
clc
jno
push
lds
std
pusha
out
and
push
push
xchg
adc
ffree
scas
cmc
dec
in
xor
imul
xor
xor
cmp
jl
push
shrb
cmp
jb
pushf
jb
push
push
lret
inc
adc
or
mov
or
jb
jg
cld
stos
xchg
das
sub
inc
lods
xor
pop
cmp
xchg
jb
xor
imul
orl
pop
sbb
arpl
dec
ret
in
push
xchg
jno
mov
push
dec
pop
add
fcomps
lret
into
and
lret
or
loope
outsl
jno
cwtl
fidivl
mov
test
mov
sub
mov
insl
mov
lea
or
jno
popf
inc
in
pop
xchg
sbb
sbb
adc
xchg
subl
cmp
jns
loopne
dec
mov
inc
fistps
lds
mov
dec
ret
cld
or
cwtl
arpl
jmp
lea
or
sbb
cmpsb
stos
movsb
jbe
cmpsb
sbb
add
pusha
dec
out
xor
xor
pop
or
int3
push
push
push
adc
ja
sub
pushf
into
arpl
aas
adc
sbb
call
aaa
pop
or
push
jle
call
test
sarb
mov
in
ss
jge
adc
ljmp
xor
push
pushf
std
sbbb
leave
popf
sbbl
pop
aam
pop
or
jmp
repz
test
in
add
imul
aas
sbb
test
mov
mov
popa
fimull
daa
mov
add
push
in
std
dec
popa
jecxz
int3
add
add
call
or
les
xor
test
out
jno
mov
psrad
adc
xchg
mov
fcompl
cmp
and
lds
jl
inc
push
stos
sub
sahf
ja
ret
xor
int
imul
push
imul
xor
stos
adc
xor
and
xchg
mov
pminsw
hlt
sub
imul
inc
stos
add
or
or
sbb
cmp
mov
push
sarb
inc
mov
mov
shlb
fisttpll
sub
sub
out
shl
movsl
addr16
mov
jl
pop
pop
popf
in
xchg
inc
cs
daa
ljmp
divl
scas
xor
add
outsb
dec
scas
sbb
dec
jb
faddp
js
or
popf
sbb
push
inc
mov
roll
test
pop
cmp
insb
sub
mov
not
sarl
shl
jae
aaa
jmp
pop
repnz
cmp
pop
add
inc
popa
sbb
jno
stos
mull
aas
mov
mov
ret
sbb
jno
sub
mov
sub
testl
xor
jecxz
xchg
and
inc
or
adc
sub
fdiv
stos
or
sbb
pop
cltd
mov
ret
das
jl
out
dec
ret
in
jae
rorl
lods
cwtl
lods
fs
lock
pop
adc
data16
cmp
enter
stc
cltd
int3
lahf
les
scas
or
mov
das
in
mov
or
jbe
xor
fildll
pop
add
xchg
xchg
xor
mov
mov
and
mov
fsubs
xchg
bound
insl
mov
mov
xor
jns
jl
ret
xor
and
cmpsb
pop
out
outsb
inc
add
les
xchg
sub
mov
dec
jb
xor
mov
add
xor
mov
mov
xlat
and
push
jg
cmovg
lret
xor
mov
pop
jmp
into
sub
jb
pop
icebp
leave
flds
push
icebp
mov
cmovle
lea
cltd
data16
dec
cmp
fnstenv
incb
push
lods
dec
sti
and
mov
nop
bound
aad
cmpsb
pop
or
nop
dec
pusha
push
xchg
jge
es
lcall
ret
xchg
aaa
jmp
mov
popa
cmp
fdivrp
jbe
jge
jb
push
add
ret
lock
push
cli
push
mov
dec
push
push
pop
xor
pushf
aaa
jbe
sub
or
push
test
or
and
iret
mov
movsl
scas
and
lds
xor
pop
je
or
lock
mov
bound
xchg
scas
fsubr
inc
mov
push
and
dec
pop
dec
and
mov
xlat
and
jb
ror
stos
inc
mov
pusha
mov
inc
test
mov
cltd
dec
sub
in
adc
cltd
add
cmp
jmp
int3
xchg
xchg
xor
sbb
push
loop
shl
ja
cli
lahf
filds
sbb
push
aas
insl
outsb
add
lcall
jmp
ret
test
ss
lret
je
test
jecxz
inc
mov
fbld
or
mov
cltd
pop
sti
jno
loop
push
test
fldt
lea
inc
mov
inc
mov
leave
int3
imul
or
ret
push
outsb
mov
lret
fsubrs
shll
rorl
mov
sahf
mov
push
subb
cmpsb
test
push
icebp
jno
ja
adc
mov
pusha
hlt
sub
adc
fimull
daa
pusha
out
imul
mov
cmp
xchg
mov
mov
ljmp
pop
dec
jp
adc
mov
or
push
fcompl
data16
mov
push
mov
insb
dec
ss
xor
fstps
movntq
shl
jno
add
idivb
inc
aas
int
jge
cli
jno
xlat
movsl
xchg
out
dec
insb
sti
xchg
pop
add
pop
inc
or
pushf
aaa
mov
subb
xchg
scas
dec
lret
rcll
cltd
add
out
ucomiss
xor
ss
cmp
mov
and
stc
xchg
jne
aam
in
sbb
mov
jae
or
divb
cltd
dec
adc
push
dec
add
or
pop
mov
pushf
push
push
lock
int3
cmp
push
aaa
lea
ds
mov
roll
sbb
lock
bound
sahf
insb
adc
add
push
mov
int
sti
movsl
pop
and
pop
mov
jns
aas
cvtps2pi
pop
lret
xchg
pop
repz
insl
or
dec
cld
js
jno
orl
loope
rolb
insb
nop
test
adc
vmovdqu
sub
repnz
cmpsl
or
les
xor
stos
sub
xlat
sbb
xchg
ret
pop
arpl
dec
dec
jge
dec
cmp
add
push
mov
call
imul
dec
cmp
mov
sti
or
pop
sarb
sahf
call
lds
sahf
rcrl
faddp
in
adc
inc
je
les
stc
ret
dec
xor
jb
mov
cmpb
hlt
aas
cwtl
or
push
cmp
out
ret
nop
dec
adc
xchg
shl
fists
mov
pop
push
mov
or
bound
mov
xchg
adc
ljmp
cmp
push
js
sub
lar
cmp
mov
fs
adc
fcomi
inc
aaa
dec
cli
jo
dec
adc
pushf
lods
nop
adc
mov
mov
mov
rorl
mov
enter
stc
and
sub
and
cli
sbb
add
lea
cwtl
cmp
cmc
jns
push
ret
jb
fs
jne
andb
jmp
lahf
mov
push
mov
xchg
sbb
mov
mov
repz
shrl
fcompl
shll
rclb
mov
cmp
xchg
movsl
out
cmp
xchg
ss
jecxz
enter
or
cwtl
sbb
mov
cmpl
mov
sbb
jl
jge
jge
push
dec
sbb
sub
cmpl
push
inc
pop
sub
es
and
jg
orl
dec
out
adc
jne
add
in
cwtl
xor
xorb
es
fstl
dec
lock
and
insb
arpl
in
inc
insb
aaa
xor
sub
ret
out
popf
outsl
aas
popf
jnp
mov
pop
notl
mov
outsl
fcompl
cmpsb
or
push
jl
mov
aaa
push
push
xchg
cmp
cmc
mov
js
jne
dec
scas
adc
jmp
das
pop
popa
mov
loop
or
rolb
sbb
cmpsb
fists
cld
cwtl
sbb
das
xchg
fcoml
mov
mov
cwtl
sti
ds
loope
push
xor
xchg
or
pushl
and
aad
in
out
jmp
add
jae
xchg
in
mov
jp
sbbb
push
and
jnp
cwtl
in
add
adc
stos
push
in
imul
vpand
xchg
int
push
xchg
jb
xchg
cmp
sub
in
out
mov
xor
mov
pop
imul
cmpsl
mov
mov
and
testb
in
sub
cmp
mov
sbb
insl
add
dec
clc
enter
shlb
lods
cltd
sub
lods
or
outsl
inc
cmp
loopne
pop
in
xor
xchg
sub
jo
in
mov
push
or
sbb
inc
sub
xchg
dec
std
nop
dec
mov
cmpl
xorb
dec
stc
pop
cmp
adc
jle
pop
mov
ljmp
insl
cld
xlat
xor
out
sub
gs
test
test
lock
into
mov
jne
mov
add
jne
lods
mov
cs
test
outsb
fucom
push
xchg
int3
data16
lret
pushf
ss
imul
mov
cmpsb
imul
add
xor
mov
mov
stos
inc
inc
scas
loopne
sti
xlat
popf
mov
dec
jo
jmp
jne
xor
ficoml
mov
shlb
hlt
cs
xchg
std
in
and
stc
loop
es
mov
les
jnp
std
test
jae
loop
cmc
lret
cmp
mov
cmp
mov
inc
lcall
scas
xchg
leave
jne
popl
nop
or
mov
lret
cmp
pop
outsb
jno
fwait
xchg
popf
and
adc
add
aad
mov
mov
dec
jb
repnz
mov
or
and
int
dec
test
dec
lea
dec
test
movsl
mov
int
repz
sub
sbb
jae
dec
int3
out
lods
adc
adc
jne
jno
mov
sbb
out
mov
fs
inc
pushf
fiadds
lcall
jae
movsl
ja
mov
mov
in
push
or
adc
jnp
addr16
push
xor
sbb
pop
pop
cld
pop
out
aad
dec
adc
jae
xchg
xchg
leave
inc
nop
repnz
in
mov
es
ljmp
push
xchg
cmp
mov
insb
iret
fistpll
addr16
decl
lret
jb
ret
sub
sub
je
xchg
mov
insb
test
and
in
mov
inc
jecxz
mov
aaa
daa
jnp
enter
xchg
inc
mov
jns
test
and
stos
stos
cltd
stos
loopne
inc
push
int3
jmp
jno
addr16
cmpsl
js
mov
mov
enter
addb
pop
cmp
xorb
xchg
iret
mov
and
mov
outsb
dec
mov
pop
xchg
mov
ret
lcall
aad
push
pop
jae
test
fiaddl
not
cmp
jnp
out
ja
xchg
shll
mov
sub
loope
cwtl
inc
in
jmp
inc
inc
stos
mov
leave
cmp
pop
loopne
jnp
into
inc
mov
dec
adc
mov
repz
idiv
pop
lods
mov
outsl
dec
ret
in
test
cmc
sbb
mov
push
and
and
inc
cli
inc
neg
pop
les
mov
dec
lds
jno
adc
pop
add
outsb
xchg
push
outsb
pop
test
inc
int3
add
jo
cli
imul
pop
push
data16
outsb
ljmp
inc
mov
aad
nop
lods
or
mov
pushf
jb
dec
sbb
pop
mov
sub
mov
movsb
stos
xchg
pop
push
insl
loop
push
les
mov
jge
cli
pushf
test
push
aad
aam
mov
pusha
cmpsb
sub
movsl
or
sbb
stos
sbb
scas
xor
test
stc
mov
cld
sarb
xor
ljmp
shl
mov
push
int3
js
addb
mov
xchg
jp
adc
inc
lahf
pop
call
jns
aas
dec
jmp
jge
lds
cwtl
jg
rorb
mov
jle
adc
loope
shlb
xchg
int3
stos
jb
pop
stos
fwait
push
cmp
dec
xor
mov
adc
dec
cmp
es
jne
incl
cmp
lahf
push
mov
in
add
cmp
loope
or
std
stc
sub
lds
jns
or
movlps
xchg
pop
pusha
dec
fnstcw
shr
pop
jg
mull
add
xchg
inc
xchg
int
lcall
or
inc
ret
aaa
add
push
ja
movsl
cld
add
lret
stos
push
subb
outsb
bound
iret
lock
mov
loopne
cmp
imul
push
fnstcw
ljmp
mov
ficoms
clc
mov
rol
adc
pop
mov
pop
pop
push
pop
add
pop
inc
inc
negb
ficoml
or
in
js
jecxz
jp
sub
sbb
movsb
out
stos
lret
dec
lret
jmp
inc
xlat
xor
out
xchg
add
and
in
xor
out
lcall
fsts
roll
cs
je
jbe
push
imul
pop
and
in
cmpsl
stos
mov
push
mov
mov
xor
fmuls
mov
xor
repz
fwait
orl
cmp
into
or
adc
xchg
cmpsb
mov
mov
icebp
or
xchg
sub
and
inc
test
gs
mov
outsl
ret
jnp
sbb
jle
or
mov
pop
out
lret
js
jbe
lea
lods
daa
cmc
insl
daa
pop
in
cmpl
and
jp
int3
mov
sub
js
mov
or
xor
inc
sbb
lea
mov
pop
cmp
ljmp
lods
xor
ret
loope
mov
sbb
or
scas
xchg
cmp
outsb
into
inc
add
or
in
adc
in
mov
add
gs
jmp
lods
jge
xchg
testl
sahf
mov
ja
ret
jae
clc
add
lock
and
ret
lds
add
adc
jmp
cwtl
inc
push
inc
push
push
mov
dec
insl
mov
mov
test
ffree
pop
mov
enter
test
jb
jmp
pop
sbb
or
cli
sub
lds
out
xor
sbb
mov
int
cli
and
in
mov
push
xchg
ret
loop
into
adc
test
into
imull
in
mov
cmp
imul
jg
xchg
pop
push
pop
js
mov
and
aas
fldt
call
imul
pop
lcall
push
test
daa
mov
push
push
imul
xor
mov
add
andl
nop
add
adc
adc
mov
push
lods
daa
ss
daa
mov
mov
push
cwtl
adcb
stc
gs
mov
into
movsl
add
or
xchg
push
pop
aaa
test
push
cmp
in
outsb
pop
inc
mov
xchg
fldcw
sbb
inc
or
in
jae
sete
or
xchg
es
and
leave
and
sub
jle
test
jg
inc
or
movsb
adc
mov
stc
jecxz
shr
pop
inc
mov
aas
stos
and
jge
aad
aas
and
pop
xchg
push
out
movb
pushf
cltd
fimull
xor
and
push
adc
jae
es
xor
xlat
aaa
std
stos
xchg
shll
cld
inc
sbb
or
shl
push
push
xchg
lret
in
mov
xchg
mov
rol
test
push
das
dec
popf
mov
popa
cli
mov
ret
sbb
xor
je
lock
sub
ficoms
mov
daa
jnp
hlt
adc
arpl
mov
sbb
lods
or
in
aas
in
mov
subl
jl
shrb
xor
lret
pop
aas
mov
mov
cmpsl
sti
sti
subl
inc
lds
adc
mov
inc
jbe
leave
int
rorb
std
pop
push
les
and
nop
inc
jg
icebp
cmp
add
mov
nop
mov
mov
in
shll
mov
lods
or
xchg
movlps
lea
adc
xchg
stos
cltd
dec
leave
push
pop
addb
push
mov
sahf
and
es
and
les
add
popf
out
lahf
sub
cmpsb
xchg
push
iret
pop
loop
das
and
push
scas
add
out
test
fldcw
mov
je
bound
inc
nop
xchg
add
mov
mov
lret
dec
in
pop
iret
adc
stos
mov
mov
sahf
dec
pop
pop
cmp
jno
sbb
loopne
push
les
sahf
or
aas
aad
rcrl
scas
inc
pushf
cmp
inc
enter
dec
jmp
push
in
inc
neg
stos
mov
cmc
add
pop
dec
xchg
dec
push
mulb
out
dec
push
jmp
ds
insb
xlat
lds
sub
fdivs
adcb
push
xchg
jno
xchg
and
clc
mov
cli
mov
aas
cmp
stc
sub
xchg
in
and
and
nop
aad
outsb
sub
shlb
and
fcomps
cmpl
dec
jl
decl
pop
xor
push
and
adc
in
adc
bnd
inc
jnp
ret
in
push
inc
adc
mov
sarb
jb
mov
sbb
pop
insb
jp
dec
popa
addl
fs
push
scas
push
loope
mov
aas
sbb
imull
add
ret
shlb
jno
push
push
arpl
jno
imul
xchg
gs
sub
dec
and
cmpsb
dec
outsl
std
xchg
arpl
in
es
dec
inc
ss
inc
sbb
sub
lret
pop
jge
ss
mov
adc
mov
sub
mov
mov
mov
mov
xchg
rcrb
mov
repnz
pop
xor
lahf
mov
cmp
fcomps
dec
popa
fsubrl
sbb
jnp
loop
vmovaps
inc
push
testb
pop
lods
inc
or
in
mov
shlb
cmp
add
adc
add
lret
ds
mov
fmull
imul
ljmp
pushf
pslld
jo
cpuid
mov
push
loop
adc
pop
push
jb
inc
sub
jle
lods
or
pop
adc
dec
repnz
in
jns
fadd
mov
sbb
dec
add
js
xchg
dec
shlb
fldenv
pop
movd
jbe
sahf
fwait
std
shlb
or
lahf
and
xor
mov
mov
das
sub
orb
xchg
cwtl
test
jno
push
push
mov
mov
mov
add
pop
push
js
lcall
pop
inc
sub
std
and
stos
adcl
push
adc
cvttps2pi
pop
ret
loop
cmp
push
jno
lahf
std
mov
jge
test
xchg
pop
loope
ds
cmp
aas
fcoml
jo
push
arpl
popf
fs
das
lock
pusha
pusha
cltd
adc
mulb
int3
data16
sub
jo
es
mov
and
insl
cmp
pop
adc
jae
cmp
outsl
or
push
cmpsb
test
data16
cltd
frstor
ret
popa
pop
fidivl
fisttpl
xor
in
stc
cmpsl
push
dec
or
jecxz
dec
cmc
out
jp
pop
pushf
mov
stos
stc
cltd
or
aam
or
add
je
dec
call
sbb
sub
mov
and
push
lret
fst
pop
push
fstl
ret
stos
cmp
jmp
out
mov
xor
mov
push
daa
xchg
je
popa
repz
jb
icebp
lahf
loope
lods
push
xchg
cmc
loop
jmp
sbb
xchg
mov
xchg
aam
push
fsubp
push
and
xchg
fistpl
aas
mov
fistpl
adc
pop
std
adcl
jns
sub
jg
sub
jp
dec
fsts
popa
or
mov
adc
pop
fcomip
lods
add
add
shll
lahf
cmp
xchg
iret
stos
push
sub
out
jmp
sbb
xor
es
add
sbb
dec
pusha
pop
pop
repnz
popf
cmc
xorb
and
adc
push
fs
inc
inc
inc
push
scas
inc
sbb
subb
sbb
arpl
jge
xchg
icebp
lds
ja
leave
push
outsl
sub
mov
pop
sbb
mov
pop
push
rclb
lods
nop
pop
bound
ljmp
mov
popa
cwtl
out
push
xlat
pop
adc
xchg
add
lea
and
jo
sbb
sahf
inc
dec
mov
mov
add
mov
jae
mov
xor
mov
jmp
fbstp
lret
inc
jb
rorb
mov
pop
sub
nop
js
inc
jl
mov
fs
and
mov
sbb
push
cs
test
and
sti
lret
das
add
push
ret
out
inc
jo
insl
push
aaa
lods
xor
add
xor
jl
arpl
jns
and
push
loop
adc
ret
loop
or
ret
aam
or
mov
subl
push
xor
loop
gs
push
push
adc
push
inc
mov
lret
divb
xchg
jo
or
out
lcall
or
pusha
mov
xor
out
push
jle
cmp
mov
or
fldl
in
xchg
push
xor
stos
or
jbe
jmp
lods
sub
nop
in
or
jo
fildll
es
movsl
sbb
mov
xchg
jae
movsl
mov
cmp
add
mov
sbb
fbld
mov
repnz
inc
cltd
outsb
gs
addr16
push
sbb
pop
push
ja
cs
call
gs
add
ja
mov
sbb
sbb
insb
lcall
add
orl
movsl
or
pop
aas
lods
jne
sbb
jmp
ljmp
add
popf
cmpsb
jne
stos
cmp
add
pop
or
mov
lahf
stc
lahf
pop
pop
inc
mov
sbb
leave
push
rcll
mov
mov
and
xchg
test
mov
or
js
adc
popa
mov
mov
bndldx
aam
shl
sbb
cmpsl
mov
dec
dec
jp
pop
push
imul
mov
nop
sub
fmull
mov
lods
and
mov
aas
loope
ret
jge
lds
subl
xor
cltd
xor
cmp
cmc
or
pop
lods
xchg
and
imul
xor
ret
test
mov
emms
mov
dec
jno
pop
sub
xchg
add
jnp
cld
aas
sub
lahf
pop
and
cld
les
adc
xchg
xor
mov
fistps
enter
xchg
leave
sbb
cmpsb
cmp
lret
jmp
xchg
popa
cmp
aad
ret
xor
lods
aam
mov
pop
mov
adc
mov
sbb
mov
jbe
scas
fidivrs
mov
sbb
fs
iret
scas
mov
je
xchg
sub
and
arpl
cli
lods
aaa
fnsave
testb
sbb
inc
orl
xchg
movsb
pop
aaa
stos
jle
ror
lcall
clc
negl
xor
fcompl
and
leave
dec
es
cld
daa
push
fstpt
pushf
sbb
popf
xchg
notb
inc
ja
lods
ja
dec
jmp
mov
mov
sti
mov
jecxz
dec
fs
repnz
in
jb
pop
cmp
push
inc
std
sahf
addr16
shrl
mov
sbb
inc
add
pop
sbbb
fnstsw
inc
inc
into
aas
mov
xchg
dec
dec
sahf
data16
fiaddl
sbb
push
pop
or
jp
pop
inc
shll
xor
aam
xor
inc
imul
fiadds
lods
stos
sbb
loop
test
ficoms
sbbb
idivb
pushf
rcll
test
lea
enter
outsl
out
xchg
jns,pn
jne
push
out
inc
out
popa
in
fistl
ret
and
insb
add
rcl
and
mov
mov
xor
jns
mov
or
push
repnz
lds
enter
push
mov
fisubrs
dec
push
push
pop
movsb
lahf
mov
out
and
xchg
mov
add
jb
jne
dec
aaa
mov
daa
cs
sbb
mov
jns
fcomp
dec
lret
xchg
sbb
loop
push
cmc
jae
je
shlb
mov
dec
pop
and
shll
xor
fldt
inc
sub
add
lret
fwait
push
stos
fldt
aaa
fwait
pop
pop
stos
das
fistpll
mov
sub
pop
jno
mov
jne
xchg
dec
push
mov
lea
inc
sbb
cmp
inc
cld
or
add
add
push
test
test
pushf
imul
gs
jle
rclb
mov
stos
inc
out
sbb
mov
inc
xchg
jns
cmp
inc
popa
pusha
loop
ds
mov
aas
jg
xor
shrb
jg
sub
mov
push
outsl
jle
pop
mov
pop
jne
out
jns
fsubp
popf
popf
push
pop
push
cwtl
mov
enter
out
scas
es
insb
pop
pop
test
scas
std
les
cmpsl
sbb
cmp
jl
lods
mull
fsqrt
add
jl
jecxz
xor
mov
jecxz
cmpsl
ja
fwait
rcrb
leave
xchg
hlt
mov
inc
inc
push
add
std
int
pavgb
out
xchg
adc
adc
xchg
mov
xor
repnz
gs
pop
ss
push
push
xchg
pop
sbb
dec
xchg
xlat
sbb
sbb
mov
in
addl
sub
push
mov
xlat
daa
sbb
mov
std
hlt
pushf
push
mov
repnz
pop
or
and
xor
and
inc
movsl
popl
loop
jb
mov
mov
mov
cmpsb
insl
push
hlt
cmp
push
fsts
in
push
add
cld
xor
sub
cmp
andb
inc
and
pop
fsubs
mov
mov
mov
lret
fmulp
push
cltd
out
cmpsb
mov
inc
xor
jecxz
cmpsl
fs
stos
cmp
sbb
imull
repnz
xchg
aaa
rol
and
dec
pop
push
jae
xchg
mov
mov
jo
repz
mov
mov
scas
ret
pop
pop
xor
popa
xor
mov
mov
testb
stc
ja
flds
inc
mov
mov
xor
pop
insb
stos
cmp
aaa
sbb
or
add
cmp
lcall
push
mov
je
adc
loope
and
and
out
lret
mov
mov
cs
popa
jecxz
push
xchg
lret
rorl
fmul
mov
test
push
js
jl
add
xchg
push
cmp
ljmp
mov
mov
and
loope
loopne
retw
and
stc
push
inc
out
scas
repz
xor
imul
mov
jb
cld
adc
sub
pop
dec
popf
jecxz
cld
cmp
pop
add
andb
mov
jno
popa
sahf
gs
mov
pushw
insl
pop
mov
jmp
imul
mov
call
out
movsb
rorl
testb
int3
jp
sub
jno
jbe
shll
cmp
std
fisttpll
out
gs
mov
mov
outsb
inc
leave
xchg
popa
ljmp
add
sbb
sbb
push
outsl
inc
cwtl
and
bound
or
daa
jne
repnz
cs
lea
sbb
xchg
scas
gs
adcl
sub
cwtl
sub
push
jb
arpl
test
lret
hlt
test
insb
cli
fsubrl
testb
call
xchg
imul
ret
jecxz
push
and
mov
ror
cwtl
subl
push
or
push
push
mov
inc
dec
mov
mov
fnclex
std
xchg
cmpsl
and
arpl
mov
xor
std
cltd
adc
jne
jg
cmc
lret
xor
pop
push
mov
popa
daa
xchg
mov
dec
lcall
out
std
cli
mov
and
or
push
movsb
and
xor
out
bound
xchg
das
movsl
dec
pop
aam
fstpt
sub
xor
xchg
push
pop
sbb
std
dec
push
cmp
inc
push
incl
or
mov
xchg
inc
and
and
enter
dec
dec
dec
sub
xchg
cmc
int
shlb
gs
push
push
movsl
fucomip
into
fsubrl
jbe
popa
pusha
pushf
and
add
filds
inc
loopne
bound
in
mov
jecxz
fisttps
push
xlat
leave
sbb
fildl
sub
inc
je
mov
jge
das
or
dec
je
mov
sbb
inc
sub
iret
cmpsb
int3
out
fnsave
jge
lret
imul
pop
pop
hlt
mov
pushf
dec
push
sbb
pop
pusha
inc
mov
pop
aad
ds
filds
movsl
add
jg
push
add
imull
cmp
repz
cmp
scas
mov
add
cmpsl
cmp
dec
jecxz
xchg
in
jbe
and
push
jle
jae
jbe
mov
cmp
lea
cwtl
or
mul
data16
push
adc
int3
arpl
imul
insl
xchg
cmp
fildl
decl
pop
sbb
inc
out
lea
xlat
stos
inc
filds
cmpsl
and
inc
dec
mov
sbb
and
fwait
mov
push
jg
and
push
inc
dec
rcrl
xchg
mov
push
shlb
ret
xlat
or
sbb
pop
push
stc
cli
or
mov
lahf
mov
mov
jb
mov
sahf
sbb
das
lret
pop
mov
cmp
sbb
mov
dec
sar
enter
hlt
cmpsb
sub
and
sbb
sub
push
xlat
cli
sarb
cmpsb
scas
lahf
popf
data16
out
push
sbb
inc
popf
jl
pop
jbe
mov
add
push
fisttpll
dec
movsb
adc
mov
lcall
sub
clc
imul
into
adc
pop
movsb
cwtl
cmp
loop
sub
data16
ret
lods
out
test
nop
cmp
inc
xor
out
sub
push
mull
ss
adc
and
xorl
jg
mov
adc
jo
adc
pusha
sbb
es
xchg
mov
out
jo
pop
in
scas
cmp
mov
lods
adc
inc
add
insl
pusha
xor
pusha
arpl
and
xchg
fstpl
pusha
and
mov
add
enter
negl
int3
add
adc
or
mov
stos
into
mov
lods
or
inc
cwtl
data16
dec
pop
stos
ror
dec
xor
test
sub
add
fcomps
pop
mov
addr16
fld
inc
adc
xchg
popf
inc
imul
xchg
filds
movsb
adc
adcb
mov
mov
xor
xchg
fildll
jmp
loope
std
fstpl
push
sbb
movsb
mov
mov
push
mov
stc
mov
and
xlat
mov
mov
xchg
inc
lods
jg
mov
stc
xor
cs
stos
or
inc
inc
jb
push
fiaddl
mov
add
or
test
fdivrp
sbb
mov
test
leave
jno
ljmp
insb
mov
in
inc
sahf
adc
stos
in
inc
xchg
sub
insl
or
mov
sarl
mov
mov
fldt
test
xor
out
inc
push
out
dec
push
add
fwait
xor
or
jecxz
mov
mov
les
fsubl
shrb
loopne
mov
and
adc
aad
aam
mov
xor
pop
call
or
push
jnp
jmp
loope,pn
adc
std
int
mov
sub
call
jge
shll
and
adcb
dec
pop
cmp
push
fdivrl
lret
pop
rcrl
dec
in
jge
divl
pop
pop
sbb
mov
lcall
xchg
mov
sbbl
mov
xchg
cmc
xlat
push
or
addb
xor
jge
and
xor
jle
mov
fcoms
mov
add
sahf
jmp
cmp
add
sbb
imulb
inc
rclb
inc
out
stc
mov
cmp
jmp
xor
nop
jbe
sahf
call
pop
and
add
mov
fnstcw
jp
das
je
cmp
das
mov
cld
sub
sub
mov
popa
loop
inc
fiaddl
mov
pop
test
mov
mov
lods
mov
out
xor
loop
xchg
jb
cmp
dec
les
pop
sbb
shrl
out
push
sbb
mov
aam
int
filds
pop
mov
push
in
daa
dec
popa
or
jno
mov
push
pop
xor
add
mov
icebp
push
cmpb
sub
xor
xchg
iret
pop
mov
jl
fcomi
lahf
or
repz
int3
push
lcall
mov
inc
sahf
ljmp
out
sub
xchg
dec
out
inc
sub
nop
xchg
movsb
mov
add
sbb
sub
inc
inc
loopne
mov
adc
int3
add
inc
adcl
push
xchg
out
xchg
sub
leave
movsl
outsl
lock
pop
movsl
add
cltd
dec
xchg
add
mov
push
rcrb
push
sti
loopne
or
pop
and
mov
lret
loopne
shl
cmp
fstpl
lcall
stos
in
cli
insb
pop
shrl
rcrl
clc
scas
cmp
pushf
outsl
pop
push
les
sub
xchg
xchg
popf
cmp
adc
mov
stc
stos
inc
xchg
fsub
sub
or
or
mov
mov
xor
cs
out
std
push
pop
or
xchg
mov
mov
lods
jl
and
and
lahf
sub
repz
sub
push
sub
xor
jne
cs
ja
mov
mov
add
or
add
aaa
lods
aad
stos
shl
in
shrl
pop
imul
iret
shlb
test
inc
mov
mov
xchg
rcrb
addr16
xchg
push
sub
xor
shl
sahf
aam
repnz
xor
ss
lods
cmp
daa
sub
mov
push
or
gs
rcl
xor
subl
call
mov
and
imul
pop
push
shlb
iret
and
add
loopne
add
inc
roll
subl
fstpt
fidivrs
push
loope
xor
xor
cmp
add
and
jne
push
inc
jb
inc
adc
gs
mov
jb
mov
fs
aad
lods
daa
and
jb
and
loopne
and
mov
sti
cmp
adc
pop
icebp
adc
mov
out
inc
pop
mov
out
xchg
outsl
push
mov
rol
sbb
inc
orb
in
mov
cbtw
xor
mov
popf
adc
cwtl
ror
push
sarb
mov
push
and
jb
mov
inc
lds
pop
call
js
cli
jbe
out
and
jl
adc
test
sbb
scas
mov
gs
pushf
sub
xchg
aad
shrb
jle
adc
movsb
int3
cltd
adc
and
insb
sbb
mov
mov
rol
xchg
bound
cmp
cmp
scas
fninit
and
dec
sub
pop
popa
aam
and
pop
insb
sar
pop
mov
fcoms
xor
mov
sbb
popa
jg
and
fldlg2
nop
sti
mov
jb
inc
hlt
test
and
mov
mov
cmc
add
movsb
dec
sahf
insl
xor
sub
inc
cmp
jl
lret
jle
push
mov
lods
mov
test
jecxz
jl
jmp
cli
xor
aas
lods
es
loopne
inc
fidivrl
repz
pop
adc
jmp
mov
rolb
or
in
jmp
outsb
cmpl
fstpl
mov
mov
mov
movsl
or
sarl
or
scas
mov
or
fldenv
jmp
push
movsb
gs
ja
sti
movsb
lds
add
mov
xor
in
mov
or
lahf
fsubl
test
lret
arpl
mov
mov
in
ljmp
jno
ja
mov
sub
jge
jae
mov
fstpl
loopne
or
dec
xchg
movsb
stos
int3
loopne
xor
adc
or
fisubs
xor
orl
dec
or
xor
loop
sub
loopne
jns
outsl
mov
xchg
mov
inc
in
sti
cmpl
flds
int3
mov
xlat
adc
push
fdivs
call
adc
dec
test
inc
sti
or
inc
push
and
sbb
or
movsb
test
push
pop
shrb
xor
dec
mov
pop
mov
jmp
cmp
push
xchg
jge
idivb
mov
lcall
je
in
enter
std
xor
dec
mov
push
add
mov
loopne
mov
ljmp
movsl
jbe
fnsave
inc
mov
jl
fdivs
dec
inc
cmp
xchg
cltd
jp
in
repnz
or
and
jns
rclb
push
mul
push
clc
adc
out
jae
xchg
int3
and
fisubl
stos
lretw
stos
addr16
xchg
push
decb
fistpl
or
outsl
or
lock
mov
adc
out
cmp
popf
aaa
or
mov
movsl
pusha
jo
mov
or
ret
sti
and
push
hlt
iret
rcrl
shlb
lods
jne
inc
je
jle
and
cmp
sahf
pop
scas
cmpsb
sub
dec
test
jge
cmpsb
sub
gs
mov
cmc
pop
sub
test
add
push
das
xor
or
out
cmpsb
es
lods
hlt
popa
cs
fcompl
mov
lock
adc
jg
pop
add
mov
add
mov
lahf
shlb
and
sbb
out
push
mov
pop
in
cltd
mov
or
xchg
cltd
sub
enter
ror
mov
sub
and
jne
sub
or
cmp
jge
test
pusha
push
outsb
loopne
fwait
or
pextrw
lea
jo
insb
call
jmp
xchg
sbb
incb
push
push
in
sbb
xor
mov
dec
sub
or
push
jo
lods
clc
addb
mov
iret
addb
movsb
mov
rolb
sbb
sub
rolb
jo
aaa
ss
leave
das
arpl
xor
scas
and
dec
and
ja
and
fisubrs
push
adcb
mov
mov
or
sub
jecxz
jmp
fbstp
xlat
mov
out
cmp
pop
xlat
fwait
in
nop
or
inc
iret
jnp
inc
jae
mov
in
fmuls
mov
or
lret
mov
mov
add
dec
into
or
mov
scas
int
in
leave
out
in
lea
out
mov
out
rcrl
pop
jb
xor
mov
cmp
aad
aas
xchg
inc
rep
pop
subb
jbe
and
add
out
sub
adc
pop
xchg
inc
lcall
cmpsl
or
daa
and
pop
push
pop
lds
stos
inc
and
jno
nop
mov
dec
outsb
cmc
out
pop
scas
pop
andb
jno
jnp
cmp
loopne
fs
mov
fcmovnb
in
outsl
pop
xor
or
daa
and
sbb
sbb
xor
cmp
cmp
std
inc
out
jl
call
and
cmpsb
popf
jno
jnp
sahf
xor
sbb
mov
aam
jbe
testl
dec
arpl
or
cmp
sub
scas
loopne
adc
stc
ss
cmp
repz
dec
inc
sbb
int
push
leave
jae
sahf
lcall
fdivrs
cltd
push
lahf
adc
cmpsb
gs
scas
add
sahf
lcall
dec
jbe
xchg
dec
enter
sub
stos
pushf
call
lahf
dec
rcll
loopne
fisubs
pop
mov
out
mov
daa
ljmp
xor
cltd
mov
xchg
leave
pop
pop
pop
int3
mov
adc
fcmovnu
dec
fwait
sub
push
stos
mov
loopne
outsl
inc
movsb
sub
pop
dec
adc
xchg
sbbl
mov
scas
mov
nop
imull
orb
mov
fwait
sub
xchg
es
popf
out
insb
or
ficoms
ljmp
fidivl
push
xor
out
out
fnsave
stos
push
inc
cmp
inc
xor
inc
out
adc
push
dec
or
cltd
js
push
mov
mov
push
aad
mov
cmp
movsb
mov
cs
mov
cmp
xchg
sub
adc
stos
cld
or
stc
xchg
pop
push
xchg
lea
arpl
inc
sbb
in
pop
aaa
and
add
pop
cmp
xchg
out
inc
ret
mov
mov
ret
jl
push
popa
sbb
imul
push
mov
xchg
inc
cmp
int
sub
roll
inc
pop
jb
push
sbb
xor
sahf
mov
vmread
dec
pop
inc
push
dec
xchg
xor
fsts
mov
icebp
cmp
jecxz
inc
xchg
stos
ds
and
push
mov
jo
pop
adc
inc
sbb
pop
mov
sub
jmp
push
pop
mov
mov
xlat
sub
nop
mov
loope
pop
mov
push
dec
mov
scas
and
setp
rolb
sub
xchg
jge
cmpsl
repnz
nop
pop
icebp
or
sub
xchg
jmp
lea
stos
jnp
test
shll
shlb
pop
int3
push
les
xchg
sbb
adc
push
icebp
push
jge,pn
fsubrs
fst
or
and
gs
push
and
push
std
jg
xlat
notb
inc
inc
sub
fsubs
ds
mov
in
jl
adc
insb
sub
xorl
fisttps
cmp
pop
daa
stc
arpl
call
fisttpll
dec
pop
dec
rolb
arpl
enter
rclb
das
lea
mov
sub
loopne
or
dec
loop
fdivrl
fnstenv
scas
mov
cmp
outsb
arpl
adc
jb
adc
popf
rcrl
lcall
xor
test
sahf
inc
icebp
dec
mov
adc
xorl
addr16
inc
push
fstpt
repz
or
xchg
sub
or
hlt
pop
inc
ja
inc
outsl
fisubrl
sbb
inc
mov
dec
push
sbb
cmp
cwtl
sahf
imul
sbb
gs
xchg
mov
inc
xchg
xor
sbb
cmpsl
aaa
mov
and
mov
lock
sub
add
into
push
mov
or
ljmp
cltd
into
cld
mov
stos
add
push
sbb
fstp
mov
bswap
and
in
ljmp
fwait
xchg
lods
nop
mov
inc
dec
lea
mov
mov
lods
inc
and
out
lock
sbb
imul
adc
stos
sub
push
xlat
pop
movsb
jmp
fs
or
rcl
sbb
xor
int3
stc
lock
ljmp
in
or
cld
jb
cmp
int
inc
popf
xchg
sub
xor
sub
test
popa
clc
ret
xchg
xchg
sbb
es
adc
xchg
cmp
leave
fcmovnb
jb
add
insl
cmp
nop
fwait
jl
or
mov
push
rolb
sub
inc
cmp
test
les
lret
mov
cmp
push
cmp
insl
out
cwtl
add
ret
cmp
ret
mov
lods
pop
cld
cltd
rclb
sub
jns
add
out
mov
mov
loopne
loope
imul
mov
data16
sbb
js
push
daa
scas
sbb
ljmp
mov
mov
or
jno
mull
lock
mov
add
push
dec
sbb
jb
mov
xchg
jge
les
dec
lock
repz
repnz
fildll
out
out
pusha
insb
or
cmp
cli
leave
cmp
in
jmp
arpl
sbb
cltd
mov
dec
insl
adc
leave
lds
or
outsb
push
pop
sahf
mov
jne
into
test
into
mov
push
popa
mov
aas
lahf
cld
shll
fcomi
jno
out
movb
mov
xor
push
sbb
ja
scas
test
jnp
mov
ret
mov
jge
xchg
pop
orl
mov
mov
popa
mov
or
xchg
fdivp
dec
inc
xchg
inc
movl
mov
or
dec
mov
push
icebp
pop
inc
scas
negl
and
pop
push
loop
inc
push
cmp
xor
pop
divb
ret
dec
mov
fldcw
fbstp
xor
mov
ja
xor
cmc
ljmp
ljmp
popa
fsts
mov
push
imul
xchg
lcall
in
lahf
fldt
or
je
and
push
xchg
mov
jmp
mov
insb
jge
or
inc
dec
cmp
and
iret
xor
pop
lods
insb
cmc
mov
fnstsw
scas
dec
and
mov
mov
int3
movsb
aam
shll
push
stc
test
cmp
adc
jnp
pop
orl
cmpsl
iret
lods
jne
xor
int
cmc
inc
adc
rcrl
mov
outsb
shlb
push
fistl
out
movsb
stos
mov
mov
mov
pop
pop
loop
popa
mov
jge
out
stc
fsubs
jg
and
stos
or
ret
or
aam
rolb
dec
mov
mov
mov
sub
push
lods
pop
sub
xchg
sbb
je
pop
out
jns
inc
movsl
and
add
jnp
mov
mov
lcall
loop
mov
fidivrs
int
addr16
mov
hlt
mov
clc
push
popf
sub
push
jge
dec
mov
fdivrs
pop
dec
mov
sub
xor
out
dec
sub
pop
test
xchg
cmp
insl
popa
inc
fildl
in
push
hlt
pop
mov
pop
mov
push
divl
into
push
jp
add
scas
icebp
aaa
jo
cmp
cmpsb
push
test
ds
test
scas
dec
repz
je
jbe
sbb
fdiv
mov
or
pop
xchg
add
jp
mov
push
pop
push
fidivl
cwtl
mov
out
push
mov
jmp
aam
jle
cwtl
jne
jo
out
pushf
daa
cmp
rclb
test
push
push
adc
sbb
clc
or
sub
das
xor
cmp
in
ljmp
movsb
adc
pop
dec
nop
or
inc
pop
aas
stos
pusha
test
inc
mov
jne
sahf
mov
loop
lret
dec
add
cmp
pop
std
pop
jle
in
push
dec
js
loope
inc
mov
inc
mov
mov
cmp
movsl
sub
push
dec
mov
or
cmp
jo
xchg
inc
imul
lds
jp
sub
test
push
test
int3
insb
test
cs
jae
inc
cmpsl
mov
scas
pop
sbb
mov
mull
mov
cmp
sbb
push
daa
aam
das
xchg
gs
sahf
inc
fs
fwait
jo
in
roll
pop
aaa
in
push
rcrb
xor
cmc
mov
add
loope
xchg
loope
ss
adc
xlat
pop
sbb
cmc
lea
cmp
dec
clc
ljmp
int
push
dec
and
jbe
sub
movsb
pusha
mov
or
sub
cli
xchg
dec
mov
aad
or
xchg
jnp
out
stc
xor
cltd
test
jnp
push
lock
adc
std
and
cs
fistl
xchg
jno
lcall
out
push
cmp
mov
je
mov
jae
or
nop
jb
cmp
xor
jnp
lret
jno
out
adc
out
sub
rorb
jo
mov
pop
pop
in
mov
cli
inc
mov
sbb
mov
jo
lret
inc
cwtl
ret
cli
xchg
mov
jbe
fninit
ja
inc
je
pushf
ret
inc
jge
xor
dec
ja
and
iret
sbb
arpl
arpl
aaa
jl
sub
rcl
pop
lret
mov
sub
ljmp
pushfw
scas
xchg
in
sub
adc
loopne
gs
jmp
out
add
xchg
dec
xchg
cmc
xor
cli
inc
add
lahf
xor
push
and
test
xorl
pop
idivb
mov
fstl
or
subb
push
lcall
push
sahf
add
inc
pop
out
lret
xchg
adc
cmpsl
pop
mov
inc
cmp
jae
sbb
add
adc
std
sahf
lods
push
lods
and
xchg
mov
add
fsubrs
insl
repnz
push
sbb
std
sahf
mov
cmp
orl
push
xor
jle
ficoms
xor
cwtl
notl
dec
ret
inc
push
xchg
gs
test
int
adc
xchg
add
pop
mov
sub
or
add
je
pop
push
inc
inc
in
sahf
sub
inc
shll
outsl
lock
insb
jo
adc
jb
push
and
jnp
test
cmp
and
bound
aam
jle
ficomps
pop
lret
pop
imul
cmp
test
adc
inc
mov
fildll
mov
enter
mov
scas
inc
int
jmp
pop
xor
and
adc
repnz
shlb
dec
xor
cmp
cmp
enter
aaa
sbb
shrl
or
lcall
mov
dec
cld
insb
inc
cli
push
sarb
aas
sub
and
out
mov
leave
cmpl
mov
das
pop
imulb
fistps
push
or
or
and
sub
movsl
imul
scas
jnp
pop
sbb
dec
sti
lock
fistpll
mov
pop
fidivrl
outsb
or
daa
andl
lahf
mov
inc
mov
cmp
int3
pop
xchg
or
cmp
je
cmpsl
cmpsb
dec
jae
or
idiv
in
fwait
inc
xor
dec
xlat
xchg
jno
sti
out
xor
gs
or
lret
popa
cmp
mov
push
gs
mov
mov
xchg
inc
frstor
xchg
xor
in
insb
jecxz
push
jb
movsb
push
mov
cmp
sub
and
push
cmp
aas
popa
pop
sti
dec
xor
popa
mov
cmp
cli
outsl
xor
cs
fnsave
xchg
inc
jo
sbb
rcrl
out
xor
shrb
dec
mov
mov
mov
and
in
xor
pop
mov
sub
loop
mov
popa
sbb
push
sub
push
pop
stos
das
loope
mov
lahf
pop
enter
cwtl
test
pop
add
xchg
sub
in
xchg
movsb
add
jge
pop
and
scas
outsl
push
jb
push
mov
add
adc
shrl
jae
xchg
lahf
mov
testl
cmp
rcrb
sub
bound
fs
cmpsb
test
dec
add
push
mov
xor
imul
add
outsl
int3
sbb
push
daa
rcr
fisttpl
lret
sub
xchg
fiadds
aas
arpl
xchg
inc
call
or
sub
jp
and
and
xchg
shrl
sbb
scas
pop
je
pop
rolb
jnp
jmp
xchg
push
xor
pop
jmp
inc
call
popf
nop
cmp
jg
mov
dec
pop
adc
adc
lds
fisubs
lret
mov
ret
dec
incb
jae
and
or
adc
and
leave
add
into
outsb
adc
sahf
inc
or
push
mov
mov
pusha
fs
scas
test
jle
inc
push
sub
popf
movsb
inc
hlt
test
popf
inc
scas
aam
mov
sub
pop
inc
lea
mov
or
or
xchg
sbb
fstpl
fstpt
sub
dec
in
or
xor
push
int3
mov
push
add
or
mov
jge
and
lea
int3
xchg
lock
addr16
sub
pand
adc
dec
sbb
aad
mov
scas
push
scas
lods
test
ljmp
mov
pusha
sub
in
movsb
mov
push
xor
aad
jo
pop
jb
sbb
fdiv
push
mov
jo
enter
sub
cmp
imul
lret
xchg
pop
sub
adc
xor
sub
stc
cmpsl
fdivrl
dec
pop
push
pop
cmp
int3
fwait
add
repnz
insl
test
lret
mov
lods
mov
or
popf
sarb
orl
cmp
and
xchg
xor
loop
and
cmp
sub
mov
adc
cmpsb
push
pop
mov
shll
sub
in
push
sub
gs
sbbb
sti
xor
jl
bound
push
adc
adc
adc
icebp
cmc
mov
jno
sub
stc
notb
xchg
fcoml
lret
jl
inc
movsl
loop
es
sub
stc
mov
js
xchg
jle
push
push
pop
push
xor
cld
test
dec
cltd
inc
jmp
lods
dec
psubq
push
adc
daa
les
inc
jbe
bound
fcompl
xchg
jl
ljmp
lock
aaa
in
push
ljmp
xchg
pop
push
sub
sahf
cmp
mov
nop
cmp
fwait
jmp
and
mov
leave
sbb
push
ss
dec
cld
inc
mov
or
movsl
jae
mov
mov
inc
mov
out
mov
push
sbb
xor
aam
xor
mov
cmp
imul
dec
loop
jp
mov
pop
popf
or
sbb
cmp
lret
call
xor
imul
sub
or
in
mov
insb
imul
pusha
mov
jb
sub
sub
sub
xchg
mov
or
dec
hlt
sub
adcl
lea
mov
sbb
add
es
fwait
push
es
and
and
andl
dec
dec
fistl
mov
pop
movsl
jmp
fcmovne
sub
test
inc
inc
stos
jne
int
sub
or
mov
fsub
lret
or
push
push
popa
sub
xchg
push
test
pop
push
stos
ret
and
fdivrs
or
in
push
xor
xorb
mov
mov
pop
gs
fxch
and
sti
and
repnz
push
cli
pop
aad
xchg
cmpsb
es
subl
jno
xlat
mov
fisubs
mov
enter
mov
out
addb
and
xor
rclb
movl
mov
and
imul
and
push
mov
shll
and
push
adc
sub
adc
cld
push
dec
insb
xchg
fnsave
xchg
push
pop
adc
ds
jmp
test
enter
sbb
add
hlt
mov
pop
out
push
mov
shll
out
test
dec
rcll
rorb
icebp
mov
xchg
dec
add
add
arpl
frstor
xor
loope
popa
loope
or
mov
ror
enter
bound
push
cmp
sbb
std
inc
pop
insb
and
mov
pop
mov
gs
jmp
mov
leave
in
inc
ret
dec
xchg
lcall
xchg
outsb
fdivrs
mov
inc
out
dec
mov
push
mov
mov
aaa
je
aaa
mov
adc
xchg
ret
push
push
cmpsl
add
rcr
mov
daa
add
pop
adc
shrb
mov
scas
cmp
sub
pop
push
or
dec
xor
daa
shr
movsb
ds
lret
jmp
push
sub
inc
xor
dec
pop
imul
in
arpl
insb
cmpsl
mov
lahf
xor
cli
sahf
jge
xor
setge
pop
lea
push
mov
mov
xor
xchg
inc
rcrl
cmc
shl
cmpsb
pop
mov
push
fdivrs
inc
lods
lds
fcomps
mov
mov
mov
pop
adc
mov
push
add
out
and
add
les
cmp
mov
pushf
mull
xor
and
inc
repz
mov
jnp
jb
push
scas
pop
jo
inc
xor
inc
pushf
xor
mov
adc
andb
pushw
xor
icebp
jl
pop
adc
call
bound
ljmp
xchg
in
enter
mov
rcrl
movsb
ret
adcb
inc
imul
mov
sahf
jo
push
pusha
or
jle
mov
xchg
lods
aad
loopne
push
pop
inc
mov
imul
jae
mov
call
arpl
jo
and
in
rcrb
mov
mov
pop
xorl
inc
pcmpgtw
sub
scas
out
iret
scas
outsb
inc
and
mov
cmp
mov
incb
mov
scas
push
out
inc
and
dec
data16
dec
jmp
call
mov
out
mov
lcall
test
xor
in
fdivs
les
mov
stos
cltd
shll
in
xor
lds
xchg
cmp
pushf
jo
imulb
and
dec
mov
jo
jbe
mov
outsb
cmpsb
dec
data16
mov
jp
jbe
push
or
outsl
out
push
test
lods
js
icebp
dec
pop
inc
aam
lods
jg
cmp
ss
ds
test
out
jnp
cld
cld
aad
cmpsl
mov
sub
sub
push
shr
mov
cmp
xchg
pop
cs
xchg
xor
insb
enter
sahf
sub
push
mov
iret
pop
lea
jae
mov
cmpsl
fwait
push
test
jno
pusha
mov
xor
or
sub
jae
or
sub
cld
cmpsb
rorb
rolb
inc
jle
add
push
sbb
loopne
shlb
aaa
sub
sbb
and
or
les
call
mov
out
add
lret
out
or
imul
mov
cmc
cmp
inc
stos
iret
mov
dec
mov
adc
push
push
ja
rcll
ss
xchg
xchg
out
jno
imul
sbb
sub
stos
loope
push
xorl
popa
mov
jno
testl
push
push
mov
lahf
decl
push
je
xor
or
cmp
repnz
popf
aas
frstor
xchg
lcall
int
push
ljmp
fistps
insl
mov
add
int3
popa
sbb
add
cmc
fwait
mov
cmp
mov
cmp
mov
inc
scas
dec
push
mov
xchg
mov
inc
mov
pop
xchg
sbb
mov
mov
pop
and
filds
jo
stos
xchg
cmp
pop
or
adcb
nop
repnz
pop
xor
je
cmp
adc
loope
pop
mov
lock
mull
jns
fcom
sub
into
dec
jecxz
ret
jns
sub
xor
and
fucomi
adc
xchg
dec
push
popa
mov
xor
lcall
push
fwait
mov
jmp
cs
repz
push
in
hlt
mov
xor
das
lods
xor
xor
out
dec
int3
iret
into
rol
add
mov
pop
jge
into
in
and
jb
push
cltd
xchg
jmp
or
pop
add
sbb
lods
fcmovnbe
insl
inc
int3
and
test
into
adc
pop
insb
mov
jge
pop
or
sbb
bound
mov
mov
pop
fidivl
sub
add
out
out
pop
jae
shrl
outsb
push
movsb
jmp
loopne
psrlw
cmpsl
or
rcrb
inc
or
jge
cmp
scas
stos
sbb
test
stc
cmpl
or
mov
add
or
adc
cmp
lods
mov
jmp
mov
ds
inc
enter
pop
cld
push
fs
and
imul
cmp
mov
and
fstpt
cli
mov
ret
sbb
dec
repnz
into
jg
lods
fwait
cmovp
addb
mov
scas
cs
in
inc
outsb
dec
adc
mov
jecxz
mov
xlat
or
call
insl
movsl
adc
and
push
cld
fstl
lds
es
adc
cmp
iret
adc
jle
dec
lret
test
push
pop
jmp
lock
cmp
dec
sub
movsb
icebp
push
dec
lret
and
mov
jbe
or
dec
jno
dec
jo
sub
mov
lcall
js
mov
fimuls
pop
repnz
adc
jae
cmpsb
adc
movsb
in
loope
push
cmpsb
cs
loope
into
jecxz
pop
lcall
lahf
pop
push
mov
popf
imul
bnd
out
out
lcall
std
ficompl
inc
mov
mov
mov
test
cmpsb
pop
inc
repz
in
enter
push
cmpl
int3
setnp
in
jp
mov
xchg
or
jmp
cli
mov
xor
adc
sub
cmpsb
push
sub
loope
mov
sbbl
enter
push
stos
xor
aad
enter
rorl
mov
push
mov
mov
push
xchg
cmpsb
pop
add
mov
inc
jb
js
sti
jno
cli
std
cld
sbbb
adcl
jp
ljmp
std
int3
pusha
lds
out
out
nop
fldt
shrl
enter
jns
in
jno
xor
mov
dec
scas
aad
aad
sub
test
les
cmpsb
sbb
add
daa
les
leave
int
xor
loop
dec
loope
movd
and
xorb
adc
mov
pop
add
and
hlt
or
call
addr16
clc
sub
sbb
xorl
add
pusha
pop
mov
or
pop
repnz
cld
mov
pop
imul
call
mov
hlt
add
into
inc
rolb
dec
mov
or
push
adc
in
xchg
push
fwait
lcall
sbbb
cwtl
ljmp
movsl
out
jns
push
sahf
jb
mov
inc
into
cmpsl
cmp
mov
mov
inc
aam
mov
and
mov
pop
ret
fcoms
and
sub
lock
xor
sub
add
cmp
jle
xchg
popl
xor
jecxz
xor
jns
xor
pmuludq
mov
ret
mov
std
xor
enter
rolb
out
pop
scas
pushf
jle
and
mov
sti
lahf
lds
addr16
aam
fistl
jb
ja
and
jg
cmp
dec
gs
dec
xor
add
dec
hlt
fincstp
xchg
lea
repz
jle
sub
dec
push
in
xor
or
or
stos
add
outsb
rorl
sbb
icebp
inc
pop
loopne
daa
adc
repz
stc
das
jg
add
pop
leave
shl
test
repnz
mov
sub
push
mov
dec
dec
add
inc
stos
xor
xorl
lret
mov
dec
pop
fildll
cwtl
test
sbb
shll
xlat
jo
test
inc
dec
scas
mov
mov
scas
and
imul
inc
and
xlat
js
nop
push
push
or
pop
clc
xlat
jg
adc
and
push
orl
xchg
jbe
and
repz
cmp
shlb
lahf
outsl
pop
fistl
imul
xchg
popf
rcrl
ljmp
push
sbb
daa
cmc
push
jg
mov
clc
sarb
lahf
addps
sub
pop
cmp
sbb
aam
daa
lods
and
mov
stos
xor
pop
js
sbb
cmp
sub
ret
sub
jmp
rcrb
xlat
jge
mov
loopne
sbb
nop
add
test
jp
xchg
xchg
or
xor
psrlq
stos
les
xchg
push
sub
out
xchg
je
jl
clc
cmpsb
andb
outsl
stos
movsl
cmp
or
repz
test
pop
popl
cmp
pop
nop
mov
iret
arpl
mov
sbb
cltd
hlt
test
bound
or
das
bnd
mov
lea
repz
into
cmc
iret
lret
lret
or
in
and
insl
xchg
sub
jb
cmp
sub
sbb
or
lock
notl
repz
int3
jle
xchg
notb
mov
repnz
mov
rclb
jp
or
mov
adc
lods
fildll
mov
add
sbb
xchg
mov
xor
loopne
mov
lods
or
pop
jbe
sbb
lcall
pop
pop
pop
outsl
jb
cmp
xchg
mov
aam
push
pop
sbb
incb
call
movsb
add
cmp
or
jns
jp
mov
das
push
sub
mov
popf
cltd
fdivrl
ljmp
rcrl
inc
in
mov
ss
mov
jl
add
add
jne
dec
push
int
pop
sarb
add
subb
mov
outsl
push
xchg
jno
sub
mov
aam
fistpl
lods
inc
mov
repnz
push
pop
and
shrb
xorb
insl
and
pop
xchg
inc
ds
movsb
dec
icebp
mov
fsubrs
outsl
sub
ss
out
adc
stos
js
in
jle
aaa
dec
and
mov
or
rcrb
inc
ljmp
int
jmp
mov
fdivp
cmpsl
cmp
xchg
into
aas
add
inc
inc
pop
mov
into
out
insb
mov
das
jo
mov
dec
rorl
addl
jmp
dec
mov
pusha
sub
cmpsb
xchg
in
or
icebp
lods
imul
pop
lods
push
mov
mov
in
inc
mov
adc
mov
test
into
mov
push
fimuls
xor
xor
ret
outsl
hlt
shl
pusha
fwait
mov
push
je
clc
shlb
outsl
sbb
xor
stos
rorl
dec
add
jb
mov
mov
push
jecxz
jmp
shrl
pop
dec
pop
and
sub
dec
pop
mov
mov
int
icebp
in
and
sahf
fwait
lods
in
add
jle
jge
or
jg
loopne
dec
arpl
push
jmp
out
rcrl
insl
pop
fisttps
or
cwtl
pslld
jnp
add
std
add
lods
push
out
or
jmp
adcl
popf
or
push
nop
daa
out
ds
sahf
mov
sbb
dec
mov
cmp
sbb
adc
push
in
jae
negl
test
inc
pcmpeqb
pop
xor
lret
movsl
insb
or
mov
loope
or
sahf
jle
inc
aad
dec
lret
add
jmp
repz
nop
inc
mov
push
xor
rcrl
scas
jmp
pop
sbb
cmp
xchg
xchg
sbb
cmp
fimull
test
mov
mov
addr16
sbb
xchg
mov
out
cmp
xor
aad
pop
xchg
and
sub
push
aad
mov
xor
sbb
pushf
sbbl
push
rorb
out
xchg
pop
stc
mov
rcrl
stos
out
xchg
sub
sbb
xchg
dec
and
aam
xor
or
clc
inc
lcall
test
roll
clc
aaa
xor
fwait
sub
sub
loopne
jno
xchg
aas
rclb
sahf
ds
add
xchg
ficoms
cli
cmp
xchg
or
adc
arpl
cmp
push
gs
mov
inc
inc
mov
cmp
push
push
in
pop
xchg
mov
cmp
repnz
movsl
push
call
lret
je
iret
jae
testl
pop
pop
sbb
pop
arpl
push
jb
pop
add
cld
pop
pop
mov
outsb
pop
fmull
push
xor
stos
adc
pusha
inc
pop
jo
enter
mov
gs
repz
cmpsb
sbb
and
inc
xchg
adc
cmc
sahf
mov
mov
pop
pop
mov
arpl
popa
dec
dec
cli
test
inc
call
mov
pop
call
pop
bound
xchg
mov
pushf
test
dec
push
add
outsl
sub
xchg
pop
xor
movsl
pop
cbtw
xor
xor
mov
ds
push
adc
ljmp
and
roll
out
ret
adc
ljmp
lret
push
xchg
mov
pop
call
sub
jecxz
dec
aas
and
push
loopne
xchg
mov
bound
popa
mov
sbb
sbb
pop
gs
xor
cmp
fnstcw
in
jb
and
xchg
in
sbb
mov
adc
arpl
push
faddl
push
and
faddl
lcall
in
cmpsb
out
or
add
int3
lods
lcall
call
scas
js
add
cmpsb
js
and
call
stos
pop
call
loopne
sub
aaa
sbb
sbb
adc
push
cmovl
shll
daa
mov
in
dec
rorb
je
xchg
push
and
add
outsb
push
jb
jecxz
mull
roll
outsl
stos
test
add
in
dec
shr
push
adc
ss
push
push
jae
and
pop
inc
orl
lret
or
push
xor
gs
mov
cmp
movl
bswap
lret
jmp
sti
jmp
fsts
test
cmpl
shlb
xor
mov
add
loope
arpl
jp
and
adc
jmp
bound
and
sbb
cld
xchg
pop
rolb
es
and
shll
sbb
add
xor
loopne
cmp
xor
pop
jl
arpl
mov
xor
xlat
test
cmpsl
sbb
ret
push
out
test
mov
add
ret
xchg
cmp
sub
sahf
in
mov
fdivs
mull
mov
adc
ret
das
xor
js
popl
inc
pop
cld
fsts
cwtl
adc
add
loop
fdivrl
scas
fcmovnbe
and
mov
mov
mov
or
xchg
iret
xchg
inc
push
ds
sbb
jne
xor
fcmovu
pop
rclb
mov
cld
dec
repz
ljmp
xchg
cwtl
out
mov
mov
jns
popf
rcl
jbe
xchg
add
outsl
inc
pop
mov
or
add
xchg
jbe
mov
divl
mov
idiv
mov
jo
mov
mov
jl
in
pop
dec
or
sbb
xchg
xor
cmp
dec
hlt
inc
rcrb
aas
testb
arpl
fs
or
js
movsl
fwait
ljmp
adc
cmpsb
dec
adc
inc
dec
loopne
movsl
mov
pop
push
cmp
ret
and
les
imul
jg
aam
pop
xlat
push
fs
fbld
push
or
sti
pop
mov
add
fcmovb
xchg
push
cmp
mov
dec
or
cmp
fsubs
repz
inc
mov
pop
in
jecxz
popf
test
mov
sub
mov
shlb
lods
pop
push
nop
fstpt
rcll
sbb
sti
add
cld
push
jecxz
daa
icebp
jbe
adc
sub
pop
outsb
sbb
mov
or
lahf
jl
mov
push
and
aam
into
mov
insl
sub
imul
shrb
test
push
adc
jb
js
sub
adc
and
mov
xor
ffreep
jecxz
and
lret
rorl
xchg
adc
xchg
movsl
cwtl
idivl
test
or
out
ljmp
stos
push
shlb
arpl
stos
xchg
movsl
pop
mov
stos
jl
sti
sbb
jge
push
pop
cltd
movsb
mov
adc
xchg
add
cmpsb
faddl
or
stos
push
cld
int
mov
in
sarl
outsb
inc
cmp
outsb
jmp
jbe
push
inc
dec
sbb
jmp
cmc
gs
inc
stos
scas
jmp
mov
jbe
bound
adc
repnz
or
add
or
mov
imul
xor
mov
movsl
xchg
bound
dec
push
std
cs
mov
push
arpl
sar
ret
xchg
fs
imul
adc
int
or
das
bound
push
jl
loopne
inc
stc
jmp
stos
xchg
mov
dec
mov
and
adc
sarb
jge
aaa
jae
cli
dec
push
pop
sbb
pop
sub
sbb
jle
xor
sub
or
pop
cmp
shlb
pop
movsb
cmp
fnstcw
lret
adc
mov
or
jb
rorl
cmp
jecxz
leave
arpl
cwtl
insb
movsl
es
jg
mov
shrl
bound
lds
ja
push
xor
loop
cmp
push
jp
dec
sub
pop
push
xor
xlat
mov
sti
lret
stc
jnp
pop
int
xor
dec
dec
push
cmp
adc
push
stos
jecxz
rolb
cmpsb
fiadds
stc
std
push
xor
mov
hlt
imul
jbe
out
sbb
cmpsl
imul
fistpll
int
psllw
push
imul
movsl
jmp
push
scas
dec
cs
mov
cmp
jo
cli
icebp
jge
sti
cmp
mov
mov
sbb
add
pop
and
and
add
mov
addr16
mov
mov
ret
mov
or
sbb
cmpsl
int
int
invlpg
lods
lock
xchg
fwait
sub
sub
repnz
and
in
ret
hlt
in
stc
clc
int3
hlt
xchg
sub
lcall
cld
lcall
xchg
mov
ds
adc
inc
jle
scas
and
sarl
cmc
jg
test
mov
jle
int3
cli
xor
pop
jl
xor
ficoms
xchg
pop
lahf
inc
outsl
pop
jmp
add
jge
stos
aas
int
inc
cmp
jle
inc
dec
mov
dec
mov
xor
mov
ret
pop
shr
jmp
subb
xchg
cs
iret
xor
fcoms
pusha
mov
cmp
mov
mov
xchg
repz
jbe
mov
in
mov
add
gs
inc
mov
mov
or
sarl
xor
cltd
in
jo
mov
rorb
lea
jecxz
jae,pt
popa
pop
pop
das
or
js
les
or
inc
dec
mov
shrb
lcall
inc
push
sbb
cs
lock
sub
push
jo
repz
imul
mov
sbb
sub
or
pusha
dec
push
stos
xor
ljmp
mov
lds
xchg
das
sbb
pop
jne
sub
icebp
cs
push
lods
hlt
push
push
push
jl
xchg
cmp
int3
imul
push
das
adc
sub
jo
ror
mov
xor
cltd
or
test
loop
jno
je
adc
xor
stc
xor
gs
and
mov
pop
push
pop
shrl
stos
and
stos
lds
out
dec
dec
daa
cltd
push
int
dec
push
sub
pop
das
xchg
leave
fdiv
outsl
js
sub
adc
mov
mov
scas
mov
add
dec
sbb
mov
aad
jnp
popf
ss
push
pop
xor
cmp
stos
push
aad
push
aas
into
ret
push
xchg
imul
insl
xor
and
jmp
xor
adc
test
addr16
call
cmp
lret
out
sti
lcall
cmpsl
bound
and
jp
aaa
mov
adc
sbb
mov
xchg
cmp
lret
test
mov
xor
or
sti
pop
movsl
daa
jno
test
hlt
mov
pop
push
mov
jb
xor
pop
loopne
push
addr16
outsb
or
cmp
adc
inc
mov
fxch
jmp
popa
pushf
in
out
sub
aam
jp
lahf
rclb
mov
jae
pop
push
and
jne
pop
sahf
xor
sahf
jp
rorl
pop
rorl
pushf
dec
add
ficoml
and
jp
push
pop
sub
pop
outsl
mov
adc
jns
and
mov
repnz
sbb
jge
cs
lods
sbb
out
dec
stc
sub
cwtl
cs
scas
sti
ret
sub
addb
iret
pop
dec
xor
xor
pop
mulb
cmpsb
lods
bnd
fwait
mov
mov
dec
inc
fldl
or
popw
sub
adcl
pop
add
jmp
xor
push
pop
pop
xlat
cmp
cmpsl
loope
and
cmp
std
pusha
mov
mov
inc
clc
stc
fsubrs
imul
xor
xlat
sbb
pop
daa
push
sbb
cmp
or
fadd
int
idiv
stc
jae
mov
shll
js
shll
push
arpl
imul
push
add
cmpb
adc
negl
fwait
push
sub
mov
out
inc
fnsave
jne
cld
pop
dec
nop
adc
mov
mov
out
sub
fsubp
in
dec
mov
mov
loope
notl
test
movsb
push
mov
addl
int3
bnd
lcall
testb
add
outsb
imul
pop
sbb
sub
add
sub
xchg
dec
pop
xchg
aas
call
fwait
xchg
sbb
insl
stos
ret
mov
fucomp
push
inc
ss
jmp
xchg
sbb
add
js
fsts
adc
cli
in
cld
inc
cmp
test
insb
or
add
mov
bound
popf
das
into
subl
lahf
mov
xor
and
repnz
jg
rclb
pop
cmpl
imul
xchg
ror
test
xchg
pop
push
mov
fistpll
shlb
xchg
dec
jb
jmp
and
dec
in
incl
ret
xchg
cltd
xchg
adc
jle
mov
fcmove
xchg
xchg
ret
ljmp
inc
insb
adc
rcrb
jecxz
push
inc
jl
inc
fistps
je
jne
jbe
sar
mov
fstpt
test
push
insb
mov
sbb
js
lods
push
lods
xor
pop
nop
rcll
add
mov
xor
or
xor
jno
ret
jne
xchg
outsl
addr16
outsl
jecxz
mov
adc
push
pop
imul
cmp
shll
test
add
pop
fbstp
iret
sub
repnz
mov
clc
xor
in
jno
outsl
fimuls
inc
test
cwtl
push
push
and
in
insb
jmp
movsl
cli
into
sub
adc
xchg
dec
push
cmc
xlat
mov
pop
ret
orl
push
sub
mov
mov
push
dec
pop
arpl
int
and
gs
enter
insl
repz
push
and
pusha
ficoms
mov
rcl
scas
push
in
out
inc
inc
mov
leave
mov
pop
test
pop
pop
in
jbe
add
push
out
cli
pop
sub
and
orb
push
jle
ljmp
push
mov
data16
std
dec
test
andb
add
jg
lahf
mov
leave
push
push
and
push
push
pop
cltd
jne
rcl
fcompl
ss
lods
nop
je
push
dec
out
inc
xor
je
adc
fcmovnbe
xlat
adc
cmp
loop
push
xchg
ret
cld
push
jle
dec
xchg
nop
das
mov
in
cmp
pusha
sbb
cmp
in
test
icebp
xor
cmpsl
mov
je
dec
enter
repnz
dec
lods
pop
ss
out
xor
shr
jbe
jnp
test
lcall
dec
subl
jmp
mov
cmc
ljmp
push
dec
ljmp
fnsave
sub
movl
scas
rolb
outsl
lahf
mov
lods
sets
or
mov
xchg
mov
aaa
shll
pop
out
divl
or
sub
out
xchg
add
fwait
cs
xchg
popf
pop
out
ljmp
or
push
cmp
ret
ret
pusha
testb
dec
addr16
mov
adc
in
pop
mov
dec
jne
xchg
mov
xchg
sbb
sbb
pop
lret
jne
sub
mov
inc
out
insl
stos
arpl
xchg
cmpb
dec
adc
jl
fisubl
adc
arpl
cmc
mov
xchg
jns
lret
xchg
or
push
cmpsb
cld
lods
push
adc
andb
pusha
loop
jnp
mov
push
mov
inc
sbb
jb
pusha
mov
sub
xchg
test
imul
xchg
mov
pop
ljmp
push
iret
cltd
pop
add
sub
push
sbb
cltd
incb
nop
out
xor
es
mov
adc
out
jbe
jns
dec
push
inc
sbb
cmp
imul
push
andb
xlat
push
aam
push
and
mov
push
jno
cmp
dec
mov
and
adc
push
enter
jge
mov
push
xlat
xor
lock
push
cmpsb
push
mov
jl
int
jl
aad
rclb
dec
pop
addb
or
movsb
adc
inc
cli
or
sti
jno
adc
dec
mov
popa
mov
push
data16
adc
dec
mov
pop
stos
mov
xchg
call
cwtl
fistps
andl
push
ljmp
test
push
lds
mov
sub
push
jl
xor
sbb
les
jmp
addb
mov
shrb
push
or
and
lock
movsl
out
fldenv
pop
cmp
or
adc
pop
mov
pop
fs
and
mov
lret
sbb
xchg
mov
mov
push
into
push
and
pop
jnp
xlat
cmp
jl
mov
jne
test
popf
cmp
fwait
in
lea
shrl
movsl
mov
aas
mov
arpl
cs
cld
fildl
aas
dec
aad
add
popf
xor
in
mov
stos
fwait
xchg
xor
xlat
clc
lea
mov
stos
push
cmp
dec
ds
mov
mov
outsb
mov
lret
repz
push
mov
mov
dec
cmp
addr16
or
cmp
out
inc
mov
or
outsl
jne
cli
sbb
cmp
idivl
inc
fsts
or
repz
hlt
add
xchg
mov
xchg
or
xor
popl
adc
es
dec
inc
sub
mov
jb
pop
pushl
inc
out
shlb
cmpsb
es
sti
fsubr
pop
repnz
sbb
add
insb
hlt
xorl
xchg
dec
fwait
pop
ja
jae
inc
nop
aaa
cmpsl
pop
and
into
ret
addb
in
and
ds
fcompl
dec
rcll
lahf
and
push
cmp
icebp
enter
push
cmc
test
mov
dec
aad
dec
adc
jns
and
lea
out
jg
or
inc
nop
incl
leave
mov
pop
popa
or
int
jne
sub
jo
adc
cmc
xchg
cli
into
sub
hlt
shll
cs
stos
jo
xchg
lret
loopne
xor
and
lret
das
jo
push
push
adc
jle
or
stc
xor
outsl
mov
or
xchg
sti
shl
movsb
or
push
xchg
iret
dec
mov
dec
lods
xchg
sub
adc
mov
jne
negb
clc
push
fnsave
adc
sbb
adc
outsb
cmp
ss
roll
lea
jp
in
xchg
bound
mov
mov
dec
xchg
inc
es
ds
aad
mov
mov
push
arpl
fiadds
icebp
mov
sbb
es
cmp
inc
mov
insl
add
jl
out
jb
mov
jl
push
fimuls
or
add
mov
add
mov
bound
push
loope
mov
arpl
and
rorl
and
dec
pop
inc
and
jle
mov
test
rolb
inc
or
or
jle
xor
addr16
and
imul
mov
mov
push
daa
dec
pop
dec
cmp
mov
nop
mov
jge
and
push
shlb
les
or
leave
andb
aad
push
outsb
xlat
jne
je
jg
dec
xchg
or
or
pop
cwtl
stos
jl
add
js
pop
mov
movsl
xchg
cmp
cmp
cmc
xor
sub
out
cld
out
pop
scas
adc
dec
loopne
call
mov
scas
xor
stos
les
repz
jnp
and
pop
repnz
addl
adc
or
mov
inc
adc
xor
jnp
outsl
jmp
xor
loopne
lret
imulb
dec
push
data16
scas
cltd
push
nop
pop
jne
stos
stos
data16
adc
lret
sub
mov
adc
mov
xor
pop
loop
xchg
mov
fadd
mov
or
or
jnp
sahf
mov
inc
or
lahf
jg
xor
sbb
jmp
ss
sahf
add
sub
mov
cltd
sub
dec
mov
or
enter
lods
cmp
dec
lret
repnz
adc
jle
or
ret
idiv
adc
subb
in
pop
dec
jmp
xor
popa
dec
adc
push
cmp
sbb
rcll
aad
ret
int3
clc
push
sbb
pop
test
imul
fmull
lods
stos
adcl
fwait
lret
cmp
ret
xchg
mov
inc
or
cs
filds
test
call
xor
insl
push
sbbl
fbld
adc
sub
nop
stos
inc
loopne
inc
mov
das
in
adc
adc
xor
mov
pop
call
or
loopne
insb
adc
adc
or
out
add
dec
test
pop
pushf
sbb
ja
mov
fcomi
dec
sub
mov
and
scas
lret
mov
dec
and
pop
xorl
mov
push
hlt
div
pop
add
out
pop
sti
stos
inc
in
repnz
ficoms
test
roll
fwait
jecxz
outsb
sub
std
js
sbb
daa
jge
int3
inc
pop
or
dec
aaa
xor
es
jecxz
lock
mov
sahf
fs
and
cmpsl
push
mov
in
call
pop
add
scas
ret
dec
imul
jo
sbb
push
adc
push
decb
mov
xchg
pop
inc
push
pushf
insl
cld
adc
mov
movsb
sbbl
sbbl
std
ljmp
or
sti
dec
ljmp
jne
cmp
lret
addr16
rcrl
stc
mov
inc
fistl
insb
pushf
andb
jg
mov
psubb
rcrl
movsb
aad
or
aam
sbbb
ds
mov
and
add
popa
in
pop
jns
iret
xchg
xchg
or
iret
out
add
pop
cmp
inc
mov
or
mov
daa
jae
dec
mov
adc
inc
loop
ja
mov
je
adc
inc
je
mov
push
imul
inc
pop
xor
pop
adc
mov
xor
xor
daa
xor
jle
leave
mov
cmp
lret
jb
out
aam
cmp
inc
das
cmpl
xchg
fwait
jp
xchg
push
xlat
sub
in
out
fstps
push
and
test
outsl
lahf
loopne
cmpsb
jo
sbb
outsl
test
out
and
aaa
pop
push
fnstsw
icebp
cmpb
inc
jecxz
xchg
std
fimull
mov
sbb
lods
imul
jl
dec
inc
ss
pop
sti
adc
or
std
bound
gs
jp
mov
in
jl
dec
std
out
pop
daa
mov
inc
pusha
mov
in
cmp
shrb
cs
aaa
lahf
mov
pop
jl
and
sub
daa
data16
pop
add
add
imul
pop
sub
ss
adc
outsb
es
mov
push
in
test
pushf
fdivs
jns
in
add
popl
imull
dec
push
addr16
pcmpeqw
and
push
jno
inc
loop
jge
bnd
lret
pop
mov
lods
jecxz
shll
stos
cmp
inc
int
cmp
dec
add
nop
cmp
into
xchg
and
inc
sbb
push
add
xlat
ss
mov
cmpl
data16
je
cmp
mov
test
xchg
sahf
loope
cmp
mov
pop
loopne
dec
arpl
add
dec
xlat
ljmp
add
in
mov
aaa
xor
in
push
push
aaa
sbb
and
dec
clc
push
jo
push
and
cli
xchg
adc
and
outsb
cmp
ffreep
add
jno
insl
mov
mov
mov
and
das
mov
movsb
test
add
out
push
jg
stos
sarl
in
and
sub
hlt
cmpsb
push
push
mov
fwait
cs
jg
mov
into
cmp
lods
cmp
out
cld
add
addr16
xorl
sbb
je
in
sbb
sub
push
idivl
mov
repz
sub
mov
mov
sarl
xchg
test
popf
mov
jns
mov
popf
jne
mov
xlat
rcrl
xor
out
sub
or
into
mov
fnstenv
aas
mov
push
ret
stos
or
leave
cmpsb
lods
repz
or
push
xchg
hlt
mov
enter
cmp
ss
pushf
sahf
in
cmc
mov
adc
out
out
in
jns
mov
pop
cmp
sbb
inc
es
data16
sub
das
pop
mov
mov
sbb
loop
xor
fiaddl
stos
cmpsl
cli
and
ja
movsl
mov
pusha
mov
sub
push
sarb
cmovbe
mov
imul
mov
cmp
pop
test
push
out
mov
inc
insb
cmpsb
adc
jmp
mov
add
stos
cmpb
add
xchg
xchg
lods
xor
and
fisttps
jno
mov
insl
loopne
stc
adc
cwtl
add
xor
cmp
mov
cmp
testb
cmpsb
jl
or
loope
aas
gs
stc
lea
mov
mov
and
arpl
sub
mov
js
sbb
leave
ja
mov
rolb
loopne
mov
xchg
xlat
adc
sub
icebp
jmp
xchg
int
insl
outsb
jecxz
push
test
dec
fisubl
stos
pushf
hlt
out
inc
in
pop
push
cmp
aad
pop
insl
add
addr16
rol
xlat
into
fldcw
std
sub
cmp
out
leave
pop
sub
adc
sbb
sbb
ds
lcall
arpl
or
ss
int
test
pop
mov
push
mov
test
stos
mov
or
sbb
mov
sbb
fsubrs
sahf
rcl
divb
arpl
mov
ljmp
jns
repnz
nop
adcl
sub
enter
std
scas
and
pop
in
movsl
cwtl
xor
mov
cmpsb
sub
and
in
jns
fadd
cmpsb
sub
jne
push
icebp
js
mov
xchg
outsl
addb
mov
push
push
dec
mov
mov
add
repnz
mov
cs
in
test
sub
and
push
mov
push
jl
jo
cltd
lods
sbb
out
inc
push
mov
mov
loop
adc
and
imul
nop
pop
or
fsts
and
jo
imul
mov
mov
sbb
mov
cmp
insl
cmc
xchg
push
dec
mov
ret
addr16
push
lcall
sbb
in
pop
in
fistl
sbb
pop
in
arpl
out
into
jnp
sub
jp
in
jae
rcll
aam
test
leave
pop
adc
ja
sbb
adc
sub
xchg
pop
mov
jmp
sub
hlt
mov
in
pop
ret
add
jl
jnp
int3
xchg
xor
sub
dec
dec
xor
fsubp
aam
or
push
push
movsb
sub
add
mov
and
popf
cmpsl
or
xor
stos
inc
cmp
dec
rclb
addr16
xchg
repnz
or
outsl
in
in
jb
jbe
xchg
mov
pop
mov
xchg
out
lret
and
js
movsl
out
sbbl
lret
inc
sub
pop
int3
lods
pop
shl
xor
cmp
sbb
ret
adc
dec
fdiv
push
cmp
push
inc
push
lret
cmpsb
into
std
lcall
fiadds
ret
movsb
cmp
call
ret
sub
push
nop
mov
ret
mov
jecxz
out
loop
mov
idivl
inc
add
mov
insl
jne
sub
xchg
or
cltd
nop
lds
test
add
pusha
or
add
sbb
out
lods
gs
jmp
popa
pop
dec
out
outsl
inc
mov
and
aas
xchg
in
cmpsl
pop
bound
or
imul
and
loope
add
mov
enter
jbe
cmp
xor
lods
sub
call
cmc
add
fists
xchg
mov
push
jle
ret
hlt
sub
aad
mov
sahf
push
xor
scas
faddl
outsb
push
pop
xlat
ret
hlt
inc
mov
jmp
call
push
inc
xor
sbb
fs
stc
jo
pop
mov
add
add
xchg
jp
gs
push
movsb
ds
xchg
enter
out
push
xor
lods
mov
ss
outsb
lods
sbb
lahf
adc
arpl
insb
cwtl
sub
pop
pop
mov
fisubrl
leave
mov
push
jl
pushl
shr
pop
xchg
cli
icebp
push
cmp
inc
jle
scas
pop
cwtl
cmp
sub
cmpsb
js
dec
inc
inc
hlt
test
sub
xchg
ss
fwait
ret
lahf
xchg
cltd
adc
sub
mov
jne
ret
jne
jo
bound
repz
fstp
xor
jp
ret
cltd
add
sahf
outsl
enter
ret
xchg
pop
scas
fbld
jo
jo
cmpsb
into
inc
jecxz
or
cltd
dec
scas
sub
dec
push
xlat
cmp
dec
mov
dec
jle
and
jmp
adc
lods
test
sub
scas
daa
gs
sbb
movb
sub
add
dec
xor
or
adc
sti
cmp
and
ja
push
in
push
pop
mov
ss
jge
adc
cmp
cli
rcrl
in
xor
call
xchg
push
mov
cmp
jnp
xchg
mov
pop
cmp
shlb
pop
or
movsb
aam
jg
imul
push
push
pop
popf
add
divb
idivb
imul
movsl
loopne
jae
push
sub
mov
dec
inc
test
stc
push
cmp
sbb
repnz
pop
sub
and
sub
roll
jnp
mov
add
dec
pop
je
das
idiv
jl
push
and
outsl
inc
jecxz
out
stos
bound
in
add
rcll
pop
aam
in
or
sbb
arpl
scas
mov
xchg
or
or
sbb
push
lock
incb
jecxz
mov
dec
xor
mov
imul
jo
out
dec
dec
std
xchg
rcrl
lods
lcall
sbb
out
or
adc
mov
stos
add
pushf
cld
fs
pusha
adc
aam
and
inc
int3
fsubrs
pop
fsubs
xchg
popf
outsb
push
mov
pushf
push
mov
rcll
in
inc
mov
call
add
push
in
xor
dec
dec
mov
xchg
mov
mov
mov
popa
lcall
lods
xchg
add
outsb
mov
cmp
pop
jg
or
push
movsb
inc
and
add
scas
push
push
sahf
mov
js
popa
jnp
sub
js
bound
sbb
imulb
scas
adc
jae
sahf
mov
add
lock
pop
xor
and
scas
inc
adc
call
popa
jo
rorb
rorb
lret
dec
mov
sub
loop
hlt
pusha
faddl
imul
mov
push
cmp
cld
clc
movsb
ret
dec
mov
jge
adc
faddp
lock
stos
repnz
cltd
inc
or
jbe
mov
adc
cmpl
popa
mov
cmc
cwtl
in
cltd
add
xchg
mov
repnz
pusha
in
shl
add
cltd
sarb
pushw
fisttps
jnp
test
push
cmp
jno
lods
stos
xchg
xor
push
test
inc
orb
test
scas
push
insb
mov
adc
xchg
icebp
adc
or
call
lods
add
sbb
or
lods
xchg
cld
add
add
fdivrp
add
inc
in
imul
add
add
cmpsl
cli
sbb
jb
xor
notl
ds
shll
sbb
add
pusha
iret
aaa
outsb
aad
jmp
ret
pinsrw
dec
nop
mov
pop
or
subb
add
out
rep
icebp
sbb
mov
mov
js
adc
cwtl
mov
scas
bswap
lock
dec
mov
cmp
sbb
jge
je
enter
es
mov
scas
testb
addl
fbstp
lret
push
mov
sub
cmpsl
xchg
fidivrl
pop
mov
mov
adc
cmc
minps
mov
int3
pop
pop
lds
lods
push
pop
out
jge
or
mov
inc
js
xchg
xchg
movsl
fisttpll
or
cmp
mov
dec
sbbb
lret
aaa
push
jno
call
add
pushf
pop
sbb
push
ja
shrb
adc
mov
inc
jns
es
mov
lods
jge
adcb
dec
xor
mov
scas
aas
xchg
or
xchg
dec
mov
xchg
stos
fs
or
jecxz
les
into
movsb
pop
sti
je
add
idivb
dec
mov
lea
or
icebp
mov
dec
nop
sbb
mov
loope
int3
insl
jmp
test
ret
cltd
cmpsl
jo
cld
push
rol
faddl
shll
mov
or
pushf
popf
mov
repz
idivb
and
push
mov
inc
out
gs
or
and
dec
sbb
data16
outsl
mov
aas
nop
sub
fdivrp
pop
fsubr
xlat
or
xchg
push
sub
lock
daa
mov
mov
in
pusha
fsubr
test
or
rcll
pop
lahf
mov
sbb
dec
or
dec
ja
imul
std
add
or
or
jmp
rorb
sbb
push
test
out
and
test
xor
std
out
push
cli
ljmp
loope
push
jmp
xchg
ret
pop
and
pop
sbb
aaa
hlt
sub
sahf
sub
fisubrl
dec
sbb
jo
add
ret
js
push
loop
out
xchg
pop
xchg
lods
test
lds
pushf
mov
outsl
push
xor
inc
les
inc
cltd
jmp
mov
jp
mov
ljmp
sbb
inc
xchg
add
shrl
mov
sbb
mov
ret
or
inc
add
ja
push
lea
cmp
pusha
insl
jb
push
aad
xor
xchg
insb
cmpsl
roll
sarb
xchg
cltd
push
mov
ja
test
aas
lahf
adc
leave
and
sub
jb
ljmp
aam
cmp
pushl
cmc
not
and
cli
lods
xor
sub
jle
movsl
mov
les
cs
sub
and
adc
or
rcll
popf
das
insl
fidivrl
mov
and
repnz
rcr
sti
or
inc
out
aam
or
mov
call
sbb
sub
jnp
iret
ds
jle
cli
jns
emms
adc
push
add
sub
sub
loope
push
daa
icebp
bound
cmp
movsb
xor
jae
lods
test
cmpsb
lds
sub
cwtl
add
add
sub
or
bound
mov
jne
in
mov
inc
push
out
test
pushf
cmp
outsl
cli
shlb
sahf
mov
test
jns
lret
lahf
stc
pop
in
aas
iret
dec
fisttps
loope
lcall
mov
pop
es
dec
push
fsts
cmp
popf
js
fwait
and
fldenv
push
lcall
xchg
add
test
andb
adc
in
push
outsb
or
sti
xor
rorb
sbb
or
cmp
ss
push
jecxz
int
outsl
xchg
stc
pop
inc
int
pop
aad
mov
in
mov
fildll
fwait
xor
lea
leave
pop
mov
inc
jno
xchg
jnp
addr16
jg
jle
scas
cli
mov
popf
pop
int
cmp
push
wbinvd
inc
sahf
movsb
dec
mov
sbb
cmp
jl
aaa
mov
pop
imul
std
negl
adc
pop
xchg
and
cs
shll
clc
push
fldl
inc
jle
ja
fwait
shrl
mov
and
xor
push
cmp
mov
cmc
xchg
push
cwtl
cli
bound
xor
insl
test
sub
movsl
data16
mov
flds
inc
aas
mov
cmpl
rorb
sbb
jg
push
gs
mov
jg
enter
call
repnz
stos
adc
cmc
in
mov
ss
leave
cmc
aad
jl
testl
bound
pop
divl
add
cmp
mov
mov
ds
out
push
sub
fdivr
mov
and
test
mov
push
or
mov
je
xor
into
icebp
rclb
call
in
loop
sarb
xlat
nop
push
and
aaa
mov
rorl
inc
add
movsb
mov
xchg
dec
les
sbb
jge
test
mov
push
xor
rolb
mov
inc
inc
out
lds
ss
je
int3
pushw
cmpb
xchg
mov
lods
cmpsl
adc
pop
sbb
cltd
femms
stos
outsb
aaa
add
add
cwtl
sbb
lcall
scas
ret
stc
sar
adc
mov
pop
jecxz
push
cmc
dec
loopne
cmp
pop
sbb
jo
lret
mov
mov
dec
xchg
push
out
frstor
dec
cld
cmpsl
fldt
cmp
mov
cmp
repz
xchg
mov
mov
mov
les
imul
popf
jnp
cs
rcrl
call
orb
xor
cmc
adc
insl
add
sti
daa
push
mov
outsl
loop
outsl
pop
cmpsl
and
cmpsb
push
dec
out
push
mov
popf
fs
test
push
push
sbb
pop
push
adc
dec
and
gs
and
adc
mov
pop
pop
mov
jle
jle
push
cwtl
mov
ljmp
nop
mov
stc
lret
cs
push
sbb
int
mov
in
psllw
lret
movsl
sub
xor
adc
or
loopne
insl
ret
daa
insb
inc
stos
and
mov
popa
or
mov
push
or
shlb
jge
pop
cld
mov
insl
lcall
inc
in
cmpsb
adc
sbb
push
sti
adc
ss
andb
xchg
movsl
sbb
mov
or
scas
or
mov
jbe
std
ds
sbb
dec
das
sbb
jb
nop
aaa
jnp
xor
shlb
aas
imul
gs
xchg
xchg
dec
push
scas
dec
loope
sub
adc
and
mul
dec
adc
jmp
jle
xchg
shrb
xchg
int3
jg
jg
cmp
inc
inc
loope
add
fs
test
stc
mov
rolb
or
add
icebp
je
xor
xor
or
stos
orl
aas
mov
push
add
jp
and
cmp
scas
lods
or
inc
sub
mov
aad
push
sahf
dec
xor
insl
xchg
lret
ret
iret
adc
ror
pop
dec
loopne
lods
cmpsl
inc
mov
add
mov
mov
pop
add
fnstenv
inc
xchg
mov
rorb
mov
psrlq
cmp
test
sub
test
adcb
adc
mov
ss
push
lods
clc
std
cmp
movsl
mov
in
loopne
fwait
outsl
ss
inc
roll
movsl
and
dec
jns
pop
inc
adc
cmpsb
xlat
mov
in
inc
pop
popf
and
pop
in
sub
mov
xor
xorl
jl
mov
add
and
dec
test
rcl
mov
jnp
les
aas
movsl
jae
pop
fcmovne
or
clc
pop
loop
lret
cwtl
mov
in
jne
fsubrl
dec
xlat
arpl
sub
or
cmp
aam
sub
xchg
in
and
ja
loope
xchg
push
loope
push
sub
mov
loopne
push
lea
enter
and
xlat
aaa
subb
push
mov
sti
mov
sub
and
test
sbb
out
or
or
dec
test
sub
adc
cmp
ja
rsqrtps
rol
inc
and
cmp
stos
mov
mov
in
in
lock
xchg
xchg
and
dec
jns
subb
jl
pop
fcmovu
int3
and
in
cmpsb
sti
rorl
mov
cmpl
rcrl
vpshaq
sub
pop
pop
aam
mov
mov
daa
aaa
loopne
insb
pop
shll
dec
mov
lret
pop
add
sub
lahf
mov
fstpl
pop
mov
push
callw
fisubs
pop
sbb
cwtl
pop
out
or
std
pushf
cmp
sti
mov
xor
outsl
aam
pushf
cmp
into
cmpsl
std
sbb
inc
jecxz
or
push
jb
in
jb
dec
test
mov
lods
nop
out
test
push
or
jae
shll
stos
mov
adc
push
test
jb
outsb
adc
xchg
adc
lcall
outsl
or
cmpsb
clc
stc
sbb
addl
cmp
movsl
cmp
imul
add
iret
dec
daa
add
sbb
xchg
repnz
repnz
dec
outsl
or
push
pop
and
pop
insl
and
push
dec
scas
aaa
pop
gs
sbb
mov
mov
push
mov
xchg
adc
mov
loop
loop
fldenv
insb
mov
mov
shrl
in
imull
inc
jg
stc
sahf
loope
pop
scas
js
arpl
pop
inc
clc
lock
notl
inc
adc
cmpsl
lock
movsl
lock
fisubrs
loopne
out
sbb
aad
popf
sbb
leave
lret
sysret
xor
das
mov
std
call
cs
pop
push
sub
xchg
and
jecxz
dec
in
pop
mov
push
xor
outsl
push
inc
inc
insl
fstpl
test
scas
and
jecxz
lcall
lods
fbstp
add
and
lea
fisubrl
push
jns
jl
mov
cmp
inc
mov
andl
loopne
xlat
stos
inc
ret
lret
pop
jae
mov
sub
data16
loop
imul
mov
mov
aas
lods
ds
lret
sbb
adc
es
ljmp
and
pushf
sub
fs
or
iret
jp
adc
es
cmpsl
enter
imul
mov
std
xlat
out
adc
push
sub
sti
arpl
sub
push
lret
in
gs
push
push
jge
mov
mov
js
shr
pop
addr16
popa
ret
lods
adc
movsl
push
xor
or
dec
in
ja
pop
inc
dec
clc
jne
cmpsb
cmc
or
or
fdivrl
add
and
aad
lods
int
shr
mov
in
shll
lods
test
mov
enter
jbe
cli
daa
inc
ret
jns
lock
incl
lret
sbb
fists
clc
and
test
insb
mov
mov
vcvttpd2dqy
ss
cld
in
sub
pop
movsb
push
aam
dec
lods
imul
icebp
xor
add
and
addb
inc
fs
dec
push
push
sub
pop
shlb
dec
or
xchg
pop
or
test
loop
push
in
gs
loopne
jb
add
movsb
cli
mov
ret
push
repz
repz
aas
into
sbb
jbe
cmpsb
inc
int
pop
mov
mov
fists
out
rolb
push
inc
lds
fildl
out
jl
dec
inc
ljmp
ret
movsl
ret
xor
dec
lahf
and
xor
cmpsb
rorl
inc
inc
jo
ljmp
mov
enter
pusha
jmp
jo
or
xor
or
and
cmp
jle
subl
cmpl
jecxz
shlb
xchg
loope
xchg
int
jnp
test
push
xchg
or
cmp
hlt
decb
cmp
cmp
kmovb
shll
pop
in
jmp
divb
cwtl
sbb
adc
mov
push
cmp
cmp
mov
add
into
mov
jmp
call
pop
enter
and
push
sbb
inc
mov
loopne
jne
mov
add
movsl
inc
sbb
scas
xchg
shll
aam
fidivs
sbb
nop
faddl
out
loop,pn
insl
mov
or
mov
inc
jmp
add
or
dec
sbb
jg
orl
xor
mov
std
mov
jno
mov
mov
jne
loope
arpl
push
outsb
and
inc
jae
lret
push
add
test
push
cmp
mov
jbe
mov
lds
stos
mov
data16
ret
negl
rcl
cwtl
outsl
add
fs
add
movb
adc
repz
xbegin
and
cld
in
sub
push
jmp
jp
dec
fcoml
clc
leave
cmp
test
mov
dec
cmp
int
aas
addr16
sti
mov
lods
orl
jbe
mov
mov
jns
push
adc
push
popf
or
sarl
mov
cli
negl
pop
fs
or
test
out
add
test
cs
icebp
mov
les
pushf
rcrl
mov
and
adc
mov
mov
mov
sub
pushf
dec
cltd
in
sbb
xchg
pop
icebp
mov
fistps
movsl
insl
mov
sub
aas
cmpsb
aad
and
fimull
jns
mov
jecxz
and
roll
lret
push
push
scas
or
out
and
outsl
inc
scas
ret
mov
jle
push
mov
mov
pop
xlat
imul
fcomps
lock
sub
mull
jg
and
push
push
loop
sub
inc
clc
aas
pop
out
jmp
xchg
mov
or
sbbl
imul
enter
fcompl
mov
ror
rcrl
dec
jns
or
mov
cltd
clc
call
dec
jae
mov
and
or
mov
mov
xchg
les
mov
jae
push
rorb
pop
sub
aam
jmp
insb
push
add
mov
add
les
ljmp
gs
jns
add
insl
push
mov
add
decl
sub
jl
push
lret
cmp
adc
mov
adc
loopne
ljmp
pop
cmp
lods
ljmp
rcrl
dec
adc
into
lcall
dec
mov
push
out
push
mov
pop
xchg
inc
and
lock
xchg
dec
sub
js
loopne
pushf
mov
jae
push
xor
mov
sbb
out
xchg
add
inc
add
sbbl
mov
ljmp
mov
add
and
fdivrl
fxch
xor
mov
std
inc
jae
repnz
faddp
sbb
or
jne
movsl
jbe
add
icebp
xor
enter
adc
jg
movsl
push
decb
mov
mov
aas
rorb
mov
mov
pushf
jmp
sarl
std
or
fcomip
ljmp
out
cli
stos
std
addr16
lock
data16
inc
sub
in
add
les
idivl
ss
xor
xchg
ljmp
sub
pop
adc
out
xlat
lea
push
or
insb
cs
fwait
jle
push
pusha
lahf
push
jmp
xchg
fisubrs
adc
pop
imul
les
pop
rol
dec
mov
scas
es
pop
lcall
dec
and
inc
stc
cmpsl
mov
push
and
sub
xor
jle
push
mov
and
in
add
leave
xor
inc
jne
lret
imul
and
adc
mov
jns
mov
cwtl
dec
stc
sub
adc
xor
setg
bound
and
cs
jbe
jns
clc
or
lods
mov
push
mov
ror
inc
addb
pop
dec
xor
mov
fwait
dec
mov
cli
outsb
icebp
mov
xor
inc
mov
jb
adc
mov
outsl
xor
xor
jge
cli
aas
add
insb
lret
sbb
cmp
xor
notl
rorb
dec
orl
inc
jno
adc
xor
mov
nop
or
jnp
je
lahf
jns
ret
leave
xor
pop
dec
jae
pop
push
sahf
ss
into
scas
in
jle
inc
mov
adc
xor
ficomps
mov
lcall
mov
call
or
idivl
pop
mov
ja
jns
cmp
in
in
icebp
fs
bound
cmp
das
push
mov
and
popf
or
dec
and
jb
fwait
sbb
or
test
daa
mov
sbb
pop
cmp
inc
xchg
fucom
xchg
cwtl
cmpsb
mov
cmp
mov
bound
in
out
push
and
add
add
xchg
fs
pop
sbb
adcb
test
mov
cmc
and
lods
xchg
and
in
imul
pop
jecxz
mov
sub
out
mov
ret
inc
mov
aam
jmp
and
in
jge
and
cwtl
sub
xchg
std
sbb
xchg
adc
cli
jecxz
xor
inc
jg
push
push
sub
ljmp
lea
dec
sbb
notb
test
and
gs
dec
dec
or
adc
cltd
push
insl
inc
cmp
shlb
add
andl
test
jmp
iret
pusha
enter
fidivs
push
imul
outsb
pop
iret
mov
rcr
mov
xor
xchg
cmp
rclb
pop
rcrb
sti
outsl
scas
rclb
repz
fwait
shll
orl
jb
pop
cmp
inc
cmp
orl
shrb
mov
imul
lock
and
inc
pop
xchg
jbe
sti
cmpsb
dec
inc
add
mov
int
popa
add
sub
jns
imul
cmp
xchg
push
iret
scas
hlt
pop
jb
cli
mov
sbb
cmc
jle
dec
push
lds
sbb
adc
mov
clc
imul
cs
dec
jle
mov
or
sbbl
xor
sbb
cmp
lcall
lock
ret
xor
enter
jmp
sub
fsts
pop
mov
xor
pop
addr16
ljmp
ficompl
cmpsb
stos
push
sub
pusha
cmpsb
aam
push
in
mov
ret
lods
xor
jmp
mov
lret
dec
fsubl
movl
or
scas
arpl
sub
movsb
loop
lahf
enter
inc
mov
mov
inc
dec
sbb
mov
bsr
popf
test
xchg
and
int
test
mov
mov
iret
pop
das
mov
push
pop
pushf
lret
les
sub
pop
adc
or
ja
scas
jae
call
jge
mov
sbb
movsb
pop
shll
data16
push
add
mov
in
pop
fst
hlt
mov
xor
and
ss
xchg
add
mov
fcoms
xchg
add
movsb
les
pop
imul
scas
jge
push
pop
push
lock
dec
lcall
mov
cmp
xchg
and
out
pop
clc
inc
xchg
fnstsw
pop
popf
test
daa
cltd
out
xor
imul
push
jb
dec
stos
ficompl
ret
jl
push
mov
pop
js
sub
jae
or
and
bound
xlat
push
test
xor
fistpll
adc
mov
imul
mov
daa
aad
xor
daa
mov
adc
and
mov
pop
inc
dec
rclb
push
fcom
sahf
mov
add
or
lret
in
xor
mov
out
mov
mov
xchg
lods
cmp
mov
fistl
scas
ret
int3
fsubs
lret
addl
xchg
mov
das
mov
sbb
inc
xchg
dec
lock
xor
pop
aaa
pusha
mov
xchg
xchg
lcall
sbb
mull
sbb
fcoms
mov
adc
in
clc
adc
xchg
inc
push
arpl
incl
int3
stos
jno
mov
loope
and
sbb
jecxz
ds
inc
pop
mov
or
testl
inc
pop
fsubrs
lcall
adc
div
movsl
push
hlt
cmp
loop
or
lcall
dec
hlt
nop
mov
inc
imul
into
mov
cmpb
and
sbb
lea
outsb
andl
test
mov
inc
push
jno
pop
andl
cmc
shrb
inc
hlt
pop
out
dec
and
push
xchg
pop
cmpsl
xor
mov
imul
clc
popf
push
jmp
mov
cmp
imul
addr16
lcall
and
in
and
loopnew
push
leave
test
add
pop
push
xchg
sbb
stos
scas
dec
cmp
out
cld
lahf
inc
lret
mov
dec
push
testb
cmp
xchg
lahf
xor
loop
inc
xor
mov
std
push
loope
mov
cmpsl
mov
out
and
push
and
sub
out
push
shll
cmp
jecxz
es
jle
mov
icebp
add
ud1
inc
jl
jg
xchg
std
cli
sub
and
nop
into
testb
inc
jo
ret
ds
sbb
fldl
xlat
jp
inc
andb
shr
call
mov
push
jns
fisubrl
pop
inc
xor
mov
mov
cltd
jns
imul
jl
dec
push
cltd
lcall
sub
adc
gs
outsl
lret
push
inc
xchg
or
pop
push
call
cmpsl
mov
mov
loopne
jl
outsl
ret
jae,pt
dec
imul
add
sub
js
cmpsl
cmc
imul
mov
out
mov
popf
std
cwtl
iret
mov
mov
add
cmpsb
cltd
lret
ret
loope
movsl
jo
cmp
and
push
xor
mov
mov
sub
fsubl
pop
shll
pop
movsl
test
cmp
fcmovu
pusha
or
jbe
pop
jle
arpl
mov
movl
stc
shr
dec
cld
into
mov
pop
rcrl
insl
in
add
xorps
pop
cli
dec
aas
mov
and
push
hlt
inc
out
nop
mov
push
xor
mov
add
pusha
inc
lock
sub
fwait
das
lock
outsb
mov
inc
mov
shll
mov
pop
fadds
push
dec
in
call
xor
xor
dec
shrl
mov
jp
ret
adc
jb
nop
sub
mov
jbe
and
cmpsb
mov
sbb
and
xchg
xchg
aam
mov
popa
or
pop
and
int
mov
clc
mov
push
cwtl
xlat
pushf
inc
mov
sahf
out
adc
mov
jg
jg
lcall
sub
jnp
lods
mov
out
sbb
cltd
fld
pop
ss
push
sarb
pop
pop
mov
and
mov
inc
mov
jno
cmp
out
subl
ret
xor
push
pop
cmp
lea
add
push
mov
mov
out
int
fwait
sbb
pop
cmp
js
pop
xor
hlt
xor
addr16
or
arpl
lock
inc
mov
inc
int3
shrb
inc
cmp
sbb
pop
sahf
aam
sub
and
aaa
jmp
push
scas
mov
mov
jae
push
push
fadd
lea
popf
inc
rcr
inc
push
scas
mov
sbb
lahf
sbbb
dec
jne
repnz
pop
xchg
sub
fxtract
cmp
xchg
push
and
inc
jl
jae
lods
adc
jmp
or
xchg
clc
test
cmp
dec
cmp
inc
loopne
sbb
in
out
cmc
jle
adc
mov
mov
xchg
arpl
scas
push
scas
in
or
xor
jbe
cmp
test
jbe
mov
or
push
push
pop
nop
js
add
outsb
cwtl
mov
dec
cmp
xchg
push
or
adc
adcb
addr16
mov
cmp
add
in
clc
pop
add
sbb
mov
cli
inc
in
sub
or
sub
xor
push
mov
push
jne
mov
scas
rcll
inc
cmp
test
je
pop
adc
push
jbe
xlat
jne
and
cmp
test
addr16
mov
movsl
fs
sti
lahf
sub
mov
mov
ficoml
lea
fadd
adc
cmp
and
ljmp
pushf
xor
xor
push
popf
xchg
xchg
repz
lea
push
jne
sub
in
dec
orb
or
pop
into
call
lahf
push
mov
loop
jne
cs
dec
inc
jge
add
je
das
movaps
mov
adc
pop
into
pop
and
sub
fcmovu
loopne
jg
pop
cmpsl
mov
push
pushf
lret
scas
dec
in
xchg
push
in
clc
push
pop
aaa
mov
js
dec
xor
inc
jae
dec
ja
jns
dec
cmpxchg
scas
lahf
sub
stos
adc
int3
pusha
xor
int3
xchg
outsb
int
jl
pop
xchg
stos
mov
rcr
dec
add
and
lods
or
int3
gs
sbb
popf
adc
lods
mov
fld
es
adc
xchg
pop
jno
adc
addr16
mov
sub
dec
rorb
lahf
fmull
imul
mov
push
fisubrl
pop
rorb
insb
not
cmc
andb
jmp
test
ret
xor
sbb
fldt
mov
test
sbb
std
fnsave
lods
shrl
addr16
inc
pop
push
jg
jnp
pop
mov
fbld
add
inc
xchg
adc
or
out
das
out
xor
sbb
movb
mov
cs
daa
fsub
idiv
cmp
lock
mov
clc
cld
add
jb
lods
aam
scas
cmp
mov
pop
cli
cli
jbe
add
test
adc
fs
pusha
xor
xor
addr16
mov
mov
in
mov
adc
jmp
or
cmp
push
sbb
xchg
or
jl
int
repz
call
cwtl
add
jg
inc
or
fsubrs
jle
jge
mov
and
arpl
shrb
insb
ljmp
jl
lcall
aam
cli
sub
sbb
clc
sub
nop
fsub
push
fs
cwtl
mov
ljmp
add
inc
xor
inc
or
and
dec
mov
mov
fiaddl
and
in
sbb
ret
mov
inc
hlt
pop
push
pushf
scas
xor
push
imul
stc
dec
inc
adc
add
mov
out
add
ret
clc
aaa
lock
sbb
dec
fsubs
repz
sub
outsb
cmpsl
pcmpeqd
leave
jns
incl
sar
adc
cwtl
mov
in
iret
pop
dec
dec
mov
mov
add
or
lds
pop
xchg
jmp
aam
mov
xlat
and
jo
rol
fs
pop
mov
pop
shlb
and
or
push
push
jno
mov
out
lods
and
roll
pusha
pop
or
xchg
dec
pop
dec
pushf
mov
mov
int3
mov
repnz
and
or
bound
mov
jbe
mov
sbb
xor
inc
rolb
mov
cmpsl
adc
sbb
mov
out
or
movsl
loope
jo
daa
sbb
pop
jae
daa
mov
cmp
xchg
mov
subl
pop
in
fdivrl
mov
inc
js
insl
push
aam
add
lods
fwait
and
sub
js
and
rcr
aam
shlb
xchg
add
lahf
mov
jmp
jl
rolb
int
or
sbb
add
inc
cmp
jns
push
jl
mov
movsb
andl
sub
les
rcll
or
sbb
test
test
fsubrs
add
lahf
mov
fstpt
out
stos
jnp
xor
pop
jb
mov
aas
add
sahf
push
aam
mov
loop
xlat
or
dec
mov
cs
or
push
movsb
dec
mov
xorb
fsubrl
mov
data16
lcall
sbb
mov
mov
stos
adc
add
jle
push
mov
adc
dec
jo
js
out
sub
mov
sub
mov
pop
ds
popa
cmp
pop
sbb
fidivl
lea
and
sub
cmp
and
cli
divb
mov
daa
mov
xchg
int
rolb
ret
mov
test
in
les
add
push
addb
rol
dec
mov
das
adc
scas
outsb
in
push
jle
sbb
xor
and
xlat
insb
hlt
inc
xor
idivb
outsb
pop
add
dec
loopne
pop
push
sub
pop
adc
mov
cmp
in
repz
mov
leave
pop
scas
lods
mov
addr16
adc
or
pop
dec
and
js
push
std
xchg
je
enter
cmp
xlat
repz
ljmp
in
ret
xchg
push
mov
push
mov
mov
mov
dec
orl
movsl
loop
mov
insl
xor
lahf
jae
sbb
sahf
mov
ret
mov
inc
movsl
in
xchg
je
ljmp
rorl
xchg
mov
and
cmp
add
sbb
push
ljmp
shl
cld
or
outsl
mov
jnp
push
push
cmp
xchg
jge
sbb
fstp
stc
pop
mov
sti
in
mov
and
aad
andb
jl
dec
insl
fstpt
jmp
adc
out
adc
adc
dec
sub
jne
int3
mov
sbb
mov
jecxz
loope
xchg
stc
sbb
jb
test
idivb
push
jecxz
shlb
dec
pop
dec
xchg
adc
lea
or
or
or
shl
mov
cmp
ret
add
mov
mov
sub
mov
xchg
cltd
scas
push
push
insl
ja
arpl
mov
popa
das
xchg
scas
addr16
mov
push
bound
cmp
jnp
push
mov
add
mov
dec
and
cmc
fidivs
xchg
or
sbb
push
add
or
in
adc
faddp
movsb
jbe
in
inc
pop
cmp
cmpsl
mov
mov
arpl
mov
ds
data16
mov
jle
xchg
insl
movb
adc
push
loopne
lods
sbbl
xchg
ss
jle
jb
test
fistps
aaa
dec
pop
mov
mov
outsl
push
jo
add
jns
mov
mov
and
test
mov
adc
push
loopne
push
mov
sbb
std
jnp
lahf
xlat
mov
and
mov
ja
mov
jo
outsl
pop
movsl
hlt
jae
push
roll
imul
cmc
pop
jg
sbb
iret
push
sahf
dec
movb
jno
add
mov
stos
cld
lods
adc
mov
mov
lret
imul
ds
jno
ja
cmpb
int
mov
pop
inc
sub
xchg
jmp
sub
mov
int3
mov
mov
inc
pop
iret
xchg
fldenv
inc
and
pop
sbb
bound
xchg
jbe
insl
sbb
add
sbb
js
stc
sub
adcl
mov
outsb
push
adc
imulb
mov
and
inc
mov
mov
and
test
repz
pop
adc
rolb
icebp
adc
ja
loopne
shll
add
iret
pop
inc
decb
dec
lds
jp
lret
cmp
cltd
and
movl
or
gs
push
insb
xor
or
pop
xor
call
cli
cmc
mov
inc
pop
clc
push
popf
shlb
cwtl
loopne
add
test
test
lret
sub
insl
add
cmp
xchg
pop
push
dec
mov
flds
mov
sub
xchg
das
mov
scas
pop
xchg
icebp
sbb
fisttpll
jns
int3
pushl
clc
ljmp
int3
lods
stos
mov
out
jmp
or
sti
les
inc
out
sbb
mov
mov
sub
mov
dec
or
sub
clc
and
lret
loop
xchg
stos
pop
jae
xchg
add
fsubrl
sub
fwait
cmpsl
rclb
xorl
add
out
sub
arpl
xchg
fwait
mov
pusha
sub
int3
out
and
jmp
movsb
or
fcoms
adc
mov
ja
dec
testb
inc
inc
and
adcl
xchg
jno
lods
xlat
mov
mov
into
pop
pop
or
in
stc
mov
lahf
xor
sub
rcll
jmp
clc
jle
and
adc
int
push
stc
stc
pop
xchg
aam
sub
pop
in
in
sbb
fprem1
xchg
bound
mov
cmp
sarl
push
xor
and
notb
repnz
mov
nop
cwtl
push
dec
or
test
mov
negl
add
lock
mov
imul
cmp
addr16
sbb
mov
ds
in
xorl
push
xor
mov
mov
dec
pop
js
push
aad
test
push
xchg
sub
or
push
cmp
sbb
cmp
sbb
mov
pushf
cwtl
and
clc
lds
mov
sub
xor
pop
jns
xchg
mov
nop
pop
js
mov
jg
or
jo
in
rorb
in
adc
or
mov
lods
cld
xchg
pusha
mov
lods
sbb
push
ja
adc
jmp
dec
jne
cmp
pop
in
sbb
pop
jp
rclb
iret
in
ja
lahf
notl
imul
lahf
push
test
xchg
push
cmc
in
je
cs
les
inc
out
or
push
scas
out
lods
adc
pop
enter
int
ret
clc
mov
xchg
clc
mov
sub
mov
jno
add
enter
and
xchg
mov
and
mov
mov
mov
adc
sub
dec
inc
mov
orl
aaa
inc
cmc
lods
fcoms
xor
xor
xor
add
sahf
xchg
inc
mov
pop
or
xchg
cld
lods
sbb
das
lods
lock
data16
sbb
movsb
push
fcmovne
and
fmuls
cmc
cmpsl
popf
bound
std
das
movsb
nop
pop
cmpb
dec
notl
stc
int3
dec
sahf
das
sub
cmp
push
mov
add
mov
xchg
repnz
push
and
movl
push
sbb
push
aam
xor
ja
popf
int
nop
in
pop
and
push
pop
xor
pop
or
mov
pop
or
xorl
rclb
or
test
jnp
xchg
xor
adc
mov
mov
or
in
pop
clc
cmpsl
call
test
sbb
sbb
adc
dec
enter
insl
pop
loope
lret
fs
inc
stos
cltd
mov
mov
aaa
jo
sub
mov
out
outsb
mov
fdiv
adc
inc
lret
xor
jl
rcll
mov
adc
popa
sbb
shrb
push
aaa
ds
or
add
gs
and
xchg
pop
push
mul
push
pop
in
cmpsl
fwait
mov
inc
lods
pushf
ja
xchg
loopne
and
flds
inc
jns
xor
inc
ret
adc
sbb
fmul
pushf
or
add
cld
mov
jp
jle
cmp
cld
and
cmc
sahf
xchg
daa
push
arpl
xchg
inc
inc
lahf
push
dec
lahf
jecxz
or
sub
aas
popa
es
repnz
or
jmp
je
or
inc
xor
cli
inc
inc
mov
jmp
xchg
pop
mov
mov
push
push
loopne
repz
imull
add
add
addr16
loope
repz
testb
mov
sbb
cmp
xchg
sub
in
inc
fldl
out
popf
movd
fdivrl
cmc
fdivr
cli
or
fldl
and
mov
imul
mov
dec
cmp
sbb
mov
repnz
xchg
cmp
ljmp
iret
mov
or
repz
mov
loop
fs
lods
adc
subl
xchg
xchg
call
mov
inc
fmuls
add
and
xchg
dec
subb
shrl
push
pop
mov
inc
cltd
push
sbb
inc
mov
lods
icebp
hlt
inc
push
orl
test
or
pop
mov
jns
adc
add
xor
out
cmc
xchg
inc
mov
xchg
in
mov
bound
mov
inc
iret
jno
xchg
mov
and
add
cmpb
insb
popa
in
fwait
sahf
leave
lret
out
xchg
mov
pop
mov
xchg
loop
imull
push
in
je
mov
fwait
dec
rorb
hlt
aas
sbb
adc
or
mov
dec
xchg
js
xor
insb
jmp
push
xor
inc
scas
sbb
popa
shlb
call
cmp
pop
xchg
sub
jne
lods
add
das
cmp
mov
sub
adc
push
cwtl
dec
pusha
cmc
mov
sub
xchg
xchg
insl
je
pop
mov
add
ret
repnz
inc
push
fs
movsl
pop
ljmp
cmp
in
ljmp
xorb
test
dec
cltd
jl
stos
mov
stos
nop
xor
aas
mov
jo
xchg
cs
repnz
xchg
and
sbb
jno
jg
inc
movsb
insl
pop
or
test
sti
insb
inc
out
int3
into
and
movsl
pushf
cmp
mov
shrb
lock
rcrb
std
aas
into
dec
cli
jo
movntq
lret
lods
pop
loope
mov
inc
inc
movsl
push
pop
jmp
cltd
ret
shll
test
mov
mov
mov
iret
inc
xchg
mov
faddl
lahf
dec
incb
test
dec
sti
outsl
mov
stc
test
push
xlat
fistpl
sbb
clc
jbe
pushf
lock
jl
cmp
cmp
repz
add
push
xor
add
jno
test
fildl
in
push
xchg
nop
or
fbstp
mov
mov
imul
std
call
push
inc
jmp
push
leave
sti
or
sbb
ss
push
enter
adc
inc
out
jb
pusha
sub
mov
cli
jae
jne
dec
add
and
iret
nop
sbb
cmp
cmpsb
sbb
push
and
dec
and
in
and
leave
xchg
mov
sub
bound
dec
dec
inc
fdivrs
mov
out
lcall
das
popf
repz
cmp
cli
popa
lea
and
lea
pop
cmpsl
mov
icebp
adc
cli
cmp
adc
sbb
lahf
inc
std
adc
aas
imul
dec
lock
scas
mov
ret
aaa
dec
and
dec
loope
lret
test
cs
test
mov
dec
loopne
ss
xor
jge
and
data16
imul
sbb
pop
cmp
pop
and
aaa
mov
decb
lds
sub
jb
in
js
adc
pop
mov
cmp
jmp
sbb
subl
and
cs
add
jns
jg
add
lcall
mov
stos
ret
mov
xchg
aas
ret
dec
xchg
mov
arpl
xchg
adc
ficomps
or
push
push
cmp
iret
sahf
orl
mov
jmp
psllq
add
mov
mov
push
js
jnp
push
jmp
lret
xchg
push
roll
jmp
or
jp
push
and
scas
and
push
and
inc
lahf
jno
pop
test
xchg
shrb
push
sbb
lock
jmp
stc
stos
mov
fsubrs
mov
hlt
cmp
sub
cmp
popf
shl
push
xchg
fildll
dec
xchg
arpl
sbb
xchg
adc
and
addl
das
es
mov
out
roll
ja
sbb
dec
aam
aas
icebp
xchg
mov
stos
adc
xor
stc
shrb
aas
stos
mov
xor
into
xchg
clc
pop
lret
and
dec
sub
mov
ljmp
pop
xchg
push
inc
shl
dec
adc
mov
mov
stos
test
mov
add
push
mov
push
fistps
out
imul
and
cmpsl
lods
xor
pop
ret
jnp
mov
jge
mov
cmp
adc
mov
mov
dec
sti
jae
and
or
jmp
mov
test
lcall
scas
mov
inc
in
aam
mov
lahf
fldcw
stos
scas
mov
or
fmuls
jecxz
or
push
in
dec
push
cmp
cltd
push
in
ljmp
das
mov
inc
xchg
push
add
sbb
jno,pt
cmp
jns
lods
xchg
es
xor
push
stos
jl
out
repz
int
aas
aas
push
mov
rcrl
pop
xchg
cmp
and
cmpsb
mov
sub
scas
add
cmp
out
sarl
mov
cs
repz
fs
xchg
dec
inc
sbb
std
imul
sarl
arpl
inc
cmpsl
loopne
stos
and
push
scas
jne
mov
push
xor
sbb
adc
ret
mov
or
dec
insb
mov
out
sub
sub
mov
sub
movsb
pushf
jmp
sub
ds
clc
jnp
lahf
jnp
shl
push
shl
dec
mov
int3
shlb
sahf
or
adc
xchg
adc
sarb
adc
inc
jge
in
imul
out
mov
push
scas
pop
ret
js
mov
pop
cwtl
push
cmp
hlt
pop
insb
or
xchg
push
in
in
mov
ja
outsl
pop
cs
cmpsl
lahf
fwait
sub
mov
mov
adc
sbb
in
in
cltd
daa
ja
fisubrs
and
fisubrl
adc
ljmp
mov
mov
xchg
mov
loope
movsb
jle
enter
je
ret
mov
sti
fsubs
lock
or
jle
mov
mov
inc
mov
pushl
clc
out
enter
in
dec
sub
insl
push
pop
xchg
jmp
xchg
xchg
lods
mov
int
pop
out
adc
rorb
xchg
pusha
je
sbb
fists
hlt
lock
data16
int3
ljmp
dec
and
inc
lds
pop
test
gs
mov
stos
and
xchg
or
shlb
in
lea
fsubs
das
xor
ret
lds
mov
lcall
clc
xchg
scas
mov
fistl
mov
movsl
cmp
inc
aad
cltd
jle
add
lds
jns
add
and
pop
xchg
mov
sub
mov
dec
xor
shlb
xchg
lods
jmp
lret
pop
mov
es
jbe
jae
movsl
rcrb
adc
mov
push
lea
lcall
jno
in
xchg
cmpsl
xor
jl
push
call
xchg
pop
ds
mov
std
inc
xor
clc
sbb
in
hlt
bound
xchg
lahf
sbb
mov
adc
enter
das
inc
js
fwait
mov
fdivl
mov
cmpsb
stc
push
inc
sti
pop
inc
push
jp
push
cmc
notl
adc
lods
add
icebp
aad
in
inc
sti
sub
lds
jg
fsts
add
mov
fiadds
inc
mov
cmp
pop
psubb
scas
in
fwait
imul
inc
xor
lock
dec
dec
push
and
fimull
rcr
cld
cmp
pop
mov
jae
sbb
int3
push
dec
setns
mov
leave
or
xchg
xchg
and
es
inc
push
add
shll
out
xchg
mov
jnp
lahf
mov
pop
push
xchg
pop
lock
dec
bound
cmp
loope
rorb
xchg
sbb
pop
pusha
inc
daa
push
fcoms
aas
mov
bnd
out
movsb
xorl
add
jns
int
mov
fstl
subb
dec
push
sbb
rolb
xchg
and
outsb
out
fdivs
jne
lahf
xor
in
push
or
int3
cmp
cltd
shll
jae
or
pusha
cmp
imulb
dec
inc
rolb
ret
icebp
sub
scas
es
loopne
int
ret
sahf
jno
push
sbb
ljmp
mov
sub
ja
and
popf
push
fstl
decl
dec
push
adc
shr
xor
adc
out
mov
xor
mov
insb
cmp
cs
aam
xchg
nop
jnp
cltd
repnz
or
mov
das
lea
xor
fsubrp
addb
or
sti
mov
mov
or
dec
dec
sub
adc
pop
push
dec
nop
imul
adc
insb
mov
popf
mov
cmp
sub
loop
cli
int
push
cmp
cmpsb
out
int
fcomp
mov
push
mov
mov
and
icebp
enter
mov
add
mov
lds
cmp
lock
cmp
imul
mov
pop
pop
xchg
in
push
fcmovnbe
push
mov
sub
and
xchg
repz
cmp
jae
pop
out
insb
loop
adc
pop
xchg
les
mov
out
inc
sbb
and
push
push
fs
mov
sbb
or
xor
xor
add
push
mov
jg
cmc
add
into
sarb
lret
mulb
test
movl
jle
cld
iret
jg
cmc
adc
clc
out
inc
cmp
mov
fidivs
or
in
scas
mov
pusha
int3
inc
loope
push
push
fpatan
mov
cmp
sbb
add
addr16
je
int3
in
cmp
xor
sub
loop
mov
into
sub
popf
jo
jp
cmc
loope
loopne
cmpsl
je
add
xor
leave
stos
xor
pushf
clc
dec
xchg
mov
pushf
or
shlb
test
mov
and
mov
imul
int
lahf
xchg
mov
mov
test
push
xchg
xchg
iret
mov
inc
imul
push
cs
mov
scas
inc
ret
inc
jl
fwait
sahf
mov
or
xor
xchg
push
jp
faddp
lods
jo
in
scas
sbb
inc
dec
mov
xor
inc
sbb
or
push
jge
and
insl
cmp
and
push
and
xor
cmc
lea
mov
mov
pusha
mov
dec
insl
das
loop
popf
adc
xchg
out
pusha
pop
add
pop
aad
fisubs
mov
jmp
xchg
cmp
fwait
jmp
jo
bound
jle
pop
and
decb
xchg
sbb
rorl
data16
or
lods
mov
inc
mov
popa
out
pop
js
aam
outsl
mov
stc
test
hlt
sbbl
imul
pop
pop
lahf
cmpsl
mov
pop
add
cmc
andb
push
xor
out
push
adc
dec
xchg
sti
push
test
jae,pn
popf
outsb
pop
in
or
lods
jns
sub
inc
fistps
shlb
ror
mov
or
or
jg
je
mov
fwait
rcr
adc
inc
xchg
imul
scas
movsl
mov
xchg
jae
inc
lcall
mov
call
push
enter
flds
outsb
lea
mov
call
jp
pop
lods
pusha
push
pushf
ds
inc
es
popf
mov
sbb
jl
mov
call
push
hlt
push
pop
stc
es
add
ja
sub
push
xor
jge
pop
add
scas
inc
push
mov
stos
outsl
inc
inc
sahf
xor
cs
mov
add
sub
mov
imul
outsl
lods
jmp
mov
iret
sbb
incl
icebp
aaa
fbld
das
loopne
cld
push
ret
shrb
ljmp
int
mov
cmpsl
jbe
push
jns
test
or
ror
flds
add
mov
mov
jl
add
mov
jmp
push
sar
scas
cli
jle
and
cs
lods
out
pop
cmp
cmp
inc
xchg
xor
sbb
sub
les
jp
jl
push
pusha
fadds
scas
push
sti
test
pop
repz
pop
pop
cmp
pop
push
ret
pop
lds
mov
or
or
adc
stc
rcll
aaa
rcll
adc
or
jne
leave
ljmp
pushf
push
cmp
lahf
cmp
or
aas
and
mov
jle
cmpsl
les
xchg
mov
jl
sbb
outsb
outsb
pop
push
jo
xchg
mov
mov
and
add
and
sub
dec
or
mov
cmp
ja
repnz
outsb
or
idivb
jae
mov
push
push
out
lahf
test
rolb
leave
add
popa
test
clc
dec
fwait
arpl
cmpsb
sbb
ret
daa
cmpsl
cmp
je
orl
jp
addl
pop
inc
dec
push
push
inc
push
insb
into
or
dec
or
mov
push
mov
jns
in
sub
std
test
mov
xchg
xor
pusha
jmp
jge
insb
mov
out
ja
pop
and
jge
gs
out
add
xchg
push
mov
xchg
and
adc
cmpsl
cmp
sub
fistpll
mov
add
cmp
mov
leave
testb
or
out
xor
idivl
lea
ficomps
cmp
cmpsl
add
fdiv
or
movl
or
xchg
pop
out
aas
pop
int
xor
add
rol
popa
aaa
out
lock
adc
ret
call
imul
clc
fcoml
push
movsl
mov
add
repnz
mov
addb
cmp
inc
je
jbe
test
leave
int3
stc
xchg
cs
cwtl
loope
push
xor
aas
ret
outsl
mov
cmp
mov
sub
add
ret
mov
xchg
inc
cld
iret
push
movsl
imul
jge
push
aaa
dec
dec
lods
pop
into
lock
or
pop
jbe
ret
outsb
xlat
pusha
imul
jmp
and
jo
test
loopne
xlat
dec
push
cld
dec
rol
ret
mov
fcmovne
cli
mov
pop
lds
fildl
jl
mov
xchg
xor
dec
cmp
xchg
xor
sbb
insb
push
mov
and
xchg
outsl
or
mulb
push
loop
push
aad
sub
insb
out
sahf
jle
fildll
mov
jmp
insb
fwait
mov
cwtl
inc
xor
cmc
xchg
pop
xchg
add
mov
push
and
xchg
pushf
dec
in
xor
jecxz
add
adc
lahf
jne
jmp
push
cmp
mov
and
lahf
pop
push
mov
ds
test
rorb
jle
xchg
popa
jle
inc
loopne
lods
pusha
xchg
mov
sar
and
subl
add
xor
cli
inc
fimull
cltd
jne
pop
xlat
test
pop
cmp
or
lds
int
outsl
fildl
ffree
loope
aad
lret
push
cmp
outsb
fsubrs
leave
and
ljmp
lfs
xor
cmp
dec
pop
add
push
flds
ds
dec
and
xchg
inc
rorl
sbb
jb
lahf
cmp
pand
sub
add
xchg
gs
xchg
dec
in
mov
pop
sub
testb
pop
pop
je
mov
pop
insb
inc
add
dec
repz
mov
xor
int
lds
es
push
lock
lret
xor
cs
scas
pcmpeqw
mov
or
xlat
xchg
xor
jne
cld
pop
jmp
test
cld
mov
pushf
popf
cli
repz
push
push
dec
int3
sub
mov
movsb
std
add
mov
ds
adc
hlt
push
cmpsb
bnd
sarb
popf
pop
scas
iret
xchg
fsub
nop
mov
dec
pop
loope
clc
enter
xchg
add
lea
jmp
mov
cmp
loope
and
mov
stos
or
fidivs
push
xchg
roll
sbb
inc
and
in
xor
push
icebp
les
iret
xorl
ljmp
sub
add
xchg
cmpsb
sbb
mov
clc
iret
mov
xchg
shr
rcrl
in
and
pusha
gs
mov
jmp
mov
outsb
pop
push
cmpsb
mov
jmp
cltd
add
stc
xchg
nop
insl
or
inc
mov
clc
dec
mov
cmpsl
and
test
jnp
and
push
fsts
int3
add
shl
push
push
add
xchg
scas
jge
hlt
and
sbb
xor
xchg
and
lret
add
shlb
sbb
out
inc
push
adc
cmpsb
inc
cmp
or
aas
jns
int3
ficomps
insb
cmp
push
and
pushf
in
out
lcall
addb
mov
fwait
inc
pop
ret
mov
loopne
in
xchg
push
addr16
gs
mov
gs
lret
inc
sub
lret
mov
cmp
lcall
push
or
sbb
arpl
aad
jl
cmpsl
push
cmp
pop
jae
fstps
rcl
cmp
add
pop
fucomp
js
sbb
sbb
ljmp
rclb
dec
adc
jae
dec
push
clc
sub
rolb
dec
push
add
jnp
sahf
imul
outsb
jne
xchg
ret
cmpsl
cmpsb
pushf
repz
mov
sub
inc
jb
sbb
mov
jne
mov
fidivrs
das
outsl
and
adc
add
dec
dec
mov
mov
cltd
fwait
xor
movsb
jb
ljmp
mov
or
add
popf
sbb
incl
sub
mov
decb
mov
insl
or
fidivl
sub
dec
xchg
inc
out
out
cmp
mov
fwait
mov
push
push
out
jne
icebp
dec
rol
xchg
xor
mov
idivb
lea
adc
mov
adc
inc
mov
xchg
sub
sub
popf
pop
sub
fldenv
cltd
loopne
jne
dec
nop
sti
adc
or
and
pusha
pop
loop
jmp
mov
jmp
mov
cmc
incb
push
fwait
sbb
outsb
shrb
inc
loop
pop
mov
and
clc
push
pop
out
shlb
int3
jecxz
push
lret
or
add
jge
xor
stos
shr
sbb
pop
ss
mov
popf
push
add
ss
sub
xor
mov
dec
push
cltd
test
les
insl
das
cmp
add
sub
loope
decb
fsubrp
cs
mov
out
insb
adcl
add
dec
push
jb
cmc
mov
push
incl
xor
imul
sbb
fisttpll
add
addl
and
xor
clc
sub
pop
and
mov
gs
je
and
repz
xor
mov
popf
xor
xchg
sbb
gs
or
adcb
or
dec
xchg
xor
cmp
movsb
out
iret
dec
imul
lds
mov
cmp
clc
xlat
pop
inc
or
pcmpeqd
imul
cmpsb
repz
fstl
loopne
adc
xchg
stos
ret
adc
lds
iret
shlb
jg
sub
ror
cli
inc
xor
pop
add
mov
jle
pop
leave
fisubl
inc
add
push
ljmp
imul
inc
in
movsl
scas
fsubrp
ret
scas
lret
cs
ljmp
inc
sub
or
inc
cmpsl
pop
sub
sub
cmpsl
sarb
sarb
ss
notl
jmp
fcomps
test
enter
aaa
cmp
adc
mov
dec
xor
mov
sub
pop
rolb
cld
mov
xlat
mov
adc
int3
out
ss
pushf
lret
mov
insl
loopne
mov
fisubrl
dec
ret
pushfw
mov
xlat
scas
dec
fisubs
ficomps
jg
dec
testb
dec
mov
stos
stos
lea
xlat
lea
cmp
xchg
pop
mov
pop
int
jg
scas
lds
dec
cmp
inc
insb
lahf
repnz
mov
pop
or
sbb
lods
or
jbe
and
push
test
in
lret
add
bsf
inc
pop
sub
and
jmp
mov
add
negb
into
ljmp
lods
mov
in
cmp
sbb
push
adc
xchg
and
cld
mull
dec
adc
in
or
sub
dec
pop
add
jg
repz
aaa
icebp
scas
jle
jl
sbb
mov
scas
popf
jg
pop
pop
mov
mov
adc
push
shll
adc
enter
leave
rol
push
in
test
mov
and
sub
lahf
fwait
jp
cmp
fsubs
mov
xor
and
dec
cmpsb
pop
je
lds
push
push
dec
cmpsl
cli
adc
pop
xor
lds
rep
iret
mov
pop
imul
sbb
fstps
iret
faddl
xchg
push
inc
mov
cwtl
notl
push
xchg
jno
push
lods
cld
es
adc
sbb
mov
mov
fisttps
xchg
jle
mov
mov
pop
jg
pop
in
test
mov
or
mov
dec
ds
lcall
or
jle
lret
insb
frstor
fisubrs
lcall
cmc
test
in
xor
mov
xor
jg
xor
jns
mov
inc
test
mov
or
mov
mov
ja
sahf
xchg
pop
xchg
adc
repnz
int3
repnz
add
adc
inc
sbb
gs
xor
sbb
cs
mov
pushf
jl
iret
cmp
sub
jae
mov
or
lcall
lret
push
push
mov
icebp
jecxz
pop
add
push
mov
js
and
cmpl
push
sub
xchg
js
push
push
or
and
fiaddl
repnz
js
sub
cmc
out
clc
push
lods
push
rorl
jge
out
cwtl
jo
cmp
imul
enter
in
rcll
sbb
pusha
stc
push
mov
outsl
or
jo
and
insb
add
mulb
sbb
sbb
jbe
push
icebp
sub
xchg
jle
sub
xchg
rcrb
mov
pop
mov
pop
pop
notl
xchg
xchg
xchg
out
mov
jg
loopne
aam
es
adc
mov
aad
repz
inc
lcall
mov
data16
insb
fxch
jp
in
dec
scas
jo
daa
test
es
add
popf
or
sub
push
fistps
repnz
leave
mov
inc
mov
daa
mov
sub
dec
repz
icebp
jo
cmpb
ds
stc
test
adc
xor
or
mov
rorl
xchg
out
pop
loopne
aas
jno
jmp
ljmp
cmc
sub
sarl
mov
xlat
enter
mov
hlt
pop
clc
sbb
xor
push
inc
fwait
jp
int
out
xor
pop
outsb
push
in
loope
jne
aaa
jle
faddl
mov
iret
pushf
das
push
xchg
pop
icebp
cmp
adc
inc
in
sbb
lea
js
mov
mov
jle
sbb
cmp
pushf
dec
push
inc
lcall
jg
jle
addl
fs
mov
jb
adc
inc
adc
adc
cmp
data16
pop
outsl
aaa
lds
test
ret
cmp
into
mov
dec
pushf
dec
cwtl
mov
rol
aam
adc
popf
sbb
mov
sbb
nop
adc
imul
sbb
xor
bound
pop
sbb
xchg
pop
mov
cmc
orl
xchg
push
cmp
sbb
adc
sbb
push
mov
rolb
mov
cmp
mov
dec
push
push
sbb
mov
movsb
sub
mov
inc
cmp
jl
ficoml
mov
int
push
push
xchg
outsl
cmp
cltd
jnp
and
sbb
cmp
mov
test
add
sub
fildl
je
sbb
sti
cmp
sarb
arpl
cltd
and
fidivs
push
mov
or
jg
movsb
sub
scas
test
movsb
icebp
cltd
scas
movsb
mov
pop
popf
add
out
insb
js
repnz
jmp
pop
and
mov
pop
out
addb
cmp
bnd
add
out
and
sub
cld
ret
incl
cmc
jb
dec
in
or
mov
das
sarl
insb
fstpl
dec
outsl
xor
pop
cmc
add
sti
int3
dec
and
lock
adcl
lret
je
xchg
xchg
setl
test
loop
loope
lds
mov
cmc
xchg
popf
pushf
int3
push
repz
iret
mov
dec
std
push
sahf
dec
enter
ja
push
mov
dec
push
push
imul
pushf
dec
pop
hlt
sbb
call
repz
orl
arpl
xchg
out
xor
pop
aaa
jns
and
jmp
push
add
xchg
fsubl
sti
sub
xorl
outsb
or
mov
xor
jo
movsl
push
mov
fstps
and
aad
add
mov
dec
cmp
stos
nop
sbb
xor
xchg
jle
inc
adcl
add
scas
test
jl
cmpsb
inc
jge
inc
pop
push
mov
call
ljmp
je
mov
divb
inc
mov
icebp
dec
ret
dec
mov
imul
lock
fsts
pop
mov
and
aam
mov
popa
in
sub
pushf
fidivrl
addr16
aad
ss
pop
stos
add
movsb
mov
in
sub
test
xchg
and
pop
adc
xchg
dec
pop
pop
sub
inc
dec
cmp
mov
add
enter
aas
push
cmpsb
or
jp
xor
stos
inc
jbe
in
inc
in
jmp
or
out
das
sbb
int3
and
or
in
dec
hlt
pop
lods
jno
arpl
test
dec
mov
sub
shufps
das
test
xchg
lret
mov
lock
pop
or
test
and
addr16
dec
mov
fsub
fidivs
and
fildll
ja
mov
mov
mov
jl
jne
int
pusha
testb
mov
cmp
imul
pushf
daa
inc
inc
leave
pop
outsl
enter
jg
xlat
scas
push
push
push
lods
or
mov
in
enter
mov
or
shrb
lods
push
inc
dec
fimull
imul
mov
sahf
es
mov
jns
xlat
xor
idivb
pusha
pop
sahf
inc
aaa
sbb
test
insb
or
in
inc
cmp
sub
aas
mov
ret
cmp
mov
inc
test
xchg
rorb
out
cmp
sub
aaa
mov
and
in
pop
scas
loopne
inc
mov
push
push
fsubrl
adc
aas
es
mov
mov
xchg
jno
xorl
or
push
adc
sbb
das
mov
mov
add
jb
or
sbb
xor
mov
mov
in
mov
adc
inc
in
pop
repnz
pushf
and
dec
fs
jno
movsb
lock
test
mov
adc
scas
pop
into
orb
add
or
mov
scas
mov
lret
sbb
fcmovnb
leave
rolb
pop
bound
mov
adcl
movsb
push
cmpsb
xchg
enter
fstpt
lds
in
je
cwtl
cmp
xchg
mov
subb
pop
in
adc
bound
aam
sbb
sbb
xchg
mov
cmp
addr16
or
adc
sahf
test
lcall
jle
pop
mov
sarb
lods
push
out
cltd
loop
adc
pop
inc
mov
loop
mov
imul
and
shll
xchg
mov
rolb
out
das
xorb
cld
jecxz
data16
add
repnz
pop
push
cli
xchg
adc
clc
sub
fimull
mov
icebp
jae
push
popf
pop
lcall
pop
insb
xchg
sbb
dec
fstps
mov
ljmpw
sub
pop
push
mov
sub
add
xchg
fsub
xchg
das
or
je
lret
mov
pop
inc
jns
inc
daa
xor
sbb
push
ds
sbb
testl
fsubrl
cli
into
fldcw
mov
outsb
add
jg
repnz
jno
cs
push
popl
cmp
mov
in
sbb
fisubrs
cmpl
cmp
jge
fstpt
adc
xor
mov
push
das
xchg
pop
scas
and
arpl
cmp
xor
push
ljmp
addr16
jl
jmp
sbb
pop
or
adc
cwtl
mov
insl
test
je
dec
test
sub
push
cmp
add
pop
iret
xchg
jae
jmp
stos
lods
xchg
popf
mov
cwtl
std
cli
xchg
cmp
pop
jnp
hlt
test
mov
jp
jmp
lods
push
mov
pop
insb
xchg
jbe
mov
jbe
insb
cli
and
ljmp
mov
mov
pushf
mov
call
faddl
sbb
cld
popa
mov
int3
shlb
test
cltd
push
loope
or
add
daa
fmul
mov
xor
ret
pop
or
and
inc
or
outsl
adc
pop
insl
xchg
sbb
inc
xor
and
pop
sbb
sub
inc
insb
jle
aas
clc
jae
in
in
add
fmuls
hlt
repnz
cmpsl
aam
xchg
push
fsubrs
lea
adcl
pusha
inc
jge
mov
push
fidivs
push
enter
cmc
in
mov
pop
sbb
js
pop
and
cmp
mov
cmpsl
cmp
fwait
jmp
and
xchg
into
mov
cwtl
mov
add
std
jge
dec
leave
int
add
out
xchg
add
push
dec
hlt
cmc
lahf
push
pop
pop
rorb
mov
and
lock
stc
and
sub
je
pop
pop
out
in
inc
xchg
aas
sahf
icebp
or
outsb
or
sub
mov
xchg
jg
fs
dec
or
mov
test
jp
pop
call
out
ficomps
dec
push
pop
fstps
push
sub
cltd
aam
mov
inc
add
je
sar
pushf
imul
fisubrs
fcompl
mov
dec
lock
add
xor
arpl
gs
add
sbb
xor
inc
add
rcrb
xlat
fstps
cld
adc
add
in
mov
and
sbb
fildll
ljmp
pop
mov
mov
lds
or
insb
xchg
jno
scas
cli
js
jmp
or
dec
fwait
pop
sub
test
fwait
or
int3
movsb
mov
sahf
cmp
imul
pop
lahf
xchg
xor
mov
sub
into
sbb
mov
and
mov
js
add
insl
inc
sbb
mov
adc
pop
popf
inc
push
out
test
pop
repnz
jne
pop
xchg
aas
out
xchg
dec
daa
and
lret
lcall
lret
mov
inc
leave
enter
mov
xchg
mov
call
negb
sbb
adc
mov
xor
rcr
sbb
cwtl
es
sti
insb
lret
push
push
ja
les
or
imul
inc
cs
push
stos
mov
inc
jg
xchg
cmp
jp
hlt
dec
sub
scas
cmp
outsb
xchg
pop
lods
sahf
push
shll
cmpsb
shrl
xchg
xchg
dec
lahf
mov
mov
inc
iret
stos
xor
inc
or
enter
lea
aaa
push
add
sub
adc
jo
pop
and
pop
mov
xchg
rcll
aaa
adc
add
pushf
test
and
ljmp
dec
rolb
pop
jnp
adc
jge
arpl
mov
ds
mov
inc
cmpsl
jno
ja
sbb
daa
push
je
inc
xor
xchg
je
push
xor
mov
jmp
mov
adc
or
jae
add
pop
movsl
mulb
and
adc
cmc
mov
adc
add
push
outsl
lock
fmuls
sti
sbb
add
scas
dec
mov
xchg
xor
out
cmpsb
xor
lcall
cs
add
jno
jecxz
imul
gs
test
and
push
das
popa
pop
adc
xchg
sbb
bound
sbb
jp
or
sbb
cmc
pop
or
shlb
inc
in
inc
fucomip
in
adc
jle
mov
pop
cmp
mov
adc
or
push
inc
js
mov
nop
in
nop
sbb
sbb
dec
std
jg
push
in
jge
xor
sub
or
mov
outsb
or
jmp
cmp
adc
mov
sahf
andb
or
enter
mov
jg
adc
in
jg
aad
adc
stc
sahf
xorl
pop
sbb
or
pop
xchg
sub
fisttpll
cmp
push
jmp
mov
jno
mov
add
int3
sbb
std
inc
addr16
in
loope
jne
sbb
push
cmp
pop
mov
mov
fldenv
inc
adc
outsb
idivb
cltd
mov
es
lods
inc
bound
mov
imul
out
push
repnz
hlt
add
pop
mov
test
xor
adc
xchg
jno
adc
jae
and
lds
and
pop
push
fucom
inc
push
ljmp
popa
mov
xor
push
sub
insl
fninit
sbb
dec
fbstp
jb
fwait
aaa
cmp
xor
mov
pop
xchg
jmp
push
push
bound
inc
adc
scas
fcoml
daa
pop
jg
inc
aaa
cld
movsl
jne
lock
xor
sbb
clc
xlat
mov
es
int3
shll
mov
sub
dec
mov
rorb
scas
jle
mov
fwait
xor
cli
in
push
sarb
cmp
bound
cmp
test
ds
xchg
mov
lea
cmpsl
clc
jo
sbb
insl
sbb
or
insl
xor
xchg
daa
outsb
ljmp
imul
xchg
inc
push
xor
out
out
pop
mov
push
mov
mov
sub
mov
mov
mov
add
dec
sbb
ljmp
mov
adcb
outsl
lds
das
rorl
xchg
sub
jae
jne
xchg
ret
push
xchg
pop
imul
idivb
imul
sub
cld
lea
fisttpll
mov
jle
lea
pop
stc
test
pop
hlt
imul
inc
and
add
cwtl
repz
inc
adc
push
sbb
inc
test
shr
xchg
repnz
mov
rolb
cmp
jo
xor
push
in
insb
cmp
xchg
add
jns
push
pop
pop
lea
mov
lds
push
stos
adc
jle
mov
jae
rorb
add
xor
test
ss
arpl
inc
es
inc
dec
fmull
xor
mov
pusha
push
sahf
add
out
insl
addr16
fbld
add
xchg
stos
test
xlat
ja
sarb
xchg
sub
decb
pop
dec
imul
cmp
or
idivb
lret
rorl
out
out
inc
in
jnp
xchg
sub
adc
lcall
mov
pusha
sahf
xorb
imul
mov
notl
push
mov
nop
imul
inc
xchg
aas
in
std
popa
sbb
pop
ret
and
loopne
movsb
inc
mov
leave
into
sub
mov
jle
leave
sub
push
jmp
mov
insl
dec
push
jmp
jbe
cmpsb
pop
les
fcmovb
push
in
popa
xorl
fimull
xchg
pop
stos
loopne
dec
test
imul
je
fimull
jle
xchg
jge
push
mov
dec
scas
fwait
inc
mov
out
push
fmuls
add
and
mov
push
fdivs
mov
xchg
push
repnz
adc
ret
jo
inc
repnz
adc
xchg
xor
add
push
and
loop
adc
mov
jno
add
lock
ficompl
jmp
cmp
in
dec
adc
pop
inc
mov
pop
das
mov
mov
ret
inc
cmc
adc
jmp
xlat
push
mov
xchg
testb
sub
xor
mov
push
and
scas
sbb
aaa
sub
pop
aam
call
out
dec
sub
ljmp
adc
cmc
mov
or
outsb
clc
adc
cltd
inc
lcall
cmp
daa
adcb
push
aam
fsubrp
push
pop
leave
ljmp
cmpl
test
out
shll
adc
xchg
sbb
jns
dec
call
mov
sbb
xchg
push
negl
aam
inc
sub
lock
hlt
movsb
movsb
xlat
aas
sub
clc
push
vmovsd
xor
loop
adc
mov
push
lretw
nop
vpminub
and
scas
test
mov
mov
loope
lahf
pop
mov
pushl
out
js,pn
sub
xchg
loop
test
or
fistpl
jno
sub
outsb
clc
lods
insb
notl
pop
out
popf
sbb
dec
loopne
dec
cmpsl
dec
loop
jae
lods
sti
adc
jg
sub
mov
sbb
lock
enter
xor
out
or
inc
jmp
mov
inc
push
xchg
cs
jl
insl
sub
sub
pop
test
aas
leave
mov
aad
xor
dec
outsl
sub
pop
sahf
dec
lret
push
mov
adc
sub
jnp
xorl
stos
icebp
in
push
sbb
in
mov
fyl2x
sar
push
inc
xchg
mov
sbb
aam
jo
cvtps2pi
mov
mov
test
cs
and
cmp
add
rcl
not
andb
mov
aad
jle
cmpsb
test
xlat
in
mov
inc
mov
mov
hlt
dec
shrb
mov
shrl
sti
adc
pop
sti
decb
pop
sub
addr16
inc
call
mov
les
clc
push
adc
pop
stos
pop
inc
mov
inc
xor
fadd
inc
sbb
push
decb
push
ss
jno
and
ret
inc
inc
inc
adc
stos
imul
mov
gs
or
push
imul
xchg
pusha
jo
mov
int
cmp
les
cmp
jp
movsl
xor
lea
sbb
icebp
mov
sub
or
or
pop
cmp
adc
ret
or
pusha
sub
pop
stos
pop
jae
pushf
push
rcl
sbb
xlat
push
mov
push
or
dec
loop
sbb
add
stos
pop
hlt
and
insb
xchg
divb
insl
aas
and
push
aaa
pushf
xor
dec
and
lcall
dec
repz
std
js
out
and
xchg
xchg
enter
and
sbb
jmp
leave
jns
out
jbe
mov
add
mov
jne
insb
push
xor
or
sbb
xor
inc
push
lret
adc
xor
hlt
or
fdivr
jb
mov
ljmp
test
rorw
andl
adc
les
out
in
fdivs
and
pop
mov
xchg
push
aad
add
jnp
fdivs
insl
push
mov
jo
rolb
inc
cmpsb
movsl
incb
inc
sbb
mov
xchg
mov
aam
jg
inc
sub
jge
cmp
xchg
xor
inc
add
jge
rcll
mov
ret
js
ss
jno
push
les
pop
add
dec
mov
jecxz
fwait
mov
test
pop
inc
sbb
in
popl
dec
jle
inc
mov
test
mov
in
dec
mov
loopne
push
sub
popl
lahf
inc
push
sahf
popf
cli
ds
nop
dec
or
xchg
fsts
movsl
cmp
dec
lods
repz
inc
bound
dec
icebp
or
insb
jmp
mov
into
pushf
hlt
enter
mov
dec
mov
mov
movsl
js
fisubl
adc
xchg
lea
sbb
fst
stc
jmp
mov
and
ljmp
pop
out
pusha
mov
je
sbb
lods
mov
punpckhwd
cmp
ljmp
sti
cwtl
enter
call
in
stos
jl
push
pop
xor
pop
ljmp
std
push
adc
mov
test
mov
add
xchg
ljmp
outsl
sbb
mov
or
cmp
sbb
jmp
xchg
xchg
jmp
jmp
loopne
dec
and
cmp
enter
loop
into
test
stos
sub
jmp
xor
adcb
stc
movl
xor
pop
popa
in
lods
adc
clc
adc
dec
adc
scas
pop
test
lcall
push
je
push
and
outsl
stos
jne
mov
mov
mov
cmpsl
xor
shl
repnz
mov
pop
jl
fsubrl
pop
or
in
loop
push
cmp
es
scas
cmp
xor
push
dec
pop
or
jmp
push
xchg
cmc
rolb
mov
mov
cmp
dec
and
pop
mov
xlat
pop
stc
push
dec
adc
add
cs
adcb
pop
sbb
aaa
cmpsb
nop
fld
sub
fidivs
testl
in
jmp
jns
stos
lret
repz
into
out
test
je
add
jmp
std
xor
cs
lahf
dec
pop
adcl
popa
addr16
out
scas
mov
push
or
or
shrb
inc
enter
mov
rol
clts
sbb
imulb
insb
sbb
mov
stos
push
xor
in
mov
into
mov
inc
mov
movsb
movntps
sbb
adc
daa
dec
mov
sub
inc
lock
xlat
cmpps
jge
in
clc
xchg
xor
lret
mov
cmp
in
int3
aaa
out
cmp
aam
ljmp
and
ds
pop
pop
rclb
dec
out
inc
sub
cltd
jb
push
rcrl
xchg
push
xor
outsb
push
xor
bnd
daa
rol
or
out
jecxz
xchg
push
adc
dec
jl
fidivs
insb
addr16
sbb
out
mov
sub
in
dec
or
rcl
and
inc
jge
rcrl
mov
gs
dec
mov
mov
mov
cmp
ret
repnz
jp
popf
mov
test
jnp
adc
ret
cmpsl
popa
jb
bnd
insb
inc
repnz
push
jb
addl
fxch
jb
outsb
lret
std
cmc
jl
fists
cmp
inc
dec
pop
xchg
pushf
addb
out
mov
or
rorl
jmp
pusha
cmp
xorb
add
cli
test
adc
sub
repz
mov
push
and
or
sbb
popa
movsb
icebp
push
fs
les
idivl
aas
fistl
and
ljmp
add
mov
je
pop
xchg
rclb
mov
sub
pop
jbe
push
mov
into
jns
pushf
ds
push
mov
outsl
dec
rolb
arpl
stos
clc
fwait
inc
pop
cmp
sub
dec
or
add
xchg
sbb
jns
loope
hlt
mov
jb
pop
or
mov
imul
xor
and
arpl
addr16
pop
aaa
hlt
bound
jp
ljmp
test
test
inc
das
fwait
or
popa
sbb
jb
testl
or
inc
jge
push
inc
xchg
insb
mov
cli
pop
adc
push
dec
leave
into
sbb
pop
jp
xor
fisubrl
addr16
mov
or
and
lock
pop
inc
inc
aaa
adc
outsl
cmp
cmpb
fs
push
pop
or
pushf
repz
int3
jg
xorl
aaa
rorb
in
adc
adc
shlb
sbb
jb
push
or
fldl
fs
push
bound
repnz
sbb
rolb
outsb
cmpl
mov
sub
jns
ja
aas
bound
repnz
mov
sub
js
mov
js
jl
out
mov
ds
push
movsl
pop
push
sub
cmpb
mov
sbb
nop
in
pop
rolb
mov
mov
push
popa
sarl
das
jle
cmp
xor
mov
xor
inc
mov
pushf
rcll
sub
push
ds
mov
shl
jmp
fs
mov
in
sub
mov
movb
xor
jb
xchg
push
cld
gs
inc
mov
dec
sbb
jmp
dec
add
mov
sub
in
xor
lds
cld
bound
xor
cmpsb
add
dec
push
enter
mov
in
mov
cmp
in
prefetch
out
or
fwait
jl
sbb
jb
xchg
xchg
sub
add
mov
popa
push
jmp
jb
das
mov
aam
inc
outsb
jmp
xlat
xchg
js
push
popf
or
fldl2e
xchg
fwait
xchg
cwtl
push
ja
int
aaa
stc
jecxz
cmc
push
loope
lock
and
cmp
fcmovnb
mov
in
lea
addr16
dec
das
aas
repz
dec
xchg
insb
idivb
mov
adc
sub
mov
adcb
dec
pop
in
adc
lock
dec
mov
addl
and
jp
fmulp
imul
dec
push
pop
js,pn
push
or
imul
mov
mov
push
gs
ljmp
jmp
popa
outsl
lret
roll
loop
out
sub
icebp
lcall
sub
mov
repz
stc
adc
repz
loop
lea
sub
movsb
test
pop
adc
mov
sbb
addr16
enter
xor
repnz
inc
push
ljmp
push
int
loop
sahf
mov
hlt
sub
fwait
cmp
cmpsl
add
cwtl
outsb
andb
je
loope
jo
call
sbb
lods
xor
imul
inc
lods
out
dec
std
cmpsl
mov
mov
jg
push
mov
sbb
adc
in
cmp
cmp
mov
insb
xchg
pop
sbb
cwtl
cld
les
iret
lds
roll
push
or
mov
push
sub
push
dec
jns,pn
shlb
xor
aaa
mov
int
js
jmp
mov
lds
dec
cmpsl
pop
les
adc
adc
xchg
pop
and
addr16
data16
inc
jno
out
out
cs
dec
add
mov
ret
and
cmpsb
ds
pop
sub
daa
js
inc
fistl
and
stos
pop
je
pop
lret
inc
lea
fisttps
lret
push
fwait
add
pop
dec
jno
mov
mov
inc
cltd
jb
je
icebp
dec
les
shll
adc
push
icebp
rcl
mov
sub
or
int
lds
je
jl
ss
pop
mov
push
sub
ret
icebp
xchg
aaa
ss
cld
gs
sub
inc
mov
outsl
arpl
inc
ds
cltd
jns
sub
and
mov
out
push
xchg
sub
xor
xchg
jle
out
icebp
cli
mov
mov
inc
pop
mov
popa
cmp
xor
jno
das
inc
and
outsl
pop
xor
mov
sub
pop
daa
pop
xor
mov
dec
dec
sar
popa
jg
jmp
sti
inc
cmp
out
je
loope
out
shll
add
or
mov
mov
push
data16
xchg
pop
fistps
js
jae
clc
sub
cmp
push
adc
dec
js
loop
adc
dec
iret
ret
jp
and
or
fldcw
sub
mov
push
and
pop
inc
add
xor
sub
push
lods
dec
scas
jg
mov
mov
mov
inc
daa
push
cmp
das
push
or
rclb
cli
sub
and
frstor
and
das
xchg
jae
lock
xchg
xchg
and
fnstcw
pop
pop
jmp
mov
pusha
cli
pop
aad
icebp
push
or
outsw
mov
daa
xchg
jmp
xor
mov
inc
bnd
pop
lds
add
into
xor
hlt
mov
idivb
jg
xchg
dec
jge
xchg
es
out
rcr
dec
in
mov
sti
sub
ja
pop
pop
inc
addb
enter
add
adc
mov
popa
xchg
push
ljmp
movaps
ret
xlat
mov
out
push
sbb
add
xorb
jo
add
sbb
lea
or
mov
rorb
mov
insb
mov
pop
sub
mov
leave
push
fsts
lods
mov
daa
shlb
dec
pushf
xlat
inc
pop
int3
int3
fwait
mov
test
sbb
jbe
xchg
data16
pop
test
sub
div
jmp
xorb
pusha
push
mov
popa
hlt
cmpsl
jb
cmp
mov
xor
das
aas
movsb
jnp
mov
xchg
xchg
in
dec
decb
xchg
jns
mov
test
imul
fstpl
pop
push
jb
lret
lcall
rorb
cmpb
mov
rorl
lods
fcomps
hlt
sub
inc
or
int3
jge
lret
push
dec
and
std
insb
sbb
rcrl
xor
xlat
or
lahf
out
mov
inc
bound
add
leave
xchg
sti
cmp
mov
mov
xchg
and
pop
mov
xchg
cmp
and
dec
clc
rcrb
pop
scas
adc
aad
lods
ficoms
dec
cmpsl
jecxz
cltd
push
mov
xor
adc
lret
fildl
inc
push
mov
test
lcall
shrl
out
push
cmpsl
adc
and
filds
insb
cmp
mov
adc
sub
mov
movsb
and
pop
inc
xchg
ljmp
pop
fbstp
adc
fcompl
js
daa
cmc
aad
aaa
mov
sub
jnp
fs
andl
jb
cmpsb
mov
pop
inc
add
fstpt
call
out
sbb
add
xor
ss
mov
xchg
and
push
shlb
cwtl
cmp
imul
mov
push
fstp
aam
xchg
call
inc
mov
mov
mov
push
into
fsts
in
sbb
int
das
out
subb
and
out
insb
test
push
xchg
adcl
xchg
gs
and
dec
daa
mov
fsts
cmpsb
ret
lcall
aad
imul
fwait
push
cmp
push
jle
sahf
sahf
fidivl
jns
sub
inc
popf
icebp
cmp
mov
or
fisubrs
xor
jg
lcall
repz
jae
aam
jge
inc
mov
jge
jnp
shl
pop
mov
sahf
xchg
fcmovnbe
cld
pusha
mov
sbb
mov
mov
cli
dec
inc
lahf
insl
inc
movsl
popf
add
rclb
test
orl
adc
push
xchg
pop
lret
fwait
test
ret
xor
lock
outsl
jl
pop
cmp
arpl
fnstsw
xchg
sbb
push
cmp
push
icebp
nop
fisubrl
cs
mov
pop
data16
jae
repnz
mov
in
loope
sub
cmp
data16
imul
mov
fcoms
outsl
and
lahf
sub
cmc
jnp
sbb
inc
jo
or
xor
outsb
mov
sbb
movsb
in
adc
fdivrl
aaa
ss
call
xor
jno
pushf
in
dec
sbb
int3
and
adc
and
xor
test
iret
sbb
mov
outsl
xchg
ret
in
push
roll
fs
xchg
xorl
insb
in
inc
xchg
in
ret
mov
adcl
stos
mov
ds
enter
or
adc
mov
adc
pop
gs
hlt
out
lock
fs
xlat
pusha
mov
outsb
or
jg
pop
ss
loop
mov
xor
jg
fdivl
dec
addr16
dec
sti
mov
mov
insb
aad
sti
jp
sub
or
loop
roll
sbb
jge
push
xor
out
xor
dec
test
in
sbb
nop
lods
inc
push
or
shll
fdivp
clc
mov
scas
add
fiaddl
jl
out
pop
add
jle
cmpsl
nop
pop
fcmovbe
mov
xor
dec
pop
lea
add
push
or
cmp
out
xor
xor
and
inc
sbb
sbb
xor
dec
mov
adc
loope
sbb
adc
xor
and
adc
jno
call
inc
or
xor
sbb
in
pusha
mov
fisubrs
mov
loop
pushf
sub
cmp
adcl
jne
pushf
sub
jp
aad
or
cmp
adc
mov
cli
scas
lods
test
ja
orl
shl
push
call
in
xor
movsb
cmp
arpl
fsubp
ja
push
testb
scas
mov
psrld
cmpsl
mov
mulps
insl
pop
push
hlt
mov
jnp
fsubr
pop
add
fiadds
loopne
inc
lds
mov
rclb
jg
cmpsb
jo
mov
dec
cmp
and
pushf
and
push
ret
or
cmp
pop
add
movsb
out
pop
fnclex
ret
lods
add
js
push
add
mov
adc
lahf
rolb
cmpsb
movsb
jb
adc
roll
dec
mov
mov
mov
xlat
add
inc
push
xlat
jmp
daa
cs
add
loope
push
fistpl
push
idivl
inc
push
lret
mov
in
repz
dec
xlat
jb
jmp
dec
testb
popa
xor
ljmp
jp
inc
mov
pusha
xchg
cwtl
mov
jbe
out
dec
inc
cmp
adc
mov
mov
lahf
push
fists
shll
xchg
stc
cmpsl
pop
ja
gs
jg
inc
mov
fldcw
inc
notl
push
inc
loop
sub
xor
xchg
mov
addb
icebp
lock
xor
xchg
adc
dec
rcr
ret
or
mov
cmp
icebp
jmp
ret
mov
push
or
in
ljmp
sub
aas
mov
mov
ror
mov
cmp
rol
rorl
mov
add
sbb
movsb
pop
jmp
mov
nop
xchg
das
xchg
or
dec
lret
int3
add
add
jmp
and
lea
adc
sub
inc
sbb
mov
mov
ja
sub
ret
not
orl
fcmovnb
cmpsb
aam
lods
repnz
push
das
xlat
push
loope
sub
push
outsb
fidivs
icebp
sub
inc
mov
or
mov
cmpsl
cmp
adc
sbb
mov
mov
xlat
imul
and
pop
or
lods
mov
adc
lret
add
rcrl
aaa
dec
pop
xchg
jg
gs
push
fs
jg
into
cltd
add
lock
addr16
inc
xchg
jp
jle
xorb
in
jbe
lods
fsubrs
or
in
repnz
jge
mov
inc
and
adc
lret
cld
xor
int
sub
test
sub
lds
loop
mov
adc
add
pop
rclb
shll
dec
cwtl
ficoms
mov
cmovle
ja
push
data16
push
lcall
cwtl
pop
fdivrl
push
ret
ljmp
mov
mov
push
xor
daa
insb
push
rcl
pop
adc
mov
loop
in
sub
xor
test
sar
jp
sahf
mov
loopne
jle
cmpsl
sahf
call
mov
jle
pusha
cmpsl
loope
push
adc
fiaddl
insb
mov
dec
in
aaa
mov
sti
ret
dec
lret
sarl
jecxz
insl
sbb
fisubrs
inc
pop
movsl
adc
test
inc
cmpsb
or
pushf
cmp
aaa
xchg
ljmp
pop
imul
xchg
sbb
push
jae
inc
jmp
xor
sub
dec
outsb
xor
out
xor
dec
in
adc
bound
movsl
sti
ds
or
mov
sbb
push
imul
cmp
imul
js
out
inc
pop
pop
xchg
rcrl
sbb
mov
push
sarb
xchg
test
test
leave
rol
call
pop
push
sub
mov
std
dec
jmp
lret
mov
ljmp
adc
into
mov
gs
push
mulps
les
dec
notl
dec
mov
std
aas
mov
or
lds
in
cmc
jb
insb
xlat
gs
and
ret
pop
push
daa
jo
test
mov
mov
xchg
xchg
lret
out
or
orl
inc
movsb
xchg
cs
sbb
add
push
das
daa
and
sub
cmp
inc
std
mov
xchg
add
push
mov
or
jns
punpckldq
mov
mov
dec
inc
adc
subb
pop
xchg
aam
xor
out
sbb
jge
sub
jae
pop
jg
xchg
add
mov
xlat
mov
xor
mov
or
dec
pop
lahf
dec
xlat
lret
pop
jne
divl
imul
lock
bswap
rorl
sub
dec
adc
inc
mov
call
pop
repnz
sub
adc
add
inc
xchg
cmp
lahf
je
inc
repnz
clc
xor
pop
or
inc
int3
cmp
cltd
mov
sub
clc
dec
jmp
and
sub
test
mov
mov
out
cmp
xlat
bound
arpl
rolb
jnp
fwait
les
in
jp
out
mov
pop
addl
push
pop
xor
sti
ss
faddl
cs
popf
push
inc
dec
or
fcomps
lahf
sbb
test
fldpi
and
sahf
sbb
push
mov
test
hlt
popf
jg
sub
lea
sub
adc
xchg
sub
sbb
pop
xor
call
iret
mov
xchg
jne
lods
popf
in
inc
adc
lahf
sub
clc
fiadds
xchg
in
fimuls
or
lock
mov
xchg
gs
test
xchg
jle
fcomi
sar
xchg
xchg
push
in
push
mulb
mov
sub
dec
xlat
loope
xchg
inc
push
outsb
call
mov
ss
and
sarb
mov
inc
mov
arpl
outsl
cmp
adc
pop
lret
pop
nop
pop
mov
js
inc
insl
adc
shr
dec
jmp
adc
xor
loop
inc
imul
and
insl
or
test
sub
mov
daa
inc
pop
cmp
inc
imull
xlat
jecxz
fcmovbe
inc
xchg
fwait
and
mov
icebp
mov
add
mov
lret
ja
push
lahf
push
je
call
dec
jge
rorb
mov
mov
xchg
in
dec
test
inc
imull
jmp
imul
cli
cltd
jp
push
ret
lods
push
and
mov
popa
sahf
dec
fldenv
into
lret
mov
cltd
cmpb
lock
pushf
xchg
ja,pt
sub
push
ds
mov
das
pop
xchg
sub
mov
andb
les
out
cmpb
sbb
dec
and
xchg
adc
inc
test
cmp
xor
je
dec
adc
xchg
out
add
mov
xor
cmpsb
pop
in
cmp
rcl
adc
cmp
lods
imul
pusha
xor
in
pop
jmp
adc
mov
cmc
es
aad
daa
cmp
adc
out
insl
and
adc
pop
loop
inc
insb
iret
je
sbb
sbb
mov
je
les
movsb
add
loopne
lahf
push
jg
lds
push
sub
push
outsb
aaa
pop
jmp
sub
rorb
jb
jnp
pop
mov
sbb
imul
scas
sub
in
enter
push
nop
sahf
mov
adc
mov
aad
cmp
jmp
out
scas
and
hlt
mov
out
pop
push
test
addr16
inc
jecxz
popa
pop
jo
xor
loope
fistpl
mov
jle
add
fistpll
pop
cmpb
push
iret
test
or
and
jbe
sub
int3
lcall
cmp
insb
sbb
mov
jp
xchg
mov
stc
sbb
add
stos
insb
xchg
add
mov
push
and
cmp
push
push
ja
add
push
add
add
sub
add
xchg
call
xor
cmp
cmc
mov
push
push
addr16
sub
sar
jno
mov
stos
idivl
push
xchg
fstps
dec
dec
dec
adc
insl
push
fisttps
arpl
and
repz
push
fwait
adc
jbe
push
inc
mov
fbstp
outsl
inc
out
push
mov
in
add
or
test
dec
cmp
cltd
push
push
fnstcw
adc
jo
ja
xor
inc
das
jb
cmp
mov
decb
inc
mov
addr16
add
sarl
lds
sub
inc
push
sbb
pop
mov
pop
adcl
dec
jns
sti
les
push
adcl
push
xor
or
das
mov
or
stos
js
fucom
mov
test
in
rolb
stc
or
sbb
mov
xchg
dec
jno
mov
or
das
sub
xor
jmp
loop
data16
fld1
push
cwtl
xor
ds
inc
push
jo
mov
sti
or
push
pop
adc
sti
imul
inc
add
mov
hlt
mov
mov
xor
mov
in
jecxz
std
js
cmp
sbb
fwait
cmp
mov
inc
sbb
mov
fistl
sub
jb
push
sahf
lahf
pop
pop
sub
dec
sarb
out
sub
stos
outsl
mov
fiadds
inc
mov
cld
lret
or
mov
inc
loop
xor
cld
push
sbb
push
rcl
sbb
mov
mov
in
dec
push
gs
les
pop
sbb
add
cmpsb
arpl
dec
mov
pop
dec
and
jb
or
stos
add
cmp
xchg
in
or
push
jmp
das
leave
inc
sbb
sub
push
add
jo
push
jmp
cwtl
jbe
shll
adc
sbbb
add
cmpsl
clc
inc
sub
inc
push
xchg
push
cmpsl
jecxz
ja
jo
shl
out
add
dec
mov
rcrb
mov
loop
movsb
pop
ret
mov
push
jp
push
jb
push
mov
shll
jbe
jne
ret
and
or
or
adc
shrb
adc
cs
int3
movsb
push
daa
xchg
lret
xchg
mov
adc
jp
and
jne
hlt
inc
sbb
and
pop
xchg
jg
mov
xor
call
push
jmp
jae
push
mov
or
je
dec
jmp
push
lods
shrb
jecxz
insb
jle
jo
pop
dec
mov
cmp
cwtl
mov
out
xor
sub
fs
cltd
mov
mov
ja
push
outsb
add
je
in
jmp
mov
fs
dec
nop
jae
mov
cld
cmp
shlb
ja
xchg
repz
push
xchg
movsl
push
loop
and
shrl
xchg
pop
sbb
cwtl
add
jne
mov
jns
jmp
rcrb
xchg
inc
mov
dec
adc
daa
mov
icebp
sarl
adc
stos
in
push
sub
or
push
cli
es
push
cmc
subb
fisubrs
cwtl
inc
loop
push
nop
nop
xchg
adc
push
jecxz
test
mov
jecxz
adc
cmpsl
mov
jecxz
pushf
mov
popa
rclb
jmp
push
daa
into
mov
icebp
cmp
cmp
aas
and
ja
lret
lds
mov
je
insl
lea
pop
mov
push
nop
cmp
jbe
or
in
je
cmp
cwtl
int3
call
or
xor
adc
mov
push
push
aam
and
cmp
push
sub
sbb
mov
stc
jae
pushf
add
aam
adc
xlat
sahf
movaps
bound
sub
mov
adc
popa
push
add
jmp
or
add
jbe
test
jbe
bound
dec
fistpll
leave
jle
out
push
mov
sub
loopne
out
fs
push
or
mov
mov
adc
je
movsb
in
les
mov
jo
adc
or
jo
or
sarl
movq
gs
mov
ljmp
mov
lahf
rcrb
and
dec
inc
push
xchg
ss
xchg
gs
adc
push
mov
sbb
inc
jp
enter
adc
pop
dec
jbe
push
pop
sahf
dec
not
cmp
sbb
xor
or
insb
std
hlt
mov
je
mov
out
inc
enter
push
add
xor
fs
lret
inc
test
outsl
jae
xchg
dec
subl
xchg
dec
push
push
test
mov
add
fstps
out
leave
repz
and
js
cmp
arpl
es
sub
cs
neg
add
adc
dec
inc
mov
cmp
pop
hlt
mov
mov
mov
push
inc
jne
dec
xor
cmpsl
cmp
sbb
hlt
xchg
sbb
xchg
push
nop
cmp
jo
insb
cmc
dec
xor
call
pop
test
fdivl
stos
jp
xchg
push
out
and
in
into
pop
gs
mov
dec
jl
imul
hlt
push
pop
push
and
out
add
push
sbb
jecxz
scas
xor
xchg
ljmp
add
jb
shlb
inc
jnp
sbb
mov
dec
inc
mov
movsl
fcmovnb
mov
cmp
js
pop
movb
sti
adcb
adc
ds
pop
push
data16
pushf
adc
int3
stos
cs
div
push
xchg
bound
pop
call
fistps
mov
imul
dec
iret
push
mov
pop
add
mov
data16
mov
push
leave
dec
xchg
inc
loopne
out
and
inc
stos
mov
push
dec
inc
sti
fwait
lods
mov
rorb
cmc
or
test
lahf
xchg
jae
dec
dec
mov
test
outsl
xor
dec
add
int
test
and
lcall
mov
daa
mov
cmpsb
mov
test
out
push
and
cmc
sbb
test
mov
ljmp
sbbl
xor
dec
xor
mov
cmc
xor
jne
xor
inc
in
in
inc
mov
inc
mov
pop
sbb
ret
fdiv
and
cmpb
lock
sti
mov
cld
popa
fwait
pushf
push
ret
sbb
ret
cmp
add
fistpl
cld
xor
mov
sti
bound
mov
add
pop
or
cmp
inc
jle
jo
xor
aaa
fdivl
rcr
mov
cmp
test
enter
stos
add
fcoms
jnp
mov
adc
or
xchg
bound
dec
stos
call
push
int
movb
fwait
cmpsl
xchg
push
xor
shll
mov
jge
jp
lods
aaa
pop
sar
xchg
cli
or
dec
and
mov
push
jmp
fwait
inc
dec
fldl
lods
enter
sub
mov
pop
mov
fs
pop
daa
inc
mov
enter
in
daa
sub
fcmovnbe
lock
in
gs
dec
mov
sbb
ja
push
xor
loop
push
jbe
lock
push
pop
add
insb
cvttps2pi
movsb
pop
xchg
cmp
jecxz
cs
pop
sbb
lods
or
fisubrl
iret
xor
daa
cmp
push
mov
jo
fwait
sbb
icebp
push
jg
push
pusha
repz
sbb
in
mov
cmpsb
mov
inc
and
je
iret
xchg
arpl
outsl
cmc
pop
cmp
sub
xor
adc
cmp
sub
add
test
sbb
popf
shl
fdivs
cmp
dec
aas
cmp
mov
je
push
es
popa
mov
fst
adc
sub
and
ljmp
and
leave
icebp
icebp
dec
enter
mov
in
mov
xchg
cmp
es
and
jnp
rcrb
sbb
push
jge
outsl
cwtl
pop
adc
stos
gs
jbe
mov
push
ret
imul
jg
lahf
add
pop
fstl
inc
dec
cmp
mov
dec
lods
or
stos
fistl
pusha
inc
mov
fwait
push
fcmovu
and
or
adc
cmp
out
adc
or
dec
mov
out
mov
das
and
jmp
adc
adc
cld
inc
ljmp
roll
sti
sbb
outsl
fwait
mov
pop
sahf
push
pop
out
xor
mov
xchg
xor
loope
mov
xchg
or
xor
cltd
out
repz
test
adc
jne
push
xchg
test
mov
fistpl
scas
mov
lods
out
cs
cmpsl
xor
jbe
fs
push
lret
push
shrl
sbb
repnz
add
mov
push
movsl
inc
add
or
dec
lea
dec
cmp
xchg
xor
pop
and
and
add
mov
push
fisttps
pop
push
xlat
gs
dec
fists
fadds
mov
mov
cmpsl
jne
inc
fs
js
ret
pop
movsb
cld
dec
ss
pop
sub
xchg
inc
pop
jecxz
jae
nop
pusha
mov
fcomip
lods
push
scas
mov
xchg
cmpsb
sbbl
nop
pop
add
inc
mov
into
xor
stc
aad
cs
mov
mov
and
rorb
lahf
int3
push
pop
fcoml
fcomps
rcll
enter
push
movsb
inc
dec
ds
fldenv
jmp
xor
sub
or
imul
out
call
mov
aas
cmpsb
popa
mov
mov
rorb
jo
lcall
xor
or
stos
xor
addl
ds
fldt
adc
andnps
test
iret
ret
imulb
push
pop
fcomp
xchg
stos
jg
push
sub
mov
sub
mov
or
sarl
sti
or
test
or
fidivs
sub
repnz
fistl
into
out
std
das
rorb
dec
push
push
sub
xchg
int
ss
push
push
les
stos
call
pop
ret
mov
push
mov
mov
faddl
mov
scas
add
jns
adc
loopne
jp
ficompl
aaa
mov
test
and
fists
mov
pop
mov
mov
hlt
pop
push
testb
xor
or
cwtl
xorl
rorl
jae
inc
inc
add
sub
cmp
jp
sbb
add
in
pop
jo
jnp
fs
jecxz
pop
aam
adc
bound
fdiv
mov
pop
in
pop
mov
stc
mov
mov
stc
dec
outsl
lds
jecxz
push
inc
stos
jge
jb
dec
xchg
mov
mov
push
xchg
mov
sbb
push
gs
out
or
push
jl
insb
lods
push
jb
test
in
pop
jnp
cmp
call
adc
xlat
ficoml
dec
scas
lea
aad
adc
push
sub
mov
loopne
fwait
mov
in
inc
xchg
pop
push
les
gs
or
xor
fwait
adc
flds
dec
in
xchg
and
xor
xor
test
jmp
adc
adc
cmp
xchg
gs
inc
rep
les
imul
in
shll
sub
lods
fcoml
push
imul
mov
sahf
add
mov
or
inc
sub
loop
popf
dec
adc
outsb
or
dec
arpl
cmpsb
mov
jmp
aas
mov
ss
mov
out
js
or
lods
fcomi
movsb
dec
push
and
out
inc
jns
arpl
xchg
cld
sub
pushf
jmp
or
imul
lods
or
hlt
fwait
inc
fisubrl
xchg
into
add
arpl
call
mov
jbe
pop
ja
dec
push
insb
pop
rcr
sbb
in
daa
push
and
cmp
inc
stos
sub
adc
hlt
mov
outsl
repnz
and
dec
test
test
ds
adc
mov
insl
mov
clc
push
jg
and
push
dec
jno
and
cmp
cltd
or
sub
out
pop
dec
add
mov
push
mov
add
pushf
out
dec
xchg
pop
cmp
xor
sub
rclb
xchg
addr16
loopne
pop
aad
ljmp
xchg
push
pop
movsb
xlat
jne
jg
rol
jbe
adc
or
mov
in
and
jno
adc
lock
add
enter
cmpsl
rclb
mov
out
adc
jecxz
ret
lock
lcall
data16
sbb
repz
add
sub
sbb
outsb
dec
or
xchg
inc
shr
dec
or
and
dec
movsl
dec
adcl
movsl
xlat
xor
bound
jo
fsts
rcrl
neg
test
stos
or
fstl
cmp
mov
mov
mov
jno
xchg
cwtd
or
leave
push
mov
dec
aam
in
lock
in
dec
add
mov
xchg
dec
stc
fidivs
dec
cli
fadds
pop
inc
popa
add
mov
ljmp
adc
loopne
inc
add
in
sbb
xor
sti
imul
push
and
rol
fcomi
mov
push
in
mov
ror
lret
popa
sub
mov
push
sbb
or
inc
insb
add
rcl
and
test
jecxz
lock
stos
in
and
mov
fmuls
dec
scas
pop
outsl
jnp
dec
lods
push
mov
fs
shrl
inc
jecxz
mov
gs
cmp
push
sbb
dec
xchg
jle
mov
int
imul
icebp
loopne
rorl
pop
insl
rclb
cs
push
dec
mov
and
adc
or
pop
aas
mov
mov
repnz
fstpt
out
sbb
js
and
pop
or
mov
push
outsb
xor
mov
mov
xchg
pop
test
subl
ja
pop
mov
xlat
fs
shll
add
scas
sbb
bound
cmpsb
add
and
ret
jno
push
call
lock
hlt
sub
dec
ret
fwait
mov
popa
hlt
fbld
or
sub
mov
mov
xchg
and
cmovns
cmpsl
add
insb
xchg
sub
mov
stos
fisubrl
subl
cmc
das
and
push
xchg
mov
jge
and
push
inc
pop
add
adc
addr16
mov
lret
dec
shl
imul
mov
xchg
push
jbe
fisttps
xchg
mov
shlb
in
pushf
test
adc
sub
pop
xchg
stos
cwtl
jbe
rcrb
daa
out
inc
inc
repnz
sbb
stc
movsl
cmpsb
and
cmp
cmp
cs
mov
sbb
adc
neg
in
xchg
lds
and
movsl
add
in
mov
cltd
sbb
andl
int
call
sbb
xchg
repz
ljmp
lahf
dec
jb
jmp
inc
iret
jo
int
or
mov
mov
inc
dec
test
sbb
cmp
test
xchg
mov
outsb
inc
push
lret
push
loop
inc
jle
cwtl
adc
inc
test
scas
std
bound
lds
insb
lods
push
jnp
movsl
mov
stc
jl
push
mov
push
sbb
adc
outsb
adc
push
mov
js
and
ret
cmp
aaa
or
addl
daa
arpl
mov
fstpl
cmp
dec
fnsave
sub
mov
call
je
add
push
gs
cmp
inc
int3
ljmp
or
or
loopne
pop
pushl
rcrl
loope
mov
and
outsb
in
inc
add
push
insl
cmp
adc
jae
shr
inc
dec
push
rorb
fcmovnu
test
inc
sub
lock
cwtl
adc
idivb
adc
ret
nop
xor
jb
lcall
pop
inc
aad
out
dec
decl
xor
jbe
insb
out
and
repz
push
xchg
sub
insl
fcom
movsl
pop
cmpsl
rorb
repnz
loopne
adc
jb
and
imul
outsb
mov
test
rol
lods
test
dec
xor
rclb
ss
mov
add
movsb
rclb
xchg
dec
or
push
mov
inc
push
popf
jmp
xor
push
sahf
ljmp
pop
adc
push
lcall
mov
and
push
sbb
adc
div
cmpl
mov
push
fldcw
inc
leave
inc
cs
lahf
or
lcall
mov
mov
out
mov
shll
xor
jae
pushf
iret
inc
pop
push
outsb
cmp
out
and
dec
pop
push
stc
scas
xlat
dec
push
mov
xchg
and
out
hlt
or
icebp
jmp
fildl
mov
fsubrs
ljmp
or
and
mov
out
inc
aam
xchg
pop
pop
xor
xchg
sbb
gs
add
ds
add
and
lods
xchg
xor
loop
in
cmpsl
int3
testl
call
loope
lret
sahf
lret
in
mov
sahf
sub
lods
push
cmp
push
pop
stos
sti
outsl
mov
outsl
pusha
pop
nop
in
pop
stc
aam
xchg
inc
lret
lea
sbb
cmpb
cmc
shll
sub
ret
mov
push
inc
xchg
ljmp
clc
scas
or
mov
push
jo
push
pop
pop
and
shl
xchg
dec
push
sub
pop
repz
dec
or
pop
push
ss
insb
movsl
iret
pop
cmpb
xchg
and
adc
pop
je
bound
xchg
or
mov
pop
arpl
hlt
shrl
subl
lock
sahf
movsl
neg
jle
dec
fmuls
mulb
test
inc
pushf
into
fwait
push
popf
lahf
fcompl
xor
lods
jl
test
pusha
cmpb
fsubrs
shlb
xor
clc
insb
adc
shr
cmp
gs
adc
aad
daa
jp
notb
in
xor
inc
rclb
scas
js
stos
pushl
or
aam
dec
stos
jp
int
pop
dec
daa
stos
cmp
jg
cmp
into
arpl
push
ds
dec
xchg
cmpl
bound
pop
push
les
imul
inc
neg
insl
cli
data16
dec
std
testl
dec
mov
lcall
ret
add
and
cwtl
push
adc
imull
pop
dec
repnz
or
outsl
sub
es
add
aam
and
inc
lahf
sbb
mov
sbbl
cmp
push
inc
mov
mov
dec
jle
les
cmp
inc
aaa
fnsave
movsl
xchg
stos
mov
ds
sbb
push
mov
mov
add
and
icebp
lods
flds
jp
loopne
mov
mov
lock
xchg
loope
mov
cld
dec
sub
push
imul
out
xchg
mov
jo
adc
and
aad
mov
jmp
jne
lret
add
cwtl
mov
into
xor
mulb
dec
cmpl
cli
mov
xchg
xor
mov
jns
inc
shl
xchg
cli
call
lret
call
xchg
enter
mov
loopne
sbb
pop
insl
sub
repnz
cmp
rolb
daa
and
sbb
or
cmpsb
rcl
mov
pop
pop
push
orb
js
jmp
push
pop
sbb
dec
inc
test
shll
sbb
scas
and
nop
shll
push
sub
push
pop
and
mov
aas
ret
mov
xchg
mov
pop
ret
cmpsb
push
pop
outsb
sti
lods
aam
mov
inc
jl
fnstenv
cmpsl
adc
sub
mov
and
sahf
arpl
mov
or
repz
pusha
insl
call
out
sbb
mov
dec
mov
jmp
mov
mov
sbb
mov
push
cmp
xchg
adc
cmp
sub
mov
mov
das
insb
stc
push
inc
test
push
scas
pop
pop
push
std
shll
iret
jno,pt
insl
ret
dec
dec
bound
xchg
imul
mov
xchg
and
jp
add
sub
mov
push
mov
lret
push
bnd
ret
mov
ret
cld
addb
jno
bound
mov
iret
ljmp
repz
pop
mov
loop
sbb
ffreep
dec
xor
adc
scas
xor
xchg
aam
div
mov
adc
jmp
cmp
stc
adc
cmp
das
je
cmp
sub
fisttpll
adc
add
dec
inc
add
xor
mov
dec
xor
mov
sub
mov
je
mov
and
sbb
push
mov
jl
sbb
add
sahf
dec
pop
repnz
sub
inc
mov
push
outsb
lds
dec
bound
icebp
mov
fcoml
inc
addr16
lcall
inc
add
sub
cltd
loope
shrl
aam
mov
xchg
ficomps
iret
sub
pop
cwtl
jnp
repnz
dec
mov
or
out
call
add
pop
pop
mov
daa
jp
fsubr
aad
mov
xchg
push
inc
xchg
test
cmp
sub
cmc
js
nop
in
fcoml
mov
cs
add
cmp
xchg
and
mov
cmp
hlt
pop
push
das
sarb
xor
xchg
adc
js
gs
pop
and
repnz
adc
out
pop
fsubrl
pushl
xor
insl
int
jle
cmpsb
adc
or
jle
and
mov
and
addl
push
or
out
lahf
sti
ja
add
clc
subb
lahf
cmp
cmp
pushl
or
xchg
scas
mov
or
in
lds
cmp
sti
out
mov
push
in
ret
mov
jno
fsubrl
push
push
cmc
das
fisttps
lcall
xor
mov
mov
cltd
lret
cmp
push
jbe
das
ficomps
stos
xchg
xchg
pop
es
jmp
mov
mov
dec
movsb
sbb
mov
jae
stos
filds
cmp
xchg
jno
scas
mul
int3
add
xor
shlb
div
cmp
lret
jle
stos
dec
les
loope
and
jle
dec
stos
sub
subl
mov
push
loop
cli
movsb
cmp
adc
data16
cmp
mov
add
pop
aam
jae
icebp
jp
add
fs
mov
loope
adc
ljmp
cli
imul
jl
test
and
or
or
ds
cld
xchg
mov
icebp
lock
mov
mov
dec
pop
loope
div
dec
int3
lcall
scas
sub
fcompl
add
inc
rcrb
inc
fdivrl
and
dec
add
sub
and
mov
inc
insl
dec
jno
inc
imul
aad
mov
dec
jge
cmp
push
clc
ljmp
jecxz
or
xchg
inc
jbe
aaa
data16
pop
movsb
dec
xor
xchg
xchg
fwait
insb
push
or
mov
dec
jecxz
fnstsw
jmp
pushf
push
sbb
inc
jl
inc
lret
pop
aas
mov
aas
add
dec
les
sbb
ja
push
xlat
movsl
enter
mov
imul
int3
or
std
mulb
mov
jmp
rdpmc
cmp
ret
adcl
xchg
push
movsl
push
icebp
cmpsb
into
fcoms
lds
idivl
aas
xchg
scas
js
jne
mov
inc
push
rolb
bound
aad
dec
sub
in
lock
ficomps
add
push
sub
mov
sbb
popa
dec
xchg
loope
cmp
add
push
out
scas
jo
pop
test
push
and
add
jns
and
push
pop
inc
adc
xchg
adc
pop
push
ds
adc
aam
dec
fsub
xchg
ror
rolb
cli
test
rolb
push
adc
loop
add
push
or
lret
movsl
jp
pop
cwtl
add
dec
cmpsl
push
cli
cmc
cmp
es
orb
cltd
mov
fsubrp
insb
xlat
xor
scas
out
sub
fbld
fsubr
mov
mov
lret
mov
lock
out
incl
jo
stos
or
jb
daa
sub
lock
data16
in
pop
xor
aad
jb
adc
add
les
aaa
inc
fdivrs
stc
add
xor
ror
or
fisubs
xchg
scas
push
mov
call
dec
addb
and
clc
inc
adc
stc
sti
sub
je
xor
rolb
std
dec
loopne
lds
ja
pop
dec
mov
xchg
mov
or
sti
add
sbb
outsl
xlat
repnz
ret
and
sarb
jp
pop
aam
xor
les
sahf
bound
movlps
ljmp
xor
ljmp
fnsave
lret
push
push
dec
adc
fs
loop
aad
sub
dec
icebp
inc
sbb
pop
xchg
sbb
scas
and
push
sarb
popf
or
movsl
and
xor
jp
daa
push
inc
cmp
mov
stc
hlt
nop
jno
in
mov
adc
sbb
lcall
cli
jle
in
rorl
jg
sub
sbb
or
jnp
sub
push
idiv
mov
or
test
and
sahf
scas
ss
nop
mov
lahf
das
mov
xchg
adc
sub
mov
les
outsl
add
push
stos
sub
or
push
leave
cld
xchg
je
loop
jmp
call
ja
mov
aaa
add
cmp
push
xchg
jb
adc
push
mov
sub
ret
and
lds
or
mov
jns
stos
mov
adc
jmp
sti
sub
push
lret
mov
ljmp
inc
and
or
mov
mov
clc
testb
jbe
lea
ljmp
or
int3
fdiv
sbb
xor
adc
mov
adcb
fdivl
inc
dec
mov
js
pop
out
cli
lret
inc
cmpsb
sbb
fiadds
mov
xor
gs
xchg
cmp
jbe
push
pop
neg
lea
gs
scas
mov
add
cmp
mov
andb
jg
loopne
push
stos
mov
repnz
jp
test
and
jle
mov
and
push
pop
cltd
sbb
add
pop
pop
jmp
pop
int3
xchg
int
push
repz
insb
shrb
lock
ret
inc
gs
inc
xchg
add
cmpsl
sbb
pop
push
cli
out
scas
lock
cmpsl
testl
je
sub
sti
add
and
bound
push
fcoml
je
push
mov
jae
icebp
and
adc
divl
sahf
adc
shrw
sub
arpl
lahf
cld
mov
addb
push
out
mov
or
and
or
mov
bound
or
sub
leave
int
mov
rclb
daa
loop
and
jmp
rcll
inc
add
stos
adc
sub
aaa
aam
mov
pusha
ret
xor
or
stos
fists
jl
out
pop
dec
fistpl
pusha
xchg
cmp
mov
mov
sub
pop
ja
gs
pop
test
mov
in
test
mov
dec
sahf
mov
cmp
scas
xchg
les
dec
aam
mov
scas
mov
inc
rol
leave
es
call
jge
push
jmp
cmp
mov
add
add
popf
data16
addb
decb
in
xor
adc
cli
roll
imul
adc
jnp
call
int
dec
pop
imul
and
and
mov
adc
into
ficompl
sbb
daa
movl
mov
fiadds
mov
sahf
iret
lret
popf
inc
jecxz
pushf
into
ret
xchg
mov
cltd
cmp
popa
push
sub
sbb
xor
and
stc
pop
xchg
je
cli
xor
or
dec
push
push
sub
ss
inc
faddp
xor
not
xor
mov
mov
and
lret
xchg
insb
mov
insb
cltd
mov
jae
pusha
mov
ds
jnp
pop
pop
jno
inc
cmp
lcall
xchg
sbb
imul
and
cmpsb
enter
imul
aaa
repz
sub
ja
push
sbb
sahf
andb
mov
sti
xchg
mov
pop
jno
push
lret
and
xchg
jge
sbb
pop
in
sub
lahf
fadds
lock
jmp
xchg
mov
jl
mov
jb
addr16
cmp
outsl
out
dec
ds
insl
cmpl
pop
and
add
inc
out
add
sbb
jecxz
mov
sbb
xchg
xchg
pop
inc
scas
mov
and
outsb
paddd
xchg
shl
xchg
leave
pinsrw
push
popf
das
cs
or
movsl
out
add
fdivl
xchg
out
cwtl
insb
mov
daa
push
ftst
aaa
mov
xor
inc
out
stos
push
xchg
aas
mov
jg
cli
int3
in
or
inc
pop
je
clc
pop
mov
adcl
add
lods
and
xor
sarl
sbbb
in
out
notl
or
sub
and
cmp
dec
add
cwtl
mov
mov
sub
and
inc
adc
aas
mov
mov
stc
leave
fldl
jae
es
sub
bound
jns
aaa
in
shr
rcrb
ret
add
mov
ja
scas
xor
jbe
stos
fimuls
mov
sub
mov
mov
seto
mov
jmp
and
adc
adc
sub
push
mov
test
jg
push
movsl
mov
sbb
or
jl
fs
out
xlat
mov
mov
mov
stc
mov
jecxz
xchg
sbb
test
jmp
dec
cltd
ss
loopne
fwait
pop
rol
icebp
dec
sub
enter
cwtl
push
es
iret
nop
loop
mov
out
rolb
into
fistps
inc
push
mov
and
lods
mov
mov
xchg
add
jmp
pop
jne
jno
imul
mov
push
fwait
lods
dec
xor
sti
xor
sbb
lods
ror
icebp
mov
ljmp
les
andb
cmc
sub
mov
enter
clc
or
lret
testb
pop
xchg
pusha
ja,pn
fildl
clc
pop
testl
pop
mov
fyl2x
enter
sti
xchg
icebp
sti
mov
aad
or
test
cmp
xor
jge
jp
popa
imull
je
cmpb
xchg
icebp
pop
add
and
es
dec
das
mov
and
add
bound
inc
mov
pushf
lret
ja
cmp
jmp
incl
sub
testl
xor
or
and
daa
jmp
cmp
push
mov
addl
fldt
repz
jns
push
jmp
adc
call
sub
add
pop
fcomi
aam
jbe
mov
mov
mov
out
add
adc
movsl
jo
sub
pushf
add
jle
mov
insl
imul
jmp
mov
jbe
jb
sbb
xchg
mov
lret
and
sub
pop
fbld
cmp
add
sbb
and
sub
pushf
pop
int3
xbegin
cmp
lcall
or
fcmovnbe
imul
push
push
mov
jno
inc
mov
inc
sub
out
sbb
loopne
sub
rolb
cli
scas
cmc
sub
push
push
or
dec
inc
mov
mov
mov
push
repz
xor
lods
add
in
clc
fucompp
push
std
mov
mov
ja
jp
sbb
shrb
mov
dec
push
bound
test
and
xorb
adc
push
inc
lcall
insb
ljmp
pop
mov
dec
fwait
sahf
loopne
mov
iret
repz
and
dec
stos
or
mov
outsb
dec
pop
cmp
jne
adcl
xchg
pop
dec
fwait
xor
add
sahf
mov
or
lods
cmp
mov
dec
jle
call
and
aad
and
mov
out
cmp
xchg
insl
adc
and
push
push
filds
fadds
in
jb
push
stos
ret
clc
mov
pop
es
sarl
sbb
pop
lret
and
adc
mov
cld
mov
sub
fdivs
sahf
adc
mov
and
pop
jb
or
xchg
rclb
or
xchg
push
cwtl
shlb
mull
jb
push
lret
ror
dec
mov
jmp
mov
push
divb
xchg
cmp
inc
xor
add
ds
pop
scas
sti
xchg
or
jbe
jbe
xor
lods
pushl
mov
outsl
movsb
mov
sbb
pop
outsl
jl
dec
dec
cltd
xchg
push
sti
jl
jle
xchg
dec
push
mov
int
mov
insl
adc
push
fstp
and
cmpl
mov
or
pop
loop
push
adc
bound
testb
push
jmp
test
inc
cmpsb
or
in
jmp
cmp
dec
pop
repnz
mov
add
aam
shrb
and
mov
push
pop
int
xchg
dec
js
mov
mov
mov
xlat
sbb
mov
arpl
scas
cmc
ja
into
xchg
xchg
xchg
sbb
mov
mov
arpl
xchg
loopne
mov
mov
push
cld
lds
push
mov
mov
xchg
xor
cmp
das
dec
imul
push
inc
aam
mov
fiaddl
lret
jo
adc
and
aam
aas
cmp
add
push
loopne
inc
mov
cmp
loop
mov
dec
pusha
sub
xchg
xchg
inc
leave
lods
sbb
popa
arpl
jge
cmp
movsb
jge
mov
push
cmpsb
in
call
mov
test
dec
adc
int3
mov
cmc
inc
rorl
stos
dec
loopne
pop
icebp
rolb
add
jmp
fwait
jle
jle
or
xchg
inc
fcmovu
push
xor
pop
popf
mov
dec
out
mov
cld
cld
sbb
test
test
js
pushf
or
and
orl
or
pop
push
xor
jecxz
bound
sahf
or
and
add
jno
test
into
hlt
mov
stos
test
aas
mov
push
cmpsl
aam
mov
and
test
loopne
pop
test
jg
and
test
sahf
cmpl
ret
push
sbb
xor
xor
sub
fcmovbe
scas
lcall
lret
jmp
add
das
inc
fidivrs
test
jno
dec
hlt
and
ljmp
pop
mulb
cli
movsl
adc
lea
add
hlt
fbstp
scas
dec
jmp
jne
xor
mov
or
adc
pop
pop
popf
dec
addr16
ret
push
push
enter
insb
xor
dec
inc
sbb
jb
dec
cmp
repnz
mov
or
adc
jge
andl
push
push
inc
mov
js
mov
or
sub
xchg
cs
mov
data16
or
inc
cld
and
cmp
pop
loopne
sub
gs
mov
mov
sub
sub
es
pop
xorb
out
jo
in
jle
dec
xchg
popa
or
jecxz
inc
dec
mov
mov
jae
rcrb
xor
jbe
fiadds
test
xchg
sahf
in
scas
into
jne
add
push
mov
push
sub
jp
cmpsb
mov
jbe
aam
cmp
stos
adc
in
dec
in
aam
fimuls
outsl
das
adc
testb
add
movsl
faddl
adc
loopne
lock
pop
push
pop
pusha
or
test
stos
roll
das
test
xchg
and
add
inc
jp
fistl
jae
or
mov
int3
lock
dec
jge
pushf
not
push
lea
ficoms
cmpl
pop
int
cli
xchg
fdivp
fs
std
wrmsr
aas
bound
outsl
ljmp
and
or
sbb
and
iret
dec
inc
dec
mov
xchg
xchg
adc
adc
mov
mov
and
jbe
add
push
xchg
xchg
loopne
in
jo
jmp
mov
icebp
jmp
inc
jo
mov
mov
and
imull
lret
push
nop
test
mov
sbb
fcoml
shll
stos
pop
add
jae
add
out
jnp
icebp
jb
adc
inc
pop
adc
insb
mov
jg
xchg
fsubl
enter
cmp
mov
mov
xchg
dec
outsb
pop
scas
cmp
mov
inc
divb
cmc
lahf
mov
mov
loope
push
daa
je
mov
mov
dec
add
jmp
mov
fstpt
icebp
fimuls
fstl
adc
push
popf
cld
movsl
dec
stos
idivb
push
icebp
add
jl
out
jns
inc
xchg
sbb
jl
lcall
or
cmp
cmp
icebp
sub
mov
and
jge
test
xor
popf
sahf
call
jmp
push
jne
dec
call
fdivrp
push
sbb
or
jno
cs
data16
enter
inc
aas
mov
add
data16
cmp
inc
jbe
aam
adc
in
push
lea
xchg
sbb
test
enter
out
jecxz
xor
mov
mov
xchg
lahf
push
out
sbb
rcll
xchg
sub
add
adc
in
insl
cmpsl
lock
inc
sti
bound
fisubrl
ds
sbb
rcll
sub
lret
into
inc
loop
cmc
pusha
pop
mov
addl
pop
repz
lcall
inc
push
dec
lret
add
jl
les
mov
jecxz
jle
dec
push
arpl
and
adc
mov
scas
inc
shrl
sub
scas
scas
test
or
ds
fmuls
cmc
xchg
pop
shl
push
mov
sub
pop
xchg
into
jge
clc
lds
inc
fstpl
and
or
pop
push
cwtl
add
ret
pop
repz
call
mov
bound
pop
mulb
sbb
gs
mov
push
nop
std
add
fiaddl
sbb
inc
push
mov
stc
push
ss
dec
push
xchg
cmpsb
insl
mov
ljmp
out
cmp
cmp
lret
xchg
sbb
mull
mov
push
popa
adc
cmp
dec
and
mov
int3
loopne
enter
popf
xchg
mov
pushf
mov
dec
leave
pop
inc
pop
outsb
lds
cmpsb
mov
call
vmovaps
das
loope
aas
loop
and
call
hlt
mov
popf
mov
mov
jb
adcb
or
shll
sbb
sbb
xchg
mov
mov
out
mov
xlat
out
cmp
cli
aas
adc
les
dec
inc
iret
orl
and
xor
lods
inc
pop
xchg
sbb
dec
bound
icebp
adc
out
sub
je
mov
sub
dec
xchg
fcmove
mov
dec
in
push
loop
insb
dec
fistl
inc
mov
lods
sti
inc
sbb
fistps
or
push
push
test
mov
cmp
rcr
cmpsb
movsb
shlb
sub
aas
arpl
cmpsb
insl
nop
dec
das
js
dec
push
and
xor
fistpll
sub
pop
or
jmp
pop
fldl
aad
sbb
scas
es
pop
xor
xor
pop
enter
jne
sahf
inc
push
scas
lret
xor
lret
jge
xor
cmc
lea
mov
in
inc
adc
jbe
sbb
inc
inc
adc
sarl
sub
adc
sbb
mov
adcb
into
or
scas
xor
testl
cmp
dec
insl
lds
idivl
sbb
jne
ja
ds
nop
adc
lret
sarl
sbb
add
shll
enter
cwtl
cmpsl
sti
jg
std
lock
fidivs
scas
or
rcll
sti
sbb
in
nop
insb
popa
or
imul
testl
sahf
push
inc
add
add
pop
mov
int
inc
dec
jle
sub
mov
jo
andl
mov
clc
dec
jmp
shl
leave
scas
jg
int
inc
lahf
repnz
sub
shlb
cmp
xchg
clc
adc
jb
fsubp
mov
inc
xlat
sti
movl
mov
scas
in
out
imul
out
cmp
dec
loopne
inc
inc
pop
sarl
push
cmp
mov
push
jnp
lods
fs
movsb
xchg
fisttpll
out
pop
lds
popa
insb
dec
cli
add
js
and
and
pusha
push
fstl
jne
xorb
dec
pop
fstl
in
push
test
jns
icebp
adc
je
scas
mov
pushf
xor
sbb
push
and
fildll
mov
flds
inc
movsb
push
lret
aad
or
mov
push
scas
out
push
xchg
jno
add
pop
push
xor
ficoms
hlt
mov
jnp
inc
fst
sahf
push
jbe
and
and
shll
movsl
movsl
pop
inc
bound
pop
es
fdivs
insl
or
cs
dec
sti
dec
js
out
fidivrl
inc
dec
add
mov
aam
mov
mov
andb
out
push
push
or
dec
je
orb
mov
mov
jno
xor
push
add
xor
lret
cmpb
cld
jle
mov
lcall
out
lods
lods
add
xchg
inc
jne
pop
inc
int
adc
sub
in
fsubrl
iret
in
movsl
ljmp
inc
andb
fmull
jl
addr16
xchg
bound
adc
push
pop
pop
js
lret
js
xor
sti
and
mov
add
inc
adc
xlat
arpl
mov
inc
lock
cmpsb
call
jecxz
lea
pop
lret
add
inc
xlat
enterw
adc
test
adc
les
icebp
stos
push
test
imul
lcall
bound
sub
outsl
inc
pop
cmp
insb
xor
mov
test
push
gs
popf
jne
xchg
jmp
aaa
lods
out
push
sahf
and
xor
inc
pop
filds
dec
pop
cmp
dec
shrl
xchg
sub
lods
insb
sbb
adc
pusha
enter
enter
mov
mov
or
clc
pop
movsb
jle
lahf
faddl
in
mov
stc
xchg
addr16
pop
clc
clc
out
mov
ss
in
int3
cld
inc
push
adc
cs
cmpsb
sbb
icebp
sbb
jl
or
jg
xor
sbb
outsb
and
add
stc
xor
inc
pop
daa
je
cmpsl
push
mov
xchg
scas
lahf
push
out
pop
roll
cmp
push
sbb
mov
or
adc
push
loopne
adc
sbb
decl
lret
int3
xchg
lea
addr16
out
mov
cmp
mov
mov
jne
stos
mov
addr16
sbb
add
push
cmp
popf
mov
iret
neg
shlb
popf
push
pusha
inc
xor
roll
in
or
xchg
fsts
jae
sbb
lea
fndisi(8087
inc
xor
push
pop
dec
jle
xor
test
cltd
stos
cmpsl
adc
fnsave
outsb
cmpsl
push
and
push
daa
jne
sbb
in
lds
add
ss
push
outsl
aaa
jle
sub
push
pusha
pop
movsb
test
outsl
or
push
repz
js
pusha
adc
dec
xlat
or
mov
lock
sbb
jge
testl
cmc
lea
push
xor
cmpl
enter
dec
aad
ja
push
int3
sbb
pop
xchg
xor
jle
add
lds
pop
mov
xor
push
call
adc
imul
xchg
fsub
jb
push
stc
inc
push
imul
push
in
popl
scas
mov
adc
pop
out
pop
xchg
jl
push
std
gs
mov
jns
jne
pop
cmpsl
or
addr16
pushf
fwait
pop
ret
mov
jle
dec
push
mov
or
test
out
dec
push
in
adc
or
imul
aam
mov
and
arpl
push
hlt
test
sahf
loop
fucom
sub
fidivrs
imul
xor
scas
jnp
mov
lods
jle
push
insb
mov
pushf
mov
xor
sub
adc
out
pop
cmpsb
aad
rclb
repnz
js
fs
cltd
outsb
in
jo
cmpb
int
pop
push
pop
cltd
jae
cmc
mov
bound
xchg
ljmp
mov
ljmp
cs
add
inc
sub
jecxz
mov
loop
sub
test
cmp
and
daa
dec
out
test
mov
or
into
in
loope
mov
jo
sbb
std
shl
into
loope
out
insl
notb
es
add
mov
push
jae
negl
mov
and
out
inc
pusha
adc
mov
pop
fwait
ss
inc
pop
xorb
cmp
insb
addb
pop
loope
mov
pop
mov
cmp
leave
ficoml
rclb
push
xchg
das
or
inc
pop
loopne
push
cmp
dec
movsb
lods
enter
lret
jnp
data16
fists
xchg
adc
cmpsl
jae
dec
enter
mov
dec
bound
jg
inc
xor
lods
es
daa
push
icebp
in
inc
ret
fisttpll
xchg
push
fcmove
pop
xchg
out
mov
fcmovbe
push
fdivr
aaa
stos
push
es
lcall
mov
push
pop
outsb
xor
test
fcoms
mov
push
add
inc
aad
sbb
jecxz
cmpsb
sbb
add
std
or
push
cmpsb
sbb
xor
mov
and
lcall
or
sbb
iret
cld
or
push
es
sti
xchg
test
jecxz
xor
sub
lods
mov
xchg
jne
sbb
sti
mov
inc
pop
fwait
xlat
add
scas
mov
jg
adc
add
mov
or
hlt
lds
shlb
dec
cwtl
dec
xor
or
loop
int
dec
lock
repnz
jecxz
fidivrs
in
aaa
cld
div
add
sub
aaa
repnz
pop
test
out
icebp
and
jb
fisubl
aas
pop
push
cmp
out
xchg
lods
stos
cmp
insb
xchg
push
aad
fmull
xlat
lock
shl
cltd
out
cmp
lret
xor
scas
inc
mov
out
jns
mov
and
adc
movsl
add
jb
xor
sahf
mov
xchg
in
push
jb
add
jo
push
push
xchg
cwtl
mov
jno
test
push
and
roll
cmp
rol
mov
xchg
and
and
push
ds
sbb
mov
or
and
jo
mov
out
lods
into
mov
fistpl
mov
fisttpl
mov
add
mov
sbb
fnsave
jae
fisttpl
mov
xchg
mov
xor
fldt
pop
mov
pop
pop
and
jno
push
aas
dec
jo
test
leave
cmp
imul
iret
dec
int
clc
into
arpl
and
adc
mov
jae
shll
ds
xor
xor
dec
arpl
push
in
pop
cmc
adc
jbe
lods
pop
pusha
jnp
les
adc
add
in
xchg
sub
cmp
test
add
sub
out
dec
repnz
sbb
cmc
cmp
rcr
das
loop
loopne
ljmp
cmp
mov
pop
cmpl
adc
push
inc
xor
stos
mov
fstpl
into
add
mov
and
out
les
ficoms
dec
cmp
arpl
test
loop
movsl
lods
in
outsl
vpaddw
sahf
adc
test
jge
je
cld
fistpll
cmc
outsl
lea
ja
cmpsl
fcomi
adc
popa
movsb
cmc
jo
xor
nop
call
outsl
lret
or
add
dec
add
sub
push
orl
enter
ficoml
dec
sti
xlat
int
push
lods
add
ror
les
repnz
push
in
pop
fsubl
inc
pop
lods
sub
js
andl
sbb
cmc
fwait
movsl
ja
sub
xchg
dec
inc
cmp
xor
rcrb
insb
test
loop
fwait
push
and
aad
ds
dec
fsubs
out
jge
or
cmp
inc
cmc
jb
iret
testl
mov
mov
adc
mov
jns
mov
mov
outsb
mov
jle
fstl
ficoml
out
movsl
ja
xchg
ret
xchg
pusha
xor
add
sub
imul
int3
mov
in
cmp
pop
inc
push
mov
push
dec
push
sbb
int3
jmp
pop
mov
pop
lea
xchg
fstpt
or
mov
dec
mov
ror
or
not
pop
adc
xchg
out
cmp
fldenv
push
sbb
jno
and
loopne
orb
jns
xchg
or
xor
and
test
in
sub
inc
cmpsl
fimull
ljmp
sahf
dec
jo
push
cs
mov
xor
inc
fdivrl
sub
xor
mov
adc
cld
sub
clc
or
jo
mov
ret
loopne
lcall
and
iret
push
mov
mov
rclb
inc
icebp
int3
outsl
xor
cmc
adc
or
ss
pop
decb
xchg
xor
mov
into
or
xor
or
push
xchg
or
mov
call
pop
ds
in
jbe
fs
notb
incl
xchg
mov
incl
inc
idiv
inc
pop
loope
out
dec
sbb
dec
cmp
push
enter
sub
sbb
cli
xchg
sbb
xchg
push
mov
cld
imul
and
int
or
jns
mov
ljmp
popf
fistl
xor
or
cwtl
inc
sbb
jbe
pop
mov
shll
dec
testb
inc
and
fisubrs
xchg
dec
sbb
mov
test
test
mov
pop
and
les
sub
leave
cmc
sub
sarl
add
inc
mov
lods
xchg
xchg
mov
push
add
in
int3
sahf
jns
jmp
dec
dec
xchg
jns
sbb
jmp
xchg
push
push
es
push
xchg
enter
and
dec
adc
push
mov
stc
dec
arpl
and
je
push
aam
lods
dec
mov
sub
cli
rdpmc
xor
lret
mov
gs
adc
jle
aas
dec
rcr
mov
shlb
lcall
mov
pop
xchg
push
pop
fucomp
mov
ret
sar
xor
mov
dec
insb
jg
sti
xor
sbb
pop
lret
and
leave
lcall
xorb
push
std
mov
cmp
add
leave
ljmp
push
movsl
or
das
xchg
repz
stos
pop
adc
mov
aad
out
imulb
fst
add
aad
fsubrl
leave
fwait
mov
movsb
rcrl
fcompl
mov
insb
mov
mov
cli
jnp
scas
push
jmp
js
int
cmc
inc
jecxz
push
xor
fisubl
repz
dec
cmp
add
push
aas
div
push
insb
out
out
out
cmp
fst
stos
in
outsb
cmpsl
push
pop
je
jae
cmp
test
call
push
call
nop
cmp
mov
jno
push
push
xor
adc
dec
ljmp
mov
addr16
imul
adc
mov
push
insb
or
dec
adc
adc
push
add
adc
nop
mov
rcll
push
sbb
lcall
push
mov
cmc
add
jbe
shll
jmp
push
imul
and
mov
shr
and
mov
jb
ja
dec
icebp
cmc
fwait
jbe
aaa
mov
pop
mov
ljmp
push
mov
arpl
rcr
aas
xchg
dec
out
lea
dec
pop
lods
das
push
sub
cwtl
push
pop
imul
ret
inc
stc
imul
dec
inc
lods
cmp
adc
sbb
rol
push
subl
mov
cld
insb
mov
xor
icebp
mov
mov
pop
test
mov
incb
pop
pop
xor
lret
and
addb
xchg
sbb
xor
repz
cmp
mov
fistl
pushf
mov
mov
cmp
mov
mulb
lcall
cmp
mov
push
stos
push
adc
in
xchg
mull
add
test
pop
mov
sub
push
adcl
ss
mov
inc
dec
push
mov
adc
pop
xor
mov
repnz
das
mov
xlat
add
dec
cmp
push
cmp
icebp
out
iret
dec
push
outsb
bound
sub
xor
lods
movsl
ljmp
add
cs
mov
jno
add
pop
and
stos
test
jns
push
mov
pop
lea
fdivrs
mov
jno
jmp
je
std
cmp
repz
and
lods
jmp
add
xor
dec
xchg
fadds
mov
stc
lcall
into
insl
in
int
out
push
xchg
inc
mov
jmp
pop
pop
aad
mov
cmp
lods
mov
lret
mov
pop
insb
outsl
sub
aas
mov
sub
xor
std
mov
js
xchg
pop
sar
mov
push
sbb
push
pop
inc
xor
js
pusha
mov
sbb
hlt
shrl
into
xchg
mull
sub
sub
sub
or
cmc
push
inc
bound
dec
into
mov
movsb
scas
mov
push
stos
xor
dec
sub
repnz
pop
ss
shrl
cmp
mov
mov
jg
xor
push
outsl
inc
inc
rcl
xlat
pusha
xrelease
cltd
mov
dec
and
mov
clc
enter
and
cld
jecxz
cmp
and
push
cwtl
push
xchg
pop
shll
xchg
insl
dec
aad
je
push
xchg
aas
jnp
sbb
lods
or
cwtl
jecxz
mov
mov
jle
enter
lret
andb
ja
shrl
lret
shr
add
test
push
fildl
push
xorl
in
shlb
cwtl
jle
add
adc
pop
jbe
push
stc
bnd
pop
outsl
vcvtsi2ssl
stos
cs
fistps
cltd
sti
out
arpl
pop
sahf
mov
out
cmp
lods
mov
fadds
fwait
jno
fcomi
mov
push
stc
and
push
fdivl
sti
aam
xor
test
mov
dec
ret
mov
nop
shl
in
xchg
xor
movsb
ret
lods
addb
add
jo
jecxz
arpl
dec
pushf
or
ret
lods
ret
cmp
test
pop
sbb
jecxz
fsts
push
rcrb
outsb
mov
lahf
push
push
xchg
hlt
jno
loopne
cwtl
int
and
lahf
or
cmpsb
xchg
cmp
nop
add
xlat
mov
test
pop
cmp
sbb
pop
nop
adc
mov
bound
jecxz
mov
push
lret
inc
xchg
gs
and
pop
in
pop
sub
lret
repz
testl
xchg
jg
dec
dec
test
mov
jno
ds
ficomps
cltd
outsl
adc
xchg
ret
push
sub
outsb
sbb
rol
ds
gs
sub
loope
aaa
dec
fists
push
cld
sub
mov
loop
js
ljmp
cmp
int3
movsl
out
or
ljmp
pop
cltd
dec
sti
cmp
sub
mov
in
xchg
xchg
dec
inc
xchg
nop
inc
stos
in
lea
ss
popa
aam
push
or
lret
mov
call
xor
pop
lods
sub
test
fnstsw
cwtl
lock
or
jge
mov
and
stos
hlt
inc
and
cmp
inc
pushf
repz
ljmp
dec
mov
call
add
sub
pop
adc
fwait
shl
and
xchg
add
mov
enter
sbb
sbb
test
add
stc
lea
push
mov
bound
mov
test
push
addr16
fldcw
call
jg
pop
pop
mov
xchg
mov
stos
fisubl
ret
and
daa
repnz
sbb
adc
dec
lods
mov
arpl
xchg
sbb
add
mov
sub
retw
addr16
inc
mov
adc
lock
add
push
test
mov
and
popf
sti
xlat
mov
pop
imul
jnp
inc
xor
mov
lods
fisubs
ret
jb
cmp
mov
clc
cltd
mov
mov
inc
mov
jle
mov
cmp
test
inc
mov
xchg
push
addr16
jl
mov
aas
pop
inc
pop
adc
cmpsb
out
cwtl
lcall
hlt
and
je
cs
push
add
push
xor
in
lea
inc
push
shll
ds
loopne
jno
push
imul
cmpsb
jmp
push
std
test
mov
fwait
pusha
push
or
add
outsb
loop
cmp
mov
sbb
xor
or
add
jbe
sbb
fdivl
cmp
or
inc
inc
lds
sbb
add
inc
cwtl
aad
bound
in
dec
mov
loop
fdivrs
bound
sub
add
or
inc
out
xor
adc
mov
loop,pn
cmp
imul
mov
push
nop
outsl
es
mov
mov
mov
int
outsb
jo
jb
jl
adc
ljmp
lods
jbe
inc
cmpsb
int3
dec
add
push
cmp
adc
jl
or
ljmp
pop
sbb
push
xchg
push
out
xchg
addr16
int
rcrl
push
cmp
mov
inc
test
add
mov
xor
and
pushf
lods
lods
mov
sub
movhlps
jl
lock
jb
hlt
cmp
xchg
fwait
push
lahf
lcall
and
popf
mov
jbe
rcl
outsl
aam
and
xchg
mov
push
outsw
fwait
repz
lcall
fs
mov
adc
sbb
cli
sbb
jbe
add
lret
cmpsb
imul
jo
gs
fldt
js
pop
xchg
stos
pop
inc
cmp
push
xor
pop
int
sub
jp
outsb
inc
loopne
xchg
or
sahf
sub
cmp
lock
or
jp
cli
andb
in
pop
or
jnp
cmpl
int3
ret
jno
les
roll
push
stos
insl
or
idiv
insb
lcall
das
mov
fwait
mov
push
daa
outsl
xchg
sub
int
lods
aad
cmc
es
xchg
ret
sbb
cmp
clc
push
movsb
and
pushf
cmpsl
cmp
icebp
mov
jns
mov
add
mov
lahf
mov
aaa
sbb
mov
test
adc
popf
pop
andb
repnz
pusha
inc
push
sub
lcall
mov
cmp
aam
mov
push
jmp
loop
mov
fldcw
inc
arpl
inc
das
sarb
xchg
pop
scas
pusha
call
loop
int
test
insb
outsl
sbb
imul
dec
lods
pusha
jle
out
xchg
mov
in
hlt
pop
ja
jb
mov
imul
lahf
mov
xchg
pop
cmpsb
sbb
adc
lret
add
repz
ds
cmpsb
push
rcl
arpl
jmp
fistpll
mov
addr16
inc
xor
add
fcomps
stos
andb
cmpsl
je
dec
lock
outsl
and
mov
push
sbbl
stos
xchg
dec
lods
cwtl
adc
sbb
push
int3
xchg
cwtl
dec
cmp
jno
loopne
insb
bswap
fsubl
pusha
cmp
aam
cld
sbb
cmp
lods
mov
and
cmpl
and
into
jge
pop
mov
cmp
xchg
inc
in
inc
jl
in
and
sub
imul
mov
mov
mov
lods
lret
fwait
outsl
pusha
out
mov
pop
sub
lea
and
ds
mov
push
pop
adc
aaa
push
add
subb
or
xchg
xor
sar
adc
les
pushw
jecxz
int
inc
adc
push
ja
ficoml
and
rclb
leave
xor
mov
or
aad
out
xor
call
in
push
lock
adc
mov
arpl
cmp
sbb
cmp
cmpsl
leave
icebp
call
mov
js
loope
mov
jecxz
push
imul
pusha
push
daa
leave
imul
cli
xchg
int
sub
shl
loop
test
aas
add
mov
sub
sbb
add
adc
jmp
jno
lea
sub
cmp
jp
push
aad
push
sbb
ret
push
jmp
and
int
imul
xchg
adc
mov
jb
push
dec
pop
inc
inc
adc
adc
inc
mov
les
cs
scas
leave
in
lea
mov
push
sub
int
and
sbbb
mov
aam
jp
ja
sub
js
jle
outsl
inc
in
mov
fstl
mov
cmp
gs
sti
popf
fistps
out
imul
pop
lods
jl
sahf
imul
stos
push
arpl
add
and
xor
inc
adc
mov
aam
cmpb
fwait
mov
sub
add
test
ds
sbb
iret
or
pop
or
dec
pop
pop
inc
gs
lcall
dec
or
mov
repz
add
mulb
sti
cwtl
fisttps
mov
mov
roll
pop
or
inc
push
sub
sub
mov
dec
out
ret
adc
adc
testl
dec
out
insb
sbb
jb
loope
dec
pop
loope
adc
sub
repz
or
scas
adc
pop
es
jns
mov
mov
stc
repnz
shl
aaa
add
dec
push
hlt
push
loopne
jg
ficoml
hlt
dec
mov
aam
mov
add
pop
push
loope
cld
sti
push
adc
add
call
arpl
aam
mov
mov
aad
daa
adc
test
inc
inc
fmulp
mov
xor
rcr
mov
inc
notb
sbb
nop
incb
inc
ret
or
movsb
jb
mov
lret
aam
shlb
add
fldt
and
cmp
out
js
pop
dec
xor
pop
add
sbb
js
pop
xchg
mov
icebp
in
stc
mov
jbe
sarb
inc
fdivl
xor
stos
test
aam
insb
clc
mov
idivl
notl
xor
arpl
lahf
mov
dec
adc
pop
push
fisubrs
lcall
inc
lock
jg
add
int3
das
push
and
mov
mov
in
repnz
xchg
dec
mov
sbb
mov
add
out
adc
cmp
outsb
inc
lods
enter
in
bound
leave
ja
in
jle
fstpt
sub
inc
loopne
pushf
pop
fucom
sbb
adc
push
inc
mov
test
dec
das
das
push
mov
test
es
notl
loope
loope
mov
arpl
mov
in
into
mov
outsl
fstl
movsl
sub
jns
xchg
jmp
arpl
in
inc
xor
repz
dec
xor
jecxz
jge
pop
enter
push
jg
jb
sub
es
cs
or
cmp
les
add
jno
dec
adc
and
shll
movsb
shl
ret
cmpsb
out
ret
out
cmpsb
fists
scas
xchg
add
pop
subl
dec
inc
sbb
lods
xchg
stos
or
mov
mov
and
mov
cmp
dec
int
and
stos
sub
mov
xlat
dec
pop
sbb
loope
xchg
push
fsts
adc
call
fadd
rolb
push
dec
scas
cmp
jge
out
ret
pop
fisubrs
jbe
cmp
pop
adc
inc
lods
mov
jno
xchg
dec
add
or
jg
xchg
stos
addb
mov
cmp
cmp
dec
sbb
adc
andl
fld
pop
fisubs
mov
insb
stos
pop
adcb
adcb
mov
cmc
inc
inc
jb
dec
mov
mov
fnstsw
xor
std
ja
cltd
jo
pop
jnp
clc
popa
pop
jg
jnp
add
xor
xchg
adc
shlb
sub
int
imul
mov
or
adc
xor
push
or
fisubl
adc
test
jg
sub
sti
or
sbb
inc
lahf
repz
fwait
mov
mov
cmpsb
inc
inc
inc
sar
lcall
and
inc
imul
shrl
mov
clc
out
sbb
jne
xchg
cs
cmp
xlat
jg
ret
pusha
push
mov
dec
xchg
mov
xorb
subl
out
cmc
outsb
mov
ret
das
jp
jge
cmc
imul
outsl
jae
or
into
out
cli
loopne
add
je
int3
pop
cld
add
cmpl
adcb
mov
into
pop
lock
hlt
fiaddl
in
aam
cltd
stc
aam
dec
in
mov
loop
ljmp
or
cld
aam
out
outsb
mov
jmp
add
cmp
jne
ja
pop
inc
int3
mov
rol
test
in
add
sub
push
call
push
fisttpl
add
rorb
cld
inc
mov
push
xchg
dec
pop
decl
call
xchg
inc
mov
test
ja
cmp
pop
loopne
push
loopne
fisubl
pmulhw
pop
mov
ret
or
enter
dec
icebp
mov
sbbb
fdivrl
push
rorb
mov
add
pusha
rcl
dec
jne
test
xchg
imull
inc
js
inc
nop
cmc
jo
shl
out
add
xor
test
sahf
xor
mov
xchg
lods
ret
cltd
cmp
fiadds
push
subl
jecxz
mov
imul
jbe
dec
jge
jo
push
push
ja
call
mov
pop
mov
push
or
pop
and
mov
sub
jmp
push
add
sub
jl
arpl
and
sbb
addr16
pushf
fdiv
lock
jnp
outsl
jbe
sbb
sbb
clc
loop
jge
popf
or
jge
sahf
push
cli
les
push
ljmp
or
bound
push
pop
cmpsl
sub
sub
push
imul
ss
and
xchg
enter
push
dec
int
or
repnz
inc
pop
jne
mov
xchg
pusha
mov
leave
ljmp
jbe
and
add
lahf
in
or
jns
cmp
add
setnp
jbe
sub
inc
push
loopne
shlb
adc
bound
outsb
push
out
inc
sbb
in
call
fstp
dec
dec
cmpsb
or
faddl
jg
and
jle
mov
and
dec
cmp
push
cmc
test
cmp
je
mov
mov
mov
mov
pusha
push
das
dec
pop
pop
and
sub
mov
aaa
push
adc
and
and
iret
jg
mov
mov
lods
outsl
jne
and
bound
jb
addr16
sti
dec
push
pop
sbb
xchg
sbbl
mov
fsubr
sub
fldenv
fdivs
jb
hlt
sub
mov
and
loopne
xchg
jae
adc
adc
fidivs
rcl
xor
xchg
faddl
hlt
mov
fsubs
xor
push
adcb
hlt
cld
xor
pop
mov
fdivrs
aad
fcompl
adc
test
push
lock
je
scas
xchg
pop
js
ljmp
jecxz
dec
inc
in
mov
cmp
mov
jle
mov
cmp
cmc
add
sbbl
cld
xchg
lret
xchg
popf
dec
aam
jl
jp
aaa
call
fwait
sbb
daa
sbb
push
jge
cmp
mov
dec
cmp
mov
xlat
es
sub
int3
sub
xchg
inc
scas
xchg
adc
xchg
sub
nop
fstpt
inc
jo
sub
loopne
lret
jle
in
jns
push
jno
mov
mov
mov
pop
mov
xor
sbb
sub
fsubs
sub
cmp
leave
pop
adc
in
or
lods
test
xor
xchg
adc
loop
push
dec
push
mov
movups
mov
xchg
add
scas
jmp
xor
or
out
xchg
mov
add
push
and
mov
or
push
sti
lcall
jg
mov
popa
push
dec
popf
das
stc
lret
test
clc
push
gs
lock
cld
adc
scas
shll
iret
jne
and
xorl
lret
addl
xor
fnstenv
loope
mov
or
add
js
sti
shl
daa
pop
stos
pusha
mov
ja
sub
sti
stos
mov
cmp
ljmp
ret
cwtl
test
mov
xchg
xchg
jecxz
hlt
ss
imul
dec
inc
inc
sarb
push
sub
mov
xchg
jb
dec
out
add
int
and
push
dec
dec
fldl
mov
imul
lahf
imull
push
xchg
popa
mov
dec
je
aam
xor
xor
aas
jns
lock
and
dec
jmp
push
lods
sbb
sbb
push
mov
sbb
mov
inc
jmp
mov
push
mov
sbb
inc
xor
sub
rcl
push
push
loop
mov
cld
add
jmp
mov
insl
and
ret
bound
fcmovnu
push
dec
add
push
test
cmp
test
cwtl
adc
xchg
pop
adc
or
adc
loope
lret
arpl
jmp
stos
rorb
push
out
jmp
cmp
mov
cmc
int
sbb
xchg
pop
sarl
test
sarb
aam
sbb
das
add
data16
mov
pop
test
xchg
arpl
leave
push
mov
mov
jp
lret
mov
or
leave
push
pop
rorb
cmpsl
or
inc
push
push
repnz
xchg
ds
outsl
pop
mov
fldl2t
xchg
pushf
add
je
sub
in
mov
push
cmp
notb
mov
and
mov
cmp
dec
ds
pop
popa
cmp
inc
jmp
adc
jle
sbb
cmp
sub
adc
stos
push
sbb
jno
lret
and
out
xchg
cmpsb
pop
or
xchg
xor
mov
insl
hlt
mov
aas
lock
push
in
aad
pop
cmp
inc
jl
jae
cltd
and
inc
leave
lcall
add
push
mov
push
xchg
pop
shrb
push
inc
mov
xlat
lea
sub
mov
cmpsb
and
pop
mov
pop
inc
fistpl
pop
shll
inc
loope
xchg
sub
mov
lcall
mov
or
cwtl
outsb
mov
sbb
mov
jmp
mov
cld
xchg
jmp
dec
mov
xchg
mov
mov
dec
dec
or
adc
push
sub
and
and
arpl
ret
call
rcll
pop
jnp
mov
xchg
mov
mov
scas
pop
mov
jb
mov
out
or
sub
lods
xor
sub
cmc
loope
adc
lock
divl
int
shll
mov
lods
push
mov
scas
mov
std
scas
push
xor
inc
xor
and
je
lods
xor
sti
jnp
mov
mov
pop
inc
insb
xorb
xor
stos
movsb
pop
cmpsl
push
rcrl
push
mov
push
les
jmp
jns
mov
cmp
push
lahf
xchg
std
ljmp
loop
jecxz
rcrl
sbb
cmpsb
xchg
inc
adc
sub
icebp
jae
xor
xchg
cmc
fbstp
xchg
test
std
mov
in
outsb
or
lcall
jae
aam
popa
cmp
push
push
sub
outsb
sar
add
ja
jne
lret
jnp
test
cli
dec
cld
inc
xor
xchg
adc
ret
outsl
pop
mov
iret
xchg
inc
pop
sbb
in
outsb
into
mov
cmp
call
popf
andl
fs
sub
or
xor
icebp
cmp
js
repz
test
sub
cs
negl
fiadds
xchg
stos
mov
js
xchg
dec
mov
mov
xchg
in
ret
adc
js
fs
push
cmpsb
or
xor
xchg
aad
xor
cmp
sbb
cmp
and
shll
arpl
lret
leave
mov
sub
add
call
faddl
and
pop
call
push
std
movsl
adc
roll
aaa
outsl
test
add
popf
xchg
sub
push
jnp
add
divb
shlb
pop
rcrb
xor
aas
xor
rol
xchg
inc
cmp
lock
mov
adc
push
xchg
test
dec
adc
sahf
insl
xchg
jns
divl
popf
sahf
rcll
push
mov
js
in
push
ljmp
stos
mov
outsb
xor
lds
in
add
jne
int3
xchg
iret
mov
adc
pop
bnd
lcall
mov
xchg
sub
push
ds
mov
in
xor
mov
lcallw
add
daa
dec
sbb
mov
lea
in
mov
mov
jbe
lahf
dec
outsl
fdivrl
sbb
les
testl
loopne
mov
test
shll
std
dec
and
or
push
je
and
pop
xchg
xor
sbb
push
adc
ss
sub
push
setg
add
fsubl
lods
pushf
push
js
popa
mov
shll
jae
call
pop
lds
movsb
les
mov
into
addl
popa
xchg
jnp
cmp
rol
push
movsl
add
andb
pop
fsts
or
inc
mov
or
shl
dec
cmp
cwtl
sub
jbe
lods
or
add
loope
adc
in
int
cwtl
fs
mov
ss
and
bound
adc
sahf
xchg
out
mov
xor
in
and
aaa
call
or
in
push
mov
mov
std
inc
mov
and
sbb
mov
xchg
cmp
in
mov
mov
pop
xor
add
cmp
sub
ljmp
into
dec
xchg
jbe
leave
dec
icebp
xor
call
or
xchg
mov
pop
fisubs
cwtl
and
add
addb
ss
add
ret
jno,pn
aaa
push
pop
push
mov
cmp
fnstenv
lock
mov
test
mov
daa
pop
mov
inc
test
ljmp
jmp
add
ret
adc
sbb
leave
pop
mov
pop
stc
jbe
jne
imul
aaa
imul
int
js
jb
scas
mov
repnz
mov
das
sbb
pop
or
das
pusha
xchg
push
loopne,pn
shlb
sub
icebp
pop
rolb
ret
and
fsubrs
js
jg
mov
push
es
pop
adc
das
cmp
nop
sub
jno
into
and
mov
and
adc
xchg
push
xlat
shll
scas
and
push
sbb
xchg
out
in
test
jmp
dec
mov
popa
mov
sub
pop
xchg
xor
dec
mov
dec
push
inc
push
adc
mov
push
mov
rorl
cli
mov
and
xchg
imul
pop
pop
xchg
jbe
daa
jb
sub
arpl
pop
adc
adc
pop
stos
mov
xor
jo
ret
lds
or
add
and
xchg
push
idivl
mov
mov
arpl
add
out
xchg
push
fcoml
inc
push
mov
cltd
mov
push
out
mov
cmc
add
cmp
jg
sub
cwtl
cmp
cmp
adc
das
loop
xchg
stos
repnz
dec
movsl
lds
cmp
mov
mov
repz
pop
xor
insl
mov
sub
imul
mov
dec
dec
sbb
sbb
cltd
xorb
fcoms
adc
mov
outsb
addr16
sub
stos
and
push
lods
jle
cmp
sbb
dec
xchg
test
cmp
out
mov
mov
fmulp
sub
movsb
repz
mov
lods
mov
sar
jl
iret
clc
arpl
sub
pop
test
xchg
jns
fmul
sbb
xor
mov
adc
sbb
sub
sbb
into
sbb
enter
pop
add
lret
push
adc
push
lret
dec
jle
daa
test
push
std
sahf
xchg
shrl
sub
jge
push
shll
pop
sbb
aam
pop
ret
jle
or
fildl
inc
nop
push
jo
adc
loop
rcrl
xchg
call
test
sbb
insb
rorl
jo
jno
xchg
sub
lahf
out
icebp
cmp
push
inc
mov
add
not
mov
cmp
jmp
cmp
repz
xor
daa
sarl
mov
rorb
dec
mov
scas
ljmp
repnz
in
lret
inc
pop
icebp
lret
cld
xchg
gs
cmp
push
xchg
and
lock
mov
dec
mov
mov
pop
popa
and
test
call
xchg
jge
cmp
jge
inc
repz
xor
push
or
sbb
dec
mov
outsl
adc
or
adc
in
sbb
sahf
not
cmc
pop
loope
sbb
imul
mov
xlat
push
push
inc
inc
lods
ds
cli
add
or
dec
or
pop
test
faddl
rcll
out
push
hlt
pop
mov
sahf
mov
cmpsl
cmpsl
popa
js
fsubl
cmp
xchg
js
into
cmpsb
loopne
push
mov
push
call
aas
dec
cmp
inc
ror
lods
popf
das
and
mov
jb
jne
pop
pop
repnz
mov
cmp
sbb
test
out
aad
sbb
cwtl
push
xchg
stc
xchg
cmp
aas
outsb
sahf
jns,pt
rcll
push
addr16
push
mov
fadd
mov
sub
inc
outsb
cwtl
aaa
fldenv
and
or
add
mov
mov
idivl
jne
sbb
js
push
mov
popf
rcrb
aad
aam
or
daa
xor
shlb
mov
inc
je,pn
dec
pop
aad
in
inc
dec
cli
push
jae
jg
add
lahf
jno
clc
and
xor
cmpsb
dec
mov
cmpsb
into
jno
rorb
or
inc
mov
inc
and
fstpl
inc
xchg
mov
ljmp
mov
xchg
sub
pop
xchg
xchg
cmp
push
pop
pop
insl
lret
es
imul
bound
fbstp
and
xchg
xchg
mov
lods
sahf
les
mov
mov
jl
leave
rcrl
test
jns
call
out
mov
mov
jnp
push
jo
or
pop
cmp
mov
jb
mov
push
cli
or
aas
mov
pop
pop
lods
sbb
stos
jnp
xchg
mov
mov
dec
loop
mov
dec
sahf
push
fcmove
gs
inc
xchg
sub
inc
les
cmp
push
or
scas
mov
sub
and
jne
test
adc
xchg
inc
cmp
lret
mov
loopne
cmpsb
ss
bound
adc
jne
imul
push
or
repz
jns
jns
sbb
imul
jbe
dec
sbb
in
and
push
dec
jmp
repz
sub
mov
push
jl
pop
or
cmp
std
roll
dec
cmp
fdivs
mov
aam
movsl
cmpl
push
dec
or
mov
hlt
push
or
add
setb
mov
mov
sbb
xchg
jnp
pop
xor
fldenv
lock
popf
cmp
out
cmp
or
pusha
xchg
sarl
xor
xchg
sbb
inc
jp
daa
push
inc
or
inc
lock
sub
std
loopne
shrb
add
cmp
scas
insb
dec
xchg
gs
mov
cli
and
sbb
mov
ret
add
inc
es
xor
mov
jecxz
mov
daa
push
add
flds
adc
push
jge
xor
int
arpl
leave
cmp
je
xorb
xor
jl
or
xchg
sahf
les
jb
pop
adc
ljmp
aam
adc
test
and
in
dec
push
enter
or
pop
pop
jge
stos
mov
fcoms
inc
cltd
shlb
sarb
inc
mov
pushf
mov
sub
cmp
ja
and
out
push
xor
xor
cs
or
dec
mov
loopne
int
mov
daa
adc
adc
fstl
pop
insb
mov
inc
inc
int
adc
mov
sub
in
pushf
sarb
vmovntps
insl
mov
xlat
fmuls
mov
adc
xor
movsl
push
leave
xor
sub
stos
fdivrs
and
out
test
mov
js
or
push
sti
in
adc
bound
inc
or
ret
inc
ror
lret
lds
test
insl
rolb
xor
les
mov
xchg
push
hlt
fisubrl
add
out
out
mov
lcall
stos
fwait
into
dec
enter
scas
push
mov
dec
dec
adc
pushl
out
pop
les
stos
loope
stos
push
stos
les
mov
jnp
sti
adc
and
push
imul
xor
sbbl
push
or
stos
adc
test
and
jne
in
ret
inc
std
into
xchg
jecxz
mov
fnstsw
and
call
mov
mov
lods
rol
push
out
mov
aad
xchg
mov
insl
pop
dec
insb
push
cmp
es
cmpsb
xchg
dec
or
adc
fidivrl
mov
jno
lret
rcl
fcomp
dec
mov
mov
aaa
inc
lods
iret
add
test
popa
shll
mov
jae
jno
inc
adc
cmp
scas
adc
mov
jae
and
mov
out
inc
mov
lret
jo
push
daa
mov
pusha
mov
or
and
fadd
push
call
mov
arpl
int
test
push
loop
jns
xlat
iret
imul
aad
frstor
sbb
xchg
mov
xchg
in
xor
cmpsl
push
pop
mov
lcall
rclb
insl
sub
ja
sbb
pop
xchg
ljmp
stos
or
push
inc
insb
out
mov
xchg
mov
imul
or
jecxz
jb
mov
and
and
pusha
add
inc
mov
xor
outsl
pop
outsb
jo
mov
loope
sbb
int
imul
imul
or
fldt
pop
leave
enter
jae
lret
aaa
scas
syscall
les
inc
mov
and
mov
clc
mov
stc
add
test
add
call
out
sub
popf
icebp
sub
fcmove
xchg
inc
mov
lods
stc
sti
pusha
pop
outsl
test
or
pop
stos
lret
sti
mov
bound
mov
jno
ficomps
adc
sub
cmp
dec
mov
bound
jg
shl
mov
sbb
xor
movsb
mov
in
stos
fucomp
call
ja
not
inc
aas
mov
push
pusha
xor
xor
ret
push
push
push
into
pop
adc
cmc
mov
test
movsl
and
adcb
xlat
push
push
pop
inc
into
aam
popf
les
out
leave
sti
dec
sarb
orl
sbb
sub
loope
jnp
adc
daa
pop
xor
cmp
xchg
xchg
dec
jmp
stc
out
sub
pop
or
cmp
mov
test
xorl
int3
int
sub
fisubl
inc
mov
inc
movsl
nop
dec
out
inc
mov
popa
sub
push
add
inc
ds
adc
ret
adc
sub
add
arpl
push
fbstp
dec
fnstenv
loope
ret
in
mov
xchg
iret
aam
sbb
or
hlt
into
inc
jmp
push
mov
cld
push
sub
outsb
loopne
mov
dec
mov
roll
ret
clc
mov
mov
pop
imull
out
iret
xchg
jae
mov
test
push
cmp
cwtl
in
into
push
and
adc
push
sbb
add
jnp
mov
xor
and
push
pop
mov
sbb
dec
addr16
das
xchg
xor
out
dec
pop
xchg
jns
lods
jle
sbb
mov
iret
push
xchg
lret
mov
cltd
dec
in
and
orb
sub
sub
xor
mov
and
sub
cmp
test
arpl
rorl
lods
pop
shll
jne
add
aas
pop
aam
xor
mov
cwtl
push
pop
sub
iret
or
xchg
inc
sti
push
sub
sub
idivl
dec
lods
imul
jl
mov
in
mov
inc
roll
mov
cltd
test
movsb
in
adc
fwait
cmc
out
xchg
push
dec
enter
dec
xchg
pop
dec
xchg
repz
push
insb
mov
adc
mov
in
sub
mov
dec
int
cmp
ret
stos
mov
cmc
int3
mov
sbb
not
stos
shr
out
out
adc
fdivrs
push
imul
sub
adc
int
out
push
aad
popa
test
pop
les
xor
roll
dec
pop
mov
jno
jno
mov
sbb
iret
pop
add
cmp
popf
cmp
fisubrl
adc
push
xchg
mov
imul
jbe
movb
sbb
pop
adc
jne
mov
std
mov
lds
sub
fcomi
mov
jne
push
leave
xor
inc
jle
push
arpl
add
sub
ror
xor
inc
repnz
xor
or
insb
sub
xor
push
and
nop
insb
jno
outsb
leave
inc
test
cld
adc
imulb
push
mov
je
int3
adc
lahf
dec
cld
push
mov
mov
jp
cmc
mov
jl
jecxz
std
jmp
inc
popf
sub
jmp
data16
push
pop
mov
dec
movsl
lods
dec
in
ds
jecxz
inc
pop
jp
stos
sub
push
lret
sti
jmp
xchg
add
fstl
ds
pop
adc
sti
jmp
and
ja
outsb
lahf
push
test
jns
add
cmp
test
bound
outsb
rcrb
aaa
xchg
push
js
cmpb
cs
dec
das
or
lea
mov
inc
xchg
fisubrl
lahf
cmpxchg8b
sub
xor
mov
add
push
fmull
inc
ja
mov
call
mov
xchg
jl
mov
xlat
mov
cmpsb
add
mov
xchg
sbb
pop
cmc
iret
test
jl
in
js
mov
push
mov
jmp
push
add
sbb
cmp
adc
loop
sbb
in
cmp
std
mov
imul
mov
push
loop
push
mov
into
enter
lea
outsl
inc
testl
sti
leave
cmc
orb
add
jp
out
push
ret
scas
cmp
outsb
daa
clc
js
test
jl
pop
mov
clc
mov
ror
out
xor
jbe
shlb
mov
stos
aas
fsubrp
and
orl
xchg
outsl
sbb
inc
add
add
push
push
test
push
pop
jnp
pop
cmp
dec
mov
sbb
xchg
fwait
inc
dec
pop
in
int
lods
in
les
in
test
push
jg
adc
pop
jge
mov
dec
repz
in
sub
jmp
cltd
xor
push
cmp
gs
push
lahf
cmp
inc
inc
jecxz
cmp
in
lock
shld
test
jmp
adc
xorb
ror
pushf
lahf
sub
dec
sahf
jb
imul
adc
leave
fs
loop
jo
or
loopne
mov
dec
icebp
lahf
and
imul
xchg
dec
mov
xchg
jg
add
lret
ret
scas
pop
sub
out
lret
ss
pop
mov
fisubl
jge
mov
jg
les
icebp
push
in
gs
mov
inc
xlat
mov
test
cmp
orb
dec
fbstp
aad
sarl
mov
cmpsb
loope
fsubp
pop
inc
mov
fwait
lds
mov
sarl
sub
scas
and
adc
pop
push
push
mov
lea
into
push
mov
shrb
pushf
mov
subl
cmc
mov
aas
cwtl
jne
fcomps
jg
fdiv
out
jo
mov
push
dec
ret
dec
jl
push
sub
ljmp
xchg
sbb
imul
push
sbb
icebp
nop
cmp
addl
fwait
jns
mov
into
dec
movsb
xlat
test
das
into
lahf
and
pop
cmovb
ds
pop
xor
cmp
out
inc
jge
inc
adc
aam
sub
add
in
jmp
sti
xchg
inc
or
mov
fcomp
mov
add
or
pusha
sub
pop
ficoms
cld
sbb
mov
es
push
cli
pop
aaa
pop
js
adc
inc
jp
shll
adcb
jg
mov
sbb
das
fcomi
jecxz
or
xor
lcall
shr
push
addr16
mov
pop
hlt
mov
popf
js
scas
imul
cmp
cmp
gs
fwait
sub
scas
lods
in
das
cmp
and
mov
icebp
icebp
mov
lret
mov
inc
and
add
imul
mov
fwait
cmpsl
outsl
jg
insb
xchg
das
loopne
pop
bound
jno
lahf
lahf
int3
push
jnp
shlb
fcoms
jnp
cli
and
push
lods
and
out
dec
bound
cmp
cmp
hlt
xchg
andb
cli
mov
rcrl
dec
sub
jnp
pop
add
xchg
or
xchg
mov
popa
cltd
jo
push
sbb
fcompl
popa
mov
inc
and
pop
push
lods
ret
insb
decb
xchg
adc
sub
test
sbb
mov
xchg
push
xor
add
sahf
lcall
push
push
gs
and
sbb
sub
adc
enter
test
add
jle
sub
push
sahf
insl
lods
int3
insl
push
add
daa
xor
int3
adc
stc
sarl
aaa
adc
jne
je
jne
and
arpl
iret
mov
push
push
add
cld
mov
cmpsl
mov
movb
cmc
sti
jne
mov
adc
ljmp
dec
repnz
repnz
sub
repz
mov
sub
ds
fs
inc
mov
roll
loope,pt
fcomps
hlt
mov
push
js
push
xor
cmp
inc
shll
jb
sarl
sub
mov
ljmp
pushf
neg
call
insb
sahf
test
aaa
mov
sbb
rorl
lock
fldenv
mov
outsb
xchg
imul
xchg
inc
add
push
enter
imul
scas
add
or
test
cltd
movsl
jnp
or
pop
lahf
dec
xlat
add
test
daa
sbb
mov
pusha
cmpsl
in
stc
inc
int3
neg
out
cmp
imul
cmp
mov
in
clc
xlat
inc
pop
in
xchg
jb
stos
inc
sbb
mov
lea
pop
mov
lahf
loop
add
sub
inc
mov
xor
outsl
insl
sti
adc
lock
push
xor
out
and
or
and
pop
ret
jle
jbe
mov
add
popf
mov
cmp
and
cwtl
mov
jnp
mov
push
and
sub
jmp
pushl
test
sub
fcomp
cmp
shrb
inc
shll
xchg
cld
mov
mov
out
inc
sti
test
fistpll
dec
es
push
aad
out
jle
repz
fwait
out
fwait
push
rcr
shr
jno
aad
add
scas
inc
out
push
xchg
sub
push
pusha
jmp
mov
xor
push
lds
das
xor
mov
rorb
inc
adc
jp
push
cmpsb
xchg
dec
or
mov
imul
sbbb
aaa
imull
dec
adc
arpl
ja
mov
and
mov
test
mov
orl
addb
inc
sub
and
mov
aas
pop
mov
das
es
imul
jp
mov
cmp
cmp
sub
add
mov
cmp
test
pand
mov
mov
adc
popf
sarb
mov
lds
ret
xchg
lods
outsl
fcoml
fmuls
ret
fcompl
sbb
popa
mov
jo
popa
push
sahf
jmp
cmp
inc
fnstsw
movsl
pop
xor
cld
pop
das
lods
mov
dec
pop
js
jae
mov
stc
mov
les
fsubrl
insl
fistl
repnz
out
sub
andl
mov
mov
adc
roll
inc
andb
add
jns
dec
aad
ja
mov
js
push
test
inc
sub
popf
mov
aas
jne
inc
lret
sahf
sub
mov
scas
jo
or
mov
mov
jns
repnz
xlat
cltd
into
repz
in
imulb
lcall
jl
fmuls
addr16
mov
std
nop
ret
mov
xlat
xchg
insb
adc
pop
fs
jmp
add
dec
ljmp
lret
popa
xchg
xlat
xchg
mov
dec
out
sbb
xchg
push
dec
or
jb
fisttpl
movb
ret
in
pop
cli
dec
scas
jle
dec
les
cmp
pop
addr16
imul
xchg
orl
cmp
lret
dec
jb
lea
test
add
push
mov
mov
ljmp
pushl
jecxz
sbb
loop
lret
popa
mov
test
cmpsl
adc
and
lret
mov
xor
xor
mov
pop
xchg
mov
mov
cwtl
and
xchg
mov
adc
adc
mov
bound
push
lret
lcall
mov
shll
and
and
jle
andl
cmp
sub
push
pop
jb
pop
and
inc
loop
lcall
mov
mov
in
mov
cmp
jmp
sbb
mov
dec
in
mov
cmp
push
mov
popf
or
es
xchg
andb
pop
dec
roll
sbbb
sbb
mov
mov
mov
das
loope
mov
add
pop
sbb
jo
mov
scas
loopne
out
pop
sahf
ret
push
cltd
sbb
cs
test
jne
inc
jae
push
and
add
xor
es
fadd
js
mov
movsb
add
gs
inc
imul
mov
pop
repz
enter
divb
movsl
dec
lahf
push
cmp
adc
push
insb
hlt
add
sub
ss
push
dec
dec
push
sti
fldt
jnp
cmp
sbb
gs
pop
mov
mov
data16
adc
lret
neg
and
mov
test
push
mov
scas
inc
jle
xchg
cmpsb
ficompl
in
scas
mov
push
sub
cmp
out
jl
out
aad
loop
ja
jp
mov
fcmovnbe
rclb
sub
jae
inc
sbb
cmp
push
imul
rcrb
nop
cwtl
hlt
icebp
enter
dec
insl
xchg
pop
pop
push
stos
pop
leave
add
lds
mov
cmp
jbe
xchg
dec
dec
pusha
cmp
scas
test
in
es
outsb
sbb
ret
jle
dec
icebp
xorb
int
rcrl
xchg
lods
xchg
repnz
jno
rcrl
adc
jge
add
clc
and
inc
dec
pusha
pusha
aaa
aas
sahf
xchg
test
inc
fisubl
inc
js
shrb
mov
and
mov
mov
mov
jno
addr16
mov
add
adc
mov
pop
mov
aaa
dec
sbb
dec
push
fbstp
fsts
jl
ja
mov
imul
push
push
and
xorl
into
repnz
je
ret
movsl
push
loopne
flds
pop
fxch
jnp
repz
mov
dec
scas
or
and
lahf
inc
mov
xchg
xchg
in
test
das
in
cld
outsb
xchg
push
scas
sub
sbb
jge
inc
jl
adc
pusha
ds
into
inc
and
sti
add
xchg
inc
inc
adc
test
sbb
scas
jno
xchg
cli
pushf
add
jecxz
pop
mov
mov
pop
jno
movsl
test
mov
dec
das
mov
imul
clc
lock
and
lock
xchg
mov
xor
imul
cmp
dec
sub
mov
dec
sub
sahf
pop
ja
add
cmpsb
add
and
je
mov
loopne
dec
sub
sbb
lds
cmc
and
mov
lahf
mov
adc
add
fisubs
pop
mov
insb
add
imul
call
enter
js
out
hlt
ljmp
call
mov
adc
mov
jo
xor
sub
xor
or
mov
pop
scas
je
js
push
jecxz
mov
dec
sysexit
pop
sub
enter
push
mov
stos
and
stc
enter
or
cmp
xor
push
dec
push
roll
mov
loope
sbb
push
xchg
shrl
outsb
add
cltd
enter
xchg
movl
mov
shll
fcmovnbe
jle
cwtl
mov
push
add
cmpl
cmp
xor
test
stc
jl
xor
jmp
bswap
sub
dec
pop
or
int3
pop
imul
ret
cmc
andb
js
cmp
sub
repnz
push
sub
shll
xor
fwait
xor
loop
mov
cmp
jbe
push
aad
popa
push
adc
adcl
out
test
movsl
icebp
adc
xchg
insl
pop
lcall
repz
mov
dec
lahf
in
ret
lods
inc
xchg
imul
imul
lea
mov
iret
inc
add
andb
xchg
xor
stos
mov
lods
sbb
xor
clc
rolb
add
lock
je
pop
mov
push
imul
pop
inc
std
call
mov
inc
push
jl
inc
ja
pop
jecxz
fstl
lods
test
ret
jnp
sub
push
lret
aas
mov
mov
mov
mov
mov
icebp
aaa
cmpsb
insl
popa
outsb
dec
lds
mov
test
sbb
imul
adc
mov
and
and
sahf
and
inc
inc
js
or
cmp
inc
cmp
push
mov
subl
aaa
cmp
lahf
in
test
imul
sti
xlat
mov
mov
hlt
outsl
xchg
ret
outsl
dec
and
jecxz
repz
mov
lock
sub
cltd
jp
cmp
xor
xor
jo
xchg
in
cs
dec
xchg
cmp
xchg
pop
addb
mov
flds
aaa
enter
sarb
add
push
and
inc
cmc
insl
cmp
rcl
pop
loop
stos
xor
lods
pop
sbb
jae
jbe
cmp
push
mov
xor
xchg
xchg
pop
in
xchg
outsl
lahf
jne
mov
lock
out
dec
xor
sub
xchg
push
mov
dec
scas
ss
cli
and
xchg
sbb
scas
mov
or
lds
inc
int3
inc
dec
ds
pop
xor
ljmp
popf
jo
dec
sbb
cmp
pusha
lret
mov
sti
and
popa
pop
push
push
out
stos
arpl
daa
push
mov
inc
lods
lea
push
cmp
xchg
shlb
filds
cli
add
mov
sub
xchg
test
xchg
fs
add
daa
mov
mov
lods
lcall
jge
inc
jb
mov
mov
lods
jns
mov
pop
es
fsubl
daa
fcmove
sub
inc
xchg
pop
xor
push
scas
xchg
and
or
movsl
jbe
add
sbb
push
imul
imul
insb
bound
xchg
mov
lock
push
jbe
push
push
mov
adc
ljmp
aas
aaa
or
sbb
js
mov
sub
dec
or
dec
movsb
push
adc
in
dec
push
and
mov
ret
es
add
dec
mov
cli
shlb
jne
mov
fcmovnu
xlat
xchg
mov
xor
cmc
popa
mov
or
push
inc
clc
mov
or
fcmovnbe
in
lret
filds
ss
xor
push
xchg
ljmp
int
test
iret
in
lret
rolb
insb
mov
mov
outsl
lahf
lods
sbb
ds
int3
sub
cmp
insl
or
pop
or
and
xchg
pop
mov
cwtl
sub
or
ds
xchg
fisubs
sbb
push
dec
insb
jg
dec
or
aaa
push
inc
adc
cltd
mov
pop
shl
and
add
dec
sbb
fnstenv
test
jb
push
push
ja
out
xchg
lea
push
jb
mov
cmc
lock
and
push
jae
lock
loope
mov
mov
mov
mov
mov
mov
jns
dec
aad
push
popa
aad
jle
mov
stos
dec
cmp
cmpsl
pop
mov
push
das
pop
popf
or
xchg
adc
daa
pop
les
pusha
aad
imul
cmp
andl
dec
jbe
lea
cmpsb
sbb
pop
es
inc
sbb
mov
add
cwtl
aam
daa
stos
cmpsl
and
mov
adc
imul
icebp
daa
out
xor
jb
outsl
sbb
push
inc
les
and
ds
mov
dec
pushf
into
std
sub
add
push
adcl
mov
icebp
cmpsl
cmpl
ljmp
or
cmp
stos
jge
xchg
repz
outsl
lcall
sbb
jne
mov
outsb
int3
jmp
ss
inc
push
divb
imul
pusha
pop
repnz
out
cmpsb
in
test
ja
xchg
loope
dec
add
mov
ficoms
aad
and
xchg
mov
sbb
fdivl
incb
cmpsl
jae
jecxz
dec
adc
cltd
cmp
sub
das
ljmp
xchg
lods
adc
cmpl
cwtl
xchg
aam
pop
jno
ljmp
test
dec
leave
cmp
addr16
out
pop
call
lret
nop
or
popa
cwtl
bound
cmp
dec
jle
jae
inc
icebp
mov
sbb
dec
adc
jle
movsb
imul
stc
cld
adc
orb
sbb
ljmp
nop
mov
xlat
push
ret
cmp
jbe
or
sbb
adc
leave
test
popl
sub
xchg
scas
add
lds
mov
adc
mov
adc
bound
push
dec
js
adc
fimuls
ret
or
xor
ret
add
std
xchg
xor
sbb
mov
and
dec
in
xor
shll
lds
rolb
xchg
aad
cmpb
fisubrs
mov
arpl
xor
pop
bound
test
js
cmc
cmp
jge,pt
and
adcb
mov
push
inc
mov
jno
fstpt
lcall
lea
add
fstl
popa
xchg
loope
push
les
mov
fnstcw
xchg
test
pop
cmp
cmp
sub
popa
movsl
leave
jns
xlat
pop
outsb
test
sub
enter
add
xor
sub
sbb
or
enter
icebp
add
mov
outsl
jg
jmp
dec
xchg
cwtl
je
imul
insl
lock
inc
mov
jo
sbb
stos
add
or
filds
movsb
sahf
int
cmpsb
aaa
push
es
push
and
mov
out
mov
insl
sub
pop
lea
mov
push
mov
mov
test
ss
in
sbb
pop
and
in
push
mov
ljmp
in
mov
jp
sahf
fsubrl
push
testb
xorb
jmp
push
inc
out
xchg
stc
inc
push
lds
rep
mov
jp
divb
lcall
xchg
jmp
jle
jb
pop
call
popf
push
jne
aaa
mov
xor
sub
das
sbb
jl
pop
dec
mov
xor
and
test
cld
pop
fcompl
outsl
icebp
cmp
call
inc
arpl
fildll
cmpsl
pop
mov
xor
icebp
cld
fsts
inc
repz
aad
jb
repz
outsb
leave
ja
fs
cmp
add
jbe
sbbb
xor
bound
inc
add
test
punpckhwd
xor
fs
mov
mov
test
ret
pop
mov
mov
negl
xor
test
outsb
cmp
inc
dec
mov
sub
xor
pushf
cmpsb
inc
ljmp
std
pop
cli
mov
xchg
ds
add
xlat
outsb
jne
mov
xor
cmpl
dec
out
xchg
mov
mov
push
mov
gs
addl
mov
push
fidivrl
jp
mov
pushf
xor
cmp
outsl
in
dec
es
ljmp
mov
les
data16
sbb
movsb
ret
add
sbb
push
xchg
push
loope
xor
adc
inc
push
decb
and
decb
pusha
lds
mov
je
int3
sub
push
int
dec
testl
fidivs
push
xor
cmp
in
lods
mov
push
adc
loope
jae
bound
mov
movsl
lea
std
jmp
inc
dec
mov
mov
es
cmpsl
and
ret
sbb
rclw
inc
dec
hlt
jns
popa
cmp
inc
mov
cmp
lods
cli
add
mov
fmull
or
shrl
daa
gs
jns
bound
jb
fldcw
hlt
and
pop
adc
addb
push
jge
lahf
mov
jl
outsl
dec
fwait
sti
jp
cmp
and
pop
or
ljmp
bndldx
xlat
adc
sti
ds
mov
or
adc
push
ljmp
es
dec
cwtl
push
aaa
cmp
enter
shlb
popa
mov
dec
mov
icebp
or
xor
scas
xchg
push
loopew
test
cmp
ret
sbb
stos
int
stos
push
ret
jmp
movsl
leave
and
in
jl
pop
in
call
xor
and
shlb
shrl
scas
push
mov
icebp
test
fiaddl
int3
xchg
lods
xchg
in
lcall
clc
js
cmp
lret
xchg
pop
movsl
mov
sbb
icebp
out
leave
pusha
dec
cmpsb
mov
xor
les
pushf
int3
cld
out
dec
out
mov
dec
and
mov
sbb
out
sub
test
push
jae
pop
fisttps
incb
int3
cmp
addr16
cmp
int
loope
push
push
loop
xor
push
mov
cmp
lcall
mov
repnz
icebp
idivb
shll
addr16
sub
xchg
cmp
rorb
rorb
inc
jns
loope
dec
dec
js
movsl
jno
and
das
data16
out
popf
repz
das
push
or
sub
data16
jnp
out
jg
pusha
xlat
js
bound
add
add
es
mov
mov
inc
add
dec
or
sub
js
cs
aad
dec
pop
pop
cmp
ficomps
sbb
dec
mov
adc
pop
mov
jp
adc
pop
sbb
xlat
jo
mov
jb
decb
xchg
push
out
cmp
loopne
mov
fidivs
cmp
decb
sbb
xchg
rorl
popf
push
jmp
dec
ds
subl
popa
add
int3
adcb
outsb
sarb
mov
lea
ret
xchg
loopne
fnstsw
pop
fstpt
imul
mov
insb
imul
adc
aaa
xor
aaa
fisubs
stc
pushf
and
repz
aaa
lods
cld
xadd
scas
and
xor
cmpsl
xchg
mov
std
scas
dec
jae
pop
in
xlat
or
pop
jae
push
and
jno
cmc
pop
insb
imul
std
and
adc
xchg
push
int3
xor
xor
mov
push
arpl
inc
lret
ret
adc
adc
pop
dec
int
mov
int3
jbe
iret
ljmp
mov
ret
in
jg
nop
cmp
hlt
leave
imul
xor
mov
int3
cmc
ljmp
cmp
sbb
sbb
mov
xchg
fdiv
popa
jb
cmp
test
xchg
adcb
push
pop
push
sti
sahf
cmc
xchg
pushl
adcl
arpl
cmpsl
push
push
popa
in
push
in
jne
sbb
cmp
or
sub
rcrb
out
imul
jmp
xor
fsubr
mov
out
cmpsl
pop
repz
add
pop
pop
jecxz
pop
inc
ret
sub
adc
sbb
fwait
push
repnz
mov
cmp
movsl
xor
dec
inc
aad
sahf
int
loop
lea
add
cmp
leave
ja
adc
mov
xchg
adc
dec
cmpsl
push
pop
push
cmp
repz
dec
jmp
psubw
jmp
cltd
mov
shrl
repz
lahf
xor
mov
shlb
jge
xor
popa
outsl
xor
sub
xchg
or
subl
fidivs
xchg
dec
and
pop
jle
stos
shlb
sub
scas
adc
pop
mov
sub
js
cli
lods
jno
mov
dec
push
pop
push
in
int3
int3
push
sti
fnsave
in
mov
dec
and
mov
sti
test
movsl
popa
adc
fnstcw
or
adc
jg
lcall
lock
push
pop
pop
xchg
bound
add
or
dec
jp
mov
mov
dec
rcrb
andb
fsubrs
jne
inc
ja
sbbl
mov
push
popf
mov
or
mov
add
xor
xchg
repnz
adc
es
xlat
or
clc
js
xchg
ret
lahf
sbb
pushl
les
dec
scas
inc
pushf
stc
add
jg
mov
adc
pop
dec
xchg
push
cwtl
or
jae
ja
icebp
cmp
adc
loope
lods
adc
enter
sbb
mov
and
sub
mov
icebp
fsubrl
mov
push
and
sbb
andb
jo
in
clc
mov
sahf
inc
sbb
mov
movsb
add
lea
fs
ret
jns
mov
cli
dec
pop
loopne
js
and
stc
test
notb
cld
xchg
add
movsl
pop
push
sbb
lahf
and
shlb
xchg
mov
mov
out
push
in
push
dec
jae
or
insb
std
sub
xchg
outsl
mov
push
stos
xor
sbb
cwtl
push
push
inc
sbb
test
push
mov
enter
xor
adc
pop
or
sarl
xchg
aam
js
adc
iret
jne
jno
xchg
ror
xchg
lcall
shlb
pop
adc
sub
mov
loop
mov
sbb
add
xchg
fldcw
mov
add
jg
jbe
std
sbb
bound
jo
repz
inc
scas
rol
call
aaa
pop
mov
nop
jle
inc
mov
lods
push
stos
ja
mov
push
jns
fsubl
cmp
in
imul
pop
out
mov
repnz
push
das
or
mov
mov
mov
repz
sub
ret
ja
lods
jo
negl
fsub
aad
ja
mov
filds
shlb
dec
jp
dec
pop
add
mov
pop
test
sbb
fs
loope
stc
and
cmp
mov
sbb
stos
jp
add
rclb
mov
sub
mov
test
outsl
int
jge
and
sub
les
inc
adc
int
sub
dec
mov
xchg
in
jp
push
jb
push
jb
pop
add
loope
out
subb
clc
fmul
and
call
dec
mov
adc
adc
mov
cmc
rclb
dec
add
lahf
or
loop
jmp
sahf
push
test
xchg
mov
or
aaa
mov
push
xchg
aas
and
mov
out
sbb
inc
rcrl
sub
rcrl
fs
cmp
sbb
hlt
cwtl
jbe
and
nop
das
cmp
negl
jecxz
lret
or
pop
pop
and
popf
fnstcw
dec
lret
cmpsb
loope
pop
jge
sarb
cmp
into
xor
push
popf
dec
adc
or
and
lcall
push
and
push
aam
imul
mov
rorl
or
inc
loopne
cmpl
cmp
lods
inc
mov
jl
sub
loopne
leave
mov
loope
push
mov
cmp
cmpsl
mov
xchg
shll
sbb
insb
inc
inc
mov
or
jns
cmpsl
mov
mov
or
xor
lahf
insl
mov
imul
dec
mul
push
testb
push
xchg
xchg
insl
repz
sub
movsb
imul
and
xor
rorl
bound
pop
sbb
repnz
aaa
add
dec
sub
push
rcrb
xchg
nop
push
outsb
xchg
xor
add
pop
sti
iret
cmp
lds
movsb
mov
xor
push
jne
jmp
dec
je
push
jecxz
in
iret
filds
jg
in
leave
loop
outsb
and
xor
mov
add
jne
sarb
sub
push
fs
das
xchg
add
mov
push
mov
sbb
into
adc
mov
test
enter
inc
cmpsl
imul
rorl
loopne
int
lret
gs
dec
adc
aam
data16
pop
push
xor
inc
sbb
inc
mov
cmp
push
repnz
mov
push
mov
xor
push
fwait
xor
mov
jp
cli
int
loop
lret
bound
je
pop
fdivs
orl
aas
inc
xchg
shrb
mov
mov
mov
mov
push
mov
sbb
push
push
test
sub
ret
loop
or
sub
sarb
lcall
sbb
pop
jecxz
mov
xchg
sahf
or
stos
adcl
xchg
and
pop
add
call
loope
inc
jmp
insl
and
addb
aas
orb
daa
rol
or
xchg
rcrb
out
jo
ret
or
shr
jne
or
jl
out
loope
cmp
jmp
mov
imul
add
adc
cmp
sbb
sbb
lods
sar
xchg
into
fsubr
push
adc
dec
and
movsl
push
cmpsb
cwtl
jmp
sbb
xor
push
cmp
xchg
cwtl
mov
sub
mov
fucomi
stos
shlb
call
fiaddl
repz
mov
pop
scas
mov
repnz
xchg
fadd
dec
gs
mov
stos
cli
mov
jle
fisubrs
fdivrl
mov
xchg
lcall
neg
and
aas
lds
jb
mov
fsts
pop
out
loopne
cwtl
fwait
sbb
inc
adc
jbe
sub
sbb
inc
loope
xchg
jne
ljmp
sub
mov
fwait
inc
adc
push
jle
cmp
fs
dec
pop
and
fisubrs
in
into
xchg
sub
xchg
es
fstl
test
or
imul
add
lock
movsb
add
inc
jp
xchg
call
inc
test
and
cld
or
jae
int
test
scas
jae
inc
hlt
jmp
movsl
shll
test
cmp
arpl
jbe
jbe
cmp
cmc
jns
xlat
inc
in
mov
jmp
xchg
pop
push
sbb
cli
cltd
jge
testb
xor
stos
ret
movsb
outsb
jae
adc
movsl
jmp
pop
add
sub
call
je
test
rcll
or
ss
dec
jb
aad
and
push
or
add
push
and
add
pop
mov
or
movsb
inc
adc
in
add
fcoms
pop
jns
push
je
xchg
rcrb
xrelease
mov
aas
lock
or
cmpsl
sbb
jns
es
call
imul
and
aas
sti
daa
sub
popf
mov
fsubrs
mov
loopne
and
jmp
insl
test
mov
mov
pop
xchg
js
addl
push
xchg
mov
insb
mov
cs
popf
and
sub
scas
mov
in
lret
daa
sbb
daa
outsl
dec
popf
xchg
push
add
and
test
outsl
lret
hlt
les
stos
mov
lret
cmc
mov
push
xor
xlat
mov
ljmp
pop
rorl
pop
ret
repnz
daa
out
push
xchg
jp
into
xchg
adc
mov
pop
adc
rolb
pusha
mov
in
cmc
loope
and
pop
push
cli
mov
insb
inc
fstsw
mov
pop
loope
fsubr
jns
scas
loopne
pop
or
xor
or
aam
pop
dec
incb
mov
push
int3
adcl
rol
ret
xor
mov
or
cmp
sti
sbb
rcrb
ljmp
jp
cli
ja
dec
adc
sbb
cmp
lea
pop
js
jp
leave
sbb
int3
mulb
adc
and
movsb
stc
loope
loope
divl
seto
add
ds
pushf
mov
sbb
nop
xlat
pop
cmp
xor
mov
mov
insb
mov
inc
adcl
adc
jle
xchg
addr16
cs
cmpsb
scas
ret
push
jp
in
daa
ss
or
sub
aas
xchg
data16
lods
orb
add
rorl
nop
push
mov
fcmovnb
and
lds
adc
loopne
dec
imul
mov
js
fs
cld
mov
lods
mov
mov
dec
sub
push
jmp
lcall
inc
sbb
aam
push
jo
cmp
cld
cli
xor
imul
leave
outsb
ds
call
push
push
enter
inc
int3
mov
divb
sbb
cmpsl
sbb
adc
daa
lahf
jns
or
stos
ret
lret
jl
mov
jp
add
sub
xchg
jmp
add
xchg
mov
xchg
fs
out
mov
negb
mov
xor
add
ror
ja
bound
dec
mov
jbe
mov
aam
loopne
loop
add
mov
mov
stc
imul
inc
pop
cmp
jle
inc
repnz
mov
mov
stos
or
loope
push
int
inc
insb
mov
call
dec
aam
mull
fimuls
pop
outsl
ss
jnp
push
xchg
ljmp
dec
inc
sub
add
push
and
ds
popf
adc
cld
movsb
lcall
xchg
cli
adc
subb
add
scas
jo
jecxz
into
outsb
add
adc
lods
sub
sub
int3
cmc
es
lods
insb
xchg
lahf
xchg
sbb
adc
js
sahf
mov
bound
xchg
cmc
mov
movsb
pop
iret
sti
jmp
test
sub
pusha
push
mov
insl
pop
push
jecxz
mov
aad
mov
xchg
xchg
dec
hlt
aaa
dec
add
mov
dec
mov
xchg
adc
pop
js
push
loopne
or
dec
xchg
dec
jmp
std
mov
and
inc
out
sbb
sbb
mov
dec
xchg
cmpsl
and
mov
fs
xor
leave
inc
xor
dec
jo
ds
shld
push
neg
mov
hlt
xchg
xor
neg
std
mov
mov
mov
idivb
idivl
ja
sarl
sbb
xor
loop
leave
lea
or
sub
je
cmp
push
cwtl
sbb
or
xchg
inc
dec
sub
mov
pop
pop
pop
pop
mov
pop
mov
in
or
mov
mov
xor
and
xor
jne
adc
push
std
pop
push
mov
mov
in
mov
pop
test
sahf
push
into
adc
dec
movsl
xchg
sub
rcl
push
pop
sub
xchg
fidivs
popf
pop
adc
jnp
test
sarl
push
or
in
daa
ja
stos
mov
xchg
inc
popf
ret
cmp
push
das
es
xor
xchg
push
jae
and
in
pmulhw
sahf
and
mov
stos
xchg
mov
ficoms
test
icebp
mov
lret
movsl
inc
sub
xor
in
pop
daa
adc
test
popa
mov
cmp
icebp
mov
push
xchg
push
jne
adc
mov
bound
push
fists
xchg
mov
cmp
jns
loopne
rcr
jmp
aam
pop
sub
stos
stos
addr16
cmpsb
mov
pop
xor
mov
je
mov
inc
adc
cmp
sbb
inc
adc
sbb
xchg
into
xchg
dec
imul
push
ret
fcompl
mov
dec
out
xchg
sahf
xor
jo
pushf
ds
dec
test
sub
lds
dec
mov
shrl
xchg
cmc
cmpsb
fistps
jns
testl
mov
xchg
js
jp
and
xchg
sbb
lods
lock
rcll
enter
cmp
notl
test
test
ret
or
imul
add
cli
jmp
push
aas
dec
imul
icebp
int3
sbb
cltd
add
jg
or
push
adc
jne
and
dec
repnz
jno
inc
imul
shlb
push
rcrl
dec
stos
sti
mov
jmp
pop
mov
lret
inc
mov
push
aaa
fisttpll
jp
das
pop
test
mov
lret
addr16
lcall
leave
pop
cli
fcoml
add
jnp
adc
dec
push
sbb
pop
xorl
loop
adc
jge
or
loope
push
les
push
call
and
mov
ss
lret
sbb
aam
xchg
test
mov
sub
or
out
jle
add
movsl
push
out
adc
add
mov
sub
or
adc
mov
iret
pop
mov
xchg
push
je
mov
std
aad
movsb
hlt
mov
jno
jb
cwtl
or
in
push
out
outsb
cmp
bound
xor
mov
xor
push
insl
fists
inc
mov
fiadds
int3
aad
mov
add
and
stc
fistps
pop
xor
adc
jns
inc
out
inc
mov
int
je
mov
into
stos
ss
sbb
mov
add
pop
dec
cltd
push
pop
or
xchg
dec
enter
dec
jo
jl
mov
or
or
mov
xchg
jne
mov
sbb
cmp
and
inc
inc
aad
imul
xchg
add
filds
pop
test
pop
jge
push
movsl
insb
pop
stos
jecxz
push
test
fsubrs
into
push
cmp
inc
inc
mov
ficomps
call
push
in
jp
movsl
push
cld
adc
sub
inc
adc
mov
popf
mov
imul
or
sarl
outsl
adc
arpl
or
imul
mov
xor
or
out
lea
pop
bound
in
sub
fistps
outsl
mov
and
mov
xchg
add
int3
push
cmp
inc
imul
sbb
sbb
aas
gs
pusha
or
aad
adc
cwtl
repz
sbb
aaa
sbb
lcall
xor
or
push
sbb
jb
xor
imul
mov
pop
or
push
popa
dec
jnp
scas
int3
ljmp
mov
scas
mov
inc
jp
jae
pop
mov
jb
jmp
jmp
ss
sub
es
push
pop
push
adc
sbb
or
mov
into
repz
ds
inc
into
lds
pop
mov
pop
jbe
push
in
or
stos
and
test
cmp
stc
mov
sbb
add
and
cmp
xchg
outsl
xchg
mov
repnz
outsb
lcall
push
push
sub
dec
and
or
pop
movsl
pushf
jo
fstl
lahf
inc
arpl
push
xchg
push
into
fmuls
pop
stos
imul
cltd
mov
loopne
dec
aad
mov
xor
and
lret
repnz
mov
and
popa
jmp
add
sbb
cwtl
jne
cmp
in
cmp
out
fs
fs
lock
and
test
movsb
shrl
pop
xchg
dec
or
push
popa
add
cmovp
into
jnp
xchg
outsb
popa
pop
ret
mov
ja
add
cltd
lret
xlat
stos
mov
mov
ds
je
cli
fimuls
out
ds
hlt
cld
outsb
inc
and
inc
sahf
fcoml
cmp
popa
dec
ucomiss
orb
out
leave
mov
fimuls
in
jecxz
sbb
clc
jp
mov
mov
call
push
iret
lock
sbb
addl
std
lea
xor
pop
jl
inc
test
push
fbstp
cltd
mov
lahf
push
idivb
insl
adc
jmp
cli
aam
add
and
ret
jb
inc
xorb
mov
add
std
imul
jbe
inc
mov
aad
add
decb
in
sbb
xor
adcb
rolb
jbe
out
adc
adc
xor
pusha
sub
jo
jge
jge
push
ljmp
mov
shrb
xor
or
into
lcall
bound
jge
sub
push
cmp
jne
out
mull
and
les
pusha
mov
mov
cmp
dec
or
xlat
mov
nop
cli
fistpll
mov
shl
jne
add
test
xor
test
loop
enter
inc
xchg
pushf
imul
sbb
push
push
cmpsl
lcall
mov
xchg
addr16
leave
and
pop
add
add
outsl
mov
shlb
cwtl
cmp
sub
mov
xchg
add
adc
add
xor
adc
jns
xlat
aam
call
or
adc
mov
xchg
xor
cmp
inc
cmpsb
mov
std
xchg
mov
inc
cli
cmp
ds
bound
jo
mov
cs
push
jbe
test
mov
inc
pop
xchg
mov
xorb
mov
lds
or
lret
repnz
mov
loop
inc
mov
add
lock
mov
in
add
shrb
lret
mov
xchg
arpl
mov
cmpsl
adc
iret
xor
fnsetpm(287
xor
shl
cmp
cmp
call
ret
mov
mov
and
cmpsl
push
xlat
inc
inc
mov
pop
stc
das
jae
jne
jns
fisttps
push
test
str
andl
pusha
xor
icebp
lret
sub
cld
lahf
out
mov
cld
push
pushf
xor
out
cld
movsb
mov
add
js
jle
sahf
pusha
inc
ds
push
lods
fstp
mov
pop
jb
fs
sbbb
inc
mov
mov
pushf
xor
repz
fsubrl
popf
popf
idivb
mov
jge
sub
out
jge
dec
inc
imul
mov
mov
rorb
pop
daa
adc
aam
push
xlat
add
repz
test
jb
or
jo
sbb
fucom
and
mov
add
push
ja
into
in
cs
push
ret
shl
pusha
dec
ss
insl
cltd
sbbb
out
out
mov
push
mov
outsb
adc
cmp
push
cs
rclb
push
jp
dec
xchg
mov
lock
cmp
adc
and
and
pop
lret
rorl
fsubs
lahf
icebp
mov
pop
subl
or
addr16
dec
ja
or
mov
sti
pop
mov
rcll
pop
or
pop
or
sbb
inc
pusha
dec
xor
dec
fstps
dec
orl
mov
insl
sub
es
popf
pop
cmp
pop
loop
and
in
xor
aas
jb
aad
jmp
fmulp
push
or
inc
add
jnp
cmp
iret
jl
mov
test
cmp
leave
inc
and
inc
pop
test
loopew
daa
pop
push
adc
xchg
dec
pop
sbb
aad
pushf
mov
xor
dec
popa
sub
gs
repnz
mov
dec
or
adc
mov
mov
jg
xor
and
in
outsb
lret
das
sbb
cwtl
cmp
js
cmc
mov
hlt
inc
mov
test
mov
xor
icebp
mov
cwtl
add
dec
arpl
addr16
arpl
mov
sbb
lds
pop
xor
sub
int
add
mov
fistl
xchg
xorl
fsts
cli
pop
cs
iret
adc
rclb
fcompl
xchg
jne
add
stos
jg
rcrb
mov
push
xchg
and
sbb
pop
mov
fwait
xor
push
push
sbb
es
lret
lret
pop
enter
out
popl
mov
and
fistpll
cmpsb
in
pop
cmp
in
dec
into
popf
adc
leave
inc
out
cmp
aad
sbb
popa
int3
jo
or
movsb
mov
icebp
rcrb
mov
ja
mov
ficoms
xlat
shll
rcrl
pop
test
mov
or
ret
iret
mov
orl
movsb
out
xchg
pop
dec
clc
scas
loop
lahf
mov
adc
nop
shlb
lock
rcll
and
adc
mov
xchg
pop
jge
mov
popa
dec
jp
frstor
or
fwait
and
push
fldcw
xor
loop
mov
mov
dec
or
mov
mov
das
int3
push
in
js
xor
insb
mov
adc
dec
mov
ret
mov
rorl
into
push
aad
nop
leave
sbb
push
daa
or
xchg
testl
add
mov
xchg
arpl
adc
xorl
pop
enter
jp
add
xchg
mov
lods
fisubl
mov
rorl
repnz
jl
stos
and
mov
jp
jl
adc
ja
insb
int
fsts
vpshuflw
mov
push
push
mov
in
inc
push
loope
daa
ljmp
repnz
or
pop
movsb
sarb
inc
or
add
lahf
mov
mov
ret
pop
leave
mov
mov
or
scas
sub
imul
sub
lds
cld
dec
jle
jno
pop
int3
push
sbb
ret
leave
sub
sbb
aam
or
iret
mov
repz
sub
lods
jo
repnz
aas
mov
push
mov
adc
jae
or
mov
es
pop
stos
loopne
xchg
out
cmpsb
das
ja
inc
stc
mov
rcll
add
outsl
loopne
add
mov
push
fimull
xchg
notb
and
or
cmc
xor
scas
cmc
aas
orb
jmp
jg
jns
popf
in
mov
mov
movsb
jp
in
pop
cmp
aaa
push
cmp
push
scas
cwtl
pop
cs
addl
cmp
mov
push
lock
stos
bound
jne
je
in
call
and
mov
stos
call
icebp
dec
dec
stc
scas
test
cmp
push
add
ja
push
jg
cmp
je
sub
dec
jecxz
stc
ret
enter
xor
mov
mov
repz
push
push
xlat
pusha
xor
xchg
js
call
enter
inc
cmpb
nop
subb
out
ss
or
xor
add
testl
fsubs
sahf
rorl
mov
packuswb
test
das
cmp
fwait
push
lcall
cltd
xor
ficoms
adc
flds
or
ds
sbb
popa
ret
and
dec
sbb
fs
subl
pop
mov
push
cltd
mov
add
mov
js
mov
out
or
das
jnp
or
fisttpl
dec
out
pop
mov
ljmp
in
std
dec
scas
and
xchg
xor
jl
cmp
mov
jae
dec
cmpsl
mov
stos
les
cmc
aad
xchg
jecxz
jbe
divl
adc
adc
movsb
ss
pop
mov
xchg
xchg
pop
fwait
mov
js
je
add
mov
cmpb
movsb
cmp
xchg
pop
outsb
pop
lock
sub
sbb
jmp
pop
mov
sbb
mov
bound
mov
stos
int3
push
push
out
rcrl
in
jno
xor
imulb
mov
arpl
xor
pop
or
loopne
cmpb
jle
sti
xor
and
push
push
pop
or
pop
es
dec
adc
imul
dec
jno
pop
mov
std
mov
sbb
push
lods
jl
aaa
lock
inc
ljmp
mov
cmpl
add
cmp
mov
dec
fwait
dec
mov
pop
movsl
lahf
lret
mov
jnp
mov
inc
cmp
dec
pop
das
outsb
divb
add
std
outsl
lret
daa
jns
fwait
addr16
das
xchg
daa
mov
movsl
or
lahf
fcmovnb
mov
sahf
shl
popf
adc
mov
js
in
push
and
outsl
or
ljmp
jbe
fidivs
lcall
scas
popa
adc
jmp
sub
adc
cmp
pop
lret
xchg
scas
imul
test
in
jno
cmpsl
stos
push
vpunpckhwd
stos
sub
inc
dec
cmp
adc
or
cmc
movsl
fs
adc
das
push
inc
cmpsl
test
jb
std
aam
add
jo
lods
pop
insb
fimuls
addr16
or
adc
movsl
bound
test
push
mov
dec
hlt
cmp
mov
mov
fwait
or
out
pusha
ss
xor
iret
rclb
or
push
xor
push
call
out
rolb
loope
inc
dec
imull
xchg
stos
mov
test
mov
adc
and
fidivs
dec
sub
mov
shll
stc
mov
es
jns
pop
jb
ds
inc
xchg
mov
push
ss
or
xchg
hlt
cmp
dec
je
in
xlat
dec
xchg
repz
imul
mov
push
cmpsb
xchg
fildl
mov
fdiv
jle
xor
sub
scas
dec
or
jnp
loop
push
cmp
ss
push
adcl
cmpl
pop
adc
cmp
fnstsw
xor
dec
xor
jb
stos
adc
push
call
xorl
jg
inc
in
lret
sub
gs
out
sub
insb
daa
and
test
int
popa
sub
or
enter
add
xor
fmull
jae
stos
cmp
inc
mov
mov
jbe
js
popa
jno
mov
sub
dec
into
adc
scas
mov
inc
add
testb
inc
jbe
xchg
mov
sbb
xor
adc
xor
ljmp
pushf
inc
negl
xchg
mov
scas
cld
sbb
cmp
pop
out
push
mov
lods
push
aam
fmul
aad
inc
out
rcll
sub
jne
movsl
cmpb
add
shrl
add
jno
jns
nop
mov
fstl
sbb
fsubl
dec
and
leave
popf
ds
popa
sub
shrl
or
shlb
aaa
mov
jp
push
xchg
test
movb
div
dec
adc
shll
add
in
lcall
sub
out
xchg
rcll
sub
out
push
outsb
jno
dec
sub
fsub
cs
movsb
fbstp
addr16
cmc
adc
cmp
clc
out
lahf
fs
movsl
ret
mov
lea
aad
leave
lret
inc
inc
cmp
sbbb
aaa
adc
push
je
xchg
push
mov
inc
xor
xor
outsl
imul
testl
pop
pop
dec
mov
mov
cs
out
inc
add
imul
mov
test
sub
cmp
jge
xchg
or
pusha
pop
dec
fidivs
xor
lods
jns
add
cltd
xchg
loop
test
sbb
mov
mov
lret
cmp
ret
pop
xchg
ljmp
pop
dec
jmp
fldl
and
rclb
mov
xor
sbb
lods
js
pop
ret
test
push
mov
in
stos
or
sbb
hlt
aam
cwtl
xchg
in
dec
adc
inc
adc
xor
mov
cmpsl
pop
repz
cmp
dec
clc
lods
std
jb
fsubrl
sub
fisttpll
sti
dec
adc
lods
aad
sub
rcl
sub
out
pop
mov
rclb
push
cmp
jle
mov
adc
pop
mov
and
mov
xor
std
shll
pop
or
test
dec
push
aam
scas
sahf
gs
cmp
fdivl
in
jne
fdivrs
adc
rcl
cmp
sbb
push
mov
add
xor
sbb
mov
lret
sbb
aad
stos
stos
je
jbe
push
pop
movsb
mov
repnz
popa
cmp
test
xchg
mov
pop
mov
push
lret
sub
pusha
mov
shll
push
cld
dec
lods
repnz
jne
cmpb
inc
out
loope
inc
dec
dec
mov
mov
adcl
push
sub
fs
mov
adc
inc
jno
test
lret
mov
mov
mov
shr
aam
mov
mov
or
stc
sbb
rcrl
sub
mov
jno
push
imulb
push
mov
dec
cld
xchg
push
rclb
mov
into
repz
jne
out
add
add
adc
test
ja
cld
sub
loopne
mov
pop
mov
filds
pop
push
jae
mov
addl
rcr
js
pushf
ret
cmc
mov
outsl
mov
js
add
mov
les
sbb
stos
lods
bound
mov
mov
mov
pusha
fnstenv
js,pt
or
jne
into
out
mov
js
inc
mov
into
inc
sbb
xchg
add
ret
outsl
ljmp
nop
aad
jmp
jle
push
les
insb
cmc
or
pusha
xchg
dec
lock
popa
fsubr
lahf
popl
insb
orl
jnp
idiv
clc
scas
inc
test
es
shll
mov
add
insb
sbb
inc
out
and
and
pop
out
mov
imulb
xor
push
and
outsb
xchg
add
das
jo
inc
push
mov
dec
jl
insl
mov
mov
mov
and
movsl
mov
xorps
repnz
iret
ss
lods
js
xchg
xchg
pop
lret
sarl
adc
mov
push
adc
and
fildll
adc
add
les
pop
mov
jecxz
dec
jp
je
sbb
push
mov
cwtl
pop
popa
sbb
inc
lds
mov
jb
sbb
or
stos
push
mov
sarl
loope
push
outsb
jo
push
ret
in
xchg
add
in
cltd
in
jg
xchg
pop
mov
shll
xbegin
sbb
lret
and
enter
mov
stos
int3
enter
push
pop
pop
scas
js
push
mov
int
mov
inc
sub
clc
add
add
jmp
cmp
sub
mov
fnstenv
test
cmpsb
je
xor
incl
fidivl
jecxz
cli
add
sarl
adc
data16
fucomp
and
lret
xchg
aad
or
pushf
inc
addr16
cmp
xor
orb
pop
inc
and
sbb
stc
fidivrs
inc
mov
adc
dec
xchg
out
mov
arpl
and
push
fnstsw
xchg
out
dec
push
data16
dec
mov
fsubrp
aam
add
adc
xor
gs
pop
fs
insb
jle
cwtl
insb
jae
dec
repz
pop
dec
cmp
cli
cld
push
inc
sub
sbb
adcb
jp
push
cmpsl
xchg
sub
negl
mov
mov
jnp
xchg
pop
push
test
ror
pop
aad
pusha
mov
lret
stc
roll
cli
or
int3
xchg
imul
addr16
pop
mov
ficoms
out
int
clc
int3
xchg
ljmp
insb
lds
nop
mov
imul
cmp
fcomps
mov
lret
dec
scas
push
std
jbe
lret
pop
lds
in
mov
bound
pop
mov
leave
xor
les
xchg
mov
lret
fcoms
mov
add
scas
xchg
sub
fiaddl
pop
inc
int3
dec
xchg
inc
jle
jle
repz
popf
ret
cld
insl
mov
adc
orb
dec
inc
icebp
mov
jb
dec
in
mov
jp
sbb
mov
xor
movsb
mov
loopne
cwtl
jmp
mov
es
sbb
push
gs
xchg
xchg
or
data16
sub
cltd
rcrb
and
fcoml
imul
cmpsb
cmpsb
int
add
mov
fs
or
ljmp
mov
jns
loopne
mov
pushl
aas
ret
pop
test
int
and
jno
sbb
jae
dec
xor
jmp
inc
push
orb
xor
or
mov
mov
jp
xor
adc
pop
cmp
imul
and
call
iret
cwtl
movsb
mov
ror
lcall
imul
shll
jmp
sarb
jmp
inc
adc
inc
dec
call
mov
pop
fcmovne
cld
loopne
jne
insb
scas
pop
inc
in
out
cltd
sub
imul
sti
popa
pop
add
jmp
dec
test
ljmp
test
mov
inc
aaa
andb
xor
adc
repz
adc
out
and
shrb
ficomps
hlt
test
fwait
adc
call
jbe
ficompl
jbe
fsubrl
lds
test
icebp
cmpsl
mov
adc
jecxz
sbb
and
enter
cli
pusha
mov
iret
push
test
faddl
jle
testl
iret
cmp
fwait
movb
sub
cmp
wrmsr
popa
mov
shll
insl
jle
pop
add
inc
add
aad
insl
push
push
xor
xor
sub
sbb
push
jg
loopne
pop
into
mov
mov
or
or
les
cmpb
js
insb
mov
jns
aaa
negl
cltd
add
push
stos
xor
jp
push
repz
and
cld
andl
and
ja
xor
jnp
leave
dec
aam
push
cvtdq2ps
ds
sbb
out
loopne
ljmp
jae
adc
call
pop
inc
loope
mov
mov
jb
jne
loop
popa
mov
sub
mov
sub
mov
xor
outsl
jae
add
in
mov
in
add
xor
jb
mov
adc
ret
or
xchg
adc
pop
mov
movb
loop
add
push
out
addb
or
hlt
movsl
rorl
add
aaa
out
packsswb
adc
fildll
data16
lahf
pop
sahf
lds
repnz
fadd
push
shrl
in
pusha
sbb
test
stc
xchg
incl
add
mov
lea
lcall
jno
pcmpeqw
shrb
out
push
pop
mov
and
mov
xchg
hlt
dec
and
pop
orb
adc
jmp
pop
lods
mov
movsl
sahf
jb
hlt
mov
inc
and
lret
add
imul
push
hlt
fnstenv
outsb
aam
add
fstpl
push
sbb
or
gs
mov
xor
stos
jno
dec
sub
cmp
cmp
or
enter
pusha
or
mov
sub
sub
loope
mov
decl
adc
dec
outsb
cmpb
mov
cmp
inc
sbb
testb
rolb
xchg
insl
sahf
fstpl
popa
in
rclb
lcall
inc
jbe
or
stos
push
aas
call
loop
xor
iret
lods
iret
test
mov
adc
inc
add
sbb
xor
daa
jl
popf
jge
aaa
aaa
shll
popa
pop
pusha
mov
and
mov
xor
inc
xchg
rcl
jno
out
jae
outsl
outsb
inc
xchg
add
repnz
out
pop
shll
xor
dec
insb
xchg
pop
xlat
lock
mov
test
adc
fs
mov
jp
add
call
lock
mov
fdivrl
dec
xchg
nop
lret
popf
mov
sbb
adc
insl
cmp
adc
sub
iret
jno
add
shrb
jp
dec
sbb
movsb
add
push
and
jbe
cmp
push
mov
mov
and
jge
push
xchg
sub
jecxz
xchg
add
push
insl
add
mov
add
iret
stos
ss
pop
sub
popa
aas
push
dec
or
inc
stc
clc
ds
and
push
xchg
ret
outsb
inc
push
cmp
pushf
cmp
lods
inc
jo
ret
call
sub
adc
jge
xor
sub
xchg
inc
shll
add
aam
jl
sbb
cmp
or
fisubl
in
pop
arpl
aam
leave
sahf
push
jbe
xchg
scas
push
xor
and
mov
je
pop
xchg
andl
lcall
push
addr16
push
sub
mov
xchg
fimull
adc
into
inc
inc
sbb
mov
fwait
dec
push
adcl
ficoms
jle
lcall
lods
clc
sbb
sbb
cmp
shr
rorb
inc
xchg
mov
cmp
sti
lods
fistl
mov
fs
xor
mov
add
test
add
cmp
dec
js
outsb
mov
pop
lret
aas
mov
call
es
cmpsl
nop
out
cmc
js
movsb
test
sahf
pop
test
jne
fmulp
ljmp
ja
into
xchg
shll
cwtl
pop
sbb
es
scas
les
inc
aaa
ja
into
test
pop
xchg
jbe
nop
inc
lret
mov
loopne
jns
and
xor
adc
dec
xor
dec
push
clc
and
push
sub
dec
imul
mov
fidivs
push
enter
mov
adcl
insb
pop
cmp
andb
push
aas
outsl
jb
mov
leave
int
push
stc
lret
stos
testb
pop
filds
pop
loope
pop
das
ja
mov
cmpb
dec
jo
lds
fldt
aad
mov
shrb
xor
nop
or
cmpsl
or
push
cli
pop
add
imul
loope
test
mov
mov
fldt
jle
jge
push
ret
xor
adc
popa
and
adc
fdivl
push
ret
cmc
mov
push
out
lea
mov
mov
pop
push
clc
mov
sbb
jg
and
xchg
sub
xchg
lret
sbb
mov
jb
mov
adc
jmp
orl
mov
mov
aaa
sub
mov
into
mov
jp
shlb
loop
push
dec
xchg
mov
mov
sbb
jge
jno
mov
cmp
daa
inc
inc
dec
es
imull
cmpl
pop
xchg
pop
int3
jecxz
add
jmp
push
push
jmp
out
xor
lahf
ret
shl
loope
jno
ja
mov
sbb
push
sub
fdivl
adc
and
lds
sub
inc
pop
ss
cwtl
pop
adcb
cmc
cmp
or
lret
outsl
mov
daa
jecxz
push
sbb
imul
repz
imul
push
jle
push
data16
jp
data16
mov
and
xor
and
pop
decl
dec
inc
sub
cli
lock
movsb
cwtl
inc
in
popa
xchg
xchg
movsl
adc
pop
dec
jno
flds
mov
into
cs
mov
xchg
popa
shlb
push
inc
repnz
fdivr
and
daa
fstpt
ss
cmpsb
icebp
shlb
pop
push
mov
inc
mov
shrb
in
mov
mov
mov
pavgb
jmp
jecxz
sbb
fbld
xor
insb
pop
adc
xor
inc
incl
je
cmp
add
cmp
fists
into
push
inc
lcall
jnp
int
xchg
pop
sbb
mov
sbb
mov
pop
ss
jle
push
mov
xchg
xor
pop
std
jmp
sbb
stos
inc
mov
insl
push
dec
adc
push
or
pop
mov
in
test
push
lahf
add
incb
sbb
int3
mov
das
mov
cwtl
or
aas
ret
adc
add
xchg
sub
cmp
test
cmp
and
pop
and
inc
mov
and
in
push
pop
and
mov
xor
lcall
adcl
dec
addr16
add
jno
les
mov
dec
icebp
mov
movl
dec
fistl
jno
test
loopne
arpl
xchg
shl
icebp
mov
test
mov
call
aad
adc
jl
mov
das
cli
mov
in
rcr
aam
push
pop
dec
std
cmpsl
jns
ss
shrl
xchg
adc
imul
cwtl
insb
lods
repz
lcall
andb
lock
cmp
pop
fnstsw
xchg
insb
rcrl
aad
mov
into
jbe
aaa
pop
fcoms
ud0
rorb
xchg
js
push
mov
mov
sbb
divl
add
xor
or
sub
cld
pop
outsb
push
ficompl
movsb
cmpl
and
cmp
fcmovnb
mov
out
and
jbe
jns
mov
xchg
fs
or
jge
leave
dec
push
cmp
jmp
adc
push
or
jb
sbb
stc
insb
inc
pop
or
mov
into
js
movsb
xchg
in
pusha
dec
lret
je
push
xchg
dec
arpl
clc
sub
dec
fdivrl
mov
pop
fsubrl
add
push
xor
or
adc
call
sahf
sub
push
outsl
or
loop
in
xchg
pop
xchg
add
test
or
xchg
pop
ret
mov
popa
and
dec
jg
cmc
jno
rolb
fcmovnu
nop
pop
mov
fisttpll
mov
test
imul
xchg
aaa
les
adc
adc
mov
mov
mov
testl
add
and
cltd
notb
iret
rol
clc
sbb
or
cs
jbe
push
mov
aaa
mov
sub
mov
mov
xchg
push
xchg
adc
arpl
mov
mov
loop
sub
repnz
or
mov
ret
les
jo
sub
mov
sbb
add
rol
mov
ret
pop
shr
cmp
pop
insl
add
shrb
fadd
mov
push
add
scas
aas
and
call
jo
lahf
inc
cmc
mov
fidivrs
sbbl
sub
popl
loopne
cltd
movsl
mov
mov
lcall
sub
adc
cmpb
xor
test
cmp
popf
sbb
hlt
sbb
mov
sbb
fimull
shrl
fmul
pushf
cmp
xor
inc
aad
jp
cld
daa
outsb
repz
jmp
lret
inc
iret
ds
xorl
fdivrs
in
insl
ret
pop
das
mov
pop
cwtl
cld
sbb
pop
into
roll
scas
shl
lea
inc
pop
push
jl
arpl
cli
scas
adc
call
push
and
xchg
notb
sbb
dec
pop
cmpsl
mov
leave
sti
dec
lds
fwait
int
ja
dec
pop
shl
adc
addr16
adc
mov
loopne
mov
sbb
push
scas
loope
mov
and
out
pop
jno
mov
adc
into
sbb
negl
sub
xor
aaa
xchg
push
nop
sub
enter
insl
out
sbb
dec
das
mov
ljmp
mov
sbb
xchg
push
iret
jp
jge
fildll
adc
test
push
add
fwait
test
aaa
or
mov
negl
xor
push
fcoml
or
les
push
or
out
outsl
inc
push
jno
dec
push
cmp
sub
rorl
adc
push
jecxz
addr16
test
mul
mov
fimuls
and
pop
sbb
mov
je
in
or
or
adc
or
mov
push
negb
fimuls
jne
pushf
aam
push
call
fdivrp
sub
jle
dec
arpl
sbb
mov
mov
es
ror
jae
adc
lcall
add
jmp
or
xorl
xor
pop
fmul
in
or
lock
mov
mov
push
dec
fsubrl
setg
and
pushl
test
mov
imul
call
jmp
stos
ljmp
sahf
push
inc
jb
mov
push
data16
loop
jno
leave
popf
out
sbb
aaa
ja
stc
popa
lock
cmpsl
xchg
push
mov
je
les
decl
cmp
sub
or
push
pop
push
push
push
iret
bound
rolb
leave
mov
arpl
std
clc
icebp
lds
fdivr
das
outsb
push
and
ret
jmp
or
fcmovnu
mov
fsts
add
and
hlt
inc
popf
movsb
xchg
push
jl
nop
lcall
and
dec
mov
or
mov
add
xlat
cltd
rcr
sar
es
sub
out
outsb
divb
add
lock
scas
xor
mov
rorb
add
jno
mov
mov
testl
int
lds
dec
iret
cmp
inc
or
xor
adc
xchg
enter
inc
and
cmp
loope
out
dec
sub
dec
les
std
jle
xchg
mov
je
push
dec
xchg
call
push
add
push
aas
lcall
arpl
sub
xorb
fisttpll
and
jg
adc
pop
cmpsb
sbb
xor
es
and
push
stc
test
and
jae
jne
lahf
test
adc
fnsave
ja
jae
hlt
mov
lcall
outsb
imul
neg
push
imul
in
arpl
mov
xchg
insb
mov
xlat
ljmp
cmp
adc
mov
rorb
adc
popf
adc
test
cmp
adc
rol
or
jbe
dec
dec
test
adc
lret
cmp
cmpl
pop
sbb
or
aas
fwait
sub
xor
insl
add
sbb
mov
xlat
sbb
rcr
mov
std
sbb
add
ds
xchg
testb
fmull
test
dec
mov
add
jmp
xchg
mov
mov
out
ja
enter
xchg
lea
jmp
sbb
cmp
ja
stos
xchg
sar
popa
les
mov
inc
popf
mov
fdivs
call
rorl
add
movsl
mov
inc
das
imul
jae
sub
pusha
lods
pop
jae
sbb
fimuls
das
repnz
andb
and
xor
fnsave
ljmp
cmp
dec
mov
adc
jo
cli
mov
push
dec
or
cltd
xchg
sahf
and
cltd
xchg
dec
nop
cmpsb
aaa
cmp
push
adc
loope
push
cmp
daa
add
cmc
or
inc
pop
add
jp
add
leave
sahf
dec
or
cmp
movsl
jo
outsb
add
mov
xlat
pop
push
xor
mov
cltd
add
test
stos
out
outsl
mov
mov
sub
and
pop
cmp
pop
and
shl
or
les
pop
test
cmpb
mov
sub
jb
cmpsb
inc
add
sub
push
adc
out
imul
push
xchg
sub
out
cs
hlt
dec
stc
daa
mov
jo
sbb
mov
cmpl
cmpb
sbb
movsl
aam
repnz
xor
add
sar
mov
mov
mov
sub
pop
pushf
into
xor
inc
fnsave
adc
mov
out
out
dec
scas
and
pop
inc
divb
mov
into
repz
inc
add
ljmp
cli
jecxz
add
test
jl
xchg
pop
fdivl
in
pop
xchg
jle
or
cltd
scas
add
mov
or
sarb
mov
xor
dec
push
cmp
inc
xchg
mov
lea
lock
mov
push
arpl
add
lret
or
xchg
cmp
cmp
mov
push
sarl
push
pop
or
mov
jge
and
mov
or
mov
cmp
pop
xor
or
dec
inc
test
mov
in
push
out
enter
push
jnp
or
xchg
lret
shrl
mov
xor
inc
pop
xor
sub
repz
lods
add
je
and
sarb
in
inc
inc
mov
push
add
cmp
jmp
inc
sub
enter
movsb
hlt
lock
fstpt
fildll
mov
orl
inc
pop
repnz
cmp
jmp
fildll
dec
pop
loopne
cmpsb
imul
pop
arpl
adc
xor
loop
cmp
lock
pop
in
sbb
xor
inc
ret
ds
shlb
mov
out
sub
cmp
sbb
sahf
je
xor
pop
xor
in
inc
pop
fwait
and
sbb
dec
add
bound
cmp
cld
inc
lret
xor
leave
lock
lcall
and
xor
pusha
mov
push
xor
jmp
push
mov
and
sub
add
stos
sbb
mov
jg
push
lds
arpl
dec
fwait
int
movsb
xchg
xchg
test
mov
adc
pushf
fwait
data16
imul
dec
sbb
movb
dec
pop
fiaddl
movsb
mov
ror
divb
jae
adc
cmp
cld
sub
je
jmp
xchg
aas
add
leave
pop
jg
js
push
call
test
jbe
call
xchg
push
arpl
std
sbb
mov
lods
xor
cmpsb
pop
dec
cmp
out
jmp
stos
cmp
fsubl
ja
cmc
sbb
pop
jl
xchg
sbb
jecxz
addr16
mov
xor
inc
push
pop
in
push
sub
loop
ret
and
cwtl
inc
lea
test
div
mov
pop
dec
test
nop
mov
or
insl
and
xchg
movsb
les
xchg
nop
ret
arpl
repz
ja
aas
aaa
dec
mov
test
enter
mov
aam
mov
mov
fstl
jp
leave
push
push
std
pop
int3
dec
mov
aam
add
adc
xchg
dec
or
fld
adc
mov
and
cmp
test
cmpsb
mov
hlt
cmpsb
pop
sbb
add
lret
pop
pop
movsl
ja
dec
jmp
cmp
ja
push
dec
lret
mov
negl
and
add
pop
and
cmp
test
mov
orl
pusha
sub
xchg
and
jno
fsubrp
es
cmp
add
dec
icebp
out
scas
aaa
mov
movsb
lret
add
sbb
xor
sub
dec
sbb
pusha
cmp
mov
je
mov
mov
jns
mov
and
push
pop
xor
mov
adc
pop
rorl
ret
sub
lds
xor
dec
mov
and
mov
cmp
sbb
push
addr16
les
jb
inc
jl
out
daa
cmpsb
mov
popl
jge
dec
test
adcb
sbb
adcb
push
sub
sbb
mov
push
pop
add
mov
fs
out
push
push
jmp
faddl
and
jg
repnz
xor
mov
mov
or
out
sub
push
dec
pop
loopne
subb
inc
nop
and
xchg
fldl
mov
push
ss
inc
mov
mov
or
pusha
add
aad
push
in
dec
hlt
scas
jb
sbb
in
je
xchg
sbb
arpl
fsts
adc
imul
jo
jno
aaa
sub
lock
orb
popl
jnp
stos
loopne
aas
xchg
gs
dec
loop
push
stc
subl
inc
and
mov
push
inc
mov
xlat
dec
adc
repnz
ret
dec
lock
xchg
jnp
adc
roll
pop
imull
pop
scas
pop
arpl
add
xor
sahf
xchg
jne
fwait
pop
push
pop
mov
inc
jae
popa
fidivrl
sbbb
ret
test
mov
mulb
pop
sub
sub
out
push
and
sbb
jae
pop
dec
xchg
push
pop
add
dec
inc
fcmovbe
testl
xchg
sbb
mov
sbb
mov
std
sbb
cmpsb
jge
pop
mov
repz
pop
mov
and
loopne
push
aam
movsl
inc
sahf
arpl
dec
cmp
cmp
rcll
lret
add
loopne
ja
jmp
jne
sub
dec
inc
outsl
sbb
aad
and
push
xlat
and
jns
ret
lahf
add
fdivl
cmc
mov
clc
add
adc
test
push
adcb
mov
inc
pop
adc
mov
dec
sub
and
add
push
cmc
fs
call
add
addr16
ss
pop
push
add
push
xor
stos
out
xor
incl
push
mov
inc
pop
push
xor
fdivs
xchg
test
jb
lods
je
push
dec
addr16
pushf
jmp
add
pop
xchg
movsb
enter
dec
pushf
push
lock
in
or
mov
ljmp
sub
inc
or
es
jbe
pop
sub
pop
adc
cmp
jle
imul
cltd
lret
cmp
adc
imul
or
sarl
dec
outsl
push
xor
mov
test
cmp
adc
pushf
pop
fidivl
push
std
aas
rcrl
or
sub
push
mov
lcall
sbb
fidivrs
jl
mov
and
fs
dec
mov
mov
stos
rcll
fs
xor
xor
and
and
rorl
int
push
and
push
scas
dec
test
std
pop
sub
mov
mov
jl
ficomps
outsb
ficompl
mov
or
jecxz
and
adc
sti
pop
jnp
adc
pop
jb
lds
out
dec
cmpsl
int3
arpl
mov
or
mov
shl
addr16
xor
inc
fldenv
push
and
sti
bound
pusha
fldl
pop
add
jg
scas
rorb
lret
add
flds
insl
jg
and
pop
inc
push
mov
pop
cmp
xor
mov
sub
test
rclb
out
sti
dec
mov
imul
dec
loopne
jns
push
mov
sbb
mov
xor
jbe
icebp
int3
push
mov
and
out
ret
aaa
xor
int
mov
incl
andb
mov
fadd
add
add
push
addr16
mov
cli
les
in
mov
stos
mov
sti
test
xor
xchg
icebp
jmp
xor
mov
cmp
mov
sbb
or
cmp
xor
stos
mov
fs
mov
btc
adc
add
fwait
aad
jae
popa
push
xlat
mov
arpl
xor
ds
push
add
jae
sahf
into
out
jl
data16
ds
push
jno
rcr
jne
jbe
mov
jno
mov
dec
data16
sbb
sub
cs
xor
loope
push
fildll
mov
fstp
ja
out
inc
lds
mov
jbe
mov
and
fwait
sub
pop
data16
adc
cmp
cvtps2pi
je
jno
inc
sbb
and
imul
fimull
sbb
pop
pop
roll
cwtl
dec
jmp
inc
arpl
xorl
sub
xchg
shl
aas
and
mov
mov
mov
push
pushf
cmp
mov
pop
or
lcall
cmp
lock
add
add
mov
pop
push
mov
jle
inc
sarb
pop
or
push
fmuls
inc
push
lock
cwtl
aam
mov
cmp
scas
cltd
adc
jb
cmp
shlb
mov
mov
jmp
loope
stos
pop
pop
jg
xor
adc
outsb
and
int3
stos
inc
and
jne
lds
insb
mov
aaa
aaa
sub
cwtl
leave
gs
std
xchg
hlt
lcall
stc
jmp
testl
jmp
xor
cmc
sbb
roll
jle
repz
sbb
int
mov
pop
pop
mov
int
std
mov
adc
pop
test
push
mov
cmp
sbb
stos
push
mov
icebp
xor
ret
and
xchg
jns
gs
ffree
in
push
mov
movsb
pop
in
cmp
cmp
mov
cmp
repz
cmpl
push
push
sub
outsb
das
outsb
call
int3
sub
rcrl
imul
je
bound
pushf
fdivp
lods
push
inc
lret
add
popf
cld
mov
ror
xor
mov
jb
lods
pop
xchg
lods
out
sti
lahf
xchg
xchg
pop
cmp
mov
ret
testb
stos
add
pop
inc
dec
fs
dec
fs
outsb
add
fs
inc
cmp
sbb
push
pop
inc
in
out
rclb
mov
jbe
mov
push
mov
or
lods
push
aas
hlt
jnp
xor
xor
push
jns
adc
test
adc
push
mov
xor
test
out
and
out
movsl
std
pop
fmull
mov
add
sub
add
xorl
jne
jb
xchg
push
mov
cmpb
pop
mov
fwait
rcrb
add
pop
loope
mov
mov
xor
mov
mov
mov
cmp
add
out
add
cmpsl
enter
les
sbb
ret
sarb
pushf
mov
pop
mov
test
shll
sub
fwait
dec
sbb
fnstenv
das
repz
arpl
jno
stc
jle
xor
shll
xor
jg
xor
xchg
jne
add
movsl
pop
sbb
dec
push
test
adc
fs
std
xchg
fimull
xchg
cli
test
fs
les
flds
mov
mov
xor
adc
xchg
lods
mov
pushf
fsubrl
and
dec
sub
in
push
cmc
lods
push
out
cmp
outsl
and
push
lods
add
aam
jle
push
dec
in
scas
jle
inc
pop
imul
and
pop
sub
loope
sub
xlat
bnd
cmpsl
add
mov
push
adc
dec
and
jl
popf
fisubrl
mov
dec
iret
cltd
int
into
daa
mov
in
mov
mov
fildll
addr16
aad
ret
shll
out
icebp
outsb
or
push
jnp
pop
or
mov
mov
sub
and
adc
aam
mov
cmpl
cmp
clc
imulb
jg
adc
pop
loopne
lret
dec
dec
sub
das
repnz
test
lret
outsb
and
idivb
xchg
dec
dec
adc
jnp
xlat
int3
ja
aad
test
add
mov
test
mov
test
shll
pushf
xor
cmp
or
iret
adc
sbb
jge
mov
test
push
ljmp
scas
or
roll
adc
adc
xchg
cld
inc
xlat
popf
test
pop
or
mov
jae
fwait
sub
mov
push
iret
ja
je
js
or
mov
test
shl
je
dec
or
scas
dec
fstpl
call
les
in
fisttpll
pushf
inc
mov
cmc
pop
pop
xor
ret
mov
call
sub
test
adc
movsb
out
cmc
xchg
or
outsl
loope
jb
sahf
lds
adc
adc
or
jmp
sarb
mov
inc
sub
idivb
dec
cmp
rol
mov
movsl
dec
icebp
cmp
das
mov
xchg
dec
jae
mov
cmpsl
fisubrl
sub
jae
mov
repnz
cmp
bound
ds
mov
adc
xlat
movzbl
lcall
rorl
mov
pop
fwait
popf
hlt
iret
fildl
cltd
cmp
mov
sarl
xchg
add
sub
cmpsl
add
stos
mov
je
push
cmp
or
outsl
jne
ret
mov
adc
pop
mov
mov
in
lock
adc
cld
and
inc
fsubrs
sbb
repnz
pop
addr16
fnstsw
pop
jae
je
push
sub
xchg
or
jne
lcall
stos
loope
enter
scas
shl
aad
sbb
leave
lods
daa
inc
add
je
cmp
sub
dec
imul
iret
sbb
orl
add
rorl
idivb
xchg
and
push
outsb
daa
sub
pop
js
orb
jbe
mov
jg
xor
sbb
ret
lret
mov
ror
pop
aam
lcall
pop
push
pusha
std
xchg
and
add
dec
inc
jl
bound
add
push
xor
push
fcmovnbe
rcrl
inc
sti
dec
inc
mov
or
sbb
lds
jo
mov
adc
inc
and
cmpsl
std
adc
fsubrl
cmpsb
arpl
sub
cmp
mov
mov
imul
xor
or
imul
and
adc
push
cmpsb
mov
aad
xchg
lahf
sbbl
hlt
test
cmpsl
and
mov
mov
xchg
xor
sbb
daa
push
cmp
and
xor
xor
xor
sub
or
test
test
push
adc
push
fdivr
dec
insl
fdivrl
cmp
fcomps
add
inc
or
aad
fdivr
movd
pop
cmc
pop
sar
push
pop
mov
jecxz
gs
mov
xchg
push
pop
pop
push
xor
sub
lods
shl
les
mov
mov
mov
cltd
sbb
fcoml
add
icebp
hlt
push
sahf
hlt
dec
pusha
data16
inc
sbbl
in
jp
pop
leave
daa
test
movsl
xor
rclb
mov
in
jp
imul
xorb
icebp
cltd
mov
aad
sub
nop
cs
outsl
xchg
pop
jbe
lods
mov
pop
xchg
sub
push
or
pop
inc
in
iret
or
xchg
mov
ss
popf
pushf
mov
mov
insb
xchg
cs
xor
in
fisubs
loop
fs
scas
daa
jge
and
sbb
aad
or
pop
fisttpl
mov
dec
scas
dec
aad
popl
pushf
sub
jne
iret
fbstp
mov
add
fs
push
jmp
lock
jmp
xchg
xchg
mov
shlb
dec
xor
cld
js
loop
fidivl
inc
push
cmp
rorl
jb
repz
xchg
push
in
xor
or
mov
nop
pop
lds
jnp
aas
cmp
jae
pushf
dec
arpl
mov
push
xor
movsb
dec
jbe
sahf
cmpsl
xor
jmp
sbb
lods
sbb
jo
ret
add
fucomi
sub
dec
dec
sarl
iret
pop
jnp
mov
pusha
push
das
sbb
idiv
dec
adc
and
lds
aam
jg
js
xchg
mov
sti
int
cltd
out
pop
shrb
xor
inc
dec
movsb
xor
loop
mov
mov
andb
mov
fldcw
in
inc
test
daa
jecxz
out
sti
dec
cmp
jo
push
sarb
inc
push
negl
push
push
repnz
inc
rolb
out
sub
mov
xchg
and
inc
lahf
fwait
cs
and
dec
movsl
jl
jl
vmread
adc
cmp
daa
nop
cs
testl
loopne
add
mov
ja
mov
int
divb
inc
jle
pusha
xchg
int3
out
dec
adc
adc
pop
loop
std
add
in
pop
sbb
stos
dec
imul
ret
sub
adc
xchg
dec
cmp
xchg
movsl
stos
ljmp
xor
adc
xchg
clc
pop
rolb
ljmp
lret
xchg
dec
aas
jne
sub
and
push
divb
mov
mov
push
add
test
push
cwtl
lods
inc
sahf
loopne
mov
pop
movsl
fsubr
sahf
inc
xor
cmc
shrb
mov
mov
les
push
in
mov
fldt
jo
out
mov
mov
stos
mov
xor
mov
mov
jno
dec
sbb
aam
pop
ficoms
mov
scas
mov
nop
pop
jecxz
in
mov
packuswb
aas
leave
pop
arpl
cltd
xchg
sub
sbb
daa
loop
jbe
dec
sbb
mov
pushf
lcall
aam
sub
push
repnz
jae
divl
ss
in
andb
jp
iret
shr
les
test
lock
arpl
pop
sub
cmp
jns
push
mov
jbe
popa
mov
inc
stc
mov
inc
imul
and
inc
leave
inc
mov
sub
cwtl
cmp
jg
push
mov
cmp
cld
fists
jl
xlat
fimull
imul
enter
scas
stos
adc
adc
lret
pop
js
ds
pop
xor
insb
fs
insl
lret
pop
rolb
sahf
rcr
ljmp
fisttpl
lds
xchg
xchg
push
push
dec
nop
fistps
ss
mov
stos
mov
iret
sbb
fmuls
mov
xchg
jle
nop
push
and
aas
mov
outsl
rol
push
sub
mov
push
stos
mov
mov
sbb
or
mov
ljmp
jns
or
mov
pop
and
in
jnp
imulb
jge
xor
pop
and
adc
clc
les
dec
sbb
hlt
ficoms
sbb
sahf
push
cltd
lods
inc
or
cmp
inc
fstpt
jmp
data16
pop
leave
push
sahf
roll
or
cmc
add
add
sub
xchg
movsl
int
call
jecxz
gs
mov
inc
xchg
ljmp
adc
lcall
xchg
jmp
movsl
cli
push
dec
repnz
std
mov
and
stc
pop
push
sbb
lock
mov
lds
pushf
xor
xchg
fiaddl
sub
mov
loope
scas
cs
dec
clc
push
cwtl
mov
add
insb
add
sub
clc
add
lret
dec
add
fmulp
adc
fistps
cmp
aam
pop
bound
imul
mov
in
call
pop
add
jl
inc
fdivrp
mov
gs
inc
nop
or
testb
adc
test
cltd
cmp
mov
pop
das
aaa
push
fwait
jle
cmp
pusha
movl
xlat
insb
dec
adc
ljmp
les
inc
daa
xor
xlat
push
cmpsb
sbbl
sbb
fstsw
out
out
bound
mov
stos
mov
jbe
aad
cmp
cld
loope
pop
and
fs
fldl
xor
mov
adc
dec
or
sbb
movsb
ret
push
push
mov
jne
adcb
or
daa
out
pushf
subb
imul
sbb
fidivl
out
mov
nop
inc
or
scas
cs
inc
and
mov
push
push
rolb
fwait
repnz
add
push
mov
jnp
shlb
xor
fdivrs
dec
pop
sbb
or
and
arpl
iret
xor
push
mov
sahf
test
jo
and
cmp
push
mov
arpl
mov
leave
mulb
cld
jle
dec
or
aaa
push
or
push
and
push
sahf
imul
loopne
mov
sti
xchg
out
in
jmp
enter
outsb
popl
je
pop
mov
cmp
xor
inc
lcall
fbld
ss
daa
sub
fs
cld
xor
and
cmp
cmp
dec
inc
xchg
jne
in
mov
pop
jns
jno
cmp
pop
inc
mov
xorl
hlt
jnp
dec
jmp
pusha
sub
popf
inc
add
dec
jge
shr
int3
add
mov
sbb
ds
mov
jl
out
sbb
mov
shlb
cmp
mov
mov
pop
bts
pop
sti
filds
imul
cmpsb
mov
xchg
mov
das
outsb
fsubl
add
orl
icebp
dec
arpl
jmp
mov
pop
mov
dec
adc
sub
jg
pop
lods
test
popf
in
and
sub
dec
imulb
fwait
sti
fidivrl
sti
pushf
outsb
daa
arpl
cmp
call
xor
fwait
mov
shl
and
inc
imul
mov
iret
sahf
xchg
pop
cmpl
testb
push
push
sbb
or
lods
dec
mov
movsb
aaa
ds
jb
gs
or
jne
lea
repz
stos
stos
loopne
shlb
cmp
push
cmp
lods
xchg
icebp
jl
popf
int
lock
fdivl
cld
loope
cli
cs
fs
rclb
cmpsl
adc
push
or
idivb
mov
arpl
mov
ret
cmpsb
repnz
mov
pop
fs
cltd
das
push
sti
xchg
mov
dec
xor
sbbb
aam
ret
dec
cld
or
lds
pop
and
mov
inc
xchg
jns
bound
int
xchg
lret
push
subl
mov
sti
inc
mov
push
sbb
inc
mov
rcrb
popa
mov
cmp
sub
ficoms
push
stos
sbb
jg
mov
dec
jmp
or
jns
jae
and
mov
imul
jl
xor
repnz
xchg
push
xor
push
xchg
sbb
pop
add
shlb
mov
icebp
shlb
push
inc
cmpsb
jb
cwtl
sahf
mov
sbb
cmc
mov
sub
pop
mov
loopne
mov
andl
jmp
outsl
lods
mov
xorl
inc
xlat
sub
sub
sbb
lcall
and
fstp
sub
pop
pop
scas
inc
sarl
dec
popa
ret
test
je
push
xchg
shlb
mov
rclb
imulb
jae
nop
test
push
fistps
xor
add
mov
mov
out
pop
repnz
pusha
mov
lahf
dec
inc
jb
cmp
mov
mov
add
sbb
dec
pop
cmp
popa
cld
stc
mov
sub
mov
push
push
dec
lret
pop
jl
out
mov
add
shrl
adc
test
sub
movsb
push
push
sub
inc
cmpsl
cmp
das
pushl
push
fbld
adc
jnp
and
rclb
mov
or
sahf
pushf
cmc
aas
addr16
and
and
gs
das
push
mov
lds
mov
arpl
jl
or
scas
test
cwtl
mov
mov
jl
mov
xor
pushfw
inc
hlt
out
xlat
ret
sub
mov
jns
loop
fstl
pop
cmpsl
call
sub
imull
nop
into
lret
jecxz
mov
jne
ret
dec
bound
ds
fimull
lods
lea
sahf
mov
repnz
ror
loopne
nop
inc
stos
inc
ljmp
sbb
dec
in
divl
and
sti
mov
popf
adc
and
push
lock
xorl
inc
out
nopl
adc
iret
sahf
mov
out
xchg
popa
dec
in
out
adc
fiadds
push
mov
fisubl
mov
dec
aas
xchg
outsb
mov
test
jle
and
out
adc
add
nop
gs
lret
outsl
cs
jmp
insb
test
mov
fldenv
lahf
xchg
sbb
leave
cmp
test
add
mov
add
xlat
sahf
dec
stos
icebp
mov
add
xor
pop
in
bound
mov
cmp
aas
mov
insb
jl
pop
inc
cmp
jg
inc
cs
clc
cmp
subb
fcmovnu
out
and
in
test
cmpsl
fnstenv
pop
sahf
loope
mov
sub
repz
jns
mov
inc
in
stos
std
and
test
leave
adc
pop
push
cmp
xor
jae
add
rcr
dec
mov
lea
mov
repnz
repz
repnz
jmp
sbb
je
jns
cmp
movsl
imul
add
addr16
lcall
clc
imul
xchg
dec
fs
jae
dec
add
push
or
out
adc
xor
dec
cmovo
fwait
dec
sub
movsl
lods
sub
movb
mov
dec
cli
bnd
arpl
mov
icebp
pop
push
loope
dec
lods
fisubrl
jl
jp
jb
std
sub
dec
nop
mov
sub
pop
movsb
mov
rclb
sbb
pop
mov
fidivrl
int3
in
xor
aaa
inc
sar
mov
xchg
in
shl
movsb
mov
lcall
dec
xor
sbb
sub
jns
outsb
xor
xchg
js
mov
or
add
shll
gs
ja
sbb
jb
ret
add
xor
xor
and
add
add
mov
mov
aad
mov
ds
in
push
mov
dec
std
and
pop
loopne
push
mov
fbld
push
repnz
mov
pop
fbld
mov
dec
mov
aam
movsl
xor
ds
cmpsb
xchg
into
movsl
pop
in
fucomi
je
jns
fwait
jno
xchg
icebp
pop
sbb
dec
sub
jp
xchg
int3
jne
cmp
ljmp
ficomps
cld
ss
mov
enter
inc
adc
clc
jno
ja
mov
mov
insl
enter
cmp
jmp
dec
shll
out
add
outsb
adc
nop
stos
pop
nop
imul
sbb
xchg
mov
call
outsb
push
shlb
inc
cld
push
repnz
mov
test
insb
popl
jmp
jge
mov
repz
or
dec
adc
psubq
xor
jbe
xchg
push
cmp
cmp
inc
lea
dec
and
cmp
fs
and
pop
add
sbb
daa
stos
sub
movsl
mov
imul
pusha
cmp
push
cmp
jg
out
pushl
adc
mov
adcb
mov
mov
add
sub
in
jbe
xlat
inc
xor
push
pop
xor
in
push
sbb
icebp
lods
aas
call
call
not
ret
pusha
adc
sbb
push
cwtl
adc
pop
or
lret
test
inc
jb
div
jae
je
mov
test
test
sub
mov
mov
sahf
sub
call
pop
cwtl
test
pop
sub
sarl
cld
arpl
mov
xchg
adc
fbstp
xor
add
test
lret
adc
inc
xlat
add
xlat
imul
mov
mov
mov
in
in
jg
pop
jle
and
add
mov
leave
mov
in
fs
imul
dec
imul
xchg
das
jmp
xor
bound
cmp
cmp
cmpsb
mov
lret
stos
out
repz
and
lret
mov
scas
es
jno
and
and
xor
jnp
push
xor
in
test
lahf
loop
pop
jl
mov
test
sub
pop
or
out
jmp
outsb
in
sub
cmp
push
mov
or
popa
jb
jle
out
sti
add
push
call
flds
jmp
push
jb
mov
cmp
repz
add
dec
adc
fucomp
mov
inc
loop
clc
ret
pop
sbb
cmp
and
dec
fbstp
cmp
adc
into
push
ds
mov
sbb
push
inc
and
ja
sub
push
push
scas
outsl
mov
mov
fisubrl
gs
dec
xchg
and
add
jge
ficoms
scas
inc
fdivrs
repnz
icebp
mov
fbld
daa
mov
int3
negb
xchg
pop
test
sub
outsb
insl
dec
aad
xchg
mov
imull
push
lea
subb
xchg
add
and
xor
push
ljmpw
push
sbb
sbb
sub
iret
sbb
pop
in
nop
in
cld
shlb
test
sti
xchg
lods
lcall
shr
xchg
addr16
test
add
scas
mov
in
jg
cmpsb
jb
insb
cs
xlat
les
and
lret
into
out
lahf
pop
pop
push
in
pop
movsb
mov
aad
testl
inc
xchg
mov
mov
andps
fwait
add
cmc
out
mov
cmpsl
inc
out
inc
xor
lcall
lahf
lahf
mov
pop
daa
adc
fists
mov
cld
out
js
fstp
xor
xchg
xor
shrb
idiv
and
or
bound
push
aas
mov
mov
clc
dec
test
enter
push
in
sub
sub
cli
stc
rcrb
mov
dec
push
push
mov
es
mov
out
mov
repnz
sbb
cmp
mov
pop
es
aas
pop
and
mov
add
and
mov
mov
push
and
aad
adc
popf
test
nop
jge
mov
and
ja
stos
and
ret
jge
sbb
repz
mov
jne
daa
repnz
lods
test
dec
addr16
push
repnz
add
stos
sbb
add
pop
imul
mov
out
pop
loop
sbb
push
or
je
ja
gs
pop
dec
in
sub
scas
xor
outsl
jne
dec
sahf
insl
ret
jle
adc
cltd
in
repz
addr16
fildll
aam
sti
jp
pushf
push
pop
sbb
ds
or
xchg
pusha
js
sbb
stc
xchg
arpl
xchg
add
enter
lret
fadds
cmp
jge
mov
dec
and
in
jbe
arpl
xchg
mov
mov
jge
sbb
and
out
add
xor
jmp
int
add
jle
ficompl
jle
ret
std
mov
dec
mov
nop
fwait
call
lock
pop
fmull
jmp
dec
cmpsl
xchg
pusha
xchg
sbb
inc
outsb
test
push
cmc
stos
mov
adc
sti
outsb
jmp
lods
test
inc
dec
lock
adc
xor
hlt
adc
mov
fildll
cmp
movsb
cld
cmp
shrb
add
xor
cld
mull
xchg
aad
xchg
sub
or
clc
faddp
pop
fmul
dec
das
sbb
je
jmp
mov
inc
pop
push
add
sub
adc
mov
mov
inc
adcb
push
lods
scas
sahf
scas
push
sbb
es
mov
dec
fwait
xchg
mov
pop
jge
jg
pop
mov
daa
xchg
cmc
movsb
mov
insb
mov
fs
jno
shrb
test
lock
adc
sub
and
pop
mov
push
jecxz
mov
add
loop
lods
cmpsl
into
inc
xor
std
push
fidivl
jmp
ret
dec
adc
jg
cld
leave
iret
int3
out
shll
or
add
xchg
cli
out
push
push
inc
sub
and
popa
mov
nop
shl
adcb
gs
mov
or
lock
sbb
cltd
sbb
stc
mov
sahf
cmp
sbb
jae
pop
mov
and
orl
sbb
sub
mov
xor
scas
cmp
mov
mov
das
lret
sub
fucomip
sarb
jle
imul
and
icebp
out
mov
leave
push
jns
mov
out
add
push
adc
dec
dec
les
mov
jns
into
push
xlat
jbe
fsub
or
jg
mov
cmp
mov
rcrl
arpl
lcall
sbb
repnz
push
xorl
and
pop
dec
frstor
repnz
pop
mov
cmp
add
or
cmpsl
inc
stos
and
shrw
fisttpll
clc
mov
in
out
push
xor
imulb
pop
add
call
fcmovnbe
pop
dec
xor
push
addr16
xchg
lods
jnp
pop
jae
mov
imul
push
ljmp
ljmp
sahf
addr16
lods
inc
dec
ficompl
call
sub
xor
xchg
add
hlt
sub
push
push
pop
inc
popa
outsb
pushf
movsb
enter
sub
adcl
cmp
or
cmp
jb
inc
lret
inc
insb
mov
das
mov
xor
cmc
mov
cld
mov
jmp
adc
jne
pop
and
sbb
in
sbb
outsb
pop
js
lock
sbb
subl
loop
idivb
out
fwait
cmp
sub
or
movsl
loopne
cld
cltd
into
mov
movsb
xchg
fnstsw
popf
mov
xlat
gs
sub
xor
int
cmpsl
pusha
ljmp
adc
xor
call
push
push
scas
and
inc
ljmp
push
in
push
dec
xor
dec
push
and
jge
mov
clc
leave
cmp
jo
mov
mov
mov
int
mov
hlt
dec
lea
push
dec
adc
sbb
jmp
jb
jo
jle
jecxz
pop
sub
fdivs
orl
adc
and
mov
imulb
xor
ret
adc
jno
push
sub
jmp
jmp
xchg
fstp
push
daa
cmp
imull
aad
inc
cmpsl
add
cs
or
stos
divl
sub
xor
popa
jae
movsl
ret
out
aad
loope
lcall
fs
sub
imul
das
push
cmp
xor
out
jb
aas
aas
mov
les
xor
add
pop
loope
jp
sub
leave
les
cmp
jno
les
mov
mov
or
inc
sub
xor
outsl
mov
jecxz
mov
lret
xor
std
mov
cs
iret
push
inc
add
push
outsl
in
es
push
pop
call
dec
ret
cmp
loopne
loope
push
add
push
jnp
scas
pop
adc
mov
jmp
fdivr
sbb
inc
ret
cmp
jle
ljmp
shrb
xchg
loope
push
add
cltd
fsubl
aas
xchg
stos
out
mov
sbb
and
lods
aaa
aaa
or
dec
mov
xor
sbb
or
mov
fidivrl
cld
mov
and
lds
aad
adc
repnz
and
in
xchg
adc
aad
inc
icebp
jno
push
sbb
jo
add
mov
xchg
xchg
cld
cli
lock
rcll
push
bound
cmc
roll
jb
mov
pop
fisubl
pop
call
inc
pushf
sub
test
mov
call
sub
mov
std
jns
xchg
jecxz
push
cld
leave
in
and
repnz
inc
pop
mov
pop
les
das
imul
andps
xchg
ja
mov
xor
int
sbb
ja
movsl
cmp
cmp
leave
aaa
xchg
addr16
xchg
daa
cltd
lea
push
jno
and
addr16
insb
imul
sub
push
stos
int
movsl
add
xchg
xchg
test
sub
sbb
mov
pop
and
push
xchg
fidivrs
dec
adc
push
pop
adc
jmp
mov
out
add
sbb
das
and
jae
xchg
or
data16
subb
orb
sti
cmp
cltd
dec
fistpll
ljmp
mov
ret
popl
imul
push
xor
ret
mov
fldl
stc
add
push
sbb
test
xchg
ret
xchg
inc
fcoml
iret
fmull
fldt
mov
inc
data16
or
mov
dec
dec
mov
cltd
jmp
in
shll
mov
sbb
iret
ficompl
push
xor
xor
or
sub
mov
adc
sbb
outsb
cmc
dec
movsl
test
repz
int
cmp
mov
push
hlt
sub
mov
sbb
mov
add
stc
into
popf
mov
fs
dec
fsubr
insl
fwait
add
push
outsl
cmpb
adc
jle
sbb
fisttpl
lods
cld
jmp
inc
jno
adc
and
mov
dec
xchg
in
rcl
mov
xchg
test
in
sbb
in
mov
insl
ret
cmp
cld
insb
mov
in
push
outsb
mov
or
aam
add
aam
test
xor
stc
add
and
jp
lret
les
cwtl
aam
lods
mov
je
addr16
test
xor
insb
das
push
decl
xor
ljmp
popf
mov
jmp
xorl
adc
test
pop
and
or
jle
popa
and
repz
icebp
fadds
sarb
mov
iret
int3
fstpl
inc
popa
or
out
je
cld
fcmovb
dec
shlb
pusha
adc
xor
jnp
mov
xlat
xchg
inc
testb
dec
jno
imul
cli
in
fprem1
shlb
insl
adc
movsb
pop
or
fmull
idiv
adc
mov
jg
cld
js
imul
sbbb
add
ret
sbb
popa
adc
in
iret
int
stc
fdivs
xchg
pop
xlat
jge
paddb
scas
xchg
jno
sbb
and
jbe
cwtl
and
or
push
cs
xchg
lock
daa
mov
add
ret
push
movsb
push
dec
out
xchg
mov
jno
lods
test
dec
loope
jb
insb
mov
sahf
mov
sbb
fcoms
mov
cmp
cmp
jl
in
or
clc
enter
test
stc
mov
andb
les
ss
nop
fisttps
in
sub
pusha
rcl
and
lret
ret
sub
jne
std
call
arpl
std
and
pushf
les
adc
repz
and
mov
iret
push
js
movsl
in
jno
jl
xchg
dec
and
je
roll
mov
rclb
dec
daa
out
insb
nop
into
fwait
mov
mov
push
jg
add
and
or
nop
xchg
and
mov
xlat
aaa
shlb
mov
sub
shrb
flds
cmp
pusha
add
push
adc
mov
idivl
xchg
fists
pop
ss
ret
or
add
je
and
add
pop
push
adc
mov
jnp
enter
push
jg
cmpsb
sub
and
mov
and
cltd
sub
jnp
sub
cltd
lret
or
cld
cmp
lahf
pop
add
inc
jno
cmp
and
xor
xor
inc
in
ljmp
repnz
push
popf
mov
mov
pop
paddsb
fistpl
cmp
cmpsb
inc
mov
pop
and
push
stos
lret
mov
imul
and
popf
outsb
cld
pop
add
imul
test
ret
dec
jno
inc
imul
push
icebp
jb
iret
jb
fisttpl
jmp
or
mov
and
pop
sbb
mov
test
jae
mul
mov
xor
bound
sbb
cmc
repnz
call
pop
mov
add
jp
mov
cmp
rol
cmpsl
lcall
addb
adc
frstor
out
xchg
adc
fnsave
cmp
push
xchg
sbb
sbb
push
jp
into
movsb
insb
jge
jo
cmp
jbe
cmpsb
cmpsl
lret
outsl
or
bound
scas
mov
notb
notb
push
hlt
ja
loop
mov
mov
mov
out
jae
add
xor
mov
and
cmc
push
hlt
fld
test
insb
lahf
mov
mov
xchg
fwait
stos
sub
popa
addb
push
pop
mov
fdivr
xor
pop
shrb
adc
fmulp
testb
add
test
inc
mov
lock
les
mov
subb
jnp
insl
rclb
sub
jbe
xchg
xor
xchg
in
mov
popa
fucomip
ljmp
adc
enter
popf
dec
repnz
and
dec
into
cmp
mov
jb
pushf
xchg
int3
fucom
xor
xor
mov
clc
aad
jnp
fs
mov
mov
mov
ljmp
pop
xor
mov
jmp
push
movsb
and
aam
jle
aam
les
xchg
inc
mov
and
test
mov
cli
cmp
pop
push
sub
cmpsl
pop
fcomi
in
sti
push
lods
rorb
xchg
imul
adc
pop
call
shl
sub
xor
push
mov
aas
test
dec
lcall
cltd
xor
push
sbb
outsb
add
mov
shrl
pop
ds
xorl
insl
xchg
mov
jnp
push
les
sarb
je
ds
out
xchg
cmp
outsb
jmp
int
jg
gs
add
cmp
fwait
xchg
stos
sti
stos
ds
jecxz
in
xchg
pop
rcl
pop
std
pop
cmpsl
add
aas
dec
mov
mov
sub
shll
or
sub
fnsave
lock
int
movswl
lods
test
pop
jl
in
cmp
sub
rorb
pop
add
pop
inc
mov
mov
rcrl
ffreep
nop
rorl
and
and
cmp
stos
rclb
test
cmp
out
cmp
test
clc
aaa
in
xor
pushf
sub
subl
jmp
lds
popa
pushf
insb
in
or
clc
mov
cmc
xor
mov
jmp
ret
mov
aaa
test
add
in
mov
gs
push
add
xchg
flds
inc
push
pop
xchg
mov
aas
mov
mov
ficompl
inc
inc
lods
sbb
movl
int
sbb
addr16
int3
or
and
mov
aam
adc
cmpsl
adc
int3
lret
dec
into
insb
arpl
pop
sbb
pop
inc
jmp
popa
scas
into
scas
movsb
push
lea
mov
sti
jnp
xchg
cmpsl
and
stos
cli
call
jbe
in
test
mov
cli
cmp
dec
sub
test
cmc
lock
xchg
mov
pusha
or
xor
test
lock
ret
lahf
int
lcall
aas
pushf
mov
inc
ljmp
cmp
insb
pop
dec
mov
or
pop
pop
inc
and
stos
xor
xchg
jle
sub
jl
pop
mov
mov
dec
fwait
xor
sar
frstor
lock
cmp
and
scas
lcall
or
daa
push
jmp
mul
movsl
out
test
dec
jge
sbb
push
sbb
les
mov
mov
pop
mov
dec
and
test
dec
hlt
imul
movsb
sub
outsl
lods
mov
mov
inc
and
mov
jnp
or
int
enter
arpl
inc
ror
orl
sbb
push
sub
jg
xor
sbb
cmp
mov
dec
mov
mov
and
sub
adc
cld
push
pop
inc
pop
dec
adc
xchg
lret
push
ds
cmp
pushf
inc
rol
jb
leave
mov
jb
mov
iret
fs
loop
and
movsb
push
cmp
test
push
pop
into
pop
jp
in
daa
push
mov
fstps
into
cmp
or
out
jo
je
pushf
js
int3
js
xchg
cmpsb
gs
and
inc
mov
add
pop
dec
repnz
sbb
cmp
pop
inc
jl
imulb
rorb
into
test
xor
sub
roll
iret
push
pop
mov
mov
or
shlb
in
xchg
cmpsb
xchg
outsl
popa
push
aam
cmp
mov
add
paddb
cmpsl
lea
out
or
push
xor
test
in
jmp
dec
in
loop
aam
mov
dec
sub
sub
cmp
out
inc
jp
add
sub
add
mov
mov
das
lods
shl
and
fbld
jle
sub
jg
mov
xor
int3
out
fildl
mov
mov
iret
in
stos
fists
inc
mov
aas
outsl
sub
mov
aad
sub
mov
push
jp
dec
shrl
cmpsl
push
push
daa
rcrb
orb
cmp
push
pushf
cmp
les
nop
mov
data16
jbe
scas
sarb
sbb
push
inc
popa
jge
rolb
mov
pop
mov
lcall
or
cltd
insl
add
mov
lods
pop
sbb
pop
js
dec
out
push
insl
lods
mov
dec
cmp
inc
mov
inc
xor
push
push
inc
fsubs
ja
push
cld
hlt
mov
sahf
repz
mov
data16
push
sub
pop
dec
adc
mov
and
int3
mov
jg
sbb
fstpl
xor
inc
pop
pmulhw
in
inc
xchg
push
mov
or
rorl
shrb
icebp
iret
cltd
nop
push
jne
movsb
rol
out
out
push
fdivrs
inc
dec
sub
xchg
mov
nop
cmp
or
and
or
gs
sub
xor
push
xor
test
adc
test
fs
mov
daa
mov
gs
jae
inc
or
mov
adc
stos
xchg
sub
cs
xor
pop
xlat
fmull
and
inc
mov
xchg
mov
inc
out
mov
gs
cmp
inc
sub
lods
data16
movsl
lahf
xchg
adc
pop
push
dec
mov
inc
lret
jp
push
push
adc
mov
jb
or
jb
dec
xor
inc
sub
xor
shl
pop
cs
xchg
pop
pop
gs
xor
sti
mov
mov
adc
or
loope
test
mov
or
xchg
idiv
xchg
and
mov
hlt
or
jb
lret
ja
mov
xor
test
fsubrs
mov
in
mov
cmp
or
scas
inc
iret
adc
jae
cmpsb
addr16
xchg
cwtl
jl
test
loope
xchg
mov
jno
fstp
jp
sbb
mov
xor
fld
xor
mov
cli
pop
insl
call
dec
cmp
iret
imul
push
cmp
lods
jb
add
int
pusha
sbb
std
mov
into
and
jge
pop
sahf
sub
inc
inc
mov
ljmp
movsl
lret
dec
inc
mov
mov
lahf
mov
cmpsl
fistps
scas
out
or
arpl
rcrl
jb
pop
fisubs
aam
mov
out
mov
xor
and
cmpsl
daa
sbb
push
fidivl
das
pushf
addb
cmp
push
fwait
cmp
cmp
inc
cli
push
les
push
mov
jmp
leave
push
int3
dec
mov
push
ret
clc
push
cltd
cmpsl
test
in
push
repz
dec
adc
cmp
test
mov
out
mov
jmp
iret
icebp
imul
cmp
push
sub
scas
testl
and
int
cmp
jecxz
mov
add
mov
lcall
mov
aam
faddp
xchg
xchg
xor
mov
dec
sub
test
cmc
mov
les
mov
and
dec
les
cmp
stc
into
aad
data16
out
std
push
repz
xchg
addr16
mov
sti
or
xor
hlt
fwait
pop
fs
push
mov
stc
jnp
scas
push
xchg
xsave
pusha
fdiv
adc
lcall
outsb
stos
jae
adc
sbb
cwtl
mov
pop
bound
xor
jb
push
repnz
mov
push
and
or
lods
cld
sub
pusha
scas
js
mov
xor
aaa
fidivl
fdivs
mov
fs
mov
push
stos
icebp
stc
dec
inc
cmp
cltd
mov
lods
inc
leave
dec
sbb
sub
push
scas
scas
push
sbb
dec
jo
add
xchg
xor
mov
out
shr
pushf
ss
xlat
cld
push
fistpll
stos
dec
loopne
xchg
fidivrs
pushf
inc
pop
xor
fistl
lods
mov
xchg
jle
cmp
push
aad
inc
mov
dec
mov
imul
lret
out
fwait
cmp
iret
mov
xchg
jae
dec
or
xchg
out
add
in
test
bound
or
jb
pop
push
inc
aam
insl
or
push
mov
and
or
into
iret
test
xor
pop
inc
loope
mov
andl
push
inc
and
mov
cmp
jns
add
xchg
fisubrs
orl
aam
sub
mov
dec
pop
dec
sahf
imul
frstor
pop
jmp
add
out
inc
mull
xchg
mov
cld
add
fwait
sub
mov
sub
jecxz
push
pop
andb
or
jg
sti
cli
push
cmp
xchg
mov
jb
pop
roll
push
clc
xchg
cmpsb
in
xchg
jne
xor
xchg
and
cmp
ret
xchg
or
pop
push
push
inc
jno
jecxz
test
daa
lea
mov
in
adc
jne
shl
insb
mov
gs
call
jl
xor
aas
xchg
sbb
cmp
pusha
inc
fsts
fsubrs
sub
mov
out
outsb
pop
js
add
je
hlt
out
bound
addr16
je
xchg
arpl
pushf
out
rclb
inc
fcompl
and
cwtl
dec
mov
push
jns
fldt
pop
add
push
adc
pmaxub
movsl
sbb
or
ljmp
dec
and
mov
mov
outsb
push
inc
in
xor
dec
mov
stc
rcrb
inc
into
push
xor
fadd
outsl
sti
stos
pop
push
testb
shlb
les
add
sbb
inc
and
in
addr16
mov
aad
mov
push
mov
movl
int
into
pop
popf
je
dec
outsb
arpl
lret
sbb
daa
dec
push
stos
jb
dec
lret
lret
sub
leave
ficomps
mov
out
outsb
imul
ret
push
and
cmpsb
add
cwtl
loope
push
cmpsb
mov
das
adc
or
jbe
xlat
cmp
mov
jmp
test
sbb
mov
mov
inc
call
sub
xchg
mov
scas
lcall
sub
add
or
test
xor
xchg
dec
jne
xchg
dec
mov
incb
add
sbb
sub
andl
sub
mov
pop
sub
arpl
mov
int3
add
rclb
aaa
xor
stos
adc
adc
stos
jmp
test
inc
stos
mov
or
sub
es
gs
sahf
hlt
jl
pop
out
mov
push
sub
dec
adc
icebp
adc
nop
out
sbb
mov
mov
xchg
jb
xchg
xchg
movsl
push
into
lods
in
mov
jl
or
test
push
and
inc
or
jne
into
mov
cmp
stos
imulb
mov
repnz
jnp
push
jp
jge
jp
cltd
std
je
outsb
xchg
mov
lcall
les
mov
cltd
mov
rorl
sbb
addl
test
mov
dec
push
mov
fcmovne
jecxz
in
or
push
mov
mov
mov
es
call
mov
sbb
sbb
mov
sbb
mov
sbb
mov
daa
sti
dec
pop
jno
push
inc
lock
cmc
inc
cld
push
addr16
or
sub
test
test
fistpll
mov
pop
rolb
mov
sbb
iret
cld
fildl
jp
imul
int3
pop
mov
enter
scas
mov
inc
insl
jle
popa
imul
repnz
and
push
push
push
mov
adc
add
dec
sti
stos
mov
arpl
cmp
andb
jg
cmp
dec
scas
xor
and
ret
xlat
push
sub
cmp
loope
ret
xchg
dec
jno
jb
loope
mov
andl
push
ds
inc
sub
imul
and
lods
mov
lock
inc
pushf
fsubs
lret
push
jle
roll
loopne
push
lds
push
test
add
gs
aam
pop
mov
inc
dec
push
or
add
adc
out
or
lods
aaa
out
mull
negl
mov
cmp
lret
add
mov
std
push
mov
filds
lods
push
fstpl
jb
mov
push
cmp
ds
lods
fcomps
mov
mov
out
outsb
cmc
inc
cmc
dec
dec
out
sbb
and
cmp
add
jl
mov
test
jae
popf
pmullw
mov
mov
mov
cwtl
rorb
push
lcall
mov
jnp
daa
push
fwait
inc
mov
lret
in
mov
add
add
sbb
mov
mov
ret
pop
cmp
lcall
lret
or
cmpsl
push
or
sub
fdiv
push
xchg
push
cmp
sub
push
sbb
jmp
sahf
int
mov
outsb
divl
cmp
cwtl
jl
and
andl
sbb
lcall
mov
leave
iret
cmpsl
pop
dec
sub
test
roll
and
test
sbb
xor
scas
je
push
sbb
mov
rorl
pusha
ja
sub
adc
sbb
icebp
xchg
mov
push
sbb
jne
and
sub
test
cltd
jo
dec
and
xor
stos
test
ljmp
mov
leave
pop
dec
ss
inc
pop
mov
xchg
pop
fcomi
push
orl
sbb
adc
jbe
lret
mov
and
daa
xchg
pop
jmp
adc
lret
in
pop
sarl
xchg
insl
movsb
popf
fisttpl
add
into
cmp
mov
dec
xchg
movsl
inc
jecxz
xchg
mov
std
mov
sbb
push
aad
aad
push
mov
lods
sbb
push
data16
in
dec
in
mov
pop
mov
mov
out
or
cmpsl
dec
fld
aaa
add
mov
xchg
xor
in
xor
leave
or
mov
push
fdivrs
xor
loop
push
lahf
sub
jmp
xchg
into
mov
dec
repnz
out
scas
sbb
out
addr16
or
jge
popa
cmp
mov
xor
mov
call
lcall
or
xchg
adc
mov
xchg
push
aaa
std
sub
into
addr16
jns
jecxz
add
push
cs
sbb
push
ds
pusha
int
cmc
mov
cmp
sbb
push
outsl
sbb
mov
je
scas
shl
imul
xlat
inc
into
xchg
and
jmp
in
jb
cmp
sarb
pop
pushl
cltd
ret
scas
mov
stos
leave
cltd
inc
or
mov
jbe
cmpsl
or
inc
je
pop
xlat
lcall
jne
int3
jmp
or
pop
cwtl
mov
sahf
pop
js
inc
lods
mov
mov
arpl
aad
iret
leave
hlt
add
in
fmul
pushl
insl
jmp
mov
add
adc
inc
das
loop
lcall
in
xorb
sbb
mov
enter
iret
std
mov
seta
or
mov
or
or
adc
rorb
icebp
jecxz
cmp
dec
fidivrs
nop
mov
popa
out
into
cmp
mov
xchg
cs
dec
insb
pop
out
test
jb
jecxz
subl
xor
repz
aas
cmp
rcr
pop
pop
ret
popa
pop
mov
pop
and
into
mov
insb
push
jp
sbb
cmp
mov
ljmp
cli
gs
sbb
push
call
sbb
inc
ja
loope
push
and
add
lock
jge
scas
repnz
cmp
dec
std
out
shlb
inc
ja
popf
dec
or
stc
pop
call
pusha
xchg
adc
cmp
ret
daa
gs
mov
or
scas
daa
scas
ret
jo
cmpsl
xlat
aas
repz
nop
xchg
ljmp
mov
addr16
aam
addb
push
or
stc
frndint
pop
xor
push
xchg
prefetch
or
lods
movsl
repz
ss
test
adc
mov
xor
mov
cmp
sbb
lea
imull
dec
in
mov
stos
push
xor
jl
icebp
pop
and
mov
cmpsl
setbe
push
fs
mov
rcl
lea
bound
dec
sub
push
inc
es
int
out
repz
push
adc
addr16
and
adc
sti
je
push
mov
adc
cmc
int
push
xor
in
mov
out
iret
enter
push
loope
dec
int
xchg
or
ret
das
or
fisttpll
fisubrs
shrl
mov
sbb
or
jbe
dec
xor
cmpsl
jp
into
sub
std
inc
mov
ja
jbe
mov
mov
out
dec
out
xor
or
in
push
aad
mov
rorl
mov
xlat
mov
pop
xor
cmpsb
pop
aam
cmp
add
sbbb
pop
inc
sahf
leave
out
and
pusha
lcall
pop
pop
movsb
xor
cs
cmp
push
dec
out
sarl
mov
mov
adc
out
sub
xchg
cmp
mov
sbb
shrb
bound
inc
xor
dec
mov
rcl
dec
out
push
pop
xchg
lea
jmp
jmp
imul
repz
xchg
imul
cmpsb
imul
out
fdivrp
out
sbb
push
xorl
por
dec
subb
les
mov
add
mov
notb
push
sahf
jno
xchg
cmp
inc
sbb
cli
or
inc
pushf
pusha
stos
adc
leave
js
dec
out
push
sbb
mov
jmp
movsb
popf
jmp
and
jno
mov
mov
and
mov
xor
fs
mov
lods
lods
js
int3
xchg
dec
addb
adc
or
mov
dec
mov
pop
dec
in
sahf
adc
jp
sarl
ds
aad
add
les
outsb
mov
pop
jecxz
int
dec
lcall
lock
cmpsl
jno
inc
jo
psadbw
stos
mov
lret
inc
fidivrs
popa
sbb
out
jl
push
js
mov
fldl
jmp
jg
xor
jle
mov
push
je
xchg
inc
jmp
pop
mov
insb
fmuls
jg
or
mov
mov
and
inc
repz
sub
in
inc
jmp
or
pop
aas
mov
pop
es
mov
pop
mov
lret
ret
test
xor
sar
fiadds
fs
mov
andl
xor
mov
fistl
push
sbb
jp
push
pushf
testb
test
mov
jbe
int
inc
shlb
movsl
mov
nop
fsts
lcall
fcmovnb
fildll
lahf
inc
sbb
sbbb
lahf
sub
mov
cld
arpl
dec
in
cmp
in
sbbl
shll
pushf
fsubs
das
negb
fwait
jmp
mov
sub
mov
iret
imul
int3
lods
fcomps
iret
and
repnz
bound
or
jl
sbb
lea
js
fucomi
popa
adc
mov
cmp
xchg
in
pop
fadds
lea
scas
sbb
push
clc
insb
xchg
pop
mov
sub
sbb
pop
out
popf
lds
mov
in
imul
sbb
jl
xor
xchg
push
mov
lods
xchg
xor
xchg
inc
aas
adc
lahf
jnp
hlt
orb
out
stos
xchg
insw
or
jns
cmp
ret
ror
movsb
call
mov
dec
dec
xor
mov
mov
das
in
add
pop
in
adc
andnps
sub
mov
in
cmp
push
out
jo
and
inc
cmp
rclb
ja
scas
pop
mov
sbb
pop
jmp
jge
cmc
aas
decl
mov
nop
push
xorl
loopne
mov
insb
hlt
dec
mov
cmp
popw
add
mov
aam
shl
xchg
inc
nop
outsb
iret
jl
std
inc
gs
cmpl
leave
jne
jp
pop
push
movb
icebp
decl
cmp
outsl
and
inc
jnp
jp
sahf
nop
xchg
test
xor
gs
lcall
fucomp
les
cwtl
inc
daa
imul
jmp
idivb
adc
push
mov
inc
cmp
mov
sub
out
fcmovnbe
push
or
push
scas
jmp
xchg
inc
dec
xchg
decl
xchg
insb
aam
mov
cmp
sub
fwait
mov
jb
fs
mov
jne
jg
jns
test
addr16
js
scas
inc
xor
xor
xor
aam
dec
cmp
mov
popa
lcall
out
mov
scas
rorl
lret
stos
pop
clc
flds
jmp
mov
adc
sub
sti
inc
cmc
sub
mov
ret
test
inc
mov
xchg
sbb
push
test
xor
mov
pop
stc
sbb
fs
and
jo
loopne
sahf
bound
pushl
inc
fldl
ror
sub
fwait
std
insl
data16
mov
loop
xchg
cwtl
push
aas
ret
jbe
aas
decb
pusha
pop
pop
dec
xor
ss
out
out
fwait
arpl
sti
adc
push
and
and
js
test
rorb
sti
cmpsb
repz
scas
ja
lret
std
pop
pop
enter
insb
in
add
aaa
add
add
pop
cmp
jne
xor
gs
jle
adc
adc
mov
or
mov
lock
scas
inc
mov
nop
xorb
test
push
adc
mov
rcrl
sbb
jl
fs
aas
sub
mov
inc
pop
cwtl
jmp
pop
ljmp
cmp
and
mov
rcrb
push
decb
ret
insl
stos
aas
loop
scas
cmpl
mov
int
add
xchg
xchg
out
inc
jno
outsl
push
mov
fmul
push
jg
dec
sahf
shrb
pop
vpminsw
sbb
iret
mov
es
inc
sti
add
inc
test
sbb
lods
inc
mov
cli
pop
push
lods
ds
mov
clc
dec
pop
fs
push
lods
imul
cmpsl
mov
and
push
in
jb
jecxz
lcall
inc
adc
and
std
fdivs
and
cmp
out
adc
sbb
in
loope
stos
jnp
dec
adc
push
sub
addb
push
inc
aas
shr
mov
data16
jo
push
pusha
push
adcb
ds
lahf
fisubrs
int
sbb
and
xor
int3
jge
lret
stc
mov
push
and
mov
dec
push
pop
pop
fimuls
sub
push
sub
jno
insb
rsm
xor
mov
je
fisttpll
push
xchg
dec
arpl
popa
scas
sub
bound
clc
cmp
mov
movsb
mov
add
call
inc
std
push
jle
jne
ret
in
mov
cmpsl
xor
movsb
std
push
inc
out
cld
cltd
and
mov
loope
xor
int3
jae
pop
xchg
jge
mov
push
fsubr
lods
push
lret
add
mov
out
shlb
mov
jg
xchg
xor
jmp
int3
idivb
and
xchg
mov
adc
cmp
fbld
jmp
xlat
cmp
add
adc
ds
mov
jp
xor
dec
push
inc
clc
or
inc
pop
jne
aaa
iret
mov
xor
js
mov
aas
dec
xor
out
fldenv
cld
lcall
aad
jp
mov
push
fwait
enter
cmp
jb
inc
and
push
sbb
pop
cmp
or
test
jg
mov
xor
or
shlb
ret
ud2
cltd
push
mov
and
push
inc
ror
mov
lock
mov
int
mov
push
inc
pop
test
mov
xchg
sub
sbb
jbe
mov
repz
fwait
nop
jmp
push
sarl
xor
inc
jns
jmp
cld
sub
ds
fcomps
sub
xor
jmp
xchg
pop
inc
lahf
adc
iret
xchg
rcrl
sub
shl
jg
test
xchg
and
and
mov
jo
and
inc
fsubrp
cmp
add
inc
sub
rclb
dec
test
and
pop
into
xorb
sub
push
lods
xor
int3
out
out
pop
mov
cli
fldt
cmp
mov
adc
ja
inc
push
adc
aaa
lcall
insl
popf
sub
mov
test
mov
jmp
xchg
mov
aaa
and
dec
push
daa
lods
lea
jae
int
daa
push
mov
test
fisubrl
outsb
jmp
or
cltd
xchg
daa
repnz
xlat
mov
dec
inc
inc
mov
stc
loope
dec
fs
xchg
add
jb
sbb
out
adc
cmp
les
xchg
test
call
push
jge
sbb
nop
fldenv
lret
sub
xchg
gs
lret
ret
mov
punpckhdq
test
stos
jbe
enter
cld
scas
int
fsubrs
scas
in
call
jmp
fidivs
pop
je
loop
mov
fs
pusha
fisttpl
clc
in
push
int3
mov
frstor
pop
outsl
inc
pusha
mov
jno
in
dec
fstpt
mov
jb
sub
inc
mov
add
dec
icebp
add
xlat
sub
jg
xor
loope
movsl
sbb
jecxz
pushf
addb
mov
pop
mov
scas
and
sti
lcall
test
lcall
mov
push
cmp
mov
push
movsb
in
add
mov
fs
in
xchg
inc
mov
pusha
xlat
imul
pop
push
mov
in
push
lret
lret
sub
ds
rcl
cmpsl
loope
movsl
test
mov
stc
jne
push
sbb
push
leave
add
loop
fdivl
fsubr
lock
cmc
cmpl
pop
std
outsb
push
push
nop
cli
pop
jmp
mov
daa
sbb
scas
pop
movsb
ret
test
in
sti
test
xchg
adc
in
ss
xchg
jae
mov
add
mov
ja
movsl
ret
imul
call
mov
inc
lcall
adc
dec
jo
push
jb
mov
and
pusha
cmpsl
imul
inc
sbb
adc
and
cld
ret
xchg
shll
pushf
push
mov
arpl
test
negb
ljmp
sahf
and
sbb
xchg
outsl
adc
or
jne
rcll
push
inc
sub
lods
inc
fcoms
mov
mov
fnstenv
push
lock
push
xchg
adc
enter
adc
shlb
jns
lahf
aam
popf
andb
mov
cli
sbb
jne
jmp
lea
or
cmp
mov
cmp
pop
jo
lods
les
ds
lcall
enter
mov
popf
lods
scas
ret
outsb
jo
rcrl
push
push
dec
repz
fidivl
xor
sbb
cmp
jle
push
sub
jmp
fs
mov
jmp
adc
or
jge
ds
fs
pusha
aas
mov
imul
bnd
fnsetpm(287
push
mov
sarb
rclb
dec
sub
jns
in
or
add
das
cvttps2pi
adc
fld
subb
cs
sarb
fcmovbe
data16
lahf
adc
out
xor
jl
je
jl
jno
push
jbe
lea
leave
xorl
out
bnd
ljmp
int3
sbb
xchg
cli
cs
xor
bound
int
dec
lret
sub
hlt
fwait
push
push
call
aam
push
or
dec
mov
aaa
arpl
and
pop
rcll
xor
in
cmpl
aaa
rorl
cmp
mov
add
push
fdivs
cmp
and
movsl
mov
scas
fisubrl
or
imul
xchg
orl
jmp
xor
fsubrp
push
push
inc
dec
jb
mov
mov
dec
jo
inc
push
inc
mov
mov
imul
inc
mov
xchg
aad
imul
cmc
sbb
es
mov
repz
jb
add
inc
int3
sti
adc
pop
ljmp
mov
cmp
sub
mov
add
push
mov
xchg
out
mov
cmp
lods
adc
add
addr16
pop
ljmp
jno
mov
lea
or
enter
pop
sbb
rol
rorb
mov
sti
dec
mov
fstps
scas
fisubl
insl
add
sub
xchg
cmpl
xor
xchg
fucomi
fdivrl
jnp
mov
shrb
stc
dec
mov
ja
scas
mov
es
adc
adc
cmp
enter
push
test
add
fisttps
push
mov
push
adc
fwait
das
stc
imul
mov
xchg
push
es
xchg
insb
cmp
outsl
dec
lret
xor
inc
in
sbb
cmp
lcall
fidivl
ret
xor
daa
jae
in
mov
mov
and
pop
sub
jnp
mov
inc
adc
and
test
push
notl
fcomps
movsl
leave
cld
sub
stos
pop
imul
fcomp
loop
pusha
dec
rcll
test
lahf
mov
sbb
jp
pop
rcrl
andl
push
cmp
int
jns
xchg
loope
add
gs
sar
dec
pop
or
push
jo
je
push
push
into
ss
push
jecxz
push
push
clc
loope
dec
or
push
nop
pusha
adc
dec
pop
sahf
out
pop
cmp
enter
andl
lret
outsl
aad
cmp
aam
ja
push
flds
call
or
dec
inc
jne
jo
cli
arpl
scas
je
leave
inc
stos
aaa
nop
mov
es
mov
or
in
adc
fxch
xchg
dec
mov
mov
stos
xor
imul
div
jmp
cmp
aad
jmp
mov
sbb
sub
mov
test
cmp
push
inc
in
pop
push
movsl
pop
mov
jns
pause
cmp
stc
test
leave
and
movb
dec
hlt
je
rcrb
sbb
lods
out
fnsave
jle
mov
movsb
ret
jnp
adc
dec
push
pushl
ret
cmc
in
bound
rol
mov
call
add
bound
mov
mov
movsl
jne
pop
add
mov
xchg
push
rcl
into
jo
pop
and
insl
ja
lar
inc
xchg
push
lds
jne
aad
push
lea
hlt
outsb
shll
lret
inc
pop
nop
sbb
add
cmc
sbb
cmp
test
push
cli
and
cli
add
hlt
push
test
aad
pop
or
xor
sbb
hlt
cmp
aad
test
cmpb
repz
cmpsb
xchg
mov
push
lcall
in
stc
or
iret
in
xchg
mov
sub
xadd
ds
sub
dec
dec
or
test
jle
and
bswap
inc
pop
sbb
mov
fisttps
and
or
cmpsl
inc
mov
sub
into
fildll
adc
adc
xchg
insl
or
hlt
adcb
pusha
aas
dec
imul
test
xchg
enter
lahf
jne
out
rcll
out
dec
test
inc
popa
shl
lret
mov
fnstenv
add
or
mov
pop
push
inc
aaa
mov
dec
push
xor
fnstenv
test
pop
sbb
push
jns
or
mov
insl
pop
lahf
popa
mov
test
sub
test
in
les
dec
out
sub
sub
les
popa
dec
adcl
inc
lret
add
cmpsb
orl
sub
daa
mov
xchg
pop
and
xchg
and
imul
int
in
fisttpll
pop
addb
es
add
pushf
int
mov
add
repnz
imul
outsl
nop
pop
cmp
fs
or
pop
mov
fcmovne
dec
lahf
add
fs
repz
rcrw
cmp
inc
push
inc
jns
sub
std
cmp
pop
or
or
xor
mov
or
mov
clc
jge
stos
push
fwait
shl
fwait
mov
xchg
mov
mov
aad
adc
js
mov
mov
cmp
jmp
jp
in
adc
and
je
pushf
and
fstp
dec
mov
push
fdivrl
jmp
xor
sahf
xchg
ljmp
mov
add
push
mov
cltd
add
xchg
or
and
cmpsl
mov
cltd
jo
nop
adc
dec
call
sbb
push
movsb
adc
sbb
ds
iret
rcrb
mov
fisubl
stc
int
adc
jp
xchg
dec
adc
xor
aas
mov
sbb
dec
adc
pop
mov
and
xchg
inc
das
sbb
mov
push
push
loop
push
std
sub
mov
xchg
adc
sbb
fistl
mov
jo
sbb
aam
push
aad
fcmove
testb
add
sub
aad
cltd
adc
fs
lds
xchg
add
out
negl
lret
jae
outsb
dec
push
loope
cmp
and
sbbb
loope
stos
sbb
jmp
stc
adc
cmp
stc
loope
adc
jge,pn
stos
xchg
dec
shl
lret
pop
test
sbb
popf
sahf
sbb
and
and
dec
inc
das
cld
movl
push
adc
xor
sbb
xchg
or
pop
inc
aam
icebp
xor
pop
xchg
adc
or
out
jecxz
cmp
mov
incb
xchg
in
xchg
gs
dec
mov
mov
repnz
and
push
pop
jbe
xchg
xlat
add
pop
icebp
notb
xchg
aam
mov
pop
xor
pusha
mov
sub
insb
adc
jnp
mov
jbe
push
fidivrs
cli
jno
adc
pminub
inc
movsl
mov
jne
ljmp
subb
xchg
out
jge
push
push
es
sbb
cmp
or
inc
dec
in
leave
mov
fidivrs
roll
sub
xor
and
stos
adc
sbb
sub
jg
dec
xor
mov
xor
jp
mov
rolb
dec
jae
gs
repz
pop
icebp
push
insb
mov
inc
adc
jp
into
mov
fadd
cmp
mov
repz
cld
mov
fisttpl
xor
sub
or
pusha
jp
push
jecxz
push
xchg
mov
lock
sbb
dec
inc
popa
jp
stos
sahf
push
aam
hlt
jmp
pusha
es
clc
xchg
subb
jp
pop
or
test
adc
cli
and
jnp
int3
repnz
pop
fs
mov
push
movsb
rcrb
pop
andb
and
jge
insb
sahf
and
out
dec
ret
lahf
mov
push
and
mov
loopne
and
jecxz
fabs
push
ss
add
xchg
and
xchg
adc
or
cmc
outsb
mov
dec
xlat
insb
xlat
stos
mov
clc
xchg
xchg
xor
movsb
push
daa
and
pusha
fidivrs
or
jno
pop
cmp
insb
and
mov
xchg
or
mov
inc
lds
xchg
inc
cli
rcrl
xor
xchg
test
sub
adc
or
repnz
push
fxch
cli
hlt
test
daa
xor
in
scas
pop
addr16
jb
hlt
ds
icebp
or
inc
test
loopne
and
loope
pop
push
jo
mov
xchg
rolb
aaa
and
jno
add
hlt
push
mov
mov
jbe
push
scas
dec
js
test
andl
outsb
imul
stos
cmp
push
sub
mov
mov
mov
outsb
push
sti
out
push
hlt
lahf
sub
dec
mov
mov
pop
mov
mov
cmp
adc
mov
in
sti
loopne
mov
and
imul
adc
data16
test
aad
adc
push
push
push
adc
xchg
popa
aas
inc
call
into
sbbl
int3
jle
dec
xor
mov
xorb
roll
lock
test
inc
leave
subb
mov
lds
lods
xor
jle
ljmp
enter
push
xlat
fsubrl
adc
bound
xor
jne
jae
das
xchg
popf
gs
inc
mov
leave
negb
mov
mov
add
scas
aaa
in
lcall
jmp
pop
fdivl
mov
jo
sbb
cmc
es
pop
imul
enter
aaa
pop
pop
inc
xchg
push
popa
pop
pop
jmp
rcll
push
cmpsb
lahf
jp
dec
mov
or
sub
mov
out
add
jne
test
movsb
out
add
std
popl
outsb
push
mov
adc
test
mov
mov
ret
sbb
psrld
fisubs
or
cli
mov
push
test
inc
stos
push
sbb
cld
mov
cmp
mov
mov
inc
std
call
and
sbb
xchg
notb
lea
js
push
leave
xor
jecxz
mov
adc
mov
jnp
cmp
sar
cmp
iret
stos
push
adc
popf
mov
out
xchg
imul
and
mov
push
sarl
mov
mov
bound
mov
js
dec
out
dec
pop
cltd
mov
mov
pop
push
cmp
pop
out
aad
pop
test
mov
lcall
test
cltd
dec
inc
into
rcl
and
scas
nop
cmp
into
in
adc
std
loopne
enter
inc
mov
sub
jmp
out
lahf
mov
mul
push
cmp
stc
fiadds
iret
loopne
mov
xor
out
sbbl
cmpsl
out
call
mov
push
clc
cmc
bnd
insb
int3
in
xor
fs
leave
in
push
jno
or
mov
cmp
sbb
stos
gs
xchg
mov
mov
mov
add
dec
push
or
add
adc
dec
cmc
sbb
mov
adc
bnd
xchg
mov
outsb
ja
fidivl
dec
out
sbb
and
clc
mov
ret
add
cmpsl
dec
inc
rcrl
cmp
push
pop
aad
in
out
nop
adc
aas
aas
cmp
cmp
xchg
xor
fcoms
fstl
mov
xchg
adc
ja
cmp
xchg
dec
mov
shl
xchg
mov
fimull
sub
jo
mov
lahf
mov
ret
cmpsl
ds
or
push
push
popa
data16
xchg
and
xchg
popf
ret
arpl
jo
sahf
pop
mov
notb
pop
push
pop
add
das
pop
cmp
xchg
add
mov
js
stos
jae
pop
js
call
fistpll
arpl
lahf
dec
cmpsb
ret
je
xchg
and
push
pop
adcb
mov
inc
fistpll
out
stos
sbb
rorb
or
gs
stc
inc
int
lahf
dec
roll
xchg
stos
aad
mov
push
jmp
mov
jb
jmp
mov
jmp
rol
xor
lock
inc
jbe
adc
push
iret
mov
adc
dec
ret
and
mov
fs
cmc
fldl
or
mov
mov
repnz
aaa
inc
movsl
orb
jp
pop
push
aam
xor
adc
xor
lahf
add
mov
mov
mov
or
testb
adcl
sub
mov
out
mov
inc
cmp
mov
lock
fstl
jmp
adc
mov
jmp
sti
or
jle
cli
je
fbld
sub
adc
mov
xor
mov
mov
cmc
mov
or
jle
test
mov
xor
cmp
adc
aas
lods
test
sub
mulb
or
popf
sbb
call
pop
callw
xor
ja
ljmp
jae
call
and
cli
inc
in
dec
pop
mov
and
add
lods
xchg
js
push
ret
addr16
daa
xor
jle
out
dec
pop
and
inc
fimuls
xchg
ss
lcall
pop
nop
mov
jg
test
mov
insb
and
mov
sub
inc
dec
mov
lock
mov
sbb
cmpsl
scas
or
jl
cmp
add
adc
int
cmpsb
pop
push
push
aam
jp
add
jmp
jl
dec
sub
idivb
fcoml
push
dec
fisubs
inc
add
pop
mov
lret
add
inc
imul
in
nop
test
pop
pusha
inc
sub
inc
xchg
hlt
push
hlt
repnz
pusha
lods
cld
xor
insl
sub
jne
mov
xchg
adc
je
hlt
adcl
movsl
jge
pop
fs
nop
sbb
aad
pushf
inc
add
jno
aad
mov
or
or
shr
jg
xor
add
dec
gs
inc
sbb
ja
cwtl
hlt
xchg
icebp
call
fstps
mov
pop
jp
aam
popa
or
dec
gs
adc
sahf
pop
dec
and
lcall
adc
dec
gs
xor
mov
and
jbe
fwait
and
mov
scas
in
in
les
pop
add
cmpsb
imul
adc
push
push
mov
ljmp
cmpsb
adc
mov
jnp
xchg
push
xchg
stos
add
mov
into
mov
shlb
lcall
xchg
push
sub
jae
leave
xor
or
jl
mov
dec
flds
mov
push
aaa
add
lods
or
jge
mov
and
and
pusha
movsl
mov
leave
mov
xor
mov
xor
outsb
sbb
mov
in
sub
and
adc
mov
mov
add
mov
push
je
pop
ds
push
adcb
pop
aad
xor
js
xchg
cltd
dec
dec
sub
lock
aad
cmp
xchg
gs
mov
or
call
push
fwait
mov
and
orb
add
test
loop
pop
push
mov
lock
xchg
jge
mov
xor
dec
pop
inc
es
add
jnp
daa
mov
fcomip
push
jg
aam
mov
test
les
lahf
mov
cmpsl
movsl
adc
cmc
mov
nop
push
or
pop
test
stc
mov
xchg
shll
jge
out
pop
xchg
or
ljmp
jnp
jns
xchg
or
fcoms
mov
and
sbb
imul
icebp
loop
or
in
push
aas
sbb
icebp
xor
jp
repz
repz
shlb
push
js
popf
in
fstp
push
aam
out
mov
scas
fwait
xchg
xchg
jb
pop
cwtl
negb
fimuls
in
out
call
adc
xchg
or
lock
das
pusha
test
push
in
add
push
popa
and
sbbb
not
imul
aaa
not
or
lods
cmpsb
nop
lock
test
dec
cmp
mov
movsb
or
iret
addr16
sbb
stos
lret
push
jb
cs
pop
pop
lea
or
fcmovbe
sub
jp
inc
mov
ljmp
shlb
pop
adc
inc
xchg
pop
loope
pop
push
pop
pop
pop
out
rorl
jbe
mov
popf
xor
lods
nop
repz
nop
vpmovusqd
fistps
fisttps
orb
ret
xchg
sar
cwtl
fiaddl
mov
data16
pusha
lcall
push
mov
ds
jne
xchg
les
or
repnz
xchg
pop
insl
sub
cwtl
sbb
adc
ficoms
and
mov
call
pop
es
gs
insl
dec
shll
addl
faddl
ret
out
xor
xorl
ficoms
jle
mov
imul
pushf
lret
lea
add
sbb
jl
cmpl
inc
and
out
jae
mov
int3
jb
popa
inc
adc
orl
scas
xchg
mov
icebp
je
xor
lcall
add
mov
in
je
cmpsl
mov
adc
jo
jle
mov
jne
mov
jns
int
pop
or
dec
data16
mov
subb
and
lock
or
daa
mov
push
push
mov
sbb
cmp
repnz
gs
xchg
inc
mov
inc
sbb
mov
repz
ss
in
mov
mov
aas
push
add
in
mov
xchg
push
jne,pt
out
shlb
out
ror
stos
push
stos
leave
cmp
push
inc
ret
dec
cmp
jbe
mov
jmp
mov
mov
gs
addr16
sahf
inc
push
shll
push
inc
cmp
pop
inc
cmp
rcrb
ds
jne
push
pop
fsubrs
add
shrb
adc
lock
mov
cmc
cmp
orb
stc
or
lret
testb
fiadds
clc
dec
jno,pn
arpl
into
jecxz
xchg
push
sbb
jbe
or
or
test
pushf
xor
ret
mulps
popa
mov
inc
or
cli
dec
andl
dec
ret
mov
std
jp
pop
lret
adc
in
cmp
aam
xchg
adc
int3
cs
xchg
into
repnz
loopne
or
push
out
es
jmp
push
insl
in
xchg
mov
mov
jge
js
test
mov
rorl
test
dec
cli
fstpl
inc
or
test
mov
outsl
dec
addr16
adc
xchg
addr16
movsl
inc
repnz
dec
ljmp
push
aas
mov
sub
or
inc
push
sbb
int
push
filds
cld
push
out
aam
hlt
faddl
repz
fsts
lret
pop
arpl
sub
inc
in
test
pop
xchg
pop
fsts
push
hlt
xor
mov
sub
bnd
loop
js
lds
mov
hlt
and
and
jae
mov
mov
divb
lcall
div
movsb
shll
sbb
fisttpll
scas
push
sub
jg
pushf
ficompl
jmp
mov
js
mov
aaa
mov
mov
dec
shll
jb
lret
aas
add
mov
cmpb
xchg
mov
dec
fldenv
sbb
xchg
sbb
and
xlat
call
and
add
ret
pop
cmp
fiadds
push
cmp
sbb
into
cmp
arpl
jo
fildll
stos
pop
add
into
cs
jb
nop
pushf
push
push
push
push
or
aaa
push
mov
mov
mov
jae
iret
dec
int
mov
push
ljmp
jg
jb
cltd
in
repz
ja
into
sub
movsl
adc
in
adc
mov
outsb
test
mov
addr16
out
adc
sbbb
daa
es
ljmp
add
ja
fstl
movl
adc
push
push
jp
mull
sub
cmp
fimull
ror
daa
insl
test
loope
fsubp
ss
imul
imul
jb
and
inc
sbb
fidivrl
orb
pop
arpl
cmc
cld
imul
adcb
cwtl
add
mov
pushf
repnz
aaa
pop
pop
push
ds
stc
jmp
lret
fdivrs
mov
mov
ret
out
cmp
fs
and
push
call
mov
int3
jb
notb
ds
arpl
out
dec
and
xor
mov
mov
in
rorl
inc
or
movsl
pop
arpl
or
xchg
xchg
dec
push
dec
jg
sar
ljmp
add
es
pop
push
adc
lock
stc
movsl
mov
inc
or
mov
jns
test
jl
rcl
mov
or
insl
xchg
mov
into
or
loope
jne
popf
stos
add
adc
inc
ljmp
mov
dec
outsb
push
sub
ss
inc
push
cmp
data16
jbe
mov
imul
inc
xchg
or
push
fildll
in
push
and
xor
dec
pop
push
iret
adcb
call
inc
iret
sbbl
sbb
shrl
hlt
scas
xlat
ljmp
into
in
pushf
xor
adc
mov
out
lock
lds
push
mov
clc
into
addb
in
mov
cmp
fists
pop
inc
cwtl
pop
lods
cmp
jl
test
gs
int
xor
fimuls
test
test
push
and
inc
mov
and
pop
cld
cs
inc
aas
rcr
pop
leave
pop
jge
repz
push
dec
dec
jbe
sbb
inc
mov
or
pop
xor
cs
xchg
mov
push
out
inc
dec
mov
fwait
pusha
mov
mov
xchg
inc
leave
popf
xor
ljmp
incb
fisttpll
pop
daa
sbb
or
jns
enter
repnz
test
leave
mov
repnz
xor
or
inc
std
xor
xor
cmp
jmp
push
dec
pop
out
xchg
ds
pop
mov
mov
sub
sub
int3
sbb
fbstp
es
sub
lret
aaa
stos
push
inc
scas
push
pop
push
adcb
xorl
sub
pop
mov
test
pop
sti
jmp
and
pop
cmpsb
shrl
xor
je
xchg
sbb
jno
in
out
lods
cmp
mov
int3
xchg
shl
gs
xchg
les
add
arpl
das
pop
call
outsl
xchg
imul
fdivrs
mov
or
mov
xchg
inc
jbe
call
jns
int3
leave
sbb
lock
pushf
mov
add
and
jmp
inc
test
add
ja
test
cmc
insl
lret
ret
insl
push
das
xchg
aas
mov
and
call
mov
dec
lret
insl
popa
out
add
sahf
fstpt
mov
icebp
inc
jne
and
ss
aaa
cmp
insb
mov
xchg
popa
subb
sbb
pop
icebp
adc
std
popf
fcmovnbe
sub
leave
scas
sbb
adc
jecxz
push
inc
lock
adc
rorb
pop
sar
push
pop
iret
push
xor
clc
scas
scas
adc
fs
mov
add
and
inc
ja
daa
lret
test
leave
cli
or
push
mov
decb
or
fst
int3
rorb
xor
outsl
gs
and
imull
push
add
test
mov
mov
loope,pn
gs
fdivrl
xchg
dec
aas
and
stc
push
cmp
shl
out
jl
dec
cmpb
cmp
clc
mov
pop
adc
ficompl
mov
sub
push
int3
pop
push
xor
fs
aad
push
ret
shlb
out
push
dec
cltd
imul
idivb
fstps
adc
pop
mov
xorl
adc
mov
push
lahf
xor
dec
lcall
mov
into
scas
mov
les
pop
mov
cs
in
dec
test
jge
mov
sbb
mov
dec
stc
lea
ljmp
push
movsl
stos
sbb
mov
sub
in
dec
in
fs
and
or
fistpll
js
std
insb
jo
jl
push
and
pusha
adc
pop
loope
jbe
ret
out
ds
adc
add
jnp
repnz
sub
jno
jb
out
js
jns
pusha
inc
fnstsw
cmp
cld
cltd
ror
rcll
add
lods
rcr
in
test
xchg
push
xor
lcall
adc
call
cli
ja
jno
mov
cmpsb
sti
stos
sbb
jle
xchg
das
jne
js
inc
mov
icebp
xchg
jae
repnz
mov
cld
sub
add
lret
ss
cmp
mov
sahf
pop
jl
clc
push
xor
in
or
lods
pop
pop
mov
sbb
cltd
inc
loope
jp
popa
fstl
add
gs
fcomps
fcompl
sahf
fcoms
fistps
push
fdivrl
out
cmp
movsb
imul
pop
push
ja
aas
movsb
dec
jecxz
mov
arpl
std
insl
inc
push
sub
filds
fildl
out
decl
pop
cmp
lret
lcall
mov
and
movsb
or
dec
mov
lcall
xor
xchg
faddl
inc
outsl
mov
cmpsl
pusha
dec
rolb
inc
cmc
bound
stos
int
mov
into
jb
mov
adc
fistpl
aaa
mov
test
in
mov
fdivl
sub
mov
inc
mov
je
mov
daa
mov
xchg
push
call
call
out
mov
sbb
fwait
loop
repnz
jge
mov
xor
jge,pn
inc
inc
loopne
loop
fs
hlt
les
cmp
xchg
arpl
cli
cmpl
cmc
cmp
sub
add
adc
add
cmp
clc
sbb
cmpb
mov
mov
mov
arpl
addr16
or
sar
or
pop
inc
pusha
clc
lea
aad
push
or
mov
mov
mov
push
adc
ljmp
xchg
out
mov
cmp
jne
jge
xchg
inc
and
sbb
xor
cmp
push
pop
sbb
fs
mov
hlt
pop
das
in
sbb
ds
mov
xchg
dec
repnz
mov
mov
imul
jg
int
ja
fmull
add
mov
fcmovbe
mov
frstor
stos
sbb
inc
cmc
ret
mov
pop
aas
je
hlt
jnp
call
pop
xchg
sub
movsb
pop
js
pushf
sarl
loop
aas
sub
dec
test
mov
pop
sarl
xor
xchg
or
test
sbbl
hlt
test
cwtl
pop
lods
pop
insl
xorb
mov
sub
adc
xorl
cmc
mov
jbe
in
scas
xchg
adc
push
dec
dec
pop
sarb
iret
leave
adc
ds
pop
rolb
add
mov
filds
aas
out
mov
cld
push
jmp
loop
xchg
xchg
loope
clc
pop
cmc
leave
out
rol
pop
ret
dec
jl
stos
aad
jge
mov
gs
jns
or
aas
scas
sbb
orl
mov
faddl
or
in
in
push
fcoms
or
cld
jl
and
mov
or
xchg
lret
lock
xorb
pop
mov
sbb
out
sbb
test
jbe
loop
pop
fwait
leave
sbb
xor
jb
stc
cmp
xchg
push
xorl
pop
imul
cltd
sub
xchg
into
outsl
imul
push
cmp
or
sub
ja
cwtl
cmp
jnp
jb
xlat
pop
arpl
xor
xchg
inc
cld
mov
jg
inc
sbbl
loopne
int
xchg
jle
in
cmp
pop
data16
popa
xor
mov
mov
pop
jmp
ljmp
in
cs
or
inc
mov
xchg
int
or
rorb
leave
push
stc
lret
push
sub
in
xlat
jmp
mov
orb
loopne
repnz
cmp
mov
cmp
iret
aas
inc
adc
cltd
inc
test
fcoml
push
jns
sub
ja
pop
jo
rorl
popf
or
jle
mov
or
in
inc
iret
int3
out
aad
lds
loope
push
repz
xor
shl
mov
mov
rcrl
pop
aas
or
fimuls
mov
test
jecxz
out
pminub
add
jl
loopne
movsb
mov
xchg
xchg
loop
popa
negl
push
pop
inc
add
xor
push
xorb
jl
cmp
jnp
mov
cs
xchg
adc
out
sti
lahf
cmc
sbb
add
inc
fucomip
in
jl
or
jne
cmp
and
inc
xchg
push
cmp
ffree
nop
int
int3
pop
fsubs
sahf
xchg
stos
inc
jne
daa
push
test
jle
push
mov
ds
jge
sub
pop
pop
or
xchg
rorb
jge
xorb
ret
aas
dec
imul
mov
or
scas
shl
out
mov
add
in
mov
jns
jg
push
rorb
js
jnp
lock
or
aas
add
inc
out
xlat
and
inc
jne
push
lock
jmp
pop
adc
mov
dec
fidivrl
in
adc
cmp
dec
loopne
pop
mov
xchg
aad
add
fidivrl
test
push
or
add
lahf
mov
jnp
mov
push
xor
sti
shlb
push
dec
or
xlat
adc
ds
inc
test
je
push
mov
nop
push
fsubl
mov
cmp
cmp
xor
xchg
test
jmp
push
je
adc
and
or
xlat
stc
lret
popfw
sti
push
push
sbb
leave
ficoms
adc
rcrl
scas
push
stos
mov
push
inc
xchg
and
push
xor
sbb
les
push
push
je
mov
jno
sbb
ret
pop
popf
jecxz
fldenv
jo
xchg
aas
and
test
clc
stos
cld
ljmp
sub
inc
pop
cmp
mov
cwtl
jns
lods
pop
popl
cmp
mov
mov
iret
push
sti
sub
cwtl
ret
dec
mov
xchg
in
aas
ljmp
fstpt
scas
stos
xchg
xchg
aas
fldenv
insb
jg
jecxz
push
loope
fbstp
adc
fdivl
jns
mov
push
fs
jbe
inc
sbbb
testl
mov
and
dec
xchg
xor
insb
xchg
int3
ljmp
loop
lahf
adc
arpl
popa
adc
pop
clc
sbb
stc
addb
or
mov
into
mov
push
inc
mov
daa
and
into
dec
push
fadd
jecxz
cmc
ret
jecxz
jl
es
and
cld
js
std
cld
or
sub
std
outsl
xor
scas
push
add
jne
jg
and
arpl
cltd
inc
xor
cmp
mov
cmp
push
sahf
or
dec
in
stc
mov
out
jae
cs
push
xor
ficoml
rcrb
mov
adc
test
stc
call
add
andl
sbb
cs
test
es
fwait
mov
cltd
lret
pop
nop
and
xchg
add
test
call
out
mov
lea
sbb
dec
iret
mov
in
popa
jno
jb
jecxz
insl
cmp
aas
outsb
and
imull
pushf
pop
decl
popa
mov
mov
pop
or
pop
sbb
pop
xchg
es
and
xchg
adc
and
jbe
mov
dec
xor
jecxz
aaa
mov
inc
xchg
jmp
mov
addr16
xlat
movsl
sbb
mov
xor
nop
jecxz
mov
add
cmp
pop
push
rsm
adc
mov
add
dec
ds
sub
xlat
scas
hlt
popa
nop
push
cmp
xor
popa
daa
aas
cmp
repz
mov
jp
push
imul
je
daa
mov
outsl
and
xlat
and
movsb
cmp
push
out
loop
mov
mov
add
mov
sbb
mov
cmp
push
cmc
subb
mov
sub
dec
adc
pop
cmpsl
mov
movsl
ja
dec
and
movsl
test
push
icebp
mov
movmskps
psubusw
outsb
pop
scas
repnz
int3
divb
pop
cmpsb
jno
xor
or
int
std
notb
add
adc
lods
inc
aas
nop
out
cmpb
ja
sub
test
incb
into
cli
neg
xor
pop
dec
mov
mov
jecxz
sbb
cs
jo
std
je
call
cmc
mov
jo
andl
ret
cmp
mov
push
out
shll
ret
rcl
test
or
popf
into
stos
push
add
lods
dec
cmpsb
xchg
daa
jnp
cmp
arpl
ja
cs
mov
sti
sbb
jb
in
out
sub
lret
mov
pop
and
lahf
addr16
push
testl
insl
cmp
mov
sahf
pop
es
mov
jmp
cmpsl
lret
outsb
daa
inc
mov
or
mov
xchg
jl
and
push
je
in
sub
cmp
jo
adc
ljmp
cmpsl
inc
arpl
outsl
int
lcall
and
int
jl
xchg
and
mov
mov
cmc
mov
aas
jo
in
repz
jae
lods
mov
loope
xor
lds
xor
loope
xchg
push
ret
xchg
jbe
fcoms
clc
jecxz
in
mov
xchg
add
jae
lock
mov
cmp
pushf
jle
inc
fnstenv
add
imul
dec
and
cmpsb
ja
mov
insl
sub
mov
in
fnstsw
mov
sbb
mov
fisubrs
mov
xor
and
push
jae
jle
insb
jnp
inc
call
les
mov
adc
mov
adcl
cmp
inc
xchg
sub
cltd
rorb
rclb
mov
stos
mov
ja
or
xorl
outsl
notl
dec
fldl
cmpl
pop
dec
lock
and
sahf
lahf
outsb
xchg
push
or
rcrb
cld
xchg
push
jecxz
dec
or
sbb
and
adc
aad
sahf
imul
xchg
pop
pop
and
lods
loopne
stos
xchg
mov
mov
enter
repnz
rcrl
fsubrl
xorl
aam
mov
xor
shlb
hlt
decl
xchg
dec
in
pop
lea
sbb
sahf
jbe
cmc
dec
std
sbb
enter
adc
sarl
stos
hlt
sbb
test
sub
dec
push
mov
push
stc
out
sbb
xchg
jns
dec
adc
leave
or
xor
fildl
iret
stos
les
sti
or
mov
xchg
push
imulb
fnstcw
add
daa
adc
push
aaa
scas
inc
sub
test
mov
sub
in
loopne
add
mov
cmc
cmpsb
pop
inc
lds
lret
rorl
adc
jge
dec
stos
mov
stos
xchg
out
pop
add
into
xor
jl
ret
push
inc
jne
xor
and
cmp
pop
mov
arpl
dec
cmpsl
stc
push
imull
les
loop
xor
jg
add
pop
cmp
push
dec
loope
insl
cmc
je
adc
cwtl
mov
bound
pop
je
sbb
into
cmp
int3
stos
ja,pt
fdiv
push
in
andb
imul
mov
jo
and
enter
rorl
test
ds
mov
pop
popa
fwait
sbb
sahf
outsl
push
std
push
adc
call
hlt
mov
das
sbb
pop
dec
push
icebp
fstl
or
push
adc
test
sub
fmuls
int
dec
mov
mov
mov
loop
sbb
ret
lods
mov
dec
mov
les
dec
das
jns
rclb
in
out
dec
xor
cld
add
cld
scas
jo
mov
mov
cmc
int3
cmpsb
cs
pop
pop
push
inc
jl
add
loop
pop
cmpsl
lret
test
outsl
jp
or
rorl
stos
cmpb
insl
imul
mov
push
in
sub
leave
sub
xlat
inc
pop
mov
insl
fcmovnb
addr16
adc
je
cli
xor
xchg
pusha
cmc
pop
insl
cmp
pop
fldl
jmp
mov
scas
push
adc
addr16
mov
mov
fmuls
ljmp
push
insb
dec
xchg
addb
in
lahf
jne
hlt
inc
adc
imul
movsl
ret
xchg
pop
cmp
xorb
test
cmpsb
xchg
and
inc
fs
arpl
fsub
fisubl
pop
jnp
push
movsl
or
or
out
data16
cmp
sbb
fs
out
mov
adc
jae
test
jmp
sbb
dec
stos
test
cmc
into
ljmp
xchg
pusha
jno
push
icebp
push
sub
int
sbb
outsl
push
mov
arpl
jo
lods
loop
or
mov
lock
add
jno
xorl
jle
and
das
dec
or
cld
aas
gs
pop
cli
into
dec
sti
bound
push
or
das
pop
std
inc
jno
shlb
rolb
popa
push
inc
jno
in
mov
aam
mov
jle
pop
or
cld
or
sub
mov
js
dec
jo
sbb
std
ret
xchg
inc
arpl
inc
mov
pop
mov
cld
add
loope
andl
pop
mov
push
inc
adc
and
or
cmpsl
dec
sub
mov
test
add
pop
cmp
and
cltd
scas
xor
das
mov
sbb
and
dec
test
dec
stc
xchg
xor
bound
mov
dec
sti
fsubrl
cmpsl
scas
and
addb
scas
inc
fxch
lods
xor
dec
test
scas
add
xchg
mov
jmp
icebp
jl
pop
jae
xor
dec
mov
in
mov
add
sahf
adc
outsb
push
and
lds
and
inc
fildll
out
gs
or
je
xlat
mov
lods
pop
push
adc
cmpsb
outsl
xor
fs
inc
add
dec
lret
add
xchg
pop
dec
aam
leave
dec
sti
push
loope
cmp
popl
pop
ja
jmp
sub
in
pop
xchg
add
or
pop
sbb
cmp
std
in
jbe
lahf
pop
scas
add
cmp
lret
lock
cmp
mov
push
mov
lret
xchg
cmp
or
cmpsb
pop
clc
pop
les
jmp
jecxz
out
xchg
xchg
and
test
jnp
pop
jmp
lcall
stos
add
mov
adc
lcall
push
mov
xlat
shll
js
xchg
cmp
ror
cmp
scas
into
jbe
jecxz
jbe
jl
dec
incl
pop
and
xor
jcxz
and
or
cmp
sub
xchg
mov
cltd
rolb
call
lcall
std
fwait
sar
or
stc
xor
sub
mov
adc
adc
dec
mov
fildl
js
ss
clc
dec
push
or
imul
cmpsb
loope
dec
adcl
imul
outsb
xor
add
xorb
push
fmuls
jmp
cmpsb
imul
and
inc
imul
insl
arpl
les
mov
cs
jae
jge
sbb
and
cltd
sbb
sbb
std
adc
dec
sbb
stos
pop
or
push
stos
shrl
mov
ds
aaa
shlb
mov
dec
fcomi
mov
adc
sbb
push
ss
add
mov
inc
mov
cwtl
jae
mov
cmp
mov
cmp
into
popa
scas
push
mov
int3
mov
pop
xchg
cmpsl
sub
xchg
cli
cmc
push
rol
dec
dec
fstpl
or
mov
push
jne
or
push
jmp
ljmp
mov
or
adc
inc
test
addl
push
mov
cs
decb
ds
mov
sbb
dec
dec
dec
call
ret
xor
lcall
add
and
mov
pop
repz
iret
jns
dec
insb
in
sub
push
aaa
aaa
inc
insl
scas
cwtl
dec
mov
cmp
subl
xchg
sbb
pop
jbe
inc
clc
popf
subl
and
or
xchg
popf
mov
xorb
stos
sbb
pop
scas
sub
jmp
xchg
cli
sub
gs
jns
add
jbe
sbb
jns
push
movb
sub
dec
lcall
add
cld
sub
loope
ljmp
xchg
jne
jns
out
fcoml
xlat
stos
stos
in
lods
cld
xchg
leave
sub
dec
movsl
sti
mov
jmp
xchg
inc
scas
bound
push
sahf
push
test
popa
cld
lods
mov
daa
push
dec
aaa
jnp
mov
mov
lcall
jae
jb
push
es
and
xor
cmp
cmp
adc
lret
test
inc
outsl
aaa
sahf
jg
mov
and
aad
dec
add
mov
and
jecxz
arpl
xchg
fwait
cs
rcr
fucomp
aas
fbld
mov
ss
xchg
dec
sbb
and
and
js,pn
negb
inc
and
xlat
fdiv
mov
out
jb
lret
sbb
dec
push
into
xchg
in
aas
pop
ds
inc
inc
ret
pop
orl
cli
es
jp
cmp
jnp
push
xchg
clc
lea
loope
sti
daa
adc
pop
jl
dec
mov
call
add
xchg
aaa
push
jmp
and
or
pop
scas
jno
push
rclb
rolb
jg
and
sub
and
pop
adc
loopne
inc
jl
pop
mov
loop
pop
push
ret
pop
aad
enter
cmp
mov
into
sti
aam
and
jmp
out
mov
dec
push
mov
imul
cmp
fwait
xorb
dec
pop
lock
out
repnz
test
test
enter
push
ret
cltd
out
sbb
mov
jge
and
into
imul
push
jl
ja
mov
cmp
xor
sbb
pop
dec
popf
pop
sub
fstps
andb
imul
mov
jne
or
bound
lahf
push
mov
and
ficomps
inc
mov
mov
lea
ljmp
mov
pop
sbb
fsubrs
rclb
xchg
int3
in
in
shlb
nop
ljmp
jg
into
xlat
cmp
xchg
out
je
dec
lea
add
push
jg
aad
into
dec
clc
pushf
aaa
mov
dec
sbb
popf
adc
push
into
cld
jno
sbb
stc
cbtw
jno
xor
mov
push
aaa
pop
mov
jae
cli
cs
dec
pop
leave
xor
ficoml
dec
test
imul
or
pop
adc
das
jnp
inc
mov
dec
lods
in
mov
or
pushf
sub
imul
or
fmull
fsubr
xchg
pushf
fidivrs
lret
adc
push
xor
faddp
cmp
test
push
inc
rcrb
test
mov
lds
sub
icebp
aad
jns
or
cmp
jae
mov
xchg
pop
and
stc
lea
sub
std
clc
pusha
inc
mov
dec
add
bound
frndint
adc
sbb
adc
sbb
divb
mov
add
adc
test
xorb
mov
imulb
flds
mov
std
sub
inc
push
sub
adc
test
add
sub
mov
or
ss
dec
push
jb
icebp
aad
xchg
mov
popa
cld
in
mov
dec
push
incb
lret
fiadds
dec
mov
jb
pop
andb
and
leave
cmp
xchg
lret
jecxz
std
dec
out
scas
jecxz
xchg
sbbb
gs
dec
cs
mov
adc
inc
xor
mov
and
xor
push
jo
xor
lock
hlt
outsl
or
adc
mov
lds
pop
add
and
adc
pop
cmp
jno
jno
imul
pop
inc
add
popf
outsb
cli
stos
mov
sub
or
xchg
xor
out
jbe
mov
addr16
js
hlt
sbb
xorl
pop
adc
or
icebp
loope
shr
mov
jge
js
hlt
or
aam
dec
sbb
aaa
test
loopne
sub
mov
repnz
adc
aad
andb
xor
mov
dec
mov
mov
ret
sub
cmc
scas
xchg
in
imul
mov
cmp
xor
pusha
fdivs
xchg
movsb
in
in
xchg
jne
mov
into
mov
pop
mov
dec
mov
dec
cmp
pslld
dec
jmp
es
sarl
fisttpll
sbb
ds
aas
rclb
add
incb
mov
push
cmpsl
icebp
sbb
in
adc
xor
cmp
icebp
cmp
cmpb
jae
inc
aaa
ret
lods
xor
stc
sub
repnz
or
lret
add
cmpsb
pop
das
jae
inc
xchg
xor
dec
loopne
adc
les
mov
in
aad
aad
arpl
xchg
sub
mov
pop
test
std
mov
cmpsl
lret
add
imul
loopne
mov
je
inc
ljmp
sub
cmpsl
mov
scas
push
stos
pop
divb
adc
je
push
stos
into
push
pop
and
add
subl
inc
leave
xchg
or
int3
add
pop
cmc
sub
mov
js
mov
pusha
ja
add
pop
pop
loope
rorl
pushf
mov
popa
mov
and
mov
mov
repnz
jp
push
mov
xchg
rol
clc
bound
add
inc
iret
mov
pusha
popf
inc
adc
int
push
xchg
cmpsb
subb
int3
out
ret
add
xor
loope
xchg
sbb
fidivrs
mov
xor
xchg
push
loop
ret
or
mov
inc
mov
mov
out
lock
imul
in
mov
fwait
les
mov
ret
outsl
lds
xorb
out
in
xchg
and
out
sub
pop
mov
dec
dec
fdivl
push
call
push
pop
pop
clc
clc
and
testb
xchg
xchg
pop
dec
mov
jae
test
add
cmc
lret
or
pop
in
in
sbb
mov
outsb
push
pop
mov
push
adc
pushf
dec
inc
jbe
mov
scas
cwtl
adc
and
fstl
sub
dec
pop
fdivs
inc
xorb
sub
xchg
lea
mov
mov
lea
fisubrl
fwait
mov
mov
dec
mov
popa
aaa
dec
cs
push
subl
mov
ret
addr16
cltd
setp
dec
scas
mov
nop
push
and
lret
xor
jecxz
rcrb
and
cld
pop
aaa
leave
push
dec
ficoml
fimuls
xchg
mov
enter
cld
cmp
popf
xorb
pop
push
and
fidivl
sti
hlt
inc
cld
adc
inc
mov
xor
xchg
xor
push
dec
xchg
pop
dec
adc
shrl
pushl
jecxz
fcoml
xchg
pop
and
dec
outsl
mov
aad
or
sbb
movsl
sahf
xor
enter
push
add
fstl
sahf
cmp
lea
pop
data16
mov
sti
and
aam
inc
xchg
lods
xchg
aaa
nop
add
xor
popa
in
testl
cmp
pop
add
inc
sbb
mov
sbbl
jb
iret
jmp
dec
jge
pop
sbb
test
push
mov
push
xor
inc
stc
in
dec
xchg
xchg
inc
xchg
or
dec
mov
mov
xor
out
mov
in
hlt
lret
cmp
mov
lods
shrl
ret
xor
or
pop
fisubrs
xor
xchg
fldt
insl
loopne
movsb
add
push
adc
pusha
rep
pushf
cmp
mov
movsl
push
test
insb
xchg
cmc
sti
push
out
stc
adc
lods
aam
sub
cmp
call
cmp
and
dec
jmp
fadd
rol
sahf
inc
mov
cli
cltd
shrb
popa
mov
adc
and
xchg
daa
sub
jo
sub
mov
mov
lret
movsb
or
blcfill
jl
mov
cmpb
jl
test
call
je
dec
mov
inc
cmpsb
pusha
stos
and
ret
sbb
filds
push
fwait
mov
fsubs
xor
or
in
daa
jle
neg
enter
jecxz
fsubrp
mov
insb
xchg
inc
and
pop
xchg
repz
clc
repnz
inc
add
ljmp
out
dec
sbb
incl
rorb
push
ja
push
mov
pop
sbb
cld
inc
xor
mov
xchg
scas
fwait
test
ret
mov
rolb
rcrl
fidivs
pushf
aas
loope
inc
add
inc
rorb
fld
xor
fcmovnbe
push
push
or
jecxz
ret
xor
inc
dec
lcall
pop
mov
pop
pop
enter
inc
jp
test
dec
popf
repz
insb
cmpsl
fisubl
add
pusha
ret
sub
jmp
in
adc
adc
sub
push
pop
das
sahf
insb
push
shlb
leave
stos
lds
dec
mov
xor
sub
fstpl
jecxz
sahf
pop
jge
xor
loope
or
fnstenv
jmp
addr16
scas
lahf
push
mov
jl
test
push
mov
mov
loope
in
cld
add
cmp
orl
or
dec
or
fisttpl
or
sbb
pushf
nop
addl
mov
lock
mov
push
push
pop
inc
arpl
inc
mov
out
push
stos
jg
jb
push
dec
jae
orb
hlt
push
outsb
gs
repz
sti
into
xchg
pop
jne
aaa
pushf
bound
loope
int
std
mov
sbbl
dec
jmp
jge
pop
or
insb
cmp
mov
repnz
add
popa
mov
punpcklbw
mov
out
xor
xchg
sti
bound
dec
mov
jnp
adc
outsb
fcmovnb
icebp
mov
sub
mov
cli
out
jne
jb
add
inc
pop
and
xchg
push
inc
cld
jp
std
loop
ret
loopne
test
popf
mov
xchg
pushf
leave
mov
ja
aam
sub
test
mov
and
or
pop
das
insl
sub
ja
add
and
mov
mov
adc
dec
lods
lods
xor
push
out
jae
jge
adc
das
fadds
imul
xor
inc
nop
xchg
cmp
in
jp
mov
in
jns
mov
cmpsb
es
or
jo
cmp
divl
pop
add
lahf
jl
mov
out
pop
mov
outsb
mov
push
gs
and
aad
int3
mov
sbb
repnz
lods
mov
popa
xor
push
cmpsb
lret
out
mov
or
push
cmp
dec
loopne
xlat
insb
xchg
add
cmc
jns
sbb
std
nop
adc
aas
call
mov
push
add
jno
scas
pop
xchg
or
scas
and
or
cltd
lcall
dec
xlat
dec
add
inc
fmuls
mov
lods
shrl
xor
lds
sub
xor
cmc
mov
jle
add
mov
jecxz
out
iret
inc
mov
hlt
rorl
or
repz
mov
cmp
jl
sahf
push
dec
adc
or
mov
aaa
mov
es
adc
xor
in
sti
data16
scas
jb
mov
out
pop
out
ds
xchg
sub
outsl
pop
and
cmpsb
repz
mov
mov
pop
and
int3
pop
mov
xchg
aas
cmp
sbb
push
outsl
loop
mov
aad
inc
xchg
in
inc
mov
jb
insb
mov
fidivrs
stos
fisttpll
lcall
pushl
sbb
movsl
mov
cmp
and
leave
loope
or
leave
xchg
into
out
sahf
mov
cltd
loop
xchg
and
ret
or
or
push
popf
mov
ret
jg
loope
dec
push
mov
and
clc
push
nop
and
lahf
outsb
lds
adc
push
pop
imul
cmp
mov
mov
dec
mov
pop
sbb
insl
mov
push
test
int
lcall
imul
test
outsb
jle
lods
sbb
hlt
mov
pop
loop
lcall
dec
xor
sbb
lret
mov
cmpsb
or
and
in
jmp
stos
sbb
call
pop
dec
test
sarb
ret
xchg
mov
xchg
adc
or
inc
xor
popa
repnz
outsb
jmp
dec
jne
and
and
movsb
sub
icebp
fcompl
lcall
xchg
push
cmpsl
int
inc
jl
adc
xchg
lcall
jns
jg
xchg
jb
sub
sub
ds
jae
cmp
out
mov
mov
inc
xchg
dec
insb
je
cmp
stos
scas
mov
mov
mov
shll
adc
jnp
pop
das
outsb
repz
daa
pop
js
iret
jb
mov
aas
fwait
jo
sbb
adc
enter
inc
leave
pop
lret
std
push
cli
pop
enter
repnz
stos
sti
dec
xor
add
iret
push
test
mov
pusha
fistpl
notb
movsl
xor
push
repnz
lock
jmp
pushfw
cli
inc
jp
sub
or
outsl
push
jne
mov
inc
jne
dec
arpl
jmp
inc
ficomps
push
cmp
lret
scas
rolb
repz
mov
xchg
sbb
sub
cli
jo
jo
test
dec
add
lret
xor
and
scas
lea
out
sub
sub
mov
fwait
mov
push
lret
bound
mov
mov
xlat
aad
or
popf
daa
mov
push
push
test
xor
add
imul
xorl
dec
cli
fwait
cmc
push
pop
insb
fmull
je
call
enter
jnp
dec
inc
movsb
pop
lret
in
xor
mov
repz
and
stos
in
add
and
jns
xorb
std
pop
fdivl
sub
enter
mov
pop
dec
or
jge
outsb
jne
adc
mov
lcall
inc
mov
fwait
sub
sbb
push
xchg
insb
push
fwait
dec
stos
mov
or
test
jnp
cmpsl
pop
stos
inc
mov
ds
xchg
mov
bound
inc
ja
mov
fsubs
inc
add
pop
enter
jb
lahf
mov
xchg
addr16
mov
mov
fisubrs
mov
inc
mov
dec
cli
out
jnp
out
cmp
hlt
adc
xchg
add
out
ss
out
movsb
or
leave
push
stc
call
in
sub
sbb
xchg
add
pop
xchg
ja
mov
cmp
dec
or
push
push
pop
add
adc
and
iret
pop
adc
lret
lods
dec
inc
ret
out
int3
sbb
push
pop
movsb
sub
test
cmp
mov
dec
cmp
pop
push
mov
cmc
lods
pusha
cmpb
jbe
movsl
popf
cmc
sysenter
lock
and
or
dec
lcall
iret
adc
pop
popa
popf
cmpl
jns
cwtl
or
addr16
push
jmp
push
jb
out
add
enter
push
push
cld
str
xchg
jmp
mov
sbb
bound
add
dec
push
jecxz
das
dec
neg
js
xor
aad
aaa
in
jbe
out
mov
sbb
test
ss
fistpll
arpl
ljmp
es
mov
inc
test
mov
test
ficomps
loopne
push
cmp
push
cs
mov
push
sbb
sbb
push
aam
mov
loopne
sti
movzbl
cwtl
ret
adc
addr16
lret
stos
ror
cmp
jns
xorb
jl
jmp
adc
pop
mov
testb
fstpt
in
imul
inc
scas
adc
loop
adc
sub
pop
cs
cltd
lcall
pop
sub
mov
fstps
dec
mov
xor
sahf
sub
test
add
xor
or
sti
cmpsb
pop
push
mov
fs
pop
xor
pop
mov
mov
jp
mov
imul
outsl
loop
xchg
imul
xor
xor
imul
gs
cmpsb
jnp
cwtl
into
aas
push
pop
xor
fistpll
cmp
clc
adc
stos
push
into
or
inc
cmp
lods
sbb
out
pop
je
sub
add
repnz
les
push
sub
test
or
and
fs
les
jns
insb
or
ja
xor
push
stc
push
cmp
pop
cmp
or
or
dec
or
out
inc
mov
and
mov
xchg
xor
or
lahf
and
lods
mov
sub
mov
inc
stc
and
jle
xchg
cld
fsts
cmp
cmpl
or
mov
repz
jp
mov
outsb
mov
cmp
ljmp
lahf
test
orl
fsubrl
in
in
inc
lret
fstpt
stc
pusha
rcrl
cmpsb
inc
cmp
dec
pop
push
mov
movsb
roll
adc
inc
loopne
fwait
rcl
cmp
mov
loope
jp
mov
adc
out
fmuls
cmp
push
lret
mov
shlb
into
in
outsl
xlat
iret
and
daa
sub
add
lods
push
adc
jno
push
cmp
dec
leave
adc
fwait
inc
mov
lods
out
xor
vshufps
outsl
dec
mov
cli
test
sbb
add
out
rcr
sub
es
fstps
mov
push
mov
mov
test
jae
push
not
data16
out
or
push
imul
mov
fstpl
js
sbbb
cld
add
mov
adc
push
pusha
jl
inc
pop
repnz
jnp
cmp
dec
in
mov
mov
mov
fisttpl
mov
std
inc
fwait
push
bound
sti
dec
mov
push
dec
pop
movsl
aas
out
repz
add
xchg
out
fidivrs
jnp
sbb
in
ret
lcall
xchg
ds
imul
cmpl
sub
mulb
por
cwtl
dec
pop
sarl
aas
ljmp
xchg
xchg
mov
sbb
mov
pop
faddp
dec
ret
cmp
mov
imul
mov
pushf
loopne
bound
insl
bound
fdivs
inc
out
jbe
cli
mov
dec
mov
in
mov
cmpsl
jo
and
push
and
push
lods
cwtl
hlt
xorl
pop
jg
icebp
dec
rorb
cmp
dec
mov
mov
jle
cmpsl
xchg
bound
cmpsb
mov
xchg
test
xor
scas
cli
gs
adc
push
frstor
sub
jb
out
js
xlat
stos
fildll
and
add
mov
rclb
aam
or
xchg
scas
pop
mov
lret
hlt
int3
jne
fs
adc
pop
mov
mov
fstps
das
cltd
movsl
cmp
mov
xchg
mov
mov
and
adc
cmp
inc
jns
ret
mov
js
xchg
ja
ds
imul
mov
xchg
addr16
xor
mov
sub
sub
cmpsb
adc
rol
popl
dec
aad
mov
adc
xor
sub
lds
icebp
add
mov
adc
fcomi
xchg
pop
insb
xor
iret
cmp
loope
popf
mov
lret
jbe
jo
pop
push
inc
ljmp
sbb
stos
inc
outsl
pop
fstpl
jl
mov
mov
jb
adc
fstpl
pop
test
sbb
push
outsb
popf
jne
mov
fistpll
les
sbb
test
inc
push
xchg
mov
adc
lcall
mov
mov
lds
adc
jle
ret
adc
xchg
das
mov
xor
sub
jg
loop
fwait
add
leave
add
and
mov
push
sub
fwait
and
xchg
cmpsl
insl
inc
das
pusha
pop
cli
xchg
stos
mov
test
test
push
movsl
push
ljmp
adcl
mov
pop
test
stos
test
dec
iret
pop
rcll
mov
stc
adc
cltd
xorb
arpl
aas
negb
and
mov
in
movsb
popa
insb
insb
nop
push
out
outsl
lock
cmp
mov
stos
ja
arpl
rcrb
in
jg
sbb
xchg
pop
dec
sahf
jg
mov
rcrl
clc
dec
jae
pop
jno
inc
std
pusha
lcall
data16
push
push
jno
add
in
add
movsb
xchg
xor
xor
mov
sbb
lods
sbb
loop
nop
or
push
shlb
nop
mov
xchg
jg
stos
mov
pop
mov
repnz
sub
fimuls
mov
inc
fst
mov
or
pop
in
push
push
xchg
mov
test
in
pop
pop
cmp
mov
ret
adc
mov
js
lea
and
orl
aaa
mov
lahf
mov
inc
fistps
enter
cli
or
jl
inc
jo
fdivs
popa
dec
mov
dec
es
or
shrb
imul
push
dec
xchg
insl
ret
data16
aaa
popf
ds
fisttps
cmp
xchg
out
iret
pop
push
adc
fs
inc
fwait
xchg
adc
push
aam
sbb
cmp
sub
dec
dec
ret
in
pop
pushf
mov
add
fwait
cmp
sub
cli
mov
test
inc
and
stc
outsb
sub
add
xor
out
add
out
adc
test
xchg
mov
add
inc
fwait
push
sbb
add
xor
fnstenv
dec
es
cmpsb
pop
cmpsl
in
leave
sub
stos
jne
jl
push
sub
sbb
lret
or
pop
xchg
push
mov
jg
sub
dec
test
push
inc
mov
sub
add
and
pop
test
out
gs
stos
jp
int3
mov
fld
lds
push
bound
lds
jg
mov
sbb
aaa
fiaddl
mov
out
mov
xor
lcall
sbb
push
int3
aam
push
je
jbe
out
dec
imul
out
repz
inc
paddsb
jle
lods
xchg
lcall
jo
test
mov
dec
js
and
sbb
fdivl
inc
mov
add
out
lret
decl
push
jecxz
jno
call
sahf
and
mov
cmpsl
sbb
dec
or
mov
shrb
sub
outsb
clc
jmp
ljmp
dec
fsubp
test
mov
xor
fstpt
adc
sbb
add
cmc
adc
add
push
ret
int3
dec
push
pop
xor
dec
inc
xor
mov
pop
lret
mov
xor
cld
sbb
movsl
popa
stos
adc
cltd
cmc
xlat
sbb
xchg
pop
sub
jb
xchg
roll
push
xor
push
das
in
sbb
add
xchg
cmc
sti
jp
mov
scas
call
and
cmp
std
negb
dec
xor
das
mov
int3
loope
xchg
cmpsb
jae
push
pop
and
lcall
cmp
add
push
loop
loopne
addr16
les
andl
fsts
cld
sub
dec
xorb
jnp
pop
dec
jae
out
ljmp
inc
add
dec
push
mov
mov
roll
aad
sbb
mov
push
bound
mov
push
rcr
push
js
mov
sbb
jge
lcall
adc
mulb
das
andl
lcall
fildl
jmp
and
pop
gs
vpunpcklqdq
js
sub
mov
cmc
inc
dec
jns
shlb
rcrl
mov
rcl
jge
popf
sarb
xchg
mov
mov
js
repnz
shl
jno
jmp
add
fiadds
mov
cmpsl
mov
add
addr16
scas
ljmp
jecxz
pop
add
add
aad
push
out
pop
lea
pop
mov
outsl
mov
xchg
stos
fsubs
pop
fwait
dec
mov
add
jne
inc
aaa
shrb
pop
es
ds
lcall
test
or
add
rcrl
sarl
notb
mov
adc
xchg
pop
aaa
aas
adc
fldenv
movsl
rcr
mov
aam
icebp
add
mov
shll
loope
cmp
shrl
dec
add
jb
pop
and
cmp
cmp
mov
jbe
and
and
jle
cmp
cwtl
cmp
jae
rcr
popf
int3
cmp
stos
fnstcw
arpl
and
ss
or
aad
or
scas
jge
inc
xor
mov
adc
clc
leave
cltd
fs
inc
cltd
xor
aaa
subl
inc
jnp
repnz
and
pop
lock
push
sbbl
jle
xchg
jnp
aad
popf
push
dec
sahf
cmp
sbb
popf
sahf
leave
into
cwtl
in
xor
add
fisubl
push
cld
shrb
jns
xchg
cld
test
jno
arpl
mov
pop
adc
add
pusha
cmp
ljmp
lock
adc
jg
sub
imul
insb
pop
jmp
push
jl
inc
push
push
cltd
inc
push
cmp
mov
iret
xor
fiaddl
insb
out
sub
in
into
call
push
ds
ds
lcall
loop
das
mov
xor
lcall
popf
inc
int3
loop
insl
dec
push
mov
sarb
and
or
or
in
mov
dec
mov
jecxz
dec
jne
inc
mov
test
rcrl
daa
repz
cmp
ja
xchg
stos
push
push
dec
movsl
aad
decb
test
sbbb
enter
xor
iret
cmp
pop
shl
lcall
cli
lods
push
pusha
push
mov
xchg
add
push
inc
fdivrs
push
add
enter
icebp
adc
sub
fnclex
sub
subl
scas
dec
push
jmp
loop
aaa
xor
dec
mov
mov
mov
aas
js
mov
push
loopne
jecxz
hlt
stc
dec
and
dec
xor
jl
popa
cwtl
add
insb
or
mov
pop
xchg
pop
repnz
xor
adc
cmp
gs
call
xor
or
loopne
mov
popf
or
pop
loope
scas
lret
jnp
or
mov
or
jo
das
and
jg
dec
lds
mov
lret
push
sbb
mov
outsb
mov
push
push
xor
fcmovnbe
pushf
mov
push
cld
popf
adc
xor
cmc
sti
mov
inc
mov
pusha
loopne
int
or
int3
scas
sbb
jo
lods
lea
cwtl
cmpsl
dec
push
in
push
push
pop
jae
and
xchg
and
sub
mov
cmp
rcrl
test
sub
xchg
push
icebp
jo
sbb
pop
enter
ds
std
rclb
es
and
adc
inc
pop
cwtl
fs
fdivrl
sub
add
mov
imul
dec
mov
shlb
faddl
fnstenv
inc
add
inc
ss
jne
sbb
mov
lods
pop
scas
int3
fisubrl
js
cli
xchg
mov
dec
mov
mov
pop
adc
inc
mov
icebp
mov
rorb
test
in
adc
push
sub
sbb
lds
push
subl
adc
clc
sub
mov
loopne
shll
repz
rorl
sbb
dec
test
je
fdivr
cmpb
and
mov
sahf
or
dec
scas
push
xor
jp
mov
into
aas
jae
mov
arpl
mov
lcall
pop
imul
adc
repnz
std
jne
pop
ss
push
jns
xchg
push
dec
xor
add
out
push
xchg
sbb
cld
add
pop
lods
inc
sub
rorb
rorl
or
lret
jmp
stos
mov
out
mov
lods
sub
xor
or
push
fcomps
int
repz
lcall
mov
jnp
stos
push
imul
icebp
frstor
pusha
cmpsl
cmpsb
and
mov
lcall
sbb
into
sub
sub
pop
cmp
int
adc
aam
cmp
in
scas
insb
mov
adc
sub
mulb
xor
jne
xor
sub
adcb
fcompl
test
outsl
or
jns
cmp
adc
rclb
shr
or
xlat
mov
mov
xchg
iret
xor
adc
loop
fincstp
sbb
mov
add
stos
and
cmpsb
roll
aaa
fnstcw
les
aaa
adc
jns
incl
lret
sub
mov
or
mov
outsl
not
sbb
les
jb
jb
push
xchg
xor
and
inc
xchg
inc
pop
cmp
fstl
add
sub
adc
pop
and
in
xor
mov
fldenv
dec
cltd
das
sbb
cmp
jl
adc
cmp
js
cmc
mov
xor
or
iret
sub
push
jge
test
sub
imul
sbb
dec
lcall
jb
xchg
jns
in
mov
bound
or
push
test
mov
xor
arpl
movsl
fildl
movsb
loope
hlt
iret
jbe
xchg
lock
mov
mov
andl
xchg
daa
or
imul
cli
idivb
test
cmp
mov
sub
mov
ret
es
fadds
adc
pop
ret
test
jbe
add
mov
inc
sub
sub
mov
lods
inc
and
mov
xor
pop
icebp
lea
lahf
dec
xor
cmpsb
adc
movsl
pop
mov
mov
and
cld
jge
and
pop
xor
sbb
and
divb
dec
insl
mov
dec
popf
push
imul
pop
add
sub
sbb
jne
xor
sti
bswap
imul
sbb
mov
ss
fdivs
and
sub
adc
repz
sbb
or
adc
shlb
push
inc
sbb
dec
dec
shll
in
push
sub
inc
insb
push
mov
hlt
sahf
cmp
adc
jb
xor
mov
or
in
stc
outsl
aam
push
out
ljmp
pop
das
std
fadds
xchg
xor
cmp
mov
dec
jmp
cmc
inc
scas
xchg
sti
sub
push
mov
cmp
push
adc
out
xchg
inc
sub
jae
inc
mov
fldenv
lret
adc
xchg
dec
cmc
jae
push
rorl
dec
push
adc
cwtl
xchg
cmp
xchg
aam
mov
dec
mov
call
pop
add
aam
jg
cwtl
xchg
lcall
cmp
xlat
in
mov
cld
enter
mov
pop
push
test
fsubs
out
inc
rorl
mov
or
push
sbb
inc
iret
mov
and
mov
sahf
insb
ja
or
in
int3
ret
sub
xchg
xchg
into
mov
xor
xor
and
testb
outsb
sub
xchg
addl
ljmp
cli
scas
jge
jmp
pusha
movsb
push
out
pushf
inc
cmp
ss
sub
pushf
imul
ficompl
mov
adc
inc
bound
addr16
push
ja
int3
inc
mov
fidivrl
mov
sbb
aam
dec
es
and
stc
push
cld
push
pop
adc
cmp
pop
mov
xchg
xor
data16
outsb
test
orb
xor
dec
incl
imul
mov
push
mov
pusha
adc
test
xchg
mov
fimuls
xor
add
pop
fsubrp
adc
push
out
cld
and
lods
movsl
out
cli
imul
mov
mov
push
fwait
jle
push
mov
andl
mov
fs
repz
xchg
dec
jecxz
mov
cmpsb
mov
xor
lods
push
mov
dec
xchg
adc
inc
pushf
mov
pop
movsb
mov
hlt
push
out
cli
and
push
mov
adc
mov
aas
push
outsb
xor
cltd
repz
les
pop
mov
jb
outsl
and
and
pop
outsl
add
pop
addr16
dec
xchg
in
add
lods
test
xchg
cs
mov
test
dec
lcall
and
sub
or
inc
mov
ret
push
mov
cmp
setbe
sbb
xlat
scas
aaa
mov
cmp
push
xchg
adc
cli
in
call
scas
add
fwait
cmp
adc
cmp
mov
ds
jmp
push
popa
push
mov
and
lret
pop
enter
or
sub
fnstenv
xor
fwait
dec
inc
and
pop
push
sub
out
mov
imul
das
mov
xchg
loopne
fiadds
sbb
stos
sub
cltd
lret
fcomi
mov
sbb
add
stc
leave
mov
leave
xor
pop
xchg
stos
adc
std
fdivs
push
inc
adc
adc
call
xchg
fadd
jbe
mov
fsubrl
je
or
adcb
into
lret
ret
push
mov
push
cmp
into
mov
jl
adcb
mov
ss
mov
mul
jnp
hlt
mov
adc
idivb
cmpsl
in
lds
push
pop
cltd
mov
and
or
rcr
sbb
or
and
daa
lds
push
jae
sbb
push
xchg
dec
cmpsl
mov
xlat
cmpsb
clc
js
ficompl
lds
icebp
mov
in
adc
jmp
das
and
rcrb
lods
xchg
cld
mov
xor
sub
stc
insl
lea
hlt
xchg
sbb
push
sub
sbb
add
cmp
and
pop
rorb
gs
inc
push
jnp
sub
add
cmpsl
out
xor
clc
add
lcall
ljmp
xor
ss
mov
mov
or
ljmp
sbb
cmp
fbld
stos
in
pop
ja
push
jle
fisubrl
lea
jo
ja
push
in
add
fimull
sub
mov
lret
in
popa
fdiv
leave
or
ja
sbb
xchg
and
hlt
xor
aas
enter
xchg
pop
jge
out
stc
adc
mov
cmpsl
pop
mov
jne
mov
push
adc
int
stos
lret
mov
inc
mov
pop
mov
imul
sub
out
lods
dec
add
pop
lahf
scas
push
lods
sti
cmp
cld
dec
fsubrl
out
lea
lods
fistps
jl
lods
andl
adc
negb
popa
sub
cmp
xor
lock
jno
xchg
mov
pop
out
sub
cmp
xchg
jnp
inc
stc
pop
movsb
mov
mov
and
mov
aaa
dec
out
lods
dec
pop
aad
int3
cmpsb
push
jecxz
out
out
jbe
sti
push
mov
xchg
sub
pop
sti
add
mov
hlt
clc
push
xor
xor
mov
gs
sbb
addb
outsb
imul
pop
sub
mulb
subb
in
test
iret
orl
push
das
or
fstpt
ret
lock
pop
push
jae
jecxz
mov
dec
dec
fnstsw
cmpsb
and
jae
xchg
xchg
pop
add
lds
loope
inc
sbb
mov
dec
jae
lods
cwtl
andl
or
add
mov
cmp
lods
xorl
pop
das
imul
dec
loope
sbb
sbbb
push
xor
mov
into
push
mov
mov
xor
std
sbb
dec
sbbb
mov
cld
xchg
pop
jecxz
xchg
mov
nop
sub
pop
push
xchg
adc
jg
jl
push
imul
bswap
xor
sub
aas
push
pop
dec
js
push
iret
xchg
push
stos
jecxz
ja
xchg
pop
cmpsb
cmc
push
xor
roll
int3
or
daa
push
cltd
jge
and
movsb
lcall
mov
test
pop
mov
sub
js
ljmp
adc
loope
pop
mov
shlb
sbbb
cwtd
inc
add
hlt
mov
mov
clc
mov
sahf
decb
xor
mov
roll
mov
cmc
sbb
jno
xor
loope
pop
gs
aas
inc
out
pop
popf
outsl
mov
jo
push
or
jge
sub
bound
sbb
pop
mov
pushf
fwait
xorb
mov
movsl
jo
ljmp
shr
xchg
lock
stos
aad
fildll
repz
mov
mov
bsf
mov
cltd
cmpsl
jle
mov
into
jo
mov
inc
fs
inc
cmp
cmpsl
jno
add
gs
mov
push
pop
cld
outsb
inc
xor
mov
repz
stc
sbb
push
aam
mov
pop
aad
sbb
popa
mov
inc
jge
dec
fildll
or
pop
xchg
movsb
pop
fidivl
stc
adc
jnp
mov
gs
daa
icebp
movsb
dec
push
cmp
mov
mov
xchg
cmpsb
mov
mov
push
cmp
data16
mov
lret
aas
test
inc
inc
mov
enter
loope
in
fwait
jmp
bound
mov
push
xchg
lock
cmp
in
adc
popl
or
enter
sbb
or
rclb
scas
dec
mov
fwait
loopne
lock
iret
repnz
lret
cmp
les
inc
das
mov
mov
jae
fwait
out
mov
and
sub
sbb
sbb
inc
push
lcall
aaa
lea
hlt
adc
mov
ss
push
sbb
adc
cmp
dec
inc
jge
out
xchg
xchg
adc
jecxz
lds
mov
mov
faddp
cld
mov
xlat
fsubrs
movsb
cli
fsub
xchg
mov
xchg
gs
cmp
or
cld
je
subb
jbe
jbe
out
stc
cld
and
dec
or
xchg
sarb
lds
ror
and
daa
or
popa
fldl
mov
cmp
lret
aam
and
rcrb
daa
adc
scas
mov
push
jnp
enter
test
xchg
mov
pop
pcmpeqd
push
in
cmpsb
cli
pushf
sub
mov
mull
jecxz
mov
sub
jmp
dec
xchg
ljmp
cmp
movsl
cwtl
push
into
cmp
push
test
loop
nop
mov
jae
stos
gs
pop
or
mov
mov
rcll
mov
sub
adc
into
inc
xor
pop
jne
xor
dec
pop
sub
aaa
div
testl
and
pop
fadds
ret
clc
adc
jge
cmp
jbe
cmpsb
mov
in
ret
mov
cs
int3
mov
push
popf
outsl
cmpb
andb
iret
popf
mov
sbb
test
add
leave
cmpsb
ret
xor
imul
mov
jns
mov
lea
or
jnp
ret
aad
inc
test
out
sbb
aaa
cwtl
aas
or
xchg
inc
loope
pushf
test
cmc
loopne
cmc
adc
pop
pop
jl
aam
mov
or
jge
dec
jns
pushf
add
repz
sub
sub
filds
jo
add
fidivs
xchg
push
in
dec
jb
sbb
cmpsl
fcomp
adc
mov
fstpl
repnz
jbe
aam
inc
and
sti
cwtl
or
xor
mov
es
mov
std
sbb
loope
xorl
cld
movsb
xor
cmp
ljmp
sbb
cmp
inc
push
push
xor
icebp
out
lret
pusha
jnp
sbb
or
int3
and
add
xor
test
jge
movsl
push
add
dec
xchg
in
les
mov
scas
push
int3
xchg
dec
stc
pop
xchg
mov
loopne
fstl
clc
ret
daa
ss
cltd
test
out
test
push
fdivrl
repnz
leave
jg
add
clc
mov
xor
sbb
call
or
mov
mov
sbb
pop
mov
jns
aam
in
subl
data16
sub
incb
mov
cmp
pop
sub
mov
jp
pop
jno
jbe
jno
cltd
dec
clc
jae
in
out
lcall
sub
mov
sub
jbe
xor
sahf
jns
cmp
movsl
xchg
cmp
fdivrs
pushf
sahf
pop
lods
xor
push
popf
sti
mov
in
in
xorl
daa
xor
ds
dec
jge
xchg
pop
jnp
dec
shll
fwait
cmp
popf
sbb
xchg
xlat
pop
adc
mov
inc
popf
jecxz
push
arpl
pop
xlat
sub
and
sbb
dec
rolb
cmc
fildl
lcall
popl
dec
sub
xor
mov
loope
gs
xor
jmp
fiadds
cwtl
clc
inc
or
cli
pop
aam
bound
mov
ds
dec
icebp
push
adc
dec
int
xchg
loopne
xchg
pop
aad
mov
shlb
sbb
sti
add
scas
movsb
or
mov
push
sbb
or
das
mov
sbb
sbb
jbe
nop
xor
in
scas
insb
push
xchg
xchg
xlat
jns
mov
mov
xchg
lret
aas
xchg
es
pop
mov
xchg
es
sbb
mov
mov
nop
fisttps
out
lahf
das
outsl
movsb
adc
mov
sub
pop
enter
cmp
or
ljmp
jae
inc
pop
dec
leave
mov
dec
add
jg
dec
jno
iret
lods
mov
les
addl
pop
icebp
jo
fcompl
xchg
cmp
cmp
aam
std
ss
mov
and
movhps
pop
add
movsb
xchg
mul
dec
out
sub
std
mov
or
adc
rcrb
and
das
into
hlt
pop
fldenv
lods
pop
ret
scas
jb
addr16
aaa
or
dec
xchg
inc
jmp
jo
inc
insl
jmp
jmp
push
cmp
dec
or
movsb
xchg
cwtl
mov
popa
pop
out
xchg
push
loop
jmp
push
sbb
gs
outsl
imulb
addr16
lcall
neg
fs
dec
or
cmp
jmp
sbb
and
pop
add
mov
push
imulb
out
aad
iret
out
fistl
ret
and
adc
ja
out
lcall
inc
repz
loopne
into
jmp
cli
lcall
out
xchg
inc
xchg
mov
push
shrl
ja
dec
jne
adc
ja
sbb
js
or
or
fcoml
jns
mov
adc
movsb
cmp
rcll
aas
pop
mov
mov
push
out
push
std
mov
inc
inc
mov
jge
cmc
cs
dec
test
jbe
push
daa
les
xchg
add
test
pop
lret
push
lds
mov
inc
mov
mov
ja
bound
out
test
mov
mov
les
lret
dec
sub
pop
mov
xchg
push
data16
fcom
movsl
dec
xor
inc
jbe
cwtl
xchg
sbb
fildl
xchg
mov
push
lret
test
sbb
fstpt
shlb
xlat
shl
xor
or
les
push
test
shr
mov
js
rorl
cmc
fsubl
sahf
ret
jecxz
mov
and
dec
jnp
or
daa
or
test
push
imul
push
cmpsb
mov
push
loope
mov
ljmp
shll
sbb
inc
imul
lahf
mov
repz
mul
inc
cs
in
cmp
push
mov
ja
lock
lret
jecxz
loop
imul
mov
cmp
xchg
jg
fnsave
cmc
sub
repnz
adc
fneni(8087
dec
add
cltd
cmpsb
sti
pop
subb
pop
call
inc
dec
sahf
test
xchg
xchg
pop
xor
movsb
xor
inc
shll
adc
adc
ret
pop
xlat
sbb
pusha
int
lret
jb
cmp
cmpsl
inc
inc
jmp
adc
js
pop
fstpt
repnz
jmp
sbb
cmp
and
enter
jg
std
das
pop
jg
movsb
ficoml
sbb
jg
mov
mov
sarl
scas
mov
scas
test
add
or
stos
mov
sysexit
shr
shll
cmp
cmpl
popa
daa
inc
adc
test
dec
std
push
sub
sub
in
add
arpl
movsb
cld
outsb
int
inc
and
xchg
xchg
push
mov
sub
lret
sbb
jo
and
scas
cmpsb
stos
gs
mov
xorb
out
or
fnstsw
push
insl
mov
mov
sbb
push
imul
das
lahf
out
in
cmp
dec
notl
cmp
pop
sbb
sub
cmc
push
cltd
lock
pop
add
push
mov
mov
enter
fsubrs
or
push
out
pop
mov
ret
pop
add
popa
or
loopne
mov
and
push
push
pop
cltd
sub
movb
jns
movsb
loop
add
les
jmp
mov
in
xor
jns
adc
jb
mov
rolb
jns
int3
inc
out
aad
or
out
mov
les
mov
decb
aam
nop
std
nop
lret
loopne
mov
out
pop
push
jae
mov
pop
div
adc
in
add
and
dec
shlb
mov
popf
jp
mov
pushf
popa
repz
sbb
push
cmpsb
jo
int
pop
in
insb
test
push
adc
mov
cmp
pop
push
or
adc
mov
or
and
test
xor
adc
leave
das
mov
xor
cmpsb
rorb
scas
jae
mov
pop
mov
mov
pop
mov
mov
lds
mov
daa
push
inc
mov
mov
sub
popa
rorb
ret
mov
add
xchg
fcoms
add
mov
orl
sub
dec
pop
lcall
insb
ljmp
jg
pop
mov
jne
xchg
xchg
bound
jnp
dec
mov
iret
inc
and
int
outsl
cmpsb
icebp
test
test
jp
push
enter
ljmp
mov
pop
fadds
ja
xor
pop
loop
push
xchg
imull
movsb
jge
pop
pop
pop
fstps
sbb
jbe
stos
add
add
push
rorl
and
xchg
test
in
sbb
lock
fmuls
or
cltd
in
cltd
shll
push
daa
movsb
int3
pop
xor
das
or
mov
cli
dec
or
sbb
sub
lret
mov
adc
dec
ljmp
and
push
sbb
js
repz
iret
sub
sbb
inc
sahf
mov
das
jge
xor
movsb
add
lret
add
inc
rcll
ds
cmp
mov
mov
clc
jbe
loop
js
xchg
pop
xorl
lret
add
pop
jae
shlb
int
jae
pop
add
and
xor
push
dec
psubq
loopne
xchg
cltd
jno
test
sub
movsl
fildll
xlat
cmp
sub
pop
pop
pshufw
cltd
sub
push
pop
dec
sahf
rcll
mov
and
test
aaa
loope
out
push
xchg
movsb
dec
push
lds
fistl
adc
nop
sbb
inc
jbe
push
test
lret
jno
pop
lds
inc
sbb
mov
push
insb
je
sbb
stc
push
or
fsubrs
ret
insb
or
inc
mov
mov
mov
stos
enter
outsl
jb
rep
ret
pop
cmp
divl
cld
jae
jecxz
inc
lods
ljmp
inc
faddl
and
out
stos
xor
mov
mov
dec
in
mov
mov
push
adc
divb
divl
fisubrs
sub
jg
push
arpl
adc
pop
mov
sbb
xchg
aad
or
xor
dec
ss
dec
in
pop
pusha
out
mov
loopne
leave
pop
push
ret
cmp
push
jmp
pop
imul
aas
int
mov
ss
sbb
scas
ljmp
and
mov
cli
bound
out
sbb
pop
sbb
cmpsl
movsl
pop
in
sub
ljmp
mov
sub
orb
repz
cmc
fdivr
xchg
mov
adc
push
jb
leave
mov
flds
loopne
inc
mov
outsl
xchg
mov
mov
mov
mov
pop
mov
jne
arpl
cmpb
rolb
out
xchg
jne
pop
daa
aad
sbb
cwtl
mov
std
int
and
jne
sbb
mov
insl
push
cmp
jo
xchg
mov
sti
aam
mov
mov
les
fcmove
addr16
int
imul
lods
negl
add
outsb
aaa
dec
outsb
test
mov
sbb
jbe
ret
xchg
lods
xor
xchg
xor
int3
ds
pop
pop
inc
sub
fldt
cmc
and
jmp
aad
bound
fbld
jno
sub
das
js
mov
shrb
push
adc
push
rcl
xor
outsb
jne
sub
andl
xchg
or
je
pop
dec
and
jbe
xor
jmp
inc
lods
inc
pop
test
xchg
movsb
and
and
push
mov
jp
fstpt
mov
sbb
push
test
mov
arpl
jmp
push
mov
xlat
cmp
xor
pop
cmp
pop
cmc
push
inc
or
adc
add
pop
adc
jge
push
loope
xor
enter
ds
stos
js
dec
or
mov
or
imul
and
mov
xchg
enter
xor
push
mov
test
sbb
mov
popf
fcoml
or
add
fsubr
push
test
pop
imul
xchg
loop
mov
adc
or
jge
cmpb
adc
xchg
cmp
aaa
fistl
in
jl
mov
sbb
outsb
mov
jp
insl
out
lods
bound
fsubl
test
and
test
cli
mov
clc
lods
inc
adcb
cmp
repnz
inc
dec
push
or
dec
nop
insb
stos
lock
jecxz
loop
dec
adc
nop
mov
push
call
xchg
fidivrl
data16
adc
lret
mov
hlt
cmp
cmp
mov
and
arpl
jg
fidivl
rep
adc
dec
sbb
fcoms
cmp
into
in
dec
mov
push
cmc
jge
jmp
or
sti
push
sub
out
xchg
rcrb
gs
imul
xorb
cli
and
inc
jns
mov
std
fidivrs
jge
fucomi
dec
cmp
jno
mov
insl
and
adc
out
jno
mov
add
sbb
and
out
out
stos
in
fstpt
daa
pusha
cs
arpl
jnp
push
bswap
lock
inc
adc
mov
or
inc
push
jbe
jo
jo
add
loopne
hlt
in
iret
ss
xor
cmp
aam
shlb
pop
or
inc
mov
dec
add
lret
mov
sub
pop
popf
adc
push
fcomi
mov
cmp
scas
or
adc
pop
or
ficompl
dec
sub
fmuls
xorl
in
pushf
outsb
jecxz
or
sub
mov
mov
mov
loop
mov
shlb
loope
sbb
scas
out
fsubl
add
rolb
fidivrl
jp
shlb
lret
fiaddl
sbb
test
lea
in
test
icebp
mov
sub
jnp
insb
leave
push
std
add
je
fbld
xchg
mov
cs
out
stos
out
imul
mov
sub
inc
es
enter
popa
insl
movsl
mov
test
cmpsl
ret
inc
mov
adc
test
js
icebp
lock
pop
bound
pop
lds
and
cmpsl
mov
ret
fcoms
pop
mov
xchg
xor
jae
fs
sbb
mov
sbb
ljmp
pusha
leave
jecxz
dec
adc
dec
lods
mov
das
out
sarb
inc
jne
aad
idivb
mov
push
std
clc
push
jo
iret
movsb
loopne
ret
mov
test
and
stc
ss
jle
xor
lcall
or
xor
inc
sub
call
lcall
mov
and
fcmove
psadbw
sahf
iret
mov
and
sarl
repnz
cmp
add
push
in
cs
inc
cwtl
in
xor
mov
and
fsts
stos
adc
das
xor
stos
rolb
sahf
dec
add
cmpl
int3
cmp
flds
or
cli
push
shlb
mov
add
or
push
push
daa
fldcw
jnp
push
adc
or
add
movsl
cmp
popa
in
adcl
mov
scas
les
push
xor
movsl
jne
cmp
pusha
dec
jns
aaa
dec
rcrb
cmp
inc
and
dec
fsubrl
push
rcr
cwtl
jno
int
or
es
jmp
inc
and
adc
clc
push
xchg
xchg
mov
lcall
int
and
push
or
jne
xchg
nop
push
gs
jne
sbb
sti
call
iret
je
popf
in
sti
sarl
jo
nop
push
imul
dec
push
in
or
sti
push
or
call
test
lods
enter
fbld
enter
je
repz
or
inc
pusha
aaa
dec
sbb
mov
data16
popf
daa
mov
pop
call
fidivrl
xlat
call
sbb
xchg
pop
das
pop
cmpsl
arpl
rolb
mov
nop
pop
xchg
movsb
xor
cmp
add
and
sbb
and
mov
or
cmp
jne
lea
sti
aam
dec
mov
in
ss
popf
jecxz
insl
xor
xchg
shll
fisttpl
jno
xchg
add
cld
jne
adc
iret
mov
sub
cltd
in
arpl
and
sti
fiadds
stos
mov
sbb
xchg
mov
adc
lret
mov
andb
cmpsb
lret
xor
dec
jmp
inc
mov
aas
pop
test
sub
mov
out
fldpi
sub
ja
dec
in
fldl
lahf
imul
lret
jmp
mov
in
outsb
data16
insb
pushf
jae
mov
mov
rcll
jne
rolb
jno
inc
or
int
push
xchg
pop
iret
jl
shr
xor
imul
mov
xchg
jae
mov
loopne
dec
hlt
xchg
jo
and
xor
call
adc
dec
xchg
loope
add
es
sub
jg
sub
popf
ds
cltd
popa
sbbl
hlt
jno
aas
sbb
loope
sub
dec
sbb
xchg
sbb
sub
lcall
mov
fyl2xp1
adc
cs
jns
inc
mov
adc
loope
sub
rolb
or
inc
jle
jp
push
and
mov
enter
fisubrs
and
mov
pop
leave
cli
adc
mov
or
movsb
push
cld
iret
cmp
mov
fldcw
into
mov
push
mov
adc
lods
add
loopne
movl
je
xchg
and
sarb
loop
dec
fbstp
xor
sbb
mov
mov
lods
and
cwtl
sbb
shll
cwtl
inc
jmp
adc
cmpsl
in
xlat
lahf
popf
sti
jnp
out
movsb
xchg
push
xchg
xor
and
push
mov
push
inc
pop
and
push
adc
jnp
orb
adc
cmp
aas
outsb
test
nop
popf
mov
in
daa
jnp
in
lock
xchg
cmp
shlb
pop
push
stos
mov
aad
popa
cmp
das
int
mov
jmp
inc
out
sti
hlt
and
ja
mov
or
add
clc
inc
xchg
movsl
imul
inc
popf
cli
test
movsl
pop
inc
and
inc
mov
fwait
cli
mov
movsl
clc
push
inc
movsb
inc
dec
sub
enter
outsb
push
mov
adc
dec
lea
rol
mov
jo
push
js
nop
dec
pop
or
sbb
mov
adc
adc
outsl
inc
xchg
pop
loope
sub
enter
xchg
ret
arpl
pop
aas
fs
add
out
outsb
mov
inc
fs
push
stos
cmpsb
sbb
popf
ss
mov
jg
ds
mov
adc
bswap
loopne
scas
iret
mov
mov
inc
in
into
dec
mov
lock
loope
xor
push
sti
repz
adc
xchg
enter
inc
int3
pop
inc
fs
pushf
jno
icebp
popf
inc
cltd
sbb
cmpb
lock
push
rclb
pop
push
fcompl
pop
xorb
or
xor
clc
out
lcall
mov
xchg
cld
out
xor
aam
ss
add
ficompl
aaa
je
test
push
xchg
stos
inc
out
mul
ja
filds
and
sub
add
jbe
mov
add
sbb
stc
or
orl
iret
je
inc
call
xor
mov
cmp
cmp
ficoms
mov
movsb
inc
cmp
leave
leave
shlb
cli
jb
scas
dec
aad
bound
test
xchg
sbb
clc
mov
mov
imul
ljmp
sbb
add
insl
shll
lock
mov
pop
loope
push
inc
mov
sub
mov
xor
repz
sub
cmpsl
xor
jecxz
ficoml
les
jb
sbb
or
jne
xor
icebp
outsb
xor
sub
mov
push
dec
fisubl
aad
sub
mov
das
ja
add
mov
mov
xor
pop
lcall
push
shll
pop
sub
aad
out
sub
jns
outsl
sub
mul
pop
pop
cmp
mov
sub
lret
fdivr
jmp
mov
sbb
mov
jno
fcomps
adc
pshufw
aam
fdivp
xchg
push
iret
daa
out
sti
neg
pop
xchg
mov
inc
or
jg
sbb
sub
mov
fsubl
cmp
push
fld
pop
fcompl
and
out
repz
xchg
arpl
mov
jge
mov
loope
enter
rol
pop
and
dec
orb
xor
push
cmp
outsl
cmp
push
xchg
mov
add
rclb
jle
fstl
cltd
lods
loop
test
aad
int3
inc
jns
pop
enter
sbb
mov
pushf
nop
sbbl
cli
inc
stos
imul
imulb
lods
lret
test
ret
mov
data16
mov
and
add
in
aam
scas
into
jae
mov
iret
add
cwtd
xor
lds
cmp
mov
popf
scas
mov
es
call
push
outsb
and
xor
xchg
add
mov
xchg
pusha
dec
inc
movsl
rcrb
scas
push
loop
push
lds
xchg
clc
dec
rclb
fcmovbe
inc
push
popf
jp
add
movsl
ficompl
xchg
sahf
or
push
cli
push
shr
push
add
adc
jl
cmp
push
pusha
js
lock
inc
imul
lahf
cmpsb
xor
push
call
or
shlb
push
mov
mov
jae
push
push
jp
adc
inc
andl
das
mov
jecxz
fldenv
jp
and
or
mov
pop
faddl
dec
pushf
mov
push
pop
in
pop
rcrb
stos
frndint
mov
inc
lds
shlb
aaa
cmp
sbb
dec
and
enter
out
insb
mov
roll
jnp
cmc
push
aas
in
notl
sarl
jb
subb
xlat
ss
inc
adc
push
jmp
jo
push
inc
mov
xor
loopne
test
mov
xchg
aas
cmp
out
push
testl
pop
mov
push
xchg
std
jb
xchg
fldt
cmpsb
lahf
inc
mov
mov
mov
cmp
addr16
daa
sbb
mov
sbb
ficomps
xchg
xchg
fwait
and
sbb
aam
sub
xchg
bound
outsl
mov
mov
dec
loope
xchg
fmul
pop
aad
lock
ret
dec
push
fisttps
and
rcl
pop
fwait
add
clc
push
addr16
fdecstp
fisubrs
les
dec
das
xchg
aas
xchg
xor
and
addb
mov
push
inc
cmp
jmp
xor
jb
push
shrb
push
lret
rcr
sub
fildl
rcl
mov
cli
lods
fisttps
sub
icebp
jbe
es
and
xchg
scas
mov
loope
ljmp
pop
mov
subl
sub
mov
cld
cwtl
and
lcall
add
sti
rolb
daa
and
pop
mov
ja
cwtl
shr
arpl
pop
and
inc
pop
mov
ds
adc
jmp
test
enter
test
cs
std
mov
jb
cwtl
sti
shl
or
in
je
add
inc
mov
dec
repz
test
add
daa
outsb
addl
stos
sbb
push
mov
adc
icebp
inc
add
mov
fmull
sbb
jb
cmpsb
sbb
mov
js
sub
stc
in
sub
sbb
mov
cmp
sub
mov
jge
popf
mov
cmp
push
sub
mov
push
loope
jle
mov
adc
mov
or
loopne
sahf
imul
dec
adc
pop
stc
add
push
mov
sbb
sarb
shll
xchg
sbb
jbe
xchg
add
pop
aaa
out
push
pop
fisttpl
fxch
push
sub
pushf
fsubrp
cli
pusha
iret
add
out
mov
jnp
nop
and
dec
mov
xchg
adc
pop
mov
or
pop
aas
pop
mov
inc
inc
mov
mov
or
sti
sbb
add
scas
add
in
scas
sbb
inc
pop
fcmovu
shlw
mov
pop
jae
mov
inc
mov
cli
aam
cltd
stos
jbe
inc
insb
adc
or
cmpsb
popa
push
fs
dec
sub
jnp
fbld
or
dec
mov
push
fnstcw
lret
mov
sub
xchg
push
ds
pop
pop
push
add
scas
aam
jae
inc
lods
lret
aaa
mov
adc
lea
ja
imul
xor
sbb
loopne
inc
add
push
xor
scas
sub
out
pop
movl
mov
or
jmp
dec
mov
pop
cmp
mov
push
pop
std
iret
cld
pop
mov
push
sbb
and
mov
jmp
imul
push
inc
cmpsl
fsts
rcrl
mov
adc
cmp
in
adc
ss
js
inc
push
lods
inc
cmp
enter
lcall
sub
lds
inc
push
or
mov
add
jg
lcall
hlt
mov
pop
dec
adc
in
sar
sbb
xchg
mov
mov
mov
daa
push
xor
mov
out
adcb
movsl
dec
inc
aad
pop
loop
mov
aam
or
or
dec
insl
roll
movsb
pushf
aas
in
enter
cmpl
sub
dec
minps
ja
inc
sbb
out
xchg
mov
xor
das
mov
mov
xchg
xchg
or
add
fs
hlt
stos
adc
inc
mov
scas
pop
xlat
or
in
aad
aam
push
mov
sub
lods
and
fs
adc
cmpsl
inc
sub
out
test
fwait
stos
jp
fdiv
or
stos
pusha
jmp
call
xor
cmp
mov
jg
pop
iret
and
mov
rclb
dec
sbb
mov
xor
jg
orl
test
cli
nop
stc
push
xor
mov
fsubrl
insb
outsl
or
cli
mov
jnp
mov
cld
out
xchg
icebp
push
ljmp
fstps
mov
icebp
lcall
inc
shll
or
mov
xchg
das
mov
and
jp
pusha
sarb
adc
dec
fucom
sub
dec
add
cwtl
lcall
push
cmp
scas
or
xchg
cmc
sahf
cmp
sbbl
cmp
cld
filds
inc
imull
jne
xchg
push
lods
fisubs
cmpsl
push
repz
stos
popa
sbb
icebp
test
inc
orb
xor
popa
pusha
aas
cltd
push
lahf
mov
repnz
xchg
lret
cmpsl
sbbl
hlt
jnp
and
inc
dec
cmpsb
push
pop
dec
pop
pop
sbb
loopne
out
dec
leave
mov
pop
cmp
test
inc
shl
push
lret
jle
sahf
dec
bound
pop
push
adc
stc
aad
loope
cmp
adc
lods
pop
decl
mov
sbb
push
fists
mov
movsb
pop
mov
dec
clc
add
out
nop
and
pop
add
ja
das
and
sub
pop
scas
bsf
inc
push
push
fwait
pop
cli
cmp
push
lret
movsl
ds
push
jle
cli
repz
incb
push
jnp
lods
stos
out
pop
push
loop
push
das
andl
sub
sub
dec
cmp
push
fwait
pop
or
xor
aas
cmp
adc
int3
push
pop
je
movsb
in
imul
nop
mov
stos
bound
fucomip
aad
dec
and
cmp
mov
jl
rcrl
in
das
pushf
push
ds
push
cmpsl
mov
mov
inc
xlat
dec
pop
mov
jmp
fildll
imul
iret
stos
nop
xchg
popa
push
xchg
lock
xchg
mov
mov
jecxz
lret
rorb
sbb
and
packuswb
jo
insl
inc
sbbb
or
xor
lds
push
cmp
push
pop
repnz
sbb
or
adcb
loope
outsl
cwtl
pop
add
hlt
inc
pop
mov
or
clc
xor
sti
aad
sub
out
mov
add
shrb
and
cltd
lock
test
nop
cmp
push
jo
popa
ds
cmpsb
cmp
div
std
xor
insb
jg
pop
and
lcall
add
jge
arpl
pop
pop
rorl
pusha
cmp
imul
cmp
arpl
inc
out
loop
jns
xor
fimuls
ret
out
fdivl
cwtl
mov
into
data16
notl
popa
scas
sub
mov
jge
lods
enter
fstp
lea
inc
xchg
iret
nop
mov
xchg
mov
sysexit
insl
repnz
cmp
push
and
mov
sbb
ljmp
in
inc
jle
mov
pop
hlt
cmc
jne
or
int
les
pop
push
mov
mov
add
jo
fimull
sbb
pop
scas
addr16
mull
pop
in
xchg
fcmovnb
adc
or
fisttpll
in
gs
dec
mov
mov
lcall
lods
jge
mov
sbb
pusha
fidivrl
mov
das
das
outsl
sbb
mov
dec
sub
popf
mov
mov
in
addr16
sahf
adc
or
clc
lahf
xchg
fdiv
mov
push
mov
popa
sub
xor
imul
mov
add
jbe
sti
push
dec
cwtl
fnsave
pop
xchg
lds
into
outsl
xchg
or
or
test
loope
sub
jl
aaa
or
dec
add
dec
push
decb
xchg
int
jo
sub
xor
cltd
sub
ret
pop
das
fs
pushf
stos
out
cmpb
dec
sub
fsubrl
cmc
jbe
pop
jbe
mov
mov
lret
scas
imul
aaa
dec
or
push
stos
adc
gs
mov
adc
inc
mov
jne
pop
dec
push
notb
or
stos
dec
dec
mov
jnp
sbb
push
cwtl
daa
inc
je
mov
pop
cmpsl
test
lret
aas
negb
push
out
and
sarl
push
xor
aad
pop
mov
mov
jae
shll
and
loopne
dec
aad
push
out
lahf
into
xchg
mov
fdivrs
cli
and
and
xor
push
imul
or
test
jnp
cmp
movsl
dec
filds
gs
out
cmp
adc
dec
sub
addr16
xchg
sbb
nop
movsb
dec
sub
mov
cmpl
pop
gs
dec
jo
inc
and
int
mov
and
jns
and
outsl
repnz
lods
pushf
std
fs
in
mov
dec
addr16
cmp
rcrl
imull
mov
test
mov
ror
jo
je
in
sbb
dec
outsb
jecxz
add
movlps
cmc
dec
aas
push
add
pop
sbb
push
lds
mov
mov
sbb
fs
xlat
and
cmp
or
push
addr16
addr16
and
out
push
iret
add
aad
outsl
fidivrl
cmp
adc
push
dec
adc
xor
cmpsb
inc
ret
mov
inc
cwtl
test
jecxz
lods
lret
mov
mov
outsb
fbld
mov
jl
testb
add
loop
mov
jmp
cmc
xchg
adc
or
aas
fstpl
dec
mov
push
adc
push
jp
cs
es
sti
dec
pop
ds
mov
icebp
icebp
jae
fdivr
and
or
dec
pop
add
clc
pusha
add
ret
inc
dec
ljmp
mov
in
mov
cmp
stos
icebp
xor
pushw
mov
xchg
rclb
stc
mov
outsb
int3
mov
lret
lret
sub
inc
push
lcall
xchg
pusha
rcll
sbb
imul
lods
shlb
sub
lds
imul
jg
push
stos
mov
sbb
jbe
sbb
je
jae
and
xchg
int3
inc
stos
jg
icebp
outsb
adc
into
movq
fsubl
nop
lods
add
push
cvtpi2ps
pop
lret
jno
divl
hlt
enter
push
ds
int3
orl
lds
lret
adc
jge
xor
xlat
adc
adc
adc
jge
daa
int
cwtl
xor
out
lods
push
push
mov
and
js
in
mov
and
notb
ret
jge
pop
push
fiaddl
or
or
or
cs
and
mov
repnz
kxnorq
mov
out
dec
jmp
jnp
xchg
clc
or
fcompl
cmpsl
fidivl
lret
popf
inc
call
or
push
inc
cwtl
lods
clc
adc
imul
push
add
jp
scas
rolb
jecxz
rcl
out
mov
cmp
inc
mov
xchg
mov
jae
cs
add
jle
test
aam
aad
int3
lcall
lock
aad
push
lods
ljmp
in
jno
jmp
daa
sarl
dec
pop
loope
rep
push
scas
fisubs
jl
fisubrl
test
lea
cmp
lock
push
push
push
int
xlat
xchg
pop
add
ljmp
or
mov
lahf
push
mov
mov
iret
daa
std
shll
rcrb
cmp
mov
mov
fimuls
dec
xor
push
push
dec
movsl
mov
or
leave
adc
fs
in
out
pop
sub
jmp
es
les
pop
fistpll
int3
and
push
in
test
cmp
pop
cltd
out
mov
sub
in
gs
mov
repnz
enter
call
aaa
into
xchg
js
rorl
cwtl
mov
mov
mov
or
mov
push
xor
mov
lahf
xor
fmuls
pop
sahf
hlt
movsb
adc
out
mov
icebp
es
mov
insb
test
in
imul
mov
mov
out
jne
loopne
adc
callw
cmp
shll
push
xor
sub
sub
dec
mov
test
mov
orb
je
xor
jo
cli
inc
ja
dec
enter
adc
push
xchg
fimull
xchg
bound
aam
mov
test
jb
pop
inc
pop
out
adc
and
push
mov
ret
xor
nop
jbe
cld
shlb
incb
mov
mov
cmp
or
dec
out
push
test
add
push
daa
std
lret
xchg
sbb
fimuls
fabs
cmp
addr16
xchg
nop
jns
subb
andl
dec
lret
and
and
test
outsb
and
dec
adc
xor
aas
or
sub
mov
mov
inc
xchg
jne
scas
fsts
push
lahf
push
cmpsl
add
in
inc
test
out
xchg
aad
pusha
adc
das
ror
pushf
sbbl
mov
mov
mov
and
cmp
insb
or
dec
push
roll
pushf
aaa
dec
pusha
sahf
iret
popf
scas
adc
in
mov
fcomps
stos
push
xor
mov
dec
in
lock
jae
loopne,pn
cli
mov
leave
push
or
lods
add
mov
sbbb
into
repz
aaa
adc
jb
sub
xor
shlb
mov
dec
pop
jg
sbb
pop
cmpsb
push
or
mov
aad
or
jl
xor
sbbl
es
mov
fcmove
mov
mov
es
sbb
lcall
pop
aad
xor
pop
cmp
mov
sbb
and
xchg
ss
adc
mov
dec
cli
insb
not
xchg
xor
xchg
lret
pop
cmp
mov
cmp
fs
pop
movsl
ss
pop
add
scas
cmc
ds
cmp
or
adc
push
ljmp
dec
or
outsl
push
mov
or
sub
jp
mov
mov
scas
xchg
adc
arpl
mov
ljmp
push
xor
addr16
scas
push
test
jle
mov
jnp
inc
mov
sub
gs
clc
in
stc
popa
mov
fstpl
pop
xorb
or
rorl
pop
pop
fwait
add
xchg
mov
cmp
popa
sbb
test
xor
mov
jo
add
pop
cmp
cli
mov
loope
xchg
mov
test
jge
aas
cmp
xchg
mov
xor
jp
rclb
adc
mov
enter
dec
cli
imull
or
add
push
xchg
pop
xchg
jo
pop
pop
and
fnsave
pop
neg
inc
das
adc
push
push
fnstsw
lcall
test
jne
and
fsubr
mov
test
lock
or
push
cmp
inc
rorb
jae
push
mov
or
pop
out
dec
mov
loope
rorl
pop
push
mov
cmpsl
and
fadds
sahf
ds
cmp
pop
pop
cmp
xchg
mov
out
int3
rcrl
xor
jmp
ret
fmull
dec
or
std
bound
push
xchg
and
adc
add
js
cli
sbb
mov
xchg
push
pop
xchg
adc
testb
dec
push
cltd
stos
or
dec
int
imul
ljmp
clc
jl
sub
mov
fnstenv
cmp
and
scas
push
mov
in
dec
mov
or
sub
ja
int3
jg
jae
sub
xchg
in
daa
xor
pop
xor
push
add
sahf
orl
cmp
mov
sub
addl
daa
dec
in
xor
pop
lea
leave
sti
int3
pop
or
in
jmp
repnz
aaa
testb
cld
mull
lahf
or
fisubl
jge
addr16
rorl
xor
mov
test
xor
sti
inc
push
lahf
mov
lea
inc
push
jmp
add
jmp
scas
cmp
add
stos
or
mov
lods
test
scas
sbb
insb
xor
xorl
fsubl
lret
lds
insl
jb
cmp
pop
sahf
cmpsb
mov
popf
jo
adc
mov
mov
outsl
pop
rcl
ja
xor
neg
jne
push
pop
mov
call
xlat
mov
nop
lods
dec
repz
pop
gs
or
mov
call
jo
les
in
cmc
xchg
dec
notb
or
cld
cmpsb
add
push
js
dec
jno
jno
cmpsb
movb
adc
mov
sub
xchg
iret
mov
rcrl
push
and
cwtl
lret
xchg
fs
or
dec
adc
imull
lcall
or
adc
mov
std
jmp
adc
mov
pop
dec
sbb
sti
or
stc
dec
cmp
xor
lret
fists
clc
cmp
pushf
cmp
adc
adc
xchg
fcmovu
shlb
hlt
inc
imul
push
mov
push
pop
fstps
sub
jns
rol
jl
or
out
xchg
cwtl
push
mov
fs
nop
out
xlat
movsb
out
ficoms
out
and
leave
ja
fucomi
dec
inc
mov
add
mov
jl
push
sbb
je
imull
sbbb
out
clc
ds
push
js
lahf
or
test
mov
mov
fists
pop
mov
repnz
cmp
dec
pusha
andb
test
push
repnz
call
cmpsl
call
sahf
fcmovnu
fimull
cli
or
cli
daa
adc
scas
add
sbb
add
and
sahf
mov
push
xchg
das
cmpsb
shll
push
and
movsb
shlb
sub
inc
adc
xor
xchg
pop
fiaddl
stos
addr16
test
fiadds
mov
push
les
adc
in
cmp
sub
movhps
xchg
in
jp
mov
outsl
shr
xlat
dec
mov
cmp
xchg
mov
push
daa
pop
fwait
jbe
mov
pop
scas
xchg
shll
js
fbstp
and
rcll
cmpsb
lret
xchg
lea
mov
sbb
mov
jbe
arpl
mov
jb
fwait
in
push
push
addb
movb
cmp
lods
fcoml
popf
andb
out
dec
and
sarl
inc
bound
sarl
pop
pop
mov
fildll
and
add
push
mov
clc
fnsave
sbb
cmp
mov
sahf
inc
dec
daa
cli
cli
mov
js
roll
jno
sahf
mov
dec
fld
add
add
imul
lods
inc
je
ss
xchg
shr
or
cmpsb
je
ret
lods
add
fucomp
jo
jne
stc
inc
in
addr16
lock
sub
or
jecxz
sbb
mull
and
xchg
xor
sbb
test
push
xchg
jle
loopew
dec
or
xor
lea
jl
push
mov
pop
lret
ret
mov
xchg
cli
push
aad
sarb
push
or
movsb
sti
and
out
dec
jmp
gs
and
scas
jae
adc
sub
fldl
xchg
mov
mov
in
std
clc
and
push
iret
adc
inc
or
pop
jno
mov
pop
fisttpl
stc
stc
mov
push
loope
std
sub
stos
xchg
pop
cltd
fwait
nop
jp
iret
cmp
clc
jb
js
xchg
or
fcoml
out
add
in
fs
sbb
cmp
add
xchg
sub
lods
dec
addb
push
and
xorl
int
fs
xchg
repz
mov
mov
pop
and
mov
dec
mov
imul
loop
mov
repz
mov
test
aas
pop
jo
dec
cmp
and
mov
and
push
in
dec
xchg
cltd
aaa
popf
xor
mov
xor
out
repnz
jle
test
jbe
pop
loopne
movsb
sub
lahf
push
adc
pop
data16
stc
icebp
and
and
jbe
sar
test
shrb
sub
fwait
mov
es
sbb
fcoml
ljmp
ljmp
pop
mov
xchg
jmp
imul
hlt
jb
jl
lcall
adc
cwtl
leave
inc
daa
add
rorl
cltd
cwtl
cmp
or
mov
out
cmp
aaa
mov
fimull
aam
sbb
arpl
ret
xlat
adc
ret
push
mov
inc
dec
cmp
xchg
cmovge
jle
test
les
and
inc
fwait
cmp
aaa
push
adc
orb
xor
clc
sarl
psubd
movsl
shlb
inc
outsb
clc
arpl
pusha
xor
jae
mov
insb
mov
insb
lret
pop
mov
in
clc
sbb
mov
mov
sbb
imul
test
icebp
scas
cmp
outsb
repz
adc
cmp
add
shrl
xchg
iret
out
sub
and
and
ds
cltd
call
sbb
addb
gs
ret
loop
sbb
jp
les
jno
add
pop
xor
dec
jmp
push
sub
add
inc
pop
clc
adc
jmp
hlt
mov
rep
mov
je
mov
decb
cmp
aad
loope
shll
std
ss
cmp
cmp
xchg
xchg
and
and
sbb
jnp
and
scas
inc
mov
mov
mov
push
mov
xor
cmp
mov
dec
mov
mov
mov
pop
cmc
test
ljmp
into
sbb
out
cmp
stc
sub
jae
add
jle
dec
or
sbb
xchg
mov
repz
int
pop
cmp
dec
orb
jecxz
pop
cltd
sbb
mov
mov
movsl
int
inc
fcoms
add
and
add
in
or
mov
stc
or
sbb
mov
sub
sbb
push
sub
fdivr
inc
enter
test
cmp
movsb
and
pop
mov
fistpll
cwtl
cmp
lods
dec
out
xchg
xchg
clc
pop
fiaddl
mov
mov
add
std
std
mov
jmp
insl
pop
lds
mov
mov
jmp
pop
subb
dec
dec
push
rolb
and
ja
popa
movsl
push
and
inc
pop
stos
push
sub
orl
call
inc
dec
arpl
push
xor
sub
mov
movsl
jbe
fistpll
test
or
scas
cbtw
fwait
pop
call
mov
pop
sbb
mov
mov
add
test
cmp
popf
ret
xlat
gs
mov
rclb
cmp
insb
shlb
or
or
scas
fs
or
inc
cmc
push
push
cmp
xchg
loope
arpl
call
lea
and
in
jno
jb
pop
xchg
jecxz
jbe
adc
and
push
mov
push
sub
sarl
jo
js
movsb
in
inc
xchg
adc
add
lret
out
mov
fs
sbb
and
cmp
std
mov
out
call
arpl
jne
pop
push
dec
mov
aam
out
lods
in
inc
into
std
xor
lods
addl
adc
add
mov
inc
inc
mov
jmp
sub
mov
add
inc
add
or
jne
xchg
xor
fnsave
ljmp
sbb
aas
jbe
sub
jmp
xlat
dec
pop
push
mov
int
gs
inc
dec
jecxz
cmp
push
jae
jl
and
jno
jno
scas
xchg
lock
gs
mul
adc
jge
ret
testb
push
imul
add
pop
sarb
arpl
push
icebp
faddp
arpl
aad
cmpsb
pop
scas
sub
sbb
es
js
mov
jb
test
and
in
rcl
jl
mov
loope
xor
xor
sub
inc
pop
add
pop
and
and
int
test
je
xchg
pop
or
data16
adc
outsb
lret
js
cmp
flds
mov
mov
jecxz
push
xor
xor
arpl
hlt
shrb
ja
mov
xchg
mov
inc
xchg
cld
imul
test
arpl
inc
jne
mov
mov
dec
pop
adc
loope
lea
test
insl
adc
iret
jbe
adc
lock
pop
iret
cmp
out
inc
dec
adc
sar
pop
stos
mov
cmp
mov
and
adc
in
xchg
push
aad
xchg
test
fstpt
out
xchg
sbb
xor
outsl
xchg
mov
leave
into
cld
fadd
ret
adc
mov
sbb
stos
cmp
xor
and
arpl
fcmovu
mov
rclb
adc
mov
pop
or
inc
pop
je
pop
xbegin
xchg
icebp
idivl
je
fists
mov
fisubrs
fsubrl
shrb
adc
inc
mov
test
push
int3
jmp
adcb
xor
adc
pop
push
dec
add
sub
push
cmpsb
mov
xchg
sub
sbb
mov
xchg
leave
mov
test
leave
jnp
aas
mov
fadds
enter
inc
imul
lock
dec
mov
cmpsb
or
xor
mov
add
jl
lret
vcvttps2dq
nop
mov
add
pop
mov
js
inc
pusha
cmp
cmp
in
jmp
mov
mov
mov
inc
cli
jo
fldcw
mov
fwait
xor
inc
pop
xchg
sti
lds
shll
cmp
adc
fadds
fdivrs
ret
xchg
xor
and
fwait
adc
jecxz
or
mov
cmp
scas
push
clc
repz
mov
in
clc
fwait
jle
bound
dec
addr16
repnz
std
cmp
scas
je
stos
into
add
pop
inc
cmp
jmp
sarl
fs
inc
movsb
mov
inc
mov
xchg
mov
push
loope
push
push
mov
or
mov
push
out
in
rorb
xlat
jg
sbb
aam
mov
mov
fwait
mov
ret
loop
push
pusha
clc
es
mov
mov
stc
xchg
pop
test
sbb
cmc
dec
mov
mov
mov
sbb
and
frstor
movsb
mov
mov
jns
enter
mov
or
mov
inc
icebp
mov
repz
push
sbb
int3
repnz
aaa
rol
sbb
ss
inc
fwait
lcall
mov
cwtl
xchg
sbb
sbb
pop
add
jnp
sbb
pop
scas
arpl
or
xchg
mov
mov
and
pop
xor
jmp
outsl
xlat
mov
sbb
pop
test
inc
inc
push
jbe
mov
mov
sub
inc
out
mov
mov
push
add
xchg
pop
pop
cmpsb
ja
sub
jp
pusha
jmp
es
sub
push
mov
inc
and
rclb
aaa
jbe
cmpsl
ja
cmp
mov
xchg
push
loope
stos
push
mov
xchg
int3
loop
and
test
notb
movsl
cmp
sub
mov
lock
mov
loope
andb
pop
mov
aaa
or
aam
cwtl
jecxz
sbb
loope
repz
mov
pop
add
mov
nop
in
push
or
stc
lds
mov
add
sub
or
push
shl
repnz
inc
xor
push
jecxz
aas
push
push
pusha
cmp
lret
in
xchg
dec
dec
xchg
xchg
js
adc
push
repz
add
pop
mov
push
or
cli
cwtl
out
rol
std
outsb
call
cmp
popa
mov
imul
js
sbb
dec
lock
inc
mov
or
add
cmc
pushf
clc
insb
mov
sbb
popa
cmp
stc
cli
xchg
mov
pop
cld
nop
xchg
sbbb
jae
pop
lret
dec
pop
out
ljmp
cmp
call
adc
add
lret
mov
lret
sti
cmpb
out
andb
je
mov
call
movsl
and
or
pop
cltd
adc
stos
aad
in
rol
inc
sbb
push
outsb
dec
rorb
mov
incb
adc
scas
mov
subb
sub
adc
je
add
pop
and
pop
sub
inc
outsl
and
into
cmpl
mov
arpl
push
xor
cld
sbb
aas
mov
or
pop
shll
enter
and
bsf
hlt
stc
outsl
lcall
pusha
jae
pusha
fcomps
mov
dec
shl
pop
shll
cmpl
mov
xchg
arpl
mov
fidivrl
dec
fsubrl
push
add
mov
xchg
xchg
pop
loope
or
pop
cld
mov
jle
cltd
daa
call
push
ret
jbe
lock
enter
inc
inc
scas
xlat
sete
mov
cmp
mov
add
imul
sbb
push
js
hlt
movb
mov
jno
repz
into
or
pop
orb
bound
mov
fmul
mov
dec
xor
xchg
ds
add
lahf
les
mov
or
sbb
fadds
pushf
push
out
jge
jnp
xchg
fsubp
mov
mov
ja
sbb
fmuls
xchg
outsb
sub
jecxz
or
xchg
stos
adc
aaa
dec
leave
imul
in
sub
out
xchg
sbb
imul
aad
jmp
rorl
mov
ss
mov
mov
push
cmp
push
sbb
jae
cmc
int
aaa
idiv
cmp
repnz
addb
lods
mov
data16
mov
mov
cmp
jecxz
or
fcmovu
fnstenv
rorl
cli
and
mov
pop
pushf
jns
pop
and
jmp
ljmp
mov
int
iret
cmpsl
pop
sbb
js
scas
in
sahf
fwait
lods
adc
jb
inc
sarb
sbb
les
movsb
mov
scas
in
push
mov
imul
mov
push
xor
mov
mov
cmp
mov
mul
gs
imul
mov
sbb
mov
in
jg
xchg
shlb
pusha
popa
repz
push
fcom
loop
xor
lock
dec
dec
push
pop
jno
or
inc
shlb
int
xor
aaa
jne
shrl
neg
sbb
push
mov
sub
mov
cmpsl
lds
aaa
shlb
inc
mov
add
sbb
pop
test
xchg
hlt
jno
adc
and
cmp
jae
aad
andl
lret
js
cmp
jge
hlt
test
fwait
in
dec
add
aaa
repz
mov
popf
pop
lcall
frstor
test
icebp
adc
test
jns
mov
lock
dec
cmpsl
mov
ss
iret
bswap
popf
cmpsl
jmp
jnp
popf
adc
movl
cmp
xchg
in
dec
xchg
out
loop
shl
flds
sub
je
rcr
jge
test
pop
daa
int
cmpb
testb
xor
leave
xor
pushl
jg
inc
cmp
roll
cmp
lret
fwait
loop
out
aam
jne
adc
push
lcall
ja
imul
add
mov
inc
push
mov
and
jle
pop
mov
push
iret
aad
cmp
icebp
daa
mov
xchg
pop
fdivrl
push
xor
add
push
mov
mov
push
cmp
add
cmp
sbb
inc
xor
icebp
pop
pop
push
pop
stc
mov
rcll
or
sub
sub
cwtl
or
add
aaa
ss
cmc
push
fidivs
movl
and
sub
orl
or
js
std
iret
je
xchg
rorl
popa
fstl
push
pushf
adc
xchg
mov
mov
ljmp
lret
insw
adc
inc
dec
out
push
lret
dec
stos
dec
mov
dec
scas
shll
mul
dec
push
hlt
in
aam
xchg
lock
mov
xchg
add
pop
repz
insb
shlb
mov
xchg
and
dec
add
inc
mov
dec
fwait
in
add
lret
es
pop
icebp
decl
rorb
movsl
dec
insb
fs
xor
repz
dec
add
addr16
mov
or
rolb
mov
fdivs
es
xor
lcall
loop
leave
negl
into
fildll
lods
movsl
ret
xor
outsb
fdiv
lcall
scas
xlat
mov
in
xchg
repz
fsubs
loopne
in
dec
add
outsb
xor
push
sar
in
jns
stos
jge
inc
push
sub
lea
shrb
mov
mov
pushf
testl
out
les
pop
push
or
add
cmpsb
mov
test
subb
sub
bound
je
sti
push
and
push
mov
jae
adc
pop
jg
movsl
ss
or
fistps
jae
inc
into
cmpsb
mov
sbb
mov
mov
mov
pop
pushl
mov
fs
sbb
arpl
fidivs
out
and
mov
mov
ret
mov
es
in
scas
add
sbb
insl
decl
cmpsl
and
inc
adc
movsl
jno
add
lcall
mov
adc
cmpsb
mov
xor
stos
movhps
in
fnstcw
and
mov
lods
mov
jbe
dec
xchg
ret
cltd
pop
cs
sub
lret
daa
push
aas
fsubs
or
popa
or
and
les
mov
xor
and
pop
data16
mov
pusha
pop
inc
pushf
cltd
pop
jecxz
repnz
lcall
cmp
outsl
decl
push
fidivl
inc
xchg
movsb
or
popa
repz
or
sub
mov
jo
mov
jno
push
jecxz
jecxz
add
mov
cmpsb
inc
inc
inc
notb
pop
dec
ja
adc
mov
pop
mov
aam
mov
mov
push
inc
push
inc
mov
adc
fwait
cmp
cli
outsl
mov
push
adc
cwtl
add
shlb
loop
stc
sbb
mov
sti
pop
mov
xchg
jns
adc
mov
xor
pushf
sbb
das
jo
pop
sahf
cmp
cmp
sti
int
sub
lods
inc
or
inc
aaa
adc
addb
xchg
out
adc
fnstsw
leave
cmp
sub
cs
scas
push
mov
jp
cmp
and
xchg
inc
test
daa
or
jp
mov
push
cmp
xchg
outsb
push
cmpsl
idivl
pop
push
out
lds
xor
mov
add
mov
ljmp
popa
cmp
jnp
sahf
enter
mov
xchg
sub
push
dec
xlat
aam
scas
movsl
sub
enterw
int
xchg
push
lea
xchg
sub
adc
pop
fcomp
nop
adc
stos
sarb
nop
std
xor
rol
jl
scas
mov
or
push
xchg
lods
in
push
inc
leave
mov
mov
push
pop
ds
pop
mov
xor
fstpt
mov
xor
cmpsb
mov
jo
or
gs
jne
xchg
add
mov
push
xchg
push
cli
imul
jp
push
lods
test
adc
dec
fnstcw
jno
mov
fdivl
ja
nop
sbb
bound
es
es
sbb
shl
cmpsb
dec
mov
test
imul
xor
jl
inc
test
loope
pop
movsw
stos
ljmp
js
out
jb
mov
cmc
xchg
and
or
shlb
js
push
mov
jmp
shrl
cmpsl
push
xchg
insb
mov
mov
dec
repz
int3
sarl
mov
in
dec
dec
xor
cmpsb
mov
cwtl
lret
push
xor
cltd
adcb
pop
neg
enter
xor
in
stos
sub
shrl
mov
stc
int3
push
mov
movsl
int3
out
mov
mov
inc
in
jle
mov
aad
push
cmpsl
imul
fwait
je
lds
in
xor
add
mov
icebp
mov
cli
push
je
daa
gs
mov
pushf
jmp
push
subb
xchg
push
test
subb
mov
pop
adc
andl
sbb
pop
daa
dec
aam
dec
mov
mov
flds
adc
xchg
pushf
mov
emms
sbb
mov
data16
xchg
into
sub
xor
jb
cld
cmpsb
pop
fs
loopne
cli
pop
jne
or
fstl
cwtl
jno
sbb
aas
div
dec
inc
jle
movsb
add
pop
sub
clc
mov
loop
loope
mov
sti
adc
test
lahf
jb
ret
add
adc
add
insb
push
pop
imul
outsb
gs
repz
dec
jle
ja
and
or
lods
ss
ds
pop
adc
dec
lea
inc
daa
test
xchg
add
mov
xor
pusha
cmp
lods
out
aas
aad
icebp
lret
std
in
and
sbb
int3
test
cmc
stos
rcrb
cltd
rorl
aaa
sbb
mov
mov
adc
enter
xor
cmp
jae
out
jg
mov
push
mov
int
fidivrs
and
add
jnp
mov
or
push
aas
inc
jmp
or
push
adc
mov
dec
xor
aaa
jne
test
imul
mov
das
sub
mov
addr16
or
stos
cmp
lea
popa
mov
fdivl
add
clc
jge
and
popa
ljmp
cmp
outsl
inc
lea
pop
push
in
cmp
adc
imul
jle
sbb
mov
xor
dec
pop
je
xchg
loop
imul
or
inc
or
mov
test
test
cs
aas
sub
fstl
sub
mov
cmp
test
aam
rcrb
leave
out
sub
cs
or
out
rorl
cltd
mov
movsb
in
clc
pop
mov
dec
xchg
mov
xor
out
or
mov
shrb
test
jl
xor
cmp
mov
dec
or
imul
xor
xor
push
aam
xorb
fildll
sbb
ja
icebp
cltd
fwait
data16
ret
dec
xchg
jbe
faddp
lret
mov
push
movsl
fcmovne
mov
rorb
cmp
pop
cltd
sbb
cwtl
xor
pop
aam
sub
inc
xchg
push
mov
and
mov
daa
pop
pop
leave
sbb
xor
pop
jge
jae
sub
dec
push
std
sbb
stos
push
pop
inc
dec
les
ja
mov
icebp
adc
cmp
inc
and
cmp
lods
or
xlat
and
add
aad
pop
mov
sbb
jo
sbb
out
xor
nop
in
sbb
jno
pop
xor
fldl
fs
in
lcall
pusha
mov
adc
or
and
sub
xor
mov
cmpb
movsb
inc
aaa
add
dec
pop
aaa
sub
test
int3
pop
incb
rorl
jno
cmp
mov
inc
cmp
push
jle
push
push
loope
sub
push
mov
lods
or
out
shll
sbb
add
fldt
mov
jbe
hlt
push
pushf
and
or
jmp
xchg
nop
pusha
dec
fmull
sub
ret
imul
mov
or
mov
cmp
mov
inc
cmpsb
jnp
cld
xor
inc
mov
insl
mov
add
or
push
mov
sbb
dec
jmp
lret
dec
adcb
inc
xor
sub
xchg
inc
mov
stos
add
jno
jp
aam
add
xor
pop
inc
sub
ljmp
ret
enter
cmp
add
sti
sub
mov
repz
mov
pop
sahf
jmp
dec
shll
aas
push
rorl
mov
sbb
cmp
mov
add
mov
or
fwait
bswap
fstps
jae
inc
jnp
bound
mov
mov
jecxz
hlt
ret
and
leave
jo
rcrb
ffree
stos
add
mov
out
cmp
repnz
jg
mov
mov
sub
mov
jmp
pop
and
cmp
lods
jbe
in
adc
inc
adc
nop
aas
and
popa
jo
inc
push
xor
adc
inc
ficoml
xchg
xchg
andl
into
fimuls
sbb
push
test
jns
leave
cld
cmp
cltd
dec
les
or
out
mov
mov
sbbl
cltd
subb
enter
gs
leave
cwtl
mov
or
jmp
pop
movsb
lcall
xlat
sub
push
daa
faddl
andb
stos
push
inc
jmp
cwtl
std
mov
enter
pop
mov
inc
jge
jp
add
aad
test
lret
sub
fistpl
dec
mov
iret
int3
push
sbb
in
in
push
sub
clc
lcall
inc
push
fs
loop
add
jbe
cmp
pusha
add
mov
cmpsb
movsl
test
mov
gs
mov
fisubl
mov
or
into
movsl
call
fildl
sub
xor
mov
fs
xchg
mov
into
and
mov
inc
movb
fisubs
adc
aaa
sbb
mov
rcl
rclb
lret
repz
jae
sub
xor
outsl
divl
xchg
icebp
mov
aad
add
lods
sbb
jns
data16
cltd
pop
jl
mov
pop
repnz
lret
or
lahf
outsb
push
sbb
ret
sub
pop
cld
or
or
repz
popl
packsswb
inc
mov
or
and
push
fadd
push
push
fs
sbb
inc
add
addr16
stc
out
or
sar
jne
cmpsl
ficompl
push
lds
dec
lods
iret
sbb
pop
push
xchg
data16
stos
mov
shll
dec
incl
mov
js
pusha
stos
push
aas
js
sbb
js
jp
fmull
loope
and
rolb
in
stos
dec
lods
cmp
into
pusha
mov
xor
dec
inc
loope
sub
fxch
push
nop
xchg
xchg
add
test
jno
pop
decl
sub
dec
or
repz
cs
and
popa
cwtl
sub
sbb
shlb
sub
dec
xor
call
push
jmp
lods
mov
adc
add
test
fcos
mov
jno
stc
out
xchg
xlat
xor
loope
ret
mov
xchg
mov
cmp
xchg
addr16
out
cmc
jne
xor
push
jo,pt
arpl
out
imul
lock
dec
orl
iret
jmp
cmpsl
clc
cmp
sub
mov
mov
arpl
fisubl
in
push
lock
sbb
dec
mov
push
jns
dec
leave
inc
cwtl
jnp
and
daa
cmp
aas
rolb
icebp
and
movsl
inc
lods
mov
sub
add
mov
mov
jge
hlt
mov
mov
sbbl
sarl
push
test
push
jo
scas
pop
sbb
sbb
push
mov
ja
xor
imulb
popl
rolb
adc
push
incb
cmpsl
inc
push
mov
xchg
mov
hlt
mov
and
ljmp
in
mov
mov
fdivs
sub
push
jg
out
andb
test
xor
adc
pop
stos
jg
sub
lcall
out
lret
adc
je
cmp
sub
es
mov
je
xchg
adc
xor
fidivrs
inc
movb
ds
aaa
mov
insl
cmc
ret
loope
popa
lods
pushf
rcrb
aam
sbbb
call
je
mov
xchg
pop
sub
xchg
jmp
mov
rcl
lcall
hlt
mov
adc
outsb
aaa
inc
scas
or
in
testb
movl
pop
adc
ja
int
gs
push
icebp
ret
pop
es
xchg
divb
jbe
fidivs
sbb
rcr
aaa
cld
enter
add
mov
pop
xchg
mov
dec
lods
pushf
sarb
bound
add
mov
pop
xlat
dec
fstpt
jmp
cmp
in
test
xchg
loope
sbb
add
dec
in
icebp
mov
ss
pushf
test
sub
jns
dec
cli
ror
add
or
aas
mov
lods
inc
pop
mov
xor
xchg
mov
std
repnz
sbb
insb
sbb
clc
and
out
mov
xor
cmc
mov
mov
inc
pusha
pop
dec
mov
fidivl
es
jge
and
test
inc
inc
dec
aam
pop
pop
imul
and
int3
cs
push
cmp
add
fld
data16
xchg
cmp
sub
pop
sub
insl
inc
mov
cmpsl
pop
nop
xchg
je
mov
xor
dec
lret
enter
sub
es
hlt
mov
jg
jge
mov
leave
insb
mov
ljmp
cld
cmp
iret
mov
cmp
sarb
fildll
xor
xchg
inc
test
xor
inc
outsl
xchg
cvttps2pi
cmp
mov
push
add
loopne
adc
push
fldcw
mov
and
popa
jmp
inc
and
mov
sbbl
ja
ret
pop
je
adc
jp
js
mov
scas
sub
cmp
mov
nop
ret
sti
aas
dec
mov
in
push
sbbl
dec
aas
jbe
std
bound
out
stos
or
or
xor
dec
insb
sub
dec
push
imul
push
jne
in
adc
mov
xchg
and
jnp
xor
fmulp
iret
mov
mov
mov
mov
jne
inc
xlat
ss
cwtl
cmpsb
cmpb
call
imul
fsubl
mov
test
mov
pop
push
cmpsb
loopne
adc
push
push
sbb
stc
fcomip
push
push
or
pop
inc
xchg
lret
pop
push
into
sub
bound
decl
xchg
cmp
mov
or
daa
int
mov
mov
hlt
repz
xor
notb
sub
adc
xchg
mov
jne
xlat
popa
adc
aam
jnp
lahf
test
lahf
fdivs
xchg
inc
pop
aam
out
insb
loope
mov
push
cmp
nop
inc
or
xchg
mov
cmp
mov
repnz
push
jge
mov
sub
and
push
mov
mov
and
mov
ret
xchg
lret
lods
inc
and
imul
js
push
sbb
repz
ja
leave
xor
js
nop
decb
dec
test
jle
xor
or
fldt
clc
in
shll
aad
popf
clc
xchg
mov
and
xor
call
sub
out
pusha
sub
movsl
outsl
fdivrp
and
push
xchg
mov
cltd
fidivs
push
loope
mov
ds
cmc
push
inc
das
notl
pop
push
mov
lds
mov
and
inc
xchg
push
dec
repnz
mov
xchg
inc
loop
imul
stos
enter
adc
aad
fdivrl
xor
fldenv
inc
cmp
loop
fistpl
xor
insb
stos
adc
xor
add
sub
adc
hlt
xchg
ret
loope
int3
mov
in
mov
mov
mov
dec
ret
mov
rep
lcall
sub
popl
lret
mov
data16
push
push
fcoms
lods
jg
push
cmp
sbb
dec
ja
adc
mov
mov
cmpw
inc
mov
loop
mov
mov
iret
lods
xchg
push
std
bound
and
ret
cmpsl
push
push
jnp
push
and
shrl
dec
shrb
or
push
call
adc
aas
pop
sbb
jecxz
sub
sub
lret
xchg
add
pop
sti
clc
repz
stos
push
dec
adc
dec
mov
ja
mov
inc
idivb
mov
arpl
fwait
pusha
cmp
dec
out
jbe
cld
inc
lock
push
mov
pop
pop
cwtl
mov
inc
push
leave
repz
push
mov
shll
cmp
add
lret
outsl
push
jp
push
scas
xor
scas
push
out
gs
xor
push
cli
add
mov
push
lret
rclb
je
pop
in
ds
xchg
ds
ja
mov
es
jecxz
mov
js
xchg
add
inc
push
add
mov
or
out
cwtl
push
mov
pop
sub
shlb
fsub
inc
mov
mov
aas
mov
mov
mov
lret
mov
sbb
xchg
sti
bnd
mov
jbe
cmp
andl
mov
push
jp
fdivrl
mov
xchg
push
sub
imul
nop
testb
inc
lahf
jg
dec
sar
dec
xlat
push
addr16
and
loope
fidivl
mov
xchg
sbb
push
add
mov
pop
loope
mov
loope
movsl
cmp
mov
in
ficoms
mov
push
ja
out
adc
fiaddl
pusha
xchg
mov
push
outsl
das
shlb
add
add
push
adc
sbb
pop
mov
fwait
inc
repnz
sbb
jo
dec
cli
jecxz
ss
mov
mov
lret
mov
mov
movb
sbb
sbb
sbbl
add
dec
ljmp
mov
clc
lea
sub
leave
add
arpl
jns
or
xor
loopne
ja
jne
fwait
cmp
adc
or
rcl
cmp
outsl
lret
xor
mov
or
cmpsl
push
push
push
testb
dec
aas
pop
dec
hlt
cmp
adc
push
lods
or
xor
pop
insb
push
test
pop
div
pop
shrl
cmp
in
enter
jb
fcoms
fcmovb
push
pop
cwtl
jno
scas
and
cmp
mov
and
dec
jg
icebp
inc
inc
cmc
jns
cltd
push
and
ds
jge
mov
in
repnz
ja
inc
xor
push
sbb
cltd
les
arpl
clc
inc
mov
jne
sbb
cltd
sub
jle
cmp
mov
mov
addl
and
cltd
inc
push
fistps
xor
mov
xchg
out
xor
jbe
fwait
cmp
jbe
sub
subb
jno
pusha
cs
movsl
xchg
scas
cs
pop
les
push
cmp
lret
out
mov
or
jb
out
or
sbb
push
lahf
mov
xchg
fs
cld
les
nop
lock
cmp
test
adc
shlb
fs
lcall
stos
push
inc
push
inc
cmpb
jl
loopne
movb
xchg
mov
out
sub
ljmp
bound
mov
or
sahf
or
sub
cli
bound
out
jnp
iret
shlb
clc
dec
pushf
jecxz
push
aas
sbb
cltd
lret
in
and
jo
enter
sub
pop
and
and
mov
bound
lcall
and
mov
cmp
subb
mov
cmc
int3
dec
sbb
dec
jmp
movsb
out
in
loope
sub
and
fsubrl
jp
shlb
xchg
inc
push
movsl
or
insl
mov
sbb
jecxz
pop
xlat
pusha
or
jmp
add
adc
ds
add
sub
sbb
ds
pop
pop
jns
enter
scas
mov
andl
rclb
push
lea
inc
sub
ficomps
pop
lcall
push
call
shll
push
mov
loopne
add
xchg
mov
sbb
scas
rolb
mov
xlat
test
inc
pop
sub
outsb
pop
and
sub
frstor
sbb
mov
cmpsb
mov
scas
xchg
pop
jo
jp
subb
xchg
xchg
mov
test
cmpsb
jecxz
mov
in
push
or
cli
jnp
adc
lret
mov
push
jnp
push
andl
push
div
dec
inc
push
xlat
insb
pusha
es
jbe
xor
mov
xchg
aam
cmpsl
out
int3
sahf
repnz
and
push
loopne
mov
mov
dec
mov
daa
pop
push
aam
xchg
movsl
or
pop
mov
imul
mov
mov
bound
cld
or
push
xor
outsl
int
xor
mov
mov
mov
lods
mov
ret
bound
pop
inc
test
push
insb
jne
dec
dec
mov
mov
ss
xor
and
lods
inc
in
clc
jo
idivb
test
cmc
js
mov
mulb
sbb
jge
xchg
test
sahf
push
ljmp
stc
jnp
push
hlt
mov
xchg
and
inc
add
repnz
aaa
xor
xchg
cld
test
cmp
mov
add
push
cmp
cld
xchg
roll
fwait
mov
push
add
dec
sbb
sub
inc
mov
jp
inc
mov
addr16
mov
addl
xor
push
cld
in
mov
fisttps
jns
mov
loopne
lods
pop
jns
cmc
and
mov
and
test
xchg
push
lret
cmp
lds
stc
dec
jb
imul
or
shll
shl
out
repz
mov
xor
fbld
shll
pushf
mov
ret
sbb
loope
pop
sbb
jns
adc
daa
imul
sub
hlt
inc
in
enter
fwait
imull
idiv
daa
outsb
dec
cmp
cmc
movsl
arpl
push
ret
sub
cmp
imul
outsb
or
outsb
fstpl
xchg
inc
adcl
lods
lock
shl
mov
jg
jmp
ds
mov
stos
iret
push
cli
faddp
lea
dec
aas
pop
rorb
ds
xchg
rorl
lahf
push
xor
push
push
jb
push
xlat
pop
and
xchg
imul
into
sub
insb
xchg
xor
push
mov
stc
insl
pop
cli
scas
push
add
inc
or
shr
cli
push
xor
test
jae
stc
push
add
int
in
test
cmpsl
mov
adc
test
push
cmp
cli
test
inc
out
in
movsb
xor
clc
psllq
xor
or
adc
push
dec
jl
aad
sub
mov
repnz
fisubl
inc
aam
cmp
aad
sub
cmc
cltd
addr16
lods
add
test
fildl
cltd
push
pop
ss
addb
xchg
shll
sub
sbb
dec
popf
jl
xchg
andl
sub
movsl
fstpl
sahf
enter
addb
xlat
pusha
dec
dec
rcll
leave
out
add
dec
popa
mov
aad
mov
sub
rcrb
push
fnstenv
pop
adc
mov
repnz
dec
ffree
push
sub
inc
push
and
push
popf
lods
and
mov
hlt
dec
or
nop
push
jb
dec
jns
pusha
pop
lds
sub
mov
cs
pop
push
pop
dec
pop
outsb
out
mov
sbb
push
mov
jno
push
pop
clc
push
sbb
mov
out
mov
gs
or
notb
aad
test
popa
rorl
fadd
jbe
adc
mov
ss
mov
mov
inc
addr16
and
adc
shrl
sbb
cli
loopne
cltd
loop
add
cmp
bswap
jns
enter
dec
mov
pusha
xchg
sbb
jbe
sbb
inc
pushf
pop
mov
sbb
jns
fcoms
lcall
dec
or
in
into
sbb
popa
call
adc
xor
stc
add
add
xor
cmp
dec
xchg
cmpsb
outsb
es
fildl
sahf
sarb
add
sub
fstl
add
jae
and
mov
pop
push
lret
ja
cli
xchg
mov
xchg
cmpsb
dec
adc
std
jge
adc
push
stos
inc
jge
in
scas
stos
fcos
ret
mov
xchg
jl
and
cmp
loopne
sub
xor
in
and
sarl
dec
sub
xlat
jns
loope
jae
fsts
jg
shll
call
dec
loopne
or
aad
imul
movsb
add
psrlw
je
lods
xor
popf
mov
out
popa
bound
cmp
jg
sub
add
jl
dec
inc
idivb
mull
jl
jge
lods
mov
aad
jecxz
mov
test
fmuls
outsb
cmp
sub
in
mov
cmp
into
inc
es
sbb
inc
xchg
pushf
ret
fcoml
out
jmp
stos
sub
imul
mov
js
jns
gs
icebp
scas
mov
je
scas
es
mov
movsl
repz
ljmp
xor
mov
call
sbb
les
xor
dec
add
adc
cmpsl
test
and
mov
xchg
xchg
mov
inc
lret
pop
push
mov
stc
dec
call
scas
push
inc
pop
jg
and
jno
jae
inc
mov
add
jae
loope
shrl
test
fstl
mov
sbbl
out
and
lock
push
push
fisttpll
sti
ds
inc
in
ljmp
or
pop
int
jle
xor
mov
inc
sub
xchg
mov
imul
pop
pop
arpl
sbb
cmp
fwait
jo
popf
lret
mov
mov
push
add
or
push
fcmovne
pop
pop
adc
int
and
push
inc
sarl
stos
int
roll
test
xlat
aas
das
je
xor
xchg
cmp
movsb
gs
out
sbb
add
add
in
lret
outsb
sbb
rolb
mov
pop
shl
clc
cwtl
aas
lcall
scas
dec
sbb
push
cmp
mov
movsb
push
rcr
cmp
xlat
xchg
mov
cmp
sahf
mov
add
push
adc
add
add
sbb
dec
scas
mov
jo
aas
or
loopne
jl
ret
sbb
or
ret
call
fistpll
jno
xor
popa
mov
pushf
std
mov
inc
aam
notl
shrl
xor
cs
test
sub
mov
into
jb
pop
rcll
in
mov
sbb
test
pop
xchg
in
jmp
scas
push
test
xor
jbe
inc
xchg
pop
sub
lcall
or
leave
in
cmp
sub
pop
test
push
cmp
and
mov
iret
cli
ljmp
retw
or
mov
nop
push
jp
add
sbb
add
test
cmpb
jo
xor
jae
in
xchg
inc
stc
loope
ret
and
jp
hlt
ret
out
push
cld
sbb
nop
inc
not
clc
and
inc
fwait
leave
data16
dec
jne
mov
or
cmp
inc
add
in
aas
rol
repnz
mov
call
sub
mov
cmc
xchg
adc
jbe
dec
dec
imul
mov
cmp
push
icebp
add
add
clc
lock
fs
imul
ss
into
xor
dec
cmp
sub
inc
dec
cmp
dec
and
cltd
jno
in
bound
loope
push
cmpsl
cmp
mov
pop
cmp
inc
fildl
mov
pop
mov
or
cmp
lods
adc
cmp
cmpsl
xor
cmc
test
or
popa
dec
jecxz
mov
xlat
xor
mov
mov
cmp
ret
sub
das
and
jo
sahf
std
cmp
mov
jmp
mov
or
outsl
sub
fisubrs
pop
aaa
loope
and
and
clc
xchg
push
jno
and
cld
test
out
das
aam
inc
cmpb
pushf
stc
xor
adc
ret
and
sbb
aas
pop
std
sub
add
xchg
rcrl
out
out
pop
ja
adc
push
int3
sub
das
lcall
push
mov
adc
mov
jo
mov
add
pop
adc
push
inc
lret
std
lock
jg
push
fsub
xchg
add
mov
notb
mov
sti
vmaxsd
data16
or
or
addr16
hlt
xlat
movsl
leave
jae
mov
fstl
repnz
xor
fsubs
testb
call
push
inc
enter
jnp
lds
dec
pop
inc
or
inc
fcmove
pop
mov
dec
ljmp
sub
iret
ret
xor
sbbl
orl
leave
adcl
push
sti
iret
ret
inc
jbe
fwait
pop
dec
in
imul
repz
addr16
lcall
inc
pop
mov
sti
and
mov
push
in
xchg
bound
imul
jl
gs
push
adc
mov
incl
addl
jmp
sarb
ret
sub
icebp
sbb
jge
inc
out
sbb
lea
mov
fs
inc
pop
shll
fsubrl
pop
mov
push
sbb
inc
insl
out
mov
fwait
pop
cmp
xor
xor
sub
push
clc
test
sub
xchg
popf
push
shlb
sbb
das
es
out
sahf
sbb
and
ss
xor
pushaw
data16
dec
xchg
sahf
fwait
cmp
sbb
mov
fwait
insb
push
sub
shll
leave
ljmp
stos
cli
adc
push
ljmp
test
sahf
pop
cmp
call
mov
jo
or
inc
push
int3
add
add
xchg
ss
int
dec
jns
jle
imul
sti
xor
outsb
cmp
loop
fstpl
out
lods
in
fs
jbe
popf
inc
jb
sbb
movsb
mov
mov
subb
outsb
loop
sbb
test
cmp
sahf
out
adc
das
sbb
daa
mov
cmc
lea
cmp
add
dec
xor
jge
sbb
pushf
mov
sbb
sub
movsl
repnz
test
pop
ret
lret
sbb
pop
and
mov
push
dec
push
push
xchg
or
popa
inc
int3
dec
pop
jg
and
sub
sbb
pushf
scas
xchg
inc
sbb
mov
cmp
inc
push
jns
std
call
xorb
jae
loopne
shr
icebp
push
arpl
adcb
test
mov
xbegin
or
sbb
add
fs
subl
push
xchg
xor
xchg
gs
jo
lea
jg
arpl
xor
rcr
movsl
add
daa
or
call
push
test
push
pop
clc
pop
in
call
fsubs
push
xor
dec
add
fstpl
repz
loopne
sbb
shll
or
int
mov
dec
ds
xchg
sbb
gs
xor
xchg
cmc
lea
push
test
aam
inc
mov
cwtl
cmp
mov
jge
adc
sbb
imul
and
xchg
jp
and
pop
and
sub
add
add
mov
sub
mov
jmp
cmc
aas
iret
dec
test
adc
jge
lcall
add
dec
stos
mov
pop
xlat
repnz
xchg
mov
sub
push
inc
xchg
loopne
sbbl
lock
fcmovnb
mov
lds
scas
mov
add
aam
test
push
add
rcl
ja
imul
ljmp
dec
pop
insb
in
adcb
lcall
fwait
imull
mov
dec
data16
aam
sub
mov
test
cmpsb
cmc
mov
es
sti
fnstenv
or
push
mulb
in
dec
std
mov
subl
test
dec
jmp
shll
gs
xchg
sub
gs
std
or
jle
add
sub
sarl
inc
andb
arpl
mov
xlat
aaa
push
xor
ja
push
aad
andb
or
xchg
dec
pop
jmp
push
aam
mov
dec
stc
stc
dec
lods
sub
pop
xchg
test
mov
sbb
and
dec
movsb
mov
lret
add
jnp
add
into
in
push
add
enter
pop
pop
insb
outsb
push
cmpb
and
sub
imul
cmpl
cmpsb
and
movsl
loop
faddl
aas
jns
lods
scas
int3
pop
inc
scas
push
clc
and
mov
addr16
fcoms
add
nop
push
mov
rorb
ret
fiadds
lahf
push
inc
cmp
adc
adc
inc
mov
cltd
int3
test
mov
push
out
cmp
insl
mov
xchg
cwtl
xchg
mov
roll
mov
or
mov
push
ds
movsb
mov
pop
and
shl
ret
arpl
loope
cltd
jo
test
cmp
mov
movsl
or
mov
xchg
inc
clc
cmp
dec
mov
mov
inc
push
out
push
inc
es
aad
movsb
stos
fs
adc
or
inc
call
shll
mov
sub
fs
and
mov
mov
cmpsb
mov
cmp
cmp
cmpsb
mov
rorl
mov
stos
mov
rcrb
pop
out
dec
mov
mov
cmp
outsb
insl
sbb
mov
sbb
cwtl
xor
ja
and
push
outsb
jns
mov
push
jge
jne
mov
cmpsb
or
insb
jmp
adc
mov
push
mov
loop
push
sbb
or
sbb
xchg
sti
push
pop
jno
xchg
pop
adc
adc
xor
mov
mov
test
or
data16
jle
dec
push
fstp
push
pop
out
out
fisubrs
bound
mov
sahf
xchg
sub
in
ret
lea
and
mov
clc
mov
and
mov
inc
fcomps
or
push
jns
inc
lea
mov
sbb
dec
push
sub
dec
call
jb
ja
cmpsl
call
jl
movl
inc
pop
std
mov
fstpl
out
hlt
out
and
sbb
fisubl
icebp
pop
out
xchg
fsubs
aaa
mov
mov
push
popf
inc
adc
shl
push
rep
stc
xor
repz
lcall
inc
push
dec
lea
sub
inc
mov
and
gs
fcoml
dec
mov
sbb
jmp
mov
or
js
mov
fadds
sub
sbb
je
mov
ret
xchg
shlb
cltd
adc
insl
in
push
mov
push
adc
sbb
iret
mov
inc
xchg
xor
and
dec
mov
pop
dec
cld
outsb
and
xor
jecxz
aaa
in
mov
cli
xor
js
cli
xchg
cmc
add
gs
movsb
add
jb
mov
sbb
std
jmp
push
pushf
sar
popa
aam
push
inc
scas
push
call
and
sub
ficoms
loop
les
les
call
test
cmp
call
sbb
in
sub
stos
dec
mov
hlt
add
cmpl
test
mov
xor
into
push
cmp
jmp
sbb
fbstp
test
cli
lcall
or
dec
pop
bound
out
pop
jb
loope
or
cltd
inc
cmp
fcomip
imull
or
icebp
int3
jae
rclb
ss
jmp
add
dec
in
mov
mov
or
jmp
jnp
stc
xchg
sub
test
stos
mov
sti
rcll
repz
aaa
mov
pop
addr16
sub
mov
in
push
jno
xor
xchg
sbb
xor
pop
inc
push
std
push
dec
xchg
push
in
mov
xchg
jno
pop
xor
pop
jae
inc
lret
les
and
jge
sti
sub
cmc
sub
add
sbb
and
call
add
sti
push
loop
loope
int
cmpsb
mov
aaa
out
jno
icebp
fnsave
push
aam
popa
stos
cwtl
into
aam
push
and
adc
dec
push
push
inc
mov
enter
jbe
loop
or
xchg
gs
cli
arpl
fisttpl
inc
imul
ret
sbb
imul
and
xchg
sbb
test
mov
enter
mov
push
rorb
fdivs
scas
push
rolb
test
arpl
mov
add
and
int3
inc
aad
push
pop
push
fistl
jae
mov
lahf
xchg
add
scas
sub
or
insl
cmp
add
mov
stos
loopne
and
and
mov
xor
add
imul
fisubrl
mov
lods
cli
inc
sbbl
push
loope
lcall
fcmove
or
push
or
jecxz
sbb
popa
ja
fildl
ret
mov
add
es
sbb
push
and
push
pop
and
lock
jb
mov
dec
cmp
push
test
ret
sar
insl
fcoms
mov
scas
or
in
jnp
ret
pop
sbb
and
mov
mov
fs
sbb
mov
push
fdiv
test
cltd
cmp
xchg
jo
lock
icebp
xor
or
and
sbb
rcll
popa
and
scas
stos
dec
mov
xlat
inc
push
push
inc
out
scas
push
sbb
cmpsl
aaa
and
or
sub
fimull
jnp
add
lds
mov
push
les
pushf
into
xorb
sub
jb
xchg
xchg
movsl
sbb
and
push
mov
cmp
and
mov
mov
lahf
je
in
pop
xor
push
sbb
daa
and
mov
mov
sbb
jl
pop
and
lea
es
jno
js
xor
mov
mov
jmp
sub
push
sub
ret
jno
shll
arpl
rep
outsb
sub
in
fpatan
es
dec
push
pop
mov
xchg
in
lods
cmp
ret
js
cmp
jle
xchg
cmp
mov
or
mov
test
gs
ljmp
mov
aaa
loope
push
cmpsl
cmp
movsl
mov
mov
xchg
cmp
insl
insl
or
js
adc
loopne
mov
mov
in
dec
inc
sbb
lcall
lret
aaa
sub
sbbl
roll
inc
int
in
pop
imul
jge
aas
ljmp
jge
mov
cmp
mull
shll
or
nop
sub
sbb
sbb
xacquire
xor
cmpsb
outsb
sub
mov
xchg
xchg
inc
fimull
pop
out
pop
sub
sub
add
mov
call
adc
fsts
in
add
add
push
add
mov
ljmp
or
jbe
jg
jno
mov
push
addr16
adc
in
lock
and
and
jae,pn
lea
inc
jb
imul
mov
ds
push
mov
mov
idivl
jb
push
mov
mov
cmpsb
dec
adcl
mov
sti
jo
mov
movsb
mov
add
sub
fucomi
cwtl
mov
imulb
or
mov
mov
xchg
loope
repnz
lret
dec
inc
cmp
mov
jne
cli
out
repnz
imul
js
push
subl
clc
and
dec
pop
and
push
subb
add
ret
repnz
jg
push
in
push
jnp
mov
jbe
adc
dec
fsubrl
sbb
xbegin
lret
stc
test
test
test
mov
es
roll
icebp
icebp
mov
sbb
cld
jae
dec
xchg
sub
mov
test
push
sub
xorl
add
and
dec
fst
and
out
pushl
mov
xor
mov
js
test
dec
lahf
sahf
pop
aaa
shll
test
or
mov
cmp
fidivrl
fstps
into
clc
cwtl
fcoml
ret
int
dec
jp
movsl
dec
pop
mov
or
jl
and
rorb
xlat
add
mov
push
and
fwait
in
cs
pop
gs
in
js
in
push
push
xchg
mov
in
popaw
cmp
push
mov
int3
mov
jo
or
push
xchg
lcall
subl
wbinvd
adc
add
xchg
sarb
or
loopne
pop
add
jl
sahf
fidivrl
popf
xchg
into
into
hlt
ret
outsl
xchg
jecxz
jp
mov
loopne
push
mov
fsubr
and
mov
xor
xchg
sbb
xchg
and
sbb
push
xor
jae
pushf
fwait
add
add
js
rclb
mov
loopne
push
mov
mul
aam
adc
inc
aam
jecxz
fdiv
ds
arpl
push
adc
aad
loope
mov
shrb
inc
fdivr
enter
pop
mov
lret
pushf
dec
sub
call
pop
mov
hlt
push
pop
jbe
add
dec
inc
jmp
xor
and
ret
sahf
or
add
xor
fmull
popa
or
inc
cmp
mov
pop
xchg
sbbl
mov
adc
xor
popf
testl
scas
mov
sbb
mov
mov
pop
sbb
roll
xchg
ret
sbb
sub
xchg
arpl
mov
mov
inc
ret
inc
sbb
daa
mov
stos
scas
jmp
in
movsl
adc
cmp
enter
pop
pushf
mov
in
dec
outsb
jp
jns
imull
jbe
pop
add
xor
sti
and
lret
sub
sbb
push
sahf
pop
loope
adc
cmc
dec
jecxz
mov
movsl
inc
sub
inc
mov
les
cmp
cld
inc
out
mov
cmp
jge
adc
enter
push
jae
cmp
les
aas
lods
or
dec
imul
sti
movsb
mov
jecxz
ret
daa
int3
mov
lock
lret
xchg
push
cmc
ficompl
push
push
out
mov
imul
cmc
dec
mov
addl
push
iret
jo
stos
adc
push
xor
cmp
cmc
jne
daa
mov
mov
sub
aas
clts
sbb
es
add
sahf
mov
mov
lods
mov
es
insb
sbb
pop
js
xchg
adc
in
dec
xchg
bound
daa
jecxz
sahf
or
cmp
fmull
lea
sub
jns
bound
mov
lcall
xchg
mov
push
mov
in
jb
pop
push
adc
dec
pop
sbb
test
fwait
cmp
mov
out
dec
lahf
movsb
xor
mov
mov
ljmp
daa
sti
push
and
inc
sbb
cltd
cmp
test
mov
ljmp
scas
xor
aad
sbb
outsl
cmp
leave
aas
lahf
je
ja
or
or
lcall
inc
sahf
sti
jp
sahf
xlat
pusha
jecxz
fimuls
push
andl
cmc
inc
jl
in
dec
xchg
add
cmp
stos
cmp
cmp
push
jecxz
cli
popa
arpl
or
lret
lds
inc
popa
inc
xlat
dec
inc
or
or
daa
inc
int
into
xchg
cmp
sahf
lds
and
and
pop
jle
jp
dec
xlat
jecxz
and
test
adc
int
and
and
inc
loope
ret
adc
or
jae
pop
sbb
aaa
dec
jnp
jns
test
mov
jne
mov
mov
lods
adc
int
addr16
enter
scas
mov
int
cmp
fadds
xchg
jg
inc
adc
movsl
add
jecxz
out
sub
lods
es
jb
in
into
stos
out
mov
jle
popa
push
rcll
xor
jae
mov
pusha
mov
mov
cmc
enter
enter
xchg
mov
jmp
outsb
pop
mov
std
ja,pt
cmpsl
inc
push
inc
xor
flds
scas
push
je
or
pop
mov
or
or
sub
or
inc
jno
js
inc
xchg
push
hlt
lds
es
mov
inc
mov
in
ds
arpl
mov
fnstenv
add
mov
aad
push
cmp
xor
pop
stos
dec
push
dec
aam
pop
add
inc
popa
mov
sub
push
xor
icebp
jg
or
sbb
fwait
mov
xor
adc
aaa
ret
pop
imul
dec
adc
fnstenv
pop
xchg
mov
mov
pop
push
pop
pop
ja
arpl
push
dec
push
scas
pushf
cmp
mov
sbb
jne
faddp
sub
sahf
mov
xorb
lea
sbb
andl
jae
mov
subb
add
sub
xor
jl
in
cmp
dec
cld
inc
jno
fimuls
shlb
jecxz
xchg
lds
dec
or
sub
in
xchg
jns
mov
xchg
pop
int3
out
or
stos
iret
mov
arpl
fs
je
lcall
dec
shll
stc
cmpsb
pushf
mov
jl
mov
xchg
xor
das
cltd
and
sti
cmp
repz
sbb
cli
movsb
roll
jle
or
jbe
aaa
or
sbb
hlt
imul
clc
aam
dec
lods
mov
xor
lods
jno
xorb
jmp
jns
push
lret
push
ds
or
inc
or
xchg
jecxz
push
xchg
jno
pushf
arpl
mov
fldcw
xchg
push
fstl
dec
mov
fsub
pop
sub
and
test
mov
jl
inc
mov
push
jns
xchg
add
int3
repz
xchg
add
aam
inc
xor
sub
mov
in
pop
sbb
in
popf
mov
dec
cwtl
fnsave
push
pop
out
ror
je
jo
pop
mov
and
xor
ds
dec
xchg
mov
out
insb
adcl
xchg
fsubs
shll
or
and
push
in
into
sub
rolb
or
adc
in
or
bnd
out
out
sbb
add
mov
inc
jo
xchg
xor
push
xor
push
pop
out
iret
jnp
add
imul
adc
cmp
fcmovu
sbb
inc
ljmp
outsb
not
and
pop
push
lock
mov
fldenv
clc
pushf
xchg
mov
in
fsubl
repnz
arpl
lret
mov
mov
fnstcw
adc
mov
fistpll
jmp
mov
jge
adc
pushf
push
mov
push
push
into
rcrb
out
sub
hlt
les
dec
xor
loop
jg
jb
pop
jp
push
int
sbb
and
cmp
les
scas
dec
jecxz
ja
mov
subb
sbb
insl
cmp
insb
aad
xor
xchg
cli
dec
mov
shr
push
jae
jnp
cmp
xor
les
mov
sbb
ja
repnz
and
mov
scas
mov
mov
lret
add
enter
icebp
dec
iret
jg
xor
add
xchg
add
mov
dec
cmc
or
shrl
jo
inc
leave
aaa
sbb
movb
mov
test
dec
dec
loopne
dec
aas
sbb
es
fistps
cmp
not
iret
daa
push
xor
sahf
mov
outsl
push
add
notl
insl
push
sub
data16
dec
inc
sub
sub
xchg
or
outsl
xchg
adc
jns
cmp
aaa
outsb
cmpsb
out
mov
fisubrs
inc
jp
cmp
xlat
push
test
clc
jnp
popf
push
lea
and
hlt
ret
inc
adc
daa
sub
sbb
lds
or
push
mov
fcompl
jecxz
adc
outsb
adc
mov
push
jae
addr16
mov
pop
mov
test
addl
or
leave
xchg
cld
into
sub
gs
or
cs
aam
jp
xchg
test
imul
xlat
mov
mov
enter
adc
add
or
out
inc
dec
mov
or
out
pop
outsl
jp
sub
adc
pop
ret
ret
adc
xor
add
adc
test
or
bswap
or
aas
inc
mov
mov
xchg
lock
out
xchg
adc
mov
or
add
or
cltd
cmp
mov
xchg
adc
insb
and
inc
leave
cld
and
cmpsl
push
clc
pop
add
xchg
test
cmp
inc
or
ljmp
enter
mov
in
mov
jg
jne
mov
pop
fmul
lods
rcrl
mov
or
push
push
jecxz
adc
adc
push
lock
sub
mov
mov
sub
jns
jl
mov
fnstcw
inc
mov
lea
mov
sahf
cmc
inc
test
les
es
loop
sbb
jo
xchg
push
pop
dec
mov
test
xchg
xor
sbb
popf
mov
push
jo
xor
ja
add
fwait
xor
outsl
mov
and
adc
cmp
and
sbb
and
daa
fisubrl
and
xor
pop
ja
mov
sbb
dec
loope
add
bound
sub
mov
dec
push
mov
sbb
inc
jns
dec
push
das
push
imul
imul
inc
nop
adc
inc
jmp
push
xchg
mov
jecxz
sub
and
inc
push
push
fsubs
add
cwtl
adc
nop
jle
xor
pop
dec
clc
lret
aaa
mov
shll
adc
nop
daa
and
movl
bound
xor
mov
xor
mov
xor
push
or
xchg
cltd
xor
mov
incl
mov
or
mov
icebp
lahf
xchg
and
xchg
xor
gs
sub
fisttpll
and
add
jmp
inc
popl
cmpsb
xchg
jp
outsb
mov
mov
inc
mov
loope
test
popa
lods
mov
repz
jmp
push
test
mov
mov
inc
std
in
cmpsl
cmp
push
ss
mov
mov
flds
or
scas
pushf
xchg
cltd
add
inc
xchg
jg
pop
xchg
push
leave
bound
push
dec
je
mov
clc
add
test
scas
sbb
sbb
ss
xchg
mov
inc
xchg
out
les
cmpsl
call
jle
xchg
sbb
ja
dec
xchg
call
sbb
out
mov
js
xchg
xchg
dec
std
xchg
daa
jmp
sbb
das
loop
cmpsl
aam
pop
and
mov
cltd
das
jle
sub
and
fsts
leave
mov
fmuls
cs
pusha
and
pop
std
into
out
sub
movnti
mov
xor
outsb
daa
mov
inc
insl
inc
cmp
jl
sub
popf
or
push
or
xchg
out
ss
jne
xchg
push
lods
bound
inc
lods
xlat
fldenv
mov
and
inc
rcrb
mov
and
shrl
xor
fldpi
mov
add
fistpl
jae
fisubrs
jno,pt
jle
pop
incl
loope
jae
mov
outsl
mov
sbb
add
outsl
fwait
push
sbb
dec
or
or
and
stc
cmp
xchg
popf
popf
sbb
add
xchg
mov
in
add
xlat
sbb
or
addb
fidivs
iret
cwtl
sub
xchg
stos
outsl
adc
push
mov
iret
mov
dec
mov
sub
sub
loop
sub
cmp
js
stos
ljmp
cwtl
jo
pop
sub
cltd
xor
fwait
subb
add
dec
ret
inc
sbb
aam
xor
push
sub
and
sub
dec
imul
js
addr16
sbb
mov
std
mov
notl
mov
add
inc
aaa
in
sub
clc
popf
cltd
movsl
push
scas
inc
filds
loop
fstl
fwait
fs
mov
xchg
or
clc
adc
in
ja
flds
pop
push
clc
aam
stos
push
push
adc
in
test
mov
mov
mov
cli
bound
pusha
and
mov
shlb
stos
ret
nop
push
out
adcl
cmp
icebp
xor
inc
lods
pop
jl
and
add
inc
mov
test
lock
hlt
nop
xchg
cmc
jae
stos
jle
ljmp
sti
mov
ja
pop
cmp
sbb
xor
lahf
popf
das
jmp
xlat
int3
mov
sub
mov
in
dec
push
hlt
out
push
jo
jmp
pop
test
mov
cmp
cmp
gs
mov
jg
shll
loope
and
or
pop
das
sahf
dec
mov
out
pop
insl
jo
out
sarl
ja
mov
xchg
add
sahf
mov
fildll
je
stos
roll
cmc
sbb
adc
and
lret
pop
jecxz
inc
into
fsub
ja
inc
icebp
subb
movsb
adc
mov
sub
fnsave
pop
shll
dec
imul
sub
rep
mov
xor
pusha
aaa
and
stos
iret
add
fsubrs
das
movsb
mov
jb
js
loop
fwait
jecxz
scas
pop
lcall
pushf
adc
push
sbb
inc
push
test
push
mov
pop
shlb
in
pop
cli
test
mov
mov
inc
gs
dec
insb
pop
lods
repnz
fwait
sbbl
stos
cmpb
adc
mov
cmpsb
cmp
cmp
insl
bt
push
int
movsl
in
icebp
cmp
add
sub
rcrb
push
mov
stc
mov
sub
push
xchg
add
test
jmp
pusha
push
cli
xchg
sub
xor
jmp
test
cwtl
adc
xor
enter
lret
dec
mov
shll
test
jmp
add
and
inc
mul
xchg
jb
push
aad
call
ret
jmp
inc
xchg
fistpl
icebp
pop
jp
mov
stos
repnz
jnp
scas
push
inc
jg
ret
pop
dec
jmp
mov
sub
xchg
ja
pop
sbb
stos
jbe
shrl
xchg
lret
arpl
cld
push
sub
xchg
mov
mov
mov
ret
adc
sbb
mov
or
inc
pop
gs
add
or
jbe
mov
mov
ss
xchg
adc
pop
test
rcll
fsubs
dec
rolb
sti
dec
and
mov
into
xor
adc
call
outsl
push
mov
popf
ss
repz
xchg
sbb
adc
mov
cmp
stos
add
dec
out
dec
xchg
xchg
jnp
pop
fidivrl
dec
leave
outsb
jmp
mov
loopne
cwtl
cli
shrb
lods
cmp
loope
adc
mov
adc
jne
test
lods
dec
xchg
lret
cli
or
fdivrl
dec
stos
adc
pushf
movsl
lahf
and
mov
aaa
sbb
and
mov
jp
or
mov
je
pushl
mov
mov
scas
imul
sbb
bnd
cmp
jnp
jbe
andb
jns
pop
aas
push
inc
xchg
push
jbe
xchg
cmp
push
jae
sbb
daa
insb
sbb
outsl
jg
popa
lds
pop
cwtl
cltd
shll
imul
fildl
cmp
mov
pop
and
pop
adc
mov
test
mov
or
mov
repnz
xorb
in
inc
jno
jns
cmp
insb
add
xchg
insl
out
sub
push
scas
mov
xchg
stos
push
lods
push
cmp
sahf
mov
pop
imul
and
pop
add
lcall
nop
hlt
inc
test
sarl
sbb
loope
icebp
dec
insb
insl
mov
jl
ljmp
xchg
or
ret
cs
test
in
dec
in
xchg
popf
mov
sub
cmp
mov
sub
inc
xorl
fcompl
scas
xchg
jle
xchg
mov
cmp
push
adcb
mov
ja
or
rcrl
inc
pop
push
dec
push
jb
pop
fcoms
xchg
in
adc
mov
xlat
xor
jno
mov
push
rcrl
and
fildl
aaa
dec
xchg
rcr
test
test
movaps
xor
add
adc
mov
scas
out
push
clc
dec
cmc
pop
movsb
mov
aas
in
fbld
mov
jl
mov
sbb
cli
data16
mov
ljmp
enter
fcomps
dec
mov
insb
xchg
xchg
xor
add
cwtl
xchg
mov
pop
mov
mov
mov
gs
add
aam
mov
iret
and
stc
add
xchg
jl
ljmp
and
and
dec
fcoml
aam
jge
dec
push
sub
jmp
pop
lcall
pop
out
js
lahf
arpl
out
imul
mov
int3
loopne
cltd
lods
jnp
xchg
mov
ret
aad
shll
xchg
cmp
cli
stc
jo
or
insb
stc
or
cmp
inc
xchg
add
lods
sbb
in
jecxz
aaa
add
lods
inc
push
fistps
ljmp
fisubrs
icebp
sub
lahf
fcoms
stos
fs
test
inc
push
mov
xchg
jns
loope
ds
and
imul
push
add
clc
xchg
push
mov
mov
daa
lock
fcoms
inc
shl
ss
xchg
cli
aad
cltd
xchg
ret
movsb
add
xchg
roll
mov
pop
shlb
sarl
shl
aam
subl
in
out
mov
xor
fildll
sub
cmp
or
dec
popa
lahf
pop
in
popa
push
ljmp
pop
add
pop
dec
fcmovnu
cmpsl
mov
push
and
clc
and
mov
mov
xor
leave
addr16
stos
push
or
in
mov
mov
jno
push
push
test
mov
mov
push
sbb
jmp
push
jge
lea
sti
mov
dec
lds
sub
ret
movsb
mov
popa
aas
mov
sarl
lea
inc
sub
notb
sub
pop
xchg
add
lahf
ret
jecxz
push
es
test
stos
jmp
xchg
out
inc
xrelease
ja
push
sbb
loopne
add
nop
xchg
xchg
mov
enter
popa
inc
je
pop
mov
lock
mov
mov
jnp
mov
push
test
mov
filds
mov
push
xor
add
mov
or
mov
jp
outsb
add
jp
dec
cmp
cmp
popf
nop
loope
dec
mov
xor
hlt
sahf
fidivrl
cmp
test
push
and
xchg
mov
cmp
aaa
or
adc
mov
mov
lods
iret
pop
or
stc
ss
pop
xor
fsubrl
dec
movsb
mov
fiadds
out
fidivl
xchg
fwait
sbb
movsb
xchg
movsb
inc
fcmovnb
xchg
pop
in
mov
sub
das
cltd
int3
or
and
jge
jbe
xlat
dec
push
sarl
push
leave
add
test
dec
addl
push
aaa
jle
pop
jg
pop
mov
bound
jns
out
jp
push
out
mov
addl
xchg
ss
jp
andl
dec
repz
test
push
sti
inc
imul
stos
fistps
cmpl
ds
mov
insl
fadds
arpl
pushf
cmpsb
int
dec
ds
cmp
push
mov
sub
lods
xchg
loop
pop
push
jne
push
sub
jns
sti
iret
mov
stos
loope
das
jae
mov
inc
fmull
jo
scas
jnp
cmp
call
shll
es
mov
outsb
fst
out
imul
and
xlat
jnp
aaa
aas
mov
pop
jp
jno
adc
popa
add
pop
fimuls
cmp
mov
iret
push
out
in
aad
orl
and
adc
lea
aam
mov
popa
mov
bound
enter
jo
inc
movsl
cmp
pusha
jp
xchg
stos
test
xor
mov
xor
in
jb
or
jae
jge
out
lods
insl
in
dec
pop
dec
jnp
add
pusha
add
pop
movsl
mov
cmpsb
mov
movb
add
or
xlat
dec
pop
outsl
call
inc
inc
add
stc
loopne
aam
outsb
aam
out
mov
fbld
cmpsb
adc
jg
pop
incl
pushf
jmp
daa
xor
outsb
xchg
fadds
pop
push
int3
mov
mov
dec
cmpsb
adc
pop
scas
and
lds
xchg
sbb
out
mov
out
cmp
xchg
outsl
mov
push
xchg
or
cmc
in
jmp
movsl
lock
cs
pop
aas
dec
push
testl
out
inc
pop
jb
mov
and
loopne
dec
cmp
pop
add
out
push
arpl
cld
lcall
pop
mov
push
or
out
push
sarb
test
popl
adc
lods
dec
mov
mov
outsb
xchg
int3
adcl
push
mov
mov
loope
popa
xchg
mov
mov
inc
imul
adc
aaa
jl
cmp
aam
adc
pop
adc
dec
stos
cwtl
push
dec
dec
pop
mov
mov
cmp
rep
xor
cmp
push
in
hlt
jbe
pop
jnp
es
adc
mov
les
add
out
add
or
call
clc
add
inc
imul
rorb
cmpsl
dec
sub
fdivrs
fnstenv
in
mov
sub
and
out
movsl
insl
xor
decl
mov
sbb
inc
aaa
mov
je
mov
inc
jl
fs
lahf
lods
adc
cmp
lcall
xchg
negl
xchg
fwait
jecxz
loop
sub
sbbb
sbb
stc
cmp
insb
sub
test
das
js
mov
arpl
shll
cmpsl
sar
xchg
fimuls
out
iret
rcll
and
mov
into
pop
lret
jnp
sub
inc
hlt
and
gs
gs
push
aas
cli
and
push
adc
push
add
es
mov
hlt
xchg
std
xor
xor
add
popa
jge
mov
leave
leave
fwait
xchg
in
xor
mov
pop
push
fidivs
mov
mov
push
flds
js
out
ds
movsl
shl
dec
loop
shlb
mov
and
lahf
jns
js
icebp
call
xchg
out
mov
movb
pop
adc
popa
frstor
fwait
dec
fsubrl
pop
and
adc
insl
push
lock
inc
ljmp
jns
in
sbb
sahf
push
inc
lcall
dec
add
aas
cltd
outsl
jne
outsb
xor
xchg
lock
inc
enter
mov
icebp
sub
adc
movsb
mov
aaa
or
dec
rcll
rorl
mov
pop
mov
xchg
pop
xor
jge
cmp
push
sub
fadd
mov
pop
dec
int
rcrb
jns
mov
enter
aas
push
xchg
decb
in
pusha
test
push
leave
pop
or
jbe
cli
mov
add
movsb
jp
outsl
add
inc
test
push
jno
jp
out
hlt
mov
or
pop
lahf
push
fldl
pop
cs
push
push
std
in
jg
cmp
in
icebp
clc
jg
jbe
scas
cwtl
add
sbb
dec
jecxz
out
mov
push
imul
addb
nop
xor
rcl
cmp
es
bnd
mov
jmp
mov
cmp
in
test
popf
adc
jecxz
std
cmc
add
inc
test
dec
icebp
loop
push
aad
out
dec
inc
mov
mov
or
ja
xchg
mov
jb
xor
xlat
pop
rcrb
push
cwtl
jnp
xchg
xor
jbe
sbb
and
lods
or
pop
scas
inc
mov
pop
outsb
adc
add
xchg
int
adc
lret
dec
mov
xchg
daa
rcr
fstps
pop
add
fstps
jp
pop
add
pop
and
xchg
mov
push
lahf
js
add
data16
sub
into
jne
add
mov
imul
pop
pop
int
or
clc
add
jnp
arpl
mov
sbb
aas
jp
int3
in
or
xchg
and
xchg
or
add
or
iret
stc
mov
push
cmp
mov
fstp
jmp
adcl
fldl
jnp
mov
push
push
mov
test
lret
sbb
arpl
pushf
mov
jnp
pop
ds
aas
inc
push
mov
fwait
adc
add
jl
pop
mov
lcall
inc
xchg
fnstcw
mov
out
into
rorl
mov
sti
scas
add
fwait
mov
cmp
out
incb
aam
andb
pushf
add
xchg
or
les
dec
push
in
fisubrl
les
aaa
into
sarb
movsl
adc
insl
sbb
pop
and
lea
das
rolb
mov
inc
xlat
call
rcr
stc
mov
loope
xchg
mov
mov
es
fisttpll
jno
push
push
push
adc
or
sub
dec
xor
push
jmp
and
mov
dec
jmp
mov
adc
js
mov
cltd
cs
cmp
push
and
sbb
xor
inc
push
sub
into
clc
push
adc
data16
xchg
mov
pop
mov
push
xchg
cmp
cld
int3
jp
push
xor
pop
xor
push
ljmp
test
adc
loop
sub
cld
cmpsb
rolb
out
pop
add
cmpsl
jnp
inc
cld
cmp
xchg
cmp
je
xlat
ja
call
fnstcw
fidivrs
popf
lcall
bnd
fdivs
xorb
ss
and
gs
mov
sbb
scas
iret
enter
cs
xchg
and
xchg
jns
sahf
fmull
pop
jnp
faddl
sbb
imul
add
jb
push
jnp
ret
out
faddp
mov
in
sar
xlat
lret
mov
mov
adc
dec
add
mov
pop
aam
or
cmp
pop
sub
lods
and
jmp
fmulp
out
push
popf
ljmp
addb
or
adc
cmpsb
sbb
mov
or
xor
add
pop
sub
fcom
sarb
mov
pop
shlb
shll
xor
in
xchg
clc
mov
ret
clc
imul
gs
pop
fisubrs
jb
sub
test
or
popf
xor
es
dec
add
in
imul
sub
xor
cmc
and
or
lea
adc
pop
adc
adc
popf
shlb
and
pop
shlb
pop
adc
ret
out
out
inc
cmp
bound
and
test
push
jecxz
fs
inc
js
push
adc
pushf
dec
add
xchg
push
icebp
test
sbb
rcrb
push
stos
ss
add
sbb
sar
pop
dec
cmp
jb
pop
daa
inc
scas
fidivrs
cwtl
or
int3
gs
fisttpl
out
push
jae
jge
xor
and
or
mov
jle
inc
push
cmp
jle
rcl
mov
loope
aas
ja
sub
push
daa
mov
lret
flds
mov
pushf
add
vhaddps
xor
jg
cmc
push
pusha
or
lret
inc
lock
add
popf
test
sahf
stc
pop
mov
dec
out
loopne
iret
pop
push
cltd
mov
stos
loop
push
fwait
pop
sbb
inc
mov
add
jnp
mov
pop
xchg
daa
cmp
hlt
sahf
mov
mov
leave
sbb
pop
push
test
rorl
hlt
imul
js
sbb
mov
ficoml
xor
std
loop
ret
test
or
mov
cmpsl
sbb
enter
pop
stos
xchg
jnp
adc
mov
setge
mov
adc
das
add
movsl
xchg
cwtl
inc
add
or
in
pop
pop
loopne
daa
push
xchg
or
sbb
pop
test
mov
pop
scas
pushf
sarl
test
sbbl
mov
pop
scas
xor
adc
pcmpeqb
mov
cmp
jecxz
jae
mov
fiaddl
loope
cmpsb
mov
and
test
enter
xlat
and
mov
xor
xchg
vpunpcklwd
sahf
arpl
mov
addr16
dec
add
pop
cltd
mov
mov
dec
cld
lds
inc
lret
scas
das
mov
test
jle
cmp
or
inc
sub
mov
pop
xor
and
sub
mov
shll
cli
pop
mov
dec
aad
xchg
xchg
jecxz
out
mov
cmp
sub
sbb
dec
push
push
repnz
test
cmc
mov
pop
jne
adc
push
pop
xlat
sbb
shll
lcall
jno
int
pusha
adc
leave
pop
test
pop
push
les
out
rorl
ja
jb
mov
xor
data16
lea
inc
leave
lds
xchg
aaa
and
int
int
movsb
cs
testl
inc
out
or
mov
sub
mov
jae
loop
cmp
outsl
insb
mull
test
sbbl
icebp
jl
mov
negl
push
push
cmp
fsubrs
adc
call
add
test
lods
imul
test
mov
mov
mov
or
inc
or
dec
lods
adc
call
fldl
mov
movsb
lods
mov
sub
jmp
xor
fs
arpl
jns
fidivs
mov
fwait
mov
in
xchg
shlb
enter
jno
pop
ror
lea
pushf
inc
pop
shlb
push
pop
mov
in
out
push
shl
push
xor
fdiv
mov
int
mov
mov
adc
pop
adc
xor
inc
daa
in
push
jecxz
push
or
and
outsl
cwtl
nop
fisubl
or
js
jnp
pop
cmp
xchg
insl
push
pop
and
pop
cmp
jns
ret
and
adc
or
xchg
adc
lea
pushf
fs
lock
push
adc
addb
fs
push
loop
or
pop
outsl
push
js
sub
bound
lahf
cmp
aas
iret
sbb
addr16
or
leave
cli
and
scas
std
aam
adc
lock
lea
sti
jg
cmp
jge
jmp
sbb
outsl
xchg
sub
ja
xor
pop
push
cli
mov
sub
jle
sbb
aaa
or
adc
xchg
pusha
aam
mov
rolb
int3
aad
incb
xchg
adc
arpl
pop
clc
cmp
cmp
fwait
or
and
mov
jmp
mov
stc
jbe
pop
mov
mov
adc
sbb
pop
cmp
mov
jno
cmc
adc
pop
jb
mul
inc
aam
insb
stos
inc
out
pusha
scas
mov
lret
scas
xor
aaa
insl
lahf
leave
cli
or
scas
jb
iret
loopne
ss
sbb
cmp
scas
ficoml
cmpsb
ljmp
mov
data16
mov
push
aad
xchg
lea
lods
add
clc
jbe
or
loop
jns
cli
push
push
stc
inc
or
stc
sbb
jne
lcall
iret
push
jg
dec
jl
xorl
xchg
pusha
nop
pusha
jmp
in
sbb
pop
sbb
cltd
jge
mov
mov
push
test
sbb
sub
mov
addr16
pop
data16
or
fwait
out
dec
loop
enter
cltd
xor
orb
cli
adc
pop
push
xchg
rorb
inc
sbb
sar
pop
push
lods
fisttpl
adc
lret
dec
mov
or
test
addr16
loop,pn
xor
mov
hlt
in
movsb
mov
jle
push
scas
jb
call
ret
in
sarb
orb
cmp
cmpsl
dec
or
or
push
bound
scas
test
out
fsubp
sbb
lds
clc
sahf
cmp
repz
ds
sbb
mov
jg
lret
dec
out
roll
js
lahf
jge
mull
enter
nop
enter
loopne
and
cld
jbe
xorl
insb
jns
mov
lds
mov
into
push
and
test
lret
and
jmp
int
sbb
dec
aam
imul
jg
sbb
inc
dec
push
pop
arpl
insl
bound
repnz
in
lret
cli
adc
mov
jb
rcrb
xchg
std
xchg
mov
rcl
jns
in
cltd
or
xor
in
ds
cmp
repnz
icebp
pop
dec
data16
pop
adc
fwait
loope
adc
adc
stos
icebp
push
xchg
mov
pusha
xchg
push
into
sbb
add
les
testb
push
jle
std
inc
imul
shlb
mov
in
je
scas
scas
xchg
push
int
int3
insl
mov
pop
frstor
pop
lcall
push
ds
pop
pushf
mov
cld
scas
dec
push
xor
mov
jmp
adc
outsb
pop
jg
jae
cmp
push
and
fsts
cmpb
dec
dec
inc
push
sub
jbe
enter
fs
cmpsb
push
and
ret
xchg
outsl
and
les
pop
mov
hlt
pop
xlat
xchg
cmp
or
and
or
test
in
pop
xchg
jnp
test
in
pop
mov
lods
mov
add
cli
bound
ficomps
fistl
inc
mov
push
xor
mov
test
dec
test
and
add
aad
daa
loopne
cs
mov
xor
mov
push
push
push
dec
insl
fwait
xor
fisubl
daa
repz
jbe
sti
jbe
icebp
sbb
mov
shl
je
out
jnp
les
stos
adc
push
inc
loopne
adc
sbb
sarb
cmpsl
sti
dec
cli
cmp
cmc
in
inc
cmp
cltd
pop
sbb
mov
adc
jle
xor
jp
mov
jle
or
daa
incb
add
mov
add
add
push
sbb
jo
or
xchg
inc
inc
das
int
jp
adc
sbb
and
pop
mov
js
xlat
jle
daa
sub
add
lods
cmp
add
and
xor
cmp
in
cld
adc
movsb
cmpsb
jp
loopne
mov
pop
nop
push
cmc
cwtl
rcl
dec
aad
sbb
loopne
stos
cmp
out
pop
inc
pusha
push
sarb
testb
fnstcw
outsl
pop
lods
jbe
jae
jno
incl
push
jno
jns
dec
nop
stos
mov
lods
mov
xchg
sbb
mov
flds
inc
lods
mov
jbe
sbb
out
adc
sbb
notl
adc
sub
dec
jl
mov
fnsave
inc
fdivrl
gs
pop
stos
cmpsl
repz
lock
jmp
sbb
pushw
jl
adc
mov
lret
inc
push
xchg
mov
into
push
pop
or
jo
in
cmp
cltd
mov
pop
and
dec
jge
clc
jnp
mov
cmp
sub
jmp
fs
into
jb
stc
mov
sbb
lds
and
clc
fldl
dec
lahf
mov
pop
sbb
in
xchg
xchg
or
repz
adc
xor
stos
pop
mov
js
scas
sbb
das
fidivrs
dec
xor
pop
dec
mov
out
add
cmp
fnstenv
jo
xchg
jne
dec
cmp
xchg
jecxz
insb
sahf
test
pop
pop
xor
movsw
mov
or
call
flds
mov
ret
dec
add
rcrl
sbb
data16
lock
mov
adc
fnstenv
lret
mov
push
out
mov
push
xor
adc
cmp
rolb
inc
in
jae
rolb
jno
dec
ljmp
es
imul
or
sub
sbb
jg
je
jno
imul
js
xchg
leave
inc
out
xchg
pop
jae
sub
pop
xor
lcall
push
mov
ret
popf
push
mov
push
jae
mov
jnp
inc
les
imul
movlps
fwait
jb,pn
dec
inc
ss
xlat
mov
lret
loope
or
arpl
outsl
outsl
or
sub
sbb
imul
ret
mov
shrb
pusha
iret
lods
jno
lds
into
sahf
lret
popf
mov
stos
shlb
sbb
daa
inc
lods
lea
push
movsb
cwtl
inc
hlt
xlat
aaa
mov
aas
bound
adc
cli
lock
adc
adc
xchg
pusha
sbb
les
dec
sbb
lods
mov
xlat
pop
imul
mov
in
mov
sbb
ret
adcb
stc
test
jge
shl
sub
sti
ljmp
add
push
mov
push
xchg
fcoml
sub
test
loope
orl
pop
xchg
xor
ret
shll
sub
add
mov
xor
ljmp
stos
mov
sbb
mov
sbb
cmp
jmp
xchg
scas
loop
in
push
ja
mov
shll
push
inc
test
fdiv
orl
inc
aad
scas
mov
mov
mov
out
sbb
stc
cmp
dec
cmp
hlt
and
dec
jne
push
adcb
loopne
mov
push
imul
push
je
incb
pop
pop
mov
inc
inc
or
outsl
cld
pop
pop
mov
push
shrl
ficoms
pop
xor
cli
mov
sbb
clc
sub
sub
mov
xor
and
ss
jle
xchg
pop
jmp
xor
incl
or
add
lahf
popa
into
shll
scas
call
rcll
data16
adcb
jns
in
filds
xlat
adcl
xchg
or
call
mov
test
aam
int3
pushf
loop
inc
xchg
mov
dec
fidivs
ret
lretw
ret
std
push
lret
add
inc
out
pop
out
push
and
and
test
lcall
inc
loop
adc
mov
pop
nop
push
cs
stc
sti
enter
pop
insl
sbb
pop
or
lods
sahf
fidivl
mov
mov
xchg
ffree
popa
into
adc
loop
jo
repnz
lods
leave
pop
xchg
xor
or
and
sbb
movb
jnp
dec
popa
push
add
xchg
cmp
xchg
and
loope
sub
cmp
pop
dec
cmp
cmp
sar
out
inc
mov
popl
inc
and
push
adc
imul
cltd
add
cld
out
mov
pop
das
mov
adc
mov
insl
and
sbb
out
ja
fdivs
popa
or
sbb
dec
out
push
pop
lahf
mov
leave
jmp
add
fsts
fcompl
xor
insb
or
pop
outsb
addl
fidivl
push
jne
inc
es
fs
pop
mov
ss
dec
mov
inc
imul
pop
sub
jp
cwtl
out
popa
fs
push
mov
lods
dec
or
xchg
mov
dec
in
sbb
pop
sbb
fisubrl
daa
or
shrb
test
pop
bound
leave
shlb
loope
push
xor
add
jecxz
std
sub
push
lret
pushf
div
xor
ficomps
scas
cmp
pop
push
psrlw
mov
std
test
mov
call
sub
adc
ja
xchg
int3
cli
cld
add
test
cmp
add
pop
fdivr
jnp
pusha
lods
adc
sbb
xchg
jl
pop
movb
pop
mov
add
xor
mov
test
rol
inc
and
hlt
inc
jp
and
push
sbb
addr16
and
jno
test
insb
lcall
ljmp
sbb
xor
int3
test
dec
push
loop
les
jg
lods
mov
es
or
test
pop
popa
ljmpw
xchg
daa
sbb
pop
arpl
and
stos
xor
and
ret
outsl
out
test
fwait
das
mov
pop
mov
ficompl
add
cmp
les
cmpsl
push
into
sub
icebp
das
xchg
fisttpll
in
pop
or
aas
adc
pop
xor
jg,pn
in
loope
fs
rcrl
test
push
cmp
or
push
xor
aam
and
pop
jle
mov
fnstcw
movsb
cmc
loop
xor
and
test
stos
push
sbb
or
inc
int
lcall
xlat
push
lods
fisubl
lods
mull
xchg
fs
repnz
outsl
lret
mov
inc
cs
xchg
push
mov
xchg
mov
cmpl
sub
lock
cmpsl
and
cli
mov
and
call
jl
mov
jg
sbb
sbb
jo
fwait
jmp
mov
ret
mov
mov
stos
mov
mov
sti
or
inc
push
or
jmp
fcomps
xor
sub
aas
dec
pop
fcomip
pop
mov
push
and
cltd
mov
iret
in
mov
jmp
sub
mov
aam
imul
push
cwtl
mov
fstpl
lahf
sub
stos
enter
push
xchg
add
inc
scas
div
dec
sub
pop
rcr
insb
mov
sti
insb
in
mov
lahf
push
lret
inc
in
jmp
sub
out
mov
bound
mov
mov
sub
mov
mov
cmp
xchg
nop
test
int3
jmp
cltd
shr
push
fcmovu
cmpsl
add
cli
movsb
xorb
fld
mov
test
ret
fwait
inc
cmpl
bswap
or
out
jno
xchg
mov
cmp
ret
rcrl
or
jbe
fiaddl
stos
shl
and
test
movsb
sahf
fdivp
js
xor
ret
mul
cmp
ficoms
mov
scas
insb
movsl
sub
outsb
pop
loope
insl
push
xchg
push
mov
adc
pop
addr16
mov
andb
cmpsl
rcrl
hlt
mov
stos
jns
mov
adcl
mov
pop
xchg
mov
les
dec
leave
sbb
sbb
jb
faddp
shrb
movsb
popl
ljmp
mov
orb
mov
or
mov
popa
jbe
fldt
xchg
outsl
aas
mov
or
lret
lret
inc
hlt
push
jno
pop
mov
cmc
adc
adc
dec
cmp
out
jl
add
push
stos
jp
sti
lods
jb
adc
jne
pop
hlt
dec
lds
in
rol
addr16
sbb
push
add
pop
mov
xorb
je
lock
dec
inc
inc
and
xor
mov
cvtdq2ps
mov
sub
pop
iret
pop
fbld
sbb
mov
in
jbe
mov
imul
in
femms
pusha
inc
push
or
stc
sub
ret
mov
bound
scas
ret
mov
dec
mov
out
lods
cmpsb
shrl
ret
cs
dec
sbb
ret
dec
aas
stos
pusha
std
rcll
in
pusha
jle
in
gs
sbb
cmp
mov
cmc
subb
fnstsw
mov
add
mov
jle
lock
inc
adc
daa
push
xlat
mov
inc
sarl
ja
rorb
xor
pop
jo
push
xor
jp
push
je
lret
loop
xchg
xchg
fnstsw
in
add
cli
pop
mov
aaa
lcall
fisttpl
shrb
aas
sbb
cmp
pop
mov
mov
or
add
mov
fisttpll
sub
and
fwait
or
inc
jl
jns
push
cmpl
enter
les
imul
inc
nop
and
outsl
aas
sbb
dec
smsw
ss
call
and
popf
enter
int
fisubs
xchg
ret
loopne
popa
mov
sbb
in
cmc
mov
push
repnz
ret
scas
sub
adc
push
sarb
and
cltd
dec
popa
jb
adc
xchg
popa
jmp
mov
sti
cmp
inc
add
pushf
les
loop
mov
add
or
std
add
sahf
or
js
mov
out
push
mov
or
mov
pop
cli
mov
mov
inc
outsl
sub
aas
adc
xor
jnp
mov
and
sbb
pop
lret
mov
fcmovnb
or
mov
fwait
push
aas
fcomip
sbb
cmp
dec
or
xor
jl
int3
inc
push
jmp
loope
jns
xchg
mov
out
fdivrp
mov
sti
dec
leave
pop
inc
add
or
aam
jbe
fistpll
hlt
adc
jnp
cmp
test
pop
adc
mov
adc
out
adc
out
out
cmc
imul
jnp
jne
xchg
inc
pop
mov
mov
push
fcoml
sub
stc
popf
sub
ret
add
inc
dec
mov
mov
stc
test
int
or
stc
xchg
andb
pop
push
incb
xor
push
gs
pminsw
out
in
negb
push
pop
mov
jo
mov
shrl
loop
xor
or
xchg
scas
insb
push
mov
leave
in
pop
clc
sahf
adc
cmp
and
fwait
mov
cmc
mov
mov
fistpll
add
jb
push
pop
and
pop
cmp
jns
cmp
dec
out
mulb
jecxz
inc
jle
sbb
sub
push
in
shl
addr16
cmp
sbb
and
les
btr
ficoms
dec
inc
dec
pop
xlat
push
jno
bound
dec
mov
test
pop
inc
cmc
mov
inc
push
insl
adc
jno
fs
inc
cmp
and
in
das
push
jo
push
cltd
mov
xchg
insl
mov
cli
cmp
inc
or
into
mov
lea
add
jle
mov
jg
es
mov
inc
inc
pusha
add
jmp
sub
sbb
fsubrs
into
imull
push
add
fs
push
enter
pushl
divb
cld
push
jo
xchg
test
fisttpl
add
xchg
jg
cmp
sbb
xor
pop
jnp
addr16
arpl
ret
pop
out
mov
lds
es
or
inc
jnp
dec
mov
push
push
lock
inc
in
mov
pop
sbb
shrl
adcl
inc
aam
jb
imul
xlat
cmpsb
dec
and
sub
dec
nop
push
inc
adcl
add
add
lcall
xchg
popa
lods
mov
or
std
jecxz
xchg
dec
inc
in
sarl
dec
xchg
fstl
stc
scas
out
pop
scas
or
mov
dec
dec
in
xorl
pop
nop
inc
int3
or
in
ss
insl
mov
push
test
mov
movsl
mov
into
or
push
cmpsl
inc
dec
dec
in
hlt
ljmp
push
movsl
out
mov
gs
push
xor
adc
mov
sahf
push
sub
test
or
test
sbb
inc
add
adc
push
inc
mov
jle
aas
cmp
mov
andb
mov
xchg
pop
push
or
rcrl
inc
loopne
jmp
int
or
cli
and
sbb
xchg
repnz
inc
out
out
rcll
push
inc
bswap
stos
xor
add
mov
je
sahf
push
es
cmp
push
or
aam
mov
lods
xor
popa
add
pop
out
xor
pop
call
shll
jns
mov
das
inc
xchg
sbb
xchg
inc
outsb
pop
sbb
ss
call
loop
mov
fwait
mov
scas
sbb
pop
push
pop
xorl
fisubrs
push
push
mov
je
jnp
das
jl
in
clc
xchg
fs
mov
adc
push
sbb
int3
into
dec
jae
sti
pop
xchg
bnd
inc
fldt
movsl
dec
rcl
mov
insl
push
xlat
xchg
out
clc
call
into
fdivr
fsubs
cmp
faddl
mov
sub
je
scas
xor
addr16
add
or
jns
cltd
sub
imul
adc
fmull
sahf
lcall
imul
pop
aaa
mov
mov
jae
call
adc
imul
pop
flds
clc
movsl
and
jl
rep
xchg
rclb
dec
adc
inc
out
dec
mov
xchg
das
and
pop
inc
cli
ret
jbe
nop
popl
pop
sbb
mov
or
stos
and
xor
fs
mov
bound
outsl
cwtl
ret
arpl
xor
xchg
scas
mov
pop
sbb
out
cltd
lock
xchg
push
sub
pusha
add
mov
mov
or
mov
add
nop
aaa
lock
sub
and
scas
inc
xchg
in
mov
fildll
sti
bnd
ret
push
cmc
xor
imul
mov
js
mov
dec
and
ljmp
add
mov
std
imulb
lahf
addb
adc
sbb
push
cmc
push
pop
xor
mov
dec
mov
repz
bound
pop
xchg
movsb
fisubl
cmp
cmp
cmp
iret
sub
push
inc
jp
nop
ljmp
cmp
or
cwtl
fdivrl
out
ss
push
inc
lret
lds
stos
popa
adc
cltd
fwait
outsb
out
into
xchg
dec
jmp
test
mov
jne
mov
xchg
test
insb
sbb
test
push
sti
shlb
jno
das
dec
mov
cmpsb
sub
outsb
mov
jnp
mov
cmp
lcall
std
stos
xor
clc
jb
loopne
sub
sbb
adc
pop
or
add
mov
movsl
lods
push
mov
xchg
inc
adc
xchg
jnp
sub
sub
les
ljmp
insb
arpl
push
in
enter
push
dec
out
in
sahf
jmp
mov
mov
lock
fdivr
mov
or
or
hlt
lock
sbb
lock
mov
in
bound
test
inc
sbb
movsl
mov
lret
xchg
dec
mov
dec
xchg
hlt
mov
movsl
pop
iret
jmp
mov
jae
lock
cmc
inc
mov
loope
into
xor
gs
cld
xlat
sbb
mov
mov
das
sbb
icebp
cwtl
mov
in
rcl
mov
stos
xchg
into
leave
and
adc
xchg
scas
mov
jo
outsb
cltd
lahf
jp
lea
sub
inc
and
inc
enter
sub
or
add
cmp
or
adc
sub
into
test
sti
cwtl
das
jns
in
pop
dec
lcall
push
push
sub
fcomps
cmpsb
or
repz
inc
arpl
jle
mov
push
out
ja
jp
adc
mov
and
mov
jmp
sub
out
lods
and
xor
cmp
push
movsl
push
add
dec
test
xchg
rorb
jmp
mov
mov
aad
mov
jle
fisttps
or
inc
iret
sbb
leave
xor
xor
xchg
fcomps
les
loope
jne
dec
fs
stos
xchg
les
xchg
out
int3
in
outsl
or
push
into
dec
jbe
push
bound
jg
mov
cmpb
stc
mov
jno
sti
pop
push
mov
nop
mov
sbb
addl
pop
sti
in
pop
cmp
sbb
jp
das
mov
sbb
xchg
in
movsl
iret
push
cmp
movsl
ret
or
adc
leave
std
inc
das
or
xchg
bound
push
inc
imull
xchg
idiv
sub
pop
adc
addr16
inc
outsl
rorb
and
std
repnz
push
bound
push
cli
idiv
or
xchg
or
imul
fmulp
bound
cmp
mov
mov
popf
fwait
jns
mov
push
out
push
ja
cmp
pop
push
jg
dec
ficompl
or
iret
inc
sbb
stos
jl
and
std
je
mov
popf
sti
dec
mov
adc
mov
mov
mov
lret
and
dec
out
add
pop
fwait
test
sbb
and
inc
ficoms
jle
pop
pop
int3
js
out
jp
call
and
int
pop
dec
adc
inc
sarb
sbb
pop
xchg
or
mov
es
jne
call
xchg
sbb
mov
fiaddl
adc
cmpsl
andb
cmpsb
mov
push
gs
or
rolb
sub
movsl
xchg
gs
stc
std
inc
fwait
push
jbe
fldt
repnz
hlt
jno
xor
adc
mov
movsl
call
add
inc
dec
push
roll
adc
aam
xchg
mov
in
mov
pop
shlb
insb
xchg
pop
sub
loopne
aam
push
std
xor
cltd
jecxz
mov
in
outsl
ja
push
and
adc
adc
cmp
push
lretw
popf
fisttpl
push
sub
mov
push
dec
gs
std
pop
stos
rcl
sarb
lods
pushf
das
jb
mov
imul
mov
push
out
iret
or
inc
xor
cld
adc
dec
arpl
push
xorl
lods
sbb
cmp
mov
pop
xor
jnp
mov
lahf
lret
and
ja
gs
orb
sbb
mov
es
adc
std
test
or
and
mov
add
cld
cwtl
xchg
lods
jle
popf
inc
and
hlt
jbe
in
iret
push
rorb
cwtl
xchg
xchg
or
adc
push
mov
clc
rclb
jecxz
mov
push
mov
mov
pop
dec
popa
pop
cmp
scas
fwait
cmpsl
stos
nop
add
pushf
call
repnz
xchg
les
mov
add
lods
mov
xor
xor
ljmp
insl
movsb
push
lcall
mov
xchg
xchg
adc
cmp
pop
adc
xchg
lret
and
push
and
mov
addr16
or
aas
pop
lret
add
dec
inc
jno
adc
mov
hlt
xchg
pop
imull
and
jb
loop
cmp
test
setne
iret
xchg
dec
cmp
sub
lods
je
out
data16
jp
cs
out
repnz
je
jg
mov
jp
mov
dec
and
pop
mov
pop
inc
cwtl
test
jno
pop
scas
mov
xlat
cmp
xchg
cmpsl
fcomps
inc
icebp
repz
jns
test
cmp
xchg
dec
negl
fwait
cwtl
leave
adc
sub
bswap
xchg
cld
leave
mov
fsubl
dec
lea
xchg
xor
sbb
sbb
bound
jmp
xlat
rol
aam
sbb
mov
sub
push
sbb
push
fstpt
dec
mov
xchg
loope
mov
mov
js
les
fs
fiadds
movsb
pop
jb
and
xlat
testl
rol
iret
mov
jl
dec
push
ret
sub
fnstsw
insl
jne
int
xchg
stos
xchg
ja
dec
jno
imul
sarb
mov
loop
mov
cmp
into
add
ret
and
jge
test
fidivl
std
push
ficoms
push
and
mov
and
lock
inc
xor
inc
cmp
js
inc
adc
mov
mov
mov
adc
dec
ror
dec
outsb
mov
movsl
inc
fdivs
or
sbb
add
push
out
lret
movsl
clc
mov
outsb
jle
dec
adcl
mov
popl
pop
and
jecxz
pop
fidivrl
icebp
mov
pop
xchg
lock
popa
push
pop
xchg
in
push
dec
push
mov
sbbb
adcl
test
pushl
bound
jno
mov
inc
push
sbb
xor
cmc
cmp
pushf
imul
dec
add
adc
pop
jb
mov
scas
sbb
cmpsl
fs
xchg
cmpsb
aam
pop
ds
rcll
add
test
addl
mov
mov
je
shrl
test
lods
mov
cmpb
pop
sbb
cmpsl
dec
fisttpll
pop
cmpsb
adc
xchg
xor
leave
push
sbb
xlat
lahf
jl
test
enter
in
sbb
mov
test
mov
lcall
mov
xchg
fdivr
popa
je
dec
lds
les
xor
jmp
inc
dec
repnz
int3
pop
out
inc
fsubrs
dec
lret
jmp
push
stos
xorl
or
cs
mov
pushf
cmp
mov
add
mov
jne
pop
push
mov
lahf
bound
push
add
in
gs
movsl
popf
imul
ss
lods
call
pop
mov
jb
fcoml
mov
sbbb
fstpt
stos
fistpl
jecxz
xlat
mov
lcall
fmul
in
dec
insl
xor
daa
cmp
pop
cld
mov
ss
mov
sbb
pusha
pop
rorl
lret
sbb
js
push
fdivrp
mov
loope
sarb
adc
add
stos
ljmp
adcb
or
jl
pop
dec
mov
repnz
add
cld
loop
add
inc
popf
lock
loopne
mov
xchg
cmp
jnp
mov
dec
outsl
inc
cli
mov
imul
repz
sti
jmp
fs
xorb
ss
sbb
mov
push
fdivl
mov
int3
xchg
push
add
add
mov
xor
mov
mov
jmp
rcrb
pushf
mov
ja
lahf
and
cltd
push
pop
push
mov
adcb
test
ret
pop
out
or
leave
popa
mov
dec
stos
daa
push
dec
orl
dec
or
or
or
imull
in
jecxz
arpl
fstl
xchg
iret
pop
adc
jmp
ja
in
mov
cwtl
mov
scas
jns
mov
jbe
popa
lea
xchg
mov
pop
push
push
popa
jecxz
stos
std
enter
sub
cld
loop
mov
cmp
push
ss
push
aas
subb
or
out
pop
mov
jmp
xchg
push
mov
dec
add
les
sub
jp
incb
out
xchg
rorb
lcall
pop
addr16
fcom
les
xor
pop
mov
rolb
in
mov
fdivp
push
in
in
pop
lahf
ljmp
out
fcompl
ret
enter
enter
lods
jle
mov
incb
sub
iret
aad
test
and
sub
jmp
je
cmp
xor
dec
repz
push
dec
mov
clc
movsb
cld
jg
movsb
aad
sbb
js
popf
jmp
pusha
adc
out
jp
mov
jp
push
ljmp
stc
dec
insl
lret
push
jp
mov
shlb
push
adc
leave
xor
add
mov
cmpsl
imul
fwait
in
sbb
mov
dec
lahf
mul
repz
push
mov
cli
inc
sbb
jge
mov
xchg
inc
cmp
test
ficompl
or
jp
jge
add
push
xchg
dec
adc
leave
xchg
cmp
cmp
outsb
jnp
mov
sbb
dec
hlt
test
or
mov
or
jae
push
and
js
les
or
add
jecxz
enter
push
jo
mov
pop
mov
fldl
insb
repz
int
push
out
pop
xchg
and
mov
int
inc
icebp
xor
fwait
stos
outsb
pop
cltd
pop
push
loopne
jmp
xor
ret
and
aas
movsl
lret
or
fdivs
inc
jns
call
push
sbb
dec
fadd
push
clc
mov
or
xor
pop
add
mov
mov
mov
adc
int
jl
pop
call
test
mov
inc
mov
rclb
andl
arpl
fwait
in
push
lods
inc
push
iret
sbb
jge
loopne
loope
in
sbbl
mov
daa
xor
repnz
mov
test
jb
sbb
adc
out
outsl
cmpl
jbe
and
lds
jbe
out
sbb
dec
or
inc
fs
mov
insb
cmp
dec
xor
and
imul
cmp
ja
mov
cli
xchg
xor
fcoml
fsubs
jp
sbb
cmp
nop
adcb
stos
loop
sub
add
stos
sub
rolb
jns
std
jno
pop
mov
cmp
xchg
mov
sub
popl
shrl
fxch
mov
fisubs
cmp
and
pop
rcll
or
movsl
sbb
sbb
dec
addb
mov
loope
ds
in
xchg
xor
fcomps
sbbb
lock
mov
xchg
pop
xor
in
into
and
add
dec
das
xchg
jo
inc
inc
cmp
jno
shlb
xor
jno
dec
mov
mov
loop
sbb
clc
lods
sbbl
push
xor
ss
mov
fldcw
test
insl
mov
pop
cmp
ret
bound
dec
in
adc
mov
xchg
fmulp
in
aas
mov
xor
inc
fisttps
js
pop
mov
and
int
incb
nop
xchg
push
popl
ss
push
cmp
adc
call
push
jno
movl
aaa
test
xchg
pop
loop
sub
mov
add
clc
out
sahf
ss
sbb
call
mov
pusha
notb
stos
negl
outsl
loopne
mov
xchg
lcall
xchg
add
fdivrl
and
cs
pop
dec
jle
clc
dec
jecxz
inc
sahf
push
pop
dec
es
daa
adc
orb
rorl
in
or
fldl
and
pop
mov
sar
mov
xchg
xchg
orb
cmp
movsl
lea
imul
test
divb
cwtl
cmp
pusha
add
mov
call
pop
popf
sub
push
pop
xlat
repnz
je
cmpsb
pop
xchg
adc
and
jns
pushf
ds
cli
and
ds
inc
add
mov
lret
in
xchg
push
ss
sub
or
aas
lcall
fiaddl
cmpsb
mov
popf
cmc
push
out
sub
aad
cltd
pop
inc
pop
in
jp
adc
jb
add
outsb
shll
and
lret
sub
dec
inc
sbb
jecxz
sahf
repz
adc
lods
or
xchg
addr16
xchg
inc
aaa
mov
push
loop
pop
stos
push
mov
fidivrs
sarb
mov
cmp
push
in
aaa
sbb
mov
roll
pop
dec
sbb
aas
push
loope
xabort
xlat
and
test
inc
pop
insl
or
shlb
jge
mov
out
cltd
cmp
push
out
push
out
xor
pop
add
imul
fdiv
xchg
in
inc
movsb
jmp
divl
jecxz
lock
dec
and
divl
mov
jecxz
rclb
pop
pop
mov
pop
pop
jmp
lods
std
imul
mov
sub
aaa
xchg
adc
push
mov
inc
fdivs
pop
mov
dec
movsl
inc
dec
clc
sbb
lret
out
loop
pop
mov
mov
mov
jp
int3
push
adc
test
sbb
xchg
or
xor
sub
or
cmc
push
mov
es
ret
and
es
enter
pop
xchg
popa
xor
push
out
xor
test
jg
in
adc
pop
inc
jp
jge
aaa
pop
mov
sbb
xchg
or
xchg
mov
mov
out
jno
or
test
dec
dec
out
mov
adc
ja
sub
inc
sbb
loopne
es
jne
dec
lds
clc
mov
cwtl
clc
divb
pushf
out
lods
mov
fsub
clc
xchg
inc
adc
mov
fdivrs
adc
out
outsl
jno,pn
lods
mov
sub
cmpsl
leave
imul
call
push
pushf
cli
and
out
pop
mov
dec
sbb
out
inc
rcrl
outsl
or
dec
mov
aam
lds
shll
dec
add
cmp
cwtl
sub
or
and
xchg
jg
pop
push
or
cmp
xchg
jnp
xor
call
ds
lret
push
iret
imul
ljmp
cmpsl
das
ret
cmp
lret
pop
sar
and
repz
test
mov
sarl
xchg
fbld
xorb
movsl
jle
mov
mov
mov
push
pop
ljmp
push
add
subb
out
xchg
stos
hlt
cmpsl
jns
ljmp
mov
shl
cld
mov
cmpsb
fnstenv
aad
mov
add
out
dec
adc
lods
fs
add
repnz
in
std
mov
sub
outsl
gs
cmp
mov
cltd
aad
pop
sub
jg
adc
aad
jp
jne
pop
and
les
pusha
leave
xchg
push
pushf
les
pop
mov
aam
call
in
dec
test
inc
cmp
jno
cmp
mov
cmp
pusha
js
jp
lahf
mov
xor
aaa
mov
in
mov
sub
push
das
pop
mov
sub
movsl
inc
mov
subb
rol
loope
fs
dec
sub
lret
jne
enter
jg
adc
popf
das
cmp
mov
bnd
jae
movsl
repz
xlat
push
lods
loop
roll
je
stos
dec
adc
sub
pop
movsb
stos
push
in
daa
mov
xchg
sub
fs
mov
xlat
pop
clc
pop
test
jl
pop
stc
dec
rolb
hlt
jb
into
sar
lods
in
repnz
push
sbb
sub
pushf
and
jmp
aaa
loop
mov
push
pop
mov
arpl
popa
mov
mov
orb
adcl
add
call
push
xchg
sbb
cmp
pop
lcall
or
ss
jmp
adc
rolb
in
dec
mov
popa
pop
dec
lods
shlb
mov
push
xor
cmc
addl
add
ret
jbe
push
pop
lds
push
xor
je
sbb
dec
and
test
push
sub
mov
sbb
push
movsl
and
aam
adc
je
cmp
push
cld
cltd
leave
pop
pop
shll
jno
fnstcw
outsb
or
int3
and
sub
scas
dec
cmp
inc
pop
scas
arpl
arpl
adc
push
and
mov
cmpsb
push
cmpsb
push
jb
mov
push
imul
jae
jae
andb
fcoms
stos
or
push
inc
sub
and
loop
and
inc
inc
dec
jmp
or
lret
lahf
xchg
push
dec
lcall
inc
mov
out
sbb
rclb
out
push
or
mov
es
jbe
adc
orb
jle
inc
jge
sti
adc
inc
or
push
stos
jle
or
lods
inc
or
and
xchg
jg
mov
aas
loop
pushf
sbb
sbb
mov
mov
std
sbb
int3
xor
xor
adc
xorl
xchg
mov
lods
jnp
push
jae
shr
rcrb
mov
hlt
outsb
mov
and
rcrb
add
or
push
out
mov
hlt
mov
jbe,pn
aam
cmpsb
ja
dec
add
push
sub
rorb
sub
pop
arpl
test
gs
std
ret
xor
data16
enter
push
roll
push
shrb
cmp
cmp
popa
inc
mov
test
repz
cmp
xor
aas
in
mull
mov
add
pop
sbb
stc
jne
ljmp
push
sub
ret
ljmp
cmc
mov
xor
mov
pushf
das
popf
fdivrs
ja
in
adc
inc
bound
add
push
pop
or
int3
js
and
loop
mov
stos
lds
sahf
push
adc
int3
shlb
popf
fdivp
popf
push
xor
and
add
mov
push
sbb
mov
in
js
je
cmpsl
in
jno
mov
cli
sti
mov
ds
dec
sub
push
lock
pop
and
add
ficompl
xchg
mov
adc
cmp
jnp
xor
jle
jno
lods
ret
jl
xchg
loop
out
jbe
pop
mov
les
data16
sbb
xlat
dec
jl
dec
hlt
push
pushf
ja
sub
push
xlat
dec
jnp
cmpsb
inc
push
sbb
or
in
insb
mov
arpl
cmp
pop
pop
imul
sbb
pop
iret
push
jle
add
jnp
add
push
xor
insl
push
or
mov
in
movsl
data16
lret
mov
aad
les
cmp
insb
pop
lcall
rolb
ret
xchg
dec
xchg
int3
pop
push
lds
mov
jno
out
xchg
in
icebp
leave
loop
stos
clc
add
push
mov
push
jae
into
pop
flds
push
or
aas
jne
mov
xchg
lcall
jbe
jmp
loop
xchg
in
jg
scas
je
jns
imul
imul
ror
jecxz
push
enter
inc
add
fldcw
jl
mov
xor
xorb
jle
pushf
mov
popf
push
mov
cmpb
popa
xchg
lret
push
push
mov
mov
jp
push
mov
inc
enter
xlat
mov
daa
xchg
jnp
dec
andb
popf
push
add
mov
aaa
mov
ret
mov
icebp
int
jns
or
imul
mov
lock
ret
out
cmp
call
push
jg
shrl
jne
adc
cmp
adc
das
inc
inc
and
andl
cs
in
xor
pop
addl
xor
loope
pushf
inc
pop
xor
out
push
scas
or
jp
pop
std
add
xlat
and
bnd
movsl
je
jbe
jnp
rcrb
sbb
adc
push
es
mov
fsubrl
inc
popa
mov
movsb
les
jae
addr16
mov
inc
cs
pop
push
jmp
jno
aas
stos
rorb
inc
sub
clc
aad
mov
repz
jecxz
or
push
adc
scas
daa
xor
mov
mov
mov
xor
sub
jns
pusha
in
add
lea
iret
jecxz,pn
inc
mov
in
jbe
call
addr16
out
adc
and
repz
dec
sti
sarl
mov
fnstsw
xor
push
pop
lret
std
push
and
dec
push
add
mov
jne
fst
pop
mov
sub
ret
loop
dec
xorb
test
fimuls
mov
xchg
lcall
push
pop
dec
adc
push
bound
push
push
mov
xchg
out
push
or
cld
mov
out
ljmp
imull
mov
bound
mov
divl
mov
mov
arpl
push
mov
sahf
out
xor
xorl
adc
inc
cmp
andb
div
cltd
mov
test
xchg
lret
or
mov
cmpsl
sbb
loopne
lahf
sbb
es
jg
jbe
loop
mov
fsubrl
ret
cmp
nop
out
andb
mov
add
mov
test
jae
mov
add
mov
icebp
xchg
sbb
adc
mov
in
mov
cmp
inc
roll
outsl
sbb
xor
fs
movsb
into
push
cmpb
pop
lea
mov
out
adc
sahf
xchg
fsubs
inc
inc
out
scas
pushf
push
mov
add
test
lret
push
xchg
outsb
pop
rcrl
push
sbb
jns
add
es
add
lcall
add
lea
sarl
jns
lods
lock
jo
in
jl
or
fnstenv
cmp
push
bound
xchg
nop
adc
adc
push
xchg
sub
sub
mov
aaa
mov
pop
jmp
lea
mov
xchg
sub
mov
outsb
stos
sub
sbb
sub
xor
mov
hlt
std
xchg
rorb
fistl
push
push
mov
sub
cli
sahf
out
push
std
in
xor
test
int3
and
outsl
mov
mov
pop
aas
out
jmp
movsl
fcmovne
pop
daa
repz
inc
incb
sar
xor
xchg
push
inc
dec
fldl2e
push
js
jns
jae
mov
sub
in
pop
in
ds
push
pop
shrl
js
add
mov
and
pop
jns
push
pop
and
sbb
jo
leave
lods
fwait
pop
in
push
icebp
xchg
or
shl
lods
pop
inc
repnz
cmpsb
push
test
inc
sub
sub
pop
jmp
popa
shr
shlb
pop
push
pop
add
mov
xchg
jmp
sbb
imul
in
sar
inc
mov
repz
jae
sub
mov
das
data16
cmpb
fistl
enter
jnp
ret
mov
sub
xchg
jne
mov
popa
dec
jmp
push
push
int3
jbe
inc
adcb
cmp
jp
sbb
mov
cmpsb
mov
gs
lret
add
mov
sub
push
mov
xorl
inc
call
push
jae
jne
sbb
ds
mulb
dec
xchg
ss
imul
stc
lods
jp
shrb
sub
pop
fmuls
fmul
imul
icebp
addl
out
movsl
ret
repz
inc
test
mov
in
loope
add
mov
pusha
sbb
das
shlb
add
sbb
pop
mov
movsb
stc
cmpsb
jns
xchg
mov
es
outsb
out
cmp
push
fdivrl
push
aas
ljmp
divl
ss
pushf
jge
in
dec
orl
jge
lods
xor
mov
lcall
int
jle
mov
mov
add
jns
sub
ss
out
das
dec
lock
push
ret
inc
aaa
adc
add
jmp
adc
push
mov
mov
sub
xchg
cltd
push
sbb
jge
test
arpl
xor
movsb
push
pop
rcrl
cltd
test
mov
movsl
adcl
daa
outsb
jp
bound
inc
call
jo
cmp
aad
xlat
popa
ret
xor
dec
inc
add
std
js
dec
int
mov
lds
sarb
or
sbb
mov
dec
in
cmp
js
addl
aad
add
cmpl
jae
je
push
gs
and
inc
mov
aad
sbb
push
add
cmp
fwait
adc
daa
dec
jo
or
fistpll
dec
dec
cmp
inc
push
cmp
cmp
andb
push
xchg
xor
push
sub
stc
bnd
nop
mov
jnp
mov
mov
xor
cwtl
mov
xchg
inc
mov
sbb
dec
pop
inc
ss
pop
mov
aad
iret
js
das
les
and
cltd
mov
mov
js
negb
sarb
repnz
push
jno
xor
enter
lea
fdivr
mov
xor
cwtl
fistl
movsl
pop
sub
data16
cmp
testl
nop
movsl
jb
test
xor
cmc
xor
sub
aam
and
popf
pop
scas
dec
jecxz
lret
movsb
mov
mov
popa
ja
mov
scas
push
movsl
jl
push
les
push
push
cmp
xor
int3
and
leave
xor
jne
or
inc
andl
adc
andl
imul
shl
dec
loopne
xor
xchg
add
sub
popa
mov
push
ficoms
pop
push
leave
pop
mov
es
mov
ret
xchg
mov
in
ljmp
cltd
in
sarb
jge
sbb
mov
je
lret
scas
and
mov
xor
aam
mov
sbb
xchg
mov
out
sbb
mov
ljmp
shrl
cmpsl
pushf
jg
jno
mov
and
fwait
ret
sbb
stc
adc
mov
add
out
mov
lds
test
dec
xchg
clc
outsb
lock
es
in
ss
and
inc
decb
loope
or
call
cltd
xlat
sti
sarb
xchg
gs
addr16
lret
push
push
cltd
cmp
adc
cmp
sbbl
sbb
jle
jg
xorl
out
cmpsb
rorb
and
sahf
loop
lea
rclb
sahf
sbb
mov
les
sbb
fldl
outsb
mov
or
ret
enter
mov
in
pop
fisubrl
sbb
dec
xor
push
sub
into
testb
push
testb
pop
mov
xchg
je
pop
aad
bound
and
out
dec
xorb
popa
mov
enter
imul
jle
shrl
adc
enter
ljmp
call
out
adc
mov
add
push
stos
jecxz
and
push
add
out
inc
loope
mov
jbe
mov
dec
stc
fildll
adc
inc
or
xor
cmpsl
lret
cmp
in
pop
adc
or
jmp
dec
and
mov
push
mov
pop
test
add
and
xor
arpl
inc
cmp
and
call
or
in
add
test
into
nop
cmp
pop
add
mov
inc
lret
popf
lret
inc
movsl
pop
fcmove
aad
xor
mov
repz
ja
adc
cltd
lret
mov
pop
fwait
add
push
movsl
clc
jge
insb
push
in
cmpsb
sub
xchg
adc
addr16
or
jnp
outsb
xorl
cmc
mov
inc
mov
adc
orl
dec
pushf
push
daa
rcr
cmp
enter
jns
cs
inc
push
psrlq
and
mov
int
sarb
jnp
test
divl
out
iret
lods
mov
push
stc
lea
das
test
std
push
inc
mov
ret
shl
or
jnp
dec
fdivp
iret
dec
and
scas
decl
popf
or
mov
in
movzbl
ja
leave
inc
pop
dec
jae
jmp
adc
push
adc
jbe
cmp
into
pop
cwtl
mov
or
fwait
sub
call
gs
push
enter
rolb
dec
xor
adc
push
push
xchg
les
aam
lock
shr
jecxz
mov
push
xlat
in
addr16
jge
cmp
int3
push
push
icebp
ja
xchg
sbb
bound
ljmp
inc
xchg
outsl
loopne
mov
dec
mov
jnp
or
jmp
pop
mov
bound
sti
sti
sbb
adc
add
sub
ret
dec
ss
mov
push
out
rolb
test
aad
jg
ja
inc
cmp
popl
test
sub
pop
sahf
xchg
pop
pop
pushf
or
pusha
ja
pushf
in
adc
test
mov
xchg
inc
inc
mov
aad
je
or
pushf
lea
out
and
add
movsl
lds
fisubrl
pusha
psllw
xchg
mov
mov
push
mov
xor
lret
insl
inc
and
loop
xor
xchg
lds
pop
bound
out
xor
fistl
or
imul
ret
andb
daa
lods
mov
lcall
lods
add
mov
or
sub
fldt
shlb
pop
insl
cmp
ss
pop
mov
subl
inc
data16
jmp
add
push
pop
sub
sbb
sub
xchg
std
or
pop
lock
mov
scas
sti
jae
xor
push
adc
test
xchg
sub
pop
xchg
add
in
cmpsb
xor
adc
in
aaa
sbb
cltd
sbb
pop
mov
dec
test
jns
or
scas
jns
fcom
mul
addb
inc
out
dec
mov
lods
or
add
movsl
add
hlt
lea
mov
inc
jp
out
inc
mov
mov
sbb
xchg
ja
fdiv
popf
fs
sub
leave
repnz
sbb
loop
lods
cmp
ror
sbb
mov
mov
insb
or
test
dec
inc
xchg
fisubrs
mov
movsb
and
mov
shll
int3
jo
enter
sub
aad
imul
sti
into
add
mov
cmp
sti
jp
push
cmp
std
icebp
lret
mov
rorb
fcmovbe
rol
fdivrp
add
mov
pop
sarl
arpl
pop
sar
inc
jb
pop
nop
mov
mov
push
jle
lret
inc
inc
adc
clc
add
outsb
add
nop
push
insb
and
dec
mov
bound
xchg
mov
xchg
icebp
jg
xchg
sarb
mov
imul
sti
fdivrl
pop
rcrb
shlb
mov
sbb
jle
popa
jno,pt
xlat
mov
sub
call
sub
int3
in
mov
and
sbb
je
in
decl
pop
daa
rcll
imul
push
and
fstpt
insb
js
popf
mov
jg
push
outsb
pop
push
sbb
pop
dec
mov
adc
xchg
pop
out
shl
or
mov
int
xlat
imul
jo
jmp
and
and
les
pop
and
lahf
jno
inc
push
push
ret
pop
mov
pusha
adc
dec
push
and
mov
inc
scas
inc
popf
dec
roll
or
and
jmp
shrl
test
adc
jno
ljmp
pop
xchg
dec
addr16
cli
jne
dec
xchg
je
or
cmp
stos
scas
xchg
push
out
pop
mov
fistpll
jno
pop
iret
mov
push
cmpsb
adc
imul
mov
fcomps
movsl
mov
sbb
mov
std
dec
xorl
mov
loope
rcrb
sbb
cmc
bound
es
sub
xor
sbb
lock
jge
inc
mov
imul
je
sarb
jmp
ljmp
gs
mov
adc
out
scas
sbb
adc
push
xor
mov
out
or
inc
jmp
jne
ljmp
sbb
sub
xor
ja
ljmp
js
mov
arpl
into
movsb
pop
cltd
das
inc
popl
aam
sbb
or
push
sub
shll
test
enter
bound
sbb
sub
mov
enter
mov
stos
dec
mov
add
into
sti
sub
mov
xchg
jge
dec
sbb
sahf
xorl
ja
cmp
push
dec
pop
in
pushf
mov
out
add
adc
add
pop
inc
scas
sahf
fisttpll
fs
mov
gs
or
pop
jecxz
sub
xchg
sbb
mulb
pop
inc
aam
xor
sub
sbb
idivb
mov
push
xor
pop
jp
mov
cmpl
jmp
jmp
push
sub
ja
ret
and
fmull
pop
adc
or
push
mov
jmp
addr16
xchg
inc
add
ljmp
sub
and
lock
add
cmpsb
mov
sbb
incb
jo
mov
ds
xchg
shl
adc
mov
and
je
mov
dec
test
test
push
push
imul
ss
iret
enter
data16
scas
pop
fmull
icebp
xchg
arpl
movsl
dec
cmp
jmp
mov
std
adc
xchg
add
mov
xchg
mov
les
sub
dec
inc
pop
xchg
dec
insb
in
pop
jno
mov
into
scas
and
js
stos
xchg
rol
mov
or
jmp
lds
xor
adc
daa
ffreep
sub
xchg
mov
shlb
push
cmc
rorl
push
fcomps
xlat
and
mov
out
mov
int
sbb
mov
icebp
into
in
inc
or
fstps
inc
add
fcomp
push
jno
call
adc
ret
cwtl
loope
push
and
sti
outsl
add
mov
leave
outsb
cltd
nop
repnz
lods
inc
pop
mov
push
cmc
popf
lret
inc
clc
or
mov
orb
enter
jb
sbb
int
int3
clc
out
inc
cli
enter
pop
popa
out
or
negb
sbb
jle
jae
mov
push
rcll
test
push
ds
clc
xor
and
cs
cmp
inc
xchg
mov
ja
jnp
cmpsb
pop
ret
data16
adc
test
or
lds
repz
lea
ds
repnz
aas
ds
mov
pop
ljmp
pop
pop
jbe
out
xlat
fdivrl
inc
cli
adc
mov
mov
push
mov
in
mov
push
call
hlt
push
adc
ror
loop
inc
loopne
popa
movsl
mov
adc
mov
sub
imul
pusha
lods
xor
or
pop
inc
mov
sti
sub
dec
lret
rclb
shlb
pushf
add
clc
gs
imulb
and
insb
sbb
lcall
fisttpll
jnp
xor
push
arpl
xchg
xor
imul
stos
fcoms
cmpsl
inc
mov
arpl
nop
mov
je
dec
dec
mov
xchg
add
push
push
popw
cmpsb
dec
or
mov
sub
or
sbb
shl
andb
into
inc
notl
add
push
xor
aad
mov
test
std
bound
and
and
add
in
pop
in
js
cmp
cmp
and
sub
and
ror
jge
push
mov
stc
jno
or
les
cltd
push
and
in
pop
jno
sub
mov
xor
rolb
lret
pop
std
dec
xchg
mov
sbb
popf
inc
pop
int
in
ja
test
sub
mov
mov
fldl
out
ficompl
imul
sub
sti
or
mov
pop
jge
shrb
in
mov
lcall
popf
pop
ret
and
daa
ret
sub
dec
push
dec
push
sbb
dec
inc
inc
jnp
out
push
or
out
lock
das
or
mov
lock
mov
insl
push
in
inc
sbb
or
or
lods
pop
fwait
in
pop
shl
xchg
in
push
mov
mov
outsl
pop
cs
sbb
dec
sbb
inc
push
scas
dec
sbb
pop
cltd
xchg
outsb
arpl
shr
decb
jno
lcall
xchg
out
inc
jbe
notb
sbb
loop
jle
xor
or
inc
in
cmc
clc
mov
jnp
cmc
cmpsl
lods
sub
sub
outsl
mov
call
jo
jmp
mov
pop
scas
test
pop
pop
or
movb
add
cmp
mov
mov
in
les
mov
jge
hlt
dec
arpl
hlt
push
sub
leave
xchg
push
outsl
stc
test
stos
xchg
in
bound
enter
cwtl
loope
data16
pop
xorb
pop
adc
xchg
or
xchg
cmc
mov
cli
ret
mov
sbb
leave
and
mov
pop
cmp
aaa
data16
cmp
push
inc
aas
loope
cwtl
add
and
repz
cmp
ljmp
mov
dec
mov
cwtl
inc
in
cmp
mov
adcb
into
or
idivl
loope
jmp
addb
pop
fidivrl
dec
loope
in
push
sbb
pop
lds
aas
xchg
gs
cmp
mov
dec
mov
and
popa
test
ja
test
aad
adc
push
mov
cmpsl
jle
lock
fisubrs
dec
das
xchg
jnp
outsw
cmp
dec
ss
loop
push
daa
test
sbb
mov
sbb
sbb
mov
ja
sub
ja
out
lret
push
flds
bound
pop
int
xchg
mov
sbb
jg
out
dec
gs
dec
test
fisubs
sbb
frstors
jmp
mov
loopne
jl
inc
popa
stos
int3
inc
lods
mov
ss
sar
add
add
rcrb
cmp
ret
aam
loopne
test
mov
cmp
repz
aad
sub
pop
push
in
jmp
outsb
push
fsubrl
jne
lret
loop
mov
imul
sub
cmovne
mull
movsb
inc
lods
aad
mov
into
fidivrl
jle
mov
aad
jle
sub
nop
mov
fcmovu
cmpsl
mov
cmp
in
pushf
orl
test
jmp
bound
jno
repnz
ret
mov
imul
mov
loope
sti
sub
adc
jbe
inc
mov
popf
cld
mov
in
xchg
cmp
add
xor
scas
pusha
push
push
inc
hlt
hlt
jae
mov
gs
add
xchg
daa
jge
jns
adc
xchg
xchg
sbb
inc
pop
std
scas
xchg
iret
imul
loopne
push
add
or
jmp
sub
imul
loopne
sub
aaa
out
xorl
mov
and
xor
dec
or
inc
mov
ficoml
es
shlb
aad
xor
outsl
fistps
je
add
in
rcll
mov
xchg
setae
xlat
and
shll
push
inc
fstpl
mov
fbstp
cmp
cltd
and
hlt
lahf
xchg
adc
gs
ret
movsb
adc
shlb
es
sub
fs
mov
ljmp
and
mov
mov
fwait
sub
addl
daa
xchg
nop
insb
rorl
dec
mov
cmp
mov
jle
stos
popf
fists
popa
mov
jne
mov
scas
jecxz
sti
mov
fstpl
inc
push
dec
aam
ffree
jne
jecxz
ds
pop
or
mov
fcompl
jmp
enter
jl
rolb
cltd
in
mov
dec
mov
mov
inc
push
mov
jno
jge
adcb
js
aaa
popa
int
hlt
sahf
call
int
dec
adc
fisttpll
jae
mov
push
dec
shrl
faddl
add
out
call
mov
pushf
pop
cmp
jno
scas
data16
fdivrs
inc
mov
pop
lods
mov
push
stos
clc
inc
inc
pop
leave
cmp
add
inc
cmp
fwait
aad
mov
add
into
pop
push
int3
jne
cli
push
and
jns
call
push
fldenv
cmp
cmpsl
xor
xchg
and
inc
or
loopne
sti
pcmpgtb
dec
fsub
adc
stos
aam
arpl
fldt
mov
fisttpll
push
addr16
push
ficompl
stos
pop
and
imul
inc
testl
pop
add
add
lds
sbb
out
add
stos
out
fwait
cmpsl
jb
add
or
mov
xor
mov
sub
jo
pop
mov
stos
rol
mov
adc
insl
mov
jp
lds
adc
jns
insl
lea
mov
jp
popa
sbb
inc
and
test
in
push
mov
cmp
push
push
ret
call
lahf
fistpll
negl
leave
aaa
jne
outsl
fdivl
adc
int3
sbb
lret
pop
test
adc
mov
mov
leave
mov
xor
pop
dec
call
cmp
movsl
sbb
add
iret
add
enter
add
mov
jmp
and
jnp
adc
xchg
push
push
in
mov
and
fsubs
dec
scas
dec
outsb
xchg
loop
rdmsr
popa
das
mov
cmp
add
xor
ds
add
mov
and
ficomps
aas
ljmp
int
jae
enter
jo
add
in
push
sub
dec
movsl
dec
das
xchg
inc
sub
pop
leave
repz
push
mov
psubb
jg
cmpsb
push
push
lea
int
into
and
jge
bound
cmp
mov
or
jmp
jge
das
lods
ss
roll
xchg
xchg
cmp
mov
push
or
mov
mov
mov
sbb
pusha
mov
dec
movsl
mov
mov
jmp
mov
pushf
fistpl
cmp
dec
sub
mov
add
out
push
xor
test
pop
xor
fwait
pop
shll
push
xchg
lea
scas
call
pop
adc
movsb
xchg
sti
lahf
scas
outsb
in
jl
xor
arpl
xchg
xor
shlb
les
pusha
xchg
cmp
jne
sub
test
outsl
push
mov
push
loop
pop
imul
mov
pusha
xchg
idivl
adc
je
loopne
mov
in
leave
hlt
in
xor
in
mov
iret
out
jp
ljmp
sub
push
mov
adc
iret
jmp
mov
add
push
and
or
repz
xchg
fldt
loop
mov
push
andb
lret
pop
inc
popf
fstps
xchg
xor
add
repz
push
mov
mov
in
cld
cltd
lcall
jle
inc
faddl
xchg
cld
mov
test
sub
in
xchg
movhps
or
arpl
imul
stos
xor
jmp
test
outsb
push
cmpsl
rolb
addl
out
loopne
push
jle
pop
int
inc
xchg
popa
or
cli
cli
cmc
ret
or
int
cmpsl
loop
popf
ja
pop
stos
ficomps
push
mov
pop
mov
sbb
mov
push
and
popf
sub
push
pop
sbb
pusha
pop
push
xchg
and
icebp
inc
sbb
ret
xor
mov
pusha
in
push
xorl
and
data16
lahf
mov
add
addl
xor
adc
fbld
mov
mov
adc
fwait
mov
pushl
xchg
je
dec
insb
cli
or
fdivrs
xor
push
jecxz
cmp
aaa
fnstsw
pop
sub
popa
push
sbb
test
pop
jle
pop
adc
je
mov
dec
xorb
lock
dec
xchg
int
xor
lret
xchg
nop
xchg
stos
jno
lea
imul
or
push
imul
icebp
jge
dec
inc
xchg
adc
mov
cmp
mov
jo
daa
cli
arpl
add
loop
mov
adc
jnp
xchg
adc
sub
ljmp
lret
out
xchg
add
adc
enter
fsubl
push
repz
js,pt
add
mov
loop
push
ljmp
lods
out
xchg
cmp
inc
call
push
push
lods
lock
scas
add
scas
pop
cs
jbe
jbe
add
ficomps
popf
pop
dec
fwait
outsb
in
popf
mov
inc
imul
mov
mov
jge
and
xchg
jmp
test
adc
call
movsb
fstl
dec
daa
mov
pop
lret
dec
stc
xchg
pop
loop
adc
popa
out
das
hlt
xor
push
sub
or
mov
push
lds
xor
out
mov
sbb
fs
in
ret
lret
je
xchg
cmpxchg
push
push
pop
loopne
adc
and
mov
adc
lcall
jle
mov
or
adc
call
add
jmp
or
jmp
pop
xor
popa
or
test
mov
mov
scas
mov
push
lret
and
pop
inc
in
adc
fistl
ret
sti
outsl
into
add
dec
outsb
adc
jno
dec
xchg
xor
xchg
and
xorb
data16
or
xchg
push
hlt
out
sahf
popl
insb
and
push
mov
movsb
fcoms
sbb
std
and
call
repz
dec
push
mov
mov
xchg
stos
call
xchg
inc
out
jl
cmpsl
jb
and
hlt
mov
dec
ficoms
push
xorl
pop
mov
or
nop
aas
mov
cmpsb
pop
pusha
mov
push
es
jg
dec
xchg
jbe
pop
or
imul
sti
cmp
mov
jecxz
pop
mov
add
jo
popl
adc
sub
sar
sub
xchg
das
mov
add
push
xchg
pop
loop
jno
cmp
or
push
in
test
in
or
lods
cmp
cs
dec
mov
inc
adc
mov
cmp
fdivr
xor
adcl
je
xchg
sub
in
dec
push
fcoml
cmp
xchg
push
sbb
mov
jg
ja
dec
aad
pusha
aad
push
cmp
and
dec
dec
and
or
sub
xchg
lods
and
inc
push
shrb
enter
fldcw
mov
out
cmp
adc
lret
je
in
xor
jecxz
rorl
insb
hlt
movsl
sub
bound
push
push
iret
dec
aaa
inc
rcl
fwait
lock
jae
pop
xchg
push
xchg
adcl
or
sub
cld
and
sub
mov
mov
pop
cmpsb
push
fsubs
push
adc
push
sbb
cmp
mov
jno
mulb
cmp
adc
je
adc
jge
jnp
inc
sbb
xchg
mov
sbb
jnp
lahf
and
ret
sahf
fiaddl
cmp
inc
adc
sbb
or
pop
sbb
inc
insb
mov
sbb
and
hlt
mov
ficomps
shrl
outsl
dec
inc
incl
enter
jb
arpl
dec
mov
fisubrs
jmp
pop
jmp
mov
and
call
lret
in
add
and
bound
stos
push
rclb
xor
jno
fildll
jmp
push
xor
shrb
das
jbe
cli
xchg
nop
mov
lcall
das
nop
or
repz
dec
sbb
es
pop
jl
rcl
dec
xor
mov
and
lods
pop
fstpl
scas
inc
xor
push
sub
cwtd
loopne
push
jns
dec
sar
mov
lcall
fnstsw
cmp
outsb
add
xorl
xchg
push
in
sub
mov
push
sahf
cld
test
in
add
pusha
and
sub
cmpsl
insb
iret
insl
inc
mul
repz
jmp
sub
adc
jg
jne
stos
cmp
scas
add
mov
and
xlat
cwtl
ja
push
bound
push
xchg
push
mov
cwtl
adc
mov
xor
cld
mov
js
cmp
fcmovu
push
addr16
lods
dec
into
add
adc
mov
shlb
lcall
mov
outsl
xor
inc
sahf
lahf
stc
leave
sarb
sub
lret
dec
nop
shlb
xor
test
mov
xchg
mov
add
jo
cmp
divl
mov
sub
mov
jo
insb
push
xorl
pop
inc
jle
pop
loope
fidivrs
xchg
adc
jmp
lods
jmp
jecxz
aas
xchg
xchg
movsl
stc
mov
aam
jge
fld
cmp
xchg
mov
mov
jno
js
aam
inc
imul
test
test
arpl
mov
jne
xchg
inc
mov
xchg
sbb
fistps
xchg
push
sarb
adc
add
imul
js
jbe
mov
xchg
jmp
rorl
sbb
insb
mov
ret
imul
cmp
aad
dec
jns
push
outsl
jns
jl
sbb
jg
loop
cltd
lahf
rcrb
pop
cmp
jecxz
cmpsb
rorb
jecxz
or
mov
pushf
adc
xchg
or
mov
aas
fistpl
add
and
mov
cmpsb
mov
outsl
out
mov
add
popa
xor
xor
popa
pop
pop
into
dec
clc
popf
mov
xchg
movsl
iret
insb
shll
call
stos
out
inc
cli
scas
rcrl
inc
xor
mov
cmp
sahf
cld
jnp
das
or
sti
push
mov
negl
push
add
xchg
push
mov
push
mov
loop
adc
jnp
add
fisubs
jecxz
mov
mov
subb
jecxz
mov
sub
lock
pop
sbb
sub
ds
add
cmp
jae
loopne
xchg
mov
fsts
aas
loope
and
out
in
and
aas
mov
mov
cmp
xor
fimuls
ljmp
aad
aam
ja
jnp
lcall
out
das
jns
std
jmp
ret
int3
mov
xchg
js
fnstsw
dec
or
xor
das
mov
mov
pop
pop
mov
ret
jb
add
jle
fmull
jmp
jp
aam
outsl
mov
mov
add
mov
rorl
out
jmp
pushf
sbb
xchg
jb
jmp
push
push
psubsw
jl
push
scas
cmp
aad
jp
mov
aad
stos
je
ljmp
inc
inc
lods
xchg
and
fisubs
xor
testb
inc
adc
and
xor
push
or
lds
xor
stos
jl
jns
fistpll
adc
insl
gs
xor
pop
pop
jnp
imul
shll
xchg
loop
mov
inc
sub
roll
cld
add
insl
lods
pop
je
into
or
out
les
cmc
xchg
dec
cmpsb
leave
cmp
hlt
add
ljmp
mov
push
stos
jmp
sbb
mov
insl
pop
mov
jmp
lods
sub
adc
sub
lahf
clc
test
fsubrl
pop
or
pop
arpl
arpl
les
mov
dec
aad
push
insb
push
call
sti
xchg
cmpsb
cmpsl
cmp
mov
inc
pop
fcomps
add
sbb
and
cmp
in
ss
mov
add
mov
and
out
sub
add
decb
insb
add
push
pop
and
sbbw
iret
inc
or
addr16
push
dec
jbe
inc
pop
xor
push
xchg
stos
sub
cmp
pop
xcrypt-ecb
cmpsl
comiss
out
inc
ja
ret
test
notb
loop
int
mov
jno
dec
mov
sahf
insb
or
ss
jp
dec
fisubs
push
and
adc
int
loopne
or
pop
aam
int3
popf
gs
or
nop
mov
pop
push
xchg
pop
jge
push
stc
jl
pushf
aam
lds
inc
pop
int3
arpl
insl
pop
sub
mov
xchg
mov
enter
or
push
push
test
cwtl
shll
sub
adc
insb
out
data16
mov
add
std
inc
rclb
stos
std
ss
mov
sbb
push
ror
pop
in
sbb
fdivl
adc
ss
std
xchg
push
cmp
dec
js
xchg
jb
hlt
add
pop
test
jne
adc
xchg
mov
push
gs
outsb
mov
jle
sbb
cmp
mov
lds
sbb
jp
push
xor
xchg
test
adc
fidivrl
dec
daa
add
cmp
mov
mov
lea
leave
or
jo
mov
pop
mov
inc
and
jmp
negl
rcr
lea
mov
rcrl
xchg
mov
dec
arpl
adc
or
fcoms
cmc
adcl
cltd
fwait
mov
pop
xchg
sbb
aam
cmpsb
insl
mov
pop
mov
stos
stos
les
adc
push
push
loopne
xor
aaa
jp
jo
push
addr16
dec
mov
pop
pop
pop
leave
xor
xchg
test
jecxz
mov
test
mov
aam
test
popf
icebp
aad
ja
hlt
int
insl
stos
loop
rcrl
jle
cmp
inc
pop
pop
into
data16
pop
mov
imul
aaa
fs
test
rcll
jge
lcall
mov
push
jle
arpl
sbb
jmp
rcll
test
dec
movsl
std
lcall
dec
jbe
or
popa
jg
in
in
dec
jmp
cmp
outsb
fistpll
jbe
filds
cs
pop
inc
jb
jns
lcall
aam
jne
fmull
in
aad
mov
jl
fmuls
and
mov
bound
and
fldt
pop
nop
iret
aam
dec
cmpsb
lds
scas
dec
nop
mov
in
enter
nop
sub
jp
rol
pop
int3
dec
push
mov
cmp
push
ret
and
jnp
inc
pop
and
mov
sub
sub
popf
pop
loopne
adc
loopne
loop
mov
mov
xchg
sub
mov
sub
out
cmp
popf
pop
ss
mov
sub
xchg
jae
sub
sbb
dec
sub
fwait
lcall
sbb
test
pop
inc
mov
mov
mov
cmp
xor
or
data16
fbld
pop
mov
mov
pop
push
cwtl
aam
adc
xlat
repnz
or
cltd
inc
push
popa
jp
fsts
xchg
sti
push
adc
dec
repnz
mov
into
mov
out
mov
mov
popl
sbb
sub
mov
scas
and
icebp
mov
arpl
rol
ss
test
aad
pop
mull
adc
cmp
sbb
push
xchg
cwtl
sub
sbb
stos
dec
clc
xor
dec
add
jecxz
push
inc
push
ficomps
mov
or
mov
push
stc
mov
out
mov
les
das
adc
fisttpll
mov
dec
jnp
adc
adc
mov
jmp
scas
jb
fcmovnbe
std
add
inc
fsubl
or
push
repnz
add
stos
pop
xchg
bound
into
inc
and
outsl
negb
sbb
insb
test
push
push
push
or
repnz
ljmp
int
jno
dec
xchg
jno
cwtl
clc
dec
pop
mov
test
sahf
mov
bound
outsb
cmp
lds
stos
sub
lret
dec
pop
outsb
xchg
stos
loopne
mov
test
add
rcll
mov
mov
cmc
insb
popa
aam
roll
cmpsl
insl
sbb
test
xor
test
aaa
sbb
push
adcl
or
pop
loopne
jl
movb
pushf
cmp
sti
das
jb
jnp
and
dec
stos
sub
jbe
pop
pushf
loope
xor
sti
sbbl
mov
mov
ja
pop
mov
push
push
lods
push
jl
imul
xchg
jne
push
stos
sarl
jne
test
and
xchg
add
aad
mov
mov
je
movsb
xchg
mov
pop
pop
repnz
mov
mov
popf
scas
add
sti
fs
mov
jno
adc
std
dec
pop
loop
out
mov
push
pushf
pop
stc
sub
dec
repnz
nop
xor
xor
inc
adc
push
xchg
cltd
mov
and
das
clc
stc
adc
pop
xchg
popf
pop
jmp
stc
xor
movsb
push
ret
push
mov
mov
dec
push
adc
fcom
out
arpl
jmp
and
push
jne
scas
neg
adcl
call
iret
dec
imul
or
inc
jmp
inc
scas
push
push
xchg
pusha
cmp
add
loop
mov
testb
sahf
out
jmp
xorl
cwtl
xor
pop
pusha
faddl
push
xchg
ret
bound
scas
pop
pop
mov
cmp
xor
sbb
jg
fcoms
dec
scas
arpl
ds
xchg
imul
sub
xchg
pop
push
pop
mov
test
pop
mov
inc
popf
scas
div
jne
int
cld
inc
lock
lods
data16
jecxz
aad
jge
push
adc
xchg
cmp
loopne
daa
fsubrl
push
dec
lea
push
add
es
sbb
adc
sub
cmp
mov
stc
imul
adc
xchg
int3
pusha
stc
adc
pop
or
scas
cli
mov
jle
fs
inc
add
mov
inc
enter
cmp
dec
push
inc
mov
inc
idivb
mov
xchg
out
jnp
repnz
mov
mov
lock
push
pop
lret
loop,pt
loopne
push
add
pop
mov
filds
and
arpl
push
mov
mov
and
in
jp
jns
pusha
mov
mov
cmp
mov
popa
xchg
mov
bound
loope
cmp
popa
dec
mov
sti
icebp
add
mov
pop
xchg
mov
jae
lret
testb
lcall
jnp
pushl
testl
or
and
dec
popf
dec
jae
cmova
mov
mov
mov
pop
add
sub
insb
cmp
mov
xor
add
xlat
xchg
rcrl
das
push
adc
sub
dec
and
fstps
push
mov
je
mov
roll
fwait
pop
cli
hlt
add
jp
sub
movsl
das
test
adc
inc
or
idivl
lret
lock
mov
sub
popf
out
insl
loope
scas
roll
in
adc
or
mov
xor
shrl
fcomps
fstpl
in
xor
adc
cmpsl
rolb
mov
mov
arpl
mov
xchg
lods
fmull
fisubrs
insl
jmp
ret
cmp
jl
imul
cs
es
pop
jle
cmp
push
fucomi
je
sbb
cmpb
pop
hlt
mov
rol
arpl
sbbl
in
jl
das
lcall
sub
mov
jnp
xchg
dec
mov
notl
sbbb
ljmp
or
mov
push
fisubl
mov
xchg
aam
cmp
dec
das
add
fidivl
xchg
mov
push
sbb
rcrl
cmp
mov
hlt
fwait
or
je
pop
js
insb
dec
xchg
pop
movsb
xor
fsubs
sub
xor
imull
aaa
pop
push
pop
cmc
cltd
call
call
mov
mul
ljmp
dec
les
inc
iret
push
add
out
scas
push
in
mov
fidivrl
adc
inc
cmpsl
xor
pop
xchg
je
fwait
jge
mov
sub
cli
jae
xor
jb
push
es
lods
dec
inc
test
and
or
push
xor
imul
xor
aam
test
ret
add
dec
push
mov
fsubrl
dec
insb
push
jne
adc
and
push
hlt
pop
gs
pop
add
dec
popa
jbe
or
cli
pop
ss
jecxz
mov
iret
dec
fstpl
jae
aaa
test
push
xor
xchg
inc
sub
fbstp
inc
mov
and
fldl
arpl
push
dec
jp
and
repz
bound
mov
ret
adc
pop
fstl
fildl
lea
shr
mov
sbb
dec
clc
sub
adc
fisttpl
push
sbb
sub
pop
or
inc
imul
xor
cmp
test
mov
mov
stos
or
pop
mov
dec
or
pop
jp
xor
add
pop
jne
and
xchg
decb
push
cmpsb
testl
push
sub
and
adc
outsb
shrb
mov
or
into
test
repz
cs
mov
incb
and
jo
mov
loope
call
or
das
dec
ficomps
sbb
fldt
nop
iret
cmp
scas
out
pop
iret
out
idiv
stos
jge
jb
xchg
cmp
fisttpl
sbb
cmp
fistpll
and
dec
pop
and
fstps
pop
aam
in
cmp
cmp
sti
inc
sub
in
mov
mov
data16
jno
scas
punpckhbw
xor
push
sti
shll
aam
sbb
pop
mov
add
fwait
mov
xchg
mov
mov
push
sub
cmp
or
xor
mov
lea
into
sbb
popa
test
add
fsts
pop
add
cli
jb
divl
push
lea
in
mov
mov
inc
dec
mov
mov
xor
pop
or
rclb
pop
shll
add
fwait
adc
stc
pushf
icebp
push
iret
jns
inc
sahf
xchg
inc
stos
stos
push
and
mov
hlt
imul
mov
mov
mov
mov
test
sbb
jmp
sahf
dec
cmpsb
mov
jmp
cli
push
adc
pop
aas
adc
jge
push
leave
xlat
pop
ljmp
push
jb
fsubrl
sub
sbbb
adc
and
lcall
rep
mov
dec
inc
orb
pop
aaa
ljmp
xchg
push
cmc
aam
mov
jo
sub
adc
rcrb
aad
cmp
push
adcl
jle
mov
mov
mov
test
inc
sub
mov
dec
out
pop
mov
fstl
xor
faddl
out
or
or
js
or
xchg
sub
add
mov
push
xlat
sbb
in
cmp
dec
loop
ds
repz
push
or
sar
test
fsts
nop
das
xor
divl
push
inc
pop
xor
pushf
das
cmp
mov
ds
push
cmp
xor
cltd
fwait
jge
mov
push
imul
pop
cmp
or
mov
mov
insb
or
mov
dec
xchg
or
cltd
cltd
add
ja
xchg
xchg
je
sbb
mov
jp
pushf
rcll
push
test
imul
pusha
push
xchg
and
aad
rcrb
aaa
mov
cmp
and
in
inc
lods
sub
cmp
push
push
add
jns
std
cmp
not
aaa
orl
dec
sbb
sub
cmpsl
jnp
pushf
jne
push
or
jno
inc
loop
and
leave
shll
jl
ja
insb
lret
push
push
in
jecxz
cmp
mov
loope
sub
mov
in
outsb
movsl
lahf
loop
movsb
clc
cs
mov
lods
fildll
jns
push
pop
ljmp
pusha
lcall
and
xchg
or
lea
hlt
inc
dec
gs
pop
inc
sub
add
fcoms
xor
addr16
cmp
imul
popf
aas
decb
in
lods
xchg
in
fcmovne
jl
jle
sahf
xchg
in
mov
js
dec
gs
cli
sbb
shlb
icebp
popa
push
ss
call
mov
inc
inc
popf
add
leave
mov
adc
repnz
das
das
jecxz
jecxz
and
in
jnp
mov
ficoms
cmp
mov
sbb
pop
loope
divl
andl
cmp
cltd
push
mov
cmp
movsb
jl
loop
mov
mov
xor
xchg
fisubrs
sub
fs
jle
iret
pop
inc
scas
mov
sbb
in
or
decl
and
sbb
dec
cmp
int3
roll
sbb
pop
les
sahf
into
fwait
cmp
xchg
dec
mov
test
cs
jnp
sbb
xchg
xchg
xor
movsb
dec
xchg
jbe
outsl
stc
insb
stos
fstpt
in
adc
popa
dec
leave
ret
out
jmp
gs
int3
jae
pop
mov
dec
test
addr16
add
out
adc
lret
fisttpl
int
enter
lods
xor
in
sub
fdivrl
push
mov
push
movb
js
in
push
xchg
xchg
jae
into
push
sbb
add
mov
pop
mov
or
inc
out
lcall
jo
xor
push
xor
scas
or
xchg
mov
adc
popf
or
inc
push
push
sub
push
or
mov
jmp
sub
into
pop
sub
sbb
fs
or
out
lds
subl
or
movsl
hlt
roll
jge
xor
inc
dec
add
mov
ds
outsl
aas
add
dec
mov
lods
pop
mov
dec
cld
adc
movsl
std
cltd
xor
xlat
push
xlat
pop
fwait
outsl
hlt
or
sub
mov
push
mov
mov
push
out
mov
aad
xchg
mov
lods
xlat
adc
leave
sub
repnz
lds
pop
dec
lds
lahf
int3
cltd
lods
add
add
or
enter
inc
add
pop
subl
out
xchg
in
or
inc
movsb
sbb
movsb
or
sub
mov
cmp
or
sbbl
jmp
out
imul
ja
mov
addr16
and
inc
addr16
dec
aaa
mov
out
stos
add
ret
xor
cmp
mov
lcall
gs
pop
xchg
mov
popf
lahf
xor
push
fcomp
xor
mov
add
and
icebp
mov
mov
rcrl
sti
xlat
and
cmpsl
ljmp
scas
ja
jne
fisttpll
sti
mov
je
add
add
push
push
inc
hlt
pop
xchg
cwtl
loopne
insb
jbe
loope
mov
jne
jns
negb
rcll
out
ret
xchg
xor
std
mov
pop
loopne
std
adc
xor
inc
aaa
xor
scas
dec
es
fists
daa
push
inc
call
call
test
loop
xchg
pushf
nop/reserved
jae
mov
pop
pushf
insb
pop
mov
aaa
xchg
aaa
mov
adc
nop
mov
jne
mov
out
mov
cltd
cwtl
imull
xlat
push
xor
rclb
adc
xchg
outsl
sahf
or
outsl
xor
cltd
cmp
nop
dec
push
popf
jb
imul
int
dec
inc
enter
rolb
push
pop
or
inc
mov
lock
test
inc
push
lret
shr
adc
mov
out
xor
pop
sub
adc
jae
in
pop
pop
lret
jmp
fstpl
leave
mov
or
and
mov
pop
or
pop
push
push
jns
adc
mov
loop
pop
push
cmp
sarl
and
jl
mov
mov
mov
and
into
pusha
and
data16
sub
dec
cmp
flds
lret
or
sub
pop
dec
mov
in
jnp
push
clc
andl
dec
mov
loopne
outsl
push
adc
out
daa
sub
lods
xchg
mov
outsl
xchg
push
cld
cmp
cmp
je
cmp
xor
pop
into
stc
pop
adc
and
lcall
repnz
repz
stos
push
call
push
test
sbb
lar
loop
mov
cld
jb
pop
out
mov
fldcw
repz
pop
lea
mov
xor
mov
xor
push
lods
sbb
addr16
mov
jnp
or
adc
fldl
mov
mov
lock
mov
pop
pop
into
arpl
sub
inc
and
and
jle
cmp
or
inc
dec
aaa
add
jo
in
repz
lock
test
imul
fs
sbb
fstpl
jmp
add
in
fisttpl
shr
xchg
jae
sti
fcoms
or
test
ret
repz
gs
pop
sub
push
lcall
jb
jae
mov
push
icebp
lock
aas
xchg
arpl
shll
mov
outsb
out
arpl
sbb
cltd
pop
test
fidivl
fdivl
dec
inc
jbe
dec
mov
jp
jns
or
dec
insb
lods
imul
sbb
test
jo
pusha
stos
xor
hlt
je
testl
rolb
sub
add
dec
push
fwait
sbb
push
int
rcl
jmp
pop
leave
mov
into
xchg
cmp
push
orb
mov
andb
dec
js
outsl
in
cld
jl
adc
cmp
lret
mov
push
cmp
jno
test
jle
hlt
pop
mov
adc
stc
push
js
mov
xor
sub
add
fsts
repnz
add
rcr
xor
rorl
or
shlb
shl
mov
mov
xor
cmp
aad
xor
sti
je
mov
pop
cmp
sub
and
dec
clc
push
pop
dec
rol
adc
cmp
jae
push
add
jae
jnp
add
sbb
and
ficoml
mov
mov
push
lea
push
and
rcrl
ret
and
pop
jle
cmp
ret
push
jg
xchg
push
adc
sub
outsb
lret
mov
sub
jg
aam
push
outsl
and
cmpsl
cs
mov
shrl
mov
out
je
add
push
and
lret
pop
and
mov
out
fadds
dec
es
test
mov
mov
rcrl
xor
sahf
pushf
movsl
pop
mov
jp
pop
dec
dec
push
sahf
mov
add
push
aaa
xor
xchg
in
ficompl
cmpb
sub
xchg
popf
fcmovb
ret
adc
pop
aas
fwait
shll
jne
or
shrb
inc
fnstcw
icebp
dec
inc
xchg
push
sub
sbb
jne
xor
insb
jns
inc
stc
mov
adc
and
jns
repnz
es
or
cmpsl
dec
inc
push
shll
aaa
imul
iret
push
aaa
cmc
push
inc
jp
fnstenv
jg
push
push
mov
sub
sbb
in
shll
andl
or
pop
mov
decl
inc
into
push
xchg
mov
or
scas
test
xor
jp
arpl
adc
mov
sub
das
xor
push
movsb
push
imul
mov
lock
in
fsubs
out
pop
jp
ds
aad
icebp
loope
insl
adc
xchg
addr16
cmpsb
ror
test
out
lds
cmp
mov
xchg
or
fdivl
fwait
jle
pop
nop
push
pop
and
adc
mov
scas
ljmp
sub
sbb
pop
push
sub
fcmove
dec
jbe
dec
popa
mov
cld
ret
mov
xchg
idivl
clc
shll
mov
xchg
dec
or
fsubrl
into
gs
arpl
lcall
lret
jnp
mov
insb
or
push
cld
dec
cltd
iret
leave
fadd
push
lea
fmuls
cmp
push
nop
sub
lods
push
gs
loop
jge
add
aaa
mov
mov
dec
jae
loope
and
mov
cmpsb
lahf
sub
mov
adc
lcall
cmp
cmc
movsb
scas
cmp
ss
outsb
inc
add
dec
mov
or
repz
mov
mov
inc
fimuls
rcll
xchg
cld
add
xchg
bound
cmpsb
xchg
jmp
sub
loopne
add
rorl
dec
sub
jno
scas
pop
and
cltd
add
cmp
mov
ds
mov
cltd
imul
ljmp
or
leave
push
mov
and
jge
pavgb
jbe
mov
mov
or
xchg
dec
cmp
adc
les
dec
dec
push
mov
add
cmovns
out
rol
out
push
xor
sbb
flds
fs
fdivr
nop
cmp
jae
fistl
sarl
fdivl
addr16
lret
out
insl
std
cmp
loope
jp
inc
lret
jns
fwait
jae
xchg
fsubr
fadds
xor
mov
adc
int3
and
inc
push
bound
imulb
jmp
xchg
imul
mov
mov
lods
imul
xor
stos
mov
inc
inc
out
jno
and
jge
rorb
pop
lea
outsl
shr
xchg
lahf
xor
movsb
dec
insb
cmp
and
aaa
cmp
xchg
mov
cmp
sub
in
das
addr16
movsb
in
jge
add
sti
sbb
in
cmp
bound
cli
cs
test
dec
scas
jg
push
into
pop
orl
xor
jge
jbe
mov
andl
popf
sbbl
jge
push
ret
pop
xchg
cmp
jo
mov
jbe
test
inc
add
pop
jmp
je
movsb
push
lods
arpl
fnstenv
fisubrs
push
cmpsl
lds
cli
adc
ss
inc
std
pop
dec
sbb
xchg
fistpll
je
out
into
cmc
bound
nop
imul
mov
ljmp
mov
push
outsb
enter
lcall
mov
xchg
mov
add
in
fs
push
sbb
adc
sub
mov
and
mov
bound
sbb
inc
decb
inc
insl
sub
sbb
and
mov
sub
fmul
out
jb
stos
in
scas
inc
lcall
clc
ficompl
or
loop
addb
insb
dec
and
dec
ljmp
and
and
data16
xchg
test
jle
notl
inc
push
mov
ds
cmpsl
out
ja
dec
fwait
pop
stos
push
or
lahf
je
xchg
idiv
out
cmp
mov
lds
repnz
and
mov
push
dec
xor
pop
jp
addl
fs
fdivrl
and
inc
push
jmp
stos
and
test
xlat
test
dec
pop
sub
or
sti
cmp
sub
clc
insb
fidivrs
inc
jo
sbb
fucom
into
je
mov
inc
mov
xchg
mov
xor
or
xor
gs
ljmp
out
shr
lret
ss
rorl
pop
sbb
mov
dec
xchg
and
mov
jp
push
adc
sbbl
push
jecxz
lret
test
cmpsb
adc
scas
testb
cmp
push
out
lods
pop
push
pop
mov
pushf
adcl
mov
test
ljmp
cmp
nop
sub
popa
ss
adc
mov
or
subb
push
scas
push
fsubr
xchg
add
cmp
xchg
sbb
and
jge
add
repz
add
jnp
xchg
popa
push
xor
push
xchg
mov
shrb
fsub
imul
sbb
xor
out
jge
jle
movsb
mov
push
ret
in
sub
fistl
sti
pop
or
dec
not
xor
xchg
cld
mov
lret
add
sbb
pop
and
fstl
mov
jle
mov
sbb
aam
fidivl
dec
ret
mov
fmul
mov
dec
fidivrl
adc
dec
inc
dec
pushf
cmp
cltd
leave
mov
push
inc
repnz
data16
dec
in
pop
stos
pop
push
xor
lret
sbb
lods
jnp
inc
fbstp
mov
mov
jmp
jge
pop
jb
ja
iret
push
das
jnp
push
mov
mov
test
fmuls
fiaddl
push
dec
mov
loope
push
mov
pop
mov
pop
imul
fldlg2
sbb
stc
and
dec
or
and
es
adc
stos
mov
std
stos
dec
loopne
xchg
into
aas
cld
cs
sub
sub
fwait
into
mov
pop
mov
in
stos
push
les
std
aaa
arpl
fimuls
addl
ljmp
jp
fld
andb
cmp
jecxz
scas
ss
lea
aaa
cmp
out
mov
jmp
mov
jmp
repz
adc
mov
es
insb
xchg
loopne
ss
aas
dec
orl
bound
scas
pop
popa
pop
lea
mov
add
nop
mov
pop
jb
lcall
pushf
jmp
repz
or
inc
stos
adc
stos
insl
sbb
cmpsb
push
call
mov
cmpsb
leavew
pusha
imul
fwait
adc
or
fsub
loop
mov
xor
movq
jb
leave
and
mov
leave
mov
adc
popf
int
lods
and
out
das
repnz
dec
bound
push
in
dec
mov
mov
cmpsl
mov
xor
es
push
imul
xchg
mov
dec
insb
nop
jb
movsl
lahf
xchg
outsb
or
insb
mov
ja
pusha
in
fnsave
xlat
lods
or
and
adc
xor
xchg
fimuls
jb
test
ss
pop
fcoms
das
cmp
mov
add
mov
adc
pop
mov
lods
in
cmp
loope
xor
lds
lds
xor
js
mov
shl
sbb
jg
mov
sbb
lods
xchg
inc
jne
cmp
sbb
sub
xchg
mov
test
inc
jl
sbb
push
mov
leave
mov
sub
dec
popf
xor
imul
arpl
cmp
sahf
lods
std
les
jno
daa
xchg
inc
push
repnz
das
das
movsl
mov
cmp
add
dec
rcrl
shlb
popa
pop
pop
mov
push
testb
adc
push
lods
jge
pop
push
cmpsl
mov
fs
mov
jmp
cmp
popa
pusha
je
inc
push
xchg
rorl
jp
fldt
clc
in
test
aam
push
mov
ss
mov
subb
mov
inc
setp
pop
pushf
adc
adc
nop
add
xor
enter
cmp
pushf
shll
nop
in
jnp
outsl
dec
in
xchg
lods
mov
dec
jmp
and
addr16
dec
outsb
pop
adc
mov
push
das
roll
xchg
mov
dec
inc
les
in
mov
mov
loopne
les
cmp
clc
add
leave
push
iret
jg
std
loope
les
fldt
pop
aas
inc
jns
cmc
pop
loopne
add
ja
popf
sub
test
pop
push
jge
xchg
and
enter
je
and
xor
aad
aam
mov
hlt
mov
push
mov
test
mov
adc
push
insl
pop
jp
mov
lods
repnz
test
ret
ds
jge
into
outsb
dec
or
fisttpl
sbb
lret
inc
out
in
iret
pop
mov
repz
push
dec
nop
lahf
cmp
int
bound
scas
push
sub
pop
icebp
adc
dec
lcall
mov
add
stc
adc
fimuls
loop
out
icebp
push
cli
add
mov
cmp
mov
cmp
mov
adc
pop
and
rcl
das
mov
stos
inc
loope
push
gs
adc
rclb
jge
insl
and
iret
lods
outsb
jnp
mov
stos
jo
push
loop
imul
xor
inc
clc
push
xchg
es
lds
mov
les
push
inc
clc
dec
outsl
sub
sub
adc
sub
ja
mov
bnd
mov
aam
and
mov
mov
mov
aam
outsb
and
scas
outsl
mov
clc
rclb
enter
std
rcrl
pop
mov
and
mov
push
out
mov
xlat
xchg
push
int
pop
jmp
cmp
ret
jmp
cmpl
test
imul
or
sub
js
outsl
mov
sub
add
fwait
mulb
divl
xchg
movsl
js
adc
std
pop
add
or
int3
sub
stos
rcrl
jo
daa
aaa
add
sti
add
push
es
gs
xchg
mov
out
repnz
shll
sub
sbb
addr16
inc
pop
scas
jns
xchg
mov
arpl
or
imul
jp
out
in
pop
push
or
call
fisubs
mov
rcrl
shr
aaa
mov
sbb
fbstp
dec
xchg
adc
fmull
cmp
xor
xor
jae
in
and
and
sub
call
pop
dec
xchg
cmpsb
mov
and
jmp
bound
cltd
mov
jno
jno
jno
jo
add
inc
lock
mov
das
imul
das
push
mov
inc
test
pop
icebp
adc
or
ret
addr16
addr16
dec
jo
mov
cmp
fnsetpm(287
int
pushf
aas
mov
or
add
mov
fdivrl
lods
out
test
shrb
mov
jae
xchg
add
push
cmp
ret
pop
push
xor
ret
fst
inc
lods
movsb
mulb
aam
cmpsb
jp
popf
loopne
xor
pusha
adc
sub
nop
push
jne
dec
and
pop
cli
and
jo
mov
test
mov
or
inc
clc
cmpsb
aad
stc
stos
scas
out
add
ret
adc
jmp
xor
jl
popf
jg
sub
push
and
and
out
push
shrb
testb
xor
stos
pop
cwtl
mov
jg
shlb
stos
iret
push
and
xchg
mov
add
mov
add
or
enter
pop
push
mov
and
mov
mov
shr
mov
std
loope
pop
cmp
or
pop
dec
xor
sub
push
out
out
xor
xchg
outsl
pop
data16
xchg
les
cs
lea
mov
mov
in
out
dec
pause
dec
je
std
addps
dec
nop
out
push
and
outsl
out
std
dec
and
arpl
mov
iret
push
stc
mov
fiaddl
pop
xor
dec
cmpsb
mov
pop
lret
sbb
pop
mov
or
je
fs
fidivrs
jb
cli
daa
fdivrs
jp
mov
in
sbb
dec
and
adc
popf
outsb
leave
xor
or
fldenv
dec
popf
adc
loope
pop
scas
addl
mov
adc
push
int
push
out
xlat
sti
repz
inc
cmp
xchg
mov
stos
mov
add
and
jb
lods
push
jge
mov
ret
in
movsl
cwtl
loop
lahf
cwtl
and
movsb
ret
ret
xor
mov
jns,pn
xchg
cmp
jg
stc
popa
movntps
sub
jp
jns
mov
mov
mov
fistl
cmpsl
lock
mov
push
xor
lods
inc
inc
push
sbb
mov
jecxz
out
mov
sbb
sbb
cmc
in
xchg
push
fstl
test
stos
sub
outsl
fadds
daa
ds
call
dec
fdivrp
jmp
cmpsl
popf
pop
fs
mov
notb
in
rcl
pop
cmpsl
sub
addr16
mov
push
xorb
lcall
or
ds
jnp
hlt
inc
inc
popf
stos
inc
jmp
jmp
stos
jg
sbb
imul
mov
mov
push
imul
cmp
mov
hlt
jmp
pop
pop
mov
mov
xor
jnp
jns
xor
popa
outsl
cmp
inc
push
mov
pop
ss
adc
mov
xchg
pop
jb
lret
shrl
mov
test
xchg
add
or
mov
insl
mov
xchg
xor
xlat
sub
jo
fdivl
lods
in
jp
xchg
add
cmpsl
xor
sahf
je
mov
repnz
xchg
outsl
mov
mov
mov
cwtl
stos
lds
or
mov
sub
ljmp
aas
sbb
std
ret
aad
push
lock
push
fcomip
pop
or
push
jecxz
cmp
mov
scas
xchg
fwait
rol
not
add
push
adc
push
cmpsl
lea
jns
lock
outsl
insb
shrb
or
ja
dec
sub
loope
push
lods
lretw
push
jl
jne
push
pop
icebp
pop
push
inc
std
xor
lret
repz
int
push
stc
lock
cmpl
adc
pop
pop
mov
scas
faddp
cmp
mov
jnp
jg
out
ss
jno
test
sbbb
jmp
mov
pop
test
cmp
mov
jae
mov
fisubl
adcb
jnp
mov
mov
test
dec
faddl
shl
bswap
xlat
push
adc
or
dec
xchg
and
cli
ret
arpl
lods
inc
xchg
jle
stos
dec
pop
and
addr16
fisttps
mov
mov
xchg
mov
ss
pop
mov
jg
cwtl
push
and
or
stc
jg
and
adc
je
daa
xor
in
push
jmp
jno
xor
dec
movsl
add
push
clc
cmpsb
or
fimull
testb
push
aad
pop
inc
subb
adc
data16
or
xor
inc
mov
cltd
mov
mov
stos
mov
dec
iret
mov
or
loope
mov
lds
outsl
or
mov
sahf
stos
repnz
aas
cmp
or
add
pop
imul
ljmp
mov
cli
adcl
jns
subl
adc
inc
jg
mov
nop
jmp
inc
popf
stc
inc
ja
add
popa
mov
scas
mov
aaa
popa
dec
in
arpl
sar
lahf
lcall
push
jno
mov
std
cmpsl
and
fucomip
in
mov
push
cmp
call
jge
and
adc
insb
xchg
lods
push
pop
scas
push
repnz
dec
scas
sub
fimull
mov
mov
rolb
and
fiadds
dec
pop
sub
or
cmp
xchg
fndisi(8087
pop
ret
and
sub
rcll
clc
nop
pop
jmp
lcall
jecxz
inc
dec
out
aas
inc
and
xchg
jmp
push
push
lock
mov
ds
iret
jne
add
aaa
lods
inc
stos
adc
mov
push
ret
pop
movsb
adc
adc
fidivs
cmp
imul
xchg
arpl
and
or
xor
sbb
jae
popf
or
add
pop
sahf
jno
popa
cmc
rolb
mov
aam
in
dec
notl
jmp
mov
pop
inc
lahf
sbb
stc
and
push
je
in
or
divb
daa
test
sbb
push
mov
stos
mov
or
iret
fdivs
push
mov
sub
gs
pop
imul
xchg
cmp
push
jl
icebp
cmp
in
xchg
push
imul
sbb
cld
aad
jecxz
jmp
push
imul
pop
fbld
lcall
ss
lds
out
fwait
into
gs
inc
mov
dec
out
ds
loope
stos
mov
out
and
sbb
pop
arpl
bound
scas
ret
out
dec
and
jle
mov
and
jnp
ljmp
int3
and
fmul
sbb
mov
xchg
das
mov
test
pusha
in
notb
lret
clc
and
les
inc
jbe
cmp
add
add
orl
pop
mov
inc
fiadds
mov
in
or
cmp
inc
inc
leave
mov
lcall
shll
pop
jge
mov
loopne
cld
jmp
push
cmp
out
mov
filds
push
xchg
adc
lahf
xlat
mov
adc
fwait
sbb
xchg
outsb
loopne
jmp
xchg
cmp
imul
stos
arpl
sub
rcrl
lret
andb
in
mov
push
in
sti
call
rclb
jne
add
xchg
test
cwtl
ror
rcrb
adc
ret
lods
stc
cmp
mov
in
dec
mov
adc
xchg
dec
xchg
addr16
mov
or
xor
out
call
sbb
xor
push
jecxz
adc
loopne
cmp
mov
je
mov
mov
idivb
shlb
and
andb
popa
daa
push
push
out
mov
enter
sbb
daa
jl
dec
aam
dec
mov
subl
add
sub
icebp
lods
daa
in
push
mov
add
push
fucomp
cmp
ljmp
les
add
cmp
xor
xor
xchg
adc
add
insl
jne
rcrl
add
jno
lods
cld
mov
dec
out
pop
push
xlat
push
icebp
jb
faddl
pusha
cmpsb
lds
pop
pusha
jge
stos
mov
pop
stos
je
in
mov
adc
mov
jge
jne
mov
sbb
ret
dec
and
jb
inc
pop
mov
scas
cmpsb
dec
nop
cmp
inc
aam
add
dec
push
jge
jl
movq
or
push
call
xchg
cs
jns
xchg
mov
lcall
jbe
dec
cmp
cmpb
bound
xor
loop
mov
call
adc
ja
test
negl
aad
in
and
sbb
mov
popf
sbb
es
jne
outsb
popa
push
nopl
push
pop
adc
push
leave
or
inc
repz
leave
cmc
xchg
add
pop
mov
lahf
cmp
pop
xor
nop
or
jl
shll
xor
lods
ret
call
mov
aaa
mov
ds
adc
shlb
xchg
pop
dec
sbb
sub
lods
mov
jne
pop
xchg
repz
ja
out
hlt
test
shlb
nop
xor
stc
test
mov
or
cmp
pop
push
xchg
bound
dec
cmpsl
in
sbb
hlt
jnp
lods
mov
imul
in
jge
negl
push
adc
mov
les
adc
add
daa
imul
cmp
push
stc
outsb
pop
xchg
bound
arpl
arpl
dec
les
cmp
int
test
insl
lods
cmp
fbstp
inc
das
sub
clc
push
sarl
jge
xchg
aas
out
jno
mull
inc
xor
mov
shll
xchg
mov
shl
mov
lret
cmpsb
outsl
icebp
sub
lods
xlat
hlt
test
fstpt
insl
loopne
xchg
xchg
insb
push
cltd
jb
mov
insl
imul
lahf
ss
out
subb
or
fmuls
out
mov
xchg
out
jmp
mov
mov
jecxz
or
inc
xlat
pop
mov
in
repz
gs
mov
mov
pop
adc
xchg
cmp
cmp
and
loopne
flds
xor
sbb
xor
push
mov
das
or
jmp
mov
jg
sbb
push
in
add
add
xchg
sbb
fnstsw
filds
lahf
movsb
outsl
movsl
loop
xlat
stos
push
cmpsl
adc
in
aaa
in
pop
fistps
hlt
cmp
cmpl
push
push
out
call
jl
or
fs
into
mov
cmp
in
push
loope
jne
push
aas
in
out
mov
jnp
xchg
xchg
push
insb
shll
clc
lods
xor
bound
xchg
inc
hlt
adc
movsb
movsl
test
mov
mov
add
mov
and
pop
sahf
shll
rorb
mov
jl
cmp
push
push
gs
sub
xchg
sub
and
adc
sbb
insl
in
lcall
xor
and
inc
dec
xchg
cmp
in
pusha
in
es
call
jbe
adc
jecxz
aaa
into
inc
movsl
and
jo
pop
pop
je
ficompl
fistps
inc
jbe
push
int
in
xchg
ss
push
nop
iret
push
rep
pusha
cltd
push
xlat
enter
and
movsl
xor
lcall
frstor
movsb
pop
mov
or
xlat
cmpl
ficoms
loop
mov
push
xchg
scas
xchg
cmp
or
push
aaa
inc
sti
fdiv
inc
daa
add
in
stos
loope
mov
aad
cmc
shrl
push
push
and
cmp
mov
out
adc
lret
ret
pop
push
leave
cmp
mov
call
in
xchg
dec
shll
mov
insl
and
mov
icebp
push
sub
aas
lea
ret
mov
ret
out
add
pop
pop
mov
sbb
mov
js
push
mov
lds
out
icebp
fildll
frstor
and
shl
outsl
xchg
clc
hlt
cmp
lods
or
jecxz
bound
mov
sbbl
push
outsb
cmpsb
cmp
push
xchg
mov
data16
stos
outsb
insl
push
call
movd
xchg
adc
fcmovnb
xchg
xchg
adc
push
inc
std
xchg
lcall
adc
pushf
mov
fidivl
rolb
push
cmpsb
sub
xor
add
mov
xor
ret
repnz
mov
xor
outsb
outsb
ss
pushf
stos
sete
stos
xchg
xchg
rorl
and
mov
and
nop
test
mov
cmpl
and
fdivrs
xor
test
pop
fcoms
sub
and
lahf
and
popl
in
inc
adc
imul
lea
xor
adc
sub
jl
mov
dec
sbbl
cmc
mov
shlb
inc
sbb
lds
aaa
jo
in
gs
mov
aad
mov
add
scas
lret
adc
and
adc
int
imul
hlt
je
rcl
jecxz
clc
lea
lea
sbb
or
jb
mov
push
jmp
outsl
pop
jmp
sub
inc
sub
and
mov
inc
and
prefetch
add
or
cli
pop
ljmp
ja
faddl
lock
lahf
pop
les
les
push
lock
xchg
in
push
loop
xchg
jo
dec
and
ja
out
cld
popf
or
aaa
pop
mov
mov
aaa
push
push
pop
js
pop
std
jl
sub
jle
xor
mov
push
fsubl
movsl
xor
hlt
mov
outsb
mov
jg
xlat
dec
loop
pushf
shr
movsl
ja
cwtl
push
test
xchg
xorb
stc
pop
mov
mov
scas
ret
jne
mov
mov
test
nop
lret
fidivrs
jb
data16
bound
mov
loope
lret
test
outsl
imul
jo
mov
or
add
mov
pop
ficompl
mov
das
lret
ja
or
js
aas
test
sbb
jb
aaa
lcall
movsl
and
out
add
mov
and
pop
fnsave
push
in
mov
cltd
adc
clc
scas
jmp
and
cmpsl
test
push
rcrl
lret
jnp
push
daa
stos
inc
std
rcl
fsts
push
sub
and
cs
clc
int3
mov
inc
loopne
outsb
or
or
lahf
jb
sub
test
jb
imul
inc
pop
dec
add
xor
jae
sar
and
sti
mov
fsubl
mov
push
or
sub
aad
lds
int3
sbb
adcl
nop
test
dec
cmp
jb
cmp
xor
enter
xlat
in
mov
outsb
inc
jg
mov
and
pop
pushf
cmpsb
push
xor
jo
xor
fdivrp
xor
inc
pop
outsl
loopne
sub
aad
roll
pop
mov
push
add
or
and
mov
aad
jp
loope
les
mov
pop
inc
out
insb
cmc
clc
add
adc
and
sbb
lock
sub
loopne
mov
cmpsb
das
jo
cld
cld
out
in
xor
lds
jae
mov
cmp
roll
sbbl
mov
push
pop
xor
dec
cmp
inc
xor
movsb
push
or
pop
out
jne
test
imul
int3
pusha
pusha
and
rorl
nop
mov
gs
aad
cs
out
pop
enter
and
mov
xchg
ret
pop
push
mov
mov
fsubrp
pusha
aad
inc
dec
sahf
test
dec
sub
call
sub
push
mov
rol
insb
in
xchg
cltd
sbb
or
aas
jne
repz
loope
cmc
mov
add
cli
add
xor
lock
dec
push
shll
mov
and
dec
xchg
sbb
mov
es
push
lret
jmp
mov
sbb
xor
popf
stc
inc
xchg
cmp
jo
xor
jge
js
xlat
outsl
pusha
cli
insl
xor
icebp
jno
movsl
sub
dec
mov
inc
jmp
test
push
clc
xchg
sbb
imul
adc
pop
ret
pushf
insl
int
lcall
roll
push
mov
in
outsl
or
sub
xchg
dec
dec
inc
fnstenv
out
inc
jg
mov
daa
or
in
sbb
rcrl
dec
inc
pusha
addr16
iret
or
loope
fwait
jl
sub
xor
shrl
jno
aam
sbb
cmpxchg
and
frstor
mov
insl
jmp
lods
or
int
scas
mov
and
movsl
adc
dec
xcrypt-ctr
cmpsl
fmulp
ud1
xchg
fidivl
mov
ret
mov
dec
mov
jns
lret
cmpb
mov
fsubr
mov
test
sahf
dec
jge
rorb
movsl
js
pop
sbb
jne
cmp
orb
popf
in
mov
cwtl
das
or
jp
mov
dec
in
mov
lods
clc
subb
shl
sub
jle
pop
ljmp
in
and
scas
jecxz
cmp
xchg
testl
sar
mov
dec
mov
inc
cmp
insb
dec
sub
cmpl
jne
fsubrl
adc
mov
mov
fst
or
test
imul
mov
cmp
mov
notb
rclb
adc
rcll
cmpsl
xor
out
jo
in
iret
rol
andb
fwait
push
std
out
fwait
mov
adc
shrl
lods
mov
mov
mov
leave
aaa
cmpsl
jmp
imull
in
ljmp
mov
aad
push
sti
sub
xor
mov
xlat
or
scas
pop
imul
imul
xchg
pop
mov
pop
xlat
jmp
add
xlat
lcall
mov
orl
cwtl
cmp
dec
add
insl
fimull
mov
rcll
jno
sub
xchg
mov
xor
clc
loopne
mov
xor
xchg
cli
sub
insl
pusha
insl
adc
jae
enter
sub
repz
pop
stos
decl
decb
sbb
out
outsb
jb
movsl
int
pushf
dec
and
fptan
xchg
ss
mov
xchg
push
call
or
hlt
mov
push
hlt
mov
test
sbb
pop
ds
mov
cs
aam
andb
push
push
loopne
ret
test
shrl
insb
pop
adc
das
add
fdivs
dec
push
xor
inc
jno
add
pop
ffree
or
dec
cli
add
dec
adc
push
mov
mov
cmpsw
or
jge
mov
lds
nop
arpl
dec
sarl
outsl
jle
mov
sbbb
push
imul
pop
out
scas
rcrl
sarl
ficompl
jae
std
fstl
repnz
mov
nop
mov
mov
icebp
mov
or
int
mov
aam
jp
mov
jle
adc
lret
inc
in
in
inc
pusha
adc
mulb
inc
ljmp
cmp
pop
cmp
call
shl
sbb
jge
pop
aaa
push
sbb
push
leave
sub
cmc
mull
or
jne
mov
ds
test
cmp
movsl
adc
pop
mov
mov
out
xlat
fstl
jne
cmpsb
push
pop
loopne
pop
sub
add
sbb
in
in
popa
mov
les
ffreep
pop
ds
cwtl
fs
mov
outsb
jecxz,pn
std
cs
dec
aaa
test
xor
stos
imul
mov
mov
xor
orl
add
mov
xor
adc
pusha
jmp
stos
cmp
or
mov
mov
lcall
stc
iret
icebp
ja
fwait
lret
pop
lcall
adc
adc
mov
mov
int
test
mov
pop
cld
xor
jg
mov
jbe
sub
cwtl
jbe
mov
das
push
push
xchg
ljmp
sub
movsb
pop
dec
int3
jne
sbb
scas
push
mov
shlb
pop
fnsave
divl
lds
mov
jno
inc
mov
movsb
mov
mov
cmp
dec
int3
lods
ds
jnp
int3
movsb
mov
mov
inc
out
or
cmp
lds
outsl
cli
or
subb
xchg
jmp
adc
pop
pop
js
pop
jmp
lcall
jg
repnz
or
nop
or
mov
sub
mov
mov
mov
shlb
mov
loopne
lret
mov
test
das
in
add
lcall
lods
mov
scas
xor
mov
add
into
mov
imul
xchg
int3
mov
lahf
push
xchg
mov
pop
mov
xor
cmp
gs
iret
xor
popf
push
out
ja
xchg
nop
xlat
pop
sti
dec
cwtl
lea
imul
int
test
out
movsb
sbb
jle
pop
xor
dec
pop
repnz
outsb
add
add
dec
inc
sti
inc
cmp
xchg
adc
int
mov
push
xlat
adc
dec
adc
js
or
repz
sub
popa
dec
insl
or
js
mov
fbstp
loopne
aam
push
mov
mov
cmc
fwait
cmc
xchg
hlt
scas
psubusb
leave
pop
dec
sub
xchg
scas
jge
lahf
js
fcoml
jle
mov
mov
stos
call
or
in
jno
push
movsb
adc
stos
adc
leave
dec
xchg
clc
aam
andb
leave
lret
and
jge
mov
repz
gs
out
mov
imulb
sti
es
insl
mov
iret
mov
pop
shlb
jp
add
add
and
inc
xor
orl
hlt
mov
push
nop
fstl
jbe
loopne
scas
cltd
cmpsl
and
lods
iret
or
mov
testb
iret
nop
adc
pushf
add
iret
xor
aam
mov
inc
incl
cwtl
popf
pop
sub
push
mov
xchg
sub
mov
pop
mov
divl
mov
sbb
and
inc
out
xchg
jns
sbb
ret
loopne
sub
mov
loope
xchg
fwait
xchg
les
or
dec
clc
xchg
movsl
daa
jne
cli
push
mov
fidivl
and
mov
pop
jae
data16
cmc
mov
mov
dec
lret
roll
lret
addl
out
push
out
jnp
push
gs
es
mov
iret
adc
pop
push
das
sub
test
inc
or
jne
sahf
push
pop
aad
and
adc
mov
imul
lcall
sub
fiadds
jne
mov
pusha
popf
insl
fidivs
enter
sub
mul
and
int
mov
pushf
dec
stos
loopne
lods
test
jp
add
mov
adc
mov
ds
jg
jae
les
cmpsb
push
daa
and
scas
jmp
mov
pop
xchg
mov
adcb
mov
mov
dec
lock
int3
fstpl
mov
out
pushf
es
jns
mov
and
fcomps
mov
mov
test
sbb
push
jmp
pop
rcr
cmpsl
pushf
mov
ret
aam
cwtl
inc
mov
repz
iretw
pop
dec
or
cli
xor
sbb
lods
in
mov
xchg
scas
jnp
push
xchg
jo
jb
lods
dec
clc
push
jo
aaa
cmpl
mov
testl
test
sbb
lock
clc
dec
push
mov
inc
mov
push
jbe
pop
xor
jb
adc
xchg
lods
dec
push
or
shlb
in
das
mov
sarl
dec
pop
add
lahf
idivl
inc
inc
aam
lcall
lods
xchg
xor
adc
xchg
imul
jns
inc
xchg
pop
jb
imulb
adc
jno
mov
pop
xor
mov
enter
lock
ficoml
ljmp
dec
stc
cmp
fsubs
inc
jl
inc
pop
std
sub
movsl
popa
push
xchg
aaa
out
jnp
dec
in
adcb
ljmp
int
xor
xor
lret
je
or
fiadds
arpl
push
cmpsl
jo
mov
clc
les
jl
adc
push
push
imul
cmp
inc
fnstcw
jo
and
or
dec
lcall
xchg
insb
lods
mov
sbbb
jecxz
nop
xchg
push
sub
mov
or
sbb
sub
push
cmp
dec
and
sub
push
xor
out
test
pop
pop
popf
push
cli
imul
loop
scas
rcll
push
sub
std
push
mov
push
sub
daa
cmpsl
daa
rclb
stos
adc
dec
dec
mov
xor
sub
andb
dec
das
sub
ss
fidivrl
out
cltd
dec
pop
sti
inc
ret
or
push
arpl
xor
push
fmul
js
out
clc
pop
aas
testb
pop
hlt
enter
jo
push
dec
mov
popa
and
popa
cltd
std
adc
pop
dec
jo
movsb
fnstsw
out
mov
imul
repnz
loope
sbb
inc
rcl
pop
sbbl
and
fdivs
movsb
adc
je
mov
xchg
repz
and
mov
cli
adc
fdivr
push
cmp
cmp
mov
pop
in
insl
test
jl
push
lods
inc
inc
lcall
jne
jecxz
int3
cld
lods
enter
pusha
add
imul
add
test
mov
pop
xchg
jno
insb
cmp
or
and
and
imul
fisubs
inc
or
jmp
sbb
jge
roll
lock
pusha
add
fwait
repz
mov
fldcw
scas
push
jno
lret
xchg
mov
imul
dec
call
inc
mov
sbb
xchg
push
pop
ja
push
adc
test
shrb
loopne
push
stos
mov
hlt
insl
sbb
mov
loope
dec
clc
push
xchg
shr
sbb
mov
ds
mov
xor
mov
xor
push
inc
div
stos
xor
mov
icebp
sub
test
int
lods
cmpsl
popf
test
dec
add
sbbl
out
clc
xchg
sub
scas
add
repz
cld
out
jne
call
jne
xchg
push
ja
jns
add
das
aaa
push
testb
inc
push
push
in
push
mov
push
jb
dec
mov
insb
adc
stos
nop
nop
jl
aas
movsl
xor
adc
jae
pop
ficomps
and
and
pop
push
mov
jb
sahf
ja
lahf
push
mov
xchg
popa
sub
pop
inc
jle
xor
bound
sbb
xor
out
pop
mov
fistpll
fyl2xp1
jbe
add
mov
jae
es
sbbb
cmpsl
subb
jb,pt
lods
out
push
lea
jo
mov
dec
mov
sub
sub
cmp
orl
cmpsb
ret
pop
int3
ljmp
adcb
ja
xor
pop
mov
jge
aaa
mov
cmpsb
push
int3
syscall
push
xchg
test
sarl
pop
stos
ret
push
inc
mov
sbb
add
loopne
fwait
gs
lock
pop
push
jne
or
jle
fcoms
fstpt
pop
add
fwait
loop
mov
icebp
lahf
lahf
pop
sbb
dec
inc
aad
call
sbb
out
out
lock
or
addl
in
fs
lods
aam
repz
popa
or
inc
ret
dec
lahf
push
sub
push
adc
and
jbe
lock
insl
cmp
iret
adc
out
add
popa
sbb
jmp
fwait
add
push
aam
cmc
hlt
cmpsb
and
and
dec
push
outsb
gs
xchg
mov
add
insl
mov
push
inc
dec
adc
add
rcll
outsb
push
aam
sub
ja
dec
fsts
scas
push
test
add
add
jbe
pop
adc
sub
mov
mov
scas
popf
sub
inc
flds
add
mov
push
dec
pop
xchg
xchg
inc
push
cwtl
aam
adc
jge
jmp
mov
repz
inc
hlt
cmpsb
and
xchg
xor
mov
cmp
mov
pop
mov
out
cmp
leave
pop
pusha
andb
outsl
stc
jb
xchg
xchg
jmp
scas
fisttpll
add
xchg
fnstcw
or
sub
aam
out
cld
xchg
mov
testl
inc
mov
xchg
test
and
pop
sub
test
decl
xor
and
sbb
mov
fidivrl
jecxz
lret
imul
jp
das
adc
test
stc
int
inc
inc
xor
ljmp
das
mov
aad
out
push
sub
dec
and
add
inc
insb
xor
cmp
or
add
arpl
in
inc
jl
test
push
hlt
aas
sbb
jb
shrl
push
jmp
add
es
fwait
cs
movsl
dec
gs
addr16
out
cmpsb
movsl
test
dec
xchg
insl
inc
or
mov
mov
mov
mov
push
inc
push
inc
dec
inc
and
ret
xchg
push
cmpsl
add
cmc
lods
rcr
dec
mov
arpl
pop
add
jp
fwait
or
inc
nop
pop
cmpsb
inc
mov
or
xchg
adc
stos
xor
xor
pop
xor
inc
rol
mov
movd
push
fmull
cmc
je
das
pop
pop
subb
inc
mulb
enter
jge
std
std
dec
roll
shr
frstor
popf
test
pop
addr16
mov
jne
subb
stos
mov
sub
sub
pop
lds
sahf
xchg
push
lea
mov
lret
and
add
and
cwtl
loope
repnz
rcl
inc
inc
cltd
test
push
xor
test
loopne
arpl
xchg
dec
test
movsb
mov
scas
enter
sbb
stc
loope
xchg
movsl
lahf
or
inc
mov
mov
or
adc
in
adcb
add
sub
or
mov
mov
movl
addl
mov
mov
jle
lret
sub
sbb
lret
arpl
dec
mov
pop
vpsubsw
sbb
sub
cmp
push
pop
sbb
incb
jle
arpl
les
adc
push
mov
hlt
mov
jo
jp
dec
cmp
cmc
into
stos
push
inc
mov
mov
repz
orl
mov
sub
rcll
shl
sahf
mov
push
xchg
das
int3
mov
movl
cli
jno
jp
clc
pop
push
inc
in
pop
jae
out
xchg
popl
scas
divb
fisubl
lahf
call
push
std
dec
sbb
ja
jbe
cmp
pop
shll
xchg
pop
in
nop
dec
hlt
mov
lret
jnp
or
and
mov
enter
pop
xchg
pop
dec
ss
sub
inc
pusha
mov
sbb
fldl
dec
mov
sub
cmp
sub
pop
dec
xor
mov
lret
jae
dec
rcrb
dec
pop
outsb
es
and
push
jnp
xchg
mov
dec
jb
jns
dec
in
inc
insl
xchg
ret
sbb
loopne
incl
inc
push
jge
insl
adc
popa
cmp
aam
sbb
adc
scas
roll
leave
iret
or
inc
das
xchg
cmp
jns
and
xor
int
test
xor
sub
inc
cmc
jle
xor
mov
mov
orb
mov
es
jl
outsb
and
ja
cmp
subl
adc
cwtl
mov
push
leave
push
in
xchg
repz
loopne
aad
sbb
push
or
lods
mov
jle
lds
push
and
jns
mov
pop
cli
cmp
pushf
movsl
mov
pop
call
push
cmp
int3
pop
cmpsb
mov
sti
leave
inc
bound
stos
mov
out
addl
mov
mov
sbb
test
shlb
aam
jmp
push
sbb
lea
fists
popw
cli
push
fidivrs
jo
sbb
inc
pop
xor
fidivrs
jae
sbb
cmp
into
lret
mov
sarb
adc
sbb
push
push
roll
add
jecxz
in
dec
lret
shrl
xorb
mov
mov
fcomps
fimull
push
in
outsl
cmc
jae
ret
scas
mov
fcoms
cmp
xchg
lods
add
mov
jecxz
dec
mov
pop
imul
fwait
dec
out
xchg
sbb
sti
lahf
or
aas
cs
sbb
outsb
out
lcall
jno
or
scas
xchg
push
ret
lahf
mov
cld
lret
pop
xchg
ljmp
lods
sti
movsb
pop
mov
cld
fs
scas
test
lret
jne
mov
loope
push
outsb
stc
xchg
popa
icebp
out
outsb
pop
push
cmc
ss
push
inc
mul
lret
shrl
aaa
insl
das
stos
or
cltd
addl
fnstcw
xor
push
cmp
fisubrl
sub
lea
mov
shrl
imul
xchg
sub
xchg
push
loopne
dec
mov
in
ds
sub
or
jnp
ja
out
push
cs
cmp
pusha
icebp
loopne
lcall
jo
pusha
aam
ret
fists
mov
cmp
jbe
push
mov
testl
addr16
and
mov
xor
jb
push
outsb
pop
insl
in
xchg
inc
sbb
popf
inc
shll
jne
or
int3
sbb
adc
mov
xorl
add
out
lret
nop
mov
jnp
insb
jge
jbe
cmp
test
pop
push
jmp
aaa
ljmp
xor
mov
and
subl
fwait
adc
cmp
adc
mov
jbe
push
or
adc
and
cmpsl
cmp
xchg
stos
testl
jle
je
aas
test
nop
addr16
test
ficompl
movsl
ds
mov
add
pop
sub
aam
jns
repnz
in
insb
pop
mov
sbb
fmull
add
dec
rol
lret
dec
cmc
mov
dec
ror
mov
daa
nop
pop
inc
scas
sub
adc
daa
fnstenv
mov
stos
sub
jno
cmp
inc
pusha
outsl
or
ljmp
jb
pop
jp,pt
enter
mov
cli
notl
repz
in
repz
sub
dec
rcrl
fwait
lret
mov
mov
nop
push
loope,pt
lods
lret
sbb
mov
xchg
repz
adc
mov
lahf
out
cwtl
lea
jb
mov
xchg
iret
mov
gs
dec
in
es
push
mov
lahf
sub
in
aas
inc
fwait
pop
xchg
ret
xchg
cmpl
xchg
mov
daa
rcrb
hlt
ret
scas
fistpl
xchg
scas
pop
add
dec
mov
or
shr
cmpl
inc
outsb
mov
fs
sar
xor
pop
dec
into
jecxz
and
xchg
adc
movsl
add
inc
rcr
or
sti
sti
cmp
es
out
mov
sbb
pop
in
popl
inc
mov
mov
add
jmp
mov
gs
push
aas
fwait
lods
mov
es
nop
adc
arpl
and
sbbl
bound
inc
test
lahf
test
pop
pop
loope
stos
aaa
stc
movsl
and
movsb
or
jmp
ror
frstor
jne
xor
test
aaa
and
out
loopne
popa
add
push
xor
mov
pushl
jno,pt
add
push
xchg
jg
sub
jbe
test
mov
sbb
cmp
cmpsl
push
mov
test
and
rclb
mov
mov
xchg
in
jo
arpl
and
aas
cltd
pop
shlb
sub
in
lret
pop
sbb
rorl
shl
push
es
jns
jo
mov
dec
push
mov
jb
jns
sahf
orb
addb
jg
push
inc
inc
mov
push
mov
sahf
sbb
jnp
jns
sbb
cmp
movsb
loope
push
push
lahf
sbb
scas
movsl
lahf
lods
aam
fs
lock
xor
loop
or
sub
cmp
lods
dec
sbb
or
inc
clc
or
xchg
dec
mov
movl
negb
adc
xor
sti
jmp
pop
aas
inc
popa
movsb
movsl
in
in
sbb
mov
add
push
jl
dec
cld
in
pop
add
std
xlat
xchg
push
jno
jnp
cmpsb
and
inc
dec
pusha
jge
cltd
cld
outsl
mov
test
xor
push
mov
test
mov
xchg
sbb
test
pop
repnz
movsl
test
lods
aam
loope
je
jb
sbb
and
arpl
sub
popf
mov
jns,pt
std
push
or
stc
mov
ret
repz
dec
scas
and
in
mov
inc
push
repz
push
cmpsl
jmp
sbb
sbb
sub
xchg
loopne
push
add
jns
inc
fnsave
xor
pop
cli
clc
mov
xchg
sbb
lcall
mov
mov
cmp
rorl
xor
lods
movsl
sbb
jge
lods
loopne
xchg
sub
jnp
pop
lock
lret
sbb
jmp
mov
inc
negl
pop
je
insl
adc
popf
rcrl
cmpl
pop
test
addb
call
inc
mov
inc
pushf
mov
and
repnz
add
out
push
lret
sub
mov
ret
jg
sbb
push
and
cltd
dec
into
clc
stos
fsubl
xchg
xchg
in
xor
push
fs
stc
mov
adc
sub
xchg
aas
sbb
inc
test
cmp
cmpsl
sbb
sub
outsl
lds
xor
popa
fwait
mov
mov
adc
sub
fdivrl
mov
sbb
mov
sbb
cmpxchg
insl
stos
dec
sahf
xor
sbbb
jl
lea
inc
je
jne
mov
pop
or
cltd
cmc
das
or
adc
inc
push
dec
cmp
enter
sub
popa
ljmp
or
mov
les
gs
pop
cmp
inc
mov
cmpsl
mov
lcall
das
sub
call
sub
daa
fdecstp
cmpsb
out
inc
jb
push
mov
aas
les
mov
xor
aam
or
xchg
ficompl
or
adc
jne
pop
push
stc
add
cmp
movsl
mov
fbld
jmp
or
sub
aaa
jns
sbb
insl
or
fists
inc
add
lret
imul
dec
mov
and
in
pop
xor
xor
sub
sbb
xchg
cmp
jmp
mov
in
mov
mov
insl
rcrl
mov
out
mov
dec
cmpsl
cmp
add
je
lcall
addb
mov
mov
scas
jge
fdivr
aam
scas
movsl
xor
or
out
loope
out
lret
pop
cmp
or
jne
aaa
shlb
mov
cmpsb
pop
loopne
jno
sbb
shll
je
jno
subb
jl
out
xorb
testl
lret
mov
inc
dec
jno
and
negl
inc
adc
cli
ljmp
add
or
cld
test
push
add
mov
movsl
scas
mov
mov
cmpsl
sbb
lahf
hlt
sahf
jae
jmp
add
jl
ficompl
and
sbb
cmc
adc
fs
xchg
test
notb
cmpsl
mov
fdecstp
xchg
xchg
ret
or
pop
ss
add
shll
jnp
sbbb
add
mov
ficoml
mov
push
inc
jecxz,pn
push
stos
repz
popa
cmp
mov
aam
xor
ret
imul
out
pusha
adc
or
dec
sbb
stos
mov
push
cs
jecxz
xchg
sbbb
cmpsl
test
and
or
mov
or
std
mov
fistl
add
adc
in
jmp
lret
inc
mov
mov
add
push
test
xor
in
test
xor
mov
in
cmpsb
mov
lods
xchg
mov
cmpsb
pop
push
lret
add
jns
movsb
fwait
and
push
push
clc
mov
stc
xchg
stos
and
aaa
xchg
lret
std
inc
loope
dec
mov
enter
mov
cmpsl
hlt
mov
mov
pop
and
stc
inc
push
shlb
jb
mov
dec
popf
sbb
sub
lods
cs
test
fwait
scas
push
mov
jns
adc
mov
mov
pop
jl
in
popf
adc
aas
aam
inc
in
es
shlb
sub
xchg
shlb
mov
push
ret
icebp
pop
jo
jne
mov
iret
fidivrs
pop
adc
mov
shll
add
jmp
mov
sub
cmp
mov
sbb
cwtl
cmp
xor
pop
add
pop
dec
pop
div
insl
pop
xchg
fldt
js
lahf
xchg
sub
mov
cmp
aaa
add
cmp
gs
test
aas
rorw
cmp
jecxz
and
int
mov
out
inc
inc
into
adc
mov
pop
pop
fdivrs
in
stc
or
push
jnp
mov
xor
or
cs
lock
adc
dec
xchg
jp
data16
test
dec
decl
aad
add
xchg
adc
adc
pop
clc
dec
cmp
ds
add
sbb
icebp
movsl
in
xor
sub
ret
ja
lret
fisttpl
xor
cmp
pop
fsub
pop
aad
dec
pop
pop
xor
popa
repz
or
movsb
outsb
stc
xor
mov
mov
dec
int
jb
iret
jbe
xlat
shld
jp
repz
clc
xchg
push
in
fucom
mov
sbb
inc
and
pop
out
inc
mov
adc
repz
aam
lahf
push
test
roll
xor
sarl
ret
stos
xchg
jge
xchg
sbb
lahf
out
icebp
jns
hlt
pop
push
sbb
in
push
xchg
aas
out
js
push
sbb
jbe
iret
adc
std
sbb
xchg
into
mov
stos
xor
hlt
ja
lcall
scas
mov
lret
mov
inc
out
arpl
and
pop
inc
push
lret
mov
mov
sbbl
bswap
and
in
push
repnz
movsb
shll
fisubs
outsb
mov
mov
adcb
repnz
push
mov
bound
adc
stc
pop
fldenv
cmp
adc
int
push
std
inc
xchg
xor
jno
arpl
fmuls
lret
cmp
js
mov
pop
jae
scas
fbld
push
jo
push
ja
lods
jmp
iret
ss
push
xlat
push
push
mov
inc
fnsave
sarl
jecxz
repnz
adc
mov
pop
dec
push
jne
jp
aam
mov
adc
fistpl
mov
jo
imul
pop
adc
roll
or
sahf
mov
jp
call
in
mov
mov
sub
stc
fsubrs
stos
pop
ljmp
outsb
mov
pop
push
jle
add
insl
hlt
ret
mov
mov
cmp
mov
addr16
and
shl
push
repz
or
aas
leave
cmp
fwait
mov
mov
inc
mov
cmp
sahf
xchg
cmp
jbe
or
inc
cmpsb
cmp
add
adc
inc
lea
xchg
movsl
sahf
insl
enter
jae
dec
xlat
inc
xor
and
or
pop
mov
sti
mov
in
idivl
jl
cld
jge
push
xchg
push
jne
lcall
lcall
bound
rorl
insl
in
mov
or
push
mov
ja
pop
repz
sbb
stos
fwait
mov
arpl
aam
push
pop
pop
int3
mov
out
ret
loop
pop
xor
sub
dec
out
xchg
dec
and
or
sbb
push
dec
cwtl
add
cltd
fsubrs
push
or
arpl
int3
js
or
fnstenv
ljmp
shll
jno
mov
push
inc
adc
xorb
scas
enter
out
mov
jmp
in
sahf
mov
loop
dec
cmp
pusha
cmp
jl
popf
sub
hlt
aad
xchg
add
addr16
test
pop
jecxz
call
adc
push
mov
xchg
je
push
or
xchg
aad
sti
ds
insl
call
cmp
dec
push
push
cld
pop
loopne
cmp
in
lret
pop
sbbb
mov
xlat
push
sub
adc
lods
idivl
lret
sahf
fsubrl
in
rclb
inc
ja
int3
mov
sub
cmp
ret
cmc
add
popa
ret
push
lcall
adc
faddp
lret
mov
js
mov
ret
pop
push
lret
movsb
sbb
and
mov
mov
arpl
in
cmp
and
push
imul
push
fs
pop
push
ret
cli
add
loope
or
andb
subb
in
jne
pop
hlt
mov
or
icebp
xchg
sti
sbb
jge
popa
sti
jbe
adc
loop
pop
icebp
xchg
adcb
cmpsl
in
cmp
xchg
xorb
xlat
inc
in
xchg
pop
lret
ss
xchg
xchg
dec
fs
cmpsb
repz
dec
clc
mov
bnd
push
sub
int3
inc
mov
sbbb
aaa
inc
arpl
call
fbstp
xchg
sbb
push
xor
mov
mov
adc
cltd
pop
dec
jnp
insl
js
lock
cmp
push
pop
rcrb
popf
ljmp
or
push
pushf
push
or
aaa
pop
fwait
push
dec
insb
aad
mov
fdivs
scas
into
push
stos
repnz
int
imul
mov
hlt
xlat
mov
int
in
outsl
lods
xor
add
clc
test
mov
adc
cmpsl
mov
push
decl
mov
mov
ja
les
imul
mov
or
imul
mov
inc
xchg
cmp
xor
adc
cmp
rcl
mull
int3
es
jecxz
in
int
loop
sub
shlb
mov
xchg
das
aaa
icebp
dec
das
sbb
adc
data16
call
ljmp
mov
lods
xor
push
nop
in
jne
sbb
or
test
pop
push
dec
outsl
cmpl
or
cwtl
orl
xchg
push
iret
sub
dec
orl
mov
mov
jns
outsb
stos
les
test
cmp
lea
add
jbe
pop
push
pop
hlt
ja
stos
cwtl
jmp
xchg
loop
jno
jo
fnstsw
mov
dec
outsb
ret
adc
push
xor
insl
arpl
mov
or
js
shrb
lret
rcr
mov
rcrl
aas
cmp
sub
adc
dec
fadd
mov
testb
ret
fnstenv
mov
sbb
fwait
add
notl
mov
ds
add
adc
add
add
ret
shlb
sbb
sbb
push
sbb
mov
imul
hlt
jp
scas
bnd
and
fsubrl
adc
int3
es
cli
mov
pop
fcmovnbe
mov
pop
mov
dec
sub
sbb
mov
mov
aas
push
sarb
sbb
jnp
jecxz
sub
jns
jl
orb
cmp
add
scas
fs
mov
cmp
or
sbb
dec
pop
hlt
or
and
xor
jne
in
pop
cmp
int
repnz
daa
push
sub
movl
add
pop
jns
mov
ds
mov
add
stos
xor
dec
imul
lods
and
aad
mov
lret
in
repnz
push
cmpsl
jl
call
sbb
into
inc
add
mov
fidivrl
mov
dec
fmul
lret
int
sbb
ficoms
inc
xor
insl
xchg
movsb
cmpsl
ljmp
jecxz
adc
cmp
mov
ljmp
jae
out
ja
xor
or
sbb
rolb
mov
mov
pop
clc
cld
das
inc
test
and
jle
xchg
pop
inc
cli
fs
push
adc
push
shl
es
xor
cmp
mov
push
jg
jne
jns
xor
sub
ss
pop
fs
es
pop
xchg
clc
gs
lds
push
mov
xchg
fidivrl
and
and
mov
mov
bound
pop
lahf
mov
mov
adc
xorl
dec
inc
push
or
mov
imul
mov
inc
jg
jns
mov
push
scas
insb
lahf
jmp
xchg
sub
ss
jge
dec
popa
sbb
inc
mov
xchg
inc
aaa
xchg
loope
pop
sbb
xor
adc
fsubrs
sub
or
mov
mov
sub
aad
lods
dec
or
jns
loopne
icebp
aam
inc
dec
jb
stos
pusha
ret
iret
testl
adc
andnps
clc
inc
sbbb
cmp
daa
pop
jge
xorb
enter
lods
xchg
pop
popf
insl
and
nop
add
nop
fildl
xor
sub
test
repnz
pop
fld
mov
pop
sub
mov
add
lds
gs
and
push
push
lcall
pusha
out
pusha
dec
rorl
sbb
imul
and
jecxz
popa
sub
pop
arpl
jno
loopne
mov
pop
xor
jnp
repz
mov
repnz
incl
orb
cmp
add
ljmp
mov
out
add
jl
mov
mov
xchg
jecxz
push
lret
pop
fs
out
or
stos
hlt
paddw
pop
mov
pop
pop
sarl
add
insl
call
aaa
daa
sub
movsl
mov
xor
mov
fnsave
repnz
sahf
iret
lahf
lret
mov
mov
shll
ja
mov
pop
push
xchg
push
adc
test
pop
jg
mov
cmp
jecxz
popf
sub
pop
push
pop
add
fdivrs
shrb
movsb
mov
ror
out
dec
mov
mov
mov
mov
and
inc
xchg
cltd
jae
mov
loop
cmpsb
mov
out
cmp
int3
call
jecxz
fcompl
pop
pusha
jle
sub
lock
and
or
add
adc
fwait
sbb
mov
pop
dec
pop
jecxz
sbbb
or
sarl
movsl
lds
ds
fwait
mov
outsl
icebp
push
dec
or
stc
dec
mov
xchg
loop
icebp
test
data16
sbb
mov
out
pop
je
les
jo
jo
jne
stos
inc
dec
in
in
push
scas
call
inc
les
ss
xor
dec
lods
dec
adc
jbe
out
adc
cmc
xchg
fdivrp
cmp
jle
jmp
jecxz
sub
fisubl
pop
xor
sub
inc
xlat
scas
ljmp
xchg
arpl
cmp
cmp
jae
xor
ds
sbb
xor
mov
inc
shrl
mov
into
je
sbb
cli
cwtl
and
sub
cmp
in
ret
dec
push
pushf
sub
movsb
push
fs
mov
and
fbld
pushf
rcrb
xchg
pop
add
or
fdivs
push
dec
mov
mov
bound
jne
sub
mov
adc
add
adc
jo
push
imul
outsb
mov
or
fists
loop
stos
mov
push
or
loope
sbb
xchg
clc
icebp
into
shl
mov
test
cli
pop
imul
scas
add
mov
and
push
and
jns
cmpsl
adc
fidivs
jne
out
loop
or
cltd
mov
jae
or
adc
sbb
mov
int3
pop
fists
lods
inc
pop
lds
adc
inc
adc
inc
out
in
push
fmull
or
mov
sub
lea
in
cli
inc
scas
jae
jp
jg
jns
mov
stos
mov
push
pop
ss
std
mov
neg
incl
and
xor
fs
lret
lock
mov
roll
cmp
jo
in
movsb
mov
ror
lcall
xchg
adc
lcall
mov
jg
movsb
cmp
mov
mov
pushf
mov
sbb
or
mov
inc
cmp
cmp
daa
add
jp
sub
cmpsb
and
pop
mov
test
subl
cmc
in
pop
push
dec
jmp
test
or
imul
mov
pop
stos
jmp
jge
test
decb
xor
int
pop
lahf
jg
cmp
mov
cmp
or
aad
dec
push
mov
aad
xor
and
ds
fldt
or
mov
fsubs
in
sub
lea
int3
stc
lods
jno
push
inc
in
ret
pop
sbb
adc
inc
outsb
mov
push
sub
pop
pushf
sub
in
cmovg
jnp
xchg
sub
andb
push
mov
nop
xor
jmp
incl
xor
pop
sbb
dec
push
mov
pushl
xorb
add
test
enter
cmc
jne
push
stos
xchg
sahf
icebp
sub
mov
jg
out
gs
mov
pop
insb
mov
call
pop
mov
cmp
xor
mov
repnz
ret
jne
and
int
mov
ficoml
mov
cvtps2pd
mov
into
iret
xor
int
mov
adc
pop
and
repnz
mov
push
pop
into
adc
push
arpl
int3
movsl
sahf
inc
add
push
adc
out
test
loope
dec
add
sahf
and
cs
inc
and
push
push
sbb
pop
popa
mov
and
les
inc
inc
fistps
mov
sti
lcall
push
adcl
into
dec
dec
cmpsl
sub
inc
or
xchg
dec
pushf
dec
inc
test
aad
outsb
repnz
test
pop
add
ss
adc
mov
push
pop
mov
cmpl
mov
push
mov
sub
out
enter
jns
cmpb
loop
sub
outsb
testb
inc
mov
or
or
fiadds
es
hlt
fadds
js
fsubl
dec
pop
jle
and
mov
iret
scas
or
addl
roll
stc
adc
mov
inc
stc
fdivs
lods
imul
call
push
stos
dec
dec
mov
jmp
xchg
scas
shl
inc
xchg
movsl
mov
xor
ljmp
lcall
repnz
cmpsl
cwtl
jge
adc
push
xchg
lret
cli
outsb
mov
ljmp
mov
ss
pop
lods
mov
pop
jecxz
arpl
mov
pop
jae
cmp
test
cmp
cmp
cmp
aaa
loope
jg
push
shrl
jns
stos
mulb
or
loop
out
fs
mov
jb
scas
out
lret
or
add
sub
lods
movsl
lret
sub
sub
outsb
bound
test
mov
sub
cmc
cmpsb
enter
das
dec
xchg
loopne
xchg
or
cmp
push
dec
pop
xchg
aam
mov
fdivrp
fadds
jl
bnd
mov
jmp
lret
clc
sbb
pop
scas
lock
jge
xchg
and
js
inc
inc
shl
jbe
xchg
mov
repz
hlt
inc
xchg
cltd
into
outsb
sub
pop
ja
in
mov
mov
in
and
ljmp
pop
or
test
in
enter
or
mov
testl
imul
pusha
ret
in
or
lea
not
repnz
fcomps
arpl
xor
pop
cmp
xchg
shrb
into
add
test
repz
rorl
in
int3
das
mov
lock
lahf
je
adc
adcb
loope
pushf
dec
and
fwait
and
movsb
cmp
dec
movsl
adc
inc
mov
xchg
and
call
add
cwtl
sbb
jo
aaa
aam
or
mov
dec
cmpb
or
push
inc
sti
es
and
stos
sbb
rcrl
dec
mov
in
sbb
mov
shl
jecxz
int
mov
sub
test
sbb
mov
imul
and
jp
das
fistpl
sbb
das
adc
and
jbe
cmpsb
mov
mov
aaa
xchg
jbe
filds
pop
lcall
pop
jecxz
sub
adc
pop
daa
ret
push
or
xlat
lret
and
push
push
stos
repnz
pop
inc
mov
and
scas
clc
ss
and
movl
pop
das
test
dec
cmp
or
mov
xchg
jecxz
pop
shll
jnp
dec
xor
pop
stc
aam
push
dec
int
mov
scas
call
fcoms
movb
fiadds
add
mov
jp
imul
insb
push
push
test
sbb
and
es
pop
xor
loop
jno
out
xor
popa
inc
mov
dec
mov
clc
imul
push
pop
popl
pushf
lods
xor
fildll
ss
adc
andb
popa
lods
push
mov
cmp
pop
outsb
xchg
rorb
inc
iret
jnp
arpl
push
pop
pop
sub
cltd
jnp
int
cs
cmpb
test
cmc
ret
out
sbb
push
mov
add
mov
in
adc
jl
clc
and
addr16
fstpt
outsl
in
xchg
xor
fstl
mov
pop
xorl
cmc
adc
in
mov
pushf
jg
pop
add
mov
and
cld
out
xorl
jge
and
js
es
enter
jl
divl
dec
adc
mov
mov
jge
adc
lret
cmp
push
arpl
mov
mov
xchg
in
xlat
dec
xchg
mov
jecxz
inc
sbb
cmp
mov
push
iret
pop
cli
mov
mov
mov
push
inc
out
insl
jmp
out
pop
mov
sbb
mov
hlt
aaa
out
andl
ficoms
dec
inc
pop
or
ljmp
xor
push
addb
addl
sbb
sub
xchg
and
xor
cmp
jp
sbb
repnz
mov
inc
lea
xchg
adc
leave
pop
cmp
nop
push
add
cmc
scas
cmp
out
fsubr
xor
insb
add
dec
jns
jo
sbb
lea
cmp
lods
xor
in
pop
dec
js
or
imul
cmp
push
jp
std
outsb
sub
mov
pushl
in
int3
inc
cmpsb
add
in
push
mov
jle
jle
cli
les
sub
mov
or
inc
out
std
ljmp
inc
xchg
loop
lods
imul
je
loopne
lcall
inc
jg
cs
sub
sub
mov
js
je
pop
test
mov
jg
icebp
and
loopne
lret
or
lods
cmp
or
or
sbb
mov
aad
popf
lea
xchg
mov
fs
and
out
jo
jne
cmp
lods
aas
push
adc
jge
mov
dec
xchg
fwait
int3
push
pop
rolb
push
push
cmpl
add
sbb
and
adc
scas
and
push
cmp
sub
or
outsl
mov
rolb
cmpsb
fsubrl
cld
mov
adc
in
mov
sub
sub
pusha
inc
sbb
push
jl
adc
fidivl
jno
cmpsl
mov
xchg
pop
out
stc
bound
loope
inc
push
loopne
xchg
mov
push
clc
inc
push
out
mov
push
pushf
push
imul
arpl
push
pop
push
pushf
lcall
mov
xor
aas
pusha
scas
and
add
xchg
inc
push
sub
mov
mov
jg
inc
jb
cmp
dec
xor
or
cld
push
out
jl
loopne
adc
mov
aad
sahf
pushfw
and
cmp
loope
add
cmp
pop
cli
fists
or
dec
adc
movsb
jae
decl
xchg
js
jb
sahf
je
sahf
cmc
jnp
test
fisttpll
mov
dec
xor
clc
cltd
xor
cltd
andb
mov
mov
push
or
rcrb
out
xchg
sub
mov
das
dec
jg
pop
test
arpl
ret
fistpll
stos
mov
jb
jl
scas
pop
sub
mov
jp
ljmp
in
mov
and
ret
sub
push
pop
jmp
cmc
xor
or
mov
xchg
jnp
inc
dec
jb
fwait
jo
fwait
aas
rorl
dec
movsb
mov
in
and
push
cmpsb
ret
or
test
lods
ficoml
scas
aaa
pop
pop
add
imul
popf
inc
add
sub
push
add
jo
stos
out
inc
xor
imul
int
das
jle
daa
mov
mov
xchg
xchg
pop
mov
test
add
int3
cli
ljmp
repnz
pop
inc
rcrl
sti
xlat
shrl
sbb
ja
or
sbb
xchg
and
neg
rclb
push
pop
int
into
jns
js
int
cmp
add
std
add
sbb
pop
or
add
cmp
insl
ficoms
or
into
dec
dec
dec
jecxz
pop
mov
lret
push
mov
dec
xor
jg
dec
cltd
mov
cmp
ja
adc
fiadds
ss
dec
adc
in
push
mov
fcmovb
inc
add
dec
inc
loop
jno
jns
aas
clc
mov
lods
push
lea
push
sbb
lock
hlt
jb
shll
insl
outsl
in
addb
dec
test
cmpsl
push
les
add
jae
loopne
inc
lcall
push
fucom
dec
out
inc
imul
int3
clc
fstpl
adc
jns
jp
mov
jb
inc
in
mov
repz
lret
shrl
popa
adc
mov
sbb
push
lods
mov
push
dec
outsl
pop
xchg
pop
loope
pop
out
mov
sbb
shr
dec
cmp
or
popa
inc
add
aam
xor
stc
add
in
sbb
xor
cmp
mov
imul
lahf
mov
cmc
mov
cmc
push
in
add
lahf
mov
and
xchg
add
xor
dec
arpl
push
pop
jne
ja
push
sbb
add
inc
push
mov
daa
subl
mov
aas
sub
arpl
dec
inc
popf
imul
pop
mov
fistpll
rcl
adcl
mov
mov
insb
orl
mov
cmp
sub
sub
mov
inc
sti
sahf
push
sub
xlat
das
add
adc
enter
out
lcall
aam
jmp
adcl
stos
test
push
adc
cmp
fsubrl
jns
into
mov
stos
xor
xchg
arpl
adc
and
jle
es
cmpsb
mov
cmp
out
mov
insl
jae
push
popf
push
int
adc
inc
std
and
ja
cmp
shlb
iret
mulb
mov
dec
xchg
ret
pushf
xchg
iret
jmp
add
and
sub
cmpsb
inc
xchg
test
bndldx
mov
inc
cmp
in
jp
cli
or
and
mov
andl
cli
movsb
lea
repnz
sbb
adc
fcomi
shrl
jmp
dec
push
call
js
in
je
stos
lret
cli
xchg
cmp
push
push
dec
ss
dec
jns
push
popf
xchg
and
jle
inc
fimuls
in
or
dec
sarl
int3
mov
repz
dec
push
xor
insl
or
pop
push
mov
cltd
jl
xor
lahf
dec
ret
cmp
lret
test
ret
bound
jecxz
mov
and
dec
js
insl
int
add
jae
stc
xchg
adc
les
xlat
cli
sti
xlat
fstl
push
mov
je
scas
les
inc
daa
imul
sbb
rclb
enter
stc
ljmp
dec
push
adc
int
pusha
dec
or
shll
fcomip
js
movsb
sub
jg
cltd
addr16
xor
cmpsl
add
jns
inc
loop
test
and
addr16
pop
sbb
xor
icebp
pushf
imul
popa
xlat
push
sub
push
hlt
mov
mov
xor
adc
mov
adc
js
fistps
xorb
sbb
pop
xchg
add
and
mov
sarb
jle
repnz
mov
adc
xchg
add
dec
mov
or
subb
fnstenv
nop
stos
fwait
pusha
mov
push
mov
notb
cmc
cmpl
cmpsl
adc
sub
mov
sbb
dec
and
int3
xlat
mov
fisubl
pop
insl
fdivl
stos
adc
jle
pushl
dec
push
inc
adc
je
jecxz
sbb
pop
jno
nop
xchg
std
jmp
push
jmp
addr16
mov
sti
roll
pop
push
shll
sbb
adc
loop
ja
or
jb
mov
push
dec
sbb
add
adc
loopne
sarl
pop
or
xchg
xor
cwtl
push
test
fnstcw
lea
sub
mov
jnp
lcall
stos
jns
mov
scas
push
insl
jno
jmp
xchg
jmp
loope
mov
imul
sbb
push
xor
test
inc
mov
and
jno
dec
dec
push
push
js
cli
aam
imul
call
fwait
cli
jns
lds
mov
mov
jge
push
in
sti
imulb
xor
jge
cmp
or
jne
xor
cmpsb
xchg
mov
test
in
lcall
mov
movsl
sub
sbb
mov
adc
dec
jnp
hlt
jmp
jae
sub
pop
in
sbb
inc
push
push
fildl
les
test
lcall
leave
dec
sbb
mov
stos
ss
sahf
sub
loope
push
mov
cmp
inc
setne
dec
out
out
sub
adc
je,pt
push
cmp
inc
popa
or
lods
jge
fsub
pop
fcomps
inc
mov
mov
jg
jg
test
mov
push
sub
cmp
mov
sbb
test
add
push
xor
mov
dec
aas
add
adc
or
pop
cmp
clc
cwtl
jle
fldl
daa
mov
fwait
dec
ss
xor
cltd
jns
sub
push
and
test
jo
jo
push
lahf
sti
dec
adc
sub
xor
mov
cmp
cmp
das
xchg
add
fbld
out
jae
repz
mov
xor
daa
lea
adc
loop
xchg
aas
and
decl
test
shll
ja
xorb
push
push
scas
xchg
or
jp
loopne
jp
flds
push
mov
nop
jecxz
imul
jg
clc
and
hlt
dec
xchg
sbb
xchg
imul
xchg
rclb
xchg
out
in
jns
out
icebp
push
fsubs
cli
fs
scas
fnstenv
push
fildl
push
lcall
or
gs
dec
ljmp
scas
push
inc
loope
aas
mov
fcomi
push
pop
xchg
int3
add
mov
pop
sbb
jl
and
lcall
dec
iret
shl
add
ret
add
loop
push
jecxz
xchg
mov
add
fnstcw
jl
ss
ds
mov
push
fcom
cmp
or
sahf
add
movsl
mov
scas
mov
imul
sub
push
aad
loope
add
inc
push
ljmp
dec
cmpsb
lods
or
ja
in
and
sbb
es
add
xor
xchg
stc
xchg
shll
cmpsl
xor
xchg
and
jae
in
lods
data16
movsl
cmp
lods
pusha
mov
fcmovnb
push
gs
push
shrb
enter
jl
cwtl
inc
push
aam
inc
rorl
test
pop
dec
xor
scas
pop
scas
data16
xor
hlt
inc
push
inc
mov
inc
xchg
in
pop
jo
xchg
mov
and
sahf
adc
fsubr
dec
in
loope
gs
mov
lea
xchg
mov
int
mov
and
pop
adc
frndint
int3
or
cwtl
cwtl
outsb
ja
push
gs
pop
daa
sub
movsl
add
hlt
into
sub
out
popf
jb
adc
pusha
pop
jne
repnz
ret
imul
repz
mov
mov
ret
adc
stos
inc
mov
test
scas
shll
sbb
jns
fwait
out
hlt
jmp
lods
adc
stos
lods
mov
fistl
dec
mov
mov
std
mov
mov
mov
repnz
sub
sbb
test
sub
dec
in
ret
hlt
cmp
and
xchg
mov
xor
rcll
cmpsl
sbb
xchg
inc
jge
insl
dec
xchg
cli
fcmovu
cmp
pushf
lcall
mov
pop
mov
fwait
stos
arpl
mov
inc
mov
loopne
enter
pop
lret
stos
sbb
push
popf
lret
mov
mov
test
or
mov
test
sti
fldenv
mov
xchg
dec
jl
adc
movsl
lea
out
add
mov
sbb
popa
cmp
dec
in
push
repnz
xchg
out
sahf
xchg
lcall
dec
xor
pop
add
inc
dec
mov
ss
sbb
jle
mov
std
in
push
loope
xchg
fsubl
subb
addr16
cmp
xchg
es
dec
lods
aaa
hlt
adc
push
sbb
sub
xchg
xchg
divl
pop
das
mov
out
leave
and
data16
mov
push
popa
mov
js
mov
test
pushf
xchg
bound
repnz
out
out
mov
dec
inc
stos
jbe
int
cmpsl
ss
pop
dec
and
mov
call
push
and
test
mov
add
xor
cwtl
push
je
cmp
aam
sub
jp
gs
sbb
sbb
adc
or
cmc
dec
outsl
and
or
or
rolb
jne
mov
mov
xchg
shl
js
jp
push
ja
adc
xor
xor
sbb
pop
ficompl
adcb
cmpsl
push
mov
pushf
adc
xchg
insb
pop
push
int
insl
mov
fmull
sbb
and
ja
dec
mov
je
movsb
mov
xor
pop
cltd
mov
lret
xchg
das
ret
rclb
clc
ja
hlt
lea
pop
sbb
andb
jbe
add
mov
xor
ss
cmpsl
xchg
fldenv
gs
addr16
out
loopne
adc
push
push
adc
xlat
ja
cmp
movsb
xor
jecxz
into
mov
inc
mov
push
dec
mov
aaa
outsb
cmp
jnp
mov
jne
push
inc
mov
cmp
dec
fld
xchg
lret
mov
xchg
push
and
jp
sub
xchg
xor
xchg
shlb
xchg
enter
cmpsb
clc
loopne
movsb
lahf
das
in
loope
xchg
pop
pusha
push
ret
push
insl
xchg
rolb
icebp
lods
cltd
pop
scas
jne
ret
pminsw
dec
fcomi
pop
mov
adc
xor
daa
inc
push
add
push
xchg
sahf
sar
cmp
cltd
in
mov
mov
divl
push
and
jae
mov
stos
push
cmp
cwtl
int3
testl
cmp
or
ja
ror
hlt
adcb
loop
int
jge
and
sub
cwtl
dec
leave
jmp
xor
cmp
sub
mov
nop
mov
jle
jmp
es
addr16
out
loopne
xchg
bound
nop
std
ja
fmul
jbe
sub
inc
cmp
mov
data16
adc
inc
insl
adc
iret
xor
jge
push
into
aam
mov
shl
push
pushf
inc
sub
notb
mov
xchg
aad
add
mov
adc
push
jle
and
lret
lds
add
xchg
in
push
shll
inc
dec
jb
lods
mov
adc
adc
dec
ret
hlt
and
or
negl
jecxz
cli
jb
pop
test
gs
pop
mov
pop
imul
pop
gs
mov
mov
lret
cmp
andl
int
mov
cmp
sbb
out
lods
cltd
scas
shll
add
xchg
inc
sub
repnz
popf
cmpsl
sub
mov
inc
pop
add
adc
jg
dec
outsb
dec
rcrb
fsubrs
xor
pop
cmp
pop
fnstsw
or
in
sub
jl
jmp
jae
jo
sbb
mov
outsb
sbb
cmp
ret
mov
mov
jnp
hlt
mov
fcoml
cmpsl
jmp
push
cmpsl
dec
bound
xchg
out
push
orb
std
test
mov
into
lods
out
jge
insw
pusha
mov
jno
adc
cwtl
xor
stos
inc
jp
jge
fcomps
js
push
lea
push
mov
push
inc
pop
movb
in
out
pop
add
push
xor
jg
test
iret
xorb
lret
mov
pop
cmpsb
mov
pop
rcl
pop
jo
testl
outsl
cmp
movsl
idivb
stos
popl
sub
jno
mov
mov
mov
add
mov
fiaddl
mov
loope
push
lock
fcmove
fnstsw
jle
jno
popf
cld
jmp
inc
aad
and
sar
popa
or
sub
jl
ss
stos
scas
arpl
and
movups
out
andl
cmp
adc
insl
jg
not
in
inc
pop
int3
xchg
cmp
mov
scas
xchg
mov
cmpsl
je
pop
jp
lret
gs
sbb
clc
push
ror
mov
sarb
push
push
mov
cmp
in
or
call
push
cwtl
xchg
xchg
fildll
aaa
shr
add
xor
test
sub
sti
sbb
fwait
jmp
inc
sbb
lret
nop
fbld
mov
add
nop
jne
sub
jl
lcall
loop
pushf
lds
sub
in
fistpll
sub
cwtl
mov
pop
fcmovb
out
sti
mov
inc
in
mov
inc
stos
jge
imul
cmc
jne,pt
inc
mov
loop
dec
lcall
or
cmp
add
bound
in
neg
or
jecxz
and
cmp
test
shl
cmc
xchg
cmpl
movsb
mov
lahf
sub
adc
jmp
das
les
movsb
jne
in
pop
add
mov
cli
push
mov
pop
inc
cmp
adc
into
mov
cmpsl
mov
jp
mov
mov
xchg
cmp
mov
fs
rcrb
stos
mov
in
sbb
stos
mov
icebp
xor
push
fcoms
cld
cmp
adc
mov
mov
stos
mov
popf
jg
sti
lret
sbb
dec
addl
aad
aad
cld
fdivs
stos
sbb
jg
arpl
loope
orb
push
je
rorb
xchg
in
jne
les
push
pop
in
xchg
sbb
inc
jmp
mov
inc
clc
mov
cmp
or
loop
sbbb
stc
sub
mov
cmp
shlb
pushf
jne
inc
ljmp
and
sub
jmp
jo
repz
movsl
dec
stc
mov
xlat
xchg
andl
cs
aam
repnz
dec
inc
mov
ficoms
jae
sub
xchg
out
movl
sub
sbb
xchg
jmp
scas
adc
xor
insl
fwait
push
pop
lods
xor
ss
add
mov
repnz
popa
or
cli
dec
gs
mov
adc
adc
cmp
inc
inc
enter
loope
mov
outsl
jno
lcall
jg
mov
push
xchg
xor
ss
push
je
aam
jl
test
xor
sub
inc
dec
pop
mov
cmp
cmp
jmp
adcb
jmp
sbb
xor
cmpsl
outsb
outsb
lcall
shl
out
dec
mov
or
out
cmp
imul
test
inc
jmp
dec
inc
pop
loop
sahf
push
mov
jp
adc
and
xor
inc
scas
in
push
shrb
andb
push
mov
push
cmp
and
lcall
es
push
jo
dec
insl
js
or
pop
lahf
cmp
out
mov
dec
pop
cld
mov
imul
lods
inc
pop
inc
das
out
mov
sub
pop
int
scas
push
sbb
cli
xchg
pop
cmp
nop
mov
pop
sahf
mov
inc
in
inc
cmpsl
fdivs
add
dec
add
outsl
mov
mov
insl
push
lea
xchg
enter
test
pop
pusha
and
test
popf
or
das
and
mov
mov
and
js
or
leave
insb
inc
test
in
iret
or
stc
call
cmp
ret
push
push
or
xor
jne
jl
pushf
fldl
mov
jno
test
and
inc
jbe
rcl
andl
mov
push
pop
mov
adc
bound
push
movsb
push
xchg
ror
fpatan
repnz
insb
pop
int3
lret
out
xor
jo
mov
dec
ljmp
mov
in
push
cmp
arpl
les
inc
sub
imul
ret
pop
xchg
lods
mov
insl
add
sbb
arpl
fisttps
outsb
or
ss
scas
xchg
insl
mov
jp
jae
sahf
pop
xor
xor
xchg
ficompl
shrl
jle
out
scas
test
inc
mov
add
cmp
les
rcrb
xor
outsl
icebp
and
xchg
and
cmpl
mov
lods
cli
lods
sub
aaa
test
jno
adcl
push
leave
xchg
cwtl
hlt
int3
push
adc
loop
or
sbb
xchg
dec
jbe
mov
ljmp
jp
cmc
mov
sbb
sbb
jge
frstor
jb
xchg
jne
scas
mov
xor
lds
lcall
shll
xchg
jle
ljmp
xor
dec
xor
test
popa
or
xor
pusha
scas
or
pop
or
pop
repz
arpl
cld
scas
lret
sbb
xchg
mov
out
xchg
sub
jmp
shrl
fcoms
les
divl
into
mov
jo
pop
ret
dec
nop
out
js
jne
dec
xor
iret
push
add
xor
cltd
ffreep
mov
xor
or
jbe
mov
sarb
cmpsb
ljmp
adc
mov
push
xchg
out
add
push
jg
jge
sahf
enter
aam
add
cmp
jg
mov
lods
pusha
shll
pop
divl
cmp
inc
cmp
out
cmpb
mov
add
pushf
jge
sbb
enter
lods
mov
popa
in
sbb
cs
xor
and
mov
dec
repz
imul
test
popa
pop
loop
iret
mov
xchg
outsl
stos
fstpt
int
movsl
inc
xchg
mov
scas
add
push
mov
push
sub
mov
and
nop
and
aaa
enter
aam
push
sbbl
dec
movsl
xor
pop
fidivl
jle
sbb
pop
sahf
dec
sub
lcall
loope
and
rol
mov
cmp
daa
incb
inc
test
sub
push
inc
xchg
pop
sub
test
ljmp
add
hlt
rcrl
cmpsb
inc
jo
mov
jnp
jl
inc
in
lahf
xchg
repz
mov
jnp
fisttpll
ret
pop
out
out
sub
push
add
sub
sub
aas
inc
pop
ljmp
cmp
mov
sbb
shrl
jns
stc
cs
cwtl
stos
fidivl
insb
sub
mov
dec
icebp
cmp
ss
imul
lcall
rolb
adc
sub
leave
out
subl
insl
xor
jle
nop
addl
jno
and
push
jne
cmp
lahf
insb
cmp
or
mov
xchg
mov
mov
into
ret
push
fs
lcall
frstor
repnz
xorl
fadds
jmp
cmpsl
rorl
and
pop
adc
and
shl
xor
mov
xor
jae
aaa
movsb
dec
xor
jo
xor
dec
cmp
dec
xchg
xchg
insb
into
dec
or
je
sub
inc
ret
iret
andl
cld
xor
xchg
into
mov
sub
fdivrp
imul
imul
inc
out
jge
mov
mov
es
adc
out
clc
cli
enter
inc
cld
leave
xlat
enter
scas
mov
dec
fs
mov
into
test
sbb
loopne
fimuls
and
imul
jne
mov
inc
mov
sub
in
ffreep
mov
xchg
or
sub
out
pop
lds
iret
mov
mov
int
cld
sti
icebp
adc
xchg
xchg
sub
andl
inc
jnp
hlt
fmul
negb
out
outsl
fwait
jno
inc
jp
fbstp
addr16
jb
jo
mov
jbe
out
or
pop
mov
icebp
dec
cmp
ja
fstpt
cmovbe
shrl
sbb
es
xchg
inc
lods
xchg
push
pushf
mov
sub
cli
cmp
mov
lea
xlat
adc
ret
stc
das
sub
push
push
fbld
iret
fstps
xor
mov
push
lea
pushf
fsubrs
std
mov
sub
loopne
iret
cmp
inc
mov
xor
pop
stos
cwtl
andb
lods
out
mov
push
fcoml
cmp
add
test
dec
clc
mov
ret
pop
sub
imul
iret
mov
mov
and
cmp
loopne
mov
jle
push
bound
sub
data16
call
daa
fnsave
cltd
xor
xlat
jle
push
pop
push
mov
push
fdivrp
cld
sbb
dec
or
ljmp
sub
mov
mov
xchg
lods
dec
or
inc
inc
out
jmp
sbb
push
fcoml
pop
add
cli
sbb
rcl
jp
icebp
jge
mov
bound
lds
dec
xchg
push
mov
sub
cmpb
mov
mov
xchg
inc
add
pop
pop
dec
fists
mov
sbb
addr16
or
popa
jo
and
out
sub
pop
push
pushf
scas
ds
pop
fbstp
loop
cmp
mov
ret
hlt
pop
fnsave
pop
pushf
fimuls
or
inc
jnp
xor
push
repz
cmpl
out
inc
or
adc
jo
enter
in
fnstenv
movsb
out
or
ja
xchg
mov
jg
lea
cmp
daa
mov
outsl
outsl
mov
and
inc
test
frndint
xor
push
mov
sbb
dec
out
mov
fs
dec
loopne
popf
pop
fiadds
arpl
test
adc
imul
push
out
push
xchg
and
jo
dec
roll
int3
bound
jl
lods
lret
scas
rclb
andl
cs
xlat
adc
and
xorb
dec
pop
mov
cmp
popa
adc
push
adc
mov
sar
lcall
cwtl
stc
cwtl
push
push
add
arpl
dec
repnz
std
jg
xor
add
mov
sbbb
push
xchg
add
xchg
outsb
imul
repnz
iret
xlat
mov
mov
or
cmc
mov
jne
les
jg
sarl
pop
iret
fdivrs
add
jno
mulb
dec
fwait
push
jle
mov
xchg
and
ret
inc
gs
rolb
pop
lret
jge
mov
lret
loopne
movsb
aaa
mov
imull
jmp
popf
filds
rep
mov
mov
addr16
stos
loope
addr16
jmp
movsb
popf
and
test
and
dec
scas
in
enter
cmc
lods
mov
arpl
stos
mov
aad
imulb
jnp
sub
add
subb
cli
mov
sbb
rcrb
sarb
stc
pop
loopne
int
lods
jnp
lret
ljmp
push
int3
pop
or
jbe
xchg
aas
cs
lahf
in
nop
pop
sub
cmp
xor
dec
jg
scas
sub
xor
stos
push
inc
sub
lock
pop
stos
xchg
mov
inc
repnz
adc
mov
cmp
movsb
in
xchg
fidivs
mov
jecxz
xchg
clc
dec
movsl
ljmp
adc
jmp
daa
xor
mov
mov
pop
or
fwait
mov
jne
fsubp
mov
pop
fcompl
xorl
aaa
sbb
jbe
orb
xchg
sbb
aad
and
sar
adc
mov
jno
sbb
shrl
push
jp
jbe
pop
push
sti
test
lock
ljmp
jmp
fs
or
mov
xchg
dec
push
xor
flds
jb
test
lods
test
sub
mov
mov
cmp
out
push
or
movsb
lock
add
cmpsl
or
inc
imul
mov
shll
inc
push
xor
fcmovu
dec
inc
push
push
test
xchg
fistl
inc
daa
add
mov
sahf
add
out
mov
mov
mov
or
mov
imul
cltd
and
xchg
icebp
shlb
fwait
shlb
movl
aaa
pop
cmp
sbb
cmpsb
cmp
enter
inc
in
jnp
fadds
nop
les
dec
test
and
cmp
fisttps
fstps
mov
lret
fisubs
int3
repz
cmp
jmp
sub
sbb
ja
cmp
lret
mov
mov
filds
jns
in
dec
rcrl
cmp
ja
mov
mov
in
test
outsl
jbe
fucom
stos
loop
dec
sbb
scas
inc
arpl
jl
sbb
std
jmp
xchg
jp
or
pop
sarb
cmpsb
mov
iret
or
ljmp
bt
cmp
dec
adc
fadd
mov
out
das
sbb
and
push
cwtl
inc
dec
jb
cmpsl
mov
sub
cltd
xchg
cmp
xor
mov
xor
stos
xchg
pop
sub
push
pop
mov
or
je
cwtl
pop
shl
jmp
dec
push
or
pop
mov
ja
arpl
sbb
dec
mov
ljmp
mov
ret
xor
daa
jg
movsb
xlat
sbb
mov
and
call
xorl
jmp
xchg
sub
cmp
dec
mov
adc
das
adc
xchg
rcr
pop
push
fdivrs
jno
push
adc
xchg
sbbl
imul
pop
rcrl
ja
or
and
fldl
enter
inc
xchg
insb
dec
or
mov
daa
mov
outsb
lcall
jecxz
cs
jnp
inc
mov
cmc
adc
pop
leave
lret
and
xor
lea
unpckhps
cli
push
sub
and
mov
movsl
sbb
cmp
jecxz
les
pushf
mov
out
cmp
je
sub
cmp
jge
mov
adc
adc
cmpb
jne
andb
in
push
sbb
xor
lds
or
push
or
out
in
sub
jl
pushl
adc
out
mov
call
mov
lods
jmp
iret
fwait
push
test
sbb
xor
xlat
test
or
xor
insb
in
mov
mov
jmp
inc
xor
push
adc
leave
test
mov
int3
fwait
dec
repz
pop
add
aam
mov
lods
outsb
add
int3
scas
push
pop
mov
mov
jl
in
sub
ret
in
js
mov
cmp
mov
shr
inc
or
pop
fstpt
sbb
ret
pop
jo
je
ret
jns
push
cmpl
sub
xor
fwait
and
jne
push
push
stc
push
mov
frstor
dec
test
dec
mov
mov
dec
jl
and
lret
fisttps
pop
outsb
lret
jecxz
outsb
jmp
adc
aas
dec
cmc
pop
sarl
rcrb
inc
mov
mov
mov
cli
xchg
popa
sbb
cmp
shlb
lods
test
push
cmp
xchg
dec
adc
xor
and
imul
inc
movsl
cs
lea
dec
js
mov
ret
ss
pop
lds
xchg
push
sub
sbb
mov
shrb
fldt
cmp
repnz
push
or
and
jae
mov
sub
dec
stos
leave
cmp
lods
sbb
rcr
testb
fisttps
push
jge
fidivl
jg
fs
cmp
jl
push
push
jb
add
inc
jns
jecxz
jo
andl
cmpsl
add
pop
jp
clc
aad
imul
pop
push
sbb
mov
cwtl
ljmp
les
das
in
out
fisubs
adc
shr
in
arpl
mov
xchg
adc
testl
nop
adc
fidivrl
sbb
lds
pop
push
jle
jns
sub
sub
mov
out
movups
pop
ficomps
neg
mov
shlb
xchg
jp
je
mov
and
ficomps
add
pop
jp
scas
pop
pop
fucomp
sbb
daa
lods
sbb
cmp
aaa
subb
xor
adc
jg
adc
imul
ret
loop
fldenv
cmp
push
xor
xchg
data16
mov
add
and
outsl
add
flds
xchg
rolb
dec
mov
jg
jge
jno
popf
xor
jnp
pusha
cmpsb
sbb
mov
mov
jb
or
push
mov
xchg
sub
daa
push
int
repz
out
decl
sub
mov
add
mov
mov
xchg
sub
in
in
dec
idiv
jns
stos
mul
xchg
cmc
jns
addb
popa
cmp
push
leave
add
xchg
mov
jo
iret
pop
sbb
cmp
mov
sbb
aas
add
outsl
scas
iret
adc
fildl
mov
xor
stos
lock
lahf
rorb
adc
add
jne
mov
xor
scas
fsubrl
mov
mov
std
out
pop
add
loope
jne
loop
mov
xchg
push
sbb
pop
cltd
mov
mov
jnp
sbb
lea
xchg
and
push
pushf
push
movsb
cmc
loop
dec
scas
insl
inc
fistpl
xchg
dec
push
cmp
or
jp
dec
in
ds
jle
xchg
add
or
int3
jne
loop
dec
in
sub
data16
rclb
cli
outsb
dec
mov
sub
into
insl
sub
cmpl
clc
data16
adc
imul
lods
xchg
sbb
lds
ljmp
dec
lret
imul
jne
cmpb
xchg
int3
sub
stos
insl
jecxz
in
les
sbb
jmp
shl
out
sti
and
mov
add
fisttpll
sub
in
jno
in
pop
js
fs
cmp
add
notl
stos
int3
pop
mov
jge
jle
dec
jo
fmul
mov
mov
and
mov
adc
pop
in
stc
xchg
addb
movb
or
xchg
sub
fisubrl
dec
ret
sub
aaa
xchg
mov
sub
dec
push
sbbl
cmp
pop
leave
mov
jns
xchg
xor
imul
add
fsincos
in
mov
stos
mov
mov
adc
cs
data16
push
movsl
cmp
jg
sub
lahf
out
sbb
std
fstps
lret
ja
sbb
mov
jmp
leave
adc
ret
add
int
int3
jne
xor
inc
and
mov
inc
xchg
aad
loop
stos
xchg
pop
and
mov
xchg
sub
ror
xor
and
test
sbb
in
pop
ss
dec
mov
mov
inc
add
ljmp
sbb
push
lods
sub
inc
mov
or
ffree
test
fldt
test
cmpsl
jmp
lret
lret
mov
mov
jnp
mov
loope
daa
mov
push
mov
jno
push
xchg
lock
sbb
sbb
inc
xchg
fisttpll
cs
push
cltd
jno
pop
xchg
addl
push
daa
dec
aad
xor
addr16
mov
mov
mov
dec
fiaddl
push
push
push
mov
das
xor
shlb
scas
cmp
fimull
jnp
ret
int
cwtl
test
test
orl
sub
cmpsb
stos
stc
mov
mov
and
push
jnp
test
or
dec
mov
out
movsl
shll
cmpsl
add
push
jge
cmp
dec
sub
and
sbb
fnstenv
imul
inc
xchg
mov
test
inc
cmp
inc
fiaddl
jg
cltd
mov
push
mov
fldpi
popf
lret
push
jg
mov
aaa
scas
std
inc
les
out
and
jbe
mov
xor
pop
mov
mov
mov
xor
xor
mov
in
je
rcll
xor
jle
mov
popa
cmc
jl
fnstsw
cli
out
inc
std
mov
sub
out
in
shl
dec
std
insb
xchg
cmp
sub
jp
mov
mov
cmp
and
push
push
aam
jge
cmpsl
jae
loopne
leave
lret
and
push
mov
and
pop
inc
cmpsl
xor
sub
or
outsl
sbb
jle
inc
lret
xchg
sub
mov
xchg
or
or
js
and
nop
lods
mov
and
lock
sub
jmp
test
dec
cmp
xlat
sbb
out
movsb
pop
sbb
subl
and
xchg
inc
mov
xor
pop
movsb
sbb
fisubrs
insl
jb
cmp
sub
push
stc
jb
jg
sahf
insl
addb
jl
dec
and
mov
cmp
test
ret
jge
in
jno
pushf
mov
pop
pop
icebp
jns
pop
outsl
stc
das
jae
out
fildl
rorb
dec
jl
dec
int3
aas
faddl
pop
mov
add
sahf
gs
push
or
adc
add
mov
jnp
and
in
movl
pop
sbb
add
popf
lods
mov
push
scas
pop
sbb
scas
or
imul
imul
data16
fwait
mov
jl
xchg
inc
fwait
loopne
xor
lret
incl
repnz
push
mov
xchg
jmp
mov
shlb
shlb
pop
ss
mov
dec
nop
inc
jge
nop
xor
jnp
into
ja
leave
test
repz
dec
stc
icebp
imul
cli
cmp
jo
pop
jl
cvttps2pi
lahf
out
xor
add
dec
push
mov
mov
jne
push
outsl
pop
shll
inc
test
pop
inc
push
jmp
adc
cli
adc
iret
je
cmpsl
add
fwait
enter
ljmp
or
pop
ds
add
ljmp
pop
jns
or
mov
xchg
jl
daa
ljmp
loope
out
and
andb
daa
mov
xchg
cmp
dec
adc
xor
cmpsl
ror
cld
cmc
inc
fistl
or
push
mov
mov
push
push
out
fildl
out
or
and
mov
incb
repnz
aad
mov
push
pop
and
out
fs
fwait
lock
popa
inc
or
add
or
scas
cmpsb
sbb
xchg
flds
xchg
cltd
mov
xchg
fisubrl
push
xchg
inc
sahf
inc
subb
and
aas
shrl
inc
rcrb
cwtl
push
js
mov
dec
push
sbb
inc
mov
jne
mov
clc
insb
mov
icebp
cld
in
or
insl
jge
xchg
add
inc
xor
leave
lahf
or
popf
push
ret
xchg
pop
call
mov
ja
stos
loope
and
push
sub
jb
fisttpl
out
add
pop
xchg
fisubrl
mov
dec
dec
push
and
inc
push
push
add
scas
xor
fwait
sub
cs
inc
insl
and
sahf
daa
xor
fsts
insb
cmpsl
push
sub
loope
adc
xchg
aas
into
iret
jg
sub
sub
lcall
jns
popa
jmp
push
and
cltd
jns
shll
jge
mov
mov
pop
push
ds
cwtl
outsb
leave
testb
lret
addr16
pop
gs
aad
mov
adc
push
mov
pop
scas
dec
lea
push
lret
movsb
jb
daa
lret
fptan
fs
adc
jp
out
mov
adc
adc
mov
adc
jns
sbb
xchg
cld
sub
out
imul
lods
sub
push
inc
and
loopne
aas
inc
push
sbb
outsl
cmp
shl
mov
and
cmpsb
cmp
xor
les
lods
jns
jnp
xchg
std
push
mov
add
and
cmp
push
xchg
repnz
sbb
xor
rcr
and
inc
push
addr16
xchg
xor
les
jae
and
jns
xchg
dec
jle
cwtl
fidivs
mov
lods
jne
insb
lea
cwtl
push
and
daa
pop
lods
stos
mov
pusha
ret
movb
clc
or
aad
and
sbbl
test
nop
mov
shlb
mov
fcomip
daa
int3
dec
pop
stos
cmp
mov
mov
fidivl
lahf
outsl
ret
loop
fimull
xor
outsb
push
cmc
pop
enter
test
repnz
and
stos
sahf
je
xchg
lea
jp
icebp
or
jnp
sarb
adc
mov
out
cmp
sbb
push
ficomps
sbb
inc
andb
pop
cmp
pop
insl
pusha
pop
inc
mov
pop
and
fidivrs
adc
outsb
shll
sbb
test
jge
dec
mov
insl
adc
mov
popa
xchg
fs
cltd
shr
bound
rcll
sub
add
rorl
mov
dec
xor
fcomip
fists
jmp
xchg
call
adc
mov
popf
movsl
sub
push
aam
jle
in
push
mov
popf
dec
mov
adcl
pop
mov
and
and
mov
mov
out
jne
cli
enter
sub
and
lret
pop
adc
je
ljmp
test
aad
aad
add
es
data16
mov
fdivs
add
push
rol
sub
mov
xor
xchg
sti
push
mov
loope
cmp
and
repz
cmpl
sar
das
pop
sub
inc
or
jp
push
lahf
add
jmp
ss
sub
mov
ss
fucom
bound
ud0
adc
rolb
sub
pop
xor
call
clc
jnp
sub
mov
jge
adc
daa
xor
mov
sbb
jne
xchg
aad
cltd
daa
rol
clc
jmp
mov
adc
mov
ffree
jp
dec
jns
and
xor
mov
mov
std
jns
das
aad
fistl
mov
jnp
es
pop
inc
sub
mov
sti
sbb
fistpll
sub
ljmp
hlt
popa
mov
mov
xchg
daa
push
test
ret
int
mov
orl
cmp
lock
jb
xor
pop
adc
sti
xchg
inc
pop
jge
aam
sub
in
xchg
push
imul
bnd
into
ret
jg
es
repz
lahf
ficoml
mov
adcl
ret
fdivrs
jl
pop
cmpsb
enter
inc
mov
int3
daa
or
pop
addr16
icebp
std
or
add
sub
popf
data16
insb
sahf
ds
fistpl
jge
or
in
cld
xchg
xchg
into
sarl
inc
sbb
mov
add
repz
loope
out
out
xlat
ret
decl
xchg
mov
rcrl
sbb
sahf
jno
xchg
lods
or
pop
sbbb
out
enter
xor
movsl
or
fxch
jp
enter
daa
push
xchg
adc
and
and
sti
xchg
jns
fnstenv
outsl
sub
mov
mov
xor
int3
jnp
shlb
xlat
outsb
popf
jecxz
in
aam
mov
or
push
cmp
push
mov
sbb
cmp
push
mov
jp
sti
out
push
shl
mov
aam
lcall
pusha
popa
adc
movq
mov
jecxz
sahf
cmp
mov
xchg
lahf
jl
in
dec
mov
pop
mov
sbb
mov
sahf
shl
cmp
mov
xor
divl
lods
fsts
jmp
and
int3
inc
dec
push
or
push
push
enter
call
negl
mov
adc
and
mov
mov
push
sbb
fisttpll
xchg
xor
sbb
push
std
cmp
bnd
mov
fs
sub
shll
pusha
cmp
jne
int
add
lret
mov
adc
push
sti
mov
out
in
into
add
inc
imul
or
or
jb
popl
xchg
ror
daa
jne
and
adc
rep
pop
sub
in
js
mov
outsb
push
and
cmpsb
xchg
adc
xchg
jno
icebp
ljmp
cmp
or
mov
insb
inc
in
jb
faddp
adc
push
decl
insl
xor
pop
sbb
adc
bound
inc
xchg
jecxz
sub
xlat
pop
ret
lods
sub
popa
jmp
in
int3
cmpsb
daa
push
sbb
pop
fidivrl
psrad
push
push
and
lret
or
sub
and
mov
mov
aas
out
and
movsl
cs
insb
mov
data16
mov
ljmp
xchg
dec
ror
into
jns
aad
jl
add
mov
cli
add
and
mov
or
jl
adc
repz
leave
lret
test
loopne
ljmp
xchg
mov
and
mov
or
lock
mov
dec
jns
cltd
sub
cmp
aaa
dec
cmpsl
lods
mov
mov
mov
sarb
lods
mov
ja
in
adc
jecxz
push
popf
jnp
lods
daa
lods
jb
insl
movzbl
dec
jne
cmp
mov
loope
fcmovne
cmp
mov
popf
movsb
mov
stc
pusha
pop
fstp
nop
xlat
enter
mov
pop
or
leave
sub
jl
pop
dec
and
bound
mov
das
xchg
fcmovnbe
clc
sub
shll
xor
mov
out
mov
call
xchg
mov
and
ja
adc
fdivrp
sub
gs
cli
cli
xchg
push
sub
ja
cmp
sbb
sub
mov
mov
adc
mov
and
popa
mov
ret
or
inc
daa
inc
loope
test
xor
or
dec
je
insb
pop
xchg
inc
js
cs
inc
nop
aad
fbld
add
push
jle
inc
enter
xchg
in
shrb
leave
cmp
aas
rolb
fs
mov
push
insb
or
outsl
stos
movsb
jmp
sbb
jle
inc
in
int
das
dec
mov
add
pushf
fwait
test
sub
fdivrl
hlt
add
sahf
cmp
popf
sbb
movsl
js
les
shlb
or
inc
ljmp
popa
jne
sub
sbb
push
dec
imul
sti
mov
or
rclb
dec
adc
push
adc
lock
mov
xchg
fisubl
jp
les
jg
inc
mov
xchg
or
dec
ficompl
daa
rcr
je
push
rclb
mov
or
rolb
in
lds
ret
out
adc
lahf
imul
movsl
roll
loop
ja
insl
sub
pushf
push
lret
mov
xchg
adcb
mov
xor
push
pop
mov
sub
mov
lock
dec
adc
mov
sbbb
std
jl
jge
push
mov
add
lods
dec
int
fmull
test
add
ss
adc
sarb
ljmp
lods
and
int
jmp
lret
lock
sub
sub
movsl
jnp
adc
mul
cmp
mov
and
xorl
outsb
pushf
mov
sbb
jae
mov
scas
pop
gs
jp
std
jo
nop
mov
jnp
sbbb
repz
sbb
sub
dec
addb
add
xchg
stc
add
sti
pop
loop
sbb
ljmp
jge
mov
mov
push
iret
xor
insl
enter
fisttpl
add
clc
jge
loopne
mov
repz
loope
enter
in
movsb
popf
ds
fwait
dec
in
mov
sti
rclb
dec
repz
push
xor
inc
push
aam
pop
ljmp
mov
ljmp
xchg
sbb
xchg
fcompl
pop
test
push
lret
xchg
bound
outsb
adc
aam
cmp
mov
rclb
sub
fcompl
inc
cmp
mov
lea
jb
in
ret
pop
popa
iret
popf
push
shlb
cmp
xor
push
lods
lods
add
cmpsl
or
andl
push
or
xchg
adc
popa
loop
insl
stos
mov
sub
push
aad
out
aad
xchg
cld
xor
je
inc
sub
xchg
jecxz
fdiv
lret
jns
loop
push
pop
fadd
pop
outsb
dec
pop
popa
add
mov
lcall
adc
pop
xchg
leave
push
enter
daa
mov
cmc
into
pop
cmp
mov
mov
ja
cmpb
xchg
cs
and
sahf
mov
jae
mov
cmp
movsb
mov
mov
aad
sbb
push
out
adc
lods
outsb
add
jg
ss
inc
sbb
movsl
jmp
cmp
aad
outsb
cwtl
shlb
mov
sbb
aas
inc
jbe
dec
enter
ret
adc
mov
push
inc
fstpl
dec
dec
push
jge
cld
mov
inc
jo
subl
out
les
pop
pop
icebp
roll
aaa
xchg
add
mov
jp
test
mov
arpl
adc
or
xchg
sub
out
lret
mov
mov
addr16
xor
pop
xchg
cwtl
std
in
stc
xlat
or
vmovdqa
xchg
jp
movsb
mov
aad
xchg
imul
cmp
rol
addr16
sub
xlat
push
adc
and
lds
sub
push
push
stos
stos
std
mov
add
ja
sub
push
push
stos
insb
in
mov
mov
movsl
cmp
mov
sti
push
mov
sub
mov
shrl
aaa
push
jb
pop
mov
mov
dec
adc
jmp
or
mov
cmpsl
push
jae
push
dec
xchg
outsl
mov
mov
pop
test
loopew
repz
pop
lea
push
cmp
sub
mov
es
xchg
xchg
pop
push
out
sahf
mov
or
pop
sbb
fdiv
sahf
lret
and
fisttpl
push
xchg
lret
das
or
pushf
push
mov
test
stos
dec
mov
mov
jl
mov
adc
push
jmp
mov
test
repnz
pop
and
add
jns
mov
push
mov
aas
insb
mov
testb
xchg
pop
xor
mov
pusha
pop
xchg
jl
leave
clc
jno
mov
adc
aas
add
in
mov
mov
push
xchg
add
push
jno
xchg
in
or
cmpsl
fs
outsb
add
sub
inc
cmp
lds
insl
xchg
push
xchg
fs
jo
rolb
inc
sbb
add
loopne
jb
aad
in
aad
sbb
inc
dec
jg
add
popa
and
outsb
std
call
test
pop
and
xchg
popa
nop
inc
gs
loope
push
sbb
out
pop
xchg
or
mov
dec
mov
rolw
flds
daa
and
sub
fwait
adc
jne
stos
mov
xor
cmp
pop
pop
add
es
call
pop
xor
subb
ret
in
mov
shll
push
adc
xorl
inc
jae
imul
adc
fldenv
stc
subb
sub
add
push
movsb
adc
rcll
jmp
inc
mov
mov
jmp
pusha
pop
call
addb
bound
mov
idivb
lcall
or
cmc
xor
adcb
jecxz
sahf
cmc
popa
in
es
lock
xchg
adc
hlt
sub
xchg
pop
xor
lcall
clc
pop
das
fld
add
in
mov
addr16
iret
push
push
cwtl
cli
bound
jbe
mov
mov
dec
clc
jne
daa
in
or
jne
rcrb
push
push
push
js
ret
and
dec
lock
lea
cmp
das
sbb
add
shll
add
divl
cli
iret
mov
icebp
lea
rcrb
out
ljmp
out
adc
pop
push
xor
sbb
call
inc
push
es
mov
pop
adc
mov
es
lods
mov
mov
fs
inc
dec
fmul
jo
xorl
push
dec
cli
jns
pop
add
sbb
daa
rol
sbb
cwtl
sbb
fidivrl
or
arpl
orb
inc
inc
fiadds
xchg
loope
cwtl
rcrb
bnd
lret
outsl
adc
cmpsl
jg
mov
push
popa
bound
sbb
dec
scas
push
mov
adc
xchg
in
mov
rolb
std
add
dec
add
loop
push
fstp
mov
add
mov
scas
stc
push
test
xor
mov
fidivrs
outsl
jnp
push
shlb
adc
daa
cmp
add
insl
xchg
dec
cmp
lods
test
test
jmp
testb
xchg
add
fwait
int
lret
inc
push
imul
mov
sub
inc
add
ss
or
inc
cmp
jmp
cmp
xchg
cmp
das
push
dec
xchg
pop
movsb
sti
inc
into
xchg
xor
sbb
push
stos
daa
aam
cli
movsl
sar
push
mov
mov
dec
mov
lds
push
jbe
pop
lods
jno
adc
in
or
and
in
cmp
in
adc
loope
icebp
xchg
cmp
add
cld
ljmp
in
jp
test
popf
fsts
add
shll
daa
add
cmp
add
cmpsl
rolb
cwtl
jl
jb
pop
push
in
inc
mov
ss
leave
rolb
push
and
mov
iret
add
test
mov
movhps
vfrczsd
push
adc
adc
mov
sbb
adcb
xchg
xchg
imul
cltd
pusha
mov
mov
les
call
inc
mov
mov
imul
mov
fdivrs
loope
mov
inc
aaa
push
cltd
fld
jae
hlt
call
push
movd
pop
repz
cmp
scas
add
popl
push
dec
mov
dec
push
dec
push
ret
sub
out
mov
mov
and
test
xchg
mov
dec
push
std
mov
mov
leave
popa
out
mov
adc
imulb
xor
push
test
loopne
dec
mov
call
popf
lret
repnz
int3
pop
pop
scas
cmp
and
push
call
stos
dec
rcr
int
cmpsb
push
xor
outsb
sub
mov
and
sbb
movsl
mov
mov
cmp
js
sub
inc
cmc
cmpsl
ret
cmp
mov
mov
popa
in
ret
jmp
inc
xchg
cmp
test
add
push
jge
or
fs
popa
mov
cmpsb
or
test
jge
popa
insl
inc
es
int3
idivl
clc
cmpb
inc
xor
jnp
jns
jns
daa
repz
cs
cmc
orb
call
and
aad
xchg
std
sub
lea
inc
in
mov
sbb
mov
jno
fists
sbb
ljmp
cltd
mov
mov
out
rclb
ljmp
push
or
stc
test
das
adc
push
mov
push
notb
std
or
cmp
loope
lret
adc
jno
arpl
les
jp
mov
adc
cmp
mov
or
in
inc
jmp
mov
sub
cltd
in
mov
xchg
imul
popa
cwtl
or
cmpsl
les
push
cli
pusha
sbb
cmpb
jecxz
and
addl
push
push
or
repz
lock
xor
test
adc
sub
test
je
fidivrl
int
lret
and
rcl
imul
test
movsb
ret
sbb
subl
subl
popf
popf
sub
mov
push
and
pushf
sub
arpl
test
inc
adc
mov
addr16
cmp
leave
dec
inc
cmp
jl
adc
in
dec
lea
stos
xor
adc
jae
add
inc
dec
mov
sbb
cli
cs
jmp
fwait
mov
rcrb
or
or
icebp
mov
stos
xchg
sarl
push
fbstp
xor
pop
out
rcll
cmpsl
xchg
test
jmp
sub
xor
notl
inc
aaa
inc
iret
dec
out
pop
pop
jmp
or
clc
aam
dec
or
cwtl
pop
xchg
push
or
mov
negl
inc
jg
movsl
sub
sarb
fs
xor
adc
bound
cmp
mov
jnp
sbb
mov
leave
sbb
out
sub
into
sbb
or
push
ror
jp
push
dec
or
fiadds
xlat
xor
insl
pop
mov
data16
bound
sbb
cmpsl
jecxz
mov
xor
pop
in
jb
insb
add
jmp
fcmovbe
enter
mov
lret
sub
cmp
adc
rclb
jg
sarl
fistl
xor
mov
push
adc
int
lock
popa
incb
pop
sbb
dec
dec
test
xor
out
lods
mov
repnz
xchg
adc
cld
xlat
pop
dec
cli
sub
aam
repz
xor
ss
scas
dec
pop
subl
aad
loop
push
aam
mov
addr16
lods
int3
lret
insl
push
in
ret
adc
sub
and
inc
xor
or
pop
out
test
jl
xor
cltd
push
pop
cmc
xor
add
in
dec
shl
cmp
pop
push
ds
mov
ficompl
add
stos
aas
xchg
mov
push
cmp
dec
mov
mov
adc
int3
movsb
mov
stos
xor
int3
cli
adc
sbb
cld
roll
push
mov
ljmp
push
mov
mov
imul
pop
pop
mov
pusha
rcll
or
add
popa
fisttpll
sti
push
pop
or
addr16
imul
stc
shll
dec
add
and
dec
xchg
lock
push
add
lret
sarl
mov
pop
mov
cmp
aaa
icebp
and
push
mov
lds
and
out
shrl
mov
jmp
lods
cmp
or
sub
xor
in
add
xchg
xchg
push
enter
inc
in
jne
imul
sub
cmc
mov
lea
fisubrs
xchg
jmp
or
test
lock
dec
add
in
imul
and
pop
pop
aam
es
scas
inc
mov
or
mov
cmpsl
bnd
inc
jno
push
sbb
adc
repnz
jb
adc
dec
mov
pop
cmpsl
xchg
fwait
lcall
jle
jo
sub
mov
mov
sarl
je
adc
sub
stos
or
std
sub
mov
dec
scas
inc
cmpsl
in
add
scas
inc
sbb
inc
xchg
pop
rorb
js
mov
cmp
sbb
xchg
mov
cli
or
add
int
dec
mov
cmp
fadds
inc
inc
ljmp
outsb
mov
cmp
jo
add
in
in
es
gs
call
mov
mov
xor
test
cmp
testl
mov
ss
cmpsb
cmp
and
add
ret
pop
insl
add
mov
cltd
adc
iret
mov
and
mov
sbbl
mov
fnstcw
movsb
pop
adcb
loope
rclb
jae
push
mov
in
sarl
cmp
xor
cmp
cmp
das
mov
roll
lea
in
jnp
mov
les
jl
sbb
adc
sub
add
aas
mov
sub
cmp
daa
push
or
inc
nop
sub
cmp
in
lock
push
mov
mov
add
insb
mov
inc
jmp
pop
imul
lds
mov
ja
lahf
cmpl
aas
mov
sbb
or
jne
dec
das
ret
push
adc
push
cmp
cmp
sub
xor
icebp
mov
jg
dec
enter
call
loop
pop
and
lahf
scas
ret
lahf
loope
ds
pop
add
lret
xchg
sub
lods
sti
test
adc
aad
dec
sub
negl
leave
xor
mov
push
ret
clc
mov
scas
rolb
int3
sub
fimuls
out
fidivrs
imul
in
adc
or
mov
xchg
mov
and
mov
xchg
xchg
faddl
adc
push
lock
std
call
or
rorb
rcrb
mov
or
jns
js
call
daa
cmp
add
pop
movsb
mov
je
jo
hlt
mov
test
sub
dec
in
adc
push
cld
lds
popa
mov
icebp
add
int3
or
cmp
imul
pop
cli
fs
stos
xchg
cmp
js
leave
mov
flds
ss
mov
mov
and
pop
pop
pop
sar
xchg
pop
xor
aas
pop
pop
in
dec
xchg
jb
loop
mov
scas
adc
inc
shrl
mov
jnp
ffree
dec
test
sbb
lock
addl
loope
push
call
cmpl
mov
aad
mov
xor
daa
push
lcall
scas
iret
stc
cld
loope
call
mov
test
es
xchg
daa
mov
mov
mov
mov
dec
in
cltd
idivb
add
hlt
xchg
repnz
es
mov
push
popa
outsl
push
inc
jno
in
lea
lret
inc
das
aaa
cmp
mov
inc
pop
push
in
mov
subb
dec
scas
or
rep
movsl
sbb
push
mov
or
dec
stos
xlat
pop
inc
aas
cmpsb
and
dec
repnz
loopne
add
in
int
xor
inc
out
sub
iret
fisubs
lret
fwait
xlat
setno
jmp
fisttpl
or
inc
daa
push
push
add
into
in
pop
outsl
push
pushf
add
gs
add
mov
jg
hlt
mov
push
mov
ss
shl
jl
jnp
int3
popa
rcl
xor
shll
dec
sub
add
psubsw
jb
xchg
cmpsl
addb
cmp
push
bound
mov
mov
out
inc
push
pusha
jle
mov
jle
push
insl
cmp
scas
scas
leave
jg
imul
lahf
rorl
cmp
mov
ret
add
int
xchg
aam
in
insl
add
xchg
andl
rclb
jns
add
inc
stos
inc
inc
call
or
stc
gs
movsb
cwtl
andnps
in
test
jp
jecxz
insl
dec
pusha
and
push
lahf
cli
or
repz
clc
jne
iret
std
or
sarb
ret
mov
fs
insl
fldt
scas
repz
lods
je
push
and
cmp
sub
pop
jno,pt
imul
jmp
aam
orl
lds
mov
out
dec
jo
imul
pop
fnsave
sarb
xor
mov
push
mov
lea
mov
xor
push
shrb
dec
stos
pop
mov
fwait
rorb
faddl
repz
fmuls
pusha
data16
fimuls
cltd
call
pop
add
icebp
xor
xchg
out
dec
push
imul
insl
mov
pop
push
addr16
lods
std
inc
mov
out
lret
int
adc
inc
out
aaa
popf
cmp
imul
jp
pop
jle
lock
ja
stos
sub
or
sbb
push
clc
inc
inc
mov
aaa
and
cs
mov
adc
and
pop
sbb
test
rcrb
xchg
and
pop
push
movsl
jo
data16
ret
fs
and
hlt
jle
inc
fnsave
cmpl
scas
cmp
sbb
mov
or
mov
insb
jl
mov
into
enter
sbb
mov
or
sbb
mov
xchg
and
fisubl
pop
in
fimull
enter
aaa
xchg
inc
cmp
lods
cmp
mov
sbb
es
xchg
test
inc
fdivp
push
push
test
aaa
es
adc
or
inc
pusha
cmp
sbb
pop
adc
push
scas
sub
aas
repnz
ret
cmp
leave
push
xchg
jl
inc
fisubs
scas
adc
mov
mov
insl
subb
cmp
pusha
add
adc
add
mov
int
clc
fs
neg
movsl
push
pop
mov
mov
and
mov
jno
add
ss
push
test
sbb
stos
addb
add
sbb
jecxz
sub
and
jo
cmp
test
sbb
scas
pop
sub
mull
add
pop
jmp
jmp
addr16
sahf
mov
cmp
xchg
imul
inc
aad
cwtl
xor
mov
scas
mov
inc
dec
es
daa
inc
clc
loopne
sarl
inc
mov
rcrb
aas
aaa
and
adc
ja
xchg
xor
repz
add
mov
push
fmull
mov
loopne
jmp
xchg
aas
xor
insl
or
fbstp
rolb
xchg
sti
cli
pop
sbb
in
mov
cmp
mov
hlt
mov
orb
add
hlt
outsl
sbb
out
jecxz
adc
jo
or
lock
add
and
push
cmpsb
iret
sub
inc
mov
ss
mov
jl
scas
jmp
jge
or
sbb
push
lods
hlt
ds
pusha
nop
pop
andb
adc
js
push
das
or
inc
repnz
loopne
cmp
rsm
ja
lret
mov
test
cmp
push
sbb
mov
iret
pop
sbb
fisubl
call
jmp
out
jns,pn
or
cmpsl
fsubrp
movsb
ret
push
sub
daa
dec
push
pop
rcl
mov
xor
inc
dec
mov
jo
add
mov
jns
fidivs
mov
subl
mov
mov
xor
outsl
cmp
cmp
sub
fmull
rcrl
arpl
or
mov
out
daa
stc
mov
hlt
jge
popa
mov
mov
dec
lods
pop
bsf
jb
sub
xchg
fbld
stos
push
popf
xchg
xchg
or
jg
xor
repnz
mov
cld
pop
sti
mov
pop
in
xor
jl
mov
push
push
xchg
lcall
mov
fistpll
cmpl
push
xchg
mov
lea
adc
sub
sar
aas
cli
in
flds
icebp
jnp
neg
loop
ds
add
push
dec
adc
in
mov
fwait
push
mov
andl
and
ja
pusha
rolb
lods
mov
adc
in
aaa
jbe
imul
insb
lret
lret
fimull
jg
or
pop
mov
shlb
ljmp
jno
neg
add
inc
pusha
iret
aaa
fcmovnb
cmp
adc
and
jl
cmp
nop
iret
push
add
popa
js
psllq
push
stos
rep
push
iret
xor
lret
or
lret
shrl
rcr
push
xchg
fimull
mov
add
sub
pop
pop
shlb
sub
scas
fwait
loopne
push
pusha
cli
arpl
xor
ds
adc
out
or
cltd
dec
pop
fcompl
dec
sbb
repnz
pop
inc
cmp
push
ds
jb
xor
out
sub
inc
repnz
imul
imulb
mov
ja
push
mov
push
pop
mov
sahf
jl
push
aad
jae
lret
clc
sub
jg
add
adc
mov
hlt
jecxz
call
pop
leave
xchg
stos
test
insl
xchg
dec
out
push
loopne
jge
mov
lods
xlat
insl
jecxz
xchg
push
loopne
and
mov
fcoms
pop
lods
cmpb
push
in
int3
sub
cmp
inc
jae
data16
adc
xchg
cwtl
les
jp
inc
ljmp
xor
outsb
jg
incl
adc
cmpsb
xchg
repz
jmp
cwtl
arpl
or
pop
out
rolb
fsubl
hlt
sahf
pop
ss
scas
popa
push
xlat
jp
into
out
enter
outsb
popa
xchg
push
mov
inc
data16
mov
push
out
loopne
loop
cltd
jno
loopne
add
sbb
je
ja
xchg
sub
jle
test
push
sarb
xor
sbb
daa
roll
pusha
pop
loopne
pop
and
lods
cmpsl
fisubs
std
lods
adc
xor
leave
filds
or
mov
inc
cmp
inc
popa
inc
ret
or
mov
pop
mov
adc
mov
imul
lahf
push
sub
push
lret
mov
ds
mov
repz
insb
int3
dec
pop
mov
mov
in
jmp
loope
push
dec
lods
lods
in
jmp
jnp
addr16
push
xchg
fdivl
pop
xchg
adc
sub
hlt
inc
notl
popf
cmp
mov
push
xlat
mov
inc
push
stos
fildll
mov
xchg
jmp
dec
sbb
mov
jmp
mov
int
int
inc
pushf
sub
call
mulb
push
inc
mov
loopne
xchg
sub
subb
repz
arpl
aas
or
jle
cmpsl
dec
rolb
mov
jl
or
pop
outsb
jae
mov
and
add
jge
in
push
movsl
dec
in
sbb
and
cmpsb
xchg
loop
sbb
andl
cmp
dec
xchg
xlat
adc
gs
jb
andl
dec
ret
jg
test
add
jmp
pop
or
sahf
hlt
loopne
xchg
jmp
loopne
mov
cwtd
fistpll
iret
jp
dec
xchg
xchg
lret
inc
repz
cwtl
dec
adc
mov
inc
lahf
loop
xor
bound
imul
ss
fistpl
adc
fsubrs
js
dec
sarl
sub
std
jl
into
enter
ljmp
fdivr
dec
xchg
leave
aad
lcall
push
push
mov
ret
pop
mov
int
pop
cmpsl
xor
clc
shll
mov
outsb
lods
lret
fiadds
add
sbb
dec
adc
sub
push
push
movsb
push
cmpsl
sub
pusha
mov
push
imul
jns
cltd
jmp
cmp
lods
pop
mov
cmp
xor
pop
and
leave
mov
mov
in
fadds
int
cmpb
mov
mov
lds
pop
outsl
xor
jns
mov
jge
cmpl
cmp
in
mov
push
iret
lds
ja
pop
mov
out
adc
lock
fstpt
in
xor
pop
rorl
add
outsl
std
std
add
mov
sarl
imul
cmc
fisttps
inc
cmpb
mov
push
inc
adc
adc
repnz
jecxz
addb
dec
push
std
jmp
outsl
jno
cmp
ret
not
push
add
xchg
aaa
insb
pop
jo
repz
pop
out
or
loop
fisttpll
adc
lret
subl
xor
lret
jecxz
xchg
rorl
mov
dec
mov
into
mov
fisubrl
push
jmp
jnp
fsubrp
jle
test
cmp
fistpll
mov
xor
xchg
xchg
xchg
dec
rolb
fldenv
stos
xchg
cmpsb
movsl
sbb
into
cli
jge
add
in
lea
inc
jp
dec
cmc
adc
pop
mov
aad
cmp
jecxz
jg
push
jl
lret
cwtl
mov
movsl
aam
xor
aas
mov
popa
jmp
push
stos
cmp
push
cmp
popf
shll
dec
add
push
inc
shrb
je
xchg
sub
cmp
inc
xor
sub
jl
mov
es
sahf
mov
and
adc
xchg
mov
add
aam
pop
xor
fmull
jp
or
pop
movsl
jb
mov
dec
jnp
hlt
mov
addb
lods
xor
push
mov
loope
push
aad
rcrb
push
scas
in
inc
out
mov
mov
xchg
push
push
or
xor
in
jle
xchg
mov
dec
or
mov
hlt
ljmp
xor
mov
out
push
pop
stos
and
daa
or
mov
xchg
dec
sbb
pushf
std
out
cmp
dec
adc
ljmp
jnp
insb
aad
outsl
test
jge
test
mov
into
insl
popf
add
fs
mov
mov
jne
push
fldcw
sbb
pop
xchg
fldenv
imulb
mov
pop
jno
adcl
sbbw
mov
pop
and
pop
xchg
dec
or
xor
in
xor
sbb
push
mov
mov
leave
leave
jp
lock
adc
daa
jmp
adc
jecxz
das
fs
pop
dec
es
gs
jae
js
cmp
roll
test
xorl
mov
dec
pop
dec
fbld
lock
pop
mov
push
jle
add
xor
push
mov
inc
sub
std
mov
aaa
adc
dec
mov
loopne
inc
push
cs
cli
in
sbb
pop
lcall
push
inc
jns
pop
jg
or
mov
ja
mull
js
xchg
sub
cmp
out
inc
movsb
jmp
in
orl
add
jge
ret
repz
and
repz
adc
push
sub
insl
or
mov
lahf
leave
popa
adc
mov
xor
dec
xor
sbb
loop
inc
out
and
gs
movsb
mov
jmp
cmp
add
test
ret
sub
xchg
pop
lods
and
out
xlat
inc
pop
push
stc
mov
orl
orl
dec
sbb
decl
lds
mov
gs
mov
pop
or
pop
mov
xchg
sub
das
add
xor
test
xchg
lods
je
int
out
pop
fcompl
inc
xchg
sbb
outsb
pop
mov
jo
jl
xor
sbb
dec
sub
nop
shrl
loopne
sbb
sub
xor
sub
cs
add
push
or
fs
xor
ds
loopne
mov
cltd
mov
sbb
not
gs
mov
ficompl
adcb
aad
test
lods
add
jg
mov
and
mov
xchg
bound
or
mov
movsb
shrb
sub
push
enter
shrl
mov
push
in
bound
mov
xchg
pop
fisttpl
gs
mov
nop
sbb
shrb
imull
pop
aaa
pop
cmpsb
roll
popa
int3
pop
add
test
pushf
pop
push
xor
gs
lods
sbb
ss
stc
dec
test
insb
aas
insb
push
pop
and
inc
int
clc
push
xor
clc
xchg
adc
arpl
aas
xchg
push
xor
xorb
aaa
add
popf
inc
jle
lret
bound
push
sbb
pop
clc
iret
ss
pop
push
cwtl
mov
mov
aaa
cmc
jo
movsb
les
cmc
inc
mov
xchg
xor
lret
or
jecxz
pop
inc
sarl
shll
pop
or
mov
in
jg
pushf
cld
pop
xchg
push
sarl
mov
xor
scas
xchg
fwait
jae
pushf
cmp
into
lahf
movsb
test
fwait
enter
cmpsb
fadd
orl
mov
lcall
loopne
push
call
sub
ljmp
fmul
data16
in
inc
xlat
sar
cmp
jne
push
sub
fidivrs
mov
sti
xor
aad
pop
ljmp
loopne
lret
pop
int3
pop
adc
pop
clc
push
dec
pop
cmp
fmull
jns
addr16
pop
add
mov
scas
sbb
scas
pop
std
xor
pop
jmp
inc
sbb
mov
add
mov
xor
dec
push
push
je
icebp
shlb
mov
stos
sahf
add
loop
inc
xor
psllw
sti
aaa
shlb
gs
jge
add
cmp
sahf
push
add
ret
outsb
aad
push
dec
dec
ljmp
xor
ds
inc
mov
out
dec
mov
mov
fcmovbe
rorl
cwtl
jns
sbb
pop
nop
das
push
sbb
fsubs
je
imul
test
or
fcmovne
hlt
xchg
mov
sub
inc
mov
cwtl
jg
xor
rol
stos
xlat
push
imulb
loopne
outsl
add
xor
mov
xchg
cmp
cmp
mov
int3
loop
sbb
mov
xor
adc
pop
dec
mov
lea
jge
outsb
shll
push
fsubr
add
jne
fsubs
pop
test
scas
add
mov
out
and
pop
arpl
imul
bound
mov
imul
add
push
outsl
fdivr
inc
int3
fisttps
inc
les
in
mov
jns
jl
inc
out
mov
adc
pop
mov
or
fisttpll
pop
push
and
ret
daa
movsb
jbe
addr16
add
arpl
xchg
mov
mov
loope
das
adc
test
adc
jmp
scas
fwait
clc
xor
pop
jp
mov
or
sbb
stos
aas
jmp
inc
mov
or
xorl
mov
sbb
fnop
xor
cmp
jp
repz
scas
out
or
loope
in
aam
std
imul
gs
out
shlb
inc
jmp
xor
cld
wbinvd
or
mov
pop
cmp
mov
adc
ret
test
hlt
ljmp
out
test
cmp
xchg
cs
aam
and
cmc
pop
add
mov
mov
lds
clc
bound
movsb
fstpl
add
sarb
mov
push
jle
add
aad
jns
sahf
jae
subl
jmp
jg
daa
or
mov
or
bound
add
mov
and
gs
ret
mov
loope
lds
add
addl
mov
adc
in
adc
imul
lahf
pop
push
or
sarb
xlat
idivl
dec
setne
fistpll
jl
cmp
fldt
and
jnp
xor
jno
cmpsl
or
shll
mov
icebp
mov
cmp
dec
pop
cld
add
mov
dec
orb
cltd
dec
cmp
jecxz
lahf
imul
pushf
int3
push
lea
mov
jo
pop
and
pop
sub
mov
push
test
cmp
fisubrs
lahf
dec
push
subl
dec
fmull
push
sbb
and
call
fwait
mov
outsl
jno
lea
mov
or
inc
pop
movsb
sbbl
and
add
cmp
or
es
ljmp
or
push
lahf
fistpll
sbb
imul
fs
add
popa
cmc
push
mov
or
jo
jle
cmpsb
loope
stos
jg
nop
icebp
movsl
sarb
xor
fsubrl
aaa
lcall
ja
inc
push
sbb
das
dec
pop
pop
out
cmpsb
push
jge,pn
sbb
xchg
jge
aas
rclb
pop
lahf
insl
and
lods
sub
cmpsb
pop
sbb
pusha
movsb
lret
or
lods
fldenv
clc
js
scas
cmpsb
jl
cmp
mov
mov
or
pop
mov
dec
in
sub
xlat
fcompl
pop
push
dec
sbb
and
lahf
ljmp
addb
fstp
xchg
mov
inc
jnp
adc
icebp
sbb
sub
sbb
xchg
cmp
std
or
push
push
daa
mov
push
ficoms
push
jae
fwait
nop
lcall
je
out
sub
cmp
jb
test
jne
aad
pop
mov
icebp
cmc
xor
lock
mov
inc
and
push
data16
push
cmp
fidivrs
std
pop
jo
mov
mov
call
mov
pop
in
xchg
inc
ja
fstps
fsts
in
push
inc
lcall
xchg
jns
sub
arpl
ja
jmp
xor
xor
sbb
les
mov
adc
cmp
or
cmp
bound
inc
cwtl
fs
lds
in
shlb
jmp
xchg
aad
dec
dec
lock
aas
xchg
mov
call
add
sbb
call
data16
and
or
push
pop
add
push
jl
dec
and
jae
add
pop
jns
in
xor
sub
stos
adc
jnp
iret
pop
fsubl
sbb
popf
or
cmp
ret
mov
fisttps
jecxz
jo
xchg
out
push
adc
in
pusha
insl
pushf
scas
or
int3
pop
test
jne
mov
xor
and
inc
addr16
xchg
cmp
push
sbb
jg
inc
ljmp
mov
cli
setge
or
sub
inc
mov
mov
adc
cltd
into
int3
es
mov
inc
or
sbb
bnd
push
fxch
cld
imul
ljmp
movsb
xor
xchg
rclb
cmp
jmp
in
ljmp
fwait
or
repnz
rcrl
cmpsb
jb
sub
jecxz
fnstsw
xor
repnz
es
test
jbe
or
mov
xchg
cmp
pushf
or
loopne
push
lea
push
or
mov
or
jnp
push
xchg
imul
pop
dec
add
js
push
test
dec
fsubp
xchg
aaa
mov
sub
in
scas
push
inc
cmpsb
mov
ret
enter
les
jp
add
lock
jp
in
shlb
jae,pn
and
inc
push
lcall
xchg
push
movsb
xchg
push
jae
sahf
lahf
in
or
lcall
imul
ljmp
nop
push
js
dec
dec
lahf
inc
cmpsl
mov
imul
sub
sub
dec
add
mov
out
loop
shll
cmp
xor
jle
pop
mov
js,pt
hlt
xor
inc
mov
dec
jmp
repz
cmp
fistpll
fcmovne
jns
jmp
ss
das
adc
sub
jns
stos
jnp
int3
and
aas
enter
mov
loop
dec
or
insl
jo
int3
sbbl
sbb
fisttps
cltd
jne
jmp
in
add
mov
mov
dec
pop
xchg
xor
jno
or
in
sub
sbb
int
je
dec
mov
lret
pop
dec
sub
imul
cmp
mov
xchg
loopne
ljmp
data16
outsb
je
mov
jb
pop
push
mov
lods
fistps
ss
mov
sbb
leave
jle
mov
int
cmpl
sub
into
push
and
push
sub
and
shl
fwait
push
insl
dec
and
and
rep
addr16
in
mov
shrl
out
outsb
daa
push
fistpll
fs
add
cmpsl
pop
xor
lret
out
xor
or
inc
js
bnd
and
fcoml
rcr
fwait
int
and
out
xor
daa
mov
cmpsb
pop
mov
xor
mov
dec
loop
cwtl
pop
aaa
fisttpll
cmp
aam
jl
and
out
das
adc
outsb
decb
push
ret
xor
test
in
data16
test
push
lret
nop
je
ficoms
pusha
ret
cmp
test
xchg
pusha
jne
mov
mov
mov
jmp
rorb
inc
jg
rclb
sbb
jbe
jne
rcll
jecxz
mov
fstpt
cmp
xor
sub
push
sbb
mov
scas
push
pop
lock
pusha
cmpsb
jns
mov
fsubrl
inc
jl
out
jle
pop
xlat
cwtl
mov
stos
fucomip
mov
mov
adc
leave
pop
in
aam
and
mov
pop
popa
ror
js
mov
out
lods
bound
int
push
dec
mov
out
xor
call
lcall
and
popa
enter
iret
stc
mov
pushf
fwait
push
js
push
mov
xor
movsb
js
jbe
stos
pusha
jne
iret
nop
movsl
mov
int3
cmpsl
sarb
dec
rclb
dec
mov
scas
mov
out
scas
wrmsr
fidivs
sbb
xchg
mov
pop
cmp
mov
cs
inc
sub
cmp
inc
jge
pop
test
rclb
stos
pop
lahf
call
mov
ret
pop
testb
add
cmp
shlb
test
movsb
ds
stos
icebp
dec
or
xchg
test
jno
mov
outsl
pop
js
cmp
xor
lea
ror
mov
and
sbb
push
repz
rcll
mov
out
repz
stc
xchg
and
icebp
in
lcall
rclb
xchg
cld
adc
xchg
fistps
div
jne
repz
mov
test
test
mov
pop
xchg
push
ja
cmp
pop
test
or
dec
gs
arpl
fidivl
xor
xor
pushf
jo
pop
ja
jmp
lods
les
aad
pop
xchg
loopne
outsl
and
cmp
mulb
out
add
jb
lock
and
mov
xor
out
lock
imul
ror
mov
adc
mov
repz
fbstp
pop
cld
xchg
adc
xor
pushf
jg
and
ss
mov
push
dec
cmpsb
leave
pop
out
sbb
cmp
mov
mov
push
std
test
or
and
sbb
inc
adc
movsl
hlt
ljmp
pushf
mov
mov
sub
sbb
std
mov
jmp
inc
sti
std
lret
out
outsb
push
gs
int
mov
mov
adc
rcrl
jge
sub
push
lods
mov
sub
pop
mov
and
insb
sbb
xor
adcl
in
mov
sub
jg
xor
xchg
push
cltd
rcrl
dec
and
mov
mov
sub
pop
xor
call
ret
stos
repz
subb
inc
mov
push
jb
adc
jmp
add
cld
cmpsb
pop
fs
add
or
mov
or
fs
sbb
data16
xchg
ds
and
adc
test
push
int
cmp
mov
outsl
mov
clc
imul
mov
dec
dec
inc
in
aam
lcall
or
pop
pop
mov
dec
pop
push
pop
or
add
je
push
push
popf
dec
mov
sub
icebp
cmp
mov
pushf
mov
es
insb
xor
mov
jge
imul
out
in
mov
std
pminsw
jmp
xchg
adc
cld
dec
stos
rcrl
or
push
adc
out
aas
int3
sub
rcrb
imull
sbb
mov
inc
dec
aaa
int3
movsb
icebp
loopne
ljmp
cmp
lret
inc
cwtl
test
call
jecxz
pushf
loopne
and
stc
xchg
mov
sub
das
and
arpl
lods
mov
ljmp
cmp
rorl
xor
push
and
iret
scas
dec
mov
pop
out
mov
jle
addl
dec
dec
cmp
cs
lret
in
pusha
gs
mov
pop
test
and
dec
push
mov
inc
fwait
inc
jae
mov
inc
mov
pop
push
scas
jl
sbb
cmp
leave
lcall
and
and
daa
dec
and
mov
in
imul
in
sub
xchg
and
nop
out
js
int3
mov
pop
std
lods
xchg
int3
rcrb
mov
adc
jp
xor
aad
mov
loope
es
mov
or
inc
das
sbb
inc
addr16
sbb
jo
push
std
testb
jp
aas
push
push
imul
add
push
mov
lret
lcall
inc
bound
aaa
adc
sbb
pop
fimull
js
jg
clc
dec
pop
push
mov
std
rorb
int3
call
movsl
cwtl
pop
scas
push
daa
fucomi
mov
outsl
mov
mov
test
test
addl
fstps
sar
mov
add
jae
cld
jbe
out
clc
lret
les
lret
push
jae
xchg
jns
jge
or
lods
and
lods
mov
jae
stc
out
sub
mov
cld
rcll
rcrl
xchg
adc
add
lds
dec
sbb
in
nop
mov
mov
jno
filds
dec
adc
pop
lahf
test
mov
fstpl
cmpsl
and
ds
out
fildll
in
fmulp
sub
and
insl
mov
enter
inc
sub
mov
ljmp
stc
fbld
xchg
rol
icebp
add
xchg
sbb
jl
jg
xor
xor
dec
cli
sub
pop
mov
mov
ret
cmp
test
jge
sahf
scas
loope
iret
pop
sub
mov
xlat
stc
out
aam
xor
inc
pop
int3
clc
arpl
dec
sahf
movsl
dec
jl
in
inc
push
push
ror
pushf
push
push
insb
les
add
push
aas
push
sbb
pop
or
or
mov
dec
ljmp
fdivs
test
mov
xchg
jmp
or
rol
mov
cmc
add
sbb
and
cmovnp
sub
mov
cld
sbb
cmp
mov
das
jae
sub
inc
jmp
pop
ss
movsb
cmp
xor
idivb
push
les
pop
sub
or
rcll
lock
aaa
jp
sub
and
clc
ficompl
push
notb
popf
scas
adc
aaa
mov
stos
mov
jns
xchg
push
outsl
mov
pop
in
mov
cwtl
sub
adcl
inc
lock
mov
lcall
fisttps
inc
jbe,pn
and
clc
enter
int3
sar
sub
out
xor
roll
rcrl
pop
in
sbb
adc
lcall
mov
test
adc
add
mov
pusha
jbe
cltd
adc
and
cmp
mov
mov
cmp
mov
mov
loop
cli
jmp
xchg
jl
pop
or
nop
inc
xchg
mov
mov
int3
movsb
stos
mov
xor
mov
and
pop
cld
repz
cmp
loope
sahf
stos
sub
jge
leave
std
add
lahf
inc
push
xor
mov
gs
ja
or
sbb
jp,pt
lret
rolb
lods
jne
shrl
pop
mov
mov
xchg
cltd
mov
add
adc
add
sub
dec
movsb
addr16
and
aam
add
int3
or
dec
xchg
fmull
hlt
mov
dec
xchg
xchg
add
push
out
addr16
inc
test
and
pop
inc
adc
sub
inc
ret
in
push
adc
mov
and
aam
add
lahf
xchg
and
and
enter
sarb
sbb
fdiv
mov
loop
lods
adc
lret
and
insl
fldenv
sub
jle
ficomps
and
bound
dec
pop
stos
test
das
roll
mov
ret
push
inc
xlat
sbb
das
jp
pop
or
or
repnz
cmp
ret
inc
mov
popa
inc
cld
sarb
dec
push
inc
inc
fisttpl
xchg
and
cmpsl
mull
loope
cwtl
and
sbb
daa
push
xchg
repz
pop
in
das
sbb
add
insb
lret
andb
adc
mov
jmp
jne
mov
or
push
ss
jns
pop
out
mov
adc
dec
in
into
dec
adc
in
mov
jmp
push
xchg
mov
mov
and
ljmp
mov
in
xchg
dec
faddl
mov
add
or
dec
ficoms
push
sub
dec
roll
cmp
push
aad
rcr
rcrb
loope
daa
add
xor
dec
pop
mov
mov
and
cld
xchg
lret
pop
das
and
push
and
dec
nop
xlat
lret
loope
pop
in
mov
outsb
inc
orb
mov
cmc
call
lea
jne
stos
scas
pop
movsb
pop
and
sub
xchg
inc
in
mov
mov
push
sub
test
aas
xchg
mov
push
xchg
hlt
out
jae
xor
popf
ljmp
cmp
dec
into
jno
mov
mov
pop
push
cmp
popa
enter
sub
add
jge
xlat
xchg
xchg
lret
in
int3
cld
out
fidivrs
lock
dec
sti
push
and
stos
cld
sub
jnp
dec
push
out
xchg
out
icebp
lcall
and
xchg
into
stc
nop
decl
stos
jg
aas
dec
fists
lods
jnp
aaa
xor
data16
mov
mov
mov
pop
jnp
or
in
cwtl
or
or
pop
nop
icebp
pop
mov
jmp
sbb
pushf
adc
js
fisubs
cmp
int3
sub
js
lock
xor
cmp
inc
dec
xor
pop
mov
cs
orl
xor
mov
dec
xor
popf
pop
outsb
pop
aaa
daa
dec
popf
loopne
mov
pop
add
call
lahf
jns
lea
cmp
cli
lret
fisubl
pop
loop
jmp
cld
xor
mov
push
cltd
in
fwait
movd
and
scas
call
ljmp
xlat
icebp
add
pop
xchg
or
cmp
inc
ja
data16
inc
pushl
fwait
in
pushf
sbb
icebp
movsb
xchg
std
mov
add
or
movsb
adc
xor
nop
dec
pop
mov
jg
mov
push
push
cli
lods
push
dec
pusha
rcll
cmp
lods
xchg
iret
mov
mov
and
cld
jecxz
pushf
and
je
xchg
jle
jnp
mov
popf
sbb
outsl
pop
fs
popa
jmp
sbb
out
add
xchg
pop
mov
pop
cli
xor
sbb
rorl
cltd
mov
xchg
pop
cs
add
lahf
pop
xor
push
pop
adc
outsb
add
and
mov
cmp
mov
int3
inc
cmp
call
es
mov
jl
push
cli
shlb
in
xchg
outsb
mov
fdecstp
out
enter
arpl
outsw
mov
sub
inc
push
xchg
adc
xor
pop
jo
cmc
testl
inc
adc
das
fstps
mov
outsl
inc
repz
lret
sbb
in
xor
fbld
add
cmpsb
into
mov
and
and
inc
roll
cmc
push
adc
inc
pop
push
lds
dec
mov
inc
or
adc
push
xor
stos
push
cmp
rcll
or
js
pop
fwait
push
mov
push
inc
jne
rcr
sbb
push
adc
pop
mov
push
add
xchg
mov
lods
mov
loopne
inc
roll
pminsw
test
int3
cwtl
mov
jp
rorl
inc
jmp
jne
sti
out
je
pop
add
test
jno
rolb
xorb
mov
nop
mov
movsb
sub
adc
adc
arpl
adc
call
jno
mov
xorl
mov
push
jne
les
rolb
clc
jno
in
inc
jge
xchg
mov
xchg
fwait
xchg
sub
leave
aas
lahf
aad
add
sahf
pop
dec
jb
adcl
jge
pop
aaa
pop
daa
and
arpl
popa
and
ds
bound
int3
and
cmpb
jb
repnz
push
mov
outsl
jbe
roll
call
fs
out
xchg
into
jg
mov
pop
stos
and
xchg
pop
mov
inc
sbb
mov
cmp
add
fldt
daa
dec
sub
mov
lret
in
xor
enter
push
xchg
xchg
dec
adc
push
scas
or
pop
call
push
adc
ficoml
inc
adc
shrb
inc
mov
scas
jmp
stos
xor
mov
dec
bound
mov
fwait
test
dec
xor
fimull
dec
mov
mov
lods
inc
cmp
xchg
xchg
add
ja
pop
mov
xchg
or
sub
rcrb
sar
enter
lds
es
push
cmp
daa
xchg
clc
movsl
stos
and
pop
jl
jge
mov
push
cwtl
out
dec
push
xor
loop
add
scas
push
repnz
or
idivl
pop
repz
jp
xchg
push
cmpsl
lock
je
cmp
sub
and
mov
xor
fwait
jmp
loop
push
dec
fdivrl
cmp
cmc
mov
bound
or
shlb
sbb
ljmp
into
sub
aaa
enter
mov
stos
str
ret
out
mov
xor
cmpsb
dec
aas
sbb
cmpsb
sub
mov
pop
leave
std
pusha
adc
or
jle
adc
pop
mov
xchg
and
dec
fadds
and
mov
lock
loope
int
dec
xor
ret
mov
adc
pop
orl
js
rcrb
lea
cmp
jp
jb
xor
stos
lahf
xor
sub
pop
add
mov
int3
push
sti
xchg
add
mov
ja
mov
je
cmp
jmp
push
cwtl
push
jne
sbb
aaa
es
rclb
push
add
ja
scas
pusha
fs
jns
pop
in
mov
push
adcb
push
adc
pusha
repnz
and
outsb
or
je
addr16
jb
add
dec
xchg
je
push
stos
adc
jae
push
xchg
push
dec
aam
sbb
mov
lret
cmpsb
mov
sub
and
sar
mov
dec
dec
cmp
repz
les
push
jne
loopne
mov
rcr
mov
loop
mov
jo
jg
dec
pop
dec
mov
loop
popa
jnp
dec
mov
or
fsts
inc
fidivrs
mov
int
add
into
ret
in
sub
arpl
mov
test
add
push
lock
out
dec
js
pushfw
outsb
scas
push
and
mov
cmpsl
jmp
shlb
xlat
push
loop
pop
fldenv
iret
out
lods
out
jcxz
inc
fnsave
jecxz
cmpsl
adc
fwait
lcall
pop
popf
into
inc
mov
movsl
push
sbb
and
adc
mov
dec
push
mov
xchg
cmp
cmp
into
outsl
pusha
cmpsl
into
mov
fildll
mov
sub
inc
mov
and
or
stos
out
les
sub
and
out
and
lds
pushf
roll
adc
ja
dec
popa
cltd
lret
cmp
xor
dec
push
lods
jmp
jb
in
xor
xchg
push
mov
push
push
mov
cmp
call
xor
sub
adcl
sub
mov
mov
les
push
ficoml
sub
mov
out
iret
arpl
mov
jne
hlt
xchg
shr
outsb
fs
and
enter
test
lods
icebp
pop
mov
movsl
jns
mov
notb
inc
push
push
xor
push
mov
push
ja
mov
sahf
push
mov
cmpl
dec
sub
xchg
pop
lock
mov
mov
push
lds
in
mov
mov
arpl
cli
xor
mov
jb
mov
dec
ss
jnp
xchg
sub
imul
add
nop
arpl
cwtl
leave
jecxz
xor
adc
mov
loop
jecxz
xchg
or
pop
bound
stos
and
jno
jmp
xchg
fmull
sbb
or
cld
cld
push
stos
dec
inc
imul
dec
int
lock
xchg
or
and
cli
pop
test
aad
pushf
cli
cmpsb
lcall
jno
pusha
adc
mov
es
jb
push
inc
sub
sbb
jb
mov
jg
leave
push
loopne
les
and
ja
movsb
test
clc
ja
xchg
and
inc
fildll
xchg
test
aaa
insl
mov
inc
sbb
lret
mov
sub
dec
inc
fdivrl
in
mov
insl
jecxz
push
cmp
xchg
sub
hlt
xor
rcll
adc
mov
cmp
sub
rep
rcrl
adc
mov
xchg
sub
push
subps
push
shll
jmp
add
xchg
leave
dec
shl
cmp
mov
scas
ficomps
sbb
fstl
jnp
lods
mov
mov
pop
clc
push
push
cmpl
mov
stos
add
mov
or
ljmp
fwait
inc
daa
mov
mov
or
or
pop
ja
pop
cli
icebp
sub
dec
in
sbb
pushf
lcall
scas
xchg
jg
jae
xlat
cmp
sbb
jg
clc
add
ljmp
in
pop
xchg
sbb
jae
das
clc
lahf
sbb
dec
cmp
mov
xchg
mov
hlt
push
inc
out
xor
adc
mov
cmpsl
mov
ror
mov
inc
mov
inc
jmp
dec
xchg
jbe
shl
push
std
xchg
and
int3
mov
add
xchg
jp
jnp
fnsave
outsl
aad
and
jbe
mov
push
rcrb
xor
enter
iret
and
pusha
xchg
dec
pop
dec
scas
rcrl
fdivrl
sti
iret
cwtl
push
mov
cs
test
xchg
dec
jmp
cltd
mov
pop
and
cmpl
jecxz
mov
push
push
stos
xor
dec
push
les
insb
add
sub
jle
dec
in
faddl
cld
aam
repz
test
lahf
mov
les
icebp
mov
leave
imul
xchg
movl
mov
add
andl
sub
aad
sbb
ljmp
test
popa
sbb
xchg
jge
imul
out
popf
lock
jecxz
mov
xchg
sbb
aas
sbb
scas
sbb
xchg
xchg
lods
mov
rorl
add
xchg
sub
in
inc
mov
movsb
arpl
jg
cmp
sub
dec
pushf
dec
int
lcall
mov
cs
pop
sub
int
or
mov
push
cli
outsl
jnp
test
sbb
ljmp
lods
js
outsl
xchg
movsb
popa
inc
pop
sub
pop
arpl
aam
das
loop
xchg
pushf
in
lahf
mov
lock
cmp
xchg
pop
adc
test
rorl
mov
ret
sar
mov
lahf
jge
stc
cmp
mov
jb
fwait
mov
add
xlat
xor
scas
aas
mov
jo
sbb
inc
stos
test
add
fiadds
enter
xchg
aam
rcll
gs
ja
rorb
sbb
jecxz
sbb
xchg
mov
mov
ljmp
mov
fdivl
cmp
and
inc
xchg
jmp
movsb
jae
loopne
arpl
enter
loop
jecxz
in
mov
adc
and
or
pop
js
xor
fisttpll
pop
out
cmp
sbb
mov
insl
inc
pop
call
sbb
test
jp
mov
inc
das
sub
mov
ror
mov
hlt
movsb
lds
xor
mov
pop
mov
inc
sub
xchg
push
dec
or
fnclex
pmulhw
pop
sbb
insl
cmp
mov
mov
mov
mov
sbb
js
lcall
ficompl
fistpl
cld
push
pop
jns
fidivl
stc
pop
in
dec
cmp
mov
sbb
aad
cltd
mov
inc
dec
mov
push
pusha
cmp
arpl
xor
test
aas
dec
ret
adc
int
js
push
sbb
mov
repz
xchg
les
mov
loop
and
sti
adc
and
cmp
testl
notl
fcoml
imul
fnsave
mov
gs
xchg
adc
imul
cwtl
jae
shll
je
cmpsb
pop
mov
pop
push
push
adcb
mov
mov
cwtl
or
sub
loopne
mov
xchg
pop
xor
lret
shlb
jle
sbbl
out
arpl
jge
aaa
lahf
int3
shlb
pop
push
xchg
xor
cld
scas
push
pop
rcrb
in
out
jno
inc
xchg
sub
xchg
rolb
nop
std
dec
xchg
and
insl
fsts
pushf
sbb
lcall
cmc
cmp
lcall
push
arpl
cltd
clc
stos
mov
popf
mov
mov
inc
loopne
testb
fistpl
mov
push
ret
sub
inc
pushf
movsl
push
mov
aam
ss
nop
sub
xchg
cltd
callw
repnz
cmpsl
ja
xor
adcb
add
popa
sbb
lcall
adc
jp
ficoms
cmpsl
adc
fmuls
mov
mov
push
mov
rorb
int
jo,pn
sub
cli
aas
jns
subl
dec
mov
push
sbb
cmpsb
iret
push
mov
xchg
xor
dec
xor
fstl
rcl
cld
nop
mov
ja
pop
jno
dec
insb
push
cmp
add
sti
add
es
insb
shl
mov
sub
mov
xchg
fisubrl
pop
or
mov
movsb
add
cmp
adc
insb
inc
dec
adc
loop
pop
pop
fst
stos
inc
lea
pushl
ret
stos
and
mov
xor
mov
lods
pop
pop
cmp
pop
aas
push
jg
fcmovnu
cmc
and
push
je,pt
ret
and
pop
cmp
je
cmp
sub
xchg
and
fwait
loope
xchg
cmpsb
fldt
jmp
in
xor
in
mov
rcll
or
ss
adc
mov
xlat
xor
addl
mov
pop
jp
mov
jge
mov
jbe
lods
push
fdivrs
jp
xchg
mov
stos
bound
pop
fwait
clc
sbb
push
in
xor
divl
adc
clc
push
add
cltd
or
movsb
or
lods
or
sub
mov
into
cmp
jp
xchg
inc
push
es
mov
fldenv
in
dec
jnp
insl
xlat
cli
and
add
test
xchg
dec
sbb
imul
and
popf
jecxz
mov
push
bound
outsl
rol
mov
mov
daa
adc
icebp
adc
stc
mov
adc
mov
mov
mov
out
fldcw
or
or
iret
repz
mov
sti
out
adc
aas
or
sub
adc
xchg
inc
push
clc
mov
repz
in
sbb
les
addl
mov
addr16
loop
icebp
test
pop
test
movsb
mov
fwait
sbb
into
fsts
cmp
mov
inc
adc
and
mov
nop
mov
out
pop
xchg
addr16
mov
dec
sub
or
xor
sub
sub
outsl
fstpl
insb
mov
in
mov
aam
std
pushf
mov
sub
mov
pushf
push
mov
pusha
jmp
push
adc
mov
aam
jp
jno
dec
xor
push
jg
inc
jb
ds
or
in
jg
aaa
lahf
mov
and
cltd
repnz
sub
leave
or
adc
mov
data16
enter
icebp
inc
inc
pop
lea
inc
call
mov
mov
pop
rcrl
arpl
cmpsl
pop
vpsubusw
std
test
lods
test
push
ljmp
jmp
xchg
icebp
lods
mov
mov
shrl
pop
cmc
mov
sub
gs
mov
adc
std
jecxz
ljmp
sub
mov
pop
mov
outsb
mov
int
mov
push
bound
and
jbe,pt
mov
insl
mov
mov
pop
mov
iret
and
pop
lea
mov
mov
repnz
ljmp
fdiv
fisttpl
mov
jae
pop
sub
or
sub
mov
cmp
insb
fcmovb
dec
pop
xchg
push
xor
sub
sarb
jmp
inc
dec
sbb
mov
fldcw
xchg
movsb
sbb
loopne
movsl
movsb
repz
or
lods
xor
jge
add
push
adc
push
and
insb
sbb
push
lock
jae
inc
push
loopne
sbb
jb
mov
aam
mov
jp
and
pop
mov
lea
mov
ss
sbb
and
xor
jecxz
outsl
or
mov
jge
movl
cmpsl
or
jae
lock
cmp
ss
add
sub
cltd
xor
cwtl
add
sbb
inc
and
jecxz
sbb
mov
iret
rorl
mov
out
scas
inc
adc
dec
dec
test
mov
repnz
sbb
push
xchg
lock
outsb
ficoms
adc
hlt
pop
stc
or
pop
dec
outsl
std
xor
sbbb
push
dec
pusha
cmp
cmp
cmp
xor
das
jne
mov
mov
ja
call
scas
xchg
xor
ljmp
das
push
mov
mov
aaa
mov
fistpl
xchg
or
fstpt
adc
sti
jge
sbbl
and
jg
stc
lret
or
into
and
stos
ja
or
jae
sub
jl
push
jp
push
fsubrl
jl
dec
xchg
mov
and
and
mov
mov
ret
ja
fildl
xor
mov
add
xchg
or
incl
sarb
inc
xchg
sti
rcll
jb
idiv
mull
mov
add
ljmp
and
les
shll
pop
rcrl
push
and
push
jl
pop
jo
fstpl
xchg
pop
clc
fists
inc
pop
shll
cmpsb
push
popa
outsl
push
mov
shrl
inc
mov
sarb
push
push
pop
xor
aam
cs
jecxz
rolb
mov
sarb
cmp
mov
inc
ret
aam
lds
or
jecxz
leave
in
in
push
ds
sub
clc
aaa
dec
xor
jp
imul
js
add
notl
xchg
sub
xchg
daa
add
pop
inc
cmp
jge
sub
jbe
cmpsl
addb
push
cmpsl
xor
test
xor
jecxz
xor
mov
jbe
popf
add
or
adc
push
cmpsl
punpckhwd
dec
mov
pop
loop
shll
xor
insb
sbb
lahf
pop
inc
dec
xor
mov
dec
pop
mov
sub
jo
popf
xor
movsb
test
inc
cli
hlt
jp
out
mov
scas
push
ss
cmpsl
ljmp
sbb
lahf
icebp
aaa
or
in
out
push
push
mov
cmp
mov
push
mov
in
pop
insb
xchg
sub
cmpsl
sbb
sub
sarb
xchg
cmpsl
dec
mov
in
push
iret
sub
loopne
push
jo
frstor
inc
inc
aad
jmp
iret
sahf
loop
inc
mov
fstp
loop
jne
cmpsl
mov
hlt
mov
sub
nop
xchg
sub
pop
idivl
push
cltd
pop
fwait
out
idivb
or
jns
push
lret
mov
sbb
add
dec
push
dec
hlt
adc
mov
mov
bnd
lahf
add
sbb
daa
into
lods
add
cmpsb
push
xor
and
sbb
add
adc
imul
imul
add
pop
nop
jl
scas
dec
cmp
inc
clc
scas
jbe
cltd
inc
pop
mov
dec
dec
jns
mov
std
mov
pop
pusha
cltd
inc
cmp
into
pop
cltd
cld
or
scas
in
mov
das
mov
mov
clc
loopne
movl
cltd
std
fdivl
pop
stos
ja
jle
jle
inc
call
into
inc
lcall
jp
dec
mov
dec
test
jb
cmp
lds
inc
or
mov
xchg
lds
jne
xchg
pusha
outsl
jle
sbb
into
fs
jecxz
js
divl
cltd
mov
ljmp
cmp
out
fcoms
jae
inc
or
pop
mov
push
xchg
mov
push
mov
mov
inc
out
leave
fwait
stc
push
cmpsb
jb
push
scas
sbb
out
clc
add
fwait
push
cltd
add
inc
mov
ss
mov
inc
adc
or
test
fisttpl
sub
adc
call
pop
push
push
mov
mov
mov
ss
in
push
and
add
ret
mov
icebp
sbbb
repz
jp
xor
popf
dec
mov
sbb
xor
inc
fdiv
icebp
std
cltd
insl
cmpsl
jp
sbb
stos
inc
aas
add
lcall
mov
xchg
push
mov
xor
push
fimull
push
cmp
movb
fnstsw
stc
stos
jecxz
stc
inc
add
aam
arpl
std
gs
jg
frstor
cmp
scas
add
bound
xchg
xor
loope
jmp
shll
add
out
outsb
adc
xchg
sbb
sbb
inc
jl
or
push
imul
pop
pop
jmp
and
std
jne
sub
lret
movsb
add
scas
orb
adc
pop
adc
shlb
sub
loop
xchg
addb
filds
mov
adc
pop
and
adc
and
mov
or
mov
xor
sarb
cmpsb
dec
sbb
and
scas
insl
pop
jbe
fwait
cmpl
lea
mov
es
add
fldenv
xor
lret
in
inc
aad
insl
or
jb
adc
sbb
add
pop
adc
rclb
dec
imul
xor
cmp
inc
repnz
into
push
and
adc
or
stos
push
insl
arpl
dec
daa
xlat
adc
out
outsl
or
lods
arpl
sub
xchg
cmpsl
fs
shlb
xor
dec
int3
rorl
push
cmp
jb
es
and
jnp
mov
daa
faddl
cmc
sbbl
lods
xor
enter
jbe
push
and
addb
sti
cld
pop
push
lods
or
cwtl
cmc
dec
out
movsb
cmpsb
fdivrl
jnp
nop
out
sbb
hlt
andb
mov
ss
fidivrl
mov
in
pusha
sbb
call
jle
cwtl
and
fmuls
xchg
pop
shr
pop
mov
subl
xchg
mov
out
cmp
sahf
out
pop
fcomip
into
lret
xchg
xor
loopne
bound
xchg
out
xor
xchg
dec
iret
cmpsl
je
xchg
or
inc
cmpb
lods
or
add
insl
pop
iret
and
bound
jne
xor
cmp
push
fildl
int3
out
imul
xchg
or
mov
jno
stos
mov
ret
movsl
dec
add
mov
insl
xlat
sub
or
xor
les
stc
leave
sbb
insl
xchg
pop
dec
cld
in
sarl
dec
iret
xor
jg
xchg
icebp
aad
add
mov
pop
stc
in
inc
jmp
enter
data16
xchg
pop
push
adc
out
stc
das
inc
jne
fildl
movsl
test
sbb
sbb
fistps
arpl
mov
cmpsb
testb
or
adc
dec
jle
scas
aam
jne
pop
add
or
sbb
pop
movsl
xchg
out
xchg
popf
dec
imul
jns
sbb
jp
pushf
ss
cltd
aaa
ror
push
or
or
cwtl
stos
or
xor
rorl
test
xchg
aaa
jecxz
stos
xor
pop
jnp
lret
call
push
or
xor
push
into
fildl
mov
add
lcall
dec
outsb
sbb
dec
mov
bound
fisubs
repnz
mov
jbe
adc
jmp
out
sbb
sbb
imul
add
mov
cmp
aam
pop
inc
and
fcompl
repz
and
mov
stc
repz
movsb
cli
push
sub
daa
cmp
sbb
int3
xchg
xor
mov
insl
mov
xor
pop
cmp
inc
fldcw
jmp
iret
movsb
jl
daa
mov
jmp
mov
pop
dec
test
adc
test
lcall
inc
scas
or
jb
aas
cmp
out
mov
lahf
mov
mov
out
dec
notl
xor
test
shrl
adc
pop
iret
cmpsb
jg
addr16
xor
adc
dec
push
ret
jno
mov
iret
js
mov
ss
cmp
inc
repz
inc
jb
rorl
lcall
cmp
arpl
loope
scas
xor
es
jo
out
mov
jb
lret
in
mov
jp
push
or
jno
mov
fidivrl
movsb
add
roll
test
repz
scas
jno
gs
mov
dec
inc
mov
ss
sbb
xlat
popa
rol
iret
loope
out
out
push
xrstors
inc
popf
jmp
sbb
add
ret
enter
inc
iret
inc
pushf
cs
scas
mov
pop
xlat
push
movb
or
frstor
xchg
push
xor
pusha
faddl
orl
jo
je
push
inc
mov
lods
mov
scas
dec
test
inc
in
mov
jg
int
scas
in
inc
xchg
or
pop
mov
sbb
jo
sbb
lods
ret
es
in
or
lret
dec
adc
xchg
les
adc
sbb
das
mov
push
push
mov
xchg
lods
cmp
jbe
les
mov
dec
sub
lods
and
pop
mov
outsb
pop
rcrb
cld
das
mov
inc
or
iret
push
inc
and
rcrb
and
jecxz
inc
out
scas
lods
xor
jmp
std
int
mov
pop
adc
aas
sbb
sahf
pop
xlat
outsb
mov
lock
iret
xor
popa
movsb
dec
jno
lock
clc
fdivr
and
test
shrb
pop
jns
cs
cwtl
inc
add
jne
or
out
pop
int
cmp
pshufw
xchg
mov
rcl
aam
js
xor
cmp
femms
out
mov
ret
popa
fcmovne
pop
cmp
dec
or
jae
mov
ds
ret
decl
or
sub
aaa
loop
xchg
das
or
imul
push
inc
or
add
mov
fcomps
sbb
cltd
out
jge
outsl
xchg
mov
int3
mov
rcll
stc
push
inc
jge
negb
dec
call
xchg
gs
jp
xor
inc
int
pop
sarl
scas
loope
push
test
insl
fcom
push
jmp
cwtl
fmuls
pop
jg
xor
ret
ljmp
cmc
nop
adc
cmp
dec
and
mov
ja
sub
in
cltd
rolb
sub
loop
mov
xor
inc
call
cmp
fs
inc
dec
jae
jb,pt
xchg
xchg
mov
pusha
cltd
sbb
nop
mov
sub
push
sbb
push
fisttpll
stos
and
dec
pop
cmpsb
data16
mov
cmp
mov
sbb
add
lods
jb
sahf
repnz
ficomps
faddl
dec
adc
xor
dec
sub
jg
mov
sbb
ret
aas
mov
xchg
cmp
shl
pop
mov
subb
sub
enter
mov
es
fwait
stos
and
mov
iret
sbb
aam
xor
mov
notb
push
cld
lret
adc
sub
test
cmp
cmc
and
lds
imul
cmpsb
not
mov
rcll
fsubr
dec
xor
and
xchg
xorl
inc
or
jns
sbb
jp
pop
icebp
cmp
aam
xchg
fildll
push
push
fldt
xor
sub
stos
cmpl
or
dec
cmp
xchg
mov
push
cld
pop
jmp
sbb
cmpsb
das
js
adc
push
jle
jnp
sar
pop
jp
cltd
add
mov
inc
mov
push
dec
push
in
test
cmp
leave
test
jbe
outsl
mov
cmpsb
adc
negb
cli
cmc
rcrb
cmp
loopne
push
movsl
flds
dec
es
aaa
sub
dec
fninit
mov
lret
rolb
and
hlt
out
mov
pop
sbb
sub
lods
inc
imul
push
lcall
push
jle
dec
sbb
fildl
mov
jmp
sbb
mov
add
xchg
adc
imul
shlb
out
ss
mov
jb
adc
adc
fwait
rcrb
xor
xchg
xor
add
jg
jle
add
dec
push
and
or
outsl
lret
xchg
sbb
stc
push
arpl
lods
sbb
test
pusha
xchg
adc
je
iret
add
push
inc
test
in
or
mov
add
mov
mov
jmp
daa
fs
inc
movsl
mov
mov
lods
cmpl
mov
shlb
test
xor
test
ficomps
jp
pop
js
repz
push
cmpb
test
xor
js
outsl
fs
dec
push
cmp
movsl
xor
loopne
and
sub
or
add
fmull
jl
jne
mov
sbbb
xchg
cmp
vrsqrtps
icebp
fisttpll
xchg
shlb
ror
shl
out
stos
aad
cmp
enter
test
stos
je
les
imul
cld
adcl
and
adc
out
pop
or
xchg
ret
test
push
movl
jmp
stc
imull
stc
or
push
cmc
sti
es
mov
adc
call
or
dec
imul
test
cmp
movsb
pop
lock
inc
and
xchg
jne
mov
jmp
inc
stc
mov
pop
les
push
sbb
xor
enter
fnstcw
mov
adc
je
daa
jnp
and
xchg
mov
jmp
push
xor
adc
lahf
fldenv
fstl
cmp
rcr
fldenv
ss
dec
test
dec
sub
dec
out
mov
pop
pop
jle
xchg
jno
mov
jmp
shlb
xor
mov
pop
jg
mov
daa
dec
mov
repnz
sbb
sub
jle
push
mov
mov
mov
loopne
lods
xchg
aas
and
xchg
std
push
inc
jo
mov
and
xchg
xchg
jecxz
cld
mov
pusha
cld
mov
sbbb
arpl
imul
bndstx
jno
mov
ss
pop
shrb
outsb
stos
scas
and
cmc
sbb
mov
push
mov
lods
jl
xor
js
adc
mov
adc
jb
js
mov
insb
mov
nop
jns
arpl
xchg
mov
js
sub
dec
iret
jecxz
hlt
inc
bound
pop
shll
push
xor
lods
xchg
add
cmp
enter
arpl
push
mov
and
inc
and
or
sbb
int
je
xor
dec
add
dec
icebp
xor
mov
cmp
dec
aas
cmp
insb
and
shll
adc
cmp
dec
xor
mov
sub
push
cmpsl
adc
xchg
int
sbb
mov
and
mov
xchg
push
mov
insb
xor
negb
mov
pop
mov
in
les
inc
nop
shlb
out
mov
mov
iret
insb
imul
aad
addr16
fmuls
fsubrs
xor
iret
cmp
mov
popf
dec
movl
lods
les
addb
mov
jnp
nop
adc
mov
inc
push
int3
test
adc
xor
sub
push
test
in
sbb
xchg
std
fucomp
int3
lea
mov
dec
sub
data16
jnp
jbe
fcmovbe
std
xchg
fucomp
jns
inc
sbb
mov
lret
xchg
loopne
addr16
leave
fsubl
imul
xor
sub
pop
xchg
flds
inc
mov
jecxz
orl
or
mov
and
fildl
sbb
imul
pop
js
add
xor
dec
mov
mov
jecxz
lahf
ret
out
sarl
and
aad
outsb
and
enter
add
mov
loop
addl
scas
movsl
pop
jno
insl
mov
mov
arpl
cwtl
push
hlt
popa
jnp
cs
out
out
test
loope
xchg
mov
push
add
shlb
xchg
push
in
push
push
dec
push
push
jae
ror
push
lret
push
dec
mov
inc
xchg
jnp
and
dec
inc
addr16
ss
xchg
xchg
stos
push
sub
sahf
dec
or
xchg
scas
cwtl
cmp
into
mov
pushl
rorl
mov
jb
shr
mov
orl
cmp
cmp
jne
sub
xor
imul
scas
fstpl
add
mov
insb
loopne
or
mov
jge
or
pop
shll
lock
nop
and
sarl
loopne
lock
movsb
mov
movsl
std
mov
fdivs
push
loope
cli
jne
cmp
into
clc
sbb
in
lods
aaa
nop
loope
cltd
aas
mov
sub
dec
dec
in
pop
sub
int3
je
lret
lock
pmulhw
movsl
mov
cld
outsb
and
sbb
xor
mov
ljmp
jno
fdivr
mov
into
mov
test
cmpsl
sbb
dec
aam
cmpsl
outsl
dec
cmp
pop
pushw
stos
test
pop
push
leave
cwtl
jnp
sbb
ret
dec
sub
add
cmpsl
sub
stc
adc
inc
xor
push
pop
or
and
popf
sub
cmpsb
cmp
pop
pop
xchg
xchg
mov
lods
iret
sub
mov
xchg
sbbb
or
pop
sbb
js
push
fucomp
cltd
mov
pop
xlat
jb
dec
arpl
and
dec
cs
incb
mov
daa
jecxz
pop
ja
jp
jmp
adc
push
sti
cmp
add
out
scas
push
fimuls
lret
cs
jle
pop
out
adc
loop
mov
out
lods
push
jnp
hlt
xchg
mov
sahf
aaa
popf
es
mov
test
rcrb
out
cmp
pop
add
in
push
fisubl
mov
push
cwtl
aam
ds
scas
or
fsin
inc
shl
in
les
lods
pop
rcll
rcrl
sub
sbb
adc
mov
inc
stos
dec
sub
hlt
ds
aad
clc
adc
mov
stos
mov
pop
test
inc
xlat
add
adc
fisubl
fists
imul
stos
sbb
test
dec
dec
repz
imul
mov
dec
sub
loope
lahf
fs
adc
sahf
aas
xlat
xor
ljmp
jno
xor
loope
adc
push
push
xchg
pop
shrb
xlat
xchg
loopne
lods
stc
mov
icebp
aam
jmp
pop
sahf
xchg
sbb
cmc
dec
movsb
mov
push
in
jmp
enter
mov
pop
fidivrl
cmpsb
ljmp
popa
or
hlt
scas
jae
aaa
jns
std
mov
das
jne
inc
push
and
xlat
xchg
inc
mov
xlat
ljmp
xor
mov
dec
mov
test
pushl
push
call
lret
lcall
test
xor
xchg
pop
mov
mov
adc
shl
hlt
mov
sahf
and
cmp
sub
xchg
pop
inc
test
lret
loopne
xor
inc
mov
jmp
adc
or
test
xor
fisttps
pop
push
mov
xor
jae
jns
sub
push
imul
movsl
dec
pop
les
jbe
jp
mov
xor
mov
inc
cmp
mov
inc
or
mov
cmp
loopne
je
cmp
mov
push
and
xchg
lcall
mov
subl
pop
out
outsl
ficoms
movsl
cvtdq2ps
xchg
mov
loope
pusha
shlb
push
popl
and
sub
adc
lret
or
cmc
push
in
popw
popf
xchg
aas
push
mov
lret
cmp
inc
in
leave
fbld
push
std
xor
inc
sbb
inc
jmp
mov
stos
add
mov
out
in
andb
mov
jg
shl
mov
pextrw
sbb
fsubl
int3
aam
xlat
push
mov
inc
lret
mov
movb
test
lret
mov
test
insb
or
sbb
xcrypt-cbc
cmpsl
aam
ja
lock
cmpsb
in
push
aaa
jb
es
lods
pop
sbb
adc
dec
out
std
enter
cmpsl
add
std
push
mov
push
xor
outsb
xor
sub
insl
xchg
subb
fistpll
xchg
lea
leave
cmp
mov
xor
and
sbb
insl
cs
push
leave
sbb
pop
adc
sti
clc
jns
pusha
sub
and
shlb
jo
cltd
dec
inc
pushf
je
lcall
imul
hlt
mov
mov
nop
scas
add
dec
mov
aam
push
roll
xorl
jmp
push
and
adc
fdivs
xchg
outsl
and
out
mov
mov
add
daa
insl
pop
jecxz
call
sbb
ret
ret
inc
sbb
mov
dec
xchg
jl
lods
sbb
adc
les
xchg
jb
test
pop
jns
cmp
out
jae
aas
out
arpl
incl
or
mov
sub
imul
push
pop
scas
cmp
push
es
aam
dec
adc
add
jno
jl
shl
mov
xchg
pop
xlat
push
cmp
mov
mov
mov
xchg
sbb
sahf
and
mov
jecxz
lds
leave
icebp
xchg
lret
cmp
fsub
xchg
cltd
aas
imul
cld
sbb
pushf
mov
xor
xchg
imul
js
pop
je
inc
js
movsl
data16
pop
scas
clc
cmp
jecxz
adc
ret
insb
dec
pop
orl
add
sbb
lea
imul
cmc
add
pop
mov
pop
jmp
push
adc
out
jmp
cwtl
test
lahf
sti
adc
adc
jge
xor
add
lahf
cs
cwtl
fs
pop
sahf
add
cli
mov
pop
das
fisubs
ret
cwtl
repnz
push
adc
push
adc
and
pop
sbb
lret
das
lahf
out
in
jbe
stos
fists
scas
mov
inc
fdivr
out
cmp
cwtl
mov
leave
push
add
sub
push
pop
cmp
sbb
adc
repz
frstor
or
jp
rorl
adc
and
jbe
movsb
xlat
push
xor
andb
mov
adc
or
jmp
mov
adc
aad
add
inc
jle
jge
outsb
test
mov
sbb
xchg
xchg
dec
stos
ss
mov
js
cmp
insl
mov
inc
lock
xor
pop
lret
jge
and
inc
mov
shrl
jne
inc
xor
xchg
stos
cmc
xor
xchg
inc
loope
or
xorl
iret
mov
jp
cwtl
adc
and
sbb
and
inc
cltd
jo
addr16
sbb
daa
inc
loope
sub
mov
sahf
orl
mov
jle
or
xchg
fisttps
notb
fbstp
mov
jmp
inc
adc
mov
xor
and
mov
inc
aad
in
pop
daa
bound
jbe
push
rclb
scas
ds
cli
mov
gs
loope
pushf
ds
inc
into
xlat
lods
adc
mov
dec
popl
cmp
clc
cld
dec
jns
cld
xor
ja
add
popf
ljmp
xchg
mov
pop
std
mov
ss
inc
fwait
int
sbb
in
cmp
or
mov
and
sahf
imul
push
std
or
dec
pusha
dec
icebp
rcll
stos
movsb
jb
test
leave
movsl
cmp
popa
mov
push
lahf
mov
lds
pushf
lcall
fistpl
cmp
inc
dec
in
cmpsl
push
pop
fwait
mov
ds
xchg
sub
outsl
push
fsubl
std
pause
mov
fs
sti
lods
stc
sub
psubsb
cmp
pop
xchg
out
movsl
mov
pop
xchg
xor
scas
mov
cmc
mov
sbbb
pop
enter
jl
mov
shll
lret
call
loope
lods
andb
aaa
rorl
xchg
jnp
loopne
xchg
lea
out
addb
cld
cld
clc
mov
xchg
call
ret
sub
jge
fcoms
or
or
shrl
addr16
xlat
mov
adc
jae
inc
call
mov
and
jp
in
cmpsb
loope
mov
pop
mov
inc
fnstsw
or
jae
test
mov
push
mov
mov
xchg
out
xchg
pop
cs
mov
or
mov
push
add
mov
test
sbb
inc
sahf
pop
add
jle
js
stc
aam
xor
xor
add
push
or
mov
repz
mov
jnp
and
or
add
and
mov
jmp
into
jbe
int3
sbb
sahf
hlt
clc
out
imul
adcb
loopne
movsl
lret
xchg
push
add
push
add
push
aaa
gs
shll
roll
icebp
out
push
dec
dec
imul
xchg
mov
mov
lea
and
jne
and
jecxz
aaa
mov
inc
out
int
lret
dec
pushf
cmpsb
xor
cmc
lret
flds
popf
pusha
cmpsl
into
xchg
jecxz
pop
cs
dec
mov
or
arpl
cmovle
sub
rorl
mov
adc
adc
jmp
inc
scas
fisubl
add
jp
and
or
scas
xchg
dec
lods
adc
or
push
inc
pop
bound
mov
movsl
push
jecxz
out
dec
rcll
xor
cmp
rclb
arpl
andb
mov
fisubs
dec
jge
and
mov
push
or
in
enter
pop
scas
fsts
jbe
cli
fsubs
add
inc
ja
push
ja
mov
or
lods
jmp
sub
jns
sub
cmp
and
ljmp
add
stos
popa
insb
negb
jmp
inc
sub
rorl
shr
dec
out
mov
leave
jae
lods
les
ror
push
fcmovu
mov
fwait
xchg
ret
jo
push
push
pop
je
ds
mov
cmp
and
mov
mov
sub
xor
daa
aaa
loope
in
ja
or
out
mov
cmp
and
jg
leave
xor
aam
xchg
or
sbb
cmp
lahf
fbstp
lret
ljmp
ljmp
mov
lahf
jmp
mov
lock
or
cmpsl
out
lcall
lcall
inc
jg
and
push
imul
or
pop
cld
lock
out
adc
dec
movsb
setg
add
lods
lret
in
out
xchg
lea
cmp
ljmp
sbb
or
dec
pop
pop
mov
inc
nop
popa
mov
mov
testb
ja
mov
lock
movb
inc
pop
cmp
out
pop
leave
bound
xchg
sbb
add
rolb
jbe
xchg
mov
pop
dec
enter
inc
pusha
xchg
data16
adc
movsl
test
pop
sub
cmp
nop
add
sub
dec
cltd
dec
xor
out
fnstsw
cmpsb
xchg
gs
filds
dec
loop
arpl
push
mov
xchg
ss
or
push
into
pop
jb
mov
fldt
into
rorl
or
dec
jecxz
aas
pop
sub
xchg
shll
aas
jbe
mov
adcb
push
inc
jmp
fsub
jae
xlat
pop
scas
movsl
sub
int
mov
cwtl
aad
out
ljmp
jge
add
and
js
popl
repz
negl
add
mov
test
push
adc
jl
pop
xchg
aas
shll
inc
dec
add
in
mov
and
xchg
inc
ds
and
sti
add
jo
pop
mov
arpl
pushf
and
es
and
xchg
push
fldl
pop
cmp
and
jge
and
cmp
repz
jle
push
sub
sub
jp
ds
dec
add
test
out
or
xor
mov
cmp
mov
scas
out
inc
loopne
mov
xor
xchg
sub
xchg
mov
leave
mov
fstp
inc
mov
into
arpl
xor
or
lea
cltd
push
pushf
lret
cmpsl
out
fldenv
test
rorb
sbb
xor
out
or
out
sbb
in
cmp
sbb
imul
pop
notl
add
xchg
in
cmp
jmp
cwtl
push
add
jmp
test
js
ss
clc
dec
ret
stc
jecxz
pusha
insl
xor
sbb
mov
stos
adc
jp
sti
outsl
xor
xor
into
cs
popa
mov
and
sub
add
test
shlb
cmp
lret
jns
add
jns
adc
jmp
leave
add
bound
stos
adc
out
imul
xchg
jmp
test
into
and
imul
cmp
dec
cltd
loop
test
icebp
sbb
or
pop
dec
push
out
fstpl
stc
mov
dec
xor
jae
inc
jge
adc
aas
std
dec
adc
xlat
jae
jmp
mov
pushf
pop
js
push
out
insl
mov
das
push
test
outsl
push
jne
sahf
shlb
rol
xchg
dec
xchg
xor
and
loope
in
mov
ja
push
mov
mov
jnp
mov
repnz
repnz
clc
fmuls
into
aad
xor
fdivrs
bound
popa
inc
test
jg
jne
dec
pop
xor
aam
test
xchg
sbb
lea
xchg
lods
in
sbb
and
sub
movsb
pusha
cli
in
jl
jns
mov
pop
mov
test
shl
stos
lods
mov
sub
imul
xchg
push
xor
mov
jmp
push
mov
pop
sbb
fnstsw
sbb
push
cmp
insl
mov
imul
sti
jo
xchg
in
lds
shlb
popf
cmp
push
xchg
and
adc
inc
scas
mov
mov
push
dec
pop
mov
xor
mov
rcll
xchg
ret
subl
iret
addl
push
negl
testb
in
sahf
lret
and
fdivs
nop
cmp
xchg
les
push
orb
fstpl
dec
lea
cmp
mov
mov
mov
adc
mov
daa
fdivrl
dec
faddl
push
mov
les
pusha
fcmovb
and
cmpsb
xlat
inc
push
mov
and
scas
loop
add
into
mov
mov
jl
fwait
xor
cmpsl
inc
stos
mov
xchg
hlt
jb
cmp
imul
jo
test
jmp
lock
stc
stos
adc
imul
fisubl
jmp
xchg
jo
mov
arpl
mov
cwtl
mov
ja
xchg
addr16
imul
jmp
cmp
bound
mov
jmp
sbb
or
sti
loope
push
inc
stos
rorb
aaa
add
fisubs
jns
lret
sub
cmpsl
jo
test
les
lods
shlb
repnz
mov
movsl
sbb
push
add
repz
mov
pop
mov
mov
sub
inc
fdivrp
lods
call
icebp
jb
or
adc
mov
xchg
sub
and
sbb
xchg
ss
inc
hlt
out
lahf
dec
xor
setbe
lret
jmp
stos
gs
jge
iret
fdivs
adc
iret
push
xor
fwait
pop
mov
mov
cmp
dec
mov
not
int3
aaa
mov
shr
adc
andb
insb
fadds
pop
out
mov
and
dec
repz
adc
fwait
adc
std
stc
mov
test
add
notb
xor
es
xchg
and
loop
inc
mov
jno
inc
subl
mov
fs
into
xchg
pusha
or
push
jo
mov
insb
xchg
adc
or
aaa
sbb
add
sbb
cmp
mov
ss
divl
std
aad
inc
lcall
xchg
lods
addr16
cmpsb
clc
adc
sub
xor
xor
mov
push
add
mov
cmp
mov
or
das
int
push
out
imul
sahf
sbb
test
push
shrb
adc
inc
push
ljmp
jl
xchg
or
push
cmpsl
pop
xchg
mov
pop
adc
or
bound
lret
test
testb
dec
repz
nop
dec
push
adc
mov
sahf
in
frstor
shlb
lret
enter
adc
loop
xchg
xchg
jb
jl
pop
shll
stos
test
mov
insl
or
es
push
ja
inc
or
into
add
stc
movl
cmp
inc
mov
inc
mov
pop
mov
pop
dec
fucomi
leave
test
in
push
xorb
jb
es
push
dec
repz
fildll
mov
xor
mov
xchg
sub
pushf
fildl
cld
jmp
mov
js
lcall
cmp
loope
ret
aad
adc
xchg
jl
ret
int
sbb
cmp
mov
add
fisubrl
daa
mov
popf
pop
ja
ja
pop
dec
pushf
mov
rcr
lahf
in
cmp
adc
stos
out
imul
push
fs
test
jecxz
dec
jge
mov
xchg
in
das
add
andb
icebp
popa
lcall
mul
sbb
xor
jl
dec
xorl
enter
lods
push
mov
inc
mov
bound
bnd
outsb
aad
test
cmp
adc
xchg
cmp
or
mov
jecxz
adc
ret
js
jno
gs
mov
insl
pop
je
push
clc
jg
push
test
std
test
xor
pop
pop
aaa
insb
pop
pop
dec
leave
sbb
sbb
push
sub
das
inc
aas
jbe
cmp
sbbl
adc
sub
das
out
mov
mov
aad
inc
cmpsb
test
mov
push
pslld
push
add
mov
lods
cld
stos
imul
loopne
sub
dec
sbb
loopne
out
xor
daa
push
mov
mov
mov
jnp
jecxz
cmpsl
sbb
and
fs
adc
loop
inc
dec
xchg
dec
push
lahf
fdivrl
mov
cmp
ljmp
negl
outsb
push
and
mov
adc
adc
pop
dec
xchg
lahf
dec
jle
cmp
test
into
sbb
or
mov
xchg
test
xchg
iret
xor
sub
adc
pop
or
mulb
je
movsb
push
jae
in
inc
xor
inc
mov
inc
lea
inc
hlt
insb
mov
mov
sbb
lock
xor
mov
mov
rclb
dec
push
out
fisubs
mov
popf
mov
cltd
insb
jbe
dec
add
mov
mov
mov
ret
sar
sub
inc
mov
insl
stos
cmpsl
lret
sub
stos
jno
xchg
cmp
push
addb
repnz
iret
xor
jmp
nop
sbb
mov
je
imul
mov
mov
fldt
test
xlat
xor
fsubp
scas
enter
pusha
imul
pop
adc
out
addr16
scas
imul
subl
repz
mov
mov
cmc
jno
aam
push
mov
int
push
cmp
js
or
loop
sub
arpl
out
mov
fildl
adc
into
dec
xor
push
add
mov
cli
imulb
dec
fmulp
cld
xor
jb
inc
hlt
xchg
iret
call
xchg
fisttpl
mov
nop
pop
sbb
stc
clc
lods
jle
sub
sub
int
and
push
mov
pop
dec
sahf
xor
das
clc
stos
int
and
in
mov
and
std
icebp
sarl
adc
lea
mov
cli
cmp
mov
pop
push
or
inc
rcrl
inc
test
cwtl
mov
out
popa
scas
fistpll
rcll
shl
leave
and
inc
insb
dec
sbb
pop
push
xlat
xor
nop
mov
sbb
mov
dec
and
pop
jns
arpl
fsubrl
xchg
jns
and
aas
sbbl
mov
pushw
dec
addr16
add
and
outsl
mov
in
add
arpl
inc
and
movsl
cmp
inc
popf
lea
xchg
push
pop
add
bound
in
loope
sti
pop
or
cmp
xchg
add
adc
cmp
lock
lret
mov
into
xchg
sub
mov
stos
xchg
rol
push
fsub
pop
insl
pop
roll
insb
mov
mov
test
lock
cs
cld
das
cmc
pusha
imul
mov
scas
push
jmp
adc
adc
fwait
scas
or
inc
movsb
scas
imul
inc
clc
arpl
mov
imul
lock
cmp
and
mov
arpl
sbb
dec
aas
sub
ficompl
imul
mov
adc
aad
xlat
jmp
jmp
mov
add
xlat
adc
dec
mov
outsb
xor
add
cs
fiaddl
push
cs
fldenv
loope
popw
sub
cmp
lock
cld
xor
fstpl
pop
push
mov
or
sbb
mov
mov
xor
popa
mov
out
sub
xchg
push
insb
sub
orb
stc
push
jmp
lret
jmp
push
xchg
inc
jnp
loop
js
cmp
popf
or
dec
sbb
fdivl
stc
dec
jmp
jb
mov
fidivl
sti
dec
aas
xor
mov
mov
sub
xor
push
jge
mov
sbb
mov
daa
and
jle
sub
fmulp
clc
stos
int
cwtl
add
shrl
popf
push
stos
jl
loope
push
inc
fs
mov
inc
push
fstpt
test
test
dec
xchg
mov
fdivs
sbb
sub
cmp
mov
xor
clc
call
fwait
in
test
xchg
popl
aam
push
mov
xor
cmpsb
cli
int3
jnp
clc
dec
xor
mov
fistpll
lcall
rcrb
punpckhdq
xchg
mov
sti
or
test
mov
add
jl
dec
scas
int
cmp
add
mov
insl
cmpsl
mov
or
add
clc
adc
push
sbb
pop
aam
sbb
insl
or
xchg
mov
aaa
sbb
cld
lods
andl
cmp
xchg
ror
xlat
dec
cmp
bound
sbb
dec
ja
cwtl
imul
adc
adc
subb
ja
scas
pop
inc
aaa
not
fnsave
xchg
cmp
inc
xchg
mov
lea
and
outsb
in
mov
into
dec
add
jbe
mov
pop
or
dec
adc
cmp
cld
cwtl
jo
mov
sbb
sbb
bound
xorb
in
movsl
cwtl
sub
fisttps
scas
xchg
pop
jmp
jmp
repnz
cld
insl
pusha
lret
fs
aad
inc
fidivs
out
aaa
addr16
xchg
push
ds
xchg
icebp
pop
std
jno
ret
adc
push
cs
repz
jge
dec
inc
mov
inc
push
in
ret
mov
jno
inc
insb
clc
mov
dec
pop
xor
xchg
or
cltd
sbb
cmp
push
jle
inc
das
in
dec
push
mov
repnz
dec
mov
inc
jb
cmp
inc
xorb
leave
in
mov
mov
ja
push
mov
cmp
mov
ljmp
je
cwtl
insb
lret
ljmp
aaa
mov
dec
xor
in
cmpsl
js
pop
push
cld
jne
push
mov
loopne
fnstsw
lock
aad
dec
mov
pop
int
rcrb
adc
cli
repz
pop
das
jle
js
aam
mov
mov
imul
dec
cli
aas
scas
and
out
mov
mov
sbb
jle
push
lea
les
xchg
arpl
insl
mov
mov
or
and
lock
js
fstpt
push
idivb
cmpsl
negb
js
cmp
xchg
jns
lret
xchg
inc
popf
stos
cmp
lcall
cltd
repnz
inc
adc
inc
int
stc
pop
jmp
jne
push
imul
imul
mov
mov
out
add
jl
adc
ret
shlb
xchg
sarl
fimuls
lcall
nop
lds
jg
out
test
test
adc
scas
push
and
jne
pop
push
mov
sahf
adc
sbb
cwtl
lods
mov
push
pusha
fucomip
shl
xchg
push
cmp
lods
mov
sbb
adc
in
mov
xchg
cwtl
mov
mov
shlb
and
popa
mov
push
idivl
pop
mov
pusha
sub
inc
lods
add
pop
fadds
add
call
sub
mov
cmp
xchg
jae
sbb
jle
stos
push
jecxz
pop
fsubl
imul
mov
jl
xor
iret
cwtl
mov
ja
rcll
mov
loop
xchg
fcoms
mov
ljmp
aad
mov
adc
mov
mov
in
lock
jns
xor
lcall
add
out
int3
and
sbb
xor
arpl
pop
and
std
out
lret
and
lock
cmp
xchg
test
or
and
enter
jle
add
push
gs
push
sbb
ljmp
lcall
je
xchg
fwait
dec
add
in
jmp
sbb
adcb
pop
pop
jbe
xchg
xchg
xor
in
fwait
sbb
dec
inc
sarl
xor
sub
dec
push
mov
testb
arpl
mov
mov
jle
and
push
mov
jecxz
ja
xchg
pop
mov
pushf
sahf
pop
shrb
pop
mov
test
aaa
mov
call
xchg
bound
pop
in
std
scas
loopne
sarb
dec
stos
rorl
fistpll
ss
or
mov
dec
mov
add
adc
mov
les
stos
mov
roll
add
call
and
mov
and
inc
cmpsb
xor
xchg
and
or
push
mov
xlat
inc
insl
add
xor
repz
jge
sbb
mov
push
gs
cmpl
pop
pop
scas
rcrb
push
rorl
mov
sub
in
inc
pslld
out
addr16
int3
jecxz
xchg
xchg
js
jno
fs
clc
in
test
inc
jl
mov
mov
pop
sete
test
mov
out
jp
fisubrs
out
pop
pop
sbb
mov
cmp
adc
adc
mov
xor
mov
pop
cmp
pop
xor
pop
xchg
or
popa
movsl
mov
xchg
lods
xor
jbe
adc
cmp
or
addr16
test
fstp
int3
dec
add
ds
mov
adc
stc
es
sbb
mov
addr16
adc
mov
outsb
inc
mov
arpl
or
lret
arpl
ds
xchg
sub
popf
add
sbb
aam
test
in
or
dec
sub
xlat
mov
mov
pop
fnstenv
testb
fcomps
test
popf
repnz
mov
push
mov
int3
add
adc
pop
imul
xor
pop
sbb
inc
pop
jae
es
sub
or
xchg
jg
aas
fs
test
rolb
push
repnz
out
xor
fisubs
enter
xor
or
lcall
dec
push
js
fstenv
test
bound
push
notb
ret
popf
ja
outsl
pushf
xor
stc
movsl
push
mov
dec
xor
add
mov
sysret
mov
jle
aas
or
idivl
movsb
cs
jb
push
es
xchg
lods
sub
mov
ret
and
or
cltd
mov
into
mov
sub
js
sbb
lcall
adc
push
fwait
sub
movsb
and
imul
xchg
mov
cmp
xor
dec
sbb
sbb
dec
push
push
insl
cwtl
push
jmp
aas
sbb
test
xchg
and
add
cwtl
sbb
and
push
xor
rorb
test
stos
imul
xor
xchg
mov
repz
xchg
bound
std
dec
adc
in
shlb
mov
into
xor
popf
jne
and
push
cmp
dec
out
mov
cmp
or
sar
sbb
cmp
lea
and
clc
mov
mov
xorl
pop
rcl
add
xor
repnz
scas
and
dec
jae
dec
mov
pop
je
or
mov
fsts
lea
mov
jns
and
les
dec
inc
in
pusha
fcmovu
ret
jae
or
pop
xor
inc
sub
popl
lret
test
xchg
jae
sub
fildl
andb
push
jns
lds
out
jge
jecxz
mov
fadds
psllq
or
movsb
je
pop
inc
lds
mov
push
mov
cmp
adc
cmp
cmp
pop
xchg
out
or
mov
pop
push
pusha
pop
or
adc
adc
add
popa
mov
push
rorb
ds
add
in
and
movl
andl
leave
js
shrl
sub
cmp
sarl
pop
pop
mov
bound
inc
std
das
sbb
vpavgw
outsl
outsl
push
call
fucomp
sub
fwait
nop
mov
sbb
xchg
aam
inc
cmp
mov
xchg
dec
repz
and
out
and
movsl
shrb
js
std
dec
fistl
pop
enter
popa
push
in
pop
jae
sti
push
frstor
nop
hlt
mov
out
pop
mov
lret
in
pushf
or
popf
out
mul
nop
inc
push
fimull
and
insl
out
fsubl
std
xor
ret
fdivr
in
rcrb
dec
pop
jae
cmp
jg
gs
pop
cmpb
insl
sub
je
pop
or
cmp
jbe
in
sbb
pusha
mov
add
and
inc
or
add
in
scas
mov
jp
sbb
push
les
add
popf
jmp
and
pop
mov
lods
sti
movsb
fwait
jbe
loopne
cmc
icebp
jge
cmp
pop
or
dec
mov
scas
cwtl
push
cmp
lods
out
mov
inc
int3
inc
outsl
fucomi
xor
push
dec
sbb
pop
mov
sarb
leave
nop
pop
fsubrl
push
dec
push
loope
cmp
aad
mov
pop
rcll
or
movsb
pop
fists
xchg
adc
sti
imul
arpl
movsl
or
or
dec
les
pop
lds
enterw
js
cs
push
cld
in
daa
dec
sub
fstps
sub
or
adc
inc
mov
cmc
les
stos
pushf
xor
push
and
icebp
add
push
icebp
shrl
jno
mov
xor
mov
cmc
sub
dec
or
imull
dec
push
ljmpw
adc
adc
test
xchg
test
das
pushf
es
pushf
cmp
ret
mov
cmpsl
lcall
addl
jo
ret
int
rcr
push
aaa
xor
adc
inc
mov
or
pop
mov
sbb
mov
mov
mov
or
clc
call
fimuls
imul
pop
mov
nop
xor
sub
lret
movsl
sub
mov
loopne
jne
mov
movsb
fimull
inc
in
pop
shlb
cmp
dec
mov
movsl
xor
xchg
jl
enter
push
push
push
mov
outsb
cwtl
fisttpll
imul
fwait
pop
test
in
and
in
mov
cmp
mov
dec
js
xchg
inc
lahf
pop
sub
andl
add
push
andl
addr16
jge
xchg
fildll
sbb
repnz
in
cld
cld
pushf
cmpsl
sbb
add
mov
pop
mov
jle
ljmp
mov
mov
std
es
xor
test
lods
and
xor
sar
xor
push
xchg
sbb
mov
or
lcall
test
dec
pop
mov
xchg
sbb
js
mov
leave
jno
ja
sti
ret
mov
fstpt
call
out
lahf
push
dec
arpl
or
push
fs
clc
jl
aad
mov
rcrl
icebp
scas
add
sbb
test
mov
dec
repz
mov
mov
arpl
or
jg
cmp
aas
pop
jmp
mov
pop
dec
scas
out
bound
mov
push
je
mov
sub
aad
test
std
outsl
cmp
out
lret
fisttps
mov
pop
scas
sub
ds
stc
mov
addr16
push
bound
pop
jp
mov
mov
in
add
add
sbb
xchg
sahf
loopne
neg
sti
cmpl
in
or
dec
mov
sarl
shl
mov
aas
adc
mov
pusha
std
mov
aas
mov
lret
lods
dec
mov
sarl
fisubrl
sbb
or
loope
mov
xor
ljmp
dec
and
inc
into
inc
pop
out
fcomps
arpl
mov
ret
xor
sub
xchg
fcmove
push
pop
or
xchg
scas
and
insl
je
pop
fidivl
das
fsubrs
mov
xor
movl
sub
xchg
shll
sub
push
and
iret
pop
adc
lret
jge
push
or
or
mov
sub
loope
mov
insb
jne
sub
lcall
pop
inc
loopne
mov
das
xchg
lret
scas
xor
sbb
mov
mov
in
fisubrs
sbb
or
out
mov
fwait
mov
mov
mov
push
cmc
daa
es
insb
fmull
scas
cmp
mov
repnz
fstl
mov
jge
inc
sub
das
or
in
inc
fmuls
mov
adc
ds
scas
push
popl
leave
vprotd
popf
cld
pop
adc
scas
fwait
push
pop
addr16
dec
jnp
out
or
xchg
sbb
icebp
ljmp
or
mov
cld
dec
mov
out
mov
ret
popf
jl
add
les
add
pop
insl
cmp
cli
leave
loopne
push
call
sbb
enter
push
push
or
call
sbb
test
pop
movsl
and
data16
pusha
nop
aaa
rclb
sti
sub
push
in
mov
sub
pop
das
fs
lods
in
lret
testb
jp
pop
mov
pushf
ljmp
jmp
xorps
mov
and
shrb
sarl
jecxz
dec
testl
adc
pop
addr16
dec
fnstenv
sub
insl
mov
daa
sbb
dec
popf
adc
pop
jno
and
outsb
sbb
mov
ja
lods
mov
aam
push
mov
pop
out
jmp
sub
and
in
psraw
push
cmp
pop
mov
jne
add
push
fistpl
sub
sbb
leave
or
jp
add
dec
nop
divb
sarl
cmp
sub
sub
stos
inc
sbb
push
mov
test
pusha
hlt
xor
imull
inc
imul
xor
scas
jl
test
cmc
xchg
mov
mov
add
dec
jg
jecxz
dec
push
test
aad
jae
dec
ljmp
cmp
loop
inc
mov
test
lods
mov
pusha
mull
pop
leave
sti
jb
cmp
sti
ret
dec
xlat
jl
rclb
loopne
add
stc
sub
es
jae
icebp
sbb
pop
mov
ss
jne
out
rcl
inc
aam
out
inc
xor
mov
or
fstpt
mov
dec
sub
jnp
dec
mov
jl
jno
sub
jg
jl
pop
movsb
insb
out
push
test
pushf
fsubl
mov
pusha
in
or
sbb
frstor
popf
adc
xor
addr16
mov
adc
jnp
pop
pop
fcoms
dec
sarb
jnp
xchg
push
repnz
and
mov
push
maxps
test
inc
stos
push
dec
insl
cmp
mov
faddl
inc
push
fsubr
fcmovnbe
js
or
insb
repnz
jbe
gs
mov
push
mov
and
in
dec
in
dec
xor
mov
mov
lods
xchg
mov
shl
jge
and
mov
xchg
xchg
dec
xchg
andl
mov
nop
cld
fidivl
ss
mov
sti
pop
sub
dec
pop
mov
sbb
add
xor
cmpsl
lret
inc
cld
xor
cmp
pop
loop
push
enter
adc
xor
ds
ja
pusha
push
inc
xchg
and
and
fsubs
xor
lret
xor
out
mov
in
idivl
cmp
fistpll
cmp
xor
sahf
fists
jae
call
bound
mov
jno
stos
test
imul
mov
or
movsl
cltd
test
lds
test
outsw
lret
dec
mov
or
xchg
dec
and
in
or
cwtl
aaa
xchg
pop
loop
add
loopne
adc
mov
popf
push
jo
or
mov
aas
stos
stc
scas
jb
push
ss
scas
jnp
sub
jmp
lea
jecxz
orb
lods
adc
or
ret
mov
pop
test
lods
xlat
cmp
call
je
xchg
add
push
mov
ffreep
dec
xor
push
cmp
xchg
pusha
sarb
sbb
jmp
mov
mov
cmpsb
cmp
inc
push
fstl
aaa
sub
xor
mov
cmpsb
sbb
aas
mov
stc
mov
or
adc
gs
xchg
jg
cld
pop
lahf
and
push
shll
adc
jmp
jo
ja
dec
cmp
mov
dec
jne
mov
ds
jmp
sbb
cltd
adc
adc
call
repz
mov
pop
add
mov
pop
adc
pop
mov
fnstcw
jmp
adc
popl
mov
movsb
mov
mov
mov
fiadds
inc
outsb
sbb
popf
inc
rcll
test
sbb
or
test
sbb
mov
push
pop
sbb
lock
int
add
fnsave
jmp
or
sahf
or
jg
ds
and
das
pop
popa
and
mov
xor
mov
rolb
or
jp
inc
repnz
outsl
bound
pop
inc
imul
mov
mov
fst
mov
or
ja
inc
or
repnz
mov
imul
push
push
rcrb
add
nop
enter
mov
cmpsl
clc
call
test
lock
les
pop
lahf
push
pop
adc
out
cmp
shr
or
aas
popf
push
or
xchg
mov
mov
push
push
mov
sbb
add
and
addr16
repnz
test
in
in
bound
mov
shl
pop
das
repnz
push
lret
std
les
push
insb
ret
std
add
jns
adc
adc
sbb
jp
ss
lcall
arpl
jp
popa
sti
insl
imul
movsl
jae
jl
mov
push
or
das
test
cli
xor
inc
fidivl
and
jp
xchg
std
in
cmp
cs
idivb
jno
sbb
popf
sbb
cmp
mov
imull
add
roll
popl
pushf
add
ss
sbb
adc
cmp
push
dec
mov
bsr
mov
rol
lods
lock
sbb
push
lods
jae
and
add
ficoms
pop
clc
xor
inc
cli
add
mov
sbb
aam
mov
mov
lcall
test
sbb
inc
movsb
cmp
and
dec
jnp
adc
mov
and
enter
out
sub
mov
outsb
mov
imul
push
cmpsb
mov
outsl
dec
bound
test
cmc
pop
aad
jg
es
jno
xchg
pop
xor
cwtl
push
push
xchg
sbb
sbb
test
lea
data16
gs
or
push
xchg
cmp
adc
fwait
mov
add
mov
pop
add
mov
popf
push
pop
pushf
out
xor
aad
pop
inc
subb
jb
call
adc
or
mov
fwait
lret
ret
cwtl
imul
arpl
outsl
mov
fnstsw
jnp
cltd
pusha
test
jnp
xor
shr
roll
sub
cmp
pop
leave
add
push
mov
xchg
dec
fdivrl
add
xor
mov
xchg
cmp
xor
sar
addl
gs
out
cmpsb
mov
pop
pmulhw
and
js
pop
push
mov
popa
out
and
icebp
ja
fmul
mov
sbbb
stos
fs
adc
xchg
fwait
add
imul
mov
rcrl
nop
ljmp
loopne
jnp
lahf
sub
mov
jge
sub
stos
sub
int3
push
cmc
add
sbb
mov
int3
dec
addl
fnstcw
sbb
jns
fcoml
sbb
sbb
dec
mov
add
sub
and
cltd
cmc
pop
push
cmp
push
gs
repz
test
jecxz
inc
fidivrs
cmp
push
shr
fld
lret
dec
mov
ret
push
sub
into
or
test
jo
mov
adc
int3
sbb
xchg
cwtl
push
inc
je
inc
pusha
push
or
outsl
xor
mov
aas
jl
push
cmp
movsb
jg
js
jecxz
mov
in
mov
pop
add
mov
mov
or
fmuls
fcoml
cmpsb
int3
ds
lahf
push
pop
mov
sbb
maskmovq
testl
loopne
mov
shll
enter
pop
ret
mov
mov
and
in
mov
pop
mov
xchg
or
or
stos
jbe
jae
cmp
adc
jno
std
dec
rcr
and
ret
leave
add
or
frstor
pop
adc
insl
leave
add
ljmp
sub
cmp
adc
enter
mov
pop
repnz
mov
adc
ljmp
add
mov
nop
lock
cmp
inc
push
mov
push
ret
mov
scas
adc
lods
addl
sbb
repnz
add
mov
xchg
movsl
inc
int
inc
mov
cmp
and
jb
xlat
aas
in
dec
repnz
mov
mov
arpl
xor
inc
mov
cwtl
repnz
mov
test
test
push
cmpsb
mov
jno
aas
in
ljmp
into
fucom
in
fsubs
or
mov
out
jmp
mov
jno
fisubrl
xchg
or
lahf
popa
xchg
mov
roll
sub
pop
pop
push
cld
mov
subl
pop
outsl
mov
cmpb
jp
inc
and
pop
mov
dec
in
jae
xor
push
fwait
mov
cmp
mov
jl
inc
pop
cmp
mov
popf
jle
jae
adcl
out
pop
setae
add
std
ret
out
insl
pop
add
xor
sbb
fdivrl
insl
mov
inc
jae
fisttps
or
cmp
faddl
push
popa
cmp
lock
jae
adc
cmc
loopne
scas
pop
aam
fbld
adc
loop
sub
mov
and
imul
mov
in
das
push
outsl
imul
add
rolb
add
andl
mov
jmp
jo
xor
sbb
xlat
inc
into
sub
xor
loop
mov
in
in
das
movsb
or
test
add
or
adc
cli
push
movsb
mov
push
jle
or
jne
sbb
push
ds
xchg
cmpsb
fidivl
lods
mov
icebp
lods
and
xchg
lods
cmp
arpl
cmp
adc
xchg
lds
jne
lret
aad
mov
loop
pop
sbb
mov
adc
jle
mov
or
jmp
test
jnp
pop
sub
idivl
ljmp
mov
jne
mov
aaa
aad
and
lds
sub
jo
iret
xlat
inc
fs
dec
loope
ffree
dec
jns
inc
push
mov
daa
adc
rcr
or
outsl
into
or
ds
add
mov
ds
cmp
lock
movsl
sarl
pop
add
jb
enter
fiadds
dec
cmpsl
scas
and
lahf
in
sub
xor
push
pop
pop
cmp
or
inc
and
mov
loopne
add
lods
cmp
shll
cmpsl
cltd
rorl
or
std
mov
cmc
mov
xor
mov
stc
and
sti
sub
add
push
xlat
dec
mov
int
imul
ljmp
or
and
loopne
repz
mov
jg
pop
mov
pop
xor
idivl
outsl
fwait
cmpsb
adc
adc
ja
or
lock
aaa
push
gs
movsb
xchg
adc
mov
mov
stos
imul
sbb
and
pop
sbb
xchg
fwait
sti
xlat
dec
dec
out
mov
push
pop
fs
cmc
je
add
push
pop
les
mov
dec
mov
cmp
or
mov
xor
test
sbb
mov
inc
and
std
lcall
aas
lock
out
mov
xor
mov
jg
outsb
mov
or
outsb
pop
mov
add
movsl
dec
outsl
scas
lods
pop
adc
cmp
scas
fimuls
rorb
pop
cmpl
ficoml
aad
ja
in
xorb
gs
xor
popa
cli
cmp
mov
mov
dec
insb
jnp
inc
jbe
fstpt
dec
arpl
testb
daa
sub
mov
pop
das
or
sub
jo
xchg
sbb
int3
or
jg
jecxz
push
fdivrs
or
push
repz
ret
les
push
gs
jno
stos
mov
ficoms
jae
pop
das
xchg
int
je
mov
lock
jp
jle
mov
xor
and
ja
inc
pop
fstpl
je
and
out
cmp
ret
lcall
rclb
xchg
imul
fnstenv
or
into
test
fbld
mov
decl
mov
stc
mov
push
stos
mov
or
dec
stos
xor
enter
clc
lret
sub
pcmpeqd
mov
inc
arpl
cmp
push
and
dec
or
push
adc
sahf
sbb
mov
dec
scas
sub
imul
mov
mov
cmp
mov
negb
loope
ja
jl
mov
add
push
fsubs
mov
lret
loopne
stc
fisubs
rcll
pop
icebp
sub
stos
or
testb
stos
dec
mov
or
mov
pop
scas
into
mov
add
pop
push
add
mov
mov
ja
int3
aaa
fwait
outsb
mov
int3
and
cmpsb
call
jae
mov
fdivr
mov
cld
repz
push
pop
pop
aas
rcl
xor
xchg
mov
into
inc
je
mov
pop
cmp
dec
push
jg
in
shlb
daa
into
cs
imul
fwait
jbe
and
fucomip
std
push
arpl
mov
and
and
iret
pop
imul
rorb
xchg
or
jmp
pop
test
leave
dec
or
fidivrs
cmpsl
shrl
mov
outsb
inc
inc
and
push
jl
lahf
sub
fidivrl
jae
out
lds
mov
push
stc
lds
popf
sarb
lods
fmulp
pop
pop
jge
aas
push
rorb
jmp
fisttpl
inc
jno
ss
and
mov
adcb
adc
mov
xchg
dec
jl
xchg
in
shll
lods
dec
xchg
sbb
inc
pop
pop
sub
mov
arpl
and
or
cld
push
insl
xchg
and
pop
stos
add
jae
sahf
fwait
int
rcrb
stc
mov
cmpsb
popf
aad
mov
jle
nop
gs
popa
mov
sbb
jmp
sbb
pushw
cmc
and
pop
loopne
cwtl
test
stc
sbb
call
mov
nop
int
add
test
mov
mov
ficoms
sub
push
orb
or
int3
and
std
fldenv
cmc
add
fistps
inc
lret
in
mov
nop
nop
stos
out
out
mov
xor
outsl
inc
lret
popa
call
push
or
xchg
inc
scas
into
sbb
lods
sub
imul
mov
mov
mov
lea
lds
stos
add
cmp
ja
mov
jge
mov
loopne
mull
rcrb
jne
and
pop
je
repnz
stos
pushf
fisttps
push
inc
shrd
adc
xor
sub
mov
pushf
imul
insb
adcl
jge
outsw
aad
and
stos
fwait
popa
out
dec
outsl
adcl
ja
jnp
xchg
sub
enter
mov
mov
jle
push
jbe
inc
and
stc
adc
sbb
sub
mov
pusha
jne
or
ljmp
jae
mov
cmp
xchg
shlb
cmpl
out
mov
or
std
sbb
jg
jg
sub
dec
ja
jne
aas
inc
mov
jmp
or
xchg
sbb
es
ljmp
mov
mov
lds
mov
add
popf
or
in
mov
pusha
lods
fnstenv
iret
sbb
sub
data16
sti
or
mov
outsl
mov
repz
pop
in
nop
call
mov
cmpsl
mov
jecxz
push
inc
movsb
std
adc
mov
fistpl
push
insb
adc
insl
pushf
inc
inc
jns
xchg
lret
lahf
xor
ror
pusha
test
enter
mov
jae
test
cmpsb
ja
ds
xchg
or
mov
push
test
dec
fadds
outsb
repz
fmuls
jns
push
out
dec
sahf
mov
std
loopne
dec
inc
fistpll
bound
adc
imul
and
movsb
mov
mov
push
invlpg
loop
ret
daa
push
rorb
adc
ljmp
mov
xor
mov
mov
in
ficoms
out
and
bound
cmp
pop
stos
sbb
mov
mov
mov
adc
add
aad
mov
sbb
lds
lea
in
adc
stos
push
stos
jp
push
push
jecxz
xchg
mov
sub
jbe
mov
cs
dec
push
push
xorl
mov
out
mov
cld
div
pop
inc
call
insb
out
xor
in
dec
sub
ret
cmpsb
outsl
jl
pop
xor
xorl
mov
repnz
push
or
mov
cmp
ret
sub
jne
or
mov
sub
cmc
inc
push
cmp
inc
call
lret
jg
popf
test
cmp
pop
sahf
xlat
mov
or
xchg
mov
lea
add
test
popl
in
jns
adc
mov
fcmovnb
int3
shll
das
nop
adc
adc
cmpsb
mov
sti
xor
cmp
imul
cmp
fdivrs
or
or
jge
xchg
and
outsb
andl
sub
pop
push
js
cmp
dec
mov
jnp
shlb
mov
lret
movsl
das
sub
xchg
jne
inc
or
pop
frstor
pop
int
cmp
scas
ja
jo
inc
lcall
jae
xchg
fcmovbe
add
jmp
cmp
ret
scas
push
mov
jne
nop
pop
bound
pop
fstl
adc
mov
pushf
pop
dec
sub
daa
cmp
sbb
pop
sub
push
mov
cld
inc
jns
adc
inc
insb
mov
adc
pushl
mov
add
lcall
loopne
es
sar
movups
pop
and
arpl
rcrb
mov
addr16
enter
pop
push
sbb
movsl
mov
xchg
xor
mov
and
insb
fdivs
int3
sub
scas
aaa
call
sbb
in
sarl
sahf
inc
fsubs
mov
stos
icebp
lret
cwtl
add
dec
xor
lcall
icebp
jmp
sub
dec
sub
push
mov
test
adc
sub
ret
inc
xchg
lds
jbe
mov
mov
add
insb
cltd
inc
jno
loopne
xor
mov
inc
inc
jnp
pop
jg
pop
push
dec
sub
aad
push
cmpl
sub
mov
push
arpl
mov
pop
xor
dec
insl
cmp
addr16
lret
adc
or
pop
mov
push
lcall
xorl
pop
push
inc
in
xrelease
adc
or
in
loop
dec
jg
push
cmp
mov
sbb
xor
js
adc
fnstsw
or
mov
aad
cmp
outsl
movsb
ret
jg
test
jae
and
xchg
insb
or
pop
inc
jne
xor
imul
cmp
icebp
and
mov
into
data16
sbb
addr16
and
lcall
pop
push
js
shlb
leave
fsqrt
push
sbb
sbb
adc
xchg
shl
aaa
bound
mov
aam
inc
ljmp
ljmp
sbb
fistl
scas
sahf
outsb
jne
inc
icebp
pop
ds
movb
xorb
fwait
jne
add
cmpsl
cmp
cmp
stos
inc
sub
into
mov
mov
jb
rolb
pushf
outsl
and
cmp
popa
addr16
repz
daa
fyl2xp1
mov
xor
pop
push
aaa
std
cmc
addl
clc
in
jns
pop
lahf
mov
push
or
adc
inc
inc
lret
insl
mov
cld
mov
divb
xchg
fcoms
mov
inc
loopne
mov
stc
xor
add
mov
mov
stos
add
push
and
dec
and
jno
cmp
fdivs
xchg
cmp
cmpsb
push
cmp
aad
xor
scas
jg
cmp
push
dec
fcoms
or
push
or
add
mov
negl
dec
mov
push
cmp
scas
inc
insl
add
mov
decb
mov
push
push
lret
and
insb
pusha
inc
push
movsb
xor
dec
das
or
push
les
xor
movsl
add
and
scas
mov
or
rorl
repnz
jbe
push
js
test
ljmp
ds
out
add
jmp
fmuls
jns
mov
lods
cltd
cli
dec
pop
in
int
or
adc
in
les
sub
jp
sbb
adc
psadbw
nop
sbb
mov
ja
mov
jl
bound
cmp
ret
inc
test
mov
xchg
outsb
cmp
mov
dec
pop
sbb
xchg
sub
mov
rcrl
cltd
sti
mov
outsb
xor
inc
stos
jo
js
in
mov
stos
hlt
inc
ret
xlat
imul
sahf
je
mov
lods
fidivs
outsl
mov
xlat
sub
and
mul
xchg
sbb
xor
cmp
xor
jb
iret
dec
popa
push
dec
mull
add
add
and
or
sbb
add
cltd
mov
jmp
xor
push
loopne
mov
dec
insb
dec
imul
rcrb
movsl
xchg
jne
ds
rorb
cmp
call
sbb
push
xchg
jb
jecxz
iret
loopne
test
sub
incl
xchg
mov
xchg
das
fsubrl
rcrl
xchg
popa
pop
xor
mov
arpl
push
arpl
push
stc
dec
jle
dec
cwtl
dec
sbb
int
fcmovnbe
or
fistl
mov
push
fistps
mov
mov
outsb
xchg
fbstp
pop
fcmovbe
xor
dec
loop
jg
xchg
push
and
pop
or
xor
sti
xchg
aad
sub
or
adc
pop
test
out
fldcw
mov
into
into
and
and
mov
sbb
setno
movsl
pop
fcmove
sub
insb
mov
pop
mov
jbe
cmp
outsl
out
fistpl
sub
mov
dec
mov
das
lds
sarb
pop
fwait
enter
icebp
dec
jae
add
add
call
pop
sub
mov
adc
push
test
add
and
jne
es
xchg
cmp
cltd
test
mov
jl
sub
pop
mov
fists
xor
jae
push
pop
fnstcw
aam
cwtl
mov
mov
icebp
inc
js
scas
push
mov
aad
add
xchg
imul
inc
add
mov
andl
jle
sarb
mov
jge
ds
in
fisttps
mov
fsub
test
arpl
lcall
push
ret
push
mov
adc
mov
hlt
jmp
xor
inc
aaa
mov
in
add
sbb
jbe
ss
add
sbb
jns
lds
int
jge
lahf
int3
xorl
xor
vcvtsi2sdl
mov
ss
sub
sbbl
cmp
es
dec
push
xchg
rolb
popf
jb
add
ret
and
add
int
movsb
aas
dec
mov
jmp
xchg
popa
xor
mov
xchg
jl
pop
fistl
lds
add
cli
mov
js
xor
pop
dec
mov
lahf
mov
dec
scas
popf
jp
jl
xchg
mov
in
adc
lods
lahf
icebp
xor
mov
repz
pop
int3
xor
lea
inc
jp
js
fs
sub
mov
mov
std
sub
shrl
mov
jne
leave
adc
mov
iret
pop
es
fwait
rorl
iret
lock
xchg
pop
mov
xchg
std
mov
inc
ret
imul
aam
pop
xor
ljmp
mov
add
mov
or
pop
into
mov
fwait
cli
mov
sbb
pop
rolb
jl
or
cltd
mov
or
cwtl
data16
xchg
pop
nop
orl
movsl
test
adc
lret
xchg
movsb
sub
jbe
sbb
repz
jle
imul
movsl
push
sub
dec
xchg
leave
aaa
mov
dec
jo
pusha
orb
int
test
push
arpl
jecxz
sbb
mov
in
mov
icebp
lret
dec
loopne
gs
jnp
mov
mov
popa
cli
cmpsb
xlat
test
out
jge
jno
ja
cwtl
mov
jecxz
pop
mov
fidivrl
scas
icebp
mov
push
fcomps
lea
jns
insb
push
inc
repnz
addr16
dec
les
mov
or
inc
mov
dec
or
xchg
add
fcmovu
int
jb
mov
and
jle
and
mov
mov
pop
cmp
test
test
test
sub
push
xchg
cmp
jb
scas
or
jns
lret
mov
es
sbb
adc
push
arpl
push
mov
filds
xor
cmp
iret
int3
pop
pushf
pop
jl
pushf
jmp
or
or
fwait
pop
sbb
cmp
jp
inc
leave
xorb
pushf
arpl
pop
sub
fwait
xchg
push
lods
das
pop
adc
stos
iret
outsl
mov
rorb
call
les
xchg
xchg
and
scas
iret
pushf
iret
jns
andb
mov
xchg
adc
or
sahf
xor
int
cmp
sahf
lret
push
add
dec
cmpsl
mov
subl
insl
lret
lods
jne
mov
scas
jecxz
rcr
je
sti
bound
mov
inc
outsl
loope
cltd
adc
out
add
repz
mov
and
sahf
cmpsl
cmpsb
jmp
adc
cmpsl
push
mov
jge
xor
cltd
mov
in
out
loopne
in
add
lock
cmpsl
and
cld
popf
lret
jcxz
push
inc
out
xchg
or
push
mov
leave
inc
cmpsb
ss
push
lahf
cmpsb
add
push
stos
adc
test
insl
pop
stos
mov
jg
mov
sahf
lods
mov
mov
cmp
shlb
jo
mov
scas
xchg
mov
call
jno
flds
xorb
test
and
inc
or
sub
mov
adc
push
fmuls
xor
cmpsb
ds
xchg
mov
jl
cs
shlb
xor
push
xor
xchg
cmp
sbb
insl
mov
scas
fildl
and
mov
sub
rcll
outsl
cmpsl
leave
sub
xor
fsubs
sahf
scas
and
or
jne
or
jno
jecxz
cmpsb
jmp
mov
js
mov
sbb
inc
inc
sub
sub
loope
sub
popf
popf
and
notb
push
inc
in
insl
xchg
inc
jns
or
fsubrl
add
fsub
stc
cld
les
movsb
fisubrl
push
sub
in
mov
push
ja
sub
sbb
gs
xlat
lret
inc
scas
dec
dec
cld
or
add
mov
xor
adc
psrad
pop
pop
push
pop
sub
jge
add
and
enter
mov
add
adc
fwait
jo
shrl
rcl
mov
push
mov
dec
inc
fldl
jge
popf
mov
xor
in
arpl
push
out
dec
mov
cmp
fcom
and
mov
enter
sbbb
jnp
cmp
or
pop
imul
les
lahf
sub
sbb
outsl
push
int
mov
jne
mov
dec
sub
jl
push
sbb
lods
in
leave
and
mov
sbb
jb
adc
cmp
pop
ds
rclb
mov
xchg
popf
push
xchg
or
scas
test
aam
test
imul
mov
xchg
push
scas
inc
push
lcall
push
xor
mov
aam
and
cmp
sbb
repz
lret
lahf
loope
ljmp
in
icebp
mov
adc
cmpsb
sbb
sbb
dec
inc
enter
shl
lcall
xor
cmp
pop
ds
push
mov
nop
aad
fistpll
out
push
test
dec
adc
pusha
push
push
or
stos
sub
or
sbb
add
out
in
lcall
jg
scas
fistpll
ss
sti
movsl
das
mov
roll
aad
cmpsl
mov
aam
imul
lahf
or
ret
pop
fdivrl
shrb
lret
adc
inc
push
fs
push
add
out
inc
or
mov
ja
push
xchg
add
sahf
push
jnp
fists
pop
loop
fwait
into
in
faddl
add
lock
sahf
mov
inc
aam
in
xchg
call
icebp
cwtl
push
movsl
fs
sbb
sbb
xchg
stc
jecxz
sub
ret
sbb
loop
adc
push
mov
sbb
sub
in
inc
das
push
lret
cmp
mov
sub
inc
mov
mov
mov
or
cmp
fnsave
scas
push
mov
dec
outsl
sahf
adc
push
aad
aas
sbb
nop
test
adc
adc
aaa
stos
les
scas
sbb
and
inc
jge
imul
fcomps
loop
jb
outsb
outsb
jb
jp
inc
in
sub
dec
adc
sub
sbb
incl
rcr
vunpckhps
sbb
cmp
push
pop
inc
rolb
cmpsl
xor
sahf
and
imul
pop
rorl
mull
mov
inc
mov
sub
add
fldcw
xchg
pop
or
popa
cmp
icebp
int
movsl
cmp
adc
push
mov
push
mov
and
mov
imul
xchg
imul
cmpsb
lea
pop
jle
ja
mov
call
inc
inc
mov
xchg
mov
mull
je
stos
cmc
idiv
jae
xor
xchg
add
pop
or
cwtl
sbbl
push
xchg
mov
shrl
jnp
sub
mov
sub
jl
xchg
cmp
fsubrs
xchg
fstpt
dec
sub
jae
aam
pop
pop
inc
pop
sti
and
cs
enter
addl
inc
hlt
sbb
add
fs
add
scas
xchg
add
jnp
aas
and
xor
inc
push
cmp
fsubs
sbbl
daa
inc
mov
sbb
pop
push
and
pop
mov
loope
mov
repz
shll
pop
jnp
mov
dec
mov
push
nop
sbb
mov
fildll
ror
sub
cmp
mov
rorl
test
push
cmpsb
push
ljmp
and
insb
xor
lret
jo
jae
cmc
loope
es
and
push
inc
rol
cli
sti
outsb
inc
rclb
pop
jae
push
insl
cmp
mov
cmp
unpckhps
enter
jge
pop
repnz
cmp
lret
aaa
sub
lods
inc
mov
and
ja
mov
out
sbb
lret
sbb
lret
scas
imul
repnz
movsb
lds
inc
push
cmp
sbb
movsl
push
push
cwtl
xchg
pop
cmc
ret
or
int
inc
inc
adc
mov
sbb
out
push
imul
xor
mov
add
push
add
test
add
xchg
pop
xor
dec
bound
mulb
fisttpl
inc
pop
outsb
push
dec
inc
sub
jnp
and
add
out
or
out
xchg
lcall
popa
or
push
add
mov
ret
sub
mov
push
lcall
sahf
sbb
or
xor
test
lods
dec
lds
push
push
lea
mov
std
nop
imul
dec
pop
xor
mov
adc
pop
pop
jns
dec
push
cmc
xor
insb
xor
or
mov
sub
pop
lret
jg
mov
fildll
mov
bound
cmp
adc
cmp
cwtl
out
mov
inc
fidivl
pop
mov
mov
xlat
xchg
mov
pop
incb
les
jbe
ljmp
repnz
jle
xchg
insl
jmp
xchg
inc
mov
negb
stos
mov
pop
dec
cmp
rclb
sti
xor
push
jle
shll
in
cmpsb
sti
nop
ds
or
xchg
inc
pop
mov
jno
add
inc
mov
into
fcmovbe
adc
pop
mov
inc
fadds
test
ljmp
jbe
call
xchg
leave
fidivl
cmp
mov
lret
leave
cltd
cli
pop
or
xor
stos
dec
aaa
stos
dec
adc
jmp
mov
aad
data16
clc
hlt
aas
aad
pushf
or
push
mov
fdivr
push
add
inc
sti
mov
mov
repnz
lods
icebp
aad
arpl
test
or
mov
cli
push
pop
repnz
or
sbb
test
xor
cmp
data16
shl
xor
pop
lock
jbe
ljmp
cmp
shll
inc
push
pop
call
xchg
aas
mov
aad
enter
std
imul
arpl
arpl
aad
pop
xor
in
inc
movsb
mov
into
push
iret
in
fwait
mov
xor
mov
add
jmp
or
out
adc
mov
imul
pop
test
daa
pop
pop
fwait
mov
bound
adc
gs
mov
fcmovnbe
ror
pop
add
or
mov
fsub
stc
xor
mov
lret
push
testl
dec
xor
pop
idivb
push
mov
div
ljmp
mov
inc
inc
jmp
cmp
dec
add
fwait
aam
ljmp
xchg
cs
add
rorl
sbb
in
test
movsl
ljmp
lods
inc
xchg
xor
pushf
imul
aaa
push
fcmovnu
dec
jns
xchg
mov
gs
or
adc
sahf
push
addb
add
xchg
pop
mov
rcrb
lock
mov
xchg
xchg
fistpl
jae
lods
sub
jp
dec
sti
cmp
push
push
sbb
loop
test
sub
fcmovne
rorb
jle
fimull
sub
fwait
dec
jne
mov
das
cltd
fstps
popf
pop
jnp
jg
cmp
in
mov
ret
jae
adc
adc
cld
frstor
popa
mov
mov
insl
mov
sbb
push
cmp
test
adc
sarl
adc
pushf
and
scas
into
xlat
scas
push
in
shlb
pop
adcb
lcall
push
ret
mov
icebp
rorl
push
subl
insb
add
push
sub
xor
mov
lcall
ljmp
mov
test
adc
push
xchg
xchg
or
sbb
in
rcll
or
xor
push
arpl
aam
cltd
notb
or
dec
insb
add
mov
mov
loope
inc
push
inc
push
xor
sbb
fisttps
mov
mov
push
mov
fisubrl
insl
mov
mov
pop
fisubl
repnz
sti
loop
lcall
dec
subb
sti
and
sub
lock
stos
aam
adc
in
repz
sub
xor
xchg
loopne,pn
leave
incb
push
fwait
inc
sti
daa
lret
cltd
rol
xor
icebp
mov
ds
adc
jb
gs
jnp
clc
sub
fbstp
and
lcall
sbb
daa
mov
sub
mov
inc
jnp
movsb
add
outsb
lods
push
xor
les
popf
mov
mov
mov
pop
int3
xchg
sbb
lea
andb
lods
lahf
push
repz
jns
add
sbb
in
jle
test
push
cld
mov
stos
sbb
test
dec
and
lods
popf
or
lods
mov
and
push
dec
inc
jp
nop
enter
out
pop
xchg
cmp
jl
push
sarb
mov
adc
divb
inc
cmc
ret
mov
icebp
dec
adc
xor
sbb
or
mov
lret
out
lds
mov
jbe
test
dec
push
lahf
mov
inc
inc
xchg
and
push
jmp
insb
inc
push
inc
sbb
divl
xchg
repnz
and
popa
fsts
std
cmc
icebp
ret
insl
jae
inc
sub
shr
xor
inc
sarb
es
mov
inc
aaa
push
in
aam
lea
rorl
outsb
mov
cmp
loopne
and
cwtl
jbe
ja
or
inc
movsl
icebp
call
in
bndstx
pop
dec
sbbl
xchg
sahf
hlt
mov
sbb
in
ficoml
lret
pushl
add
jnp
sub
loopne
pop
dec
inc
pop
loopne
push
xor
imul
mov
cmp
lds
adc
lahf
rclb
arpl
ss
add
mov
dec
and
lahf
ret
sti
jae
mov
inc
jb
cmpsl
loopne
das
or
pop
das
adc
clc
lds
xorb
ds
inc
cmpb
mov
adc
pop
repnz
cli
jnp
mov
in
lret
call
aad
cltd
jo
outsl
shl
inc
shlb
fisubs
inc
adc
push
repnz
ss
pop
adc
leave
mov
in
adc
inc
fwait
add
mov
dec
xchg
mov
lods
lcall
leave
movsl
sbb
xor
sbb
rcl
jnp
cmpsl
dec
lock
mov
mov
dec
loopne
popa
les
movsb
call
pushl
push
push
stc
mov
stos
sarb
test
sub
imul
mov
fdivl
mov
out
dec
lods
ja
das
data16
test
pop
lahf
in
pop
jg
jbe
stos
sub
cli
shl
cs
ja
test
push
jl
sub
aam
cmp
add
inc
test
mov
jge
dec
stos
adc
pop
movsb
mov
jle
lcall
int3
xchg
pop
into
jne
dec
imul
es
mov
rorl
push
aam
mov
or
icebp
cmp
mov
loope
jno
lcall
push
mov
iret
das
xchg
mov
sahf
jbe
inc
and
mov
js
pop
mov
inc
imulb
adc
outsb
scas
cmp
lods
or
xchg
mov
xchg
out
jnp
mov
mov
or
movups
or
fcmovbe
pushf
ret
imul
in
jb
xchg
mov
lcall
flds
adc
xchg
xor
dec
mov
clc
icebp
pop
loop
and
cmp
dec
int3
popa
mov
scas
int3
notl
or
xor
sub
cmp
int3
fcomip
fs
cs
jae
cmp
xor
cmp
inc
cltd
jno
ja
jbe
sub
sti
lds
pop
std
mov
sbb
shr
mov
dec
pushf
je
jne
mov
lods
pushf
popf
and
adc
cmp
mov
adc
sub
lret
sbb
mov
push
jg
cmp
mov
xchg
in
xchg
iret
hlt
shll
xchg
imul
mov
ljmp
shrb
outsl
add
mov
icebp
sahf
push
outsb
mov
or
sti
or
call
sbb
cmpsl
sub
ja
lock
ja
pop
and
cmp
pusha
loope
shl
jle
leave
sub
sbb
lcall
and
push
mov
xchg
xor
mov
inc
pop
xchg
outsl
mov
xchg
stc
dec
arpl
rclb
xchg
mov
imul
mov
inc
xchg
sub
push
cs
mov
mov
outsb
add
lret
lret
pop
sub
mov
inc
sub
and
dec
xorb
jae
xchg
pop
mov
or
add
cmp
and
ds
cli
mov
mov
inc
sbbb
mov
jmp
loope
aad
or
ret
xchg
dec
cltd
or
cs
int3
data16
cmp
imul
and
ret
call
pusha
lock
sbb
pushf
ljmp
xlat
xchg
pop
pop
mov
rorl
mov
stc
fisttpll
in
mov
jp
add
push
push
insb
mov
mov
push
and
pop
aaa
lds
cmp
dec
sub
imul
dec
inc
push
rorb
ja
adcl
pop
addr16
bnd
xchg
pop
stos
xchg
jl
roll
testl
mov
mov
enter
dec
adc
cli
sbb
add
arpl
mov
xchg
in
push
fcomps
dec
mov
pop
jmp
and
push
xchg
push
mov
xchg
unpckhps
jg
stos
add
sbb
xchg
ret
jno
out
mov
lods
jmp
push
jae
test
insl
js
inc
cmp
xchg
jbe
testl
and
stos
pusha
test
pusha
adc
mov
sarb
ret
int3
sub
rclb
cs
rcrl
push
sbb
shrb
mov
xchg
inc
lods
lods
idivl
sbb
push
stc
adc
movsb
repnz
pop
xchg
shlb
jg
adc
ja
xchg
cmp
cmp
dec
shll
mov
bnd
push
add
dec
and
sbb
les
movsb
cli
je
push
jmp
xchg
out
test
jae
xchg
arpl
hlt
movsb
inc
xor
push
mov
int
ss
jb
je
push
xor
lea
imul
shr
movsb
testl
lock
or
inc
pop
aam
mov
into
pop
jmp
push
mov
gs
enter
add
inc
mov
enter
leave
ret
jg
xor
sub
movsb
nop
je
subb
and
cs
nop
repz
add
and
push
daa
out
stc
lcall
xchg
jo
cli
xor
out
outsl
fldenv
sbb
daa
fnstcw
sub
mov
or
lea
jge
cmpsb
rcrb
popf
popf
xchg
dec
mov
aam
sbb
scas
add
in
pop
popl
inc
fs
add
cli
dec
out
incb
hlt
xorb
inc
inc
icebp
mov
add
mov
filds
jb
sarl
rcrl
outsb
pop
jecxz
outsb
cmp
in
sub
fnsave
sti
adc
data16
mov
sub
imul
call
andl
paddusw
pop
lock
pop
clc
pop
es
or
nop
mov
ret
pop
hlt
mov
or
fisttpll
stos
jb
mov
insb
cmp
or
scas
nop
pusha
add
inc
stc
pop
add
test
pop
js
mov
or
sub
pop
out
outsb
loope
and
mov
test
jmp
lock
sbb
pop
jmp
cltd
push
outsl
and
xor
shll
add
sub
std
sbb
stos
adc
mov
aam
jns
pop
testl
das
pop
in
int3
adc
faddl
sub
pop
jbe
fistl
test
in
xchg
out
push
shrl
xchg
or
pop
addr16
fildll
cmc
sub
movhps
arpl
and
ljmp
cs
hlt
in
mov
push
inc
outsl
pop
in
stc
xchg
fs
and
and
mov
out
xchg
mov
insb
mov
lea
mov
loope
std
out
and
insb
ds
mov
lret
leave
add
push
add
gs
sarb
jnp
push
adc
push
sub
mov
dec
ret
pop
mov
push
lcall
fmuls
arpl
adc
cmp
xchg
scas
mov
sub
sahf
jecxz
pop
stc
mov
cld
and
mov
insl
incl
aaa
push
shll
xor
jle
push
mov
fstl
aad
fists
movsl
mov
jnp
pushf
add
push
das
int3
add
movsb
into
fwait
and
outsl
or
mov
or
fdivr
popf
cli
mov
push
mov
repz
mov
xor
shrb
jbe
cli
xor
add
fwait
int3
dec
jge
mov
sbb
sub
push
mov
pop
mov
aas
in
and
outsl
iret
add
jo
jae
adc
cs
sub
cli
aad
mov
and
inc
mov
add
mov
xchg
das
push
es
insl
dec
sub
std
mov
jno
test
cmpsb
add
mov
popf
gs
insb
cmc
dec
nop
and
aas
enter
dec
nop
jg
stos
dec
call
push
xchg
imulb
xchg
lahf
dec
fsubl
sbb
out
and
push
fildl
out
std
add
imulb
repz
cmpsb
clc
maskmovq
jno
add
test
ja
or
addr16
jmp
imul
sbb
test
out
int3
dec
rcl
int3
xchg
pop
rcrb
and
jecxz
mov
or
pop
push
aam
test
insl
sbb
push
cwtl
js
orb
out
lret
insl
fs
dec
xor
in
dec
fsubr
popf
idivb
mov
in
xor
mov
pop
aam
scas
addr16
pop
sbb
push
mov
gs
rcl
xor
inc
das
mov
pop
int
das
pop
push
pop
sub
scas
test
dec
in
push
cmp
daa
rcrl
push
xchg
inc
or
mov
in
lods
or
test
movsb
cmp
sahf
aam
popf
lds
cmp
repz
ds
mov
scas
xchg
pop
fiaddl
jl
dec
ljmp
jo
pop
stos
int
scas
idivl
pop
jl
cmp
clc
inc
push
mov
push
popa
stc
adc
mov
je
orb
aam
mov
pushf
push
add
or
dec
mov
mov
ret
push
mov
pop
data16
sub
and
dec
in
cmpsb
movsl
inc
or
fcoms
test
or
inc
inc
repz
xchg
mov
jg
inc
and
sbb
aaa
enter
ja
ret
mov
lock
adc
inc
push
cmp
xchg
or
loope
pop
push
call
push
push
mov
cmpsb
inc
push
cmp
cmp
arpl
push
je
ds
sbb
or
inc
les
add
xchg
addl
inc
repz
lods
cli
daa
cltd
add
cmpxchg
leave
fcomi
int3
mov
push
xorb
outsl
mov
mov
cmp
in
mov
aam
mov
add
sbb
mov
fildl
push
push
add
add
test
push
arpl
cs
xchg
xchg
shrl
cltd
mov
stos
jg
out
pop
lods
mov
gs
pop
sahf
mov
jecxz
ret
out
mov
xchg
cltd
add
cmp
cmp
jne
lcall
and
add
cmp
bound
push
push
lret
mov
loopne
insb
sub
out
clc
fisubrl
aaa
and
mov
dec
sbb
outsb
add
jle
data16
ret
and
dec
dec
adc
sub
cmpsb
rorb
test
xchg
sbb
rolb
jne
jecxz
jl
rclb
mov
popa
or
xchg
push
lods
push
mov
addr16
sub
fadds
cmp
jmp
inc
loope
mov
jns
xchg
and
ljmp
icebp
pop
das
andl
push
jno
or
add
fadds
mov
sbb
fwait
subb
jo
xor
aad
jl
notl
jae
sbb
mov
xor
dec
inc
cmp
arpl
lods
adc
mov
mov
mov
jmp
and
mov
jbe
cmp
popf
mov
add
xchg
adc
and
dec
jecxz
xchg
add
xor
or
test
dec
adc
jbe
mov
dec
add
and
int3
adc
shlb
add
jmp
jbe
sub
or
out
add
xor
pop
pop
pop
mov
adc
xchg
ds
xor
cs
lods
movsl
adc
pop
mov
movsl
mov
sti
push
out
in
cmp
pop
pop
subl
imul
call
mov
cmp
mov
test
jne
mov
stc
insl
xor
loop
outsl
xchg
out
xor
aam
xlat
cltd
faddl
adc
int
xchg
cwtl
jge
sarl
adc
je
in
add
inc
scas
mov
int3
hlt
in
jo
fcmovnb
adc
stc
mov
mov
pop
jp
xchg
mov
adc
jp
int
inc
jmp
lea
push
pop
pop
mov
stc
ds
add
insb
cmpl
lahf
ret
jns
sbb
adc
sbb
pop
jno
or
sub
jnp
sti
jge
jo
push
mov
or
adc
aad
inc
sbb
jmp
repnz
xchg
fisubrl
pushf
int3
std
in
cmp
arpl
pop
jnp
jl
lods
shrl
pop
cmp
adc
mov
adc
test
add
scas
adc
jne
mov
inc
fisttps
jnp
jg
subl
push
in
icebp
ficompl
push
cmp
test
call
xor
jo
sub
addr16
pop
jmp
insb
xchg
or
xlat
stc
jmp
lods
stos
stos
shlb
rorb
mov
and
dec
call
or
fwait
data16
and
lcall
inc
xchg
pop
jne
push
inc
mov
out
push
mov
mov
dec
in
add
out
daa
and
bound
imul
add
xor
inc
push
mov
cmp
test
cmc
sar
adc
and
shrl
add
jno
xchg
push
hlt
mov
add
dec
pushf
shrb
push
cmp
push
test
inc
cwtl
lcallw
pop
pop
insb
movsl
data16
sub
lods
jo
out
jp
in
inc
jo
inc
xchg
push
mov
imul
icebp
outsb
or
test
arpl
sub
add
mov
shlb
pop
mov
out
mov
lcall
jg
sti
xchg
mov
pop
cwtl
scas
add
dec
scas
fwait
jg
ljmp
insl
in
ds
lds
mov
jle
add
adc
popa
fs
dec
mov
sbb
es
xor
dec
mov
aaa
inc
mov
int3
add
cmc
pop
icebp
filds
pop
cltd
push
bound
lahf
les
int3
mov
mov
ret
fcoms
adc
jecxz
je
push
dec
jo
arpl
xor
imul
repz
lds
ljmp
testl
jnp
xor
cmpsl
jg
xchg
push
mov
ljmp
add
loope
mov
sub
loop
sbb
and
in
xchg
repnz
sbb
lea
lcall
mov
jae
dec
add
cmp
icebp
cmpsl
daa
cmp
mov
adc
cmpsl
repnz
push
push
dec
rclb
sub
push
ret
push
hlt
xor
aaa
fsubl
mov
jle
es
shlb
fcomip
test
sahf
divps
ja
add
jbe
leave
add
sbb
xchg
pop
jge
fnstenv
dec
hlt
loop
pop
xchg
dec
ret
jecxz
sub
sub
imul
add
jne
scas
cld
aad
ja
mov
jns
test
arpl
sbb
dec
ss
add
clc
mov
repz
arpl
movsb
adc
sbb
imul
mov
faddl
int3
xor
mov
xor
and
arpl
add
cmp
pop
mov
cmp
sub
sahf
adc
push
mov
pusha
and
sub
push
loop
dec
add
clc
jge
push
fstpt
adc
popf
je
cmpsl
and
stos
push
pop
je
add
pop
movsl
sub
jne
sbb
stos
push
pop
out
ljmp
jne
arpl
push
sbb
out
mov
mov
idivb
sub
repz
jbe
repnz
ss
es
fst
into
or
inc
pop
shll
aad
data16
repz
adc
test
and
ret
addr16
inc
pop
pushf
btl
lds
stc
and
clc
add
cwtl
sbb
sarl
addr16
loop
or
mov
bound
gs
mov
je
adc
add
jns
mov
hlt
imul
xchg
mov
fst
push
les
clc
out
and
inc
std
iret
push
add
jno
popa
outsl
jge
and
insb
pop
cltd
sti
sub
ret
mov
push
xor
jle
dec
jp
sarl
lcall
lock
mov
or
xchg
add
repz
cmp
cs
outsb
mov
mov
aad
push
hlt
add
mov
pop
xor
arpl
jnp
inc
jge
dec
test
stc
insb
jns
scas
loopne
mov
sub
xchg
stos
jl
add
insb
and
jo
xchg
movsb
cltd
mov
je
aam
jne
adc
lcall
and
dec
add
int
das
movsb
push
push
and
loop
out
ret
sub
mov
orb
or
pop
sub
cmpsl
or
sahf
push
in
xor
or
add
push
push
call
sbb
ret
arpl
fsts
in
adc
fwait
xor
imull
xlat
cmp
cmpsb
insl
orl
dec
push
jl
dec
push
dec
cmp
pop
fisttpll
ja
lock
pop
inc
pop
and
in
ja
xchg
or
decb
lds
mov
aas
jmp
xchg
jae
test
dec
adc
mov
cltd
addb
mov
bswap
jecxz
rorl
mov
push
mov
test
cmc
inc
xchg
decl
in
push
rclb
addr16
pop
push
js
clc
mov
out
scas
cmp
fidivs
xor
in
stos
sub
aam
stc
addr16
jbe
test
sbb
aam
sti
inc
xchg
cmp
cmp
push
or
inc
add
es
pop
jbe
and
inc
mov
test
test
dec
pop
mov
mov
aam
hlt
sub
mov
adc
adc
jbe
dec
mov
out
pop
or
sbb
jl
xor
in
inc
push
mov
fwait
hlt
fbstp
outsl
jmp
in
ds
cmp
outsl
ds
mov
push
lcall
in
mov
bound
stc
cmpsl
add
aas
sub
mov
jb
in
pop
imul
test
or
out
push
cld
adc
icebp
mov
insb
fists
push
or
add
lods
xor
mov
ret
dec
popf
mov
cmp
fldt
mov
insl
adc
push
mov
les
incl
lea
push
mov
mov
mov
push
repz
sub
sbb
arpl
stc
scas
fisttpl
push
push
dec
fdivrs
dec
lcall
push
fmull
pop
lock
stos
push
xchg
add
mov
xchg
sub
jmp
add
int3
ret
sub
mov
jg
sti
jae
push
pop
shlb
add
insl
aaa
jecxz
pop
mov
hlt
cmp
or
cmp
xchg
sti
mov
adc
push
and
int
call
fcomps
ret
mov
inc
inc
daa
lock
ljmp
into
pop
insl
test
push
or
mov
dec
inc
insl
add
mov
jg
js
mov
insb
push
std
ret
fs
in
icebp
inc
pop
push
push
jne
or
or
sub
and
dec
cmp
jp
jnp
out
pop
test
icebp
movsl
dec
jo
lods
pop
or
cmp
ja
jl
adc
mov
and
les
fbld
vcvtsd2usi
icebp
ja
jns
dec
bound
add
movsl
loop
notb
out
ja
divb
push
in
jae
xor
pop
fsts
int
lods
cmp
lret
add
cmp
repz
sahf
sbb
pop
testb
cmpsl
aam
or
add
adc
sahf
pop
test
xchg
pop
cmpb
fbstp
push
cli
xchg
jbe
cmp
aam
scas
test
ljmp
push
push
stos
or
lods
pop
or
jbe
pop
sbb
lods
movsb
scas
loopne
or
outsb
cmp
and
jle
dec
jl
cs
inc
movsl
or
or
mov
lahf
adc
cld
mov
dec
pop
fnstsw
call
or
fcomi
cs
adc
mov
and
sahf
and
outsb
mov
je
inc
mov
sub
test
mov
mov
ja
add
add
mov
inc
test
mov
lea
mov
fs
push
push
loopne
mov
imul
mov
push
cli
lods
or
mov
mov
or
pop
repnz
stos
mov
imul
or
popa
outsb
adc
int
xlat
aam
mov
notb
and
dec
pushl
pop
jle
fwait
notl
fsubl
imul
add
dec
and
mov
repnz
pop
insb
sbb
das
into
cs
mov
mov
sahf
clc
bound
imul
adc
cmp
sbb
add
xor
lods
xchg
ja
pop
test
enter
sti
xor
jmp
and
mov
push
pop
cmp
mov
mov
out
pop
dec
inc
in
xchg
dec
xlat
xlat
lea
sub
xorb
lcall
xchg
js
push
std
les
ret
mov
or
dec
loope
lods
lcall
cmp
in
jp
mov
dec
mov
xor
and
ret
ret
movsb
cmp
adc
pop
push
and
comiss
cmpsb
jae
dec
sbb
rorb
dec
mov
mov
adc
mov
and
xor
pop
and
std
xchg
repz
mov
imul
mov
mov
xor
push
fistpll
fldenv
push
dec
mov
push
adc
mov
xor
outsb
mov
loopne
jge
add
out
ljmp
daa
outsb
fs
int
nop
mov
shll
or
addl
dec
dec
xchg
sbb
cmp
daa
popf
cmp
inc
xchg
lahf
jno
cwtl
fdivs
sub
mov
xchg
cwtl
add
or
sahf
addr16
inc
push
rol
nop
fcos
push
add
les
daa
data16
pop
sub
jnp
data16
adc
ret
outsl
push
xor
xchg
lock
bound
sbb
mov
push
xor
fistl
mov
push
mov
cmpsl
cmc
cmp
mov
mov
les
call
sbb
mov
push
mov
iret
and
aas
mov
test
dec
or
pop
sarb
aad
mov
loop
pop
iret
jnp
or
sub
sarl
xchg
sbb
das
out
orl
and
int
jns
mov
rcl
inc
sub
dec
sbb
in
adc
cmpb
mull
jge
je
aam
jne
daa
test
sbb
dec
cmp
ss
call
jo
xchg
sub
sbb
push
jbe
sbb
sub
mov
push
cltd
out
movsl
aaa
pop
cltd
push
jnp
sub
add
dec
push
and
jae
dec
lea
jle
pop
mov
xor
mov
and
xorb
pop
adc
sbb
fs
sahf
jg
ss
shll
add
cli
add
push
mov
jo
cmpsb
lods
je
sbb
loopne
add
fsubrs
das
xchg
mov
xor
pop
sti
xchg
insl
jae
xor
loop
fidivrs
push
xchg
dec
push
pop
xchg
push
addl
cmp
mov
aaa
lret
adc
pop
std
mov
pop
mov
dec
pop
dec
add
testb
inc
popf
cmp
jmp
negl
loopne
movsb
lea
jns
pop
insb
sub
icebp
lock
shlb
push
pushf
es
xor
fs
fcompl
scas
cmp
pop
jnp
je
pop
push
stos
shll
scas
xchg
push
repz
adc
xlat
xor
stos
negb
test
sbb
das
mov
inc
int
xchg
std
aas
inc
leave
push
out
outsl
int3
fidivrl
push
ljmp
or
outsl
mov
sarl
jmp
xlat
pushf
jne
mov
ljmp
sub
jge
cmp
or
mov
je
fmuls
ret
jns
adc
dec
inc
scas
roll
clc
aaa
popa
and
dec
pop
jge
fstl
in
pushf
loop
add
lds
mov
xor
jo
adc
dec
jne
js
lcall
adc
jmp
stos
adc
ret
pop
in
dec
push
mov
frstor
ret
out
sbbb
push
lods
dec
pop
sub
push
ljmp
shr
lods
pushf
movb
mov
loope
jne
jmp
mov
or
mov
enter
in
stc
push
push
inc
jae
ror
pop
sti
lcall
pop
push
xchg
and
out
cmc
enter
shl
in
push
xlat
lods
dec
fwait
mov
mov
jo
pushf
jae
leave
jnp
or
dec
scas
xchg
in
inc
scas
repnz
stos
add
enter
xchg
cmc
xchg
movsl
sbb
push
add
and
stos
xchg
adc
xchg
into
sahf
inc
xlat
js
dec
mov
sbb
aaa
sub
loope
inc
sahf
stos
loop
test
or
stc
mov
cmpl
mov
das
xor
jnp
insb
sbb
add
insl
dec
fwait
xor
stos
lret
xchg
xchg
lods
xor
loope
retw
jbe
lea
sbb
fsubs
and
out
ffreep
add
outsb
stc
ss
mov
inc
test
lret
dec
pop
inc
out
stc
js
addr16
xchg
sub
xchg
or
sbbb
inc
jg
mull
xor
mov
xchg
jge
add
fstpl
add
mov
sahf
int3
roll
test
fidivrl
pop
out
shll
pop
and
les
mov
add
sbb
out
jle
insl
scas
xor
mov
mov
fs
fisubl
fnstsw
lcall
xor
int3
push
jns
aam
xlat
ficoml
mov
repnz
mov
dec
and
mov
push
dec
inc
aam
daa
mov
inc
bound
or
inc
adc
inc
cbtw
inc
adc
lods
es
add
in
mov
out
rcr
decb
fimuls
fisttpl
inc
inc
jmp
push
adc
or
cmpsl
inc
and
jp
push
sub
cwtl
sub
clc
xchg
pop
push
push
hlt
jmp
insl
inc
fbstp
xor
in
test
inc
imul
addb
mov
inc
fiaddl
mov
mov
arpl
pop
rol
xchg
sbb
stos
stos
ljmp
ret
sbb
cmc
mov
xor
test
icebp
call
cmpsb
dec
js
jp
dec
lock
sub
std
pushf
inc
push
lret
stos
cmp
loop
sti
leave
adc
ret
mov
sub
lock
pusha
aad
sti
adc
inc
fidivl
pop
pop
outsb
hlt
stc
mov
sbb
das
stc
gs
xchg
mov
dec
stos
je
rclb
pop
iret
insl
shll
xchg
imul
xchg
scas
jmp
cmp
add
aam
mov
lds
mov
jp
xor
mov
pop
nop
xchg
dec
xchg
lds
mov
lahf
xor
and
pop
xchg
adc
inc
cmp
fdivl
js
aad
insb
repz
lods
popa
push
popf
or
lods
cmpsl
in
in
sar
fdiv
es
xorl
fisubrs
mov
push
push
add
mov
and
daa
icebp
out
and
xor
lahf
sti
push
pop
and
aam
jne
cmpsb
lcall
push
inc
push
mov
mov
xchg
cli
repnz
aaa
test
add
mov
or
push
jb
leave
push
sub
jecxz
mov
lods
xchg
push
mov
inc
xchg
sbb
pop
int
adc
fwait
test
cltd
in
clc
int3
inc
or
xchg
cmpsb
mov
imul
or
dec
push
or
jmp
add
sub
lahf
ret
lock
sahf
xorl
jl
pop
mov
test
out
bound
sub
jge
xor
mov
push
mov
sahf
cs
or
mov
mov
xchg
out
fcomp
dec
fbld
loopne
xor
sub
out
pop
pop
sbb
jb
fisubs
lods
les
in
sub
fisubrl
or
shlb
sahf
add
mov
stos
adc
xchg
lcall
fs
inc
lods
rorb
dec
loopne
mov
or
pop
decl
and
mov
int
and
and
mov
inc
pop
add
repz
pop
mov
stc
ror
andb
cmp
inc
aad
jo
mov
dec
filds
dec
insb
out
aad
xor
fwait
loope
roll
jmp
fwait
inc
int
lods
lods
mov
sub
lahf
stos
rolb
mov
sbb
mov
mov
sub
mov
mov
mov
scas
insl
pop
sub
sub
test
test
repz
in
enter
sti
lahf
daa
into
rolb
loop
adc
or
imul
adc
fisttpl
es
daa
jg
rorb
lea
push
xor
scas
mov
lcall
push
sbb
aas
call
lcall
cmp
dec
ljmp
jle
or
add
cmp
out
jns
jecxz
adc
pop
and
das
int3
pop
inc
outsl
test
leave
pop
xchg
mov
cmpl
fcmovne
add
divb
push
cltd
jb
lcall
insb
cmp
cmp
scas
cmovbe
mov
leave
or
test
and
imul
jmp
mov
mov
mov
mov
cmp
mov
mov
in
test
or
add
fiaddl
sbb
inc
repnz
gs
inc
jmp
in
test
mov
in
inc
cwtl
pop
fistps
in
mov
repz
out
xlat
ror
fsubrl
push
and
adc
xchg
in
push
shlb
leave
mov
xor
stos
imul
leave
push
daa
push
fistps
cltd
add
add
sbb
jge
xor
lcall
dec
mov
in
out
pop
nop
inc
lret
dec
je
outsl
or
pop
jb
cmp
cmp
xlat
clc
dec
or
ficomps
push
cmc
mov
add
mov
ljmp
ljmp
mov
arpl
sub
lcall
sbb
cmpsl
jg
lods
in
cld
test
cmpb
movb
loope
scas
mov
cli
ja
mov
lcall
inc
jne
mov
xchg
dec
push
loope
add
in
mov
mov
inc
push
lods
mov
frstor
sbb
bound
xchg
xchg
push
nop
mov
inc
mov
repnz
lock
or
int3
pop
or
flds
push
add
mov
orl
push
aaa
out
xchg
daa
pop
add
aaa
xor
vaddsubpd
push
xchg
sub
negl
add
jle
xchg
xchg
scas
dec
jl
clc
jne
cwtl
in
js
jo
cs
bound
and
dec
mov
cmpsl
jmp
lahf
mov
adc
jecxz
pop
inc
pavgw
pop
outsb
mov
mov
popa
push
lcall
jae
dec
scas
mov
xchg
inc
xor
sub
sbb
add
subps
lock
jae
jbe
mov
mov
outsb
lcall
js
std
xor
fmull
dec
pop
adc
mov
mov
jecxz
mov
fildl
lret
add
add
jnp
jae
adc
idivl
mov
dec
ljmp
into
fisubl
or
pop
js
and
scas
xor
pushf
cmc
loopne
fs
je
and
loope
leave
jmp
repnz
push
ficompl
pop
mov
mov
cld
call
jp
dec
pop
mov
pop
lods
jmp
xchg
mov
and
in
dec
movsb
dec
cltd
mov
mov
mov
les
jg
arpl
mov
inc
decb
add
pusha
sub
sub
adc
loop
mov
loope
out
push
imul
mov
add
iret
mov
xor
cmp
fldenv
mov
lahf
dec
fidivrl
stos
push
add
js
dec
xor
das
cli
pop
mov
loop
rcrb
adc
negl
stc
push
fldln2
cwtl
call
test
xor
lds
and
aas
outsb
enter
push
fistps
in
ja
jbe
adc
xchg
cmpsl
stos
sahf
aaa
inc
orl
cmp
nop
jb
fwait
js
or
dec
lea
popa
aaa
push
push
inc
or
push
in
mov
pop
gs
clc
push
ret
push
test
cld
mov
mov
imul
sub
and
xchg
push
sbbb
mov
cmp
cmp
scas
das
cld
jbe
dec
xor
mov
push
mov
imul
cmc
push
cmpsb
cmp
lods
cmc
inc
sti
in
mov
sub
inc
lds
es
testl
sub
lds
jbe
sahf
add
jne
out
dec
mov
ret
and
push
loop
ja
int3
stos
sbb
lods
push
push
adc
push
inc
aad
xlat
cli
sub
cmp
pop
fwait
ret
push
pop
sarb
sbb
mulb
iret
push
test
and
fbstp
dec
sahf
cmp
cmpsb
push
arpl
and
loopne
lods
mov
sub
std
add
xlat
jmp
dec
mov
or
push
shrb
push
sbb
push
test
inc
mov
mov
add
xor
insb
inc
fwait
cmpsl
adc
fisttpl
insb
pop
nop
pop
mov
fstl
outsb
xchg
pop
mov
or
arpl
mov
pop
cmpsb
dec
insb
cltd
outsl
dec
jecxz
lret
mov
notb
cld
pop
inc
ret
and
inc
inc
mov
dec
pop
push
stos
lds
adc
leave
pop
ds
notb
adc
cmpsl
jmp
push
adc
and
sti
sub
sbb
add
cmp
sarb
loope
and
cmp
fmuls
fidivrl
sbb
mov
sbb
xor
dec
movsb
dec
sub
mov
mov
mov
adc
divb
cmp
or
fwait
inc
inc
fsubl
adc
fistpll
jp
dec
mov
lds
pusha
jno
imul
add
roll
sbb
cmp
jecxz
std
lods
mov
mov
xchg
das
repnz
pop
mov
fcoml
pop
xchg
test
popa
mov
or
jno
push
and
mov
or
xchg
daa
shr
push
xchg
inc
mov
test
shlb
test
xchg
sbb
leave
jae
in
dec
int
pop
arpl
roll
call
add
and
ljmp
adc
test
add
stos
mov
pop
cltd
cmp
xchg
cmc
cltd
lcall
loop
mov
pop
xor
pop
xor
js
pop
xor
mov
sbb
sbb
test
xchg
mov
mov
mov
push
out
xchg
and
add
dec
jbe
jl
sub
and
mov
push
inc
dec
mov
cmp
jle
sti
out
jnp
mov
inc
lret
mov
cwtl
add
lcall
imul
sarl
xchg
cli
xor
rol
pop
or
aaa
cmp
or
cs
popf
aas
pop
push
cmp
mov
loope
dec
xchg
xor
and
inc
sbbl
rorb
mov
or
ds
daa
push
lods
add
inc
sbb
out
jl
jae
fmuls
or
movsb
mov
or
push
xchg
loope
cmpsb
pop
fdivs
adc
out
nop
test
xor
xor
sbb
add
pop
cmp
push
fsubl
xchg
push
ds
mul
lea
orb
xchg
in
xchg
jno
push
sti
outsl
daa
shrb
shll
pop
gs
sbbl
clc
fwait
add
stc
mov
inc
gs
arpl
dec
push
in
aaa
pop
push
xor
sub
repz
ljmp
adc
inc
fisttps
jae
push
out
fisttpll
out
and
outsl
push
and
out
push
in
push
ja
xchg
jns
insb
test
std
fs
into
es
xor
sbb
pop
dec
ffree
adc
lcall
adc
mov
das
adcl
scas
pop
loopne
dec
pushf
mov
pop
lods
mov
leave
cmp
out
insb
mov
hlt
bound
push
jns
mov
int
sti
jge
bound
imul
mov
popf
rol
mov
adc
rclb
add
js
subb
sub
imul
and
jae
mov
push
imull
sbb
imul
lcall
fistpl
jmp
push
test
add
int3
out
adc
mov
adc
mov
aaa
jne
mov
xchg
sbb
jmp
rcpps
outsb
mov
sub
pushf
leave
mov
testb
sub
test
cmp
xor
and
movsl
and
and
adc
jg
pop
cmpsl
mov
call
pop
fabs
pushf
and
fs
lahf
fistps
mov
cmp
call
in
lret
in
xchg
popf
dec
adc
stos
xchg
ror
sub
ljmp
jg
push
sbb
mov
test
roll
ljmp
es
fwait
jl
push
add
mov
mov
filds
in
adc
and
mov
sti
mov
ret
sbb
je
xor
inc
roll
fsts
pop
icebp
mov
inc
js
jge
bound
loope
mov
fs
ret
cmp
and
sti
stos
xchg
icebp
cltd
jp
pop
sub
hlt
jb
dec
xor
rcll
pop
mov
mov
ja
out
mov
pop
rorl
cmp
pusha
push
in
mov
dec
rcr
or
mov
lods
mov
or
pop
int
fcmovne
or
outsb
jmp
dec
mov
and
mov
in
pushf
js
movsl
push
push
add
in
jo
and
lret
mov
mov
ja
nop
jne
jo
leave
out
ja
xchg
jge
ret
add
jmp
test
jl
xchg
adc
jp
scas
dec
loop
out
dec
pop
xor
cmp
test
xchg
cmp
int
and
cmpb
imul
gs
mov
or
cmp
mov
push
icebp
adc
xchg
mov
cmp
iret
xor
ja
mov
mov
pop
imul
push
mov
enter
fsubrl
test
sti
or
jp
pop
roll
outsl
and
jp
add
jb
int3
jp
popf
insb
das
xchg
xchg
xchg
mov
xor
push
repz
jmp
ss
sbbb
les
inc
adc
mov
push
cmp
sbb
pop
adc
adc
adc
loopne
fucomi
dec
push
loopne
mov
daa
mov
and
xchg
in
das
xchg
iret
mov
jmp
int
iret
out
shl
aaa
jle
repnz
dec
cwtl
test
push
add
pop
es
sbbl
pop
sbb
movsb
clc
dec
aaa
jl
test
mov
adc
lret
mov
mov
and
sbb
cmpl
xor
mov
out
gs
int
movsl
or
xor
sub
fdivrl
inc
dec
mov
push
push
add
inc
lret
jl
test
sub
in
fwait
sbb
push
hlt
add
dec
leave
test
daa
outsl
inc
push
enter
ljmp
cmp
popf
pushf
xchg
pop
cmc
xor
out
dec
push
add
cli
dec
mov
outsl
mov
adc
mov
rcrl
jb
pop
out
push
mov
repz
outsb
sub
sbbb
leave
pop
sbb
lret
adc
enter
xlat
cwtl
movsl
test
cmp
add
loopne
hlt
mov
insb
inc
shlb
shrb
pop
outsb
test
decb
mov
dec
dec
xor
sti
loope
xlat
leave
sub
mov
adc
jne
hlt
mov
loopne
cs
scas
test
or
pop
cs
mov
or
dec
adc
into
push
jnp
add
push
in
out
cltd
mov
pop
jecxz
addr16
movsl
jbe
sub
jo
sbb
rolb
push
push
loope
xchg
jae
fldt
adc
mov
shlb
cltd
jecxz
ljmp
jp
xchg
pop
mov
aaa
inc
sub
mov
aam
daa
jno
ret
pop
sbb
add
sub
into
pop
sbb
fildll
inc
repz
sbb
nop
mov
stc
das
js
or
mov
data16
jmp
nop
cmp
adc
xor
sbb
daa
mov
fsubl
push
dec
mov
sub
adc
outsb
int3
iret
roll
addb
lock
push
and
scas
lods
loopne
pop
lds
dec
or
jmp
outsl
outsb
fdivr
shll
mov
in
js
or
mov
sub
mov
movsb
test
sbb
mov
idivl
inc
mov
push
xchg
imul
inc
cmp
sub
test
test
addr16
sub
cmc
and
add
push
jbe
xchg
test
dec
mov
adc
sub
mov
pop
loopne
ret
out
repnz
out
ficoml
test
lea
stos
shrl
adc
jp
sar
pop
adc
mov
enter
lods
mov
mov
test
je
clc
pop
push
xor
mov
adc
pop
inc
int3
ja
imul
jmp
insb
push
or
int3
in
sahf
mov
sbbl
jnp
push
dec
cltd
inc
inc
jne
sub
aas
outsl
and
jp
ds
mov
stc
dec
jnp
cmp
add
and
push
mov
lea
and
mov
jmp
xor
ret
sub
mov
imul
or
mov
mov
sbb
mov
movsl
jg
movsb
dec
mov
mov
fstpl
lahf
cli
in
call
add
icebp
ljmp
icebp
lcall
imul
fidivrs
or
adc
in
sub
mov
adc
fsubl
in
movsb
js
pop
cmp
pop
and
push
scas
pop
inc
mov
lods
jno
in
jle
push
fsubrs
add
in
push
xchg
and
jnp
lea
sub
lea
imul
test
push
fstps
fimull
cmp
push
loopne
lock
out
dec
or
movsb
ljmp
test
cmp
in
and
test
sahf
pushf
data16
xchg
inc
push
pop
pop
ret
ret
std
adcb
lret
jno
add
push
arpl
xor
cmp
xchg
push
sbb
jl
sbb
arpl
fisttps
xchg
or
xor
sub
das
push
leave
pop
sahf
mov
in
mov
or
sub
push
sbb
mov
bound
arpl
push
call
shrl
cmp
popa
or
cmpsb
test
mov
push
stos
sti
mov
insb
icebp
add
mov
dec
jecxz
out
loop
xor
mov
jecxz
mov
popa
pop
jno
js
pop
sbb
mov
rorl
pop
jnp
sub
into
sbb
mov
leave
jp
movl
cmpb
divl
mov
sti
xor
push
push
sbb
jne
xlat
fsubrs
fadds
out
enter
fmull
stos
stc
xchg
jp
adc
inc
mov
cmp
jb
mov
shrd
xchg
jne
add
lds
mov
sahf
mov
cmp
mov
and
fisttpll
push
fisttpl
mov
or
adc
imul
add
dec
push
inc
pop
hlt
pop
mov
bound
js
or
ret
jae
push
xor
fs
or
out
inc
sbb
icebp
iret
or
sbb
xor
sbb
div
jnp
jae
jge
sets
imul
inc
mov
repnz
jns
cltd
mov
mov
mov
loopne
shl
out
testl
jns
push
sub
xor
cwtl
xchg
dec
lret
orl
int3
lods
jg
sub
scas
cmp
mov
jno
push
es
and
mov
loop
dec
out
or
jae
and
jb
dec
subb
divb
imul
xchg
sub
sbb
push
imull
xchg
mov
arpl
lcall
inc
imul
mov
add
cs
mov
stos
xor
jecxz
ret
sub
loopne
sub
enter
ja
aas
movsb
inc
ja
cmp
enter
mov
or
sbb
pop
stc
addb
jmp
xor
loopne
stos
jne
jae
outsl
jmp
inc
in
test
mov
in
mov
push
roll
or
lret
out
sbb
xchg
in
cmp
pop
addr16
mov
inc
lcall
roll
and
fisubl
mov
adcl
push
add
int3
mov
or
sbb
cli
mov
jge
push
out
ds
mov
or
shlb
mov
ja
adc
and
inc
add
push
loop
sbb
sbb
mov
jle
in
aaa
cmpl
in
out
bound
outsl
ds
push
lods
jns
pop
dec
adc
sbb
dec
pusha
inc
mov
out
mov
jle
mov
or
and
das
mov
jp
outsl
roll
inc
testl
std
jecxz
filds
cmpsl
pop
or
sbb
ja
sub
addb
push
roll
push
lods
in
lcall
adc
ds
lret
sbb
test
in
cld
imul
sub
cs
mov
pop
movsb
xor
jae
sub
lods
imul
push
xchg
add
and
cmp
xchg
sarl
iret
aas
inc
dec
mov
sbb
addl
repz
stos
jbe
in
sbb
out
jns
popa
je
pop
aam
rcrl
inc
sub
bound
jns
filds
inc
cmpsb
add
mov
cmpsb
ret
mov
jns
mov
pop
scas
mov
mov
xchg
insl
adc
out
add
push
incb
xchg
jle
popf
fsubl
test
xchg
push
mov
jns
jnp
lret
and
sub
in
fimuls
gs
and
filds
sub
pop
push
sbb
addb
out
add
movl
clc
cmp
les
cmp
shlb
mov
inc
scas
push
repz
add
jp
leave
mov
ret
call
xchg
cmp
int
imul
data16
mulps
iret
or
fbstp
or
insb
xchg
mov
insb
inc
dec
in
cmp
sbb
mov
or
pop
push
cli
nop
pop
mov
aad
daa
mov
push
jecxz
xchg
xchg
jp
std
push
pop
test
enter
jae
adc
sub
jnp
insl
sarb
fbstp
popf
dec
outsl
push
psraw
sbb
mov
mov
push
jns
mov
dec
jns
out
fs
fstps
cmp
jmp
jnp
mov
shl
lds
xchg
hlt
scas
int
adc
outsl
inc
stc
dec
out
dec
clc
pop
push
repz
aam
adc
or
mov
andb
mov
jae
adc
push
add
pop
dec
scas
inc
adc
inc
sub
pop
push
std
inc
out
push
pop
mov
jecxz
das
sarb
mov
jge
fcompl
xor
mov
fmull
push
pop
jle
sbb
ds
in
lock
mov
xor
sub
fimull
rolb
sbbl
and
inc
testl
pop
adc
rcrl
out
jnp
lock
add
decb
mov
sbb
or
sub
je
xor
sbb
shll
xor
push
cli
or
cmp
shll
dec
jb
mov
sbb
sub
ja
adc
out
sarb
xchg
out
mov
flds
xchg
incl
jecxz
aam
popf
pop
sbb
in
pop
and
push
cmc
dec
add
push
iret
pop
in
add
and
iret
clc
stos
mov
shll
lahf
and
mov
aaa
gs
or
or
in
xchg
mov
adc
dec
inc
fcomps
mov
sbbl
repnz
xor
mov
push
mov
psubusw
push
sbb
iret
outsb
ds
insl
push
popf
pop
in
push
int
xor
push
out
push
cmpsb
and
clc
out
scas
cmc
outsb
xchg
inc
jb
push
or
xchg
pop
mov
sub
or
jmp
cli
cli
mov
rcrl
jb
sub
push
ret
dec
pop
mov
push
mov
stc
in
jno
xchg
xor
cmp
aaa
stos
lahf
jne
pop
lret
xchg
pop
or
scas
adc
push
lahf
pop
cmp
iret
data16
fnsave
mov
push
in
inc
mov
stc
cld
fwait
sub
pop
xchg
pop
fcomip
or
xor
dec
dec
inc
fbstp
and
mov
stos
mov
aad
loope
cmpsb
je
lds
jle
fdivl
dec
adc
repz
cmp
aad
clc
pop
mov
sbb
lods
std
mov
dec
subl
xorb
sub
push
fwait
jmp
das
and
inc
cmp
notl
adc
adc
inc
nop
mov
push
out
lds
mov
sbb
adc
lcall
fstpl
dec
xchg
ret
addr16
movsb
imulb
sbb
mov
fcmovnu
ja
and
iret
jns
adc
inc
sub
cmpsb
mov
or
mov
aam
loope
add
dec
sahf
ret
js
push
lahf
xor
mov
mov
orl
mov
arpl
cmp
jb
in
sub
or
aaa
mov
test
cli
or
xchg
and
and
jmp
pop
pop
pushf
push
data16
xchg
lea
in
jno
cwtl
in
inc
lods
sbb
and
mov
adc
xor
push
dec
fcoml
scas
xor
inc
popa
into
test
scas
jno
adc
cmp
fidivs
pop
inc
cld
pop
cmpsb
sbb
cmp
sbb
scas
mov
out
clc
stos
js
jae
and
add
in
xor
push
mov
and
fisttpl
jne
outsb
and
and
push
dec
cwtl
shrl
test
dec
add
js
outsb
les
mov
jmp
mov
mov
mov
add
repz
mov
sub
sbb
scas
data16
xlat
or
fmull
enter
inc
push
jbe
shlb
aaa
or
in
lock
enter
cmp
testb
aaa
lcall
push
add
inc
loope
rolb
call
lahf
rcr
cmpsb
shlb
or
ffree
push
cmp
lea
icebp
mov
jno
dec
lcall
stos
lahf
xchg
jnp
jp
ja
pop
inc
inc
add
push
fwait
out
push
std
insl
mov
call
adc
fstpl
in
out
into
cmpsl
sbb
ret
mov
sub
aam
mov
je
aam
in
or
inc
subb
sub
nop
and
mov
dec
lahf
inc
mov
cli
cs
gs
in
lahf
dec
xchg
mov
pop
mov
jg
pminub
cmp
scas
jg
insb
enter
sub
mov
mov
mov
push
popl
cli
and
adc
sub
mov
add
dec
out
push
out
cwtl
mov
jns
clc
adc
imul
dec
in
xchg
popa
sub
xchg
repz
stc
sbb
dec
pop
out
cwtl
mov
out
jbe
xor
jne
mov
in
pop
cmp
sarb
cmp
dec
imul
xchg
cmpsl
enter
stos
or
icebp
and
aaa
arpl
xor
lods
jecxz
notl
das
test
jg
dec
mov
scas
lods
pop
xor
addl
pop
jg
cmp
lods
xor
lock
in
jnp
lahf
int3
inc
pop
add
fidivrs
rorb
jle
mov
mov
cwtl
mov
inc
pop
inc
test
sub
ss
cmc
mov
xchg
mov
xor
adc
lcall
mov
daa
iret
fcomps
push
xorb
cmp
cmp
loopne
or
aaa
stos
cmp
ds
add
pop
mov
insl
or
or
loope
add
push
adc
jae
mov
fwait
shrl
fwait
bndldx
rorb
mov
xchg
or
mov
mov
add
pop
fld
fimuls
mov
ficoml
push
lock
and
and
pop
push
loope
ret
clc
repz
add
testl
inc
push
dec
cli
in
mov
cli
add
mov
mov
mov
lock
add
jnp
movsl
mov
sbb
dec
sbb
mov
leave
pop
xor
jae
mov
sub
fwait
int3
mov
fs
pop
mov
pop
pop
inc
inc
xor
adc
sti
xor
iret
outsb
ss
stos
xor
mov
je
jnp
adc
dec
and
inc
xchg
xor
scas
xchg
add
loopne
jae
loopne
jg
jmp
aad
stc
movsl
pop
cmp
mov
push
fwait
xor
adc
push
sub
test
mov
nop
mov
daa
iret
leave
fsubrs
cltd
cmp
adc
mov
mov
addr16
int3
xchg
add
sbb
mov
adc
jmp
addr16
and
cltd
aam
mov
das
cmpsl
pop
call
data16
push
mov
es
mov
xor
icebp
test
xchg
cmp
adc
in
or
mov
fwait
iret
loop
adc
mov
xchg
ret
fwait
repnz
sahf
imul
jg
gs
out
cmpsl
lods
testl
addb
mov
mov
insl
cld
and
fsts
mov
sub
adc
sbb
int
repnz
cwtl
sub
or
push
scas
ss
mov
fiadds
cmpsl
test
aam
icebp
mov
repz
incl
pop
lea
lock
and
fisttpll
dec
xor
mov
inc
mov
push
jg
mov
inc
loopne
arpl
and
out
les
fcoml
jge
adc
cmp
mov
adc
test
sarb
mov
test
pop
imul
mov
leave
inc
push
pop
pop
push
pop
cmc
stc
xlat
rclb
test
mov
clc
inc
mov
push
hlt
into
jecxz
inc
mov
int
sub
mov
and
hlt
aad
je
pop
and
loope
out
push
popa
out
into
fsubrs
pop
out
cmp
outsb
adc
adc
sub
pop
dec
cmp
pop
xor
fildl
lds
fisttpl
fadd
cmp
jle
inc
mov
mov
xchg
pop
cwtl
xchg
cmp
popf
test
push
popa
xchg
xchg
inc
lods
cwtl
aaa
mov
enter
sarl
xchg
aaa
insb
xchg
rorb
aas
mov
mov
rorb
mov
test
stc
push
pop
xchg
jb
and
jo
jl
adc
fiaddl
or
pop
outsb
jmp
out
jle
cltd
adc
cmp
xchg
xchg
rolb
xchg
iret
shlb
jns
cmpsl
fsubrl
pusha
loop
imul
loopne
ljmp
jns
xchg
mov
xchg
adcl
jns
push
pop
inc
sbb
xorb
push
fildll
push
ja
push
lods
mov
xor
add
mov
mov
jnp
pop
imul
call
push
loop
and
mov
test
mov
sub
mov
adc
push
mov
lret
test
dec
push
mov
mov
mov
xchg
outsl
rclb
mov
loopne
mov
rcll
loop
pop
pop
pop
add
mov
fwait
pop
mov
sub
dec
dec
call
mov
ja
in
daa
adc
loope
scas
aas
mov
sub
ja
or
cmpsl
imul
and
repnz
xchg
cwtl
xlat
in
call
fdivrp
pop
rorb
lcall
test
inc
ss
frstor
int3
sbb
ret
stos
mov
out
jbe
jle
nop
sbb
jo
aaa
mov
jg
js
xchg
jno
mov
sub
call
mov
and
inc
xor
testl
dec
xchg
shl
cmc
jmp
inc
sbb
inc
xchg
or
daa
cmp
jecxz
lahf
pop
cmp
sub
out
aas
and
lcall
sub
push
pop
inc
mov
inc
out
xchg
xor
call
cmp
movsl
mov
dec
inc
pcmpeqb
daa
mov
cmc
psrlw
push
fistl
adc
repz
lahf
movsl
sub
or
int
jmp
stos
ss
jp
jp
lcall
cmp
push
mov
or
pop
push
fildl
jns
mov
mov
cmp
insl
mov
ficomps
test
cmp
rcrb
adc
mov
mov
stos
push
dec
mov
jecxz
sub
pop
repz
add
mov
cmp
mov
shr
sub
and
mov
loopne
push
cltd
pushf
insb
test
jp
sti
inc
jo
in
lods
pushf
cmp
push
in
je
lcall
lds
xor
jmp
pop
test
jp
inc
cmp
in
cmp
nop
outsb
jp
mov
and
jae
lods
aad
push
out
xor
aas
cmp
lods
sbb
mov
ficoml
popa
dec
xor
sub
or
flds
pop
sbb
jp
test
imul
aam
xlat
sbb
add
mov
pop
inc
fdivrl
xor
push
repnz
mov
rcl
mov
or
fcoms
movsb
mov
push
mov
adc
fwait
iret
icebp
jle
xor
add
push
das
enter
pop
push
pop
lret
cmp
or
fldt
inc
int3
xchg
cmp
sbb
lea
stos
mov
cld
adc
addr16
sarb
cmp
dec
xchg
or
arpl
jecxz
mov
fcom
sbb
ds
int
sub
ds
test
test
outsl
jecxz
pop
and
fists
idivb
cmp
xlat
cmp
sub
ja
pop
xchg
insl
mov
rorb
push
imul
movb
lcall
lret
mov
mov
xchg
jns
sbb
loope
sahf
jnp
pop
xchg
and
lahf
aam
jle
data16
icebp
inc
pop
rorl
push
movsl
pop
je
out
idivb
dec
dec
pop
cs
ret
incl
int3
and
rcrl
ret
cmp
pop
lahf
add
add
pop
shrb
mov
mov
mov
addr16
rolb
icebp
push
and
cmp
inc
cmpsl
call
and
aas
push
idivb
adc
cwtl
jbe
inc
call
push
mov
insl
adc
lods
ret
or
andb
mov
popf
lret
aam
xchg
scas
clc
jmp
cmp
xchg
cmp
mov
bound
mov
pushf
mov
sub
xchg
xchg
push
push
mov
pop
mov
push
leave
in
xchg
sub
cs
pop
inc
insb
mov
call
sbb
stc
scas
mov
mov
cmpsb
jno
out
data16
mov
lds
xchg
insl
popf
lret
add
gs
adc
mov
cmpsl
add
pop
push
test
mov
xor
inc
lcall
fdivs
push
mov
mov
call
iret
add
ret
jp
and
in
fisubs
sbb
loope
loopne
ficompl
mov
push
sbb
inc
xor
repz
cmpsb
mov
jns
xchg
loopne
mov
xchg
out
and
scas
imul
sarb
push
sar
inc
inc
push
and
push
in
je
push
pop
mov
pop
mov
xor
xchg
cltd
iret
adc
inc
mov
push
hlt
sub
mov
xor
pusha
lock
jo
mov
lds
ja
jl
ljmp
flds
das
pop
stos
pop
flds
ret
xchg
in
popa
ffree
insb
cltd
xchg
adc
inc
pop
push
shrl
add
stos
loop
movb
xor
xor
pop
out
jo
mov
sub
adc
pop
bnd
mov
mov
in
fildll
out
mov
scas
pop
mov
dec
sub
in
sbb
cltd
outsl
movl
mov
lods
fdivrl
enter
xchg
mov
pop
push
sub
pop
sub
aas
sti
lods
clc
jnp
cld
sub
lret
popf
mov
xlat
dec
cltd
jge
in
repz
xchg
ret
test
shlb
arpl
jle
push
and
fwait
jge
in
clc
or
adc
popa
mov
jbe
mov
ret
inc
leave
ret
adc
out
clc
test
das
enter
push
cmp
rcrl
ret
in
cmpsb
xorb
call
sbb
scas
xor
mov
loop
jae
out
xlat
cmp
xor
out
ret
mov
cmp
fidivrs
push
sub
jo
fwait
nop
test
lods
nop
push
stos
pop
adc
xchg
repnz
dec
fwait
ret
nop
inc
frstor
cs
lds
lret
jnp
int
sbb
mov
xor
pop
fdivr
mov
adc
mov
xchg
lods
mov
or
add
psrlw
xchg
pusha
lea
out
sti
xorl
lea
out
mov
dec
stos
out
adc
adc
xor
inc
xor
lahf
rcll
push
sub
xorl
shlb
loopne
inc
mov
popf
movsl
arpl
pushf
add
inc
sti
or
ret
inc
mov
push
fiadds
mov
outsb
and
dec
inc
pop
cwtl
mov
test
adc
scas
jne
mov
scas
clc
or
sub
mov
jbe
popf
dec
int3
jnp
lcall
pop
lcall
sbb
out
es
std
out
lahf
sbb
inc
adc
sbb
in
mov
push
add
pop
mov
rcl
fildl
inc
mov
lods
pop
ja
mov
push
push
add
xorl
xchg
xchg
clc
jae
pop
loopne
ljmp
iret
test
repnz
or
std
mov
arpl
and
outsb
push
or
sub
stos
ss
xchg
inc
loope
lods
mov
decb
scas
stos
dec
data16
mov
out
lods
mov
and
nop
scas
scas
enter
repz
push
adcb
sahf
push
nop
mov
xchg
sbb
je
in
cmp
or
into
in
test
sub
adc
add
or
popf
clc
mov
and
jp
or
pop
in
incb
je
aam
jne
scas
xchg
les
adc
movsl
lds
pusha
es
loope
sti
jle
aam
adc
out
add
xor
mov
fstl
xchg
in
imul
cwtl
push
or
pop
xor
ss
test
inc
add
xor
ror
cmp
mov
or
aam
ljmp
mov
jb
adc
push
inc
lcall
or
sub
dec
bound
leave
icebp
xchg
inc
fistpll
xchg
mov
lea
loope
clc
lcall
ret
fldenv
mov
insl
push
hlt
mov
test
sti
or
ret
dec
sub
xor
jle
xchg
std
out
sbb
cli
xor
out
popa
push
or
dec
sti
inc
fsubr
clc
cmc
push
inc
iret
jno
inc
push
and
popf
imul
push
jae
shlb
cmc
shr
pop
cmp
loop
shl
mov
adc
cmpl
test
ret
in
iret
shll
dec
movsb
inc
test
push
movntps
xchg
ret
out
xor
repnz
aad
fcoml
mov
fcomip
mov
xor
and
dec
add
jns
and
daa
jne
aam
lcall
imul
pop
inc
sahf
cld
cs
mov
enter
int3
ja
push
test
repz
or
mov
call
adc
jae
pushf
sahf
mov
test
inc
jo
jbe
mov
mov
jmp
push
dec
stos
jge
lods
mov
dec
shl
cmp
inc
cmc
insb
jmp
imul
lds
fnstcw
fsubs
ds
popf
xor
pop
and
pop
ret
js
clc
inc
jne
add
ja
sbb
or
xchg
mov
pop
pop
add
pop
insl
mov
sti
lret
jae
fmuls
stc
jno
testb
xchg
inc
pop
ss
call
outsb
dec
test
cmp
movsb
pop
dec
clc
and
mov
clc
aas
xor
out
call
arpl
ret
mov
or
fstpt
lret
sarb
xchg
cmp
jle
mov
adc
push
fwait
jb
movl
add
data16
enter
dec
es
add
sub
addl
repz
mov
insl
fcomps
lcall
mov
xor
mov
mov
scas
sub
mov
and
push
invd
jl
and
fnstsw
add
sbb
mov
dec
fbstp
inc
lret
sub
mov
movsb
or
push
adc
or
xor
movaps
inc
clc
sbb
xor
sbb
lcall
xchg
xchg
daa
das
mov
je
xor
lret
mov
inc
and
or
xchg
jmp
enter
jbe
outsb
jo,pt
cwtl
and
jmp
dec
mov
sti
fidivl
or
mov
enter
push
sbb
fistl
jb
mov
mov
push
pop
push
arpl
rcrl
imul
call
ljmp
shr
cld
ss
popf
push
stc
clc
mov
xor
fnstsw
test
dec
inc
sbb
jmp
mov
out
push
ret
in
cli
mov
fdivrl
test
fstpt
rcll
jge
xor
jge
adc
inc
push
outsb
push
bound
in
pusha
rcrb
scas
pop
jns
sbb
pop
jmp
sahf
fmulp
mov
sbb
push
mov
ds
inc
shll
popa
fcompl
pop
jmp
or
sub
cmpsl
orb
icebp
sub
cmpsl
xchg
pop
lret
or
out
pop
repz
or
xchg
pop
xchg
loopne
ret
or
pop
sub
pop
insb
mov
push
mulb
cmp
inc
cmp
test
pop
mov
inc
mov
xchg
jae
adc
pop
out
xor
mov
or
cltd
jae
xorb
lea
pushf
mov
sub
dec
mov
repz
push
pcmpgtw
and
push
popa
sbb
out
inc
sbb
inc
ffree
repz
push
cmpsb
orb
nop
adc
dec
or
or
push
pop
out
jle
or
arpl
das
sahf
and
xchg
test
inc
xchg
dec
mov
int
sbbb
or
loopne
mov
out
clc
xchg
jle
xchg
cmpsl
xchg
xchg
ja
lods
or
imul
adc
adc
out
stos
cmp
cwtl
fisttpl
gs
mov
repz
sbb
out
push
cltd
sbb
jecxz
xor
shlb
cmpsl
xchg
in
lods
pop
sbb
xchg
xchg
mov
mov
add
cmp
sub
jecxz
dec
mov
sti
mov
jnp
cmpsb
and
subl
adc
jle
push
shrb
insb
ret
mov
loopne
sbb
mov
jg
sti
daa
test
or
push
insl
adc
jp
popf
stos
into
stos
jecxz
fadd
xorb
movsb
dec
push
cmp
jns
stos
xchg
lock
mov
sbb
enter
push
adc
jecxz
pop
or
sub
push
dec
push
mov
jmp
arpl
pusha
in
je
inc
jns
outsb
shll
push
cmp
or
mov
int3
jge
push
mov
xor
sbb
lcall
add
sti
pop
mov
insb
and
sbb
jns
jno
inc
inc
out
aad
adc
push
jmp
jb
mov
cmp
mov
loop
inc
adc
xchg
pop
pop
add
mov
xchg
push
popf
mov
mov
call
cmpsl
mov
and
jmp
out
scas
clc
movsb
jbe
dec
adc
dec
dec
icebp
mov
or
aas
lcall
imul
ret
pop
jg
outsb
enter
cmp
cmpsl
dec
sbb
and
mov
cld
cltd
push
cli
leave
cmpsb
mov
ffreep
inc
cmc
bound
cld
dec
sub
sbbl
std
and
xor
fsts
imul
scas
mov
xor
push
arpl
orb
or
and
mov
dec
loopne
push
push
mov
icebp
insl
or
cmp
or
push
fistps
pushf
mov
ret
jp
mov
gs
leave
xor
inc
lock
into
fisubrs
mov
repnz
rcll
and
push
incb
xchg
test
xchg
lock
dec
scas
popf
sub
pop
leave
fimull
xchg
cltd
fdivrl
mov
mov
mov
add
xchg
add
mov
mov
outsb
xlat
mov
jnp
add
cmp
and
or
or
cmp
push
sbb
dec
xor
mov
adc
sbb
xchg
inc
test
sbb
xorl
outsb
cwtl
sub
pop
add
dec
mov
jl
ds
repnz
xchg
aaa
or
xchg
mov
adc
lods
sbb
enter
leave
divb
loopne
or
imul
push
cmp
pushf
vhsubpd
rcrb
ret
fidivrs
mov
xchg
mov
fcmovne
xchg
mov
cld
pop
xor
xor
jno
out
repz
or
sbb
addr16
inc
add
xor
push
das
mov
imul
adc
mov
mov
scas
out
rcll
outsb
stos
xor
push
pop
fbstp
mov
punpckhbw
sar
jno
or
icebp
push
push
cltd
insb
aaa
dec
mov
in
je
xor
or
mov
jmp
push
shll
push
xlat
and
dec
or
mov
lea
sbb
andl
push
xchg
iret
push
in
xchg
xor
push
mov
push
shlb
fucom
leave
mov
jo
adc
or
ret
rcr
movl
jns
mov
or
dec
cmpsl
lret
pop
loopne
js
cld
xchg
mov
mov
and
mov
cmpsb
je
fistl
cwtl
inc
fs
mov
stos
cwtl
inc
scas
ja
outsb
mov
fnstcw
out
sub
pop
jl
sub
mov
xor
sub
inc
int
or
xor
fsub
dec
inc
xchg
into
das
repnz
and
mov
pop
mov
jbe
icebp
decb
nop
xchg
mov
fwait
insl
dec
movsb
stc
lret
and
push
aam
inc
inc
loope
lcall
loope
bound
mov
addr16
test
sahf
xor
and
loope
test
jne
icebp
or
sahf
and
daa
push
pusha
testb
push
fwait
aad
loopne
xlat
dec
adc
lds
jp
pop
iret
or
pop
cmp
or
fneni(8087
xbegin
xchg
xor
cmp
xchg
cmp
pop
cmp
xor
jno
mov
add
inc
out
add
fwait
insl
inc
add
xchg
dec
cmc
das
mov
xchg
push
mov
cmpsb
cs
xor
int
fadds
insl
mov
pop
lods
orl
inc
cmp
cmp
mov
push
clc
and
fsin
push
push
mov
dec
dec
dec
mov
jbe
jns
imul
xor
out
lods
js
adc
fstpt
sarl
cmc
sti
hlt
outsb
dec
cmp
jecxz
sbb
lods
push
fxam
push
out
int3
les
cmpsl
add
mov
xor
decb
das
imul
js
flds
pop
scas
adc
or
push
dec
popf
roll
jp
push
or
lea
scas
divps
xchg
lea
daa
mov
std
je
xchg
and
out
sahf
xchg
jp
fldln2
lds
fcom
jb
aaa
and
rcrb
int
into
cmp
adc
and
jne
jp
cld
jmp
adc
out
sahf
add
rorl
cmp
rclb
fists
insl
push
fcompl
adc
pop
pop
dec
cltd
inc
pop
xchg
lds
in
xlat
popf
cmp
fs
das
leave
sub
lahf
and
jg
sti
sub
add
daa
iret
push
cmp
mov
fs
adc
dec
sub
ja
aaa
cmp
jne
xchg
or
mov
int3
pop
inc
or
in
push
sub
or
aam
jb
ficomps
mov
pop
ret
fbld
mov
je
adc
pop
in
mov
adc
jg
or
cld
daa
es
push
push
lret
sbb
aam
cld
add
and
adc
cmpsb
nop
lret
stos
push
mov
push
dec
adc
out
add
dec
mov
pop
lock
rolb
loope
push
adcb
popa
out
or
lret
jnp
js
icebp
xor
insb
rcrb
cmpsb
cltd
inc
js
sti
movsl
popf
adc
int
pushf
enter
mov
xlat
xorb
cmp
int3
cmc
loop
mov
lret
ret
std
lods
or
pushf
push
test
sub
fistl
and
fld
jg
cs
mov
push
addr16
rolb
add
push
adc
mov
mov
test
arpl
es
fldl
xchg
jne
fmull
daa
mov
outsl
add
add
pushf
and
test
jne
fwait
jnp
mov
loopne
loope
inc
pop
push
or
mov
mov
xor
mov
iret
mov
mov
pop
fdivs
fcoml
rcll
xorl
movsb
mov
and
mov
jl
ffreep
hlt
cmpl
lods
pop
jl
insb
lods
jo
mov
iret
addr16
out
jge
mov
mov
ljmp
mov
sbb
sbb
clc
mov
or
arpl
inc
imul
adc
push
dec
inc
xor
sti
movsl
popf
add
cld
outsb
lret
pop
fsub
aaa
imul
cwtl
cmp
stos
ja
inc
int
dec
pop
stos
cmpsl
and
test
aaa
lods
and
out
nop
idiv
jg
push
xchg
adc
imul
in
or
fdivl
stos
addr16
popa
rcl
loop
or
cmp
lods
add
in
stos
rcrl
jb
icebp
fistps
or
repnz
mov
in
loop
aam
sti
fimuls
mov
scas
hlt
jp
inc
icebp
dec
test
push
bound
pop
std
push
push
xchg
xchg
mov
hlt
divl
or
or
jno
es
testb
imul
ja
jbe
cmc
sbb
or
int3
pop
iret
pop
push
or
into
cmp
adc
sar
inc
mov
fdivrs
jge
xor
sti
fdivrp
daa
in
push
out
fldcw
cmpsl
pop
pop
jmp
jns
jne
out
jb
fucomi
xchg
sub
imul
jo
test
mov
inc
lock
sub
sbb
xor
out
push
imul
lret
divps
pop
cwtl
les
push
shl
sbb
inc
adc
repz
into
dec
lcall
pop
outsb
inc
mov
and
out
and
cli
xor
jnp
dec
or
les
mov
cmp
adc
mov
push
sti
lahf
mov
jle
lods
scas
push
aam
xchg
shrb
xchg
jne
sbb
xor
or
jno
pop
mov
pop
dec
or
pushf
mov
mov
inc
popf
cld
fwait
ss
fsubl
iret
mov
jno
push
pop
mov
das
or
divb
adc
pop
sub
mov
ffree
mov
sbb
clc
dec
jmp
or
inc
cmpsb
shr
fmull
ss
mul
sbb
das
push
mov
push
cld
or
ret
jmp
mov
pop
pusha
sub
aaa
fists
daa
rorb
jae
xor
test
dec
and
sub
dec
dec
repz
movl
cmp
pop
mov
or
daa
add
xorb
shl
cmc
popa
mov
and
clc
mov
sarl
jbe
in
loopne
jb
inc
cltd
lahf
lods
cmpsl
outsb
inc
ficomps
loope
sub
sahf
jae
ret
cld
loope
into
mov
dec
push
inc
or
jno
sahf
lds
popf
jecxz
scas
movsl
mov
add
sub
dec
aas
addl
cltd
lock
clc
leave
inc
inc
aam
jbe
mov
xchg
inc
sub
mov
loope
or
nopl
daa
xorb
in
push
inc
adc
data16
and
sbb
lds
push
daa
push
mov
push
ja
mov
lock
mov
aam
pop
mov
shr
sub
pop
int
shll
cld
jne
jbe
push
lret
ljmp
lods
les
cmpl
mov
mov
sar
pop
dec
ljmp
inc
mov
xchg
push
jbe
fildl
mov
pop
mov
push
inc
das
xor
dec
adc
int
adc
faddl
mov
mov
leave
call
mov
lea
sbb
push
inc
call
mov
cwtl
jo,pn
xchg
sbb
and
test
loopne
ss
ror
cmp
mov
xchg
push
into
addr16
test
cmc
fistps
enter
sahf
std
push
pmulhuw
sbb
les
data16
xchg
inc
test
sbb
inc
pop
btr
std
mov
pop
mov
out
or
push
cmp
mov
push
mov
mov
cmpb
jge
test
ret
xchg
mov
jle
out
imul
push
add
sbb
inc
fimull
cmp
hlt
iret
iret
push
jmp
push
xchg
push
dec
xchg
sub
push
mov
jb
pusha
cmp
pop
jmp
inc
inc
pop
cltd
push
cmp
or
into
jl
adc
out
popl
lahf
xchg
test
cltd
inc
pop
sbb
ficompl
add
cmc
mov
arpl
push
xchg
in
popa
jne
jae
lret
repz
mov
xchg
in
leave
add
test
ret
mov
call
scas
mov
mov
jg
pop
cwtl
dec
fisttpll
mov
adc
mov
lods
push
cwtl
and
loop
xchg
mov
add
add
pop
xor
jbe
enter
loop
dec
mov
sbb
inc
xchg
outsl
les
push
std
jb
and
and
pusha
lcall
push
mov
push
fsubrl
xorb
cmp
loopne
sbb
jecxz
leave
add
pop
pop
in
rorl
xchg
inc
repz
mov
and
sub
js
sbb
jp
sahf
mov
push
fstl
inc
inc
add
mov
push
xchg
jbe
lock
pop
xchg
in
inc
aad
test
mov
or
xor
fwait
push
in
mov
dec
xchg
xchg
push
add
mov
daa
fsts
out
sbbb
and
push
push
mov
sub
pop
pop
faddl
movsb
pop
inc
shrl
repnz
dec
int
sub
add
push
mov
out
shlb
aaa
pop
push
outsb
andl
inc
lcall
fisttpl
popa
pmaxsw
add
aas
out
lret
imul
outsl
arpl
gs
loopne
stos
outsl
mov
inc
ja
pushf
addl
push
inc
in
rcrb
mov
movsb
or
enter
sbb
fldcw
jle
dec
into
add
jb
pop
or
mulb
and
call
inc
jb
in
loop
jo
mov
pop
pop
mov
movsl
test
pop
sbb
adc
adc
jb
fistpll
in
sahf
jns
cmp
mov
data16
jbe
dec
sahf
imul
stc
push
insl
mov
dec
insl
pop
or
xchg
lock
xchg
add
bound
push
push
mov
mov
cmp
repz
test
divl
stos
test
pop
aas
sbb
and
shl
shlb
mov
pop
xor
test
stos
mov
ja
adc
es
mov
add
fwait
push
mov
add
or
cmp
idivl
loopne
lcall
jge
scas
cmc
outsb
or
call
cmp
lahf
enter
mov
jb
jp
mov
and
mov
ds
dec
cltd
ja
jbe
mov
cs
mov
dec
mov
lods
jbe
xor
lret
inc
mov
jnp
mov
pop
inc
pop
es
or
push
cmp
xor
mov
subl
aas
cltd
pop
jae
xor
dec
xchg
inc
push
mov
test
fisubl
int
arpl
xlat
repnz
xor
jecxz
fs
fwait
aam
mov
mov
add
in
push
and
dec
rcll
pop
cmp
inc
mov
jp
mov
shr
pop
fldenv
push
dec
es
xor
cmp
int
inc
xchg
mov
mov
movsl
sarl
shlb
pop
cs
xchg
shll
jnp
dec
inc
mov
insb
dec
ljmp
popf
cmp
add
fidivs
sbb
stos
xchg
repz
mov
lahf
jne
mov
fs
mov
lret
scas
and
push
dec
add
xchg
push
or
lods
and
loope
or
mov
repnz
fstpt
or
xchg
out
cmp
push
and
pop
adc
inc
jmp
jnp
inc
sub
mov
or
icebp
jnp
jae
sub
cmpsb
ss
mov
push
pop
test
jl
jo
insb
mov
push
not
or
xchg
xorl
out
jmp
inc
inc
mov
pop
ficoml
aas
lds
movsl
das
ret
jl
xor
out
pop
lahf
inc
enter
or
imull
pop
add
xlat
mov
push
out
popl
jle
inc
pop
dec
mov
mov
cmpb
cmp
push
rcrl
jo
sahf
push
iret
and
adcb
js
add
inc
xchg
mov
subl
inc
xor
xchg
cmpsl
jb
dec
in
adc
mov
or
push
push
in
push
mov
jae
inc
fsub
push
mov
or
cltd
sahf
rcl
lock
mov
pop
adc
pop
clc
mull
adc
jg
and
adc
pop
call
jbe
inc
xor
sub
lea
sub
push
ror
rcr
enter
imul
mov
or
les
mov
arpl
shrl
subl
push
push
inc
mov
lock
lcall
dec
jns
mov
pop
xor
ret
lahf
jne
iret
scas
ds
in
popa
into
mov
cmc
lret
mov
test
aas
dec
dec
fcompl
stos
fdiv
popa
inc
mov
sub
stos
jns
int
fwait
add
sbb
sti
loop
jnp
inc
add
adc
mov
sub
jb
addr16
xchg
repnz
dec
je
cmovp
out
cmp
rorb
outsb
pop
pop
int3
pop
data16
pop
xor
mov
inc
ret
mov
lahf
repz
pop
sbb
sub
repz
testl
movsl
xchg
pusha
mov
cmp
xchg
out
cmp
cltd
pushf
mov
imul
sbb
sub
dec
outsl
fcomps
cmp
testl
rorb
sub
sub
lods
and
insb
jnp
inc
mov
add
lret
in
daa
pushl
xor
dec
lea
movsl
out
fwait
xor
mov
mov
and
aaa
xorb
clc
jo
push
setae
daa
jne
xchg
pop
out
jp
jbe
sbb
icebp
outsb
sbb
pop
sbb
loop
repz
pushl
cmp
lds
xor
or
mov
lea
add
lds
and
insb
dec
inc
lods
adc
pusha
ds
sub
fs
mov
adc
fsubrs
ss
fnstcw
push
xchg
pop
sub
jo
subl
inc
ret
cwtl
lret
xchg
add
adc
sbb
mov
shll
jbe
add
negl
xchg
es
or
dec
ljmp
adc
pop
stos
in
xchg
push
mov
fwait
xor
sbb
dec
repnz
jb
push
insl
nop
dec
pop
push
imul
daa
sahf
adc
daa
mov
inc
pop
xor
mov
shrb
xor
mov
test
inc
mov
push
movsb
pop
ja
sbb
push
jge
outsl
and
inc
aam
stos
mov
dec
or
mov
adc
inc
lea
dec
mov
stos
loope
scas
xor
into
int3
clc
enter
das
mov
and
test
fcoms
sbb
mov
push
cmpsl
mov
insb
sti
cmpsl
inc
or
jns
xor
repz
jbe
pop
or
inc
or
mov
push
mov
push
mov
or
pop
std
adc
sub
jae
jecxz,pn
cmp
pop
and
packuswb
mov
test
dec
adc
mov
stc
inc
inc
mov
sbb
scas
add
jo
add
xchg
pop
xchg
mov
out
mov
pop
bound
leave
cmp
mov
push
std
adc
xor
jp
test
inc
cmpsl
pop
test
pop
sub
jge
adc
rcrb
xchg
adc
sbb
xchg
or
pop
cli
sbb
lcall
lds
scas
mov
jae
and
push
leave
sarl
xor
divl
shr
sbb
xchg
in
mov
cli
aam
pop
adc
add
mov
and
cmpsb
shll
xor
mov
test
adc
lret
addl
push
jmp
hlt
arpl
sbb
flds
and
mov
fwait
sbb
negl
mov
imul
into
push
in
nop
inc
or
mull
lcall
ret
hlt
push
inc
out
or
rcll
or
andb
pop
fcmovnu
mov
fdivl
ja
cmc
push
adc
jmp
ja
aaa
hlt
sub
add
mov
leave
xor
lods
xor
xlat
mov
pop
ja
adc
cmpsl
sahf
push
mov
xor
inc
pop
mov
fdivrl
sbb
out
pushf
push
adc
and
test
xchg
roll
xchg
sbb
jnp
into
lcall
or
or
push
mov
sub
pop
out
js
stos
cli
pop
push
in
push
sbb
sbb
sbb
loop
sub
or
add
jmp
jno
sub
pop
or
cltd
in
std
cs
and
test
arpl
xchg
mov
sbb
xchg
data16
adc
sub
xor
ficomps
lcall
add
pop
inc
int
es
sub
and
lahf
subb
xchg
ret
push
add
fists
and
xchg
dec
inc
scas
insl
push
cmp
push
pop
push
mov
push
xchg
lret
lahf
xor
pop
jnp
int
adc
ja
outsl
and
pop
out
adcl
pop
dec
lret
add
sub
cmp
stos
mov
lods
push
fucom
pop
jo
notb
lret
daa
dec
cmp
add
xchg
push
pop
insb
mov
jbe
leave
fisttpll
xor
jo
mov
aas
cmp
sahf
cmp
pop
in
fisubrl
test
test
cmp
inc
sbb
orl
aad
inc
mov
test
sbb
sub
idivl
mov
push
xchg
movsl
decl
or
sub
test
sub
adc
out
les
cmp
scas
inc
and
lds
or
js
xchg
fcoms
stos
je
out
cpuid
xor
sbb
lret
mov
cltd
cmpsl
dec
pop
std
popa
mov
inc
negb
dec
and
cli
loopne
xchg
ja
cmpsl
mov
stc
imul
cmp
outsl
out
adc
fcoml
push
pop
rorl
inc
dec
adc
xchg
push
xor
push
daa
add
lret
and
pop
xor
bound
mov
pop
push
fs
andl
or
push
mov
xor
movsl
fcmovbe
or
dec
add
inc
jmp
pop
mov
out
cmpsb
clc
push
cli
push
cmp
pop
or
je
jb
pop
aad
pop
add
xor
test
mov
mov
adc
xchg
sub
sbb
loop
and
ror
cmpsl
xchg
scas
mov
mov
pop
lret
push
leave
aaa
clc
cld
sbb
repnz
inc
inc
icebp
cli
in
jbe
inc
fxch
sub
or
xchg
fldenv
lock
mov
add
cmp
xor
cs
ja
lods
adc
in
push
push
pop
ljmp
push
sub
jmp
push
es
pop
aas
mov
mov
lds
sub
scas
dec
fs
pop
es
subl
stos
and
outsb
scas
dec
pop
mov
cmpsb
stos
bound
jmp
nop
xchg
push
popf
mov
jns
jno
sbb
arpl
jl
popa
mov
sbb
cmp
pop
push
int
add
xor
sbb
and
clc
xchg
clc
mov
out
mov
xor
lods
inc
xchg
test
add
lcall
dec
sub
pop
scas
pop
fs
lret
scas
sbb
movsl
test
cmc
outsb
pop
out
mov
pop
fwait
jns
push
mov
out
mov
icebp
popf
lea
scas
push
int3
bound
sub
jl
and
inc
addr16
jno
sbb
or
xor
jo
pop
and
jl
cmpsb
sub
int3
stos
stos
sub
push
pop
or
cmp
es
sbb
out
dec
int3
lret
cmpsb
ds
and
push
cmpsb
incb
out
iret
xchg
push
sbb
dec
jg
lret
stos
or
testl
jge
rorl
and
jge
add
outsb
fwait
xor
popf
sub
mov
add
ret
mov
mov
and
cld
stos
jecxz
movsb
adc
scas
xchg
and
arpl
rcrb
sub
mov
lret
dec
test
cmp
push
fld
cwtl
adc
lret
cltd
nop
icebp
out
pushf
test
jp
cmpsl
adc
lock
cmpsl
sbb
repz
xchg
adc
jmp
in
incl
sub
sub
das
popf
mov
rcl
dec
notb
in
loopne
mov
and
cmpsl
gs
push
repz
mov
mov
mov
enter
sbb
test
clc
sub
cmp
inc
aad
mov
cmp
aam
and
ret
std
jbe
mov
jg
push
insb
inc
jecxz
xchg
in
jbe
ds
push
mov
sbb
push
daa
xor
xchg
jns
xchg
add
pop
in
stc
push
cmc
cmp
icebp
mov
mov
xor
xchg
les
jns
pop
out
push
movsl
or
scas
in
sbb
adcb
mov
fs
sub
sbb
sub
push
xchg
std
stos
idiv
repz
iret
mov
sbb
and
sbb
repz
adc
rcrb
cwtl
jb
xor
push
mov
icebp
and
mov
sbb
mov
pop
sahf
pop
pop
jb
mov
cwtl
test
sbb
mov
pop
aam
loope
mov
pop
or
sbb
cwtl
cltd
lret
mov
or
adc
imul
push
or
sub
pop
and
rcrb
fwait
and
push
pop
negl
ja
sub
xchg
add
dec
jl
leave
cmp
push
add
mov
cmpb
inc
push
add
ret
outsl
fidivl
aas
mov
arpl
rolb
push
in
inc
dec
jg
sub
mov
pop
push
pusha
jecxz
cs
inc
sahf
jg
movsb
xor
loopne
push
mov
dec
rolb
xor
test
jecxz
out
xorl
adc
push
outsb
shrb
jnp
sub
push
or
jo
fisubl
ficomps
fwait
push
addr16
lcall
xchg
adc
int
leave
cmp
xchg
add
dec
shll
in
jecxz
dec
std
daa
pop
daa
mov
ss
scas
and
shll
cs
adc
push
das
or
test
xor
sbb
scas
std
xor
js
loopne
lahf
stos
mov
data16
cmp
fs
das
fdivr
mov
jp
les
dec
mov
adc
shlb
mul
pop
add
push
mov
mov
lcall
out
faddl
push
test
xor
in
les
lock
or
mov
add
xor
push
mulb
clc
rolb
pop
xlat
ret
or
jbe
mov
xor
lcall
sbb
sub
jle
xor
test
mov
in
dec
andb
int3
mov
dec
adc
dec
daa
sbb
dec
or
jp
fstps
fisubs
sub
push
outsb
pop
scas
add
and
ljmp
into
dec
xor
lahf
mov
cmpsb
pop
in
call
test
sti
sbb
mull
in
and
push
lret
xlat
xor
mov
sub
xor
inc
stos
je
mov
jge
cltd
hlt
aaa
push
shl
inc
cmc
pushf
in
stos
movsl
xor
ret
fldt
mov
or
dec
push
js
data16
lret
xchg
jge
and
mov
gs
add
test
dec
cltd
mov
insb
aam
fs
sub
pmulhw
lcall
popf
outsb
mov
mov
adc
push
push
js
mov
ljmp
out
stos
imul
data16
rcr
push
mov
lret
mov
pop
leave
clc
rolb
addr16
jmp
push
fwait
cs
inc
pop
push
push
movsl
mov
lcall
mov
or
addl
out
es
movsb
pop
cmp
fidivrl
push
out
dec
pop
push
adc
les
cs
and
sub
roll
hlt
mov
xor
mov
orb
stc
xorl
int3
jnp
idivl
aas
ja
mov
pop
pushf
xor
in
sbb
outsb
insl
jae
and
cli
ljmp
cwtl
push
pop
pushl
add
cwtl
mov
std
pop
cmp
push
inc
pushf
mov
mov
jp
lods
fbstp
lock
aad
and
adc
lods
sub
cmp
fidivs
add
fstl
cmp
sbb
out
lahf
imul
add
push
jno
popf
sbb
mov
cmp
lods
clc
incb
cmpsb
xor
mov
fimuls
fwait
mov
sbb
jne
pop
lods
mov
or
xor
xor
add
mov
xchg
outsb
push
test
add
leave
stc
pop
fstl
add
lods
mov
mov
aas
in
jns
and
xchg
ret
pop
cmp
dec
mov
pop
cltd
dec
xchg
aaa
sbb
pop
mov
arpl
imull
adc
aas
mov
adc
loope
mov
and
fs
jg
fcmove
in
sahf
sbb
lcall
outsl
sbb
cmp
mov
sub
inc
das
jp
lods
ljmp
adc
and
cs
push
and
jne
jecxz
es
icebp
lret
dec
cmp
adc
pushf
mov
or
inc
cmp
xor
jge
cmp
imul
mov
and
cmp
out
lcall
ror
scas
jle
add
mov
inc
fisubrs
out
scas
mov
mov
jmp
aam
test
repnz
rcl
xchg
mov
out
xchg
ror
jb
int3
rorb
sub
je
movsl
mov
xchg
add
xor
jmp
ficoms
insl
add
call
jge
ret
push
jo
adcb
mov
mov
mov
iret
dec
out
shl
adc
xchg
fldt
push
js
mov
lock
cmc
ret
imulb
inc
aas
and
inc
fistps
ljmp
out
lea
pop
icebp
in
inc
les
jno
andb
sbb
scas
movb
outsb
jno
jbe
dec
repz
dec
lret
jg
jp
in
sbb
rclb
test
mov
nop
fs
xor
jno
lahf
push
add
sbb
xchg
or
icebp
jo
dec
addb
rclb
lock
and
jmp
and
pop
lock
cs
sti
jl
mov
push
les
adc
outsb
push
mov
in
loope
int3
stc
or
add
imul
xlat
push
sbb
push
push
cmpsl
mov
cltd
inc
fldenv
loopne
stos
sti
outsb
in
push
negl
outsl
fmul
imul
lods
xchg
jbe
mov
cmp
or
xchg
inc
and
xchg
adc
xor
xorl
lcall
jecxz
push
rorl
add
pop
daa
mov
mov
xchg
fucomip
add
inc
int
data16
cmp
mov
mov
or
mov
sub
fimuls
adc
idiv
fidivrl
ret
xchg
mov
loopne
dec
stos
clc
sub
incb
add
sub
imul
test
push
and
push
and
insb
imul
push
pop
inc
pushf
stos
loope
in
inc
out
stos
loope
in
adc
xorb
or
into
inc
or
nop
add
sub
xchg
cwtl
push
gs
jmp
mov
sbb
push
dec
pusha
mov
mov
out
mov
inc
cmp
scas
mov
and
cmc
lods
addr16
out
outsb
in
andb
out
ss
xor
mov
mov
dec
je
cmpsb
dec
jge
mov
inc
xchg
dec
xlat
fisubl
leave
fimull
pop
dec
pop
push
pop
add
mov
sbb
pop
mov
pop
pop
sub
adc
pop
into
cmp
test
xchg
mov
subb
clc
popa
lcall
sbb
dec
addr16
add
sub
fsubr
mov
cmp
mov
cmp
shrb
aaa
mov
or
jg
ret
xor
jnp
add
adc
inc
outsl
movsl
jb
mov
pop
stos
mov
enter
pop
rolb
popf
jle
dec
xchg
or
and
int3
sti
push
push
inc
or
shll
fcoml
shll
mov
dec
into
mov
cmp
ds
pop
push
out
in
les
jge
mov
push
pop
dec
xchg
pop
and
lock
and
cld
dec
shl
notb
test
test
inc
dec
ss
cmp
mov
jmp
pop
test
pcmpgtw
sarb
shll
or
jne
jnp
mov
dec
cmp
mov
jge
mov
mov
push
divb
ljmp
mov
mov
add
and
pop
clc
mov
imul
negb
jne
sbb
jge
bt
add
cmp
add
imul
loope
and
xor
vandnps
dec
sahf
mov
or
ret
fucomi
leave
push
imul
cmp
cli
in
nop
decl
xchg
sbb
inc
lret
stc
cmpsb
inc
xchg
sbb
scas
movsl
and
inc
mov
loop
in
and
jbe
mov
adc
cmp
dec
out
mov
or
push
sub
pushf
stos
jne
roll
loop
mov
xchg
sub
cli
scas
push
test
outsb
and
arpl
idivl
push
or
das
int3
in
ret
mov
int3
dec
int
dec
scas
xor
jae
jecxz
or
push
stos
sub
sbb
sub
adc
sbb
enter
mov
inc
pop
jmp
hlt
and
push
dec
dec
jno
orb
mov
sub
out
test
sub
in
cmp
xor
mov
pop
mov
cmpsl
mov
popa
jnp
adc
call
adc
test
addr16
xchg
loope
mov
mov
add
lcall
out
stos
sub
or
sbb
cmp
push
mov
jne
aad
jne
and
mov
push
ja
inc
sbb
push
inc
adcb
loop
out
mov
popa
rolb
out
mov
out
stos
imul
cmpsl
inc
jbe
bound
jne
mov
lret
sahf
lret
mov
mov
sti
lret
adc
inc
xor
push
xor
stc
sbb
mov
mov
mov
mov
mov
aaa
push
shrd
pop
es
cmp
stos
jno
adc
cmp
mov
lcall
add
push
sahf
inc
cmpsb
jle
and
dec
sbb
mov
pop
mov
xor
or
and
push
mov
mov
insb
add
push
xchg
mov
sub
flds
inc
jo
insb
push
xchg
sbb
aam
push
cmpsb
push
jns
cs
mov
ret
jge
lret
mov
hlt
stos
xchg
mov
push
add
pop
stos
repnz
pushf
mov
fcoms
inc
call
scas
xor
push
jmp
cmc
fsubrs
mov
movzbl
addb
sbb
inc
add
jge
dec
push
xor
xchg
ret
pop
insb
insl
sbb
daa
push
lret
pop
jbe
nop
pop
in
adc
dec
xor
pop
jo
pusha
testb
gs
jns
insb
xchg
scas
addr16
sbb
add
test
jbe
xchg
les
stos
cmp
scas
jbe
cmp
inc
das
subl
dec
fdivrl
pop
cmp
push
in
sub
pop
aad
xor
mov
sbb
dec
cmpsl
pop
ja
xchg
leave
cmp
jns
stos
jbe
fisubrs
mov
icebp
cld
add
loopne
push
push
jg
mov
pop
sub
aas
add
jns
sbb
xor
and
pop
dec
rcrb
jg
push
addl
inc
das
dec
addb
leave
inc
shlb
dec
hlt
ljmp
daa
mov
mov
pop
loopne
aam
in
test
in
ficompl
push
lret
dec
pop
pop
push
xor
lret
movsl
sti
arpl
and
clc
ret
test
out
data16
stos
js
fimuls
dec
nopl
mov
sahf
lds
out
adc
mov
pop
ds
call
rorb
cmp
dec
ds
mov
cltd
iret
xchg
pop
push
cmp
adc
nop
mov
pop
subb
lock
loopne
out
icebp
cmp
lret
dec
jbe
aam
or
jle
out
in
mov
push
nop
in
inc
or
icebp
cld
lock
ja
push
loopne
jne
sub
mov
jle
popa
cmpsb
idivb
jne
rol
sub
mov
fucomip
das
pop
scas
clc
cmp
ret
je
xchg
iret
outsb
jns
or
xchg
outsb
pop
insb
sbb
cmp
call
lret
and
roll
cld
mov
cmpsl
pop
pushf
or
mov
pop
mov
mov
jl
mov
lods
pop
push
leave
inc
pop
mov
pop
aas
sub
sbbb
and
lret
xor
les
adc
movsl
repz
jle
push
dec
out
nop
dec
inc
inc
sub
mov
imul
fsubrs
inc
dec
inc
stc
stc
cltd
or
mov
fisubrs
cmpsl
stc
jo
jb
sbb
fwait
add
out
mov
jge
and
sarl
mov
pop
mov
inc
add
js
icebp
in
cmp
jp
pop
add
imul
jle
aad
out
xor
mov
lret
ljmp
and
out
or
adc
xor
in
in
sahf
inc
leave
push
push
popf
jg
inc
cmc
mov
int3
jg
std
fisubl
repz
outsb
movsl
mov
jbe
xlat
cmpsb
and
cmp
pop
mov
subb
jns
sub
lock
or
or
test
add
test
scas
push
sbb
mov
in
loopne
sbb
out
sub
and
sub
push
lea
add
ret
mov
adc
es
sub
push
xor
sub
clc
das
push
and
xchg
fists
in
push
add
adc
pop
add
adc
pop
mov
pop
push
mov
xchg
mov
dec
pop
add
lahf
popf
and
mov
xor
fsub
and
push
dec
push
stos
cmp
mov
mov
or
iret
int3
out
fs
xchg
pop
push
sbbb
push
cmp
out
out
adc
pop
mov
pop
out
mov
das
jge
int3
or
xchg
in
loopne
sub
std
and
push
cmp
inc
add
sub
mov
out
pop
dec
dec
and
sub
jno
fldt
repnz
or
shrl
and
ds
dec
test
pusha
inc
dec
pop
dec
push
push
pop
push
xchg
je
iret
cmpsl
pop
sub
lahf
sub
mov
lds
mov
lahf
inc
pop
mov
outsl
adcl
dec
notl
movsl
mov
dec
mov
cmpb
insb
adc
mov
inc
pop
and
jmp
xchg
test
mov
clc
push
xor
adc
mov
fstps
fs
jle
sbb
ja
test
out
daa
and
movl
add
pop
popa
mov
in
popa
test
je
in
or
dec
test
mov
sbb
pop
pop
add
scas
xchg
pop
fisttpll
mov
ljmp
mov
and
mov
cltd
xchg
jmp
aaa
mov
je
dec
and
or
rolb
and
push
add
vandnps
sbbl
cld
and
test
roll
mov
fisttpll
and
dec
mov
mov
adc
xor
das
incb
and
mov
cmc
add
mov
or
inc
sub
mov
shlb
mov
mov
xchg
rcrb
aad
add
loop
and
ret
pop
arpl
in
xor
inc
dec
enter
xchg
push
or
je
popf
sbb
push
movsb
call
xchg
inc
sbb
mov
aam
jno
std
xor
out
bound
or
ljmp
jecxz
mov
xchg
ror
lret
outsl
or
inc
int3
xchg
push
lods
icebp
nop
inc
jecxz
jnp
imulb
cld
scas
or
adc
cltd
dec
andl
test
imul
hlt
and
popf
lods
mov
out
or
jb
mov
inc
mov
cmp
adc
pop
push
and
mov
push
push
inc
push
in
test
cmc
jmp
and
inc
cmp
push
add
push
push
mov
dec
imul
pop
fcmovne
cmp
adc
or
pop
test
push
shll
data16
pop
adc
aad
adc
jg
or
jg
or
push
cmp
pusha
call
mov
inc
cltd
hlt
jae
xor
jge
test
push
mov
fistps
push
inc
decl
je
repz
arpl
sbb
lods
sahf
pop
add
sub
stos
dec
cli
int
push
xchg
sahf
jg
jo
in
sbb
stos
push
adc
es
sub
nop
sbb
dec
hlt
jbe
and
out
sbbb
xor
lds
cmp
lock
ss
inc
mov
sbb
lcall
adc
push
cli
xor
inc
enter
mov
out
sbb
enter
outsl
pop
loopne
xchg
dec
jae
stos
mov
out
jnp
add
cmpsl
lret
iret
mov
mov
push
adc
outsl
dec
cs
lods
jbe
pop
popf
insl
adc
fidivl
dec
push
iret
inc
xor
push
les
pop
mov
jb
or
cs
adc
inc
fs
sub
lahf
rclb
aad
fwait
leave
stos
aam
dec
push
pop
call
or
fwait
xchg
and
pushf
outsl
add
or
adc
test
push
jp
jns
test
adc
xchg
jecxz
dec
cmpsl
or
xchg
cmp
mov
mov
or
out
shl
sbb
xchg
fdivrl
push
and
aam
inc
pop
cmp
outsl
xor
xor
enter
push
loop
dec
enter
lea
xor
jno
pushf
movsl
xor
stc
shlb
jno
add
dec
and
mov
mov
and
insb
jbe
push
lahf
sbb
fistpll
jmp
adcl
inc
jl
je
cmp
pop
pop
inc
mov
sbb
in
inc
aaa
and
mov
cmp
mov
orl
push
ret
test
mov
cmp
xor
cltd
nop
cmp
dec
jg
dec
loope
push
xor
stc
pop
ret
xor
pop
mov
pop
xor
dec
lock
aas
pop
mov
xor
or
cmpsb
loopne
xlat
cld
in
lahf
adc
sub
nop
cmp
inc
sub
sub
shl
mov
pop
pop
aaa
push
sbb
stos
flds
arpl
and
mov
push
rep
gs
and
jge
stos
add
icebp
mov
sub
stc
sbb
inc
negl
xor
out
xchg
cmp
push
cmp
scas
or
cmp
lcall
dec
or
mul
addr16
jp
repz
outsl
jl
mov
into
push
icebp
mov
cltd
repnz
andb
pushf
fisubl
ret
cli
sub
adc
mov
xor
xor
jge
mov
call
xchg
sub
jle
xchg
adc
rcll
gs
in
fbstp
mov
ficompl
inc
stos
push
mov
xchg
shl
int3
imul
jp
pushf
jecxz
movsl
shll
repnz
popa
jnp
add
sub
adc
or
in
repz
mov
push
add
loop
lcall
stos
mov
pop
add
je
cltd
lahf
xor
repnz
push
mov
inc
mov
iret
test
mov
fmull
mov
mov
push
xor
stos
loope,pt
xchg
or
call
test
shll
xchg
pop
push
cli
fstl
bound
pop
daa
sbb
mov
add
cmc
xchg
cli
adc
lret
add
inc
cwtl
xlat
jl
sbb
das
es
cmp
push
adc
lods
sub
jg
call
mov
into
xlat
arpl
xchg
mov
mov
xchg
dec
mov
dec
pop
pop
insl
data16
je
lds
jne
push
dec
lret
out
faddl
aas
outsl
rcll
jo
sub
add
mov
cmp
loopne
lret
push
cld
dec
add
mov
sub
jg
dec
std
out
jns
aaa
dec
les
jl
push
repz
mov
movsl
test
push
push
dec
push
aaa
fnsave
lret
das
xchg
jo
data16
mov
call
popa
pop
inc
push
push
insl
mul
loop
dec
testb
cltd
cmpsl
sub
xchg
or
cmp
xor
ljmp
or
jmp
push
jne
sbb
jne
lods
xchg
pusha
in
fdivp
rorb
out
push
pop
sub
test
repz
sbb
jns
data16
and
fbstp
les
dec
xchg
insb
push
jl
cs
sub
mov
fcoms
dec
push
or
push
icebp
in
mov
cli
call
in
arpl
dec
insl
sbb
push
xchg
add
sarl
push
sbb
xorb
lods
dec
into
jp
test
jb
adc
and
jnp
icebp
int3
mov
leave
adc
cmp
add
jl
pusha
xchg
outsl
push
rol
cld
push
lret
xor
sbbb
pop
pop
push
mov
sti
loop
xchg
dec
inc
push
inc
xchg
pop
je
jnp
mov
mov
mov
in
pop
xchg
push
mov
and
add
and
adc
dec
les
jae
push
sti
pop
lds
add
stc
andb
out
outsb
js
inc
sbb
ret
sbb
cwtl
or
sbb
pop
mov
sub
call
and
xor
mov
xchg
inc
loopne
jecxz
lock
jmp
mov
jle
call
clc
clc
inc
xor
xchg
inc
lcall
add
xor
pop
lock
dec
movsl
sti
pop
cmp
or
cltd
adc
fs
mov
aaa
sbb
xor
adc
jno
faddl
mov
sub
add
cmp
pop
push
pop
jmp
push
jecxz
arpl
clc
popf
dec
lcall
xlat
les
into
jl
inc
dec
bound
test
xchg
js
pop
xor
cli
pop
insl
in
sub
push
xchg
ds
inc
xchg
das
into
in
movsl
mov
fdiv
xchg
jmp
dec
push
aaa
adc
out
call
inc
sbb
loop
mov
out
jo
pushf
xchg
imul
in
das
test
fld
in
xlat
inc
pop
cmp
dec
cmp
cmpsb
insb
imul
fwait
sti
jnp,pt
sbb
cs
mov
shll
jmp
adc
bound
pop
mov
clc
sbb
pop
addr16
shr
lret
aaa
fnstenv
insl
shlb
repz
pop
lea
add
cmp
outsb
xor
ljmp
leave
daa
add
in
leave
adc
into
out
push
push
ja
sub
xor
cmpsl
js
pop
mov
dec
xlat
cs
jbe
mov
icebp
pop
and
or
add
lret
mov
mov
rorb
push
sbb
pop
lods
jle
jp,pt
mov
mov
and
xchg
cmpsb
cmp
sahf
inc
jo
pop
mov
xchg
lea
je
jmp
xchg
jle
push
and
arpl
mov
int3
push
and
int3
sbb
mov
adc
inc
add
mov
cltd
faddl
sub
lcall
dec
jb
imul
repz
sbb
cld
mov
mov
lret
xchg
ds
cmp
xor
jne
in
xchg
loop
xor
mov
mov
loopne
sub
cmp
lods
jb
jo
cmpsl
mov
mov
cwtl
repnz
out
mov
mov
adc
inc
push
cs
pop
call
insb
rorb
jne
cmpsl
add
imul
mul
jae
push
sbb
shll
xchg
push
test
xchg
imul
mov
sub
movsl
in
clc
push
scas
pop
pop
xor
js
cmpsl
mov
adc
inc
mov
mov
in
mov
idivl
jns
add
push
xchg
xchg
cmp
out
arpl
repnz
aaa
dec
adc
and
lahf
cmpsl
ret
mov
push
jnp
and
xlat
mov
xor
sub
and
jno
inc
or
lcall
sbb
mov
pop
lods
fmul
gs
and
sbb
iret
mov
xchg
fsubrl
xchg
push
lods
shr
cmp
inc
cltd
into
stc
xor
jns
mov
loopne
negl
push
lock
pop
adc
jl
sbb
ss
sahf
xchg
js
xchg
and
fiadds
loopne
addr16
insb
arpl
bsf
inc
mov
mov
aam
loope
inc
sub
and
push
or
ret
jns
es
rcll
jg
call
sub
shrl
mov
sarl
and
int3
nop
loopne
push
mov
cld
mov
adc
push
enter
in
imul
sub
cpuid
adc
in
out
mov
insl
daa
fcompl
lahf
mov
jecxz
pop
dec
mov
sti
ror
addr16
xor
xor
push
pop
mov
mov
fistl
sti
or
inc
mov
in
mov
sub
in
aad
das
dec
test
mov
nop
and
pop
jmp
rorl
mov
sub
mov
cmp
jmp
test
movsl
mov
mov
scas
testl
cmp
jbe
cmpsl
sub
pop
mov
lret
mov
iret
sub
cmp
push
cld
in
arpl
mov
mov
xlat
dec
repz
mov
pop
jecxz
icebp
sbb
ss
ss
and
in
sahf
ds
sub
xchg
or
push
dec
hlt
pop
xchg
mov
ficoml
ret
repnz
ds
inc
or
lds
fiaddl
in
imul
sub
pop
mov
arpl
arpl
pusha
rorb
mov
sub
inc
lret
and
sub
push
psubsb
mov
or
movsl
ljmp
sbb
mov
in
dec
push
mov
pop
insl
jge
js
jl
loope
inc
js
inc
in
das
mov
mov
dec
push
pop
mov
jp
insl
dec
nop
inc
out
mov
xor
xor
icebp
repz
push
xchg
and
or
iret
xchg
repnz
sub
rcrl
jge
or
lea
scas
or
sub
mov
fsubrl
jne
hlt
push
je
xchg
orl
js
sub
imul
fsubrl
sbb
aad
pusha
mov
or
lods
or
insl
inc
adc
jmp
adc
test
xchg
inc
inc
mov
mov
pop
setle
add
push
inc
addr16
shlb
dec
cld
mov
jl
scas
xchg
outsl
jmp
mov
fs
inc
aaa
xchg
mov
outsl
pushf
pop
mov
scas
sub
insb
movsl
mov
test
inc
out
push
ret
pop
mov
add
jg
stc
cwtl
xchg
imul
inc
lret
icebp
mov
push
cmc
mov
outsl
clc
movsb
hlt
fcompl
sbb
js
incb
popf
rcl
ret
inc
dec
test
aaa
and
in
cmp
or
or
lcall
adc
mov
shlb
aam
outsb
bound
xchg
cld
enter
push
icebp
cmpsl
in
pop
lods
jp
gs
lods
sub
leave
mov
insb
dec
nop
cmpsl
pop
push
ljmp
xlat
fistpl
inc
pop
mov
je
sub
in
es
jmp
ds
mov
or
or
mov
mov
lcall
push
and
and
cmp
push
ret
add
rdtsc
into
mov
dec
dec
mov
inc
push
push
dec
xor
mov
mov
int
mov
xchg
stos
or
mov
call
popf
mov
daa
xchg
fistl
scas
lock
fdivr
addl
call
stos
pop
jecxz
jecxz
and
push
xor
mov
adc
mov
sbb
stos
ds
pop
fistpl
sarl
dec
dec
push
jl
lds
pop
jo
dec
sahf
ficoml
add
push
mov
dec
repz
rcrb
stos
out
ret
pop
popa
cwtl
out
rorl
sbb
sub
ljmp
popf
lret
mov
pop
dec
mov
cmpsl
rolb
and
mov
or
lret
andb
adc
js
mov
cmp
scas
cmc
das
decb
jns
movsb
pusha
shlb
mov
scas
adc
loop
popf
mov
sbb
enter
jg
push
out
push
adc
out
lret
jmp
mov
cli
pushf
cld
daa
add
xchg
jb
mov
pop
in
sbb
xor
loope
ljmp
jmp
lret
jb
hlt
fs
pop
adc
mov
ret
sti
mov
dec
and
mov
mov
dec
xor
and
imul
rep
outsb
cmp
push
les
repz
pop
arpl
xchg
push
mov
enter
popa
mov
dec
insl
dec
sub
movsbl
sub
jb
mov
lds
addr16
jbe
mov
je
jl
imul
testb
cld
dec
cmc
inc
inc
je
adc
shrb
sub
lods
popl
cmp
sahf
scas
movsb
hlt
mov
sahf
pop
adc
in
jp
insl
push
and
dec
inc
cmp
fwait
xchg
insl
pop
sub
xor
cmp
inc
int
xor
adc
std
std
mov
xor
jg
jb
bound
xor
xchg
adc
xchg
roll
jae
sub
inc
testb
mov
outsb
jne
daa
ret
pop
imul
sbb
push
mov
leave
shlb
mov
mov
out
lahf
inc
arpl
jmp
inc
lods
sbb
and
cmp
je
add
fucomip
pop
leave
shrl
add
push
lds
push
xchg
outsb
into
fdiv
push
push
add
or
andb
fnsave
jl
pop
in
add
dec
je
fldt
das
mov
push
jns
jmp
or
push
jl
sbb
outsl
test
mov
add
xchg
pop
pop
outsb
add
sub
cmp
and
or
xchg
mov
dec
push
je
ficomps
test
ret
loopne
xchg
clc
out
loop
sahf
pop
lret
pop
add
imul
sbb
scas
popa
ja,pt
xchg
xchg
cltd
inc
cmpsb
xor
pop
repz
call
dec
mov
cmp
sub
cmp
cmp
pushl
ja
movsl
ljmp
mov
scas
pusha
inc
push
int3
inc
xchg
mov
je
cmp
dec
sti
loop
movsb
pop
fs
push
cwtl
mov
leave
cmp
enter
xor
rorb
sbbb
adc
pop
jp
mov
jp
mov
or
lods
cmp
jne
and
xchg
pusha
hlt
lcall
jb
push
mov
sti
lahf
enter
inc
dec
cmp
xchg
push
add
hlt
mov
adc
lcall
mov
cmp
mov
mov
pusha
and
dec
mov
sbb
push
imul
test
lret
mov
sbb
mov
lret
fcompl
in
js
sbb
push
outsl
inc
scas
and
int
mov
xor
in
inc
xorl
sbb
in
cmpsb
jno
aaa
ret
addr16
cli
sbb
lahf
out
adc
in
jae
hlt
xchg
dec
mov
mov
adcb
sbb
mov
or
jnp
test
or
push
jno
fisubrs
popa
popa
cmc
and
pop
pushf
mov
cs
push
fisttpl
push
incl
mov
xor
sub
xor
push
in
push
loop
repz
mov
rolb
stos
mov
jno
into
push
sbb
movb
pop
cmp
sbb
test
or
mov
pushf
mov
lock
xchg
int
sbb
cwtl
out
sbb
lea
dec
out
xchg
stos
mov
mov
and
out
out
sti
out
sbb
xchg
xor
inc
fldcw
mov
xchg
adc
lods
aas
xchg
rcrl
cmpsb
cmp
pop
adc
cs
or
jns,pt
scas
shll
leave
jge
jns
sbb
mov
inc
adc
cwtl
or
popa
adc
adc
push
dec
push
loop
mov
mov
movsb
mov
loop
dec
adc
jecxz
es
mov
cmpsb
or
adc
mov
pop
xor
clc
loope
sbb
xchg
inc
cwtl
add
xor
stos
cmp
dec
xchg
ret
cwtl
cmp
fadd
call
mov
out
out
cli
mov
lock
and
ds
mov
shl
aaa
inc
sub
pop
push
push
lods
xchg
xchg
xor
xor
xchg
jg
xchg
repz
inc
add
mov
in
aad
push
inc
jmp
mov
flds
adc
lahf
or
repz
pop
decb
imul
outsl
adc
adc
push
ret
sahf
int
insb
mov
in
imul
lock
lock
cltd
dec
stos
lock
mov
dec
js
xchg
mov
cli
push
movsl
outsl
cmp
mov
call
fidivrs
sbb
stos
incb
push
pop
rcrb
les
stc
dec
lock
les
shl
add
inc
into
lods
call
popf
sub
inc
shrl
dec
rorl
mov
push
mov
pop
or
fldl
push
xor
into
js
push
cwtl
out
mov
fbstp
or
cmp
push
shrl
repz
rorl
add
lahf
add
cmp
rolb
stc
add
test
movsb
push
inc
sub
aas
mov
jns
aaa
negb
xorl
xor
sbb
sbb
movb
sbb
dec
xchg
cli
aad
mov
cwtl
cwtl
testb
adc
movb
inc
add
orb
loope
sbb
dec
inc
les
fbld
popf
aaa
mov
fisubrs
mov
imul
and
mov
push
push
push
das
jae
jo
mov
fisttps
add
xchg
or
mov
push
pop
mov
fdivs
cmpsl
jge
mov
movsb
pop
cmp
lahf
incb
std
and
outsb
mov
mov
add
mov
into
lock
stos
mov
sbb
fildl
repnz
jnp
push
int3
call
hlt
add
jge
jecxz
inc
lds
mov
stc
filds
push
adc
pop
jo
fs
test
in
inc
out
repnz
aam
clc
ja
mov
daa
es
pop
std
mov
and
inc
fidivrs
shll
mov
push
and
push
ret
sbb
nop
mov
mov
xchg
dec
test
and
mov
or
das
jbe
push
inc
push
adcl
faddl
insl
pop
aam
jl
xorl
fcomi
or
mov
dec
and
lret
pop
add
xor
mov
test
cli
pop
cmp
push
lahf
ja
push
sbb
das
jmp
dec
push
push
test
jmp
in
cmp
fsub
push
in
add
lods
or
dec
mov
mov
mov
arpl
mov
jbe
repnz
lods
mov
pop
mov
ud2
or
xchg
imul
push
aad
lahf
sbb
mov
mov
adc
movsl
mov
add
jg
dec
pop
inc
lods
dec
sahf
mov
cmp
pop
ljmp
js
jmp
xor
cwtl
inc
lahf
jp
loope
imul
mov
mov
mov
mov
scas
adc
push
pushf
ja
cmc
push
ds
mov
clc
xchg
jb
cmp
push
bound
xor
sbb
lret
mov
sbb
and
mov
ret
mov
pop
ret
mov
gs
xor
aam
mov
pushf
push
mov
pop
push
scas
es
push
push
int3
mov
sbb
sub
cmp
lret
mov
test
sbb
mov
xlat
mov
mov
mov
inc
loopne
dec
cld
mov
mov
mov
loope
or
nop
or
mov
ja
rcl
sbb
movsl
fldenv
test
scas
inc
cmpsl
fcomps
shll
mov
aaa
lock
test
jo
out
pop
subb
js,pt
add
push
inc
stos
test
fs
in
xchg
arpl
in
std
cmp
popa
mov
das
mov
pop
lcall
adc
sahf
and
lods
mov
test
and
jo
push
mov
push
aam
popl
add
ffree
mov
mov
std
out
adc
aad
push
mov
xchg
js
popw
xlat
lahf
imul
dec
xchg
inc
mov
call
imul
push
mov
pop
push
hlt
out
daa
pop
sub
sahf
mov
pop
fists
xlat
lods
push
rclb
mov
leave
daa
dec
lahf
movsb
nop
flds
xor
sub
fnsave
and
add
jnp
adc
push
fwait
xor
inc
jo
lds
int
push
mov
out
jns
or
pusha
and
sbb
leave
cs
dec
mov
shl
lds
js
mov
mov
out
jle
sub
ljmp
xchg
sar
out
cltd
popf
mov
gs
mov
outsl
in
das
jge
pop
ss
leave
in
rorl
pop
addr16
mov
lock
add
arpl
aam
stc
pop
mov
push
push
les
lods
sbb
cmp
mov
cmpsb
jno
dec
push
aad
mov
call
jle
and
jno
xor
adc
aas
mov
inc
jnp
push
ss
pop
xchg
call
insb
push
xchg
fisubs
loope
inc
clc
or
popf
jnp
sbbl
xlat
imul
add
sarb
iret
or
aam
mov
pop
in
adc
xchg
hlt
mulb
xchg
inc
push
ss
xor
repnz
pop
iret
incl
test
push
xor
je
les
repnz
movsb
lret
out
sbb
mov
sahf
pop
rcl
out
popa
inc
repz
cmpsl
xlat
xchg
aas
inc
lods
sub
fsubr
push
and
xor
or
out
pop
clc
in
adc
or
mov
cmp
mov
std
js
inc
cmp
ror
adc
int3
std
icebp
inc
mov
and
add
int3
iret
mov
push
sbb
pop
sti
movsb
inc
or
popf
roll
cmpsl
xchg
sub
push
push
and
mov
pop
jg
mov
mov
fdivl
xor
adc
sub
mov
xchg
sar
inc
mov
cmpsb
cmp
inc
push
clc
fcompl
lock
std
pop
xor
mov
addr16
leave
out
lret
or
repz
or
sbb
mov
and
mov
lahf
cmpsl
cmpb
mov
ljmp
addr16
jno
xor
dec
mov
push
jnp
mov
lea
adc
scas
or
addb
fs
repz
sub
push
ror
dec
cld
xchg
mov
sbb
fwait
dec
jle
daa
andb
repz
xor
inc
nop
pop
push
fimull
out
rcrb
sti
pop
ss
int
movsb
push
lahf
cmpsl
inc
cltd
out
mov
pop
bound
les
push
stos
ss
imul
adc
hlt
sub
lahf
jmp
mov
cmpsl
mov
xchg
add
push
jb
ja
cmpsb
cmp
jae
cwtl
mov
push
xor
push
fnstcw
outsb
adc
hlt
ret
nop
std
mov
les
rcrl
dec
movsl
add
mov
mov
vsubss
inc
mov
scas
cmp
push
push
lds
lret
lods
mov
mov
imul
ja
repnz
out
fadds
pop
stc
int3
lea
pop
adc
jbe
ss
ja
test
mov
dec
out
or
insb
sub
lods
or
sbb
bound
out
xchg
movsb
daa
or
jb
lret
movsl
cltd
or
pop
ja
mov
loop
mov
push
sub
cli
push
bound
lods
cmpsb
jle
cltd
fisubl
or
cmp
call
and
sub
and
xor
adc
mov
pop
aam
xchg
das
inc
jle
adcl
cmp
and
clc
pop
mov
cmp
cmp
aam
out
daa
and
push
ljmp
sbb
insl
stos
inc
daa
xlat
aaa
inc
int3
sub
adc
xor
clc
loop
sbb
dec
aaa
hlt
outsb
mov
inc
sub
test
xor
gs
out
sbb
mov
clc
pop
fidivs
xchg
mov
xor
loopne
pop
das
xor
sbb
push
push
rorl
mov
std
and
jg
clc
jo
fsubrl
jl
mov
lods
call
lret
jb
pop
clc
sbb
call
jecxz
inc
outsl
les
pusha
inc
aam
mov
xor
je
sbb
hlt
cli
add
jae
xor
cmc
outsb
icebp
mov
push
push
lret
fcoml
mov
pop
shll
mov
shlb
roll
add
lret
mov
mov
fisttpll
and
xor
inc
sarl
inc
repnz
insl
fcoms
sub
mov
fwait
sub
subl
push
fnstsw
sarb
mov
test
js
push
sub
xor
repz
add
adc
or
fwait
aad
lahf
cltd
outsb
repz
mov
mov
pop
in
shrl
jb
mov
adc
mov
mov
or
jge
xchg
aas
or
out
mov
inc
mov
les
bound
sub
int3
mov
inc
mov
push
mov
xor
inc
jg
pop
aam
pop
shrb
pop
lock
clc
jae
stos
int
cld
mov
jmp
movsb
mov
dec
out
testb
adc
cmpsb
cmpsl
inc
cwtl
rcl
lods
shll
je
sbb
and
push
daa
aad
clc
es
sbb
mov
in
es
sub
cmpsl
dec
dec
leave
outsl
xsha256
cmpsb
xlat
inc
and
cs
dec
in
add
scas
aas
xor
push
popf
mov
aaa
jl
inc
movsb
xchg
shll
jg
pop
mov
or
xor
rcr
sti
sarb
sti
int3
xor
rorb
aam
fldt
jmp
inc
xchg
fs
movsb
vdivss
loop
pop
in
bound
imull
pop
ret
out
dec
adc
push
mov
push
mov
push
inc
shrl
push
pop
popa
and
int
repnz
insl
push
sbb
rcl
sub
add
adc
mov
xchg
aaa
inc
insb
mov
imul
data16
pushf
sbb
dec
sti
cs
push
push
bound
int
adc
mov
mov
je
mov
popf
or
and
dec
mov
push
sub
jmp
scas
imul
dec
mov
rol
xchg
fnsave
xchg
in
jmp
mov
jge
sub
stc
cli
dec
clc
testb
lahf
in
loop
dec
or
mov
pop
jge
mov
push
fdivrp
xor
dec
bound
lods
lret
clc
push
mov
scas
and
push
enter
push
lahf
mov
sub
clc
adc
inc
inc
mov
mov
les
jle
fisubrs
cmc
pop
lahf
dec
pop
lahf
cs
je
and
inc
shlb
dec
jb
rcll
and
lahf
xor
inc
test
mov
and
hlt
aas
into
outsb
mov
std
xor
pop
mov
push
jbe
std
xchg
lods
in
out
pop
pop
pop
pop
scas
mov
or
fnstenv
jecxz
inc
cmp
in
enter
pop
stc
jnp
je
jo
imul
mov
xlat
js
lea
movsb
or
jb
iret
mov
xor
insb
and
movsb
jne
data16
test
mov
movsb
call
push
movsb
shll
cmp
or
mov
mov
xorl
xchg
mov
mov
test
repnz
je
movsl
push
int
cmp
pop
pop
sub
cmp
cmp
std
leave
fdivrl
orl
mov
push
mov
jno
xor
test
and
enter
dec
adc
push
adc
lods
mov
or
in
jge
xor
andl
fiaddl
and
xchg
and
adc
out
popa
into
push
out
lret
inc
sbbl
in
xchg
out
ss
xchg
out
push
ja
lret
fwait
jns
sbb
sarl
int
mov
fwait
add
test
je
dec
loop
mov
mov
in
pop
inc
stc
int3
addb
mov
dec
mov
dec
inc
mov
mov
push
mov
fcmove
lock
mov
arpl
test
icebp
push
test
push
lods
scas
dec
mov
sub
jne
stos
cmp
stc
ficoms
pop
mov
mov
mov
enter
jp
and
clc
popf
test
or
dec
popf
sub
mov
je
ficompl
repnz
add
jbe
fidivl
hlt
cmpsl
lret
outsl
mov
adc
xchg
shll
add
orl
or
aaa
xchg
pop
packsswb
test
cli
aas
cmp
scas
and
dec
test
ret
or
pop
mov
sub
popf
shl
push
push
add
sar
jne
fistl
ja
push
pop
mov
and
loop
int
arpl
dec
sarl
or
sbb
xchg
andl
in
fldt
jb
dec
insl
loope
push
or
xchg
adc
pushl
outsb
in
imul
mov
push
or
push
fimuls
xor
sub
push
xchg
dec
test
sbb
int3
mov
and
sbb
jge
and
scas
mov
xchg
ja
and
adc
movsl
inc
pop
jmp
ret
adc
xchg
sub
xlat
ljmp
xor
stos
add
stos
inc
fnsave
aas
fwait
clc
int
xor
inc
ja
xchg
add
cmp
jp
mov
xchg
bound
mov
loop
push
inc
inc
xor
data16
ds
adc
inc
rolb
add
std
ss
push
mov
movsb
repnz
mov
pop
pop
insb
xor
and
jns
mov
fdivr
sbb
outsl
daa
clc
daa
mov
mov
fstpt
push
adc
pushl
xchg
addb
sbb
pop
int3
sbb
xchg
pop
faddl
or
push
jg
repnz
popf
lea
push
push
or
jo
inc
push
sub
out
cmp
cmp
jp
push
add
add
inc
daa
insl
jbe
dec
adc
push
jg
mov
jmp
data16
push
jnp
popa
outsb
jl
mov
lods
inc
push
rolb
imul
lds
pusha
int3
dec
mov
pop
or
adc
pop
gs
and
pop
xchg
fstl
fadds
sub
fs
inc
sbb
pop
int
and
mov
ret
sub
inc
pop
hlt
fidivl
les
pop
add
shlb
and
jae
call
lock
inc
jecxz
push
fdivrs
shlb
cmc
adc
xor
js
push
stc
lahf
add
pop
pushf
adc
xlat
out
rcrl
popf
enter
xor
jne
mov
pop
mov
ja
pushf
push
xchg
mov
dec
sbb
addl
lret
enter
dec
inc
sbb
pop
loop
and
push
cmp
sbb
xchg
in
mov
std
xchg
faddl
push
xchg
bound
pop
dec
das
push
out
aaa
mov
add
cmp
sub
int3
mov
dec
loope
jle
std
cmp
xchg
pop
mov
jle
push
cmp
mov
lret
pop
addl
mov
xchg
dec
addr16
lock
mov
es
mov
and
fld
add
cli
sub
dec
xchg
pop
sbb
mov
adc
mov
popa
leave
inc
pop
jecxz
xchg
nop
add
lret
jb
pop
rorl
outsl
xor
movsl
jae
mov
lds
dec
mov
inc
pop
xor
fs
stc
dec
pop
bnd
andl
idiv
cmc
xor
movsb
cmp
xor
jge
aaa
add
loop
in
cltd
bound
mov
mov
inc
xchg
insl
or
loopne
dec
pusha
jp
push
pop
cwtl
sbb
pop
push
out
sarb
xchg
pop
mov
mov
outsl
test
inc
scas
icebp
pop
mov
cltd
push
inc
mov
loop
jo
dec
pop
rcll
mov
jae
aas
insl
inc
add
mov
cli
mov
movsl
in
xor
cmp
mov
pop
mov
dec
inc
mov
cmpsb
mov
lret
add
add
stos
push
pop
xchg
jo
outsl
cmp
inc
mov
faddl
inc
mov
sti
jns
pusha
cld
je
out
pop
pop
xor
cs
push
jae
or
int3
clc
inc
mov
out
sti
jmp
and
cmp
cmp
pop
add
fisttps
scas
imul
xchg
and
inc
dec
ja
sub
push
sbbb
inc
push
pop
mov
fmuls
imul
pop
fsubrp
push
add
dec
mov
ja
cmpsb
mov
jne
dec
cmp
adc
sub
in
loope
push
inc
outsl
jns
mov
out
jg
sbb
inc
repnz
ficomps
mov
out
and
sub
mov
addl
cltd
sbb
cmpsb
mov
mov
mov
dec
cmp
jbe
mov
mov
push
in
xchg
divb
adc
fistps
out
imul
add
xor
mov
adc
push
cmpsl
out
mov
xchg
inc
mov
sbb
incb
pop
add
jmp
and
xchg
and
jecxz
dec
rorl
insb
xchg
cmp
shlb
out
mov
dec
xchg
sbbl
nop
mov
or
mov
jg
pop
add
fnstenv
inc
push
mov
sahf
cmp
scas
sti
or
cwtl
or
sbb
dec
sbb
sbb
repnz
push
leave
and
jnp
mov
xor
aam
nop
ja
ja
adc
test
hlt
sbb
stos
ja
mov
add
test
push
iret
jg
in
lds
leave
cld
mov
insl
shlb
pop
cmpsl
add
sbb
jo
pushf
push
and
or
call
xchg
push
add
cmpsb
sub
cmp
cwtl
push
movsl
movsl
out
addr16
adc
gs
loop,pt
enter
fmuls
mov
add
lret
sub
fbld
in
cltd
mov
popa
outsl
xor
inc
nop
pusha
jge
test
mov
nop
ret
push
jnp
movsb
lods
inc
subl
mov
sahf
adc
sub
jnp
xchg
inc
shrb
sub
lahf
in
pop
repnz
lcall
les
lret
arpl
insl
repnz
clc
inc
cmp
ja
adc
mov
movsb
test
es
inc
cwtl
mov
gs
rcl
pushf
fcompl
int
push
movsl
out
mov
shrl
push
mov
mov
and
dec
jns
sti
pushf
xchg
stos
call
je
add
or
lahf
adc
shll
mov
popf
and
pop
mov
cli
sti
pop
or
push
aaa
mov
jnp
add
mov
fwait
cmp
inc
push
popa
mov
mov
sbb
shlb
fiadds
std
sub
sbbl
sub
and
and
pushf
xor
xlat
test
fcompl
enter
jl
ret
in
pop
xchg
sarl
mov
or
es
and
incl
push
mov
sbb
mull
imull
push
test
fs
clc
xor
imul
pop
std
add
js
inc
mov
add
in
cld
jb
xchg
dec
jae
adc
pusha
mov
lret
dec
fdivrl
daa
lods
mov
xor
jmp
lret
pop
in
lahf
inc
lds
or
rcll
add
movsb
imul
cmpsb
jg
mov
mov
cmc
mov
mov
ljmp
jo
cmc
adc
roll
adc
sbbb
mov
in
adc
lods
mov
jnp
dec
fisubs
test
sbb
inc
stos
es
xchg
xchg
fisttpll
sub
aam
pop
mov
ud2
xor
add
xchg
outsl
inc
cmp
cmp
xchg
and
data16
mov
xchg
lcall
mov
mov
mov
cwtl
fst
loop
cmc
rcll
mov
mov
mov
lahf
xchg
icebp
jbe
scas
inc
fwait
pop
sub
int
int
push
jnp
leave
pop
test
sub
out
aas
stos
or
inc
das
jp
jae
cmpsb
xchg
aaa
jl
orb
jns
into
pop
pop
fucomip
xor
cwtl
pop
inc
sub
inc
or
lea
loopne
jns
into
leave
push
js
cld
add
mov
add
xor
lcall
iret
rclb
popf
je
sbb
cwtl
mov
and
push
and
xchg
iret
pop
mov
popa
jns
push
inc
dec
jg
mov
ss
inc
xor
lret
imul
adc
pop
cld
pop
adc
data16
fsubrl
xorl
xlat
es
or
mov
mov
pop
scas
dec
xchg
push
or
xchg
cs
sbb
or
dec
mov
xor
cwtl
jno
jmp
push
cmp
shl
pop
jo
xchg
jnp
xchg
add
int
xchg
es
rol
lea
and
mov
hlt
mov
std
xchg
xor
in
or
ret
mov
cli
negb
or
outsb
xlat
and
stc
sub
lret
lret
pop
mov
jo
testl
pushf
faddl
imul
test
iret
cmc
es
daa
aad
xchg
mov
add
mov
fdivrl
sarl
js
aaa
add
cwtl
push
xchg
jnp
adc
cmp
les
cltd
pop
sub
push
cld
mov
adc
scas
stc
in
cld
pop
sub
adc
dec
pop
xlat
in
jl
rorb
add
or
cmpsl
int3
fnstenv
scas
aad
fisttpll
out
mov
xchg
pop
fcomi
fsts
xor
or
out
inc
sub
fdivrl
int
push
jns
lock
add
pop
sub
mov
mov
inc
cs
enter
xor
xor
bound
cmp
fsubs
push
in
out
dec
cmp
mov
mov
out
adc
pushf
ret
loop
imul
mull
iret
add
add
lea
fimull
out
adc
lods
adc
outsb
outsb
jns
mov
mov
sub
lret
jnp
popa
mov
adc
add
push
in
sub
xor
pop
test
and
icebp
loop
ret
andl
sub
std
hlt
pop
outsb
inc
push
push
imul
imul
mov
fdivr
mov
out
or
sar
xlat
je
mov
push
dec
cmp
and
jmp
scas
mov
popa
push
xlat
pop
xlat
es
pusha
mov
sbb
test
cmp
sti
stc
aam
jne
mov
adc
sub
sti
lds
test
inc
and
adc
int
loopne
sbb
dec
mov
or
shlb
adc
and
stos
xchg
arpl
push
loop
sub
out
xor
js
or
push
das
les
lahf
sahf
subl
aam
inc
mov
add
clc
xchg
in
jbe
pop
mov
sub
fdecstp
data16
jp
jl
in
cmpsb
lcall
dec
cmp
mov
pop
or
mov
and
mov
xor
fimull
mov
lds
clc
sahf
push
rorb
add
sub
push
fistl
pop
ret
btc
push
sub
in
mov
mov
push
xor
pop
fmulp
push
or
pop
in
mov
inc
into
loopw
lea
sub
cmp
dec
mov
dec
aam
shll
add
rcrl
jno
fsubs
mov
mov
xor
js
mov
cmp
push
ljmp
outsl
hlt
sub
daa
inc
aad
cld
adc
imul
jmp
out
inc
inc
add
sbb
pop
das
loopne
add
xor
addl
fsubrl
xchg
mov
pop
jne
jnp
jne
mov
and
cmpsl
inc
bound
xchg
clc
cmp
mov
xor
pop
sub
jae
jbe
cmp
in
test
lea
dec
xor
mov
lcall
dec
les
mov
fisttpl
pushf
ja
adc
jb
gs
push
cli
out
aam
fdivl
mov
add
mov
xor
jecxz
stc
into
push
sub
clc
mov
fcoms
fcomi
clc
sbbl
pop
fmuls
rcr
xchg
lods
or
lds
rcll
sub
mov
push
insl
scas
filds
cmpsb
jl
repz
inc
imul
cwtl
push
adc
imul
jbe,pn
xlat
aaa
stc
das
xlat
es
xchg
lret
mov
mov
aam
mov
imul
push
insb
cmp
sub
outsl
jae
mov
push
insb
imul
pop
cmp
adc
inc
shrb
push
icebp
jp
add
jp
std
stc
pop
mov
jecxz
dec
ljmp
fcmovnb
inc
push
cli
mov
sub
inc
jmp
adc
dec
clc
ss
mov
loopne
or
call
dec
hlt
imul
mov
cmp
test
ljmp
std
int
pushf
add
dec
call
or
mov
scas
in
not
push
mov
add
cmp
mov
sub
xchg
insb
nop
ret
sub
ficompl
xlat
cmp
rclb
dec
sbb
out
mov
aas
pusha
mov
xchg
movsb
dec
sarl
push
stos
rcrb
ja
xor
das
jb
in
in
jl
xchg
iret
scas
sub
in
push
cmp
cmp
mov
mov
or
mov
mov
xchg
or
outsl
in
les
mov
add
ds
cli
add
cli
or
adc
int3
or
shl
cmp
shll
sub
sub
in
dec
cmp
dec
sub
xor
jmp
rcrb
mov
dec
pop
into
dec
xchg
jmp
pop
data16
jg
lret
lock
sub
mov
sub
subl
inc
outsl
mov
jns
push
fcoms
fdivrl
enter
sbb
cli
enter
mov
call
cmpsb
stc
fstps
add
scas
inc
inc
dec
ffree
inc
mov
stos
mov
test
popa
popf
xchg
mov
movsb
loope
loop
cmp
outsl
int
jns
sarb
cmpsl
pop
jle,pn
clc
pusha
shr
sbb
lds
xchg
imul
push
cmp
adc
pop
sbb
ds
stos
cmpsl
daa
aad
pop
inc
mov
mov
ja
or
mov
xor
imul
cmp
add
lock
in
mov
jg
movsb
hlt
adc
mov
shr
jle
shrl
adc
in
pop
mov
lods
arpl
aaa
insb
pop
movsb
jge
mov
lahf
and
lcall
je
sub
sub
int
loop
xor
and
add
xchg
cmpsl
mov
imul
loopne
cmpsb
not
inc
mov
cmp
add
cmp
sbb
xchg
mov
scas
mov
push
xchg
mov
pushf
test
jo
cld
xor
ror
sub
jnp
into
jg
sub
or
cmpsl
movsl
pop
ja
jns
sub
jp
mov
in
cli
outsb
ss
stos
push
adc
jo
cmpsb
push
outsl
roll
adc
stos
pop
push
scas
lods
test
sbb
mov
das
jno
inc
stc
icebp
icebp
jae
cs
cmp
sbb
or
or
fistps
add
out
jecxz
fstl
movsl
enter
ret
leave
je
stos
fs
adc
push
out
imul
test
jb
lcall
outsb
mov
test
lcall
inc
or
jae
mov
frstor
in
sub
jg
scas
bound
add
and
jo
fdivr
cltd
ds
mov
add
movl
sub
ja
push
insb
mov
pop
ficompl
ret
mov
lods
mov
push
cmp
imul
dec
adc
adc
sub
addr16
or
xchg
ret
out
push
adc
testb
nop
shlb
loope
std
int3
stos
stos
cmp
jns
popf
push
xor
stos
jnp
nop
enter
push
fnstcw
xchg
std
mov
pop
leave
daa
outsb
sub
pusha
ja
mov
in
push
shll
dec
cwtl
mov
fwait
shlb
nop
cmp
sub
push
std
xor
dec
lret
mov
into
jae
mov
or
dec
inc
xor
sub
xor
xor
mov
arpl
cli
ror
jl
or
dec
sub
in
dec
jg
push
adc
jae
ficomps
inc
lcall
fs
add
inc
scas
loopne
or
mov
push
mov
sbb
pause
adc
clc
sub
adc
mov
cmp
mov
xchg
stos
xchg
gs
push
dec
inc
fdivl
jnp
push
ret
sub
jp
mov
sub
jne
mov
sbb
data16
sub
ret
mov
bound
insl
scas
stos
aam
bound
inc
aaa
les
push
roll
stos
in
dec
or
xchg
push
inc
imul
inc
xchg
stos
mov
inc
mov
in
xchg
movsl
dec
add
fldl
fsts
inc
xchg
mov
and
mulb
aam
add
jge
adc
test
imul
jns
aas
shrb
in
ret
fisubrs
lods
pop
xchg
or
xor
mov
add
fnstcw
xlat
movsb
xchg
leave
punpcklbw
jo
jnp
cmp
pop
in
shl
fwait
in
neg
lods
aaa
movsb
rcll
lret
out
loopne
movsl
es
fnstenv
pop
hlt
pushf
xor
jo
hlt
fcomi
je
dec
sbb
jae
rorb
call
sub
xchg
cmp
cld
dec
mov
ja
or
push
into
pop
dec
int
cli
and
xchg
jmp
rclb
inc
pushf
das
cmc
cmpsb
or
lds
sbb
in
lds
aaa
test
aad
ja
add
rorl
cmp
repz
mov
cwtl
mov
fstps
sbb
or
lock
in
repnz
push
inc
mov
daa
sub
and
xor
aad
jle
flds
xchg
inc
cmp
push
fucomp
shll
add
mov
pop
mov
pushf
test
sbb
sahf
mov
sub
cwtl
lcall
dec
fnsave
adc
xchg
xchg
mov
insl
xchg
sub
fs
push
leave
fmull
sbb
mov
inc
mov
sbb
imul
cmc
inc
dec
pop
xor
repz
in
jbe
add
inc
pop
pusha
and
sub
xchg
xchg
rcll
imul
xor
xor
and
imul
popa
lcall
ret
sar
sub
dec
jp
mov
xchg
fidivs
out
fldcw
mov
ret
mov
cli
inc
or
inc
stos
pop
add
das
dec
std
test
mov
push
add
add
or
dec
leave
pop
push
ret
lds
inc
jmp
jg
dec
mov
push
shrl
dec
es
aaa
sahf
pop
out
shrl
dec
push
scas
test
cmp
int3
dec
test
sti
xchg
cmp
mov
push
jmp
pusha
add
cltd
f2xm1
cltd
call
or
fwait
cwtl
mov
lds
push
ret
mov
lods
hlt
test
mov
xchg
sub
inc
scas
mov
or
ds
push
inc
pop
jne
sti
scas
imul
ret
icebp
push
push
mov
bound
xchg
adc
rcr
adc
rolb
mov
int
pop
aam
mov
data16
shll
xchg
inc
jl
and
lret
mov
pop
in
and
cmp
in
dec
and
lret
dec
sub
inc
push
sub
mov
test
mov
in
repz
xor
mov
test
sbb
in
push
js
mov
xor
or
pop
rcrb
or
mov
scas
pushf
mov
aaa
fwait
popf
xor
cmp
xchg
cwtl
insl
ja
sbb
pop
pmaxub
dec
sbb
push
mov
mov
adc
xor
mov
daa
lret
imul
and
xchg
nop
jle
sbb
or
fcom
mulb
das
xchg
loop
jne
and
xchg
push
pop
push
dec
mov
mov
sbb
add
cmp
test
cltd
sbb
adc
lds
adc
jb
mov
push
loope
outsl
cmp
cmp
out
and
lock
dec
or
in
jne
inc
push
outsl
cltd
cltd
jo
popa
pop
addl
xchg
xor
and
int
add
les
mov
sbb
roll
xor
jmp
fmuls
xchg
insl
daa
loop
sub
ds
add
loope
pop
xlat
lahf
mov
sbb
rcrl
and
mov
enter
add
lds
lods
xor
dec
sub
jge
cmpsl
xor
out
mov
pop
inc
lahf
testb
dec
mov
cld
lret
test
sub
in
sbb
aam
push
push
jns
add
xor
pop
inc
cli
adc
arpl
mov
mov
jl
mov
in
push
mov
push
imul
jne
xor
rcll
fnstsw
fwait
pop
lret
popf
mov
jb
fstpt
pop
push
mov
mov
cmpsl
repz
into
lds
add
add
xor
jnp
mov
sbb
std
ror
xchg
inc
sbbl
fadds
pop
cwtl
loopne
daa
int
inc
lcall
push
cmp
nop
xchg
pop
jge
lock
adc
sub
sub
inc
inc
fsubrl
cltd
push
imull
jbe
cmp
xchg
push
mov
push
jl
outsl
push
in
ficoml
imull
nop
loop
xchg
mov
pop
outsb
mov
call
inc
lcall
popa
or
inc
jl
or
cmc
pusha
fucomp
movsl
mov
xor
or
fisubs
mov
cmp
or
jp
mov
sbb
sbb
xor
daa
jge
repnz
pop
arpl
fiaddl
push
xor
pop
out
adc
or
mov
xorl
mov
xchg
jmp
mov
je
sbbl
push
rorl
js
mov
dec
and
das
bound
insl
sbb
jbe
adcb
test
stos
pop
insb
inc
pop
decb
push
adc
cmp
adc
mov
xchg
je
scas
xchg
push
adc
insb
rorb
cmc
cmp
mov
hlt
jbe
adc
jp
jmp
out
mov
lea
loope
ljmp
mov
ss
sub
stos
repz
leave
das
sbb
shlb
pop
adc
outsl
ljmp
iret
nop
dec
xchg
mov
xchg
sub
fwait
mov
jns
mov
lods
iret
jno
mov
and
jp
adc
bswap
adc
in
out
or
jbe
into
cmp
pop
jmp
mov
jle
test
jl
stos
aad
xchg
pop
bound
push
pop
sub
xchg
dec
xchg
fndisi(8087
orl
inc
and
dec
ret
dec
notl
pop
fists
fwait
xchg
mov
popf
enter
xchg
dec
and
pop
mov
xor
out
std
outsl
mov
fsubrl
clc
mov
jae
outsl
cmp
cmc
iret
int3
mov
pop
rorl
mul
mov
sub
in
inc
dec
add
jnp
aas
mov
or
add
push
fs
stos
add
add
cmpsl
inc
pop
sub
xor
mov
mov
cmpsl
cmc
push
imulb
test
xchg
dec
sub
mov
mov
inc
loop
out
pop
mov
pop
add
mov
sbb
inc
cwtl
ja
arpl
out
or
negb
mov
incb
cs
push
fsubrl
xor
fmull
in
imul
inc
or
clc
cmpsl
lods
out
xor
pop
mov
test
nop
jne
sarl
jmp
adc
xor
fidivrl
and
cmpsb
hlt
push
pop
lds
ss
mov
or
push
dec
out
mov
adc
sub
fnstcw
cld
push
les
cs
dec
mov
and
mov
push
xchg
test
fmuls
ficompl
push
and
aad
lahf
jae
popf
rcr
xor
addb
mov
sbb
ss
mov
cwtl
dec
ficomps
int3
fistl
push
xor
pop
sbb
add
inc
fisubl
out
cli
ret
inc
push
popl
je
pop
fdivrs
push
sbb
mov
lock
fbstp
mov
dec
fwait
pop
and
fs
call
push
sub
or
jmp
mov
adc
pop
cwtl
aam
iret
mov
test
jo
in
pop
mov
cmc
fs
movsl
xchg
xor
push
sahf
or
xchg
pushf
mov
xchg
sbb
dec
popf
sub
pop
pushf
shr
jae
test
mov
pusha
mov
rcrl
cmp
adcl
cld
lock
xchg
push
mov
cmp
arpl
dec
fiaddl
lret
outsl
cld
mov
pop
pop
adc
cmp
mov
xchg
jb
nop
faddl
gs
cli
sbb
push
adc
mov
push
push
aad
scas
mov
std
xor
xchg
cld
pop
enter
out
in
outsb
sub
mov
lds
jp
cmp
cmpb
or
or
xor
or
cld
xchg
leave
dec
xlat
enter
and
mov
sub
mov
cmp
sbb
mov
dec
fdivrl
xchg
les
xor
mov
fwait
dec
in
jecxz
sbb
xchg
xchg
mov
cwtl
mov
dec
es
mov
aam
jecxz
popf
and
pop
out
xchg
call
and
jecxz
js
pop
test
or
in
pusha
sub
inc
sub
mov
fwait
int
sub
int3
push
xchg
fsubrp
scas
out
xchg
addr16
daa
mov
adc
test
sbb
mov
jbe
xlat
lods
leave
inc
rep
lea
xchg
pop
bound
bound
xor
dec
fidivrl
aas
rolb
in
sub
inc
test
push
mov
mov
into
jno
bound
mov
outsl
aad
daa
pop
jns
xchg
faddp
cmp
incl
mov
and
ret
aad
cmp
dec
call
loopne
data16
and
pusha
orl
loope
leave
mov
jp
add
cmp
and
rcr
mov
insb
lret
and
loopne
imul
nop
fists
aam
adc
jbe
pop
or
jge
sbb
mov
jo
inc
inc
addr16
pop
aaa
cld
mov
movmskps
pop
mov
xchg
mov
scas
xchg
cli
push
pop
jae
fldz
pop
mov
xor
and
repz
cmp
pop
mov
pop
addr16
bound
iret
cmp
out
frstpm(287
cmpsb
test
sbb
mov
sbb
push
loop
mov
push
dec
js
call
push
lods
or
sti
pop
cmpsb
adc
outsb
ret
icebp
jns
xor
imul
mov
mov
mov
mov
jne
xlat
mov
adc
jns
jo
push
imul
cmc
popf
lret
jnp
out
dec
xor
std
push
mov
mov
clc
add
cmc
mov
fldl
mov
push
insb
jl
popa
push
push
movsb
jl
or
pop
stc
inc
sar
leave
xchg
jbe
jnp
stos
daa
jl
xchg
shlb
imul
cmp
negb
lock
fcmovbe
push
incl
loop
fmull
pop
dec
or
jecxz
ret
rcll
sbb
pushf
lods
cmp
insl
cmpsb
adc
sub
insl
imul
jp
and
and
mov
push
mov
lods
xor
rcll
mov
jge
iret
push
push
stc
dec
pop
roll
pop
pusha
sbb
ljmp
lahf
and
cmp
psrad
daa
adcb
mov
mov
aam
add
jmp
scas
cmp
xor
cli
sub
das
pop
addr16
inc
add
dec
insb
bound
insb
mov
adc
js
add
xchg
sbb
jno
insl
roll
scas
es
ss
jp
scas
sbb
test
incl
ljmp
and
mov
cmp
inc
mov
adc
jge
pushf
push
mov
es
mov
insw
enter
sbb
mov
push
imul
mov
mov
sbb
loop
mov
cwtl
inc
and
sti
repz
insb
imul
popf
mov
inc
xchg
lret
pop
dec
cmc
fbstp
xor
das
dec
cmp
pop
sqrtps
pop
lret
xchg
out
cltd
adc
int3
jb
mov
mov
jp
jb
push
mov
dec
je
sub
add
imul
dec
mov
xchg
lods
enter
jbe
pop
outsl
cltd
cs
push
cmp
cmp
mov
pop
mov
imul
add
sbb
cltd
xor
decb
pop
sbb
repz
pop
adc
cmp
add
jns
mov
lret
jp
xlat
jns
aad
xchg
inc
cli
jl
xlat
lcall
fcmovu
and
stc
sarb
dec
and
or
decl
mov
icebp
gs
cmp
lahf
pop
mov
lods
mov
sbb
popa
push
shrl
adc
inc
mov
and
scas
xorb
dec
sub
negb
push
cld
rolb
and
xlat
push
add
pusha
cmpsb
and
jno
stos
arpl
sti
fldenv
pop
xor
xlat
pop
popf
cmp
xchg
lahf
fwait
sbb
mov
jmp
test
mov
add
insl
adc
sub
ret
dec
ljmp
mov
enter
scas
inc
push
cmp
fnstenv
fstl
std
jp
cwtl
sub
push
sti
insb
int
notl
fsub
int3
mov
scas
roll
adc
insb
mov
test
push
faddl
outsb
ljmp
lea
mov
rclb
js
rcrl
push
inc
pop
jp
iret
and
insb
jle,pn
imul
insb
sub
frstor
out
inc
stos
pop
fisubs
pop
call
xchg
sti
dec
test
and
xchg
or
xor
lahf
mov
arpl
or
aam
std
pop
and
lret
jb
pop
shll
adc
sbb
mov
xor
mov
adc
and
pop
arpl
pop
sbb
mov
lahf
ret
inc
add
sub
int
adc
sub
int3
pusha
ljmp
jg
hlt
fidivl
cmp
mov
insl
dec
data16
aaa
or
clc
int
push
je
int3
cmpsb
mov
jg
cwtl
testl
mov
xor
pop
or
negb
xlat
push
pop
or
int
adc
and
xchg
dec
jb
xchg
packsswb
mov
jns
pop
repz
add
stos
cmp
leave
movsb
imul
jecxz
add
adc
adc
adc
cwtl
mov
pop
repnz
jg
je
mov
repz
or
sbb
mov
or
icebp
sbb
cs
movsb
jo
inc
popf
inc
aaa
mov
pop
addr16
ret
xchg
fwait
test
mov
mov
mov
dec
xchg
iret
in
insl
movsb
add
cld
xchg
mov
or
mov
xor
imul
jns
in
shll
fcomps
aad
mov
xchg
addb
mov
daa
pop
clc
push
imul
jg
es
pushl
sub
xchg
xlat
push
fcmovb
mov
xchg
dec
scas
inc
decl
hlt
lcall
mov
xchg
adc
jp
ja
cld
stc
mov
imul
rclb
pop
push
data16
cmp
aaa
jg
stos
lock
lea
or
dec
jno
adcl
aam
out
cmpsb
xor
mov
mov
and
sahf
mov
mov
mov
imul
lods
mov
es
ljmp
ret
dec
inc
and
rolb
mov
js
cmp
andb
jmp
xor
lret
inc
sub
jecxz
push
imul
inc
or
push
and
xchg
repnz
inc
add
dec
lds
loope
shlb
jno
leave
jb
sbb
enter
aam
cltd
xor
jo
inc
aas
jge
sbb
pop
cmp
mov
mov
test
arpl
aas
mov
ds
and
cld
lcall
and
bound
sti
mov
daa
into
int
mov
arpl
div
movsb
lret
ret
sub
int
push
mov
mov
gs
cwtl
out
imul
lock
in
lds
jbe
inc
sbbb
mov
pop
addr16
js
jecxz
xchg
cli
dec
mov
es
push
adc
xchg
xchg
ret
ds
add
push
mov
push
es
dec
mov
xchg
bswap
pushf
arpl
adc
sbb
push
aas
add
inc
sbb
mov
jb
test
fistpll
fiaddl
add
inc
out
sbbl
stos
imul
inc
cmp
arpl
pop
fwait
sahf
ljmp
add
push
cld
cmp
sub
movsb
roll
sbb
xchg
sub
das
mov
push
jo
inc
push
ret
sbb
cmp
lahf
arpl
je
and
stos
mov
rol
faddl
mov
enter
outsb
mov
or
push
push
add
shrb
mov
mov
clc
mov
mov
hlt
cmp
mov
je
xchg
popa
add
adc
dec
sub
push
test
pushf
test
or
stc
jmp
mov
inc
push
testl
adc
mov
adcl
inc
aam
cmp
sub
gs
inc
pop
inc
add
ds
xor
in
inc
cwtl
pop
push
pop
decb
pop
sbb
testl
mov
into
bound
mov
sub
sbb
sbb
mov
iret
cld
xchg
scas
shrl
ja
xchg
dec
lret
test
ds
sbb
imul
dec
bound
mov
xor
dec
cwtl
jae
imulb
inc
add
mov
mov
insb
aaa
add
dec
xchg
sbb
dec
es
popa
and
lea
dec
outsb
lock
out
sar
mov
sbb
pushf
inc
in
cmp
cmp
hlt
and
insl
sbb
imul
sbbl
inc
adc
mov
mov
pop
lods
sarl
lret
xchg
jne
sarl
fildll
and
xchg
xchg
out
or
out
out
pop
les
aam
lock
js
mov
or
sub
into
mov
xchg
sarb
mov
jns
aad
jl
fwait
or
stos
inc
daa
cli
fst
leave
popf
out
sbb
sahf
mov
jge
lods
out
push
clc
popf
call
xchg
out
gs
call
ret
push
pop
and
dec
arpl
push
aas
cld
push
movsb
aaa
and
push
pop
fsubrl
add
mov
out
mov
fidivs
xor
in
int3
ljmp
aam
xor
jge
test
nop
out
cld
in
gs
mov
sbb
loope
sbb
out
push
jns
cwtl
imul
push
pushf
push
insb
mov
adc
inc
xor
divl
mov
mov
cltd
xchg
jbe
mov
mov
enter
and
sete
add
jbe
sahf
inc
daa
xchg
or
dec
push
and
adc
iret
je
out
int
lods
imul
mov
call
sbb
shr
ljmp
sub
movsb
subb
pop
rolb
mov
out
mov
xchg
mov
jnp
inc
push
cmp
ja
jmp
je
and
neg
mov
inc
leave
adc
sahf
ljmp
or
xchg
out
mov
push
outsb
xchg
addr16
stc
pop
mov
push
jp
sub
pop
ds
xor
xchg
jle
fstpt
dec
add
jecxz
adc
inc
roll
jbe
pop
xorl
loopne
or
adc
mov
in
xchg
pop
loop
pushf
neg
cld
cmc
or
icebp
cmp
dec
mov
or
ror
xchg
sub
leave
mov
lahf
add
lahf
js
mov
cmp
ja
cmpsl
jl
jnp
pop
and
xchg
out
lret
pop
jae
xchg
mov
cmp
add
ret
mov
mov
cmp
xor
dec
cmp
repnz
inc
out
cwtl
inc
pop
pop
lret
test
and
mov
and
rcl
pop
dec
stos
sbb
cvtps2pi
ret
xor
pop
sbb
pusha
mov
mov
nop
jb
out
pusha
pushf
ljmp
push
jb
fs
jmp
and
push
push
xorl
xchg
sbb
icebp
fdivl
adc
fwait
add
hlt
pushf
and
adcl
xor
aas
cmp
stos
jbe
imul
cmpsl
aam
push
nop
lret
pop
cmp
test
fs
fimuls
addb
scas
sub
jge
fwait
lcall
dec
fldcw
lret
mov
pop
lods
es
js
test
sbb
jl
adc
inc
mov
cmc
out
icebp
ret
aas
cmp
into
adc
jg
dec
sub
outsl
cld
push
outsl
insl
orl
cs
xchg
xor
and
pop
push
mov
loopne
stc
decl
lea
jge
lret
clc
stc
pop
dec
daa
push
inc
lret
fmuls
imul
inc
mov
jp
mov
stos
xchg
sbb
dec
fiaddl
adc
adc
cmpsb
out
cmpsb
push
insb
mov
sbb
mov
insb
enter
push
mov
out
dec
lods
cmp
aas
ds
mov
js
xchg
rorb
inc
push
inc
jmp
sbb
ss
push
and
test
jbe
mov
clc
push
push
xchg
dec
imul
lret
mov
mov
roll
sub
push
loope
ljmp
ficompl
jno
cmpsb
leave
push
shrl
xchg
daa
sub
sub
and
xchg
or
lea
pop
daa
clc
cmp
je
inc
popf
in
insb
rorl
js
xor
xor
int3
fidivrs
inc
jle
test
xchg
imul
data16
int3
arpl
pop
popa
cmpsl
mov
xlat
decl
dec
int3
push
add
xor
ficoms
mov
sbb
insl
jmp
or
xor
pop
xor
in
dec
nop
pop
lods
nopl
cmp
jns
in
sarb
shll
repz
inc
or
push
fdivrs
icebp
int3
out
aas
adc
inc
stos
push
lods
inc
stos
and
dec
ffreep
ja
xor
mov
mov
ret
js
lahf
data16
mov
fwait
ret
fidivrs
or
push
dec
cmpsb
js
inc
and
push
in
mov
into
test
mov
stos
dec
fdiv
lds
movsb
mov
std
add
fiaddl
in
ret
icebp
fnstcw
xor
sbb
incl
sbb
adc
and
pushf
aam
fsubrl
push
and
addr16
scas
inc
push
mov
add
adc
es
popf
pop
inc
fstpt
loope
cmpsl
push
pop
bnd
add
inc
nop
adc
xor
cld
cmpsl
roll
fcmovnu
icebp
arpl
jecxz
mov
mov
aaa
sti
addr16
imul
or
mov
aad
daa
sub
dec
out
inc
cmpsl
out
scas
sahf
jg
push
push
xor
xchg
dec
and
in
lcall
adc
mov
xor
sti
jno
out
inc
cltd
inc
and
lea
xchg
add
mov
aas
and
insl
les
mov
add
pop
jnp
and
pop
pop
movb
sbb
jns
pop
js
pop
sub
addb
mov
repz
repnz
jne
loope
push
test
ss
lods
mov
cmp
mov
adcl
push
ret
lock
fldenv
sar
arpl
xor
cwtl
movsl
cmp
mov
mov
dec
leave
adc
push
movsl
jb
cmp
xchg
mov
jmp
cmc
sbb
mov
fisttpll
out
imul
sbb
movsl
lea
outsb
fs
daa
ds
pop
push
imul
out
inc
shll
test
das
jno
clc
xor
into
cmpsb
jnp
popa
hlt
push
gs
cmp
pop
xor
fisubrl
dec
sti
cmp
rorl
popa
inc
cmpl
xchg
mov
and
test
out
lods
add
je
inc
fchs
imull
into
pushl
add
imul
in
daa
xchg
add
fnclex
push
dec
leave
jmp
push
mov
test
push
movsb
lret
pop
jne
int3
jecxz
cli
es
mov
jl
fwait
mov
mov
and
cld
push
dec
jae
and
inc
cmp
cmp
mov
daa
pop
adc
mov
mov
lret
std
scas
imul
cmp
cmpsb
lock
mov
outsb
dec
mov
cmp
adc
addr16
fiaddl
in
push
inc
adc
ljmp
cmpsl
addl
sub
cld
pop
lea
push
push
add
jecxz
add
or
fwait
scas
push
movsb
int3
dec
loope
xchg
mov
push
fwait
stos
fmull
mov
in
int
bound
fsubrl
adc
shlb
sub
clc
repnz
cli
andb
in
inc
repnz
pop
cmp
mov
and
int3
add
xchg
and
pop
repz
jnp
mov
test
pop
neg
cld
add
scas
repz
jns
jne
addb
dec
push
or
dec
or
push
cmp
cmp
aad
jbe
fs
repz
fisttpl
test
adc
sub
sub
or
ret
jne
mov
cmp
fistpl
shll
rcrb
shl
cwtl
adc
dec
jb
jge
cltd
mov
adc
in
shlb
cmp
dec
adc
push
cltd
pushf
popf
loopne
lds
or
cmpsl
jne
xor
js
pushf
in
mov
push
fsubs
pop
mov
rclb
sub
mov
int
xchg
push
sbb
shlb
and
adc
mov
dec
scas
add
mov
dec
sbb
sbb
add
loope
fists
outsl
mull
mov
insb
xchg
mov
jle
push
loop
push
gs
test
shll
mov
jbe
inc
xchg
ljmp
mov
ret
add
pop
push
or
sub
sub
stos
in
dec
sub
adc
loopne
insl
mov
dec
and
icebp
adc
mov
xchg
push
fwait
sbb
inc
pop
out
clc
repz
shlb
in
inc
out
shl
cltd
add
push
shlb
push
iret
xor
mov
sahf
dec
leave
cwtl
popf
push
mov
inc
fwait
adc
loope
lahf
hlt
xchg
in
xor
pushf
lods
sub
push
dec
ljmp
aad
test
push
mov
or
mov
push
fs
cmpsl
rcll
loopne
mov
sub
sub
gs
lret
ds
jbe
popf
mov
push
mov
mov
mov
ja
aaa
jbe
imul
mov
jbe
jmp
into
xchg
mov
adcl
repz
std
push
addl
adcl
xor
addl
jb
sbb
cmp
jp
pop
xor
jmp
mov
jmp
rorl
popf
dec
arpl
dec
shll
jecxz
ret
mov
and
and
xchg
adc
inc
adc
sbb
pop
and
pop
es
cmp
dec
aaa
lcall
in
xor
inc
mov
das
jmp
cli
gs
ret
jp
and
jl
ljmp
pop
out
addr16
jg
sub
lods
pop
repz
ficoms
std
cmp
testl
fstl
push
add
loope
rcr
jge
jns
inc
fcompl
rorl
cmpsb
stos
cmpsb
lcall
xchg
mov
call
pop
and
xlat
sbb
aad
dec
fs
test
fcmove
fisttpll
negl
fwait
push
leave
mov
sbb
xor
ljmp
jnp
loop
or
lret
jbe
iret
icebp
aam
mov
loope
es
xchg
pushf
push
imul
adc
ds
loope
and
repnz
cmpsl
insb
pop
mov
pop
inc
cs
lret
and
imul
mov
sub
dec
jbe
mov
and
loop
stos
add
dec
cltd
adc
mov
or
lret
pop
dec
stos
in
push
sbb
cs
fisubrs
pop
rolb
xor
push
mov
mov
cmc
cmp
add
enter
lret
out
jne
lcall
out
out
add
sbb
mov
inc
rclb
mov
fimuls
mov
push
inc
xchg
adc
push
sti
data16
fmuls
in
push
enter
xchg
pop
mov
ret
in
sub
mov
or
ljmpw
loop
cmc
daa
sub
fildl
cltd
dec
jb
notl
rorl
int3
dec
jge
dec
jae
sbb
arpl
js
dec
inc
fadds
pop
inc
in
es
imul
xchg
in
mov
jb
cld
lock
dec
aaa
in
jbe
test
pop
data16
inc
in
repnz
rclb
jg
xor
lea
sti
stc
cmp
push
in
nop
mov
mov
push
ljmp
mov
stc
or
insl
sbb
test
inc
inc
jg
imul
pop
aaa
sbb
mov
hlt
jnp
xchg
jo
setle
add
push
cwtl
xchg
mov
or
je
out
pop
xchg
fisubrl
jp
xor
add
addr16
sahf
icebp
mov
cmpsl
test
pop
sub
and
fdivp
push
sub
dec
dec
ljmp
dec
dec
imul
mov
mov
sahf
add
mov
rol
mov
ret
inc
sub
sbb
test
aad
lahf
rclb
xchg
inc
inc
push
xor
mov
psubb
aas
out
pop
mov
sbb
cmp
loop
stos
sbb
mov
stos
mov
mov
sbbb
xchg
jl
in
stc
lods
jge
insl
lahf
test
jae
mov
aas
fmull
adc
or
lea
add
ds
rol
nop
adc
int3
or
adc
in
pop
fucomip
push
dec
fwait
repnz
cmpsl
sub
dec
sbb
ja
xchg
rcrb
fcmovne
fadd
imul
mov
sbb
mov
mov
jo
test
jp
aad
shlb
hlt
dec
adc
push
outsl
dec
mov
scas
push
scas
mov
loopne
and
inc
insl
sub
ds
mov
push
sbb
mov
shlb
hlt
inc
jns
mov
or
add
mov
mov
mov
test
dec
sub
lcall
ljmp
arpl
in
popa
daa
pop
inc
mov
aad
scas
subl
mov
xchg
stc
mov
clc
mov
jge
inc
cmp
aam
rcl
jns
pop
imul
pop
mov
enter
cmpl
pop
pop
adc
mov
jb
dec
push
les
outsb
gs
scas
pop
ss
cmc
mov
outsl
test
inc
pop
jg
ljmp
mov
ret
into
fidivs
mov
cmpsb
mov
xor
pop
testl
add
shll
jp
leave
xor
mov
lods
call
scas
cwtl
negb
fists
xchg
out
testb
dec
aam
aaa
sub
xor
inc
and
jp
cmp
push
xor
ss
or
jle
repz
xchg
jecxz
sub
out
fdiv
push
and
xchg
aas
push
cs
fisubl
add
je
pusha
adc
push
lea
cs
ds
pop
mov
and
mov
sbb
mov
lret
mov
mov
jp
xor
hlt
sub
mov
xchg
cmp
push
mov
jge
std
pop
push
or
cmp
sbb
std
aaa
xor
adc
es
push
cmp
cmc
rorb
inc
stos
movsb
fs
ja
pusha
jns
in
xor
lahf
sti
jle
scas
ljmp
pop
mov
sbb
cld
call
jno
repz
sub
cmp
stos
ret
mov
int
and
mov
cmp
jge
xor
push
shlb
xchg
sahf
cwtl
call
xor
divl
mov
push
cmp
popa
and
adc
adc
pop
mov
sub
cmp
and
fs
xor
pop
sbb
dec
addr16
cmp
and
lcall
test
ss
push
add
cmp
jmp
setg
cmpsl
pop
lahf
cmp
jns
mov
test
mov
shrb
leave
or
repz
mov
jmp
imul
jne
fisubrs
ja
mov
push
push
dec
mov
loopne
mov
add
popf
xlat
call
data16
or
cwtl
add
and
data16
xor
dec
add
xchg
mov
rcr
inc
dec
rorb
sarb
push
or
mov
dec
cmp
sub
adcb
sub
out
inc
insb
je
mov
sbb
jbe
popa
jecxz
lahf
push
sbb
mov
sub
iret
xor
sbb
push
adc
fwait
gs
jbe
mov
out
adc
enter
in
pusha
popa
ret
testl
into
cmp
subb
loop
mov
cld
mov
mov
dec
ss
mov
xchg
lods
arpl
fisttpl
xor
test
xor
mov
stc
push
ds
enter
in
mov
lret
stos
fiadds
scas
adcb
pop
hlt
push
mull
jmp
add
lods
inc
jbe
notb
idivl
jecxz
outsb
sbb
and
cmc
dec
inc
and
jp
fbld
mov
std
jge
and
shll
mov
popa
mov
clc
in
dec
xchg
sbb
loope
jae
mov
mov
repz
push
fisttps
pop
stos
ljmp
xchg
movsl
push
lret
push
sahf
jno
icebp
xchg
and
pop
iret
sub
stc
mov
add
daa
mov
ret
xchg
fiadds
fs
and
clc
sub
pop
int3
cltd
mov
inc
cmp
mov
mov
mov
cmc
pop
fwait
jo
outsl
jmp
inc
fucomip
mov
pop
cld
in
lcall
popa
cmp
xor
mov
mov
xchg
enter
movsb
lods
pusha
inc
orl
in
into
sub
cmpsb
cmpsb
lea
push
mov
and
jnp
jge
cmp
in
out
push
into
jb
mov
mov
test
sbb
jl
pop
xchg
mov
cmpsl
jne
shl
nop
xchg
daa
rorb
inc
xchg
xor
mov
and
sbb
lea
rcl
ljmp
mov
sub
lcall
xchg
call
pop
aam
stos
mov
xor
icebp
sbb
shrb
push
cmp
jno
rep
sbb
ret
outsl
ja
test
cld
mov
mov
mov
repnz
cltd
mov
decl
in
push
sbb
dec
loopne
pop
cltd
pusha
and
icebp
pop
pop
les
sub
inc
loope
test
dec
divl
and
push
mov
mov
cmp
sub
lret
sub
cmp
sahf
jo
inc
out
sub
imul
sbb
mov
mov
push
inc
mov
mov
cmpsl
push
jg
mov
mov
movsb
mov
jmp
mov
lods
fs
push
fisubrs
fucompp
add
push
out
jne
leave
push
mov
movsl
ljmp
dec
insb
mov
mov
in
int3
xchg
int3
test
mov
fstpt
mov
jl
iret
xchg
mov
mov
in
popa
ljmp
jb
mov
pop
cli
jle
mov
dec
leave
xchg
int3
icebp
cs
mov
aaa
out
mov
cli
icebp
dec
sbb
adc
clc
sti
out
mov
das
sbb
outsb
mov
adc
pop
test
add
gs
test
and
arpl
mov
or
imul
jae
pop
xorl
lcall
mov
fdiv
loop
xchg
aam
in
pushf
inc
mov
neg
push
add
fucomp
int3
push
arpl
cmpb
mov
loopne
xor
clc
xchg
mov
jns
pop
inc
mov
dec
rcrl
adc
sub
xchg
mov
pop
push
adc
mov
test
nop
lock
emms
or
xor
pop
test
inc
mov
inc
inc
jns
cmp
add
in
jae
insb
shrb
mulb
and
xchg
out
xorl
sub
fdivs
and
lcall
leave
add
scas
in
cmc
cmp
arpl
fbstp
int3
addr16
and
clc
inc
ret
pop
pop
jae
xchg
scas
cmp
dec
push
les
adc
jns
popa
shrb
hlt
and
subl
jl
push
pop
lahf
leave
stc
imul
mov
inc
xchg
and
mov
pop
ja
jge
ss
sub
rolb
mov
subb
sub
xchg
xchg
mov
inc
fs
push
sub
test
xor
mov
sub
push
pop
test
or
sub
sub
cmp
cmp
xor
dec
insb
pop
pusha
jno
xchg
mov
push
pop
pushf
jne
sub
into
xchg
pop
xchg
movsb
mov
cltd
mov
ret
mov
dec
arpl
pop
push
lds
mov
out
arpl
dec
pusha
push
ljmp
mov
cltd
gs
add
xlat
out
mov
sub
jno
push
enter
jne
add
sbb
xor
push
inc
xchg
and
mov
push
add
sub
push
add
xchg
lahf
or
push
jne
lods
lcall
push
orb
push
ret
test
sbb
push
mov
out
in
jno
dec
jbe
in
enter
ljmp
push
mov
ljmp
sub
popa
xchg
adc
hlt
sbb
fcoml
sub
outsl
adc
mov
test
pcmpgtd
cmp
xchg
scas
adc
adc
dec
jecxz
and
mov
jecxz
addl
dec
mov
cmp
cmp
jne
jb
push
fidivs
mov
out
xchg
jb
xchg
adc
ja
not
push
jne
dec
sahf
lcall
inc
add
sub
outsl
test
adc
sub
and
xchg
push
dec
xlat
bound
das
or
push
or
clc
and
repz
pop
jo
and
pop
lea
lahf
add
aam
xchg
cld
test
xchg
fwait
outsb
dec
popf
dec
lcall
punpcklwd
mov
test
cmc
adc
push
xchg
fnstcw
dec
fadd
push
lret
and
loop
arpl
cmpsb
push
jge
xchg
sbb
shrb
aaa
inc
jns
pop
and
jns
cmpsl
subb
dec
fisubl
ror
fwait
mov
xchg
adc
xlat
mov
data16
mov
jnp
sbb
xchg
sti
and
movsb
test
cmp
jg
and
rcrl
aad
lods
arpl
sti
mov
inc
bound
add
or
and
cmpsb
roll
mov
stos
xlat
fidivrs
jns
mov
adc
cmpsl
xchg
stos
or
jbe
push
xchg
clc
jle
mov
mov
mov
mov
pop
jns
ljmp
enter
int
jbe
ret
std
js
cmp
ja
mov
sbb
fisubl
cmpb
cli
aaa
fsts
imul
data16
aad
pop
pop
mov
cld
sbb
add
in
pusha
xor
xor
push
sahf
fst
cmpsl
aas
iret
lret
movsl
dec
arpl
addr16
repnz
push
pop
pusha
decl
mov
jno
cwtl
adc
xchg
pop
add
lds
push
push
rcrl
dec
cmp
mov
adc
mov
or
xchg
pop
fisubrs
fwait
xorl
imul
rclb
int
cltd
rcrb
cmp
cmp
push
mov
rol
inc
xchg
loope
aad
xchg
mov
insl
mov
mov
fisttpll
xchg
int
adc
jnp
in
sbb
adc
and
adc
lea
fimuls
test
jp
rcrl
cmpsb
mov
xchg
push
adc
incl
xor
mul
imul
leave
add
fmuls
test
ds
sbb
ljmp
incb
jno
notl
mov
stc
sub
mov
ficoms
in
es
lds
aaa
addr16
popf
rclb
mov
call
and
movsl
or
cmp
jl
iret
pop
cmp
cmp
and
dec
mov
jle
push
clc
pop
pop
pop
mov
ret
pop
inc
pop
mov
imul
adc
stc
jnp
aaa
dec
rolb
shr
addr16
pop
aaa
push
roll
push
inc
jg
je
fsts
jne
out
stc
jp
mov
enter
test
int
adc
cwtl
orl
inc
scas
inc
imul
in
rol
insl
xor
xor
sub
loopne
rcrl
sub
hlt
sub
int
cmp
fmuls
jnp
jbe
arpl
fcompl
rcl
sub
xor
inc
push
test
lret
xchg
fidivl
adc
xor
or
push
stc
leave
hlt
sbb
jecxz
fstl
stos
shl
xchg
fwait
fwait
sti
push
cmp
lds
xchg
dec
jnp
add
dec
cmp
icebp
pop
cmp
outsb
mov
sbb
dec
stos
xor
mov
aaa
pusha
stc
push
orl
shl
movmskps
cmp
mov
aas
mov
popf
cmpsl
movnti
ficomps
push
and
add
rcl
cmpb
sub
jmp
xor
sub
adc
mov
pop
cmp
pop
or
mov
sbb
cmp
rcl
dec
push
ja
xchg
sub
outsl
jg
ja
cs
push
sbb
mov
mov
jmp
mov
mov
sbb
arpl
mov
pop
pop
cli
movsb
popa
mov
fsincos
add
mov
push
jb
adc
and
mov
inc
rcrl
frstor
mov
jp
xor
cmc
and
and
or
lahf
sahf
sbb
dec
pop
mov
iret
add
ftst
cli
jno
out
jne
adc
or
and
and
and
mov
imul
push
cmp
lret
jne
sbb
movsb
test
ficomps
jno
pop
aad
mov
xchg
xor
add
pusha
sub
xor
fdivs
add
add
mov
dec
jo
mov
mov
jge
sub
in
mov
xchg
roll
dec
add
sub
jb
push
adc
jle
int3
cmpsl
aam
push
xor
jge
sub
push
or
aam
sub
push
mov
out
fs
xchg
cltd
push
cmp
sbb
ficoms
sub
mov
outsl
inc
or
popf
pop
out
sti
sarl
xor
lret
bound
jl
pxor
sbb
outsb
cmp
out
inc
fwait
inc
xlat
idiv
arpl
ds
add
adcl
mov
hlt
push
push
add
arpl
mov
add
pop
jge
dec
aas
rorl
into
aaa
sbb
dec
shl
push
lds
int
inc
sti
movsb
pop
xchg
dec
or
mull
xchg
jae
movsl
cwtl
jg
in
cmp
lock
outsb
pop
test
outsl
mov
dec
jp
or
shlb
push
stos
xchg
cmp
pop
pop
lahf
mov
scas
lods
mov
jge
in
test
lods
and
adc
pop
ja
pop
jp
xchg
das
negl
scas
push
rorb
filds
jp
repnz
xchg
ds
dec
pushf
into
mov
pop
out
cmpsl
sbb
cmp
cmp
je
lock
iret
rcrl
inc
cmpl
and
pop
je
mov
push
ds
push
adc
pop
mov
jmp
pop
fldt
fsubl
rclb
lahf
mov
fstl
jb
sbb
push
loope
push
add
clc
xlat
lods
dec
les
incb
fbstp
bound
imul
pop
jne
inc
jl
mov
rcl
gs
push
bound
leave
add
push
fwait
subl
xchg
or
insb
or
or
dec
int3
hlt
addr16
jns
cltd
mov
cltd
int3
pop
pop
shrl
insl
lea
lret
add
lods
push
sbb
je
push
pop
and
add
sbb
and
pop
ret
mov
add
lods
jae
icebp
mov
jae
jg
pop
push
addr16
cmc
xchg
lock
pop
in
push
mov
movsl
jmp
push
pop
es
dec
push
mov
subb
ljmp
arpl
ds
mov
jmp
leave
jb
dec
and
sbb
ret
test
pop
mov
xor
lcall
loop
movsl
cmpsl
or
sbb
addb
and
sarb
bound
xchg
aam
cmp
enter
sbb
push
mov
or
pcmpeqw
jae
xorl
into
jp
cmp
aas
pop
cmp
lcall
ljmp
cmp
icebp
pop
dec
ret
and
mov
pop
mov
mov
xchg
ret
xchg
cmpsl
push
xor
dec
pusha
add
fsts
push
xchg
add
pop
xchg
xlat
pop
add
mov
dec
std
test
jmp
js
jg
ja
insb
sub
sub
dec
fists
xor
in
imul
dec
loope
push
mov
sub
scas
xchg
scas
movsl
dec
jne
in
je
aad
push
mov
jg
mov
loop
in
xor
divl
sti
hlt
out
pop
popa
test
pop
or
sub
lret
sub
je
xchg
pop
cmc
in
xor
add
inc
xchg
mov
daa
pop
or
mov
pusha
cmpb
call
hlt
add
push
dec
jle
inc
lock
sub
sbb
jp
add
xchg
pop
lods
mov
xor
in
sub
mov
fcomip
sbb
icebp
jl
xor
and
xor
mov
jp
cmp
icebp
sbb
loopne
xchg
pop
leave
lods
stc
aaa
ret
and
pop
nop
mov
push
imull
ret
arpl
or
jno
repz
pop
das
pusha
sub
push
lods
jae
sub
ljmp
fwait
outsl
sbb
xor
rcl
jnp
hlt
adc
or
xlat
mov
jo
lods
jne
lret
aad
sahf
cmp
fdivs
pushf
push
sub
cmc
dec
ljmp
out
jbe
pushl
mov
hlt
in
jns
mov
lods
movsb
iret
cmp
cwtl
jae
movsl
ja
loop
mov
xor
cltd
dec
out
mov
mov
cmp
nop
repz
mov
mov
in
jle
addr16
mov
movsb
xchg
mov
out
mov
mov
jmp
add
add
add
sbb
ss
sub
dec
xor
das
in
add
dec
popa
push
lods
mov
jge
punpcklbw
cmp
aaa
bound
cmpsb
mov
faddl
jg
add
sbb
xchg
lds
push
xchg
sub
movsb
and
xchg
and
xor
or
mov
loope
loopne
test
mov
lock
jmp
xor
cmp
mov
shlb
mov
sub
push
and
pop
das
xor
lret
pusha
cmpsl
stos
dec
and
stc
push
adc
pop
add
mov
int
fwait
xchg
or
jmp
mov
jno
mov
hlt
jnp
add
xchg
adcl
xlat
push
dec
mov
mov
cli
mov
mov
inc
das
xchg
popf
dec
int
cwtl
ret
and
fistpll
test
xchg
int3
lahf
lret
rorb
inc
mov
stc
scas
ror
pop
adc
adc
jmp
xlat
mov
push
shll
dec
mov
xor
dec
pop
fildl
inc
mov
pusha
mov
xchg
inc
inc
pop
aad
scas
lret
xchg
push
push
mov
pop
mov
or
jp
ss
add
pop
xchg
sti
inc
ss
xchg
xchg
cmpsl
jns
insb
mov
outsl
loopne
or
sbb
sub
or
dec
jmp
inc
adc
cmp
jmp
lea
push
cmpsb
ja
scas
testb
out
fs
inc
hlt
aad
rcr
scas
mov
dec
test
mov
mov
out
rclb
bound
xor
popf
out
xor
xchg
lret
ds
and
cmp
mov
pop
adc
leave
inc
test
sti
stos
ja
mov
inc
add
xor
mov
cmp
pop
sbb
cs
sti
sbb
clc
xchg
add
pop
mov
iret
cmpl
push
or
mov
and
decl
test
or
cmc
in
xchg
inc
push
mov
jg
and
inc
in
xchg
sbb
mov
pop
dec
insb
arpl
pop
jb
cmp
and
xor
jo,pt
xlat
jo
pop
inc
fwait
adc
roll
xchg
dec
std
and
or
ja
std
xchg
inc
xchg
pop
xchg
push
dec
out
and
dec
iret
insl
push
loope
shrl
add
fidivrs
jns
ljmp
aam
ret
addb
add
faddl
mov
xchg
inc
in
insb
gs
lcall
sub
mov
mov
or
dec
xchg
add
inc
fprem
dec
inc
and
test
pop
push
shlb
jnp
imul
enter
icebp
push
aaa
sbb
adc
and
adc
or
lret
adc
mov
fldcw
jae
aad
nop
mov
push
and
lret
clc
sub
inc
push
pop
cld
loop
stc
xor
mov
push
imul
cwtl
inc
jns
inc
das
rol
nop
in
popf
or
out
fwait
xorb
bound
adc
loopne
loopew
jmp
iret
pushf
call
and
pop
bnd
std
jecxz
add
iret
cmpsl
mov
and
push
push
xor
cmp
sbb
out
sub
mov
das
pop
cs
je
jmp
sbbb
int
pop
jg
inc
mov
xlat
dec
or
loope
mov
or
jmp
adc
jmp
inc
repz
out
inc
jb
jle
dec
in
xchg
pop
push
outsl
aas
lea
sbb
ss
arpl
inc
pusha
ljmp
add
outsl
xrelease
inc
outsb
push
dec
insb
add
pushf
test
inc
inc
cmp
into
outsl
out
sahf
les
mov
fimull
cli
mov
adc
repnz
std
lcall
jae
je
sbb
push
lahf
add
daa
scas
insl
or
jo
xchg
mov
insb
mov
push
dec
lods
mov
inc
jp
xchg
aam
and
js
gs
ljmp
jno
arpl
arpl
cwtl
push
cmp
inc
sub
frstpm(287
mov
jne
adc
push
scas
push
ds
mov
arpl
mov
push
mov
and
test
adc
cmp
sub
adc
cs
aam
and
mov
insb
pop
rorb
push
out
int3
mov
arpl
inc
adc
and
mov
sbb
lret
xor
jnp
sar
xor
xor
and
xor
dec
jae
xchg
mov
lods
push
jl
dec
pop
test
dec
xor
sbb
pop
sarb
cltd
and
mov
fiaddl
loope,pn
mov
adc
jno
cmp
mov
jne
mov
pop
stc
cltd
shr
in
push
push
xchg
pop
sub
lds
xor
sti
sub
popf
jnp
in
jb
jbe
test
loop
jns
adc
jmp
add
mov
push
cmp
cs
lds
mov
fcmovbe
or
lcall
fwait
or
jae
test
sbb
mov
cmpsb
pop
rcrb
mov
call
xor
jmp
mov
pop
int3
jae
es
aad
leave
push
push
imulb
push
scas
pop
in
jle
insl
jmp
pusha
push
cmp
mov
xor
mov
popa
jb
ds
push
inc
ljmp
xchg
data16
icebp
xchg
shlb
mull
fildll
sbbl
mov
mov
mov
adc
sub
movsb
insb
add
mov
xor
or
scas
ds
int
insl
sub
out
and
mov
aas
push
cld
cld
test
jmp
cmpsb
and
mov
or
rorb
adc
imul
mov
push
js
sbb
xor
cmpsb
out
in
in
popf
in
push
out
mov
mov
sbb
daa
shlb
in
ljmp
mov
ss
mov
xor
xor
push
addr16
push
je
ljmp
sub
stos
mov
aad
test
push
fcompl
add
pop
les
jmp
add
imul
mov
dec
cmp
adc
mov
mov
pop
inc
repz
aam
es
inc
lods
fidivrs
shlb
add
push
or
adc
aaa
shrl
hlt
stos
jb
mov
or
sti
cmp
sub
fstps
inc
adc
loop
rcrl
xchg
and
pop
sbb
mov
push
sbb
mov
hlt
sti
mov
mov
jae
mov
data16
push
pop
cmp
out
fistpll
jl
and
subb
push
lods
imul
jp
push
iret
push
scas
rorb
testb
lods
ficoms
cmpl
ret
jbe
xlat
je
mov
sbb
and
iret
shll
test
push
pop
cmp
dec
fnsave
arpl
xor
push
stos
sbb
lock
loopne
xchg
frstor
xchg
jb
push
and
scas
dec
and
cli
fucomi
ret
das
cltd
add
stc
lock
inc
sub
in
enter
jecxz
dec
jne
sbb
sub
pop
xor
push
push
cld
jnp
mov
pop
adc
push
mov
sbb
es
movsl
mov
jae
movsb
fdivs
lock
pop
out
jno
roll
jnp
mov
lret
inc
int3
jns
add
gs
ret
and
push
lock
push
int
lahf
ja
xchg
add
lahf
adc
psllq
iret
out
loopne
inc
out
sbb
mov
pop
loope
fidivl
push
icebp
int
sbb
mov
dec
mov
mov
add
cmp
int
xor
fmuls
and
test
in
xchg
push
mov
daa
lock
bound
xchg
cmpb
dec
adc
mov
data16
or
scas
mov
fwait
or
push
mov
sahf
or
scas
std
into
xchg
pop
xchg
ss
fisttpl
mov
daa
aaa
mov
jg
insb
pop
out
mov
std
iret
xchg
subl
es
add
adc
std
or
push
dec
pop
pop
mov
loope
xlat
outsl
xchg
xor
cmp
sbb
sub
push
adc
add
rolb
xor
in
inc
lods
xor
aam
mov
pop
push
pop
push
outsb
scas
dec
dec
xchg
push
mov
pop
sub
sahf
xchg
clc
inc
decl
cltd
jge
dec
jb
arpl
mov
jmp
xchg
mov
mov
jp
mov
push
or
cmp
inc
mov
push
in
jnp
pop
jnp
mov
mov
jns
dec
aad
adc
movups
fcoml
sub
leave
and
cmp
fcom
add
mov
lods
insl
sub
push
movsb
repz
xorb
mov
movsl
mov
mov
popl
clc
xor
lret
insb
mov
loopne
cmp
aad
mov
pop
iret
mov
lcall
push
in
jl
xor
mov
sub
dec
sbb
aam
pop
mov
in
in
sahf
add
sub
fisubrl
out
insb
movsb
sub
cmp
pop
call
imul
stos
mov
mov
push
jbe
lods
push
or
lods
inc
repz
jnp
cmc
xor
fdivs
jmp
or
cmp
test
mov
xchg
pop
xchg
adc
fdiv
outsl
jl
inc
outsb
imul
test
jmp
mov
cmp
imul
adc
orl
jnp
aam
jge
outsb
adc
mov
roll
cmpsb
mov
sub
scas
aam
in
pop
mov
dec
jmp
dec
jns
lcall
push
sbb
xor
sbb
mov
icebp
push
lret
and
in
roll
lahf
in
iret
in
sub
jl
mov
aam
out
loope
jecxz
punpckhwd
cmp
mov
sti
inc
dec
pop
push
fcoml
jnp
flds
xlat
sahf
xor
mov
aam
cmp
out
jp
fnstenv
jns
dec
push
cmc
sti
fsubrp
cmp
imul
loop
pushf
aad
in
add
mov
test
sbb
cli
enter
sub
pop
lds
cld
or
jns
mov
lock
data16
add
push
shl
fdivs
inc
xor
dec
add
push
mov
out
in
jl
mov
in
notl
div
popf
pushf
inc
nop
sbb
xchg
mov
ss
fs
fisubl
idiv
lds
push
pop
cmp
aad
cmc
push
or
lret
inc
sub
pop
out
in
ljmp
xchg
mov
lods
repnz
add
add
inc
es
ljmp
push
into
sub
jo
mov
push
mov
or
pop
push
aam
inc
fwait
xchg
fldt
push
lcall
fimuls
dec
inc
fisubs
mov
cmpsl
dec
rcr
pop
es
push
adc
dec
test
mov
mov
stc
pusha
add
jnp
pusha
xor
push
add
push
test
lods
xorl
insl
mov
cmp
mov
stc
xor
push
add
jnp
ds
in
cs
add
and
or
scas
xor
pop
scas
imul
call
inc
inc
add
push
or
xchg
outsb
inc
sub
loopne
xchg
mov
mov
lret
popf
jo
ljmp
insl
mov
push
pushf
xchg
test
mov
cmc
mov
dec
jle
xchg
inc
repz
xchg
js
mov
cmp
mov
fsubl
dec
and
push
es
mov
push
and
jle
inc
jmp
cmpsl
std
dec
jl
cmp
out
sbb
mov
jb
push
add
jp
bound
in
add
int
push
jecxz
or
dec
dec
fldl
lret
or
fsubrs
mov
dec
and
and
cli
fsubr
xorl
mov
pop
mov
inc
cld
sub
dec
push
cmp
dec
and
sub
test
push
sbb
sahf
or
pop
cltd
fwait
sbb
jg
jp
pop
sub
mov
cld
in
mov
rclb
pushf
xchg
pop
mov
das
mov
cmp
jle
ja
xchg
xchg
push
fwait
test
and
and
sub
push
inc
pop
fcoms
xchg
clc
andb
adc
jle
adc
fs
push
push
push
xor
inc
push
in
xor
lahf
les
mov
outsb
adc
insb
xchg
fidivs
movsb
rclb
imul
lahf
lret
in
cmp
mov
out
pop
dec
fdivs
pop
mov
and
cli
mov
nop
add
mov
jne
dec
adc
stc
testl
outsl
sti
inc
mov
les
mov
sub
pusha
lahf
nop
sub
adc
add
mov
das
popf
pop
xchg
cmpsl
jae
pop
fucomip
sbb
mov
sub
adcl
sub
mov
lods
insl
mov
popa
xlat
jne
jl
into
push
inc
lods
xlat
fsubr
push
ret
mov
mov
mov
mov
lods
in
and
lret
mov
sbb
or
jnp
nop
out
insl
push
mov
hlt
lahf
or
call
das
into
mov
std
loope
jmp
mov
push
pop
andl
lcall
aas
ljmp
xchg
addr16
ds
outsb
mov
adcb
sbb
hlt
jecxz
sbb
cmp
loope
gs
mov
lcall
sbb
pop
push
sub
jecxz
sub
fadds
mov
adc
in
jl
vpshab
push
lds
ret
push
inc
insb
push
push
inc
adc
mov
lock
mov
inc
movsl
pop
mov
movsb
push
cld
xchg
xchg
icebp
loopne
add
jbe
jne
lea
sbb
xchg
shll
insl
pushf
cmp
mov
dec
je
aad
cmp
stos
rorl
or
mov
scas
cmp
inc
hlt
mov
pop
movsl
xchg
inc
fldt
sub
add
aas
push
fmul
les
ret
sub
inc
jno
addr16
mov
or
test
inc
incl
iret
and
clc
loope
insl
bound
call
add
adc
outsl
fwait
ja
sbb
sbb
push
pushf
cmp
or
or
das
movsl
mov
enter
pop
out
jecxz
ds
stos
daa
xchg
dec
push
push
adc
stos
fisubs
inc
into
in
hlt
or
sarl
insb
cs
dec
dec
adc
bound
sbb
aad
adc
xchg
xor
popf
sahf
stos
jo
aam
push
pop
fildll
cmp
rcll
movsl
cmp
push
les
cmp
mov
push
js
jo
jge
in
push
jecxz
push
inc
mov
sbb
or
mov
stc
pop
hlt
adc
dec
lods
repnz
es
mov
popf
imul
mov
bswap
pop
mov
fimuls
xor
or
and
out
sbb
mov
sub
lret
jb
outsl
push
mov
ljmp
cs
cli
jp
or
fisttps
adc
fsubl
stos
pop
leave
add
dec
cs
nop
loop
loopne
sahf
gs
lahf
xor
fnstenv
and
or
inc
outsb
shrb
movsl
add
mov
lods
loopne
pop
fwait
repz
jge
xor
popl
fld
test
stc
inc
push
xor
enter
ficoms
inc
and
and
negl
pop
adc
xchg
out
das
push
pop
fadd
mov
loopne
sbb
xor
add
in
mov
adc
lock
lods
push
test
xor
add
add
test
es
inc
nop
call
xlat
in
cmp
xchg
cwtl
pop
sahf
xchg
sbb
pop
cld
cmpsl
cmc
cld
rclb
or
adc
xchg
mov
cli
repz
mov
loop
xchg
push
and
xlat
fnsave
jne
out
adc
lahf
subb
cmpsb
add
icebp
data16
jno
jmp
int3
pop
out
sbb
aaa
mov
sbb
adc
in
fdivrs
xor
rcr
xchg
fstl
sbb
mov
xchg
and
pop
loopne
into
in
add
add
xor
cld
sbb
sub
imul
xlat
pop
insl
test
mov
sbbb
ja
jmp
out
xor
cli
arpl
rclb
jbe
and
popf
sbb
mov
dec
dec
pop
sahf
lock
or
xchg
sarl
sub
ljmp
lods
data16
into
insl
sar
arpl
mov
add
lret
pop
push
cwtl
lods
jne
xor
pushf
add
or
test
iret
xor
cmpsl
stos
pop
add
in
out
mov
sbb
mov
ss
idiv
dec
outsl
in
shlb
ret
addl
sahf
imul
pop
mov
push
jecxz
out
ss
jecxz
inc
out
fstpl
jp
mov
pop
mov
inc
fisttpll
jmp
mov
nop
mov
pop
iret
fcoml
addb
sbb
gs
add
in
outsl
xchg
sti
into
jns
push
and
push
loopne
pop
mov
jecxz
or
aaa
pop
pushf
mov
push
and
sbb
gs
stos
loop
dec
pavgw
clc
pop
ds
in
cmpsl
dec
fstps
push
loopne
xor
in
xor
insl
inc
popa
lret
pop
mov
mov
fs
inc
dec
and
pop
mov
jl
cmp
xchg
cs
xchg
je
loope
or
pushf
xchg
mov
scas
or
mov
and
bound
sbb
mov
loopne
pop
jg
and
imul
stos
dec
lods
clc
xchg
mov
cmp
in
insl
jle
mov
jecxz
pop
cmp
cmp
and
iret
mov
insb
inc
inc
insl
sbb
in
fiaddl
sub
mov
mov
js
aaa
inc
mov
mov
fdivs
adc
insb
out
or
jo
add
into
inc
jmp
sbb
push
push
or
jbe
mov
jecxz
dec
pusha
mov
sbb
pop
call
outsb
pop
movsb
adc
mov
adc
es
xchg
cmp
shlb
mov
jnp
and
mov
add
xchg
push
mov
pushf
add
push
loopne
je
rorl
inc
mov
mov
in
idivb
xchg
rolb
add
cwtl
sahf
pop
inc
cmpsb
cld
div
scas
mov
inc
pop
gs
popf
cmp
imul
movsl
cmp
mov
jecxz
test
and
cmpl
or
fmul
je
lock
or
test
or
jg
push
es
inc
cmpb
test
adc
sbb
rcrb
xor
cmpb
xchg
sub
mov
adc
mov
xor
add
sbb
mov
cmp
leave
aam
stos
dec
mov
flds
or
jecxz
push
popf
stos
push
fdivr
dec
cmp
or
int3
add
jle
xchg
loope
aas
inc
dec
dec
fiadds
mov
daa
test
xchg
mov
xchg
mov
mov
fsubr
pop
xor
pop
dec
divb
add
inc
loope
outsb
or
mov
vmovaps
gs
call
popa
sarb
push
repz
cmc
out
mov
aas
js
mov
jecxz
gs
out
xor
lret
divl
fistpll
cmpsl
cltd
jae
mov
jae
shlb
pop
xchg
mov
jns
out
lods
addr16
cli
add
fmull
or
icebp
or
fwait
or
js
insb
lock
cmpsb
jmp
ljmp
and
fnstenv
mov
mov
sub
mov
and
cmpsb
add
mov
out
in
cld
fidivl
out
pop
xchg
stos
imul
mov
test
sbb
fwait
inc
push
fcoml
dec
ja
and
xor
popa
or
mov
mov
stos
push
ret
fs
repz
xor
neg
cmp
enter
cmpb
arpl
add
lcall
fdivs
push
xchg
sub
xchg
es
and
ss
push
rorl
test
xor
jecxz
aaa
push
push
mulb
jnp
sbb
imul
push
shrb
mov
xor
enter
jmp
xchg
addl
mov
ja
pop
aam
or
cwtl
ds
shll
aaa
push
outsl
in
jmp
xor
jge
cmpl
xor
loopne
stc
sbb
aas
mov
sub
fs
mov
das
mov
sub
mov
stos
jmp
lds
add
mov
rcrl
in
sub
sub
mov
scas
and
int3
push
loop
pop
jo
mov
add
inc
sbb
dec
xchg
mov
mov
jle
mov
jge
int
or
outsl
stos
shrb
cmc
xor
pop
sbb
and
lds
outsl
nop
cmpsb
stos
ja
dec
push
das
push
jnp
addl
mov
inc
cmp
cmp
stc
std
or
in
ret
pop
push
xor
stos
sbb
nop
sarb
outsb
sbb
mov
divl
std
inc
push
xor
pusha
mov
sahf
pop
imul
cmp
push
gs
les
cmc
mov
fs
jno
cltd
movsb
stos
repnz
mov
pop
cmp
jb
cld
fadd
push
pop
sbb
sbb
lret
push
gs
push
mov
shlb
lcall
sbb
sub
mov
mov
loope
cmp
jb
scas
xor
or
je
jge
inc
dec
dec
dec
adc
iret
daa
xor
jb
mov
out
ret
inc
fistpll
je
sbb
mov
fimull
lahf
cmpsl
iret
and
jle
leavew
cmpsb
jecxz
lods
test
fistpll
std
dec
movsl
adc
cmc
and
stc
sub
lock
jecxz
loope
repnz
mov
cli
sub
inc
mov
cli
mov
and
sub
mov
mov
dec
cmp
jbe
push
out
mov
hlt
scas
out
jae
iret
mov
dec
lret
xor
sti
sub
fsubr
inc
sbb
jno
leave
ret
repnz
mov
shll
cmp
sub
push
jl
andl
stc
inc
jo
xchg
out
icebp
adc
ja
cltd
addr16
into
push
inc
jae
add
add
ret
jmp
cmpsb
flds
sarl
and
std
int
mov
pop
mov
xchg
sub
push
push
icebp
scas
push
hlt
cmc
mov
jle
mov
insb
into
xor
xchg
aaa
imul
faddl
add
dec
push
rcll
aam
pop
jl
xchg
lret
inc
dec
xor
xorl
jno
mov
int3
mov
xchg
mov
add
lret
test
cmp
imul
sbb
fldt
cmp
bound
xor
jns
xor
push
mov
jecxz
push
push
push
add
push
pop
ret
mov
orb
sub
enter
or
sbb
ret
mov
jns
outsl
cmp
pop
roll
and
notl
dec
pop
addr16
iret
pop
lods
jbe
js
adc
sbb
jo
ljmp
sarb
ljmp
or
daa
or
ret
clc
xchg
ds
push
push
xchg
addb
arpl
ja
aaa
add
dec
xchg
dec
mov
cs
pop
shrl
into
pop
push
pop
or
cltd
inc
cmovne
add
leave
fidivrl
mov
and
lret
push
dec
dec
rclb
loop
and
lahf
leave
dec
pop
out
xlat
jg
lea
in
shll
xor
mov
scas
jns
gs
jp
mov
jmp
imul
inc
test
data16
imul
test
sub
std
sub
ljmp
push
add
mov
xlat
and
cmp
jecxz
xchg
cld
push
xchg
jg
jecxz
push
push
push
and
lods
loop
test
or
sahf
and
test
jb
insl
int
mov
pop
popa
pop
adc
sbbb
push
xchg
sbb
enter
add
pop
push
cmp
shlb
fimuls
cmc
inc
int
add
nop
ret
dec
pop
cmpsl
and
fmulp
fistpl
dec
mov
cmp
sbb
push
test
pop
and
pop
jecxz
or
push
jmp
xor
aad
push
dec
and
daa
out
and
dec
movsb
mov
aam
fcomp
std
xchg
adc
push
sub
xchg
outsl
mov
fdivp
in
fsubs
xchg
inc
scas
jecxz
pop
loope
cs
jmp
pop
xchg
adc
lahf
pop
mov
pop
dec
sahf
ret
stos
sub
xchg
cmp
mov
dec
pop
pop
in
cmp
jmp
int
push
popf
dec
mov
outsl
lret
sbb
into
jno
push
lods
shrl
adc
jge
daa
mov
mov
stc
fstl
imul
or
add
push
mov
push
push
rcrl
pop
dec
rolb
dec
inc
cltd
adc
xor
mov
and
pop
lahf
push
inc
insb
sbb
stos
lea
aas
push
xor
fsts
cmpsl
int3
pause
into
imulb
sbb
and
dec
adc
or
mov
pop
and
test
int
test
insb
adc
ljmp
and
sti
dec
or
insb
pop
out
cmpsl
sub
or
mov
mov
xlat
push
adc
scas
cmp
into
aam
pop
cmp
inc
push
shrb
pop
int
and
mov
hlt
jb
dec
dec
cwtl
imul
inc
mov
enter
cmc
movsb
add
sarb
aad
ret
mov
lea
sahf
in
push
rcrl
mov
mov
jbe
mov
and
pop
les
mov
int3
or
jo
and
sbb
cwtl
xor
inc
insb
lods
out
pop
pop
aaa
leave
incb
jb
das
inc
cmp
or
pop
mov
cmp
adc
aas
cli
std
dec
cwtl
mov
xchg
popa
jo
mov
pop
xor
jnp
inc
icebp
push
enter
cmp
scas
xor
les
cld
adc
or
subb
mov
xor
xor
jne
adc
lds
cld
jnp
out
insb
mov
sub
cltd
ja
andl
sub
dec
sub
data16
sub
mov
push
scas
dec
xor
or
mov
sahf
icebp
cmpsl
jo
inc
int
mov
call
shl
sbb
sub
repz
add
mov
push
mov
iret
enter
in
lods
inc
lahf
shll
mov
mov
xchg
arpl
sbb
push
lds
mov
mov
inc
lret
cmp
mov
jl
hlt
adc
cli
dec
jns
test
xlat
cmpsl
jae
mov
xchg
push
jmp
adc
sarl
pop
faddl
mov
scas
add
aas
xor
test
jbe
jmp
lds
push
xchg
js
shll
or
mov
inc
jno
ss
stc
loop
adc
mov
sbb
cmpsb
inc
loope
stos
jle
leave
pop
iret
shrl
cmp
out
arpl
pop
and
sbb
dec
stos
repnz
mov
sbb
test
add
sub
int
sub
pop
inc
popf
adc
adc
stos
in
cli
mov
sbb
imul
scas
mov
movsb
cmp
fiaddl
jno
outsb
lods
push
lea
mov
pop
xchg
in
xchg
ss
fisubrs
cltd
int3
in
dec
pop
dec
enter
sub
fadds
or
jmp
dec
xor
shlb
hlt
jle
mov
sub
out
sub
mov
push
inc
jnp
sub
cwtl
xor
mov
loopne
pop
push
leave
das
and
rcr
sub
inc
jmp
jne
xlat
je
ret
test
jo
jg
push
cld
jne
sahf
xchg
fsubrp
lea
out
pop
mov
repnz
cltd
adc
adc
jno
lods
inc
dec
roll
push
dec
jl
cmp
es
sbb
dec
test
or
fwait
loope
jno
iret
adc
push
repnz
rorl
adc
xchg
stos
nop
fbld
mov
test
or
aad
ret
or
aaa
push
aam
dec
xchg
hlt
dec
jns
jne
or
mov
int
mov
add
idivl
jbe
hlt
js
jnp
xchg
gs
nop
cld
xchg
imul
sub
pop
push
jp
loope
and
xchg
xor
jne
sbb
ja
adc
pop
and
insl
fwait
and
loope
stc
jl
iret
data16
push
sbb
xor
sbb
mov
fwait
xchg
cli
lahf
mov
sub
and
aam
xlat
xchg
xor
mov
std
sbb
fcomps
pmaxsw
jns
inc
jp
and
mov
ret
mov
in
into
ret
adc
call
push
ljmp
test
adc
mov
std
jp
cld
lods
sarb
add
sub
push
stc
mov
dec
negb
cmp
cmpsb
pop
call
nop
aam
pop
inc
lock
cmpsl
loop
push
push
negb
xchg
sub
pop
paddsw
imul
sbbl
xor
cmp
pop
jmp
mov
adc
pushf
mov
inc
pop
mov
sub
adc
push
ja
pop
fstps
lret
cmp
mov
insb
das
test
cmp
imul
push
xchg
mov
jmp
test
or
ds
xor
enter
clc
and
fcmovnu
and
push
xchg
push
imul
out
cltd
ret
xor
stos
dec
mov
ljmp
mov
inc
lret
in
dec
nop
or
filds
cmp
ficoms
or
mov
fcomip
and
into
dec
scas
inc
clc
fsubrs
and
lret
iret
in
cltd
out
int
and
mov
repz
ret
jnp
cmp
xlat
xor
lods
out
inc
pop
pop
rcrl
movsl
arpl
minps
hlt
or
pop
fnstsw
mov
cmp
push
test
into
sti
jl
mov
dec
sbb
cmpsl
push
test
daa
adc
or
lds
inc
jg
pop
loop
add
cmpsb
call
scas
pop
sbb
mov
in
loopne
stos
jo
lret
mov
sub
je
sub
pop
std
movsb
sub
lahf
sub
test
cmc
push
cmpsl
loopne
sbb
xchg
test
inc
and
pushl
push
xchg
stos
sub
or
pop
scas
sub
fimull
push
cs
lahf
adc
push
push
and
mov
mov
sub
cmp
into
sub
fsubrl
out
out
pop
add
scas
and
addr16
cs
push
adc
je
cmp
out
jno
and
xchg
out
pop
outsl
loope
test
sbb
pop
xchg
rol
mov
lods
or
loop
mov
test
mov
or
push
sub
cs
inc
sbb
sbb
repz
mov
mov
mov
xor
and
mov
lret
cld
pusha
cs
test
inc
cs
inc
bound
test
inc
inc
jl
ja
sbb
cltd
jmp
mov
insb
push
push
add
mov
push
lods
fimuls
scas
call
inc
out
dec
push
add
or
pop
je
leave
jg
mov
jl
mov
push
push
fucomi
mov
xchg
clc
or
adc
mov
xchg
lds
inc
xor
inc
cmp
das
dec
loopne
jl
test
insb
or
lods
cmp
inc
popa
lods
xor
rclb
or
jge
push
mov
dec
mov
cmp
dec
dec
mov
popf
mov
mov
or
scas
mov
adc
xchg
push
decl
inc
test
insb
pop
fists
int3
mov
dec
sbb
adc
sahf
and
or
divb
jmp
pop
lods
outsl
and
data16
pop
cmp
ds
hlt
cmc
xlat
and
aam
stos
repnz
test
testb
xchg
xor
mov
xchg
in
ret
mov
jnp
dec
mov
movq
fisubrl
test
lds
aad
aad
out
mov
popa
ljmp
pusha
xorl
sub
mov
xchg
in
sbb
pop
xlat
lods
hlt
std
pushf
cld
adcb
inc
mov
jae
in
mov
or
jno
mov
xor
call
lret
or
mov
clc
adc
not
mov
push
jle
cmp
mov
mov
xchg
cmp
ljmp
xchg
js
jl
sbb
ljmp
pop
adc
les
xchg
or
das
ljmp
cli
mov
jo
leave
std
dec
imul
les
push
dec
movsb
and
push
mov
dec
hlt
fcoms
iret
js
pop
or
inc
pop
mov
cwtl
push
sti
das
sbb
in
test
mov
mov
cmc
lret
and
aaa
xor
push
xchg
push
popa
fcoml
pusha
jge
loopne
jmp
sub
ds
cmp
sbb
pop
lods
xchg
jle
jmp
mov
mov
cltd
add
stos
fcomip
cmp
test
in
mov
ficoml
mov
push
test
push
push
jge
out
fcmove
nop
out
xchg
std
xchg
push
into
cmpxchg
mov
mov
lcall
add
adc
call
sbb
dec
movsl
inc
daa
add
sbb
cmovge
xchg
mov
xchg
inc
stc
out
or
inc
cmp
push
fcmove
cmp
call
xchg
push
test
and
mov
ret
int
cmc
inc
sti
jb
pop
outsb
test
gs
or
inc
pop
fucomp
inc
outsb
push
cmp
push
call
lret
stos
lds
push
out
out
std
mov
out
fstl
into
xor
or
xor
lods
jb
sbb
test
mov
mov
addb
sbb
add
or
imull
inc
sub
push
adc
lods
mov
cmp
enter
cmp
insb
mov
mov
insl
sub
adc
jo
sbbb
or
daa
shlb
movsl
ss
dec
cld
xchg
movsl
outsl
mov
scas
popl
xor
adc
or
je
push
andb
sub
arpl
or
jb
add
and
sub
in
add
inc
mov
mov
mov
stos
add
scas
clc
or
xor
stc
xorb
pop
or
mov
mov
xor
xor
xor
movsl
cltd
test
push
or
cltd
out
xchg
pop
inc
push
jne
sarb
cmp
fcomps
push
sbb
out
pop
out
out
xor
mov
div
mov
loope
out
jnp
xchg
jae
rolb
xchg
jno
rorb
clc
mov
lods
sbb
mov
sbb
aas
jo
pushf
mov
test
nop
lock
sub
and
adc
dec
sbb
pushf
pushf
pop
push
sub
cmp
cltd
add
push
jecxz
jbe
sbb
imul
cli
mov
dec
repz
xchg
arpl
sub
dec
push
cli
jbe
loopne
ds
xchg
sarb
and
cmp
popf
rcr
add
sub
rorl
aad
and
shr
lds
xor
aam
jmp
icebp
and
xchg
in
out
sahf
push
daa
stos
icebp
mov
movsl
push
xchg
out
ret
push
dec
mov
std
test
adc
xchg
jo
sbb
imul
adc
les
and
and
lock
xchg
pop
mov
mov
mov
mov
clc
lret
sahf
sub
sub
mov
bound
insl
movsb
loopne
jle
and
jle
sbb
jl
imul
aad
jb
lods
sbb
or
lcall
pop
mov
stos
xchg
pop
ss
aaa
cmp
arpl
add
out
js
dec
outsl
daa
mov
mov
mov
cmp
scas
daa
fidivs
sarl
and
aas
xor
movsb
sbb
shl
arpl
xor
sti
pop
maskmovq
negl
movsb
mov
cmp
das
inc
movsb
lret
or
xchg
sub
or
dec
scas
push
inc
fisubrl
jne
pop
lea
dec
int3
cmpsl
aam
add
sti
daa
in
xor
pop
stc
pop
loopne
jns
xchg
or
rcr
cmp
aam
dec
inc
add
je
push
sahf
cld
add
sahf
jno
call
fldcw
mulb
sar
cmp
addl
inc
mov
insb
mov
push
jp
jbe
mov
xchg
mov
in
lret
sbb
imul
add
cmc
xchg
adc
add
jecxz
cmp
aas
mov
das
mov
insl
mov
ds
sub
inc
mov
out
in
testb
add
dec
sub
out
cmp
out
and
aam
sub
mov
add
dec
movsb
test
mov
sub
pop
sbb
movsb
out
push
pusha
hlt
loope
pushf
cs
fs
cmp
mov
mov
and
mov
jmp
iret
int3
mov
xchg
sub
push
test
and
mov
loopne
add
sbbl
pop
or
fnstsw
dec
jnp
scas
fwait
leave
mov
addr16
iret
inc
jno
sti
mov
loope
nop
movaps
adc
xor
sbb
aad
mov
test
daa
fisubl
fisubrs
adc
shll
lods
outsb
das
adc
out
sbb
out
add
sub
pop
jl
xchg
mov
pop
mov
out
rolb
je
or
or
jg
mov
dec
in
insb
and
sbb
adc
clc
xor
xchg
pop
cwtl
imul
dec
push
mov
xchg
fldl
ss
push
pop
adc
push
xchg
aam
add
cmpsb
ds
sahf
pop
pop
call
lret
imul
add
stos
jmp
mov
xchg
ljmp
dec
sub
and
stos
faddl
mov
push
js
out
xchg
js
push
pushf
xor
in
sbb
jns
adc
insb
sbb
std
loope
sub
inc
mov
lds
std
ljmp
xchg
ret
pushf
popa
push
cli
enter
notl
xor
dec
clc
cmpsb
xor
xchg
shll
push
outsb
pusha
js
pop
and
loopne
mov
sub
out
push
in
clc
mov
lods
push
pop
ret
jnp
inc
add
cld
mov
push
popa
lret
je
mov
sbb
pop
sbb
jp
popa
icebp
cltd
jle
shl
push
pop
testl
sbb
pop
mov
call
in
in
cmp
and
mov
xchg
test
test
ljmp
ja
out
dec
out
pushf
fistps
adcb
and
or
mov
xor
lcall
das
fcomps
add
outsb
fsts
repnz
sub
pusha
inc
fs
cmp
xor
icebp
mov
inc
xor
mov
jb
pop
arpl
data16
call
jmp
popf
sub
lret
push
ljmp
pop
in
push
pop
mov
out
sub
adc
mov
aad
pop
out
movsl
aad
call
dec
push
and
dec
xchg
xchg
fwait
sub
popf
movsl
push
mov
inc
scas
xchg
jmp
sbb
shl
cld
sti
loopne,pt
mov
shll
sahf
int3
xchg
mov
or
aaa
mov
dec
mov
sahf
mov
add
sahf
stc
addl
jae
imul
mov
xchg
sub
inc
push
cmc
mov
fs
in
dec
lret
ds
mov
adc
add
pop
dec
push
sbb
inc
inc
xor
mov
jnp
add
dec
ljmp
push
xor
cmpsl
add
xor
and
addr16
mov
push
inc
addl
xor
cmp
inc
insl
or
out
jl
test
jmp
add
inc
cwtl
and
adc
push
out
xorb
hlt
in
cli
inc
pop
inc
mov
mov
lods
xchg
sbb
pop
aad
jns
fs
mov
mov
jnp
sbb
add
sub
data16
add
mov
cmp
pop
into
cmp
xchg
pop
or
into
into
aas
dec
pop
or
sbb
xchg
dec
or
cmp
popf
ljmp
sbb
loope
adc
mov
cmp
dec
mov
loop
lock
testb
movsl
cmpsl
push
lret
xchg
lea
and
nop
sbb
lock
scas
cmp
test
push
insl
inc
les
mov
adcb
mov
mov
mov
dec
cld
mov
mov
xchg
add
xchg
outsl
xchg
dec
aas
mov
cld
sti
cmp
or
push
cmc
or
jns
sti
xchg
mov
out
adc
mov
pop
push
cwtl
xor
xchg
lds
mov
sbb
push
jnp
lock
iret
push
fidivrs
and
cmp
mov
arpl
sub
aad
pusha
sti
xor
in
and
repnz
pop
adc
fnstsw
push
ljmp
mov
push
outsl
mov
shll
ja
ds
ret
lds
mov
in
cmpsb
in
sub
in
stos
mov
out
fidivl
xchg
cs
pop
sbb
adc
lret
cli
je
jecxz
cmpb
lods
cwtl
test
mov
inc
iret
jle
mov
push
cwtl
lods
mov
sbb
outsb
add
lods
push
int3
dec
sbb
fwait
aas
out
test
fidivrl
add
add
sbb
adc
ljmp
into
in
push
inc
add
lcall
mov
push
ja
sbb
push
outsl
and
push
enter
pusha
adc
aam
adc
cmp
movsl
xchg
leave
icebp
mov
test
fiaddl
or
mov
add
xchg
movsl
push
dec
push
sub
push
or
xchg
cmp
sub
pushf
andb
leave
roll
add
in
xor
xor
sbb
mov
adc
dec
xchg
add
mov
adc
ds
int3
movb
loope
adc
je
ret
mov
test
lret
mov
xchg
test
rcll
mov
mov
out
add
ds
inc
xor
lods
push
push
adc
mov
cmp
aaa
pop
xor
sbb
mov
sub
sbb
mov
faddl
sub
push
cmp
or
mov
cmp
pop
xor
push
outsl
jecxz
cmp
push
loope
pop
mov
mov
mov
pop
repz
scas
push
ja
test
dec
jp
xor
gs
jbe
mov
push
retw
mov
fnstsw
jp
mov
xchg
cmp
xchg
mov
mov
adc
in
adc
pop
ss
jnp
pop
xor
es
les
gs
push
and
lret
shll
mov
sbb
push
mov
gs
inc
and
pop
fs
mov
jl
dec
jecxz
mov
sbb
jns
shlb
mov
xlat
push
cltd
dec
push
inc
cmp
pop
int
pop
jp
jb
mov
mov
push
or
xor
insb
or
lcall
jbe
int
cltd
loop
mov
cwtl
sbb
stc
push
dec
ds
pusha
cmpsb
aaa
repnz
fwait
xchg
fisubl
sti
xor
or
mov
nop
xor
addr16
icebp
cmpsl
adc
hlt
inc
cltd
mov
cmp
pop
adc
rorb
xchg
imul
leave
outsl
lcall
xor
cmp
inc
cmp
xchg
rcrl
mov
xchg
lea
fcom
sbb
fistl
out
add
or
clc
mov
cmp
pusha
insl
imul
pop
addr16
mov
into
push
jle
aaa
adc
jae
sub
xor
xchg
not
cltd
mov
pop
or
popa
mov
int3
out
mov
xlat
sub
push
aas
fbstp
mov
or
add
mov
push
push
ret
ss
test
add
cmp
push
in
loop
push
rorb
mov
mov
outsb
ret
cltd
sti
mov
and
xchg
cmp
mov
shll
scas
leave
imul
dec
sahf
inc
jne
aad
in
lcall
fadds
gs
pop
cmpsl
mov
xorb
nop
pop
sub
aas
loop
out
roll
mov
call
icebp
sub
push
or
jp
lds
cli
mov
jae
jnp
mov
inc
mov
mov
mov
fisttpll
mov
les
and
dec
cwtl
or
pop
sub
aam
mov
leave
in
aam
sub
and
in
mov
pop
addr16
push
lcall
pop
pop
adc
adc
fstpl
jbe
sbb
cwtl
dec
inc
pop
dec
dec
cltd
xor
adc
mov
aas
add
xchg
jae
loop
pop
push
leave
pushf
or
shll
daa
lods
sub
mov
pop
loopne
hlt
pop
ja
mov
shll
std
or
or
test
pop
cmp
ss
mov
orb
adc
stos
or
xorl
sahf
mov
lods
pop
insl
addr16
cmp
mov
add
sti
aam
icebp
dec
cmp
add
xchg
leave
sub
pop
je
leave
and
mov
push
loop
xchg
mov
mov
or
add
cmp
addb
or
imul
lahf
cltd
xor
cmp
stos
leave
cmp
xchg
aad
sti
jb
pop
out
cmp
fwait
ret
aad
mov
push
pop
cmpsb
cmpb
sbb
call
stc
rcr
push
cmp
or
sarl
xlat
xor
xchg
mov
cli
push
lret
fs
fwait
sub
push
or
adc
or
lcall
and
popa
daa
jne
mov
in
or
push
or
notb
jnp
mov
popf
lahf
xor
sarl
pop
jns
repz
add
sti
dec
mov
inc
push
adc
testl
or
ds
out
fidivl
bndstx
mov
jns
pop
das
xor
into
mov
dec
out
sub
fstl
call
aaa
clc
popa
jbe
push
into
mov
fisubl
cmc
cmp
out
call
sub
mov
adc
cmp
lock
xchg
sarl
push
mov
leave
sub
sbb
adc
test
mov
rcrl
xor
popf
mov
push
clc
sub
sub
lods
add
rclb
negl
mov
cmc
add
hlt
sub
dec
mov
outsb
or
testl
bound
cmp
imull
cmc
addr16
dec
outsb
mov
daa
enter
push
loop
test
adc
imul
out
mov
add
lret
xor
fsubrs
pop
mov
in
fucomip
test
inc
in
mov
jne
daa
or
aam
xor
movq
push
cmp
outsb
cli
cmp
mov
arpl
mov
mov
fsubrl
negb
in
sahf
inc
mov
add
dec
movsb
xchg
pushf
repz
push
pop
in
in
jno
sub
and
ret
cmp
fnsave
in
inc
xchg
je
ljmp
daa
adc
mov
clc
fs
sbb
add
daa
lods
mov
inc
iret
pop
pop
aaa
iret
lret
ja
jge
das
cmpsl
int
scas
xchg
pushl
and
jo
ds
mov
pop
jns
call
imul
mov
push
cmp
int
mov
addr16
cs
sub
mov
xchg
roll
sbb
mov
jp
les
xchg
aaa
std
mov
mov
in
xchg
xchg
sarl
adc
js
push
jnp
xchg
inc
inc
mov
bound
jno
mov
in
cwtl
and
xchg
cld
imul
xchg
adcl
in
outsl
imull
push
add
push
cld
jp
jmp
inc
adc
xor
mov
daa
push
fsubrs
out
pop
pop
lock
arpl
shl
pushf
shll
pop
out
cmc
xchg
mov
sub
popa
push
xor
popa
sbbb
mov
shl
mov
in
fcomps
fxch
mov
jl
mov
int
lahf
test
jno
dec
stos
enter
mov
stc
lcall
xchg
pop
pop
pop
daa
rorb
shrb
lea
xchg
popl
loopne
lock
je
push
jmp
outsl
sbb
xor
jle
out
std
and
das
fiadds
icebp
cmpsl
stos
outsb
push
and
or
mov
xchg
push
sbb
sub
push
aas
lret
cmp
xchg
adc
mov
in
xchg
insl
pop
hlt
mov
int
sub
cld
std
xor
mov
mov
lock
mov
jge
mov
jmp
cmp
pop
stos
cmp
lds
cmpsl
and
push
mov
adc
outsb
lret
xchg
insl
mov
inc
mov
out
push
push
or
into
cwtl
xor
stc
ret
sub
mov
clc
adc
pop
test
jmp
in
loop
or
cmp
or
lahf
cmp
mov
testl
mov
mov
sahf
sbb
jecxz
or
cli
dec
test
jge
test
js
mov
fs
jp
imul
inc
loope
xchg
aam
lods
jnp
jno
sub
or
or
popa
pop
cwtl
mov
mov
xchg
mov
push
lret
hlt
shlb
nop
out
and
shrb
mov
dec
push
test
push
mov
lahf
fwait
addps
int3
xor
push
jecxz
pushf
or
sbb
jle
dec
cltd
pop
mov
lock
into
mov
inc
lea
dec
sarl
pop
mov
sub
mov
leave
inc
mov
push
mov
mov
and
pop
jmp
push
adc
fwait
sarb
dec
js
sbb
jbe
xor
loope
sbb
test
push
out
cwtl
add
or
cmp
mov
pop
inc
dec
jb
ficomps
icebp
xchg
adc
lret
cmpl
movlps
push
inc
jno
pushf
das
sahf
jge
fs
xchg
fidivs
sbb
pop
dec
lcall
inc
inc
lret
stc
push
sbbb
cs
mov
push
or
and
mov
adc
pusha
or
call
movl
mov
xor
sub
rcll
pop
sbb
dec
adc
les
popa
pop
jmp
mov
lods
cmp
outsb
icebp
adc
push
arpl
icebp
nop
imul
sti
decb
push
mov
imul
mov
jb
imul
aaa
cmp
insb
mov
xchg
decl
push
mov
inc
dec
fwait
and
je
lea
lret
cmpsb
fs
add
cwtl
jae
test
out
ficoml
cmp
loopne
or
sub
xor
aam
push
sahf
scas
jmp
in
inc
inc
xor
movsb
adc
daa
xor
push
sbb
pop
and
adc
movb
dec
fwait
mov
shll
cld
fisubs
scas
sbb
dec
pop
xchg
mov
mov
xlat
or
jg
pop
mov
lret
xchg
int3
subb
mov
rorb
mov
rsm
add
mov
xchg
mov
test
sti
out
fwait
pop
or
jg
sub
jle
add
mov
mov
or
fisttpl
jae
stc
repnz
and
insl
jg
pushl
cmp
xchg
aad
jge
add
arpl
lahf
jns
mov
lds
movzbl
sbb
insb
lock
out
cmp
push
frstor
dec
and
enter
and
mov
xchg
fcmovnu
testb
iret
xchg
dec
sub
jo,pn
mov
pop
mov
mov
outsl
jo
sahf
sbb
je
jge
repnz
inc
shr
outsl
aas
mov
sbb
aaa
aam
adc
aad
push
jmp
std
jns
in
aas
ret
xchg
fdivrs
je
sbb
push
adc
cmp
or
xchg
mov
add
or
and
xchg
aaa
mov
jecxz
ss
cmp
lret
pop
or
shrl
jae
and
and
repnz
out
cmp
cmc
mov
push
dec
mov
clc
sahf
jecxz
or
pop
adcl
push
outsl
shll
xchg
lret
push
push
mov
pop
pop
or
mov
dec
arpl
gs
out
push
pop
jb
shrl
enter
xchg
and
movsb
pusha
xchg
ret
add
hlt
das
cmpsl
repnz
xchg
jne
js
sbbb
mov
cltd
inc
mov
mov
ret
aaa
jmp
mov
outsl
nop
insl
test
ret
pop
sbb
movsl
sub
div
pop
cltd
adc
frstor
cmp
stos
pop
insb
repnz
jns
bswap
sbb
bound
dec
push
mov
xor
mov
dec
jnp
mov
inc
push
fstpl
rcr
jecxz
stos
les
clc
test
insl
sub
mov
or
shl
sbb
xchg
aam
shlb
mov
jae
subb
cmp
into
aaa
into
hlt
mov
xor
push
mov
jns
decl
icebp
dec
sahf
add
pusha
addb
inc
pop
test
mov
rorb
xchg
push
cwtl
mov
cmp
push
in
cwtl
sbb
je
aaa
mov
add
adc
divb
andb
lds
pop
stos
cmp
aam
out
push
jp
js
push
cmpsb
or
gs
xchg
push
push
push
leave
mov
xchg
mov
fimuls
mov
in
nop
push
jae
icebp
clc
leave
lock
lds
sbb
in
out
popa
push
mov
stos
xor
fisttpll
mov
inc
pop
push
sbb
into
dec
loope
xor
mov
pusha
cmpsl
rol
dec
divl
sub
das
adc
clc
hlt
imul
cmpsb
pushf
into
lds
dec
loopne
incl
loope
repnz
popa
aaa
addr16
push
cmp
or
addb
cmp
leave
and
add
in
xchg
subl
and
xchg
push
test
pop
mov
loopne
mov
ja
xchg
bound
lcall
xor
scas
fisubrl
lock
fwait
inc
fistps
mov
cmp
mov
repz
pop
xor
sbb
bound
loope
dec
stos
mov
push
add
and
xor
insl
pop
dec
sub
fisubl
dec
stos
clc
es
xchg
inc
or
popa
mov
mov
sub
jno
outsb
test
dec
pop
pop
data16
xor
mov
out
dec
dec
sbb
test
mov
sbb
insl
cmovl
ficoml
mov
gs
or
test
popa
bound
int3
pop
push
test
pop
ja
int
cltd
out
call
and
cmp
mov
outsb
and
call
pushf
xlat
jmp
scas
push
pop
add
out
int3
jae
fsubs
jno
adc
das
movsl
shr
mov
cli
sti
stc
daa
mov
xchg
jns
jo
popa
cltd
aas
shrb
sbb
les
gs
insb
xor
and
inc
mov
xor
leave
mov
cmpsl
xor
dec
bound
insl
or
fistpl
xchg
shlb
push
push
sbb
pusha
pop
jmp
xchg
mov
xor
out
xchg
ja
adc
adc
lods
push
iret
or
mov
in
fwait
and
inc
xor
xor
cmp
sbb
sub
cmpsb
jns
test
inc
pop
and
sub
test
nop
push
rcll
je
cmpsb
pop
or
cltd
pusha
mov
push
mov
add
xor
shlb
pop
into
jg
sbb
jae
fmulp
jge
sbb
bound
loopne
adc
jo
ss
mov
adcl
rclb
jmp
xor
xchg
sti
les
rol
mov
test
cmpsl
gs
jp
mov
daa
xor
and
loope
dec
dec
sub
xchg
lahf
clc
jae
int
movsl
fsub
adc
mov
mov
mov
outsl
xchg
pop
mov
jnp
sahf
mov
pusha
xor
or
test
sbb
mov
pop
daa
rorl
repz
lret
cmc
jbe
cmc
pusha
inc
pop
sub
je
push
out
add
imul
ja
fldenv
in
rol
stc
fdivs
aaa
decb
cmc
mov
jmp
lea
sbb
movsl
mov
out
add
mov
sbb
cmpsl
loopne
js
aaa
and
cmpsb
hlt
popf
out
sarl
lods
jp
fists
gs
sbb
xchg
out
pop
mov
fsubr
mov
xor
jae
js
lock
inc
jmp
fnstsw
pop
and
cmp
mov
rol
test
jne
push
mov
or
adc
add
xchg
sub
sbb
push
jno
add
add
cmp
adcb
gs
fxch
mov
mov
ss
mov
ret
ret
dec
into
das
mov
and
je
mov
jo
pop
and
into
sbb
push
sub
or
nop
out
subb
les
xchg
mov
mov
and
sbb
push
flds
rorl
or
inc
adc
insb
in
jl
stos
push
fcmovnu
js
shrl
mov
addl
sarl
addl
pop
cmpl
lret
push
dec
shlb
xor
sub
lea
cmpsb
push
add
sub
mov
lret
ret
mov
cmp
or
cwtl
jg
add
ret
mov
in
call
push
js
lret
aaa
cld
call
idivb
sbb
xor
cs
mov
xor
pusha
clc
arpl
outsb
fists
jmp
aaa
jae
cmpsb
or
fs
fcoml
cmp
fwait
sub
fwait
lret
aas
sub
cwtl
push
inc
xor
jmp
dec
mov
pop
jae
sbb
sub
rorl
js
and
insl
mov
inc
push
mov
std
lods
xchg
adc
loope
dec
mov
movsl
or
xchg
inc
inc
adc
or
mov
nop
xor
push
subb
cmp
add
pop
repz
movsl
and
or
ja
loope
int3
add
inc
movsb
loop
pop
mov
mov
jl
xchg
fdivrl
and
mov
mov
stc
fisubrs
pop
dec
mov
pop
push
in
loopne
sub
inc
dec
std
sbb
sbb
test
stc
pop
sti
andb
pop
jo
fisubl
pop
rcr
push
inc
sub
mov
xchg
or
test
jbe
fdivl
jle
mov
mov
jecxz
ret
pop
adc
shll
filds
jg
bound
pushf
mov
push
cwtl
scas
and
arpl
paddusb
ret
cmc
add
and
inc
inc
add
push
leave
sub
enter
cmp
or
xlat
andl
adc
rol
outsl
dec
jmp
pop
pop
inc
adc
fcomps
mov
pop
jecxz
call
push
add
mov
ljmp
xor
shll
stc
push
mov
xor
pop
xchg
cmp
mov
mov
jmp
cmpsb
cld
scas
add
loop
shlb
inc
xlat
jne
popa
lods
cmpsl
sbb
pop
xor
push
dec
adc
jl
add
jecxz
mov
push
mov
outsb
xchg
into
fcom
xor
sti
leave
out
cmovnp
push
or
frstor
add
pop
or
or
inc
jbe
or
shrb
lock
cmp
adc
dec
lock
imul
push
rcrl
xor
mov
pusha
xor
sbb
jl
rcr
push
out
mov
sub
je
in
das
mov
lcall
push
sbb
push
cmp
dec
pop
and
pop
jl
mov
sti
in
add
jp
hlt
sbb
or
adc
ret
or
loope
ljmp
out
dec
cmp
sti
jecxz
out
lcall
cmp
call
pushf
push
int3
dec
fldl
add
dec
xor
int3
inc
call
cld
add
mov
or
fwait
xchg
jmp
xchg
pushf
jo
scas
dec
jbe
jle
pop
mov
jle
dec
imul
xor
gs
mov
loope
mov
in
jnp
xchg
jmp
pop
mov
negb
sub
dec
mov
pop
jbe
comiss
cmc
add
or
out
pop
gs
xor
roll
out
adcb
xor
pop
cmp
or
aad
lret
xchg
call
jl
sahf
fnsave
cwtl
enter
and
cmp
pop
sbb
sub
in
jp
adc
adc
mov
or
cltd
lahf
movsl
sub
cs
dec
xchg
sub
push
mov
pop
add
push
jle
popa
movsb
and
dec
xchg
bound
push
repz
adc
decb
and
mov
aaa
rcrl
lock
iret
pop
cmp
cmpsl
dec
jg
mov
imul
fcompl
aad
cmp
dec
mov
rclb
inc
aam
push
dec
pop
loopne
jno
addr16
cmc
aad
xchg
cmp
mov
in
pop
scas
and
dec
lret
add
lret
jae
idivb
ret
out
loop
lret
xor
in
xchg
scas
or
ja
shrb
mov
loop
mov
jb
and
dec
gs
or
mov
mov
jns
push
sahf
dec
out
jne
xchg
subb
lret
cwtl
imul
shll
test
cli
scas
loopne
sub
std
in
mov
fmull
adc
mov
movl
mov
movsl
jmp
popa
shlb
mov
outsl
cmpsb
icebp
jge
add
pop
pushl
in
or
adc
push
xlat
pop
jle
aam
push
shrl
jle
gs
lods
dec
dec
clc
pop
or
dec
jne
pop
inc
iret
insl
add
out
sbb
mov
ljmp
inc
in
popa
add
dec
iret
bound
lret
fstps
dec
pop
xchg
rorb
out
stos
xor
addr16
sti
sub
dec
faddl
mov
or
pop
daa
mov
sbb
xchg
xchg
ss
mov
or
cmp
test
mov
movsb
ljmp
adc
push
aam
ficoml
loop
ljmp
cmp
cli
rcr
addr16
test
add
popf
push
daa
std
jns
and
lods
insl
in
lds
js
and
je
add
icebp
popa
mov
dec
insl
insb
mov
fiaddl
popa
int
jg
fstl
add
ret
scas
cmpsl
add
ret
mov
dec
xor
bound
ret
inc
or
jecxz
xchg
lods
gs
cmp
movsl
je
xor
faddp
roll
hlt
aad
xlat
or
in
mov
into
int
mov
jmp
pop
jo
jmp
testb
xchg
enter
mov
and
xchg
adc
or
iret
sub
mov
das
lcall
cltd
jl
mov
scas
das
dec
mov
pop
or
lret
inc
cmc
inc
push
add
cmp
test
popf
test
jbe
xchg
and
mov
xchg
inc
mov
adc
insb
daa
and
xor
mov
lret
in
movsb
mov
ffreep
aas
int
xor
adc
jnp
and
pop
je
clc
mov
scas
jbe
push
push
icebp
arpl
jb,pn
jg
pop
xlat
jecxz
sbb
jl
push
jnp
mov
or
cmpsb
jne
je
sbb
inc
xchg
push
mov
mov
int3
jecxz
clc
xchg
mov
add
or
fwait
ret
movb
nop
xor
cmp
and
mov
fsubrs
gs
xchg
ja
inc
jb
jge
das
add
orb
xor
pop
or
imul
es
jae
mov
loopne
cmpsl
jo
pop
sbb
mov
xchg
mov
sarb
rclb
and
movsl
call
sub
mov
cs
testl
shll
xor
sbb
lcall
inc
push
iret
inc
push
cmc
aaa
xchg
movsb
mov
fwait
imul
and
xor
adc
scas
adc
and
add
daa
mov
mov
inc
fistps
js
and
xor
ljmp
insl
cwtl
sub
loopne
mov
or
stc
mov
or
mov
leave
dec
in
test
inc
inc
btr
adc
sbb
shll
jae
sbbb
sbb
xchg
les
or
sub
frstor
adc
je
mov
cmp
cmp
iret
movsl
pop
lock
sbb
push
mov
pop
cli
dec
dec
sub
sarl
mov
icebp
idivl
idiv
sbb
pop
jg
test
mov
mov
pop
je
pop
mov
or
and
dec
aaa
push
pop
sub
adc
jecxz
jecxz
sub
inc
mov
fsubp
xchg
add
lahf
or
sar
loop
sub
loop
mov
push
cmc
sbb
icebp
jb
icebp
adc
mov
bound
push
cli
push
push
outsl
cmc
mov
pushf
sbb
mov
xor
out
pop
movsl
mov
les
or
or
mull
adc
pop
push
cmpsl
xor
push
fldenv
loopne
sub
loop
stos
adc
xchg
pop
sbb
call
stc
inc
cmp
cmp
push
sti
pop
imul
ret
icebp
jg
push
cmp
imul
jg
inc
cmp
adc
xchg
sbb
lret
aam
out
add
jle
outsl
add
and
shll
ficoml
jle
pop
pop
test
dec
test
nop
push
jl
push
test
cmp
popa
sub
xchg
mov
push
cmc
lcall
push
dec
shrl
and
inc
sahf
adc
mov
fisttps
fisubrl
push
aas
outsl
add
mov
shll
mov
orb
fwait
mov
jge
leave
mov
aad
arpl
mov
xchg
bound
movb
imul
sub
outsl
rcll
jne
addb
ljmp
cmp
movl
jae
inc
push
test
sbb
push
sub
fwait
cmc
cld
pop
out
push
cmp
dec
pop
in
cs
xor
mov
fldcw
rcrb
jecxz
mov
mov
enter
adc
insl
test
xchg
iret
lea
adc
ja
ret
rcl
push
cmp
std
sub
hlt
xorb
mov
push
mov
aaa
push
mulb
xor
jge
fsub
jns
add
pop
or
mov
cltd
dec
inc
imul
pop
vhsubps
mov
orl
add
cmp
mov
les
enter
int
lods
andb
inc
push
jbe
fs
cmp
cmpsl
or
fmuls
lods
cmpsb
adc
mov
sbb
out
lret
xor
adc
xor
fidivrl
mov
repz
sbb
bound
sub
pop
jmp
arpl
pop
aaa
loop
sbb
sahf
andl
fs
aad
aaa
jno
inc
jle
sub
testb
lret
jl
dec
outsl
pop
repnz
jb
or
in
loop
jae
pop
jl
push
ret
xchg
adc
jae
lret
inc
out
inc
pop
add
negb
pop
jno
push
and
sub
aas
pcmpeqw
sub
sbb
inc
jecxz
xchg
into
ret
add
mov
adc
and
or
mov
xor
jle
adc
lahf
adc
lods
jle
jge
adc
jmp
inc
icebp
sahf
sub
and
adc
out
sbb
mov
or
out
stc
bound
in
in
loope
int3
pop
pusha
push
notb
sub
dec
lahf
mov
sub
jbe
stos
sbb
push
inc
clc
fsubr
insl
js
jno
aad
rolb
xor
dec
fdivrl
mov
clc
dec
pop
sbb
mov
jge
push
inc
push
insl
dec
jge
in
mov
cmp
repz
or
fdivr
lods
mov
push
pop
cmp
adc
fisttpl
xchg
jle
fninit
jp
pusha
out
xor
inc
lret
stos
std
push
mov
stos
inc
cwtl
sub
add
mulb
mov
or
cmp
pop
mov
sbb
jmp
mov
push
mov
pop
push
nop
xchg
inc
or
lret
pop
test
push
test
std
adc
leave
repnz
mov
jo
cmp
jp
scas
in
add
dec
cwtl
jl
idivb
cmpsl
jb
inc
out
xlat
and
std
or
dec
and
pushf
out
mov
fnsave
xchg
jnp
mov
inc
rcll
pop
jp
rclb
mov
fstpl
call
jne
pop
sub
idivl
out
testl
pop
xor
aaa
dec
adc
push
push
out
insl
testb
pushf
pop
and
lahf
mov
stos
cmp
cmp
sti
cmp
das
popa
in
das
jmp
sub
stos
mov
xchg
jg
cmovo
push
inc
stc
das
xor
into
lret
inc
and
push
fdivr
test
adc
mov
or
out
jl
in
fimull
adc
push
ljmpw
or
mov
in
mov
inc
lcall
mov
add
sbb
cld
mov
dec
subl
dec
call
movsl
fdivs
loope
dec
mov
push
aad
mov
add
bound
loopne
ss
jbe
or
adc
pop
mov
aaa
adc
cmp
add
mov
movsb
push
pop
push
notl
es
cmp
rolb
insl
frstor
jmp
je
iret
dec
lea
or
inc
shrl
or
in
cmp
cmp
jg
jmp
mov
dec
dec
dec
or
sub
test
scas
jg
ror
mov
mov
or
push
pusha
push
fstl
add
sbb
push
out
xor
adc
scas
mov
cwtl
in
mov
mov
add
cmp
ja
mov
pop
dec
insb
dec
push
mov
or
ret
mov
ret
ret
push
popa
mov
aas
cmp
stos
pop
out
outsl
lea
xchg
xor
pop
ds
pop
ljmp
xor
sub
in
pushf
outsl
jne
mov
sbb
jno
fcompl
cmp
adcl
std
ror
leave
out
movsl
hlt
mov
push
dec
pop
ss
arpl
jl
cmp
rcrl
test
adc
cld
jge
add
mov
out
fisttps
mov
mov
cmpsb
cmp
out
dec
push
dec
jle
and
clc
rolb
xorl
ss
cmp
int3
add
mov
leave
or
arpl
inc
cmp
pop
jl
cmp
push
mov
lcall
xchg
pop
jo
push
test
add
lods
cmpb
insb
cmp
jl
mov
inc
cmc
fsubrp
jg
mov
pop
bsf
or
push
out
mov
mov
lcall
adc
mov
cmp
jmp
adc
int
leave
stc
stc
rol
lea
jl
leave
adc
inc
stos
inc
rcll
xlat
jne
shll
push
cs
cmpsb
jne
xor
pop
push
push
jl
bound
mov
test
mov
sub
js
loope
sub
out
cmove
sbb
xchg
insl
cli
pop
xor
xchg
int3
xor
lds
push
icebp
push
scas
pop
pop
xchg
push
in
xchg
pop
jmp
xchg
fnstenv
jne
out
push
jle
jmp
loope
fldl
sbb
jmp
mov
and
ret
xchg
call
jne
jmp
aas
incl
andl
mov
mov
cs
inc
and
sahf
push
add
test
pop
test
ljmp
sahf
pop
sbb
shlb
jle
hlt
pop
pop
add
push
xchg
push
aam
int3
push
loope
lret
shlb
lret
xor
cmp
in
movsl
icebp
xchg
cmpsl
pusha
push
jp
jp
adcb
mov
xchg
out
imul
add
ds
cmp
jns
add
mov
pop
push
mov
lret
repnz
pop
lret
and
outsb
sbb
ret
dec
std
xchg
cmp
fwait
sub
cmpb
push
fnstsw
pop
xor
sahf
dec
mov
fcmovnb
add
inc
cld
jo
jb
xchg
or
adc
inc
repz
pop
mov
and
mov
mov
fists
mov
popa
dec
sbb
clc
test
das
add
ret
jb
xchg
data16
stc
pusha
add
jno
cmp
imul
mov
out
and
jno
mov
outsb
movaps
sub
bound
rcrb
repnz
cwtl
insl
shll
scas
jae
cmc
sub
lods
test
js
xchg
aas
shrb
and
adc
pushf
add
dec
pushf
pop
xor
pop
fnstsw
jns
dec
ds
pop
pop
dec
hlt
sbb
call
pop
nop
ficomps
shr
ds
jg
in
push
inc
negb
mov
in
and
inc
popa
aam
in
or
mov
mov
and
cld
lret
push
jecxz
sub
inc
xchg
or
sub
mov
call
jl
xor
sbb
mov
push
adc
adc
mov
mov
sbbb
dec
xchg
or
pusha
jle
ds
xchg
mov
adc
push
xchg
sub
movsb
jmp
jae
add
sub
push
xchg
and
sti
sub
and
mov
cmp
daa
ret
xor
popf
ss
mov
ret
xchg
js
int3
add
jecxz
rcrl
loop
add
in
push
mov
inc
sbb
mov
push
or
iret
out
in
iret
xor
push
pop
sbb
out
shll
adc
push
jnp
xor
xor
inc
xor
insb
jge
pop
les
sbbl
sahf
mov
push
xchg
in
push
out
adc
mov
and
loopne
lea
int
jl
lea
out
popa
out
repnz
out
mov
clc
push
test
filds
daa
or
mov
neg
ljmp
mov
inc
cmp
add
aas
out
stc
ja
cmp
pop
cltd
push
lock
stos
aas
aas
or
sub
jbe
push
add
mov
imul
outsl
jl
sub
lret
repnz
test
push
leave
je
arpl
inc
out
sbb
mov
clc
pop
jp
sbb
in
bound
cli
pop
clc
push
test
push
sbb
pop
jmp
mov
arpl
inc
bound
cmc
push
mov
lret
lret
test
ficomps
jl
mov
inc
xor
mov
jb
lds
ficompl
arpl
sarb
cld
push
inc
aas
sbb
cmp
cmp
xor
shl
mov
lahf
stos
jmp
cltd
out
mov
inc
sbb
jl
mov
notl
jo
repnz
andl
and
pop
imul
repz
fiadds
aas
push
push
pop
insl
ret
cmpsb
imul
rcrb
xchg
jp
cltd
inc
add
enter
ss
xor
pop
mov
icebp
imul
sbb
mov
sbb
test
mov
hlt
bound
lock
nop
fmul
push
push
xlat
dec
push
mov
sub
flds
push
fcompl
inc
xor
dec
mov
repnz
bound
mov
sahf
mov
and
mull
hlt
mov
inc
dec
ficomps
lea
cmp
and
xor
push
cli
jecxz
cmp
insb
outsb
push
and
movsl
add
xchg
int
and
xchg
push
imul
pop
push
cmp
jno
dec
adc
loopne
xchg
roll
lret
push
mov
and
lds
gs
mov
mov
scas
mov
inc
dec
mov
sbb
mov
loope
inc
inc
stos
repz
dec
shlb
iret
mov
sub
outsl
lods
dec
dec
cld
xor
enter
pop
sub
pop
dec
repnz
mov
pop
ret
lcall
bound
cld
sbb
lods
mov
mov
insl
addr16
mov
imul
rcrl
dec
arpl
test
xchg
ljmp
in
pop
fcoml
ficoms
push
dec
adc
sbb
and
mov
cmp
sub
add
loopne
pop
pop
xchg
dec
shlb
int3
xchg
cmp
or
jmp
bound
or
xchg
enter
jmp
lea
adc
cmp
push
inc
or
jo
dec
pusha
sub
pop
outsl
shl
es
loop
lret
push
add
mov
ss
sbbl
xor
push
popf
fnstcw
push
sbbb
inc
sub
out
add
fisubrs
cli
lods
push
jle
shr
mov
inc
addr16
insl
xorl
sbbb
and
xchg
es
add
mov
mov
fdivl
pop
insb
push
test
xchg
mov
xor
lcall
lods
rol
pop
lcall
es
mov
xor
adc
xor
mov
pop
xchg
lea
dec
nop
in
jnp
lods
add
jg
jns
inc
loopne
mov
lds
inc
in
mov
in
loop
in
mov
movsb
jb
mov
int
scas
dec
or
inc
or
addr16
test
inc
xchg
inc
pushf
out
or
mov
inc
pop
jno
dec
sbb
mov
insb
jnp
stc
mov
lods
sbb
cwtl
inc
hlt
or
mov
daa
cli
in
mov
xor
and
sbb
hlt
mov
cmpsb
pop
loop
or
negl
mov
cmp
scas
mov
pop
or
std
push
dec
ja
arpl
sub
int
cmp
adc
fdivrp
xor
and
sahf
ret
in
fdivrl
lock
subb
adc
lret
inc
insb
loopne
bound
mov
mov
dec
hlt
enterw
aam
out
nop
mov
lahf
dec
popf
pop
inc
jge
movsl
fs
and
push
rcrb
insb
mov
push
xor
iret
mov
dec
and
dec
lret
xchg
push
xchg
mov
mov
sbb
ret
add
add
cli
mov
pop
jle
jge
out
mov
mov
mov
lock
mov
fidivrl
lods
inc
adc
loop
jne
mov
lea
adc
and
dec
cmc
jmp
in
subb
cwtl
call
mov
ja
lcall
cs
ljmp
push
sbbb
mov
dec
cs
push
pop
lahf
xchg
and
sbb
push
jge
int
ss
das
add
test
mov
int
mov
pop
jbe
dec
fmulp
in
mov
gs
popa
jne
and
fcmove
xor
ret
jnp
cmp
insb
mov
mov
pop
int3
push
iret
inc
push
subl
cmp
flds
xchg
fsubl
pushf
cltd
xor
sub
frstor
mov
pop
insb
ds
scas
in
push
aas
cli
push
in
fildll
js
inc
das
mov
ds
xchg
xor
jmp
mov
jne
inc
sub
fidivrl
cmc
xor
std
lret
dec
mov
mov
push
push
imul
sbb
pop
loop
adc
mov
jns
jl
imul
sahf
or
add
mov
jo
outsl
es
dec
ficompl
cmp
cmpsb
mov
shl
ja
fsubp
notb
mov
cmp
fsubs
call
rcrl
cmp
fcom
push
pop
fstl
adc
and
rcrl
jmp
pop
ret
in
rcll
jbe
test
adc
fistps
pop
fdivl
adc
imulb
cld
and
cmp
lret
in
enter
adc
pop
mov
xor
iret
push
adc
inc
add
scas
xchg
or
addr16
and
ret
aad
push
jae
rcr
lods
xlat
dec
mov
mov
xor
mov
flds
or
jns
orb
fisttpll
into
fists
sbb
push
dec
push
bound
mov
sarb
push
sbb
pop
jnp
int
fwait
inc
loop
ret
jne
jl
mov
mov
fsubs
dec
mov
mov
sti
js
add
mov
or
scas
mov
scas
and
mov
mov
inc
mov
xchg
pop
sbb
lret
cltd
cmpsl
pop
add
lods
sbb
cli
xor
jmp
cmpsl
js
scas
in
movsb
cmp
sub
mov
cmc
daa
add
ljmp
push
push
cmp
inc
add
outsb
int3
xor
mov
ja
xchg
daa
int3
inc
mov
dec
imul
jmp
mov
push
shrl
scas
mov
cmpsl
leave
test
fiadds
cltd
or
and
inc
pushl
insb
loopne
fs
stc
das
cmp
loop
lds
cmp
lods
dec
or
sti
loop
cld
cwtl
xchg
out
inc
icebp
pop
mov
jne
cmpsb
push
jmp
test
ret
cmpsb
in
and
ja
xchg
push
ret
loopne
mov
int
mov
sbb
mov
ret
dec
fsubl
mov
cmpb
in
outsb
mov
mov
cld
loopne
loope
mov
insl
out
sub
mov
cmp
dec
xor
ljmp
mov
pop
pop
icebp
mov
subb
push
aas
das
cmpl
lcall
dec
lcall
or
xlat
sbb
jno
mov
movsl
mov
lret
sub
mov
cmpsl
inc
jge
es
psraw
pop
pop
test
add
xor
jno
or
fcomi
insb
icebp
mov
lret
ja
mov
push
insb
push
rorb
repnz
in
xchg
pop
sahf
aaa
push
xchg
nop
xchg
xor
pop
adc
movsl
mov
icebp
inc
adc
inc
jmp
cmp
daa
loop
lcall
out
or
inc
and
push
xlat
push
fxch
fcomps
cmpsb
ret
iret
loop
add
arpl
inc
mov
bound
sub
sbb
push
aam
rcrl
test
xchg
rorb
fdivs
xchg
nop
sti
data16
jns
sub
fiadds
test
sub
mov
dec
pop
ret
pushf
imul
in
cltd
jnp
xchg
mov
shl
jg
in
lods
mov
and
mov
adc
mov
mov
mov
pop
stos
fidivrl
rorl
xchg
out
inc
jle
imul
in
rorl
flds
in
jb
push
and
orb
in
xchg
xor
push
mov
insl
xor
mov
sub
mov
test
pop
mov
loopne
daa
xor
icebp
fisttpl
jb
jno
in
xchg
inc
pop
movsl
iret
jne
aaa
sub
mov
inc
notb
pusha
aad
in
lret
add
ss
mov
mov
sbb
cld
cltd
loop
pop
mov
dec
mov
mov
movb
mov
pusha
push
mov
mov
ret
stc
mov
out
push
pop
jp
add
jb
jno
fildl
push
pop
das
lcall
inc
push
mov
js
xchg
pop
fdivs
or
test
dec
sbb
ds
cmp
inc
sbb
fcos
decl
pusha
outsl
mov
das
adc
out
jne
addr16
jo
ljmp
jbe
stc
inc
push
imul
js
add
jb
pop
pop
inc
mov
xchg
inc
mov
imul
jns
dec
dec
push
andb
push
ds
dec
mov
add
inc
and
ret
fsubrl
daa
sbb
lcall
test
test
mov
out
jbe
inc
or
sbb
sub
or
cmc
pop
cs
lcall
roll
xchg
mov
stc
mov
pop
xorb
xchg
mov
sbb
lret
dec
scas
addl
mov
loop
sub
stos
inc
outsb
in
fiadds
or
inc
inc
adc
lods
ss
mov
and
in
sub
into
fisubrl
pusha
mov
popa
fsubrs
jmp
aaa
pop
testl
xchg
and
adc
add
push
jbe
jnp
push
insb
jns
sahf
xor
add
adc
adc
pop
shll
cltd
mov
das
gs
js
xchg
iret
aaa
pop
mov
xchg
idivl
mov
pop
cmp
xor
cmp
sub
mov
xchg
shl
rcrl
xchg
aad
adc
nop
std
lods
stc
jmp
push
push
pop
jb
add
mov
into
enter
js
and
out
sub
mov
cmp
movsb
mov
xchg
sbbl
jg
cltd
mov
lds
int3
mov
roll
loop
cli
dec
lds
repz
cmp
in
test
repz
fstl
jle
push
fnstenv
pusha
adc
cmp
xor
xchg
stc
cmp
movsl
xor
ret
or
jne
sbb
inc
es
mov
and
or
ret
mov
leave
jae
scas
mov
inc
je
lds
lret
imul
aaa
movsb
xchg
sbb
mov
mov
ja
lcall
or
roll
inc
add
mov
and
stos
push
push
cmp
xchg
imul
inc
dec
into
adc
mov
in
ljmp
idivb
jecxz
or
jp
sub
stc
addr16
jle
sub
decl
fdivr
dec
imul
loope
es
loope
or
adc
add
flds
or
xor
push
mov
scas
fwait
je
in
mov
xor
push
in
push
icebp
mov
xchg
sti
mov
cltd
repz
xor
push
pusha
mov
jmp
mov
or
fcomp
lods
into
xchg
mov
xor
or
dec
jns
cmp
lret
cld
jle
fdivrs
dec
push
js
push
pop
cli
sbb
dec
lcall
imul
imul
xchg
jmp
test
rcrl
mov
pop
into
je
jae
push
xchg
cmpsl
dec
sbb
and
mov
or
lods
sahf
cmc
ds
xchg
mov
sub
cmp
pop
repz
loopne
cmp
rcrb
ret
mov
mov
or
add
shrl
mov
inc
and
adc
push
lods
dec
dec
cmp
cwtl
int3
nop
mov
pop
sbb
mov
inc
lret
add
inc
xchg
rcrl
fildl
ds
push
add
xchg
inc
loopne
loope
iret
imul
inc
insl
jne
xchg
fiadds
xchg
outsl
pop
jo
sub
and
xchg
mov
sub
mov
mov
jge
pop
cmp
in
push
sbb
movsl
jae
or
or
add
cmp
sub
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
sub
add
add
add
add
add
add
mov
sub
mov
movsl
sub
inc
roll
add
add
outsl
bound
inc
popa
insb
insb
bound
.byte
