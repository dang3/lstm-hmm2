dec
enter
jl
and
sbb
decl
push
ss
mov
mov
popl
mov
add
cmovb
inc
sub
in
pushf
int
adc
lcall
repnz
mul
sub
ljmp
sbb
pop
int
fcompl
outsl
mov
js
xchg
xor
test
rorl
and
mov
mov
sub
and
shll
and
jno
pop
lahf
sub
fsubs
and
jno
jnp
dec
out
and
or
ret
push
dec
add
xor
mov
imul
ja
inc
ds
cmp
add
repz
jmp
dec
ss
xchg
push
mov
cli
mov
test
push
add
xchg
inc
xor
and
dec
das
and
cli
mov
sti
inc
outsl
or
cld
insb
jnp
push
sub
clc
jg
jbe
jne
ficomps
ds
dec
inc
shl
out
into
xchg
imul
add
mov
clc
mov
pushf
jno
enter
add
adc
cmpl
lea
sub
movsb
das
mov
std
dec
push
adc
repz
mov
mov
cli
sbb
dec
xor
rcrl
add
popf
and
inc
push
mov
stc
pop
clc
pop
les
mov
in
scas
or
das
mov
test
nop
fisttpl
lock
daa
orb
sbb
sub
push
pop
lods
into
push
adc
or
cltd
pop
enter
arpl
add
addr16
fcomip
pushf
xchg
int3
cmp
bound
call
mov
lret
lcall
movsb
aad
dec
dec
aam
add
out
mov
lret
xor
adc
mov
and
int
movsb
adc
jnp
jb
arpl
ret
mov
stc
subb
aad
fmul
mov
pop
and
test
lret
sti
pop
xchg
fistps
out
ficomps
pop
mov
daa
add
and
push
xor
shl
dec
and
and
mov
loop
out
ss
insb
adc
arpl
inc
sbb
ds
sbb
stos
call
js
add
pop
adc
fcoms
mov
movd
lcall
cwtl
andb
cwtl
xchg
and
inc
cmp
iret
cmpsl
scas
sub
mov
mov
add
push
and
rdmsr
jb
jge
test
sub
repnz
pop
jne
pop
and
adc
sahf
sub
jnp
bound
sub
xor
push
push
test
ss
clc
fcom
jge
xchg
sub
push
sbb
xchg
cltd
push
mov
gs
popa
sbb
and
test
insl
add
sti
lret
pop
jne
fsubs
pop
xor
xor
xchg
sbb
mov
and
loope
fists
sub
test
pop
pop
or
out
push
test
mov
fcomp
or
xchg
addr16
jb
lds
movsb
push
mov
ret
stos
jp
in
test
sti
in
jns
push
movsb
push
cwtl
shll
and
lret
aas
rcrb
push
add
scas
out
adc
sub
or
adc
pop
or
data16
or
sbb
aam
mov
add
mov
inc
and
clc
xchg
and
xchg
cwtl
mov
pop
mov
fs
pop
out
xchg
insl
cli
and
xchg
sub
fcompl
loopne
lcall
push
ret
inc
insb
je
out
pop
adc
rcrl
int3
and
mov
cwtl
push
fcoms
cmp
inc
lods
inc
xor
dec
sbb
ror
pusha
ret
push
inc
inc
push
dec
test
xchg
jle
rcll
and
jp
cld
sub
mov
hlt
sbb
lds
add
dec
push
xchg
inc
imul
and
fwait
cmpsl
lock
push
jne
loop
cld
pcmpeqw
push
rcrl
daa
mov
xchg
mov
sub
das
jge
fs
pop
inc
rorb
jbe
pop
mov
stos
pop
pop
push
xor
and
dec
mov
into
movb
xlat
xchg
sbb
imul
push
ja
sub
push
in
jb
dec
lods
adcb
in
inc
mov
or
lea
cmp
sub
cmp
dec
jle
rol
xor
sbb
jp
je
xor
andl
inc
lock
cs
pop
dec
jmp
in
ds
outsb
fwait
lcall
data16
ficoml
push
into
call
cmp
sbb
outsl
jb
mov
sbb
std
int3
pop
gs
pop
movsl
data16
cmpsb
movsl
es
lods
xchg
inc
xor
adc
cmp
xchg
mov
aam
mov
das
fistpll
pop
pop
mov
rorb
jle
sbb
mov
fwait
test
ret
fcoms
cmp
aam
lods
stc
ret
fiadds
aad
xchg
loopne
in
nop
imul
pop
movsl
add
call
and
mov
push
pushf
je
in
enter
and
sbb
mov
mov
add
orb
pop
mov
push
test
loop
xchg
rcr
adc
jp
cmp
inc
jecxz
mov
jne
stos
cmpsb
cwtl
jmp
mov
push
xadd
mov
punpckhdq
pop
mov
add
shr
mov
adc
movl
int3
mov
bound
or
mov
sbb
add
or
inc
dec
mov
mov
sbb
fwait
testl
aaa
mov
sti
mov
imul
fsts
data16
ficoms
mov
cmpb
js
and
fs
sub
call
fwait
sbb
mov
mov
int
dec
dec
daa
int
mov
xor
dec
sbb
cmp
inc
mov
adc
stos
jp
xchg
pop
rorl
sub
sub
mov
cltd
int3
jl
popf
shrl
test
dec
mov
inc
dec
lcall
out
pop
jns
inc
in
mov
insl
fstp
rol
addr16
jno
xlat
test
dec
jnp
mov
xor
js
pusha
cs
test
pop
inc
addb
mov
sar
pop
mov
stc
xor
mov
stos
rorl
pop
aad
les
into
dec
sahf
mov
sbb
and
and
scas
dec
lock
pop
jle
out
ffreep
cmp
pop
fs
mov
dec
in
cmpsl
and
xchg
mov
lods
mov
popa
pop
pop
xor
jg
es
cmpsl
out
adc
call
push
cmpsb
lret
cmp
jl
clc
lcall
push
fildl
pushw
cld
clc
std
push
dec
es
mov
shlb
xchg
adcl
jbe
fpatan
stos
fucom
mov
xchg
xchg
lahf
adc
xor
and
xorl
mov
popa
pop
add
or
pusha
dec
cli
sub
jae
dec
dec
flds
and
das
ja
sti
push
sahf
int
subl
push
lock
mov
pushl
fcompl
lods
pop
mov
lock
cmpb
aam
push
jg
or
inc
stos
mov
test
jnp
xor
push
inc
jmp
dec
push
repnz
cli
push
cmp
pop
orl
loope
arpl
sbb
mov
or
cmp
fucomi
jbe
ljmp
xchg
and
and
mov
cltd
mov
daa
dec
mov
mov
stos
xchg
scas
loope
lock
jg
pop
ret
xchg
or
icebp
pusha
mov
cmp
int3
out
xlat
fbstp
sbb
bnd
cld
push
scas
or
sbb
cld
les
sub
shl
arpl
js
jb
xor
out
mulb
push
mov
adcb
outsl
icebp
movsb
mov
lock
loop
lock
push
out
aad
push
sbb
cmp
xor
pop
cmpsb
cmp
jne
sahf
xchg
ja
fldcw
test
sub
inc
push
pop
xchg
adc
adcb
jno
dec
je
call
mov
mov
xchg
xchg
ja
and
mov
add
mov
mov
sub
mov
rcr
popf
dec
popa
stc
push
cmc
lret
std
leave
mov
push
lea
lret
imul
dec
or
mov
mov
adc
pop
xchg
inc
sahf
pop
adcb
out
lahf
sub
mov
add
cmpsb
inc
xchg
add
pushf
int
fs
dec
cmpsl
add
jno
jmp
mov
pop
xchg
mov
into
lret
jnp
push
and
adc
lcall
repz
mov
jle
sarb
fimuls
enter
adc
push
fistpl
orb
and
pop
cmpsb
pop
xchg
jecxz
loope
or
xchg
iret
into
mov
movsl
pop
xchg
sub
outsb
mov
xor
lods
xchg
mov
cmc
js
push
nop
inc
roll
outsb
push
dec
sahf
or
xchg
mov
mov
pop
mov
xchg
mov
xchg
adcb
push
fdivrl
push
adc
dec
pop
pop
mov
jne
mov
mov
fs
test
sub
out
xchg
xor
cld
mov
and
adc
in
push
std
iret
push
cmpsl
push
or
insl
xor
or
add
push
movsl
lds
add
xchg
movsb
xor
sbb
add
dec
mov
fnstenv
ljmp
xchg
imul
inc
rcl
add
mov
inc
or
inc
sub
cmp
push
lods
or
es
and
mov
mov
int3
jb
jmp
sub
mov
jl
ret
loop
dec
faddl
sub
int3
pop
or
inc
loope
mov
mov
jo
xchg
xor
push
inc
inc
xor
inc
aaa
test
fiaddl
int
ror
add
test
dec
and
and
punpckldq
out
inc
movsl
ror
inc
fidivrs
adc
push
hlt
xor
inc
enter
cmp
shr
jno
ljmp
push
icebp
mov
pop
shrb
aad
es
inc
mov
or
mov
mov
inc
call
in
or
rol
insl
sub
sahf
add
sub
mov
pusha
rolb
sub
mov
call
mov
or
and
sbb
out
jo
xchg
push
dec
cltd
loopne
outsb
xlat
das
pop
inc
fwait
inc
ret
bound
jmp
ja
dec
pop
mov
push
jmp
test
adc
sti
lock
ret
pop
pop
add
and
fcom
xlat
pop
rclb
mov
push
imul
and
mov
mov
ds
or
sbb
sbb
and
sbb
fsincos
and
hlt
bound
pop
add
mov
sub
add
js
shrb
sub
imul
mov
fstpt
xchg
sub
mov
or
push
mov
fwait
push
inc
cli
mov
cmpsb
inc
test
js
fstl
mov
xor
jg
call
jp
shlb
addb
mov
stos
pop
add
jbe
sub
test
cmpl
fwait
sub
fdiv
out
sbb
popa
jecxz
jge
add
test
cmp
fidivl
mov
jg
pusha
sbb
jmp
mov
test
sub
push
in
adc
jmp
jae
movsl
imul
mov
into
pop
mov
sahf
mov
pop
aas
dec
out
sub
pop
iret
mov
or
dec
sbb
lcall
inc
cwtl
jmp
and
scas
push
sbb
add
loop
and
mov
lret
iret
sub
outsb
loope
lods
cmp
cmp
add
xchg
mov
stos
sti
insb
jl
jl
push
jg
inc
add
mov
mov
add
out
in
out
push
pop
scas
inc
mov
ficomps
mov
mov
sub
std
or
fmuls
dec
test
fisttpll
xor
mov
mov
sbbl
stos
dec
and
shrl
aaa
fcmovnu
xchg
je
add
and
pop
hlt
xchg
orb
fwait
in
cs
cwtl
push
mov
jnp
hlt
or
xor
into
dec
imul
xor
int3
popf
imul
push
and
adc
out
lods
imul
adc
xchg
popa
jp
popa
shrl
repnz
dec
test
sarb
test
cmp
ds
xchg
in
clc
xchg
rolb
cwtl
cmp
testl
pusha
adc
lods
xchg
push
jno
mov
fdivp
nop
jg
xlat
mov
pop
xchg
movsb
and
add
testl
into
das
push
mov
jmp
dec
xchg
lea
popf
in
mov
imul
fwait
push
lret
and
lods
pushf
aam
push
jae
pop
sub
aad
imul
int
lds
xor
cmp
daa
xchg
adc
mov
dec
cld
les
push
sub
pop
mov
pop
lea
cmp
mov
mov
sub
sub
or
xor
leave
lcall
test
push
bound
mov
out
mov
fiadds
pop
movsb
jae
cmp
out
arpl
lods
fiadds
dec
dec
ret
xor
pushf
sbb
jp
or
add
xor
jae
push
jo
jnp
mov
jns
lret
adc
lods
xchg
sbb
stos
mov
ss
fwait
scas
fisubrl
adc
jle
scas
bound
lahf
fwait
popf
or
data16
aad
jmp
dec
orb
aam
sub
adc
imul
pushf
ficoms
dec
mov
dec
jno
ds
pop
jge
mov
mov
rcll
int
hlt
pop
mov
out
popl
ljmp
push
mov
stos
addl
jmp
xchg
sbb
data16
push
icebp
fists
dec
scas
or
jne
pop
push
or
pop
push
add
aaa
sti
nop
roll
add
shlb
add
mov
popl
push
aad
rcrl
popa
stos
insb
cli
or
sub
inc
shrl
movsb
pop
nop
or
insb
pop
or
xchg
mov
pop
outsl
repnz
out
movsl
pop
subb
mov
sarl
push
xchg
jno
ret
lahf
inc
pop
or
rorb
sbb
or
dec
scas
in
dec
sub
into
sti
shrb
in
xchg
outsb
push
mov
movsb
push
addl
jo
sbb
in
insl
mov
adc
mov
mov
jmp
add
xchg
pop
inc
hlt
addr16
jg
push
mov
mov
push
mov
hlt
fdivr
jbe
sbb
push
mov
xor
pop
fsubl
lea
lret
shl
dec
lea
or
and
pop
jo
mov
outsb
bound
pop
test
mov
xlat
xor
dec
inc
subl
clc
loope
sbbb
out
fistpl
stos
lea
loopne
lods
xor
xchg
inc
jmp
add
in
add
xor
inc
loope
dec
sbb
inc
jmp
jp
pop
cmpsl
mov
lods
or
sar
xchg
test
push
xor
cmp
push
push
push
sub
inc
iret
add
mov
or
push
cmp
mov
mov
test
incb
and
in
dec
mov
into
daa
mov
stos
and
push
das
fiadds
fwait
dec
mov
js
dec
jecxz
dec
jno
addr16
adc
stos
mov
cs
mov
stos
pop
xor
aaa
shrb
xor
cmp
sbb
lret
mov
das
fucomip
dec
cltd
mov
xchg
or
ret
pop
negb
mov
out
xchg
adc
xchg
mov
inc
or
xchg
push
lea
xchg
push
lock
insb
pop
mov
pop
enter
stos
jl
lock
lods
hlt
stc
icebp
sbb
sarl
js
test
pop
push
mov
mov
cltd
mov
data16
scas
cmp
jne
pop
or
rolb
xor
pop
enter
pop
iret
mov
inc
jg
scas
inc
das
dec
mov
hlt
jbe
mov
aam
pop
push
das
cmp
daa
je
insl
jns
add
jmp
sbb
xchg
inc
sub
and
push
jnp
mov
scas
push
lock
fadds
imul
pop
dec
xor
jle
sbb
sbb
cmp
in
xchg
cli
xchg
lret
cmpsl
mov
andb
aad
xchg
sbb
xchg
cmp
push
decb
jns
lahf
pop
sahf
lds
push
test
sti
xorl
xor
mov
adc
mov
mov
mul
enter
push
jbe
mov
xchg
cmp
pop
out
pop
cli
xchg
pop
or
in
in
mov
adc
inc
cmp
pushf
hlt
xor
sub
mov
sbb
arpl
ss
xchg
mov
int
jecxz
push
sarl
mov
push
and
in
dec
sub
jge
sbb
or
jl
adc
sti
xchg
les
les
inc
test
xchg
jl
inc
sti
adc
out
mov
jbe
xchg
xchg
adc
lock
add
sub
inc
dec
pop
mov
subl
adcl
push
rcrl
aad
cmp
adc
jle
sbb
dec
stos
lods
dec
cmp
ljmp
jg
jb
cmp
bound
mov
adc
mov
adc
xorl
and
outsl
mov
rol
mov
jnp
cmpsl
push
jno
daa
lea
xchg
mov
lret
sub
in
adc
test
sub
push
cmp
xchg
and
and
push
xchg
push
adc
or
push
insl
mov
int3
mov
test
fstl
cld
xor
xchg
pop
aas
add
clc
cld
sbb
sub
es
push
mov
sbb
mov
jge
xchg
fwait
cmp
popa
push
jae
fisubl
pop
pop
das
fs
xor
add
mov
imull
es
data16
adc
ficomps
stc
mov
call
test
pop
or
jge
mov
jge
mov
cli
mov
popa
add
add
or
mov
shll
test
fs
lods
mov
aam
mov
ljmp
mov
into
loopne
fs
sub
lock
in
mov
ret
lea
loopne
xchg
add
mov
adc
int
xor
imul
xchg
sar
aaa
mov
cmp
jl
mov
sar
jae
xchg
dec
test
movsl
or
mov
push
sbb
pushf
gs
mov
jp
popf
testb
jle
aam
ljmp
adcb
xlat
push
aas
dec
nop
xchg
xor
subl
pop
inc
mov
imul
jp
bound
and
push
mov
pop
ficoml
clc
loop
sti
sbb
orb
es
incl
sbb
jnp
into
or
jne
pop
lods
mov
xchg
mov
stc
or
push
cmp
out
rorl
push
ljmp
xor
pop
insl
and
pushf
pop
mov
push
xchg
sahf
or
mov
mov
jle
inc
pop
or
jle
jl
cmp
mov
leave
adc
pop
pop
sub
mov
lret
js
jmp
cltd
push
sahf
je
scas
jmp
cmp
xor
gs
push
arpl
adc
sbb
jecxz
inc
jge
popf
mov
mov
dec
pop
ret
inc
dec
xor
ret
push
pop
test
sub
inc
pushf
setle
stc
insb
in
div
scas
js
mov
iret
lock
and
pop
ss
push
mov
xor
insl
arpl
adc
int3
out
inc
jp
pop
fwait
dec
push
shlb
shrl
and
xor
aas
push
mov
sub
das
or
xchg
add
push
aaa
sarl
xorl
push
xor
cmp
push
dec
xchg
push
cmp
aam
iret
cli
das
cmpsl
movsl
xor
sbb
cmp
bound
rclb
push
jge
lods
cmc
nop
dec
push
popf
mov
enter
lea
inc
lock
rcr
movsl
out
cld
stc
insb
pop
cmp
add
cwtl
mov
test
dec
add
fistpll
jmp
mov
fld
sub
addl
js
cs
je
out
and
mov
add
lds
in
add
push
cmp
pop
pop
outsb
xor
jge
jg
fnstenv
insl
jae
adc
iret
jecxz
gs
scas
stos
jo
cmp
xor
mov
sbb
test
xor
or
xchg
push
mov
jno
repnz
pusha
je
jne
xor
sub
rclb
sbb
cmp
mov
adcb
out
cmp
sub
jo
push
xor
and
push
inc
dec
pop
jo
lock
cld
lret
inc
sub
or
dec
jo
lcall
push
shlb
fisubrl
fstpl
cmp
adc
pop
aam
fsubrp
insb
ret
pop
jno
sub
sbb
popfw
jp
or
jle
cwtl
adc
or
sub
push
sub
sbb
rcrb
popa
test
mov
js
test
aad
dec
lds
pop
jmp
inc
add
xchg
imul
jns
mov
adc
inc
test
test
xor
xor
cmp
loop
jne
gs
xchg
inc
das
gs
in
mov
push
and
push
add
cmp
aaa
outsb
adc
daa
roll
dec
sbb
sbbl
fldpi
loopne
add
and
enter
jne
sub
sbb
xchg
push
add
push
mov
push
icebp
pop
gs
sbbl
mov
inc
inc
outsb
mov
mov
or
add
ret
push
adc
mov
cmp
or
pop
outsb
out
pop
mov
je
mul
jbe
dec
jnp
and
mov
cmc
out
addr16
push
xlat
inc
orb
cltd
in
xor
outsb
and
jecxz
cmp
inc
ret
addr16
jb
in
jmp
scas
push
xor
imul
out
stos
xchg
dec
push
xor
mov
dec
push
mov
test
adc
xorb
aaa
ret
lock
aas
adc
fisubs
lret
mov
jle
int3
jae
push
in
mov
dec
sub
add
outsl
cmp
push
add
adc
popa
cltd
pusha
mov
inc
mov
mov
mov
jmp
adc
xchg
dec
push
jecxz
push
adc
outsl
mov
icebp
xor
jae
mov
jp
mov
and
leave
mov
jp
test
jecxz
nop
or
push
gs
mov
mov
das
mov
sub
mov
scas
add
pop
mov
or
cmp
mov
popf
push
sti
dec
pop
popa
jecxz
lcall
mov
sub
int
mov
add
mov
pop
lods
jmp
add
mov
xchg
test
dec
insl
adc
mov
jl
pop
mov
aam
xchg
push
mov
shlb
pusha
dec
push
mov
ret
cmp
lahf
jle
pop
in
cwtl
sbb
lds
mov
test
push
sahf
jo
adc
out
lods
adcb
mov
fsubrl
mov
dec
ficoml
fs
jmp
or
mov
daa
ds
xchg
movsb
pop
mov
fcmovu
mov
dec
cltd
and
jmp
sub
pop
loop
fdivrs
gs
mov
add
sbb
test
in
mov
ret
mull
mov
inc
fnstsw
or
ret
fwait
int3
push
inc
int3
inc
xchg
jno
cmp
and
mov
leave
ja
inc
shrl
sbb
ret
out
test
out
fstps
scas
cwtl
adc
lock
mov
jge
xor
push
inc
adc
dec
sbb
xchg
rcrb
jmp
dec
adc
gs
int
jo
in
outsb
test
or
jg
jge
and
jno
jae
jne
ja
xchg
xchg
icebp
push
push
and
out
inc
fwait
lcall
or
lods
leave
test
and
or
popa
mov
fdivl
pop
mov
lods
push
aaa
imul
mov
mov
out
cmc
mov
aam
and
mov
insl
add
std
fbstp
out
aad
repnz
cmpsb
sbb
out
mov
sub
pop
mov
imul
bound
inc
icebp
sti
cli
ror
int
cli
jge
or
pusha
cmpsb
test
cmp
xlat
adc
cld
add
out
loope
xchg
and
sbb
sbb
sti
lods
data16
jp
push
push
mov
xor
push
ljmp
imul
adc
hlt
movsl
adcb
adc
mov
mov
mov
mov
inc
pusha
jecxz
xlat
out
rcpps
filds
xor
mov
nop
and
lret
sbb
dec
rolb
pop
xor
enter
stos
ror
mov
test
cmp
xchg
add
leave
push
mov
or
cmpsl
mov
mov
lea
pop
fwait
jg
movsb
and
push
aam
icebp
std
push
pop
mov
jg
decb
ds
pmuludq
aaa
xor
outsb
jg
ljmp
hlt
pop
ljmp
sahf
dec
cltd
in
sbb
addl
iret
shrl
lds
xchg
adc
shl
mov
fcompl
pop
test
cmc
sub
adcl
dec
or
push
lods
push
addr16
jg
sub
loope
jle
dec
xlat
push
repz
cs
xor
push
cmp
lret
xchg
sub
test
jae
subb
fistpl
fnstenv
fcmove
into
popa
add
lret
sub
call
outsl
push
aad
jl
xchg
inc
fbld
sub
xlat
fwait
mov
jmp
std
jge
jge
adc
mov
pop
and
ret
adc
inc
repz
ret
push
imul
movsb
aam
sub
mov
xor
lahf
lods
les
cmp
addr16
lahf
xchg
sbb
lret
dec
push
arpl
out
enter
movsl
ret
jbe
dec
sbb
jno
mov
xchg
stc
jo
mov
cltd
adc
daa
mov
in
or
xchg
dec
repz
jl
mov
test
inc
loopne
sbb
inc
fwait
hlt
out
jmp
lods
or
aad
dec
insl
xor
incb
lahf
xchg
les
jb
pop
jb
mov
cmp
sarl
dec
or
jg
jbe
xor
scas
mov
loope
fld
jle
int3
cmp
jbe
pop
add
inc
das
and
and
push
push
cli
std
mov
mov
mov
sub
xor
shrb
stos
inc
ret
jmp
or
mov
xor
sbbl
lahf
daa
add
repz
sub
out
pop
xlat
ljmp
lods
xchg
cmpsl
push
repnz
xchg
xchg
sbb
mov
lret
cmp
addr16
cmp
je
jg
sub
xor
lds
add
enter
vpunpckldq
fcomp
mov
mull
ret
mov
popa
pop
jge
les
jge
sbb
xchg
mov
lahf
mov
xchg
add
jl
fwait
sub
insl
push
insl
aam
jge
arpl
mov
push
mov
jle
out
adcb
xor
adc
push
js
out
push
mov
mov
inc
adc
jb
inc
push
iret
xchg
lahf
pop
inc
and
mov
lret
or
std
ret
push
push
scas
lcall
call
rclb
jecxz
dec
imul
adc
lods
xchg
jecxz
push
ljmp
fadds
pop
mov
outsl
mov
hlt
das
iret
leave
shll
mov
xchg
sub
or
jo
pop
mov
push
lods
fnstcw
std
adcl
inc
enter
rclb
mov
and
mov
push
sub
push
cmpl
sbb
push
lahf
insl
dec
fucomip
pop
push
cmpsb
or
repz
iret
int
or
popf
ljmp
xor
out
fs
mov
pop
push
in
pop
test
cld
sub
mov
push
lret
pop
leave
jp
ret
pop
addr16
idiv
iret
mov
aaa
sti
int3
xchg
push
cltd
pop
les
push
sahf
loopne
and
push
mov
repz
lds
xor
mov
inc
push
add
pop
scas
mov
fs
cmp
lea
test
pop
adc
mov
add
loopne
mov
in
sbb
mov
sbb
icebp
mov
or
and
mov
pop
loopne
out
cmp
push
push
inc
repz
sti
dec
mov
lahf
adc
cs
clc
push
jmp
testl
repz
js
sarl
arpl
popf
aas
fildll
aad
stos
pusha
mov
mov
into
cmc
dec
out
in
xchg
fstpt
push
cmp
lret
xorb
push
mov
mov
sub
popf
pop
mov
push
ror
imul
xchg
pop
fs
xchg
stos
inc
dec
xchg
out
jl
shll
and
mov
cmp
dec
jnp
sbb
jo
mov
ret
das
in
adcb
xchg
call
test
inc
test
adc
sub
lods
mov
subl
push
in
inc
lahf
pushw
scas
push
xor
addr16
dec
adc
mov
loope
and
or
es
xchg
outsb
jo
and
mov
inc
fs
inc
and
jae
outsb
aaa
popf
lret
shrb
imul
in
push
dec
aas
and
fwait
cmp
jbe
lods
jb
ret
outsl
xchg
ret
ljmp
mov
int
xchg
cwtl
mov
sub
xchg
imul
jle
cmp
ljmp
sub
cmp
pop
mov
dec
xor
fwait
outsb
lret
ret
les
mov
jnp
jns
sbb
xchg
js
mov
jno
arpl
cld
shrb
shlb
lcall
iret
aaa
andl
push
mov
inc
out
int3
popa
jae
inc
into
sti
mov
movsb
testl
shll
int
push
mov
fimuls
mulb
push
jo
fimull
or
stos
mov
popa
out
aad
ud2
jl
ja
or
xor
sub
pop
lcall
out
mov
mov
jne
jo
lock
pop
sbb
push
icebp
fs
jmp
outsl
xchg
jge
sbb
aam
hlt
pop
mov
rcll
idivl
in
mov
mov
test
mov
dec
ss
push
jge
out
inc
lret
pushf
div
ret
mov
mov
faddp
dec
jge
lods
ret
ret
dec
ror
add
sarl
push
adc
sarb
pop
xchg
out
rcrl
ja
pop
test
sub
and
xor
xchg
mov
les
and
mov
xchg
or
insb
stos
pop
mov
mov
xor
addr16
in
push
ret
aaa
inc
lock
sub
shrb
lea
rolb
insb
outsl
cs
movsb
mov
cld
or
test
gs
xchg
add
jl
and
lret
popa
aaa
push
lahf
adc
or
scas
loop
cmp
push
inc
and
cmp
in
inc
in
call
sub
in
xchg
sahf
pop
add
adc
insl
mov
sbb
ret
fnstenv
jle
lret
xor
or
mov
push
fmul
jl
hlt
out
jno
dec
push
dec
xchg
loope
mov
or
test
mov
mov
sbb
adc
loopne
lods
mov
jo
orb
inc
push
mov
cwtl
jmp
popa
adcb
dec
int
repz
stc
mov
and
rol
rolb
add
gs
jnp
addr16
push
movl
or
js
outsb
push
je
mov
popf
push
sub
xchg
fldt
xor
or
in
lret
in
xchg
push
jne
push
pop
add
rcrb
test
in
dec
push
lret
pop
mov
dec
orb
dec
mov
jmp
sbb
cmc
or
movsl
enter
aam
dec
xor
add
mov
call
push
das
push
mov
fwait
sbb
pop
xor
or
rorl
ja
stos
js
inc
xchg
mov
sub
mov
cmpsl
lcall
mov
adc
js
bound
mov
mov
or
push
jecxz
pop
and
js
lods
les
insb
hlt
pop
dec
xor
andl
mov
rclb
in
mov
out
insb
xchg
add
sub
mov
ret
pop
gs
cli
ds
inc
cmc
inc
movsl
mov
adc
hlt
dec
rcr
test
pop
xchg
int3
insl
mov
mov
mov
and
and
inc
push
loope
mov
cmpsl
push
rcrl
idivl
push
sub
inc
inc
pop
and
mov
lock
adc
push
in
out
imul
icebp
mov
aad
or
xor
mov
mov
mov
pop
or
push
sahf
pop
mov
xlat
pop
ljmp
sbb
dec
adc
cli
xchg
out
frstor
sbb
fnstcw
insb
cwtl
inc
rclb
mov
cmp
sbb
addr16
fistpll
fimuls
jns
sub
dec
aaa
pop
imul
aas
ljmp
push
popf
div
ljmp
dec
cs
push
lods
jo
adc
arpl
push
clc
inc
xchg
jo
mov
or
inc
enter
mov
jmp
jp
cmp
popl
addr16
mov
popa
adc
xchg
ret
xlat
inc
dec
jo
add
pusha
pop
push
insl
mov
push
xchg
arpl
aas
fbstp
jge
dec
dec
or
std
xor
insl
push
or
mov
inc
sbb
mov
sbb
data16
sub
cmc
cmovg
dec
in
lea
push
in
insl
fcomps
mov
or
push
mov
icebp
push
lods
or
dec
out
hlt
pop
jge
mov
and
cld
and
mov
xchg
jo
clc
mov
rcrl
dec
xchg
inc
aaa
cmp
sub
pop
add
aaa
push
pop
sbb
mov
insl
sub
sarl
mov
out
push
inc
mov
call
dec
shll
mov
test
xchg
and
pop
imulb
cmp
out
sti
in
test
sahf
data16
cli
push
enter
lret
outsb
aas
in
lahf
lds
popf
popa
push
mov
sbb
clc
pop
or
push
sub
and
xor
test
mov
bound
sbb
xor
mov
addb
lock
mov
inc
out
dec
mov
pop
cmpsb
inc
push
js
loopne
sti
push
sub
rclb
mov
mov
xchg
cmc
push
dec
sub
or
fwait
sub
cmp
ret
mov
fcmovb
ficomps
xchg
inc
lret
mov
inc
js
mov
jp
out
loope
adc
fnstsw
mov
inc
fldt
sbb
aad
adc
lods
inc
or
std
sbb
dec
negb
inc
cli
hlt
mov
lods
mov
enter
andb
mov
movsl
sbb
inc
xlat
ret
popa
pop
sbb
jmp
jnp
mov
sbb
push
fdivl
xor
nop
sahf
scas
mov
orb
out
mov
cmp
sub
or
xchg
mov
sub
pushf
iret
push
test
push
aad
idivl
lcall
arpl
mov
cmp
xchg
inc
mov
lret
ja
cld
aam
jns
mov
int3
cmpsl
xchg
push
loopne
adc
cmc
pop
mov
aad
or
cmpsl
mov
shll
data16
jl
test
outsl
and
pusha
aad
inc
fsubs
and
scas
mov
push
popa
dec
call
dec
test
shlb
hlt
stc
imul
repz
dec
and
mov
add
addr16
add
xor
mov
movsb
cld
lret
stc
mov
lods
jle
shr
sub
jbe
ret
mov
dec
cmc
pop
out
popa
dec
push
pop
mov
sbb
cli
pushf
mov
sub
mov
mov
in
mov
xor
mov
sbb
lds
jle
stc
pop
fwait
stos
push
cmp
fidivs
push
mov
fwait
jne
dec
mov
dec
pop
cmp
xchg
push
pop
pusha
cmpsb
mov
andb
push
inc
adc
int3
shll
vpsubsb
les
fs
enter
dec
rol
mov
mov
or
ret
fcomi
pop
jae
ss
repnz
cmp
mov
xor
ds
enter
xchg
and
sbb
and
outsb
test
pushf
fmulp
cmp
pop
dec
add
pop
pusha
imul
mov
insl
popa
xchg
stc
jne
jbe
test
ret
jp
test
loope
push
mov
ljmp
mov
xchg
mov
lods
mov
push
stos
jp
dec
gs
lds
nop
adc
or
orl
decl
mov
stc
dec
cwtl
or
push
sub
inc
push
push
out
cmp
sbb
lods
adc
iret
stc
lock
and
in
ret
push
xchg
mov
mov
call
or
pop
or
cmp
rol
testl
ror
jae
xchg
scas
shrb
int
sub
sub
jmp
subl
push
cs
adc
movsb
in
scas
jne
je
js
adc
push
and
adcb
pop
mov
add
dec
pop
mov
inc
in
mov
in
push
lods
loopne
and
push
mov
rol
sbb
je
cwtl
in
inc
icebp
cld
jb
shlb
jmp
pushf
movlhps
mov
ret
cmp
stos
insl
dec
pop
adc
jl
pusha
xchg
push
add
rep
pop
lahf
ret
xchg
sub
adc
clc
xchg
je
and
and
movsb
int3
or
lods
mov
arpl
stos
call
into
cmpl
scas
mov
dec
outsb
movsb
xchg
lea
sbb
and
xchg
xor
add
bound
or
push
es
pop
xor
jb
stos
xchg
imul
add
gs
mov
mov
test
sbb
mov
sbb
ret
cmpsb
inc
adc
fs
and
xchg
sub
pop
nop
jns
mov
stc
sbb
add
sub
xchg
out
push
push
mov
psrlq
lods
add
es
and
gs
daa
jmp
insl
test
test
movsl
dec
inc
xor
xor
or
idivl
pop
jo
nop
movsb
or
adc
xchg
and
lock
lods
pop
jne
sbb
dec
pop
jns
cmp
mov
inc
xchg
cmc
lods
aaa
mov
enter
mov
popa
push
inc
sub
cs
jg
aas
jb
bound
aas
outsb
fcom
out
dec
mov
pop
dec
pop
pushf
aaa
or
fwait
push
in
mov
push
push
cmp
mov
mov
iret
push
pop
pop
loopne
jbe
jbe
gs
in
sti
bound
xor
pusha
sub
addr16
jl
and
cmp
mov
iret
mov
sub
stos
push
mov
arpl
jne
inc
call
test
pop
lock
and
pop
add
inc
sahf
dec
mov
cs
xor
nop
mov
jecxz
xchg
or
ljmp
scas
mov
inc
leave
into
inc
push
dec
dec
mov
arpl
and
in
clc
insl
sarb
sti
or
push
cmp
popa
movsl
cmpb
xor
mov
hlt
mov
or
mov
dec
movsl
out
imul
jl
cmp
movsb
cmp
pop
mov
and
mov
in
xchg
in
nop
jge
nop
popf
mov
push
adc
and
cld
push
sbb
movsl
push
push
jo
aad
fldcw
aas
jnp
pop
pop
mov
lea
xor
fs
dec
arpl
push
jl
inc
mov
or
jb
mov
dec
idiv
out
inc
or
shlb
xchg
sbb
pushf
das
repz
add
mov
pop
mov
mov
rclb
sub
jae
pop
add
pop
ljmp
xor
aaa
insb
aas
sub
enter
push
add
inc
mov
push
mov
push
in
ljmp
rolb
mov
orb
ja
push
shl
iret
nop
push
push
inc
pushf
cmp
add
push
pop
xchg
cmpb
jge
test
fwait
ljmp
lea
adc
aas
out
push
sbbb
cmp
xchg
pop
and
data16
ds
cmp
sub
and
out
cli
das
sub
jb
aas
inc
enter
int
mov
fidivs
push
jb
dec
xor
and
inc
jp
nop
push
dec
iret
mov
clc
mov
mov
pop
lcall
js
mov
mov
push
adcb
test
test
push
test
incb
xchg
mov
ja
clc
mov
test
mov
fdivrs
arpl
je
xchg
ljmp
mov
inc
in
decb
adc
lret
repnz
dec
iret
std
fisubl
mov
pop
lahf
jne
pop
out
or
jns
fs
lret
push
push
fwait
stos
fwait
or
clc
xchg
add
in
xchg
mov
fs
pop
fwait
push
fldcw
xchg
jno
in
outsl
test
mov
cwtl
pop
rcrb
pop
adc
sahf
mov
jecxz
sbb
shl
clc
loope
inc
adcl
adc
aad
sbb
dec
and
jecxz
xchg
fcmovnu
jmp
mov
clc
mov
bound
sarb
sub
mov
clc
dec
adcl
mov
jne
jl
arpl
fldenv
inc
mov
dec
lods
out
jle
adcl
notb
and
push
imul
sbb
loopne
xchg
sbb
sbb
adc
sti
jl
out
pop
test
inc
lcall
outsl
mov
xchg
pop
fldl2t
icebp
jo
in
push
and
int3
imul
jle
xor
push
mov
stos
jl
pop
das
fstps
inc
add
sub
mov
divb
popa
mov
pop
mov
cs
cmc
pop
xchg
arpl
jne
arpl
test
scas
sbbb
cmp
repnz
ror
xchg
and
mov
xlat
clc
popa
mov
jg
xchg
test
sub
sarl
dec
jo
inc
outsb
daa
lahf
xchg
leave
dec
add
push
jo
xchg
je
or
rol
pop
ret
or
mov
or
andl
fwait
inc
lcall
out
movsb
and
andb
call
push
jae
ds
jmp
iret
push
mov
sbb
mov
retw
subl
das
push
inc
outsl
add
mov
cli
test
jge
sub
push
mov
orb
sbb
sahf
add
bndstx
add
nop
cs
xchg
lret
sarb
sub
mulb
add
sbb
mov
add
add
ds
aam
int
jge
nop
jecxz
arpl
repnz
ljmp
cmp
jo
insb
push
gs
daa
xor
adc
sbb
iret
out
pop
sub
xchg
mov
or
pushf
xor
jle
xchg
xchg
pop
or
fwait
popa
xchg
sub
je
in
pusha
rol
rcrl
scas
or
pop
fcomps
sub
and
pop
testb
sarl
jg
xor
in
shrl
push
es
stos
fdivrp
movsb
adc
jg
xchg
hlt
cwtl
fsub
rorl
fwait
out
clc
jl
adc
mov
out
push
movsl
outsl
jbe
fs
mov
jbe
test
into
rcrb
jmp
jl
cld
stos
mov
and
cmp
ja
pop
imul
enter
leave
mov
jl
cmc
xor
in
test
push
cmp
fnstenv
inc
push
jbe
popa
out
mov
jno
pop
das
jnp
sbb
adcb
mov
jecxz
scas
and
push
sbb
xchg
gs
test
push
xchg
mov
loop
jecxz
in
js
andl
mov
pop
lret
cmp
rorb
mov
inc
mov
pop
dec
xor
or
mov
xchg
rorb
jae
jbe
shlb
push
push
xor
enter
pop
movsl
fstps
pop
ffree
inc
mov
mov
sarl
out
mov
fldl2t
int
sahf
cmp
out
ficompl
add
es
sub
jl
sub
dec
push
insb
leave
or
mov
dec
out
cmp
aas
insb
insb
jecxz
sbb
push
mov
lret
pop
cmp
stos
push
mov
sti
add
repz
rcll
mov
roll
sti
ret
cld
push
cld
mov
push
push
xchg
sub
subl
mov
pop
sbb
mov
ja
jecxz
rcrl
insl
xchg
test
pop
loop
lret
xchg
cmp
call
jmp
mulb
stos
sub
xor
xor
jp
jae
fmuls
dec
ljmp
rcrl
mov
lea
xchg
popa
sub
ljmp
in
cmp
lds
imulb
pop
xchg
mov
dec
ljmp
pop
adc
jle
popf
lahf
push
ds
dec
stos
cmp
aas
xor
mov
jnp
mov
cmp
adc
scas
sub
mov
es
mov
xchg
cmp
lock
ret
fmuls
push
aas
imul
lahf
pop
data16
xchg
aas
arpl
loope
nop
jbe
and
and
mov
jae
cmpsl
mov
faddl
push
mov
or
dec
xchg
movl
pop
in
cmpsl
cmp
xor
add
cmc
sbb
les
into
jno
mov
fcmove
les
adc
add
scas
les
push
div
fstps
and
sahf
jno
dec
jbe
push
es
jl
nop
iret
pop
jge
mov
mov
add
movsb
xor
add
cmp
fildll
mov
dec
lcall
arpl
xorb
std
hlt
enter
fndisi(8087
or
setns
jb
adc
fbld
and
mov
fiaddl
adc
jno
adc
and
xor
lahf
sbb
popf
and
int
cmp
xor
test
pushf
push
mov
and
mov
mov
bound
sub
dec
orb
push
pop
xchg
gs
mov
pop
xor
lock
mov
mov
std
jo
or
cmp
and
xchg
mov
dec
pop
add
mov
adc
addr16
ret
loop
sub
jg
adc
sarb
pop
inc
mov
cmp
prefetch
fsubs
pop
int
std
mov
bound
jg
ss
daa
inc
jg
adc
sub
pushaw
push
outsl
js
pop
fidivrs
xchg
fptan
fsub
dec
add
into
ss
test
cmpsl
jae
imul
inc
jecxz
out
push
cld
mov
popf
xchg
add
popl
mov
inc
stos
cmp
shl
hlt
adc
stc
outsl
imulb
repz
jle
mov
sbb
not
jg
stos
adc
sub
mov
ljmp
data16
sbb
aad
cmp
pcmpgtb
movsl
jb
out
adc
dec
mov
push
imul
pop
pop
push
add
out
inc
ror
inc
lret
scas
add
hlt
adc
lret
daa
rcrl
jne
cmp
mov
xchg
les
adc
arpl
icebp
mov
clc
push
xchg
cli
xchg
mov
add
jnp
mov
hlt
gs
prefetchwt1
or
movsb
insl
out
insb
mov
ds
or
mov
jl
cmp
cmp
movsb
push
movsl
pop
imul
cvtps2pi
jnp
stc
pop
ret
adc
stc
std
push
mov
cmpsl
out
mov
ljmp
mov
inc
imul
lahf
outsl
shlb
mov
mov
add
scas
aas
cmpsl
rolb
sbb
xchg
jmp
mov
or
ficomps
inc
xchg
or
or
jns
ja
bswap
cmp
jle
and
mov
incl
jb
fcomps
jmp
in
jns
xchg
and
sub
xchg
cmpsl
sbb
pop
mov
adc
out
add
cmpsb
dec
clc
mov
loop
test
es
fisttpll
mov
xchg
adc
mov
int3
leave
es
mov
pop
push
jno
ja
xor
ja
cld
cmpsb
ret
fs
in
aaa
and
inc
in
inc
rorb
fs
sbb
fisttpl
or
adc
pop
sub
pop
mov
jo
xor
mov
mov
int3
push
daa
sbb
dec
sarl
int3
mov
fsubrs
mov
sar
sub
stos
push
rolb
sarb
mov
repz
xchg
cmc
jge
rcrb
inc
les
cli
sahf
sbb
loopne
fwait
in
aad
push
pop
xchg
cmp
xchg
adc
fisttpll
push
sahf
shrb
pop
push
ret
in
rol
std
les
negl
adc
test
xchg
inc
xor
cmp
mov
sbb
pop
cmpsl
adc
xlat
xor
pop
pop
dec
push
into
sbb
cltd
xorl
mov
std
mov
stc
dec
cwtl
xchg
int
cmpsb
sahf
pop
adc
fs
mov
pop
pop
xor
cmp
xchg
jb
ljmp
push
adc
mov
xor
inc
cli
inc
lahf
scas
inc
sub
or
adc
cmp
andl
xchg
insb
repnz
adc
loopne
std
into
cmp
mov
jno
jbe
add
push
xchg
addr16
push
push
xor
popa
add
xchg
fbstp
push
or
into
cmp
das
test
fsubrl
shrl
inc
mov
push
int3
push
dec
cmc
dec
mov
push
mov
cltd
call
mov
push
enter
aam
leave
pop
adc
and
dec
aaa
push
push
and
pop
dec
inc
sub
js
xor
mov
lds
add
jne
push
inc
out
fidivrl
xor
lret
jg
push
push
daa
sbb
arpl
out
pushf
fistl
push
mov
push
jmp
add
pop
mov
mov
cmp
scas
or
or
dec
sub
and
push
aas
dec
push
rolb
xlat
out
xchg
sub
cli
notb
jns
repz
pop
shll
mov
sub
mov
adc
loop
ss
sbb
fwait
mov
cmp
movb
push
imul
fidivrs
dec
out
adc
jl
imul
out
lods
mov
negb
imul
push
push
int
inc
xor
stos
or
cmp
cwtl
mov
push
lods
das
mov
movsb
mov
push
int3
cmp
rcrl
or
xor
adc
push
mov
pushf
cmc
daa
xchg
bound
out
outsb
cltd
mov
jno
xchg
pop
ljmp
push
adcl
adc
xor
sub
mov
mov
cmc
sbb
xchg
mov
shrb
testb
sti
rolb
add
in
das
les
mov
enter
scas
and
xorl
sbb
adc
adc
in
lret
mov
arpl
mov
mov
inc
push
xchg
xchg
aam
or
push
stos
gs
insb
mov
clc
xlat
push
push
push
dec
call
mov
xchg
leave
mov
mov
in
repnz
add
push
mov
add
rcll
dec
gs
xor
arpl
cmp
popf
push
repnz
push
lcall
cmp
mov
mov
or
lock
add
test
arpl
cmpb
or
loope
mov
insb
lahf
sbb
or
aaa
movl
jnp
enter
mov
dec
rcrb
pop
push
add
mov
mov
push
mov
aas
nop
mov
cld
mov
popa
dec
lods
das
scas
das
mov
aam
add
mov
rorb
outsl
je
push
and
call
nop
out
test
popa
push
mov
les
cmp
ds
xchg
ret
mov
add
inc
and
icebp
aam
cmp
xor
xor
jecxz
pop
sti
sub
fsub
xchg
or
bound
inc
jle
xor
outsl
pop
sbb
ss
push
aaa
cmc
repz
push
and
fsubl
enter
xchg
xchg
push
mov
xchg
cwtl
es
add
xor
jns
jmp
pop
faddl
sub
pusha
or
out
sti
mov
adc
in
mov
jge
insl
mov
dec
ret
inc
adc
sub
cmp
fidivrl
pop
out
inc
andb
les
mov
add
cs
test
lods
cmp
in
add
add
mov
js
lods
fcmovne
pcmpgtd
mov
push
es
sbb
add
sbb
push
into
fsubrl
mov
imulb
and
out
aas
or
mov
std
std
scas
mov
add
out
push
xchg
and
cmp
cmc
call
out
jno
xor
mov
sarl
mov
or
in
xor
mov
leave
fs
dec
daa
mov
mov
jp
inc
sub
mov
mov
outsl
pop
mov
pop
dec
fnsave
ret
mov
xchg
add
dec
lods
xor
jns
xchg
mov
in
dec
popa
xorl
xor
subl
pop
addr16
aaa
xor
ljmp
in
sbb
nop
call
mov
mov
cmp
mov
or
jg
int3
pop
stos
stc
xor
push
cwtl
sub
or
add
movd
or
dec
popl
imul
js
push
fistps
testb
popa
and
and
lods
nop
rcrl
cmp
add
pop
test
cmp
in
fcmovu
lret
ret
stos
cli
cmpsl
int3
insl
xchg
add
sub
jne
imul
sbbl
xor
xor
orb
cmp
jae
jno
mov
sbb
aam
cmp
cmpsl
push
out
in
lahf
push
fists
xchg
or
mov
cmp
mov
movsl
sbb
xchg
fildll
test
push
cmp
roll
fisubrl
mov
and
and
add
mov
mov
sbb
jbe
ja
xor
sub
pop
dec
inc
sbb
cmp
aam
aaa
aas
shlb
push
adc
daa
dec
mov
sbb
dec
clc
lods
stc
mov
out
mov
lods
roll
insb
sbb
push
add
imul
inc
xchg
neg
ljmp
pusha
or
xchg
das
aas
mov
jnp
fwait
bound
jno
fwait
inc
mov
mov
in
rcrl
cltd
xlat
dec
jae
shll
adcl
cmpsl
cmpsb
in
aaa
inc
out
out
ja
cmpsb
push
cli
xchg
pop
movsb
push
addb
dec
fcom
imul
cmp
daa
lds
enter
ret
add
adc
or
neg
inc
dec
adc
mov
call
les
push
shlb
popf
push
mull
addr16
and
xchg
xchg
inc
jae
ds
test
ja
cmp
pop
xor
sub
xchg
jno
push
adc
pop
jmp
dec
dec
in
outsb
mov
nop
xorb
clc
cs
jmp
sbb
nop
jno
fsubrp
loope
sbb
hlt
mov
div
mov
mov
and
cs
dec
sbb
cmp
inc
xchg
movsb
mov
push
push
mov
pop
movsl
mov
cmpsl
inc
bound
sbb
les
add
lahf
mov
mov
outsl
cli
xor
stos
out
ret
dec
dec
js
int
mov
cmp
cli
fbstp
adc
aaa
leave
sub
push
test
add
adc
lea
and
test
nop
push
aam
loopne
stos
ficomps
lds
xchg
cmp
dec
lods
add
call
sub
lret
xor
mov
faddl
scas
cld
in
lcall
inc
stos
mov
rorl
lds
pop
sbb
fnstenv
mov
xchg
mov
ja
shlb
jmp
loopne
sbb
xorb
repnz
inc
and
cmp
clc
sti
push
xchg
inc
lds
push
icebp
fwait
rclb
add
cmp
cld
lret
adc
out
dec
cmp
shrb
cmp
jno
cmp
test
add
cs
xlat
mov
dec
je
mov
sarb
pop
mov
sub
jmp
int3
enter
cwtl
inc
add
shlb
aam
inc
insb
inc
loope
rclb
mov
xlat
popf
fistpl
cld
xchg
sbb
xor
pop
cli
jge
aam
shrb
sbb
push
mov
pop
loop
xchg
sub
insb
movsl
cmp
cmp
add
and
xchg
stos
mov
mov
and
nop
dec
fwait
mov
fs
jae
cli
test
add
and
xchg
pop
call
es
xchg
mov
sub
mov
loop
insl
xchg
push
sbb
aas
fwait
mov
jbe
sub
add
adc
dec
frstor
cmove
xor
in
mov
jle
mov
loopne
movsl
or
aaa
icebp
dec
sbb
adc
jno
gs
push
fmuls
cmp
or
xor
lds
fbstp
pop
scas
inc
fcompp
xor
insl
ljmp
sbb
xor
and
jb
enter
jb
sti
jge
inc
repnz
shll
jne
scas
sub
mov
loope
dec
aad
inc
adc
iret
and
jp
aaa
fnsave
and
sbbl
ss
or
adc
dec
rclb
scas
cmp
mov
xor
pop
adc
jp
xchg
adc
lcall
clc
inc
jge
movsb
ror
pop
arpl
or
sub
mov
dec
cmp
stos
test
popa
ffree
mov
adc
jle
hlt
imul
push
imul
xchg
repz
mov
or
aam
dec
lret
testb
out
lds
or
mov
dec
push
popa
into
and
xorb
pushf
xor
cmpl
stos
cmp
insl
fcomp
mull
dec
in
adc
out
movsl
inc
mov
sub
scas
hlt
xchg
lods
push
xchg
in
sub
clc
mov
jp
sahf
xor
pop
sbb
fadds
push
adc
popf
lcall
xchg
movsb
mov
dec
dec
mov
push
fwait
xor
sub
movsl
ret
mov
inc
ja
cli
test
sbb
jg
pop
cmovno
cmpb
jle
mov
pop
sarb
adc
sub
das
push
push
sbb
shlb
call
out
jecxz
sbb
sarb
fiadds
jp
dec
cs
pop
cmpsb
sub
add
repnz
cmp
xchg
pop
into
mov
inc
or
inc
cmp
lds
or
pushf
inc
jo
ljmp
rcll
cmp
mov
jne
std
ljmp
in
xchg
cwtl
push
loop
pop
sbb
jge
jnp
and
aas
cmpsb
jmp
cltd
mov
fmull
push
mov
outsl
hlt
mov
je
push
popa
bound
jne
pop
sbb
dec
repnz
xchg
iret
mov
xchg
aad
andl
mov
idivl
jno
xchg
faddp
and
inc
jmp
sbb
sahf
aaa
and
mov
xor
jae
jae
test
lahf
leave
cs
jb
aam
xchg
push
repnz
dec
adc
sub
and
sub
fisttps
mov
push
sahf
dec
and
fwait
sub
pop
xor
pop
sub
push
add
pop
mov
xchg
cs
add
dec
jg
cmp
push
jge
movsl
push
movsb
push
std
xor
mov
notb
xchg
lods
push
dec
push
adc
jae,pt
and
sbb
sbb
int3
jp
mov
add
mov
mov
hlt
mov
and
icebp
test
xchg
icebp
sub
addr16
jno
and
int
jno
jno
push
inc
scas
cmp
mov
out
in
ljmp
xchg
out
jmp
into
xchg
adc
jo
cmp
cmc
repnz
nopl
inc
mov
scas
cmpl
test
sti
aad
rcrl
pushf
in
cmp
or
xchg
inc
loope
addl
in
subb
mov
sub
dec
test
loope
rorl
inc
aam
cwtl
mov
into
pop
cmp
jo
push
xor
or
xor
gs
loop
daa
sbb
cltd
mov
mov
and
push
bound
cmp
xchg
mov
jle
nop
push
mov
fld
adc
or
lods
xor
ljmp
add
int3
xchg
fcoms
nop
je
inc
scas
mov
sub
aam
xchg
push
ljmp
shll
sbb
fisttpl
ret
xlat
ss
idiv
mov
or
shrb
mov
jge
pop
or
cmp
sbb
add
in
mov
in
aaa
and
out
add
sbb
adc
cwtl
adc
mov
push
fcmovnbe
cmp
jno
mov
rcrb
fidivs
push
inc
mov
mov
stc
mov
sbb
out
adc
and
sbb
xor
lret
jae
sahf
xor
push
xlat
repnz
shrl
rcrl
shll
repz
leave
mov
cwtl
pop
jge
loopne
pop
adc
out
push
rolb
add
add
dec
pop
xchg
push
mov
outsl
push
mov
pop
xchg
dec
mov
cmp
pop
mov
test
and
push
loopne
dec
cmpsb
rclb
aam
jg
cmpsb
int
out
or
xchg
adc
jo
rcl
fcomi
sub
mov
fdivrs
push
sti
out
repz
loope
mov
mov
jno
inc
add
mov
outsb
aas
dec
in
and
sub
fcomi
ret
loop
fldt
add
dec
fsubrs
jl
cs
sub
push
mov
adc
xor
mov
loop
and
scas
xor
push
lret
push
push
push
cltd
dec
inc
or
or
sub
mov
xchg
out
pop
lahf
sbb
fisttpl
stos
mov
loopne
dec
arpl
sub
int3
outsb
fwait
aad
dec
push
cmp
mov
enter
subl
jno
pushl
aas
fnstenv
idivl
sub
fidivrs
push
movsl
cmp
or
add
stos
push
subl
push
mull
lahf
test
out
mov
pop
lods
or
sub
push
xchg
or
jp
cmc
fistps
fstpt
dec
cmp
mov
xchg
pop
bound
ficomps
pop
imul
lods
jle
dec
repnz
aam
jg
call
push
or
mov
mov
out
xchg
fdivs
xchg
mov
add
or
xchg
pop
add
cmp
aam
push
or
xor
mov
je
or
mov
push
or
sub
jmp
cmp
adc
dec
fwait
sub
adc
orl
imul
inc
fstps
or
push
add
push
adc
pushf
adc
jno
fistpll
sub
lock
outsb
imul
mov
fisttps
hlt
mov
pop
xchg
cmp
pop
aaa
push
mov
fwait
int3
nop
ret
insb
outsb
jo
ja
inc
outsl
cmpsb
add
dec
stc
jnp
sbb
push
int
add
iret
cmc
push
cmp
cs
jbe
inc
push
pop
rorl
fisubrs
mov
outsl
fcmovu
popf
test
and
xchg
jmp
inc
cmp
aam
into
fstl
xor
mov
push
xlat
cmp
test
mov
jns
dec
sub
xchg
or
arpl
call
fdivp
arpl
mov
jle
enter
adc
mov
shll
sbb
test
jg
mov
cmp
sbb
xchg
xchg
arpl
sbb
xchg
sub
movsl
jb
enter
dec
jp
inc
mov
sahf
or
out
mov
or
jmp
mov
cmp
push
add
pop
or
test
push
arpl
or
and
ret
cmp
push
or
rcrb
or
mov
and
lahf
pop
pop
pop
pop
pop
lret
fwait
pop
mov
subb
pop
and
push
pop
loopne
cmp
rcr
inc
dec
mov
push
sub
lods
push
pop
inc
sub
data16
subb
leave
hlt
jno
cmp
cmp
jge
mov
jle
nop
movsb
xchg
mov
sbb
push
mov
mov
rcrl
in
add
rcll
xor
cmp
adc
rcrl
icebp
jp
int
stc
imul
cmp
jl
adc
and
cmp
fdiv
roll
xor
inc
ror
arpl
jp
add
mov
out
js
fnstcw
iret
test
mov
int
adc
test
data16
pop
mov
in
movsl
pusha
cmc
lods
lahf
into
xchg
and
movsl
cmp
adc
fistpl
shll
jle
xchg
fisttpl
frstor
xchg
fiaddl
clc
push
out
mov
rcr
ljmp
pop
stc
jg
inc
xchg
imul
mov
add
mov
nop
dec
and
in
cld
cmp
fsubrl
dec
mov
loope
cltd
repz
pop
dec
out
loop
pop
jmp
or
popf
daa
in
std
addb
push
ror
mov
jno
push
icebp
jne
ficompl
xor
fbld
lods
insl
pop
adc
inc
mov
and
std
push
mov
pop
jne
and
push
mov
popa
adc
cmp
mov
jmp
pop
xchg
ljmp
fistpll
in
icebp
aam
xchg
mov
cmp
or
pushaw
push
pushf
push
fcomp
leave
lcall
add
xor
xchg
in
sbb
fwait
dec
psraw
and
sub
notl
loopne
inc
add
pop
mov
dec
cmp
sbb
aad
add
cmp
mov
jo
cmp
sbb
out
mov
js
jmp
in
popf
in
jl
test
arpl
jp
adc
pop
mov
sub
and
dec
out
push
pop
pop
sbb
jo
test
dec
mov
fdivr
pop
into
icebp
pop
repnz
shrb
jecxz
xchg
stos
mov
dec
pushf
push
push
in
fwait
bound
xchg
pop
xrelease
push
int
xor
ljmp
dec
stos
pop
inc
imul
cmp
repnz
xchg
aad
xchg
cmpsl
ret
pop
sub
or
sub
lcall
mov
leave
fidivrl
sbb
add
push
sbb
cmp
push
mov
cmp
pop
outsl
repz
jle
popa
lods
jg
sbb
gs
aam
scas
roll
xchg
sbb
add
mov
or
sub
in
daa
les
insb
inc
ss
dec
iret
and
add
icebp
imul
sbb
dec
outsl
cwtl
scas
add
push
cmpsl
mov
pop
push
push
lret
loope
shrb
cmpb
jp
enter
aaa
add
sub
mov
fld
mov
sbbb
test
and
fwait
inc
add
mov
pop
push
iret
das
int
ds
mov
test
pcmpgtd
jle
dec
and
and
pop
in
lahf
pop
adc
cmp
add
push
sti
testl
pop
dec
cmp
add
push
or
bound
das
dec
and
cmp
mov
cmp
std
pop
and
movsl
rcr
icebp
mov
sub
cmpl
iret
or
test
mov
xlat
loopne
cmp
repnz
in
pop
pop
jl
and
gs
jg
cmp
mov
loope
dec
inc
call
ja
and
push
scas
test
rcll
xor
xchg
push
scas
and
dec
out
add
mov
bound
out
push
popa
inc
in
dec
movsl
or
fwait
sub
inc
lahf
xor
jmp
or
jne
inc
inc
mov
fists
xchg
sahf
cmp
bound
cmp
pop
ret
jo
pop
rolb
xor
orb
pop
les
jbe
cwtl
jge
test
sbb
mov
imulb
push
call
pop
or
add
inc
fbstp
lods
hlt
jno
xchg
push
mov
xor
ljmp
movsl
adc
sbb
dec
shrl
jle
cltd
jle
xor
cmp
inc
mov
mov
sbb
repz
pop
out
inc
inc
cwtl
xchg
sbb
cmp
adc
jge
mov
cmpl
push
push
and
xlat
add
mov
hlt
lcall
adc
xor
xor
inc
xorl
pop
mov
dec
ffree
mov
loope
push
xor
nop
lcall
xor
fdivrs
cmp
decb
lds
mov
and
popf
jno
notl
cmp
push
dec
jns
clc
lea
scas
fnsave
loope
hlt
sbb
movsl
nop
mov
mov
add
repz
or
xchg
jne
les
dec
adc
xchg
orb
sub
mov
popa
jo
push
stos
add
and
adc
pop
jae
mov
and
and
mov
ret
sbb
out
test
push
xor
sub
pop
mov
mov
rcrb
lock
dec
dec
adc
xchg
inc
push
adc
ljmp
ljmp
cs
cmp
std
popf
hlt
and
jp
subl
xchg
mov
cltd
icebp
orl
dec
aam
dec
shrb
push
xchg
pushf
movhlps
jmp
or
clc
call
sti
gs
cli
out
dec
pushf
xchg
cwtl
stos
pop
testb
cmpl
jmp
out
mov
cs
xchg
or
and
add
lds
loopne
add
repnz
arpl
push
xor
cltd
jae
inc
data16
pop
mov
aad
sbb
xchg
mov
xor
iret
mov
fimuls
scas
jo
std
mov
inc
movsb
lret
lock
outsb
data16
int
cmovb
int3
jo
inc
sub
daa
fsubrs
cli
push
out
jns
dec
iret
in
mov
sahf
je
and
rclb
or
adc
iret
adc
mov
pushf
lret
fstpl
lret
dec
adc
sub
shrl
add
push
xor
adc
cltd
nop
sub
std
push
lods
mov
and
inc
sbb
xor
and
cmp
rclb
and
dec
cmp
mov
or
shll
out
pushf
mov
sbb
imul
pop
and
mov
push
aas
or
push
jmp
xor
jp
arpl
add
cmp
jno
in
jg
pop
loope
sbb
decl
mov
leave
flds
shrl
sbb
movsb
fs
addr16
push
sub
mov
std
or
loop
jg
add
repnz
decl
xchg
stos
mov
int
mov
mov
adc
popf
and
push
and
pushf
cli
loop
outsb
pop
leave
and
ficomps
xchg
scas
popa
leave
or
or
daa
js
jl
dec
xchg
loope
or
lahf
and
into
fs
mov
popa
lods
out
cld
inc
cmp
push
adc
fildl
adc
xor
inc
les
daa
adc
in
sub
adc
push
rorl
or
scas
or
divl
arpl
sbbl
push
jge
jl
insl
aam
xchg
gs
mov
mov
sbb
xor
repnz
gs
jl
enter
push
push
popf
xor
sbb
not
jbe
cld
hlt
cmp
fldcw
and
mov
cltd
fstl
outsl
in
add
push
jg
cltd
adc
mov
rorl
push
mov
sbb
in
add
das
mov
push
sub
nop
pop
repz
sub
mov
cltd
scas
fsubrs
leave
fildl
push
shrb
adc
aaa
insb
faddl
jmp
mov
push
dec
mov
or
sub
add
jnp
adc
jmp
sbb
lahf
stc
mov
cmp
fildll
sub
stos
bound
insb
ror
out
cmpl
aas
call
cmp
cmpsb
mov
pop
pop
cmp
sbb
pop
jecxz
jbe
leave
pop
and
ret
sbb
mov
scas
movsb
jae
mov
loope
sub
jb
mov
inc
stc
loopne
lods
jnp
mov
je
mov
sub
inc
daa
mov
inc
fldenv
ljmp
mov
xchg
stc
sub
xor
xor
mov
fs
xchg
scas
aaa
scas
insl
push
out
and
xchg
shl
je
xor
mov
dec
sarb
ljmp
mov
lret
inc
jo
mov
test
mov
ja
sbb
loope
mov
xor
fsub
rcl
cli
cmc
sub
jbe
cli
xchg
jnp
popa
jo
or
out
sahf
mov
cmp
mov
mov
add
icebp
sub
arpl
mov
clc
xchg
cmp
and
rcll
ret
fldcw
stos
cltd
push
imul
adc
nop
jmp
jns
mov
stc
enter
cli
std
sti
cmp
cli
sbb
mov
dec
inc
push
lahf
adc
pop
push
push
adc
pop
push
jecxz
idivl
or
fs
mov
lods
cmpb
fs
sbb
je
stos
xlat
mov
mov
insb
sub
xchg
inc
xchg
test
or
inc
adc
scas
es
ds
dec
xchg
inc
dec
push
fwait
call
fs
cmp
mov
dec
mov
xchg
xchg
pop
hlt
pop
push
mov
xor
out
cli
clc
cmp
cmp
pop
repnz
ljmp
sar
add
inc
shll
mov
and
lret
jmp
mov
inc
ss
mov
das
pusha
jp
pushf
cwtl
and
push
dec
cmp
in
cli
clc
and
adc
aaa
jmp
and
adc
adc
lock
add
lea
inc
ret
cmp
xchg
pop
push
xor
icebp
push
jp
jne
stos
add
hlt
cmp
xor
cmp
xchg
mov
xchg
lods
popf
dec
mov
xor
xchg
jl
stos
clc
aam
je
int3
std
addr16
jge
adc
jp
jp
add
test
pushf
call
mov
es
cltd
out
nop
jae
fidivrl
nop
iret
lahf
xchg
andb
add
jne
ja
int
stc
int3
in
test
xor
lds
push
mov
push
fildl
mov
sti
jge
leave
fidivrl
roll
adc
inc
mov
xchg
xchg
aad
push
mov
sbb
jno
cltd
dec
ret
sub
pop
xor
repnz
push
adc
pop
jnp
popf
inc
adcb
popa
inc
enter
repz
mov
mov
inc
inc
dec
or
ret
test
dec
gs
fcomps
fidivrs
mov
or
xlat
lahf
leave
nop
and
imul
jg
stc
sub
push
cmp
and
xor
and
ret
scas
pop
push
inc
loop
pop
jne
xchg
mov
push
lds
cwtl
mov
mov
iret
xchg
jns
scas
xor
lods
lock
mov
adc
mov
insl
push
push
subl
pop
loopne
or
lods
insl
mov
xlat
fistl
in
flds
nop
and
jae
xchg
mov
fstpt
mov
and
loop
add
test
fdivs
cmp
loopne
push
push
lret
add
xchg
cld
mov
roll
rcll
cmpl
sti
pop
or
cld
sub
mov
push
aam
in
jae
imul
push
gs
mov
in
pop
adc
iret
push
xchg
sbb
xor
adc
aam
jl
lock
jne
jne
sti
je
shll
in
sarl
and
cmpsb
in
mov
add
jmp
inc
and
in
jle
sub
push
and
pop
xor
test
cwtl
dec
pop
lret
add
or
popf
push
pop
push
insb
adc
js
push
inc
jge
add
mov
push
jns
add
sarb
adc
enter
lcall
fucomp
cmp
mov
mov
jecxz
mov
or
js
sbbl
mov
divb
pop
push
sbb
int3
in
test
adc
or
mov
inc
out
sbb
roll
shlb
and
je
dec
orl
addl
loop
outsb
lcall
jmp
stos
stc
repnz
out
mov
aas
pop
inc
int3
outsl
inc
loopne
jae
dec
jo
xlat
add
repnz
hlt
in
pusha
inc
dec
dec
add
push
mov
out
pop
xor
add
pusha
cmpb
and
mov
jb
in
fistpll
rcl
push
imul
add
dec
lahf
cs
add
dec
adc
das
pop
and
sub
push
cli
scas
push
inc
mov
jle
fwait
add
lock
movb
jae
sub
pop
xchg
jns
sarb
cmp
sahf
out
test
cmp
hlt
in
pop
cmp
and
pusha
movsb
push
pop
mov
inc
mov
lcall
dec
inc
mov
mov
call
pop
push
mov
out
sar
sub
jno
aad
arpl
outsl
nop
xor
cmp
sbb
mov
lahf
mov
jle
sar
popf
test
cmpsl
movsl
out
lds
inc
int3
add
dec
mov
cld
adc
adc
out
mov
aam
mov
daa
pop
stos
jae
mov
hlt
jns
outsb
lret
outsl
das
dec
jb
or
jbe
sub
or
rorl
inc
loopne
pop
xchg
dec
lcall
inc
std
shrl
jecxz
stc
movsl
or
gs
xchg
movsb
jmp
jl
inc
movsl
inc
je
xchg
pop
lret
push
int3
nop
int
and
lods
jno
lods
pop
ficompl
jp
movsl
xchg
sbb
popf
mov
les
pop
mov
add
arpl
mov
pop
mov
cmp
add
xchg
mov
mov
mov
mov
mov
sub
sub
adc
push
ret
leave
push
insb
cli
nop
mov
sub
mov
adc
mov
pusha
scas
imul
dec
cltd
add
add
or
jl
js
mov
lcall
fdivr
xchg
xchg
fldenv
pop
adc
mov
les
fistl
rcrl
pop
adcl
stos
xchg
jg
repz
cmp
adc
lock
lock
xchg
push
dec
repz
push
push
jp
test
test
jmp
in
sahf
cmp
pop
push
lods
sbbl
and
and
xchg
and
mov
outsl
lds
ss
addr16
dec
fisubs
shll
pop
lahf
std
outsl
adcb
jge
fwait
pop
nop
inc
ret
mov
into
inc
sub
iret
sbb
fs
jne
insb
in
inc
cmc
imul
sub
mov
scas
cmp
sbb
cmp
int
ja
sub
ret
xor
imul
jge
xor
imul
dec
push
addb
pop
mov
rorl
cmc
pop
icebp
inc
add
inc
enter
mov
xchg
hlt
mov
pop
hlt
test
adc
subl
add
shl
je
fcompl
and
ss
cld
dec
xor
add
fisubrl
daa
stos
lea
les
subb
fsubs
aam
fsub
outsl
pop
and
add
jmp
in
fwait
push
sub
sub
scas
mov
mov
mov
ljmp
inc
mov
inc
push
adc
add
ja
xchg
scas
test
xor
xchg
es
scas
cmp
mov
mov
ds
dec
scas
sub
shrb
mov
aad
lret
jb
cmp
test
enter
lods
bound
dec
and
fs
or
lahf
cmp
sti
mov
push
por
cmp
mov
popl
and
les
push
inc
xchg
dec
test
mov
pop
and
and
xor
sbb
lock
cld
dec
inc
mov
pop
add
ret
mov
push
ret
in
lods
dec
sarl
inc
xchg
imul
inc
cwtl
sahf
jg
mov
data16
ret
movsb
inc
sub
sbb
push
push
mov
push
in
stos
mov
cs
mov
or
or
jne
mov
sbb
es
jbe
lods
cwtl
or
inc
add
mov
jg
cmp
outsb
and
dec
fidivrl
jns
xlat
fdivrs
movl
out
add
cmp
xor
and
pop
js
daa
sbb
jae
and
push
sbb
add
fistpl
fisttpll
cwtl
fnstsw
mov
popa
scas
and
insb
pusha
pop
mov
adc
call
mov
fcmovu
lret
icebp
rcrb
xchg
sahf
pop
jle
sbb
arpl
mov
test
xchg
pushf
xor
addl
pop
or
and
stc
into
orl
inc
loop
bound
into
jg
in
enter
sub
test
push
dec
mov
test
in
push
jnp
and
inc
mov
push
pop
das
mov
icebp
mov
mov
sub
fbstp
or
mov
sbbw
sbb
aas
dec
cmp
push
aam
shr
or
add
xor
out
pop
mov
pop
scas
rcrb
push
push
add
jecxz
xchg
lahf
cmp
adc
lret
adc
jl
les
movsl
fstpt
stos
fmuls
xchg
add
into
mov
xor
popa
and
jmp
test
sbb
jbe
inc
sub
sub
lods
addr16
push
pop
push
mov
xor
mov
enter
outsl
repnz
loope
fcomps
cmp
cmpsb
lods
out
adc
mov
adc
add
xor
loope
add
addr16
adc
add
push
nop
out
shll
fcmove
pop
outsl
ret
imul
repz
aad
outsl
add
shrl
mov
ljmp
loopne
adc
push
mov
lahf
mov
lcall
jmp
dec
fs
cmpsb
xchg
adc
fdivrl
pop
jb
movsl
std
cmp
cmp
jae
xchg
mov
stos
xor
orb
daa
sbb
test
inc
push
jmp
xchg
ja
std
mov
push
xchg
sub
lea
adc
jg
pop
loopne
xchg
cmp
adc
into
xchg
fbld
sub
nop
loop
loopne
push
add
xor
mov
mov
ret
cld
jno
cmc
cmp
sbb
pusha
cmp
add
lock
cmc
ss
data16
xchg
ljmp
sahf
mov
push
test
int
and
pop
fsubs
xchg
and
fdiv
push
sarb
sbb
xor
cmpl
dec
in
jle
push
jbe
aam
dec
push
loop
stc
imul
push
mov
push
fadd
negl
xor
add
sbb
rcl
cmp
pop
test
pop
rcrl
nop
xchg
sbb
and
or
adc
xchg
movsl
data16
cmp
and
sbb
inc
fnstenv
cmp
mov
daa
repnz
cmp
adc
xor
lock
pop
mov
sub
lret
xlat
xor
mov
shlb
dec
mov
loop
aas
loopne
es
inc
add
add
mov
loope
jge
loopne
rclb
adc
mov
sbb
testb
in
push
cmpb
imul
adc
out
aad
andb
dec
addr16
stos
sub
fldenv
or
dec
pop
lock
cmp
mov
cli
pop
push
and
fisubrl
out
insl
outsb
mov
cmp
inc
shrb
pop
lods
leave
jl
fcompl
les
jae
scas
and
pop
pop
dec
mov
cltd
and
rolb
cmp
mov
clc
or
mov
js
iret
pop
subb
xchg
mov
jbe
push
lods
clc
push
mov
push
movsl
jl
mov
mov
addr16
fsubl
sbb
arpl
mov
test
divb
xchg
dec
fists
out
sbb
adc
jmp
jo
pushf
js
mov
jl
cmpsl
pop
jmp
popa
inc
gs
sbb
repz
cmpsl
or
cltd
or
pop
mov
add
fsubrs
add
jp
xchg
mov
outsl
and
loopne
pushf
int3
cmpsl
jnp
or
repz
push
add
jle
mov
outsb
jbe
dec
cmp
jle
stos
call
pop
mov
add
out
mov
mov
imul
sarb
sti
dec
scas
loope
dec
out
inc
cltd
inc
fdivrp
lea
loope
stos
out
push
inc
daa
dec
jbe
xchg
repnz
jns
loopne
rcll
dec
mov
fildl
pushf
js
pop
out
insl
jno
or
jo
add
mov
mov
pop
repz
nop
adc
shrl
jb
push
jo
jmp
sub
stos
sbb
mov
icebp
push
in
pop
jbe
loope
cli
xor
adc
jmp
iret
pop
or
pop
mov
shr
cmp
mov
push
push
add
fsubl
ret
pop
xchg
test
or
dec
push
mov
or
sbb
adc
or
inc
gs
out
pop
sub
pop
dec
outsl
test
lea
adc
and
mov
fmuls
pop
mov
je
cmp
jecxz
xor
aas
inc
sub
loopne
repz
rol
push
dec
cmpsb
push
or
xorl
out
add
int3
addr16
push
ja
cmpsb
mov
sub
cmpsl
pop
sub
push
pop
mov
std
ret
movsb
into
aam
mov
push
lcall
in
xchg
push
ret
add
dec
dec
rol
pop
rcr
mov
xchg
xchg
cmp
aad
mov
test
ret
rclb
sbb
daa
mov
insb
loopne
into
fmull
jecxz
push
inc
idivl
jp
push
adc
xchg
xchg
and
mov
js
jg
nop
dec
xchg
push
mov
inc
popf
popf
movsb
push
inc
movsb
inc
into
xor
cwtl
push
addr16
lcall
mov
push
outsb
push
imul
cli
push
jecxz
push
or
lock
mov
dec
out
pop
bound
ja
xor
test
jbe
jb
dec
jp
orb
mov
xor
ret
mov
stos
das
orl
sar
fstcw
pop
popf
scas
rcrl
sbb
pop
inc
and
addr16
pop
dec
imul
pop
adc
pusha
out
sub
sbb
shlb
add
xchg
xchg
fldcw
dec
sub
or
xchg
push
xchg
jnp
stc
clc
jl
sbb
in
ret
add
out
fld
adc
je
add
lds
push
mov
dec
gs
mov
pop
mov
into
hlt
xlat
int
leave
jbe
jle
and
dec
adc
je
mov
mov
inc
adc
rcll
inc
outsl
cmp
pop
std
mov
inc
add
ret
mov
dec
xchg
in
andb
or
aad
push
jnp
shlb
cmc
jl
and
out
adc
gs
rcrb
mov
ss
mov
jb
nop
adc
mov
pop
mov
jmp
imul
popf
push
mov
cmp
fisttpl
loopne
sub
sub
jg
push
mov
gs
movsl
xlat
cmc
push
jmp
cmc
ds
test
push
stos
jmp
sbb
cmp
mov
movsl
inc
add
out
sahf
cli
lret
adcb
cs
sub
jo
add
lds
mov
pop
lock
or
enter
xchg
pop
int
mov
adc
dec
stc
sbbl
popa
in
shlb
and
ja
std
add
in
bound
nop
adc
insb
sub
jp
cmpsb
xor
lods
int
sub
add
int
mov
test
or
ss
sbb
fnstcw
mov
pop
cmpsl
pusha
inc
adc
je
not
leave
lahf
push
loope
mov
cmc
xor
mov
int
mov
clc
arpl
xchg
push
add
and
push
and
fs
outsl
in
aad
call
stos
and
pop
sbb
xchg
sub
pop
xchg
das
js
mov
nop
adc
iret
leave
lock
push
inc
cmpl
lods
xor
push
imul
icebp
ljmp
jge
mov
jg
pop
das
lahf
stc
cmc
scas
loope
add
push
leave
int
pop
addr16
and
icebp
fstpl
cmp
push
inc
cmp
and
push
jo
popf
orps
adc
adc
into
add
mov
in
or
jmp
pushf
push
divl
enter
sub
mov
int3
iret
int
xchg
lods
sti
dec
jbe
outsl
mov
inc
lea
shrl
jb
popa
sbb
add
lcall
pop
ljmp
pushf
lahf
jl
adc
inc
inc
arpl
mov
stos
push
std
cmc
jo
lahf
xchg
ds
dec
cmp
or
enter
add
daa
loope
pop
mov
es
loope
adc
movsl
jb
sbb
scas
lahf
mov
dec
iret
and
jbe
mov
pop
inc
xor
add
scas
std
mov
bound
and
js
scas
xor
cmp
je
bound
inc
dec
jbe
or
aas
test
repz
sti
xor
je
mov
sub
push
test
dec
cmpsl
cld
ljmp
decb
or
cmc
std
adc
out
mov
push
inc
ljmp
loop
adc
add
push
js
or
adc
rdpmc
jo
add
mov
lcall
dec
mov
call
rcrl
rclb
jnp
js
pop
in
mov
cli
and
mov
iret
shrb
insb
push
add
pusha
adc
jp
cmpsl
mov
jp
sub
and
rcr
lahf
aad
aam
push
adc
bound
fneni(8087
in
xor
mov
mov
filds
test
es
out
ds
cld
fistpl
jo
pop
xlat
sbb
or
hlt
popf
jno
lret
pop
ds
je
sbb
or
stos
push
insb
adc
xchg
mov
sub
push
lcall
fistl
pushf
pop
mov
pop
gs
inc
pop
pop
aas
testl
add
mov
xor
jns
int3
cmpsb
std
inc
xchg
xchg
pop
xchg
xchg
cmp
sub
xlat
pop
fimull
sbb
lea
js
sub
in
cmp
mov
mov
adc
shr
inc
jo
push
sub
nop
mov
inc
add
in
xchg
push
scas
dec
aaa
repz
inc
mov
add
add
inc
cvttps2pi
popa
lcall
fnstenv
lock
push
stc
insl
mov
movsb
dec
pushl
jb
nop
pop
sahf
mov
aaa
and
leave
stos
out
add
je
daa
and
adc
ljmp
repnz
int
sti
or
mov
pushf
data16
int3
and
mov
and
jle,pn
fstps
push
scas
hlt
aad
cli
mov
mov
mov
add
xchg
fsubrs
cmp
insb
cmc
mov
inc
jl
pop
mov
idiv
movsb
xlat
sbb
popa
and
cwtl
sub
roll
add
inc
dec
popa
pusha
hlt
lea
aas
add
das
into
ficompl
lret
lret
xor
test
inc
testl
clc
xor
sarb
test
xchg
aaa
hlt
ljmp
dec
test
sbb
std
mov
add
scas
fsts
enter
sbb
and
pop
shll
mov
inc
les
cmc
and
jmp
rcrl
test
jmp
push
mov
inc
pop
std
cmp
jge
out
icebp
in
or
dec
sbb
lds
fs
fsts
pop
outsb
pop
xor
push
ret
rcr
iret
nop
pop
inc
push
pusha
ret
ffree
sar
inc
subb
pop
push
add
adc
mov
pop
cmp
mov
fs
mov
lret
out
mov
add
jae
add
mov
add
xchg
lds
movsl
outsb
adc
mov
jns
cmpsl
pop
xchg
arpl
jecxz
mov
or
mov
pop
repnz
pop
out
cld
xchg
cwtl
cmp
cmpl
stos
push
inc
cmc
fnstenv
push
shlb
outsb
pop
andw
add
and
cli
mov
pop
loop
addr16
cmpsl
insl
outsl
lcall
pushf
aam
xchg
stos
fildll
lret
jmp
stos
push
mov
pop
sbb
and
fwait
jg
jmp
or
daa
loop
int
not
inc
stc
test
sbb
fisttps
jb
jns
sbb
or
mov
lea
add
addr16
out
ficoml
inc
std
mov
push
loop
iret
sar
and
adc
add
push
clc
ja
mov
outsb
aas
mov
scas
lret
addr16
inc
jge
idiv
xchg
mov
push
in
daa
arpl
add
mov
repz
jp
cmp
in
sub
xor
fisubs
pusha
daa
enter
loop
sbb
push
pushf
pop
and
mov
add
dec
aaa
jnp
pop
mov
mov
push
or
mov
in
mov
jno
shl
test
pop
imul
and
xchg
pop
jmp
int3
out
xchg
cmp
fnstenv
pop
and
ret
push
mov
pop
roll
imul
mov
cmpsb
out
and
jb
in
aam
out
pop
pop
sbb
leave
xchg
in
int3
jp
sbb
jmp
sbb
mov
push
xchg
out
movsb
stc
fs
cmc
cmp
xor
push
mov
insb
xlat
popa
fdivl
sbb
insb
xchg
arpl
mov
in
push
dec
popf
jbe
insb
jnp
pop
movsl
xor
lcall
mov
test
pop
xchg
es
gs
pop
sbb
mov
cs
rclb
dec
fistpl
repnz
or
daa
xchg
icebp
loopne
popf
inc
sbb
lods
ss
out
jmp
mov
dec
sub
sti
stos
jno
sbb
in
and
adc
push
bound
mov
and
fs
mov
cmp
jnp
pop
xchg
jmp
sbb
iret
xor
push
fsubs
aad
xchg
mov
adcl
out
jg,pn
mov
inc
pop
lret
mov
mov
push
sar
add
jnp
pushf
dec
inc
push
in
and
iret
imul
mov
push
cmp
mov
jp
push
cmp
stos
pop
add
call
jns
loope
jb
pcmpgtd
inc
std
xchg
mov
mov
out
test
movhps
popa
out
clc
xchg
out
fisttps
stos
scas
dec
push
or
jb
lods
leave
push
add
fsubs
data16
js
data16
rorb
xchg
add
jno
popa
out
mov
fpatan
and
dec
xchg
clc
lds
jecxz
jno
ss
stos
repz
push
test
sub
aam
loope
ja
imul
sub
or
std
fistpll
lret
cmpsb
frstor
into
sub
mov
add
out
push
dec
xchg
mov
bound
push
out
add
shll
popf
mov
jno
adc
pop
cmpsl
stos
push
push
movsl
pop
inc
pop
mov
popa
adc
test
outsl
stos
sbb
xor
push
xor
int
jnp
and
adc
test
sub
repz
mov
jae
psrlq
mov
adc
jg
clc
inc
gs
ftst
xlat
push
inc
cmp
xchg
fsts
out
mulb
fs
pusha
pop
xchg
jge
lods
inc
and
enter
dec
ret
int3
lahf
jb
jp
and
mov
inc
jg
lahf
fs
jl
movsl
cmp
jo
or
pop
inc
dec
xchg
scas
pop
test
es
lods
clc
ret
lock
in
aad
lock
pop
xor
mov
lret
add
lods
popa
loope
fsub
dec
pop
lret
jmp
mov
pop
fisttps
fisttpl
call
dec
sub
popf
rcll
insl
push
mov
push
xchg
cmp
lea
sbbb
mov
inc
pop
dec
push
dec
sub
jne
cmp
fnsave
add
mov
fadds
xchg
scas
stos
push
leave
aaa
fimull
adc
push
sbb
pushf
mov
std
push
pop
sbb
inc
pusha
insb
je
loope
lret
cmpb
fnstenv
mov
sbbb
std
pop
inc
inc
mov
cmp
jecxz
stos
mov
pop
enter
es
jnp
push
dec
clc
cmp
sbb
inc
cmp
decl
xchg
fs
add
mov
mov
enter
push
scas
sub
push
in
xchg
jmp
mov
imul
or
jb
dec
mov
fnstcw
push
sahf
fstpt
fisttpl
mov
lret
addb
jne
pop
mov
push
push
sbb
push
mov
enter
fisubrl
mov
out
es
lock
lahf
scas
mov
enter
adc
and
and
insl
int
mov
lret
or
jecxz
cld
add
xlat
imul
sbb
cs
jae
or
mov
je
pop
xor
jbe
adc
int3
fcoml
dec
pop
inc
push
lcall
orl
mov
ss
push
fs
cmp
push
mov
xchg
in
adc
cmpsl
insb
mov
test
xor
out
mov
push
push
jl
out
out
loopne
notb
inc
and
push
ret
test
mov
out
lock
cmp
jmp
stos
rcl
lret
sbb
inc
mull
and
xchg
inc
jg
rorl
xchg
je
xor
cmp
sti
fcmovne
pop
cmp
sbb
ljmp
pop
add
sub
test
sub
test
imul
xor
mov
fwait
mov
pop
dec
negb
push
pop
fsubr
pop
xchg
dec
push
xor
mov
jb
aam
test
push
es
out
push
pop
dec
sbbb
aam
enter
pop
movsl
xor
fimull
movsl
aam
mov
les
push
icebp
xor
sub
incb
sbb
out
inc
mov
testb
push
adc
mov
call
xlat
xchg
mov
popf
dec
rcrb
mov
in
xor
adc
fnstenv
sbb
pop
xchg
negb
stos
sbb
xor
jp
cmp
cwtl
xchg
or
jbe
jb
xor
xlat
insb
jge
insl
xchg
mov
xchg
adc
dec
mov
adc
mov
mov
jl
xor
imul
xlat
in
mov
pop
push
sub
dec
fildll
fs
mov
andl
and
out
sti
movsl
jo
stos
mov
jmp
sub
icebp
dec
jmp
ret
in
out
ss
jecxz
ja
scas
ret
pmaddwd
xor
xorb
dec
rcll
les
mov
jecxz
ljmp
sub
lods
cli
scas
stc
inc
mov
cli
push
mov
pop
jmp
repz
jne
ficomps
xchg
popf
cmp
stos
test
lahf
or
pop
jne
pop
pop
fwait
xor
test
push
xchg
mov
gs
jge
jle
inc
mov
jmp
ds
fsubr
fmull
mov
lods
inc
cmp
loopne
inc
repz
and
lcall
dec
test
add
fisubl
push
fnstenv
popa
mov
ljmp
mov
add
mov
je
rcrl
fdivrl
cmp
test
adc
cmp
cli
std
sbb
dec
xchg
inc
ficoms
sbb
adc
call
bswap
jge
stc
mov
orb
add
mov
addr16
ror
xchg
mov
add
mov
jbe
push
loop
ljmp
push
cmc
xchg
and
shll
mov
adc
loopne
pop
nop
fucomip
lcall
loopne
repz
popa
std
adc
mov
js
or
xchg
loopne
and
addl
fxch
cmp
mov
xor
pop
mov
popa
fidivrs
mov
repnz
in
dec
pusha
xor
sub
cltd
mov
lret
aad
pop
movb
loope
sbb
pop
mov
xchg
loop
dec
inc
pop
jle
or
dec
cmp
out
repz
mov
adc
in
outsl
fimuls
pcmpgtb
push
cmpsb
inc
call
iret
lcall
data16
fstp
pop
push
mov
cmp
add
or
ds
mov
cmp
mov
je
mov
lods
push
data16
in
sbb
test
int
pushf
and
ficompl
inc
insl
jmp
jmp
in
rolb
jbe
add
and
sbb
scas
adc
dec
mov
inc
pop
jns
inc
pop
jo
popf
push
out
add
cmpsb
jmp
jle
cmp
xchg
xchg
or
fldl
sub
lea
xor
stos
std
lock
jns
repnz
mov
xlat
and
sbb
mov
dec
cwtl
or
sbb
push
sbb
fwait
inc
pop
pop
jnp
xor
aas
push
adc
pop
ja
imull
add
mov
mov
testl
and
lea
lock
jbe
imulb
fs
inc
into
cltd
loop
jp
fs
out
adc
lret
aam
inc
cmp
pop
jne
notb
push
pusha
test
loop
jl
lret
fwait
insl
dec
mov
push
cmp
jne
cs
stos
or
fildll
ret
xchg
iret
mov
cltd
nop
xor
push
pop
push
in
push
outsb
aad
in
je
lahf
mov
push
mov
add
push
xorl
mov
sbb
dec
rclb
push
jp
dec
push
xlat
lcall
cmpsl
xchg
data16
outsb
icebp
decl
dec
mov
popf
xchg
ficoms
fisubl
subl
xchg
add
aad
pop
dec
lret
xchg
int3
cmp
add
ss
sub
daa
rol
aam
or
add
cmp
flds
xor
scas
fwait
popl
ss
jmp
stos
push
push
xor
aad
xor
jne
inc
repnz
mov
pop
pusha
sahf
sbb
lret
pop
cltd
mov
mov
loope
inc
adc
adc
xor
mov
enter
insb
mov
xor
push
lahf
jp
scas
das
mov
repnz
fidivrl
bound
shlb
or
jne
and
sbb
daa
jle
aad
xor
data16
aad
pop
inc
sub
je
add
mov
dec
jg
gs
and
bound
nop
push
lods
int
or
cmp
push
cmp
aas
and
mov
jnp
lret
ficomps
mov
mov
jmp
jmp
jg
iret
loop
nop
mov
xchg
jne
sub
loope
mov
cmp
ret
adc
inc
aaa
icebp
jne
jmp
xchg
pop
push
shrl
or
aam
iret
cltd
leave
cmp
dec
aas
mov
movsl
sub
aas
loop
arpl
inc
inc
imul
add
jge
mov
cwtl
mov
popa
inc
rorb
xor
adc
xor
xchg
mov
jne,pt
sbb
das
outsl
aad
xchg
movsb
jp
adc
cmp
jecxz
stos
lahf
sub
add
xchg
cmp
repz
test
popa
push
ja
loope
aas
add
insb
ljmp
add
ds
mov
mov
in
mov
adcb
adc
mov
sub
insl
cmp
cmp
pop
mov
cmp
jb
ss
fsubrs
insl
aam
inc
repnz
jl
add
mov
lahf
or
add
mov
mov
dec
mov
loopne
push
scas
xor
call
mov
in
jnp
cmc
push
bound
shl
jno
imul
inc
mov
scas
adc
imul
mov
dec
add
aad
fmulp
loopne
mov
mov
xchg
mov
aaa
pop
fistpl
sbb
cmc
mov
dec
adc
cmp
xchg
mov
popf
lods
sub
or
xchg
repz
mov
jne
fcmovne
push
mov
lds
insb
push
loop
push
pop
jmp
popf
fsts
aaa
push
in
xor
inc
test
rclb
or
popf
add
xchg
cmp
xor
cmpsl
lods
jo
jae
aas
sub
and
imul
lock
inc
movsb
or
int3
or
lds
sti
pop
xchg
mov
je
in
mov
rorl
jbe
adc
cmp
outsb
fisttpll
daa
xchg
jecxz
je
int
push
cmp
fdivrl
xor
adc
leave
xor
xlat
push
shl
mov
mov
ret
jp
jecxz
mov
fs
cmc
clc
imul
aad
cmp
cmpb
or
je
sbb
push
movsb
add
sbb
lea
mov
outsl
adc
mov
jge
jmp
and
pop
cmp
jne
or
cli
add
popa
xor
pop
aam
jbe
jbe
in
ss
aam
lods
lret
outsl
xchg
or
shl
inc
lods
je
jmp
add
jl
xor
xchg
dec
xchg
adc
xor
je
cmp
jne
insl
or
pop
dec
shll
out
mov
je
lret
push
arpl
inc
adc
jge
sbb
out
and
popa
fwait
nop
mov
arpl
jnp
sbb
pop
loop
insb
lods
out
jbe
adc
adc
cmp
jno
lods
mov
ja
inc
lret
jle
adc
adc
push
push
jg
jge
aad
xor
push
stc
cmp
inc
gs
out
jno
arpl
mov
mov
pop
mov
inc
fdivs
flds
dec
int3
loopne
dec
imul
lretw
xchg
mov
les
push
push
int
rcr
pop
inc
cmp
mov
adc
cmp
adc
call
adc
dec
cmp
and
dec
ljmp
outsl
shll
dec
jmp
insl
mov
movsl
jb
mov
pop
les
sbb
addb
pop
push
idivl
mov
jecxz
stos
ss
fists
cmp
lods
aad
xor
mov
xlat
push
push
push
leave
push
pop
jns
fcompl
cmpsb
or
adc
divl
mov
test
addr16
cld
cmp
loope
adc
cmp
adc
orb
ljmp
push
add
leave
or
xchg
sbb
xchg
jp
mov
dec
aam
push
mov
lods
mov
pop
or
cmpsl
imul
shll
fmul
mov
jp
jle
dec
lds
inc
in
lea
rcl
cwtl
add
imul
dec
js
inc
or
les
aaa
inc
mov
or
les
adc
mov
inc
dec
int3
fistl
push
popf
inc
xor
add
push
outsl
scas
stos
sub
or
sarl
mov
pop
push
out
xchg
mov
bound
push
out
out
fmuls
xchg
push
mov
in
inc
xchg
and
in
ljmp
pop
enter
pop
pushf
sub
movsb
mov
repz
std
mov
aad
es
cmp
push
inc
pop
sbb
or
sub
std
jno
add
out
rcrw
inc
lcall
int3
popa
cmp
pop
pop
cmp
add
lods
and
mov
jns
mov
sbb
jae
aad
enter
xchg
stos
ret
sub
into
mov
in
or
xor
mov
pop
data16
or
lods
aaa
test
xchg
pop
jb
mov
mov
cmp
mov
adc
dec
push
aad
and
dec
loope
cmpsb
xlat
cmp
xchg
and
adc
mov
aad
sbb
sbb
cmp
cmp
add
pop
scas
add
dec
mov
shrb
mov
movsb
and
lcall
clc
add
fsubrl
loop
add
push
mov
mov
in
into
addl
xchg
sbb
push
push
mov
in
mov
das
js
btc
mov
cmp
out
aas
adc
stos
negb
mov
ljmp
jp
mov
fisttps
clc
jbe
imul
mov
cmp
stc
jmp
imul
push
es
test
in
cmc
mov
push
sbb
ret
pop
test
push
mov
sbb
in
in
mov
sub
repnz
aad
push
adc
ljmp
xchg
addr16
add
mov
aaa
dec
xchg
inc
shrb
sbb
insl
xor
mov
ljmp
add
xchg
pusha
dec
flds
ds
cwtl
scas
mov
imul
addl
jns
or
jno
ret
cwtl
xchg
movsl
ret
add
clc
les
lds
ret
xor
cmp
cmp
adc
std
or
push
xchg
xchg
mov
imul
addr16
loope
or
stc
inc
shll
mov
test
add
lock
xlat
xchg
mov
enter
adc
nop
les
fwait
sbb
repz
orl
mov
clc
fsubs
sbb
mov
adc
xor
movsb
mov
popf
inc
aaa
js
or
jge
inc
push
fmuls
xchg
push
test
int
sbb
cli
call
test
jb
daa
xor
out
pop
call
inc
sub
jmp
les
lock
icebp
add
and
dec
xchg
aad
pop
pop
in
and
and
adc
stc
push
je
fistl
stos
pushf
push
decl
adc
xlat
mov
pop
adc
aad
in
mov
xchg
cs
aas
nop
arpl
ret
mov
sbb
xchg
insl
aam
push
xchg
mov
sbb
pop
rcrb
fbstp
inc
out
pop
add
push
aaa
add
je
dec
cmpsb
dec
push
sub
xor
mov
fdivl
jmp
or
mov
ljmp
jo
outsl
xchg
mov
adc
jno
sarb
lret
add
cmp
popl
stc
hlt
xor
loope
data16
mov
mov
and
or
sbb
es
jo
cmc
and
jmp
cmp
mov
rorb
xchg
stc
mov
jno
mov
add
mov
adc
test
pop
rcrl
jge
push
jbe
inc
nop
mov
mov
pop
les
bound
lods
mov
xchg
dec
adc
dec
xlat
jl
sub
sub
add
repz
fsubs
nop
enter
jmp
mov
xchg
jp
shl
cld
outsl
and
xchg
into
ds
or
mov
scas
and
je
jp
xor
inc
pushf
lret
and
enter
insl
mov
or
jmp
popa
add
mov
les
mov
push
ret
push
testb
inc
pop
rcl
aas
icebp
mov
add
scas
cmc
ja
pop
jo
xor
xor
addr16
xchg
or
xor
xor
loopne
add
and
push
out
cmp
jge
rcrl
out
in
pop
push
and
idivb
cltd
in
push
mov
fistpll
lcall
ljmp
push
cmp
mov
lcall
call
sbb
xorl
cld
push
or
mov
int
pop
pop
in
inc
leave
sub
jge
nop
mov
add
jg
dec
push
orb
inc
decl
lods
add
xchg
cwtl
dec
push
dec
in
or
outsb
cmpsl
into
dec
lds
adcb
bound
mov
adc
aad
mov
int
jl
out
enter
hlt
mov
popf
imul
dec
cld
inc
jnp
fdivr
mov
xchg
and
mov
insb
and
pop
sbb
push
shr
push
add
inc
xor
addr16
sti
iret
sub
cmp
pop
gs
and
out
cmp
test
sar
jns
or
roll
roll
cmp
pop
and
lds
or
xor
jp
jne
push
repz
sub
popl
mov
mov
int3
jae
test
adc
fmul
out
mov
imul
sub
xor
dec
sub
test
push
pop
push
rorl
sar
xchg
mov
addr16
loope
mov
xchg
xor
jecxz
icebp
inc
mov
fiaddl
cmp
stc
scas
sbb
repnz
and
add
or
cmp
adc
sub
ret
push
dec
xor
rol
inc
mov
dec
dec
xchg
nop
loopne
std
or
push
cs
outsb
ret
inc
stc
imul
add
dec
sub
push
add
sub
mov
pop
xchg
lea
mov
fmuls
inc
adc
outsb
jo
and
pop
lcall
mov
lahf
inc
enter
pop
aaa
std
and
mov
testb
pop
or
adc
rep
in
and
mov
imul
lret
aam
ja
jle
jp
jnp
pop
mov
loop
add
push
push
adcb
out
mov
out
dec
pop
inc
inc
stos
divb
jne
movsl
sahf
inc
pop
xlat
xchg
popa
push
pusha
xchg
xchg
cmp
push
aaa
sti
xchg
inc
pusha
pop
iret
cmpsb
mov
push
mov
cs
test
cmp
cmp
sub
sahf
jnp
pop
into
cmpsb
pushf
pop
fs
lds
data16
sbb
add
cmp
or
sbb
push
adc
orb
pop
jno
and
add
loop
lods
xchg
gs
cmpsl
pop
mov
sub
mov
jecxz
test
jle
xchg
adc
xor
cmp
xchg
or
leave
test
outsl
add
test
fndisi(8087
bound
dec
call
cmpsl
dec
dec
arpl
lret
shlb
ret
mov
dec
fldcw
lret
sub
outsl
or
sbb
and
negb
sbb
lods
roll
xor
mov
repz
xchg
jmp
mov
add
out
popf
push
cmp
arpl
pop
dec
xchg
sarb
movsl
mov
addb
ficompl
je
add
inc
loopne
jbe
test
dec
fcomp
into
push
gs
mov
addb
pop
pop
mov
stos
out
bound
insb
jo
and
in
mov
mov
aad
xchg
aam
xchg
fcmove
jae
mov
dec
lret
in
mull
mov
mov
push
pop
cmpsb
js
ds
sbb
push
xor
lea
and
mov
cmp
bndstx
enter
add
movsl
add
push
add
xchg
mov
mov
lahf
lret
inc
mov
sub
xbegin
cmp
cwtl
test
xor
fldt
mov
add
lahf
cmp
mov
cmc
cmp
test
aam
ret
mov
das
sahf
icebp
inc
jo
push
pop
mov
push
mov
inc
imul
xchg
aaa
pop
bound
call
incl
mov
ret
pop
int
stos
or
mov
out
bound
xor
or
jo
cmpl
or
shlb
int3
ljmp
in
xor
and
test
xchg
add
popf
cmpsl
xor
and
int
movsl
sti
in
adc
hlt
leave
pushf
cmpsb
mov
lods
jno
dec
cs
vmulpd
aad
out
xor
or
sbb
push
dec
jae
push
and
test
cmc
or
clc
cmpsb
fdivr
cld
dec
std
and
into
mov
fdivr
sub
cmp
cmp
movsl
lret
fadd
popf
push
dec
jmp
sub
aam
push
imul
iret
sbb
push
arpl
xlat
jmp
mov
negb
loope
inc
cmp
shrl
fistl
shrl
adc
xchg
inc
int3
fidivs
rcrb
xchg
fcmovnu
pushf
mov
mov
mov
movsb
das
mov
push
cli
popa
bound
js
ja
test
mov
add
push
je
dec
adc
cmp
adc
outsb
imul
std
ret
cltd
mov
jmp
insl
sahf
push
mov
inc
aas
mov
cmp
pop
xchg
inc
add
push
cmp
addr16
cmp
pop
jne
enter
xor
or
out
jnp
push
hlt
rcr
out
test
jns
xor
sarl
push
pop
rolb
es
into
loope
cmc
shrb
lcall
inc
aaa
adcb
es
xor
push
jne
jp
or
fdivrs
xchg
dec
mov
lret
std
leave
adc
push
push
int3
out
or
out
lods
cltd
test
xchg
push
out
hlt
stos
das
nop
fstpt
loope
orb
mov
xchg
sub
lock
sub
push
adc
bound
pushf
fcomps
cld
pop
adc
pop
or
push
xchg
cmp
add
cli
out
sti
fadds
push
gs
arpl
lds
arpl
fwait
cs
cmc
mov
sbb
daa
inc
push
xlat
mov
es
es
popa
jae
and
ds
and
xchg
add
sti
inc
jae
jne
addr16
scas
int
cs
sub
mov
daa
mulb
jns
jecxz
xchg
or
mov
sub
adc
dec
test
jg
adc
out
sbb
sub
dec
push
idivl
lods
icebp
rorl
addr16
mov
stc
pop
sub
lahf
mov
push
sub
pop
insl
xchg
mov
jge
aaa
popf
dec
out
movsb
pop
sub
cmpsl
inc
xchg
in
hlt
aad
mov
into
push
int3
dec
push
filds
or
and
add
inc
jo
sub
mov
xor
outsl
lret
jne
dec
stos
popa
scas
pop
mov
mov
pop
jecxz
fiadds
adc
pop
clc
inc
xchg
aam
push
in
dec
adc
xchg
sub
dec
fwait
push
mov
idiv
and
cmp
stc
inc
inc
lds
xchg
frstor
stos
subb
add
cmpsl
add
ss
lods
jae
inc
or
sub
jno
js
sbb
pusha
arpl
lcall
fsts
dec
loopne
lods
xlat
push
pop
xchg
imul
mov
cmovle
repnz
in
mov
xchg
scas
add
jnp
mov
xor
mov
gs
inc
xlat
jne
inc
out
loop
in
mov
loopne
rorl
mov
insb
jo
push
fisttps
mov
int3
mov
jmp
shrl
neg
jmp
mov
xchg
repz
mov
pop
sub
daa
mov
mov
or
and
jl
movsl
testl
jnp
jnp
jne
dec
out
in
ss
das
scas
sub
insl
pop
dec
or
testl
cmc
and
inc
lds
pop
xor
xchg
jae
push
jecxz
rolb
je
sub
leave
inc
repz
test
inc
add
movsb
leave
sbb
add
inc
lods
or
inc
in
sbb
jmp
imull
movsb
sub
xor
fdivl
cmp
nop
push
xor
sbb
movsl
iret
fstps
mov
ret
es
in
adcb
add
ret
mov
cltd
fdivrl
cli
xor
dec
push
dec
stos
out
cld
into
les
jl
push
bound
adc
fistpl
es
popa
sbb
xchg
in
xchg
adc
cli
add
ja
jnp,pn
daa
dec
es
cmp
fstl
dec
push
int3
xchg
test
aaa
sub
enter
cmpsl
mov
or
insb
sbb
mov
sbb
xor
and
cmc
out
bound
xchg
adc
sbb
pop
lret
or
adc
fwait
jmp
sbb
loopew
and
les
jl
movsl
or
inc
fisttpl
sbbl
xlat
cmc
xchg
pop
adc
push
sbb
jle
mov
jne
mov
jne
cmc
pop
enter
push
adcl
and
stos
psllq
sahf
xchg
pop
iret
fwait
stos
push
sub
test
pop
mov
fcomi
jnp
push
inc
popf
mov
aam
xor
or
push
xor
fisttpl
push
jecxz
and
or
ja
in
pop
dec
outsl
mov
aam
sbb
cmpsl
or
mov
adc
jecxz
xchg
mov
xchg
sub
adc
cmp
nop
sub
add
dec
sbb
push
push
pop
cmp
and
aad
pusha
mov
add
pop
insb
stos
jecxz
lahf
icebp
push
adc
cli
rclb
addr16
and
fsub
xor
outsb
adc
arpl
sub
js
dec
xor
push
cmpsb
jns
pop
add
fidivs
cmp
rcrl
mov
sub
dec
int3
lahf
add
incl
test
dec
iret
mov
lods
adc
stos
popa
dec
ja
stc
pop
loope
in
mov
popa
outsl
jecxz
mov
add
dec
add
xchg
out
sub
das
inc
int
mov
xlat
testb
das
fs
imul
lret
ljmp
aas
add
cmp
adcl
adc
sub
fwait
ret
les
lret
inc
jp
js
ret
and
lret
lods
scas
in
xchg
out
pop
sub
mov
mov
sti
or
lahf
push
pop
sbb
rorl
xchg
xchg
xlat
sub
dec
leave
divb
xor
int
pusha
jecxz
xchg
and
xor
xchg
lds
sub
shlb
xchg
ljmp
push
les
int
sahf
push
outsb
mov
pop
sahf
adc
and
pop
pop
dec
sub
scas
data16
pop
loop
leave
out
arpl
rorb
bound
dec
mov
scas
bound
lret
pop
mov
insb
pushl
mov
dec
ja
ss
mov
xchg
jo
addr16
test
cltd
aas
outsl
inc
inc
fdivr
fs
cmp
cmpsb
enter
aam
pop
rorb
data16
mov
ss
jl
std
sub
xor
jbe,pt
rorb
adc
sub
out
mov
addl
push
inc
call
push
mov
repnz
push
push
jns
pop
cmp
iret
push
test
stos
pushf
dec
mov
icebp
pop
shrb
xchg
leave
scas
adcl
jge
pop
jno
mov
or
popf
push
out
std
jle
xor
iret
mov
mov
dec
xor
xchg
es
push
stos
cmp
adc
mov
push
sbb
shr
push
je
xchg
mov
divl
pusha
jbe
xlat
rol
bswap
out
fcoml
cld
ffreep
xor
adc
adc
sahf
inc
adc
xchg
mov
iret
nop
dec
nop
cwtl
sub
cltd
int3
ja
mov
mov
mov
mov
mov
ds
add
outsb
xor
cmp
outsb
or
add
je
or
mov
push
mov
xchg
pop
call
jnp
and
jl
out
outsl
pusha
lock
and
test
jne
inc
adc
add
rcr
sub
addr16
jle
dec
pop
mov
mov
inc
lods
jae
loopne
inc
pop
insl
xor
lea
mov
scas
call
shlb
jge
add
aam
mov
lcall
repz
lcall
bound
inc
mov
mov
and
xor
inc
inc
cs
imul
xchg
mov
cs
data16
pop
lds
and
and
push
sbb
jo
jno
leave
push
push
dec
ljmp
xor
or
xchg
mov
cld
dec
repz
mov
dec
sti
or
sbb
pop
icebp
cmp
loope
outsl
imul
ds
mov
outsb
push
cltd
mov
decl
cmp
shrl
mov
inc
adc
xor
pop
aas
mov
ret
fcomps
loopne
jbe
push
cltd
and
add
je
out
push
push
push
stos
lcall
and
xor
inc
mov
lret
movsb
fstps
add
negb
pop
pop
jp
add
js
and
xchg
inc
pop
nop
mov
or
lds
sbb
push
cmpsl
mov
outsb
bound
push
enter
clc
xchg
outsl
dec
mov
sar
imul
insb
loope
push
sub
mov
movsl
mov
imul
leave
mov
icebp
sbb
ror
inc
mov
mov
cmp
sbb
or
and
sti
mov
mov
inc
lea
or
shr
push
pop
push
fs
mov
lahf
and
push
cmp
lock
jb
int3
or
call
mov
xor
xchg
mov
stc
push
gs
test
insb
repz
sarl
push
dec
mov
push
lods
lcall
rorb
sub
push
frndint
and
mov
movsb
pop
xchg
inc
push
inc
sbb
call
out
dec
xor
adc
mov
rclb
add
mov
mov
outsl
in
out
hlt
add
sub
pusha
roll
mov
rorl
mov
je
psubq
leave
xor
and
movsl
dec
mov
nop
pmaddwd
jl
sub
je
cmpsb
pop
add
testl
or
test
arpl
shll
adc
shrb
adc
pop
pop
push
dec
inc
sub
sub
addb
loop
pop
inc
cmp
push
add
stos
call
xchg
push
mov
add
subb
jno
in
xchg
repz
sub
ja
movb
and
pop
std
adc
sub
jb
pop
dec
xchg
xchg
xchg
fcomp
sub
sub
mov
add
insl
aad
inc
sbb
sbb
jb
fsub
pop
ss
or
xchg
stc
cmpsb
and
cmpsl
sbb
lret
push
popf
cmp
negl
int
sbb
out
cld
inc
js
dec
popa
xchg
sub
mov
fdivrl
inc
dec
or
push
push
cmpsb
xor
mov
mov
xchg
adc
jbe
sbb
xchg
push
fwait
dec
and
ret
das
pusha
jnp
sahf
mov
adc
ja
mov
movsb
inc
ror
pusha
outsb
vorps
mov
test
mov
jnp
jecxz
sti
jnp
mov
xchg
mov
add
add
lds
mov
xchg
inc
xor
imul
icebp
mov
jae
leave
xchg
push
xor
sarl
imul
scas
out
fs
xor
pop
jo
mov
je
out
and
nop
mov
data16
jne
mov
rclb
adc
pop
jno
aad
cmpsb
mov
xchg
push
lahf
insl
adc
jo
and
gs
enter
cmp
jns
iret
and
and
mov
out
les
xor
push
xor
das
adc
adc
pcmpgtw
mov
imul
clc
aad
xchg
sarb
add
daa
hlt
gs
loopne
and
sbb
mov
push
iret
test
arpl
in
insl
xchg
sbb
and
xchg
leave
xor
test
test
test
insl
xchg
stos
jecxz
jmp
popa
mov
in
movsb
pop
pop
test
or
jl
jp
int3
ljmp
fsts
inc
dec
andl
jecxz
mov
push
sbb
mov
add
mov
or
and
testl
jl
mov
fidivrs
mov
sbb
loopne
jmp
cmp
cmpsb
pop
mov
in
mov
xchg
mov
js
mov
ljmp
cli
cmp
lea
xchg
xor
sarb
cli
mov
cmc
cmpsb
test
inc
and
push
sbb
cmp
mov
je
mov
mov
orb
orl
xor
pop
test
mov
stos
mov
es
pop
cmc
dec
pop
xor
or
and
clc
aaa
xchg
jnp
and
pop
aas
sahf
inc
arpl
mov
xorb
loope
mov
cltd
add
jno
fsubs
imul
hlt
cltd
push
into
testl
and
xchg
jecxz
mov
dec
lods
sbb
push
mov
leave
cltd
or
xor
push
or
xchg
lods
inc
aas
faddl
stc
call
xchg
inc
pop
xchg
pushf
push
fisubrs
inc
dec
dec
mov
ficoml
roll
mov
in
ljmp
fwait
call
shlb
inc
in
dec
push
mov
and
mov
sbb
lea
ds
xchg
add
cmp
push
ds
out
call
scas
scas
jmp
cmp
sub
lret
cltd
xchg
mov
xor
sarl
xor
or
adc
sahf
pop
popf
cmpsl
xor
or
test
mov
xchg
popa
xchg
repz
rorb
push
in
mov
and
jl
repnz
loop
incl
inc
std
rcl
sub
es
and
jne
mov
add
pop
dec
inc
pop
and
xchg
xchg
push
icebp
cld
sbbb
es
jne
loop
jne
inc
jnp
pop
xchg
sbb
lea
xchg
adc
pop
addb
sbb
xchg
iret
sahf
ret
dec
loope
dec
movsb
jns
push
jmp
push
je
mov
fistpll
ja
mov
mov
test
mov
xor
xor
sahf
fwait
xchg
loopne
enter
inc
and
jbe
aas
ret
cmp
mov
adc
sub
jns
or
cld
jl
mov
add
shlb
dec
pop
mov
insb
jo
imul
js
ljmp
xchg
dec
mov
lock
inc
sbb
mov
clc
fs
jp
mov
pop
push
cmpsl
sub
fnsave
test
stc
xchg
lods
in
mov
popa
fst
les
cld
jp
jmp
into
cmp
mov
xor
hlt
and
adc
dec
out
jge
inc
cli
inc
cmp
and
push
xchg
pop
aaa
sti
lret
lret
push
into
pop
sbb
movsb
mov
dec
jg
push
test
cli
xchg
sub
repz
push
ss
sti
jmp
xchg
sarl
add
xchg
lea
or
movl
clc
push
pop
mov
inc
xchg
lea
test
lret
pop
sarl
inc
mov
flds
imul
testb
mov
roll
ds
shlb
sub
or
and
lahf
inc
movsl
push
ss
mov
pusha
sbb
fistl
out
xchg
frstor
and
and
and
fcoml
mov
pusha
cld
fldl
fimuls
mov
mov
test
in
xlat
lds
repnz
inc
sahf
push
cmpsl
xor
push
ret
pop
stos
add
add
dec
in
out
stc
scas
cmpsl
sub
shlb
fists
mov
cmp
xchg
das
mov
pop
into
shll
adc
arpl
sbb
mov
jo
sbb
sar
cmc
pop
jnp
test
pop
add
mov
push
dec
fcoms
ret
and
mov
jo
bound
cmc
dec
dec
adc
push
gs
repnz
push
jns
cwtl
mov
ret
daa
sbb
fistl
mov
inc
pop
cwtl
cmp
dec
fistpl
aam
sbb
push
lods
dec
incl
push
or
xchg
xchg
into
std
mov
cmp
into
mov
mov
fildl
mov
push
push
pop
lods
add
xchg
shll
jbe
mov
push
mov
sub
mov
test
dec
fldcw
loop
push
test
push
out
mov
enter
mov
int3
out
xor
cwtl
pop
loopne
mov
cld
test
sbb
mov
push
cmp
test
add
adcl
mov
call
mov
pop
daa
in
fldenv
aas
pop
pushw
pushf
xchg
inc
insb
iret
iret
std
cli
pop
stos
mov
icebp
data16
call
test
mov
add
dec
in
mov
pushf
mov
jns
mov
mov
jg
push
and
jae
xchg
mov
mov
push
adc
insl
sub
push
popl
mov
mov
ja
jl
leave
test
adc
cmpsl
jle
xor
push
inc
xor
and
mov
xor
cmpsb
and
sbb
push
movsb
divb
adc
aam
ret
pop
push
std
out
ret
pop
in
das
dec
test
inc
sahf
sub
fcmovu
cmp
call
jge
inc
enter
cmc
stos
mov
jmp
sbb
pop
jmp
and
mov
fisttpll
pop
rcll
je
addb
fnsave
xchg
ret
or
rcrl
push
cli
xchg
jecxz
mov
sbb
mov
jl
and
sbb
sub
sbb
push
pop
int3
cwtl
mov
rclb
adc
xor
test
cmp
mov
outsl
ljmp
ftst
mov
or
std
or
pop
lret
jmp
jmp
addr16
scas
lahf
adc
dec
jae
cmp
cli
fcompl
daa
push
inc
mov
mov
mov
pop
call
mov
add
fs
fdivs
fldl
push
push
mov
addr16
in
cmpsl
mull
out
loop
pmulhw
mov
inc
repz
popa
das
sarl
insb
je
loopne
dec
je
ss
sbb
int
mov
or
mov
xor
push
xchg
mov
ss
xchg
mov
sub
and
or
dec
dec
data16
aaa
nop
cmp
mov
mov
xchg
icebp
and
pop
adc
stos
jecxz
and
mov
cmc
int
sub
push
dec
in
fidivrs
lock
ret
and
fwait
decl
in
into
ja
aad
sahf
hlt
test
lcall
add
xchg
sarl
repz
cwtl
stos
xchg
es
cwtl
nop
mov
xor
pop
fisttpl
push
cmp
leave
push
les
adc
fwait
dec
addb
cmp
cmp
xchg
gs
sbb
mov
adc
roll
insb
mov
leave
add
pusha
mov
sbb
out
clc
pop
cmp
push
sub
cmp
xor
in
push
loopne
sub
fsubs
mov
sbb
out
dec
mov
push
lock
dec
and
std
mov
in
and
pop
mov
jl
cmp
rcrl
dec
dec
hlt
push
mov
dec
xor
pop
adc
test
out
stc
or
jo
mov
pop
clc
in
xchg
fs
pop
inc
and
loop
jbe
mov
mov
aas
pop
inc
in
addb
call
pop
sub
mov
stos
sub
idiv
addr16
stos
mov
mov
and
sbb
sbb
cmp
movsb
mov
xorl
pop
pop
ds
sahf
vmovddup
mov
repz
nop
ficoml
in
ret
loop,pn
test
cld
lret
shlb
add
mov
loopne
jno
sarb
or
fisttps
popf
mov
dec
repnz
mov
mov
stc
adc
idiv
sub
add
sub
add
hlt
test
add
mov
mov
adc
mov
mov
pop
or
cmp
or
mov
lcall
xchg
and
push
fldl2e
mov
xor
adc
dec
scas
sbb
call
js
sbb
ror
in
mov
leave
lret
inc
and
mov
dec
lcall
sti
pop
adc
rol
or
jmp
pop
in
sti
fidivs
stc
daa
mov
mov
in
es
outsb
fists
pushf
mov
data16
js
or
cwtl
lods
mov
cmp
push
out
sub
jle
out
cmp
cmpsb
sub
mov
scas
fists
mov
adc
in
imulb
bound
mov
adc
dec
push
fwait
adc
push
push
cmp
or
xor
push
add
les
mov
push
out
addl
pop
add
xor
mov
adc
inc
sub
xchg
dec
xchg
mov
jle
pop
push
push
ror
pop
xchg
push
jp
stc
cmpsb
std
ljmp
xchg
push
das
cmpsb
sbb
pop
jp
in
pop
cli
cld
or
jecxz
push
add
movsb
out
jl
jno
or
mov
sub
and
pop
outsl
jno
push
scas
test
fsubl
lds
pop
adc
popf
dec
inc
out
push
out
subb
out
xchg
or
push
adc
cmp
mov
hlt
push
cwtl
dec
aas
xchg
in
pop
loopne
jle
sbb
jo
stos
incl
imul
push
es
push
add
pop
pop
jo
jae
adc
cmc
mov
decl
add
insb
scas
add
jb
mov
and
outsl
or
jge
lea
shrb
and
add
add
inc
cmp
mov
push
push
popa
jg
test
fwait
pop
and
inc
dec
jecxz
jb
flds
and
pop
in
incb
jp
mov
sbb
fnstsw
mov
lcall
test
mov
sub
and
sbb
pop
xor
cmpsl
add
mov
dec
inc
fsubrp
lock
bound
repnz
push
mov
mov
fwait
fwait
mov
sarb
jle
xchg
or
xor
ds
ja
adc
xor
sub
pop
sbb
adc
stc
mov
mov
sub
out
ret
xor
fwait
xlat
push
nop
loope
data16
cmpsl
pop
out
and
lcall
or
lods
pop
xchg
pop
dec
or
mov
mov
out
adc
sub
and
movsl
loopne
push
jb
mov
mov
xchg
out
aam
sub
mov
popa
mull
sub
nop
push
pop
cmpsl
arpl
mov
aaa
push
mov
xchg
adc
scas
cwtl
mov
loope
popf
add
adc
sbb
pop
movsl
mov
fildl
xchg
sub
push
adc
dec
rcrb
or
fidivl
repz
stc
negb
pop
sbb
push
addl
pusha
jnp
iret
mov
or
loopne
sub
loope
pushf
cmp
sbb
dec
and
dec
pop
dec
inc
popa
cld
fstpl
dec
pop
in
dec
cmp
jmp
loopne
test
mov
mov
mov
stos
js
cmpsl
mov
inc
adc
out
mov
cli
adc
int3
lods
insb
scas
pop
mov
cmpsb
cld
cltd
inc
mov
jmp
rclb
shl
pop
add
imul
inc
cld
repz
jb
mov
pop
jle
icebp
dec
and
loope
push
stos
scas
jg
sub
mov
outsl
es
jns
mov
stos
enter
rcr
pushf
addr16
jnp
mov
sub
daa
and
call
inc
and
repnz
cltd
fildll
arpl
adc
js
push
push
push
pop
pop
xchg
cmp
js
lea
mov
jecxz
scas
push
insb
cmc
xchg
shrl
jo
ret
xor
call
lret
movb
xchg
hlt
jmp
popa
subl
inc
mov
and
fsub
inc
cltd
insl
mov
push
mov
fsubrs
pop
xlat
je
pop
cmp
push
sbb
add
lret
or
cmp
sub
pop
xlat
lea
push
pusha
push
pop
mov
push
jnp
jle
adc
fcom
mov
inc
or
hlt
xchg
mov
mov
sbb
pop
mov
fs
sub
arpl
cld
xor
pushf
push
test
mov
sub
push
daa
test
push
loop
dec
fcomip
out
mov
mov
sbb
adc
mov
dec
cmp
fistpll
xchg
push
dec
lret
mov
lahf
lock
inc
push
pop
fs
fbstp
jno
jo
sbbl
cmp
jae
xchg
add
les
rolb
push
and
push
adc
sbb
outsb
xor
jo
sti
jg
mov
jge
std
xchg
femms
leave
das
adc
jmp
addl
data16
imul
mov
cwtl
cwtl
sub
dec
jp
jecxz
icebp
mov
popf
repz
mov
and
pop
jg
daa
sbb
or
lods
adc
lock
movsb
or
loope
cmp
sbb
jne
bound
sub
xor
jecxz
stc
cmp
and
movsl
loope
cmc
mov
push
add
push
lock
xor
or
or
aad
dec
stos
mov
mov
repz
or
lds
adc
cmp
xor
in
jp
dec
cmp
mov
test
test
fidivl
clc
aas
clc
or
jno
test
sbb
push
stc
push
xchg
sbb
call
xor
push
movsl
dec
mov
mov
push
fwait
push
mov
xchg
lods
inc
mov
jb
fistl
mov
inc
push
add
jecxz
and
je
lret
and
cmp
lahf
ja
and
bound
clc
push
jecxz
lds
xor
popf
js
or
sub
xchg
ret
loope
outsb
add
sbbb
insb
jecxz
lret
mulb
repnz
jge
shl
clc
es
jnp
out
dec
adc
mov
fwait
jecxz
das
ret
mov
in
out
xor
xchg
call
sahf
pop
cld
pop
enter
and
adc
clc
lcall
add
enter
jmp
mov
sbb
dec
rcrb
test
scas
aam
lcall
ljmp
pop
int3
adc
mov
lret
xor
or
jb
cmpsb
sub
sbb
dec
lret
adc
hlt
fdivs
and
adc
int
movsl
lods
xchg
add
int
mov
fisubs
out
inc
sbb
pushf
sbb
mov
out
sbb
aam
adc
lods
daa
or
fs
xchg
xor
jb
nop
lds
xchg
bound
or
xor
mulb
imul
xor
dec
mov
cmpsl
xor
inc
lock
fwait
push
imul
add
lea
insl
push
sbb
push
sub
cld
cmpsl
les
xchg
xchg
cmp
stc
push
mov
mov
repnz
jae
lret
add
xor
jo
mov
sub
ret
fidivs
jno
rorl
xchg
popf
sbb
rcll
cmpsl
pop
pop
sub
cs
add
clc
mov
inc
jne
xchg
push
test
jge
dec
dec
sub
jne
in
lods
pushf
in
or
loopne
int3
cwtl
push
mov
dec
insl
sub
sarl
leave
jae
sub
idivb
pop
inc
add
test
jo
pop
xor
adc
nop
mov
fistl
pop
les
inc
les
dec
sti
stc
mov
push
xchg
xchg
pop
push
lds
inc
mov
icebp
adc
imul
movsl
dec
and
inc
das
xchg
jmp
fwait
cmpsb
dec
and
imul
mov
sbb
push
mov
pop
outsb
sub
jae
hlt
xor
mov
popf
mov
dec
mov
xor
push
mov
out
sub
add
leave
xchg
enter
shl
je
lcall
pusha
shrb
cmpsb
lea
bound
push
into
das
or
mov
scas
add
iret
sub
sbbl
fstpt
stos
pop
push
xchg
jl
sub
xchg
xor
xor
cmp
mov
loope
or
xor
sub
addl
ja
sbbb
sarl
int
and
in
push
lods
aad
sub
jge
pusha
add
out
loopne
jle
mov
leave
imul
cmpsb
pop
insb
push
pusha
insl
dec
dec
push
fsubs
mov
jmp
cs
es
mov
mov
xlat
pop
call
pop
in
pop
xor
cmp
jg
insb
cli
jp
add
jnp
loopne
cmp
imul
loopne
mov
xchg
divb
ret
add
pop
jae
mov
dec
and
or
call
xchg
stc
sub
out
dec
add
test
jbe
hlt
bound
sub
jle
push
adc
mov
xchg
shrb
and
add
pop
sbb
fidivs
pop
mov
dec
mov
sti
lock
sub
or
jmp
mov
daa
iret
adc
cmpl
mov
push
mov
xlat
sub
xchg
jmp
ret
dec
sarb
std
test
int3
add
pop
in
jns
sbb
mov
dec
loop
lods
addb
sbb
lods
imul
mov
push
sahf
nop
outsb
ret
or
mov
fadds
pop
dec
and
add
lea
mov
cmp
inc
xor
cmpsb
xchg
jo
pop
mov
xlat
shrb
and
jnp
dec
hlt
push
scas
les
or
push
test
and
pushf
inc
in
xchg
nop
xchg
orl
cmp
inc
dec
xchg
mov
das
addr16
pop
sarb
xlat
lahf
mov
les
and
stc
ret
xor
stc
mov
mov
aas
iret
xor
push
xor
icebp
lahf
mov
pop
mov
scas
rcll
out
inc
mov
jae
jle
mov
xadd
jne
or
outsl
in
pop
fldpi
mov
jmp
mov
jbe
adc
lds
test
stc
cltd
mov
mov
sub
sar
inc
mov
shlb
mov
mov
mov
adc
lret
fildll
xchg
lods
jns
mov
leave
es
xchg
cmp
fcoml
pop
sub
mov
in
jmp
xor
dec
test
jl
inc
in
or
add
mov
mov
fnstcw
leave
push
xlat
popf
xchg
fcomi
cld
sub
lret
rolb
int
cli
push
dec
test
mov
pop
pop
jl
imul
dec
aam
pop
push
std
mov
and
mov
iret
ds
xor
jae
or
popf
iret
enter
mov
cmp
jns
test
aad
push
jge
outsb
out
call
mov
sbb
repnz
push
dec
fldl
sahf
pushf
mov
mov
rcrl
dec
cmc
aas
jle
pop
sub
movl
aas
mov
sbb
mov
repz
les
jno
je
lcall
add
movsb
mov
mov
and
or
jl
xor
mov
in
mov
call
cmc
jmp
mov
lahf
aas
nop
test
push
mov
cmp
jle
test
push
data16
add
xchg
push
mov
sub
xchg
adc
dec
adc
out
call
aaa
adc
jg
popf
je
ss
mov
das
mov
loop
pop
add
cmp
dec
in
loop
inc
ljmp
pop
sub
dec
insl
pop
test
aas
mov
adc
push
pop
mov
arpl
add
sbb
sbb
or
mov
mov
arpl
mov
push
mov
cmc
fldl2e
mov
lcall
lods
xlat
xchg
out
jmp
pop
push
shrb
dec
dec
adc
scas
popf
les
sbb
sub
aam
mov
push
xchg
test
loopne
jnp
call
xor
add
dec
les
push
add
ret
enter
cwtl
or
push
sbb
push
clc
cmp
mov
out
clc
das
subb
sbb
jno
int3
or
mov
jo
cmp
adc
dec
ss
sub
xchg
lods
mov
rolb
mov
rcrb
or
dec
push
inc
pop
add
and
dec
repz
insb
xchg
xchg
jno
push
sahf
in
subl
jg
mov
popf
das
out
push
aam
adc
jle
mov
test
aam
mov
inc
mov
stc
jno
dec
xchg
or
inc
iret
fisubl
mov
aam
mov
jae
fs
mov
add
maskmovq
testl
movsb
out
insb
movsl
aaa
cs
xor
out
add
nop
test
cmp
aam
lods
aam
je
out
sbb
mov
test
mov
adc
mov
lahf
mov
icebp
outsl
popa
cltd
rcll
or
daa
lods
lods
pop
inc
inc
call
jle
or
imul
je
pop
fstl
add
dec
into
sar
and
adc
stc
insl
cwtl
outsb
sahf
js
adc
pop
insl
mov
int
in
adc
sbb
or
repz
push
das
inc
lret
jecxz
lcall
aad
lock
jo
mov
or
stc
cwtl
stc
shll
cmp
push
ja
sub
push
out
mov
mov
and
scas
loope
pop
adc
sub
lret
movl
das
cmp
cmp
leave
jge
test
or
repz
es
xchg
cli
and
iret
frstor
mov
lcall
jno
in
xchg
insl
daa
inc
sub
jns
xlat
aaa
or
fwait
add
xchg
jae
cmpsl
movsb
add
xchg
xchg
inc
xchg
inc
and
orl
push
pop
mov
movsl
dec
lcall
imul
cmp
push
push
pusha
adc
arpl
mov
inc
mov
push
incb
mov
mov
int3
pop
sub
push
inc
aaa
scas
xchg
loopne
mov
push
stos
mov
push
jmp
addr16
mov
and
aad
sti
xchg
inc
jle
and
cld
ljmp
iret
sub
and
mov
sub
mov
and
push
cli
xchg
add
adc
fcompl
std
out
and
jbe
mov
jnp
adc
leave
std
sbb
inc
fwait
xlat
out
mov
adc
sti
push
xor
inc
sbb
je
iret
mov
jb
lods
ja
jecxz
push
mov
stc
and
adc
cld
and
ret
push
mov
addb
mov
push
mov
push
and
inc
cmpsb
mov
jb
sarl
inc
pextrw
inc
pop
jl
out
sbb
shrb
jg
ss
addr16
cmc
add
subl
and
and
xchg
push
test
sub
cmpsl
xor
xor
cmpsb
inc
pop
sti
jbe
adc
js
fadds
cli
mov
lods
clc
jmp
mov
sbb
mov
hlt
jb
stc
insb
call
inc
jg
jbe
test
push
adcl
add
pop
cmp
pop
daa
outsl
inc
mov
daa
dec
dec
int3
or
pop
test
xor
mov
mov
dec
inc
and
fwait
ja
popf
mov
inc
adc
mov
out
jae
jle
fbstp
test
adc
shll
cld
push
xchg
gs
xor
mov
pop
pop
jno
jecxz
repnz
cwtl
cmpb
dec
sar
cmp
aas
sub
das
mov
sub
gs
jns
std
test
pop
stc
mov
inc
sbb
lcall
cmp
shl
lea
pop
jno
lret
dec
sub
add
sbb
adc
mov
mov
add
stos
popa
or
mov
loope
and
leave
rolb
enter
icebp
push
loop
push
xchg
and
or
enter
sahf
sub
sbb
aas
jecxz
mov
xor
sub
and
inc
daa
and
mov
sub
mov
out
ja
push
out
lret
leave
neg
and
lods
adc
sbb
and
push
pop
loope
movsl
jbe
ret
xchg
xlat
cwtl
mov
jbe
imul
pop
xchg
insb
inc
dec
cmp
test
shrl
fdivs
sub
fwait
dec
aas
popf
cli
mov
or
in
xorl
jo,pt
mov
add
dec
out
or
dec
push
lcall
pop
in
mov
adcb
push
dec
mov
mov
lret
dec
mov
push
stos
add
sbb
repz
out
xor
outsl
in
push
dec
push
ja
xor
xchg
or
jo
add
mov
push
sbb
fsubl
es
bound
cmpsl
lods
mov
jp
jno
jnp
cmc
lahf
out
jg
mov
imul
add
xor
ljmp
imul
nop
rep
pusha
xor
or
dec
sub
inc
hlt
push
clc
lock
push
dec
push
xor
sub
xchg
add
dec
jp
adc
loope
ds
leave
cmp
xor
sti
or
mov
nop
cmp
out
popa
pop
aas
lods
sub
cmpsl
or
fs
lods
add
mov
mov
pusha
dec
jl
cld
or
mov
add
sbb
sbb
jge
xchg
clc
push
shlb
jmp
push
out
outsb
add
sub
jle
cmpsl
adc
icebp
sbb
mov
xor
rcl
dec
imul
fisubrl
xchg
pushl
loopw
push
or
mov
popa
lds
movsb
jg
test
xor
lods
xchg
gs
stos
fists
mov
jl
cld
aaa
xchg
pop
insb
mov
orb
sub
loope
lahf
ret
cmpsb
lcall
xor
mov
js
adc
aad
es
lahf
pushl
xchg
rolb
mov
sbb
ljmp
cmc
insb
inc
jbe
dec
add
das
insl
imulb
test
xchg
stos
adc
andl
inc
rcrb
cmp
or
loope
xor
xchg
mov
xchg
push
jbe
adcb
and
fistps
filds
jmp
pushf
faddl
or
inc
mov
outsl
cs
mov
fsubs
push
nop
test
mov
push
mov
lcall
scas
vpand
hlt
fistpll
daa
dec
sahf
mov
sahf
adc
jecxz,pt
loop
dec
mov
lcall
xchg
into
dec
std
mov
add
xchg
or
and
stc
cmp
sbb
movsb
outsl
or
sub
jp
lahf
lds
xchg
into
lds
and
push
or
lret
je
arpl
iret
mov
sbb
iret
push
mov
xchg
add
pop
sbb
out
push
pop
lcall
push
xchg
gs
repz
jne
xor
add
bound
pop
adc
fabs
pop
mov
loopne
cmp
cli
icebp
inc
loope
aas
jb
mov
enter
stc
stos
fistpl
sbb
pop
into
pop
jo
and
push
sub
and
and
dec
lahf
cmp
or
and
or
sub
jo
clc
and
push
xchg
in
stc
add
push
lret
mov
and
push
ss
cmp
fcompl
lret
ret
add
xchg
repnz
cltd
movsb
pop
lock
cmp
out
sub
ss
inc
pop
push
loop
pop
test
call
cmpsl
add
or
inc
xchg
js
add
inc
iret
inc
or
cmp
push
sub
rcll
xchg
push
mov
xchg
inc
and
push
mov
aaa
fadds
mov
push
ja
aam
mov
movsl
mov
testb
ss
dec
push
out
adc
pop
xor
outsb
dec
jg
jg
andb
mov
xchg
ljmp
lds
insb
in
mov
gs
out
mov
fcoml
mov
pushf
jl
aam
repz
xchg
int
xchg
clc
adc
loop
and
das
mov
push
mov
add
iret
pop
stos
lret
pop
jmp
pop
daa
jne
in
jo
mov
gs
jns
je
mov
popl
sbb
repz
ficoms
sbb
lret
in
test
adc
jae
mov
xchg
jge
xchg
pop
mov
sub
mov
mov
sub
inc
cmp
push
or
fsubs
adc
pusha
and
orl
pop
imul
shll
in
jne
jge
addr16
adc
jl
les
adc
mov
sti
xor
and
jno
jb
scas
pop
je
pop
mov
jle
adc
notl
test
or
xchg
aam
mov
inc
test
adc
nop
xchg
leave
cmp
jg
ljmp
arpl
xor
shlb
adc
or
add
shll
addr16
into
and
jo
sbb
fidivs
pushf
sbb
vmread
ret
loop
int
cmpsb
es
sahf
mov
push
popf
outsl
mov
cmp
stos
aam
js
lret
lret
sbb
lcall
ja
cs
sbb
sbb
adc
mov
xor
test
test
mov
cld
jl
js
sbb
mov
lock
dec
aad
dec
shlb
rcl
jecxz
push
inc
repz
xchg
add
jge
outsb
jb
sbb
sub
push
movsb
pusha
or
rcrb
xor
lea
lods
inc
iret
repz
jbe
sub
pop
xchg
or
aaa
pop
mov
xor
or
lds
ret
and
je
ljmp
ret
adc
mov
sub
pop
xor
ds
jg
push
pop
sbb
xor
pop
jno
fdivrl
movsl
ja
dec
sbb
xchg
stmxcsr
xor
pushf
repnz
sahf
cmp
sbb
ja
lret
push
jmp
loop
push
cmp
xchg
mov
cmpsl
mov
mov
movsl
jg
and
dec
jge
dec
xchg
int
or
jl
add
fs
inc
roll
pusha
in
sbb
mov
mov
orl
movsl
cmp
jno
roll
lahf
sbb
sub
ror
pusha
pop
into
lret
and
fdivrs
xchg
into
and
in
cmc
std
push
push
push
outsl
add
mov
roll
and
xor
sbb
loope
mov
cli
cmp
jge
sbb
mov
sbb
xor
je
xor
inc
sub
or
pop
cmc
xchg
js
mov
sub
out
popf
call
dec
dec
je
dec
iret
stos
and
xchg
ljmp
sbb
jecxz
adc
push
movsb
fldt
push
rolb
push
loop
cmpsl
or
nop
mov
aas
lods
push
mov
push
push
push
sub
sarb
and
ret
out
les
push
inc
mul
rcrl
push
mov
sub
cmp
fisubrl
cli
pop
stc
sub
daa
lret
cmpsl
jb
dec
lea
sbb
fwait
pop
nop
jge
xor
test
lock
loope
rcr
dec
xor
sbb
in
cwtl
dec
jmp
gs
dec
cmpsb
lock
sahf
lret
lret
dec
add
mov
adc
mov
out
fmulp
stos
pop
out
fs
rol
jecxz
cltd
mov
fucomp
shl
jl
mov
pop
leave
ret
daa
dec
jg
add
sbb
leave
hlt
pop
cmp
pop
push
ds
test
es
stos
push
scas
cld
mov
mov
imul
add
scas
daa
popa
dec
stc
in
or
pushf
jae
inc
scas
decb
arpl
retw
fidivs
lret
bound
clc
xchg
roll
aaa
push
loopne
adc
cmc
mov
mov
dec
jmp
rcrb
sbbl
inc
lret
mov
lods
stos
ss
js
jns
sbb
test
jmp
lret
mov
dec
pusha
jg
and
imul
pop
lcall
mov
rcr
mov
mov
or
lods
add
into
test
or
inc
sahf
push
imul
fwait
xchg
xor
inc
je
repnz
imul
push
cltd
icebp
data16
sbb
or
daa
add
imul
int
jb
push
movsl
stc
out
sub
gs
int
pushf
xor
push
jno
pop
lods
fdivl
loop
mov
negl
in
sub
and
shl
ljmp
dec
mov
dec
cmp
enter
loopne
adcl
in
and
jge
add
cmp
cmp
stc
sahf
stc
ds
fcoms
mov
sub
push
int3
imul
xor
cmp
daa
push
outsl
bnd
xor
hlt
jb
and
xor
inc
sub
ja
mov
fisubl
and
cmp
scas
int
jecxz
jb
sub
jp
xchg
iret
sub
nop
aaa
adc
stos
mov
cs
and
push
ds
clc
out
mov
mov
or
ret
xchg
mov
xchg
adc
xor
aad
jae
stc
or
or
jo
frstor
adc
nop
add
subl
xor
inc
lods
lret
out
push
mov
or
jg
cltd
adc
lods
bound
xor
sbb
mov
sub
fucomip
xchg
jmp
mov
dec
push
cmpsl
mov
adc
mov
rcl
push
out
test
dec
fisubs
aam
arpl
jnp
hlt
lret
popf
cmp
mov
mov
imul
add
test
scas
sbb
stos
nop
xor
jb
push
mov
aam
mov
stc
inc
pushf
pusha
das
jp
cli
stos
cmc
clc
repnz
jge
inc
cmp
ret
in
inc
test
mov
xchg
pop
loope
xor
adc
lea
mov
cwtl
mov
push
in
cmp
pop
jle
inc
mov
or
fsubs
jnp
fstpl
sub
stos
rcrb
test
mov
pushf
push
mov
icebp
push
pop
mov
pusha
xor
mov
mov
pop
jp
daa
fwait
jmp
lret
adc
iret
loopne
es
or
xchg
call
cmp
mov
call
xchg
dec
inc
mov
cmp
push
mov
pop
insl
loop
sub
lret
aaa
xor
add
push
js
mov
sahf
sahf
xchg
mov
mov
rorl
or
pop
aad
mov
dec
dec
sbb
xorb
shlb
add
popa
addr16
adc
clc
mov
clc
dec
xor
add
jmp
lds
pop
sbb
jb
in
call
paddd
clc
add
mov
or
dec
mov
sbb
adc
xchg
or
orb
call
mov
inc
pop
dec
out
loope
dec
push
push
add
loop
loopne
es
xchg
stos
faddl
je
xchg
xchg
jecxz
add
mov
push
out
imul
lahf
scas
push
inc
pop
les
mov
into
sarl
adc
cmp
sti
dec
adc
clc
enter
push
and
lods
addr16
mov
mov
ret
sub
mov
push
iret
pop
fbstp
bound
daa
cmpb
or
or
imul
xor
loopne
cmp
push
jg
jl
lahf
cmpl
cld
push
jae
js
cmp
enter
ret
insl
dec
pusha
test
dec
or
fs
add
jge
pop
ss
stc
xchg
pop
cmp
jl
cld
out
xchg
decl
jae
xchg
idivl
das
aas
fisubrs
iret
xchg
inc
mov
js
fnstcw
xchg
dec
pop
pop
cmp
jg
push
mov
testb
or
mov
fnstsw
scas
daa
add
repnz
xor
lcall
clc
les
add
daa
lods
and
addr16
sahf
add
out
jb
sar
add
andl
jne
fnstcw
pop
mov
pop
mov
mov
mov
outsb
pop
cltd
mov
push
stc
pop
nop
add
lcall
mov
pop
int3
jle
adc
imul
push
imul
dec
jb
sub
jae
je
mov
test
mov
sti
rolb
adc
insb
inc
jmp
inc
lret
cmp
inc
pop
adc
and
insl
push
aad
sub
lahf
clc
mov
xchg
cld
jb
xorb
or
mov
insl
push
cwtl
and
not
inc
push
mov
sub
or
pop
fs
add
mov
or
adc
ja
adc
pop
pop
lock
xchg
xchg
xchg
lods
mov
stos
and
or
test
dec
rcl
cli
sbbb
xchg
je
sti
mov
cmp
stos
push
rcll
bound
divb
icebp
dec
dec
jns
xchg
pusha
lds
jl
dec
dec
mov
test
cmpsb
scas
clc
lock
outsb
jnp
mov
cmpb
and
xchg
js
xchg
test
sbb
jp
jo
popf
add
fsubrl
ret
call
es
notl
xchg
test
out
mov
pop
lea
and
or
lea
movsb
mov
aaa
fists
ja
mov
nop
pop
sub
or
sub
mov
fs
int3
test
sub
mov
cmp
jp
cs
cmp
addr16
pop
cmp
imul
ret
dec
mov
dec
call
dec
sarb
push
dec
mov
dec
sbb
or
pop
lret
test
std
out
stos
jo
stos
mov
mov
pop
dec
and
dec
pop
lock
es
out
mov
cvtdq2ps
cmp
pop
cmp
jns
jl
xchg
xchg
pop
loop
cmp
xchg
jno
cmp
fisttpl
cmp
adc
push
scas
sbb
in
or
xchg
mov
pushf
movsb
xor
divb
pop
icebp
daa
dec
loope
fsub
jg
mov
xor
sbb
aaa
lcall
scas
enter
mov
jge
fistpll
jle
loop
nop
ret
lahf
inc
aas
in
sub
pop
clc
repz
shlb
imul
cmpsl
mov
cmpsb
call
in
jbe
pop
lahf
mov
adc
sarb
ja
aas
js
out
sub
jg
mov
push
pop
mov
jb
cltd
mov
movsl
mov
dec
aas
add
xchg
and
mov
mov
mov
loope
imul
xchg
outsb
cmp
outsb
sub
cld
add
ss
dec
or
ror
xchg
popf
or
push
enter
lea
mov
stos
add
mov
push
cmp
and
xor
mov
xorb
jnp
inc
pop
jae
and
lahf
cmpb
pusha
pusha
cld
mov
or
and
dec
adc
pop
xchg
jmp
lret
add
cmp
sbb
push
std
jnp
icebp
sub
in
outsb
jnp
shll
mov
mov
repz
mov
imul
mov
std
mov
int3
bnd
aas
xor
push
push
sub
hlt
je
push
pop
mov
cmp
arpl
xor
cli
daa
sub
sahf
jmp
mov
movsl
add
cmpsl
xchg
pop
pop
inc
decb
cmovae
pop
aas
les
xor
mov
jbe
lcall
pop
inc
jmp
push
in
in
mov
fwait
or
imul
mov
int3
out
jecxz
lods
pop
loopne
cmp
movsb
ss
push
hlt
xchg
mov
in
xchg
sbbl
stos
pop
fdivrp
mov
cmp
movsl
dec
and
push
jg
xchg
bound
ficoml
sub
loop
imul
add
jmp
cmpsl
dec
pop
and
and
ja
sbb
sub
mov
cmp
cwtl
pop
ss
mov
loopne
or
push
xor
repnz
mov
jle
out
sti
jo
stc
rcr
push
sbb
shlb
adc
out
mov
pop
shrb
pop
addb
add
mov
pop
jbe
sbb
aam
sbbb
insb
movups
jp
movsb
push
fsubl
push
adcl
cmp
dec
pop
lret
fimull
jl
in
cmpsb
outsb
stos
cwtl
mov
bound
lods
lods
adc
cli
loopne
sbb
cmp
inc
xchg
push
test
sbb
lods
nop
outsb
cmp
and
add
test
jle
jp
xlat
sti
or
call
push
xchg
xchg
repz
mov
inc
adc
dec
sub
clc
test
aad
cmc
xchg
bound
les
push
shlb
dec
add
sub
andl
sarb
call
call
test
mov
in
pop
lods
ds
test
mov
loop
mov
push
addr16
jno
mov
mov
mov
cmp
mov
lahf
push
bound
out
push
mov
or
mov
mov
call
negl
lock
mov
jmp
hlt
movsl
movsb
adc
das
dec
aad
nop
pusha
lds
inc
fwait
sbb
imul
pop
shll
cwtl
add
xchg
loop
inc
std
call
jmp
or
stos
mov
mov
and
and
sbb
mov
pop
mov
gs
and
add
aaa
push
arpl
mov
fisttpll
mov
into
test
dec
mov
dec
jmp
call
leave
sbb
pop
lcall
mov
add
jp
loop
loopne
mov
cwtl
xchg
jbe
mov
imul
popf
lcall
xor
or
xchg
sub
outsl
addl
inc
inc
popa
mov
pop
testb
sbb
xor
pushl
mov
addr16
sub
pop
xor
ret
jle
call
in
xor
notl
inc
fs
enter
scas
adcb
fucom
pushf
push
cs
loopne
sub
cmp
or
cs
ja
jp
or
push
push
mov
nop
out
inc
pop
in
adc
ss
sub
xor
jp
out
inc
mov
sub
inc
lds
sbb
or
cs
cmpsb
stos
in
push
xor
js
pusha
jp
inc
dec
aad
test
xor
or
cld
or
test
jp
out
notl
add
mov
imul
je
dec
dec
pop
iret
inc
daa
add
add
fdiv
add
inc
jno
imul
in
xor
cli
mov
pusha
lahf
cs
push
fwait
lods
outsl
int3
dec
lcall
jmp
add
and
data16
cmc
jg
ljmp
out
sbb
shll
rolb
jnp
and
mov
sti
rolb
lahf
gs
das
xor
mov
rclb
ret
aam
xchg
cmp
jne
int
mov
ret
fnsave
scas
push
popf
jle
mov
pop
ss
mov
xor
out
enter
popa
xchg
andl
mov
repz
mov
adc
or
push
cmp
mov
fbstp
sub
call
sub
hlt
mov
push
mov
dec
out
push
fdiv
xor
cmp
jge
adc
push
mov
nop
add
adc
js
mov
fdivp
mul
dec
sbb
sar
cli
jne
xchg
lret
pushf
jno
aad
jge
mov
cmp
lcall
mull
loopne
imulb
xor
int
cmp
mov
add
pop
mov
xor
lahf
jnp
addr16
cmp
outsb
cld
sbb
or
jle
inc
loopne
push
fistps
cltd
cld
xor
or
loop
in
in
mov
lea
mov
xchg
add
jbe
mov
xor
sti
mov
in
pop
adc
xor
cmc
insl
or
out
cwtl
pop
jl
imul
pop
and
test
cmpsl
jecxz
out
add
adcb
test
incb
jecxz
loop
mov
pop
mov
incb
leave
xlat
sub
ret
repnz
xchg
shrl
dec
clc
cwtl
xor
inc
daa
or
xor
pop
sub
loope
mov
imul
lods
pusha
mov
je
inc
loopne
nop
cmc
int
mov
cli
mov
mov
test
or
stos
xchg
sub
dec
jne
fucomp
rorl
push
mov
mov
pusha
dec
mov
cmp
cltd
pop
lea
sub
mov
mov
mov
fstpl
and
dec
adc
sub
test
es
mov
je
int3
and
mov
fstps
sub
cmp
aas
std
and
dec
xor
stos
push
lods
jnp
jns
pop
cmpl
inc
inc
jecxz
add
inc
adc
add
aaa
mov
mov
inc
push
jg
clc
cmpsb
dec
inc
adc
gs
mov
addr16
xchg
cwtl
shl
ror
xor
out
add
dec
ja
cmp
leave
mov
mov
xchg
fnstcw
loopne
jb
sbb
fdivr
scas
dec
loope
stc
xor
notb
leave
mov
sti
lcall
out
cli
inc
inc
test
mov
inc
xchg
cmp
cwtl
leave
and
popa
and
xchg
insl
insb
mov
mov
pop
aad
pop
mov
jnp
je
inc
scas
push
xlat
aad
sbb
loopne
sbb
cmp
xor
add
xlat
lcall
fdivp
repnz
out
cmpsb
or
xchg
or
es
popl
fnstcw
insl
in
mov
adc
das
ljmp
or
in
mov
and
repz
js
lods
dec
inc
dec
adc
pop
outsb
leave
adc
push
pop
mov
dec
shrl
js
call
in
std
test
neg
sub
mov
ret
mov
sbb
cwtl
add
push
cmp
fs
xor
movsb
mov
cmp
xor
push
dec
iret
insb
inc
fdivs
mov
enter
xor
add
mov
cmpsl
xor
cmpb
xchg
repnz
mov
mov
scas
lret
rorb
cmpsb
xchg
aas
push
xchg
mov
sbb
pop
daa
jle
mov
add
lods
loop
mov
fisubs
lahf
mov
popf
jo
insl
cs
push
test
repz
out
enter
mov
outsb
vhsubps
cmpsb
rcr
fldl
sarb
test
in
fcoml
xchg
inc
imul
sub
pop
xchg
jg
outsb
push
stos
mov
popf
mov
pop
mov
nop
lret
insb
xchg
loope
pop
dec
push
in
pop
sbb
jb
call
sbbb
in
inc
fnsave
shr
test
adc
dec
add
jmp
mov
cmc
data16
add
push
inc
scas
scas
push
mov
sahf
jmp
pop
cmc
aas
inc
cmp
dec
pop
lods
pop
jno
enter
gs
mov
mov
sbb
xchg
aad
add
mov
cmpsb
sub
insl
pop
push
dec
out
xchg
cmc
push
inc
cmpsl
ret
pop
push
sbb
lret
ficompl
int3
jmp
das
icebp
fs
es
sbb
fimull
pusha
lcall
adc
rol
stc
cmpsb
js
mov
arpl
hlt
cmpsb
cmp
mov
adc
lcall
mov
and
adc
fdivrl
in
or
in
cmp
jbe
stc
outsb
test
jecxz
inc
xchg
sahf
xchg
ss
xor
push
adc
dec
nop
lds
inc
mov
xor
in
decl
scas
sub
fwait
mov
jns
movsb
cmp
push
dec
std
fsubr
lea
pop
sub
sbb
jl
xchg
hlt
stc
in
icebp
mov
out
and
push
pop
push
fxam
pushf
scas
mov
pop
push
data16
dec
je
and
sub
jmp
daa
dec
pushf
mov
sub
ret
or
or
inc
fnstcw
jmp
test
pop
aad
cmpsb
xor
mov
sub
inc
sub
repz
js
idivb
imul
cmc
and
jnp
mov
pushl
add
xchg
and
icebp
cwtl
dec
sahf
ljmp
mov
es
or
loopne
fisubrs
stos
add
faddl
pop
xor
rorb
and
fimull
or
sub
test
mov
test
xchg
stos
sbb
push
pop
xor
jbe
xchg
ret
in
shl
daa
cmp
mov
jo
cmpb
push
push
xor
ret
sbb
mov
sub
rorb
jae
and
outsl
pop
inc
mov
pop
fadds
cmp
ret
loope
int
in
imul
and
cld
jg
pusha
insb
or
pop
stos
jle
pop
imul
shlb
ljmp
jp
mov
mov
arpl
mov
hlt
inc
push
jmp
outsb
push
in
mov
test
xlat
mov
sbb
repnz
add
js
lds
inc
fdiv
orl
out
mov
xchg
lahf
test
scas
cmp
cmpsl
xor
leave
sbb
les
in
loopne
aaa
xor
icebp
mov
adc
jo
lahf
loope
cld
add
adc
sbb
sahf
les
push
repnz
cs
clc
cld
in
movsl
xchg
mov
and
pop
and
stos
and
lea
stos
test
pop
xor
add
lcall
mov
xchg
pop
cmc
stos
out
mov
xor
cmp
sti
mov
xchg
mov
xchg
sahf
pop
inc
adc
mov
xor
xchg
jns
dec
shl
or
imul
hlt
mov
mov
mov
adc
cmp
movsb
loope
es
cmp
dec
fnstcw
mov
add
push
in
hlt
xor
jmp
mov
lcall
js
insb
imul
ret
jne
xor
dec
fdivr
push
add
out
es
lock
incl
lods
aam
sbb
ljmp
dec
fwait
decb
add
aad
js
orl
pop
add
lret
adc
ds
cmc
scas
or
or
into
and
jg
cmp
inc
dec
pop
push
fisubrl
and
test
jbe
aas
lret
repz
jg
ljmp
pop
es
outsb
dec
loop
inc
sub
pop
add
add
addl
xor
std
fldenv
push
xchg
push
sub
or
and
into
pop
inc
inc
jbe
inc
add
loope
mov
cli
hlt
cmp
fwait
adc
dec
call
stc
xchg
mov
rolb
cmp
repz
inc
aas
jg
mov
subl
in
cld
cmp
jns
sub
sub
test
enter
ficomps
jecxz
cmc
sbb
dec
xchg
mov
mov
or
mov
and
movsb
fsub
jg
mov
lret
ret
shrb
imul
ficoml
cld
pop
outsl
pop
mov
loop
xchg
incb
scas
push
imull
and
test
ss
push
and
pop
or
out
add
mov
lret
push
dec
popf
fnstsw
pop
cwtl
ret
or
cmp
dec
jo
pop
and
push
gs
popw
and
in
mov
push
js
lcall
je
pop
ljmp
pop
mov
call
jp
sahf
pusha
mov
cwtl
into
jmp
jae
jl
add
push
xor
mov
ret
fidivrs
jno
aas
push
ss
inc
pop
fnstcw
in
scas
nop
or
out
inc
rcrl
dec
aad
mov
pop
das
lock
into
shll
cmp
mov
mov
aam
sbb
sbb
mov
adc
add
les
and
xchg
jno
push
mov
es
xchg
dec
daa
shl
int3
out
imul
mov
rolb
dec
adc
sub
loop
pop
fcmovnbe
jno
and
je
dec
cmpsb
popf
push
lret
cltd
out
sbbb
mov
jp
rorl
push
mov
mov
lret
repz
jo
aam
inc
xchg
sub
sbb
xor
bound
jnp
fistps
pushf
jp
test
or
mov
xorb
pushl
sub
divb
xor
or
or
xchg
push
jns
mov
sbb
cmp
jle
insb
rorl
and
out
push
add
call
push
sahf
out
inc
aad
add
mov
and
pushf
xchg
cmp
xchg
adc
xchg
addb
mov
xor
inc
pop
adc
hlt
fwait
dec
jecxz
cltd
imul
or
add
or
mov
xor
add
mov
mov
movsb
jne
fnsave
dec
dec
icebp
pop
outsl
ret
adc
dec
shlb
loopne
mov
imul
popf
inc
arpl
jns
lret
addb
imulb
ja
out
cltd
xchg
in
mov
xchg
cmp
inc
out
mov
and
call
aas
lret
pop
stc
xor
add
mov
es
pop
jne
dec
add
test
test
xor
or
inc
test
inc
and
ret
or
imul
out
aad
mov
xchg
jo
inc
enter
jbe
cmp
sbb
mov
add
cmp
or
xor
push
icebp
push
test
cs
mov
jl
out
xchg
inc
mov
cmp
push
and
mov
sub
adc
inc
movsl
mov
loop
call
mov
push
sti
push
jl
mov
popf
or
xlat
jno
out
xchg
test
fdivrl
in
xor
push
sub
imul
lcall
mov
mov
mov
sbb
inc
fidivs
push
pop
arpl
mov
jo
jg
push
je
sub
scas
mov
inc
mov
push
in
inc
lods
out
push
das
sbb
jno
js
push
cmc
sub
aas
xchg
cmpsl
js
mov
jbe
mov
xchg
je
lahf
xchg
add
pushf
bound
js
iret
adc
dec
rcrl
dec
iret
lock
fadd
cmp
stos
pop
or
jns
inc
and
loope
adc
push
fs
notl
fs
add
and
fs
aam
adc
dec
fwait
mov
pop
push
jns
and
mov
sub
jns
push
test
arpl
cmpsb
push
and
xor
fdivr
xchg
mov
sbb
je
add
jns
adc
ss
jg
xor
ds
flds
adc
arpl
sbb
jle
xor
out
xor
push
icebp
pushf
jno
pop
dec
sub
loopne
mov
xchg
testb
fsts
call
mov
adc
jge
out
lret
sahf
roll
mov
mov
mov
jns
jl
inc
xchg
fildll
mov
divb
sti
loopne
int
mov
mov
sbb
insl
add
and
gs
rclb
mov
in
xchg
sub
jo
add
out
mov
loopne
mov
aaa
iret
cli
lods
xor
cmp
int
stc
jae
push
or
mov
add
xor
loopne
sbb
inc
mov
xor
std
test
sti
jnp
sbb
iret
pushf
jl
inc
inc
sbb
jns
add
pop
add
jo
out
lds
mov
rcll
dec
inc
ljmp
inc
inc
out
xor
mov
ror
jle
into
outsb
mov
dec
popf
sub
mov
mov
mov
imul
imul
cmp
dec
or
and
rcrl
add
jae
fwait
cmp
inc
pop
ljmp
dec
aas
jnp
sahf
cmc
xchg
scas
dec
pop
xchg
cmp
jno
pop
ror
jae
push
out
push
cmpl
shrl
out
lods
pop
out
and
add
mov
shrb
data16
cwtl
ss
and
out
jnp
inc
adc
loop
in
cmpl
xchg
jmp
loope
inc
jns
test
ret
fdivl
jecxz
cmpsl
mov
inc
enter
mov
int
lods
test
jb
gs
dec
lock
int
mov
scas
and
dec
popa
mov
push
dec
test
ret
pop
pop
movsl
cmpsb
andb
stos
mov
sahf
mov
es
mov
mov
jl
sub
notb
inc
inc
jmp
jno
fisubrl
fcmovne
push
out
mov
insb
mov
lods
cmpsl
xchg
out
mov
mov
sub
gs
test
cmp
dec
in
ja
lea
cwtl
and
mov
mov
out
pop
add
mov
cmpsl
push
stc
enter
jo
dec
std
sbb
popl
xchg
xor
je
leave
xchg
push
leave
repz
pavgb
enter
in
fcoml
mov
xor
fnsave
inc
mov
cmovg
insb
mov
pusha
mov
add
cmp
sub
dec
jl
aaa
test
pop
es
push
dec
pop
or
jge
cmpl
out
insb
lds
cwtl
jge
add
mov
and
pusha
jb
pop
jle
adc
mov
push
sbb
pop
out
jbe
fsubrs
cmp
nop
scas
sbb
mov
repnz
arpl
ja
or
in
push
call
lds
lea
frstor
mov
negb
icebp
daa
mov
in
das
mov
cmp
sub
cld
nop
aam
push
outsb
jmp
out
popf
pushf
mov
sub
aas
mov
ja
sbb
jae
or
dec
xchg
test
std
jecxz
and
add
test
jg
pmulhuw
xchg
sub
fs
jp
xchg
xchg
sbb
lcall
je
add
cmp
add
push
dec
mov
les
sbb
dec
xchg
out
inc
icebp
cmp
scas
shl
dec
icebp
push
push
xchg
inc
push
adc
loop
push
repnz
and
rcll
icebp
mov
pop
je
mov
cmpsb
bound
mov
cmp
sbb
lahf
loopne
out
or
pop
data16
sarl
shrb
mov
mov
xchg
mov
data16
jecxz
mov
push
pop
cmpsl
out
adc
add
cmp
test
mov
jo
adc
es
pushf
jbe
in
mov
lcall
bound
lds
lahf
stos
mov
outsb
fcoms
mov
push
xor
pop
shl
rcr
clc
sbb
xor
into
mov
out
inc
in
cld
adcb
fsubrl
xchg
pop
mul
xor
vcmppd
loopne
mov
insb
mov
stos
jo
clc
decb
pop
mov
call
movsl
inc
pusha
sbb
sub
je
mov
sbb
ret
xor
xchg
ret
jo
inc
lea
aad
xor
dec
in
push
insl
lret
das
dec
push
dec
inc
inc
mov
mov
dec
mov
mov
fmul
push
aad
pushf
mov
xor
dec
sub
cmpsl
dec
cmp
repnz
and
sub
fs
or
mov
fdiv
push
add
xchg
ret
lret
xchg
aad
icebp
stos
dec
addr16
pop
xor
shll
in
sub
test
insl
mov
int3
push
popl
mov
cmp
int3
movl
push
aaa
orl
xor
jle
scas
jecxz
inc
jae
xchg
cmp
cmp
mov
mov
lcall
inc
or
mov
mov
popf
jbe
repz
inc
rolb
jne
and
popa
jl
fwait
mov
jle
inc
fs
push
lds
ret
ljmp
in
mov
pop
push
inc
xchg
mov
aam
sahf
push
push
out
jne
mov
push
push
pop
mov
xchg
inc
mov
pop
mov
mov
aaa
popa
shlb
out
sarl
insb
dec
mov
int3
inc
or
popf
jp
add
inc
dec
jns
jns
les
aam
and
clc
xlat
push
sub
dec
into
sub
out
dec
mov
jmp
lea
add
fdiv
and
and
aad
push
mov
mov
lds
lret
jno
lcall
rcrb
xchg
xchg
mov
add
jnp
loope
lock
sbb
ficoml
insb
inc
push
stc
aaa
fimull
mov
pop
int
and
mov
pop
cmpl
mov
xchg
in
dec
mov
mov
pop
add
and
mov
push
je
pop
in
xchg
sub
xchg
stos
movsb
fldenv
jb
add
jp
or
pop
imul
pop
mov
sub
das
out
xor
push
bound
pop
imul
cmp
in
or
push
outsb
in
xor
nop
sahf
fldl
sti
jbe
decl
repnz
scas
icebp
fcomp
sbb
cmp
lret
mov
push
fisubrs
movb
or
popl
imul
jne
push
test
dec
fidivl
int
jge
test
test
add
push
mov
nop
jae
and
or
ljmp
mov
jno
or
xor
fistl
inc
jbe
and
mov
mov
test
inc
fldenv
jo
xor
push
dec
cltd
test
icebp
xor
adc
pop
mov
xor
xor
mov
adc
cltd
mov
and
ret
jle
lods
ds
incb
std
popa
push
sub
xor
add
and
out
insb
cld
cwtl
mov
lret
scas
add
fsubr
mov
leave
inc
stos
es
jle
outsl
loop
pop
shl
xchg
imull
pop
movsb
push
rcr
push
adc
enter
in
inc
jne
fimuls
jg
sub
mov
xchg
test
stc
aam
adc
xor
mov
testb
dec
loope
push
cmp
push
mov
cli
fbstp
lcall
inc
pushf
call
jmp
cwtl
add
cmpsl
scas
jo
xchg
pop
sbb
xchg
xchg
sub
dec
sahf
mov
xchg
or
shr
adc
outsl
imul
aaa
xor
out
pop
fldcw
lret
mov
imulb
mov
pop
xchg
arpl
in
xor
rcll
pushf
ret
int
dec
mov
add
dec
cmp
mov
mov
adc
mov
push
notl
or
rcr
imul
jno
repz
ficoml
aam
jo
jno
push
mov
inc
inc
sti
xchg
cmp
push
cwtl
xchg
mov
sarl
lods
adc
sbb
jg
mov
imul
dec
mov
mov
push
outsb
mov
or
dec
sbb
xchg
jp
imul
idivb
loopne,pn
and
mov
inc
dec
rcl
sub
xchg
test
mov
mov
inc
mov
inc
mov
jmp
pop
arpl
repnz
pop
jae
dec
pop
sbb
or
imul
push
leave
aaa
adc
xchg
repz
sbb
imul
adc
jb
std
lds
cmp
mov
call
ficoms
cmpsb
repz
inc
xor
pop
dec
nop
xchg
sbb
lcall
push
dec
pusha
mov
mov
leave
jae
xchg
xor
inc
dec
xor
push
jecxz
dec
push
stc
test
test
jae
sbb
adc
push
xchg
addr16
mov
mov
in
push
jge
xor
xor
ja
push
pop
pop
cmp
dec
push
ret
cld
jne
popa
les
hlt
rclb
loopne
inc
aam
ficompl
inc
stos
inc
js
cld
adc
into
ljmp
mov
mov
xchg
mov
out
add
push
lahf
pop
pop
mov
idiv
fadd
mov
std
repz
dec
repnz
cmpl
cmc
decb
mov
test
jns
rcll
jbe
sti
pop
cmc
sub
lock
or
add
mov
test
push
jne
jg
dec
cwtl
sub
pusha
jmp
rolb
jge
pop
cwtl
addl
adc
mov
inc
test
cmc
es
mov
xchg
cli
int
and
push
hlt
pop
mov
jnp
inc
ret
sub
bnd
faddp
in
mov
jnp
xor
sub
ret
loope
mov
clc
push
xor
mov
cmc
sahf
loopne
mov
mov
pushf
pop
and
jae
mov
xor
call
int
jp
call
mov
dec
out
daa
mov
cmpsl
add
lds
fldenv
scas
outsl
lret
mov
imul
add
dec
xchg
js
cmp
mov
cltd
inc
dec
shrl
fistpl
aaa
sbb
or
pop
in
mov
mov
push
push
es
out
movsb
lods
repz
adc
jge
and
fstps
fsubl
dec
mov
out
lret
sarb
test
bound
stc
and
xlat
cwtl
xlat
pop
mov
xchg
lods
dec
xchg
inc
jge
icebp
popf
cli
in
enter
pop
xchg
jecxz
fcoms
sub
ret
jg
dec
lret
pmaxsw
gs
js
and
cmp
dec
data16
test
cltd
mov
in
mov
or
inc
mov
sub
sti
mov
and
lahf
outsb
inc
insl
jo
pop
loop
addb
inc
xchg
add
adcl
cmp
push
sbb
insb
sbbb
shll
int
push
pusha
and
cmp
add
je
imul
shlb
adc
fnstcw
repz
pusha
insl
jle
shlb
and
xchg
mov
mov
sti
jmp
sbb
stos
xchg
pusha
lock
sub
push
dec
int3
inc
jno
dec
push
push
xchg
pop
dec
cmpsl
dec
fcoms
push
mov
aas
movsb
xchg
jns
mov
sti
ljmp
push
iret
imul
push
fs
jl
mov
rclb
inc
and
test
stc
fcoms
mov
add
mov
mov
imul
cltd
mov
mov
sub
push
cld
mov
cmp
daa
popf
imul
popf
insl
sahf
pop
inc
mov
sbb
inc
mov
inc
sbb
lods
add
or
js
pushf
jmp
mov
push
add
mov
inc
in
sti
sub
imul
xor
aad
daa
ss
addr16
sub
ja
movsb
adc
cs
in
fiaddl
push
fcom
scas
cld
push
gs
imul
loope
sbb
inc
cmp
dec
les
push
mov
push
fimull
mov
sbb
rorl
and
aas
add
mov
std
stos
sar
test
mov
push
dec
push
dec
mov
sarb
mov
mov
push
imul
jnp
push
cmp
sahf
inc
loop
cmc
jno
sbb
xor
insb
pop
pop
jo
mov
dec
mov
xchg
jmp
inc
adc
mov
mov
inc
outsl
shlb
fsubrl
pop
push
pop
stos
mov
mov
fdivrl
and
aaa
loop
mov
adc
cmp
xlat
or
in
lahf
mov
add
shll
loopne
aas
jo
in
jle
lret
popf
mov
ds
subb
mov
sub
xor
int
jae
lret
out
push
push
or
and
sub
push
ficoml
in
lock
cs
fwait
ja
negl
imul
sub
mov
mov
mov
in
pushf
rcrb
cli
aad
push
xchg
lea
aad
sub
stos
lcall
stos
pusha
cmp
lea
pop
sti
loop
iret
jne
ret
add
iret
shl
test
cli
addl
inc
dec
cmp
mov
pop
xchg
pop
or
add
xor
test
nop
jg
call
cli
inc
dec
into
jmp
and
xor
mov
insb
mov
or
xchg
hlt
out
loopne
sbb
aaa
sub
fwait
decb
fdivl
cmp
mov
call
sti
rcrb
mov
xchg
mov
cmp
push
inc
lods
xlat
mov
test
lock
dec
lahf
bound
fsubrl
ljmp
popf
cmp
scas
pop
mov
xchg
push
mov
adc
cmp
fsubr
ja
jmp
or
dec
xor
aas
mov
and
jge
andb
sbbl
add
mov
imul
xchg
jns
add
mov
xor
loop
mov
adc
mov
hlt
movsb
sahf
sbb
sbb
mov
enter
cmp
inc
dec
push
jno
pop
ljmp
sub
xor
test
jp
push
ja
enter
push
or
lcall
fwait
pusha
mov
or
js
adc
and
xor
out
data16
xchg
or
test
fidivrl
inc
scas
fld
dec
mov
out
arpl
fcmovnbe
mov
sbbl
int
cmp
inc
mov
shll
dec
pop
mov
scas
repz
mov
lahf
adc
pop
movsb
into
test
lcall
mov
jl
sub
fildll
push
xchg
lea
leave
mov
repnz
cmp
lods
pop
daa
jmp
xor
xor
mov
xor
push
sbb
jne
fldenv
fbld
popf
mov
imul
xchg
data16
lcall
or
add
xchg
aam
repnz
jmp
adc
inc
cli
dec
shlb
cmp
sub
pusha
in
push
shll
cmp
pop
popa
sub
xorl
call
fdivp
cmpsl
fsubrs
pop
lea
mov
scas
add
lret
or
mov
add
mov
sbb
adc
es
je
jns
pmaddwd
pusha
lcall
js
pop
xor
sub
mov
mov
jmp
movsl
adc
int3
lret
lock
andl
mov
and
addl
jb
sub
ret
ds
cld
mov
sbb
pop
dec
imul
mov
sar
into
sahf
cmc
hlt
jecxz
adc
sbb
rorl
pop
mov
or
push
dec
stos
ljmp
cmpsl
lahf
add
lcall
sbbb
arpl
popf
push
es
movsb
addr16
addr16
repnz
lret
ja
mov
pop
pushf
es
push
into
mov
and
cmp
inc
mov
mov
push
sbb
daa
inc
push
out
adc
pusha
in
jb
aam
imull
mov
int
inc
outsl
and
mov
mov
cltd
add
sub
loop
mov
cmpsb
das
scas
or
pop
mov
mov
inc
inc
cmp
stos
shr
xor
sbb
ret
lock
pop
cmpsb
add
xorl
xchg
mov
sahf
js
inc
fwait
jle
adc
cmp
jbe
push
push
in
adc
imul
cmp
mov
movsl
cmc
xchg
orb
test
shrl
imul
scas
fmull
imul
je
dec
cltd
push
push
pop
or
clc
shl
scas
xor
adc
std
or
fwait
adc
cmpsl
mov
movsb
gs
xlat
push
lret
add
push
repz
mov
push
push
pushf
clc
pop
jae
int3
or
pop
ficoml
fwait
push
push
je
pop
push
cmpl
mov
xor
sbb
clc
dec
inc
orb
es
mov
dec
shll
negb
pop
pop
sti
xchg
int
sub
and
and
lret
test
sbb
xchg
imul
add
out
ss
ret
mov
push
ds
sub
mov
mov
or
repnz
xor
test
cmpsl
addr16
jae
test
dec
xor
fsubl
int3
add
sbb
inc
js
inc
xor
das
clc
and
les
nop
xor
andl
addr16
roll
mull
cmp
in
std
mov
popf
imul
dec
ret
aas
popf
sub
shll
push
inc
mov
lods
iret
and
stc
push
hlt
jbe
iret
stos
test
cmp
and
mov
call
sub
repnz
mov
lock
ror
add
fcoms
or
dec
ja
add
cmp
pop
cmp
das
mov
cmpsb
movsb
mov
ss
mov
mov
movsl
mov
xor
fwait
sub
adc
cmp
in
pop
pop
jo
xchg
push
jl
enter
cmp
cmp
and
mov
fiaddl
fsubr
nop
je
add
sub
inc
and
cmpsl
pop
decl
popf
cwtl
lock
je
jns
pop
xlat
cmp
cmp
jne
mov
sti
loop
sbb
fnstsw
mov
add
mov
or
jge
push
xor
push
jne
popa
adc
daa
loopne
outsb
dec
cmp
imul
pop
pop
sbbb
ss
fs
or
fadds
pop
mov
sub
imul
mov
pop
stos
or
clc
out
add
shrb
cmp
jb
pop
inc
adc
outsl
jle
enter
pushf
pop
pop
mov
mov
nop
out
shll
xor
stc
lods
push
rorl
xor
lret
adc
shl
in
mov
sbb
sub
lret
jno
cwtl
imul
pop
lret
ret
jb
adc
enter
in
and
pop
pusha
lods
dec
push
jl
or
mov
add
cwtl
mov
pop
inc
mov
adc
jb
inc
or
jo
jg
inc
pop
push
adc
jle
push
cmpsl
sub
mov
jl
pop
sub
jbe
pop
fucom
jns
xor
cmp
gs
test
mov
fisttpll
mov
xchg
xchg
adc
mov
aas
cltd
cmpsb
das
cmp
cmpsb
or
notl
or
test
push
pop
repnz
outsb
mov
addr16
nop
jns
shll
mov
stos
loopne
cmp
outsl
ficomps
xchg
sbb
fnstsw
jo
in
roll
out
or
fsub
mov
or
cmp
push
imul
or
and
or
les
repz
popf
sub
out
cmp
fbld
rclb
xor
sub
fcmovnu
add
bound
fidivrl
xor
xor
lss
sub
push
leave
sahf
push
or
ret
sbb
nop
hlt
push
lods
das
mov
pop
xor
cmpsl
and
mov
fmuls
out
inc
sub
roll
addr16
xor
test
pop
push
subl
push
sub
mov
js
jmp
xchg
sub
dec
mov
iret
xlat
mov
stos
movsl
ljmp
iret
push
mov
adc
mov
ljmp
mov
pop
stos
pop
adc
mov
fisttps
sahf
push
jge
sbb
ja
test
lret
subl
mov
call
cmp
and
aad
pop
push
add
arpl
cmpl
xor
cmp
mov
leave
outsl
jmp
mov
mov
mov
mov
xchg
das
mov
mov
add
and
pushf
in
or
add
leave
out
sbb
pop
mov
addb
xchg
jmp
sbb
enter
dec
rcrl
pop
sbb
cmc
cmpsb
dec
jno
mov
mov
pop
sub
mov
add
or
push
add
or
sub
mov
sub
cmpsl
mov
mov
pop
dec
jnp
rcrl
inc
shll
sbb
lret
hlt
flds
mov
leave
xorl
add
lods
mov
add
push
aam
shrb
jns
sub
in
int
fwait
add
and
mov
loope
mov
fsubrs
pop
xor
int
ja
je
es
rcl
test
cwtl
jno
push
loop
sub
into
push
mov
inc
insl
test
xchg
scas
push
outsb
mov
mov
adc
mov
dec
rorb
jo
fdiv
add
jmp
sub
jmp
jb
and
lret
jl
inc
cmp
sub
cmpsl
lret
rclb
jl
pop
and
jns
sarl
jnp
shlb
mov
pushf
in
icebp
scas
stos
insb
aam
lcall
imul
mov
inc
cmpsb
mov
xchg
inc
fimull
inc
into
imul
movsb
bnd
in
xchg
xchg
loope
inc
in
mov
or
xchg
popf
std
dec
push
mov
lea
and
mov
ljmp
push
push
push
xchg
mov
out
loope
inc
rcll
testl
mov
sahf
les
jg
daa
mull
call
or
jp
push
jno
in
pop
out
xchg
pop
cmp
je
dec
loopne
stc
insl
xchg
dec
jecxz
out
pop
int
call
loop
lea
cvtps2pi
fistps
mov
lahf
pushf
jne
loop
adcl
cwtl
and
dec
push
inc
int3
or
stc
mov
cmc
bound
mov
jno
xchg
repz
imul
mov
sub
cwtl
rclb
jns
adc
sbb
call
dec
stos
pop
ds
daa
lret
fldcw
sub
sub
sub
icebp
aad
repnz
jle
push
and
testb
jns
aad
in
sub
cmpl
xchg
lock
dec
and
xchg
sbb
aaa
shl
sub
xchg
xchg
cmpsb
and
clc
sahf
sti
xchg
nop
xor
add
das
xchg
or
cmp
jge
rcll
push
mov
adc
inc
repnz
rcll
les
or
fisttpll
lods
mov
imul
lods
sti
push
out
test
sbb
cmp
insb
jb
sarb
shll
add
arpl
dec
adc
xchg
or
xor
pop
and
lcall
lcall
adc
push
mov
pop
push
shll
in
negl
push
pop
pop
inc
push
sbb
push
popf
adc
or
aaa
ret
filds
pop
push
into
lret
cltd
inc
mov
dec
cmovle
fwait
dec
and
aad
pop
hlt
lods
xor
test
xor
lds
fildll
cmpl
cld
cs
fsubp
clc
xchg
pop
add
scas
repnz
cs
fdivs
out
inc
hlt
loop
cwtl
push
leave
sti
shll
scas
jo
lods
je
inc
popa
sbb
inc
cltd
xor
pop
fldenv
insl
and
ja
fists
or
loop
or
shl
inc
and
push
or
or
test
inc
pusha
pop
push
aam
pushf
enter
and
adc
aaa
loop
add
lret
fstpl
dec
movsb
jmp
cmp
pop
hlt
mov
cld
pop
adc
movsl
mov
mov
sub
enter
cmp
adc
test
mov
cmpsb
xchg
lea
mov
out
xchg
inc
pop
xor
arpl
xlat
mov
add
lret
push
mov
mov
add
inc
cmc
shr
popf
int
frstor
pop
fistps
sbb
mov
outsb
xchg
fdivr
and
mov
dec
push
add
sub
push
cmc
pop
xlat
in
inc
cmpsb
mov
lret
inc
lret
push
pause
sbb
sub
les
cmpsb
jo
pop
add
adc
cmp
push
inc
arpl
and
lret
outsb
mov
mov
add
inc
ljmp
lahf
arpl
lods
fstpl
or
xor
push
ret
adcb
mov
jecxz
xchg
sub
mulb
dec
test
jle
jae
notl
das
lahf
movsl
aas
jg
push
pusha
jl
inc
jb
les
lea
mov
cmpsl
sarl
xor
dec
dec
mov
cmp
fwait
enter
jp
test
dec
mov
ret
pusha
cmp
rclb
fdivr
pop
inc
push
or
cld
or
and
adc
cmpsb
fmull
subl
inc
mov
gs
call
ret
aam
ljmp
lcall
or
mov
enter
fldcw
call
adc
and
bound
in
in
dec
movsb
mov
inc
ss
jge
add
mul
push
les
inc
pop
lcall
stc
mov
fs
jbe
repz
cmp
add
in
inc
ret
xchg
lret
aas
jmp
icebp
popf
aad
out
sub
stos
sub
sbb
rorb
fstps
sbb
mov
jmp
iret
mov
jbe
adc
bound
ljmp
std
jo
lahf
xchg
or
and
xchg
jb
sub
pop
sahf
lock
cmc
in
and
pop
lock
insl
cmc
mov
mov
jo
scas
ret
lea
pop
or
inc
pop
sub
jne
daa
xlat
outsb
pop
dec
mov
jnp
inc
cmc
jg
imulb
sarl
mov
add
hlt
in
cli
adc
xchg
xchg
push
and
repz
scas
add
ret
sub
stc
mov
rcll
fldl
insb
addr16
out
test
or
sbb
sbb
hlt
das
cmpl
mov
std
dec
xchg
movsl
or
mov
shll
dec
xchg
adc
mov
cltd
imul
xchg
mov
pop
cmpl
or
add
push
cmpsl
jmp
mov
mov
jns
ret
pop
push
mov
add
jne
xchg
add
mov
inc
mov
movsb
std
sbb
jns
sbb
push
sti
cli
adc
dec
mov
xor
int
pop
lods
out
sub
gs
iret
adc
and
test
frndint
leave
xor
repz
out
cmp
and
xchg
gs
mov
mov
popf
sbb
loope
in
push
add
jg
mov
sub
inc
dec
jmp
popf
ret
xchg
test
dec
outsb
cmp
mov
pop
sub
mov
pop
cmpsb
mov
pop
adc
jno
push
arpl
scas
fcmovnb
xchg
jge
mov
xor
push
cmpsl
shrb
insl
add
es
mov
imul
mov
inc
pop
in
mov
mov
nop
test
out
and
cmc
mov
fisubl
outsl
rcll
not
lea
movsl
aad
pop
daa
mov
divb
ja
scas
loopne
daa
mov
add
popf
pop
dec
xor
mov
and
mov
arpl
pushf
cmpsl
add
scas
int
pop
js
pop
mov
push
aaa
and
cmpsb
jecxz
add
or
mov
int3
ret
insb
test
int3
mov
sbb
loop
push
scas
xchg
in
dec
movsl
jg
and
call
push
dec
ja
jae
loopne
push
add
xchg
call
pop
xchg
adc
scas
lods
xlat
out
sbb
mov
sub
dec
loopnew
out
enter
push
arpl
arpl
jmp
mov
jno
in
in
lret
stos
sbb
scas
icebp
cmp
pop
div
fildll
fs
jae
jno,pn
js
ret
jecxz
pusha
mov
pop
xchg
dec
dec
mov
shlb
repnz
jp
push
repz
and
fcmovnu
lea
add
sbb
outsl
adc
lret
jae
cmc
dec
out
inc
add
sub
fnstsw
push
lret
and
xchg
or
push
xchg
mov
call
bound
loop
jae
insb
lea
and
dec
sbb
dec
test
hlt
push
stc
jg
jae
in
add
lods
cmp
jae
int
jno
nop
aaa
stos
dec
cli
test
aaa
aad
lds
mov
or
pop
jmp
push
pop
xchg
push
mov
fmull
into
pop
push
fistpll
lahf
and
mov
cmp
inc
stos
rcr
in
fiaddl
stc
or
sbb
and
lods
cmp
loop
inc
in
mov
outsb
sub
call
sti
jle
mov
test
push
push
jns
imul
adcl
mov
mov
add
pop
lock
out
imul
mov
mov
int3
enter
and
sbb
jmp
add
loope
jno
lods
loopne
test
jmp
test
cltd
fcom
jle
xlat
or
repz
int3
out
inc
das
inc
mov
loop
iret
mov
add
or
mov
lret
sub
loop
out
sub
cmpsl
lcall
sbb
add
pop
mov
dec
push
fnsave
mov
sbb
leave
jns
pusha
xor
sub
jns
cs
insl
jnp
jmp
mov
mov
fcmovnu
jae
enter
inc
sbb
sti
xor
mov
xchg
aad
loop
pop
in
sahf
xlat
ret
test
pop
push
push
and
mov
dec
outsb
cmp
cli
cwtl
dec
leave
xor
imul
inc
movsl
push
test
pusha
rorl
pop
aaa
stos
push
add
inc
cwtl
test
push
cmp
imul
fimuls
jmp
xchg
stos
shl
out
in
push
or
fs
push
insl
jg
loop
push
mov
and
mov
orb
mov
insb
push
jo
cmpsl
cmpsl
repnz
das
xchg
in
scas
cmpsl
out
cmp
rol
ret
mov
fsts
mov
mov
xchg
int
js
pusha
call
stos
mov
or
xor
movsl
outsb
mov
push
js
je
addr16
ljmp
jno
lahf
xor
dec
sti
loopne
pop
sbb
out
out
add
mov
insl
dec
in
cltd
pop
sbb
jge
jmp
fs
cmp
cmp
mov
cmp
pop
imul
cmp
inc
inc
jle
push
xor
mov
out
mov
pop
mov
int3
push
adcb
dec
dec
jno
hlt
popa
sahf
add
jne
cmp
add
dec
pop
jge
adc
fsubr
jg
dec
icebp
push
es
adc
std
sbb
lcall
loop
icebp
lea
xor
mov
lock
inc
mov
shl
cmc
ja
subl
insb
dec
ja
adc
pop
mov
sub
mov
mov
loop
cmp
sbb
jo
or
jb
aas
pushf
ffreep
mov
jns
dec
lahf
popf
cltd
daa
push
xchg
jecxz
adc
mov
pop
loop
add
fildl
movsb
add
mov
andnps
mov
xchg
push
sbb
jnp
inc
inc
ljmp
fisubrl
div
cmc
icebp
outsb
lcall
sub
mov
sub
stos
insb
mov
out
rorl
xchg
jge
push
jge
mov
out
mov
adc
mov
xlat
xchg
mov
idivb
clc
inc
fistpll
xor
inc
lods
rcrb
xchg
movsb
jle
mov
jno
mov
jg
pushf
pusha
imul
inc
scas
adc
dec
mov
fisubrl
push
std
jae
rol
imul
pop
push
shlb
jno
mov
insl
stos
mov
cmovp
dec
sbb
lret
fsubs
out
xor
jecxz
xchg
lret
cmp
or
loopne
ja
out
sub
js
mov
sub
popf
xlat
imul
mov
pop
pop
lcall
adcb
and
inc
fisubs
notb
scas
xchg
pop
imul
mov
test
pop
xor
jge
mov
pusha
rcrl
mov
shlb
int
es
stc
inc
inc
rclb
test
xchg
pop
loope
imul
adc
push
push
and
dec
lahf
pop
cmpsl
ljmp
divl
lds
shlb
mov
inc
aas
aas
pop
sti
mov
test
mov
pop
enter
sbb
push
sub
iret
inc
jecxz
sbb
or
and
pop
cmpsb
xchg
xor
outsl
and
push
mov
je
shlb
adc
std
xchg
push
dec
ficoms
scas
mov
mov
insb
mov
pop
rcrb
jp
aad
xchg
jae
or
mov
fmul
and
mov
adc
orb
xchg
arpl
jae
mov
and
mov
pop
push
out
jne
add
insb
or
insl
gs
push
push
fs
mov
sbb
nop
out
sbb
pop
cli
mov
fwait
js
jge
in
repz
xchg
jl
repz
inc
pop
orl
imul
std
cwtl
gs
push
sbb
push
arpl
mov
movsl
int3
lret
add
stos
adc
inc
xor
adc
mov
ljmp
stos
bound
push
outsl
pop
xorb
sahf
mov
mov
outsb
mov
push
pop
pop
dec
bound
rclb
pop
pop
and
shrb
mov
xlat
std
nop
mov
in
cmp
and
push
mov
testb
add
and
jl
jno
test
and
sti
sti
pusha
fisttpll
movsb
cmp
cmpsl
xchg
dec
shll
jmp
aas
adc
lds
cmp
push
decb
inc
movd
call
aad
loope
nop
test
jno
or
imul
cmp
or
sbb
into
push
push
fdivs
in
lds
adc
jp
mov
fwait
inc
adc
mov
in
and
scas
jl
push
jmp
mov
sbb
cwtl
mov
lock
aas
outsb
lds
xchg
pop
div
rclb
jo
outsl
cmp
int3
xchg
idivb
in
push
xchg
inc
jnp
sbb
icebp
loopne
std
cmp
inc
stos
fs
adc
xchg
fcmove
into
xor
stos
pop
repz
jae
andb
test
push
push
sahf
je
inc
jnp
lahf
cmp
mov
ret
adc
inc
pop
and
xchg
jmp
mov
or
adc
loope
cmc
mov
shll
jmp
dec
leave
cmp
maskmovq
imull
push
xchg
lcall
es
in
icebp
andb
mov
jl
fdivrl
adc
jo
xchg
and
icebp
push
push
in
adc
mov
aad
bound
sub
out
negl
popf
mov
loope
fcmovbe
movsl
adc
iret
cmp
enter
loop
cmp
popf
sbb
pop
in
and
adc
cmpl
push
mov
add
andb
jg
sbb
sub
aas
mov
pop
movsb
das
imul
lret
fidivs
enter
outsb
repnz
mov
pop
xchg
xor
addr16
insb
adc
sub
push
movsb
fistpll
ds
jae
or
sub
fnstenv
fwait
add
mov
jmp
outsl
and
cmp
inc
nop
adc
loope
lahf
ss
ds
clc
addr16
fmuls
lret
ret
xor
imul
xor
push
sbb
mov
sub
dec
loopne
push
add
cmc
popa
lret
xchg
xchg
ljmp
sbb
fistpll
insl
cmp
in
jle
rcl
add
add
mov
jae
push
mov
stos
push
adc
popf
sahf
mov
dec
hlt
pop
push
lcall
psubsw
outsl
fsubs
int
sbb
jns
and
test
sbb
fsts
mov
jbe
lret
fcmovnb
add
int3
mov
cmp
ja
inc
outsl
fidivrl
loopne
push
test
xchg
fidivrl
lods
outsb
lods
imul
mov
pop
xor
sbb
popf
mov
repnz
adc
mov
adc
sbb
pop
imul
cltd
sub
mov
push
jge
nop
mov
cmpsb
xchg
or
xchg
test
int3
inc
inc
pop
popa
ss
pop
and
test
lods
jae
out
cwtl
imul
pop
mov
and
clc
pop
lock
jns
jle
cmpsb
mov
repz
ja
bound
into
add
mov
daa
and
mov
inc
xchg
imul
enter
repz
pushw
dec
xlat
jae
aad
les
pushf
sub
adc
mov
pusha
xor
out
repz
in
inc
cmp
ss
dec
cmpl
insl
loop
pop
push
je
xor
out
test
or
leave
push
fimull
xchg
push
dec
loopne
data16
mov
xchg
jbe
xor
push
loopne
movsb
out
or
mov
aas
mov
sbb
sub
mov
xchg
cmp
adc
xlat
imul
aaa
nop
xor
dec
test
sub
mov
das
xchg
mov
je
pop
inc
pop
popf
cmp
jne
add
jbe
dec
mov
addb
push
push
sbb
cmpsl
jp
jne
les
ds
adc
ds
inc
add
and
and
pop
mov
test
ljmp
push
in
inc
addr16
fmull
repz
icebp
mov
pop
daa
mov
jo
cld
leave
xor
or
outsl
in
cmpsl
out
sbb
jno
mov
movl
pop
fldenv
xchg
push
adc
mov
testb
push
dec
and
or
gs
popf
inc
cwtl
adc
outsl
mov
ret
jae
mov
push
cltd
pop
dec
mov
sti
data16
push
dec
xchg
je
out
jecxz
adc
sbb
pop
or
out
pusha
lar
pop
mov
outsl
ret
pop
sub
pop
mov
nop
pop
fcompl
cmp
jp
mov
fistpll
or
addl
mov
in
nop
push
mov
scas
add
xchg
jle
insb
xchg
lods
pop
mov
iret
std
push
repnz
fst
dec
sub
call
xor
sarb
mov
fbstp
jmp
les
out
fs
cld
loopne
cmp
lret
adc
lods
adc
int
rcl
jmp
pushf
dec
xor
add
mov
sub
stc
dec
repz
int3
pushl
add
fsubr
mov
iret
cmpsb
mov
aas
sbb
cmp
push
orl
in
adc
adc
bnd
sahf
add
cltd
pop
pop
mov
lds
sbb
imul
cs
mov
in
push
scas
xchg
jge
pop
fs
mov
mov
imul
pop
pop
xchg
sub
aam
inc
ds
or
or
cmp
shll
cmp
mov
sarb
cmpb
ss
jo
xor
xor
xor
into
imul
ss
and
out
jno
push
fildl
out
fadds
push
jb
mov
sbb
jo
add
add
or
dec
pop
leave
sbb
dec
sbb
stos
adc
push
pop
lret
ljmp
fchs
add
or
ror
nop
jbe
add
ret
outsb
lret
out
inc
inc
push
mov
and
clc
xchg
add
cmp
sub
into
or
add
enter
push
push
fisttpll
cld
cmp
jno
fldenv
or
cmp
push
idiv
ja
out
push
pop
test
aas
in
mov
or
out
mov
add
out
adc
dec
je
sbb
xchg
out
mov
pusha
dec
mov
mov
push
mov
mov
and
das
add
push
push
pusha
out
pop
xchg
mov
loope
nop
cmp
adc
jbe
inc
fs
xor
and
pop
xchg
ret
pop
divl
and
cmpsl
sbb
aad
jmp
cli
outsb
adcb
xchg
adc
push
xchg
add
sub
ds
dec
js
adc
addr16
fadds
xchg
xchg
xor
in
pop
jno
and
loop
mov
fldcw
or
pop
cs
lahf
lcall
dec
cmp
andl
es
inc
mov
bound
outsl
sub
inc
dec
mov
push
inc
iret
pop
imul
lods
ffreep
mov
cmc
jae
mov
cmp
push
jo
dec
jo
jl
inc
mov
pop
arpl
ljmp
mov
cmpsl
sub
dec
push
push
jns
jb,pn
loop
jbe,pn
outsb
aaa
aad
pop
pop
add
pop
repnz
and
jne
lock
fwait
pop
subl
pop
adc
and
jl
insl
jmp
scas
jne
cli
mov
ds
cbtw
pop
push
je
push
inc
mov
push
push
xorb
into
or
pop
mov
mov
popf
lods
jl
xchg
ret
push
imul
sbb
sub
out
xor
call
loop
lret
scas
rcl
lods
fcomi
fcomps
popa
cmp
push
addr16
pop
cmp
aam
push
sbb
xlat
jl
jbe
daa
xor
mov
adcb
in
test
push
add
sbb
out
mov
mov
nop
outsb
push
or
sub
lods
mov
jno
movsb
test
cld
sub
dec
and
fildl
stc
andb
sbb
pop
dec
jbe
fstpt
enter
imul
sbb
xor
sti
cmc
lods
and
push
in
push
outsl
aad
lock
mov
dec
jp
je
sbb
out
xchg
ljmp
pop
pop
cltd
scas
mov
inc
pop
jbe
int3
out
ds
movsb
add
pop
bound
aaa
sub
je
faddl
pop
push
jmp
shrl
ffree
mov
mov
xchg
icebp
pusha
repnz
cmpsb
or
lahf
jle
xchg
push
ret
fs
jb
int3
adc
popa
dec
push
xor
lods
inc
mov
mov
and
sub
rcrb
imul
jnp
lods
stos
es
call
mov
push
inc
sub
out
push
pop
jl
repnz
sub
push
mov
inc
push
outsl
adc
push
xor
or
mov
push
or
cmp
cwtl
insl
cld
add
dec
outsl
les
movb
jl
mov
mov
mov
lock
sti
mov
sub
sbb
pop
push
push
insl
pushl
push
cmp
fcompl
cmp
jb
cmp
subb
mov
adc
jnp
cmp
mov
fsubrl
push
xor
xchg
ljmp
sub
cmp
push
push
fwait
or
sbb
inc
out
lret
js
jns
movsb
jg
ret
sbb
pop
repz
xor
out
jne
add
repz
pop
mov
adc
xor
jp
cwtl
mov
aas
pop
jnp,pn
sbb
pop
xchg
imul
fcompl
ljmp
ss
cmp
cmpsb
loope
adc
jnp
sbb
sub
fwait
js
sub
icebp
or
or
shll
dec
lock
sub
cli
lret
loopne
incl
dec
lock
cs
iret
xchg
add
pushf
jo
add
inc
xor
int3
adc
inc
mul
jae
mov
imul
lock
pop
mov
stos
mov
fst
imul
and
xor
push
mov
sub
sbb
orb
iret
ss
movsb
mov
lahf
jg
ljmp
push
in
push
in
push
xor
mov
bound
push
pop
or
adc
mov
mov
mov
aam
mov
lea
jg
lock
and
adc
sub
cmpsb
lahf
mov
jne
mov
je
push
mov
fmull
imul
jmp
jg
test
mov
sub
out
push
inc
add
insb
js
pop
addr16
insb
rcl
push
sti
add
xchg
ljmp
rcll
stc
js
adc
pop
mov
pusha
adc
outsb
jnp
cmp
mov
cmc
pop
adc
daa
scas
arpl
data16
shlb
push
cltd
mov
adc
pop
pop
mov
cmp
lds
sub
pop
popl
mov
insl
js
insl
cltd
push
out
pop
shrb
and
push
add
inc
popf
sub
in
fdivrl
loope
adc
test
stc
movb
cmc
xor
test
lods
cli
lds
adc
sub
pushf
xchg
push
sub
mov
cmp
xor
dec
ljmp
fs
xchg
rcll
inc
shll
hlt
shlb
subb
pop
dec
mov
inc
mov
int
cs
sbb
pushf
pop
retw
xchg
bnd
jnp
push
jne
sub
outsb
jge
int
adc
xchg
lret
in
sbb
test
fwait
adc
fimuls
fstpl
nop
sbbb
dec
cli
pop
push
in
xchg
rol
inc
std
cmp
push
lods
lds
or
cmpsb
jne
inc
bswap
mov
jnp
xorl
push
sarl
sbb
push
mov
jge
unpckhps
aas
inc
jg
xchg
subb
xchg
adc
mov
cli
in
add
aas
mov
sti
adc
dec
or
fucomp
lea
sbb
or
adc
pop
repz
mov
arpl
mov
cmc
pop
jmp
jae
das
jb
mov
adc
xor
inc
lret
rcll
xor
and
fs
fst
pushf
xor
push
jp
mov
mov
mov
shrb
mov
insb
sbb
pusha
fadds
ds
mov
and
lret
stc
or
add
repz
jl
sbbl
inc
fld
shl
jge
cli
dec
sub
insl
cmp
sti
rclb
jle
pop
outsl
lock
test
push
int
push
xchg
popf
pop
imul
jp,pt
jne
rsm
mov
in
jae
pushf
fcmovb
mov
jno
push
lods
outsb
in
enter
aad
cmc
mov
push
cmp
test
mov
xor
and
pusha
xchg
push
arpl
movsb
iret
in
sub
sub
test
and
clc
shlb
lcall
mov
add
xlat
push
pushf
inc
pop
test
inc
pop
imul
bnd
lds
cwtl
pop
gs
cwtl
cmp
dec
jbe
shr
or
gs
ret
shlb
mov
scas
xor
mov
sub
orb
sbb
push
and
lcall
xchg
add
xchg
pop
fbld
testb
loopne
mov
dec
adc
call
in
sub
aam
push
and
scas
rol
cmc
inc
test
out
test
repz
dec
lcall
in
lahf
xor
je
ljmp
insb
cmp
jns
shrb
xchg
mov
lahf
xlat
int3
popa
pop
sub
scas
movsl
daa
loop
or
xchg
ror
aad
add
in
inc
neg
pop
mov
sub
fwait
shlb
mov
and
fldl2e
ret
xor
sub
xor
fcompl
adc
pop
add
hlt
add
dec
push
js
add
mov
sbb
aam
lcall
add
jmp
cmpsl
lods
sub
adc
jo
dec
xor
pushf
jo
cwtl
inc
xor
xchg
in
inc
sahf
add
sbb
ja
jg
push
pop
lret
or
in
cld
fwait
mov
xchg
cmpsb
test
mov
aad
cltd
or
and
jno
lea
xor
cltd
nop
sub
pop
push
cwtl
jp
mov
aaa
xor
mov
filds
dec
xor
rol
mov
enter
cmpl
jne
cmp
pushfw
push
shrl
subl
push
lret
or
and
pop
xor
adc
xor
pop
sbb
cmp
cli
test
sub
cmp
dec
xchg
push
lahf
lret
add
pop
mov
std
cltd
hlt
or
mov
out
ret
out
sub
ds
fdivrl
mov
add
sub
loopne
xchg
stos
push
sub
into
test
cmp
jo
xchg
push
cmp
popa
inc
jg
push
mov
aam
insb
mov
insl
xchg
pop
pop
xchg
loop
jnp
xchg
or
in
loope
popa
bound
loopne
jmp
movsl
and
jp
xchg
dec
push
xchg
inc
je
jns
fnstsw
push
shl
jne
subl
fs
fnsave
add
adc
or
cli
lods
mov
and
rcrb
xchg
mov
loope
pop
cmp
adc
xchg
stos
mov
hlt
adc
cli
add
rcrl
cld
xorb
cmp
test
movsl
andb
std
mov
xchg
std
mov
xor
movsb
mov
add
sahf
mov
pusha
fs
aad
jns
xchg
xchg
jb
ret
lret
xchg
xor
dec
push
out
sbb
out
push
mov
in
out
dec
in
xor
xchg
jecxz
sub
dec
add
rcrl
cltd
jg
jle
lods
xor
dec
xchg
add
push
leave
aad
shrb
dec
sbb
scas
icebp
je
stos
sbb
roll
dec
mov
into
test
push
push
jbe
add
mov
call
jnp
fs
bound
jbe
xchg
fildl
sub
jo
iret
pushf
or
in
pop
sub
ds
dec
jmp
js
pop
les
rcrl
hlt
cmp
popa
ficomps
lock
arpl
fimuls
sub
outsl
aas
sub
sub
insb
mov
xor
push
push
fs
cld
sar
mov
neg
cmp
xchg
aad
pop
mov
shl
aas
lret
sbb
ja
adc
iret
je
adc
sbbb
and
jo
xchg
cld
push
ljmp
or
xchg
jmp
loop
fiaddl
mov
sbb
adc
scas
inc
imul
jmp
fsubl
jae
cmp
push
fidivs
jecxz
rcrb
loop
fucomip
loopne
or
push
repz
lock
cld
mov
dec
and
jg
jne
jae
movsb
fdiv
scas
scas
cld
and
fs
imul
fldl
add
pop
mov
sub
jb
dec
arpl
adc
cmp
xor
data16
stc
pushf
push
sub
cmp
out
popf
ret
cmp
mov
mov
ss
jns
pop
push
mov
in
ss
gs
data16
push
xchg
ret
fildl
add
addr16
clc
mov
dec
jmp
fmull
lods
jbe
scas
ljmp
out
push
out
pop
int
inc
adc
fidivl
repnz
adc
mov
add
clc
out
cltd
push
ja
and
pop
jns
and
jle
clc
addr16
out
hlt
sarl
pushf
push
mov
shlb
xchg
test
push
jl
sub
out
mov
cmp
jmp
mov
outsl
cld
frstor
call
cli
inc
sbb
sub
xor
dec
ja
jo
sti
cmp
jle
stc
sahf
mov
js
or
inc
xor
jae
fcomp
in
xchg
mov
xor
or
mov
pushf
hlt
es
std
jb
xchg
inc
push
jmp
cmp
xor
repz
mov
dec
lret
clc
inc
jns
sbbb
xchg
mov
jp
jnp
into
sbb
inc
aad
addr16
rorb
adc
jge
xchg
popa
imul
ficompl
adc
and
push
push
imull
sbb
jmp
jns
inc
fists
out
cwtl
push
xchg
mov
rcrl
mov
int
es
iret
decb
mov
fisubl
dec
mov
lahf
xchg
inc
dec
xlat
mov
jmp
adc
mov
xchg
ret
push
cs
shll
stc
jb
mov
or
lock
pop
adc
xchg
dec
lods
data16
fnstsw
push
mov
cmp
jne
ljmp
mov
movsl
or
in
lcall
mov
sbb
stos
mov
call
dec
dec
lahf
lds
xchg
pop
cmp
lret
clc
pusha
and
sarb
pop
hlt
sub
push
imul
pop
out
push
and
xchg
lahf
sahf
xor
push
arpl
ret
and
fcompl
cmp
dec
outsl
out
pop
xchg
cmpsl
lahf
js
imul
enter
rolb
inc
add
jo
std
cmp
xor
jge
xchg
lds
jle
sti
and
mov
es
pop
push
stc
loopne
and
inc
aad
in
stos
sub
fsincos
cli
inc
aad
dec
adc
mov
push
jl
add
sbb
xor
shlb
mov
popa
xchg
ja
mov
xchg
clc
test
das
xor
inc
mov
xor
dec
adc
cmp
ss
inc
out
dec
dec
loopne
leave
xor
mov
out
jb
movsb
shll
add
cmp
lcall
sarb
test
fmuls
in
and
addb
push
mov
les
lahf
pusha
shl
popa
dec
imulb
sub
rolb
cmp
inc
jl
leave
rol
les
fsubr
adc
sbb
and
pop
sbbl
das
jl
out
loopne
loope
inc
pushf
xchg
jae
xor
sbbl
cmp
cli
mov
add
pop
cltd
je
inc
sti
xor
in
lcall
insl
fwait
mov
icebp
push
push
cmp
ret
push
in
sub
es
int3
mov
inc
cmpsb
js
push
or
iret
mov
xor
imul
scas
mov
dec
lahf
cmc
enter
cmp
mov
out
outsb
mov
mov
test
loopne
adc
movsl
movsb
mov
add
call
aad
mov
mov
push
je
loop
push
in
xchg
addr16
fsubp
push
and
shrl
addr16
test
inc
sbb
sub
and
icebp
add
add
mov
cmpsl
bnd
repz
jl
and
jne
pop
mov
int3
inc
shr
xchg
mov
jb
xchg
sti
pusha
sbb
mov
hlt
fwait
jmp
jb
cmp
add
dec
pcmpeqw
insb
hlt
jl
ds
sbbb
push
test
imul
cmovno
outsl
push
dec
jecxz
ljmp
ja
xor
ret
sbb
pusha
test
pop
jns
xor
mov
ljmp
pop
mov
jp
inc
and
xor
mov
and
ljmp
push
lds
js
ret
lret
pop
in
cmp
sub
sahf
bound
clc
cld
movsl
mov
xor
xlat
jg
shlb
mov
orb
stc
lret
cmpsb
push
push
add
outsb
aas
sbb
dec
mov
int
jg
aam
lret
fs
aam
inc
sub
and
xchg
and
mov
je
push
lret
xor
mov
aas
xchg
shlb
jl
ja
xlat
lock
sub
mov
xor
in
lret
imul
inc
add
sbb
jne
bound
inc
pushf
xor
jecxz
adc
fidivrs
mov
mov
sbb
mov
in
cmp
fimuls
jmp
pop
push
iret
pop
scas
push
stos
fiadds
dec
test
out
push
cmp
in
les
sub
jge
sarb
dec
jno
mov
aas
pop
lcall
jle
mov
adc
mov
jo
push
jecxz
scas
mov
subb
sub
jmp
mov
dec
cmp
fbstp
inc
pop
leave
inc
dec
pusha
sbb
hlt
das
push
fcmovne
lret
jno
adc
pop
cmpl
stos
mov
fidivl
repz
xor
jae
push
inc
imul
fcmovnbe
jmp
inc
loope
jg
adcb
stos
hlt
repz
pop
mulb
fisubl
push
fisubrl
jmp
mov
inc
or
and
ret
push
mov
pushf
mov
pop
imul
mov
adc
inc
loopne
add
mov
cmpl
aaa
mov
push
jge
lret
jecxz
pop
mov
int3
outsl
pop
iret
sbb
out
xchg
mov
push
push
mov
rol
outsb
push
in
pushf
cwtl
es
into
in
inc
lods
lods
sahf
insb
popa
jbe
mov
js
push
dec
dec
stos
inc
sbb
scas
and
pop
rcrl
enter
hlt
lret
push
ljmp
daa
jne
test
dec
sbb
sahf
movsl
jecxz
and
mov
and
repnz
dec
iret
das
cmpsl
mov
shll
daa
into
popf
aad
mov
and
xchg
sub
xchg
not
jo
push
dec
pop
inc
xchg
xchg
jno
sbb
fimuls
adc
jecxz
cwtl
in
pushf
push
fs
mov
fnstenv
adcb
loopne
xchg
idivl
addb
dec
cmp
je
cmp
into
daa
pushf
ret
xor
negb
fmull
outsl
jnp
jno
addr16
mov
dec
movsb
shrb
in
inc
in
imul
out
jg
aam
inc
xor
rorb
in
jmp
sbb
das
add
inc
fmuls
hlt
or
xchg
pop
jp
cltd
adcl
xchg
cmp
dec
popf
nop
enter
jmp
dec
bound
lods
call
call
sbbb
xor
jl
jmp
and
push
or
adc
inc
pop
lods
mov
dec
fcoml
mov
sbb
xor
sub
sub
sbb
ficoml
sarl
sbb
adc
add
jp
test
mov
cltd
fcmovnbe
bound
popf
mov
aam
out
repz
mov
or
aad
mov
mov
pop
xor
xchg
cmp
jnp
pushf
pop
sbb
pusha
lahf
lods
cmp
xchg
push
fisubs
rorb
pop
ds
push
mov
stc
sub
outsb
mov
fs
mov
mov
lds
gs
pop
adc
loopne
mov
jae
scas
out
rcll
jmp
inc
mov
jo
mov
xchg
fnsave
xor
fwait
rcrl
mov
jo
push
test
mov
pusha
add
cmp
sarb
loopne
push
jge
mov
xchg
loopne
cld
xor
fsubl
cwtl
dec
xor
vcvttss2usi
or
ja
ljmp
hlt
or
hlt
icebp
jno
daa
icebp
xor
dec
aam
mov
inc
aam
dec
mov
dec
test
arpl
ret
clc
xor
jnp
jae
mov
lret
or
push
sub
adc
mov
and
insb
orl
or
in
ja
ret
cmp
ss
ljmp
cmc
int
mov
mov
cmp
sub
aad
test
mov
inc
adc
pop
or
test
ljmp
lret
cmc
or
add
ljmp
dec
xchg
sahf
mov
fbld
jae
dec
stc
ljmp
mov
mov
or
xlat
sbb
stc
mov
in
cltd
subb
sub
fstl
ds
push
pop
add
xor
dec
jb
inc
mov
imul
rcll
pusha
dec
sub
xrelease
push
loop
jle
shrl
xchg
xlat
inc
push
cmp
fimull
mov
in
jp
stos
mov
or
loopne
and
jns
les
es
pop
hlt
pop
push
mov
mov
pop
and
jmp
cmp
adc
mov
jmp
or
xchg
push
or
lods
aas
arpl
ss
push
call
loope
dec
insl
movsb
mov
sarb
dec
push
mov
cmp
bnd
xor
rcrl
imul
pop
pop
in
js
imul
aam
movsl
or
ror
jmp
pusha
or
sub
add
xor
jle
rclb
mov
push
fidivrs
mov
sar
xchg
jmp
hlt
pusha
lret
add
lds
lods
mov
add
adc
push
adc
and
or
push
int
jbe
mov
or
shll
mov
std
out
jb
mov
or
pop
loop
dec
or
cld
bound
in
cmpsb
jns
mov
xchg
lret
out
push
jp
add
mov
addr16
dec
es
mov
loop
mov
les
dec
or
add
pop
in
out
xor
testb
inc
decl
push
jb
aas
push
lods
dec
inc
iret
sbb
test
sbb
jnp,pt
push
sar
ss
lds
cmp
lds
jmp
sahf
insl
cmc
loop
dec
idivl
lds
aad
stc
push
xor
test
xchg
xor
or
es
in
out
into
ret
and
rcl
sti
xchg
sbb
jae
xchg
mov
inc
adc
daa
push
sub
rorl
xchg
leave
sti
mov
movsb
sbb
jns
lds
pop
call
lods
pop
inc
les
into
sti
call
mov
xor
jmp
and
lods
jle
and
rcr
out
push
adc
ret
mov
inc
insl
movsl
or
aas
jns
into
mov
mov
stos
cs
fisubrs
mov
aad
insb
inc
sahf
gs
and
cmp
stos
iret
and
cmp
fcoml
int3
push
fsubp
mov
xchg
cmp
mov
push
jl
testb
jbe
pop
out
jne
jnp
enter
rolb
xchg
xchg
fwait
xor
jno
jle,pn
repnz
shl
neg
lcall
cmp
push
mov
or
aas
sbbl
movsb
mov
sbb
pop
xchg
punpckhdq
mov
stos
jb
loope
mov
pushf
pop
xor
aaa
dec
cmpb
add
fmull
cmp
and
fucom
cmp
in
sbb
mov
pop
fsub
test
add
imul
sbb
inc
jno
lahf
jo
or
in
mov
jge
push
pop
mov
or
inc
arpl
pop
lods
ljmp
xor
ds
mov
mov
scas
mov
dec
mov
mov
sbb
inc
pop
aam
push
jge
cmc
push
push
int
sbb
jmp
inc
adc
dec
mov
ror
aaa
aas
and
xchg
mov
pushf
or
xchg
mov
mov
mov
imul
fisubrl
xchg
push
ret
jo
adc
subl
mov
repz
mov
iret
daa
pop
mov
adc
pop
in
inc
loop,pn
js
add
sbb
and
fwait
push
std
leave
cwtl
div
loopne
dec
xchg
mov
add
jns
dec
inc
pop
cmpsl
lcall
cmp
push
jnp
test
mov
aad
or
push
cli
sti
gs
clc
adc
enter
inc
clc
pushf
push
mov
mov
cmp
cmp
pop
jmp
pop
push
dec
mov
iret
mov
mov
dec
pop
cmp
mov
lea
jmp
and
bound
getsec
stc
add
mov
loope
dec
pop
push
mov
mov
aam
mov
add
push
mov
mov
sbb
pop
movsl
push
sub
sbb
loop
shr
and
stos
cmpsb
loop
xchg
adc
push
mov
push
cmc
mov
dec
jmp
int
inc
clc
movsl
mov
sahf
cmp
inc
mov
ljmp
mov
gs
add
fisttps
ret
mov
jmp
cmc
stos
aaa
inc
out
pop
inc
test
sbb
jns
imul
lcall
jnp
cmp
ja
loop
loop
addb
cmpsl
push
fisubrl
pop
mov
lret
addr16
repz
test
mov
dec
in
je
jbe
stc
mov
xchg
or
sbb
pop
pop
mov
mov
add
movsl
fwait
call
sub
mov
out
pop
es
mov
push
lcall
cmc
mov
test
add
std
jl
push
pop
add
int
dec
xchg
int
push
inc
pminsw
mov
movsl
fstpl
scas
icebp
jbe
lret
mov
sub
shll
lcall
mov
adc
mov
hlt
les
and
or
into
mov
repnz
fbstp
dec
mov
icebp
ficompl
jl
shll
shrb
pop
outsb
xchg
dec
rolb
push
dec
ficomps
popa
cmp
dec
add
inc
push
imul
sbb
adc
xchg
dec
mov
imul
movb
icebp
push
bound
mov
push
mov
fdivs
jmp
sub
div
add
pop
xchg
cmp
ljmp
sub
aad
mov
pushf
fs
push
cld
sub
xchg
dec
stos
les
pop
imul
xchg
jl
mov
xor
or
and
mov
cmp
inc
sbbb
push
and
pop
xchg
cmpsb
dec
clc
out
mov
fstpl
pop
jnp
mov
sub
les
and
pusha
in
cmp
aad
xor
stc
scas
xor
stos
mov
inc
movl
inc
fidivrl
out
xor
push
movsb
dec
loope
arpl
adc
mov
lret
sub
add
mov
sti
pop
imul
sub
and
aas
jp
add
dec
fiaddl
pop
fs
pop
jae
outsl
cmp
add
aam
cmc
insl
pop
mov
mov
dec
int3
and
sub
imul
addr16
mov
loopne
push
push
pop
sbb
sbb
ret
dec
cld
ljmp
repz
xchg
adc
daa
mov
data16
shll
test
shrb
lret
adc
fs
xchg
lods
repnz
pop
daa
in
cmpsb
adc
inc
icebp
ret
data16
ja
mov
movsl
sti
and
aas
stos
mov
adc
shll
sbb
fbld
jmp
inc
aam
and
xor
stc
jecxz
or
adc
mov
imul
add
ss
sub
xor
rorl
adc
or
jb
jns
jne
sbb
mov
pop
outsb
pop
out
nop
popf
gs
repz
mov
adc
addr16
lcall
scas
loop
dec
std
xchg
add
push
inc
inc
out
repnz
mov
dec
jl
xor
inc
push
mov
cmpsl
fdivrl
lahf
push
jmp
lret
leave
sbb
in
sub
mov
adc
jp
ja
pop
imul
bound
dec
push
mov
lahf
sub
imul
jb
xor
push
cmc
stos
push
dec
lahf
mov
arpl
mov
jbe
and
jae
cmp
movl
or
adc
push
push
into
jne
cli
add
roll
xchg
cld
mov
or
lahf
mov
or
pop
pop
shrl
xchg
add
aas
xlat
push
jno
test
sbb
fdivrl
push
mov
mov
divl
icebp
divl
xchg
fbld
push
lea
js
nop
pop
jge
pop
stos
aas
out
fisttps
pop
and
mov
jbe
inc
repnz
mov
fnstenv
sub
and
push
xchg
in
mov
mov
shll
add
inc
lods
pop
fs
mov
push
out
cmp
jmp
out
push
rclb
jns
scas
sti
pop
dec
xchg
xchg
jo
add
inc
and
in
jmp
inc
mov
dec
jo
stc
fistpll
into
mov
jge
or
scas
stos
cmp
ljmp
mov
jecxz
imul
iret
sub
imul
xchg
ret
and
call
sbb
jmp
xor
call
inc
pusha
jl,pn
sti
sbb
pop
jae
nop
jae
xlat
jb
leave
mov
cwtl
mov
mulb
push
test
mov
mov
jle
xchg
cmp
xchg
outsb
jo
imull
sbb
leave
icebp
mov
dec
sbb
push
inc
je
sbb
and
push
mov
fcoms
jae
cwtl
and
sahf
xchg
ja
jl
push
mov
sbb
notl
decb
adc
shll
mov
xchg
dec
ljmp
add
nopl
xchg
mov
mov
in
aad
adc
dec
stos
add
leave
in
mov
pop
cli
mov
jb
lods
sti
pop
imul
lcall
jl
mov
in
sub
add
or
push
std
sub
add
inc
pop
sub
cmp
outsl
xchg
mov
push
pop
cmp
and
out
mov
ret
cmp
jecxz
jnp
jmp
iret
ljmp
lods
lds
push
or
aad
lods
push
ss
push
ja
mov
mov
call
or
jle
push
push
cmp
imul
sub
jns
adc
mov
test
ret
aaa
mov
hlt
adc
imul
add
icebp
mov
mov
mov
sbb
clc
clc
pop
pop
jmp
push
push
in
adcl
and
and
lock
xchg
mov
les
sbb
ficoms
lcall
les
push
or
outsb
scas
add
xchg
xchg
push
dec
mov
push
les
out
mov
xchg
jmp
and
inc
cmc
stc
in
imul
mov
jecxz
adc
ds
xor
repnz
jns
test
pop
es
ja
xchg
mov
and
leave
jns
leave
xchg
xor
mov
xchg
xor
das
cmpsb
xor
mov
pop
popa
jnp
arpl
push
sub
repz
and
cs
stc
ret
xor
push
cli
int3
orl
rol
imul
jg
lea
push
xchg
pop
push
push
fldln2
in
mov
pop
lock
shrb
and
push
mov
xchg
jb
ss
stos
int
int
es
xchg
mov
outsb
and
call
dec
sbb
mov
inc
je
sbb
hlt
mov
inc
pop
or
test
sti
gs
xor
gs
sahf
or
sub
adc
mov
sub
adc
cmp
cmc
je
xor
jg
mov
and
daa
aas
mov
jmp
leave
in
adc
xchg
movsb
xchg
fstpt
loope
dec
scas
je
rorb
mov
negb
or
dec
outsl
push
mov
mov
lods
ja
jnp
sub
cmpsb
scas
fisubrl
sub
mov
xchg
cmp
cltd
lret
fstl
out
fstpl
pop
fldl
xor
push
aam
insb
icebp
lcall
lds
popa
rorb
arpl
test
inc
jae
mov
popa
inc
insb
add
xor
aam
push
test
inc
sub
jno
test
xchg
lock
cmp
shlb
add
loope
add
roll
fbstp
dec
sbb
xor
mov
mov
scas
ret
mov
push
dec
cld
gs
cmp
popf
xor
jl
subb
sub
mov
sbb
mov
fiaddl
jp
scas
push
and
sahf
adc
or
mov
loop
xor
fs
fs
pop
test
test
aaa
mov
xor
lods
lahf
testl
out
test
adc
cmp
jle
ljmp
rcr
or
popa
pop
fdivr
fscale
xchg
scas
in
mov
cmp
mov
in
jge
dec
mov
cli
xlat
xchg
ret
stos
sbbb
test
and
dec
fldcw
sbb
jl
or
xchg
cli
test
pop
mov
rep
or
push
add
xchg
sbb
mov
inc
lea
data16
adc
mov
add
mov
dec
xchg
lock
push
popf
mov
pusha
mov
mov
idivb
and
push
mov
incb
insb
outsb
push
sub
xchg
mov
popa
inc
fmull
push
dec
mov
mov
int3
outsb
out
mov
sahf
int3
cmpsb
jle
sub
stos
cmp
fs
mov
sub
xor
pop
bswap
pop
dec
mov
dec
cltd
jno
mov
lds
arpl
mov
cs
xchg
aad
ret
mov
test
scas
cs
mov
push
fstl
sbb
dec
sbb
sbb
out
lea
ret
int3
jl
adc
dec
fs
inc
adc
sub
inc
pushf
xchg
inc
xchg
pop
dec
push
jb
and
aaa
shr
lds
aas
jb
movsb
jl
push
push
add
inc
mov
mov
arpl
xchg
sub
jle
lea
mov
aam
in
pop
ljmp
inc
in
addr16
enter
mov
shlb
mov
pop
mov
aas
push
fsincos
cwtl
rolb
push
xchg
shrb
sub
loope
fnstcw
and
adc
dec
popa
stos
push
fldl
add
hlt
pop
dec
inc
cs
lods
jle
xchg
out
push
mov
test
je
fiaddl
aam
stos
shrl
cmp
sub
ljmp
lret
inc
xor
push
push
push
stc
call
scas
cmpsb
mov
lods
sarl
or
cli
popf
jno
inc
cmp
inc
mov
into
mov
stos
mov
fcompl
negl
and
or
cld
scas
push
jl
shl
out
lea
in
pop
mov
adc
jb
femms
and
sti
roll
push
inc
add
incl
int3
pop
dec
dec
jl
inc
idiv
lret
sbb
pop
fsubl
mov
dec
mov
lahf
enter
ret
sahf
nop
into
jns
sub
and
mov
xor
and
pushf
decb
outsl
orl
adc
je
std
loopne
dec
jb
mov
ficoms
int3
cmp
out
lea
std
mov
shrl
mov
dec
push
adc
jo
push
push
and
push
popa
mov
add
fdivrl
pop
jmp
xchg
push
ds
dec
aam
jbe
jmp
push
mov
xchg
mov
xor
lahf
push
mov
hlt
mov
enter
mov
and
sbb
aaa
push
std
aaa
sub
xchg
repnz
mov
mov
fcmove
inc
push
std
in
subl
jo
nop
xor
jae
lret
push
movsb
filds
outsb
mov
xchg
rolb
mov
fimull
push
pop
call
lahf
jecxz
fwait
xchg
or
das
xchg
adc
mov
cmp
loop
lahf
inc
mov
xor
jmp
xchg
addr16
out
push
or
fdivrl
mulb
add
dec
dec
xlat
insl
fnsave
outsl
push
add
sbb
adc
push
mov
sbb
push
sbb
jl
pop
fs
pop
pop
cli
popa
pop
outsb
fdiv
shll
xchg
pop
clc
sub
bound
pop
sub
popa
xor
mov
or
cmc
cmpsb
mov
and
iret
inc
sub
test
movsb
jbe
ficomps
mov
fstps
jo
push
das
add
repz
mov
stos
das
outsl
cmp
shlb
push
dec
or
aaa
jnp
mov
loope
sbb
mov
jge
xorb
xor
flds
int3
sbb
mov
fcomip
dec
mov
fs
out
xor
sqrtps
ficoml
pop
pushf
loope
scas
sub
mov
jmp
mov
loopne
rcrb
add
lea
in
dec
loop
sbb
pop
push
push
aad
sub
adc
add
inc
mov
mov
inc
icebp
ljmp
dec
add
xchg
xor
into
add
icebp
mov
mov
das
cld
xchg
cmp
pop
jae
in
out
cmp
adc
mov
roll
xor
cli
push
jmp
xor
adc
daa
lock
xor
aaa
adc
aaa
stc
mov
cmpl
push
dec
xchg
ja
int3
jl
xchg
std
xor
cmp
ljmp
and
inc
push
push
xor
add
data16
jno
jmp
jg
push
pop
mov
imul
pusha
lahf
ljmp
outsl
adc
cmp
shlb
pop
mov
stc
jmp
or
jmp
mov
mov
push
mov
fildll
and
les
or
inc
fs
xchg
jmp
jmp
xor
jne
mov
mov
or
adc
mov
fs
push
jbe
aaa
iret
jo
push
adc
sbb
push
cs
pop
dec
mov
mov
adc
jle
std
stos
and
mov
mov
inc
jne
es
mov
push
adc
imul
pop
shlb
or
cwtl
sub
cmc
fwait
mov
pop
movsb
stos
xor
dec
pop
cmp
int
je
fsubrl
dec
das
xor
call
xchg
mov
jg
imul
mov
rorl
lds
dec
xchg
push
lret
and
adc
fildl
loope
ljmp
add
test
addr16
push
mov
addl
aas
test
pop
adc
xor
repz
push
mov
insl
push
arpl
in
or
push
test
and
bound
mov
mov
movsb
sbb
mov
rclb
dec
lods
lret
push
addb
cld
jb
roll
pop
pop
and
test
mov
mov
movsl
btc
cltd
push
repz
mov
mov
shrb
jmp
push
shlb
add
in
idivb
pop
orl
icebp
push
dec
push
ret
rorb
mov
pop
push
cli
push
jno
std
inc
int3
mov
sbb
lret
sahf
pop
mov
jb
push
mov
pop
jge
sbb
data16
cld
je
pop
ret
sub
shll
dec
daa
inc
jp
jnp
or
lods
push
faddl
ficoms
or
int
shll
xchg
pusha
test
call
or
dec
mov
dec
xchg
lods
imul
adc
jbe
and
aam
add
push
js
clc
xor
mov
xor
jle
scas
push
and
aaa
and
add
mov
mov
test
mov
push
cmp
lods
add
test
sbb
and
pop
int
ss
inc
mov
bound
repz
jo
sbb
popf
adcb
call
out
cmp
shr
out
pop
out
pop
pop
and
push
imul
ret
push
and
mov
cmp
or
or
ret
in
xor
xor
push
mov
push
pop
adc
fdiv
pop
adc
fisttpll
jge,pn
xor
jnp
cwtl
stos
xchg
shr
push
mulb
push
mull
mov
adc
in
mov
or
and
xchg
clc
jmp
and
jge
std
add
dec
aad
pop
or
std
sbb
lea
js
pop
sti
and
outsl
ss
mov
lret
xchg
loope
add
cmpsb
scas
mov
xchg
adc
adc
loope
push
js
mov
rcr
movb
jmp
loopne
mov
jl
rcrl
insb
adc
inc
ljmp
in
jmp
sub
and
stos
aas
mov
repnz
sbb
es
insl
out
xor
push
sub
js
pop
add
cmpl
mov
push
mov
cmp
mov
movsb
pop
test
jg
jge
push
es
fs
inc
andb
pusha
sub
push
push
push
fs
push
lea
rclb
sub
and
add
jo
sarl
pop
iret
or
push
pop
out
ja
stos
jo
xchg
xchg
paddw
cli
in
ja
fiaddl
lahf
inc
sahf
jecxz
mov
xchg
jmp
bnd
xor
jmp
mov
scas
cmp
imul
adc
sub
inc
dec
dec
jg
mov
dec
sub
xchg
lret
rorb
add
jns
daa
or
shrb
xor
inc
and
int
out
dec
push
imul
push
jmp
cmp
cmpsb
sub
push
jnp
jp
std
push
lods
and
ja
rolb
or
clc
in
add
data16
push
clc
xchg
add
inc
jns
and
add
jnp
jge
jno
fs
loope
lea
jg
push
lahf
imul
cmc
xor
data16
testb
sbb
push
rcll
mov
mov
mov
xor
cld
add
out
mov
gs
and
lcall
cmp
pop
cmp
add
int3
fs
adc
lcall
mov
push
fwait
mov
push
dec
xchg
repnz
adc
inc
lods
inc
sarl
ds
or
fptan
test
push
xchg
icebp
int3
push
pop
inc
lcall
insl
popf
push
mov
fstl
jp
adc
xchg
es
dec
outsb
js
mov
repnz
xchg
pop
or
dec
cwtl
lock
stos
pop
push
or
addb
cmp
and
pop
jbe
shrl
mov
xchg
test
daa
lcall
xor
popf
fiadds
jmp
fidivrl
stos
mov
mov
adc
gs
ds
dec
shll
subl
bound
shlb
and
ljmp
das
negb
cld
vmovntps
data16
inc
mov
adc
aaa
maxps
jmp
and
cmp
dec
pusha
negl
inc
aad
adc
imul
mov
scas
leave
aam
mul
sub
mov
push
xchg
rcrl
dec
sbb
jmp
xchg
mov
fimuls
xlat
jmp
aam
xlat
sbb
xor
sbb
cmpsb
test
popf
scas
sub
ljmp
jno
sbb
pop
insb
ljmp
sbb
pop
sbb
repz
addr16
push
jl
dec
imul
jle
lret
dec
daa
push
ljmp
fmuls
cvtpi2ps
popa
ss
or
rol
imul
or
inc
jl
push
insb
andl
jae
pop
ret
mov
push
scas
daa
cmp
fistpl
push
pop
cwtl
jmp
ja
mov
lcall
mov
aad
inc
pusha
mov
push
test
daa
fisubl
inc
decl
mov
cmc
jle
and
mov
push
xchg
int
lcall
in
xor
adc
inc
inc
iret
in
push
mov
leave
xchg
or
hlt
inc
cmpsb
int
mov
aas
inc
lcall
aam
in
repnz
mov
mov
inc
sub
xchg
adc
pop
nop
mov
fwait
mov
popf
mov
sahf
and
pusha
orl
jmp
mov
popf
xorb
mov
dec
push
xor
test
shl
les
inc
pop
sbb
popf
mov
ljmp
dec
mov
and
xor
jle
fs
test
test
jne
test
addr16
shlb
mov
push
loopne
push
add
adc
data16
outsl
jl
fisubl
cwtl
inc
cmpsl
aas
add
sarl
pop
cmp
in
movsl
adc
mov
mov
js
lods
or
insl
jbe
xlat
scas
mov
sbb
xor
xchg
ljmp
mov
fidivl
and
lea
adc
xor
add
dec
add
mov
xor
sbb
adc
clc
pop
push
call
mov
adc
pop
sbb
jno
add
int
sbb
data16
scas
pop
push
scas
xchg
xor
scas
sbb
sub
dec
xor
addr16
cld
call
or
das
adc
cmp
sub
pop
mov
lods
xchg
cmc
sarb
pop
aad
xchg
mov
jmp
cli
popf
ja
arpl
icebp
sbb
dec
je
add
cmp
cmp
xlat
dec
mov
cmp
or
jae
sub
xor
and
xchg
xorb
js
in
ss
es
inc
jecxz
loop
jecxz
pushf
mov
into
lds
jmp
outsl
mov
jno
add
cmp
jle,pn
and
aad
sbb
cli
leave
push
and
aam
int3
push
data16
lahf
cmp
sbb
pop
cmp
flds
stc
test
and
cld
insl
inc
xchg
mov
lret
in
in
jo
xor
mov
push
fs
jb
xor
lcall
test
sub
cmp
pop
loope
out
add
loopne
lret
arpl
cmpsl
xchg
dec
cmp
adc
mov
loopne
ljmp
out
ja
add
sub
mov
lahf
xor
adcb
xchg
sub
pop
sbb
lcall
jae
hlt
pop
pop
in
xchg
xor
insb
mov
xor
jbe
add
dec
push
arpl
andl
mov
shr
mov
icebp
loop
or
in
lcall
mov
push
pop
ss
mull
sub
pop
movsb
adc
push
fnsave
enter
lds
mov
test
jne
ja
xchg
or
push
in
lea
xchg
mov
lret
adc
aad
out
xchg
jp
mov
fcomps
sbb
pop
mov
outsb
add
mov
out
jl
cmpsb
test
outsl
loopne
mov
sti
or
sbb
rorb
ds
jge
or
je
jae
jnp
and
cmp
int
repz
dec
push
xor
mov
cmp
les
sub
ret
test
push
jl
or
add
test
push
xlat
jg
test
mov
fldenv
pop
mov
mov
iret
pop
push
inc
subb
cmpb
mov
adc
enter
out
divl
mov
cmp
pop
pop
popl
push
or
loope
sbb
mov
icebp
fisttpl
jno
daa
cmp
push
test
lods
mov
imul
mov
jmp
insl
sbb
xchg
popf
pop
aam
cwtl
ret
xchg
les
or
xor
aam
xor
nop
cs
fcoml
sbb
and
rorl
adc
mov
insb
icebp
dec
mov
std
xchg
test
call
add
sahf
mov
mov
ds
and
std
mov
xchg
ret
js
xlat
xchg
jg
clc
pop
xchg
sahf
pop
rolb
clc
icebp
int
fwait
sbb
mov
pop
shlb
ja
adc
xchg
pop
out
xor
sahf
push
jp
cmc
add
xor
clc
inc
mov
or
mov
push
shl
xchg
andl
test
jle
add
sbb
push
sbb
xorb
pop
jg
add
or
clc
idivl
jb
out
xchg
xchg
xchg
adc
aaa
shr
clc
fwait
sbb
xchg
inc
pop
std
lock
dec
aam
outsb
and
xchg
stos
cmp
xchg
or
sub
insl
mov
mov
data16
fs
and
repnz
or
inc
nop
fisttps
mov
mov
loope
ljmp
ja
outsb
push
adc
std
pop
jle
or
jbe
dec
in
cwtl
cli
insl
dec
mov
push
daa
lret
pop
negl
sbb
aas
ja
xor
test
xchg
movb
mov
adc
daa
mov
in
shlb
inc
mov
bound
int3
das
adc
call
sbb
cmc
xchg
xchg
daa
fistps
pop
insb
push
test
fcom
sbb
stos
ret
xor
std
push
cmc
cmpsl
stc
xchg
rcl
lret
aad
push
xor
push
xchg
adc
xchg
inc
jmp
dec
push
adc
inc
pop
cmpsl
call
gs
mov
cmp
or
push
mov
aaa
jbe
jb
sub
into
lret
xchg
sbb
adc
fdivrs
mov
sbb
jle
jg
lea
ficomps
cmp
cmp
add
mov
mov
pop
or
mov
mov
cwtl
cmc
add
enter
push
jno
xor
push
sti
in
testb
jmp
jmp
cmpsl
movsw
subl
loopne
cmp
sbb
imul
cmc
jnp
fsub
test
mov
xchg
add
mov
sti
sub
out
shr
not
out
data16
dec
ds
hlt
cmc
xchg
lret
adc
sti
sbbl
adc
ja
rol
adc
cmp
jns
xlat
in
movsl
inc
out
mov
fs
fwait
push
mov
pop
outsb
push
ss
lret
shlb
loopne
push
loop
enter
sbb
pop
bnd
testl
cmpb
mov
xchg
std
sub
mov
rcrl
mull
xor
push
and
push
arpl
dec
push
fcomip
jge
adc
andl
lock
xchg
lea
movb
out
jp
int
aam
repz
ds
iret
popa
mov
jae
dec
jnp
cs
sub
xchg
and
jmp
inc
lods
das
push
not
ret
or
push
fcoml
pop
jnp
sub
mov
pop
cmp
cmpsl
repnz
imul
adc
jle
lcall
mov
cmp
arpl
int
mov
pop
adcb
cmpb
fidivs
add
rcrl
stos
es
out
adc
outsb
mov
push
dec
int
and
mov
adc
js
jg
not
imul
cmpl
mov
sbb
push
sbb
aaa
das
jp
push
ljmp
sbb
mov
sbb
jnp
sub
aas
jp
dec
jno
lds
xor
jo
xchg
xor
sub
push
repz
ss
cs
les
outsb
test
or
cmp
pop
cmp
mov
js
or
lahf
stc
loop
std
cmp
in
sbb
xor
cmp
lret
sbb
in
sub
mov
jns
aad
adc
in
push
dec
xor
dec
mov
adc
mov
mov
pop
jbe
mov
aaa
mov
pop
sbb
mov
mov
test
jbe
or
lcall
cmc
mov
sbb
ds
cmp
jp
call
inc
popf
mov
ja
std
cmpsb
dec
xor
repz
mov
and
push
into
xchg
and
add
adc
xchg
fcmovne
jmp
xchg
dec
repz
or
jns
push
cwtl
daa
mov
insl
pop
add
cmp
pop
xchg
pop
mov
pop
adc
sbb
dec
stc
xchg
mov
pop
test
cltd
xchg
rcll
fldcw
fadds
insl
in
mov
mov
xchg
jl
jl
xchg
popf
xor
clc
add
adc
outsl
sub
mov
pop
cld
mov
xchg
rcl
bound
iret
sbb
lahf
cmp
cmpsl
insb
dec
mov
push
jne
xor
sub
dec
ds
imul
jecxz
adc
sbb
es
inc
xor
push
mov
imul
inc
push
jb
arpl
repnz
add
or
or
jb
inc
out
dec
daa
pop
jmp
outsb
push
aad
jg
mov
nopw
add
or
cmpsl
mov
and
stc
xor
mov
xchg
sbb
and
pop
jl
mov
aaa
movsl
and
jle
dec
in
rcrl
xchg
pusha
inc
mov
cmpsb
or
sub
cltd
jnp
mov
clc
add
lcall
mov
jns
ljmp
out
sbb
dec
xchg
mov
pop
add
shll
aad
or
fs
push
stos
pop
test
inc
jmp
arpl
dec
lock
addl
stos
fisubrl
push
add
cmp
rcll
sub
cs
sub
push
sub
es
adc
pop
out
xchg
xchg
mov
test
adcl
pop
in
push
jne
xchg
movsl
mov
insb
movsl
mov
push
aam
hlt
unpcklps
xchg
xor
sub
ret
jne
xchg
nop
sub
ret
sub
jecxz
clc
push
into
lahf
push
pushf
inc
xor
jns
or
or
add
push
fisubs
pop
dec
adc
dec
clc
sub
bound
jl
jge
mov
inc
fmul
fcoml
and
arpl
icebp
out
mov
iret
cli
push
cmp
cmp
mov
push
fs
sub
sbb
mov
shlb
sbb
test
icebp
lock
ljmp
add
xlat
fcoml
test
out
rcrb
push
mov
shll
inc
leave
jp
push
xchg
pop
insl
pop
mov
lock
push
lods
or
movsb
fldl
loopne
sbb
jnp
in
xchg
enter
sbb
addb
cmp
push
or
pop
cmp
sub
imul
cld
sub
outsb
test
jp
pop
inc
lahf
sbb
clc
outsl
in
inc
jbe
mov
dec
xchg
adc
movsb
aas
int
dec
lahf
add
sub
ret
idivb
xchg
shl
push
adc
jp
mov
adc
pop
push
inc
inc
add
jo
xchg
aad
mov
sbb
loopne
cmp
add
cmpsl
loop
fldt
arpl
dec
mov
inc
outsl
scas
mov
sub
xchg
lret
xchg
mov
add
hlt
sbb
loope
push
aam
cmp
pop
icebp
add
dec
out
jle
sbb
add
sub
add
ret
mov
push
cmc
in
pop
mov
xchg
sahf
cltd
outsb
cmp
sti
pop
cli
or
adc
icebp
dec
scas
mov
pusha
xchg
pop
mov
xor
push
dec
outsb
sub
dec
popa
sub
jns
or
sub
imul
leave
in
aad
pop
cmp
cmp
iret
cmp
ja
stos
and
or
xor
mov
xor
ret
test
sets
xlat
or
cmp
daa
nop
fildll
mov
idivb
pop
hlt
std
push
rol
shrb
cwtl
pop
movsl
adc
jbe
mov
push
subl
jmp
cmp
es
mov
sbb
jbe
movsl
mov
rclb
incb
xchg
and
divb
mov
movsb
mov
jmp
fcmovb
push
sub
stos
xchg
fucomi
inc
cld
add
aam
mov
stos
ss
mov
jp
jle
push
fsubrs
lods
subl
pop
jb
cmpsb
xor
fwait
jmp
int
sbb
sub
mov
cmp
cmp
push
jae
iret
add
mov
adc
and
dec
push
stc
popf
pop
xchg
stc
loope
repnz
scas
xchg
sbb
push
adcb
sub
sub
test
pop
adc
push
inc
addr16
outsl
ret
ret
push
jmp
pop
decb
xor
dec
mov
cwtl
ja
and
inc
pop
mov
cmpsl
loop
rol
popa
xchg
test
push
es
jp
out
fldenv
leave
adc
pop
repnz
sub
and
lods
fwait
lock
or
iret
sub
fdivrs
vpshlq
negb
sub
fs
ja
pop
dec
mov
ss
push
das
mov
adc
mov
mov
mulb
cmpsl
out
lret
mov
int
fcmovb
cmp
test
repnz
es
fcoms
ss
sub
pop
pop
lods
mov
inc
loop
test
cld
push
xchg
repz
add
insl
lcall
mov
insl
aad
sub
or
fdivr
and
int3
pop
mov
mov
fistps
jmp
add
imul
loop
and
mov
iret
outsl
fistps
add
mov
mov
push
leave
test
dec
mov
jne
ds
or
or
xchg
shlb
xchg
int3
std
test
pushf
cmpsl
scas
je
and
or
scas
jbe
dec
repz
arpl
push
adc
mov
cmc
mov
jle
scas
daa
mov
mov
negb
ss
cmp
std
cmp
jl
and
loopne
dec
in
cld
or
aad
test
push
gs
sub
xchg
cmpsb
aad
out
pop
push
add
movsb
mov
xor
dec
enter
xor
mov
mov
dec
scas
xchg
ja
outsl
cld
xchg
stos
xchg
push
mulb
adc
add
lock
ljmp
inc
mov
mov
je
call
sahf
in
int
aad
mov
fildll
pop
jmp
lahf
test
sub
or
std
inc
adc
push
mov
in
cmpl
sahf
insl
ds
add
cwtl
sti
insl
and
mov
adc
mov
or
js
std
daa
sbb
test
jecxz
pop
and
push
push
lea
fwait
xchg
es
jae
ljmp
adc
and
fcoms
loopne
xor
pop
insb
pop
out
out
stc
mov
loope
rcl
in
lock
sarl
mov
add
mov
inc
setnp
inc
movsb
add
and
js
aam
lret
cwtl
std
loope
scas
imul
fnstcw
xor
pusha
fsubrs
cmp
inc
cmpl
mov
lret
jle
mov
jl
pop
in
aas
sub
jns
call
pop
adc
dec
mov
fisubl
mov
push
pusha
scas
and
add
mov
enter
leave
push
flds
push
insl
test
jp
pop
lahf
sbb
or
push
inc
loope
rcrl
lods
mov
pop
shrb
jbe
xorb
pushf
mov
xor
mov
jns
pop
push
adc
or
ret
xor
stos
fdivrl
fwait
xor
int3
mov
mov
mov
cmp
hlt
cmp
fsubr
data16
or
clc
sub
flds
or
int
pop
jo
scas
ds
stos
rcrb
jns
rcrb
mov
sbb
in
jle
sti
mov
xor
jbe
cmp
jge
lret
jae
loope
add
sahf
sbbl
mov
push
lods
cmpb
sti
dec
insb
shll
cmp
cmpsb
xor
aad
cmp
pop
inc
jl
insl
popf
loope
adc
lds
sbb
sahf
xlat
fists
or
test
les
pop
fcomps
in
sahf
mov
test
push
das
pushf
js
inc
mov
imul
jg
loopne
push
push
ds
cli
inc
jno
es
inc
aas
and
xor
sbb
fdiv
sub
std
jecxz
fsubp
subl
loop
cmp
inc
dec
pop
push
test
jae
add
cs
sub
and
pop
loopne
add
lods
jp
fisttpl
jmp
sbb
mov
in
addb
mov
pusha
dec
and
push
daa
add
xbegin
sub
adc
push
ss
insl
mov
jb
inc
jp
out
mov
rol
cltd
and
paddq
inc
lahf
in
insl
adc
push
jne
out
pop
sub
test
mov
adc
cs
and
mov
xor
sbb
inc
outsb
lods
clc
test
aam
lods
stos
mov
sbb
loopne
push
pop
into
cli
insb
dec
lret
xchg
push
les
cmp
insb
in
fdivrl
xor
xor
scas
sti
or
lods
xlat
mov
xchg
xchg
jbe
in
push
pushw
mov
test
lcall
andb
sub
mov
call
fmul
lock
push
idivb
addb
aam
push
jmp
sbb
inc
ror
lret
fldl2t
dec
out
jl
outsl
mov
fstl
add
iret
mov
imul
mov
sub
aaa
jmp
sub
mov
inc
lcall
adc
adc
sbb
cmp
faddp
stos
leave
mov
jg
mov
xchg
xchg
cmpsb
push
xor
pop
pop
ss
int
aad
je
in
sbb
jmp
and
jg
or
movsb
scas
loope
add
cmp
test
push
xchg
in
jle
test
push
mov
push
pop
xor
jnp
test
ss
pop
call
adc
mov
and
sti
mov
jle
in
jo
inc
pop
testl
sbb
or
jmp
clc
push
sbb
xchg
push
mov
jns
pop
push
or
or
out
inc
mov
aas
cmc
sub
cmp
shll
push
sarb
ret
andb
pop
jg
stc
call
fsts
cmp
jmp
inc
je
iret
je
xchg
jg
and
repnz
push
ja
cmp
push
andl
mov
out
pop
stos
lods
rcl
fsincos
inc
xchg
and
sbb
or
test
fldz
mov
sub
sub
nop
push
data16
add
das
and
mov
or
or
sub
sub
jne
xchg
in
jecxz
xchg
jecxz
into
push
dec
fwait
ret
pop
add
add
mov
mov
outsb
sub
jl
cmp
jns
ret
or
push
daa
movsb
jg
std
mov
add
rcll
fcompl
stos
shl
xor
aaa
push
mov
les
add
sub
fwait
xor
mov
pop
cmpsl
jmp
ret
leave
xor
mov
aad
mov
mov
pop
ljmp
mov
push
adc
ljmp
cli
rcrb
jns
pushf
cmpl
je
movl
sbb
jne
outsb
rolb
ret
rcrb
lods
adc
mov
sub
sbb
orb
dec
sbbb
jne
pop
sbb
sub
ror
rolb
cmpsl
pop
out
mov
sbb
jp
dec
pop
xchg
push
jno
or
add
sarb
imul
xor
test
mov
lahf
nop
dec
popa
rcr
cltd
push
jmp
bound
pop
mov
mov
addr16
insb
mov
inc
scas
lcall
cmpsb
inc
cld
int3
and
mov
xor
aam
mov
rep
mov
fsub
cmp
dec
mov
sbb
pop
mov
inc
push
push
fdivrl
insb
inc
jecxz
mov
loop
pop
lock
out
cs
gs
and
mov
loop
mov
in
xchg
out
call
sub
shll
push
popa
pop
add
mov
jae
out
pop
add
mov
rcrb
bnd
hlt
xor
ret
push
xchg
daa
pop
push
push
xor
fs
mov
fcmovne
pop
push
faddp
push
adc
out
cwtl
mov
rorl
or
or
sbb
mov
cmp
sbbl
pop
jb
stc
sub
std
xchg
aas
jl
subl
fcomi
int3
lret
pop
xlat
or
adc
mov
or
pop
fistpl
lock
xchg
je
mov
add
pop
cltd
jg
icebp
loopne
xchg
subl
cltd
push
dec
test
mov
xor
leave
xlat
dec
insb
dec
push
inc
out
mov
lret
hlt
inc
data16
outsl
sub
sbb
iret
xchg
push
mov
inc
hlt
aas
aaa
jp
pop
out
gs
test
xor
xchg
loop
mov
shlb
ret
push
mov
lods
test
call
inc
jbe
aam
call
push
cltd
movsl
shlb
insb
std
push
or
out
stos
popf
cltd
sub
cli
and
ret
fwait
jecxz
imul
es
add
mov
jbe
fwait
jmp
in
mov
aaa
mov
inc
inc
notl
aaa
out
dec
and
or
push
imul
jb
addr16
add
push
mov
ljmp
or
pop
in
repz
adc
shl
imull
mov
inc
dec
testb
xchg
call
cmp
cmp
aas
lret
push
fldcw
inc
popa
adc
pop
hlt
push
shr
mov
popf
ficomps
ja
daa
pop
mov
mov
jl
push
ficomps
enter
aad
and
jbe
mov
push
push
push
jno
loop
cmp
cmp
adcb
lret
addr16
push
je
sub
aad
repz
lcall
jecxz
or
sbb
or
shr
lcall
inc
pop
movsb
int3
icebp
or
mov
adc
jnp
popa
jg
pop
push
push
push
dec
sahf
mov
movb
rolb
jae
adc
fisttpl
call
dec
push
lods
nop
sar
mov
sub
jg
mov
hlt
cld
scas
cld
mov
mov
pusha
dec
leave
lret
sub
or
adc
sub
or
or
into
cmp
or
or
insb
jp
cwtl
pop
dec
sbb
fnstcw
dec
popa
cwtl
cmp
inc
and
in
push
and
jl
and
loope
in
cmpsb
inc
pop
jbe
or
xor
movsl
pmaddwd
test
shrl
clc
pop
test
inc
cmpsb
dec
push
imul
sahf
out
jle
call
jo
sbb
xor
xchg
push
mov
mov
push
and
and
movaps
fidivrs
pushf
push
or
cmc
mov
gs
and
cli
push
xchg
in
popf
sbb
mov
std
and
pusha
sub
pushf
pop
es
and
and
jns
mov
fisubl
not
pop
adc
lock
dec
or
call
sbb
js
xchg
lods
add
push
inc
push
xor
inc
stos
cld
xor
lret
std
push
inc
mov
mov
adc
add
cltd
jmp
sub
inc
jl
jns
sarl
and
mov
hlt
jg
mov
cmpsl
xlat
add
add
xor
dec
out
push
dec
js
dec
cwtl
mov
push
mov
je
popl
hlt
test
and
out
jge
xchg
cmc
dec
movsb
and
ss
mov
nop
or
cld
jle
dec
arpl
ss
ljmp
inc
push
in
gs
std
outsb
xchg
jne
mov
xorb
jae
les
or
inc
movsl
mov
push
add
pushf
push
jle
int
jne
push
sub
pushf
cltd
sbbb
adc
mov
jmp
mov
in
dec
mov
xor
or
lret
jno
movsl
dec
out
pop
pop
cld
jne
fisubl
dec
mov
mov
dec
subl
cmp
bound
mov
mov
aam
xchg
ljmp
xchg
xor
lea
cwtl
aaa
lret
mov
cld
xchg
pop
aam
or
insl
adc
or
mov
fidivs
out
cmp
insb
push
add
sti
jp
shlb
movsb
aas
test
loop
outsl
sub
mov
adcb
jl
dec
movsl
cld
jle
fildll
xchg
sub
je
inc
dec
adc
cmp
cmp
jmp
push
fldcw
mov
jg
mov
fwait
xchg
xchg
scas
push
dec
int
mov
mov
fnstsw
sbb
cmp
or
cmpsl
stos
dec
rcrb
sub
dec
push
scas
data16
add
adc
dec
push
das
inc
lods
nop
shrl
popa
jbe
dec
out
cmpsl
in
stc
enter
daa
mov
sub
das
mov
dec
fcomi
adc
xor
xor
mov
sahf
jns
lcall
clc
aaa
jl
int3
shll
push
hlt
or
mov
mov
aas
pop
int
push
mov
js
xchg
pushf
lods
test
sbbl
jae
or
repnz
out
push
jbe
aas
in
rcll
and
add
fisubl
fsubr
xchg
aam
lods
xchg
test
or
jo
mov
int
mov
push
lret
and
lahf
das
fldl
dec
ffreep
mov
mov
sahf
sub
int
test
xchg
push
add
push
lds
jle
xor
mov
ret
insl
xchg
out
nop
sub
outsl
jmp
sub
int3
push
push
test
fs
mov
icebp
jbe
jns
xchg
dec
pop
lcall
sub
mov
leave
addr16
shll
testb
orb
xor
cltd
mov
cmpsb
dec
mov
push
push
cmpsl
inc
daa
popa
aam
es
mov
xor
pushl
push
rcll
aad
fldt
jge
out
sbb
stos
loopne
sbb
jecxz
stos
adc
jns
nop
dec
std
or
adcb
pop
loopne
lahf
lea
in
in
adc
xor
shrl
out
imul
leave
jne
push
stc
fs
xchg
xlat
push
loopne
cs
jg
pushf
cmp
fnstcw
lahf
in
sub
sti
insb
inc
and
mov
xor
jmp
push
jp
incl
insb
push
mov
add
mov
xor
jne
stos
int3
dec
xor
adc
adc
fldenv
push
inc
add
scas
pop
fsts
pushf
add
aam
loopne
jmp
stos
add
lods
stos
adc
mov
out
dec
mov
or
jl
add
dec
cmp
jno
pop
xchg
xor
sahf
ficoms
pop
test
jge
arpl
hlt
lds
mov
cmp
int3
push
in
hlt
push
inc
lret
in
inc
push
mov
cmpsb
sti
mov
ss
mov
hlt
ss
hlt
inc
mov
pop
or
inc
push
aam
sbb
add
push
sbb
insb
lea
lea
pop
mov
loope
sbb
inc
xor
loop
mov
adc
cmp
sbb
bound
mov
and
aas
aaa
bnd
pop
sahf
outsb
xor
imul
sarb
sar
pop
je
mov
inc
dec
call
push
jno
or
and
mov
insl
mov
repz
inc
pop
outsb
or
std
push
shll
mov
jecxz
mov
inc
pop
adc
or
sub
dec
jbe
ja
fsubs
sbb
mov
mov
xchg
mov
loop
mov
sub
adc
fdivl
imul
sbb
test
xchg
push
inc
std
push
arpl
mov
or
sub
rolb
out
stos
lods
test
xchg
jmp
cld
or
xchg
mov
data16
pop
les
or
fidivrs
inc
pop
test
add
out
in
enter
jecxz
or
mov
lcall
sub
lods
jb
int3
popa
in
jne
scas
in
jecxz
cmp
iret
xor
mov
movsl
jg
aam
pop
jae
cmpsl
xor
mov
in
popa
add
addl
sub
pushf
pusha
xchg
xlat
fcomip
test
jl
andnps
xor
ja
fidivs
popf
mov
fmuls
movsb
xor
adc
iret
aad
inc
xchg
je
inc
mov
pop
mov
aam
lcall
inc
dec
fwait
xchg
movsb
xchg
hlt
pop
mov
push
push
das
jecxz
test
mov
mov
jmp
test
imul
fwait
test
js
mov
and
and
jmp
into
test
insb
push
test
in
mov
and
std
push
mov
cmp
icebp
pop
xchg
jbe
loopne
js
push
icebp
popf
sub
cmc
cmp
mov
shll
cmp
and
adc
rclb
xor
sahf
mov
popf
mov
das
loop
jb
pusha
pusha
cmp
insb
xor
xor
lods
out
outsl
stos
cmp
loope
scas
mov
pop
cli
lds
nop
test
add
adc
sbb
xor
adc
adc
or
push
xor
jne
or
adc
cmp
mov
outsb
mov
jl
jle
orl
add
sbb
push
push
jl
test
cmp
inc
std
push
addl
dec
in
push
dec
ficoml
js
push
push
adc
and
outsb
add
aaa
push
and
mov
jno
mov
dec
lahf
push
jns
sub
pop
jae
int
mov
mov
lahf
jo
pop
mov
pop
inc
xchg
lahf
fs
lods
lds
repnz
mov
nop
adc
sbb
out
mov
out
add
aam
or
push
sbb
mov
push
dec
shll
mov
jmp
ss
mov
inc
sti
js
xchg
xchg
pushf
fdivrl
push
outsb
dec
push
sbb
out
lcall
xchg
je
shlb
stos
int
mov
xor
mov
sub
mov
or
mov
pop
popa
xchg
push
out
mov
lds
loope
dec
and
ret
cmp
loopne
pop
pop
lret
das
mov
out
xchg
xchg
jge
lcall
in
xor
cmp
inc
and
fsubrp
insl
ss
cmp
jmp
loope
and
cmp
mov
and
jb
xchg
mov
mov
jnp
inc
inc
xchg
ret
push
movsl
push
sub
call
xchg
lret
inc
sarb
aas
rcrb
cltd
pop
movsl
mov
xchg
push
mov
push
lcall
lahf
xchg
dec
in
imul
lods
ds
xor
loop
and
std
nop
push
pop
inc
ret
jmp
decb
insl
jb
mov
pushf
add
pusha
push
and
sbb
jno
push
lds
mov
or
cmp
insl
push
adc
lods
pop
inc
jecxz
xor
lcall
enter
jecxz
movsb
in
inc
icebp
ret
faddl
mov
imulb
div
jle
mov
sub
sahf
add
mul
jnp
sahf
push
sarb
enter
cmp
imul
mov
inc
mov
lods
push
xor
std
mov
mov
pop
sub
jmp
pop
cmp
dec
xlat
fildl
xor
sub
lea
cli
push
jle
lods
dec
xor
sub
movsl
dec
xor
add
or
out
mov
adc
test
add
mov
sub
mov
stos
mov
mov
shlb
mov
or
push
fs
push
adc
cld
aaa
testb
add
mov
dec
mov
sbb
pop
lahf
jle
loop
sbb
xchg
dec
jge
enter
sbb
sbb
push
fs
mov
mov
sub
inc
cltd
fiadds
mov
jno
in
jne
rcl
mov
mov
mov
insb
shrb
mov
xchg
inc
adc
pop
ret
scas
es
data16
xchg
movsb
test
imul
xchg
adc
inc
jne
fildll
pushl
dec
mov
xor
and
cmpsl
xlat
mov
mov
mov
xor
je
fwait
and
dec
mov
dec
push
add
pop
dec
hlt
notb
jns
dec
andb
mov
addr16
pop
mov
roll
push
xor
push
loop
xlat
fiadds
inc
xor
sbb
xor
sbb
in
repz
push
lahf
lea
dec
or
jbe
inc
cmp
mov
cmp
insl
repnz
or
cmc
scas
lea
cmp
add
insb
insb
cli
loope
jecxz
cmpsl
scas
test
jg
pushf
insw
mov
and
fwait
je
mov
cs
mov
mov
bound
call
xchg
push
lret
cwtl
andl
ds
pop
jno
mov
les
dec
in
jbe
jmp
xor
mov
and
mov
mov
std
pop
xchg
aad
pop
jmp
mov
leave
or
xor
mov
adc
mov
out
mov
dec
leave
cmp
and
push
das
insl
out
addl
mov
fnstenv
sbb
sub
cmp
mov
out
xchg
xchg
mov
adc
pop
shll
jl
jo
lahf
lock
out
cmp
jecxz
mov
sub
fadds
mov
and
mov
mov
jno
bound
and
cmp
imul
inc
mov
in
adcl
adc
jmp
push
inc
ror
adc
pusha
mov
cwtl
mov
pop
stos
pop
xchg
pop
or
out
inc
decb
ret
and
ljmp
addr16
in
std
jg
mov
mov
jnp
cli
add
lds
add
hlt
or
imulb
or
out
pop
xchg
shrl
sub
and
icebp
ljmp
mov
adc
in
aas
lcall
fwait
or
notb
imul
mov
sbb
sbb
cmp
cmp
outsb
outsb
add
lods
and
inc
add
xlat
into
clc
xor
pop
popf
sbbl
sbb
pop
pop
mov
insl
jne
xchg
push
mov
jle
div
out
into
jns
jae
dec
lods
jl
cwtl
in
mov
jne
cltd
mov
addr16
imul
cmpsl
aaa
movsl
test
call
pop
inc
shll
mov
data16
push
mov
test
es
push
push
and
cmp
inc
mov
jo
jl
inc
push
in
sub
push
sbb
sbb
mov
sub
or
push
sarl
incl
and
and
aas
push
adc
push
lret
fistpl
inc
loopne
loope
adcb
push
cmpb
cmp
sub
jae
test
add
nop
imul
sub
or
iret
data16
test
adc
daa
stc
cld
adc
adc
pop
subl
lods
scas
cmp
aad
mov
xchg
mov
leave
inc
lea
pushf
insb
jmp
dec
or
adc
aas
mov
dec
fcoml
stos
lret
loopne
aas
xchg
and
fldcw
es
in
mov
sbb
push
lret
mov
ret
lret
je
outsb
test
mov
and
xor
mov
je
testb
in
mov
mov
xchg
rolb
pop
ret
cltd
inc
rcl
out
pop
clc
into
inc
stos
mov
lahf
je
jmp
insl
dec
and
dec
dec
push
push
in
mov
and
in
stos
inc
cltd
pop
rolw
mov
xchg
pop
sub
clc
cltd
cli
neg
outsl
test
xchg
in
arpl
mov
xchg
inc
popa
imul
loope
sbb
push
stos
mov
cmp
or
mov
outsl
and
and
jg
cmpl
cmpsb
mov
xchg
inc
cmpsb
fisttpl
cli
pop
jne
mull
mov
sbb
sub
fwait
add
xchg
dec
test
lods
fistps
inc
aam
jno
fimull
push
xchg
leave
xchg
jmp
cwtl
pop
inc
les
mov
cltd
xchg
fs
ds
imul
fwait
mov
cmpsb
xchg
mov
add
outsl
cld
mov
add
sbb
jne
mov
out
ss
xchg
push
adc
test
add
mov
sub
jae
imul
jmp
faddl
pop
pop
inc
jnp
inc
daa
int3
in
hlt
adc
jle
cld
out
mov
fwait
jmp
in
insl
fwait
mov
dec
add
lret
test
scas
cmp
andl
aam
jo
sar
push
cmp
call
in
sbb
fdiv
xchg
loopne
mov
or
mov
push
mov
pop
insb
adc
adc
das
inc
stos
ficoms
cmp
mov
shl
sub
and
loope
mov
push
or
je
dec
sbb
lret
iret
repz
bnd
mov
pushf
lods
inc
pop
icebp
test
mov
sub
cmp
sbb
pop
push
mov
imul
jl
cmpsb
xchg
add
daa
mov
adc
lcall
mov
shlb
sub
fnstsw
aaa
xor
shll
rorl
test
pop
cmp
xlat
or
mov
ss
sub
inc
or
in
mov
test
sub
lahf
add
int
insb
nop
mov
into
push
in
push
and
push
mul
jmp
push
test
stos
xchg
cmpsb
inc
icebp
pop
mov
inc
into
or
aad
sub
out
aas
mov
lret
dec
shlb
in
aam
jo
aam
sti
test
jo
sti
jg
pop
inc
fsubrs
cmpsb
or
jg
std
jnp
je
push
shlb
sbb
sti
imul
cltd
decl
mov
leave
addr16
lods
cmc
push
and
cs
cmp
push
or
mov
xor
sbb
jl
inc
mov
and
stos
push
or
cmp
sub
push
xchg
loope
movsl
stc
imull
mov
jge
xchg
dec
ss
cli
mulb
pop
push
mov
xchg
pop
js
push
xchg
pop
cmp
test
loope
pop
in
dec
jmp
cld
lock
push
in
jge
mov
mov
push
fistl
cmp
push
daa
cli
pop
rcrl
cmpsb
jo
xchg
sbb
xchg
scas
ret
pop
inc
stos
adcb
push
xchg
jge
mov
push
cwtl
sbb
sub
push
or
jno
inc
ljmp
add
into
jo
jmp
mov
popf
mov
jae
cmp
jecxz
and
xchg
cli
mov
das
jle
mov
mov
push
cmpsl
mov
add
lahf
mov
lcall
jns
push
cwtl
scas
test
dec
daa
mov
mov
sbb
and
mov
arpl
sbb
and
add
inc
xchg
and
adc
sbb
push
outsb
and
pop
jno
add
and
movsb
aam
call
or
xchg
cmp
jne
loop
int
dec
mov
sub
lea
in
fidivrl
fmull
adc
lret
pop
lret
xchg
popf
push
push
repz
jo
xor
mov
inc
xchg
ret
dec
cmp
and
ret
js
xor
les
test
xor
sbb
and
push
int3
lock
adc
or
xor
mov
sbb
test
pop
xchg
xor
jmp
jecxz
mov
mov
or
push
jns
test
dec
fsubs
repnz
sub
jb
arpl
cli
adc
in
push
addl
aam
lcall
aad
daa
mov
sti
icebp
jg
aaa
aaa
cmp
mov
inc
test
daa
xchg
repz
rolb
inc
out
movsb
sti
lds
add
nop
jmp
xlat
lret
aaa
and
inc
out
cmp
xchg
ljmp
test
lock
mov
loop
mov
movsb
scas
mov
push
push
out
mov
imul
lcall
mov
imul
push
std
and
mov
cltd
lock
or
in
fidivrl
outsl
and
int3
dec
repnz
xchg
xor
adcb
and
mov
lea
push
cmp
aas
fildll
inc
fs
xor
lods
stos
sbb
pop
jb
jl
fstpt
sti
jmp
jecxz
push
rorb
jb
mov
scas
mov
pop
mov
ret
xchg
cmpsb
ret
xor
test
fstl
or
push
lock
adc
jle
lock
fcomp
int3
shrl
jg
fisubrs
sbb
lds
test
jecxz
sub
push
jns
hlt
dec
ja
repnz
pop
jno
lret
bound
adc
adc
inc
cmp
cmp
inc
mov
push
imul
pop
out
mov
pusha
es
pop
push
xchg
jmp
pop
shl
xchg
jno
cltd
fistpl
lds
push
in
cmp
outsb
push
sub
imul
fistpll
push
mov
mov
push
jmp
sub
pop
sub
movsb
dec
fst
adc
adc
int
pop
sub
or
pop
lds
insb
mull
jl
stos
ja
mov
push
loopne
repnz
and
in
xlat
ljmp
insb
std
inc
xchg
mov
and
mov
sub
fisubl
pop
mov
scas
and
and
arpl
leave
xor
dec
mov
push
push
dec
sub
cmpsl
frstor
adc
jnp
bndstx
shl
ds
ds
dec
dec
xchg
xchg
push
popf
sub
xlat
cld
lea
jno
adc
sub
into
in
out
mov
fs
adc
out
sbb
pop
sub
es
xchg
jb
dec
pop
mov
cmp
fadds
out
popa
pop
aad
sbb
push
in
popf
xor
xchg
sub
or
inc
adc
test
test
adcb
cwtl
ja
cli
jo
mov
dec
pop
lahf
scas
jnp
adc
jo
inc
pop
enter
adcb
aam
push
inc
rorb
inc
jp
aas
and
gs
add
jnp
xor
mull
xor
jp
addb
jnp
add
lock
push
inc
out
fldl
mov
or
or
xor
ficompl
jnp
push
push
add
popf
ja
lock
add
test
xchg
mov
jmp
dec
sti
mov
shld
lods
adc
mov
lods
iret
pusha
mov
loope
mov
cmp
or
xor
add
mov
popa
dec
lcall
xchg
push
sbb
icebp
mov
inc
jecxz
add
mov
add
scas
stos
shrb
dec
in
scas
fldenv
ljmp
and
divl
inc
in
movsl
cltd
push
jb
cltd
push
in
in
dec
jg
imul
cld
in
inc
push
xchg
aad
shl
dec
mov
pop
mov
test
dec
mov
mov
fsubp
mov
push
lea
xchg
jbe
pop
aam
js
ds
jne
shr
jns
add
int3
and
sti
loopne
push
jnp
push
js
js
pop
mov
pop
cs
push
mov
mov
lret
lahf
sbb
iret
mov
cmpsl
or
mov
std
les
add
jp
out
lahf
fnstsw
push
jmp
stos
mov
dec
sub
add
adcb
aam
ja
jno
ja
sub
push
xchg
and
inc
int
mov
jmp
jmp
jns
mov
or
lret
dec
sub
xchg
cmp
or
test
xchg
sbb
ror
and
sub
and
divb
adc
push
cmp
das
and
stc
xchg
lret
mov
add
mov
or
subb
push
out
outsb
jne
mov
gs
mov
mov
fwait
jae
mov
dec
adc
les
jmp
push
fldcw
sbb
jp
pop
cmp
lret
idivl
cmp
mov
dec
out
push
xchg
dec
push
loopne
insb
and
daa
lret
lret
mov
mov
dec
add
mov
and
push
aas
pop
and
cmp
jmp
xchg
ret
loopne
setno
dec
dec
js
cmp
xorb
xchg
ret
sub
lock
fbstp
gs
sub
stos
push
adc
fiadds
incb
and
add
lods
add
dec
cwtl
loop
push
xor
push
shll
xchg
mov
insl
dec
aad
xor
sub
mov
fimuls
xchg
seto
sbb
stc
out
sub
clc
inc
mov
nop
pop
sbb
xchg
mov
pushf
xor
sbb
lea
flds
lret
sbb
aam
push
inc
mov
aas
pop
add
mov
jg
adc
sub
sbb
repnz
loop
fcoml
dec
testl
jle
aad
jmp
call
pop
or
pop
aaa
inc
and
mov
jle
daa
test
mov
cs
repnz
insb
inc
pop
pop
push
les
rcrb
mov
xchg
out
pop
sub
sub
mov
mov
decb
and
cmpsl
or
repz
sbb
pushf
test
xchg
ja
or
and
lods
xor
cs
std
push
adc
xor
pushf
std
push
pop
add
inc
imul
push
cmp
mov
mov
mov
or
mov
jno
mov
jl
jne
push
lods
popf
filds
stos
cmp
out
sub
cmp
test
jbe
push
mov
sub
dec
in
cmp
jns
dec
push
orl
fdivr
into
imul
mov
jb
jmp
xchg
fisttpl
mov
dec
inc
add
jmp
jge
popa
pusha
lret
cmp
in
mov
and
lahf
daa
arpl
mov
popf
cmp
roll
stos
pop
or
repnz
in
jbe
jge
movsb
inc
cltd
jge
stos
push
stos
push
int
cs
mov
je
movsb
mov
dec
mov
push
jo
mov
test
cmp
in
pop
daa
xchg
xchg
aas
into
push
xchg
cmpsb
test
xor
and
jp
xlat
cmp
jle
mov
shl
dec
dec
cmp
sarl
mov
push
imul
jns
lea
or
dec
mov
std
decl
fdivrl
sbb
and
fdivr
cld
addr16
sahf
jg
lock
arpl
sub
sub
aaa
std
mov
xor
mov
pop
xchg
adc
cli
jmp
shll
bnd
loopne
jns
stc
bound
cmpsl
dec
and
pop
mov
xlat
lods
cmpsl
cmp
movsb
or
subl
icebp
xor
shlb
in
add
idiv
inc
sbb
bound
sarb
mov
add
bound
mov
push
insb
lret
sub
or
add
mov
sub
and
bound
push
call
sub
nop
in
cmp
imul
aas
xchg
mov
bound
arpl
and
cltd
and
rclb
lods
test
ss
enter
clc
ficomps
cmpsb
ficoml
cmp
lea
cmp
jne
jb
dec
or
mov
sahf
sub
idivb
hlt
or
and
jae
push
and
or
sbb
pop
xor
push
push
mov
mov
adc
test
push
push
out
ja
lods
into
and
sbb
xchg
push
xor
lret
pop
push
jae
repz
ret
das
sub
mov
push
sbb
inc
rol
incl
sub
call
mov
adcl
mov
pop
pop
cld
sub
lcall
adc
sbb
daa
fistpll
cmp
inc
adc
pop
inc
mov
jge
into
loope
lods
xor
cs
in
out
jb
ja
xchg
scas
jmp
ror
orl
sti
loopne
xchg
fidivs
rclb
mov
xor
jne
insb
sbb
mov
out
out
test
notl
mov
xchg
arpl
lahf
mov
jmp
fs
jmp
mov
fadds
std
cmp
xchg
pushl
pminsw
cld
lcall
adc
push
call
mov
in
daa
lahf
aas
shl
ds
orl
js
or
sbb
cmc
and
dec
in
je
popf
test
into
or
leave
cmpsl
add
in
dec
ret
mov
imul
scas
rorb
jns
mov
movl
frstor
pushl
lods
shlb
cmp
and
add
fists
ljmp
xor
mov
nop
flds
je
jns
cmpsb
das
popa
inc
adc
or
shll
cmp
sarb
push
mov
xor
and
movsl
dec
lahf
mov
push
adcl
ret
enter
in
push
xchg
cmpsb
lahf
jl
push
xor
mov
inc
sbb
xchg
push
in
mov
add
popa
adcl
pop
push
mov
sbb
sbb
scas
push
pop
mov
enter
loop
xchg
aad
sub
xor
xchg
iret
or
fnstenv
pusha
lods
mov
and
dec
cmovb
cltd
jbe
mov
fwait
out
scas
xchg
in
mov
imul
in
mov
stos
out
cmp
int3
or
in
shlb
push
and
das
adc
stc
dec
mov
mov
xchg
cmp
mov
rcl
clc
out
insb
add
xchg
add
jl
xorb
and
pop
cmpsl
iret
pop
mov
mov
std
mov
dec
sub
cmp
movzbl
adc
push
jnp
lret
add
pop
imul
add
mov
mov
jb
mov
adc
dec
mov
arpl
push
push
mov
stc
jg
leave
test
test
sbb
jns
lcall
push
mov
daa
ret
shrb
dec
xlat
fs
mov
mov
xchg
lret
mov
jp
cmp
sbb
jecxz
pcmpgtb
mov
xchg
popf
mov
push
out
jmp
xor
jae
pusha
scas
insl
push
stos
fldl
adc
jno
add
sub
sbb
inc
sahf
mov
cmp
push
adc
mov
adc
mov
dec
add
cmpsl
adc
lret
out
xor
in
xchg
cs
push
cmpsb
mov
xchg
pop
push
andl
js
sbb
sub
pop
xchg
dec
adc
nop
lds
pop
cmp
mov
loopne
and
inc
rclb
dec
pushf
and
inc
add
in
sahf
inc
cmp
jg
loopne
or
sbb
pop
fwait
out
or
enter
fdivrl
pop
mov
mov
and
push
lret
jbe
adc
and
cmpsb
je
inc
sbb
call
and
aas
push
std
inc
jle
xchg
sub
popf
icebp
cmp
or
or
sub
adc
dec
adc
add
movswl
cmc
mov
aam
lods
jmp
scas
xorl
dec
aas
scas
mov
into
aaa
cmp
mov
aaa
xlat
nop
dec
sbb
push
pop
pop
fwait
loopne
test
stos
xor
pop
inc
nop
into
pusha
xchg
ret
test
andl
faddl
adc
or
jmp
or
lret
dec
mov
push
pop
or
cld
xchg
in
jge
adc
xchg
xlat
cmpl
mov
insb
outsb
push
jae
lods
outsb
gs
int
inc
rcll
sahf
lods
xorl
daa
push
movsb
arpl
and
gs
jno
ror
outsl
ror
rorb
int
add
clc
insb
jp
xlat
sti
push
or
push
jp
adc
into
fptan
hlt
lock
cmpsb
xorb
insl
sbb
push
into
cli
es
data16
mov
xchg
rcll
pop
ret
push
aam
cmp
subl
cld
inc
jb
repnz
adc
bound
adc
icebp
push
xor
aad
or
ficomps
xchg
adc
or
in
push
push
jbe
push
cld
in
loopne
pop
adc
push
add
cs
xchg
add
xor
dec
in
fldt
xchg
mov
mov
sub
aas
imul
popa
out
mov
test
jbe
les
mov
loopne
aam
adc
sbbb
mov
bound
out
rolb
int3
lds
pop
dec
sub
mov
sub
jecxz
dec
xor
adc
adc
insl
in
mov
scas
out
aas
push
xchg
lock
je
sub
xchg
mov
jae
cmp
inc
rclb
mov
push
or
or
jb
adc
push
cmp
and
adc
or
jl
lcall
xor
dec
scas
push
mov
in
sbb
pop
xor
frstor
lret
jne
or
xchg
push
pop
popa
mov
pop
shrl
jne
push
fsubrs
and
fwait
int
mov
jno
pop
add
lea
xchg
push
xchg
xor
adc
sti
int
in
incb
jp
inc
xchg
loope
repnz
and
cmp
out
sub
jmp
xor
dec
push
fdivs
loope
mov
orl
jno
lahf
and
test
rorl
pop
enter
fwait
pop
mov
shrl
dec
dec
fs
jg
aam
outsb
ja
insl
fildl
sti
pop
mov
leave
data16
arpl
nop
std
js
data16
dec
fs
push
out
loopne
sbb
mov
ss
sub
sbb
rclb
mov
pop
clc
imul
insl
push
mov
ss
cmp
cmp
xchg
popf
lods
pop
add
dec
lcall
cltd
insb
and
rcr
arpl
sbb
stos
add
push
jns
or
xchg
add
sar
cmpsl
xchg
loopne
jne
push
fistpl
or
insb
out
mov
jb
or
pop
add
mov
aas
xchg
and
pop
int
xchg
mov
int
sahf
pop
sub
mov
mov
scas
sub
test
mov
ss
pop
cmp
xor
inc
pop
call
sub
and
in
popa
cmp
shrl
lret
or
mov
icebp
fdivl
dec
lcall
pop
loope
mov
adc
pushf
xor
push
sub
jb
sbb
adc
leave
pop
test
add
pusha
push
mov
sbb
int
mov
jo
rclb
out
push
testb
dec
daa
jbe
daa
mov
mov
sub
sahf
and
negl
cld
jge
dec
dec
dec
mov
lret
sub
mov
xchg
push
xchg
daa
pop
out
and
add
into
xchg
jp
ss
and
mov
adc
dec
test
mov
roll
mov
adc
sbb
popf
jmp
mov
adc
mov
jbe
lcall
jge
pop
and
andl
and
add
ror
pop
into
std
add
addb
or
xor
mov
f2xm1
popf
jns
dec
mov
test
cmp
into
xchg
inc
pushf
xchg
and
pop
test
push
or
xchg
cmpsb
call
sub
sub
sti
insl
out
sbb
vmaxsd
das
mov
adc
fdecstp
icebp
fldcw
shll
dec
sbb
xchg
or
pop
sahf
int
mov
add
push
jne
cmp
insb
xor
out
pop
popa
xchg
mov
jle,pn
jp
loopne
fmul
mov
adc
ss
out
jne
xor
mov
push
out
fcomps
aam
fs
js
inc
movsb
adc
jb
pop
cmp
test
test
je
ljmp
test
sti
adc
hlt
fcmovnu
mov
mov
jne
mov
and
mov
or
inc
loope
push
nop
pop
test
push
mov
loop
and
xor
std
imul
out
sbb
and
pop
out
dec
and
and
aad
in
inc
ret
jmp
outsb
cmp
xlat
push
mov
xchg
adc
into
scas
add
in
add
inc
push
adc
xchg
mov
sbb
repnz
and
push
repz
xchg
xchg
jbe
and
negl
jg
push
out
shl
repz
mov
sbb
and
sti
jp
dec
mov
rorl
loop
jp
lods
in
jmp
stc
das
lret
scas
jg
push
scas
inc
add
shl
dec
sub
ds
movsl
imul
xorb
js
inc
xchg
xchg
inc
repz
cmp
jl
ret
jns
movsb
andl
and
out
sbb
popf
adc
pop
mov
in
rol
mov
cmp
xor
inc
lods
cmp
xchg
arpl
cmp
xlat
push
sbb
mov
or
mov
test
shlb
stos
addr16
mov
jmp
add
imul
pushf
mov
lods
lahf
xchg
aaa
mov
scas
xchg
pop
sub
repz
ja
in
dec
mov
pop
xchg
ud0
outsb
lcall
je
stc
shl
jmp
test
insb
mov
and
mov
fisubrl
loopne
jmp
mov
xor
jae
popl
cmove
xor
sbb
bnd
cwtl
les
or
mov
sbb
rcrb
jo
adc
sahf
adc
pop
fs
call
add
mov
mov
je
mov
lea
nop
scas
sub
adc
andl
cmc
movsb
inc
push
lahf
cmp
jo
mov
subl
lock
pusha
adc
insb
ret
orb
fbld
cmp
sbb
rolb
hlt
add
aad
push
enter
fsubl
or
sub
pop
outsb
cmp
mov
enter
xor
bswap
mov
adc
cmp
xor
gs
dec
repnz
movsb
cli
hlt
loop
addl
xchg
inc
mov
divl
mov
outsl
jge
pop
fcoms
popf
add
pop
and
icebp
lret
sub
daa
sbbb
call
add
ljmp
jg
cmc
cwtl
lcall
cwtl
aam
arpl
out
hlt
pushf
push
insb
xchg
lcall
sub
sbb
movsl
dec
je
je
or
lock
xchg
push
dec
cmpsl
adc
fistpll
loope
or
inc
pop
outsl
andb
shr
and
xchg
ret
fisubs
pusha
jp
mov
out
sbb
test
or
and
rcrb
nop
sub
add
or
add
stos
pop
int3
addr16
pop
cs
jnp
mov
jp
gs
pop
pop
daa
stc
cltd
mov
xor
in
mov
stos
outsb
mov
jo
clc
stc
mov
pop
jl
add
nop
sub
shr
add
inc
xor
stc
mov
fnsave
jecxz
pop
pusha
imul
subl
sbb
xor
jae
rcrl
adc
mov
out
cmp
xor
mov
testl
iret
add
shlb
sub
or
test
mov
bnd
out
int3
add
push
mov
stos
add
hlt
sbb
mov
shlb
loop
cmp
stos
pop
jecxz
xor
xchg
push
dec
addr16
popl
jnp
mov
fs
rcll
sahf
es
cmpsb
enter
adc
and
push
leave
pop
mov
sbb
cmp
pop
mov
mov
mov
lods
inc
mov
cmp
scas
xchg
dec
cmpsl
stc
or
lret
and
sbb
test
xor
inc
test
pop
xor
jnp
xchg
add
movsl
jp
testl
popl
in
mov
cmc
xor
or
dec
mov
push
notb
xlat
jl
in
movsl
mov
pop
into
push
fnstcw
or
das
jo
adc
orl
pop
mov
mov
sub
mov
dec
add
in
ljmp
hlt
in
cltd
xlat
int3
mov
out
sbb
push
jle
daa
loopne
cmp
fisttpl
aas
stos
sbb
cmp
jns
xor
mov
mov
in
sahf
dec
pop
xchg
adc
jg
in
fdivl
scas
cs
xchg
call
sub
call
xchg
pop
or
cmp
cmp
popa
test
imul
in
jecxz
xchg
mov
stos
or
stos
add
mov
jge
in
xlat
xchg
push
push
icebp
fimull
clc
ljmp
push
incb
jae
ds
stc
and
pop
popa
cmp
repz
add
jns
push
mov
or
xchg
sbb
insl
cs
add
xor
cli
inc
lcall
sti
xchg
insl
repz
sbb
or
pop
mov
adcl
jo
dec
int
lods
out
addr16
sti
mov
out
push
repz
cs
in
jns
mov
cmp
fdivs
dec
repz
mov
ret
stc
imul
insl
dec
or
mov
scas
lcall
hlt
sub
mov
dec
popf
and
outsb
shrb
mov
jmp
pslld
jl
mov
fstl
mov
and
or
popa
jnp
mov
repnz
and
inc
mov
cmp
mov
cld
sub
sahf
cmpsl
fiaddl
sub
inc
inc
sub
lds
repnz
dec
outsl
insb
xor
jp
push
cmp
int
movsl
inc
push
mov
pop
jecxz
mov
cmp
andl
push
movsb
adc
and
push
pushf
inc
add
add
sub
sahf
mov
dec
out
inc
pushf
out
dec
mov
add
ss
push
push
mov
add
das
adc
inc
sbb
addr16
and
adc
adc
fstpt
jp
or
ljmp
les
push
inc
movsb
add
outsb
mov
scas
inc
pop
imul
faddp
jnp
iret
and
jne
idivb
sbb
lcall
sub
sahf
push
fs
test
adc
mov
add
arpl
ficompl
out
add
inc
mov
mov
arpl
or
cmpsb
call
int
negl
pushf
push
push
cld
sub
and
jl
sbb
in
test
loope
movsb
test
pushf
in
in
sarl
mov
outsb
mov
push
jnp
jecxz
pop
outsl
sub
pop
shll
push
out
fs
jae
fabs
call
mov
int
push
mov
mov
inc
pop
dec
mov
mov
and
outsb
lock
or
or
shr
or
into
mov
in
mov
jb
lods
push
xchg
bound
cmp
dec
mov
push
outsl
addb
sub
jns
adc
popa
frstor
lcall
xchg
loop
ljmp
sahf
test
xor
lds
lcall
insl
push
add
test
adc
pop
adc
push
ret
xchg
int
sti
add
sbb
sbb
scas
xchg
pop
repz
sbb
sub
stc
mov
jb
sub
dec
jge
ficoml
in
pushf
cld
pop
scas
cli
sub
popf
insl
mov
ret
aas
sub
pop
aam
add
js
cmpsl
sbb
outsb
add
repz
add
pop
xchg
es
push
andb
adc
pop
aaa
call
repnz
movl
add
adc
cmp
hlt
pop
bound
push
xchg
fisubrs
xor
loopne
stos
cli
notl
xor
lret
lret
mov
outsl
add
dec
mov
pop
dec
inc
mov
mov
lods
popf
loop
fbld
cltd
xor
or
js
gs
mov
inc
mov
fdivrl
adc
mov
xor
add
shlb
lret
or
sahf
das
loopne
sti
dec
and
pop
jmp
fsubl
sub
or
in
push
sub
sub
xor
int
mov
sub
cwtl
push
hlt
jae
adc
data16
xor
or
outsb
cmp
rcrl
and
fwait
sub
dec
xor
mov
cmp
addl
movlps
ljmp
xor
push
loopne
ljmp
fisttpll
push
lods
mov
inc
int
data16
fldcw
ficompl
sbb
in
xchg
movsl
stc
mov
jp
or
and
aaa
enter
and
jle
fimull
cmpsl
stc
inc
fimull
mov
addl
inc
fisubrs
xchg
mov
push
mov
adc
pop
das
push
cli
fimuls
cmp
push
cmpsb
adc
test
movsb
fisttpl
cmp
data16
rclb
sbb
cwtl
ret
out
and
mov
xchg
popf
aas
stc
sub
stc
dec
xchg
mov
pop
pop
jecxz
mov
pusha
fiaddl
mov
mov
cwtl
mov
xchg
inc
mov
imulb
outsl
pop
inc
mov
ljmp
fnsave
cli
hlt
stos
cmp
stos
jae
loopne
ja
jae
movsb
mov
das
negl
push
pop
pop
testl
jae
adc
mov
idivl
leave
sbb
clc
mov
popf
addl
sub
dec
pop
jns
dec
dec
aam
sahf
and
movsb
repz
and
mov
sbb
adc
ss
sbb
sti
stc
mov
jle
loop
bound
xchg
mov
call
mov
pusha
adc
adc
stc
push
scas
sbb
les
sub
lahf
inc
out
jg
sub
cld
adc
xlat
rcrb
jo
jae
or
insl
out
mov
adc
adc
imul
sbbl
mov
pop
inc
jnp
mov
dec
sub
push
cltd
dec
fstps
loop
lahf
mov
push
and
aad
mov
dec
add
inc
cwtl
test
mov
das
push
in
xor
loop
jg
gs
lods
mov
popf
cmc
mov
into
aaa
pop
fidivrl
push
jmp
fs
aas
fs
test
bound
mov
pushf
adc
inc
xor
cmp
push
popa
popa
popa
push
in
mov
cmc
xor
xchg
add
outsl
out
mov
pusha
xchg
xor
mov
je
lods
adc
jae
mov
inc
sbb
jp
sarb
push
and
and
cmp
in
lods
xor
jbe
push
int
clc
or
inc
loop
std
cld
push
popf
jl
cmpsl
fsts
fcomp
rcr
les
pop
adc
mov
mov
xlat
jae
clc
mov
mov
fwait
out
gs
push
ret
loope
cld
movsb
push
outsl
inc
hlt
mov
andb
fsub
ja
lahf
adc
inc
cld
hlt
inc
orl
xchg
jecxz
mov
jecxz
pop
or
mov
jle
popa
jo
repz
roll
jmp
sti
inc
orb
out
sbb
xchg
movsl
mov
lahf
add
xchg
lods
mov
fwait
repz
cmpsb
mov
adcb
fisubs
dec
lahf
cmpsb
fwait
loope
in
lods
pop
mov
adc
jno
popf
jge
and
cli
fmuls
popa
jb
or
cmovs
insb
gs
test
shrl
dec
adc
push
out
inc
pushf
xchg
mov
dec
push
mov
sbb
adc
pop
mov
out
popl
addr16
xchg
dec
sub
out
jae
or
cmp
out
sub
mov
xor
sbb
inc
mov
or
cltd
aas
aas
sahf
int3
loop
push
mov
rcr
mov
mov
mov
mov
push
xchg
aad
out
and
aam
cmpsb
hlt
mov
clc
or
fidivs
jp
sbbl
jae
mov
addl
push
mov
fsubrs
mov
popa
push
pop
insl
push
and
cmp
lock
sbb
pop
test
test
xor
push
push
inc
pop
sarl
jge
stos
out
pop
jecxz
sbb
cmp
mov
and
sub
imul
shrb
rclb
aam
popl
je
imul
push
ja
shll
movsb
and
divb
pop
push
pop
sub
iret
xor
or
xor
adc
add
xchg
aam
cmp
incb
pop
enter
ret
lret
pop
pushl
pop
or
int
and
jl
sub
xchg
lcall
pop
fnstcw
hlt
or
jnp
int3
gs
lods
push
add
scas
dec
rcr
repz
sti
xor
dec
pop
push
scas
sarb
xor
pop
je
addb
pop
and
inc
pop
adc
addb
inc
mov
sub
push
cmp
dec
add
sub
out
xor
push
inc
mov
sub
adc
into
scas
jmp
sbbb
rcll
test
inc
cmc
push
mov
jo
or
inc
jge
rolb
test
pop
adc
pop
movsb
inc
push
pop
or
mov
popf
mov
arpl
dec
jmp
rolb
ja
xchg
adc
cld
call
push
cld
daa
inc
insl
pop
pop
ds
stos
mov
movsb
push
xchg
and
out
cwtl
sti
jecxz
fucomp
arpl
and
insl
or
dec
jge
loopne
in
mov
dec
mov
mov
sub
inc
out
pop
ja
push
dec
jle
xor
inc
cmpsb
mov
dec
cmc
mov
leave
out
sahf
sahf
fistps
jp
cmpsl
jg
daa
push
nop
cmp
lret
jmp
out
push
fs
les
aad
jecxz
mov
and
iret
adc
in
movsl
pop
xchg
ud0
rcl
repz
rorl
sub
stc
daa
inc
das
lds
xor
xor
add
cmp
push
xor
popf
mov
cmc
dec
mov
lock
leave
ds
addb
lods
jg
inc
addl
repz
test
mov
dec
add
inc
inc
sub
in
push
scas
sbb
andl
and
push
les
adc
jp
in
incl
pop
cmp
jge
cmp
inc
ljmp
and
jle
sub
add
xor
pusha
hlt
ds
sbb
roll
xor
cmp
mov
pop
mov
sbb
sub
cmp
lahf
aam
lock
test
and
xchg
sete
jbe
insl
jmp
ret
aad
add
lahf
rcr
jne
or
es
loop
add
dec
pop
mov
sub
inc
test
inc
xchg
pop
pusha
sbb
shrb
fwait
xchg
push
pushf
adc
jo
mov
add
fnsave
bound
mov
cmpsb
xchg
mov
mov
fwait
loopne
xchg
mov
cwtl
es
pop
mov
int
jmp
adc
xor
loope
or
and
lock
push
nop
cmp
idivb
inc
lahf
cld
sbb
lock
or
and
andl
sub
ret
push
je
and
inc
push
xor
iret
fisubrl
xchg
test
scas
xor
data16
movsl
or
push
in
jle
jbe
lcall
xchg
sahf
mov
add
stos
jnp
bound
xchg
xchg
cmp
cmp
sti
push
sub
sarb
flds
mov
xchg
das
rclb
or
in
lds
test
mov
loop
dec
test
and
add
jne
cmp
lods
js
push
mov
cmp
sbb
pusha
test
mov
inc
jo
mov
or
dec
jp
sbb
cmp
pop
addr16
adcb
imul
xor
pop
jne
mov
push
jae
test
cmp
and
sub
or
adc
mov
xchg
sbb
pop
sahf
stos
or
jo
push
mov
xchg
jle
ret
adcb
dec
test
pop
mov
add
test
xor
dec
mov
mov
add
mov
flds
dec
sub
pushf
push
fs
mov
jne
jb
push
add
fmul
jecxz
mov
mov
and
adc
sahf
jp
cli
jle
repnz
mov
dec
repnz
test
add
repz
cmp
sbb
xorl
movsb
icebp
clc
shlb
in
sbb
aaa
dec
pop
test
stc
xchg
jns
xor
jl
cmpsl
xchg
ljmp
jbe
negb
mov
jmp
push
add
daa
jmp
out
dec
imul
sub
add
push
jno
shlb
adc
add
or
or
dec
mov
sbb
cmpl
jmp
xchg
jecxz
std
cmc
sarl
cmpsb
mov
push
iret
mov
add
shl
inc
xor
fs
xor
mov
out
cwtl
rclb
inc
sub
mov
aas
ss
dec
leave
push
inc
xor
push
loope
mov
push
arpl
in
ss
lret
pop
mov
inc
stos
faddl
andl
or
sahf
adc
inc
addr16
add
mov
inc
dec
leave
imul
push
push
xchg
mov
push
shrl
push
pop
sti
dec
dec
push
add
cmc
nop
mov
imul
mov
push
sti
sti
mov
dec
or
adc
push
jne
xchg
jbe
xchg
fdivl
and
cmp
mov
jnp
xchg
sbb
repz
iret
mov
ret
rclb
add
std
xchg
mov
fstl
pop
out
dec
imul
adc
mov
inc
rcr
fsub
sbb
inc
inc
insl
mov
jbe
or
jle
jge
push
popf
js
mov
mov
and
mov
push
scas
sub
mov
mov
insb
mov
pop
rcrb
sbb
stos
shl
push
mov
es
test
mov
test
insb
fcompl
lahf
fildll
mov
lcall
jmp
int3
fmul
dec
imul
jbe
bnd
dec
outsl
and
add
repnz
mov
dec
xchg
pop
les
mov
repz
jmp
movsb
jbe
lods
test
shrl
jnp
iret
xor
add
and
dec
mov
cwtl
or
mov
add
js
mov
mov
add
call
inc
pop
enter
icebp
mov
lret
pop
dec
addl
pop
fnstcw
mov
ret
in
mov
jne
add
and
sti
xor
sbb
jnp
cmp
mov
jno
and
inc
test
mov
fldcw
adc
out
or
push
mov
popf
cmp
repnz
xor
cmp
in
test
clc
imulb
daa
popf
scas
sbb
sti
jnp
inc
inc
repnz
aaa
sahf
sub
sub
inc
into
jmp
popf
scas
shll
hlt
out
pop
xlat
cmp
or
jle
addr16
jl
xchg
or
aad
add
xor
or
push
out
cld
mov
shl
enter
arpl
divb
mov
lret
into
sarb
nop
shl
lock
adc
mov
imul
lock
dec
cmc
mov
cwtl
add
das
es
add
mov
repz
js
in
ss
cltd
dec
pushf
xor
xlat
test
dec
sbb
bound
xor
pop
loop
or
xchg
push
repz
xor
push
insb
popf
cmp
jae
push
dec
mov
adc
out
mov
lret
dec
mov
sbb
xchg
cmp
in
and
clc
lahf
lret
adc
fnstenv
mov
pop
jl
push
addr16
aas
fdivrs
sahf
idivb
jne
mov
jmp
test
jb
adc
bound
mov
inc
int3
cmp
std
or
xor
lods
inc
push
push
sti
out
fisttpl
leave
xorl
adc
fstpl
mov
pop
out
dec
push
popf
xor
imul
inc
ret
jae
xchg
out
mov
test
and
add
jp
mov
insb
aad
out
es
push
shlb
ss
mov
ud0
out
jge
cltd
cli
adc
xchg
sbb
or
push
popf
dec
inc
push
mov
loop
add
push
jne
cmpsl
lods
mov
or
imul
fbld
cmp
js
inc
loopne
and
outsl
paddsw
xchg
ret
pop
test
add
push
mov
jg
adc
sbb
enter
out
nop
aas
jp
lea
ret
jge
pop
inc
inc
dec
mov
lods
dec
addr16
xchg
fldcw
stos
aaa
and
mov
sub
repz
lods
inc
pop
ljmp
aam
adc
adc
mov
ret
xor
ljmp
xor
cmpsb
jb
les
outsb
andl
outsl
sbb
aad
leave
fcomp
pop
xor
push
div
mov
jmp
addr16
jecxz
push
mov
lret
in
arpl
shlb
jg
jae
or
out
or
insb
pop
fwait
clc
test
xlat
daa
fcmovnu
dec
jb
nop
adc
push
xchg
pop
fidivrl
mov
call
popa
push
fs
xor
xchg
lods
insb
xchg
dec
insb
mov
jo
ds
les
push
mov
or
rcll
fldenv
cmp
jg
cmp
in
fidivrl
push
inc
je
pusha
mov
mov
hlt
test
and
inc
les
xchg
add
shl
repnz
bound
arpl
das
or
std
cmp
jp
xlat
add
pop
dec
scas
pop
add
mov
or
xchg
jge
enter
inc
push
daa
cld
fistpl
sub
sahf
nop
inc
pop
add
mov
or
popa
insl
and
push
sub
pop
call
cmp
xchg
jp
mov
pop
jb
cltd
mov
sbb
aam
into
sarb
cmp
aad
and
push
xchg
mov
mov
insl
out
cmp
or
add
sbb
and
pop
es
aas
imul
cmpl
or
fnstenv
imull
xor
out
dec
inc
pushf
leave
fidivl
sub
test
xlat
push
fcmovnbe
xor
and
xchg
add
jo
inc
test
pop
or
gs
xchg
cli
push
in
push
mov
outsl
ja
xchg
sub
pop
mov
hlt
pop
jb
lock
xchg
sbb
ljmp
stc
jnp
adc
and
lock
ja
add
cmp
cwtl
or
daa
cmpsb
pop
sbb
sbb
arpl
lahf
mov
out
and
push
sbb
mov
insl
xchg
jge
jbe
pop
cmc
out
ljmp
or
mov
pop
jns
mov
xor
into
loopne
imul
adc
sub
mov
out
imul
sub
daa
stos
stos
arpl
dec
daa
into
rol
pusha
push
stos
pop
inc
inc
inc
lahf
popf
int3
in
fsubrl
pop
lret
insb
or
xchg
sbb
pop
mov
mov
xor
sbb
push
mov
fistl
pop
aas
dec
push
inc
test
filds
pop
outsl
cmpsb
push
pop
pop
in
adc
sub
mov
cmp
inc
sarb
xchg
adc
and
mov
and
mov
out
mov
ret
sbb
aaa
jl
lods
loopne
jmp
xor
movsl
or
or
jno
sbb
jno
stc
jnp
jne
pushf
mov
js
fisubl
mov
jp
or
nop
lea
and
xchg
sahf
ret
das
movsl
out
fwait
inc
pusha
subl
out
and
loope
sub
mov
popf
mov
aas
adc
add
inc
sbb
shl
push
xlat
rcrl
add
xor
test
sub
lret
mov
aas
bound
mov
in
sbb
loop
mov
push
and
in
popf
fbstp
or
fs
mov
movsl
xlat
idiv
cwtl
loop
lds
inc
dec
and
sbbb
adc
leave
test
cli
mov
aam
adc
ljmp
data16
push
mov
cli
jg
cmp
jle
insl
and
xchg
iret
int3
adc
xor
std
cmp
jbe
add
dec
add
in
mov
or
loop
inc
scas
push
leave
push
add
push
jle
jle
sbb
xchg
and
shlb
xchg
shlb
inc
push
add
add
shlb
jns
ret
dec
sub
movsl
push
cltd
push
push
icebp
xor
sbb
or
cs
mov
rorl
jne
fisubl
mov
sbb
mov
out
sub
push
adc
lods
xchg
and
pop
xchg
data16
adc
and
jp
stc
pmovmskb
inc
pop
xchg
or
ret
push
dec
icebp
dec
lcall
dec
xlat
dec
dec
icebp
or
iret
inc
lds
mov
out
and
xchg
shrb
int
addr16
mov
enter
xchg
std
and
fdivrl
or
call
jns
sub
sub
repnz
and
mov
rcrl
pop
pop
out
mov
pop
andb
pop
push
inc
inc
jecxz
in
xor
lcall
fnstenv
add
mov
lods
lret
cld
in
pushf
inc
add
add
js
std
mov
jae
pushf
cmp
stos
mov
dec
jg
add
ret
fmull
xor
out
sbb
leave
mov
repnz
data16
xor
jns
lret
dec
xchg
push
mov
leave
fildl
fnstcw
imul
fs
cli
in
subb
pusha
cmc
xor
negb
out
xchg
push
ror
js
popf
cltd
push
mov
push
cmp
inc
aaa
addr16
imulb
js
and
pop
iret
insl
push
daa
addb
je
push
loopne
add
pushf
jle
in
notl
xchg
pop
pop
mov
inc
add
and
xchg
enter
cmp
enter
mov
pop
rol
insl
jmp
push
idivb
das
pushf
cmp
jo
mov
pushf
lcall
push
sub
mov
xor
lahf
push
stos
fists
jne
fucomi
cmp
fadd
sbb
or
daa
cmpb
ficoms
ret
lods
test
sub
push
mov
in
in
rol
les
dec
rclb
sbb
mov
mov
push
imul
push
push
andb
lods
adc
pop
cltd
in
in
xor
mov
enter
pop
push
dec
xchg
mov
xor
in
std
cmpsl
xor
xchg
mov
xchg
adc
mov
ljmp
push
jmp
pop
mov
jo
daa
pop
scas
pop
mov
cmpsb
sbb
lahf
cltd
pop
xor
sub
pop
or
int
mov
aaa
pop
daa
xor
outsb
clc
popf
xchg
in
sti
cwtl
daa
aad
nop
int3
hlt
pushf
xor
cmp
or
loopne
cmp
sub
jno
dec
test
inc
cmp
jns
jecxz
adc
push
ret
test
lods
and
or
fsubl
push
rdtsc
aaa
xchg
je
lods
xchg
lret
std
out
dec
in
in
insl
ja
fs
jnp
loop
out
inc
inc
cmp
inc
mov
ljmp
push
stc
inc
inc
cmp
insl
aad
clc
xchg
loopne
jecxz
addb
stc
out
cmp
outsl
add
pop
and
push
cwtl
sub
mov
pop
scas
cmpsl
cltd
std
lds
xchg
and
push
mov
fwait
out
cld
in
sbb
pop
stos
dec
adc
jecxz
xchg
xchg
lods
adc
mov
pop
push
push
pop
lea
incb
cmp
loopne
adc
or
lock
mov
int3
fisttps
mov
sbb
hlt
fidivl
fnstcw
jmp
lds
bnd
push
popa
pop
sbb
jmp
xchg
repnz
mov
mov
xor
mov
addb
addb
shlb
xchg
cs
mov
mov
mov
sbb
jp
sub
mov
jnp
movsb
insb
mov
xor
incl
add
mov
cmovp
jp
adc
lods
pop
sahf
dec
out
fcmovnu
in
test
repnz
mov
lods
clc
mov
imul
out
clc
clc
xchg
inc
stos
cltd
fs
ftst
pop
popf
lea
arpl
stc
iret
hlt
test
ret
lds
int
cmpsl
test
jne
jb
call
scas
mov
cmp
sub
xchg
adc
push
sbb
push
mov
sbb
stc
jmp
cltd
push
mov
fadd
cmc
and
cltd
xchg
jecxz,pt
lea
dec
negb
fmul
xchg
out
jnp
pop
into
shrl
xor
xor
or
mov
sub
dec
push
shlb
roll
imul
in
or
and
mov
mov
inc
jno
lea
cs
adcb
add
pop
gs
xor
aaa
andl
jno
sub
push
and
loopne
jle
pusha
clc
or
stc
outsl
jmp
jle
aas
test
push
out
dec
fs
ret
js
fmulp
adc
pop
inc
pop
jle
test
pop
sbbl
xlat
inc
push
sub
adc
sbb
mov
mov
test
sub
jge
or
xchg
movsl
call
out
imul
cmp
loop
cld
push
jb
scas
fldt
dec
push
push
jp
and
lds
mov
enter
xor
or
adc
jb
xor
push
inc
popf
int3
mov
sub
xor
pusha
loopne
hlt
mov
in
fstp
movb
cmc
add
aad
int
xchg
mov
sbb
inc
icebp
rcl
rcrl
sbb
add
roll
sbb
xor
iret
cwtl
into
sbb
pop
int3
xor
cmpsb
and
into
pop
orb
lcall
stos
in
xor
adc
xchg
ror
into
lret
fs
mov
insl
test
lods
pop
ret
fsubrs
pop
or
popf
mov
and
shll
mov
mov
or
inc
xor
scas
out
ss
addr16
int
mov
jl
xchg
add
push
mov
movsl
dec
push
clc
sub
bound
cmc
cmp
ret
fstp
loopne
fbstp
sub
daa
mov
adc
bound
mov
push
mov
adc
sbb
mov
jb
sub
lret
jb
inc
shll
mov
pop
lahf
mov
sahf
or
mov
xor
loop,pt
cmp
cmpsb
pushf
mov
xchg
icebp
xlat
sbb
sub
mov
je
rol
mov
push
rolb
pusha
mov
lret
pop
in
inc
mov
jecxz
shlb
pop
push
sbb
xchg
ja
mov
inc
cmp
je
xchg
xchg
in
rcr
popf
jp
lock
icebp
sub
fdivl
pop
dec
fdivrl
jns
xchg
push
fistl
mov
cmp
push
adc
add
dec
fildl
cmp
dec
or
int3
dec
mov
bound
xor
fdivrs
lods
cwtl
arpl
fwait
pop
and
cwtl
imul
inc
add
and
push
orl
inc
pop
in
adcb
out
shl
pop
sub
xchg
mov
loopne
mov
std
xchg
jb
mov
pop
and
in
adc
push
dec
xchg
xor
ror
jp
fisttpl
jns
pop
jns
ss
add
les
int3
int3
cmp
arpl
sbb
xchg
lds
in
filds
shrl
xor
cld
pop
sarl
ja
xchg
outsl
xchg
adc
jae
inc
addr16
out
jge
cld
dec
cli
aad
cmp
les
or
mov
out
inc
xchg
sbb
es
out
push
sbb
in
push
enter
imul
xchg
fisubrl
cmp
inc
adc
loopne
rcrl
jp
outsb
mov
jno
push
subb
adc
jl
adc
divl
mov
mov
jns
xchg
xor
push
lret
ds
pop
mov
es
fwait
stc
sti
mov
xor
lods
push
call
in
popf
rol
push
xchg
xor
je
jns
ja
cmpsb
ret
fs
shrl
sub
sti
fwait
out
popf
pushf
sub
insb
adc
adcl
and
sbb
mov
and
inc
push
sbbl
mov
imul
scas
mov
and
lcall
shll
dec
push
adc
inc
aad
mov
mov
inc
mov
cmp
sub
add
jb
pop
or
and
mov
push
repz
loopne
xchg
mov
stos
jae
mov
in
mov
in
call
pop
jns
ds
sub
xchg
lret
mov
and
imul
pop
out
pop
sub
sub
mov
adc
push
xchg
pop
inc
adc
test
jbe
dec
js
enter
test
adc
js
loopne
push
inc
shll
pushw
mov
pop
xor
cli
bound
pushf
cmc
push
mov
mov
rolb
jne
mov
in
fisttpl
sub
outsl
xor
das
das
and
lcall
aaa
jmp
jnp
ds
dec
pop
pop
and
or
jl
shlb
adc
es
pop
int3
aas
test
repz
data16
sub
jns
fdivrl
das
adc
fadd
lock
loop
mov
stc
inc
divl
leave
lock
clc
insb
jbe
pop
mov
shrl
mull
sbbb
enter
push
aam
fcomi
xorb
movl
mov
outsb
pop
aam
jg
call
fnstsw
xor
clc
push
xor
mov
pop
mov
daa
jns
xchg
out
add
scas
mov
pop
push
aas
pop
sub
addr16
dec
pop
dec
push
dec
pop
inc
dec
scas
push
dec
pop
dec
mov
jge
imul
outsb
mov
addr16
sbb
outsb
fucom
call
adc
dec
stos
add
mov
imul
imul
push
mov
push
mov
dec
rclb
loopne
lret
out
aas
rcrl
inc
adc
add
mov
gs
adc
decb
movsl
pop
push
shll
popf
jae
sbb
sbb
mov
mov
and
push
adc
mov
aad
sbb
ficompl
adcb
push
aad
xor
push
xchg
flds
or
add
mov
test
or
adc
ror
int3
popa
ds
mov
ja
arpl
mov
xlat
add
inc
imul
arpl
inc
jl
mov
jb
adc
mov
fisttpl
in
lods
outsb
sbb
ret
xchg
mov
sbb
out
fcomps
and
add
ss
cltd
add
push
movsb
mov
mov
mov
push
pop
cli
xchg
or
sub
mov
test
ds
inc
push
lret
hlt
pop
lea
out
jnp
lahf
add
push
sbb
sbb
ret
cmpsl
out
push
sub
pop
sahf
andl
fcmovnb
sbb
sub
out
ret
sbb
rcll
mov
pusha
dec
out
pop
outsb
cmp
xchg
addr16
mov
pop
movsb
adc
and
test
addr16
mov
ret
xor
sub
and
inc
fcoml
lock
push
pop
test
or
mov
push
fbstp
xchg
mov
sbb
cli
loop
sub
js
outsb
cmpsb
fs
dec
shlb
in
ja
ja
fcmovne
mov
jo
sbb
adc
push
dec
in
fwait
sbb
into
jecxz
mov
jbe
dec
or
add
xchg
sbb
xor
ret
push
cmp
rcrb
xchg
insb
jmp
sub
mov
jae
out
mov
adc
or
popa
negb
nop
mov
dec
pushf
out
in
xchg
jo
jl
mov
fcoms
fs
lret
lcall
push
push
add
inc
inc
sbb
pushf
mov
add
mov
rdtsc
sbbb
cmp
loope
das
mov
and
mov
repnz
aas
sub
cltd
cmp
scas
push
push
adcl
lret
push
loopne
xor
test
in
outsb
xorl
push
lock
in
iret
icebp
inc
daa
add
imul
dec
adc
loope
aad
lret
push
xchg
mov
lods
cmp
push
mov
adc
pop
clc
movswl
inc
adc
cs
xchg
test
and
mov
clc
mov
or
loope
leave
cltd
cmpsb
int3
fsubrp
mov
outsl
scas
ret
test
or
sbb
push
daa
mov
nop
bound
test
rcl
sub
test
aaa
repnz
xor
rorl
insb
lcall
imul
sub
cld
leave
sbb
dec
leave
inc
scas
jmp
xchg
cltd
add
xchg
mov
das
mov
cmc
jmp
xor
or
mov
push
pop
adc
mov
insb
pop
pop
cmp
mov
mov
cli
mov
faddl
pop
into
mov
push
xchg
mov
add
xchg
popa
aas
loope
push
and
dec
stos
adc
xor
or
repnz
leave
or
adc
fidivs
sbb
test
sub
sbb
push
add
adc
sbb
or
lret
and
hlt
nop
adc
xlat
sub
sbb
or
and
enter
jmp
repz
rcll
xchg
bound
pop
lods
jmp
adc
scas
or
jne
les
jno
lcall
adc
repz
data16
ljmp
xor
out
jbe
add
xchg
addl
shl
insb
pop
std
loopne
lret
inc
adc
pop
loop
push
adcl
fcomip
push
jb
fcomps
xrelease
push
sub
jno
clc
cli
ret
or
inc
popf
mov
mov
popa
rep
jge
pop
dec
pop
mov
xor
in
aas
lea
mov
fbld
or
scas
cmp
mov
int
jne
or
inc
and
imul
repz
shrb
xchg
xor
push
loope
fsts
repnz
mov
jmp
sti
cmp
mov
mov
lock
imul
cmp
fcmovb
das
or
xchg
aad
idivl
pushf
bound
cmp
je
xor
es
jg
or
adc
push
cmpsb
inc
mov
ja
mov
mov
shll
jns
std
sti
mov
iret
xchg
aad
xor
mov
cmp
push
imul
inc
out
sbb
lret
out
jmp
mov
sub
mov
and
lods
xchg
sahf
jp
sub
insb
mov
stos
ss
ret
aaa
loop
aam
scas
fstl
subb
mov
stc
dec
sub
mov
xchg
mov
xchg
mov
shll
xchg
or
imul
cmp
ret
or
xor
popl
sub
mov
mov
cmp
loope
adc
pusha
pop
pop
pop
shrb
les
mov
mov
mov
loop
pop
addr16
rorb
cmp
test
jno
ret
cmpsl
aam
push
jne
xchg
faddp
outsb
inc
xchg
inc
sbb
pop
push
push
mov
sub
rolb
or
cmp
hlt
inc
popf
ljmp
push
test
cltd
data16
rolb
mov
fsts
add
pop
sub
call
mov
jle
mov
stos
mov
mov
mov
cmpsl
jg
stos
out
aaa
popf
add
add
sbb
xor
cwtl
cli
aad
outsl
xchg
lock
loop
mov
sub
mov
mov
ret
xlat
sub
push
inc
and
punpckldq
push
push
cld
adc
mov
push
mov
cld
movsl
xor
leave
loopne
mov
iret
and
movsl
push
sub
add
int
dec
and
push
xor
cmpsb
pop
sub
mov
or
push
and
push
jmp
ljmp
xor
jbe
add
idivl
or
rcrl
stos
push
push
pusha
inc
sub
push
cmp
sub
pushf
add
outsb
out
pop
sbb
dec
mov
ja
jbe
xchg
mov
or
jno
cmpsl
pop
inc
cltd
mov
lock
repz
data16
shrb
push
xchg
fcmovb
jl
xor
lahf
lock
imull
xor
pop
cmp
push
scas
xor
mov
xor
xor
inc
inc
nop
mov
cmp
pusha
cmc
pop
pmaddwd
jne
jb
sahf
jnp
push
int3
inc
pop
or
std
jne
jmp
push
mov
sbb
sub
sbb
push
loopne
jl
daa
dec
jb
pop
cmp
xchg
push
mov
pop
or
scas
xchg
das
mov
dec
out
mov
xchg
subb
orl
inc
subb
jb
out
pop
cmp
dec
sahf
mov
xchg
int3
pop
rcl
xor
pushf
xchg
clc
sbb
add
cmp
push
mov
das
xor
scas
clc
jg
jge
sahf
mov
ja
out
imul
mov
shll
enter
mov
adc
in
addl
push
imul
add
aad
xlat
outsb
lret
pop
js
push
rol
and
in
xchg
sub
fsubrp
loop
adc
lock
test
movsb
or
sahf
jge
pop
add
test
add
sbb
ficomps
ficoml
mov
aas
pop
pop
mov
or
hlt
dec
inc
leave
pop
popa
xor
je
inc
xchg
cld
test
daa
push
dec
cmp
xchg
jne
popf
leave
xor
in
imul
mov
adc
sbb
add
sbb
insl
push
in
mov
popl
xor
mov
xchg
mulb
ljmp
out
scas
cmp
repz
xor
iret
test
cmp
int3
clc
push
adc
stc
dec
cmp
pop
movsl
repz
mov
outsb
xchg
cmp
jno
mov
xchg
pop
jle
sbb
lock
push
shlb
inc
mov
mov
mov
orl
mov
outsl
push
mov
mov
test
jae
nop
ror
mov
or
lock
xor
jne
cmp
jbe
leave
and
popf
cmc
sbb
fdivrp
jo
mov
push
in
jno
mov
add
fmuls
lret
ja
and
arpl
sub
push
or
rep
repnz
call
adc
stos
pusha
add
subb
ror
mov
test
xchg
adc
call
jbe
inc
xchg
pop
jae
push
dec
out
jnp
cmpsl
mov
rep
and
mov
cmpsl
jg
inc
or
lcall
adc
xchg
divl
add
sub
pushf
aaa
sbb
repnz
in
pop
push
out
mov
clc
call
inc
mov
push
shl
adc
cmp
mov
or
ss
and
daa
cmpl
lods
pop
roll
iret
fsubs
xor
stos
mov
out
pop
add
shll
cmp
push
adc
outsl
imul
int3
dec
push
nop
bound
xchg
out
adc
jnp
mov
and
out
sub
ljmp
in
jmp
adc
fldenv
fsincos
shlb
lret
or
adc
ds
jecxz
push
mov
dec
inc
loope
lea
in
mov
leave
addr16
cmp
xchg
iret
pop
inc
jne
aam
mov
cmp
push
mov
mov
cs
mov
push
ret
jae
in
scas
pop
into
es
cli
repz
dec
enter
ret
sub
inc
js
push
mov
mov
lea
cmp
test
or
bound
jbe
mov
ficompl
pop
rorb
xchg
gs
jo
adc
xor
shrw
jecxz
lret
iret
lds
subb
int
rcl
das
inc
pop
bound
or
push
mov
ret
test
dec
inc
dec
xchg
xor
jmp
das
cmpsb
lea
sub
ss
add
pushf
outsb
dec
dec
cmpsl
inc
and
xorl
and
push
dec
push
out
jp
xor
inc
adc
mov
pop
cli
incl
xchg
hlt
gs
hlt
faddp
imul
cwtl
mov
mov
add
loopne
lea
cmpb
pop
or
mov
lahf
xchg
mov
daa
mov
fcompl
push
pop
push
ret
test
movsb
leave
cmpsb
aam
sbb
xchg
std
test
inc
sahf
dec
imul
sub
bound
cld
shll
mov
test
push
bswap
cmp
shlb
add
loopne
inc
pop
out
xchg
mov
jg
std
jle
aaa
loopne
stos
pushf
imul
outsl
fadd
jecxz
add
cs
dec
rcrl
add
lret
jg
jge
aam
xor
fst
adc
cwtl
sbb
lea
jno
int3
imul
pop
hlt
fs
jbe
push
mov
scas
cmp
dec
test
add
aam
idivl
lock
mov
ss
dec
or
popf
lret
loope
lods
std
std
movsl
and
out
aas
xchg
clc
adc
jbe
es
out
pop
dec
out
push
pusha
clc
inc
jo
out
int3
and
mov
xchg
fildl
mov
or
fwait
adc
pop
cld
and
pop
in
pop
and
aaa
popa
in
add
mov
push
jno
icebp
adc
out
mov
mov
cs
cltd
pushl
fbstp
addr16
fistps
dec
add
lret
ss
fwait
out
ficomps
imul
imulb
or
hlt
cs
shrl
rorb
lods
andl
movsl
and
or
ss
xlat
scas
es
mov
testb
cmp
stos
add
arpl
stos
cmp
dec
or
cmp
ret
xchg
loop
scas
sub
mov
into
sub
push
aaa
rorl
inc
dec
mov
leave
add
mov
ljmp
jo
push
adc
add
cmp
and
pushf
inc
lcall
xlat
or
pop
sub
xchg
popf
leave
sub
or
sarb
orl
cmp
dec
push
sti
cld
pop
stos
pushf
sub
push
jno
hlt
xchg
dec
lcall
cmp
repz
cmpsl
aam
mov
jne
pusha
popa
sbb
popf
cmp
lahf
push
or
sub
xchg
mov
fidivs
pop
jo
nop
lds
jno
and
and
xlat
cmp
addr16
fistpl
test
movsl
jb
shll
xchg
jecxz
jbe
out
daa
fs
push
rclb
cmc
test
jne
sbb
js
add
out
adc
jle
pop
dec
leave
std
leave
loop
xchg
test
xchg
in
xor
cmp
aam
fs
mov
lods
out
or
dec
clc
xor
jge
inc
aam
pop
sub
add
mov
cld
ret
cmpsl
lock
out
xchg
sub
ss
cmp
popa
pop
adc
sahf
pop
cmp
xlat
jb
aaa
jo
stos
add
jo
in
xor
orb
bound
dec
or
mov
fidivrl
js
inc
mov
sub
cmp
add
stos
out
push
rcrl
jp
or
insl
shll
mov
xor
jmp
xorl
push
mull
mulps
mov
xchg
out
mov
adc
xchg
aam
ds
pop
adc
fs
mov
xchg
mov
mov
cli
sub
insl
inc
lret
sub
inc
aas
hlt
xor
loop
inc
jne
jbe
jge
popf
mov
es
mov
clc
jmp
mov
lret
ror
jg
sub
lret
iret
mov
sub
xchg
mov
cmp
sahf
ss
xor
ds
outsl
jp
adc
je
orb
aad
lock
lea
idivl
ljmp
push
jp
rcrl
sub
dec
sbb
push
xchg
out
jg
and
mov
mov
or
mov
nop
jno
pushf
add
mov
cmpsl
ficomps
add
pusha
cmp
add
fisubs
cmpsb
lods
loopne
rclb
push
xor
or
pop
and
sub
xor
mov
sub
push
xor
jno
jmp
stos
jb
xchg
push
fisubs
or
xchg
hlt
je
push
sbb
jg
mov
pop
repz
iret
pop
pusha
iret
push
push
jno
scas
int3
decb
les
push
in
xchg
add
jmp
sbb
stos
sub
mov
and
or
inc
push
out
push
sub
adc
fistpll
or
pop
insb
adc
shl
cmpsl
addl
addr16
push
jmp
dec
cmp
pop
rclb
jb
sbb
outsl
cmp
js
mov
lods
inc
cmp
loop
add
adc
mov
call
sbb
xchg
arpl
add
lret
daa
std
sti
cs
mov
xchg
cwtl
adc
sahf
mov
cmp
flds
dec
inc
sbb
aad
dec
pop
sbb
aad
cmp
addr16
mov
xlat
jmp
shrl
filds
jo
pop
negb
scas
add
sub
loopne
lods
pop
rcll
adcb
roll
cwtl
icebp
mov
xlat
mov
mov
sbb
add
push
shrl
dec
xchg
pop
scas
pop
mov
push
insb
repnz
sub
in
cltd
int3
xchg
mov
bound
mov
sub
and
and
addr16
cmp
adc
mov
jge
mov
cmc
push
cmp
test
fcompl
in
roll
call
push
push
fucomp
pop
nop
or
cs
pop
pop
test
mov
fldl
mov
addr16
shrl
and
ficoml
xor
aam
inc
pop
incl
lods
std
sub
push
arpl
mov
decl
push
pop
fs
inc
lret
stos
into
in
push
js
lds
xchg
out
xlat
out
and
les
ss
hlt
add
lods
std
mov
jle
daa
jns
popf
sub
test
adc
int
pushf
mov
pop
aam
test
nop
lahf
pop
sub
jno
imul
int
daa
in
lds
xorl
fwait
adc
and
cs
in
aam
add
les
out
dec
cmp
cld
jo
rcr
pop
mov
sti
mov
xchg
fcoms
mov
xchg
gs
xchg
xor
mov
cmp
dec
dec
je
cs
push
or
rorb
aad
add
int
lahf
pop
or
and
inc
shl
jp
push
adc
lock
add
fs
lcall
in
sbb
add
jne
mov
sbb
cld
mov
outsl
ss
cmp
cmc
js
adcl
in
int3
dec
lea
push
popa
add
int3
cltd
jge
xchg
add
out
gs
inc
push
les
jae
pop
fimuls
bound
sahf
xor
sbb
mov
and
enter
out
sbb
xchg
cmp
aaa
popa
test
mov
push
fcompl
sub
pop
mov
lods
test
push
and
push
cld
pop
pop
jb
mov
mov
push
ss
xchg
popf
lods
in
int3
mov
cmp
stc
xor
aam
jae
arpl
lret
cltd
lods
fidivl
mov
sub
clc
adc
sub
lahf
fnsave
jge
clc
push
inc
push
pop
and
push
lcall
mov
xchg
add
push
jo
jecxz
pop
add
popa
mov
movsb
rcll
mov
push
jo
stos
scas
stos
ret
add
ret
bound
loopne
ret
sub
add
into
dec
jno
mov
fdivrs
push
push
mov
repnz
dec
sbbl
jns
loopne
in
test
ror
mov
pop
jb
sahf
divb
xchg
pop
dec
fcompl
loope
std
cld
in
lahf
inc
pop
mov
xchg
adc
jb
add
cmc
xchg
shll
test
icebp
and
mov
fsubl
cmp
js
mov
imul
sbb
fsubs
ret
nop
sbb
xchg
in
mov
mov
nop
in
push
arpl
sbb
jmp
push
mov
fdivrs
add
adc
bnd
rcrb
scas
mov
mov
lock
and
or
scas
pop
push
jp
enter
out
roll
add
sub
test
sub
dec
pop
dec
xor
and
aam
adcb
jmp
aaa
ss
popf
add
push
add
mov
jge
mov
and
ret
mov
loop
adc
adc
cmpb
push
sub
movsb
sbb
xor
leave
and
push
out
loop
xchg
adc
sub
outsb
shrb
in
mov
sub
les
xchg
or
insb
sub
and
mov
je
out
mov
sbb
mov
inc
cmpsl
cli
jmp
dec
jne
pop
jae
enter
addr16
cwtl
stc
mov
xchg
jle
test
loope
aam
push
add
test
pop
sahf
push
jb
sub
or
addr16
stos
out
mov
je
mov
mov
lcall
dec
sar
or
mov
mov
mov
imul
sahf
cmp
xchg
fildl
ja
sub
lcall
mov
in
aam
sbb
out
xor
aaa
cld
repnz
lea
cmc
cltd
sbbl
push
sbb
in
mov
mov
push
push
nop
test
aad
push
ficoml
jbe
jl
icebp
call
fsub
push
push
dec
mov
push
icebp
scas
xchg
xchg
das
mov
push
lods
fwait
add
or
adc
out
wrmsr
out
hlt
icebp
ljmp
lea
sahf
stos
jnp
hlt
push
test
in
mov
pop
mov
dec
xchg
add
mov
shlb
xor
cmp
pop
inc
ds
test
sub
pop
sub
aaa
leave
js
push
gs
ss
in
or
jne
aad
mov
xor
cmp
out
sbb
pushf
ret
test
setg
rcrb
stc
movsl
outsl
clc
or
xchg
adc
outsl
or
enter
and
xchg
mov
jns
sbb
dec
sahf
push
push
mov
jecxz
cmpsl
jp
lret
push
aam
testb
daa
xchg
cld
cmp
add
mov
xchg
adc
test
sub
push
xlat
lcall
and
xor
sub
xchg
jecxz
sub
je
in
scas
sti
pop
test
push
mov
jae
cltd
leave
out
mov
test
mov
pusha
mov
push
dec
testb
jns
jno
test
pop
insb
iret
or
add
pop
or
dec
iret
sub
pop
loop
int
int
loope
insb
push
les
lret
rorl
ljmp
mov
call
cmp
test
or
mov
jns
pop
shrb
shl
mov
inc
jno
cld
add
stc
xchg
xor
add
mov
repnz
adc
cmc
pop
mov
dec
fucomp
adcb
cmc
rorb
mov
sti
pop
test
nop
sbb
test
adc
sub
push
inc
fs
mov
nop
mov
fisttpl
fiadds
mov
imul
mov
aaa
lret
lahf
mov
test
mov
mov
dec
jge
into
loope
push
push
cltd
cmpsl
shlb
xchg
movsb
inc
cwtl
adc
lret
mov
push
aam
cmp
xchg
out
les
and
or
test
jmp
mov
out
xchg
adc
or
mul
mov
lods
sbb
xor
sub
lock
cs
inc
cmp
and
shll
mov
xchg
les
aaa
or
push
mov
int
mov
xbegin
insb
inc
sbb
out
repnz
lcall
shll
push
xchg
inc
and
hlt
cmp
cmpsb
pop
out
rolb
pop
cltd
js
into
mov
pop
xor
sbb
mov
int3
xor
dec
addr16
jns
dec
cmp
mov
xchg
stos
lds
sub
test
pop
in
sti
inc
popf
push
jl
add
jbe
lock
mov
jle
cmp
or
popf
out
scas
add
iret
test
insb
mov
rclb
test
ja
sbb
leave
xor
mov
clc
xchg
jg
add
fidivl
dec
scas
mov
lret
jb
cmp
dec
rclb
scas
or
inc
cwtl
xchg
je
jmp
out
outsb
mov
mov
rorb
sbb
popa
enter
ds
les
notl
clc
inc
jo
fcomps
jae
es
loopne
call
dec
xor
or
in
jb
dec
push
rcrl
sbb
loop
je
and
push
jg
fidivrs
out
jne
and
and
pop
call
fbld
clc
loopne
xchg
data16
dec
scas
mov
xor
push
lahf
sti
inc
adc
or
ficoms
das
push
sti
jmp
imul
orl
shlb
push
aam
xchg
xor
jb
scas
cmp
pop
inc
clc
fisubl
das
out
cli
pop
pop
xor
xchg
cmc
pop
dec
and
mov
fsubs
movsb
and
mov
bound
stc
fistps
sarl
mov
jg
jp
cltd
sub
adc
dec
xor
sbb
xchg
mov
add
pop
aaa
loopne
adc
lret
sti
sub
les
cmp
cmpsb
mov
fisubl
cmp
cld
imul
pop
fsubrl
fisttpl
pop
xchg
jmp
pop
fdivs
sub
mov
sub
out
fisubrl
fwait
add
push
jmp
mov
xchg
bound
cmpsl
cmc
jbe
push
dec
ret
inc
jp
nop
mov
lahf
mov
or
stos
adc
fistpll
pushw
dec
jo
pop
test
dec
mov
data16
sbb
imul
test
scas
in
nop
gs
mov
mov
mov
jne
push
pop
nop
push
out
and
test
inc
sub
push
push
mov
dec
arpl
push
jno
lret
enter
jmp
lock
xchg
hlt
push
adc
rorb
mov
dec
mov
stos
fs
pusha
movsl
fs
pop
imul
sbb
clc
mov
lret
and
pop
cmp
jg
stc
sub
nop
or
inc
pop
outsb
xor
test
push
dec
stos
outsl
fisubrs
das
cld
mov
xor
mov
sbb
sti
imul
dec
das
insl
cmp
mov
lahf
idiv
mov
jbe
mov
das
cmp
and
pop
jae
hlt
mov
inc
lods
test
negl
lret
adc
xchg
dec
mov
sbb
mov
mov
push
ds
fwait
shrb
dec
inc
xor
in
jae
jb
push
lret
sbb
mov
in
repz
inc
in
inc
push
or
xor
pop
insb
gs
fildll
jo
and
in
fisubrs
xchg
jb
xchg
sub
mov
mov
jo
out
jg
adc
lock
dec
int
notb
or
movsl
sbb
movsl
jmp
pop
push
add
mov
and
ret
into
loope
cmp
mov
cmpsb
dec
and
test
lock
mov
ret
fsubl
aaa
daa
incl
pop
dec
fwait
jle
test
mov
inc
or
ja
ret
jp
sbb
pop
and
dec
pop
mov
test
and
data16
ja
cmc
pop
je
push
repnz
cmc
iret
cmpsl
ss
adc
pushf
addr16
inc
and
hlt
xchg
xchg
data16
cmc
jmp
push
and
jbe
mov
movsl
sbb
and
cs
mov
lds
subb
faddl
xchg
mov
test
ja
jns
loop
outsl
jle
icebp
mov
fcoml
push
mov
test
and
push
in
or
in
jno
add
lret
pop
sar
mov
scas
mov
mov
ret
adc
stos
xchg
mov
repz
jne
testl
xchg
cmc
jl
adc
xorb
in
mov
sub
mov
dec
inc
out
inc
out
in
or
loope
mov
imul
sub
mov
aam
jle
addb
xchg
push
outsb
test
int3
add
dec
mov
movsl
mov
mov
dec
adc
cmova
mov
ret
pop
add
dec
add
cmp
and
scas
and
out
add
fbld
cmp
fldt
lods
ss
pmulhw
inc
mov
cld
adc
ja
push
jl
mov
lcall
sub
rorb
les
push
fwait
loopne
shr
mov
mov
gs
push
nop
adc
add
mov
push
mov
fcmovnbe
test
outsb
test
je
jge
rcrl
cmp
cltd
inc
ljmp
rolb
fs
push
push
pop
in
mov
fwait
pop
cmp
xlat
test
xchg
add
mov
xlat
inc
inc
pop
idivl
mov
sub
lods
sub
inc
andb
cld
push
add
xchg
inc
fiadds
repz
jl
jns
mov
dec
push
mov
call
mov
ret
daa
fwait
xor
jnp
in
or
adc
pop
mov
or
mov
fsubl
pop
add
pop
ret
sub
int3
push
pop
mov
add
repnz
sarl
out
jecxz
sti
push
add
sub
adc
inc
adc
xchg
sbb
xor
les
sahf
ret
out
pusha
aas
adc
fsubl
enter
leave
push
cmpsb
mov
xchg
incb
inc
xchg
mov
or
xchg
out
lods
jne
shl
inc
cmp
leave
out
outsl
lret
pop
mov
out
and
jp
mov
loope
or
icebp
push
lret
outsb
repnz
mov
xor
mov
jae
testl
or
jecxz
repnz
fimuls
mov
xchg
sbb
push
pusha
cmp
mov
or
and
cmp
and
pop
insb
pop
mov
pop
and
les
jne
loope
push
into
bound
pop
or
xchg
stc
jl
pusha
dec
mov
cmpsl
mov
mov
add
das
inc
inc
adc
cld
fstps
mov
stos
mov
pop
dec
js
in
adc
out
test
and
out
adc
jb
fldpi
hlt
xchg
aam
dec
xor
cli
add
in
jo
aad
mov
push
jnp
mov
xor
pop
xor
scas
add
jle
xor
rorl
movsl
jne
fisttps
or
mov
cltd
adc
ret
sub
pop
sub
inc
daa
adc
imul
mov
cwtl
xchg
sub
dec
inc
mov
out
sub
pop
dec
pop
ljmp
xchg
dec
ret
mov
test
popa
lahf
sbb
mov
lds
pop
jle
or
sbb
xor
and
pop
lret
add
idivl
cld
fildll
push
loopne
mov
mov
jp
mov
call
inc
mov
dec
icebp
pusha
lret
xchg
repnz
cmc
mov
mov
mov
or
xor
nop
imul
mov
jns
or
mov
jb
sub
and
sub
stos
out
lock
out
pop
mov
sahf
lret
and
or
xchg
ret
sub
jge
mov
vdivpd
test
dec
daa
xor
lahf
bound
mov
stc
xor
movsb
icebp
dec
cmpsl
in
js
mov
xchg
push
shlb
flds
fwait
out
rorl
movsl
test
lret
dec
and
mov
dec
adcl
int3
addb
aas
push
xor
repnz
dec
dec
inc
ljmp
and
scas
xor
mov
dec
add
stos
jae
adc
xor
fiaddl
sahf
and
cmpsb
out
aad
loope
mov
inc
cmp
xchg
jmp
test
insl
and
push
mov
cmp
pop
pusha
and
subl
bound
ret
mov
jnp
mov
ljmp
icebp
fadd
out
push
pusha
lods
shrb
push
or
enter
pop
xor
sub
jbe
or
stos
pop
into
add
add
repz
sub
je
std
jno
imul
xor
arpl
dec
scas
outsl
iret
aaa
lds
int
jo
dec
les
insl
daa
cmp
mov
ja
mov
push
mov
mov
ja
test
cmc
cmc
add
jmp
mov
mov
pop
cwtl
xchg
jns
inc
fsubr
push
pop
movsl
dec
sahf
aas
or
daa
xor
push
pop
mov
xor
mov
ds
jns
jecxz
cwtl
push
xor
jle
mov
icebp
lahf
xor
or
pop
jecxz
enter
in
jp
stos
mov
dec
inc
add
sbb
pushf
aaa
xor
jnp
mov
push
iret
fdivr
xchg
mov
cmp
les
or
or
xor
xor
mov
mov
ret
and
sub
xor
pop
mov
push
mov
dec
cmp
mov
and
shll
ficompl
stos
push
inc
mov
lahf
inc
and
jg
jnp
inc
mov
mov
and
movsl
aam
xchg
sub
xchg
mov
mov
and
cmp
stos
xor
int3
mov
mov
xor
mov
mov
mov
mov
dec
dec
loopne
xchg
retw
sbb
or
push
lods
mov
cltd
hlt
or
ret
std
pop
jg
sbb
jmp
cmp
ret
das
push
push
push
pop
sub
jecxz
dec
push
roll
xchg
sbb
stc
aam
sti
aam
fistpl
sub
xor
hlt
cld
outsb
stos
and
or
clc
mov
ss
sbb
inc
outsb
push
mov
or
cmp
inc
ljmp
and
mov
and
loop
ds
push
mov
xchg
sub
ret
inc
sub
arpl
add
pop
xchg
add
shl
fwait
ret
inc
ret
outsl
jg
lret
cwtl
xchg
mov
lea
hlt
ss
movsb
xchg
adc
mov
ficompl
jns
aas
test
pushf
int3
cmpl
cs
popa
fidivl
cmc
loop
adc
add
pop
ljmp
aas
std
xor
and
inc
adc
push
test
pop
jae
pop
insb
pop
or
outsl
jo
pusha
lds
nop
or
scas
cmp
insl
jge
pop
mov
adc
ret
push
and
mull
ret
adc
xchg
jg
mov
sbb
mov
fdivl
mov
jl
pop
pop
jnp
mov
ret
xchg
test
or
icebp
dec
xor
mov
mov
testl
jmp
or
sub
xchg
sub
sub
push
insb
push
int
aaa
loop
out
lods
aam
out
and
dec
and
push
push
mov
mov
xchg
filds
xchg
leave
push
mov
loope
push
aad
jmp
adc
pop
cld
push
or
mov
fcoms
add
rcr
bound
stos
pop
adc
ret
test
cld
mov
test
jnp
ljmp
xor
mov
dec
adc
ljmp
dec
cmpsl
popf
mov
dec
and
pop
ljmp
and
das
pushf
loope
imul
push
adc
popw
adc
leave
sbb
jae
scas
mov
rcrl
push
mov
pop
xor
cli
cmp
cmc
in
and
mov
bound
adc
enter
mov
in
pushl
imul
cmp
mov
sub
lds
xchg
and
pop
mov
in
stc
jb
gs
mov
sarb
js
inc
lret
add
and
xor
std
lret
stos
lret
jge
xchg
test
and
push
sbb
xchg
jecxz
sahf
out
roll
in
push
xlat
sub
dec
pop
fstcw
aaa
adc
add
sbb
pop
sub
pop
lock
enter
loope
lret
lret
mov
sahf
lahf
jns
cmp
xchg
mov
outsb
hlt
jmp
xchg
jbe
loope
dec
add
lcall
inc
pop
mov
mov
xchg
and
jno
adc
jne
or
daa
push
bound
shlb
test
sub
ljmp
lds
cmp
cld
cli
push
push
mov
adc
out
cmp
outsb
mov
dec
das
inc
dec
push
mov
push
adc
lret
mov
lahf
xchg
sub
push
push
mov
call
push
paddb
arpl
clc
dec
ret
jg
jne
lcall
imul
addb
test
ljmp
pusha
inc
mov
pushf
mov
les
outsb
outsb
mov
push
popf
push
mov
xor
push
push
pop
xchg
xchg
dec
pop
movsl
and
pop
sbb
ds
mov
clc
mov
out
popf
jno
popf
call
or
xchg
mov
mov
out
and
mov
dec
gs
inc
decl
jbe
jge
sub
mov
cwtl
scas
sarl
lahf
pop
add
test
clc
pop
or
outsb
nop
push
outsb
ret
mov
fs
or
adc
inc
inc
and
xor
xor
hlt
movsb
mov
or
mov
test
xor
push
call
mov
sub
pop
js
int3
mov
fiadds
ja
lret
mov
jo
out
loope
xor
out
push
xor
mov
clc
call
push
xchg
and
fwait
cmp
cmp
outsb
pop
add
test
dec
or
cmpb
inc
mov
add
aam
adc
pop
imul
imul
push
inc
dec
sarl
mov
jnp
jno
add
es
push
sub
cltd
mov
mov
clc
mov
lahf
push
push
pop
mov
inc
loope
stos
xlat
pop
mov
push
mov
cmp
sub
popf
iret
xor
mov
lret
bound
xchg
mov
fcoms
add
push
mov
int3
xor
scas
mov
dec
sbb
jnp
loop
cmp
fs
sahf
scas
and
stos
imul
or
cmp
mov
out
int3
xchg
lds
sbb
hlt
inc
arpl
leave
push
push
pop
cmpsl
std
in
cmp
insl
mov
jp
out
fstpt
imul
mov
push
and
xlat
inc
dec
inc
add
push
std
test
mulb
jnp
inc
push
lret
fcoms
aam
dec
mov
dec
sahf
mov
js
jns
fsubrl
data16
dec
sub
pushf
adc
xchg
popa
jns
sahf
cwtl
sbb
cmpsl
aad
loope
pop
adc
roll
mov
icebp
push
call
andl
dec
jle
cmp
loop
ds
js
fisttps
in
cmc
and
inc
lods
fnstcw
clc
les
jg
pushf
adc
ret
mov
xchg
jmp
repnz
add
pop
out
inc
scas
mov
outsb
ja
lret
cmp
adc
pop
xor
mov
lods
dec
cmpsb
add
xor
into
cmp
xchg
push
inc
sahf
mov
testl
imul
fbstp
jno
cmp
nop
and
xchg
adc
xchg
cmp
fstpt
mov
inc
lret
rol
or
xorb
std
repnz
dec
dec
pop
lahf
cs
jmp
mov
daa
push
sahf
mov
pop
out
or
lds
jns
fcomps
pop
out
sub
loop
loopne
inc
xor
pusha
std
stos
fisttpl
add
or
mov
mov
lds
sub
xchg
push
popf
rcll
or
adc
or
outsb
sbb
lods
lods
push
orb
scas
pop
lahf
push
out
pop
sub
cli
cmp
cmp
sub
mov
pop
outsl
and
fs
cmc
xor
inc
adc
ja
es
and
adc
es
jne
fisubs
popa
clc
movq
jo
mov
scas
stos
adc
loopne
out
bound
lret
les
test
push
stos
xor
fs
out
jmp
add
sbb
sbb
add
js
call
inc
repz
inc
xorb
xlat
lret
cli
fwait
int3
jae
sbb
pop
and
pop
pop
and
lea
mov
loop
fwait
add
cmp
sbb
es
or
stos
fwait
sub
mov
adc
das
cmp
jl
jno
mov
ljmp
or
dec
xchg
dec
repnz
jnp
in
test
push
xor
fistpll
adc
fdivrs
frstor
out
add
xor
sbb
or
pop
pusha
pop
add
sarb
pop
inc
arpl
rclb
jne
sub
testb
push
xor
adcl
sbb
insb
dec
lea
iret
sbb
mov
add
sbb
fcoms
mov
jne
xchg
xlat
inc
in
out
or
lcall
xchg
push
mov
xor
stos
gs
dec
jge
ss
cmp
outsl
ss
inc
scas
clc
stc
in
call
dec
shr
and
sbb
inc
ret
pop
fsubl
add
jns
pop
inc
stos
mov
lods
add
loopne
xchg
js
aad
hlt
cmp
js
pop
mov
fs
fs
mov
outsl
push
dec
push
lret
sub
mov
into
rcpps
cmp
or
inc
insb
mov
lahf
push
add
fcmovnu
mov
adc
shlb
mov
sbb
pop
jge
sti
mov
or
jb
loopne
daa
cwtl
repz
inc
scas
shrl
lea
add
jge
inc
fdivl
adc
adc
test
dec
scas
add
outsl
insl
outsb
xchg
lods
and
mov
int3
xchg
sbb
mov
stos
rclb
sbb
jbe
fs
jge
or
div
int
aad
jns
mov
aam
sub
jo
dec
jae
xchg
push
sarb
push
adc
lods
packuswb
sub
and
push
data16
or
xor
repz
mov
cmp
icebp
sahf
pop
sub
scas
mov
inc
push
pop
insl
dec
adc
in
repz
js
sub
xlat
insl
repnz
mov
pop
jl
insb
in
push
and
mov
and
xchg
divl
jne
jbe
push
int
xchg
mov
push
mov
jno
push
loope
mov
imul
mov
mov
push
cmp
push
dec
add
aaa
jb
inc
jns
shl
iret
xchg
and
pop
subb
xor
pusha
outsb
jnp
lcall
pop
xor
test
cmp
sarl
popa
inc
push
sub
in
push
pop
pop
lret
jne
fld
and
into
repnz
cltd
js
mov
clc
in
rcr
xor
add
mov
xchg
and
cmp
cmp
or
push
xorl
adc
aam
mov
std
sub
mov
cmp
cmp
sbb
ljmp
aas
shr
mov
inc
das
add
mull
add
testb
outsb
inc
cs
cli
call
mov
mov
sbb
inc
sbbl
inc
mov
aad
mov
sub
test
sub
add
and
lock
int
and
outsl
add
or
xor
outsl
pop
jbe
xchg
pop
nop
sbb
test
and
pop
std
push
jmp
jl
lea
mov
insl
std
mov
adc
out
orb
int3
dec
jmp
add
in
ficoms
mov
jp
sbb
jbe
sub
adc
mov
fnstenv
dec
xor
addr16
push
mov
and
ficompl
jo
bound
aaa
xchg
clc
es
jbe
pop
ror
clc
aam
dec
sbb
sbb
jl
sub
add
fcmovb
mov
loope
loop
pop
testb
inc
xchg
push
into
enter
mov
aad
sahf
jle
push
jp
test
outsl
xor
jno
inc
pop
adc
add
xor
push
adc
ror
addr16
fwait
dec
mov
push
call
xor
xchg
sbb
insl
movsl
jle
test
aad
or
fcoms
lahf
and
mov
aas
arpl
sub
bound
cli
mov
or
lods
adc
fidivrs
pop
ja
xor
loope
sub
mov
ficomps
sub
jbe
sar
mov
adc
or
stc
sbb
adc
icebp
imul
mov
lods
addl
aam
icebp
shrl
adc
rolb
push
xchg
xchg
test
mov
mov
pop
cld
cmp
gs
jb
arpl
pop
loopne
addl
mov
sub
adc
out
sahf
sbb
fnstcw
in
push
lret
lods
mov
int3
test
and
lret
add
fwait
cmp
or
pop
testl
test
orl
add
scas
aas
push
xor
sti
mov
cmpsl
iret
add
xchg
lret
sub
mov
mov
cmp
jle
pusha
pop
sbb
pop
out
cld
xor
mov
fsubs
sbb
lret
js
mov
mov
jne
and
sbb
mov
xor
pushf
outsl
inc
xor
pop
pop
xor
push
fisttpll
popa
add
scas
xchg
xchg
mov
pop
es
push
int3
add
adc
jecxz
daa
cltd
loop
addr16
xor
inc
xchg
pop
xor
mov
xchg
popf
stc
lret
jle
push
loopne
adc
xor
and
cli
int
pop
jo
pop
jp
inc
push
mov
or
add
mov
js
sbb
sbb
mov
mov
xor
out
sub
sub
push
in
jno
mov
test
imul
lock
or
popa
sbb
shll
pop
mov
out
bound
movsb
loope
push
les
js
call
shll
mov
jp
sti
js
xor
xchg
jle
sbb
pop
dec
stos
adcl
sbb
and
fdivs
icebp
fcmovnbe
popf
push
loope
or
xchg
lcall
das
xchg
cs
sbb
repnz
inc
mov
push
cmpsl
es
out
xchg
lret
mov
mov
movsl
hlt
mov
je
jnp
jl
ljmp
xorb
push
jno
lods
push
cli
sub
cltd
push
idivl
icebp
xor
cmpsl
pop
popf
pop
dec
mov
add
mov
pop
sub
pushf
dec
pop
adc
out
cmp
adc
sahf
stc
hlt
icebp
sbb
add
les
insb
pop
dec
inc
dec
orl
data16
mov
pop
fcmovb
adc
dec
fsubl
fcomip
xchg
mov
rcll
jb
sub
das
inc
mov
jbe
adc
nop
cmp
cmp
mov
xchg
clc
or
xor
dec
inc
adc
ljmp
dec
inc
sub
or
jp
sub
hlt
aas
cmp
pop
popf
xor
test
lcall
adc
repz
mov
adc
andb
stos
js
lret
jmp
sbb
or
pop
xor
mov
outsl
loopne
dec
lods
pop
mov
loopne
adc
and
sub
push
test
fs
or
mov
adc
push
js
mov
js
dec
movsb
xorb
das
fsubs
dec
xchg
mov
lock
cmp
adc
mov
gs
shlb
add
test
outsb
mov
dec
cmp
add
push
lds
sub
out
orb
push
pop
xor
aad
xchg
mov
cmp
addb
xor
shlb
dec
andb
xor
insl
stos
jmp
fsubrl
notb
mov
pop
jae
mov
jnp
dec
daa
cmpl
es
rcll
sub
addb
hlt
popa
cmp
popa
sub
mov
lock
mov
adc
jae
push
xor
adcb
cmp
in
repz
daa
gs
mov
call
xchg
jne
jno
sub
out
addr16
lret
mov
sbb
mov
rolb
outsb
mov
movsl
mov
xor
mov
xor
push
pop
add
into
inc
pop
scas
loopne
ja
xchg
call
or
addr16
inc
test
lret
jl
movl
xchg
enter
fdivl
aaa
sbb
stc
jno
and
daa
les
imul
pop
ret
hlt
mull
stc
lods
dec
lret
imul
mov
in
lea
insl
mov
dec
mov
dec
rcl
rcrl
mov
cmc
jae
aas
call
mov
xchg
jb
es
push
cmp
test
inc
popa
subl
xor
sbb
mov
mov
subl
fwait
or
ss
fisttpll
hlt
scas
rorb
test
aam
push
jmp
add
and
adc
sub
pop
pop
pop
mov
add
shrb
test
jns
adc
call
push
mov
movsb
popf
adc
test
lds
mov
dec
sub
jb
cmp
je
pop
sub
inc
clc
nop
xchg
cmp
mov
pusha
in
lret
pushl
lret
fistpl
sbb
andb
add
lods
stos
mov
cmpsl
popw
jae
lcall
push
test
adc
jecxz
cs
push
adc
jae
xchg
jge
lcall
jl
nop
mov
aad
loopne
mov
imul
mov
ret
jo
add
pop
push
shl
xor
inc
or
xchg
lahf
or
movsb
pop
aaa
sbb
or
mov
fsub
push
int
mov
cmp
xchg
imul
sti
inc
dec
sub
fcmovu
adc
cmp
cmp
pop
mov
loop
popa
das
cmpsl
sbb
and
fdivp
data16
ret
imul
push
mov
pop
fs
je
jmp
aad
repz
cmp
jge
loop
cmpsl
xchg
testb
add
push
sbbb
pop
sti
ret
mov
mov
and
aas
push
pop
aad
mov
movsl
mov
movsl
push
adc
into
sub
lahf
xlat
or
pop
rcrb
ja
popf
fdivrs
mov
insl
pop
out
xchg
or
jge
push
repnz
and
or
aaa
jnp
pop
jno
adc
xchg
or
mov
mov
cltd
out
lret
jne
lods
jl
outsl
dec
push
cmp
data16
jnp
inc
add
repz
pop
dec
sbb
aaa
and
out
xchg
mov
fcompl
pop
ja
aas
sub
inc
in
std
ficoms
sbb
cs
push
mov
mov
and
inc
pushf
sti
adc
leave
lea
dec
xchg
sbb
pop
adc
push
mov
lret
pop
or
jo
setnp
xlat
insl
aad
loopne
jle
sub
or
ljmp
test
add
push
or
jg
inc
pushl
int
cs
ja
je
add
sbb
and
bound
rorl
shll
notl
mov
jle
in
push
ljmp
xchg
mov
sub
add
add
lock
mov
cmp
push
push
imul
imul
sbb
xchg
dec
das
rorb
xor
cli
sub
or
ret
push
aaa
mov
movsl
push
popf
dec
inc
test
jp
imul
xor
jecxz
in
je
or
add
mov
push
adc
shrl
pushf
xorb
and
push
imul
mov
lods
rcrb
and
sbb
fsubl
pushf
test
sti
iret
and
xchg
scas
mov
or
dec
mov
cmp
lahf
mov
mov
filds
push
cwtl
push
out
movsb
scas
mov
and
ja
push
mov
bound
adc
mov
adc
lock
outsb
js
and
or
sbb
mov
xor
rorb
rcl
addr16
bound
jmp
cltd
or
data16
repnz
stos
mov
dec
aas
fdivp
jmp
cmpsl
rol
mov
out
ret
popf
push
js
js
dec
imul
lret
outsb
lods
add
xchg
xor
dec
jmp
dec
int3
mov
xor
add
es
ss
ss
mov
rcrb
loopne
popa
mov
adc
inc
or
mov
pop
filds
jp
int3
mull
lret
movsl
cmp
mov
inc
js
jne
xor
lahf
movsl
sub
inc
cmpsb
adc
push
add
cmp
mov
cmp
push
lret
and
fidivrs
push
lret
mov
xchg
sbb
idivl
repnz
cmp
xchg
cmp
orb
aad
or
fwait
pop
push
pop
ljmp
mov
sar
imulb
or
fcoml
sub
sbb
mov
jecxz
cwtl
lret
push
sbb
mov
push
sbb
int3
lea
sbbb
jno
scas
dec
mov
out
pop
shll
inc
divb
pop
movsl
sbb
jmp
imul
js
pop
or
adc
inc
xlat
out
sbb
or
pop
in
inc
xchg
push
push
inc
or
xor
cwtl
mov
mull
jae
mov
rclb
push
ret
sahf
sub
jno
inc
sbb
gs
mov
popa
xor
pop
adc
data16
inc
mov
enter
mov
inc
jnp
fsub
mov
mov
addr16
jo
xor
int3
cmp
push
into
xchg
sbb
adc
je
fimull
adc
pushf
into
mov
int
mov
shll
inc
xchg
pop
pop
sub
mov
ja
out
dec
push
cmpsl
xor
or
les
fsubl
out
mov
lods
shl
xor
das
out
ds
mov
dec
arpl
push
and
cltd
fcmovu
daa
pop
incl
jo
fdivp
and
add
enter
pop
push
lock
cs
or
mov
mov
mov
je
inc
lods
pop
dec
jo
sbb
fidivrl
inc
lods
and
popa
sub
inc
jae
cmp
scas
sub
movhps
fidivs
xor
jno
inc
dec
gs
jl
fnop
jae
inc
push
outsb
mov
xor
dec
stos
xor
pop
mov
pop
int3
aam
es
inc
lock
outsb
inc
fildl
lock
adc
jae
xchg
idiv
jns
pop
sub
mov
and
out
fs
sbb
jns
xor
into
enter
jmp
inc
sbb
mov
push
jecxz
repnz
or
jle
mov
adc
fs
out
mov
sbb
popa
dec
mov
dec
mov
aam
stos
scas
and
sub
hlt
pushf
loop
cmp
dec
jecxz
dec
scas
pop
dec
cmp
pop
stos
or
es
xchg
mov
out
loope
andl
xchg
dec
xor
mov
insb
in
pusha
or
add
divl
cld
inc
sbb
xorb
in
add
or
nop
scas
scas
idiv
mov
jnp
stos
mov
fdivrl
outsl
push
dec
int
testl
cmp
les
and
cmp
rcrb
jle
fadds
out
adc
xor
jnp
and
cmp
or
enter
or
loope
sbb
adc
movsl
cs
lcall
inc
popa
add
in
testl
dec
jmp
add
pop
hlt
or
jg
adc
jne
cwtl
sub
adc
pop
das
jge
fldcw
xor
adc
movsb
pop
cmp
xor
mov
and
mov
dec
push
lret
shlb
xor
ret
lret
inc
mov
inc
out
mov
pushf
xor
xchg
psllq
fstp
sub
pop
mov
push
fimuls
lock
cmp
mov
aad
inc
in
add
flds
cmc
mov
mov
xor
pop
aam
inc
fistpll
test
mov
scas
mov
lds
pop
rcl
lret
push
or
popf
mov
ret
xchg
repz
ja
sbb
test
lods
rolb
fcoms
outsl
adc
dec
pop
sahf
fisubs
daa
notl
sbb
dec
sbb
mov
push
scas
pop
sub
xchg
inc
js
in
mov
sbb
daa
test
dec
xorb
imul
mov
ret
les
fdivp
mov
sarl
mov
mov
inc
bt
lods
cs
inc
dec
mov
add
lahf
mov
jecxz
mov
jmp
push
aaa
push
cld
cld
inc
hlt
sub
inc
fs
cmp
movsl
pop
mov
pop
or
add
shl
psrld
cmpsb
inc
add
orb
jnp
cmp
js
mov
or
in
outsl
and
movb
out
cli
sbb
mov
xchg
xchg
or
pop
sahf
ja
aaa
adc
jmp
inc
loop
mov
mov
stos
sub
out
add
insl
in
adcb
mov
ja
or
movsl
test
xor
out
hlt
fistpll
adc
scas
fwait
cmc
push
out
mov
xchg
jae
xchg
lods
and
push
sub
bnd
jno
dec
leave
adc
stc
pusha
push
imul
lret
sub
cmp
xor
sbb
push
mov
mov
dec
xchg
and
and
xor
push
ret
shll
push
mov
fnstsw
fnstenv
mov
dec
and
js
cs
mov
fcmovbe
cs
and
mov
out
imull
fistpll
iret
sahf
rol
cmc
rclb
jmp
fmul
mov
addr16
push
repz
das
jl
mov
inc
movsb
imul
mov
or
dec
iret
fcoms
es
jmp
adc
imul
jo
inc
scas
pop
movb
popf
aas
and
mov
xchg
push
cmc
xchg
andl
shll
adc
mov
les
test
sub
bound
int
adc
dec
inc
and
js
or
ljmp
fs
pop
icebp
shrb
inc
push
insl
fidivrs
gs
pop
rcrb
mov
addr16
jae
mov
inc
xchg
xor
mov
cmpsl
inc
icebp
movsb
ret
sub
and
sbb
cltd
hlt
jae
ret
sbb
leave
les
jno
sub
aas
mov
add
cmpsl
imul
gs
int
sub
addr16
pop
fidivl
mov
xorl
and
sub
or
es
jns
into
inc
sbb
mov
out
xchg
add
xor
scas
mov
lahf
xchg
cmp
fsub
insl
ret
mov
push
out
push
mov
repz
inc
mov
pushf
imul
mov
and
pop
scas
movsb
xlat
cmp
sub
add
fldenv
cli
fnstcw
out
imul
inc
push
add
jle
or
push
xor
fwait
out
fistl
mov
jp
xchg
cli
cld
adc
outsb
call
sarl
dec
adc
cmp
or
xchg
arpl
add
in
pop
lcall
xchg
lds
lds
or
pop
sub
and
mov
mov
arpl
fcmovu
pop
push
ljmp
cmp
jnp
xchg
push
jg
dec
mov
cmp
mov
jnp
sti
out
aas
dec
mov
hlt
xor
fs
inc
in
std
pop
fstps
insl
fucomip
jo
imul
jecxz
jb
bsf
into
add
and
or
sub
sub
cmp
cli
xor
mov
xor
scas
xchg
test
pusha
gs
cld
mov
cmp
mov
sub
enter
push
fsubl
out
dec
cmp
lock
mov
std
jb
jno
ret
mov
dec
cmp
call
jb
jno
push
mov
sub
out
fstpt
arpl
repz
dec
nop
inc
mov
aad
jle
dec
and
and
aam
push
ret
stos
hlt
jnp
dec
int3
xor
sbb
scas
pop
xor
jae
loop
and
call
repnz
dec
lret
pop
shlb
pop
ret
inc
mov
dec
andl
aas
loopne
mov
mov
or
push
filds
in
std
sub
bound
lea
ret
push
mov
lock
inc
mov
xchg
pusha
loopne
sub
and
rep
data16
jnp
in
mov
leave
or
lds
lcall
ss
outsb
das
mov
mov
lahf
dec
iret
mov
sarb
out
cld
add
sub
ja
push
push
jb
iret
icebp
cmp
idiv
in
and
adc
sbb
in
or
or
mov
popa
lds
sub
sbb
lea
lea
cltd
pop
sub
lahf
sub
pop
pusha
xchg
movsb
cmp
lret
das
mov
dec
mov
xchg
test
sbb
aas
in
mov
mov
rcll
outsl
add
dec
mov
pop
mov
push
fistpl
push
add
or
nop
subb
jmp
sti
lds
incb
adc
movsb
xor
pop
negl
push
jl
in
fsubrs
cmp
xchg
dec
sub
cmpsb
push
adc
adc
fildll
lret
mov
stos
jnp
shlb
xchg
ja
add
xchg
fs
adc
js
and
sub
daa
gs
aad
xchg
jecxz
pusha
lds
xor
add
ljmp
ret
jo
imul
add
arpl
mov
sub
inc
inc
mov
pusha
mov
adc
jns
sbb
xchg
adc
int3
ss
cmc
test
adc
mulb
mov
push
cwtl
mov
fs
les
mov
dec
fldt
lret
dec
cmpsl
lods
mov
xchg
ret
fldl
loope
ljmp
mov
mov
mov
aad
push
out
icebp
or
xchg
mov
repnz
sub
jno
out
jo
xchg
idiv
lret
js
push
mov
pop
movl
or
add
push
popf
leave
sahf
das
adc
mov
push
xchg
or
push
cmp
pop
push
mov
js
ret
gs
int3
and
xchg
mov
int3
mov
jnp
shr
fstpl
or
cmp
mov
pop
rolb
test
fs
add
jo
push
insb
mov
mov
das
jle
mov
lahf
mov
xchg
jnp
xlat
xor
mov
sub
xor
jnp
push
out
in
sub
add
cmp
mov
popf
dec
jg
inc
fdivs
add
add
cmp
adcb
and
push
fcomps
sub
in
les
push
cli
das
sub
inc
fs
enter
lods
sbb
leave
jns
add
sub
enter
pop
je
mov
xor
mov
push
out
cs
shrb
mov
and
sbb
add
mov
adc
cmp
and
push
xchg
faddl
xchg
inc
or
adc
rol
movl
bsr
xchg
xchg
fmull
xchg
push
pop
dec
repnz
xchg
ficoml
and
cmp
pop
cmp
pop
cs
sbb
mov
aaa
lods
add
ret
imul
sub
xchg
mov
adc
xor
dec
push
mov
dec
mov
sub
mov
add
xor
movsl
xchg
sub
int3
mov
lret
or
loop
mull
cmp
in
xchg
sti
push
push
scas
add
push
rol
pop
call
pop
mov
ljmp
mov
bound
cmc
daa
cli
mov
push
cs
mov
stos
inc
lods
sub
inc
cmp
pop
push
sarl
imul
fisttpl
rsm
lret
shlb
je
out
es
and
cmp
push
cmc
add
xor
sub
test
lods
in
or
out
mov
inc
pop
out
imul
nop
jg
mov
inc
mov
or
pop
push
mov
mov
outsl
xorb
cli
jo
add
mov
mov
inc
nop
movsb
mov
jnp
sub
push
add
and
call
dec
push
fdivrs
sti
stos
loopne
pop
call
faddp
inc
in
cld
dec
xchg
sahf
outsb
mov
xchg
insb
push
hlt
pop
jg
ds
sbb
pop
pop
arpl
test
or
xlat
or
and
movsl
xchg
test
or
nop
pushf
ret
addr16
shr
and
xor
in
push
or
inc
jl
idiv
mov
add
and
mov
gs
jae
test
outsb
pop
test
lea
jg
les
jne
xor
loopne
pop
mov
std
out
out
jae
dec
pushf
mov
movsb
jae
ret
rorl
pop
iret
stos
cmpsl
mov
xor
mulb
mov
stos
test
icebp
imul
stos
and
test
je
ja
iret
adc
dec
outsl
sti
movl
sbb
in
inc
dec
insb
mov
inc
cmc
mov
movsl
pop
jle
out
imul
add
fmull
pop
in
movsb
loop
mov
stc
popa
pop
xchg
or
mov
cmp
notl
sbb
addb
push
shll
mov
hlt
mov
sub
cmpsl
dec
mov
jecxz
aas
das
adc
dec
xchg
cmp
aas
inc
or
inc
cmp
enter
out
out
mov
push
dec
fucomip
pop
popa
pop
sub
hlt
scas
mov
js
mov
scas
jb
and
add
insl
incl
out
adc
adc
sub
xor
dec
xor
fldcw
lret
int
jmp
pop
fldenv
lret
add
subb
inc
sub
add
sbb
sbb
sbb
int
pop
xorb
fistl
sbb
or
or
and
les
daa
pop
fwait
dec
adc
mov
adc
ret
cltd
adc
out
xor
mov
push
scas
sub
leave
jne
mov
enter
mov
xor
gs
in
xlat
fsubp
test
jge
cmp
or
cli
test
xchg
stos
pop
lret
pop
in
jle
fwait
push
mov
cmp
aas
dec
in
outsb
fimuls
lcall
orl
stos
xchg
popa
rcrl
adc
xor
pop
in
sbb
ret
fcompl
es
scas
mov
push
rcll
adcl
stc
and
dec
dec
adc
lock
or
enter
ds
dec
lods
ljmp
xor
cli
or
jp
stc
aam
icebp
and
jmp
je
aaa
adc
mov
pushf
add
jo
mov
movsl
and
bound
push
out
push
lock
mov
outsb
mov
cmp
xchg
outsl
faddp
dec
xchg
inc
les
cmpsb
cmpsb
lahf
xchg
jg
cld
jl
testb
cmp
arpl
loop
dec
xor
out
mov
add
and
call
mov
xor
iret
inc
out
scas
mov
xchg
int
xor
inc
and
aas
adc
jmp
dec
sbb
push
mov
leave
shr
xchg
dec
ret
sbb
stos
push
scas
mov
sbb
mov
push
inc
pop
xor
loop
sbb
mov
push
pop
xor
or
insb
jecxz
sub
fucom
adc
xchg
cmp
shll
mov
movsw
loop
xor
push
dec
je
mov
adc
push
and
add
sub
aaa
clc
mov
jbe
mov
outsb
movd
dec
and
pop
push
or
fldl
xor
mov
ja
push
jbe
lock
cmp
insl
cmp
jp
push
pop
jle
loope
sub
push
lret
push
in
pop
aam
inc
ljmp
push
cmpsb
ror
std
outsl
mov
mov
xchg
add
adc
test
out
mov
or
cli
in
mov
or
mov
dec
mov
inc
pusha
out
adc
imul
sub
ljmp
xchg
cmc
in
pop
loop
sub
aaa
add
sub
push
pop
outsb
sub
fidivrs
mov
fcoml
jb
imul
sbb
out
mov
cld
xchg
pop
pop
mov
pop
mov
pop
push
aas
push
or
xor
addr16
push
push
push
cmp
jecxz
and
movsl
gs
add
sub
inc
aad
popf
leave
mov
mov
movsb
jle
int
mov
leave
jg
mov
xchg
shrb
dec
mov
jmp
ss
sahf
fwait
xlat
mov
jge
aaa
cmp
xorb
fisubrl
lcall
mov
cli
int3
frstor
pop
adc
or
mov
add
in
push
sub
movsb
sbb
pop
jne
scas
fisubs
adc
or
ss
sbb
jb
aad
sbb
pop
xchg
add
cmp
pop
loope
or
loop
fimuls
dec
adc
lea
sub
mov
or
jp
push
xor
sub
insl
pop
xchg
scas
fldl
pop
add
mov
dec
mov
jno
sub
fcoml
mov
jmp
or
stos
stos
dec
and
push
sti
adc
inc
jb
shr
mov
jp
or
lret
in
mov
mov
dec
push
popl
les
mov
mov
ds
jge
sti
mov
cmc
jno
cwtl
popf
sbb
mov
xlat
stc
aam
inc
sub
xor
cli
lds
or
mov
sub
push
in
jl
incl
incb
jl
shrl
sahf
imul
std
lret
dec
out
cs
ds
das
fcoms
movsb
sahf
xor
mov
enter
icebp
scas
pop
sub
mov
cmp
mov
or
negb
or
pop
icebp
jo
mov
leave
xor
scas
mov
movsl
pop
jno
frstor
ret
and
xor
sub
hlt
dec
or
sbb
push
ucomiss
cli
les
in
cmc
cmp
cmp
js
xchg
mov
ds
push
mov
cmp
sahf
cmp
mov
mov
xor
push
jno
add
dec
xor
jl
enter
in
mov
pushf
jle
mov
pop
pop
shrl
sub
dec
xor
popa
push
mov
sub
add
data16
in
jne
inc
and
mov
fidivrl
aam
fldt
adc
gs
push
inc
lahf
sbb
dec
jne
mov
fldt
mov
cmpsl
test
push
pushf
cs
aam
push
mov
aas
loopne
xchg
push
xchg
mov
cs
cmp
fcomps
subb
lahf
jecxz
push
ss
addl
cltd
fiaddl
xchg
movsb
out
dec
mov
pop
insl
mov
movsb
cmc
and
ret
push
cs
mov
jb
mov
mov
push
xor
mov
mov
mov
mov
inc
adc
in
dec
mov
mov
mov
imul
daa
xchg
ljmp
mov
sbb
lahf
jb
pop
sbb
jmp
mov
pop
int3
dec
cmovno
mov
shll
shlb
sbb
out
flds
fs
cmp
mov
inc
std
outsb
insl
adc
inc
loope
hlt
addl
in
pop
cmpsl
nop
mov
dec
ficoms
jg
movsl
add
mov
enter
xlat
xchg
sbb
int
lds
fwait
sbb
leave
xorb
jl
inc
mov
mov
scas
lgs
jo
iret
enter
xchg
sub
pushf
xor
inc
scas
int3
cmp
pop
out
mov
add
sbb
xchg
stos
xor
xchg
loop
sub
dec
out
pop
mov
xchg
jb
loope
push
movsl
pop
bound
inc
sub
lds
inc
repz
cld
adc
mov
in
gs
outsb
sub
jmp
test
subb
dec
sbb
mov
lret
fwait
adc
imul
xor
xor
je
push
adc
pop
movsb
lcall
xor
ficomps
roll
lret
push
out
mov
dec
lahf
inc
sbb
shl
js
shlb
jnp
sbb
or
jecxz
pop
push
test
xor
add
jg
inc
ss
jne
lds
cmp
cmc
in
adc
add
loopne
add
push
xor
cld
and
xor
into
ret
xor
sbb
cmpsl
push
fidivrs
or
ljmp
mov
fldcw
mov
arpl
jl
lods
xorb
test
test
test
shlb
jns
movsl
iret
pusha
jo
xor
out
scas
daa
xchg
mov
xorl
ja
js
adc
fwait
inc
fcomi
call
dec
aas
lret
fwait
scas
mov
xchg
mov
sub
sub
mov
jbe
cmpsb
mov
fists
adc
and
adc
xchg
cmp
pushf
pusha
nop
loop
sbb
jle
mov
hlt
fwait
icebp
sbb
lcall
or
cmp
addr16
jnp
out
push
dec
sub
cmp
and
mov
xchg
and
inc
push
fwait
pop
insb
and
xor
cmp
ja
out
out
mov
imul
repz
xor
mov
xchg
cmp
lds
rclb
mov
pop
push
sbb
fs
cmpsl
inc
jb
mov
aad
outsl
cmc
testl
dec
daa
xchg
push
stos
sbb
xchg
mov
mov
xchg
inc
mov
pop
lahf
inc
adc
jmp
enter
test
cmp
gs
jmp
cltd
imul
icebp
mov
pop
xchg
push
xlat
int3
fwait
mov
jp
pop
imul
sbb
movsl
leave
dec
push
xlat
jns
stos
ds
outsb
movsl
notb
push
into
push
addr16
cmp
loopne
cmp
or
cmp
daa
jnp
and
idivl
lahf
jmp
inc
dec
mov
dec
ds
das
pop
jns
mov
sub
inc
stos
xchg
inc
fildll
xor
sub
testb
dec
add
add
sub
xchg
xchg
ret
std
enter
test
push
jle
test
or
or
nop
or
add
test
and
rcrl
repz
shll
and
and
dec
cs
nop
aam
sub
jo
fs
add
cmp
leave
mov
or
xor
test
insb
hlt
jnp
jmp
pop
cmp
sti
adc
fisubs
outsl
mov
clc
out
mov
cmc
and
orl
stos
mov
add
inc
lock
mov
sbb
inc
lcall
test
adc
or
repz
or
jns
xchg
add
adc
std
aam
ds
pop
fiadds
jb
push
sbb
test
stc
cmp
testb
por
mov
test
enter
xchg
mov
rclb
adc
imul
sub
xor
and
testl
jnp
cld
adc
imul
mov
jns
in
cmp
xor
out
ljmp
adc
das
xlat
inc
out
or
nop
adc
rcrb
mov
dec
ret
icebp
fldlg2
insl
ret
jo
aas
sub
roll
lods
sub
sub
test
pop
loop
cmp
rolb
adc
mov
popa
cmp
loope
push
mov
stos
fcmovnb
int
add
mov
jp
in
iret
xchg
xchg
jne
lods
lods
xchg
push
fisubrs
arpl
mov
shlb
sti
cmp
ret
fldl
pop
addl
push
mov
push
pop
or
push
fmuls
cmc
sbb
mov
stos
jmp
and
ja
and
shll
mul
shlb
lret
orl
fdivr
sbb
lahf
lret
sahf
jp
mov
push
fwait
addb
lret
in
mov
push
insb
pop
flds
popa
call
out
sbb
cmc
push
inc
mov
iret
sbbb
jl
loopne
aad
and
and
stos
adc
es
ljmp
ds
popa
jbe
bound
mov
hlt
ss
jge
movb
in
mov
xchg
inc
jne
mov
jecxz
sbb
xchg
cwtl
mov
stc
cmp
in
mov
andl
mov
mov
adc
cwtl
movsl
fisttps
mov
jnp
roll
push
mov
shlb
ficompl
out
adcl
dec
dec
sub
xlat
call
aam
xchg
cwtl
xchg
push
cmp
mov
mov
int3
jnp
cld
in
stos
mov
jns
fwait
mov
mov
not
cld
lock
out
data16
xchg
push
aaa
mov
cmp
mov
aad
sbb
xchg
in
mov
jmp
or
test
mov
inc
cwtl
jp
sbb
dec
sbb
cld
in
or
orl
test
push
sbb
sarl
dec
mov
pop
push
cmp
xor
out
lods
mov
jns
xor
jno
insl
test
pop
in
shl
divb
xlat
mov
xor
test
dec
lock
ss
cli
pop
stos
xchg
dec
add
mov
add
sbb
sti
sbb
jmp
adc
xchg
jbe
push
pop
mov
xchg
inc
mov
into
aas
bswap
in
xor
inc
enter
xchg
sarb
mov
cmp
pop
cli
pushl
cli
ljmp
xor
sub
pop
sub
lea
lods
stos
arpl
mov
sub
inc
mov
aam
mov
enter
lock
mov
dec
in
push
push
std
iret
cmp
pop
rclb
lods
pop
stc
cli
adc
loop
mov
idivb
aas
mov
loop
in
and
sarl
outsl
outsl
je
jecxz
cwtl
shll
cmp
ret
cli
sbb
xlat
xchg
mov
sbb
inc
insl
stc
mov
dec
jle
decl
inc
mov
insl
mov
xchg
cmp
and
jmp
mov
jp
div
sub
push
out
fstps
dec
add
lret
fwait
xor
xchg
pop
fisubrs
inc
and
mov
cmp
sarl
inc
clc
out
jle
dec
repnz
out
cmp
xchg
inc
stos
lahf
fisubs
sub
mov
ret
shl
push
fmull
jo
test
in
in
scas
cmc
pop
aad
sub
mov
out
andb
pop
xchg
lahf
repz
fdivr
sbb
lret
add
mov
bound
pop
stos
push
and
mov
push
inc
imul
in
xchg
jp
mov
int3
aam
mov
jmp
repz
lret
and
test
enter
idivl
or
cmp
push
divl
popa
std
dec
fwait
push
hlt
ret
adc
add
stos
test
lahf
scas
je
clc
mov
leave
jle
repnz
lahf
mov
and
inc
out
repnz
ds
fstpt
mov
dec
aaa
push
call
imul
inc
roll
cwtl
ljmp
jo
popa
xchg
xchg
clc
outsl
rcrb
cmp
fmuls
cld
ljmp
jge
dec
cmp
popa
add
push
in
mov
fxch
scas
cltd
inc
fcoml
sub
data16
hlt
and
cltd
mov
sub
cltd
iret
fdivs
adc
cmp
leave
jnp
inc
jg
jmp
in
xor
sbb
xchg
shlb
push
jmp
enter
sub
fucom
scas
stc
out
lods
hlt
add
or
dec
add
pop
call
xor
jbe
adcb
movsl
leave
push
pushl
out
test
call
fdivrs
fbstp
and
pop
and
mov
dec
inc
sub
dec
lods
lret
jns
push
pop
es
leave
mov
fs
in
jmp
lea
pushf
ljmp
lcall
test
jge
pusha
jmp
icebp
aam
loop
fisttpl
in
jb
mov
and
loope
in
repz
dec
loope
aaa
xor
dec
dec
xchg
pop
xor
mov
jecxz
int
punpckldq
mov
mov
sub
call
xor
or
jo
jecxz
pop
xor
ficoml
mov
sysexit
adc
jg
gs
pop
dec
dec
and
sub
sti
outsb
jo
outsl
dec
mov
jp
dec
sbb
mov
sbb
lea
or
pusha
shrb
in
movsl
testb
xor
inc
dec
das
mov
xor
aam
ja
mov
mov
aam
popa
cmp
push
sub
and
lods
inc
lahf
sbb
mov
ds
pop
pusha
mov
insb
jg
mov
cltd
inc
clc
pop
das
test
into
mov
cmp
popf
sub
rcll
add
fisubrs
enter
dec
sub
inc
xor
inc
sahf
mov
insb
pushf
dec
testb
in
pop
add
testl
jecxz
stc
sub
sub
popf
out
loopne
mov
pop
cmp
xchg
cmc
add
pop
into
adc
push
dec
out
jle
jmp
cld
mov
ficomps
inc
daa
pushf
lea
shl
jmp
dec
addr16
pop
mov
cmp
pop
ret
pop
push
add
mov
xor
out
add
mov
dec
ds
push
mov
sbb
push
imul
pop
aam
push
popa
les
add
das
push
in
mov
ret
mov
ret
cmp
rorb
fs
in
cmc
outsb
cmp
add
add
shll
xchg
inc
mov
pop
sahf
and
inc
fidivl
push
fcoml
ljmp
insl
je
pop
hlt
out
mov
dec
push
dec
jbe
pop
sbbb
dec
jae
mov
cmp
cld
dec
icebp
in
sub
mov
ss
in
jge
sub
cs
aaa
push
sub
cs
mov
jns
mov
xchg
mov
ud0
pop
pop
fcompl
inc
add
dec
xorb
and
das
and
xchg
lods
stos
dec
in
inc
adc
cmpsl
call
cmp
pop
in
sbb
jae
arpl
sarb
dec
xor
stos
mov
sbb
imul
and
das
ret
stos
push
sbbb
pop
mov
adc
nop
gs
dec
insb
rol
xchg
sub
cltd
xchg
sahf
jo
cwtl
lods
rclb
xbegin
imul
movsl
cs
dec
notl
xchg
lds
insb
cmovb
sahf
std
clc
mov
adc
adc
push
imul
sbb
pushf
and
rcrl
jae
cltd
cmp
dec
dec
xchg
mov
push
fldt
mov
stc
out
es
xor
push
push
scas
dec
and
mov
repz
mov
les
or
xor
test
and
or
adc
push
mov
ficomps
or
mov
push
nop
mov
sbb
pop
getsec
jnp
xchg
pop
out
rcrb
fstpt
dec
subb
jne
or
ds
cs
icebp
mov
mov
fwait
inc
aad
mov
scas
xchg
mov
push
dec
sarl
pop
movsb
xor
lret
xor
xorb
scas
pop
sub
dec
les
outsb
push
outsl
inc
fs
add
jge
cmp
xchg
xchg
sbb
sub
addr16
jge
push
pop
xor
xlat
or
sarb
out
bswap
dec
sub
push
loopne
arpl
fwait
sbb
jbe
fbstp
mov
dec
les
daa
fldenv
push
int
pop
dec
stos
out
cli
pop
lea
add
popf
or
int
sti
sbb
sub
and
mov
or
mov
cmpsb
popf
nop
stos
mov
cwtl
jae
or
ss
push
xor
ds
and
or
stos
xchg
mov
mov
rcrl
or
jne
cmp
mov
and
dec
std
outsb
arpl
cmp
enter
and
xchg
lea
mov
adc
ja
inc
add
sahf
sbb
mov
nop
cmc
xlat
ret
je
mov
out
lods
cmp
adc
inc
sub
out
out
shlb
pop
sub
jp
in
rep
outsl
aaa
loop
lret
sub
and
sar
fbld
out
daa
cld
sub
adcl
sbb
and
call
dec
sbb
inc
mov
push
jbe
dec
into
mov
dec
jl
push
sbb
push
inc
adc
or
popf
in
inc
adc
sahf
dec
mov
xchg
mov
shl
rep
les
test
and
xchg
cmpsl
mov
mov
mov
or
in
push
inc
jmp
xchg
stos
nop
movsl
xor
and
cmp
shr
aaa
adc
mov
dec
addr16
daa
addr16
test
enter
cld
fcompl
lret
cmp
pop
adc
dec
pop
mov
aaa
in
lods
or
sbb
adc
sub
pop
and
jg
xor
mov
adc
scas
or
sbb
ss
outsb
adc
mov
sbb
mov
lds
push
dec
adc
add
std
inc
xor
mov
push
loop
pushf
test
repz
out
mov
dec
jecxz
lcall
xor
push
leave
icebp
xchg
pop
dec
sub
pop
mov
cmp
adc
and
xor
in
addr16
mov
mov
scas
push
adc
add
outsb
adc
dec
lcall
and
movsb
pushf
dec
pop
out
orb
fnstenv
sub
xchg
fsubrs
push
dec
adc
add
xchg
test
dec
inc
lods
cmpsl
hlt
mov
repz
outsb
cli
sahf
int
xchg
gs
lea
jp
arpl
cld
jg
rcr
sub
in
fs
leave
aas
repnz
pop
daa
dec
cmp
iret
push
hlt
pop
dec
call
sub
ret
hlt
mov
fwait
leave
sub
add
hlt
dec
sbb
das
or
mov
pop
outsl
and
mov
pop
sbb
enter
cmp
or
bound
push
andb
mov
cld
loope
aam
push
cld
cmp
xchg
fcomi
subb
jne
insb
cmp
addl
int3
call
movsl
cmpsl
push
and
imul
mov
sbb
xlat
bound
adc
cmp
imul
xchg
jl
xchg
in
gs
daa
xor
sub
scas
repnz
ljmp
push
aad
scas
ret
ret
push
enter
sbb
mov
mov
dec
inc
inc
mov
sahf
mov
in
xor
dec
jns
dec
push
xlat
push
add
xchg
mov
jae
dec
fnsave
enter
mov
pop
dec
rcll
push
ljmp
jecxz
xchg
in
cs
iret
mov
jne
pop
addr16
aas
aam
inc
and
or
lahf
jmp
push
out
mov
inc
sub
xor
add
out
and
arpl
repnz
aad
or
jp
xlat
loopne
pop
fistps
bswap
mov
rcr
pop
mov
lret
jo
xlat
adc
dec
jecxz
add
imul
pop
cli
movsb
scas
xchg
or
jnp
outsb
xchg
xlat
push
iret
stc
adc
popa
jnp
test
lret
add
add
aas
lret
das
xchg
repz
scas
push
sbb
and
jge
mov
add
adc
mov
outsl
fwait
arpl
push
and
fiaddl
cmp
dec
mov
inc
cmp
lcall
cli
xchg
clc
and
jl
lock
jb
fst
push
mov
jl
jge
mov
inc
scas
pop
jns
decb
mov
jo
cmovo
add
push
cmp
xchg
dec
imul
sub
push
jne
xor
mov
add
or
cmc
or
aaa
sti
jno
stc
push
subb
test
cwtl
sbbb
imul
inc
jbe
or
pop
inc
daa
mov
out
cs
dec
mov
push
test
cmp
mov
mov
sbb
insl
jne
in
inc
ret
ret
dec
cmp
clc
fwait
cwtl
mov
and
lods
inc
pop
mov
lea
cmpb
lcall
add
xlat
add
imul
mov
pop
or
sub
or
mov
mov
mov
jmp
js
outsl
int
inc
cmc
lcall
fimull
jg
mov
adc
cmp
dec
sub
adc
cmpsb
xchg
sub
add
das
bound
out
jne
ss
mov
test
push
adc
dec
cmp
push
xchg
sbb
imul
push
in
stos
daa
and
and
and
mov
jbe
sbb
repz
pushf
sahf
outsb
sub
push
pop
repz
and
jmp
cmp
in
add
mov
push
jl
test
xor
insl
jp
mov
shll
ja
and
mov
ds
add
fwait
adc
outsl
sbb
in
test
js
sbb
dec
shlb
inc
fnsave
das
dec
je
notl
or
dec
js
js
lret
jbe
pop
ds
add
test
js
and
sbb
add
lret
iret
sbb
sbb
fildl
sub
jg
cmpxchg
mov
bound
movb
out
sub
stos
xor
jmp
push
push
or
add
in
and
mov
push
mov
xchg
mov
push
insl
pop
cmp
push
adc
movsb
push
push
cld
shl
push
adc
sbb
adc
popf
mov
mov
mov
mov
popf
jge
call
mov
xor
es
ret
outsb
sbb
inc
jle
jno
push
sbb
sahf
pop
fildl
sahf
add
movsb
sbb
mov
push
mov
cmp
rolb
dec
arpl
xor
dec
loope
in
jae
push
stos
pop
xlat
xchg
scas
cmp
jg
cmp
xchg
inc
cld
inc
jmp
pushl
shll
pop
gs
stos
dec
push
insb
xor
sarb
cs
jecxz
inc
loopne
dec
fisttpll
rcrl
imul
adc
mov
mov
nop
shlb
adc
xchg
dec
inc
andb
fcmovb
mov
rdmsr
sub
lcall
inc
shrb
bswap
mov
push
stos
xor
popf
push
inc
jnp
mov
xor
or
je
jle
in
test
andb
shrl
push
add
lcall
sahf
mov
add
in
mov
sub
lods
mov
dec
jmp
mov
or
sub
cli
cmp
sub
lahf
movsl
adc
cwtl
lock
aad
insb
dec
cs
notl
or
repnz
or
sbb
xor
ja
jne
in
cmc
pop
dec
pop
sub
mov
or
push
loopne
sub
dec
pop
push
out
xor
pop
stos
inc
mov
push
push
dec
pop
ljmp
sub
fistl
sub
std
jle
cs
mov
cmp
push
xchg
jns
into
fwait
jno
andl
mov
fwait
out
ljmp
mov
pop
iret
jnp
shlb
or
mov
mov
inc
ljmp
sahf
or
pop
je
mov
in
insl
insl
rorb
add
mov
push
ljmp
enter
lods
mov
xor
and
push
incb
pop
test
fnstenv
movsl
out
lret
aas
mov
out
xor
adc
nop
add
inc
sub
mov
mov
pop
dec
xchg
out
jl
loopne
sub
cmpsl
test
dec
insl
xchg
inc
jge
cmpsb
push
dec
test
jg
mov
sbb
sbb
scas
shrl
lods
mov
rcr
jns
addps
data16
movsb
ret
fadds
mov
shr
pop
add
push
and
lret
ret
or
repnz
jmp
push
es
add
and
xorl
sar
aam
insl
mov
and
mov
cmpsl
popf
xor
lea
mov
sub
add
ret
mov
lods
cwtl
cwtl
pop
out
in
inc
sbb
sub
outsl
cmc
pop
xchg
je
lods
fdivrs
fs
scas
sbb
adc
add
adc
sbb
add
sbb
add
inc
out
push
add
out
xchg
pushf
jle
add
push
data16
out
andb
scas
pop
pop
gs
rcrl
or
pop
xchg
cmp
inc
jge
dec
cmp
or
adc
xor
sub
mov
aas
jo
push
xlat
and
xchg
mov
cmp
sahf
or
push
sbb
cmc
cmp
mov
jge
rclb
and
loope
xchg
std
cs
jmp
jae
and
push
xchg
mov
hlt
mov
dec
jle
mov
push
es
mov
mov
std
mov
lea
pop
ds
in
jo
fnstcw
jo
xchg
pusha
movsl
stos
test
nop
or
insb
pop
test
xchg
push
inc
inc
pusha
cmpsb
sub
ror
ss
mov
sbb
mov
movsb
jnp
aam
cmp
pusha
or
lock
pushf
adc
lds
mov
add
movsl
dec
test
scas
call
daa
jno
fistpl
jmp
imul
int3
cmc
mov
adc
mov
stos
mov
mov
stos
mov
or
dec
dec
dec
mov
sbb
push
sti
imul
mov
outsl
in
push
xor
sbb
aas
jmp
ljmp
inc
cmc
in
mov
lock
ja
pusha
sub
xchg
xor
fs
fsubs
aaa
mov
sub
sub
sbb
push
stos
inc
sub
jnp
not
scas
push
xchg
xchg
je
dec
xchg
push
xlat
mov
pop
enter
ffree
fnstcw
xchg
cmpsl
daa
mov
mov
nop
cwtl
dec
sub
cld
cmp
jo
cmc
mov
je
adc
inc
jle
xchg
cmp
push
cwtl
mov
lock
lock
aam
jo
outsl
jns
pop
xchg
int
cmp
aam
leave
pop
insb
outsb
pop
lcall
pop
mov
mov
mov
fmull
adc
sub
lahf
mov
jg
dec
insl
pop
xchg
pop
out
pop
xor
pop
inc
pusha
fsubs
dec
ss
and
push
shlb
outsl
mov
fnstenv
inc
movsb
add
mov
cmp
sub
test
aam
push
test
stos
sbb
pop
xor
ret
xchg
repnz
popf
fs
pop
mov
ds
test
or
push
clc
dec
fwait
sbb
push
push
push
mov
lret
scas
xlat
fmulp
mov
jecxz
or
stc
dec
test
loop
mov
push
cli
orl
xchg
lods
out
jmp
in
mov
mov
idiv
inc
add
jl
push
push
cs
xchg
and
adc
adc
outsb
ja
clc
cmp
add
loop
int
pop
and
ljmp
sub
rclb
enter
push
out
inc
cs
rclb
cvtdq2ps
rorb
in
xchg
ret
jo
nop
test
cmp
mov
loop
jl
xorl
mov
jne
xor
aad
push
sub
pop
and
xchg
lret
cmp
or
xorb
fstl
sbb
pop
push
xor
pop
arpl
aas
sbb
pop
cmp
push
or
xlat
movsl
and
loop
jecxz
das
adc
or
cmp
popf
shrl
je
rorb
int3
call
mov
cmp
add
pop
mov
in
aad
data16
shlb
mov
xor
mov
cmpsl
xchg
push
or
pushf
pop
les
test
mov
add
mov
sub
sarb
repz
shll
jl
pusha
aas
mov
xor
lods
push
in
adc
and
iret
iret
push
test
xchg
jl
adc
cli
push
jg
xchg
pushf
mov
dec
inc
or
pop
sbb
clc
mov
ljmp
cli
ja
shlb
das
mov
lods
pop
out
jmp
pop
ret
sub
sbb
jbe
mov
push
xchg
jecxz
cmp
fisttpll
add
push
mov
sbb
bound
lret
mov
mov
movsl
inc
mov
outsl
stc
fsubrl
jl
push
and
or
xchg
insl
sub
pop
test
inc
push
scas
into
mov
call
inc
push
jge
xchg
sub
inc
sbb
adc
jecxz
cmpb
fstpl
mov
jmp
lods
out
int
test
out
faddl
xor
daa
in
icebp
mov
std
pavgw
xchg
out
call
not
out
mov
std
into
test
sahf
or
fldcw
cmp
mov
rorb
sbb
cmp
add
jbe
jb
push
je
sbb
mov
jl
mov
dec
mov
orl
neg
pop
data16
movsl
rcrb
aad
les
sbb
sbb
adc
pop
sub
loop
jno
mov
daa
sbb
adc
adc
shlb
add
jle
jne
or
pop
and
insb
xchg
dec
xor
add
jo
mov
int
sbb
pusha
mov
shrl
cs
sahf
jae
mov
sbb
push
cs
mov
shrl
add
sub
lock
jno
outsl
test
mov
ffreep
andl
test
cwtl
and
cld
fstl
enter
jl
xor
loopne
push
push
scas
enter
sti
inc
pop
mov
or
xchg
loop
std
add
test
push
mov
xchg
lahf
inc
add
xchg
add
mov
mov
pushf
stos
mov
xor
icebp
sbb
and
std
pop
dec
sbbb
cmp
xchg
fstps
sub
and
movsl
jbe
inc
hlt
mov
aaa
sub
mov
jno
out
sub
subl
testb
into
shrb
cmp
call
mov
pushl
je
adc
ljmp
rorl
push
xor
dec
pop
mov
add
cmpl
cmp
int
je
rorl
fcoms
push
daa
add
mov
shrb
xor
push
push
je
xchg
shlb
ja
sarl
mull
popf
inc
ret
sbb
push
push
pushf
call
je
cmc
in
add
int
insl
xor
cmp
push
add
dec
push
jno
bnd
or
jle
cmc
cli
ror
push
add
pcmpeqd
pop
sbb
add
dec
sbb
jbe
les
lcall
aas
ret
rclb
stos
sbb
daa
xchg
mov
xor
mov
sti
jg
pop
sbb
push
cmpsb
lock
dec
mov
jno
dec
push
bound
push
pop
inc
shlb
mov
loop
dec
xchg
fsts
sbb
fcoms
popf
pop
sub
mov
or
iret
enter
xor
and
mov
push
add
pop
mov
das
jnp
xchg
xchg
xchg
roll
inc
fidivrs
cwtl
cmc
lret
mov
xchg
rclb
push
rclb
adc
dec
in
fisttpll
lods
dec
shlb
xor
xchg
mov
iret
jmp
cltd
xor
aad
jno
aaa
xor
into
out
scas
pushf
xor
xchg
lock
and
sti
jne
fsubs
into
xlat
ljmp
cmpb
inc
insb
inc
fldln2
ss
add
rcrl
jmp
notl
mov
es
pop
loopne
jg
fsubrl
mov
ret
mov
out
shlb
sbb
insl
idivb
ficoms
push
mov
jns
pop
and
and
adc
call
push
sbb
cmpl
xchg
mov
rep
xor
test
jecxz
and
push
mov
mov
mov
nop
cmp
push
jmp
mov
dec
adc
xchg
xor
dec
sub
mov
fisttpll
cmp
mov
icebp
inc
loope
notb
test
xchg
repz
std
in
pop
into
int
ljmp
mov
sub
popa
sti
xchg
hlt
sub
clc
mov
aas
popf
mov
jle
mov
dec
lcall
frstor
push
out
rorb
cld
adc
mov
lret
jmp
movsl
xor
hlt
hlt
lods
xchg
outsl
into
jge
mov
mov
jl
scas
loope
sub
jnp
cmpsl
or
arpl
cmp
in
rcrl
addl
jg
mov
clc
test
fsubrs
mov
sbb
dec
loop
sub
das
jbe
fidivrl
fldcw
push
xor
jp
movl
sbb
int3
jl
flds
outsl
int3
leave
adc
loop
push
jne
addr16
ss
and
repz
iret
push
xchg
adc
shrb
ds
adc
call
cmp
scas
test
test
enter
pop
add
adc
and
jle
jg
cmp
std
cmc
push
aam
mov
lock
mov
mov
mul
mov
icebp
jne
jnp
decb
shll
inc
stos
sahf
call
mov
sbb
in
orb
xorl
call
sub
loopne
sbb
stos
outsb
or
push
aas
jle
pushf
pop
and
stc
lret
pop
adc
into
stc
out
cmpsl
into
pop
adc
test
in
fstps
jnp
sub
push
mov
sub
add
les
xchg
push
into
add
inc
sbb
out
arpl
pusha
mov
icebp
out
fnstenv
pop
mov
adcb
cmp
cs
jno
jmp
and
ret
or
xchg
dec
mov
sti
xchg
lcall
enter
mov
adc
mov
cmp
mov
jns
add
vsubss
jne
in
leave
xchg
ret
ja
lret
xchg
repz
sbb
das
mov
jecxz
xlat
mov
lds
test
popa
sub
jnp
xchg
fdivrl
xlat
aaa
ss
iret
mov
push
xor
jp
lock
scas
mov
jl
push
sub
cld
aaa
dec
pop
repnz
jge
or
xchg
pop
adc
insl
lret
mov
and
bound
popf
mov
mov
sti
fisttpll
xor
sbb
lret
jmp
lret
pop
jp
and
sub
mov
pop
test
adc
icebp
xchg
adc
pop
out
insb
loop
jae
mov
sub
ja
add
cmc
mov
xchg
push
mov
jbe
cld
cmp
hlt
lret
rclb
or
sti
inc
sahf
jo
xchg
cltd
rcrb
jge
psllw
mov
sbb
pop
cli
jg
popa
inc
stos
cmp
mov
inc
mov
sahf
fs
sbb
ss
int3
add
stos
fsubp
insb
sub
inc
pop
out
adc
xchg
pusha
lds
call
cmp
xor
lods
lock
pop
je
jnp
mov
xor
sbb
imulb
pop
push
stos
nop
push
xor
lds
fisubs
gs
in
in
mov
inc
popf
test
cmpb
mov
lods
jmp
sub
mov
enter
scas
lret
dec
fst
push
sub
test
pop
cmp
std
xorl
es
sub
inc
test
aad
std
pop
cmp
lret
sub
mov
mov
lods
mov
inc
jb
sbb
scas
pushf
mov
sbb
daa
fidivrs
mov
push
insl
sub
or
addl
push
lret
mov
cld
sbb
addb
mov
and
in
mov
cmpsl
jne
dec
add
iret
pop
or
push
jmp
mov
data16
imul
push
mov
mov
outsl
pop
xchg
adcl
cmp
movsb
push
arpl
movsb
out
in
mov
es
xchg
or
shll
mov
push
sub
fmuls
orl
mov
ljmp
cltd
and
test
repz
inc
lret
lea
mov
icebp
ficoml
sbb
test
mov
mov
cmp
xchg
xor
stc
adc
and
jmp
add
sub
testb
out
cmc
lea
xchg
cli
cmp
fcomp
dec
push
das
ss
pop
and
pop
pop
popa
pop
jnp
test
and
sub
dec
out
add
repz
xor
ret
and
xchg
or
gs
repnz
into
outsb
push
pop
rcrb
enter
mulb
outsl
das
pusha
jle
rolb
outsb
mov
loopne
mov
das
mov
pop
or
cltd
ret
js
sbb
lret
pusha
ljmp
stc
jg
sub
or
jge
ret
and
leave
bound
and
sar
out
xchg
filds
push
push
sub
out
adc
testb
pop
fcomip
inc
shrb
in
or
cwtl
ret
imul
xor
rep
es
cwtl
das
popa
inc
pop
lds
sub
or
cld
jns
gs
push
icebp
scas
enter
cmp
daa
popa
xchg
lods
cmp
cwtl
sbb
es
repnz
add
add
mov
mov
or
pop
mov
test
push
adc
sahf
mov
xchg
and
test
in
and
loope
pushf
imulb
arpl
pop
testb
test
pop
inc
add
inc
mulb
pop
cld
in
fdivrs
mov
pop
adc
decb
cld
mov
fimuls
lock
fstpl
clc
dec
stos
int3
das
call
ret
bound
mov
sub
mov
inc
push
cmpsb
ja
or
ds
pop
lods
jb
shrb
gs
pop
call
xor
ror
xor
adc
cmp
add
add
adc
mov
rolb
fsubrl
outsb
cmp
xchg
dec
sub
js
pop
push
imul
jnp
repnz
mov
push
xchg
sub
pop
mov
test
push
outsl
add
xchg
leave
jno
ret
mov
cli
jl
jns
push
dec
sub
into
stos
mov
es
insl
mov
lcall
fs
mov
pop
push
clc
mov
add
les
adc
sbbb
mov
loope
adc
dec
sub
das
jne
or
mov
pusha
xlat
pop
stos
add
mov
gs
fisttpl
mov
call
fcmovu
std
mov
mov
push
roll
lock
xchg
xor
mov
push
push
push
out
pop
arpl
push
lods
mov
lret
push
jbe
pop
mov
xchg
and
inc
lea
cmp
hlt
lcall
arpl
out
roll
movsb
sbb
jno
rclb
mov
sbb
ret
push
mov
xchg
adc
icebp
test
sub
sub
test
xor
jmp
jae
iret
push
loopne
jnp
sahf
in
inc
movsb
and
loope
subl
jge
call
outsb
add
fnsave
adc
xor
in
leave
insl
push
add
push
fmull
out
push
dec
sbb
pop
repz
pop
xor
dec
cmpsb
add
mov
jle
sub
or
mov
xchg
jmp
mov
mov
test
out
shr
xlat
or
clc
push
xor
sbb
sbb
cmp
in
clc
mov
jne
mov
xchg
scas
mov
cli
ja
popf
push
dec
cmp
mov
shlb
xor
scas
dec
jecxz
fxch
fidivrs
or
test
mov
arpl
push
dec
pop
xor
add
pop
push
out
inc
cmp
xchg
dec
dec
data16
add
mov
filds
jb
push
cmc
pop
pop
sub
lret
mov
and
mov
sahf
xor
sbb
xchg
pop
cmp
mov
cmp
repz
inc
pusha
aas
fsubs
roll
inc
lret
pop
ljmp
cwtl
xchg
cmp
pop
dec
repnz
je
movsb
mov
mov
xor
inc
push
sub
sub
mov
inc
jne
and
imul
mov
push
jl
mov
mov
mov
mov
mov
popf
subl
xchg
incl
data16
orl
scas
pop
dec
sarb
xchg
push
add
adc
pushl
orl
mov
lcall
cs
xor
add
dec
and
iret
ds
es
or
loopne
jne
adc
pop
js
jecxz
cmp
std
and
out
or
out
call
int3
xchg
es
mov
inc
mov
xor
push
int
pop
pusha
mov
ss
and
lods
add
rcrb
and
sahf
aad
mov
cmpl
ret
mov
xor
ret
nop
lods
hlt
adc
mov
inc
and
jge
xor
pop
dec
jb
xor
inc
lea
in
sbb
mov
bound
push
fstps
jo
ds
scas
mov
mov
jg
cmp
in
adc
dec
push
cltd
int
das
xor
pop
inc
and
xor
sub
mov
and
jnp
jg
push
clc
test
mov
dec
pop
add
mov
in
shlb
pop
inc
lret
xchg
push
or
adc
ffree
jl
inc
sbbl
ret
jno
sbb
daa
add
cmp
mul
and
push
test
pop
sbb
sbb
shrl
push
dec
xchg
pop
mov
ljmp
fisttpll
scas
mov
je
jecxz
sub
loopne
mov
popa
or
stc
loop
jecxz
movsl
cmpsl
ljmp
and
adc
jge
shrb
cmp
rorl
inc
adc
xchg
loop
sbb
xor
pop
dec
xor
mov
cmp
cli
arpl
stos
cmpsl
orb
nop
or
xor
mov
loope
test
mov
idivl
lods
cmp
fwait
dec
mov
cmp
sbb
test
mov
pop
jae
and
sub
mov
mov
mov
mov
dec
cmp
sahf
adc
and
inc
bt
fistpll
xor
int3
xor
ret
out
push
in
mov
lock
or
ret
mov
repnz
nop
sub
stc
in
mov
fcoms
fldl
addr16
sqrtps
filds
dec
aas
mov
inc
jno
pop
cmc
loop
enter
xchg
inc
call
xor
and
xor
inc
jl
lods
and
icebp
ficomps
jecxz
outsb
mov
imulb
mov
leave
dec
out
cmpsb
jae
scas
sub
subl
jg
cmp
lods
loopne
call
adc
mov
add
add
mov
das
sbb
ja
dec
mov
xor
cmpsb
and
or
xlat
sub
repnz
and
mov
xchg
ljmp
cmp
and
enter
cwtl
inc
inc
inc
or
iret
lcall
daa
push
and
test
mov
push
and
and
js
push
pop
pop
jb
jle
and
mov
push
cmc
iret
arpl
fildl
nop
daa
inc
inc
or
test
jno
rcrb
jnp
pop
add
or
or
test
sarb
or
jmp
outsl
popa
xchg
insb
leave
or
cwtl
shl
and
ljmp
mov
sub
mov
and
adc
xor
out
shll
ret
sub
jecxz
loop
ficoms
ror
push
pushf
aam
adc
pushf
nop
lahf
xor
adc
inc
iret
lcall
mov
lcall
stos
mov
orb
inc
pop
pop
cmp
and
enter
fstpt
int
sub
pop
xor
mov
imul
and
xchg
mov
jp
movsl
gs
sti
fld
push
ret
sub
in
test
xor
adc
sbb
sub
gs
int
mov
jmp
pop
pop
lock
cmp
lods
dec
lcall
arpl
fisttps
sub
test
xchg
stos
dec
xchg
and
insl
test
and
jbe
shlb
sbbb
or
sbbb
out
or
mov
push
sbb
jle
fimuls
dec
mov
inc
adc
inc
xchg
js
ja
push
add
icebp
push
push
mov
lock
dec
jecxz
and
mov
roll
shr
sbb
fs
cli
pusha
pushf
nop
sub
imul
ds
fcomps
mov
jne
rcrb
sub
xor
ret
jne
push
insl
xor
into
in
std
imul
shl
cmc
sub
sbb
andl
aam
cmp
aad
scas
inc
xchg
xor
xor
cmpsl
imul
mov
push
mov
cwtl
pop
dec
shrl
repnz
fmuls
es
xchg
js
mov
insb
inc
pop
mov
in
sub
sbb
push
stc
call
mov
jp
lods
cmpsb
addl
cmp
mov
mov
mov
xorl
popa
mov
js
and
inc
out
cmp
or
xlat
add
test
or
xor
add
jb
inc
aam
in
js
or
or
andb
ror
inc
mov
int3
jb
es
inc
testb
ja
int3
test
jno
nop
jp
mov
lcall
bound
inc
ud1
int3
jl
movsb
fwait
jne
sahf
add
push
arpl
sub
dec
jbe
sahf
dec
aaa
insl
lods
push
mov
out
das
or
idivl
xlat
and
stc
adc
mov
sarb
dec
into
pop
movsb
add
test
jp
push
outsb
dec
lcall
fisttpll
sarl
lahf
stc
fidivl
js
sub
xlat
adc
jmp
popf
ljmp
mov
cmpsl
cmpsl
pushf
or
jp
fdivrl
and
push
jae
mov
or
ja
das
mov
mov
or
pop
xor
outsb
jmp
int
pop
fs
loopne
mov
lcall
add
inc
push
push
push
inc
push
sub
pop
leave
cltd
les
pop
loopne
fwait
std
lret
sbb
out
int
dec
xor
dec
dec
jecxz
pop
mulb
inc
cs
stc
fwait
xchg
inc
mov
shl
inc
mov
lock
mov
lock
loope
xor
sub
mov
popf
ss
pop
bound
dec
dec
sbb
je
add
lods
jl
fcmovnb
pop
push
out
pop
jl
push
cmp
mov
lods
out
hlt
pop
mov
lret
sarl
fisubl
add
insb
xchg
adc
std
in
cltd
cmpl
and
call
xchg
lret
jecxz
arpl
push
movsb
das
xchg
icebp
xchg
push
arpl
andl
rolb
cwtl
push
pop
or
pop
repnz
aaa
lock
sti
adc
inc
xor
push
inc
popa
int
push
insl
inc
lock
pop
cltd
ror
push
mov
xorb
aas
into
xor
mov
fmul
bound
pop
and
mov
inc
sub
and
inc
scas
ret
mov
repz
test
cmpl
lret
inc
sub
mov
inc
fcomip
shll
test
js
dec
loope
lock
in
aas
pop
jno
stc
mov
pushf
push
ret
mov
sahf
es
out
imul
in
mov
xor
aas
xchg
insl
mov
push
xchg
aas
adc
pop
mov
push
je
imul
mov
repz
popa
mov
pop
jae
inc
push
jp
lds
cmc
mov
aas
or
out
ret
mov
in
mov
rep
fidivs
jnp
jmp
nop
cmp
xor
movsl
pop
push
bound
test
popa
dec
jmp
pop
cld
int3
lret
loope
mov
xchg
sub
lock
mov
mov
cwtl
lret
jecxz
mov
add
xor
dec
repnz
loopne
adc
inc
gs
mov
lds
dec
xchg
arpl
dec
scas
outsb
mov
dec
pop
adc
inc
rol
jo
mov
adc
xchg
in
outsb
inc
push
outsb
movsl
repz
push
or
sarl
mov
test
lret
cwtl
imul
adc
or
xor
fs
inc
push
aas
test
sbb
inc
cmp
push
adc
xchg
stos
lods
mov
pop
sbb
mov
mov
sbb
mov
sbb
push
decb
outsl
out
ficompl
andb
pop
and
aam
lcall
iret
mov
inc
adc
mov
xchg
add
inc
fnsave
adc
ja
and
fiadds
out
les
sub
or
sahf
xor
xor
push
lods
xor
dec
mov
fdivr
inc
xchg
push
fimuls
adc
inc
cmp
cmp
mov
jbe
jae
orb
xchg
push
aas
ffreep
xor
sub
pop
popa
mov
mov
clc
mov
pop
mov
or
push
pop
push
inc
aam
cmp
movsl
in
les
notb
mov
sub
mov
aad
insb
call
loopne
mov
push
sub
jg
sub
popa
stc
int3
sub
mov
dec
mov
add
loopne
xor
sub
cs
arpl
and
sahf
pop
mov
test
nop
nop
fstps
ds
cld
sbb
push
scas
add
push
jg
or
pop
inc
adcb
push
add
cmp
push
test
adc
dec
aaa
stos
dec
jno
xchg
arpl
xor
jns
cltd
cld
mov
or
dec
pop
jnp
enter
sbb
mov
cmp
cli
stc
loop
lds
pusha
iret
sbb
push
push
dec
xchg
lcallw
cwtl
sahf
pushf
cmp
cltd
in
lock
fs
sbb
sub
test
jle
and
fdivs
insb
jecxz
jp
cs
xchg
or
into
xor
repnz
add
mov
sahf
lret
dec
dec
stos
es
sub
cmovp
cmp
inc
sub
popa
xchg
xlat
lods
cmp
and
jecxz
rcrb
add
mov
mov
je
mov
jo
push
pop
pop
cltd
jg
mov
sub
lcall
mov
insl
ret
stos
in
cmc
fwait
mov
add
pop
pop
sti
pop
bound
sti
pop
pop
bnd
jge
and
mov
cld
sub
mov
lds
xor
mov
out
in
xchg
jnp
push
push
adc
popa
xchg
xor
les
adc
ja
arpl
les
fisubrl
mov
int
mov
in
sub
xlat
fnstcw
fsubrl
dec
push
gs
cli
clc
cwtl
cmp
jb
cmpsb
and
jge
movsb
mov
push
mov
cmpsl
and
lcall
push
insb
fldt
scas
sbbb
fs
call
test
cs
jae
push
jne
jae
and
cmp
sti
inc
ljmp
dec
inc
xchg
dec
cmp
hlt
cmp
mov
pop
sub
ds
inc
push
jmp
push
sub
mov
lods
cmp
push
inc
rcl
lods
lret
dec
movsl
add
or
push
xor
aam
movl
sub
pop
ret
hlt
pop
sub
mov
inc
fldl
js
jle
add
clc
mov
gs
lods
bswap
stos
pop
out
aad
cmpsl
dec
cltd
adc
or
insb
notl
or
nop
mov
lret
aad
imul
sbb
pop
arpl
dec
inc
xchg
xchg
add
mov
xchg
repnz
testb
mov
xchg
mov
in
repz
cmp
add
jnp
push
arpl
dec
and
sub
dec
jae
stc
iret
ds
xlat
testl
dec
inc
inc
mov
aad
xchg
mov
stos
adcl
add
int3
gs
fdivrp
sbb
add
aaa
cmc
loop
push
xchg
cmp
jae
push
add
movsb
scas
movsl
mov
pop
fsubrp
lret
test
mov
or
ret
ljmp
loop
jbe
sbb
xchg
test
jl
cmp
sbb
lods
inc
cmc
and
jle
hlt
cmp
cli
inc
xchg
lret
mov
repz
sub
xor
and
jb
cmp
or
mov
repnz
shrl
jae
sbb
xchg
jb
in
aaa
in
pop
out
inc
jbe
int
dec
repnz
ljmp
xchg
pop
out
cwtl
mov
adc
and
mov
or
adc
call
repnz
int
das
ror
repnz
dec
std
jge
enter
gs
dec
sbb
test
test
movsb
lock
ds
jbe
jp
jo
ds
mov
sbb
clc
pop
xor
pop
jns
pop
inc
cmp
mov
aam
mov
cmc
xor
mov
mov
dec
es
nop
inc
imull
fsubr
fwait
jle
scas
fs
pop
shll
add
repz
outsl
cmp
sub
aas
mov
jne
or
out
out
jns
aaa
xchg
js
lcall
in
mov
stc
dec
jb
lods
movl
stos
jmp
mov
ljmp
sbb
andb
es
inc
iret
aaa
cmp
rol
push
jge
dec
aas
add
inc
jb
dec
mov
pop
scas
lods
xchg
mov
push
xchg
aad
adc
pushf
into
aad
push
cmp
jno
push
push
push
sbb
xchg
adc
xchg
loopne
faddp
mov
mov
mov
loopne
mov
push
cwtl
adc
ffreep
or
pop
leave
xor
pop
stos
fs
aaa
mov
xchg
ja
pop
sti
adc
icebp
iret
shrl
inc
fisubrl
into
fmull
insl
imul
lds
inc
loop
clc
test
andb
jo
cli
fsubl
mov
xchg
sbb
lahf
push
rclb
dec
mov
xlat
mov
push
sahf
test
mov
mov
pop
ljmp
int
hlt
push
xor
mov
data16
dec
inc
lds
and
sub
mov
popf
in
scas
nop
inc
push
jl
lock
cltd
in
addb
push
xchg
lock
test
mov
mov
sub
enter
jp
pop
outsl
push
nop
cltd
adc
insb
ret
sbb
or
bnd
pop
addb
inc
in
dec
or
ja
push
mov
xchg
hlt
fstps
in
push
scas
ja
pop
dec
fwait
cmpsb
push
cmp
xchg
jecxz
enter
aad
mov
cmp
pop
ret
xor
leave
stos
or
mov
sarl
leave
and
adc
pusha
pop
cmc
aam
shrb
mov
cmp
adc
test
in
add
fcompl
fcomip
decb
jge
jns
push
cmpsb
push
jo
scas
out
sub
or
jns
or
cs
cmp
imul
scas
dec
lea
dec
adc
test
shlb
add
sub
add
shll
dec
sub
pop
sub
mov
cwtl
sub
inc
mov
and
dec
shll
bnd
xchg
xor
loop
mov
sub
jne
jb
aas
pop
outsl
pop
sub
mov
jns
xchg
mov
push
mov
sbb
sub
sbb
pop
xchg
loop
lea
jmp
push
bound
and
push
pusha
repnz
adcb
lahf
dec
fadds
mov
mov
sub
dec
pushf
jmp
mov
jae
mov
outsl
dec
fiaddl
fildll
xchg
inc
lods
repnz
adc
scas
push
add
lock
jp
shld
fsub
jnp
loopne
mov
jge
ljmp
xchg
stc
pop
sub
add
int3
and
shrb
or
pop
lods
js
sub
hlt
outsb
cmpsb
pop
pop
sbb
xchg
mov
sti
inc
pop
or
cmpsl
ret
rcrl
pop
or
jno
fbld
add
sbb
in
test
int
or
mov
lret
shlb
cmp
jnp
mov
leave
out
jp
fnsave
add
scas
or
xor
lret
push
insb
dec
divl
pop
cmpsl
in
je
xlat
adc
loope
je
cmpsb
in
mov
pop
les
aad
pop
cmp
daa
mov
dec
pusha
dec
enter
pop
clc
xor
lea
fs
inc
arpl
fcomip
icebp
or
stc
mov
jae
adc
and
adc
push
lock
addr16
dec
sub
pop
call
push
push
mov
ja
mov
insl
test
into
xchg
sub
or
imul
ret
sbb
std
shrl
lcall
call
subb
nop
xchg
pop
cs
aaa
cmpsl
in
xchg
jp
idiv
enter
mov
aaa
aaa
mov
pop
imul
cmp
cmp
testb
pop
push
mov
push
or
add
arpl
inc
ret
xchg
mov
dec
xchg
xchg
mov
pop
inc
jo
dec
gs
arpl
add
pop
pusha
in
dec
outsl
mov
fbld
ss
and
sbb
xchg
lret
cmp
adc
inc
mov
sti
add
xchg
pop
daa
or
mov
js
repz
cmpsl
cli
or
add
cmp
mov
or
xor
nop
push
cmp
mov
or
mov
jg
xchg
shl
add
and
push
les
jno
or
lret
xor
mov
mov
je
xchg
sbb
movsl
mov
dec
xchg
xlat
insl
jp
push
and
loop
scas
lcall
enter
push
mov
pop
imul
mov
test
out
sub
mov
adc
std
mov
inc
fstps
sub
and
jae
in
les
in
pop
add
outsb
jle
in
sbb
dec
rorl
add
into
icebp
out
shr
loop
jno
mov
mov
sbbb
das
cli
mov
sbb
popa
fdiv
xorb
inc
incb
push
sti
pusha
in
jge
xchg
xchg
loope
jg
jle
pusha
jg
test
push
add
sub
push
cli
shrb
iret
movb
dec
les
rol
movsl
xor
pop
xchg
sahf
cmp
jns
add
push
mov
mov
xchg
enter
aam
sbb
add
and
dec
das
cli
jbe
fisubrl
icebp
shlw
cld
xor
mov
out
adc
and
shrl
jb
imul
pop
lods
into
mov
dec
cmp
xor
mov
js
adc
adc
std
push
and
jle
testb
push
xchg
pop
rcr
push
jp
pop
add
dec
out
pop
scas
sbb
push
mov
cltd
dec
scas
lret
cpuid
add
hlt
push
push
jb
pop
and
insl
jbe
xorb
push
jo
xchg
sub
jmp
leave
add
push
aas
push
jmp
imul
popa
mov
sbb
xchg
push
fst
add
cmp
mov
cmpsl
mov
movsl
jg
int3
inc
mov
outsl
push
fstps
mov
xchg
outsb
push
xchg
shr
mov
divb
jecxz
xor
pop
lods
inc
bound
pop
mov
out
jo
repz
shrb
adc
loopne
adc
loop
mov
lods
and
dec
and
jmp
aam
lahf
mov
ja
in
cmpsb
jae
cmp
xchg
ljmp
int
sub
fldt
movsl
lahf
inc
push
pushf
mov
xor
jbe
fstps
ret
into
adc
testb
es
add
mov
cltd
cmp
xor
dec
inc
icebp
into
mov
xlat
cli
xorl
dec
mov
jmp
lahf
out
aaa
dec
mov
and
les
iret
pop
mov
sub
push
push
inc
push
jl
mov
adc
subl
mov
mov
iret
ds
pop
mov
data16
xor
cmp
jp
movsb
cwtl
int3
push
sub
lret
stos
dec
jbe
pop
and
cld
pushf
scas
test
rorl
cltd
and
in
loope
es
mov
mov
pop
dec
xchg
xchg
mov
sub
cmpb
aaa
dec
xor
push
push
push
mov
cmpsb
pop
inc
lahf
into
mov
jae
or
xchg
imul
stc
xchg
aad
add
stos
pop
xchg
jl
mov
mov
inc
pop
insb
aaa
inc
daa
into
lea
mov
mov
mov
repz
test
or
xlat
aad
icebp
popa
dec
dec
add
aas
insb
sti
mov
adcl
add
ret
pop
cmp
or
out
fstl
ret
push
je
dec
cmp
dec
mov
mov
test
push
fimull
mov
dec
adc
out
enter
jle
inc
mov
sarl
repnz
sbb
ja
adc
push
push
jg
cmp
sub
inc
push
dec
pusha
scas
and
loope
pop
push
lret
inc
daa
add
push
mov
shrb
xchg
scas
aaa
xor
stos
sub
imul
cli
cld
mov
fcomp
repnz
jbe
mov
outsl
xchg
push
cmpsb
push
stc
mov
sub
sbb
rolb
push
xchg
xchg
jmp
ret
xor
add
lock
clc
imulb
flds
mov
lds
cli
inc
add
lret
add
dec
into
or
popa
push
pop
loop
loopne
jo
stc
iret
fisttps
das
sbb
mulb
ds
dec
cmpsb
adc
jge
push
icebp
test
xor
mov
js
decl
dec
mov
ret
in
add
loopne
mov
mov
jbe
mov
mov
fsts
mov
mov
es
add
std
sti
fstps
and
fldt
mov
jno
adc
xchg
cmpsb
imulb
testb
in
dec
jno
dec
pop
or
imul
fisubrl
aad
or
and
movsl
inc
xor
jecxz
adc
dec
test
jne
fadd
lds
cltd
rcrl
push
int
scas
push
mov
mov
xchg
mov
add
fistpl
pop
mov
add
or
repnz
lods
jb
dec
push
mov
cmp
adc
push
cmp
or
ret
lea
xchg
mov
mov
cli
cmp
call
cmpsl
mov
inc
push
testl
ds
mov
mov
in
mov
pop
imul
add
in
or
pop
ret
pop
cs
cmp
mov
jno
inc
and
rclb
mov
dec
sbb
jo
out
lock
shlb
stc
pop
sbb
inc
xor
jp
mov
jbe
xchg
sti
std
push
jle
mov
aaa
sub
outsl
xor
add
and
or
push
xchg
sarl
ds
es
rorb
int3
adc
ljmp
ffreep
or
scas
outsl
push
inc
push
push
loopne
ja
addl
ljmp
scas
pop
inc
adc
pop
stos
mov
in
or
call
jmp
pop
add
fstl
cmp
fwait
adc
pop
adc
and
cmpsl
inc
lea
and
gs
jb
inc
mov
or
hlt
call
aam
or
movsl
cmp
pop
mov
dec
pop
sub
xchg
jae
ficomps
fadd
fistpl
inc
push
mov
adc
arpl
fldz
mov
cld
push
sti
inc
in
xchg
jno
rcll
ret
int3
addl
stos
ss
pop
shll
push
add
int3
loope
pop
mov
jne
mov
or
mov
dec
xchg
cmp
push
out
or
out
cmp
lods
push
stc
aam
les
cli
push
pop
xchg
dec
popa
mov
loop
mov
lods
jns
push
sbb
or
add
sbb
inc
clc
les
out
ret
fldcw
and
dec
pop
movsb
movsl
push
inc
imul
mov
mov
into
mov
rcl
push
arpl
or
pop
add
and
stc
push
iret
sbb
mov
jge
imul
dec
sbb
and
mov
sbb
push
jne
add
sub
or
repnz
and
mov
loop
scas
mov
mov
mov
hlt
ja
jp
lods
fwait
mov
daa
rcrl
std
push
jae
push
addl
fldenv
sarl
xchg
les
and
outsb
sbb
dec
xchg
add
popf
sbb
adc
stos
pusha
es
movb
mov
pop
and
popf
push
repz
inc
loop
push
cltd
xor
cltd
lods
js
push
inc
loopne
clc
andl
and
in
pop
dec
aad
mov
sbb
xchg
test
xchg
enter
pop
out
stos
test
sbb
call
imul
xchg
and
insl
out
jnp
fdivs
sbb
xlat
arpl
aam
add
mov
lret
xor
xor
jbe
cmp
cld
mov
pusha
xchg
test
sub
xlat
scas
sub
test
mov
das
xchg
cmp
shlb
repnz
cmpsb
test
test
cmpsb
cmp
inc
fildl
adc
mov
pop
mov
cmp
push
scas
push
test
test
ds
xchg
hlt
cmp
mov
mov
into
add
ret
stc
sahf
cmp
mov
scas
std
into
pop
stos
repz
js
or
lret
rorb
sbb
ror
lods
pusha
popa
push
add
xchg
loop
sub
or
xchg
xlat
sbb
sbb
jp
and
popf
loopne
add
mov
xor
mov
in
out
mov
aam
mov
bound
aas
daa
stos
leave
js
xchg
inc
pop
out
je
xchg
pop
ss
dec
mov
clc
cs
aaa
dec
jb
enter
jbe
pusha
movsb
jo
xchg
mov
lds
loop
xchg
and
out
int
lret
xchg
loopne
fstps
rcll
pop
fwait
test
mov
mov
inc
push
lea
jmp
addb
jb
ss
sbb
xor
mov
fisubl
in
push
pop
stos
int
dec
movsl
sub
out
ret
repnz
and
imull
push
scas
sub
jmp
fdivr
movsl
jo
dec
cmc
fldl
in
aad
insl
mov
mov
xchg
cli
push
sub
insb
nop
sbb
fsub
pop
and
testb
test
jp
pop
dec
push
jp
movsb
xchg
mov
je
adc
sub
getsec
idivb
or
daa
or
outsb
outsl
ret
add
inc
in
scas
je
movsb
add
repnz
pop
loop
mov
popf
sbb
sar
pop
mov
mov
pop
lods
add
add
lods
insl
push
add
mov
int
fcmovnbe
pop
sbb
mov
test
jnp
mov
loopnew
aam
and
pop
lahf
std
xor
cmp
adc
mov
xchg
movsb
mov
aaa
icebp
mov
scas
xchg
sarb
xchg
data16
sbb
inc
add
hlt
adc
cmp
out
lahf
das
pop
addr16
mov
testl
aad
sub
movsb
jmp
and
lahf
std
push
test
pop
push
dec
movsb
orl
cld
ljmp
cmpsl
jmp
cmpsl
sbbl
push
stos
pop
aam
push
pop
lcall
test
test
jae
addr16
mov
sahf
mov
fistpll
xchg
fcomip
push
scas
mov
ret
mov
or
mov
jle
or
dec
daa
pop
in
lock
and
in
pop
lret
ficoms
addr16
or
pop
rolb
pusha
dec
mov
xor
scas
add
xor
fldcw
lret
jl
mov
jnp
push
stos
jne
cmp
in
jg
push
lods
pushf
xchg
std
mov
dec
stos
outsl
stos
out
mov
popa
adc
dec
lea
xchg
sub
int3
push
pop
add
mov
daa
int3
push
daa
cwtl
jge
mov
pop
lds
push
ja
ljmp
daa
in
pop
test
pusha
popf
jge
jl
cmp
jle
rcrl
xchg
mov
pop
pop
or
imul
push
fs
fcomps
aas
xlat
mov
lret
loopne
addr16
ffree
loope
pop
inc
jle
push
dec
orl
test
sbb
adc
aaa
sub
jb
negl
mov
dec
dec
int
xchg
pop
clc
in
and
into
jmp
pop
dec
scas
ljmp
fsubl
sahf
xchg
js
ss
mov
repz
xchg
out
sbb
cmp
mov
pop
insl
jl
mov
scas
loop
mov
andl
push
jecxz
push
pop
jns
add
inc
mov
jne
add
jmp
imul
add
repz
fistpll
das
jns
fldl
inc
push
mov
ret
jbe
gs
iret
or
mov
inc
gs
or
sarb
push
cmp
inc
mov
pop
sbb
aas
sahf
aaa
jno
test
jo
sub
mov
in
out
fdivrs
outsl
stos
xchg
mov
in
insb
js
sub
lcall
push
xor
inc
sbb
movsb
leave
nop
fisubrl
or
push
sbb
dec
and
fcoms
add
inc
pop
mov
cmp
push
or
pop
pushf
add
mov
xchg
dec
or
jle
mov
js
leave
jno
mov
mov
and
sarb
out
movsb
jecxz
mov
pusha
stos
idivl
pop
insl
push
mov
rclb
cmpsl
push
addl
sbb
push
sahf
sbb
mov
es
stc
dec
adc
pop
lret
sbb
push
jge
dec
add
aas
inc
cmpsb
outsl
cmpsb
shll
cmpsb
push
leave
test
xlat
outsb
push
mov
ss
push
jecxz
je
loop
sbb
sarl
push
cmp
mov
xlat
xchg
loopne
fdivs
mov
dec
mov
xor
and
loopne
xchg
mov
in
adc
cld
out
xchg
dec
shll
push
cli
or
pop
mov
xchg
push
mov
xchg
mov
arpl
fs
push
inc
or
sub
push
out
jge
movsl
or
jl
push
out
fwait
pop
and
lds
int
outsl
inc
jb
adc
mov
and
adc
mov
arpl
fwait
pop
loope
xchg
repz
les
sub
push
cwtl
adc
sub
pop
push
call
and
xchg
cs
jbe
lds
and
in
jmp
jge
jns
jle
jl
lods
lcall
and
or
les
add
xchg
and
pop
xchg
mov
pusha
and
and
mov
xor
outsl
mov
xchg
xor
push
xor
imul
test
mov
movsl
mov
xchg
popf
add
xor
cltd
pop
hlt
movsl
lods
xor
mov
into
js
add
mov
popf
dec
fs
scas
sbb
aad
enter
sbbl
mov
xorl
or
lahf
mov
cmc
jecxz
clc
push
pop
push
scas
cmp
jb
pop
stos
push
xor
stc
sub
pop
pop
ret
imul
cltd
jecxz
decb
jge
xor
lcall
movsb
mov
int
adc
push
out
push
int3
dec
repz
andb
jne
or
or
lea
jg
mov
jmp
loop
fdivrl
orl
adc
sub
xlat
imul
inc
aas
repnz
push
cmp
in
bnd
add
not
mov
lods
or
xor
jb
mov
add
xchg
adc
xchg
notb
out
sbb
pop
pop
push
inc
xchg
push
pusha
xchg
dec
in
push
add
ljmp
xchg
sarl
jae
adc
cmp
add
fadd
jae
lea
sub
xchg
pop
push
in
aas
ss
push
sbb
mov
inc
lea
outsl
xchg
jo
mov
mov
clc
xchg
mov
jmp
push
mov
js
add
in
loop
mov
int3
out
ds
jmp
lret
or
jmp
dec
sar
xor
xchg
lods
outsl
jp
pop
dec
pop
sbb
mov
outsl
sub
pop
cld
aaa
in
xchg
jae
sahf
in
or
pop
sub
lods
mov
repz
ljmp
inc
cmp
stos
sub
fs
cmpl
jnp
inc
sub
cmp
sahf
or
push
adc
pop
xor
lret
fidivrl
push
adc
xchg
adc
lea
mov
or
jmp
fwait
push
push
pop
fstpl
nop
inc
adc
negb
mov
jns
cwtl
or
mov
fidivrl
cmpsl
ljmp
in
jnp
sbb
arpl
xor
arpl
std
hlt
fistps
cmp
sub
xchg
push
or
scas
mull
xor
pop
inc
lret
in
clc
or
push
daa
xor
leave
or
dec
lret
sub
add
and
ret
addr16
sub
hlt
shl
outsb
sbb
pop
dec
and
fdivrp
test
negb
xchg
jge
and
outsb
cwtl
pushf
lods
lds
sbbl
bound
das
fdiv
nop
fwait
cld
push
dec
or
rcl
jl
lret
xlat
imul
out
adc
mov
pop
mov
lods
mov
xchg
jns
pop
mov
pop
cltd
fnstsw
xchg
js
pop
dec
cld
xchg
ja
das
ss
adc
jg
insb
inc
pop
cwtl
mov
add
addr16
jns
jnp
inc
ljmp
cld
flds
mov
adc
push
pop
movsb
xor
in
pop
jecxz
sub
les
cmp
sbb
inc
pop
lds
jl
jnp
popf
outsb
rol
xorb
push
jle
jle
outsl
into
add
cmc
in
push
outsl
push
fstpt
push
or
add
insb
dec
push
pop
mov
jle
mov
and
scas
inc
sub
pop
dec
sar
xchg
inc
sti
stos
jg
inc
xchg
iret
xor
adc
test
es
cmp
popf
mov
inc
dec
jns
and
addr16
stos
test
and
mov
icebp
mov
dec
xlat
pop
mov
je
mov
sub
and
fs
xor
out
sub
stc
cmp
mov
mov
jno
mov
mov
movsl
jg
xor
fbld
mov
jo
xor
xchg
add
mov
fs
push
sub
insb
jae
clc
and
adc
out
sub
cmp
xor
or
mov
notb
sbb
push
int3
mov
scas
cli
sti
lcall
cmpsl
call
push
adc
call
jo
sub
sbb
loop
fs
push
inc
jecxz
loop
dec
dec
ljmp
or
lcall
pop
mov
sub
or
aad
mov
mov
ret
movsb
push
imul
jno
xchg
mov
and
gs
or
push
fisttps
inc
adc
cmc
hlt
push
loop
loope
dec
jnp
mov
divl
test
nop
ret
mov
movsl
and
mov
lahf
pop
sti
cmpsb
dec
ja
xor
push
clc
in
in
idivb
jp
dec
test
popa
pop
fdivrs
fcoml
push
push
inc
mov
and
jnp
ds
lret
adc
int3
pop
jo
lcall
out
inc
adc
shll
sub
jno
mov
push
je
sarl
mov
dec
push
int3
jno
dec
aas
or
insb
mov
push
inc
pop
mov
push
cs
push
or
xchg
and
andb
push
xchg
popl
es
mov
mov
mov
lods
shlb
dec
inc
add
dec
pusha
xchg
testl
sbb
inc
sbb
scas
jle
popf
leave
mov
mov
test
sbb
inc
lahf
inc
icebp
cwtl
test
testb
mov
mov
test
cmc
add
fs
jl
and
mov
mov
loop
outsl
lcall
in
mov
sahf
cmc
sub
ds
add
or
jecxz
or
addl
call
dec
inc
xchg
dec
addr16
mov
in
sub
xlat
sub
fcmovu
jp
scas
pop
xor
sub
arpl
int
testb
fs
or
pop
jnp
cmp
adc
test
bound
sub
adc
popa
ret
imul
pop
push
aam
enter
xchg
jmp
inc
stos
sbb
fwait
add
sbb
loope
loopne
out
xchg
jne
lret
out
scas
mov
dec
clc
fbstp
inc
sub
xchg
repz
gs
sbb
xchg
rclb
mov
call
sub
adc
push
loope
cli
push
push
and
mov
mov
gs
shrd
pop
orb
mov
es
ror
leave
je
jb
jno
jecxz
adc
ljmp
imul
mov
aad
jnp
sub
sbb
mov
fs
dec
stos
pop
cmpb
xchg
arpl
xor
push
pop
insb
ja
fmul
lock
sarb
movsb
pop
and
aam
jg
mov
out
jo
and
dec
mov
and
cwtl
lds
loop
and
jmp
pusha
mov
dec
jmp
imul
mov
and
das
mov
mov
shll
jg
scas
ss
jne
pop
ds
jl
cmp
pop
or
mov
jb
sub
mov
sbb
pop
das
and
in
jge
pop
lahf
lds
das
test
push
inc
leave
inc
sbb
inc
xor
testb
cmp
rorb
pop
or
xchg
jp
rorl
push
test
or
divl
cpuid
add
clc
testl
movsb
cmp
sub
fnstsw
stc
aad
cmp
sub
repz
in
ds
inc
hlt
mov
push
sbb
sbb
sbb
and
lods
and
or
cmpl
loopne
and
add
test
pusha
jbe
mull
dec
jge
ds
loopne
dec
fdiv
mov
cli
adc
sbb
inc
cmp
mov
fstpt
mov
or
js
and
adc
in
inc
fcmovnb
aaa
iret
jecxz
xchg
xor
icebp
int3
cmp
lock
loop
lods
dec
inc
push
mov
jl
or
ror
lahf
notb
dec
xchg
out
imul
push
add
js
and
out
jo
sahf
dec
mov
pop
cltd
inc
lods
test
cmp
dec
aad
rcrb
fmuls
cmpsb
push
jns
inc
in
push
push
jl
mov
xor
inc
mov
push
insl
pop
inc
add
mov
imul
aam
mov
dec
int3
lret
stos
jl
out
cmp
hlt
adc
or
push
imul
jo
mov
leave
movsb
mov
push
or
out
inc
dec
mov
sarb
push
jg
ljmp
mov
xchg
jge
scas
mov
mov
loope
dec
jb
cmp
xchg
xchg
cld
pusha
stc
mov
int3
or
loopne
lea
lds
xchg
mov
jmp
push
scas
cmpsl
mov
loop
pop
cltd
ds
jno
imul
daa
les
jmp
mov
out
xchg
jp
cmpb
popf
mov
decl
pop
xor
cmp
pop
jne
inc
mov
xchg
inc
push
dec
pop
and
lret
in
jecxz
jno
scas
mov
fs
int
lret
jmp
pop
mov
push
pop
insb
je
pop
or
dec
sbb
movsl
jno
cmp
jne
jne
xchg
sti
add
in
lret
dec
imul
dec
fs
mulb
pop
xor
js
mov
cld
sbb
cmp
push
push
movsb
inc
repz
fdivrl
cwtl
ret
sub
das
push
fisttpll
sbb
fisubrs
pop
pusha
cmp
add
push
out
in
mov
jne
cld
pop
or
xorb
test
dec
xchg
sbb
pop
in
jecxz
sub
pusha
jp
jnp
cmpsl
stos
test
jae
jno
mov
mov
mov
sub
xor
add
call
subb
das
jae
mov
iret
orb
pop
pop
fmull
cli
mov
mov
pushf
stos
call
popf
inc
data16
fmull
cmp
into
int
lock
jecxz
data16
add
mov
cmc
jb
inc
or
iret
jae
pushf
xor
ja
call
sub
aam
pop
sti
hlt
xchg
sbb
push
or
ja
ja
mov
push
lret
fwait
mov
les
int
in
lods
fcmovu
out
je
sub
cmp
cld
jne
sahf
out
ds
xor
or
ja
sub
add
movsl
divb
mov
inc
push
push
lods
out
sub
inc
je
push
push
pop
test
push
pmulhuw
adc
mov
in
inc
mov
jle
jbe
mov
mov
mov
xchg
xacquire
adc
movsl
scas
push
mov
pop
lods
dec
les
add
xor
cmp
dec
inc
dec
movsb
jbe
push
sbb
scas
push
into
lret
xor
push
push
fs
aad
sub
push
loopne
sti
lock
loop
or
fdivrl
mov
aad
test
stos
cmc
sbb
cmc
adc
std
dec
stos
test
lea
out
jno
sub
scas
add
add
out
cld
popa
xchg
mov
or
call
psubq
cmp
andb
pop
jo
pusha
add
imul
push
ret
pushf
loopne
popa
test
loop
jecxz
hlt
inc
dec
rcrl
mov
sub
cmp
scas
push
mov
jmp
mov
test
jmp
push
add
jp
cmp
mull
scas
pop
jle
mov
inc
push
xor
push
sbb
sbb
push
test
stc
mov
rorl
lret
and
mov
ds
ficoms
fcmovu
loop
pop
cltd
addb
inc
and
jge
jle
daa
movsl
pop
jae
enter
outsb
das
repz
sbb
pop
mov
ja
mov
leave
call
xchg
ret
fscale
aas
lods
test
push
arpl
test
pop
cld
fiadds
in
scas
dec
mov
xchg
add
lods
loopne
stc
xchg
jns
lea
sarl
xchg
std
roll
aas
jnp
lds
push
lea
jns
ja
iret
imull
fcmovb
imul
sti
push
inc
adc
inc
sub
push
hlt
lock
jp
xor
sbb
jnp
jl
jge
aam
gs
subl
xor
arpl
sbb
sbbl
sub
imul
data16
outsb
adc
adc
loopne
mov
inc
xchg
out
inc
push
push
ret
push
fwait
stos
repnz
pop
and
add
sbb
cmpsb
imul
dec
add
dec
loop
mov
and
xchg
adcb
jp
scas
mov
jno
add
jmp
add
push
jns
xor
cmp
movsb
jmp
data16
pop
popf
adc
pop
sbb
and
mov
mov
xchg
or
das
out
sub
pop
les
test
std
sub
mov
and
push
dec
cmp
sbb
adc
mov
xor
inc
jge
jmp
pop
mov
aad
mov
inc
inc
xchg
mov
add
xchg
jecxz
lret
int
int3
mov
mov
pop
push
stos
lahf
rolb
fistpl
sbb
inc
mov
xchg
sub
repnz
xchg
dec
jle
shr
test
sub
outsl
cmp
sbb
out
leave
push
xor
rcr
cmp
jle
adc
aas
jne
xchg
sub
cli
inc
inc
filds
push
cld
inc
je
jle
and
pop
mov
cmp
cmp
jne
stos
in
imul
xchg
push
push
ret
ss
aam
jecxz
and
mov
mov
decb
xchg
xor
aad
or
xor
ds
mov
sub
js
adc
test
or
bound
shlb
jne
xchg
dec
fucomi
inc
out
lcall
mov
stos
daa
mov
lock
std
mov
loope
loope
jecxz
mov
xchg
dec
gs
movb
fwait
push
lds
mov
cmp
pop
popf
orb
test
jle
xor
orl
pushf
or
stos
notl
mov
sbb
fisttpl
xor
mov
cmp
mov
sub
arpl
scas
add
popa
pop
mov
testb
mul
insl
jge
addr16
jno
pop
lods
int3
cli
push
lret
lret
sbb
xchg
enter
push
insb
pop
jae
mov
mov
fisubrs
ds
ss
in
sarb
mov
es
clc
daa
movsb
daa
xor
in
lahf
sbb
or
mov
sarb
dec
xor
jne
sub
adc
pop
cmp
out
jne
movl
fsubl
fbld
stc
push
lods
in
jmp
addr16
int3
sub
or
je
lods
popa
pop
sub
movsl
add
ljmp
aaa
add
mov
imul
or
mov
add
popf
jae
push
xor
fldl
lds
and
scas
pop
filds
add
rol
cmpl
out
out
imul
fisubrs
jns
ss
xchg
cwtl
fsubr
xor
jae
negl
mov
test
scas
and
loop
mov
inc
push
inc
out
mov
jp
sub
mov
jp
or
mov
pop
push
inc
leave
or
les
sahf
les
outsl
aad
inc
or
js
std
loopne
mov
test
dec
mov
add
sub
stc
clc
inc
sub
sub
mov
push
xchg
jnp
subl
movsb
push
insb
mov
mov
xor
push
in
sbb
aam
or
outsb
addr16
pushf
idiv
and
push
inc
jl
inc
sub
data16
fistpl
xor
dec
cmpsb
fld
xchg
inc
mov
test
fcompl
dec
jmp
sub
ficompl
mov
mull
lods
shlb
call
dec
aad
sbb
cld
inc
push
ljmp
xor
adc
sbb
push
out
pop
lds
inc
gs
pop
sbb
das
xor
dec
sub
xor
mov
add
cs
jo
leave
cwtl
pop
imul
je
mulb
jl
scas
aam
pop
inc
cmp
ljmp
or
cmp
fwait
je
pop
movsb
test
movsb
add
in
add
clc
cmp
sbb
mov
daa
clc
dec
sbb
push
xchg
cs
popl
ss
bound
insl
les
add
popa
testl
or
popf
lret
jecxz
jge
push
xlat
dec
aaa
test
xlat
stos
mov
jle
lret
jp
gs
cmp
and
sbbb
jmp
jbe
arpl
stc
insl
xchg
jb
mov
xor
pop
add
cs
sbb
push
mov
frstor
into
das
cmp
daa
push
mov
aaa
dec
xor
xchg
sub
cs
mov
adc
and
cltd
fwait
repnz
int
movsl
and
fcmovnb
lods
xchg
ds
cwtl
inc
pop
test
pop
mov
jns
or
xchg
pushf
xchg
pop
in
cmp
outsb
and
fidivl
push
sbb
jp
inc
pop
push
icebp
aas
dec
or
out
or
push
push
xor
cmp
popf
inc
cwtl
or
push
stos
pop
or
xchg
mov
les
js
test
sub
mov
pop
jge
mov
xor
push
or
push
jle
dec
add
rcrl
insl
cvttps2pi
mov
mov
cmpl
mov
push
out
loope
mov
cmp
jp
mov
call
jge
xchg
jg
pop
rcrb
or
inc
mov
jbe
int
mov
enter
sbb
xor
xchg
or
subl
inc
fimull
pop
inc
adc
fisubrs
jp
aam
sbb
xchg
push
add
outsb
pop
sub
loopne
insb
cld
mov
bound
ret
fcoms
xor
repnz
arpl
adcb
fidivl
jp
out
push
ljmp
push
inc
imul
xor
dec
popa
mov
or
push
adc
mov
push
shlb
mov
aad
out
jp
ja
inc
mov
popa
pop
push
ds
push
jle
dec
dec
sub
add
jecxz
jge
js
jb
or
pop
cs
mov
mov
sbb
dec
mov
jle
nop
jo
cmp
out
jb
cwtl
aad
cli
cli
repnz
pop
rolw
gs
dec
pushf
dec
js
out
std
data16
cmp
out
js
push
pop
xlat
call
scas
cmp
mov
dec
pop
cld
push
cmp
xor
jge
data16
test
stos
add
in
outsl
mov
mov
mov
sbb
rclb
xchg
arpl
mov
sti
inc
in
hlt
ret
mov
xor
mov
cmc
pop
lods
pop
sarl
mov
daa
jb
dec
push
adc
lahf
xor
pushf
insb
data16
sbb
dec
mov
jmp
movsl
imull
pop
dec
push
es
inc
push
push
cltd
cmp
shll
scas
sub
jp
or
mov
popf
mov
inc
inc
adc
shl
push
outsl
adc
jmp
fbstp
push
lret
sub
mov
shll
sub
pop
scas
dec
xor
arpl
insl
pop
in
in
inc
push
insb
out
mov
notb
cltd
push
test
mov
pop
pop
mov
js
jle
or
icebp
xchg
das
imul
into
incl
repz
imul
sar
sub
aas
xchg
and
or
hlt
push
push
aaa
decl
cmp
inc
lret
jmp
sarb
sbb
in
dec
lods
call
push
sub
popf
mov
cld
dec
ret
jmp
scas
adc
jns
outsl
sbb
pop
sub
hlt
aaa
mov
cmp
mov
jb
test
pop
or
inc
fldenv
push
adc
repz
lcall
leave
pop
jmp
out
inc
ss
jne
inc
add
mov
rorb
sbbb
hlt
mov
or
xor
fisubrl
test
push
mov
aaa
xchg
les
lods
mov
dec
xchg
mov
push
shrl
pushf
hlt
mov
scas
bound
test
lret
push
jle,pn
mov
ja
lods
std
rorl
aad
in
xor
sbb
xchg
rcrl
or
mov
scas
lret
test
xchg
loop
gs
int3
ss
lret
in
daa
mov
cmpsl
gs
push
es
add
mov
movsb
cmp
out
in
popa
sbb
je
mov
cmpsl
sub
jmp
pushf
xchg
pushf
adc
aad
arpl
jnp
insb
outsb
out
aas
mov
sbb
add
cmpsl
daa
ja
sbb
or
lds
popf
adc
mov
mov
push
pop
pop
lret
pop
movsb
stos
inc
ficompl
and
jl
pop
sub
jae
jbe
mov
mov
adc
inc
popa
sbb
pop
push
jmp
in
or
push
sub
xor
fsubs
stos
cmp
les
jg
cmp
inc
xchg
pop
rorb
arpl
cmpsl
jg
mov
xorb
xchg
jp
cmpsb
cs
sbb
sub
mov
add
iret
ret
sar
ror
push
jns
lea
push
rcrl
add
imul
cmpsl
jne
inc
mov
fstpl
dec
lret
nop
or
jbe
pusha
jnp
cmp
inc
jb
sub
xchg
jae
out
inc
es
loop
xor
xchg
or
mov
hlt
pusha
adc
mov
and
push
adc
mov
sub
and
test
mov
xor
js
in
xor
aaa
test
mov
les
add
data16
mov
ret
xchg
sub
fimull
lds
fstl
and
lahf
sbb
inc
loope
gs
sub
fsubs
cwtl
shrl
sbb
movsl
cmpsb
jno
lret
mov
pusha
xchg
dec
jg
jp
out
lods
add
aaa
fs
push
daa
xor
das
or
pop
popf
leave
sbb
movsb
imul
mov
mov
pop
sub
push
leave
call
pop
inc
jecxz
cmpsb
sub
sbb
arpl
inc
ljmp
xor
loop
adc
adc
cmp
push
adc
sti
mov
inc
mov
out
add
pop
out
and
pop
inc
inc
sub
repz
push
icebp
mov
or
mov
in
add
out
lods
push
adc
mov
mov
or
int3
push
std
adc
roll
stc
in
subl
push
sahf
push
jno
push
enter
add
dec
or
xor
lds
xchg
movsl
leave
arpl
lea
xchg
push
cmpsb
pop
fbld
out
dec
and
scas
cli
rcll
data16
sub
jb
xor
push
cli
stos
leave
xchg
sbb
mov
outsb
sarl
in
push
sub
sarb
sahf
fsubrs
inc
sbb
dec
test
pop
sbb
movsl
jmp
xchg
cld
xchg
pushf
xor
lea
sub
or
sbb
dec
push
fnsave
in
mov
repz
pop
mov
mov
cmp
adc
incb
inc
pop
add
xchg
xor
cmpl
xchg
outsl
ss
sub
int
mov
cmp
pop
or
xlat
loop
fsubrl
pop
pop
addb
stc
div
bound
aaa
cltd
rcrb
std
dec
and
xchg
sbb
insb
xor
dec
sub
fcoms
jl
and
or
inc
sahf
lods
xchg
jmp
dec
ljmp
inc
das
sbb
popf
inc
popa
call
sbb
or
fbld
inc
cmp
test
cmc
jae
sahf
mov
dec
fdivl
dec
iret
sub
mov
std
adc
inc
sub
insb
pop
popa
push
or
mov
mov
call
push
adc
loopne,pt
fsubrl
test
outsb
pop
jnp
push
pusha
lds
fldt
lock
mov
xor
jnp
imul
jg
mov
iret
jb
dec
push
outsb
ljmp
gs
cmp
nopl
jmp
inc
lahf
lahf
adc
mov
fistps
sti
xor
aam
pusha
sub
and
xchg
jbe
sub
ja
and
add
sbb
or
mov
sub
cmp
test
sbb
push
ljmp
fcmovnbe
push
ret
lea
aam
mov
dec
insl
xchg
xchg
add
pop
repz
dec
xchg
xchg
jbe
sahf
cmpsl
xor
stos
daa
mov
dec
or
pop
dec
test
jl
and
mov
jne
rcr
repz
jg
xor
pop
mov
out
add
xor
add
subl
sbb
xor
jmp
pop
cmp
lds
nop
out
fcomi
push
push
dec
xlat
mov
pop
in
jge
mull
cmc
out
mov
xor
cmp
sbb
cmpsl
pop
test
jecxz
and
jnp
pop
arpl
sbb
popf
dec
or
hlt
mov
dec
outsl
xchg
jp
roll
lods
sub
add
xor
cmp
fdivrs
out
rorl
stc
dec
scas
out
dec
pop
add
hlt
mov
outsb
ljmp
push
jnp
mov
jp
sti
subl
or
or
mov
cwtl
nop
adc
push
cli
js
dec
sbb
movsb
pusha
sub
movsl
xor
jne
cli
clc
cs
lea
ss
arpl
fs
test
adc
out
rorb
push
mov
cli
jnp
xchg
fnstenv
movsb
pop
test
push
sbb
mov
je
cmp
xor
pop
mov
mov
cs
sub
call
xchg
cltd
aaa
pop
push
mov
xchg
jl
jo
adc
and
int
mov
shlb
fadds
adc
xchg
and
sbb
inc
push
add
cmp
inc
cld
add
loope
gs
icebp
mov
dec
xor
cmpsl
imul
pop
jg
mov
add
mov
fldt
popf
dec
sub
loopne
ja
movsl
sub
fwait
push
orb
mov
jo
push
inc
and
jecxz
faddl
filds
mulb
mov
mov
mov
dec
leave
sbb
dec
and
cs
xlat
rcrl
sub
adc
dec
mov
xchg
adc
dec
pop
mov
mov
montmul
cmpsb
add
inc
sahf
push
aad
pop
mov
cwtl
aaa
push
int3
or
mov
jnp
push
jne
and
clc
rorb
movsl
gs
lahf
and
pop
jle,pt
lret
scas
rolb
sbbb
pusha
cmp
popf
or
sar
mov
xchg
leave
in
jmp
outsl
pusha
sbb
pop
xchg
xchg
aaa
mov
sahf
inc
clc
pop
pop
inc
aas
sbb
icebp
sbb
sbb
sbb
cli
int
outsl
mov
lret
sti
sbb
pop
dec
lret
std
dec
loopne
push
clc
adc
sahf
mov
insl
sbb
adc
aam
cmp
inc
mov
xchg
push
add
lock
xchg
mov
movlpd
mov
add
sbb
fistl
push
inc
jmp
dec
pop
out
mov
inc
adc
adc
jp
insb
push
dec
sar
fadds
rclb
popa
in
cmc
or
mov
mov
push
cld
pusha
pop
subl
jbe
and
jmp
std
inc
js
adc
js
sbb
lahf
adc
dec
sbb
scas
jle
movsb
mov
mov
lret
rclb
cmp
cmp
das
ret
sbb
cmc
jno
cli
in
cwtl
fsubp
cwtl
xchg
push
outsb
call
cmp
das
fnstsw
icebp
pop
fcmovnbe
lea
imul
sbb
add
mov
jb
pop
cli
rcrb
xlat
repz
cmp
movsb
outsl
adc
jle
xchg
std
mov
inc
sub
ds
dec
mov
fisubl
jp
stos
add
in
pop
xchg
mov
out
push
dec
mov
enter
out
scas
mov
js
add
push
push
fs
icebp
cwtl
xor
stos
icebp
and
test
pop
and
push
mov
mov
in
nop
adc
sarb
mov
dec
fbld
cmp
cltd
aas
in
mov
test
sub
stos
mov
xlat
cmp
fistpl
mov
in
cmpsl
pop
test
sub
pop
mov
insb
sub
jg
les
cmp
in
dec
mov
loope
jne
jecxz
add
fistl
xchg
shrl
ror
neg
push
inc
negb
loop
popa
jp
dec
icebp
mov
adc
xchg
push
mov
push
jecxz
mov
gs
sbb
mov
mov
cld
push
mov
and
inc
repnz
leave
inc
inc
hlt
cmp
and
xlat
and
lea
or
mov
xchg
jmp
mov
dec
mov
daa
mov
xor
dec
cld
dec
lcall
into
in
dec
imul
mov
and
xor
int3
es
out
imul
push
std
ss
outsb
pusha
mov
sbb
pusha
mov
or
xchg
pop
xchg
mov
pop
cmp
xchg
jnp
xchg
mov
outsb
xchg
fadds
clc
dec
pop
add
sub
aad
dec
out
cltd
mov
jg
pusha
xchg
sbb
xchg
xchg
jle
push
sarl
dec
sbb
pop
es
and
fs
cmpsl
subb
adc
mov
or
xlat
cltd
mov
sub
pop
jmp
mov
jnp
xchg
pop
jmp
mov
push
xor
insb
pop
adc
inc
cmp
inc
movsl
pop
dec
incb
or
aas
sbb
sbb
ljmp
fstpt
push
movsb
sub
jecxz
test
ficoml
and
fistl
sub
cmp
fst
and
inc
in
or
lret
and
icebp
lock
iret
fldcw
in
insb
in
das
bound
popa
add
xchg
lods
cmpsb
stos
scas
jnp
push
nop
rolb
push
pop
push
mov
lods
lods
ret
rorl
ds
cmp
stc
jecxz
cltd
mov
xor
pop
cmp
xchg
int
push
aad
sti
pop
in
aad
jns
pop
or
aad
sti
jl
ss
dec
mov
dec
xor
push
jns
fidivs
xlat
sbb
and
jmp
jmp
xor
ss
xchg
das
sbb
cmp
sub
jmp
and
lods
mov
icebp
mov
pop
lret
scas
scas
inc
data16
mov
mov
push
mov
dec
mov
xorl
jle
cs
push
xchg
sti
js
repz
aam
ja
sbbb
js
test
fiadds
sub
scas
insl
cmp
push
sbb
pop
push
and
jb
or
out
repnz
shlb
xor
aaa
or
imul
mov
cwtl
lock
push
sarb
push
aaa
adc
fwait
and
sbb
js
pop
and
in
jle
mov
mov
pusha
add
pop
mov
rorb
xor
ret
mov
pop
sbb
rclb
lea
es
popf
or
hlt
mov
xor
hlt
cmpsb
xlat
sub
sbb
in
jae
lods
xchg
mov
xor
pop
add
int
pop
lret
daa
notl
push
loopne
mov
leave
jle
push
jge
mov
pop
mov
push
and
push
jb
adc
mov
orl
lock
xchg
data16
int
cld
and
shr
rorl
mov
mov
adc
and
jbe
mov
clc
fiadds
insb
cs
and
or
ret
jbe
cmp
repz
xor
jle
lahf
cwtl
sub
jbe
sbb
in
xlat
mov
mov
sub
xchg
repz
ficompl
cmpsb
adc
pop
aaa
clc
fwait
xchg
lods
add
push
add
clc
push
mov
cmp
push
sub
mov
inc
in
add
shlb
pop
lea
or
imul
stos
xchg
loopne
push
or
scas
ret
cmp
sti
and
ljmp
inc
jecxz
in
adc
sub
sbb
add
mov
pop
fisubl
sbb
sarl
inc
daa
sarb
pop
sub
jge
loope
movsl
cltd
push
push
pushf
pop
es
ds
sub
andb
sbb
jecxz
mov
or
call
mov
push
mov
inc
mov
jmp
adc
pop
cmp
stos
mov
dec
pop
adc
pop
mov
inc
and
mov
in
push
scas
lods
jbe
inc
stc
sbb
movsb
push
mov
pslld
cmp
jns
loop
stos
and
add
cmpsl
testb
fsubrl
lock
lods
mov
int
inc
lods
xor
xchg
data16
sub
jmp
jl
jecxz
fs
lret
inc
pop
stos
inc
jo
in
cwtl
int
jne
out
test
test
repnz
movsl
fstl
jp
dec
les
cmpsb
jg
mov
add
push
stc
xor
pushf
daa
sub
mov
fcoml
inc
fsave
push
jae
xor
lret
ss
jle
push
int
and
aas
negl
sub
mov
or
cmp
xor
aas
mov
adcb
adc
or
sbb
icebp
aaa
mov
inc
add
push
test
scas
imulb
mov
sarl
xor
nop
int
rcrb
mov
test
mov
sbb
inc
mov
fsubs
xchg
dec
fldcw
loopne
inc
add
daa
shrl
xor
sub
cmp
test
sarl
xchg
mov
adc
test
ljmp
bound
in
lods
sub
repz
lods
jmp
rcr
lret
dec
or
or
aas
mov
adc
pop
repnz
out
xor
and
mov
xchg
sarb
or
js
sbb
cwtl
orl
inc
adc
test
fs
push
and
jge
incb
jns
in
in
fnstenv
add
std
cmp
lcall
mov
cmpsl
loope
sub
hlt
sbb
xchg
ret
fwait
ja
mov
cmp
xchg
cmp
pop
cmpb
push
fadds
pop
jp
aam
cmp
dec
pop
movsb
xchg
pop
rorb
es
xor
xchg
insl
sarb
scas
pop
sub
dec
aad
dec
outsb
cltd
js
and
dec
dec
and
out
movsb
push
test
mov
inc
mull
jmp
ret
outsl
dec
mov
cmpsl
adc
inc
mov
faddl
ja
out
xchg
aas
mov
fs
test
or
sti
and
sahf
mov
in
and
add
xor
jno
shll
enter
movsl
inc
xchg
gs
out
dec
dec
jo
scas
and
push
sbb
ja
sbbl
das
aas
jmp
mov
mov
jnp
stc
out
jmp
int
mov
jns
testl
aas
push
insl
mov
mov
or
and
fsubrl
lods
fwait
xor
jo
xchg
and
cmpsb
shl
out
xor
push
in
repnz
push
loope
jg
xor
mov
or
inc
jae
push
mov
clc
inc
std
enter
mov
xlat
fsub
jge
xchg
ljmp
cmc
xchg
inc
shl
mov
in
repnz
dec
adc
mov
push
scas
rolb
bound
jle
bound
sbb
dec
cli
and
add
mov
inc
sub
test
mov
xor
das
int3
or
es
xchg
pop
cld
jns
xor
test
jne
fildl
inc
mov
xor
push
jno
push
int
mov
and
push
and
enter
in
bnd
shll
mov
push
int
into
pop
lds
lahf
pop
mov
jge
sti
bound
sti
aaa
sti
ret
cmp
sbb
mov
test
movsb
cmc
dec
add
frstor
adc
stc
inc
mov
push
lahf
jno
mov
jb
cmp
inc
sub
jno
sub
cmp
popf
dec
icebp
into
test
insl
sbb
or
sbb
sbbb
pop
or
popa
and
dec
movsb
out
adc
push
ret
imul
mov
ljmp
xchg
outsl
popa
jbe
jae
inc
jae
insl
mov
xlat
pop
add
sbb
test
ja
inc
clc
fcoml
mov
sbb
xor
pop
rorb
mov
sub
pop
and
adc
pop
push
and
adc
insb
dec
int3
and
jmp
cmpsl
sub
add
pusha
jmp
js
sub
cmpsb
sbb
mov
popa
mov
ljmp
lret
xor
jbe
dec
in
pop
jbe
or
fildl
mov
hlt
xor
and
xchg
popf
xchg
adc
rcrb
mov
push
scas
xor
xor
rcrl
push
cmp
jmp
loop
out
mov
add
js
inc
dec
dec
call
dec
jp
and
dec
pop
push
and
mov
push
push
fisubs
mov
or
and
push
pop
outsw
xchg
push
mov
movl
mov
or
jbe
or
fstps
mov
jle
ret
jp
sbb
jge
push
stos
inc
add
in
xchg
cmp
mov
add
por
stc
cmc
and
sar
test
jnp
bound
mov
std
jle
sahf
jmp
push
sub
jle
cwtl
roll
in
fdivr
lods
cli
outsb
cmpsb
inc
mov
ret
out
sahf
or
xchg
sub
cmp
js
cwtl
jg
outsb
jb
cmp
mov
leave
insb
lcall
xchg
sub
xor
xchg
xor
add
and
mov
stos
jno
fimull
lret
movsb
push
add
test
in
jno
std
sub
iret
in
or
movsl
pop
sub
inc
mov
pusha
test
not
js
lcall
pop
mov
pop
sub
xchg
insb
xchg
xchg
and
leave
movsb
movsl
dec
dec
cld
lcall
je
subb
push
dec
adc
ffree
jg
sub
jmp
rcll
mov
sbb
sbb
cmp
mov
scas
cwtl
das
sub
subb
mov
xor
add
pop
push
cwtl
dec
add
loopne
aam
int
jg
insb
shl
mov
enter
dec
sub
stc
in
sbb
xor
mov
sbb
fstpl
cmc
arpl
sarl
mov
dec
les
cmp
pusha
or
fistl
mov
cmp
cli
mov
fisubl
aad
fcoms
adc
nop
jp
popa
cmp
dec
xor
js
push
imull
pop
movsb
divl
cmp
btcl
ljmp
xchg
push
icebp
mov
inc
shll
jl
sbb
jge
mov
mov
and
xor
fdivrl
aas
imul
icebp
and
scas
rcrb
and
push
sbb
pop
inc
mov
je
testl
xchg
hlt
repnz
sub
mov
sti
sub
fcompl
out
inc
test
or
les
cmp
lods
mov
add
jno
ds
nop
and
gs
testb
xor
push
dec
push
jmp
inc
scas
mov
push
inc
aad
cmpsb
pop
push
add
sbbb
movsb
dec
inc
shrl
pop
mov
packuswb
adc
jb
inc
mov
push
cmc
dec
arpl
pop
mov
jno
or
insl
rcrb
sbbl
dec
lock
pop
data16
aad
std
sub
dec
mov
adc
cmp
push
inc
xor
pop
iret
cmc
jae
adc
sub
fwait
jo
adc
add
loopne
lcall
or
add
dec
fnstenv
xchg
js
lods
loop
les
out
push
fnstcw
scas
ljmp
jge
sub
fnstsw
dec
pushf
out
adc
fidivrs
cmp
js
lcall
xchg
mov
repz
data16
xor
subb
ret
test
mov
scas
repz
clc
fwait
ror
cmpsl
movsb
or
dec
imul
pusha
notb
cld
sbb
popa
shl
dec
sbb
sbb
ja
dec
push
daa
dec
cld
orb
xlat
xchg
cmpsb
sbb
in
insl
sub
test
jle
int
sarb
and
enter
pop
mov
jnp
add
inc
cli
push
cmpsb
xchg
xor
xchg
jne
dec
stos
xor
push
pushf
and
nop
cmp
leave
lret
fldl
cmp
testb
scas
jle
pop
ret
leave
sbb
stos
jp
mov
adc
sub
jae
nop
stos
sbb
mov
scas
popa
cmp
jp
xor
fiadds
inc
arpl
mov
xor
mov
add
fildl
push
scas
dec
jp
xchg
repnz
mov
pop
add
pop
jg
ret
and
cwtl
dec
sub
xchg
inc
addr16
call
add
fcmovbe
dec
jb
shrb
jmp
in
adc
fdivrp
mov
or
lcall
adc
ss
lret
jae
rcrb
dec
sbb
xchg
push
mov
rcrb
cmp
dec
xchg
inc
subl
sub
lahf
mov
pop
lea
sbb
push
dec
sub
xor
inc
add
dec
adc
decb
test
jge
out
stc
or
adcl
insb
cmp
and
rclb
push
mov
in
jnp
jno
jbe
out
dec
jne
test
cmpb
xor
mov
shr
lahf
cwtl
je
push
aam
adc
fisttps
hlt
mov
pop
mov
adc
sub
mov
neg
mov
add
in
in
mov
add
nop
sbb
and
mov
push
mov
ftst
rorl
add
fwait
test
mov
xchg
dec
jg
daa
insb
push
popf
add
aaa
jno
scas
lock
lods
clc
scas
arpl
pop
icebp
cmpsb
stos
sbb
scas
mov
cmp
mov
rcrl
out
adc
ja
int
out
fs
ret
stos
cld
adc
xor
addr16
mov
pop
fcmovu
inc
inc
cmp
out
stos
cmc
push
push
add
jb
fldl
jno
mov
iret
cs
in
sbb
pop
xchg
xchg
pop
mov
mov
or
sub
or
ja
outsl
iret
popl
lds
js
data16
bound
mov
loope
mov
dec
scas
mov
inc
mov
repnz
je
cwtl
dec
inc
ljmp
mov
scas
and
loopne
lahf
xor
repz
mov
pusha
pop
hlt
out
push
aaa
test
in
jnp
cwtl
or
imul
lcall
idivl
sbb
movsb
cmp
pusha
xchg
push
jge
xchg
jp
test
fidivs
pop
test
xor
sbb
or
lret
pop
stc
adc
jno
mov
mov
push
and
mov
fnstcw
sahf
push
inc
cmpsb
jns
mov
insl
sahf
lret
lock
xchg
loop
mov
xchg
push
dec
xor
rcl
push
add
or
frstor
outsl
jmp
jmp
jle
add
jb
leave
testl
adc
lcall
call
push
push
mov
cli
cmp
mov
add
mov
mov
insb
loop
jmp
test
adc
in
mov
mov
inc
test
push
and
and
pop
cmpsl
rorl
inc
in
add
jp
cmp
cmc
push
repz
das
xchg
cwtl
cmp
mov
cmp
jno
test
aam
mov
mov
imul
into
decl
enter
enter
sub
lods
jne
popf
les
cmp
add
mov
cwtl
test
stos
mov
inc
push
pop
sbb
inc
scas
mov
jno
inc
ds
jb
adc
rorl
in
cmp
jnp
mov
test
jb
and
add
mov
test
mov
push
sub
in
xchg
jno
pop
imul
daa
ja
ljmp
push
xchg
jp
add
adc
rcrl
push
mov
fnsave
dec
sbb
jp
add
imul
mov
test
push
fwait
xchg
mov
mov
inc
lahf
mov
stos
adc
mov
sub
arpl
sbb
mov
jmp
sbb
call
stos
orb
cltd
inc
inc
clc
je
fisubl
xor
cmp
mov
inc
add
int3
sbb
adc
mov
adcb
int3
inc
mov
add
test
pop
cmp
fs
ficoml
je
mov
xchg
fnstsw
sub
cmp
xchg
nop
sub
bound
push
stc
xchg
test
push
lea
adc
pop
sbb
in
pop
inc
mov
popf
rcrb
pop
cltd
adc
insb
fwait
mov
mov
xchg
nop
dec
push
push
mov
inc
pop
fisubs
aaa
fcmovb
dec
or
test
movsb
icebp
xchg
pop
xchg
mov
ret
mov
fists
cmp
mov
mov
cmp
jmp
insb
jl
int
cmp
sub
inc
in
cmpsb
sbb
fwait
dec
adc
mov
sarl
out
popa
inc
mov
mov
jl
out
sub
pop
hlt
imul
sub
loopne
stc
jo
sbb
cli
clc
adc
daa
fucom
addr16
jl
jb
push
mov
xchg
insl
xchg
test
push
sbb
rorl
enter
movl
push
mov
daa
xchg
test
mov
inc
cmpsl
cs
mov
dec
je
inc
and
scas
cwtl
mov
imul
bound
jle
sbb
mov
inc
push
cmp
cmp
inc
les
fimull
pop
aam
arpl
cmpsl
jg
aad
jnp
loopne
inc
icebp
fiadds
inc
sub
pop
jmp
ret
ficomps
jo
in
notl
pop
pop
dec
adc
fcompl
ss
sarb
or
ret
popf
xchg
mov
stos
int
xor
inc
cmp
das
stos
ret
pop
nop
pop
ret
leave
xor
arpl
fiaddl
inc
popf
xchg
out
inc
pop
ljmp
inc
fcoml
mov
and
mov
push
sbb
in
add
lea
lcall
lods
sub
lret
mov
sub
das
ja
dec
mov
pop
add
xchg
push
pop
xor
repz
and
xlat
leave
dec
pop
insl
test
xor
arpl
out
fiaddl
stos
pop
push
jecxz
cli
xchg
add
pop
out
fsubs
pushf
mov
ret
daa
in
movb
add
sub
loopne
mov
stc
repnz
addr16
pop
cli
sub
push
cmpsb
xor
mov
and
stos
cli
mov
push
and
lods
cmp
js
pop
das
mov
jo
loopne
movsb
movsl
popf
repnz
in
lret
mov
mov
mov
xor
ficoms
stos
jg
and
pop
ja
sub
mov
inc
ja
fnstcw
push
stos
test
in
lahf
or
mov
into
mov
xchg
scas
dec
repnz
sbb
js
mov
dec
fildl
incb
lock
sub
call
jne
cwtl
movsb
inc
out
dec
jp
sub
and
xor
sbb
and
ss
mov
or
out
dec
insb
int3
xchg
test
push
push
in
scas
push
xchg
mov
mov
mov
in
test
dec
aaa
aaa
dec
enter
jge
dec
mov
arpl
jl
xorl
negb
push
mov
imul
mov
lahf
fisubl
rorb
lock
mov
mov
mov
cmp
push
incl
add
in
sbb
jbe
sub
clc
pop
nop
jae
popa
push
mov
sbb
ret
cmp
dec
ss
push
arpl
or
ret
dec
mov
insl
arpl
dec
daa
pop
bound
mov
adc
lds
jmp
xchg
pusha
sbb
add
ficomps
jl
pop
mov
add
int3
std
lcall
fmuls
inc
dec
push
and
pop
test
js
push
gs
cmp
dec
add
fbstp
inc
mov
aas
jno
jle
jb
pop
pop
mov
mov
mov
aam
inc
dec
fiadds
mov
aam
pop
out
js
adc
stos
mov
inc
fldcw
inc
mov
out
jo
out
les
and
and
push
pop
mov
stos
in
add
out
xchg
arpl
push
fldl
jmp
pop
xchg
add
push
call
jns
inc
push
add
mov
xchg
aaa
andb
or
nop
sbb
push
xor
cmpsl
mov
push
sbb
movsb
pop
dec
cmp
pop
adcb
fsubs
pushf
mov
pop
jg
add
outsl
test
xlat
fwait
mov
rolb
sbb
hlt
leave
and
daa
lret
and
mov
and
dec
mov
fnsave
cmc
push
cmp
loopne
dec
sub
and
fwait
mov
xbegin
inc
loope
out
jno
loopne
push
mov
es
mov
cld
icebp
pop
bound
in
daa
int3
das
jb
jb
pop
test
les
gs
add
aam
xor
arpl
test
push
outsb
scas
sub
add
dec
and
xlat
cld
xor
dec
mov
add
ficoms
mov
adc
rol
push
fsubrs
push
cld
sarl
dec
mov
pushl
arpl
fnsave
lahf
ja
sub
hlt
scas
out
stos
add
xchg
fdivrs
icebp
push
mov
xchg
mov
sbb
mov
pop
out
sbb
popa
sub
gs
lahf
mov
mov
or
mov
cmpsl
adcb
stos
jae
jbe
cmc
lret
cs
test
gs
andl
xor
hlt
ljmp
xor
and
out
inc
es
push
inc
mov
xchg
pop
iret
xor
andl
inc
or
cld
aas
jge
shll
or
orb
fs
daa
jo
xor
dec
or
cs
test
pop
or
xchg
cmpsb
dec
push
or
scas
add
or
dec
cmp
mov
es
cmpsb
jne
outsb
arpl
jae
movsl
or
sbb
fstps
imul
sbb
cmp
fistps
shrl
ljmp
popa
adc
fisttpl
sti
and
dec
or
add
out
xchg
outsl
inc
adc
nop
lret
ret
mov
push
sub
xor
inc
es
and
es
and
jg
dec
stos
shrl
add
cmp
jl
lahf
aaa
pop
test
outsl
inc
es
cmpb
jge
sub
aaa
imul
cmpsb
xor
lea
lock
and
xor
dec
mov
stos
sub
sahf
fcoml
push
mov
adc
mov
dec
mov
iret
adc
dec
xor
fsubl
and
add
or
das
lret
inc
cmpsb
add
jmp
iret
pop
pop
nop
or
or
mov
test
insl
pop
xchg
dec
ss
jb
lret
adc
scas
lock
jns
adc
pushf
mov
gs
dec
xor
jae
std
cwtl
or
jge
icebp
adc
mov
bound
jg
in
cmc
ja
and
or
pop
nop
pop
cmpsb
xor
adc
or
add
jle
push
fldl
jae
in
pop
repz
pop
enter
mov
imul
add
mov
scas
jp
xor
iret
mov
lret
inc
pop
inc
cmpsl
andb
push
push
push
mov
imul
dec
out
xchg
mov
pop
mov
push
loopne
mov
mov
test
jns
jnp
dec
aam
mov
mov
in
pop
sub
push
icebp
xchg
xorb
movsl
xor
stos
das
jge
rolb
sub
aaa
sub
xchg
out
cmp
das
imul
dec
mov
xchg
mov
aaa
mov
das
shll
jl
je
pop
repz
cmp
sub
dec
sti
daa
and
movsl
mov
mov
pusha
adc
sub
push
sbb
mov
negb
ljmp
jbe
arpl
cld
jecxz
stc
jl
jnp
pushf
js
scas
mov
xor
xor
lea
jbe
out
test
xor
dec
pushf
cmp
xor
jne
iret
cld
add
pusha
xchg
mov
cmc
nop
test
push
repnz
sbb
cmp
gs
cmp
jae
mov
fsubr
int
into
insb
fdiv
loop
jno
push
xor
push
pop
lcall
in
mov
insl
jecxz
aad
leave
push
pop
push
cmpsb
fsubr
loopne
outsl
xchg
stc
rclb
dec
test
inc
mov
jnp
and
ljmp
enter
add
mov
mov
rcl
mov
adc
push
movsb
push
popa
loope
lock
int3
adc
xchg
std
sbb
jne
sti
les
add
mov
rcrl
addr16
add
push
mov
in
shll
xchg
cwtl
mov
loop
add
dec
stc
and
test
push
push
sti
sti
or
mov
push
adc
lods
lods
negl
dec
sub
xchg
cmpsb
jmp
shlb
ljmp
pop
lds
fcompl
fidivs
sbb
sub
jb
inc
ret
movsb
pop
sbb
adc
mov
dec
pop
cwtl
outsl
pushf
cwtl
call
ret
xchg
mov
push
clc
inc
xor
jno
mov
dec
nop
pop
cmp
jl
dec
jge
xchg
add
aad
pop
xchg
cwtl
mov
xchg
dec
scas
adc
fcoms
negl
out
and
mov
jp
dec
andb
pop
push
mov
or
sub
cmpsb
push
sbb
add
xchg
and
adc
push
cmp
pop
mov
push
enter
xor
adc
es
inc
mov
jne
and
jp
inc
in
pop
movsl
jbe
add
cld
call
cs
jne
icebp
ret
sahf
movsl
jg
aad
lock
shll
or
fsts
imul
adc
in
jnp
inc
hlt
or
loop
push
jo
sbb
cmp
cld
push
sbb
add
sub
loopne
ds
bound
in
lcall
jge
xchg
aaa
dec
frstor
inc
in
dec
pushl
mov
pop
hlt
iret
inc
and
pusha
fmuls
data16
sub
sub
jg
pusha
inc
mov
push
cmpsb
lret
loope
mov
mov
jmp
std
jp
jmp
mov
jnp
push
popa
jbe
mov
mov
sub
inc
adc
pop
mov
and
adc
hlt
inc
lahf
outsb
imulb
push
jl
mov
jge
cmpsb
loop
push
scas
lock
push
sbb
fucom
mov
int3
loopne
push
inc
in
jmp
je
rol
jg
cmp
cmc
call
out
sti
adc
out
sbb
cmp
mov
inc
inc
fldt
rclb
mov
xchg
ss
or
lret
pop
pop
sbb
lds
rcll
adc
das
mov
xor
into
and
pop
cmp
push
dec
mov
mov
jl,pt
pop
orl
shlb
stos
pop
adc
dec
add
cltd
out
jb
sub
fdivl
and
xlat
sbb
pop
sbb
mov
jecxz
push
scas
adc
sub
shll
and
cltd
adc
mov
out
xor
shlb
call
mov
fidivrs
lahf
hlt
popa
cwtl
xchg
int3
jbe
arpl
dec
out
adc
test
loop
adcb
fisttpl
stos
vunpckhpd
pop
stc
sbb
fisttpll
loopne
mov
call
pop
aad
inc
sub
sbb
mov
cmp
and
sahf
pop
decb
icebp
jle
or
lock
sbb
push
dec
mov
mov
nop
insl
lret
adc
mov
aam
cmp
inc
mov
mov
jb
xchg
out
push
mov
mov
cmc
js
js
lea
and
xor
push
xchg
fisttps
es
es
rorl
in
add
sahf
push
or
inc
mov
ds
stc
lahf
ljmp
push
fbld
aad
mov
adc
or
lods
mov
adc
mov
dec
jnp
xchg
and
xchg
xor
sbbb
adc
je
inc
inc
add
jbe
xchg
negb
xor
aam
sub
jae
scas
add
pop
jae
repnz
out
and
xchg
loopne
stos
xchg
add
push
xor
adc
jle
fisubrs
mov
mov
in
into
or
and
das
jo
roll
jecxz
inc
and
mov
jbe
lret
jg
xor
and
ficoml
pop
mov
mov
imulb
out
mov
fisubl
mov
jno
mov
mov
adc
mov
sub
xchg
sbb
lods
or
push
sbb
cmp
push
mov
iret
loope
inc
jae
outsb
jo
cmp
int
xorb
or
movsb
mov
sub
aad
mov
or
cli
aad
mov
push
xor
aad
outsb
pop
jo
outsl
and
in
dec
mov
jle
or
mov
sar
xchg
lcall
aam
loopne
push
add
xchg
inc
xlat
jb
push
dec
ror
sbb
sub
fsts
jg
punpckldq
mov
jge
pop
cmp
je
adc
shrl
pop
xorl
mov
xchg
mov
push
test
adc
jmp
jbe
pushf
mov
mov
pop
pop
pop
test
insl
add
add
pop
jbe
add
icebp
iret
imul
add
or
and
mov
and
cmp
jle
mov
or
out
or
jl
pop
sub
mov
mov
pop
jmp
cmp
insb
jmp
lcall
mov
orb
and
dec
imul
aaa
xchg
or
adc
sbb
xchg
clc
fxch
pop
sub
addb
shll
stos
mov
push
xor
dec
scas
pop
mov
push
cs
xchg
test
popf
pop
jno
repz
mov
loope
int3
and
add
cmp
fucomp
jecxz
jns
insb
jnp
ja
imul
push
cmc
outsb
ss
punpckldq
lahf
xchg
pop
dec
xor
loop
out
push
ds
std
adc
and
sub
inc
xlat
popf
in
das
scas
mov
cmp
mov
mov
jecxz
mov
shll
mov
pop
adc
mov
lret
mov
cmp
jle
addl
aas
push
pop
push
xchg
xchg
mov
insb
leave
ret
mov
xor
xor
pop
inc
jecxz
ficoml
ret
mov
lds
pusha
cmc
xor
cwtl
rorb
jb
or
ret
mov
push
idiv
jnp,pt
sti
sub
in
xor
mov
dec
sbb
push
and
adc
dec
adc
imul
andb
mov
ret
add
loop
jp
ss
leave
add
aas
sub
sub
sub
mov
or
inc
xchg
aas
fstpt
mov
shr
or
push
std
mov
bound
push
cld
or
call
in
cld
loopne
mov
stc
sub
loop
paddusw
cmc
je
sub
dec
out
mov
push
test
clc
fs
aad
dec
icebp
push
push
stos
or
fistpl
cmp
xchg
jl
std
push
pushf
shl
and
gs
inc
fs
adc
mov
lahf
push
pop
adc
cmp
in
adc
fadds
pop
pop
les
push
fs
adc
adc
mov
mov
lods
pop
push
jg
push
iret
mov
sbb
mov
pusha
cli
cmp
mov
cmp
dec
sar
roll
push
sub
dec
out
enter
aam
ds
xor
sub
or
pop
int3
pop
cmp
test
imulb
ja
adc
jb
push
pop
inc
into
mov
loopne
xchg
and
add
push
inc
insl
jge
and
insl
push
and
mov
stos
push
loop
or
enter
cmp
mov
aad
mov
mov
stos
inc
jg
push
jnp
out
andb
movsb
push
cmp
lock
cwtl
mov
aad
test
pop
mov
mov
out
mov
mov
adc
dec
mov
mov
mov
push
pop
into
dec
inc
shr
je
rcrl
popa
hlt
sub
push
insb
outsb
bound
ljmp
pop
shrb
outsb
addr16
inc
cmpsb
in
jge
push
or
mov
insl
into
lahf
or
movsb
stos
pop
addr16
xor
jp
mov
mov
mov
fs
shll
sbb
rorb
bound
lret
cmp
je
mov
fldcw
out
fldl
fistpll
jecxz
add
test
test
divb
pop
testl
addr16
xchg
xchg
scas
sarl
adc
shll
mov
fists
or
adc
cmp
pushf
test
sarb
dec
lcall
shlb
jecxz
xor
pop
pop
pop
enter
jmp
in
push
pop
adc
test
cwtl
out
daa
sbb
adc
lock
jno
xor
and
cmc
pop
cmc
sti
shl
mov
aam
outsl
xchg
push
idivl
sti
fcomps
push
push
push
stos
jp
sub
addr16
mov
movl
shrl
sarl
mov
cs
mov
adc
testl
movsl
pop
dec
sub
jmp
stos
mov
push
test
jno
aad
fs
shlb
test
dec
mov
dec
aad
push
push
insb
inc
mov
sbb
and
cwtl
pop
adc
pop
sbb
mov
or
sub
les
xor
sub
xchg
push
sti
xchg
test
xor
popa
in
mov
pop
sbb
out
mov
cmpsb
sub
xor
push
push
hlt
outsb
dec
mov
data16
jno
and
sbb
rolb
jb
pop
lahf
dec
orb
jne
push
cmc
push
adc
dec
sbb
pop
mov
lret
jmp
lods
andb
es
movsb
inc
ret
mov
icebp
addr16
icebp
inc
push
cmc
imulb
shlb
cmp
mov
lret
es
dec
adc
add
sarl
pop
out
or
lds
ficomps
push
pop
jge
jmp
xor
pushf
push
add
and
xchg
xorb
shlb
xor
into
cmpsl
add
lahf
nop
sbb
sahf
xchg
lahf
icebp
movsb
lcall
pop
inc
add
sti
icebp
pop
xorb
xlat
mov
fldcw
mov
mov
mov
lds
addr16
xor
xchg
mov
cld
frstor
sub
mov
push
roll
aas
clc
je
lock
movsb
dec
pop
dec
fsubs
jnp
les
fsubrs
xchg
insb
pop
pop
xchg
mov
js
pop
xchg
adc
int3
adcl
sahf
mov
popa
lret
je
inc
dec
scas
nop
mov
stos
addr16
and
or
cmc
decb
xchg
stc
flds
arpl
addr16
mov
and
mov
or
jg
leave
pop
lods
push
inc
adc
movsl
or
ret
pusha
pop
insb
xchg
push
mov
jg
xchg
scas
add
scas
movl
xor
dec
in
xchg
test
or
add
xchg
jge
lcall
insl
ret
jmp
pop
sub
fst
mov
and
scas
aaa
adc
rcrl
jmp
in
adc
sbb
aaa
xchg
shr
mov
cmp
mov
sub
arpl
xchg
popf
adc
jge
pushf
xor
ficompl
dec
push
jbe
mov
loop
push
aad
mov
push
test
sahf
enter
add
mov
mov
push
cld
dec
je
clc
bound
dec
outsl
pop
pop
mov
inc
add
jo,pn
xor
test
jle
xor
jno
adc
mov
les
mov
cmpsb
nop
and
cs
add
test
arpl
jo
dec
and
pop
jge
mov
add
xor
leave
icebp
xor
jns
push
loopne
cwtl
fsubrs
loop
xchg
call
mov
and
sub
aas
clc
in
cld
mov
jb
xor
pop
add
lods
push
addr16
bound
sub
xchg
mov
xchg
scas
repz
lahf
aaa
xlat
or
inc
inc
leave
adc
sar
mulb
mov
ret
stos
pop
lods
hlt
cmc
mov
sub
scas
movsb
idivl
xor
and
sub
gs
ficoml
and
or
sbb
not
adc
sub
cld
inc
enter
sub
jle
push
push
pusha
int
push
addl
inc
push
push
std
cmpsb
int
imul
jg
arpl
xor
ss
adc
inc
sbb
dec
test
addl
in
mov
sbb
add
mov
jo
rorl
jae
cmp
aam
xchg
push
subl
ds
shr
mov
scas
sub
es
enter
jo
addr16
lret
mov
jge
fdivs
cmpsl
into
outsl
sub
xchg
enter
cmp
insl
or
lds
cld
loop
into
psrlq
cltd
xlat
and
cmp
lods
ss
mov
repnz
mov
enter
xor
stc
bswap
pop
jge
fadds
out
push
mov
push
int
sbbb
pop
out
xchg
push
add
sub
jbe
ss
shll
js
sub
push
fmull
or
dec
dec
sbb
outsb
xlat
insl
adc
adc
loope
or
push
int3
jmp
cmp
cmpsl
pop
push
mov
push
jnp
mov
jmp
xor
cmp
pop
mov
shl
jge
clc
arpl
cmp
xchg
nop
mov
inc
push
fstps
and
push
jae
frstor
adc
push
or
cmp
push
push
add
aaa
fidivl
cs
lods
imul
cmp
xor
test
bound
lods
stc
push
or
loope
aaa
pop
fsubs
arpl
rcrb
ja
lahf
int3
jmp
mov
push
pop
mov
fists
test
cmpsl
pop
xchg
adc
adc
fmul
push
fcomip
add
dec
jmp
lock
pop
int
jb
jns
sbbb
pop
push
mov
xor
in
idiv
out
adc
idivb
cmp
int
roll
mov
jo
mov
rcll
mov
xor
pop
and
xor
sbb
adc
xchg
pop
add
sbb
add
stc
fistpl
sbb
adc
movsb
adcl
jp
jns
xlat
das
repnz
xor
cwtl
adc
add
cld
sub
call
jp
fistpll
int
push
repz
cld
daa
jns
xchg
adc
lret
inc
orb
cmp
add
aaa
and
lcall
test
and
icebp
add
fimull
cltd
fidivl
daa
pop
ss
gs
out
mov
inc
adc
push
dec
jle
push
loopne
aam
aad
mov
dec
jmp
mov
cmp
loopne
imul
inc
inc
shrb
push
xorl
dec
cmp
out
inc
insl
fs
lea
mov
mov
sbb
dec
insb
pusha
add
jo
xor
les
and
push
jecxz
fs
cmp
ja
insl
pop
sub
lret
jns
fdivrs
cmp
xorb
in
push
es
fwait
xor
test
mov
jns
pop
dec
xor
movsl
clc
or
and
add
jne
iret
bound
hlt
dec
cwtl
xchg
out
mov
aad
adc
xchg
jb
inc
sub
jp
xor
icebp
test
lahf
inc
pop
sub
cld
sub
mov
jl
syscall
into
add
jmp
dec
out
sarb
cld
test
sti
mov
cmp
test
lret
dec
scas
cli
cltd
sub
or
sub
rcll
test
mov
sbb
push
in
jno,pn
scas
imul
repnz
inc
cmp
push
js
mov
fcomi
jns
mov
adc
sarb
xor
scas
mov
sbb
mov
inc
mov
and
jecxz
data16
pop
repz
insl
addb
mov
adc
outsl
fwait
ds
iret
mov
das
loop
scas
test
ja
or
movsb
xchg
lret
sbb
shlb
shll
jnp
push
fwait
xor
push
mov
notl
mov
jle
fistpll
nop
outsb
arpl
add
add
inc
cmp
push
dec
bound
mov
add
cltd
iret
inc
cmp
sub
mov
aas
sbb
xchg
mov
jecxz
daa
bound
nop
aaa
pop
pop
dec
jmp
pushl
clc
adc
fdivrl
mov
loop
das
xor
mov
pop
rolb
sahf
outsb
ds
arpl
xchg
push
les
movsl
mov
jp
ja
stc
test
mov
cltd
stos
movsb
mov
orl
popa
mov
xchg
add
mov
xchg
das
rol
test
in
xchg
cmp
or
push
fildl
mov
xor
jns
rclb
pop
aam
cltd
add
rorb
jae
ss
push
int3
pop
jnp
mov
add
das
lea
sti
add
xadd
push
fsubr
shll
mov
dec
xchg
int3
sub
fnsave
pop
insb
jp
shll
mov
push
sbb
mov
test
sub
fdivl
mov
or
arpl
push
loop
push
stos
add
loope
shl
popa
sbb
loop
out
mov
fs
ret
jnp
mov
fs
out
sahf
add
cli
xor
jl
mov
popf
in
lcall
out
xor
sarl
cmp
lcall
call
shll
imul
scas
dec
stos
lret
test
loopne
xchg
inc
mov
dec
lret
lods
adc
inc
cmp
out
sub
lods
xchg
inc
icebp
xchg
mov
mov
add
sahf
jg
sub
pop
aad
hlt
mov
in
sbb
push
pop
fidivl
mov
notl
push
shr
mov
dec
pop
xor
mov
or
hlt
dec
cmp
jecxz
lret
xor
adc
pop
test
leave
push
loop
cmp
sub
fiadds
gs
pushl
mov
sub
popa
jae
in
dec
push
ds
adc
inc
icebp
repnz
enter
jno
sub
mov
push
add
xchg
in
sbb
inc
jne
in
mov
sub
subb
pop
push
push
mov
arpl
notb
mov
pushf
fisttpll
psllq
xchg
roll
sub
testl
and
xor
dec
xchg
aas
sbb
adc
dec
mov
stc
sub
adc
sub
pop
test
jns
dec
loop
xor
or
andl
and
mov
ficoml
cli
xlat
pop
xchg
inc
pop
sub
stc
sbb
pop
iret
jmp
xor
popf
scas
std
loope
fprem
adc
repnz
inc
in
add
inc
push
jbe
and
fildl
pop
out
js
test
mov
push
push
pushl
rclb
push
sti
andl
push
cmp
nop
inc
mov
jle
mov
sbb
shr
addb
jne
inc
test
and
fadds
mov
xchg
inc
leave
jns
sbb
pop
jp
test
addr16
ss
dec
ljmp
sbb
push
add
sbb
xlat
lret
fldl
paddb
jge
shlb
sbb
inc
outsl
inc
jg
xor
dec
sub
js
popf
mov
mov
xchg
add
fimuls
outsl
fildll
aaa
fwait
xchg
out
sub
sub
mov
int
insb
dec
or
repnz
xor
sbb
loope
inc
pusha
pop
jns
xorps
mov
cltd
push
add
addb
mov
inc
test
loope
cmp
clc
je
aaa
jbe
sbb
rclb
aaa
loope
jb
loope
push
add
mov
cmc
cmc
enter
icebp
cmpsb
outsl
add
dec
mov
adc
jns
hlt
fiaddl
pop
ss
fdivs
push
cmp
loope
adc
add
mov
addr16
ret
dec
push
fcoms
lcall
xchg
inc
mul
pop
mov
je
inc
mov
xor
sub
jmp
push
jl
sbb
mov
mov
ja
outsl
cmc
sbb
pop
dec
gs
dec
jnp
pop
shl
or
into
repnz
in
xor
lret
xor
or
sub
es
push
shlb
ljmp
adc
mov
aad
es
sbb
repnz
in
mov
mov
testl
das
pop
adc
mov
mul
jmp
push
and
add
adc
test
mov
mov
mov
jge
fdivrl
popa
int3
je
movsl
or
pop
jo
dec
pop
add
fcmovu
add
bound
imul
das
es
rorb
mov
fistps
xor
pop
dec
mov
arpl
mov
sub
outsl
or
mov
in
test
cwtl
adc
inc
pop
push
movsb
cld
popa
dec
lret
mov
add
jne
push
mov
and
pop
cwtl
mov
popf
pop
cmpl
rcl
add
or
in
test
fwait
cmp
add
mov
or
lret
scas
test
leave
cmp
xor
or
jle
jnp
std
cmp
das
jnp
popa
int
mov
xchg
leave
mov
mov
push
mov
les
jge
ds
cmpsl
xchg
xchg
mov
xchg
loope
sti
xchg
push
cmpsb
lds
mov
popf
sbb
and
ljmp
mov
aad
or
jne
test
fistl
push
int3
pop
or
lcall
xchg
cltd
ds
jmp
js
adc
paddsb
in
and
rcll
push
add
push
in
mov
ja
movsb
jge
loopne
fldenv
mov
ds
add
les
cmp
repnz
in
inc
in
out
daa
jo
cwtl
in
adc
loope
sbb
xchg
rcrl
movsl
dec
xor
dec
aam
les
jp
push
inc
clc
add
dec
cmp
in
inc
arpl
jl
cmpsl
dec
or
sahf
mov
cmpsl
and
pop
ret
in
jno
push
int3
test
pop
add
imul
dec
add
fstl
movsb
adc
lahf
andb
or
cmp
adc
ljmp
jns
cmp
xor
scas
xor
pop
xchg
push
stc
movsl
shll
jbe
call
or
xlat
loope
sbb
out
or
dec
sahf
jns
fistpl
pop
pop
mov
test
inc
mov
jns
inc
push
test
in
bnd
loop
xchg
inc
and
inc
dec
fisttpll
stos
sbbl
or
mov
add
jmp
sub
sbb
xor
or
call
sarl
add
sti
jb
adc
inc
mov
test
xchg
push
enter
cmp
jmp
repz
inc
mov
fnstcw
ret
ds
jl
or
inc
adc
xchg
add
jmp
test
pinsrw
int3
push
outsl
subl
or
dec
aas
xor
dec
and
push
rclb
loop
test
sub
adc
fstpt
jo
pop
xchg
push
stc
xchg
pop
cmpsl
imul
adc
jge
mov
sub
cmp
cltd
in
cmp
jp
mov
xlat
xor
subb
loop
jp
push
lock
inc
mov
cmp
cmpsl
lcall
bound
je
mov
es
dec
push
bound
mov
test
pop
cld
adcb
out
mov
ret
sarb
outsl
push
lahf
ret
int3
push
rorb
arpl
lock
inc
and
lret
int
cmpsl
int3
mov
loope
xchg
xchg
cmpsl
pop
fwait
addr16
jne
mov
ret
cli
mov
and
ljmp
push
loopne
or
out
insb
sub
push
pusha
rcrl
push
in
dec
jecxz
leave
xor
idivb
pop
data16
inc
or
sahf
mov
xchg
ret
scas
xlat
stos
mov
pop
aad
adc
test
pop
sub
push
jae
sarb
gs
lret
pop
xchg
movsl
and
lret
aad
jne
push
mov
sti
cwtl
push
cmp
cmpsb
lds
lret
rep
push
js
push
fmulp
loope
in
sub
imul
stc
loope
jecxz
mov
lcall
mov
jb
outsb
scas
and
sub
pop
inc
inc
pop
in
push
insl
mov
dec
leave
clc
fisttpl
shl
lahf
loope
or
push
xor
das
outsl
jecxz
xlat
lock
pop
or
rol
jns
shlb
lret
pop
in
mov
aad
mov
inc
test
sub
fcmovu
cwtl
xlat
shlb
leave
shl
xor
push
xor
mov
sub
fimuls
cmpsb
push
outsb
adc
sbb
fldenv
mov
sahf
sbb
test
incl
outsb
adc
dec
lret
jbe
iret
cmp
fwait
push
push
lret
in
std
adc
cld
mov
jns
hlt
lea
jb
cmpsb
clc
push
imul
jl
lods
xchg
push
cs
les
in
in
sub
sub
pop
mov
imul
mov
inc
xor
pop
stc
push
pop
ja
pop
stos
in
lds
repz
arpl
jecxz
das
pop
mov
test
stos
je
insb
loope
stc
inc
dec
push
jnp
pusha
lock
stc
xchg
push
insb
imul
xor
imul
les
mov
loop
pop
jp
sahf
sbb
or
scas
inc
lods
insb
das
imul
fs
jle
rcrb
testl
dec
adc
leave
test
mov
ljmp
ss
push
iret
pop
cs
mov
or
mov
and
cmp
icebp
popa
sar
mul
and
dec
dec
adc
push
loopne
adc
call
out
movsl
shr
sbb
adc
bound
lret
daa
mov
mov
sbb
and
jle
xor
dec
es
add
lods
add
nop
adc
inc
lods
cmp
dec
leave
lcall
in
fildll
in
loope
mov
push
inc
ret
adc
mov
lea
mov
pop
fldcw
cltd
adc
push
lcall
xchg
int
inc
pop
data16
inc
popw
jno
and
xchg
jb
push
cwtl
cld
mov
shr
lea
push
sub
aam
cli
mov
jge
inc
xchg
shl
cmc
and
aas
out
jns
cmp
mov
pop
out
js
jae
jl
jno
lock
rcrl
dec
jae
aad
test
cld
push
mov
push
test
popa
jge
jbe
xchg
pop
xorb
fstpt
lock
fidivrs
inc
gs
xchg
dec
out
movsl
loopne
pop
sbb
xor
or
inc
popf
mov
hlt
cld
push
jae
or
sub
sahf
add
mov
lahf
add
aaa
adc
pushf
mov
sub
mov
adc
mov
pop
loope
jg
ds
cmpb
es
cmc
pop
or
lcall
inc
outsb
dec
jo
test
push
and
fsub
jb
out
addb
ret
add
lret
out
or
data16
stos
lods
pop
push
mov
out
outsl
dec
icebp
or
xor
dec
test
xor
add
sub
aaa
inc
data16
xchg
iret
mov
dec
cltd
shlb
cld
pop
test
mov
sbb
and
lock
insb
data16
mov
jo
jo
pop
lcall
and
stos
popa
sti
cld
stos
cmp
je
repnz
adc
dec
mov
test
sub
xchg
pop
mov
sti
ljmp
cmp
mov
pop
ljmp
ss
imul
and
std
ret
stos
es
cs
mov
pushf
aaa
push
inc
and
lret
int3
test
ret
loopne
lret
cli
and
pushl
push
clc
dec
sahf
sarl
push
popl
ret
sub
and
pop
add
jl
adcb
inc
inc
bound
mov
andb
jnp
outsb
daa
add
js
sub
mov
daa
out
mov
out
scas
jecxz
push
repnz
xchg
movsb
add
add
mov
mov
lcall
loope
outsl
jmp
lcall
pop
out
add
in
dec
bound
push
sbb
daa
xchg
lock
lock
clc
xorl
movsl
mov
xchg
fbld
dec
push
mov
lcall
dec
imul
aaa
cwtl
aam
ret
dec
cmpl
cltd
pop
jl
clc
jo
push
shl
sbb
push
inc
scas
lea
mov
cmp
aas
lcall
or
insl
mov
push
jbe
aas
push
test
add
loop
pop
test
mov
mov
lods
mov
adc
add
cmp
ljmp
movsl
jae
sbb
mov
je
inc
stos
sub
or
pop
les
and
sbb
and
dec
inc
sub
and
dec
int
ret
mov
pop
jl,pn
xchg
orl
jne
xchg
xchg
in
cltd
fimull
adc
mov
gs
not
js
mov
xchg
jb
mov
cmp
xchg
movsl
stos
lods
aam
icebp
stos
mov
and
and
sub
andb
pop
push
out
and
fstpt
inc
dec
mov
sbb
insl
cmp
sbb
test
adc
test
nop
popa
lods
or
dec
fsubr
xor
fisubrs
pop
ror
and
insl
pop
rcrb
insb
dec
xlat
je
popf
xlat
pop
xchg
xchg
arpl
arpl
cmp
dec
xchg
pop
mov
sbb
inc
jmp
xchg
mov
pusha
popa
adcb
and
and
sti
outsb
sbb
push
sub
mov
mov
push
int3
sub
mov
je
cld
ror
addb
outsb
movhps
push
sub
repz
push
mov
mov
sub
movsb
sbb
inc
out
imul
das
or
int3
stos
pop
cli
rcll
cmc
call
cmpsb
movsb
je
aas
jo
mov
call
lea
fsubrs
data16
add
pushf
xchg
jle
and
mov
xchg
inc
pop
pushf
dec
inc
mov
jge
push
imulb
jle
and
in
add
lea
push
nop
loope
sahf
adc
testb
mov
mov
nop
inc
mov
scas
lods
sbb
insb
out
lea
lret
pop
push
dec
jae
pop
mov
cmpl
pushf
or
dec
inc
addr16
cmpsl
sar
sub
and
aam
mov
jne
add
dec
fnstsw
push
dec
cmpsl
push
cmpsl
cmp
lock
xchg
je
sbb
xor
mov
imul
insb
and
ss
dec
push
popf
jae
mov
into
movsl
sbb
iret
dec
push
cmp
cmp
mov
scas
insl
sbb
test
cmp
sbb
push
add
pop
adc
sbb
xchg
adc
cmp
push
push
and
push
inc
xchg
pop
subb
scas
lods
out
push
adc
sub
fistpll
dec
ror
fcompl
mov
hlt
cmp
jnp
push
in
iret
in
cld
stos
jb
sub
sbb
pop
test
push
imul
fs
pop
mov
inc
fldl
jbe
xchg
inc
xchg
pop
std
lahf
push
mov
mov
jnp
outsl
sbb
adcl
cmpsl
xchg
mov
mov
push
sbb
push
add
fidivrs
cmp
adc
icebp
push
jmp
or
fisttps
test
or
fldcw
mov
jne
xchg
or
mov
xor
and
sbb
push
adc
sbb
sub
stos
and
stc
and
jae
lsl
dec
movsl
pop
dec
into
cmp
jg
jo
aas
iret
inc
pop
adc
xchg
adc
out
push
test
mov
push
inc
loop
mov
loop
out
lahf
jb
xor
shld
sub
add
xchg
sbb
das
inc
dec
les
push
inc
mov
rsqrtps
notl
hlt
cmp
rolb
xchg
cmp
and
sti
xchg
jno
fisubrl
rolb
mov
inc
stos
inc
adc
int
xor
jmp
mov
pop
mov
push
mov
insl
or
sub
pop
mov
pop
add
lret
out
push
es
lret
adc
jecxz
insb
jl
icebp
xchg
push
outsl
inc
stos
shll
into
fldt
and
push
adc
vfrczsd
xorb
sbb
adc
rol
add
insb
and
dec
mov
pop
mov
in
dec
outsb
fs
inc
cmp
outsl
dec
dec
lock
xor
adc
cmp
sub
shlb
lods
fsubrp
jl
jg
les
enter
lret
in
jl
push
faddl
push
adc
mov
ret
ret
cmp
fucomp
cmp
xlat
addr16
pop
insl
xchg
xorl
lret
fstpl
and
lret
pop
or
int3
cmpsb
jne
xor
mov
add
vcvttps2dq
shl
aaa
jb
mov
mov
xchg
xor
stos
in
push
xor
pop
fsubs
push
cmp
inc
push
cmpb
push
mov
lods
xchg
rorb
sarb
inc
imull
mov
or
sub
jne
rcr
rolb
mov
inc
add
xor
pop
and
xchg
sub
shlb
movsl
mov
movsb
push
mov
jne
les
stos
cld
add
mov
sub
pop
js
aam
adc
or
push
push
sub
mov
jl
sub
sbb
jp
jmp
rcrl
lock
pop
loop
mov
jo
or
jge
fwait
mov
inc
fldl
xlat
pop
xchg
call
mov
mov
cmp
or
lretw
and
mov
shlb
cmp
jle
scas
push
scas
je
incl
je
push
leave
and
lods
repnz
jnp
cmp
test
mov
shll
jbe
xor
xchg
imul
js
fwait
aas
pushf
cmp
andb
fimuls
lahf
stos
inc
cmc
sbb
fdivl
mov
inc
dec
test
push
sbb
jg
mov
jg
fcoms
data16
lret
dec
imul
lea
inc
insl
and
test
sub
and
inc
inc
ret
dec
lock
repz
lret
mov
jecxz
cmpl
test
addb
and
sbb
cmp
shlb
unpckhps
jb
jo
mov
sub
gs
jmp
jns
jle
jge
ret
push
fistpll
adc
adc
cmpsl
repnz
jns
cmp
test
jb
out
clc
and
dec
inc
stc
add
lea
in
mov
mov
sbb
dec
mov
push
mov
imul
and
daa
call
mov
cmp
lds
mov
sub
push
insb
adc
mov
mov
mov
mov
lods
cmp
cmp
addr16
mov
imul
fcompl
add
pop
ds
fsubrp
jle
cmp
in
pop
and
push
insb
and
into
pcmpgtb
call
neg
call
push
test
addr16
popf
mov
dec
mov
jno
fmul
ja
push
mov
into
out
mov
inc
pushf
std
jno
adc
dec
test
aad
js
push
mov
and
es
cmpsl
clc
movsl
cmp
es
jmp
ds
pop
lods
adc
loope
mov
negl
jl
sub
pop
jmp
adc
mov
icebp
subl
ficompl
xchg
movsl
int3
pop
ss
mov
lds
notl
jle
adc
out
int3
adc
add
enter
dec
jne
repz
jg
rcr
out
xchg
icebp
loop
sub
js
fnstenv
hlt
ret
jle
xchg
iret
pop
aas
cmpsb
pusha
mov
pop
lock
jbe
pop
mov
ds
mov
shll
xchg
sub
rolw
cmp
in
or
cmp
pop
pop
xchg
mov
dec
adc
or
cmp
je
push
popa
mov
inc
mov
sub
cmp
push
cmp
aad
and
xchg
adc
jbe
jmp
test
arpl
jmp
aas
push
pop
jo
pop
push
push
nop
mov
and
ljmp
pop
testb
out
js
mov
sahf
mov
test
inc
mov
insb
sub
gs
and
adc
jne
dec
push
pop
gs
sbb
xchg
cmp
stos
in
mov
pop
js
std
mov
adcb
sti
add
xchg
or
dec
mov
jle
mov
jge
lock
pop
pop
xor
cli
and
popa
add
in
or
in
scas
shll
push
inc
pop
pop
enter
jbe
xchg
out
push
push
stos
in
jb
push
mov
fisubl
inc
fisttpl
std
cmp
jb
mov
lret
imul
insb
dec
inc
jo
int
sbb
in
insb
lcall
and
rol
mov
mov
shrl
incl
dec
xchg
xor
stos
jbe
push
jecxz
aas
lahf
push
repnz
fistl
add
and
fs
dec
dec
pushw
pop
sub
iret
or
cmp
xchg
pop
fnstsw
cmp
inc
mov
xchg
ljmp
dec
ds
enter
insb
fdivrl
es
dec
ja
lahf
mov
push
and
rcrb
loop
aam
out
jbe
pusha
xchg
sarl
lret
fcmove
nop
pop
fsts
inc
mov
cmc
std
sub
mov
mov
mov
push
rolb
mov
cmp
dec
aad
popl
fisttpl
ds
adc
push
jo
ja
adc
jmp
cld
pop
dec
add
push
pop
mov
scas
push
mov
mov
fucomip
xchg
jo
dec
mov
push
int3
lret
push
aaa
cli
xor
mov
ljmp
cmc
jecxz
js
stos
push
push
mov
out
data16
clc
pop
pop
mov
xchg
xor
pop
xlat
push
mov
jns
or
popf
aas
shr
fistpl
cmc
or
arpl
lcall
mov
out
mov
pop
inc
loope
mov
bound
dec
outsl
lods
insb
ss
fistpll
js
mov
addb
xchg
cwtl
imulb
jns
out
and
sbb
add
ret
leave
imul
into
mov
lret
aaa
shlb
negb
sbb
pop
cmp
jl
cmpl
iret
jl
pop
xor
pop
inc
pop
lret
cmp
int3
xchg
repz
movl
les
cmp
fisubrl
sbb
xor
or
and
cmpsl
adc
mov
pushf
pop
lock
test
or
mov
ffree
test
in
mov
lahf
out
push
ret
xor
ljmp
mov
scas
fwait
test
mov
pushf
sub
and
outsl
aaa
mov
xor
inc
inc
fcomip
sbb
enter
push
lret
fadd
cltd
or
das
in
mov
cmp
aam
es
jno
loope
hlt
xchg
sub
push
fstps
xchg
jl
sbbl
clc
and
jb
and
push
loop
fcomps
sbb
mov
inc
xor
daa
in
and
clc
push
xchg
push
sar
in
mov
xchg
pop
mov
idivl
movq
adc
mov
push
jbe
pushf
in
push
daa
into
xor
mov
cwtl
icebp
and
adc
mov
xchg
lods
rcr
add
shlb
cmp
jb
mov
aaa
pushf
loope
pop
loopne
mov
ljmp
leave
in
cli
xchg
loopne
adc
popl
scas
mov
scas
mov
add
in
inc
push
jl
jae
les
pop
leave
call
xchg
fs
xor
mov
dec
sahf
leave
out
enter
stos
xchg
dec
jl
jle
jecxz
mov
fcmovbe
dec
shl
mov
cltd
jns
cmp
jne
xor
stos
push
andl
jae
je
cmp
mov
imul
into
and
xchg
xchg
xor
pop
pop
fcmovbe
or
daa
pop
cwtl
int3
lcall
lret
popf
and
dec
fcoml
push
cmp
lods
pusha
push
daa
ret
das
test
cmc
and
loopne
pop
test
dec
adc
mov
mov
or
xchg
arpl
ss
mov
imul
rorl
loopne
iret
aaa
std
sbb
xchg
sub
push
fldl
pop
pop
pop
in
repz
stos
inc
jle
fsubr
out
lret
fwait
jl
dec
lahf
add
pop
cltd
push
cmpsl
xor
jns
sub
cltd
mov
icebp
sti
adc
jbe
std
popf
ds
js
mov
movsb
lock
iret
jae
int
xor
jnp
jno
pop
jno
mov
rclb
fstpl
mov
sub
push
and
add
leave
out
and
sbb
jns
sub
dec
lods
hlt
mov
shl
imul
cmpsb
mov
fwait
mov
lret
int
ja
cmpsl
lahf
test
rorb
jns
mov
pusha
repz
dec
xchg
mov
sbbl
sti
sbb
leave
test
ja
cmp
add
ror
xchg
add
xor
inc
lods
ss
push
push
stos
xor
cmp
xor
loopne
jno
fstpt
out
jo
pop
xor
inc
dec
std
push
jg
mov
adc
scas
scas
add
jl
or
ret
xor
iret
mov
mov
cmc
rcrb
xor
inc
pop
repnz
mov
pop
ljmp
int3
add
outsl
jbe
dec
pop
out
insb
mov
xor
jmp
mov
das
xchg
mov
mov
test
push
sub
push
mov
nop
or
shll
sub
leave
jnp
push
mov
inc
pop
xor
mov
pop
pushf
mov
sub
sbb
roll
push
fmull
ja
lea
jbe
dec
mov
pop
jg
xor
cmp
mov
lds
lcall
fwait
call
lahf
cmp
cmp
xorb
push
sti
cmpsl
xchg
cwtl
xchg
jge
mov
jg
mov
cmc
pusha
lock
push
outsl
mov
scas
arpl
mov
rcll
call
out
pop
ljmp
insl
popf
mov
je
push
adc
sub
cli
jle
xor
mov
xchg
jg
jns
xchg
lcall
push
shrl
xor
push
fiaddl
scas
dec
out
mov
imul
aam
jne
test
sar
loopne
xor
repnz
data16
cs
push
mov
imul
into
andb
mov
jbe
xor
or
aaa
repnz
cmpsl
sbb
xor
mov
movsl
adc
push
repnz
adc
push
sub
out
jne
add
cwtl
iret
aaa
pop
mov
pop
pusha
mov
mov
sbbb
rorl
pop
daa
jge
loop
mov
sub
push
gs
sarl
lea
xor
je
pop
mov
add
dec
rcrb
xorl
push
es
mov
ljmp
pop
and
fdivl
jp
rclb
addr16
push
cmp
mov
or
pop
dec
sahf
xchg
xchg
imul
xchg
sub
inc
jl
dec
mov
jne
pmaxub
iret
cmp
mov
push
bswap
mov
ja
adc
cltd
fwait
and
sub
xchg
mov
add
mov
fmul
mov
jp
add
sbb
loope
jno
mov
add
test
cmp
mov
daa
faddl
test
sbb
and
push
and
inc
sbbl
adc
rorb
pop
push
add
dec
ret
mov
sbb
das
lret
jnp
fstl
test
xchg
dec
cmp
out
int
es
dec
sahf
xor
lds
jo
xchg
jle
xor
xor
sub
xchg
ret
pop
scas
js
fidivl
mov
rorl
xchg
push
mov
int3
mov
jne
and
lods
mov
stos
add
cli
cltd
add
pop
push
test
jns
mov
sub
icebp
stos
loop
xchg
sti
inc
jp
mov
xor
data16
je
fwait
out
mov
fst
mov
pusha
cltd
xor
push
sub
stos
fcmovnbe
push
mov
pop
jo
js
cmp
fisubl
lds
fs
jge
jae
pop
mov
and
sub
cmp
cwtl
add
push
sub
out
mov
mov
cltd
jno
sbbb
add
mov
dec
pop
mulb
inc
xchg
sbb
push
iret
ljmp
add
fsubr
mov
jb
lock
and
pusha
jmp
in
std
mov
dec
movsl
mov
fisubl
xlat
vfrczpd
fcmovnbe
xchg
dec
lods
jnp
push
lods
out
fwait
or
sbb
push
sub
pop
aas
pushf
jle
mov
sbb
mov
push
sub
xor
pop
das
jns
dec
dec
add
lahf
cmp
shll
mov
neg
cld
xlat
addr16
out
push
mov
cmpsl
xorb
jmp
popa
mov
xor
orl
jmp
mov
pop
scas
stos
cmp
rorb
imul
ljmp
les
xchg
sub
jp
and
shll
sets
jnp
dec
into
fimuls
loope
sbbb
xchg
hlt
xchg
fmul
mov
mov
in
in
idivl
out
inc
sub
scas
rcr
jne
jae
push
cmc
mov
adc
or
and
push
rcrl
dec
aas
mov
aad
mov
cmpl
sub
filds
or
mov
outsl
nop
test
add
mov
aam
movsl
outsb
cmp
mov
je
movsl
lcall
cli
lock
arpl
sbb
sbb
jl
aam
std
das
lods
add
mov
jb
es
xchg
movsb
mov
xor
in
xchg
popf
sbb
jle
or
adc
jge
in
mov
add
pop
jmp
add
in
pop
push
jo
fprem1
inc
int3
lcall
mov
sub
out
sub
push
add
jb
addr16
mov
xchg
push
xchg
and
fnsave
add
push
lock
mov
mov
sarl
mov
cmpsb
sarl
mov
sbb
fmulp
sub
mov
push
lock
add
fdivl
repnz
add
fstps
pop
pop
sub
call
pushf
lods
xor
sub
dec
fsubs
add
clc
xchg
jecxz
cmp
and
stos
mov
cs
pop
cmp
fisubrs
lods
imull
pop
jg
or
xchg
in
pop
inc
out
cs
mov
test
leave
mov
je
xchg
pop
dec
imul
cld
call
jb
jno
iret
in
push
mov
inc
xchg
or
mov
fmul
in
jl
adc
out
or
mov
movsb
ja
and
mov
cmp
push
subb
mov
cmp
cmp
sbb
icebp
loope
jg
cmp
les
cltd
cs
mov
icebp
add
stc
add
int3
mov
lret
test
scas
xorl
adc
fisubrs
jns
mov
int3
movsb
adc
lods
push
pop
sub
fnstsw
lods
pop
pop
xor
mov
adc
lea
jle
mov
sbb
mov
xchg
imul
and
in
pop
inc
hlt
or
test
jns
cld
xchg
int3
shl
sbb
cmp
and
jo
jmp
scas
fistl
mov
sub
and
xacquire
dec
sbb
flds
scas
jecxz
sub
cs
adc
shll
jl
and
xor
inc
jl
mov
and
data16
jbe
dec
push
aam
or
jns
xchg
jns
imul
cs
in
shlb
iret
xor
jle
mov
jmp
sbb
mov
inc
xchg
pop
add
das
fcompl
xchg
cmp
cli
push
call
mov
test
loope
icebp
cmc
dec
sarb
sub
adc
pushf
divb
call
insl
mov
es
mov
mov
mov
rorb
xchg
xor
imul
aas
and
loopne
jbe
arpl
fst
or
xchg
hlt
mov
xor
cmpsb
push
sub
mov
sbb
mov
adc
rcl
sbb
stos
repnz
data16
fwait
popa
ja
push
pop
sti
scas
push
and
and
je
test
dec
idivl
fmulp
shll
push
outsb
out
mov
ret
repnz
stos
push
dec
sub
mov
dec
add
pop
sbb
adc
push
sbbb
out
enter
xchg
push
inc
lcall
mov
dec
push
mov
mov
adc
pop
and
pushf
sbb
push
or
pop
cld
ror
icebp
cmp
dec
inc
push
std
scas
lcall
inc
and
lahf
in
adc
ds
mov
lods
loope
adc
inc
js
sti
or
enter
xchg
dec
sub
cmp
or
out
outsb
xchg
js
int
loopne
sub
adc
mov
mov
sbbl
push
inc
mov
sbb
xor
lret
imul
inc
ficompl
imul
jnp
shlb
andl
decl
mov
bound
adc
imul
movsl
mov
inc
in
adc
jl
lea
adcb
xor
lock
xchg
cmpsl
jne
xchg
lods
mov
dec
shl
imul
sub
inc
adc
out
es
xchg
dec
loopne
mov
mov
addr16
mov
add
clc
or
mov
pop
fnstsw
repnz
mov
loopne
pop
pop
cmp
inc
xchg
xchg
push
mov
sub
int
out
stos
sub
inc
imul
and
pop
icebp
mov
adc
lahf
mov
mov
leave
lret
cmp
rclb
pop
scas
fiaddl
scas
outsl
sbb
jnp
test
xor
cld
lods
icebp
mov
sub
pop
les
pop
ret
xor
mov
mov
enter
push
mov
xchg
mov
sbb
testb
push
mov
mov
sub
fcmovbe
in
adc
sub
lret
fbstp
inc
aam
sbb
cld
in
inc
xor
movsl
add
test
sub
lret
fistpll
xchg
xchg
mov
jne
in
outsb
mov
daa
lods
mov
pop
pop
ss
popa
sbb
mov
mov
fldt
cmp
insb
and
or
mov
lods
rcl
stc
loope
adc
aaa
and
imul
hlt
xchg
xchg
pop
mov
movsl
jns
jo
or
and
out
daa
shll
aaa
in
inc
mov
xchg
je
ja
dec
scas
aaa
xchg
dec
jg
jmp
and
sub
mov
xor
lods
aas
sub
sbb
pusha
cmp
mov
in
pop
jbe
mov
push
and
xchg
sub
push
push
push
aad
mov
out
inc
mov
xchg
sbb
sbb
and
mov
sub
add
lahf
mov
lods
es
or
pop
repz
cltd
out
std
pop
nop
sar
push
mov
lock
mov
shlb
les
iret
les
test
out
in
inc
pop
jmp
or
cltd
in
mov
popf
insb
mov
into
cmc
cmp
enter
out
out
jmp
inc
daa
sub
dec
sbb
inc
in
or
shl
ja
jno
jb
add
stos
ret
xlat
lret
ja
lods
aad
or
mov
add
out
and
push
inc
lret
cmp
sub
int
or
shlb
pop
mov
mov
adc
std
add
ja
leave
push
adcb
add
jecxz
jecxz
cmp
iret
fbstp
push
movsl
pop
iret
push
sub
adc
mov
pop
cmp
inc
int3
and
inc
ljmp
xlat
jmp
into
lock
xchg
pop
in
or
jge
push
pop
lea
add
mov
lods
xchg
leave
into
aas
stos
fisubrl
call
test
jnp
jnp
je
fmulp
in
xchg
or
cltd
out
repz
push
cmp
roll
jp
ret
xchg
rcl
or
cmpsb
stc
aas
mov
push
pop
add
and
sub
add
ret
in
loope
dec
push
push
jb
xchg
and
leave
fidivrl
les
jl
push
lea
cli
mov
wbinvd
jbe,pn
faddl
push
mov
jmp
cmp
fdivs
or
push
lods
mov
int
lret
cwtl
iret
out
std
jb
or
mov
imul
push
adcl
pop
mov
jbe
fadds
cmpsl
std
pushf
xlat
add
pop
lret
into
mov
jmp
cmp
shlb
out
rorb
adc
inc
add
dec
xchg
cld
cmp
mov
dec
xchg
cmp
pop
or
int3
push
pop
mov
jg
jge
fidivl
mov
shlb
sbb
das
xor
ret
pusha
xorl
cmpsl
and
dec
iret
fdivs
mov
test
jne
pop
lea
sbb
movl
mov
cmpsb
xchg
adc
xor
pop
lock
cmpsb
xlat
add
ss
pushf
fs
xor
mov
mov
outsb
das
lcall
aas
mov
mov
adc
and
imul
mov
xor
cmc
dec
je
inc
test
cmp
out
mov
testl
repnz
mov
adc
xor
jle
push
xchg
not
pop
pop
repz
sbb
and
test
repz
dec
or
adc
popa
pop
jp
add
lret
push
push
aas
inc
xchg
daa
sbb
cltd
nop
mov
adc
sub
xchg
push
mov
lahf
jo
sbb
test
dec
cmp
test
jbe
sbb
loop
dec
mov
sahf
mov
mov
xchg
sbb
mov
int3
shl
mov
push
push
mov
pop
xchg
mov
mov
insl
aam
repnz
in
push
rcll
mov
aas
ss
or
cli
mov
jns
push
jmp
adc
aas
and
imul
cltd
mov
pushf
and
push
jb
mov
sbb
sub
cmp
jmp
cmp
scas
sbb
cmp
test
fistl
xchg
cmc
nop
inc
push
and
mov
jmp
out
mov
test
shl
push
add
or
sbb
sarb
jg
or
jmp
xchg
call
pop
xor
xlat
aad
iret
xchg
ljmp
sbb
sbb
xor
fistpl
insl
jp
ja
pop
dec
mov
sti
xchg
and
mov
sbb
dec
fsubs
flds
out
sub
pop
xor
xor
push
add
shr
fs
insl
cwtl
pop
mov
pushf
add
sub
inc
les
imul
adc
stc
mov
jns
test
and
inc
add
dec
fadd
popa
fistps
dec
lds
xchg
shlb
push
pop
jnp
add
xor
lock
lds
xchg
push
xor
sti
xchg
mov
sbb
nop
or
mov
in
into
xchg
mov
sub
testb
cmc
fwait
and
std
inc
in
test
mov
mov
inc
jecxz
mov
push
and
push
decb
sbb
cmp
jge
je
pop
or
mov
xchg
xorb
xchg
lcall
mov
mov
pop
or
bound
cmpsl
and
lods
daa
in
sti
inc
popf
or
popa
icebp
sbb
push
loopne
adc
mov
insb
inc
push
fst
mov
dec
and
dec
fildll
dec
push
cmp
and
jle
popa
xchg
idivb
out
mov
rcrb
iret
jns
mov
add
pop
mov
and
in
jo
cmpsb
add
and
xchg
adc
lods
adc
cs
jmp
test
cmc
push
aam
pop
testb
test
outsb
mov
jbe
call
insb
xor
mov
and
xlat
imul
pop
pop
aaa
lds
xor
inc
movsb
ror
and
data16
popa
das
xchg
push
xchg
movsb
mov
call
test
shlb
test
out
adc
loopne
xor
jb
lea
add
mov
mov
les
sbb
dec
mov
les
jns
test
fiaddl
add
mov
mov
sahf
cmp
and
call
out
sarl
adc
jmp
iret
add
mov
scas
outsb
lea
adc
mov
adc
imul
shll
jmp
lods
les
mov
arpl
movsb
mov
push
outsl
scas
cmp
or
stos
rorl
dec
cmpsb
movsl
int3
stos
add
pop
sbb
adcb
jmp
test
ds
or
mov
dec
inc
inc
mov
dec
stos
push
stos
adc
xchg
sub
imul
xchg
mov
cmp
mov
push
cmp
add
mov
jns
mov
push
fstps
dec
out
lret
out
mov
dec
or
aam
add
sahf
jg
push
push
in
pop
repnz
sbb
xchg
sbb
stos
adc
aam
jmp
cmp
test
add
jno
enter
cmp
ret
and
aad
and
pop
sbb
shlb
sti
sahf
mov
sbb
shrb
stos
cmp
out
xor
push
pop
test
inc
mov
repnz
loop
lock
lea
int3
cmp
adc
lds
cwtl
rcll
mov
lahf
cmpsl
shufps
mov
bound
and
call
jnp
sti
test
arpl
inc
les
xchg
mov
out
pusha
out
icebp
test
out
shll
mov
das
jl
xor
addb
fwait
jo
int3
faddp
fldt
sub
xchg
push
stos
rorb
jmp
dec
push
inc
ficomps
adc
xchg
ljmp
sti
xor
push
mov
adc
dec
decl
je
push
jbe
les
popf
mov
pop
xor
pusha
dec
lock
out
push
jmp
mov
mov
gs
bound
push
sbb
pop
add
mov
test
xor
pusha
sub
sub
jnp
pop
sub
xchg
inc
lahf
push
lret
xlat
bnd
int3
sbb
cs
rclb
ficomps
sub
js
testb
cmpsb
ja
in
idivl
xchg
pop
push
push
jecxz
imul
int
pop
lods
cld
cltd
mov
sbb
in
orb
out
notb
inc
push
ss
mov
lods
mulb
or
add
mov
jbe
pushf
mov
adc
push
pop
fsubrs
pushf
fiadds
mov
jnp
ret
inc
pushf
xchg
push
dec
jbe
rcrl
ja
cltd
mov
std
inc
mov
repz
jo
fs
mov
in
rcll
sub
mov
push
sub
lahf
rcll
dec
lcall
nop
cmp
mov
cwtl
fimuls
push
and
mov
std
fildl
sbb
and
stos
inc
ret
xchg
sub
fistpl
leave
das
cmpsl
or
add
fidivs
cltd
sub
outsb
ss
fdivp
ffree
mov
jns
pop
or
sub
mov
xchg
rolb
inc
mov
inc
pop
stos
xchg
jg
lret
dec
push
mov
mov
cmp
cmp
xor
xchg
sbb
je
sub
sbb
fildll
lea
hlt
xor
arpl
int3
pop
nop
pop
ja
fs
repnz
repnz
mov
sbb
inc
cmpsb
mov
adc
cwtl
addb
and
lods
mov
inc
ret
and
mov
mov
push
loopne
cmp
fsubrl
arpl
dec
stos
mov
call
inc
xchg
or
xchg
cltd
sub
cmc
cwtl
xor
adc
inc
pusha
jb
jp
mov
push
repnz
mov
inc
sbb
mov
scas
cmp
jle
imul
mov
fs
pop
pop
sub
sub
sarb
mov
sbb
hlt
pop
outsl
jne,pt
lea
les
imulb
add
xlat
mov
call
xchg
das
dec
xor
insl
outsl
push
mov
mov
cmpsl
lahf
cmpsb
mov
popa
or
mov
pop
add
xlat
jle
or
cmp
icebp
jns
sub
pop
mov
pushf
xchg
pop
les
xor
mov
iret
inc
jg
sub
mov
inc
xor
popa
out
movsb
out
pop
bound
jbe
pusha
rolb
shlb
aam
mov
xchg
dec
repz
adc
icebp
les
push
mov
push
leave
xchg
outsb
mov
in
xchg
pop
imul
test
add
xor
xchg
xor
clc
push
mov
push
adc
push
rorl
push
pop
and
sbb
adc
adc
cmp
je
out
adcl
cltd
shrb
jbe
test
scas
xor
mov
inc
lock
adc
jne
mov
scas
popl
jae
repz
ret
and
or
mov
pop
sub
or
scas
ret
and
iret
jl
sub
int3
fisttpl
and
mov
dec
push
sbb
fidivrs
mov
jno
pop
nop
sbb
xchg
and
sbb
cmpsl
loopne
mov
repz
ss
ss
or
arpl
mov
jmp
mov
repnz
ffreep
and
enter
test
imul
enter
xlat
sbb
jecxz
mov
stos
test
xlat
sbbb
roll
adc
jl
push
dec
pop
mov
pop
sbb
shl
test
or
daa
lret
xor
aaa
cmpsl
push
jle
dec
xchg
ret
xchg
pop
mov
sub
xor
xor
mov
cmp
out
add
cli
push
rolb
hlt
pop
call
sub
mov
sub
or
call
xchg
cli
push
mov
adc
test
daa
sbb
cmc
pop
sub
jns
insb
fndisi(8087
icebp
stos
cmp
mov
sbb
ds
mov
pop
push
stos
xchg
movsb
jb
and
dec
sti
sti
or
imul
push
cmpl
add
lds
int
mov
sbb
and
out
int3
mov
icebp
movsb
or
jl
leave
cmpsb
mov
in
out
mov
popf
mov
mov
dec
mov
push
push
xchg
mov
push
fbstp
mov
sub
jg
push
jl
jmp
or
add
in
dec
lea
jnp
daa
xlat
pop
std
jp
xchg
xchg
dec
bound
dec
jb
push
ret
add
cmpsl
add
ja
and
mov
call
push
cmp
pop
popf
and
xor
pushf
xor
jecxz
xchg
rcrl
rcrb
sbb
in
lods
cwtl
xchg
mov
mov
shrb
jmp
shll
inc
lret
adc
push
inc
adc
mov
push
in
aad
insl
stos
pop
dec
rcl
ficoml
xor
lret
add
lock
inc
dec
push
inc
cmpsb
test
dec
les
cs
pop
push
push
imul
pusha
movsl
and
push
ljmp
je
or
adc
pusha
or
mov
sub
lods
jle
dec
mov
test
cmp
xor
xchg
aas
xor
sbb
dec
jp
fsubl
fsts
in
cwtl
adc
out
adc
mov
pushf
out
ss
sbb
lods
adc
call
into
inc
movsl
jno
mov
xchg
mov
pop
sub
mov
add
outsb
xchg
into
dec
xor
icebp
sub
or
push
in
cmp
inc
or
inc
inc
xor
andl
lahf
pop
js
jle
lret
mov
shlb
and
bound
push
cmovno
sti
gs
xlat
mov
push
lock
or
lahf
xchg
push
mov
dec
cmp
out
pop
xor
mov
loop
std
cmc
movl
adc
jb
loop
int3
adc
rcl
imul
push
xchg
shlb
mov
inc
call
lret
dec
clc
shrb
jl
or
mulb
xor
out
xchg
jo
dec
push
add
hlt
ja
jge
enter
jbe
adc
jne
inc
ret
xor
fdivl
aaa
rol
out
hlt
pop
fwait
es
or
aas
adc
js
mov
hlt
inc
in
cmp
out
cmpb
sbb
dec
bound
std
mov
mov
out
xlat
rcrb
cwtl
cltd
pop
fnstcw
push
pop
sbb
mov
mov
idivb
push
xor
pop
pop
mov
pop
push
outsb
ret
nop
dec
mov
adc
lods
mov
je
das
rcrl
subl
jnp
repz
icebp
add
aam
mov
roll
in
nop
sub
dec
leave
nop
test
jl
loopne
sbb
bound
mov
clc
or
add
mov
sub
icebp
xchg
jno
stos
aas
fs
ja
or
jge
cld
jl
cmp
loopne
loope
fstl
les
shlb
and
xchg
out
pop
insl
xor
popf
lods
shll
andb
js
push
out
fldl
sub
xchg
dec
aad
out
out
ds
loop
mov
jns
inc
mov
scas
cmp
fs
es
jne,pt
nop
mov
jo
mov
dec
add
jmp
pop
jge
sub
fdivp
fstl
sti
mov
adc
orb
xorl
jle
lods
hlt
pop
scas
pusha
icebp
lds
xchg
cli
mov
inc
pop
push
mov
mov
mov
cmp
out
gs
fs
mov
aad
and
shlb
jl
aas
pop
inc
out
mov
or
dec
inc
pop
push
push
push
and
jecxz
jne
fsubp
lods
push
mov
aad
inc
mov
mov
push
sbb
lds
add
daa
xlat
stos
les
int3
inc
outsb
out
pop
fmulp
lahf
shll
and
cmp
imul
sbb
mov
push
jns
int
jl
jg
adc
and
and
pop
jae
pop
mov
repnz
adc
cmp
out
xchg
inc
in
daa
jb
dec
dec
aaa
jmp
sbb
divl
in
stos
jge
loope
jge
xchg
xchg
xrelease
sub
cltd
out
dec
and
push
xchg
fildl
scas
mov
xor
jge
inc
jne
test
sbb
std
cltd
fistpll
adc
and
movsl
icebp
xchg
and
call
mov
rolb
adc
cmpxchg
cmp
shrl
or
mov
movsl
push
mov
test
mov
or
frstor
ds
les
cmpb
sbb
or
in
adc
fs
pop
sbb
aaa
push
out
jmp
scas
sti
mov
lea
adc
push
popa
js
sub
push
inc
cmp
std
pop
sbb
stos
xor
int3
mov
sbb
mov
cli
lret
in
jae
dec
dec
aam
xor
and
out
adc
pop
push
or
imul
mov
fisttps
push
out
mov
inc
push
cltd
ret
xorl
mov
rcll
data16
cmc
push
xchg
lcall
add
adc
data16
call
stos
mov
popa
psllq
lret
ljmp
inc
sbb
adc
mov
inc
xchg
rcll
notl
cmp
sub
aas
inc
fidivl
stos
push
push
popa
adc
dec
lods
add
sbb
pop
sahf
js
xchg
arpl
insb
dec
fmull
lret
mov
rorb
test
sub
outsl
or
add
mov
mov
loop
mov
movsb
sub
mov
adc
dec
jns
mov
or
dec
je
rclb
stc
jns
xor
into
xor
mov
inc
adc
lock
sbb
sub
xor
into
pop
jmp
dec
int3
sbb
mov
mov
fildl
dec
outsb
fstl
mov
roll
jbe
inc
dec
pop
jns
jmp
xor
cmp
insl
rclb
fs
sbb
aaa
ds
xor
imul
lds
pop
push
mov
or
add
lret
cltd
jge
cmp
loope
lods
aas
scas
ret
pop
mov
inc
loopne
push
icebp
mov
inc
jecxz
adc
scas
int3
sbb
addr16
xlat
shrl
and
filds
cmpl
or
ss
int3
outsl
xor
push
xor
xchg
mov
add
xchg
and
xchg
jmp
inc
nop
and
out
fs
mov
jnp
cwtl
push
jmp
cli
jecxz
cmp
xchg
push
ds
sub
push
jnp
cmpsb
ret
idiv
mov
push
sarb
insl
sbb
mov
int3
pop
xchg
mov
push
stos
movsl
mov
cmp
stos
int
or
repnz
cmp
sub
das
js
add
dec
idivl
icebp
dec
mov
fidivrs
jbe
mov
xchg
ja
ja
sbb
pop
push
ffree
xchg
shrl
inc
lahf
ret
cmpsb
repnz
aas
test
mov
ret
sub
notl
int
mov
imul
jg
xor
mov
and
insl
mov
cltd
adc
mov
inc
loop
pop
or
and
aad
out
cmpl
add
mov
rcr
mov
sbb
pop
stc
mov
xchg
or
aaa
and
iret
and
and
jle
test
mov
ljmp
aas
pop
push
xor
cltd
cmp
pop
inc
sbb
icebp
sub
out
pop
add
aas
xchg
or
or
loop
pop
push
or
mov
int3
enter
push
cmp
inc
insw
pop
out
mov
mov
idivl
jmp
cmpl
jbe
mov
lea
fldt
jge
aas
jnp
stc
stos
aaa
and
test
fiaddl
mov
ljmp
adc
out
xchg
pusha
pop
mov
imul
and
sbb
dec
jno
ret
sarl
jg
jae
std
testb
cltd
ja
pop
mov
push
mov
add
or
es
xor
inc
repnz
xor
sti
inc
pop
inc
je
arpl
arpl
sarl
stc
bound
or
into
sbb
mov
sahf
hlt
mov
cli
in
lret
idivb
xchg
mov
loop
and
ljmp
clc
loopne
nop
lahf
sbbl
mov
mov
ss
mov
dec
lea
push
shl
imul
dec
mov
pop
ret
push
cmp
jg
shrb
sbb
movsb
jns
and
repnz
sbb
jge
popa
mov
push
xor
mov
pop
xor
fcomps
fisubl
xor
addr16
xchg
mov
mov
shrl
cwtl
jno
push
js
mov
jg
inc
mov
push
jecxz
dec
adc
mov
test
xlat
push
add
imul
or
mov
jne
pop
xor
loop
ficompl
aad
and
insb
or
push
call
sub
inc
loopne
adcb
jnp
pop
mov
std
outsl
add
dec
add
bound
xchg
icebp
js
adc
stos
or
rcrl
mov
push
and
pop
imul
push
lock
dec
xchg
ja
jns
cmp
stos
lock
rolb
cmpsb
add
xor
jae
cmp
adc
inc
into
push
dec
mov
adc
aad
or
adc
push
cltd
xchg
dec
stos
push
lods
pop
push
sahf
push
push
jne
or
mov
aaa
mov
mov
mov
jbe
xchg
dec
inc
xor
jle
in
leave
nop
jbe
cmc
popf
push
ds
andb
int3
cmp
xchg
mov
inc
jg
shrl
add
int
repz
fimuls
inc
das
add
movsb
or
mov
mov
jp
arpl
sbb
arpl
or
inc
jp
cmc
sbb
push
lock
sbb
jae
push
loop
mov
pop
or
add
mov
sub
cwtl
loopne
jle
mov
add
les
and
or
dec
pop
lretw
mov
mov
nop
cmp
pop
mov
bound
jnp
stos
push
scas
addb
sbb
adc
hlt
sub
pop
ret
addr16
lcall
mov
lret
and
fldenv
xchg
xor
sbb
fcomps
test
inc
and
jmp
jnp
xchg
sub
jecxz
xlat
cmp
fstl
imul
mov
mov
mov
inc
push
adc
les
repnz
xchg
or
push
xchg
push
fwait
xchg
jmp
enter
shll
and
cmp
jl
inc
push
popa
leave
les
shl
fstps
stos
cmpsb
pop
ret
sub
dec
stos
mov
arpl
ret
push
out
adc
addr16
es
cmpsb
push
repnz
pop
dec
push
rcr
lret
shlb
ja
add
sub
mov
js
les
adcb
les
iret
insl
insl
negb
cltd
orb
test
jecxz
jnp
rorl
cmpsb
cwtl
dec
test
in
inc
out
nop
cmc
aas
in
xchg
mov
mov
loop
or
lcall
fildl
test
sbb
lret
mov
cmp
adc
cmp
aas
gs
roll
je
pminub
lcall
sbbb
in
lret
popf
inc
dec
fsub
out
adc
adc
pop
stc
sbb
mov
mov
aaa
and
sub
rol
sub
xchg
push
les
fsubrs
insl
out
rcl
mov
clc
adc
push
mov
bound
loopne
mov
dec
in
outsb
xchg
xchg
in
mov
mov
shr
dec
sbbl
cmc
mov
dec
enter
pop
popf
xor
mov
dec
sbb
push
xor
shlb
xchg
xor
adc
popa
jo
fcomip
xchg
inc
test
pop
jb
add
pop
dec
iret
mov
pop
popa
pushf
jg
push
xchg
or
xchg
arpl
mov
cmp
not
xchg
jno
mov
das
push
and
and
mov
loop
jns
imulb
outsl
popa
jge
pop
shl
and
mov
xchg
shrl
dec
hlt
push
sub
and
or
les
adc
push
push
fcoms
push
daa
ret
sub
fmull
aas
dec
int
out
push
push
add
jp
insl
aaa
push
xor
cwtl
int
sbb
push
push
mov
sub
lock
loopne
test
in
push
mulb
movl
and
push
test
and
jns
jns
xor
fstl
ljmp
cmp
push
mov
dec
sbb
jg
mov
pop
into
push
test
int3
adc
adc
imul
clc
test
cld
mov
in
pushf
nop
jp
xlat
movsl
adc
jle
add
cmp
dec
test
dec
adc
out
mov
loope
jae
imul
rcll
cmp
xchg
xorl
insb
rcrl
imull
adc
mov
popa
aad
pusha
mov
cmp
cmp
shlb
ss
xchg
fs
adc
pop
adc
test
test
pop
lcall
out
imulb
push
sub
in
push
cs
mov
popa
test
or
xchg
push
cmpb
xchg
aad
fldz
xor
repz
inc
dec
repnz
jbe
dec
nop
icebp
scas
test
xchg
push
pop
call
or
addr16
in
sub
or
xchg
push
add
jp
xchg
js
xchg
ret
repz
dec
dec
mov
adc
test
mov
add
cmp
push
ljmp
test
pop
xor
and
xor
or
movl
push
xchg
push
push
mov
and
sbb
int
add
repz
push
int3
xor
imul
insb
push
or
imul
jmp
in
imul
les
in
push
jno
mov
mov
popa
fwait
pop
cmp
popa
stos
movsb
cld
ja
stc
std
pusha
push
jecxz
loope
repz
push
xchg
cld
mov
xchg
pop
sbb
cmpsl
mov
push
daa
dec
fld
add
xchg
sti
dec
lods
lds
and
stos
sub
mov
xchg
push
iret
pop
jg
pop
add
or
sub
inc
das
out
movsb
repz
push
lds
clc
fsts
mov
mov
cld
mov
repz
sub
movsb
repnz
rcrl
or
mov
mov
mov
mov
add
fiadds
xchg
fs
sub
sub
xchg
mov
cmpsl
das
pop
mov
insl
inc
leave
rcrb
mov
icebp
mov
sub
fisubs
lret
add
out
imul
or
movsb
inc
test
lret
mov
std
add
scas
loope
icebp
movsb
adc
xor
jb
out
cmpsl
cmpsb
fistpl
jp
cmc
in
xchg
clc
mov
jge
arpl
sbb
mov
sub
mov
imul
adc
jmp
loope
and
jge
jge
into
pop
push
nop
mov
mov
push
xchg
loope
out
into
daa
mov
ja
cmpsb
mov
mov
hlt
movsl
cmp
gs
xchg
mov
pop
xchg
imul
loope
negb
fldt
in
mov
push
out
popf
fstpl
jle
movsb
test
jnp
mov
jae
sbb
addl
imul
int3
int3
leave
call
dec
jle
sarl
mov
jnp
ficoms
mov
push
cmp
pop
cld
inc
push
fadd
aam
mov
jno
push
cmp
jo
push
add
inc
std
aaa
loopne
imul
cmp
jnp
jecxz
data16
in
sbb
lods
inc
lcall
push
push
push
jo
inc
adc
jl
roll
gs
push
sbb
in
cld
outsl
sahf
in
data16
out
imul
mov
fbld
jecxz
movsl
std
icebp
aaa
ja
mov
push
lods
add
xor
das
mov
dec
adc
je
jbe
cmp
pop
push
rcrb
insb
fwait
bound
push
mov
arpl
push
in
mov
or
jo
idivl
fdivr
out
pop
aam
xor
xchg
jae
divb
gs
sub
lods
idivb
std
js
pop
insb
xor
jae
lea
and
xor
jno
sbb
cmp
cmp
sti
mov
in
push
sbb
loopne
sbb
inc
outsb
in
xchg
rcr
popf
push
into
lods
cld
dec
andb
je
dec
imul
mov
insb
in
add
jp
cmp
mov
dec
loope
inc
divb
inc
gs
out
mov
sbb
mov
fistpll
insl
sub
stos
out
mov
out
out
mov
add
and
enter
jo
ja
jae
sbb
xchg
push
xor
rcrl
jae
push
testb
mov
aaa
mov
xchg
shr
in
loope
aad
mov
xchg
or
ss
mov
xchg
pop
call
fmuls
stos
repnz
mov
jl
sarb
jge
mov
cmc
sahf
sti
das
pop
aam
add
fsubrp
movsl
cwtl
xchg
or
sbb
nop
cld
inc
pushf
sbb
mov
sbb
add
adc
mov
pop
add
xor
rclb
sbb
ja
mov
xchg
cmp
sbb
das
dec
push
aam
fs
ljmp
jecxz
jnp
jne
jmp
and
dec
jl
insb
push
push
xchg
or
stos
rcrb
pushf
adc
push
test
xor
cmp
faddp
stos
bound
aaa
sti
cmp
movsb
ret
aas
in
orb
push
mov
sbb
pop
mov
imul
mov
cmp
xchg
push
pop
jae
xor
pushf
lret
lahf
sub
sub
inc
add
cmp
add
jno
xor
or
fstpl
adc
and
jl
sub
cmp
pop
mov
jns
sbb
xchg
jb
es
bound
fcmovnu
lahf
cli
sbb
ja
sub
adc
push
ret
aas
dec
ficompl
xchg
lods
push
in
montmul
cmpsb
add
fs
xchg
sbb
aas
jp
jecxz
call
aas
jg
sub
sbb
jb
sti
or
dec
call
mov
ds
pushf
jg
out
sti
sar
mov
mov
or
push
aad
jae
mov
je
bound
xor
jo
ds
or
sbb
adc
punpcklbw
inc
cli
movsb
xchg
pop
sarb
out
repz
popa
cld
jge
sub
or
ror
imul
jge
adc
cmpsb
mov
sbb
or
mov
mov
and
mov
dec
add
das
mov
mov
mov
inc
rcll
dec
lret
test
loopne
xor
push
jmp
add
repnz
pop
loope
push
lock
pop
lods
dec
rcrl
fcomps
lcall
inc
push
in
lret
rcr
pop
jmp
mov
mov
lds
and
jae
xchg
jo
movsl
fistl
xchg
rcr
sbb
jo
jl
je
popa
push
push
pop
scas
sbb
sbb
cs
mov
mov
jb
daa
cmp
dec
cmp
loop
xchg
mov
incb
jmp
addr16
mov
lock
push
mov
sbb
scas
and
aas
mov
xchg
and
inc
movsb
and
adc
dec
sbb
or
jae
inc
mov
lds
jne
add
xchg
push
pop
inc
cmp
mov
fbld
in
out
out
lret
inc
sbb
mov
adc
stos
adc
xchg
cltd
cmp
dec
inc
iret
cli
imul
mov
out
pop
adc
into
xlat
pop
gs
mov
dec
shrb
xchg
adc
mov
and
scas
repnz
pop
xlat
out
enter
xchg
cli
sbb
gs
cmp
adc
mov
pop
sub
sub
inc
lahf
movsl
mov
cmp
hlt
adc
fldenv
rorb
cmp
adc
push
mov
mov
pop
sbbb
mov
cld
mov
hlt
lahf
loopne
or
mov
push
inc
xchg
out
mov
call
pop
pusha
aas
mov
push
add
mov
popa
aad
imull
pop
push
sub
stos
shrb
je
in
jecxz
sbb
pop
in
ljmp
shrl
mov
mov
lock
aam
loop
push
addr16
pop
in
pop
loop
int
shlb
and
sub
dec
xchg
rclb
push
fsts
pop
cmpsl
nop
mov
mov
adc
fdivr
leave
roll
arpl
jmp
pushf
push
andb
fidivs
fildll
data16
pop
fiaddl
fcoms
cmp
push
mov
js
add
mov
inc
mov
add
xor
xchg
jmp
data16
or
cs
inc
adc
fstpl
iret
pop
imul
add
cmp
mov
sub
fsub
dec
fs
push
or
cmp
loope
sub
decb
push
pop
push
jmp
and
xchg
fs
mov
in
mov
mov
cmp
dec
subb
mov
loop
fldt
add
fucomip
lahf
movb
push
push
in
fptan
in
mov
addl
mov
mov
rol
inc
repnz
in
imul
cmp
jp
mov
leave
movsl
and
xchg
aam
inc
cmp
imul
pop
push
xor
xchg
push
mov
js
fwait
gs
cld
pop
enter
adc
jbe
cmpsl
insb
mov
adcl
mov
or
mov
pop
or
enter
pop
iret
popf
ror
loopne
xchg
mov
xchg
fsubs
adc
popa
es
xor
adc
add
lock
in
mov
jmp
out
cmpsb
jl
jecxz
in
xor
jg
sbb
call
fnstsw
int
in
inc
or
sbb
mov
aad
es
lods
inc
out
and
inc
adc
incl
jb
push
enter
mov
ret
shlb
mov
pushf
cmp
stc
insl
jle
repnz
and
lret
cmp
jb
mov
xor
and
push
subl
aam
mov
push
fisubrl
rcll
or
xor
inc
shlb
outsb
xor
jbe
aam
stos
es
lock
mov
push
insl
xor
or
shrb
push
loopne
lock
sub
std
test
js
sbb
jnp
add
ljmp
shl
push
mov
mov
mov
mov
addb
out
es
push
sub
cld
mov
add
pop
insb
xor
mov
mov
repnz
je
mov
rol
mov
pop
stc
push
lea
fcomip
dec
ja
xchg
xor
aad
push
stos
fmuls
mov
cmpsl
shrb
fiaddl
sbb
shlb
jg
dec
lret
fistpll
mov
mov
sbb
ss
pushf
mov
push
pop
mov
mov
fcomi
out
add
out
sarb
xlat
jmp
mov
popf
cmp
add
dec
mov
out
ror
dec
inc
or
andl
arpl
xor
cwtl
push
js
shll
cmp
cmp
call
cmp
dec
outsl
lds
lock
add
push
mov
out
adc
xchg
clc
inc
out
and
jg
and
and
daa
sbb
mov
lcall
cmpsl
std
mov
mov
dec
push
sub
je
jno
dec
mov
subb
sub
add
popf
xchg
dec
divb
cmpsb
xchg
xor
push
inc
jle
dec
jecxz
or
nop
cmp
inc
fmuls
xchg
imul
int
xor
cld
roll
push
push
inc
push
mov
loope
pushf
test
inc
adc
mov
cmc
xor
fidivs
jbe
imul
or
inc
mov
add
std
mov
adc
add
fisttpl
sbb
clc
cmp
xchg
test
push
lret
repz
push
inc
js
fwait
imul
das
outsb
ja
mov
js
mov
out
add
decl
xor
mov
cmpsl
repz
mov
jecxz
fs
ds
push
clc
lea
inc
xchg
add
fisttpl
xor
stos
jmp
das
repz
mov
fidivl
sbb
shrb
fisubs
or
lcall
fiaddl
and
xor
leave
jecxz
call
sbb
add
mov
stc
addr16
mov
and
xchg
mov
repnz
dec
mov
clc
xchg
pop
xlat
adcb
scas
ret
lods
add
pop
out
xor
hlt
rol
sub
mov
iret
jecxz
cmp
stc
ret
xor
mov
or
sub
add
or
dec
cmc
scas
insb
les
jg
push
sarb
and
mov
add
dec
stc
out
push
pop
nop
stos
repz
stos
outsl
add
jg
outsb
js
out
mov
inc
or
je
ss
shrb
push
test
dec
out
int3
test
int
xlat
shl
xor
fs
mov
xchg
pop
cmp
xchg
mov
lahf
popa
xor
xchg
pop
pop
sub
enter
inc
fimuls
or
or
int
ja
cmpsb
ret
mov
and
mov
mov
mov
pop
jns
jo
icebp
out
cld
dec
insl
sbb
fistps
or
rep
inc
js
icebp
or
pop
outsl
dec
jne
sub
dec
adc
adc
jae
or
movsl
pusha
pushf
into
xor
gs
roll
mov
adc
xor
inc
mov
mov
xor
sbb
lret
push
cmpsb
test
sub
lds
arpl
lahf
cmp
bound
arpl
xchg
fwait
adc
mov
push
int
lcall
je
inc
mov
sub
test
pop
out
mov
mov
pushf
outsl
test
out
dec
fidivrs
bnd
cli
mov
insl
pop
push
mov
mov
mov
xchg
xor
stc
jg
push
mov
sbb
xchg
mov
mov
loopne
xchg
fs
cwtl
dec
mov
pop
mov
mov
cwtl
fs
arpl
aas
and
mov
mov
popa
lods
int
and
insl
push
adc
sub
aad
jae
loope
rol
cmp
mov
outsl
out
addb
ljmp
mov
ss
mov
adc
add
es
mov
nop
nop
cmp
sub
jl
pop
scas
sbb
cli
aaa
test
mov
rol
test
popa
xor
lds
shrl
jbe
sbb
pushl
and
push
cwtl
add
sbb
cmp
mov
test
push
andl
adc
xchg
mov
rcll
jmp
test
jbe
mov
dec
sbb
inc
shlb
add
movsl
repnz
sub
xchg
sub
sbb
xor
or
xchg
cmp
inc
xchg
nop
jp
inc
or
cli
jbe
add
stos
cli
rclb
sbb
popa
pop
sub
add
mov
add
inc
cli
imul
sub
jb
cmp
pop
sub
fdiv
out
lcall
arpl
insb
or
or
outsb
sbb
test
imul
push
inc
in
mov
xchg
rcrb
mov
mov
shlb
aas
sub
pop
jmp
pushf
mov
f2xm1
sarl
or
xlat
xor
add
dec
loope
bound
pushf
enter
mov
mov
pop
cltd
test
rcll
mov
xchg
lret
icebp
cmp
mov
imul
and
push
xlat
mov
and
stc
ds
dec
dec
stos
adc
jl
xor
jle
pop
dec
sbbb
mov
cmp
adc
pop
outsb
jge
les
xor
stc
mov
push
xor
sbb
push
adc
sbb
or
aad
aad
push
and
enter
lds
idivb
cmp
iret
inc
xor
cld
movl
sbb
das
lods
push
in
or
fldl
hlt
cmp
movsl
push
dec
mov
inc
lret
mov
aaa
ss
jge
icebp
sub
sbb
sahf
lahf
aam
jle
fwait
mov
dec
dec
mov
xchg
call
outsb
pop
push
inc
mov
pop
adc
ljmp
ret
test
jns
push
add
jo
push
add
pop
jp
pop
popf
mov
xchg
add
xor
sbb
mov
inc
cmp
sub
sbbl
cmp
rolb
into
adc
and
or
arpl
fmul
loopne
xchg
add
jns
fbld
inc
push
dec
or
fdivrp
push
ret
cli
dec
scas
ds
inc
mov
cli
shrb
pushf
jne
pop
push
pop
jp
sbb
mov
xchg
jle
dec
push
mov
adc
shlb
sub
sbb
stos
mov
mov
mov
into
and
adc
pop
pop
arpl
push
jle
jg
mov
int
fsubl
push
add
in
icebp
mov
inc
test
xchg
sarb
push
fs
mov
inc
xor
dec
repnz
leave
ljmp
mov
cmp
loope
jmp
iret
sbb
xor
movsb
dec
dec
leave
je
xchg
sbb
movsb
ljmp
push
sahf
or
cmp
sti
inc
or
stos
shr
ror
jmp
cmp
es
inc
test
dec
aas
inc
xlat
rcll
int3
xchg
mov
das
bound
jne
cmp
sub
aaa
mov
mov
fldenv
adc
push
pop
mov
xchg
out
ja
test
push
sti
mov
sub
lds
movsb
bound
pop
push
lcall
hlt
out
mov
or
jge
inc
data16
int
into
std
das
dec
stos
jo
add
push
dec
fiadds
pusha
xchg
mov
in
push
jmp
fcomp
repnz
ljmp
imul
in
sub
inc
sbb
jle
mov
xchg
jmp
popa
xchg
inc
pop
subl
mov
sarb
stc
cmp
mov
xchg
aas
rcrl
inc
adc
testb
mov
inc
lods
ljmp
xor
fldt
daa
cmpsl
cld
cmp
pop
scas
cmp
lret
pop
inc
pop
jnp
inc
rorl
xchg
filds
add
outsl
mov
dec
add
insl
inc
and
out
leave
dec
dec
in
adc
std
in
jmp
sahf
scas
xor
out
mov
ret
loop
ss
xchg
shlb
mov
inc
mov
cmpsl
adc
add
xlat
out
inc
ss
mov
enter
clc
cmpsl
push
xor
or
je
xchg
nop
push
mull
mov
xor
sub
sub
mov
push
fisttpll
out
mov
and
adcl
jne
mov
sbb
xchg
repz
adc
xor
fisubrl
mov
test
xor
adc
mov
add
lahf
lea
mov
lahf
arpl
cmp
dec
and
sub
mov
mov
divl
push
pop
inc
data16
test
cltd
and
in
sbb
push
out
mov
adc
fistpl
stc
dec
shrb
and
addb
inc
and
xchg
arpl
sbb
aam
fadds
cmp
loop
add
mov
out
outsb
push
addb
jmp
fs
aam
mov
lret
roll
idiv
cmc
add
movsl
xor
push
dec
test
in
out
sub
in
push
mov
lods
pusha
xchg
cmp
hlt
cmp
and
pop
lock
insb
mov
push
outsb
mov
adc
mov
cltd
das
push
imul
and
into
out
and
mov
cmp
dec
fistpll
mov
clc
cmp
and
or
push
mov
sti
adc
adc
lret
pop
inc
pop
or
mov
in
orl
dec
nop
or
push
cmp
arpl
jecxz
push
subl
mov
push
pop
jmp
fst
scas
cltd
pop
fisubrs
dec
xor
lods
mov
addr16
push
test
xor
mov
sbbb
iret
clc
dec
jp
jle
lahf
arpl
iret
imul
pop
mov
adc
in
sub
lds
push
mov
lods
pop
pop
clc
xchg
dec
cmp
hlt
cmp
pushf
jmp
faddp
push
negb
bound
cli
xor
vpunpckhqdq
rorl
mov
add
inc
and
pop
mov
push
hlt
into
fs
mov
xor
fidivl
or
cmp
pusha
jne
jne
jb
xchg
dec
sub
jb
out
mov
inc
mov
clc
mov
or
xchg
jecxz
dec
xor
mov
and
sbb
and
rcll
cltd
rcl
jmp
jle
xchg
fcomps
xor
popf
ljmp
push
pop
je
or
sub
iret
cmp
shlb
sahf
mov
mov
mov
xchg
mov
ret
lahf
pushf
mov
aaa
shlb
add
ret
xor
xchg
mov
test
cs
inc
insl
jb
fsubrp
inc
push
subb
inc
stc
arpl
gs
data16
jbe
test
xchg
ja
lock
jne
xchg
repnz
xchg
shl
imul
lds
popa
xor
notl
shl
pop
in
shll
xorl
add
push
mov
fistpll
push
aam
sub
pop
push
dec
repz
in
or
push
xor
je
aas
xchg
pop
test
js
dec
xchg
mov
dec
jge
sahf
adc
cmp
fucomip
lret
xchg
loop
cmp
pop
inc
sub
pop
dec
cmpsb
sti
add
bswap
sbb
push
add
xor
ljmp
jp
adc
cld
scas
jnp
movsl
les
dec
outsl
scas
lret
shlb
mov
sbb
ret
insl
mov
sub
pusha
lret
add
ds
mov
iret
lods
movsl
xor
xor
pop
xchg
into
insl
jle
inc
bnd
mov
jno
or
stos
into
sbb
xor
cmp
enter
sahf
jb
mov
cmpsl
enter
daa
xchg
daa
xchg
or
fs
sti
xchg
and
mov
xchg
add
mov
sub
lahf
push
cld
adc
sbb
xchg
mov
dec
sahf
sub
testl
ficomps
sub
add
dec
enter
xchg
mov
rcrb
adc
lods
into
xchg
jae
sub
out
cmpb
dec
sti
mov
pop
popa
ljmp
sbb
add
enter
rolb
jnp
dec
and
jp
outsb
ret
push
xor
mov
mov
fucomp
cli
enter
mov
ja
mov
jb
lret
xor
inc
mov
into
xor
mov
push
aam
add
inc
xlat
jo
lods
push
outsb
fcomps
sarl
cli
ja
jge
test
mov
adc
push
jmp
lea
dec
adc
aam
xorl
xor
shrb
icebp
cmc
xor
xor
push
movsb
std
cmpsl
dec
mov
in
jl
push
fs
cmpsl
push
aam
pop
fdiv
in
mov
pushf
repnz
sti
or
xchg
das
cmp
jbe
jle
lea
xchg
push
test
cmp
test
inc
not
add
lahf
hlt
sarb
insb
pop
lds
adc
or
out
jg
or
cmp
cmpsl
sbb
repnz
push
xor
jp
pop
mov
addl
or
and
fisubrs
xchg
pop
adc
add
leave
ret
scas
xchg
mov
xchg
pop
cmp
lods
mov
cmpsb
pop
js
aad
in
jg
bound
push
inc
sbb
fimull
fistpll
adc
stos
sarb
mov
mov
pop
dec
mov
dec
pop
pop
dec
nop
sarl
cli
ret
stc
lcall
sbb
cltd
inc
or
mov
je
or
push
dec
imulb
pop
push
leave
dec
mov
mov
sub
test
shrl
cs
ds
or
mov
outsl
mov
add
push
adc
xor
inc
cmp
push
jecxz
out
dec
js
dec
inc
or
je
cld
out
xor
mov
pop
dec
fwait
dec
cmp
jge
sbb
xchg
lret
test
jbe
cmp
xlat
mov
clc
sbb
xor
lcall
leave
test
inc
and
insb
sarl
push
mov
repnz
ss
mov
cli
dec
lret
hlt
inc
shlb
pop
mov
call
daa
lods
mov
adc
pop
adc
and
lcall
imul
mov
in
xchg
lods
andb
mov
mov
stc
sahf
or
jae
rorl
mov
fstps
xchg
lds
sbb
mov
pushf
xor
pop
mov
dec
popf
movsl
or
jno
pop
repnz
test
cwtl
sub
sub
inc
sarl
add
pop
out
inc
test
mov
and
leave
aas
add
cmpsb
enter
roll
inc
lds
outsb
leave
sub
shrb
add
movsb
cmpsb
pusha
nop
add
iret
pop
lcall
aas
mov
inc
dec
lea
sub
jb
push
mov
mov
xchg
es
add
sub
add
push
jb
pop
lea
or
enter
imul
mov
xchg
jg
out
sti
mov
mov
mov
add
stos
add
or
push
xor
pushf
arpl
mov
adc
fcmovnb
ljmp
push
jl
daa
xchg
lea
mov
xchg
xchg
pop
inc
push
out
pop
mov
or
and
pop
pusha
inc
xor
cltd
adc
or
dec
mov
stos
add
addb
data16
mov
fdivl
pop
mov
inc
sbb
dec
and
into
outsb
clc
cmp
lods
sub
rcl
aad
ja
pop
cmpsl
stos
sub
repz
pop
mov
leave
pop
in
and
sbb
xor
scas
sub
out
fdivs
xor
pop
xchg
adc
sub
inc
mov
in
pop
push
add
mov
jno
fmul
testl
popf
lock
mov
xchg
aad
lock
repnz
inc
sbb
enter
mov
push
jmp
daa
dec
cmc
int3
cmpsl
jnp
push
mov
or
popa
adc
mov
cmp
or
mov
popa
xlat
aam
pusha
out
sub
movsl
xor
fs
gs
jmp
add
mov
sbb
shll
enter
into
and
inc
sbbl
sub
sbb
sahf
int
mov
rclb
pop
test
ds
mov
lret
pop
les
sbb
pushl
cmpsl
cmc
imul
or
int3
call
cli
push
pop
jmp
in
dec
shrb
inc
js
mov
lods
jno
xchg
pop
in
mov
outsb
cmp
xchg
shr
jae
push
imul
jo
inc
or
cmp
xor
mov
fcoml
shll
aas
pop
mov
lret
lret
sub
or
ds
test
xchg
inc
inc
out
int3
sub
pusha
das
xlat
gs
sub
into
sbb
lahf
xchg
insb
sbb
and
lods
add
sbb
mov
mov
adc
es
popf
cwtl
in
and
sbb
subl
inc
into
into
push
xchg
xchg
cs
xchg
mov
add
adc
jae
mov
pop
notb
mov
popa
jmp
out
fcmovu
js
sub
mov
mov
lea
sub
jmp
shl
mov
cmp
xor
loop
arpl
and
lcall
mov
push
imul
out
mov
fst
pop
inc
in
xchg
scas
inc
inc
mov
cmp
or
imul
and
ror
out
pop
jp
fldt
daa
mov
stc
xchg
xchg
and
out
adc
daa
divb
sub
divl
add
inc
pop
fwait
aas
cmp
test
xchg
fsubrp
or
push
sub
ficomps
popf
add
lock
mov
and
push
xor
mov
pop
mov
rorl
xlat
mov
scas
je
lret
cwtl
or
cmp
rolb
or
not
insl
les
mov
or
push
out
and
fwait
out
mov
mov
gs
iret
mov
lcall
sbb
pusha
mov
jno
ja
xchg
cli
mov
stc
xchg
add
insb
lea
sub
gs
nop
popf
dec
test
fidivs
cmpsb
sbb
scas
bound
mov
cmpsb
or
iret
insb
out
hlt
xchg
adc
fdivl
xchg
negl
sbb
mov
jle
cmp
std
test
push
jns
sbb
bnd
or
adc
jge
mov
xchg
add
mov
push
and
mov
gs
mov
outsb
jl
insl
push
cmp
adc
imul
lcall
jmp
fs
arpl
rcrl
inc
and
lods
jle
popf
std
mov
jmp
mov
repz
cmp
ljmp
mov
sbb
pop
mov
push
hlt
aas
stos
jo
cmp
mov
mov
jl
insb
dec
es
std
icebp
mov
lods
push
out
mov
bound
jge
movsl
jnp
inc
sub
nop
roll
addr16
cmpsl
or
iret
cmp
imul
leave
arpl
and
cli
dec
inc
lods
ljmp
xor
mov
sbb
push
addr16
fs
movsl
lcall
fcoml
in
xchg
adc
xlat
jecxz
rclb
xor
adc
cmp
aas
fwait
out
mov
cmp
inc
sub
and
mov
sbb
movsl
cmp
inc
scas
push
xchg
inc
mov
lea
ljmp
adc
jg
fsubrs
daa
push
push
pop
ljmp
adc
stos
push
leave
mov
lods
adc
movsb
xchg
data16
jmp
imul
cmp
xchg
das
popf
sub
mov
bound
pop
xor
jg
data16
sbb
jno
popa
jmp
inc
outsl
ffree
les
outsb
fadds
and
or
cwtl
mov
dec
nop
mov
push
int3
inc
jb
or
fcmovbe
adc
test
mov
jbe
jp
dec
xchg
lods
enter
mov
jne
adc
subb
add
push
lahf
jl
push
jnp
xchg
arpl
jne
adc
incl
xchg
inc
out
nop
jno,pn
loop
rdpmc
fisubrs
scas
xor
pop
in
stos
fcmovnu
adc
pop
jne
jbe
mov
lds
jp
div
adc
lahf
testl
stos
test
addl
push
fucom
stc
pop
or
adc
mov
or
or
pop
and
sbb
inc
aaa
repnz
sbb
out
rcrb
mov
or
mov
or
test
std
push
pop
adc
imul
addr16
int3
cmp
push
arpl
adc
sbb
outsl
scas
and
and
jle
jl
lock
pop
push
mov
push
jp
addb
aaa
pop
xor
inc
lcall
and
clc
or
outsb
lcall
adc
push
push
mov
and
push
sbb
test
imul
icebp
test
out
insb
jno
push
out
scas
push
cmp
inc
fsubs
hlt
jl
div
push
dec
add
jge
mov
stos
lret
div
push
sbbl
repnz
lahf
xchg
add
pop
sub
sbb
mov
adc
jns
mov
test
add
push
push
mov
cmpsb
push
add
loope
bound
rorl
movsl
lods
mov
xor
lods
sbb
mov
out
and
gs
push
xorl
adc
fcomi
out
cmc
fldt
insl
cmpsl
and
push
in
sbb
xchg
add
jmp
xchg
lock
mov
loop
les
mov
pop
add
mov
add
frndint
std
insb
xor
sub
daa
loopne
xchg
int3
pop
dec
rcl
aam
add
sub
xchg
cs
into
mov
shlb
push
push
in
jp
lret
xchg
es
pop
mov
xor
fstpl
test
hlt
pop
add
loope
decl
push
mov
fimull
xchg
bound
test
rcll
idivb
nop
lds
outsl
mov
cltd
push
pop
or
test
xor
ljmp
mov
fcoml
cmc
xchg
stos
call
ljmp
push
or
idivl
mov
sbb
scas
pop
jmp
mov
push
cwtl
cmp
mov
adc
iret
bound
aaa
push
outsb
addr16
mov
cwtl
xchg
sbb
mov
or
and
push
xchg
loopne
jnp
cmp
ja
mov
pop
jnp
cltd
out
adcb
lcall
jecxz
xchg
std
and
pop
mov
dec
rcrl
int3
mov
mov
jbe
scas
out
fdivs
add
add
jp
test
xchg
adc
push
push
ds
sbbl
sbb
cli
dec
dec
pop
scas
inc
sti
mov
cmpl
dec
adc
push
jns
das
outsb
xlat
xor
fwait
in
fucom
mov
icebp
test
ja
push
in
mov
push
sub
enter
pop
movsb
inc
jo
lods
xor
and
mov
movsl
jecxz
push
sbb
in
pop
or
or
inc
push
push
movsb
movsb
mov
jl
nop
pop
scas
jl
xchg
test
adc
mov
cwtl
and
not
les
sub
test
dec
addr16
adc
pop
xchg
cmpsl
pop
mov
cmpsl
stos
xchg
out
mov
jb
pop
popf
outsl
add
jle
mov
popa
lret
aas
aad
in
mov
jns
cmp
lods
in
jae
adc
jl
test
inc
repnz
aad
loope
dec
fwait
bswap
lds
pop
dec
xchg
loop
inc
and
scas
push
dec
xchg
faddp
movsl
repz
daa
push
je
loopne
inc
pcmpgtb
and
aaa
ret
aam
stc
sti
push
and
push
dec
insb
mov
fnclex
fildll
shrl
mov
jb
lea
dec
sbb
imul
clc
push
test
sbb
push
in
mov
popl
ss
cli
cmp
add
out
pop
add
in
jnp
xchg
cmc
mov
jns
stos
int3
loopne
scas
lret
faddp
and
push
mov
mov
mov
ret
pusha
pop
jp
stos
int
ficompl
adc
cmp
xor
push
inc
sub
mov
jl
je
lahf
xchg
aas
clc
or
ret
and
test
subl
ss
fmull
iret
fs
imull
leave
out
xchg
das
sbb
inc
out
rcrb
dec
imul
enter
adc
cmp
mov
mov
enter
sub
or
sarb
insl
sub
push
sarb
stos
ss
dec
inc
sub
inc
sub
adc
les
jge
jmp
and
push
out
lcall
push
mulb
adc
xchg
stos
leave
dec
aas
bnd
or
add
cmp
cmp
or
and
sbb
scas
daa
adc
imul
aam
xchg
fcmovbe
xchg
out
andl
lods
mov
cltd
xchg
iret
mov
pop
adc
pop
xchg
adc
cmp
mov
pop
push
pop
mov
popf
les
dec
bound
ret
sub
cwtl
mov
dec
sub
fs
and
outsb
push
repnz
loopne
fsubp
and
xchg
fcomps
cmp
mov
adc
push
jnp
sub
adc
mov
lahf
add
cmp
jecxz
jae
test
jmp
add
pop
mov
mov
xchg
outsl
mov
incb
mov
nop
test
jmp
xchg
dec
into
dec
mov
cmpsb
pop
pusha
lds
xchg
xchg
lcall
rclb
in
sub
mov
div
gs
pop
adc
data16
bound
iret
xchg
flds
cld
and
inc
mov
stos
clc
rclb
in
lret
add
sbb
stos
sub
jbe
jp
cmc
or
mov
popf
pop
cltd
jne
and
ss
in
xor
cmp
fsubr
loope
out
stc
popa
cmp
mov
xor
jne
sub
insb
in
cmp
lahf
add
andb
decb
sbbl
push
scas
xchg
and
or
mov
stc
or
xchg
rol
or
mov
je
or
aas
or
sub
sbb
push
fwait
jl
sub
addl
sbb
imul
ja
test
push
pop
test
imulb
dec
inc
out
sbb
fdiv
rol
jg
push
xor
sub
fs
lcall
inc
fwait
jnp
mov
mov
in
bound
adc
movsl
inc
repz
daa
adc
sub
popa
jnp
mov
test
jle
pop
sub
ja
mov
xchg
imul
dec
add
and
stc
or
and
out
mov
ljmp
adc
mov
sarb
out
fdiv
adc
push
fcomi
popf
pop
sbb
sub
sti
out
in
repnz
call
cmpsb
push
or
std
sbb
aaa
inc
push
stos
cmp
cli
rcrl
call
call
fisubl
arpl
jne
pushl
imulb
pushl
out
sub
xor
mov
pop
lret
mov
lods
scas
xor
push
out
mov
and
xor
shlb
or
lea
lret
cmpsl
loopew
xor
popw
mov
sahf
test
add
shr
xor
adc
pop
xor
jno
cmc
mov
push
add
nop
xchg
movb
sub
scas
sub
pop
mov
outsl
cmp
dec
add
dec
es
fwait
sub
out
lret
dec
inc
aas
enter
jge
push
pop
out
inc
mov
dec
mov
adcb
leave
inc
mov
out
cmpsl
push
push
insb
rcrl
push
outsl
xchg
aam
add
jb
fisttpll
aad
aaa
mov
adc
mov
mov
leave
adc
addr16
push
push
cmpsb
lahf
jmp
sub
popa
sbb
clc
mov
xor
fistps
xchg
pop
xchg
xor
nop
cli
jnp
int3
cmc
lods
jle
jb
inc
js
int
and
ret
sbb
cmp
cmpsb
shr
xchg
sbb
repz
fucomi
test
in
and
movsb
or
xchg
lcall
rorb
mov
outsl
cmpsb
xor
sub
aam
out
sti
mov
dec
loopne
bnd
lods
sahf
dec
and
sti
lods
jns
xor
pop
or
fisttpll
mov
lret
dec
push
jmp
mov
pop
xchg
inc
gs
mov
jg
out
pushf
and
mov
sbbl
mov
lret
es
xor
fwait
inc
xchg
mov
out
jp
or
test
dec
dec
push
test
pop
pop
int
lock
inc
inc
inc
ss
enter
aad
inc
inc
pop
test
pop
sbb
aas
cmpsl
insl
mov
pop
cmp
mov
call
fldcw
pop
fwait
jne
in
inc
je
sbbl
and
and
jae
cld
sbb
idivl
jmp
xor
push
xchg
les
lret
loopne
enter
call
lds
in
sbb
int3
xor
ret
repz
dec
and
inc
std
dec
pop
loop
stos
xor
mov
inc
out
or
mov
inc
rcrb
loopne
xor
es
pusha
mov
xor
aas
sbb
xchg
mov
adc
mov
clc
push
xchg
inc
mov
fwait
xchg
out
dec
mov
sbb
or
cmc
xlat
jo
push
in
sbb
pop
jl
xchg
mov
lahf
jle
js
enter
xchg
jecxz
imul
push
hlt
rcrb
fistpl
xchg
sbb
mov
cmp
jle
mov
xchg
flds
or
and
add
mov
aam
cmp
mov
add
cmp
enter
add
mov
mov
or
mov
pop
push
andb
and
mov
fcomp
dec
cwtl
test
popa
add
cmp
aaa
insl
cli
push
sub
xchg
mov
mov
aas
dec
fs
push
sub
imul
sub
daa
mov
ljmp
imul
incl
xor
sub
fwait
xchg
xor
fwait
xor
testb
jmp
xchg
imul
test
mov
sbb
xor
sbb
add
lahf
mov
jl
cld
push
cwtl
not
ret
insl
imul
mov
rcr
add
mov
gs
inc
imul
mov
fstpl
mov
cwtl
sub
clc
jmp
cwtl
loopne
ljmp
aad
inc
xchg
ds
mov
ficoms
imul
call
xchg
dec
dec
adc
sub
adc
out
cmp
ljmp
ljmp
fsubs
sub
call
pop
xchg
or
cmp
and
or
pushf
xor
outsb
lock
cmp
xchg
lret
inc
push
jbe
pop
testl
dec
cmpsb
movsl
pop
jno
inc
inc
mov
out
dec
add
dec
jle
int3
xchg
sub
jle
popf
insb
cwtl
push
stos
pop
mov
cwtl
xor
mov
shlb
and
fistpl
inc
popa
ljmp
dec
std
mov
aas
fmulp
jle
fdivl
aad
inc
call
and
inc
push
hlt
fbstp
mov
pop
sub
into
ljmp
stos
imul
andl
and
and
or
pusha
lahf
ljmp
inc
je
pushf
dec
test
or
je
mov
mov
sub
insb
pop
addr16
xchg
fisttps
xor
jne
aaa
cld
fmuls
inc
or
push
pop
loope
fisttpl
shl
mov
rcrb
cld
xor
push
push
test
xor
sub
jb
xchg
fnstcw
mov
pop
adc
push
movsl
adc
add
mov
and
push
mov
loope
lret
aad
pop
clc
testl
in
push
inc
xchg
and
aam
test
into
fs
mov
rcrl
push
js
xchg
imul
jge
scas
push
pop
movsb
scas
adc
or
ret
dec
inc
and
lock
sbb
pop
pop
dec
outsb
xlat
mov
shrl
inc
mov
xchg
es
lea
fidivl
jae
mov
push
mov
cmc
pop
cld
repz
nop
lret
or
push
lods
mov
cmp
adc
aam
jb
fiadds
and
mov
enter
fdivrs
cmp
sbb
sub
addr16
add
fsubrl
mov
xchg
mov
stc
fs
out
dec
js
cmp
mov
dec
in
xor
jle
sub
rclb
mov
mov
cmpsb
movsl
jb
mov
xor
mov
mov
adc
mov
mov
rolb
inc
inc
dec
fstps
popa
test
pop
jb
and
adc
ret
cmpl
sub
dec
repz
ja
jae
jge
or
loope
movsb
test
gs
pop
sbb
shll
clc
pusha
mov
jle
test
aas
and
fbstp
pushf
mov
lahf
jmp
in
lods
mov
lods
repz
inc
fidivl
fistpl
lds
inc
ret
sub
test
loopne
push
dec
and
xchg
in
mov
or
sub
repz
mov
xor
ret
aaa
lcall
pushf
push
cmp
inc
inc
add
inc
idiv
or
cmp
push
sbb
inc
sbb
adc
dec
jne
movsb
mov
fcoml
aas
pop
inc
sbb
inc
mov
test
xchg
or
add
setno
xchg
cld
cs
jns
stc
ds
push
les
jo
dec
out
repnz
dec
out
jbe
pop
push
stc
out
inc
movsb
adcl
mov
mov
loopne
lock
and
rcr
sahf
cmp
cmpsl
std
mov
sahf
nop
mov
cli
pop
push
inc
dec
mov
mov
mov
test
cmpsl
lahf
bound
fwait
push
pop
add
shl
imul
movsb
iret
xchg
ret
cwtl
ret
es
jns
inc
lods
cmp
ret
aam
sub
notb
nop
pop
jg
push
inc
push
imul
aad
mov
mov
inc
or
dec
popa
sub
dec
notb
fnstcw
mov
std
fidivrs
jge
fwait
cmpsl
repz
pop
xchg
idivb
cs
cmp
es
sti
in
popa
pushf
ret
ss
outsl
xor
test
lds
mov
mov
ud1
aaa
mov
add
push
loop
inc
ljmp
push
movsb
clc
rolb
aam
notl
xlat
in
mov
and
pop
and
iret
sbb
xchg
aaa
imul
insb
shlb
or
aas
adc
and
xor
shl
dec
inc
or
nop
mov
and
les
out
bound
cmp
adc
mov
cs
sbb
dec
inc
sbb
jge
notb
lds
shrb
lahf
cltd
cs
loop
mov
aas
lea
ss
lds
or
data16
out
stos
or
sbb
std
jmp
or
cmp
mov
aad
sub
mov
xchg
movsb
cwtl
cmp
testb
je
mov
lods
inc
adc
int
fsubs
lcall
cmc
lods
mov
lret
jmp
or
dec
hlt
push
test
movsl
pop
cmp
arpl
or
cwtl
pop
jno
ret
cmp
dec
mov
xor
shlb
outsl
mov
push
cmp
daa
test
ss
int3
xchg
pop
sar
enter
ds
icebp
stos
daa
mov
fwait
call
dec
aam
lahf
bound
das
rcr
cmpsb
pop
xlat
or
or
loope
add
lahf
mov
cmp
out
arpl
xlat
iret
dec
ljmp
dec
dec
jp
clc
leave
aad
mov
or
jl
mov
divb
push
jno
lret
aaa
in
dec
adc
gs
mov
pop
int3
scas
negl
pop
std
pusha
out
imul
xchg
xchg
sarb
les
inc
adc
pop
dec
cli
sahf
jbe
push
xchg
lods
inc
xchg
xchg
pusha
pop
mov
xlat
xchg
scas
jp
lods
cld
xchg
aad
ret
cmp
dec
cltd
mov
mov
mov
push
inc
xchg
aad
jg
stos
out
mov
test
adc
std
ror
imul
loop
into
xor
repz
pop
cwtl
and
out
or
sahf
xchg
test
xlat
mov
mov
or
sbb
andb
sub
push
pop
pop
jnp
scas
enter
and
jecxz
or
roll
js
dec
push
cmp
notl
adc
inc
mov
adc
push
fstpt
xlat
push
test
es
mov
scas
test
adc
adc
mov
xchg
adc
je
stos
movsl
xlat
ljmp
lods
ljmp
xchg
insl
js
outsl
mov
xorl
push
ret
insl
sub
xchg
cmc
pop
push
jmp
pop
enter
into
mov
and
shll
mov
rorl
sbb
in
sbb
push
mov
sub
insl
scas
add
rcrb
adc
add
lcall
pop
aas
and
push
fadds
gs
mov
mov
into
mov
cwtl
jg
inc
adc
pusha
ret
sti
sbb
inc
sub
dec
add
mov
outsb
outsl
fisubl
sti
test
mov
jp
popa
push
ror
dec
fstps
jnp
in
adc
test
orps
idivl
xchg
jns
test
dec
hlt
sar
xchg
popa
shl
leave
lock
loop
add
push
inc
sub
inc
out
aaa
jmp
cli
incb
or
cmp
inc
inc
xchg
mov
jbe
stos
lahf
shlb
rolb
cmc
mov
cmp
aaa
cli
ret
inc
aam
or
orb
mov
decl
dec
pop
sbb
fmulp
add
pusha
dec
fsts
xor
mov
xchg
mov
ret
fbstp
bound
cmc
mov
mov
je
jbe
pop
sub
movsl
or
mov
push
jo
cmpsb
pop
mov
adc
ret
testb
hlt
adcb
adc
cmp
lock
xchg
stc
jo
imul
mov
adc
pop
mov
xchg
inc
lea
das
add
rclb
add
inc
shll
outsb
xlat
fldt
mov
mov
stc
mov
mov
aas
jmp
loop
movsb
adc
repnz
pop
insl
adc
cmp
push
mov
push
out
in
jecxz
mov
sbb
shl
xlat
test
jo
ja
je
in
sbbb
and
notb
gs
cmp
int3
in
cmp
stos
inc
lcall
dec
mov
lds
push
xor
pop
daa
call
push
push
inc
inc
fnstcw
jle
inc
add
or
js
cld
fdivrl
mov
sti
add
scas
test
jnp
repnz
or
dec
dec
cld
mov
mov
shl
or
mov
push
adc
push
jne
rcrl
je
mov
das
lea
daa
pushf
jbe,pt
pop
aaa
xchg
push
mov
or
adc
shll
mov
dec
jmp
xor
push
adc
insb
ret
xor
sub
mov
fsubrp
out
pushf
in
pusha
mov
push
pop
mov
outsb
jae
lods
outsb
ret
push
bound
xchg
ret
push
ljmp
xchg
jnp
mov
xor
mov
pop
aas
cmc
mov
and
push
ficoms
jl
mov
pop
movsb
inc
push
iret
push
sbb
repnz
inc
inc
jbe
shl
mov
mov
in
or
out
out
aam
out
push
xchg
push
cs
mov
jg
stos
sbb
in
into
in
xchg
dec
mov
and
test
popa
pop
daa
pushf
jne
jne
xchg
add
sub
nop
icebp
push
pop
mov
cmp
aas
dec
mov
push
sub
cmp
fwait
sbb
in
mov
insl
dec
jp
jno
add
rcll
mov
fidivs
inc
call
scas
dec
cld
in
add
insb
flds
call
call
adc
or
pop
rolb
vmwrite
sub
adc
jnp
jle
int
mov
xchg
mov
push
xlat
pop
mov
xchg
sti
xchg
arpl
mov
mov
push
cmpb
jns
inc
sbb
mov
push
push
xchg
lret
dec
mov
addr16
aad
dec
popf
je
outsb
push
jo
pop
cmp
inc
js
xchg
cmp
in
pop
stos
out
jb
movsl
shll
sarl
mov
icebp
shrl
push
pop
and
aaa
sub
pop
pop
ret
adc
mov
mov
outsl
dec
pop
out
xchg
lods
adc
sub
mov
cmp
mov
cmpsb
lds
test
mov
dec
mov
cli
in
fiaddl
cwtl
aad
out
sahf
sub
jns
out
and
lods
lock
xchg
and
push
jno
scas
paddw
sbb
cmpsb
lcall
add
adc
mov
js
add
jo
and
pushf
cs
jnp
mov
mov
ja
test
mov
or
and
pop
push
add
mov
and
mov
ja
popf
fstpt
xchg
jne
xchg
ret
mov
rcrb
adc
and
lret
inc
mov
lcall
in
mov
lods
aaa
inc
sub
push
mov
movsl
scas
div
dec
insb
into
cmp
fistpll
cmc
jp
cmp
mov
and
shlb
mov
aam
mov
je
pop
notb
inc
repnz
in
add
lcall
mov
inc
inc
add
mov
mov
inc
jo
xor
dec
mov
int
das
inc
lcall
sub
push
aad
popa
dec
cmp
repz
or
adc
repz
xchg
rorl
rorl
add
out
nop
mov
cmc
jne
pop
icebp
mov
fs
sbb
push
popa
xor
arpl
or
add
inc
pop
call
stos
jae
jns
mov
cs
cmpsl
inc
nop
aas
cmp
out
or
cmp
mov
pop
stos
inc
shlb
xor
negl
cli
scas
pop
mov
and
hlt
mov
out
mov
sbb
orl
testl
fwait
inc
data16
push
cmpl
std
lret
jbe
rcrb
dec
in
and
and
mov
aad
push
cltd
ret
mul
loopne
cltd
or
cmp
lods
sbb
int
sbb
mov
ret
in
mov
inc
pop
xor
imull
or
sti
test
push
aad
gs
and
fisttpll
jne
shlb
pop
es
pusha
mov
mov
adc
popf
mul
popf
cmp
int3
ljmp
push
jle
fdivrl
call
adc
inc
das
xchg
out
sub
add
cmp
scas
faddp
dec
stos
stc
mov
iret
mov
xor
pop
dec
mov
stc
leave
mov
and
or
repnz
mov
ja
xchg
xchg
mov
jle
addb
pop
add
xchg
outsl
push
mov
lds
or
xchg
rcl
lcall
fimull
xchg
movsb
fwait
mov
cmp
popf
pusha
loop
rcr
outsb
add
outsb
or
jne
outsl
ljmp
insb
inc
pop
jl
jge
pop
push
sub
out
inc
scas
mov
xor
lods
loope
sub
scas
add
leave
and
jne
roll
fidivl
ja
pop
pop
das
jno
dec
xchg
add
jnp
cmc
cmp
jl
mov
lea
notl
sbb
test
lds
addb
loopne
mov
adc
cli
fcomps
lret
pop
xchg
sub
movb
and
inc
mov
in
pop
out
jl
lds
xchg
push
and
mov
xor
bound
push
and
insl
sub
adc
lea
jb
lods
movsb
movsl
sbb
outsl
inc
cmp
insl
push
dec
packuswb
insb
inc
cld
cld
fidivl
test
inc
add
outsb
je
hlt
movsb
jae
add
decb
rcll
xchg
add
jp
fs
sbb
outsl
sub
iret
push
bound
mul
adc
or
lds
xor
lock
dec
xchg
dec
ret
fadds
push
push
adc
aaa
and
or
insb
mov
out
lahf
cld
test
jb
daa
cmp
mov
cltd
andb
in
in
mov
dec
notl
aam
addr16
xor
adc
cmp
sub
fcompl
fdivrs
cld
sbb
insl
adc
jecxz
and
pop
into
mov
nop
jge
shll
add
mov
cmp
int
push
jns
lret
cmc
outsb
lret
rclb
cmc
popf
sarl
sarl
and
mov
sbb
lods
int3
rclb
pop
inc
inc
cmp
inc
mov
sahf
repnz
push
addr16
lods
xor
inc
dec
mov
dec
lods
jg
jae
dec
addr16
adcb
push
into
add
cmp
fsubl
ss
jp
test
or
inc
push
in
in
jo
mov
jle
notb
ret
je
pop
adc
fsub
in
sbbb
bnd
jnp
xor
outsl
popa
and
xchg
adc
cltd
mov
test
inc
leave
lods
aas
xor
scas
scas
or
mov
popf
dec
icebp
es
xor
scas
adc
cmp
jl
into
jb
sub
jmp
mov
adc
pop
jmp
rolb
mov
mov
loop
js
sbb
cli
jmp
xchg
and
push
and
and
cmp
adc
in
test
sbb
fstpt
ret
sub
cmp
notl
push
adc
adc
adc
aad
dec
int3
pop
idivl
fwait
sbb
rcll
pop
subb
mov
rolb
xchg
ret
mov
and
cmp
and
xor
and
sbb
je
push
and
pusha
adc
jl
movsb
push
push
fmuls
or
xor
gs
xorl
mov
cmp
scas
stos
loopne
pushf
es
pop
call
push
adc
jb
mov
push
mov
dec
or
push
push
fbld
mov
xchg
sbb
mov
or
addr16
inc
popa
and
jge
sub
out
cmpsb
dec
pop
dec
jg
dec
mov
xor
xor
scas
lods
or
mov
fldcw
jnp
and
adc
nop
aaa
and
cmp
and
sub
fs
fildl
ret
fwait
cmp
jns
push
aam
xchg
movsl
dec
xchg
fucomip
movsl
fisubs
push
push
enter
ficompl
and
fs
dec
mov
rclb
hlt
sub
stc
adc
sub
sub
cmpsl
dec
push
sbb
or
mov
cmpsl
mov
and
pop
push
pop
cmp
leave
movl
paddw
es
jp
sub
out
and
xchg
inc
fistpll
movsl
je
adc
dec
jne
xor
aad
or
imul
pop
pextrw
scas
cmp
or
imul
mov
xorb
sub
cmpsb
add
loope
and
fwait
adc
lock
movsl
jmp
repnz
mov
jecxz
adc
mulb
ja
ret
ret
mov
aam
xchg
cmp
adc
xchg
xlat
ss
sub
daa
sub
out
mov
cmp
and
and
out
das
mov
stos
mov
gs
push
cmp
cmp
and
mov
imul
pop
stos
xchg
push
mov
sbb
fsub
push
push
push
cmp
into
sbb
int3
imul
mov
out
push
ss
faddp
push
jp
mov
cmp
push
pop
mul
lahf
daa
je
call
stos
int
dec
enter
mov
fstpt
mov
cmpsl
mov
loopne
mov
fsubr
aad
lcall
es
xor
enter
pushf
ret
pop
pop
and
pop
push
clc
pop
es
adc
adc
adc
cmp
outsl
imul
dec
outsl
imul
pop
repz
jno
mov
sbb
and
int
mov
or
jp
inc
mov
das
dec
cmp
fwait
mov
inc
mov
insl
mov
iret
pop
sbb
je
adc
repz
and
push
call
subl
mov
lret
sbb
out
shlb
popa
push
mov
lods
cmp
adc
dec
mov
loop
jo
dec
push
sbb
xlat
mov
lods
pop
icebp
femms
fwait
push
xchg
or
mov
push
and
ja
insb
xor
or
sbb
dec
stos
mov
dec
cmp
inc
jl
rol
jecxz
add
xor
fidivs
fbld
aaa
into
adc
imul
imul
push
xchg
mov
pop
rclb
pop
jge
in
repnz
ss
imul
pop
jmp
mov
scas
jb
out
xchg
xor
iret
fisttpll
sub
stos
into
loope
inc
movsl
iret
xchg
xor
jne
js
inc
dec
int3
int3
xor
jns
daa
int3
mov
mov
xor
add
pop
and
mov
dec
mov
out
adc
pop
mov
outsl
imul
mov
loop
cmpsl
gs
mov
cwtl
clc
test
jp
jp
stos
imul
cmp
shlb
insl
lea
push
aam
mov
aam
mov
push
ss
inc
push
and
lds
sbb
add
mov
jmp
or
dec
xchg
mov
jmp
mov
sbbl
add
add
shll
imul
pushf
jb
daa
pop
scas
xchg
mov
repz
sub
sbb
mov
pop
stc
inc
cltd
jge,pn
lock
push
add
push
test
push
and
cwtl
shrb
addl
fnstsw
inc
dec
push
das
clc
outsl
add
fs
out
shll
jg
flds
and
mov
icebp
and
mov
stos
insl
and
test
jge
lcall
shl
cli
cmc
and
out
out
pop
push
xorl
js
push
add
call
out
sarb
mov
shrl
aaa
addr16
stos
ror
dec
lods
shl
lock
pop
fidivl
repnz
dec
aam
mov
movsl
adc
or
test
mov
cmp
je
scas
mov
nop
fcomi
and
popw
pop
pop
xlat
dec
or
adc
mov
cltd
inc
dec
sub
add
ljmp
jp
pop
dec
xchg
aad
pop
adc
inc
lret
sbb
imul
pop
cli
fdivs
es
mov
jo
push
sahf
sahf
leave
mov
jo
popf
cmpsl
mov
and
push
test
sbb
push
jb
lret
je
mov
push
ret
jae
mov
ret
cmp
push
sub
movsl
in
lret
pop
dec
pop
lds
xchg
xchg
lods
shrb
lret
pop
aas
xchg
pop
xchg
pop
sahf
jbe
dec
loop
cmp
adc
test
imul
aas
insl
pop
mov
int3
jbe
dec
dec
push
iret
pop
imul
shlb
cld
pop
pop
fisttpl
sti
push
or
xchg
pusha
sub
mov
cmp
jle
mov
or
inc
jle
fcomps
leave
decb
push
push
leave
mov
inc
jmp
int3
push
mov
sub
sbb
test
and
add
aam
mov
push
popa
cmpsb
jno
or
cmpsb
or
popa
fsubs
mov
push
negl
dec
insl
icebp
scas
jbe
pop
adc
cli
stos
xchg
in
sbb
mulps
add
inc
mov
enter
sbb
sbb
mov
or
das
mov
adc
cs
repz
cmp
outsb
or
sbb
jp
lret
hlt
jecxz
icebp
jle
cmp
sbb
mov
pop
pop
daa
jae
ss
js
mov
sarb
xlat
push
stc
jnp
psrad
fisubrl
mov
in
insb
rcrl
add
andb
or
pop
repz
popf
jmp
or
scas
movsb
aas
pop
cmpsb
ret
mov
aas
mov
ret
mov
sub
pop
out
mov
inc
test
and
push
ja
adc
pop
sbb
xchg
xorl
or
lret
jne
push
push
or
aaa
cmc
and
sbb
pop
cmc
pop
shlb
cwtl
fsubrs
sarl
sbb
iret
inc
pop
repnz
push
or
mov
dec
sub
testb
mov
repnz
js
sub
or
clc
scas
pushf
xchg
and
ljmp
imul
in
cmp
adc
adc
mov
push
scas
fistps
xor
push
roll
adc
mov
or
push
jge
adc
dec
xchg
sub
pop
into
push
imul
lahf
push
pop
cmp
jge
mov
pushf
jns
dec
or
mov
jo
leave
mov
xor
shrb
test
push
and
xchg
out
pusha
int3
inc
push
or
jae
mov
xor
repnz
syscall
into
push
sub
cmp
jno,pt
loop
movsb
cld
xchg
sbb
rcrl
mov
fyl2xp1
clc
mov
cmp
cwtl
sub
stos
or
test
push
mov
and
fidivrs
aad
and
mov
in
mov
xor
add
out
pushf
into
push
ret
mov
mulb
mov
mov
movsl
jne
mov
jbe
dec
and
and
cmpb
push
movsl
xorb
or
ljmp
dec
cmp
andl
xchg
jnp
pop
mov
sub
mov
je
xchg
movsl
aam
vmread
mov
out
rorb
xor
inc
push
movsl
iret
sbb
xchg
mov
inc
lea
cmp
idivb
fidivl
rcrl
mov
aam
clc
icebp
lahf
cltd
aam
or
repz
dec
ds
and
enter
stc
cmp
mov
push
mov
fwait
sti
out
dec
insb
outsl
icebp
jns
sti
pop
pop
repnz
lods
xchg
lods
adc
aam
lret
lahf
sbb
test
daa
es
add
inc
cmp
adc
and
xchg
sbb
jnp
mov
je
cmp
adc
lea
arpl
test
pop
xchg
add
insl
mov
xchg
addr16
mov
jmp
aas
fs
cld
xor
lret
mov
movsb
mov
or
adc
enter
jge
sbb
jo
cmp
pand
mov
push
mov
testl
scas
rcrl
dec
fwait
clc
lea
push
pop
sbb
mov
ljmp
mov
mov
loop
cs
mov
call
rorl
adc
dec
mov
lods
lds
mov
rcll
add
fwait
cmp
or
std
mov
iret
decb
add
outsb
negl
aad
mov
mov
xor
cmp
add
shrl
add
imul
push
popf
popa
mov
sbb
scas
mov
xchg
jecxz
xchg
scas
scas
xchg
out
add
insl
push
and
pop
xor
push
mov
fs
and
adc
inc
fstps
dec
out
push
in
sub
inc
int
push
mov
mov
in
lret
or
adcb
pop
push
fstp
bound
and
add
shrl
rcrb
pop
add
xor
mov
dec
dec
fiadds
fimuls
pop
loopne
mov
jp
adc
lds
push
loope
pop
add
fsts
jne
and
aas
inc
jbe
cmp
pop
aam
outsl
insb
pop
xor
cmpl
clc
jnp
mov
push
xor
neg
outsb
pushf
lods
arpl
mov
push
imul
mov
adc
testl
xor
ficomps
or
push
aas
jae
movsb
mov
fcomip
fstl
rcrl
cltd
xor
mov
adcb
cmp
je
int3
adc
and
xor
dec
pusha
xchg
sub
cmp
lahf
xor
jnp
xchg
addr16
cmpsb
enter
test
sarl
mov
jb
fadd
inc
daa
dec
jecxz
and
dec
push
inc
imul
dec
xlat
sub
pop
pop
mov
add
sbb
pop
jbe
fbld
test
dec
stos
aad
adcl
xor
loopne
pop
adc
lret
push
aaa
pop
leave
out
dec
jns
in
or
add
inc
xchg
or
jb
mov
int3
sub
xor
or
adc
mov
loop
xchg
sbb
ja
cmp
add
lret
stos
std
cmp
xchg
adc
adc
jg
fs
fwait
sub
cmp
push
sbb
jp
fidivl
adc
out
push
xor
inc
into
pop
or
fwait
mov
mov
sbb
dec
aas
sub
call
clc
outsl
xchg
sarl
push
shll
int
or
gs
jmp
dec
inc
adc
push
add
xchg
jne
sub
sahf
push
loop
dec
add
sti
xchg
sub
or
sbb
pushf
sahf
in
and
add
sti
mov
in
sub
in
testl
jae
adc
jbe
jg
or
cmc
inc
and
adc
test
add
sbb
loope
jb
call
lcall
mov
push
cld
adc
cmp
loopne
fisttpll
sub
dec
xor
xchg
ljmp
enter
jmp
fmull
dec
xchg
fimull
mov
cmp
pusha
mov
popf
jno
out
imulb
fidivrl
pop
aad
in
fistpl
mov
stc
adcb
pop
sbb
mov
pop
mov
xchg
push
jo
jb
add
lods
add
in
pop
rol
fnstenv
shll
and
call
sbb
inc
cmp
stc
push
popf
adc
xchg
nop
shlb
nop
mov
sbb
mov
ds
dec
pop
mov
mov
loopne
popa
ret
jmp
adc
dec
pop
lret
mov
inc
and
lds
or
mov
insb
xchg
adc
in
mov
mov
les
test
sub
xchg
cmp
fsubr
outsl
xchg
fiaddl
lods
mov
daa
pop
cmp
or
in
or
or
pop
test
xor
jb
cli
cwtl
or
jae
sub
sti
js
adc
shlb
int3
lods
movsb
sub
sub
push
xchg
sub
ds
jge
lahf
ja
loopne
add
mov
cmp
push
push
push
mov
adc
ret
not
pop
push
lods
fstpt
jg
push
cmc
sahf
sti
xchg
jg
insl
inc
imull
in
ds
xor
xchg
jbe
imul
cld
sbb
iret
push
cmp
xchg
push
pop
mov
test
or
mov
and
dec
cmpsl
adc
outsb
xor
enter
jnp
stos
add
lock
pop
les
xor
xchg
mov
scas
cmp
xchg
xchg
or
int
xchg
lods
in
pop
repz
pop
xor
mov
mov
imul
and
jge
mov
ljmp
xchg
ja
dec
xor
xor
cli
mov
and
cmp
xchg
cmp
dec
mov
push
test
or
pop
insb
pop
xor
das
lods
das
cmp
push
sbb
pushf
lods
ss
mov
sbb
push
imulb
push
rol
fwait
test
cmp
pop
leave
movsl
xor
pop
mov
adc
std
cmp
push
push
mul
and
jne
icebp
cmp
pop
and
mov
dec
pop
mov
xor
inc
imul
sbbb
cld
xchg
push
or
pop
xchg
jbe
push
pusha
int
scas
pop
xchg
test
pop
jp
jb
jb
mov
cld
inc
cmpsb
ds
bound
hlt
inc
out
ret
in
and
mov
xchg
fistpl
dec
jb
insb
bound
inc
mov
inc
mov
lods
sub
jg
dec
lcall
xchg
cli
pusha
cwtl
jbe
cwtl
rcr
int3
dec
xor
push
and
shr
jne
popf
push
mov
lods
mov
push
ror
push
ss
mov
call
mov
leave
lea
sarl
pushf
fwait
cmp
or
fsubrl
nop
sub
pop
jns
orb
mov
ljmp
xchg
mov
mov
xchg
daa
aaa
mov
pop
jmp
jecxz
jne
sub
inc
push
cs
fidivl
or
xor
cmpsb
xchg
orb
aam
scas
mov
pop
dec
pusha
ljmp
mov
aas
xchg
dec
push
xchg
cltd
into
and
push
mov
cmp
pause
cmp
xchg
aaa
lock
cmp
movl
mov
push
dec
mov
ljmp
mov
dec
in
xor
loope
push
ret
sub
imul
pop
xor
and
jbe
lret
int
push
fs
les
xor
icebp
jmp
mov
add
arpl
add
mov
xchg
mov
movsb
fs
ja
mov
xor
jp,pt
xchg
jno
fchs
sub
inc
leave
imul
jl
insl
mov
cwtl
mov
cmp
addr16
cmpsl
mov
and
lods
int3
fistpll
int
jmp
xchg
xor
jl
mov
cmc
sbbb
outsb
cmp
add
push
in
xchg
sbb
inc
daa
mov
cmp
cli
dec
mov
in
jle
mov
scas
data16
inc
xchg
fsub
inc
movsb
mov
in
stos
inc
and
cltd
mov
xchg
jle
jp
push
sarl
div
pushf
cmp
popf
popa
stos
pop
adc
lcall
ret
jo
xor
xchg
push
imul
mov
mov
xor
cmp
mov
inc
std
iret
xchg
mov
scas
pop
pusha
xorps
push
sbb
sub
mov
cmp
inc
into
clc
jo
sbb
sub
add
push
adc
dec
adc
push
adc
notb
add
ljmp
add
adc
mov
adc
xchg
adc
adcb
add
add
pop
adc
dec
adc
adc
sub
add
cmp
add
and
add
and
add
push
pop
add
add
add
in
push
add
rclb
add
rclb
add
adc
lods
adc
mov
adc
adc
lock
add
add
adc
add
and
add
adc
inc
adc
push
adc
pusha
adc
jb
add
adcb
add
adc
mov
add
mov
adc
rclb
add
out
adc
push
adc
add
adc
add
adc
add
add
add
jle
add
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
bound
add
nop
adc
add
rclb
add
adc
add
adc
add
and
add
cmp
add
dec
push
add
pop
push
add
push
add
jl
add
mov
add
xchg
push
add
sahf
push
add
add
add
push
pop
add
adcb
add
add
insb
adc
bound
add
pop
adc
push
adc
inc
adc
cmp
add
xor
add
dec
pop
add
add
add
push
adc
add
add
xchg
adc
xchg
add
jbe
add
sahf
adc
stos
adc
mov
adc
cld
adc
fcoms
add
call
add
add
add
add
or
out
jge
incl
add
add
or
out
jge
insl
jge
push
push
jg
push
push
jge
pop
jg
push
pop
jg
insb
jge
inc
pop
jg
inc
es
push
es
jbe
jge
out
jge
push
insb
jge
ss
jge
es
jge
data16
jge
xchg
dec
jg
xchg
insl
jge
push
pop
jg
jbe
jg
mul
jge
adc
out
jge
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
notb
pusha
out
jge
jbe
jg
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
arpl
cmpsb
arpl
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
es
rcr
pusha
out
jge
out
jge
push
dec
jg
jbe
jg
pop
jge
push
push
jge
jbe
jg
sbb
push
out
jg
popaw
jge
push
cmp
pusha
jbe
jg
xchg
pusha
adc
pusha
out
jge
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
push
daa
jge
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
sbb
push
dec
jg
jbe
jg
pop
jge
push
push
jge
jbe
jg
sbb
push
out
jg
popaw
jge
push
jmp
pusha
jbe
jg
xchg
pusha
adc
pusha
out
jge
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
push
daa
jge
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
sbb
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
rcr
pusha
popaw
jge
push
pop
jge
rcr
pusha
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
arpl
cmpsb
arpl
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
rcr
pusha
popaw
jge
push
pop
jge
rcr
pusha
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
rcr
pusha
rcr
pusha
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
rcr
pusha
rcr
pusha
jbe
jge
rcr
pusha
rcr
pusha
pop
jge
add
add
addb
add
add
aas
ljmp
push
jge
sub
sub
cmpsb
ret
inc
mov
pusha
out
jl
out
jge
sarl
jge
out
jge
out
jge
out
jge
rcr
pusha
rcr
pusha
rcr
pusha
rcr
pusha
mov
jge
rcr
pusha
rcr
pusha
outsb
jge
mov
jge
xchg
pusha
jge
out
jge
out
jge
push
inc
jg
push
push
jge
rcr
pusha
rcr
pusha
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
add
add
add
add
xchg
jge
lock
out
jge
out
jge
ljmpw
jge
ljmpw
jge
data16
pusha
cmpsb
in
jge
xchg
jge
sahf
out
pusha
push
outsb
imul
outsb
and
arpl
je
outsl
outsb
add
add
cmpsb
jle
enter
add
add
arpl
loopne
add
add
add
add
add
add
add
add
incl
add
add
fstpt
incl
add
add
jge
incl
add
add
incl
add
add
jge
ljmp
aad
pusha
add
add
incl
add
add
jge
incl
add
add
sarl
incl
add
add
incl
add
add
ret
call
jge
ffree
jge
add
add
incl
add
add
jge
add
add
cmp
jge
dec
jge
call
mov
add
mov
jge
add
add
incl
add
add
jge
add
add
push
mov
jge
incl
add
add
add
mov
mov
inc
dec
dec
inc
inc
dec
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
inc
inc
add
pop
pop
dec
push
push
inc
push
push
pop
dec
inc
inc
push
pop
push
inc
dec
inc
inc
push
add
lock
add
add
jle
push
inc
add
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
dec
inc
push
dec
inc
dec
xor
sub
xor
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
incl
add
add
incl
add
add
jle
push
ss
add
jle
ss
ljmp
pusha
shlb
jle
lret
pusha
ss
mov
ss
mov
jle
stos
ss
scas
ss
mov
ss
lcall
pusha
xchg
ss
mov
jle
xorb
pusha
xchg
jle
jp
jle
jle
jle
jb
jle
jbe
jle
push
jle
outsb
xor
jns
bound
jle
pop
xor
jle
push
xor
jle
dec
xor
jle
inc
xor
jle
cmp
jle
xor
jle
sub
jle
and
jle
sbb
jle
adc
jle
add
jle
divb
jle
lret
pusha
xor
jle
mov
jle
dec
xor
pusha
sub
pusha
or
pusha
out
xor
pusha
lret
pusha
scas
xor
pusha
mov
pusha
xor
inc
xor
xor
jle
xor
xor
push
xor
repnz
ljmp
pusha
xor
mov
jle
xchg
xor
mov
xor
bound
jle
push
xor
xor
adc
jle
and
insl
jo
gs
and
push
arpl
outsl
arpl
outsl
jb
add
add
inc
insb
popa
jae
and
gs
jb
push
jae
jb
jo
outsl
jb
add
add
and
jae
and
popa
jae
and
jb
jns
add
and
jae
and
popa
jae
and
arpl
jo
outsl
jb
popa
je
sub
and
and
arpl
jo
outsl
jb
add
add
insb
popa
arpl
outsb
je
fs
gs
pop
pop
and
outsl
jae
jb
daa
add
add
pusha
jo
popa
arpl
outsb
je
fs
gs
and
outsl
jae
jb
daa
add
pusha
outsl
insl
outsb
imul
jae
addr16
add
and
gs
pop
pop
add
add
outsb
gs
pop
add
pusha
insb
outsl
arpl
and
je
bound
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
outsl
arpl
and
je
bound
add
push
push
dec
add
add
dec
add
fs
jb
je
jb
imul
outsl
jo
and
outsb
jae
jb
arpl
and
outsl
jae
jb
daa
add
pusha
gs
je
jb
jbe
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
pusha
gs
je
jb
fs
jb
arpl
and
gs
je
jb
add
push
je
jb
arpl
jae
jb
arpl
and
gs
je
jb
add
add
pusha
jbe
jb
jne
insb
and
jo
popa
arpl
outsb
je
insl
popa
jo
add
pusha
jbe
arpl
and
popa
jae
and
outsb
jae
jb
arpl
and
gs
je
jb
add
arpl
and
je
jne
je
jb
imul
daa
add
add
pusha
jbe
arpl
and
outsb
jae
jb
arpl
and
gs
je
jb
add
add
arpl
popa
jb
fs
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
fs
jne
je
arpl
jae
jb
arpl
and
outsl
jae
jb
daa
add
add
arpl
and
gs
outsb
and
jae
jb
arpl
daa
add
add
pusha
jbe
popa
jae
and
je
jne
je
jb
add
pusha
jae
jb
outsb
addr16
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
addr16
jb
daa
add
add
pusha
je
jo
outsl
data16
add
add
pusha
jbe
popa
insb
insb
daa
add
bound
insb
gs
add
add
data16
bound
add
add
add
jl
add
es
cmp
add
cmp
add
sub
add
jl
add
es
jl
add
pop
add
add
add
sub
add
sub
add
ds
add
cmp
add
cmp
add
and
sub
add
add
add
add
sub
add
sub
add
sub
jo
jb
je
jb
add
add
add
and
add
and
add
cmp
add
ds
cmp
fs
gs
add
outsb
gs
add
add
jb
jae
jb
arpl
pop
pop
jo
jb
xor
pop
pop
arpl
xor
insb
insb
add
pop
pop
popaw
jae
arpl
insb
add
pop
pop
je
imul
add
jae
arpl
insb
add
add
jo
jae
popa
insb
add
add
pop
pop
arpl
insb
add
bound
gs
add
add
cmp
add
add
cmp
add
pusha
popa
outsb
outsl
outsb
jns
outsl
jne
and
insl
gs
popa
arpl
add
add
imul
gs
jo
popa
je
sub
insl
gs
jb
dec
push
dec
dec
add
add
pop
je
jne
imul
add
add
bound
cmp
add
add
jo
outsl
je
arpl
cmp
add
imul
add
add
jb
jne
insb
and
add
add
popa
je
arpl
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
je
jne
je
jb
push
jb
add
gs
jo
popa
je
and
popa
je
arpl
fs
je
and
insl
bound
and
outsb
jae
jb
arpl
and
insb
jo
jb
add
add
pusha
insb
outsl
arpl
and
popa
je
arpl
fs
jb
arpl
and
insb
jo
jb
add
add
jge
add
pusha
popa
fs
jae
outsl
jb
add
pusha
jbe
outsl
jb
imul
add
add
and
sub
add
jbe
imul
insb
popa
je
insb
add
add
cs
cs
add
and
outsl
ja
add
jbe
insb
popa
je
insb
add
add
outsb
jae
add
add
outsb
gs
push
dec
dec
dec
dec
push
dec
add
push
add
imul
add
add
imul
pop
imul
pop
imul
pop
imul
outsl
outsl
insb
add
add
jne
jae
outsb
gs
add
outsl
jne
insb
add
insb
outsl
outsb
and
add
data16
outsl
popa
je
add
insb
outsl
outsb
add
add
imul
jb
add
add
popa
jb
add
add
outsb
imul
outsb
and
jae
daa
add
jne
imul
je
jne
je
add
popa
jae
and
add
jne
and
add
imul
add
outsl
jb
and
add
popa
jb
add
add
outsb
jae
and
add
insb
popa
je
insb
and
add
sub
add
insb
popa
je
add
jae
add
jnp
outsl
jb
add
add
fnstsw
rcr
pusha
rcr
pusha
mov
jl
xchg
cmp
jl
pop
cmp
jl
mov
jl
fwait
jl,pt
stos
jl,pt
cli
jl,pt
push
jl,pt
or
jl
and
aas
and
add
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
jb
addr16
insl
and
insl
and
imul
outsb
add
push
jne
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
inc
push
jl
iret
push
jl
jg
jl
jnp
jl
call
adc
adc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
xor
push
dec
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
dec
cmp
cmp
add
fs
dec
dec
dec
dec
and
and
jns
add
fs
jns
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
jle
jl
jp
jl
jmp
cld
jl
in
cld
jl
dec
cmpsb
jle
xchg
pop
jge
sahf
cmpsl
jle
inc
push
jge
push
cmpsl
jle
jbe
jge
add
add
or
add
sahf
cwtl
jle
mov
jge
cmpsb
sbb
xchg
pusha
es
jge
xchg
and
jge
inc
pop
jge
adc
adc
xchg
adc
push
cmp
pusha
cmpsl
jle
pop
jge
inc
and
pusha
inc
and
pusha
push
sbb
push
and
pusha
data16
pusha
xchg
and
jge
es
push
es
ss
push
sbb
push
cmp
pusha
push
cwtl
jle
loop
pusha
push
cwtl
jle
push
loope
pusha
cmpsb
cltd
jle
imul
add
add
add
add
add
or
add
negb
jl
cmpsb
in
jl
out
out
jl
scas
jmp
pusha
cltd
out
jl
lret
out
jl
xlat
jmp
pusha
pop
jmp
pusha
in
loopne
pusha
pop
loopne
pusha
psraw
loope
pusha
sub
jl
ds
jle
lods
loop
pusha
cmpsl
jmp
pusha
cmpsl
jmp
pusha
scas
jmp
pusha
lods
jmp
pusha
mov
jl
xlat
jmp
pusha
pop
jmp
pusha
out
jl
add
jl
cs
jl
scas
jmp
pusha
sub
jl
cmpsb
lcall
inc
in
pusha
addr16
pusha
jae
jb
outsb
and
outsl
and
addr16
lcall
inc
in
pusha
push
in
pusha
cs
inc
in
pusha
dec
out
pusha
imul
and
jb
outsb
and
jae
je
outsl
outsb
add
fnstcw
in
pusha
ljmp
cmp
outsl
bound
and
je
imul
imul
je
add
add
jae
cmp
bound
and
je
into
fwait
jle
xor
jl
inc
in
pusha
fcmovu
jl
fwait
jle
push
pop
jge
add
add
inc
add
add
fnstsw
fwait
jle
rcr
jl
add
add
lcall
jl
pop
sarb
add
add
ljmp
sarl
xlat
jl
rcr
pusha
rcr
pusha
rcr
pusha
out
jge
rcr
pusha
push
enter
fnstsw
rcr
pusha
rcr
pusha
lret
push
int3
jl
jbe
jl
mov
jl
out
jge
es
jl
mov
jl
inc
ret
mov
jl
push
les
les
mov
jl
out
jge
lds
jl
push
lds
mov
jl
out
jge
mov
pusha
xchg
jl
data16
jl
xchg
movsb
jl
es
jge
es
jl
xchg
jl
mov
jge
push
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
lahf
jl
add
add
ljmp
nop
jl
xor
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
data16
add
add
jg
add
add
jg
add
add
jg
add
add
data16
add
fs
push
or
add
jg
pop
or
add
jg
or
add
jg
or
add
jg
or
add
jg
or
add
jg
or
add
data16
or
fs
push
or
add
jg
wbinvd
add
xchg
pop
jg
adc
add
jg
adc
add
jg
adc
add
jg
adc
add
jg
adc
add
data16
adc
fs
push
or
add
jg
pop
or
add
jg
sbb
add
jg
sbb
add
jg
sbb
add
jg
sbb
add
jg
sbb
add
data16
sbb
fs
push
or
add
jg
pop
or
add
jg
and
add
jg
and
add
jg
and
add
jg
and
add
jg
and
add
data16
and
fs
or
add
jg
daa
or
add
jg
sub
add
jg
sub
add
jg
sub
add
jg
sub
add
jg
sub
add
data16
sub
fs
or
add
jg
das
or
add
jg
xor
add
jg
xor
add
jg
xor
add
jg
xor
add
jg
xor
add
data16
xor
fs
or
add
jg
aaa
or
add
jg
cmp
add
jg
cmp
add
jg
cmp
add
jg
cmp
add
jg
cmp
add
data16
cmp
fs
or
add
jg
aas
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
inc
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
dec
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pusha
or
add
jg
popa
or
add
jg
bound
add
jg
arpl
add
jg
or
add
jg
or
add
jg
or
add
pop
jg
or
add
pop
jg
push
fs
imul
pusha
push
add
data16
imul
data16
insb
or
add
jg
insl
or
add
jg
outsb
or
add
jg
outsl
or
add
jg
jo
add
data16
jno
add
data16
jb
add
data16
jae
add
data16
je
add
data16
jne
add
data16
jbe
add
data16
ja
add
data16
js
add
data16
jns
add
data16
jp
add
data16
jnp
add
data16
jl
add
data16
jge
add
data16
jle
add
data16
jg
add
data16
sbbb
data16
andl
pusha
adcb
add
jg
sbbl
data16
test
add
jg
test
add
jg
xchg
add
jg
xchg
add
jg
mov
add
jg
mov
add
jg
mov
add
jg
mov
add
jg
mov
add
jg
lea
add
jg
mov
add
jg
push
add
data16
nop
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
xchg
or
add
jg
cwtl
or
add
jg
cltd
or
add
jg
lcall
pusha
fwait
or
add
jg
pushf
or
add
jg
popf
or
add
jg
sahf
or
add
jg
lahf
or
add
jg
mov
fs
mov
fs
mov
fs
mov
fs
movsb
or
add
jg
movsl
or
add
jg
cmpsb
or
add
jg
cmpsl
or
add
jg
test
add
data16
test
fs
stos
or
add
jg
stos
or
add
jg
lods
or
add
jg
lods
or
add
jg
scas
or
add
jg
scas
or
add
jg
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
rcrb
data16
rcrl
data16
ret
add
jg
ret
or
add
jg
les
add
jg
lds
add
jg
pop
add
data16
data16
data16
enter
data16
leave
or
add
jg
lret
add
jg
lret
or
add
jg
int3
or
add
jg
int
adc
data16
into
or
add
jg
iret
or
add
jg
rclb
add
jg
rcll
add
jg
rclb
add
jg
rcll
add
jg
aam
add
data16
aad
add
data16
or
add
jg
xlat
or
add
jg
fcoms
add
jg
fsts
add
jg
ficoml
add
jg
fistl
add
jg
fcoml
add
jg
fstl
add
jg
ficoms
add
jg
fists
add
jg
loopne
inc
add
jg
loope
inc
add
jg
loop
inc
add
jg
jecxz
add
data16
in
add
data16
in
add
data16
out
add
data16
out
add
data16
call
fs
jmp
fs
ljmp
pusha
jmp
add
data16
in
or
add
jg
in
or
add
jg
out
or
add
jg
out
or
add
jg
lock
add
jg
icebp
or
add
jg
repnz
add
jg
repz
add
jg
hlt
or
add
jg
cmc
or
add
jg
testb
add
jg
testl
jg
clc
or
add
jg
stc
or
add
jg
cli
or
add
jg
sti
or
add
jg
cld
or
add
jg
std
or
add
jg
push
add
data16
incl
add
push
pop
jg
add
add
jg
add
add
jg
add
add
jg
add
add
jg
add
add
jbe
jg
add
addr16
push
adc
add
jg
pop
or
add
jg
or
add
data16
or
add
data16
or
add
jbe
jg
or
add
data16
or
add
jbe
jg
or
addr16
push
or
add
jg
wbinvd
add
jbe
jg
adc
add
jbe
jg
adc
add
jbe
jg
adc
add
jbe
jg
adc
add
jbe
jg
adc
add
jbe
jg
adc
addr16
push
or
add
jg
pop
or
add
jg
sbb
add
jbe
jg
sbb
add
jbe
jg
sbb
add
jbe
jg
sbb
add
jbe
jg
sbb
add
jbe
jg
sbb
addr16
push
or
add
jg
pop
or
add
jg
and
add
jg
and
add
jg
and
add
jg
and
add
jg
and
add
jbe
jg
and
addr16
or
add
jg
daa
or
add
jg
sub
add
jbe
jg
sub
add
jbe
jg
sub
add
jbe
jg
sub
add
jbe
jg
sub
add
jbe
jg
sub
addr16
or
add
jg
das
or
add
jg
xor
add
data16
xor
add
data16
xor
add
data16
xor
add
data16
xor
add
data16
xor
fs
or
add
jg
aaa
or
add
jg
cmp
add
jbe
jg
cmp
add
jbe
jg
cmp
add
jbe
jg
cmp
add
jbe
jg
cmp
add
jbe
jg
cmp
addr16
or
add
jg
aas
or
add
jg
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
inc
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
dec
push
add
data16
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
push
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pop
or
add
jg
pusha
push
add
data16
popa
or
add
jg
bound
add
jg
arpl
add
jg
fs
add
data16
gs
add
data16
push
add
data16
addr16
add
data16
push
fs
imul
pusha
push
add
data16
imul
data16
insb
or
add
jg
insl
or
add
jg
outsb
push
add
data16
outsl
push
add
data16
jo
add
jbe
jg
jno
add
data16
jb
add
data16
jae
add
data16
je
add
data16
jne
add
data16
jbe
add
data16
ja
add
data16
js
add
jbe
jg
jns
add
jbe
jg
jp
add
jbe
jg
jnp
add
jbe
jg
jl
add
jbe
jg
jge
add
jbe
jg
jle
add
data16
jg
add
data16
sbbb
pusha
sbbl
add
data16
sbbl
pusha
test
jg
test
jg
xchg
jg
xchg
jg
mov
jg
mov
jg
mov
jg
mov
jg
mov
jg
lea
jg
mov
jg
sbb
jg
nop
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
xchg
push
add
data16
cwtl
push
add
data16
cltd
push
add
data16
lcall
pusha
fwait
push
add
data16
pushf
push
add
data16
popf
push
add
data16
sahf
push
add
data16
lahf
push
add
data16
mov
fs
mov
fs
mov
fs
mov
fs
movsb
pop
add
data16
movsl
push
add
data16
cmpsb
or
add
jg
cmpsl
or
add
jg
test
add
data16
test
fs
stos
adc
add
jg
stos
push
add
data16
lods
pop
add
data16
lods
push
add
data16
scas
push
add
data16
scas
push
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
add
data16
mov
addr16
mov
addr16
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
mov
fs
rclb
data16
rcll
data16
ret
add
jg
ret
or
add
jg
les
add
jbe
jg
lds
add
jbe
jg
or
add
jg
push
add
data16
enter
data16
leave
adc
add
jg
lret
add
jg
lret
adc
add
jg
int3
adc
add
jg
int
add
data16
into
adc
add
jg
iret
adc
add
jg
rorb
add
jbe
jg
rcll
add
jg
rclb
add
jg
rcll
add
jg
aam
add
jbe
jg
aad
add
data16
or
add
jg
xlat
or
add
jg
fcoms
add
jg
fsts
add
jg
fimull
add
jbe
jg
fistl
add
jg
fcoml
add
jg
fstl
add
jg
fimuls
add
jbe
jg
fists
add
jg
loopne
add
jbe
jg
loope
add
data16
loop
add
data16
jecxz
add
jbe
jg
in
add
jbe
jg
in
add
data16
out
add
jbe
jg
out
add
jbe
jg
call
fs
jmp
fs
ljmp
pusha
jmp
add
data16
in
push
add
data16
in
push
add
data16
out
or
add
jg
out
push
add
data16
lock
add
jg
icebp
push
add
data16
repnz
add
data16
repz
add
data16
hlt
or
add
jg
cmc
push
add
data16
testb
add
jg
testl
jg
clc
push
add
data16
stc
push
add
data16
cli
push
add
data16
sti
or
add
jg
cld
push
add
data16
std
push
add
data16
push
add
data16
decl
add
jbe
jg
push
inc
jg
push
push
jge
rcr
pusha
jbe
jg
insb
jge
xchg
pusha
rcr
pusha
xchg
pop
jg
xchg
pop
jg
out
jge
push
insb
jge
ss
jge
rcr
pusha
data16
jge
xchg
dec
jg
xchg
insl
jge
rcr
pusha
rcr
pusha
rcr
pusha
rcr
pusha
mov
jge
rcr
pusha
rcr
pusha
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jge
rcr
pusha
jbe
jg
insb
jge
xchg
pusha
rcr
pusha
xchg
pop
jg
xchg
pop
jg
out
jge
push
insb
jge
ss
jge
rcr
pusha
data16
jge
xchg
dec
jg
xchg
insl
jge
es
jg
push
push
jge
pop
jg
push
pop
jg
insb
jge
inc
pop
jg
inc
es
push
es
jbe
jge
out
jge
push
insb
jge
ss
jge
rcr
pusha
data16
jge
xchg
dec
jg
xchg
insl
jge
push
pop
jg
rcr
pusha
rcr
pusha
rcr
pusha
push
dec
jg
jbe
jg
push
inc
jg
push
push
jg
jbe
jg
sbb
push
cmp
pusha
popaw
jge
push
cmp
pusha
jbe
jg
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
arpl
cmpsb
arpl
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
out
jge
out
jge
push
inc
jg
push
push
jge
out
jge
out
jge
out
jge
out
jge
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
pushw
jg
sbb
push
push
jg
popaw
jge
xchg
jg
jbe
jg
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
arpl
cmpsb
arpl
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
out
jge
out
jge
out
jge
out
jge
sub
inc
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
or
add
push
add
add
add
add
add
add
add
sbb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
adc
add
sbb
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
sldt
add
and
inc
ja
sarb
iret
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
cwtl
das
mov
inc
aaa
jno
sti
shlb
ret
icebp
adc
pop
movsb
cmpb
aad
sbb
cwtl
stos
pop
fadds
pop
adcl
test
and
jge
push
je
mov
andb
fwait
rol
fwait
in
inc
mov
bswap
mov
jmp
dec
fsubrl
stc
jbe
push
ds
insl
xor
jg
mov
inc
xchg
cmpsl
aad
arpl
push
sub
adc
or
cs
insl
sub
adc
or
or
cs
ret
sub
xchg
mov
data16
mov
call
cltd
test
push
push
shll
ja
daa
mov
mov
mov
sbb
dec
stos
fmuls
lret
rep
cs
outsl
arpl
test
add
mov
mov
movsb
mull
jno
and
mov
gs
and
cmp
iret
sti
shlb
repz
ret
sbb
add
pop
fwait
dec
sbb
sbb
sbb
inc
add
mov
mov
pop
adcl
mov
dec
mov
mov
aad
jge
push
outsl
mov
je
mov
cmp
mov
xorb
fcompl
je
fwait
rcl
icebp
sahf
shrl
jecxz
dec
cmp
aad
mov
popf
rorl
pushf
lods
ja
mov
sub
sub
sub
stos
test
sti
inc
mov
mov
adc
stos
fbld
push
push
ds
adc
mov
insl
xor
enter
in
out
mov
ret
cmp
and
xchg
cmpsl
aad
addb
push
arpl
push
jo
push
or
sub
das
rolb
or
pop
cmp
sbb
in
sub
pop
cld
insl
sub
fbstp
cmp
arpl
gs
ja
mov
scas
in
inc
cs
ret
xor
jb
fs
dec
mov
xor
dec
data16
jo
dec
ret
push
push
mov
push
out
sbb
xchg
rcll
test
cltd
sub
jno
test
mov
adc
rcl
mov
push
stos
inc
push
or
cltd
jmp
fisttps
daa
test
fwait
loope
mov
leave
lds
mov
dec
stos
fmuls
jecxz
ja
lret
mov
outsl
cs
out
orb
outsl
arpl
mov
in
cmp
add
mov
push
arpl
cli
mov
fsubrp
insb
push
movsb
adc
mov
jb
bnd
pushf
popa
es
shlb
mov
loopne
jge
ljmp
jge
mov
addr16
cmpsb
cwtl
enter
arpl
scas
or
aas
adc
inc
sbb
xor
jge
and
ja
sub
stos
lret
mov
sahf
cmp
or
sbb
lret
mov
jle
cld
pushf
sub
in
cli
cmp
pop
inc
dec
mov
inc
insb
adc
adc
adc
cmpsb
adc
mov
jge
mov
jg
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
adc
out
jg
adc
inc
mov
adc
jbe
jge
mov
jge
mov
jge
xchg
pop
jg
es
jg
adc
adc
adc
cmpsb
adc
mov
jge
rcr
pusha
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jg
rcr
pusha
adc
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
push
dec
jg
jbe
jg
xchg
jg
push
push
jge
jbe
jg
sbb
rcr
pusha
popaw
jge
push
pop
jge
rcr
pusha
xchg
pusha
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
dec
jg
jbe
jg
inc
or
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
or
xchg
pusha
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
arpl
push
cmp
pusha
rcr
pusha
push
cmp
pusha
xchg
add
arpl
rcr
pusha
arpl
inc
arpl
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
cmpsb
add
out
jg
push
cmp
pusha
jbe
jg
xchg
pusha
add
push
add
xchg
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
arpl
cmpsb
arpl
out
jg
mov
jg
testb
ss
pusha
data16
pusha
cmpsb
add
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
dec
jg
jbe
jg
out
jg
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
add
jge
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
arpl
push
cmp
pusha
rcr
pusha
push
cmp
pusha
out
jg
arpl
rcr
pusha
arpl
inc
arpl
push
dec
jg
jbe
jg
es
jg
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
or
xchg
pusha
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
arpl
push
cmp
pusha
inc
stc
jg
push
cmp
pusha
cmpsb
cli
jg
mov
jg
idiv
jg
arpl
inc
arpl
push
dec
jg
jbe
jg
push
bnd
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
or
xchg
pusha
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
repz
push
cmp
pusha
inc
repz
push
cmp
pusha
hlt
jg
arpl
push
hlt
jg
arpl
inc
arpl
out
jge
out
jge
ljmpw
jg
xor
xor
xor
ss
cmp
inc
inc
inc
inc
inc
inc
add
add
xor
xor
xor
ss
cmp
popa
bound
data16
add
push
dec
jg
jbe
jg
mov
jg
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
add
jge
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
arpl
push
cmp
pusha
out
jg
push
cmp
pusha
out
jg
arpl
push
fstpt
arpl
inc
arpl
inc
fs
push
fs
data16
jbe
jge
xchg
gs
push
sbb
push
sbb
mov
jge
inc
sbb
jbe
jg
push
into
jg
push
push
jge
cmpsb
sbb
or
push
sbb
cmpsb
sbb
sbb
xchg
pusha
push
sbb
sbb
xchg
pusha
sbb
sbb
mov
jg
mov
jg
push
sbb
jg
inc
fs
push
fs
data16
jbe
jge
xchg
gs
push
sbb
push
sbb
mov
jge
inc
sbb
jbe
jg
push
sarb
push
jge
cmpsb
sbb
or
push
sbb
cmpsb
sbb
sbb
xchg
pusha
push
sbb
sbb
xchg
pusha
sbb
sbb
mov
jg
jbe
jg
push
sbb
jge
inc
lret
inc
lret
inc
lret
push
lret
mov
jge
lretw
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
ss
jg
xchg
lret
jg
jbe
jg
push
lea
adc
jbe
jge
mov
jge
sbb
xchg
pop
jg
es
jg
out
jge
out
jge
out
jge
out
jge
push
sbb
push
and
pusha
inc
lret
test
pusha
mov
jge
int3
jg
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
ss
jg
jbe
jg
cmpsb
int3
jg
idivb
jg
insb
jge
mov
jg
xchg
pop
jg
xchg
pop
jg
out
jge
push
insb
jge
ss
jge
inc
mov
jge
xchg
dec
jg
xchg
insl
jge
push
dec
jg
jbe
jg
mov
jg
push
push
jge
jbe
jg
sbb
arpl
mulb
pusha
out
jg
push
add
jge
adc
pusha
notb
pusha
push
adc
pusha
push
cmp
pusha
push
sbb
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
adc
pusha
adc
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
mov
jge
push
adc
push
adc
adc
inc
jg
arpl
cmpsb
adc
mov
jge
mov
jge
push
arpl
push
cmp
pusha
push
cmp
pusha
push
cmp
pusha
out
jg
arpl
xchg
jg
arpl
inc
arpl
out
jge
out
jge
es
jg
push
push
jge
pop
jg
push
pop
jg
insb
jge
inc
pop
jg
inc
es
push
es
jbe
jge
out
jge
push
insb
jge
ss
jge
es
jge
data16
jge
xchg
dec
jg
xchg
insl
jge
push
pop
jg
rcr
pusha
mul
jge
adc
out
jge
inc
lret
inc
lret
inc
lret
push
lret
mov
jge
rcr
pusha
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jg
rcr
pusha
adc
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
push
sbb
push
and
pusha
inc
lret
test
pusha
mov
jge
int3
jg
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
out
jg
jbe
jg
cmpsb
int3
jg
idivb
jg
insb
jge
mov
jg
xchg
pop
jg
xchg
pop
jg
out
jge
push
insb
jge
ss
jge
inc
mov
jge
xchg
dec
jg
xchg
insl
jge
inc
fs
push
fs
data16
jbe
jge
xchg
gs
push
sbb
rcr
pusha
mov
jge
inc
sbb
jbe
jg
push
sarb
push
jge
cmpsb
sbb
or
push
sbb
cmpsb
sbb
sbb
xchg
pusha
push
sbb
sbb
xchg
pusha
sbb
sbb
mov
jg
jbe
jg
push
sbb
jge
adc
adc
adc
cmpsb
adc
mov
jge
rcr
pusha
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jg
rcr
pusha
rcr
pusha
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
rcr
pusha
rcr
pusha
rcr
pusha
rcr
pusha
mov
jge
rcr
pusha
rcr
pusha
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jge
rcr
pusha
rcr
pusha
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
es
jg
push
push
jge
pop
jg
push
pop
jg
insb
jge
inc
pop
jg
inc
es
push
es
jbe
jge
out
jge
push
insb
jge
ss
jge
es
jge
data16
jge
xchg
dec
jg
xchg
insl
jge
push
pop
jg
rcr
pusha
mul
jge
adc
rcr
pusha
inc
lret
inc
lret
inc
lret
push
lret
mov
jge
rcr
pusha
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
mov
jg
push
push
jg
push
lea
adc
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
rcr
pusha
rcr
pusha
rcr
pusha
rcr
pusha
mov
jge
rcr
pusha
rcr
pusha
outsb
jge
mov
jge
xchg
pusha
jge
push
jg
push
push
jge
idivb
jg
insb
jge
mov
jg
xchg
pop
jg
xchg
pop
jg
out
jge
push
insb
jge
ss
jge
inc
mov
jge
xchg
dec
jg
xchg
insl
jge
adc
adc
adc
cmpsb
adc
mov
jge
rcr
pusha
jbe
jge
outsb
jge
mov
jge
xchg
pusha
jge
push
inc
jg
push
push
jge
rcr
pusha
rcr
pusha
jbe
jge
mov
jge
rcr
pusha
xchg
pop
jg
es
jg
out
jge
out
jge
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
mov
pusha
push
stos
jg
xchg
stos
jg
pop
jge
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
daa
jge
popaw
jge
xchg
jg
daa
jge
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
push
mov
jg
ss
jg
cmpsb
xchg
jg
xchg
jg
xchg
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
notb
jg
out
jg
daa
jge
out
jg
ss
jg
jbe
jg
daa
jge
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
dec
jg
jbe
jg
xchg
jge
out
jge
jbe
jg
sbb
daa
jge
popaw
jge
out
jge
jbe
jg
daa
jge
cmpsb
dec
jg
mov
jg
dec
jg
cmpsb
jle
pusha
mov
jle
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
push
pop
jge
push
inc
jg
push
idivl
jbe
jg
testb
sbb
xchg
bound
push
sbb
xchg
jg
out
jg
daa
jge
out
jg
ss
jg
jbe
jg
daa
jge
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
cmp
pusha
push
dec
jg
jbe
jg
cmpsb
cmpsl
jg
push
push
jge
cmpsb
xchg
jg
sbb
negb
pusha
fwait
jg
jbe
jg
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
mov
jg
push
sahf
jg
xchg
jg
xchg
lahf
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
jbe
jg
notb
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
dec
jg
jbe
jg
negb
jge
out
jge
cmpsb
xchg
jg
sbb
negb
pusha
fwait
jg
jbe
jg
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
push
cmp
pusha
push
sbb
mov
jg
push
sahf
jg
xchg
jg
xchg
lahf
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
jbe
jg
notb
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
add
add
pop
or
idivl
add
test
loop
dec
inc
lods
sar
aad
jecxz
int
cmp
notb
xchg
pop
sar
js
int
sub
jne
subl
imul
mov
pop
xchg
add
mov
in
add
jecxz
ljmp
inc
lds
lea
hlt
or
or
mov
mov
push
rcrl
mov
jmp
das
push
and
adc
xchg
popf
sbb
dec
sbb
pop
add
hlt
stc
leave
dec
movl
es
pop
ljmp
sahf
leave
lds
outsl
test
jge
mov
mov
mov
arpl
aaa
daa
push
mov
cmp
mov
push
jbe
cmpb
jg
pushf
pop
fs
xor
mov
cs
cmp
imul
or
mov
repnz
mov
push
insb
in
in
bswap
imul
gs
or
repnz
jmp
xchg
add
rcrb
jbe
adc
icebp
jnp
cld
mov
insl
fistl
aaa
jp
ljmp
lret
add
or
jecxz
das
jmp
push
pop
fstpt
ja
sub
jae
cmp
mov
mov
pop
in
cli
inc
sbbl
adc
sbb
mov
lock
sbb
xor
inc
leave
mov
call
test
sub
adc
xor
push
adc
mov
pop
add
loopne
inc
xchg
es
pop
dec
mov
xor
or
dec
jne
arpl
iret
cld
test
cmp
mov
jp
les
push
push
lock
int
xchg
imul
pusha
sub
jecxz
loop
fidivrs
sub
and
or
pop
sub
out
test
push
cmpsl
push
ret
test
insl
pop
add
std
test
fdivl
pop
sub
sar
int3
add
nop
mov
xchg
repnz
cmc
fs
out
ds
scas
adc
sub
adc
xor
xchg
outsl
rolb
inc
dec
mov
jno
mov
fidivrs
cmp
outsb
insl
je
sub
jno
cmp
movsb
pop
fs
dec
mov
lods
std
jnp
jl
xor
cmp
insb
fimuls
add
decb
pop
jno
cmp
inc
frstor
jae
ret
inc
inc
stos
pusha
clc
push
xchg
xor
xchg
fsts
dec
push
and
arpl
movb
movsl
enter
jge
adc
jo
add
fisubrl
aaa
cmp
data16
push
mov
jmp
xorb
mov
mov
xor
push
add
add
imul
mov
mov
inc
xor
stos
jae
xor
sbb
cmpsb
mov
gs
mulb
push
hlt
nop
cs
loope
pop
roll
push
popf
xlat
popf
dec
jns
into
cli
add
adc
pop
sub
and
push
mov
clc
mov
inc
xor
repnz
les
insl
push
jge
xchg
cmp
sbb
jge
sti
les
jecxz
jbe
stos
nopl
mov
xchg
lods
lea
mov
pop
xchg
sbb
daa
scas
mov
popa
or
bound
ljmp
into
test
cmc
and
mov
loop
mul
xchg
subb
sub
movsl
sub
pop
cwtl
mov
mov
inc
test
iret
mov
push
jbe
pop
add
mov
aad
es
pop
mov
cmp
push
push
lret
arpl
jp
fstpl
sahf
push
and
push
push
xchg
icebp
popl
dec
add
pop
mov
ret
cmp
ret
cmc
jne
xchg
sub
stos
lahf
adc
test
fbld
jle,pt
aas
mov
inc
divb
shll
push
sahf
std
dec
jp
jg
nop
or
lds
xchg
mov
pop
je
in
add
add
mov
out
ja
inc
mov
lock
jle
rcr
iret
stos
dec
xor
scas
push
sub
adc
addr16
cld
icebp
fimull
xchg
lret
pop
ret
push
mov
scas
mov
loopne
ja
lcall
bound
ss
inc
scas
jo
xchg
gs
xlat
cmp
mov
clc
cltd
inc
shl
push
mov
cmp
jne
lcall
jo
mov
dec
je
push
lods
scas
in
stos
dec
jo
dec
sub
xchg
shl
shll
inc
push
imul
popa
pop
pop
lcall
das
call
jo
fwait
push
pop
or
add
fwait
aas
adc
roll
fdivp
int
sub
or
pop
int
andl
mov
cmpsb
bound
xor
mov
pop
and
pop
or
out
ficompl
adc
mov
repz
sbb
lods
adc
sub
jno
test
xchg
push
adc
mov
push
and
cmp
pop
sarb
mov
push
jle
testb
movsl
aam
loope
sbb
pop
test
xchg
adc
ds
out
lret
or
int3
cmp
movl
mov
in
push
dec
lcall
icebp
jl
add
jle
mov
pop
mulb
aam
mov
jbe
ja
cltd
shrb
push
cmp
fbstp
jmp
push
mov
mov
xor
mov
lea
inc
test
and
mull
sahf
fwait
sbb
scas
les
js
loope
lds
adc
xor
movsl
mov
cmovo
pop
sub
daa
fidivs
adc
mov
push
lods
mov
dec
clc
lods
mov
sbb
pop
xchg
and
ss
fmull
push
cmpl
divl
shl
sbbb
mov
daa
xchg
xlat
pop
or
or
or
dec
lret
mov
push
scas
cmpl
jmp
lahf
xchg
mov
push
push
mov
cmp
scas
lret
addr16
push
aas
mov
ja
in
cmc
dec
stos
inc
dec
cwtl
out
jns
in
ret
cmp
rcrb
push
inc
mov
mov
pop
mov
jecxz
repnz
sub
popa
frstor
mov
jns
stos
push
scas
and
cmpl
gs
aam
dec
insl
out
fldt
pop
flds
sbb
xor
push
fstpl
and
push
sbb
outsb
jecxz
push
mov
sbb
jg
call
in
cmp
mov
push
jg
shl
jne
sti
jge
rcrl
mov
shlb
jmp
adc
aad
xor
imul
cmp
xor
in
addr16
js
mov
cmp
je
daa
sti
ss
push
stos
dec
sti
or
int3
mov
mov
je
push
nop
insl
xchg
adc
lea
inc
sbb
dec
in
sbb
xor
cmp
stos
cmc
popa
arpl
jle
mov
xchg
in
cmp
cmp
out
dec
fmull
pop
wrmsr
cmpsb
jp
js
pusha
xchg
jmp
and
out
jl
mov
and
adc
pusha
cmp
aad
pop
cmp
lret
inc
dec
xor
mov
fldt
adc
or
mov
cmpsb
xlat
cltd
lea
stos
jle
sti
les
adc
push
cmp
icebp
test
fldl
cmpsb
add
outsl
mov
loopne
jle
cmp
push
aaa
movsb
push
sub
dec
cld
sub
call
cmp
fmull
push
inc
int
pop
fcmovnbe
add
rep
in
iret
mov
mov
out
ss
les
stc
int3
mov
adc
pop
repnz
aas
sar
int
xchg
test
fidivrl
cltd
std
sbbl
fildl
xchg
push
mov
ja
adc
inc
jg
loop
fsts
insb
adc
out
pop
push
fsubrl
mov
cmc
sbbl
stos
mov
fnstenv
lods
icebp
lods
jmp
cld
xlat
cmpsl
mov
or
push
adc
loope
js
je
sub
xor
pop
or
cmpsl
shr
ljmp
jmp
mov
movsl
mov
imul
shrb
lcall
idivb
test
inc
xor
cli
jb
pop
test
fsubl
popf
xor
clc
test
das
addr16
sub
jns
fs
lods
mov
fstps
push
rcl
push
test
pop
repz
dec
arpl
add
push
and
data16
inc
jnp
ret
in
jecxz
jae
pop
add
movsl
in
lret
push
aam
mov
jne
pop
adc
sbbl
int
mov
outsb
sub
inc
cmpsl
pop
inc
xor
pop
cs
popa
out
mov
call
mov
mov
sbb
xor
dec
outsb
jb
xchg
sbb
pop
add
jo
xor
cmc
push
fdivs
inc
mov
mov
mov
ret
xchg
pop
fs
jge
divb
and
imul
xor
arpl
rep
call
clc
clc
mov
push
arpl
cld
dec
out
lret
push
cli
mov
push
fs
popl
iret
sub
popf
cmp
bound
xlat
mov
ja
out
jecxz
mov
insb
push
dec
jae
sar
in
jae
mov
int3
aas
dec
inc
stos
inc
xor
mov
inc
mov
ret
inc
pop
or
shrl
fwait
and
jge
pusha
outsb
and
sub
loop
lcall
sub
int3
jnp
adc
dec
mov
add
lods
jo
inc
outsl
jne
push
lods
cmc
jp
mov
dec
push
jecxz
push
fbld
das
std
cmp
cwtl
fcom
or
dec
xchg
hlt
enter
jne
lret
cmp
xchg
scas
lods
jnp
sub
jno
in
xchg
jo
pop
sub
movsb
mov
rol
andb
aaa
nop
jg
jg
std
mov
inc
sub
sbb
mov
inc
decl
cmp
loop
les
adc
cmpsl
imul
mov
adc
in
data16
sbb
popa
or
mov
mov
out
ds
mov
mov
xchg
sub
mov
cmp
popa
repz
js
jmp
ret
pushf
sti
out
aam
notl
add
imul
pushf
mov
popf
mov
or
aad
push
rorb
pushf
roll
in
sub
test
rdpmc
inc
sbb
add
pushf
add
lds
and
lods
dec
out
fsubrs
add
dec
and
hlt
mov
hlt
lret
int3
mov
arpl
das
js
jp
mov
arpl
neg
pop
add
sub
inc
sbb
and
pop
push
mov
insb
dec
xchg
cmp
aam
mov
fstpl
and
jne
popa
insb
pop
jecxz
xchg
ret
sub
add
imul
into
adc
fnstsw
dec
loope
sbb
dec
int
out
mov
xor
mov
and
cmc
sbb
shlb
test
fldt
or
cli
cltd
adc
daa
adc
jns
sti
jmp
cmp
in
cmpsb
sarb
pop
xor
and
out
imul
mov
xchg
xor
ret
xchg
mov
lahf
mov
jnp
ret
mov
sub
das
inc
test
adc
addr16
clc
mov
addr16
jp
adc
jnp
aad
mov
dec
cwtl
imul
lods
fimuls
cmp
rcrl
add
shrl
outsl
divl
dec
insl
or
loope
xor
sahf
xchg
jl
and
in
inc
leave
andb
pop
sbbl
cltd
mov
or
adc
adc
or
cmpb
std
fcmove
test
and
sub
mov
add
es
mov
sbb
add
add
lahf
data16
dec
lock
jl
jp
in
xlat
sub
gs
rclb
add
stos
mov
and
fistps
cmp
call
bnd
mov
dec
adcl
sbb
jo
je
adc
or
aas
iret
cmp
enter
xchg
pop
insl
fidivl
mov
repnz
xchg
push
test
lret
mov
daa
and
sti
jp
lcall
aaa
lock
and
push
hlt
cmp
mov
pop
mov
jno
enter
and
or
mov
orb
mov
mov
mov
loop
imul
dec
pop
lret
dec
sbb
je
les
ja
lods
movsb
push
cmp
xchg
mov
adc
sub
mov
or
pusha
pop
sbb
pop
dec
jno
out
scas
pusha
sti
push
call
mull
lcall
pop
mov
mov
mov
repz
mov
cmp
inc
fidivl
insl
and
or
adc
push
pop
push
xchg
les
bound
ds
into
rep
stc
rclb
rorl
lea
je
push
into
cmpl
mov
popf
pop
inc
ret
xor
mov
movsb
mov
push
cmp
and
inc
cmpsl
out
outsb
cmpsb
das
popa
aaa
pop
push
iret
stc
gs
imul
mov
imul
outsl
ret
setnp
push
mov
mov
shr
pushl
mov
mov
icebp
fimuls
lock
lds
ficomps
inc
sub
dec
jmp
fildl
xor
inc
mov
fistps
mov
cmp
inc
mov
inc
rorb
test
cli
into
inc
out
cmp
push
and
adc
js
dec
enter
jbe
and
pop
int
in
cmp
add
dec
in
or
mov
sub
xor
in
dec
das
lods
adc
inc
shll
lret
mov
add
movsb
out
cld
xor
xchg
xor
inc
push
in
push
fs
pop
or
jge
popl
push
pop
loop
imul
or
sub
push
test
dec
mov
lock
cs
push
pop
lea
repz
das
int3
lahf
hlt
adcl
fdivr
addr16
mov
shl
dec
fwait
sub
mov
aas
fisubl
jo
shlb
das
aam
push
xchg
jns
add
ja
int
xchg
in
cmp
mov
pop
push
negl
stos
or
lock
aam
test
mov
stos
mov
or
pop
aaa
arpl
data16
daa
jno
fsubrl
jb
cmpsb
into
cmp
movsl
data16
xor
lock
lcall
pop
ret
loopne
xchg
popl
xchg
sar
fstl
jnp
xchg
adc
mov
xchg
mov
jne
dec
mov
orl
popa
sbb
xchg
testb
out
rolb
cwtl
in
in
jge
and
mov
jmp
xor
xor
imul
inc
add
out
push
pop
mov
push
pop
sahf
and
xor
push
stos
nop
rcrb
dec
rol
and
sahf
cmpsb
out
iret
push
and
xchg
mov
fs
loopne
xchg
cmp
into
mov
xchg
sub
fxch
out
mov
rcrb
fcomi
das
stos
mov
fs
in
jns
out
jo
popf
push
sbb
fnstsw
adc
adc
push
int
or
mov
sbb
out
repz
push
jl
sar
orb
adc
mov
mov
addr16
mov
test
dec
mov
js
sbb
stc
jmp
cmpsl
mov
mov
mov
and
push
jmp
adc
lret
push
mov
stos
inc
cmp
mov
ja
sbb
or
lods
pop
cs
adcb
cmpsb
or
movsl
lds
movsl
pop
cli
mov
cmp
mov
sbb
add
push
call
add
jae
add
jne
mov
mov
add
push
fld1
jno
pop
xlat
sbb
dec
jbe
xchg
fsubrs
cmp
es
mov
lds
dec
clc
nop
dec
lock
outsb
mov
addb
cmpb
xor
mov
sbb
imul
sub
mov
add
pop
popa
push
data16
sahf
outsl
ret
or
xchg
sub
je
dec
test
sahf
mov
arpl
mov
xorl
xchg
cmp
cmc
push
sub
cltd
or
outsb
or
fcomip
cwtl
mov
loopne
sbb
mov
fcmovne
pushf
test
inc
scas
cwtl
cltd
movsl
xchg
flds
call
mull
imul
in
pop
aad
and
push
addr16
jne
mov
lret
out
pop
sub
pop
repz
jno,pt
cmp
ret
cmpsl
rcll
pop
aas
jl
lods
inc
lret
push
cmc
stos
add
xchg
mov
pusha
fstps
xor
cmp
dec
popa
stc
cwtl
movsb
ljmp
test
pop
jae
je
mov
jae
testb
or
mov
in
cltd
or
and
jle
in
scas
cmpsl
inc
ss
ljmp
shl
push
insb
mov
jns
inc
jge
mov
test
repnz
inc
xchg
test
push
pop
mov
jecxz
jp
outsl
mov
stc
adc
or
mov
dec
mov
push
xor
pop
adc
add
add
sub
cltd
mov
or
jno
cmp
pop
lock
shrb
inc
sahf
jmp
shl
sub
mov
aaa
pop
pop
cmp
or
push
dec
fldenv
mov
ja
insb
mov
sbb
sar
inc
add
jge
jnp
dec
sbb
gs
and
jae
out
and
add
cmc
push
xlat
movsl
xchg
cwtl
les
cmp
pop
mov
fisubrl
pop
cld
mov
mov
mov
add
leave
push
sti
push
ficoml
rcrl
daa
movsb
cli
lds
ret
sbb
jno
int3
adc
incl
xor
xor
mov
cmp
jbe
or
movsl
insl
shll
clc
shl
out
aas
sar
enter
add
js
inc
out
push
add
addl
mov
mov
leave
xor
or
mov
and
ja
add
fcmovnu
dec
ror
adc
dec
jmp
or
stos
add
divl
sub
inc
add
faddp
and
mov
add
push
fsubp
or
lcall
fs
push
js
ja
dec
scas
add
orl
jecxz
lods
and
mov
push
cmpsl
inc
popf
out
adc
sbb
sub
cwtl
mov
popf
outsb
inc
insb
pop
mov
jg
inc
dec
mov
mov
mov
pusha
push
pop
jg
and
ds
cmp
mov
pop
cmp
int
cmc
push
test
pushf
sbb
lods
jl
xchg
mov
jbe
inc
addb
in
lahf
cmp
loopne
sub
sub
std
mov
inc
adc
xchg
xchg
sub
sbb
fcomp
adc
push
inc
mov
jnp
loop
pop
mov
ficomps
inc
popa
mov
push
add
sbb
add
xchg
repz
aam
andl
push
inc
sarl
xchg
movsb
inc
inc
xchg
punpckldq
gs
or
dec
lea
lods
pop
les
mov
out
xchg
and
xchg
xlat
in
sbb
aad
enter
lret
pusha
lods
mov
lcall
push
adcl
xchg
ret
jmp
sub
cs
test
rclb
pusha
cs
adc
mov
push
cmp
fwait
popf
es
sub
or
push
jg
xchg
call
mov
repnz
jle
movsl
shrl
add
push
inc
sbb
mov
mov
mov
jo
insb
sub
ret
and
xchg
push
add
and
jae
or
mov
cmp
out
les
enter
sbb
adc
lds
push
mov
clc
push
mov
cli
in
sbb
insb
jns
push
xchg
fdivl
sub
mov
xchg
push
mov
jg
adc
les
pop
or
divl
fisttpll
loope
aas
mov
lret
pop
and
sahf
cmp
xor
sbb
in
cmp
outsl
pop
mov
inc
adc
loop
das
sarl
movmskps
stc
in
fidivl
pusha
jge
icebp
or
and
rcll
adcb
xor
and
lcall
daa
xor
imul
mov
cltd
dec
pop
fistl
imul
dec
sbb
mov
movsb
inc
imul
dec
jg
mov
sbbl
fs
inc
xchg
jge
mov
mov
mov
pop
popa
imul
mov
dec
sbbb
andb
outsl
add
mov
pop
push
adc
push
cltd
lahf
popa
mov
pusha
les
bnd
imul
inc
jo
pop
es
cmp
rcrl
pusha
push
insl
push
cmp
test
pop
cmc
pop
sbb
test
dec
jl
inc
loop
xlat
push
sub
pop
push
lret
scas
xor
add
jle
ljmp
clc
mov
jecxz
pop
push
mov
dec
lods
mov
or
hlt
jp
mov
pop
shl
sti
fmul
into
dec
lock
cmc
ds
sbb
pushf
adc
or
fbstp
std
pop
inc
in
adc
cmpsl
lret
mov
jo
sbb
and
mov
lods
mov
int3
inc
jge
mov
stos
pop
fnstsw
addb
dec
insl
lods
xchg
lahf
mov
jecxz
fidivs
xchg
fadds
mov
std
fidivrl
jl
jl
rcll
lds
sbb
mov
imul
ret
movsl
jge
test
aad
andl
lock
xor
sbb
add
sbb
sets
cmpsl
push
mov
jno
push
jnp
std
movsl
and
test
shll
mov
adc
inc
cmp
pop
xchg
cli
movl
in
xchg
or
sub
jae
loop
mov
ja
andb
nop
xchg
pop
add
jo
movsb
cmp
jg
add
jmp
push
outsl
pusha
jbe
push
int3
sbb
mov
ftst
sbb
pop
xor
push
pop
and
xchg
int3
push
and
jns
movsl
inc
sub
push
call
stos
jle
fistps
push
js
or
out
inc
mov
popf
shll
and
sub
add
mov
cmp
jmp
sbb
push
sbb
outsb
add
clc
xor
rcrb
es
cmpsb
xchg
xor
add
lock
loope
mov
mov
jo
inc
xchg
or
mov
or
insb
jno
xor
jae
call
popa
das
les
mov
test
sti
ds
xchg
aad
sbbl
or
xchg
std
or
jne
shll
mov
loopne
adc
mov
mov
stos
mov
cltd
rcrb
lcall
cmpl
cmpsb
insb
push
hlt
xchg
das
jne
or
pop
jb
out
fsts
sub
testl
dec
xor
sub
out
ljmp
pop
data16
xchg
push
repz
pop
pop
adc
mov
mov
cli
or
xchg
aaa
loopne
pop
mov
iret
sbb
mov
cmpsl
fnsave
test
pop
out
inc
in
xchg
inc
sbb
js
out
shlb
sub
mov
sub
inc
cmp
leave
scas
repz
mov
or
ret
into
loope
aad
mov
aaa
pop
addr16
rcrb
mov
jge
repz
bswap
adc
popa
mov
daa
adc
sbb
pop
popf
sbb
loopne
inc
popa
loopne
push
xchg
jmp
add
bound
stc
push
cmp
mov
inc
adc
enter
jle
test
ja
adc
dec
xor
sbb
mov
sbb
inc
mov
mov
int3
fs
aaa
rcl
sar
and
jbe
jle
sub
sti
mov
lcall
scas
inc
dec
sti
jmp
mov
and
idivl
or
aam
add
pop
test
sarb
cmc
push
cmp
jp
xor
mov
mov
mov
xchg
mov
lahf
call
or
dec
popf
pop
mov
jmp
dec
psadbw
fwait
mov
cmp
loop
rol
inc
clc
out
fists
stos
sub
or
das
js
jne
out
jns
bound
pop
movsl
adc
incb
add
inc
je
and
pusha
push
je
mov
xchg
push
mov
push
lods
icebp
cmp
mov
insl
and
daa
lock
mov
aas
push
mov
fwait
mov
imul
push
mov
arpl
xchg
cmp
push
push
dec
cld
lea
outsb
xor
ficoml
scas
push
dec
lea
stc
mov
orb
pop
push
jno
cltd
push
sbb
adc
or
push
sti
push
fistps
jecxz
ljmp
stos
jno
jnp
mov
and
xor
shr
mov
xlat
movsb
pop
jb
scas
push
jmp
xchg
cmp
jne
mov
arpl
lea
or
xchg
cli
fidivs
std
inc
push
imul
stc
call
ljmp
into
nop
push
fcmovbe
imul
cmpsb
dec
and
popf
or
stc
notb
sbb
mov
adc
jnp
and
xor
movl
ficoml
stc
push
sub
ret
cmp
daa
dec
hlt
pop
imul
adc
or
lcall
in
loopne
pop
out
repz
jns
add
jne
inc
mov
xchg
mov
lcall
mov
subl
cmp
and
xor
data16
cmp
frstor
and
loop
loop
mov
dec
fimuls
ljmp
mov
dec
mov
inc
mov
jae
sbb
pop
push
xchg
popa
into
sub
mov
sbb
or
adc
insl
lods
cmp
sub
shll
adc
pop
dec
daa
bound
jecxz
sbb
or
jmp
sbb
in
clc
leave
inc
add
stc
fmuls
arpl
mov
in
fwait
iret
sbbb
sbbl
div
add
testl
iret
pushf
jle
faddp
xlat
fistpl
mov
in
cltd
dec
fistpl
aam
mov
cld
stos
mov
sub
shrl
mov
xchg
add
adc
mov
pop
add
push
and
mov
add
orl
cmp
sub
mov
push
cld
push
sub
mov
mov
fdivrs
mov
andb
mov
mov
fisubl
aas
test
cs
push
xor
pop
push
test
push
mov
xchg
mov
sub
test
lods
adc
jnp
repnz
mov
or
dec
enter
aam
into
jle
lods
nop
push
cmp
push
fldenv
cmp
add
mov
and
insl
xor
movb
cmpsl
orl
jp
jns
jmp
in
push
add
loop
push
mov
sbb
mov
mov
sarl
xchg
pop
loop
stos
cmp
in
stos
arpl
nop
nop
lea
inc
mov
cwtl
mov
xchg
fdivrl
mov
stc
mov
pop
fsubl
xchg
fwait
es
sub
pusha
add
mov
push
mov
mov
jbe
in
insb
mov
repnz
inc
mov
pop
or
inc
pusha
cwtl
dec
jne
dec
out
sub
int
push
pop
push
xlat
xchg
and
jb
and
enter
jae
cmp
movb
out
lea
testb
imul
outsl
outsl
ficoms
xchg
push
xor
pusha
add
add
test
sub
push
sbb
out
xlat
xlat
mov
stos
stos
dec
lcall
popf
addb
xchg
cli
adc
pop
pop
mov
inc
inc
mov
lock
in
lods
lods
inc
addr16
mov
mov
scas
inc
mov
movsb
movsb
push
xchg
jb
in
rol
ret
jne
std
std
loope
xchg
xchg
cmp
pop
ss
inc
aas
aas
jle
div
cmc
dec
int3
int3
sbbl
hlt
movsl
movsl
push
xor
in
or
icebp
stc
xchg
jno
loop
fcomp
stos
push
xor
bound
adc
add
push
mov
inc
pop
ret
ret
popf
sub
sbb
mov
add
lcall
adc
and
addb
es
int
daa
daa
dec
int
mov
lahf
jne
ljmp
sbbl
sbb
xor
sbb
ss
outsb
fsubr
pop
pop
mov
mov
push
movsb
dec
cmp
jbe
mov
mov
jge
sub
push
jecxz,pt
fnsave
das
pop
xchg
test
push
add
add
and
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
fnstcw
cmp
dec
dec
xchg
aam
dec
cwtl
call
iret
iret
test
sarb
in
stos
dec
push
sti
sti
in
lds
xchg
dec
dec
lcall
test
iret
inc
inc
mov
stc
stc
jmp
cmpl
mov
mov
test
dec
repz
push
mov
rolb
mov
xchg
aas
mov
cmp
jo
cmc
cmc
icebp
fistpll
ja
fcmovu
scas
arpl
and
adc
and
jmp
push
repz
insl
rcl
mov
adc
or
xor
in
in
ret
loope
pop
mov
int3
inc
inc
mov
pop
pop
cs
les
cmpb
inc
cmp
fs
mov
xchg
jae
out
pusha
pusha
rcrb
dec
sahf
jg
fsubl
jle
sub
nop
cmp
inc
inc
mov
out
out
sarl
adc
jns
fisubs
sbb
fcmovnu
lods
cmp
loopne
push
xor
fs
cmp
je
or
adc
dec
dec
xchg
or
push
or
and
dec
in
pop
mov
outsb
rcl
mov
cmpsb
bound
test
xchg
cmp
in
mov
repnz
out
inc
enter
aaa
aaa
outsb
mov
insl
fimull
aad
rorb
pushf
loopne
test
fdivr
push
push
lods
pop
hlt
hlt
repz
gs
jp
jmp
or
adc
mov
js
outsl
and
cs
and
sbb
icebp
cmpsb
cmpsb
push
mov
jae
mov
and
call
mov
and
pop
fisttpll
xchg
fdivrl
mov
nop
jo
loopne
ds
mov
jno
data16
fmuls
nop
add
div
notl
push
push
sbb
popa
popa
ret
xor
scas
sarb
xchg
pop
rol
daa
sbb
sahf
daa
cmp
loope
adc
clc
jmp
cwtl
cwtl
sub
adc
and
test
cmpsl
xchg
xchg
xor
push
push
cmp
xchg
leave
dec
into
into
xchg
push
push
stos
js
sub
movsl
mov
orb
sbb
mov
out
movb
mov
inc
inc
xorb
sub
push
lret
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
jl
clc
test
out
cltd
jnp
testb
imul
outsl
outsl
fidivs
xor
pusha
push
add
add
addr16
test
out
xlat
xlat
mov
stos
stos
dec
out
jbe
lcall
pop
popf
leave
leave
mov
jge
xchg
cli
out
adc
inc
inc
mov
lock
or
aam
addr16
std
scas
scas
inc
ljmp
push
divl
in
rol
pop
mov
jne
std
std
loope
xchg
xchg
cmp
push
ss
pop
aas
aas
jle
div
cmc
add
int3
orl
push
hlt
in
shll
icebp
stc
or
loop
fcomp
stos
jae
xor
adc
add
or
xchg
push
and
inc
gs
ret
popf
pop
sbb
xor
xchg
xchg
aaa
mov
lcall
or
adc
addb
cmp
daa
daa
dec
imul
or
sbb
sub
je
sbb
sbb
ss
pop
pop
mov
mov
push
movsb
idivb
cmp
mov
mov
jge
sub
push
jnp
jecxz
ds
das
pop
jno
test
xchg
push
push
cmpsb
cmc
rcl
mov
add
in
shrl
inc
pusha
cld
cld
jecxz
mov
jns
pop
pop
mov
push
aam
lret
lret
lea
mov
jb
dec
dec
xchg
fimuls
aam
pop
mov
iret
iret
test
sarb
sub
sti
in
push
inc
inc
xchg
dec
dec
lcall
test
xchg
inc
inc
mov
stc
stc
jmp
push
jg
incb
cmp
js
lahf
lahf
and
jecxz
push
mov
incb
add
popl
lods
popf
popf
and
cmc
icebp
add
mov
ja
fcmovu
scas
jne
and
adc
and
jmp
sbb
repz
push
rcl
mov
dec
or
sbb
adc
xor
pop
pop
mov
mov
pop
pop
cs
les
bnd
cld
cmpb
enter
mov
sub
out
pusha
pusha
shlb
dec
sahf
rcr
fsubl
data16
push
jle
nop
cmp
inc
inc
mov
out
out
sub
adc
cmp
fisubs
loop
or
sbb
loopne
fstpt
xor
fs
cmp
je
or
adc
dec
dec
xchg
fildl
push
or
and
dec
insb
pop
pop
mov
pop
rcl
mov
out
bound
cmpsb
xchg
xchg
cmp
in
shll
jns
repnz
out
xor
enter
aaa
outsb
pop
insl
insl
fidivl
aad
mov
dec
dec
pushf
shrb
insb
fdivs
hlt
repz
ljmp
scas
jp
hlt
mov
or
sbb
js
mov
cs
jb
sbb
and
cmpsb
push
icebp
mov
jae
mov
push
call
frstor
pushf
pop
pop
and
xchg
fnstsw
mov
test
loopne
ds
mov
jno
data16
stos
dec
dec
nop
fadds
add
add
push
push
sbb
popa
popa
ret
xor
scas
stc
mov
xchg
xchg
rol
pop
sbb
sahf
daa
mov
clc
clc
jmp
cwtl
cwtl
sub
imul
jo
mov
mov
sub
and
jmp
xchg
push
stos
ljmp
sub
movsl
jp
mov
mov
mov
orb
gs
out
xor
test
push
inc
add
cltd
sub
nopl
mov
jnp
push
push
test
mov
push
sub
arpl
movsl
arpl
jl
out
cltd
ja
testb
imul
imul
outsl
lds
push
xor
add
add
test
sub
out
xlat
mov
xlat
stos
dec
out
jbe
lcall
pop
popf
or
inc
leave
jge
xchg
out
adc
pop
inc
mov
inc
lock
or
lods
inc
in
lods
aam
addr16
pop
std
mov
pushf
and
movsb
jb
xchg
jb
fwait
pop
shlb
sbb
xchg
cmp
push
ss
pop
ss
jle
aas
div
add
int3
orl
push
hlt
movsl
in
xor
icebp
stc
or
jno
xchg
jno
stos
jae
xor
xor
or
xchg
push
and
and
popf
pop
ret
sbb
sub
xchg
aaa
mov
add
pop
push
or
adc
adc
fistpll
jmp
dec
imul
jne
lahf
jne
adc
or
pop
je
sbb
sbb
ss
outsb
pop
mov
pop
mov
movsb
notb
jbe
cmp
mov
mov
into
mov
push
jnp
jecxz
jecxz,pt
pop
jno
test
xchg
test
cmc
push
sarl
add
in
shrl
jecxz
cld
mov
enter
in
pop
push
mov
lret
mov
jb
cmp
fimuls
cwtl
aam
pop
mov
pop
iret
test
sarb
sub
stos
dec
in
sti
in
push
sti
inc
xchg
inc
dec
lcall
test
xchg
test
iret
inc
stc
jmp
push
add
cmpl
js
cmp
and
jecxz
push
mov
mov
popl
lods
xchg
popf
and
cmc
icebp
add
mov
ja
mov
scas
jne
and
and
and
adc
in
push
std
push
repz
dec
int
sbb
adc
xor
in
pop
mov
mov
inc
pop
cmp
les
repnz
jle
cmpb
inc
cmp
pop
mov
sub
jae
xchg
jae
shlb
dec
sahf
rorl
mov
data16
push
jle
nop
cmp
mov
lret
sub
mov
sub
fisubs
loop
or
sbb
fneni(8087
fstpt
loopne
fs
xor
je
cmp
adc
or
fisttpl
or
push
and
insb
and
mov
pop
ret
outsb
shrl
cmpsb
bound
xor
jns
mov
aad
out
mov
aaa
outsb
pop
aaa
insl
fidivl
aad
fs
pushf
rorb
dec
loopne
insb
fdivs
hlt
repz
hlt
ljmp
gs
mov
inc
jmp
or
lock
dec
outsl
and
sbb
and
cmpsb
push
icebp
cmpsb
mov
mov
xchg
push
call
mov
pushf
je
and
dec
xchg
fisttpll
popa
fdivrl
mov
test
jl,pt
ds
les
dec
nop
fmuls
push
add
testb
adc
popa
ret
xor
scas
stc
push
mov
pop
xchg
xchg
cltd
pop
rcrl
mov
loope
jmp
clc
cwtl
sub
adc
mov
xor
fwait
push
cmp
push
xchg
and
into
xchg
push
stos
call
push
js
fbld
mov
or
or
out
xor
inc
test
inc
push
add
cltd
sub
sub
mov
lret
mov
test
push
mov
sub
push
movsl
arpl
test
cltd
ja
testb
repnz
mov
outsl
outsl
xchg
push
vpunpcklbw
xor
add
add
test
sub
out
mov
xlat
xlat
dec
out
stos
in
lcall
pop
popf
addb
xchg
out
adc
pop
pop
mov
inc
inc
sti
or
lock
in
lods
lods
mov
aam
pop
std
mov
scas
and
movsb
movsb
in
jb
fwait
pop
rol
ret
loope
std
std
cmp
push
es
pop
ss
aas
aas
cmc
add
testl
hlt
movsl
movsl
shll
icebp
loop
jno
stos
jae
fsubs
xor
sub
adc
add
push
mov
popf
pop
ret
ret
xor
sbb
aaa
mov
add
lcall
adc
sbb
loop
int
jmp
dec
imul
mov
lahf
jne
adc
or
sbb
je
sub
sbb
ss
outsb
outsb
mov
pop
pop
pop
sti
mov
push
jbe
cmp
mov
jge
mov
push
jnp
sub
jecxz,pt
pop
jno
das
adc
push
push
mov
add
add
sub
in
inc
pusha
and
jecxz
cld
cld
jns
mov
mov
pop
pop
aam
push
lea
lret
fnstcw
dec
cmp
xchg
fimuls
cwtl
aam
dec
mov
pop
pop
test
iret
mov
sub
out
dec
in
stos
in
push
sti
sti
xchg
inc
inc
lcall
xor
xchg
test
jmp
push
add
incb
push
push
js
cmp
and
jecxz
test
repz
push
pop
mov
inc
add
lods
xchg
xchg
and
cmp
add
cmc
arpl
mov
mov
jne
fiaddl
and
and
adc
in
std
push
repz
dec
int
sbb
or
xor
in
in
mov
mov
inc
inc
cmp
pop
xchg
push
les
cmpsl
cmpsl
cld
cmpb
inc
cmp
fs
sub
sbb
xchg
jae
shlb
sbbl
data16
push
jle
sub
stos
nop
nop
or
inc
inc
sub
out
imul
mov
cmpsl
jns
fidivrs
or
lods
jbe
fcmovnu
cmp
loopne
push
xor
je
cmp
adc
or
xchg
fisttpl
or
push
push
dec
insb
and
mov
pop
ret
outsb
rcl
inc
out
lods
lods
les
xchg
xchg
xor
in
mov
aad
out
mov
enter
aaa
fidivl
lea
pushf
rorb
dec
loopne
test
lods
cli
push
push
repz
hlt
hlt
iret
and
gs
mov
inc
jmp
or
outsl
aad
mov
dec
outsl
and
cmp
sbb
icebp
cmpsb
cmpsb
jae
mov
xchg
push
mov
and
call
call
and
pop
xchg
fisttpll
popa
fdivrl
mov
test
jo
inc
ds
mov
int3
stos
data16
fmuls
push
add
div
sbb
push
push
ret
popa
push
xor
push
imul
xchg
cmp
sbb
sahf
fnstcw
loope
jmp
clc
clc
sub
adc
sarb
pop
mov
xchg
sub
and
push
adc
and
jmp
stos
call
push
js
sub
mov
orb
fidivrl
out
movb
mov
inc
inc
sub
sub
lret
mov
test
push
push
insl
mov
push
arpl
arpl
jl
ja
ja
jnp
jnp
repnz
outsl
outsl
outsl
outsl
lds
xor
xor
add
add
addr16
sub
xlat
xlat
xlat
xlat
stos
stos
stos
stos
jbe
jbe
lret
lret
addb
jge
jge
cli
cli
cli
pop
pop
pop
pop
inc
inc
inc
inc
lock
lods
lods
lods
aam
aam
mov
scas
scas
scas
pushf
pushf
pushf
pushf
movsb
movsb
movsb
movsb
jb
jb
rol
shlb
std
std
xchg
xchg
xchg
xchg
es
aas
aas
aas
div
div
int3
int3
int3
int3
xor
xor
movsl
movsl
movsl
movsl
in
in
icebp
icebp
icebp
icebp
jno
jno
fcomp
fcomp
xor
xor
adc
add
add
mov
and
ret
ret
ret
sbb
sbb
xchg
xchg
xchg
xchg
add
lcall
adc
adc
addb
loop
jmp
jmp
daa
daa
daa
mov
mov
jne
jne
or
or
addl
sub
sbb
sbb
sbb
sbb
outsb
outsb
pop
pop
pop
pop
mov
push
push
push
cmp
cmp
mov
mov
sub
sub
jecxz
jecxz
das
das
das
das
test
push
rcl
rcl
add
add
in
in
in
in
and
and
cld
cld
cld
cld
mov
mov
pop
pop
pop
pop
push
push
lret
lret
lret
lret
mov
cmp
cmp
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
iret
iret
iret
iret
rcl
rcl
out
out
out
out
stos
stos
stos
stos
sti
sti
sti
sti
inc
inc
inc
inc
dec
dec
dec
dec
xor
xor
test
inc
inc
stc
stc
stc
stc
add
add
jg
jg
push
push
push
push
cmp
cmp
lahf
lahf
lahf
lahf
test
test
push
push
push
push
mov
inc
inc
inc
xchg
xchg
xchg
xchg
popf
popf
popf
popf
cmp
cmp
cmc
cmc
cmc
cmc
mov
mov
mov
fcmovu
fisubl
and
and
adc
adc
push
repz
rcl
int
int
or
or
adc
adc
in
in
in
in
pop
pop
pop
pop
xchg
xchg
xchg
xchg
inc
inc
inc
inc
pop
pop
pop
pop
les
jle
jle
cmp
fs
pop
pop
pop
sbb
sbb
jae
jae
pusha
pusha
pusha
pusha
addl
and
and
sub
sub
nop
nop
nop
nop
mov
inc
inc
out
out
out
out
mov
adc
adc
ficomps
pop
pop
or
or
fcmovnu
fcmovnu
loopne
loopne
xor
xor
cmp
cmp
or
or
dec
dec
dec
dec
push
push
push
push
and
and
pop
pop
pop
pop
ret
ret
rcl
lods
lods
lods
lods
bound
bound
xchg
xchg
xchg
in
in
jns
jns
out
out
enter
aaa
aaa
aaa
aaa
insl
insl
insl
insl
lea
aad
dec
dec
dec
dec
test
insb
insb
insb
push
push
push
push
hlt
hlt
hlt
hlt
ljmp
gs
jp
scas
scas
scas
scas
or
or
mov
js
js
and
cs
sbb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
call
fstp
fnsave
je
pop
pop
pop
dec
dec
dec
dec
mov
mov
mov
jo
ds
mov
data16
dec
dec
dec
add
add
div
div
push
push
push
push
popa
popa
popa
popa
xor
push
push
push
mov
xchg
rcrl
sahf
sahf
loope
loope
clc
clc
clc
clc
cwtl
cwtl
cwtl
cwtl
adc
adc
imul
xchg
xchg
xchg
fwait
fwait
fwait
fwait
push
push
push
push
xchg
jmp
into
push
push
push
push
sub
sub
mov
mov
or
mov
out
inc
inc
inc
inc
push
inc
inc
inc
cltd
cltd
cltd
cltd
sub
pfcmpeq
mov
mov
push
push
push
mov
push
push
push
push
cmpsl
hlt
push
push
gs
jle
movsb
pop
sbb
imul
stos
pop
cli
lods
xchg
add
dec
push
cli
xor
imulb
lods
xchg
jbe
mov
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
ret
adc
dec
andl
pop
popl
xchg
pushf
xchg
adc
ficompl
xchg
sub
and
imul
mov
ret
jns
hlt
imul
cltd
fnsave
daa
mov
loope
pop
lods
mov
data16
and
mov
into
jge
dec
fbld
xor
in
xor
inc
jg
loopne
fs
scas
imul
sub
stc
pop
push
inc
popl
clc
jnp
and
jae
loop
dec
jb
pop
jecxz
stos
push
popw
sub
mov
ret
lcall
shl
xchg
xor
push
add
in
sub
mov
repnz
repz
hlt
fisubl
mov
xor
mov
cmpsb
les
push
repz
jne
mulb
out
pusha
inc
push
lahf
jno
push
adc
stc
mov
ds
add
out
mov
push
xchg
add
aam
add
adc
cwtl
sbb
inc
inc
mov
fldenv
inc
call
pop
cmp
out
out
enter
jl
jmp
push
test
add
add
addl
xor
pop
insb
sti
decl
std
push
cmp
cmp
or
cmpsb
pop
push
cmp
ss
or
movntq
rclb
fwait
sbb
rolb
dec
ja
push
sbb
sbb
mov
mov
cmp
pop
sbb
or
mov
mov
test
icebp
push
dec
pop
jne
mov
pusha
jg
lahf
es
mov
cmp
xor
sti
pop
jbe
inc
mov
and
push
icebp
in
lret
xlat
adc
xchg
adc
adc
test
dec
test
cmp
stc
scas
insl
mov
sahf
sbb
in
push
xchg
insb
push
mov
cltd
mov
xchg
adc
fs
test
aas
lock
out
nop
xor
dec
dec
xchg
sarl
fsin
mov
aam
iret
xor
movsl
mov
aas
in
cmp
int3
pop
push
inc
jle
ret
imul
mov
cmp
cmc
scas
ret
cmpb
shrb
sub
and
enter
adc
pushf
call
or
int
sbb
add
dec
andl
out
out
stos
or
mov
out
fstps
outsl
dec
aam
lahf
ljmp
movsb
xor
and
sub
xchg
movsl
mov
mov
je
lret
mov
nop
loopne
fsubs
icebp
neg
in
inc
push
push
int
das
notb
jbe
mov
inc
push
dec
stos
int3
filds
in
mov
sahf
sbb
sub
jg
gs
add
pop
popf
pop
xor
xchg
cs
or
pop
sbb
fistl
adc
insl
mov
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
aas
jae
push
jns
adc
mov
int
push
pop
stos
std
pop
adc
cmp
js
repz
lret
push
cmp
mov
push
or
loop
mov
sub
or
cmp
mov
or
push
fs
test
jnp
mov
aad
pop
insb
dec
inc
push
mov
push
gs
jle
movsb
pop
sbb
pop
daa
cmp
inc
popf
pop
icebp
pop
cli
lods
stos
add
dec
xchg
cli
xor
push
insl
jbe
divb
mov
xlat
in
cld
lret
sub
xlat
inc
xor
mov
pop
mov
dec
sbb
inc
cwtl
sar
loope
das
ret
add
dec
adcl
stc
shrl
pop
popl
out
xchg
adc
jmp
push
xchg
fiaddl
je
shrl
dec
sub
leave
mov
jne
jns
hlt
js
pop
cltd
imul
fisttpll
mov
pop
lods
and
data16
jge
dec
fbld
xor
in
xor
pusha
jg
bound
fs
scas
imul
sub
stc
xchg
push
inc
sbb
xchg
jnp
mov
jae
and
dec
jb
pop
jecxz
stos
push
data16
jmp
pop
ret
add
xchg
xchg
xor
movsl
mov
add
sbb
mov
mov
cmpsl
xchg
repnz
repz
dec
mov
mov
xor
pop
cmpsb
les
push
repz
xor
mulb
out
pusha
inc
stos
lahf
jno
push
adc
push
mov
ds
push
fstl
scas
mov
push
xchg
mov
les
aam
add
adc
cwtl
sbb
mov
mov
sahf
fldenv
inc
call
pop
mov
out
out
enter
jl
inc
cmovb
test
leave
add
add
xchg
xor
adc
lods
jb
insb
dec
decl
std
sti
cmp
cmp
daa
or
push
shrl
ss
or
mov
push
xchg
setbe
mov
xchg
fwait
sbb
and
popa
mov
sbb
sbb
mov
mov
cmp
pop
sbb
sbb
mov
lods
test
sub
enter
test
jne
dec
fstpl
mov
lahf
cmc
jb
mov
jle
pop
xor
inc
mov
and
fdivr
in
mov
icebp
in
arpl
xor
lret
inc
adc
xchg
adc
movb
mov
scas
adc
sahf
sbb
repz
xchg
rclb
mov
insb
mov
xchg
adc
fs
test
aas
lock
fcoms
dec
xchg
sarl
fld
mov
aam
ss
movsl
sub
lods
aas
movsb
popf
cmp
xchg
js
or
inc
jle
bound
test
fcoms
pop
scas
ret
xor
pop
lahf
mov
sub
and
enter
adc
mov
es
sbb
hlt
mov
in
add
xchg
out
out
stos
jle
mov
out
out
out
fnstenv
outsl
dec
into
or
sub
mov
xor
xchg
movsl
xor
xor
aaa
lret
cmpsb
rclb
xor
inc
notl
jg
notb
jbe
mov
inc
dec
dec
stos
int3
push
add
in
mov
sahf
jecxz
push
sbb
sub
mov
ljmp
pop
je
cli
jae
or
cs
fistl
xor
insl
adc
lcall
clc
pop
mov
jmp
daa
test
mov
in
loope
mov
jp
pushf
pop
jae
push
aas
into
adc
jns
jae
int
push
ljmp
fists
inc
js
repz
lret
push
cmp
mov
push
jb
loop
or
cmp
mov
test
jno
or
fsubp
mov
pushf
rcll
test
jnp
mov
aad
pop
insb
dec
je
mov
push
cmpsl
inc
jle
gs
sbb
movsb
daa
cmp
imul
stos
pop
jecxz
xchg
add
and
jbe
imulb
mov
dec
in
cld
xlat
sub
xlat
lret
xor
mov
mov
mov
inc
cwtl
push
pop
loope
das
ret
add
adcl
xchg
shrl
stc
popl
out
xchg
adc
jmp
push
xchg
ficompl
aam
xorl
loopne
sub
mov
jne
mov
cltd
imul
daa
fnsave
mov
pop
lods
and
data16
into
jge
cmp
arpl
dec
sbb
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
or
xchg
sub
pop
push
ficoms
clc
jae
and
dec
jb
add
jecxz
push
data16
mov
add
lds
movsl
or
xor
xchg
add
or
sub
cmpsl
xchg
mov
repz
hlt
add
rcrl
bound
xor
push
repz
xor
mulb
in
pusha
inc
stos
out
jno
push
lahf
outsb
mov
stc
mov
xchg
cmp
add
push
xchg
mov
les
pop
push
add
aam
pusha
call
mov
mov
inc
fldenv
sahf
call
pop
mov
enter
jl
inc
or
jmp
push
add
add
orb
xchg
xor
adc
lods
jo
insb
dec
jb
std
sti
incl
cmp
daa
cmp
or
push
rcll
cmp
or
addr16
xchg
movntq
out
mov
xchg
fwait
sbb
mov
dec
adc
sbb
shl
and
loopne
adc
or
mov
mov
test
jne
dec
pop
cltd
out
mov
pusha
add
lahf
es
mov
cmp
pop
xor
inc
mov
and
fadd
in
mov
cld
in
arpl
xor
lret
inc
adc
movb
mov
scas
adc
sub
insl
mov
mov
repz
ja
jecxz
sub
test
cli
dec
jmp
test
mov
mov
fsubrs
and
nop
dec
xchg
dec
cmp
rcl
mov
mov
cmc
cmpsb
iret
cmpl
mov
sub
popf
js
or
int3
jle
bound
test
fcoms
pop
test
lahf
mov
xchg
aad
test
adc
cmpsl
jge
call
jnp
es
js
outsb
hlt
sbb
subl
ljmp
or
adc
mov
into
ss
ljmp
movsb
xor
and
xor
aaa
mov
nop
loopne
shlb
icebp
dec
cwtl
in
inc
neg
int
push
push
xchg
pop
das
testb
out
inc
dec
mov
int3
push
dec
xchg
in
add
sahf
jecxz
push
sbb
gs
jg
pop
popf
add
mov
pop
xor
or
cs
addr16
sbb
adc
xor
insl
adc
lcall
clc
pop
mov
jmp
cmp
into
out
daa
popa
mov
leave
sbb
in
in
jp
mov
pushf
pop
fcomip
push
aas
jae
sbb
jae
aaa
notl
int
pop
pop
stos
cmp
js
fldt
mov
sub
mov
push
jb
loop
or
cmp
mov
incl
test
jno
or
fidivs
push
fs
ror
popa
test
aad
mov
dec
je
mov
push
cmpsl
hlt
jle
gs
sbb
movsb
pop
cmp
imul
stos
pop
cli
dec
xchg
add
and
xor
xchg
jbe
cmc
and
xlat
in
xlat
lret
sub
addb
mov
mov
sbb
push
ljmp
jne
adcl
xchg
inc
imul
roll
out
adc
jmp
insl
xchg
ficompl
aam
cmpl
sub
mov
jne
mov
hlt
js
mov
fnsave
mov
pop
lods
mov
data16
and
cmp
arpl
dec
xorb
xchg
pusha
xor
inc
jg
mov
ja
mov
sbb
cmp
pop
push
inc
xchg
xchg
mov
jnp
and
jae
loop
dec
jecxz
pop
data16
jmp
add
mov
lcall
xor
xchg
and
push
in
pop
adcb
sub
cmpsl
xchg
mov
repz
dec
mov
hlt
fiaddl
aad
add
les
push
mov
xor
mov
in
addl
pusha
pop
push
lahf
jno
push
adc
stc
mov
xchg
cmp
add
out
mov
push
jno
pop
les
aam
pusha
call
cwtl
xchg
jmp
inc
addr16
fnstenv
mov
sbb
out
enter
jl
jmp
push
test
add
add
addl
push
lods
jo
insb
dec
jb
std
sti
decl
orps
test
daa
cmp
push
rcll
cmp
ss
or
push
mov
xchg
out
sbb
mov
dec
ja
push
sbb
loop
mov
mov
adc
or
mov
enter
test
icebp
scas
dec
pop
jne
mov
pusha
jg
lahf
add
jb
lds
pop
xor
sti
mov
inc
lret
fadd
and
arpl
in
lret
inc
adc
xchg
test
adc
test
dec
sar
cmp
stc
insl
mov
sahf
fdiv
xor
ja
jecxz
sub
test
cli
dec
xchg
inc
and
les
push
fsubrs
xchg
dec
dec
fld
sarl
mov
mov
aam
iret
xor
fisubl
mov
sub
popf
cmp
xchg
js
fwait
int3
pop
push
bound
test
lea
pop
idivl
xor
ret
lahf
mov
xchg
shrb
sub
and
adc
arpl
or
outsb
hlt
sbb
add
dec
out
outsb
xchg
stos
jle
jmp
or
mov
mov
into
outsl
ljmp
mov
scas
mov
sub
and
xor
je
mov
and
rclb
icebp
dec
cwtl
add
neg
in
jg
push
int
das
notb
inc
dec
mov
int3
push
dec
stos
in
add
sahf
jecxz
rorl
push
mov
push
gs
add
pop
add
mov
jae
xchg
cs
or
push
rcr
jmp
adc
lcall
mov
jmp
cmp
into
out
daa
test
loope
in
jp
mov
pushf
pop
push
aas
jae
sbb
adc
mov
int
pop
pop
stos
std
fists
cmp
lret
scas
mov
sub
and
pop
inc
mov
mov
mov
incl
or
or
mov
fcomps
push
jnp
test
aad
mov
dec
je
insb
rolb
mov
or
or
push
push
aad
aad
xor
xor
ss
movsl
movsl
movsl
cmp
cmp
mov
inc
inc
inc
mov
sahf
sahf
sahf
addl
xlat
xlat
sti
sti
sti
sti
jl
jl
jecxz
jecxz
cmp
cmp
addb
fwait
das
das
das
das
incl
xor
xor
mov
inc
inc
inc
inc
inc
jmp
lret
lret
lret
push
push
push
push
jnp
jnp
xchg
xchg
xchg
xchg
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
ret
ret
and
cmp
out
out
out
dec
dec
dec
dec
xchg
xchg
xchg
xchg
or
or
inc
inc
inc
inc
cli
cli
cli
cli
ret
ret
ret
ret
dec
dec
dec
dec
or
or
cs
data16
sub
and
and
mov
mov
jbe
jbe
pop
pop
pop
pop
mov
dec
dec
dec
insl
insl
insl
insl
mov
rcl
and
jb
jb
clc
clc
clc
div
div
fs
push
cwtl
push
push
push
push
aam
aam
movsb
movsb
movsb
movsb
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
pop
pop
gs
mov
xchg
xchg
xchg
xchg
insb
insb
insb
insb
jo
jo
dec
dec
dec
dec
push
push
push
push
std
std
std
std
in
in
in
in
mov
fcmovu
ficompl
pop
pop
adc
inc
inc
inc
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
lea
popf
popf
test
nop
fcomp
fcomp
stos
stos
stos
stos
add
add
mov
mov
or
or
div
div
in
in
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
inc
push
push
push
push
rcl
rcl
sub
sub
push
push
push
push
lret
aas
aas
lar
add
rol
shrl
mov
add
add
add
adc
adc
imul
cmp
cmp
adc
adc
inc
inc
dec
dec
dec
dec
addr16
ljmp
xchg
repnz
iret
iret
iret
into
into
into
into
lock
mov
out
out
jae
jae
xchg
xchg
xchg
xchg
lods
lods
lods
lods
je
je
and
and
out
out
lods
lods
lods
lods
xor
test
loop
stc
stc
stc
aaa
aaa
aaa
aaa
call
sbb
sbb
jne
jne
fildll
outsb
outsb
inc
inc
inc
inc
icebp
icebp
icebp
icebp
sbb
sbb
jno
jno
sbb
sub
sub
mov
outsl
outsl
mov
mov
bound
bound
push
push
push
stos
stos
stos
stos
sbb
sbb
mov
sbb
sbb
cld
cld
cld
push
push
push
push
ds
dec
dec
dec
mov
rcl
rcl
jns
jns
and
and
lcall
fcmovnb
rol
js
js
int
int
pop
pop
pop
pop
hlt
hlt
hlt
hlt
pop
pop
pop
pop
fstp
fstp
test
test
xor
xor
mov
pop
pop
mov
xor
mov
mov
adc
adc
adc
adc
pop
pop
pop
pop
daa
daa
daa
daa
addb
in
pop
pop
pop
pop
pusha
pusha
pusha
pusha
push
push
push
push
jg
jg
test
sbb
sbb
dec
dec
dec
or
sub
in
jp
jp
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
leave
leave
leave
leave
pushf
pushf
pushf
pushf
out
out
out
out
mov
loopne
loopne
cmp
cmp
dec
dec
scas
scas
scas
scas
sub
sub
cmc
cmc
cmc
cmc
mov
mov
enter
jmp
jmp
mov
cmp
cmp
addl
cltd
cltd
cltd
cltd
popa
popa
popa
popa
pop
pop
pop
pop
sub
sub
add
add
jle
jle
mov
ja
ja
es
loope
imul
adc
arpl
push
push
push
push
and
and
or
or
jge
jge
add
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
aas
aaa
das
daa
pop
pop
sysret
ds
push
push
push
cmp
adc
or
add
add
or
or
movups
adc
push
adc
sbb
add
adc
add
or
pop
sbb
and
xor
daa
cmp
xor
sbb
add
add
and
add
adc
add
or
add
add
add
add
add
add
add
push
dec
jg
jbe
jg
inc
jns
pusha
push
push
jge
jbe
jg
sbb
movb
pusha
cmpb
idivl
push
xchg
cmpsb
dec
jg
mov
jg
dec
jg
cmpsb
jle
pusha
mov
jle
mov
jle
jns
pusha
ss
jg
testb
inc
jg
es
jg
ss
jg
jns
pusha
out
jle
push
inc
jg
idivb
jbe
jg
testb
sbb
idivb
pusha
ss
pusha
xchg
es
pusha
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
push
dec
jg
jbe
jg
push
inc
jg
push
push
jge
jbe
jg
sbb
rcr
pusha
popaw
jge
push
pop
jge
rcr
pusha
xchg
pusha
cmpsb
dec
jg
mov
jg
dec
jg
cmpsb
jle
pusha
mov
jle
push
dec
jg
mov
jg
ss
jg
testb
inc
jg
es
jg
ss
jg
xchg
inc
jg
movb
push
inc
jg
inc
inc
jg
jbe
jg
testb
sbb
xchg
bound
push
sbb
rcr
pusha
rcr
pusha
out
jg
xchg
dec
jg
out
jg
ss
jg
jbe
jg
push
dec
jg
es
jg
sbb
cmpsb
bound
push
sbb
mov
jge
inc
jg
mov
add
iret
jg
add
and
or
add
sbb
sldt
add
and
or
or
xchg
testl
adc
add
xor
xor
or
xchg
testl
adc
add
xor
xor
push
add
add
sldt
add
sub
or
add
fiaddl
add
adc
add
xor
xor
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
xor
or
dec
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
add
add
add
add
adc
add
or
add
and
add
and
add
xor
add
sub
add
add
add
adc
add
or
add
and
add
xor
add
sub
add
add
add
popa
sub
ja
bound
jb
bound
popa
sub
add
add
jb
add
popa
bound
add
add
add
add
pop
pop
jns
incl
add
add
add
add
jle
add
add
outsb
movsl
jle
pop
pop
jns
jbe
jle
add
add
cs
jns
incl
add
add
add
add
add
add
add
add
add
add
dec
jns
mov
add
add
sbb
add
add
add
add
push
sbb
add
add
add
add
adc
add
dec
sbb
add
add
add
add
incl
add
add
add
add
cmpsb
jle
cmpsb
jle
out
jle
add
add
cmpsb
jle
add
add
or
add
add
add
dec
sbb
cmpsb
jle
add
add
mov
pusha
add
add
add
add
incl
add
add
add
add
jle
cmpsb
jle
out
jle
add
add
jle
jle
add
add
add
add
add
add
mov
pusha
mov
add
negb
jns
incl
add
add
add
add
sbb
add
add
add
add
incl
add
add
add
add
cmpsl
jle
mov
jle
add
add
out
jle
push
sbb
mulb
jle
add
add
adc
add
into
sbb
pusha
cmpsl
jle
add
add
into
sbb
pusha
incl
add
add
add
add
sbb
pusha
add
add
add
add
incl
add
add
add
add
jle
dec
cmpsl
jle
add
add
jle
jle
push
sbb
pusha
mov
add
dec
sbb
pusha
add
add
add
add
adc
add
xchg
add
add
add
incl
add
add
add
add
cwtl
jle
mov
jle
out
jle
add
add
out
jle
add
add
or
add
add
add
xchg
jle
add
add
sbb
add
add
add
incl
add
add
add
add
cwtl
jle
mov
jle
out
jle
add
add
ss
jle
add
add
add
add
add
add
sbb
jle
add
add
dec
sbb
pusha
add
add
add
add
incl
add
add
add
add
jle
mov
jle
add
add
xchg
add
dec
sbb
pusha
xchg
cltd
jle
add
add
push
sbb
add
add
add
incl
add
add
add
add
cltd
jle
add
add
cltd
jle
push
sbb
jle
add
add
inc
sbb
add
add
add
incl
add
add
add
add
cltd
jle
add
add
es
jle
inc
sbb
jle
add
add
xchg
jns
add
add
add
add
incl
add
add
add
add
add
add
add
add
incl
add
add
add
add
jle
push
cltd
jle
push
movsl
jle
add
add
xchg
add
cmpsb
push
jns
xchg
lcall
push
cltd
jle
push
movsl
jle
add
add
mov
add
add
lcall
push
jns
add
add
add
add
incl
add
add
add
add
lcall
push
movsl
jle
add
add
push
lcall
push
jns
push
lcall
out
push
jns
add
add
add
add
incl
add
add
add
add
push
jns
add
add
add
add
incl
add
add
add
add
jle
inc
lcall
add
add
jbe
jle
push
push
jns
xchg
add
inc
lcall
add
add
scas
fwait
jle
out
push
jns
mov
cmpsl
jle
add
add
ficompl
add
negb
jns
out
fwait
jle
inc
fwait
jle
add
add
or
add
ss
jns
push
fwait
jle
add
add
ss
jns
incl
add
add
add
add
jns
add
add
add
add
incl
add
add
add
add
jle
inc
fwait
jle
add
add
jbe
jle
push
push
jns
xchg
add
add
add
jns
add
add
incl
add
add
add
ds
pusha
jbe
jns
add
add
incl
add
add
add
add
imul
add
add
sahf
pop
jns
add
add
incl
add
add
add
add
jge
add
add
add
add
out
pushf
jle
into
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
push
pushf
jle
and
add
dec
pushf
jle
jmp
jle
add
add
outsb
pop
jle
and
add
jle
jle
incl
add
add
cmpsb
popf
jle
jmp
add
add
into
popf
jle
inc
pop
jle
add
add
into
pop
jle
and
add
popf
jle
jmp
pop
jle
add
add
out
pop
jle
and
add
cs
jle
incl
pop
jle
add
add
push
pop
jle
and
add
pop
popf
jle
jmp
pop
jle
add
add
cs
jle
and
add
mov
add
incl
jle
add
add
dec
pop
jle
and
add
mov
add
add
jmp
jle
and
add
out
jle
incl
add
add
pop
jns
add
add
incl
add
add
add
add
gs
add
add
add
add
out
sahf
jle
into
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
push
sahf
jle
and
add
dec
sahf
jle
jmp
add
add
jbe
jle
inc
pop
jle
and
add
sahf
lahf
jle
jmp
pop
jle
and
add
lahf
jle
incl
pop
jle
add
add
push
pop
jle
add
add
adc
add
add
add
add
push
lahf
jle
pushl
pop
jle
and
add
cs
jle
call
jle
and
add
push
lahf
jle
pushl
jle
add
add
jle
jle
and
add
xchg
add
call
lcall
add
add
mov
jle
pushl
add
add
add
add
pop
jle
add
add
enter
add
add
rcrb
pusha
add
add
fcomps
pusha
and
add
push
nop
jle
push
pop
jle
and
add
cs
jle
add
add
ds
jle
incl
add
add
incl
add
add
add
add
add
add
jle
test
jge
and
add
xchg
add
jmp
pop
jle
add
add
cs
jle
and
add
mov
jle
add
add
out
xchg
jle
incl
add
add
add
add
jle
add
add
dec
pop
jle
add
add
push
pop
jle
add
add
pop
pop
jle
add
add
gs
jle
incl
add
add
add
add
add
add
add
add
xchg
jle
dec
aaa
jge
add
add
ss
jns
add
add
incl
add
add
add
add
pop
jge
add
add
add
add
push
xchg
jle
out
pushf
jle
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
ss
jle
add
add
xchg
dec
jns
add
add
incl
add
add
add
add
jge
add
add
add
add
pop
xchg
jle
into
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
jle
jle
and
add
mov
add
add
incl
add
add
add
add
out
xchg
jle
jmp
add
add
add
add
push
xchg
jle
inc
pop
jle
add
add
into
pop
jle
and
add
dec
xchg
jle
jmp
pop
jle
and
add
jbe
jle
incl
pop
jle
add
add
mov
add
add
incl
add
add
add
add
or
add
add
and
add
mov
add
add
jmp
pop
jle
and
add
out
jle
incl
jle
and
add
push
xchg
jle
pushl
jle
add
add
jle
jle
and
add
ds
jle
call
lcall
add
add
add
add
jbe
jle
add
add
xchg
add
incl
add
add
incl
add
add
add
add
add
add
add
add
cld
jge
and
add
into
xchg
jle
call
pop
jle
and
add
notb
add
push
pop
jle
add
add
xchg
pusha
add
add
incl
add
add
add
add
hlt
jge
add
add
add
add
xchg
jle
out
sahf
jle
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
push
xchg
jle
and
add
xchg
jle
call
pop
jle
add
add
push
pop
jle
and
add
xchg
xchg
jle
pushl
pop
jle
add
add
ds
jle
add
add
inc
pop
jle
add
add
dec
pop
jle
add
add
push
pop
jle
add
add
pop
pop
jle
add
pop
jle
and
add
out
xchg
jle
incl
add
add
push
xchg
jle
jmp
add
add
ds
jle
inc
pop
jle
and
add
xchg
jle
call
pop
jle
jmp
pop
jle
push
pop
jle
incl
pop
jle
call
pop
jle
jmp
pop
jle
pushl
pop
jle
and
add
mov
add
add
call
jle
and
add
out
jle
pushl
jle
and
add
push
xchg
jle
lcall
add
add
ss
jle
mov
dec
pop
jle
ficompl
pusha
ljmp
cli
pop
jle
decl
pop
jle
lcall
pop
jle
and
add
mov
add
ds
jle
and
add
mov
jle
lcall
jle
and
add
ficoms
add
incl
add
add
push
xchg
jle
jmp
add
add
cs
jle
dec
push
jle
call
push
jle
add
add
fstl
pusha
and
add
xchg
jle
push
push
jle
add
add
push
jle
add
add
xchg
jns
add
add
incl
add
add
add
shl
pusha
cmpsb
push
jns
add
add
incl
add
add
add
pushf
out
pusha
add
add
add
add
xchg
mov
jbe
jle
scas
pushf
jle
add
add
and
jl
add
add
mov
jle
and
add
testb
add
call
push
jle
and
add
push
mov
jmp
push
jle
add
add
jbe
jle
scas
pushf
jle
push
add
add
mov
and
add
data16
ds
jle
and
add
mov
add
decl
jle
and
add
mov
jle
jmp
jle
add
add
push
jns
add
add
incl
add
add
add
test
jl
add
add
add
add
mov
xchg
jle
scas
pushf
jle
add
add
or
jl
add
add
fimuls
xchg
sbb
add
add
mov
pushl
jle
and
add
inc
mov
decl
add
add
push
jns
add
add
incl
add
add
add
push
fdivrs
add
add
add
add
push
jns
add
add
incl
add
add
add
and
jl
add
add
add
add
outsb
mov
dec
mov
scas
pushf
jle
add
add
test
add
add
add
add
into
mov
lcall
add
add
testb
add
pushl
add
add
jle
scas
pushf
jle
fdivrs
add
add
mov
and
add
mov
inc
push
jle
and
add
data16
ficoms
pusha
and
add
mov
add
ljmp
sbb
add
add
add
add
incl
push
jle
and
add
fimuls
add
lcall
push
jle
add
add
es
jle
and
add
push
mov
pushl
push
jle
and
add
mov
decl
jle
and
add
pop
mov
lcall
jle
add
add
bound
pusha
add
add
imul
sbb
add
add
add
add
call
add
add
mov
add
add
pushl
add
add
add
add
out
mov
call
push
jle
add
add
ficoms
pusha
and
add
push
mov
push
push
jle
add
add
push
jle
and
add
dec
mov
call
push
jle
add
add
sbb
add
add
add
add
push
jle
and
add
mov
add
call
jle
add
add
pop
push
jle
and
add
mov
add
add
pushl
jle
and
add
out
jle
call
add
add
add
add
push
lea
pushl
add
add
add
add
inc
lea
call
push
jle
and
add
outsb
lea
push
push
jle
add
add
push
jle
and
add
sahf
mov
call
push
jle
and
add
mov
pushl
push
jle
add
add
cmp
add
add
testb
add
call
jle
add
add
pop
push
jle
add
add
gs
jle
and
add
mov
incl
add
add
add
add
pop
mov
jmp
add
add
xchg
add
inc
push
jle
dec
push
jle
call
push
jle
ljmp
jmp
push
jle
and
add
into
jle
call
push
jle
and
add
testb
add
pushl
push
jle
add
add
cmp
add
add
es
jle
call
jle
add
add
pop
push
jle
jmp
jle
ljmp
jle
add
add
jbe
jle
jle
jle
add
push
jle
decl
call
add
add
jmp
add
add
pushl
inc
push
jle
or
push
jle
and
add
mov
add
add
push
push
jle
add
add
push
jle
add
add
adc
add
add
incl
add
add
add
add
add
add
add
add
cmpb
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
out
cmpb
add
add
cmpb
add
add
call
push
jle
add
add
push
push
jle
add
add
es
jle
add
add
cs
jle
add
add
ss
jle
and
add
jbe
jle
call
jle
and
add
sahf
cmpl
pushl
jle
add
add
notb
pusha
add
add
incl
add
add
add
add
add
add
add
cmpsb
cmpl
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
movb
sbb
add
add
cmpl
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
jle
call
push
jle
and
add
cmpsb
cmpb
add
add
push
push
jle
add
add
push
jle
and
add
cmpb
add
add
call
push
jle
and
add
incb
add
pushl
push
jle
add
add
cmp
add
add
jle
add
add
dec
push
jle
add
add
push
push
jle
add
add
pop
push
jle
add
add
into
adc
add
incl
add
add
add
add
dec
jg
add
add
add
add
cmpb
pushf
jle
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
dec
cmpb
add
add
xchg
cmpl
add
add
pushl
jle
and
add
mov
add
add
call
add
add
out
jle
pushl
add
add
push
cmpl
add
add
call
push
jle
add
add
push
adc
add
incl
add
add
add
add
inc
jg
add
add
add
add
push
cmpl
pushf
jle
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
cmpl
add
add
jle
jle
push
push
jle
add
add
xchg
jns
add
add
incl
add
add
add
add
add
add
add
xchg
pusha
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
cmpsb
test
and
add
out
test
call
push
jle
and
add
push
test
pushl
push
jle
add
add
ds
jle
and
add
inc
test
call
jle
add
add
pop
push
jle
and
add
jle
jle
pushl
jle
and
add
cmpsb
test
call
add
add
add
add
test
pushl
add
add
add
add
push
test
call
dec
jle
add
add
fimuls
pusha
jmp
dec
jle
and
add
test
incl
dec
jle
and
add
test
jmp
dec
jle
and
add
mov
add
incl
jle
and
add
mov
jle
jmp
jle
add
add
outsb
dec
jle
add
add
jne
jle
add
add
jge
jle
and
add
testb
add
call
add
add
add
add
xchg
pushl
add
add
add
add
push
xchg
call
dec
jle
add
add
fimuls
pusha
add
add
out
jle
add
add
out
jle
out
dec
jle
and
add
sahf
xchg
incl
dec
jle
and
add
movb
add
jmp
dec
jle
add
add
cs
jle
add
add
xor
add
add
incb
add
call
jle
lcall
jle
and
add
xchg
pushl
jle
add
add
jle
jle
and
add
pop
xchg
call
add
add
add
add
add
add
add
add
add
add
jle
into
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
xchg
pusha
and
add
js
pusha
call
dec
jle
fisttpll
pusha
jmp
dec
jle
push
dec
jle
cli
dec
jle
and
add
push
js
pusha
jmp
dec
jle
add
add
cs
jle
add
add
xor
add
add
inc
js
pusha
call
jle
add
add
inc
or
add
add
incl
add
add
add
add
idivb
add
add
add
add
dec
js
pusha
into
pushf
jle
scas
pushf
jle
add
add
jbe
jg
add
add
outsb
js
pusha
and
add
scas
jns
pusha
pushl
jle
add
add
jle
jle
and
add
fidivrs
pusha
call
add
add
push
jns
pusha
pushl
add
add
add
add
dec
jle
add
add
int
jle
call
dec
jle
add
add
fmuls
pusha
add
dec
jle
push
add
add
dec
jle
push
dec
jle
or
add
pop
dec
jle
and
add
jbe
jns
jmp
dec
jle
add
add
cs
jle
and
add
cmpsb
jp
pusha
incl
jle
add
add
dec
dec
jle
add
add
push
dec
jle
add
add
pop
dec
jle
and
add
out
jns
pushl
jle
add
add
jle
jle
add
add
test
add
add
mov
add
add
nop
dec
jle
and
add
jp,pn
pusha
pushl
add
add
add
add
dec
jle
add
add
enter
add
add
repz
jle
sti
dec
jle
incl
dec
jle
and
add
xchg
pusha
jmp
dec
jle
add
add
cs
jle
add
add
or
add
add
incl
add
add
add
add
fidivrs
push
or
add
add
incl
add
add
add
add
fnstsw
add
add
add
add
mov
jns
xchg
jnp
pusha
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
jnp
pusha
and
add
push
jnp
pusha
incl
jle
add
add
dec
dec
jle
and
add
dec
jnp
pusha
jmp
jle
and
add
jbe
jns
incl
add
add
sahf
jl
pusha
jmp
add
add
add
add
add
add
add
add
dec
jle
add
add
int
jle
add
add
rorb
pusha
push
add
add
dec
jle
pop
add
add
dec
jle
push
add
add
dec
jle
and
add
push
jl
pusha
incl
dec
jle
and
add
ss
pusha
jmp
dec
jle
add
add
cs
jle
add
add
xor
add
add
outsb
jl
pusha
call
jle
add
add
pop
dec
jle
add
add
gs
jle
add
add
push
add
add
scas
jge
pusha
call
lcall
jmp
add
add
or
add
add
incl
add
add
add
add
enter
add
add
add
jge
pusha
xchg
jnp
pusha
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
out
jns
and
add
jge,pn
pusha
inc
dec
jle
add
add
into
dec
jle
and
add
pop
jge
pusha
jmp
dec
jle
and
add
xchg
pusha
incl
dec
jle
add
add
or
add
add
add
add
add
add
dec
jle
and
add
into
jle
pusha
incl
jle
add
add
dec
dec
jle
add
add
push
dec
jle
add
add
pop
dec
jle
add
add
outsl
dec
jle
and
add
push
jle
pusha
call
add
add
add
add
add
add
add
add
add
add
dec
jle
and
add
data16
pusha
jmp
dec
jle
out
dec
jle
and
add
xchg
jg
pusha
incl
dec
jle
add
add
push
dec
jle
and
add
jg
pusha
jmp
dec
jle
add
add
cs
jle
and
add
idivb
pusha
incl
jle
add
add
dec
dec
jle
add
add
push
dec
jle
add
add
pop
dec
jle
and
add
ss
pusha
pushl
jle
add
add
jle
jle
add
add
test
pusha
add
add
mov
pusha
add
add
lcall
add
jns
add
add
incl
add
add
add
add
mov
add
add
add
pop
jg
pusha
out
sahf
jle
into
pushf
jle
scas
pushf
jle
jbe
jg
add
add
jle
jns
and
add
jo
pusha
pushl
add
add
out
jo
pusha
call
inc
jle
add
add
fiadds
pusha
and
add
push
jo
pusha
push
inc
jle
and
add
inc
jo
pusha
call
inc
jle
and
add
outsb
jo
pusha
pushl
inc
jle
and
add
xchg
jno
pusha
call
jle
and
add
mov
add
add
pushl
jle
and
add
out
jns
call
add
add
push
jno
pusha
pushl
add
add
add
add
jno,pt
pusha
call
inc
jle
add
add
fiadds
pusha
fiadds
pusha
and
add
jbe
jns
push
inc
jle
and
add
sahf
jb
pusha
call
inc
jle
add
add
push
inc
jle
and
add
into
jb
pusha
pushl
inc
jle
and
add
divb
pusha
call
jle
add
add
pop
inc
jle
add
add
inc
jle
and
add
jb,pn
pusha
add
add
inc
jb
pusha
incl
add
add
add
add
add
add
add
add
add
add
jns
ljmp
sbb
add
add
add
add
add
add
jmp
add
add
add
add
add
add
add
add
add
add
add
add
cmpsl
jg
and
add
out
jae
pusha
inc
inc
jle
add
add
into
inc
jle
and
add
push
jae
pusha
jmp
inc
jle
and
add
inc
jae
pusha
incl
inc
jle
and
add
outsb
jae
pusha
jmp
inc
jle
and
add
xchg
je
pusha
incl
jle
and
add
mov
add
add
jmp
jle
and
add
out
jns
incl
decl
add
add
push
je
pusha
jmp
ljmp
add
add
inc
je
pusha
inc
inc
jle
and
add
outsb
je
pusha
jmp
inc
jle
and
add
xchg
jne
pusha
incl
inc
jle
and
add
mov
add
add
jmp
inc
jle
and
add
out
jns
incl
jle
and
add
push
jne
pusha
jmp
jle
and
add
ss
pusha
incl
add
add
add
add
add
add
outsb
jne
pusha
pushl
add
add
add
add
inc
jle
fs
add
push
inc
add
hlt
add
adc
nop
inc
add
in
add
adc
mov
add
add
add
add
mov
add
pop
inc
add
push
adc
sub
add
push
adc
dec
adc
push
adc
notb
add
ljmp
add
adc
mov
adc
xchg
adc
adcb
add
add
pop
adc
dec
adc
adc
sub
add
cmp
add
and
add
and
add
push
pop
add
add
add
in
push
add
rclb
add
rclb
add
adc
lods
adc
mov
adc
adc
lock
add
add
adc
add
and
add
adc
inc
adc
push
adc
pusha
adc
jb
add
adcb
add
adc
mov
add
mov
adc
rclb
add
out
adc
push
adc
add
adc
add
adc
add
add
add
jle
add
mov
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
xor
add
bound
add
nop
adc
add
rclb
add
adc
add
adc
add
and
add
cmp
add
dec
push
add
pop
push
add
push
add
jl
add
mov
add
xchg
push
add
sahf
push
add
add
add
push
pop
add
adcb
add
add
insb
adc
bound
add
pop
adc
push
adc
inc
adc
cmp
add
xor
add
dec
pop
add
add
add
push
adc
add
add
xchg
adc
xchg
add
jbe
add
sahf
adc
stos
adc
mov
adc
cld
adc
fcoms
add
call
add
add
add
jb
jo
inc
add
mov
push
outsb
insl
popa
jo
imul
insb
gs
add
jo
imul
insb
add
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
imul
outsb
addr16
add
xor
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
sahf
add
insl
imul
outsl
arpl
jae
add
add
outsb
push
jb
arpl
jae
ret
add
jb
jne
insb
push
jb
je
arpl
ret
outsl
popa
fs
imul
add
or
insb
jae
jb
outsb
inc
add
jno
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jns
je
insl
inc
imul
jns
add
je
popa
insb
inc
jb
add
je
popa
insb
inc
insb
insb
outsl
arpl
add
gs
and
inc
gs
outsl
fs
gs
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
fiadds
push
outsl
jae
dec
gs
popa
addr16
add
push
add
je
imul
add
insb
insb
push
imul
inc
outsb
fs
imul
add
outsl
ja
imul
aad
inc
imul
outsl
ja
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
popa
je
push
imul
incl
inc
gs
gs
je
jo
imul
leave
add
jbe
push
imul
push
push
inc
push
xor
cs
insb
add
jb
push
push
js
arpl
gs
add
inc
dec
dec
xor
cs
insb
add
data16
je
arpl
add
add
addr16
arpl
push
add
gs
arpl
add
imul
add
data16
je
add
imul
add
imul
add
imul
add
popa
insl
add
dec
push
push
inc
push
push
cs
insb
add
push
push
inc
push
dec
cs
dec
dec
add
add
insb
push
outsb
ja
outsb
add
add
imul
jo
imul
dec
gs
jo
jb
add
cltd
add
popa
jo
insb
insb
outsl
arpl
jo
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
pop
add
je
jns
je
insl
push
imul
gs
outsl
arpl
push
imul
inc
jb
popa
je
push
push
add
cli
add
je
jne
jb
outsb
je
push
dec
add
movsl
add
push
gs
popa
insb
jne
add
gs
popa
insb
jne
add
inc
js
je
push
add
lret
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
inc
js
je
jb
arpl
jae
testl
jne
jb
outsb
je
jb
arpl
jae
mov
jo
gs
insb
insb
outsl
arpl
mov
jo
imul
push
insb
jae
insb
insb
outsl
arpl
add
inc
jb
add
je
popa
insb
imul
imul
je
outsl
outsb
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
roll
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
push
gs
outsb
push
gs
js
gs
imul
gs
or
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
inc
gs
gs
imul
popf
add
popa
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
popa
fs
jb
je
push
je
add
add
popa
fs
imul
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
push
gs
imul
gs
add
add
imul
lods
add
push
gs
js
gs
imul
gs
add
gs
outsl
arpl
fs
arpl
insl
outsb
je
add
gs
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
jae
inc
imul
jb
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
dec
jae
popa
fs
gs
fs
je
add
mov
dec
jae
popa
fs
outsl
fs
je
add
jl
push
gs
je
dec
popa
outsb
fs
add
in
dec
jne
je
inc
jns
gs
outsl
push
imul
mov
popa
jo
je
imul
add
popa
jo
je
imul
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
mov
inc
push
dec
outsb
outsw
add
inc
inc
push
add
xor
inc
gs
inc
dec
inc
push
add
popa
add
je
outsb
fs
inc
imul
outsl
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
gs
outsl
arpl
fs
js
push
add
add
je
outsl
insl
jo
je
jb
popa
insl
gs
add
adc
inc
gs
imul
push
add
gs
inc
imul
inc
push
dec
xor
cs
insb
add
push
dec
dec
push
inc
push
dec
cs
insb
add
add
je
insb
ja
add
arpl
jae
add
add
mov
add
add
pop
add
add
add
or
add
add
add
mov
add
mov
add
rclb
add
daa
add
mov
sub
add
nop
das
add
inc
xor
add
add
nop
das
add
xor
add
adc
add
pop
add
rcll
add
pop
add
fsts
add
add
pop
add
add
add
inc
cs
insb
add
add
add
add
add
push
jge
push
pop
jge
dec
jge
dec
jge
push
loope
pusha
xchg
jl
stos
lock
fdiv
jl
sbb
jl
fs
mov
jl
mov
cmc
jl
iret
cmc
jl
cmc
cmc
jl
sbb
jl
dec
cmc
jl
jno
jl
mov
idivb
idivb
idivb
jecxz
pusha
pushf
out
pusha
fstpt
fidivrs
pop
jg
cmpsb
pop
jg
inc
pop
jg
xchg
xor
xchg
jg
mov
jg
out
jg
push
xor
inc
xor
inc
daa
jg
jbe
jg
push
adc
xchg
jg
out
jg
push
loope
pusha
ss
pusha
jbe
jg
mov
jg
jbe
jg
cmpsb
mov
jg
mov
jg
out
jg
out
jg
push
mov
jg
cwtl
jg
es
jg
push
cltd
jg
xchg
jg
notb
jg
jg
inc
bound
jbe
jle
cmpsb
arpl
arpl
xchg
pusha
les
pusha
add
pusha
and
pusha
loop
pusha
xlat
movsl
jge
jge
jl
or
jge
jg
jge
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
imul
gs
xor
cs
insb
add
add
add
add
nop
add
jmp
nop
add
jmp
add
add
add
add
add
add
aas
inc
push
gs
gs
imul
aas
jle
add
add
cs
inc
push
inc
js
gs
imul
jo
outsl
push
push
inc
inc
cmpsb
aas
jle
add
add
cs
inc
push
dec
outsl
je
insl
jo
gs
outsb
je
fs
inc
jb
jo
outsl
push
push
inc
inc
add
add
outsl
outsb
sub
and
and
je
imul
outsb
je
and
je
add
jb
gs
xor
cs
insb
add
add
jne
imul
outsb
add
insl
jo
gs
gs
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
jae
outsb
arpl
outsl
outsb
imul
add
add
push
imul
jns
outsb
addr16
outsb
je
jb
popa
arpl
and
jae
outsl
bound
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
je
gs
dec
push
sub
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
outsb
outsl
insl
and
arpl
jae
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
jae
outsb
outsl
je
popa
je
popa
arpl
bound
add
cmpsb
aas
jle
add
add
cs
inc
push
dec
outsb
jbe
insb
imul
outsb
je
inc
jb
jo
outsl
push
push
inc
inc
add
dec
push
add
dec
outsl
xor
jae
add
add
inc
arpl
imul
jne
inc
jb
popa
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
popa
outsb
daa
je
bound
jb
imul
imul
bound
add
inc
gs
gs
jo
popa
je
inc
add
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
pop
and
gs
jns
je
insl
inc
imul
jns
add
add
pop
pop
add
pop
fs
fs
insb
add
add
inc
push
dec
push
dec
inc
cs
insb
add
cs
add
sub
pop
push
push
dec
inc
outsl
ja
insb
outsl
popa
fs
outsl
inc
imul
insb
insl
outsl
outsb
cs
insb
add
inc
xor
inc
cmp
xor
xor
xor
cmp
xor
cmp
xor
xor
xor
cmp
cmp
inc
xor
xor
aaa
xor
xor
xor
cmp
inc
xor
cmp
inc
xor
xor
inc
aaa
inc
xor
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
inc
cmp
xor
cmp
add
add
ja
outsb
outsl
ja
add
add
pop
arpl
pop
add
add
pop
cmp
add
pop
ja
outsb
imul
insb
add
add
pop
dec
outsb
je
jb
gs
gs
fs
imul
je
jo
jne
jb
dec
outsb
outsw
inc
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
pop
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
pop
jle
add
xor
inc
cmp
xor
inc
cmp
inc
inc
cmp
xor
xor
inc
xor
aaa
aaa
inc
inc
inc
cmp
xor
cmp
ss
cmp
inc
inc
inc
aaa
xor
xor
cmp
inc
xor
xor
inc
inc
inc
cmp
inc
xor
xor
xor
cmp
xor
inc
inc
xor
inc
inc
inc
xor
inc
xor
xor
xor
aaa
cmp
ss
cmp
xor
xor
xor
aaa
xor
xor
xor
inc
xor
xor
xor
inc
xor
inc
inc
xor
xor
inc
add
add
xor
xor
inc
cmp
xor
xor
cmp
xor
inc
cmp
xor
xor
cmp
cmp
aaa
inc
cmp
inc
inc
xor
cmp
inc
inc
ss
ss
inc
xor
xor
xor
inc
xor
ss
inc
cmp
xor
ss
inc
cmp
xor
xor
inc
xor
aaa
xor
inc
xor
cmp
inc
aaa
aaa
xor
aaa
xor
xor
inc
xor
aaa
inc
xor
inc
inc
inc
xor
xor
xor
xor
xor
xor
aaa
inc
xor
xor
inc
inc
inc
inc
xor
inc
inc
aaa
xor
xor
ss
inc
xor
aaa
xor
cmp
inc
cmp
inc
xor
xor
xor
xor
inc
xor
cmp
xor
xor
inc
aaa
inc
inc
xor
xor
aaa
xor
xor
cmp
xor
inc
inc
inc
xor
xor
inc
inc
inc
xor
xor
xor
inc
xor
xor
xor
inc
aaa
inc
inc
xor
inc
aaa
cmp
inc
xor
inc
cmp
inc
xor
xor
inc
inc
ss
inc
add
add
inc
xor
inc
inc
inc
inc
inc
cmp
aaa
xor
inc
xor
cmp
xor
inc
xor
ss
xor
cmp
ss
inc
xor
cmp
inc
xor
inc
inc
inc
xor
inc
inc
cmp
xor
xor
cmp
xor
xor
cmp
inc
xor
xor
xor
ss
cmp
cmp
xor
xor
inc
inc
xor
inc
ss
xor
inc
cmp
xor
xor
inc
inc
xor
ss
inc
add
add
xor
cmp
xor
inc
cmp
xor
inc
aaa
cmp
inc
xor
inc
xor
inc
xor
inc
inc
cmp
aaa
xor
inc
inc
aaa
xor
xor
inc
inc
inc
xor
inc
inc
xor
xor
xor
xor
cmp
xor
ss
xor
inc
inc
inc
cmp
inc
xor
inc
inc
xor
xor
xor
inc
inc
xor
inc
cmp
inc
cmp
xor
xor
inc
xor
xor
xor
add
add
inc
ss
inc
xor
xor
xor
inc
xor
inc
xor
xor
xor
xor
cmp
inc
xor
inc
xor
inc
xor
xor
xor
xor
ss
inc
inc
inc
xor
inc
xor
aaa
inc
xor
inc
xor
xor
xor
inc
inc
xor
inc
ss
xor
xor
xor
cmp
inc
inc
cmp
xor
xor
xor
xor
inc
inc
xor
aaa
xor
xor
cmp
inc
inc
ss
xor
aaa
inc
inc
inc
cmp
inc
add
add
cmp
cmp
ss
inc
inc
xor
inc
xor
ss
inc
cmp
inc
inc
inc
xor
cmp
xor
xor
inc
aaa
inc
xor
cmp
cmp
xor
xor
inc
xor
xor
cmp
inc
xor
xor
aaa
cmp
inc
inc
inc
xor
cmp
xor
cmp
aaa
xor
inc
xor
xor
xor
aaa
inc
inc
inc
inc
xor
inc
xor
inc
xor
cmp
xor
xor
cmp
aaa
inc
cmp
xor
cmp
cmp
inc
inc
ss
add
add
inc
inc
cmp
xor
aaa
xor
xor
inc
ss
xor
inc
xor
xor
xor
xor
cmp
inc
inc
aaa
inc
xor
xor
cmp
cmp
xor
xor
xor
inc
inc
inc
xor
inc
inc
xor
xor
inc
aaa
inc
inc
inc
xor
xor
xor
cmp
inc
inc
inc
xor
inc
inc
inc
inc
inc
inc
aaa
xor
xor
inc
xor
cmp
xor
inc
inc
cmp
inc
xor
inc
inc
xor
inc
inc
xor
cmp
xor
xor
add
pop
inc
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
inc
inc
inc
xor
xor
xor
aaa
cmp
xor
xor
xor
inc
xor
inc
inc
inc
inc
xor
inc
xor
inc
inc
xor
cmp
inc
xor
ss
ss
xor
inc
inc
inc
xor
inc
xor
xor
inc
cmp
inc
xor
xor
inc
xor
inc
inc
inc
xor
inc
xor
cmp
xor
inc
xor
xor
inc
inc
aaa
add
add
cmp
inc
xor
xor
xor
xor
xor
inc
xor
xor
inc
xor
xor
inc
aaa
cmp
inc
xor
xor
xor
xor
inc
aaa
inc
inc
cmp
inc
cmp
cmp
xor
inc
aaa
xor
inc
inc
cmp
xor
inc
inc
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
cmp
aaa
inc
inc
aaa
inc
xor
cmp
xor
inc
inc
inc
inc
cmp
aaa
ss
inc
ss
add
add
xor
xor
cmp
xor
inc
inc
xor
xor
inc
xor
xor
xor
cmp
inc
cmp
cmp
aaa
aaa
cmp
inc
inc
inc
cmp
xor
aaa
xor
xor
cmp
xor
xor
xor
xor
inc
xor
inc
xor
cmp
inc
cmp
aaa
cmp
xor
xor
xor
inc
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
xor
xor
cmp
inc
inc
inc
inc
inc
inc
inc
inc
xor
add
pop
xor
xor
cmp
xor
inc
cmp
xor
xor
aaa
xor
inc
inc
xor
xor
xor
xor
ss
xor
aaa
cmp
xor
inc
cmp
xor
aaa
inc
ss
inc
inc
xor
xor
inc
xor
ss
aaa
xor
inc
xor
aaa
xor
xor
aaa
inc
xor
inc
xor
xor
xor
xor
xor
xor
inc
xor
cmp
xor
inc
inc
add
add
fs
jbe
jb
pop
gs
pop
push
add
pop
and
or
pop
and
popa
sub
add
add
ja
imul
outsl
imul
xor
aaa
inc
cmp
xor
inc
inc
xor
cmp
inc
cmp
xor
inc
inc
xor
cmp
ss
inc
xor
xor
xor
inc
inc
cmp
inc
xor
xor
cmp
xor
inc
inc
inc
xor
xor
cmp
xor
inc
aaa
xor
inc
inc
inc
inc
xor
xor
xor
inc
xor
cmp
inc
xor
cmp
xor
cmp
cmp
cmp
ss
cmp
cmp
xor
cmp
xor
inc
inc
xor
inc
xor
inc
xor
add
add
mov
out
mov
pop
push
push
jb
push
ss
outsl
jb
inc
inc
add
add
inc
xor
xor
xor
xor
inc
cmp
inc
inc
xor
xor
inc
inc
inc
inc
inc
inc
cmp
xor
cmp
ss
xor
aaa
cmp
inc
inc
xor
cmp
inc
aaa
xor
inc
xor
xor
cmp
xor
xor
inc
xor
xor
xor
cmp
inc
inc
inc
cmp
inc
xor
inc
xor
xor
inc
xor
aaa
cmp
inc
xor
xor
xor
xor
cmp
inc
cmp
xor
inc
inc
ss
xor
xor
cmp
xor
xor
add
push
das
das
ja
ja
outsb
xor
xor
arpl
add
outsl
jo
outsb
add
add
xor
inc
xor
xor
inc
xor
xor
xor
inc
xor
inc
xor
xor
cmp
aaa
inc
cmp
xor
xor
inc
inc
xor
xor
xor
inc
inc
cmp
xor
inc
inc
xor
xor
inc
aaa
cmp
xor
xor
inc
xor
cmp
inc
cmp
inc
aaa
xor
add
add
cmp
aaa
xor
inc
xor
xor
inc
xor
cmp
inc
inc
xor
inc
inc
inc
inc
xor
aaa
aaa
aaa
aaa
xor
inc
xor
cmp
inc
xor
inc
xor
cmp
ss
inc
xor
xor
xor
inc
inc
inc
cmp
inc
xor
add
pop
inc
inc
inc
inc
xor
cmp
xor
xor
xor
aaa
xor
inc
xor
inc
xor
cmp
ss
cmp
cmp
xor
inc
xor
aaa
inc
xor
cmp
inc
cmp
inc
cmp
xor
xor
cmp
inc
xor
inc
aaa
inc
cmp
ss
inc
cmp
inc
aaa
xor
add
add
cmp
aaa
xor
aaa
ss
xor
inc
xor
inc
inc
cmp
cmp
cmp
inc
inc
inc
xor
inc
inc
cmp
inc
xor
xor
ss
xor
xor
cmp
inc
aaa
cmp
xor
cmp
aaa
aaa
inc
xor
xor
inc
ss
cmp
xor
cmp
inc
cmp
inc
xor
inc
inc
inc
xor
add
pop
imul
gs
xor
cs
insb
add
add
outsb
je
insb
insb
cs
insb
add
pop
inc
inc
cmp
cmp
xor
ss
inc
xor
xor
aaa
ss
xor
inc
inc
xor
inc
inc
cmp
inc
cmp
xor
xor
xor
cmp
xor
aaa
inc
cmp
inc
xor
cmp
xor
cmp
cmp
xor
xor
cmp
inc
ss
cmp
inc
inc
xor
aaa
inc
inc
inc
cmp
inc
xor
xor
add
add
add
add
inc
js
je
jb
arpl
jae
add
add
push
je
inc
js
je
jae
jb
push
add
cmpsb
aas
jle
add
add
cs
inc
push
dec
outsb
jo
je
gs
arpl
inc
aas
and
outsb
jo
je
gs
arpl
addr16
push
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
inc
inc
jb
jo
outsl
push
push
inc
inc
cmpsb
aas
jle
add
add
cs
inc
push
inc
popa
outsb
outsb
outsl
je
insb
jne
push
jo
outsl
push
push
inc
inc
add
push
outsb
data16
jne
push
cmp
cmp
je
imul
arpl
popa
jae
bound
data16
and
jo
je
je
popa
je
arpl
outsb
outsl
je
bound
data16
jne
push
add
add
add
add
add
push
inc
inc
add
add
cmpsb
aas
jle
add
add
cs
add
push
dec
inc
sub
push
je
imul
cmp
dec
jne
jo
je
je
imul
je
jb
outsb
outsl
je
jae
arpl
imul
jne
jo
je
je
imul
je
jb
cmpsb
aas
jle
add
add
cs
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
dec
outsb
jbe
insb
imul
jb
popa
je
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
popa
insb
insb
outsl
ja
imul
add
add
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
je
imul
and
push
jb
imul
fs
inc
push
aas
and
insb
insb
outsl
arpl
outsl
jb
inc
inc
xor
jae
fs
inc
add
add
insb
jne
dec
popa
insl
gs
add
add
add
aas
inc
push
push
popa
insb
jne
push
jns
gs
imul
inc
dec
popa
insl
gs
popa
insb
jne
push
popa
imul
jo
outsl
push
push
inc
inc
add
add
add
sub
je
jns
outsb
and
and
je
imul
daa
sub
jae
outsl
jb
and
add
insl
gs
popa
insb
jne
push
popa
imul
jo
and
jae
popa
je
push
and
add
add
add
add
add
push
inc
dec
add
add
and
add
cmpsb
aas
jle
add
add
cs
inc
push
je
jo
pop
imul
ret
pusha
jne
add
jae
add
xchg
sarb
test
jge
test
jge
add
jge
ret
pusha
add
add
decl
mov
add
es
pusha
push
aad
pusha
outsb
aad
pusha
ds
pusha
adc
add
add
add
dec
dec
jns
dec
dec
jns
dec
jns
dec
jns
push
add
add
add
add
jns
loopne
add
xchg
jns
add
add
xchg
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
incl
or
add
sbb
sbb
sbb
sbb
sbb
sbb
xor
mov
jle
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
xor
jns
xor
jns
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
or
add
push
sub
or
add
ljmp
add
sub
adc
add
lcall
add
jle
adc
add
dec
sub
adc
add
sbb
jle
sbb
add
loop
jle
sbb
add
mov
add
add
add
add
jle
sbb
add
and
jle
js
add
adc
jle
jns
add
add
jle
jp
add
repnz
cld
add
add
sub
incl
add
out
jle
xorb
add
add
lock
call
push
add
push
add
and
pusha
sbb
pusha
add
add
incl
add
add
incl
add
add
add
add
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
add
add
add
cld
pushl
add
add
add
incl
add
addb
add
add
add
add
add
add
add
add
inc
add
add
add
inc
add
add
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
daa
jns
add
add
mov
jle,pn
mov
jle
stos
jle,pn
scas
jle,pn
mov
jle,pn
sahf
jle,pn
xchg
jle,pn
mov
jle
jp
jle
jbe
jle
outsb
sub
jle
pop
sub
jle
push
sub
jle
dec
sub
jle
inc
sub
jle
ds
jle
ss
jle
and
jle
push
sub
jle
dec
sub
jle
sub
jle
loop
jle
fisubrl
jle
ret
pusha
sub
jle
mov
jle
cmpsb
sub
jle
add
add
add
add
add
add
sbb
jb
jns
jb
jns
jb
jns
jb
jns
jb
jns
jb
jns
jb
jns
jb
jns
jb
jns
jg
jg
jg
jg
negb
jns
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
jmp
add
add
aas
inc
push
imul
gs
jae
fs
inc
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
jmp
add
add
aas
inc
push
aas
and
popa
jae
arpl
outsl
jae
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
jae
jb
popa
insl
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
imul
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
add
aas
inc
push
aas
and
popa
jae
arpl
je
gs
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
add
add
add
add
add
aas
inc
push
insb
outsl
imul
jb
jae
fs
inc
add
add
add
add
aas
inc
push
insb
outsb
addr16
pop
gs
outsl
jb
jae
fs
inc
add
cmpsb
aas
jle
add
add
cs
inc
push
outsl
jne
pop
outsl
pop
jb
outsb
addr16
jae
fs
inc
add
add
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
jb
outsb
je
insl
gs
gs
outsl
jb
jae
fs
inc
add
add
add
aas
inc
push
popaw
imul
jae
bound
gs
jae
fs
inc
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
popaw
arpl
inc
insb
outsl
arpl
gs
jae
fs
inc
add
cmpsb
aas
jle
add
add
cs
inc
push
pop
dec
outsl
arpl
jo
insb
outsl
arpl
gs
jae
fs
inc
add
add
push
push
push
inc
jb
gs
gs
outsl
jb
add
add
push
inc
insb
outsl
jae
push
gs
gs
add
push
dec
jo
outsb
push
gs
gs
add
push
push
push
inc
outsb
jne
gs
je
push
jb
arpl
jae
jae
add
ja
jae
jo
xor
cs
insb
add
add
add
add
and
xor
pop
cmp
add
add
and
add
add
add
das
add
and
add
add
cmp
add
jb
add
ja
add
and
jae
add
jae
add
add
add
sub
sub
sub
and
add
add
jae
popa
outsb
fs
insb
outsl
outsb
gs
and
add
add
arpl
imul
and
add
jbe
jb
imul
and
add
add
js
insb
and
add
popa
outsb
fs
insb
outsl
outsb
gs
add
arpl
imul
and
add
jbe
jb
imul
add
add
add
jns
add
add
add
adc
add
add
cmp
add
repnz
add
add
add
add
adc
push
add
add
add
add
adc
push
add
add
add
add
popa
jo
jae
add
es
outsl
je
add
es
add
add
es
je
add
add
es
insl
jo
add
add
inc
cmp
add
add
inc
sub
cmp
add
cmp
js
insb
add
add
popa
outsb
fs
insb
outsl
outsb
add
outsb
arpl
imul
jbe
jb
imul
pusha
ljmp
pusha
mov
adc
mov
jns
outsb
adc
dec
adc
adc
adc
push
adc
notb
jns
rclb
jns
mov
adc
inc
jb
outsl
jb
outsb
jne
insb
and
xor
and
and
gs
arpl
and
inc
and
jne
and
and
jo
je
jae
jb
popa
insl
add
jb
jb
outsl
arpl
outsb
je
gs
jo
jns
add
add
jb
jb
jo
jb
imul
insb
popa
jb
je
outsl
outsb
add
inc
jb
outsl
jb
jo
jb
imul
insl
outsb
je
add
inc
jb
outsl
jb
jo
jb
imul
outsb
outsl
ja
add
inc
jb
outsl
jb
jb
popa
imul
and
add
inc
jb
outsl
jb
and
jo
jns
je
add
add
jb
jb
jb
popa
imul
jb
bound
gs
add
add
jb
jb
jb
popa
imul
insl
outsb
je
jbe
insb
jne
add
add
inc
popa
imul
jb
popa
and
gs
outsb
je
outsb
popa
insl
add
jb
jb
jo
jb
imul
insl
outsb
je
add
dec
gs
outsl
jb
and
insb
outsl
arpl
imul
insb
gs
add
imul
outsl
jo
outsb
and
insb
add
jb
jb
add
dec
outsl
and
jb
jb
add
add
je
gs
jo
popa
je
inc
add
add
push
gs
imul
bound
gs
add
inc
outsl
jo
inc
imul
gs
gs
inc
imul
gs
imul
arpl
add
add
add
outsb
inc
js
arpl
je,pn
outsb
jae
js
je,pn
outsb
jae
js
je,pn
outsb
jae
js
add
add
add
add
popa
addr16
insb
insb
add
add
dec
insl
popa
addr16
imul
outsb
inc
js
add
add
insl
dec
outsb
imul
add
add
insl
push
gs
jo
imul
push
jns
inc
gs
jo
imul
push
jns
dec
outsl
popa
fs
outsl
fs
add
add
insl
inc
gs
outsl
fs
gs
outsb
outsw
add
add
push
jns
inc
gs
jns
inc
jb
insl
dec
popa
insl
add
add
outsb
fs
insl
popa
add
add
add
add
fs
jne
add
add
xor
add
cmpsb
aas
jle
add
add
cs
inc
push
push
gs
push
gs
inc
popa
imul
jns
je
push
push
inc
inc
add
inc
jb
jo
outsl
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
je
jb
jo
ja
jb
jne
and
jae
insb
data16
je
popaw
imul
add
jns
je
addr16
jo
imul
jb
je
insl
jae
popa
jb
and
popa
bound
and
outsw
jb
and
and
ja
jb
jne
and
insb
data16
je
and
and
jb
outsl
jb
gs
add
add
aas
inc
push
dec
outsb
jbe
insb
imul
addr16
inc
inc
jb
jo
outsl
push
push
inc
inc
add
imul
popa
and
insb
imul
outsb
addr16
add
cmp
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
je
jae
jo
outsl
jb
and
jae
arpl
insb
and
je
bound
imul
add
bound
gs
add
bound
and
gs
and
add
add
dec
popa
jae
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
arpl
daa
je
je
jne
arpl
and
add
add
add
add
add
add
aas
inc
push
dec
outsl
inc
push
insb
push
jne
jo
jb
inc
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
cmpsb
aas
jle
add
add
cs
inc
push
inc
insb
outsl
arpl
outsb
addr16
outsb
jo
je
outsb
insb
jns
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
and
outsb
bound
imul
and
jo
je
imul
imul
outsb
je
and
and
jae
outsl
bound
arpl
add
add
add
aas
inc
push
dec
outsb
jbe
insb
imul
je
js
inc
inc
jb
jo
outsl
push
push
inc
inc
add
add
inc
jne
data16
fs
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
cmp
je
imul
arpl
outsl
gs
daa
je
jae
jo
outsl
jb
and
insb
je
jo
and
popa
outsb
outsb
gs
jae
add
inc
imul
add
add
add
add
jo
gs
outsl
fs
popa
jae
cmp
gs
imul
imul
outsb
outsl
je
bound
jae
arpl
imul
and
jae
arpl
push
outsl
fs
inc
imul
fs
popa
jae
cmp
inc
gs
gs
dec
push
sub
and
jae
and
and
insb
insb
gs
and
and
arpl
jo
imul
arpl
inc
imul
fs
popa
jae
cmp
je
imul
gs
insl
outsl
fs
outsb
outsb
outsl
je
jne
and
outsb
jne
insb
and
add
add
add
insb
je
jb
imul
jb
fs
outsb
jo
je
and
jbe
insb
imul
jb
jae
jp
add
add
inc
imul
push
gs
fs
outsb
jo
je
inc
jb
popa
jns
imul
jae
imul
jo
je
jne
data16
popa
jb
jne
outsb
je
add
add
je
jne
inc
jne
data16
add
add
add
add
aas
inc
push
inc
jns
gs
jb
popa
jns
popa
jb
insl
gs
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
dec
inc
push
pop
push
inc
inc
inc
dec
dec
inc
and
and
inc
pop
inc
dec
inc
pop
pop
inc
push
dec
push
pop
push
inc
inc
inc
dec
dec
inc
and
outsb
outsb
outsl
je
bound
jne
gs
je
and
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
popa
outsb
fs
jae
jo
fs
outsb
add
add
push
je
gs
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
outsb
jbe
insb
imul
and
and
outsl
arpl
jo
fs
outsb
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
imul
js
and
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
add
add
jb
popa
insl
push
jb
outsb
jae
outsl
jb
popa
je
outsl
outsb
inc
imul
insb
popa
imul
insb
outsb
addr16
and
and
je
popa
and
insb
je
jo
and
and
outsl
arpl
jae
jp
and
and
pop
push
inc
inc
inc
dec
dec
inc
and
and
arpl
imul
dec
popa
jae
push
gs
imul
outsl
outsb
inc
imul
addr16
cmpsb
aas
jle
add
add
cs
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
dec
popa
jae
push
gs
imul
outsl
outsb
inc
popa
imul
push
imul
outsl
outsb
inc
imul
jns
je
push
push
inc
inc
add
add
dec
popa
jae
push
gs
imul
insl
gs
popa
and
jae
and
je
jbe
insb
imul
insl
imul
jb
jno
imul
jb
insl
gs
jb
daa
add
inc
popa
jae
dec
pop
inc
arpl
gs
and
xor
jae
and
jae
and
and
je
gs
and
and
and
and
arpl
imul
popa
jae
dec
pop
inc
arpl
gs
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
inc
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
add
add
add
aas
inc
push
dec
gs
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
inc
jb
jo
outsl
push
push
inc
inc
add
add
popa
jne
je
arpl
jo
outsl
jb
and
outsb
outsb
outsl
je
fs
jo
and
jae
popa
and
je
and
jae
jo
jae
jo
jb
jae
add
add
add
add
add
add
aas
inc
push
dec
inc
inc
inc
popa
fs
jb
inc
inc
gs
jne
je
arpl
jo
outsl
jb
imul
jb
jo
outsl
push
push
inc
inc
add
add
inc
gs
jne
je
arpl
jo
outsl
jb
imul
dec
inc
inc
and
arpl
popaw
imul
inc
push
sub
add
add
dec
dec
inc
inc
sub
add
add
add
cmpsb
aas
jle
add
add
cs
inc
push
dec
outsb
je
addr16
inc
jb
jo
outsl
push
push
inc
inc
add
cmpsb
aas
jle
add
add
cs
inc
push
inc
inc
push
inc
arpl
gs
jb
inc
inc
jb
jo
outsl
push
push
inc
inc
add
push
and
outsl
fs
jb
jb
add
add
fs
imul
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
popa
add
add
add
add
add
add
insl
add
add
add
jg
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
popa
add
add
add
outsl
add
add
add
jnp
add
jg
add
test
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
pop
add
add
add
imul
add
ja
add
addl
add
xchg
add
lea
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
add
add
add
jno
add
jae
add
ja
add
mov
add
popl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
dec
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
adc
add
add
daa
add
add
das
add
add
push
add
add
gs
add
addl
add
xchg
add
add
lahf
add
add
stos
add
add
mov
add
mov
add
add
iret
add
add
aad
add
fildl
add
repz
add
pop
push
add
or
push
add
pop
push
add
pop
push
add
and
add
sub
add
das
push
add
cmp
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
gs
add
jns
add
jg
add
addl
add
push
add
mov
push
add
lods
push
add
mov
push
add
lds
add
int
add
roll
add
flds
add
filds
add
icebp
push
add
testl
add
std
push
add
or
add
adc
add
pop
pop
add
daa
pop
add
aaa
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
push
pop
add
popa
pop
add
insl
pop
add
jae
add
jns
add
mov
add
lea
add
popf
pop
add
lahf
pop
add
mov
add
mov
pop
add
leave
pop
add
int
add
iret
pop
add
roll
add
fildl
add
loope
add
jmp
add
in
pop
add
testl
add
invd
add
adc
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
pop
or
add
add
jno
add
orl
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
dec
or
add
add
push
or
add
add
pop
or
add
add
jno
add
ja
add
test
add
mov
add
fwait
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
popa
or
add
add
or
add
add
jne
add
jnp
add
jg
add
orl
add
mov
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
pop
or
add
add
outsl
or
add
add
mov
add
lea
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
pop
or
add
add
popa
or
add
add
jae
add
ja
add
orl
mov
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
prefetch
add
or
add
and
add
sub
or
add
dec
or
add
imul
add
test
add
mov
add
mov
or
add
mov
or
add
int
add
rorl
add
fisttpl
add
out
add
repz
add
decl
add
pop
push
add
sbb
push
add
daa
push
add
das
push
add
xor
push
add
dec
push
add
push
push
add
pop
push
add
pop
push
add
imul
add
add
jne
add
jge
add
xchg
add
push
add
xchg
push
add
fwait
push
add
mov
add
mov
add
mov
push
add
rorl
add
aad
add
fisttpl
add
in
push
add
out
push
add
stc
push
add
pop
sldt
or
add
or
sldt
and
sldt
xor
add
inc
sldt
inc
sldt
dec
sldt
dec
sldt
push
sldt
pop
sldt
pop
sldt
sldt
imul
add
add
xchg
sldt
mov
sldt
pop
jae
arpl
jae
fs
insb
add
cs
add
pop
jns
push
pop
jns
push
pop
jns
dec
movsl
jle
xchg
adc
adc
inc
movsl
jle
inc
movsl
jle
cmp
jle
xor
jle
sub
add
add
add
addb
add
add
add
add
addb
add
add
add
dec
add
add
add
sub
add
rorb
addb
add
or
push
add
push
add
add
mov
out
mov
out
dec
test
out
mov
out
cmc
test
out
pop
adc
out
inc
pop
sti
out
fisttpl
sti
out
in
sti
out
outsl
test
out
jl
sti
out
mov
sti
out
stos
pop
sti
out
jecxz
sti
out
sub
stos
out
sub
sti
out
outsl
test
out
stos
pop
sti
out
ficoms
sti
out
adc
sti
out
jl
sti
out
dec
stos
out
mov
sti
out
test
test
out
in
sti
out
adc
adc
out
int
sti
out
pop
adc
out
and
out
fisttpl
sti
out
mov
test
out
jae
sti
out
in
sti
out
mov
out
mov
sti
out
outsl
test
out
ficoms
sti
out
sub
sti
out
sub
sti
out
data16
out
in
sti
out
mov
out
adc
out
data16
out
inc
pop
sti
out
xor
sti
out
int
sti
out
inc
adc
sti
out
or
out
and
out
xor
sti
out
cmc
test
out
outsl
test
out
mov
sti
out
clc
test
out
or
sti
out
adc
stos
out
int
sti
out
jecxz
sti
out
data16
out
pushf
stos
out
es
out
mov
pop
sti
out
adc
test
out
mov
sti
out
mov
out
outsl
test
out
mov
out
dec
stos
out
sub
sti
out
stos
sbb
out
shrb
sti
out
data16
out
inc
pop
sti
out
outsl
test
out
sub
pop
sti
out
test
sbb
out
pop
adc
out
cmp
adc
out
cmp
adc
out
pop
test
out
fisttpl
sti
out
mov
sti
out
jbe
sti
out
mov
sti
out
popa
push
sti
out
pushf
stos
out
sub
sti
out
adc
out
popa
push
sti
out
or
sti
out
mov
out
inc
adc
sti
out
pop
adc
out
and
out
sub
test
out
ficoms
sti
out
shrb
out
pushf
stos
out
jbe
sti
out
pop
test
sti
out
mov
out
pop
adc
out
mov
sti
out
sub
sti
out
jae
sti
out
pop
test
out
es
out
data16
out
clc
test
out
shrb
sti
out
shrb
sti
out
stos
sbb
out
shrb
sti
out
inc
adc
sti
out
jbe
sti
out
jbe
sti
out
ficoms
sti
out
in
sti
out
pop
test
sti
out
shrb
sti
out
dec
test
sti
out
outsl
test
out
shrb
out
pop
adc
out
es
out
fisttpl
sti
out
dec
stos
out
inc
pop
sti
out
outsl
test
out
test
test
out
dec
stos
out
adc
out
pop
adc
out
pushf
stos
out
sub
sbb
out
stos
pop
sti
out
sub
sti
out
test
sbb
out
jl
sti
out
shrb
sti
out
or
sti
out
popa
push
sti
out
popa
push
sti
out
dec
stos
out
adc
out
pushf
stos
out
adc
pop
sti
out
inc
adc
sti
out
in
sti
out
cltd
adc
out
ficoms
sti
out
push
adc
out
inc
adc
sti
out
jl
sti
out
push
adc
out
es
out
cltd
adc
out
shrb
sti
out
adc
adc
out
jl
sti
out
push
adc
out
clc
test
sti
out
popa
push
sti
out
push
adc
out
test
adc
out
sub
adc
out
pushf
stos
out
cltd
adc
out
es
out
push
adc
out
outsl
test
out
cltd
adc
out
inc
pop
sti
out
push
adc
out
or
sti
out
cltd
adc
out
dec
stos
out
push
adc
out
ficoms
sti
out
cltd
adc
out
mov
adc
out
mov
out
cltd
adc
out
or
out
push
adc
out
sub
adc
out
data16
out
push
adc
out
test
adc
out
or
sti
out
push
adc
out
jecxz
sti
out
cltd
adc
out
dec
test
sti
out
dec
test
sti
out
stos
sbb
out
push
adc
out
sub
sti
out
cltd
adc
out
jecxz
sti
out
int
sti
out
pusha
call
mov
pushl
lea
jmp
cmc
cmc
neg
clc
add
call
neg
test
cmp
pusha
add
jmp
mov
pushl
popl
mov
mov
mov
mov
lea
jmp
bts
pushf
mov
push
pusha
bt
bt
sub
lea
jb
pushf
pusha
pusha
mov
pushf
push
push
lea
jmp
pushf
pushf
not
jmp
pushf
push
call
cmc
cmp
cmc
cmc
neg
call
push
pusha
push
pushl
popl
push
movb
movb
pushf
lea
jmp
pushf
mov
call
add
jle
add
bt
test
push
stc
cwtl
bt
sub
pusha
pushl
lea
call
mov
jmp
mov
pushl
pushf
lea
jmp
add
cmp
shld
movl
push
pusha
lea
jle
mov
call
sub
mov
call
rol
cmc
mov
and
call
pushf
mov
pushf
mov
lea
pushf
popl
movsbw
movzbw
push
bsr
push
movsbw
bswap
push
jle
push
setne
push
setl
pushl
pusha
push
lea
bsr
movl
lea
push
bswap
mov
call
jmp
mov
push
pushl
movl
mov
mov
pushf
movl
pushf
popl
pushl
pushf
mov
push
push
push
lea
jmp
jmp
aas
rcl
mov
push
sar
inc
sbb
mov
cmp
call
pushf
popl
pushf
movw
mov
pushf
movw
pushf
lea
jmp
not
pushf
clc
not
pusha
and
push
movw
jmp
mov
pushl
pushf
popl
push
jmp
push
mov
jmp
cmc
test
bt
pushf
add
call
call
jmp
mov
pusha
pushf
lea
jmp
xor
push
mov
mov
clc
test
add
lea
jo
mov
pusha
pusha
pushf
lea
jmp
mov
pushf
popl
call
mov
push
pushf
call
shr
not
pop
sub
setp
dec
bswap
mov
mov
mov
rcr
add
xchg
bswap
mov
bt
add
mov
ror
bsr
xor
bt
clc
btc
add
clc
ror
call
call
call
call
mov
pushf
lea
jmp
pusha
pushl
jmp
cmc
pushf
mov
cmp
sub
call
pushf
sub
bt
test
bt
shl
call
pushf
movb
pushf
popl
call
mov
mov
add
clc
pushf
clc
pushf
add
stc
stc
ror
cmp
test
clc
add
stc
call
cmc
sub
test
lea
jle
pusha
cmc
neg
pushf
pushf
mov
mov
not
mov
inc
mov
inc
jmp
pushl
popl
mov
lea
jmp
call
stc
jmp
mov
inc
jmp
push
call
jmp
pushf
pusha
mov
mov
pusha
movb
pushf
mov
call
clc
movzbl
pusha
jmp
jmp
jmp
pushf
pushl
mov
movb
pushf
pushl
lea
jmp
bsf
daa
notl
shr
btr
sar
or
mov
bt
clc
sub
stc
and
pushf
pushl
push
call
mov
pusha
movb
pushf
mov
jmp
pusha
rol
call
bswap
sar
mov
cmc
add
jmp
mov
movb
call
movb
mov
call
inc
clc
test
sub
cmp
bt
mov
stc
sub
jmp
rep
movzbw
mov
shl
bt
mov
test
jmp
pushf
popl
pushf
pushl
popl
pushf
push
mov
lea
jmp
add
mov
lea
cmc
mov
sub
pushf
jmp
pushf
movw
push
pushf
popl
jmp
mov
push
jmp
xor
mov
cmp
add
pusha
pushf
lea
jmp
shl
add
xadd
mov
movzbl
shld
movsbw
clc
bsf
sub
cmc
neg
bsr
movzbw
not
not
dec
inc
dec
shl
pusha
rcl
sub
shr
btr
mov
call
mov
pushl
pushf
popl
movb
pushf
pushl
popl
movb
pushf
lea
jmp
mov
mov
mov
pushf
popl
push
pushl
popl
push
lea
jmp
mov
pushf
push
pushf
mov
lea
jmp
pushf
popl
pushl
mov
push
mov
lea
jmp
inc
pushf
pushf
mov
movw
lea
jmp
mov
movw
movw
lea
jmp
jmp
pushl
jmp
pushf
pushf
mov
push
lea
jmp
mov
call
rcr
rcr
mov
setp
neg
bt
mov
jmp
mov
movw
lea
jmp
mov
pushf
mov
pushf
mov
call
mov
call
lea
jb
push
mov
call
bt
cmp
shl
jmp
pushf
mov
pushf
pusha
pushl
lea
jmp
setge
call
pushl
popl
pushf
pushf
pushf
lea
jmp
sub
lea
call
mov
mov
pushf
pushf
pushf
lea
jmp
not
pushf
mov
call
mov
pusha
pushf
popl
jmp
mov
inc
call
mov
pushf
pushf
mov
pusha
pushf
pushf
movb
lea
jmp
jmp
call
push
pushf
popl
movb
pushl
popl
pushf
movw
lea
jmp
jmp
rol
dec
sbb
shr
movzbl
stc
test
pusha
xor
bt
cmc
test
add
movb
call
pushl
popl
pushf
push
pusha
lea
jmp
das
bsr
setg
bsf
mov
pushf
pusha
add
cmp
mov
test
call
std
pushl
popf
push
lea
jmp
cmp
call
mov
pusha
mov
jmp
jmp
pushf
pushf
pusha
call
push
call
shl
btr
bts
shld
mov
bt
and
xor
stc
add
not
mov
call
call
mov
pushf
pushf
push
call
push
movb
mov
mov
movb
jmp
pushf
movb
call
movb
pushf
neg
pushl
add
jmp
mov
push
jmp
pushf
pushl
movb
pushf
popl
pushl
pusha
lea
jle
pusha
pushl
popl
mov
movb
push
push
lea
jmp
jmp
cmc
call
mov
pushf
popl
call
movsbl
mov
clc
pusha
mov
call
mov
jmp
mov
jmp
shr
neg
xadd
jmp
push
pushf
jmp
call
call
cmc
cmc
cwtl
push
pushf
sub
pushl
pusha
jmp
adc
call
lea
ja
movsbw
or
shrd
aam
mov
movsbw
bt
aad
lea
bsf
btr
rcr
adc
sub
clc
lahf
lea
and
not
pusha
and
rol
jmp
mov
bswap
bswap
movzbw
inc
shl
bts
sub
bswap
not
cmp
pushf
movsbw
movzbl
xor
rol
and
bt
movb
mov
pushf
cmc
sub
lea
jle
pushf
movb
pushf
mov
movl
pushf
push
pusha
lea
jmp
dec
movzbl
btc
add
call
call
pushf
popl
jmp
pushf
dec
call
add
add
mov
mov
movw
pushl
jmp
call
push
mov
pushl
mov
pusha
call
cwtl
seta
jmp
mov
pusha
pushf
mov
jmp
mov
movb
push
push
lea
jmp
mov
mov
push
pushf
push
pushf
popl
movb
jmp
call
and
aas
bswap
lea
bt
cmp
call
mov
sbb
stc
shr
pushf
mov
clc
bt
cmp
sub
push
call
jmp
mov
pushf
movl
lea
jmp
mov
inc
rcr
not
cmp
shl
btc
xor
shl
rol
cmp
dec
and
rcl
mov
cmc
call
inc
bt
lea
cmp
bt
mov
clc
xor
test
mov
jmp
lea
jo
popl
pusha
pusha
lea
jmp
mov
pusha
lea
jmp
bswap
jmp
mov
push
pushf
lea
jmp
pushl
popl
mov
mov
lea
jmp
mov
jmp
push
mov
pushf
pushf
pushf
pushl
pushf
popl
mov
pushl
mov
mov
mov
push
lea
jmp
call
shrd
jmp
pusha
mov
pushf
lea
jmp
jmp
pushl
popl
pusha
lea
jmp
mov
push
pushf
push
lea
jmp
push
jmp
movb
pushf
popl
movb
mov
mov
pushf
pushl
pusha
lea
jmp
pushf
popl
pusha
pushf
pushl
popl
pushf
pushl
pushf
lea
jmp
pusha
call
pushf
pusha
mov
movw
pushf
pushf
mov
lea
jmp
test
cmc
jmp
pushf
pushf
popl
push
mov
pushf
lea
jmp
call
bsr
mov
neg
add
mov
not
push
push
mov
movw
pusha
mov
pushf
mov
push
pushf
lea
jmp
sub
pop
pusha
mov
movsbw
mov
movzbw
pushf
mov
push
push
pusha
movsbw
movw
mov
push
bswap
lea
cld
cld
mov
pushl
movsbw
mov
cld
jmp
pushl
sub
push
call
jg
pushf
pushl
popl
pushl
push
pushf
lea
jmp
call
stc
add
jmp
jmp
shr
pushf
push
push
mov
pushf
pushf
popl
mov
pushf
mov
pushl
popl
movb
mov
pushf
movb
lea
jmp
call
mov
mov
pushf
push
lea
jmp
cld
push
mov
movb
call
call
stc
pusha
not
pushf
sub
cmc
pusha
cmc
cmc
and
jmp
call
push
mov
pushf
jmp
bswap
jmp
mov
pushl
pusha
push
jmp
sub
mov
call
jmp
push
mov
push
jmp
mov
pushf
movb
movb
lea
jmp
stc
movb
add
mov
mov
movb
movb
lea
jmp
shrd
ror
ror
shld
mov
stc
pushf
add
pushf
jmp
call
not
pusha
movw
pusha
inc
jmp
pusha
jmp
bt
jmp
movb
inc
mov
pushf
mov
mov
pushl
pushf
pushf
pushl
ret
dec
mov
mov
not
mov
bt
test
add
pushf
pushf
pushl
mov
push
pusha
lea
jmp
jmp
mov
call
push
lea
jae
mov
push
lea
jmp
mov
pusha
lea
jmp
pushf
popl
call
pushl
popl
push
push
lea
jmp
pushf
popl
pushf
mov
push
pushl
popl
mov
mov
lea
jmp
add
test
test
pushf
clc
sub
pushf
jmp
mov
pushf
push
pushl
pushl
ret
mov
mov
movb
call
mov
call
jle
pushf
pushf
pushf
mov
call
aas
bts
rcl
adc
mov
test
sub
cmc
cmp
call
pushl
jmp
pusha
pushl
popl
push
pushf
lea
jmp
pushl
mov
pushf
movw
pushf
push
lea
jmp
call
call
jmp
mov
cmc
clc
push
test
sub
call
pushf
mov
movw
pushf
movb
push
lea
jmp
inc
lea
inc
pushf
sub
lea
bswap
rol
ror
call
test
mov
add
mov
jmp
jmp
pusha
call
mov
not
cmp
adc
mov
jmp
jmp
movzbw
setae
inc
push
xchg
push
push
lea
bsf
pushl
popl
setnp
xchg
bswap
push
bsr
dec
bswap
pushf
mov
dec
pop
mov
call
mov
mov
pusha
lea
jmp
pushf
pushf
popl
call
pusha
inc
call
call
jmp
add
pushf
push
test
not
mov
push
jmp
mov
pushf
pushf
lea
jmp
push
pusha
mov
jmp
movzww
call
push
inc
push
pushf
mov
pusha
pushf
pushf
lea
jmp
jmp
mov
mov
call
aaa
and
xadd
xor
mov
mov
pusha
bswap
mov
neg
shld
mov
cltd
aad
shld
mov
or
bt
cmc
mov
bt
movsbw
aam
mov
shrd
or
cld
test
mov
bsf
bswap
std
mov
not
inc
pushl
popf
call
bswap
rol
shr
lea
pushf
xchg
xadd
bswap
sub
test
call
add
shl
movzbl
dec
shl
mov
jmp
mov
rcr
call
test
sub
mov
mov
mov
lea
jmp
stc
sub
add
jg
test
push
pushf
shl
call
add
lea
jg
pusha
pushf
mov
jmp
mov
pusha
push
pushf
push
lea
jmp
mov
pushf
mov
pushf
push
pusha
call
jmp
jmp
pusha
mov
push
pusha
pushf
push
pushf
popl
movw
call
pusha
shld
mov
rcr
cmc
mov
pushf
stc
movb
add
pushf
pushf
call
pushf
call
mov
push
lea
jmp
pusha
call
mov
push
jmp
mov
movb
pushf
pushf
lea
jmp
pushl
push
movw
pushf
popl
call
mov
mov
call
pushl
popl
mov
pusha
lea
jmp
call
dec
rcr
shl
not
mov
call
pusha
xor
movb
pusha
rol
pushf
call
mov
movzbw
dec
movzbw
dec
inc
add
xor
rcr
setle
not
rol
bsf
pusha
not
dec
setb
setns
sets
inc
cmc
shrd
or
sbb
xor
sete
setb
btc
test
mov
cmp
push
add
jmp
cmp
clc
neg
stc
add
jmp
jmp
push
mov
pusha
call
pushl
pushl
mov
pusha
movb
call
shld
push
or
pusha
mov
push
test
xor
stc
mov
call
pushl
call
bsr
bsf
call
pushf
pushf
pusha
mov
pushl
push
call
bt
stc
push
sub
pushf
shr
pusha
pushf
mov
lea
je
pushf
call
push
call
mov
mov
orl
or
pusha
xchg
scas
ret
testl
push
jge
or
jg
cmpl
pop
xchg
jb
push
pop
gs
cmpsb
mov
sbb
xor
hlt
jecxz
scas
test
push
int
int3
cld
orl
inc
jns
mov
cmovnp
mov
inc
shr
jnp
pop
mov
mov
and
test
pop
xor
push
sub
jge
ljmp
sarb
mov
in
cmp
add
sti
call
sub
aas
test
fs
and
cltd
notl
ss
ret
xor
test
pushf
xor
in
imul
loop
mov
cwtl
sbbl
sub
xor
call
movsb
aaa
mov
lods
int3
ds
and
fdiv
mov
stos
sbb
mov
sbb
cltd
enter
pop
xchg
xchg
cmp
xchg
into
fucomp
or
scas
outsb
test
mov
or
data16
arpl
and
mov
popf
add
xor
jg
xor
mov
adc
in
xchg
mov
mov
xchg
push
int
xchg
sbb
call
test
outsl
lea
outsl
add
adc
jns
andb
imul
pop
inc
fs
fyl2xp1
sbb
sub
sbb
cmp
sub
and
ror
mov
sub
inc
sti
push
frndint
cmc
xchg
aam
xor
inc
sub
mov
sbb
xchg
int3
sti
sbb
outsb
stos
ret
fcomi
pop
and
stc
pop
push
loop
inc
push
test
mov
mov
push
bound
pusha
dec
es
ret
mov
or
es
scas
in
adc
dec
jle
test
mov
repnz
arpl
iret
lock
sbb
mov
xchg
stos
enter
gs
scas
filds
inc
popa
push
adc
sub
ja
jle
clc
xor
sub
jb
out
mov
mov
lods
xlat
push
sub
int3
cmpb
test
inc
pop
jb
mov
loope
imul
loop
or
push
rorb
inc
pop
jno
call
lods
pop
pop
jecxz
mov
mov
imul
negl
push
add
inc
adc
dec
inc
dec
shr
sbb
outsb
jae
jno
xchg
and
pop
and
shll
outsl
xchg
jno
xor
dec
std
xor
add
jo,pt
jecxz
test
aas
sahf
in
push
pop
sub
scas
inc
jno
jecxz
xor
xlat
jecxz
push
push
daa
mov
dec
bound
fdivr
das
inc
arpl
mov
arpl
lods
cmp
sbb
xchg
jo
dec
fnstsw
cmp
jb
xchg
clc
adcb
xchg
jmp
mov
int3
in
loope
lcall
xchg
mov
pop
jg
popf
pop
jg
mov
xor
shll
mov
xchg
push
pop
aas
push
push
data16
bound
dec
jnp
mov
xor
int3
jp
pusha
adc
inc
pop
arpl
cmp
inc
jbe
stos
in
inc
bound
rcrl
xchg
insb
cmp
inc
jp
push
leave
imul
cmp
dec
jecxz
lret
int
sbb
sub
stos
scas
out
repz
xor
nop
cmpsb
in
mov
cmp
xor
mov
stc
stos
dec
xchg
call
and
orl
cld
xor
sbb
jbe
hlt
lahf
xor
inc
fs
xor
test
mov
insb
sub
add
int3
jp
adc
push
mov
sub
sub
mov
jo
xchg
mov
lods
imul
daa
xchg
gs
mov
mov
mov
and
pushf
mov
pop
jo
xor
fistpll
sub
rorl
aam
push
les
in
shll
adc
test
push
into
xchg
add
and
in
xchg
push
push
movsl
in
inc
pop
add
test
test
mov
or
pop
sbb
push
inc
std
andl
xorl
lds
sub
mov
pop
addr16
ss
sbb
jge
cmp
rcrl
aam
push
ret
add
in
fisubl
testl
xchg
call
repz
xchg
push
data16
hlt
xor
xchg
sbb
xorb
enter
fiadds
sbb
add
incl
mov
test
out
dec
push
cmpb
cmp
inc
es
rcl
or
inc
test
sahf
mov
dec
mov
dec
and
cld
outsb
lahf
js
sti
stc
inc
xlat
ret
shrb
fists
sub
inc
aad
nop
jb
push
mov
sbb
ficoms
lods
in
inc
push
stos
int
push
arpl
test
dec
lock
psubsb
push
sti
decl
outsl
dec
cmp
dec
inc
mov
push
xchg
sarb
push
and
pop
jno
in
movsb
jmp
shll
iret
scas
into
stc
and
inc
dec
outsb
lds
pusha
addr16
aad
cmpsl
out
xor
jmp
dec
imul
pop
mov
mov
pushf
into
idiv
or
ficomps
inc
popl
adc
outsb
pop
dec
popf
push
loope
pusha
add
cs
jo
into
aad
hlt
xchg
mov
pop
fsubrl
test
sti
mov
sub
dec
pop
jp
repnz
data16
add
and
loope
and
in
xor
aaa
out
inc
cmp
jl
xchg
mov
clc
or
add
scas
inc
or
push
mov
mov
sbb
nop
loop
jo
mov
sbb
aas
push
andl
pop
data16
imull
sub
cmc
and
out
inc
fiadds
cmp
fidivrl
xchg
or
mov
fwait
addb
mov
mov
ljmp
mov
mov
loopne
mov
pop
pop
in
fs
lahf
shl
cmp
nop
scas
ljmp
lret
bound
mov
insb
lea
xor
mov
or
je
adc
cltd
cltd
shll
jno
or
scas
roll
pop
fsubrl
repnz
das
pop
fwait
add
push
call
dec
pop
mov
cmp
dec
sub
mov
in
mov
inc
in
outsb
hlt
mov
bound
rclb
outsl
add
and
stos
mov
push
sbb
dec
in
sbb
xor
aam
pop
lods
aam
and
test
xrelease
jmp
pop
lock
cmp
and
or
cmpsb
push
in
rcll
movsb
cld
aas
jmp
jl
inc
pusha
mov
out
inc
push
adc
loop
lea
cmp
sbb
jb
lahf
lcall
xchg
pushf
mov
pop
sub
xor
les
lods
lods
jge
jns
shrl
addr16
pop
lret
in
sub
test
push
mov
xor
jp
hlt
inc
rclb
mov
icebp
decb
mov
jmp
adc
inc
movsl
ja
mov
std
lcall
pop
test
aam
sub
mov
pop
mov
out
push
shlb
mov
jecxz
dec
jae
nop
pushf
mov
std
mov
push
in
or
rcl
scas
clc
push
iret
mov
imul
in
and
fistpl
inc
sub
aas
dec
jle
clc
push
lods
pop
push
lods
pop
arpl
scas
push
xchg
movsb
pusha
lcall
jg
cmp
cmpsl
movsb
jge
mov
and
push
insl
in
adc
out
sub
dec
lods
xor
int3
es
fcoml
xchg
cmpsl
es
xor
shl
shrl
mov
lcall
push
divb
out
jmp
ret
cwtl
inc
test
repz
aad
test
and
cmp
add
pop
jg
mov
dec
popf
push
call
mov
inc
leave
pop
imul
mov
lcall
nop
jno
in
adc
push
sti
lds
push
or
lahf
lock
pop
xor
cmp
shl
sti
or
arpl
lock
cld
cmp
inc
sub
jmp
jle
jns
pop
dec
in
outsb
clc
mov
push
or
adc
sbb
repz
and
test
mov
lahf
out
mov
sub
lret
mov
sbb
xor
int
inc
aam
and
adc
mov
ret
jae
cmp
pop
lods
cmp
adc
or
inc
add
add
movsb
cmp
jns
inc
imul
out
dec
inc
mov
add
pop
fs
repnz
xor
mov
adc
pop
repnz
push
jo
xor
shll
mov
sub
std
and
sub
mov
ljmp
push
fs
iret
jmp
dec
pop
cli
es
adc
adc
arpl
xchg
cs
inc
ds
add
add
test
mov
xchg
dec
pop
mov
dec
faddp
pop
ret
pop
adc
push
js
lock
fs
jne
and
lea
popf
xchg
push
bound
xor
inc
sti
mov
loopne
and
or
pop
orb
lea
in
mov
es
pop
xchg
mov
or
xor
out
int3
sub
js
mov
or
xchg
out
xchg
sbb
push
mov
call
and
daa
mov
lret
sti
test
in
inc
popa
or
and
loopne
jge
sub
sbb
scas
shr
icebp
xor
xchg
jg
jns
mov
mov
dec
inc
in
jg
aam
adc
sub
nop
insl
or
insb
jo
mov
sub
sbb
fwait
iret
cmp
dec
mov
xchg
cltd
sbb
lahf
mov
inc
inc
xor
das
cmp
xor
pop
push
and
aad
mov
mov
jns
pusha
mov
arpl
das
push
pusha
or
arpl
loop
lcall
inc
add
fisttpll
inc
dec
mov
mov
adc
insb
jo
xchg
in
mov
adc
and
dec
call
xor
mov
inc
fstpt
mov
pop
std
adc
mov
inc
into
cmp
sar
addb
outsb
scas
pop
repz
movl
dec
notb
stos
fldl
xlat
rcrl
out
sbb
int
dec
pop
out
or
and
inc
pop
jp
mov
arpl
insl
adc
push
call
xchg
push
call
dec
sub
inc
scas
aas
push
insb
xorl
cmp
mov
jecxz
bound
and
sahf
ret
sbb
push
decl
inc
xchg
mov
adc
and
dec
mov
out
mov
cltd
sbb
adc
cmc
cmpl
cwtl
cmpsb
rorl
and
int3
adc
std
test
sub
repnz
je
shll
ror
pop
imul
aaa
pop
push
ss
sbbb
jge
cltd
in
sub
push
mov
pop
pop
ret
out
sub
test
fstpl
adc
inc
push
jne
in
xchg
push
cmpsl
add
jmp
inc
mov
int
xchg
ret
enter
filds
ljmp
cmpsl
mov
adc
imul
scas
lret
sbb
pushf
xchg
rcrl
loope
icebp
pop
sbb
in
jo
and
mov
inc
je
nop
mov
add
jg
adc
loopne
push
add
or
data16
xchg
fcoml
sahf
rcr
sbb
add
jg
jnp
lcall
adc
stc
push
xor
cltd
pop
lcall
loopne
mov
xor
adc
gs
imul
sbb
mov
outsb
pop
sub
fldpi
in
push
jle
mov
jns
add
movsl
out
mov
push
sub
hlt
fdivl
add
inc
out
scas
je
mov
mov
dec
jmp
sub
dec
xchg
cmp
add
popf
int3
mov
ret
pop
xchg
dec
inc
lret
aaa
dec
jnp
jb
loope
cmc
insl
push
adc
jbe
push
xor
mov
mov
xchg
or
lods
mov
in
adc
inc
jo
mov
sub
sub
xor
ret
outsl
mov
add
mov
lea
mov
or
xor
mov
mov
pause
out
test
movsl
mov
bound
je
push
sub
cmp
insb
test
or
sbb
in
loopne
out
add
sti
incl
sbb
sbb
mov
clc
xor
pop
repz
mov
cmpsl
out
mov
jae
mov
into
dec
xchg
dec
inc
push
fsubr
or
fwait
mov
dec
repz
cmpb
aas
add
enter
mov
cld
xchg
or
outsb
sbb
je
mov
mov
cmp
inc
es
out
aad
cmp
idivl
leave
dec
in
outsb
hlt
mov
push
or
jo
jl
repz
outsb
ret
push
shlb
out
in
cli
out
xlat
xor
xchg
push
sbb
xor
in
adc
faddl
pop
aam
repz
mov
jge
test
test
cmp
test
or
popf
or
ja
movsb
lea
movsb
mov
pushl
addr16
out
push
cmp
xchg
dec
inc
or
and
push
insl
xchg
lods
mov
jno
aaa
std
mov
dec
insl
jle
inc
ss
mov
dec
jle
mov
test
imul
lods
ja
inc
fcmovnbe
dec
pop
scas
push
popa
xlat
push
call
inc
mov
jb
dec
inc
mov
or
insl
xchg
or
jno
cltd
xor
xor
mov
cld
es
pop
insl
adc
fstps
arpl
mov
push
test
aad
mov
gs
loopne
int3
out
jns
cmp
sub
jp
std
mov
xchg
shll
fnstcw
jno
ss
mov
xchg
push
fnstsw
push
out
pop
les
test
inc
mov
cmp
nop
inc
push
xchg
shll
scas
jl
jno
mov
testb
and
mov
stc
mov
andb
or
lea
xor
mov
loop
or
and
mov
mov
jne
sub
int3
sbb
jmp
lcall
std
dec
mov
fcoms
out
jns
dec
inc
stos
leave
cld
or
jne
mov
shrb
ret
lods
mov
cmc
sub
jno
adc
out
add
inc
push
mull
nop
or
repz
sbb
sbb
push
or
sbb
push
stos
shrl
mov
xor
sbb
movsb
popa
sahf
inc
adc
adc
mov
pop
inc
test
mov
sbb
push
sub
pop
ds
jl
stos
push
lock
push
pop
sub
xor
or
sbb
push
adc
xlat
jl
sti
push
fisttps
cmp
test
sub
add
add
xor
push
sub
aaa
lea
jns
inc
push
call
out
sbb
cmp
xchg
dec
inc
sbbb
and
stos
ret
repnz
repnz
loop
sbb
dec
frstor
outsb
pop
cmp
sahf
pop
sbb
loopne
jge
jmp
aad
inc
pop
jo
cmpsb
mov
sub
mov
clc
mov
pop
mov
sbbl
mov
ficoml
mov
xchg
ja
adc
decb
imul
fisubrl
mov
fldl
inc
sub
lock
in
decb
movsl
mov
arpl
mov
sbb
cltd
inc
es
bound
pop
jp
lods
std
jl
jmp
add
das
pop
sahf
xor
imul
sbb
dec
gs
test
or
xchg
loopne
lahf
js,pn
mov
shl
lret
incb
aaa
dec
sub
cmp
out
inc
jo
test
addr16
cld
and
cmp
lods
shl
sub
rolb
and
cmp
xchg
mov
test
addr16
mov
xchg
mov
lea
xor
inc
jbe
mov
out
sbb
push
call
sub
scas
add
jp
loope
dec
leave
hlt
aam
dec
inc
push
jno
jmp
inc
js
cmpsl
lret
cld
mov
mov
inc
push
out
and
push
fcomps
out
add
add
pop
jl
sbb
fwait
aaa
xchg
push
icebp
adc
cmp
in
clc
das
test
cli
shlb
ja
push
sub
lret
mov
pop
notb
sub
enter
das
lret
mov
dec
repz
cmpsl
cmp
aam
scas
lds
mov
lds
jmp
xchg
adc
popa
or
mov
and
cmc
es
inc
pop
mov
std
test
xchg
imul
dec
lret
es
pop
jmp
aaa
nop
ja
cld
lea
mov
dec
andb
mov
mov
fs
xchg
xchg
push
ds
add
mulb
cmpsl
movsb
inc
loopne
mov
dec
push
adc
inc
enter
rorb
outsb
scas
xchg
dec
inc
jne
test
out
inc
insb
mov
outsl
xlat
roll
jle
ret
mov
push
lea
imul
gs
fcompl
das
dec
push
outsb
sub
xchg
dec
inc
xor
mov
inc
popa
and
push
dec
sti
jp
sti
jp
and
popa
mov
icebp
or
and
or
mov
cmp
and
add
adc
cmpsb
test
or
push
subb
adc
jb
xor
outsb
pop
sub
out
sahf
pusha
add
sbb
mov
jp
iret
imul
inc
xchg
pusha
jg
ret
lcall
aaa
iret
in
repz
outsb
pop
sub
mov
add
stos
fiaddl
sub
sahf
ret
imulb
test
push
dec
shl
dec
stos
mov
xor
orl
xchg
sbb
loope
adc
dec
loope
mov
fisubrs
cwtl
push
js
mul
xchg
loope
sahf
push
and
xor
lods
shl
repz
sub
pop
out
lock
imul
xor
or
aas
arpl
jns
call
xchg
cltd
cmp
sbbb
popa
mov
add
scas
and
sbb
sbbl
lds
outsb
lds
sti
push
repz
and
repnz
xchg
enter
in
xlat
divb
xchg
inc
dec
jbe
in
pop
jno
pop
jne
push
outsl
push
sbb
bound
xor
lea
into
push
xchg
mov
js
add
push
pop
inc
xchg
add
gs
xlat
std
and
mov
out
mov
jmp
mov
out
decl
int
aad
dec
inc
dec
jb
lahf
shr
sbb
push
sbb
fsub
shlb
push
dec
sbb
repnz
add
inc
push
rorb
add
pop
lret
fdiv
or
push
jae
enter
xchg
mov
lcall
lcall
lods
jb
loopne
and
adc
push
test
sbb
scas
push
jecxz
nop
mov
inc
mov
xor
popa
js
or
xchg
sbb
fs
fnsave
inc
cld
clc
mov
xorb
rep
orb
movsl
out
sbb
xor
pop
in
std
je
push
dec
mov
call
mov
push
inc
jo
jo
xchg
inc
stos
subb
pxor
lcall
push
loop
add
jns
xor
xor
out
mov
enter
fsubp
jbe
and
dec
out
sbb
inc
push
in
leave
dec
lcall
mov
jecxz
pop
subl
jo
inc
push
lcall
cld
cmp
cmpsl
sti
jp
add
pop
sahf
mov
ret
dec
jnp
movsl
mov
cwtl
xchg
dec
aam
dec
inc
iret
arpl
xchg
lods
aam
loope
in
sti
rcrl
iret
fisubs
repz
iret
and
dec
ja
fcoml
mov
jns
cli
jp
pushf
jle
das
mov
dec
mov
dec
and
cli
dec
test
loop
loope
mov
lret
mov
std
mov
in
push
and
push
fmul
cwtl
mov
push
jae
sti
xorps
add
xchg
pusha
repz
inc
xor
jo
dec
and
push
popa
fldl
bound
mov
xchg
mov
fsubl
sub
push
push
dec
out
mov
dec
jge
shr
std
sbb
add
sti
call
scas
in
fistpl
jbe
shl
adc
jmp
in
outsb
cmpsb
mov
test
or
in
ja
mov
pop
in
aaa
cmpsl
jbe
fidivrs
out
pop
and
mov
mov
mov
mov
ja
mov
mov
lahf
lret
fldcw
mov
mov
jmp
test
scas
ret
add
cmc
fwait
mov
push
inc
insb
popf
movsb
add
and
fwait
dec
inc
sub
lahf
scas
fimull
push
xorb
or
sub
mov
in
cs
das
mov
push
clc
outsb
mov
mov
xchg
addr16
cmp
mov
and
lea
fwait
dec
inc
adc
and
je
mov
test
lret
loope
in
lret
pusha
addr16
in
in
adc
lea
mov
mov
jp
movsb
inc
inc
cwtl
sub
adc
mov
and
xchg
mov
pusha
outsl
mov
fcoml
mov
or
xor
mov
test
add
bound
fnstsw
push
lret
add
push
sub
stos
mov
mov
adc
repnz
xor
test
sbbb
and
rorb
fsubrp
and
test
orb
mov
lcall
xor
adc
or
sbb
cs
jno
xchg
mov
nop
stos
adc
loop
popf
jno
xor
xor
lods
pusha
add
inc
lret
xor
xchg
dec
repnz
ds
in
divl
nop
scas
int
jnp
mov
or
out
fcomi
xchg
stc
mov
sub
pop
repz
xor
push
mov
aad
cmp
in
negb
fcmove
fs
xor
jl
push
in
ret
push
inc
pop
mov
jo
mov
jp
sub
mov
and
inc
outsl
mov
outsb
pop
shlb
in
mov
inc
and
inc
loope
aad
mov
repnz
dec
in
outsb
cmc
mov
pusha
clc
daa
int3
push
pop
std
icebp
addb
repz
das
inc
pop
loop
scas
in
push
dec
fldl
into
sbb
xor
test
sbb
push
sbb
pusha
or
pop
test
enter
push
or
call
xchg
jnp
sub
in
or
fcomip
and
adc
mov
lret
ret
sbb
inc
arpl
popf
sbbb
adc
lods
fs
fnsave
xchg
cmp
popa
out
xor
mov
aad
sar
adc
fs
lret
dec
xchg
scas
dec
sub
cmp
and
pop
dec
xchg
mov
xchg
js
das
cmpsl
inc
pop
ljmp
sub
xchg
fmuls
inc
pushf
insb
xchg
inc
push
jne
mov
pop
in
xchg
dec
insl
sbb
mov
sbb
push
push
inc
xchg
adc
or
nop
adc
xadd
call
inc
xor
push
pop
push
inc
push
mov
pop
hlt
and
lock
sub
into
test
add
sar
cmpsl
adc
mov
push
mov
sbb
jle
cmpsb
mov
dec
inc
sbb
jmp
adc
pusha
jle
cmpsl
movsl
mov
js
in
aas
ss
stos
icebp
dec
cld
xorl
and
mov
cmp
xchg
mov
in
pop
fisubrs
cmpsl
stos
cmp
fldl
das
inc
jl
fcoml
sub
into
mov
fdivrp
sbb
mov
int
sub
into
add
mov
jge
loopne
sub
fdivp
push
nop
adc
gs
adc
or
int
sub
pushf
mov
pop
sub
xor
pop
outsl
fdivr
jge
jns
rcr
inc
lret
aam
push
ret
add
jecxz
and
test
mov
aaa
add
sahf
and
xchg
push
cmpsl
inc
inc
pushf
bound
in
xchg
push
enter
fisttps
adc
mov
shr
and
js
aam
xor
jae
xchg
scas
mov
lods
int3
fists
cmp
jb
adc
pusha
jg
cmp
mov
push
decb
cmp
add
stos
nop
and
and
push
ss
xchg
rcr
das
test
fsubs
out
lock
mov
int3
clc
in
cmc
into
mov
pop
xchg
scas
mov
mov
pop
aas
inc
mov
stos
sub
pop
add
mov
cli
cmp
lahf
xor
mov
mov
repz
pusha
dec
loope
fnstsw
push
fdivs
jmp
dec
inc
and
sub
pop
pop
jp
mov
jge
pop
fs
add
mull
dec
jne
out
or
jecxz
scas
jecxz
das
ficompl
rcll
testl
ja
lea
dec
dec
pop
mov
scas
nop
dec
jae
or
fbld
jl
push
sti
mov
and
adc
stos
cli
adc
iret
adc
pop
mov
gs
xchg
add
leave
mov
jns
xor
add
xor
sub
arpl
add
sub
lock
and
inc
outsl
xchg
cmpsl
rolb
xor
fwait
in
xchg
idivl
dec
push
das
mov
lahf
jmp
jb
adc
add
xchg
mov
mov
push
xor
int3
xor
mov
or
je
add
mov
or
sbb
push
adc
nop
and
mov
rorl
imul
inc
mov
mov
push
cmp
sub
call
inc
pop
inc
outsl
sub
sti
loopne
cmc
pop
std
and
adc
jno
xlat
add
cmp
popf
mov
mov
jbe
jecxz
scas
jb
in
add
push
or
jne
mov
sahf
lods
sar
aaa
fisttps
xor
popf
mov
push
sbb
cltd
jmp
add
xor
insb
jns
mov
jnp
int
out
aam
sub
mov
rorb
in
and
fcoms
outsl
outsb
rcl
imul
push
sbb
jb
out
test
sti
ja
sub
jge
fdivr
add
jp
mov
adc
mov
inc
jbe
popf
shl
test
outsl
mov
out
pop
jmp
mov
movd
js
stos
test
jecxz
jb
push
int3
xchg
daa
mov
mov
cmc
cld
add
fcomp
add
popf
inc
lret
dec
fucomp
shlb
mov
hlt
inc
iret
push
inc
sar
and
mov
add
jg
dec
imul
xor
test
dec
inc
jl
mov
xor
mov
sbb
pop
clc
out
jmp
imul
inc
or
in
and
mov
jbe
lods
or
dec
mov
fisttpll
inc
mov
xor
enter
dec
pop
jbe
jo
inc
and
jmp
add
leave
mov
jnp
jmp
adc
push
ja
jo
sub
aam
and
div
cmp
fstpt
aad
mov
mov
mov
addr16
fsubp
test
stc
stos
ljmp
jno
fsubr
shlb
pop
insb
fidivl
jg
add
xchg
fildl
das
push
jno
inc
xchg
inc
imul
mov
mov
push
xchg
popa
sub
cmpb
mov
scas
jge
insl
and
pop
inc
ss
ds
mov
in
fmuls
jnp
mov
add
out
and
inc
test
lea
add
les
test
inc
push
mov
or
jmp
sbb
stc
add
call
lods
xchg
push
call
jbe
repnz
sub
add
sti
call
icebp
push
sub
int
cld
sub
ja
mov
fcomi
jg
aas
addr16
pop
mov
xchg
roll
xchg
dec
xor
iret
jecxz
std
and
std
inc
add
push
mov
stos
movb
pop
xchg
mov
sub
cltd
mov
xchg
lret
cli
mov
dec
push
push
lock
movsl
cmp
int3
and
insb
popf
repnz
lea
movsb
outsl
lods
lods
pushf
or
nop
sub
adcl
repz
mov
jge
xor
fdivrl
xchg
cmp
mov
and
inc
dec
dec
int
fnstenv
jbe
lock
sbb
mov
mov
test
insl
adc
xchg
bound
push
add
cmp
and
jno
mov
fnstsw
shrb
sub
dec
addr16
int3
leave
fisttpll
sub
jecxz
push
cmp
mov
cmp
out
or
cmp
or
stos
push
sub
dec
mov
sarb
and
mov
push
das
mov
das
inc
or
adc
lret
jnp
dec
cmp
dec
pop
daa
aam
std
ss
aaa
mov
lea
push
aaa
dec
pop
mov
jnp
int
push
inc
imul
out
add
sbb
ret
sub
mov
cmp
addr16
add
xlat
fcoms
lods
mov
inc
pushf
mov
xchg
pop
xchg
inc
aam
call
sub
and
or
mov
fcomip
cld
sbb
rclb
daa
lock
rorb
pop
aas
out
dec
jg,pn
add
jns
xchg
add
orl
jg
fdivrp
pop
cmovle
mov
dec
incb
in
mov
push
or
inc
es
in
aad
loope
clc
jns
or
divl
cmp
jp
rolb
fs
in
imul
roll
cmpsb
mov
push
sbb
xor
les
and
adc
and
fwait
jns
fdivr
enter
xchg
popf
nop
and
or
and
xchg
dec
xchg
sbb
mov
jmp
cmp
inc
imul
pop
sub
inc
leave
in
push
andl
or
mov
pop
cltd
hlt
mov
dec
push
scas
arpl
mov
sbb
mov
stos
mov
pop
dec
data16
arpl
adc
dec
mov
ret
ja
or
enter
sbbl
lret
xor
outsl
jl
jge
sbb
adc
dec
dec
push
and
aam
push
movl
clc
xchg
xchg
push
test
popf
xchg
inc
loope
scas
add
dec
je
xchg
in
xor
xchg
push
xchg
lods
add
and
lret
clc
or
mov
enter
aad
push
call
cmp
lods
add
idivl
lret
inc
sub
aad
cmp
jns
pop
dec
in
outsb
icebp
mov
outsb
mov
jl
jo
in
repz
and
fiaddl
scas
in
outsl
sbb
mov
insb
mov
mov
addl
xchg
int
jno
pusha
and
dec
xlat
pop
outsb
setae
cwtl
je,pt
cmp
test
cmp
sub
jmp
rclb
pop
movsb
movsb
mov
jno
fs
out
push
call
cli
sub
xchg
lahf
leave
jecxz
or
inc
pop
xchg
lret
out
add
fdivrp
stos
enter
dec
fdivr
cmp
xchg
mov
lret
adc
rclb
pop
mov
popa
mov
popa
mov
test
sbbb
aas
cltd
cmpsb
jae
leave
sub
andl
xorl
mov
sarl
dec
fsubr
aam
xchg
push
movsl
mov
cld
pop
cltd
sbb
cmc
cld
dec
push
xchg
mov
sbb
lret
mov
test
xor
mov
push
addb
in
ds
mov
inc
or
aam
mov
add
jl
ret
repnz
lock
cs
push
inc
shlb
xchg
dec
mov
push
movsb
jbe
mov
xor
fsubs
inc
mov
pop
cmp
sahf
mov
pcmpeqd
jno
mov
xor
mov
decb
cmp
or
sub
push
inc
jnp
xor
shr
sti
adc
inc
push
xchg
enter
xor
int
xorl
mov
cmp
subb
sbb
xchg
in
adc
arpl
cmp
and
or
psubsb
call
push
push
into
dec
int
push
inc
push
or
insl
sbb
xor
push
out
mov
push
push
xchg
nop
sahf
mov
movsl
xor
pop
add
xor
pop
popf
imul
sti
sub
mov
xchg
pop
rol
jae
int3
cltd
mov
adc
test
icebp
fsubl
js
jmp
enter
lahf
je
loop,pt
daa
mov
lods
pop
push
mov
pop
dec
jl
and
pop
xchg
clc
jnp
or
subl
rcrb
jo
inc
clc
add
inc
std
adc
fs
pop
scas
dec
xor
dec
rcr
jmp
add
gs
sbb
daa
mov
rcl
repz
mov
fnstenv
aam
fdivrl
dec
movsl
sbb
out
dec
cmc
cmp
les
jno
into
xor
aas
pusha
xchg
ret
loop
sti
and
inc
jmp
gs
out
jb
add
dec
movsl
jecxz
repz
fbld
jo
xchg
fdivrl
mov
jmp
xchg
jmp
lret
mov
xor
fildl
inc
sbb
fwait
xchg
iret
mov
jbe
frstor
lods
pop
xchg
jae
xchg
or
sti
sub
push
mov
int
lret
sbb
xchg
es
and
xor
cwtl
jge
pop
jnp
negb
gs
cmp
inc
adc
in
add
loop
sub
push
stos
or
cltd
psllq
pop
out
xlat
cmp
call
push
sti
stc
lret
aad
cli
test
jmp
ret
add
lahf
js
lock
xchg
xorw
sbb
jbe
pop
mov
adc
aad
cld
sub
push
fldl
pop
sti
and
or
psubsb
push
call
inc
push
call
jmp
psubsb
inc
inc
push
call
test
push
call
in
fcmovnbe
stos
jns
aad
push
inc
into
pop
jns
mov
daa
xor
mov
push
mov
push
test
xlat
repz
int3
xchg
mov
into
push
daa
xchg
lds
loope
cmc
pop
adc
mov
xor
and
or
js
lods
fcoms
inc
mov
pop
cmp
shr
loope
fcomip
les
loop
mov
enter
push
rcrl
out
dec
push
sub
push
clc
push
sub
mov
negl
adc
jno
je
mov
sub
dec
outsl
es
fnstsw
outsl
nop
cmp
jne
jg
fucom
adc
pop
test
ret
arpl
addr16
jbe
sub
or
leave
adc
je
add
sbb
jecxz
adc
shlb
inc
jmp
nop
scas
jmp
shll
xor
iret
in
mov
mov
sub
jbe
dec
jne
repnz
repnz
fnsave
mov
repnz
fwait
repz
or
daa
insb
xchg
mov
pop
sbb
push
roll
bound
push
dec
cltd
das
xor
sub
adc
inc
pop
js
xlat
clc
sub
pusha
mov
push
jbe
jg
mov
scas
leave
adc
decl
sub
cmp
std
ret
push
mov
adc
sahf
hlt
dec
mov
mov
or
mull
jecxz,pn
and
shr
sub
js
fidivl
dec
or
push
sbb
jae
dec
jae
mov
les
pause
fwait
idivl
std
mov
dec
push
xchg
shl
inc
lock
push
mov
aam
into
mov
fwait
xor
or
ss
in
loop
js
js
loopne
inc
and
jmp
insl
out
in
scas
add
scas
repnz
and
rcll
std
dec
sub
sbb
hlt
movsl
mov
in
es
jo
ret
arpl
xor
dec
imul
add
mov
sub
push
add
scas
shl
notb
aas
jge
pushf
lret
stos
xor
xchg
push
pop
jne
in
jae
test
mov
xlat
jl
aas
mov
adc
mov
out
push
xchg
cmpsl
ret
pop
dec
repnz
push
cmp
mov
push
mov
add
cmc
xor
mov
pop
pusha
and
jbe
mov
mov
pop
jb
je
call
adc
repnz
into
fldcw
pushf
mulb
push
andb
push
push
scas
bound
cmpb
imul
pop
mov
fcompl
jmp
add
hlt
repnz
sahf
hlt
jnp
popf
mov
jmp
movsb
xor
sbb
cmc
or
scas
ds
xor
dec
jnp
inc
xchg
leave
rcl
jne
rcr
movsl
mov
aas
xchg
shrl
imul
adc
mov
lret
add
xchg
jmp
mov
push
shlb
inc
lret
sti
push
xor
dec
pop
xorb
jns
fstp
xor
fcompl
nop
test
test
es
repz
mov
jmp
in
inc
test
push
data16
mov
mov
lock
cmpb
ret
xor
or
mov
push
js
lds
adc
push
out
aam
push
iret
sti
push
pop
and
mov
mov
push
sahf
pop
movsl
int3
xchg
mov
adc
pop
or
push
test
xchg
lods
cli
sbb
mov
lds
mov
and
ss
inc
loop
push
cs
jge
cmpsl
fistps
daa
cmp
out
lods
test
push
sub
mov
push
mov
ss
outsb
int3
jg
dec
cmpsl
shl
cmpsl
shl
xor
pop
mov
pop
outsl
xor
mov
push
push
push
mov
push
sahf
mov
std
and
or
iret
pushf
insl
pushf
sbb
or
test
sbb
mov
and
andb
push
fmull
mov
xorl
in
cmp
pop
repz
cmp
jle
scas
hlt
rdpmc
pop
xchg
push
ljmp
mov
mov
lods
sti
cmp
lret
xchg
popf
in
mov
mov
inc
andl
mov
sub
jnp
dec
repnz
push
jle
stos
fcomip
test
mov
sbb
idiv
jle
mov
adcl
and
sub
movsb
mov
aaa
push
inc
jne
sbb
push
xchg
mov
and
pop
incb
arpl
xchg
mov
enter
xlat
repz
xlat
or
es
loop
pop
lcall
popa
adc
mov
push
inc
jae
scas
adc
xchg
mov
mov
test
dec
cmpsl
cmp
sbb
int3
in
in
or
jne
movsb
jns
push
inc
stos
into
in
or
jg
mov
adc
sub
cmp
dec
jnp
shr
adc
addr16
shll
fisubl
xor
cmp
inc
fucomi
imul
lds
or
jecxz
sbb
data16
mov
mov
std
pop
push
jle
xor
mov
xor
pop
in
fisubs
mov
mov
sahf
shr
sub
cmpsl
add
cli
inc
push
fistpl
inc
cld
rolb
pop
xlat
jl
cld
inc
sub
xor
imul
fimull
xchg
cmove
jae
fidivrs
and
test
push
mov
sub
dec
push
mov
push
cli
fnstsw
lock
adc
cmp
push
inc
shll
insb
mov
pop
testb
cmp
xor
lock
int3
or
xor
jmp
inc
test
inc
insb
xchg
popf
ret
sbb
inc
and
cltd
xchg
sub
pop
cwtl
jnp
dec
push
stos
cld
adc
repnz
iret
lock
iret
and
outsl
xchg
call
iret
mov
mov
jle
inc
call
mov
and
push
mov
cltd
sar
arpl
mov
dec
xor
sbb
fnstsw
and
fidivrl
sub
push
inc
clc
or
insl
int3
mov
or
arpl
and
push
js
and
cli
jmp
outsb
push
pop
je
mov
push
xor
sub
mov
push
imul
dec
push
test
inc
xor
cwtl
icebp
mov
xchg
ror
mov
mov
dec
xchg
pop
repz
enter
test
test
leave
gs
jle
dec
addl
inc
jae
ljmp
push
jnp
add
cmp
push
inc
jmp
mov
and
mov
clc
jmp
int
inc
push
and
mov
adcl
addr16
push
mov
fs
mov
pop
push
cmp
lret
mov
cmpsl
jl
adc
push
cmp
out
rcrb
mov
pop
adc
mov
nop
xor
mov
xchg
test
mov
pop
sub
sahf
dec
in
push
pop
inc
dec
inc
dec
imul
mov
ljmp
outsl
push
repz
sub
cmpsb
repz
test
arpl
ss
jmp
ja
jecxz
pop
sbb
in
les
xchg
xor
test
push
in
xchg
pop
or
push
call
aaa
fnstenv
ret
dec
cmp
popa
mov
cmpsl
int3
out
sub
pop
mov
inc
addr16
gs
je
xor
fdivp
es
add
sub
lcall
lods
punpckhbw
lods
add
decl
and
stos
jb
push
inc
in
icebp
adc
push
jno
mov
andb
pop
jno
push
push
cli
xchg
jge
sub
insl
dec
adc
jnp
sub
sbb
call
test
daa
daa
call
sbbl
or
repz
pop
sbb
fsubrp
ret
ss
loop
loopne
stos
add
sub
sub
push
inc
aad
mov
repnz
jnp
notb
xchg
pusha
rcr
iret
fidivs
dec
xchg
cmc
xchg
loop
inc
xor
lea
or
insb
dec
dec
cmp
jmp
push
lahf
push
xor
and
shlb
fldenv
lods
fsubr
into
rcr
decl
scas
arpl
mov
jmp
xchg
jno
xchg
push
dec
pop
lods
inc
add
ja
lock
dec
sti
pop
and
shl
xor
or
cli
xchg
rclb
inc
mov
xor
jle
icebp
push
xchg
in
mov
mov
xchg
loop
jl
aas
pushf
fdiv
and
aas
lock
lock
fmull
imull
or
imul
push
sti
push
popl
outsl
pop
nop
xor
pop
loopne
in
cmp
cmp
mov
xchg
ret
out
loope
cmc
mov
dec
outsl
dec
loopne
push
dec
imul
dec
sbb
mov
adc
jecxz
or
dec
pop
jl
fwait
mov
mov
jmp
repnz
imul
inc
inc
fcmovnbe
jmp
xor
pop
js
enter
sub
pop
fdivrl
add
mov
aam
mov
dec
dec
adc
jge
xchg
out
cmpb
xchg
ds
pushf
push
popf
jle
aam
mov
in
loope
movsb
adc
das
mov
sbb
push
cmpb
push
mov
loope
ficoms
sbb
mov
push
popaw
push
xor
mov
xor
div
dec
xor
sbbb
test
aam
push
lds
inc
notb
lock
cmc
inc
jmp
lock
insb
nop
mov
sbb
pop
pop
xorb
and
cmp
jb
sub
fnsave
sbb
dec
dec
jb
mov
mov
outsl
mov
nop
repz
add
dec
cmp
push
jno
leave
idivb
add
fs
psubsb
js
loope
mov
cmp
inc
mov
in
pop
and
iret
cld
int3
jmp
lcall
test
in
mov
pop
stos
jecxz
adc
fisttpll
add
pushl
stos
or
push
cmp
dec
and
pop
cmpsb
push
insb
jns
flds
outsb
mov
arpl
adc
sub
in
pop
and
loopne
cmp
adc
pop
inc
jge
jecxz
test
or
mov
addl
xchg
or
and
cmp
pop
dec
or
into
xchg
gs
mov
cmp
cmp
push
sub
loope
or
lods
repz
out
fistpll
add
jno
imul
pop
xchg
fdivl
dec
int3
fmulp
aas
sub
mov
pop
add
xlat
shrb
int
js
in
clc
dec
inc
xchg
and
aam
pop
rolb
fbld
adc
test
inc
push
roll
push
inc
inc
out
mov
xchg
push
inc
mov
cld
pop
mov
js
or
enter
fisttps
sbb
cmp
dec
jbe
jecxz
mov
push
xchg
or
dec
mov
mov
mov
pop
pop
ss
jmp
lods
std
jge
mov
inc
sahf
and
aam
push
lret
add
in
fisubrs
test
add
adc
mov
mov
xchg
test
in
fdivr
inc
test
enter
mov
rorb
daa
adc
cmp
decl
jl
loopne
push
inc
ret
pop
nop
mov
loopne
imul
xchg
out
push
mov
lods
vunpckhps
push
call
scas
or
loopne
aas
pop
ret
popf
add
pushf
mov
xlat
stos
neg
jns
data16
repnz
inc
rcr
pop
pushl
xchg
sub
jl
jg
imulb
mov
cli
pop
sti
adc
daa
jo
popf
xor
cld
inc
dec
clc
mov
insb
pop
pop
cwtl
dec
cmpsl
shrb
xchg
mov
adc
push
sbb
xchg
mov
vucomiss
inc
jl
or
jg
mov
ret
out
mov
or
mov
mov
mov
jle
xor
sbb
stos
push
pop
xor
stc
call
das
cmp
cs
jne
lods
mov
mov
cltd
outsl
scas
aas
push
inc
cmc
mov
sbb
repz
xor
mov
test
push
jl
mov
xor
mov
add
shr
lret
cmp
mov
push
jnp
jmp
sub
xchg
sbb
ljmp
xor
popf
insl
add
mov
test
test
cmp
or
inc
jb
and
mov
testb
test
loopne
insl
pop
jg
negb
xor
lea
in
dec
and
inc
mov
ss
mov
orb
push
notl
dec
jnp
jmp
xchg
cmpsb
js
in
inc
in
cmp
inc
cmp
out
loopne
ret
pop
imul
or
bound
loope
dec
sbb
movsb
inc
push
inc
adcb
lock
ljmp
fwait
loopne
popf
insl
dec
test
mov
lock
aam
out
mov
repnz
push
mov
sarl
std
aad
lahf
in
push
and
mov
dec
inc
mov
jbe
jl
sti
out
mov
ds
pop
imul
lods
mov
popa
jae
sysenter
jno
lret
loopne
inc
loopne
inc
mov
ljmp
and
add
and
in
adc
icebp
fcompl
loope
mov
gs
push
inc
out
sbbb
jle
rcr
xor
sub
mov
cmp
out
cmp
push
call
fs
std
push
mov
inc
enter
lahf
inc
popf
test
fmuls
icebp
dec
ljmp
repnz
mov
push
int
xor
pop
xor
mov
fcmove
push
sbb
xchg
mov
mov
cmpsl
fildl
inc
xchg
mov
cld
inc
addr16
pop
sub
mov
inc
push
inc
fdivrl
rcr
in
and
jg
fildll
push
lods
mov
or
sub
mov
sbb
lahf
enter
mov
outsb
mov
stos
and
lea
sbb
cli
inc
push
inc
test
pushf
scas
stc
mov
ljmp
enter
xor
lahf
add
xchg
fcomi
sbb
insl
push
movlps
popa
dec
xorl
push
inc
dec
loope
cli
sbb
nop
shl
jbe
jae
test
out
clc
mov
loop
lret
sbb
sub
mov
push
jle
mov
jg
push
xchg
jg
jbe
mov
xchg
inc
push
inc
lds
je
ljmp
pop
jle
das
mov
xor
arpl
test
das
cmpsl
mov
out
or
outsb
jg
shrb
add
in
ret
out
lahf
sub
inc
sti
sbb
mov
dec
jae
mov
xor
inc
dec
popf
dec
jne
fdivrl
jp
and
xchg
lret
scas
pop
mov
jns
jl
ja
jns
sar
and
repz
xor
add
call
push
push
call
xchg
arpl
push
inc
cmpsb
outsl
pushf
scas
mov
pop
ja
lods
out
addb
mov
repz
in
rorb
push
arpl
ljmp
jle
push
lock
jl
xor
pop
sub
jno
inc
mov
aaa
push
out
mov
daa
in
cltd
mov
out
aaa
mov
gs
cmp
iret
ds
aas
lock
test
inc
jl
shl
stc
xor
push
adc
out
mov
scas
inc
popf
mov
insb
or
sbb
adc
fnstsw
stos
addr16
mov
andb
and
jl
adc
inc
sub
stos
js
adc
pop
add
test
scas
jecxz
add
jle
mov
imul
push
outsl
andl
aam
pop
shrl
out
or
pop
inc
push
inc
test
daa
push
pop
cltd
stos
shl
sbb
into
repz
js
scas
mov
out
mov
add
imul
scas
icebp
xchg
pop
cmpsb
mov
sbb
fstpl
ss
inc
pop
add
xchg
push
or
mov
test
jecxz
les
mov
jg
dec
aaa
push
sub
mov
mov
mov
nop
in
loope
mov
and
push
mov
mov
or
sarb
shrb
adc
shrb
lods
jecxz
pminsw
or
cld
or
jmp
sbb
je
mov
xorl
das
dec
lods
ret
addr16
imul
add
call
movsb
popf
mov
add
ljmp
push
inc
adc
and
shl
pop
xor
sub
pop
aad
and
cmpsl
jne
fists
int
mov
fcoms
mov
jne
into
push
add
mov
xchg
mov
dec
adc
adc
pop
pop
sbb
dec
jo
jp
fbstp
xchg
or
hlt
mov
andl
in
and
jge
dec
into
dec
roll
inc
push
insl
jo
mov
or
push
stc
testb
shrl
das
cld
out
jg
addr16
lods
mov
addl
das
jmp
sbb
sbb
mov
push
insl
pop
addb
pop
push
int
mov
lret
adc
ljmp
sahf
dec
andl
sub
xorl
test
dec
iret
inc
push
inc
cmp
and
ja
lods
cmpsl
mov
xchg
or
xchg
xchg
cltd
jmp
dec
jbe
mov
cld
xchg
mov
or
mov
and
imul
mov
dec
pop
insl
jge
scas
jecxz
sub
adc
pop
push
mov
cmp
bound
add
test
cmc
into
mov
call
ds
mov
in
push
jmp
arpl
inc
inc
shl
pop
push
insb
sahf
in
mov
jge
inc
pop
jp
or
mov
outsb
mov
push
orb
cwtl
mov
imul
push
inc
ja
int
xor
scas
aad
negb
mov
push
pop
out
mov
push
out
mov
fadd
fmull
adc
loope
or
jecxz
cmp
xor
js
cmpsl
rcrb
addr16
mov
dec
push
inc
fs
inc
and
adc
push
aad
aaa
scas
lret
jns
or
outsb
lock
popa
jp
xor
in
jo
fucomip
repz
and
pop
and
in
fwait
stos
js
xlat
sub
or
sbb
xor
xchg
jge
in
fmulp
and
xor
clc
psllq
xchg
lahf
jo
mov
dec
pop
cmp
and
or
std
cld
je
lods
movsb
mov
xlat
mov
mov
jae
inc
addr16
push
cmp
dec
and
aad
xchg
mov
dec
in
outsb
lock
imul
adc
mov
call
popf
test
pop
loop
jg
sbb
ficompl
leave
sub
das
lcall
xor
aam
sbb
fadds
pop
pop
add
mov
ss
mov
lahf
and
sub
in
or
out
cmc
mov
subl
test
xchg
sub
arpl
jmp
xor
jecxz
aad
lret
jns
dec
dec
in
outsb
pushl
enter
rcl
in
pushf
and
nop
shll
pop
loop
mov
les
addl
les
outsb
fisubs
dec
add
xchg
cmp
xchg
rcrb
cmp
cmpsl
cmc
sub
loopne
or
sub
adc
mov
inc
movsb
loopne
jmp
fs
loop
in
dec
push
inc
sub
sub
popf
shr
add
repz
push
or
cltd
insb
jne
adc
dec
mov
push
inc
mov
xchg
pop
cld
inc
movsl
sbb
push
adc
and
rorl
aaa
inc
jle
scas
lret
mov
dec
mull
mov
sbb
addl
aad
inc
xchg
add
sub
repnz
jl
mov
icebp
and
cltd
aad
xor
fiadds
push
inc
xchg
daa
xor
jle
mov
add
stc
fwait
cmp
pusha
cmpsl
add
fisttps
inc
mov
xchg
jb
pop
mov
arpl
adc
mov
sbb
insl
cwtl
ret
fdiv
cmp
add
push
fisttpl
frstor
cmpsl
jb
stos
cmp
pop
mov
lds
pop
ds
dec
ret
ret
scas
aas
pop
test
out
sbb
mov
lcall
mov
icebp
jg
pusha
pop
repnz
push
push
xor
jns
xor
int
xchg
sbb
test
xchg
mov
push
ret
ret
notl
pop
mov
jg
sub
out
pop
les
int3
cs
sub
fs
popf
insb
test
scas
cmp
mov
pop
iret
stos
pop
loopne
cmp
xchg
add
jnp
test
pop
test
mov
mov
mov
xchg
push
arpl
adc
sub
inc
rcrb
scas
pop
test
xchg
jno
adc
mov
enter
shlb
mov
enter
in
insb
out
adc
dec
or
adc
jo
xorl
fisubrl
and
sub
adc
js
xchg
add
fwait
or
pop
xchg
or
or
dec
fdivrs
stos
int
mov
jp
rorb
inc
mov
test
setg
or
pop
xchg
mov
test
jae
xchg
ficompl
stos
xchg
roll
movsb
in
data16
xchg
outsb
popf
and
clc
jo
xorl
add
fs
xor
jae
xchg
adc
fists
cmpsl
push
cmc
loop
out
jo
in
jge
je
sub
je
lea
mulb
push
mov
xchg
mov
cld
push
test
jecxz
adc
push
lret
lret
jp
jp
pop
push
xor
daa
pop
ret
ret
pop
repnz
fs
aaa
cmpsl
ret
aad
les
cwtl
decl
loop
fstpt
push
pushf
sti
push
call
xor
jo
je
mov
xchg
jle
xlat
inc
and
sub
jne
mov
xchg
sbb
rclb
xor
jg
mov
push
jecxz
push
in
jbe
push
or
mov
aad
xchg
cmp
cmp
scas
aas
pop
test
sub
dec
aam
shlb
jo
loop
adc
push
jno
aaa
fisttpll
mov
enter
xor
lods
xor
int
movsl
cmp
mov
lods
adc
mov
cmpsb
dec
roll
aad
xor
aas
mov
mov
fldl
push
cmp
xor
dec
fnstcw
push
xor
cmp
push
cld
adc
fs
popf
insb
lahf
cmpsb
xor
clc
outsb
or
sbb
fisttpl
sti
jnp
mov
xchg
and
std
insl
hlt
pop
sbb
sbb
aad
xchg
sub
outsl
and
mov
mov
sbb
add
sub
adc
popf
or
movsb
cmp
outsl
push
roll
aad
arpl
imul
scas
lret
mov
stos
pop
mov
jns
pmaxub
lods
or
jl
xchg
cmc
add
in
sbb
or
dec
sub
sbb
mov
lds
mov
mov
mov
dec
mov
mov
mov
stc
jecxz
add
fisttpl
fnstsw
mov
pop
aas
lret
in
sbb
dec
out
adcl
test
xchg
aas
push
lret
pop
ds
mov
mov
and
fs
je
lea
mov
adc
int
and
push
or
lds
xchg
mov
inc
sub
xor
pop
fildl
dec
sub
pop
test
loopne
aad
sub
xor
jno
in
sti
sahf
insl
mov
loope
movsb
cmp
jnp
lcall
loope
jae
inc
lret
lret
push
mov
in
jle
idivl
mov
clc
or
scas
jns
jne
mov
inc
roll
aad
ret
mov
shll
push
jns
cmp
subb
das
dec
mov
push
in
inc
mov
andl
adc
es
and
mov
mov
mov
jbe
cmpl
push
xchg
repz
mov
jne
mov
out
jae
xchg
push
mov
xchg
jle
dec
fstpt
lds
aad
repz
fisttpl
sbb
jo
clc
outsb
or
or
xchg
add
jo
popf
or
aas
scas
lret
bnd
jne
and
pop
enter
inc
lret
lret
fldt
cmp
arpl
xchg
gs
push
mov
xor
aad
sub
je
rcll
jbe
mov
inc
mov
shrl
in
aaa
lods
and
push
out
jbe
cmpl
daa
mov
and
pop
xchg
jb
or
pop
cmp
dec
das
mov
inc
mov
xchg
std
or
loop
lock
bound
loope
adc
orb
decb
jp
bound
icebp
lcall
push
orl
clc
or
insb
jmp
push
in
sbb
scas
adc
shll
xchg
mov
pop
sti
and
adcb
loopne
mov
pop
movsb
jecxz
loopne
jb
mov
mov
dec
fnstcw
enter
outsl
cli
push
cmpsl
aaa
push
mov
shlb
dec
fdivrl
enter
xchg
or
mov
inc
mov
addb
icebp
add
pop
fisttps
push
aam
sub
adc
fs
and
push
mov
es
or
push
jns
jge
cmp
mov
lods
adc
push
ss
push
lds
push
mov
xchg
jb
mov
inc
int3
inc
and
repnz
fs
push
lret
sahf
das
mov
or
adc
pop
cmp
dec
sub
push
sub
sbb
outsb
mov
mov
es
fisttpll
mov
mov
clc
outsb
or
sbb
rcrl
xor
xchg
or
sbb
ljmp
and
inc
lds
iret
sub
mov
inc
mov
cwtl
sbb
ds
addl
repz
out
mov
dec
mov
loop
std
sahf
push
test
push
cli
cld
jnp
mov
orb
sti
push
mov
lods
lret
inc
xchg
rcll
push
xchg
push
fdivl
in
pop
iret
pop
cmp
popa
cli
outsl
lcall
push
xor
jno
push
xor
addr16
cwtl
push
imul
add
stc
imul
repnz
cmpsl
out
adc
cmp
pop
lods
inc
fadds
mov
cmpsl
mov
in
sbb
inc
fimull
ficompl
push
mov
shll
icebp
add
xchg
adc
in
bound
pusha
pop
repnz
or
add
push
aas
into
or
aad
repz
xchg
and
inc
cli
je
lea
scas
aas
pop
test
stos
data16
add
push
xchg
or
sub
dec
frstor
inc
mov
mov
mov
push
lret
in
and
sub
leave
pop
repnz
fs
dec
xlat
inc
and
sbb
sbb
inc
mov
stos
xchg
push
pushf
sti
push
dec
push
mov
scas
lret
mov
stos
into
cmp
mov
shlb
jecxz
jne
jle
outsb
or
push
mov
movsb
ret
ds
imul
cmp
pop
rcrl
test
or
jge
je
jbe
int3
inc
and
test
dec
ret
xchg
dec
rclb
rolb
mov
test
int
addr16
cmp
push
xchg
add
dec
fistpll
outsl
or
scas
dec
jecxz
push
in
nop
or
or
int
and
aaa
push
xchg
add
sahf
je
scas
aas
pop
test
out
xchg
sbbl
aaa
mov
lret
mov
les
mov
and
mov
sub
bswap
dec
frstor
jb
sub
mov
pop
test
fsts
mov
fistpll
imul
jae
in
ret
mov
dec
sub
jg
and
es
xchg
cmp
dec
ret
std
add
or
jno
jnp
in
pop
xchg
and
mov
jmp
push
in
sub
aam
dec
movsb
xor
rorl
movsb
push
rorb
fwait
or
sbb
or
in
fstpl
dec
das
fidivl
ficomps
stos
data16
dec
sub
cmp
aaa
cmpsl
ret
fs
adc
ss
push
test
push
jmp
jp
jp
lret
inc
xlat
mov
mov
sub
aam
roll
pop
xlat
inc
and
js
std
insl
hlt
pop
rcr
push
shlb
xchg
xor
and
mov
jmp
jmp
cmp
mull
icebp
dec
sahf
setg
or
pop
rcr
dec
fdivrl
pop
cmp
adc
mov
gs
jbe
cmc
gs
pop
pop
int
lea
enter
sahf
or
cmpsb
and
inc
lds
iret
and
lea
fs
popf
insb
mov
pop
cmp
aaa
lret
cmpsb
push
test
popf
or
inc
xlat
mov
cmpsl
test
pushf
sti
push
in
aaa
cmpsl
ret
lods
and
ret
dec
fdivrs
icebp
nop
arpl
lds
mov
arpl
cmc
xor
mov
test
in
in
jg
sbb
and
stos
dec
fisttpll
out
std
push
lahf
push
fisttpl
movsb
push
loop
lods
lret
inc
loope
or
pop
jp
jne
cmp
mov
scas
pop
sahf
or
cmpsb
dec
push
nop
push
popa
nop
pop
test
mov
mov
int
fdivrl
push
xor
daa
sahf
sbb
inc
rcll
aas
imul
add
sbb
jns
pop
xchg
adc
rcrb
test
jl
notb
insb
loop
je
jns
add
add
loope
or
jbe
push
rolb
shlb
jb
xchg
dec
fstpt
and
mov
jnp
jb
jp
in
pop
inc
aad
sub
je
aam
sub
mov
es
mov
mov
mov
fadds
mov
cmpsl
adc
push
jmp
xchg
pusha
out
inc
aam
dec
xchg
loop
outsb
cld
fwait
jbe
loop
icebp
nop
arpl
outsl
add
add
std
or
push
cltd
or
jno
push
mov
es
xchg
add
jno
xor
test
jge
jg
inc
mov
out
popf
or
roll
aad
adc
stc
imul
or
sbb
mov
popf
sbb
sbb
cmp
xchg
jb
es
push
mull
xchg
lds
jg
jmp
dec
mov
push
cmc
sbb
lcall
mov
pop
iret
stos
pop
loopne
cmc
gs
xor
or
xchg
or
je
inc
mov
movsl
mov
mov
mov
jnp
mov
insb
out
jg
jmp
imul
xchg
jbe
adc
sub
in
jge
notl
mov
dec
mov
gs
push
xchg
pop
mov
mov
das
fwait
mov
mov
lods
lret
inc
test
iret
push
ret
ret
jnp
mov
mov
in
jg
mov
std
gs
pushf
outsl
scas
push
enter
sub
cmpsb
xor
scas
inc
xor
pop
les
int3
dec
mov
test
push
cltd
cmp
sub
das
dec
mov
aas
lret
mov
mov
int
fdivrs
je
out
sbb
pop
int
addr16
repz
mov
mov
roll
pop
cmp
xor
push
cld
repnz
pop
repnz
dec
fistpll
mov
mov
pop
int3
stos
data16
push
lret
cmc
adc
sbb
cmp
lret
pusha
outsb
clc
outsb
or
dec
movsl
xor
and
enter
outsl
dec
inc
and
sbb
dec
stos
xchg
mov
rclb
push
lret
scas
pop
fsubrl
cmp
mov
and
int3
dec
ret
mov
dec
mov
dec
fidivrs
or
dec
mov
cmpsl
ret
add
pop
jb
movsb
cs
xchg
pop
bound
pop
stos
dec
lret
mov
mov
fdivl
in
je
imul
shll
int3
stos
sarw
out
jl
jne
sub
mov
cmpsb
xor
test
lods
lret
inc
mull
sbb
jp
jge
notl
push
xchg
repz
int
int
and
aaa
sub
push
dec
aad
sub
xor
fldenv
fistpl
daa
mov
and
cmpsl
and
ljmp
in
jge
notl
imul
jbe
addr16
sub
push
cmp
cmp
inc
and
cmp
xchg
add
pusha
rcrb
stos
pop
test
adc
inc
es
popl
xchg
repnz
add
xchg
sbb
mov
push
test
jge
cmp
push
xor
lods
cmp
mov
cmc
mulb
pushf
outsl
les
sahf
or
cmpsb
pop
xor
or
mov
gs
and
test
pop
popf
ljmp
stc
in
xor
mov
mov
int
and
push
lcall
in
sbb
inc
and
imul
adc
fs
push
xor
xor
lahf
punpckhdq
push
mov
push
dec
testl
mov
test
mov
test
ret
ret
mov
sbb
arpl
xchg
les
pop
aas
lret
insb
loop
je
fisttps
movsb
push
in
call
rclb
pop
out
adc
mov
call
and
push
xor
or
in
jge
notl
lcall
rclb
sub
js
mov
pop
mov
jns
setle
aad
in
dec
lret
lret
mov
jg
inc
mov
movsl
pop
xchg
pop
bound
and
sbb
jns
push
lds
xorl
sub
dec
rcll
and
testl
or
sbbl
fs
imul
pop
clc
push
lahf
push
scas
cmp
mov
in
mov
andb
mov
lods
cmp
movsb
ret
mov
pop
jb
sub
inc
shll
cs
mov
shrl
les
nop
push
popa
nop
js
mov
aaa
test
pop
test
sbb
insb
adc
xor
jge
xchg
cmc
add
orl
decb
xchg
addr16
js
mov
icebp
je
lea
jnp
mov
dec
rclb
and
imul
pop
jp
fs
xlat
inc
and
js
and
cmp
cmpsl
aaa
push
mov
iret
cmp
xchg
adc
adc
and
lcall
pushf
ljmp
adc
xor
nop
or
or
mov
shlb
imul
mov
mov
add
lcall
data16
xchg
outsb
xchg
jge
notl
pop
xchg
pop
bound
bound
pop
mov
roll
movsb
mov
into
imul
adc
add
arpl
xchg
xchg
pop
jp
add
cmpsl
aaa
push
mov
hlt
pop
mov
lock
outsb
add
pop
int3
stos
data16
xchg
jle
jle
call
shlb
mov
dec
fistpll
sbb
cmc
gs
jo,pt
jns
jmp
in
je
lea
mov
pop
pop
jp
adc
jne
out
push
mov
jns
inc
xor
out
hlt
xchg
outsb
xchg
jge
je
pusha
sbb
lds
mov
xchg
inc
les
int3
cmp
insl
std
test
aaa
ret
push
lds
scas
and
dec
fdivrl
jmp
add
std
or
aad
enter
imul
aam
iret
stos
pop
rclb
sbb
cmp
popf
xor
xchg
xchg
add
rolb
shlb
inc
aam
dec
out
test
pop
test
cmc
gs
pop
or
out
jnp
mov
xchg
or
xchg
sti
imul
insl
in
rorl
mov
push
xor
or
inc
pushf
sbb
aad
int3
jge
je
pusha
out
push
mov
in
test
xchg
icebp
add
mov
stos
int
aam
push
lds
lea
mov
jg
outsb
scas
es
cs
dec
fdivrs
ss
mov
ret
pop
rolb
shlb
jge
je
xor
cvtpi2ps
mov
sahf
js
jl
testb
and
mov
arpl
imul
leave
pop
cmp
or
jl
notb
pop
mov
xchg
adc
rorb
push
rorl
pushf
ret
inc
xlat
mov
xchg
pop
enter
cmp
jecxz
lock
bound
add
and
sbb
push
imul
push
lahf
push
cld
jne
mov
int
fstpt
add
sahf
insl
ret
movsl
push
repz
stc
cwtl
imul
jo
lret
pop
ds
and
or
lret
pop
leave
test
call
push
decl
dec
sub
imul
push
scas
sbb
pop
bound
daa
rclb
mov
mov
push
shlb
add
sbb
cmc
je
mov
jns
movswl
mov
mov
inc
shlb
inc
and
cmp
lea
jle
mov
testb
jno
push
shll
mov
test
mov
nop
je
movsl
xor
cmpsb
xor
scas
or
and
gs
iret
stos
pop
movsl
xchg
sbb
pushf
push
pushf
sti
push
mov
push
cli
roll
mov
icebp
pusha
notb
pop
jb
rclb
pop
hlt
movsl
aaa
cmpsl
ret
pop
int
and
jb
xlat
inc
and
sbb
mulb
sbb
ljmp
movsb
ret
ds
fiaddl
dec
lret
inc
jecxz
push
in
sbb
test
xchg
repz
out
push
lahf
push
addl
testl
sub
sbb
inc
mov
and
out
outsl
lcall
push
xor
cmp
test
adc
sbb
dec
fidivrs
jecxz
jne
sti
jne
mov
cmp
gs
gs
dec
mull
insb
lds
jne
out
pop
xor
and
pop
int
and
jl
add
popf
or
push
pushf
sti
push
aad
das
mov
add
cwtl
push
imul
sub
mov
inc
mov
sub
pop
je
push
cld
adc
stos
cmp
dec
push
mov
push
aaa
ret
sub
push
pushf
sti
push
repz
mov
add
mov
fcomps
dec
sub
call
ret
push
lds
fcoms
pop
sahf
hlt
jg
mov
push
rcll
ja
test
gs
pushf
outsl
fdivr
jae
xchg
push
rcll
jo
sub
int
and
bound
pop
jb
sub
dec
adc
es
or
in
divb
scas
cmp
mov
ljmp
mov
inc
mov
jo
jge
divl
aaa
cmpsl
ret
xor
and
mov
mov
mov
push
test
mov
add
popa
in
sbb
adc
jo
stos
cmp
dec
inc
leave
pop
cmp
sub
dec
mov
sbb
lea
nop
testl
push
mov
cmpsl
push
cmc
out
adcl
test
jb
add
lahf
push
pushf
sti
push
mov
icebp
dec
lret
pop
repnz
fs
das
mov
dec
fnstcw
lds
les
xlat
test
mov
and
xchg
jnp
pop
int
loopw
lret
lret
jbe
cmpl
push
lds
or
adc
test
pop
xchg
adc
icebp
jbe
cmpl
out
adc
sbb
stc
push
test
jge
jg
fimuls
add
test
orb
clc
or
mov
nop
testl
jl
pop
daa
test
rorl
repz
adc
test
pop
lea
hlt
push
cld
push
jle
jle
call
shlb
jo
jp
in
pop
lret
pop
int3
stos
shlw
cmp
imul
xchg
mov
xchg
adc
jmp
cwtl
push
int
and
push
lcall
gs
pushf
outsl
movsb
fstps
scas
pop
mov
into
pop
cmp
ds
fldl
jg
sub
nop
adc
in
sbb
mov
stos
lea
lods
and
imul
adc
add
or
loop
loop
je
push
fisttps
fnstenv
cmpsb
sub
xor
cmp
jmp
popa
mull
icebp
dec
cmpsl
movsb
ret
ds
fmull
mov
sub
adc
dec
das
fisubrl
fimuls
inc
adc
or
pop
rclb
sub
insb
or
out
dec
roll
rcll
ljmp
stc
xorb
add
cmp
lock
bound
pop
std
lret
dec
fdivrs
mov
mov
push
fstps
popf
or
imul
mov
inc
mov
or
insb
jb
push
pop
xchg
repnz
nop
push
mov
sbbl
sbb
dec
lds
iret
push
dec
fidivrs
mov
push
pushf
sti
push
cmpsl
push
imul
mov
pop
lret
scas
pop
repnz
jp
jp
iret
pop
enter
stc
popa
icebp
nop
arpl
lcall
test
mov
and
shlb
pushf
add
pop
repnz
fs
push
lds
xchg
adc
add
sbb
inc
rcll
push
fldenv
xchg
gs
pushf
pop
lcall
fmuls
fdivrs
popa
out
jg
jmp
fisubrl
les
stos
pop
inc
and
or
ret
push
lds
sub
js
js
ljmp
outsb
cld
fwait
jbe
insl
std
test
push
xor
pop
int3
inc
and
in
mov
adc
sub
mov
add
jle
data16
xchg
outsb
xchg
fs
jns
lods
lret
inc
shrl
sbb
and
outsl
or
out
in
sti
sahf
insl
xor
jmp
jge
cmp
inc
xlat
push
mov
int
addr16
insl
call
and
outsb
jmp
push
in
or
dec
mov
fiaddl
pop
cmp
jno
push
mov
es
jbe
cmpl
ret
ret
push
mov
js
ljmp
test
adcl
test
or
sub
pop
and
jl
popf
or
adc
sti
notl
xchg
or
push
lds
adc
or
fs
popf
insb
jmp
adc
push
ret
cmpsb
push
lcall
mov
cltd
clc
or
mov
mov
shrl
ds
jmp
std
test
cmp
das
dec
mov
arpl
sbb
adc
test
pop
test
pop
roll
shll
stos
and
jae
xchg
cmc
add
rcrb
stos
data16
iret
inc
shlb
sbb
in
bound
repz
rclb
test
sub
or
inc
aam
sub
test
out
jl
divb
jo
call
lcall
seta
bound
out
sbb
add
cmp
je
out
push
cmc
jnp
mov
and
pusha
out
adc
adc
mov
jle
pop
fcompl
test
jbe
loopne
ds
dec
mov
push
scas
dec
push
mov
xchg
jb
in
bound
jle
call
mov
xchg
fistl
lods
pop
lahf
popl
nop
testl
push
scas
sbb
jge
je
sub
lcall
sbb
and
outsl
lcall
leave
test
lock
inc
mov
loopne
jmp
jge
mov
mov
cltd
or
jnp
pushf
xor
dec
jg
je
out
push
pop
xchg
jb
or
test
fs
popf
insb
movsl
dec
roll
aad
mov
stos
into
cmp
cmp
sub
inc
lds
mov
xchg
addb
repz
sti
ret
mov
pop
cmp
cmp
push
sahf
or
cmpsb
inc
jle
gs
push
pop
pop
jp
xor
jle
pusha
pop
repnz
aas
outsb
cld
xchg
cmc
add
dec
fimull
fidivl
scas
aas
pop
test
dec
outsl
dec
fimuls
push
daa
mov
inc
mov
imul
iret
pop
enter
out
adc
inc
ss
inc
mov
aas
movsl
xor
aad
sub
xor
push
orl
pop
lahf
and
cmp
xchg
or
je
mov
inc
mov
lds
mov
mov
cmpsl
jb
push
mov
xchg
repnz
repz
push
jecxz
push
in
insl
jmp
push
in
jg
mov
movsb
sub
xchg
or
dec
push
fmuls
fcomps
sbb
aam
aam
dec
clc
fimull
mov
jnp
in
pop
mov
popf
in
jns
mov
jae
jp
in
inc
xor
ss
mov
outsl
lcall
insl
jmp
insb
mov
pop
repnz
mov
bound
fidivrl
inc
sub
pop
into
dec
ret
popf
and
xor
int
and
cmp
jns
outsb
call
loope
hlt
xchg
outsb
mov
sbb
aam
mov
add
sahf
insl
pushf
adc
movsl
xor
mov
lock
mov
mov
xchg
out
popa
icebp
nop
arpl
jne
push
rcll
ja
mov
jg
and
insb
loop
je
sub
dec
fldt
test
sbbl
jbe
jno
jecxz
stos
xor
lock
bound
jecxz
jo
jg
jmp
call
dec
sub
popa
cltd
sbb
adcb
subb
dec
sub
push
movl
adc
in
sbb
stos
xor
das
mov
xchg
add
jns
mov
inc
int3
inc
and
push
xor
sub
push
rorb
push
icebp
into
inc
xlat
mov
ficoms
cmpsl
push
nop
or
daa
rclb
push
in
imul
mov
jle
cmp
mov
push
cld
dec
fimuls
mov
punpckhdq
add
push
adc
sbb
xchg
push
push
fwait
or
jns
inc
and
xor
aaa
cmpsl
ret
mov
rclb
cmpsb
push
aam
jnp
mov
mov
enter
fsubrl
lds
push
xor
and
testl
lcall
je
mov
test
rclb
jae
in
enter
inc
movsb
jae
push
sub
lds
iret
sbb
pop
cmp
adc
fisttpll
out
mov
sahf
mull
icebp
push
imul
stc
push
loop
ljmp
mov
repz
pushf
outsl
outsl
lcall
imul
cmp
mov
inc
mov
jp
jo
loop
jne
bound
inc
daa
rclb
cmp
inc
aad
dec
test
outsb
or
adc
inc
shlb
clc
lahf
push
divl
xorb
jl
jne
push
dec
enter
cmp
lret
and
xchg
or
outsl
add
push
xchg
add
sahf
jp
sti
imul
or
push
cmp
orb
adc
cmp
daa
inc
mov
test
mull
icebp
push
inc
xlat
inc
and
outsb
movsb
cmp
outsb
cld
fwait
jbe
into
pop
iret
stos
pop
into
inc
inc
and
imul
fildl
mov
mov
adcl
test
mov
inc
mov
adc
sbbb
jmp
mov
rclb
insl
std
test
sbb
stc
jg
mov
push
lds
lret
inc
mov
pop
mov
cld
sbb
xor
sub
xor
add
push
fisttpll
out
jne
xchg
cmc
add
rorb
push
icebp
or
adc
push
jne
outsl
or
lds
gs
pop
daa
mov
add
mov
mov
sbb
negb
push
test
push
scas
sti
imul
push
cmp
add
mov
jle
call
lds
mov
in
sbb
push
popa
add
sbb
or
sbb
ss
dec
fstpt
mov
cs
jbe
fs
push
jle
mov
cwtl
imul
sbb
lret
push
popa
nop
js
icebp
popa
add
add
cmc
orl
clc
or
aam
repz
gs
push
jecxz
push
in
or
sahf
adc
daa
mov
and
inc
hlt
or
cld
insb
loop
je
adc
insb
cli
push
xor
mov
inc
mov
dec
fisttps
flds
mov
aaa
lods
and
push
lcall
aad
sub
xor
push
mov
mov
insb
loop
je
mov
scas
jmp
stc
cwtl
imul
xor
mov
mov
cltd
clc
or
push
lcall
sub
push
fs
jl
testb
sub
scas
cmp
mov
jne
imul
test
pop
leave
lods
daa
mov
and
or
test
pop
test
sbb
adc
sbb
out
jg
mov
and
int3
pop
into
test
mov
jp
jp
adc
xor
pop
jnp
jo
loop
ret
xchg
fs
in
sbb
push
ret
ret
mov
xchg
jle
std
insl
hlt
pop
in
fsubl
xchg
xchg
pop
jp
imul
loop
pop
loop
out
imul
xchg
add
pusha
pop
mov
gs
jbe
xor
lahf
punpckhdq
sub
jp
push
lahf
push
pop
aam
sub
fdivrs
mov
imul
insl
ret
jo
loop
lds
pop
cmc
push
les
int3
jge
mov
inc
mov
mov
mov
dec
fdivrl
pop
aas
lret
cmp
sub
lods
cmp
test
jge
or
mov
lret
dec
fistpll
adc
stos
cmp
inc
push
test
push
pushf
sti
push
call
inc
xchg
xor
dec
pop
fisttps
pop
aad
sub
cs
push
xor
sub
fdivrl
aas
mov
inc
mov
ds
cmp
loope
adc
and
mov
jp
in
pop
mov
mov
and
popa
nop
and
nop
push
popa
nop
cmp
jg
mov
mov
xchg
adcl
stc
imul
sub
js
ja
xorb
enter
and
inc
and
or
sbb
jmp
mov
dec
sub
setae
and
dec
adc
add
cmpsb
xor
scas
push
jg
mov
jecxz
cmc
pushf
outsl
cwtl
jp
fs
jl
testb
jmp
fidivrs
lret
inc
shlb
push
cld
pop
pop
nop
push
popa
nop
inc
idivl
mov
dec
rcll
data16
pop
repnz
rolb
dec
sub
out
jno
push
push
xor
pop
int
and
fs
insl
std
test
aad
xlat
mov
clc
pop
roll
aad
loopne
call
inc
aad
dec
scas
out
jne
mov
lret
push
shlb
sbb
outsb
rorl
push
roll
xchg
jb
inc
insb
in
jge
negl
add
divb
mov
jb
push
cld
add
lret
mov
mov
aam
sub
inc
and
dec
adc
pop
mov
scas
lret
cmpsb
sub
test
mov
mov
fdivrp
je
lea
mov
gs
xor
mov
outsb
mov
in
les
scas
pop
repnz
push
xor
jle
pop
int3
stos
iretw
cld
push
cmc
pusha
notb
xchg
testb
lret
sub
or
adc
imul
xchg
push
pushf
sti
push
xchg
sub
cmp
mov
mov
leave
ss
inc
mov
stos
pop
cmpb
dec
mov
scas
pop
mov
inc
xlat
mov
mov
pop
mov
add
cld
xchg
cmc
add
lcall
ljmp
ds
test
mov
call
adc
int
mov
out
fdivl
in
adcl
loope
mov
push
in
inc
fidivrl
pop
and
add
mov
aad
xchg
xchg
and
add
xor
dec
das
fidivrl
jecxz
jmp
int3
inc
and
or
sbb
xchg
add
adc
lahf
punpckhdq
and
or
cmpsb
dec
sub
and
push
ja
addr16
add
dec
sub
xor
jbe
cmpl
imul
inc
shll
pop
cmp
sub
jb
xchg
xlat
pop
int3
stos
xchg
jg
addr16
pop
fstl
cmpsl
push
xchg
inc
shlb
cwtl
decl
lods
dec
fmuls
fsubrs
sbb
mov
push
test
add
adc
int3
inc
and
in
jle
push
int3
inc
and
sahf
stc
or
jbe
jl
negb
cmp
jnp
mov
sbb
in
hlt
xchg
outsb
cmpsl
fcompl
xchg
lea
xchg
pop
bound
lds
mov
mov
bound
or
lahf
sbb
cmp
sbb
mov
ficompl
xchg
add
adc
in
sbb
fistl
pop
mov
xchg
mov
xchg
add
sbb
aas
inc
rolb
shlb
lods
and
sbb
lea
ficoml
cmpsb
push
cli
jp
jl
testb
stc
cwtl
imul
popa
icebp
nop
arpl
loopne
sbbb
jmp
loopne
jb
jl
jo
loop
jnp
jp
in
imul
xor
or
xchg
pop
bound
xchg
outsb
xchg
inc
and
xor
orb
decb
xlat
and
sbb
aaa
ret
push
lds
xor
xchg
pop
ss
in
clc
lahf
push
insl
loop
pop
loop
hlt
js
mov
ficoml
lods
pop
cli
sub
dec
add
test
pop
test
mov
mov
fwait
dec
fldt
fimull
fidivrl
fimuls
and
clc
sbb
mov
xchg
jl
push
xor
daa
aad
fnstcw
lcall
lret
xchg
into
push
ret
cmpsb
push
mov
and
daa
cmpsb
xor
scas
dec
and
xor
pop
push
inc
and
or
mov
inc
mov
and
cmp
into
cmp
xor
fimuls
add
data16
xchg
outsb
popf
lcall
roll
aad
stos
es
cs
pop
inc
and
jns
and
push
rclb
imul
mov
shlb
fistpll
leave
test
out
push
push
xor
imul
jle
imul
lcall
pop
ficomps
test
xor
scas
addr16
shll
enter
fnsave
pop
fstpt
pop
repnz
fs
cwtl
sbb
aad
ror
dec
fdivrl
loop
je
mov
test
mov
dec
mov
scas
pop
test
sub
push
xor
sbb
stc
ds
inc
mov
and
or
or
xor
adc
add
insb
adc
push
xor
jbe
push
lds
mov
bound
jmp
int3
pop
les
int3
and
out
adc
imul
call
rcrb
add
icebp
ja
xorb
mov
outsb
call
imul
movb
inc
mov
outsl
lcall
js
ljmp
int
dec
frstor
mov
idivb
mov
sub
out
stc
cwtl
imul
and
cmp
dec
fdivrl
les
lret
cmc
stc
insl
std
test
pop
adcb
subb
and
pop
into
pop
cmp
jno
xchg
add
sahf
pop
sub
jae
jns
jmp
pop
push
xor
sbbb
and
pusha
std
insl
hlt
pop
orb
or
jp
push
sub
lds
jp
xchg
cmc
add
jecxz
cli
popf
insb
mov
sbb
ja
pusha
pop
repnz
mov
gs
addr16
jno
xorb
add
std
or
mov
shll
push
imul
lahf
punpckhdq
aam
cmp
stc
cwtl
imul
lods
lret
inc
out
lcall
test
jge
and
pop
jmp
movsb
ret
ds
lea
xor
lods
movsb
ret
ds
mov
mov
mov
rorl
mov
js
ljmp
push
inc
rcll
or
nop
push
popa
nop
js
pop
enter
or
pop
push
arpl
cmc
and
mov
xchg
arpl
inc
xlat
mov
cmpsl
pusha
ljmp
frstor
loopne
cmc
xchg
sbb
jl
jne
and
mov
jns
pop
adc
js
imul
pop
xor
mov
andl
add
inc
xor
add
lret
js
dec
fdivrs
xchg
repnz
pop
pushl
lock
aam
sub
int
addr16
push
test
dec
fstpt
xchg
lock
ret
repz
cmc
sbb
pop
jp
jg
in
bound
and
ljmp
std
jg
mov
sub
out
fs
popf
insb
lahf
hlt
jge
je
addr16
add
outsb
cld
fwait
jbe
sbb
test
cltd
clc
or
aam
into
test
jle
call
push
cmpsl
adc
mov
gs
cmp
adc
xor
ds
icebp
data16
xchg
outsb
pop
roll
aad
in
jg
mov
pop
mov
imul
stos
xor
jle
mov
popf
insb
jmp
jns
mov
mov
repz
push
xor
daa
cmp
mov
filds
repnz
jns
mov
icebp
jnp
mov
sub
jmp
push
in
sbb
dec
ret
mov
aad
sub
cmp
mov
mov
gs
xor
mov
inc
mov
pop
aam
sub
jg
jmp
push
mov
mov
ja
loope
add
in
jns
mov
or
or
xor
mov
inc
mov
aam
cmpb
pushf
add
call
lcall
ss
pop
test
arpl
xchg
cmc
add
cwtl
sbb
mov
inc
mov
outsl
lcall
lahf
fwait
and
xchg
mov
mov
sbb
punpckhdq
test
mov
cs
scas
es
cs
sub
xor
and
pop
scas
jns
jne
mov
add
pop
jp
xor
stos
cmp
sbb
insl
ret
int3
stos
data16
sbb
cmp
mov
xor
stos
pop
rcrb
inc
and
adc
inc
loopne
jmp
iret
pop
cmp
cmp
sarb
pop
lds
iret
dec
lea
and
xchg
mov
call
int3
and
aas
scas
lret
pop
fisttps
flds
jmp
jecxz
jne
orb
decb
int3
aas
enter
or
adc
xor
sub
adcl
adc
cmp
fisttpll
out
add
imul
adc
dec
mov
aad
xchg
int3
pop
int
addr16
pop
int
and
fs
mov
das
test
nop
push
popa
nop
and
xor
or
popa
icebp
nop
arpl
push
mov
js
fiaddl
mov
subl
imul
mov
enter
and
push
pop
rclb
inc
pop
jecxz
push
in
imul
pushf
sbb
aad
int3
mov
mov
popf
gs
or
dec
inc
les
int3
cmp
pop
enter
int
aad
dec
mov
shrl
or
inc
aad
dec
mov
mov
xchg
sbb
aad
lock
repnz
punpckhdq
popf
insb
fidivl
mov
mov
xchg
cmp
mov
jg
dec
fistpll
cltd
push
fsubrs
ljmp
das
mov
dec
mov
enter
aad
sub
pop
and
mov
popl
cmp
and
or
push
roll
shll
xlat
inc
lds
iret
sbb
addr16
or
pop
bound
push
scas
pop
ficoml
mov
or
jg
add
std
or
cli
je
lea
popf
or
mov
dec
mov
add
pop
adcl
loop
test
out
popa
mull
icebp
dec
adc
inc
fisttpl
pop
jp
ds
cmp
push
xchg
repz
test
xchg
push
dec
rolb
shlb
int
lret
scas
pop
mov
sbb
cmp
mov
les
jge
idivl
cmc
gs
adc
pop
cmc
inc
ret
ret
mov
xchg
push
icebp
sub
pop
cmp
and
pop
cmp
ds
sbb
jbe
cmpl
adc
loop
pop
loop
jo
xorl
mulb
aad
iret
stos
pop
movsl
movsb
das
mov
push
les
stos
into
cmp
sbb
pop
sbb
jmp
xor
sub
popa
sti
imul
dec
and
xchg
or
out
jnp
mov
repnz
lahf
push
and
sub
xor
mov
loope
icebp
nop
arpl
mov
xchg
xchg
repz
out
jae
xchg
out
notl
push
imul
jne
mov
add
xor
inc
roll
aad
imul
cltd
adc
push
jnp
in
aas
scas
and
popf
or
and
pop
leave
test
lock
pop
in
add
and
and
add
mov
xchg
aas
fmull
mov
ret
cmpsb
push
hlt
popa
stc
imul
in
je
addr16
lret
scas
pop
mov
iret
pop
cmp
aas
inc
fisttps
fldenv
sbb
pop
xchg
repnz
add
adc
test
ja
fs
sbb
jbe
loopne
push
aam
sub
mov
cmp
xor
testb
lock
adc
lock
add
jb
in
or
aaa
mov
fists
cmpsl
push
cmc
ja
jnp
in
pop
roll
mov
jmp
dec
frstor
gs
cmp
xorb
lods
and
sbb
xchg
pop
enter
outsl
cmp
xchg
or
cld
fs
popf
insb
xchg
inc
aam
dec
cmpsb
inc
fisttpll
out
xor
sub
repz
pop
cmp
and
clc
jb
popa
add
adc
popf
or
ja
xorb
push
ret
cmpsb
push
cmpsb
push
rolb
sarb
testl
xchg
jo
lock
adc
aas
scas
lret
or
insl
loop
pop
loop
orb
adc
mov
fwait
decb
repz
mov
add
adc
pop
lods
push
movsb
xor
mov
cmpsb
xor
push
mov
mov
roll
aad
adc
add
jnp
lds
iret
dec
out
ja
xorb
push
lahf
push
ss
xor
cmp
and
mov
lahf
cli
or
inc
les
int3
cmp
xchg
add
pop
xchg
adc
mov
xlat
pop
int
addr16
je
cmpsl
aaa
push
mov
es
pop
rolb
rclb
fs
jg
jmp
pushf
or
insl
add
ljmp
jbe
loopne
push
lods
xchg
add
scas
cmp
mov
in
in
mov
xor
sub
cmp
cwtl
jo
sbb
cld
xchg
cmc
add
push
pushf
xor
insl
cmc
jbe
cmpl
ret
ret
mov
lods
sub
int3
inc
and
sahf
stc
or
jl
outsl
or
out
and
dec
push
xor
sub
lcall
xchg
and
rolb
shlb
in
sbb
test
pop
fucomip
notl
lret
pop
iret
stos
pop
shr
jg
mov
pusha
pop
repnz
roll
mov
jmp
mov
jge
js
ljmp
sbb
push
lahf
push
push
xchg
or
pop
jmp
insb
mov
dec
sub
xor
std
mov
shll
or
addl
adcb
subb
out
mov
sub
push
sub
mov
cltd
clc
or
ficomps
scas
pop
scas
jne
add
sbb
adcb
xorb
jle
call
and
cmp
notl
xor
push
lds
push
xor
sbb
jo
loop
ss
push
mov
gs
and
mov
scas
aas
pop
test
or
push
cmpsb
xor
dec
fistpll
mov
and
jmp
cmp
outsb
jmp
insb
mov
mov
dec
mov
ds
sbb
push
sub
pop
repnz
lods
mov
rcrb
into
roll
inc
movsl
pop
jecxz
push
in
or
sbb
pop
jno
imul
push
sbb
les
mov
lahf
cli
or
rcrl
test
mov
add
inc
enter
outsl
push
jecxz
push
in
mov
stc
adc
punpckhdq
insl
pushf
sub
dec
sub
dec
lds
scas
pop
ljmp
fisttpll
mov
pop
cmp
jle
mov
dec
mov
and
js
pop
into
test
inc
and
cmp
and
xchg
js
je
out
imul
lret
out
sti
sahf
insl
subl
cmp
inc
mov
mov
push
loop
sti
sahf
insl
mov
pop
scas
ljmp
gs
pushf
outsl
sahf
mov
xchg
icebp
add
orl
mov
xchg
icebp
add
pop
aad
sub
jp
data16
xchg
outsb
mov
push
fcoml
popf
or
and
ficoms
cmpsb
push
cli
imul
or
dec
stos
cmp
mov
es
inc
mov
sub
int3
pop
iret
stos
pop
rcr
shll
adc
arpl
popa
icebp
nop
arpl
nop
js
jb
xchg
and
cmp
test
aad
int3
push
rolb
sarb
dec
lret
lret
and
outsb
out
jg
jmp
pop
repnz
lahf
sbb
push
dec
rclb
and
push
xor
and
jecxz
adc
dec
ret
ret
inc
shll
shll
scas
leave
cmp
or
mov
sbb
and
mov
mov
outsb
cli
push
fmuls
fdivrs
xchg
add
push
mov
and
lock
xor
dec
popa
clc
outsb
or
adc
inc
shlb
sahf
stc
or
leave
push
fcompl
xchg
lea
nop
push
popa
nop
js
out
adc
or
add
adc
push
pop
fimuls
adc
fnsave
outsl
or
hlt
idivl
test
mov
jnp
pusha
pop
repnz
inc
and
jbe
loope
adc
xor
or
mov
xchg
dec
jecxz
push
in
sub
push
lds
iret
jl
xchg
jb
es
sbb
cmp
jle
call
push
in
pop
mov
fwait
stc
popa
icebp
nop
arpl
lret
sub
dec
fnstcw
shll
bound
sbb
outsl
jg
xchg
testb
and
add
mov
movsl
int3
aas
fsubs
fidivs
add
es
inc
mov
rcrb
and
sub
notb
rolb
shlb
ret
ret
jl
jne
and
arpl
xchg
gs
pop
repnz
cmpsb
and
aas
pop
test
stos
data16
outsb
insb
or
mov
cli
push
lods
lret
inc
imul
jg
mov
sbb
and
test
adcb
addb
ds
test
mov
shll
test
in
jb
xchg
adc
or
jmp
jns
push
cmpsb
xor
scas
inc
inc
lret
pop
ds
pop
loop
sti
sahf
insl
mov
loopne
sub
adcl
fwait
or
jns
push
test
push
cli
test
in
out
mov
test
cwtl
decl
fiadds
xchg
add
push
idivl
jp
mov
test
jp
in
inc
or
lods
cmp
jecxz
push
in
mov
mov
sub
push
lret
sti
mov
out
dec
rolb
shlb
jno
jg
jmp
or
adc
lret
dec
cmp
xor
es
pop
popf
push
mov
es
ljmp
iret
pop
cmp
xor
pop
fisttpll
out
pushf
sbb
pop
rcrl
stos
pop
xchg
or
fistl
mov
fidivrl
cmp
or
jle
mov
cld
bswap
hlt
jg
mov
lret
pop
iret
stos
pop
shll
mov
pushf
or
in
movsl
test
scas
lret
pop
lret
lret
xchg
pop
bound
and
data16
outsl
lcall
and
shl
jle
mov
aad
into
xor
mov
mov
add
pop
leave
test
nop
pop
fmuls
fdivs
stos
sub
jne
mov
pop
fimull
fisubl
push
pushf
sti
push
roll
cmp
cmp
dec
fdivrl
sbb
jg
mov
cltd
pop
xchg
adc
pop
xlat
inc
and
sub
in
sbb
dec
popa
out
jl
mulb
adc
sub
and
mov
lods
xchg
xchg
repz
jmp
popa
icebp
nop
arpl
mulb
rclb
pop
test
xor
pop
rolb
shlb
cltd
adc
leave
pop
cmp
sub
jae
std
jno
xorb
aas
scas
lret
out
stc
cwtl
imul
shlb
mov
test
pop
iret
stos
pop
das
mov
xchg
or
mov
xchg
aas
sub
sbb
cmpsb
xor
scas
insl
inc
fdivl
in
pop
lea
sahf
or
cmpsb
dec
sbb
cmp
lret
pop
ds
fistps
mov
xlat
adc
dec
int
and
sub
dec
fdivrs
push
xor
cmp
orl
cli
or
scas
and
adc
inc
or
push
fmuls
fdivrs
std
insl
hlt
pop
roll
mov
js
dec
aaa
mov
xor
sbb
mov
dec
fisttpll
out
push
les
fistpll
in
mov
in
sbb
loop
in
jg
pop
lds
iret
push
and
or
push
lea
or
mov
jns
nopl
ficompl
stos
pop
lods
sub
lds
xor
and
xor
pop
lahf
sbb
rolb
shlb
jmp
pushf
dec
ret
ret
cli
push
mov
dec
mov
je
jbe
nop
push
popa
nop
aaa
inc
leave
pop
cmp
sbb
mov
stc
je
lea
sbb
aad
xchg
insb
std
insl
hlt
pop
lods
pop
leave
pop
cmp
js
pop
int3
stos
iretw
mov
test
inc
es
add
in
out
jo
pop
push
xor
or
ret
in
sbb
shlb
sbb
jo
inc
aam
dec
leave
xor
mov
stos
into
cmp
inc
mov
cmp
movsl
and
mov
lock
lea
mov
cltd
adc
sbb
jmp
icebp
nop
arpl
or
adc
xlat
pop
into
test
mov
dec
fidivrs
mov
sbb
subb
cmp
lock
pop
mov
pop
leave
pop
cmp
pusha
cmp
xchg
add
cld
xchg
cmc
add
faddl
mov
mov
sbb
into
push
lds
cwtl
imul
add
xor
push
lret
dec
fnstcw
fdivrl
inc
and
and
xchg
popa
jmp
push
in
push
rcll
pop
mov
inc
shll
add
sahf
jl
push
lret
mov
add
and
rcrl
stos
data16
or
in
imul
xchg
pop
xchg
repnz
jne
inc
fisttpl
leave
pop
cmp
pusha
jne
jno
jecxz
ljmp
jmp
cwtl
adc
loope
adc
and
dec
frstor
mov
xor
dec
sbbl
mov
pushf
push
jae
add
sbb
add
sbb
fs
popf
insb
mov
popf
or
jb
xchg
addb
repz
sti
dec
roll
aad
inc
enter
cmp
imul
sbb
adcb
andb
scas
pop
test
push
lahf
push
xor
sub
insl
and
pop
xlat
inc
and
js
dec
fistpll
fnstcw
push
popa
nop
and
or
mov
popa
mulb
push
mov
aad
xchg
sbb
in
jbe
cmpl
push
lds
mov
mov
and
mov
mov
cs
fistl
jg
xchg
cmc
add
aaa
mov
dec
mov
cmpsb
push
mov
mov
inc
mov
daa
mov
bnd
cmpl
dec
fdivrl
ret
cmpsb
push
mov
push
mov
adc
lods
cmp
lret
lret
push
mov
and
sarl
gs
pop
mulb
insb
fcmove
pop
leave
test
lock
test
pop
test
icebp
gs
pushf
outsl
inc
shlb
jmp
jge
cmp
aas
pop
test
psubd
cwtl
add
or
push
xor
adc
jecxz
push
in
push
rolb
rcrb
add
push
les
jno
jecxz
mov
mov
xchg
jge
outsl
or
repnz
sbb
outsb
push
mov
jle
imul
and
mov
inc
mov
mov
xchg
icebp
add
movsl
ja
lcall
pusha
pop
repnz
adcb
loope
cmpsb
lret
pop
into
test
je
out
pop
inc
inc
and
ja
dec
ret
in
xor
add
sub
jmp
or
add
jp
jp
pop
les
int3
and
call
sbb
xchg
adc
in
sbb
jb
addr16
pop
or
add
jl
pop
leave
test
mov
pushf
bound
mov
inc
mov
popa
jmp
push
in
push
outsl
ljmp
les
jmp
jge
inc
enter
sub
enter
cmp
push
shlb
fisttpll
ljmpw
jns
push
cld
pop
ljmp
xchg
or
xor
cmp
add
mov
test
popf
xor
lahf
or
stc
imul
adc
dec
rolb
sarb
rcrb
pop
cmp
pop
push
xor
dec
in
cmc
pushf
outsl
movsb
cmp
divb
cmpl
lds
iret
sub
push
mov
enter
cs
cmp
pop
leave
dec
ret
mov
mov
in
jg
iret
inc
aad
dec
test
loop
push
fstpt
mov
cltd
sbb
stos
cmp
or
or
hlt
push
cld
dec
lods
cmp
push
shlb
mov
jmp
dec
fimull
movsb
push
bnd
js
ljmp
mov
lret
and
jle
call
or
jle
movsl
xor
mov
jg
inc
pusha
loope
adc
or
push
aaa
ret
xchg
add
sahf
jnp
xor
mov
insb
call
mov
lds
xchg
add
bound
stos
cmp
dec
lret
inc
shll
pushf
sti
push
in
push
lret
sti
movsb
sub
pop
jp
push
mov
fwait
decb
out
sbb
sti
push
mov
mov
loop
loope
jae
add
or
mov
mov
sbb
pop
mov
inc
addb
sti
popa
icebp
nop
arpl
inc
stos
cld
xchg
cmc
add
hlt
imul
sub
sbb
sub
add
std
or
movb
inc
mov
aas
ljmp
mov
stos
xchg
sbb
imul
insl
mov
pop
leave
test
mov
mov
mov
inc
sub
or
shlb
mov
cmp
rclb
push
clc
lret
pop
leave
test
call
negb
and
in
sbb
jb
in
pop
int3
inc
and
icebp
nop
arpl
mov
xchg
mov
es
in
adc
insb
lds
test
fisubrs
add
jbe
and
pusha
notb
mov
das
vpunpcklbw
xchg
pusha
test
mov
xchg
push
sbb
mov
movsb
ret
ds
inc
lret
pop
ds
insl
in
sbb
push
xor
and
dec
les
int3
aas
test
cltd
clc
or
sub
mov
xchg
icebp
add
jbe
imul
outsb
or
dec
addr16
push
cld
push
push
push
inc
mov
jmp
loope
movsb
xor
movsb
cmp
sbb
arpl
xchg
gs
test
cmp
dec
ja
jge
negl
and
sub
loopne
adc
addr16
lock
in
adc
in
sbb
adc
ss
inc
mov
mov
cmpsb
cmp
inc
mov
sti
cmp
push
lds
mov
cltd
clc
or
push
fdivl
in
clc
jno
xorb
in
jge
notl
add
addr16
notl
popa
out
jl
mulb
es
cmp
push
and
movsb
adc
mov
setge
dec
fistpll
mov
icebp
push
xchg
jb
es
push
lds
push
xor
popw
mov
jle
dec
popf
push
xchg
repz
in
adc
jns
xchg
add
sahf
jbe
test
in
sbb
push
lahf
punpckhdq
pop
stos
inc
arpl
jno
jecxz
lret
mov
aad
dec
mov
imul
insl
mov
mov
mov
in
cld
dec
les
int3
aas
aas
mov
dec
mov
jg
outsb
xlat
pop
int3
stos
xchg
pushl
xorb
sub
or
icebp
jl
jne
and
repnz
out
jo
stc
outsl
lcall
mov
jge
mull
icebp
or
mov
inc
mov
pushf
cmpsl
mov
jmp
call
jmp
or
inc
popa
mov
ret
shll
dec
insl
mov
call
jmp
sub
int3
popf
jmp
nop
sbb
aad
out
mov
sbb
dec
bound
jae
popl
jmp
call
jmp
push
mov
js
cs
cmp
mov
adc
push
jmp
cltd
call
jmp
ja
jp
in
inc
lock
notb
inc
jmp
out
sahf
pop
jmp
jp
jns
jmp
mov
add
add
jmp
and
sub
cmp
jb
add
jmp
pop
nop
push
popa
nop
cmp
xchg
cmpsb
scas
sub
jmp
movl
jmp
mov
fwait
imulb
je
dec
add
sbb
jmp
mov
jmp
jne
adc
call
jmp
dec
fisttpl
fnstsw
js
call
inc
gs
fs
jo
gs
dec
outsb
outsw
add
enter
sbb
movl
jmp
pushf
or
cmp
out
or
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
mov
stos
popa
jmp
push
int3
popf
sbb
nop
call
add
imul
or
pop
mov
jmp
roll
inc
mov
out
jmp
adc
add
add
jmp
rolb
inc
test
imulb
sub
jmp
pushf
jmp
dec
sti
jl
call
jmp
ficompl
scas
pop
mov
js
push
jmp
pop
jne
pop
fisttps
pop
jmp
mov
stos
add
jmp
call
jmp
addl
testl
dec
mov
ret
mov
xchg
sbb
sbb
imul
imul
inc
and
jmp
pushl
jmp
or
add
cmc
pop
add
and
fld
mov
call
jmp
loop
popf
jmp
fwait
sub
pop
mov
mov
jmp
cmp
hlt
int3
popf
jl
insl
hlt
pop
in
sti
add
out
add
and
adc
mov
fs
ret
add
push
add
jmp
dec
lret
lret
clc
vdivsd
repnz
decl
call
jmp
dec
int
and
cmp
dec
mov
inc
and
xor
jp
pusha
jmp
mov
lds
add
call
add
call
jmp
lret
inc
mov
mov
mov
ret
and
hlt
call
jmp
adc
push
sbb
xor
push
mov
mov
add
and
dec
ret
xor
popa
mov
jmp
pop
xlat
inc
and
sbb
lds
add
movzbl
jmp
pusha
fidivrl
call
jmp
xor
mov
add
jmp
sub
add
rorl
add
movsb
movsb
ret
mov
mov
orb
and
cmp
jne
addl
jmp
int3
popf
setp
outsl
lcall
repnz
or
icebp
notl
in
sub
outsl
lret
jmp
dec
jl
popl
jmp
jg
movsl
pushf
call
jmp
mull
xchg
outsb
jae
pop
cmp
je
popa
mov
jmp
mov
cwtl
dec
adc
or
add
push
push
inc
push
xor
cs
insb
add
nop
jb
cmp
in
and
icebp
xor
add
cld
jg
add
add
jmp
icebp
data16
xchg
outsb
push
add
dec
jo
outsb
inc
insb
imul
add
int
imul
pop
push
adc
xor
xchg
mov
cmpsb
sbb
movl
jmp
decb
add
add
xchg
nop
add
loope
ljmp
jmp
gs
jb
mov
jmp
fisubrs
add
add
add
add
dec
fisttpl
fstpl
sbb
call
jmp
gs
iret
movw
jmp
outsb
call
jmp
test
mov
les
mov
jmp
inc
call
jmp
imull
test
inc
fisubrl
lea
push
pushf
addl
pusha
jmp
xor
popf
cwtl
adc
and
add
fnstcw
adc
mov
or
mov
add
cmp
je
jmp
dec
rolb
rclb
dec
pop
jmp
add
jmp
and
dec
call
jmp
mov
cwtl
decl
ret
bt
mov
call
jmp
lret
daa
call
jmp
dec
roll
aad
adc
incl
popf
ret
mov
shrb
push
cmc
push
test
hlt
xchg
popf
pushl
mov
jmp
adc
xor
or
andb
jmp
mov
popf
nop
or
mov
add
dec
roll
aad
repnz
add
add
call
jmp
leave
dec
fdivrl
xchg
cld
adc
sarb
inc
cmp
je
jmp
inc
scas
in
cltd
movzbl
jmp
mov
jmp
call
jmp
lea
lahf
cli
or
inc
and
ret
jne
addl
mov
jmp
push
rolb
sarb
jle
shlb
icebp
inc
loop
je
popa
jmp
pop
rolb
shlb
xchg
pop
ljmp
pop
popa
and
add
add
jmp
sub
dec
test
jmp
xor
lret
and
lock
add
fcoml
lods
pop
mov
cmc
pop
mov
cltd
roll
add
jnp
decl
lea
jmp
imul
add
add
jmp
jg
fs
or
lret
outsb
xchg
jo
jmp
push
pushf
jmp
call
jmp
lea
nop
testl
push
sbb
popa
mov
ret
scas
lods
cmp
add
add
jmp
cmpsl
sub
jnp
push
jmp
adc
mov
cmpl
pop
int3
popf
cs
cmp
jmp
gs
imul
dec
incb
add
add
jo
jns
insb
imul
add
mov
and
add
add
jmp
outsl
insb
or
scas
push
xchg
call
jmp
cmp
cmp
sbb
das
mov
jmp
jmp
xrelease
jmp
adc
xor
int
mov
nop
shll
lret
out
xchg
mov
jmp
pop
call
jmp
add
add
add
add
inc
push
xor
cs
insb
add
leave
pusha
lcall
xorl
mov
add
mov
add
rcrl
pop
lcall
cmp
out
shr
add
add
push
fwait
add
aaa
lods
and
push
cmp
adc
mov
add
cmp
je
jmp
repnz
lahf
push
nop
pop
sub
add
xchg
popf
pushl
jmp
push
icebp
jmp
sbb
push
cld
jnp
mov
mov
add
sub
and
mov
mov
jmp
push
pop
mov
add
add
jmp
test
mov
sbb
push
fdivs
pushf
jmp
fdivl
sbb
inc
sub
jmp
fnsave
add
jmp
push
aam
sub
sub
push
lcall
pusha
mov
mov
jmp
cmpsl
es
cs
jg
and
popf
aad
cmp
push
andb
jmp
icebp
jnp
mov
sbb
punpckhdq
jnp
gs
mov
gs
jbe
cmp
inc
and
popa
incl
popf
ret
clc
jo
xorl
inc
mov
fs
jo
mov
and
cmp
jne
addl
jmp
mov
fwait
pop
movzbl
add
jmp
out
pusha
notb
mov
and
pop
aad
sub
jp
adc
sub
rcrb
mov
add
xchg
mov
sbb
inc
mov
ds
cmp
mov
roll
popa
mov
ret
pop
add
jge
call
pop
jnp
stos
lea
push
pushf
addl
pusha
jmp
pop
roll
aad
subl
push
sub
jmp
ds
pop
test
les
mov
fdivrs
insl
adc
pop
jmp
sub
or
add
push
push
inc
push
xor
cs
insb
add
sbb
jmp
push
in
dec
insl
cmc
gs
mov
popl
jmp
mov
nop
or
rol
jmp
sti
pusha
notb
scas
lret
movsb
inc
shll
popa
mov
jmp
filds
mov
enter
or
addb
clc
push
pop
sub
mov
movl
jmp
fistpl
int
mov
jmp
xor
ds
dec
leave
pop
cmp
sub
push
xor
xor
xchg
movw
jmp
inc
ret
ret
sub
lcall
xchg
sub
and
add
jmp
jle
movzbl
jmp
int3
inc
aam
dec
mov
mov
mov
cmpsl
in
fldenv
or
enter
add
pop
int
addr16
repnz
jmp
jne
outsl
or
lds
ret
push
lds
call
jb
xchg
adc
lods
and
add
mov
jmp
xlat
out
dec
add
jmp
cmpsb
xor
lods
lret
inc
out
hlt
pusha
notb
mov
xchg
add
cmp
je
jmp
je
inc
and
jmp
pushl
jmp
cmp
les
stos
movsw
jl
jne
out
jns
call
jmp
test
cmpsb
shll
sbb
pop
rclb
inc
xor
cmp
cs
adc
add
push
gs
insb
imul
inc
popa
je
add
in
incl
mov
or
mov
jmp
pusha
jmp
call
ja
jo
imul
mov
sbb
xor
test
cs
call
hlt
mov
lahf
cli
or
or
daa
or
pusha
jmp
mov
cltd
clc
or
fldcw
fs
jmp
pop
jmp
cld
or
call
ja
jo
imul
imul
add
or
mov
mov
andb
sub
jmp
icebp
jbe
cmpl
mov
jmp
pop
adcl
and
mov
xchg
icebp
add
aas
std
adc
inc
adc
out
loop
je
and
push
decl
pop
cmp
jmp
sub
arpl
add
jmp
jg
fs
or
dec
in
test
mov
das
stc
xor
jmp
lods
xchg
iret
orl
push
jmp
mov
jmp
sahf
adc
and
aaa
cmpsl
ret
xlat
into
jmp
jae
popf
pop
pushf
xor
inc
dec
xlat
inc
and
xor
jmp
ret
mov
ljmp
inc
mov
pop
cmpsl
sub
shlb
add
add
jmp
mov
test
addr16
push
fsts
cmpsb
push
in
jg
mov
jmp
in
pop
jbe
push
arpl
pop
jmp
dec
jecxz
push
in
test
repnz
add
std
or
fcmovbe
lods
shl
lea
jmp
add
pushf
jmp
and
xlat
dec
fdivrl
mov
sbb
ficomps
sbb
popa
jmp
pop
addw
jo
jmp
lret
xchg
pop
jmp
adc
jl
rclb
cmpsl
push
mov
dec
lods
rcl
mov
shrb
jp
jae
je
jmp
nop
call
push
push
inc
push
xor
cs
insb
add
and
mov
xchg
push
push
sub
jmp
dec
lret
lret
lods
and
inc
call
jmp
divl
xchg
sub
out
imul
insl
mov
mov
inc
mov
jnp
aaa
pusha
jmp
add
add
add
outsl
jae
inc
insb
imul
add
mov
add
dec
frstor
sub
cmp
jne
addl
mov
jmp
enter
dec
jmp
sub
repnz
jmp
enter
dec
mov
in
cs
insb
movw
movzbl
add
cmp
jmp
jl
sub
jmp
push
lret
cmc
dec
fmuls
fsubrs
jp
jp
lcall
xor
jmp
cmpsb
cwtl
pushf
jmp
mov
popf
cltd
cmpb
aam
pop
jmp
lret
add
jmp
adc
ljmp
lahf
push
and
push
xor
and
popf
ret
loopne
jmp
mov
flds
mov
test
dec
xor
into
pop
sub
jmp
sub
push
int
and
push
shll
jmp
inc
push
xor
pop
mov
rcll
inc
and
shrl
dec
pop
sub
mov
movl
jmp
cmc
cmp
add
add
jmp
push
pushf
sti
push
repz
sbb
rolb
rolb
mov
stos
into
cmp
popf
jmp
mov
jmp
push
inc
and
sub
xchg
pop
jge
adc
out
and
repnz
pushl
cmc
add
push
fisttps
fsts
jb
mov
xchg
and
cmp
jne
addl
jmp
movsl
sub
lds
iret
sbb
sti
mov
push
daa
mov
jmp
pop
mov
jg
sub
es
sti
push
int
xchg
cmp
sar
inc
adc
nop
int
shl
bound
jmp
aam
fidivrl
nop
testl
and
pusha
adc
mov
jmp
popf
or
loope
adc
push
scas
cmp
mov
cltd
xchg
inc
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
test
mov
les
rcll
loopne
or
push
adc
cmp
jmp
sbb
sbb
add
add
nop
or
jl
jne
insb
mov
stos
shr
sub
incl
adcb
andb
repz
gs
neg
sub
test
jmp
icebp
jbe
cmpl
push
xor
cmp
loopne
mov
mov
mov
mov
andb
sub
jo
jmp
add
add
add
jmp
xchg
jmp
push
dec
call
push
dec
inc
dec
dec
xor
cs
insb
add
pop
sbb
jb
outsl
or
in
sbb
out
jmp
shll
stos
cmp
pop
cmovbe
out
roll
add
xor
mov
adc
add
push
dec
inc
gs
outsl
insb
fs
popa
je
inc
add
push
adcl
cmp
nop
inc
repnz
les
int3
push
ja
push
dec
frstor
inc
lea
push
pushf
addl
pusha
jmp
pop
shr
and
add
and
lcall
jmp
add
lods
cmp
rcll
push
out
loop
loope
jae
stos
scas
ret
sbb
cmc
gs
dec
rclb
pop
hlt
sti
insl
std
test
aas
stos
cmp
or
rolb
add
jmp
jno
jns
jmp
out
inc
and
jmp
jge
mov
jmp
add
fimull
fidivl
test
mov
and
jp
adc
mov
movl
movw
jmp
loope
aad
add
jmp
mov
test
decl
ljmp
incl
popf
ret
movb
dec
cmpsb
add
imul
mov
scas
cmp
mov
js
jle
cmp
jmp
xchg
push
test
push
jmp
imul
and
xor
sub
jmp
roll
pushl
cmpsb
fistl
mov
and
mov
pop
ljmp
add
cmp
mov
mov
mov
mov
inc
shlb
outsb
or
adc
jl
divb
out
adc
push
or
ret
push
rolb
sarb
dec
leave
pop
cmp
sub
loopne
adc
push
mov
out
mov
mov
cmp
push
mov
gs
addr16
arpl
xchg
addl
mov
pop
cmp
xchg
cld
psubusw
pusha
pop
repnz
imul
lds
iret
jnp
or
in
mov
or
into
addr16
add
std
or
add
dec
fimuls
push
int
into
test
ret
xchg
inc
fmuls
fdivrs
push
pusha
pop
repnz
scas
cmp
mov
jo
jl
divb
adcb
addb
mov
inc
mov
or
mov
stos
addl
testl
in
jmp
sub
js
mov
leave
dec
ret
mov
imul
push
scas
dec
push
jno
jecxz
aaa
mov
and
jle
out
adc
sub
out
je
je
out
pop
lea
mov
es
imul
or
dec
push
test
push
lahf
push
enter
addr16
cltd
adc
cmc
gs
pop
faddl
mov
lea
xchg
jb
insl
sub
mov
xchg
adc
test
mov
sbb
lds
inc
push
xor
daa
add
arpl
fidivl
mov
inc
mov
fistps
test
jno
jecxz
orb
decb
sub
cmp
xchg
call
inc
arpl
pusha
pop
repnz
cmp
sbb
bound
push
aaa
ret
xchg
or
cmp
mov
sbb
adc
mov
cs
dec
mov
lahf
push
xchg
or
out
jl
idivb
movsl
es
cs
lret
dec
fnstcw
mov
and
xor
dec
insl
ljmp
xchg
lock
scas
sub
dec
fidivrs
frstor
jo
gs
pop
loop
dec
les
int3
imul
pusha
in
bound
lock
lds
lcall
jg
jge
testl
sub
push
lds
int3
inc
and
mov
and
repnz
pushf
outsl
lret
jae
in
sub
jl
jp
in
push
outsb
cmc
gs
adc
mov
jp
jnp
in
insb
bnd
xorl
adc
ljmp
hlt
push
cld
sbb
psubd
mov
adc
add
dec
out
or
in
mov
xor
testl
adc
add
imul
mov
sub
dec
fisttpl
fstpl
adc
dec
addr16
sbb
xlat
mov
cmpsl
ficomps
xchg
subb
aas
pop
test
nop
arpl
add
imul
mov
xchg
icebp
add
fcompl
call
pop
mov
ret
push
sub
lds
rcrb
stos
data16
orb
cmp
sub
jo
xorl
add
cltd
or
sti
imul
push
cmc
notl
ret
push
les
inc
and
sbb
mov
sub
movsl
xor
sbb
dec
ret
shl
data16
xchg
outsb
cmpsl
inc
aas
xor
enter
into
pop
repnz
fs
data16
xchg
outsb
in
jl
jne
xor
addr16
mov
cltd
sub
sub
adc
popf
or
out
jg
jmp
hlt
pop
fwait
add
mov
gs
xchg
cmc
add
jp
jp
in
imul
push
and
inc
daa
sarb
add
out
cmc
pushf
outsl
mov
cmp
xor
add
sub
pop
int
addr16
sahf
pop
dec
push
push
js
mov
lea
sub
mov
mov
cmp
ja
jb
dec
sub
test
jge
xor
pop
pop
ret
xor
inc
jmp
or
jmp
call
insb
sub
mov
out
jge
je
inc
fistl
mov
shll
dec
fmuls
fsubrs
adc
in
sbb
xor
sbb
loop
in
jle
cmp
icebp
popa
add
xor
inc
xlat
mov
lods
lods
mov
rolb
add
lds
iret
and
js
xchg
pop
and
and
push
or
pop
xchg
pop
bound
ret
hlt
js
mov
xchg
sbb
push
pushf
sti
push
mov
ds
out
in
jle
call
cs
add
sbb
adcb
addb
xchg
icebp
add
xor
hlt
jae
xchg
ret
arpl
xchg
gs
ja
xorb
jle
mov
cmp
mov
clc
outsb
or
sbb
mov
cwtl
jmp
roll
test
jbe
push
xor
mov
rep
pop
ret
call
arpl
push
les
mov
mov
pop
flds
add
lret
pop
ds
push
lds
iret
push
pop
int3
stos
movsw
push
ret
cmpsb
push
mov
add
inc
shlb
sub
cmp
mov
inc
push
inc
and
ss
hlt
xchg
outsb
xchg
add
mov
ljmp
mov
clc
outsb
or
xor
je
out
push
inc
lds
iret
and
icebp
sbb
jnp
in
adc
adc
xchg
or
imul
pop
in
std
test
int3
dec
pop
call
pushf
push
enter
sub
jns
sub
mov
rcr
fidivrl
sub
jb
sub
lds
xchg
adc
in
sbb
loope
notb
cmp
push
dec
int
and
add
ret
or
pusha
mov
ret
cli
popf
insb
mov
imul
or
lret
lret
jbe
cmpl
lahf
punpckhdq
arpl
addr16
and
push
lret
cmc
push
xchg
mov
mulb
pushf
outsl
les
mov
rcll
pop
mul
ja
xorb
and
nop
or
fisttpll
out
cmp
in
je
lea
mov
adc
inc
shll
mov
sbb
pop
xchg
add
mov
js
insb
mov
shlb
jbe
loopne
mov
fmulp
dec
fidivrs
sub
dec
pop
aam
sub
ljmp
aad
xlat
mov
lods
lret
inc
loope
mov
gs
inc
dec
lds
iret
jne
scas
mov
orb
out
aas
lods
cmp
adc
in
sbb
xchg
pop
xchg
repnz
mov
cli
outsb
cld
fwait
jbe
lds
mov
fadds
mov
mov
subl
outsl
mull
icebp
js
pop
repnz
fs
sbb
add
outsl
lcall
mov
cmc
gs
pop
test
repnz
ss
cmp
mov
fadds
mov
cmpsl
fs
push
pop
int3
stos
data16
fimuls
das
inc
les
int3
and
jbe
cmpl
push
test
push
sti
out
push
mov
in
mov
sahf
stc
or
push
rolb
sarb
jno
imul
adc
arpl
xchg
add
jbe
pop
repnz
fs
mov
xchg
icebp
jle
mov
icebp
add
xchg
sbb
push
pushf
sti
push
mov
add
imul
js
add
xor
pop
bnd
pop
enter
push
xlat
inc
and
push
mov
stos
sbb
mov
lret
cltd
push
and
mov
out
adc
pop
js
call
add
push
ljmp
jno
xorb
push
mov
dec
das
fidivl
jle
push
cld
jae
ljmp
ljmp
add
sub
mov
std
push
adcl
out
cltd
xchg
jecxz
push
hlt
add
out
fildl
mov
mov
call
fildll
ret
lods
mov
ret
xlat
mov
enter
mov
add
sbb
lret
fwait
sbb
mov
out
adc
cmp
push
roll
aad
jo
push
cmpsb
xor
scas
dec
adc
or
rcrl
xchg
addr16
scas
lret
dec
ret
ret
mov
jg
sub
sbb
dec
or
jle
jge
negl
leave
test
call
or
mov
mov
mov
and
and
dec
roll
shll
sbbl
call
jl
negb
ret
arpl
xchg
gs
jno
xorb
imul
test
fcomps
test
mov
mov
jle
jne
mov
inc
mov
movsl
push
mov
push
mov
dec
mov
es
rcrb
test
xor
push
lret
mov
xor
jo
cltd
or
pop
inc
roll
aad
mov
addl
add
sti
push
lahf
push
mov
xchg
cmp
add
pop
aas
lret
call
imul
push
addl
inc
rclb
sub
repz
imul
fisttpl
fisttpll
jno
xorb
arpl
jbe
push
testl
std
test
mov
sahf
stc
or
loope
notb
shlb
cmp
jge
pop
int3
stos
xchg
sub
aas
pop
test
cli
add
test
jg
push
xchg
pop
bound
jns
dec
adc
sub
dec
push
jmp
cmpl
je
jmp
ret
jmp
call
clc
rcll
mov
push
cld
add
lds
or
pusha
je
lea
lock
bound
add
sub
movsl
sub
mov
loopne
loop
je
xchg
sbb
inc
and
push
lcall
push
xchg
add
stos
cmp
sbb
push
xor
imul
sub
jle
imul
insl
test
jmp
push
in
or
pop
iret
stos
pop
lea
fnsave
push
leave
pop
cmp
dec
insb
icebp
popa
add
jbe
in
jge
idivl
push
ret
cmpsb
push
mov
and
jl
xchg
testb
in
out
outsl
lcall
movsb
ret
ds
xor
or
stos
daa
mov
and
icebp
jg
mov
pop
fisttpl
mov
xchg
repz
test
imul
test
sbb
mov
xor
pop
test
in
sbb
mov
sahf
mov
aad
xchg
cmc
lock
lret
movsl
aaa
cmpsl
ret
mov
mov
and
xchg
push
fldl
mov
lods
sbbb
jmp
imul
adc
and
xor
dec
leave
mov
mov
imul
insl
sbbl
fwait
sbb
les
int3
xor
aad
lock
add
negb
idivb
test
jg
mov
push
fisttpll
out
rcrb
test
stos
popa
in
jge
notl
dec
fistpll
shlb
arpl
xor
jns
je
lea
or
jbe
jne
out
inc
loop
ljmp
push
scas
pop
jl
jle
call
stos
pop
shlb
in
jne
mov
dec
inc
and
xor
ret
push
lds
inc
fisttpll
out
test
mov
sbb
push
xlat
inc
les
int3
and
mov
inc
mov
cltd
sbb
roll
shrl
js
ss
inc
mov
cld
jg
mov
pop
aam
sub
scas
lret
adc
mov
fwait
decb
insl
pushf
cmp
les
insb
out
adc
dec
std
insl
std
test
push
mov
jle
and
mov
imul
insl
ret
mov
push
xor
stos
lods
lret
inc
icebp
mov
nop
push
leave
pop
cmp
or
pop
leave
test
mov
addr16
gs
pushf
outsl
test
test
xor
sti
imul
xor
jo
xorl
adc
inc
lds
iret
sub
arpl
cmc
or
mov
nop
adc
in
sbb
or
stos
daa
mov
and
adc
cltd
pop
xchg
adc
dec
rclb
xor
push
shlb
repnz
into
inc
shlb
test
cmp
mov
pop
aas
lret
in
sbb
pop
aas
scas
cmp
mov
jnp
arpl
cmc
inc
add
add
cmp
dec
sub
outsb
mov
mov
mov
inc
mov
jae
jle
call
mov
push
xor
sub
mov
xchg
adc
sbb
test
add
xor
scas
cs
and
sub
cmp
jle
mov
pop
fimull
fidivl
jnp
addr16
or
or
in
mul
imul
adcb
xorb
mov
ljmp
cltd
push
out
sbb
adc
pop
and
or
mov
mov
and
inc
repz
cltd
push
mov
or
es
cs
gs
insb
or
in
sbb
add
std
or
jns
jne
out
push
add
adcb
orb
sub
push
int3
dec
ret
mov
movsl
inc
xlat
push
mov
jecxz
jne
out
adc
sbb
dec
sub
xor
adc
sbb
ds
insb
loop
je
jnp
pusha
pop
repnz
aas
lret
pop
int
addr16
mov
dec
mov
jecxz
mov
mov
jnp
jle
call
js
cmp
push
lahf
push
sbb
cmp
mov
push
xchg
repz
mov
sub
cmc
xor
rorb
cmc
mov
lds
ret
push
lds
ds
test
mov
mov
je
lea
or
push
lahf
push
bnd
lea
push
mov
fsub
pusha
notb
inc
and
and
push
xor
and
shl
insl
std
test
push
nop
push
popa
nop
aaa
xchg
pop
pop
mov
js
dec
fstl
mov
mov
mov
inc
mov
je
jp
in
pop
mov
mov
das
test
mov
inc
mov
jmp
push
jecxz
rolb
shlb
mov
leave
push
shlb
popa
nop
jp
stc
imul
cmp
mov
adc
insb
out
jl
idivb
jge
insb
or
out
xor
adc
addr16
adc
adc
push
lret
mov
ret
dec
int
and
cmp
je
cmpsl
sub
lds
jbe
cmpl
push
xor
cmp
shlw
ljmp
jp
jp
arpl
addr16
dec
sbb
mov
mov
sbb
and
fisubrl
jae
xchg
pusha
hlt
push
cld
dec
mov
lea
lock
jmp
out
jl
negb
dec
fnstcw
xchg
icebp
add
fwait
push
jns
imul
mov
sbb
gs
push
in
add
lret
imul
push
cmc
or
mov
adc
adc
ret
jnp
mov
cmp
bnd
jp
jno
outsb
or
or
push
lds
mov
shlb
mov
sbb
hlt
inc
jle
arpl
cmc
pop
ret
cmpsl
push
jecxz
sub
xchg
or
aad
sub
je
dec
frstor
xorb
roll
aad
fwait
add
mov
aam
add
pushf
mov
cltd
clc
or
hlt
jo
xorl
cmp
pop
repnz
fs
mov
scas
leave
cmp
push
sahf
or
cmpsb
inc
dec
lds
iret
ds
int
and
jb
loop
pop
loop
cltd
sbb
dec
frstor
js
aas
popa
repnz
pop
repnz
rcll
push
out
sbb
add
cmp
xchg
cmc
lock
lret
push
push
xor
jns
inc
shlb
shll
add
sahf
jl
mov
jg
pusha
push
test
push
mulb
cltd
lret
adc
add
mov
gs
xor
jg
mov
mov
mov
add
dec
fstpt
xor
adc
movsl
daa
mov
inc
mov
adc
cmp
jle
mov
and
aas
popa
clc
outsb
or
adc
aas
lret
mov
pop
lahf
mov
mov
xor
ret
call
and
mov
orl
sub
push
je
add
aam
fdivl
in
xor
filds
mov
cmpsl
sub
pop
jp
jg
pop
lret
scas
pop
mov
jge
je
pusha
popf
sbb
or
mov
pushf
sti
push
jecxz
out
jl
negb
in
gs
pushf
outsl
sahf
sub
mov
int3
ret
dec
fdivrs
loop
je
jecxz
loop
je
enter
dec
mov
pop
add
xor
and
add
jno
in
sbb
and
mov
xor
sub
push
lret
dec
fdivrs
mov
cmp
cmpsl
aaa
push
mov
xchg
xchg
sbb
aad
xlat
lret
mov
lods
jbe
insb
or
loop
inc
aad
dec
mov
inc
loop
dec
fdivrl
jl
divb
xchg
or
cmp
xlat
inc
fidivrl
mov
mov
js
and
ja
xorb
es
cs
jnp
mov
stos
cmp
inc
fimuls
and
cwtl
jp
cmp
mov
scas
lods
cmp
jge
je
add
test
cmpsb
outsl
pop
fimull
fidivl
out
outsb
cld
fwait
jbe
enter
dec
mov
mov
xchg
push
and
bound
shrl
rcrb
test
bound
push
xor
mov
sbb
fistpl
scas
pop
cld
adc
lock
xor
sbb
push
inc
roll
shll
cwtl
push
imul
cli
push
inc
mov
icebp
push
rcll
push
pop
shrb
pop
push
lret
lret
push
pushf
sti
push
hlt
mov
rorl
add
jns
aad
sub
pop
in
jno
xorb
nop
push
popa
nop
pop
inc
rclb
sub
ret
fwait
decb
sahf
insl
xchg
cmp
push
lds
insb
or
repz
push
imul
and
cmc
adcl
test
popa
icebp
nop
arpl
bound
lret
or
xor
nop
push
popa
nop
es
or
jl
jne
xor
mov
outsl
fadd
push
shlb
pop
scas
sbb
push
mov
call
repnz
pop
repnz
jg
mov
outsb
cmc
gs
adc
outsb
jmp
bnd
jbe
cmpl
arpl
xchg
gs
imul
insl
and
icebp
nop
arpl
or
rclb
pop
jns
xchg
testb
movsb
dec
in
cld
fwait
jbe
jp
addr16
sbb
mov
and
and
outsb
or
pop
lahf
adc
inc
mov
xorb
sub
push
jle
bound
std
test
push
les
int3
jge
scas
aas
pop
test
sub
push
aaa
mov
in
js
mov
inc
fisttpl
fnstsw
push
xor
xchg
repz
in
out
jbe
cmpl
int
and
cmp
jp
fldl
mov
lds
sub
xadd
mov
stos
add
ret
mov
movsb
and
mov
cltd
clc
or
pop
fimuls
adc
push
shlb
stos
xchg
out
loop
je
int3
inc
fidivrl
adc
jb
rcll
data16
cmp
jge
dec
fnstcw
ljmp
arpl
or
mov
ja
xorb
xor
int
lea
dec
sub
dec
inc
rolb
shlb
xor
lock
lahf
push
lea
test
push
cld
imul
add
xor
dec
push
jns
pop
leave
test
fisubs
stos
cmp
bound
aam
lret
mov
or
imul
insl
xchg
pop
fisttpll
out
ja
popa
add
add
rclb
sub
and
sub
stc
in
movsl
xor
mov
jge
popa
add
push
push
fmuls
fmuls
insl
mov
xchg
add
fisttps
push
std
adc
mov
sahf
xchg
xchg
adc
popf
xor
mov
js
ds
mov
fldl
mov
sbb
imul
lret
scas
pop
mov
xchg
add
jp
lods
cmp
call
and
sbb
or
icebp
popa
add
sbb
ret
fistps
stos
pop
cltd
push
rolb
rolb
mov
ljmp
stc
out
jl
fs
or
lahf
jg
ret
ret
or
pop
xchg
repnz
or
sub
pop
inc
leave
pop
cmp
outsb
xchg
or
insb
loop
je
adc
sti
push
lahf
push
sbb
cmp
movsl
or
xor
pop
lock
lahf
push
lcall
and
out
adc
push
repnz
loop
je
dec
roll
rcll
push
lds
inc
mov
movsb
and
and
mov
mov
inc
xchg
je
add
add
and
fstl
lods
pop
scas
in
gs
pushf
outsl
rcrb
scas
pop
mov
mov
mov
jg
sub
rcrl
popf
or
jecxz
push
in
lret
test
test
push
mov
xchg
add
jbe
cmpl
notl
jne
jo
loop
das
mov
cmp
add
pop
int
addr16
js
mov
xchg
or
push
ret
cmpsb
push
aam
xchg
add
adc
aad
sub
adc
popa
icebp
nop
arpl
push
mov
mov
lods
sub
outsl
lcall
out
jo
pop
fdivl
in
int3
inc
aam
dec
mov
andl
mov
loopne
adc
adc
push
xor
push
lods
jg
push
test
push
fdivr
jno
xorb
sahf
or
cmpsb
adc
pop
cmp
pusha
jp
js
ljmp
and
mulb
dec
rolb
mov
mov
das
lcall
scas
cmp
test
pop
test
xor
push
lea
push
lahf
push
and
push
lds
and
mov
and
cmp
mov
dec
mov
aas
lret
setg
or
inc
rcll
push
leave
push
ret
cmpsb
push
cmpsb
addl
repz
out
jns
mov
ret
dec
fidivrs
call
js
mov
or
es
test
fdivl
in
jns
push
cld
pop
fmull
mov
iret
stos
pop
into
mov
mov
dec
ret
std
jae
jnp
in
pop
ja
jbe
loopne
pop
int
and
bound
jns
jmp
xor
cmp
mov
xchg
or
cs
adcb
subb
xchg
cmc
add
pusha
std
insl
hlt
pop
sbbb
sub
adc
imul
mov
jle
mov
mov
mov
pop
int
addr16
shlb
xor
pusha
aam
iret
stos
pop
shlb
daa
inc
mov
adc
roll
mov
insl
std
test
inc
xlat
inc
and
outsb
mull
xchg
pusha
leave
mov
mov
cs
adc
cmp
add
jo
xorl
popa
xchg
je
out
imul
cmpsl
aam
mov
andl
andl
mov
mov
mov
mov
mov
mov
mov
ret
call
cmpsb
std
jge
je
dec
addb
repnz
adc
inc
rcll
and
lods
xor
mov
std
jge
je
dec
add
pushw
sahf
or
cmpsb
dec
cmp
fstps
xchg
addr16
jne
pusha
pop
repnz
jne
mov
sarb
into
sub
jbe
insb
or
loop
ljmp
stc
hlt
je
push
test
add
adc
in
sbb
stc
imul
sub
push
lahf
push
mov
jge
jns
jmp
test
out
sub
push
lds
daa
inc
mov
or
call
pop
int3
inc
and
punpckhdq
imul
mov
push
lahf
inc
call
outsl
adc
jbe
roll
aad
imul
pop
ljmp
dec
push
ja
call
orl
xchg
sbb
aad
adcl
das
fimull
jae
insl
hlt
pop
or
daa
out
push
add
leave
lock
xorb
mov
jns
pusha
mov
cmpsb
adc
call
mov
loope
adc
push
sub
sub
mov
add
jmp
pop
mov
cmp
loopne
lcall
ret
repz
xchg
gs
jb
xchg
xchg
push
mov
es
inc
add
cmpsl
pop
enter
popa
lds
mov
dec
adc
inc
push
out
call
shll
cmp
push
divl
xorl
leave
dec
add
xor
les
lock
in
push
lds
out
sbb
xchg
mov
call
mov
or
pop
cwtl
cltd
add
mov
call
adc
mov
je
lea
add
les
int3
jnp
mov
inc
mov
pop
repnz
fadds
mov
stos
int3
pop
lret
scas
pop
mov
clc
outsb
or
jg
pop
int
loopw
adcl
mov
aad
lret
scas
pop
mov
fstpt
xchg
add
insl
stos
xor
mov
dec
enter
and
mov
data16
cmc
adc
jge
notl
popf
adc
in
sbb
in
popa
icebp
nop
arpl
pop
cwtl
push
imul
in
bound
xchg
lock
subl
xchg
add
and
and
sbb
xchg
add
xchg
mov
adc
xchg
add
std
or
mov
loop
imul
insl
mov
xchg
jb
gs
pop
enter
adc
aam
fnstcw
sub
jo
popa
icebp
nop
arpl
mov
out
outsb
cld
fwait
jbe
je
pusha
pop
repnz
pop
sub
ds
test
mov
scas
lock
jp
push
add
or
push
mov
add
movzwl
lea
ret
call
push
loop
icebp
nop
arpl
mov
and
xor
cmp
je
mov
jmp
cmp
je
add
cmp
jne
xor
inc
ret
push
push
pushl
mov
mov
call
xor
jmp
call
mov
addr16
xchg
add
xor
insb
or
cmc
mov
lret
fwait
adc
mov
repz
test
sbb
and
scas
and
mov
inc
mov
and
and
sti
imul
dec
data16
gs
push
or
outsb
or
add
mov
repz
lret
lret
sbb
sub
sahf
adc
imul
insl
mov
or
stos
and
pusha
repnz
pop
repnz
and
and
cmpsb
xor
scas
pop
pushf
adc
pop
enter
lds
cmpsl
push
sti
or
cltd
or
in
mov
in
jge
divl
test
dec
aad
sub
aaa
pop
lret
pop
ds
dec
rolb
rclb
mov
js
push
adc
inc
lds
iret
and
jb
xchg
adc
insb
ljmp
mov
es
and
xchg
adc
int
daa
mov
out
add
inc
jge
xchg
testb
lods
dec
mov
mov
mov
xor
xor
ret
sub
xchg
testb
mov
pop
repnz
xorb
hlt
pop
imul
popa
icebp
nop
arpl
in
popa
icebp
nop
arpl
push
aam
jp
jp
or
insl
insb
or
scas
daa
mov
dec
mov
movsl
push
std
jb
jp
in
pop
jae
jp
in
inc
push
ret
ret
sbb
or
mov
int3
mov
mov
mov
inc
mov
fwait
or
sbb
push
roll
rcrl
ret
inc
mov
test
hlt
push
cld
adc
mov
inc
mov
cwtl
push
mov
es
jne
mov
fcomps
fs
xor
daa
inc
mov
xor
test
pushf
sti
push
hlt
sbb
in
jecxz
jne
xor
adc
dec
in
sub
rcll
push
push
lea
call
sub
mov
jne
xor
jmp
mov
mov
mov
test
je
test
jle
add
jmp
xor
jmp
fcoml
fwait
sbb
test
je
push
push
mov
test
je
cmp
jb
cmp
jb
lea
shr
push
pop
je
mov
mov
and
mov
cmp
jne
movzwl
and
add
lea
mov
add
inc
cmp
jb
add
jne
pop
pop
jmp
mov
std
in
rolb
ret
call
mov
clc
adc
out
pop
roll
shll
in
fs
popf
insb
mov
jg
mov
mov
cltd
pop
roll
roll
nop
push
ds
inc
mov
or
cs
push
lds
movsb
cmp
sbb
and
nop
and
dec
fdivrl
dec
sub
push
mov
mov
mov
inc
and
adc
js
ljmp
xlat
push
int
and
cmp
pop
subb
fwait
pop
insb
in
ds
in
jb
xchg
addb
testl
mov
test
daa
int
arpl
xchg
xchg
cmc
je
popa
add
es
xchg
cmc
add
movsb
inc
jns
call
mov
shlb
sub
jb
gs
adc
or
mov
sub
sti
jb
xchg
inc
int3
inc
and
fidivrs
aam
dec
mov
jp
jp
mov
mov
and
std
adc
test
in
sbb
in
jns
mov
fs
popa
add
pop
inc
inc
and
imul
sbb
out
mov
inc
mov
push
leave
pop
cmp
and
ja
xorb
push
shll
jecxz
cltd
gs
sbb
and
xchg
add
iret
pop
cmp
aas
les
mov
and
dec
fstpl
scas
pop
loope
sti
sahf
insl
sahf
addl
repz
out
pop
xchg
repnz
jns
pusha
pop
repnz
ret
xor
cmp
and
adc
lret
sbb
aaa
imull
jp
in
dec
rolb
mov
hlt
adcb
loop
mov
cmpsl
aaa
push
mov
cmp
xchg
adc
test
push
mov
aaa
cmpsl
ret
xor
mov
push
call
mov
push
call
xor
ret
call
outsb
hlt
push
cld
aas
daa
mov
scas
xor
add
adcl
jmp
push
in
inc
cmp
sbb
jo
xorl
and
add
add
adcl
mov
call
add
fists
mov
inc
and
jbe
cmpsl
aaa
push
mov
lds
fists
outsb
jmp
add
sub
mov
enter
dec
mov
cmpsl
push
aad
mov
inc
mov
call
sbb
mov
shlb
pop
repnz
jnp
mov
mov
fcmovnb
inc
aad
dec
movsl
adc
arpl
jle
call
xor
dec
mov
nop
testl
push
jae
xor
xchg
and
add
test
push
shlb
jmp
in
in
sbb
movd
fs
adc
mov
xchg
or
inc
fisttpll
out
loopne
adc
sub
mov
in
jae
xchg
sbb
roll
dec
mov
out
jg
jmp
mov
test
xchg
icebp
add
xor
pop
rolb
shlb
fildll
mov
add
add
fsubr
jl
jne
sub
push
jecxz
dec
ret
std
jb
jp
in
pop
push
xchg
pop
bound
imul
setg
or
stos
aaa
cmpsl
ret
dec
rolb
sarb
cmc
insb
loop
je
mov
cmpsb
adc
mov
mov
inc
xlat
mov
cmpsl
jle
insb
or
out
mov
call
inc
loopne
in
je
add
sbb
aas
jge
insb
or
out
ljmp
cmp
mov
mov
cltd
pop
fstpl
scas
pop
push
shlb
cmp
ds
pop
repnz
fs
mov
daa
lods
cmp
into
pop
cmp
and
rcl
enter
orb
sti
push
aam
jmp
push
in
dec
xor
insl
insb
or
scas
insl
add
mov
loop
ljmp
pop
repnz
test
xchg
adc
ljmp
sub
inc
and
cmp
add
or
or
jae
test
std
lock
in
sub
cld
xchg
cmc
add
mov
lret
movsl
int3
aas
fdivrs
push
mov
das
dec
mov
das
fidivl
mov
iret
fs
jge
notl
or
jo
outsl
or
hlt
sbb
and
cmp
jge
mulb
cmp
add
iret
pop
cmp
popa
sbb
aas
cltd
setg
or
mov
push
in
pop
aas
test
pop
test
mov
out
loopne
jb
add
filds
dec
scas
insb
hlt
push
cld
push
mov
mov
pop
int
loopw
cmp
xchg
add
pop
mov
shlb
xchg
add
test
pop
int
lea
mov
ret
jge
jo
loop
mov
jmp
sbb
fisubs
push
mov
push
push
mov
push
mov
push
mov
push
xor
mov
cmp
je
lea
push
push
pushl
lea
push
call
testl
je
xor
inc
jmp
jmp
sahf
adc
cltd
sbb
push
adc
add
lea
mov
add
mov
mov
mov
add
add
xor
xor
add
rorl
roll
mov
cmp
jb
mov
jmp
je
cmp
sbb
clc
jmp
je
lea
push
pushl
add
pushl
push
call
xor
pop
pop
pop
leave
ret
call
sub
fwait
or
sbb
inc
aad
dec
lret
or
push
cmp
divb
cmpl
cltd
or
jl
sbb
data16
add
aaa
dec
lret
pop
ds
mov
test
cmp
fsubrl
loop
pop
loop
xchg
add
std
or
gs
push
cld
push
ljmp
lcall
cmc
pop
cmp
add
inc
and
pop
cmp
adc
push
mov
cmp
mov
scas
cmpsl
lods
lret
inc
scas
lret
lods
pop
js
mov
and
and
das
lods
cmp
push
test
push
sti
mov
mov
loope
xchg
nop
testl
aam
int
pop
lret
scas
pop
test
sub
add
ja
push
dec
les
int3
imul
in
cltd
push
lods
pop
sti
pop
into
pop
cmp
pusha
jp
jg
jmp
mov
es
dec
mov
leave
cmp
dec
out
les
int3
jnp
push
pop
jo
aam
add
xor
mov
jns
insb
inc
into
pop
cmp
and
jb
mov
ljmp
push
cltd
or
ds
insb
loop
je
fisttps
push
std
push
rcll
jo
cmpsb
xor
scas
pop
arpl
imul
dec
outsl
clc
outsb
or
push
mov
sbb
fidivrs
adc
sbb
lret
pop
ds
push
popa
add
sbb
jo
xorl
out
push
aam
sub
add
jp
outsl
lcall
es
mov
or
sbb
je
ja
xorb
and
mov
enter
inc
mov
cmp
inc
xlat
mov
stos
mov
lods
mov
mov
xor
sbb
aad
lock
ds
test
mov
xchg
repz
test
ss
adc
sub
inc
and
outsb
ja
je
out
inc
and
cwtl
push
imul
mov
dec
mov
xchg
cmpsl
sete
insl
pushf
jle
pop
xchg
repnz
imulb
test
rorb
push
rcrl
push
xor
dec
inc
push
xor
pop
or
popf
and
and
out
notl
cmp
lock
add
ficomps
in
pop
mov
gs
jbe
mov
dec
push
xor
cmp
mov
out
outsl
loope
adc
and
xchg
add
mov
inc
mov
cmp
pop
xchg
add
adc
lea
mov
sbb
push
mov
sbb
aad
xchg
out
jp
jp
sub
sbbl
jmp
inc
and
hlt
xchg
outsb
xchg
ret
push
int3
inc
and
popa
add
cmp
adcb
subb
or
jb
jmp
push
in
push
divb
xorl
out
mov
mov
gs
pushf
outsl
test
pusha
notb
and
push
lds
pushl
cmpl
dec
fistpll
lret
mov
std
sbb
aaa
push
rcll
ja
mov
jns
jg
jmp
add
push
scas
aas
scas
lret
and
sbb
sahf
mov
mov
and
lret
pop
ds
pop
push
xor
and
mull
icebp
pop
mov
stos
es
popf
sbb
add
pop
fimull
fidivl
xor
rcll
lods
pop
mov
add
jne
mov
cmp
push
lds
xor
ss
daa
mov
and
mov
xchg
lock
and
add
xor
xchg
add
cmc
gs
pop
dec
fisttps
fsts
or
push
dec
test
mov
sbb
xor
jle
movsb
cmp
add
jge
pushf
setg
or
jmp
xchg
pusha
cmpb
in
push
xchg
or
in
cld
mov
mov
add
std
or
lea
and
inc
or
push
aam
sub
mov
fimuls
xor
notl
jp
insl
hlt
pop
in
pop
xlat
inc
and
sub
aad
sub
aas
repz
cmc
pop
movsl
sub
lds
jp
push
cld
pop
or
adc
push
addr16
add
roll
mov
stc
cmp
adc
push
lret
pop
ds
daa
mov
inc
mov
movsb
xor
mov
pop
mov
jg
sub
bound
movsb
inc
fisttpll
mov
and
cli
or
aad
sub
pop
rclb
mov
mov
es
scas
cs
and
jecxz
sti
sahf
insl
xchg
mov
lahf
cli
or
xchg
adc
jp
mov
fcmovne
inc
mov
mov
xor
lods
and
cmp
and
adc
rolb
in
cltd
push
ljmp
cmp
fisttps
push
std
outsl
std
insl
hlt
pop
mov
js
mov
xchg
xchg
adc
or
pop
stos
add
aaa
jae
jg
jmp
xchg
outsb
mov
dec
jmp
loopne
jb
mov
stos
ljmp
pop
enter
and
xor
mov
jg
insb
or
jecxz
das
mov
dec
fnstcw
ss
mov
fwait
jbe
xor
mov
shll
xchg
adc
out
gs
pushf
outsl
sahf
mov
scas
lret
ss
push
rclb
push
hlt
adc
cmp
test
in
lods
inc
shll
cltd
push
xorb
ja
xorb
pop
rorb
mov
push
xor
and
std
fwait
add
fisttps
fldenv
mov
js
push
out
insb
loop
je
popa
loop
pop
loop
xlat
push
lds
repz
jmp
jge
je
jnp
jb
xchg
aaa
mov
inc
mov
xchg
adc
stos
and
inc
shll
aam
dec
stos
add
ja
mov
loop
xchg
add
lahf
punpckhdq
mov
mulb
push
cld
insb
loop
je
cs
fimuls
mov
mov
aaa
cmpsl
ret
add
adc
faddl
mov
out
jno
fldl
dec
movsb
sti
imul
insl
in
mov
test
or
lock
sbb
loope
xchg
pop
bound
dec
mov
je
push
xlat
push
shll
mov
lods
out
fs
popf
insb
lahf
sbb
inc
int
and
xor
inc
and
and
dec
sub
jg
out
jl
mulb
imul
sbb
das
out
popa
icebp
nop
arpl
js
js
ljmp
jge
push
lds
decb
movsl
push
in
inc
and
ja
loope
adc
push
pop
int3
inc
and
nop
testl
push
cmc
adc
inc
xlat
mov
movsl
push
roll
aad
and
push
lds
ds
test
jmp
mov
cwtl
jo
out
jl
negb
xor
pop
fisttpll
out
pop
fimull
fimull
movsl
push
adc
or
jle
xor
mulb
sbb
pop
cmp
cmp
mov
xchg
xor
fs
popf
insb
mov
scas
outsl
jge
add
push
xor
pop
enter
popa
dec
fdivl
in
into
pop
int
addr16
lret
xchg
fs
rolb
sarb
dec
fdivrl
inc
daa
shlb
or
ljmp
stc
in
jp
jp
push
test
xchg
mov
popf
add
push
mov
in
jle
cmc
jnp
mov
stos
sub
adc
roll
roll
push
inc
and
sub
imul
adc
mov
aam
sub
adc
orb
cli
or
mov
nop
testl
xor
adc
dec
fdivrs
fidivrl
pop
and
arpl
mov
xchg
mov
fwait
mov
ficoml
cmpsb
push
cli
ljmp
xchg
or
cmp
xchg
add
push
mov
fdivs
jp
jp
filds
mov
enter
nop
arpl
mov
movsb
ret
mull
enter
scas
pop
mov
cs
ljmp
stc
stc
sbb
dec
push
inc
and
sub
pop
enter
pop
aad
sub
cs
fnstcw
mov
inc
mov
dec
lret
pop
ds
and
cmp
or
cwtl
dec
mov
decl
xchg
mov
ja
jnp
in
pop
sub
jmp
jmp
push
xchg
repz
cmpsl
push
rcll
jo
pop
into
test
frstor
pop
mov
add
cmp
filds
mov
add
sahf
jbe
mov
xchg
setg
or
or
or
mov
lods
clc
jg
mov
jno
gs
add
pop
iret
stos
pop
mov
pop
int3
stos
xchg
aaa
mov
inc
mov
push
fimuls
adc
push
mov
lret
pop
ds
imul
mov
xchg
jge
pusha
pop
repnz
clc
lahf
push
sub
aaa
push
mov
iret
cmp
mov
push
mov
lahf
cli
or
shll
and
cli
push
adc
sbb
jge
je
addr16
sahf
or
cmpsb
dec
cmpsb
cmp
adc
insl
std
test
mov
sahf
stc
or
cld
jge
je
insl
divl
mov
mov
cltd
clc
or
add
rcll
mov
mov
sbb
bound
repz
test
rolb
shlb
mov
sbb
mov
shlb
inc
daa
rclb
push
fmuls
fdivrs
sub
repnz
pop
repnz
es
inc
mov
jb
es
out
jo
jmp
adc
sub
add
xchg
add
sub
sbb
aad
mov
lds
pop
cmp
and
insl
std
test
xor
pop
fwait
or
push
enter
dec
mov
xchg
jp
xchg
add
das
mov
in
sbb
cmp
push
cld
or
fs
push
adc
mov
scas
lret
fists
lods
pop
mov
stc
hlt
rcrl
xchg
addr16
cmp
jg
daa
mov
and
sbb
push
lret
pop
ds
popf
push
pushf
sti
push
mov
push
in
dec
fstpt
ret
cmpsb
push
loop
roll
sarl
sub
lds
leave
pop
repnz
fs
mov
mov
sub
mov
fmull
mov
mov
sbb
lcall
aaa
mov
scas
add
sbb
xor
xor
dec
cwtl
sbb
push
aad
sub
sub
ret
jnp
mov
sub
xor
repnz
pop
repnz
ja
insb
or
cmc
xor
xor
test
mov
pop
int3
pop
int3
stos
data16
sahf
stos
cmp
or
in
mov
dec
jmp
jno
xorb
mov
inc
mov
lahf
or
insl
std
test
push
adc
je
lea
and
lea
and
lds
push
movsb
insl
jae
add
sbb
icebp
lods
sub
lds
add
mov
mov
aad
sub
sub
sub
setb
mov
sbb
pop
aad
sub
aas
repz
cmc
pop
lods
cmp
adcl
push
les
ss
mov
mov
inc
sub
imul
mov
mov
dec
frstor
movsb
push
in
imul
jb
xchg
mov
fwait
sbb
test
rolb
repz
lea
and
out
mov
sbb
or
cmpsb
outsl
xchg
adc
arpl
xchg
mov
jo
loop
inc
push
xor
xor
inc
daa
rolb
mov
mov
hlt
xchg
outsb
popf
adc
sub
jb
imul
fdivrs
lds
xchg
inc
enter
outsl
cld
outsb
cld
fwait
jbe
hlt
gs
pushf
outsl
les
mov
mov
fwait
jbe
aad
shlb
mov
cmpsb
xor
scas
or
les
xchg
addr16
insl
std
test
leave
push
mov
mov
sbb
pop
fldenv
call
mov
cmp
sub
inc
shlb
nop
testl
cwtl
imul
adc
imul
insl
add
fistpll
sbb
push
int3
sub
fwait
sbb
cwtl
push
imul
in
sbb
dec
jns
jns
jmp
jbe
jnp
in
inc
adc
dec
fmuls
fdivs
adcb
xorb
mull
icebp
push
test
xchg
adc
push
repnz
insb
or
fstpt
and
stc
sub
mov
in
sbb
jmp
stc
aad
lds
inc
mov
dec
int
and
cmp
pop
mov
out
adc
scas
cmp
mov
stos
cs
xchg
or
je
dec
fdivrl
lods
lret
inc
movsb
out
data16
xchg
outsb
mov
jo
xorl
popa
enter
xor
and
xor
data16
cmp
movsl
xor
adc
xor
push
ret
cmpsb
push
loop
jae
xchg
inc
roll
shll
inc
and
jns
push
xchg
repz
int
mov
jb
js
ljmp
bswap
push
shlb
or
jp
sub
mov
aaa
mov
dec
mov
sbb
or
mov
jmp
xorl
daa
int
mov
js
jp
insb
loop
je
jae
imul
or
push
ss
sbb
add
inc
sub
insl
push
cltd
or
repz
in
in
jg
xor
dec
fimuls
dec
adcb
jecxz
scas
cmpsl
xor
cmp
in
bound
cmp
outsl
std
data16
xchg
outsb
mov
rorb
sub
xor
sbb
jp
jnp
in
insb
jmp
mov
call
dec
mov
in
movsl
and
movsb
ret
ds
cwtl
insl
jge
outsb
or
adc
inc
and
and
pop
iret
stos
pop
test
daa
jb
imul
pop
cmp
jno
ret
push
lds
inc
iret
pop
cmp
adc
jbe
jg
arpl
cmc
inc
mov
mov
and
mov
sub
insl
sbb
inc
inc
and
ja
adc
in
sbb
in
out
jo
aas
stos
cmp
push
daa
xor
aaa
scas
cmp
mov
stc
gs
pushf
outsl
ljmp
das
mov
inc
mov
jb
addr16
pop
inc
rcll
sub
jp
jp
fwait
and
xor
pop
adcl
in
sbb
pushf
sti
push
in
setg
or
loop
clc
lahf
push
movsl
sub
lds
sti
jnp
mov
mov
shll
and
jbe
cld
xchg
cmc
add
clc
push
lahf
push
sbb
aas
aas
lods
cmp
xchg
add
cmp
hlt
xor
dec
fisttpll
out
inc
xlat
inc
and
js
inc
shll
call
add
les
int3
and
adcl
mov
inc
mov
and
xor
scas
movsl
es
cs
pop
fmuls
fdivs
add
sbb
outsb
inc
ret
ret
inc
fidivrl
lret
scas
pop
scas
sub
xor
ss
aam
dec
lods
xor
sub
cmp
pop
sub
push
rcrl
fs
pop
leave
test
fwait
dec
fnstcw
adc
cwtl
push
imul
jnp
mov
rorl
mov
and
sbb
cwtl
cmpsl
xor
jl
jne
inc
mov
ret
sub
sub
xor
push
add
jbe
add
cltd
xor
xor
mov
inc
mov
fwait
or
add
mov
adc
cmp
adcl
or
nop
push
popa
nop
jb
adcl
test
pop
enter
std
popa
icebp
nop
arpl
fldl
mov
lds
xor
scas
and
mov
arpl
pop
test
pusha
xchg
outsl
push
xchg
pop
bound
adc
int3
sub
call
aas
dec
int3
inc
and
int
addr16
pop
jp
bound
adc
pop
imul
adc
sbb
mov
pusha
call
xor
pop
rolb
shlb
repz
cmc
daa
push
xchg
add
push
xchg
sbb
aad
sbbl
and
xor
or
mov
dec
mov
mov
out
out
adc
pop
cltd
push
pushf
sti
push
mov
test
xchg
add
adc
in
sbb
in
jne
mov
xor
call
repnz
pop
bnd
jne
mov
dec
lret
lret
popf
or
fs
popf
insb
test
lret
inc
and
das
add
fmuls
fsubrs
jg
orl
cli
or
je
test
in
lock
mov
aad
leave
test
decb
push
cmp
sbb
in
aaa
cmpsl
ret
pop
leave
pop
cmp
jg
in
sbb
inc
ds
cmp
mov
data16
gs
push
ljmp
lcall
lea
ljmp
mulb
mov
inc
les
int3
and
fisttps
fsts
ret
ret
xchg
add
jne
into
pop
cmp
and
inc
and
sbb
dec
inc
iret
pop
cmp
jo
push
mov
es
push
mov
jle
and
xchg
adcl
adc
inc
roll
sarl
in
bound
pop
aas
lret
pop
stos
push
add
lret
dec
fimuls
dec
pop
int3
inc
and
call
and
adc
je
mov
popf
add
std
or
inc
fistpl
popf
or
dec
fstpt
lret
scas
pop
mov
sub
lds
addl
testl
ret
or
dec
into
pop
cmp
and
pop
bound
lea
sbb
mov
js
insl
sub
xor
sub
sbb
inc
xchg
icebp
adcl
test
lods
and
adc
mov
sub
pusha
sar
insl
std
test
pop
call
mov
mov
test
pop
cmp
sub
fs
sub
ds
test
mov
movsb
ret
ds
fcoml
mov
jp
in
push
inc
enter
sub
pop
xchg
repnz
adc
sub
in
jge
divl
mov
xchg
cmp
cmp
cmp
fwait
or
sub
sub
adc
add
ja
loope
lret
pop
int
addr16
ja
xorb
xchg
or
pop
mov
mov
out
jl
negb
ljmp
and
lcall
fdivrl
sbb
or
jnp
push
fs
popf
insb
xchg
mov
nop
enter
push
mov
xchg
jns
push
xor
cmp
loopne
fcoml
pop
mov
ret
xor
idivb
mov
add
push
jns
dec
loop
std
test
xchg
add
cmp
add
aas
scas
cmp
mov
sbb
cmp
mov
std
insl
hlt
pop
mov
fstpt
lock
xor
push
ret
cmpsb
push
mov
sub
jge
jp
in
add
xor
lcall
loope
jae
jae
add
sbb
mov
test
int
jb
xchg
fwait
sbb
aad
xrelease
xchg
lock
mov
lods
dec
lret
pop
ds
adc
or
cmp
les
int3
aas
jg
addr16
pop
xchg
lahf
cli
or
xlat
pop
leave
test
fwait
rcrl
fs
loope
loope
jae
xchg
add
jae
xchg
adc
mov
mov
and
out
inc
cltd
adc
sti
imul
pop
outsb
hlt
push
cld
aas
pushf
add
mov
les
je
rclb
inc
jnp
jp
in
imul
add
mov
jo
xorl
flds
into
dec
fidivrs
cmp
mov
loop
hlt
xchg
outsb
fwait
push
rolb
sarb
mov
int
mov
cltd
pop
xchg
adc
pushl
cmpl
mov
jns
das
dec
fidivrs
addr16
cmp
ja
xchg
push
sbb
aas
call
in
mov
jnp
jno
jecxz
add
mov
iret
push
mov
and
js
rclb
sub
fcomps
stos
pop
sbbb
test
loope
cmp
aad
sub
xor
imul
or
sbb
js
jb
xchg
cmc
add
ret
cmpsb
push
xchg
fs
cmp
scas
cmp
mov
lods
cmp
fmull
movsb
push
cld
insb
cld
xchg
cmc
add
sub
inc
rolb
shlb
pushf
xor
or
and
xchg
addr16
mov
sbb
sbb
insb
cmp
adc
push
lret
lret
push
pushf
sti
push
xchg
in
hlt
xchg
outsb
cmpsl
jecxz
notb
xchg
cld
pmulhw
jle
mov
jnp
inc
bnd
cmpl
pop
int3
stos
data16
gs
push
and
dec
rclb
and
leave
pop
cmp
cmp
fs
pop
xchg
sbb
aad
lock
xchg
es
xchg
add
std
or
test
mov
mov
das
pushf
mov
andl
aas
lret
xor
jecxz
push
in
xlat
push
ret
cmpsb
push
nop
gs
insb
or
in
scas
cmp
mov
clc
notl
sbbb
jmp
mov
leave
push
pop
fisttps
fldcw
mov
stos
jge
and
cmp
dec
jge
imul
popf
in
ret
ja
loope
sbb
cli
jo
xorl
in
mov
xchg
lock
pop
aad
sub
ficoms
mov
dec
sub
or
js
mov
in
pusha
notb
insl
hlt
pop
mov
and
cmc
inc
stos
cmp
and
setg
or
lcall
fistpll
jnp
in
sub
push
les
mov
and
insb
sti
imul
adc
jno
xorb
sti
imul
jl
mov
dec
mov
add
pop
add
jnp
push
popa
icebp
nop
arpl
sub
lock
lea
pop
jp
jg
xchg
pop
bound
loope
add
add
sti
imul
sbb
arpl
xchg
xchg
pusha
pop
repnz
inc
in
add
xchg
cld
pmulhw
mov
inc
xlat
mov
enter
jp
sahf
and
mov
jle
arpl
mov
mov
and
in
add
or
in
loope
and
lcall
mov
sbb
out
divl
lret
stos
into
cmp
dec
mov
add
aaa
sbb
adcb
xorb
stc
imul
and
movsl
inc
roll
sarl
xor
addr16
pop
cmpsl
xor
adcl
test
and
jmp
nop
cwtl
add
insl
std
test
out
out
mov
enter
pop
fisubrl
jg
jmp
fsubrs
rcrl
mov
mov
xor
inc
push
xor
sbb
popa
icebp
nop
arpl
mov
xor
fisttpl
fnstsw
xchg
sbb
scas
cmp
mov
xchg
sbb
push
xor
sbb
insl
fists
cmpsl
push
cmc
or
scas
cmp
mov
in
out
jle
mov
les
pushf
cwtl
push
pushf
sti
push
cmpsl
cltd
push
pushf
sti
push
mov
jecxz
inc
fisttpl
fnstsw
push
xor
add
jmp
ss
sahf
in
and
add
int
gs
pushf
outsl
xchg
sti
jl
jne
push
inc
rclb
xor
test
mov
cs
push
mov
mov
jnp
in
sbb
dec
sub
inc
pop
nop
push
popa
nop
inc
das
mov
lahf
adc
pop
int
addr16
pop
enter
sub
test
and
notb
ret
loop
stc
cwtl
imul
lock
repz
cmc
xor
xor
push
stc
mov
scas
aas
pop
test
mov
ljmp
fwait
jbe
fisttps
mov
mov
sbb
fsubrs
sahf
adc
jne
jge
divl
cs
insb
hlt
push
cld
push
int3
pop
lret
scas
pop
mov
or
mov
add
dec
inc
and
sbb
push
mov
mov
xchg
or
push
xor
dec
jmp
ljmp
pop
stos
pusha
fistps
mov
pop
ds
and
xor
ss
inc
mov
pop
adcl
xchg
jb
addr16
fisubrl
ficomps
scas
pop
mov
out
imul
stos
cmpsb
call
divl
xorl
bound
into
es
lods
lret
inc
mov
pop
into
test
mov
and
fucomp
ds
loopne
cmp
mov
inc
mov
popa
out
adc
cmp
jne
mov
call
fwait
fs
jl
testb
or
xchg
add
jbe
mulb
or
and
mov
pop
cmp
or
mov
js
cs
pop
push
push
mov
sub
push
xor
cmp
je
mov
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
lea
jmp
movb
inc
mov
decl
test
jne
mov
dec
cmp
ja
jmp
mov
push
push
add
jmp
mov
push
push
pushl
mov
call
ss
push
lea
push
call
add
mov
push
pushl
lea
push
push
call
lret
call
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
add
push
pushl
lea
push
push
call
pop
pop
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
push
lea
push
call
lea
push
call
lea
push
mov
add
push
lea
push
call
in
add
push
pushl
lea
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
jmp
mov
push
push
add
push
push
call
aaa
xor
jmp
xor
inc
pop
leave
ret
mov
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
push
adc
push
adc
push
adc
push
adc
mov
add
or
jle
imul
inc
sub
cs
push
xor
sub
popf
or
xchg
add
popa
in
bound
mov
add
xchg
xor
fmuls
fcomps
sub
je
bound
mov
and
pop
iret
stos
pop
loopne
out
jg
jmp
fwait
add
sahf
clc
insl
std
test
dec
fmuls
fsubrs
pusha
notb
ret
xchg
mov
mov
push
mov
es
clc
notl
mov
ret
push
iret
pop
cmp
push
mov
stos
into
cmp
call
push
rcrb
test
stos
mov
lcall
loope
jecxz
jne
jb
insl
hlt
pop
mov
out
pop
push
xlat
add
jo
add
pop
int
loopw
icebp
popa
add
jbe
in
jge
idivl
mov
scas
sub
sub
lods
je
clc
fildl
data16
and
scas
and
cmp
jo
insl
hlt
pop
shl
outsl
lcall
sub
movsb
cmp
sbb
add
fisubrs
mov
mov
punpckhdq
cmp
pusha
test
hlt
push
mov
pop
loop
add
lret
les
int3
dec
das
mov
inc
mov
mov
scas
outsb
out
jl
negb
lret
mov
punpckhdq
scas
pop
lea
lret
push
jp
andb
insb
rcll
cmpsl
push
mov
jnp
mov
fcomps
xchg
addr16
adc
jp
jp
lods
and
inc
arpl
jle
call
in
lock
iret
pop
cmp
and
mov
add
inc
roll
shll
lock
push
pop
lds
iret
push
dec
fisttpl
fnstsw
cmc
jae
xchg
jb
jns
jmp
cmp
sbbl
popf
sbb
es
cmp
inc
push
les
xor
inc
les
mov
mov
mov
add
into
pop
cmp
ficoms
pop
scas
and
cmp
mov
dec
mov
push
scas
pop
mov
fwait
cltd
push
test
push
lret
ds
test
or
pop
jb
sub
lcall
mov
hlt
push
cld
dec
scas
lods
lret
inc
out
inc
fisttpl
outsb
cld
fwait
jbe
cld
push
ljmp
lahf
push
outsb
hlt
push
cld
aas
jmp
insb
mov
mov
gs
xchg
cmc
add
jle
jbe
loopne
inc
jecxz
push
in
pop
jecxz
push
in
movsl
es
cs
je
push
cld
adc
push
shll
dec
mov
mov
cltd
inc
push
xor
cmp
sahf
or
cmpsb
dec
jp
call
out
adc
test
and
jae
call
mul
jg
mov
stc
pusha
notb
mov
nop
testl
lds
push
pop
fdivl
in
jno
jecxz
ret
mov
cs
mov
pop
lods
pop
jmp
pushf
test
mov
and
outsb
jmp
push
in
or
int3
orl
decl
stc
movsb
sub
mov
gs
inc
mov
lods
mov
xchg
insl
hlt
pop
mov
btc
mov
out
pop
lcall
adc
xchg
add
sahf
aaa
clc
insb
loop
je
mov
xchg
setg
or
fldl
mov
lods
and
lds
mov
test
mov
sbb
fcoms
lock
xorb
lret
pop
ds
out
cmc
pushf
outsl
mov
dec
sub
sbb
push
cld
sub
dec
sub
adc
jns
mov
imul
adc
sbb
push
mov
cld
xor
in
and
mov
push
call
call
test
je
push
call
jmp
call
mov
leave
adc
std
pop
addr16
imul
dec
mov
mov
sbb
inc
repnz
pop
enter
dec
fdivl
in
sbb
or
mov
cltd
add
aaa
lods
and
push
or
jno
xchg
add
sahf
jbe
loopne
adc
addr16
fisttpl
fstpl
ret
popf
xchg
push
test
push
divb
mov
dec
mov
pop
scas
dec
int3
dec
fdivrs
stos
into
cmp
scas
pop
scas
pop
fimuls
push
add
je
insl
hlt
pop
out
cltd
or
jge
sahf
or
cmpsb
push
mov
nop
testl
dec
mov
scas
pop
cltd
push
fisttps
flds
sbb
mov
roll
mov
incb
mov
ret
jo
xchg
add
sahf
aaa
push
in
and
push
push
xor
call
sub
stc
or
jns
ficoml
cmpsb
push
cli
sbb
sbb
pop
repnz
cmpsl
and
and
inc
aad
dec
cmpsl
mov
mov
pop
jp
adc
mov
mov
or
pusha
loopne
adc
or
dec
roll
aad
jb
imul
sub
mov
jg
jg
cmpsl
aaa
push
mov
out
sbb
push
fisttps
flds
loop
pop
aam
sub
xchg
adc
jg
cmp
adc
punpckhdq
shll
xchg
imulb
sahf
insl
ret
push
lds
xor
mov
repnz
sbb
call
inc
mov
movsl
xor
jl
jne
add
fwait
or
sbb
dec
ret
popf
rclb
mov
scas
leave
cmp
rclb
mov
punpckhdq
mov
xchg
mov
mov
insb
loop
je
repz
mov
mov
ja
loope
mov
nop
testl
loope
mov
roll
aad
mov
icebp
jns
push
cld
pop
dec
fisttps
fsts
mov
inc
mov
mov
mov
sbb
fidivl
nop
push
popa
nop
and
mov
dec
mov
cmp
popa
das
mov
leave
push
shll
push
movsb
inc
inc
fisttps
outsl
test
imul
dec
sub
pop
dec
into
pop
cmp
pop
pusha
loope
adc
or
inc
and
aaa
sbb
push
fisttpl
frstor
pop
lret
jmp
jge
stos
sub
arpl
jg
jmp
xor
sub
in
jge
notl
push
test
lock
push
xor
pop
xchg
adc
xchg
push
mov
es
ljmp
lods
cmp
mov
cmc
insl
cld
xchg
cmc
add
push
push
xor
jg
adc
mov
mov
cs
mov
test
mov
mov
inc
mov
pusha
clc
outsb
or
adc
jl
negb
test
mov
sbb
cmp
fistl
test
mov
or
in
cld
adc
loop
cli
popf
insb
xchg
jg
outsb
or
das
divl
xorb
call
sbb
bound
inc
and
sbb
hlt
je
lea
clc
outsb
or
sbb
in
adc
data16
xchg
outsb
mov
push
jmp
mov
xchg
pop
and
cmp
lret
pop
ds
mov
enter
and
lcall
imul
les
popf
in
mov
or
lea
movsl
xor
lods
and
add
and
js
sbb
out
adc
or
sahf
jbe
inc
call
xor
into
jns
js
mov
pop
mov
jle
dec
popf
push
xchg
repz
in
mov
and
and
cli
adc
inc
fistpl
and
lock
mov
add
in
jge
idivl
jmp
push
in
add
inc
mov
test
mov
jg
outsl
mov
aad
scas
cmp
mov
arpl
jne
out
sbb
cli
hlt
jle
mov
xlat
and
loop
clc
lahf
push
scas
and
sub
cmp
push
fisttps
fldenv
scas
or
and
push
push
divb
cmpsb
xor
scas
pop
loop
loope
jae
scas
cmp
add
mov
mov
and
xchg
push
into
pop
cmp
adc
jge
or
mov
leave
fisttpl
mov
xchg
cld
jp
xor
cmp
repz
xorb
ljmp
punpckhdq
test
mov
sub
or
adc
mov
dec
fidivrs
adc
mov
in
sbb
push
ja
push
xchg
pop
bound
out
sbb
and
mov
test
into
push
push
pop
xchg
adc
in
push
mov
jbe
loopne
mov
mov
and
sahf
pop
jns
jo
loop
out
jne
mov
stc
imul
or
sbb
jno
xorb
xor
int
cmc
sbb
mov
stos
mov
and
negb
das
fisubl
adcb
adcb
clc
lahf
push
mov
stos
int
aam
mov
xchg
push
mov
les
cld
push
sbb
mov
inc
mov
repz
jne
push
jmp
cmc
pushf
outsl
scas
popa
in
bound
lcall
lods
pop
cmc
sbb
and
cwtl
push
imul
and
jo
xorl
imul
sub
add
or
and
cmp
test
jge
or
adc
push
inc
lret
pop
ds
add
movsl
sub
outsb
cld
fwait
jbe
pop
fimuls
sbb
cs
cmp
pop
fwait
push
mov
es
sti
ja
xorb
mov
jle
imul
lcall
popa
in
jge
notl
add
mov
jg
dec
ficoms
mov
dec
sub
dec
sub
dec
jmp
ss
lods
lret
inc
out
cltd
or
sbb
sbb
and
jo
out
adc
dec
mov
out
stc
lock
bound
sbb
jmp
xchg
outsb
xchg
xchg
xor
cmp
or
clc
jns
mov
push
add
push
std
push
movsl
and
pusha
notb
fdivrl
sub
push
jecxz
lcall
repnz
xor
xchg
adc
repz
jp
pushf
adc
sbb
addr16
rcrl
stos
shl
in
jle
cltd
or
and
popa
lock
pop
fwait
adc
pop
leave
test
lock
or
or
lret
lret
jae
xchg
filds
mov
mov
sbb
popa
nop
pop
sbb
adc
push
mov
cwtl
decl
ret
test
ret
add
jp
xor
cmp
sbb
jle
mov
xchg
popa
xchg
imul
or
hlt
ret
dec
fnstcw
shlb
xorb
push
test
push
lret
fwait
decb
das
fidivrl
fldt
xor
or
adc
xor
adc
adc
sub
inc
shll
movsl
int3
aas
lcall
sub
push
sbb
mov
js
popa
mov
mov
mov
or
pop
mov
scas
push
rolb
shlb
iret
xor
outsl
or
rcrb
mov
or
lahf
sbb
cmpsl
aaa
push
mov
std
or
cld
jnp
mov
rorl
push
bnd
je
push
int
xlat
mov
lea
mov
loop
out
jo
call
rol
push
mov
cmp
add
arpl
cmc
inc
repnz
insl
ret
or
sub
push
cld
pop
outsl
sti
imul
cmp
push
xor
sub
insb
xchg
repnz
cmpsl
dec
rolb
rclb
lret
lret
test
jge
ficompl
scas
pop
mov
in
bound
in
mov
arpl
add
add
sbb
mov
lods
mov
mov
mov
nop
sbb
jmp
iret
inc
xlat
mov
call
xchg
dec
cmc
jg
mov
jecxz
cld
fwait
jbe
pushf
push
pushf
sti
push
mov
subl
sbb
scas
aas
pop
test
movsl
jmp
jmp
call
cmp
push
xor
data16
clc
outsb
or
dec
lret
xchg
gs
xchg
repz
mov
iret
push
in
sbb
fwait
decb
stc
or
add
xchg
pop
bound
xor
cmp
lods
inc
lods
xor
loope
adc
add
aad
sub
and
ret
adc
cltd
sbb
aad
int3
xchg
sbb
lock
mov
inc
enter
sub
pop
int
addr16
mov
xchg
icebp
add
aaa
loope
int
and
pop
mov
test
std
insl
hlt
pop
mov
leave
pop
cmp
pusha
add
ljmp
cltd
sbb
sahf
or
cmpsb
fs
jbe
cmpl
loope
adc
push
ds
inc
mov
movsl
cmp
cmp
adc
fisttps
mov
inc
mov
nop
or
cs
inc
shll
daa
inc
mov
and
mov
mov
xor
dec
ret
popf
push
add
jno
jecxz
adc
out
adc
aas
lret
add
ss
mov
psubd
inc
lds
iret
and
into
add
aam
testl
lcall
ds
insl
std
test
aas
mov
dec
mov
or
mov
push
jmp
jmp
call
das
and
lea
mov
sbb
aas
mov
mov
loope
jmp
jle
mov
mov
scas
rorl
mov
mov
cmc
mov
add
daa
inc
mov
jge
push
cld
mov
xchg
lahf
cli
or
cmp
in
lcall
mov
sbb
add
push
xor
addr16
lds
iret
jl
out
adc
inc
pop
int
and
cmpsl
xor
pop
and
mov
add
call
add
pop
int
addr16
inc
into
pop
cmp
xor
sahf
or
cmpsb
inc
or
sbb
js
cmpsb
xor
scas
or
ja
loope
push
cmp
js
add
shll
sub
dec
std
jno
xorb
sbb
mov
mov
pushf
inc
rolb
shlb
cmp
mov
add
mov
mov
and
cmpsl
adc
fdivl
in
sti
insl
std
test
loop
in
jg
mov
mov
ret
push
lds
rorl
mov
and
pop
jmp
xchg
popa
call
int
add
inc
mov
scas
mov
lods
jne
push
cld
sbb
gs
add
jecxz
xlat
inc
and
sub
insl
in
sbb
push
mov
test
cmp
in
imul
insl
sbb
xlat
pop
iret
stos
pop
rcrb
sub
or
inc
and
sbb
push
xor
imul
xor
stos
call
repz
jae
xchg
loopne
hlt
xchg
outsb
nop
cmp
jp
jp
and
in
jge
testl
fdivrl
fistl
mov
jg
jmp
add
aaa
push
mov
dec
mov
jl
sub
jae
in
pop
int
and
jl
adcb
xorb
lcall
cmp
sbb
lods
cmp
jo
xorl
pop
stc
sahf
add
std
or
sbbb
call
dec
sub
std
test
lods
xor
jl
jne
add
icebp
dec
iret
pop
cmp
aas
ds
lods
xor
jo
xorl
adcb
sub
xor
insl
hlt
pop
in
push
fisttpll
out
lea
xchg
repz
in
cmpsb
cs
or
call
sbb
xchg
add
push
pop
aad
sub
jp
sbbb
or
cmc
call
roll
sarl
fistps
scas
pop
test
in
sbb
xchg
cld
psubsw
lods
cmp
pop
lret
scas
pop
cld
jmp
cli
popf
insb
mov
inc
lea
or
mov
popf
sub
imul
xor
in
ljmp
lea
sbb
cmc
notl
rcll
sti
inc
fistpl
mov
leave
jb
js
ljmp
icebp
inc
fistpl
lea
lret
lret
xchg
jb
cmp
mov
and
cmp
xchg
mov
out
adc
cmp
shl
data16
xchg
outsb
xchg
sbb
add
fwait
jnp
mov
add
shlb
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
add
add
jb
gs
inc
popa
jae
cs
insb
add
dec
gs
gs
inc
popa
jae
cs
insb
add
movsb
jo
add
jo
add
jo
add
add
add
add
push
jno
add
jo
add
add
add
add
jb
add
or
add
jo
add
add
add
add
add
add
add
add
jno
add
add
lock
add
jno
add
jno
add
add
add
add
je
fs
jo
gs
dec
outsb
outsw
add
dec
dec
push
inc
push
dec
cs
dec
dec
add
lar
outsb
inc
insb
imul
add
add
jo
jns
insb
imul
add
insl
add
je
insb
imul
inc
popa
je
add
inc
add
outsl
jae
inc
insb
imul
add
clc
add
jae
popa
addr16
outsl
js
add
add
jo
imul
push
inc
push
xor
cs
insb
add
mov
gs
outsl
insb
fs
popa
je
inc
add
push
dec
inc
dec
dec
xor
cs
insb
add
add
jae
xchg
sub
sub
or
adcl
test
and
mov
mov
mov
js
dec
cmc
outsb
cld
fwait
jbe
mov
and
jne
out
add
push
cltd
sub
xor
and
mov
xor
sub
notl
rclb
mov
adc
pushf
xor
jae
sub
aaa
cmpsl
ret
or
xchg
and
icebp
repz
cmc
pop
pop
aam
sub
insl
hlt
pop
mov
movsb
jo
insl
std
test
xchg
sbb
xor
mov
xchg
test
neg
dec
ret
std
xchg
add
int
and
jl
test
sbb
in
sbb
ljmp
sbb
sbb
push
mov
push
aam
jnp
mov
stc
jns
mov
mov
rcrb
icebp
dec
lret
lret
mov
dec
mov
ret
ds
pop
test
enter
and
inc
and
push
cmp
das
ret
dec
fnstcw
test
cmp
imul
push
lahf
punpckhdq
dec
mov
stos
pop
sar
jecxz
jne
hlt
gs
pushf
outsl
icebp
notl
in
jl
jne
sub
fsts
jmp
push
in
inc
pop
roll
aad
xor
pop
in
jbe
cmpl
dec
fdivrl
fnstcw
out
jno
adc
sbb
or
les
sub
js
mov
dec
enter
and
fcom
push
mov
pop
bound
or
or
mov
xchg
jle
add
mov
cmp
push
fmuls
fsubrs
dec
lret
pop
ds
jo
xor
jo
xchg
testb
shlb
shlb
mov
icebp
out
jge
je
sub
push
lahf
push
adc
sbb
sbb
das
and
sub
movb
mov
loopne
clc
notl
jns
jne
out
push
pop
xchg
repnz
test
arpl
jbe
loopne
mov
enter
lods
pop
mov
shrb
push
mov
cmc
pushf
outsl
cwtl
mov
jecxz
lcall
adc
mov
xchg
adc
pop
mov
xchg
adc
xchg
pop
lea
xchg
repnz
pop
xlat
inc
and
js
mov
mov
lahf
pop
roll
aad
cmp
sbb
mov
sahf
setg
or
push
loope
das
mov
lcall
repz
gs
mov
push
mov
mov
jp
inc
rclb
or
sti
adc
jae
out
adc
or
pop
ds
divb
xorb
push
mov
scas
lret
aam
int3
stos
xchg
xchg
sbb
aam
repnz
fs
shll
and
mov
lock
and
push
lret
sahf
mov
xchg
xchg
push
xchg
repz
mov
pop
mov
sub
dec
fidivrs
lods
lret
inc
testl
mov
and
sbb
pop
int
addr16
inc
fidivrl
add
jnp
sbb
insb
or
addl
mov
stos
int
aam
jmp
add
sbb
or
fs
ljmp
xor
push
mov
rcll
aam
xchg
add
sahf
jl
cmp
mov
mov
test
xchg
sbb
add
add
cs
leave
mov
ss
mov
bound
jae
cwtl
xchg
sub
mov
fwait
push
cmp
aam
push
addr16
outsl
sbb
dec
ficompl
cmc
mov
push
pop
aas
xchg
ret
or
pop
and
nop
xor
xor
notl
mov
movsl
mov
xlat
pop
xchg
sub
cmp
xchg
movsb
jge
jbe
imul
je
icebp
inc
popf
jo
fs
and
sub
and
negb
popa
imul
mov
cmp
pop
stc
into
mov
push
or
or
hlt
inc
orl
insb
shrl
or
mov
js
xchg
mov
arpl
insl
jmp
add
push
pop
shl
cmpsb
ja
clc
jmp
dec
or
inc
push
mov
in
pop
sbb
cltd
lea
lahf
adc
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
or
or
or
or
add
add
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
add
add
or
or
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lldt
adc
adc
adc
adc
adc
adc
adc
adc
add
add
ljmp
call
fiadds
adc
fiadds
adc
fiadds
adc
filds
adc
filds
adc
filds
adc
push
adc
filds
adc
push
adc
push
adc
push
adc
push
adc
push
adc
add
and
adc
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
sbb
or
cmp
sub
ds
push
push
push
cmp
adc
sub
sbb
or
sbb
or
add
add
or
or
movups
adc
or
add
sbb
add
or
sbb
clts
sbb
or
sub
push
and
ss
das
sub
es
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
and
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
adc
and
adc
and
add
add
add
and
adc
and
add
add
add
add
adc
add
add
and
adc
and
adc
add
adc
and
add
and
adc
and
add
add
add
add
adc
and
add
and
add
add
add
add
add
add
add
and
adc
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
addb
and
add
add
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
add
add
add
and
add
add
add
and
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
inc
add
add
add
or
add
inc
add
add
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
inc
add
or
add
add
add
inc
add
add
add
add
add
or
add
inc
add
or
add
add
add
inc
add
or
add
add
add
or
add
inc
add
or
add
add
add
add
add
add
add
add
add
inc
add
or
add
add
add
and
add
add
add
inc
inc
and
add
adc
add
adc
and
add
add
and
inc
inc
add
add
adc
add
adc
inc
add
inc
add
add
add
adc
add
add
add
add
adc
and
inc
add
add
add
inc
add
adc
add
adc
inc
and
add
add
add
adc
add
inc
inc
and
inc
add
add
add
inc
inc
and
add
and
inc
add
adc
add
adc
inc
and
inc
inc
add
inc
inc
and
add
adc
add
add
and
add
add
and
add
and
inc
add
adc
add
adc
and
inc
inc
add
add
adc
add
inc
inc
and
add
add
add
adc
add
add
add
add
adc
add
inc
add
adc
inc
add
inc
add
add
add
add
and
add
and
add
adc
and
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
inc
adc
add
add
inc
adc
adc
add
add
add
inc
add
add
add
inc
adc
add
add
add
add
inc
adc
add
add
inc
add
add
add
inc
add
adc
adc
adc
add
add
add
inc
add
inc
add
add
add
inc
adc
add
add
inc
add
adc
adc
adc
add
add
add
inc
adc
add
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
adc
adc
add
add
add
inc
add
inc
add
adc
add
add
add
inc
adc
adc
add
add
add
add
add
add
add
inc
adc
add
add
inc
add
add
add
add
add
addb
add
and
or
or
xchg
testl
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
add
or
or
or
or
add
add
ljmp
sbb
push
adc
push
adc
jmp
push
adc
jmp
push
adc
push
adc
add
add
add
scas
aam
pop
sti
addl
mov
movzbl
add
jmp
dec
lds
iret
sbb
push
xor
das
dec
mov
outsl
leave
cmp
je
popa
mov
jmp
cmp
add
pop
leave
test
lock
push
outsl
std
insl
hlt
pop
mov
ret
ret
add
popa
popl
jmp
mov
mov
out
adc
inc
loope
jmp
jge
mov
add
and
cmp
jne
jmp
test
shll
sub
jp
movsb
cmp
dec
ret
fistps
stos
adcw
or
bound
jmp
insb
hlt
push
cld
push
scas
xor
adc
mov
jmp
aam
fdivrs
jp
in
imul
cmc
jbe
cmpl
popa
mov
ret
lods
sub
lds
ret
mov
movsb
jb
push
cld
add
adc
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
sub
cltd
push
sbb
jl
jmp
lahf
sbb
inc
fidivrl
mov
das
lds
inc
and
and
push
jmp
and
pop
int3
stos
data16
mov
add
push
sti
push
in
call
dec
push
dec
dec
push
inc
push
dec
cs
dec
dec
add
nop
push
cld
fadd
jmp
ljmp
pop
xchg
repnz
inc
lret
inc
and
jmp
mov
test
cmp
pop
ljmp
outsl
pusha
rcll
and
jmp
mov
movw
jmp
jne
add
jmp
test
mov
sbb
xchg
addr16
fmuls
mov
stc
cwtl
imul
loop
out
popa
jmp
movzbl
jmp
ret
push
lds
or
mov
divl
add
add
call
jmp
xor
and
pop
cli
popa
icebp
nop
arpl
mov
pop
and
cmp
jmp
mov
inc
pop
jmp
xchg
or
stc
imul
mov
sbb
pop
lret
scas
pop
mov
push
lea
push
pushf
addl
pusha
jmp
pushf
jmp
sub
jmp
sahf
push
mov
es
mov
cmpsb
mov
in
je
jmp
out
notb
fdivrl
dec
sub
adc
inc
or
andb
sub
jo
mov
jmp
pop
scas
stos
jbe
ret
jmp
ret
mov
out
jo
cwtl
adc
jne
mov
icebp
and
jmp
mov
rol
ret
repz
inc
int
and
pop
stos
in
popa
mov
ret
int
mov
out
pop
pop
inc
mov
jmp
cmp
jmp
or
or
cmpsb
adc
jb
xchg
jb
jo
loop
stos
cmp
mov
jmp
cmp
popa
jmp
inc
inc
and
outsl
add
cmp
jno
xorb
ret
ret
lret
je
jmp
mov
jmp
push
add
xor
outsb
cld
fwait
jbe
test
aad
into
rcll
addl
mov
movzbl
add
jmp
jmp
and
push
lds
das
popl
lea
jmp
cmpsl
aas
scas
lret
cs
inc
mov
in
hlt
xchg
outsb
cmpsl
xor
dec
cmpsb
push
jmp
and
xor
push
shll
decb
fisubrs
add
xchg
popf
pushl
jmp
push
rolb
rolb
sub
inc
rcll
sub
jmp
jnp
xchg
sbb
sahf
or
cmpsb
inc
nop
pop
in
mov
or
andb
sub
jo
jmp
nop
push
mov
subl
je
push
call
push
jmp
adc
mov
cltd
or
pop
leave
test
lock
sldt
add
add
add
jb
fs
ret
jmp
dec
jecxz
push
in
adcb
loop
mov
call
push
push
inc
push
xor
cs
insb
add
nop
mov
shll
mov
sub
jmp
mov
xchg
mov
cltd
or
sbb
add
rolb
inc
and
jbe
rcll
add
pusha
notb
dec
incl
jmp
adc
mov
add
adc
jbe
cmpl
sub
add
mov
sbb
cltd
sbb
jecxz
push
in
dec
roll
aad
lds
call
jmp
jmp
mull
icebp
sbb
movsl
popf
lcall
adc
jmp
test
nop
testl
enter
add
cmp
jmp
pop
jecxz
push
in
inc
iret
pop
cmp
and
repnz
pop
repnz
mov
cs
call
inc
fcmovb
xor
jmp
ljmp
or
gs
sub
jmp
int3
inc
shlb
and
jge
addr16
cmp
addl
pusha
jmp
mov
jae
ja
loope
add
add
lea
lea
jmp
setle
cmpsb
ud2
or
cs
jmp
ret
pop
lret
scas
pop
ljmp
ljmp
mov
jg
sub
fs
pushl
jmp
mov
mov
pushf
jmp
lret
or
sub
jmp
xchg
jmp
sete
insl
pushf
jle
repz
cmc
sbb
push
lahf
push
and
popa
jmp
mov
add
jmp
pop
xchg
adc
pusha
out
jbe
cmpl
aad
or
mov
jmp
out
mov
jmp
mov
cmpsl
ret
lret
mov
and
icebp
pop
adc
sar
inc
adc
dec
enter
ss
mov
jmp
jmp
adc
sub
add
add
lea
jmp
das
test
pop
test
mov
stos
into
cmp
nop
arpl
add
push
lret
dec
jmp
cli
jo
xorl
lea
add
xchg
jecxz
adc
jno
lods
stos
pushf
jmp
jmp
jnp
imul
pop
sbb
ret
mov
mov
add
cmp
je
jmp
aaa
mov
pop
call
push
push
inc
push
xor
cs
insb
add
nop
and
sub
lods
push
push
jmp
mov
or
xchg
fisttpl
mov
scas
lret
jmp
add
dec
gs
popa
addr16
outsl
js
add
int3
mov
negb
sub
jmp
mov
mov
xchg
pop
bound
shlb
xchg
push
push
js
pop
jmp
lcall
lcall
add
add
mov
lea
ret
jmp
inc
fimull
fidivrl
push
mov
inc
and
pop
adc
pusha
jmp
jecxz
jmp
addl
jmp
imul
pop
repnz
out
pop
jmp
sub
sbb
ret
add
insl
hlt
pop
cmpb
dec
roll
aad
fstpl
stos
mov
and
cmp
jne
addl
mov
jmp
mov
stos
into
cmp
mov
jmp
jmp
ficompl
test
mov
sub
pushf
sbb
add
loopne
push
lret
test
addr16
fimuls
testb
jmp
add
jg
jmp
in
imulb
mov
add
inc
mov
lods
mov
mov
and
jmp
push
jmp
stos
and
rolb
shlb
lea
mov
pop
mov
push
lcall
and
adc
out
adc
pop
jb
sub
movsl
ss
cmp
add
xchg
scas
mov
movl
jmp
adc
dec
fisttps
fsts
push
pop
out
cmc
sub
add
pop
mov
addl
jmp
and
pop
pusha
push
sub
add
xchg
popf
pushl
jmp
scas
cmp
mov
jmp
push
inc
jbe
jmp
cmp
push
pop
les
int3
paddd
sahf
insl
mov
dec
fistpll
imul
mov
jmp
call
stc
adc
add
ja
push
cld
adc
jle
jmp
xchg
xchg
repz
out
hlt
push
cld
sbb
xchg
jb
jno
mov
jmp
mov
call
add
and
fisttpll
out
rclb
lods
pop
mov
loope
mov
jmp
mov
popa
sbb
jmp
adc
addb
jmp
cmpsl
sub
lds
rorl
dec
mov
cmpsl
aaa
push
mov
ud0
lea
jmp
lcall
or
mov
inc
subb
push
inc
cmp
jmp
push
pop
jp
inc
bnd
mov
gs
xor
mov
and
cmp
jne
addl
jmp
nop
add
movzbl
add
jmp
xchg
or
hlt
push
cld
dec
inc
inc
and
ja
es
cs
sub
jmp
add
lea
pop
enter
outsl
and
aas
mov
ret
in
in
je
inc
imul
add
adc
jg
mov
popa
jmp
dec
roll
sarl
jb
bound
dec
das
ficompl
push
ds
int3
dec
fdivrl
pop
cmp
into
test
lret
lods
push
pusha
mov
mov
mov
andb
sub
jo
jmp
add
and
icebp
popl
lea
push
pushf
jmp
or
lods
sub
xor
notl
mov
and
clc
dec
mov
add
mov
shll
or
js
xor
xor
int
fwait
sbb
add
add
sub
jmp
test
pop
test
push
pop
sub
mov
movl
jmp
jbe
push
adc
stc
imul
movl
jle
ret
arpl
fs
out
adcl
test
outsb
cld
fwait
jbe
aad
fidivrl
jecxz
call
jmp
mov
mov
and
mov
aas
popa
incl
popf
ret
sub
push
lds
fisttpl
cmpsl
movzbl
jmp
push
shlb
cmp
jmp
xor
cmp
mov
sbb
insb
sahf
push
xchg
repz
in
insb
fbld
inc
and
jmp
jmp
cwtl
stc
gs
pushf
outsl
ljmp
je
in
sbb
or
add
push
push
inc
push
xor
cs
insb
add
nop
call
in
imul
push
xlat
inc
and
push
cwtl
sbb
mov
dec
mov
movsb
out
mov
add
aaa
inc
push
pop
dec
pop
jmp
push
mov
jmp
sbb
hlt
jb
xchg
cli
adcl
test
je
jmp
mov
cmpsl
ret
loop
adc
push
mov
lds
lds
pushl
jmp
inc
adc
les
int3
and
adcl
mov
mov
mov
jmp
inc
iret
pop
cmp
xor
imul
xor
das
mov
xchg
jmp
inc
into
pop
cmp
adc
mov
jmp
mov
add
pop
add
add
push
xor
addr16
push
xchg
repz
mov
xchg
cmp
mov
inc
mov
pop
roll
aad
in
adcl
test
and
sub
inc
test
dec
cmp
out
in
push
fs
popf
insb
lds
mov
mov
aad
adcl
mov
imul
dec
fstpt
ret
cmpsb
push
mov
subl
mov
fisubrs
cmp
jmp
mov
popa
jmp
adc
ljmp
imul
jl
adcl
or
pop
or
sub
cmpl
add
jmp
pop
fimuls
push
gs
push
in
add
jl
jne
popa
ret
int
je
jmp
lret
rolb
add
jmp
jge
imul
imul
sub
popf
or
fcomi
jmp
mov
ret
jmp
pushf
cmp
dec
xchg
sbb
aad
sbb
popl
lea
jmp
nop
sbb
inc
shlb
fidivrs
push
push
cmpsl
push
jmp
pop
aam
sub
xor
pusha
arpl
jl
notb
adcl
jecxz
popa
sbb
sub
jo
mov
and
cmp
jmp
push
mov
jle
and
inc
shlb
pushf
addl
pusha
jmp
in
jmp
jge
sub
les
pop
jmp
mov
cwtl
call
push
push
inc
push
xor
cs
insb
add
insb
jno
je
out
inc
jecxz
in
jg
adc
xchg
mov
jmp
cmpsb
xor
movsb
ret
ds
fs
call
dec
gs
popa
addr16
outsl
js
add
adc
outsl
lcall
xor
dec
add
push
push
jmp
pop
jmp
inc
fisttpll
out
fs
imul
cs
mov
xor
xor
xchg
jmp
out
xor
ja
fwait
xchg
jmp
cmc
jbe
cmpl
cld
xchg
cmc
add
push
pushf
sti
push
repz
insb
dec
roll
jmp
adc
inc
and
jmp
scas
das
mov
daa
mov
and
in
notl
mov
movl
les
mov
cmpsl
in
gs
pushf
outsl
sahf
js
popa
add
adc
stos
popa
jmp
add
xor
add
jo
fisttpl
dec
push
xor
push
fmuls
sub
mov
movl
jmp
cmp
add
jmp
push
fisttpll
out
daa
stos
cmp
or
scas
sbb
test
inc
and
popf
ret
ljmp
add
add
dec
cmp
cmp
pop
jp
and
stos
icebp
mov
dec
std
pop
jmp
pop
lret
lret
rclb
imul
pop
jmp
push
shll
xorb
inc
mov
and
scas
fnstsw
mov
add
add
add
add
jmp
cmp
xor
call
stos
xor
mov
jns
sysexit
stos
cmp
sub
ret
or
dec
fidivrs
xor
scas
inc
loope
notb
and
mov
mov
shll
jnp
jle
jmp
pop
inc
and
cmp
adcl
loope
adc
adc
jl
jne
and
fwait
or
dec
ljmpw
pop
rolb
shlb
jno
xorb
mov
inc
mov
xchg
add
jmp
shrl
mov
scas
aas
scas
lret
lret
pop
int
rolb
inc
and
jns
les
int3
jne
les
loopne
cs
sti
imul
jl
and
jae
xchg
push
xlat
inc
and
aaa
sub
int3
push
ret
cmpsb
push
mov
push
les
mov
sbb
mov
call
mov
jmp
cli
jo
xorl
mov
xchg
pushf
sti
push
repnz
sub
add
fdivl
in
mov
repnz
repz
cmc
push
test
push
lds
iret
test
mov
sbb
inc
mov
inc
aam
sub
in
mov
jge
cmp
jbe
loopne
mov
test
push
fnstsw
mov
and
push
popf
or
and
ljmp
stc
xor
loopne
jb
clc
jns
mov
push
roll
sarl
fstps
test
shlb
adc
push
adc
inc
push
xor
movsb
cs
es
add
xchg
popf
pushl
jmp
pop
rolb
shlb
lock
mov
out
std
test
or
ficompl
scas
pop
xor
push
lds
shlb
xchg
les
stos
cmp
sbb
inc
xlat
mov
out
cmp
repnz
icebp
nop
arpl
cli
insb
loop
je
push
lret
pop
ds
clc
insb
loop
je
inc
rolb
shlb
push
lds
dec
mov
adc
or
dec
sub
cld
fwait
jbe
mov
rol
aad
dec
test
fimull
lcall
cltd
or
jl
push
xor
xor
jmp
ret
xor
jb
xchg
sbb
fwait
adc
mov
gs
jo
push
test
push
in
dec
lds
iret
push
pop
into
test
mov
cmpsb
shll
imull
sahf
insl
mov
adc
sbb
cmp
mov
cmp
js
sbb
sub
in
sbb
sub
fs
xchg
cmc
add
dec
fisttpl
fnsave
cmpsb
cmp
mov
jne
gs
xor
pop
xchg
repnz
dec
leave
pop
cmp
and
ret
jnp
in
adc
xor
add
jp
jbe
cmpl
test
jge
jg
xchg
pop
bound
es
aam
repz
gs
pop
xchg
pop
bound
mov
nop
sbb
jns
push
cld
pop
ret
mov
push
mov
jb
pushl
ja
loope
pusha
lock
inc
mov
mov
and
mov
sti
push
mov
jnp
push
rcll
data16
outsb
cld
fwait
jbe
enter
push
mov
movsl
xor
fwait
or
jae
daa
mov
and
rolb
inc
and
ja
loope
movsb
and
lret
mov
pop
cmp
sub
je
lea
or
in
loope
call
xchg
sbb
xchg
sbb
xchg
add
sahf
jp
dec
fidivrs
lcall
mov
movsb
cmp
outsb
loope
loop
je
mov
test
xchg
add
cmp
mov
push
les
int3
cmp
ret
push
lds
pusha
notb
cltd
push
les
neg
inc
shlb
mov
and
cmp
pusha
notb
mov
cld
jle
mov
inc
mov
stos
sub
jl
jne
popa
rcll
lods
pop
mov
mov
jp
in
notb
in
jg
mov
lods
lret
inc
movsb
pop
xchg
add
insb
loop
je
in
clc
lahf
push
fldl
pop
or
dec
xor
xor
popf
pushl
jmp
inc
roll
aad
inc
enter
or
mov
js
cs
insl
std
test
pop
enter
popa
aam
fidivrl
cltd
clc
or
push
out
push
mov
push
jno
aaa
mov
mov
andl
and
adc
rorl
mov
insb
or
cmp
ljmp
dec
lret
lret
mov
push
xlat
inc
and
cmp
jne
mov
sbb
stos
cs
fimuls
push
jmp
xchg
mov
xchg
repnz
xor
mov
enter
jnp
xor
mov
icebp
iret
inc
shlb
in
jle
add
add
sub
sti
imul
push
mov
rorb
mov
punpckhdq
mov
jo
loop
test
mov
les
lods
cmp
cwtl
push
imul
cli
push
enter
add
jno
xorb
fisttpl
fnsave
or
jno
gs
add
dec
sub
ds
test
call
fwait
aam
int3
stos
xchg
fistl
mov
jg
jmp
push
mov
xor
jecxz
in
notl
orl
sti
push
mov
mov
inc
mov
fmuls
mov
add
jge
je
sub
xchg
pop
bound
lods
pop
cmc
cmp
add
push
aaa
ret
je
lea
loop
pop
loop
xor
pop
xchg
or
aam
sub
ret
sarl
xchg
cmc
add
adc
jbe
adc
pop
leave
test
mov
clc
push
or
sbb
pop
xor
pop
xchg
adc
mov
nop
testl
shll
ret
mov
sub
cwtl
push
imul
jbe
cmpl
pusha
notb
gs
dec
mov
mov
sbb
inc
icebp
loope
out
jo
add
xchg
or
push
lds
add
fstpt
push
xor
lcall
outsb
popf
jae
pop
lret
scas
pop
fdivl
scas
cmp
mov
mov
jmp
fdivl
in
xchg
xchg
repz
out
fs
popf
insb
mov
add
push
and
xor
xchg
add
jnp
cmpsl
aaa
push
mov
mov
int
xorl
dec
les
int3
imul
adc
xor
aad
sub
pop
cwtl
sbb
sub
lds
push
rclb
imul
jo
sub
mov
dec
out
fimuls
push
imul
or
mov
sbb
push
lret
lret
arpl
xchg
mov
sbb
arpl
jo
xorl
cli
jge
inc
shlb
pop
cmp
and
rclb
mov
xor
pop
xor
sbb
pop
jecxz
push
in
imul
adc
sbb
gs
pushf
outsl
out
data16
xchg
outsb
mov
dec
fstpt
aas
pop
test
mov
shlb
cli
or
or
out
adcl
test
xchg
add
std
or
cltd
or
in
sbb
pop
jp
ds
mov
and
dec
jmp
rolb
rclb
mov
int
adcl
call
inc
fimuls
popa
stc
data16
xchg
outsb
jmp
loope
or
jle
xlat
inc
and
aaa
lods
sub
lds
cmp
inc
sub
aas
mov
dec
iret
pop
cmp
aas
mov
into
add
je
jnp
mov
pop
roll
shll
sub
xor
add
adc
pop
rolb
rclb
dec
fnstcw
add
inc
mov
sahf
push
xchg
add
sahf
das
adcl
out
mov
mov
mov
call
sbb
jmp
and
ret
push
lds
cwtl
add
jecxz
push
in
fldl
dec
movsb
movsl
cmp
pop
repnz
fs
cmpsb
xor
scas
addr16
or
adcl
fstpt
je
lea
mov
ficomps
scas
pop
scas
xchg
nop
testl
enter
in
bound
je
out
or
into
fistpl
scas
pop
cld
adc
jno
xchg
testb
mov
es
dec
mov
mov
inc
sub
insb
pop
leave
pop
cmp
pusha
jae
jnp
in
pop
pop
nop
push
popa
nop
cmp
lods
and
add
jae
xchg
cmp
cmp
xchg
or
ljmp
stc
out
lock
cld
fwait
jbe
mov
mov
jmp
lods
cs
mov
stc
js
mov
divl
xorb
imul
nop
push
popa
nop
gs
je
out
push
xor
les
movsb
push
mov
or
imul
insl
cwtl
pop
roll
shll
notl
fs
add
das
mov
sub
lds
inc
incb
xchg
add
sahf
aaa
mov
mov
and
ja
icebp
imul
insl
fcompl
pop
and
jb
int3
inc
and
or
cmpsb
inc
icebp
outsl
lcall
mov
test
es
cs
les
jecxz
push
in
sbb
mov
rcr
pop
into
test
sub
inc
movb
inc
cwtl
fs
adc
adc
into
sbb
dec
les
int3
or
push
popf
or
setg
or
test
and
adc
or
ljmp
je
pop
leave
pop
cmp
js
xchg
add
cmp
popa
icebp
nop
arpl
sti
insb
loop
je
push
insb
or
mov
mov
in
in
mov
js
imul
cmp
mov
dec
roll
sarl
std
popa
icebp
nop
arpl
cmpsl
aaa
push
mov
leave
cmp
push
rolb
sarb
and
fstpl
adcl
lock
daa
push
aam
sub
shll
gs
push
stc
jb
xchg
pop
aam
sub
popf
in
out
arpl
xchg
les
or
sub
aaa
div
js
mov
cwtl
or
outsb
cld
fwait
jbe
pop
leave
pop
cmp
js
add
std
or
adc
jne
jo
loop
popa
sti
imul
dec
mov
mov
and
pusha
xchg
push
jno
js
ljmp
jle
lea
repnz
pop
bnd
adc
in
sbb
jmp
mov
pop
std
icebp
ja
xorb
mov
lahf
pop
mov
xchg
ficomps
scas
pop
scas
jl
outsl
or
out
push
jecxz
push
in
ds
pop
aad
sub
cmp
push
std
or
inc
and
adc
push
jp
fs
cmp
push
lahf
push
lds
lods
pop
jmp
movsl
xor
mov
les
scas
pop
bnd
jne
out
pop
mov
mov
es
xchg
add
and
je
jl
divb
repnz
push
roll
aad
cltd
add
aas
mov
roll
inc
mov
jno
xorb
outsl
lcall
pop
cmp
sub
std
add
or
xor
jp
insl
hlt
pop
in
je
lea
jl
jne
ss
and
addr16
or
test
insb
loope
adc
xor
in
jmpw
jmp
jnp
jg
jmp
add
pop
stc
outsl
lcall
aad
dec
in
sbb
in
sbb
les
jmp
out
jg
jmp
sahf
insl
mov
ret
mov
xchg
mov
inc
fisttpll
out
leave
dec
fnstcw
add
jp
dec
fstpt
jl
notb
aam
shlb
xlat
and
imul
add
add
lods
pop
inc
and
sub
push
pop
inc
and
cmp
adcb
xorb
lds
lret
adc
push
imul
jb
xchg
sahf
adc
out
jg
jmp
push
movsl
or
pop
lret
scas
pop
ljmp
add
mov
out
adc
inc
jl
jne
out
ljmp
and
pop
add
or
sbb
adc
xor
sbb
inc
rclb
sub
das
scas
aas
pop
test
gs
inc
js
xchg
cmc
add
fistps
scas
pop
mov
jge
je
jbe
loopne
adc
add
jbe
loopne
int3
dec
fstpt
mov
sbb
adc
popa
nop
push
pop
fisttpl
fnstsw
inc
daa
shlb
outsb
or
push
jns
jg
jmp
dec
mov
push
cmpsl
adc
jp
jp
xchg
add
or
inc
aam
dec
lea
repz
into
pop
cmp
cmp
sub
mov
cltd
push
xchg
repz
mov
in
jb
addr16
pop
mov
rorl
mov
jns
insl
pop
fimull
fisubl
adc
in
sbb
xchg
adc
fsubs
xchg
gs
pop
repnz
fs
xor
pop
roll
shll
test
dec
fdivrs
lock
bound
repnz
xchg
lret
pop
iret
stos
pop
rcrl
mov
jo
test
xchg
and
and
sbb
stos
cmp
sbb
mov
leave
push
shll
dec
mov
mov
sub
cmpsb
xor
scas
sub
cmp
or
insb
loop
je
cmpsb
xor
scas
inc
nop
pop
xchg
adc
inc
ret
ret
aas
scas
lret
jb
fs
or
stos
movsb
cs
push
lahf
push
rcrb
scas
pop
mov
xchg
data16
adc
adc
jecxz
std
test
hlt
jg
mov
insb
insb
or
mov
in
sbb
inc
or
mov
cmpl
hlt
pop
lods
stos
lods
lret
inc
icebp
sub
cs
dec
mov
cmp
xor
xor
add
enter
dec
mov
mov
jb
xchg
rclb
mov
je
out
push
jbe
gs
sbb
out
ds
jbe
pusha
pop
repnz
mov
cmpsb
shll
hlt
jle
mov
xchg
bound
fwait
jge
mov
inc
mov
pop
aad
sub
jp
sbb
arpl
xchg
mov
shlb
sub
psllq
xchg
pusha
leave
jnp
jns
jmp
lods
cmp
mov
in
movsl
xor
jno
xorb
sahf
or
cmpsb
adc
pop
cmp
outsl
jp
jbe
loopne
cmp
dec
imulb
fwait
jbe
int
lret
mov
xchg
mov
mov
stos
jb
add
cmp
jle
call
insl
pushf
je
lret
lret
ret
push
lds
mov
cmpsl
push
cmpsl
mov
cmpsl
ret
jns
popa
add
add
imul
sbb
dec
sub
cmp
inc
mov
mov
push
xchg
repz
test
inc
xchg
xor
add
test
jp
jle
call
mov
push
xchg
add
sahf
das
dec
fimuls
dec
leave
pop
int
addr16
inc
shll
and
mov
ss
in
jbe
cmpl
sub
adc
xor
jbe
cmpl
cs
cmp
jb
xchg
imul
sbb
add
jg
mov
add
jg
xor
int
jmp
hlt
push
cld
or
jle
mov
mov
push
xor
sub
call
loope
jecxz
jbe
cmpl
lods
cmp
pop
xchg
adc
xchg
sbb
aad
andl
decb
xchg
jb
es
fisttpl
inc
fidivrl
cli
popf
insb
frstor
sbb
mov
cmc
gs
pop
sbb
mov
ret
scas
pop
mov
mov
lods
xor
cs
je
lea
push
lret
mov
xor
sub
fisttpl
frstor
push
adc
in
notl
mov
pop
jp
jne
fisttpll
out
cmp
popl
xchg
repnz
push
ret
and
mov
cwtl
imul
jno
xorb
push
les
cli
popf
insb
fnstsw
jge
negl
ret
cmpsb
push
loop
mov
inc
mov
outsb
popf
sub
stos
cmp
or
jle
mov
xchg
pusha
subb
xchg
in
jno
xorb
mov
sub
ficompl
stos
pop
fwait
sbb
fmuls
fdivrs
pop
mov
lcall
sbb
shlb
lahf
adc
in
sbb
popf
sbb
fimull
fisubrl
ja
outsl
or
mov
dec
pushf
call
scas
in
lcall
xchg
lock
inc
in
push
push
xor
jg
jmp
outsl
ljmp
stc
mov
xor
js
mov
fmull
mov
add
push
adc
in
je
lea
xchg
add
jp
dec
ret
sarl
ja
loope
data16
sbb
xchg
repz
out
out
adc
push
add
sbb
outsb
addb
or
inc
rclb
pop
adc
push
popa
nop
addb
xor
int
iret
icebp
jp
jp
push
jecxz
push
in
xchg
sbb
push
shlb
cltd
push
jns
dec
pop
roll
shll
cmp
mov
push
rclb
jno
lock
pop
and
jae
jp
in
inc
setns
push
or
ds
adc
inc
or
sub
push
test
aad
int3
add
push
adc
or
dec
sahf
mov
lods
jo
loop
jle
insl
hlt
pop
loopne
dec
fdivrs
call
in
sbb
sbb
hlt
inc
int
and
es
jb
push
test
pop
test
push
dec
mov
in
test
dec
fidivrs
loopne
jb
add
cmpsb
xor
scas
pop
in
jl
jne
sub
arpl
lds
cmpsl
push
sti
jge
jg
jmp
mov
mov
imul
test
jge
data16
and
in
jg
mov
mov
mov
jns
inc
rclb
mov
test
pop
cmc
lock
xorb
mov
jle
jne
xor
lods
lret
inc
mov
cmc
gs
adc
addr16
push
fimuls
add
in
bound
imul
or
push
shlb
test
lea
mov
dec
mov
fldcw
into
pop
repnz
fs
jl
jne
sub
popf
sub
es
pop
roll
aad
aam
shll
aad
dec
cli
mov
mov
and
out
shrb
setne
out
jg
jmp
dec
mov
mov
cmpsb
shll
add
jbe
fs
push
jo
addr16
sbb
nop
push
popa
nop
outsb
dec
int
and
add
mov
mov
fiaddl
pop
aas
lret
adc
in
sbb
xchg
sbb
aad
xlat
push
fisttpll
out
orb
fs
popf
insb
scas
orl
sti
push
mov
mov
pop
lret
lret
adcb
xorb
adc
in
sbb
pop
inc
aam
sub
je
out
pop
sbb
das
dec
aam
sub
mov
lret
lret
lcall
push
xor
inc
cli
imul
insl
in
mov
lea
dec
sub
xor
pop
lret
scas
pop
mov
fisttpll
out
stc
jge
je
jnp
jnp
mov
sub
adc
pop
bound
mov
in
data16
xchg
outsb
mov
jp
jp
cmp
sub
dec
xor
push
outsb
out
adc
cmp
push
jno
inc
into
inc
shll
notl
fistpll
enter
inc
aam
sub
push
imul
inc
aam
dec
stc
jnp
jl
notb
or
loopne
adc
add
jle
mov
xor
and
push
lds
push
jno
pop
sbb
movsl
es
cs
mov
lods
mov
mov
dec
fidivrs
popf
in
ret
pop
and
and
je
out
push
ret
mov
pushf
sti
push
hlt
pushf
adc
in
sbb
jne
mov
add
push
pop
jp
inc
pusha
in
bound
movsb
ret
ds
push
lds
iret
jnp
fmuls
fdivs
jae
xchg
or
or
clc
dec
sbb
dec
frstor
fwait
jbe
add
ret
stos
pop
test
fs
popf
insb
xchg
inc
daa
sarb
add
pushf
add
lahf
punpckhdq
or
out
addb
icebp
add
out
outsb
cld
fwait
jbe
pop
jecxz
push
in
loopnew
adc
aaa
repz
mov
pop
fimull
fidivl
add
lretw
inc
mov
mov
pop
mov
xorl
xchg
testb
jecxz
push
fimull
ficompl
test
lahf
cli
or
data16
mov
mov
gs
and
and
mov
sbb
or
pop
repnz
fs
faddl
mov
filds
dec
scas
dec
roll
sarl
repnz
and
inc
fimuls
popa
daa
stos
cmp
popa
xchg
in
setg
or
popa
in
sbb
adc
test
dec
fistpll
out
jno
mov
shll
xchg
cld
pxor
gs
pushf
outsl
mov
cltd
or
push
mov
inc
mov
mov
scas
leave
cmp
rcrb
stos
data16
mov
xchg
sub
nop
add
scas
cmp
mov
add
or
xor
push
cmp
jl
arpl
xchg
gs
mov
ss
mov
push
in
sub
push
lahf
push
mov
movb
or
rolb
rclb
arpl
xchg
gs
outsl
lcall
add
jl
insb
or
out
popf
sbb
aad
shll
xor
mov
lods
sub
mov
and
in
cld
fwait
jbe
test
and
not
pop
repnz
fs
jo
insb
or
mov
lock
dec
fistpll
adc
and
push
lret
ljmp
push
sahf
or
cmpsb
pop
mov
xchg
adc
sub
sub
adc
push
mov
dec
sub
jg
jns
mov
cli
notl
cltd
pop
xchg
repnz
fwait
add
sahf
or
cmpsb
and
js
mov
incl
add
adc
notl
in
jae
xchg
addb
or
jg
outsb
or
das
movsb
and
adc
mov
les
movsb
push
mov
es
cs
lret
scas
ret
push
ret
cmpsb
push
hlt
and
cmp
jge
ljmp
stc
vorps
mov
cltd
clc
or
lcall
lods
add
jl
js
ljmp
fiadds
xchg
add
and
xlat
inc
push
pushf
jmp
sbb
lcall
fbld
int3
popf
fsub
mov
aas
jmp
jbe
jge
negl
and
jmp
mov
push
jns
add
add
jmp
clc
data16
xchg
outsb
jmp
xchg
adc
inc
adc
int3
popf
jne
sti
or
add
test
les
add
jmp
push
fdivs
add
add
jmp
xchg
adc
pop
sub
addl
jmp
jo
movzbl
jmp
out
int3
popf
xchg
enter
adc
add
jnp
in
add
and
outsl
imul
adc
lock
jo
mov
jmp
push
add
jmp
movl
incb
popl
lea
jmp
cmc
xlat
icebp
dec
pusha
push
jmp
sbb
jmp
int3
popf
insl
out
jl
negb
aaa
jmp
add
fistps
jmp
and
xor
jbe
or
in
jmp
mov
shr
daa
mov
jmp
mov
or
add
add
jmp
stc
adcl
test
pop
enter
dec
push
jmp
sub
jmp
push
jmp
fistl
or
jmp
jmp
scas
and
popa
insb
lret
je
popa
mov
jmp
lcall
jmp
fcoml
lods
pop
mov
inc
mov
inc
movb
movb
movb
jmp
fisttpll
lds
xor
add
leave
cwtl
in
movb
jmp
addr16
inc
imul
mov
add
std
adc
add
add
jne
add
cmp
sub
dec
jnp
add
cmp
jmp
adc
mov
jb
and
sub
add
arpl
arpl
cmc
push
ret
inc
mov
test
xor
add
add
jmp
cld
jno
xorb
es
ret
mov
add
mov
xchg
cmc
add
in
out
test
mov
movb
jmp
sbb
add
add
test
add
rcrl
stos
shlw
and
jmp
iret
pop
add
neg
jmp
cld
outsb
cld
fwait
jbe
jne
lret
loop
inc
lret
mov
jecxz
call
jmp
mov
mov
sbb
inc
movb
movb
movb
movb
movb
jmp
ljmp
test
add
decb
movb
jmp
call
jmp
lock
cwtl
sbb
push
movb
movb
movb
movb
movb
jmp
int
dec
movb
movb
movb
movb
movb
jmp
out
out
jo
loop
movb
jmp
xchg
inc
fildll
inc
movb
jmp
pop
cltd
push
pushf
jg
popf
je
mov
add
and
mov
sahf
jl
mov
movb
jmp
xchg
pop
xchg
repnz
jo
jae
adc
inc
fisubrs
mov
outsl
jmp
cwtl
mov
add
jmp
and
mov
js
inc
aam
movb
jmp
mov
vsubpd
xchg
mov
and
inc
loop
jmp
outsl
mull
icebp
js
adc
mov
in
fnsave
pop
inc
jb
inc
rorb
rorl
ret
inc
ret
dec
movb
jmp
jp
movb
movb
movb
movb
movb
jmp
or
out
hlt
xchg
outsb
xchg
jl
jne
popa
xor
inc
in
xor
inc
out
xor
inc
out
xor
inc
lock
sbb
ret
mov
repnz
pop
repnz
popf
sbb
movb
jmp
dec
push
xor
cmp
pop
cmpsl
sub
ficoms
lods
pop
scas
xor
inc
call
js
inc
ljmp
inc
in
xor
popf
ret
movsl
push
repz
rolb
rolb
xor
mov
shr
add
add
leave
jmp
repz
inc
inc
and
ja
cli
push
rolb
sarb
cmp
jmp
or
jmp
push
xchg
cmc
add
aam
shll
xchg
repz
mov
mov
movb
movb
cmp
je
cmp
je
mov
jmp
jbe
jno
jecxz
cmp
xor
scas
insl
and
lret
daa
outsb
sti
imul
sbb
dec
fdivrs
imul
jns
jmp
shlb
jmp
pop
mov
cmp
lahf
sbb
lret
jmp
or
mov
cmpsb
shll
lods
sub
push
aad
sub
xor
pop
rorb
test
jmp
mov
faddl
and
pop
int
addr16
pop
repnz
fs
sbb
punpckhdq
inc
repnz
movb
movb
jmp
dec
ret
cmpsl
xchg
sbb
jmp
push
in
push
mov
pop
jmp
xor
add
add
jg
mov
pop
xlat
inc
and
js
adcl
test
adc
stos
adc
pop
adc
adc
cld
pushl
mov
adc
mov
jmp
shl
jmp
push
fisttps
fldenv
mov
jmp
nop
cmp
pop
inc
ret
shr
mov
jmp
inc
inc
and
outsl
push
les
int3
gs
bound
and
jmp
dec
jmp
sbbb
out
sbb
sub
outsl
cmp
pcmpgtw
inc
inc
jmp
or
loopne
dec
jne
push
pop
mov
jmp
and
into
pop
lret
scas
pop
mov
jns
xchg
in
or
mov
inc
shl
dec
jmp
sbbb
ljmp
loop
sub
add
test
jne
jmp
add
jmp
adc
xor
jle
std
or
sbb
lea
mov
or
inc
jmp
cld
jp
jp
ror
mov
or
inc
inc
pop
jmp
mov
xchg
rcrl
scas
pop
scas
outsl
ljmp
lret
scas
sbb
mov
cmp
mov
stos
mov
jmp
xor
dec
frstor
xchg
bound
jmp
inc
jmp
les
incb
std
jmp
push
lahf
push
pop
roll
roll
inc
xchg
cltd
mov
loopne
inc
cmp
jl
push
pop
mov
shr
jmp
jne
jne
out
pop
mull
insb
lds
mov
pop
jmp
jp
jns
jmp
push
nop
push
popa
nop
and
jb,pt
jmp
cld
pushf
jmp
leave
pop
int3
stos
iretw
in
out
jo
jmp
and
jne
decl
jne
jmp
jmp
sub
jmp
jae
jg
jmp
push
mov
sub
xor
sub
inc
jmp
sub
add
jmp
adc
add
jnp
out
adc
push
lds
mov
cld
xor
cmp
lea
jle
mov
xor
cmp
jmp
xchg
push
test
push
xlat
or
xor
pop
xchg
jmp
ret
inc
shlb
jle
call
cwtl
add
add
gs
sub
push
ret
cmpsb
push
cmpsb
push
sbb
enter
mov
add
push
pop
jmp
stos
daa
mov
and
addr16
bound
pop
cmp
sub
jno
xorb
flds
inc
adc
or
cmp
sbb
push
popa
nop
push
mov
shlb
jmp
out
and
jmp
movzbl
jmp
cmp
jmp
dec
fdivl
in
fmuls
mov
gs
dec
sbb
test
push
cwtl
mov
mov
mov
andb
sub
jo
mov
jmp
cmp
sbb
push
cmpsl
jle
inc
xchg
lods
stc
je
popa
mov
jmp
ja
jbe
loopne
outsl
loop
sbb
add
add
lea
jmp
dec
jecxz
push
in
adc
pop
jb
sub
jg
jmp
push
push
jmp
flds
mov
mov
sub
sbb
pusha
insb
or
adcl
dec
dec
mov
pop
rcll
inc
fstpl
xchg
lods
dec
roll
aad
push
rolb
sarb
mov
add
jmp
fwait
sub
jmp
int3
push
ret
cmpsb
push
mov
gs
pushf
outsl
xchg
movsl
and
ds
cmp
jne
addl
mov
jmp
addl
xor
push
mov
jno
inc
lock
inc
int3
inc
and
bound
dec
fnstsw
jnp
pusha
pop
repnz
push
mov
mov
shr
mov
mov
jmp
idivl
mov
mov
cmp
jmp
mov
xchg
lock
adc
std
insl
hlt
pop
mov
jmp
inc
xlat
inc
and
imul
or
pop
aas
lret
sbb
xchg
movzwl
jmp
xchg
xchg
adc
fwait
xor
jmp
sbb
and
mov
and
mov
fsts
jo
pushl
jmp
mov
jmp
adc
xchg
or
push
pop
jl
jo
loop
call
pushl
mov
jmp
in
jb
xchg
dec
int3
inc
and
dec
sub
fdivrs
jmp
jmp
loop
icebp
nop
arpl
call
xchg
div
jmp
mov
jmp
shr
jmp
pop
xchg
jb
jno
mov
js
pop
mov
iret
xchg
mov
stos
and
mov
or
mov
movzwl
mov
imul
imul
mov
jmp
clc
hlt
add
jmp
bnd
mov
iret
dec
fstpt
shll
jnp
cmp
shl
or
sub
sub
cmp
jbe
decl
jmp
mov
loope
sar
add
jmp
xor
daa
repz
cmc
add
mov
mov
add
add
cmpsb
adc
jmp
sub
jmp
xor
push
or
add
push
push
dec
cld
jb
aam
dec
lock
ja
jne
mov
shl
cmp
jb
jmp
xor
clc
sub
cmp
jbe
decl
jmp
push
test
jge
cmp
xchg
sbb
ret
incl
jmp
jmp
cmc
fs
popf
insb
lds
mov
pop
repnz
fs
pop
or
cmp
jmp
and
mov
mov
jmp
sub
pop
daa
ret
push
lds
jnp
jbe
loopne
or
jno
mov
inc
call
mov
xchg
jle
mov
jg
or
test
movzwl
mov
jmp
test
xchg
repz
fxrstor
shl
shr
add
jmp
lea
jmp
mov
lods
mov
shll
push
cld
sbb
shr
faddp
inc
aam
dec
mov
scas
cmp
mov
out
icebp
nop
arpl
inc
xchg
jne,pt
movzwl
jmp
jmp
pop
aad
sub
add
popa
out
jg
jmp
imul
jmp
inc
jp
imulb
jmp
mov
iret
loope
std
test
ret
dec
ret
or
mov
jmp
fildll
leave
jmp
jbe
push
outsb
cld
fwait
jbe
movsl
xor
dec
fimull
fidivl
ja
icebp
movzwl
jmp
jae
sub
fldt
ljmp
enter
popa
sub
repnz
aaa
push
lret
pop
ds
and
movsl
popa
shl
jmp
adc
sub
jmp
cmp
loop
out
mov
in
in
je
addr16
jno
jecxz
fstpt
stc
jmp
decl
jmp
mov
mov
jge
je
add
push
jmp
or
sub
jmp
std
enter
or
jmp
sub
jmp
sub
dec
into
pop
cmp
or
shlb
lds
cmp
jle
mov
push
xor
pop
mov
movzbl
jmp
into
dec
frstor
in
ljmp
jge
jb
jmp
pop
inc
bound
jmp
jmp
adc
pop
jmp
mov
jmp
mov
cld
in
data16
and
leave
jmp
jmp
xchg
fidivrl
addr16
or
std
mov
or
movzwl
shl
jmp
shl
jns
push
dec
add
jmp
outsb
jmp
push
in
or
inc
cmp
scas
and
ret
dec
fnstcw
scas
leave
cmp
loopne
cld
fwait
jbe
xor
sub
insl
fcmove
and
enter
or
clc
jbe
dec
jmp
and
call
mov
adc
sahf
or
in
mov
jp
inc
movsl
ret
jmp
leave
pop
iret
stos
pop
mov
cltd
ja
pushf
jmp
sti
sub
jmp
test
hlt
pop
iret
pop
cmp
jle
roll
shll
dec
jg
pop
jmp
add
jmp
fcoms
cmpsb
push
hlt
or
inc
jecxz
push
in
jne
arpl
cmc
sbb
call
leave
ja
jne
jmp
cs
popf
jmp
cmp
cmp
inc
mov
mov
xchg
pop
bound
push
mov
xchg
jmp
inc
pushl
jmp
in
cmc
pushf
outsl
test
jge
negl
notb
ficomps
test
stc
cmp
jbe
decl
jmp
adc
add
or
mov
jmp
pusha
jmp
sbb
popf
dec
popa
jmp
sub
add
jmp
test
mov
cmpsb
xor
scas
pop
pop
fisttpl
fnstsw
sti
pop
lret
pop
ds
into
dec
ret
popf
cmpsl
and
inc
lret
pop
ds
lcall
jp
jp
or
lods
das
xlat
rolb
in
push
lret
mov
mov
sub
or
sbb
push
mov
add
pusha
add
add
jno
xorb
jno
xorb
cmp
jne
mov
mov
sahf
rolb
mov
icebp
xchg
push
xchg
repz
cmpsl
or
cli
jae
xchg
pop
xchg
add
es
push
pushf
sti
push
mov
jmp
push
in
sub
dec
outsl
cmc
gs
pop
sbbb
call
lds
sub
pop
adc
pop
add
add
pop
int
orb
cmp
ss
push
mov
es
iret
dec
fnstcw
add
mov
loop
pop
loop
leave
inc
shlb
je
out
or
add
add
adc
push
mov
add
mulb
fstps
add
add
pop
int3
stos
shlw
pop
repnz
xchg
add
push
mov
add
add
gs
and
aam
mov
mov
mov
inc
mov
add
sbb
insb
pop
rclb
sub
dec
fidivrs
leave
test
fidivs
sbb
outsb
outsl
repz
cmc
cmp
add
sbb
ds
rcll
cmpsl
out
add
mov
sbb
sbb
dec
jns
xchg
testb
lret
pop
insb
xchg
add
jo
imul
adc
gs
xchg
add
sahf
insl
dec
fistpll
pop
jb
pop
mov
lock
fisttps
flds
mov
rolb
push
rclb
imul
add
sbb
jg
jmp
es
popa
hlt
push
cld
pop
clc
outsb
or
cmp
mov
push
xchg
add
sahf
je
insl
std
test
sbb
out
jo
xorl
jl
addr16
add
sarb
push
xchg
rolb
int3
push
ret
cmpsb
push
mov
test
incl
add
in
notl
xchg
testb
cmc
add
add
adc
or
cwtl
push
test
push
mov
push
orl
mov
lods
lret
inc
loope
mov
test
loopne
test
dec
fistpll
repnz
fs
add
js
mov
sbb
xchg
add
push
jp
ja
loope
aaa
lods
cmp
cs
xchg
mov
sub
and
incl
movl
inc
and
cmp
pop
fisttps
fstps
das
test
pop
cwtd
add
jmp
mov
ficoml
mov
das
dec
mov
shlb
lds
mov
hlt
jp
jp
inc
into
pop
cmp
xchg
add
ficoml
lods
addb
add
jp
and
xchg
pop
iret
pop
cmp
xchg
add
push
lret
in
xor
xchg
add
int
rcrb
decl
lods
int
lds
inc
push
xchg
add
lds
hlt
pop
in
xchg
mov
sbb
xor
jno
mov
stos
into
cmp
push
cmc
sbb
jg
jmp
push
std
add
mov
mov
and
and
xchg
pop
cmpsl
sub
jg
fs
or
daa
orb
add
rorl
orb
cltd
add
push
adcl
add
xchg
pop
bound
add
dec
or
add
mov
xchg
repz
ljmp
cmp
jne
addl
mov
jmp
enter
inc
mov
adc
and
in
mov
fldenv
add
jmp
pop
roll
rcll
lea
xchg
icebp
add
loope
adcb
loopne
mov
sbb
add
pop
leave
pop
cmp
js
std
insl
hlt
pop
lods
cmp
inc
mov
ret
push
adcb
xorb
add
mov
inc
mov
push
jmp
pop
int3
inc
and
jmp
pusha
notb
enter
xchg
jns
lea
jmp
rorl
mov
jmp
pop
int3
stos
data16
inc
push
jmp
repnz
mov
movzwl
jmp
pop
push
jmp
mov
icebp
hlt
jne
mov
inc
rclb
sub
icebp
test
add
add
jmp
movl
or
int3
mov
jmp
scas
movzwl
jmp
ficomps
scas
pop
scas
rcll
pop
mov
push
mov
es
sti
adc
xchg
cli
jmp
rolb
add
jmp
mov
or
out
adc
jmp
movzwl
mov
movzwl
imul
jmp
cmp
jmp
xchg
in
mulb
jns
jmp
push
jecxz
push
in
pop
into
test
and
jne
imul
mov
imul
add
mov
mov
jmp
push
jae
jmp
loopne
std
test
cwtl
adc
in
sbb
in
jge
notl
cmp
mov
jmp
cmpsb
cltd
imul
clc
push
lahf
push
imul
add
mov
mov
sbb
or
gs
incl
stos
outsb
ljmp
stc
scas
lods
aas
scas
lret
in
or
mov
mov
mov
andb
sub
jo
jmp
es
inc
mov
and
lret
shl
add
jmp
movsb
lods
lret
inc
test
lret
mov
jmp
pushf
pop
call
add
or
cmp
adc
cs
jnp
add
mov
jmp
cld
popa
icebp
nop
arpl
jl
insb
or
iret
dec
lret
lret
iret
call
movb
call
jp
leave
idiv
pop
sub
jmp
and
inc
sub
or
inc
and
jmp
addb
or
fstps
stos
data16
dec
fstpt
out
jo
popf
inc
int3
jne
add
jmp
shlb
in
cld
fwait
jbe
popl
std
or
clc
jo
xorl
push
jmp
jmp
in
loop
je
add
loop
jae
popf
pushl
mov
jmp
or
add
mov
ret
test
lock
mov
movzbl
jmp
adc
xor
push
lds
in
into
cmp
jmp
jae
ja
loope
cmp
cmp
and
sbb
roll
push
mov
cmp
jno
xorb
outsl
lcall
inc
and
dec
adc
push
testl
jmp
xchg
add
mov
sti
test
mov
mov
adc
decl
xchg
pop
bound
jp
repnz
loop
je
dec
fistpll
mov
mov
mov
andb
sub
jo
jmp
mov
jmp
mov
incb
add
push
pushf
xor
insl
pop
lret
scas
pop
mov
mov
dec
mov
sar
xchg
push
popl
jmp
lock
cmpl
sub
sbb
shr
leave
push
ret
cmpsb
push
cmpsb
mov
clc
jb
xchg
fwait
adc
add
pop
jmp
mov
shlb
sub
dec
jnp
jl
add
jmp
adc
inc
jmp
sbb
ss
aas
pop
test
in
xlat
add
das
cwtl
adc
sbbl
add
xchg
std
ljmp
outsb
or
dec
sbb
jmp
fisttpll
mov
mov
and
out
mov
xor
lret
clc
and
and
cltd
push
and
inc
mov
mul
ja
xorb
je
shrl
jmp
incb
nop
jb
jmp
mov
stc
out
jo
das
push
insl
std
test
pop
popf
or
or
or
sub
adc
mov
inc
add
jmp
mov
mov
sub
lds
sar
inc
adc
addb
repnz
ja
gs
adc
movsl
inc
pop
xchg
pop
bound
jmp
pop
cli
loope
jecxz
jmp
mov
bnd
int3
dec
fnstcw
push
xor
cmp
add
pop
testl
or
andb
sub
jo
mov
jmp
je
addl
jmp
mov
scas
leave
cmp
imul
add
in
popa
icebp
nop
arpl
in
cmp
jmp
je
imul
add
push
and
aas
pop
test
cmpl
cmpsl
push
in
int
and
jl
cwtl
push
imul
and
jmp
xchg
mov
mov
jmp
inc
rolb
sarb
pop
xchg
repnz
popa
push
popa
jmp
or
repnz
jmp
popl
jmp
or
movsb
lods
lret
inc
test
gs
pushf
outsl
jl
orl
jbe
xor
clc
inc
pop
xor
test
jmp
icebp
lea
jns
add
js
jbe
loopne
mov
mov
sbb
mov
out
mov
addb
lea
jmp
inc
cmp
flds
add
fwait
pop
jmp
fcompl
stos
scas
dec
lret
lret
scas
aas
pop
test
jmp
call
add
xchg
popf
pushl
jmp
or
jle
outsb
or
push
fisubl
xchg
gs
mov
jmp
mov
and
out
sbb
xor
in
gs
pushf
outsl
xor
push
arpl
jne
jmp
jle
fs
sbb
std
idivb
mov
pop
aam
sub
jmp
or
addr16
jmp
push
lret
ljmp
lret
pop
leave
test
call
mov
clc
jmp
pop
xchg
jb
and
push
jmp
mov
jmp
leave
arpl
xchg
gs
add
jg
mov
pop
in
jae
andl
test
jbe
mov
sub
jmp
inc
fstpt
iret
push
lds
inc
lock
fadds
mov
cmpsl
push
into
pop
cmp
push
icebp
add
pop
les
int3
dec
xor
je
xchg
add
jns
xor
mov
sub
cmpl
push
mov
jne
xor
jmp
jmp
rcll
mov
xchg
xor
jmp
and
jne
jmp
ficompl
fs
repz
mov
fldt
ds
cmp
inc
jb
testl
push
xor
sub
dec
fistpll
and
push
sbb
lock
pop
int3
stos
data16
bnd
jne
and
dec
fdivrs
jmp
jmp
repz
sub
ret
jmp
xlat
xchg
jmp
pushf
mov
push
fimull
ficompl
sbb
pop
bound
fisubrl
cmp
lods
push
pushf
jmp
sub
jmp
test
xor
or
xor
or
jbe
cmpl
xchg
sbb
pop
cld
or
sub
pop
cmp
mov
sbb
jmp
pop
mov
sub
neg
cmp
jmp
xchg
xchg
adc
jmp
lea
mov
sbb
push
in
jmp
sub
jle
xchg
or
jle
mov
inc
mov
mov
jp
insb
and
sub
mov
mov
jmp
pop
pop
jp
adc
pop
cmp
dec
test
mov
adc
ret
jmp
adc
add
jns
mov
test
int
outsb
cld
fwait
jbe
rcrb
movzwl
loope
popa
rolb
shr
sbb
fwait
or
dec
mov
mov
es
cs
push
fdivl
in
add
lret
xchg
jmp
cmc
jle
mov
inc
mov
lods
sub
movsb
ret
ds
xor
add
decl
mov
jne
pop
pop
jmp
mov
xchg
repnz
daa
test
cmc
js
mov
jge
jge
testl
inc
dec
jecxz
push
in
inc
rolb
shlb
pusha
notb
lcall
popf
pushl
mov
jmp
mov
mov
popl
inc
and
imul
es
testb
roll
rcll
sub
aaa
lods
cmp
ret
enter
jmp
fwait
add
mov
dec
mov
sahf
insl
in
or
push
jbe
inc
jmp
das
mov
inc
mov
lahf
popa
mov
ret
and
pop
add
jmp
bnd
xchg
and
xchg
xchg
icebp
add
scas
das
mov
sub
fcomps
shrl
cmp
jmp
repz
add
push
xchg
or
outsl
jne
insb
or
in
scas
aas
pop
test
add
ret
jne
addl
mov
jmp
in
popl
jmp
and
inc
std
jno
xorb
push
es
cmp
je
popa
mov
jmp
test
cli
repz
je
inc
shl
jno
sub
in
sbb
jmp
jnp
fs
pop
push
pushf
xor
adc
inc
daa
sarb
xchg
or
sub
lock
cmp
popa
cmc
gs
dec
test
lods
mov
in
sbb
and
jmp
push
jmp
js
arpl
cmc
push
test
mov
push
mov
shll
clc
add
pop
ja
jge
negl
pop
ds
mov
jmp
mov
mov
pop
enter
scas
aaa
cmpsl
ret
pop
fisttps
fldcw
insl
or
mov
andb
sub
jo
mov
jmp
mov
lods
ret
mov
stos
fsubl
xchg
xchg
jle
inc
repnz
add
add
jmp
out
notl
mov
out
jo
mov
scas
or
add
add
icebp
outsl
in
sbb
jmp
lcall
cmp
inc
iret
pop
cmp
and
mov
jns
das
or
or
pushl
shr
jmp
clc
lea
jmp
jp
fs
cmp
xor
int
fwait
nop
add
sbb
loop
inc
jmp
mov
jmp
outsb
add
xchg
and
xor
jmp
sbb
jb
jne
jmp
mov
jmp
std
jae
xchg
dec
imul
insl
ficompl
mov
jmp
lea
jmp
cmpsl
xor
mov
inc
mov
in
in
mov
fsubrs
lret
test
xchg
inc
or
ret
push
cld
sub
push
mov
jmp
pop
test
adc
jg
mov
rorb
movsb
push
rorb
dec
clc
add
cmp
mov
mov
sbb
add
neg
jmp
addl
repnz
dec
adc
inc
sar
hlt
jmp
mov
rcrb
xor
jmp
xor
push
cwtl
pop
add
std
jp
jp
mov
jmp
mov
sahf
stc
or
mov
jl
mov
inc
jmp
stos
add
jmp
mov
jmp
cmpsb
and
cmp
outsb
cld
fwait
jbe
cltd
test
loopne
lods
call
jmp
xchg
xlat
fdivs
jmp
addr16
pop
jmp
jl
push
cld
sbb
push
lret
scas
pop
rolb
shlb
cltd
and
lea
jmp
aas
mov
inc
mov
aad
popa
jmp
xchg
lahf
sbb
jb
imul
and
inc
and
jmp
pushf
adc
dec
fdivrs
cmc
pushf
outsl
fstpt
mov
mov
mov
andb
sub
jmp
mov
jmp
adcb
loop
mov
fdivl
in
push
lds
iret
fs
xchg
sub
sar
inc
adc
ds
pop
test
std
push
lahf
push
sub
push
rclb
sbb
and
jmp
sbb
pop
adc
cmpl
sub
push
push
into
pop
cmp
xor
add
push
shlb
mov
jmp
pusha
notb
aaa
push
mov
cmpl
and
jne
jmp
movzbl
jmp
and
rcr
pushl
jecxz
add
add
add
dec
cs
inc
mov
ss
inc
mov
jg
outsl
xchg
pop
xchg
adc
into
mov
push
push
call
push
call
popf
pushl
jmp
push
rolb
rolb
pushf
sbb
ljmp
stc
out
sbb
jmp
xor
sub
xor
push
in
jp
pusha
pop
repnz
adc
sub
add
cmp
je
popa
mov
jmp
mov
xchg
lock
aaa
mov
cmp
mov
and
pop
jmp
xchg
sbb
out
jg
jmp
mov
loop
lods
cmp
push
dec
jmp
jmp
mov
sahf
fimull
mov
enter
mov
mov
and
ret
jmp
push
jmp
nop
add
xchg
pop
xchg
repnz
fnstsw
jae
in
jmp
push
jns
jmp
pushf
jmp
cmp
dec
mov
xchg
adc
and
es
popa
in
inc
ret
jmp
ja
jg
jmp
jne
add
repz
xorl
inc
or
andb
sub
jmp
fistpl
test
mov
loopne
cltd
pop
mov
jmp
adc
xor
push
roll
roll
adc
push
popa
nop
gs
mov
add
add
imul
iret
pop
push
aaa
mov
jmp
in
sbb
add
xchg
pusha
xor
cmc
or
push
dec
adc
mov
jmp
pop
popf
or
enter
lods
mov
movzbl
add
cmp
jmp
dec
rcll
xor
movsb
cmp
or
xchg
popa
jmp
jmp
jo
popl
jmp
ds
inc
mov
inc
lret
lret
mov
pop
or
je
jmp
mov
jmp
xor
mov
mov
mov
in
aas
cmp
jne
addl
jmp
sbb
jae
jo
loop
outsb
jno
xchg
int3
popf
inc
aad
sub
imul
pop
loop
dec
jg
jmp
lea
mov
sbb
xchg
sub
sar
inc
adc
cmp
add
insb
or
mov
mov
push
mov
push
push
push
push
pop
cmp
jmp
movsb
cmp
outsl
stos
aaa
cmpsl
ret
xchg
or
jne
bound
jb
jmp
pop
les
int3
dec
rcrb
loopw
push
shlb
aaa
ret
mov
pop
or
es
jmp
mov
enter
jne
popa
sub
mov
xchg
loope
shr
add
add
aam
add
mov
dec
rclb
xor
lea
jmp
push
jmp
jbe
xchg
testb
and
fidivs
lahf
pop
pop
sub
add
xchg
popf
pushl
jmp
mov
scas
lret
insb
loopne
adc
and
stos
xchg
pop
xchg
repnz
jmp
jmp
aad
aam
dec
out
xchg
add
or
jle
jmp
push
jmp
jno
jne
out
pop
movsl
xor
cmp
push
mov
es
sbb
out
mov
jmp
push
leave
pop
cmp
or
jns
jmp
mov
mov
loopne
adc
or
cmovne
cmp
add
test
std
jmp
repz
xchg
loope
in
mov
js
mov
sub
push
lea
mov
jmp
push
int3
xor
mov
mov
jmp
xor
leave
dec
fdivrs
dec
sub
xor
les
sub
bound
ret
add
add
add
push
addl
or
sbb
sbb
jo
pop
jmp
mov
pop
jmp
lds
mov
jmp
xor
push
fimuls
add
cltd
or
jge
push
inc
mov
int
fdivl
in
add
xor
call
jae
in
in
notl
and
cmp
dec
bound
add
xchg
popf
pushl
jmp
push
add
xor
sbb
aas
es
inc
mov
cmpl
jl
jne
xor
or
sets
imul
popa
sbb
jmp
aaa
popa
jmp
int
cli
jmp
mov
jne
jbe
loopne
mov
jecxz
push
xchg
add
ret
jmp
into
pop
lret
scas
pop
mov
aas
xlat
out
jne
mov
pop
into
test
mov
ret
stos
xor
int
mov
sbb
sahf
and
test
pop
test
mov
jmp
mov
inc
pop
jmp
sbb
data16
adc
push
pop
jecxz
push
in
or
jle
shlb
push
jge
negl
push
mov
lret
sub
jl
notb
add
ljmp
xchg
addb
inc
jmp
ffreep
rolb
add
jmp
pop
xchg
add
sahf
insl
cmp
enter
dec
cltd
lods
flds
jne
addl
mov
jmp
xchg
sbb
mov
xchg
iret
arpl
xchg
gs
daa
mov
lods
or
das
jmp
popl
jmp
into
arpl
xchg
gs
pop
ds
push
dec
dec
ss
mov
jmp
inc
fstpt
popf
lahf
adc
dec
lds
iret
ds
sub
ret
cltd
push
xorl
and
dec
mov
test
jge
pop
jmp
in
jp
jp
mov
inc
test
jmp
loop
jge
jmp
jno
jnp
in
pop
into
pop
leave
test
mov
out
stc
emms
xor
push
push
push
push
pop
mov
cmp
jb
xor
jmp
dec
jge
sbb
gs
add
mov
leave
push
sbb
dec
fidivrs
or
jbe
into
pop
cmp
sbb
dec
sbb
pop
jmp
push
roll
aad
in
cmc
pushf
outsl
movsb
inc
ret
ret
push
pushf
sti
push
incb
decl
roll
aad
dec
int3
inc
and
test
mov
inc
mov
jmp
jmp
ss
inc
mov
out
sub
jmp
mov
jmp
xor
std
sub
sbb
jmp
orl
sbb
jg
xchg
pop
bound
cmpsl
push
cmc
jns
jmp
lea
jmp
push
jmp
mov
xchg
sbb
adcb
out
mov
and
ljmp
loopne
inc
cld
mov
mov
mov
shr
neg
jmp
pushf
adcb
add
sar
dec
clc
mov
jne
pop
jmp
sub
adcl
add
ja
jmp
sub
adc
sbb
xlat
inc
and
push
jmp
das
mov
xlat
push
ret
cmpsb
push
nop
xor
cmp
dec
inc
fmuls
fdivs
or
je
mov
jne
sub
pushf
jmp
mov
movsl
adc
icebp
jb
xchg
sub
clc
jmp
adc
pop
jmp
enter
dec
mov
add
add
jmp
mov
fsubrl
pop
ljmp
push
shr
or
mov
mov
mov
shl
neg
sbb
sub
jmp
jge
cltd
roll
add
jne
addl
jmp
xchg
adc
sub
push
lret
mov
dec
add
mov
cmp
je
jmp
sub
pop
popa
ljmp
sbb
xchg
jb
mov
js
jp
sbb
xor
out
std
jno
xorb
mulb
sub
movsb
cmp
outsb
pop
rolb
shlb
nop
mov
movzbl
jmp
in
xor
rolb
add
jmp
mov
push
fisubl
popl
jmp
lods
and
add
mov
js
and
add
inc
xchg
add
lahf
popa
mov
ret
xchg
xchg
adc
xor
cld
push
sub
and
fbld
fs
jmp
rep
lcall
jmp
sahf
or
loope
adc
or
push
aaa
ret
or
sbb
shr
jecxz
push
fcmovne
jmp
jmp
daa
pop
fistpl
mov
mov
roll
rcrl
dec
int
and
cmp
test
mov
push
jmp
inc
rolb
add
jl
jne
popa
xchg
gs
pop
scas
mov
jmp
int3
dec
fnstcw
adc
mov
sbb
das
stos
cmp
pop
stc
loope
pusha
mov
mov
mov
andb
sub
jo
jmp
cmp
pop
aad
sub
cmp
enter
lret
jbe
or
sub
jmp
dec
lret
pop
ds
rorl
push
repnz
pop
mov
shll
jge
mov
jmp
loope
loop
je
and
clc
imul
inc
dec
lea
loop
sbb
inc
and
pusha
xchg
test
push
mov
pop
roll
dec
in
or
ljmp
enter
fstps
shl
jmp
fisttps
mov
mov
inc
xlat
mov
mov
add
add
jmp
out
jne
jmp
mov
mov
mov
xchg
adc
rcll
inc
add
popf
jbe
push
push
mov
push
mov
sub
sub
mov
jmp
sbb
push
pop
pop
pop
jmp
inc
lds
iret
add
or
lret
ffreep
jmp
and
pushf
pop
jmp
je
adc
cmp
add
add
jmp
push
xlat
inc
and
aaa
das
scas
cmp
mov
push
cwtl
push
imul
incl
push
xor
sbb
mov
jg
jg
xor
repz
add
lcall
dec
push
fidivs
jmp
fsubrl
or
jmp
popa
jmp
add
inc
enter
sub
mov
sahf
adc
sub
jne
addl
mov
jmp
xchg
and
setg
or
inc
int
and
jb
movsl
xor
andb
mov
add
add
pop
je
lods
jmp
xor
pop
jmp
ss
gs
push
in
jns
mov
enter
jl
or
jmp
inc
sub
lock
in
mov
dec
mov
dec
std
jmp
inc
fisttpl
fnsave
cmp
pop
repnz
fs
push
popa
mov
ret
lea
jmp
jo
js
ljmp
ret
pop
lea
jne
stc
loop
popl
jmp
dec
frstor
jnp
adc
insb
or
adcl
push
cmp
inc
or
andb
sub
jo
mov
jmp
loopne
icebp
nop
arpl
mov
out
fcmovnb
jmp
divl
xorb
pop
xchg
repnz
icebp
jnp
mov
sbb
pop
cld
test
jbe
sub
push
mov
mov
add
dec
jne
pop
jmp
mov
jns
mov
xor
pop
adc
ljmp
dec
outsl
out
adc
sbb
cmp
add
push
addr16
jmp
cld
jno
xorb
xor
inc
and
jns
mov
inc
mov
lock
pop
jmp
jle
arpl
cmc
pop
movsb
pop
jmp
xchg
add
std
or
lcall
jp
jp
loopne
in
jg
or
push
add
sub
jae
ss
rcr
aaa
mov
adc
fsts
jecxz
push
in
fisttps
mov
lret
and
jmp
fiaddl
mov
lods
and
push
xor
pop
cmp
aas
xchg
mov
sbb
call
add
xchg
popf
pushl
jmp
ja
jle
call
inc
mov
andb
or
andb
sub
jmp
mov
jmp
dec
int3
inc
and
mov
es
rclb
mov
clc
or
add
add
xchg
mov
xor
jo
jmp
ss
jmp
inc
ret
ret
xor
mov
pushf
sti
push
jecxz
adc
sub
add
add
mov
jmp
adc
dec
xor
fabs
cmp
jne
addl
jmp
dec
les
int3
cs
int3
inc
and
xchg
testb
pushf
mov
jmp
sbb
pop
aam
sub
imul
cmp
mov
inc
adc
movzbl
jmp
adc
insl
insb
or
scas
lods
cmp
mov
cmc
push
fildl
movsl
add
xchg
popf
pushl
jmp
test
and
jmp
push
jmp
aam
fstpt
pop
jb
ds
push
xor
lcallw
cmp
add
add
rcrb
xchg
add
and
fisttpl
fnstsw
sub
jns
sbb
cmpsb
mov
jmp
cli
lock
bound
data16
test
jmp
mov
jmp
xchg
or
adc
int
shlb
mov
mov
cmp
and
pop
cmp
je
popa
mov
jmp
addb
lock
push
xchg
add
sahf
jbe
sub
sahf
sbb
mov
xor
dec
cmp
jbe
test
jmp
outsl
call
cmp
popa
in
sbb
sub
dec
cmp
je
jmp
pop
jmp
out
jecxz
jne
repz
cmc
pop
add
push
lods
inc
mov
add
add
mov
pop
iret
stos
pop
mov
or
arpl
xchg
les
jmp
mov
mov
xor
cmp
jmp
clc
push
lahf
push
adc
lret
scas
pop
jmp
popf
or
sbb
lea
jmp
lods
cmp
enter
popa
push
lds
iret
jp
std
insl
hlt
pop
mov
jmp
mov
jmp
dec
fisttpl
fstpl
fwait
add
outsl
lcall
cmp
inc
sub
cmp
jmp
xchg
jl
jmp
scas
xor
fimull
ficompl
inc
jns
inc
test
shr
add
mov
dec
test
jge
jmp
in
insl
std
test
fisubs
xchg
mov
pop
jmp
sbb
xor
dec
mov
mov
lcall
cmpsb
shll
loope
movb
dec
jns
jmp
cmp
push
lds
mov
mov
mov
jmp
add
jmp
cmp
push
lds
xchg
sbb
lds
iret
das
cli
out
mov
into
lcall
or
js
pop
leave
test
stos
int3
inc
shlb
mov
std
jmp
inc
and
jmp
popf
adc
sub
cmc
ds
jmp
imul
or
push
mov
mov
cs
jnp
add
call
jmp
addr16
sti
jbe
cmpl
lahf
punpckhdq
and
cmp
jmp
aas
and
or
mov
xor
inc
xlat
mov
stos
mov
cmp
push
jmp
popa
dec
fsubrl
jmp
pop
rolb
shlb
push
cwtl
push
imul
popa
mov
jmp
icebp
add
push
fdivl
in
lcall
add
add
lea
jmp
call
jmp
mov
test
roll
aad
pop
mov
jmp
cmp
inc
aam
sub
jmp
js
shr
add
add
popf
push
fmuls
fdivrs
dec
cmp
jmp
je
jne
out
inc
test
cmpl
mov
pop
cmp
jmp
dec
jnp
mov
call
jmp
and
dec
add
out
in
jle
inc
push
jmp
int3
popf
sub
out
out
jmp
mov
mov
sbb
aas
xchg
pusha
mov
and
cmp
jne
addl
jmp
enter
or
add
add
jmp
int3
popf
jmp
fimull
mov
jl
jmp
mov
mov
sbbl
jmp
sbb
cmp
inc
adc
adcl
jmp
rcrb
pop
mov
cli
inc
jmp
jmp
sub
pop
ja
in
test
repnz
add
cmp
or
decb
rorb
gs
add
add
mov
inc
mov
pop
pushf
jmp
fadds
mov
leave
xor
add
add
mov
ljmp
inc
push
jmp
pop
jmp
je
call
jmp
mov
movsl
int3
aas
hlt
mov
mov
shlb
push
pop
sub
lea
xor
rep
jmp
fdivp
sub
mov
and
push
insb
jmp
add
arpl
loop
call
jmp
jle
xchg
jmp
push
mov
add
add
jmp
scas
sub
xor
pop
ret
jmp
sbb
movsl
and
inc
pop
adc
push
call
jmp
daa
mov
push
in
xor
dec
adc
dec
sub
mov
lds
mov
lock
bound
pushl
mov
jmp
iret
inc
aam
dec
mov
sarl
out
adc
cmp
jns
jmp
imul
scas
adc
add
and
add
es
pop
int
and
arpl
outsl
or
scas
mov
xchg
movsl
mov
mov
inc
cmp
jb
jmp
jns
jg
jmp
mov
mov
and
lock
inc
cmpsb
insb
jmp
xchg
add
push
mov
adc
cs
jmp
add
lcall
lds
iret
and
ret
jne
addl
mov
movzbl
jmp
pop
iret
stos
pop
loopne
popa
or
popa
jmp
jmp
stc
jg
xchg
testb
popa
xchg
lcall
mov
je
jmp
outsb
std
sub
rolb
add
jmp
addl
testl
loop
loope
xchg
add
sahf
dec
xchg
mov
insl
shlb
sar
inc
adc
xor
or
pop
jp
jg
push
jmp
mov
jmp
into
inc
fidivrl
cmpsb
shll
mov
flds
pop
cmp
cmp
push
mov
mov
sub
push
push
mov
mov
jmp
test
cltd
clc
or
jge
jo
aas
push
jmp
loope
jecxz
jne
and
pop
jmp
and
xchg
add
jp
in
dec
mov
xchg
jns
jmp
sub
popl
lea
jmp
daa
mov
dec
mov
out
mov
scas
pop
insb
stos
push
jmp
cmpsl
test
jmp
cltd
push
pushf
sti
push
mov
sub
inc
mov
push
shll
xchg
dec
roll
shll
cmp
dec
movsl
jmp
in
jnp
mov
add
mov
add
add
int3
mov
jmp
mov
mov
jae
xchg
jne
fs
push
adc
sub
sbb
hlt
jmp
cmpsl
es
cs
adcb
enter
push
test
mov
jmp
call
jmp
jnp
xchg
cmc
add
adc
push
popa
nop
gs
cltd
or
jno
push
scas
adc
test
call
je
cld
call
add
push
jmp
pop
fwait
or
push
mov
pop
rolb
shlb
fcomi
sub
jmp
jmp
or
jne
jmp
dec
frstor
out
sbb
dec
mov
iret
pop
loopne
xchg
decl
mov
rep
jmp
mov
cld
decl
jmp
daa
test
inc
int3
inc
and
inc
sub
imul
shlb
call
jmp
cmp
and
add
je
and
fs
popa
add
pop
jo
std
aam
push
adc
lods
jg
jns
jmp
lahf
or
xchg
jb
dec
mov
addl
mov
decl
add
std
incl
mov
push
ss
jmp
push
iret
pop
cmp
xor
and
add
dec
mov
test
pop
test
jbe
mov
mov
xor
rep
jmp
mov
jmp
loope
in
mov
pop
ljmp
adc
jns
or
fisttpl
mov
cld
incl
repz
jmp
rolb
inc
test
data16
xchg
outsb
mov
mov
clc
jmp
gs
adc
pop
inc
ret
ret
mov
xchg
arpl
pop
int
lea
sub
lea
mov
mov
jmp
xchg
and
loopne
cmp
jbe
cmpl
ret
in
inc
jmp
push
jmp
xlat
pop
int3
stos
xchg
inc
int
and
jb
mov
rcrl
sbb
leave
cmp
jae
mov
movzbl
jmp
loope
inc
clc
jmp
pop
mov
js
dec
push
fmuls
fdivrs
clc
outsb
or
dec
lahf
or
in
mov
jmp
dec
sbb
fsts
jmp
loop
loopne
jb
loop
les
cmp
add
mov
cld
push
movsl
xor
mov
and
sarl
cmp
nop
or
leave
pop
cmp
or
clc
sbb
sbb
iret
call
jmp
jmp
xchg
mov
enter
dec
mov
pop
xchg
incl
push
jmp
lret
push
lret
fucomi
push
lahf
push
jl
mov
mov
pop
xchg
xchg
repz
out
xor
int
flds
jg
scas
cmp
mov
je
arpl
mov
xchg
in
call
pop
test
jmp
jg
mov
loopne
out
add
xor
jmp
mov
pushf
sti
push
jecxz
lea
in
jge
testl
pop
iret
decl
mov
jmp
xchg
sbb
rclb
and
inc
popf
sub
jmp
pop
pop
mov
jmp
jg
fs
or
mov
pop
aad
sub
or
pushl
mov
mov
mov
call
sub
cmpl
pop
jmp
push
fdivl
in
hlt
sbb
dec
or
test
cld
call
shr
jecxz
jmp
pop
jmp
orb
cmp
dec
frstor
mov
lock
pop
movl
lea
jmp
out
mov
jmp
inc
cwtl
mov
jmp
add
jl
leave
jmp
pop
jmp
data16
gs
push
add
add
and
dec
sub
jno
or
fldt
test
jbe
mov
xor
rep
jmp
xchg
add
cwtl
push
imul
jmp
movb
inc
jmp
pop
push
xor
sub
sbb
xor
decl
jmp
les
fs
push
ret
cmpsb
push
mov
cld
jnp
adcl
test
inc
add
jmp
jne
jmp
ficomps
lods
cmp
leave
jmp
jmp
push
push
jmp
addl
icebp
add
cmp
add
sbb
outsb
sub
lret
dec
cld
test
jne
movl
lea
jmp
lret
pushf
jmp
pop
jmp
imul
add
aam
shlb
aam
sub
pop
ret
jmp
pop
xor
addr16
add
jmp
in
cld
fwait
jbe
les
push
mov
push
xor
cmp
push
jp
and
xchg
jmp
loopne
cld
fwait
jbe
jp
imul
das
xchg
cwtl
decl
enter
fdivs
lea
push
call
pop
pop
jmp
mov
xchg
repnz
popa
mov
ret
roll
mov
stc
cmp
mov
xchg
cltd
roll
add
jne
addl
jmp
cmpsl
movsb
ret
ds
adc
ret
ret
lock
inc
in
cmpl
push
in
dec
lahf
or
sbb
aad
mov
enter
pusha
mov
mov
mov
andb
sub
jo
jmp
arpl
push
push
test
push
cltd
rorb
movsb
push
shr
push
lahf
push
out
ret
add
push
add
add
shlb
mov
mov
pop
inc
lea
jmp
inc
push
xor
xchg
xchg
repz
out
push
mov
es
mov
xor
mov
jmp
mov
mov
sbb
cmp
inc
addl
or
jge
outsl
or
repnz
sbb
push
push
int3
popf
aad
fidivrl
add
and
mov
add
add
mov
addr16
mov
adc
add
jmp
dec
push
jmp
cmp
or
add
jmp
sbb
mov
shll
lds
iret
cmp
test
mov
jmp
mov
out
cmp
dec
frstor
mov
jmp
lea
jmp
xchg
or
std
insl
hlt
pop
lods
push
dec
xchg
repz
lahf
out
add
jmp
sbb
add
and
test
push
shlb
test
jmp
xor
mov
jmp
cld
cwtl
xchg
cmpsb
adc
inc
fimull
movsb
push
repnz
dec
ret
xchg
mov
ret
inc
fimull
fidivl
nop
std
jne
mov
mov
jmp
jmp
icebp
push
daa
mov
out
jo
xorl
mov
call
pushl
mov
mov
call
pop
jmp
divb
jl
adc
add
add
xchg
add
jns
mov
inc
mov
fsubl
xchg
xchg
xor
jmp
jg
shrb
fsubr
cmp
jl
add
push
lcall
add
sahf
jbe
pop
mov
test
jbe
lea
jmp
ficoms
pop
scas
dec
mov
jmp
mov
rorb
inc
mov
jmp
mov
int
mov
jns
jnp
cmp
insl
std
test
test
dec
test
jbe
xor
lea
rep
jmp
jg
xlat
jmp
call
jmp
insb
loopne
adc
and
mov
xchg
outsl
lcall
xor
jmp
mov
test
mov
rclb
pop
out
js
jge
negl
dec
clc
jmp
mull
icebp
dec
cmc
pusha
notb
jp
in
das
lret
push
mov
xor
pushl
jmp
mov
jmp
imul
jmp
cs
inc
mov
dec
mov
cmc
add
push
jle
mov
mov
mov
andb
sub
jo
jmp
sbb
pop
mov
jle
inc
test
std
lcall
mov
add
out
sti
sahf
insl
addl
push
aad
decl
jmp
xchg
adc
in
sbb
push
aad
sub
cmp
push
cmp
xor
or
dec
cld
jmp
rcrb
xor
leave
jmp
jl
imul
mov
jle
mov
lock
add
in
std
call
pop
pop
movl
jmp
add
je
mov
ljmp
dec
fdivrs
popa
mov
ret
adc
je
popa
mov
jmp
aad
adc
decl
jne
jmp
imul
sbb
imul
repz
gs
cld
and
push
jmp
roll
mov
stc
aam
aad
dec
in
movsb
ret
ds
movsl
xor
int
xchg
xor
popl
lea
jmp
std
imul
mov
inc
mov
ljmp
cwtl
imul
hlt
sub
jmp
rorb
mov
cs
mov
cli
or
dec
bnd
cmpl
mov
dec
cmp
jmp
mov
mov
inc
and
ss
inc
pushl
jmp
popa
fwait
cmp
or
adc
add
mov
jmp
mov
lods
cmpsl
aaa
push
mov
jb
inc
xlat
push
lret
mov
lea
jmp
push
pop
int
pushl
jmp
cmp
add
mov
cmpsb
shll
sub
sarb
roll
add
jne
addl
jmp
lea
cwtl
decl
fisttpll
cld
jmp
inc
lds
iret
cmp
icebp
sbb
add
sahf
insl
daa
lods
and
push
insb
jl
les
inc
cld
or
add
lea
jmp
movb
jmp
xchg
and
mov
inc
mov
mov
fwait
out
pusha
notb
scas
jmp
and
lea
xchg
icebp
add
clc
dec
jge
jl
negb
insb
call
jmp
inc
int3
std
and
test
decl
jmp
ss
jne
jmp
mov
mov
das
pushf
fs
imul
push
sub
push
lds
sahf
or
cmpsb
movlps
out
push
lods
test
jmp
pop
leave
jmp
out
loope
jae
test
jecxz
in
jge
divl
adc
addr16
mov
mov
mov
andb
sub
jo
jmp
or
or
jbe
out
leave
xor
jmp
fiaddl
mov
test
lods
sub
jmp
pop
lret
pop
ds
bnd
xorl
cli
adc
adcl
cmp
and
jmp
fstpl
jle
in
jmp
sahf
sbb
ds
orb
decb
xchg
outsb
fwait
cmc
jp
in
jmp
or
arpl
frstor
or
push
rolb
sarb
pop
repnz
fs
pop
pushf
xor
inc
das
movsl
xor
pop
mov
jmp
mov
ret
push
jno
jecxz
jge
popa
add
push
test
cwtl
decl
ficomps
jbe
pop
mov
mov
mov
andb
sub
jo
mov
jmp
loop
pop
mov
aaa
mov
jmp
pop
enter
pop
mov
jg
sub
add
dec
mov
ret
jmp
xor
sbb
mov
addl
jmp
jecxz
jmp
jge
lahf
or
iret
pop
cmp
pusha
or
inc
add
movzbl
jmp
xchg
add
mull
icebp
cmp
lret
pop
ds
add
sub
add
xchg
popf
pushl
jmp
fisttpll
mov
xchg
cmc
add
and
movsb
lods
test
rcl
loopne
cmp
je
popa
mov
jmp
sti
fs
popf
insb
jmp
into
pop
cmp
pop
test
ret
enter
add
add
jmp
stos
in
push
jmp
aam
lret
mov
cmp
pop
xchg
pop
bound
push
mov
jmp
dec
fidivrs
or
movsb
add
add
jge
je
jo
js
jmp
mov
add
add
push
mov
push
cmp
or
ret
dec
fnstcw
sub
add
xchg
popf
pushl
jmp
mov
fcmovnbe
pop
int3
stos
rclw
jmp
inc
lea
jmp
iret
inc
mov
xchg
movsb
sub
fstpt
inc
aad
dec
sti
push
in
pusha
adc
jmp
les
lods
pop
hlt
push
mov
xchg
daa
push
ret
ret
lods
mov
arpl
mov
sub
pushl
lea
push
mov
jmp
ret
insb
push
fs
movl
jmp
mov
jmp
jg
jg
jmp
in
mov
test
stc
outsb
push
pushl
call
add
jmp
adc
pop
jb
sub
inc
sub
push
jns
jo
loop
stos
lea
jmp
cmp
movb
jmp
je
bound
mov
jae
xchg
add
jmp
add
push
jmp
out
jae
xchg
dec
into
pop
cmp
ds
jl
jmp
imul
inc
jmp
jb
pusha
pop
repnz
sar
call
scas
adc
jge
push
pushf
jmp
sub
jge
addr16
pushf
jmp
sub
jmp
xchg
adc
loopw
pop
loop
lock
jp
mov
incl
mov
js
imul
sub
inc
and
jmp
aaa
pushl
jmp
sub
cmpsb
sub
gs
pushf
outsl
mov
sub
das
fwait
adc
mov
jmp
pop
popf
jmp
mov
jmp
xchg
sbb
push
mov
gs
and
ljmp
leave
jne
leave
ret
jmp
add
jmp
fimuls
mov
mov
jmp
imul
pop
enter
jns
push
xor
addr16
push
xor
js
mov
std
decl
inc
or
rcll
inc
jne
jmp
sub
das
dec
mov
push
mov
add
adc
jnp
in
add
in
subb
loopne
decl
inc
adc
sub
sub
rcrl
data16
push
andb
sub
jo
mov
and
cmp
jmp
mov
jmp
scas
sub
lds
mov
clc
js
mov
push
or
cmpl
js
ljmp
mov
push
sbbl
jmp
das
test
les
mov
cmpsl
push
test
jge
jg
push
int3
mov
add
add
ret
jmp
mov
popa
jmp
ds
cmp
outsl
or
jecxz
out
jl
testb
adc
rolb
rolb
and
add
cmp
je
jmp
popl
jmp
sahf
adc
je
lea
dec
fdivrs
rolb
add
jmp
imul
mov
popf
push
mov
gs
push
add
mov
les
mov
sbb
jl
jmp
movb
inc
jmp
cltd
imul
mov
mov
sbb
jne
jmp
jle
icebp
fnsave
jmp
mov
aad
xchg
adcl
mov
mov
das
lcall
fucom
aad
mov
jne
lea
pushl
lea
jmp
pushl
lea
jmp
cmpsb
es
or
lock
jmp
xor
ud0
jmp
mov
mov
fdivl
in
push
sahf
or
cmpsb
dec
push
roll
aad
mov
mov
sub
push
mov
push
mov
lea
jmp
mov
pop
lahf
mov
jmp
movsb
cmp
insl
std
test
rolb
inc
mov
movl
mov
cmp
sub
jge
testl
std
ljmp
add
add
cmpsl
aaa
push
mov
fldcw
fucomp
jae
xchg
inc
int
jo
jbe
jmp
and
mov
rep
jmp
aas
jnp
mov
jmp
fistps
scas
pop
test
rolb
shlb
popa
out
jg
jmp
out
test
jne
jmp
xor
test
incl
add
add
push
mov
idiv
dec
jmp
clc
ja
xorb
lahf
punpckhdq
mov
and
add
decl
pop
jne
jmp
xchg
sbb
inc
xlat
mov
call
clc
jmp
pop
call
jmp
sub
jae
roll
sarl
sub
loop
call
add
add
jmp
cmp
dec
jecxz
push
in
xchg
add
iret
pop
cmp
pusha
adc
call
jmp
jg
js
ljmp
sqrtps
pop
aas
lret
sti
cli
sub
jne
jmp
out
in
mov
out
cli
xor
mov
jmp
cmp
sbb
add
pop
cmp
push
ret
mov
mov
jg
jmp
inc
mov
add
test
je
test
jbe
jmp
int
ret
mov
mov
ss
inc
mov
movb
cmp
add
jp
jp
push
rolb
sarb
imul
or
adc
out
jmp
icebp
jp
jp
pushl
mov
jl
imul
or
sub
repnz
call
mov
call
mov
shr
jmp
push
sbb
dec
dec
jmp
int
shll
dec
fisttpll
mov
xchg
repz
int3
and
jbe
ficoms
test
call
enter
incl
int3
inc
xlat
mov
call
dec
sti
dec
fimull
fidivl
sub
jmp
pop
enter
jns
mov
jne
dec
fidivrs
pop
cmp
data16
stc
imul
adc
and
jns
jmp
pop
jmp
jmp
add
jmp
jne
ja
loope
cs
xor
insb
cmc
gs
pop
mull
jne
jmp
mov
cltd
or
jae
mov
inc
mov
and
dec
xlat
inc
and
pop
xlat
cmpsb
jmp
jmp
pop
pop
decl
jmp
inc
rclb
or
stos
cmp
inc
lea
and
sti
inc
lret
repnz
je
pushl
imul
lea
jmp
sub
add
jg
lcall
bswap
in
test
jmp
inc
ret
ret
jo
xorl
mov
shll
in
test
jne
movl
lea
jmp
adc
inc
xlat
pop
int
orl
test
decl
jmp
xor
in
jmp
jmp
or
xor
push
nop
sbb
test
sahf
stc
or
jmp
jmp
inc
jmp
rcrl
fs
cli
push
lea
mov
es
mov
lea
shr
inc
pushl
lea
push
push
mov
jmp
ret
push
shll
jmp
mov
mov
and
dec
adc
add
mov
push
add
push
mov
jmp
hlt
lock
lcall
add
push
pop
cmp
jne
mov
test
jne
jmp
int3
pop
into
test
scas
xor
or
andb
sub
jmp
mov
jmp
leave
pop
repnz
fs
lds
xchg
cmpsb
xor
cmp
pushl
or
or
jbe
push
lret
mov
repnz
pop
bnd
add
dec
shl
push
jmp
lret
mov
cltd
push
push
mov
pop
lods
dec
iret
mov
ret
cmp
mov
cmpsl
ret
mov
mov
and
cmp
jne
addl
jmp
out
adc
sbb
mov
popl
lea
jmp
push
rolb
sarb
sub
jb
outsl
or
in
jecxz
sahf
sub
jmp
adc
inc
das
cmpsb
xor
scas
pop
outsb
loopne
adc
inc
mov
mov
cs
pop
push
add
push
movzbl
movzbl
shl
or
jmp
cwtl
adc
pop
mov
js
dec
insb
out
adc
dec
and
cmp
out
or
movzbl
shl
or
mov
add
add
jmp
pop
lret
lret
jmp
push
les
int3
gs
push
jmp
inc
aam
dec
ljmp
push
pop
enter
jp
arpl
cmc
pop
repz
pop
ret
jmp
lods
aas
scas
lret
pop
int3
inc
and
mov
in
decl
dec
sub
das
dec
mov
popa
nop
jp
pop
jmp
add
jmp
addr16
insb
or
out
cmc
imul
gs
pushf
outsl
ljmp
cmp
test
lcall
mov
call
jmp
cwtl
sbb
insb
xchg
jmp
cld
mov
push
mov
es
pop
xchg
add
sahf
jnp
jnp
mov
push
lahf
punpckhdq
jmp
insl
out
jg
jmp
cmpsb
push
mov
fsts
fmulp
fwait
into
mov
mov
mov
andb
sub
jmp
jnp
add
jl
xor
dec
fnstcw
in
mov
shll
xchg
mov
cmp
and
rcrl
xchg
cmpsl
add
pop
jp
xor
sub
push
mov
xor
mov
jmp
jo
jmp
xchg
or
fwait
or
sub
xchg
jb
adcl
inc
adc
mov
sarb
sbb
adc
dec
sub
xchg
add
add
jmp
popa
sti
imul
dec
dec
fisttpll
out
push
pushf
xor
addr16
jecxz
add
cmp
je
popa
mov
jmp
les
mov
mov
inc
mov
into
push
mov
pop
rorl
int3
popf
mov
cmpsb
shll
mov
movsb
ret
ds
rcl
adc
jno
xorb
scas
cmp
mov
lds
lods
popl
jmp
adc
mov
leave
addr16
adc
or
add
cmp
je
popa
mov
jmp
mov
mov
test
jbe
push
lea
shr
inc
add
inc
jmp
in
mov
jmp
addl
or
cmp
cs
mov
lods
pop
mov
or
in
out
mov
jmp
mov
lods
and
sub
cmp
dec
sahf
adc
ret
jmp
ja
outsb
or
sub
mulb
cmp
mov
push
rclb
jbe
jne
jmp
sub
ficoms
gs
int3
inc
and
add
and
lea
adcb
xorb
pop
mov
mov
mov
mov
mov
add
add
dec
jmp
ljmp
cltd
push
aas
lret
mov
cmc
int3
lock
jmp
pop
push
xor
or
mov
aas
movsl
xor
cltd
or
jno
cmp
push
pushf
jmp
cli
fs
popf
insb
jmp
pushf
xor
and
pop
cmp
add
ret
push
lds
sub
and
jmp
in
sti
sahf
insl
adcl
sub
bound
jmp
pop
fmuls
fmuls
lret
in
adc
mov
jmp
sub
and
dec
data16
cmp
jne
addl
mov
jmp
jnp
addr16
or
addb
dec
mov
or
or
popf
pushl
jmp
data16
cmc
adc
add
outsl
or
hlt
cmpsb
fdivrp
test
dec
adc
enter
outsl
clc
jne
mov
sub
insl
je
outsl
or
mov
lock
pop
enter
jle
push
mov
es
icebp
notl
sbb
mov
jmp
mov
jg
sub
jmp
rolb
dec
std
lds
lret
mov
jmp
mov
mov
and
mov
imul
jo
repz
jmp
jo
jmp
loopne
call
insb
loop
je
sub
jae
js
ljmp
mov
jmp
pop
les
int3
dec
lock
std
test
repz
dec
out
mov
ret
pop
fistl
imul
mov
stos
int
aam
cmp
sub
add
xchg
popf
pushl
jmp
popl
jmp
cmpsl
es
cs
aaa
pop
pop
lds
andl
jmp
push
roll
shrl
bnd
mov
arpl
jne
out
sbb
stos
cmp
inc
xor
jmp
test
movsl
andl
jmp
mov
iret
js
popa
add
adc
iret
ss
test
or
push
jnp
imul
pop
pop
xlat
inc
and
or
imul
insl
test
loopne
add
and
jmp
mov
lcall
jmp
mov
dec
mov
jae
daa
and
xchg
nop
dec
orl
rolb
add
jmp
mov
ljmp
nop
jns
jge
testl
lods
aas
scas
lret
mov
movl
movl
movl
jmp
rcll
sub
add
xchg
popf
pushl
jmp
or
jmp
and
add
add
push
leave
pop
cmp
or
mov
jbe
jmp
popf
mov
jmp
pop
les
int3
mov
xchg
adc
and
push
lds
je
add
fdivrp
out
ja
xorb
jecxz
push
in
out
addl
add
fnstenv
int3
add
pop
movzbl
jmp
jmp
scas
sub
lds
outsb
out
jl
negb
push
roll
shll
aas
scas
lret
fbstp
adc
sar
inc
adc
popl
jmp
dec
into
pop
cmp
add
insb
loop
je
or
fstl
lods
pop
scas
orl
popf
aad
mov
ja
loope
sbb
aam
movl
cmp
and
mov
gs
xor
movsb
dec
mov
push
cmp
je
popa
mov
jmp
push
lahf
punpckhdq
iret
cmp
push
fs
jmp
fs
outsb
push
jmp
out
stc
cwtl
imul
loope
adc
push
mov
sahf
jnp
jns
jmp
dec
push
jmp
mov
jmp
mulb
push
in
jns
mov
es
inc
mov
add
cmpl
jne
addl
mov
jmp
inc
add
dec
fisttpll
out
push
pushf
xor
addr16
push
mov
xchg
mov
jecxz
mov
sub
push
mov
push
mov
lea
call
jmp
or
or
jae
and
jmp
lds
and
jmp
pop
rclb
inc
and
sub
addb
icebp
add
leave
dec
fdivrs
not
jmp
stos
sub
repnz
pop
repnz
jg
outsl
or
stc
insl
ljmp
popa
jmp
test
xchg
icebp
add
in
mov
mov
jmp
or
jmp
outsl
ljmp
insb
or
cmc
dec
les
int3
cs
mov
or
andb
sub
jo
mov
jmp
adc
movsb
push
jmp
add
jmp
sub
orl
in
imul
insl
ficoms
lods
pop
scas
lods
and
mov
scas
push
mov
jmp
repz
jne
push
and
inc
rol
jmp
jae
insb
or
mov
js
sbb
sbb
fldt
fs
jmp
or
xchg
mov
mov
jmp
adc
je
lea
ljmp
in
mov
add
je
clc
cmp
je
test
test
add
and
addb
add
aas
mov
jmp
in
adc
lret
dec
adc
add
add
icebp
and
rorl
mov
not
and
mov
and
or
add
jmp
push
int
and
cmp
lock
mov
inc
mov
pop
lea
jmp
rolb
jle
xlat
jmp
or
jmp
enter
dec
sbb
enter
dec
leave
pop
cmp
and
inc
fidivrl
iret
lsl
mov
not
and
mov
and
or
add
jmp
push
rolb
shrb
push
fisttpl
fisttpll
mov
and
mov
not
and
jmp
xchg
sti
add
mov
jmp
mov
mov
fisttps
ret
dec
fistpll
int
cmp
scas
cmc
jmp
movsb
sub
sahf
push
test
push
cli
movsl
sub
lds
and
mov
and
or
add
mov
lea
jmp
and
xchg
pop
push
fisttpl
push
xchg
mov
lods
mov
loop
pop
pop
mov
rol
add
mov
and
not
and
or
add
jmp
out
mov
jmp
push
lock
jmp
sub
outsb
add
cli
push
pop
mov
rorl
cld
mov
not
and
mov
and
or
add
jmp
movsb
push
in
ret
ret
jg
rorl
cld
mov
and
or
add
mov
jmp
mov
aad
xchg
int3
pop
iret
stos
pop
rclb
ret
or
jmp
push
adc
ss
lea
jmp
add
inc
in
je
lea
xchg
mov
std
lea
ror
add
and
mov
not
and
jmp
inc
rol
jmp
pop
xchg
adc
bnd
pop
leave
test
nop
push
inc
and
ss
jge
mov
jmp
pop
fimull
fidivl
xchg
push
test
push
sti
or
or
mov
add
fistps
test
call
roll
sarl
push
fisttpll
out
arpl
cmp
inc
xor
jl
gs
pop
push
jo
loop
out
stos
pop
pop
and
cmp
jne
addl
mov
jmp
pop
xlat
inc
and
sub
je
lea
push
rol
add
mov
not
and
mov
and
or
add
jmp
jo
loope
mov
pop
mov
adc
mov
push
cltd
or
ds
pushf
ja
ror
jmp
cmp
pop
rolb
mov
rep
cld
xchg
cmc
add
adc
xchg
aaa
ror
add
and
mov
not
and
or
add
mov
jmp
gs
shr
sub
not
jmp
scas
aas
scas
lret
outsl
stc
imul
shll
repz
int
mov
jmp
das
das
daa
add
aad
iret
pop
cmp
xor
xchg
jl
jae
xchg
mov
les
add
jmp
sub
lret
jmp
push
add
jmp
test
mov
sbb
dec
xchg
rcrb
push
fsubrp
cmp
mov
lea
jmp
xchg
or
or
jmp
push
rolb
sarb
cltd
mov
mov
jmp
xchg
adc
je
lea
or
cmc
gs
or
mov
and
mov
not
and
or
add
lea
jmp
or
jmp
lea
jmp
or
mov
fisttpl
mov
jle
imul
fwait
arpl
jge
jmp
lea
fwait
decb
jle
js
inc
shll
mov
and
aad
mov
imul
pop
add
mov
and
not
jmp
push
fdivl
in
in
notl
stc
imul
lret
lret
rol
add
mov
notl
mov
mov
and
jmp
xchg
mov
in
mov
lea
ror
add
jmp
jl
notl
jmp
fsubl
jge
jmp
sbb
push
ret
ret
push
mov
sub
mov
mov
jmp
enter
addr16
adc
mov
popf
sub
pop
mov
stc
or
aaa
pop
and
jmp
xchg
adc
mov
jmp
or
sbb
push
rclb
cmpsb
push
aam
mov
jle
inc
and
jmp
lret
mov
mov
cld
jmp
lcall
pop
xchg
adc
inc
rcll
aas
or
and
fsubs
sti
mov
or
add
lea
rol
jmp
cmpsl
sbb
mov
jmp
inc
and
jmp
addl
mov
xchg
jle
dec
fdivrs
add
jo
xchg
mov
not
and
mov
and
or
add
mov
lea
jmp
xchg
rol
add
mov
jmp
mov
shll
add
dec
push
jecxz
push
in
jno
jmp
outsl
out
adc
dec
xor
push
lds
leave
dec
fstpt
pop
cmp
outsl
sbb
hlt
rol
add
and
mov
mov
jmp
out
jmp
jge
push
rclb
imul
iret
jmp
or
mov
loop
add
cltd
setg
or
cs
jl
jne
xor
negb
mov
ror
add
and
or
add
mov
lea
jmp
in
out
jo
xor
mov
inc
add
rorl
dec
cld
jmp
outsb
not
jmp
movsb
aaa
cmpsl
ret
jb
jle
call
push
mov
sbb
mov
jmp
mov
mov
and
xlat
inc
and
pop
imul
or
add
mov
mov
not
and
mov
and
or
add
jmp
and
jmp
incl
sbb
jmp
stc
cwtl
imul
in
sub
xlat
jmp
rol
jmp
lods
sub
lret
cmp
data16
xchg
outsb
nop
ss
inc
mov
xor
dec
pop
lcall
andb
inc
cld
mov
and
or
add
lea
mov
jmp
ret
mov
add
jmp
jbe
xchg
testb
inc
cmpsb
iret
inc
aam
dec
mov
push
hlt
sbb
jns
rorl
filds
jge
mov
lea
jmp
sbb
add
sbb
rorl
test
cli
orl
jmp
push
in
dec
xchg
or
ljmp
std
test
dec
fimuls
push
dec
fmuls
fdivs
out
jl
testb
rorl
fadds
inc
enter
lea
rol
jmp
and
jmp
push
pop
jp
ds
hlt
pop
mov
cmp
or
not
jmp
jb
or
jmp
not
jmp
jmp
nop
lcall
scas
aas
pop
test
jl
or
mov
not
lea
mov
and
ror
add
jmp
ja
add
mov
lea
rol
add
mov
jmp
rol
jmp
add
fldpi
cmp
mov
push
ret
cmpsb
push
lcall
sbb
and
rorl
roll
pop
in
mov
not
and
lea
jmp
fildll
testb
and
jmp
xchg
push
test
push
sti
mov
cmpsl
ret
add
adc
push
push
inc
and
filds
iret
jmp
dec
or
jmp
cmp
xor
imul
adc
mov
nop
testl
and
ret
or
add
mov
lea
mov
and
jmp
and
jmp
mov
int3
rcrl
test
jecxz
jne
pause
push
fldpi
ffreep
sub
cmp
push
das
mov
fistl
mov
mov
cs
lods
sahf
add
mov
mov
not
and
jmp
dec
fdivl
in
pop
leave
pop
cmp
js
ficompl
lahf
add
jmp
pop
lret
mov
jmp
and
inc
rolb
shlb
dec
frstor
mov
and
or
add
mov
lea
ror
jmp
cmp
or
jmp
mov
jmp
enter
shrl
jecxz
lock
xor
dec
fdivrs
push
push
stos
pop
add
iret
pop
add
jmp
lea
jmp
adc
imul
xchg
setg
or
in
shr
int
lret
xor
push
aaa
ret
pusha
notb
popf
in
std
int3
jl
test
lsl
lea
rol
add
mov
and
mov
jmp
call
xor
xor
add
lea
jmp
pushf
sbb
aad
int3
stos
sub
mov
dec
mov
jmp
add
jmp
rol
jmp
or
pop
rcrb
scas
pop
mov
adc
mov
rol
add
not
and
mov
and
or
jmp
xor
rol
add
xor
jmp
push
fldt
inc
iret
pop
cmp
xor
icebp
sbb
jbe
cmpl
and
lea
jmp
pop
into
test
xor
into
pop
cmp
adc
sbb
cld
or
add
lea
mov
jmp
jno
mov
mov
popa
popf
insl
jmp
fcomps
scas
pop
cld
mov
aad
xchg
aas
lods
and
sbb
mov
xor
xor
add
mov
jmp
mov
sbb
rol
jmp
fs
imul
push
pop
xchg
pop
bound
jmp
mov
adcb
jno
aaa
sbb
ret
pop
iret
stos
pop
movsb
adc
lea
rol
add
mov
mov
not
jmp
jg
mov
in
jmp
in
in
mov
mov
es
mov
cld
sub
lsl
jmp
add
inc
fldl
shr
insb
add
add
jle
call
sbb
sub
jo
dec
jecxz
mov
inc
hlt
mov
jmp
sub
dec
lret
lret
adc
das
ffree
lret
mov
mov
inc
mov
pushf
sbb
jae
xchg
inc
add
lea
rol
add
mov
not
and
jmp
jne
insl
hlt
pop
notb
jno
outsl
or
jecxz
ljmp
call
jmp
ss
adc
mov
int3
lock
jns
mov
xor
xor
add
lea
rol
add
jmp
dec
ret
aaa
imul
inc
fmull
mov
loope
adc
and
add
sahf
or
add
jmp
xchg
sbb
or
xor
jmp
rolb
mov
out
mov
js
cmp
gs
push
mov
cwtl
adc
add
lea
rol
add
jmp
lds
cmpsl
push
sti
pop
into
pop
cmp
popa
jmp
and
inc
cmp
mov
jmp
push
push
add
jmp
dec
xlat
inc
and
sbb
cmp
jb
xchg
flds
mov
test
xor
add
lea
mov
xor
rol
add
jmp
outsl
mull
icebp
js
sub
sti
jg
mov
adc
adc
sub
fwait
sub
roll
xor
add
jmp
addl
or
add
jl
xor
push
add
mov
xor
xor
add
jmp
cmpsl
daa
mov
and
ljmp
xchg
add
mov
inc
mov
and
lods
insl
rol
jmp
leave
inc
shll
lcall
cmp
dec
stos
cmpsl
jge
cmp
pushf
cmp
daa
mov
lea
jmp
mov
jmp
ror
jmp
dec
fdivrl
out
mov
inc
enter
sbb
jle
repnz
mov
mov
lea
call
pop
movl
jmp
cli
jbe
cmpl
aad
sub
jp
mov
inc
mov
fbstp
flds
pop
mov
push
lods
jmp
das
mov
mov
mov
sbb
clc
push
gs
popa
add
inc
imul
enter
add
add
push
shlb
fisubrl
adcb
aaa
ret
outsb
mov
fdivs
flds
pop
lock
rol
add
mov
jmp
movsl
cmp
fs
insl
hlt
pop
out
in
sbb
pop
mov
scas
cs
not
jmp
or
xor
jmp
and
sub
pop
aaa
add
shr
incb
add
clc
data16
xchg
outsb
jmp
cmpsl
and
pop
lret
scas
pop
xchg
mov
mov
jmp
jbe
fs
push
xchg
or
jmp
add
jmp
mov
lahf
cli
or
setg
or
pop
nop
push
popa
nop
inc
pop
stos
xor
roll
iret
sub
ds
test
xor
ret
mov
mov
push
fisttps
fsts
mov
inc
mov
or
inc
push
mov
not
or
xor
add
lea
jmp
insl
in
sbb
lahf
cli
or
shr
xor
int3
clc
push
xor
jmp
push
xchg
add
push
xlat
pop
enter
and
adc
sub
cli
mov
jmp
ret
sbb
push
rorb
xchg
ljmp
jmp
add
jmp
cs
insl
cli
push
jno
xorb
push
xor
xchg
mov
not
or
xor
add
lea
rol
jmp
inc
fisttpl
fnstsw
dec
sub
and
lret
pop
ds
or
xchg
cld
ror
add
mov
not
or
xor
jmp
repz
dec
fidivrs
frstor
aaa
ret
rorb
fimuls
pop
gs
mov
ds
jmp
out
jae
xchg
lea
pushf
sti
push
xchg
adc
or
jno
adc
add
jmp
rol
jmp
mov
jmp
leave
dec
frstor
lock
orl
inc
ret
ret
jmp
xor
xor
add
lea
rol
add
mov
jmp
push
fadds
pushf
push
test
push
in
pop
inc
and
cmp
cmp
fldt
add
fnstsw
inc
add
jmp
dec
ret
ret
and
mov
js
dec
mov
and
lea
jmp
and
jmp
lcall
roll
aad
pop
test
mov
xor
xor
add
lea
rol
add
mov
jmp
jno
jne
out
pop
lds
cmpsl
push
sti
inc
enter
fsts
cmpsb
push
in
mov
inc
mov
rol
jmp
pop
lret
pop
ds
sub
pop
xor
and
pop
stos
xor
add
mov
not
or
xor
add
lea
jmp
cmp
jnp
repz
mov
not
or
xor
add
lea
jmp
lret
scas
pop
fdivl
popa
add
cmp
fucomip
daa
cmpsb
dec
xlat
or
jmp
es
cmp
inc
push
sahf
or
cmpsb
dec
xchg
xchg
repz
jmp
sub
jne
enter
lock
jmp
dec
ret
sbb
mov
fsubr
mov
lods
lret
inc
xchg
or
jne
mov
push
fidivs
mov
not
rol
add
or
xor
add
lea
jmp
mov
lods
lret
inc
mov
lods
cmp
enter
sub
adc
ret
rorl
shll
flds
pop
int3
lea
jmp
fistl
cmpsl
push
mov
into
imul
push
fdivl
in
jle
por
cmpsb
sub
mov
inc
mov
jle
arpl
cmc
pop
je
jp
in
pop
fsubrs
sbb
jecxz
cli
jmp
lods
cmp
mov
in
mov
mov
es
mulb
xchg
popa
int
iret
stos
pop
sarb
add
lea
jmp
cmp
not
jmp
xchg
mov
cld
lods
not
jmp
imul
mov
ja
bound
fdivrl
ljmp
xor
add
lea
mov
jmp
daa
lea
jmp
and
sbbb
jmp
mov
pop
loopne
xor
mov
add
not
rol
add
or
xor
add
mov
jmp
call
mov
xchg
jns
lret
lret
std
insl
hlt
pop
loopne
cltd
test
enter
add
sbb
scas
sub
lock
bound
and
jge
cmpsb
xor
scas
inc
loop
cltd
push
jns
push
or
rol
add
mov
not
or
xor
add
lea
jmp
in
fs
lea
jmp
pop
rolb
shlb
sbb
xchg
lahf
cli
or
mov
xchg
repz
int3
mov
ret
mov
jmp
dec
lret
pop
ds
mov
sahf
pop
enter
popa
inc
aas
inc
inc
inc
cltd
mov
mov
add
mov
mov
jmp
imul
or
dec
push
lea
std
insl
hlt
pop
mov
mov
dec
mov
mov
jmp
mov
mov
gs
pushf
outsl
lret
lods
lret
inc
test
inc
xor
or
xor
add
movl
lea
jmp
ret
movb
inc
jmp
inc
fstpt
loope
out
mov
mov
xchg
adc
dec
xlat
decl
test
jne
leave
ret
jmp
lahf
pop
xchg
repnz
movb
fidivrl
and
pushf
jmp
pop
pop
jmp
stos
sub
adc
add
ret
inc
shll
jbe
loopne
rclb
pop
mov
stos
jge
lret
popf
pop
jmp
adc
xor
imul
movsl
fsubr
mov
movsl
push
lcall
push
shlb
or
xor
add
lea
rol
mov
add
jmp
enter
inc
mov
arpl
xchg
int3
out
add
call
mov
mov
nop
testl
sub
jp
jne
hlt
mov
imul
aaa
movsb
cmp
add
lock
nop
pop
xchg
repnz
inc
or
loope
in
jg
hlt
popa
icebp
nop
arpl
sbb
mov
ret
jmp
jmp
add
sub
inc
aam
dec
jmp
addl
xchg
adc
jg
xchg
popf
pushl
mov
jmp
or
or
jbe
mov
jmp
xor
mov
and
xchg
out
dec
cmp
jb
mov
and
cmp
jne
addl
jmp
jno
push
int3
popf
lret
test
lock
insl
cwtl
imul
or
stc
cmp
call
popl
jmp
bnd
xorb
xor
pop
fisttps
flds
push
nop
xchg
jmp
rcll
lods
pop
mov
fs
jmp
lret
cmpsb
push
test
pop
ds
pop
fisttps
fsubs
jmp
daa
mov
inc
mov
mov
fst
arpl
xchg
xchg
fisubs
sub
fs
popa
mov
jmp
mov
shll
addr16
jmp
test
mov
das
stc
and
jno
xchg
cmc
add
rolb
mov
hlt
rcll
loopne
cmpsb
test
icebp
jmp
add
jns
jg
jmp
movsb
push
cld
ret
lods
pop
in
fmull
call
int
xchg
les
add
sub
cs
mov
cmc
add
mov
pop
movzbl
add
jmp
fiadds
dec
popl
xchg
xor
arpl
pop
repnz
mov
mov
jne
jns
jmp
out
out
mov
push
lahf
adc
sti
xor
add
lea
ror
add
mov
jmp
mov
jmp
mov
stos
into
cmp
hlt
mov
jmp
addl
pop
add
sbb
outsb
inc
ret
ret
adc
mov
shr
mov
lea
shl
and
mov
cmp
jmp
pop
cmp
jmp
inc
rcll
push
stos
cs
inc
aad
dec
movsl
push
fimuls
adc
andl
jmp
xchg
and
icebp
mov
lods
mov
mov
mov
sub
jmp
inc
lds
jmp
sbb
sbb
std
ja
xorb
add
mov
dec
adc
jmp
and
shll
jmp
jmp
out
mov
adc
shr
jmp
jmp
and
sub
adc
fwait
or
sub
sub
jo
lahf
fisubrl
or
jmp
sub
aam
jg
mov
fcoms
cmpsb
push
hlt
rorl
mov
outsl
inc
test
jae
incl
jmp
rorl
ja
bound
jnp
in
add
push
shlb
std
inc
add
push
or
dec
xor
call
pop
jmp
jg
enter
cwtl
add
add
es
fimull
ficompl
pop
or
sbb
add
add
lock
bound
mov
inc
mov
adc
mov
test
jl
push
mov
mov
jmp
inc
push
xor
xor
dec
fidivrs
shlb
add
jmp
out
icebp
nop
arpl
dec
cld
jmp
pop
jmp
lea
jmp
add
aam
int
addr16
inc
aam
dec
stos
sbb
cmp
add
add
nop
push
popa
nop
arpl
pushf
xor
add
dec
es
jmp
pop
jmp
push
fisttps
fnstenv
jb
xchg
xor
push
lds
or
cmpsl
jmp
mov
lea
call
addl
jmp
jbe
mov
add
push
jmp
mov
mov
and
add
sti
jmp
popf
or
in
mov
ret
jmp
mov
hlt
popa
icebp
nop
arpl
or
or
xchg
cmp
jmp
sarl
jmp
pushf
setg
or
sbb
stos
xor
leave
jmp
jmp
xchg
cltd
roll
add
test
add
call
jmp
setg
push
push
or
inc
adc
push
rclb
imul
int
inc
sbb
lods
call
jmp
mov
mov
and
ret
jne
addl
mov
movzbl
jmp
iret
and
je
jmp
add
xchg
inc
mov
jmp
lods
dec
imul
popf
jns
or
add
mov
inc
mov
nop
inc
jbe
cmp
jmp
nop
or
add
bound
add
jecxz
out
mov
repz
or
jecxz
jmp
dec
jmp
jmp
int3
popf
ljmp
stc
in
mov
add
sbb
call
mov
mov
andb
sub
jo
jmp
jl
lcall
add
mov
add
jge
jno
jecxz
loope
lea
jmp
int3
popf
mov
in
jbe
jmp
sbb
adc
push
xchg
daa
insl
lds
add
add
jmp
push
call
jmp
mov
movsb
ret
negl
adc
decl
loopne
dec
push
push
jmp
test
int
int3
popf
pop
jmp
fwait
and
je
pop
xchg
popf
pushl
mov
jmp
cli
adcl
test
shll
mov
jmp
out
inc
clc
jmp
test
add
add
out
daa
add
hlt
ja
xorb
mov
cmc
sub
call
jo
push
repnz
call
jmp
popf
add
sub
jnp
daa
adc
popf
sbb
jmp
sub
add
dec
fidivrs
shr
push
pop
and
pop
cmp
jb
push
pop
jmp
outsl
in
sbb
or
dec
push
pop
jmp
pop
call
jmp
lcall
push
pushf
sti
push
mov
test
add
iret
or
popf
jmp
and
cmp
jge
inc
xlat
mov
aam
push
jmp
call
jmp
test
scas
jmp
mov
shlb
mov
push
push
push
lea
push
pop
mov
lea
call
jmp
lea
stc
push
lahf
push
scas
adc
mov
jmp
mov
jmp
mov
aad
xchg
cmpsb
int3
popf
cmp
xchg
jmp
pop
xchg
add
sahf
aaa
imul
call
mov
push
pop
mov
call
push
jmp
or
or
sub
jp
in
int
call
jmp
iret
pop
into
test
nop
xchg
ret
jmp
popa
fwait
push
jmp
call
jmp
push
shll
add
push
hlt
mov
mov
incl
ljmp
mov
inc
mov
jecxz
pushf
jmp
xchg
setg
or
xchg
pop
jmp
mov
add
add
jmp
or
add
jg
call
pop
sub
add
xchg
jmp
pop
stos
aad
pusha
jmp
mov
jmp
pop
int3
popf
ret
aas
jmp
xchg
adc
inc
aam
dec
leave
or
cwtl
mov
jmp
loop
notb
push
jl
dec
mov
jmp
lods
sub
jmp
mov
jno
jecxz
fists
enter
dec
xor
add
inc
and
aaa
cmpsl
iret
sub
add
xchg
popf
pushl
jmp
pushf
pop
loopne
mov
add
jmp
dec
iret
pop
cmp
aas
rorl
mov
ret
mov
les
jne
addl
mov
jmp
int3
popf
or
pop
push
cmp
add
jmp
lcall
clc
cld
jp
das
jmp
call
jmp
ss
inc
mov
dec
adc
popa
sbb
sub
jo
mov
and
cmp
jmp
xor
mov
xor
xchg
testb
add
add
jbe
jge
outsb
or
adc
jae
xchg
shl
jo
add
jmp
insl
sbb
jmp
cwtl
jmp
nop
sbb
les
int3
sub
rcll
cwtl
push
imul
ljmp
jmp
pusha
jmp
ret
adc
das
gs
xchg
repnz
ss
jbe
in
mov
and
jmp
in
mov
jmp
dec
fmuls
fsubrs
je
add
push
inc
aad
sub
je
sub
mov
inc
mov
cmpsb
xor
mov
call
add
xchg
popf
pushl
jmp
addr16
pop
jnp
jge
testl
add
data16
xchg
outsb
lods
add
popa
sbb
jmp
cmp
add
sub
das
mov
dec
mov
ret
pop
scas
popa
add
push
pushf
jmp
jle
jbe
loopne
mov
mov
lods
and
jge
mov
inc
movzbl
jmp
cmp
jmp
mov
leave
dec
int
and
xor
xchg
add
sahf
pusha
mov
bnd
addl
mov
jmp
scas
das
mov
sti
imul
push
sahf
xor
push
mov
test
jmp
or
jmp
push
in
sbb
addr16
sbb
sar
inc
adc
push
or
cmp
in
xor
fs
jmp
mov
test
test
pop
test
std
jno
xorb
jle
mov
popl
jmp
dec
lret
pop
ds
or
push
jmp
sub
jmp
push
jmp
dec
fisttpll
out
repz
notb
adc
hlt
push
cld
push
pop
popa
mov
jmp
rolb
dec
std
adc
adc
sub
adcl
test
inc
mov
and
mov
xor
leave
push
shlb
out
stc
mov
mov
std
jmp
add
jmp
inc
jmp
dec
roll
sarl
sbb
push
in
call
outsl
lcall
sub
jo
mov
and
cmp
jmp
out
jae
xchg
mov
cwtl
decl
loop
sbb
ret
push
lds
mov
shr
decl
jge
jmp
adc
lret
mov
adc
mov
push
xor
cmp
lret
push
call
jmp
sub
imul
in
fs
popf
insb
lahf
cmp
test
lcall
jmp
lret
inc
fidivrl
aas
pop
test
mov
add
add
add
mov
mov
adc
adc
leave
ljmp
jmp
sub
mov
jmp
mov
push
jmp
push
push
xor
jle
test
dec
jmp
inc
fisttpl
fnsave
dec
fdivrl
xchg
adc
xor
ljmp
lods
aas
scas
lret
scas
cmp
movsb
ret
ds
fdivl
jmp
cmp
jmp
ret
stos
pop
test
imul
insl
or
mov
mov
push
xor
mov
jmp
out
iret
adc
jmp
faddl
mov
mov
repz
push
mov
adc
dec
testl
clc
movzbl
add
jmp
call
add
add
cmp
loopne
repz
mov
fstps
stos
data16
scas
cmp
mov
jo
mov
ds
jmp
test
fsubl
push
jmp
jno
imul
pop
cmp
xor
call
and
push
bnd
mov
dec
rcll
data16
sub
pushf
adc
adc
lret
mov
jmp
xor
das
dec
mov
mov
adc
sbb
pop
jmp
jmp
jmp
pop
leave
pop
cmp
js
fdivl
in
adcb
jecxz
scas
push
xchg
testb
mov
jmp
pop
leave
pop
cmp
jle
cmp
lds
iret
push
mov
lea
movl
call
andl
jmp
mov
mov
loope
adc
or
clc
test
jne
pop
xor
pop
leave
ret
jmp
mov
lcall
cmpsb
out
add
decl
and
push
cmp
or
jmp
adc
fs
sbb
adc
mov
setg
or
inc
shlb
add
add
jmp
pusha
jmp
jmp
loop
je
xchg
push
test
push
jmp
xchg
add
jns
jle
mov
adc
sub
add
xchg
popf
pushl
jmp
sbb
jl
mov
mov
mov
andb
sub
jmp
repz
mov
and
inc
ds
inc
mov
jo
ret
aas
and
inc
adc
outsl
loopne
adc
xor
pop
repnz
cmpsb
sbb
aaa
in
movsl
xchg
popa
jmp
mov
sub
and
jmp
cmp
push
push
xor
data16
arpl
cmc
inc
jmp
call
push
jmp
jno
daa
loop
mov
jmp
cmp
jmp
inc
aam
sub
dec
sub
jno
jp
jp
push
sub
add
mov
pushl
das
add
mov
jmp
adcl
jecxz
mov
push
fstl
mov
bound
push
sbb
push
sbb
popa
jmp
ja
bound
cld
fwait
jbe
pop
rcll
sub
add
add
jg
mov
movsb
cmp
jecxz
push
in
testl
test
incl
add
mov
movzbl
jmp
es
cmp
inc
stc
jg
mov
divl
cmpl
cmp
jmp
cmp
inc
in
jmp
sub
scas
sub
sub
jg
mov
notb
shrl
jbe
loopne
ja
scas
pop
arpl
sub
jmp
mov
lods
mov
mov
repnz
xchg
popa
icebp
nop
arpl
fs
jmp
test
push
pop
add
pop
enter
ss
outsl
add
shll
int3
popf
jl
jp
in
push
stc
imul
popl
jmp
les
push
add
scas
lods
lret
inc
mull
pusha
pop
repnz
jle
int3
xchg
dec
bound
push
mov
mov
push
mov
mov
not
and
jmp
xor
mov
lahf
lds
mov
or
jmp
jae
jne
fmuls
add
add
dec
ret
repz
cmp
mov
xchg
scas
aas
pop
test
push
and
jmp
xor
push
roll
aad
jg
ja
loope
aas
push
dec
add
jmp
pop
rclb
inc
addl
repnz
daa
movsb
cmp
inc
ds
push
inc
jmp
mov
cltd
clc
or
jns
pop
cs
jmp
stc
jge
je
jnp
cltd
or
dec
fcomps
fs
sub
mov
enter
jmp
stos
jmp
xor
fs
push
fimuls
add
cmpsl
aaa
push
mov
jp
xor
lea
rol
add
mov
jmp
fistpl
scas
pop
cld
push
xchg
mull
add
add
fwait
or
dec
xchg
cltd
clc
or
and
adc
mov
jmp
rcrb
xchg
addr16
in
je
xor
stos
mov
fs
jmp
roll
mov
lock
lods
xchg
lods
cmpsl
mov
and
or
jmp
fimull
mov
dec
adc
push
xor
idiv
shrb
add
jmp
fisttps
mov
cmp
mov
gs
insl
hlt
pop
adc
push
jo
sti
jmp
mov
jns
jmp
mov
sbb
mov
jmp
pop
test
sbb
popa
std
insl
hlt
pop
add
enter
add
rol
add
mov
not
jmp
int3
dec
fdivrl
es
mov
into
dec
fdivrl
pop
and
xor
lea
jmp
addl
mov
xor
jno
xorb
and
or
add
mov
lea
mov
jmp
inc
int
and
es
shlb
shr
push
adc
sti
jmp
pusha
call
mov
xchg
lock
dec
fidivrs
addr16
sub
fsubrp
fiaddl
enter
pop
test
inc
mov
leave
pop
enter
js
xor
and
jmp
sbb
inc
aam
sub
and
jmp
mov
js
jmp
rolb
mov
decl
mov
std
insl
hlt
pop
mov
dec
lods
xchg
pop
call
mov
out
into
mov
add
mov
jmp
arpl
fs
pop
faddl
xchg
aaa
adc
mov
mov
not
and
and
or
add
mov
lea
jmp
inc
jecxz
push
in
in
in
mov
aam
iret
ds
dec
pop
pop
mov
fcomip
shll
shr
sbb
lods
cmp
jbe
cmpl
jns
mov
adc
mov
jmp
pop
fimuls
push
arpl
jno
jecxz
aaa
mov
inc
mov
outsb
inc
sahf
add
jmp
and
jmp
ljmp
xchg
add
inc
in
outsl
lcall
pop
and
cmp
jmp
or
jmp
add
jmp
jb
outsb
or
or
pushf
xor
inc
xchg
sbb
aad
ror
fstpt
push
mov
movb
pop
fadd
or
cli
jmp
inc
lret
lret
pop
repnz
fs
lea
loopne
fimull
inc
std
jmp
and
jae
xchg
xor
pop
or
int3
sub
push
sbb
mov
fs
popf
insb
fnstsw
test
pop
test
aam
shlb
fnstcw
xchg
add
mov
not
and
mov
and
or
add
mov
jmp
xchg
add
mov
enter
movsb
xchg
jmp
pop
int
and
jb
mov
inc
mov
xchg
gs
or
fiaddl
push
loopne
pop
mov
cwtl
subb
and
lds
in
push
shlb
repnz
jmp
inc
movhps
jmp
mov
fcmove
fwait
and
jmp
xor
lods
xor
fs
popf
insb
movsl
lds
mov
cmpsb
xchg
and
jmp
or
and
jmp
cmp
shr
aam
or
jmp
loopne
jne
jmp
adc
xchg
cli
jl
jne
jp
fisttpl
fisttpll
pop
mov
mov
not
and
mov
jmp
in
mov
scas
testl
lds
mov
lahf
cli
or
lock
jp
xchg
inc
add
jmp
add
je
notl
dec
fdivrl
ljmp
ror
add
mov
mov
jmp
test
mov
das
stc
cmp
adc
rol
jmp
sbb
mov
jmp
xchg
pop
inc
aad
sub
imul
sbb
and
adcl
mov
js
lea
mov
rol
jmp
scas
cmp
jp
mov
fimuls
not
and
or
mov
add
jmp
pop
leave
pop
cmp
js
pop
xchg
repnz
cld
dec
lods
add
push
div
and
or
add
mov
lea
jmp
lahf
decb
add
add
mov
jmp
stos
cmp
mov
in
test
sar
scas
or
testl
add
lea
mov
mov
jmp
or
jo
jg
jmp
arpl
or
cli
mov
notl
mov
and
mov
and
jmp
jge
mov
jmp
push
leave
pop
cmp
dec
nop
or
movsl
and
in
mov
cmp
and
dec
frstor
push
mov
jb
push
aad
cmp
or
jmp
sub
jmp
pop
fmuls
fsubs
inc
les
int3
sbb
scas
cmp
mov
in
outsl
lcall
lea
jmp
push
jbe
loopne
cli
push
push
xor
jmp
push
ret
cmpsb
push
mov
inc
fidivrl
push
xor
add
push
lock
rol
add
mov
not
and
mov
and
or
add
jmp
xlat
pop
into
test
fstpt
mov
cmpsb
jmp
sub
xor
mov
jmp
mov
mov
fisttpll
out
hlt
imul
insl
ret
cmc
pushf
outsl
faddl
cmpsl
mov
jmp
cmc
lock
lret
movsb
cmp
xchg
mov
jmp
jecxz
in
jg
jl
jg
jmp
pop
test
xor
inc
ffreep
into
or
testl
cld
jmp
push
xchg
mov
fidivrl
iret
por
inc
xlat
mov
enter
into
je
mov
jmp
adc
dec
fstpt
and
pop
push
rolb
sarb
aas
cmp
pop
cld
mov
mov
mov
ror
add
and
jmp
jmp
or
xor
inc
xor
sti
imul
sub
push
mov
sti
mov
notl
mov
and
or
add
jmp
scas
and
jmp
pop
fldt
push
cld
clc
outsb
or
sbb
inc
hlt
jmp
mov
into
mov
or
ror
jmp
mov
jmp
push
jecxz
push
in
xchg
sbb
arpl
xchg
gs
pop
popf
and
cmc
ror
add
mov
mov
not
and
mov
and
or
jmp
inc
and
mull
repz
add
mov
lea
jmp
movsb
sub
adc
in
sbb
push
test
jge
cmp
pop
cmp
jle
push
and
jmp
lret
pop
leave
test
call
sub
inc
icebp
pushf
or
int3
popf
rcll
mov
pop
cmp
and
sti
dec
repz
jmp
push
mov
loopne
jp
shlb
clc
ror
add
and
or
add
mov
lea
jmp
jnp
jge
testl
xchg
fisttps
mov
lods
inc
lea
rol
add
jmp
arpl
xchg
addl
sti
adc
push
les
mov
jmp
filds
mov
nop
adc
xor
fisttps
and
add
mov
not
and
or
add
mov
jmp
aas
popa
and
mov
not
and
or
add
mov
lea
jmp
out
cmp
pop
cmp
shl
jmp
xor
xor
rolb
rolb
mov
fldenv
out
mov
not
and
rol
add
mov
and
or
jmp
inc
mov
jmp
jbe
popa
add
sbb
mov
adc
dec
les
int3
sub
mov
jmp
inc
not
jmp
xchg
push
mov
es
or
xor
sub
hlt
and
or
add
mov
lea
mov
jmp
add
lods
lea
shr
push
and
mov
rclb
mov
shr
aaa
mov
jmp
rcrb
xchg
addr16
in
je
xor
pop
ja
es
pop
aaa
ret
rol
add
mov
mov
not
and
jmp
inc
pop
xchg
inc
cld
jmp
add
or
sub
push
stc
inc
roll
shll
insl
std
test
inc
ja
dec
or
add
mov
lea
rol
add
jmp
mov
and
jmp
je
imul
fildl
add
adc
push
jno
aaa
push
mov
js
mov
xchg
adc
or
shr
fstps
pop
cmp
ror
jmp
rorb
mov
arpl
cmc
sbb
mov
dec
mov
das
cmp
and
or
add
mov
lea
mov
jmp
and
pop
leave
test
nop
xlat
push
lret
mov
lea
jmp
jo
add
jmp
mov
jmp
and
jmp
js
outsb
or
adc
ljmp
movb
inc
cwtl
cmp
inc
aam
fucomip
sub
ret
lret
or
push
jns
jge
and
jmp
push
adcl
pop
not
jmp
lock
jp
sub
lret
mov
cmpsb
push
test
popa
and
repz
mov
out
cmp
or
jmp
mov
jmp
push
loope
shr
mov
xchg
or
cmp
jecxz
mov
ret
dec
fdivrl
ret
and
mov
not
and
or
add
mov
jmp
mov
mov
cs
mov
subl
lea
rol
add
mov
and
mov
not
jmp
sub
mov
mov
and
xchg
cmp
mov
inc
pop
insl
add
mov
jmp
jle
jns
jmp
inc
fisttps
fldenv
or
imul
not
jmp
xor
push
into
pop
cmp
push
pop
lret
pop
ds
popa
loope
adc
sub
inc
or
jmp
cltd
sbb
aam
sub
test
sub
stos
add
jmp
xchg
pop
and
jmp
lahf
sbb
aaa
cmpsl
ret
call
fsts
mov
jae
clc
ror
add
and
or
add
mov
lea
jmp
sbb
repz
mov
scas
xor
jo
lods
rol
jmp
mov
jmp
or
jmp
clc
ja
xorb
scas
cmp
mov
or
adc
push
std
ja
xorb
cmpsb
lea
jmp
add
add
jmp
orb
mov
jns
js
ljmp
daa
mov
jmp
popa
mull
icebp
dec
andb
jmp
imul
mov
add
mov
cmp
adcb
ret
cmp
pop
es
add
not
and
jmp
push
cmp
dec
add
jmp
xor
jmp
mov
mov
es
out
loopne
jb
inc
jecxz
push
in
aas
lds
ret
rorb
popf
insl
mov
rol
jmp
or
add
sbb
mull
icebp
pop
stc
gs
pushf
outsl
ljmp
fiaddl
pop
rorb
std
ror
add
jmp
cmp
and
sarl
jmp
mov
call
mov
pop
inc
rol
jmp
ss
sbb
xor
dec
movsl
xor
mov
xchg
push
mov
lea
mov
xor
rol
jmp
mov
in
dec
iret
pop
cmp
and
pop
jb
addr16
jp
insl
xor
jmp
movsb
sub
ljmp
dec
jmp
add
jmp
add
jmp
or
inc
iret
pop
cmp
and
jp
jp
mov
call
ret
loopne
test
xor
or
ret
cld
jmp
jl
add
xor
jge
jmp
inc
into
pop
cmp
jno
in
inc
mov
lods
mov
jmp
inc
xlat
inc
and
imul
add
inc
pusha
mull
icebp
push
sub
xor
xor
add
mov
lea
rol
jmp
or
icebp
jnp
lea
jmp
or
test
jge
and
cmp
sbb
ret
mov
mov
mov
jmp
xchg
or
in
xlat
or
shr
out
add
stc
lock
bound
sarb
ret
pop
enter
gs
sti
sbb
movb
in
lea
rol
add
mov
xor
jmp
aas
cmpsl
aaa
push
mov
mov
fdivrs
jge
negl
jne
jmp
daa
push
movsl
lea
jmp
push
faddp
enter
and
cmp
inc
xchg
sbb
adc
test
pop
test
jnp
push
xor
add
mov
lea
rol
add
jmp
lods
das
mov
stos
fisttpl
icebp
mov
xor
add
mov
jmp
nop
int
mov
jmp
xor
out
jecxz
jne
jne
shl
add
jmp
add
jmp
and
push
inc
into
pop
cmp
xor
add
add
daa
xor
add
lea
rol
add
mov
xor
jmp
rcrb
fs
mov
jmp
cli
push
mov
mov
sub
aaa
mov
scas
leave
cmp
pop
out
inc
aam
sub
aam
dec
jnp
aas
xor
jmp
mov
pushf
push
lea
jmp
inc
sahf
outsb
cwtl
mov
mov
add
push
les
int3
jge
dec
fidivrs
and
mov
pusha
add
xor
add
lea
mov
xor
rol
jmp
pop
mov
jg
sub
xor
jge
jmp
stc
popa
icebp
nop
arpl
test
test
aad
inc
mov
fxam
jl
jne
insb
out
ja
xorb
xor
jmp
mov
mov
mov
jg
inc
addb
lock
or
xchg
lret
adc
xor
add
lea
mov
rol
add
jmp
push
adc
jbe
loopne
sbb
jmp
into
dec
fistpll
push
imul
xor
jmp
std
jne
mov
jg
push
cld
push
fsts
mov
out
hlt
pop
rol
jmp
jg
fs
or
vandnps
lods
pop
mov
xchg
cli
gs
loope
mov
pop
jmp
mov
jmp
popf
pop
xchg
adc
pop
rolb
shlb
rolb
shlb
mov
popl
pusha
mov
lea
mov
xor
ror
add
jmp
push
push
xor
jg
negl
rorl
shll
fadds
pop
les
sub
or
bnd
adc
jmp
ss
jmp
pop
mov
xchg
aas
cs
pop
roll
aad
xor
sbb
inc
shlb
inc
and
adc
rcr
out
sbb
decb
sti
xor
add
lea
jmp
pop
les
int3
es
mov
mull
icebp
js
inc
mov
and
mov
jmp
inc
mov
add
add
rorl
and
adcl
mov
not
or
xor
add
lea
rol
jmp
ljmp
mov
pop
pop
gs
add
mov
not
jmp
push
xor
jmp
and
xor
cmp
xchg
pop
bound
leave
cmp
in
icebp
nop
arpl
shr
xlat
mov
lcall
jle
mov
out
lock
xor
jmp
add
jmp
rol
jmp
in
loop
je
xchg
repz
test
ror
lods
push
imul
xor
add
lea
rol
add
mov
jmp
sub
pop
psubsw
cmp
mov
push
jne
out
dec
adcl
push
push
sub
repnz
not
or
xor
add
lea
jmp
aad
fstpt
pop
bound
or
xor
add
lea
ror
jmp
push
push
xor
jle
adc
cmp
outsl
push
lcall
add
add
movb
jmp
insl
clc
outsb
or
pop
sbbl
and
push
dec
lock
jmp
mov
and
clc
stos
xor
cmp
mov
xchg
ljmp
test
gs
lods
add
mov
not
jmp
or
mov
jmp
xchg
mov
sbb
lds
pop
fdivl
in
or
or
not
or
xor
add
lea
jmp
push
xor
push
pop
gs
jmp
mov
enter
lds
imul
stc
jle
mov
push
rolb
fistl
inc
pop
mov
jmp
lcall
cmp
es
mov
popf
sbb
sub
lds
mov
shlb
ror
add
mov
not
or
xor
add
lea
jmp
lret
xor
pop
not
jmp
jl
push
cld
sbb
dec
fnstcw
loop
je
pop
xlat
inc
and
or
mov
rorb
ret
add
lea
rol
add
jmp
enter
dec
mov
mov
mov
add
add
lea
mov
jmp
cmp
shr
push
lret
pop
iret
stos
pop
repz
lock
lret
rolb
dec
std
movsb
or
rolb
shr
fcompl
inc
es
sti
insl
std
test
mov
xchg
aam
fdivrl
adc
rol
add
not
or
xor
add
lea
jmp
arpl
outsb
or
sbb
jl
negb
mov
fistl
decb
clc
xor
add
mov
lea
jmp
pop
rclb
sub
ja
loope
bound
mov
jmp
mov
mov
fcmovb
push
jmp
ss
icebp
dec
enter
and
ljmp
movsb
add
add
mov
jmp
fldl
jmp
sbb
or
fs
lock
bound
or
xor
test
xchg
repnz
inc
push
xor
daa
mov
test
outsl
lcall
movsl
ror
jmp
dec
push
xor
sub
jne
out
push
aas
mov
pop
jmp
pop
jmp
sbb
std
jb
xchg
in
lcall
xchg
testb
not
or
xor
add
lea
rol
jmp
js
js
ljmp
pop
cmc
imul
insl
fimull
jmp
add
pop
data16
inc
mov
mov
jmp
mov
mov
and
sbb
sahf
cmp
jns
jmp
dec
pushf
jmp
js
push
inc
lahf
pusha
jmp
mov
dec
adc
sub
lock
push
leave
pop
cmp
sub
arpl
xchg
gs
pop
repnz
mov
dec
cmp
add
add
add
add
mov
jmp
scas
xor
insl
std
test
sub
cmp
mov
push
xchg
add
jnp
mov
jmp
inc
les
int3
and
jecxz
sub
jmp
or
cmp
jmp
xchg
adc
outsb
cld
fwait
jbe
pop
cwtl
push
imul
imul
mov
sahf
add
xchg
popf
pushl
jmp
mov
shlb
js
ljmp
mov
roll
add
adc
push
fmuls
fdivrs
setg
or
inc
lahf
stos
aaa
mov
push
jmp
cmp
out
jl
mulb
xchg
sbb
dec
fdivrl
stos
mov
inc
adc
xchg
mov
sbb
cld
shld
jg
js
addl
jmp
jmp
jmp
jno
xorb
daa
mov
and
decl
ret
jmp
movzbl
jmp
mov
repnz
sarl
aas
pop
test
sahf
insl
test
pop
mov
jmp
cwtl
cmp
jle
xchg
add
add
popa
icebp
nop
arpl
std
adc
rorl
ret
xor
add
lea
rol
jmp
sbbb
and
mov
jno
jno
push
je
fs
jmp
call
mov
ret
sub
pop
and
cmp
dec
jmp
in
insb
loop
je
mov
stos
int
ret
mov
cs
xor
lea
movsl
add
add
ret
jmp
fisttpll
sti
push
jmp
mov
movb
test
or
mov
mov
jmp
mov
test
je
push
mov
mov
jmp
test
jmp
pop
jmp
popa
out
jg
jmp
push
mov
lds
sbb
push
mov
inc
incl
cmp
jne
xor
lea
movzbl
jmp
shl
jmp
movzbl
jmp
mov
lock
lcall
in
jg
push
movsl
iret
into
movzbl
jmp
jle
arpl
cmc
pop
leave
pop
iret
stos
pop
or
xchg
pop
xchg
repnz
andl
incl
jmp
leave
shl
jmp
les
mov
xor
push
cld
outsl
lcall
cltd
push
jmp
xlat
push
ret
cmpsb
push
nop
ret
stos
pop
test
xchg
es
jmp
cmc
jae
xchg
popa
clc
outsb
or
adc
push
mov
ret
roll
pop
or
push
sub
push
mov
mov
shr
lea
and
jmp
movsb
es
cs
jne,pn
jmp
or
cmpsb
es
cs
jge
xchg
cmc
add
outsl
lret
jb
lea
lea
call
xor
jmp
sbb
es
and
loopne
cmp
adc
add
insb
daa
mov
pop
fimuls
adc
lret
push
pushl
jmp
out
push
lahf
push
cmp
dec
mov
xchg
repnz
mov
shr
sbb
shl
or
mov
inc
add
cmp
jmp
sbb
pusha
out
jl
notb
sbb
in
add
xchg
popf
pushl
jmp
stos
sub
mov
dec
mov
jmp
pusha
jmp
mov
jmp
mov
lods
lret
inc
loope
inc
xlat
mov
stc
pop
leave
pop
cmp
pusha
pop
call
mov
jmp
dec
fmuls
fsubrs
es
xchg
jns
jmp
fisubs
lods
jl
popl
jmp
pop
mov
inc
or
scas
sbb
mov
jmp
pop
into
pop
cmp
jg
inc
shll
shll
mov
popf
fcos
jmp
sarl
ret
jmp
jbe
addl
jmp
dec
fisttpl
fnstsw
pop
lds
iret
daa
es
faddl
mov
mov
ret
mov
cmpl
pop
rcll
inc
and
fs
hlt
xchg
outsb
xchg
add
jmp
sub
mov
cmpsl
ret
out
push
out
pop
push
jne
jmp
xchg
jo
pop
cmp
jmp
popa
jmp
cwtl
sbb
xor
fcompl
stos
pop
popl
pop
aas
lret
xchg
andb
sub
jo
mov
and
jmp
idivl
test
incb
and
jmp
lds
popl
jmp
orb
decl
out
out
gs
pushf
outsl
sahf
and
cmp
or
rolb
add
jmp
and
cmp
jge
repnz
pop
repnz
fs
jmp
fists
fadd
sbb
add
add
mov
cltd
dec
fisttpll
out
jo
jno
jecxz
push
mov
xchg
daa
fnstcw
je
jmp
and
mov
pusha
add
jmp
jmp
or
and
jmp
sub
push
lds
setg
or
inc
icebp
pop
mov
adc
jle
test
cli
jmp
rolb
add
jmp
aam
sub
inc
or
stos
int
jmp
mov
mov
and
pop
and
jle
push
movl
jmp
fwait
add
pop
int3
stos
data16
dec
sub
pusha
pop
inc
andl
jmp
popa
insb
or
orl
pop
enter
dec
mov
movl
jmp
rclb
mov
in
jle
mov
movsb
loop
rol
add
mov
mov
not
and
and
or
add
jmp
push
inc
and
and
in
jmp
pop
jmp
mov
jmp
sub
data16
pop
loop
push
xchg
add
jns
jmp
sbb
outsb
out
popa
jmp
ficomps
scas
pop
mov
mov
cmp
pop
cmp
or
in
imul
insl
cwtl
cmp
cmp
movsb
imul
or
andb
sub
jmp
mov
add
add
les
ret
jmp
ficoml
mov
or
fs
popf
insb
fcmovu
dec
ret
std
rcll
inc
adc
pop
iret
pop
cmp
inc
addl
mov
jmp
pop
enter
popa
inc
roll
shll
mov
lock
add
movzbl
jmp
pop
cmp
jmp
stos
lods
lret
inc
icebp
adc
sbb
sub
jmp
pop
ret
ret
push
add
jmp
pusha
push
je
jmp
mov
mov
in
bound
dec
sub
pop
or
gs
or
ljmp
lcall
popl
jmp
xchg
adc
adc
loop
pop
loop
mov
lret
stos
jmp
loopne
notl
jmp
and
and
imul
or
jg
push
push
lea
jmp
stos
push
jmp
push
fimull
fisubrl
mov
lods
lret
inc
movsb
jb
push
jg
mov
add
push
mov
mov
jmp
out
pusha
notb
mov
repnz
cmp
mov
add
pushf
adc
push
shlb
push
jmp
lock
lock
aam
adc
ljmp
int3
stos
iretw
jbe
in
jmp
out
out
jo
add
add
cmp
sahf
cmc
pop
pusha
pop
inc
sub
mov
add
xchg
popf
pushl
jmp
adc
pop
jb
sub
imul
cmp
test
adc
pop
cmp
jmp
push
int
and
aas
out
in
je
insl
iret
push
mov
jle
shr
sub
jl
insb
or
iret
adc
std
adcl
test
ja
lock
mov
mov
shr
and
mov
mov
jmp
pop
fstpt
dec
fdivrs
je
push
adc
push
push
pop
jmp
sbb
or
dec
ss
inc
mov
mov
stos
into
cmp
inc
mov
push
sub
push
pop
jmp
das
movsb
cmp
dec
mov
fisubl
mov
add
jae
sub
addl
mov
das
fmulp
inc
shlb
into
test
in
mov
call
jmp
ret
dec
fdivrl
cmp
sbb
cwtl
push
imul
xor
pushl
push
in
inc
mov
mov
jmp
or
cmp
add
cld
mov
add
add
imul
dec
mov
mov
addl
loope
call
or
jmp
inc
in
shl
jmp
pop
rclb
sub
outsl
or
out
cld
xchg
cmc
add
ret
pop
repnz
fs
lea
push
movzbl
movzbl
shl
or
movzbl
jmp
mov
mov
in
push
jmp
dec
mov
jmp
xor
cmpsb
es
cs
cmp
push
lds
push
aam
sub
mov
inc
add
cmp
jb
lea
lea
call
jmp
cmp
insl
movb
inc
mov
int
and
cmp
in
sbb
push
add
inc
fcoms
mov
mov
imul
test
dec
inc
aaa
lea
lea
pop
pop
mov
mov
mov
mov
mov
jmp
les
mov
or
dec
cmpsb
fmull
add
roll
rcrl
ret
jmp
pushf
jmp
stc
jnp
mov
in
notl
or
jae
add
sti
jmp
lds
movsb
pop
jmp
xchg
pop
xchg
repnz
mov
adc
add
add
jmp
dec
jecxz
push
in
xchg
or
push
mov
es
mov
mov
and
rol
add
and
or
add
mov
lea
jmp
das
jmp
dec
fmuls
fdivrs
pop
lret
scas
pop
cwtl
dec
inc
and
cmp
cmc
cmp
jecxz
sub
add
xchg
popf
pushl
jmp
cmpw
jmp
ljmp
scas
cmp
mov
leave
push
lds
fcoms
inc
filds
mov
movl
inc
fcompl
xchg
lea
dec
sub
push
or
popl
lea
jmp
inc
rcll
and
rolb
shrb
xchg
add
sahf
dec
loopew
adc
adc
mov
mov
jmp
test
push
mov
cltd
clc
or
out
sbb
add
scas
add
add
dec
fidivrs
in
je
jbe
adcl
mov
sar
incl
inc
and
fstpt
es
mov
dec
fldt
int3
xor
inc
arpl
add
pop
xchg
mulb
pop
jmp
push
dec
pop
xchg
mov
push
ret
ret
xor
hlt
cmp
ud0
jmp
mov
pop
aas
lret
pop
add
ds
sub
insb
cmc
gs
pop
push
xchg
mov
call
jmp
mov
ret
xchg
fs
test
jge
or
mov
inc
inc
inc
inc
test
jne
pop
ret
jmp
movsb
es
cs
mov
xchg
jle
and
fucomi
fwait
and
mov
inc
and
popf
pushl
mov
jmp
jmp
lea
jp
in
adc
pop
jp
inc
addb
or
les
aas
mov
jmp
sub
enter
lock
inc
ret
ret
mov
inc
mov
mov
test
cmp
mov
lods
lret
inc
mov
sarb
shr
cwtl
mov
int3
adc
sbbl
mov
mov
scas
leave
cmp
mov
test
mov
fidivl
push
je
inc
inc
cmpw
jne
jmp
ja
jnp
in
pop
loope
popa
jmp
roll
mov
jmp
xor
icebp
push
repz
insl
fisubl
out
sub
jo
jmp
push
push
xor
addr16
pop
int
shlb
mov
inc
mov
in
in
mov
cltd
roll
add
ds
sarb
adc
add
sub
es
ret
add
mov
jmp
xor
fildl
dec
lret
hlt
jbe
cmpl
dec
call
cmp
jne
addl
jmp
insl
out
jl
negb
mov
rcrb
popf
or
add
clc
movzbl
jmp
clc
jge
je
push
inc
ret
ret
mov
inc
mov
sbb
outsb
jbe
test
rolb
add
jmp
movsb
sub
cmpsl
leave
arpl
pop
shrb
jle
add
jmp
out
popl
jmp
dec
les
int3
sub
inc
and
icebp
sub
cmpl
fldl
pop
cmp
jmp
inc
jmp
add
jbe
outsl
or
rcll
dec
adc
daa
jb
cmpsb
ret
cmp
fldl
mov
xchg
xor
pop
iret
stos
pop
sar
insl
std
test
cmpsl
pop
xorl
insb
loop
je
dec
fisttps
notl
lcall
lea
jmp
or
push
imul
adcl
nop
xor
cmpl
jmp
xchg
aam
jmp
mov
dec
fistpll
mov
jns
mov
ljmp
stc
addb
rorb
test
decl
cmp
je
cmpw
jmp
imul
jmp
lcall
mov
mov
rcll
mov
fcomps
xchg
cmp
pop
fisttpll
out
in
sbb
or
aas
lret
fmuls
fmuls
loope
mov
je
xor
jmp
insb
call
sahf
sub
jmp
incb
cmp
jmp
pushf
pop
jno
imul
cld
fwait
jbe
ljmp
lcall
je
popa
mov
jmp
stos
and
popf
pushl
mov
jmp
scas
and
lret
pop
ds
popa
mov
jmp
ljmpw
add
popf
imul
add
loopne
popa
jmp
push
jecxz
push
in
xchg
add
gs
pushf
outsl
les
shlb
push
xor
mov
jmp
pushf
or
in
movsl
adcb
loop
mov
sub
insl
std
test
mov
cltd
roll
add
jne
addl
jmp
popl
jmp
mov
mov
add
pop
xchg
or
xor
decl
fs
xchg
cmc
add
xchg
or
in
cld
sub
push
popa
mov
jmp
pop
into
test
pop
cmp
add
cmp
and
mov
fs
jmp
and
push
mov
jns
jbe
movsl
xor
cld
xchg
cmc
add
out
xchg
mov
add
cmp
je
jmp
pushf
pop
sbb
ss
fwait
out
dec
xor
movsb
add
add
pop
xor
mov
jmp
movzbl
jmp
testb
dec
fnstcw
cmp
pop
iret
inc
xlat
mov
call
test
mov
mov
jmp
lds
push
lea
mov
jmp
push
pop
jp
inc
dec
push
xor
or
jae
test
nop
pop
pop
jmp
pusha
jg
test
jmp
cld
insl
std
test
push
xchg
mov
mov
lahf
aad
xor
pusha
sub
jmp
or
or
sub
je
lea
jle
mov
lea
or
lock
test
je
inc
inc
jmp
ljmp
jmp
pusha
cli
push
push
ret
cmpsb
push
mov
adc
cmp
xchg
xor
jmp
dec
roll
sarl
jbe
jle
call
repz
mov
jno
xorb
icebp
je
mov
ret
adc
jmp
push
roll
sarl
data16
adc
push
push
pushf
sti
push
repz
lods
pop
movl
incl
cmc
ljmp
sub
ret
fmuls
xor
jmp
pop
fdivrl
jmp
cli
jge
je
insl
push
jecxz
push
in
cld
jne
mov
lock
pop
push
icebp
jge
or
ret
jmp
fists
lods
pop
mov
jmp
out
sbb
mov
jmp
pop
aam
sub
inc
daa
rclb
sbb
pop
bound
or
adc
lock
jmp
stos
cmp
sbb
mov
inc
mov
clc
push
fisttps
popa
jmp
jo
jmp
and
jmp
inc
xlat
inc
and
jbe
push
mov
lcall
sbb
xchg
and
pusha
jmp
mov
ret
sbbb
out
sbb
xchg
outsb
lods
xchg
push
pushf
sti
push
hlt
push
gs
sub
add
xchg
popf
pushl
jmp
cmp
jmp
stc
notl
sbbl
dec
xlat
inc
and
pop
es
cmp
cltd
roll
add
jnp
ljmp
adc
test
jmp
das
mov
inc
mov
lcall
dec
frstor
cmp
decl
add
cs
xor
inc
xor
xor
rolb
repnz
add
notl
mov
test
movzbl
jmp
cmp
jmp
js
pusha
pop
repnz
clc
fsts
mov
adc
call
sti
decl
add
std
jmp
add
add
jmp
rcrb
test
stos
aas
mov
inc
mov
jo
out
inc
jmp
popl
jmp
insb
loopne
adc
and
je
out
dec
das
ret
push
lds
add
test
aas
lods
and
sbb
mov
mov
xorb
mov
loope
add
jmp
mov
mov
or
and
fs
push
xchg
repz
mov
aam
xor
jbe
jg
popa
mov
ret
jmp
push
jmp
xor
sub
cmc
insb
loop
je
insb
repnz
pop
bnd
aad
xor
jmp
sub
jmp
jp
xchg
jmp
lahf
pushl
jmp
sbb
ja
imul
xor
enter
pop
jmp
leave
dec
fistpll
test
jae
xchg
jmp
mov
sahf
stc
or
jg
outsl
or
stc
xor
rclb
int
jmp
sbb
out
jg
jmp
enter
jecxz
push
in
daa
push
popf
jmp
sub
add
add
and
insl
jmp
push
in
mov
inc
mov
add
cmc
jp
jp
adc
je
jmp
jmp
out
mov
jmp
lods
daa
mov
and
mov
xchg
push
outsb
or
dec
xchg
pop
xchg
repnz
sar
cmpsb
cmpsb
inc
sar
inc
adc
inc
aad
sub
insb
repz
lock
lret
lcall
ret
mov
fcomip
xchg
and
jmp
add
jmp
addr16
pop
jne
ja
loope
in
out
jo
dec
xchg
jae
mov
mov
andb
sub
jo
mov
jmp
pop
lret
pop
ds
cld
gs
pushf
outsl
loopne
out
mov
stc
pusha
notb
cmp
jne
addl
mov
movzbl
jmp
mov
stos
test
inc
and
jmp
outsb
mull
icebp
js
mov
xchg
pop
or
adcl
leave
pop
cmp
and
dec
fstpt
xchg
cmc
add
cmp
popl
lea
jmp
xor
jmp
fcomps
xchg
addr16
jmp
push
in
push
out
imul
jbe
cmpl
xor
mov
jmp
stos
test
jmp
out
jecxz
jne
pushl
mov
push
jno
jecxz
aam
enter
mov
enter
in
outsb
jle
sub
jmp
pop
nop
push
popa
nop
inc
mov
jmp
hlt
xchg
outsb
leave
inc
aad
sub
imul
xorl
fisubl
dec
jmp
in
pop
mov
jmp
push
les
int3
gs
pop
leave
test
call
pop
lods
movsl
fs
jge
lret
cwtl
jne
pop
je
popa
mov
jmp
push
rclb
jno
gs
pushf
outsl
les
inc
push
shll
testb
cli
cmp
pushf
jmp
sub
data16
insb
or
in
lea
in
sbb
xchg
sbb
nop
add
add
insb
or
add
fstpl
sub
das
ss
out
pop
cmpb
jmp
cmp
adc
out
notb
jae
in
push
test
inc
test
jne
dec
cmp
je
cmpb
jne
jmp
ret
mov
add
popa
jmp
jge
add
jmp
dec
roll
aad
push
mov
js
popa
ret
mov
lods
mov
jmp
or
adc
or
gs
sar
inc
adc
mov
pushf
int3
pop
and
jmp
sub
cs
lret
mov
push
rorb
and
push
jmp
mov
test
push
xor
or
shlb
adc
inc
or
andb
sub
jo
jmp
int
int
sarl
fsubrs
adcb
adc
xor
movsb
sub
jmp
cmc
fs
popf
insb
lds
inc
es
push
in
push
clc
cmp
jmp
jge
js
ljmp
push
shll
dec
frstor
or
ret
jne
addl
jmp
sub
adcl
jmp
jmp
sub
push
rorl
mov
adc
add
rcll
inc
les
push
call
test
xchg
xchg
popf
pushl
jmp
sti
jns
andl
add
add
jmp
aaa
mov
out
sti
sahf
insl
andl
add
insb
in
bound
out
jno
mov
sarl
fs
jmp
jae
push
jmp
pop
jmp
cmp
push
lds
adc
int
and
cmp
ret
popl
jmp
sbb
add
sahf
insl
inc
roll
aad
int3
inc
fidivrl
pusha
mov
mov
mov
andb
sub
jo
jmp
movsb
xor
push
xchg
repz
test
dec
cld
jmp
movsb
sub
rcll
add
or
mov
mov
jmp
jmp
mov
out
sti
push
stos
cmp
je
lea
shl
stc
add
mov
push
xor
jle
inc
aad
dec
in
cmp
loope
mov
jmp
stc
jae
xchg
mull
xchg
repz
mov
and
mov
test
jmp
mov
mov
inc
inc
test
je
jmp
in
jmp
cltd
pop
xchg
repnz
ficoms
inc
sub
mov
incl
fwait
jmp
jnp
jo
loop
mov
test
push
cltd
adc
push
mov
mov
add
jmp
pop
mov
jle
inc
and
add
divb
mov
leave
mov
push
push
mov
movl
mov
mov
inc
test
jmp
pusha
jmp
pop
xchg
jb
jno
jno
mov
jmp
ja
jae
popa
sbb
jmp
push
inc
and
or
push
ret
cmpsb
push
cmpsb
bnd
mov
stc
jno
xorb
jmp
mov
jmp
ret
dec
fidivrs
cwtl
or
mov
jmp
lret
inc
shll
mov
movsl
xor
mov
mov
jmp
push
cmp
stc
loope
loop
je
loope
loope
jae
pop
imul
mov
jmp
push
lret
pop
ds
faddl
mov
jecxz
jmp
cld
jo
jmp
mov
subl
repz
gs
pop
int
addr16
jb
jp
in
pop
clc
insl
std
test
loope
jmp
mov
ret
mov
mov
and
jns
das
popf
add
aad
fdivrl
push
xchg
jmp
pop
push
xor
and
test
pop
test
lds
ret
jmp
movsl
cmp
mov
inc
mov
addb
icebp
add
push
popf
lock
out
mov
jmp
lock
insl
int3
shr
add
add
jmp
movsb
lods
lret
inc
test
movsb
xchg
popf
pop
sub
push
add
add
lahf
punpckhdq
add
add
jmp
sub
jmp
fdivrl
add
jmp
aam
ret
mov
add
add
ret
inc
and
jmp
jo
mov
mov
push
stc
add
test
push
cltd
add
into
imul
xlat
imul
add
mov
jmp
cli
loopne
sub
add
add
jmp
scas
aaa
cmpsl
ret
sub
inc
inc
test
jne
pop
ret
jmp
cmc
lods
xchg
sbb
xlat
or
add
jmp
mov
sahf
stc
or
add
add
nop
or
out
jno
mov
mov
mov
mov
andb
sub
jmp
mov
jmp
testb
push
sldt
cmp
push
roll
shll
mov
ret
mov
mov
sti
imul
sub
and
jmp
and
call
jmp
xor
lcall
sub
jo
jmp
int3
popf
popa
mov
cs
adcb
add
pop
enter
push
or
in
loope
pushl
jmp
cmpsb
fdivrs
ret
jmp
jb
cmpl
add
jge
je
mov
push
ljmp
cmp
push
mov
mov
je
inc
cmpb
jne
jmp
int3
popf
push
shll
add
mov
aas
mov
inc
mov
mov
jmp
lds
mov
popl
jmp
cmpsl
aaa
push
mov
dec
mov
sbb
push
aaa
jle
scas
add
cmp
je
popa
mov
jmp
cmp
mov
pushf
push
push
lea
jmp
aam
push
jmp
scas
ljmp
add
add
add
jmp
int
repnz
fs
js
mov
inc
dec
test
mov
movzbl
jmp
push
xchg
pop
bound
mov
jnp
add
cmp
jmp
pushf
jmp
cltd
or
in
mov
xor
int
ljmp
pop
rcll
sub
jne
jmp
push
popf
or
fisttps
fldenv
xchg
mov
mov
in
fisttpll
add
sub
popl
lea
jmp
adc
add
pop
pusha
mov
mov
mov
andb
sub
jo
jmp
and
jmp
push
aam
sub
ss
mov
or
add
ret
jnp
cltd
roll
add
fidivrl
ret
jmp
mov
int3
out
lock
bound
js
outsb
jns
push
popa
mov
ret
out
adc
rolb
add
jmp
rcrb
test
mov
jmp
lock
jmp
pop
sbb
popl
jmp
xor
aaa
sbb
mov
jmp
das
dec
cmpsb
mov
movzbl
add
cmp
jmp
pop
mov
js
dec
jmpw
jmp
xor
xor
mov
aas
add
add
push
jmp
cli
push
lahf
push
pop
roll
aad
aam
shlb
mov
pop
outsb
addl
jmp
xchg
add
cmp
mov
jecxz
push
jmp
push
jmp
test
repnz
cmc
gs
pop
cmc
jae
xchg
les
xchg
gs
mov
test
jmp
cli
xor
faddl
mov
lds
adc
add
sahf
push
inc
rclb
sub
jmp
mov
test
jmp
pusha
loopne
adc
or
jecxz
mov
add
lea
add
jnp
push
xor
cld
xchg
cmc
add
cmpsl
mov
jmp
movb
inc
mov
mulb
push
enter
inc
mov
nop
push
popa
nop
jb
sub
add
xchg
popf
pushl
jmp
test
fcoml
pop
mov
in
pop
xchg
pop
popl
xchg
icebp
add
stos
inc
pushf
jmp
push
scas
incl
test
popf
add
add
insl
std
test
mov
fwait
add
xchg
dec
xchg
jmp
shr
push
decl
pop
int3
jo
jmp
cld
insl
std
test
sbb
add
and
fidivs
jbe
cmpl
pusha
mov
mov
mov
andb
sub
jmp
mov
jmp
jmp
fstp
push
cmp
jmp
stos
inc
shll
xchg
cmc
add
cld
outsl
lcall
test
pop
fdivp
mov
ret
sub
and
mov
xchg
jl
and
or
shl
movsl
test
pushl
mov
jmp
test
movsb
ret
ds
in
insb
ja
leave
mov
in
and
jmp
push
aam
sub
jne
jmp
inc
les
int3
and
cmp
jmp
ds
repz
xchg
mov
rol
fwait
lods
movzbl
sub
leave
ret
jmp
sub
jge
rolb
shlb
addl
mov
movzbl
add
jmp
je
popa
mov
jmp
int3
popf
in
bound
shll
outsb
add
add
lock
ljmp
lret
popl
jmp
ret
dec
fistpll
adc
data16
out
in
xchg
mov
jne
jmp
mov
push
jmp
jo
outsl
or
hlt
xchg
sbb
push
cmp
dec
lods
cli
jno
fs
jmp
rcrl
xchg
cmpsl
pop
xlat
inc
and
js
xchg
jb
notb
dec
inc
inc
and
push
mov
cld
insb
loop
je
lods
cmp
jp
and
jmp
push
ret
ret
sub
dec
daa
aam
mov
jmp
jmp
fs
inc
leave
adc
ljmp
push
pushf
xor
faddl
mov
and
mov
jmp
mov
mov
inc
jmp
push
int
and
cmp
pop
sbbb
ds
xchg
std
or
in
cmp
inc
jmp
int
fdivrl
jae
in
add
mov
mov
jne
xor
leave
ret
mov
cmp
jne
jmp
push
decl
test
jne
mov
pop
ret
jmp
adc
call
jmp
mov
cld
cli
jle
mov
mov
stos
pop
xor
inc
leave
pop
jmp
daa
mov
inc
mov
out
iret
add
shlb
xor
jmp
inc
int
and
aaa
test
in
lock
add
add
mov
add
add
add
inc
jmp
inc
iret
pop
cmp
jo
sub
dec
lds
iret
cmp
inc
sub
popf
pushl
mov
jmp
push
sarl
insb
add
add
sub
sub
jo
cmpsl
aaa
push
mov
shrl
lahf
popa
add
pop
dec
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
mull
icebp
dec
fwait
or
in
mov
out
pop
sbb
cmp
jne
addl
mov
movzbl
jmp
adc
xor
std
pushl
lret
lcall
pop
mov
add
add
lea
jmp
mov
scas
cmp
mov
shrl
jmp
xlat
pop
lret
scas
pop
xchg
push
xchg
add
jnp
xor
jmp
minps
add
jmp
sbb
dec
out
outsb
cld
fwait
jbe
dec
into
pop
cmp
sub
mov
rcrb
or
or
test
jmp
rolb
add
jmp
add
jmp
pop
mov
jmp
mov
jmp
xchg
adc
pop
int
addr16
mov
stos
int
aam
sub
mov
mov
jmp
scas
and
push
fmuls
fdivrs
repz
jmp
movsl
xor
push
xor
shr
push
fmuls
fsubrs
add
out
cltd
push
push
mov
mov
ret
mov
test
dec
test
dec
sbbl
lcall
xchg
add
sahf
aaa
imul
or
dec
jl
arpl
cmc
pop
xchg
int
cmp
fsubr
pop
decl
sub
xchg
sbb
lahf
mov
test
jmp
add
jmp
mov
jmp
jne
jbe
loopne
pop
lds
iret
push
scas
cmp
js
mov
decl
test
jne
ret
jmp
mov
add
push
mov
mov
push
mov
add
dec
mov
jmp
cmpsb
push
jl
xor
jmp
and
push
xor
xchg
cmc
add
fldl
mov
lahf
add
jno
js
jmp
movl
dec
ret
roll
push
xor
or
push
aaa
ret
lock
sbb
fstpl
andl
pop
and
sub
fdivl
lret
mov
je
mov
cmp
je
add
mov
jmp
dec
ja
pop
and
inc
je
insb
or
cmc
test
shlb
sub
pop
inc
iret
pop
cmp
and
sub
mov
mov
mov
sar
mov
add
jmp
adc
test
cli
xchg
sbb
inc
cmp
jmp
cli
jne
mov
lcall
add
sbb
jmp
pop
lret
lret
push
mov
mov
and
mov
jmp
jmp
call
sbb
jmp
fidivrl
mov
jmp
sub
js
jge
negl
cmp
or
in
jmp
adc
ja
or
int
pop
add
pop
add
inc
inc
inc
inc
test
jmp
sub
pop
popa
push
add
add
and
jge
jmp
dec
fstpt
sub
adc
push
adc
cmp
push
or
jb
mov
add
cmp
jb
jmp
push
int
and
aas
sbbl
out
sbb
insl
icebp
popa
add
jbe
roll
dec
lods
pop
jmp
pop
lret
pop
ds
jge
pop
jmp
leave
jmp
xchg
adc
inc
aad
dec
movsl
mov
cmpsl
ret
lds
dec
test
jmp
fistps
stos
pop
cltd
repz
lea
loope
adc
adc
pop
int
lea
jne
jmp
int3
lea
jge
jmp
mov
lods
lret
inc
mov
hlt
inc
jmp
jle
jmp
jecxz
cltd
push
sbb
or
sbb
add
jmp
fisttps
test
sarb
jle
jmp
jmp
popa
call
sbb
jmp
cli
popf
insb
mov
jmp
push
jecxz
push
in
into
inc
shll
test
jmp
roll
mov
stc
ret
push
mov
xor
adc
addr16
push
scas
jmp
jmp
adcb
sbb
xchg
add
add
dec
shll
cltd
jmp
sbb
jmp
sub
and
push
ficoml
ret
mov
jmp
adc
sbb
adc
lret
pop
ds
adc
xchg
cld
clc
mov
mov
add
mov
cmp
jne
test
je
jmp
sbb
jmp
pop
and
testl
imul
xchg
gs
push
inc
and
ss
stos
into
cmp
test
je
inc
cmp
jle
jmp
jmp
lods
sub
lds
add
jg
add
jmp
mov
ljmp
mov
inc
mov
xlat
push
shll
movsb
push
mov
mov
test
sub
movsl
push
mov
aaa
cmpsl
ret
gs
bound
pop
or
jmp
inc
iret
pop
cmp
jo
mov
cmp
es
mov
addr16
mov
cmp
jne
inc
inc
inc
inc
test
jne
jmp
adc
sub
aaa
cmp
add
jmp
scas
inc
shll
mov
sbb
das
pushf
sbb
incl
jmp
jns
jle
call
or
call
jmp
movsl
xor
jmp
push
in
inc
and
jmp
xchg
jmp
data16
popa
add
push
sbbb
out
sbb
aam
frstor
out
cld
xor
jmp
jmp
outsb
mov
add
add
jmp
and
push
xor
jno
jecxz
icebp
insl
std
test
add
add
popf
pushl
jmp
repz
xorb
in
mov
xchg
decl
in
mov
jmp
inc
lret
pop
ds
inc
push
xor
ficomps
xchg
addr16
lds
jl
mov
jmp
mov
xchg
rcrl
scas
pop
scas
mov
lds
mov
jmp
mov
jmp
int
aad
dec
mov
cli
sbb
dec
fnstcw
fstpt
jmp
push
fdivl
in
loop
andb
jmp
cmp
add
add
dec
fdivrs
dec
adc
daa
jl
addr16
pop
jmp
movsb
inc
cmp
sti
decl
add
mov
mov
jmp
push
int
inc
imul
cmpl
arpl
ret
pop
lret
pop
iret
stos
pop
rorl
mov
fldt
adc
mov
jmp
popl
jmp
cmpsl
xor
scas
cmp
stc
insl
std
test
clc
mov
jmp
xchg
xchg
adc
dec
stc
push
lds
iret
push
cmp
cmp
adc
test
jmp
test
out
jl
notb
je
lea
fildll
lea
jmp
push
jmp
pop
jmp
xchg
or
in
jno
xorb
lods
cmp
lock
sbb
inc
aas
imul
jmp
jge
je
insl
mov
mov
lahf
test
sar
inc
adc
insb
sub
jmp
popf
dec
mov
inc
and
jmp
lret
push
ret
cmpsb
push
lods
jg
outsb
or
das
ds
scas
pop
int3
jno
jmp
jmp
pushl
jmp
add
jmp
dec
sub
cmp
add
popa
jmp
outsl
ljmp
dec
enter
inc
mov
into
std
popf
jmp
xchg
sbb
arpl
js
ljmp
push
mov
shll
add
jmp
push
xchg
add
push
inc
enter
outsl
sti
stc
cmp
mov
jmp
jg
arpl
cmc
inc
rclb
push
clc
stc
outsl
lcall
inc
and
jns
jmp
repnz
popf
insb
fisttpll
mov
cltd
roll
add
xor
jg
jmp
imul
mov
inc
mov
sar
inc
adc
dec
roll
sarl
stos
xor
mov
ret
jne
addl
mov
jmp
add
cmp
jmp
adc
or
popa
jmp
cld
lock
in
jmp
mov
ret
dec
sub
mov
sbb
aam
lret
mov
xor
mov
jmp
adc
xchg
xchg
repnz
jmp
push
in
cmp
push
shll
or
andb
sub
jo
jmp
jp
ficoms
pop
scas
push
ret
cmpsb
push
mov
inc
mov
jmp
out
scas
mov
rolb
add
jmp
lahf
adc
jb
imul
aam
dec
jmp
inc
cmp
rol
fsubrs
inc
and
add
push
pop
lcall
shlb
mov
add
add
jmp
add
sub
jmp
movsb
movsb
ret
mov
popf
adcl
fcmovne
nop
mov
dec
pop
add
cmp
je
xor
ret
jmp
mov
mov
pop
repnz
fs
pop
int
addr16
mov
mov
es
push
lea
jmp
xor
xor
jl
jne
insb
ja
sar
jbe
cmp
mov
jmp
movsl
xor
popa
icebp
nop
arpl
cmp
fs
xchg
cmc
add
cld
sub
jo
mov
and
cmp
jmp
imull
fwait
jbe
adc
call
mov
jmp
jge
jno
jecxz
push
lahf
punpckhdq
imul
mov
inc
push
jmp
push
xlat
inc
and
aaa
mov
mov
jle
mov
dec
jmp
divl
xorl
out
sbb
jl
negb
insl
in
sbb
push
mov
mov
mov
jmp
cmp
add
repnz
add
jp
jp
jb
push
pop
int
addr16
mov
pop
mov
inc
addb
sub
sahf
add
add
movsb
jmp
and
mov
shlb
fidivrl
push
xor
imul
jmp
dec
lds
jmp
cli
push
rcll
push
sti
sub
jb
add
fisttpll
add
push
les
int3
gs
aad
sub
push
xor
int
fwait
pushf
jne
jmp
mov
test
cwtl
push
imul
add
mov
mov
jle
mov
sbb
jo
gs
pushf
outsl
ljmp
push
mov
cld
jmp
xchg
pop
xchg
adc
fwait
sbb
jno
xorb
xchg
or
jns
add
add
mov
jmp
jmp
imul
push
cmc
or
add
sbb
add
mov
mov
imul
sub
push
add
ficomps
or
inc
es
ficoms
mov
adc
call
jmp
test
pop
test
in
clc
lahf
push
pop
rolb
rclb
cwtl
sbb
pop
jmp
push
popl
jmp
adc
std
outsb
cld
fwait
jbe
sbb
add
and
cld
call
and
lret
and
repnz
adc
cmp
jmp
xor
mov
shl
shr
jmp
sub
jmp
xchg
add
std
or
cmpsb
xor
and
insb
loop
je
pop
or
enter
jmp
pop
mov
gs
jbe
pop
lea
jmp
fs
xchg
cmc
add
inc
jecxz
push
in
insl
icebp
popa
add
jbe
idivb
push
add
popl
jmp
jmp
xchg
pusha
out
inc
fidivrl
cmc
pushf
outsl
test
rorb
flds
cmp
mov
sbb
xchg
gs
dec
lret
lret
dec
jge
mov
jmp
loop
hlt
xchg
outsb
fwait
jmp
pushf
lret
mov
mov
jb
out
jns
not
jmp
repz
mov
popf
mov
jmp
pop
roll
shll
adc
and
sti
je
lea
inc
test
mov
jmp
popl
xchg
lock
and
inc
inc
and
push
xor
sub
jmp
in
testb
mov
call
jmp
imul
sub
inc
rolb
sarb
sub
test
jne
mov
jmp
push
lahf
punpckhdq
je
xor
pusha
notb
shl
mov
pushf
popl
jmp
pop
mov
scas
xor
int
xor
dec
add
in
add
xchg
into
decl
scas
xor
gs
inc
add
cld
lcall
mov
jmp
sbbl
popa
std
insl
hlt
pop
addb
inc
push
xor
push
ljmp
jmp
cmc
dec
mov
jmp
and
xchg
push
test
push
idiv
adcl
test
fdivl
in
xchg
jp
mov
jmp
sbb
jmp
inc
add
jmp
out
push
push
aam
sub
frstor
inc
mov
jmp
cld
jbe
cmpl
pop
xchg
repnz
xchg
int
movzbl
jmp
std
scas
mov
jmp
sbb
cli
mov
inc
adc
inc
int
and
es
push
xor
imul
les
ds
mov
jmp
inc
cs
jmp
adcl
imul
clc
push
lahf
push
cmp
cbtw
jmp
jnp
jle
call
pop
scas
sbb
lds
iret
mulb
xchg
pusha
roll
pop
lret
mov
add
jmp
sub
or
subl
jmp
repz
stc
insb
loop
je
mov
out
stos
aaa
cmpsl
ret
pusha
mov
orl
inc
jmp
cmc
jae
xchg
pop
push
xor
es
jmp
fcmovbe
sub
jmp
pushf
add
fimull
ficompl
mov
orl
mov
jmp
or
insb
in
bound
test
cmp
sub
into
sbb
mov
jmp
jae
push
cld
sub
imul
push
roll
movsb
push
filds
pop
aaa
push
cmp
je
popa
mov
jmp
aad
jne
pop
clc
addl
jmp
push
shr
and
cwtl
push
imul
sub
lds
mov
jb
push
add
add
mov
jmp
sbb
xchg
sbb
aad
sub
notb
fistpll
or
lods
cmp
cmpsb
xor
scas
sbb
lcall
hlt
xchg
outsb
fucomip
js
mov
jecxz
jmp
jge
and
sbb
stos
cmp
sbb
sarl
add
lods
push
lcall
inc
daa
shlb
mov
gs
push
ss
inc
mov
stos
xor
xor
push
test
push
cltd
ljmp
or
mov
scas
enter
dec
mov
add
cltd
sbb
scas
sub
notl
int
fidivrs
inc
daa
shlb
aas
arpl
stc
ficoml
mov
int3
stos
data16
notb
repnz
fs
pusha
in
jge
mull
sub
stc
je
lea
xchg
jb
cmp
mov
cli
push
lahf
push
jne
jp
in
inc
into
pop
into
test
ja
loope
pop
mov
js
ds
add
enter
or
xchg
add
jno
roll
sarl
adc
ret
xchg
fs
xchg
add
sahf
sbb
ret
push
lds
xchg
std
or
lret
dec
fnstcw
jg
jmp
dec
mov
xchg
bound
lods
pop
dec
into
pop
cmp
ds
fs
popf
insb
lahf
and
cmp
add
stos
and
pop
enter
lds
mov
mov
cs
mov
test
in
bound
mov
and
clc
dec
push
rcll
push
jp
fidivrs
adc
cld
call
and
lret
and
adc
add
ja
in
adc
movsb
push
add
lret
scas
lock
adc
repnz
or
sbb
xchg
add
add
clc
outsb
or
adc
test
add
jmp
mov
pushf
sti
push
ffreep
inc
shlb
test
inc
shll
shlb
adc
cmp
inc
aad
dec
mov
test
cmp
pop
pop
aam
sub
das
dec
mov
xorb
add
data16
xchg
outsb
mov
mov
repnz
pop
repnz
mov
mov
mov
in
sbb
push
xor
imul
cmp
cmp
adc
adc
or
add
add
add
or
or
lret
or
or
lret
add
or
adc
adc
sub
add
ja
jmp
adc
pop
stos
in
in
lret
lret
sahf
out
pop
adc
lret
inc
add
add
hlt
pop
adc
adc
aaa
in
lret
lret
jae
or
mov
cmp
fstl
lods
pop
scas
test
insb
in
sbb
pop
cmp
cmp
xchg
mov
cwtl
adc
ficoml
mov
movsb
ret
ds
pushl
xchg
mov
mov
sbb
cmp
icebp
push
movsl
xor
sbb
scas
aas
pop
test
fs
xor
push
cmp
push
ljmp
xchg
or
jbe
sbb
jnp
mov
or
lds
iret
add
pop
xchg
repnz
sbb
pop
fmuls
fdivrs
inc
mov
or
lock
lea
test
pop
test
pop
rolb
shlb
add
push
mov
xchg
jb
in
sbb
bound
nop
testl
or
aas
or
cs
pop
iret
pop
cmp
jle
sub
jge
je
sub
insl
std
test
movsl
xor
fisttpll
out
jo
jnp
in
dec
pop
lret
pop
ds
cmp
iret
push
lds
xchg
mov
mov
les
sub
movaps
data16
adc
push
push
popf
or
jmp
push
in
adc
cltd
jo
cld
xchg
cmc
add
inc
lret
pop
ds
lret
inc
xlat
mov
mov
cmp
ficoms
mov
pop
jb
jl
adc
sbb
cs
aam
sub
pop
aas
lret
or
in
mov
sbb
enter
jne
out
pop
cltd
push
pushf
sti
push
mov
popa
fdivr
jae
xchg
pop
lds
iret
push
fildl
mov
mov
jnp
outsb
cli
push
repnz
pop
repnz
jne
add
mov
add
jmp
cmp
mov
lret
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
inc
add
add
lock
adc
jle
mov
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
cmp
lret
jg
jnp
in
sub
aad
fisttps
iret
and
enter
lock
in
jecxz
push
in
lea
pushf
sti
push
mov
movsb
ret
ds
and
pop
jecxz
push
in
mov
pushf
sti
push
sar
out
mov
mov
stos
js
pusha
pop
repnz
push
ret
cmpsb
push
mov
mov
jns
insb
dec
ret
ret
fwait
or
cmp
push
mov
repnz
and
cmp
mov
jecxz
xchg
add
stc
imul
shll
lahf
cli
or
push
mov
jne
inc
fisttpl
or
cmp
cmpsl
aaa
push
mov
in
notl
pop
cmp
and
nop
push
popa
nop
js
jae
xchg
sub
xor
sbb
mov
out
jno
addb
lock
iret
dec
fistpll
in
je
push
data16
pop
loop
mov
lods
enter
inc
mov
fmuls
fdivrs
ljmp
cmp
mov
mov
pop
xchg
repnz
mov
stos
cmp
push
mov
xchg
in
sbb
int
int3
stos
iretw
fimuls
mov
aaa
push
mov
das
fisubrl
adcl
fimull
fisubrl
dec
fistpll
shll
notl
mov
es
lcall
rolb
rclb
into
pop
cmp
push
inc
or
int
xor
xor
or
add
add
add
lret
or
add
or
or
add
add
lret
lret
xor
adc
add
ja
repnz
adc
sbb
lret
lret
cmp
and
and
jo
loop
adc
and
sub
jge
iret
pop
cmp
and
xor
popf
push
test
push
cld
inc
lret
lret
nop
push
popa
nop
arpl
psubd
sub
pusha
notb
sbb
cs
or
mov
cmpsl
aaa
push
mov
push
mov
add
xor
adc
subb
out
jg
jmp
push
scas
or
enter
sbb
mov
and
xchg
push
pushf
sti
push
js
je
out
imul
fcoms
push
aam
sub
addr16
pop
lahf
push
mov
es
xchg
adc
sbb
lret
lret
pop
push
fimuls
adc
cltd
inc
inc
iret
pop
cmp
xor
movsl
xor
lret
pop
ds
icebp
jle
mov
jo
inc
xor
mov
mov
sbb
icebp
push
cltd
setg
or
mov
and
cli
jae
xchg
mull
icebp
dec
xchg
add
hlt
push
cld
aas
jge
je
out
or
and
jne
bound
dec
adc
sti
fs
popf
insb
jmp
cmp
xchg
pop
xchg
adc
in
insb
loop
je
jne
push
cld
sbb
and
rcrl
scas
pop
scas
sbb
cmpsl
xor
add
xlat
inc
and
cmp
dec
cmc
jns
mov
adc
inc
int3
inc
and
add
xor
int
and
arpl
inc
shll
fidivrs
cmpsl
ret
pop
lock
testb
and
lret
lret
push
jmp
adc
aad
mov
sbb
fdivrl
adc
mov
fs
popf
insb
scas
dec
xlat
inc
and
cmp
inc
movsl
addr16
insb
or
out
mov
cmpsb
jmp
stc
cmpsb
and
inc
stos
push
xlat
inc
and
aaa
cmpsb
and
jl
ja
in
pop
adc
add
adc
popa
xchg
inc
push
xor
sbb
jns
mov
addl
repz
out
int
and
es
ljmp
mov
das
leave
jns
add
add
imul
sbb
mov
jle
popa
add
push
loopne
loopne
jb
rolb
mov
call
adc
push
adc
add
add
repz
adc
xor
adc
lret
lret
sar
pop
adc
adc
fs
mov
inc
mov
fisubrl
xchg
sbb
adc
or
sbb
lret
lret
adc
add
ja
sti
pop
adc
mov
lret
lret
xchg
add
add
std
pop
adc
ja
jp
in
lret
lret
iret
sti
pop
adc
in
sbb
lret
add
add
and
lret
and
sub
add
ja
aaa
or
js
icebp
dec
data16
lret
sub
add
ja
push
or
js
sub
jo
in
lret
lret
sub
adc
and
mov
lock
adc
sbb
mov
shll
enter
cmpl
jl
jne
add
fmul
dec
frstor
or
mov
sahf
or
cmpsb
pop
jp
xchg
testb
add
imul
mov
nop
testl
shlb
int
loope
adc
add
mov
xlat
and
pop
mov
inc
sub
pop
call
int3
mov
test
dec
fstpt
dec
pop
mov
fwait
icebp
data16
xchg
outsb
and
and
jne
mov
sub
icebp
outsl
lcall
iret
stos
pop
jb
bound
insl
hlt
pop
subb
ds
test
add
mov
cltd
clc
or
mov
cmpsb
shll
xor
sbb
or
dec
leave
push
ret
cmpsb
push
cmpsb
mov
cltd
clc
or
repz
mov
cmp
pop
xchg
insb
jmp
push
in
sbb
dec
fnstsw
xchg
testb
push
xchg
lea
xchg
icebp
add
cmp
cmpsl
xchg
push
xchg
repz
mov
int3
gs
outsb
cld
fwait
jbe
mov
sahf
sbb
out
jp
jp
sub
and
mov
je
addr16
push
lret
mov
sbb
sbb
lods
and
xor
dec
sub
adc
xchg
xchg
repz
out
pop
iret
stos
pop
orb
es
jns
insb
or
rorl
adc
stc
test
push
jno
aaa
roll
dec
jmp
inc
shll
jg
jmp
aas
lret
scas
dec
jmp
fcos
incl
add
mov
movzbl
jmp
push
int3
inc
and
dec
sub
popa
xor
mov
movsl
int3
aas
hlt
push
inc
and
ss
aam
sub
jne
out
or
imul
insl
xchg
test
xchg
lock
movl
push
pushf
sti
push
jo
push
adcl
push
inc
roll
aad
mov
cwtl
repz
jne
push
es
cmp
push
mov
cmp
pusha
popa
repnz
pop
repnz
jae
jno
jecxz
xor
add
test
mov
fsts
cmpsb
push
in
jnp
mov
push
add
xor
dec
sub
add
mov
sahf
stc
or
jg
ja
loope
dec
fistpll
cmp
mov
jmp
cltd
push
jo
imul
imul
movl
adc
mov
outsl
jmp
push
in
sbb
lcall
jb
in
mov
shll
cmp
ret
mov
cs
mov
test
std
test
fmuls
mov
cmp
add
ss
jnp
mov
jge
jg
jmp
xor
sbbb
out
sbb
mov
fcmove
push
les
and
mov
psubd
mov
inc
mov
sub
adc
xchg
add
jp
notl
xor
out
notl
ds
test
test
mov
mov
test
adc
and
mov
outsl
lcall
mov
fisttpll
out
fstl
mov
mov
xorl
sbb
lret
and
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
inc
add
add
add
adc
in
sbb
in
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
jmp
lret
loop
cmpsb
fcmovnbe
sbb
or
or
or
or
or
lret
sbb
sub
add
ja
repz
adc
dec
cmpsb
push
mov
lret
lret
mov
add
ja
clc
pop
adc
fldl
xor
in
lret
sar
pop
adc
in
inc
fisttpl
fnsave
fwait
or
sub
pop
and
jl
jp
jp
adc
lock
aad
xor
dec
frstor
mov
mov
int3
adc
jb
bound
cmp
sub
in
bound
cmpsl
ret
dec
into
pop
cmp
cmp
jne
popa
add
getsec
mov
inc
mov
imul
add
add
pop
mov
ret
cmp
outsb
out
adc
or
les
pop
repnz
lret
mov
xchg
lock
or
xchg
mov
sbb
lea
lds
iret
jl
mov
jg
and
pop
int3
stos
data16
arpl
push
cld
push
push
lcall
ret
repz
scas
cmp
mov
pop
int
lea
jecxz
cltd
cmp
or
xchg
push
test
push
divb
imul
adc
leave
inc
lret
pop
ds
iret
dec
fidivrs
sub
xor
jns
jmp
push
test
jge
jg
xor
fisttpl
fnstsw
jmp
xchg
jne
imul
adc
push
mov
test
xchg
add
and
inc
roll
sarl
and
xchg
jb
test
and
mov
dec
loop
cmp
push
mov
sbbl
jg
dec
inc
and
xor
pop
xchg
adc
insb
repnz
pop
bnd
jg
mov
and
mov
lods
gs
push
in
add
out
nop
popf
mov
repz
adc
clc
pop
adc
xor
in
lock
bound
je
jo
xorl
jle
jecxz
lcall
shll
jmp
fisttpl
xchg
sbb
push
fimull
fimull
jl
add
xor
arpl
cmc
push
sbb
sbb
xchg
and
test
pop
test
into
pop
int3
stos
data16
ret
push
shlb
cmp
mov
and
sarl
jg
jmp
cmp
adc
enter
jno
jecxz
add
inc
fdivl
in
out
ja
xorb
mov
js
inc
jnp
outsb
or
adc
repz
adc
incb
adc
adc
mov
mov
jmp
push
mov
lret
add
add
add
lret
add
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
add
pop
loop
adc
add
lret
lret
int3
or
add
xor
gs
aam
sub
cmp
inc
aad
int
addr16
jnp
add
adc
ja
xorb
loopne
adc
adc
and
adc
das
stc
push
lcall
out
mov
lahf
adc
rolb
sarb
jle
mov
xchg
addr16
imul
testb
jl
cld
push
movsb
aaa
cmpsl
ret
dec
fisttpl
fstpl
mov
int
or
setbe
sahf
jbe
and
inc
aam
dec
leave
push
jle
call
mov
rolb
inc
test
mov
stos
sub
lds
push
and
pop
repnz
fs
mov
cmpsl
ret
and
xchg
and
icebp
cld
je
lea
mov
inc
mov
nop
push
mov
cmpl
and
sbb
jbe
and
stc
push
lahf
push
cmp
dec
jecxz
push
in
push
les
int3
jge
sbb
mull
icebp
dec
mov
mov
subl
mov
cmpsb
xor
scas
inc
clc
notl
int
shll
inc
mov
addl
jb
addr16
pop
push
add
dec
fistpll
fnstcw
mov
and
adc
lock
sbb
fwait
or
push
lods
dec
repz
cmc
pop
call
pushf
xchg
sahf
stc
or
inc
xchg
pop
mov
add
add
sbb
lret
xor
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
push
add
add
cli
pop
adc
inc
push
rcr
in
lret
lret
inc
add
add
clc
pop
adc
aad
adc
in
lret
add
pop
loop
adc
add
lret
lret
cmpsb
sti
pop
adc
lret
push
fisttps
fldenv
sar
loop
je
xor
pop
mov
test
push
xor
imul
faddl
not
adc
jmp
xor
add
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
inc
add
add
repz
adc
sbb
mov
in
lret
push
add
add
or
cmp
loopne
in
lret
lret
pusha
add
add
sti
pop
adc
adc
lds
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
outsb
push
or
in
lret
adc
mov
jb
sbbb
call
and
lret
and
scas
add
add
incb
adc
mov
iret
jnp
lret
lret
nop
add
adc
mov
daa
shlb
pop
repnz
cmpsl
mov
mov
sbb
inc
mov
inc
mov
xor
mov
xchg
adc
pusha
notb
push
xor
adc
mov
push
lds
lahf
push
push
rolb
rolb
and
mov
lods
and
enter
fmul
sub
add
add
and
lret
and
sub
add
ja
incl
adc
and
inc
in
lret
lret
invd
or
mov
lcall
imul
adc
add
in
pop
and
cmp
mov
nop
or
xor
mov
mov
and
cmp
lret
js
xchg
pop
bound
add
inc
fwait
or
in
mov
sarl
out
mov
arpl
outsl
or
les
bound
loope
jae
pop
les
int3
and
pop
iret
stos
pop
loopne
push
les
add
cmp
imul
cmp
or
jb
push
cld
add
movsl
xor
lock
add
jb
cld
jbe
cmpl
in
sbb
aad
dec
test
jnp
pop
lahf
punpckhdq
sbb
and
enter
or
sahf
stc
or
sub
add
dec
add
or
xor
inc
xlat
mov
repnz
insl
ret
and
add
sub
lds
lds
xchg
cmpsb
das
mov
dec
mov
les
fildll
sub
push
data16
outsb
or
jg
jge
je
add
pop
xchg
or
je
jns
mov
insb
repz
cmc
push
fistps
stos
pop
cltd
lcall
insl
std
test
and
inc
iret
pop
cmp
and
pop
iret
stos
pop
test
dec
frstor
jae
jge
jmp
test
cltd
clc
or
jecxz
std
test
push
dec
sub
jne
je
out
inc
mov
xchg
outsl
or
scas
pop
leave
pop
cmp
js
es
cs
jae
xchg
repnz
pushf
outsl
lret
mov
dec
fstpt
ret
cmpsb
push
mov
sub
jb
bound
and
and
ficoml
inc
and
cmp
mov
jns
pusha
push
rolb
shlb
fdivr
call
and
lret
and
jg
add
ja
out
pop
adc
test
in
lret
inc
add
add
in
pop
adc
mov
cwtl
in
lret
lret
mov
push
rolb
shrb
jmp
push
in
cmp
mov
js
jl
lock
sbb
outsl
or
hlt
or
cmp
dec
rclb
xor
popa
add
push
cmp
mov
adc
jg
and
cld
call
and
lret
and
push
add
add
push
or
js
aaa
mov
adc
lret
lret
loop
pop
adc
or
adc
jbe
push
dec
push
xor
or
push
cmc
push
mov
gs
and
push
shll
repnz
test
sahf
insl
fcmovu
dec
frstor
lds
aas
pop
test
out
rorl
jl
popa
icebp
nop
arpl
cmpsb
dec
gs
imul
js
ljmp
mov
push
sub
cmp
push
lds
call
mov
pop
enter
sub
adc
cltd
or
push
cmc
gs
pop
sub
add
or
rorb
push
xorl
add
and
push
shlb
stos
iretw
fmull
push
in
push
cmp
lret
lret
mov
push
shlb
inc
mov
es
add
mov
cmpsb
cmp
jge
je
add
jns
mov
push
les
mov
and
add
jg
cmp
pop
addl
outsb
xor
add
ret
mov
jns
jmp
cmpsb
xor
int
mov
sub
je
lcall
jo
loop
xchg
add
cmpsl
aaa
push
mov
push
in
pop
xchg
add
add
xchg
or
insl
std
test
or
jle
jbe
loopne
aaa
test
pop
test
lret
dec
fistpll
jle
call
ret
push
aam
sub
cmp
push
cmc
jb
xchg
or
loope
cli
popf
insb
test
cli
ja
xorb
stc
imul
js
ljmp
outsl
push
xchg
jb
pop
ljmpw
jae
insb
or
mov
das
fwait
jl
jge
negl
adc
xor
add
adcb
jecxz
scas
pop
adcb
subb
fimull
fisubrl
in
sbb
dec
pop
ret
ret
cwtl
push
imul
outsl
lcall
pushf
sti
push
xchg
les
test
ficoms
add
sahf
push
out
jae
xchg
in
insb
loop
je
mov
mov
push
les
or
dec
js
xchg
cmc
add
das
stos
cmp
inc
xor
mov
test
into
pop
cmp
xor
pop
int3
stos
xchg
ja
icebp
jle
mov
mov
lret
inc
aam
dec
jmp
push
out
mov
imul
stos
cmp
xor
sub
iret
pop
cmp
pusha
and
cmpsl
inc
shll
das
dec
mov
xlat
and
inc
cmp
inc
mov
adc
xor
push
dec
roll
aad
pop
bound
ja
hlt
pop
adc
incl
adc
test
and
mov
dec
mov
shlb
test
xchg
repnz
repz
sti
jo
xorl
iret
sub
fsts
adc
mov
cli
push
add
jnp
mov
inc
xlat
inc
and
jbe
xor
or
or
out
pop
imul
cmc
add
or
jl
jg
jmp
inc
mov
push
lret
lret
insb
or
in
dec
aad
sub
xor
and
sub
stc
into
das
lods
and
pop
rclb
cmpsl
push
mov
stos
dec
adc
push
xlat
inc
and
or
cwtl
and
roll
shll
add
je
adc
ss
sub
mov
jmp
loopne
adc
and
push
shll
mov
clc
or
roll
mov
lock
lds
iret
fs
in
jle
xor
push
mov
jg
cmp
ljmp
fwait
cmpsl
cmp
mov
cmpsb
mov
in
sbb
jmp
cwtl
stc
gs
pushf
outsl
ljmp
gs
sbb
and
inc
mov
test
adcl
mov
xchg
gs
insb
jmp
jns
pop
fdivl
in
sti
ja
xorb
outsb
cld
fwait
jbe
test
xor
sbb
out
or
mov
fdivr
call
and
lret
and
or
add
ja
or
adc
popf
test
mov
lret
inc
or
mov
and
notl
xchg
testb
and
pop
push
xor
dec
outsl
lock
ja
mov
adc
inc
ret
ret
pop
repnz
fs
addb
cmp
push
lds
or
xchg
or
outsl
pop
xlat
inc
and
cmp
adc
sub
stc
jne
mov
test
mov
das
stc
or
mov
shll
addr16
dec
mull
icebp
push
push
mov
xchg
daa
mov
mov
lcall
mov
xchg
or
sub
mov
sbb
flds
mov
mov
shll
inc
mov
mov
mov
inc
mov
ds
addb
repnz
in
insb
loop
je
scas
cs
out
adc
adc
repz
and
dec
sub
cmp
pop
aas
mov
dec
mov
cmp
and
sub
push
mov
jmp
aam
sub
shlb
and
mov
inc
mov
lret
test
lock
insl
std
test
fisttps
mov
inc
and
push
mov
stc
popa
icebp
nop
arpl
sbb
add
xor
dec
sub
push
nop
push
popa
nop
pop
push
roll
aad
imul
pop
fisttpll
out
movsl
sub
add
std
or
and
pop
push
aam
sub
test
pop
call
cmc
sbb
loopne
push
les
sbb
outsb
xchg
fcmove
inc
fidivrl
xchg
adc
imul
push
in
dec
jge
pusha
pop
repnz
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
mov
nop
testl
in
sbb
inc
inc
and
push
mov
in
push
scas
dec
fdivl
in
jmp
das
imul
hlt
pop
mov
fimuls
inc
push
enter
or
dec
ret
mov
or
xchg
mov
les
int3
dec
pop
rcll
inc
cmp
or
sbb
nop
push
popa
nop
js
in
sbb
add
push
mov
sti
mov
movsb
ret
ds
jge
outsb
or
adc
out
push
test
push
cld
data16
jl
notb
add
jecxz
jecxz
jne
jp
imul
das
in
cltd
push
sub
jg
pop
int3
stos
data16
inc
es
lods
inc
shll
sbb
and
sub
nop
push
popa
nop
daa
cli
insl
std
test
xchg
setg
or
mov
and
lock
test
push
hlt
pop
push
xor
xor
in
call
xor
int
cmc
jl
addb
icebp
add
pop
sahf
or
cmpsb
inc
sbb
addr16
movsl
int3
aas
ljmp
push
inc
and
ss
lds
iret
ds
jecxz
jne
movsb
sub
lds
movsb
xor
and
gs
pushf
outsl
mov
mov
mov
test
test
insl
add
sti
imul
push
or
je
cmp
hlt
pop
adc
incb
adc
fidivl
jmp
xchg
loop
adc
testb
sbb
lret
xor
sub
add
ja
incl
adc
addb
in
lret
lret
sbb
or
mov
ljmp
sbb
jmp
pop
fwait
or
push
call
dec
sub
add
dec
fstpt
sbb
roll
call
mov
fcmovbe
repnz
enter
add
lds
mov
jmp
test
mov
cs
sti
mov
mov
and
jmp
imul
mov
sub
add
jmp
adc
popf
sub
add
out
clc
lahf
push
jmp
hlt
xchg
outsb
leave
sbb
xor
push
inc
aad
sub
je
insb
loop
je
inc
in
xor
add
pop
jmp
cmpsb
xor
jbe
jbe
loopne
scas
mov
xor
cltd
push
sub
push
std
insl
hlt
pop
mov
les
std
scas
cli
push
pop
int3
stos
data16
mov
inc
mov
aaa
ret
aas
adc
pushl
jmp
adc
xchg
jmp
dec
aam
sub
mov
sub
lret
dec
fidivrs
jmp
mov
cwtl
decl
loop
and
mov
add
add
jmp
mov
inc
sub
cmp
push
push
and
notl
xchg
add
sahf
jbe
es
ret
push
jmp
sbb
add
add
rol
fnstcw
pop
bound
mov
jmp
pusha
out
jg
jmp
jmp
and
mov
call
jmp
inc
adc
and
jne
fmuls
fdivrs
dec
fnstcw
and
mov
popa
jmp
aas
cmp
jmp
cwtl
or
adcl
pop
jp
es
xlat
inc
and
jbe
mov
andb
sub
jo
mov
and
jmp
cmpsb
xor
loope
adc
inc
pop
cmp
int
mov
cmpl
add
movzbl
add
jmp
mov
jmp
mov
in
sbb
gs
insb
or
in
daa
push
push
cwtl
cmp
je
popa
jmp
xchg
or
in
adc
jmp
jmp
or
add
adc
add
jmp
xchg
or
pop
int3
stos
scas
push
aam
sub
jne
pop
pop
xor
adc
add
add
and
adc
and
movsl
xchg
in
lret
lret
jne
or
mov
insl
add
call
imul
jmp
mov
jmp
fcompl
mov
mov
enter
jg
fs
jmp
rorl
push
sub
lock
bound
sub
mov
sbb
mov
and
sub
and
add
ja
adc
adc
pop
inc
in
mov
lret
adc
or
mov
or
mov
add
add
and
lret
and
and
add
ja
adc
adc
cmc
sbb
in
lret
lret
add
out
jg
jmp
sahf
insl
cwtl
push
fwait
or
jns
dec
fistpll
dec
gs
or
cld
jo
xorl
flds
mov
push
lret
pop
ds
inc
roll
shll
jle
mov
and
popa
cs
sti
insl
std
test
push
adcl
jnp
mov
imul
add
adc
xor
dec
sub
inc
fmuls
fcomps
push
mov
mov
pusha
test
loopne
lahf
sbb
test
int
hlt
push
cld
add
std
cli
jle
mov
inc
mov
and
sti
jo
xorl
lret
sub
pushf
outsl
imul
push
in
dec
mov
lds
mov
mov
jmp
push
lahf
punpckhdq
dec
mov
add
push
sub
jae
adcl
jno
xorb
fisttps
sbb
aad
xchg
test
out
dec
fmuls
fsubrs
setg
or
mov
shll
mov
das
mov
adc
mov
mov
xor
dec
fstpt
cmp
inc
ja
scas
mov
add
mov
jmp
and
in
push
lahf
push
sahf
pop
mov
mov
inc
and
ss
call
sbb
jl
add
jmp
ficoml
pop
sti
push
xchg
pop
bound
jo
inc
mov
lods
lret
inc
loope
cs
out
adc
inc
push
lds
pop
lods
add
jae
xchg
dec
push
jmp
cs
sbb
cld
call
and
lret
and
cmp
add
ja
adc
mov
lret
lret
xor
or
mov
decl
fisttpl
fnstsw
adc
inc
aam
frstor
jbe
imul
mov
inc
lds
xchg
divb
jl
jle
xchg
testb
mov
sub
jmp
mov
push
shll
fsubrs
fmull
pop
aas
lret
imul
insl
cwtl
ret
dec
fidivrs
pop
cmp
xor
jno
xorb
mulb
pop
enter
dec
cltd
mov
jmp
outsb
cld
fwait
jbe
or
adc
mov
pop
leave
pop
cmp
js
and
adcb
xorb
push
lret
cmc
fisttpl
movsb
push
loop
push
xor
push
inc
or
shll
pop
repnz
arpl
xchg
mov
mov
push
orl
jbe
imul
adc
push
mov
or
jl
sub
add
aam
sub
loopne
jb
dec
push
xor
cmp
sbb
and
and
dec
frstor
add
sub
pop
int
cmpsl
mov
xchg
gs
gs
dec
or
pop
roll
aad
pusha
mull
icebp
push
ds
pop
test
inc
rolb
sarb
jno
xorb
xchg
jb
sub
dec
sub
and
inc
and
cmp
fmuls
fdivs
mov
mov
adcb
addb
dec
frstor
xchg
popa
cmpsb
insl
out
jl
negb
loopne
notb
push
jno
or
fcomps
xchg
addr16
mov
xchg
arpl
pop
cmp
and
or
cmpsb
push
aas
mov
dec
mov
fildll
into
ret
or
adc
adc
jmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
inc
or
js
add
or
lret
mov
or
mov
sbb
jecxz
jecxz
jne
mov
xchg
repnz
xchg
push
mov
es
inc
mov
out
scas
aas
pop
test
mov
lcall
jno
jecxz
ljmp
lcall
js
mulb
dec
adc
xchg
setg
or
cmpsl
cmp
mov
cmpsb
add
mov
fldl
mov
xlat
dec
fidivrs
mov
sbb
push
jg
jmp
add
sbb
mov
cmc
jno
xorb
or
dec
fidivrs
jbe
loopne
cmp
out
imul
insl
mov
repz
inc
aad
dec
mov
sarl
imul
insl
mov
das
out
push
dec
int3
pop
int3
stos
data16
mov
sbb
pop
enter
popa
dec
fldt
pop
mov
mov
mov
inc
mov
adc
xchg
or
sahf
or
cmpsb
dec
mov
mov
pop
repnz
fs
sbb
and
into
pop
cmp
ds
pop
mov
stos
int
flds
cmp
jecxz
push
in
in
notb
dec
add
lret
sub
add
ja
adc
adc
dec
data16
in
lret
lret
ds
or
ja
sbb
adc
xchg
test
jge
sub
xchg
add
push
dec
rolb
shlb
xor
fildl
mov
stos
faddl
mov
cli
popf
insb
jmp
xor
setg
or
jnp
imul
sbb
add
add
xchg
cmc
add
adc
idivb
mov
fldcw
fisttpl
aaa
ret
setg
or
mov
repnz
sbb
add
imul
insl
ret
lahf
cli
or
or
add
xor
mov
push
shll
cmpsl
push
xchg
mov
xchg
adc
and
ljmp
stc
imul
stos
int
mov
xor
sbb
js
outsb
or
adc
add
adc
add
divb
xorb
cli
push
test
lea
popf
push
test
push
cld
mov
aad
repnz
pop
repnz
lahf
punpckhdq
mov
es
mov
jg
pusha
pop
repnz
ret
mov
fstpt
pop
cmp
jns
push
pushf
sti
push
mov
adc
or
les
lds
iret
push
outsb
cld
fwait
jbe
and
and
push
xor
dec
sub
xor
scas
pop
ret
ret
sbb
mov
inc
mov
test
pop
int3
stos
subw
cmp
mov
jp
xchg
testb
je
fstpl
test
xor
push
adc
or
outsb
cld
fwait
jbe
xchg
and
push
lds
dec
mov
pop
test
sbb
dec
or
cmpsb
cmp
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
iret
pop
int
addr16
sbb
aad
rclb
pop
out
loopne
in
jg
scas
cmp
sub
mov
jns
dec
ljmp
stc
in
imul
xchg
add
jns
mov
dec
mov
push
mov
faddl
add
add
sbb
lret
ja
aaa
or
mov
jecxz
hlt
jne
mov
adc
or
je
or
fimuls
sbb
inc
and
or
pop
cmp
and
mov
dec
mov
fisubrl
les
leave
les
push
mov
sti
imul
or
push
shlb
enter
xlat
inc
and
sbb
jp
dec
fisttpll
out
aaa
movsb
cmp
add
xchg
cs
pusha
notb
ja
loope
adc
iret
pop
leave
test
out
mov
mov
and
mov
rorb
mov
dec
sub
xor
outsl
lcall
and
xor
out
jl
divb
inc
aad
dec
test
jge
je
insl
cmp
rolb
inc
stos
lahf
pop
sub
jge
jo
xorl
mov
mov
mov
or
adcl
add
and
lret
and
adc
add
ja
sbb
mov
lret
lret
sub
pop
adc
push
repnz
mov
lods
lret
inc
loope
xchg
mov
in
sbb
das
mov
std
or
xchg
push
xchg
repz
mov
fs
pop
xchg
repnz
ljmp
adc
add
add
and
lret
and
xor
adc
mov
push
les
int3
gs
add
lret
pop
ds
movsl
cmp
ljmp
stc
in
push
pushf
sti
push
cld
jge
jp
in
add
pusha
notb
xlat
mov
enter
lods
pop
xchg
push
jg
jmp
or
adc
jmp
push
mov
jns
jbe
and
and
mov
mov
jae
xchg
or
xchg
sbb
outsl
xchg
pop
xchg
sbb
aad
lock
push
jns
dec
pop
leave
test
cmc
gs
pushf
outsl
fistl
cmp
fmuls
mov
scas
lret
push
cwtl
push
imul
and
adc
daa
jmp
mov
lea
mov
inc
mov
filds
mov
cmpsb
faddl
mov
lds
lods
xchg
adc
loope
adc
or
jae
xchg
inc
ret
ret
adc
roll
roll
stos
sub
cltd
sbb
aad
int3
loop
cltd
push
push
mov
xchg
popa
mov
dec
das
fisubrl
jecxz
jecxz
jne
mov
call
in
cs
mov
pop
int3
inc
and
int3
stos
iretw
arpl
popa
add
inc
mull
xchg
outsb
xor
jmp
das
inc
rolb
shlb
cmp
jl
je
out
sub
stos
dec
jns
ja
loope
adc
push
iret
pop
cmp
push
inc
fdivl
in
cmp
sub
cmovge
pop
cmp
ds
xlat
inc
and
aaa
or
and
js
mov
xor
lret
movsb
push
mov
pop
scas
pop
xlat
inc
and
cmp
enter
insl
hlt
pop
testb
es
mov
fwait
decb
jns
dec
insl
ja
jmp
cld
call
and
lret
and
sub
add
ja
or
adc
or
leave
adc
lret
lret
jle
or
mov
mov
or
out
jmp
jge
cld
insb
loop
je
sbb
add
cmp
cmpsl
mov
mov
xchg
or
sub
push
xor
and
mov
pusha
xchg
jae
inc
shlb
mov
test
cld
xchg
cmc
add
sub
and
rcll
mov
jle
call
push
cmpsl
dec
int3
push
ret
cmpsb
push
mov
dec
fdivrs
jne
out
cmp
notl
nop
sbb
in
sbb
sti
sahf
insl
mov
out
gs
bound
shlb
imul
test
inc
mov
testb
sub
dec
pop
lea
sub
lds
lcall
adcb
outsl
nop
sbb
cld
call
and
lret
and
sub
add
ja
xor
adc
push
xor
or
lret
inc
and
cwtl
push
rcl
and
adc
add
add
add
add
add
add
lret
add
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
or
or
or
and
fsubrl
add
add
and
adc
int3
fstpt
lret
lret
lds
jne
mov
mov
stc
adc
mov
mov
xor
data16
xchg
outsb
jmp
sub
and
nop
adc
rcll
sub
push
les
mov
and
dec
into
pop
cmp
add
jp
jge
je
insl
sub
daa
lods
and
push
xchg
add
xor
aam
sub
leave
test
fwait
adc
punpckhdq
adc
push
xor
or
mov
sahf
out
out
jo
repz
popf
insb
lds
xchg
int
into
test
jbe
loopne
std
data16
xchg
outsb
mov
jl
jne
outsb
sbb
jo
jl
divb
cli
push
jmp
push
in
and
clc
cltd
pop
xchg
push
test
push
sti
pop
fisttpll
out
sbb
or
dec
or
imul
sbb
push
test
test
sarb
cld
sbb
add
add
jbe
cmpl
mov
imul
mov
push
les
int3
jp
gs
pushf
outsl
mov
jne
out
inc
test
and
xchg
icebp
add
dec
cli
jl
jg
jmp
push
cmpsl
pop
lds
iret
das
addr16
insl
hlt
pop
out
insb
sti
imul
adc
and
sub
push
lea
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
sub
ret
inc
mov
test
inc
and
ss
xchg
testb
push
call
test
test
ljmp
adcl
test
pop
leave
test
mov
push
mov
rolb
shlb
dec
fidivrs
fdivrs
inc
and
adc
sahf
or
cmpsb
add
mov
pusha
pop
repnz
dec
fimuls
push
and
setg
push
push
lcall
lret
pop
ds
ret
lods
pop
cli
pop
rcll
add
test
pop
test
mov
in
sbb
dec
frstor
popf
insb
jmp
dec
ret
shrl
scas
aas
pop
test
mov
cmpsb
sbb
pop
sahf
or
cmpsb
inc
mov
ljmp
aad
sub
sub
in
cld
xchg
cmc
add
in
std
test
lret
inc
shll
inc
and
and
test
pop
test
cld
jno
xorb
pop
lret
scas
pop
cltd
jmp
lret
xor
xor
and
push
lret
pop
ds
clc
outsb
cld
fwait
jbe
push
rclb
imul
stos
pop
sar
icebp
nop
arpl
adc
outsb
mulb
adc
repnz
pop
repnz
out
and
sbb
enter
mov
mov
testb
insb
movsl
das
lods
and
pop
or
add
jl
xor
sub
lds
icebp
jbe
cmpl
sbb
movsb
daa
mov
and
aaa
ret
push
lds
pop
xlat
inc
and
cmp
adc
in
fs
popf
insb
lahf
in
bound
or
dec
orl
iret
pop
cmp
jo
loope
adc
push
xor
add
fdivr
call
and
lret
and
or
add
ja
and
lahf
test
in
lret
lret
pop
das
or
mov
xchg
and
mov
inc
mov
mov
mov
and
xchg
sub
stos
dec
fisttpl
fstpl
add
sub
sub
sub
add
add
add
add
lret
add
or
add
add
or
add
lret
lret
sub
sub
add
ja
and
add
xor
in
lret
lret
repnz
adc
cmpsb
dec
and
fiadds
mov
push
jp
das
mov
or
cltd
or
jno
pop
lret
scas
pop
mov
push
call
xchg
inc
pop
fimuls
adc
push
lahf
push
sbb
test
mov
and
mov
xchg
repnz
push
lea
xchg
add
sahf
cmp
xchg
cmc
add
jnp
gs
aas
in
pusha
notb
lds
leave
cmp
stc
mov
pop
iret
stos
pop
into
adc
nop
push
popa
nop
cmp
jbe
cmpl
scas
aas
pop
test
push
mov
sahf
insl
mov
pop
cmp
cmp
outsb
xchg
js
mov
lcall
stos
cmp
bound
jo
loop
fwait
sbb
sub
lds
in
icebp
nop
arpl
arpl
lret
cmp
int
and
cmp
mov
add
sbb
outsb
cld
fwait
jbe
orb
clc
or
inc
roll
aad
push
lahf
punpckhdq
loop
fisttpll
mov
jle
sub
inc
aad
dec
sti
cmp
pop
iret
pop
cmp
data16
jnp
in
inc
pop
leave
pop
cmp
js
jo
xorl
mov
gs
xor
sub
movb
lock
xor
mov
mov
fistpl
data16
xchg
outsb
cmpsl
out
insb
loop
je
jg
insl
hlt
pop
in
mov
faddl
jmp
movsl
xor
jb
xchg
push
fisttpl
fnsave
cmc
jge
je
jbe
push
lahf
push
dec
les
int3
sub
rorl
push
repnz
sub
aas
scas
lret
xchg
cwtl
decl
lods
xor
invd
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
fcoml
add
ja
push
or
js
aad
dec
inc
in
lret
lret
lret
adc
jg
arpl
cmc
inc
stos
aas
scas
lret
inc
aam
dec
lcall
add
cmp
jg
jmp
and
jns
pop
out
jp
jp
mov
mov
data16
xchg
outsb
mov
mov
inc
mov
nop
setg
or
cmp
add
add
sub
adc
sub
or
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
inc
add
add
or
js
neg
std
inc
in
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
outsb
xor
adc
lret
inc
les
int3
add
mov
jp
jp
das
scas
cmp
mov
addb
repz
lock
cmpsb
push
test
jnp
in
push
in
notl
and
loope
fstpt
or
movsb
xor
sbb
aad
adcl
punpckhdq
dec
movb
lods
mov
loop
sti
imul
dec
mov
ret
in
insb
or
scas
or
jge
js
ljmp
inc
inc
rolb
shlb
xor
cs
lock
bound
pop
std
mov
in
sbb
arpl
xchg
cmc
add
sub
cmp
mov
popf
push
mov
es
rclb
cmpsl
push
mov
subb
and
dec
jp
xchg
testb
xor
lahf
push
pop
xlat
inc
and
sub
insb
or
in
xor
mov
scas
and
xchg
add
sahf
dec
lods
daa
mov
and
jl
addr16
pop
jmp
iret
and
and
mov
jns
cmp
or
sbb
xor
inc
mull
cld
data16
xchg
outsb
lods
divb
xchg
jmp
pushf
outsl
xchg
jbe
cmpl
in
sbb
icebp
nop
arpl
out
insb
loop
je
jg
xchg
cmc
add
adc
ss
dec
mov
push
movsb
pop
movsb
and
push
ret
cmpsb
push
cmpsb
xlat
push
shlb
push
movsl
push
data16
cmc
adc
mov
inc
mov
psubd
in
clc
lahf
push
push
xchg
pop
bound
out
rcr
push
shlb
xchg
aam
in
sbb
inc
sub
sub
clc
adc
or
sbb
lret
fsubrl
add
add
das
or
js
pop
movsb
lea
in
lret
lret
lcall
enter
ret
push
shlb
jo
xor
mov
mov
loope
mov
mov
clc
adc
add
sbb
lret
lret
inc
add
add
inc
or
js
mov
lret
lret
leave
pop
or
mov
mov
pop
enter
push
jne
out
dec
jb
jbe
loopne
popa
repnz
pop
repnz
je
jp
in
pop
xchg
xchg
pop
xchg
repnz
mov
mov
cmc
lea
mov
sbb
sti
cmp
in
sbbb
out
sbb
xor
pop
mov
mov
mull
icebp
js
adc
mov
call
adc
mov
inc
and
das
xchg
adc
in
sbb
xor
push
adcl
pop
enter
adc
scas
es
cs
sbb
jg
xchg
add
xor
push
test
or
mov
mov
das
fwait
pushf
or
sub
push
xor
int
addr16
add
sbb
mov
inc
mov
push
adcl
lea
push
mov
addr16
adc
sub
lock
cld
fwait
jbe
pop
iret
stos
pop
loopne
xor
mov
stos
sub
daa
mov
and
lcall
pop
enter
fcompl
test
daa
inc
mov
mov
lods
lret
inc
mov
fisttpl
fnstsw
sbb
lods
sub
rclb
addr16
fdivl
in
jle
pusha
pop
repnz
imul
pop
inc
fisttpl
dec
fnstcw
arpl
cmc
inc
out
jle
mov
cld
bsf
pop
cmp
jg
adcl
mov
inc
mov
jb
jle
call
sub
cmp
popa
icebp
nop
arpl
cmp
lods
xor
les
int3
dec
and
sbb
sub
jns
jo
loop
loopne
out
mov
jmp
push
sbb
testb
in
lret
lret
insl
add
add
and
adc
imul
in
lret
and
or
mov
pop
std
mov
and
xchg
and
push
lds
adc
dec
xchg
adc
push
shll
movsb
push
mov
sbb
adc
fimuls
adc
cmpsb
xor
scas
inc
sti
ja
xorb
push
xor
sub
push
xchg
repz
ljmp
pushf
adc
stc
imul
adc
inc
pop
fisttpl
fnstsw
xchg
repnz
sbb
ja
push
les
outsb
or
dec
mov
lahf
add
xchg
pop
xchg
repnz
test
xchg
mov
and
add
adc
pop
jp
jg
jno
xorb
call
icebp
jno
xorb
mov
mov
rcrb
dec
sub
add
popa
add
psllw
mov
imul
or
mov
xor
adc
pop
mov
je
out
sbb
xchg
push
mov
es
enter
sub
push
xor
sub
iret
std
jno
xorb
cld
xchg
cmc
add
inc
enter
or
adcl
test
cmp
ja
ljmp
push
add
add
xor
adc
notb
pop
in
lret
lret
hlt
xor
adc
adc
stos
sbb
or
inc
fidivrl
notl
cmp
pop
repnz
fs
dec
ret
jecxz
fs
popf
insb
lret
add
outsb
sti
imul
sbb
cmp
inc
lods
xor
int
aam
fimuls
popa
les
test
faddp
dec
fstpt
shll
shll
jl
notb
or
sbb
je
les
int3
sbb
cld
cmp
push
fisttps
fsts
xor
inc
shll
out
mov
cmp
mov
jmp
push
xchg
dec
push
xor
imul
mov
adcb
xor
jle
movsl
xor
mov
cs
jmp
xor
lock
lds
jp
in
das
push
lret
lret
mull
icebp
adc
imul
pop
mov
cmpsl
aas
ret
push
lds
xor
and
and
in
bound
pop
jb
jno
aaa
cmpsl
ret
add
int3
dec
fistpll
popa
add
add
lahf
punpckhdq
mov
mov
into
stos
sub
fs
popf
insb
mov
sbb
pop
stos
or
cmp
mov
push
les
cwtl
decl
mov
sbb
fnsave
jl
jne
xor
push
aaa
ret
mov
jle
dec
addr16
xchg
cmc
add
jae
jns
jmp
mov
mov
xchg
add
adc
push
pusha
loop
pop
loop
cs
inc
mov
xchg
xchg
repz
out
xor
fdivl
in
stos
xor
push
mov
xchg
adc
andl
add
add
and
lret
and
and
add
ja
in
pop
adc
and
imul
lret
lret
inc
sub
adc
pop
stos
xor
mov
nop
testl
shrl
ffree
dec
fdivrl
pop
cmp
add
arpl
xchg
mov
movsb
add
pop
into
test
lcall
iret
stos
pop
fimuls
movsb
push
cld
xor
pop
iret
pop
cmp
jle
mov
jns
bound
push
aaa
ret
ret
push
lds
enter
push
mov
cld
call
and
lret
and
sub
add
ja
sub
adc
xorl
in
lret
jg
add
ja
sub
adc
out
addr16
lret
lret
les
or
mov
mov
inc
mov
shll
cmpsl
push
rolb
rcrb
into
push
ret
cmpsb
push
mov
jmp
dec
lret
lret
pop
leave
test
cmpsl
adc
inc
pop
fimuls
adc
test
fnstcw
adc
arpl
in
sti
imul
or
jbe
loopne
mov
jmp
mov
sub
pop
push
pushf
xor
adc
stos
push
xchg
mov
jg
jl
negb
push
pushf
sti
push
cmpsl
adcb
insb
loop
je
arpl
fs
pop
inc
fisttps
fldenv
sub
lds
dec
rolb
sarb
xchg
or
movsb
ret
ds
mov
enter
les
int3
and
dec
ret
mov
movsb
inc
sub
push
add
adc
push
mov
mov
mov
dec
mov
lock
outsb
jmp
push
in
or
in
adc
cmp
insl
loop
pop
loop
mov
std
or
lods
daa
mov
and
aam
sub
icebp
notl
sbb
adc
add
sbb
lret
fmull
add
add
cmp
adc
notb
or
lret
inc
add
add
aaa
or
js
test
lods
clc
in
lret
lret
aam
or
mov
subl
std
insl
hlt
pop
mov
xor
push
shlb
inc
mov
out
jnp
mov
dec
roll
shll
push
xchg
mov
mov
sbb
adc
test
mov
sbb
pop
xchg
arpl
jbe
loopne
and
and
add
mov
stc
and
push
mov
js
popa
rcrb
scas
pop
test
popa
lea
repz
fxch
inc
aam
dec
jmp
mov
aas
scas
lret
stos
es
mov
bound
jg
jmp
jecxz
scas
lods
cmp
pop
leave
test
call
loope
push
lret
pop
ds
xchg
add
pop
lret
scas
pop
cwtl
flds
mov
mov
jmp
stos
xor
inc
aam
dec
leave
fiadds
mov
enter
ds
cmpsl
and
jno
addr16
pop
ds
jle
outsb
or
push
arpl
jp
in
cmp
jns
jmp
lock
mov
mov
scas
lret
pushf
adc
inc
leave
pop
cmp
sub
shlb
hlt
jp
jp
xor
outsb
sahf
adc
scas
aas
pop
test
fisubrs
mov
ljmp
adc
dec
fmuls
fsubrs
rclb
imul
dec
fmuls
fdivrs
pop
xchg
adc
adc
imulb
fwait
jbe
jns
jbe
loopne
pop
into
test
inc
and
pop
divb
jl
xlat
push
lret
mov
mov
gs
jl
rolb
shlb
jge
imul
xor
jne
jns
mov
ja
pusha
pop
repnz
leave
adc
add
or
or
sbb
lret
fsubrl
add
add
adc
adc
test
push
in
lret
lret
or
or
mov
lods
dec
ljmp
cmp
idivb
mov
cli
jnp
mov
pop
roll
rcll
or
pop
jb
sub
jecxz
out
jo
jmp
ss
pop
and
or
or
or
or
or
lret
and
sub
add
ja
xor
adc
jae
mov
in
lret
lret
mov
add
ja
or
js
bound
lret
lret
hlt
xor
adc
pusha
leave
test
and
mov
mov
js
ds
fimull
fidivrl
jp
jp
jp
ja
loope
push
sbb
inc
xlat
mov
cmpsl
sbb
test
mov
sbb
mov
and
dec
ret
mov
sarl
int3
dec
fdivrs
fdivrs
dec
adc
adc
push
shll
addr16
popa
sti
jo
xorl
cwtl
jl
movsl
xor
xor
clc
outsb
or
sub
add
mov
push
lds
iret
jnp
loope
adc
dec
xor
sbb
imul
xlat
mov
incb
mov
dec
fstpt
cmp
or
inc
daa
rclb
push
adc
popa
icebp
nop
arpl
mov
fimull
ficompl
or
inc
and
pop
rclb
mov
repnz
mov
rcrb
sub
sbb
pushf
xor
jae
xchg
add
addr16
je
lea
cmp
mov
mov
fs
popf
insb
mov
inc
fists
mov
pop
cmp
outsl
adc
or
dec
inc
int
and
pop
xor
das
dec
mov
cmc
add
xchg
add
lret
lret
jnp
mov
xchg
or
outsl
lcall
stos
int
mov
popa
icebp
nop
arpl
ja
arpl
cmc
xor
cmc
or
inc
fisttpll
out
lea
and
aam
mov
aas
hlt
es
cmp
inc
push
rolb
sarb
dec
lret
lret
mov
push
rolb
rolb
mov
dec
fnstcw
jmp
inc
int
lea
cmp
adc
aaa
or
mov
mov
adc
xor
inc
pushl
cmpl
sahf
or
cmpsb
add
dec
sub
xchg
icebp
add
lods
and
dec
fstpt
outsl
or
scas
repz
icebp
nop
arpl
dec
fdivl
in
pop
roll
aad
cli
jae
xchg
mov
mov
das
lcall
cmp
outsb
imull
je
jl
jp
in
push
stos
xor
scas
cmp
mov
inc
fdivl
in
dec
fstpt
lods
lret
inc
scas
mov
stos
mov
mov
sbb
scas
sub
je
lea
inc
int
and
es
int
and
aaa
das
movsl
xor
inc
shll
xchg
cmc
add
ret
dec
ret
subb
jp
gs
pop
pushl
xchg
ljmp
pop
leave
test
call
jbe
mov
mov
and
pusha
leave
jle
js
ljmp
xchg
and
sub
movb
ror
shlb
xchg
pusha
mov
mov
lock
ja
popf
or
push
lahf
push
push
xchg
add
sahf
jbe
xchg
add
jbe
cmpl
out
adc
cmp
pop
int
addr16
dec
into
pop
cmp
fistps
scas
pop
test
loope
adc
add
lods
cmp
cmp
test
mov
push
lds
testb
andb
loop
pop
loop
push
push
xor
addr16
adc
jge
je
sub
mov
inc
mov
aad
shlb
imul
dec
jl
jg
jmp
ret
ds
add
add
cmpsl
lods
lret
inc
scas
jp
jp
in
imul
and
pop
mov
mov
cmpsl
aaa
push
mov
icebp
add
push
aad
sub
cmp
loop
adc
or
and
lret
lret
inc
add
add
xor
adc
ds
xor
add
imul
or
js
and
or
lret
adc
add
ja
inc
or
js
jb
mov
in
lret
push
inc
or
mov
push
scas
xor
sub
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
push
add
add
cmp
adc
shrl
in
lret
add
pop
loop
adc
or
lret
lret
jo
or
in
lret
ret
dec
fstpt
sub
imul
out
jo
adc
push
fimuls
adc
jmp
enter
push
mov
cmp
push
daa
test
pop
test
inc
int3
inc
and
repz
gs
icebp
popa
icebp
nop
arpl
mov
xorl
xor
adc
xchg
adcb
sbb
adc
adc
sub
ja
xorb
jb
xchg
xor
into
pop
lret
scas
pop
mov
imul
xchg
lea
mov
loopne
lock
bound
push
mov
movsb
dec
rclb
mov
adc
jg
test
jo
xorl
mov
popf
adc
jae
outsb
or
sbb
push
xor
cwtl
decl
stc
push
cwtl
push
imul
or
mov
fwait
decb
in
sbb
hlt
gs
pushf
outsl
les
mov
dec
mov
hlt
pop
lods
aas
scas
aas
pop
test
jno
sub
test
jecxz
outsb
cld
fwait
jbe
insl
mulb
sbb
roll
sarl
push
lret
lret
jae
xchg
aam
fnstcw
push
and
mov
movl
jae
jo
xchg
pop
bound
adc
sbb
jno
jecxz
inc
enter
cmp
notl
inc
int
and
xor
lock
bound
loopne
pop
dec
add
outsl
jle
add
add
and
lret
adc
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
inc
add
add
xor
adc
cltd
xor
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
cmpsb
cmp
adc
lret
inc
iret
pop
cmp
add
out
xor
mov
xchg
aaa
pop
sbb
lods
faddl
add
add
and
lret
sub
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
add
pop
loop
adc
or
lret
lret
addb
in
lret
inc
aam
sub
dec
sub
dec
test
lods
lret
inc
imul
jl
jne
sub
test
int
into
test
xor
addr16
stc
imul
cmc
pushf
outsl
xchg
dec
das
fidivl
push
iret
pop
cmp
push
sub
push
xchg
or
push
ret
mov
cmpsl
dec
int
and
cmp
xor
jae
imul
add
push
ror
dec
fdivrl
addr16
pop
mov
adc
adc
ds
inc
mov
rcrb
xchg
addr16
stc
imul
xchg
cmc
add
pop
lret
scas
pop
in
roll
mov
jmp
adc
lods
add
pop
cmp
inc
aam
sub
push
xor
ja
mov
jle
sub
lea
lods
cmp
and
jl
jnp
in
add
xchg
sbb
dec
into
pop
cmp
pop
and
xchg
pop
xchg
adc
pushf
and
dec
fnstcw
add
inc
fcompl
test
frstor
push
cmc
add
inc
aad
dec
scas
or
dec
frstor
adc
inc
jbe
outsl
or
shrl
ficoml
lods
pop
cli
test
test
cmp
jl
inc
xlat
mov
cld
jae
xchg
and
mov
mov
in
jge
testl
sub
gs
pushf
outsl
scas
loop
out
mov
fwait
loop
adc
testb
cld
call
and
lret
and
sub
add
ja
or
cmp
ja
in
lret
lret
xchg
or
mov
shrb
mov
xchg
xor
clc
adc
testb
sbb
lret
ja
cmp
adc
imul
xor
and
or
pop
fimuls
push
push
imul
add
and
lret
and
sub
add
ja
je
adc
sbb
add
lret
sub
add
ja
push
or
js
outsl
pusha
mov
in
lret
inc
sub
or
cli
push
sbb
xchg
or
je
je
lea
call
inc
lds
iret
sbb
mov
movsb
cmp
inc
scas
sub
out
jl
notb
jno
xorb
push
lret
scas
repz
test
call
sub
cld
ja
xorb
lods
lret
inc
lock
sbb
scas
cmp
es
inc
mov
mov
mov
sbb
inc
cmc
xor
sbb
dec
fistpll
pop
aas
lret
clc
outsb
or
adc
xchg
add
lahf
punpckhdq
dec
mov
cmp
and
movsb
dec
pop
xchg
mov
aaa
cmpsl
ret
ja
add
daa
pop
adcl
out
jg
jmp
call
mov
cmp
movsl
xor
jg
mov
pop
cwtl
push
imul
cmp
push
mov
or
xor
pop
out
jnp
js
ljmp
ret
push
lods
sbb
out
jg
jmp
dec
mov
je
addr16
jno
jecxz
addr16
insb
or
out
adc
sbb
or
inc
ror
fdivrs
mov
sbb
cld
jl
jne
insb
cmp
and
inc
and
and
adcb
adcb
int3
stos
xchg
mov
cltd
clc
or
or
orb
cli
or
iret
inc
aad
dec
test
or
push
scas
or
stos
stos
outsl
aaa
mov
dec
mov
dec
mov
repnz
pop
mov
shll
push
adc
lret
add
add
add
add
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
adc
add
ja
inc
or
js
gs
add
lret
lret
push
add
add
dec
or
js
clc
aad
in
lret
lret
jbe
add
ja
cmp
adc
rol
in
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
inc
dec
or
in
lret
pop
fisttpl
ss
sbb
cld
call
and
lret
and
scas
add
add
inc
or
js
aam
lret
out
or
mov
and
jns
xchg
cmc
add
icebp
jns
mov
sbb
add
test
jge
push
sbb
pop
mov
dec
rclb
adc
vcvtph2ps
or
sbb
lret
xor
sub
add
ja
inc
or
js
dec
jmp
mov
lret
lret
enter
mov
es
iret
pop
cmp
jo
or
stos
cmp
add
sbbb
xchg
add
std
or
xor
xchg
add
and
and
les
stos
movsw
outsb
sti
imul
sbb
jo
loop
lods
cmp
sahf
or
cmpsb
and
or
jle
xlat
inc
and
push
mov
leave
adc
or
je
dec
fidivrs
hlt
xchg
outsb
nop
movsl
and
ret
ret
xchg
or
je
arpl
xchg
gs
push
fstpt
push
fimuls
add
lods
cmp
and
push
xor
sbb
inc
and
sbb
fstpt
sahf
or
cmpsb
adc
xchg
add
cmp
jns
jmp
std
insb
loop
je
xor
lret
pop
repnz
fs
push
pushf
sti
push
mov
mov
cwtl
imul
aam
mov
xchg
jl
mov
mov
rorl
add
sahf
sbb
add
cmp
dec
fnsave
sbb
xor
pop
scas
sub
lcall
notb
out
jno
imul
adc
sbb
loop
pop
loop
in
jecxz
jne
push
fimuls
adc
cmp
xorl
dec
mov
jns
jmp
pop
xchg
add
and
sub
sub
jne
push
rcll
jo
lea
push
ret
cmpsb
push
in
dec
fdivrl
in
mov
push
scas
dec
call
lcall
jp
jp
in
imul
adc
push
rolb
sarb
add
movl
repz
cmc
or
xchg
ja
xor
adc
inc
or
mov
adc
push
xchg
jp
mov
inc
mov
or
adc
mov
loope
adc
add
add
jo
scas
aas
pop
test
imul
fisttpll
out
inc
iret
pop
cmp
jo
dec
frstor
sub
jno
cs
mov
stos
inc
shll
aam
mov
push
mov
daa
inc
mov
scas
cmp
mov
inc
mov
cli
lock
bound
insb
test
inc
es
mov
mov
sbb
sbb
and
jb
in
out
outsb
cld
fwait
jbe
out
outsb
cld
fwait
jbe
and
pop
push
aad
sub
or
ja
xorb
aam
sub
mov
aaa
cmpsl
ret
xor
stos
and
sub
inc
and
or
xchg
test
or
adc
mov
jns
and
scas
jmp
shl
jbe
cmpl
fs
popf
insb
lds
mov
and
pop
enter
stos
aaa
cmpsl
ret
xchg
setg
or
lods
cmp
leave
pop
cmp
dec
flds
mov
leave
jb
add
cmp
je
lea
insb
loop
je
repz
xchg
fstps
xchg
addr16
cs
aas
pop
test
pop
mov
fstpl
test
popa
add
add
fdivrp
jnp
mov
jge
push
cld
por
sahf
insl
int3
mov
shlb
clc
lahf
push
dec
fdivrs
lods
lret
inc
lock
adcb
out
mov
jne
cmp
sbb
jle
call
fs
and
adc
dec
push
nop
ja
inc
or
mov
inc
or
mov
pop
fwait
ljmp
stc
in
dec
fidivrs
push
xor
cld
fwait
jbe
das
mov
inc
mov
and
fs
sti
sahf
insl
cmp
out
mov
sub
push
nop
push
popa
nop
outsb
fistpl
fs
sahf
or
cmpsb
push
divb
xorb
cli
push
lods
lret
inc
movsb
popf
sbb
push
xchg
repz
std
std
jno
xorb
adcl
jnp
mov
push
xchg
add
ss
std
insl
hlt
pop
mov
jl
jne
sub
in
adc
arpl
imul
dec
out
out
jo
or
mov
dec
mov
mov
addr16
sbb
add
mov
and
dec
sub
pop
adc
icebp
jno
xorb
cmp
push
shlb
inc
mov
dec
mov
insl
pushf
dec
jb
fs
or
pop
and
cmp
lcall
dec
jp
pusha
pop
repnz
and
inc
cmp
push
call
mov
rolb
xor
jge
je
xor
xchg
js
jle
call
shll
mov
mov
inc
mov
pop
leave
pop
cmp
pusha
jae
jne
out
pop
into
pop
leave
test
push
roll
aad
icebp
push
lahf
push
lds
xchg
mov
les
psubd
adcl
test
fs
add
sbb
jmp
fs
cmpsl
cmpsb
daa
mov
and
dec
leave
pop
cmp
cmp
aas
scas
lret
loope
stc
cwtl
imul
insb
ja
inc
or
mov
inc
or
mov
and
lret
mov
cmpsb
adc
sub
push
dec
ret
ret
imul
dec
ret
repz
test
dec
frstor
stos
data16
jp
jns
jmp
fimuls
mov
adc
sub
xchg
mov
in
out
jno
jnp
ja
loope
aam
frstor
pusha
xchg
jnp
xor
inc
aam
dec
leave
xor
test
loopne
jge
je
insl
fstps
stos
pop
and
pop
fmuls
fsubs
jnp
xchg
cmc
add
rclb
pop
test
jle
fcoml
mov
imul
loope
jae
lret
mov
mov
aad
sub
jp
std
insl
hlt
pop
roll
aam
mov
dec
mov
adc
pop
pop
lret
lret
add
sbb
inc
mov
icebp
std
push
lahf
push
mov
mov
test
jge
sub
out
mov
imulb
fwait
jbe
sbb
adc
sbb
or
xchg
adc
popa
icebp
nop
arpl
mov
stos
sub
mov
js
insb
xchg
adc
in
sbb
push
roll
roll
mov
mov
push
shlb
lahf
push
lods
and
add
ja
pusha
notb
jnp
in
dec
inc
int
and
add
push
lahf
push
sub
inc
add
add
adc
lret
adc
add
add
add
sbb
push
add
add
dec
or
js
hlt
xor
in
lret
insb
inc
or
mov
xor
jo
aaa
mov
mov
and
dec
mov
icebp
add
lahf
sub
je
lea
cmp
and
jmp
mov
push
lds
jo
imul
adc
push
and
adc
mov
push
rolb
sarb
rcll
mov
adc
popa
mov
aad
adc
pop
iret
stos
pop
xchg
rcrb
scas
pop
mov
sti
imul
or
pop
cmp
xor
loop
imul
pop
loop
ficoml
pop
sti
mov
fwait
decb
lcall
lret
outsb
scas
inc
shll
punpckhdq
testb
pop
cmc
outsl
ljmp
stc
mov
jge
je
sub
push
shlb
xor
bound
push
cld
aas
flds
mov
mov
xor
dec
rolb
sarb
push
iret
pop
cmp
push
inc
fisttps
fldenv
push
les
dec
sub
mov
xor
dec
das
scas
cmp
mov
mov
aad
rolb
rolb
mov
xor
sub
and
sub
ret
dec
fnstcw
aad
dec
mov
sub
add
adc
mov
out
jo
xlat
dec
fstpt
jo
loop
imul
mulb
pushf
outsl
les
movsb
cmp
sbb
pop
hlt
mov
popf
call
and
mov
movsb
cmp
fisttpll
mov
xor
cld
call
and
lret
and
xor
add
ja
dec
or
js
push
ffree
and
lret
lret
or
adc
fwait
jno
lea
dec
fidivrs
and
mov
mov
cwtl
decl
loop
xchg
mov
inc
mov
mov
cs
pushf
sbb
cltd
or
jno
imul
mov
in
fs
popf
insb
mov
scas
aas
pop
test
insb
lahf
cmp
pop
int3
stos
data16
notl
ljmp
mov
gs
and
xchg
das
mov
inc
aam
sub
insl
hlt
pop
mov
jmp
push
in
inc
outsl
stc
imul
adc
and
cs
push
mov
es
test
mov
test
pop
test
xchg
or
adc
add
cld
xchg
cmc
add
cld
jl
jne
insb
mov
stos
into
cmp
mov
shll
cmp
and
ret
push
lds
and
xor
sub
jbe
cmpl
cmp
and
hlt
push
cld
sub
repz
lahf
cli
or
lret
jg
fmuls
fdivs
movsb
ret
ds
mov
cltd
xchg
or
dec
fidivrs
and
add
stos
cmp
or
cmp
mov
fisttpl
xchg
add
sahf
je
sbb
aad
int3
pop
lahf
punpckhdq
icebp
add
mov
pop
repnz
outsb
cld
fwait
jbe
jl
xchg
testb
mov
scas
pop
mov
dec
frstor
scas
pop
mov
jmp
push
in
sbb
jo
loop
popa
out
jg
jmp
out
sbb
jmp
adcl
adc
daa
add
decb
enter
aas
sub
jmp
mov
mov
call
add
popl
add
lcall
out
jl
negb
mov
jmp
jecxz
loope
jae
jb
dec
loop
movzbl
inc
mov
mov
jmp
sbb
add
add
jmp
movsl
xor
movsl
xor
xor
roll
add
add
aam
add
push
cwtl
push
imul
int3
popf
arpl
popa
add
inc
hlt
jmp
lds
cmpsl
push
sti
jne
xchg
xchg
pop
mov
int3
popf
cmp
pop
jmp
sbb
push
jns
aas
ret
cmp
add
lds
jmp
mov
jmp
call
jmp
mov
mov
cs
mov
das
mov
jmp
int3
popf
cmovs
jmp
lea
or
jl
add
jmp
inc
mov
inc
lahf
add
in
pushf
jmp
int3
adc
inc
add
push
add
add
call
jmp
sti
lock
bound
add
int3
popf
jmp
jae
arpl
cmc
je
test
inc
add
shl
std
test
je
sbb
add
add
jmp
sbb
mov
push
jmp
das
or
mov
pushf
popl
jmp
nop
adc
or
jmp
sbb
ds
xlat
push
les
mov
inc
add
add
mov
sbb
xchg
sbb
push
mov
mov
add
mov
jmp
xchg
adc
in
sbb
daa
mov
inc
mov
xor
popl
xchg
pop
mov
mov
sub
ror
jmp
mov
xchg
repnz
jg
addr16
pop
mov
loopne
and
adc
adc
sub
jmp
enter
dec
mov
jns
jmp
stos
aas
scas
lret
ret
mov
mov
not
not
sub
jmp
cltd
or
jno
xorb
outsb
cld
fwait
jbe
pop
lret
lret
mov
jmp
outsl
xchg
sbb
ss
rol
jmp
pushf
jmp
es
inc
mov
push
lds
iret
jp
sub
xchg
or
pop
popl
jmp
sbb
adc
xchg
mov
cmp
rcrb
popl
jmp
pop
lahf
punpckhdq
and
scas
and
push
sub
lcall
pop
xchg
mov
add
add
mov
gs
pop
popf
push
mov
es
xchg
adc
add
dec
ja
push
or
ja
jmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
pop
or
js
and
ja
lret
lret
outsb
push
or
mov
dec
lods
enter
push
test
and
add
jmp
pop
fisttpl
fnstsw
add
call
jecxz
cmc
pushf
outsl
cwtl
lret
movsb
push
mov
jbe
ss
push
lds
movsb
or
sub
mov
jmp
loope
pushaw
push
call
mov
into
pushf
or
gs
pushf
jmp
mov
xchg
icebp
add
or
jmp
int3
popf
mov
mov
push
test
push
mov
add
add
mov
pop
fisttpl
fisttpll
ficoml
mov
mov
mov
incb
add
mov
das
ret
push
lds
movsb
cmp
add
sbb
or
or
or
or
adc
or
cmp
add
ja
push
or
js
inc
scas
stos
aam
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
cmpsl
orb
in
lret
std
mov
push
bound
jmp
sub
dec
add
add
push
or
js
adc
add
lret
sub
add
ja
push
or
js
jbe
lock
lret
aaa
outsb
or
mov
pusha
mov
mov
jmp
std
jae
xchg
sahf
or
jmp
xor
bound
sahf
mov
jmp
jl
jns
jmp
adc
jge
jle
call
outsb
jmp
lods
movsb
ret
ds
lcall
mov
inc
fdivl
in
aad
and
rclb
into
xchg
popf
pushl
mov
jmp
addr16
inc
adc
mov
pop
clc
mov
jmp
lods
cmp
add
jmp
xchg
push
pushf
sti
push
xchg
add
ss
mov
cmpl
les
xchg
ljmp
in
lods
cmp
jmp
push
fisttpl
fnstsw
jg
mov
cltd
clc
or
adc
and
xor
sar
das
jmp
jge
rolb
add
jmp
mov
out
decl
loope
movsl
xor
mov
jle
js
popf
or
pop
xor
dec
jmp
icebp
nop
arpl
inc
mov
mov
add
add
push
push
test
call
test
cli
call
lock
jo
mov
and
cmp
jmp
inc
lods
ss
jmp
mov
add
add
adcl
hlt
push
cld
pop
pop
leave
pop
cmp
jg
mov
inc
mov
mov
lea
jmp
loop
jmp
out
in
jle
fisttps
mov
cltd
clc
or
mov
push
ja
jmp
cld
call
and
lret
and
sub
add
ja
dec
or
js
gs
mov
lret
push
or
mov
jl
pushl
pushf
pop
roll
aad
inc
fisttps
fldenv
dec
enter
xor
clc
adc
testb
sbb
lret
fsubrl
add
add
push
or
js
push
dec
jns
lret
lret
lret
adc
mov
jmp
sbb
pop
mov
jmp
nop
or
in
jge
negl
pop
les
int3
and
test
inc
mov
lea
push
mov
call
mov
jmp
push
adcb
addb
mov
push
inc
and
pop
ret
push
subb
jmp
mov
add
add
inc
xlat
mov
cmpsl
sbb
ficomps
xchg
subb
es
loop
adc
add
sbb
lret
lret
inc
add
add
ja
adc
inc
aaa
dec
dec
in
lret
lret
push
add
add
jae
adc
repnz
mov
in
lret
lret
data16
adc
sbb
jge
jmp
stos
sub
lds
bnd
mov
push
inc
and
sub
adcl
test
je
add
mov
jmp
jmp
stc
jno
xorb
les
int3
cs
insb
in
xor
jmp
popa
lea
xchg
pop
add
adc
ds
dec
mov
mov
mov
sbb
adc
xor
add
add
add
and
lret
faddl
add
ja
push
or
js
sbb
add
lret
call
and
test
mov
arpl
insl
std
test
sub
push
lret
pop
ds
call
leave
das
rcll
jmp
jg
jl
negb
jg
mov
scas
aas
scas
lret
fldl
cld
je
push
push
mov
test
je
cmp
jb
cmp
jmp
jne
ja
loope
push
cltd
or
ds
test
jmp
in
inc
out
or
add
sub
add
clc
outsb
or
cmp
jb
xchg
push
leave
pop
cmp
and
xchg
cmc
add
iret
cmp
decl
push
pop
jmp
call
cli
decl
fwait
sub
and
ss
dec
fstpt
pop
cmp
adc
add
add
and
lret
and
ja
adc
and
push
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fcoml
add
ja
pop
or
js
rcll
xchg
in
lret
lret
push
jge
adc
xor
push
xor
jg
rolb
sarb
adc
sbb
push
push
xor
js
into
pop
cmp
jno
jo
xorl
xor
aam
iret
lret
mov
loopne
jb
dec
rolb
rclb
stos
cmp
bound
das
lods
cmp
fs
popf
insb
mov
mov
sbb
nop
adc
in
sbb
jp
jp
jmp
xchg
data16
cmc
adc
cltd
adc
cmc
gs
pop
lret
mov
and
shl
outsl
lcall
lcall
aaa
push
mov
icebp
add
iret
fs
or
std
insl
hlt
pop
lods
sbb
add
sbb
dec
xchg
push
pushf
sti
push
hlt
test
aad
into
jg
je
out
push
dec
rolb
rclb
les
int3
dec
in
cmc
pushf
outsl
movsb
je
gs
adc
xor
cmpsl
es
cs
addl
sub
sbb
push
imul
xchg
add
popa
xchg
sbb
aad
mov
fcomps
out
ds
inc
mov
xchg
sbb
aad
lock
inc
mov
addb
cmp
cmp
mov
es
mov
aad
xchg
push
rcll
push
push
mov
lods
add
cmpsb
xor
scas
sbb
jae
xchg
jecxz
out
mov
gs
insb
or
in
mov
mov
rol
stc
mov
rolb
inc
test
mov
jmp
sbb
dec
ds
mov
cmpsl
ret
dec
xor
loop
adc
testb
cld
call
and
lret
and
sub
add
ja
inc
or
js
inc
or
in
lret
and
adc
jne
cmp
xor
inc
shll
xor
push
stos
enter
add
ret
mov
push
push
mov
jmp
xor
dec
rcll
and
pop
out
fbld
add
jmp
dec
rcll
data16
add
add
insb
loop
je
ljmp
jle
mov
je
jmp
xchg
push
call
jmp
lret
pop
iret
stos
pop
sarl
jg
jmp
push
std
dec
into
inc
xchg
out
mov
add
jmp
daa
mov
inc
mov
cmp
js
roll
aad
pop
je
jmp
xor
push
xor
imul
cmp
mov
in
jmp
sub
mov
and
pop
aas
lret
pushf
xor
and
jge
jmp
cmp
cld
cmp
jge
jmp
mov
stos
xchg
adc
lcall
or
sbb
mov
jmp
fmulp
cmpl
jmp
lods
sub
push
mov
cli
popf
insb
cltd
sub
test
jmp
or
mov
add
adc
or
sahf
push
test
push
cli
gs
bound
dec
loop
adc
add
sub
lret
lret
cmp
add
ja
push
or
js
mov
lret
lret
test
jo
insb
or
mov
push
push
jmp
mov
in
call
jmp
pop
aad
sub
or
mov
clc
jmp
lcall
add
ret
push
mov
cs
mov
add
test
decl
add
jmp
lock
notb
lcall
lods
cmpsl
movsb
ret
ds
push
mov
shr
mov
cltd
mov
jmp
mov
aad
lea
mov
gs
and
jbe
cmpl
loop
xor
loop
loop
adc
or
sbb
lret
faddl
add
ja
arpl
adc
lret
lret
inc
popa
or
mov
jmp
jmp
out
jno
push
iret
pop
cmp
xor
xchg
js
cmp
jb
sbb
sbb
or
or
or
or
adc
or
sub
add
ja
pop
or
js
rorb
or
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
lret
add
add
add
lret
jb
or
in
lret
adc
insl
cli
add
jmp
mov
jmp
pop
push
xor
daa
adc
imul
fdivp
pushl
jmp
call
jmp
leave
dec
fnstcw
ljmp
shll
enter
xchg
hlt
add
jmp
mov
jmp
adc
or
jle
lret
lret
push
lahf
push
and
ss
mov
sarb
loopne
incl
add
lods
jmp
and
jmp
out
push
lahf
push
fcoml
mov
outsb
or
sbb
adc
add
mov
add
lea
test
jne
jmp
pop
aad
sub
cmp
outsl
js
jmp
jge
jmp
pop
xchg
pop
bound
cld
psubusw
bound
pop
jmp
mov
repnz
adc
cmp
fs
push
iret
cmp
push
pushl
mov
push
push
call
jmp
test
in
sbb
nop
pop
xchg
repnz
cld
dec
leave
jmp
out
jg
cli
insb
loop
je
std
push
lahf
push
scas
cmp
mov
pop
flds
clc
jmp
xchg
aad
out
sub
ret
add
ret
jmp
stos
xor
push
xor
es
mov
outsb
and
loop
pushf
jmp
pop
jmp
movsl
cmp
jne
mov
sub
pop
insb
out
aad
std
loop
loop
adc
or
sbb
lret
fsubrl
add
add
pop
or
js
and
cli
in
lret
lret
push
or
mov
or
arpl
jo
loop
fsubs
mov
jmp
jg
daa
mov
icebp
jnp
mov
loopne
add
mov
jmp
popf
sbb
xchg
add
v4fnmaddps
xchg
sbb
loopne
pushl
mov
jmp
movsb
xor
popa
jmp
fimull
add
xor
mov
jns
das
ret
dec
ret
xor
call
imul
jmp
arpl
jl
notb
sbb
and
mov
sub
jmp
outsb
insb
or
mov
lahf
punpckhdq
jmp
call
xchg
sar
inc
adc
mov
roll
add
jmp
and
push
insl
hlt
pop
mov
fistpl
sub
adc
jmp
sub
add
xchg
jmp
stos
xor
fisttps
add
pop
add
add
out
mov
rorb
add
add
gs
pushf
outsl
ljmp
mov
scas
sub
hlt
adc
testb
sbb
lret
fsubrl
add
add
pop
or
js
fldcw
cmp
lret
mov
or
mov
sbb
or
mov
or
mov
cmpsb
outsl
mov
lahf
cli
or
mov
shlb
cmp
dec
mov
adc
testb
sbb
lret
fmull
add
add
popa
or
js
cmc
push
xchg
mov
lret
lret
mov
rclb
mov
xchg
repnz
and
push
add
jmp
pop
fimuls
adc
sub
jmp
mov
fcoms
cmpsl
push
mov
jae
or
sbb
push
outsl
icebp
dec
pusha
or
in
jmp
test
mov
and
xor
les
mov
fdivrs
lea
jmp
xchg
pop
xor
adcl
loope
mov
hlt
inc
mov
lea
jmp
jp
jns
jmp
and
cmp
test
out
clc
pop
and
push
je
popa
mov
jmp
test
mov
call
mov
mov
jmp
inc
imul
leave
jmp
dec
fimull
fidivrl
mov
sbb
add
dec
inc
mov
shlb
jle
lea
jmp
jmp
mov
mov
inc
aad
dec
lret
scas
leave
cmp
mov
pop
jmp
push
jmp
xor
dec
lret
lret
in
jge
negl
insb
mov
out
shr
add
add
adcb
cmpb
jmp
bnd
mov
cwtl
sbb
aad
shr
push
lahf
push
jg
imul
or
leave
push
stos
xor
nop
sbb
push
jmp
inc
jmp
out
mov
jmp
stos
and
xor
clc
outsb
or
sub
cmp
mov
jmp
jb
insb
or
les
adc
dec
dec
es
jmp
pushf
push
pushf
sti
push
mov
ljmp
call
push
sub
sub
add
or
or
or
add
add
add
add
add
add
or
add
lret
sub
sub
add
ja
outsb
or
js
inc
mov
add
lret
lret
adc
out
test
clc
or
adcb
clc
jb
jmp
std
imul
iret
pop
cmp
jle
pop
lret
scas
pop
in
pop
iret
pop
cmp
jo
pop
lea
shr
movl
jmp
xchg
sub
fwait
add
add
test
jge
dec
xor
cmp
xlat
inc
and
xor
add
jmp
cmpsb
cmp
lds
insb
pop
jmp
arpl
cwtl
inc
jmp
jmp
xchg
popa
call
and
inc
xchg
pop
jmp
fs
ret
jmp
add
xchg
add
add
inc
shlb
lods
mov
lods
sbb
cmp
cwtl
mov
movzwl
mov
and
mov
jmp
je
jne
jmp
rolb
dec
mov
ljmp
stc
shlb
insl
std
test
mov
cld
jmp
mov
xchg
icebp
add
in
data16
xchg
outsb
mov
testl
mov
jmp
dec
frstor
or
push
jno
push
cmp
pop
imulb
add
jmp
mov
inc
hlt
jmp
sub
cmp
jb
xchg
add
jo
xchg
loop
adc
add
adc
lret
sub
lret
adc
jno
add
ja
pop
or
js
jp
mov
in
lret
sub
add
ja
popa
or
js
mov
lret
lret
cltd
popa
or
mov
mov
push
std
dec
and
sub
adc
cmc
inc
cmp
jmp
dec
jne
jmp
mov
andb
jle
jns
jmp
stos
xor
int3
outsb
add
cmp
jne
mov
jmp
sbb
insb
in
adc
outsb
dec
pop
cmp
jge
add
cld
jb
inc
and
jmp
fildl
mov
stos
in
call
fisttps
fldenv
cmp
in
mov
jmp
data16
xchg
outsb
xchg
ja
xorb
mov
outsb
call
jb
jae
jmp
inc
push
xor
sbb
fnstcw
mov
mov
cmpsb
sub
lds
scas
and
sub
and
and
inc
jae
mov
int3
hlt
add
jmp
aas
mov
inc
mov
and
pushl
jmp
pusha
jmp
pop
mov
jns
pop
fstl
mov
mov
and
jmp
push
jb
jmp
sub
lods
cltd
mov
jmp
lods
cmp
push
les
int3
jge
dec
inc
xor
mov
mov
andb
sub
jmp
addl
jmp
jp
jns
jmp
mov
sbb
jmp
sbb
sbb
and
adcl
xchg
add
sbb
fucom
adc
add
sbb
lret
adc
sub
add
ja
popa
or
js
daa
add
jl
lret
lret
pop
push
adc
pop
call
jns
sub
cld
lock
in
pop
pop
pop
mov
ret
jmp
xchg
pusha
out
icebp
popa
add
cmp
mov
inc
mov
rclb
mov
loop
adc
add
sbb
lret
adc
sub
add
ja
or
js
cmpsl
ret
in
lret
lret
mov
pop
fstpt
xchg
pop
nop
push
popa
nop
inc
mov
decl
push
add
add
jae
in
jo
imul
adc
imul
popl
jmp
lss
adc
sbb
pop
aad
sub
cmp
pop
iret
stos
pop
xchg
sti
jnp
mov
mov
test
jmp
rolb
add
jmp
dec
rcll
adc
mov
lods
ret
jmp
push
jmp
pop
jmp
jo
xchg
testb
push
loop
lock
lret
pop
lret
psubsw
test
jmp
sub
jmp
rcr
dec
fdivrl
mov
jmp
cmpl
popa
xor
add
add
jnp
ljmp
std
push
lods
movsb
ret
ds
mov
into
les
mov
xor
test
jmp
cltd
push
aad
jmp
cmp
sub
cwtl
pop
xchg
repnz
movsb
cmp
xchg
xor
fldl
mov
lds
push
push
mov
stc
cwtl
imul
std
decl
add
jne
jmp
jp
lock
push
lea
push
cmp
jae
mov
add
cmp
jmp
add
imul
mov
mov
mov
xor
add
jmp
add
xlat
push
shlb
push
dec
sbbl
inc
dec
fdivrs
mov
sbb
cli
jb
xchg
je
xchg
testb
and
call
add
add
sbb
lret
adc
add
add
add
lret
and
inc
add
add
or
js
adc
je
lret
lret
push
or
mov
mov
mov
out
jmp
cli
popf
insb
mov
nop
push
sub
pop
clc
push
lahf
push
movsl
js
test
add
add
sbb
lret
fdivl
add
add
imul
faddl
in
lret
mov
mov
mov
and
xchg
pop
jmp
mov
fmull
ret
std
mov
test
lock
lret
push
adcb
xorb
xor
jmp
add
jmp
in
pushf
jmp
lret
pop
repnz
fs
icebp
popa
add
inc
cmc
sub
jmp
pop
inc
push
dec
xlat
pusha
jmp
loopne
jmp
jge
add
mov
into
fidivrs
leave
sbb
cmp
jb
jmp
jmp
sub
les
xchg
mov
popf
or
add
pop
jo
shrb
xchg
popf
pushl
mov
jmp
in
popa
jmp
jo
jmp
xchg
pop
xchg
adc
test
ret
xchg
cmc
add
test
int
mov
mov
mov
andb
sub
jmp
pop
fimull
fisubl
xchg
mov
adc
in
sbb
push
roll
sarl
ds
pop
mov
ret
fcoms
cmpsl
push
mov
or
out
gs
pushf
outsl
mov
mov
inc
mov
inc
nop
mov
jmp
mov
jmp
les
mov
in
jle
adc
push
imul
adc
testb
add
adc
sub
add
ja
push
adc
or
in
lret
lret
lock
or
mov
flds
test
imul
insl
ret
mov
jmp
movzbl
jmp
mov
xorl
nop
push
xchg
repz
mov
cld
popa
sub
xor
add
add
add
add
add
add
lret
add
lret
add
popl
lret
lret
sub
sub
mov
fcoml
jecxz
in
lret
lret
inc
jb
adc
popa
dec
out
add
add
test
mov
jmp
popl
jmp
in
loope
jae
inc
roll
shll
jns
mov
xchg
sub
and
decl
fadds
jmp
and
jmp
or
add
insb
or
in
cmp
enter
pop
flds
jmp
xor
jmp
pop
jmp
dec
jmp
mov
in
sbb
les
mov
xchg
dec
fdivrs
out
call
adc
incl
add
mov
jmp
inc
or
test
jmp
pushf
jbe
jmp
ret
inc
shll
mov
movsl
cltd
sbb
jecxz
cli
popf
insb
mov
xor
jmp
std
jg
mov
je
addr16
pop
out
jecxz
jne
dec
rclb
and
mov
sub
push
push
push
test
je
jmp
xor
cmp
jmp
sbb
or
js
popf
or
jb
xchg
outsb
add
xchg
mov
jmp
and
daa
test
push
pop
and
fadds
add
jae
insb
or
mov
dec
cli
xlat
inc
fidivrl
dec
sub
imul
js
icebp
mov
test
je
cmp
jmp
ljmp
fwait
jbe
imul
adc
adc
sub
or
inc
adc
shr
push
cwtl
das
cmc
gs
pop
cli
pusha
notb
inc
daa
shlb
push
add
jmp
mov
lods
sbbl
out
sbb
push
lret
lret
or
loop
adc
add
sub
lret
lret
push
add
add
orb
js
hlt
push
mov
in
lret
lret
cmpsl
pop
or
mov
mov
lahf
jb
mov
add
cmp
jae
sub
mov
lea
mov
jmp
push
sub
enter
cld
jmp
outsl
cmp
jmp
push
pushf
xor
insl
pop
fisttps
cmp
xchg
mov
jmp
imul
test
lret
mov
cmpsl
ret
mov
fldcw
add
jmp
add
jmp
adc
orb
decl
stc
sti
jo
xorl
fnstsw
push
loop
adc
or
sbb
lret
lret
sub
add
ja
or
js
lods
mov
jb
lret
lret
or
mov
fsubrl
jae
xchg
testb
cld
jmp
jge
movsl
loop
xchg
mov
jmp
movsb
sub
lock
bound
mov
xchg
add
daa
leave
jbe
jmp
mov
mov
jmp
adc
push
mov
cmp
jb
jmp
jmp
aad
cmpsb
mov
mov
jmp
mov
mov
sbb
xorb
in
bound
cmp
dec
jmp
and
stos
cmp
mov
in
xor
ss
mov
das
arpl
add
add
call
test
je
incl
jmp
cmp
add
dec
roll
shll
scas
ret
call
mov
or
or
clc
jmp
int3
jae
jmp
cmp
fiaddl
add
jmp
test
aad
into
jne
bound
xchg
lock
and
add
add
push
shlb
mov
push
add
xor
or
add
add
sbb
lret
sub
or
or
or
or
lret
or
or
or
sbb
lret
faddl
add
ja
insb
or
js
mov
lret
lret
lock
adc
stos
sbb
lcall
test
call
sbb
fcoms
inc
and
das
lds
mov
xchg
ficomps
scas
pop
scas
rol
test
add
inc
cmp
jmp
int3
dec
fistpll
or
outsl
ret
mov
xchg
mov
test
je
mov
sub
push
mov
lea
jmp
mov
scas
lret
mov
ficoml
mov
or
push
adc
jmp
ja
mov
in
jmp
push
in
sub
xchg
jg
push
jmp
mov
jmp
ret
push
mov
sub
outsl
cmpsl
xor
push
mov
add
cmp
jae
mov
call
jmp
inc
jmp
fisttps
mov
lcall
insl
pushf
xor
pop
rcrb
into
mov
jmp
push
jmp
mulb
nop
arpl
mov
jecxz
lods
and
push
lret
cmpsl
push
mov
adc
jmp
xchg
mov
es
jle
jbe
loopne
xor
xlat
push
lcall
fmuls
jmp
push
test
jge
inc
mov
cwtl
decl
loop
rcrb
pop
jmp
cwtl
sbb
repnz
pop
repnz
into
dec
fidivrs
or
dec
dec
int
test
call
push
jmp
aam
push
ret
call
jmp
sbb
ss
jmp
rcrb
scas
pop
mov
push
push
fwait
or
jns
xchg
fucomip
mov
sub
or
or
or
sbb
lret
adc
testb
add
or
or
or
lret
add
lret
add
or
lret
lret
sub
sub
add
ja
outsb
or
js
out
insb
fsubr
in
lret
lret
inc
jo
adc
inc
jmp
icebp
jg
mov
leave
inc
mov
mov
or
pop
xchg
adc
dec
loope
add
add
lret
add
xor
adc
xor
inc
add
add
jo
adc
dec
jb
loop
lret
lret
cli
jbe
adc
out
int
xor
or
jmp
add
sub
jae
inc
and
ja
and
pushl
xchg
mov
cmp
fimuls
mov
add
pop
jbe
jo
loop
lcall
add
add
lret
sub
sub
add
ja
jb
adc
fldenv
add
lret
test
or
mov
pushl
mov
dec
sub
sbb
lods
and
push
sbb
lcall
call
jmp
pop
les
int3
and
and
pop
cwtl
push
imul
notl
mov
xchg
repz
out
fisttpl
fnsave
pop
pop
pop
xchg
popa
or
mov
ja
adc
add
add
mov
decl
push
pusha
mov
mov
mov
jmp
push
aad
sub
cmp
push
shlb
fildll
std
js
and
xchg
xor
add
rcll
lods
pop
test
ljmp
stc
out
dec
push
xor
cmp
dec
mov
and
popf
pushl
jmp
negb
repnz
pop
incb
dec
jae
mov
mov
jmp
cmp
jmp
and
push
lret
mov
cmpsb
insb
jmp
push
in
sbb
sahf
mov
add
add
and
lret
ja
push
or
mov
ret
cmpsl
mov
add
ret
fdivrl
push
imul
rclb
jbe
mov
ret
loop
out
jno
test
in
sbb
cs
rolb
dec
std
pop
out
jne
jmp
dec
sub
lds
mov
mov
cs
push
lds
faddl
add
and
lret
and
adc
add
ja
je
adc
mov
enter
add
lret
inc
inc
or
mov
sub
and
push
xor
mov
sbb
jb
test
or
jmp
rolb
add
jmp
cmpsl
aas
scas
lret
push
or
add
add
lea
jmp
mov
test
popa
cmpsb
mov
stos
push
ds
jmp
jmp
stc
cwtl
imul
push
cmp
out
push
adc
jmp
push
call
stc
adcl
test
mov
mov
shlb
sub
add
add
mov
movzbl
add
jmp
dec
in
fcompl
inc
or
orl
xor
mov
xchg
sbb
rcrb
movsb
sub
out
jl
mulb
mov
std
or
jp
mov
push
pushf
jmp
mov
or
sub
jmp
mov
xchg
jmp
jno
xorb
pop
xchg
adc
xchg
cmp
insb
loop
je
or
fwait
push
call
sbb
jmp
sbb
inc
inc
and
outsl
push
lret
pop
ds
cli
outsb
cld
fwait
jbe
scas
shrl
ret
push
call
fimuls
mov
inc
sub
push
add
pusha
jmp
inc
fdivl
in
into
push
les
add
jl
ljmp
stc
adcb
pushl
mov
jmp
inc
fdivl
in
mov
out
adc
adcl
mov
jmp
std
jl
jne
popa
in
icebp
nop
arpl
addr16
outsb
cld
fwait
jbe
ljmp
add
add
hlt
adc
testb
sbb
lret
popa
lret
hlt
adc
or
sbb
lret
fsubrl
add
add
jnp
adc
in
imulb
in
lret
lret
cmp
adc
or
lock
testb
sbb
lret
lret
jg
add
ja
jns
adc
add
mov
in
lret
sub
add
ja
jae
adc
bound
in
push
in
lret
lret
sbb
or
mov
mov
mov
sub
xor
sbb
lret
lret
sub
add
ja
sub
fsubrs
ljmp
or
pop
or
mov
and
int3
sub
push
cmp
adc
cmpl
inc
adc
in
inc
jle
ret
jmp
addl
jmp
popf
adc
stos
cmp
push
mov
jmp
xor
jne
jmp
dec
push
xor
push
pop
stos
lods
cmp
int
repz
gs
inc
lods
mov
mov
andb
sub
jo
mov
jmp
je
popa
mov
jmp
inc
inc
and
ja
or
sbb
jo
xorl
pop
imul
jle
mov
out
mov
and
popf
sbb
lods
xor
pop
jmp
dec
inc
and
sbb
mov
mov
add
cmp
jmp
inc
fmuls
fdivrs
test
cmpsb
shll
or
jl
jo
loop
add
sbb
lret
mov
add
push
xchg
add
jle
mov
xor
pop
xor
dec
push
mov
js
popa
mov
scas
lret
jle
imul
sbb
adc
leave
mov
popl
lea
push
call
sbbl
jl
push
adc
jl
jne
sub
push
mov
es
xchg
add
int
and
add
imul
inc
shll
out
jo
cmp
push
rclb
jno
test
cwtl
push
pushf
sti
push
cmpsl
sbb
roll
mov
jbe
loopne
stc
popa
icebp
nop
arpl
aam
outsb
mulb
adc
lods
and
pop
sub
ss
push
xchg
repz
mov
loop
scas
pop
pop
sub
sbb
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
cmp
cli
jbe
adc
and
dec
pop
in
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
mov
lret
lods
cs
std
insl
hlt
pop
in
leave
dec
fidivrs
lret
mov
enter
lret
scas
pop
scas
gs
adc
or
dec
sub
sub
cwtl
push
imul
xchg
mov
fimuls
inc
xchg
pop
mov
test
cmp
mov
jecxz
inc
aam
dec
clc
repz
notb
mov
insl
std
test
pushf
or
arpl
xchg
gs
or
sub
sub
gs
insl
hlt
pop
xabort
icebp
nop
arpl
fmull
inc
sub
xor
divl
fimuls
popa
fwait
pop
movsl
es
cs
imul
sbb
add
outsl
lcall
mov
and
loop
pop
loop
xchg
adc
roll
aad
sbb
add
jno
xorb
push
xor
cmp
int3
imul
ret
adc
add
mov
xchg
xor
mov
adcb
cmp
dec
fmuls
fsubrs
lret
pop
ds
xor
add
aaa
jae
jg
jmp
sahf
insl
mov
mov
xchg
jl
push
xor
es
fistpl
push
shlb
or
xor
pop
into
test
jb
in
movsl
and
xchg
xchg
repnz
aas
mov
fistpl
xchg
addr16
mov
and
sti
fistps
scas
pop
test
rolb
shlb
xchg
sbb
adc
outsb
loopne
adc
inc
sub
xor
jne
cmpsl
aaa
push
mov
cmp
jno
hlt
push
cld
dec
jns
sub
add
add
sub
lret
and
lret
fmull
add
ja
jb
adc
inc
jl
in
lret
lret
mov
mov
mov
sbb
ds
xor
pop
xchg
jb
ds
or
jbe
jo
loop
xlat
inc
shlb
xchg
repnz
pop
push
xor
sub
pop
mov
dec
fdivrs
dec
adc
bound
and
or
push
lahf
push
pop
arpl
jo
loop
das
scas
aas
pop
test
sub
or
fiaddl
mov
jle
arpl
notl
push
ja
loope
sbb
or
js
cwtl
push
imul
inc
and
or
sti
add
out
jl
testb
jge
negl
sahf
stc
or
add
das
pushf
inc
rolb
sarb
ljmp
stc
mov
stos
cmp
or
add
pushf
add
mov
lods
adc
pop
push
xor
dec
inc
fmuls
fcomps
mov
dec
mov
cltd
push
xchg
popa
xchg
insl
std
test
pop
jecxz
push
in
or
sbb
pop
std
jg
mov
orb
decb
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
and
push
ja
loope
aaa
mov
adc
arpl
arpl
cmc
push
sbb
jb
xchg
in
cltd
push
cli
or
ljmp
jg
lds
iret
movsb
xor
sbb
xchg
pop
bound
xorb
pop
pop
rcll
and
cmpsl
aaa
push
mov
test
jmp
lret
scas
pop
fcompl
in
or
scas
sub
jne
push
cld
sbb
inc
shll
int
addr16
inc
shlb
lock
bound
pop
test
pop
les
add
add
add
and
lret
lret
and
add
ja
ja
adc
lea
and
lret
lret
add
xor
fimuls
add
mov
mov
xchg
add
jnp
mov
xchg
sbb
iret
pop
cmp
popa
dec
fimuls
dec
outsb
cld
fwait
jbe
ja
je
out
inc
and
out
jg
mov
sub
insl
jne
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
jle
adc
sub
lret
lret
push
orl
mov
int3
jnp
cmpsl
aaa
push
mov
je
inc
push
roll
aad
aas
movsl
xor
jb
xchg
xchg
mov
mov
inc
aad
dec
test
inc
and
sbb
arpl
xchg
add
je
cmp
mov
mov
mov
mov
dec
mov
mov
cmpsl
ds
dec
mov
dec
mov
push
mov
test
mov
jge
je
push
mov
repnz
das
mov
gs
pushf
outsl
fldt
outsb
or
push
mulb
xchg
outsb
filds
fnsave
fimull
fisubrl
jnp
mov
xor
and
or
jnp
jbe
loopne
sbb
out
in
mov
mov
jecxz
adc
add
jg
mov
jmp
and
notl
dec
das
fidivrl
mov
mov
add
stos
pop
xchg
jnp
insb
or
out
gs
jge
testl
leave
xor
xchg
jb
ljmp
js
ljmp
xor
gs
inc
shll
add
and
mov
mov
inc
aad
dec
in
jbe
cmpl
roll
aad
out
jns
mov
xchg
add
push
xor
or
fwait
jnp
movsb
ret
ds
push
xor
es
jecxz
push
in
rcrl
data16
out
jl
idivb
push
xlat
inc
and
aaa
les
dec
movsb
sub
inc
push
xor
xor
pop
repnz
fs
mov
int
fidivrs
and
or
mov
push
or
mov
mov
mov
xor
add
add
add
add
or
add
lret
add
add
lret
add
or
adc
xor
xor
add
ja
jle
adc
adc
cld
shr
lret
lret
xor
mov
push
and
sti
xchg
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
or
into
inc
mov
out
sub
lds
iret
inc
shll
mov
fdivl
in
pop
xchg
or
xor
sahf
das
inc
fisttpl
fnsave
inc
xlat
mov
sbb
std
outsl
lcall
fnstcw
frstor
push
push
test
push
testb
or
cmpsb
and
adc
imul
jmp
jnp
outsb
or
adc
rcr
pop
leave
test
mov
xlat
sub
cmpsb
xor
scas
jns
jle
mov
in
cld
je
lea
xchg
add
sahf
jl
sub
cmp
sub
dec
add
rcrl
stos
data16
jmp
push
mov
js
cs
cmp
mov
repnz
or
push
lret
pop
ds
rclb
push
mulb
gs
dec
mulw
icebp
push
stos
lods
lret
inc
icebp
push
les
int3
imul
cmc
pushf
outsl
scas
out
adc
popa
cmpsb
lods
lret
inc
lods
push
test
push
notb
inc
es
sbb
and
aas
mov
add
sub
push
rolb
shrb
and
popf
or
adc
popf
or
outsb
cld
fwait
jbe
xchg
pop
jecxz
clc
lahf
push
jmp
lret
imul
das
lahf
adc
insb
or
mov
xorl
push
mov
cmpsb
shll
inc
aad
dec
in
loopne
adc
push
das
mov
add
sbb
outsl
sti
imul
cmp
or
pop
and
jno
jle
call
es
js
jne
out
push
lds
iret
add
fcoml
adc
testb
sub
lret
fmull
add
add
mov
adc
jns
hlt
mov
lret
mov
inc
rcll
sub
fdivs
pusha
pop
repnz
mov
cmpsb
shll
pusha
in
sbb
cmp
xchg
add
pushf
xor
dec
imul
adc
sbb
out
adc
or
mov
pop
sahf
or
cmpsb
push
inc
enter
outsl
pop
rolb
rolb
xor
and
das
ret
push
lds
jnp
mov
data16
dec
insl
cld
xchg
cmc
add
fwait
adc
cmp
mov
in
push
push
xor
js
insl
std
test
jmp
mov
dec
ret
mov
xor
test
aas
scas
lret
imul
or
hlt
xchg
outsb
cmpsl
sub
push
aad
sub
xor
push
mov
es
cs
push
shll
test
pop
mov
ret
popl
std
or
repz
cmc
pop
jg
fs
or
flds
mov
inc
mov
les
imull
aaa
push
mov
cmp
pusha
mov
mov
and
popa
ficomps
inc
and
mov
mov
dec
jecxz
push
in
inc
fisttpl
fnstsw
dec
das
ficompl
adc
popa
ljmp
stc
in
fwait
add
daa
mov
and
lcall
lcall
cld
jl
jne
insb
enter
dec
mov
and
inc
rcll
push
and
ret
mov
mov
or
call
xlat
pop
int3
stos
xchg
pushl
xorb
fisttps
fnstenv
inc
int
and
pop
insb
out
adc
dec
sbb
and
pop
int3
inc
and
mov
sbb
xor
adcl
test
dec
fnstcw
sti
sahf
insl
test
ja
jbe
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
orl
js
mov
lret
lret
or
add
add
adc
pop
sbbb
jmp
out
jo
mov
mov
loop
pop
loop
add
inc
xchg
adc
pop
fimuls
push
rclb
mov
nop
testl
mov
out
icebp
nop
arpl
push
ficoms
pop
scas
push
fimull
fidivrl
pushl
mov
in
fs
popf
insb
lahf
sub
fistl
pop
mov
adc
and
mov
and
ret
mov
jns
jmp
dec
fisttpll
out
fmuls
mov
pop
cmp
pusha
ja
jno
jecxz
mov
mov
and
cmp
idivl
lret
loope
out
mov
mov
test
mov
ja
ljmp
cmpsb
jle
adc
testb
sub
lret
lret
aam
or
mov
mov
push
rolb
rcrb
ds
push
lds
cmc
jnp
mov
jno
add
adc
or
push
aad
sub
or
dec
ret
mov
cmc
add
adcb
andb
shll
mov
push
mov
sbb
cmp
jge
divl
mov
sbb
and
pop
iret
stos
pop
into
mov
test
xchg
adcb
sbb
scas
aas
scas
lret
hlt
pusha
notb
lret
sti
xor
jbe
push
xor
sub
sbb
aad
into
stc
pusha
notb
and
xchg
into
push
mov
or
push
inc
push
xor
es
push
xor
es
fstpt
dec
fistpll
and
ret
push
jl
testb
lea
call
rorb
dec
stos
mov
lods
mov
mov
in
cld
jb
xchg
add
pop
lret
inc
aad
dec
and
add
push
push
xor
addr16
gs
dec
and
sub
adc
pop
iret
stos
pop
jbe
ja
loope
mulb
xchg
aad
pop
enter
sbb
sbb
ret
ret
jae
xchg
in
jb
xchg
call
cli
cmp
sbb
dec
push
fisttpl
fnsave
aaa
mov
inc
mov
adc
adc
mov
inc
mov
mov
fcomp
pop
leave
test
mov
adcb
xorb
clc
lahf
push
or
je
xchg
testb
lcall
test
test
jge
dec
in
jge
notl
sbb
adcl
or
adc
jg
jmp
fs
and
les
int3
gs
ja
ljmp
inc
add
add
orb
js
cmp
add
lret
adc
cmpsl
aaa
push
mov
cmp
jno
add
std
or
hlt
insl
std
test
data16
xchg
outsb
test
inc
rcrl
loopw
cmc
gs
jp
lock
bound
cmp
out
hlt
xchg
outsb
xchg
xchg
cmc
add
mov
movsl
int3
aas
ret
mov
mov
dec
frstor
or
out
fcoml
mov
inc
es
xor
xchg
sbb
or
les
int3
sbb
dec
adc
daa
pop
xlat
inc
and
js
mov
inc
mov
mov
dec
fisttpll
out
push
ret
ret
pop
int3
stos
data16
sti
insb
loop
je
ljmp
mov
inc
mov
fs
popf
insb
scas
addr16
xchg
cmc
add
cli
push
cli
push
mov
int3
push
shll
lds
or
or
or
addl
dec
sahf
inc
rclb
xor
inc
scas
orb
stc
or
xchg
pop
popa
out
jg
jmp
fildll
pop
enter
mov
shll
add
and
mov
lock
icebp
nop
arpl
add
ret
push
shlb
in
pop
lods
jle
jg
jmp
cltd
push
outsl
lcall
roll
test
cmpsb
shll
ret
pop
enter
sub
jecxz
fsubrs
inc
lret
add
add
add
adc
add
and
add
ja
mov
adc
jbe
mov
in
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
enter
in
lret
and
cmp
inc
jno
jecxz
dec
int
and
sub
dec
sub
xor
fcomps
repnz
dec
mov
push
mov
imul
ret
push
lds
mov
scas
lret
jbe
outsl
or
roll
xlat
fwait
push
test
push
mov
lds
sub
pop
test
lret
lret
mov
gs
and
inc
call
push
mov
pop
cli
xchg
or
cmpsl
aaa
push
mov
imul
xchg
jns
adcl
clc
outsb
or
jg
stos
cmp
arpl
xchg
jb
addr16
pop
sbb
xor
inc
jecxz
sti
sahf
insl
xchg
repz
lea
xchg
mov
push
les
jns
jmp
les
movsb
push
mov
sub
aaa
cmpsl
ret
mov
xchg
fwait
adc
in
sbb
mov
lods
mov
xchg
je
out
dec
push
mov
gs
and
jbe
loopne
mulb
xchg
outsb
filds
mov
push
les
inc
and
jbe
add
and
lods
and
ja
je
lea
inc
aam
dec
movsb
sbbl
push
leave
pop
cmp
dec
into
push
mov
lock
bound
ljmp
rolb
push
xor
sub
fiaddl
pop
cmp
or
imul
outsl
lcall
sbb
outsb
cld
fwait
jbe
push
test
cmp
cmp
aam
pushf
repnz
mov
jge
insl
hlt
pop
int3
add
mov
xor
or
add
add
add
add
or
lret
or
or
lret
add
add
lret
xor
sub
add
ja
xchg
or
js
xor
fsubrp
lret
lret
xor
add
ja
fwait
or
js
add
lret
in
lret
lret
fwait
xchg
or
mov
imul
or
outsb
cld
fwait
jbe
cmp
xor
es
jno
xorb
in
sbb
fdivrl
out
mov
cmp
push
lds
mov
jge
outsl
or
repnz
outsl
lcall
stos
int
iret
aas
mov
dec
mov
icebp
add
jecxz
clc
lahf
push
lret
mov
cmp
jle
add
cltd
adc
in
sbb
enter
pop
in
repz
notb
fdivrs
test
outsb
cld
fwait
jbe
addr16
pop
in
out
jo
cld
outsl
lcall
nop
testl
add
add
jnp
push
test
push
imulb
mov
or
gs
pop
xchg
or
je
sub
pusha
out
adc
or
push
xor
xor
pop
aas
lret
mov
mov
lds
lahf
punpckhdq
pop
lods
dec
movsb
sub
lds
inc
int3
inc
and
sub
push
lret
mov
xor
inc
lret
lret
das
mov
adc
sub
mov
push
ret
ret
and
aas
test
movsl
xor
lret
lret
sub
fwait
or
jno
enter
and
lahf
sbbb
cs
out
jg
jmp
stos
data16
scas
cmp
mov
inc
lds
iret
xor
sbb
pop
decb
outsl
push
call
or
mov
or
insb
divl
jmp
ret
jmp
nop
or
adc
adc
add
add
jmp
jecxz
out
mov
xchg
repnz
mov
jmp
or
or
jbe
iret
cmp
inc
dec
add
call
pop
jmp
fmuls
add
add
add
add
jl
jnp
in
add
mov
pushf
jmp
call
jmp
mov
mov
sbb
jge
or
sub
jmp
scas
xchg
xchg
jmp
test
fs
sbb
add
cmp
and
xchg
mov
dec
add
call
push
rolb
shlb
aam
mov
xchg
mov
dec
add
jmp
sub
pop
fisttps
sbb
cmp
jecxz
dec
or
push
cld
jne
mov
stc
ja
xorb
popf
jmp
and
inc
cmp
push
sahf
mov
jmp
les
mov
gs
sub
jno
jecxz
jns
push
cld
pop
xchg
dec
addr16
jmp
or
aad
adc
add
add
mov
jmp
push
push
xor
data16
decb
mov
mov
jmp
inc
aad
dec
in
push
shll
mov
lock
loop
jmp
jge
jno
jnp
in
pop
out
loope
jae
out
je
lea
sbb
xchg
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fmull
add
add
test
notl
jae
lret
lret
sub
divl
mov
and
cmp
jne
jmp
mov
jmp
das
mov
dec
mov
fsubrl
movsb
inc
shll
sub
mov
addl
jmp
nop
push
pushf
sti
push
xchg
mov
mov
sbb
mov
xchg
inc
fidivrl
mov
ret
jmp
inc
ret
ret
fstpt
out
push
pop
jp
inc
sub
movzbl
add
cmp
je
popa
mov
jmp
hlt
xor
jne
int3
popf
mov
aad
xchg
cltd
or
in
mov
cli
data16
jmp
adc
push
cltd
or
jno
jo
xorl
add
jmp
and
or
lock
add
sbb
lcall
loop
sbb
pop
rolb
rolb
test
mov
stos
mov
add
add
cld
call
and
lret
and
xor
add
ja
xchg
or
js
inc
jmp
mov
lret
lret
or
xchg
add
add
and
lret
and
add
add
xchg
or
js
lods
mov
jl
lret
lret
enter
mov
dec
push
call
xchg
cwtl
decl
lods
push
rcll
ja
stc
fs
jmp
sub
xor
jp
jp
mov
mov
and
mov
push
mov
jmp
and
mov
jmp
fmuls
movsb
push
cld
lret
imull
call
jmp
dec
jmp
dec
fdivl
in
mov
aad
sbbl
or
sub
lea
push
call
adc
jp
sbb
jmp
dec
popa
jmp
lcall
pushf
xor
dec
js
je
out
imul
daa
imul
jae
mov
inc
and
popf
pushl
mov
jmp
sub
fstpl
stos
data16
jg
jmp
inc
adc
mov
scas
cmp
mov
roll
dec
cltd
and
jb
inc
or
andb
sub
jo
jmp
mov
cmp
add
mov
add
jmp
pushf
je
jmp
mov
movsl
int3
aas
aad
fdivl
in
jge
fs
sbb
xorl
fimull
push
xor
sub
scas
cmp
mov
cmp
mov
pop
mov
and
cmp
jne
addl
jmp
test
cwtl
decl
fidivs
xchg
testb
jp
mov
jmp
or
lods
add
add
popl
jmp
push
fisttps
flds
sbb
aad
xchg
mov
mov
sbb
or
sub
sub
add
or
or
or
or
add
or
add
add
or
or
or
lret
sub
insb
add
add
sahf
or
js
mov
lret
lret
push
xchg
or
mov
add
add
stos
cmp
add
jno
xorb
jnp
mov
idivb
addr16
jmp
call
jmp
inc
rolb
shlb
adcl
and
jno
xorb
or
aad
mov
add
shll
cmp
jmp
cwtl
add
mov
inc
mov
stos
pop
loopne
pop
add
stos
fisttps
adc
pusha
std
insl
hlt
pop
andb
push
in
and
ljmp
sub
or
jmp
push
rolb
sarb
call
sbbb
or
jg
cltd
or
sub
and
jmp
and
das
test
cltd
sbb
aad
int3
test
mov
and
test
ret
jmp
adc
ret
dec
fnstcw
std
popa
push
jmp
inc
leave
pop
cmp
cmp
dec
fidivrs
pop
cmp
add
sbb
ret
jmp
mov
pop
lcall
sbb
pop
pop
jmp
xlat
dec
fstpt
outsl
or
scas
adc
cmp
cwtl
push
imul
and
mov
inc
mov
ljmp
push
ja
sub
jmp
sbb
and
out
jp
jp
movsl
xor
sub
xor
sub
adc
sub
xor
inc
add
add
xchg
or
js
jl
add
in
lret
lret
sub
push
les
loopne
jmp
les
cmpsl
cmp
pop
fiaddl
mov
lods
ret
scas
pop
mov
stos
cmp
inc
cwtl
push
xchg
repz
mov
inc
jae
fadds
pushl
mov
jmp
lds
dec
adc
xor
jmp
loop
adc
add
and
icebp
jb
xchg
mov
test
lret
mov
jmp
and
in
sbb
or
int
jecxz
sub
jmp
std
jns
mov
test
mov
test
jge
jns
addr16
mov
faddl
add
add
lret
xor
pushf
or
mov
dec
mov
add
daa
lods
and
push
clc
jle
inc
mov
and
jmp
cli
jb
xchg
jbe
insl
hlt
pop
notb
dec
sub
inc
lods
and
cmp
jmp
mov
shlb
jp
in
dec
inc
rolb
shlb
adc
stos
sti
ret
sar
inc
adc
in
jl
jne
xor
jmp
loop
loope
jae
lods
push
mov
movsb
push
jmp
mov
mov
cs
jae
jp
in
inc
fisttpll
mov
loope
xchg
xchg
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
popa
popa
jmp
pop
lret
lret
loopne
adc
and
mov
call
test
ficompl
lahf
mov
jmp
data16
outsb
or
jg
adc
in
sbb
insb
out
jl
idivb
mov
mov
movzbl
add
jmp
aaa
mov
dec
mov
mov
aaa
scas
aas
pop
test
dec
mov
jmp
imul
push
test
jmp
mov
mov
add
popl
jmp
roll
inc
jb
add
xchg
dec
sub
xor
mov
bnd
mov
rcrl
ljmp
adc
add
ja
xchg
or
js
cltd
mov
data16
lret
lret
leave
sahf
or
mov
inc
mov
lea
push
call
aaa
mov
mov
sti
ja
xorb
hlt
push
add
add
jo
dec
fnstcw
sub
sbb
inc
shlb
aam
out
dec
fstpt
imul
xchg
lock
xorb
popa
icebp
nop
arpl
xchg
xchg
adc
lds
pusha
notb
sub
sbb
ja
xorb
rclb
and
aad
mulb
push
jl
jo
loop
faddl
mov
and
test
mov
pop
xchg
repnz
push
aad
sub
cmp
iret
push
aam
sub
mov
sub
lods
and
iret
inc
fidivrl
scas
lret
popl
xchg
repz
std
adc
nop
sbb
scas
and
push
shlb
clc
or
ds
mov
mov
and
outsl
daa
mov
inc
mov
xor
sub
push
lds
leave
test
es
mov
ret
xor
pop
or
cmpsb
cmp
mov
jns
and
data16
pop
jp
jg
mov
rclb
mov
sub
imul
aaa
mov
inc
mov
cmpsb
sub
lds
fsts
cmpsl
push
mov
or
mov
std
jno
xorb
test
scas
cmp
mov
mov
shlb
je
out
pop
add
xor
leave
pop
into
test
dec
adc
push
push
lods
adc
push
nop
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
xchg
or
js
fcmovnu
and
in
lret
lret
out
or
mov
shlb
popa
icebp
nop
arpl
cmpsl
inc
shll
jo
loop
sbb
adc
rcrb
data16
add
pop
jecxz
push
in
mov
lods
xchg
adc
rclb
and
pop
mov
sbb
loopne
in
dec
frstor
movsb
push
cmpsb
sub
rcrl
stos
pop
xorl
hlt
pop
negb
inc
and
jns
mov
jns
pop
in
cltd
push
inc
mov
repnz
notb
movsb
ret
ds
ds
cmp
mov
sti
push
lahf
push
arpl
imul
dec
repz
ljmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
ja
lea
adc
mov
rcrl
lret
lret
dec
cwtl
or
mov
mov
fimuls
mov
mov
and
test
gs
pushf
outsl
lret
and
jb
add
out
adc
add
xchg
in
sbb
push
cmp
add
push
xchg
repz
out
fimull
fidivl
addb
lock
mov
in
ljmp
push
fisttpl
push
adcl
pop
enter
mov
xchg
lock
loope
lcall
mov
pop
iret
stos
pop
shlb
or
push
jno
inc
rclb
push
hlt
insb
insb
or
mov
fs
popf
insb
lds
pop
cmp
jns
call
test
and
mov
mov
xchg
rcll
push
aaa
ret
and
and
sub
repnz
add
mov
dec
mov
test
cld
xchg
cmc
add
or
pop
sub
xor
sbb
add
add
sub
lret
lret
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
xor
aas
add
add
mov
fsubrl
inc
in
lret
lret
rcll
cmp
push
xor
and
int3
inc
and
sbb
out
jl
divb
imul
fmuls
fdivs
cmp
push
xor
in
pop
loop
adc
testb
xor
lret
lret
pushf
movsb
or
mov
or
pop
lahf
punpckhdq
mov
imul
addr16
pop
cmpsl
xor
mov
inc
mov
sti
xlat
or
insb
sbb
sub
sub
or
or
or
or
add
or
lret
or
or
lret
or
add
adc
sub
adc
add
ja
sahf
or
js
xor
sbb
lret
lret
xor
inc
aad
dec
test
out
cmpsl
das
mov
sub
lds
inc
int
and
pop
and
aas
pop
test
cmp
pusha
std
outsb
cld
fwait
jbe
data16
dec
inc
aad
sub
je
mov
or
cmp
ds
test
test
xchg
adc
and
lret
mov
pushf
sti
push
cld
cmp
pop
pop
jp
adc
insb
or
sbbl
insl
or
lret
dec
fnstcw
sub
pop
push
inc
and
and
gs
sub
jmp
gs
pushf
outsl
test
dec
das
fisubrl
mov
nop
testl
add
sbb
repz
adc
out
popa
icebp
nop
arpl
cmp
sub
sub
jo
enter
popa
cmp
mov
mov
rolb
shlb
or
in
mov
xchg
es
aaa
cld
data16
xchg
outsb
lods
mov
shlb
sbbl
lret
pop
lret
scas
pop
fdivrl
jne
out
push
pop
lret
scas
pop
xchg
pop
jecxz
push
in
cltd
pop
push
popf
or
gs
pushf
outsl
xchg
push
mov
mov
pop
repnz
fs
jg
mov
rorb
dec
stos
imul
adc
add
ret
xor
add
ret
cmpsb
push
xchg
pop
repnz
cmpsb
push
fisttps
flds
push
lret
ljmp
js
jle
call
xchg
mov
lea
mov
push
mulb
nop
arpl
ret
test
pusha
pop
repnz
cmc
insb
loop
je
jl
jo
loop
or
cmp
sub
setp
or
push
fisttpl
fnstsw
sbb
fcompl
add
xor
lret
lret
dec
add
add
mov
adc
sbb
lret
lret
adc
add
ja
mov
adc
sbb
sahf
in
lret
lret
cltd
xchg
or
mov
jae
movl
aad
sub
sub
imul
adc
cmpsl
sub
lds
jg
gs
sbb
fldenv
pop
xlat
inc
and
or
push
jno
inc
fistl
mov
jecxz
jne
dec
fdivl
in
xchg
add
lods
lret
inc
out
pop
int
and
sub
and
lret
pop
int3
stos
sarw
adc
and
popa
icebp
nop
arpl
popa
test
pop
cmp
aas
jmp
cli
filds
mov
lods
sub
in
hlt
xchg
outsb
xchg
faddl
add
and
lret
and
add
add
movsb
or
js
test
push
in
lret
lret
mov
mov
cmp
popf
sbb
inc
xlat
mov
cwtl
push
roll
shll
xor
int
aam
dec
fdivrs
mov
stc
ja
xchg
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
mov
imul
mov
lret
lret
fisubl
add
xchg
xchg
adc
sub
cwtl
push
imul
gs
pushf
outsl
xchg
daa
mov
movsb
and
insb
loop
je
pop
rolb
shlb
xor
and
repnz
pop
repnz
addr16
jl
testb
dec
movsb
sub
pop
xchg
repnz
outsb
loope
adc
inc
and
jg
bound
int3
stos
data16
mov
mov
and
pop
lahf
or
or
in
mov
inc
loop
lods
cmp
pop
enter
setne
xchg
add
sahf
jbe
and
sub
push
lahf
push
or
sbb
push
mov
es
in
sti
sahf
insl
mov
inc
and
cs
inc
shll
sub
push
jne
insl
hlt
pop
negb
xchg
pop
bound
mov
cmpsb
push
fimuls
adc
push
cmc
push
pop
jp
inc
inc
iret
pop
cmp
adc
mov
outsb
or
dec
roll
mov
jmp
ja
dec
frstor
es
adcb
xchg
add
and
xor
push
les
xlat
mov
lods
lea
mov
sbb
push
mov
in
pop
lcall
repz
sub
jp
pusha
pop
repnz
mov
cmp
add
add
cld
call
and
lret
and
and
add
ja
cltd
or
js
mov
lret
lret
or
push
fldt
jp
push
cld
pop
pusha
push
xor
ja
xchg
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
inc
enter
sbb
pop
into
test
add
push
xchg
pop
xchg
repnz
ds
cmpsb
xor
scas
pop
push
ret
ret
rolb
shlb
push
lds
and
sub
popa
push
mov
gs
push
lret
push
mov
add
jle
mov
dec
mov
scas
pop
fmull
pushf
pushf
push
mov
es
xor
sub
push
test
call
mov
in
or
push
jns
jge
xlat
inc
and
aaa
jmp
fdivr
call
and
lret
and
sub
add
ja
cmpsl
or
js
lock
jle
lret
lret
dec
leave
or
mov
xor
xchg
push
mov
les
inc
imul
das
cmpsl
aaa
push
mov
push
cmc
daa
pop
rolb
rclb
or
inc
shll
pop
cmp
pusha
in
jmp
jge
test
scas
lret
loope
in
jg
icebp
data16
xchg
outsb
movsl
aaa
cmpsl
ret
aaa
mov
daa
ret
push
lds
les
xchg
xchg
testl
lods
pop
mov
mov
jg
or
lea
xor
cli
push
dec
fidivrs
adc
mov
inc
mov
push
mov
fs
or
lcall
sbb
jns
xlat
inc
and
cmp
xchg
jo
mov
dec
mov
pop
test
mov
lods
lret
inc
xchg
xchg
and
fisttps
flds
in
jge
testl
minps
inc
es
xor
les
cmpsl
push
jecxz
jl
jne
sub
dec
decb
mov
mov
arpl
xchg
gs
test
pop
cmp
and
mov
inc
mov
sti
fs
popf
insb
jmp
add
sbb
aad
int3
call
or
ret
cmpsb
push
mov
xor
int
ret
js
ljmp
loop
test
and
inc
mov
lods
lret
inc
movsb
mov
int3
lret
mov
mov
dec
fdivrs
adc
push
rcrb
cmpsb
push
fdivl
in
xchg
add
std
or
push
les
int3
fimull
mov
mov
sub
pop
into
test
inc
and
push
add
cwtl
pop
sete
insl
pushf
jle
mov
cs
dec
mov
jl
or
xchg
cmc
add
lret
sub
xor
sub
adc
sub
xor
inc
add
add
lahf
or
js
inc
xchg
in
lret
lret
mov
dec
fdivrs
sbb
popa
jmp
stc
cwtl
imul
jle
xchg
pop
bound
lret
inc
xchg
push
fisttpl
je
addr16
pop
dec
lret
pop
ds
je
insl
hlt
pop
out
mov
inc
mov
enter
cmpsl
aaa
push
mov
pop
lods
jg
inc
mov
andb
mov
mov
and
icebp
jg
jge
testl
or
sub
mov
mov
jg
cmp
aaa
xchg
mov
mov
test
jge
outsb
inc
fmuls
fdivs
adc
lock
cld
fwait
jbe
mov
movsl
fstps
test
nop
loope
lock
bound
sub
xchg
mov
movsl
int3
aas
ret
xor
stos
cmp
pop
das
stos
cmp
inc
adc
adc
orl
push
test
sub
das
mov
ljmpw
rclb
push
hlt
dec
jecxz
push
in
add
add
xor
scas
lods
lret
inc
out
ja
ja
loope
repnz
insl
ret
hlt
xchg
outsb
fldcw
insb
or
mov
cli
cmp
push
dec
rolb
sarb
adc
add
jnp
in
jge
divl
rclb
inc
loope
icebp
nop
arpl
pop
mov
data16
xchg
outsb
xchg
std
out
notl
call
fisttpl
adc
mov
fcoml
lods
pop
mov
fidivrl
orl
decl
stc
mov
shlb
jmp
popf
or
fs
popf
insb
lret
lock
lock
aam
cmpsl
aaa
push
mov
dec
mov
mov
sti
push
cmpsl
sbbb
out
sbb
shll
dec
fdivl
in
push
mov
lea
adc
mov
dec
fnstcw
leave
test
mov
push
in
rorl
mov
cmp
mov
dec
roll
rcll
mulb
aaa
push
mov
jle
arpl
pop
ds
into
dec
frstor
lods
pop
mov
daa
repnz
adc
in
sbb
in
outsl
lcall
mov
and
sub
mov
rorl
xchg
mov
push
pushf
sti
push
mov
outsb
cld
fwait
jbe
ficoms
cmpsl
push
nop
inc
lret
lret
lock
aam
dec
fnstcw
loop
je
add
ja
ja
loope
in
loopne
jb
mov
andl
add
push
mov
out
and
pop
int
addr16
push
lea
or
in
xchg
xchg
or
xchg
add
mov
inc
mov
adc
mov
and
negb
out
xchg
or
dec
cmp
cs
mov
int3
aas
aad
add
adc
mull
icebp
sbb
inc
and
and
rorl
push
addb
subl
xor
xor
add
add
add
add
or
add
lret
add
add
lret
add
or
lret
xor
sub
add
ja
cli
or
js
add
or
lret
mov
or
mov
int3
and
setg
or
popa
loopne
adc
add
fs
out
adc
sbb
push
mov
enter
or
dec
lds
iret
sub
jae
xchg
jb
xchg
cmc
add
push
fisttpl
and
std
jo
xorl
icebp
dec
rolb
mov
call
pop
out
inc
xlat
inc
and
jbe
and
adc
cs
mov
int3
push
les
jno
jecxz
xor
es
scas
xor
jmp
push
in
insb
jg
xchg
testb
ret
sub
dec
fdivrs
adc
fs
out
adc
adc
inc
shll
out
mov
mov
pushf
sti
push
incb
cli
ds
es
cmp
mov
je
xchg
testb
loopne
fistl
pop
mov
xchg
add
xor
cmp
imul
data16
dec
adc
and
mov
int
enter
jp
jl
testb
punpckhdq
dec
movb
arpl
stos
cmp
inc
add
push
xchg
repz
mov
test
jge
or
inc
shll
jmp
add
divl
cmpl
loopne
adc
push
pop
cwtl
push
imul
test
sub
nop
push
popa
nop
jb
lds
iret
sub
outsl
pop
roll
shll
dec
fdivrs
jae
in
pop
movaps
in
fstl
mov
insb
or
mov
or
mov
fisttpll
push
std
popa
cmc
gs
dec
or
or
xor
dec
sub
inc
and
js
cs
out
adc
or
data16
xchg
outsb
test
into
pop
rcll
inc
xchg
mov
sbb
and
jnp
outsb
or
adc
incl
push
cmp
sub
push
cmp
xor
jae
xchg
pop
fdivl
in
jp
insl
hlt
pop
in
push
ret
cmpsb
push
mov
jnp
orl
clc
or
push
fdivl
in
dec
ret
ret
cs
daa
mov
and
mov
test
mull
icebp
dec
xchg
pop
xchg
repnz
mov
sbb
push
les
int3
jge
jp
jp
or
sub
jle
mov
and
xor
pop
int
addr16
pop
les
int3
and
lock
in
inc
shll
and
fstl
cli
sub
mov
vmovmskps
mov
and
mov
pop
stos
pop
sub
imul
insl
cwtl
pop
mov
gs
jbe
adc
in
sbb
aas
mov
inc
mov
pop
lods
or
sbb
int3
inc
and
sub
push
rcll
push
out
cs
movsb
cmp
sbb
push
lcall
mov
xchg
daa
popa
adc
adc
adc
lret
or
or
or
lret
or
adc
add
ja
leave
or
js
stos
test
mov
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
and
add
add
aas
test
inc
aad
sub
jp
sbb
aaa
cmpsl
ret
xor
or
je
rolb
rclb
inc
shll
xchg
testb
pop
mov
js
mov
xor
pop
adc
imul
jne
addr16
or
push
cld
adc
adc
in
sbb
gs
jl
notb
mov
dec
mov
pop
scas
pop
call
leave
mov
test
cmp
clc
je
lea
mov
clc
push
lahf
push
xor
xor
loop
adc
testb
sbb
lret
loop
adc
testb
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
push
add
add
mov
adc
repz
sub
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
mov
or
in
lret
inc
inc
and
outsl
adcl
pusha
mulb
dec
sti
insb
loop
je
inc
rolb
shlb
mov
cltd
add
insb
loop
je
pop
popf
or
sbb
lods
lret
inc
rcrl
leave
dec
fnstcw
mov
es
fistps
xchg
addr16
fistpl
scas
pop
mov
addr16
gs
pop
loop
rclb
mov
bound
loop
je
std
jbe
cmpl
adcl
test
sti
imul
or
addr16
pop
lds
mov
mov
and
popl
nop
testl
mov
bound
and
movsl
inc
xlat
inc
and
jbe
inc
aam
dec
pushl
cmp
add
sahf
or
cmpsb
add
push
shll
decb
in
pop
not
dec
fidivrs
sub
ds
inc
mov
and
mov
rolb
adcl
in
bound
adc
or
cmp
push
lds
mov
stos
into
cmp
and
sub
jecxz
mov
shll
cwtl
decl
stc
cmp
and
adc
mov
mov
iret
stos
pop
shrb
das
dec
mov
inc
mov
inc
mov
insl
std
test
pop
int3
inc
and
jb
in
aad
xlat
mov
clc
push
rclb
addr16
bound
cmc
pushf
outsl
cmpsl
cmp
repnz
jg
mov
out
ja
xorb
xor
adcl
scas
aas
pop
test
dec
and
jmp
insb
or
shll
into
out
lock
bound
jle
cmpsl
aaa
push
mov
adc
push
adc
add
add
mov
adc
in
and
in
lret
lret
dec
add
add
scas
or
js
cltd
mov
cmc
in
lret
lret
mov
xchg
add
jbe
pop
into
test
jne
out
dec
idivb
mov
dec
fdivrs
cmp
or
arpl
cmc
inc
dec
stc
imul
cld
fwait
jbe
movsb
push
in
out
jl
negb
js
mov
jl
xchg
ds
and
or
or
cld
call
and
lret
and
sub
add
ja
aam
adc
add
or
lret
inc
add
add
rorl
adc
jae
jecxz
in
lret
lret
and
sub
jle
add
or
dec
roll
sarl
xor
dec
aad
sub
pop
sbb
ret
inc
mov
test
push
ret
cmpsb
push
mov
dec
test
jl
jne
jp
aaa
cmpsl
ret
pusha
in
sbb
sbb
fs
jg
jmp
push
movsl
inc
inc
into
pop
cmp
xor
lcall
cmp
mov
aas
mov
inc
mov
inc
roll
aad
xchg
sbb
aad
cmpl
and
add
xchg
dec
fldt
outsl
lcall
push
aaa
ret
push
les
inc
and
dec
jecxz
push
in
setnp
outsb
popf
pop
in
jne
mov
es
out
jbe
cmpl
adc
sbb
sub
xchg
add
sahf
jbe
iret
pop
cmp
aas
out
cmc
pushf
outsl
mov
pop
cmp
ss
sub
lds
cmp
adc
out
fs
popf
insb
lahf
orl
jmp
mov
lret
arpl
arpl
cmc
push
ficompl
scas
pop
jbe
push
cmp
repnz
pop
repnz
sbb
sbb
repnz
pop
repnz
pop
lret
lret
sub
jo
xorl
sarl
cwtl
decl
lods
out
adc
inc
out
je
lea
icebp
popa
add
sbb
loopne
or
in
xchg
fadds
mov
fstpt
insb
or
out
and
push
popf
or
pop
repnz
fs
lds
mov
mov
pop
mov
cwtl
aas
sub
aas
movsb
cmp
dec
adc
fadds
mov
cmpsl
dec
aad
sub
pop
test
mov
sbb
aam
pop
fimuls
push
cltd
pop
aam
lret
scas
pop
mov
aaa
lret
cmp
dec
int
and
and
pusha
jnp
addr16
or
mov
jle
imul
mov
mov
mov
xchg
sub
aaa
mov
fcoml
mov
in
jle
jae
or
add
mov
adc
iret
add
inc
fisttpl
fnsave
mov
jns
jl
negb
ljmp
stc
mov
lods
lret
inc
loope
fmuls
fcomps
push
into
pop
cmp
xor
lret
pop
ds
dec
fisttpl
fnsave
into
push
mov
pop
and
push
dec
into
pop
cmp
pop
insb
in
jge
negl
out
xchg
xchg
repz
jmp
fimuls
sbb
dec
sub
xor
fs
or
pop
lret
scas
pop
mov
fidivrl
jae
ja
mov
adc
mov
les
int3
aas
adc
ljmp
pushf
sti
push
in
sub
xor
xor
pop
iret
stos
pop
rcrb
test
test
sbb
sub
insl
aaa
cmpsl
aaa
push
mov
jp
ds
cmp
jae
xchg
es
jae
jle
call
movsb
push
mov
loop
cmp
xor
and
out
imul
dec
mov
sbb
add
sti
sbb
sbb
sbb
mov
inc
mov
testb
testl
and
mov
test
cmp
dec
lds
iret
ds
loop
pop
loop
xor
ficoml
mov
imul
pop
insb
insb
or
mov
xchg
add
cmp
nop
push
popa
nop
and
inc
shll
fistpll
leave
test
lock
pop
int
shlb
mov
cmp
xor
scas
insl
ret
stos
pop
test
jno
xorb
jne
mov
pop
lds
iret
dec
mov
mov
xchg
add
pop
add
and
dec
leave
pop
cmp
sub
jne
mov
jle
outsl
or
sarb
insb
or
repz
daa
inc
mov
test
in
std
test
mov
ficoml
cwtl
push
imul
adcb
adcb
xchg
pusha
mov
push
mov
jecxz
push
in
jno
jo
loop
xor
adc
mov
cltd
fisttpl
push
std
cmp
fwait
or
cmp
jb
xchg
sbbl
sub
cmp
int
shll
dec
mov
stos
pop
scas
loop
notl
or
add
add
and
lret
lret
sub
add
ja
movsl
or
js
or
jae
in
lret
lret
pushf
scas
or
mov
stos
inc
mov
mov
sbb
lea
cmpsb
xor
scas
pop
scas
sub
mov
dec
mov
cmpl
mull
icebp
sbb
icebp
xor
add
add
adc
lret
faddl
add
ja
mov
daa
mov
sti
in
lret
lret
cmp
or
mov
jle
xor
mov
inc
mov
cmp
mov
mov
aaa
movsb
cmp
add
je
insb
add
inc
aad
dec
cld
jecxz
ljmp
clc
or
dec
lock
mov
fs
sbb
cmp
pop
xchg
repnz
adc
sbbl
xchg
adc
sub
pop
xchg
adc
in
sbb
mov
mov
into
xor
movsl
xor
push
shlb
stos
pop
pop
dec
fdivrl
and
push
push
mov
xchg
jb
roll
shll
sub
xor
add
xor
lret
lret
sub
add
ja
mov
mov
add
in
lret
lret
jbe
or
mov
adc
and
ds
test
mov
cltd
add
and
cltd
ret
loopne
add
or
or
sbb
lret
lret
sub
add
ja
mov
pop
test
add
lret
je
or
mov
inc
hlt
jmp
call
xchg
jb
ds
in
sub
inc
add
add
lret
sub
sub
add
ja
mov
dec
jl
popa
in
lret
lret
pushf
mov
stos
cmp
add
fs
dec
sbb
outsb
hlt
push
cld
aas
xchg
or
in
mulb
outsb
or
adc
xchg
or
outsl
lcall
cld
fwait
jbe
fistps
fs
pop
lret
scas
pop
mov
mull
icebp
sbb
mov
mov
and
les
pop
cmp
and
scas
cmpsb
sub
lds
jl
gs
pop
bnd
jp
rcrl
test
ss
mov
test
rolb
rclb
dec
fnstcw
cmpsl
ret
js
jns
jmp
test
mov
sbb
jp
ds
gs
pushf
outsl
fdivrl
add
lods
xchg
and
jmp
jge
pop
push
xor
sub
sbb
arpl
xchg
mov
pop
bnd
jno
xorb
add
std
or
insl
out
jl
negb
clc
js
mov
add
js
insb
or
clc
inc
lret
pop
ds
jne
addr16
or
fldcw
jbe
loopne
or
dec
rclb
and
sbb
jb
xchg
lret
inc
fidivrl
sti
sahf
insl
test
enter
fmull
movsb
push
cld
les
pop
in
jle
jge
negl
push
aaa
ret
ja
xorb
add
std
or
sub
outsb
hlt
push
cld
aas
mov
ret
aad
dec
cmpsl
int3
pop
lret
scas
pop
mov
arpl
xchg
gs
jp
jp
dec
int3
inc
and
int3
stos
data16
mov
inc
mov
movsl
xor
sbb
lods
sub
pusha
notb
add
adcb
xorb
punpckhdq
nop
arpl
shlb
stc
jne
mov
lahf
sbbl
xor
in
lret
lret
push
add
add
mov
adc
divb
add
lret
and
sub
in
sbb
shlb
loop
je
cmc
data16
xchg
outsb
out
in
jle
mov
mov
and
jp
sbb
enter
fs
jae
xchg
cmp
sahf
or
push
shll
dec
mov
push
mov
adc
testb
sbb
lret
lret
sub
add
ja
mov
jbe
js
in
lret
lret
or
enter
pop
jno
xorb
jle
repz
xor
add
or
or
adc
lret
fsubrl
add
add
mov
adc
cmp
in
lret
pop
mov
movsl
xor
mov
xchg
jle
aad
sub
cmp
lods
and
dec
ja
add
daa
imul
mov
in
cld
xchg
pop
and
test
and
notl
jmp
icebp
popa
add
push
stc
jbe
cmpl
add
mov
jle
sub
push
mov
es
jne
je
out
inc
mov
mov
and
adc
jmp
scas
pop
repz
xchg
outsb
fldenv
mov
xchg
or
and
in
sbb
pop
jle
jne
out
add
mov
jle
ja
loope
inc
lds
iret
add
adc
adc
in
sbb
mov
mov
cmp
in
push
lahf
push
mov
cmpsl
ret
sub
fldt
addr16
bound
xor
inc
cmp
into
inc
mov
out
stos
cmp
jle
inc
and
sbb
sub
fmuls
fsubrs
cs
mov
outsb
std
insl
hlt
pop
lods
jnp
arpl
cmc
inc
lock
pushf
outsl
les
and
addr16
add
or
mov
rcr
inc
shll
std
test
push
xchg
pop
bound
daa
rcrb
jbe
imul
adc
icebp
loop
icebp
nop
arpl
shrl
ds
test
sub
fisttps
ficoms
pop
scas
inc
int3
inc
and
dec
sub
add
pop
aas
lret
je
lea
ljmp
stc
shll
sbb
sub
mov
push
in
dec
ret
std
push
xchg
add
sahf
das
insl
std
test
adc
add
or
or
sbb
lret
lret
cmp
add
ja
mov
adc
dec
xchg
mov
lret
lret
lea
add
ja
scas
or
js
bound
or
lret
mov
or
mov
pop
movsb
sbb
fisttps
fsts
mov
xchg
xor
mov
js
dec
or
jbe
jl
negb
xor
dec
fnstcw
in
je
add
js
ljmp
stos
out
hlt
xchg
outsb
xchg
mov
xlat
push
mov
daa
inc
mov
test
nop
sbb
mov
dec
mov
jo
arpl
pop
sahf
or
cmpsb
push
das
cmpsl
aaa
push
mov
jns
pop
pop
rolb
rclb
mov
xchg
arpl
addr16
dec
pop
into
pop
cmp
jg
mov
inc
mov
dec
fimull
fidivl
push
mov
dec
fnsave
pop
into
test
pop
cmp
jo
cld
xchg
cmc
add
sbb
push
xchg
add
sahf
je
dec
pop
loop
adc
or
adc
lret
sub
add
add
lds
adc
dec
cmp
or
lret
or
or
mov
addb
xor
sub
not
push
lds
fs
pusha
lret
dec
fdivrl
pop
aas
lret
pop
int
xchg
pusha
pop
repnz
jns
add
add
test
pop
test
sti
je
lea
test
pop
test
jns
push
cld
pop
xlat
dec
fstpt
jg
jmp
pop
stos
sbb
test
jl
jne
xor
xor
lock
popf
insb
fisttpl
cltd
or
lds
xchg
cmpsb
mov
leave
arpl
imul
xor
dec
fldl
mov
push
into
pop
cmp
push
rcll
mov
jb
add
adcl
inc
shll
lcall
hlt
xchg
outsb
cmpsl
jae
add
sbb
loope
out
jl
notb
clc
jle
mov
in
sbb
sbb
push
add
push
sbb
fists
pop
mov
iret
sub
sbb
js
rclb
addr16
je
push
mov
decb
push
aaa
ret
mov
inc
mov
lea
mov
es
fimuls
mov
jbe
loopne
leave
pop
int
addr16
sub
mov
add
les
mov
sbb
jbe
mov
add
or
or
sbb
lret
lret
sub
add
ja
mov
xchg
pop
clc
ja
lret
lret
out
or
mov
les
fadds
dec
sub
xor
cmpsb
xor
scas
sub
movsl
xor
imul
hlt
push
cld
adc
movsb
ret
ds
hlt
jnp
mov
and
in
icebp
nop
arpl
int3
cmp
mov
xchg
jle
dec
ret
cmpsl
je
insl
hlt
pop
out
jle
mov
std
or
iret
inc
xlat
mov
call
sub
mov
fwait
decb
cwtl
imul
push
mov
punpckhdq
fsubrl
pushf
fwait
or
int
and
mull
xchg
pusha
leave
icebp
imul
insl
fsubrl
mov
out
je
lea
dec
fdivrl
test
cmp
inc
fisttpll
out
add
out
ja
xorb
pop
ljmp
xchg
add
jp
adc
movsb
ret
rorb
sbb
xchg
inc
scas
sub
mov
sbb
or
or
adc
lret
fsubrl
add
add
ret
js
and
and
in
lret
lret
hlt
leave
or
mov
negl
mov
shlb
loop
je
mov
into
fstl
mov
leave
test
lea
out
outsl
lcall
mov
and
ret
push
mov
add
or
xor
ret
push
lds
xlat
inc
and
jbe
fdivl
in
adcl
aam
sub
lcall
out
sbb
int
aam
pop
leave
test
fiadds
movsb
mov
mov
add
mull
icebp
pop
daa
cmpsb
xor
scas
dec
in
sbb
lds
adc
js
mov
gs
addr16
lods
mov
cmpsl
xor
fsts
mov
aam
dec
jmp
jns
stos
es
cs
gs
aam
aam
dec
clc
hlt
gs
pushf
outsl
les
jne
out
pop
loop
loope
jae
or
or
sub
add
pop
je
jbe
loopne
push
lds
iret
push
mulb
cmp
pop
incl
repnz
inc
fdivl
in
aam
fnstcw
jne
out
and
sub
adc
insl
std
test
std
jns
mov
and
mov
fistl
and
aaa
cmp
jno
push
imul
insl
pop
xchg
add
sahf
insl
cltd
adc
cmpsb
das
mov
or
in
test
mov
mov
mov
add
mov
fwait
out
out
jo
imul
cmc
add
les
mov
or
cmpsb
add
pop
into
test
outsb
mov
testb
call
and
lret
and
sub
add
ja
mov
outsb
nop
dec
fs
lret
lret
xchg
mov
lods
lret
inc
movsb
dec
aad
sub
aaa
fmull
mov
jge
divl
ljmp
stc
addb
dec
roll
aad
sti
jns
mov
scas
cs
aaa
cmpsl
ret
lods
sub
aad
sub
sub
lock
push
mov
and
push
cwtl
pop
xchg
adc
rcrl
xchg
addr16
pop
jp
inc
add
inc
enter
outsl
in
in
jle
inc
rolb
sarb
push
mov
outsb
or
push
sub
cmp
dec
fldt
dec
fdivrl
fdivrl
es
mov
cwtl
add
jg
mov
sahf
add
or
fisttpl
fstl
aaa
mov
dec
mov
nop
arpl
push
jecxz
add
std
or
ret
inc
fidivrl
xor
push
cmp
nop
push
popa
nop
arpl
jb
xchg
jb
push
notl
dec
lret
pop
ds
adc
dec
fnstcw
mov
ja
xorb
pop
mov
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
mov
lcall
movsl
xor
movsb
ret
ds
push
lret
pop
ds
ljmp
jge
je
and
pop
cmp
or
jp
in
push
and
fadds
mov
cmpsl
rorb
mov
mov
out
jl
idivb
mov
cwtl
decl
loop
adc
cmp
push
lds
add
jg
gs
pushf
outsl
mov
add
dec
fimull
fidivl
jle
mov
sahf
insl
ret
pop
cmp
mov
mov
and
sub
push
adc
inc
fisttps
fldenv
loopne
adc
add
imul
adc
and
pop
rcll
cmpsb
push
aam
or
cmp
or
xor
int
aam
mov
mov
jmp
call
and
lret
and
mov
adc
cbtw
ja
add
daa
xchg
adc
jg
mov
adc
stos
daa
mov
and
orl
cmpsb
sub
addr16
jg
jmp
ret
mov
xchg
icebp
add
orl
sti
push
mov
cmp
ret
ret
xor
cmp
mov
in
xor
sub
adc
dec
adc
push
push
push
xor
imul
daa
mov
mov
mov
insb
or
out
outsl
dec
mov
movsl
loop
adc
or
sbb
lret
lret
adc
add
ja
int3
or
js
dec
xchg
in
lret
lret
jae
or
mov
pop
loopne
mov
aam
les
iret
stos
pop
pop
jecxz
push
in
jns
outsb
or
sbb
insl
xchg
push
xlat
inc
and
or
scas
cmp
mov
mov
stos
into
cmp
lock
fcoml
lods
pop
mov
jge
scas
and
push
mov
jns
das
jne
push
or
xor
inc
fidivrl
fidivrl
push
xor
sbb
add
add
adc
lret
fsubrl
add
add
leave
or
js
je
bound
in
lret
lret
lods
int
adc
cltd
push
ja
je
out
inc
pop
fsubl
add
xor
lret
lret
sub
add
ja
lret
js
cmpsl
cmp
in
lret
loope
or
mov
aam
cmp
push
xchg
add
and
adc
adc
sub
int
lret
scas
pop
mov
cltd
or
jno
and
fimull
ficompl
movsb
ret
ds
movsb
or
jnp
imul
insl
mov
ret
stc
jle
mov
jae
jnp
add
aas
scas
lret
scas
and
add
ja
add
mov
nop
testl
pop
stos
jle
inc
and
sbb
sbb
pop
leave
test
out
test
test
push
mov
imul
setg
or
mov
push
mov
testb
fidivrs
sti
imul
cmp
pop
leave
test
mov
iret
daa
data16
insl
hlt
pop
in
int
shll
loopne
xchg
or
cmpsl
and
xor
sbb
inc
movsb
and
out
adc
cmp
rol
fidivrl
cltd
clc
or
inc
iret
pop
cmp
xor
fistpll
jne
mov
rorl
push
repnz
into
pop
cmp
add
test
ds
inc
mov
cmp
push
rclb
imul
inc
rolb
sarb
repz
cmc
inc
rorb
mov
pop
bound
cwtl
imul
test
pop
test
push
into
pop
cmp
xor
and
adc
popf
add
jmp
sub
daa
movsb
cmp
inc
pop
fdivl
in
jb
popa
add
adc
hlt
push
cld
add
dec
das
fimull
push
cmpsb
dec
enter
and
fcmovne
inc
fidivrl
mov
ljmp
stc
hlt
sti
fcoml
add
xor
lret
lret
jno
or
mov
in
ja
outsb
or
sub
or
cmp
dec
fistpll
and
mov
clc
dec
fwait
or
and
sti
imul
push
xlat
inc
shll
in
jle
ret
pop
iret
stos
pop
movsb
mov
mov
sbb
xor
xor
or
xchg
add
adc
es
out
jae
xchg
mov
add
xor
lret
lret
sub
add
ja
ret
or
js
sub
jecxz
in
lret
lret
cltd
lret
mov
insb
test
lock
bound
mov
add
or
or
sbb
lret
lret
sub
add
ja
int
adc
setbe
lret
ror
or
mov
outsb
nop
mov
ss
xor
and
add
add
adc
lret
fsubrl
add
add
int
adc
pop
fldenv
add
lret
pop
aam
adc
dec
pushf
mov
jecxz
hlt
xchg
outsb
xchg
arpl
xchg
gs
add
sbb
xlat
inc
and
cmp
insl
hlt
pop
divb
loope
cmp
inc
shll
xor
push
xor
jns
push
push
sahf
or
cmpsb
pop
xchg
add
mov
gs
and
mov
xorb
dec
fdivrl
sbb
dec
repnz
lcall
mov
push
pushf
sti
push
cmp
mov
idivl
mov
movsl
es
cs
dec
roll
aad
sub
aas
mov
xchg
adc
daa
mov
and
cs
test
loop
lcall
int
addr16
scas
mov
cwtl
cmp
pop
xchg
add
push
dec
les
int3
imul
or
dec
ret
mov
mov
es
mov
cltd
pop
int
and
fs
fisttpl
fnsave
fisttps
fsts
push
lret
sti
sbb
dec
sbb
add
mov
mov
sbb
jb
or
mov
inc
es
jmp
cmpb
or
out
adc
or
ja
insb
loop
je
adc
mov
cltd
clc
or
sub
imul
adc
add
sbb
mov
lods
mov
loop
mov
mov
ficoml
lods
pop
cli
cld
outsb
cld
fwait
jbe
outsl
cld
xchg
cmc
add
data16
dec
adc
movsl
xor
add
std
or
sbb
sub
ret
jmp
int
lret
scas
pop
mov
push
jmp
js
call
jmp
and
add
fwait
cmpsb
sbb
scas
stos
add
call
push
call
int3
popf
sbb
jg
jmp
jb
arpl
cmc
je
ljmp
inc
mov
inc
daa
sarb
loop
inc
loope
sub
add
xchg
popf
pushl
jmp
lcall
or
sbb
leave
pop
cmp
and
pop
aas
lret
pusha
notb
push
mov
loopne
mov
jmp
andb
jmp
push
popa
jmp
mov
cld
aaa
mov
inc
mov
out
lock
bound
and
mov
jmp
pop
and
and
jmp
leave
inc
shlb
in
je
popa
clc
ja
xorb
inc
shll
sar
inc
adc
adc
jo
jmp
out
jg
jmp
mov
push
popa
nop
aaa
jae
ja
loope
in
add
jl
decl
add
sub
ja
xorb
rcll
jo
roll
sarl
lret
pop
pop
jmp
inc
xlat
inc
and
outsb
xor
or
and
cmp
cltd
imul
std
gs
pushf
outsl
scas
shrb
mov
pushf
jmp
xor
cmp
jne
addl
mov
jmp
xchg
dec
add
cmp
je
jmp
xchg
push
pushf
sti
push
hlt
pop
les
int3
es
xor
flds
mov
jmp
add
addl
repnz
lcall
fs
popf
insb
test
mov
xor
xor
add
or
or
or
add
add
lret
add
add
lret
or
add
adc
xor
sub
add
ja
int
adc
in
mov
in
lret
lret
mov
or
mov
adc
adc
sub
cmp
xchg
testb
mov
and
jb
mulb
insb
fiaddl
inc
daa
sarb
popa
icebp
nop
arpl
mov
fwait
in
loope
jae
fwait
or
in
mov
int3
jnp
out
adc
dec
push
add
xor
out
sub
jns
jbe
loopne
jnp
jnp
in
insb
adc
sbb
push
ret
mov
mov
ret
call
repnz
pop
repnz
jns
insl
hlt
pop
sti
jmp
mov
mov
pop
int3
stos
data16
sti
add
sbb
xchg
pop
bound
mov
mov
mov
ret
es
cmp
push
sub
jae
mov
inc
mov
adc
push
cmp
pop
mov
xchg
pop
int3
inc
and
push
lds
lock
bound
adc
loop
call
inc
mov
test
xchg
add
sahf
sbb
jl
jne
add
dec
ret
popf
sub
pop
out
insl
std
test
or
ja
sbb
aad
repz
pop
test
mov
aaa
ret
push
lds
and
pushl
mov
in
fs
popf
insb
lahf
cmp
dec
lds
iret
sbb
dec
ret
xchg
add
das
in
jle
mov
fsubrl
test
notl
jle
jge
negl
and
add
mov
inc
mov
sbb
push
shlb
add
add
rolb
add
jmp
jecxz
lock
bound
call
push
les
aam
repnz
dec
fdivrs
jbe
loopne
xor
aad
sub
add
add
and
lret
and
sub
add
ja
lret
js
inc
mov
add
lret
fcmovbe
or
mov
pop
scas
mov
xchg
repnz
aad
repz
xchg
xor
jle
push
call
sbb
or
push
push
test
adc
out
lock
bound
push
call
inc
push
call
inc
push
dec
pop
jmp
ret
jmp
jmpw
jmp
mov
mov
das
fwait
push
fwait
or
xor
popl
cmp
popl
lea
jmp
lods
das
mov
and
cmpsb
xor
scas
pop
and
push
call
negb
push
call
jle
jl
testb
je
out
inc
push
ret
ret
xchg
add
cmp
sbb
pop
xor
add
add
and
lret
and
repz
mov
xchg
xchg
mov
and
cmp
xor
mov
xchg
or
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
out
ja
xorb
fisttps
fldenv
cmp
sbb
mov
jle
arpl
mov
cmpb
mov
fwait
or
outsb
les
mov
cmpsl
mov
xchg
icebp
add
movsb
sub
out
gs
pushf
outsl
mov
push
lds
lods
and
imul
insl
mov
dec
mov
pop
ds
lock
lock
aam
fdivl
in
jmp
jmp
xchg
add
in
sbb
sub
adc
jnp
in
pop
setp
outsl
lcall
cli
imul
jbe
jl
negb
push
xor
fisttpl
mov
fdivrl
sbb
inc
lods
sub
sub
or
add
jbe
mov
push
inc
and
or
fdivl
pusha
pop
repnz
iret
dec
ret
ret
adcl
into
pop
cmp
and
aas
lcall
call
scas
pop
lcall
aaa
push
mov
and
jns
lds
iret
jl
sbb
adcl
dec
frstor
movsb
push
loop
fisttpl
fnstsw
sbb
xchg
push
cmp
mov
mov
roll
aad
test
mov
sbb
fldenv
and
push
lahf
push
movb
dec
cmpsb
cmp
and
sub
jge
dec
fnstcw
add
nop
push
popa
nop
arpl
stos
cmp
dec
mov
aam
data16
xchg
outsb
popf
inc
int
and
jb
inc
aad
dec
cltd
cmp
jge
sbb
push
mov
mov
sbb
push
loope
stc
sub
xor
add
add
in
lret
xor
add
adc
subb
jg
mov
jne
jo
loop
and
es
mov
imul
xor
mov
rcrb
pop
mov
clc
outsb
or
adc
aad
fdivrs
push
cld
xor
mov
xor
dec
enter
sub
add
lods
sub
lret
pop
ds
mov
lods
pop
inc
and
sub
pop
mov
fdivr
call
and
lret
and
fimull
adc
stos
dec
xor
addr16
jg
jmp
and
add
cltd
or
pop
addl
or
or
adc
or
adc
add
ja
fmuls
adc
test
mov
in
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
stc
fimull
adc
lret
js
imul
pop
mov
mov
es
dec
fisttpll
out
jmp
jmp
mov
mov
test
and
inc
es
mov
mov
and
jg
push
leave
pop
cmp
sub
push
mov
inc
and
ss
ja
loope
mov
mov
pop
int3
stos
scas
fcompl
xchg
lea
mov
mov
movsl
int3
aas
fcoms
daa
shrb
cltd
or
dec
loop
hlt
xchg
outsb
fwait
cmp
push
lds
popa
jmp
loopne
stc
cwtl
imul
add
push
in
mov
test
scas
aas
pop
test
lds
stc
je
lea
out
jl
testb
cltd
push
mov
repnz
add
std
or
fimull
push
in
push
shll
push
scas
sbb
push
xor
imul
popf
insb
mov
aad
repz
cmc
sbb
ret
push
lds
gs
jp
push
lds
nop
arpl
sub
dec
leave
pop
cmp
sub
cmc
gs
add
data16
xchg
outsb
mov
mov
and
dec
mov
fisttpl
pop
cmp
pop
cmp
sub
out
adc
sbb
sbb
mov
out
inc
aad
dec
popl
lea
or
in
mov
mov
sub
cli
imul
clc
outsb
or
dec
xor
xchg
add
mov
js
add
shlb
ds
test
push
sbb
popa
add
sbb
xchg
in
adc
icebp
loop
adc
or
and
lret
lret
sub
add
ja
fisttps
adc
dec
mov
lret
push
fmuls
adc
cltd
and
jnp
mov
dec
lret
lret
pop
iret
stos
pop
clc
js
mov
roll
inc
movsl
jmp
mov
xchg
add
sahf
dec
adc
pop
fmuls
fdivs
xchg
and
push
les
mov
sbb
aad
repnz
fs
inc
into
pop
cmp
jno
loope
adc
xor
cli
cmp
pop
repnz
fs
xchg
mov
sbb
jge
or
fisttpll
adc
in
adc
sub
loop
adc
add
sbb
lret
lret
push
add
add
fimull
adc
repnz
ss
in
lret
lret
pushf
loopne
adc
loope
push
ret
dec
pusha
inc
xor
xor
or
or
or
or
lret
or
sub
add
ja
fisttpl
adc
cmp
and
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
insl
jmp
add
aaa
pushf
hlt
lock
loop
jmp
jge
push
shlb
das
fidivrl
mov
inc
mov
es
push
lds
outsb
mulb
adc
mov
inc
mov
decl
filds
mov
cmpsl
sub
cs
mov
inc
mov
fistps
stos
andw
adc
pop
lods
sub
jl
jne
jno
out
adc
push
and
inc
pop
fisttpl
fnstsw
idivl
je
popa
test
in
out
add
scas
aas
pop
test
adc
add
xor
lret
movsl
xor
movsb
ret
ds
xchg
push
xchg
repz
cmpsl
fmull
mov
inc
and
jns
out
adc
pop
sbb
daa
mov
and
adc
in
sbb
dec
aam
sub
push
xor
sub
cmp
sub
jae
cmp
sub
and
pop
pop
fdivl
in
inc
lret
pop
ds
pop
nop
push
popa
nop
inc
dec
roll
aad
sub
aas
pop
test
sti
push
in
std
insl
hlt
pop
out
sbb
fs
popf
insb
lahf
rorl
push
repnz
sub
pop
xchg
adc
ret
dec
fdivrl
repnz
shlb
jno
jecxz
int3
pop
repnz
fs
dec
fnstcw
test
pop
lods
imul
cmc
add
sbb
in
out
jno
sub
jle
ljmp
stc
in
xor
dec
fisttpl
fnsave
xor
jns
je
out
imul
cmp
jmp
xchg
jb
divb
mov
sbb
xor
or
or
or
or
add
or
lret
or
or
lret
or
add
lret
xor
adc
add
ja
add
adc
rcll
shr
lret
lret
popf
or
setg
or
add
adc
push
push
inc
and
sub
sbb
add
add
and
lret
and
or
push
xchg
repz
out
into
pop
cmp
and
int
lds
cmpsb
push
mov
ljmp
stc
hlt
xchg
sbb
aad
cmp
loope
jae
cmp
pop
aam
sub
add
sahf
sub
xchg
test
mov
sbb
xor
insb
xchg
add
std
or
cmp
xor
mov
popa
stc
imul
fidivrs
and
pop
mov
pop
push
xor
dec
sbbb
fisttpll
out
gs
adc
push
jb
pusha
pop
repnz
jns
mov
dec
mov
sub
jne
out
sbb
xchg
add
sahf
jbe
data16
xchg
outsb
popf
orb
cli
or
dec
push
xor
sub
push
xor
cmp
mov
adc
add
sub
jp
jp
jo
jno
jecxz
sbb
and
outsb
or
push
push
lret
pop
ds
jbe
ja
loope
pusha
hlt
push
cld
dec
and
nop
or
push
test
push
cld
pop
push
xor
and
push
lahf
push
dec
xlat
inc
and
pop
mov
ret
push
and
push
lret
mov
cmp
mov
sub
cmp
push
cmp
lret
dec
frstor
adc
or
inc
xlat
mov
mov
repz
je
out
or
pop
aas
lret
aad
sub
jp
lods
and
pusha
push
lcall
mov
js
mov
cmp
pop
adcl
setle
cmpsb
mov
sub
or
jno
sbb
push
jns
aas
cwtl
adc
adc
call
xchg
sbb
popa
out
jbe
cmpl
or
in
xchg
xlat
dec
fidivrs
sbb
cld
call
and
lret
and
adc
add
ja
aad
adc
fcoml
dec
in
lret
lret
sbb
or
mov
aaa
cld
out
jae
xchg
mov
movsl
int3
aas
aad
cmc
gs
sbb
jo
xorl
lock
jnp
insl
hlt
pop
lock
ljmp
fs
or
fwait
jnp
push
xor
sub
movsl
xor
leave
pop
cmp
outsb
mov
in
repz
cmc
xor
mov
js
cs
sahf
mov
mov
xchg
mov
jae
inc
xlat
inc
and
outsb
fisttpl
push
std
push
lahf
push
mov
mov
test
xchg
or
xor
mov
mov
mov
or
addb
icebp
add
cli
pop
adc
adc
sub
cmp
add
ja
in
adc
xor
and
in
lret
inc
fisttpl
adc
pop
mov
std
insl
hlt
pop
in
xchg
push
test
push
sti
pop
fisttpll
out
dec
into
pop
cmp
add
inc
daa
shlb
mov
lods
cmp
add
je
or
imul
fcoml
add
call
and
lret
and
adc
add
ja
pop
or
js
rcll
dec
gs
lret
lret
inc
add
add
add
adc
pop
ljmp
lret
or
ja
pop
or
mov
cwtl
pop
adcb
adcb
jge
testl
gs
jecxz
push
in
aad
int3
stos
data16
ja
xorb
sti
imul
or
push
xor
push
dec
lahf
mov
jmp
outsl
lcall
ljmp
mov
jmp
inc
lock
adc
pusha
cmc
gs
push
and
or
inc
and
jns
adc
in
sbb
leave
push
shlb
cmp
cmp
push
mov
mov
in
jb
xchg
ret
inc
xlat
mov
xchg
test
pop
test
add
inc
rclb
and
in
fistpl
fs
or
in
push
int
aad
dec
mov
push
mov
sbb
insl
in
sbb
and
mov
jns
mov
mov
test
in
bound
mov
and
in
mov
jno
or
xor
or
orl
or
push
imul
mov
sub
sub
jge
jp
in
add
out
adc
imul
add
fdivrl
cmpsl
les
add
dec
lret
pop
ds
sub
in
sbb
sub
push
push
dec
push
lret
pop
ds
ds
cmp
mov
mov
cltd
std
imul
sbb
ljmp
stc
mov
mov
inc
mov
popa
stc
imul
or
jle
inc
shll
push
sbb
aad
mov
jbe
mov
stos
into
cmp
adc
pop
movsb
and
mov
fst
push
lret
mov
das
cli
inc
rclb
xor
subb
cltd
push
sahf
insl
mov
push
xor
sub
pop
int3
stos
xchg
idivl
mov
adc
cmpsb
sub
imul
insl
int3
data16
push
cld
dec
add
ret
push
shll
cld
shld
pop
lret
lret
xchg
or
sub
pop
aas
lret
push
mov
adc
arpl
insl
hlt
pop
out
mov
ret
sub
adc
movb
test
je
lea
mov
xchg
jle
lods
xchg
xor
ja
ljmp
dec
add
add
fmuls
adc
aam
imul
add
add
fimull
adc
add
add
in
lret
adc
or
mov
in
push
cmp
push
lds
in
jae
gs
or
in
lret
lret
aam
sub
mov
sbb
aas
mov
inc
mov
push
mov
sub
or
lods
outsb
sbb
es
dec
mov
dec
mov
or
mov
es
insl
stc
imul
cmp
add
repnz
xlat
mov
call
leave
adc
xchg
add
test
adcl
and
mov
jo
pusha
pop
repnz
fs
push
pop
fdivl
in
in
insb
loop
je
rolb
dec
mov
in
sbb
cmp
mov
jle
jle
inc
shlb
cmp
pop
out
loop
je
xchg
sbb
dec
fstpt
cmp
or
jne
mov
mov
repz
in
jle
mov
adc
in
jg
cmp
add
and
xchg
cmc
add
mov
mov
dec
ret
repz
mov
or
mov
fdivrs
mov
and
jl
jo
loop
out
jo
xorl
faddl
add
add
cld
call
and
lret
and
and
add
ja
loopne
adc
mov
lret
lret
dec
add
add
fisttpl
adc
sbb
jg
in
lret
lret
pop
out
or
mov
mov
lds
jo
loop
out
cmc
pushf
outsl
mov
xor
out
lock
bound
add
mov
int3
pop
push
adc
adc
or
sbb
lret
lret
inc
add
add
in
adc
cld
jg
push
in
lret
lret
mov
ret
mov
int
addr16
mov
adc
dec
lcall
fcomps
scas
pop
cld
fisttpll
movsb
push
jecxz
cwtl
push
imul
mov
mull
icebp
dec
cmc
lock
lret
mull
nop
arpl
mov
cltd
mov
mov
xor
inc
and
xor
pusha
notb
fidivrs
popf
in
xchg
inc
push
xor
push
rorb
sub
add
add
adc
lret
sub
sub
add
ja
out
adc
pop
fstl
in
lret
adc
or
mov
daa
int
loop
pop
loop
in
jae
xchg
sub
add
or
or
sbb
lret
lret
sub
add
ja
out
adc
xor
mov
in
lret
mov
or
mov
add
add
lret
sub
sub
add
ja
out
adc
scas
arpl
in
lret
lret
test
or
mov
incb
sahf
pop
inc
lret
pop
ds
push
rolb
sarb
mov
scas
lret
ficoml
mov
mov
cwtl
push
imul
mov
xchg
inc
cmp
cmp
jnp
jg
jmp
arpl
or
mov
adc
lods
and
add
ss
pop
roll
aad
xchg
pop
xchg
repnz
ret
push
lahf
push
fwait
add
hlt
push
cld
adc
mov
xchg
adc
pop
leave
test
fdivp
jne
mov
lea
pushf
sti
push
mov
cmpsl
ret
push
jns
jmp
repz
mov
mov
mov
adcl
add
push
ret
cmpsb
push
mov
xchg
mov
xchg
icebp
add
cltd
adc
lcall
or
cmp
lret
pop
ds
test
test
inc
xlat
mov
data16
gs
push
or
sub
add
pop
pop
leave
pop
cmp
jle
xchg
add
xor
xchg
push
mov
and
push
xor
and
fimull
fidivl
fiadds
mov
sbb
adc
push
addl
repnz
ss
xchg
adc
or
in
icebp
sub
cmp
push
xchg
push
test
push
leave
rclb
pop
test
jo
stos
and
mulb
sbb
push
pushf
sti
push
repnz
lea
pop
int3
stos
shrw
sbb
cmp
popf
or
repnz
pop
repnz
movsb
movsb
ret
mov
pcmpgtw
imul
dec
or
or
xor
adc
dec
jne
ja
loope
test
xchg
adc
loopne
adc
in
adc
nop
push
sbb
adc
aad
sub
aaa
cli
popa
icebp
nop
arpl
jnp
hlt
imul
lahf
punpckhdq
pop
repnz
lock
bound
cmp
popa
in
sbb
adc
pushl
mov
dec
mov
mov
dec
ret
ret
sub
lds
scas
and
arpl
js
ljmp
decl
push
cmp
sbb
insb
loop
je
mov
xchg
in
in
jg
insb
std
insl
hlt
pop
lods
cld
insb
loop
je
jecxz
loopne
jb
adcb
sbb
xchg
xchg
adc
xorl
jns
mov
in
in
je
inc
sete
insl
pushf
jle
or
jmp
push
in
add
pop
into
test
pop
cmp
dec
into
dec
ret
popf
cmp
mov
lods
lret
or
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
jle
popa
in
jnp
mov
add
hlt
push
cld
jnp
jo
xorl
scas
inc
or
xchg
adc
sub
divb
xorb
out
jg
jmp
cmp
ds
inc
mov
rolb
shlb
inc
enter
sub
mov
xchg
gs
sub
loop
pop
loop
push
mov
jg
dec
dec
push
xor
push
imul
lahf
xor
and
push
pushf
sti
push
mov
xchg
and
adcl
mov
inc
mov
push
mov
fsubrl
out
jg
jp
in
push
cmpsb
lods
lret
inc
lods
sbbb
ljmp
lret
adc
and
rclb
mov
mov
cli
push
es
jne
add
mov
inc
mov
inc
xchg
jp
insb
or
repz
push
xor
daa
jl
fs
or
andb
stc
cwtl
imul
rcrl
and
js
mov
inc
mov
push
mov
mov
stos
int
mov
lock
lret
repnz
lock
mov
mov
sbb
xchg
js
ljmp
jle
sbb
ret
ret
mov
inc
fimuls
or
push
lahf
push
out
out
mov
dec
xlat
inc
and
pop
adc
mov
inc
mov
fildll
ret
mov
stos
int
ret
add
inc
pop
fisttpll
out
or
movsb
cmp
pop
xchg
in
divb
mov
cmp
pop
lahf
punpckhdq
jnp
inc
pusha
in
bound
dec
sub
jle
fisttpl
rolb
sarb
jns
mov
out
in
jle
sbb
ret
push
lret
cmc
mov
mov
aaa
in
in
mov
pop
ljmp
jbe
gs
pushf
outsl
test
arpl
xchg
gs
jb
xchg
xor
ret
inc
mov
test
test
setg
or
jg
outsl
or
stc
rcll
mov
sub
xor
pop
repnz
fs
push
les
add
jo
jbe
cmpl
sub
enter
dec
jmp
jmp
shlb
jecxz
sub
xchg
mov
pop
iret
pop
cmp
jle
loope
adc
push
cltd
or
ret
ret
mov
leave
arpl
xchg
gs
fdivl
in
add
in
loop
adc
testb
xor
lret
sub
push
add
add
jmp
push
mov
in
lret
lret
rcl
adc
ljmp
add
add
mov
outsb
mulb
adc
mov
xchg
nop
or
out
sti
sahf
insl
mov
jno
ja
gs
adc
mov
xchg
sbb
mov
lret
dec
frstor
mov
aas
pop
test
lds
and
and
push
leave
pop
sub
sub
add
lret
add
lret
sub
out
adc
add
dec
push
xor
imul
adc
sti
jbe
cmpl
or
das
mov
xchg
pop
bound
push
movsl
or
adc
pop
into
test
add
add
add
add
and
lret
fcoml
add
add
lock
js
xor
jns
lret
lret
xchg
aam
adc
clc
or
mov
mov
lods
test
movsl
int3
aas
mov
jp
pop
lret
scas
pop
mov
cmc
gs
adc
fstpt
movsb
cmp
push
inc
push
xor
sbb
stc
pop
fisttps
mov
scas
lret
out
loop
je
lcall
in
bound
and
mov
lds
sbb
push
popa
nop
push
shlb
xchg
les
mov
lds
mov
and
add
or
xor
popf
or
dec
fdivrs
shlb
jnp
in
dec
data16
xchg
cmc
add
jmp
out
jo
sbbl
push
test
into
pop
cmp
push
lds
scas
pop
fldl
push
aaa
ret
roll
sarl
repz
xorb
add
std
or
pushf
sbb
fisttpll
out
lret
dec
frstor
inc
mov
sbb
movsb
sub
jmp
mov
mov
cli
je
lea
mov
fcoml
mov
aad
dec
ljmp
scas
cmp
mov
in
sbb
cmp
pop
xchg
jb
cmp
and
es
mov
lcall
jmp
addr16
xchg
cmc
add
in
je
lea
inc
and
or
mov
push
xor
add
dec
fdivrs
fbstp
iret
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
faddl
add
ja
add
adc
ret
mov
lret
mov
or
mov
mov
mov
mov
dec
fstpl
jno
js
ljmp
inc
dec
frstor
pop
lods
sub
dec
fstpl
xchg
repz
jb
addr16
pop
xor
addl
testl
sbb
or
push
ret
cmpsb
push
test
push
push
mov
js
popa
xor
ss
fstpt
dec
fdivrl
pop
cmp
cmp
inc
shll
das
dec
mov
outsb
popf
pop
aam
iret
stos
pop
shr
out
mov
adc
adc
sbb
jno
xorb
mov
mov
mov
and
outsb
frndint
outsl
lcall
icebp
nop
arpl
or
pop
int
addr16
xor
out
jo
xorl
mov
adc
sub
lret
mov
notb
and
dec
mov
stc
cltd
and
fisttpll
out
or
adc
mov
adc
in
sbb
mov
lods
mov
mov
in
pop
or
es
pop
idivl
mov
pop
mov
jg
sub
shlb
rcll
push
add
inc
aam
sub
add
and
pop
cmp
jg
dec
frstor
adc
inc
jle
jp
in
das
dec
add
cmc
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
ljmp
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
dec
fisttpl
fnsave
cmp
jae
arpl
cmc
je
in
lret
add
add
and
lret
and
inc
add
add
mov
adc
sarb
ret
in
lret
lret
or
jb
xchg
xchg
adc
arpl
xchg
gs
dec
fidivrs
push
lds
xor
dec
xchg
sbb
mov
or
mov
push
ret
cmpsb
push
mov
dec
fdivrl
push
xor
cmp
pop
xchg
repnz
mov
movsb
cmp
outsb
je
outsl
or
mov
aam
adcb
loop
mov
jp
jp
repz
lock
lret
les
cmpsl
push
jecxz
mov
fimuls
mov
pusha
pop
repnz
jp
jbe
loopne
jecxz
out
mov
inc
fisttps
jmp
in
sbb
sub
xor
stc
into
add
data16
xor
dec
fcomps
stos
pop
xor
jmp
jge
pop
fisttpll
out
in
push
xor
in
cld
fwait
jbe
mov
rcrb
cmc
xchg
dec
push
xor
push
pop
mov
jo
xorl
shll
ljmp
stc
mov
pop
into
test
punpckhdq
add
pop
mov
fwait
push
xchg
pop
bound
sbb
pop
les
mov
lods
lret
inc
test
ret
push
lds
jmp
loope
jae
inc
fisttps
sbb
jl
jne
add
mov
iret
dec
ret
mov
jp
mov
cwtl
decl
out
cltd
sbb
cmp
sub
cwtl
and
sti
imul
or
clc
mov
ror
inc
mov
mov
insb
or
mov
push
shrb
jne
out
das
stos
es
cs
imul
insl
fstpl
pop
cmp
jle
loop
adc
testb
cld
call
and
lret
and
out
adc
data16
sub
push
lds
add
fs
popf
insb
vsubps
xchg
shrl
or
mov
int
jle
jnp
in
or
test
pop
test
jno
jle
call
xor
inc
jge
jo
loop
ret
inc
xlat
mov
xchg
inc
and
cmp
in
insb
loop
je
out
notl
enter
mov
mov
cmc
gs
adc
ja
push
mov
in
imul
insl
out
data16
xchg
outsb
popf
scas
daa
mov
and
mov
xor
or
mov
mov
mov
sbb
sub
cmpsb
pop
pop
leave
pop
cmp
pusha
std
imul
add
ljmp
stc
mov
cmp
test
push
int
and
aaa
cmpsb
lods
lret
inc
lods
dec
roll
sarl
xchg
mov
sbb
adc
fcoml
lock
enter
push
std
push
std
jns
mov
loope
hlt
xchg
outsb
mov
pop
lock
push
test
push
not
pop
into
test
lret
mov
mov
daa
scas
cmp
mov
inc
iret
pop
cmp
jo
mov
mov
lods
mov
xchg
cmpsb
sahf
or
in
mov
dec
loope
push
mov
es
xchg
add
outsl
lcall
mov
jle
call
fldcw
sbb
xor
pop
int3
stos
data16
inc
inc
fistpl
adcl
jp
jp
aaa
mov
dec
mov
aaa
ret
push
xor
sub
lock
lods
pop
mov
push
lret
test
add
in
lret
sub
sbb
add
ja
cld
or
js
lods
mov
in
lret
lret
lcall
or
mov
add
add
adc
pop
pop
dec
in
adc
add
add
and
lret
and
inc
add
add
stos
or
js
push
ja
pop
in
lret
lret
adc
add
ja
xlat
or
js
xchg
negl
in
lret
lret
push
aad
adc
imul
psubd
and
push
adcb
andb
pushf
xor
jo
adc
in
sbb
mov
test
lock
aam
stos
cmp
add
inc
aad
dec
cld
xchg
add
cmp
ret
ret
arpl
xchg
gs
roll
aad
pop
les
int3
movntq
test
sub
cltd
or
jno
sub
pop
iret
stos
pop
loopne
roll
aad
mov
movsl
int3
aas
aad
in
bound
out
jo
or
cmp
jbe
cmpl
xchg
jb
addr16
mov
inc
mov
cltd
adc
jb
xchg
mov
lods
mov
mov
mov
hlt
jns
mov
dec
lret
pop
ds
xor
jge
jge
testl
mov
movsl
xor
push
mov
je
out
pop
les
mov
pop
cmp
popa
adc
pop
jb
sub
cwtl
push
imul
cs
push
mov
push
imul
mov
inc
mov
xor
daa
out
insl
std
test
pop
jecxz
push
in
in
imul
cltd
or
dec
rcll
lods
pop
test
cs
loopne
ja
xor
xor
xor
add
or
or
or
or
add
or
add
add
or
or
or
lret
xor
sub
add
ja
or
jecxz
mov
in
lret
lret
fldl
adc
adc
repz
fmull
sbb
push
mov
pop
pop
jp
xor
jae
in
fistps
pop
lret
add
add
and
lret
and
fisttpll
adc
loope
je
outsl
or
mov
cld
dec
mov
fwait
mov
mov
test
sub
lds
inc
call
adc
icebp
add
into
or
cltd
inc
je
bound
jo
loop
ljmp
stc
sbbb
xor
dec
int
frstor
lea
lock
bound
popa
mov
dec
fstpt
aad
dec
lcall
and
out
fs
popf
insb
lahf
hlt
jge
je
addr16
aam
sub
jb
in
xor
push
dec
push
xor
sbb
push
jns
dec
sti
jbe
cmpl
and
mov
cwtl
lret
pop
leave
test
call
sti
push
xchg
add
pushf
xor
or
push
in
fwait
or
cmp
jecxz
push
in
mov
shlb
xor
and
pop
cmp
dec
rolb
rclb
ljmp
pop
ds
addr16
sbb
add
xlat
xor
xchg
cmc
add
pop
cwtl
push
imul
xchg
mov
dec
ret
cmpsl
sbb
lcall
sub
lds
xor
sub
sbb
data16
fistpl
push
cltd
or
ds
notb
dec
fnsave
cmp
mov
lahf
cmp
movsb
xor
rclb
ja
and
ljmp
sahf
insl
test
dec
frstor
and
aas
mov
fiadds
mov
cmc
push
lahf
push
aaa
mov
jno
pusha
pop
repnz
xchg
mov
std
insl
hlt
pop
loopne
es
cs
insb
loop
je
xchg
xchg
lock
in
sbb
add
adc
add
add
and
lret
and
inc
add
add
fisttpll
adc
outsb
es
in
lret
adc
add
ja
or
xchg
neg
push
in
lret
lret
lods
fisttpll
adc
sarl
mov
enter
sub
sbb
mov
push
jnp
in
aas
imul
sbb
das
xchg
sbb
inc
roll
shll
roll
aad
data16
dec
dec
fimull
fidivl
and
cwtl
push
imul
fisttps
flds
cs
adcl
pop
lods
cmp
or
dec
fdivrl
pop
aas
lret
cmp
sub
xor
in
lock
bound
test
mov
xchg
arpl
je
out
push
test
rcr
push
shlb
lock
jmp
lock
bound
pop
call
dec
adc
xor
pusha
pop
repnz
mov
cs
and
sub
xchg
mov
push
nop
push
popa
nop
and
push
xor
xchg
and
daa
inc
mov
pop
mov
mov
xchg
adc
data16
insb
or
in
cmp
fwait
or
mov
jle
or
fisttpll
out
or
arpl
jno
jecxz
jmp
lea
fistpll
sub
inc
push
rolb
sarb
pop
fisttpl
add
je
xchg
add
ja
rolb
shlb
cltd
adc
ficompl
scas
pop
adc
sub
icebp
popa
add
push
pop
fwait
or
sub
jne
push
push
fisttps
test
pop
test
xchg
add
std
or
fwait
or
rcrb
pop
cld
rorb
mov
movsb
ret
fdivrl
mov
loop
jmp
test
jae
lret
add
add
and
lret
and
add
adc
sub
cmpsl
insb
inc
rclb
sub
xchg
mov
mov
lock
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
cwtl
push
pushf
sti
push
cmpsl
sub
push
lds
xchg
add
and
fidivrs
nop
push
popa
nop
push
ds
cmp
dec
xor
fildl
mov
stos
int3
push
shlb
pop
lods
sub
inc
shlb
lahf
cli
or
adc
or
je
and
xor
push
lds
arpl
and
cmp
pop
int
addr16
call
sbbl
cmp
insb
loop
pop
loop
adc
dec
in
pusha
notb
mov
and
jo
roll
sarl
xchg
pop
bound
lret
inc
out
or
pop
roll
aad
jle
js
ljmp
xor
outsb
or
cmp
cmc
adc
jne
bound
leave
test
fisubrs
mov
inc
mov
mov
and
jbe
fs
push
jbe
gs
sbb
push
cmp
xor
pop
cmp
add
adcl
je
lea
add
std
or
jbe
xchg
testb
push
mov
and
mov
xchg
icebp
add
xor
add
push
mov
fwait
cmp
add
inc
and
ja
out
jl
testb
clc
lahf
push
int
leave
test
call
dec
loop
jb
xchg
sbb
pop
jp
xor
jmp
outsl
lcall
out
mov
movsb
inc
shll
pop
cmp
dec
push
xchg
pop
bound
pop
imul
add
ljmp
inc
lret
pop
ds
mov
stos
int
aam
lds
iret
ds
stc
ja
xorb
aas
scas
lret
pop
mov
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
and
xchg
sbb
clc
outsb
or
cmp
insl
std
test
jmp
out
mov
adcl
aam
fidivrl
cmpsb
shll
loopne
in
jle
sbb
iret
pop
cmp
pusha
jno
jp
in
dec
dec
aad
sub
push
mov
fdivs
test
pop
test
push
pop
jo
jl
divb
jb
xchg
dec
int
and
sbb
insb
loop
je
xchg
pop
xchg
adc
sti
jp
jp
js
mov
xlat
push
mov
jbe
loopne
pop
fmuls
fdivs
mov
flds
hlt
sub
mov
fwait
decb
popa
nop
aaa
mov
lods
mov
xchg
mov
std
or
mov
shlb
lahf
cli
or
mov
out
sbb
inc
mov
test
and
dec
sub
jo
outsb
cld
fwait
jbe
jbe
jno
jecxz
mov
in
jno
js
ljmp
inc
lret
mov
dec
sub
pop
pusha
std
insl
hlt
pop
orb
pop
int3
stos
data16
shlb
or
sbb
mov
fistpl
fs
adc
mov
enter
inc
mov
push
mov
es
ficoms
mov
sub
dec
popf
adc
arpl
xchg
gs
mov
dec
les
int3
imul
fnstcw
jbe
loopne
dec
jecxz
push
in
jle
out
cmp
dec
lret
add
add
and
lret
and
sub
add
ja
out
adc
jmp
lods
jns
lret
lret
push
pop
or
mov
dec
out
pop
jp
es
add
outsl
lcall
das
dec
mov
mov
sti
sahf
insl
mov
dec
fidivrs
mov
sbb
aad
mov
cld
jnp
add
mov
cwtl
decl
loop
cwtl
push
imul
mov
dec
mov
mov
jo
loop
add
xor
add
add
in
lret
xor
add
adc
ja
movsl
sub
push
xchg
add
jno
mull
icebp
sbb
jb
in
inc
int
and
jb
sbb
aad
lock
shlb
ja
aam
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
faddl
add
ja
add
adc
and
hlt
inc
in
lret
lret
fsubs
or
mov
pop
test
out
into
inc
xlat
mov
fwait
shll
xchg
mov
xchg
cmp
mov
dec
sub
cld
jae
xchg
xchg
add
pop
push
mov
jg
cmp
subl
addl
cmp
dec
fs
xchg
cmc
add
xchg
or
outsb
cld
fwait
jbe
cmpsl
aaa
push
mov
in
sbb
data16
push
in
add
scas
cmp
mov
and
mov
shll
jp
in
cmp
imul
jp
jp
cmp
int3
inc
aad
dec
scas
idivl
je
popa
addr16
jl
testb
sub
ja
xorb
sub
pop
jp
xor
mov
sbb
std
or
inc
aad
sub
je
push
xor
jg
push
les
shlb
xor
add
dec
mov
dec
fistpll
outsl
or
in
and
mov
ret
jbe
loopne
mov
jmp
rolb
sarb
sub
inc
push
xor
sub
adc
add
inc
sbb
push
sub
inc
and
test
pushf
sti
push
hlt
outsl
in
sbb
or
dec
das
fisubrl
mov
test
cmp
gs
dec
fstpt
jle
call
add
add
mov
ss
popf
jmp
dec
mov
dec
adc
pop
mov
popf
sub
xor
add
add
add
mov
je
call
pop
sub
add
xchg
jmp
push
call
jmp
aas
mov
mov
push
inc
aad
inc
or
scas
imul
jmp
push
js
ljmp
inc
sub
jmp
adc
div
fiaddl
pop
jmp
xchg
ja
dec
fbld
add
add
mov
jmp
call
jmp
outsb
call
pop
mov
mov
push
sub
inc
rclb
add
jmp
int3
popf
xchg
push
mov
es
add
pop
or
push
xor
daa
in
push
pushf
jmp
or
jle
sbb
jmp
mov
shlb
daa
mov
xchg
dec
std
lcall
test
jmp
push
fisttps
fsts
xlat
call
jmp
inc
leave
pop
cmp
outsb
inc
xorl
jmp
mov
add
and
icebp
popa
add
and
hlt
arpl
je
popl
lea
jmp
fwait
test
push
dec
jmp
mov
lods
lret
inc
loope
daa
fadds
cmpsb
je
jmp
xor
inc
xlat
inc
and
jbe
mov
roll
mov
jmp
cmc
and
je
popa
mov
jmp
stos
cmp
mov
cmc
push
mov
push
call
add
je
or
xlat
js
decl
jmp
dec
jecxz
push
in
js
jmp
daa
mov
inc
mov
pop
xchg
add
xor
orl
scas
jmp
add
sbb
push
lahf
push
lds
scas
pop
fstl
hlt
mov
movzbl
add
cmp
jmp
sbb
xchg
sbb
add
jmp
jmp
push
jmp
movl
movsb
cmp
push
xchg
adc
adc
in
sbb
in
push
call
add
sbb
incl
pop
xor
pop
jmp
jmp
add
and
xchg
sbb
cltd
or
jge
call
decl
jg
xchg
add
push
fistpl
inc
pop
jmp
add
in
rcrb
mov
add
sahf
pop
pop
xchg
add
xor
decl
outsl
dec
push
leave
inc
jmp
clc
imul
imul
dec
adc
mov
add
aas
push
lret
pop
ds
pop
int
and
jl
repz
cmc
inc
int
enter
fisttpl
push
mov
call
mov
pop
push
call
push
jmp
sbb
leave
lock
leave
testb
add
add
add
add
jmp
jge
mov
mov
mov
mov
andb
sub
jmp
mov
jmp
sbb
pop
jp
xor
xlat
insb
cmc
gs
pop
and
push
daa
popa
mov
ret
and
sarb
cmp
inc
xchg
mov
es
push
and
jmp
movzbl
jmp
aam
fdivrs
shll
dec
sub
das
lods
inc
add
add
push
jo
clc
mov
push
call
mov
jmp
push
jg
jmp
cmp
jmp
or
jle
add
jmp
cmp
sub
testb
popf
gs
imul
rolb
jmp
mov
test
jmp
ficompl
stos
xchg
cmp
das
dec
mov
jp
mov
xchg
icebp
add
pop
push
cmp
jne
addl
mov
jmp
push
jecxz
push
in
add
jbe
outsb
or
pop
pop
mov
jns
pop
and
mov
rolb
add
jmp
adc
add
popf
sub
popa
jmp
push
in
push
lret
xchg
les
jb
push
mov
es
xlat
in
in
jle
xchg
or
jp
pop
mov
and
cmp
jne
addl
jmp
inc
rolb
sarb
gs
pushf
outsl
fdivr
rclb
lea
jmp
cvtdq2ps
push
jmp
movsl
xor
mov
sub
das
dec
mov
sbb
add
add
into
ds
jmp
divl
xchg
arpl
xchg
subl
and
sar
inc
adc
out
jbe
cmpl
or
popf
or
rorl
movb
movb
movb
jmp
mov
lea
ret
push
lds
addb
testl
js
inc
leave
dec
jmp
movb
jmp
push
aad
sub
cmp
inc
and
hlt
xchg
outsb
mov
faddp
inc
roll
ret
inc
ret
inc
movb
movb
jmp
fistpll
mov
movb
jmp
mov
in
loope
sti
imul
adc
push
mov
movb
jmp
add
and
or
sbb
js
pop
addl
dec
movb
movb
movb
jmp
mov
xchg
xchg
sbb
movsb
cmp
outsb
dec
xorb
movb
jmp
bnd
je
and
mov
dec
fmuls
fdivs
mov
dec
mov
inc
rcll
aam
jmp
dec
fdivl
in
xor
inc
push
jmp
in
adc
cmpsb
rol
fsubl
roll
add
mov
dec
mov
int
xchg
call
xor
jnp
rcll
push
adc
std
decl
adc
inc
rolb
jle
jns
jmp
pop
repnz
cmpsl
jne
fucomip
movb
movb
movb
movb
movb
jmp
movb
jmp
movb
jmp
sub
push
mov
xchg
jl
cs
sahf
movb
jmp
rorb
push
rorl
fwait
cmpsl
sub
aaa
sarl
loop
jmp
movb
jmp
add
push
mov
xchg
jle
setg
or
call
mov
enter
frstor
fisubs
inc
fbld
inc
loopne
movb
jmp
mov
mov
js
mov
jmp
pushf
or
movb
jmp
out
sahf
movb
jmp
test
pushf
sti
push
in
add
out
adc
or
xchg
movb
jmp
movb
jmp
pop
inc
and
sub
add
lea
je
mov
cmp
inc
in
jae
inc
in
je
inc
out
jne
inc
out
jbe
inc
lock
test
movb
movb
movb
jmp
jle
pusha
pop
repnz
inc
sub
jp
cs
add
std
or
xchg
inc
stc
xor
add
pop
cmp
jns
in
sbb
fnstcw
jnp
cltd
movb
movb
movb
movb
movb
jmp
mov
jmp
call
jmp
mov
lahf
leave
arpl
xchg
gs
mov
inc
mov
cli
pusha
notb
sarb
mov
lea
call
inc
cmp
jl
jmp
sbb
adc
mov
jmp
iret
push
lds
mov
fiaddl
dec
lret
mov
cmpsb
js
xor
jmp
setae
xchg
pop
dec
int3
inc
and
punpckhdq
cli
or
addr16
mov
jmp
xchg
sbb
lea
dec
stos
mov
xchg
movsbl
jmp
or
pusha
notb
xchg
cmc
add
and
mov
movsbl
push
pop
xor
div
jmp
les
mov
mov
adc
jmp
jmp
and
and
push
stc
push
jmp
loop
shr
inc
xor
cmp
mov
jmp
push
int3
adc
inc
cli
movb
movb
movb
mov
jmp
stos
and
mov
sbbl
adcb
div
jmp
pop
jmp
in
adcl
test
mov
mov
and
jo
push
pop
jp
ds
cwtl
mov
sub
push
push
push
xor
push
push
push
push
call
add
loop
pushl
xchg
push
out
cld
pushf
jmp
jg
adc
pop
sub
add
xchg
jmp
pushl
jmp
xchg
add
cld
xchg
cmc
add
and
fwait
mov
popf
jmp
inc
fisttps
negl
inc
dec
aad
sub
pop
pop
lret
or
lcall
pusha
jmp
and
pushf
dec
push
mov
jmp
inc
jns
popa
sbb
jmp
rclb
cmpsl
push
fwait
ja
push
cld
adc
mulb
push
xlat
or
adc
jmp
add
push
mov
jmp
push
mov
jns
jbe
xchg
add
inc
hlt
jo
xorl
mov
and
jmp
mov
jmp
push
push
mov
sbb
mov
jmp
mov
sarl
add
std
or
push
sbb
inc
sub
ret
jmp
daa
shl
jo
jmp
push
and
jmp
pop
rolb
shlb
aaa
cmpsl
ret
xchg
cltd
clc
or
cmp
push
enter
sar
inc
adc
mov
lds
cmpsb
inc
jmp
das
pop
jmp
gs
mov
pushf
sub
sub
ret
ret
inc
sarl
ret
jne
addl
mov
movzbl
jmp
cmpsl
test
mov
cmp
je
popa
mov
jmp
adc
and
xchg
pushf
or
rclb
ja
lods
mov
add
add
adc
jecxz
icebp
popa
add
xor
jno
jecxz
jmp
jmp
jecxz
jmp
inc
shll
lods
mov
ret
push
xor
inc
jmp
sub
call
inc
cmp
jl
jmp
cmp
or
idivl
cmp
or
jmp
or
jle
or
js
mov
fcmovne
scas
xchg
loop
adc
testb
and
lret
lret
adc
add
ja
fisttpll
adc
aad
test
in
lret
popf
push
or
mov
mov
xor
xor
add
add
add
add
lret
add
sub
add
ja
sbb
adc
mov
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
jb
or
in
lret
jle
outsb
or
push
inc
push
xor
sbb
jns
jmp
cmpsl
dec
add
stc
push
call
movl
pop
fs
jge
notl
idivl
je
popa
cmpsb
dec
jbe
push
call
pop
xlat
inc
and
sub
mov
jmp
adc
fistl
pop
mov
in
adcl
jo
mov
jmp
mov
mov
es
xor
xor
popa
jmp
loope
out
jno
adc
stos
cmp
mov
cmc
scas
cmp
shl
andb
sub
jmp
mov
sahf
cwtl
adc
adc
fdivl
in
mov
inc
and
sar
inc
adc
add
jo
jmp
jge
and
jmp
sbbb
out
sbb
dec
aam
sub
ret
cmpsb
push
aam
jg
mov
sahf
outsb
pusha
mov
jmp
inc
xchg
sbb
sub
add
jmp
es
jmp
and
add
jmp
ret
inc
xlat
mov
xchg
dec
fistpll
cltd
push
fiaddl
jecxz
jmp
xchg
jmp
popf
pushl
jmp
sahf
sbb
ds
mov
jmp
mov
add
jmp
mov
and
in
out
notl
dec
jmp
idiv
jmp
inc
cld
mov
add
shll
mov
stos
bnd
mov
ret
movsl
and
push
call
out
loop
je
cmp
sub
je
popa
mov
jmp
inc
mov
popl
jmp
clc
jo
xorl
cmpsb
push
inc
into
pop
cmp
jno
and
jno
fcoml
mov
cmc
pushf
outsl
scas
mov
xchg
in
in
jle
sub
sub
push
jmp
imul
sbb
mov
add
jnp
jns
jmp
sbb
ljmp
stos
aad
jp
faddl
add
add
sub
lret
lret
sbb
adc
push
and
shr
add
add
outsl
or
scas
xor
sbb
inc
daa
shlb
add
jl
cmpl
jmp
jg
jnp
in
sub
jl
add
jmp
mov
rolb
dec
sub
xor
cmpsl
scas
rorb
ljmp
jae
je
jmp
shrb
jge
push
push
jmp
pop
lds
iret
dec
or
xchg
push
test
push
neg
pop
enter
adc
xor
xor
add
or
or
or
lret
add
lret
add
add
lret
or
lret
lret
xor
inc
add
add
xor
adc
faddp
aaa
sub
or
lret
push
add
add
das
or
js
mov
lret
lret
dec
xor
adc
sarl
mov
les
dec
fisttpll
xchg
mov
ja
xchg
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
xchg
inc
add
neg
jmp
pop
xchg
add
jp
jmp
or
mov
nop
testl
or
mov
mov
movzwl
sub
jmp
jg
fs
or
sbb
mov
jmp
jo
pop
jmp
add
add
jmp
test
sahf
stc
or
sub
inc
inc
and
push
jmp
stos
cmp
std
insl
hlt
pop
mov
xchg
dec
pop
pushf
jmp
xchg
jmp
icebp
pushl
jmp
adc
out
out
jo
gs
pop
repnz
out
pop
sub
jmp
jne
ja
loope
mov
mov
sbb
out
cs
push
jne
ret
jmp
mov
shl
jmp
inc
and
ss
popf
jmp
mov
jmp
jmp
xchg
popa
call
divb
or
xchg
sbb
and
mov
ret
jmp
or
cmc
popa
jmp
addl
sti
jns
mov
xor
ret
dec
fstpt
mov
mov
mov
andb
sub
jmp
jbe
stos
xor
cmp
jmp
addl
jmp
pop
fimuls
xor
outsl
lcall
test
pop
cmc
xchg
mov
ret
mov
test
push
test
push
cld
nop
jo
mov
and
jmp
and
sub
fwait
add
jmp
cmp
mov
jmp
inc
leave
pop
cmp
outsb
in
clc
lahf
push
cmpsl
sub
call
jmp
jle
call
insl
pushf
sub
cmp
fs
into
sbb
cld
decl
mov
jmp
roll
mov
lock
cmpsb
jl
stos
mov
sahf
dec
addl
sub
sub
and
or
sbb
sbb
adc
adc
int3
gs
cmp
je
popa
mov
jmp
push
lods
ss
int3
popf
mov
int
push
lahf
push
pop
loope
mov
mov
inc
mov
xchg
add
push
mov
add
add
jecxz
add
movsb
lods
lret
inc
test
lds
popf
or
jno
inc
pop
jmp
adc
mov
mov
push
test
push
cltd
addr16
push
jmp
mov
lea
clc
repz
xorb
repz
cmc
push
nop
push
loopne
jmp
mov
les
in
iret
xor
push
jmp
addb
repz
sti
sub
inc
push
fldt
fcoml
lods
pop
mov
add
jmp
push
jmp
jp
pusha
pop
repnz
cltd
adc
insl
std
test
enter
dec
cltd
hlt
repz
push
mov
push
push
jmp
xchg
inc
cld
lea
jmp
insl
out
adc
sub
push
mov
mov
jmp
xor
das
ret
push
lds
outsb
cld
fwait
jbe
cmc
sbb
fs
jmp
push
les
int3
jge
data16
xchg
outsb
jge
jns
jmp
and
sbb
push
cmp
mov
add
inc
xlat
mov
call
sbb
mov
call
jmp
push
fwait
or
jns
fimull
fidivl
nop
setg
or
fadds
mov
leave
clc
shll
testb
in
lret
lret
dec
add
add
sbb
adc
repnz
lods
popf
in
lret
lret
adc
add
ja
push
or
js
inc
xchg
and
lret
fs
inc
shll
mov
or
add
and
popf
pushf
pop
mov
testl
jmp
std
movsl
mov
jmp
cmp
cmp
cmpsb
es
cs
es
jecxz
aaa
jmp
loopne
mov
jmp
arpl
jo
loop
dec
roll
aad
pop
mov
pop
add
cmp
dec
andb
xor
scas
pop
insl
call
push
arpl
rolb
add
jmp
xor
pushl
jl
dec
frstor
xchg
mov
jmp
mov
jmp
mov
mov
jmp
xchg
pushf
sti
push
in
clc
outsb
or
pop
cmp
clc
xor
sub
add
add
lret
xor
sub
add
ja
sub
addr16
adc
or
mov
or
mov
add
sub
lret
lret
sub
add
ja
and
adc
mov
lret
lret
jne
or
mov
add
lahf
push
lods
daa
mov
and
pop
push
and
mov
mov
mov
jmp
sbb
jae
xchg
aaa
repz
jmp
test
scas
leave
cmp
jmp
loop
loope
jae
push
les
int3
jge
sub
lds
repnz
test
inc
or
mov
cpuid
and
jmp
in
out
jo
leave
push
shll
idivb
push
jmp
adc
in
sbb
cmp
add
push
cwtl
push
imul
push
mov
mov
dec
sub
xor
jge
je
insl
pop
or
push
pushl
call
jmp
mov
mov
cld
jmp
xor
jmp
repz
mov
push
arpl
cmc
and
in
bound
mov
fsubr
mov
jmp
jmp
pop
fwait
or
push
popa
in
call
cmp
jne
mov
push
push
pushl
jmp
mov
xchg
repnz
orl
mov
scas
lret
aas
cmpsb
or
mov
jne
push
pushl
call
mov
jmp
xchg
sbb
aad
sbbl
daa
rolb
test
mov
xlat
inc
and
js
xor
inc
cld
jmp
sbb
ds
jmp
cli
push
into
arpl
xchg
gs
push
lds
lahf
xchg
pusha
call
jmp
in
jmp
inc
rolb
sarb
aam
sub
mov
ja
loope
mov
faddl
add
add
xor
lret
sbb
add
add
add
add
lret
add
or
add
add
or
add
lret
lret
add
add
xor
lret
fsubrl
add
add
sub
adc
sbb
add
lret
mov
or
mov
ljmp
push
push
shll
pop
ljmp
sahf
icebp
push
lea
call
push
call
pop
pop
xor
pop
leave
ret
jmp
rcrl
pop
mov
mov
jecxz
adc
add
mov
jmp
pop
jmp
roll
mov
movb
add
sbb
xchg
pop
cld
jge
je
insl
xor
cmpsl
jnp
cmc
jbe
add
jmp
or
scas
mov
sub
jmp
rclb
pop
mov
inc
xchg
push
inc
and
sub
sbb
or
cmp
jl
jmp
cmp
push
xlat
mov
cmp
and
aad
mov
mov
mov
andb
sub
jmp
repz
mov
rcrb
scas
pop
mov
dec
mov
popa
jmp
jo
jmp
iret
inc
mov
xchg
cltd
sbb
mov
inc
mov
inc
rolb
shlb
outsb
xchg
popf
pushl
mov
jmp
mov
ret
rclb
push
clc
mov
mov
and
add
add
push
xchg
add
loope
adc
push
fisttpl
push
std
or
push
imul
jmp
dec
jecxz
push
in
dec
aad
sub
push
push
cmp
jmp
filds
dec
scas
xchg
or
pop
iret
stos
pop
pop
les
int3
dec
dec
and
jmp
push
cmp
test
jmp
stos
call
push
jbe
incb
add
add
mov
jmp
arpl
xchg
mov
inc
daa
sarb
and
adc
or
or
and
lret
lret
inc
add
add
and
adc
int
test
in
lret
lea
adc
repnz
lods
sub
mov
inc
mov
popf
or
add
add
cmpl
enter
jmp
inc
rcll
xor
jmp
push
in
add
cmpsb
test
add
add
lea
jmp
adc
pop
lret
scas
pop
mov
inc
aam
dec
cmpsb
mov
aas
into
pop
push
push
jmp
out
loop
je
lock
mov
flds
add
dec
movsl
xor
cmp
adcl
dec
fdivrs
mov
test
pop
mov
jle
cmp
test
dec
call
test
jmp
rolb
add
jmp
stos
mov
push
push
push
mov
lea
push
xor
push
movb
movb
jmp
xor
inc
and
pop
gs
imul
dec
fisttpl
mov
je
out
pop
adc
rol
and
stc
movb
jmp
cmpsl
aaa
push
mov
sub
push
ja
cmp
and
pop
iret
stos
pop
test
sbb
lea
jmp
mov
and
clc
mov
les
mov
jp
push
xor
sub
or
or
lret
xor
push
add
add
or
js
cs
or
in
lret
lret
int
or
mov
sub
push
repz
xorb
popf
or
mov
inc
mov
rep
leave
and
movb
movb
movb
movb
jmp
push
inc
pop
ds
jmp
call
xchg
test
xchg
lock
js
insl
hlt
pop
sarb
icebp
adc
inc
sub
jmp
push
repnz
movb
jmp
dec
int3
inc
and
je
out
push
jns
popa
add
add
loop
adc
or
or
or
lret
sub
sub
add
ja
sub
adc
in
lret
ljmp
push
pusha
or
xor
xor
add
add
add
add
adc
add
sub
and
or
js
pop
pop
cs
lret
lret
add
pop
loop
adc
or
lret
lret
jle
or
in
lret
add
sbb
xor
xor
adc
pop
subb
inc
stos
arpl
movb
jmp
pop
into
test
mov
out
adc
sub
scas
cmp
mov
mov
inc
test
inc
stos
gs
inc
fidivrl
cwtl
decl
mov
mov
inc
rolb
sarb
xchg
inc
movsb
inc
movb
movb
movb
movb
jmp
pop
enter
jns
mov
js
and
xchg
mov
pop
movb
movb
movb
movb
movb
jmp
stos
lods
lret
inc
loope
lock
bound
and
pushf
inc
cmp
push
sbb
mov
mov
add
ljmp
xchg
add
hlt
imul
lret
pop
ds
mov
sahf
stc
or
pop
add
inc
das
inc
mov
call
mov
lea
jmp
loop
lock
bound
add
jmp
loopne
notl
sub
inc
fisubl
xchg
gs
sub
or
push
movb
jmp
mov
rorl
movb
jmp
lcall
into
pop
cmp
and
sbb
pop
rolb
shlb
aas
insl
mov
call
mov
lea
push
movb
jmp
movb
jmp
insb
jmp
push
in
sbb
mov
or
dec
vmovss
dec
movb
jmp
pusha
xchg
movb
jmp
jp
inc
clc
jmp
ja
imul
fidivrl
mov
std
outsb
pop
sbb
cld
call
and
lret
and
push
add
add
aas
or
js
mov
lret
lret
in
sub
adc
xor
lahf
or
stc
dec
lea
shufps
movb
movb
movb
movb
jmp
insl
cld
xchg
cmc
add
push
adcb
xorb
in
jge
negl
sbb
or
jg
add
ret
mov
mov
sbb
push
in
sub
movsl
movb
jmp
into
pop
lret
scas
pop
mov
add
stos
xor
dec
ret
rcr
movb
jmp
aas
mov
loopne
lock
bound
ret
sub
movb
movb
movb
movb
jmp
cmp
push
xor
lahf
cli
or
enter
push
test
adcl
movb
jmp
pop
fimuls
adc
adcl
test
sub
sbb
mov
inc
lahf
insb
movb
mov
call
lea
jmp
pop
mov
gs
jbe
clc
pop
aas
push
jmp
xchg
and
jns
std
mov
jmp
test
push
jmp
or
sbb
js
sub
lds
aad
enter
stos
xor
mov
add
add
ret
xor
jmp
mov
stc
cmp
out
popa
icebp
nop
arpl
sahf
or
in
mov
into
addr16
adc
movb
mov
push
push
call
jmp
push
pushl
jmp
push
scas
imul
testb
sub
mov
jmp
adc
jae
je
out
dec
rorl
mov
cld
movb
jmp
test
ret
or
hlt
jmp
test
rclb
mov
js
arpl
int
fbstp
mov
add
xor
adc
fistpl
ret
add
or
xor
mov
call
jmp
mov
adc
movb
movb
movb
movb
jmp
adc
leave
sub
imul
gs
xor
inc
insb
jmp
lea
pushf
sbb
mov
cwtl
decl
loop
movsl
xor
addr16
inc
outsl
jmp
inc
rcll
aas
jg
outsb
or
das
test
xchg
repnz
std
mov
add
jmp
mov
movb
jmp
movb
jmp
and
and
mov
lods
mov
cmpsl
mov
push
push
mov
mov
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
ja
pop
or
mov
mov
pop
enter
insb
in
sbb
bndstx
dec
push
xor
cmp
sti
imul
pop
cmp
and
gs
jne
mov
push
adcl
push
xor
js
je
lea
fdivl
in
enter
pop
into
mov
mov
gs
pushf
outsl
les
and
mov
cwtl
push
imul
repz
cmc
sbb
cwtl
push
imul
sbb
aad
mov
ficoml
fcompl
xchg
lea
shlb
movl
fs
movsl
push
stos
out
notl
xchg
adc
in
sbb
add
les
bnd
mov
push
fmuls
fdivrs
scas
cmp
mov
aam
enter
lods
and
into
pop
cmp
adc
imul
insl
int3
and
or
cwtl
push
imul
xchg
add
cmp
mov
aad
shlb
dec
lcall
add
add
shll
mov
jns
gs
pop
rol
inc
push
movb
movb
movb
movb
jmp
jl
movb
jmp
and
pop
enter
adc
sub
mov
jmp
adc
cmpsl
movb
jmp
mov
cltd
outsl
insb
or
scas
jne
jno
jecxz
rcll
pop
testl
pop
jb
inc
add
add
pushf
xor
adc
mov
xor
icebp
int3
sub
sbb
add
add
and
lret
and
sub
add
ja
xor
adc
idivb
add
lret
inc
add
add
sub
adc
push
lret
lret
cmp
jecxz
out
mov
fiadds
mov
movsb
lret
mov
movb
movb
movb
movb
movb
jmp
pop
arpl
inc
int
movb
movb
movb
movb
jmp
and
push
lds
push
xor
adc
scas
cmp
lret
push
std
jmp
lea
jmp
mov
lahf
cli
or
test
ret
jne
out
add
out
cltd
mov
jmp
mov
jmp
insb
push
jmp
movb
jmp
mov
sahf
stc
or
fistpl
fs
push
pushf
sti
push
jecxz
movzbl
adc
inc
lret
inc
lret
jb
inc
int3
popa
jmp
adc
pop
fisttpl
push
out
xor
xchg
das
and
inc
loope
jmp
xchg
pop
pop
xchg
add
mov
mov
add
call
mov
mov
lea
push
push
movb
jmp
idivl
mov
pop
mov
movb
movb
movb
movb
jmp
sub
movb
movb
movb
mov
call
jmp
rcll
push
xchg
pushf
pop
xchg
adc
dec
shlb
pop
movb
jmp
rclb
push
clc
scas
lods
lret
inc
divl
test
test
add
stos
cmp
add
popa
icebp
nop
arpl
mov
mov
and
dec
mov
imul
lods
pop
lea
jmp
rorb
mov
outsl
or
in
xor
ret
aaa
test
rcr
add
add
sub
lret
lret
cmp
add
ja
cmp
adc
test
mov
in
lret
lret
push
sub
adc
outsl
ljmp
out
cli
popf
insb
movsl
jl
movb
jmp
js
in
lcall
jmp
aam
lds
enter
add
dec
fstpt
mov
call
mov
lea
push
push
movb
jmp
jb
pop
mov
call
mov
lea
push
push
movb
jmp
xor
and
data16
lock
bound
push
mov
jae
inc
fsubs
sbb
jne
mov
iret
inc
fidivrl
fstpt
or
dec
jmp
sahf
adc
sub
pop
xchg
repnz
nop
mov
movb
movb
jmp
mov
popa
jmp
fsts
pop
sti
pop
repnz
add
add
jo
xorl
push
scas
ds
cmp
mov
and
cmp
inc
ss
movb
movb
movb
movb
jmp
push
popf
or
lret
shlb
movb
jmp
movb
jmp
cmp
adc
jmp
movb
jmp
das
mov
xchg
xchg
adc
mov
mov
jmp
into
movb
jmp
in
movb
jmp
movb
jmp
jle
jns
jmp
ret
pop
iret
stos
pop
movsb
popf
push
xchg
repz
in
add
lea
push
push
movb
movb
movb
movb
jmp
jnp
jo
loop
mov
ret
scas
leave
cmp
inc
shlb
test
mov
je
mov
add
movb
jmp
sahf
sbb
aad
in
sbb
daa
movsl
xor
imul
outsb
movb
movb
movb
mov
call
jmp
xchg
sbb
xorl
je
pop
ret
push
std
decl
dec
inc
movb
jmp
mov
movsb
jp
mov
movb
movb
movb
jmp
sub
push
inc
push
xor
sbb
loopne
push
lds
inc
push
outsb
jmp
cld
jbe
cmpl
int3
inc
and
test
push
cli
cmp
mov
movb
movb
jmp
orb
adc
mov
jmp
repz
jne
push
int3
mov
push
inc
leave
pop
cmp
or
mov
dec
mov
leave
cmp
add
movb
movb
movb
movb
jmp
fimuls
mov
fstpt
xor
mov
jmp
popf
or
push
jmp
movsl
aaa
cmpsl
ret
into
pop
leave
test
jmp
mov
or
add
cmp
movb
movb
movb
movb
movb
jmp
rorb
mov
cmp
inc
filds
mov
cmpsb
out
out
mov
cmpsl
arpl
movb
jmp
movb
jmp
mov
mov
lahf
punpckhdq
movsl
push
mov
jo
inc
adc
movb
jmp
mov
lret
push
in
sbb
adc
pop
mov
movb
jmp
jae
push
cld
sub
push
xor
xor
adcl
nop
push
popa
nop
arpl
stos
cs
inc
adc
mov
fs
cmpsb
xor
and
inc
sbb
sbb
add
and
and
push
into
inc
aad
dec
mov
mov
adc
lds
jmp
inc
lret
lret
fiaddl
inc
sbb
enter
pop
scas
or
xchg
mov
mov
mov
sbb
call
mov
lea
push
push
movb
movb
jmp
push
test
cmp
add
cmc
push
lea
push
push
movb
movb
movb
movb
jmp
xchg
push
xchg
repz
cmpsl
cmp
add
push
movb
movb
movb
jmp
ret
lods
pop
cli
imulb
je
fldl
mov
lods
into
push
les
dec
movb
jmp
test
aad
int3
in
call
lret
lret
jae
xchg
and
inc
inc
jb
mov
sbb
pop
push
daa
or
inc
dec
popa
jmp
push
jmp
push
roll
sarl
sbb
movsl
and
fmuls
fmuls
je
inc
sbb
movb
mov
call
mov
mov
jmp
movb
jmp
les
mov
mov
aaa
cmpsl
ret
ss
mov
fidivrs
test
ljmp
fsubs
push
push
std
movb
jmp
idivl
je
popa
and
pushf
adc
into
pop
cmp
add
and
test
decl
test
jmp
test
pushl
mov
insb
mov
call
jmp
scas
and
cmpsb
xor
scas
or
add
inc
mov
pushf
jnp
push
and
add
jne
jp
in
inc
jne
jno
jecxz
sub
adc
outsl
movb
movb
movb
movb
movb
jmp
adc
cmp
push
push
jmp
inc
aam
sub
lcall
adc
pop
rorl
in
jnp
mov
stos
xor
jo
xorl
xchg
push
jge
movb
mov
call
mov
lea
jmp
aaa
into
jecxz
pushf
lret
in
push
adc
addr16
stos
into
cmp
dec
mov
lret
inc
scas
ds
sbb
mov
jns
jbe
or
out
jl
testb
xchg
or
je
mov
push
adc
andnps
decl
adc
insl
pushl
xchg
cmc
add
or
xlat
pop
int
orl
js
fs
call
jmp
std
jno
xorb
jnp
mov
call
scas
leave
cld
popf
faddl
add
add
xor
lret
sub
add
add
lret
add
add
xor
lret
fsubrl
add
add
and
adc
mov
sub
lret
lret
and
or
mov
jmp
mov
fwait
decb
out
movsl
pushf
or
pop
pop
jo
add
xor
call
jmp
lods
xchg
lea
jmp
daa
mov
dec
mov
ret
fmuls
mov
ret
adc
fidivrs
lcall
inc
fisttpl
fnstsw
cmpsb
sub
inc
pusha
push
pushl
call
mov
jmp
cwtl
add
out
jg
jmp
pop
jbe
lea
jmp
stc
notl
push
lcall
jmp
aaa
scas
cmp
mov
adc
push
cmp
addr16
push
pop
push
pushl
call
mov
mov
jmp
dec
in
in
pop
mov
jmp
lea
lahf
sbb
aad
int3
std
adcl
test
dec
ret
mov
imul
mov
lea
push
pushl
call
mov
jmp
rcr
mov
jmp
mov
mov
dec
fwait
outsl
jmp
xchg
lea
push
pushl
call
mov
jmp
adcl
jmp
pop
jecxz
push
in
ficoms
pop
scas
and
aaa
push
lea
jmp
xor
mov
int
js
mov
je
imul
inc
or
xor
call
mov
jmp
ret
stc
lods
in
or
jmp
mov
adc
dec
jle
pusha
pop
repnz
imul
inc
and
addr16
or
jmp
mov
jmp
jb
jo
loop
mov
mov
and
sahf
das
inc
movsl
pusha
jbe
xchg
pushl
jmp
and
sbb
push
jmp
fisubrl
push
std
jmp
in
js
mov
fisttps
mov
ret
cmpsb
push
nop
adc
in
sbb
and
jmp
push
std
jmp
fdivl
push
xor
pushl
jmp
mov
jmp
add
adc
push
stos
xor
jbe
cmpl
xchg
or
sbb
orb
lea
push
push
call
mov
jmp
movb
jmp
jo
jge
divl
stc
imul
sbb
bound
sbb
pop
push
movb
movb
movb
movb
jmp
dec
into
pop
cmp
ds
pop
xchg
adc
mov
sahf
stc
or
jmp
mov
jb
push
int
fistpll
movb
jmp
and
clc
outsb
or
or
ja
xorb
sub
inc
jbe
inc
and
inc
inc
push
push
call
jmp
cld
je
lea
inc
mov
mov
movsl
xor
mov
gs
inc
movb
jmp
iret
inc
mov
xchg
cli
jbe
cmpl
mov
sbb
and
pop
or
mov
and
adc
jbe
pop
int
and
xor
and
add
dec
dec
movb
movb
movb
movb
movb
jmp
jp
arpl
cmc
pop
je
jbe
loopne
push
push
movb
jmp
inc
push
movb
jmp
xchg
lods
cmp
jmp
ds
sbbb
out
sbb
dec
fisttpl
fnstsw
lds
xchg
mov
adc
inc
pop
dec
movb
movb
movb
movb
jmp
repz
lahf
push
int
shll
mov
bound
mov
loope
clc
or
inc
outsl
jmp
cmp
sub
xsaveopt
mov
fdivl
in
sub
outsl
lea
jmp
adc
movb
jmp
fcomps
stos
cbtw
pusha
in
sbb
cmp
loopw
pop
loop
jmp
mov
push
call
mov
mov
jmp
rcrl
test
stos
mov
mov
popa
jmp
rcrl
scas
pop
mov
xor
and
inc
add
add
inc
push
add
ljmp
push
les
and
mov
movb
movb
movb
movb
movb
jmp
jnp
fs
pop
popa
icebp
popa
add
inc
push
into
lret
or
mov
lea
push
push
movb
jmp
imul
pusha
lock
inc
inc
xlat
inc
and
jbe
cmp
stc
dec
push
movb
jmp
loopne
inc
push
dec
jmp
pop
iret
pop
cmp
jle
xchg
add
test
js
mov
rol
outsb
jb
inc
outsl
movb
movb
mov
call
jmp
test
mov
aam
test
push
jmp
pop
rclb
sub
lcall
sbb
push
mov
add
movb
movb
movb
movb
movb
jmp
das
mov
inc
mov
call
movb
movb
movb
movb
jmp
aaa
mov
mov
pop
jmp
movb
jmp
push
xchg
add
jnp
adc
fisttpl
fnstsw
dec
or
movb
movb
movb
mov
call
jmp
movb
movb
jmp
nop
push
test
push
loopne
movb
jmp
call
mov
movb
jmp
mov
mov
iret
pop
cmp
aas
xchg
sbb
pop
rcll
clc
jmp
pushf
add
add
inc
mov
ds
pushl
mov
pusha
pushl
test
ljmp
test
pushl
jmp
xchg
sbb
jns
xchg
fs
ljmp
jmp
test
mov
and
mov
test
ljmp
inc
enter
cmp
dec
fistpll
cltd
clc
or
cmp
rorl
push
push
inc
push
movb
movb
mov
call
jmp
outsl
loope
adc
and
push
xor
data16
mov
inc
mov
cmpsl
movsl
in
decl
jmp
movb
jmp
ljmp
sbb
aad
xchg
ja
je
out
inc
cmpsl
aaa
cmpsl
ret
aam
mov
push
call
jmp
jmp
adc
sub
push
out
or
mov
jns
movb
jmp
or
punpckhdq
xchg
dec
rolb
shlb
and
push
xor
pop
movb
movb
jmp
sbb
cwtl
push
xchg
repz
mov
pop
int
loopw
jmp
movb
jmp
ss
dec
mov
pop
scas
inc
and
movb
movb
movb
movb
movb
jmp
dec
into
pop
cmp
rcrl
push
fwait
sbb
inc
dec
push
movb
movb
movb
movb
jmp
cwtl
pop
lret
movb
movb
mov
call
mov
jmp
pop
xchg
pop
bound
lea
jmp
js
pop
fisttps
fsts
scas
pushl
jmp
xchg
adc
ret
ret
cmp
int3
xchg
xrelease
jmp
push
mov
or
adc
icebp
js
mov
ja
dec
icebp
jbe
movb
movb
movb
movb
movb
jmp
iret
mov
inc
inc
inc
jmp
mov
xchg
lock
push
fimull
ficompl
pop
xchg
add
xor
hlt
movb
jmp
movb
jmp
mov
mov
and
sarl
or
inc
aad
dec
in
call
jmp
stos
cmp
mov
cmc
outsb
ljmp
stc
scas
mull
icebp
dec
es
inc
mov
jne
rol
inc
inc
push
movb
movb
movb
movb
jmp
lcall
movb
jmp
and
jmp
inc
fisttpll
out
and
sahf
add
stos
sbb
ja
movb
jmp
pushf
mov
jmp
mov
jmp
sub
cld
popa
icebp
nop
arpl
and
xchg
aad
call
lea
push
pushl
jmp
jns
push
inc
mov
test
mov
mov
jmp
push
jmp
daa
cmpsb
xor
scas
dec
xor
lds
mov
xchg
push
aam
sub
test
jmp
std
js
mov
stos
lea
jmp
stc
jno
xorb
add
loop
pop
loop
push
inc
dec
cmc
mov
movb
movb
movb
jmp
movb
jmp
push
xchg
add
ljmp
stc
mov
sub
sub
adc
xor
jmp
movb
jmp
clc
jnp
mov
and
clc
imul
test
jb
pushl
test
ljmp
test
ljmp
jmp
test
inc
insb
imul
lods
pop
in
ljmp
fwait
jbe
sahf
push
aad
inc
outsb
imul
fldcw
cltd
gs
pop
repnz
jmp
in
je
xor
movb
movb
movb
movb
movb
jmp
mov
outsl
je
daa
xchg
and
outsb
or
cmp
or
dec
fld
inc
insl
outsb
jmp
scas
xor
fisubrl
jo
jmp
out
in
mov
lods
pop
fisubl
mov
pop
pop
push
std
movb
movb
movb
movb
movb
jmp
push
roll
rcrl
scas
sub
lds
stc
jg
mov
xchg
movb
movb
movb
mov
call
jmp
daa
mov
jmp
jle
insl
hlt
pop
loopne
pop
enter
pop
jecxz
push
in
icebp
jnp
mov
fisttpll
jmp
lea
jmp
sub
dec
fstpt
add
jbe
jne
mov
xor
jno
jmp
push
jmp
adc
arpl
arpl
cmc
push
mov
loop
insb
loop
je
sub
ljmp
jo
pushl
test
jmp
xchg
ljmp
cmpsb
xor
scas
or
or
mov
pop
into
test
shlb
jg
movb
movb
mov
call
jmp
push
lret
pop
ds
and
and
add
gs
pushf
outsl
les
cwtl
inc
mov
jmp
outsl
cli
push
insb
or
vorpd
mov
sbb
mov
movb
movb
movb
jmp
aas
cmpsb
xor
scas
inc
dec
inc
and
pop
sbb
addr16
gs
jmp
dec
or
inc
inc
inc
jmp
les
test
ficomps
dec
sub
cs
push
stc
imul
inc
and
jb
inc
daa
movb
movb
jmp
movsl
sub
scas
pushl
jmp
jmp
clc
lahf
push
xchg
adc
in
sbb
sub
enter
add
data16
inc
inc
js
inc
cwtl
sbb
aad
shll
dec
lds
movsb
push
cmpsb
fstl
mov
movb
movb
movb
movb
movb
jmp
xlat
pop
int
andl
into
inc
mov
out
push
inc
inc
imul
inc
inc
push
movb
movb
jmp
mov
jae
inc
pop
mov
jmp
xor
push
lds
jno
inc
iret
pop
cmp
jo
iret
addr16
movb
movb
jmp
data16
push
cld
dec
jge
jl
negb
xlat
inc
and
outsb
je
cmp
movb
jmp
pop
lret
lret
lock
inc
dec
fdivl
in
pop
int3
inc
and
cmp
xor
jmp
mov
xchg
dec
fisttpl
fstpl
repz
cmp
inc
add
movb
movb
movb
movb
movb
jmp
cld
pop
orl
repnz
jns
mov
adc
test
movsl
int3
aas
mov
clc
jmp
adc
lea
jmp
push
xor
xor
jmp
push
pushf
xor
insl
rcll
cmpsl
push
mov
or
inc
call
jmp
mov
dec
push
jmp
movb
jmp
int
ret
mov
and
mov
pushf
sti
push
roll
xor
cmp
pop
mov
jmp
sahf
sbb
sub
adc
push
xchg
mov
pop
movb
movb
movb
movb
movb
jmp
movb
jmp
xchg
sbb
mov
inc
leave
pop
cmp
sbb
movb
mov
call
mov
mov
jmp
jno
and
jmp
or
jl
addr16
pop
repz
xor
lods
movb
jmp
cmp
cmp
adcl
test
data16
gs
push
addl
inc
pop
push
movb
movb
jmp
mov
aad
xchg
dec
push
inc
cmp
mov
add
sbb
push
jns
aas
xchg
movb
jmp
lcall
inc
shlb
shll
jl
negb
movb
jmp
sti
lock
bound
int
inc
fmuls
fcomps
js
outsl
jg
movb
movb
movb
movb
movb
jmp
pop
lcall
inc
cmp
inc
outsl
addr16
ljmp
mov
inc
mov
xchg
push
test
push
divb
adc
push
pushl
movb
movb
movb
movb
jmp
dec
iret
movb
movb
movb
movb
movb
jmp
xor
jmp
loopne
notl
sbb
jb
add
add
inc
jo
jmp
mov
jmp
rclb
mov
xchg
repnz
lods
and
bound
movb
movb
movb
movb
movb
jmp
jno
push
std
insl
hlt
pop
loope
lods
cmp
push
les
push
std
jmp
rcrl
stos
data16
xor
mov
movb
jmp
jp
gs
pop
mov
add
mov
psubsb
inc
std
decl
adc
clc
push
pushl
jmp
sbb
rcrl
inc
bound
js
mov
pop
int3
inc
and
les
pusha
pop
repnz
lds
mov
lea
push
pushl
movb
movb
jmp
movb
jmp
mov
pushf
push
pushf
xor
addr16
xchg
dec
in
and
or
inc
fs
jo
inc
inc
push
jmp
inc
fdivl
in
adc
dec
fisttpl
fstpl
fs
jns
sub
inc
arpl
pusha
pop
enter
imul
stos
pop
scas
sub
lcall
sbb
mov
inc
push
insl
movb
mov
call
mov
jmp
fsts
outsb
insb
jmp
inc
out
inc
jo
jmp
movb
jmp
sub
and
push
rolb
rolb
jae
inc
insl
imul
xor
xor
push
aaa
ret
add
in
addr16
inc
push
movb
movb
movb
jmp
xor
xchg
daa
cmp
ss
inc
outsl
gs
dec
les
int3
sub
shl
movb
jmp
movb
jmp
mov
jo
xorl
inc
xchg
xor
add
inc
push
movb
movb
movb
jmp
outsb
loop
pop
loop
xor
nop
sub
add
add
movsb
cmp
or
jmp
pop
lret
lret
or
cmp
xchg
add
cmp
movb
movb
movb
movb
movb
jmp
sub
scas
aas
pop
test
inc
xor
imul
inc
cmp
sbb
mov
js
ds
insl
hlt
pop
mov
int
mov
mov
and
inc
cmp
mov
add
sub
adc
and
ds
movl
jmp
pop
lea
push
pushl
jmp
filds
mov
movl
jnp
jle
mov
cmp
cmp
jmp
sub
and
pop
jmp
clc
lahf
push
hlt
jb
xchg
movsb
and
xor
mov
jmp
cs
cmp
pop
out
icebp
nop
arpl
daa
in
pop
or
adc
inc
cmp
mov
gs
jmp
push
fimuls
add
std
insl
hlt
pop
loope
sti
imul
or
xor
mov
mov
lea
push
pushl
movb
jmp
mov
xchg
or
push
mov
lea
push
jmp
mov
loopne
add
pop
int3
stos
rclw
in
inc
pushl
jmp
inc
inc
and
ja
xchg
or
sub
call
inc
mov
jmp
in
std
mov
pop
ljmp
push
add
sub
sub
or
xchg
jb
es
arpl
cmc
inc
xor
js
mov
insb
jmp
aad
call
jmp
aas
cmpsl
aaa
push
mov
jns
lss
or
mov
lea
push
pushl
movb
jmp
call
jmp
scas
sub
lds
movb
movb
movb
mov
call
jmp
push
call
jmp
sbb
out
rol
inc
xor
outsl
movb
movb
movb
jmp
int3
popf
adc
sub
jmp
and
mov
arpl
addb
add
add
add
call
jmp
into
dec
frstor
movb
jmp
int3
popf
cmp
mov
inc
jmp
push
fisttpl
frstor
cmp
sub
push
das
call
jmp
fistps
test
mov
or
mov
lea
push
pushl
movb
jmp
outsb
loopne
adc
movb
mov
call
mov
mov
jmp
les
mov
mov
daa
jecxz
pushl
jmp
je
addr16
pop
imul
add
add
jmp
push
mov
gs
addr16
xchg
push
jmp
add
movb
jmp
int3
popf
jge
jo
loop
test
pop
and
add
inc
xlat
mov
lods
in
pop
dec
movb
movb
movb
movb
movb
jmp
call
jmp
aas
mov
dec
mov
movb
jmp
push
sub
jmp
movb
jmp
adc
jo
xorl
ljmp
movb
jmp
int3
popf
ljmp
addl
add
out
lahf
sub
movb
movb
movb
mov
call
jmp
repnz
mov
inc
push
push
movb
jmp
jg
pusha
pop
repnz
ljmp
int3
inc
and
cmp
insb
jmp
mov
mov
js
mov
cmc
popa
icebp
nop
arpl
popa
mulb
push
sbb
popa
jmp
mov
cs
movb
jmp
xchg
pop
xchg
repnz
mov
push
int
and
push
mov
movb
jmp
test
mov
jmp
inc
test
jg
add
hlt
insb
loop
je
int
lret
mov
adc
add
xor
inc
imul
insb
jb
inc
insl
movb
movb
jmp
std
lock
in
adc
push
movb
jmp
jl
jne
dec
inc
lret
pop
ds
sbb
xor
dec
icebp
and
inc
insb
jb
pusha
scas
sub
or
dec
frstor
push
in
inc
gs
inc
data16
inc
movb
movb
jmp
add
fimuls
push
pop
fisubl
inc
jno
jmp
insb
out
adc
sbb
and
std
jnp
mov
ss
xor
cmp
inc
insl
movb
movb
movb
jmp
pusha
out
jl
notb
lcall
pop
rolb
rolb
dec
fstpt
or
jmp
jge
add
push
jnp
jg
jmp
out
mov
gs
movb
movb
movb
movb
movb
jmp
inc
aad
sub
je
mov
push
mov
jmp
cmp
xchg
pop
xchg
repnz
fsts
loopne
mov
cmp
jmp
add
sub
fisttpl
fstpl
js
jno
jecxz
sub
sbb
std
decl
adc
pusha
push
pushl
jmp
stos
xor
cld
push
movb
movb
movb
movb
movb
jmp
pop
rcll
inc
xchg
or
cmp
push
jg
jmp
inc
sub
inc
sub
sub
movb
movb
jmp
cwtl
sbb
jmp
add
adc
mov
add
outsl
in
jge
negl
sbb
jne
popa
add
xrstors
fisubs
fs
test
mov
or
in
loope
pop
int
lea
ja
adc
inc
das
popa
jmp
ret
mov
dec
sub
add
cmp
in
es
test
jmp
or
mov
pop
cmp
jmp
push
popf
or
adc
cwtl
push
imul
pop
pop
lcall
movb
movb
movb
movb
jmp
jae
insb
or
mov
dec
sti
sbb
aas
add
mov
lea
push
pushl
movb
jmp
scas
cmp
xchg
add
mov
imul
cmp
xor
mov
fs
sub
adc
dec
fnstcw
scas
lret
mov
mov
and
inc
cmp
lret
cmp
jmp
push
fwait
or
jns
sbb
insb
loop
je
mov
test
push
cltd
push
movb
movb
movb
movb
movb
jmp
movb
jmp
notl
outsl
repz
cmc
cmp
mov
jl
xchg
dec
movb
jmp
lcall
jge
je
pusha
mov
mov
adc
cmp
decl
adc
add
mov
jne
inc
push
push
jmp
jb
imul
sub
push
mov
push
jns
pusha
lods
and
inc
push
pop
movb
movb
movb
movb
movb
jmp
dec
lret
pop
ds
das
insb
push
mov
push
sub
fisttpll
out
adcl
out
mov
jns
movb
jmp
mov
test
cmp
cmpsl
sub
setg
or
data16
inc
movb
movb
movb
jmp
xchg
movb
jmp
push
mov
gs
and
pop
jmp
ss
lret
pop
ds
scas
dec
stc
movb
movb
movb
movb
movb
jmp
mov
mov
sbb
cwtl
xor
cmpsb
xor
scas
sbb
movb
jmp
mov
inc
add
jle
pushl
jmp
cmp
repnz
test
mov
inc
aad
dec
cmpsl
std
in
mov
movb
jmp
sbb
aaa
scas
aas
pop
test
dec
mov
shll
lea
push
pushl
movb
movb
movb
jmp
aas
scas
outsb
movb
jmp
ja
imul
xor
mov
inc
mov
outsl
in
jge
negl
jne
push
jmp
js
inc
add
dec
push
push
movb
jmp
movb
jmp
and
divl
xorb
and
jecxz
mov
push
mov
call
mov
mov
jmp
popf
pop
jne
inc
movb
movb
movb
movb
movb
jmp
dec
movb
jmp
adc
pop
aam
sub
add
sahf
jl
pop
icebp
insl
aad
inc
or
jl
push
jp
jp
mov
fstpt
xchg
stc
jbe
cmpl
mov
call
mov
mov
jmp
pop
roll
rcll
dec
les
int3
imul
int
shll
mov
adcl
xor
movb
jmp
mov
fwait
jae
jno
jecxz
mov
xchg
cmp
pop
jo
movb
jmp
aas
scas
aas
pop
test
insb
jmp
push
pop
jp
js,pt
bound
pop
cmp
jno
pop
adc
clc
jmp
sbbb
out
sbb
push
fwait
or
jns
data16
xchg
outsb
test
mov
inc
or
inc
or
movb
movb
mov
call
jmp
movb
jmp
pusha
ljmp
stc
out
xchg
or
in
xchg
rorl
push
rcll
fwait
or
push
into
jecxz
inc
bound
arpl
inc
outsl
movb
movb
jmp
sub
inc
push
jmp
cmp
cs
test
subl
inc
jo
jmp
adc
jns
leave
pop
cmp
aaa
sub
shll
inc
imul
pop
ljmp
jmp
fidivrl
shrb
movb
lea
push
pushl
movb
jmp
or
loope
mov
jmp
iret
inc
aam
dec
mov
fidivrl
xchg
or
dec
cltd
dec
mov
jmp
xor
inc
int3
inc
and
xchg
cld
btc
mov
movb
movb
movb
mov
call
jmp
jle
arpl
cmc
pop
xchg
or
dec
add
inc
imul
insb
imul
stc
or
xor
test
xorb
movb
jmp
cmp
sysret
mov
pop
lret
pop
ds
and
movb
jmp
sbb
sbb
movb
jmp
pushf
add
std
or
pushf
or
aam
sub
notb
push
lods
movb
movb
movb
movb
jmp
movb
jmp
lds
mov
mov
int
lea
or
inc
jo
jmp
pop
jecxz
push
in
test
xchg
lock
scas
das
mov
cs
movb
movb
movb
movb
jmp
nop
dec
xchg
mov
movb
movb
jmp
inc
push
xor
es
shll
scas
mov
call
jmp
test
in
lock
and
jmp
pusha
push
pushl
movb
movb
jmp
movsb
sub
or
sbb
pop
jae
mov
pop
cld
mov
add
adc
pop
add
add
pop
int
rcrl
mov
js
and
imul
ja
movb
movb
lea
push
pushl
movb
jmp
sti
add
inc
arpl
inc
fs
inc
gs
loop
loope
jae
fisttps
mov
cmp
popa
icebp
nop
arpl
sub
inc
inc
jmp
movb
jmp
pop
lret
lret
jmp
inc
fmuls
fdivrs
popa
ljmp
stc
in
push
movb
movb
movb
jmp
aas
cmpsb
xor
scas
inc
add
push
mov
mov
adc
aas
movb
jmp
cmp
loopne
fwait
movb
jmp
sbb
int3
dec
frstor
lods
pop
mov
inc
test
clc
jmp
mov
inc
pop
dec
movb
jmp
out
outsb
cld
fwait
jbe
push
rolb
shrb
fistpl
fs
int
movb
jmp
mov
cmpsl
ret
jae
inc
insb
popa
jmp
movb
jmp
jle
imul
sbb
jns
test
pop
test
inc
movsl
movb
movb
movb
mov
call
jmp
fstp
movb
jmp
in
loop
je
ret
dec
fdivrs
dec
sub
jg
push
in
leave
movb
jmp
inc
iret
pop
cmp
add
in
addr16
jno
jecxz
pushf
movb
movb
movb
jmp
mov
subl
xchg
add
std
or
push
sbb
jmp
xchg
inc
jno
jmp
in
loopne
jb
mov
xchg
xchg
and
movsl
in
mov
add
movb
movb
movb
movb
movb
jmp
push
mov
js
cs
repnz
movb
jmp
jg
jp
in
push
cmp
js
ja
loope
insb
repnz
pop
bnd
movb
jmp
fs
imul
mov
gs
pushf
outsl
test
out
movb
jmp
push
sahf
or
cmpsb
dec
cmpsl
lea
jmp
cmp
push
adc
dec
mov
cltd
clc
or
je
pusha
pop
repnz
add
std
or
push
jg
mov
lea
push
pushl
movb
movb
jmp
cmp
dec
jo
push
pushl
movb
movb
mov
call
jmp
leave
and
add
lea
jmp
dec
int3
inc
and
lock
bound
pop
test
ljmp
inc
pusha
inc
jmp
and
cmp
cmpsb
xor
scas
dec
add
outsl
out
adc
dec
call
inc
inc
inc
movb
movb
movb
movb
jmp
xchg
pop
ljmp
adc
mov
out
jl
divb
push
cmp
pusha
movb
jmp
movb
jmp
pusha
repz
cmc
push
mov
test
dec
sub
jno
sub
jno
mov
call
mov
jmp
jb
inc
bound
arpl
les
into
movb
jmp
mov
jmp
jnp
movb
jmp
sub
fisttpl
mov
and
mov
addr16
aaa
movb
movb
movb
movb
movb
jmp
rol
inc
insb
insb
jmp
movb
jmp
mov
mov
popa
icebp
nop
arpl
add
cmpsb
pop
movb
movb
movb
movb
movb
jmp
jne
jl
notb
daa
mov
and
mov
inc
fs
int3
pop
lret
scas
pop
mov
pop
into
test
out
mov
lret
mov
or
jmp
mov
inc
gs
jmp
push
aad
sub
adc
dec
fnstcw
cmp
inc
lret
aam
lret
inc
pusha
push
pushl
movb
movb
movb
jmp
movb
jmp
loop
icebp
nop
arpl
cmc
dec
leave
pop
cmp
push
aad
lock
data16
fcompl
push
add
movb
jmp
mov
fiadds
and
outsl
and
xchg
mov
call
mov
mov
jmp
adc
pop
roll
shll
inc
mov
mov
mov
clc
jmp
add
add
arpl
xchg
gs
aad
dec
decl
jb
insl
hlt
pop
mov
cmp
fildl
dec
movb
movb
movb
movb
mov
call
jmp
inc
data16
and
pushf
jmp
xor
sbb
cmp
jae
xchg
repnz
add
jmp
pusha
mulb
dec
xchg
add
out
adc
pop
xadd
les
xchg
testb
js
xlat
pop
adc
or
out
les
jb
js
ljmp
jl
pushf
test
sub
pop
mov
pop
add
leave
ret
jmp
popf
jmp
movsl
cmp
ret
push
lds
pop
test
mov
jmp
and
out
insb
loop
je
call
cmpb
xchg
jmp
into
dec
frstor
jg
pushl
jmp
jbe
add
push
mov
stc
and
ss
mov
lcall
jmp
fs
popf
insb
test
cli
std
jmp
mov
lods
lret
inc
movsb
xchg
and
push
xor
cmp
fdivl
in
movb
movb
movb
movb
movb
jmp
cmc
jp
jp
mov
std
in
pusha
notb
mov
and
cmp
jne
addl
jmp
lret
pop
iret
stos
pop
rcr
dec
fistpll
shlb
pop
jb
test
pop
adc
cmpl
add
jmp
ljmp
lcall
shll
std
insl
hlt
pop
mov
mov
mov
ret
cmp
inc
testb
or
mov
jmp
stos
mov
add
add
sbb
cwtl
push
imul
lret
pop
ds
ds
jmp
push
lea
jmp
lds
mov
cwtl
movsb
cmp
gs
pushf
outsl
movsb
movzbl
jmp
mov
jecxz
jmp
js
pop
jmp
pop
fisttps
push
add
notl
jb
push
cld
add
pusha
mov
mov
mov
andb
sub
jo
jmp
cmp
les
mov
mov
lcall
mov
sbb
push
jmp
sub
jecxz
stc
cwtl
imul
fistl
mov
lea
add
add
test
je
mov
jmp
mov
jmp
cwtl
adc
inc
popa
inc
faddl
add
add
pop
and
pop
movsl
sub
add
adcb
loop
mov
scas
ds
xor
jmp
inc
rolb
shlb
pop
bound
mov
mov
jmp
fwait
or
adc
push
xor
data16
lret
jmp
jns
arpl
cmc
inc
data16
popa
add
push
lock
lahf
push
fs
insl
hlt
pop
out
sub
rorl
call
jmp
cmp
filds
mov
cmpsb
add
jl
outsl
cmp
jmp
push
jmp
push
cwtl
push
imul
jo
xorl
lahf
movb
movb
movb
movb
movb
jmp
rol
ds
jmp
lahf
das
pop
jmp
push
xchg
cmp
add
jmp
loop
notl
jmp
sub
mov
inc
mov
test
es
lcall
test
jne
mov
jmp
ret
mov
jl
testb
and
push
sub
jmp
ja
xchg
testb
incl
icebp
inc
enter
sub
mov
cmp
pop
pop
lea
call
pop
jmp
mov
enter
jmp
inc
iret
pop
cmp
add
cmpsb
xor
scas
insb
cmp
pop
in
pop
jmp
out
jl
jne
xor
mov
inc
mov
fmull
push
in
xchg
jb
xor
lea
call
mov
call
push
lea
jmp
loop
adc
mov
jmp
mov
jmp
fimull
push
in
or
push
ret
cmpsb
push
in
inc
aam
dec
jmp
sub
add
xchg
popf
pushl
jmp
dec
mov
inc
or
push
push
mov
gs
push
dec
fisttpl
fnstsw
cli
lock
bound
dec
movsb
test
repnz
decl
add
add
stos
cmp
sub
xchg
or
sbb
add
aaa
lret
pushf
jmp
addr16
sbb
and
mov
pushf
outsl
mov
jo
xorl
std
decl
and
decl
jmp
mov
xchg
repnz
jmp
ja
popa
add
add
jb
xchg
add
test
shrl
lock
popa
jmp
jo
jmp
mov
lods
mov
cmpsl
mov
xchg
icebp
add
and
xor
adc
sar
inc
adc
fsts
mov
inc
in
mov
jmp
insb
loopne
adc
and
xor
fadd
inc
popa
movb
movb
movb
movb
jmp
and
add
stc
push
jmp
cs
push
lds
mov
inc
xlat
inc
and
jbe
ljmp
push
mov
sub
jmp
test
and
mov
and
add
mov
jmp
sbb
push
jns
aas
mov
mov
and
insb
scas
and
sahf
rorb
push
add
add
adcl
add
outsb
cmc
gs
adc
dec
and
jmp
repnz
loop
je
fadds
mov
adc
dec
addl
sbb
push
pop
lea
call
mov
jmp
fcomps
test
fisubrl
push
lea
lea
call
pop
jmp
loope
notb
daa
inc
mov
je
popa
add
adc
or
mov
lods
sahf
jne
jmp
insb
out
jg
jmp
in
sbb
sbb
xchg
sbb
aad
shlb
xchg
and
jmp
movsl
xor
xchg
test
jmp
push
jmp
les
mov
push
xor
sbb
mov
sbb
jns
dec
sub
jb
lea
jmp
mov
jmp
leave
pop
leave
test
out
roll
mov
jmp
outsb
cld
fwait
jbe
rep
mov
xor
call
push
lea
mov
jmp
aas
scas
cmp
mov
xchg
add
jae
xchg
cltd
adc
callw
std
jmp
xlat
inc
shlb
popa
lcall
push
jmp
mov
test
inc
aam
dec
lods
cli
push
and
repz
je
push
mov
lea
call
pop
xor
jmp
in
jb
xchg
faddl
mov
mov
jmp
fstps
test
nop
std
cmp
inc
pusha
pusha
jmp
mov
jmp
inc
les
int3
and
mov
inc
mov
mov
mov
out
decb
mov
jmp
aam
sbb
mov
jmp
fisttps
je
mov
jle
jne
test
pop
enter
insl
xor
fimull
insl
jge
andb
jmp
mov
mov
xchg
repnz
mov
shll
mov
pop
pop
sub
add
xchg
popf
pushl
jmp
scas
es
cs
inc
and
and
push
ret
cmpsb
push
hlt
cmp
data16
mov
and
cmp
jne
addl
jmp
cmpsl
popa
rorl
mov
jmp
pop
cltd
or
pop
sub
push
xor
js
into
pop
cmp
jg
mov
add
add
fcom
inc
shlb
mov
and
popf
sub
in
lea
sar
inc
adc
daa
mov
inc
mov
int
iret
stos
pop
rcrb
lods
aaa
je
jmp
cmc
mov
jbe
rolb
add
jmp
pop
repnz
cmpsl
cmp
push
enter
and
lahf
add
cmp
jmp
loopne
aas
lret
mov
jmp
adc
insb
out
lcall
add
jmp
push
popf
or
inc
shll
add
adc
loopne
adc
sub
pushf
jmp
js
imul
cmp
inc
nop
daa
lea
jmp
push
push
jmp
fstps
test
cltd
push
icebp
add
adc
push
popa
nop
gs
pop
leave
ret
jmp
adc
js
push
lds
pushf
fsts
push
cmp
xor
jmp
je
xchg
cmc
add
inc
int3
inc
and
shll
out
mov
cvttps2pi
in
push
jmp
je
jmp
cmpsb
sub
sbb
scas
aas
pop
test
fucom
int3
test
jmp
xchg
add
notl
cmp
inc
rolb
shlb
int3
popf
sbb
add
xor
mov
popl
jmp
pusha
push
jmp
mulb
xchg
popa
aad
xlat
mov
clc
dec
fimull
fidivrl
sub
lds
pop
orl
jmp
dec
rolb
shlb
inc
fdivl
in
out
jbe
cmpl
in
sbb
push
inc
cmp
jb
lea
call
jmp
xchg
push
pushf
sti
push
xchg
test
xchg
repz
mov
leave
call
sbbb
jmp
mov
jmp
rclb
mov
cmpsb
shll
xor
gs
mov
mov
mov
sub
jmp
call
jmp
jp
insl
hlt
pop
in
stc
jno
xorb
mov
sbb
jne
jmp
inc
lret
lret
insl
std
test
push
jecxz
push
in
pop
and
add
push
mov
lea
call
jmp
das
cmp
pushl
jmp
arpl
arpl
cmc
push
inc
leave
pop
cmp
sbb
push
xchg
mov
jmp
add
jg
arpl
cmc
inc
es
sbb
jg
adc
add
push
std
lcall
test
jmp
push
push
lea
mov
mov
jmp
xchg
adcl
cmp
mov
mov
es
mov
push
std
jmp
or
lds
mov
stos
int
ljmp
fnsave
decl
jmp
flds
bnd
add
xor
dec
cltd
add
cs
inc
outsl
pushf
jmp
xor
inc
push
xor
pop
jg
div
sub
jmp
mov
enter
inc
and
jmp
scas
test
add
add
jmp
fwait
sbb
or
pusha
mov
jmp
dec
iret
pop
cmp
sub
fdivl
gs
or
je
lea
in
or
cli
popf
insb
lahf
pop
mov
gs
jbe
fisttpll
out
pop
rolb
shlb
inc
lods
pop
leave
ret
jmp
popa
mov
ret
nop
cmp
jmp
lret
cmpl
push
imul
inc
aad
dec
cltd
push
mov
xlat
and
mov
push
mov
jmp
inc
lret
lret
mov
inc
mov
scas
test
add
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
jl
jge
negl
jo
loop
vrsqrtss
pusha
popa
mov
jmp
pop
enter
popa
lahf
setg
or
add
loop
cli
outsb
cld
fwait
jbe
out
jns
mov
jl
je
out
sub
es
cli
xor
shlb
outsb
inc
add
je
jmp
push
jmp
mov
mov
inc
shll
xchg
repz
mov
movsb
insb
push
and
add
add
flds
add
pop
or
xor
add
sahf
pop
xchg
repnz
add
add
in
pop
xchg
adc
xchg
adc
mov
popa
gs
jmp
imul
mov
inc
daa
cmpsb
xor
scas
dec
imul
push
cmc
or
xor
movb
inc
mov
pop
xor
mov
sub
inc
jmp
leave
dec
ret
mov
jmp
dec
lret
pop
ds
push
jecxz
push
in
pop
rolb
shlb
jmp
or
sbb
js
adc
and
and
call
jmp
leave
or
mov
lea
jmp
mov
jmp
call
jmp
adc
add
mov
andl
mov
cmc
mov
test
lahf
fmull
mov
aaa
mov
lea
jmp
sbb
jmp
dec
fisttpll
out
cmc
notl
sbb
das
push
pushf
xor
addr16
push
jmp
mov
mov
call
jmp
pop
lds
iret
das
sbb
pop
lret
pop
ds
xor
sbb
xor
mov
sub
push
push
test
je
push
pop
push
mov
lea
jmp
push
sbb
jmp
jl
jo
loop
scas
aaa
cmpsl
ret
cmc
jne
mov
stos
mov
inc
and
cmpsl
and
fistl
sbb
pop
jmp
imul
test
jmp
push
jmp
js
outsb
or
adc
addr16
sbb
jns
mov
mov
mov
jmp
or
xchg
xchg
lock
jae
fs
push
pop
rolb
shlb
sbbl
rorl
call
mov
test
ja
xorb
push
cld
jb
xchg
mov
pop
jmp
xor
sub
insl
gs
sub
jmp
cmc
jg
mov
idivb
mov
push
ret
ret
aam
sub
cmp
pushl
ret
sbb
mov
popf
jmp
cmp
je
jo
loop
in
loope
jae
inc
inc
and
imul
xor
jmp
xor
mov
stc
cmp
fnsave
mov
ret
jmp
mov
test
push
hlt
icebp
pusha
mov
mov
jmp
aad
ret
mov
xchg
adc
aaa
mov
scas
leave
mov
xchg
in
bound
xchg
cmc
add
sub
or
jne
mov
jmp
test
xchg
lock
cmp
addr16
andb
sub
jmp
xchg
adc
fimuls
push
jno
imul
repz
popa
jmp
cli
ja
xorb
gs
pushf
outsl
mov
mov
mov
call
pop
jmp
insb
mov
jmp
mov
test
cmp
insl
std
test
loop
fwait
cltd
xor
jo
mov
and
cmp
jne
addl
jmp
pop
lcall
add
daa
sub
outsb
cld
fwait
jbe
add
movzbl
jmp
push
addl
pop
lret
scas
pop
bnd
jno
jecxz
lcall
sbb
mov
ret
sub
sub
add
jmp
cmp
jmp
xchg
pop
xchg
repnz
cmpsl
repz
pop
int
addr16
jno
jmp
call
adc
push
lea
mov
mov
jmp
popa
mov
jmp
ljmp
jb
xchg
cmp
and
pop
int3
dec
jmp
push
xchg
add
jnp
fisttps
inc
rclb
and
popl
jmp
in
pop
push
jmp
mov
mov
inc
xchg
loope
sti
sahf
insl
sahf
shrb
push
std
insl
add
mov
jmp
std
js
mov
xchg
sbb
mov
jmp
jg
shr
add
add
pop
jmp
je
insl
hlt
pop
out
mov
jg
outsb
outsl
out
adc
sbb
dec
in
loope
andl
jmp
pop
jmp
jecxz
loop
je
mov
xchg
icebp
add
sti
jbe
cmpl
adcb
xorb
jmp
jmp
mov
jmp
mov
lcall
xchg
add
mov
dec
fidivrs
ds
fildl
add
rolb
mov
sbb
ds
mov
inc
mov
rcr
cmpl
je
push
push
mov
mov
test
jmp
nop
aam
call
mov
call
mov
cmp
jmp
push
jmp
sbb
inc
mov
jmp
fs
insb
or
lds
stos
cmp
dec
lret
push
shll
out
xor
les
xchg
gs
pusha
notb
addr16
js
pop
repnz
lods
jae
push
pushf
movsl
es
cs
bnd
xchg
pusha
out
adc
or
mov
mov
sub
std
decl
add
incl
ret
jmp
lods
je
jmp
movsb
and
sbb
jne
jmp
inc
lret
pop
ds
cli
jo
xorl
adc
inc
xor
test
jmp
jge
imul
pop
and
fstl
mov
ret
cmpb
xchg
push
push
mov
call
jmp
cmp
mov
push
call
jmp
jbe
pop
sbb
addl
jmp
dec
rcll
add
push
mov
lods
pop
jmp
add
fdivl
in
push
outsl
or
scas
test
stos
call
test
je
lea
push
pushl
mov
jmp
xor
std
jge
arpl
cmc
inc
push
popf
or
inc
and
outsl
xchg
or
cltd
pop
jne
jmp
pop
enter
popa
add
dec
fstpt
sti
jo
es
jmp
gs
insl
hlt
pop
and
and
push
roll
aad
lods
loope
test
decl
add
push
push
jmp
rorb
push
rorl
xchg
add
add
mov
add
add
add
sahf
push
inc
cmc
or
jmp
scas
pusha
jmp
mov
enter
loop
notl
clc
js
insb
or
clc
mov
stos
sbb
jp
mov
mov
mov
andb
jmp
jbe
addr16
sub
int3
divb
xorb
dec
or
jmp
lds
cltd
roll
add
dec
push
fisttpll
out
dec
push
xor
sub
cwtl
push
imul
add
add
mov
jmp
sub
rorl
push
repnz
fimull
fimull
add
xchg
popa
jmp
sub
add
jmp
fs
jmp
pop
rolb
shlb
adc
test
pop
test
test
add
aas
sub
add
jmp
and
hlt
xchg
mov
mov
ret
cmp
jmp
imul
add
pusha
lock
inc
mov
mov
sbb
push
lcall
xor
decl
xchg
inc
inc
and
ja
xlat
inc
and
push
dec
adc
test
incl
add
add
movzbl
jmp
in
out
jo
or
xor
sbb
add
add
jmp
xor
iret
push
lds
adc
pop
flds
mov
jle
call
fsubl
xlat
pop
lret
scas
pop
xchg
dec
into
pop
cmp
ds
cmpsl
ret
pop
inc
mov
push
call
xchg
mov
es
imul
ret
push
mov
mov
test
mov
mov
pop
xchg
repnz
imul
mov
std
or
sub
inc
roll
aad
mov
into
pushl
xorb
mov
clc
mov
and
jmp
rolb
add
jmp
and
cmp
jge
push
test
push
fdiv
jge
je
and
push
cld
dec
cmc
data16
xchg
outsb
das
mov
movsb
cmp
in
bound
fnstcw
je
out
pop
std
movsb
mov
push
mov
test
je
lea
jmp
push
lds
iret
push
sbb
cld
call
and
lret
and
push
add
add
pop
or
js
inc
mov
or
lret
jnp
adc
rolb
fisttpl
fnstsw
imull
test
pop
int3
stos
data16
pop
ljmp
outsl
gs
sbb
and
daa
mov
and
leave
dec
fistpll
and
mov
add
lret
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
or
or
or
and
fsubrl
add
add
js
adc
enter
in
lret
lret
loope
or
mov
inc
mov
add
jg
outsb
or
das
scas
sub
js
mov
xlat
arpl
xchg
gs
pop
xlat
inc
and
cmp
add
lea
std
or
xor
in
jge
mull
dec
fnstcw
and
adc
adcl
mov
dec
mov
repnz
subl
push
ret
cmpsb
push
loop
mov
inc
inc
and
imul
cmp
scas
outsb
mov
ret
cmp
xor
int
aam
xchg
add
push
rorl
mov
ds
test
xchg
push
test
push
idivb
mov
pop
fstpt
cmp
hlt
push
cld
sub
push
imul
adcl
adcb
andb
mov
sbb
lret
mov
mov
clc
outsb
or
pop
fists
mov
mov
xchg
pop
bound
nop
arpl
mov
xchg
adc
loope
inc
rolb
shlb
and
push
mov
nop
testl
fildll
jmp
push
mov
ja
xorb
out
jl
negb
cs
inc
mov
arpl
xchg
cmc
add
lods
and
jge
xchg
add
jp
add
std
or
add
jbe
add
push
sub
stos
cs
lret
lret
sub
sbb
iret
cmp
in
push
push
mov
test
jne
xor
jmp
jmp
rcrl
stos
pop
sbb
shlb
xorb
xor
sti
imul
cmp
pop
iret
stos
pop
shrb
or
dec
jle
arpl
cmc
pop
adcb
out
mov
push
negb
sbb
cmp
mov
mov
sbbl
inc
fisttpll
out
push
lret
lret
and
rcll
inc
xchg
adc
add
inc
aam
dec
cmpsb
pushf
sbb
aad
int3
pop
fisttps
flds
mov
stos
into
cmp
jmp
icebp
bnd
cmpl
mov
jns
pusha
rcrl
stos
pop
xchg
rcrl
test
add
adc
cwtl
push
imul
lea
dec
fnstcw
and
movsb
ret
mov
mov
iret
jl
adc
adc
and
mov
sub
lret
mov
or
mov
cld
call
and
lret
and
or
add
ja
jnp
adc
lcall
in
lret
jle
adc
stc
mov
insb
scas
cli
notl
cmp
icebp
push
jae
arpl
cmc
je
adcb
addb
pop
enter
xlat
push
lret
mov
dec
fistpll
fistpll
xor
pop
pop
fmuls
fmuls
jg
imul
dec
sub
adc
jb
in
sbb
imul
and
inc
and
push
sbb
add
inc
pop
xlat
inc
and
sbb
shlb
jl
jne
xor
mov
inc
mov
dec
fmuls
fsubrs
int
and
jl
xchg
add
and
xor
mov
nop
loop
adc
testb
sbb
lret
lret
sub
add
ja
jnp
adc
sub
add
lret
popf
jg
adc
ret
push
sbb
or
or
or
or
adc
or
sub
add
ja
jl
adc
adc
inc
sbb
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
push
lret
scas
cmp
rcll
enterw
push
xchg
mov
ret
clc
pusha
notb
bound
and
xchg
xlat
dec
fidivrs
js
ljmp
dec
jle
mov
and
xor
ss
mov
shlb
fcmovu
pop
int3
stos
mov
pop
enter
push
fisttps
flds
cmpsl
inc
loope
cltd
push
add
pop
jp
imul
das
dec
push
xor
or
int3
imul
daa
inc
mov
in
jge
je
sub
and
and
nop
push
popa
nop
and
dec
ret
std
xor
ss
mov
or
mov
and
sbb
setne
push
xor
daa
mov
lods
cmp
rolb
rcrb
mov
lods
ficomps
stos
mov
push
mov
movsb
ret
shrb
adc
pop
fimull
fidivl
les
mov
mov
adc
push
les
lret
sti
pop
xlat
inc
and
or
int
in
bound
lcall
mov
jp
jp
iret
pop
int3
stos
iretw
insb
cli
push
lods
lret
inc
out
int
iret
stos
pop
sarb
test
imulb
je
cwtl
add
roll
sarl
scas
xor
cmpsl
aas
scas
lret
sbb
dec
into
pop
cmp
pop
jg
xchg
cmc
add
js
outsb
or
adc
inc
xlat
mov
stos
pop
popf
pop
leave
adc
fs
jmp
adc
pop
faddp
arpl
sbb
cld
call
and
lret
and
insb
add
add
js
adc
pop
mov
mov
lret
mov
orb
decb
mov
mov
xchg
jb
jl
mov
fcoml
pop
mov
les
inc
into
pop
cmp
jno
pop
xchg
repnz
es
cmp
push
xchg
xor
dec
ret
loop
out
jg
jmp
pop
ljmp
cmpb
cmp
js
mov
in
jg
mov
jns
bound
adc
cld
call
and
lret
and
sub
add
ja
jle
adc
out
ss
lret
add
lret
ljmp
cwtl
decl
leave
jecxz
out
mov
test
mov
and
xor
or
or
or
or
add
or
lret
or
or
lret
or
add
lret
xor
xor
add
ja
jbe
adc
push
lret
lret
xor
adc
js
rol
test
in
lret
lret
dec
ja
adc
scas
push
sbb
rorl
dec
mov
mov
push
mov
adc
or
clc
outsb
or
sbb
push
lret
scas
push
fisttpll
out
movsb
sub
xchg
add
push
sub
in
jge
testl
cwtl
cltd
setg
or
mov
xorb
lods
and
sbb
test
fnstsw
into
test
cld
fwait
jbe
int3
push
lret
mov
lock
bound
data16
int
and
push
mov
lea
inc
and
ss
lret
lret
jne
mov
cmp
scas
sub
xchg
jb
jp
inc
fidivrl
pop
jb
jl
push
dec
frstor
xchg
pusha
js
fs
pop
cli
jnp
mov
enter
dec
mov
adcl
into
pop
cmp
pusha
mov
lahf
and
jno
jbe
loopne
xchg
add
ds
aas
pop
test
push
std
dec
xchg
add
clc
outsb
or
cmp
add
adc
arpl
cmc
sbb
imul
pop
cmp
push
sub
xor
scas
addl
xchg
aad
lret
mov
mov
mov
cltd
std
jg
mov
divl
xchg
mov
rorl
cmp
call
xor
int
iret
arpl
arpl
cmc
push
sbb
xchg
ficomps
lret
cmp
gs
pushf
outsl
ljmp
insb
out
jl
idivb
cmp
lods
mov
or
sbb
mov
add
cmp
je
jmp
dec
roll
aad
divl
cmpl
pop
into
test
mov
sbb
aaa
mov
inc
mov
push
inc
and
ss
clc
lahf
push
and
xchg
sbb
mov
lret
dec
fstpt
adc
pop
enter
sub
xchg
mov
sbb
push
mov
pop
lods
sbb
mov
fldt
dec
fstpt
mov
dec
fdivrl
mov
and
popf
push
xchg
repz
in
clc
pusha
notb
sub
push
test
mov
sbb
rolb
add
pop
rolb
inc
test
lcall
aad
mov
inc
mov
cmp
xor
jmp
pushf
push
mov
gs
cmp
mov
out
gs
pushf
outsl
mov
dec
adc
push
mov
nop
testl
xchg
outsb
mov
xchg
push
lret
sti
pop
xchg
add
and
or
out
sbb
rcr
sbb
jmp
adc
dec
add
add
jl
adc
mov
jp
in
lret
lret
sub
add
ja
jg
adc
jecxz
mov
lret
mov
es
inc
mov
int3
pop
leave
test
lock
cmp
or
ljmp
sahf
insl
test
inc
fidivrl
add
jnp
call
cld
lock
in
icebp
popa
add
jbe
push
test
push
xlat
cwtl
sbb
out
jl
negb
mov
fdivl
mov
inc
mov
out
lds
xor
xor
aad
gs
jge
testl
mov
dec
fdivrl
shlb
daa
inc
mov
jmp
cli
popf
insb
mov
dec
mov
mov
test
xor
sbb
inc
inc
and
ja
xchg
pop
bound
stos
iretw
mov
mov
and
in
dec
xchg
or
in
xlat
sbbb
call
xor
scas
inc
cmc
insb
loop
je
jecxz
adc
add
cmc
gs
jp
lret
pop
ds
mov
lret
dec
fnstcw
test
pop
clc
test
adc
testb
sbb
lret
loop
adc
add
add
add
lret
add
add
add
lret
clc
adc
testb
sbb
lret
fsubl
add
ja
xchg
or
js
loope
outsl
inc
in
lret
lret
and
add
ja
xchg
or
js
and
dec
sub
lret
lret
fcoml
cli
push
mov
xchg
adc
pushf
sbb
dec
into
pop
cmp
ds
fimull
fidivrl
pushf
sbb
pop
jl
outsb
or
or
push
neg
push
les
jbe
loopne
idivb
mov
movsl
push
cmpsl
and
cmp
or
and
scas
pop
cltd
enter
dec
in
repz
cmpsb
cmp
jae
xchg
mov
mov
and
dec
mov
sbb
xor
adc
sbb
outsb
cld
fwait
jbe
mov
into
xchg
or
pushf
xor
dec
dec
rolb
rclb
push
mov
aas
pop
test
jae
data16
imul
pop
jp
jb
movsb
ret
rclb
pusha
xchg
inc
mov
fcmovnu
pop
iret
stos
pop
popf
adc
mov
scas
lret
lock
mov
adc
push
fmuls
fdivrs
mov
inc
mov
jno
xchg
testb
mov
sub
mov
mov
and
sarl
mov
loop
je
mov
lcall
adc
pop
jb
sub
inc
shlb
pop
and
aaa
adc
mov
xchg
adc
clc
data16
xchg
outsb
jmp
ss
dec
fdivrl
in
jg
or
push
pushf
sti
push
repz
push
cmc
or
pminub
mov
dec
mov
dec
fstpt
in
jle
ss
inc
mov
out
imul
in
sbb
adc
adc
lret
add
add
add
lret
add
push
add
add
mov
adc
mov
xor
lret
lret
add
pop
loop
adc
or
lret
lret
testb
mov
cmp
push
jg
fadd
add
add
cld
call
and
lret
and
inc
add
add
xchg
adc
mov
lret
lret
cmp
add
ja
orl
js
dec
loopne
jmp
lret
pop
mov
adc
xchg
jbe
loope
adc
adc
push
test
mov
das
stc
add
dec
ret
ret
fmuls
fsubrs
mov
out
jle
mov
stc
or
repnz
push
rcll
push
cmp
aas
lret
cs
call
cli
lock
bound
movsl
dec
jb
bound
and
xchg
imul
sbb
ds
dec
fstpt
int
lea
pop
cmp
xor
dec
sub
sbb
xchg
lret
dec
frstor
inc
mov
ficoml
mov
push
lds
in
imul
insl
pop
fisttpl
dec
lds
iret
push
repz
cmc
daa
or
dec
xor
push
lds
sbb
xchg
and
push
lret
cmc
lret
pop
leave
test
call
pop
into
mov
add
iret
pop
leave
test
out
repnz
pushf
outsl
lret
cmp
push
push
lds
fnsave
imul
mov
mov
jl
jne
add
outsl
lcall
fdivrs
mov
test
sbb
or
fs
addr16
sub
dec
adc
adc
dec
sub
xor
scas
aas
pop
test
in
sbb
push
sahf
or
cmpsb
inc
out
gs
pushf
outsl
sahf
push
jp
in
dec
lea
nop
testl
cmpsl
push
nop
mov
test
fdivl
in
outsb
add
fmuls
fsubrs
inc
shll
mov
and
jnp
jbe
jo
loop
sbbb
out
sbb
aam
out
dec
mov
test
adc
xchg
adc
push
mov
push
lret
mov
js
mov
push
enter
dec
iret
push
mov
shll
and
scas
lret
push
popf
or
lret
lret
adcl
push
mov
shrl
scas
cmp
mov
dec
les
int3
aas
leave
cmp
or
add
add
cld
call
and
lret
and
push
add
add
mov
adc
mov
lret
lret
movsl
mov
adc
arpl
xchg
and
mov
jne
push
push
xchg
repz
int3
imul
adc
dec
cmp
dec
fisttps
stos
cmp
sbb
push
ret
cmpsb
push
cli
xor
loop
jmp
jge
jecxz
in
jg
fimull
movsb
push
repnz
ret
push
lds
mov
mov
mov
dec
frstor
mov
or
jp
outsb
cld
fwait
jbe
pop
xchg
or
je
stc
js
mov
leave
dec
frstor
sub
xor
push
jns
jge
and
dec
ret
cmpsl
cltd
adc
test
jge
push
lods
pop
cmp
push
icebp
jle
mov
cmp
comiss
inc
aam
sub
and
mov
dec
sti
movsl
xor
arpl
xchg
shlb
fs
push
int
iret
stos
pop
shl
popa
icebp
nop
arpl
or
repz
lea
mov
sbb
in
pop
cmc
pusha
insb
or
orl
stos
sub
dec
fdivrs
repnz
mov
out
fisttps
fstps
cmp
sub
outsb
inc
lds
iret
cmp
jb
in
rorb
dec
mov
popf
jns
mulb
sbb
ret
add
push
jns
fs
sub
enter
inc
mov
in
jle
mov
jp
leave
pop
iret
stos
pop
repz
lock
lret
and
and
add
push
mov
cmp
push
mov
aad
sbbl
xor
or
jbe
cmpl
jno
xorb
jp
jp
pop
xorb
or
mov
orl
mov
movsb
and
push
xor
inc
dec
into
pop
cmp
pop
jl
insl
hlt
pop
in
in
sti
sahf
insl
and
cmc
pushf
outsl
mov
iret
hlt
stc
std
data16
jmp
cld
call
and
lret
and
inc
add
add
xchg
adc
or
xchg
push
in
lret
lret
sahf
cmpsb
or
mov
mov
mov
mov
fimuls
dec
pop
iret
pop
cmp
pusha
popf
or
push
lds
cmp
xor
adc
cmp
push
test
push
cltd
popa
insb
or
cmp
dec
lds
mov
cmpsb
rolb
inc
test
mov
xor
pop
adcb
adcb
imul
adc
imul
cltd
adc
in
jge
notl
xchg
pushf
sti
push
in
cmp
cld
xchg
cmc
add
jb
insb
or
les
mov
gs
xor
adc
pop
and
xchg
or
cmp
int
and
fs
pop
jp
ds
add
insb
or
mov
lods
outsl
pop
lds
iret
das
filds
mov
push
imul
popf
or
sub
pop
fimull
fidivl
divl
mov
ss
dec
mov
pop
loop
mov
pushf
sti
push
shll
ds
jecxz
lcall
jo
loop
sbb
enter
inc
mov
push
mov
pop
mov
loopne
insb
or
mov
call
stc
or
cmpsb
pop
xchg
add
xor
adc
adc
lock
aad
xchg
add
popf
or
std
insl
hlt
pop
out
and
out
adc
pop
rorl
movsb
push
sar
pusha
notb
dec
das
ficoml
movl
cs
mov
insl
pushf
jns
add
std
or
sbb
jnp
movl
fwait
or
outsb
dec
int3
inc
and
movsl
int3
aas
into
inc
lret
lret
ljmp
cld
fwait
jbe
push
jp
in
dec
pop
iret
stos
pop
mov
adcb
addb
jns
jmp
pop
into
pop
cmp
pusha
pop
roll
aad
addr16
gs
dec
cmc
fs
popf
insb
lds
test
jecxz
push
in
mov
mov
and
adc
rcll
push
int3
inc
and
fidivrs
jg
jmp
jne
add
push
ret
cmpsb
push
aam
insb
loop
je
dec
roll
aad
movsb
and
and
push
aad
sub
and
gs
js
mov
xchg
xchg
lock
call
stos
and
push
shlb
leave
cmp
dec
fistpll
fstl
mov
or
push
mov
es
push
outsl
or
scas
imul
or
dec
mov
mov
sbb
mov
cmp
jle
mov
dec
mov
push
mov
stc
or
pop
rclb
and
jb
xchg
dec
inc
and
ss
add
adc
adc
mov
cmpsb
shll
pop
fdivl
in
inc
rclb
sub
inc
and
xor
es
rcrb
or
dec
pushf
sbb
imul
mov
jno
push
inc
and
cmp
fs
or
aaa
xchg
sub
add
pop
xchg
adc
and
cmp
jne
addl
mov
jmp
int3
mov
xchg
add
je
add
add
inc
stos
jno
imul
enter
into
inc
aam
dec
stos
rcrl
scas
pop
test
add
call
mov
std
or
in
stc
cwtl
imul
pop
mov
xchg
loopne
loopne
jb
lock
icebp
nop
arpl
rclb
push
loope
popa
icebp
nop
arpl
push
mov
mov
jle
and
xor
ja
scas
aas
pop
test
fs
push
pop
push
xor
sub
or
add
xchg
lods
std
lcall
ljmp
dec
fisttpl
fstpl
fwait
decb
adc
es
push
push
call
addl
lock
xor
or
push
lret
mov
imul
sahf
or
cmpsb
dec
and
xor
ret
mov
mov
sbb
cmpsl
das
mov
xchg
pop
bound
or
aas
sub
lods
daa
mov
and
fildll
mov
jns
and
hlt
lea
aad
lea
testb
pop
bound
inc
mov
lds
mov
mov
pop
iret
stos
pop
test
pop
ds
xchg
or
rorb
mov
fdivrs
into
test
sbb
or
arpl
jo
loop
arpl
jnp
in
adc
daa
repnz
dec
frstor
shll
ficoms
pop
scas
insl
out
adc
or
cli
push
jno
xorb
fisttps
lret
add
add
mov
adc
pusha
dec
or
in
lret
clc
xchg
or
mov
mov
test
or
cmp
mov
sbb
push
ret
ret
ret
ret
std
insl
hlt
pop
lods
imul
testb
jnp
out
jp
jp
imul
lods
lret
inc
test
jge
je
sbb
subl
frstor
cmp
push
pop
into
test
adc
dec
push
inc
and
ss
outsl
or
out
cmp
push
lds
xor
faddl
add
add
adc
lret
loop
adc
or
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
lret
or
or
or
lret
hlt
xchg
or
in
lret
push
and
mov
dec
mov
adc
or
into
loope
clc
lahf
push
mov
lods
mov
mov
mov
shll
jg
add
and
pop
leave
test
fwait
in
pusha
notb
insl
hlt
pop
mov
mov
pop
int
and
fs
jne
out
inc
adcb
jecxz
scas
inc
rolb
sarb
mov
dec
mov
sbb
inc
fimuls
add
insb
loop
je
cld
imul
insl
addl
sub
popa
lea
and
xchg
xor
movl
sbb
xchg
jle
pop
iret
stos
pop
cmpb
cmc
add
xchg
adc
push
ret
cmpsb
push
cmpsb
pop
jecxz
push
in
enter
inc
mov
pop
jne
xchg
testb
lods
pop
and
rolb
rolb
cmpsl
sub
xchg
add
xor
repnz
aam
aad
dec
in
pop
leave
test
call
xchg
cmp
xchg
jb
adcl
push
lcall
mov
sbb
cmpsl
jmp
insb
mov
fimull
inc
and
cmp
dec
sub
shll
xor
or
xchg
add
jns
ret
push
lds
out
cmc
pushf
outsl
mov
push
lret
mov
lret
mov
add
ja
mov
or
test
lret
lret
push
add
add
mov
mov
lret
lret
sub
fdivrl
jmp
xor
in
lret
pushf
xchg
rorb
mov
add
add
adc
push
test
mov
mov
fldcw
cs
adc
mov
push
adc
fdivrl
add
add
cmpsb
or
js
sbb
in
lret
lret
addl
sub
cld
je
lea
jae
xchg
mov
fwait
decb
sbb
cmp
mov
pop
mov
cmp
mov
lcall
test
scas
lret
sub
sub
or
mov
or
lret
adcl
mov
inc
mov
in
jnp
mov
pop
lret
pop
ds
insl
icebp
popa
add
jbe
pop
enter
arpl
ja
loope
sub
pop
jl
xchg
cmc
add
mov
cmpsl
ret
or
sbb
je
arpl
xchg
gs
dec
fstpt
out
mov
sbb
arpl
jle
call
or
sbb
mov
lods
and
notb
xchg
or
mov
fwait
or
mov
jecxz
mov
adc
testb
and
lret
lret
add
add
add
add
add
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
push
add
add
xchg
or
js
mov
lret
lret
add
pop
loop
adc
or
lret
lret
mov
lret
orb
sti
push
aam
or
mov
sahf
mov
mov
xchg
mov
xchg
xchg
xchg
adc
lcall
and
dec
fdivrs
das
dec
mov
ret
filds
mov
inc
and
cmc
pushf
outsl
ljmp
rclb
mov
arpl
cmc
sbb
push
lahf
push
inc
rcll
and
pop
into
test
pop
cmp
add
or
pop
inc
and
sub
adc
jne
fcoms
mov
cltd
push
es
adcl
and
xor
adc
adc
sbb
push
ret
cmpsb
push
cli
sub
jmp
das
push
lcall
bound
jo
loop
lds
stos
data16
data16
xchg
outsb
test
adcb
subb
loope
jae
ljmpw
stc
orb
and
sub
push
inc
push
xor
es
xorb
push
mov
punpckhdq
push
std
push
jp
jp
and
cmp
mov
adc
nop
sbb
ljmp
lahf
cli
or
mov
sbb
pop
sub
xor
inc
rolb
sarb
rcll
jo
mov
mull
xchg
popa
fisubs
mov
inc
mov
jbe
jo
loop
mov
cltd
xchg
or
in
xlat
sub
mov
mov
mov
hlt
push
lahf
push
sahf
pop
xchg
repnz
dec
and
mov
pop
cmp
and
adc
push
add
call
in
cli
popf
insb
mov
pushf
xor
pop
or
add
add
sbb
lret
faddl
add
add
lret
clc
adc
testb
sbb
lret
fmull
add
add
mov
mov
lret
lret
inc
add
add
rorb
js
cmpsl
mov
add
lret
mov
add
ja
mov
adc
add
repz
in
lret
lret
mov
mov
mov
push
add
dec
ret
mov
or
inc
leave
pop
cmp
sub
outsl
lcall
daa
inc
mov
ja
add
cmp
jmp
lret
xchg
push
xchg
repz
mov
xchg
les
int3
jge
mov
push
nop
push
popa
nop
and
push
ret
cmpsb
push
cli
mov
add
xor
clc
popa
icebp
nop
arpl
sub
or
adc
inc
fidivrl
sbb
or
stc
imul
fs
push
ret
inc
shll
popf
in
lock
mov
mov
aam
pop
fisttpll
out
jle
imul
out
mov
call
adcl
push
movsb
inc
sbb
in
clc
lahf
push
xor
pop
into
test
aam
subb
dec
jo
adc
in
sbb
add
jge
bound
mov
sbb
sub
dec
xchg
push
xchg
repz
mov
movsl
add
cmp
and
js
mov
add
lock
cld
fwait
jbe
rorl
mov
jne
out
and
jecxz
push
in
into
dec
fdivrl
jne
out
or
mov
inc
mov
xchg
xchg
icebp
add
and
dec
into
pop
cmp
les
mov
out
jo
xor
push
xor
add
sahf
insl
lahf
pop
xchg
adc
pop
mov
or
add
add
adc
lret
and
pushf
add
add
xchg
or
js
mov
lret
lret
pusha
add
add
test
adc
sub
in
lret
or
mov
add
push
jns
dec
out
clc
lahf
push
sbb
and
pop
cmp
jle
aas
scas
lret
jno
jbe
loopne
das
mov
and
and
sbb
jge
je
xor
adcl
repz
cmc
xor
int3
test
aad
outsb
cld
fwait
jbe
fiadds
mov
mov
mov
pop
enter
add
and
cmp
inc
roll
inc
movsl
adc
and
xor
jbe
sbb
ss
inc
mov
test
xchg
sbb
aad
mov
int
inc
mov
mov
adcl
cltd
or
dec
or
dec
cwtl
sbb
xchg
add
and
mulb
push
popf
adc
fimull
fidivl
pop
repnz
fs
mov
xchg
and
movsl
lcall
pop
leave
test
lcall
add
push
iret
pop
cmp
aas
les
scas
pop
mov
dec
mov
mov
xchg
xchg
pop
bound
sbb
punpckhdq
fsubrl
shl
jnp
mov
pop
fimuls
adc
cld
mov
xchg
lock
idivl
test
xor
int
fdivrs
fs
or
popa
dec
fidivrs
mov
and
bound
loopne
cmpsl
imul
fmull
push
in
cltd
or
xor
test
jge
cmp
jle
xor
xor
or
add
add
add
lret
or
or
or
or
or
add
lret
lret
xor
aas
add
add
fwait
or
js
test
cli
out
in
lret
lret
addb
add
xchg
or
js
and
add
lret
and
mov
clc
insb
loop
je
push
shlb
jg
dec
loop
out
mov
flds
mov
movsl
and
jl
jo
loop
arpl
xchg
cmc
add
iret
push
ret
cmpsb
push
lcall
ss
inc
mov
movsb
push
mov
inc
mov
mov
rorl
inc
lds
iret
cmp
add
fcoms
mov
sbb
push
shlb
in
pop
mov
dec
cwtl
stos
es
cs
in
lcall
repz
gs
fimull
fidivl
data16
xchg
outsb
fistps
mov
stos
sbb
pop
and
jl
dec
fdivrl
shll
sbb
dec
fs
insl
hlt
pop
out
mov
pop
push
xor
add
lcall
fimuls
das
lret
dec
fidivrs
cmp
inc
movl
inc
shll
and
les
push
xor
cmp
imul
fdivrl
and
push
insb
in
sbb
inc
and
and
push
shll
lret
inc
xchg
es
cmp
push
mov
repnz
notb
add
cmp
dec
ret
in
in
bound
in
jle
ja
jbe
loopne
xchg
add
xchg
add
es
add
repz
mov
js
popa
pusha
notb
int3
stos
data16
dec
fidivrs
push
imul
jo
xorl
mov
ss
inc
mov
loopne
cli
popf
insb
cltd
into
dec
fnstcw
mov
es
fisttpll
out
push
fimuls
add
push
shlb
loopne
mov
and
jecxz
push
in
mov
cld
in
sbbl
ja
popf
or
mov
jne
and
push
ret
ret
dec
fdivrs
outsl
or
scas
cmp
sbb
std
outsl
lcall
mov
and
sub
sbb
lock
outsl
lcall
inc
sub
xor
ficompl
add
sbb
aad
in
in
outsb
cld
fwait
jbe
rolb
inc
test
outsl
lcall
mov
rclb
inc
and
or
jne
out
sbb
scas
ss
popf
push
test
push
cld
movsb
sub
lds
hlt
adcl
test
out
adc
dec
xchg
and
jecxz
push
in
mov
test
cmp
xchg
daa
pop
leave
pop
cmp
pusha
xchg
add
std
or
sbb
add
cmp
pusha
notb
test
push
mov
xor
xor
arpl
xchg
mov
mov
inc
fmuls
fdivs
outsl
mulb
push
test
mov
sbb
rorl
mov
mov
ja
gs
adc
in
or
dec
sub
adc
inc
lret
pop
ds
divl
xchg
repz
mov
mov
fisubrs
mov
jl
imul
or
outsl
xchg
inc
xor
cld
adc
testb
sbb
lret
fmull
add
add
lahf
or
js
mov
jle
in
lret
lret
push
mov
cmp
ja
cltd
or
mov
movsb
or
mov
fnstsw
addr16
sub
xor
add
xorb
jae
xchg
push
lds
jnp
aas
or
mulb
push
xlat
inc
shll
xor
add
and
clc
popa
icebp
nop
arpl
xor
rcrl
pop
mov
jg
mov
fwait
add
std
or
adc
and
inc
inc
ret
ret
pop
xchg
adc
nop
push
test
push
loopne
push
lds
into
cmp
cmpsl
push
mov
mov
addr16
jo
dec
fnstcw
and
loopne
fmuls
fdivrs
push
mov
pop
and
pop
out
lock
lds
lcall
fdivrl
sbb
cmp
andl
xchg
repz
cmc
pop
jnp
jge
testl
or
arpl
xchg
mov
iret
das
stos
xor
rcll
sub
mov
jle
or
or
jge
je
dec
outsl
in
bound
xchg
adc
call
xchg
std
jns
mov
cmp
pop
cltd
or
insb
mov
lods
fwait
pop
xchg
adc
jno
push
or
cmp
repz
test
nop
push
popa
nop
inc
imul
sbb
das
hlt
jg
mov
in
jle
mov
adc
dec
call
leave
push
xchg
add
fmuls
fsubrs
std
insl
hlt
pop
lods
and
es
mov
ljmp
lahf
push
mov
cli
add
or
fimuls
or
adc
pop
xchg
adc
loop
pop
fisttps
fldcw
jne
fs
push
jg
insl
hlt
pop
in
sbb
add
and
add
and
lret
xor
or
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
push
add
add
popf
or
js
hlt
jl
pushf
in
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
lret
add
add
add
lret
push
mov
add
inc
rcll
push
push
shlb
and
cmp
rcrl
loop
adc
or
sbb
lret
fsubrl
add
add
mov
popw
xchg
in
lret
lret
scas
add
add
mov
push
sbb
in
lret
lret
dec
mov
adc
dec
test
xchg
add
sahf
jp
sti
imul
or
insb
loop
je
pop
xlat
inc
and
or
das
mov
mov
lahf
inc
mov
loop
adc
or
sbb
lret
lret
add
lret
sub
inc
add
add
movsb
or
js
xor
add
lret
lret
ss
adc
dec
loopne
adcl
es
xchg
inc
and
popa
cmp
add
jnp
mov
fimuls
mov
pop
jb
dec
in
jbe
cmpl
mov
inc
mov
sbb
add
dec
sub
pop
lcall
adcl
cmp
adc
scas
cs
lret
pop
ds
add
jns
xchg
testb
sbb
cmpsb
sub
lds
jns
pusha
pop
repnz
shll
scas
aas
pop
test
jge
sub
lret
out
mov
dec
push
xor
push
insb
fisubrl
ja
jne
out
pop
adcb
loopne
mov
adc
mov
loopne
ljmp
testb
mov
xor
outsb
popf
jno
out
adc
pop
std
popa
icebp
nop
arpl
outsl
lock
ja
xchg
add
pop
divl
jl
divb
cmpl
fwait
or
jle
dec
fidivrs
sbb
pop
cmp
push
mov
js
popa
rcrl
test
stos
jnp
add
adc
insl
hlt
pop
loope
lea
cmp
iret
pop
cmp
add
adcl
das
fisubrl
jae
in
out
in
jle
jns
jle
call
lods
pop
in
leave
pop
int3
stos
iretw
lret
stos
rol
push
shll
decl
leave
push
roll
aad
cmp
cmp
inc
push
int3
inc
and
push
xor
inc
rclb
cmpsb
push
aam
pop
enter
loope
lock
bound
pop
mov
cli
push
jb
xchg
lcall
cltd
or
ja
jmp
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
mov
adc
testl
ja
xchg
or
mov
cs
xor
rorb
dec
mov
std
or
ret
or
and
push
fstpt
dec
fnstcw
xchg
lock
ds
inc
mov
fisttpll
movsb
push
jecxz
loopne
adc
dec
add
mov
mov
xchg
or
xchg
add
cmp
xchg
testb
lret
outsb
aad
frstor
jp
jne
and
arpl
xchg
mov
dec
sub
pusha
scas
aaa
cmpsl
ret
hlt
jbe
cmpl
ret
push
lds
push
js
ljmp
sub
inc
and
push
xor
xchg
repnz
out
imul
dec
fistpll
lds
lods
pop
mov
je
or
jb
xchg
testb
js
pop
aad
sub
jp
adc
notl
sbb
and
mov
push
mov
es
cmpsb
aaa
cmpsl
ret
sbb
test
xchg
adc
jge
int
les
inc
and
xor
jg
mov
and
push
lds
shll
lahf
cli
or
mov
mov
xlat
inc
and
aaa
daa
test
or
add
add
sbb
lret
lret
sub
add
ja
mov
adc
fimuls
stos
in
lret
lret
pop
scas
or
mov
es
or
sbb
je
pop
int3
stos
data16
iret
pop
cmp
and
fistl
pushf
xor
push
out
jecxz
jne
pop
rolb
shlb
and
movsb
add
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
in
sub
ret
pop
les
int3
or
push
jns
lods
cmp
inc
aam
dec
xchg
bound
add
jl
add
es
sarb
outsl
or
rcrb
pushf
xor
push
divl
xchg
mov
scas
leave
cmp
inc
into
pop
cmp
xor
xor
jecxz
push
in
and
push
add
sbb
pop
lods
and
fimull
fidivrl
movsl
xor
and
mull
icebp
dec
dec
fisttps
jge
je
xor
lods
lret
inc
out
insl
ljmp
stc
mov
mulb
pop
inc
fimull
ficompl
jmp
out
jo
pop
les
int3
or
mov
ret
daa
mov
cmp
push
fwait
or
jae
fisttps
cmpsb
and
jno
gs
add
scas
cmp
mov
pop
adcl
into
pop
cmp
testl
fnstsw
popa
out
jg
jmp
std
or
adc
ret
cmpsb
push
xchg
dec
fdivrs
jae
in
adc
push
xchg
add
cmp
push
les
int3
gs
test
cmp
add
xchg
add
and
mov
or
inc
fisttpll
out
mov
jecxz
call
repz
cmc
je
inc
pop
xlat
inc
and
sub
fisttpl
fnstsw
loope
jae
out
lock
bound
push
mul
ja
xorb
popf
or
and
xchg
add
cmp
lea
sbb
nop
push
popa
nop
daa
push
ret
ret
cltd
or
pop
int
les
outsl
or
in
icebp
andl
sti
lret
add
add
and
lret
and
sub
add
ja
test
adc
jae
test
lret
es
adc
test
add
fimuls
popa
adc
enter
loop
adc
or
sbb
lret
lret
sub
pop
je
adc
mov
xor
add
inc
add
add
mov
adc
int3
xchg
cs
or
lret
popf
orl
hlt
xchg
outsb
mov
and
pop
cmp
push
into
pop
cmp
push
jno
jl
divb
xchg
pop
bound
xor
sub
push
mov
push
sti
int3
dec
fdivrs
lret
mov
fwait
or
outsb
movb
inc
test
testl
and
aam
repnz
adcb
das
fisubrl
sub
cmp
add
and
rolb
mov
notb
cmp
outsl
std
insl
hlt
pop
mov
rclb
imul
mov
pop
jb
cmp
lea
test
shll
inc
aad
dec
movsl
pop
lret
pop
ds
mov
stos
dec
into
pop
cmp
pop
roll
inc
stos
sbb
and
dec
sub
xor
mov
pop
iret
stos
pop
and
cmp
es
cmp
mov
and
out
notl
pop
aam
sub
sbb
dec
or
pop
roll
aad
dec
fimuls
dec
dec
jecxz
push
in
push
test
icebp
popa
add
inc
aam
shll
sbb
ds
cmp
jo
js
ljmp
cmpsb
mov
mov
enter
and
mov
clc
outsb
or
jg
mov
es
cmp
inc
xchg
push
test
push
idivb
testb
movsl
pop
dec
leave
pop
cmp
push
sbb
push
insl
call
adc
jcxz
pop
sbb
enter
dec
mov
push
mov
subl
xor
dec
lcall
mov
cmpsl
ret
push
jecxz
push
in
dec
rcll
and
xor
inc
in
jge
testl
add
stos
jge
sub
daa
stos
cmp
or
fildll
data16
xchg
outsb
xor
xor
movsb
xor
mov
sub
cs
mov
xchg
fs
sbbb
out
sbb
jg
jp
in
push
es
jbe
jge
negl
hlt
jae
push
mov
mov
aas
hlt
out
insb
loop
je
addr16
sbb
add
push
repz
push
mov
fcoms
and
push
cmp
cs
mov
sub
xor
imul
adc
inc
mov
int3
mov
xchg
repnz
test
jp
jp
dec
push
xor
imul
ret
dec
test
adc
or
or
cld
call
and
lret
and
xor
add
ja
movsb
or
js
sarl
or
lret
xchg
test
adc
add
jno
jecxz
jge
arpl
cmc
inc
xchg
add
movsl
xor
fimull
fidivl
adc
xlat
inc
and
js
jle
mov
loope
repnz
dec
frstor
imul
mov
ds
out
cli
popf
insb
test
push
lahf
push
pusha
out
adc
or
mov
push
xlat
inc
and
or
shrl
cmp
inc
iret
dec
fstpt
mov
imul
pop
enter
pop
into
test
dec
fisttpll
mov
jae
insb
or
mov
inc
hlt
js
jns
jmp
push
rclb
jno
sub
aad
sub
insb
mov
adc
mull
icebp
pop
cli
pusha
notb
jl
notb
clc
outsb
or
adc
inc
shll
pop
and
push
imul
int
frstor
mov
cmpsb
mov
pushf
sti
push
push
popf
or
pop
into
test
mov
xchg
pop
jecxz
push
in
jnp
insb
or
out
jnp
addr16
or
lcall
push
lds
jae
push
ja
xorb
add
adc
scas
aas
pop
test
push
mov
or
ds
or
mov
or
mov
lret
pusha
mull
pushf
outsl
fsubrl
mov
outsb
clc
outsb
or
dec
in
jns
mov
int
iret
stos
pop
rclb
cmpsl
dec
aam
sub
fs
sbb
add
push
mov
es
and
ds
outsb
or
jg
push
mov
es
hlt
jne
mov
popa
out
adc
pop
lahf
push
mov
es
nop
push
test
push
loopne
mov
inc
mov
push
cmc
push
pop
je
lea
insb
or
in
add
std
or
orl
decl
stc
pop
xlat
inc
and
js
insb
loop
je
fstl
mov
ljmp
and
pusha
pop
repnz
and
sub
or
aad
out
out
jno
mov
pushf
cmp
add
add
sbb
lret
lret
push
add
add
mov
adc
rcl
add
lret
lret
adc
or
mov
enter
dec
adc
inc
dec
rolb
rclb
stc
lock
bound
test
mov
aas
pop
test
cmp
dec
push
xlat
inc
and
push
test
xchg
repz
out
jnp
xor
add
add
and
lret
lret
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
sub
add
ja
mov
adc
pop
xchg
nop
in
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
and
add
pmulhw
push
lds
lahf
pop
pop
cwtl
push
imul
mov
cmp
dec
rcrb
stos
pop
test
mov
shll
out
jo
sbb
inc
jno
or
daa
push
dec
leave
pop
enter
into
pop
int3
stos
data16
pop
xchg
add
sahf
aaa
lcall
insl
std
test
int
iret
stos
pop
shlb
cltd
add
cli
push
int3
inc
and
pop
cmp
fiaddl
dec
lret
aaa
test
pop
test
clc
jp
jp
push
xlat
inc
and
aaa
loop
lock
bound
or
adc
popf
sbb
add
addl
sbb
inc
fidivrl
in
mov
das
fisubrl
mov
shlb
ret
add
fnstcw
xchg
cld
rsm
test
popl
mov
push
pushf
sti
push
cmpsl
cs
movsb
push
in
imul
insl
ret
cmp
sbb
outsb
cld
fwait
jbe
fwait
pop
xchg
repnz
scas
cmp
mov
adc
add
jnp
mov
lahf
add
lds
iret
add
lret
pop
ds
aad
lret
scas
pop
mov
xchg
add
ja
adc
scas
das
mov
push
lahf
push
pusha
pop
arpl
xor
xor
add
add
add
add
adc
add
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
lret
adc
lret
int
fidivrs
notb
mov
and
jns
addr16
sbb
mov
jmp
sti
sahf
insl
int3
int3
inc
shll
les
aaa
push
mov
sub
imul
and
jbe
dec
fnstcw
fwait
decb
and
and
jbe
repnz
pop
repnz
leave
pop
repnz
fs
in
jbe
cmpl
add
sbb
or
stos
cmp
mov
js
push
rclb
mov
mov
mov
inc
mov
arpl
jo
loop
into
dec
fidivrs
sbb
pop
xchg
xchg
lock
push
sbb
pop
enter
jns
pusha
pop
repnz
pop
iret
stos
pop
cmp
out
jno
fists
mov
ds
test
pushl
xorb
cmpsb
xor
scas
or
movsb
cmp
sbb
inc
aam
dec
out
sub
xchg
xor
pop
nop
push
popa
nop
cmp
ss
mov
sub
inc
mov
loop
lock
adc
inc
xlat
mov
movsl
push
popa
add
sbb
mov
fistps
push
mov
dec
sub
psadbw
cmpl
jle
mov
push
pop
js
mov
xchg
nop
testl
nop
arpl
andl
add
jo
xchg
add
cltd
or
ds
ljmp
adcb
out
mov
push
lret
ljmp
mov
mov
and
lods
add
cmp
cltd
or
xor
jp
jp
popa
hlt
push
cld
pop
inc
fmuls
fcomps
sahf
or
and
rorl
mov
sahf
stc
or
add
add
add
and
lret
lret
push
add
add
mov
mov
pop
add
lret
xchg
movsb
or
mov
cmp
addl
repnz
aad
les
inc
and
cmp
mov
pop
fisttps
fstps
sahf
pop
push
inc
and
sub
jle
call
das
fisubrl
and
cmp
ret
ret
xchg
mov
sub
lds
or
jp
fs
cmp
std
insl
hlt
pop
mov
int3
jp
icebp
popa
add
pop
ret
cmpsl
push
jecxz
inc
xlat
mov
out
sub
outsl
lcall
scas
lret
cmp
pushf
xor
addr16
mov
out
jg
jmp
shll
or
call
popa
loope
adc
sub
dec
sub
xor
dec
fnstcw
mov
es
ss
inc
mov
hlt
jno
xorb
cwtl
push
imul
or
or
lret
inc
shll
dec
sub
adc
clc
pop
or
cmpsb
sub
movsl
xor
lock
aam
dec
ret
std
xchg
test
xchg
pop
enter
jns
roll
sarl
mov
jns
aas
mov
mov
push
pushf
add
jo
jle
call
movsl
push
mov
gs
es
cs
out
dec
leave
pop
cmp
and
xlat
xchg
sbb
mulb
add
add
es
cmp
pop
stos
sub
sbb
xor
xor
xorl
add
ja
cltd
or
mov
inc
stos
inc
enter
cmp
cmpsb
popa
out
jl
mulb
and
jne
pop
iret
stos
pop
shlb
jle
arpl
cmc
pop
mov
mov
popf
or
xchg
add
mov
jle
and
push
shlb
jp
xor
pop
cmp
or
rcrl
push
xor
sub
fstp
dec
fstpt
inc
es
popa
loope
adc
sub
icebp
pop
fmuls
fdivs
int
ret
mov
std
insl
hlt
pop
sti
mov
out
rcll
lods
pop
test
test
jge
adc
pop
rolb
shlb
push
xchg
mov
popa
icebp
nop
arpl
or
mov
xchg
popa
lods
iret
inc
shlb
shll
bound
add
and
cwtl
xor
dec
adc
push
lds
cmpsl
push
sti
outsl
stc
imul
jp
in
dec
or
cmp
dec
jnp
jno
jecxz
daa
mov
xor
cmp
sub
out
addb
icebp
add
mov
sbb
add
add
sbb
lret
lret
fdivrl
push
lahf
push
jb
pusha
pop
repnz
push
ret
cmpsb
push
mov
inc
mov
mov
push
out
imul
mov
and
aad
int3
stos
data16
dec
fdivrl
xchg
adc
insl
mov
xor
add
add
adc
lret
lret
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
adc
add
ja
mov
pop
ss
leave
in
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
or
or
and
movsb
push
adc
mov
mov
sti
outsl
lcall
notl
loope
jae
add
sub
push
lds
xor
push
lods
ja
loop
adc
testb
xor
lret
lret
mov
or
mov
fsts
pop
repnz
fs
es
or
mov
mov
pop
into
test
mov
dec
or
and
sbb
or
or
lret
and
adc
add
ja
mov
or
lret
lret
pop
lds
adc
lods
sub
call
lea
out
sti
cmc
je
lea
mov
xor
gs
push
push
lret
mov
test
jge
jg
dec
fnstcw
ljmp
mov
mov
in
bound
outsl
or
shrl
ja
loope
and
sub
jae
jne
mov
xchg
push
xchg
repz
mov
out
inc
adc
xchg
xchg
adc
xchg
and
pop
lret
scas
pop
cld
movsl
cmp
arpl
outsb
or
sbb
jns
jmp
pop
int3
stos
data16
mov
notl
mov
cmpsl
ret
cmpsb
sub
adc
cmp
mov
jg
je
sti
imul
sub
jno
xorb
fisttpll
out
or
sbb
fstpl
scas
pop
mov
push
mov
clc
pop
arpl
bound
mov
jbe
cmpl
sbb
xor
push
xor
jg
test
pop
test
sbb
dec
fimuls
dec
insb
clc
outsb
or
dec
mov
mov
and
mov
mov
and
jmp
loopne
jb
mov
rcr
shlb
arpl
cmc
cmp
jbe
loopne
divl
mov
stos
sub
ret
ret
adc
inc
shlb
xchg
cmc
add
push
fldt
mov
push
xor
and
in
sbb
mov
ret
adcl
test
fdivl
in
jno
jno
jecxz
xor
pop
cli
push
lahf
push
cmp
scas
jae
mov
adc
add
add
add
lret
and
push
sbbl
call
or
lret
mov
ja
fwait
or
mov
xchg
or
mov
mov
lds
cmpsl
push
sti
stos
lods
lret
inc
icebp
adcl
jecxz
mov
out
cs
xlat
inc
and
cmp
pushf
jbe
xchg
or
je
in
jge
divl
push
mov
add
pop
idivb
mov
xchg
push
test
push
idivb
mov
jne
popa
add
mov
loope
sti
sahf
insl
sahf
inc
ret
ret
cmp
mov
mov
adc
in
sbb
dec
push
xor
sub
pop
jp
fs
jne
mov
push
jnp
in
aas
mov
std
push
fimull
fidivrl
std
insl
hlt
pop
mov
inc
aam
dec
out
jns
mov
mov
orb
sub
push
clc
insl
std
test
jge
jg
jmp
mov
mov
push
lahf
push
sbb
lods
cmp
lret
pop
ds
jno
jl
divb
das
mov
fisttpl
fnsave
enter
dec
mov
test
push
lahf
push
or
sbb
pop
mov
int
fmuls
fdivs
pushf
push
test
push
in
je
or
pop
xchg
add
sahf
insl
or
es
jle
pop
jo
xchg
testb
enter
loope
jae
xchg
fisttpll
push
std
lock
xchg
outsb
push
ret
cmpsb
push
cli
and
stc
imul
push
cld
aas
xchg
aad
arpl
imul
notl
lcall
arpl
cmc
je
lods
lret
inc
cmp
movl
or
aas
scas
lret
cwtl
sbb
mov
movsb
ret
ds
stos
cs
inc
shll
xchg
repz
in
insl
jmp
push
in
seta
mov
es
xchg
pop
bound
sub
xor
add
add
sbb
lret
loop
adc
or
or
or
lret
hlt
adc
testb
sbb
lret
fcoml
add
ja
or
js
add
add
lret
adc
mov
test
cmp
jl
addr16
pop
adcl
lods
lods
lret
inc
out
dec
fldt
xchg
add
sahf
aaa
dec
fimuls
push
test
and
mov
add
jno
sti
aas
or
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
mov
pop
cmp
jg
cmpsl
aaa
push
mov
lods
pop
in
jg
jl
negb
int3
inc
and
mov
push
shlb
inc
mov
xor
cmp
mov
lret
mov
sub
inc
and
mov
ret
jne
out
push
jne
mov
and
mov
scas
jl
xchg
testb
and
outsb
out
jg
jmp
inc
mov
and
fdivrl
jb
in
xor
loopne
lcall
sub
clc
outsb
or
sub
push
lds
cmc
add
xchg
push
xchg
repz
mov
iretw
push
lds
iret
jl
sub
push
les
shlb
jne
out
pop
xor
or
pop
lds
iret
das
jo
jle
call
shrl
xor
cmp
sub
bnd
push
ret
cmpsb
push
lcall
movsb
and
jno
add
adc
adc
pushf
sbb
push
xchg
repz
sti
sub
and
jb
xchg
dec
rcll
and
jl
orb
sti
push
mov
sbb
xchg
mov
push
into
pop
cmp
adc
subl
mov
push
cmp
and
loopne
jae
bound
frstor
imul
mov
shr
push
jnp
xchg
cmc
add
add
push
mov
js
popa
jmp
xchg
mov
fiadds
pop
and
xor
ret
mov
cltd
add
sbb
pop
and
iret
inc
shlb
cmpsb
shll
int3
pop
int
addr16
lcall
lock
pop
mov
mov
mov
mov
mov
and
cmp
aam
icebp
push
lahf
push
push
iret
pop
cmp
cmp
xchg
mov
gs
adc
dec
fstpl
aas
pop
test
popa
nop
js
fs
popf
insb
test
inc
mov
movsl
push
aam
sub
xchg
adc
movsb
and
nop
push
popa
nop
js
pushf
xor
push
pop
aad
sub
aas
pop
rolb
shlb
popa
call
daa
scas
aas
pop
test
inc
mov
stc
jnp
mov
add
das
fisttpll
movsb
push
jecxz
test
add
std
or
pusha
mull
icebp
push
test
and
mov
test
sbb
and
dec
fistpll
add
push
add
aas
movsl
xor
push
xchg
repz
out
xchg
add
push
cld
popa
icebp
nop
arpl
mov
cmp
lret
mov
outsl
or
loop
jae
xchg
fstpl
scas
pop
lea
outsl
or
repnz
push
lahf
push
inc
int3
inc
and
sbb
outsb
pop
roll
shll
or
inc
enter
outsl
mov
shll
ja
loope
rcrl
fs
stc
imul
adc
adc
add
xor
lret
lret
enter
mov
inc
ljmp
test
scas
lret
out
out
jno
jno
je
out
inc
insl
ljmp
stc
mov
gs
pushf
outsl
lret
aad
dec
mov
mov
push
int
and
aas
stos
xor
lock
in
xor
push
shll
mov
shlb
mov
inc
mov
das
fisubl
cmpsl
aaa
push
mov
cmp
cmp
sub
mov
iret
idivl
test
popf
or
lds
iret
pushl
xorb
out
jl
mulb
test
jmp
pop
push
push
xor
jns
mov
xlat
cmp
mov
loop
adc
or
sbb
lret
fcoml
add
ja
les
adc
inc
xchg
pop
in
lret
lret
ror
or
mov
sub
lret
add
add
add
lret
add
sub
add
ja
lds
adc
lods
dec
push
in
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
pop
int
adc
lret
push
and
sbb
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
dec
add
add
lds
adc
int3
lods
out
in
lret
lret
sub
add
ja
leave
or
js
cmp
or
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
lret
add
add
add
add
lret
in
lret
adcb
out
mov
adc
stos
sbb
mov
cltd
adc
loop
lock
xor
fs
sbb
mov
in
adc
insb
cmp
sub
and
ss
mov
inc
fidivrl
outsl
or
out
jae
pusha
pop
repnz
xchg
xchg
repnz
out
outsl
lcall
outsl
or
repnz
fisttpll
out
cmp
movsb
sub
idivb
mov
mov
jne
out
dec
clc
jne
mov
fists
mov
cltd
clc
or
sub
pop
icebp
push
rcll
jo
cltd
or
xor
test
jmp
scas
cmp
add
std
or
cmp
mov
into
cmpsb
lods
lret
inc
lods
xchg
or
mov
rorl
push
shll
cmpsl
aaa
push
mov
jp
das
lods
cmp
arpl
xchg
xchg
icebp
pop
fmuls
fmuls
mov
int
fmuls
fdivs
jecxz
lcall
leave
test
mov
in
inc
lret
lret
push
shlb
dec
loop
adc
add
sbb
lret
faddl
add
add
lret
cld
adc
or
sbb
lret
fdivl
es
adc
sub
add
lret
sub
add
ja
stos
or
js
mov
test
in
lret
lods
mov
adc
jge
ficoms
cmpsl
push
nop
sbb
add
insb
or
scas
sbb
inc
rolb
sarb
loope
adc
push
addr16
pop
mov
arpl
fs
pop
mov
in
sbb
ss
inc
mov
sbbb
out
sbb
aaa
scas
cmp
mov
test
movsb
ret
ds
lds
jnp
in
and
adcl
xor
add
sbb
outsb
jmp
mov
cwtl
push
imul
sub
push
mov
pop
cmp
xor
sub
stos
cmp
pop
adc
pop
inc
and
or
lea
dec
fidivrs
sbb
cmp
fdivl
in
int
repz
gs
inc
aad
dec
in
mov
jg
cmp
dec
fidivrs
and
movsb
add
sub
and
mov
inc
mov
std
imul
insl
xorl
mov
mov
and
rorb
push
shlb
jle
arpl
mov
inc
mov
std
jns
mov
mov
xchg
inc
rclb
xor
xor
pop
mov
fwait
adc
mov
dec
mov
mov
mov
in
bound
jg
jmp
ljmp
lea
add
dec
fidivrs
jmp
cmp
push
xor
jle
mov
mov
and
hlt
adc
or
sbb
lret
fsubrl
add
add
mov
cmp
lret
lret
mov
or
mov
arpl
mov
mov
sbb
enter
into
test
movsb
ret
ds
mov
dec
mov
add
jbe
movsb
ret
ds
cli
xor
mov
les
dec
movsb
loop
icebp
nop
arpl
xlat
mov
cmpsl
ret
pop
jecxz
push
in
aaa
mov
inc
mov
mov
rorl
sbb
imul
add
adc
add
mov
shlb
pop
cmp
jno
mov
inc
mov
test
xor
sbb
inc
and
jns
adc
adc
int
adc
shrl
adc
pop
xchg
adc
aad
jmp
out
jno
imull
je
out
jne
mov
lock
lcall
push
push
jmp
call
and
lret
and
push
add
add
lret
js
mov
lret
lret
call
rcll
cmpsb
push
aam
imul
xchg
jmp
xor
sub
in
lret
js
push
fisttpl
adc
lret
and
or
mov
pop
movsb
mov
mov
and
add
aas
xchg
or
xchg
add
jmp
push
in
sub
inc
shll
pop
jb
gs
adc
imul
lock
in
jbe
cmpl
std
insl
hlt
pop
in
mov
cltd
clc
or
lahf
push
mov
es
cs
pop
test
fistpl
fs
sbb
xchg
add
jnp
cmpsl
aaa
push
mov
dec
and
fs
popf
insb
mov
aaa
scas
daa
mov
and
pop
cld
jo
xorl
sub
js
dec
test
or
or
bsf
mov
inc
mov
imul
ret
push
les
imul
cmp
dec
sub
inc
sub
aaa
mov
rol
pop
leave
test
ficomps
xor
inc
pushf
push
mov
es
add
data16
cmpsl
push
mov
sahf
jnp
mov
or
sbb
adc
mov
test
jmp
out
cld
fwait
jbe
push
fimuls
adc
xchg
xor
stos
cmp
jg
dec
fstpt
mov
leave
test
out
imul
or
push
cli
push
lahf
push
dec
fmuls
fdivs
inc
shll
fwait
decb
iret
cmp
enter
push
popa
nop
push
imul
add
adc
hlt
push
popf
or
sub
lods
lret
inc
ror
frstor
sbb
pop
adc
rcll
cmpsl
push
mov
ja
xorb
cltd
or
dec
in
outsl
lcall
test
mov
sbb
cltd
outsb
sbb
jb
pusha
pop
repnz
iret
int3
dec
fdivrs
lods
mov
xchg
xlat
push
shll
sbb
jg
adc
lds
adc
mov
dec
rclb
xor
push
xchg
mov
mov
ficoml
pop
sti
out
cltd
push
jge
dec
fsts
pop
sti
jge
jge
testl
imul
jmp
xor
mov
aad
or
js
jmp
sbb
in
lret
lret
push
add
add
int
adc
rclb
in
lret
lret
in
lret
mov
jb
or
fsubrl
xor
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fdivrl
add
add
int
adc
adc
add
lret
and
or
mov
mov
add
outsb
std
decl
xchg
push
movsb
push
leave
pop
cmp
or
clc
hlt
imul
jmp
mov
xchg
adc
sub
dec
rolb
sarb
mov
mov
xchg
push
shrb
add
call
stc
xchg
mov
add
sbb
ljmp
or
test
add
inc
fdivl
in
fistpl
stos
pop
scas
test
xchg
in
cmp
leave
or
jbe
mov
mov
add
jmp
push
call
add
push
mov
add
shrl
dec
dec
fdivrl
mov
int
and
sub
mov
aad
mov
mov
stos
sub
pusha
ljmp
xchg
adc
sti
jno
xorb
jmp
push
in
sbb
inc
mov
out
push
call
test
cltd
clc
or
in
notl
iret
inc
shlb
or
sub
push
xor
push
dec
bound
or
bound
insl
std
call
sbb
add
add
add
sub
lret
xor
lret
fsubrl
add
add
in
or
js
imul
push
in
lret
lret
and
or
mov
test
push
mov
es
nop
push
xchg
repz
mov
dec
out
mov
jns
aas
inc
aam
sub
popf
in
pop
les
int3
cs
insb
loop
je
stos
xor
xor
pop
xchg
adc
mov
stos
das
mov
xor
aam
lret
scas
pop
mov
and
in
imul
push
pushf
sti
push
jecxz
pop
int
lea
stos
cmp
pop
mov
shll
pop
jb
imul
fistpll
mov
or
rcll
push
xchg
add
and
and
mov
cmp
popa
rclb
push
loope
adc
int
and
fs
ja
loope
mov
cmp
mov
mov
inc
fidivrl
daa
inc
mov
imul
or
and
sub
setae
xchg
pop
je
gs
adc
push
out
bnd
xorb
jmp
and
outsl
jmp
loopw
pop
loop
mov
iret
mov
fisubrs
lds
inc
and
bound
pop
ds
or
push
jno
inc
and
aas
pop
test
pusha
xchg
daa
sti
push
mov
xorb
js
jl
testb
frstor
add
inc
arpl
fs
pop
add
test
rclb
pop
and
aas
data16
insl
hlt
pop
in
pop
lds
iret
dec
test
mov
sbb
push
fists
fwait
or
jae
xor
lret
dec
fdivrs
stos
into
cmp
adc
cmp
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubl
add
ja
lret
or
js
lods
add
in
lret
dec
iret
or
mov
int3
sbb
in
cmp
das
dec
mov
into
cmp
clc
or
clc
jo
xorl
mov
out
jo
adc
mov
hlt
mov
lods
mov
loop
add
cmp
mov
inc
mov
and
jns
hlt
push
cld
dec
adc
adc
sub
lods
and
add
daa
inc
mov
mov
jecxz
iret
pop
cmp
xor
mov
push
loopne
jb
mov
mov
lock
cmp
test
pop
test
cmc
jnp
mov
daa
cmpsb
xor
scas
dec
xchg
adc
in
sbb
cmp
push
ret
cmpsb
push
cmpsb
inc
les
int3
and
in
jge
testl
lds
sub
xlat
pop
int3
stos
xchg
cmp
orl
adc
mov
fwait
decb
mov
sub
mov
mov
mov
xchg
daa
sub
push
lds
lods
cmp
inc
xlat
mov
out
nop
push
popa
nop
daa
dec
fmuls
fdivrs
pop
xchg
adc
mov
mov
fdivl
in
dec
frstor
push
std
jl
add
insl
in
jge
idivl
jno
xorb
fisttpll
out
sbb
popf
into
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
call
stc
or
in
lret
lret
add
or
mov
adc
testb
and
lret
lret
xor
add
ja
rorb
adc
inc
xchg
in
lret
fcompp
or
mov
inc
mov
cmpsb
pop
lock
mov
mov
int3
divl
xchg
jle
push
cld
subps
inc
sub
aas
lahf
adc
mov
shll
or
mov
aas
jmp
divb
or
pushf
xor
adc
mov
jb
and
rolb
dec
std
out
out
jo
iret
pop
leave
test
out
inc
inc
and
jns
adcl
test
sbb
mov
dec
mov
out
sbb
push
cmc
je
pop
lret
scas
pop
fdivr
adcl
test
pop
enter
jge
and
lock
cmpl
movsb
ret
ds
pop
loopne
and
stos
and
into
pop
cmp
xor
pushf
xor
inc
sub
pop
into
inc
mov
out
lret
lret
fimull
ficompl
and
dec
fstpt
or
cmpsb
punpckldq
pusha
pop
repnz
jle
jge
negl
stos
into
cmp
clc
or
xor
sub
jle
mov
jle
jnp
in
or
mov
add
in
jno
xorb
daa
mov
and
adc
mov
enter
jg
bound
jmp
xor
int
ret
xor
jne
xchg
add
xor
inc
mov
mov
fstps
stc
jne
jae
push
adc
in
sbb
dec
fidivrs
stos
int
inc
dec
fnstcw
scas
leave
cmp
out
pop
lret
lret
add
push
pushf
sti
push
cmpsl
xor
stos
loop
adc
add
and
lret
lret
das
add
add
iret
or
js
ret
imul
or
lret
or
mov
adc
aas
lret
push
shll
aas
lret
lahf
punpckhdq
les
inc
aam
dec
cmpsb
push
enter
dec
fadds
mov
repnz
lods
in
cmc
pushf
outsl
test
jnp
ret
push
lds
push
aad
sub
and
xchg
pop
bound
jp
cli
jge
je
insl
dec
lds
iret
add
adc
xor
test
cwtl
decl
lods
mov
sbb
dec
rcll
enterw
pop
in
mov
xorl
popf
insb
lds
push
xor
jle
and
rolb
shlb
xlat
inc
and
js
pop
leave
test
lcall
stc
notl
or
xor
cld
call
and
lret
and
sub
add
ja
rorl
adc
pusha
mov
outsl
in
lret
lret
xchg
fimull
adc
push
dec
mov
aam
mov
popa
cmpsb
jge
insb
or
out
jo
loop
fistps
stos
andw
adc
push
xchg
adc
sub
adc
in
sbb
scas
sub
sub
jo
xorl
fsubrl
call
leave
mov
shlb
xchg
adc
sbb
jns
mov
scas
cmp
mov
in
push
xchg
add
sahf
das
inc
aad
sub
je
mov
sub
adc
jle
jns
jmp
insb
mulb
cmp
jmp
inc
mov
or
or
jae
scas
cmp
mov
pop
push
xor
dec
ljmp
loope
adc
or
inc
push
test
dec
fstpt
out
rcll
call
fdivr
call
and
lret
and
sub
add
ja
or
js
out
jge
in
lret
lret
neg
or
mov
lea
lcall
and
mov
xchg
lods
and
mov
test
scas
ja
jmp
adc
add
add
xlat
or
js
sbb
in
lret
sub
or
mov
inc
mov
vrcpss
cmpsb
push
xchg
pop
int3
stos
data16
adc
gs
sub
add
add
in
lret
sub
and
add
ja
xlat
or
js
xor
mov
lret
xor
or
mov
mov
loop
out
jo
jo
jno
jecxz
inc
roll
shll
cmp
adcb
xorb
nop
push
popa
nop
cmp
pop
enter
xchg
and
mov
std
insl
hlt
pop
hlt
insl
std
test
mov
mov
mov
dec
mov
add
jns
or
or
cmp
push
lret
mov
jae
xchg
icebp
jne
mov
loopne
cmc
pushf
outsl
mov
shlb
jns
sbb
aad
xlat
icebp
jp
jp
adc
xchg
sbb
mov
jp
imul
das
xlat
pop
leave
test
fwait
in
notl
clc
push
lahf
push
dec
fimuls
dec
mov
mov
into
pop
cmp
jg
insb
or
mov
mull
icebp
push
aas
test
mov
xchg
pop
repnz
cmpsl
sbb
xchg
cmp
pop
lds
iret
dec
lods
xor
movsb
cmp
adc
adc
jae
and
in
sbb
adc
js
ljmp
push
lea
pop
cmp
cmp
movsb
cmp
dec
fsts
mov
out
mov
es
pop
test
adc
out
jl
divb
filds
nop
push
popa
nop
es
ljmp
add
dec
jle
jge
negl
dec
sub
imul
cmp
lret
pop
int3
stos
shlw
hlt
pop
out
adc
popa
out
in
je
outsl
jl
jnp
in
add
cmp
sub
fistpl
mov
lods
sub
xchg
adc
xor
sbb
outsb
cld
fwait
jbe
jns
in
ja
into
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
fisttpll
adc
or
lret
lret
pop
or
mov
jmp
fstl
lods
pop
scas
jnp
mov
sbb
jg
xchg
pop
bound
dec
mov
popf
insb
mov
mov
insb
out
adc
dec
push
lret
ljmp
jne
jnp
in
pop
xchg
add
std
or
and
jo
jne
out
inc
fmull
mov
shlb
mov
xchg
add
jo
pushf
xor
dec
sbb
fs
pop
mov
or
or
or
cld
call
and
lret
and
xor
add
ja
adc
jle
push
adc
lret
lret
xor
or
mov
jp
stc
data16
xchg
outsb
jmp
imul
subb
sbb
add
inc
and
cmp
or
push
mov
into
or
ja
jmp
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
fimull
adc
pop
cmp
or
lret
mov
or
mov
cmc
push
jnp
insb
or
out
rorb
dec
mov
stc
in
push
ret
cmpsb
push
mov
jle
mov
fldcw
loop
jecxz
jne
imul
sbb
das
lods
daa
mov
and
inc
repz
icebp
nop
arpl
pop
int3
inc
and
clc
lahf
push
ds
pop
test
xor
popf
or
fs
popf
insb
lret
sub
push
roll
aad
xor
jnp
jo
loop
push
cwtl
push
imul
lods
and
jge
adcb
subb
bound
jbe
loopne
or
in
imul
ljmp
mov
das
out
jno
outsl
in
sbb
mov
mov
jns
jnp
daa
mov
and
test
movsl
xor
jb
xchg
sbb
cmpsb
cmp
out
jl
testb
sbb
lahf
punpckhdq
out
mov
lea
xchg
add
xor
pop
cwtl
push
int
and
aaa
sub
push
lahf
push
xchg
repz
out
das
mov
insb
or
sub
mov
jp
std
adcl
test
movsb
ret
ds
notl
pop
fisttpll
out
or
sbb
dec
lds
iret
cmpsb
xor
insb
loop
je
daa
scas
cmp
mov
cmp
and
adc
pop
mov
js
mov
mov
test
cmp
inc
hlt
rclb
push
clc
inc
roll
shll
test
pop
test
push
rcll
jo
mov
jns
and
mov
lahf
or
aad
sub
or
add
add
sub
lret
xor
lret
fsubrl
add
add
aad
adc
movsb
bound
in
lret
lret
adc
or
mov
cmpsl
add
dec
adc
es
push
mov
pop
cmp
and
test
add
mov
cltd
clc
or
xor
jge
das
scas
cmp
mov
sub
push
aam
shll
xchg
orb
decb
les
movsb
push
mov
cs
std
insl
hlt
pop
mulb
lods
cmp
out
adc
cmp
pop
leave
test
fwait
outsl
loop
pop
loop
xchg
pop
xchg
repnz
and
and
mov
jge
testl
ja
jno
jecxz
adcl
jecxz
mov
mov
iret
pop
cmp
xor
and
sub
pcmpeqd
jle
call
pop
stos
sbb
jmp
orb
sbb
inc
shll
cs
mov
insl
pushf
dec
sbb
push
imul
cs
imul
insl
mov
add
hlt
xchg
outsb
popf
inc
roll
aad
ficoms
mov
js
ljmp
faddl
inc
and
addr16
jo
loop
pop
enter
jns
jns
mov
adcb
sbb
out
out
jno
movsb
xor
push
mov
addl
jmp
insb
mov
jne
out
pop
cmp
cmp
inc
or
pop
into
test
pop
cmp
add
jg
jmp
dec
roll
aad
mov
cld
jns
mov
lods
das
mov
lock
sbb
jnp
mov
fwait
adc
mov
inc
mov
ds
dec
mov
mov
shlb
xchg
gs
or
and
popa
icebp
popa
add
inc
bound
ja
into
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
in
adc
push
sub
in
lret
cmpsl
loope
adc
insb
vpackssdw
sahf
insl
fcmovb
push
mov
cs
mov
lret
jge
xchg
and
add
add
and
lret
lret
xor
add
ja
fisttps
adc
mov
lret
lret
fsub
or
mov
sub
push
mov
js
xchg
or
clc
pusha
notb
xor
rclb
inc
aaa
test
pop
test
out
sti
sahf
insl
mov
dec
movsb
lcall
inc
shll
mov
sbb
test
xchg
lock
and
and
aaa
push
mov
ljmp
aam
test
in
lock
ret
shll
xor
sbb
movsb
cmp
outsb
lret
mov
pop
ds
add
aaa
jo
jbe
loopne
pop
int
and
jl
mov
ret
push
lret
cmc
fwait
or
scas
cmp
repnz
pop
repnz
mov
jg
push
inc
lods
add
xlat
dec
fistpll
mov
adc
std
insl
hlt
pop
in
pop
popf
or
adc
outsb
cld
fwait
jbe
lods
sub
mov
mov
push
pushf
xor
push
jmp
notb
dec
sub
add
mov
js
jp
loopne
adc
inc
and
cmp
jge
pop
xchg
adc
mov
std
or
fmull
mov
popf
in
mov
inc
hlt
sub
push
lds
mov
inc
mov
iret
pop
into
test
pushf
sti
push
mov
jge
fs
popf
insb
scas
outsb
sti
imul
sbb
push
lret
mov
jbe
cmpl
pop
xchg
or
in
xchg
das
mov
inc
mov
dec
into
pop
cmp
ds
sub
in
jge
notl
mov
mov
in
jo
push
cld
or
lods
cmp
lret
lret
and
cmp
lcall
adc
sub
inc
aad
dec
xor
push
pop
xlat
icebp
xor
add
add
sub
lret
adc
lret
fsubrl
add
add
xlat
or
js
rorb
in
lret
lret
test
or
mov
lock
das
sub
sub
add
or
or
or
lret
add
lret
add
add
lret
or
lret
lret
sub
add
add
loope
adc
jae
cmc
in
lret
lret
pushf
in
adc
lock
testb
sbb
lret
faddl
add
ja
loope
adc
test
lret
lret
jnp
or
mov
pop
in
jns
js
ljmp
mov
or
add
enter
xchg
cmc
add
cs
and
sete
insl
pushf
jle
adc
flds
mov
test
repz
cmc
je
mov
push
pushf
xor
insl
xchg
sbb
popa
icebp
nop
arpl
shll
mov
je
lea
popa
icebp
nop
arpl
push
test
rcrb
xchg
add
jo
jae
xchg
ss
xor
push
lds
jns
jmp
test
lahf
cli
or
mov
cltd
sub
jae
add
lret
pop
ds
mov
cltd
cli
insb
loop
je
mov
xchg
mov
add
aaa
push
into
pop
cmp
adc
in
adc
add
jle
aas
scas
lret
cs
inc
mov
pop
push
xor
dec
ficompl
test
cmp
inc
into
dec
fdivrl
and
push
xor
and
dec
pop
cwtl
push
imul
pop
iret
stos
pop
std
jne
mov
mov
scas
leave
cmp
xlat
pop
int
addl
pusha
pop
into
test
mov
xchg
rcrb
stos
data16
add
and
pop
mov
gs
cmp
iret
jl
scas
cmp
mov
adc
xor
dec
sub
dec
jnp
jge
testl
call
fistps
dec
rolb
shlb
cmc
jae
xchg
push
leave
pop
cmp
and
pop
leave
test
inc
xlat
mov
enter
cwtl
imul
scas
movsl
sub
lods
and
push
insb
ljmp
push
xor
and
add
add
adc
lret
lret
cmp
add
ja
fimull
adc
dec
inc
fninit
in
lret
lret
enter
mov
mov
mulb
push
xor
push
add
or
ret
cmpsl
in
bound
pop
cmp
cwtl
decl
enter
in
mov
add
std
or
xor
out
jb
xor
sbb
add
add
lret
xor
sub
add
ja
fisttps
adc
loope
and
in
lret
push
loop
adc
dec
loopne
xchg
add
sahf
das
pop
int3
inc
and
push
lds
inc
shlb
movsb
ret
mov
mov
imulb
je
fs
insl
hlt
pop
out
rcrl
pop
mov
mov
jns
jg
xchg
and
mov
mov
ret
push
lds
add
sbb
outsb
les
mov
mov
lahf
dec
mov
cmc
jo
xorl
dec
mov
outsl
scas
and
inc
lret
lret
stos
cmp
or
data16
xchg
outsb
mov
sbb
cld
ja
xorb
jb
xchg
addr16
sub
cld
adc
or
sbb
lret
fsubrl
add
add
in
adc
lea
or
lret
stos
jmp
movsl
xor
jecxz
push
in
inc
roll
sarl
or
outsl
lcall
or
sub
ret
mov
sbb
adc
xor
mov
jns
pusha
rcrb
data16
jne
mov
outsb
in
bound
je
out
push
push
rolb
sarb
push
aam
sub
fwait
outsl
push
and
jmp
xor
push
add
add
jo
adc
mov
mov
in
lret
sub
add
ja
imul
js
add
push
in
lret
mov
add
ja
insl
or
js
outsl
ftst
std
in
lret
lret
xor
adc
popa
enter
dec
mov
sbb
or
ror
push
mov
dec
sub
popa
jp
jnp
in
insb
mov
mov
jl
jne
insb
pop
fdivl
in
sbb
mov
mov
jle
fldenv
xchg
gs
lods
das
mov
xchg
add
pusha
xor
stos
and
push
lahf
push
push
nop
push
popa
nop
aaa
dec
rcll
adc
and
shlb
xchg
les
popa
add
inc
test
lahf
or
mov
lahf
mov
cwtl
inc
fisttpl
fnsave
roll
aad
cwtl
adc
inc
fidivrl
std
test
pop
test
rclb
sub
jge
divl
jp
jp
push
pushf
xor
insl
mov
cltd
clc
or
and
test
std
or
mov
mov
mov
cmp
mov
mov
or
loop
pop
loop
push
jecxz
push
in
inc
leave
pop
cmp
sub
or
int3
inc
shlb
jle
call
fwait
jbe
lcall
jp
jp
stc
push
lahf
push
das
mov
insb
add
imul
leave
pop
cmp
pusha
test
hlt
pop
leave
pop
cmp
outsb
les
stos
movsw
flds
mov
mov
sub
rcrl
pop
mov
jmp
mov
in
sbb
lock
xchg
hlt
jne
mov
fwait
sbb
inc
xlat
mov
stos
js
inc
mov
aas
pop
test
jg
pop
testb
add
add
xor
lret
lret
xor
add
ja
rorl
adc
adc
iret
lods
in
lret
lret
sbb
or
mov
push
repz
outsl
lcall
cmpsl
ret
push
xchg
add
jno
xchg
add
jbe
mov
in
lock
lds
bound
xchg
repnz
jns
push
cld
pop
mov
mov
sahf
cmc
imul
insl
fisubrl
mov
hlt
lock
jmp
das
mov
test
jp
jp
mov
jecxz
adcl
mov
jg
pusha
loopne
out
mov
mov
mov
push
insl
in
jge
idivl
and
popa
out
adc
pop
loop
icebp
nop
arpl
add
jge
je
push
dec
enter
cmp
sub
xchg
outsb
jmp
push
in
or
jb
imul
daa
inc
mov
mov
in
notl
cmp
mov
test
dec
fnsave
pop
repnz
fs
inc
aad
dec
in
dec
fidivrs
adc
sub
push
cmp
jp
xor
imul
insl
test
lret
pop
ds
leave
push
mov
or
je
inc
fidivrl
shlb
jno
jecxz
roll
inc
stos
adc
cmp
adc
sbb
or
or
and
lret
sub
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
sub
add
ja
loop
adc
ds
cli
cmp
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
lret
or
or
or
or
decl
adc
lret
mov
jb
imul
sub
push
divl
xchg
cmpsb
sub
lds
cmp
and
dec
fnstcw
add
push
adc
add
add
jmp
cmpsb
adc
in
lret
lret
sub
add
ja
in
adc
or
lret
lret
mov
or
mov
mov
xchg
sbb
rclb
adc
test
pop
test
mov
lods
lret
inc
loope
loop
adc
or
sbb
lret
lret
sub
add
ja
in
or
js
clc
mov
in
lret
lret
inc
add
add
icebp
or
js
sub
je
in
lret
lret
jle
or
mov
add
add
and
lret
lret
inc
add
add
ljmp
pop
mov
lret
lret
clc
cli
or
mov
dec
sti
lock
icebp
nop
arpl
jb
jo
loop
dec
fisttps
mov
mov
sahf
repz
pushf
outsl
fidivl
jp
in
dec
xchg
or
sbb
adc
sbb
in
jmp
push
shlb
enter
and
mov
std
jl
jne
popa
mov
mov
cmc
gs
sub
inc
shlb
cltd
clc
or
in
gs
pushf
outsl
sahf
pushf
adc
insl
jmp
push
in
lfs
mov
mov
adcl
test
fisttpl
fisttpll
cmp
push
fimuls
inc
dec
fimull
fisubrl
in
je
sub
lock
inc
inc
rolb
sarb
xor
sbb
xchg
mov
aam
xlat
mov
call
mov
push
scas
dec
loop
call
fisttpl
fnsave
dec
aad
sub
pop
in
jmp
jecxz
push
in
lods
sub
cli
jp
jp
fs
push
in
push
pop
fisttps
fstps
das
test
pop
test
outsl
jmp
lahf
sbb
stc
imul
out
mov
mov
fnstenv
lret
dec
rcll
pop
aam
sub
aad
dec
push
jecxz
push
in
sbb
sbb
xchg
and
xchg
jb
les
pop
in
aaa
cmpsb
xor
scas
pop
add
sahf
or
cmpsb
test
pop
test
xchg
and
les
add
jae
jge
je
outsl
pop
rcll
sub
rep
loop
je
mov
mov
push
xor
daa
adc
loop
icebp
nop
arpl
fstp
add
add
xor
lret
lret
aas
add
add
int
adc
popa
dec
ljmp
or
rorl
adc
mov
cwtl
loop
adc
testb
sbb
lret
lret
cmp
add
ja
ljmp
rclb
lret
je
or
mov
add
xor
lret
add
sub
or
lret
lret
and
or
mov
pusha
mov
rolb
shlb
xchg
adc
data16
xchg
outsb
popf
xchg
sbb
popl
or
jg
pop
xchg
repnz
adcl
enter
les
mov
sub
or
xchg
pop
bound
daa
shlb
pop
jbe
jbe
loopne
adc
jbe
jo
loop
sti
outsb
cld
fwait
jbe
lods
and
ja
and
mov
lods
outsl
mulb
push
pop
pop
jp
adc
jo
xorl
jmp
ljmp
fdivl
in
push
lea
lahf
punpckhdq
popa
nop
inc
jno
imul
push
push
fisttpl
fnsave
mov
lods
lret
inc
mov
jbe
cmpl
inc
aam
dec
stos
fstl
pop
scas
inc
lret
lret
out
jl
mulb
dec
lds
iret
psrlq
stos
shl
icebp
nop
arpl
imulb
sahf
insl
ret
push
aaa
ret
notl
xor
xor
adc
jg
jmp
dec
mov
lret
inc
loope
sub
pop
leave
test
mov
lahf
ja
imul
adcb
addb
repz
cmc
je
xor
lret
pop
ds
cmpsl
and
xchg
adc
out
jg
jmp
xchg
push
xlat
inc
and
sub
dec
fdivrs
das
dec
mov
push
in
cmpsb
cs
pop
jp
fs
movsl
push
repz
lods
pop
mov
jge
je
inc
xor
push
test
jge
cmp
jle
mov
sub
push
jp
mov
xchg
dec
fidivrs
lcall
cltd
clc
or
loope
mov
mov
or
mov
fcmovbe
sub
clc
adc
testb
sbb
lret
fmull
add
add
decl
adc
mov
lret
lret
fucomp
or
mov
adc
pop
ficoml
xchg
fstps
test
nop
inc
les
int3
and
test
pusha
notb
bound
add
inc
dec
int
and
and
sub
cmova
inc
es
ret
dec
fidivrs
push
xor
sub
pop
aas
lret
fisttps
flds
ljmp
jno
jecxz
inc
iret
pop
cmp
jo
add
sub
mov
cltd
je
jnp
in
inc
nop
push
xchg
repz
mov
popa
movb
dec
fstpt
jg
mov
push
ret
cmpsb
push
mov
xchg
or
jbe
scas
cmp
mov
sbbb
jmp
mov
outsb
jmp
mov
or
mov
shlb
jno
gs
add
pop
cmp
add
bound
in
std
test
rcrl
test
mov
mov
gs
addr16
iret
pop
cmp
jo
cmp
in
bound
out
mov
push
rcll
ja
pop
into
test
push
xor
jno
mov
cmp
mov
inc
mov
add
pop
int
and
jb
jge
je
inc
or
rorl
mov
je
out
push
push
enter
dec
stos
xor
int
mov
add
lcall
dec
fstpt
or
jle
cwtl
push
imul
arpl
xchg
gs
add
stc
jno
xorb
cmp
mov
cmpsb
cltd
jns
out
mov
sub
or
or
or
or
lret
or
add
or
or
add
or
lret
lret
sub
xor
add
ja
out
or
js
pop
hlt
inc
sbb
lret
lret
fucomp
or
mov
push
mov
jb
xchg
xor
xlat
inc
and
or
iret
inc
int
and
jb
push
shlb
popf
insb
lds
mov
inc
mov
inc
rolb
sarb
pop
leave
test
call
inc
call
xorl
mov
jg
sub
adc
and
xor
imul
jnp
in
add
jb
in
jns
je
out
imul
dec
dec
fstpt
lahf
cli
or
cmp
lods
sub
sbb
fwait
or
outsb
out
lock
bound
cmpsb
push
pop
roll
shll
in
fs
popf
insb
mov
lret
idivl
mov
mov
loope
mov
push
fdivl
in
inc
xlat
inc
and
imul
xor
pop
jmp
sub
out
adc
pop
dec
fmuls
fdivs
outsl
lcall
pop
jp
xor
in
mov
iret
xor
movsl
xor
test
xor
cmp
xchg
adc
in
sbb
jnp
imul
sub
pop
les
mov
mov
xchg
dec
mov
xor
mov
or
or
sbb
lret
fsubrl
add
add
cli
or
js
push
sahf
sub
lret
lret
or
or
mov
mov
mov
stos
int
aam
mov
sub
add
xchg
sbb
add
xchg
push
mov
repnz
icebp
lods
and
xor
je
jne
out
inc
lahf
or
mov
mov
and
mov
fmuls
movsb
push
cld
ljmp
sbb
aas
scas
lret
cmp
jge
jnp
in
add
dec
sub
xor
mov
pop
repnz
fs
sub
push
aam
sub
cwtl
decl
loop
mov
ret
dec
fstpt
movsl
int3
aas
ljmp
push
fisttpl
fnsave
mov
les
int3
inc
int3
inc
and
push
cmp
jl,pt
pusha
pop
repnz
loope
cld
fwait
jbe
cld
jo
xorl
scas
or
xchg
dec
fdivrs
cmpsb
shll
xor
sub
sub
or
jnp
mov
xor
add
pop
bound
mov
add
jo
rolb
sarb
jl
jnp
in
add
nop
or
adcl
test
hlt
je
lea
into
pop
cmp
xor
mov
dec
mov
sbb
aas
out
push
lahf
push
dec
enter
and
jge
je
jbe
mov
gs
jbe
rolb
shlb
roll
shll
push
dec
test
mov
das
stc
insl
out
adc
sub
rcr
fdivrs
mov
ja
xorb
sti
imul
push
inc
xlat
inc
and
outsb
and
aaa
mov
ret
push
les
cmp
loop
adc
add
and
lret
lret
sub
add
ja
testl
js
int3
in
lret
lret
testl
dec
sub
and
sbbl
cmc
add
xchg
or
loop
pop
loop
pop
mov
mov
lahf
cli
or
std
adcl
test
out
jg
jmp
mov
inc
push
xor
sbb
mov
inc
mov
lcall
in
pop
mov
and
and
pushf
adc
adc
sbb
aad
out
mov
dec
fimull
fisubrl
mov
and
std
or
adcl
out
mov
loop
adcb
cmp
jns
mov
jnp
ja
loope
or
repz
das
mov
dec
fnstcw
cmpsl
ret
xlat
pop
lret
scas
pop
xchg
mov
cmpsl
ret
jp
push
adc
inc
fidivrl
mov
sbb
ljmp
xchg
mov
mov
inc
mov
ss
push
lds
orb
stc
or
mov
iret
mov
test
mov
xchg
inc
aas
mov
inc
mov
fistl
mov
jno
jecxz
pop
enter
popa
add
lea
aad
jmp
xor
dec
frstor
mov
clc
xor
lock
lahf
push
int3
push
lds
in
decb
inc
daa
sarb
ljmp
mov
dec
mov
xchg
pop
daa
movsb
cmp
inc
stos
sub
xor
int
fsqrt
jl
jne
jp
iret
pop
cmp
add
fbstp
roll
pop
cmp
cmp
inc
aam
dec
lods
data16
jl
notb
sbb
outsl
push
jp
in
dec
add
add
add
add
and
lret
lret
sub
add
ja
jmp
adc
out
loopne
in
lret
lret
pop
repz
mov
adc
and
adc
imul
insl
int3
or
dec
fisttpll
out
jecxz
loope
jae
pop
roll
aad
dec
fimull
fisubrl
pop
xchg
repnz
movsl
adc
cmpsb
xor
scas
or
jnp
mov
xchg
or
sbb
lds
iret
and
test
jbe
jg
jmp
mov
xchg
cmc
add
jo
loop
push
jns
jmp
ss
inc
mov
pop
fmuls
fmuls
mov
xor
nop
adc
testb
sbb
lret
fsubrl
add
add
repz
js
inc
sub
clc
in
lret
lret
and
or
mov
mov
fs
jge
roll
aad
ds
stos
and
in
jge
testl
daa
orb
xor
sbb
pop
leave
test
fwait
in
cltd
push
mov
in
in
jle
cmpsb
movsb
ret
ds
shrb
lret
or
lret
sub
sub
add
ja
testl
mov
je
lret
lret
and
or
mov
sbb
jg
cmp
pop
jp
cmp
mov
inc
mov
mov
mov
mov
repz
lahf
push
popa
std
insl
hlt
pop
sub
loopne
jb
xor
or
pop
ljmp
pusha
notb
jp
in
cmp
push
xor
xor
out
jl
negb
in
shrl
sub
test
or
or
sbb
lret
fsubrl
add
add
clc
or
js
daa
in
sub
lret
or
or
mov
push
movsl
test
rclb
or
outsl
lcall
xor
add
fimull
fimull
sub
add
setg
or
dec
jecxz
jbe
cmpl
jne
mov
ret
pop
lret
scas
pop
ljmp
xor
popa
hlt
push
cld
pop
pop
les
int3
orps
inc
es
scas
xor
sub
push
cwtl
push
imul
or
outsb
repz
cmc
sbb
dec
fnsave
test
int
ljmp
stc
stc
rcrb
scas
pop
mov
dec
fnstcw
and
pop
cmp
and
xchg
jge
lret
lret
cmp
mov
inc
mov
xchg
push
mov
es
add
std
pop
jp
jle
call
movsl
push
std
dec
fisttps
fsts
mov
inc
mov
push
push
sub
push
lds
cmp
iret
pop
cmp
jo
add
int3
inc
and
pop
jb
gs
lds
iret
and
push
loop
adc
add
xchg
jb
inc
push
rolb
sarb
inc
push
xor
daa
add
imul
ja
xorb
lods
cmp
mov
rorl
dec
mov
jl
sti
jno
xorb
das
mov
imul
insl
int3
stos
sub
jle
mov
push
cmc
push
and
push
lds
iret
fs
notl
test
xchg
test
and
mov
xor
enter
movsb
ret
ds
inc
fistpl
imul
push
xchg
mov
jecxz
jne
mov
stos
leave
jl
lret
dec
push
xor
mov
add
add
sbb
lret
fcompl
jle
or
js
adc
jg
lret
lret
maskmovq
testl
fdivr
call
and
lret
and
sub
add
ja
std
or
js
adc
xchg
jge
lret
lret
loop
or
mov
push
aam
mov
addl
icebp
add
dec
enter
and
jg
jmp
jp
imul
mov
ja
loope
daa
mov
cmp
rcrl
scas
pop
mov
shrl
mov
jns
jnp
mov
gs
xor
aad
iret
stos
pop
movsl
fs
jg
jmp
shlb
mov
lahf
push
lret
pop
ds
out
jle
mov
mov
cmc
nop
add
loopne
ljmp
lock
cmp
xor
and
mov
xchg
jl
and
ljmp
stc
or
mov
adc
mov
ja
xorb
mov
xchg
jle
inc
shlb
mov
sbb
pop
fimuls
xor
call
cltd
dec
loopne
clc
lahf
push
nop
sbb
cs
aaa
cmpsl
ret
ret
push
ret
cmpsb
push
hlt
adc
dec
ficoml
mov
sahf
stc
or
sbb
aas
push
les
int3
jge
or
pop
iret
stos
pop
aad
shlb
loope
jae
mull
icebp
pop
mov
loope
scas
aas
pop
test
mov
test
lcall
lret
fidivrl
push
imul
and
sbb
xor
xchg
add
data16
xchg
outsb
fwait
lcall
icebp
popa
add
add
aad
dec
fnstcw
push
xor
icebp
nop
arpl
xchg
sbb
aad
lock
xor
push
lds
popf
in
mov
or
or
or
and
lret
lret
sub
add
ja
cmc
or
js
cmpsb
mov
in
lret
inc
clc
or
mov
pop
repnz
sbb
ret
std
mov
fwait
in
jp
jp
mov
pop
enter
outsl
push
xchg
or
pop
pop
lds
iret
das
test
cmpsb
shll
je
arpl
cmc
sbb
das
ficompl
xor
sahf
or
cmpsb
outsl
insb
in
jge
negl
imul
cltd
push
xorl
pop
test
sub
repnz
pop
repnz
inc
and
sub
pop
push
fldt
push
adcb
andb
push
lds
pop
lods
imul
js
js
ljmp
cmpsl
stos
cmp
insl
std
test
cwtl
push
pushf
sti
push
cmpsl
std
push
lahf
push
dec
fisttps
fsts
pop
int
addr16
push
cld
aas
and
and
call
lret
mov
outsb
or
jg
push
mov
adc
dec
inc
les
int3
and
xor
movsb
ret
fisttpl
xchg
add
insl
cmp
mov
fmuls
loopne
sub
xor
sub
rolb
shlb
mov
shlb
mov
push
mov
es
lret
lret
arpl
xchg
les
imul
out
mov
es
inc
mov
xor
add
sbb
xchg
add
jno
xorb
add
sub
fimuls
or
cmp
push
int3
inc
and
lcall
lret
scas
pop
xchg
mov
movsl
int3
aas
aad
jmp
push
in
add
pusha
notb
bound
lods
lret
inc
xchg
cmp
out
adc
ljmp
xor
jb
gs
adc
push
cmpsb
xor
sub
mov
dec
mov
adc
sbb
dec
fidivrs
and
data16
pop
sahf
inc
int3
inc
and
int
shrl
mov
in
setge
push
lahf
push
jmp
adc
xor
inc
fidivrl
out
mov
cmpsl
xor
inc
aam
dec
lea
jae
in
mov
rorl
or
jae
push
add
xor
loopne
icebp
nop
arpl
mov
mov
and
idivb
mov
lret
cmpsb
push
test
bound
pop
jp
jg
icebp
popa
add
add
outsl
or
in
scas
push
xorl
adc
or
sbb
lret
fsubrl
add
add
sti
or
js
xchg
mov
in
lret
lret
or
sbb
or
js
imul
js
mov
cwtl
adc
add
cmp
and
sbb
jecxz
push
in
std
insb
loop
je
fimuls
mov
sbb
xchg
aas
popa
sti
imul
dec
xchg
and
mov
jmp
push
in
sub
outsl
lcall
or
lret
add
add
and
lret
and
sub
add
ja
add
adc
addr16
sub
in
lret
lret
sub
or
mov
mov
loope
out
mov
and
push
lds
inc
and
push
arpl
ja
loope
addb
repnz
fwait
sbb
das
mov
jmp
push
in
adc
adc
add
add
in
bound
outsb
or
or
imul
fwait
decb
fwait
jbe
push
adcb
andb
mov
push
xchg
add
push
sbb
mull
icebp
dec
sub
movsb
xor
int
lea
insl
hlt
pop
lods
gs
popa
add
inc
clc
insl
std
test
mull
nop
arpl
push
insl
hlt
pop
mov
mov
jmp
and
movsb
ret
ds
sub
ss
call
fimuls
das
mov
shl
jnp
mov
push
jns
jmp
add
dec
loop
adc
testb
sbb
lret
sbb
sub
add
ja
add
adc
movsl
sub
lret
lret
fxch
or
ja
or
adc
popa
add
pmulhw
xchg
bound
jbe
push
sbb
notl
mov
lods
lret
inc
movsb
or
jge
push
cld
sysexit
mov
mov
lods
lret
inc
xchg
dec
rclb
add
mov
inc
mov
lds
lods
pop
jmp
inc
xlat
mov
out
pop
enter
mov
pushf
enter
data16
insb
stc
imul
mov
sbb
jge
sub
inc
es
imul
insl
mov
mov
mov
xchg
adc
imul
push
std
jl
rcll
inc
repz
xorb
fdivl
in
test
fwait
decb
jno
sbb
xlat
jge
add
add
dec
fstpt
adc
push
lcall
and
mov
js
jp
sub
aaa
cmpsl
ret
orl
decl
stc
or
int
shlb
jp
in
cs
cwtl
adc
mov
mov
and
push
mov
les
xor
xchg
adc
add
sbb
lret
fsubrl
add
add
clc
or
js
mov
or
lret
lret
movsl
into
or
ja
or
adc
add
mov
lds
scas
aas
pop
test
pusha
xchg
mov
and
clc
lahf
push
or
out
in
je
insl
sub
out
out
mov
adc
fwait
sbb
inc
aad
dec
movsl
pop
fmuls
fdivrs
mov
sbb
mov
ficompl
xchg
lea
nop
push
popa
nop
arpl
jl
fimuls
add
pop
jp
adc
lock
and
adcl
cmpsl
aaa
push
mov
jo
aaa
fwait
or
xor
jecxz
push
in
mov
mov
es
push
pop
jp
ds
sti
imul
dec
outsl
cli
push
xlat
inc
and
sbb
lahf
punpckhdq
fwait
jbe
insl
lret
add
add
and
lret
and
adc
add
ja
or
adc
test
shrb
lret
rorl
add
add
adc
lret
lret
sub
add
ja
push
or
js
add
lret
lret
adc
adc
jge
dec
roll
rcll
cmc
outsb
cld
fwait
jbe
dec
aad
sub
aaa
jmp
xchg
outsb
xchg
mov
test
clc
outsb
or
xor
push
lret
mov
push
shlb
fsubrl
enter
jp
imul
fsubrs
push
mov
or
mov
nop
testl
mov
cmpsl
lcall
sbb
insb
loope
adc
xor
mov
scas
cmp
mov
mov
lahf
repz
notb
into
test
in
je
sub
and
ja
xorb
insl
std
test
cmp
aas
pop
test
push
mov
jmp
fiaddl
mov
test
setg
or
movsb
cmp
jns
mov
mov
lahf
cli
or
ret
mov
cmpsl
addb
icebp
add
addb
repnz
jb
push
cld
add
in
jl
jne
jno
adc
mov
jg
jns
xchg
jb
insl
pop
popf
or
pushf
xor
push
out
pusha
notb
es
mov
xchg
sbb
dec
fdivrl
mov
adc
or
test
inc
roll
shll
xor
mov
inc
mov
es
inc
mov
jg
jnp
in
sub
pushf
xor
inc
cmp
push
xchg
add
jo
xorl
mov
push
std
xor
mov
dec
leave
pop
cmp
and
jg
mov
xchg
xchg
repnz
addl
or
pop
fimull
fisubrl
inc
rclb
sub
out
ficomps
scas
pop
mov
mov
adc
movsl
cmp
mov
lods
and
push
test
push
cltd
andl
and
lret
and
add
adc
cmc
cmp
call
movsl
dec
mov
fmul
push
ret
cmpsb
push
lods
push
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
fcoml
mov
outsl
or
mov
sub
fwait
or
sub
lret
arpl
xchg
gs
js
mov
loopne
ljmp
mov
cmc
pushf
outsl
scas
sbb
rcrl
pop
lea
push
std
adc
mov
jle
or
loop
pop
loop
test
mov
add
dec
ret
mov
adc
fstpl
test
cmpsl
add
cmp
cs
mov
call
sbb
jp
inc
xlat
mov
lods
outsb
out
adc
or
ds
mov
test
cmp
dec
sahf
insb
loopne
adc
and
jnp
in
dec
pop
iret
pop
cmp
popa
mulb
push
jns
jg
jmp
adc
inc
inc
inc
and
outsl
mov
mov
and
mov
insb
lahf
cmp
add
sahf
pop
cmp
dec
mov
rol
pop
iret
stos
pop
and
push
lds
jle
call
scas
pop
xchg
out
insb
loop
je
cld
jl
jne
insb
xchg
xchg
repz
jmp
aas
scas
lret
ljmp
mov
push
rolb
sarb
adc
or
cmpsb
push
lret
mov
lods
adc
loopne
lcall
loop
je
lods
and
inc
shlb
jg
jmp
xor
ja
jmp
jno
ja
loope
ret
mov
jnp
in
pop
sub
adc
insb
or
mov
mov
dec
aad
sub
push
and
push
push
dec
mov
add
test
pop
test
push
add
jnp
in
add
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
lods
and
cld
jne
mov
inc
roll
aad
pop
xlat
inc
and
sub
rclb
addr16
jnp
mov
jno
push
fisttps
flds
fwait
or
sub
imul
xchg
add
sbb
mov
inc
mov
addr16
pop
cmp
add
sbb
xor
into
or
ja
sbb
adc
add
jmp
fbld
popf
imul
jmp
shll
push
mov
mov
jmp
cmpsb
das
pop
call
dec
les
int3
imul
push
scas
sbb
push
call
cmp
add
jmp
les
inc
add
movsl
sar
decl
adc
mov
dec
mov
add
inc
jb
push
call
lcall
shll
dec
add
xor
cld
push
popf
or
xchg
jb
dec
divb
call
test
movzbl
jmp
nop
or
adc
setg
or
mov
xchg
adc
fisttpll
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
pop
or
js
mov
lret
lret
xchg
sbb
adc
pushf
sbb
and
pop
popf
inc
jmp
stos
sub
jns
mov
sbb
inc
pop
iret
jg
lds
jmp
lahf
pop
mov
cmpsl
ret
push
aam
sub
inc
dec
sub
clc
adc
add
sbb
lret
lret
add
lret
sub
xor
add
ja
adc
adc
loop
push
fs
lret
lret
pop
adc
mov
jmp
lds
mov
test
add
test
pushf
sti
push
hlt
clc
jo
xorl
adc
or
sbb
lret
sub
xor
add
ja
adc
adc
iret
xchg
lret
adc
adc
sbb
adc
push
test
rcrb
push
xor
and
std
adc
mov
xchg
add
adc
enter
add
mov
dec
mov
jns
pusha
jbe
gs
sbb
jl
testb
xchg
add
inc
repz
mov
test
xchg
icebp
add
adc
int
aam
dec
lods
ljmp
jbe
cmpl
out
jl
notb
sahf
or
cmpsb
jb
mov
dec
mov
push
add
inc
shlb
sbb
and
jne
mov
sahf
or
mov
mov
and
jg
cmpsl
xor
cwtl
push
imul
inc
and
cmp
pop
iret
stos
pop
lea
adcb
subb
pop
ds
popa
insb
or
addl
addr16
sbb
fwait
decb
into
cmp
stos
cbtw
clc
jge
je
push
out
lock
bound
sbb
mov
mov
mov
jg
push
pop
addl
jg
addr16
pop
test
cwtl
decl
faddp
dec
fistpll
mov
out
jl
testb
mov
jmp
hlt
imul
insl
ret
shll
loop
mov
aas
scas
lret
cmp
pop
xchg
repnz
xor
and
sub
jb
pop
dec
mov
faddl
add
add
lret
xor
adc
adc
inc
mov
xor
cmpsb
xor
scas
jp
push
call
cmc
jg
mov
fstl
mov
test
pop
stos
jne
je
out
inc
lock
notb
pop
bound
inc
mov
mov
gs
add
sub
incl
xchg
add
sahf
aaa
or
adc
xchg
add
xor
inc
mov
push
lahf
push
ljmp
data16
xchg
outsb
xchg
fadds
add
xchg
sub
jp
jp
in
imul
push
in
insb
mov
lock
and
lcall
jae
in
jecxz
sti
sahf
insl
xchg
lods
sub
test
jnp
mov
dec
rclb
xor
add
pop
jno
outsl
or
jecxz
adc
cmpsb
sub
xor
repz
cmc
xor
pop
push
lret
ljmp
jl
bound
int
addr16
std
imul
lods
cmp
pop
lret
scas
pop
in
jno
jp
in
dec
pop
les
int3
emms
in
bound
pop
aas
lret
cmp
and
adc
aam
sub
jbe
loopne
push
js
ljmp
das
test
xchg
lock
xor
cs
cmp
pop
mov
outsb
in
sbb
mov
adc
test
pop
test
cmp
mov
xchg
repnz
jbe
push
cld
xchg
cmc
add
jns
jns
jmp
mov
mov
cmpsl
aaa
push
mov
hlt
pop
lods
mov
xchg
dec
sub
sti
sahf
insl
fsubr
jns
mov
cmp
test
and
jg
loop
adc
add
cld
call
and
lret
and
add
add
sbb
adc
cmpsb
inc
rol
in
lret
lret
pusha
adc
adc
int
das
mov
dec
mov
cmpsl
push
mov
xchg
sti
fs
popf
insb
jmp
or
in
frstor
jbe
loopne
scas
sub
loopne
notl
mov
imul
insl
mov
push
jmp
xchg
pop
bound
shlb
jg
push
cld
push
jg
gs
sbb
jl
jne
ja
add
std
or
je
imul
cmp
mov
in
pusha
notb
push
jno
xlat
inc
fidivrl
push
xor
out
mov
pop
or
loop
adc
or
sbb
lret
lret
add
add
adc
inc
outsb
mov
add
xchg
dec
or
mov
xorb
je
lea
sub
push
sbb
or
or
xor
lret
lret
sub
add
ja
push
or
js
pushf
sbb
dec
in
lret
lret
jl
or
mov
sti
dec
and
and
or
or
xor
lret
lret
sub
add
ja
push
or
js
fisubrl
or
lret
push
and
adc
sahf
cmp
stos
cmp
push
test
test
mov
and
inc
mov
push
int
and
push
jae
bound
loopne
jb
cs
inc
mov
rclb
mov
test
cmp
int
fnstcw
scas
leave
cmp
sub
push
nop
sbb
fimuls
add
fimull
fidivrl
jl
imul
or
xchg
add
aas
scas
lret
cld
jo
xorl
dec
jmp
cltd
adc
lahf
punpckhdq
mov
repz
push
lds
iret
cmp
mov
push
in
xor
cwtl
add
pop
int3
stos
data16
mov
inc
mov
lods
pop
mov
movsb
cmp
sub
test
jge
or
jmp
mov
int
and
cmp
or
test
nop
testl
out
lds
sarb
push
ret
mov
xlat
mov
lods
add
ja
jbe
cmpl
adc
in
sbb
mov
out
adc
int
mov
out
enter
jle
hlt
push
cld
push
lret
scas
pop
jmp
mull
icebp
push
sbb
out
out
jo
dec
fimull
fisubrl
aam
sub
outsl
or
les
les
lods
pop
lds
iret
and
daa
mov
ss
jmp
jecxz
notb
or
jb
add
xlat
inc
and
and
xor
jbe
es
fildl
push
cmp
and
xchg
insb
push
mov
jle
imul
cmpsb
lret
movsl
mov
faddl
add
add
xor
lret
adc
lret
lret
adc
add
ja
adc
adc
xchg
aaa
pop
in
lret
lret
or
or
mov
sbb
psubd
push
lahf
push
popf
pop
xchg
adc
sbb
aaa
roll
mov
stc
add
and
setle
cmpsb
rdmsr
movsb
cmp
sbb
das
test
mov
fisttpl
fnstsw
pop
cmp
or
jnp
mov
mov
and
inc
and
cmp
fwait
or
sbb
and
das
mov
mov
jle
arpl
inc
and
pop
fisttps
fstps
lods
sub
clc
outsb
or
or
dec
mov
inc
mov
pop
popa
out
jg
jmp
scas
pop
test
ret
loop
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
push
mov
push
aaa
ret
push
xchg
repz
out
inc
xlat
mov
stos
rclb
pop
mov
in
bnd
cmpl
fisttpl
fnsave
cmpsb
sub
lds
push
fmuls
fdivrs
mov
inc
iret
pop
cmp
and
adc
in
sbb
lahf
adc
cmc
gs
aas
cmc
js
mov
fisttpll
movsb
push
jecxz
fimuls
dec
sbb
mov
mov
and
jle
mull
xchg
pusha
leave
roll
mov
fidivrl
stos
into
cmp
inc
mov
dec
rolb
sarb
sbb
lods
xor
push
pushf
sti
push
xchg
lods
sub
fstpl
stos
data16
loop
test
jge
imul
xchg
pop
bound
pop
loop
push
rolb
sarb
fs
jl
testb
bound
arpl
cmc
pop
iret
sub
add
out
notl
ja
xorb
adcl
dec
fdivrl
outsb
or
dec
popa
repnz
pop
repnz
call
leave
fisttpl
mov
push
jns
cmp
fs
push
or
adc
aaa
push
mov
jne
inc
faddl
mov
iret
stos
pop
lea
sbb
arpl
test
pop
test
loopne
in
je
add
push
aaa
ret
jae
xchg
imul
sbb
add
jmp
rcrl
jb
in
addb
repz
sti
dec
into
pop
cmp
ds
scas
leave
cmp
fcoms
mov
dec
sub
mov
sbb
rorb
push
icebp
pushl
xorl
mov
scas
and
lret
pop
ds
pop
mov
gs
cmp
decl
sub
adc
imul
fnstcw
and
push
lds
mov
sbb
or
adc
xor
pop
sbb
dec
rolb
rclb
imul
jb
xchg
xlat
push
lds
popf
insb
mov
pop
ljmp
stos
orl
rcll
pop
mov
dec
fdivrs
jb
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
push
fwait
or
jns
inc
shll
xchg
cmc
add
inc
iret
pop
cmp
jo
mov
add
pushf
pop
xchg
adc
sarl
cld
fwait
jbe
popa
mull
icebp
dec
pop
enter
popa
cmpsl
aaa
cmpsl
ret
or
test
xchg
adc
subl
or
into
pop
lret
scas
pop
mov
js
inc
jecxz
push
in
out
ja
xorb
fisttpll
out
pop
fmuls
fcoms
movsb
and
das
lods
cmp
dec
frstor
xorb
out
adc
cmp
out
rcll
mov
pop
cmp
cmp
dec
sub
cmp
pop
jp
jae
cmp
pushf
xor
add
leave
arpl
jge
divl
xchg
sbb
and
pop
enter
xchg
push
xchg
repz
mov
jnp
mulb
xchg
pusha
rcll
push
aaa
ret
mov
jg
cmp
std
pop
xchg
or
stos
cmp
dec
out
in
mov
xchg
fs
dec
fdivrs
pop
cmp
dec
ds
fs
sbb
add
adc
movsl
xor
fimuls
sbb
gs
jge
je
jo
sub
sub
fwait
or
jns
mov
or
nop
test
in
outsl
faddl
add
add
sub
lret
add
sub
or
lret
sub
sub
add
ja
aaa
or
js
cli
mov
or
lret
mov
or
mov
xchg
xor
inc
fidivrl
push
jns
dec
jne
mov
add
sub
lret
sub
lret
lret
cmp
add
ja
and
ja
xchg
xchg
in
lret
lret
arpl
or
mov
sbb
xor
or
or
or
or
lret
or
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
add
add
and
adc
lret
sbb
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
lea
add
cmp
adc
push
push
xchg
add
cmp
mov
inc
mov
fildll
addl
and
popa
es
inc
mov
xor
adc
imulb
je
outsb
sti
imul
sbb
inc
and
cmp
push
lds
mov
les
nop
mov
lock
insl
std
test
leave
dec
fistpll
cmpsl
ret
mov
roll
push
xor
pop
lds
mov
mov
scas
inc
jbe
xchg
cmc
add
popa
ljmp
insl
hlt
pop
loope
xor
pusha
notb
dec
sub
mov
cs
cmpsb
sub
jnp
mov
jnp
jle
call
xor
mov
jmp
adc
xor
pushf
sbb
adcb
lods
cmp
fstpt
mov
mov
popf
or
cmp
sbb
pop
xchg
adc
mov
shrb
lods
cmp
adc
imul
enter
pop
jns
pushf
pop
sub
xor
scas
pop
mov
lods
mov
cmpsl
lea
fwait
decb
test
outsb
or
pop
mov
shlb
stos
into
cmp
test
sbb
adc
in
sbb
ret
cmpsl
push
jecxz
cwtl
dec
cld
faddl
add
add
sbb
lret
add
sub
add
lret
sub
sub
add
ja
xor
adc
imul
or
lret
lahf
and
adc
sahf
aaa
xor
xor
adc
lods
and
sbb
mov
nop
arpl
sbb
dec
imul
insl
mov
adcb
subb
dec
das
fidivl
mov
mov
in
sbb
sbb
icebp
jb
xchg
jl
xchg
cmc
add
add
lcall
or
lret
sbb
xor
add
ja
and
adc
add
mov
in
lret
lret
shll
or
mov
fbld
lret
dec
ret
adc
les
xor
dec
add
sbb
xchg
gs
push
pop
sbb
xor
and
add
ja
pop
or
js
sbb
mov
lret
lret
push
add
add
imul
js
jb
xor
in
lret
lret
mov
or
ja
data16
mov
leave
push
les
fidivrl
xor
dec
in
jae
xchg
cltd
sbb
lret
lret
fdivl
in
sub
ds
test
push
roll
sarl
and
out
loop
je
sub
scas
es
fnstsw
cltd
idivb
mov
aas
mov
inc
mov
adc
sbb
insb
std
insl
hlt
pop
lods
sub
mov
mov
mov
and
es
outsb
cli
push
jle
mov
adc
sub
or
std
insl
hlt
pop
out
add
xor
dec
mov
test
mov
pushl
xchg
add
jnp
adc
roll
shll
cs
sti
imul
sub
lock
add
sbb
pop
rolb
shlb
push
fisttpll
out
test
and
notl
popf
or
sti
imul
pop
add
inc
int
and
pop
mov
pushf
jae
ja
loope
inc
rolb
sarb
pop
mov
xchg
adc
stc
outsb
cld
fwait
jbe
lcall
arpl
xchg
gs
flds
mov
andb
push
lds
pop
lds
iret
daa
cli
popa
icebp
nop
arpl
repz
leave
pop
cmp
dec
sbb
int
add
pop
aam
sub
pusha
pop
repnz
jno
outsb
or
or
test
jge
sub
dec
das
fimull
mov
std
adc
xchg
add
cli
push
and
mov
add
add
sub
lret
sub
lret
faddl
add
add
or
or
sub
xor
add
ja
and
adc
arpl
outsl
add
lret
lret
and
adc
push
cmp
lea
mov
sbb
mov
sub
push
lds
loop
je
xor
push
sbb
xchg
or
stos
cmp
js
mov
pop
fisttpll
out
pop
fmuls
fdivs
out
hlt
xchg
outsb
xchg
jp
jp
adc
push
fisttpl
fisttpll
xor
add
push
lahf
push
jmp
adcb
adc
add
outsb
cld
fwait
jbe
xchg
sbb
lods
and
pusha
xchg
cltd
clc
or
insb
out
adc
dec
xchg
add
dec
ret
std
lock
notb
out
jo
pop
iret
pop
cmp
inc
roll
sarl
adcl
test
arpl
xchg
gs
in
jne
mov
pop
les
int3
cs
push
pushf
sti
push
cld
and
add
js
jne
out
push
sub
movsb
ret
ds
jl
xchg
cmc
add
push
lea
or
mov
movsl
int3
aas
ljmp
divb
xorb
repz
cmc
add
enter
daa
shlb
add
stos
and
xchg
sbb
jp
jp
out
lock
lds
xchg
add
and
andl
xchg
and
push
lds
xor
xchg
popa
jns
arpl
cmc
inc
adc
daa
sbbl
or
inc
fimuls
or
xchg
add
sahf
jbe
nop
push
popa
nop
pop
int
shlb
xchg
gs
mov
sahf
stc
or
divb
cmpl
es
cs
cmp
mov
push
rolb
shlb
arpl
je
out
push
leave
inc
shll
and
dec
fnstsw
mov
xor
sub
or
or
lret
xor
push
add
add
sub
js
imul
or
fildll
or
mov
or
mov
sub
adc
adc
rcl
xor
in
adc
testb
sbb
lret
fmull
add
add
sub
adc
jnp
dec
push
in
lret
lret
cmc
xor
adc
mov
dec
push
xor
sbb
es
mov
mov
scas
leave
cmp
fsts
ret
push
lds
insl
std
test
roll
mov
jmp
pop
ljmp
test
xchg
adc
dec
in
add
leave
push
shlb
sbb
pop
jnp
jo
loop
insl
icebp
popa
add
jbe
and
addl
je
gs
adc
mov
mov
frstor
fbstp
mov
inc
mov
fcomps
fs
sub
aas
pop
test
jl
jle
cmpsl
aaa
push
mov
xorl
push
cmc
mov
xchg
xchg
sbb
or
mov
fisttpll
movsb
push
jecxz
iret
pop
cmp
jle
add
push
xor
outsl
ljmp
stc
mov
rclb
imul
out
aad
mov
out
sub
je
lea
mov
insb
sti
imul
adc
dec
sub
popa
test
mov
dec
xchg
scas
adc
inc
push
xor
sub
inc
sub
mov
cwtl
decl
dec
dec
fnstcw
sub
xor
and
push
lahf
push
loope
std
test
mov
in
pop
and
lods
lods
lret
inc
lock
xchg
pushf
or
in
movsl
mov
subb
hlt
pop
mov
test
xchg
add
sahf
sub
lock
lds
xchg
push
shll
xor
sub
notl
inc
fimull
ficompl
fimuls
popa
fdivrs
adc
testb
sbb
lret
lret
jg
add
ja
and
adc
cmp
or
lret
sub
add
ja
and
adc
and
add
lret
lret
sbb
or
mov
inc
lea
data16
mov
and
sub
lds
in
icebp
nop
arpl
shlb
leave
aas
and
inc
sbb
idivl
je
popa
jmp
sbb
xor
or
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
inc
add
add
sub
adc
xchg
inc
pop
std
in
lret
lret
add
pop
loop
adc
add
lret
lret
inc
sub
adc
lret
hlt
adcl
test
fdivl
in
adc
cli
push
mov
jns
das
xor
je
jne
out
inc
cmp
add
fsubs
xor
sub
add
ja
sub
adc
negl
sub
lret
jbe
add
ja
sub
adc
cltd
mov
mov
lret
lret
stc
adc
adc
or
mov
mov
sti
imul
push
rolb
dec
std
or
or
xor
mov
gs
and
dec
fnstsw
es
mov
cmc
outsb
cld
fwait
jbe
xchg
or
in
xor
sbb
rorl
mov
sbb
or
jo
add
sbb
imul
inc
fisubl
xchg
gs
icebp
popa
add
add
out
jg
jmp
push
cmpsl
push
pop
xchg
or
jle
lods
cmp
xlat
inc
and
sub
rolb
shlb
outsb
cld
fwait
jbe
xchg
cltd
clc
or
in
pusha
notb
jmp
ret
ret
jg
mov
cltd
or
leave
pop
cmp
js
cmp
pop
push
shll
aaa
ret
sub
stc
imul
inc
sub
xor
sbb
movl
ja
lea
jnp
mov
enter
dec
mov
shll
add
add
lcall
add
ja
sub
adc
pushf
xor
jmp
jbe
sub
mov
mov
sbb
stc
les
cmp
das
rorb
mov
sbb
popa
test
mov
sbb
outsb
jmp
lret
add
rorb
fcomps
stos
pop
adcb
and
das
or
and
pop
divl
xchg
xchg
sbb
pop
int3
stos
data16
mov
jg
outsb
xchg
sbb
push
mov
shlb
out
rclb
popf
or
mov
adc
adc
in
jmp
jge
jns
jge
testl
adc
cmp
or
mov
pop
mov
int3
dec
fisttpl
fnsave
cmpsl
lods
lret
inc
scas
pop
lds
iret
dec
in
jno
xorb
inc
fidivrl
mov
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
sbb
dec
aas
stos
cmp
push
pop
mov
or
clc
notl
insb
repnz
pop
bnd
popf
or
adc
ljmp
stc
out
fcompl
mov
push
cmc
push
clc
jle
mov
ds
xchg
xchg
lock
mov
cmpsb
shll
stc
jno
xorb
repz
cmc
adc
mov
inc
mov
in
jge
testl
das
mov
pusha
notb
pusha
pop
repnz
aaa
push
mov
adc
pop
pop
lret
lret
sbb
lock
lret
ret
lods
pop
in
sub
sub
adc
es
mov
push
xchg
add
ss
pop
xchg
repnz
mov
mov
daa
mov
and
cwtl
xchg
mov
and
add
xchg
testb
fidivrl
addl
sbbl
testb
sbb
lret
lret
sub
add
ja
push
or
js
push
and
in
lret
lret
out
and
dec
fstpt
js
ljmp
jnp
xor
xor
xor
add
add
add
add
adc
add
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
xchg
xor
adc
lret
dec
push
xor
sub
xlat
inc
and
cmp
push
ret
cmpsb
push
mov
popf
cmp
js
mov
inc
into
pop
cmp
adc
push
mov
insb
or
mov
inc
shll
jp
in
pop
popf
or
in
mov
testb
shll
xor
scas
sbb
pop
ds
mov
mov
xor
adc
xor
cmc
xor
adc
daa
cmp
iret
in
lret
lret
sub
add
ja
sub
adc
or
pushf
in
lret
lret
imul
mov
repz
mov
jns
bound
lret
mov
mov
in
insl
std
test
cwtl
sbb
sahf
or
cmpsb
dec
lods
cmp
sbb
mov
inc
mov
enter
push
mov
jae
or
adc
mov
mov
jg
push
mov
pop
aam
sub
xchg
repnz
inc
nop
mov
stc
lock
test
adcl
sahf
or
cmpsb
cmovne
dec
lods
cmp
or
adc
cltd
or
cs
lods
pop
cli
adc
lds
stos
data16
adcl
je
lea
fimuls
popa
adc
mov
sub
jl
xchg
cmc
add
mov
cmpsl
ret
insl
jmp
jg
outsb
or
das
and
ss
mov
aas
lret
call
jg
push
cld
push
popa
out
jg
jmp
xorb
mov
mov
sti
jne
mov
popa
in
bound
imul
or
push
add
or
sub
enter
cltd
clc
or
jmp
jne
ja
loope
inc
aad
sub
jp
dec
fidivrs
test
cmp
insb
hlt
push
cld
push
dec
aad
sub
xor
loop
fs
imul
jecxz
jne
clc
jns
mov
mov
lahf
cli
or
hlt
jnp
mov
mov
or
mov
inc
mov
mov
and
sti
xchg
and
loopne
jne
mov
mov
xchg
repnz
leave
inc
mov
mov
push
fidivs
and
adc
xor
adc
or
mov
add
loopne
jecxz
jne
mulb
insb
fimull
mov
in
jge
testl
inc
mov
icebp
xor
mov
mov
das
lcall
out
jnp
mov
or
addr16
insl
hlt
pop
out
jmp
cwtl
mov
stos
rorl
mov
pop
ds
repz
xorl
dec
mov
lods
dec
push
nop
push
popa
nop
outsb
cmp
push
lds
fwait
or
outsb
loopne
sti
sahf
insl
subl
xor
push
push
ja
loope
idivb
mov
cld
paddd
cmpl
push
test
jge
dec
xor
sbb
add
add
add
add
lret
add
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
adc
push
add
add
xor
adc
jnp
or
lret
lret
cmp
adc
jbe
push
lret
ljmp
les
pop
in
je
jnp
in
inc
dec
fisttps
fsts
cmp
jmp
push
in
pop
stos
cmp
data16
xchg
cmc
add
push
mov
loopne
out
mov
stc
pusha
notb
movsl
int3
aas
mov
dec
iret
dec
int3
inc
and
cmp
inc
pop
fmuls
fdivs
mov
dec
sbb
sub
bound
add
ja
xor
adc
ret
jl
lret
lret
sub
or
mov
mov
add
add
and
lret
and
and
add
ja
xor
sbb
pop
in
lret
lret
sarb
adc
mov
push
mov
jns
jbe
mov
inc
mov
test
xchg
icebp
add
imul
jbe
xchg
cmc
add
mov
xchg
repnz
rorb
dec
lods
sub
idivl
mov
jbe
outsl
or
rol
dec
ret
xchg
popf
adc
add
xor
sahf
or
cmpsb
pop
or
or
cmp
cmp
pop
leave
pop
cmp
jle
cwtl
push
imul
pop
xchg
adc
mov
xchg
adc
pop
int
lea
out
xchg
outsl
lock
ja
inc
aad
dec
test
jbe
inc
shll
mov
es
pop
fisttps
fstps
pop
fisttpll
out
jns
movsb
daa
mov
and
out
imul
insl
cwtl
sbb
das
movsl
xor
lock
bound
xor
loop
push
fistpl
das
mov
mov
pushf
mov
mov
xchg
jle
call
ljmp
hlt
inc
cli
jae
xchg
cli
outsb
cld
fwait
jbe
xor
push
lds
popf
insb
mov
inc
aam
dec
movsb
mov
mov
mulb
jns
push
mov
cmc
pushf
outsl
movsb
rcll
mov
and
cli
divb
mov
pop
fisttpll
out
push
pop
jp
inc
cmp
push
lds
sbb
punpckhdq
in
pop
out
mov
lret
fdivrl
popa
add
add
push
les
js
ljmp
es
sbb
test
jge
cmp
push
lds
je
sub
lods
lret
inc
negl
mov
jg
jae
je
out
dec
imul
add
cmp
lret
add
add
and
lret
and
adc
add
ja
dec
or
js
adc
lret
lret
xchg
push
or
mov
dec
scas
fiadds
mov
movsb
add
rcrl
loopw
mov
push
fisttpl
fstl
int3
dec
frstor
int3
aas
aad
xchg
add
je
jno
xorb
imul
insl
mov
jno
std
js
mov
cltd
adc
mov
movsb
sub
lds
lock
mov
cmp
pop
xchg
adc
or
push
jno
inc
sbb
aaa
in
in
jle
lcall
inc
shll
or
les
int3
jge
add
out
adc
pop
loopne
jmp
jge
mov
out
int
les
pop
aas
lret
data16
xchg
outsb
xchg
dec
sub
pusha
lahf
add
fwait
or
push
cs
inc
mov
xchg
pop
xchg
adc
rcll
mov
mov
xor
sub
sub
and
or
sbb
sbb
adc
adc
add
add
imul
lahf
cli
or
mov
xor
jle
arpl
cmpsl
aaa
push
mov
scas
pop
mov
sub
xor
jbe
rclb
xor
lock
pop
leave
test
stos
movsl
cs
into
pop
cmp
xor
in
pushl
xorb
mov
jmp
cmc
pushf
outsl
scas
sub
aaa
push
mov
or
dec
and
push
xchg
mov
sbb
push
rcll
jo
xor
lret
lret
mov
dec
mov
js
dec
mov
mov
adc
data16
xchg
outsb
xchg
cld
popa
icebp
nop
arpl
movb
test
cmpsb
add
add
jp
in
adc
mov
rcll
lods
pop
test
push
lahf
push
jno
imul
or
jns
mov
add
fs
xor
cld
call
and
lret
and
sub
add
ja
xor
sub
in
lret
lret
sbb
adc
or
dec
xchg
sbb
icebp
popa
add
push
fwait
setg
or
int
xor
sbb
out
pop
xchg
pop
bound
mov
in
lret
stos
rolw
mov
dec
mov
je
lea
inc
and
xor
test
jge
fs
push
lds
mov
sbb
ss
jp
outsl
or
out
cmpsl
and
pop
fimull
fidivrl
fstps
xchg
addr16
out
notb
fistpll
or
jb
lret
lret
lock
bound
aam
pop
rolb
shlb
sahf
adc
fisttpll
out
add
mov
test
xor
ret
ret
pop
int
addr16
popf
or
lret
pop
ds
insb
stc
imul
xchg
cmc
add
cwtl
adc
mov
inc
mov
pop
lds
iret
das
aam
ret
mov
dec
movsb
dec
aam
sub
mov
mov
rolb
inc
test
push
mov
shlb
test
xchg
lock
stos
sub
lds
sbb
fs
adc
pop
orl
cli
or
add
rcrb
scas
pop
mov
jl
mov
test
pop
jp
inc
jbe
push
stc
imul
pop
and
arpl
mov
jbe
je
out
pop
insl
cld
xchg
cmc
add
or
in
sbb
inc
pop
roll
aad
inc
shll
popf
in
lods
movsb
ret
ds
dec
fstpt
jne
out
add
cmp
pop
cwtl
push
imul
add
out
sbb
fdivrl
call
sbb
lret
xor
cmp
adc
add
fcomps
stos
pop
adcb
or
divl
xorl
loope
bnd
mov
leave
inc
shll
push
xor
and
inc
shll
js
call
sbb
lret
adc
lret
fcoml
add
add
cmp
adc
insb
lock
in
lret
lret
xlat
inc
or
mov
lds
jmp
sti
sahf
insl
int3
aam
leave
test
lea
mov
lcall
mull
insb
lds
test
stos
cmp
add
push
cld
dec
fimuls
mov
xchg
testb
jnp
mov
test
lcall
lcall
sub
emms
out
jg
jmp
mov
mov
jmp
mov
jns
pusha
movsb
and
ja
fs
sbb
loop
mov
mov
sub
inc
inc
int
and
es
dec
ret
mov
add
jge
je
jbe
lret
pop
ds
dec
fistpll
adc
mov
sub
push
jl
jl
testb
sbb
xchg
aas
jl
bound
movsl
int3
aas
xchg
pop
pop
jp
and
or
adc
je
out
dec
add
or
cmpsb
gs
nop
imul
add
sbb
cmp
inc
aam
fdivrs
pop
cmp
push
jl
insb
or
iret
in
cmc
pushf
outsl
test
scas
aas
pop
test
decl
out
fcompl
scas
pop
movsb
fistpl
fs
fimull
fisubrl
cld
jg
mov
ficoml
mov
sub
and
sbb
inc
leave
pop
cmp
cmp
dec
fidivrs
lcall
sbb
dec
aad
into
test
int3
stos
data16
sahf
ds
cmp
mov
cltd
or
inc
shll
je
out
inc
or
and
outsb
cld
fwait
jbe
mov
fcmovnu
inc
xlat
mov
movsl
adc
pop
xchg
jb
or
arpl
xchg
gs
mov
mov
pusha
fdivrl
call
sbb
lret
sub
sub
add
ja
inc
or
js
or
lret
lret
rcll
adc
cmp
adc
add
add
mov
cli
jg
mov
cmp
push
xor
lahf
cli
or
push
inc
and
and
mov
mov
mov
sbb
push
lret
scas
rcrl
scas
pop
mov
nop
je
rolb
shlb
mov
lcall
jb
insb
or
les
mov
and
sbb
pop
jmp
sarl
mov
inc
mov
out
out
jno
ljmp
sub
mov
repz
push
sahf
or
cmpsb
dec
insb
sti
imul
adc
xchg
cmp
dec
lods
cs
jle
mov
loopne
stc
ja
fs
sbb
inc
and
and
push
mov
loop
je
std
js
mov
cmp
sub
xor
out
jg
jmp
sbb
sbb
jg
jmp
push
cmpsl
jno
push
adc
cld
call
and
lret
and
add
add
xor
adc
xor
sub
in
lret
lret
aas
xor
adcl
test
lret
lret
lods
cmp
mov
inc
mov
sub
pop
roll
aad
das
mov
lret
xchg
gs
std
test
push
ret
ret
add
fnstenv
lret
add
add
add
adc
add
add
add
cmp
mov
lret
lret
add
pop
loop
adc
add
lret
lret
aad
or
in
lret
fildl
mov
mov
sub
jmp
loopne
jb
sbbb
jmp
mov
cmp
out
sti
sahf
insl
mov
jg
xchg
push
fisttpl
fnstsw
push
rolb
shrb
leave
pop
cmp
push
sbb
push
mov
test
or
out
cld
fwait
jbe
cmc
jl
jne
ja
rcll
xor
popa
repz
cmc
xor
sahf
or
cmpsb
add
mov
dec
mov
ret
ds
push
lds
iret
jl
movsb
cmp
add
cmp
adc
inc
rep
cmp
mov
sahf
or
and
sahf
or
cmpsb
dec
pop
les
int3
dec
add
sbb
mov
pop
mov
mov
cltd
clc
or
cmp
cmp
push
lds
pop
lret
inc
es
sbb
test
pop
test
inc
lret
lret
lahf
punpckhdq
and
or
test
orl
jns
mov
dec
fimull
fisubrl
sbb
and
mov
or
out
pop
push
mov
and
mov
add
and
adc
imul
addr16
insb
or
out
jmp
jmp
jge
insb
icebp
popa
add
jbe
mov
inc
mov
xchg
push
test
push
imul
jae
xchg
jle
push
cwtl
push
imul
imul
insl
sahf
dec
leave
pop
cmp
and
lods
and
inc
cwtl
adc
and
cli
push
dec
fdivrl
gs
sub
jl
jne
inc
lea
xchg
icebp
add
push
mov
adc
adc
jmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
cmp
adc
inc
out
and
lret
lret
cmpsl
inc
or
mov
pop
bnd
jg
jmp
sahf
insl
ret
sub
or
cmpb
cmp
push
jne
jbe
loopne
imulb
je
dec
aad
sub
aas
cmc
jae
xchg
les
xchg
mov
push
xor
dec
xor
cmp
cs
je
pop
jp
jg
mov
jg
bound
push
cmp
sub
notl
cmp
add
pop
into
test
stos
int
iret
inc
leave
pop
cmp
sub
out
nop
pop
ljmp
and
lcall
add
push
push
test
jge
cmp
mov
push
cmpsl
popa
lock
pop
aas
scas
aas
pop
test
xchg
push
push
xor
jns
mov
gs
xor
inc
daa
rclb
lds
stos
data16
xchg
or
jns
mov
les
test
fimuls
sbb
xchg
pop
lods
cs
fwait
or
jae
ja
xor
or
or
or
sbb
lret
lret
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
inc
add
add
push
or
js
das
call
or
lret
and
add
ja
dec
or
js
loopne
in
stos
in
lret
lret
add
pop
loop
adc
or
lret
lret
leave
pop
or
in
lret
mov
xchg
mov
repz
icebp
nop
arpl
int
repnz
fs
imul
insl
jge
je
sub
sbb
pop
int
addr16
shlb
das
dec
mov
mov
aam
int
push
xchg
repz
mov
popf
or
pop
lret
scas
pop
xchg
enter
dec
mov
push
out
dec
fistpll
adc
jg
outsb
cld
fwait
jbe
je
add
add
sub
mov
xchg
pusha
addb
sbb
insl
pop
roll
shll
mov
cwtl
orb
jo
xorl
cltd
add
cmp
dec
fnstcw
clc
lahf
push
outsl
insb
or
scas
dec
fmuls
fsubrs
and
cwtl
push
imul
jge
je
inc
fiaddl
mov
lods
lret
cmpsl
push
mov
inc
lods
add
mov
inc
mov
push
rolb
rcrb
adc
rcll
mov
cs
mov
jge
jb
push
ret
cmpsb
push
test
dec
sub
adc
rcl
enter
xor
and
das
mov
mov
rcrb
fs
and
jle
cmpsb
xor
scas
insb
pop
fisttpl
fnstsw
das
scas
cmp
mov
dec
enter
ss
aaa
push
mov
xor
test
mov
jae
xchg
in
data16
xchg
outsb
mov
mov
ret
pushl
xorb
jno
xorb
loopne
adc
and
inc
mov
out
cmp
clc
imul
inc
mov
icebp
sbb
add
cmp
dec
frstor
adc
add
sbb
lret
lret
pusha
push
or
mov
negl
frstor
out
sbb
cltd
push
clc
or
ret
pop
leave
test
mov
adc
pop
leave
test
fidivrs
adc
data16
jmp
push
pushf
sti
push
incb
cmp
call
and
lret
and
push
add
add
dec
or
js
jae
adc
in
lret
je
or
mov
ret
inc
fidivrl
daa
inc
mov
in
icebp
nop
arpl
test
movb
inc
test
jno
push
sbb
xchg
pop
bound
iret
cmp
or
push
mov
jg
dec
sub
sub
lds
dec
fdivl
in
mov
mov
lods
cmp
lods
cmp
in
sbb
sub
jno
sub
ret
ret
pop
lret
scas
pop
mov
mov
sub
scas
xor
sbb
gs
pushf
outsl
movsb
jne
fs
push
or
add
jl
fisttpll
out
inc
lret
pop
ds
jge
push
dec
fistpll
add
sahf
jbe
daa
mov
and
sub
xor
inc
shlb
nop
testl
lret
inc
loope
test
jge
pop
rcrb
cmpsb
sub
aaa
push
mov
imul
popf
or
loopne
adc
dec
mov
mov
das
pushf
or
xor
mov
data16
xchg
outsb
leave
imul
add
cmp
jbe
cmpl
adc
and
ret
arpl
xchg
gs
and
test
jge
inc
movl
iret
stos
pop
adc
mov
stos
into
cmp
lods
pop
mov
mov
stos
call
xchg
push
xchg
add
jno
adcb
andb
outsl
lcall
loopne
xchg
add
inc
jno
xchg
testb
shlb
mov
dec
fimull
fidivl
push
mov
es
jbe
jne
out
inc
in
jns
mov
je
jno
jecxz
out
loopne
jb
pop
jb
xor
cld
call
and
lret
and
cmp
add
ja
inc
or
js
sahf
jnp
movsb
in
lret
lret
inc
add
add
inc
or
js
add
inc
fucomi
lret
lret
out
dec
or
mov
xchg
xor
notl
lret
push
mov
pusha
pop
repnz
pop
cmp
filds
mov
enter
fsubrs
scas
movb
test
adc
inc
fdivrl
call
sbb
lret
xor
inc
add
add
dec
or
js
mov
lret
lret
out
or
mov
je
and
inc
fidivl
jmp
xor
sub
add
ja
dec
or
js
out
ja
in
lret
lret
xor
or
mov
adc
stc
or
lcall
mull
icebp
dec
sbb
or
or
sahf
or
xchg
add
cmp
jnp
in
pop
dec
fimull
fidivrl
sbb
push
ret
cmpsb
push
mov
xor
movsl
xor
call
in
jb
xchg
into
dec
ret
popf
xchg
adc
popf
or
test
imul
sbb
addb
or
or
sbb
and
fistl
mov
aas
pop
test
loope
mov
sub
jmp
push
in
sub
inc
daa
shlb
and
xor
xor
xchg
or
sub
mov
mov
aad
xchg
int
enter
jp
jl
testb
or
mov
inc
mov
sub
and
out
adc
add
int
fldl
mov
mov
inc
push
xor
pop
in
hlt
xchg
outsb
xchg
add
sbb
scas
aas
pop
test
mov
into
test
jb
in
xor
mulb
or
adc
adc
xor
inc
jo
outsl
or
hlt
push
fstpt
mov
js
pop
orb
adc
cld
ja
xorb
pop
lret
scas
pop
in
xor
rcll
push
out
rolb
mov
call
pop
out
sub
sub
adc
xchg
jno
jp
in
dec
add
sbb
insb
mov
mov
mov
loopne
in
mov
in
pop
lcall
adc
cmp
cwtl
pop
ljmp
and
mov
inc
mov
jae
fs
push
push
mov
gs
addr16
outsl
or
in
ja
inc
or
mov
dec
or
mov
xor
cld
call
and
lret
and
sub
add
ja
dec
or
js
mov
pushf
shr
lret
lret
stos
dec
or
mov
lods
jg
call
imul
add
mov
call
jmp
cmp
jge
jl
call
adc
out
push
call
call
jmp
and
aas
pop
test
imul
push
jmp
mov
mov
pop
jne
int3
popf
dec
dec
xchg
je
jmp
jne
je
out
inc
and
push
push
call
insb
cld
xchg
cmc
add
cli
imul
pop
repnz
fs
push
call
and
shlb
ret
jmp
sahf
or
push
test
push
mov
sahf
pop
xchg
aad
adc
inc
pop
iret
stos
pop
lea
or
add
call
leave
jg
jp
pusha
push
jmp
jbe
jge
negl
cmp
pop
ret
ret
loopne
adc
sub
ljmp
call
addb
lock
addb
icebp
add
nop
pop
xchg
adc
sarl
push
add
call
inc
lret
pop
ds
outsb
and
into
decl
pop
jp
inc
out
mov
add
add
out
adc
fdivl
in
jge
fs
sbb
pushf
push
jmp
fists
lods
pop
mov
or
test
add
inc
and
pushl
jmp
push
jmp
sbb
cmp
dec
fdivrs
mov
and
sarb
sti
jmp
or
jbe
jnp
in
inc
mov
cltd
mov
mov
jmp
lock
inc
rolb
shlb
in
bound
sub
jmp
pusha
jmp
mov
mov
es
in
js
mov
js
jo
loop
push
mov
mov
or
loop
adc
testb
xor
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
dec
or
js
add
lret
lret
sub
adc
sar
inc
adc
adc
leave
push
mov
jbe
loopne
mov
test
aam
les
xor
dec
popa
out
adc
pop
adc
add
add
dec
frstor
xor
cld
pminub
inc
or
andb
sub
jo
mov
jmp
and
mov
add
jnp
bswap
jmp
movsb
and
xor
nop
sbb
inc
aam
dec
lods
xor
pop
add
jmp
les
push
mov
fimuls
adc
xor
jne
addl
mov
movzbl
jmp
cmp
loopne
in
int3
popf
ret
dec
ret
sbbb
add
movsl
or
cltd
add
add
mov
add
stos
je
popa
mov
jmp
push
xchg
add
ss
and
notl
mov
in
and
add
push
mov
jmp
mulb
xchg
outsb
fbld
adc
mov
stc
outsb
cld
fwait
jbe
jb
rcll
push
add
add
jge
testl
hlt
outsb
cld
fwait
jbe
adc
xchg
lea
jmp
mov
mov
cs
mov
inc
mov
sbb
popl
jmp
add
sbb
aas
hlt
jno
pusha
pop
repnz
icebp
leave
pushf
inc
cmp
jmp
gs
sbb
jl
testb
imul
jne
mov
mov
sub
push
adc
cld
call
and
lret
and
xchg
add
add
inc
or
js
mov
lret
lret
insl
push
or
mov
loopne
jmp
movb
inc
jmp
outsl
ljmp
out
jno
xor
mov
leave
jmp
and
xor
jmp
hlt
mov
jmp
or
jp
popa
add
add
decl
jmp
mov
xor
jne
jmp
xchg
sbb
dec
ret
subb
xor
scas
insb
push
adcl
mov
jmp
cltd
or
jmp
adc
or
xor
addr16
dec
lea
aad
loop
ljmp
test
lock
insl
push
cmpsb
mov
jmp
dec
fimull
fisubrl
movsb
cmp
or
test
jmp
lret
push
mov
xor
adcl
adc
sub
add
add
in
lret
sub
mov
or
mov
mov
jle
fldl
xor
cld
call
and
lret
and
adc
add
ja
push
or
js
xchg
inc
test
lret
pop
dec
or
ja
pop
or
mov
and
dec
mov
push
mov
iret
cmp
lea
fwait
decb
adc
push
lds
repz
gs
fs
popf
insb
scas
or
das
ret
push
lds
rclb
imul
call
mov
cmp
data16
push
lahf
push
jnp
jl
notb
leave
pop
cmp
or
notl
sub
push
fiadds
mov
mov
cmp
adcl
push
mov
pushf
sti
push
aas
mov
inc
ret
ret
imul
jle
mov
jnp
jle
xor
mov
inc
mov
xchg
sbb
mov
cmc
jns
mov
or
push
fisttpll
out
pop
xlat
inc
and
js
mov
mov
mov
sbb
inc
cmc
or
pop
lret
lret
arpl
xchg
gs
out
jno
mov
sbbl
mov
mov
adc
std
fs
popf
insb
test
outsb
or
jg
xchg
or
sbb
js
ljmp
sbb
sbb
and
jl
push
jno
xorb
cmp
mov
mov
pop
outsl
jmp
push
in
sbb
pop
cmp
sub
outsl
or
jecxz
lds
iret
or
in
popa
icebp
nop
arpl
sub
cmp
daa
inc
mov
xor
pop
xchg
or
xor
imul
add
pop
lret
pop
ds
ret
pop
repnz
fs
es
cs
add
dec
xor
jmp
jmp
cmp
push
mov
jmp
jle
mov
jg
outsl
in
imul
add
jb
or
sbb
leave
cmp
jmp
xchg
mov
jmp
mov
stc
out
icebp
nop
arpl
cld
inc
sbb
jmp
push
jmp
into
inc
fidivrl
addr16
sbb
out
or
pop
adc
jne
push
push
pushl
call
jmp
leave
inc
mov
mov
popa
icebp
nop
arpl
imul
add
xchg
sbb
add
inc
cmp
cmp
jmp
jl
sbb
pop
ret
loopne
jmp
jb
xchg
pop
mov
jg
sub
leave
popa
mov
ja
dec
or
ja
jmp
xor
sub
sub
and
add
sbb
sbb
adc
adc
fmull
add
add
pop
or
js
ja
out
in
lret
lret
movsl
pop
or
mov
subl
cmpl
call
and
lret
and
inc
add
add
pop
or
js
ret
jbe
mov
lret
je
or
mov
xor
gs
and
mov
and
jl
aam
in
jne
mov
call
test
je
mov
jmp
fisttps
mov
jmp
jge
dec
rolb
rclb
inc
dec
stos
mov
out
push
push
push
push
push
lea
jmp
in
mov
jmp
clc
xor
mov
jmp
outsb
sti
imul
sbb
push
les
arpl
cmc
sbb
push
cld
jnp
fdivrl
push
jmp
out
ja
xorb
push
shll
fldcw
shlb
or
incl
jmp
xor
ficoml
call
jmp
in
push
lahf
push
addl
mov
cwtl
decl
jmp
aaa
push
mov
xchg
shr
add
add
leave
inc
and
adc
add
movzwl
jmp
adc
or
sbb
push
sbb
je
inc
add
cmp
jb
jmp
jp
push
cld
pop
inc
je
jmp
xor
push
lds
pushf
adc
xor
push
jmp
push
jmp
stc
je
lea
sub
lds
cwtl
or
push
lea
jmp
push
lds
iret
jl
xor
mov
inc
mov
lea
pop
aas
pusha
xor
jmp
pop
jmp
lock
pushf
outsl
les
movsb
add
jo
js
ljmp
push
adc
xchg
dec
xlat
inc
and
cmp
jae
sbbl
out
sbb
roll
jmp
cltd
add
clc
gs
pushf
outsl
ljmp
arpl
jbe
loopne
mov
cltd
ja
pop
or
mov
push
or
mov
add
push
jmp
orb
jmp
insl
repz
cmc
sbb
xchg
adc
paddq
jmp
clc
call
jmp
or
lea
jmp
mov
xchg
div
pushl
jmp
loop
push
jmp
sbbb
lock
or
imul
sbb
push
jae
outsl
or
hlt
adc
push
xor
ja
jmp
adc
sub
add
ja
push
or
js
mov
or
lret
jle
or
mov
loope
jmp
insb
in
sbb
sbb
jns
add
addr16
push
mov
call
mov
push
call
mov
call
jmp
arpl
cmc
daa
jb
insb
or
not
ror
ljmp
decl
stos
dec
fdivl
in
jbe
jnp
in
inc
mov
cltd
mov
jmp
add
jmp
pop
push
loopne
add
sub
cmpsl
aaa
push
mov
sbb
inc
js
jl
testb
ss
mov
jmp
mov
mov
cmc
xor
jmp
add
add
dec
fistpll
pop
cmp
adc
push
xor
sbb
and
add
ja
pop
or
js
mov
aaa
fucomi
lret
lret
lods
and
adc
pop
mov
test
test
add
add
adc
lret
lret
jae
or
mov
sub
popa
nop
pop
or
mov
loop
adc
add
sbb
lret
loop
adc
or
or
or
lret
clc
adc
testb
sbb
lret
fcoml
add
add
pop
or
js
dec
jbe
stc
in
lret
lret
xor
adc
imul
jmp
jg
xchg
cmc
add
das
mov
jmp
xor
jmp
fistps
xchg
lea
push
xor
sub
lret
fdivrl
dec
or
jecxz
add
mov
mov
mov
movzwl
jmp
lahf
sbb
push
shll
out
add
mov
add
mov
mov
mov
jmp
inc
enter
cmp
mov
gs
jbe
push
lahf
push
push
and
xchg
mov
dec
imul
hlt
add
pop
lods
sub
lock
lds
movsb
cmp
js
jae
push
shll
inc
pushl
mov
push
mov
call
mov
jmp
inc
int
and
pop
ljmp
cld
jmp
pop
aad
sub
jp
or
fwait
cs
mov
mov
add
mov
jmp
hlt
gs
pushf
outsl
mulb
xchg
outsb
fildll
in
dec
fisttpll
out
jmp
jl
sbb
call
push
adc
cmpb
and
sbb
inc
push
jmp
adc
lahf
or
iret
pop
cmp
adc
dec
fdivrs
mov
push
mov
jmp
dec
sub
test
add
sub
sub
push
test
cmpsl
ret
pusha
notb
sub
inc
or
jmp
jge
je
add
mov
mov
add
call
jmp
arpl
ja
loope
xor
push
sahf
or
cmpsb
dec
xorl
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
pop
addr16
jmp
jns
outsb
or
sbb
cmp
add
stos
or
mov
push
incl
add
pop
cmp
jmp
insl
daa
insb
lea
jmp
cmc
ja
xorb
roll
aad
sahf
adc
in
sbb
sbb
icebp
sarl
mov
jmp
xchg
sbb
cmp
cmp
mov
mov
pop
sbb
adc
dec
clc
sub
mov
pushl
add
add
jmp
or
push
mov
mov
jmp
lds
mov
mov
and
in
pusha
notb
add
mov
push
jmp
jne
jne
out
pop
rcll
push
sti
jns
jg
jmp
mov
addr16
push
jmp
mov
mov
and
std
push
mov
mov
push
cmp
push
push
jmp
mov
jmp
outsl
sti
imul
cmp
inc
or
xor
in
lods
loop
adc
testb
sbb
lret
lret
sub
dec
push
or
js
push
bnd
in
lret
lret
cmp
add
ja
push
or
js
out
jnp
in
lret
lret
push
push
or
mov
inc
andl
and
jne
add
arpl
cmc
cmp
in
in
std
push
mov
call
test
je
mov
mov
sub
jmp
pop
jb
jge
mov
push
cld
jmp
pop
jmp
mov
add
jmp
cmc
jbe
cmpl
jl
jne
insb
addb
lock
inc
jle
jmp
lock
cld
jmp
push
fisttpl
frstor
or
lock
popa
add
clc
adc
add
sbb
lret
lret
xchg
pop
or
mov
pop
push
cs
sbb
jmp
mov
jmp
lods
and
or
ret
out
inc
cmp
mov
call
xor
call
mov
pushl
jmp
cmc
adcl
test
push
test
push
in
cmpsb
sub
xor
adc
and
push
mov
inc
into
pop
cmp
jno
push
pushf
sti
push
mov
call
jmp
sub
imul
and
jg
jmp
mov
repnz
cmp
push
lds
iret
jl
xchg
mov
jmp
and
imul
cmc
add
add
inc
roll
shll
inc
xlat
mov
mov
pushl
jmp
imul
jmp
dec
xlat
inc
and
cmp
aam
push
test
mov
inc
push
xchg
mov
call
jmp
ret
arpl
xchg
gs
jbe
cmpl
mov
add
jmp
mov
lock
dec
fstpt
frstor
ljmp
lock
pushl
mov
push
pushl
call
jmp
jbe
add
push
es
repz
pushl
pushl
call
mov
inc
jmp
mov
cmpsb
shll
cld
js
mov
or
rorb
dec
mov
adc
push
jb
jmp
inc
jmp
in
data16
xchg
outsb
mov
stc
xchg
pushf
sti
push
in
jl
jns
loop
adc
testb
sbb
lret
lret
adc
add
ja
pusha
or
js
sbb
or
lret
movsl
or
mov
and
cmp
jmp
lahf
lods
sarb
jmp
jmp
push
jmp
sbb
aaa
mov
and
push
fdivl
in
sbb
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
bound
adc
cld
jecxz
mov
lret
lret
iret
or
mov
decl
test
pop
jmp
mov
jmp
mov
mov
and
xchg
lahf
jp
mov
ret
jmp
and
int
call
or
xchg
or
sub
fnsave
fmuls
fsubrs
pusha
mov
mov
mov
andb
jmp
cwtl
adc
or
mov
in
jnp
mov
and
sub
jmp
dec
rolb
sarb
jp
jp
in
imul
cmp
mov
inc
popa
rcl
jmp
outsb
sahf
gs
mov
ret
aam
les
xchg
testb
mov
call
add
xchg
popf
pushl
jmp
pushf
sbb
jno
movzbl
jmp
daa
cmpsb
xor
scas
dec
ficompl
fs
xchg
adc
pop
mov
jmp
inc
ret
ret
push
jecxz
cltd
push
fsubrl
leave
xor
add
jne
addl
jmp
test
jb
popa
ljmp
popf
push
add
add
jmp
inc
roll
aad
out
jg
jmp
or
cmp
add
cmp
je
popa
mov
jmp
bnd
je
and
ja
loope
adc
and
and
jmp
lods
sub
loope
adc
or
adcb
xorb
mov
jle
cmp
xchg
and
jbe
sub
add
add
in
lret
sub
inc
add
add
pop
or
js
xor
pop
in
lret
lret
xchg
bound
adc
add
add
sub
lret
adc
lret
lret
sub
add
ja
or
js
stos
hlt
psrad
lret
lret
arpl
adc
inc
jmp
fildll
push
xor
push
ds
or
arpl
xchg
mov
cwtl
push
imul
or
in
xchg
or
pop
dec
enter
and
dec
sub
xor
sbb
outsb
ficompl
fs
cltd
and
aaa
cmpsl
ret
xchg
sbb
aad
xlat
push
fwait
or
jns
jae
xchg
les
cmpsb
push
mov
ljmp
cmc
pop
enter
mov
scas
lret
cli
push
cwtl
or
lcall
inc
and
js
ljmp
and
mov
inc
repnz
cmc
gs
pop
sbb
cld
gs
pushf
outsl
nop
or
insl
std
test
and
test
mov
sbb
es
jne
fs
push
mov
movsb
ret
ds
push
roll
shll
int3
inc
and
sbb
pop
xor
inc
rclb
sub
negb
push
call
test
adc
mov
lods
lret
inc
mov
imul
or
shlb
arpl
cmc
xor
mov
in
sbb
mov
fisttpl
pop
int3
stos
iretw
aam
shlb
cmp
add
je
out
pop
pop
lret
lret
xchg
mov
mov
jg
push
mov
dec
frstor
sub
pusha
mov
xchg
adc
jb
mov
lods
fstps
stos
pop
pop
fdivl
in
call
mov
jae
xchg
adc
mov
cltd
clc
or
daa
mov
inc
mov
sbb
xchg
ja
nop
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
orl
stc
or
sub
loop
stc
cwtl
imul
add
mov
push
fisttpll
out
je
outsl
or
mov
push
loopne
iret
pop
cmp
jle
stos
cmp
sbb
push
std
push
adc
pop
iret
pop
cmp
jle
inc
and
imul
add
sub
xchg
or
je
arpl
cmc
sbb
movsl
xor
dec
test
adc
testb
sbb
lret
faddl
add
add
lret
cld
adc
testb
sbb
lret
fdivl
add
ja
bound
adc
ljmp
in
lret
xor
or
mov
xchg
dec
roll
aad
jle
xchg
testb
outsb
xchg
repnz
jg
setg
or
fwait
sbb
add
loopne
clc
lahf
push
sub
and
and
push
xchg
pushf
sti
push
in
pusha
notb
shll
in
jle
xchg
sbb
arpl
xchg
gs
and
lea
loope
adc
dec
lahf
setg
or
push
stc
or
adc
mov
lods
cmp
or
in
negb
push
xor
and
push
xor
daa
rorb
push
rcr
dec
fstpt
xchg
cmc
add
sub
popf
and
adcb
andb
sbb
ja
xchg
add
inc
xchg
adc
outsl
ljmp
sub
xor
add
pop
aam
sub
push
imul
dec
fistpll
dec
das
ficompl
leave
inc
fidivrl
mov
mov
push
lret
pop
ds
imul
psubd
fisttpl
lcall
mov
xor
push
mov
jne
out
cmp
movsl
cmp
mov
lods
or
push
faddl
mov
test
mov
push
xor
daa
in
jae
xchg
and
push
mov
or
dec
mov
int3
xor
daa
inc
mov
xchg
in
out
inc
and
cmp
jb
xchg
push
test
js
mov
mov
loopne
enter
or
adcl
movsb
cmp
sbb
xchg
jb
es
and
xor
ljmp
aas
pop
or
mov
jecxz
inc
rolb
sarb
mov
inc
mov
xchg
outsb
jo
pop
shrb
add
add
sbb
lret
lret
das
add
add
jb
adc
xor
jle
in
lret
lret
int
or
mov
xchg
and
push
iret
pop
cmp
adc
aaa
cmpsl
ret
jg
jne
out
pop
out
in
je
insl
rcrb
data16
mov
dec
mov
or
push
aaa
ret
jo
xorl
daa
rolb
addl
push
lcall
test
pop
cmc
test
shrb
jp
in
push
add
xor
jb
xchg
cmc
add
lods
and
cmpsb
xor
scas
insb
dec
fnstcw
nop
testl
lods
pop
hlt
or
data16
gs
push
add
or
push
lahf
push
adcl
leave
pop
cmp
or
jns
jmp
push
mov
xchg
jl
mov
js
popa
mov
rcrl
data16
ja
xorb
push
mov
jmp
jge
mov
movsb
ret
into
add
inc
lret
pop
ds
cmp
das
dec
mov
mov
loop
lcall
fdivrs
push
ret
push
lds
dec
sub
adc
inc
mov
xchg
pop
leave
pop
cmp
jg
fimuls
dec
lods
inc
shll
and
sbb
dec
stc
cmp
fwait
or
push
ret
ret
loopne
adc
and
mov
cmp
cltd
add
push
ret
cmpsb
push
aam
pop
dec
int3
inc
and
jae
in
arpl
jno
jecxz
lods
sub
lds
cli
jl
jne
jp
push
les
mov
adcl
sbb
jle
imul
sbb
jnp
pusha
pop
repnz
test
daa
test
popf
adc
sub
sbb
add
add
xor
lret
lret
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
sub
add
ja
outsl
or
js
and
and
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
push
jo
adc
lret
js
js
ljmp
xchg
inc
roll
shll
cltd
or
xor
psubd
push
iret
pop
leave
test
out
jnp
jl
notb
adcb
addb
adc
arpl
aam
inc
mov
test
or
out
out
mov
xor
cmp
or
jle
or
mov
movsb
ret
ds
stos
pop
dec
into
pop
cmp
ds
rolb
shlb
es
inc
mov
dec
rcll
and
aaa
in
bound
inc
es
mov
lock
mov
inc
mov
cmpsb
xor
int
mov
fmull
push
in
jb
xchg
mov
xchg
das
mov
mulb
nop
arpl
daa
ret
push
lds
inc
fmuls
fdivrs
int3
push
lret
mov
sub
lret
lret
int
and
push
adc
stc
jp
jp
xchg
adc
in
sbb
jge
je
pusha
push
bound
int
addr16
mov
inc
rcll
sub
mov
cld
jne
mov
mov
shlb
mov
pop
inc
and
or
jne
adcl
test
fldt
sahf
push
pushf
sti
push
cmpsl
pop
int3
inc
and
cld
fwait
jbe
add
xchg
add
lods
lret
inc
loope
push
sub
hlt
adc
add
sbb
lret
lret
cmp
add
ja
imul
dec
test
in
lret
stos
imul
mov
mov
add
ja
out
adc
popl
add
add
adc
lret
faddl
add
add
lret
add
add
adc
lret
ja
je
adc
mov
lods
lret
inc
movsb
cwtl
add
dec
fdivrl
and
xchg
or
add
push
adc
add
sahf
push
movsl
es
cs
lahf
sbb
pusha
out
adc
or
jb
xchg
fstpl
scas
pop
out
icebp
nop
arpl
push
rcrb
test
daa
inc
mov
ret
dec
fnstcw
mov
pop
cmp
jo
aad
sub
or
pop
cmp
out
jno
dec
fisttps
fsts
test
push
shll
mov
jmp
outsb
dec
fnstcw
mov
xchg
mov
std
gs
pushf
outsl
scas
stos
aaa
cmpsl
ret
jo
jle
call
loope
clc
cmp
pusha
std
insl
hlt
pop
xorb
or
sbb
ficompl
test
mov
lds
inc
xchg
add
add
push
test
jl
outsl
arpl
jns
jmp
pushf
sbb
in
jge
notl
stc
imul
mov
sbb
fsubrs
mov
xchg
into
arpl
xchg
gs
mov
and
xchg
ss
sbb
cmp
adc
sub
insb
or
mov
mov
js
cs
push
xchg
std
data16
xchg
outsb
mov
jae
in
out
jbe
cmpl
adc
pop
lds
iret
dec
insb
out
jl
idivb
jl
insl
hlt
pop
in
and
inc
inc
push
xor
sub
loope
push
lahf
push
mov
in
loope
fmuls
fdivs
mov
ret
lods
es
cs
inc
iret
pop
cmp
xor
loope
adcl
loope
lods
xor
adc
add
add
sub
lret
sub
lret
fsubrl
add
add
or
js
lods
jo
mov
lret
lret
icebp
outsl
or
mov
bound
push
fmull
push
xor
roll
mov
stc
ficoms
cmpsb
push
cli
arpl
popa
add
inc
clc
outsl
lcall
inc
daa
shlb
pop
lret
scas
pop
repnz
or
in
mov
mov
mov
mov
pop
xchg
adc
movsb
inc
shll
mov
and
jle
jns
imul
cmp
inc
dec
into
pop
cmp
jg,pt
insb
or
jecxz
adc
xchg
add
inc
cmp
push
lds
loopne
sti
sahf
insl
add
fidivrs
push
xor
and
jns
jmp
jge
push
cld
mov
cmp
mov
sub
push
lds
push
mov
fildll
pushf
xchg
add
xchg
or
notl
pop
xchg
pop
bound
sbb
inc
mov
popf
dec
fstpt
repz
cmc
xor
jo
loop
stc
notl
nop
setg
or
jno
jge
divl
fs
popf
insb
jmp
mov
gs
pop
or
xor
and
or
ds
push
inc
and
sub
push
shlb
xorb
jo
xorl
mov
je
xchg
testb
jmp
xor
adc
aam
sub
in
mov
push
test
push
mov
out
adc
pop
sbb
cmp
cmp
loop
jmp
jge
loopne
ljmp
adc
dec
rorl
mov
stos
into
cmp
mov
rorb
mov
insb
or
subl
sub
movsl
es
cs
cli
jp
jp
out
cmc
pushf
outsl
mov
push
mov
test
pop
lret
mov
es
jmp
call
and
lret
and
push
add
add
out
adc
shlb
in
lret
and
or
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
add
orl
in
adc
lret
lret
imul
mov
add
adc
out
loop
je
or
mov
ret
frstor
pop
mov
ljmpw
push
fimuls
inc
push
outsb
or
dec
jae
jbe
loopne
inc
rolb
shlb
les
int3
gs
or
sub
cltd
xor
sbb
inc
mov
out
adcb
addb
push
imul
arpl
xchg
mov
dec
sub
pop
push
lret
lret
push
mov
lock
bound
sub
xor
out
push
jmp
mov
inc
mov
pop
iret
stos
pop
daa
mov
inc
mov
push
mov
jle
imul
lcall
rorb
push
icebp
dec
rcll
adc
ficompl
aam
iret
stos
pop
sarb
sbb
pop
cmp
cmp
or
aaa
cmpsl
ret
loopne
in
jle
adcb
mulb
dec
stos
cmp
mov
loop
out
jl
notb
adc
mov
mov
mov
inc
mov
sbb
inc
push
xor
pop
js
imul
bound
xchg
icebp
add
pusha
out
adc
adc
clc
jl
jne
jno
or
in
cld
dec
lret
pop
ds
add
sbb
fstpt
aad
ret
push
ret
cmpsb
push
hlt
pop
fisttpl
fisttpll
sbb
pop
cltd
adc
in
sbb
les
mov
call
loope
adc
push
dec
inc
fidivrl
mov
pop
leave
test
out
jae
je
out
dec
mov
test
push
frstor
mov
cli
adc
loop
adc
testb
sbb
lret
lret
inc
add
add
stos
or
js
fisttps
add
lret
lret
mov
mov
adc
cmc
imul
daa
mov
and
addl
push
push
xchg
mov
ja
ret
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
fdivl
add
ja
je
adc
fstp
jno
in
lret
lret
adc
mov
xor
xchg
adc
in
sbb
out
notl
out
jno
or
pusha
push
adc
repz
add
add
and
lret
and
push
add
add
jg
adc
jnp
push
mov
lret
lret
add
or
mov
sahf
jl
loopne
adc
add
lcall
sbb
cs
test
pop
test
push
fistpl
enter
dec
in
outsl
add
insb
or
scas
xchg
add
std
or
or
sub
loope
adc
dec
cmpsl
xor
les
int3
imul
loop
je
divb
xchg
je
bound
ss
mov
push
in
aad
fdivrs
mov
and
out
sbb
pop
stos
inc
xor
pop
ds
push
xlat
inc
and
or
loope
ljmp
stc
out
inc
into
pop
cmp
and
inc
cmpsb
lods
sub
loopne
adc
adc
mov
and
mov
shll
push
imul
jecxz
push
in
call
leave
push
push
xor
addr16
pop
xchg
repnz
movsb
or
mov
cmp
jo
xlat
inc
and
sbb
push
xor
sub
lds
iret
daa
out
jbe
cmpl
push
xor
dec
imulb
lcall
mov
dec
mov
xor
fcomps
stos
pop
cmpb
dec
iret
pop
cmp
add
add
add
int3
and
arpl
xchg
gs
push
mov
jle
imul
mov
iret
ds
inc
mov
fs
aas
mov
inc
mov
dec
push
xor
push
inc
repz
repnz
pop
repnz
je
jp
in
pop
sbb
push
xchg
cmc
add
cmp
dec
fldt
pop
leave
test
decb
inc
and
sbb
cmpsb
xor
scas
dec
jl
jp
in
push
xor
and
pop
or
fildl
dec
lret
cmc
jne
mov
gs
adc
push
push
pop
std
and
add
sub
lret
adc
lret
lret
sub
add
ja
jbe
adc
jns
je
in
lret
lret
lock
adc
pushf
je
dec
fstpt
xor
scas
push
stos
xor
fisttpl
bnd
mov
add
data16
int
xchg
inc
daa
shlb
leave
inc
mov
mov
lods
lret
inc
loope
dec
fdivrl
mov
lahf
cli
or
aaa
addl
fbstp
jne
out
pop
mov
xchg
repz
add
add
and
lret
and
jle
adc
je
mov
test
mov
mov
loopne
jmp
jge
call
mov
fs
popf
insb
mov
push
shll
adc
or
inc
ret
shlb
shlb
inc
sub
xor
dec
movsb
adc
lds
mov
mov
aaa
loop
jb
xchg
inc
ret
ret
clc
outsb
or
or
adcb
andb
movsb
ret
ds
outsl
lcall
shlb
inc
mov
lret
inc
aad
dec
popl
lea
sub
add
add
ja
xorb
lds
iret
fs
xor
sbb
inc
pop
roll
aad
js
arpl
cmc
push
push
test
jge
dec
adc
mov
and
clc
arpl
push
dec
fnstcw
jl
divb
xor
jno
pusha
pop
repnz
fs
popf
insb
test
push
xor
and
outsb
cld
fwait
jbe
in
icebp
nop
arpl
adc
jp
insl
hlt
pop
in
mov
int3
imul
aad
repz
xchg
insl
hlt
pop
divb
mov
insb
loope
adc
xor
movb
xchg
repnz
popf
sub
sarb
mov
jne
jp
in
inc
pop
pop
jp
es
addr16
mov
mov
sbb
or
iret
push
mov
mov
sbb
or
sbb
arpl
mov
inc
shr
lcall
sub
push
mov
cmpsl
ret
dec
roll
aad
mov
mov
roll
out
imul
out
jl
negb
jns
popa
add
add
sbb
packuswb
jge
notl
rcrb
test
stos
jnp
cs
xchg
adc
or
or
sub
lret
xor
lret
lret
add
add
jns
adc
loopne
jg
in
lret
lret
dec
ja
adc
adc
adc
fisttps
int3
inc
mov
addb
add
xor
jb
in
adc
daa
rolb
mov
repz
sub
sbb
lret
lret
adc
add
ja
jp
adc
rcl
leave
mov
lret
lret
icebp
jle
adc
inc
aad
sub
je
pop
inc
stos
ja
lods
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
jmp
xor
add
int
lds
lcall
push
in
fmuls
fdivs
jns
jne
out
push
int
and
push
push
and
push
mov
lret
mov
aaa
cmpsl
ret
push
roll
shrl
add
sub
mov
mov
nop
testl
cmp
das
rorb
dec
lods
jle
gs
push
mov
cltd
outsb
out
adc
cmp
pop
rolb
shlb
iret
pop
cmp
popa
inc
xlat
inc
and
jbe
dec
frstor
sub
dec
mov
xchg
jp
jp
lds
mov
mov
lock
bound
mov
xor
stc
imul
lcall
and
pop
ja
imul
xor
call
xorb
add
sbb
push
cld
add
mov
push
jl
testb
add
mov
lods
lret
inc
mov
ret
ret
stos
cmp
dec
dec
lret
pop
ds
aad
leave
test
decb
xchg
jb
pop
fistl
lods
pop
lahf
scas
and
gs
pushf
outsl
fcmovnu
dec
frstor
fwait
jbe
sub
rolb
mov
call
cmpsl
sbb
push
rcll
mov
fisubrs
push
mov
xlat
and
push
test
push
test
lret
fstpt
adc
mov
iret
cmp
add
lods
sub
lds
mov
mov
cmp
fs
popf
insb
mov
outsl
cwtl
lcall
lret
lret
adcl
xchg
or
js
dec
fnstcw
shll
repz
fidivrl
mov
and
add
add
and
lret
and
sub
add
ja
ja
adc
mov
je
in
lret
lret
ja
or
mov
in
sub
jno
xorb
push
pushf
sti
push
mov
dec
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
jle
adc
outsb
xor
in
lret
stos
jl
adc
adc
push
les
das
dec
mov
and
push
inc
imul
adc
add
xlat
es
xchg
testb
stc
rorl
int3
push
jecxz
push
in
or
or
cmpsb
adc
jg
jmp
ljmp
cs
outsb
cld
fwait
jbe
dec
fmuls
fdivs
push
lahf
push
mov
mov
dec
sub
sbb
pop
int
xchg
push
xor
sub
mov
or
cs
mov
jns
inc
jl
insl
hlt
pop
in
lods
xor
insl
std
test
gs
adc
pop
jmp
push
in
cmp
out
adc
sbb
aam
sbb
roll
shll
cmp
sub
pop
dec
frstor
lahf
push
out
pusha
notb
push
xor
add
xchg
je
je
out
pop
and
pop
int
and
fs
arpl
xchg
gs
aas
pop
test
inc
mov
mov
mov
and
aam
cli
pusha
notb
sub
fwait
or
jno
mov
jle
jbe
loopne
cmpsl
aaa
push
mov
or
xor
lods
cmp
sub
and
dec
jg
mov
xor
and
ja
pusha
pop
repnz
mov
insl
out
adc
or
xchg
jb
imul
add
add
pop
xchg
add
pop
iret
stos
pop
into
rorl
mov
in
jg
xchg
add
stos
cmp
leave
push
shll
fs
ja
arpl
xchg
mov
mov
jns
pusha
push
nop
push
popa
nop
pop
or
and
sarl
test
fistpll
mov
test
lret
cmpsl
aaa
push
mov
mov
mov
daa
mov
and
int3
inc
aam
dec
mov
mov
inc
mov
aas
mov
inc
mov
in
sbb
push
fisttpll
out
mov
icebp
ja
f2xm1
loop
adc
or
xor
lret
sub
mov
fcomps
scas
pop
cld
cltd
or
repz
cmc
pop
sub
add
int3
pop
enter
leave
pop
int3
stos
iretw
aas
test
hlt
notl
fiadds
dec
sete
insl
pushf
jle
das
mov
mov
gs
jl
repz
cmc
je
pop
int
loopw
int3
inc
and
outsl
or
out
popa
out
adc
pop
nop
pop
xchg
adc
mov
mov
cmp
dec
leave
pop
cmp
cmp
int
and
cmp
or
scas
sub
dec
fdivrs
ds
test
sub
sti
imul
das
test
jmp
outsb
leave
es
dec
mov
mov
es
mov
mov
mov
xchg
cmp
dec
das
fidivl
lock
aad
lahf
punpckhdq
adc
sub
xlat
aaa
cs
inc
mov
movsl
push
mov
add
adc
loope
icebp
nop
arpl
xor
pop
fimull
fidivl
leave
dec
fidivrs
and
dec
std
jp
jp
sbb
insb
loop
je
scas
sub
test
pop
test
add
ljmp
data16
xchg
outsb
leave
ja
jb
dec
cmpsb
xor
xor
add
add
add
add
lret
add
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
call
lret
jecxz
hlt
xchg
outsb
xchg
pop
enter
mov
sarb
mov
dec
mov
cwtl
imul
jmp
les
jmp
cmc
pushf
outsl
scas
adc
adcl
loop
test
inc
ljmp
push
lds
iret
sbbl
out
sbb
jecxz
mov
jb
xchg
inc
rolb
shlb
clc
outsb
or
cmp
mov
gs
jbe
fdivl
in
mov
shrl
fs
jns
push
shll
dec
mov
lcall
inc
test
pop
loopne
aas
scas
lret
sbb
push
xlat
inc
and
sub
cld
jb
outsb
or
or
pop
cmp
xor
inc
aam
dec
stos
mov
xchg
lock
sbb
add
xor
add
in
ss
cmc
gs
pushf
outsl
fistpl
and
jl
cld
xchg
cmc
add
mov
mov
and
int
mov
aad
lea
jp
in
pop
xchg
and
test
xor
int
fimuls
xchg
pop
bound
lea
or
in
xchg
jb
arpl
cmc
je
cld
xchg
cmc
add
sub
cmp
cmp
inc
aad
dec
test
les
int3
xor
fcompl
test
mov
sbb
push
fdivl
in
pushl
jl
scas
es
cs
mov
xchg
jb
sub
lret
jae
in
idivl
jp
loop
out
jo
mov
adc
fstpt
or
xor
pop
ljmp
setns
push
push
adcb
out
pop
enter
sub
aaa
push
mov
dec
mov
into
cmp
sahf
insl
fisubl
add
add
and
lret
fdivr
call
and
lret
and
and
add
ja
jl
adc
cmp
or
lret
sbb
or
ja
mov
adc
add
add
cwtl
in
loopne
jb
int3
pop
leave
test
lock
aad
xchg
push
movsb
pop
rclb
add
je
lea
roll
sarl
xchg
or
in
cld
cld
lock
in
jg
mov
in
hlt
xchg
outsb
cmpsl
cs
inc
mov
sub
loop
icebp
nop
arpl
cmp
pop
cmp
add
in
outsl
lcall
jo
loop
pop
roll
shll
jno
outsl
or
jecxz
mov
lds
mov
fs
sub
push
xor
or
push
mov
pop
out
add
aaa
and
adcb
loop
mov
sub
stc
imul
xlat
mov
clc
mulb
nop
arpl
pop
mov
jle
dec
fimuls
mov
iret
stos
pop
enter
push
mov
inc
shll
and
xor
mov
inc
push
xor
daa
sbb
popa
loopne
adc
add
nop
outsb
sahf
pop
mov
fmuls
cmp
aas
hlt
jle
mov
inc
mov
cmp
idivb
je
jbe
pop
jp
xor
push
shlb
pop
scas
outsl
in
cltd
push
dec
mov
aam
mov
imul
aam
sub
sbb
popf
or
inc
shll
sbb
xchg
xor
gs
ds
setg
or
faddl
dec
cmpsb
dec
rolb
sarb
call
stc
insb
icebp
popa
add
jbe
scas
cmp
mov
adc
jbe
adcl
ja
lods
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
les
mov
arpl
cmc
or
xor
jns
xchg
testb
push
mov
enter
cwtl
decl
call
push
xchg
bound
out
mov
shll
sub
push
xor
imul
xchg
or
imul
cmc
gs
push
jae
jnp
in
pop
test
lods
mov
in
jo
jp
in
pop
leave
pop
repnz
fs
lret
mov
ret
mov
add
pusha
notb
adc
push
enter
pop
jp
jp
push
mov
movsl
sub
xchg
jb
push
push
xor
xor
jbe
cmpl
mov
inc
push
xor
es
iret
dec
ret
ret
xor
mov
leave
inc
aad
dec
ljmp
push
fimull
ficompl
rcrl
fs
mov
mov
sub
lds
test
jecxz
loopne
jb
or
push
xchg
repz
cmpsl
cmp
xchg
xchg
dec
or
fsubrl
in
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubl
add
ja
jo
adc
in
xor
in
lret
jo
or
mov
adc
mov
mov
in
sbb
jb
jg
jmp
adc
add
inc
test
dec
lret
and
xchg
and
dec
roll
aad
add
sbb
fs
int
and
xor
mov
stos
int
jmp
sahf
or
cmpsb
push
addr16
xor
xor
or
add
add
add
lret
or
or
or
or
or
add
lret
lret
xor
or
add
ja
mov
jae
push
fs
lret
lret
add
add
scas
or
js
cli
int
loope
lret
lret
pop
push
test
jge
inc
mov
stos
into
cmp
insl
pushf
je
push
test
push
sti
jb
push
cld
add
mov
inc
mov
xchg
sbb
pop
xchg
adc
cmp
dec
or
es
cmp
mov
loop
stc
cwtl
imul
pop
push
lahf
punpckhdq
in
jge
notl
nop
push
popa
nop
es
mov
xchg
add
and
inc
and
jbe
mov
inc
mov
add
sbb
aad
xchg
inc
roll
shll
add
std
or
jb
jg
jmp
xchg
bound
subl
inc
and
push
test
movsl
int3
aas
mov
mov
decb
dec
mov
mov
mov
sbb
jbe
addr16
sub
test
xchg
repnz
imul
loopne
stc
cwtl
imul
inc
sahf
adc
scas
daa
mov
and
test
or
std
insl
hlt
pop
mov
push
test
in
sbb
lock
arpl
xor
jo
int
and
jl
and
sbbb
out
sbb
cmc
add
fwait
add
insb
or
in
hlt
jae
xchg
cmp
xor
and
pop
fcomip
je
lea
mov
dec
mov
add
sbb
pop
mov
sub
jae
push
cld
sub
push
shll
or
adc
cli
mov
xchg
inc
call
jmp
mov
int3
xchg
jns
push
ret
jmp
jle
je
out
add
adc
sub
xor
lods
cld
dec
int3
popf
lea
add
insl
std
test
ljmp
xor
sub
sub
and
or
sbb
sbb
adc
adc
fcoml
add
ja
mov
adc
mov
cli
out
in
lret
lret
les
add
rep
loop
je
aaa
mov
cmp
or
popf
call
scas
leave
cmp
mov
sti
call
jmp
or
add
jl
or
add
jmp
jge
je
pusha
mov
add
int3
popf
ret
mov
ds
test
add
cmpsl
aaa
push
mov
push
pushf
jmp
sbb
jl
jne
jno
cmpsb
xor
scas
inc
sbb
and
mov
sub
push
in
jbe
pushf
jo
push
or
push
call
mov
cltd
mov
test
pop
iret
stos
pop
movsl
bndldx
stos
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
xchg
ret
push
mov
jle
pushl
jmp
xor
jmp
dec
enter
jns
pop
into
test
bound
jo
mov
add
xchg
js
ljmp
mov
mov
adc
ss
mov
jmp
dec
xlat
inc
and
sbb
pop
xchg
adc
and
add
addl
and
fsubl
mov
test
mov
sbb
popf
add
les
loope
cli
cltd
mov
jmp
imul
add
pop
fwait
or
push
sbb
stos
sub
mov
andb
add
add
dec
pushl
imul
add
sbb
jmp
jb
imul
sub
fisttpll
out
xor
jg
mov
lock
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
and
push
icebp
popa
jmp
aaa
push
es
or
add
cmp
sub
lcall
bound
cmp
test
add
add
rol
dec
ret
xchg
lock
test
or
inc
mov
jmp
cmpl
shll
xor
xor
jae
jno
jecxz
enter
add
add
jmp
leave
mov
add
add
jmp
lcall
inc
fidivrl
mov
dec
fdivrs
jo
mov
and
cmp
jne
addl
jmp
aas
stos
cmp
or
lea
jmp
xchg
popf
mov
jmp
and
sbb
push
pusha
pop
repnz
mov
xchg
jle
mov
lcall
push
jmp
mov
movsl
out
ja
xorb
cmp
fmuls
fdivs
or
sar
inc
adc
jmp
stc
cwtl
imul
adc
or
add
jbe,pt
jmp
rolb
add
stos
sbb
or
fs
movsb
ret
ds
imul
mov
add
add
jmp
pop
xlat
inc
and
sub
inc
aad
dec
scas
into
inc
aam
dec
stos
pushl
cmpl
cmp
je
cmp
jmp
push
fimull
fidivrl
jnp
mov
fcoms
pop
sahf
jnp
fs
pop
cwtl
and
mov
lods
add
add
inc
fidivrl
xchg
icebp
add
fwait
sub
adc
and
mov
sub
push
xor
jmp
imul
jmp
mov
jmp
or
cwtl
sbb
out
add
add
mov
inc
mov
add
cmp
hlt
out
loopne
jb
push
push
lea
jmp
sbbb
jmp
stos
into
cmp
xorl
lods
jmp
pop
sahf
or
cmpsb
dec
mov
adc
sbb
push
inc
ret
ret
push
push
pushl
call
jmp
lcall
outsb
and
add
cmpsb
es
cs
cmp
insl
decl
add
jbe
adcb
cmpb
clc
lahf
push
fs
jl
decl
loopne
les
mov
add
adc
ret
jmp
divb
xorb
mov
jmp
repz
nop
sbb
pop
into
test
inc
and
addb
add
push
push
push
lea
jmp
jne
jmp
outsb
push
jmp
stc
jo
xorl
and
scas
and
mov
movl
jmp
aam
into
test
dec
sub
inc
xchg
add
lds
add
call
mov
mov
push
push
call
jmp
xchg
pop
jmp
into
aad
push
push
jmp
aas
lods
and
sbb
mov
jmp
pop
int
and
fs
push
lds
in
sbb
pop
out
xchg
call
mov
mov
push
call
mov
jmp
dec
fmuls
fdivs
push
test
push
test
jbe
jmp
mull
icebp
pop
cmp
pop
cmp
shr
add
add
aaa
lods
cmp
fimull
fidivl
pop
rclb
inc
hlt
jle
jne
lea
call
xor
jmp
mov
shl
add
push
jmp
mov
in
fstl
mov
stos
into
cmp
push
jmp
enter
dec
mov
sbb
int
fdivrs
inc
daa
shlb
lret
mov
pop
movsl
in
lea
jmp
inc
rcll
sub
out
in
bound
in
dec
mov
jmp
inc
enter
sub
out
adc
sbb
sub
lds
std
lods
xor
jmp
push
jmp
lret
inc
fidivrl
cwtl
inc
jmp
pop
mov
js
dec
leave
inc
fidivrl
pop
cmp
popa
stos
aas
scas
lret
jecxz
pop
inc
mov
decl
test
jne
push
lea
jmp
inc
push
jmp
fisubrs
pop
jmp
sbb
and
push
in
inc
cmp
sbb
gs
push
or
cmp
jb
lea
call
lea
jmp
cmp
push
rclb
addr16
mov
push
jmp
xchg
setg
or
inc
stos
jbe
je
push
jmp
call
jmp
sbb
popa
mov
dec
inc
and
pop
pusha
push
call
mov
push
call
xor
mov
sub
jmp
add
test
jmp
inc
lds
iret
add
sbb
setg
or
fstpl
andl
mov
jmp
jle
lea
jmp
scas
add
push
adc
inc
and
pop
rcrb
scas
pop
mov
xchg
add
jmp
mov
lock
jmp
xchg
pop
jmp
jmp
cmp
outsl
in
sbb
mov
out
adc
sbb
adc
in
add
add
sbb
push
sti
jmp
mov
inc
mov
pop
cwtl
push
imul
jmp
add
mov
jmp
pop
inc
and
jns
cmp
add
std
or
dec
fisttps
fsts
lea
call
pop
pop
test
je
push
jmp
xchg
push
xchg
repz
cmpsl
into
pop
into
test
outsb
or
push
or
push
sub
jmp
pop
leave
pop
cmp
outsb
ljmp
sahf
insl
test
jb
xchg
rcrl
pop
repz
int
jmp
dec
fisttpl
fnsave
nop
push
pushf
sti
push
xchg
cmpsb
lcall
jmp
mov
stos
mov
icebp
or
fmul
mov
cmc
js
push
xchg
popf
pushl
mov
jmp
mov
sarb
mov
gs
jecxz
movsl
adc
cld
clc
dec
loope
pop
pusha
jmp
adc
and
notl
hlt
jo
xorl
jae
push
fdivl
in
push
xchg
ret
jmp
mov
ret
and
jmp
pushl
jl
lcall
out
adc
sbb
cmp
inc
or
andb
sub
jo
mov
jmp
inc
int3
inc
and
add
xor
loopne
leave
bound
push
jp
jp
aam
aam
dec
clc
roll
mov
jmp
mov
add
add
jmp
push
rcll
jo
loope
adc
dec
testl
lahf
cld
pushl
dec
cli
lahf
sub
adcb
sbb
sbbb
out
sbb
repz
mov
les
add
add
lea
jmp
repz
enter
inc
mov
clc
sbb
push
call
jl
je
out
sub
jns
push
int3
inc
and
jmp
imul
jb
cld
call
mov
jns
pusha
imul
out
out
mov
add
xchg
push
call
fs
adc
daa
xchg
adc
test
fwait
decb
push
call
addl
stc
jge
je
jnp
imul
insl
mov
dec
mov
aam
mov
nop
testl
lahf
push
insl
jmp
push
in
cmpxchg
scas
leave
cmp
lea
xchg
lock
fimull
jno
jge
add
push
sbb
sbb
xchg
and
notl
setge
mov
cmp
sbb
xor
push
lods
sbb
pop
repnz
fs
test
mov
xlat
ret
repz
add
cmp
je
jmp
int3
push
lds
pop
stos
inc
test
cmpsl
ret
sub
cs
inc
mov
rcll
mov
cmpsl
ret
or
outsl
out
jl
notb
mov
les
lds
cli
and
sti
ja
xorb
pop
enter
sti
or
test
cmpl
add
jmp
cmpsb
xor
scas
dec
aam
repz
gs
ja
outsl
or
mov
xor
fsubrs
jmp
jae
xchg
mov
cmpl
and
sbb
stos
cmp
sbb
cltd
icebp
gs
pushf
outsl
fcoml
pop
ds
repz
pushf
outsl
fidivrl
mov
mov
mov
inc
mov
fiaddl
mov
test
or
icebp
insl
std
test
clc
gs
pushf
outsl
ljmp
mov
enter
pushf
outsl
test
movb
inc
mov
mull
push
lcall
xchg
lock
mov
shlb
and
icebp
mov
fsubr
pusha
notb
cmp
or
imul
insl
mov
test
ds
std
insl
std
test
std
hlt
or
fwait
sti
incl
fwait
or
xor
push
mov
ret
cmpsb
push
cli
push
mov
jne
mov
scas
cmp
push
lret
sti
clc
outsb
or
cmp
stos
xor
cmp
xor
test
jge
or
mov
jns
inc
xlat
push
lret
mov
fwait
or
jae
pop
into
test
repnz
lea
call
pop
jmp
or
xchg
xchg
repnz
pop
jecxz
push
in
xchg
adc
fmuls
fsubrs
fsts
cmpsl
push
mov
scas
cmp
mov
inc
int3
inc
and
out
jno
fcoms
lods
pop
mov
insl
std
test
aam
iret
stos
pop
shlb
inc
jmp
pop
iret
pop
cmp
popa
push
mov
jle
and
mov
js
cmp
fnsave
and
push
mov
es
iret
pop
leave
test
out
insl
clc
outsb
or
pop
fadds
mov
cmp
mov
push
cmp
daa
mov
mov
lcall
jg
jmp
dec
mov
push
std
adc
jl
jne
insb
add
sbb
outsb
movb
inc
mov
jns
inc
ret
ret
xchg
or
je
fldt
es
inc
mov
hlt
jl
jne
pusha
or
sbb
js
mov
lcall
inc
shll
or
cmpsb
add
sub
jo
cmpsb
xor
scas
pop
lods
cmp
mov
cmc
jle
jge
negl
mov
sbb
fidivl
add
es
inc
mov
pop
lret
pop
ds
mov
mov
cmp
and
inc
fmuls
fcomps
scas
cmp
mov
inc
lds
iret
add
cmp
mov
stos
push
adc
lcall
dec
sub
xor
ds
test
nop
sbb
jne
mov
push
fisttpll
out
pop
rolb
shlb
out
data16
xchg
outsb
popf
adc
push
das
ja
ja
mov
adc
aad
insl
loop
pop
loop
test
sahf
stc
or
ljmp
insb
or
mov
mov
inc
mov
inc
rolb
shlb
mov
inc
xlat
inc
and
outsb
pop
into
pop
cmp
jg
loope
adc
push
add
push
or
and
sbb
xor
or
mov
fstpl
mov
mov
call
aas
cmpsb
xor
scas
inc
lea
and
and
xor
ljmp
in
insb
loop
je
stos
sub
xor
pslld
ljmp
or
add
ja
mov
xchg
add
mov
lret
lret
jae
or
mov
lods
jnp
gs
pushf
outsl
cwtl
roll
movsb
cmp
jp
addr16
sbb
lahf
jns
lods
and
inc
push
fisttps
flds
cwtl
push
imul
mov
inc
mov
gs
gs
dec
adcb
loopne
mov
add
push
mov
sbb
pop
cmpsl
xor
call
stos
cmp
flds
mov
xorb
sbb
or
mov
xchg
adc
xor
xor
pop
fmuls
fcoms
jl
insl
hlt
pop
in
push
rolb
sarb
leave
dec
fidivrs
jg
jmp
aad
repz
xchg
adc
adcl
into
pop
cmp
xor
fwait
or
jg
jecxz
push
in
ja
outsl
or
mov
stc
sar
jno
xorb
pop
iret
stos
pop
sarb
ds
test
pop
enter
popa
daa
mov
dec
mov
lds
xor
pop
enter
inc
inc
and
imul
ljmp
inc
fstpt
sahf
push
xchg
repz
in
jecxz
push
in
mov
mov
jmp
rolb
inc
mov
rcll
add
jns
and
xchg
add
insb
sbb
enter
push
mov
in
add
mov
jns
jnp
add
rorb
dec
lods
add
xchg
sbb
xor
int
call
bound
xchg
xor
jge
je
xor
insb
or
scas
call
leave
roll
mov
jmp
xchg
les
mov
push
cld
dec
or
xlat
push
iret
mov
cld
call
and
lret
and
mov
ja
xorb
stc
imul
dec
sub
xor
dec
fidivrs
loope
jae
adc
aaa
mov
mov
mov
mov
jg
bound
enter
addr16
insb
jle
outsl
or
shl
imul
insl
sahf
mov
cltd
clc
or
sub
ss
push
lds
jmp
icebp
nop
arpl
xchg
test
cwtl
decl
lods
mov
std
or
jmp
cmc
pushf
outsl
scas
mov
xchg
roll
mov
stc
mov
mov
sbb
xor
adc
sbb
in
jns
mov
push
rcll
jbe
xchg
mov
add
sub
xchg
or
push
pop
adc
leave
push
les
gs
xor
pop
xchg
adc
imul
and
clc
adc
add
add
add
lret
add
add
add
lret
or
or
or
and
fcoml
add
ja
movsb
or
js
scas
sub
sub
lret
xor
xchg
and
insb
adc
or
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
add
add
and
fdivrl
xor
or
js
int3
mov
or
lret
inc
stos
or
mov
dec
movsl
xchg
adc
les
int3
xor
dec
fstpt
mov
sbb
xchg
adc
idivb
test
sbb
mulb
sbb
pop
cmp
cmp
push
xor
imul
test
insl
std
test
int
mov
out
clc
outsb
or
dec
mov
sahf
push
pushf
sti
push
cmpsl
cmp
sbb
sbb
adc
dec
xor
imul
popf
or
insb
loop
je
jns
ja
loope
mov
rclb
pop
cmp
push
into
push
mov
mov
rolb
sarb
xchg
pop
xchg
adc
or
adc
sbb
dec
dec
int3
inc
and
leave
test
mov
data16
xchg
outsb
popf
cmp
movsl
xor
jns
mov
bnd
jne
and
ljmp
idivl
jp
mov
cs
mov
pushf
outsl
fmul
pop
iret
stos
pop
into
push
rclb
jno
and
cli
push
mov
js
cs
int
and
push
pop
mov
gs
jbe
push
shll
adc
push
push
lret
lret
mov
inc
mov
jno
popa
add
cmp
shl
fs
popf
insb
test
inc
xlat
mov
stos
stos
sub
lds
pop
fmuls
fmuls
cmp
xor
sub
punpckhwd
jno
jecxz
add
sbb
loopne
or
add
add
and
lret
fdivr
call
and
lret
and
push
add
add
mov
adc
ja
or
in
lret
lret
xchg
xchg
or
mov
add
add
lcall
cwtl
decl
lods
push
fisttps
fnstenv
and
rclb
push
hlt
les
mov
jle
call
sbb
inc
sbb
cmp
loope
add
sbb
mov
inc
mov
xor
jbe
int
and
aaa
arpl
imul
push
xor
push
xor
inc
mov
mov
push
shll
inc
mov
bnd
xorb
pop
enter
les
mov
xchg
data16
pop
loop
in
notl
clc
lahf
push
sub
les
push
mov
mov
inc
mov
jne
imul
leave
dec
pop
loop
adc
testb
sub
lret
loop
adc
add
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
and
add
ja
mov
icebp
aam
aas
in
lret
lret
lea
cmpsl
ret
push
fistpl
std
jo
xorl
clc
dec
pop
xchg
or
xor
nop
and
push
in
mov
cwtl
jns
jl
negb
sub
ljmp
inc
aad
dec
mov
push
cs
push
mov
pop
jp
adc
xchg
jecxz
notl
jmp
jge
xchg
scas
cs
mov
dec
mov
cmp
push
loope
sti
sahf
insl
sahf
mov
scas
lods
es
jbe
loopne
mov
fbstp
push
lds
mov
lds
mov
mov
xchg
add
ss
xchg
add
and
loope
jnp
jns
jmp
xchg
push
xchg
repz
cmpsl
or
and
and
es
mov
movsb
aaa
cmpsl
ret
das
mov
pop
lds
iret
das
and
push
xor
pop
bound
mov
mov
loope
mov
jg
inc
dec
iret
pop
cmp
aas
mov
lret
in
jle
jmp
jecxz
jne
inc
les
int3
sbb
pop
repnz
fs
jmp
pushf
sub
popl
std
or
iret
inc
aad
dec
test
add
leave
inc
aad
dec
ljmp
sbb
bnd
je
and
pop
cmp
jle
push
test
push
mov
adc
mov
mov
mov
rclb
pop
hlt
rolb
mov
stc
xchg
add
adc
mov
mov
jno
xorb
mov
call
stc
daa
mov
jae
addr16
ss
icebp
xorb
sbb
cld
call
and
lret
and
insl
add
add
movsl
or
js
mov
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
jg
or
in
lret
mov
rolb
pop
ds
push
aam
sub
ja
loope
cmp
cltd
and
push
mov
mov
es
inc
aam
dec
lods
mov
fcmovu
pop
lret
scas
pop
test
mov
jg
sub
fimull
mov
jmp
hlt
xchg
outsb
leave
repnz
jmp
mov
testb
in
lret
xor
jo
add
ja
stos
or
js
jmp
aaa
mov
lret
lret
inc
add
add
lods
or
js
push
ss
in
lret
lret
stos
pushf
or
ja
mov
add
in
into
pop
cmp
jg
xchg
jb
cmp
or
mov
sub
push
mov
jle
imul
dec
push
pop
or
add
adc
test
clc
jp
jp
push
jg
jmp
xchg
jnp
push
adc
fisttps
fnstenv
aaa
mov
inc
mov
movb
inc
test
dec
mov
cmp
dec
ret
ret
fimull
fisubrl
hlt
jp
jp
pushf
adc
dec
fnstcw
fstpt
shll
scas
pop
repz
mov
repz
mov
jmp
or
jl
jne
sub
cs
inc
fisttpl
fnstsw
sub
movb
mov
mov
arpl
cmc
sbb
xchg
push
enter
dec
inc
rclb
or
add
sbb
pushl
addr16
sbb
in
les
int3
sbb
push
add
add
xchg
jmp
shl
gs
pushf
outsl
inc
mov
jmp
add
add
add
cld
call
and
lret
and
xor
adc
aaa
sub
lret
in
lret
lret
andb
mov
adc
push
lret
jmp
push
mov
xorl
imul
lds
jge
push
iret
pop
cmp
aas
mov
movsl
aas
mov
dec
into
pop
cmp
pop
cs
inc
mov
or
add
jl
dec
fidivrs
lods
mov
mov
fs
ret
push
lds
mov
shlb
lods
and
push
dec
push
xor
sub
addr16
lods
mov
loop
jp
jp
das
mov
add
push
lds
iret
jnp
lahf
punpckhdq
mov
daa
inc
mov
fistl
cmpsb
push
loop
inc
xlat
mov
out
rcll
jbe
sub
je
lea
outsl
lcall
and
pop
sti
lock
bound
push
cmpl
cmc
add
jb
addr16
pop
cltd
mov
xchg
and
jl
or
mov
lods
or
mov
cmpsb
dec
push
popf
or
or
in
ljmp
push
add
push
les
mov
adc
in
sbb
dec
push
xor
sub
shll
das
dec
mov
call
and
jbe
into
pop
cmp
jno
push
pushf
sti
push
mov
lock
insl
add
mov
jns
and
mov
scas
add
cmp
xor
lock
bound
jmp
and
sub
dec
sub
loope
adc
data16
mov
fistl
mov
and
sti
addl
lock
pop
jecxz
push
in
push
aam
sub
mov
mov
in
sbb
add
mov
pop
xchg
repnz
sbb
out
cld
fwait
jbe
jno
insl
hlt
pop
mov
aam
mov
nop
testl
loop
adc
testb
sub
lret
fdivr
call
and
lret
and
push
add
add
mov
adc
jb
mov
lret
push
mov
adc
lcall
pop
int3
stos
data16
dec
ret
std
fs
push
cld
dec
and
inc
xlat
inc
and
outsb
mov
mov
and
adc
flds
xor
enter
sub
or
add
add
and
lret
sbb
xor
add
ja
mov
adc
and
sbb
lret
mov
cltd
int
adc
mov
mov
es
or
aas
test
pop
iret
pop
cmp
jo
lret
pop
ds
sbbl
jmp
imul
adc
inc
daa
sarb
mov
stos
push
jp
rclb
or
mov
ficomps
stos
data16
xchg
pop
bound
popf
insb
xchg
cld
jns
mov
dec
int
and
and
punpckhdq
jno
jae
enter
sub
xlat
cmp
dec
daa
scas
aas
pop
test
shlb
sti
push
je
out
sub
xchg
pop
bound
nop
arpl
pop
lret
scas
pop
repnz
cmp
aad
shll
dec
sub
dec
push
lds
iret
jp
push
mov
in
je
inc
call
xchg
hlt
insb
loop
je
lds
mov
mov
jns
setle
xchg
repnz
leave
push
lds
mov
cmpsb
lcall
rolb
shlb
xor
push
fisttpl
fisttpll
dec
fstpt
inc
daa
sarb
push
fldt
int3
inc
aad
dec
scas
xchg
sbb
dec
fnstcw
js
ljmp
xor
and
leave
pop
cmp
outsb
push
test
mov
add
xlat
dec
frstor
xor
push
inc
sub
pop
sub
dec
int3
inc
and
arpl
cmc
sbb
adcl
test
out
adc
adc
movsl
xor
pop
xchg
repnz
xor
mov
shll
cltd
pop
xchg
adc
dec
fdivrl
into
test
movsb
ret
ds
adc
or
sbb
lret
lret
sub
add
ja
or
js
adc
mov
in
lret
xor
add
ja
lret
js
add
lret
lret
and
or
mov
stc
vshufpd
lret
add
add
add
or
or
or
or
or
or
add
or
lret
xor
inc
add
add
mov
adc
addb
sbb
lret
lret
or
mov
sti
sbb
mov
cld
imul
insl
sbbl
cmp
dec
jbe
jg
jmp
popf
insb
movsl
lcall
mov
xchg
adc
sbb
rolb
rolb
xchg
insb
loop
je
jmp
xchg
test
mov
and
into
inc
aam
dec
stos
test
shl
push
lahf
push
addr16
sbb
clc
jnp
mov
dec
fdivl
in
hlt
gs
pushf
outsl
les
pop
cmp
js
daa
mov
and
popl
xchg
pop
bound
add
dec
pop
into
pop
cmp
jno
setg
or
inc
fdivl
in
jns
ja
loope
push
lret
lret
out
jl
divb
insb
or
addl
inc
cmpsb
sub
cmp
adc
in
sbb
divb
xorl
icebp
sub
notl
lods
sub
ret
push
lds
aas
mov
dec
mov
xchg
andb
xchg
sbb
cmp
fcoml
mov
ljmp
loopne
cmpsl
or
clts
xchg
add
sahf
das
inc
fisttpl
fnsave
mov
out
out
jo
inc
inc
and
imul
mov
imull
je
add
inc
fmuls
fdivs
fwait
or
adc
jmp
icebp
jb
xchg
imul
xor
sub
pop
iret
dec
fistpll
add
inc
insb
call
push
rolb
sarb
jnp
addr16
or
outsl
cmc
push
mov
js
add
adc
daa
xchg
pop
xchg
repnz
xchg
flds
adc
scas
or
mov
in
outsl
clc
outsb
or
push
outsl
stc
imul
sub
sbb
inc
shll
sbb
pusha
notb
les
mov
mov
sbb
cmpsl
insb
rcll
cmpsl
push
mov
mov
bound
adc
jp
xchg
jne
dec
cwtl
fdivrl
add
lret
or
or
mov
mov
es
in
notl
jl
testb
push
dec
rclb
and
sub
lds
fs
arpl
cmc
daa
es
cmp
push
shlb
or
sub
je
out
inc
fwait
or
sbb
pop
int3
stos
data16
in
loopne
jb
xchg
and
xlat
mov
call
pop
movsb
mov
movsl
or
ret
test
mov
fwait
or
sbb
dec
ret
rol
dec
fstpt
daa
inc
mov
ficompl
scas
pop
mov
fisttpll
out
xchg
gs
fistps
test
inc
and
and
notl
mov
test
ret
ret
add
cmc
gs
push
loope
std
test
and
pop
aad
sub
pop
inc
roll
aad
popf
or
adc
add
or
sub
ds
mov
cltd
sbb
adc
push
jno
aaa
loop
in
jg
add
jo
jns
jmp
das
mov
dec
mov
cmpsb
push
mov
cld
jnp
dec
ret
ror
dec
fistpll
jmp
call
aad
lret
mov
lret
jl
jne
push
sub
ds
test
imul
cmp
mov
jle
sbb
xor
or
push
mov
adc
mov
lret
lret
ds
or
ja
mov
add
dec
mov
push
mov
imul
or
cmp
imul
ret
push
lds
cld
adcl
test
stos
cmp
push
popa
out
adc
cmp
inc
shll
into
test
mov
add
out
xchg
add
jae
loopne
adc
add
xchg
add
bound
cmpsl
aaa
push
mov
pop
lods
imul
ss
popa
icebp
nop
arpl
push
outsl
or
scas
push
dec
push
push
xor
addr16
xor
lods
cmp
icebp
popa
add
inc
outsb
stc
imul
inc
sub
push
adc
in
sbb
inc
sbb
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
mov
adcl
adc
jb
xchg
xchg
push
test
push
xlat
lea
pushf
sti
push
imul
daa
cmpsb
xor
scas
dec
out
outsl
lcall
in
jle
sub
cmp
das
dec
mov
scas
pop
test
pop
into
test
test
xchg
pop
bound
pusha
xchg
ss
aaa
push
mov
dec
mov
mov
jb
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
push
test
jge
cmp
push
shll
or
dec
dec
out
adc
pop
mov
xchg
or
adc
dec
fstpt
shl
or
or
or
sbb
lret
lret
clc
ret
mov
push
xchg
adc
sbb
cwtl
push
imul
sub
lds
lret
scas
pop
fadd
inc
xlat
mov
xchg
outsb
or
adc
push
mov
insl
hlt
pop
loopne
push
shlb
in
pop
lret
in
mov
lods
pop
mov
adc
mov
xchg
push
mov
es
xchg
adc
mov
fwait
call
mov
adc
or
and
lret
sub
adc
add
ja
mov
pop
xchg
in
lret
lret
sbb
les
adc
xlat
pop
lods
and
mulb
dec
jmp
out
mov
cmp
pop
leave
pop
cmp
pusha
sbb
scas
aas
scas
lret
repnz
pop
repnz
sbb
xor
jge
je
out
or
inc
fidivrl
dec
sub
xor
test
scas
aas
pop
test
push
mov
jne
mov
jb
popa
add
adc
push
mov
xor
jne
pop
jp
bound
pop
cmp
inc
and
sub
xchg
inc
and
xor
lods
and
inc
xchg
and
lods
cmp
nop
push
popa
nop
push
sub
inc
xlat
inc
and
imul
jne
xor
pusha
leave
lret
xchg
fs
fs
popf
insb
lds
push
jns
aas
dec
fstpt
insl
std
test
test
mov
les
insb
or
in
cwtl
pop
xchg
repnz
cmp
xchg
mov
inc
les
int3
add
jecxz
sbb
mov
cmpsb
xchg
pop
xchg
adc
cmp
push
lds
cmc
gs
or
ss
int
add
push
popa
nop
push
mov
cltd
mov
mov
mov
aad
xchg
push
push
xor
mov
mov
and
scas
pop
repz
inc
shll
jmp
jge
insb
mulb
cmp
dec
mov
dec
ret
mov
in
rorb
push
rorl
inc
daa
rclb
push
ret
cmpsb
push
lcall
adc
or
or
cld
call
and
lret
and
rorb
mov
lcall
inc
pushf
and
jg
mov
xchg
adc
mov
js
jl
out
adc
pop
mov
ret
xchg
sbb
aad
mov
xchg
icebp
add
inc
iret
pop
cmp
and
lds
iret
push
lret
lret
adc
in
sbb
push
cltd
or
ds
iret
add
aam
fidivrl
or
repz
cmc
inc
jb
jnp
in
inc
hlt
pusha
notb
stos
int
fwait
add
and
add
dec
or
or
jae
jnp
mov
bnd
xchg
push
jle
call
ds
jnp
imul
gs
sbb
jg
mov
outsb
out
jg
jmp
mov
mov
movsb
ret
ds
and
cmp
mov
inc
lret
lret
lcall
and
inc
orb
sti
push
mov
xchg
mov
adc
in
sbb
out
lock
lds
mov
inc
mov
cmp
pop
xor
jp
jns
jmp
pop
leave
pop
cmp
js
jle
mov
xlat
and
cmc
push
jecxz
out
mov
ret
pop
into
test
jne
out
pop
and
push
lds
jno
jge
divl
cmpsl
aaa
push
mov
xchg
mov
cmpsl
ret
pop
popf
or
test
pop
test
xlat
push
mov
dec
sub
push
jno
imul
push
jns
xchg
cmc
add
je
lea
push
shll
fsubrl
leave
addr16
jl
testb
es
imul
das
cmpsb
sub
inc
aad
dec
ljmp
push
push
xor
mov
fildll
fwait
loop
in
mov
bnd
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
inc
inc
and
ja
cmp
mov
cmc
push
ret
ret
movsb
cmp
sbb
mov
jp
jbe
loopne
jl
cmpsb
test
sub
add
add
and
lret
and
sbb
add
ja
ret
js
imul
add
lret
mov
sub
out
in
je
outsl
push
lea
inc
xlat
mov
enter
push
in
add
scas
xor
lahf
punpckhdq
scas
pop
mov
shll
movl
adcl
test
fwait
or
jae
xchg
add
test
lret
add
add
and
lret
and
adc
add
ja
fisttpll
adc
xchg
aaa
mov
in
lret
inc
add
add
mov
adc
pusha
andl
lret
test
or
mov
mov
jne
insb
addl
xchg
adc
inc
aam
dec
cltd
jnp
insl
hlt
pop
lock
push
fildll
ljmp
xchg
add
sahf
jp
and
pop
xchg
adc
lods
js
sbb
jmp
push
in
dec
gs
gs
dec
or
sub
js
jg
jmp
arpl
lock
cmc
inc
mov
fwait
sbbl
ljmp
jne
inc
fimuls
or
add
mov
mov
adc
cmp
mov
movsl
int3
aas
aad
je
lea
fstpt
scas
aas
pop
test
psubd
mov
pop
stos
inc
cmp
inc
into
pop
cmp
xor
enter
sub
or
jb
xchg
cmc
add
and
push
xchg
repz
int3
lea
xchg
icebp
add
jg
sbb
jl
bound
lcall
lahf
push
sti
imul
push
mov
mov
sbb
jne
cmp
mov
ret
xlat
dec
frstor
icebp
add
aaa
scas
aas
pop
test
std
or
pop
jecxz
push
in
inc
rcll
sub
dec
fstpt
jp
in
or
gs
pushf
outsl
xchg
addl
movb
inc
mov
mulb
push
push
mov
gs
addr16
iret
pop
cmp
xor
outsl
mov
push
mov
fistpll
mov
inc
and
sbb
js
popa
add
adc
notl
cmpsl
cs
loop
pop
loop
rorb
push
adc
cmpsl
fstl
mov
out
jo
push
push
xor
addr16
sbb
movsl
xor
sub
fisttpl
fnsave
adc
lret
pop
ds
jno
jns
jmp
arpl
xchg
gs
mov
mov
jg
bound
fwait
pop
les
int3
dec
push
xchg
or
push
ss
nop
adc
jnp
mov
push
fisttpl
frstor
cmp
xchg
xchg
lock
adc
pop
bound
decl
stc
ficomps
scas
pop
mov
shlb
insl
in
sbb
mov
sbb
rcrl
stos
data16
jne
mov
xchg
sbb
push
les
lock
lret
ljmp
sub
push
mov
es
lret
xchg
gs
es
mov
cwtl
cmp
aad
add
xor
xor
add
or
or
or
or
add
or
add
add
or
or
or
lret
xor
or
mov
adc
hlt
push
mov
mov
mov
inc
mov
aam
ret
mov
and
mov
test
pop
fstpt
xchg
cmc
add
cld
jge
je
insl
mov
pushf
sti
push
jae
pusha
pop
repnz
jg
mov
fisubl
xchg
gs
loop
adc
testb
cld
call
and
lret
and
popf
or
ja
call
add
pop
test
popa
call
push
fimuls
inc
outsl
loopne
adc
xor
insl
std
test
ljmp
fs
popf
insb
fimull
cltd
or
xor
mov
xchg
daa
pop
xchg
mov
inc
fisttpl
pop
push
push
xor
js
out
adc
dec
jne
jge
divl
sbb
inc
jecxz
push
in
ja
jl
negb
fs
push
sub
rolb
rcrb
push
mov
or
add
jl
mov
test
nop
testl
xchg
inc
stc
adcl
test
push
xor
es
adc
sbb
sub
orl
mov
les
daa
shlb
dec
fnstcw
mov
push
lds
and
movsl
inc
aam
sub
and
movsl
aas
scas
cmp
mov
cmpsl
aaa
cmpsl
ret
jnp
bound
in
je
xor
jle
mov
pop
stos
push
adc
in
sbb
cmp
in
adc
imul
push
popa
nop
pop
pop
rclb
inc
sub
lock
xorb
int3
inc
and
mov
es
xor
rcrb
scas
pop
mov
pop
leave
test
lods
xchg
xchg
lock
lods
and
inc
sub
add
add
arpl
cmc
push
dec
int
and
cmp
ret
xor
mov
shlb
adc
jo
adc
fimull
fimull
xor
add
dec
in
cmpsl
cmp
and
out
jg
jmp
sbb
inc
xchg
add
std
insl
hlt
pop
lods
jp
jl
testb
enter
add
or
cmpsb
sub
sahf
add
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
je
call
or
or
or
and
faddl
add
ja
or
js
sti
fists
in
lret
lret
pop
aam
adc
push
call
jmp
dec
fmuls
fdivs
das
mov
int3
push
call
sbb
mov
xchg
lret
jmp
enter
add
pop
cmp
int3
popf
xchg
outsb
jmp
das
mov
mov
xchg
adc
leave
push
call
add
mov
sub
jmp
mov
arpl
add
add
jmp
pushf
add
std
or
orl
add
jmp
add
jmp
std
fs
popf
insb
test
scas
cmp
mov
pop
les
int3
dec
out
dec
rorb
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubl
add
add
iret
or
js
xlat
pushf
call
lret
sahf
aam
adc
lret
add
xor
int
fwait
loopne
loopne
jb
inc
rolb
sarb
outsb
cld
fwait
jbe
sbb
dec
jecxz
push
in
adc
mov
gs
and
lods
cmp
sbb
cs
fimull
fidivl
into
push
lds
and
push
rorl
push
roll
call
adcl
shrl
lret
sub
xchg
push
test
push
leave
lds
mov
mov
push
mov
push
cmpsb
nop
sbb
fisttpll
out
inc
into
pop
cmp
and
inc
loope
fs
popf
insb
mov
in
cs
and
xor
out
jg
jmp
xchg
rorb
dec
das
fidivl
fdivl
in
cmp
cwtl
or
in
mov
aas
lcall
sub
and
mov
jmp
xchg
mov
jmp
test
int3
popf
lods
repnz
add
and
fmull
bound
adc
inc
push
xor
sub
pop
lret
scas
pop
movsl
jbe
pop
mov
add
pushl
mov
jmp
lds
addl
jmp
push
hlt
movzbl
jmp
sbb
addl
pop
leave
test
mov
and
xchg
mov
ss
ja
xchg
cmc
add
or
add
add
leave
addb
pop
sub
mov
add
ljmp
mov
paddsw
inc
adc
popl
jmp
dec
lds
iret
push
popa
icebp
nop
arpl
mov
xchg
cld
jmp
fs
jmp
and
adc
pop
into
pop
cmp
jg
ljmp
rolb
add
jmp
cli
push
lahf
push
test
jmp
call
in
jmp
mov
xchg
add
cmp
movsl
xor
xchg
add
cmp
jge
clc
mov
push
imul
jno
in
addb
add
les
jl
notb
sbb
and
shrl
sbb
sub
jo
mov
and
jmp
add
adc
ret
add
scas
popa
clc
outsb
or
adc
xchg
add
sahf
sbb
jno
push
jmp
out
out
mov
adc
mov
lods
dec
roll
aad
mov
lret
add
add
and
lret
and
adc
add
ja
or
js
aam
jmp
in
lret
outsb
rorb
adc
inc
mov
cmpl
shll
aam
dec
mov
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
test
xchg
repnz
mov
add
add
jmp
pusha
out
pop
jmp
rcrl
test
stos
dec
lret
pop
ds
mov
shl
ret
or
xor
cmp
je
mov
cmp
je
mov
neg
mov
jmp
in
push
jmp
call
jmp
and
loope
std
test
xchg
sbb
popf
fists
push
jl
lea
call
lea
push
jmp
jo
xchg
cmc
add
pop
aam
sub
mov
das
fwait
setl
push
movsb
or
add
adc
and
add
add
pushf
mov
jmp
mov
mov
and
push
sub
push
xchg
cmpsl
inc
jmp
push
mov
jmp
adcl
sbb
pop
iret
pop
cmp
pusha
rolb
mov
in
in
jmp
rol
jmp
jp
jbe
loopne
xchg
aad
dec
inc
and
xor
push
and
jne
neg
pop
sbb
pop
and
jmp
jmp
push
pushf
jmp
mov
clc
lock
cmp
inc
jmp
xchg
popa
call
call
pop
jmp
inc
rcll
or
cmc
roll
lock
or
ljmp
jg
mov
sbb
jno
lcall
jmp
pushw
jmp
or
push
std
lcall
dec
sub
sbb
lahf
punpckhdq
or
bnd
push
cld
adc
pop
lea
call
mov
jmp
outsl
jmp
push
in
sbb
int3
sbb
sbbl
and
jmp
je
xchg
testb
into
imul
test
mov
add
add
and
lret
and
iret
or
mov
inc
adc
gs
jg
jmp
jg
sub
jb
mov
lahf
popa
jmp
mov
add
add
push
pop
into
pop
cmp
addr16
ljmp
gs
mov
mov
mov
andb
sub
jo
mov
jmp
out
xor
sti
out
js
mov
sub
lahf
or
pop
leave
test
cmc
insl
mov
jmp
leave
push
shll
mov
add
jmp
push
mov
test
add
xor
pushl
aad
aaa
cmpsl
ret
jmp
loopne
jb
call
gs
pushf
outsl
ljmp
movsl
sub
or
xchg
aaa
add
call
xchg
mov
mov
jecxz
push
in
pop
outsl
lahf
movzbl
add
cmp
je
jmp
mov
mov
ja
loope
aam
push
call
and
mov
add
mov
cld
lcall
lret
and
add
jg
jmp
divl
xorl
js
dec
int
and
cmp
inc
mov
xchg
add
sahf
jl
mov
cmp
aam
repz
gs
inc
into
pop
cmp
jno
mov
int3
inc
mov
subb
sbb
dec
daa
mov
push
push
xor
addr16
add
dec
fistpll
dec
sub
imul
xor
mov
adc
push
call
push
roll
aad
dec
roll
shll
adc
or
adc
cmp
incl
add
mov
jmp
loop
adc
add
jnp
mov
popa
loope
adc
sub
xchg
add
jns
in
bound
xchg
lock
jge
imul
lcall
cmpsb
shll
jno
push
cld
adc
adc
jns
mov
rorb
dec
lods
mov
fcmove
dec
fstpt
aas
pop
test
xorb
mov
inc
mov
dec
fisttps
fsts
lcall
push
adcl
lahf
punpckhdq
and
mov
and
mov
pushf
xor
xlat
dec
ret
mov
push
les
out
jo
test
mov
push
mov
call
and
lret
and
sub
add
ja
aam
adc
cmc
into
mov
in
lret
jbe
or
mov
out
jl
insb
or
iret
and
inc
cmp
sub
cmpsb
xor
scas
dec
addb
repz
lock
jge
popf
or
xchg
add
jnp
stc
imul
js
ljmp
sub
mov
pop
into
test
cmpsl
ret
pop
fisttpl
fstpl
pop
xlat
inc
and
js
fmuls
fsubrs
push
xor
cmpsl
xor
push
lret
pop
ds
test
and
mov
and
pop
out
ja
jo
loop
call
mov
inc
aam
dec
lods
imull
test
in
jnp
mov
out
out
mov
fs
imul
test
pop
aam
fs
popf
insb
test
flds
sbb
outsb
adc
add
insb
dec
enter
pop
dec
roll
aad
adc
js
add
or
mov
lret
inc
shlb
xchg
repz
test
push
ret
aas
pop
test
push
add
xchg
add
and
fidivl
inc
shll
stos
into
cmp
or
dec
test
out
sbb
push
test
push
mov
inc
mov
ja
loope
mov
mov
lds
iret
and
rcll
xchg
add
push
fistpl
stos
pop
scas
push
rolb
sarb
cwtl
sbb
stos
cmp
dec
add
jg
pop
int3
stos
data16
enter
cmp
repnz
dec
sub
sub
xchg
testb
sbb
sbb
or
push
imul
std
insl
hlt
pop
rcl
pop
enter
clc
jnp
mov
movsl
xor
sbb
xor
xor
and
sbb
ljmp
and
or
add
lret
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
add
add
and
fmull
add
add
fisttpl
adc
popf
add
gs
lret
lret
popa
jecxz
adc
test
testl
adc
fisttpl
push
std
fsts
cmpsb
push
in
pop
repnz
fs
call
mov
sub
and
outsl
mulb
push
xor
cs
rolb
rclb
push
sbb
sbb
dec
or
xor
push
xchg
pop
bound
mov
imul
adc
gs
pushf
outsl
sahf
popa
ljmp
std
test
jmp
lock
bound
lock
mov
loope
push
mov
es
push
mov
xorl
imul
dec
fidivrs
in
jg
cmc
lock
lret
pop
enter
jg
rclb
addr16
mov
aas
scas
lret
add
xor
dec
rorb
mov
sub
cmp
dec
shl
jno
xorb
or
in
cld
js
outsb
or
adc
fstps
xchg
addr16
iret
dec
fidivrs
adc
je
push
test
push
imulb
faddp
dec
fidivrs
push
xor
and
out
stc
jne
mov
sbb
jb
xchg
in
pusha
notb
lcall
hlt
xchg
outsb
mov
sbbl
rcll
pop
in
int
enter
loop
in
jle
je
ja
loope
and
push
hlt
insl
std
test
add
or
aas
cmpsl
aaa
push
mov
fldcw
scas
rcll
mov
pop
aas
lret
or
pop
rclb
mov
push
jns
pop
xor
push
adcl
les
xor
add
add
in
lret
xor
or
mov
sbb
mov
test
fisttps
flds
lcall
lea
jno
xorb
scas
aas
pop
test
mov
pushf
push
pushf
sti
push
mov
adc
mov
js
jg
jmp
pushf
outsl
fsubrl
xchg
jg
jns
jmp
pop
mov
jg
sub
bswap
mov
mov
ret
ret
adc
jp
jp
jle
ja
loope
inc
ret
ret
add
cs
fwait
or
jle
jae
xchg
dec
into
pop
cmp
add
jp
jp
pop
fmuls
fdivs
cld
jbe
cmpl
xchg
add
sahf
jl
fimuls
add
sub
dec
ja
outsl
or
mov
jecxz
add
push
mov
xchg
lret
pop
iret
stos
pop
rcll
push
xor
imul
in
hlt
push
cld
dec
mov
aad
lea
pop
cmp
pusha
pushf
setg
or
arpl
dec
test
push
mov
ret
les
int3
dec
dec
rolb
rclb
les
int3
add
push
mov
mov
cmp
dec
enter
push
test
mulb
sub
rcll
mov
xchg
testb
jmp
rcrl
stos
pop
subl
pop
lods
pop
rorb
push
icebp
cli
jnp
mov
push
lcall
out
mov
cld
outsb
cld
fwait
jbe
out
jl
jne
sub
mov
inc
rolb
sarb
sub
mov
mov
or
es
mov
push
cld
aas
push
roll
aad
rorb
mov
imul
adc
mov
dec
fstpt
mov
mov
inc
mov
jle
insb
or
out
shlb
push
adc
add
add
adc
imul
in
lret
sbb
in
jge
notl
sub
push
sbb
xchg
xchg
lock
or
or
pop
rolb
shlb
rcrl
stos
pop
sbb
lret
scas
xor
in
jge
mull
push
jecxz
push
in
cmc
js
mov
push
test
jge
cmp
xchg
fmull
push
in
jle
mov
daa
shlb
test
push
shll
inc
mov
pop
lods
outsl
ja
bound
cltd
push
sbb
add
ret
push
lds
daa
inc
mov
stos
das
mov
mov
rcll
mov
mov
lret
or
or
or
lret
add
lret
add
add
lret
or
lret
lret
xor
xor
add
ja
cmp
cmp
mov
lret
and
add
ja
push
or
js
push
inc
rcl
lret
lret
adc
adc
insl
mov
into
and
lret
lret
pop
leave
test
fwait
xor
scas
inc
shll
ja
loope
dec
fisttps
fsts
clc
outsb
or
push
call
aaa
sbb
and
nop
mull
icebp
pop
xor
arpl
outsb
or
sbb
repnz
xor
jnp
mov
stos
cmp
mov
inc
mov
cmp
movsl
sub
mov
jg
outsl
pop
mov
xchg
je
add
add
pop
mov
and
xchg
or
jle
test
mov
shll
adc
and
push
pop
cltd
or
pop
out
stc
cwtl
imul
push
mov
mov
mov
inc
mov
test
in
sbb
cmp
cmp
sbb
arpl
xchg
gs
jnp
in
pop
out
jns
mov
sub
and
mov
sub
cmp
dec
fnsave
push
leave
pop
cmp
and
movsl
xor
lods
cmp
lods
cmp
xchg
pop
bound
push
cmpsl
dec
addl
testl
mov
les
outsb
or
or
dec
mov
nop
arpl
dec
fstpt
dec
sub
cmp
mov
mov
lods
mov
loop
jle
mov
adc
lcall
gs
and
cmpl
mov
out
aas
movsl
out
scas
sub
and
mov
stc
outsb
ljmp
xchg
icebp
add
jp
add
add
cli
daa
lods
cmp
add
dec
fnstcw
enter
out
clc
lahf
push
and
aas
pop
test
push
std
dec
adc
daa
out
jge
je
xor
in
sbb
inc
mov
mov
and
int
sub
fisttpl
mov
sub
movb
adc
push
lret
lret
push
mov
or
add
add
xor
lret
loop
adc
testb
or
add
add
add
lret
or
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
and
add
ja
fisttps
adc
mov
jne
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
lret
in
adc
lret
pop
rclb
inc
rcrb
loopw
in
jge
idivl
les
int3
and
pop
jp
jg
jp
jp
jmp
mov
shrl
cmp
pop
push
cltd
or
jno
jmp
push
in
sbb
dec
fistpll
mov
nop
push
popa
nop
arpl
mov
inc
mov
test
cwtl
decl
ficomps
inc
and
sbb
cmp
push
mov
es
popa
repnz
pop
repnz
jg
jge
testl
repz
insl
ficompl
pop
cmp
popa
out
loope
jae
lods
cmp
adc
test
pop
test
out
jbe
cmpl
mov
jns
pusha
lds
test
fdivrp
imul
insl
in
ds
fisubs
xchg
mov
cmc
add
rcll
cmpsl
push
mov
mov
or
dec
fidivrs
pop
xchg
add
pusha
daa
lods
and
push
lds
cmpsb
push
mov
sbb
aad
xlat
add
outsl
loopne
adc
xor
jno
xorb
rclb
addr16
leave
pop
cmp
jg
mull
icebp
push
mov
mov
cs
cmpsl
movsb
ret
ds
lahf
setg
or
mov
push
std
dec
lret
xchg
addr16
jns
jmp
movsl
lods
lret
inc
movsb
dec
rolb
sarb
mov
mov
mov
insb
loop
je
sti
jg
mov
adc
jge
je
insl
fcomps
stos
pop
sbb
repz
gs
lods
sub
aas
scas
lret
imul
sbb
push
sbb
cmpsl
sub
lds
and
in
imul
insl
cwtl
xchg
sahf
stc
or
cmp
push
xchg
lret
inc
aam
dec
jmp
cmp
adc
out
or
mov
ret
push
stc
mov
loope
adc
dec
mov
loopne
in
jg
ljmp
cwtl
imul
cmp
sub
clc
call
sbb
lret
xor
push
add
add
in
adc
je
jno
in
lret
lret
jmp
or
mov
adc
xchg
xor
mov
xor
pop
dec
roll
rcll
inc
fidivrl
out
mov
sbb
cmp
push
aam
sub
test
dec
fstpt
mov
inc
shll
jge
testl
movsl
inc
orb
decl
out
ret
fists
add
add
lret
xor
add
add
out
adc
xchg
pop
xor
lret
jmp
or
mov
jp
and
mov
scas
lret
idivl
mov
and
movsl
xor
mull
insb
lds
js
ljmp
je
stos
cmp
sbb
add
cmp
xchg
fisttpll
mov
xlat
mov
mov
icebp
insl
sti
imul
adc
loope
lock
in
out
adc
push
xor
out
sti
sahf
insl
adc
lds
aad
shl
jmp
jge
jp
xchg
testb
fwait
insb
out
push
lahf
push
push
xchg
or
outsl
data16
cmc
adc
int
fimuls
adc
adc
mov
lcall
xchg
sbb
fisttpl
mov
inc
mov
inc
rolb
shlb
xchg
add
pop
enter
sbb
sbb
and
jl
jne
xor
lcall
jge
je
out
or
xor
pop
cld
lock
in
daa
mov
and
push
xlat
inc
ret
ret
mov
dec
mov
imul
test
inc
mov
xchg
scas
sub
mov
gs
jl
add
add
jp
jp
fstl
pop
scas
inc
into
pop
cmp
jno
pusha
notb
mov
in
sbb
cli
popf
insb
fisubrl
hlt
pop
lods
repnz
lock
loope
out
jo
out
js
mov
dec
fimull
fidivl
int
and
sti
outsb
cld
fwait
jbe
popf
add
nop
or
pop
xchg
repnz
sub
daa
mov
sbb
jo
pusha
pop
repnz
loop
test
pop
test
mov
stos
int
fldcw
cmp
push
inc
rcll
push
fwait
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
enter
push
mov
outsl
test
push
xor
xor
mov
push
fmuls
fdivrs
iret
pop
cmp
and
jne
icebp
loop
adc
or
sbb
lret
lret
sub
add
ja
add
icebp
arpl
test
lret
lret
sub
add
ja
out
adc
dec
or
in
lret
and
or
mov
dec
jmp
stos
cmp
jle
adc
pushf
xor
add
push
lret
ljmp
inc
fisttpl
push
shlb
lahf
push
adc
mov
sub
sub
lret
add
add
add
adc
add
inc
add
add
ljmp
addr16
lret
lret
add
pop
loop
adc
add
lret
lret
ret
out
or
in
lret
adc
cmp
test
mov
inc
mov
insb
cmc
gs
pop
xor
pop
add
dec
imulb
cltd
push
xchg
adc
mov
and
cld
call
and
lret
and
inc
add
add
jmp
adc
sub
in
adc
lret
lret
arpl
add
ja
repnz
js
cmp
daa
dec
in
lret
lret
and
or
mov
adc
mov
enter
jmp
fnstcw
cltd
push
fisubrl
ret
jg
jmp
mov
test
cmp
repz
mov
xchg
sbb
push
xor
imul
enter
ljmp
hlt
xchg
outsb
fcom
inc
mov
jmp
loope
push
rcll
push
xchg
and
dec
fnsave
adc
movsb
cmp
or
inc
and
punpckhdq
bound
cmc
add
in
call
into
pop
cmp
push
cmp
sub
movhps
xor
lret
dec
fdivrs
xchg
testb
call
push
scas
pop
jae
fs
push
aaa
ret
push
lds
sub
imul
adc
add
addr16
in
popa
icebp
nop
arpl
fistl
pop
mov
out
das
mov
aaa
stos
cmp
sbb
movsb
or
dec
clc
sbb
lods
cmp
inc
fidivrl
jecxz
jne
pusha
sti
imul
pop
sbb
dec
inc
fimuls
add
adcl
mov
jle
arpl
pop
cmp
dec
in
jno
xorb
fmuls
fcoms
icebp
jb
xchg
in
insb
loop
je
sbb
inc
movb
inc
mov
mov
push
lcall
push
cmp
and
and
rcrl
test
outsl
or
jecxz
cltd
or
push
out
jg
jmp
nop
arpl
repnz
jno
jecxz
jb
jbe
loopne
les
lods
pop
hlt
pop
lret
lret
jns
mov
imul
or
lock
aad
faddl
add
loop
adc
testb
sbb
lret
fmull
popa
jecxz
adc
mov
or
in
lret
lret
insb
add
add
fisttpl
adc
addr16
xchg
in
lret
lret
add
mov
mov
and
fstpl
insb
cmc
gs
pop
ret
pop
leave
test
mov
popf
or
jbe
cmpl
cmp
jne
mov
dec
iret
pop
cmp
aas
sub
sub
lret
movsl
push
stos
nop
adc
add
adc
in
sbb
mov
ret
lods
and
in
fs
popf
insb
mov
pop
ja
out
adc
jmp
adc
push
lods
push
mov
jns
das
rorb
push
or
sub
icebp
nop
arpl
xchg
add
inc
aad
dec
in
adcl
imul
into
pop
cmp
addr16
inc
mov
testl
clc
call
sbb
lret
and
push
add
add
out
or
js
jge
push
mov
lret
lret
pop
xlat
or
ja
cmc
or
mov
jo
inc
ret
ret
jne
mov
insl
out
jg
jmp
lea
add
adc
in
sbb
mov
rcrl
nop
push
popa
nop
arpl
push
lret
sti
ret
dec
ret
addb
add
cs
roll
mov
jmp
clc
outsb
or
dec
das
mov
push
nop
push
popa
nop
and
jle
call
cmp
jle
cs
mull
icebp
cmp
clc
outsb
or
sbb
scas
test
aad
int3
imull
lcall
loope
dec
roll
aad
cmp
sub
rolb
sarb
mov
mov
lods
and
dec
or
ljmp
sbb
add
lahf
adc
in
sbb
rcrb
test
lds
mov
cmpl
aaa
cmpsl
ret
mov
xchg
xchg
add
in
bound
jg
jmp
sub
dec
pop
lret
lret
jnp
mov
arpl
gs
dec
sahf
or
xchg
add
push
clc
popa
icebp
nop
arpl
mov
and
mov
mov
rolb
rclb
cli
push
push
les
cmpsl
ret
in
jae
xchg
movsl
jb
loope
jle
add
xchg
setg
or
xor
xchg
or
in
decb
xchg
add
jns
mov
inc
mov
cmpsl
cmp
adc
mov
inc
mov
xchg
adc
cltd
sbb
mov
aas
mov
popf
pop
pop
fdivl
in
cltd
adc
jne
mov
mov
xchg
icebp
add
stos
and
mov
jbe
outsl
or
roll
aam
outsb
cld
fwait
jbe
push
lds
iret
jnp
mov
out
in
jg
leave
pop
into
test
push
lds
enter
popa
aas
test
outsb
stc
imul
jecxz
jne
rorl
mov
and
mov
cmpl
outsb
cld
fwait
jbe
rorl
push
sarl
outsb
or
xor
arpl
cmc
sbb
push
mov
pop
cmp
xor
ss
inc
mov
fbld
or
add
add
sbb
lret
faddl
add
add
or
or
or
or
lret
or
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
cld
adc
testb
sbb
lret
ja
jmp
adc
in
ljmp
pop
xchg
adc
adc
rorb
dec
lods
pop
int
addr16
jge
popa
add
push
mov
test
or
xchg
add
xor
dec
fstpt
sub
adc
dec
fdivrl
pop
cmp
jg
lret
lret
int
and
jl
adcl
test
adc
in
sbb
in
in
mov
ret
xchg
or
xchg
add
jnp
push
test
push
cltd
xor
sub
cmp
outsb
popf
jae
jg
mov
mov
js
mov
mov
movsl
int3
aas
ljmp
cmp
pop
roll
shll
xor
inc
into
pop
cmp
xor
cmp
pop
push
adcb
andb
pushf
xor
jo
jno
xorb
stc
imul
and
mov
mov
mov
repz
xchg
add
sahf
aaa
jecxz
faddl
cld
call
and
lret
and
cli
or
mov
lds
mov
lds
mov
dec
sub
inc
lock
lahf
push
dec
lds
int
loop
adc
or
cld
call
and
lret
and
pop
add
add
repz
js
imul
push
in
lret
lret
lods
add
adc
adc
ljmp
inc
lods
sub
cmpsl
aaa
push
mov
loope
fsin
adcl
test
rclb
sub
dec
fdivrs
fs
add
stos
cmp
jl
sbb
aad
shll
gs
adc
testb
out
loope
lcall
and
inc
and
jbe
jmp
push
in
aas
pop
enter
push
fisttps
flds
ljmp
stc
mov
adc
sbb
or
push
lds
insb
lahf
xor
sbb
mov
inc
mov
sub
and
mov
xor
sub
call
clc
notl
sti
imul
insl
in
loop
adc
add
jl
jne
dec
push
mov
xchg
adc
mov
inc
mov
sbb
loopw
sti
sahf
insl
mov
mov
movsb
daa
mov
and
or
jle
das
mov
or
imul
or
in
bound
mov
and
mov
pushf
add
cmp
mov
mov
das
pushf
jo
ja
loope
das
mov
jl
jns
jmp
sti
insl
std
test
mov
mov
and
divl
pop
ret
ret
out
adc
add
pop
cmc
ret
xchg
fs
fisttps
fldenv
mov
jg
inc
add
ret
inc
shll
arpl
cmc
push
lret
push
ret
cmpsb
push
lods
out
notl
shlb
iret
stos
pop
cmpsb
sub
lds
sub
dec
xchg
and
or
jbe
cmpl
sub
into
pop
cmp
adc
xchg
pop
bound
xchg
rcrl
out
mov
jnp
cs
inc
ja
xchg
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
dec
fimull
fidivl
stc
imul
mov
fisttps
fsts
xor
inc
fidivrl
std
test
and
sub
inc
push
roll
aad
sti
fs
popf
insb
jmp
pop
int3
stos
scas
stc
jp
jp
adc
or
je
lcall
cld
fwait
jbe
adc
add
inc
aaa
mov
inc
mov
rcll
mov
mov
inc
and
xor
dec
ret
mov
mov
lret
dec
fstpt
cmp
jle
mulb
cmp
jne
mov
and
and
mov
adc
dec
sahf
push
pushf
sti
push
cmpsl
mov
sahf
dec
jecxz
push
in
sub
mov
cmpsb
xor
leave
pop
cmp
or
loope
add
add
add
cld
call
and
lret
and
inc
add
add
jmp
adc
fcoms
add
lret
xchg
repz
mov
add
int3
push
lret
mov
ljmp
arpl
cmc
je
push
mov
and
jge
aaa
cmpsl
ret
xlat
push
lds
pusha
xchg
je
out
adc
adc
fcoms
inc
and
sub
mov
xchg
jle
aam
sub
pop
cmp
xor
jecxz
out
std
test
fcoms
mov
mov
jb
xchg
popa
in
bound
adc
mov
push
push
xor
data16
out
jno
pop
enter
popa
adc
roll
dec
in
pushf
xor
adc
jno
xorb
push
mov
inc
es
imull
test
lcall
jmp
ljmp
imul
jo
xorl
mov
movsb
sub
stos
cmp
push
xchg
adc
or
scas
aas
pop
test
pusha
xchg
bound
rcr
pop
lret
scas
pop
mov
or
fs
mov
sbb
mov
nop
testl
out
mov
or
dec
fdivrl
je
out
pop
mov
xchg
in
loope
jae
jbe
ja
loope
push
insb
or
mov
lcall
in
je
inc
enter
push
mov
cmp
imulb
test
out
ja
xorb
push
lds
aaa
ret
jg
mov
inc
lds
iret
and
sub
movsl
and
std
insl
hlt
pop
rclb
xchg
add
sahf
imul
cmc
add
lods
and
cmp
stc
ja
xorb
movsl
xor
mov
mov
in
insb
loop
je
unpcklps
lret
ja
loop
adc
testb
cld
call
and
lret
and
add
add
clc
or
js
jo
add
lret
int3
repz
mov
fstpt
adc
pop
repnz
fs
lea
fisttpll
out
push
push
xor
jg
cmp
push
les
pop
cmp
outsl
loop
out
mov
jl
jne
out
ud1
mov
and
sbbb
ljmp
xchg
adc
jbe
loopne
push
roll
rcrl
fstpl
stos
data16
mov
shll
adc
jp
inc
shll
xchg
lock
rcll
pop
mov
je
lea
in
jge
notl
bnd
jp
aas
mov
inc
mov
scas
pop
cld
pop
cwtl
push
imul
pop
enter
out
jmp
jge
int
int3
stos
iretw
push
les
mov
and
xorl
cmp
push
insb
or
mov
mov
gs
xor
sbb
and
xor
add
add
add
adc
jns
mov
in
lret
lret
jnp
or
mov
test
inc
aad
dec
scas
test
ja
jmp
xor
and
add
ja
cld
or
js
jno
push
fsubr
lret
lret
test
ja
jge
negl
sti
lock
bound
rolb
int3
stos
data16
jg
mov
inc
push
xor
sub
and
pusha
out
adc
adc
loope
jae
adc
pop
bound
addr16
popa
push
fdivl
in
pop
aad
sub
cmp
lret
cmc
pushf
outsl
lret
fnstcw
mov
sbb
xchg
sbb
dec
jecxz
push
in
cmp
pop
sub
mov
mov
and
popa
fidivrs
scas
aas
pop
test
test
out
cmp
dec
rolb
rclb
loope
call
sti
imul
adc
loop
pop
enter
rclb
cmpsb
push
aam
imul
or
mov
gs
jl
inc
xlat
mov
stos
mov
sahf
stc
or
jne
pusha
pop
repnz
lds
mov
lods
lods
and
inc
pop
mov
gs
jbe
test
jge
push
inc
mov
fisttpl
fnstsw
cmp
lahf
punpckhdq
add
pop
mov
cmpb
aas
pop
test
sbb
inc
iret
pop
int3
stos
iretw
mov
mov
push
lahf
push
jns
arpl
cmc
inc
jno
jp
in
dec
xchg
or
cli
notl
lods
xor
int
lods
cmp
daa
mov
and
and
mov
xchg
imul
mov
and
cmp
xor
mov
addl
or
pop
fimuls
adc
scas
and
orl
fsts
mov
push
popa
nop
arpl
movsl
xor
outsl
lcall
pop
ds
sbb
add
add
fdivr
call
and
lret
and
add
add
repz
js
test
aad
in
lret
lret
add
or
mov
inc
in
jbe
cmpl
pop
jp
ds
xchg
add
sahf
das
mov
xor
cld
call
and
lret
and
sub
xor
or
js
mov
lret
lret
xor
or
mov
ja
fmuls
adc
add
or
or
xor
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
decb
adc
mov
push
pop
in
lret
lret
outsl
add
adc
xchg
ss
leave
test
call
insl
ret
pop
cmp
jg
out
jl
notb
aam
sub
or
jle
mov
jns
bound
in
ret
ret
jnp
mov
enter
dec
andl
out
add
push
mulb
ja
loope
setg
or
inc
les
int3
sbb
adc
js
lods
lret
inc
mov
mov
outsl
in
sbb
or
dec
adc
push
xlat
pop
iret
stos
pop
rclb
xor
jo
int
and
pop
inc
lret
lret
icebp
popa
add
inc
mov
dec
jecxz
push
in
lods
inc
shll
pop
cmp
mov
inc
shlb
xor
add
push
pushf
sub
pop
int3
stos
mov
js
mov
out
out
mov
ret
pop
repnz
fs
xor
int
cmc
adc
add
jne
mov
dec
roll
aad
js
insb
or
clc
mov
cmpsb
shll
mov
jnp
insb
or
out
push
jecxz
push
in
sbb
xchg
pushf
sti
push
repnz
rolb
shlb
scas
and
mov
jp
fs
cmp
sbb
aad
and
loopne
jb
out
adcl
test
arpl
popa
add
inc
aas
scas
cmp
mov
out
out
jo
cmp
fwait
or
daa
mov
inc
mov
cmp
xor
push
cmp
std
fs
popf
insb
test
pop
leave
test
fisubs
mov
sbb
ja
push
cld
adc
xor
imul
insl
mov
add
or
or
cld
call
and
lret
and
add
add
cli
or
js
dec
push
xchg
jecxz
lret
lret
xor
or
mov
cwtl
data16
pop
fdivl
in
mov
cmpsl
ret
mov
xchg
icebp
add
aad
int3
stos
data16
outsb
cld
fwait
jbe
push
xchg
add
cli
push
imul
ret
ret
outsb
cld
fwait
jbe
rolb
mov
hlt
sti
push
std
jae
xchg
adc
and
shlb
cs
mov
lret
mov
xchg
jae
jg
jmp
shlb
int
xchg
add
sahf
je
mov
int3
push
shlb
add
jns
arpl
xchg
gs
inc
lds
iret
and
sahf
jbe
push
les
imul
add
sbb
or
push
aam
sub
loope
jae
outsb
jmp
push
in
or
mov
lds
push
cmpsl
test
mov
xor
adc
jge
insl
loopne
adc
inc
stc
imul
cs
int
and
mull
xchg
outsb
xor
xor
adc
xchg
or
xor
mov
push
in
in
jbe
cmpl
mov
gs
jbe
mov
hlt
jae
xchg
ret
arpl
xchg
gs
movsb
ret
ds
mov
lods
pop
mov
jb
xchg
insl
in
bound
xchg
icebp
add
enter
push
or
fdivrl
int
lea
arpl
cmc
add
clc
stc
ja
xorb
and
xor
cld
call
and
lret
and
and
add
ja
cld
or
js
inc
jecxz
movsb
in
lret
lret
clc
or
adc
into
cmp
jge
adc
or
dec
cmp
inc
aam
dec
jmp
cwtl
cs
aas
xchg
add
mov
sahf
or
lcall
cwtl
decl
mov
in
add
add
or
sub
mov
ja
xlat
or
loop
adc
testb
xor
lret
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
add
adc
aam
dec
sub
or
lret
cli
xlat
or
ja
or
adc
aaa
push
mov
std
or
lods
aas
scas
lret
divl
xchg
push
mov
jle
imul
jp
das
mov
and
xchg
js
push
roll
sarl
gs
push
in
add
push
std
push
lds
mov
mov
lods
jnp
mov
jmp
pushf
mov
shll
push
xor
iret
stos
pop
sub
cli
popf
insb
lahf
cltd
adc
leave
inc
aam
dec
lcall
jmp
lret
push
outsb
or
dec
mov
mov
xchg
jl
testb
popa
add
pop
lods
cmp
or
sahf
or
cmpsb
adc
in
in
mov
jae
insb
adc
jns
cmp
dec
fistpll
add
sahf
sbb
loope
inc
fidivrl
inc
daa
sarb
les
mov
add
push
loopne
adc
aaa
pop
fisttpll
out
xor
ret
push
lds
pushf
adc
mov
add
jne
out
push
stos
cmp
sub
cmc
gs
xor
xchg
add
add
add
xor
lret
faddl
add
ja
out
or
js
aaa
mov
or
lret
pushf
out
adc
ret
sub
insb
loop
je
clc
jg
mov
lea
cltd
clc
or
divl
xorl
push
insb
lahf
jne
iret
pop
cmp
and
xor
push
mov
xor
push
sub
orb
aam
sub
mov
and
mov
push
cld
push
jne
jnp
in
pop
pop
iret
pop
cmp
jle
jmp
enter
addr16
xchg
add
and
movsb
cmp
outsl
popf
push
xchg
repz
in
and
sub
sub
and
or
in
xchg
idivl
mov
rclb
mov
stc
cwtl
imul
mov
insb
xchg
fstpl
scas
pop
lea
fimull
std
push
adc
gs
pop
xor
xor
or
or
or
or
add
or
lret
or
or
lret
or
add
adc
xor
and
add
ja
or
adc
stos
lds
das
in
lret
lret
fimull
adc
and
imul
adc
add
adc
and
push
test
cli
dec
push
xor
or
fdivl
in
pushf
push
pushf
sti
push
mov
ret
fdivl
in
xchg
or
insl
std
test
fisttpll
mov
pop
jb
cmp
sahf
or
cmpsb
add
data16
xchg
outsb
lods
sbb
sub
sub
loope
in
je
add
pop
repnz
fs
lock
cmp
cs
scas
pop
fdivl
in
add
xchg
adc
pop
int3
stos
xchg
fistps
scas
pop
mov
mov
inc
int3
inc
and
repz
xchg
je
out
sbb
lcall
xor
inc
aam
dec
mov
mov
into
pop
cmp
pusha
mull
insb
lds
xchg
pop
bound
daa
sarb
ret
push
lds
sub
lds
movsl
adc
mov
gs
insl
hlt
pop
movb
xor
inc
xchg
push
pushf
sti
push
cld
in
adc
imul
loop
and
push
lds
add
pop
add
jmpw
lcall
nop
jne
cmc
gs
add
addr16
sub
je
lea
movsl
xor
imul
insl
cwtl
insb
in
sbb
jno
repz
sbb
out
jl
notb
rolb
rolb
adc
mov
inc
mov
mov
test
dec
fnstcw
mov
xor
int
xchg
pop
xchg
jb
jo,pt
jne
out
inc
inc
xlat
inc
and
push
sti
pop
movsb
cld
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
inc
fimuls
and
mov
and
sub
cltd
or
jno
mulb
jns
pop
into
test
movsl
int3
aas
hlt
lods
sub
sbb
push
test
popf
or
adcl
inc
shll
popa
add
sbb
mov
jg
jns
jae
xchg
and
aam
repz
gs
add
sbb
sub
rolb
pop
mov
arpl
addr16
dec
stos
aas
scas
lret
setge
cmc
gs
push
jo
je
out
pop
jae
jp
in
inc
cmc
notl
push
xchg
add
sbb
jne
jl
notb
ljmp
adc
imul
ja
jmp
xor
inc
add
add
decb
adc
ret
in
lret
lret
add
or
mov
cmp
pop
test
psubd
inc
rcll
sub
dec
fnstcw
scas
lret
mov
ljmp
sub
sbb
aad
int3
iret
dec
fstpt
repnz
fs
push
lds
pop
ljmp
loopne
into
pop
cmp
add
imul
insl
test
out
xchg
mov
sbb
mov
push
cld
dec
fmuls
mov
push
xor
cs
mov
dec
mov
aad
sbb
aam
dec
in
jbe
cmpl
ljmp
and
pop
hlt
push
lahf
push
pop
lret
pop
ds
outsl
repz
cmc
cmp
dec
sub
paddusw
xchg
mov
stos
cmp
dec
mov
mov
data16
inc
and
sub
movsl
xor
jns
mov
fstl
mov
mov
pop
push
fisttps
flds
and
orb
adc
daa
stos
cmp
or
fsubrl
pop
jp
ds
mov
and
loope
insl
stc
imul
jbe
loopne
mov
mov
sbb
dec
lock
sbb
lret
pop
ds
push
pusha
pop
repnz
jl
jne
insb
cmp
in
sbb
loop
je
sub
pop
out
cmc
pushf
outsl
test
hlt
ja
addr16
add
dec
fidivrs
mov
mov
xchg
add
jns
ja
xorb
setg
or
lock
mov
xor
inc
mov
and
add
add
and
lret
and
push
or
mov
jb
shlb
xchg
gs
add
adcl
iret
pop
cmp
popa
and
pop
pushf
or
in
movsl
loop
loope
jae
jl
js
ljmp
jnp
mov
push
repz
jno
jecxz
out
je
lea
cmp
adc
push
mov
mov
addb
and
mov
js
popa
icebp
ja
xorb
jns
mov
push
mov
jns
jbe
cwtl
push
imul
data16
xchg
outsb
xchg
ret
cs
cmp
dec
adc
inc
push
jecxz
push
in
cwtl
push
test
push
mov
dec
sahf
scas
and
insl
std
test
out
ljmp
mov
call
sbb
adc
mov
mov
mov
dec
mov
mov
adcl
jecxz
mov
add
sete
insl
pushf
jle
test
pop
test
test
fsubs
mov
std
lock
in
xchg
or
push
push
aam
sub
jbe
loopne
test
fwait
decb
pop
test
dec
mov
loope
in
sub
ficoml
mov
daa
inc
mov
sbb
adc
pop
pop
jp
xor
inc
sub
or
push
jne
out
dec
inc
inc
and
push
mov
adc
sbb
cmp
jl
fimull
push
in
std
insl
hlt
pop
lods
push
ret
ret
mov
inc
mov
sbbl
ljmp
pop
mov
mov
fwait
jbe
xchg
or
outsb
cld
fwait
jbe
xchg
fwait
decb
push
mov
lea
inc
in
jmp
popa
add
mov
mov
lret
lret
inc
add
add
push
or
js
dec
lahf
in
lret
lret
dec
cmp
push
jmp
cwtl
push
pushf
sti
push
cmpsl
sbb
call
jmp
sbb
add
push
call
test
popf
mov
test
push
add
add
bound
push
call
cmp
iret
enter
push
movsb
in
mov
jmp
stc
pop
mov
cld
call
jmp
fiaddl
mov
cmp
push
loop
push
jmp
push
fucomi
mov
in
jne
mov
es
outsl
in
pop
call
jmp
arpl
imul
push
xor
daa
inc
or
cmpsb
nop
add
xchg
popf
pushl
jmp
ds
popf
in
mov
sti
or
add
jno
jecxz
push
mov
jmp
adc
inc
shll
popa
jmp
dec
xor
add
add
jmp
sti
js
mov
push
rolb
sarb
mov
test
mov
jmp
int3
popf
jno
insl
hlt
pop
mov
jmp
mov
fnsave
ret
jmp
mov
inc
adc
inc
call
jmp
pop
fisttpll
out
or
cmpsb
mov
andb
sub
jo
mov
and
jmp
dec
cmp
int3
popf
xchg
rol
jmp
sti
jl
jne
push
adcl
cmp
jne
jmp
push
shlb
xchg
bound
mov
mov
add
add
xor
scas
dec
inc
iret
pop
cmp
xor
inc
xlat
mov
mov
faddl
add
add
lret
xor
adc
adc
jmp
lret
mov
push
aaa
ret
lods
cmp
jno
jnp
cmpl
mov
clc
insl
adcb
jmp
add
loope
jmp
mov
mov
and
sbb
repnz
es
daa
mov
mov
jmp
outsl
ljmp
stc
mov
nop
push
popa
nop
cmp
fs
popf
insb
fistl
in
loop
popl
lea
jmp
jmp
and
loopne
mov
xchg
je
les
int3
es
jmp
mov
lret
and
xor
sub
add
push
jmp
les
mov
lahf
cli
or
movsl
xor
or
sub
ret
jmp
cmpsb
daa
mov
and
dec
int
and
and
scas
cmp
mov
outsb
mov
adc
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
fcoml
add
add
adc
adc
pushf
ja
xchg
in
lret
lret
insb
adc
adc
lret
pusha
in
jge
mull
sti
jne
mov
jge
add
push
imull
sahf
insl
frstor
mov
dec
mov
xorl
ds
test
lods
lret
inc
idivl
mov
inc
mov
cmc
notl
pushf
setg
or
pop
movb
sub
cmp
inc
and
xor
and
mov
dec
xlat
inc
and
pop
add
pop
xchg
or
je
cs
push
lret
mov
int3
xor
cmpsl
aaa
push
mov
inc
mov
xchg
nop
testl
lods
pop
scas
idivl
test
mov
rcrl
test
add
pop
ds
dec
ret
ret
scas
sbb
insl
sti
jmp
orl
xchg
sbb
or
lds
add
fiadds
add
int
jmp
mov
xchg
pop
push
je
out
sub
pop
int3
stos
shlw
sbb
lret
push
add
add
loopne
adc
cltd
fcoml
int3
in
lret
lret
fistl
or
mov
xor
clc
xchg
pop
xchg
repnz
xchg
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
xor
icebp
gs
pushf
outsl
fcoml
pop
push
pushf
jmp
rcll
pop
testl
out
sbb
sub
push
xchg
or
or
mov
test
add
add
jmp
and
sub
lock
in
inc
aad
dec
lret
cmp
pusha
jae
jne
pop
leave
ret
jmp
pushf
sbb
std
adcl
test
or
xchg
mov
mov
inc
and
popf
pushl
jmp
shlb
xor
leave
fimull
add
add
push
pop
lret
scas
pop
movsl
sti
jl
jne
push
divb
xchg
pop
or
jmp
lds
inc
or
into
out
lock
bound
xor
inc
mov
adc
nop
imul
pop
jmp
ja
addl
jmp
icebp
cmp
ljmp
in
dec
stos
dec
mov
pusha
sti
add
mov
mov
test
cmp
aaa
loope
pop
push
outsb
jne
jmp
into
ficompl
mov
jmp
jne
outsl
or
lds
push
xor
pushfw
push
pushf
sti
push
mov
cltd
popa
mov
ret
daa
mov
dec
mov
mov
rol
sti
add
fwait
out
in
jg
adcb
xlat
jmp
sub
mulb
xchg
popa
dec
fisttps
fsts
pop
int
addr16
mov
call
cltd
roll
add
jmp
in
in
mov
aas
jmp
pop
lea
jmp
pop
lret
pop
ds
mov
sar
data16
xchg
outsb
xchg
repz
popa
mov
jmp
int3
popf
add
in
out
jno
dec
ret
mov
add
add
mov
clc
jg
push
mov
mov
mov
jmp
sbb
adc
push
inc
push
xor
pop
rolb
inc
test
cwtl
xor
jmp
cmp
jmp
or
addb
lock
fcompl
scas
pop
movsb
sub
jmp
mov
jmp
sub
jmp
xor
jmp
sahf
dec
jmp
dec
int
and
add
pop
lret
scas
pop
scas
addl
inc
xlat
mov
mov
call
add
call
mov
lea
jmp
or
fisubrl
inc
or
or
add
orl
out
gs
pushf
outsl
sahf
sti
jnp
mov
into
xlat
add
je
jmp
popl
xchg
icebp
add
mov
nop
testl
mov
addr16
imul
dec
ret
push
ret
push
call
gs
pushf
jmp
sar
popf
jmp
cmc
mov
add
add
jmp
inc
xlat
inc
and
jbe
dec
fdivrs
lods
lret
inc
out
fdivrl
add
xlat
adc
xor
data16
xchg
outsb
jbe
jo
loop
fiadds
out
sbb
sub
add
jmp
or
imul
jmp
jnp
mov
arpl
outsl
or
fiaddl
mov
lods
pop
arpl
pushl
jmp
adc
lahf
push
xchg
repz
out
int3
inc
and
inc
jmp
outsb
sbb
push
add
ja
jle
call
arpl
cmp
and
ret
cmpsb
imul
or
jmp
jl
xchg
cmc
add
adc
sbb
test
add
add
aas
adc
sbb
xor
test
movzbl
add
cmp
jmp
stos
sub
lock
jp
stos
daa
mov
and
sub
or
test
pop
cmpsb
test
sub
nop
push
popa
nop
je
mov
aaa
mov
lret
sbb
ret
jne
addl
mov
jmp
jl
inc
dec
mov
add
add
jmp
outsb
out
adc
cmp
hlt
mov
cltd
pusha
mov
add
add
push
adc
rorb
adc
or
add
test
nop
dec
or
jmp
inc
fisttpl
and
mov
cmp
fidivrl
lea
jmp
mov
mov
sbb
jge
popf
or
test
sbb
popa
mov
ret
scas
cmp
test
mov
leave
jmp
pushf
int
push
push
jmp
jmp
and
jnp
mov
and
and
int3
inc
and
jmp
pop
movsl
mov
ret
jmp
xor
inc
fdivl
in
clc
gs
pushf
outsl
ljmp
jne
push
pushl
call
mov
push
call
jmp
lcall
add
add
hlt
jmp
out
cli
popf
insb
test
mov
mov
incl
jmp
inc
mov
into
sbb
pop
cmp
and
cmp
push
push
xor
push
push
push
push
push
push
lea
call
jmp
cmp
sbb
xchg
pusha
mov
mov
mov
andb
sub
jmp
sbb
adc
sub
cmp
pop
push
jp
in
dec
mov
popa
jmp
int
shlb
popf
jo
jmp
hlt
js
mov
addr16
shlb
push
cmp
fs
xor
mov
jmp
orb
jmp
sbb
mov
mov
and
mov
mov
lods
mov
mov
ret
int
enter
xor
ss
test
or
in
js
mov
js
jo
loop
es
push
lds
mov
add
mov
ret
jmp
sbb
lds
mov
test
inc
ret
xorb
call
jmp
fwait
pop
in
addl
jmp
add
retw
mov
stos
fsubl
xchg
xchg
andb
sub
jo
mov
and
jmp
sub
aad
add
adc
cld
jmp
pop
loop
pusha
in
sbb
cmp
insl
hlt
pop
lock
add
add
lea
jmp
rclb
cltd
add
add
cltd
add
add
rcll
punpckhdq
daa
shlb
ret
and
mov
filds
call
mov
lods
mov
mov
pop
stos
push
push
and
cmp
add
jl
mov
add
call
mov
xchg
fistl
pop
mov
js
ljmp
jmp
mov
xchg
xchg
or
cmp
push
call
aam
aad
dec
in
jmp
push
in
pop
std
insb
loop
je
inc
jmp
out
jmp
sub
jmp
scas
aas
scas
lret
adc
adc
push
jno
aaa
sti
outsb
cld
fwait
jbe
cmp
in
add
and
cld
incl
mov
sub
cmp
mov
and
cli
adcl
decb
test
std
jmp
rolb
add
jmp
roll
xchg
or
or
mov
adc
fcompl
stos
scas
movl
test
outsb
out
add
xchg
popf
pushl
mov
jmp
ret
inc
shll
push
dec
and
jmp
jne
jmp
jecxz,pn
and
bound
popf
add
add
data16
xchg
outsb
mov
mov
jl
imul
sar
inc
adc
pop
cltd
or
insb
repz
cmpl
mulb
or
les
jmp
sbb
movsb
sub
lds
adc
mov
push
movsl
cld
jb
xchg
xchg
sbb
lea
mov
mov
mov
andb
sub
jo
mov
jmp
testl
mov
mov
add
jmp
cs
je
popa
mov
jmp
and
jmp
xchg
mov
popl
jmp
adc
mov
lcall
pop
iret
pop
cmp
jle
mov
movzbl
add
cmp
jmp
push
call
in
loope
jae
jl
jns
jmp
scas
cmp
mov
cmc
lea
jmp
aas
mov
cmp
and
mov
aam
loope
inc
or
jmp
mov
mov
push
ret
pop
into
test
xchg
repnz
adc
pop
lahf
punpckhdq
adc
jno
xorb
lahf
punpckhdq
mov
mov
call
add
xor
pop
jmp
jmp
add
movsb
sub
in
pop
cld
xorb
push
adc
add
add
adc
adc
pop
sar
ja
lret
lret
dec
daa
or
mov
aad
jnp
xchg
cmc
add
jns
dec
int3
inc
and
push
aaa
ret
push
lds
mov
stos
and
dec
leave
xor
testb
in
lret
lret
push
add
add
das
or
js
cli
xor
insb
in
lret
lret
push
add
add
sub
adc
cmp
cs
lret
lret
jle
or
mov
in
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
faddl
add
ja
pop
or
js
nop
fisubrs
in
lret
xor
adc
testb
negb
nop
push
popa
nop
inc
ds
inc
mov
test
mov
mov
cmpsl
aaa
push
mov
mov
fs
push
cmp
cmpsl
aaa
push
mov
jns
aas
cmc
gs
pop
fwait
pop
xchg
repnz
inc
fstpt
adc
enter
push
mov
sbb
push
ret
cmpsb
push
aam
inc
fidivrl
nop
testl
push
scas
inc
mov
cmpsl
ret
roll
dec
mov
inc
shll
loop
je
cli
jge
je
insl
daa
mov
inc
mov
out
imul
insl
mov
ljmp
sub
out
adc
cmp
mov
inc
mov
daa
stos
cmp
or
fildll
jl
jne
sub
stos
sbb
scas
cmp
mov
fisttps
mov
jb
in
adc
mull
xchg
lds
mov
js
dec
aam
frstor
or
cltd
clc
or
inc
fistpl
ret
ret
mov
dec
mov
aas
lret
loopne
adc
or
hlt
aas
mov
orb
decb
mov
pop
xchg
add
jp
mov
inc
mov
lahf
adc
in
sbb
xor
xor
sub
adc
in
sbb
xlat
pop
leave
test
fwait
dec
fdivrs
fwait
decb
out
sbb
shll
ljmp
fwait
jbe
pop
iret
pop
cmp
callw
je
sub
sub
pop
lret
scas
pop
cld
jbe
bound
cmp
dec
mov
mov
cld
xchg
cmc
add
mov
cmpsb
push
sbb
mov
push
call
lea
push
lea
jmp
pop
ret
ret
cmp
dec
iret
pop
cmp
aas
jge
je
insl
xchg
xchg
repz
jmp
mov
jle
jne
ljmp
in
jle
std
js
mov
pop
repnz
fs
je
insl
hlt
pop
out
test
pop
test
cmp
pop
into
test
shlb
shll
loop
cmp
mov
mov
das
fwait
pusha
icebp
popa
add
pop
ljmp
xlat
inc
and
jbe
jecxz
push
in
add
add
cmp
imul
insl
faddl
inc
and
jbe
rcll
add
fwait
or
jns
xchg
add
jns
out
jg
jmp
lock
jae
cmc
jne
mov
pushf
sbb
je
push
cld
adc
sub
into
pop
cmp
sub
jne
out
cmp
jge
je
jo
cmp
mull
icebp
or
mov
inc
mov
adc
adc
push
xor
xchg
pop
bound
xchg
outsb
lods
mov
xchg
jmp
iret
lods
lods
lret
inc
out
mov
movsb
cmp
sub
sub
cwtl
push
imul
sbb
adc
in
sbb
outsb
mulb
adc
hlt
push
cld
adc
mov
jg
or
mov
test
cwtl
decl
loop
int3
inc
and
sub
pop
mov
pop
or
mov
sbb
adc
sub
adc
add
aas
lret
mov
inc
mov
xchg
adc
adc
mov
shlb
mov
sbb
dec
lds
iret
sub
das
jl
xor
xor
or
or
or
or
adc
or
and
add
ja
push
or
js
inc
in
jp
in
lret
lret
outsb
add
add
daa
or
js
inc
in
les
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
inc
sub
adc
lret
pusha
out
jg
jmp
mov
out
xor
setg
or
mov
xchg
out
ljmp
inc
mov
cld
insb
loop
je
movsl
xor
mov
js
cmp
jb
xchg
in
out
jo
insb
ljmp
stc
mov
scas
outsb
sahf
or
xor
jne
mov
enter
pop
fnstcw
adc
scas
xor
push
test
push
mulb
jnp
in
add
ret
addr16
adc
adc
xchg
sbb
lahf
punpckhdq
xorb
insl
std
test
data16
jl
notb
rcrl
test
push
aaa
ret
xor
fdivl
in
jno
xchg
cmc
add
xor
lret
pop
into
test
scas
lret
and
loopne
in
jle
repz
popf
insb
lds
pop
aas
lret
cs
inc
and
sbb
adc
xor
mov
cmp
mov
les
mov
jg
inc
or
jle
push
les
mov
out
jg
jmp
lock
loop
hlt
xchg
outsb
fwait
jge
outsb
or
adc
jp
in
pop
rorl
dec
test
es
cs
stos
int
iret
ja
outsl
or
mov
cmc
daa
xor
push
lds
jbe
imul
scas
lret
pop
roll
aad
in
jmp
jge
xchg
add
std
or
and
and
add
adc
dec
movsb
xor
inc
mov
out
stc
imul
call
testb
xor
lret
loop
adc
add
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
add
pop
loop
adc
add
lret
lret
stc
and
adc
lret
lods
movsb
ret
faddl
dec
sub
or
xor
popa
std
insl
hlt
pop
cmpb
dec
fdivrl
in
mov
jle
arpl
xchg
jb
push
imul
insl
xchg
and
jne
clc
outsb
or
or
enter
addr16
or
sbb
ja
xorb
repnz
pop
repnz
pop
iret
stos
pop
mov
sub
mov
pop
lret
lret
pop
xchg
adc
lahf
jecxz
or
or
mov
sub
adc
push
cmpsl
mov
mov
and
outsl
fcompl
mov
add
in
setnp
outsb
popf
pop
cld
gs
pushf
outsl
rorb
mov
mov
jl
jne
add
jns
mov
jbe
push
cld
xor
mov
push
cmc
sbb
lock
lds
iret
xor
dec
sub
xor
push
jns
jge
xchg
add
sahf
jbe
data16
xchg
outsb
popf
adc
or
stos
cmp
dec
fstl
pop
scas
popf
adc
std
insl
hlt
pop
roll
mov
gs
push
inc
int
and
jb
push
mulb
push
jne
jnp
in
pop
fcoml
cmpsb
push
cli
adc
xor
mov
jno
xorb
in
bound
mov
mov
dec
mov
or
or
test
outsl
lock
ja
jl
jne
dec
adc
jbe
pop
lret
scas
pop
mov
outsl
lcall
push
xor
xor
gs
sub
jne
out
sbb
popa
add
sbb
jne
out
push
es
inc
mov
push
xchg
add
sahf
jp
mov
xchg
shll
xchg
les
mov
pop
xlat
inc
and
sbb
bound
mov
adcl
xchg
or
adcl
add
inc
fisttpl
and
adc
add
cmp
mov
nop
or
ret
push
lds
pushf
add
adc
xchg
or
push
rcll
cmpsl
push
mov
cmc
sbb
lahf
punpckhdq
shll
mov
cltd
clc
or
ficompl
stos
xchg
dec
iret
pop
cmp
aas
repz
mov
insl
out
adc
or
call
orb
clc
or
mov
dec
mov
xor
cld
call
and
lret
and
popa
add
add
and
int
mov
lret
lret
adc
adc
cmp
adc
add
scas
orl
adc
add
push
jns
dec
jge
add
push
inc
inc
and
push
xlat
jl
cmp
xchg
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
lods
cmp
mov
in
xchg
add
pushf
xor
or
or
cmp
rcll
mov
fcmovne
pop
lret
scas
pop
mov
sub
lds
pop
xchg
jb
or
cmpsb
xor
scas
sub
dec
sub
and
pop
mov
rolb
ljmp
mov
sti
adc
push
popa
nop
gs
adc
lods
es
cs
popa
icebp
nop
arpl
jecxz
jecxz
clc
lahf
push
das
idivb
pop
or
mov
leave
jo
mov
jno
xchg
testb
loopne
loop
out
jo
adc
daa
sub
pop
iret
pop
cmp
jle
mov
dec
mov
or
scas
push
push
xor
jns
xchg
add
xor
cmp
loop
sbb
sti
lock
bound
mov
std
pop
sbb
adc
push
adc
pop
or
mov
mov
sbb
and
ljmp
in
je
insl
xlat
push
les
das
dec
mov
inc
mov
stc
adcl
test
insb
loop
je
rorl
dec
mov
mov
xor
rorl
dec
mov
pop
cld
imul
ret
dec
frstor
mov
stos
into
cmp
push
mov
enter
pop
into
test
push
or
mov
cmpl
mov
adc
or
or
sub
lret
lret
push
add
add
das
or
js
ja
aam
in
lret
lret
sbb
or
mov
lret
or
or
or
or
add
or
add
add
or
or
or
lret
xor
sub
add
ja
xor
adc
ficomps
or
lret
addr16
or
arpl
xchg
sbbl
mov
adc
stc
data16
xchg
outsb
jmp
mov
aas
mov
call
sbbb
adc
add
dec
ret
stos
mov
and
les
mov
lock
bound
sub
pop
mov
gs
jbe
lret
pop
ds
push
jno
jecxz
hlt
jp
jp
loop
jecxz
jne
mov
xchg
icebp
add
pop
aad
sub
jp
jmp
loopne
loope
jae
lods
cmp
mov
cmc
or
jmp
xor
data16
xchg
outsb
or
fwait
push
pushf
sti
push
mov
lcall
js
ljmp
cmp
xchg
mov
pop
enter
ljmp
mulb
aaa
popa
loop
pop
loop
movsb
and
and
dec
pop
jecxz
push
in
jl
imul
pop
jp
bound
stos
cmp
inc
push
test
jge
jg
inc
shll
aad
dec
test
adc
cmp
sub
jbe
lahf
punpckhdq
sbb
nop
testl
pop
mov
jg
jge
testl
push
mov
sti
imul
push
sbb
or
punpckhdq
inc
mov
es
push
lds
inc
fimull
fidivl
mov
lret
aam
dec
leave
push
roll
aad
cmc
jne
mov
lahf
sbb
aad
int3
addl
and
xchg
xchg
repnz
adc
pop
adcl
int
and
cmp
je
mov
neg
mov
inc
cmp
jl
jmp
mov
int3
jmp
addb
push
jns
insb
popa
call
rcrl
xchg
addr16
push
lds
xchg
pop
loopne
jecxz
jne
insb
loop
je
popa
repnz
pop
repnz
or
pusha
mull
icebp
push
lahf
setg
or
fbstp
gs
dec
xchg
and
mov
jl
jne
inc
std
data16
xchg
outsb
mov
inc
and
xor
or
add
std
or
aaa
test
pop
test
and
jbe
imul
adc
jno
xorb
adc
mov
cmpsb
daa
mov
and
insl
pop
dec
xor
adc
testb
sub
lret
fdivl
add
ja
pop
or
js
xor
clc
jne
lret
lret
push
xor
adc
mov
add
out
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
mov
test
gs
pushf
outsl
sbb
in
imul
insl
cwtl
or
fsts
mov
or
pop
xchg
sbb
pop
enter
dec
fstpt
es
mov
scas
lods
lret
inc
out
jae
jnp
in
pop
outsb
ljmp
stc
scas
and
es
mov
mov
mov
mov
mov
mov
ret
or
jo
cmpsl
aaa
push
mov
sbb
jno
rcll
inc
jecxz
notl
sbb
xchg
jle
xchg
or
je
fisttpl
fnstsw
mov
aad
ja
xorb
mov
jns
jge
inc
shll
repz
gs
cmp
pop
into
inc
aam
dec
stos
pop
fisttpl
or
xor
outsb
nop
sbb
aad
out
loopne
adc
inc
jo
jo
loop
loop
out
jno
push
push
xor
jle
scas
aas
pop
test
push
movsb
adc
xor
out
pop
sti
outsb
cld
fwait
jbe
mov
jecxz
xchg
pop
bound
ret
imulb
test
add
dec
inc
and
pop
add
inc
icebp
jb
xchg
fs
sbb
shll
test
frstor
mov
mov
adc
fmuls
fdivrs
jp
pusha
pop
repnz
push
jno
jecxz
scas
daa
mov
and
pop
shl
lcall
lcall
inc
daa
shlb
cmc
pushf
outsl
les
mov
js
cmp
push
in
inc
pop
adc
icebp
imul
insl
fcompl
pop
cmp
outsl
scas
cmp
daa
mov
and
fs
xchg
cmc
add
add
mull
icebp
js
and
mov
inc
mov
lods
cs
js
mov
fnsave
sbb
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
xor
adc
add
enter
in
lret
push
xor
adc
movb
dec
cmpsb
test
fwait
decb
decb
and
aaa
ret
xchg
add
jnp
mov
push
ret
cmpsb
push
mov
mov
ljmp
inc
add
add
xor
adc
sbb
mov
in
lret
rorl
mov
push
ljmp
mov
scas
lret
repnz
test
dec
fnstcw
aam
subb
add
roll
mov
jnp
js
ljmp
inc
in
loope
jae
je
jbe
loopne
adc
pop
jb
sub
arpl
cmc
xor
rcrb
popa
mov
leave
sub
filds
mov
icebp
jno
xorb
push
ret
cmpsb
push
mov
lods
inc
mov
stos
int
fpatan
jnp
mov
push
clc
xor
xor
add
or
or
or
or
add
lret
add
add
lret
or
or
lret
xor
sub
add
ja
pop
or
js
lret
gs
lret
lret
xor
add
ja
pop
or
js
out
aad
in
lret
lret
pop
pop
or
mov
pop
xchg
pop
xlat
inc
and
cmp
push
push
jno
jecxz
mov
lods
lret
inc
loope
xchg
mov
xchg
add
push
in
jge
notl
les
int3
jp
and
dec
fidivrs
les
mov
sbb
ja
jbe
loopne
mov
mov
inc
mov
out
jg
mov
lock
rclb
sub
jns
mov
loopne
in
mov
inc
mov
rcll
mov
jns
jmp
sahf
push
mov
es
mov
cmpsb
adc
adcl
pop
int3
stos
xchg
and
dec
enter
inc
mov
inc
fidivrl
xchg
icebp
add
xchg
sbb
fisttpll
out
das
mov
pop
cltd
or
pop
sbb
pop
bound
psubd
xchg
cmc
add
sub
inc
aam
sub
adc
xchg
pop
bound
jg
cmp
add
addl
in
mov
jo
imul
dec
rolb
rclb
adc
jbe
cmpl
pop
jp
jg
jno
xorb
jb
xchg
dec
int3
inc
and
mov
inc
and
and
data16
aam
jns
mov
idivb
mov
mov
pop
cmp
outsb
int
shlb
gs
aas
xor
pop
mov
test
fs
dec
in
inc
les
int3
sbb
ss
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
cmpsl
and
push
lahf
push
pop
mov
lret
inc
mov
mov
aas
fnstenv
mov
mov
pushf
xchg
sahf
stc
or
cld
jo
xorl
or
sub
cmc
pop
js
jle
call
adc
sbb
cmp
insb
loop
je
sub
push
lds
daa
inc
mov
enter
push
xchg
out
adc
or
lock
lcall
pop
cmp
push
rcrb
loopw
inc
shll
pop
cmp
and
sub
jno
lret
lret
adc
in
sbb
in
push
movsb
daa
mov
and
pop
xchg
add
pusha
lock
mov
xlat
pop
int
xorl
lret
pop
ds
sub
add
inc
lods
inc
and
pop
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
ja
or
adc
fcoml
or
lret
adc
jp
xor
stc
push
lahf
push
outsb
insb
or
mov
jne
mov
push
cwtl
push
imul
push
ret
cmpsb
push
in
stc
imul
loop
adc
add
sub
lret
loop
adc
testb
add
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
ja
add
ja
dec
or
js
inc
cmp
pop
in
lret
lret
and
add
ja
aaa
or
js
popa
mov
inc
in
lret
lret
add
pop
loop
adc
or
lret
lret
push
inc
or
in
lret
pop
les
int3
mulps
push
aaa
ret
cmp
mov
scas
imul
pop
repnz
mov
mov
mov
inc
mov
cs
inc
mov
aaa
mov
dec
mov
push
movsl
inc
cwtl
push
mov
es
imul
ljmp
mov
lock
bound
cmp
push
fmuls
fdivrs
notl
xor
push
lds
movsl
int3
aas
jmp
loope
adc
aas
repz
cmp
xor
sbb
fwait
lods
cmp
mov
sbb
inc
shlb
xchg
cmc
add
sub
out
jbe
cmpl
adcl
popf
or
mull
icebp
js
mov
in
insl
std
test
cmp
lds
dec
test
pop
sti
daa
mov
add
pop
fdivl
in
idivb
test
mov
jg
push
flds
mov
xchg
lock
outsb
loopne
adc
inc
mov
ljmp
orl
sti
push
mov
cmpsl
aaa
push
mov
jnp
aas
fs
push
cld
dec
sub
mov
mov
scas
cmp
mov
inc
aad
sub
push
sahf
or
cmpsb
add
call
mov
js
imul
iret
stos
pop
lea
addr16
pop
sub
ss
inc
and
pop
add
and
add
mov
lds
mov
ljmp
int3
inc
and
fnstcw
shlb
xor
inc
clc
jo
xorl
pop
out
es
mov
sahf
or
cmpsb
jb
jl
push
cmp
adc
cmp
mov
dec
mov
out
mov
pop
pop
xchg
or
xor
xorl
sbb
ja
ja
loope
and
and
sbb
lods
jae
je
out
dec
test
mov
push
mov
les
repnz
mov
jne
out
push
xchg
jb
or
lcall
insl
hlt
pop
in
jge
adc
sbb
or
fs
inc
mov
push
xchg
add
ficompl
xchg
lea
add
add
mov
inc
mov
daa
lods
cmp
add
data16
xchg
outsb
leave
push
xchg
pop
bound
push
scas
insb
or
daa
jno
jno
jecxz
fmuls
mov
cmpsl
ret
xchg
add
cs
popa
icebp
nop
arpl
rolb
mov
stc
nop
or
movsb
cmp
outsl
sbb
insb
jmp
pushf
outsl
xchg
inc
shll
cmc
pushf
outsl
ljmp
clc
jp
jp
aad
les
adc
adc
sub
inc
sbb
loop
adc
testb
sub
lret
lret
cmp
add
ja
dec
or
js
int
add
in
lret
repnz
or
mov
scas
jp
pop
int3
stos
data16
xchg
sbb
push
lahf
push
ret
mov
sub
or
mov
mov
aad
shlb
jae
in
xchg
and
mov
adcl
xchg
add
jno
mull
icebp
adc
pop
std
sbbb
and
faddl
mov
movb
pop
jb
inc
sub
cs
cmp
mov
xor
sub
pop
test
nop
testl
adc
fstpt
loope
jae
clc
jb
xchg
pusha
jmp
lds
cmpsb
push
mov
push
mov
es
fs
popf
insb
lret
jmp
mov
add
inc
into
pop
cmp
jno
xor
mov
inc
mov
rclb
push
loope
test
jge
and
pop
in
or
xor
jge
testl
cmpsb
mov
stc
test
sarb
mov
lods
cmp
sbb
sahf
pop
xchg
repnz
out
daa
je
gs
adc
pop
mov
insl
std
test
sub
rcll
push
xor
dec
ret
mov
push
jns
jnp
inc
shlb
mov
movsb
xor
push
lds
pusha
out
jl
notb
out
adc
cmp
std
push
xchg
add
ss
lds
iret
jnp
lods
and
sbb
sbb
pop
hlt
rcll
pop
in
ds
aas
pop
test
test
out
mov
xchg
fadds
mov
andl
and
dec
sub
or
mov
jns
jne
out
push
mov
xchg
std
or
jns
ret
dec
fstpt
mov
and
nop
adc
in
sbb
cs
dec
rclb
xor
jae
xchg
movsb
sub
lds
sbb
xor
push
dec
ret
ret
xchg
mov
xor
xor
or
or
or
or
adc
or
push
add
add
inc
or
js
cmp
or
lret
lret
lcall
or
js
adc
dec
in
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
adc
adc
lret
inc
fimuls
push
sub
sub
xchg
adc
hlt
push
cld
adc
rcll
sub
dec
xchg
adc
sbb
mull
icebp
or
dec
das
fidivl
loop
cltd
push
xlat
and
movsb
sub
lds
scas
es
fstpl
inc
and
jns
cmp
mov
nop
jae
insl
hlt
pop
xbegin
faddl
dec
sub
pop
jb
add
pop
int
and
jl
rolb
shlb
inc
and
ja
push
pushf
sti
push
mov
addr16
out
jo
rorl
mov
gs
pop
mov
and
cli
fisttpl
mov
scas
leave
cmp
adc
iret
cmp
xor
pop
sahf
or
cmpsb
inc
aam
shlb
jbe
push
js
xchg
cmc
add
or
mov
les
pop
aad
sub
cmp
popf
adc
push
ret
cmpsb
push
xchg
inc
sub
pop
cmp
pop
test
test
cmp
cmpsl
call
leave
es
dec
mov
push
push
dec
inc
shll
inc
es
fiaddl
mov
sbb
fstpt
popf
in
push
push
lahf
push
pop
push
xor
dec
xchg
dec
lret
lret
int3
inc
and
cltd
clc
or
movsb
sub
dec
frstor
jae
pop
aam
das
mov
xchg
mov
sub
sub
jo
inc
shlb
icebp
nop
arpl
mull
xchg
outsb
movl
test
and
mov
lock
jp
jge
notl
lret
pop
ds
pop
lret
pop
ds
rorb
mov
cmp
inc
adc
sbb
or
divb
in
sbb
add
sbb
xchg
add
sahf
jbe
push
ret
cmpsb
push
mov
imul
insl
xchg
xor
mov
inc
mov
imul
sbb
push
insl
in
sbb
push
cld
fs
add
or
mov
push
or
ja
dec
or
mov
add
fwait
or
jns
lds
iret
sub
dec
ret
cmpsl
callw
call
jmp
repnz
lock
bound
cmp
cmp
int
int3
stos
iretw
in
adcl
test
adc
and
xchg
and
pop
ds
lea
rcll
sti
rep
lcall
sbb
sti
imul
adc
loop
adc
add
sub
lret
loop
adc
or
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
aaa
inc
or
in
lret
mov
mov
adc
aas
scas
lret
cli
js
mov
jb
addr16
pop
sbb
fsubl
xchg
xchg
call
pop
lret
mov
fistpll
pop
jb
jl
mov
inc
mov
rcrb
scas
pop
mov
cmp
ret
ret
jae
xchg
gs
adcb
loope
cmpsb
scas
inc
shll
in
mov
lahf
push
jle
jle
call
icebp
add
nop
daa
fmull
mov
and
shl
push
lahf
push
mov
lds
add
jnp
mov
inc
jecxz
push
in
hlt
jbe
cmpl
mov
dec
mov
shrl
sub
leave
dec
frstor
inc
mov
push
aam
sub
je
out
push
jge
gs
push
lea
xchg
repz
in
lret
mov
cmpsb
xor
aaa
rcrb
fs
stos
and
orb
sti
push
aam
or
in
mov
sahf
or
cmpsb
adc
test
lcall
lahf
punpckhdq
arpl
cmp
ret
repz
xchg
adc
push
mov
push
sahf
or
cmpsb
dec
cmpsl
xor
mov
ljmp
push
add
add
insl
or
js
cmp
or
lret
lret
push
add
add
dec
or
js
hlt
xor
mov
lret
lret
ja
or
mov
icebp
js
xchg
or
sbb
mov
jle
inc
cwtl
sbb
fs
popf
insb
test
je
out
or
jnp
in
adc
pop
cmp
int
and
cmp
cmpsb
push
movsb
sub
and
cltd
adc
icebp
popa
add
push
mov
xchg
repnz
pusha
in
bound
test
cmp
in
pop
mov
mov
mov
dec
mov
jnp
aas
mov
cwtl
jno
je
out
inc
mov
lahf
repnz
pushf
outsl
lret
mov
subl
pop
repnz
inc
mov
stos
xor
xchg
or
in
xchg
cwtl
add
pop
fimuls
das
adc
in
insb
loop
je
dec
into
pop
cmp
xor
call
mov
movb
inc
mov
add
mov
inc
mov
mov
filds
ja
rolb
shlb
fists
mov
sti
sahf
insl
mov
or
or
mov
mov
and
jl
cmp
mull
xchg
outsb
enter
data16
in
jp
jp
pop
enter
jg
aam
sub
jb
in
ss
inc
mov
mov
mov
les
int3
and
icebp
popa
add
jbe
push
pushf
sti
push
xchg
pop
fwait
or
push
lret
mov
notl
addr16
sbb
imul
mov
jle
pop
pop
fisttpll
out
mov
lods
sub
inc
roll
aad
cli
jb
xchg
jbe
orb
adc
mov
sbb
nop
setg
or
cmp
fwait
add
std
or
or
pop
jmp
xorb
sub
imul
and
jne
les
int3
cmp
test
jmp
push
in
sbb
push
shll
out
testb
int
jnp
imul
pop
push
fmuls
fmuls
push
rcrl
stos
sar
std
test
mov
mov
mov
and
jg
rcll
jo
jle
mov
les
or
repz
les
out
test
sarb
cmpsl
aaa
push
mov
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
incl
adc
incl
call
test
add
add
jmp
std
jle
mov
loope
add
add
jmp
dec
into
pop
cmp
or
mov
push
call
aas
mov
push
fisttpl
fisttpll
cmp
clc
imul
jmp
mov
ret
jmp
mov
mov
push
call
dec
int
and
cmp
imul
cmp
ja
dec
or
mov
add
xor
lret
lret
fistps
adc
pop
mov
push
call
int3
popf
mov
nop
testl
push
jmp
xchg
sbb
jno
push
call
std
jno
xorb
lock
and
cmc
gs
aas
ja
dec
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fcoml
add
add
dec
or
js
dec
inc
rorl
in
lret
lret
jnp
or
mov
sub
mov
add
pop
lcall
add
xor
int
xchg
and
or
xchg
popf
pushl
mov
jmp
mov
faddp
sar
inc
adc
mov
popf
mov
lea
cmpsl
aaa
push
mov
repnz
popa
jmp
int3
pop
into
test
std
test
lret
mov
je
clc
repnz
jmp
sub
les
fs
dec
fstpt
bound
pop
mov
mov
mov
andb
sub
jo
mov
jmp
xor
mov
mov
jbe
cmpl
call
gs
xor
cmpl
int
lea
push
xor
mov
movl
nop
dec
mov
jmp
mov
mov
and
or
nop
push
popa
nop
js
pop
sub
add
jmp
pop
fwait
or
push
push
in
repnz
pop
repnz
mov
jmp
mov
shll
iret
stos
pop
rcrb
adcb
addb
pushf
jmp
fists
cmpsl
push
cmc
aad
aad
dec
sti
gs
or
test
jmp
rclb
push
clc
inc
xchg
mov
jmp
xchg
add
cs
enter
data16
pop
cmp
jmp
popa
jmp
fmuls
movsb
push
cld
jmpw
add
mov
mov
sbb
pop
mov
xchg
push
lahf
add
std
or
iret
pop
add
jmp
xor
pop
and
lods
xor
jb
xchg
std
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
stos
leave
xchg
aaa
int3
popf
pop
xlat
inc
and
js
gs
pushf
outsl
fistpl
add
mov
ret
push
lds
in
outsb
cld
fwait
jbe
mov
cltd
clc
or
stc
inc
push
dec
or
fdivr
call
and
lret
and
popa
add
add
inc
or
js
xchg
inc
push
and
lret
lret
orl
or
mov
add
shlb
cmp
push
mov
cltd
clc
or
xlat
cmp
andl
add
add
mov
js
out
push
call
push
inc
and
sub
push
aaa
ret
nop
push
popa
nop
arpl
cmp
cmp
or
or
cld
call
and
lret
and
xor
add
ja
push
or
js
add
lret
lret
pop
pop
or
mov
mov
jmp
ret
jmp
mov
add
inc
adc
sti
lcall
loope
cmpsb
xor
scas
or
pusha
pop
repnz
push
movsl
ret
daa
lret
add
add
and
lret
and
add
add
push
or
js
mov
pop
sub
lret
lret
rcrl
adc
jge
or
push
inc
into
push
push
call
xchg
add
cld
xchg
cmc
add
mov
mov
mov
jns
and
add
sbb
in
incl
add
and
inc
ror
add
jmp
std
push
lahf
push
jne
ja
loope
cs
push
fdivrs
and
jmp
or
sbb
insb
cwtl
add
fcmovnb
inc
xchg
jmp
in
adc
insb
cld
lock
in
or
call
pushl
jmp
or
adc
aad
rclb
mov
mov
jmp
cmpsb
xor
scas
inc
pop
fimuls
add
imul
add
ja
dec
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
push
or
js
das
push
or
lret
push
cmp
adc
in
not
cmp
jmp
mov
adc
cmpl
call
jnp
mov
arpl
jg
jmp
jo
push
and
jmp
lret
mov
lods
hlt
jl
jne
pusha
inc
iret
pop
cmp
and
test
sti
popa
mov
ret
mov
xchg
xchg
sbb
aad
lock
sbb
pop
sbbl
pushf
mov
mov
jmp
inc
int
and
jb
or
in
mov
iretw
jne
cmp
or
mov
mov
mov
andb
sub
jo
mov
jmp
ret
arpl
jmp
lea
mov
and
popl
jmp
scas
lods
lret
inc
out
push
mov
mov
js
and
fiadds
imul
jmp
rolb
add
jmp
sub
pushf
hlt
lea
jmp
dec
inc
and
pop
or
jl
add
notl
pop
subl
mov
jbe
jno
jecxz
cltd
add
fwait
or
jns
and
outsl
pusha
lcall
jns
mov
cmp
jne
js
ljmp
jne
sti
shr
sbb
decl
rclb
cmpsl
push
mov
movsb
inc
nop
adc
add
sti
decl
ljmp
push
roll
shll
arpl
xchg
mov
inc
and
and
dec
sub
ss
mov
sbb
sbb
es
daa
mov
and
jb
cmp
push
xor
adc
add
add
sub
lret
lret
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
xor
sub
add
ja
pop
or
js
stc
fisubl
in
lret
lret
clc
push
or
mov
cltd
gs
sbb
adcb
loopne
mov
das
pushf
or
pop
mov
lcall
push
movsb
pop
lret
pop
ds
dec
fisttpl
fnstsw
jnp
jno
jecxz
pop
push
xor
es
add
sub
mov
cmpsl
and
in
xchg
xchg
popa
cltd
xor
sub
sub
add
or
or
or
lret
add
add
add
add
add
or
lret
lret
sub
insb
add
add
pop
or
js
mov
lret
lret
pop
push
or
mov
nop
js
cmpsb
xor
scas
dec
push
mov
pop
cmp
pop
iret
dec
fnstcw
push
xor
sub
push
lahf
push
std
jbe
cmpl
lds
iret
sub
sub
adc
sub
xor
inc
add
add
pop
or
js
pop
xchg
adc
lret
lret
gs
or
mov
loopne
mov
xchg
dec
fidivrs
or
pop
pop
fisttpl
fnstsw
pop
cmp
jg
arpl
xchg
gs
and
movsl
setle
cmpsb
pinsrw
push
jecxz
mov
xchg
aas
jmp
xor
mov
pop
mov
jle
dec
cli
notl
push
enter
and
xchg
pop
bound
cltd
push
xor
inc
outsb
in
bound
inc
and
lcall
mov
out
mov
push
arpl
cmc
and
mov
xchg
arpl
scas
iret
dec
fstpt
push
xor
sub
scas
dec
clc
ja
xorb
notl
out
cltd
push
repnz
adc
fisttpll
movsb
push
jecxz
mov
dec
mov
mov
repz
lret
lret
imul
insl
fiaddl
inc
and
jbe
out
adc
pop
mov
lea
stos
cmp
imul
ret
sbb
nop
push
popa
nop
pop
adc
xchg
jb
inc
fistpl
test
hlt
xchg
outsb
xchg
sbb
outsb
jg
and
xchg
add
addr16
adc
insb
or
cmc
jmp
notb
jecxz
jne
jne
mov
adcl
out
mov
mov
inc
mov
mov
cld
out
stc
cwtl
imul
lods
cmp
movsb
cmp
add
and
mov
mov
hlt
jne
jo
loop
mull
icebp
dec
and
and
movsl
lods
lret
inc
movsb
xor
out
jne
mov
xchg
or
fimuls
popa
out
cli
popf
insb
movsl
and
icebp
sub
testb
in
lret
lret
sub
add
ja
inc
or
js
mov
lret
lret
dec
push
or
mov
call
dec
mov
cmp
xor
inc
inc
mov
xchg
rolb
mov
mov
mov
repnz
xchg
adcl
test
sub
pop
lret
scas
pop
arpl
jge
divl
cli
jne
mov
arpl
addr16
dec
imulb
sahf
insl
ret
and
add
lcall
sbb
cmp
clc
push
push
shlb
sbb
dec
fadds
mov
adcl
dec
mov
lds
andl
and
push
mov
jp
pop
stos
das
mov
sub
enter
sub
lea
adc
or
add
in
std
test
rorb
dec
stos
ja
insl
hlt
pop
loope
cmp
repz
cmc
push
mov
shlb
pusha
pop
repnz
imul
or
mov
mov
jbe
je
out
pop
hlt
imul
insl
ret
shll
shll
pop
bound
and
jge
divl
dec
rolb
shlb
iret
push
lds
xor
add
add
in
lret
xor
or
mov
dec
movsl
fs
push
xor
dec
fistpll
xor
dec
push
xlat
inc
and
aaa
lcall
push
les
std
test
jne
addr16
or
popa
icebp
nop
arpl
leave
and
notl
int
fstpt
xchg
icebp
add
lret
dec
fstpt
fwait
decb
movsl
push
xchg
fcomps
scas
pop
cld
rcll
push
out
adc
jbe
je
out
pop
add
xor
shll
and
pop
int3
stos
rorw
aas
pop
les
int3
movntq
test
int3
inc
and
jne
out
add
cmp
gs
mov
inc
mov
idivb
ljmp
adc
add
ja
pop
or
js
cltd
ja
sub
lret
lret
in
or
mov
jge
das
lods
cmp
test
or
lds
mov
xchg
mov
mov
push
xor
daa
add
aas
mov
dec
mov
sbb
or
mov
js
jp
movsb
cmp
or
dec
ret
orb
sbb
dec
xor
das
dec
mov
ret
ds
jns
mov
pop
into
pop
cmp
addr16
jecxz
push
in
cmpsl
aaa
cmpsl
ret
adc
adc
sub
jne
out
pop
test
shll
ret
cmpsb
push
nop
sub
pop
pusha
clc
outsb
or
adc
aad
adc
lds
iret
dec
addl
repnz
daa
movsb
cmp
inc
xlat
push
lds
xchg
pop
fdivl
in
dec
int
and
add
xchg
testb
pop
push
pushf
xor
push
mov
scas
leave
cmp
pusha
call
iret
inc
aam
dec
mov
sub
jmp
mov
and
pop
leave
test
push
dec
sub
rclb
push
loope
out
adc
inc
rorl
mov
aam
dec
out
adcl
test
sub
push
mov
inc
and
cmp
sti
imul
adc
jl
hlt
push
cld
jnp
stos
cmp
sub
popl
xchg
repnz
sti
jns
mov
xor
arpl
jnp
in
adc
cmpsl
jb
lods
cmp
push
lds
jo
jb
jl
jne
mov
into
cmp
test
push
mov
outsl
or
shll
hlt
push
xchg
add
ss
lahf
insb
std
insl
hlt
pop
lods
dec
fdivl
in
push
xchg
add
adc
movsb
cmp
add
decl
push
mov
xchg
adc
mov
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
xor
sbbl
test
cmpsl
ret
push
int3
inc
and
push
cmp
dec
mov
icebp
aas
mov
cmp
and
mov
in
ljmp
lds
mov
mov
enter
adc
jo
jae
xchg
cmpsb
xor
scas
dec
in
imul
insl
cwtl
and
mov
or
or
xor
lret
loop
adc
add
add
add
add
add
add
add
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
add
pop
loop
adc
or
lret
lret
or
adc
lret
sti
je
lea
and
mov
xchg
lock
jecxz
leave
pop
enter
leave
pop
iret
stos
pop
lahf
push
pushf
sti
push
mov
pop
mov
xchg
add
cmp
push
lds
mov
sub
pop
aas
lret
cmpsb
xor
scas
inc
ja
jl
negb
aaa
scas
aas
pop
test
jecxz
cltd
sbb
aas
mov
jmp
lahf
clc
jg
mov
xor
cmp
loopne
xor
xor
add
add
add
add
lret
add
outsb
add
add
bound
adc
push
jnp
pop
in
lret
lret
and
add
ja
pusha
or
js
aam
xlat
in
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
xor
lret
or
stos
sub
pop
fdivl
in
ja
xchg
testb
xor
fcoms
mov
adc
jo
sub
lds
daa
test
pop
test
test
lahf
cli
or
cwtl
sbb
pop
iret
stos
pop
rcll
mov
jle
and
sbb
cmp
mov
das
mov
scas
aas
scas
lret
scas
cmp
jp
jp
cltd
add
mov
dec
mov
aad
into
xchg
or
enter
dec
stos
xor
int
mov
dec
addb
aaa
ret
cmp
pusha
notb
or
or
xchg
inc
pop
fdivl
in
pop
lcall
pop
cmp
cmp
inc
daa
shlb
push
fisttpll
out
hlt
adcl
test
scas
aas
pop
test
push
movsb
jo
dec
fdivrl
jno
jecxz
and
or
dec
fimuls
push
cs
sub
adc
mov
add
cltd
add
adcl
mov
mov
xchg
adc
imulb
cltd
push
pop
bnd
scas
cmp
mov
inc
rclb
sub
clc
cltd
sbb
or
in
ljmp
test
xchg
repnz
in
outsl
lcall
jl
testb
xchg
enter
inc
movsb
loop
stc
cwtl
imul
test
xor
int
call
push
aam
call
mov
mov
and
xor
int
repz
rclb
xchg
mov
inc
fisttpl
cmp
enter
les
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
ja
cmp
adc
mov
lret
lret
pop
bound
adc
xor
leave
arpl
xchg
gs
in
bound
adc
inc
and
mov
mov
mov
inc
fdivl
in
aaa
test
pop
test
add
std
jle
mov
mov
in
cmp
ja
ljmp
push
add
add
jb
adc
ds
in
lret
lret
push
add
add
insl
or
js
std
xor
xchg
in
lret
lret
xchg
insl
or
mov
testb
xor
lret
lret
cmp
add
ja
push
cmp
jmp
in
lret
out
or
mov
xchg
jp
mov
sti
jl
jne
push
jl
outsb
or
or
leave
aas
bnd
mov
mov
fstps
testb
sbb
dec
lret
pop
ds
mov
cmpsl
push
sub
sub
or
add
add
add
lret
or
lret
or
or
lret
add
lret
lret
sub
sub
add
ja
push
jo
push
in
lret
lret
jle
or
mov
lds
inc
int3
inc
and
stos
into
cmp
test
jnp
jns
jmp
pop
into
pop
cmp
jg
or
push
ret
ret
mov
dec
mov
scas
pop
std
inc
fistpl
rorb
mov
adc
mov
jbe
loopne
add
mov
movsl
imul
sbb
ds
movsl
int3
aas
aad
inc
aad
dec
movsl
cld
adcl
test
add
test
pushf
sbb
stos
cmp
inc
pop
rolb
shlb
adc
rcrb
test
jl
testb
cwtl
xchg
sbb
and
or
lds
iret
jnp
out
adc
inc
sbb
sub
mov
xchg
xchg
add
cmp
xchg
push
adcl
mov
xchg
push
pushf
sti
push
hlt
cli
lock
bound
sarb
aaa
scas
aas
pop
test
mov
inc
and
fidivrs
mov
xor
int
fnstenv
add
push
in
lock
bound
mov
sbb
push
inc
into
pop
cmp
and
cs
sub
dec
mov
fcos
ja
xorb
pop
iret
stos
pop
mov
mov
jno
xchg
cmc
add
insl
std
insl
hlt
pop
mov
inc
and
ja
inc
xlat
mov
pop
into
pop
cmp
jg
cmpsl
aaa
push
mov
or
push
inc
roll
shll
outsb
cld
fwait
jbe
mov
loop
cmpsb
xor
scas
dec
cmp
cmp
inc
xor
pop
rcrb
data16
movsb
ret
ds
or
mov
push
or
ja
orb
mov
add
ja
dec
or
mov
push
or
mov
in
jmp
lahf
add
orl
decb
mov
cld
fwait
jbe
jnp
insb
or
out
ficoms
pop
scas
fists
pop
mov
movsb
inc
sbb
or
mov
sub
out
cltd
push
jl
pop
push
jecxz
push
in
int3
inc
xlat
mov
call
jae
push
lret
pop
ds
les
pop
in
loope
adc
or
or
xor
lret
lret
nop
push
enter
popa
jbe
jbe
loopne
inc
rolb
sarb
rolb
shlb
and
mov
in
sbb
pop
pushf
xor
inc
imull
test
loopne
out
mov
push
roll
aad
or
cmp
or
or
cld
call
and
lret
and
adc
add
ja
insl
or
js
pop
mov
ret
in
lret
lret
add
adc
mov
jp
outsb
or
xor
pop
cmp
ds
hlt
xchg
outsb
xchg
ja
loope
movb
inc
mov
adcl
jnp
in
push
cmp
pop
xlat
inc
and
sub
mov
xor
xchg
pushf
sti
push
in
lds
iret
push
adcl
test
rolb
rclb
inc
into
pop
cmp
jno
mov
scas
inc
shll
push
notl
test
and
mov
lods
and
add
mov
pop
int3
stos
movsw
dec
aam
sub
stos
into
cmp
call
test
push
cltd
mov
mov
in
jge
idivl
add
mov
xchg
jle
mov
js
insb
push
fisttpl
frstor
xchg
inc
mov
fistl
div
jle
mov
stc
or
xor
daa
cld
jnp
mov
jne
imul
jne
out
cmp
jnp
mov
cmp
ret
mov
jnp
in
inc
sbb
and
push
mov
lcall
xchg
gs
cmp
sbb
popa
jle
jp
in
das
xor
cmp
cmp
out
adc
push
mov
stos
pushf
add
cmp
das
mov
mov
dec
mov
pushf
outsl
mov
fiaddl
test
enter
cmp
add
orl
cli
or
push
fimull
fidivrl
dec
ret
ret
mov
gs
addr16
inc
aad
dec
ljmp
lods
daa
mov
and
mov
shlb
js
ljmp
pop
mov
pop
xor
cld
call
and
lret
and
popa
add
add
arpl
adc
and
pop
push
in
lret
lret
sub
test
or
mov
add
dec
fidivrs
cmp
add
jb
in
insb
stc
imul
notl
mov
and
xchg
cmp
sbb
popa
setbe
sahf
jbe
lods
cmp
adc
push
add
outsl
or
mov
mov
jmp
sbb
mov
cltd
clc
or
in
cli
popf
insb
mov
and
dec
in
lock
bound
pandn
sub
xor
sub
adc
sub
xor
inc
add
add
imul
cmpsl
sbb
in
lret
lret
mov
adc
movsl
push
push
adcl
repz
cmc
add
cmpsl
aaa
push
mov
pop
repnz
idivb
je
jbe
insl
std
test
test
cwtl
decl
fsubrp
imul
insl
test
imul
mov
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
cmp
aaa
movsb
cmp
add
sarl
mov
and
adc
xchg
cmp
adc
push
lret
xchg
addr16
inc
and
adc
rorl
xchg
outsl
ja
ljmp
sub
add
ja
jb
adc
or
and
in
lret
lret
movsb
js
adc
mov
push
adc
add
adc
push
adc
add
add
orl
js
add
or
lret
push
add
add
orl
js
cmp
xor
lret
push
orl
mov
shll
in
bound
cli
popf
insb
jmp
push
xchg
repz
lret
mov
push
jno
push
insb
mov
out
mov
stos
int
jmp
leave
pop
cmp
cmp
rclb
sub
mov
inc
mov
add
je
ja
xorb
cli
push
lods
cmp
lock
and
imul
insl
test
out
dec
pop
leave
pop
cmp
jg
cmp
or
repnz
pop
repnz
pop
mov
sahf
cs
adc
sub
sub
add
pop
lds
iret
and
jg
mov
xchg
adc
movsb
insl
cli
jg
mov
aam
lret
mov
sahf
or
cmpsb
inc
xor
xlat
push
mov
cmp
pop
in
notl
loop
je
iret
inc
fidivrl
push
xor
sub
fs
popf
insb
lahf
adc
aam
leave
test
lea
gs
aas
push
fstpt
ja
xorb
mov
jle
and
xchg
add
mov
sub
ljmp
stc
scas
in
out
jo
and
repnz
sbb
in
jnp
mov
push
test
push
neg
inc
fidivrl
mov
or
mov
rolb
jecxz
movsl
xor
lods
cmp
and
xchg
add
popw
lcall
out
jno
mov
fucom
jae
xchg
jb
imul
add
xor
pop
repnz
fs
test
pop
test
ret
dec
fdivrl
cmp
mov
lret
add
add
and
lret
and
add
add
insl
or
js
mov
lret
lret
jae
or
mov
fsubrs
push
test
push
mov
out
adc
pop
mov
xchg
call
aaa
xor
sbbl
mov
popl
ficompl
test
jge
outsb
sbb
sbb
data16
jno
jecxz
lods
xor
enter
dec
iret
push
ret
cmpsb
push
lcall
adc
sbb
inc
mov
mov
dec
adcb
and
sub
push
xor
sub
pop
enter
adc
or
es
cs
scas
lret
outsl
out
adc
dec
fstl
cmpsl
push
xchg
dec
fidivrs
fdivrl
lcall
pop
cmp
popa
ja
jne
out
pop
xor
mov
pop
push
shlb
add
dec
dec
pop
fwait
sbb
xor
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
jne
adc
stc
xlat
fs
in
lret
lret
fnsave
adc
jo
add
sbb
jp
in
or
jbe
cmpl
jle
mov
mov
xor
test
shl
imul
push
test
push
cli
jne
xchg
cmc
add
mov
xchg
and
cmpsb
sub
fs
popf
insb
lret
fmull
mov
cmp
add
stos
sbb
jo
loop
mov
mov
jg
mov
cmpsb
xor
jno
xorb
inc
mov
sbbl
aam
ret
mov
cmp
dec
aam
sub
ja
loope
mov
call
lods
inc
mov
cwtl
decl
loop
movsb
outsb
stc
imul
stos
int
pushl
mov
inc
mov
mov
push
add
testb
in
lret
loop
adc
add
add
add
add
add
add
add
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
add
pop
loop
adc
add
lret
lret
sarb
lret
repz
lahf
push
fiaddl
dec
lret
push
int
and
push
inc
lret
pop
ds
xlat
push
lret
mov
mov
or
loop
cli
popf
insb
xchg
into
dec
fistpll
push
popa
nop
or
nop
sbb
xor
and
mov
shlb
lcall
push
mov
pushf
outsl
scas
orb
sub
lds
and
dec
fimuls
push
js
jg
jmp
std
or
lcall
pop
lret
scas
pop
in
xchg
pop
xchg
repnz
pusha
mov
push
mov
call
xor
or
out
out
mov
mov
movsb
ret
testl
jecxz
jns
outsb
or
sbb
out
adc
ljmp
or
hlt
jle
mov
pop
test
cmpsb
cs
mov
dec
mov
lods
pop
sti
cld
jno
xorb
and
cmp
out
adc
pop
sub
outsl
or
xchg
add
aas
scas
lret
ja
jbe
loopne
jb
je
out
pop
mov
xchg
dec
xlat
inc
and
sbb
or
dec
rolb
sarb
stc
pusha
notb
sbb
or
xor
xlat
sbb
pusha
notb
jne
out
add
dec
scas
iret
pop
and
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
lock
cmpl
xchg
add
inc
in
outsl
lcall
push
fs
test
jae
adc
pop
or
ja
test
adc
add
imul
lret
or
or
or
adc
or
and
add
ja
jae
adc
jmp
lret
lret
outsb
add
add
js
adc
push
cmp
pop
in
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
sbb
lret
sahf
sbb
cmp
outsb
jmp
push
in
or
cld
adc
xor
adc
fwait
or
pop
bnd
je
and
dec
fnstcw
or
xor
mov
pop
repz
jae
xchg
roll
dec
in
loope
adc
push
mulb
nop
arpl
inc
fmuls
fcomps
aaa
lods
and
push
jle
je
out
add
loope
adc
or
mov
js
mov
addr16
push
in
and
sbb
add
adc
leave
dec
fidivrs
dec
frstor
cmp
jno
imul
push
int3
dec
fistpll
insl
hlt
pop
testb
pop
jp
jne
loope
adc
add
or
or
es
xchg
cmc
add
pop
aam
sub
push
jns
das
mov
subl
lahf
sub
xchg
add
sahf
aaa
in
loope
jae
xchg
add
push
xor
jns
dec
ret
rep
and
ja
inc
aad
dec
scas
rorb
mov
and
sti
sub
and
xor
mov
jp
outsb
or
xor
jo
xorl
jl
push
xlat
inc
and
cmp
jno
xorb
test
mov
stos
into
cmp
push
shll
test
push
cld
sub
dec
icebp
js
mov
ret
push
ret
cmpsb
push
hlt
lahf
adc
jne
mov
jl
addr16
pop
stc
cwtl
cwtl
mov
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
nop
add
iret
pop
cmp
jle
sbb
adc
aaa
cmpsl
aaa
push
mov
sub
leave
test
out
lock
insl
int3
xor
mov
and
lock
add
push
popf
or
mov
aas
mov
lods
push
int3
ja
jae
adc
mov
adc
pop
fcompl
dec
sub
pop
das
mov
cmp
mov
mov
and
fs
adc
adc
add
xor
lret
lret
cld
mov
fmuls
fsubrs
mov
dec
mov
fwait
jbe
lds
stos
data16
adcl
mov
mov
lds
scas
pop
fucomp
jae
xchg
cmc
jbe
cmpl
cmp
gs
pushf
outsl
mov
cmp
push
push
arpl
cmc
and
lahf
punpckhdq
lock
aaa
ret
push
lds
lods
es
cs
dec
rclb
and
jbe
cmpl
repz
cmc
push
mov
scas
lret
inc
iret
pop
cmp
adc
mov
clc
push
lahf
push
loope
loopne
jb
sbb
add
and
mov
jae
jnp
in
pop
leave
pop
int3
stos
iretw
inc
roll
shll
out
adc
dec
adc
out
je
lea
ret
ret
cmpsb
xor
scas
inc
jge
jno
jecxz
inc
fistpl
fwait
or
push
ficompl
stos
pop
mov
fdivrs
ss
mov
mov
bnd
cmpl
jae
xchg
out
imul
insl
cwtl
ds
dec
frstor
lcall
and
mov
or
lds
lea
jno
xorb
jmp
inc
aam
dec
dec
pop
iret
stos
pop
into
lds
mov
cmp
adc
dec
fimull
fidivrl
dec
fnstcw
sub
pop
les
mov
in
in
sbb
push
mov
dec
mov
shlb
out
stos
cmp
inc
in
cli
popf
insb
test
fists
inc
and
das
leave
dec
fdivrl
sub
dec
dec
lret
lret
int3
inc
and
sbb
imul
xor
scas
dec
rcrl
test
mov
push
cmp
in
sbb
adc
dec
fnstcw
pop
cmp
add
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
jmp
cld
fwait
jbe
imul
mov
fwait
decb
or
sbb
das
fiadds
mov
lret
lret
xor
int
mov
xchg
lock
inc
leave
pop
enter
fs
push
cld
dec
dec
fmuls
fdivs
lock
jae
jp
in
inc
imul
hlt
pop
mov
icebp
popa
add
push
inc
fisttpll
out
jmp
nop
cmpsb
xor
scas
inc
out
jbe
cmpl
sub
scas
aaa
cmpsl
ret
jl
jne
dec
cmp
cwtl
sbb
fs
popf
insb
mov
movb
cmp
in
jle
mov
ret
inc
iret
pop
cmp
and
rolb
shlb
fists
lods
pop
mov
mov
ds
cmpsl
sub
test
outsb
loope
adc
inc
popf
or
roll
mov
jmp
in
bound
push
lds
scas
aas
pop
test
or
scas
scas
cmp
mov
add
ror
les
out
mov
fldl
dec
movsb
sbbb
jmp
mov
daa
mov
add
iret
dec
ret
mov
je
mov
les
mov
mov
repz
ss
mov
xorb
jno
jecxz
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
dec
ret
ret
std
insl
hlt
pop
out
mov
inc
int
and
es
cwtl
push
imul
mull
icebp
cmp
cmp
push
icebp
add
and
cmp
pusha
and
iret
pop
into
test
xor
adc
mulb
pop
loopne
call
xchg
add
jo
int
and
aas
mov
shl
jle
mov
mov
pop
jb
inc
sbb
mov
cltd
clc
or
dec
leave
pop
cmp
sub
fdivl
in
rcll
mov
push
xor
cmp
fmulp
inc
shll
pop
ds
pop
rolb
shlb
lahf
push
test
push
in
adc
cmp
cmp
jo
xorl
repnz
and
and
xchg
add
lahf
punpckhdq
sti
push
cmpsl
dec
jecxz
push
in
ja
jno
jecxz
or
punpckhdq
imul
mov
inc
mov
push
into
pop
cmp
ds
xchg
fs
mov
inc
mov
push
mov
gs
pop
sub
aas
mov
addb
repnz
adc
fimuls
xor
jle
mov
or
clc
lahf
push
adc
or
enter
sub
xchg
add
leave
inc
aad
dec
ljmp
jno
push
fimull
fidivrl
jae
xchg
xchg
push
xchg
repz
cmpsl
cmp
rolb
mov
call
fildll
cmpsb
shll
mov
fdivr
call
and
lret
and
popa
add
add
jle
adc
jnp,pn
and
lret
lret
fcomps
adc
mov
adc
add
add
add
jmp
int3
popf
mov
jmp
inc
fstpt
movsl
jecxz
aaa
inc
add
sti
pushl
mov
add
add
push
jne
popf
lahf
add
arpl
add
addr16
mov
add
scas
lods
sti
ljmp
push
std
adc
cli
sar
rorb
or
add
add
in
add
pop
iret
stos
pop
loopne
mov
sub
jmp
call
jmp
xor
je
mov
outsb
sarl
mov
mov
sbb
add
cmp
and
inc
decl
cltd
push
cmpb
call
jmp
cmpsl
and
aas
lods
pusha
jmp
and
xor
xchg
loop
fisttpll
int
fdivrs
add
add
jmp
mov
int3
add
pushl
mov
jmp
push
fld
mov
mov
andb
sub
jmp
call
jmp
imul
jo
jb
leave
popa
jmp
int3
popf
in
icebp
nop
arpl
ss
mov
add
orb
decl
stc
test
add
movsb
dec
popf
jns
pop
mov
add
inc
and
xor
cltd
ja
nop
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
fsubrl
add
add
popf
or
js
sbb
in
lret
cmp
add
add
adc
sar
inc
adc
pop
xchg
add
adc
in
sbb
sbb
jl
xor
xor
or
add
add
add
lret
or
lret
or
or
lret
add
lret
lret
xor
sub
add
ja
mov
rclb
add
lret
pop
nop
or
mov
adcl
xor
incl
add
add
inc
and
das
mov
ljmp
lods
push
popa
mov
jmp
scas
pop
jmp
inc
dec
add
sti
decl
mov
lea
outsb
cld
fwait
jbe
mov
lea
jmp
xor
cltd
add
add
and
pop
jmp
push
lds
iret
jl
and
stos
lods
lret
inc
icebp
add
push
pop
xor
mov
add
cmp
je
jmp
push
call
xchg
add
test
test
jge
outsb
fcoms
pop
mov
shll
bound
dec
sub
pop
xor
sub
pop
add
sti
incl
adcb
orb
imul
pop
inc
add
sti
push
rcrl
pop
popf
or
add
sub
lock
cmpsb
push
call
dec
int3
inc
and
dec
adc
adc
inc
and
cmp
jmp
xchg
jmp
mov
enter
icebp
add
arpl
jns
jmp
orb
clc
or
lcall
jmp
popf
jmp
int3
popf
out
imul
insl
cwtl
mov
adc
sub
add
dec
lret
pop
ds
adc
sub
jmp
pushl
jmp
movsb
sub
inc
xlat
mov
rcrl
fs
add
and
cmp
jne
addl
mov
jmp
pop
je
jmp
data16
push
cld
dec
jg
bound
mov
icebp
jge
es
test
mov
jmp
add
or
xor
bnd
popa
mov
ret
mov
cltd
and
int
cltd
roll
add
jne
addl
jmp
int3
pop
leave
test
lock
pop
into
pop
cmp
jno
mov
pushf
push
mov
jmp
imul
push
enter
and
pop
cmp
and
adc
mov
mov
andb
sub
jo
jmp
pop
sub
add
pop
out
out
mov
xor
je
lea
shll
jecxz
dec
pop
jmp
mov
cmpsl
ret
divl
mov
dec
iret
pop
cmp
xor
pop
test
mov
jmp
mov
les
dec
pop
jmp
fwait
sbb
aad
repz
notl
sub
ja
ljmp
inc
add
add
xchg
or
js
sub
lret
lret
push
fistps
scas
pop
test
pop
enter
mov
push
scas
jns
test
jmp
jmp
xchg
and
dec
push
xor
imul
pop
dec
xor
xor
or
add
add
add
lret
or
lret
or
or
lret
add
lret
lret
xor
insb
add
add
scas
or
js
mov
push
in
lret
lret
xor
add
ja
mov
adc
push
lret
lret
pop
mov
adc
ljmp
ror
popl
lea
jmp
pop
stc
mov
jmp
push
cmp
mov
add
mov
lahf
mov
mov
and
push
loope
add
add
sti
pushl
test
imul
dec
arpl
push
cld
push
push
lret
pop
ds
fld
add
rolb
add
jmp
push
push
xor
imul
jg
popa
icebp
nop
arpl
pop
push
sub
pop
ret
jmp
mov
sub
add
in
sti
jmp
mov
mov
mov
rolb
rclb
xchg
push
call
add
inc
push
rolb
sarb
mov
leave
addl
testl
pushf
jmp
adc
aad
pop
xchg
sbb
push
ret
cmpsb
push
test
mov
xchg
arpl
pop
dec
push
call
xchg
push
test
push
imul
popa
icebp
nop
arpl
inc
and
jmp
inc
frstor
add
add
jmp
jmp
and
cmp
stos
cmp
dec
in
imul
insl
cwtl
dec
xor
sarb
xchg
popf
jmp
mov
jmp
lret
mov
xlat
mov
fwait
jno
aam
mov
inc
decl
push
jmp
jmp
rorl
repz
mov
and
jo
adc
pusha
mov
mov
mov
jmp
sbb
add
cmp
add
push
push
ret
ret
push
mov
mov
jmp
test
hlt
pop
xchg
add
xor
jg
jmp
loope
sub
decl
add
sub
ljmp
mov
inc
mov
jns
ja
loope
iret
inc
cmpsl
arpl
popa
jmp
xchg
jo
jmp
mov
xchg
adc
and
ds
data16
xchg
outsb
jmp
inc
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
jbe
imul
adc
shlb
xor
inc
mov
xchg
or
mov
lods
or
mov
inc
mov
jmp
jmp
iret
xchg
mov
cmpl
fdivrs
cmp
pop
inc
push
xor
mov
fcomi
mov
ret
mov
cmc
add
jmp
idivl
test
lds
iret
sub
mov
daa
scas
aas
pop
test
mov
mov
jmp
lcall
add
movsl
xor
or
cmp
jmp
shr
jmp
arpl
jl
notb
rolb
shlb
cmp
add
test
inc
cmp
jne
jmp
xor
sbb
mov
inc
mov
lret
aad
jmp
sbb
imul
cmc
add
daa
mov
inc
mov
divl
inc
jnp
gs
adc
testb
xor
lret
lret
cmp
add
ja
mov
scas
xchg
mov
in
lret
lret
lock
or
mov
add
add
dec
add
add
lods
cmp
ljmp
stc
les
push
jmp
push
iret
pop
cmp
xor
sarb
sbb
fs
jmp
add
add
add
jo
xorl
jp
lea
out
cmp
add
cmpl
je
jmp
insl
out
jl
negb
xor
movl
dec
frstor
js
add
inc
adc
inc
cmc
ja
xorb
push
lds
or
or
daa
xchg
pop
mov
jmp
in
cld
fwait
jbe
add
sbb
fists
mov
outsl
jne
call
test
jmp
lahf
adc
es
cs
jge
add
push
mov
mov
mov
adc
push
adc
and
add
and
dec
sub
jo
push
shll
xchg
fs
mov
js
cmp
jmp
movsb
and
mov
jmp
cmp
jmp
and
sbb
mov
xchg
and
xchg
add
xor
int3
add
or
sti
jmp
imul
jmp
jle
jp
in
das
add
cltd
pop
xchg
repnz
daa
push
andb
xor
mov
shr
or
or
add
adc
ret
jmp
scas
aaa
cmpsl
ret
addb
icebp
add
rclb
mov
push
imul
jmp
adc
jae
imul
ret
and
jmp
and
fwait
add
add
push
lret
mov
cmp
mov
mov
inc
ret
loop
adc
or
xor
lret
loop
adc
add
add
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
cbtw
or
in
lret
jbe
jmp
mov
rcl
pop
iret
stos
pop
xchg
xchg
sbb
dec
pop
sub
add
jmp
sbb
jg
mov
cld
jb
xchg
das
push
mov
pop
lds
mov
add
sti
je
lea
push
xor
or
mov
mov
xchg
pushf
jmp
roll
mov
jmp
mov
jg
cmp
inc
sub
je
mov
jmp
or
or
sub
pusha
jmp
rolb
mov
push
xor
jbe
and
adcb
addb
mov
jmp
aam
inc
or
xor
mov
inc
aad
dec
cmpsl
std
fs
popf
insb
test
outsb
dec
cmp
popf
pushl
jmp
pop
ret
ret
jle
mov
xchg
xchg
mov
jmp
dec
leave
pop
cmp
and
enter
mov
lret
or
sbb
jmp
fmulp
dec
ret
andl
dec
ret
mov
ret
mov
ret
mov
mov
ret
cmpsb
xor
scas
dec
pop
rolb
shlb
and
pop
test
fimuls
jmp
je
imul
mov
das
mov
outsl
lcall
stos
mov
andb
sub
jo
mov
and
jmp
mov
mov
and
add
add
js
test
mov
mov
movzbl
jmp
repnz
popf
insb
fucomp
jns
mov
out
loopne
jb
jns
bound
das
add
jmp
fisttps
mov
cltd
push
pop
mov
or
pop
ret
sub
adc
or
or
xor
lret
fcoml
add
ja
orl
js
daa
mov
sbb
lret
lret
aas
xchg
or
mov
cmc
fisttpl
mov
fdivrs
imul
jmp
or
popl
lea
jmp
out
cmc
pushf
outsl
test
pop
cmp
sub
mov
shr
add
add
addr16
sub
ror
dec
fnstcw
or
dec
mov
cmpl
je
cmpl
jmp
insl
in
sbb
push
arpl
xchg
cmpl
push
jle
gs
push
test
mov
jmp
mov
jmp
sahf
adc
daa
mov
and
push
jecxz
push
in
push
cmp
cmp
je
popa
mov
jmp
pushf
or
jne
call
test
jmp
dec
fdivrs
add
and
jecxz
push
in
sub
aaa
sub
adc
push
adc
cwtl
rolb
xchg
adc
aas
scas
cmp
mov
test
and
mov
sbb
addb
add
scas
add
ret
pop
iret
stos
pop
movsb
sbb
cmpsb
and
xor
xor
add
add
add
add
lret
add
lcall
or
js
cwtl
mov
or
lret
push
add
add
cwtl
or
js
ds
pushl
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
pop
test
or
push
call
jmp
cmp
push
fucompp
mov
call
mov
add
lret
push
shll
jmp
into
lret
pop
lret
scas
pop
fdivrl
inc
ret
jmp
or
ja
mov
jmp
dec
rolb
rclb
or
in
js
ljmp
dec
pop
repz
pop
sub
add
xchg
popf
pushl
jmp
scas
cs
sbb
pop
into
daa
jmp
test
mov
jmp
cmp
out
imul
iret
pop
cmp
aas
scas
and
add
pusha
jmp
mov
jmp
idivl
test
mov
dec
mov
loope
jecxz
js
adc
out
call
out
add
jne
jmp
push
in
dec
sbb
push
fimuls
and
inc
mov
out
iret
cmp
sbb
and
ret
jmp
mov
mov
sbb
arpl
sar
inc
adc
in
jge
je
sub
les
pop
dec
jne
jmp
aad
fstpt
mov
jmp
push
xchg
add
sub
enter
popa
roll
mov
popa
sbb
sub
jo
mov
and
cmp
jmp
cld
outsl
lcall
jecxz
jne
movl
add
add
cmpl
jl
outsl
pop
popf
or
jecxz
jmp
dec
jmp
mov
test
jmp
sbb
fs
mov
pop
iret
stos
pop
loopne
xor
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
popa
jmp
pusha
loop
pop
loop
icebp
jb
xchg
jecxz
icebp
nop
arpl
xorw
pop
cmp
jmp
roll
dec
mov
lahf
punpckhdq
test
lods
push
ja
ljmp
push
add
add
stos
or
js
hlt
xor
sub
lret
lret
push
add
add
test
xor
xchg
in
lret
lret
pop
cltd
or
mov
or
test
add
push
jmp
dec
int
and
cmp
xor
mov
lcall
add
jmp
pop
push
jmp
orb
stc
or
pop
fisttpl
jmp
lret
fwait
decb
fs
mov
mov
js
cmp
adc
mov
push
mov
xor
cmp
jmp
pop
lcall
add
or
cltd
setg
or
sarl
outsb
cld
fwait
jbe
repz
shr
add
sub
xchg
js
pop
jmp
js
ret
jmp
insb
clc
outsb
or
dec
aad
mov
out
fwait
or
pop
daa
mov
inc
mov
jmp
clc
pusha
notb
dec
sub
xor
dec
ret
rcl
mov
jmp
fldl
mov
lds
sbb
aas
rcrl
dec
mov
add
inc
mov
test
outsb
cld
fwait
jbe
add
sti
xchg
test
push
adc
enter
cmc
add
mov
stc
jb
fs
or
mov
sub
sti
cmp
je
push
jmp
jae
sbb
mov
pop
enter
loopne
clc
lahf
push
and
mov
xchg
repz
ljmp
sti
jmp
sub
push
fstpt
rcll
adc
test
test
jmp
ficompl
call
jmp
lea
jmp
jno
sbb
pop
bound
push
adc
jg
ja
cltd
or
mov
xchg
or
ja
mov
mov
cltd
sbb
mov
cli
inc
inc
cld
adc
add
jmp
add
sbb
push
rcll
jo
mov
jmp
in
jp
jp
jno
jnp
in
pop
and
jmp
push
in
sub
dec
push
push
pop
lea
call
add
mov
jmp
mov
jmp
dec
xlat
inc
and
cmp
addr16
mov
xchg
cmpsb
mov
cmp
dec
cld
jmp
mov
sub
jmp
call
stc
seto
popa
nop
pop
dec
into
pop
cmp
pop
push
loop
test
je
xor
decl
jmp
iret
dec
ret
mov
cmp
mov
les
jmp
xor
jmp
sub
cmp
push
adc
orl
xor
add
inc
mov
push
lea
call
lea
call
jmp
dec
rcll
xor
sub
xchg
in
jnp
leave
jne
jmp
rcrb
test
stos
daa
scas
aas
pop
test
sub
add
inc
cmp
jb
movl
jmp
icebp
adcl
test
dec
pop
mov
in
pusha
notb
aam
xchg
jmp
shll
sub
or
lea
jmp
or
dec
cld
jmp
xor
sub
mov
aad
rcr
mov
lods
mov
add
mov
aam
mov
dec
movsl
aaa
cmpsl
ret
stos
push
jmp
mov
lcall
nop
or
xchg
movsb
int3
push
xor
leave
jne
lea
call
jmp
pop
lret
pop
ds
mov
mov
rolb
rclb
adc
add
mov
inc
and
pop
imul
mov
lret
aad
dec
movsl
insb
in
jmp
mov
inc
jmp
cmpsl
es
cs
out
notb
lahf
cli
or
push
in
push
jmp
push
cmpsb
mov
jmp
ds
inc
push
xor
daa
orl
jle
imul
sbb
add
rorb
jmp
add
lock
mov
lods
lret
inc
mov
clc
push
push
lea
push
mov
push
call
jmp
jbe
insl
hlt
pop
idiv
push
call
xor
jmp
pusha
xchg
inc
jmp
leave
jmp
cld
jb
xchg
arpl
bound
shlb
jbe
pop
jmp
pop
cld
dec
mov
stc
lcall
aaa
pop
leave
pop
cmp
jg
jecxz
push
in
dec
fldt
push
jmp
jmp
jmp
daa
mov
inc
mov
insb
lahf
sub
xchg
add
push
or
jge
lods
mov
xchg
or
sub
mov
adc
or
or
xor
lret
lret
js
or
mov
in
das
adc
sbb
mov
sbb
sar
inc
adc
and
jmp
stos
xor
adcl
xchg
mov
mov
lret
jg
jmp
lret
jns
fwait
scas
insl
cmp
jmp
scas
xor
xchg
or
push
inc
push
xor
daa
fcompl
mov
pusha
mov
mov
mov
andb
sub
jo
mov
jmp
ficompl
addl
jmp
adc
pusha
out
adc
adc
lret
xchg
scas
xchg
pop
jne
jmp
push
mov
jmp
jns
xchg
testb
adc
fs
jl
testb
inc
mov
add
add
mov
jmp
pushf
cmp
jmp
pop
popf
or
cmp
mov
mov
rcrb
push
fisttpll
out
imul
jmp
ret
pop
push
mov
jmp
add
das
mov
movsb
movsb
ret
mov
push
movzbl
jmp
adc
fbstp
sbb
jmp
fs
mov
ljmp
imul
adc
sub
lcall
pop
sub
add
xchg
jmp
and
jg
jns
jmp
leave
mov
add
add
xor
adc
dec
mov
mov
pop
enter
xor
clc
notl
cmp
es
pop
pushf
jmp
push
lahf
punpckhdq
and
jmp
pop
cwtl
push
imul
xor
outsl
repz
cmc
cmp
outsb
or
adc
ret
adc
or
or
xor
lret
loop
adc
testb
add
add
add
add
lret
add
fcoml
lret
add
add
add
lret
adc
add
add
add
fsubr
idiv
incl
add
add
add
add
lret
adc
lret
adc
add
and
add
ja
xchg
or
js
push
fiaddl
push
in
lret
lret
ja
add
ja
fwait
or
js
push
insl
in
in
lret
lret
add
pop
loop
adc
add
lret
lret
mov
or
in
lret
dec
iret
pop
cmp
aas
pop
xchg
add
sahf
jnp
add
std
or
jns
insb
or
shll
fisubrs
lods
and
pop
std
jne
mov
dec
rclb
and
ja
loope
pop
xchg
add
sahf
insl
cmp
out
lcall
push
cld
ds
ja
xorb
push
test
push
test
xchg
pop
bound
sub
push
jo
ja
loope
or
or
sub
cmp
pusha
stos
lods
lret
inc
icebp
xchg
add
sub
cmpsb
inc
shll
xor
adc
add
add
sub
lret
lret
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
xor
adc
add
ja
stos
or
js
sbb
std
pop
in
lret
lret
mov
or
mov
push
mov
int3
and
data16
xchg
outsb
jmp
mov
loopne
fdivrs
outsb
or
adc
pop
jp
jg
and
addr16
adc
adc
mov
imul
leave
dec
ret
mov
test
sub
add
lock
bound
ss
leave
test
xchg
sbb
aad
lock
repz
cmc
xor
dec
ret
repz
sahf
into
arpl
xchg
gs
mov
bound
mov
adc
mov
xchg
and
lods
cmp
repnz
pop
repnz
je
out
or
les
int3
mov
sub
push
int3
inc
and
adc
dec
cmp
or
jnp
sub
lds
push
or
enter
push
in
push
les
mov
cmpsl
adc
add
fistl
mov
je
out
sbb
push
testb
cmp
add
mov
js
dec
cli
jne
mov
lods
cmp
cld
insl
std
test
and
xchg
test
push
mov
push
ret
cmpsb
push
loop
test
pop
test
je
jbe
loopne
test
xchg
adc
loopne
sbb
insb
jnp
jno
jecxz
xor
push
cwtl
push
imul
sub
lds
hlt
sbb
nop
push
popa
nop
js
das
mov
inc
xlat
mov
mov
cld
xchg
cmc
add
xor
or
sbb
jge
je
addr16
std
test
or
jg
repnz
pop
repnz
leave
inc
aam
dec
lcall
jecxz
cld
fwait
jbe
mov
jns
cltd
fdivrl
add
in
lret
lret
sub
add
ja
cltd
or
js
mov
jns
lret
lret
and
lcall
push
lds
cmp
inc
xchg
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
mov
adc
jo
sub
in
lret
mov
outsb
std
insl
hlt
pop
lods
lcall
jl
jne
sub
mov
in
mov
out
adc
sub
daa
sub
sub
push
dec
xlat
inc
and
aaa
sub
and
xor
stos
sub
popl
shll
inc
mov
out
insl
std
test
mov
and
in
out
notl
cmp
pop
les
mov
cmpsl
sub
es
inc
mov
jle
fs
sbb
jmp
cmp
fimull
fimull
js
push
cld
ds
aam
sub
outsb
or
dec
addr16
push
cld
push
sub
jb
pop
repnz
fs
add
inc
xlat
mov
out
ljmp
arpl
cmc
push
cld
data16
xchg
outsb
lods
adc
in
sbb
and
push
xor
sub
push
repnz
loop
je
mov
in
sbb
and
xor
scas
addr16
mov
lods
xor
stos
cmp
dec
ss
inc
mov
in
push
lahf
push
mov
stos
into
cmp
pop
stos
inc
sub
jo
imul
xor
inc
jmp
xchg
popa
in
jge
notl
sti
imul
das
dec
fdivrs
sub
sbb
xor
popf
xor
fs
popf
insb
fnsave
cmpsb
xor
scas
pop
inc
aam
sub
and
sbb
inc
shlb
ja
loope
imul
mov
test
aad
repz
cmc
sbb
push
lahf
push
mov
cmpsb
jne
gs
xor
sub
ficompl
scas
pop
mov
xchg
pop
bound
shlb
fucomip
push
lahf
push
xor
dec
sbb
outsl
scas
mov
jecxz
push
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
lret
mov
mov
pop
leave
test
mov
pop
mov
mov
sbb
dec
lods
and
adc
test
mov
aad
xchg
and
adcl
inc
roll
sarl
push
mov
fstpt
popa
add
inc
add
mov
mov
adcl
test
add
inc
xchg
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
ja
xchg
or
js
adc
pop
push
in
lret
lret
test
add
add
inc
and
xor
subb
add
sahf
sbb
mov
popa
icebp
nop
arpl
js
jle
aas
lret
xor
add
add
in
lret
xor
mov
adc
scas
inc
sbb
stc
jge
je
jnp
pop
and
fnsave
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
xor
lods
sub
pop
xchg
repnz
ss
pusha
jmp
dec
push
xor
sub
inc
sub
cs
and
adc
sbb
out
lock
bound
mov
fmull
mov
cwtl
decl
mov
xchg
and
jns
mov
mov
and
pop
mov
stc
imul
pop
ds
inc
fisttps
fldenv
push
lret
mov
xor
mov
popf
push
xor
ja
ljmp
adc
add
ja
mov
adc
pushf
ja
mov
lret
lret
mov
push
mov
jns
setg
xchg
icebp
add
xor
adc
notb
add
ja
xchg
mov
and
and
adc
in
sbb
jg
imul
or
or
pop
rorb
dec
lods
inc
roll
aad
in
clc
lahf
push
cwtl
adc
pop
inc
and
sbb
mov
inc
mov
adc
pop
leave
pop
cmp
pusha
pusha
lock
inc
arpl
pusha
pop
repnz
mov
lea
nop
push
popa
nop
cmp
sbbb
aas
lret
imul
insl
test
adc
lods
and
pop
jecxz
call
jmp
push
in
insb
cmpsl
push
and
fnstenv
ljmp
push
add
add
lds
adc
cli
xor
sbb
lret
lret
push
add
add
lds
adc
xor
pop
add
lret
lret
mov
or
mov
pop
fistps
sar
jge
je
insl
push
sahf
or
cmpsb
dec
push
aam
sub
test
push
loopne
mov
js
pop
dec
int
and
and
pop
jb
sbb
xchg
popa
inc
roll
aad
fwait
adc
rcll
xor
xchg
cmc
add
fstl
cmpsl
push
xchg
outsb
cld
fwait
jbe
rclb
push
hlt
lods
and
add
push
dec
fmuls
fsubrs
adc
mov
js
cmp
adc
adc
mov
add
movsb
ret
fcoml
and
push
cmp
and
inc
lds
pushf
xor
and
inc
shll
add
jp
mov
inc
mov
mov
lds
sbb
je
mov
jns
pop
adc
push
xor
les
mov
adc
mov
and
testb
aaa
ret
in
sbb
fstpt
lret
scas
pop
cltd
push
adcl
cs
sbb
mov
mov
sbb
mov
pop
pop
jp
es
xchg
pop
bound
mov
testb
sub
jle
pop
lret
scas
pop
cwtl
in
in
mov
adc
or
into
ret
xchg
fs
cmp
insb
loop
je
out
insb
loop
je
inc
push
xor
daa
mov
fildll
rcll
mov
sahf
stc
or
cmp
das
dec
mov
adc
push
lds
in
jecxz
jne
push
fisttps
fsts
jbe
xor
jle
mov
cmp
jno
mulb
dec
mov
mov
and
xor
cld
call
and
lret
and
popa
add
add
lahf
or
js
mov
lret
lret
mov
les
cli
push
lahf
push
inc
inc
and
ja
cli
push
cmp
mov
in
sbb
push
jns
aas
push
rcll
data16
out
mov
mov
leave
pop
push
xor
and
jb
xchg
or
nop
push
popa
nop
pop
pop
mov
jle
inc
fstpl
stos
mov
jo
xorl
or
fidivrs
pusha
pop
repnz
xchg
push
sbb
dec
adc
push
push
xchg
add
jno
mov
loop
stc
cwtl
imul
pop
pop
fisttpl
fisttpll
mov
shll
outsl
or
mov
and
mov
mov
gs
pushf
outsl
fcompl
cmp
pushf
sub
fs
sbb
lods
cmp
fisttpll
out
jg
jp
in
push
aaa
lods
cmp
mov
mov
stos
outsl
lock
ja
sbb
aad
in
push
xlat
inc
and
aaa
mov
movsb
ret
ds
addb
repnz
cmc
jno
xorb
adcb
adcb
loope
jae
ss
inc
mov
std
jne
mov
push
xchg
add
jno
inc
shll
cmp
pop
ds
inc
mov
aas
mov
inc
mov
pop
mov
js
dec
jle
popa
add
push
bt
push
movsl
adc
fbstp
xor
adc
jno
adcb
sbb
sub
inc
shlb
sub
push
pushf
push
xchg
repz
int
repz
cmc
adc
imul
adc
gs
adc
outsl
ljmp
sub
cmp
mov
les
mov
loopne
jb
jp
imul
out
jo
mov
stos
int
jmp
loop
adc
testb
and
lret
lret
cmp
add
ja
jae
adc
or
dec
pop
in
lret
lret
fistps
or
and
jnp
sbb
out
gs
pushf
outsl
mov
mov
xor
cmpsl
aaa
push
mov
mov
shll
push
mov
mov
ud1
adc
xchg
or
ja
or
mov
mov
inc
mov
cld
jle
mov
mov
cltd
pop
rclb
mov
xor
pop
lret
dec
ret
andl
pop
fimuls
push
cmpsb
sub
lds
rcrb
test
mov
and
sbb
out
mov
stc
jbe
cmpl
adc
cltd
or
mov
mov
sbb
mov
aam
fidivrl
enter
fs
pop
repnz
movsl
xor
or
cmpsl
aaa
push
mov
addr16
push
xchg
or
mov
js
arpl
scas
pop
les
int3
dec
xor
xchg
adc
mov
jle
arpl
insl
std
test
xlat
push
les
adc
mov
cmp
mov
jle
jle
int
and
cmp
or
fisubrs
fs
jno
jle
mov
or
mov
mov
pop
xchg
repnz
sub
aaa
push
mov
lds
cmpsb
cmp
dec
ret
in
loope
adc
dec
push
mov
jmp
jge
pop
enter
jg
cli
push
lods
and
ja
rcll
and
lock
xlat
inc
and
aaa
pop
xchg
adc
hlt
jae
mov
dec
mov
add
add
dec
ret
in
pop
leave
test
lock
jp
jp
sbb
std
outsl
lcall
mov
into
pop
cmp
adc
andb
gs
pop
adc
jb
jae
xor
xor
add
add
add
add
adc
add
and
add
ja
mov
fcomp
sbbl
add
outsb
add
add
les
adc
shlb
loope
in
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
jae
or
in
lret
outsb
lock
ja
into
pop
cmp
push
imul
sbb
jge,pt
insb
or
out
mov
mov
dec
fstpt
xchg
adc
js
mov
cld
call
and
lret
and
popa
add
add
rorl
js
aas
lahf
in
lret
lret
adcb
or
mov
lds
iret
xor
xor
jbe
or
pop
enter
push
test
jge
jg
mov
jg
push
push
cli
mov
frstpm(287
imul
sbb
repnz
pop
repnz
lea
or
mov
std
insl
hlt
pop
lods
and
jb
jno
jecxz
mov
mov
and
fdivs
ja
xorb
into
pop
cmp
jno
or
jnp
mov
push
sbb
mov
js
popa
les
scas
pop
fnstsw
fstps
test
nop
ljmp
mov
inc
mov
movsb
push
mov
push
lret
mov
ds
gs
stc
jl
jne
insb
out
jecxz
jne
xchg
and
xor
int
fsub
imul
lcall
mov
cs
ljmpw
fcomps
scas
pop
cld
xchg
add
out
jmp
jge
lock
notb
pop
cmp
jg
cmp
push
mov
pop
jp
and
fs
popf
insb
lret
call
mov
mulb
sbb
xor
add
add
loopne
jbe
cmpl
nop
push
popa
nop
js
jns
mov
out
jecxz
jne
mov
shll
cmp
stc
imul
push
aaa
ret
adc
in
sbb
mov
xchg
repnz
mov
cmc
add
jg
jge
testl
mov
mov
and
cmc
pop
xchg
add
pop
int
addr16
pop
cmp
adc
mov
adc
add
add
xor
lret
loop
adc
or
or
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
add
pop
loop
adc
or
lret
lret
jo
or
in
lret
mov
test
push
hlt
filds
mov
cmpsb
rcrl
loopw
rclb
inc
divb
jl
pop
fdivl
in
or
add
jl
jo
xorl
frstor
stos
jle
cmpsb
xor
scas
pop
lea
stos
arpl
mov
adc
ret
mov
and
push
mov
ud1
adc
stos
pop
and
jo
outsb
or
sbb
mov
cli
je
lea
xchg
mov
loop
adc
or
xor
lret
lret
pop
lret
mov
stos
ja
xchg
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fcoml
add
ja
lds
adc
or
or
lret
bswap
or
mov
mov
xlat
pop
leave
test
fwait
int
mov
out
mov
jns
xchg
in
sbb
popa
mull
icebp
dec
pop
into
pop
cmp
jg
es
cs
jne
jo
loop
test
xchg
adc
ds
dec
roll
rcll
icebp
push
lahf
push
xchg
or
in
push
int
and
cmp
test
shll
addr16
push
in
and
dec
sub
push
outsb
out
jl
negb
loope
notb
push
xor
xor
inc
aam
dec
cltd
xchg
nop
testl
jbe
imul
ljmp
jecxz
push
in
cld
jnp
mov
mov
scas
lret
mov
out
pop
cltd
or
pop
insb
out
adc
dec
icebp
popa
icebp
nop
arpl
push
lds
iret
mov
sbbl
cmp
inc
aam
dec
ljmp
mov
daa
mov
inc
mov
mov
xchg
flds
mov
or
les
in
jle
in
adc
insb
push
roll
aad
loope
in
mov
cmp
sti
sahf
insl
xorl
daa
inc
mov
mov
movsl
int3
aas
fdivs
mov
inc
mov
push
out
jno
mov
rcll
lret
mov
lods
xchg
pushf
sti
push
repnz
pop
loop
mov
std
or
xchg
and
jmp
push
in
sub
inc
aad
dec
ljmp
ds
inc
mov
cwtl
or
cmpsb
xor
scas
pop
nop
push
xchg
repz
mov
int
sbb
nop
or
lret
lret
mov
add
add
lcall
mov
popa
icebp
nop
arpl
cmp
jno
ja
loope
mov
lcall
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
cld
imul
mov
rcll
sti
mov
xchg
adc
adc
sbb
sbb
mov
xchg
adc
jnp
jnp
in
insb
mov
mov
pop
jp
pop
pop
pushf
xor
dec
sub
pop
dec
roll
aad
popa
in
sbb
adc
add
es
xlat
inc
and
sub
outsb
or
adc
testb
xor
lret
lret
cmp
add
ja
mov
xchg
out
cmp
lret
lret
int
or
mov
imul
mov
and
mov
lods
mov
mov
adc
inc
roll
aad
pop
aam
sub
mov
dec
fdivrs
shlb
pop
jb
mull
pushf
outsl
fdivrl
popf
mov
mov
adc
dec
push
lds
iret
jp
jecxz
push
in
imul
add
cmp
jl
jne
data16
sub
push
outsl
mulb
push
movsl
cmp
mov
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
lahf
add
out
jg
jmp
xchg
xchg
repz
out
jno
xorb
add
jmp
push
in
cmp
rolb
shlb
add
add
and
lret
loop
adc
or
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
sub
add
ja
lret
js
mov
lret
lret
mov
or
mov
mov
lds
mov
sbb
dec
sub
and
xor
dec
fnstcw
ret
cmpsb
push
aam
xchg
add
push
mov
push
fwait
or
jae
pusha
notb
punpckhdq
popa
nop
outsb
divb
xorb
insl
std
test
pop
fisttps
jp
add
add
fisubl
scas
aas
pop
test
inc
mov
orb
adc
in
popa
icebp
nop
arpl
or
in
pusha
notb
inc
and
push
mov
adc
sbb
cmp
add
lock
xor
jecxz
push
in
imul
cwtl
push
imul
outsb
cld
fwait
jbe
movsl
xor
adcb
addb
std
insl
hlt
pop
add
aad
dec
test
jnp
mov
mov
mov
lret
lret
test
pop
test
mov
movsl
int3
aas
ljmp
inc
push
xor
daa
sub
pop
aam
sub
stos
int
fadds
pop
cmp
and
loope
adc
inc
rorb
push
cmp
mov
js
mov
jg
arpl
cmc
inc
xchg
in
sbb
adc
push
lds
jle
cmp
mov
fwait
rorb
mov
lods
mov
xchg
mov
jle
imul
cmpsb
push
mov
lock
mov
mov
std
jbe
cmpl
sbb
xchg
or
outsl
mov
std
or
idivb
mov
or
dec
stos
es
cs
inc
aam
dec
clc
ficoms
cmpsb
push
cli
or
loop
loope
jae
imul
testb
jl
fiaddl
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
jmp
jmp
push
sub
add
jmp
fisubrs
jnp
add
insb
sti
call
add
add
jmp
mov
leave
mov
leave
or
xchg
add
sti
decl
test
sti
lcall
push
jmp
insl
in
bound
pop
jmp
mov
push
call
jmp
or
sbb
je
xor
push
inc
adc
mov
sti
es
jmp
xor
lahf
jmp
test
popf
sub
adc
add
jg
jmp
cmpsb
push
cmpsb
or
ja
iret
or
ja
fisttpl
adc
add
pop
ja
rorb
adc
iret
or
ja
loope
adc
add
add
jmp
push
loope
sub
dec
adc
push
sub
call
jmp
dec
enter
and
dec
jge
out
inc
loop
adc
add
cld
call
and
lret
and
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
pop
rorb
adc
lret
push
fisttpll
out
add
call
test
loopne
jmp
mov
scas
leave
cmp
dec
iretw
mov
jmp
cli
hlt
sbbb
jmp
xor
push
popf
or
inc
aad
dec
ljmp
adc
popf
pushl
mov
jmp
test
mov
fimull
out
jmp
xor
pop
in
in
jle
inc
fisttpl
fnsave
in
bound
outsb
cmp
add
add
pop
cmp
pusha
cs
mov
orl
inc
adc
clc
insb
loop
je
das
mov
add
push
jnp
mov
inc
fdivl
in
add
ja
xorb
addl
mov
movzbl
add
jmp
rcrl
loopw
xor
int
mov
icebp
shrb
lea
jmp
xchg
sbb
je
lea
xor
adc
addl
je
popa
mov
jmp
ss
jmp
and
jmp
dec
into
pop
cmp
add
and
and
inc
test
xchg
aaa
int3
popf
push
rolb
shlb
push
stos
data16
add
add
xchg
enter
add
jmp
pushf
adc
sarl
dec
push
jmp
cs
jmp
jg
gs
sbb
push
cmp
ds
sbb
mov
mov
sub
jmp
add
pusha
in
bound
jmp
out
adc
jg
push
jmp
pop
lcall
aaa
push
mov
and
cld
bsf
jmp
jns
jle
call
xchg
jmp
add
imul
cmc
add
xlat
inc
shll
cmp
or
jo
mov
and
cmp
jne
jmp
aad
frstor
mov
dec
sub
xor
les
addl
lds
adc
dec
aaa
movzwl
jmp
sub
sbb
mov
inc
mov
out
jp
cmpl
jne
call
test
je
push
call
jmp
enter
dec
andl
into
dec
fdivrl
sub
push
jmp
xchg
pop
shlb
jmp
sbb
pop
xchg
jb
jno
iret
pop
cmp
add
rclb
call
addl
add
pop
lret
scas
pop
mov
pop
xchg
repnz
mov
fwait
decb
pop
ja
mov
sub
sub
and
or
sbb
sbb
adc
adc
enter
mov
mov
and
imul
movzwl
add
movzwl
jmp
ja
insl
hlt
pop
loope
pusha
add
jmp
movzwl
jmp
and
cmp
pop
nop
push
popa
nop
inc
loop
dec
in
aas
movzwl
imul
add
mov
imul
jmp
inc
xor
or
mov
add
nop
sbb
aad
out
mov
outsb
cld
xchg
cmc
add
pop
in
cwtl
movzwl
jmp
add
jecxz
loope
jae
leave
pop
into
test
push
lds
jmp
mov
inc
add
push
add
movzwl
jmp
movzwl
jmp
cld
pop
cmp
jmp
stos
mov
jmp
lea
jmp
cmp
jne
ja
loope
ljmp
mov
push
imul
jmp
nop
add
jmp
mov
jmp
inc
cmp
jmp
inc
fimull
ficompl
insl
mulb
sbb
in
sbb
jge
add
mov
jmp
sub
pusha
insb
or
xor
jmp
pushl
add
jmp
mov
ret
push
popa
nop
pop
or
cmp
xchg
and
adc
lcall
imul
jmp
push
aad
sub
cmp
xchg
pop
bound
jmp
std
dec
inc
jmp
pop
jmp
out
notl
fdivrs
insb
or
out
out
imul
insl
cwtl
fistpll
shr
pop
mov
jmp
icebp
jp
jp
push
movsb
add
add
add
mov
iret
stos
sub
jge
cmp
jmp
arpl
bound
mov
aad
sub
jp
lods
cmp
or
jmp
js
jae
jmp
lea
jmp
icebp
lock
lret
push
mov
xchg
daa
lahf
push
pushf
sti
push
mov
testl
decl
dec
pop
int
addr16
mov
adcb
jmp
test
jmp
add
sbb
aad
out
out
jl
notb
mov
dec
movsl
jmp
faddl
jmp
jg
jne
out
pop
cs
dec
mov
stos
data16
rolb
rclb
aad
pop
movsl
movsl
movsl
movsl
mov
mov
jmp
int
sub
push
jmp
jae
pop
jmp
out
sti
sahf
insl
mov
add
repz
xorb
mov
push
jmp
ficomps
test
cmpsl
mov
jmp
jmp
jmp
int
fdivrs
mov
adc
mov
push
test
iret
call
jmp
test
shlb
popf
jmp
xlat
dec
pop
jmp
mov
lret
pop
popf
or
outsb
cld
fwait
jbe
xor
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
cmp
inc
mov
out
push
push
jmp
push
mov
pop
jmp
push
cmp
dec
sub
and
mulb
pop
stc
imul
cmp
call
inc
xlat
mov
out
add
jmp
call
jmp
jmp
setg
or
push
scas
and
and
sbb
pop
sub
jmp
icebp
imul
insl
fmull
inc
and
jmp
xchg
and
or
pop
dec
aam
sub
inc
and
xor
pop
pushf
jmp
or
add
sub
decl
hlt
cmp
andb
and
test
inc
xor
pushl
mov
jmp
mov
nop
pusha
jmp
mov
and
sti
adc
inc
jnp
imul
cmp
dec
in
sbb
push
jno
push
xchg
pop
ret
jmp
jp
jp
xchg
adc
gs
pushf
outsl
sahf
mov
ficoms
sub
jmp
enter
dec
addl
jmp
sub
insl
in
sbb
and
adc
mov
mov
mov
jmp
mov
ret
cmpsl
aaa
push
mov
xchg
mov
push
mov
loopne
aam
sub
mov
and
cmp
jns
cmp
ja
iret
or
xor
sub
sub
and
add
sbb
sbb
adc
adc
fdivl
add
ja
lret
or
js
enter
in
lret
lret
push
add
add
aad
adc
repz
adc
lret
lret
or
add
ja
out
adc
push
add
cs
lret
lret
xor
mov
or
js
jp
push
in
lret
lret
aad
or
mov
add
fimuls
mov
inc
jne
cmpl
movsl
or
push
cmp
jmp
sbb
and
repz
movsb
popa
jmp
jmp
ljmp
inc
aad
dec
mov
jnp
in
or
sub
test
xlat
pop
xchg
cmp
rolb
add
jmp
jae
js
ljmp
jecxz
faddl
and
jo
mov
and
cmp
jne
jmp
or
lcall
mov
mov
scas
inc
add
lea
jmp
clc
jg
mov
xchg
adc
notl
cmpsl
push
jmp
and
jmp
push
rolb
shlb
data16
pop
cmp
cmp
dec
frstor
popl
jmp
mov
jmp
mov
scas
lret
xchg
xchg
xchg
mov
jmp
pop
mov
xchg
lea
xchg
lock
xlat
fdivl
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
xchg
je
jmp
pop
roll
roll
cmpsl
orl
in
jge
testl
int3
cli
incl
mov
push
les
push
jmp
rorl
mov
jmp
and
sub
adc
dec
fstpt
inc
es
mov
and
push
mov
call
mov
jmp
cwtl
or
in
mov
movsl
adc
or
cs
jmp
add
jmp
adc
pop
jb
sub
jp
jp
jne
jl
notb
xchg
mov
mov
add
aam
int
and
cmp
push
jmp
xor
sub
and
ss
gs
xor
in
sbb
movzwl
jmp
ret
inc
shll
subl
jmp
pop
sahf
or
cmpsb
inc
test
inc
add
dec
mov
cmpsb
shll
jge
push
and
cmpxchg
das
jge
call
jmp
nop
cmp
mov
push
add
jmp
inc
movzwl
jmp
mov
shlb
or
cmc
or
insb
jo
movzwl
jmp
ret
in
imul
jmp
mov
into
jmp
in
imul
insl
xchg
popa
pushf
fwait
sbb
aaa
cmpsl
ret
es
jmp
daa
test
stc
xor
pop
jmp
cld
pop
jmp
ljmp
cld
xchg
cmc
add
xor
lea
mov
and
jmp
push
xchg
add
jno
xorb
aaa
cmpsl
ret
dec
fisttps
fsts
lds
jmp
fisttpl
mov
shll
stc
or
clc
or
movzwl
jmp
rorl
mov
mov
and
jmp
push
test
push
notb
inc
and
mov
and
dec
and
sub
cmpl
push
push
push
je
cmpl
jmp
lret
dec
fidivrs
adc
int
xchg
nop
add
jmp
in
sti
sahf
insl
mov
fdivrs
mov
pop
fldt
imul
add
movzwl
imul
jmp
ss
inc
mov
xchg
sbb
sbb
cmc
cmp
iret
add
mov
sbb
cmp
and
aaa
xchg
xor
sub
insl
testb
ja
fimuls
adc
adc
in
out
clc
lahf
push
orb
sar
jmp
mov
mov
and
mov
out
mov
jae
jmp
aam
fstpt
clc
lahf
push
mov
mov
jnp
mov
xchg
jg
xlat
xor
jmp
jmp
and
jp
in
das
pop
push
xor
sub
sbb
je
jmp
mov
mov
cmp
cld
xchg
cmc
add
bnd
xchg
adc
jmp
aas
ret
push
lds
sub
cmp
loopne
adc
or
add
adc
test
jmp
pop
clc
adc
icebp
add
add
mov
inc
xchg
in
notl
outsl
or
out
cmp
jp
lea
movsl
movsl
movsl
movsl
jmp
sub
rorb
dec
stos
mov
nop
testl
adc
push
pop
pop
jmp
or
jg
fisttpll
mov
mov
jmp
inc
roll
aad
pop
nop
push
popa
nop
inc
inc
leave
pop
cmp
or
jmp
jmp
push
jmp
add
pop
jp
xor
mov
jmp
or
or
cmpsb
adc
xchg
jb
es
jg
jmp
xchg
or
mov
call
cmpsb
jne
jno
jecxz
or
or
xor
mov
jmp
xchg
and
mov
inc
in
decl
aas
xor
cmp
mov
int3
push
lds
pop
ljmp
jmp
jmp
inc
jecxz
push
in
sti
imul
insl
in
cwtl
add
cmp
sub
psrlw
ljmp
sarb
or
out
dec
enter
sub
arpl
add
add
fidivrl
sahf
jmp
clc
jle
mov
ljmp
lea
popf
or
push
call
add
xchg
popf
pushl
jmp
das
and
cmp
aaa
sub
testl
push
xor
scas
lret
int
fstpt
ret
sbb
mov
mov
mov
jmp
mov
test
push
shlb
sub
jmp
orb
add
daa
xor
push
lds
loopne
loop
je
pop
leave
test
loopne
cmp
pushf
int3
cli
jmp
inc
sub
add
ret
jne
addl
mov
jmp
bt
push
movsl
adc
subl
jae
xchg
mov
stos
movzbl
jmp
adc
and
testl
movsb
addb
jmp
in
jg
mov
xchg
add
arpl
outsl
or
les
jmp
add
jmp
mov
mov
cmp
xchg
add
or
mov
ret
dec
jmp
popl
jmp
dec
xlat
inc
and
pop
and
sub
ds
call
rolb
add
jmp
pop
inc
push
call
pushf
push
mov
es
mov
lods
imul
and
push
call
push
mov
xchg
jle
aas
scas
lret
mov
into
int3
int
lods
add
sti
dec
cmc
jmp
ja
add
daa
aad
mov
add
sahf
jbe
rolb
shlb
adc
push
mov
push
sti
decl
std
dec
pop
das
xlat
cld
lret
dec
frstor
cmc
adcl
test
mov
out
cltd
push
mov
test
jmp
stc
mov
cwtl
les
lods
pop
hlt
sbb
mov
lcall
repz
popf
insb
vaddps
test
addr16
pop
out
adc
inc
push
enter
sub
dec
ret
mov
icebp
pop
mov
test
cs
jnp
mov
push
rolb
sarb
cmp
sub
out
enter
mov
push
sti
decl
icebp
jecxz
sti
sahf
insl
xchg
lock
mov
push
add
pop
aas
lret
fisttps
fsts
jo
xorl
sub
xor
pop
das
je
jmp
into
inc
aad
dec
mov
mov
sub
xor
push
adcl
inc
xchg
movsl
movsl
movsl
mov
jmp
adcb
out
movsb
ja
jp
in
inc
xor
cmp
sbb
xchg
cmp
nop
and
mov
aam
mov
testl
scas
xor
int
jmp
outsb
or
sbb
push
mov
fdivrl
sbb
or
iret
dec
jo
pusha
pop
repnz
push
aaa
ret
pop
jp
jg
jmp
push
in
push
into
dec
fidivrs
and
mov
cwtl
decl
call
inc
and
adc
xor
and
and
arpl
js
ljmp
or
add
push
jl
adc
pushl
sahf
jl
popa
add
and
mov
dec
ret
ret
jecxz
push
in
jg
bound
mov
and
dec
stc
adcl
sbb
sub
add
inc
fimull
ficompl
test
mov
les
dec
sub
xor
add
sbb
jns
jmp
das
mov
inc
mov
jge
insl
hlt
pop
int3
lcall
icebp
popa
add
sbb
dec
fdivrl
enter
dec
int
and
add
pop
cmp
and
add
add
xor
lret
lret
into
lock
mov
int3
and
push
mov
sbb
push
push
ljmp
add
sub
lret
sbb
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
adc
add
ja
in
or
js
and
icebp
xor
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
clc
hlt
or
in
lret
nop
pop
xchg
pop
imul
sbb
push
popa
nop
push
xchg
sbb
sub
jae
inc
aam
dec
out
out
adc
pop
test
mov
sbb
into
cmp
sub
jno
pop
int3
stos
rcl
inc
aad
dec
ljmp
dec
fisttpl
fnstsw
lods
xor
int
pop
xchg
mov
mov
loop
adc
testb
xor
lret
sbb
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
mov
add
ja
in
or
js
in
cld
jle
in
lret
lret
inc
add
add
lock
js
mov
push
pop
in
lret
lret
add
pop
loop
adc
add
lret
lret
jne
or
in
lret
in
jno
xorb
dec
fnstcw
xchg
adc
jne
fs
push
mov
sahf
stc
or
leave
dec
fidivrs
pusha
pop
repnz
add
lods
lret
inc
mov
hlt
push
cld
adc
outsb
cld
fwait
jbe
ret
dec
fidivrs
into
test
jno
jecxz
xchg
pop
cmpsb
das
mov
xor
cmp
rcll
ja
data16
xchg
outsb
roll
mov
insb
add
mov
outsl
clc
outsb
or
push
int3
pop
into
test
std
test
or
faddl
mov
shlb
das
dec
mov
or
sbb
xlat
mov
enter
xor
fwait
decb
sbb
pop
mov
cmpsb
shll
jae
imul
add
xchg
inc
jo
push
cld
or
pop
int
lea
inc
and
and
leave
jno
outsl
or
jecxz
xor
int
iret
inc
int3
inc
and
jo
loop
xchg
cwtl
decl
enter
pop
scas
or
mov
or
jmp
xor
int3
pop
enter
clc
insl
std
test
icebp
imul
insl
fsubrl
insb
or
mov
das
out
cmp
mov
rcrl
adcb
subb
dec
sub
pusha
inc
fdivl
in
sbb
movl
test
push
imulb
jns
jmp
sbb
or
fs
movsb
ret
ds
fsubrl
movl
add
xchg
ja
ljmp
out
in
or
mov
pushf
jle
adc
rolb
shlb
sti
jnp
mov
jo
ret
mov
into
test
repnz
fs
jp
jp
ds
cmp
mov
daa
mov
inc
mov
shlb
sahf
insl
cli
push
add
adcb
andb
mov
pushf
add
or
loop
adc
testb
xor
lret
loop
adc
or
or
or
lret
sbb
add
add
xor
lret
fmull
add
add
lock
js
jge
mov
in
lret
lret
push
in
or
mov
xchg
dec
fnsave
std
popa
icebp
nop
arpl
mov
test
xor
rcll
sub
dec
sub
xor
push
les
cltd
clc
or
scas
das
mov
mull
icebp
or
inc
shlb
dec
sub
adc
xor
and
and
push
jg
fs
or
push
adc
add
add
or
js
ds
inc
jg
lret
lret
push
add
add
or
js
pushl
in
lret
cmpsl
sbb
mov
and
adc
loop
jecxz
jne
iret
inc
shll
jmp
jge
je
xor
pop
int
addr16
mov
xchg
jp
in
inc
pusha
mulb
dec
outsb
ljmp
stc
scas
jmp
xor
popf
or
icebp
popa
add
xor
dec
sub
add
xchg
or
jbe
fs
popf
insb
test
lods
and
xor
popf
or
scas
cmp
mov
fistpl
test
loop
je
inc
les
int3
sub
ret
jg
jmp
test
jne
add
sbb
jne
mov
lods
and
popf
sbb
xor
dec
fdivrl
movsb
ret
ds
daa
stos
cmp
or
push
in
and
data16
dec
adc
mov
mov
es
fs
popa
add
pop
scas
cmp
pop
xchg
repnz
hlt
aaa
cs
ljmp
stc
imul
jecxz
jne
aam
fnstcw
cs
mov
test
inc
and
jle
call
sub
sbb
std
xchg
adc
push
lret
mov
xor
fwait
or
jns
lods
and
push
mov
xchg
repnz
callw
call
xorl
pop
lahf
sub
jecxz
out
jno
sub
popf
adc
clc
outsb
or
push
cmpsb
xor
nop
push
popa
nop
cmp
lea
mov
out
jnp
mov
into
pop
lret
scas
pop
mov
out
notl
adc
lret
lret
cs
or
dec
fnstcw
stos
into
cmp
and
js
test
rolb
sarb
in
jge
testl
lods
mov
xchg
adc
dec
rolb
shlb
mov
lret
insl
hlt
pop
in
and
adc
cmpsl
sub
pop
jp
jg
jg
mov
lds
dec
test
inc
mov
mov
es
insb
out
jg
jmp
inc
mov
or
adc
push
shlb
psubd
xchg
sbb
loope
adc
xor
mov
outsb
popf
cmp
add
insl
insb
or
scas
xchg
add
std
or
cwtl
setg
or
ret
rclb
imul
movsl
push
repz
lcall
cmp
dec
outsb
mulb
adc
stc
imul
fistpll
xor
and
jnp
mov
in
cmc
pushf
outsl
test
imul
insl
xor
loopne
jb
push
aam
sub
and
vmovmskps
mov
mov
push
lahf
push
lret
inc
mov
mov
dec
test
stc
hlt
rorb
push
icebp
jge
pusha
pop
repnz
jb
xchg
cwtl
sbb
pop
leave
test
out
pusha
adc
icebp
or
mov
out
or
mov
sbb
pop
jmp
or
in
mov
lret
jg
mov
out
loope
jae
fcoms
cmpsb
push
hlt
cmp
int3
push
lds
adc
add
movsb
ret
ds
loopne
in
mov
cltd
push
or
xor
mov
xor
push
add
add
cld
or
js
cmp
fucomip
lret
lret
push
add
add
std
or
js
add
add
lret
outsl
std
or
mov
imul
fnstsw
xchg
cmc
add
mov
stos
into
cmp
fwait
jbe
pop
jecxz
push
in
mov
shlb
mov
lds
iret
sub
mov
jns
jnp
arpl
xchg
les
cmpsb
xor
scas
jp
clc
outsb
or
cmp
lcall
or
pushf
or
in
movsl
sti
push
lahf
push
mov
mov
sbb
call
xchg
icebp
add
mov
sbbl
and
sub
sahf
or
cmpsb
dec
rorb
mov
fnstcw
int
loopw
imul
insl
mov
sub
mov
sarl
mov
stc
stc
pop
push
popf
loop
adc
testb
xor
lret
loop
adc
add
add
add
lret
adc
or
or
xor
lret
fdivrl
add
add
cmc
or
js
xchg
repz
in
lret
lret
xor
or
ja
or
mov
ja
xorb
sub
enter
sub
rolb
shlb
xlat
pop
iret
stos
pop
rcrb
sti
jne
mov
jecxz
cld
fwait
jbe
cltd
or
pop
iret
stos
pop
into
dec
fimull
fisubrl
xor
lcall
gs
pushf
outsl
les
lods
cmp
sbb
adcb
addb
imul
sbb
insl
std
test
sub
sub
push
aam
fdivrs
imul
jl
mov
dec
mov
mov
add
sahf
jbe
pop
iret
stos
pop
xorb
repnz
mov
sub
inc
arpl
add
add
std
add
jmp
mov
mov
sub
cmp
jbe
cmp
jmp
mov
pushf
sti
push
aam
int3
stos
xchg
sbb
mov
or
mov
shll
icebp
nop
arpl
cmpsl
addr16
imul
pop
jg
arpl
cmc
inc
lock
icebp
nop
arpl
xor
sbb
fs
push
jbe
jbe
loopne
xchg
pop
xchg
repnz
xchg
es
add
xchg
add
popf
or
call
pop
push
xor
es
test
mov
inc
mov
cmp
or
push
xchg
adc
in
sbb
out
outsb
cld
fwait
jbe
lea
cltd
clc
or
int
fdivrs
in
je
jo
je
lea
jb
xchg
dec
rcll
and
cmpsl
arpl
js
ljmp
cwtl
out
cltd
push
inc
mov
adc
aas
into
pop
repnz
fs
outsb
cld
fwait
jbe
int
repz
shlb
mov
aam
shlb
mov
cmp
pop
xchg
adc
and
mov
int3
push
int
and
aas
mov
mov
mov
pop
gs
sbb
and
adc
scas
cmp
mov
hlt
jnp
mov
in
lock
bound
xchg
or
push
jns
jge
in
sbb
add
inc
mov
insl
std
test
ljmp
aam
dec
mov
lcall
pop
xchg
repnz
test
jmp
shlb
and
mov
inc
call
pop
lods
roll
mov
jmp
testl
repnz
xchg
outsb
fsts
cmpsl
je
jl
divb
push
mov
dec
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
sbb
popa
lods
cmp
mov
fadds
mov
jns
ja
cmc
or
mov
add
mov
dec
subl
sbb
pop
pop
fimull
fidivl
rolb
inc
stos
ficompl
fs
push
jl
testb
lock
sbb
inc
and
and
test
jge
outsb
push
fdivl
in
mov
fcmove
inc
shll
shlb
dec
sub
sbb
outsb
or
pop
push
push
xor
jns
and
dec
fdivrl
and
sbb
enter
dec
sub
dec
jno
jnp
in
pop
cs
dec
ret
xchg
cmp
insb
outsb
cmpsl
ja
cmc
or
mov
repnz
test
insb
repnz
pop
bnd
mov
xor
roll
inc
stos
imul
sbb
add
fnstsw
std
sub
loop
adc
testb
xor
lret
lret
data16
mov
loopne
mov
data16
xor
sbb
add
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
adc
add
ja
std
or
js
sbb
add
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
jmp
lret
insb
jmp
xor
add
xchg
mov
adcl
fdivl
in
mov
xchg
lock
ficoms
mov
dec
sub
xor
mov
addr16
out
mov
adcl
enter
pop
jmp
lea
rclb
pop
out
xor
pop
adcl
mov
inc
mov
fisubrl
hlt
fildl
mov
mov
jge
add
dec
fadds
mov
leave
sub
and
ss
icebp
loopne
icebp
nop
arpl
es
mov
cwtl
decl
out
pop
fmuls
fsubs
push
fisttpl
fisttpll
lock
add
sbb
stos
daa
mov
and
cmp
jne
mov
scas
leave
cmp
lock
mov
ds
xchg
and
pop
lahf
adc
lods
cmp
rolb
shlb
push
test
push
mov
sub
mov
jle
and
sbb
jge
jne
out
xchg
aad
mov
les
push
lcall
aaa
cmpsl
ret
inc
push
xor
pop
hlt
jne
mov
mov
leave
nop
pop
xchg
adc
dec
int
and
sub
cmpsl
aaa
push
mov
repz
sti
in
outsl
lcall
xchg
cld
paddd
jnp
mov
rcl
xor
sbb
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
xchg
add
add
out
or
js
inc
pop
fldcw
lret
lret
push
add
add
hlt
or
js
xor
and
in
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
mov
or
in
lret
aam
repnz
sbbb
into
inc
mov
out
insl
std
test
pop
aad
sub
pop
ficoml
lods
pop
cli
int
int
rorl
cltd
or
xor
out
jge
je
sub
lock
lret
xchg
gs
or
cs
das
dec
mov
insb
lahf
pop
test
rorb
sub
xor
dec
fistpll
ja
loope
mov
cmpsb
shll
xor
adc
xor
cld
call
and
lret
and
xchg
add
add
decl
adc
pushf
mov
in
lret
cs
adc
movsb
ret
ds
jne
imul
adc
outsb
cld
fwait
jbe
test
nop
testl
sub
btcl
lret
inc
mov
xor
xchg
and
push
mov
add
jne
inc
shlb
mov
and
pop
leave
xchg
sbb
jb
xchg
in
in
jg
sub
cmp
push
popf
or
pushf
xor
adc
je
mov
mov
pushf
lds
xchg
cmpsb
push
int
and
aaa
sbb
sbb
data16
mov
hlt
push
cld
jnp
aad
sub
pop
mov
dec
add
scas
cmc
je
lea
gs
pushf
outsl
xchg
mov
cld
arpl
jne
out
sbb
pusha
movsl
sub
mov
nop
testl
icebp
add
bnd
mov
pop
rolb
shlb
insb
or
rolb
mov
xchg
push
das
mov
fmull
mov
xchg
icebp
add
fs
rcll
push
outsb
fistps
and
sbb
stos
cmp
or
int3
xadd
test
mov
xchg
jns
adc
pop
lret
scas
pop
fmull
xchg
add
dec
frstor
aaa
ret
lret
lret
stc
imul
in
ja
cmc
or
mov
ljmp
adc
add
lock
bound
adcb
roll
movsb
add
imul
in
imul
insl
in
imul
insl
cwtl
xchg
sbb
add
in
cltd
push
mov
jns
jns
jmp
in
in
jg
test
mov
sbb
pusha
xchg
cmp
jb
xchg
xor
or
fwait
or
sub
push
les
cmp
outsl
pop
push
xor
sub
sbb
xor
int
aam
cmc
gs
jp
xor
or
push
mov
es
add
jecxz
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
addb
icebp
add
push
lds
fildll
aam
mov
adc
mov
rcrb
inc
and
and
hlt
pop
out
inc
fidivrl
xchg
lock
mov
scas
lret
xor
push
lds
rorb
xchg
mov
shll
sub
mov
sahf
push
pushf
sti
push
cmpsl
mov
sahf
push
lret
pop
ds
jmp
das
in
out
jo
aam
xlat
mov
call
ljmp
shrl
and
mov
ret
ds
mov
mov
pop
iret
stos
pop
loopne
inc
aam
dec
xchg
hlt
pop
in
and
cmp
and
call
push
mov
mov
mov
cmp
scas
cmp
mov
mov
shlb
imul
jae
in
pop
lahf
punpckhdq
in
sarl
push
std
cmp
jle
call
inc
mov
clc
imul
dec
fnstcw
xchg
testb
xchg
and
push
xor
cmp
and
daa
inc
mov
xorb
inc
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
out
inc
fimull
fidivrl
push
int
and
aas
jmp
loopne
jb
jo
jl
divb
jge
je
add
std
sbb
or
mov
loope
notb
jns
jmp
divl
xorl
je
gs
adc
or
mov
into
dec
fstpt
les
mov
mov
movsb
cmp
or
jbe
xor
inc
shll
lods
mov
repz
jo
ja
icebp
or
mov
or
jo
or
mov
mov
popf
insb
frstor
mov
inc
mov
sbb
pop
ret
push
lret
cmc
or
lea
mov
sbb
fcomps
les
xchg
xchg
mov
test
push
mov
xor
es
push
rolb
rcrb
xchg
adc
mov
dec
mov
in
pop
clc
ss
inc
mov
sbb
lds
iret
cmp
insb
or
out
mov
xchg
repnz
push
fimull
fidivrl
inc
int3
inc
and
xchg
cmc
add
callw
call
push
mov
ret
dec
rclb
insb
insb
or
mov
mov
jns
and
pop
int3
stos
data16
jne
jp
in
inc
arpl
imul
dec
ds
aas
pop
test
decl
mov
stc
mov
mov
dec
rolb
shlb
jp
jo
loop
dec
roll
sarl
rorl
movsb
push
rolb
dec
adc
push
mov
gs
adc
mov
lcall
cmpsb
pop
cld
jns
mov
ret
mov
mov
mov
scas
sub
mull
icebp
sbb
shlb
cmp
sbb
lret
lret
xchg
or
pop
idivb
mov
mov
mov
and
push
movsl
cmp
std
insl
hlt
pop
lods
setg
push
push
cmc
lock
lret
jb
je
out
pop
inc
rolb
shlb
fistpl
pop
les
int3
setne
push
lret
mov
mov
mov
test
push
cltd
mov
mov
sub
lock
xorl
popa
mov
decl
pop
aas
lret
mov
ljmp
gs
pushf
outsl
sahf
rcrl
test
and
mov
call
and
lret
and
jg
add
ja
std
or
js
mov
lret
lret
pop
ljmp
adc
add
xlat
addr16
xchg
cmc
add
andl
or
mov
push
or
mov
or
add
jne
sti
pushl
jge
negl
test
arpl
push
rclb
inc
mov
xchg
adc
or
adc
push
call
gs
adc
push
in
jae
xchg
cltd
sbb
mov
mov
adc
dec
cmp
add
push
sub
jmp
stc
pop
jecxz
push
in
dec
roll
aad
dec
insb
xchg
add
or
or
xor
lret
lret
inc
adc
mov
push
in
mov
rcrb
test
dec
jmp
mov
scas
leave
cmp
and
call
adc
gs
scas
ja
ljmp
push
add
add
push
or
js
cmc
hlt
cld
or
lret
push
add
add
sbb
add
into
lock
lret
lret
push
or
mov
sbb
mov
mov
push
call
push
rclb
imul
dec
fimuls
dec
int3
push
push
call
inc
fisttpl
jmp
push
in
inc
and
xchg
add
call
imul
xchg
push
pushf
sti
push
cld
js
ja
loope
push
enter
dec
lahf
add
add
lret
pop
ds
mov
movsb
sub
inc
aad
dec
mov
sbb
mov
adc
ljmp
call
push
popa
nop
gs
jge
negl
cmp
jg
push
cld
push
inc
int3
inc
and
shll
jecxz
jne
popl
xchg
icebp
add
pop
inc
and
sbb
repz
cmc
push
pop
lret
scas
pop
in
and
add
xchg
sti
decl
bswap
pop
repnz
fs
fwait
or
xor
mov
pop
int
and
jl
sbb
aad
xchg
xor
aaa
push
mov
fstpl
pop
repnz
xchg
test
mov
and
dec
mov
add
js
fisttps
fldcw
fstps
scas
pop
mov
jbe
cmpl
fimuls
add
fiadds
push
xor
sbb
dec
pop
fisttps
mov
fldcw
ja
loope
jne
xchg
testb
xor
inc
enter
outsl
loopne
std
test
ret
mov
pop
cmp
outsb
daa
mov
cmp
pop
iret
pop
cmp
data16
je
out
inc
dec
fimuls
push
mov
aad
lea
mov
mov
xlat
and
imul
insl
mov
adc
add
add
adc
js
div
mov
in
lret
push
add
add
adc
js
hlt
mov
fs
lret
lret
xchg
adc
mov
push
mov
es
pop
add
in
lret
sbb
add
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
cmp
add
ja
adc
js
push
and
push
in
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
mov
or
in
lret
outsb
cmc
gs
adc
lret
dec
insb
icebp
popa
add
jbe
ret
ret
out
jg
jmp
mov
fdivrs
xorl
sbb
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
mov
add
ja
adc
js
loop
adc
lret
adc
add
ja
adc
js
or
lret
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
jbe
or
in
lret
pushf
sbb
sub
inc
mov
mov
add
aam
sub
push
popa
nop
jb
gs
pushf
outsl
mov
pop
cmp
aad
dec
ljmp
fists
mov
jb
in
cmp
stc
push
lahf
push
jmp
jmp
inc
aam
dec
out
sbb
ret
push
lret
cmc
fwait
or
das
mov
jmp
out
jno
loop
out
mov
imull
test
std
fs
popf
insb
test
shrb
pop
bnd
out
adc
daa
inc
push
xor
daa
mov
enter
jb
push
xchg
pop
bound
dec
mov
jne
jno
add
scas
aas
pop
test
icebp
add
lods
and
cmp
insb
loop
pop
loop
push
fisttpl
lea
and
sbb
roll
aad
data16
dec
mov
mov
and
ja
imul
test
shlb
mov
sbb
dec
xchg
rcrl
pop
mov
addr16
xchg
fs
push
push
lahf
push
int
frstor
xchg
mov
stos
sahf
sbb
push
inc
and
and
jmp
data16
xchg
outsb
fwait
jle
imul
xor
scas
pop
push
fpatan
in
loop
adc
testb
cld
call
and
lret
and
pushf
add
add
sbb
js
je
js
in
lret
lret
cmp
add
ja
icebp
or
js
push
nop
dec
jmp
lret
lret
sbb
or
ja
sub
mov
add
add
fcoml
popf
or
mull
icebp
or
mov
inc
mov
insb
loope
adc
xor
push
int3
aaa
mov
sub
test
test
push
mov
fisttpl
aaa
cmpsl
ret
xor
adc
adcb
subb
dec
fdivrl
dec
das
fidivrl
jmp
push
in
sub
push
shll
mov
test
sbb
aad
int3
imul
push
int
and
push
sahf
sbb
aad
in
push
xlat
inc
and
aaa
scas
faddl
or
or
xor
lret
fsubrl
add
lret
or
or
or
or
add
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
lret
or
or
or
lret
push
adc
in
lret
mov
mov
mov
inc
mov
aam
in
fcompl
test
fistpll
iret
stos
pop
xchg
cmp
push
mov
xchg
jb
adc
inc
xlat
mov
call
cltd
jae
sub
xlat
pop
enter
and
and
loope
out
jno
mov
leave
pop
int
addr16
adc
dec
fdivl
in
mull
xchg
lds
decl
sub
aas
pushf
add
std
or
insl
hlt
push
cld
adc
lea
push
xor
dec
pop
fwait
or
push
in
cmc
pushf
outsl
test
lock
roll
shll
cwtl
push
imul
lret
pop
ds
iret
dec
fdivrs
push
cld
jne
hlt
rcrb
test
jg
jmp
int
fwait
orb
push
lds
mov
sbb
xchg
and
mov
test
cmp
adcb
sbb
jmp
das
lds
mov
je
out
dec
stc
popa
icebp
nop
arpl
pop
notl
sbb
or
mov
adc
ja
and
mov
pop
popf
in
add
push
mov
loop
je
cli
fs
popf
insb
jmp
mov
jns
pop
sub
cwtl
push
imul
aas
scas
lret
mov
mov
and
fldenv
xchg
gs
arpl
je
out
push
dec
lret
pop
ds
mov
test
cmp
enter
inc
movsb
mov
xchg
icebp
add
shll
xchg
les
dec
adc
xor
push
mov
xchg
adc
movsb
adc
mov
adc
hlt
push
cld
push
js
jl
testb
jmp
jge
inc
shlb
punpckhdq
outsb
popf
pop
je
jge
notl
and
inc
mov
test
mov
movb
test
cwtl
push
imul
mov
arpl
ja
adc
mov
es
mov
je
sahf
pop
xchg
adc
xchg
adc
xchg
add
bound
into
push
fisttps
flds
dec
frstor
mov
js
gs
sub
test
mov
aam
sub
mov
loope
adc
push
or
data16
inc
inc
inc
and
ja
daa
mov
and
dec
ljmp
sbb
jne
arpl
cmc
sbb
nop
push
popa
nop
js
and
jle
mov
icebp
add
sbb
dec
jle
mov
xchg
jo
fists
or
mov
push
mov
adcb
cmpb
loope
jae
sbb
xchg
push
test
push
mulb
jns
jmp
mov
shll
sti
sahf
insl
xchg
pusha
xchg
lds
mov
in
mov
das
ficompl
pop
fisttpl
fnstsw
inc
and
imul
lds
pop
aas
lret
inc
shlb
mov
roll
sarl
dec
fdivrs
cs
mov
loop
fdiv
jae
xchg
dec
fisttpl
fnsave
sbbl
xchg
into
loop
adc
testb
xor
lret
lret
mov
fistps
pop
jp
adc
mov
and
mov
sar
jns
mov
pop
fisttps
fstps
inc
lds
iret
sbb
mov
jle
jle
lods
and
pop
stos
and
jle
mov
hlt
pop
loope
mov
in
bound
in
mov
in
xlat
adc
aas
repz
mov
pushf
adcl
loopne
mov
xchg
cmp
mov
cmp
scas
cmp
pop
leave
test
incb
sub
and
sbb
push
lret
lret
adcl
xor
or
adcl
push
pushf
sti
push
xor
aad
lret
mov
pop
cmpsb
in
icebp
nop
arpl
inc
mov
sub
repz
mov
in
gs
pushf
outsl
int
fstpt
cmpsl
ret
call
leave
insb
loope
adc
xor
ja
mov
xchg
stc
imul
das
mov
leave
pop
cmp
js
mov
inc
mov
lock
xchg
outsb
fists
test
sub
and
xor
and
cmp
inc
add
cmp
mov
ret
add
sbb
js
divl
jl
movl
adcl
test
adc
or
mov
dec
into
pop
cmp
ds
notl
cmp
dec
jmp
mov
adcl
test
adcl
in
jge
mull
mov
xchg
repz
int3
adc
std
insl
std
test
setl
push
movsb
or
shlb
roll
sarl
sub
lds
lods
add
xchg
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
mov
and
cwtl
das
cmp
cmp
test
jecxz
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
aas
movsl
xor
or
mov
mov
add
dec
fstpt
push
xor
sub
adcb
subb
ja
loope
into
dec
fidivrs
mov
inc
aad
dec
mov
std
adc
ret
aad
dec
scas
ds
inc
mov
insl
pushf
outsl
inc
roll
aad
mov
in
aad
sub
pop
xor
pop
fwait
setg
or
jg
arpl
xchg
gs
push
mov
jno
jecxz
cmp
inc
fisttpl
dec
adc
inc
xor
ret
pop
into
test
imul
stos
into
cmp
imul
les
pop
leave
test
nop
xor
push
xchg
add
sahf
jbe
fisttpl
fnstsw
into
dec
fidivrs
cltd
push
loop
ljmp
ja
xchg
testb
shlb
or
outsl
add
add
pusha
jl
pusha
pop
repnz
pop
nop
push
popa
nop
inc
inc
into
pop
cmp
adc
jae
xchg
out
adcl
test
sahf
aaa
popa
mull
icebp
dec
and
dec
fimuls
push
leave
pop
int3
stos
iretw
aam
mov
negl
mov
and
add
loope
out
mov
dec
rolb
sarb
dec
xlat
inc
and
pop
addr16
outsb
or
jg
pusha
notb
shll
shll
mov
stos
std
jns
mov
loope
hlt
xchg
outsb
mov
testl
mov
in
out
out
adc
or
cmc
gs
sbb
lret
jmp
jge
lret
fdivr
call
and
lret
and
xchg
add
add
adc
js
adc
lret
lret
lret
js
or
ja
and
mov
add
mov
std
or
adc
loop
out
jo
xchg
mov
sbb
sbb
pop
and
sub
adc
inc
shlb
or
xor
sbb
pop
iret
pop
enter
pop
xchg
add
push
int
les
push
cld
push
aaa
scas
cmp
mov
imulb
cltd
push
je
add
pop
jp
pop
jg
xchg
cmc
add
std
adcl
test
pop
iret
stos
pop
sbbb
adc
adc
push
push
rolb
shlb
mov
movsb
ret
ds
cmpsb
sub
lds
lret
inc
mov
mov
mov
in
loop
je
fsts
lods
pop
cli
pop
mov
jns
pop
pop
ja
enter
add
in
lret
sbb
or
or
or
or
lret
or
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
cmp
add
ja
adc
js
mov
lret
lret
add
pop
loop
adc
or
or
or
or
or
lret
lret
sub
or
out
das
pop
inc
and
jns
loop
pop
loop
jb
ja
loope
enter
pop
jmp
mov
xchg
mov
scas
aas
pop
test
ljmp
rorl
push
popa
nop
jb
rcll
sub
xchg
add
jns
jg
mov
ret
xchg
gs
ret
push
lds
sub
pop
scas
cs
xchg
mov
out
adc
adc
mov
xor
jbe
popa
add
sbb
and
mov
movsb
push
mov
dec
fstpt
daa
inc
mov
ficoms
mov
insl
hlt
pop
rcrl
dec
fstpl
jecxz
cld
fwait
jbe
mov
xchg
mov
jns
and
gs
dec
xchg
add
out
jg
jmp
xor
cmp
jp
nop
push
popa
nop
aaa
jmp
mov
xor
dec
fdivrs
and
pop
stc
gs
pushf
outsl
ljmp
pop
fdivl
in
dec
lret
lret
push
xor
es
inc
and
cmp
mulb
jp
in
cmp
pop
aas
lret
icebp
popa
add
sbb
je
lea
cltd
or
jnp
or
rorl
dec
mov
cmp
shlb
jl
add
xor
inc
and
shll
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
nop
add
push
test
push
scas
movsb
cmp
das
mov
out
adc
inc
jns
arpl
cmc
inc
enter
les
xor
or
xor
mov
adc
ja
aaa
or
mov
add
pushf
xor
inc
stos
xor
cmpsb
xor
scas
inc
das
mov
inc
mov
loop
adc
add
mov
fisubs
xchg
mov
inc
cmc
je
lea
test
jge
jb
lea
rclb
xor
jle
push
adc
push
xor
and
inc
xor
xor
push
lds
int
addr16
popa
icebp
nop
arpl
call
repnz
push
cld
or
lock
repz
insl
fisubl
gs
push
sti
insl
std
test
pop
int3
inc
and
push
xor
sti
sahf
insl
mov
pusha
pop
repnz
fs
push
cld
pop
push
push
neg
ja
ljmp
push
add
add
inc
or
js
push
push
in
lret
lret
push
add
add
cmp
js
icebp
hlt
cld
leave
in
lret
lret
add
or
mov
dec
int
lock
ja
repz
cmc
cmp
mov
dec
mov
jmp
add
adc
sub
cmp
push
cmpsb
and
gs
pushf
outsl
test
fstps
dec
fnstsw
pop
aam
sub
ja
loope
orl
push
add
fdivrs
into
test
adc
aaa
aas
lods
and
sbb
xor
scas
add
mov
inc
xlat
inc
and
jbe
imul
insl
fdiv
popa
icebp
nop
arpl
pop
lds
iret
push
lret
push
mov
jecxz
jne
addr16
insb
or
out
mov
in
sbb
stos
cmp
jbe
cmpl
or
in
cld
cmp
js
outsl
or
loop
arpl
xchg
gs
push
and
jp
mov
add
xor
lret
sbb
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
cmp
add
ja
xor
js
pop
lret
push
in
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
push
inc
or
in
lret
sti
jle
mov
arpl
jle
imul
ret
mov
xor
sbb
or
or
or
or
or
or
fcoml
lret
or
or
or
or
adc
or
or
or
ljmp
lret
or
or
or
adc
lret
adc
or
mov
add
ja
xor
js
xor
add
lret
adc
add
ja
cmp
js
add
fcomps
lret
lret
add
pop
loop
adc
add
add
add
add
add
lret
lret
movsb
inc
or
in
lret
cmc
jl
jne
ja
cli
push
mov
jg
pop
orl
dec
fdivrl
inc
and
push
fs
pop
jp
test
in
sbb
pusha
mulb
dec
pop
into
pop
cmp
jg
sbb
aad
xchg
xchg
add
std
or
std
gs
pushf
outsl
scas
push
addr16
sbb
jo
jne
bound
xlat
mov
enter
fstpl
sbb
xchg
pop
or
addr16
sbb
add
ret
and
cmpsl
aaa
push
mov
sti
push
rcl
lds
adc
or
ret
inc
int3
inc
and
xchg
repnz
mov
test
cmp
dec
fistpll
cltd
push
dec
mov
dec
mov
lds
pusha
icebp
popa
add
pop
inc
rolb
shlb
mov
mov
mov
sbb
jl
ds
cmp
sbb
xor
popa
lods
push
int
and
aaa
rorl
mov
sbb
lds
iret
dec
push
xchg
pop
bound
jp
dec
into
pop
cmp
jp,pt
push
insb
loop
je
dec
leave
pop
cmp
aaa
hlt
jno
xorb
xchg
mov
xchg
or
je
sub
or
fisttpl
fnstsw
push
xchg
add
pop
jp
xor
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
mov
out
movsb
ret
ds
mov
lcall
es
jl
bound
lret
cmc
jg
jg
jmp
add
push
arpl
gs
dec
push
shlb
stc
or
sub
sub
sbb
sbb
lds
scas
pop
fnsave
and
mov
cmp
and
pop
cmc
inc
lret
pop
ds
mov
mov
jmp
push
scas
pop
fcompl
stos
pop
testl
popf
insb
mov
lret
fidivrs
mov
inc
aad
dec
cltd
ss
mov
test
pushf
xor
adc
fs
popf
insb
lds
test
or
mov
jae
jp
in
inc
stos
cmp
cmc
gs
pop
sahf
add
std
or
inc
fisttps
flds
xor
inc
fmuls
fdivs
int
shll
mov
fdivrs
inc
sub
xor
loope
rolb
inc
stos
repz
mov
xchg
push
test
push
leave
addb
or
add
pop
jb
addr16
xchg
cmc
add
insb
in
sbb
nopl
ja
insb
or
cmc
dec
fistpll
ja
mov
sub
sub
and
add
sbb
sbb
adc
adc
push
jecxz
push
in
xchg
push
mov
es
ja
xorb
mov
dec
mov
cmp
jle
in
sbb
pop
sub
inc
mov
icebp
aad
shlb
loope
jae
push
xchg
add
ss
test
jge
dec
iret
push
lret
mov
leave
cmp
negb
out
out
mov
xor
fbld
xchg
gs
push
fwait
or
jae
sub
xchg
ja
xor
mov
stc
out
pop
fstpt
pop
repnz
fs
gs
adc
sbb
mov
dec
mov
mov
or
js
std
insl
hlt
pop
loope
xchg
add
cmc
jns
mov
mov
std
or
mov
xchg
repz
int3
inc
int
and
jb
sbb
jb
xchg
mov
sbb
fdivrl
inc
es
fs
popa
add
pop
imul
mov
lea
mov
adc
sbb
xor
aas
cmpsb
xor
scas
inc
pop
xchg
adc
iret
dec
mov
push
loop
adc
or
xor
lret
lret
mov
mov
pushf
sti
push
fildll
lods
and
pop
jmp
lahf
jns
outsb
or
sbb
ljmp
push
test
xchg
repnz
les
mov
cmpsl
popf
adc
nop
sbb
adc
inc
and
sub
xchg
push
ja
jmp
xor
push
add
add
inc
or
js
add
pushf
enter
in
lret
push
add
add
inc
or
js
repz
imul
or
loop
or
mov
mov
xchg
xchg
icebp
add
fcompl
test
mov
push
aaa
ret
mulb
push
test
pop
inc
and
cmp
mov
dec
mov
aad
xlat
cmp
push
dec
push
xor
sbb
cltd
or
pop
sub
inc
xlat
inc
and
imul
and
sbb
add
push
loopne
xchg
add
cmp
es
mov
repnz
pushf
outsl
lret
jns
jmp
and
add
lods
cmp
push
lret
fstpt
jbe
loopne
cltd
sbb
xchg
pop
bound
dec
mov
inc
mov
addb
or
cmpsl
and
inc
aad
dec
mov
lods
inc
add
sbb
xchg
gs
std
test
xchg
pushf
sti
push
repnz
or
push
ss
or
adc
push
mov
scas
lret
orl
add
lcall
loope
jae
scas
lods
lret
inc
out
fmull
mov
add
cmp
imul
insl
fcoml
lods
xchg
mov
and
imul
arpl
xchg
mov
lea
cmp
pop
jp
pop
dec
iret
pop
cmp
aas
inc
push
xor
daa
jecxz
lock
bound
testl
dec
popf
daa
mov
addb
jl
jne
ja
push
les
in
mov
dec
mov
and
ja
inc
fidivrl
mov
and
pop
mov
cmp
add
jo
loop
pop
call
lods
pop
mov
addr16
cmp
movsb
add
mov
push
mov
jmp
call
fs
popf
insb
fstpl
sbb
and
mov
test
adc
flds
mov
mov
shll
fidivl
pop
rclb
inc
push
xor
cld
call
and
lret
and
xchg
add
add
inc
or
js
push
lret
lret
mov
push
inc
or
mov
add
lock
in
push
ret
cmpsb
push
lcall
xor
push
mov
mov
out
jl
testb
jbe
cmpl
sub
fisttpll
out
mov
scas
leave
cmp
pop
aad
sub
aas
jmp
mov
dec
fnstcw
dec
sub
jg
mov
xchg
inc
aaa
mov
xchg
pop
mov
pushf
push
fwait
or
xor
outsb
or
dec
loop
loope
jae
pop
mov
aad
push
in
xchg
ja
mov
adc
xor
sub
sub
and
or
sbb
sbb
adc
adc
repz
pushf
outsl
fidivrl
xor
mov
cmp
lds
iret
push
sub
stc
lock
bound
jae
jmp
loopne
jb
int3
push
shlb
xor
dec
lahf
and
pop
bnd
xchg
lret
dec
fdivrs
mov
pusha
notb
adc
mov
nop
push
popa
nop
js
cli
push
inc
mov
mov
outsb
mov
lods
cmp
mov
inc
mov
mov
loopne
mov
xchg
push
aaa
mov
rcll
push
out
pop
repnz
fs
push
mov
es
dec
fisttps
cmpsb
xor
scas
pop
outsl
lcall
mov
cs
push
adcl
les
int3
jo
sti
test
mov
and
lds
and
sub
cmp
jno
cmp
or
leave
sahf
ljmpw
adc
adc
ja
dec
or
mov
mov
jno
jae
push
mov
orl
jmp
push
in
sub
jo
loop
cmp
hlt
gs
pushf
outsl
lret
pop
leave
test
call
mov
insl
stc
imul
repz
gs
addr16
dec
pop
xchg
add
xor
lcall
rorl
mov
fidivrs
cmc
pushf
outsl
ljmp
push
rolb
rcrb
lahf
sbb
aad
int3
jno
addr16
pop
cmc
je
lea
push
lret
mov
xor
mov
mov
mov
inc
iret
pop
cmp
and
xor
inc
aam
dec
stos
loop
stc
cwtl
imul
out
in
clc
lahf
push
xor
addr16
into
test
inc
and
jbe
ljmp
enter
out
add
ja
add
mov
shll
jnp
in
add
outsl
or
loop
sbb
mov
sbb
arpl
xchg
mov
nop
push
popa
nop
arpl
mov
jg
push
xor
sbb
or
add
add
add
add
or
fcoml
lret
add
add
add
add
adc
add
add
add
ljmp
lret
add
add
add
adc
lret
adc
add
adc
add
ja
push
or
js
aaa
jbe
cmp
lret
lret
mov
add
ja
sub
js
iret
cld
fwait
in
lret
lret
add
pop
loop
adc
or
or
or
lret
lret
lret
lret
pop
inc
or
in
lret
inc
int3
inc
and
cld
fwait
jbe
pushf
adc
fwait
or
dec
push
fisttps
fldenv
sti
pop
sbb
sbb
xchg
and
insb
or
scas
hlt
fs
popf
insb
data16
xchg
outsb
mull
xchg
popa
fdivrp
insl
std
test
sti
insl
std
test
adc
cwtl
push
imul
es
les
xchg
add
jns
cs
movsl
xor
mov
xchg
pop
rclb
mov
aad
dec
movsl
adc
jns
dec
fstpt
and
data16
inc
mov
push
sbb
scas
aas
pop
test
jo
arpl
xchg
pop
bound
arpl
in
pop
mov
jg
aam
into
test
sbb
adcl
jno
xorb
icebp
popa
add
inc
hlt
imul
insl
ret
lret
in
nop
add
mov
mov
dec
fnstsw
adc
movsb
ret
fdivl
and
pop
cmp
dec
aam
sub
out
mov
divb
jl
cmp
stc
jg
mov
mov
stc
jge
je
jnp
stos
cmp
jl
in
sbb
notb
popa
add
add
shrl
jbe
loopne
js
addr16
or
sti
imul
pop
mov
in
rcrb
ja
cmp
mov
dec
or
mov
addl
xchg
adc
sbb
es
sbb
and
mov
and
cmp
mov
dec
test
mov
je
jbe
pop
iret
stos
pop
rcrb
and
add
sub
adc
in
sbb
ja
jnp
in
pop
cli
outsl
lcall
js
ljmp
sub
fs
dec
add
mov
inc
mov
pop
mov
jg
sub
cld
aas
pop
test
jge
outsb
cmpsl
cmp
mov
sahf
add
xchg
add
adc
fimuls
das
les
mov
sbb
fdivl
in
fstps
xchg
addr16
cmp
icebp
jnp
mov
out
push
lahf
push
movsl
sub
enter
inc
mov
dec
scas
stos
and
push
xor
push
sbbl
jnp
insl
std
test
lods
lods
lret
inc
lock
xchg
in
ljmp
sub
dec
xlat
inc
xlat
mov
in
loope
jae
mov
mov
and
adc
ds
mov
mov
lahf
punpckhdq
repnz
sbb
push
xchg
mov
sbb
orl
clc
lahf
push
push
les
dec
sub
popa
add
pminsw
xchg
lock
lea
adc
xchg
or
outsl
and
cmp
jae
xchg
into
inc
aad
dec
mov
loope
xlat
pop
into
test
arpl
cmc
xor
jo
xorl
cwtl
cs
mov
outsb
cld
fwait
jbe
rolb
mov
call
xchg
and
jp
in
inc
fwait
or
ret
lods
pop
cli
sub
jle
lahf
punpckhdq
ds
inc
fmuls
fdivs
rcll
cmpsb
push
aam
xchg
add
les
int3
add
lea
test
jge
imul
inc
fmuls
push
jecxz
mov
arpl
xchg
mov
out
xor
stos
xor
mov
inc
fistpl
mov
stos
das
mov
lcall
mov
and
jg
mov
mov
xchg
adc
push
popa
nop
gs
addr16
pop
xchg
or
dec
ja
mov
sub
sub
and
add
sbb
sbb
adc
adc
pop
xlat
inc
and
sub
leave
pop
cmp
sub
cmp
dec
mov
fwait
decb
lahf
push
jmp
cli
popf
insb
mov
push
les
mov
call
int3
xchg
add
jl
bound
es
mov
enter
data16
mov
popf
mov
mov
dec
adc
inc
mov
in
fiaddl
mov
lods
insl
sti
imul
adc
inc
and
cmp
dec
fstpl
sub
cmp
stc
and
xor
add
jp
jp
ficompl
fs
divl
xorb
mov
dec
mov
movsl
push
cmpsl
or
fdivr
call
and
lret
and
xchg
add
add
xor
js
mov
lret
lret
sub
or
ja
mov
mov
add
add
mov
cli
dec
popf
jmp
imul
pop
ljmp
mov
add
push
lahf
push
mov
inc
mov
add
add
jmp
sbb
hlt
xchg
outsb
leave
or
mov
add
stos
sub
lds
fcompl
jmp
mov
jmp
sub
jmp
sahf
cmp
lea
add
add
jmp
rclb
pop
test
pusha
mov
mov
jmp
pop
call
jmp
adc
or
jecxz
imul
jmp
call
jmp
int3
popf
mov
add
or
cmpsb
push
imul
add
add
jmp
call
jmp
gs
jl
notb
loopne
adc
add
addl
mov
movzbl
add
jmp
mov
call
jmp
outsl
out
adc
sbb
jmp
pop
cmp
jmp
fcomps
jmp
int3
popf
xor
mov
xor
add
pop
iret
stos
pop
mov
or
jo
mov
and
cmp
jne
jmp
jge
addr16
cmp
add
add
lea
jmp
call
jmp
lea
xchg
icebp
add
mov
jmp
into
lret
cmp
pop
ret
add
add
cmp
add
rolb
mov
hlt
xchg
jno
add
push
jmp
roll
mov
jmp
scas
aas
pop
test
dec
mov
shlb
nop
jae
je
popa
mov
jmp
pop
mov
jns
and
mov
test
in
je
add
jmp
inc
rolb
shlb
cs
nop
push
popa
nop
jb
cmpsb
xor
scas
inc
or
clc
jmp
push
jmp
pop
lds
iret
and
cmpsb
and
sub
shr
add
add
cmp
iret
add
pop
xchg
pop
xchg
adc
insb
lea
sar
inc
adc
pop
fiadds
push
mov
test
je
mov
cmpl
je
jmp
adc
int
fnstcw
je
lea
call
push
jmp
cmp
insl
fistps
test
lods
pop
fisttpll
out
inc
iret
pop
cmp
and
test
mov
jmp
lret
mov
lods
out
cld
fwait
jbe
lea
std
or
sub
cmc
cmpl
jmp
cmpsl
sub
or
popf
adc
jmp
bound
pop
sub
add
xchg
popf
pushl
jmp
mov
mov
and
and
add
add
xchg
add
add
mov
clc
push
fmuls
mov
or
jmp
int
enter
add
dec
sbb
and
xchg
add
add
sahf
or
cmpsb
adc
or
mov
es
insb
loop
je
mov
mov
cli
lcall
shlb
pop
jmp
jmp
call
jmp
out
jbe
cmpl
lea
jmp
mov
jmp
cltd
add
mov
dec
mov
test
ljmp
stc
into
sub
call
push
pop
lea
jmp
movsb
and
fisubrs
jmp
call
jmp
adc
cmpl
adc
jle
add
mov
movsb
ret
ds
pop
fmuls
fdivrs
fisubs
je
mov
xor
call
push
lea
jmp
cmp
push
jmp
lea
jmp
out
notb
mov
test
cmp
ficoml
mov
test
push
add
jmp
les
movsb
push
mov
lahf
punpckhdq
xorb
aad
sub
jp
xlat
sbb
pop
jmp
call
jmp
insb
loope
adc
xor
push
jmp
test
add
sub
add
xor
ja
push
hlt
jg
je
adc
pop
fildll
pushl
jmp
push
jmp
les
lods
pop
hlt
xor
sbb
pop
int
addr16
repnz
popf
insb
fnstsw
decl
cwtl
push
imul
dec
pop
lea
jmp
mov
xchg
add
std
or
fisttps
mov
sub
js
add
jmp
ret
pop
into
test
lds
xor
es
or
mov
jmp
insl
jmp
mov
jmp
call
jmp
dec
fisttpl
fstpl
fidivrs
arpl
cmc
sbb
jb
xchg
lret
mov
add
push
jb
incl
jne
jmp
rclb
mov
dec
sub
push
call
jmp
cwtl
push
mov
es
push
imul
add
add
pop
cmp
and
pop
jb
lea
call
lea
push
jmp
mov
xchg
lock
adc
or
rclb
and
rolb
shlb
pop
lea
jmp
xchg
pop
jmp
es
jmp
add
cs
leave
pop
cmp
sbb
inc
and
aam
or
mov
xor
mov
sub
inc
cmp
jmp
mov
jmp
push
jmp
and
xchg
mov
sbb
jp
movsl
xor
int
xchg
lret
mov
add
pusha
cmc
gs
push
cmp
ljmp
shlb
rcrb
mov
sub
inc
cmp
jb
jmp
out
je
lea
roll
shll
mov
push
add
lea
call
pop
test
jmp
mov
mov
ljmp
lcall
pusha
lds
push
jmp
mov
and
outsb
or
xor
test
jge
fs
jl
jne
insb
repz
inc
jmp
sub
push
aad
shll
cld
jmp
add
std
jg
mov
out
lock
bound
add
sahf
jb
ja
mov
sub
sub
and
or
sbb
sbb
adc
adc
inc
int3
inc
and
push
mov
aas
pop
jmp
jmp
sub
pop
jmp
add
push
fldt
push
fmuls
fdivrs
sub
add
mov
push
lea
call
jmp
jg
add
and
or
pop
inc
mov
call
pop
xor
jmp
jmp
sub
mov
cmp
push
fmuls
fdivrs
pusha
push
cld
and
pop
jmp
cld
outsb
cld
fwait
jbe
add
add
push
pushf
sti
push
cmpsl
push
push
xor
data16
scas
mov
jmp
mov
clc
call
xchg
mov
adc
scas
cmp
repz
xchg
mov
pop
ret
jmp
fisttps
mov
mov
and
and
or
ds
jmp
dec
ja
cld
shr
sub
decl
rcrl
pop
mov
std
adc
push
xor
sub
sahf
pop
loope
xor
mov
lea
call
mov
jmp
push
roll
aad
aam
les
fnstcw
jmp
rolb
add
popa
loopne
adc
add
das
rcll
fnstsw
inc
pop
mov
mov
mov
andb
sub
jo
mov
jmp
iret
arpl
jecxz
jne
jmp
leave
dec
fdivrl
insb
or
repz
mov
clc
outsb
or
or
inc
cmp
jmp
addl
jmp
orl
adc
inc
rcrl
scas
pop
test
inc
adc
imul
push
in
dec
leave
mov
movzbl
add
cmp
jmp
cmp
ljmpw
fmull
fnstsw
cwtl
popa
jmp
jmp
imul
outsl
add
cltd
or
xor
pop
cmp
data16
xor
test
jmp
xlat
dec
mov
jmp
loope
popf
cld
jo
xorl
inc
out
pop
jl
jmp
adc
sar
sub
add
xchg
popf
pushl
mov
jmp
mov
fisubl
jmp
xor
cmpsb
xor
scas
pop
ljmp
jl
jne
and
and
jmp
push
enter
or
hlt
aas
movsl
xor
mull
icebp
pop
stos
popl
jmp
dec
mov
movsl
add
add
mov
shr
add
add
mov
push
cltd
out
jae
xchg
lahf
mov
jmp
hlt
jmp
adc
push
adc
add
pop
push
jo
xorl
add
add
push
or
leave
dec
fidivrs
fstpt
pop
lock
jmp
inc
rclb
pop
fistpl
xchg
addr16
inc
lds
iret
and
sbb
jb
push
jmp
inc
push
jmp
mov
jmp
cwtl
adc
adcl
mov
push
push
push
push
xor
push
cmp
je
mov
jmp
pop
aad
sub
jp
or
cmp
out
add
add
scas
cmp
mov
jbe
imul
mov
sbb
jmp
and
imul
jmp
push
jmp
and
cmp
jmp
cs
mov
add
shlb
mov
jmp
or
add
jmp
cmpsb
xor
ret
and
jmp
test
shll
and
jmp
jge
jne
out
cs
ret
pop
lds
iret
daa
xlat
icebp
mov
jmp
mov
movsl
cmp
jmp
cmp
adc
push
imull
cltd
push
and
dec
or
push
mov
mov
push
jmp
rcll
jmp
roll
inc
mov
hlt
pop
in
inc
rcll
sub
in
scas
call
adc
and
cmpsl
and
push
leave
push
push
call
mov
push
push
pushl
call
jmp
mov
fidivl
hlt
pop
out
stos
ss
jmp
jne
xchg
testb
popf
push
lret
popa
cli
jmp
mov
scas
lret
lret
inc
fidivrl
sub
arpl
jmp
popf
mov
pushl
jmp
jl
addr16
pop
mulb
insb
push
mov
orl
pop
mov
jmp
inc
jmp
xlat
inc
aam
dec
out
test
jge
cmp
mov
bound
push
pushl
call
mov
cmp
jne
jmp
fwait
pop
jmp
jmp
mov
mov
and
jmp
inc
mov
outsb
ds
ljmp
ret
ret
je
lea
inc
aam
dec
cmpsb
mov
ret
out
mov
push
pushl
call
mov
jmp
jmp
push
pushf
jmp
test
mov
sbb
dec
test
push
xor
sub
iret
adc
push
pusha
sub
add
xchg
popf
pushl
jmp
arpl
jno
jecxz
and
mov
int3
les
mov
jmp
repnz
add
add
pop
sahf
pop
rcrl
scas
pop
scas
mov
xor
inc
mov
mov
xor
popa
icebp
nop
arpl
hlt
pop
in
mov
mov
and
ret
jmp
fwait
sbb
push
ret
cmpsb
push
xchg
test
fs
popf
insb
lret
test
inc
adc
jp
jle
call
sub
jmp
and
jmp
adcl
loope
mov
lahf
sub
adc
in
sbb
imul
mov
andb
sub
jmp
jp
bound
mov
sbb
mov
fnstsw
cltd
roll
add
scas
inc
fmuls
fcomps
push
into
pop
cmp
xor
clc
outsb
or
adc
cmc
inc
imul
or
loop
adc
add
xor
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fdivrl
add
add
cmp
js
outsb
les
in
lret
lret
in
or
mov
aad
fnstcw
mov
add
add
sub
sub
push
test
jge
inc
xchg
adc
dec
in
int3
popf
loopne
ljmp
movsb
push
repnz
cmpsl
rorb
lea
jmp
aad
lret
scas
pop
mov
popa
icebp
nop
arpl
movsl
arpl
jp
in
cmp
or
ret
cs
mov
sbb
cld
call
and
lret
and
pop
add
add
jns
adc
adcb
in
lret
lret
jbe
or
mov
add
icebp
fdivr
jmp
je
out
push
jnp
mov
jle
imul
sbb
cmc
add
dec
icebp
leave
or
xor
xor
or
or
or
or
lret
or
add
or
or
add
or
lret
lret
xor
sub
add
ja
pop
or
js
lcall
in
lret
popa
arpl
mov
sub
clts
add
test
cli
lcall
dec
sub
std
test
mov
jmp
push
call
adc
ret
xor
add
pop
fdivr
incl
xlat
or
stos
cmp
dec
in
in
rcll
push
jmp
inc
pop
jmp
arpl
add
pop
cmp
and
add
in
pmaxsw
shl
or
add
add
sbb
lret
xor
add
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
or
inc
add
add
pop
or
js
cmp
add
lret
add
pop
loop
adc
add
add
add
lret
lret
lret
lret
mov
lret
inc
rolb
shlb
add
scas
cmp
mov
in
jmp
out
jmp
es
inc
mov
adc
cltd
add
mov
jmp
fisttpll
mov
notl
jl
divb
sub
pusha
mov
mov
mov
andb
sub
jmp
dec
enter
add
jnp
in
add
dec
pop
mov
jmp
int
ret
cmpsb
push
mov
aas
fsubs
jbe
loopne
cmc
jb
xchg
jae
mov
ret
xchg
stos
lods
mov
sub
push
shll
int3
aas
aad
lock
add
mov
inc
mov
adcb
roll
add
stos
mov
cmp
jmp
in
cmp
clc
int3
inc
fisttpll
jmp
cmp
jmp
jecxz
stc
cwtl
imul
in
adc
lock
sub
add
xchg
popf
pushl
jmp
mov
outsl
jmp
stc
jbe
cmpl
jne
mov
jnp
fs
pop
mov
mov
and
add
add
mov
movzbl
add
jmp
xor
xor
test
jge
cmp
mov
sti
mov
jmp
mov
addr16
xchg
lea
jmp
add
add
and
cmpsb
xor
scas
pop
stos
cmp
and
mov
jmp
out
loope
jae
adc
jmp
ljmp
sahf
insl
test
mull
icebp
sbb
sbb
add
mov
and
test
xor
int
mov
cmp
scas
cmp
mov
add
xchg
cli
sub
popl
jmp
cmp
sub
push
xor
push
push
cmp
je
jmp
mov
and
daa
inc
mov
xchg
adc
in
sbb
inc
push
xor
daa
lods
dec
inc
mov
add
jmp
push
jmp
lds
dec
test
xor
pop
fisttpll
out
adc
and
or
add
lret
or
or
or
lret
add
fcoml
lret
or
or
or
lret
adc
or
or
or
fsubr
idiv
incl
or
or
or
or
lret
adc
lret
adc
add
add
add
and
fmull
add
add
data16
js
lahf
test
in
lret
jnp
or
mov
lods
pop
mov
in
cld
loop
push
cli
pushl
jmp
jecxz
lcall
push
gs
pushf
outsl
mov
push
lds
jmp
jb
xchg
cmc
add
in
clc
lahf
push
jae
insl
hlt
pop
das
repnz
lods
pop
xor
xor
or
add
add
add
or
or
or
or
or
or
add
or
lret
xor
sub
add
ja
je
adc
mov
lret
lret
or
add
ja
jne
adc
cmp
push
in
lret
lret
dec
jne
adc
popf
pop
call
jmp
mov
xchg
lock
popa
jb
in
jbe
test
movb
add
jp
jp
pusha
mull
icebp
push
and
add
dec
sub
dec
ffree
call
mov
mov
push
mov
mov
jmp
jle
js
ljmp
js
fmuls
fcomps
pop
lret
call
jmp
sbb
jb
js
ljmp
mov
inc
cmp
sbbl
test
call
pushl
mov
lea
jmp
or
adc
jecxz
notl
sbb
std
add
add
mov
jg
bound
mov
add
call
jmp
and
cmp
inc
mov
lahf
cli
or
dec
roll
aad
xlat
mov
es
rorb
xchg
adc
add
add
enter
cmp
jmp
into
dec
fistpll
jne
jmp
rcll
lods
pop
test
aad
sub
xor
cmp
aaa
clc
lds
sub
add
jmp
pop
xlat
inc
and
cmp
jge
je
jbe
arpl
xchg
les
fldt
jnp
pop
jmp
sbbl
jmp
pop
cmp
lods
cmp
jmp
sbb
inc
xor
push
lds
adc
insb
loop
je
es
rolb
add
lea
jmp
int3
pop
int
addr16
mov
mov
sbb
dec
lea
jmp
mull
xchg
outsb
lret
xchg
fs
fdivl
in
test
mov
call
mov
jmp
sbb
clc
jmp
add
add
add
jmp
dec
fldt
pop
iret
stos
pop
rcrb
sbb
dec
sbbb
call
aaa
and
sbb
ret
pop
or
mov
jmp
into
cmp
ljmp
test
jmp
jecxz
adc
add
and
das
mov
xor
fucomi
jne
cli
jmp
movl
mov
data16
adc
push
mov
pushl
push
push
call
push
lea
push
pushl
jmp
mov
stos
into
cmp
out
sbb
add
mov
ret
je
xor
mov
lea
lea
jmp
and
or
fcoml
pop
mov
fsubs
cli
jmp
sti
jb
xchg
pop
call
xor
jmp
cmc
jns
mov
call
mov
sub
icebp
jl
jne
and
dec
sub
jmp
movsl
xor
mov
das
mov
test
in
jmp
push
lds
xor
je
arpl
xchg
gs
adc
jmp
add
push
popa
nop
daa
mull
icebp
pop
test
repnz
test
jge
outsb
inc
jp
xchg
ja
fs
mov
push
adc
in
mov
neg
mov
inc
cmp
jl
lea
jmp
xor
and
pop
inc
jecxz
push
in
and
mov
cli
jmp
pop
push
xor
dec
push
roll
aad
rcll
mov
ss
push
jmp
cmp
jmp
inc
push
push
push
jmp
mov
jmp
and
inc
adc
or
add
jbe
dec
repnz
std
call
sbb
lret
sub
push
add
add
addr16
js
cli
ja
movsl
in
lret
lret
icebp
insl
or
mov
aaa
lret
cmpsb
daa
mov
and
mov
ljmp
mov
sbb
dec
enter
and
inc
aad
dec
mov
loope
xchg
cli
orl
adc
ja
outsl
or
mov
add
add
cld
call
and
lret
and
sub
add
ja
push
stc
fldcw
in
lret
lret
pop
ja
adc
mov
ret
ret
out
jl
notb
cmp
ljmp
ja
decl
sbb
inc
add
dec
ljmp
mov
jmp
sub
inc
add
and
dec
sub
daa
imul
mov
cwtl
pusha
lock
inc
out
in
jg
aaa
add
jmp
mov
jmp
xchg
add
mov
call
jmp
lea
aad
lea
jb
in
in
jns
mov
or
and
mov
jmp
and
jge
add
subl
jmp
sbb
pop
jp
xor
cli
xchg
cmp
je
mov
add
mov
mov
add
mov
jmp
mov
and
repz
jmp
cltd
pop
xchg
repnz
pop
ret
ret
sub
lds
mov
call
cmp
je
push
call
jmp
stos
cmp
into
cmp
jne
cmp
jmp
loopne
lock
bound
dec
movsl
sti
jns
mov
and
cmp
jmp
and
mov
outsb
out
jg
jmp
cmp
jmp
jne
jmp
mov
stos
into
cmp
aad
int3
cmp
and
mov
repnz
xchg
cmp
je
push
call
mov
jmp
rcrl
stos
pop
sbbl
and
sub
push
pusha
add
add
add
xchg
inc
int3
inc
and
xchg
testb
loop
push
fnstsw
faddl
add
fdivr
call
and
lret
and
mov
add
ja
pusha
or
js
mov
lret
lret
insb
add
add
arpl
js
imull
in
lret
lret
aas
push
push
lds
xor
push
dec
cmp
jmp
cmp
and
inc
roll
shll
push
shlb
je
jmp
movsl
mov
jmp
adcb
jecxz
test
mov
xor
leave
mov
jmp
push
adcb
jmp
aam
frstor
pop
mov
mov
rolb
pop
mov
jmp
xchg
mov
cwtl
sub
add
jmp
bound
adc
cmp
jmp
xor
hlt
imul
dec
fidivrs
mov
call
push
mov
jmp
ret
mov
cmpsl
pop
fmuls
fdivs
addb
lock
mov
add
jmp
in
imul
fimuls
xor
add
add
std
cmp
je
jmp
or
inc
call
cmp
je
push
call
jmp
je
jmp
iret
dec
fdivrs
inc
and
sub
cli
push
gs
out
cmp
jmp
dec
push
xor
sub
push
jmp
push
jmp
iret
inc
aam
dec
mov
push
test
pushf
dec
fisttpl
int
push
dec
cli
jmp
mov
and
pusha
dec
cli
jmp
hlt
js
mov
dec
fnstcw
addr16
dec
mov
inc
adc
outsb
call
push
jmp
roll
mov
jmp
and
cwtl
pop
add
add
add
mov
and
pop
in
outsb
out
movzbl
add
cmp
je
jmp
aad
shlb
lods
lret
inc
icebp
cmp
aas
pop
test
imul
adc
lea
call
push
call
mov
jmp
aaa
mov
inc
mov
lds
sbb
xchg
add
test
sbb
sbb
xchg
or
in
cld
and
fisttps
jmp
pop
xchg
jb
or
scas
cmp
mov
nop
adc
push
leave
xor
test
cmp
jne
cmp
jmp
mov
jmp
mov
loopne
cs
jmp
lea
pushf
sti
push
cld
jl
jne
insb
mov
stos
int
fsts
inc
and
data16
lds
cwtl
cmp
add
jmp
mov
jmp
mov
jmp
or
sbb
loop
cmc
pushf
outsl
test
fnstcw
je
sub
cld
call
and
lret
and
inc
add
add
push
adc
jg
ja
in
lret
lret
scas
push
inc
cmp
jmp
mov
xchg
repnz
pop
lea
sbb
rorb
push
call
jmp
cmp
push
jnp
in
aas
adc
out
test
jmp
lock
jne
inc
nop
and
das
mov
cs
push
pushf
je
jmp
fwait
or
inc
call
jmp
call
adcb
sbb
sbb
insl
ljmp
stc
mov
pop
arpl
mov
jmp
mov
mov
das
mov
mov
jmp
sub
add
out
jg
jmp
or
pop
cmp
jmp
add
push
adcb
addb
cli
push
jmp
push
in
and
je
jmp
push
xor
jns
cmc
gs
adc
lds
xchg
adc
mov
dec
mov
lds
test
jmp
mov
xchg
rclb
mov
out
mov
or
jp
out
push
jmp
mov
lods
mov
cmpsl
mov
shlb
sbb
adc
hlt
mov
jmp
lret
mov
ret
cmpsb
push
xchg
ja
loope
je
cli
jmp
ljmp
cmp
add
stos
and
and
sub
outsl
mov
push
push
push
lea
call
push
call
mov
jmp
mov
jmp
pop
call
jmp
ds
cmp
mov
rolb
mov
out
fwait
or
sub
sahf
jmp
adc
adc
sub
jns
mov
mov
nop
or
add
sarb
jne
addl
mov
jmp
repz
xchg
or
pop
and
push
adc
jmp
pushl
jmp
int
lret
mov
stc
imul
sub
ds
jmp
fmull
test
jmp
in
insl
std
test
sbb
dec
sbb
jnp
push
aas
sbb
jbe
pushl
pushl
jmp
imul
jo
jmp
push
nop
push
popa
nop
outsb
mov
call
cli
jmp
mov
sahf
stc
or
movl
cmp
sub
lret
jmp
mov
jmp
enter
inc
mov
xor
mov
into
sub
mov
mov
jmp
aas
mov
inc
mov
mov
xchg
lock
sub
repnz
int
mov
jmp
cmp
lret
jmp
adc
push
mov
jmp
out
lock
lds
imul
dec
push
outsl
or
scas
rolb
mov
icebp
in
jbe
pushl
push
pushl
pushl
jmp
aad
fidivrl
cmpsb
shll
in
loopne
jb
and
lea
pop
pushl
jmp
lds
mov
mov
lea
cli
fptan
xor
cld
call
and
lret
and
xor
add
ja
ja
adc
mov
lret
lret
hlt
jae
adc
cld
push
stos
xor
and
push
pushf
jmp
xchg
addb
call
add
jmp
pop
ret
ret
xor
adc
pop
in
inc
and
jmp
xchg
pop
xchg
adc
popa
loop
pop
loop
pop
fisttpll
out
fs
push
in
push
mov
jl
xchg
lock
lcall
ficompl
int
test
add
push
pusha
jmp
mov
fisubs
dec
adc
inc
insl
call
add
loopne
stc
cwtl
imul
imul
jmp
pop
mov
xchg
orb
adc
ja
outsb
or
sub
push
les
inc
mov
jmp
arpl
mov
jmp
pop
mov
jg
sub
add
cmpsl
add
add
sahf
add
xchg
test
push
scas
push
loope
pushl
mov
jmp
mov
sar
inc
adc
sbb
sub
sub
or
insl
std
test
add
add
fisubs
pusha
pop
repnz
inc
inc
and
jns
add
popf
or
xor
scas
andb
jmp
and
push
xor
cli
popf
insb
test
dec
sub
jne
mov
jbe
push
pushl
pushl
call
jmp
imul
or
jo
mov
and
cmp
jne
addl
jmp
movzbl
jmp
mov
mov
jne
mov
xor
sahf
out
iret
inc
mov
add
jmp
jg
insb
or
jecxz
adc
mov
add
rol
xor
cld
call
and
lret
and
add
add
push
loop
mov
in
lret
cltd
jno
adc
lahf
mov
fdivrs
out
jo
imul
mov
scas
lret
jecxz
stc
cwtl
imul
adc
add
add
jae
adc
push
pop
ds
in
lret
lret
int3
ja
adc
popa
pushf
dec
cmp
jmp
cmp
mov
xchg
lock
cmp
cmp
int3
mov
call
sbb
lret
xor
and
add
ja
jae
adc
xor
lret
lret
iret
jle
adc
cmp
inc
rolb
shlb
cltd
or
xor
outsl
imulb
je
popa
mov
jmp
popl
jmp
sbb
or
insl
stc
imul
jmp
push
jmp
and
jmp
mov
mov
jg
mov
mov
mov
and
and
call
jmp
cmpsl
cmp
mov
cmpsb
loopne
out
mov
out
in
je
insl
add
mov
jmp
mov
cmpsl
jle
ja
loope
clc
jp
jp
pop
pushf
xor
dec
stos
testb
in
faddl
add
jmp
push
aad
sub
xor
fidivrl
inc
ret
ret
ja
orl
or
mov
lret
push
push
shlb
faddl
add
add
lret
xor
orl
xchg
lea
pop
push
jmp
lea
jmp
int3
inc
aam
dec
mov
adc
sub
cmp
ret
jb
lea
call
lea
jmp
xlat
pop
int3
stos
xchg
fsts
lods
pop
cli
nop
cltd
lea
jmp
dec
push
xor
sbb
jmp
mov
jg
arpl
cmc
inc
mov
xor
rclb
cli
lcall
call
push
jmp
push
lret
cmc
cmc
imul
insl
fidivl
rolb
unpckhps
jmp
ret
push
shlb
sub
push
shr
add
add
push
mov
insb
or
mov
repz
cmc
push
sub
and
mov
add
rorb
add
add
add
ds
lcall
push
xor
sub
enter
and
jo
xorl
scas
hlt
pop
jmp
pop
jmp
sbb
lret
scas
pop
fdivrl
mov
rclb
mov
push
push
push
mov
push
pop
push
mov
lea
mov
jmp
out
insl
std
test
sub
das
pusha
push
jne
mov
lea
jmp
movb
inc
jmp
inc
test
shlb
mov
jmp
sbb
test
adc
push
popa
loopne
adc
add
cli
add
push
les
mov
decl
jmp
dec
jne
jmp
and
ss
mov
and
jmp
ljmp
inc
xlat
mov
mov
push
mov
out
inc
mov
jmp
in
jecxz
jne
in
je
push
jmp
pushf
adc
jmp
shrl
push
cmp
jo
loope
adc
inc
orl
aaa
mov
pop
fisttpl
fnstsw
or
or
or
sbb
lret
fdivr
call
and
lret
and
sub
add
ja
insl
or
js
fsubrl
das
jo
lret
lret
mov
mov
mov
es
imulb
sahf
insl
ret
add
xchg
add
sub
xor
cwtl
add
add
mov
lcall
arpl
sbb
pop
xor
mov
ja
pop
or
loop
adc
or
xor
lret
xor
sub
sub
and
add
sbb
sbb
adc
adc
fsubrl
add
add
jno
adc
stc
inc
aaa
add
lret
lret
je,pt
adc
and
pop
repnz
shll
mov
movsb
cmp
outsl
dec
rolb
shlb
sub
cmp
movzwl
jmp
pop
lret
pop
ds
enter
push
mov
pop
lret
scas
pop
faddl
push
call
mov
call
mov
mov
jmp
mov
mov
movsb
ret
testl
xlat
and
inc
xorl
or
mov
mov
push
call
jmp
mov
jmp
dec
enter
sub
dec
mov
fimull
fimull
insl
mov
jmp
xor
jmp
sahf
sbb
shr
mov
jmp
fistps
scas
pop
mov
pop
xchg
repnz
mov
lods
lret
inc
movsb
sbb
or
inc
sub
mov
pushf
and
add
add
xchg
add
add
lock
bound
pop
mov
cmp
add
call
mov
call
jmp
inc
roll
aad
repz
je
inc
add
jns
cmp
xor
xor
out
add
sub
and
add
add
xchg
add
add
movsb
cmp
sbb
push
dec
stos
scas
add
adc
fisttps
movsb
push
in
roll
aad
adcb
jecxz
scas
adc
pop
je
lea
call
jmp
inc
inc
and
ja
jle
mov
je
and
adcl
adc
add
add
jmp
sbb
adc
pop
xchg
repnz
add
push
xor
mov
add
fdivr
call
and
lret
and
pop
or
mov
lcall
lret
pushl
jns
jmp
in
call
mov
sub
call
shr
add
add
or
pop
and
xor
push
xor
imul
inc
add
arpl
cli
lcall
call
push
lea
jmp
rolb
dec
lcall
subl
add
sub
movsb
pushl
jmp
xchg
in
out
aam
sub
or
jge
fcmovne
lea
jmp
rorb
dec
movsb
inc
aad
sbb
adc
xor
jb
xchg
and
and
movsl
je
xor
jmp
fcoml
mov
inc
and
addr16
scas
dec
test
lret
ds
jmp
jg
bound
jl
testb
gs
push
sub
shlb
jmp
inc
push
jae
jmp
test
and
das
dec
mov
into
cmp
cmp
or
xor
inc
add
add
xchg
add
jae
mov
cmp
mov
jb
push
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
add
add
inc
mov
addl
jmp
loope
jae
loopne
out
mov
scas
xor
mov
add
xor
or
add
jl
mull
icebp
sbb
ret
pop
ds
jae
gs
or
imul
sub
dec
dec
lret
pop
ds
das
movsl
xor
and
out
adc
dec
cmp
and
gs
out
adc
sub
add
mov
jmp
daa
andl
icebp
add
std
jl
lahf
punpckhdq
arpl
add
mov
call
test
je
mov
jmp
push
mov
call
jmp
mov
clc
jb
jmp
inc
call
jmp
mov
lods
sbb
les
mov
mov
jmp
cmp
ret
ret
jge
je
insl
sub
clc
jmp
jmp
push
fldt
jl
gs
pop
inc
int
and
xor
jno
xorb
lea
andl
lea
push
pushl
push
jmp
std
jno
xorb
call
add
add
pop
loop
loop
pushl
jmp
and
rorl
repz
or
cmpsb
adc
dec
or
add
mov
cmp
je
mov
jmp
jnp
stc
cmp
push
jmp
call
jmp
jae
xchg
mov
fwait
lock
call
jmp
adcl
out
mov
jo
pushl
jmp
lahf
setg
or
dec
loope
cmp
pop
enter
jmp
fdivr
call
and
lret
and
inc
add
add
ja
adc
mov
xor
in
lret
lret
push
pusha
or
ja
jnp
adc
add
jmp
xchg
fdivr
adc
jmp
mov
cli
in
jne
mov
loope
out
mov
sub
mov
call
pop
jmp
dec
inc
and
ss
insl
std
test
cmp
or
mov
lea
push
call
xor
jmp
jmp
xchg
pusha
out
loop
pop
loop
xor
adc
jmp
addb
lock
xor
lret
inc
jmp
jl
jmp
jo
add
sbb
xlat
je
pusha
pop
repnz
mov
jmp
negl
mov
mov
jmp
js
insl
hlt
pop
shlb
int3
dec
fistpll
pop
and
mov
enter
adc
push
adc
or
dec
incl
icebp
sbb
xchg
xchg
mov
jmp
mov
filds
clc
push
jmp
insb
jmp
push
in
sbb
push
shlb
xorl
push
sbb
lret
lret
push
add
add
fs
js
adc
cmc
in
lret
lret
adc
add
ja
jne
adc
xchg
mov
cmc
in
lret
lret
inc
test
mov
iret
dec
mov
jmp
lahf
adc
ret
ret
xor
cmp
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
std
outsb
cld
fwait
jbe
scas
lods
lret
inc
mull
popa
add
pop
adcb
sbb
inc
add
fsubrp
and
lcall
fdivp
decl
push
int3
pop
xor
pop
mov
pop
ret
jmp
add
cmp
adc
pop
stos
cmp
leave
pop
repnz
fs
bnd
push
jle
pop
jmp
add
jmp
enter
push
xchg
iret
push
lret
mov
jb
push
cltd
xor
ljmp
repnz
sub
jmp
rorb
mov
cmp
js
mov
xchg
adc
in
pushf
jmp
fistps
fs
push
ret
cmpsb
push
mov
xchg
jmp
pushl
jmp
js
outsl
or
loop
cmp
mov
inc
mov
xor
dec
and
jne
jmp
popf
jmp
sub
add
add
push
jae
fs
push
jg
imul
or
imul
sbb
stos
cmp
je
mov
add
call
jmp
hlt
jl
jne
pusha
pushf
sbb
imul
adc
mov
inc
mov
dec
ret
ret
lock
bound
inc
loop
mov
std
lock
fmull
mov
fnstcw
sbb
cmp
loop
xlat
lods
mov
mov
mov
andb
sub
jmp
popa
mov
jmp
add
xor
test
push
lds
iret
fs
sar
inc
adc
xor
push
jmp
dec
jecxz
push
in
inc
shll
icebp
nop
arpl
movsb
inc
cmp
jmp
push
and
jmp
lods
cmp
stos
cmp
inc
push
into
pop
cmp
push
xchg
add
or
xor
sub
sub
and
or
sbb
sbb
adc
adc
ja
orb
add
in
mov
jmp
fldl
mov
lds
in
jecxz
push
in
popa
out
adc
pop
jo
popl
jmp
in
insb
loop
je
mov
cmpsb
shll
pop
cwtl
push
imul
leave
ljmp
lods
cmp
jle
mov
fldcw
fcomi
jle
mov
rolb
add
jmp
rcrl
stos
pop
andl
sbb
add
gs
pushf
outsl
lret
notl
testl
add
mov
xor
mov
jmp
mov
or
cli
xor
add
and
inc
jmp
xchg
and
xchg
or
cmp
jbe
jb
jmp
push
push
xor
jns
sbb
ret
cmpsl
push
jecxz
in
sbb
inc
inc
cmp
jmp
mov
jmp
ja
ja
loope
lds
cmpsl
push
sti
enter
shll
movsl
or
decl
jne
xor
xor
xor
mov
lea
jmp
mov
mov
mov
mov
add
pop
fildll
lea
call
jmp
mov
les
or
push
add
add
inc
fidivrl
aam
dec
xchg
push
xchg
mov
add
ljmp
mov
lea
call
pop
pop
lea
jmp
ss
movzbl
jmp
imul
mov
cmpsb
shll
inc
lret
pop
ds
mov
jnp
xchg
cmc
add
les
xor
jmp
sbb
cmp
jmp
cmp
add
add
ljmp
pop
xchg
add
pusha
push
fmuls
fdivrs
movzbl
mov
push
mov
sub
pop
movzbl
xor
mov
jmp
and
decl
test
jne
leave
ret
jmp
mov
push
jmp
icebp
jg
mov
imul
pop
add
jmp
addr16
jl
testb
mov
jb
xchg
push
fdivl
in
xchg
jmp
rcrl
fs
jmp
sub
jmp
ret
push
mov
mov
cmp
inc
int
jmp
push
les
int3
gs
and
stc
jae
xchg
das
inc
jmp
xchg
popf
pushl
mov
jmp
mov
mov
sbb
out
pop
sub
inc
or
jmp
sbbb
ljmp
xchg
js
adcb
subb
cmp
sub
and
jmp
inc
fmuls
fcomps
sbb
icebp
popa
add
sbb
repnz
pusha
jmp
sbb
lahf
sub
jmp
inc
lret
pop
ds
push
rolb
rolb
sbb
push
xor
stc
and
cld
xor
add
lea
pop
jmp
movb
jmp
xchg
sbb
aad
xlat
inc
sar
inc
adc
test
mov
jmp
popl
dec
jmp
pop
rolb
shlb
test
and
divl
mov
ljmp
test
cmpl
add
jmp
ficoml
pop
sti
sbb
insb
loopne
adc
and
das
add
jmp
xor
imul
adc
add
jmp
dec
les
int3
imul
add
and
mov
jns
and
lea
pushl
mov
and
jmp
cmpsb
movsb
ret
ds
jmp
ret
and
decl
lea
popl
jmp
rolb
dec
std
jl
jns
jmp
or
push
sbb
fisubs
daa
fimull
movsb
push
bnd
lea
jmp
push
add
xor
ja
xorb
sub
pushf
push
mov
sub
push
mov
push
push
mov
lea
mov
jmp
movsl
cmp
mov
lods
mov
lods
out
jo
xorl
mov
jmp
cmp
jmp
fstps
test
nop
pop
xchg
or
je
jb
xchg
mov
vandnpd
fstps
popf
or
outsl
lcall
shlb
mov
dec
movzbl
add
cmp
je
jmp
scas
and
xor
in
cmp
test
jmp
in
loop
je
or
sbb
js
pop
xchg
repnz
push
push
jmp
push
jecxz
push
in
sbb
push
popa
nop
push
pushl
xchg
cmc
gs
pushf
outsl
fisttpl
jne
inc
andl
jmp
out
sub
jmp
add
leave
jmp
mov
jae
in
sbb
out
pushl
scas
jmp
lea
jmp
rolb
dec
std
xor
xor
ss
mov
mov
inc
push
mov
mov
push
push
pop
lea
and
sub
mov
jmp
cmp
push
or
dec
xor
dec
stc
lcall
pop
jmp
or
jmp
ljmp
lahf
push
outsl
sti
imul
cmp
stos
cmp
dec
jmp
xchg
daa
lea
jmp
xor
pop
cld
lock
in
jmp
push
in
insb
sub
cmp
mov
aas
xchg
ficoms
ret
jne
addl
mov
jmp
pop
fimuls
push
mov
stos
into
cmp
xor
sub
jae
mov
jmp
lahf
pop
add
adc
push
xor
es
mov
es
outsb
lret
mulb
jmp
cmp
push
lds
cld
jbe
cmpl
imul
insl
mov
xor
ja
mov
adc
xor
sub
sub
and
add
sbb
sbb
adc
adc
dec
push
xor
sub
mov
inc
or
call
jmp
pop
push
mov
jmp
das
cmpsb
xor
scas
pop
pushf
adc
enter
sbb
sbb
addl
add
jmp
pop
clc
mov
add
jmp
jmp
test
jecxz
mov
mov
cs
out
ljmp
pop
je
push
mov
jmp
out
in
jle
pushf
adc
es
cs
mov
mov
and
lea
jmp
ljmp
cwtl
imul
adcl
pusha
notb
stos
into
cmp
jge
jb
mov
xor
pop
jmp
jmp
push
int
and
aas
lods
ret
jmp
popf
add
std
or
pop
rclb
inc
mov
mov
sarl
sti
call
cs
icebp
pushf
sbb
xor
insb
repz
cmc
push
mov
fsubrp
jl
stc
lcall
sar
decl
jmp
ret
sar
in
leave
jg
test
jmp
sub
jge
jmp
xor
sbb
adc
lret
and
mov
jmp
es
popf
js
cmpsl
arpl
jmp
loop
clc
lahf
push
mov
and
add
jne
addl
jmp
sbb
or
push
push
divl
or
rorl
inc
mull
add
add
jmp
ret
add
add
add
add
out
sub
mov
add
cmp
je
popa
mov
jmp
int3
popf
mov
mov
test
pop
jmp
ret
dec
fdivrl
lea
jmp
popf
push
jmp
call
jmp
call
jmp
mov
mov
sbb
inc
adc
adcb
loop
mov
dec
fdivrs
jmp
mulb
pushf
outsl
les
sahf
sub
add
jmp
int3
popf
or
addb
lds
push
jmp
pushl
jmp
int3
popf
inc
jmp
push
ret
ret
aam
pop
jmp
sbb
xchg
ficoms
add
loopne
add
push
mov
jg
cmp
jp
xor
add
popa
jmp
inc
jo
jmp
int3
popf
nop
sbb
int3
mov
inc
or
add
cmpsb
into
pusha
mov
mov
mov
andb
sub
jmp
sub
pop
call
jmp
or
pop
ljmp
inc
adc
add
add
jmp
push
leave
pop
cmp
sub
iret
jp
mov
jmp
call
jmp
lret
push
shlb
cltd
roll
add
jne
addl
jmp
inc
sbb
jl
popf
dec
insl
ljmp
add
jmp
cli
cmp
fildl
add
jmp
mov
xor
jmp
int3
popf
xchg
lahf
cli
or
bound
dec
daa
jmp
stc
data16
xchg
outsb
jmp
ret
jmp
push
insl
ret
popl
jmp
xchg
push
jmp
test
loopne
lock
push
push
cmpsl
int
mov
add
adc
add
movsb
cmp
gs
lcall
xchg
xor
jmp
rolb
add
jmp
push
jmp
rcll
cmpsl
push
mov
pop
jmp
hlt
icebp
pop
push
jmp
call
jmp
out
out
das
push
int3
popf
jp
or
adc
add
aaa
mov
dec
mov
fs
jmp
call
jmp
or
jno
pop
ja
out
jmp
movb
inc
mov
mov
adc
sbb
mov
jo
in
sub
push
pushl
call
lea
jmp
push
jecxz
push
in
fstl
mov
stc
sbb
mov
jmp
mov
idiv
jmp
test
and
div
jge
je
jbe
inc
shll
test
cmp
mov
mov
jmp
push
cs
lcall
push
imul
add
mov
call
push
lea
call
jmp
dec
call
pop
jmp
inc
fisttpl
fnsave
dec
ret
in
jbe
cmpl
push
shlb
ret
jmp
mulb
xchg
popa
movb
shlb
inc
shll
lods
clc
mov
call
push
mov
jmp
inc
fimuls
and
insl
mov
pop
call
mov
js
arpl
push
jmp
insl
hlt
push
cld
adc
add
test
lret
mov
mov
mov
mov
andb
sub
jo
jmp
adc
inc
es
addr16
sbb
add
andb
push
xor
pusha
mov
mov
mov
andb
sub
jmp
js
xchg
nop
testl
xor
xchg
push
mov
es
add
jo
jmp
nop
sbb
and
inc
roll
aad
fstl
mov
mov
ret
les
mov
lret
add
and
arpl
xchg
mov
cmp
push
ss
out
cltd
roll
add
fstpt
ret
jmp
stos
cmp
push
xor
jle
mov
jle
and
jns
andb
add
add
sbb
lcall
cmp
stos
inc
roll
shll
jae
xchg
rorl
add
xor
fildl
jmp
leave
push
shll
aam
movsl
xor
adc
addl
jmp
flds
mov
test
mov
popa
test
movzbl
jmp
mov
cmp
jmp
jne
jns
jmp
test
mov
sbb
outsl
movsb
sbb
mov
jmp
sub
jnp
imul
test
cmp
cmpsb
dec
stos
test
call
add
xchg
popf
pushl
jmp
jmp
fs
pop
loop
add
adc
push
cmp
and
loopne
in
je
popa
mov
jmp
push
jmp
leave
dec
ret
mov
testb
das
les
push
mov
mov
push
mov
mov
call
cmpl
jmp
xchg
dec
fistpll
lock
bound
mov
setne
jmp
loopne
jecxz
jne
les
xorl
jmp
or
inc
inc
and
ja
or
aas
scas
lret
mov
add
lea
jmp
loopne
jmp
pop
xchg
pop
bound
testl
outsb
popf
sub
and
sub
dec
and
add
lea
mov
mov
jmp
sbb
inc
fimull
ficompl
mov
hlt
stc
jmp
mov
mov
enter
and
pop
and
cmp
testl
jmp
dec
aam
sub
int
loopw
test
pop
test
mov
sahf
stc
or
rorb
aad
add
movsb
ret
cmpsl
aaa
push
mov
shlb
div
or
mov
jmp
jg
imul
push
xor
sub
out
xchg
push
aad
jmp
imul
ret
fcmovnb
jmp
inc
into
pop
cmp
xor
adc
mov
inc
mov
jo
insb
or
mov
jmp
pop
jmp
sti
je
lea
lods
and
jbe
dec
fnstcw
ja
loope
lret
outsl
dec
pop
adc
call
jmp
adc
jmp
push
mov
lret
pop
leave
test
call
jmp
adc
insb
jmp
mov
jmp
mov
sahf
xor
cmp
mov
imul
and
iret
sbbl
jmp
jo
jmp
inc
fisttpll
out
ljmp
pop
int
loopw
rolb
rclb
ret
pusha
mov
mov
mov
andb
sub
jmp
jp
cs
dec
enter
add
add
in
add
adc
cmp
sub
push
dec
push
fisubrl
mov
ret
jb
pusha
pop
repnz
mov
inc
mov
xchg
adc
in
sbb
sbb
add
xchg
popf
pushl
mov
jmp
movb
inc
cwtl
inc
rclb
xor
scas
inc
fwait
pop
xchg
adc
jbe
movzbl
add
cmp
je
jmp
push
mov
stc
ja
xorb
sbb
aad
xlat
fsubs
rolb
add
jmp
dec
push
xor
imul
mov
ljmp
mov
add
jmp
push
fimuls
inc
nop
add
aas
scas
lret
xchg
add
subl
ret
jne
addl
mov
jmp
mov
xchg
sti
push
xor
outsl
cmpl
jne
push
push
pushl
lea
call
jmp
xor
jg
jmp
int
leave
test
call
cmc
pop
daa
mov
inc
mov
sbb
add
push
roll
aad
cmp
xchg
pop
jmp
cs
push
sahf
or
cmpsb
dec
cmp
inc
fdivl
in
jb
adc
jmp
mov
mov
out
adc
es
jp
jp
pop
fisttpll
out
jo
shr
add
add
jne
out
or
push
fs
adc
ss
mov
lea
jmp
xchg
adc
rolb
sarb
jmp
sub
add
xchg
popf
jmp
or
int
aam
dec
lods
pop
aam
sub
inc
es
leave
frstor
add
add
jmp
push
jmp
xchg
sahf
stc
or
repnz
cltd
or
pop
push
adcl
daa
jl
pushf
jmp
test
or
lret
and
jmp
inc
aad
sub
imul
das
dec
mov
popf
insb
fldl
shlb
sub
sub
scas
aas
pop
test
mov
in
cmp
or
sub
decl
mov
xchg
add
add
icebp
add
add
jecxz
mov
inc
mov
jmp
pushf
outsl
xchg
xchg
add
jns
in
jae
dec
add
sarb
add
jmp
stc
lcall
call
mov
gs
adc
and
cmp
jne
addl
mov
jmp
adc
dec
push
int
and
push
sub
lods
jmp
fcomps
scas
pop
xchg
movsl
es
movb
addl
testl
mov
add
cmp
je
jmp
mov
mov
adcb
adcb
adc
rolb
add
jmp
dec
cmp
and
fs
jmp
or
ds
cmp
xor
mov
add
jmp
xchg
push
mov
les
pop
aas
lret
enter
cmp
mov
ret
xlat
pop
iret
stos
pop
rorb
inc
xor
push
lds
lret
inc
aad
dec
fstl
mov
nop
testl
sbb
mov
out
pop
leave
pop
cmp
pusha
test
and
mov
rolb
fdivr
jmp
leave
int3
mov
sbbb
out
sbb
repnz
pop
ljmp
mov
xchg
add
add
xchg
add
jo
pop
mov
jmp
in
adc
imul
push
adcb
addb
clc
and
jns
mov
sub
je
dec
dec
je
mov
jmp
dec
pop
mov
mov
cli
jmp
sub
push
roll
rcrl
out
sti
sahf
insl
and
fcompl
xchg
sbb
or
jmp
mov
lahf
punpckhdq
jmp
jmp
fs
adc
adc
sub
lcall
inc
add
jmp
in
notl
jle
call
arpl
pushf
jmp
fstps
inc
and
jmp
push
add
and
adcl
test
popa
or
sti
jmp
shlb
xchg
gs
out
adc
sub
out
jl
notb
ljmp
stc
mov
cmpsb
mov
mov
mov
andb
sub
jo
mov
jmp
mov
jmp
inc
mov
jmp
and
xchg
push
xchg
repz
mov
mov
pusha
mulb
dec
inc
mov
xchg
mov
jmp
mov
mov
and
or
and
mov
pushl
mov
jmp
mov
into
mov
lret
enter
sub
jmp
jbe
jge
negl
ss
stc
insb
push
mov
jmp
les
test
fmulp
dec
ret
popf
scas
xor
scas
je
popa
sbb
jmp
mov
lahf
cli
or
movl
or
inc
out
lods
aad
scas
sti
jmp
mov
pushf
sti
push
rol
jecxz
cmp
jne
addl
mov
jmp
cmp
jmp
mov
mov
xchg
lock
and
cmp
insb
or
loop
mov
popf
push
mov
ja
jge
negl
loopne
jno
or
sbb
dec
fidivrs
xchg
sub
popa
mov
jmp
xor
popl
jmp
add
cs
push
test
push
lret
adc
inc
iret
lea
jmp
nop
and
xchg
or
sub
jb
xchg
push
les
mov
add
cmp
je
jmp
mulb
push
insb
push
jmp
int
leave
test
call
mov
int3
pop
into
test
push
xor
push
add
add
add
sbb
pop
lahf
mov
ret
add
jnp
jg
push
addb
jne
jmp
fldl
lods
cmp
inc
fidivrl
pop
and
push
repz
jo
jmp
loopne
lock
bound
add
iret
call
jmp
push
xlat
inc
and
aaa
xor
push
rolb
shlb
mov
test
sar
inc
adc
xor
jmp
push
mov
pop
aas
lret
xor
int
leave
sub
sti
stos
pop
jmp
jmp
das
pop
jb
pushl
jmp
ret
jmp
and
mulb
push
jmp
sti
ja
xorb
and
push
shll
adc
add
add
xchg
popf
pushl
jmp
jbe
aaa
mov
sub
loopne
adc
and
and
jmp
pushl
jmp
clc
jnp
mov
xchg
add
adcl
xor
inc
je
sub
add
jmp
cld
insb
loop
je
popa
popf
jmp
xchg
mov
jmp
fimuls
movsb
push
cld
je
jo
loop
int
enter
sbb
and
fsubr
pushf
jmp
sbbb
out
sbb
es
test
sar
pusha
notb
orb
jmp
inc
xor
mov
jmp
arpl
push
dec
frstor
in
sbb
into
cltd
push
xchg
insl
sbb
sar
inc
adc
add
das
lods
and
pop
fstps
stos
pop
jne
negb
ret
jne
addl
mov
jmp
inc
rclb
and
add
cmp
out
add
add
ret
push
lds
adcl
insb
or
repz
jo
sarb
sbb
punpckhdq
lods
pop
scas
das
movsb
cmp
dec
mov
int3
call
mov
mov
andb
sub
jo
jmp
cmp
jnp
popl
jmp
push
jmp
xor
aaa
sub
xor
add
sbb
sti
jne
mov
sti
pop
jmp
fistl
mov
fistpll
fs
sub
jmp
test
xchg
xchg
add
std
or
mov
sahf
ret
push
cmpl
jmp
rolb
dec
std
loop
jmp
jge
out
jns
mov
cmpsl
xor
scas
lea
jmp
xchg
push
xchg
repz
test
outsb
lods
adc
out
in
je
outsl
insb
je
popa
mov
jmp
imull
fwait
jbe
icebp
test
inc
in
pushf
add
add
jge
je
add
mov
lods
lret
inc
mov
rolb
add
leave
ret
jmp
mov
movl
jmp
clc
push
mov
aam
inc
or
add
add
xchg
add
lcall
xor
xchg
sbb
pop
push
and
dec
hlt
mov
call
pop
jmp
and
shr
ds
lahf
punpckhdq
mov
xchg
loopne
cli
popf
insb
cltd
and
addl
in
lahf
adc
in
sbb
lds
cmpsb
push
mov
sbb
push
jmp
mov
push
jmp
ret
push
ret
cmpsb
push
hlt
pop
mov
jns
pop
das
mov
xor
inc
cmp
jmp
mov
xchg
dec
fldt
xchg
mov
mov
pushl
push
lea
push
mov
call
jmp
stc
outsl
lcall
push
xor
mov
and
pop
lods
mov
add
jmp
cs
test
jmp
lea
mov
sbb
cmp
inc
loop
mov
inc
mov
cmp
in
pushl
lea
call
pushl
lea
jmp
cmp
xchg
mov
mov
sbb
mov
je
movl
jmp
jmp
cmpsb
cmp
mov
mov
jne
push
lea
jmp
in
jb
xchg
std
jge
je
dec
out
sti
sahf
insl
subl
lea
jmp
dec
iret
pop
cmp
aas
dec
roll
aad
jns
insl
hlt
pop
sti
mov
movl
jmp
ficomps
stos
pop
mov
dec
fstpt
pop
ds
stos
sar
aaa
dec
cmpl
jmp
jnp
mov
scas
and
dec
lds
iret
sub
inc
daa
shlb
movsl
mov
push
jns
mov
mov
jmp
ret
push
lds
fsubrp
add
mov
jmp
pop
mov
decl
test
jne
movl
jmp
and
dec
fnstcw
mov
jmp
test
jmp
cli
outsl
lcall
loopne
jb
and
jb
mov
test
sub
inc
jmp
push
rcll
jo
gs
pushf
outsl
les
lods
cmp
sub
push
dec
dec
lea
jmp
mov
xchg
adc
or
jl
dec
call
movb
jmp
out
jne
mov
jle
jne
out
add
or
insl
in
fmull
inc
add
inc
jmp
xchg
pop
xchg
adc
lcall
test
pop
test
sti
mov
inc
or
add
add
jmp
movb
jmp
fstps
test
dec
or
inc
sub
push
mov
and
les
loop
cmc
pushf
outsl
test
sbb
sbb
xchg
pop
bound
movsl
push
mov
fimull
fidivrl
jne
xchg
cmc
add
in
jo
mov
jmp
sbb
cmp
jnp
add
sub
jbe
leave
pop
cmp
or
mov
xchg
xor
repz
cld
sbb
decl
jmp
rolb
mov
call
jecxz
dec
fimuls
dec
test
jmp
jmp
adcb
sbb
mov
cltd
sti
pushl
jnp
in
inc
mov
test
pop
jp
xor
xlat
mov
inc
cld
leave
ret
jmp
clc
push
pop
jmp
pop
pop
adc
mov
jg
xchg
adc
jmp
mov
jmp
mov
and
lods
lret
inc
lods
pop
les
int3
and
pushf
pushf
jmp
out
jo
xorl
loopw
push
xchg
repz
lret
pushl
jmp
jmp
icebp
jb
xchg
jge
xchg
testb
xchg
jae
lods
and
dec
sbb
mov
jmp
pop
cwtl
push
imul
xchg
pusha
jmp
and
andb
jmp
sub
aas
pop
test
push
push
mov
inc
hlt
aas
sub
jmp
fstpl
scas
pop
mov
fildll
idivl
mov
aad
enter
inc
test
jmp
je
mov
jmp
dec
rclb
add
jge
notl
stos
cmp
sbb
call
jne
jmp
or
xor
add
sbb
fistpll
adc
xor
sbb
inc
push
lret
pop
ds
iret
call
pop
test
jne
mov
mov
call
jmp
xchg
add
cli
push
sahf
or
cmpsb
add
add
pop
cmp
xor
movsb
cmp
inc
or
mov
xchg
adc
popl
lea
jmp
push
jmp
scas
aaa
cmpsl
ret
out
jae
xchg
cmp
cs
xchg
mov
imul
pushl
jmp
add
jmp
call
jmp
stos
sub
ret
ret
push
lret
mov
sbb
add
add
int3
lods
int
jmp
call
clc
jmp
pop
cltd
or
insb
xor
daa
inc
mov
sub
or
mov
inc
roll
aad
push
flds
mov
adc
jmp
icebp
nop
arpl
test
sub
aad
enter
cmp
shr
call
jae
in
repz
mov
xor
jae
sbb
sarl
sbb
mov
and
add
add
rolb
add
jmp
add
sub
xor
push
lea
push
mov
mov
call
jmp
inc
aad
sub
je
aas
scas
lret
cmpsl
mov
sbb
mov
add
aad
jmp
xor
sahf
or
lcall
and
jb
sbb
xchg
add
push
lea
push
mov
call
jmp
mov
mov
jge
inc
jmp
cmp
jmp
jbe
jl
negb
sbb
push
xor
dec
push
aam
jecxz
add
hlt
std
incl
jne
dec
jns
jmp
ret
pop
repnz
fs
mov
out
adc
mov
incl
jmp
outsl
repz
cmc
cmp
xor
mov
inc
shlb
sahf
stc
or
xchg
mov
mov
push
jmp
jns
jne
jmp
jmp
jmp
pop
nop
push
popa
nop
inc
mov
fincstp
jb
xchg
jno
xchg
lds
test
add
add
add
add
movzbl
jmp
sbb
adc
xchg
hlt
std
call
pop
test
jmp
push
push
lret
mov
add
add
incl
pop
call
mov
icebp
popa
add
adc
jnp
mov
jbe
xor
jmp
sbb
dec
ret
andb
pop
ljmp
loopne
rolb
add
jmp
jmp
loope
loop
je
fists
cmpsb
push
in
sti
je
inc
push
lea
push
lea
push
jmp
push
jmp
mov
mov
and
mov
sbb
add
cmp
sbb
movsb
lea
jmp
inc
mov
icebp
pop
mov
jns
and
jo
inc
shll
popa
mov
ret
pop
push
xor
or
cmp
mov
jmp
adc
aam
ret
mov
enter
movb
jmp
sbb
push
popa
insb
or
subl
push
fisttpl
fnsave
mov
roll
add
cld
lea
jmp
jmp
xchg
xchg
in
jmp
mov
jmp
pop
fisttps
cltd
sbb
movsl
xor
setne
dec
loope
test
jmp
pop
fimull
fimull
add
lods
pop
mov
cmp
jl
decl
test
jne
mov
jmp
movb
jmp
movsb
cs
dec
fidivrs
mov
es
or
jmp
repz
jp
adc
cmp
and
gs
jecxz
push
in
and
imul
stc
jmp
dec
rcll
and
lahf
sbbb
dec
decl
lea
arpl
cmc
inc
popa
add
pop
jmp
xor
push
lea
push
jmp
sub
sub
adc
insl
std
test
das
mov
push
int3
inc
and
dec
cld
jmp
rcrb
pop
mov
cmp
pop
les
int3
and
or
push
mov
call
mov
mov
add
shr
mov
jmp
dec
aad
sub
pop
sbb
or
cmpsb
outsl
out
jae
xchg
in
insb
loop
je
mov
test
pushl
shr
std
in
jae
xchg
stc
mov
test
pop
sbb
call
jecxz
sarl
es
outsb
dec
jae
xchg
jmp
dec
iret
pop
cmp
add
scas
cmp
mov
jl
outsl
or
out
call
hlt
test
add
sbb
add
push
jno
jecxz
or
iret
sub
jo
mov
and
cmp
jmp
ss
ret
dec
frstor
roll
add
push
sbb
jmp
push
cltd
or
ds
lahf
ljmp
jo
xorl
inc
adc
and
jbe
dec
je
jmp
cmp
ret
lods
pop
in
stos
cmp
mov
in
mov
sbbb
add
ret
jne
addl
mov
jmp
xor
jno
xorb
aas
scas
lret
dec
jg
clc
sub
jmp
popa
jmp
sub
in
lcall
push
cmp
daa
sbb
cs
inc
mov
pop
iret
xchg
pusha
mov
mov
mov
andb
sub
jo
jmp
xchg
adc
add
jmp
fimuls
hlt
popl
lea
jmp
int
shlb
mov
mov
push
les
ret
jmp
pop
fisttpll
out
mov
movsl
int3
aas
fsubrs
lods
and
dec
mov
sbb
cld
jmp
xor
adc
cli
jmp
push
aam
sub
mov
pop
int3
stos
data16
stos
jne
jne
jmp
pop
mov
loop
lcall
dec
sub
add
jg
mov
clc
pop
inc
mov
jge
jbe
mov
jmp
jmp
cmpsl
pushl
push
lea
push
jmp
jo
xorl
imul
sbb
sub
add
jmp
push
xchg
or
sub
pop
lret
scas
pop
repnz
in
sbb
sbb
xchg
push
mov
sub
push
push
mov
mov
add
shr
jmp
je
xchg
jmp
mov
jmp
lods
cmp
ja
xorb
xchg
or
sub
rorb
add
cmp
jmp
fisttpl
mov
inc
and
adc
addr16
sbb
push
cmp
jmp
imul
xchg
push
enter
dec
repnz
stos
or
sub
add
add
mov
jmp
nop
or
mov
inc
cmp
jbe
cmpb
jmp
pop
popa
pop
inc
jmp
mov
jmp
movb
test
cmp
xchg
adc
and
push
inc
cmp
jb
jmp
pop
fimull
fisubl
jne
mov
jmp
xchg
adc
cmp
dec
fstpt
cmpsl
ret
xchg
sub
jmp
lea
jmp
cmp
and
jge
je
popa
inc
iret
pop
cmp
and
jno
mov
fmuls
jmp
push
mov
add
iret
mov
inc
cmp
jmp
push
fdivl
in
rorl
push
xor
adc
inc
out
pop
jo
jne
cmpb
jne
push
jmp
es
jbe
jp
in
pop
mov
inc
adc
add
add
jmp
movb
jmp
sbb
aas
setge
lock
lret
and
push
xor
jne
test
jmp
xor
jmp
pop
jmp
sub
push
lds
dec
fnstcw
jmp
and
or
jbe
stc
lcall
xchg
pushl
std
inc
jmp
lock
decl
jmp
dec
rolb
rclb
fwait
add
or
or
test
clc
jmp
jmp
jne
jmp
xor
pop
ret
ret
jmp
bound
test
xchg
std
incl
decl
jmp
xor
mov
cltd
clc
or
push
mov
add
sbb
push
rolb
shlb
mov
cmpsb
shll
mov
nop
xorb
push
jmp
jp
insb
or
repz
or
jle
pop
cli
sbb
push
std
decl
rep
daa
mov
and
sub
cmp
dec
pop
push
jmp
inc
pusha
add
pop
jmp
push
fmuls
fsubrs
pushf
cmp
jne
jmp
mov
jmp
mov
fwait
pop
cwtl
push
imul
xchg
ret
jmp
inc
into
pop
cmp
jno
xchg
add
and
or
sub
add
xchg
jmp
jmp
xor
daa
mov
dec
mov
xchg
popa
adc
adc
pop
push
pushl
jmp
out
js
mov
cmp
out
loope
jae
mov
and
leave
pop
repnz
fs
ret
pop
iret
stos
pop
movsb
lcall
mov
sub
sub
push
seta
bound
pop
xor
lea
call
pop
pop
jmp
dec
push
xor
cmp
add
std
or
mov
test
push
mov
es
lods
cmp
inc
shll
jo
loop
int
repz
rclb
adcl
sub
mov
mov
and
int3
jnp
std
insl
hlt
pop
mov
loope
pop
rclb
and
adc
lahf
cli
or
outsl
mull
icebp
js
and
push
mov
aad
jmp
mov
adc
lods
xor
push
xor
dec
data16
sbb
or
je
xor
xchg
add
inc
aad
dec
mov
cmp
cmp
rolb
sarb
dec
push
xor
cmp
jns
mov
push
xchg
add
sahf
jp
mov
in
lock
lds
jb
in
jle
pusha
pop
repnz
dec
fistpll
imul
dec
std
outsb
cld
fwait
jbe
sbb
and
inc
and
jns
jg
mov
inc
fisttpl
fnsave
stos
cmp
sbb
mov
jo
inc
insb
cmc
gs
pop
xchg
push
pushf
sti
push
cld
push
xchg
add
std
insl
hlt
pop
xor
jecxz
jne
mov
sahf
stc
or
adc
add
push
shlb
dec
and
add
insb
jge
push
adcb
xorb
shlb
arpl
add
adc
pop
and
xor
loope
mov
inc
mov
cmp
pop
iret
stos
pop
movsl
test
sahf
stc
or
sbb
fnsave
push
shll
xchg
popa
or
pop
int3
inc
and
pushf
sti
push
mov
xchg
xor
cmp
fnstsw
xor
push
leave
pop
cmp
and
add
adc
add
xlat
sbb
mov
insl
repz
cmc
sbb
imul
pop
sti
jl
jne
push
fcomps
fs
fistps
scas
pop
mov
or
les
int3
orl
ja
insb
or
cmc
pop
into
test
int
addr16
in
bound
or
cmpsb
add
ja
loope
inc
roll
sarl
scas
cmp
mov
les
scas
pop
repnz
and
mov
push
dec
jno
fisttps
flds
scas
cmp
mov
pop
repnz
xchg
pop
aas
lret
xor
int
aam
pop
int3
stos
data16
dec
fdivrs
lret
xchg
push
add
insl
std
test
push
fisttpl
fnstsw
and
mov
xchg
push
rolb
shlb
inc
push
xor
daa
push
jecxz
push
in
push
fimuls
add
notl
lea
std
or
jmp
sti
sahf
insl
int3
adc
or
dec
std
ja
xorb
dec
fdivrs
add
and
xchg
add
cmp
jl
jne
xor
cltd
push
in
jns
mov
out
out
jo
stos
cmp
ljmp
lahf
push
stos
xor
and
loope
adc
or
test
mov
cmpsb
out
out
mov
push
pushf
xor
insl
fcomps
test
mov
movsl
xor
ja
xorb
fs
popf
insb
xchg
lods
sub
clc
outsb
or
or
insb
test
imul
or
jne
mov
xlat
pop
int
andl
sbb
je
lea
jb
xchg
loopne
jecxz
jne
mov
aad
xchg
sub
dec
jecxz
push
in
sub
and
rolb
sarb
inc
aam
dec
stc
inc
roll
shll
jecxz
push
in
fimuls
mov
fdivrs
pop
ds
stos
xor
int
mov
fcomps
setg
or
int
fdivrl
ljmp
adc
or
pop
ds
inc
lret
pop
ds
mov
mov
pop
cmp
das
movsb
cmp
dec
pushf
adc
in
sbb
lock
mov
xchg
sbb
aad
cmpl
add
and
lods
and
jbe
adcl
in
jge
testl
xor
cmc
pushf
outsl
fmull
lcall
mov
cs
xlat
inc
mov
jmp
adc
fidivrl
aam
sub
fs
xchg
cmc
add
jne
bound
fidivrl
gs
jp
xor
pop
lret
scas
pop
mov
dec
ret
mov
pop
mov
hlt
or
inc
and
pop
test
xchg
icebp
add
mov
and
sti
or
popf
push
test
push
cld
sbb
movsl
xor
cmp
mov
in
lcall
inc
and
jns
lods
and
add
pop
jp
cmp
sti
push
lahf
push
les
cmpsl
push
jecxz
int
and
jl
stos
cmp
sbb
push
testl
ljmp
std
adc
imul
ss
mov
mov
in
jle
push
aad
sub
xor
pop
mov
mov
js
insb
ss
inc
mov
mov
out
mov
mov
cltd
clc
or
pop
mov
stc
jb
xchg
cmp
idivl
mov
xchg
popa
enter
sti
push
ret
icebp
nop
arpl
and
mov
ljmp
mov
jle
sti
js
mov
divl
mov
dec
leave
pop
cmp
sub
in
bound
frstor
leave
cmp
addl
fisttpl
jle
imul
sbb
push
mov
sub
lock
push
stos
and
or
push
jno
inc
mov
cwtl
push
rclb
jbe
pusha
notb
xchg
cld
bsf
inc
aad
dec
in
insb
or
mov
mov
inc
rolb
shlb
mov
jb
jle
call
in
testb
lods
cmp
or
movsb
cmp
push
mov
es
push
jg
jmp
std
or
int3
push
ret
cmpsb
push
mov
adc
in
sbb
or
xor
cmp
sbb
orl
stc
or
das
movsl
xor
std
insl
hlt
pop
mulb
jl
notb
out
adc
cmp
mov
cmp
daa
inc
mov
adcb
loope
cmpsb
dec
jecxz
push
in
xor
sbb
push
cld
push
sbb
cmp
xchg
cmc
add
nop
add
std
or
jl
jg
jmp
inc
mov
xor
cmp
rcll
sub
cltd
or
jno
dec
fnstcw
shlb
movsl
int3
aas
hlt
jns
push
xor
pop
sahf
or
cmpsb
inc
jns
insl
hlt
pop
sti
into
dec
fistpll
adc
jbe
movsb
ret
ds
fwait
pop
xchg
adc
cmp
pop
popf
or
cmp
cmp
hlt
push
cld
sub
add
xor
lods
add
sub
lods
and
sbb
popf
sub
push
cmc
pop
mov
adc
int3
pop
into
test
and
mov
dec
fstpt
inc
and
xor
loope
xchg
or
je
inc
shll
stc
cwtl
imul
jmp
push
in
and
scas
dec
lret
lret
mov
add
pusha
in
sbb
cmp
insb
loop
je
nop
sbb
mov
and
rorl
dec
mov
push
shll
adc
inc
jnp
push
cld
sub
pop
lret
scas
pop
cltd
pop
mov
jg
sub
push
loop
mov
sbb
inc
shlb
or
sub
pop
cmp
popa
ljmp
mov
sbb
arpl
xchg
adcl
mov
rcrb
data16
push
xor
dec
mov
cmpsb
shll
cmpsb
sub
insb
or
out
mov
and
testb
and
lcall
mov
daa
mov
and
rcrb
stos
pop
test
inc
es
inc
roll
aad
sub
les
int3
sbb
rolb
mov
call
mov
lcall
pop
int3
scas
pop
in
xchg
add
insb
jecxz
je
mov
xchg
adc
dec
inc
and
xor
movsb
ret
ds
test
mov
sbb
xchg
adc
repz
fimull
fidivl
jg
rolb
mov
call
mov
lcall
pop
lret
scas
pop
in
xchg
add
insb
loop
je
mov
xchg
adc
dec
inc
and
xor
movsb
ret
ds
test
mov
sbb
xchg
adc
repz
fimull
fidivl
jg
cmpsl
inc
inc
xor
or
dec
inc
push
mov
int
and
leave
adc
pop
ror
repnz
sarb
jl
negb
jae
xchg
add
or
dec
fimull
fidivl
std
insl
hlt
pop
mov
xor
int
fwait
popf
add
dec
fisttpl
fnstsw
or
sahf
add
stos
cmp
fdivr
adc
test
mov
adc
cld
jge
je
insl
sbb
xor
dec
cmp
and
aaa
ret
lret
pop
ds
jp
insb
or
repz
mov
or
push
les
stc
cwtl
imul
sbb
sbbb
add
sahf
dec
in
cltd
push
add
push
aad
aad
dec
sti
pop
into
pop
cmp
jg
stc
imul
dec
sub
jo
icebp
popa
add
inc
and
sbb
pop
and
bound
mov
mov
aaa
cmpsl
ret
inc
fimuls
or
pusha
notb
scas
lret
add
and
push
les
out
mov
pop
jecxz
push
in
adc
add
adc
push
or
mov
movb
push
jns
jnp
xchg
pop
bound
dec
mov
pop
stos
pop
xchg
sbb
int3
inc
and
push
popa
nop
push
inc
int3
inc
and
pusha
pop
repnz
es
pop
roll
aad
insl
std
test
push
mov
and
mov
xorl
push
cld
data16
xchg
outsb
lods
pushf
add
icebp
outsl
lcall
sbb
xchg
jle
mov
xor
cmp
sub
or
sub
and
pop
and
sbb
or
fs
push
rcll
lods
pop
test
and
jns
popa
add
add
out
inc
iret
pop
cmp
xor
xlat
mov
cltd
jge
pusha
pop
repnz
cld
ds
inc
mov
fmull
mov
call
push
jbe
jne
out
inc
in
loopne
jb
lahf
or
clc
outsb
or
dec
or
dec
fdivrs
push
xor
shrl
fidivrs
jne
out
and
mull
icebp
pop
pop
fmuls
fdivs
popa
loopne
adc
add
les
inc
push
xor
sbb
push
insb
loop
je
mov
test
cmp
mov
scas
leave
cmp
dec
les
int3
sub
pop
int3
stos
xchg
xchg
sbb
aad
sub
or
jg
mov
push
jne
out
dec
pop
lret
lret
sub
adc
jg
jl
negb
stos
cmp
sbb
bound
lock
aad
sub
cmpsb
xor
scas
insl
mov
ret
adc
jns
test
jge
fs
setg
or
mov
addr16
push
in
and
pop
cmp
and
xor
dec
sahf
sbb
fcompl
scas
pop
movsb
icebp
jbe
cmpl
ljmp
aaa
push
mov
sub
adc
jmp
inc
int3
inc
and
int
addr16
sub
pop
rolb
rolb
imul
insl
test
fidivrl
stos
cmp
sbb
ret
ret
or
in
movsl
inc
xlat
inc
and
jbe
sub
xchg
xchg
adc
mov
mov
jno
jecxz
sbbb
call
in
mov
push
mov
or
and
incl
adcb
orb
enter
cmp
push
xlat
inc
and
cmp
outsb
or
push
sbb
mov
mov
or
std
jbe
cmpl
mov
gs
jo
popa
icebp
nop
arpl
mov
push
fisttps
fnstenv
xor
cs
mov
or
pop
jg
arpl
cmc
inc
ljmp
je
leave
pop
iret
stos
pop
mov
push
jns
cmp
mov
inc
aam
dec
stc
scas
cmp
add
std
or
mov
and
shll
cmp
inc
sub
mov
into
dec
ret
popf
jg
xchg
cmc
add
add
sbb
sbb
orl
decb
inc
mov
cmpsl
and
add
lock
bound
xor
mov
fidivl
mov
xchg
or
cmp
xacquire
cwtl
decl
enter
lret
inc
loope
fs
popf
insb
ficompl
lret
pop
leave
test
call
movsl
or
jle
mov
cmp
pusha
repz
pushf
outsl
jg
mov
mov
mov
es
cs
fadds
mov
stos
rcrl
pop
mov
push
mov
cmpsb
hlt
jbe
cmpl
xchg
jb
outsl
in
jge
negl
flds
cmp
push
lds
xchg
mov
dec
mov
push
mov
leave
cmp
inc
int3
inc
and
das
dec
mov
sbb
add
movsl
xor
pop
jecxz
addr16
sbb
add
push
sti
fcomps
stos
cbtw
aas
mov
ja
popa
add
add
adcb
subb
or
xchg
add
lret
lret
or
in
out
or
in
mov
inc
xlat
mov
fwait
jge
addr16
cmp
sub
xor
sub
jno
mov
jle
cmp
cmpsb
xor
scas
pop
les
cmpsl
push
jecxz
mull
icebp
push
xchg
add
xchg
and
mov
lahf
punpckhdq
push
mov
jbe
imul
movsl
leave
push
lds
inc
mov
jl
insb
or
iret
mov
scas
jecxz
icebp
nop
arpl
lcall
lcall
daa
mov
and
addb
or
mov
rorb
repz
js
add
adc
ljmp
stc
hlt
in
clc
lahf
push
cmp
jl
jne
inc
dec
rcll
data16
test
push
test
hlt
push
cld
push
mov
mov
adcl
jbe
cmpl
cmp
lea
pop
lret
scas
pop
cld
sbb
add
lcall
js
mov
jo
jl
divb
and
mov
lock
insb
loop
je
lock
xorl
test
and
jg
mov
push
xchg
add
addr16
push
xor
es
test
cmp
aam
int
addr16
pop
repnz
xorb
in
clc
lahf
push
mov
lods
mov
xchg
cmp
adc
aas
call
int3
jno
jo
loop
add
jle
jge
negl
outsl
or
mov
and
mov
data16
popa
add
push
setnp
outsb
popf
pop
push
fwait
or
jns
lods
and
pop
aad
and
xlat
jmp
in
sbb
add
push
sti
fcomps
stos
cbtw
aas
mov
ja
popa
add
add
adcb
subb
or
xchg
add
lret
lret
or
in
out
or
in
mov
inc
xlat
mov
fwait
jge
addr16
cmp
sub
xor
sub
jno
mov
jle
cmp
cmpsb
xor
scas
pop
les
cmpsl
push
jecxz
mull
icebp
push
xchg
add
xchg
and
mov
lahf
punpckhdq
push
mov
jbe
imul
movsl
leave
push
lds
inc
mov
jl
insb
or
iret
mov
scas
jecxz
icebp
nop
arpl
lcall
lcall
daa
mov
and
addb
or
mov
rorb
repz
js
add
adc
ljmp
stc
hlt
in
clc
lahf
push
cmp
jl
jne
inc
dec
rcll
data16
test
push
test
hlt
push
cld
push
mov
mov
adcl
jbe
cmpl
cmp
lea
pop
lret
scas
pop
cld
sbb
add
lcall
js
mov
jo
jl
divb
and
mov
lock
insb
loop
je
lock
xorl
test
and
jg
mov
push
xchg
add
addr16
push
xor
es
test
cmp
aam
int
addr16
pop
repnz
xorb
in
clc
lahf
push
mov
lods
mov
xchg
cmp
adc
aas
call
int3
jno
jo
loop
add
jle
jge
negl
outsl
or
mov
and
mov
data16
popa
add
push
setnp
outsb
popf
pop
push
fwait
or
jns
lods
and
pop
aad
and
xlat
jmp
mov
mov
sub
pop
mov
mov
std
or
pushf
adc
popa
icebp
nop
arpl
fmull
mov
out
jno
popa
mull
icebp
dec
adc
and
int3
jge
lea
push
mov
xor
add
adc
sub
inc
xlat
mov
movsl
push
leave
pop
cmp
and
jp
in
imul
or
mov
mov
dec
sub
xor
sub
xchg
cld
psubsb
and
dec
jg
outsb
or
das
call
orl
popa
or
jle
lcall
adc
pusha
push
fimuls
adc
inc
out
jge
je
push
cmp
dec
push
xor
push
sub
xchg
jecxz
loope
jae
pusha
mull
icebp
push
cmp
cmp
sbb
cmp
pusha
inc
aam
sub
inc
and
jns
push
mov
es
jb
xchg
test
aad
into
pop
xchg
mov
mov
inc
mov
pop
ljmp
cli
sahf
and
mov
inc
mov
cmp
push
lds
divl
xorb
cmp
mov
xchg
pop
fisttps
fsts
jl
outsl
or
out
insb
out
adc
sbb
daa
scas
and
mov
nop
testl
popf
insb
lret
dec
rclb
adc
mov
dec
mov
inc
mov
test
outsb
or
push
popf
adc
loop
pop
loop
in
loopne
jb
mov
mov
xchg
mov
dec
fmuls
fdivrs
mov
dec
fisttpl
fnstsw
jne
arpl
cmc
sbb
popa
icebp
nop
arpl
pop
xchg
call
cli
and
fs
lret
lret
js
mov
add
imul
scas
pop
mov
mov
sub
test
mov
and
addr16
bound
push
cmp
sub
popa
add
add
stos
out
jg
jmp
std
or
dec
ret
ret
sbb
aad
xchg
fisttps
push
std
xchg
test
push
scas
cmpsl
movsb
ret
ds
mov
sbbb
add
add
lods
cmp
mov
jle
cmp
push
xchg
repz
test
add
ss
inc
mov
ja
jge
negl
das
mov
inc
mov
fs
adc
imul
insl
in
pop
fisttpll
out
pop
fimuls
push
ljmp
sbb
cmp
lods
and
arpl
mov
xchg
arpl
leave
mov
std
or
push
add
pusha
notb
add
sahf
insl
xchg
sahf
stc
or
cli
jle,pn
pusha
pop
repnz
daa
inc
mov
or
push
les
int3
fimuls
mov
adc
mov
cmp
cmpsl
xor
pop
lret
scas
pop
in
sub
xor
int
jmp
fdivrs
inc
jge
jp
in
add
mov
inc
mov
lods
xor
lds
iret
add
mov
js
outsb
or
adc
push
mov
or
addr16
lret
lret
fs
popf
insb
cltd
cld
jg
mov
stos
and
imul
or
mov
outsl
lcall
inc
and
cmc
pushf
outsl
scas
inc
int3
inc
and
cs
mov
xchg
xchg
rolb
mov
out
or
lods
and
sbb
or
imul
mov
and
sub
icebp
adc
push
sub
insb
out
jl
idivb
add
cmp
xchg
adc
cmp
sbb
or
dec
sbb
movl
je
lea
loop
pop
loop
movsl
xor
mov
xchg
gs
push
xor
push
scas
jns
and
inc
aam
dec
jmp
push
loopne
cmp
mov
in
addr16
gs
dec
mov
mov
sbb
or
sahf
aaa
sbb
push
les
int3
imul
das
ficompl
inc
fdivl
in
push
iret
pop
cmp
cmp
std
adc
pop
and
push
xor
or
loop
notl
pop
cmp
and
ficoml
inc
sub
and
xchg
enter
push
mov
mov
test
pop
cmp
sub
xchg
add
jne
gs
pushf
outsl
sahf
xchg
pop
ficoms
mov
inc
and
adc
pop
leave
test
imull
sahf
insl
jp
js
ljmp
js
or
je
lea
and
ret
push
lds
push
lds
lea
test
push
cld
fisttpll
mov
sbb
arpl
bound
test
add
std
or
addb
repnz
adc
mov
fucomp
insb
loop
je
dec
enter
pop
sti
jge
je
jo
add
inc
and
sub
mov
xor
and
inc
push
jecxz
push
in
push
xchg
pop
bound
cmpsb
push
xchg
or
pop
jb
sub
jae
in
fisttps
push
std
mov
xchg
cmpsb
hlt
lock
fwait
or
in
mov
fs
push
shll
testl
and
sbb
popa
jnp
jo
loop
loope
in
je
add
mov
mov
dec
fidivrs
xchg
adc
lahf
push
mov
es
or
add
adc
push
addb
repz
sti
dec
roll
aad
xchg
sbb
es
cs
bnd
jp
push
xchg
add
cmpsl
aaa
push
mov
ret
or
jle
popa
add
push
mov
xchg
jnp
in
inc
push
xchg
add
sahf
das
push
lea
push
les
dec
sub
dec
dec
fisttpll
out
jmp
and
pop
int3
stos
movsw
call
xchg
lret
push
shll
aas
lret
into
pop
cmp
push
in
jno
xorb
mov
movsb
and
mov
pushf
sti
push
jo
addr16
sbb
cwtl
push
imul
pop
repnz
fs
stc
jl
jne
insb
cmp
inc
iret
pop
cmp
xor
adc
cli
jno
xorb
loope
adc
inc
in
clc
lahf
push
jno
xchg
testb
mov
inc
mov
cltd
or
sub
inc
fidivrl
or
sub
mov
pop
aas
lret
adc
mov
jle
dec
ds
cmp
dec
imulb
fwait
jbe
add
dec
and
sub
jp
jp
xchg
adc
fisttpll
out
test
int
fimull
fisubl
clc
outsb
or
das
rolb
mov
les
repnz
pop
repnz
jle
mov
push
mov
mov
inc
and
ja
mov
inc
mov
cmp
mov
cwtl
and
or
inc
xlat
mov
out
mov
jle
cmp
pop
repnz
fs
cmpsl
aaa
push
mov
sahf
insl
ret
add
add
std
or
jmp
mov
jmp
pop
test
pop
xchg
adc
push
jns
mov
push
and
mov
lock
xorl
psubsb
push
lret
mov
mov
scas
pop
scas
mov
ret
xor
ficomps
scas
pop
mov
sub
dec
rclb
xor
psubd
lds
iret
sbb
mov
sub
cmpsb
xor
scas
sbb
insb
or
scas
aas
lods
cmp
pop
repnz
fs
xor
jge
je
sub
add
pop
xchg
adc
xor
enter
push
mov
xor
int
xor
pop
pushf
add
dec
fidivrs
repnz
lods
mov
lods
std
adcl
test
pop
jp
jb
mov
sbb
dec
mov
stos
int
leave
int
fidivrs
popa
add
add
inc
aam
dec
lods
and
pop
aad
sub
jg,pn
addr16
pop
sbb
outsb
loop
pop
loop
pop
xlat
inc
and
js
inc
shll
aam
mov
dec
ret
in
int
and
jl
roll
aad
scas
aas
scas
lret
inc
roll
shll
in
jge
notl
mov
inc
mov
mov
xchg
adc
adc
sahf
add
cld
xchg
cmc
add
cmp
and
rolb
sarb
xchg
adc
inc
shlb
mov
xchg
jb
pop
jbe
pusha
pop
repnz
xchg
adc
movsl
xor
jne
mov
test
in
lock
sbb
lods
and
adc
inc
shll
movsl
int3
aas
dec
inc
aad
dec
ljmp
imul
das
mov
dec
fdivl
in
leave
pop
int
addr16
lods
cmp
pop
xchg
repnz
and
pushf
pop
lods
movsb
ret
fmull
mov
mov
ljmp
mov
mov
inc
mov
lcall
setg
or
mov
movsl
int3
aas
fdiv
jbe
cmpl
jb
xchg
add
or
int3
inc
aam
dec
mov
mov
cmp
sub
mov
lcall
push
idivb
jp
sub
pop
inc
fisttpl
adc
add
mov
xor
xor
adc
mov
inc
mov
in
js
mov
xor
test
bnd
pop
into
test
cmp
inc
inc
fimuls
push
pop
lahf
punpckhdq
fsubrs
scas
rcll
mov
pop
cmp
and
scas
rclb
mov
jg
jmp
or
shlb
pusha
pop
repnz
adc
ret
mov
and
mov
jge
push
shrl
int3
inc
and
cmp
jg
jno
xorb
pop
xchg
repnz
mov
xchg
add
ret
ret
dec
fstpt
sbb
xchg
daa
xor
push
shll
test
aad
frstor
dec
mov
mov
stos
mov
mov
sub
insl
std
test
movsb
cmp
gs
rolb
sarb
jg
insl
hlt
pop
in
imul
pop
ljmp
jg
fwait
or
dec
outsb
ljmp
ds
test
data16
bound
ljmp
out
sbb
hlt
pop
notb
pushf
xor
add
lods
cmp
fimull
ficompl
xor
mov
jle
cmp
test
fs
push
cld
dec
lock
dec
fmuls
fsubrs
das
mov
inc
fidivrl
lods
mov
loop
xor
int
cmp
dec
out
in
je
outsl
stc
imul
jge
jo
loop
les
mov
xchg
insl
std
test
and
imul
or
pop
nop
push
popa
nop
inc
in
push
test
fsubl
fildl
pop
cmp
xor
aad
sub
cmp
dec
sub
adc
sahf
cmp
jo
xorl
jle
add
adcl
sbb
push
rcll
jo
sub
ljmp
stc
mov
inc
and
ja
push
pushf
sti
push
mov
or
pop
lcall
and
int3
pop
lret
scas
pop
mov
mov
inc
mov
cli
imul
insl
in
daa
stos
cmp
bound
mov
cmpsb
es
cs
in
cli
popf
insb
mov
addr16
add
xchg
ss
inc
mov
dec
into
pop
cmp
ds
jecxz
push
in
jmp
notb
dec
das
fidivrl
arpl
js
ljmp
mov
xchg
add
inc
loop
cld
fwait
jbe
xchg
sbb
icebp
popa
add
inc
sub
xor
add
adc
rorb
mov
notl
into
test
shlb
mov
cs
jbe
jl
negb
fwait
or
jae
inc
shll
lods
lret
inc
rcll
or
push
lea
pushf
sti
push
decb
and
popf
in
lock
pop
jecxz
push
in
addb
repz
sti
adc
orl
sub
inc
lret
lret
jns
mov
xchg
pop
or
jo
xchg
cmc
add
fcomps
scas
pop
cld
aad
aad
dec
sti
insb
std
insl
hlt
pop
lods
imul
in
jl
jne
sub
mov
lret
pop
repnz
fs
lods
lret
inc
icebp
pop
iret
pop
cmp
jo
fisttpl
fstpl
addr16
xchg
cmc
add
ret
scas
pop
mov
leave
pop
cmp
and
imull
cltd
push
ret
negl
icebp
dec
roll
aad
jae
pusha
pop
repnz
bnd
lea
sbb
enter
cmp
arpl
inc
mov
mov
lret
inc
shll
test
pop
out
orl
adc
mov
xchg
adcb
out
movsb
push
outsl
or
scas
pop
lret
lret
es
cs
jg
mov
mov
mov
and
popa
fsub
jnp
mov
xlat
push
ret
cmpsb
push
nop
out
adc
data16
xchg
cmc
add
pop
lret
pop
ds
filds
mov
enter
mov
ret
movsl
int3
aas
hlt
mov
lahf
cli
or
jg
insl
hlt
pop
in
xor
sub
pop
addl
sbb
push
mov
jg
jg
and
loope
adc
adc
ja
xorb
pop
xchg
repnz
sti
jb
xchg
lea
xchg
lock
xor
sbb
ja
xorb
cld
xchg
cmc
add
cli
outsl
lcall
aas
pop
test
mov
or
cmpsb
pop
add
pop
into
test
jnp
in
dec
jle
jp
in
das
std
data16
xchg
outsb
mov
les
ret
adc
push
and
gs
sbb
and
lret
lret
cmp
add
push
xchg
repz
lock
fdivl
in
loopew
adc
adc
xchg
or
je
in
jge
testl
jge
rcrb
test
or
rcll
data16
adc
push
jg
popa
add
xor
fisttpl
mov
jp
in
inc
jl
bound
push
aaa
ret
cmp
ljmp
stc
scas
ljmp
cwtl
imul
pop
iret
stos
pop
shl
adc
inc
test
mov
es
cli
lock
bound
mov
mov
stos
or
add
push
xchg
fwait
decb
pop
ljmp
ret
aaa
mov
inc
mov
xchg
gs
pop
fimull
fimull
mov
rclb
lods
pop
mov
or
push
lahf
push
add
aad
repnz
fs
rcrb
fs
ljmp
fdivl
in
cmp
daa
inc
mov
sub
sbb
aas
xchg
iret
pop
int3
stos
iretw
xchg
xchg
adc
mov
jmp
xchg
jno
jp
in
dec
inc
fistpl
in
in
mov
and
cmp
in
cli
push
fisttps
fldenv
mov
add
mov
rcl
push
shll
add
cmpps
dec
pushf
dec
int3
inc
and
test
push
mul
push
lahf
push
outsl
in
sbb
mov
cltd
or
push
dec
fdivrl
mov
and
fwait
adc
aad
into
test
push
xor
jbe
roll
sarl
add
fisttpl
fnsave
fmuls
fsubrs
and
xchg
add
sahf
sub
dec
sub
jg
rclb
add
inc
and
push
popa
nop
jp
add
cmp
repz
cmc
je
fisttpl
fstl
hlt
jne
mov
lds
mov
push
xor
push
lds
add
ret
dec
iret
pop
cmp
aas
and
cmp
mov
mov
shlb
or
js
pop
lret
scas
pop
test
in
sbb
cmpsb
shll
cltd
sbb
add
movsb
cmp
sbb
hlt
pop
lods
inc
aad
sub
insb
xor
stc
insl
std
test
jg
jle
call
jae
cmp
jne
mov
add
ss
inc
mov
or
loopne
out
mov
mov
shll
push
cmc
je
mov
pushf
sbb
cmpsl
and
addb
repnz
mov
xchg
push
test
push
leave
movb
inc
mov
clc
outsb
or
adc
mov
je
scas
es
cs
jb
in
sub
push
cld
jno
xorb
ljmp
test
xlat
inc
and
imul
cld
stos
cmp
fimull
fidivl
adcl
in
jge
negl
aas
pop
test
es
popa
stc
imul
cmp
dec
xlat
dec
frstor
xor
add
ja
mov
inc
mov
jo
dec
rcll
mov
jge
negl
fstpt
testl
or
fstpt
hlt
xchg
outsb
popf
ret
mov
add
jne
rcll
xor
pop
iret
stos
pop
shl
in
je
push
jg
popa
add
xor
insb
or
mov
fisubrl
sub
adc
push
fmuls
mov
push
jbe
cmpl
sub
jle
mov
xchg
bound
xchg
jbe
daa
mov
and
addr16
insb
or
out
dec
inc
and
pop
adc
lret
dec
fistpll
mov
test
add
std
or
mov
mov
or
outsl
lcall
aas
pop
test
aam
int
in
sbb
mov
and
pop
inc
and
cmp
imul
sbb
xchg
xor
push
xor
sbb
jle
mov
push
mov
add
push
aaa
ret
pop
int
addr16
mov
push
push
xor
jle
inc
xlat
mov
out
or
pop
enter
mov
sti
mov
scas
xor
mov
mov
ljmp
push
xor
enter
sub
xchg
insl
in
bound
in
jg
adc
add
inc
pop
fldt
pop
mov
int
mov
sti
jno
xorb
outsb
cld
fwait
jbe
mov
test
cmp
push
ret
or
pop
pop
aam
sub
cmp
aam
sub
nop
testl
jl
and
and
cmp
push
les
int3
jnp
jge
je
and
add
sahf
pop
xchg
push
pushf
sti
push
hlt
sbbl
call
adc
imul
sub
xor
aaa
cmpsl
ret
addb
testl
outsl
lcall
ja
jl
jne
push
repz
mov
cli
jge
je
insl
rorb
dec
mov
xor
inc
into
pop
cmp
xor
imul
insl
cwtl
jae
xchg
testb
mulb
mov
stc
add
or
roll
mov
jmp
adc
in
sbb
xor
sbb
xchg
xchg
adc
lret
jle
push
mov
iret
stos
pop
movsb
flds
mov
mov
shrb
sbb
xor
mov
jg
or
in
mov
mov
ljmp
xor
cmc
gs
add
jo
loop
mov
mov
mov
cmp
je
insl
hlt
pop
out
cmp
jg
fs
or
cwtl
aas
ds
inc
mov
jbe
push
outsl
lcall
out
mov
adc
out
jle
mov
mov
jno
jecxz
sbb
and
mov
xor
add
testb
push
sub
cs
mov
std
or
gs
sbb
and
icebp
popa
add
sbb
call
scas
dec
jbe
add
push
fistps
test
repnz
fs
lea
sahf
stc
or
add
in
cld
fwait
jbe
inc
iret
pop
cmp
xor
jmp
mov
inc
mov
dec
lret
pop
ds
lods
daa
mov
and
into
js
mov
inc
mov
cmp
gs
push
cld
push
mov
mov
lods
lret
inc
out
movsl
aaa
cmpsl
ret
adcl
push
xor
or
lods
dec
lock
rorb
mov
dec
sub
pusha
sbb
and
ficompl
stos
pop
and
add
imul
pushf
sbb
cmp
lahf
punpckhdq
xchg
outsb
popf
pop
pushf
xor
inc
push
fmuls
fdivrs
pop
into
test
loope
jae
pop
fisttpl
fisttpll
xlat
pop
leave
test
fwait
sub
ljmp
inc
shlb
pop
cmp
adc
jge
and
imul
hlt
pop
pop
adcl
pop
repnz
fs
scas
cmp
xlat
inc
and
cmp
cmp
movsb
inc
shll
daa
inc
mov
mov
ret
push
xchg
or
push
pop
xchg
or
je
scas
aas
pop
test
push
mov
and
popf
in
ret
mov
fwait
or
jae
mov
es
inc
mov
movsl
xor
and
push
nop
push
popa
nop
aaa
rorb
push
add
mov
inc
shlb
shlb
shlb
mov
dec
sub
push
add
loop
ljmp
inc
mov
push
lahf
push
jecxz
in
jle
in
jbe
cmpl
sti
imul
sbb
cli
fldl
dec
movsb
push
int
and
push
and
push
lds
push
jno
dec
popa
loop
pop
loop
push
xchg
mov
push
shll
add
add
arpl
xchg
gs
rolb
shlb
enter
push
mov
mov
sub
sbb
loop
pop
loop
push
jp
in
dec
stos
sub
sbb
or
push
dec
iret
pop
repnz
fs
insb
loop
je
ljmp
fwait
jbe
adcl
cmpsl
or
das
mov
insb
or
mov
dec
mov
xchg
add
jno
ljmp
shll
push
cmc
je
cli
push
in
sbb
popa
add
sbb
jl
jne
insb
mov
fisttpll
pop
jp
imul
and
sbb
lcall
push
test
push
cld
push
sahf
or
cmpsb
inc
inc
roll
aad
push
adcb
andb
jbe
cmpl
mov
inc
mov
movsl
sub
fimuls
push
repz
notb
mov
xor
int
xchg
or
sub
pop
and
jl
dec
fdivrl
arpl
cmc
push
lret
push
mov
mov
mov
dec
mov
mov
push
xor
dec
das
mov
inc
mov
je
fs
aaa
out
jae
xchg
imul
sbb
aam
shlb
mov
add
sahf
imul
loope
arpl
jg
jmp
xchg
outsb
mov
outsl
or
jecxz
daa
mov
and
orl
fwait
dec
inc
lret
lret
mov
inc
mov
dec
mov
dec
mov
mov
xacquire
test
push
mov
test
jge
cmp
sarb
mov
sbb
pop
jp
xor
test
pop
test
xchg
push
pushf
sti
push
hlt
int
lret
scas
pop
mov
or
in
cld
lret
lods
pop
fstpt
movsb
cmp
sub
bound
notl
fnstcw
movsl
int3
aas
fadd
inc
fidivrl
sbb
pop
mov
mov
cmpsl
ret
add
lds
mov
jg
jmp
dec
mov
add
pop
lret
inc
fidivrl
sbb
dec
add
inc
rolb
shlb
ljmp
mov
pop
enter
aas
scas
aas
pop
test
sbb
inc
and
or
sahf
and
jbe
arpl
cmc
adc
push
lret
mov
jl
jne
insb
add
clc
gs
pushf
outsl
ljmp
xor
rcll
mov
cmp
mov
xchg
sbb
rolb
rolb
fistpl
xchg
addr16
std
js
mov
popf
adc
push
ja
loope
dec
frstor
jne
ja
int3
inc
and
ds
test
in
pusha
notb
xlat
mov
call
mov
and
sbb
lret
pop
enter
mov
mov
and
xchg
ss
mov
jg
cmp
mov
ret
test
out
jno
in
adc
imul
test
jp
push
int
and
push
setae
xchg
pop
jnp
outsb
or
adc
inc
and
cmp
jno
xorb
inc
and
and
inc
and
or
test
jge
jns
into
pop
cmp
adc
mov
shll
lret
scas
pop
mov
push
and
jb
rclb
adc
mov
ss
and
jb
ja
loope
mov
addb
inc
rolb
shlb
dec
fistpll
inc
and
arpl
cmc
push
cmpsl
inc
shll
mov
and
mov
js
popa
outsl
mull
icebp
js
leave
pop
cmp
dec
mov
icebp
incb
push
xchg
add
sahf
jbe
fwait
or
jle
insb
or
clc
push
arpl
cmc
and
lock
bound
das
lds
ss
cmp
data16
xchg
outsb
mov
sahf
or
cmpsb
push
adcl
out
mov
rolb
rolb
pusha
in
bound
repz
les
dec
sub
outsb
loopne
loope
jae
aam
fidivrl
bound
and
add
mov
inc
mov
setns
push
lahf
cli
or
pop
cltd
outsl
hlt
push
cld
push
lods
xor
int
sbbb
ljmp
mov
jno
pop
jge
insl
hlt
pop
int3
dec
int3
inc
and
push
xor
sub
rcll
xchg
xchg
icebp
add
jge
outsl
or
repnz
cmpsb
shll
push
fisttps
fsts
in
sbb
movq
jne
out
or
insb
or
cmc
scas
and
pop
into
test
jne
out
das
xchg
sbb
aad
orl
push
imul
push
les
leave
test
lock
mov
jns
cmp
lahf
inc
aam
sub
or
cmp
rorl
jb
in
jge
jnp
in
add
fimull
dec
sub
les
sub
jb
fs
popf
insb
test
xchg
mov
cwtl
push
imul
xor
je
lea
push
xchg
repz
out
jne
mov
lret
inc
mov
mov
xor
xchg
addr16
test
mov
inc
mov
xchg
mov
shlb
shll
adc
aaa
lret
stos
pop
into
sub
pop
lret
lret
push
shll
or
push
jae
jne
out
pop
repnz
pushf
outsl
lret
frstor
and
xor
rclb
std
aas
cmpsl
aaa
push
mov
shrl
test
lea
lahf
punpckhdq
and
ss
mov
jo
divb
xorb
lds
iret
cmp
inc
shll
mov
cs
gs
pushf
outsl
cltd
pop
xchg
adc
mov
fxch
inc
mov
out
aad
sub
or
movsb
cmp
outsb
mov
std
or
and
sbb
mov
js
cmp
add
cmp
mov
mov
and
cli
dec
dec
fmuls
fdivrs
ret
ret
lock
bound
mov
pushf
outsl
test
je
out
imul
xor
fistpl
test
es
mov
xor
pop
aaa
mov
inc
mov
xchg
adc
lods
and
inc
and
dec
sbb
pop
aad
sub
aas
jne
in
jge
testl
xchg
out
jg
jmp
cmc
add
sbb
pop
xchg
add
and
sarb
sub
cmp
xor
push
rclb
imul
cli
push
jo
xorl
subl
imul
sbb
pop
cmp
dec
pop
into
test
aas
pop
test
push
movsb
dec
ret
mov
stos
fstps
test
sub
insb
loop
je
jge
outsl
or
repnz
in
sbb
mov
and
out
loop
je
dec
push
xor
sub
jne
mov
lea
xchg
lock
outsb
mov
pop
cwtl
sbb
pop
bound
mov
je
out
inc
fwait
or
sub
rolb
shlb
mov
adc
cmp
insl
hlt
pop
mov
xlat
push
push
xchg
add
jno
jmp
push
in
add
jle
mov
popa
nop
pop
and
push
lds
mov
and
dec
mov
lea
xchg
add
ja
jno
xorb
lods
cmp
adc
pop
jp
jg
push
les
pop
aas
lret
mov
inc
mov
stos
and
xchg
jb
sub
test
pop
test
mov
nop
testl
pusha
xchg
rcll
push
out
sub
or
lahf
push
pushf
sti
push
mov
inc
testl
xor
jb
xchg
adcl
push
xor
or
dec
test
shll
fnclex
jl
jne
add
dec
ret
rcr
pop
leave
test
nop
xor
out
hlt
xchg
outsb
xchg
sbb
outsb
test
mov
add
jae
xchg
pop
fmuls
fdivs
lahf
sbb
aad
sub
aas
loop
clc
lahf
push
ss
lret
mov
xchg
icebp
add
jne
outsl
or
lds
outsb
or
pop
jp
jle
call
mov
in
lahf
or
and
movsl
xor
push
mov
ret
cmpsb
push
in
cmpsb
xor
scas
or
jne
mov
sbb
mov
xchg
adc
xor
sub
mov
cmpsb
fbld
xchg
gs
add
ret
mov
stos
or
les
mov
mov
aad
xor
mov
mov
popa
icebp
nop
arpl
imul
fcomps
in
push
fimuls
inc
inc
int
and
add
cmp
or
pop
enter
rclb
push
in
repnz
pop
repnz
mov
mov
xor
movsb
ret
ds
lret
inc
out
or
xchg
add
outsl
lcall
dec
das
fidivrl
fisttpll
mov
push
cmp
and
sbb
sub
mov
lods
and
pop
xor
sbb
sub
mov
lahf
cli
or
fistpl
xchg
addr16
push
cltd
or
jno
cld
xchg
cmc
add
out
jecxz
jne
cli
jb
xchg
imul
pop
aam
sub
and
aad
iret
stos
pop
movsl
popl
nop
testl
shrl
cwtl
std
outsb
cld
fwait
jbe
aas
lods
cmp
adc
and
xor
jae
xchg
pop
leave
pop
cmp
outsb
mov
cli
stc
lock
bound
mov
dec
mov
movsl
push
shll
test
pop
test
cli
js
mov
push
rolb
sarb
mov
enter
jmp
ret
mov
mov
cli
mov
sahf
stc
or
js
xchg
testb
bound
notb
addb
je
sbb
mov
stos
xchg
sub
xchg
add
inc
mov
lret
out
mov
adc
dec
into
pop
cmp
sub
inc
and
or
inc
inc
xlat
mov
cmpsl
jl
fs
or
loope
push
xchg
mov
or
movsb
ret
ds
cmp
mov
gs
push
adc
aas
lods
and
add
imul
gs
dec
mov
mov
sbb
push
loopne
in
jge
negl
push
xor
jbe
add
cld
xchg
cmc
add
cwtl
add
ja
xorb
pop
enter
jne
jns
jmp
cmp
mov
gs
pop
lods
cs
inc
xlat
mov
cmpsl
fsubl
xchg
gs
push
lret
mov
inc
xchg
nop
adc
in
sbb
nop
sbb
fimull
fisubrl
jl
gs
rol
movsb
popa
and
out
testb
insl
adc
fldenv
sti
and
insb
lock
call
sub
mov
and
add
fimuls
dec
push
mov
xchg
daa
jmp
call
xor
dec
fstpt
cmpsl
ret
lahf
or
sub
sbb
test
cmpsb
shll
xlat
dec
fdivrl
dec
sub
pop
int3
push
shll
mov
add
adc
inc
shll
mov
adc
stos
cmp
jge
push
mov
pop
cmp
xchg
icebp
add
cmp
pop
push
add
lods
lret
inc
mov
jae
xchg
iret
inc
mov
xchg
jge
addr16
cmp
adc
or
xchg
addr16
movsb
xor
int
lea
pop
cmp
jle
mov
add
pop
int3
push
lock
xor
dec
lret
dec
pop
pop
push
pop
popa
xchg
jecxz
sahf
sti
xchg
push
scas
cmc
cmpb
push
pushf
or
xchg
add
adc
arpl
xchg
gs
sub
aam
sub
xor
scas
inc
pop
fstpt
xlat
inc
and
and
push
cmp
sbb
mov
daa
mov
and
jge
gs
push
adc
rcrl
test
mov
push
mov
aaa
xchg
jae
xchg
cmc
add
mov
scas
lret
daa
stos
cmp
or
insb
ficoml
pop
ds
pop
lret
lret
pop
jp
ds
pop
iret
stos
pop
les
mov
mov
jns
mov
rcrl
pop
lcall
dec
xlat
inc
and
xor
imul
lret
jecxz
adc
add
pop
iret
stos
pop
scas
loop
notl
jbe
loopne
rclb
mov
mov
or
adc
fwait
inc
or
decl
stc
jae
outsb
or
sbb
pop
cmp
sub
sbb
loopne
adc
inc
push
xchg
pop
bound
xor
add
mov
scas
adcb
loop
mov
push
pushf
sti
push
cmpsl
mov
mov
and
aam
mov
sahf
std
outsl
lcall
lds
jg
dec
rorb
mov
enter
jns
jbe
loopne
mov
cmpsb
popf
add
add
int3
inc
and
jae
in
cld
adcl
test
xchg
add
sahf
pusha
lods
sub
loope
adc
adc
adcb
subb
sub
dec
je
aaa
mov
fsts
mov
lret
sti
and
jmp
test
das
mov
stos
cmp
sbb
fwait
or
cmc
xchg
das
lea
hlt
lods
adc
fdivl
or
fidivs
jo
loop
jae
je
out
dec
divl
xchg
daa
mov
je
bound
movsb
ret
ds
enter
pop
fsts
pop
cmp
push
dec
int3
inc
and
sub
push
push
xchg
add
sahf
jbe
fisttpll
out
out
notl
dec
sub
xor
push
xor
cmp
pop
cmp
adc
and
pushf
adc
in
sbb
icebp
js
mov
sub
fistl
pop
mov
in
dec
lds
iret
push
lods
and
add
mov
inc
mov
jne
jnp
in
pop
lods
cmp
mov
in
cmpsl
aaa
cmpsl
ret
add
fwait
or
loopne
jmp
jge
push
lret
lret
pop
repnz
fs
insl
std
test
in
je
lea
test
rcrl
data16
cld
out
icebp
mov
pop
daa
jg
fs
dec
data16
jg
movsl
mov
dec
lods
xchg
aad
cmpsb
pop
sti
addr16
popf
subl
repz
outsb
in
adc
clc
or
xchg
add
jo
loopne
adc
add
loope
adc
adc
je
lea
mov
inc
mov
mov
movsb
das
mov
mov
push
push
xor
adc
dec
fmuls
fdivs
mov
jg
cmp
stos
push
mov
add
js
mov
cmpsl
cmp
mov
cmpsb
dec
fdivrl
mov
test
jb
xchg
stc
data16
xchg
outsb
jmp
add
imul
sbb
add
lock
bound
and
loopne
hlt
xchg
outsb
nop
mov
stos
into
cmp
scas
pop
scas
pop
fisttpll
out
add
jle
imul
sbb
push
xor
arpl
cmc
add
ret
push
lds
xchg
mov
and
imul
andb
mov
xchg
push
mov
setge
adc
movsb
cmp
sbb
dec
incb
push
popa
nop
daa
push
lret
pop
ds
fs
insb
or
lds
mov
rcl
push
ret
cmpsb
push
mov
aas
mov
cmp
xchg
loopne
jb
ret
mov
stos
test
std
or
add
jg
pop
int3
stos
data16
fdivl
in
int3
dec
fistpll
or
push
sahf
or
cmpsb
inc
xor
push
xor
lcall
push
fistpll
jne
out
das
mov
fwait
ret
push
mov
push
jno
sub
push
les
arpl
cmc
pop
iret
pop
iret
stos
pop
xchg
xchg
adc
out
pop
cmp
xchg
or
jecxz
out
mov
pop
mov
mov
dec
push
cmp
xor
ror
mov
pop
jecxz
loope
cmp
dec
fidivrs
jnp
in
add
xor
dec
add
sub
pop
fmuls
fmuls
cmp
add
push
fsubrl
stos
daa
mov
and
pop
rolb
shlb
aaa
mov
popf
adc
cmc
gs
sub
orl
sti
push
mov
sbb
mov
mov
and
loop
jge
bound
inc
and
popa
mov
lahf
out
jns
mov
mov
fwait
nop
or
movsl
xor
add
add
mov
dec
mov
dec
mov
and
sbb
out
jg
jmp
lods
pop
mov
cli
push
fmuls
fsubs
pop
adcb
adcb
add
data16
pop
jp
jg
pushf
ljmp
into
mov
jno
inc
cltd
fdiv
mov
pushf
inc
insl
cwtl
mov
xchg
repz
test
cs
inc
into
pop
cmp
adc
in
jge
notl
mov
inc
mov
or
mov
test
push
xor
push
xchg
and
lods
lret
inc
out
jge
jg
jmp
sub
inc
out
adc
inc
inc
jecxz
push
in
dec
aad
sub
aaa
inc
fisttpll
out
in
call
inc
aam
dec
leave
jg
xchg
testb
mov
inc
mov
les
mov
mov
fcoms
mov
int
pop
enter
cmpsl
xor
inc
aam
dec
lods
es
cmp
mov
movsb
xor
notl
xor
cmp
xor
cmpsb
xor
int
mov
insl
add
pop
int
addr16
dec
fisttpll
out
or
adc
and
lea
xchg
xor
xor
lcall
leave
outsl
cmc
gs
pop
jecxz
call
adc
in
sbb
pusha
std
insl
hlt
pop
xor
jmp
jge
stos
sub
sahf
or
cmpsb
dec
push
rolb
shlb
mov
sahf
stc
or
push
pop
jp
inc
out
imul
fdivl
in
dec
push
xor
cmp
notl
pop
aad
sub
cmp
vpaddw
jle
pop
or
pop
rolb
shlb
xchg
mov
std
outsb
cld
fwait
jbe
or
add
xor
cmpl
les
sti
imul
dec
push
push
xor
push
outsl
scas
xchg
aad
xchg
or
movsb
ret
ds
clc
data16
xchg
outsb
jmp
push
adc
sub
pop
test
fwait
decb
push
pop
add
adc
stos
out
insb
mov
sub
sub
cmp
shrb
cmc
lcall
lea
xchg
repz
in
or
lods
sub
lret
lret
push
lahf
push
in
lcall
stc
cwtl
imul
dec
fistpll
fidivrl
jo
loop
push
mov
es
scas
aas
scas
lret
add
push
les
int3
jnp
daa
mov
and
inc
sub
in
jg
add
dec
sbb
add
cs
push
les
mov
sbb
out
sti
adc
mov
mov
test
mull
icebp
or
popf
or
xor
jb
xchg
and
push
mov
lock
mov
push
cmc
daa
fcoml
mov
mov
mov
pop
ja
mov
cmp
and
xchg
sub
mov
inc
mov
popf
insb
fcmovnbe
inc
shll
ret
cmpsb
push
nop
insb
cmc
gs
pop
pop
test
jg
mov
test
mov
sbb
imul
in
jge
idivl
xor
int
aam
dec
fistpll
jge
notl
rcrl
scas
pop
movsl
fistps
test
insb
or
repz
lret
lret
lods
lret
inc
mov
mov
jns
push
adc
loop
pop
loop
mov
scas
leave
cmp
stc
shll
mov
mov
xchg
sub
push
mov
jle
and
idiv
jae
xchg
pop
int3
inc
and
insl
hlt
pop
lods
outsl
stc
imul
mov
es
mov
and
movsb
cmp
inc
push
popf
or
mov
js
push
aam
fisttpl
scas
sub
in
jae
xchg
mov
lods
clc
jg
mov
push
xlat
inc
and
and
push
mov
cmpsl
ret
das
stos
cmp
inc
stc
jno
xorb
push
ret
cmpsb
push
mov
stc
imul
int3
stos
xchg
or
es
fisttpl
imul
adc
shll
pop
cmp
popa
aam
fidivrl
sub
adc
xchg
mull
xchg
pusha
leave
mov
aad
xchg
sbb
lds
iret
push
movsb
cmp
jmp
loope
jae
mov
mov
push
mov
adc
push
xchg
adc
in
sbb
stos
sub
out
jg
jmp
stos
sbbw
sub
daa
cmpsb
daa
mov
and
cmc
ja
xorb
lods
and
pop
loope
stc
cwtl
imul
iret
sbb
or
js
repnz
insb
lahf
jne
mov
inc
mov
ja
jle
call
jl
inc
mov
lret
out
mov
adc
dec
into
pop
cmp
sub
inc
and
or
inc
inc
xlat
mov
cmpsl
jl
fs
or
loope
push
xchg
mov
or
movsb
ret
ds
cmp
mov
gs
push
adc
aas
lods
and
add
imul
gs
dec
mov
mov
sbb
push
loopne
in
jge
negl
push
xor
jbe
add
cld
xchg
cmc
add
cwtl
add
ja
xorb
pop
enter
jne
jns
jmp
cmp
mov
gs
pop
lods
cs
inc
xlat
mov
cmpsl
fsubl
xchg
gs
push
lret
mov
inc
xchg
nop
adc
in
sbb
nop
sbb
fimull
fisubrl
jl
gs
pop
cli
jb
xchg
xor
cmpsb
sub
mov
dec
push
xor
or
sti
pop
mulb
dec
dec
fimuls
dec
push
mov
xchg
daa
jmp
call
xor
dec
fstpt
cmpsl
ret
lahf
or
sub
sbb
test
cmpsb
shll
xlat
dec
fdivrl
dec
sub
pop
int3
push
shll
mov
add
adc
inc
shll
mov
adc
stos
cmp
jge
push
mov
pop
cmp
xchg
icebp
add
cmp
pop
push
add
lods
lret
inc
mov
jae
xchg
iret
inc
mov
xchg
jge
addr16
cmp
adc
or
xchg
addr16
movsb
xor
int
lea
pop
cmp
jle
mov
add
pop
int3
inc
and
sbb
sub
sbb
push
ret
cmpsb
push
mov
pop
lret
scas
pop
mov
or
xchg
add
adc
arpl
xchg
gs
sub
aam
sub
xor
scas
inc
pop
fstpt
xlat
inc
and
and
push
cmp
sbb
mov
daa
mov
and
jge
gs
push
adc
rcrl
test
mov
push
mov
aaa
xchg
jae
xchg
cmc
add
mov
scas
lret
daa
stos
cmp
or
insb
ficoml
pop
ds
pop
lret
lret
pop
jp
ds
pop
iret
stos
pop
les
mov
mov
jns
mov
rcrl
pop
lcall
dec
xlat
inc
and
xor
imul
lret
jecxz
adc
add
pop
iret
stos
pop
scas
loop
notl
jbe
loopne
rclb
mov
mov
dec
fidivrs
frstor
sbb
push
orb
decl
stc
jae
outsb
or
sbb
pop
cmp
sub
sbb
loopne
adc
inc
push
xchg
pop
bound
xor
add
mov
scas
adcb
loop
mov
push
pushf
sti
push
cmpsl
mov
mov
and
aam
mov
sahf
std
outsl
lcall
lds
jg
dec
rorb
mov
enter
jns
jbe
loopne
mov
cmpsb
popf
add
add
int3
inc
and
jae
in
cld
adcl
test
xchg
add
sahf
pusha
lods
sub
loope
adc
adc
adcb
subb
sub
dec
je
aaa
mov
fsts
mov
lret
sti
and
jmp
test
das
mov
stos
cmp
sbb
fwait
or
xor
push
lds
pop
test
lcall
xchg
cmp
jo
loop
jae
je
out
dec
divl
xchg
daa
mov
je
bound
movsb
ret
ds
enter
pop
fsts
pop
cmp
push
dec
int3
inc
and
sub
push
push
xchg
add
sahf
jbe
fisttpll
out
out
notl
dec
sub
xor
push
xor
cmp
pop
cmp
adc
and
pushf
adc
in
sbb
icebp
js
mov
sub
fistl
pop
mov
in
dec
lds
iret
push
lods
and
add
mov
inc
mov
jne
jnp
in
pop
lods
cmp
mov
in
cmpsl
aaa
cmpsl
ret
add
fwait
or
loopne
jmp
jge
push
lret
lret
pop
repnz
fs
insl
std
test
in
je
lea
test
rcrl
data16
inc
and
pop
call
andl
dec
mov
mov
add
adc
test
mov
jb
outsb
or
or
xchg
add
jo
loopne
adc
add
loope
adc
adc
je
lea
mov
inc
mov
mov
movsb
das
mov
mov
push
push
xor
adc
dec
fmuls
fdivs
mov
jg
cmp
stos
push
mov
add
js
mov
cmpsl
cmp
mov
cmpsb
dec
fdivrl
mov
test
jb
xchg
stc
data16
xchg
outsb
jmp
add
imul
sbb
add
lock
bound
and
loopne
hlt
xchg
outsb
nop
mov
stos
into
cmp
scas
pop
scas
pop
fisttpll
out
add
jle
imul
sbb
push
xor
arpl
cmc
add
ret
push
lds
enter
push
fisttpll
out
lahf
adc
sub
insb
or
scas
setge
adc
movsb
cmp
sbb
dec
incb
push
popa
nop
daa
push
lret
pop
ds
fs
insb
or
lds
mov
rcl
push
ret
cmpsb
push
mov
aas
mov
cmp
xchg
loopne
jb
ret
mov
stos
test
std
or
add
jg
pop
int3
stos
data16
fdivl
in
int3
dec
fistpll
or
push
sahf
or
cmpsb
inc
xor
push
xor
lcall
push
fistpll
jne
out
das
mov
fwait
ret
push
mov
push
jno
sub
push
les
arpl
cmc
pop
iret
pop
iret
stos
pop
xchg
xchg
adc
out
pop
cmp
xchg
or
jecxz
out
mov
in
jnp
mov
jl
jnp
in
add
inc
and
push
lea
and
xchg
lret
mov
jnp
in
add
xor
dec
add
sub
pop
fmuls
fmuls
cmp
add
push
fsubrl
stos
daa
mov
and
pop
rolb
shlb
aaa
mov
popf
adc
cmc
gs
sub
orl
sti
push
mov
sbb
mov
mov
and
loop
jge
bound
inc
and
popa
mov
lahf
out
jns
mov
mov
fwait
nop
or
movsl
xor
add
add
mov
dec
mov
dec
mov
and
sbb
out
jg
jmp
lods
pop
mov
cli
push
fmuls
fsubs
pop
adcb
adcb
add
data16
pop
jp
jg
pushf
xor
push
jb
outsl
or
in
adc
in
imul
insl
cwtl
mov
xchg
repz
test
cs
inc
into
pop
cmp
adc
in
jge
notl
mov
inc
mov
or
mov
test
push
xor
push
xchg
and
lods
lret
inc
out
jge
jg
jmp
sub
inc
out
adc
inc
inc
jecxz
push
in
dec
aad
sub
aaa
inc
fisttpll
out
in
call
inc
aam
dec
leave
jg
xchg
testb
mov
inc
mov
les
mov
mov
fcoms
mov
int
pop
enter
cmpsl
xor
inc
aam
dec
lods
es
cmp
mov
movsb
xor
notl
xor
cmp
xor
cmpsb
xor
int
mov
insl
add
pop
int
addr16
dec
fisttpll
out
push
ret
ret
popa
icebp
nop
arpl
ret
push
les
je
out
sub
sub
or
pop
jecxz
call
adc
in
sbb
pusha
std
insl
hlt
pop
xor
jmp
jge
stos
sub
sahf
or
cmpsb
dec
push
rolb
shlb
mov
sahf
stc
or
push
pop
jp
inc
out
imul
fdivl
in
dec
push
xor
cmp
notl
pop
aad
sub
cmp
vpaddw
jle
pop
or
pop
rolb
shlb
xchg
mov
std
outsb
cld
fwait
jbe
or
add
xor
cmpl
les
sti
imul
dec
push
push
xor
push
outsl
scas
xchg
aad
xchg
or
movsb
ret
ds
clc
data16
xchg
outsb
jmp
push
adc
sub
pop
test
fwait
decb
push
cmpsl
inc
push
aam
sub
cld
fwait
jbe
ficompl
stos
xchg
cmpsb
and
add
push
xchg
repz
in
or
lods
sub
lret
lret
push
lahf
push
in
lcall
stc
cwtl
imul
dec
fistpll
fidivrl
jo
loop
push
mov
es
scas
aas
scas
lret
add
push
les
int3
jnp
daa
mov
and
inc
sub
in
jg
add
dec
sbb
add
cs
push
les
mov
sbb
out
sti
adc
mov
mov
test
mull
icebp
or
popf
or
xor
jb
xchg
and
push
mov
lock
mov
push
cmc
daa
fcoml
mov
mov
mov
subb
out
in
jg
pop
lret
lret
pop
into
test
and
mov
popf
insb
fcmovnbe
inc
shll
ret
cmpsb
push
nop
insb
cmc
gs
pop
pop
test
jg
mov
test
mov
sbb
imul
in
jge
idivl
xor
int
aam
dec
fistpll
jge
notl
rcrl
scas
pop
movsl
fistps
test
insb
or
repz
lret
lret
lods
lret
inc
mov
mov
jns
push
adc
loop
pop
loop
mov
scas
leave
cmp
stc
shll
mov
mov
xchg
sub
push
mov
jle
and
idiv
jae
xchg
pop
int3
inc
and
insl
hlt
pop
lods
outsl
stc
imul
mov
es
mov
and
movsb
cmp
inc
push
popf
or
mov
js
push
sbb
adc
push
pop
fisttps
fldcw
cmp
mov
lods
clc
jg
mov
push
xlat
inc
and
and
push
mov
cmpsl
ret
das
stos
cmp
inc
stc
jno
xorb
push
ret
cmpsb
push
mov
stc
imul
int3
stos
xchg
or
es
fisttpl
imul
adc
shll
pop
cmp
popa
aam
fidivrl
sub
adc
xchg
mull
xchg
pusha
leave
mov
aad
xchg
sbb
lds
iret
push
movsb
cmp
jmp
loope
jae
mov
mov
push
mov
adc
push
xchg
adc
in
sbb
stos
sub
out
jg
jmp
stos
sbbw
sub
daa
cmpsb
daa
mov
and
cmc
ja
xorb
lods
and
pop
loope
stc
cwtl
imul
iret
sbb
or
js
repnz
int
xor
cmc
in
daa
imul
add
outsb
cld
fwait
jbe
inc
aam
sub
add
adc
sub
js
mov
daa
ret
push
lds
jnp
jbe
loopne
xlat
leave
xor
jp
or
pop
xchg
repnz
dec
jg
mov
jmp
mov
shl
insb
loop
je
sbb
mov
lahf
cli
or
int3
add
movzbl
inc
add
jmp
sti
js
mov
push
roll
sarl
xchg
adc
and
xor
pop
out
push
notb
addb
or
in
push
je
lea
pop
repnz
fs
jb
xchg
mov
fwait
decb
cmpsb
push
hlt
popl
xchg
icebp
add
mov
test
cmp
pop
fisttpl
fnstsw
cmp
sbb
out
scas
lods
lret
inc
neg
dec
ret
std
pusha
mulb
dec
mov
mov
and
enter
dec
fdivrs
loope
jae
cmp
xor
in
jge
negl
push
popf
or
fs
popf
insb
jmp
sub
jp
jp
ja
push
cld
adc
test
pop
test
xor
pop
mov
cwtl
decl
hlt
pop
jecxz
push
in
loopne
cli
popf
insb
cltd
fsubs
xchg
mov
dec
xchg
sbb
xchg
pop
mov
ret
ds
test
int3
inc
shll
jnp
in
sub
fs
popf
insb
lret
push
test
jge
cmp
jge
je
sub
push
xchg
repz
mov
add
mov
pop
xchg
add
es
lds
iret
push
xlat
inc
and
sbb
fimuls
add
xchg
add
mov
dec
rolb
rclb
jnp
mov
roll
inc
mov
imul
insl
sbb
into
test
push
jno
gs
jne
mov
mov
cltd
clc
or
ja
popa
add
add
jg
mov
push
test
jge
jg
push
mov
les
shll
mov
mov
shll
pop
cmp
add
pop
cmp
adc
push
xchg
repz
test
das
fwait
xchg
mov
sbb
les
test
pop
leave
test
lock
testb
inc
in
ja
jno
jecxz
test
xchg
adc
pushf
pop
call
xchg
or
jno
xor
mov
dec
aad
sub
pop
ret
mov
mov
add
sbb
gs
xor
jp
jp
adc
out
adc
sbb
pop
nop
sbb
mov
fcoms
mov
xchg
adc
mov
xchg
pusha
in
jge
mull
imul
cwtl
sbb
sbb
aad
xchg
out
jmp
jge
add
in
jl
jne
sub
decl
xchg
adc
mov
pop
ljmp
jecxz
mov
jle
imul
jl
lea
push
ret
cmpsb
push
aam
call
push
and
fildl
arpl
cmp
enter
push
sbbb
pop
fdivl
in
jne
insl
hlt
pop
notb
cwtl
push
imul
jno
xorb
push
mov
cmp
mov
xchg
push
aam
iret
stos
pop
rorb
imul
or
push
jne
jnp
in
pop
push
push
xor
and
xchg
add
movsl
xor
push
shlb
or
ds
lds
iret
das
xchg
push
pushf
sti
push
cld
fildl
mov
stos
data16
outsb
or
jg
adcl
rcll
or
push
movsl
sub
xchg
add
ljmp
ret
sub
std
test
inc
les
int3
and
pop
jp
fs
xchg
cmc
add
inc
enter
sub
stos
cmp
pop
int3
inc
shlb
mov
sbb
sahf
adc
mov
sub
mov
mov
jmp
mov
std
or
cmp
cmp
mov
jns
js
ljmp
aam
jno
xorb
adc
adc
in
sbb
lahf
or
or
mov
add
mov
jb
jns
jmp
pusha
notb
clc
lahf
push
xor
aaa
mov
dec
mov
int
aam
adcl
repz
cmc
or
mov
or
push
jns
jge
and
jp
jp
cltd
adc
mov
fcoms
mov
inc
xchg
jmp
push
rclb
jbe
aaa
cmpsl
ret
mov
mov
sub
jp
jp
aas
test
pop
test
cmpsl
xor
sti
imul
pop
sbb
adc
mov
jae
xchg
icebp
outsl
lcall
bound
addr16
js
fs
popf
insb
jmp
cli
push
xor
mov
inc
mov
pop
fisttps
flds
inc
push
xor
xor
sbb
pop
sub
adc
in
sbb
dec
lret
pop
ds
sub
mov
test
xor
mov
jg
sub
jp
ds
inc
mov
stos
and
jo
jo
loop
popf
push
pushf
sti
push
mov
pop
jmp
sub
add
addr16
add
xlat
inc
shlb
sub
jg
xchg
pop
bound
fisubrl
fstl
loope
in
jge
divl
jge
je
add
rcrl
sub
xor
jo
xorl
inc
mov
pop
jecxz
adc
std
insl
hlt
pop
lock
mov
test
push
les
aas
pop
test
xchg
cld
jnp
mov
fcoms
mov
and
xlat
pop
leave
test
fwait
xor
pop
pop
enter
jle
sub
sub
push
xor
add
cmp
js
mov
pop
iret
pop
cmp
jle
sbb
sbb
pop
lret
scas
pop
cwtl
xchg
aad
cmp
cmpsl
lods
lret
inc
scas
jo
jl
divb
lcall
inc
and
mov
clc
outsb
or
adc
in
adc
xchg
adc
notl
dec
leave
pop
cmp
and
imul
or
push
inc
fidivrl
or
inc
shll
popf
in
shl
cld
fwait
jbe
mov
test
cmp
xchg
and
mov
out
adc
pop
out
jle
mov
decl
mov
adc
pop
ljmp
data16
call
inc
shll
lahf
cli
or
imulb
test
loope
in
je
add
pop
leave
test
fimuls
pop
inc
push
xor
es
adc
in
sbb
imul
pop
ljmp
jmp
add
push
lahf
push
xchg
adc
jmp
notl
cmp
dec
xor
sbb
inc
int
and
jb
pop
xchg
adc
dec
les
int3
push
inc
int
and
jb
dec
fnstcw
mov
mov
push
aad
shll
test
inc
fidivrl
popa
add
push
cmc
insl
std
test
sub
mov
lds
push
xor
es
push
cld
jnp
push
les
pop
and
sbb
push
les
dec
fnsave
mov
stos
into
cmp
and
add
mov
js
jl
add
std
or
jnp
addr16
or
mov
inc
mov
push
jecxz
push
in
ficoms
lods
pop
scas
fcoml
cmpsl
push
cmc
jp
imul
das
mov
icebp
mov
lcall
mov
and
xchg
add
std
or
stos
inc
shll
cmp
add
aaa
sbbb
sbb
add
popf
or
roll
sarl
fmull
mov
mov
cs
mov
loopne
lock
bound
push
out
sahf
push
mov
es
pop
xchg
add
sahf
jnp
nop
push
popa
nop
outsb
adc
pushf
aaa
mov
mov
jg
sub
push
test
call
add
mov
scas
cmp
mov
in
insl
add
loope
adc
dec
imul
testb
lret
mov
dec
mov
testb
sbb
pop
repnz
xchg
pop
jp
jge
cmc
gs
adc
sbb
clc
jg
and
popf
push
mov
es
addb
icebp
add
fsubl
xchg
xchg
pop
cmp
sub
pusha
pushf
lea
jmp
idivb
lds
aas
add
or
add
lods
jp
out
clc
scas
pop
pop
pop
jne
dec
mov
adcl
jecxz
push
in
das
cmpsl
js
push
andl
pop
fbld
js
mov
cmpsb
repz
call
jmp
sub
pop
sbb
push
or
xchg
add
arpl
xchg
or
push
dec
addr16
adcb
add
pop
mov
cltd
sahf
mov
lret
adc
nop
push
sbb
pop
repnz
fs
inc
xlat
mov
lea
adc
dec
fimull
leave
dec
and
pop
fisttpl
mov
insb
or
scas
sub
pop
enter
mov
orl
or
cmp
mov
repz
xor
je
inc
and
sub
ret
push
lds
push
mov
gs
addr16
jecxz
push
in
aam
repnz
fs
call
cltd
or
rcrl
fs
inc
xlat
mov
lea
adc
dec
fimull
mov
and
mov
mov
insb
or
scas
sub
pop
enter
setns
push
or
cmp
mov
repz
stc
ror
sbb
aas
mov
cmp
or
push
jmp
loop
adc
adc
add
cltd
cmc
popa
icebp
nop
arpl
enter
addr16
add
fimull
insl
mov
lcall
mov
lods
lret
inc
test
pushf
and
test
subb
or
jmp
stos
aas
scas
lret
push
lret
pop
ds
mov
xchg
cmp
add
dec
sub
pop
push
xor
dec
push
leave
pop
cmp
dec
outsb
nop
jmp
in
add
push
pop
push
jmp
mov
add
jo
dec
jne
xchg
add
add
pop
and
arpl
je
out
inc
cmp
sub
sbb
push
addl
jmp
xlat
cmpsb
add
jmp
xchg
setg
or
call
lcall
jmp
call
daa
dec
hlt
arpl
push
addl
jmp
xor
xor
adc
mov
push
aaa
ret
jb
xchg
dec
aad
sub
push
cs
adc
setbe
sahf
jbe
push
addl
push
addl
jmp
cld
xchg
cmc
add
or
adc
cmp
aad
les
scas
lret
or
add
or
adcl
leave
pop
cmp
and
cmp
and
arpl
xor
xor
mov
add
cmp
dec
mov
sti
addl
push
jmp
ret
movsl
push
repz
pop
inc
into
pop
cmp
adc
and
out
adc
pop
sbb
mov
mov
push
mov
es
mov
mov
mov
and
mov
xchg
gs
test
xchg
repnz
cmp
inc
or
fldl
mov
movb
dec
fdivrs
xlat
mov
cmpsl
sub
sub
add
mov
lahf
sbb
das
mov
lds
iret
ds
test
add
rcrl
scas
pop
test
mov
cli
jnp
mov
and
jne
xchg
jb
sub
cmpsl
inc
rolb
sarb
aas
scas
lret
mov
lahf
rolb
dec
std
jbe
ja
loope
stos
lods
lret
inc
icebp
inc
xlat
inc
and
js
sahf
or
cmpsb
faddl
mov
mov
or
sub
dec
fnstcw
cmc
pushf
outsl
movsb
dec
int3
inc
and
pop
aas
lret
call
ret
dec
fstpt
mov
sbb
xchg
bound
add
sbb
daa
lods
and
push
loopne
cltd
push
lds
cltd
adc
mov
shll
cmp
push
shll
jle
cmp
mov
fimuls
mov
jp
in
inc
daa
mov
inc
mov
cmp
xchg
pop
xchg
repnz
fidivrl
fisttpl
fstpl
or
xor
and
pop
mov
frstor
stos
pop
loopne
setg
or
sahf
and
outsl
lcall
in
cli
popa
cmpl
jne
call
jmp
and
xchg
adc
add
xchg
pop
bound
fldcw
sarb
adc
inc
popl
fsts
mov
adc
and
test
pop
test
enter
dec
mov
test
inc
mov
testb
push
popa
nop
cmp
divb
push
in
inc
setg
push
push
fimuls
mov
lcall
push
in
jg
jnp
in
sub
jmp
and
aad
sub
xor
xchg
sbbb
stos
cmp
bound
rcrb
sahf
or
cmpsb
dec
xchg
adc
in
sbb
jge
imul
pop
cmp
push
daa
mov
stos
sub
or
test
idivl
je
popa
imul
pop
loop
pop
roll
shll
es
cs
jmp
test
out
popa
icebp
popa
add
inc
push
rclb
imul
and
sti
imul
dec
in
jns
mov
add
push
popa
nop
daa
mull
xchg
lds
dec
das
ficompl
scas
cmp
ja
xorb
stos
cmp
inc
loop
adc
add
xchg
dec
enter
add
inc
shll
mov
mov
jge
pop
fimull
fimull
xor
gs
pushf
outsl
test
jmp
fisttpll
out
stos
and
push
mov
es
test
jge
sub
cld
inc
into
pop
cmp
adc
test
pop
test
loop
out
jo
je
jne
out
inc
lret
scas
pop
jmp
or
out
out
jo
xor
lcall
inc
shll
mov
fisttpll
out
sub
and
sub
mov
inc
mov
bnd
xchg
pop
mov
ret
mov
cmpsl
out
insl
std
test
and
lcall
rolb
rolb
pop
fdivl
in
mov
stos
int
aam
out
jl
testb
in
out
adc
or
dec
sub
sub
adc
repnz
fs
movsb
ret
ds
dec
rcll
lea
std
outsb
cld
fwait
jbe
lcall
mov
xchg
aas
mov
mov
and
ja
adcb
sbb
cli
insl
std
test
cmp
pop
lret
pop
ds
and
sub
mov
xchg
jle
xor
loopne
in
je
add
mov
jns
inc
sub
sub
jne
push
cld
sbb
daa
shrb
add
pop
leave
test
lods
xchg
nop
testl
dec
mov
mov
cmp
lahf
push
test
push
in
jmp
sti
sahf
insl
int3
popa
out
jl
mulb
cwtl
adc
in
sbb
push
fimuls
inc
loopne
loopne
jb
jle
arpl
cmc
pop
jl
bound
add
pop
push
nop
push
popa
nop
and
cwtl
push
imul
out
jg
jmp
push
mov
dec
mov
push
in
setbe
sahf
jbe
les
int3
dec
scas
aaa
cmpsl
ret
nop
adc
jg
mov
data16
adc
push
pop
sahf
or
cmpsb
inc
dec
leave
pop
cmp
aaa
xor
and
data16
test
mov
ja
xorb
roll
aad
jp
pusha
pop
repnz
outsl
out
adc
sbb
xor
cmp
stc
or
push
fmuls
fdivrs
mov
or
cmpxchg
mov
and
clc
push
lock
xchg
outsb
fists
push
cmp
fs
ljmp
das
fidivrl
adcl
lea
cld
xchg
cmc
add
inc
jb
bound
mov
mov
sbb
imul
sbb
add
push
aaa
ret
test
adc
add
inc
movsb
and
std
insl
hlt
pop
in
sti
ja
xorb
in
bound
test
pop
stc
int3
dec
fstpt
lcall
push
cmp
sbb
lcall
jl
notb
cmp
insb
loop
je
and
cmp
cmpsl
aaa
cmpsl
ret
mov
sahf
aas
test
sti
outsb
cld
fwait
jbe
xchg
aad
out
setg
or
cld
fs
popf
insb
xchg
pop
int
lea
loop
cwtl
xchg
adc
cmc
gs
xor
and
mov
jle
loop
cli
popf
insb
xchg
rclb
lods
pop
mov
ret
push
lds
push
rolb
sarb
push
fdivl
in
call
orl
pop
jb
imul
imul
push
in
dec
cld
jno
xorb
adc
pusha
notb
sahf
stc
or
outsl
les
pop
in
std
insb
loop
je
xor
xor
adc
mov
mov
pop
enter
outsl
jge
jne
out
divb
xchg
push
pusha
pop
repnz
xchg
cmc
add
rorb
push
sar
notl
inc
lret
pop
ds
and
xor
sbb
jae
pusha
pop
repnz
cld
jp
jp
dec
int3
inc
and
cmpsb
shll
movb
inc
test
adc
sub
scas
es
cs
cli
popf
insb
lahf
jle
add
push
lret
inc
fidivrl
add
push
fistl
mov
inc
and
xchg
icebp
add
mov
mov
pushf
pop
int
and
fs
aaa
push
mov
shlb
push
rclb
addr16
or
in
xlat
xchg
mov
and
mov
test
pop
mov
push
lret
frstpm(287
jp
jp
loopne
adc
sub
movsb
cmp
inc
addl
popa
loopne
adc
add
xchg
imul
les
mov
mov
sub
mull
icebp
or
mov
xchg
je
adcb
andb
mov
mov
sbbl
inc
cmpsl
sub
insb
loop
je
sub
imul
pop
test
in
bound
and
leave
pop
cmp
pusha
xchg
add
inc
aad
sub
jp
push
pushf
sti
push
aad
loop
pop
loop
xor
ljmp
loop
pop
loop
aaa
test
pop
test
aaa
mov
roll
inc
stos
dec
enter
and
shll
and
dec
xchg
adc
insb
loop
je
int
fidivrs
push
jno
jae
notl
fcoms
mov
shll
xchg
testb
sbb
jle
pusha
pop
repnz
jb
xchg
push
mov
gs
and
dec
fdivrs
cltd
clc
or
insb
lds
cli
jae
xchg
stos
cmp
sbb
fs
popf
insb
scas
push
into
pop
cmp
xor
repnz
inc
mov
xchg
or
repnz
pop
repnz
addr16
pop
stc
jg
mov
pushf
and
lods
cmp
pop
xchg
repnz
xor
bnd
mov
outsl
jmp
push
in
sbb
je
out
or
mov
int3
dec
fstpt
push
cld
pop
in
popa
icebp
nop
arpl
je
rclb
push
hlt
push
lds
iret
jnp
test
mov
jns
cmp
or
sub
scas
add
mov
jg
cmp
leave
jo
jno
xorb
mov
ret
pop
leave
test
mov
push
ret
cmpsb
push
mov
inc
sti
fs
popf
insb
jmp
ret
ret
xor
xchg
or
je
mov
lea
cltd
clc
or
pop
fisttpll
out
mov
cmpsl
ret
test
fdivl
imul
leave
test
mov
and
idivb
je
jbe
add
sahf
or
cmpsb
jb
mov
jg
dec
jne
outsb
or
pop
es
dec
mov
into
cmp
cmp
iret
stos
pop
into
adc
xor
int
xchg
push
ret
ret
mov
cmp
rorl
mov
out
mov
ja
jl
negb
fadds
mov
leave
mov
mov
in
sbb
jb
in
or
scas
cs
clc
outsb
or
push
add
adc
push
dec
iret
pop
cmp
and
inc
mov
test
add
aas
mov
dec
mov
pushf
outsl
mov
dec
inc
xlat
mov
call
cmpsb
jb
adc
sub
mov
inc
mov
adcb
loop
mov
rcll
jo
sbb
sbb
jns
mov
jle
js
ljmp
jle
jnp
mov
cs
rcrl
pop
lea
aam
adcl
adcl
xchg
add
pop
pushf
sbb
cmc
jnp
mov
pop
fstpt
adc
inc
fidivrl
aad
dec
mov
fbstp
sub
pushf
adc
inc
iret
pop
cmp
xor
cmpsl
aaa
push
mov
adc
inc
dec
push
xor
sbb
je
lea
enter
outsl
movsb
movsb
ret
mov
mov
xchg
test
push
scas
and
loop
ljmp
lret
inc
out
jo
jp
in
pop
lock
insl
int3
sbbl
push
ret
cmpsb
push
mov
hlt
push
cld
push
add
or
dec
aad
sub
pop
sub
push
add
cmp
inc
je
imul
push
push
cwtl
push
imul
mov
inc
mov
inc
lds
iret
and
movsl
push
mov
shll
sbb
outsb
stos
and
cs
std
insl
hlt
pop
rcr
pop
lret
scas
pop
cltd
pop
fisttpl
fnstsw
jbe
loopne
pop
mov
gs
cmp
fildll
and
mov
fs
loopne
adc
dec
sub
jge
jle
call
lods
pop
lahf
aaa
lods
and
push
sbb
sti
lock
bound
out
imul
repz
mov
jno
xorb
and
scas
aas
pop
test
sbb
or
jge
je
push
jo
push
cld
or
jns
mov
push
fimull
fisubrl
jp
addr16
sbb
xor
mov
mov
mov
roll
rcll
inc
int
and
jb
scas
aas
pop
test
jp
ds
and
add
jb
iret
pop
iret
stos
pop
insl
cli
push
xor
int
mov
stos
cmp
or
test
imul
xchg
add
js
aad
sub
xor
mov
dec
inc
and
pop
push
jle
call
lret
inc
scas
mov
rcl
push
shlb
in
jmp
push
ret
cmpsb
push
test
pop
cmp
and
jns
mov
mov
int
xor
insl
std
test
popf
adc
in
sbb
xchg
sbb
aad
and
jecxz
jne
jl
add
xor
imul
notb
pop
lret
lret
sub
pop
xchg
repnz
cli
push
mov
subl
faddl
mov
lea
call
cmpl
je
lea
jmp
lidtl
jmp
popf
scas
cli
call
jmp
popf
or
or
in
add
sub
jmp
adc
push
jno
aaa
xlat
pop
arpl
and
add
jmp
fsubs
call
jmp
mov
mov
jnp
mov
xor
adc
call
jmp
nop
add
add
jmp
cmc
jae
xchg
lret
push
shlb
jo
push
cmp
xor
es
scas
inc
push
push
jmp
arpl
ja
loope
adc
lea
pusha
jmp
sbb
dec
frstor
xchg
gs
pop
int
addr16
adc
jp
mov
jmp
out
notl
aad
dec
mov
aaa
fldl
sbb
outsl
outsl
bound
jb
je
arpl
inc
and
cs
inc
gs
outsl
add
popf
add
clc
jno
xorb
data16
xchg
outsb
mov
js
mov
sbb
mov
mov
mov
push
jmp
dec
rclb
addr16
dec
ret
orb
mov
xchg
xor
xor
jmp
mulb
dec
xor
mov
mov
cs
mov
mov
decl
jmp
inc
sub
cmp
jmp
pop
iret
pop
cmp
data16
mov
rclb
jmp
mov
jmp
repz
mov
mov
inc
mov
mov
pop
cmp
fsubs
cmp
jmp
in
jbe
cmpl
adcl
inc
aad
dec
movsl
mov
stos
mov
test
pop
xor
add
add
je
jmp
insb
out
jl
idivb
mov
cwtl
decl
loop
ljmp
sub
add
add
or
add
add
call
jmp
ljmp
std
insl
hlt
pop
sti
ret
inc
fidivrl
and
out
mov
dec
mov
sbb
add
dec
fdivrs
jns
jmp
pop
roll
shll
imul
push
in
dec
sub
orb
adc
pop
aam
sub
daa
inc
mov
arpl
add
pop
mull
pushf
outsl
fdivr
imul
jo
xorl
mov
into
pop
enter
or
punpckhdq
icebp
add
xor
push
enter
and
cld
pop
pop
jp
adc
movsb
cmp
sub
push
ret
cmpsb
push
lcall
add
mov
pop
enter
bnd
xchg
pop
sahf
or
cmpsb
inc
sub
in
sbb
lock
bound
inc
scas
xor
mov
scas
lret
mov
test
int
and
jb
jns
mov
fstps
scas
pop
cltd
inc
iret
pop
cmp
jo
aas
scas
lret
and
int
repz
rolb
inc
and
jbe
add
add
fimull
fisubrl
mov
jns
das
xor
jbe
int
and
aaa
fisttpll
mov
push
push
push
push
jmp
in
jnp
mov
imulb
cltd
push
xchg
xor
and
mov
call
push
xor
cwtl
decl
out
jmp
mov
mov
lds
mov
mov
push
mov
dec
movsb
mov
aad
xchg
jb
imul
cmp
mov
jg
pop
pop
roll
rcll
out
clc
lahf
push
lods
cmp
mov
pop
roll
aad
in
jmp
jge
lods
cmp
mull
icebp
push
movsl
aaa
cmpsl
ret
dec
fimull
fidivrl
lods
cmp
push
pushf
sti
push
hlt
push
enter
and
mov
dec
mov
xorb
mull
icebp
js
mov
movsl
es
cs
adc
adc
jns
pop
xchg
adc
sbb
in
bound
enter
jnp
mov
cmp
movsb
sub
lds
call
pushf
mov
scas
lret
ja
outsb
or
sub
rolb
rclb
mov
scas
lret
push
pushf
xor
adc
push
ret
cmpsb
push
cli
cmpsb
xor
scas
pop
or
fimuls
mov
test
push
lds
lea
and
test
jmp
pushf
outsl
xchg
fs
popf
insb
test
mov
jmp
mov
mov
ret
cmpsl
and
push
aam
sub
and
mov
mov
icebp
jnp
mov
roll
movsb
lock
jp
mov
rorl
adcb
andb
cmp
and
ss
pop
mov
jns
pop
jmp
cmc
pushf
outsl
scas
sub
aaa
push
mov
lcall
mov
mov
jp
in
inc
lods
cmp
int3
inc
and
dec
sub
outsb
xchg
add
mov
ss
inc
mov
mov
mov
fs
popf
insb
test
lahf
punpckhdq
jae
or
pushf
xor
insl
add
mov
movsb
ret
ds
mov
mov
ss
add
and
jns
jmp
in
outsl
lcall
add
add
js
ljmp
mov
pop
scas
in
bound
xchg
repz
fiaddl
aam
dec
fdivrs
fwait
decb
xlat
and
int
mov
fimull
push
in
fwait
or
xor
push
xor
jbe
gs
pushf
outsl
lret
pop
jb
dec
cs
cli
lock
bound
int
inc
fisttps
fldenv
jne
mov
cwtl
sbb
or
addb
testl
xchg
orl
imul
into
test
into
test
inc
and
cmp
imul
or
repz
lea
outsb
cld
fwait
jbe
inc
iret
pop
cmp
jo
out
jg
jmp
mov
lea
push
xor
imul
sub
dec
fstpt
mov
pop
leave
test
lock
test
xor
push
inc
negl
pop
cmp
outsb
sahf
add
std
or
pushf
add
lret
push
shll
mov
cmpsl
inc
fdivl
in
jnp
jp
in
imul
sub
jne
inc
shll
xor
scas
inc
sub
in
push
lahf
push
jmp
mov
lahf
push
stos
inc
mov
iret
arpl
jle
call
pop
lods
dec
popf
adc
in
sbb
ret
push
ret
cmpsb
push
hlt
aaa
mov
lods
daa
mov
and
xchg
push
mov
adcl
xorb
xchg
or
sub
ss
dec
fimull
fisubrl
xor
int
xchg
jl
jle
call
insl
pushf
cmp
stos
cmp
push
loope
dec
rolb
sarb
int3
pop
lret
scas
pop
mov
dec
fnstcw
sbb
pusha
notb
cmpsb
shll
les
dec
movsb
scas
cs
add
std
or
xchg
xchg
repnz
pop
fisttpll
out
adc
js
xchg
or
outsl
push
ret
cmpsb
push
mov
dec
fdivrs
xor
push
xor
and
inc
shll
cs
mov
pop
scas
sbb
mov
into
jg
jp
jp
pop
roll
aad
aaa
mov
sbbl
or
fiaddl
mov
addl
das
fidivrl
xchg
or
push
ret
cmpsb
push
mov
in
insb
sahf
pop
xchg
repnz
jl
jl
jne
insb
mov
movsb
ret
ds
push
aam
sub
xchg
adc
and
mov
cwtl
decl
cmp
push
lds
out
imul
insl
cwtl
xor
pop
aam
sub
jmp
jge
xchg
sbb
pop
int3
stos
data16
add
std
or
pop
fisttpl
fnstsw
stc
cwtl
imul
push
lds
outsl
lcall
pop
xchg
add
cmp
popf
setg
or
push
hlt
ja
arpl
cmc
xor
jle
mov
je
outsl
das
push
xchg
adc
add
and
add
xor
add
push
adc
add
add
jno
add
adcl
add
add
and
add
cmp
add
dec
adc
add
add
jae
add
mov
adc
add
add
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
jae
add
add
add
push
push
add
je
add
lods
push
add
repnz
add
or
add
sbb
add
xor
add
push
pop
add
mov
add
rclb
add
jmp
add
clc
pop
add
adc
add
xor
add
insb
sbb
add
sbb
add
sbb
add
sbb
add
add
pop
sbb
add
sbb
add
sbb
add
sbb
add
add
add
jmp
add
clc
sbb
add
sbb
add
sbb
add
sbb
add
add
mov
add
sbb
add
clc
sbb
add
ds
add
jno
add
xchg
push
add
mov
pop
add
inc
pop
add
js
add
xchg
pop
add
cltd
pop
add
mov
pop
add
jmp
add
repnz
add
or
add
popa
and
add
add
lret
and
add
and
add
add
cwtl
and
add
and
add
and
add
and
add
add
jb
add
mov
add
cwtl
and
add
and
add
and
add
and
add
add
fldenv
add
and
add
and
add
and
add
pop
add
arpl
add
push
add
lret
add
sti
add
es
add
sub
daa
add
aaa
daa
add
inc
daa
add
push
daa
add
arpl
add
push
daa
add
xchg
daa
add
popf
daa
add
mov
daa
add
mov
add
ret
add
daa
add
fsubs
add
frstor
add
popf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
add
js
add
test
add
mov
add
enter
int
add
shrl
add
loope
add
out
add
repz
add
sub
add
sub
add
add
insl
sub
add
sub
add
sub
add
sub
add
sub
add
add
fisubrs
add
sub
add
sub
add
sub
add
sub
add
enter
int
add
shrl
add
pop
add
adc
add
shrl
add
add
fisubrs
add
in
add
comiss
add
das
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
push
xor
add
add
cmpsb
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
xor
add
xor
add
add
add
pop
add
adc
add
and
add
xor
add
cmp
add
cmp
add
insl
add
jb
add
ja
add
xorl
add
mov
add
lods
add
int
add
shll
add
ds
add
dec
aaa
add
insb
aaa
add
scas
aaa
add
mov
aaa
add
adc
add
sbb
add
mov
add
mov
cmp
add
cmp
add
add
add
pop
cmp
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
push
cmp
add
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
push
cmp
add
add
roll
add
add
jo
add
ss
add
icebp
inc
add
mov
add
jecxz
add
adc
inc
inc
add
jb
add
mov
inc
add
add
add
inc
add
arpl
add
inc
add
repnz
add
and
add
add
xchg
add
inc
add
push
inc
add
sub
add
inc
inc
add
pop
inc
add
outsb
inc
add
test
add
inc
add
leave
inc
add
loop
add
add
add
adc
add
sbb
add
dec
add
sub
add
dec
add
mov
add
dec
add
inc
dec
add
inc
dec
add
dec
dec
add
push
dec
add
pusha
dec
add
ss
add
jns
add
bound
add
dec
add
jne
add
or
add
xor
push
add
pop
push
add
pusha
push
add
imul
add
add
push
add
scas
push
add
mov
add
ret
push
add
int3
push
add
rclb
add
push
add
push
push
add
xor
add
add
add
xchg
add
push
add
stos
push
add
mov
add
in
add
adc
add
pop
add
xor
add
push
pop
add
pop
pop
add
arpl
add
pop
add
jmp
add
sbb
pop
add
dec
pop
add
popf
pop
add
mov
pop
add
pop
add
into
pop
add
call
pop
add
add
add
pop
add
and
add
pop
add
xor
add
add
push
pop
add
arpl
add
pop
add
cmp
add
add
inc
pop
add
inc
pop
add
dec
pop
add
dec
pop
add
push
pop
add
push
pop
add
pop
pop
add
bound
jne
add
push
pop
add
outsl
pop
add
mov
add
pop
add
cli
pop
add
inc
pusha
add
pop
pusha
add
imul
add
pusha
add
sub
add
popa
add
shll
bound
add
bound
add
data16
lods
data16
jecxz
add
xchg
push
add
imul
imul
add
imul
add
insb
add
inc
insb
add
dec
insb
add
shrb
add
outsl
add
arpl
add
jo
add
add
arpl
add
jo
add
jo
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jae
add
add
jle
add
mov
add
jae
add
jae
add
je
add
je
add
jne
add
jne
add
add
xchg
ja
add
ja
add
js
add
add
inc
js
add
js
add
jns
add
add
outsl
jns
add
add
in
add
xor
add
jp
add
jp
add
add
cmpl
add
test
add
add
jecxz
add
incb
add
lods
xchg
add
xchg
add
xchg
add
xchg
add
add
jns
add
loopne
add
adc
add
aaa
mov
add
add
mov
add
fisttpll
add
dec
mov
add
mov
add
mov
add
add
mov
add
mov
add
add
dec
mov
add
add
orl
push
lea
add
add
sahf
lea
add
lea
add
lea
add
mov
add
popl
add
add
outsb
popl
add
add
popl
add
nop
add
sahf
nop
add
lods
nop
add
aaa
xchg
add
xchg
xchg
add
mov
xchg
add
mov
xchg
add
daa
xchg
add
cs
add
cmp
add
pop
xchg
add
pushf
xchg
add
iret
xchg
add
pop
xchg
add
insl
xchg
add
notl
add
bound
add
add
xchg
add
out
add
in
xchg
add
or
add
sub
add
lahf
xchg
add
cs
add
cmp
xchg
add
and
add
aaa
xchg
add
dec
xchg
add
pop
xchg
add
sbbb
add
cltd
add
ret
cltd
add
lret
add
cltd
add
sti
cltd
add
add
add
adc
add
dec
lcall
gs
rcrb
add
lret
add
fwait
add
insb
popf
add
lods
popf
add
push
sahf
add
xor
add
pop
sahf
add
test
add
or
add
sub
add
mov
add
rcrl
add
xor
add
aas
mov
add
dec
mov
add
jne
add
fwait
mov
add
mov
mov
add
enter
int3
mov
add
aam
add
fsubs
add
sub
add
xor
add
lcall
add
mov
add
int3
mov
add
aam
add
icebp
mov
add
dec
mov
add
pop
mov
add
pusha
mov
add
push
mov
add
mov
mov
add
enter
int3
mov
add
and
add
in
add
jmp
add
add
add
add
pusha
movsb
add
outsb
movsb
add
enter
pop
movsl
add
and
cmpsb
add
cwtl
cmpsb
add
dec
test
add
pop
test
add
jns
add
xchg
add
lcall
add
test
add
and
add
ss
add
cmp
add
inc
stos
add
dec
stos
add
dec
stos
add
push
stos
add
pop
stos
add
pop
stos
add
bound
add
pop
lods
add
lods
add
mov
add
lods
add
fldt
add
lods
add
cli
lods
add
dec
lods
add
ja
add
scas
lods
add
lods
add
imul
add
scas
add
movsl
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
es
add
add
dec
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
imul
add
add
mov
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
inc
mov
add
add
xorl
add
mov
add
add
add
ret
mov
add
mov
add
mov
add
add
aam
add
fidivrl
add
sbb
add
jne
add
jnp
add
test
add
mov
add
lret
mov
add
jb
add
lock
add
pop
mov
add
rolb
imul
add
sub
ret
add
or
add
es
add
sub
add
cmp
ret
add
add
push
ret
add
test
add
mov
add
xchg
ret
add
mov
add
mov
add
enter
ffreep
add
jmp
les
add
add
add
les
add
les
add
les
add
lds
add
movb
mov
movb
int3
movb
fadd
add
ffree
add
jmp
movb
stc
movb
add
add
pop
movl
add
movl
add
movl
add
add
jg
add
lcall
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
add
sub
add
fs
add
mov
add
xor
add
aaa
lret
inc
lret
imul
add
jnp
add
mov
add
xchg
lret
cltd
lret
lahf
lret
lret
ror
add
fcmove
add
loop
add
repnz
or
add
adc
lret
add
sub
add
xor
add
cmp
add
inc
lret
add
dec
lret
add
push
lret
add
pop
lret
add
pusha
lret
add
imul
add
add
ret
int
add
int
add
int
add
int
add
int
add
into
add
sbb
add
es
add
cmp
add
dec
into
add
push
into
add
pop
into
add
popa
into
add
addr16
add
je
add
xchg
into
add
xchg
into
add
mov
into
add
mov
add
mov
add
add
into
add
bswap
add
mov
add
mov
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
add
sbb
add
and
rolb
add
add
push
rolb
add
add
lret
rolb
add
add
ja
add
xchg
add
mov
add
pushf
add
rcl
add
fst
add
in
add
jmp
add
repz
add
cld
add
add
xlat
add
xchg
xlat
add
pushf
xlat
add
mov
xlat
add
xlat
add
into
xlat
add
aam
add
out
xlat
add
hlt
xlat
add
cld
xlat
add
or
add
inc
fadds
add
add
mov
add
lret
add
add
push
flds
add
add
and
add
fiaddl
add
fiaddl
add
fiaddl
add
add
fldl
add
add
insb
fldl
add
add
mov
add
xchg
fldl
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
add
fiadds
add
add
mov
add
lods
fiadds
add
filds
add
filds
add
add
pop
loopne
add
loopne
add
add
js
add
loope,pt
add
add
or
add
and
add
daa
loop
add
loop
add
add
cmp
add
cmp
add
gs
add
loop
add
add
mov
add
mov
loop
add
loop
add
loop
add
loop
add
jecxz
add
jecxz
add
add
and
add
and
add
mov
add
xchg
jecxz
add
jecxz
add
add
loope
add
or
add
cmp
in
add
add
dec
in
add
add
push
in
add
add
pop
in
add
add
stos
in
add
in
add
in
add
add
sahf
in
add
in
add
out
add
add
push
out
add
out
add
out
add
out
add
out
add
out
add
add
jne
add
jg
add
mov
out
add
out
add
call
add
inc
call
add
push
call
add
fwait
call
add
mov
jmp
add
push
jmp
add
ljmp
daa
jmp
add
add
pop
jmp
add
add
jae
add
js
add
test
add
mov
add
loop
add
sub
in
add
imul
add
lcall
add
in
add
into
in
add
xlat
in
add
fsubrp
add
pop
in
add
and
add
xor
add
push
in
add
mov
out
add
cmpsl
out
add
lret
out
add
push
icebp
add
lret
add
icebp
add
mov
add
xchg
repnz
lods
repnz
jecxz
add
sahf
hlt
add
test
add
and
add
cmp
add
dec
testb
mov
stc
add
mov
add
mov
add
mov
stc
add
sar
add
stc
add
enter
pushf
cli
add
scas
cli
add
and
add
ret
sti
add
adc
add
sub
add
cmp
cld
add
nop
cld
add
add
jmp
add
cs
add
ja
add
jge
add
mov
add
incb
add
add
dec
incb
add
add
clc
incb
add
incl
add
incl
add
add
incl
add
add
outsb
incl
add
incl
add
incl
add
add
add
add
mov
add
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
and
add
add
dec
add
add
pop
add
add
push
add
add
lds
add
icebp
add
add
dec
push
add
push
push
add
ja
add
mov
add
xchg
push
add
popf
push
add
movsl
push
add
mov
add
movl
add
loope
add
lock
add
add
add
sub
add
pop
pop
add
xchg
pop
add
stos
pop
add
mov
add
pop
or
add
or
add
or
add
add
push
or
add
add
orb
add
or
add
or
add
add
adc
add
dec
or
add
add
jge
add
scas
or
add
or
add
or
add
or
add
add
xchg
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
jae
add
ja
add
jnp
add
jg
add
orl
xchg
add
or
add
or
add
or
add
push
add
lahf
or
add
das
push
add
cmp
push
add
popa
push
add
mov
sgdtl
xor
add
push
sgdtl
mov
add
mov
sgdtl
add
add
sub
add
cmp
add
dec
adc
add
add
outsb
adc
add
add
jle
add
mov
adc
add
adc
add
add
xor
add
jne
add
jp
add
jg
add
lods
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
adc
add
adc
add
adc
add
add
jns
add
xchg
adc
add
adc
add
add
insb
adc
add
add
cmpsl
adc
add
xchg
add
insl
pop
add
mov
sbb
add
add
jle
add
lea
add
out
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
sbb
add
sbb
add
add
rcrb
add
add
add
add
bound
add
mov
add
push
pop
add
inc
pop
add
pop
pop
add
test
add
dec
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
add
mov
add
les
add
xlat
and
add
add
pop
and
add
and
add
and
add
and
add
and
add
add
das
add
inc
add
xchg
add
cmpsl
add
add
iret
add
loopne
add
hlt
add
stc
add
add
add
push
daa
add
xor
daa
add
jnp
add
andb
add
daa
add
mulb
add
push
sub
add
sub
add
add
sub
add
add
ret
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
shrb
add
in
add
clc
sub
add
sub
add
sub
add
add
dec
sub
add
add
push
sub
add
add
pop
sub
add
add
jle
add
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
fwait
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
insb
sub
add
je
add
js
add
jl
add
subb
add
sub
add
cmp
add
pop
add
mov
add
add
add
nop
das
add
adc
add
insl
xor
add
add
sub
add
pop
xor
add
xor
add
xor
add
xor
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
add
push
add
push
add
jle
add
mov
aaa
add
insl
cmp
add
add
lds
add
adc
add
and
add
cmp
add
cmpb
add
cmp
add
cmp
add
cmp
add
cmp
add
add
leave
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
js
add
loop
add
pushf
inc
add
in
inc
add
test
add
inc
add
outsl
inc
add
jp
add
add
add
add
push
inc
add
pusha
inc
add
mov
add
inc
add
or
add
add
dec
inc
add
popl
add
inc
add
mov
inc
add
aam
add
flds
add
inc
add
cmp
add
add
mov
add
dec
add
mov
add
lret
add
dec
add
pop
dec
add
and
add
dec
add
jl
add
int3
dec
add
fisttps
add
dec
add
ds
add
push
dec
add
jbe
add
orl
xchg
dec
add
pushf
dec
add
scas
dec
add
dec
add
in
add
daa
dec
add
cmp
pop
dec
add
gs
add
orl
lods
dec
add
mov
add
enter
in
add
cld
dec
add
pop
dec
add
popa
dec
add
mov
add
dec
add
test
dec
add
in
add
push
push
add
xor
add
add
jge
add
lahf
push
add
cmpsl
push
add
repz
add
add
add
push
add
inc
push
add
outsl
push
add
jle
add
sahf
push
add
rclb
in
push
add
add
add
push
add
inc
push
add
push
push
add
lcall
add
push
add
out
add
pop
push
add
imul
push
add
mov
mov
push
add
mov
add
push
add
push
add
int
add
aam
add
icebp
push
add
notl
add
push
add
adc
push
add
and
add
push
add
cmp
add
push
add
dec
push
add
push
push
add
pop
push
add
popa
push
add
push
add
jns
add
adcb
xchg
add
push
add
mov
add
mov
push
add
fcoms
add
push
add
or
add
push
add
inc
push
add
dec
push
add
jp
add
mov
push
add
leave
push
add
rcll
add
push
add
notb
add
pop
add
or
add
pop
add
push
pop
add
outsl
pop
add
ja
add
sbbl
nop
pop
add
cwtl
pop
add
lahf
pop
add
cmpsl
pop
add
scas
pop
add
mov
pop
add
lret
add
pop
add
fistps
add
pop
add
cli
pop
add
add
add
pop
add
adc
add
add
and
pop
add
inc
pop
add
dec
pop
add
test
add
pop
add
repnz
add
and
add
pop
add
sbbl
add
pop
add
mov
pop
add
fcompl
add
pop
add
negb
add
pop
add
adc
add
daa
pop
add
sub
pop
add
cmpsb
pop
add
rcrl
pop
add
iret
pop
add
aad
add
push
pop
add
dec
pop
add
pusha
pop
add
jae
add
scas
pop
add
inc
popa
add
pop
popa
add
pop
arpl
add
add
mov
add
arpl
add
arpl
add
add
and
es
cmp
add
add
pop
add
insb
add
jns
add
andl
lea
add
add
shll
fisubs
add
add
push
add
outsb
add
test
add
add
inc
add
pop
add
add
andb
xchg
add
lcall
add
add
aad
add
call
push
add
jbe
add
mov
add
push
add
pop
imul
add
imul
add
imul
add
add
add
jbe
add
mov
add
push
add
push
add
push
add
push
add
imul
sbb
add
imul
inc
imul
dec
imul
push
imul
pop
imul
jb
add
xchg
add
imul
popf
imul
test
add
imul
loop
add
in
imul
imull
add
insb
add
or
adc
push
insb
add
pop
insb
add
arpl
push
insb
add
xchg
mov
sti
insb
add
add
add
insl
add
xor
add
add
pop
insl
add
jbe
add
test
add
insl
add
ret
add
insl
add
loopne
add
out
insl
add
std
insl
add
push
outsb
add
sbb
add
and
outsb
add
aaa
outsb
add
cmp
add
inc
outsb
add
dec
outsb
add
push
outsb
add
pop
outsb
add
bound
add
add
js
add
xchg
outsb
add
xlat
outsl
add
fsubrl
add
outsl
add
jmp
outsl
add
imulb
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
pop
jb
add
add
lcall
add
jne
add
jne
add
jne
add
jne
add
jne
add
jbe
add
add
imul
add
jbe
add
ja
add
ja
add
ja
add
add
inc
jns
add
add
dec
jns
add
add
push
jns
add
add
pop
jns
add
add
gs
add
add
insl
jns
add
jp
add
jp
add
add
addr16
add
jl
add
add
push
add
jns
add
cli
jg
add
addb
jle
add
movb
add
addb
sub
add
mov
add
mov
addl
add
add
dec
addb
imul
add
addb
xchg
addb
sahf
addb
lods
addb
loope
add
cld
addb
adc
add
int3
addl
daa
test
add
add
adc
add
das
test
add
test
add
add
jb
add
addl
add
xchg
add
add
jae
add
scas
xchg
add
xchg
add
add
or
mov
add
add
cmp
add
push
mov
add
add
je
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
add
lea
add
lahf
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
push
mov
add
add
mov
add
add
aad
add
testl
add
xor
add
pop
mov
add
add
or
add
sbb
lea
add
lea
add
lea
add
add
push
add
jle
add
mov
add
stos
lea
add
lea
add
lea
add
lea
add
lea
add
add
jle
add
xor
add
dec
mov
add
add
ja
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
popl
add
popl
add
popl
add
popl
add
add
pop
popl
add
add
jne
add
mov
add
test
popl
add
popl
add
popl
add
popl
add
nop
add
cs
add
xor
add
insb
nop
add
jne
add
lcall
add
nop
add
iret
nop
add
in
nop
add
notb
add
cmp
add
pusha
xchg
add
jbe
add
jecxz
add
in
xchg
add
or
add
xor
add
jb
add
jl
add
xchg
xchg
add
mov
add
aam
add
stc
xchg
add
adc
xchg
add
mov
xchg
add
or
add
cli
xchg
add
mov
cltd
add
imul
add
fwait
add
iret
fwait
add
fistpl
add
out
fwait
add
sti
fwait
add
pop
pushf
add
and
pushf
add
push
pushf
add
popa
pushf
add
jnp
add
popf
pushf
add
mov
add
int3
pushf
add
in
add
out
pushf
add
add
add
jge
add
nop
popf
add
movsl
popf
add
mov
add
hlt
popf
add
sub
add
push
sahf
add
jp
add
sbbb
add
sahf
add
adc
add
and
lahf
add
cmp
add
push
lahf
add
pop
lahf
add
lahf
add
cltd
lahf
add
mov
lahf
add
fistps
add
adc
add
dec
mov
add
jp
add
mov
add
or
add
xor
add
jg
add
mov
add
mov
mov
add
ljmp
add
add
jno
add
clc
mov
add
adc
add
and
add
xor
add
dec
mov
add
pop
mov
add
imul
add
add
mov
add
xchg
mov
add
mov
mov
add
lret
add
mov
add
sbb
add
movsb
add
movsb
add
dec
movsb
add
push
movsb
add
pop
movsb
add
imul
add
add
fisubs
add
movsl
add
cmp
add
pusha
movsl
add
nop
movsl
add
movsb
movsl
add
or
add
and
add
aaa
cmpsb
add
inc
cmpsb
add
dec
cmpsb
add
pop
cmpsb
add
cmpsb
add
insl
cmpsb
add
jne
add
lock
add
cmc
cmpsb
add
and
add
dec
cmpsl
add
arpl
add
lcall
add
test
add
test
add
test
add
test
add
test
add
test
add
adc
add
inc
stos
add
dec
stos
add
push
stos
add
sbb
add
jg
add
loop
add
hlt
stos
add
sub
lods
add
arpl
add
pop
scas
add
jns
add
jg
add
cltd
scas
add
sahf
scas
add
mov
scas
add
xlat
scas
add
add
cld
scas
add
and
add
mov
mov
add
mov
add
add
mov
add
mov
add
mov
add
mov
add
add
jg
add
pop
mov
add
mov
add
mov
add
add
add
add
and
add
dec
mov
add
add
cwtl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
insl
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
mov
add
add
jns
add
mov
add
push
mov
add
jno
add
mov
mov
add
cmp
add
push
mov
add
ja
add
cmpb
add
mov
add
dec
mov
add
outsb
mov
add
ret
mov
add
in
add
or
add
cs
add
xchg
mov
add
jecxz
add
inc
mov
add
mov
add
xor
add
out
add
adc
add
pop
rolb
aas
rolb
inc
rolb
insl
rolb
jae
add
add
add
mov
add
cli
rolb
adc
add
sub
roll
dec
roll
loopne
add
adc
add
das
ret
xor
ret
jno
add
jle
add
mov
add
bnd
and
add
inc
ret
add
movsb
ret
add
stc
les
add
add
add
dec
lds
add
add
xlat
lds
add
lds
add
add
mov
add
mov
add
nop
movb
xchg
movb
cwtl
movb
pushf
movb
ja
add
cmp
add
enter
out
add
sbb
add
sub
add
cld
lret
add
adc
add
adc
add
es
add
int3
into
add
loop
add
test
add
jl
add
ret
rolb
add
roll
add
add
add
lock
add
add
mov
add
repz
add
roll
add
roll
add
add
xchg
aam
add
add
into
aad
add
add
or
add
sub
add
outsb
xlat
add
jb
add
xor
add
js
add
movsb
flds
add
add
mov
fiaddl
add
fildl
add
faddl
add
add
faddl
add
faddl
add
fldl
add
add
cltd
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
push
filds
add
filds
add
loop
add
add
pop
in
add
add
add
cmpsl
in
add
add
mov
in
add
in
add
out
add
out
add
out
add
add
inc
out
add
add
jbe
add
jnp
add
sahf
out
add
out
add
out
add
add
add
mov
out
add
out
add
out
add
call
add
test
add
imul
add
fwait
ljmp
mov
add
xchg
jmp
add
jmp
add
in
add
sub
add
cmp
add
inc
in
add
dec
in
add
mov
add
pop
in
add
push
in
add
in
add
mov
add
mov
in
add
in
add
sub
add
icebp
add
dec
repz
insl
repz
pop
hlt
add
jno
add
dec
testl
add
add
xbegin
add
adc
add
inc
stc
add
test
add
in
add
add
cli
add
mov
sti
add
sub
add
jp
add
fs
add
inc
incb
add
add
add
add
add
add
pop
push
add
call
or
add
or
add
add
hlt
or
add
or
add
push
adc
add
adc
add
adc
add
arpl
add
xchg
add
mov
sbb
add
add
jne
add
jp
add
sbb
add
xor
and
add
and
add
add
arpl
add
or
add
ljmp
add
and
add
and
add
add
shlb
add
loope
add
ss
add
cmp
daa
add
inc
daa
add
push
daa
add
bound
add
jo
add
jbe
add
pushf
daa
add
cmpsb
daa
add
mov
add
shll
add
loope
add
icebp
daa
add
add
add
adc
add
pop
sub
add
sub
add
sub
add
sub
add
add
insl
sub
add
add
jp
add
xchg
sub
add
sub
add
sub
add
add
test
add
scas
sub
add
sub
add
sub
add
add
call
sub
add
sub
add
add
xchg
add
xchg
sub
add
sub
add
add
jns
add
imulb
add
sub
add
sub
add
in
sub
add
xor
add
data16
lea
add
or
add
push
das
add
xchg
das
add
fsubrs
add
icebp
das
add
das
add
adc
add
leave
xor
add
xor
add
xor
add
xor
add
add
jmp
add
pop
xor
add
xor
add
xor
add
xor
add
add
loope
add
es
add
jnp
add
in
add
adc
add
sub
add
pop
add
xorl
add
add
add
mov
cmp
add
cmp
add
add
cmp
add
add
arpl
add
insb
cmp
add
cmp
add
add
sub
add
sti
add
insl
aas
add
cwtl
aas
add
mov
add
out
add
or
inc
add
imul
fldl
add
inc
add
and
add
add
jge
add
xchg
inc
add
mov
add
repnz
add
ss
add
dec
inc
add
jl
add
lods
inc
add
sub
inc
add
addb
ret
inc
add
push
inc
add
mov
inc
add
add
add
jne
add
mov
inc
add
outsl
inc
add
mov
add
adc
add
dec
add
xor
add
dec
add
adc
add
dec
add
xor
add
add
push
dec
add
bound
add
add
orl
add
dec
add
ret
add
dec
add
loope
add
ret
add
pop
add
loope
add
repnz
add
add
add
pusha
add
cmp
add
add
mov
pusha
add
add
add
adc
add
bound
add
bound
add
arpl
add
add
test
add
mov
add
or
ja
add
movsb
add
ljmp
add
add
arpl
add
push
add
mov
add
mov
imul
add
push
add
push
add
add
mov
push
add
push
add
push
add
push
add
imul
pop
insb
add
stos
insb
add
adc
add
add
mov
jo
add
jo
add
jno
add
add
jbe
add
stos
jno
add
jno
add
jb
add
add
int
add
add
add
dec
jae
add
add
jae
add
mov
add
jae
add
je
add
je
add
add
jno
add
mov
je
add
jne
add
jne
add
add
ja
add
js
add
add
loope
add
or
add
daa
jns
add
add
jg
add
inc
jp
add
jp
add
jp
add
jp
add
jp
add
jle
add
jle
add
jle
add
jg
add
jg
add
jg
add
add
fs
add
jg
add
jg
add
add
stos
addb
mov
add
sbb
addl
add
add
outsb
addb
jns
add
mov
test
add
add
adc
test
add
test
add
add
mov
test
add
test
add
xchg
add
add
xor
xchg
add
xchg
add
mov
add
add
add
lods
mov
add
mov
add
mov
add
add
pusha
mov
add
add
add
insb
mov
add
mov
add
add
push
mov
add
add
mov
add
sub
add
push
mov
add
lea
add
add
xchg
add
or
add
dec
mov
add
add
mov
popl
add
add
outsb
popl
add
popl
add
nop
add
ds
add
dec
nop
add
imul
add
nop
add
outsb
xchg
add
jge
add
pop
xchg
add
popa
xchg
add
jb
add
ja
add
mov
add
add
add
and
add
ds
add
inc
xchg
add
push
xchg
add
push
xchg
add
bound
add
adcl
add
ret
xchg
add
call
xchg
add
or
add
xchg
add
mov
add
xchg
add
aam
add
out
xchg
add
pop
xchg
add
ds
add
loope
add
or
add
insb
xchg
add
jl
add
xlat
xchg
add
sbbb
add
cltd
add
rcrl
add
add
add
and
add
aas
lcall
push
lcall
jno
add
sbbl
add
add
lcall
add
sahf
add
cmpsl
sahf
add
scas
sahf
add
int3
sahf
add
rcrl
add
sbb
add
push
mov
add
andl
add
add
add
pop
movsb
add
inc
movsb
add
mov
add
movsb
add
cmc
movsb
add
inc
movsl
add
mov
add
sub
add
jbe
add
popf
cmpsb
add
mov
add
cli
cmpsb
add
push
cmpsl
add
scas
cmpsl
add
loope
add
push
test
add
test
add
add
ljmp
add
stos
add
shrb
add
pop
stos
add
lds
add
or
add
add
jae
add
jmp
add
icebp
lods
add
inc
lods
add
movsl
lods
add
lods
lods
add
push
scas
add
xlat
scas
add
ss
add
push
scas
add
ja
add
mov
add
cli
scas
add
adc
add
arpl
add
sbb
mov
add
add
xchg
mov
add
mov
add
mov
add
mov
add
add
insb
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
pop
mov
add
mov
add
mov
add
mov
add
mov
add
adc
add
xor
add
outsl
mov
add
jl
add
sarl
add
xchg
add
stos
mov
add
mov
mov
add
inc
mov
add
jp
add
cwtl
mov
add
inc
mov
add
jno
add
js
add
xchg
mov
add
mov
add
mov
mov
add
or
add
sbb
add
ret
mov
add
lock
add
pop
mov
add
jne
add
sti
mov
add
mov
mov
add
in
mov
add
cli
mov
add
add
add
adc
add
and
add
xor
add
inc
ret
mov
ret
pop
ret
add
mov
add
mov
ret
add
std
ret
add
adc
add
aaa
les
add
add
mov
les
add
lds
add
lds
add
lds
add
add
popa
lds
add
add
add
add
mov
add
rol
add
lds
add
lds
add
add
jbe
add
jl
add
arpl
add
or
add
leave
add
inc
leave
add
pop
leave
add
test
add
ror
add
xchg
lret
dec
lret
add
mov
add
xor
add
push
int
add
add
ror
add
out
into
add
repz
add
mov
add
jmp
roll
add
rolb
add
roll
add
add
xchg
roll
add
roll
add
roll
add
xlat
add
flds
add
add
sbb
add
mov
flds
add
fildl
add
add
fildl
add
fildl
add
fildl
add
add
push
faddl
add
faddl
add
faddl
add
faddl
add
fldl
add
add
dec
fldl
add
add
jp
add
mov
add
out
add
ret
fiadds
add
filds
add
filds
add
add
push
filds
add
loopne
add
loopne
add
loopne
add
add
push
loopne
add
add
jno
add
and
add
mov
add
shl
add
loope
add
loope
add
loope
add
loop
add
loop
add
loop
add
loop
add
add
push
jecxz
add
jecxz
add
add
and
add
out
add
out
add
out
add
add
mov
out
add
out
add
call
add
sbb
add
jae
add
cltd
jmp
add
mov
ljmp
arpl
add
imul
add
add
mov
add
bnd
add
jmp
add
in
add
inc
in
add
sub
add
in
add
jecxz
add
and
add
sub
add
xor
add
xchg
out
add
xlat
out
add
fucomip
add
inc
out
add
push
out
add
popa
out
add
jb
add
sub
add
out
add
mov
add
shr
add
out
add
adc
add
xor
add
popa
lock
xchg
lock
stos
icebp
add
mov
add
icebp
add
into
icebp
add
jmp
add
cmc
icebp
add
pop
repnz
push
repnz
xor
add
cmp
add
dec
repnz
push
repnz
jo
add
jp
add
mov
add
xchg
repnz
je
add
jle
add
nop
repz
xchg
repz
mov
add
mov
repz
xlat
repz
stc
repz
add
add
adc
hlt
add
cmp
add
inc
hlt
add
push
hlt
add
pop
hlt
add
inc
testl
add
add
jae
add
fwait
testl
add
clc
add
cmp
add
add
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
push
sbb
add
add
jno
add
lahf
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
xchg
sbb
add
add
mov
sbb
add
rcrb
add
in
add
in
sbb
add
imul
add
pop
add
mov
add
xchg
pop
add
lcall
add
pop
add
repnz
add
clc
pop
add
add
add
or
add
pop
and
add
and
add
and
add
and
add
add
add
pop
and
add
add
insl
and
add
add
xchg
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
and
add
add
jno
add
xchg
and
add
and
add
and
add
and
add
and
add
add
imul
add
mov
and
add
and
add
and
add
add
jl
add
xchg
and
add
and
add
and
add
add
push
and
add
add
mov
add
and
add
and
add
inc
and
add
jns
add
mov
and
add
sub
add
dec
add
push
add
gs
jne
add
test
add
xchg
add
movsl
add
mov
add
lds
add
jmp
add
add
xor
add
cmp
daa
add
pop
daa
add
insl
daa
add
jge
add
lea
add
popf
daa
add
lods
daa
add
shll
add
mull
add
sbb
add
aas
sub
add
add
test
add
cltd
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
popa
sub
add
add
mov
add
stos
sub
add
sub
add
sub
add
sub
add
add
add
add
in
add
cld
sub
add
add
inc
sub
add
add
sub
add
sub
add
sub
add
add
sub
add
add
cltd
sub
add
sub
add
add
test
add
fldcw
add
inc
add
pop
add
subl
add
in
add
stc
add
sbb
add
cmp
add
pop
das
add
jns
add
cltd
das
add
shrl
add
das
add
stc
das
add
and
add
inc
xor
add
add
mov
add
lods
xor
add
xor
add
add
and
add
inc
xor
add
add
mov
add
mov
xor
add
xor
add
add
mov
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
mov
add
cli
xor
add
push
add
imul
add
clc
add
push
aaa
add
jno
add
xchg
aaa
add
mov
add
in
add
and
cmp
add
add
jns
add
cltd
cmp
add
cmp
add
cmp
add
cmp
add
add
popa
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
add
add
mov
add
lods
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
mov
add
test
cmp
add
cmp
add
cmp
add
add
rolb
les
add
inc
add
aam
add
fadds
add
inc
add
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
addb
test
add
inc
add
nop
inc
add
xchg
inc
add
cwtl
inc
add
pushf
inc
add
mov
inc
add
test
add
lods
inc
add
mov
add
mov
add
mov
inc
add
rolb
les
add
inc
add
int3
inc
add
rolb
add
inc
add
fadds
add
inc
add
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
addb
test
add
inc
add
nop
inc
add
xchg
inc
add
cwtl
inc
add
pushf
inc
add
mov
inc
add
test
add
lods
inc
add
mov
add
mov
add
mov
inc
add
rolb
les
add
inc
add
int3
inc
add
rolb
add
inc
add
fadds
add
inc
add
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
or
add
adc
adc
add
sbb
sbb
add
and
and
add
sub
sub
add
xor
xor
add
cmp
cmp
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
addb
inc
add
mov
mov
nop
inc
add
xchg
inc
add
cwtl
inc
add
pushf
inc
add
mov
inc
add
test
add
lods
inc
add
mov
add
mov
add
mov
inc
add
rolb
inc
add
enter
int3
inc
add
rolb
aam
add
fadds
faddl
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
add
adc
add
add
sbb
add
and
add
add
sub
add
xor
add
add
cmp
add
inc
inc
add
inc
inc
add
dec
inc
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
addb
test
add
inc
add
nop
inc
add
xchg
inc
add
cwtl
inc
add
pushf
inc
add
mov
inc
add
test
add
lods
inc
add
mov
add
mov
add
mov
inc
add
rolb
les
add
inc
add
int3
inc
add
rolb
add
inc
add
fadds
add
inc
add
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
add
dec
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
fs
add
push
inc
add
jo
add
je
add
js
add
jl
add
addb
test
add
inc
add
nop
inc
add
xchg
inc
add
cwtl
inc
add
pushf
inc
add
mov
inc
add
test
add
lods
inc
add
mov
add
mov
add
mov
inc
add
rolb
les
add
inc
add
aam
add
fadds
add
inc
add
loopne
add
in
add
call
inc
add
lock
add
hlt
inc
add
clc
inc
add
cld
inc
add
add
add
add
sbb
add
and
add
add
pop
inc
add
push
inc
add
jl
add
addb
nop
inc
add
pushf
inc
add
test
add
mov
add
mov
inc
add
rolb
add
inc
add
faddl
add
inc
add
call
inc
add
clc
inc
add
or
add
dec
add
adc
add
and
add
dec
add
sub
add
xor
add
add
inc
dec
add
inc
dec
add
dec
dec
add
dec
dec
add
push
dec
add
push
dec
add
pop
dec
add
pop
dec
add
pusha
dec
add
fs
add
push
dec
add
jo
add
je
add
js
add
jl
add
orb
test
add
dec
add
nop
dec
add
xchg
dec
add
cwtl
dec
add
pushf
dec
add
mov
dec
add
test
add
lods
dec
add
mov
add
mov
add
mov
dec
add
rorb
les
add
dec
add
int3
dec
add
rorb
add
dec
add
fmuls
add
dec
add
loopne
add
in
add
call
dec
add
lock
add
hlt
dec
add
clc
dec
add
cld
dec
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
dec
add
inc
dec
add
dec
dec
add
dec
dec
add
push
dec
add
push
dec
add
pop
dec
add
pop
dec
add
pusha
dec
add
fs
add
push
dec
add
jo
add
je
add
js
add
jl
add
orb
test
add
dec
add
nop
dec
add
sbb
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pushf
push
add
mov
push
add
lods
push
add
mov
add
mov
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
js
add
jl
add
adcb
test
add
push
add
nop
push
add
xchg
push
add
cwtl
push
add
pushf
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
rclb
les
add
push
add
int3
push
add
rclb
add
push
add
fcoms
add
push
add
loopne
add
in
add
call
push
add
lock
add
hlt
push
add
clc
push
add
cld
push
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
push
push
add
push
push
add
pop
push
add
pop
push
add
pusha
push
add
fs
add
push
push
add
jo
add
je
add
js
add
jl
add
adcb
test
add
push
add
mov
push
add
test
add
lods
push
add
mov
add
mov
add
mov
push
add
loopne
add
in
add
call
push
add
and
add
sub
add
add
xor
add
add
cmp
add
add
add
dec
pop
add
push
pop
add
pop
pop
add
pusha
pop
add
insb
pop
add
jo
add
je
add
js
add
jl
add
sbbb
test
add
pop
add
nop
pop
add
xchg
pop
add
cwtl
pop
add
pushf
pop
add
mov
pop
add
test
add
lods
pop
add
mov
add
mov
add
mov
pop
add
rcrb
les
add
pop
add
int3
pop
add
rcrb
add
pop
add
fcomps
add
pop
add
loopne
add
in
add
call
pop
add
lock
add
hlt
pop
add
clc
pop
add
cld
pop
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
cmp
add
inc
pop
add
dec
pop
add
push
pop
add
pop
pop
add
fs
add
insb
pop
add
je
add
jl
add
test
add
add
pushf
pop
add
movsb
pop
add
lods
pop
add
mov
add
mov
pop
add
int3
pop
add
aam
add
fcompl
add
pop
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
pop
add
dec
pop
add
push
pop
add
pop
pop
add
fs
add
insb
pop
add
je
add
jl
add
test
add
add
pushf
pop
add
movsb
pop
add
lods
pop
add
mov
add
mov
pop
add
int3
pop
add
aam
add
fcompl
add
pop
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
pusha
add
dec
pusha
add
push
pusha
add
pop
pusha
add
fs
add
insb
pusha
add
je
add
jl
add
test
add
add
pushf
pusha
add
movsb
pusha
add
lods
pusha
add
mov
add
mov
pusha
add
int3
pusha
add
aam
add
fsubl
add
pusha
add
in
pusha
add
hlt
pusha
add
cld
pusha
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
popa
add
dec
popa
add
push
popa
add
pop
popa
add
fs
add
insb
popa
add
je
add
jl
add
test
add
add
pushf
popa
add
movsb
popa
add
lods
popa
add
mov
add
mov
popa
add
int3
popa
add
aam
add
fsubl
add
popa
add
in
popa
add
hlt
popa
add
cld
popa
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
bound
add
add
add
add
add
add
add
add
add
xchg
bound
add
add
lods
bound
add
add
les
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
bound
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
arpl
add
add
add
add
add
add
add
add
add
xchg
arpl
add
add
lods
arpl
add
add
les
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
arpl
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
dec
add
push
add
pop
add
fs
insb
add
je
add
jl
add
test
mov
xchg
add
pushf
add
movsb
add
lods
add
mov
add
mov
add
int3
add
aam
add
fsubl
in
add
in
add
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
dec
add
push
add
pop
add
fs
insb
add
je
add
jl
add
test
add
add
pushf
add
movsb
add
lods
add
mov
add
mov
add
int3
add
aam
add
fsubl
add
add
in
add
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
add
insb
add
je
add
jl
add
test
add
add
pushf
add
movsb
add
lods
add
mov
add
mov
add
int3
add
aam
add
fsubl
add
add
in
add
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
add
dec
add
push
add
pop
add
add
insb
add
je
add
jl
add
test
add
add
pushf
add
movsb
add
lods
add
mov
add
mov
add
int3
add
aam
add
fsubl
add
add
in
add
hlt
add
cld
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
push
add
push
push
add
fs
add
je
add
jl
add
test
add
add
pushf
push
add
lods
push
add
mov
push
add
aam
add
fsubrl
add
push
add
hlt
push
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
imul
add
add
add
add
add
add
add
add
xchg
imul
add
add
mov
add
mov
imul
add
imul
add
imul
add
imul
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
push
add
add
add
add
add
add
add
add
add
xchg
push
add
add
lods
push
add
add
les
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
imul
dec
imul
push
imul
pop
imul
imul
insb
imul
je
add
jl
add
test
add
add
pushf
imul
movsb
imul
lods
imul
mov
add
mov
imul
int3
imul
aam
add
fsubrl
add
imul
in
imul
hlt
imul
cld
imul
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
insb
add
dec
insb
add
push
insb
add
pop
insb
add
fs
add
insb
insb
add
je
add
jl
add
test
mov
xchg
insb
add
pushf
insb
add
movsb
insb
add
lods
insb
add
mov
add
mov
insb
add
int3
insb
add
aam
add
fsubrl
in
add
in
insb
add
hlt
insb
add
cld
insb
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
insl
add
dec
insl
add
push
insl
add
pop
insl
add
fs
add
insb
insl
add
je
add
jl
add
test
add
add
pushf
insl
add
movsb
insl
add
lods
insl
add
mov
add
mov
insl
add
int3
insl
add
aam
add
fsubrl
add
insl
add
in
insl
add
hlt
insl
add
cld
insl
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
outsb
add
dec
outsb
add
pop
outsb
add
pop
outsb
add
pusha
outsb
add
outsb
add
push
outsb
add
jo
add
je
add
js
add
jl
add
subb
test
add
outsb
add
nop
outsb
add
xchg
outsb
add
cwtl
outsb
add
pushf
outsb
add
mov
outsb
add
test
add
lods
outsb
add
mov
add
mov
add
mov
outsb
add
shrb
les
add
outsb
add
int3
outsb
add
shrb
add
outsb
add
fsubrs
add
outsb
add
loopne
add
in
add
call
outsb
add
lock
add
hlt
outsb
add
clc
outsb
add
cld
outsb
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
outsl
add
inc
outsl
add
dec
outsl
add
dec
outsl
add
push
outsl
add
push
outsl
add
pop
outsl
add
pop
outsl
add
pusha
outsl
add
outsl
add
push
outsl
add
jo
add
je
add
js
add
jl
add
subb
test
add
outsl
add
nop
outsl
add
xchg
outsl
add
cwtl
outsl
add
pushf
outsl
add
mov
outsl
add
test
add
lods
outsl
add
mov
add
mov
add
mov
outsl
add
shrb
les
add
outsl
add
int3
outsl
add
shrb
add
outsl
add
fsubrs
add
outsl
add
loopne
add
in
add
call
outsl
add
lock
add
hlt
outsl
add
clc
outsl
add
cld
outsl
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jo
add
add
add
dec
jo
add
add
push
jo
add
add
pop
jo
add
add
fs
add
add
insb
jo
add
add
je
add
js
add
jl
add
xorb
test
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
mov
add
add
xchg
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jp
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
test
add
lods
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jp
add
jnp
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jnp
add
add
add
dec
jnp
add
add
push
jnp
add
add
pop
jnp
add
add
fs
add
add
insb
jnp
add
add
je
add
js
add
jl
add
cmpb
test
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jnp
add
jl
add
add
or
or
add
adc
adc
add
sbb
sbb
add
and
and
add
sub
sub
add
xor
xor
add
cmp
cmp
add
inc
jl
add
add
add
dec
jl
add
add
push
jl
add
add
pop
jl
add
add
fs
add
add
insb
jl
add
add
je
add
js
add
jl
add
cmpb
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jge
add
add
or
add
adc
add
add
sbb
add
and
add
add
sub
add
xor
add
add
cmp
add
inc
jge
add
add
add
dec
jge
add
add
push
jge
add
add
pop
jge
add
add
fs
add
add
insb
jge
add
add
je
add
js
add
jl
add
cmpb
test
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jle
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jle
add
add
add
dec
jle
add
add
push
jle
add
add
pop
jle
add
add
fs
add
add
insb
jle
add
add
je
add
js
add
jl
add
cmpb
test
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jle
add
jg
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
jg
add
add
add
dec
jg
add
add
push
jg
add
add
pop
jg
add
add
fs
add
add
insb
jg
add
add
je
add
js
add
jl
add
cmpb
test
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
jg
add
addb
sub
add
xor
add
cmp
add
inc
addb
inc
addb
dec
addb
dec
addb
push
addb
push
addb
pop
addb
pop
addb
pusha
addb
addb
push
addb
jo
add
je
add
js
add
jl
add
addb
add
addb
nop
addb
xchg
addb
cwtl
addb
pushf
addb
mov
addb
test
add
lods
addb
mov
add
mov
add
mov
addb
rolb
add
addb
int3
addb
rolb
add
fadds
add
loopne
add
in
add
call
addb
lock
hlt
addb
clc
addb
cld
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
addl
add
add
dec
addl
add
add
add
pop
addl
add
add
add
insb
addl
add
add
add
jl
add
addb
add
addl
add
add
pushf
addl
add
add
lods
addl
add
add
mov
addl
add
addl
add
addl
add
addl
add
addl
add
addl
add
addl
add
addl
add
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
addb
inc
addb
dec
addb
dec
addb
push
addb
push
addb
pop
addb
pop
addb
pusha
addb
addb
push
addb
jo
add
je
add
js
add
jl
add
addb
add
addb
nop
addb
xchg
addb
cwtl
addb
pushf
addb
mov
addb
test
add
lods
addb
mov
add
mov
add
mov
addb
rolb
add
addb
int3
addb
rolb
add
fadds
add
loopne
add
in
add
call
addb
lock
hlt
addb
clc
addb
cld
addb
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
addl
inc
addl
dec
addl
dec
addl
push
addl
push
addl
pop
addl
pop
addl
pusha
addl
addl
push
addl
jo
add
je
add
js
add
jl
add
addb
add
addl
nop
addl
xchg
addl
cwtl
addl
pushf
addl
mov
addl
test
add
lods
addl
mov
add
mov
add
mov
addl
rolb
add
addl
int3
addl
rolb
add
fadds
add
loopne
add
in
add
call
addl
lock
hlt
addl
clc
addl
cld
addl
add
add
test
add
add
adc
add
test
add
add
and
add
test
add
add
xor
add
test
add
add
inc
test
add
add
add
dec
test
add
add
push
test
add
add
pop
test
add
add
test
add
add
insb
test
add
add
je
add
js
add
jl
add
addb
mov
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
test
add
add
add
dec
test
add
add
push
test
add
add
pop
test
add
add
test
add
add
insb
test
add
add
je
add
js
add
jl
add
addb
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
test
add
xchg
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
add
add
dec
xchg
add
add
push
xchg
add
add
pop
xchg
add
add
xchg
add
add
insb
xchg
add
add
je
add
js
add
jl
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
xchg
add
add
add
jo
add
je
add
js
add
jl
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
je
add
js
add
jl
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
mov
add
add
add
dec
mov
add
add
push
mov
add
add
pop
mov
add
add
mov
add
add
insb
mov
add
add
cmp
add
cmp
add
inc
roll
add
add
add
dec
roll
add
add
push
roll
add
add
pop
roll
add
add
roll
add
add
insb
roll
add
add
je
add
js
add
jl
add
adc
add
add
mov
add
nop
roll
add
add
pushf
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
aam
add
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
aam
add
add
add
dec
aam
add
add
push
aam
add
add
pop
aam
add
add
fs
add
add
insb
aam
add
add
je
add
js
add
jl
add
adc
add
add
mov
add
nop
aam
add
add
pushf
aam
add
aam
add
aam
add
fldl
add
fldl
add
fldl
add
add
adc
add
sbb
add
xor
add
inc
fiadds
add
add
add
pusha
fiadds
add
add
nop
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
add
and
add
sub
add
xor
add
dec
filds
add
add
filds
add
add
add
xchg
filds
add
add
rcr
add
filds
add
filds
add
filds
add
filds
add
add
and
add
sub
add
xor
add
dec
loopne
add
add
fs
add
add
jl
add
mov
add
nop
loopne
add
loopne
add
add
int3
loopne
add
loopne
add
loopne
add
loopne
add
loope
add
add
sbb
add
sub
add
xor
add
cmp
add
push
loope
add
add
add
add
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
add
or
add
sbb
add
sub
add
xor
add
cmp
add
cmp
add
push
loop
add
add
add
jo
add
mov
add
mov
add
nop
loop
add
add
mov
loop
add
loop
add
loop
add
loop
add
loop
add
add
sbb
add
and
add
sub
add
sub
add
inc
jecxz
add
add
add
pop
jecxz
add
add
add
mov
add
movsb
jecxz
add
add
shl
add
jecxz
add
jecxz
add
jecxz
add
add
sbb
add
and
add
sub
add
inc
in
add
add
add
insb
in
add
in
add
in
add
add
mov
add
int3
in
add
in
add
in
add
in
add
in
add
add
dec
in
add
add
add
jl
add
test
add
nop
in
add
add
shl
add
in
add
in
add
in
add
add
adc
add
and
add
cmp
add
dec
out
add
add
add
out
add
out
add
add
mov
add
int3
out
add
out
add
out
add
out
add
add
sub
add
inc
out
add
add
add
add
add
test
add
nop
out
add
add
aam
add
fsub
add
call
call
add
sbb
add
xor
add
cmp
add
inc
call
add
push
call
add
push
call
add
cwtl
call
add
fsubr
add
call
jmp
add
sbb
add
and
add
cmp
add
inc
jmp
add
push
jmp
add
js
add
mov
add
xchg
jmp
add
mov
add
mov
jmp
add
int3
jmp
add
fsubr
add
lock
add
add
add
add
add
or
add
adc
add
and
add
cmp
add
inc
ljmp
insb
ljmp
sub
add
add
mov
add
int3
ljmp
hlt
ljmp
adc
add
and
add
cmp
add
dec
jmp
add
add
add
mov
add
xchg
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
in
add
and
add
xor
add
dec
in
add
pop
in
add
je
add
jl
add
nop
in
add
pushf
in
add
mov
in
add
test
add
mov
add
mov
in
add
in
add
in
in
add
clc
in
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
in
add
push
in
add
insb
in
add
js
add
xchg
in
add
mov
in
add
enter
in
add
in
in
add
hlt
in
add
cld
in
add
add
add
or
add
adc
add
and
add
cmp
add
dec
out
add
fs
add
jo
add
mov
add
cwtl
out
add
mov
add
mov
out
add
int3
out
add
aam
add
fsubr
add
in
add
lock
add
or
add
sbb
add
xor
add
inc
out
add
pop
out
add
push
out
add
nop
out
add
lods
out
add
mov
add
mov
out
add
in
add
in
out
add
hlt
out
add
or
add
adc
add
sub
add
xor
add
cmp
add
cmp
add
inc
lock
dec
lock
pop
lock
je
add
xor
add
add
test
add
mov
add
mov
lock
in
add
lock
or
add
sbb
add
xor
add
cmp
add
push
icebp
add
pop
icebp
add
pusha
icebp
add
fs
add
insb
icebp
add
je
add
xor
add
add
icebp
add
int3
icebp
add
loopne
add
in
icebp
add
add
add
or
add
adc
add
adc
add
sbb
add
and
add
xor
add
dec
repnz
pop
repnz
je
add
jl
add
xor
add
add
mov
repnz
enter
in
add
lock
or
add
sbb
add
xor
add
inc
repz
pop
repz
repz
jo
add
mov
add
cwtl
repz
mov
add
shl
add
repz
in
add
in
repz
clc
repz
adc
add
and
add
cmp
add
inc
hlt
add
push
hlt
add
insb
hlt
add
je
add
xor
add
add
mov
add
int3
hlt
add
aam
add
fdiv
add
in
add
lock
add
or
add
adc
add
and
add
cmp
add
dec
cmc
add
fs
add
insb
cmc
add
js
add
xchg
cmc
add
pushf
cmc
add
test
add
cmc
add
shl
add
in
cmc
add
hlt
cmc
add
add
add
sbb
add
sub
add
inc
testb
dec
testb
pop
testb
je
add
jl
add
test
add
nop
testb
lods
testb
mov
add
shl
add
testb
call
testl
add
add
sbb
add
and
add
xor
add
dec
testl
add
add
add
testl
add
add
testl
add
testl
add
testl
add
testl
add
add
or
add
adc
add
and
add
cmp
add
inc
clc
add
dec
clc
add
pusha
clc
add
insb
clc
add
jo
add
je
add
jl
add
test
add
nop
clc
add
lods
clc
add
mov
add
mov
clc
add
int3
clc
add
fdivr
add
hlt
clc
add
add
add
sbb
add
and
add
cmp
add
inc
stc
add
dec
stc
add
dec
stc
add
push
stc
add
pop
stc
add
fs
add
jo
add
mov
add
xchg
stc
add
pushf
stc
add
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
loopne
add
cld
stc
add
or
add
and
add
sub
add
cmp
add
push
cli
add
pusha
cli
add
jl
add
test
add
mov
add
xchg
cli
add
pushf
cli
add
movsb
cli
add
lods
cli
add
sar
add
cli
add
sar
add
aam
add
fdivr
add
in
add
in
cli
add
clc
cli
add
adc
add
and
add
cmp
add
dec
sti
add
fs
add
jo
add
mov
add
xchg
sti
add
test
add
mov
add
mov
sti
add
sar
add
sti
add
aam
add
loopne
add
cld
sti
add
add
add
sbb
add
and
add
sub
add
sub
add
xor
add
cmp
add
inc
cld
add
push
cld
add
insb
cld
add
js
add
xchg
cld
add
pushf
cld
add
test
add
cld
add
int3
cld
add
loopne
add
cld
cld
add
or
add
and
add
sub
add
cmp
add
push
std
add
pop
std
add
push
std
add
mov
add
xchg
std
add
mov
std
add
enter
in
add
lock
add
or
add
sbb
add
xor
add
cmp
add
inc
incb
add
add
add
je
add
jl
add
mov
add
movsb
incb
add
add
aam
add
fdivr
add
in
add
in
incb
add
incb
add
incl
add
add
sub
add
inc
incl
add
add
add
add
jl
add
test
add
nop
incl
add
add
sar
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
or
add
or
add
adc
add
sbb
add
sub
add
inc
add
dec
add
push
add
pop
add
add
jo
add
mov
add
xchg
add
pushf
add
test
add
les
add
int3
add
loopne
add
in
add
lock
hlt
add
cld
add
add
add
adc
add
sub
add
xor
add
inc
add
pop
add
push
add
mov
add
xchg
add
pushf
add
movsb
add
lods
add
mov
add
mov
add
int3
add
fadds
add
hlt
add
cld
add
or
add
and
add
sub
add
xor
add
cmp
add
dec
add
add
insb
add
je
add
jl
add
test
add
nop
add
lods
add
mov
add
mov
add
int3
add
aam
add
faddl
add
call
add
or
add
adc
add
sub
add
xor
add
dec
add
push
add
pop
add
pop
add
pusha
add
insb
add
je
add
addb
add
add
mov
add
int3
add
fadds
add
hlt
add
add
add
add
and
add
sub
add
xor
add
cmp
add
inc
add
add
add
add
add
add
add
mov
add
add
add
add
rolb
add
add
add
add
add
add
add
add
sub
add
xor
add
cmp
add
inc
add
add
fs
add
insb
add
add
jl
add
test
add
lods
add
add
rolb
add
add
add
or
add
adc
add
sbb
add
and
add
xor
add
dec
push
add
push
push
add
pop
push
add
fs
add
insb
push
add
js
add
xchg
push
add
pushf
push
add
movsb
push
add
lods
push
add
mov
add
mov
push
add
in
add
in
push
add
clc
push
add
adc
add
sbb
add
sub
add
inc
pop
add
dec
pop
add
pop
pop
add
je
add
jl
add
test
add
mov
add
cwtl
pop
add
mov
add
mov
pop
add
int3
pop
add
aam
add
faddl
add
lock
add
cld
pop
add
add
add
add
add
or
add
adc
add
sbb
add
sub
add
inc
or
push
or
insb
or
je
add
orb
add
add
les
add
rorb
add
in
or
clc
or
adc
add
and
add
cmp
add
dec
or
or
jo
add
mov
add
xchg
or
mov
or
les
add
int3
or
fmuls
add
hlt
or
add
add
sbb
add
and
add
xor
add
dec
or
pop
or
je
add
jl
add
test
add
nop
or
cwtl
or
lods
or
rorb
add
in
add
lock
clc
or
or
add
xor
add
inc
or
push
or
insb
or
je
add
orb
add
add
les
add
rorb
add
in
or
clc
or
adc
add
and
add
add
dec
or
add
add
add
add
xchg
or
add
add
les
add
or
add
or
add
or
add
add
cmp
add
dec
or
add
jo
add
mov
add
mov
add
mov
or
add
in
or
add
cld
or
add
or
add
or
add
adc
add
adc
add
sbb
add
sbb
add
and
add
and
add
sub
add
sub
add
xor
add
xor
add
cmp
add
cmp
add
inc
and
inc
and
dec
and
dec
and
push
and
push
and
pop
and
pop
and
pusha
and
and
push
and
jo
add
je
add
js
add
jl
add
andb
add
add
mov
add
nop
and
xchg
and
cwtl
and
pushf
and
mov
and
test
add
lods
and
mov
add
mov
add
mov
and
shlb
add
and
enter
int3
and
shlb
add
aam
add
fsubs
add
fsubl
add
loopne
add
in
add
call
and
lock
hlt
and
clc
and
cld
and
add
add
add
add
or
add
or
add
adc
add
adc
add
sbb
add
and
add
sub
add
sub
add
xor
add
cmp
add
dec
and
fsubs
add
lock
sbb
add
js
add
mov
add
adc
add
xorb
add
xor
cmp
add
test
add
add
add
mov
add
test
add
shlb
add
xor
fdivl
add
loopne
add
in
add
call
xor
add
add
and
add
xor
add
inc
xor
add
xor
add
xor
add
xor
add
xor
add
push
add
lock
add
clc
push
add
cld
pop
add
add
add
add
or
add
add
adc
add
add
sbb
add
pop
add
les
add
pop
add
aam
add
fcompl
add
pop
add
in
pop
add
hlt
pop
add
cld
pop
add
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
cmp
add
inc
pop
add
dec
pop
add
fcompl
loopne
add
mov
add
mov
pop
add
rcrb
les
add
pop
add
int3
pop
add
rcrb
add
pop
add
fcomps
add
pop
add
loopne
add
in
add
call
pop
add
lock
add
hlt
pop
add
clc
pop
add
cld
pop
add
add
add
add
or
add
add
adc
add
add
sbb
add
add
and
add
add
sub
add
add
xor
add
add
cmp
add
add
inc
pusha
add
inc
pusha
add
dec
pusha
add
dec
pusha
add
push
pusha
add
push
pusha
add
pop
pusha
add
pop
pusha
add
pusha
pusha
add
jo
add
je
add
js
add
jl
add
andb
test
add
pusha
add
nop
pusha
add
xchg
pusha
add
mov
arpl
nop
arpl
enter
or
dec
fs
mov
enter
add
add
add
andb
shlb
add
add
data16
inc
data16
push
data16
mov
add
shlb
add
push
add
inc
push
add
pop
push
add
int3
push
add
aam
add
fsubrs
add
push
add
in
add
call
push
add
hlt
push
add
cld
push
add
test
add
jo
add
dec
insl
add
mov
add
outsb
add
shrb
add
jno
add
jb
add
add
enter
call
stos
add
and
add
sub
add
xor
add
cmp
add
inc
stos
add
inc
stos
add
dec
stos
add
dec
stos
add
push
stos
add
push
stos
add
push
in
add
in
add
in
add
cmp
add
dec
cmc
add
cltd
testb
add
add
mov
inc
mov
inc
fisttpll
out
popa
insb
or
sbbl
outsb
jns
push
cmpsl
aaa
push
mov
out
div
jb
xchg
add
or
in
loope
les
int3
and
pushf
xor
push
iret
inc
fidivrl
mov
xchg
mov
dec
fstpt
ja
loope
pop
roll
rcll
jno
xorb
inc
fidivrl
dec
adc
dec
aad
fstpt
mov
adc
fisttps
push
lahf
push
and
jl
je
out
sub
inc
mov
fnsave
and
sbbb
jmp
mov
or
or
jno
pusha
pop
repnz
jno
jecxz
inc
rcll
and
adcl
test
aam
sub
fwait
decb
icebp
add
push
fisttps
fsts
movsl
xor
xor
int
fsubrs
push
in
sbb
mov
adcb
mov
bound
adc
aaa
data16
imul
push
addr16
gs
dec
fwait
or
sbb
xor
cmp
add
arpl
cmc
push
adc
stos
xor
ret
push
lds
and
lret
lods
pop
fistl
sbb
push
dec
leave
pop
cmp
add
mov
inc
mov
cld
jl
jne
insb
rolb
inc
stos
enter
push
test
pop
enter
mov
mov
lock
bound
lahf
outsb
push
fstpt
pop
aad
sub
cmp
mov
in
sbb
adc
push
rcll
push
xchg
xor
inc
inc
and
push
movsb
or
test
inc
rolb
sarb
in
bound
add
setg
or
sbb
pop
mov
stos
aaa
cmpsl
ret
les
mov
dec
sub
push
lret
lods
pop
ret
jo
pusha
pop
repnz
dec
fnstcw
ja
loope
rcll
cmpsl
push
mov
lret
pop
ds
pop
fisttps
fnstenv
mov
fsubs
jne
out
add
inc
mov
adc
push
add
mov
inc
mov
mov
cld
jno
xorb
hlt
push
cld
ds
scas
leave
cmp
imul
sahf
or
cmpsb
mov
and
add
lahf
punpckhdq
sub
insb
ja
jbe
loopne
out
jns
mov
cmp
add
jle
jnp
in
or
sub
push
aad
ret
mov
jmp
push
pusha
pop
repnz
imul
adc
pusha
notb
cmpsb
shll
adc
ljmp
mov
cmp
sbb
movsl
xor
pop
int3
stos
xchg
cmp
mov
test
jno
xorb
xor
lods
cmp
lods
lret
inc
out
jnp
jns
jmp
sbb
xor
sbb
pop
jp
and
mov
out
loope
call
push
shlb
jo
imul
je
jns
jmp
mov
lock
mov
dec
sub
popf
in
lock
nop
push
popa
nop
outsb
mov
xchg
clc
jl
jne
jno
and
jbe
cmpl
adcl
test
inc
shlb
adc
lea
mov
push
fimull
ficompl
popf
adc
daa
mov
and
fs
push
lds
inc
mov
ret
pop
lret
scas
pop
ljmp
in
js
mov
mov
mov
and
pop
lods
push
pop
mov
outsb
test
int
mov
fimull
mov
std
test
sub
rcll
mov
pusha
pop
repnz
aad
shll
pop
lods
jl
test
pop
test
movl
xchg
add
pusha
push
mov
insl
jmp
push
in
psrld
test
stos
sahf
adc
in
sbb
jae
in
lret
mov
and
jnp
in
inc
mov
mov
and
out
inc
mov
das
mov
stos
lods
lret
inc
icebp
mov
mov
push
cmc
gs
pop
test
aad
test
jge
fs
pop
fstps
push
cmp
dec
xlat
pop
lret
scas
pop
xchg
and
xor
popf
or
cmp
mov
fcompl
test
mov
stos
cmp
pop
push
jge
negl
pop
negb
inc
and
cmp
sub
cmp
sub
dec
inc
int
and
jb
sbb
jo
xorl
in
lods
and
add
mov
dec
mov
fsubrs
cwtl
repz
lock
lret
jecxz
jmp
jge
ds
aas
pop
test
popa
nop
daa
adc
sbb
aad
out
lods
cmp
jmp
push
in
add
mov
stos
xor
int
mov
xchg
push
jbe
push
cld
xor
popf
jae
mov
dec
mov
repnz
mov
and
in
ret
inc
fidivrl
insb
or
repz
mov
test
mov
and
orl
cwtl
adc
pusha
notb
mov
and
out
mov
icebp
es
cmp
add
add
adcl
pop
leave
test
lock
js
ljmp
xchg
sahf
or
aas
and
mov
ficoml
mov
jg
pusha
inc
fdivl
in
xchg
or
in
xchg
adc
mov
fistps
mov
nop
push
popa
nop
js
mov
ficompl
fs
or
call
fwait
sub
mov
rorb
stos
and
jno
xorb
push
shlb
lds
fcoml
mov
test
push
test
in
bound
insb
or
mov
xor
loop
pop
loop
or
xor
stos
dec
fimuls
inc
flds
mov
addb
or
js
repnz
pop
repnz
testb
add
shrl
test
cmp
pop
stos
inc
inc
push
xor
daa
push
aad
sub
cmp
jb
xchg
ficomps
stos
pop
mov
fisttpl
fcompl
stos
pop
push
fimuls
adc
bound
aaa
shl
insb
loop
je
adc
rcrl
stos
data16
cmpsl
aaa
push
mov
decb
shll
xchg
mov
adcl
adc
roll
sarl
mov
dec
mov
adc
dec
lds
mov
dec
sub
jg
js
mov
mov
mov
lds
iret
daa
adc
add
jnp
jl
jne
add
insl
hlt
pop
orb
data16
push
in
add
ret
mov
das
.byte
.byte
pop
